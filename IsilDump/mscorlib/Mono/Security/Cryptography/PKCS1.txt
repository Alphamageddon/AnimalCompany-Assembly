Type: Mono.Security.Cryptography.PKCS1

Method: System.Boolean Compare(System.Byte[] array1, System.Byte[] array2)

Disassembly:
	0x0321BBF8 LDR W8, [X21 + 0x18]
	0x0321BBFC CBZ W8, 0x321BC24
	0x0321BC00 STR X22, [X21 + 0x20]
	0x0321BC04 MOV X0, X20
	0x0321BC08 MOV W1, W19
	0x0321BC0C LDP X20, X19, [X31 + 0x20]
	0x0321BC10 LDP X22, X21, [X31 + 0x10]
	0x0321BC14 MOV X2, X31
	0x0321BC18 LDP X30, X23, [X31], #0x30
	0x0321BC1C B 0x325209C
	0x0321BC20 BL 0x1C16F20
	0x0321BC24 BL 0x1C16F28
	0x0321BC28 STP X30, X21, [X31 - 0x20]!
	0x0321BC2C STP X20, X19, [X31 + 0x10]
	0x0321BC30 LDR X8, [X0]
	0x0321BC34 MOV X19, X0
	0x0321BC38 LDP X9, X2, [X8 + 0x188]
	0x0321BC3C MOV W1, W31
	0x0321BC40 BLR X9
	0x0321BC44 MOV X0, X19
	0x0321BC48 LDP X20, X19, [X31 + 0x10]
	0x0321BC4C MOV X1, X31
	0x0321BC50 LDP X30, X21, [X31], #0x20
	0x0321BC54 B 0x33CB4DC
	0x0321BC58 CMP W1, 0x1
	0x0321BC5C MOV X21, X0
	0x0321BC60 B.NE 0x321BC90
	0x0321BC64 MOV X0, X21
	0x0321BC68 BL 0x3EB1AD0
	0x0321BC6C LDR X20, [X0]
	0x0321BC70 BL 0x3EB1AE0
	0x0321BC74 MOV X0, X19
	0x0321BC78 MOV X1, X31
	0x0321BC7C BL 0x33CB4DC
	0x0321BC80 CBNZ X20, 0x321BC98

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {30}
	004 Compare X1, 0
	005 JumpIfEqual {30}
	006 Move W8, [X0+24]
	007 Move W9, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W10, W31
	011 Subtract W9, W31, W8
	012 Add W31, W9, W10
	013 Move X10, W10
	014 Add X8, X0, X10
	015 Add X12, X1, X10
	016 Move W11, [X8+32]
	017 Move W12, [X12+32]
	018 Add W13, W9, W10
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Add W31, W13, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W10, W10, 1
	024 Move W8, W31
	025 Move W8, 1
	026 Move W0, W8
	027 Move X30, [X31+16]
	028 Return X0
	029 Call 0x1C17F28
	030 Call 0x1C17F20

Method: System.Byte[] I2OSP(System.Byte[] x, System.Int32 size)

Disassembly:
	0x0321BC84 LDP X20, X19, [X31 + 0x10]
	0x0321BC88 LDP X30, X21, [X31], #0x20
	0x0321BC8C RET
	0x0321BC90 MOV X20, X31
	0x0321BC94 B 0x321BCA4
	0x0321BC98 MOV X0, X20
	0x0321BC9C BL 0x1C16F18
	0x0321BCA0 MOV X21, X0
	0x0321BCA4 MOV X0, X19
	0x0321BCA8 MOV X1, X31
	0x0321BCAC BL 0x33CB4DC
	0x0321BCB0 CBNZ X20, 0x321BCBC
	0x0321BCB4 MOV X0, X21
	0x0321BCB8 BL 0x1D2C690
	0x0321BCBC MOV X0, X20
	0x0321BCC0 BL 0x1C16F18
	0x0321BCC4 BL 0x1990590
	0x0321BCC8 STP X30, X23, [X31 - 0x30]!
	0x0321BCCC STP X22, X21, [X31 + 0x10]
	0x0321BCD0 STP X20, X19, [X31 + 0x20]
	0x0321BCD4 ADRP X20, 0x11C1000
	0x0321BCD8 ADRP X23, 0xF06000
	0x0321BCDC LDRB W8, [X20 + 0x2FE]
	0x0321BCE0 LDR X23, [X23 + 0xD90]
	0x0321BCE4 MOV X19, X0
	0x0321BCE8 TBNZ X8, 0x0, 0x321BD00
	0x0321BCEC ADRP X0, 0xF06000
	0x0321BCF0 LDR X0, [X0 + 0xD90]
	0x0321BCF4 BL 0x1C16CF4
	0x0321BCF8 MOVZ W8, 0x1
	0x0321BCFC STRB W8, [X20 + 0x2FE]
	0x0321BD00 LDR X8, [X19]
	0x0321BD04 MOV X0, X19
	0x0321BD08 LDP X9, X1, [X8 + 0x198]
	0x0321BD0C BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11C2000
	007 Move X22, 0xED9000
	008 Move W8, [X21+757]
	009 Move X22, [X22+1560]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xED9000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+757], W8
	021 Move X0, [X22]
	022 Move W1, W20
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {44}
	026 Compare X19, 0
	027 JumpIfEqual {44}
	028 Move W8, [X0+24]
	029 Move W4, [X19+24]
	030 Move X20, X0
	031 Move X0, X19
	032 Move W1, W31
	033 Subtract W3, W8, W4
	034 Move X2, X20
	035 Move X5, X31
	036 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	037 Move X0, X20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Byte[] OS2IP(System.Byte[] x)

Disassembly:
	0x0321BD10 LDR X8, [X19]
	0x0321BD14 ADD W20, W0, 0x1
	0x0321BD18 MOV X0, X19
	0x0321BD1C SBFM W21, W20, 0x1, 0x1F
	0x0321BD20 LDP X9, X1, [X8 + 0x198]
	0x0321BD24 BLR X9
	0x0321BD28 LDR X8, [X23]
	0x0321BD2C SUB W20, W0, W20, 0x1, ASR
	0x0321BD30 LDR W9, [X8 + 0xE0]
	0x0321BD34 CBNZ W9, 0x321BD40
	0x0321BD38 MOV X0, X8
	0x0321BD3C BL 0x1C16DFC
	0x0321BD40 ORR W0, W31, 0x10001
	0x0321BD44 BL 0x321BF30
	0x0321BD48 STR X0, [X19 + 0x60]
	0x0321BD4C LDR X0, [X23]
	0x0321BD50 LDR W8, [X0 + 0xE0]
	0x0321BD54 CBNZ W8, 0x321BD5C
	0x0321BD58 BL 0x1C16DFC
	0x0321BD5C MOV W0, W21
	0x0321BD60 BL 0x321BF88
	0x0321BD64 ORR W1, W31, 0x10001
	0x0321BD68 STR X0, [X19 + 0x30]
	0x0321BD6C BL 0x32217E0
	0x0321BD70 CMP W0, 0x1
	0x0321BD74 B.EQ 0x321BD4C
	0x0321BD78 B 0x321BDA8
	0x0321BD7C LDR X0, [X23]
	0x0321BD80 LDR X22, [X19 + 0x38]
	0x0321BD84 LDR W8, [X0 + 0xE0]
	0x0321BD88 CBNZ W8, 0x321BD90
	0x0321BD8C BL 0x1C16DFC
	0x0321BD90 MOV X0, X21
	0x0321BD94 MOV X1, X22
	0x0321BD98 BL 0x32214D8
	0x0321BD9C TBZ X0, 0x1F, 0x321BDA8
	0x0321BDA0 LDR X8, [X19 + 0x38]
	0x0321BDA4 STR X8, [X19 + 0x30]
	0x0321BDA8 LDR X0, [X23]
	0x0321BDAC LDR W8, [X0 + 0xE0]
	0x0321BDB0 CBNZ W8, 0x321BDB8
	0x0321BDB4 BL 0x1C16DFC
	0x0321BDB8 MOV W0, W20
	0x0321BDBC BL 0x321BF88
	0x0321BDC0 ORR W1, W31, 0x10001
	0x0321BDC4 STR X0, [X19 + 0x38]
	0x0321BDC8 BL 0x32217E0
	0x0321BDCC CMP W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C2000
	006 Move W8, [X20+758]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xED9000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+758], W8
	017 Compare X19, 0
	018 JumpIfEqual {55}
	019 Move W8, [X19+24]
	020 Move X9, X31
	021 Move X10, W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X21, X9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X9, X19, X9
	026 Move W11, [X9+32]
	027 Move X9, X21
	028 Compare W11, 0
	029 JumpIfEqual {22}
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, 0xED9000
	032 Move X9, [X9+1560]
	033 Subtract W8, W8, W21
	034 Add W1, W8, 1
	035 Move X0, [X9]
	036 Call 0x1C17D6C
	037 Compare X0, 0
	038 JumpIfEqual {55}
	039 Move W4, [X0+24]
	040 Move X20, X0
	041 Subtract X1, X21, 1
	042 Move X0, X19
	043 Move X2, X20
	044 Move W3, W31
	045 Move X5, X31
	046 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	047 Move X19, X20
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1C17F28
	055 Call 0x1C17F20

Method: System.Byte[] RSAVP1(System.Security.Cryptography.RSA rsa, System.Byte[] s)

Disassembly:
	0x0321BDD0 B.EQ 0x321BDA8
	0x0321BDD4 LDR X0, [X23]
	0x0321BDD8 LDP X22, X21, [X19 + 0x30]
	0x0321BDDC LDR W8, [X0 + 0xE0]
	0x0321BDE0 CBNZ W8, 0x321BDE8
	0x0321BDE4 BL 0x1C16DFC
	0x0321BDE8 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 Move X3, [X8+472]
	006 Move X2, [X8+480]
	007 Move X30, [X31+16]
	008 CallNoReturn X3
	009 Call 0x1C17F20

Method: System.Boolean Verify_v15(System.Security.Cryptography.RSA rsa, System.Security.Cryptography.HashAlgorithm hash, System.Byte[] hashValue, System.Byte[] signature)

Disassembly:
	0x0321BDEC MOV X1, X21
	0x0321BDF0 BL 0x321BFF8
	0x0321BDF4 TBZ X0, 0x0, 0x321BDA8
	0x0321BDF8 LDR X0, [X23]
	0x0321BDFC LDP X22, X21, [X19 + 0x30]
	0x0321BE00 LDR W8, [X0 + 0xE0]
	0x0321BE04 CBNZ W8, 0x321BE0C
	0x0321BE08 BL 0x1C16DFC
	0x0321BE0C MOV X0, X22
	0x0321BE10 MOV X1, X21
	0x0321BE14 BL 0x321C0A8
	0x0321BE18 STR X0, [X19 + 0x58]
	0x0321BE1C CBZ X0, 0x321BF2C
	0x0321BE20 BL 0x321C250
	0x0321BE24 LDR X8, [X19]
	0x0321BE28 MOV W22, W0
	0x0321BE2C MOV X0, X19
	0x0321BE30 LDP X9, X1, [X8 + 0x198]
	0x0321BE34 BLR X9
	0x0321BE38 LDR X21, [X19 + 0x30]
	0x0321BE3C CMP W22, W0
	0x0321BE40 B.NE 0x321BD7C
	0x0321BE44 LDR X0, [X23]
	0x0321BE48 LDR W8, [X0 + 0xE0]
	0x0321BE4C CBNZ W8, 0x321BE54
	0x0321BE50 BL 0x1C16DFC
	0x0321BE54 MOVZ W0, 0x1
	0x0321BE58 BL 0x321C2D0
	0x0321BE5C MOV X1, X0
	0x0321BE60 MOV X0, X21
	0x0321BE64 BL 0x321C374
	0x0321BE68 LDR X21, [X19 + 0x38]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x11C2000
	009 Move X24, 0xF07000
	010 Move W8, [X23+759]
	011 Move X24, [X24+3416]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xF07000
	021 Move X0, [X0+3416]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+759], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move W4, W31
	041 Move X30, [X31+64]

Method: System.Boolean Verify_v15(System.Security.Cryptography.RSA rsa, System.String hashName, System.Byte[] hashValue, System.Byte[] signature)

Disassembly:
	0x0321C044 BL 0x1C16DFC
	0x0321C048 MOV X0, X31
	0x0321C04C MOV X1, X20
	0x0321C050 BL 0x321C64C
	0x0321C054 TBNZ X0, 0x0, 0x321C078
	0x0321C058 LDR X0, [X21]
	0x0321C05C LDR W8, [X0 + 0xE0]
	0x0321C060 CBNZ W8, 0x321C068
	0x0321C064 BL 0x1C16DFC
	0x0321C068 MOV X0, X31
	0x0321C06C MOV X1, X19
	0x0321C070 BL 0x321C64C
	0x0321C074 TBZ X0, 0x0, 0x321C088
	0x0321C078 MOVZ W0, 0x1
	0x0321C07C B 0x321C09C
	0x0321C080 MOV W0, W31
	0x0321C084 B 0x321C09C
	0x0321C088 MOV X0, X20
	0x0321C08C MOV X1, X19
	0x0321C090 BL 0x32214D8
	0x0321C094 CMP W0, 0x0
	0x0321C098 CSET W0, NE
	0x0321C09C LDP X20, X19, [X31 + 0x10]
	0x0321C0A0 LDP X30, X21, [X31], #0x20
	0x0321C0A4 RET
	0x0321C0A8 SUB X31, X31, 0x40
	0x0321C0AC STP X30, X23, [X31 + 0x10]
	0x0321C0B0 STP X22, X21, [X31 + 0x20]
	0x0321C0B4 STP X20, X19, [X31 + 0x30]
	0x0321C0B8 ADRP X22, 0x11C0000
	0x0321C0BC ADRP X21, 0xF05000
	0x0321C0C0 LDRB W8, [X22 + 0x320]
	0x0321C0C4 LDR X21, [X21 + 0xD90]
	0x0321C0C8 MOV X20, X1
	0x0321C0CC MOV X19, X0
	0x0321C0D0 TBNZ X8, 0x0, 0x321C0E8
	0x0321C0D4 ADRP X0, 0xF05000
	0x0321C0D8 LDR X0, [X0 + 0xD90]
	0x0321C0DC BL 0x1C16CF4
	0x0321C0E0 MOVZ W8, 0x1
	0x0321C0E4 STRB W8, [X22 + 0x320]
	0x0321C0E8 LDR X0, [X21]
	0x0321C0EC LDR W8, [X0 + 0xE0]
	0x0321C0F0 CBNZ W8, 0x321C0F8
	0x0321C0F4 BL 0x1C16DFC
	0x0321C0F8 MOV X0, X19
	0x0321C0FC MOV W1, W31
	0x0321C100 BL 0x321FE58
	0x0321C104 TBNZ X0, 0x0, 0x321C128
	0x0321C108 LDR X0, [X21]
	0x0321C10C LDR W8, [X0 + 0xE0]
	0x0321C110 CBNZ W8, 0x321C118
	0x0321C114 BL 0x1C16DFC
	0x0321C118 MOV X0, X20
	0x0321C11C MOV W1, W31
	0x0321C120 BL 0x321FE58
	0x0321C124 TBZ X0, 0x0, 0x321C150
	0x0321C128 LDR X0, [X21]
	0x0321C12C LDR W8, [X0 + 0xE0]
	0x0321C130 CBNZ W8, 0x321C138
	0x0321C134 BL 0x1C16DFC
	0x0321C138 LDP X20, X19, [X31 + 0x30]
	0x0321C13C LDP X22, X21, [X31 + 0x20]
	0x0321C140 LDP X30, X23, [X31 + 0x10]
	0x0321C144 MOV W0, W31
	0x0321C148 ADD X31, X31, 0x40
	0x0321C14C B 0x321C2D0
	0x0321C150 CBZ X19, 0x321C1E4
	0x0321C154 LDR X8, [X19 + 0x18]
	0x0321C158 CBZ X8, 0x321C1E4
	0x0321C15C LDR W22, [X19 + 0x10]
	0x0321C160 LDRSW X8, [X8 + 0x18]
	0x0321C164 CMP X8, X22
	0x0321C168 B.LT 0x321C1E8
	0x0321C16C CBZ X20, 0x321C1E4
	0x0321C170 LDR X8, [X20 + 0x18]
	0x0321C174 CBZ X8, 0x321C1E4
	0x0321C178 LDR W23, [X20 + 0x10]
	0x0321C17C LDRSW X8, [X8 + 0x18]
	0x0321C180 CMP X8, X23
	0x0321C184 B.LT 0x321C208
	0x0321C188 LDR X0, [X21]
	0x0321C18C BL 0x1C16F10
	0x0321C190 ADD W2, W23, W22
	0x0321C194 MOV X21, X0
	0x0321C198 BL 0x32211F0
	0x0321C19C CBZ X21, 0x321C1E4
	0x0321C1A0 LDR W5, [X20 + 0x10]
	0x0321C1A4 LDR X3, [X20 + 0x18]
	0x0321C1A8 LDR W2, [X19 + 0x10]
	0x0321C1AC LDR X0, [X19 + 0x18]
	0x0321C1B0 LDR X6, [X21 + 0x18]
	0x0321C1B4 MOV W1, W31
	0x0321C1B8 MOV W4, W31
	0x0321C1BC MOV W7, W31
	0x0321C1C0 BL 0x3221CAC
	0x0321C1C4 MOV X0, X21
	0x0321C1C8 BL 0x32213F8
	0x0321C1CC MOV X0, X21
	0x0321C1D0 LDP X20, X19, [X31 + 0x30]
	0x0321C1D4 LDP X22, X21, [X31 + 0x20]
	0x0321C1D8 LDP X30, X23, [X31 + 0x10]
	0x0321C1DC ADD X31, X31, 0x40
	0x0321C1E0 RET
	0x0321C1E4 BL 0x1C16F20
	0x0321C1E8 ADRP X0, 0xEE1000
	0x0321C1EC LDR X0, [X0 + 0xF78]
	0x0321C1F0 BL 0x1C16D08
	0x0321C1F4 BL 0x1C16F10
	0x0321C1F8 MOV X19, X0
	0x0321C1FC ADRP X0, 0xF05000
	0x0321C200 LDR X0, [X0 + 0x540]
	0x0321C204 B 0x321C224
	0x0321C208 ADRP X0, 0xEE1000
	0x0321C20C LDR X0, [X0 + 0xF78]
	0x0321C210 BL 0x1C16D08
	0x0321C214 BL 0x1C16F10
	0x0321C218 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x11C1000
	009 Move X24, 0xF06000
	010 Move W8, [X23+760]
	011 Move X24, [X24+3416]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X19, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xED8000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xF06000
	024 Move X0, [X0+3416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+760], W8
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X23, 0xED8000
	034 Move X23, [X23+3584]
	035 Move X0, X19
	036 Call PKCS1.CreateFromName, X0
	037 Move X8, [X24]
	038 Move X19, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X22
	045 Move X1, X19
	046 Move X2, X21
	047 Move X3, X20
	048 Move W4, W31
	049 Call PKCS1.Verify_v15, X0, X1, X2, X3, X4
	050 Move W21, W0
	051 Move X20, X31
	052 Compare X19, 0
	053 JumpIfEqual {75}
	054 Move X8, [X19]
	055 Move X1, [X23]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X19
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X19
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X20, 0
	076 JumpIfNotEqual {86}
	077 And W0, W21, 1
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return X0
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Move X21, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X21
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move W21, W31
	095 Compare X19, 0
	096 JumpIfNotEqual {54}
	097 Move X20, X31
	098 Move X21, X0
	099 Compare X19, 0
	100 JumpIfEqual {122}
	101 Move X8, [X19]
	102 Move X1, [X23]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X20, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X21
	125 Call 0x1D2D690
	126 Move X0, X20
	127 Call 0x1C17F18
	128 Call 0x1991590

Method: System.Boolean Verify_v15(System.Security.Cryptography.RSA rsa, System.Security.Cryptography.HashAlgorithm hash, System.Byte[] hashValue, System.Byte[] signature, System.Boolean tryNonStandardEncoding)

Disassembly:
	0x0321BE6C MOV X20, X0
	0x0321BE70 MOVZ W0, 0x1
	0x0321BE74 BL 0x321C2D0
	0x0321BE78 MOV X1, X0
	0x0321BE7C MOV X0, X21
	0x0321BE80 BL 0x321C374
	0x0321BE84 MOV X21, X0
	0x0321BE88 MOV X0, X20
	0x0321BE8C MOV X1, X21
	0x0321BE90 BL 0x321C0A8
	0x0321BE94 LDR X8, [X19 + 0x60]
	0x0321BE98 CBZ X8, 0x321BF2C
	0x0321BE9C MOV X1, X0
	0x0321BEA0 MOV X0, X8
	0x0321BEA4 BL 0x3222C00
	0x0321BEA8 MOV X1, X20
	0x0321BEAC STR X0, [X19 + 0x28]
	0x0321BEB0 BL 0x321C4E4
	0x0321BEB4 LDR X8, [X19 + 0x28]
	0x0321BEB8 STR X0, [X19 + 0x40]
	0x0321BEBC MOV X1, X21
	0x0321BEC0 MOV X0, X8
	0x0321BEC4 BL 0x321C4E4
	0x0321BEC8 LDR X8, [X19 + 0x38]
	0x0321BECC STR X0, [X19 + 0x48]
	0x0321BED0 CBZ X8, 0x321BF2C
	0x0321BED4 LDR X1, [X19 + 0x30]
	0x0321BED8 MOV X0, X8
	0x0321BEDC BL 0x3222C00
	0x0321BEE0 LDR X8, [X19 + 0x68]
	0x0321BEE4 MOVZ W9, 0x1
	0x0321BEE8 STR X0, [X19 + 0x50]
	0x0321BEEC STRB W9, [X19 + 0x22]
	0x0321BEF0 STRB W9, [X19 + 0x20]
	0x0321BEF4 CBZ X8, 0x321BF1C
	0x0321BEF8 LDR X4, [X8 + 0x18]
	0x0321BEFC LDR X0, [X8 + 0x40]
	0x0321BF00 LDR X3, [X8 + 0x28]
	0x0321BF04 MOV X1, X19
	0x0321BF08 LDP X20, X19, [X31 + 0x20]
	0x0321BF0C LDP X22, X21, [X31 + 0x10]
	0x0321BF10 MOV X2, X31
	0x0321BF14 LDP X30, X23, [X31], #0x30
	0x0321BF18 BR X4
	0x0321BF1C LDP X20, X19, [X31 + 0x20]
	0x0321BF20 LDP X22, X21, [X31 + 0x10]
	0x0321BF24 LDP X30, X23, [X31], #0x30
	0x0321BF28 RET
	0x0321BF2C BL 0x1C16F20
	0x0321BF30 STP X30, X21, [X31 - 0x20]!
	0x0321BF34 STP X20, X19, [X31 + 0x10]
	0x0321BF38 ADRP X20, 0x11C1000
	0x0321BF3C ADRP X21, 0xF06000
	0x0321BF40 LDRB W8, [X20 + 0x31D]
	0x0321BF44 LDR X21, [X21 + 0xD90]
	0x0321BF48 MOV W19, W0
	0x0321BF4C TBNZ X8, 0x0, 0x321BF64
	0x0321BF50 ADRP X0, 0xF06000
	0x0321BF54 LDR X0, [X0 + 0xD90]
	0x0321BF58 BL 0x1C16CF4
	0x0321BF5C MOVZ W8, 0x1
	0x0321BF60 STRB W8, [X20 + 0x31D]
	0x0321BF64 LDR X0, [X21]
	0x0321BF68 BL 0x1C16F10
	0x0321BF6C MOV W1, W19
	0x0321BF70 MOV X20, X0
	0x0321BF74 BL 0x3221450
	0x0321BF78 MOV X0, X20
	0x0321BF7C LDP X20, X19, [X31 + 0x10]
	0x0321BF80 LDP X30, X21, [X31], #0x20
	0x0321BF84 RET
	0x0321BF88 STP X30, X21, [X31 - 0x20]!
	0x0321BF8C STP X20, X19, [X31 + 0x10]
	0x0321BF90 ADRP X20, 0x11C1000
	0x0321BF94 ADRP X21, 0xF06000
	0x0321BF98 LDRB W8, [X20 + 0x330]
	0x0321BF9C LDR X21, [X21 + 0xD98]
	0x0321BFA0 MOV W19, W0
	0x0321BFA4 TBNZ X8, 0x0, 0x321BFBC
	0x0321BFA8 ADRP X0, 0xF06000
	0x0321BFAC LDR X0, [X0 + 0xD98]
	0x0321BFB0 BL 0x1C16CF4
	0x0321BFB4 MOVZ W8, 0x1
	0x0321BFB8 STRB W8, [X20 + 0x330]
	0x0321BFBC LDR X0, [X21]
	0x0321BFC0 BL 0x1C16F10
	0x0321BFC4 MOV X1, X31
	0x0321BFC8 MOV X20, X0
	0x0321BFCC BL 0x33BDD8C
	0x0321BFD0 CBZ X20, 0x321BFF0
	0x0321BFD4 LDR X8, [X20]
	0x0321BFD8 MOV X0, X20
	0x0321BFDC MOV W1, W19
	0x0321BFE0 LDP X20, X19, [X31 + 0x10]
	0x0321BFE4 LDP X3, X2, [X8 + 0x1A8]
	0x0321BFE8 LDP X30, X21, [X31], #0x20
	0x0321BFEC BR X3
	0x0321BFF0 BL 0x1C16F20
	0x0321BFF4 B 0x32217E0
	0x0321BFF8 STP X30, X21, [X31 - 0x20]!
	0x0321BFFC STP X20, X19, [X31 + 0x10]
	0x0321C000 ADRP X21, 0x11C0000
	0x0321C004 LDRB W8, [X21 + 0x32A]
	0x0321C008 MOV X19, X1
	0x0321C00C MOV X20, X0
	0x0321C010 TBNZ X8, 0x0, 0x321C028
	0x0321C014 ADRP X0, 0xF05000
	0x0321C018 LDR X0, [X0 + 0xD90]
	0x0321C01C BL 0x1C16CF4
	0x0321C020 MOVZ W8, 0x1
	0x0321C024 STRB W8, [X21 + 0x32A]
	0x0321C028 CMP X20, X19
	0x0321C02C B.EQ 0x321C080
	0x0321C030 ADRP X21, 0xF05000
	0x0321C034 LDR X21, [X21 + 0xD90]
	0x0321C038 LDR X0, [X21]
	0x0321C03C LDR W8, [X0 + 0xE0]
	0x0321C040 CBNZ W8, 0x321C048

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x11C2000
	010 Move W8, [X24+761]
	011 Move W21, W4
	012 Move X23, X3
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xED9000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xF07000
	024 Move X0, [X0+3416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+761], W8
	028 Compare X20, 0
	029 JumpIfEqual {144}
	030 Move X8, [X20]
	031 Move X25, 0xF07000
	032 Move X0, X20
	033 Move X9, [X8+408]
	034 Move X1, [X8+416]
	035 Move X25, [X25+3416]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X25]
	038 NotImplemented "Instruction SBFM not yet implemented."
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X23
	045 Call PKCS1.OS2IP, X0
	046 Move X8, [X20]
	047 Move X1, X0
	048 Move X0, X20
	049 Move X9, [X8+472]
	050 Move X2, [X8+480]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move W1, W24
	053 Call PKCS1.I2OSP, X0, X1
	054 Move X20, X0
	055 Move X0, X22
	056 Move X1, X19
	057 Move W2, W24
	058 Call PKCS1.Encode_v15, X0, X1, X2
	059 Move X1, X20
	060 Call PKCS1.Compare, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {102}
	065 Move TEMP, X21
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {102}
	069 Compare X20, 0
	070 JumpIfEqual {144}
	071 Move W8, [X20+24]
	072 Compare W8, 0
	073 JumpIfEqual {143}
	074 Move W9, [X20+32]
	075 Compare W9, 0
	076 JumpIfNotEqual {101}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W9, [X20+33]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Compare X19, 0
	081 JumpIfEqual {144}
	082 Move W1, [X19+24]
	083 Move W9, 2
	084 NotImplemented "Instruction ORN not yet implemented."
	085 Add W10, W10, W8
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W9, 2
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X10, X20, W9
	092 Move W10, [X10+32]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add W9, W9, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add X8, X20, W22
	098 Move W8, [X8+32]
	099 Compare W8, 0
	100 JumpIfEqual {112}
	101 Move W0, W31
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 And W0, W0, 1
	109 Move X30, [X31+64]
	110 Move X25, [X31+72]
	111 Return X0
	112 Move X8, 0xED9000
	113 Move X8, [X8+1560]
	114 Move X0, [X8]
	115 Call 0x1C17D6C
	116 Compare X0, 0
	117 JumpIfEqual {144}
	118 Move W4, [X0+24]
	119 Move X21, X0
	120 Add W1, W22, 1
	121 Move X0, X20
	122 Move X2, X21
	123 Move W3, W31
	124 Move X5, X31
	125 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	126 Move X0, [X25]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X21
	132 Move X1, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X30, [X31+64]
	140 Move X25, [X31+72]
	141 Call PKCS1.Compare, X0, X1
	142 Return X0
	143 Call 0x1C17F28
	144 Call 0x1C17F20

Method: System.Byte[] Encode_v15(System.Security.Cryptography.HashAlgorithm hash, System.Byte[] hashValue, System.Int32 emLength)

Disassembly:
	0x0321C608 TBZ X0, 0x0, 0x321C624
	0x0321C60C MOVZ W0, 0x1
	0x0321C610 B 0x321C618
	0x0321C614 MOV W0, W31
	0x0321C618 LDP X20, X19, [X31 + 0x10]
	0x0321C61C LDP X30, X21, [X31], #0x20
	0x0321C620 RET
	0x0321C624 LDR X0, [X21]
	0x0321C628 LDR X19, [X19 + 0x58]
	0x0321C62C LDR W8, [X0 + 0xE0]
	0x0321C630 CBNZ W8, 0x321C638
	0x0321C634 BL 0x1C16DFC
	0x0321C638 MOV X0, X19
	0x0321C63C LDP X20, X19, [X31 + 0x10]
	0x0321C640 MOV X1, X31
	0x0321C644 LDP X30, X21, [X31], #0x20
	0x0321C648 B 0x321C64C
	0x0321C64C STP X30, X21, [X31 - 0x20]!
	0x0321C650 STP X20, X19, [X31 + 0x10]
	0x0321C654 ADRP X21, 0x11C0000
	0x0321C658 LDRB W8, [X21 + 0x329]
	0x0321C65C MOV X19, X1
	0x0321C660 MOV X20, X0
	0x0321C664 TBNZ X8, 0x0, 0x321C67C
	0x0321C668 ADRP X0, 0xF05000
	0x0321C66C LDR X0, [X0 + 0xD90]
	0x0321C670 BL 0x1C16CF4
	0x0321C674 MOVZ W8, 0x1
	0x0321C678 STRB W8, [X21 + 0x329]
	0x0321C67C CMP X20, X19
	0x0321C680 B.EQ 0x321C6D4
	0x0321C684 ADRP X21, 0xF05000
	0x0321C688 LDR X21, [X21 + 0xD90]
	0x0321C68C LDR X0, [X21]
	0x0321C690 LDR W8, [X0 + 0xE0]
	0x0321C694 CBNZ W8, 0x321C69C
	0x0321C698 BL 0x1C16DFC
	0x0321C69C MOV X0, X31
	0x0321C6A0 MOV X1, X20
	0x0321C6A4 BL 0x321C64C
	0x0321C6A8 TBNZ X0, 0x0, 0x321C6CC
	0x0321C6AC LDR X0, [X21]
	0x0321C6B0 LDR W8, [X0 + 0xE0]
	0x0321C6B4 CBNZ W8, 0x321C6BC
	0x0321C6B8 BL 0x1C16DFC
	0x0321C6BC MOV X0, X31
	0x0321C6C0 MOV X1, X19
	0x0321C6C4 BL 0x321C64C
	0x0321C6C8 TBZ X0, 0x0, 0x321C6DC
	0x0321C6CC MOV W0, W31
	0x0321C6D0 B 0x321C6F0
	0x0321C6D4 MOVZ W0, 0x1
	0x0321C6D8 B 0x321C6F0
	0x0321C6DC MOV X0, X20
	0x0321C6E0 MOV X1, X19
	0x0321C6E4 BL 0x32214D8
	0x0321C6E8 CMP W0, 0x0
	0x0321C6EC CSET W0, EQ
	0x0321C6F0 LDP X20, X19, [X31 + 0x10]
	0x0321C6F4 LDP X30, X21, [X31], #0x20
	0x0321C6F8 RET
	0x0321C6FC STP X30, X21, [X31 - 0x20]!
	0x0321C700 STP X20, X19, [X31 + 0x10]
	0x0321C704 ADRP X21, 0x11C0000
	0x0321C708 LDRB W8, [X21 + 0x300]
	0x0321C70C MOV X20, X1
	0x0321C710 MOV X19, X0
	0x0321C714 TBNZ X8, 0x0, 0x321C72C
	0x0321C718 ADRP X0, 0xF05000
	0x0321C71C LDR X0, [X0 + 0xD90]
	0x0321C720 BL 0x1C16CF4
	0x0321C724 MOVZ W8, 0x1
	0x0321C728 STRB W8, [X21 + 0x300]
	0x0321C72C LDRB W8, [X19 + 0x23]
	0x0321C730 CBNZ W8, 0x321C7BC
	0x0321C734 ADRP X21, 0xF05000
	0x0321C738 LDRB W8, [X19 + 0x22]
	0x0321C73C LDR X21, [X21 + 0xD90]
	0x0321C740 CBNZ W8, 0x321C74C
	0x0321C744 MOV X0, X19
	0x0321C748 BL 0x321BCC8
	0x0321C74C LDR X0, [X21]
	0x0321C750 BL 0x1C16F10
	0x0321C754 MOV X1, X20
	0x0321C758 MOV X21, X0
	0x0321C75C BL 0x321C804
	0x0321C760 CBZ X21, 0x321C7B8
	0x0321C764 LDP X2, X1, [X19 + 0x58]
	0x0321C768 MOV X0, X21
	0x0321C76C BL 0x321CA14
	0x0321C770 LDR X8, [X19]
	0x0321C774 MOV X20, X0
	0x0321C778 MOV X0, X19
	0x0321C77C LDP X9, X1, [X8 + 0x198]
	0x0321C780 BLR X9
	0x0321C784 SBFM W2, W0, 0x3, 0x1F
	0x0321C788 MOV X1, X20
	0x0321C78C BL 0x321CA8C
	0x0321C790 MOV X19, X0
	0x0321C794 MOV X0, X21
	0x0321C798 BL 0x321CB3C
	0x0321C79C CBZ X20, 0x321C7B8
	0x0321C7A0 MOV X0, X20
	0x0321C7A4 BL 0x321CB3C
	0x0321C7A8 MOV X0, X19
	0x0321C7AC LDP X20, X19, [X31 + 0x10]
	0x0321C7B0 LDP X30, X21, [X31], #0x20
	0x0321C7B4 RET
	0x0321C7B8 BL 0x1C16F20
	0x0321C7BC ADRP X0, 0xF00000
	0x0321C7C0 LDR X0, [X0 + 0x4B8]
	0x0321C7C4 BL 0x1C16D08
	0x0321C7C8 BL 0x1C16F10
	0x0321C7CC MOV X19, X0
	0x0321C7D0 ADRP X0, 0xF05000
	0x0321C7D4 LDR X0, [X0 + 0x588]
	0x0321C7D8 BL 0x1C16D08
	0x0321C7DC MOV X1, X0
	0x0321C7E0 MOV X0, X19
	0x0321C7E4 MOV X2, X31
	0x0321C7E8 BL 0x338C448
	0x0321C7EC ADRP X0, 0xF05000
	0x0321C7F0 LDR X0, [X0 + 0xDC0]
	0x0321C7F4 BL 0x1C16D08
	0x0321C7F8 MOV X1, X0
	0x0321C7FC MOV X0, X19
	0x0321C800 BL 0x1C16DEC
	0x0321C804 STP X30, X21, [X31 - 0x20]!
	0x0321C808 STP X20, X19, [X31 + 0x10]
	0x0321C80C ADRP X21, 0x11C0000
	0x0321C810 LDRB W8, [X21 + 0x31B]
	0x0321C814 MOV X20, X1
	0x0321C818 MOV X19, X0
	0x0321C81C TBNZ X8, 0x0, 0x321C840
	0x0321C820 ADRP X0, 0xED7000
	0x0321C824 LDR X0, [X0 + 0x618]
	0x0321C828 BL 0x1C16CF4
	0x0321C82C ADRP X0, 0xF00000
	0x0321C830 LDR X0, [X0 + 0xD08]
	0x0321C834 BL 0x1C16CF4
	0x0321C838 MOVZ W8, 0x1
	0x0321C83C STRB W8, [X21 + 0x31B]
	0x0321C840 MOVZ W8, 0x1
	0x0321C844 MOV X0, X19
	0x0321C848 MOV X1, X31
	0x0321C84C STR W8, [X19 + 0x10]
	0x0321C850 BL 0x33BDD8C
	0x0321C854 CBZ X20, 0x321CA10
	0x0321C858 LDR X8, [X20 + 0x18]
	0x0321C85C CBNZ X8, 0x321C87C
	0x0321C860 ADRP X8, 0xED7000
	0x0321C864 LDR X8, [X8 + 0x618]
	0x0321C868 MOVZ W1, 0x1
	0x0321C86C LDR X0, [X8]
	0x0321C870 BL 0x1C16D6C
	0x0321C874 MOV X20, X0
	0x0321C878 CBZ X0, 0x321CA10
	0x0321C87C LDR W8, [X20 + 0x18]
	0x0321C880 ADRP X9, 0xF00000
	0x0321C884 LDR X9, [X9 + 0xD08]
	0x0321C888 UBFM W10, W8, 0x2, 0x1F
	0x0321C88C ANDS W21, W8, 0x3
	0x0321C890 CINC W1, W10, NE
	0x0321C894 STR W1, [X19 + 0x10]
	0x0321C898 LDR X0, [X9]
	0x0321C89C BL 0x1C16D6C
	0x0321C8A0 STR X0, [X19 + 0x18]
	0x0321C8A4 LDR X8, [X20 + 0x18]
	0x0321C8A8 SUB W11, W8, 0x1
	0x0321C8AC CMP W11, 0x3
	0x0321C8B0 B.LT 0x321C940
	0x0321C8B4 MOV X9, X31
	0x0321C8B8 AND X10, X8, 0x0
	0x0321C8BC MOV W12, W11
	0x0321C8C0 ADD X11, X0, 0x20
	0x0321C8C4 SUB X13, X12, 0x3
	0x0321C8C8 CMP X13, X10
	0x0321C8CC B.CS 0x321CA0C
	0x0321C8D0 SUB X13, X12, 0x2
	0x0321C8D4 CMP X13, X10
	0x0321C8D8 B.CS 0x321CA0C
	0x0321C8DC SUB X13, X12, 0x1
	0x0321C8E0 CMP X13, X10
	0x0321C8E4 B.CS 0x321CA0C
	0x0321C8E8 CMP X12, X10
	0x0321C8EC B.CS 0x321CA0C
	0x0321C8F0 CBZ X0, 0x321CA10
	0x0321C8F4 LDR W13, [X0 + 0x18]
	0x0321C8F8 CMP X9, X13
	0x0321C8FC B.CS 0x321CA0C
	0x0321C900 ADD X13, X20, X12
	0x0321C904 LDRB W14, [X13 + 0x1D]
	0x0321C908 LDRB W13, [X13 + 0x1E]
	0x0321C90C ADD X15, X20, X12
	0x0321C910 LDRB W15, [X15 + 0x1F]
	0x0321C914 UBFM W14, W14, 0x8, 0x7
	0x0321C918 BFM W14, W13, 0x10, 0x7
	0x0321C91C ADD X13, X20, X12
	0x0321C920 LDRB W13, [X13 + 0x20]
	0x0321C924 BFM W14, W15, 0x18, 0x7
	0x0321C928 CMP X12, 0x6
	0x0321C92C SUB X12, X12, 0x4
	0x0321C930 ORR W13, W14, W13, 0x0
	0x0321C934 STR W13, [X11, X9, LSL #2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x11C1000
	009 Move W8, [X22+762]
	010 Move W19, W2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xF06000
	018 Move X0, [X0+3112]
	019 Call 0x1C17CF4
	020 Move X0, 0xED8000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xF05000
	024 Move X0, [X0+3032]
	025 Call 0x1C17CF4
	026 Move X0, 0xED8000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+762], W8
	031 Compare X20, 0
	032 JumpIfEqual {201}
	033 Compare X21, 0
	034 JumpIfEqual {201}
	035 Move X8, [X21]
	036 Move X0, X21
	037 Move X9, [X8+472]
	038 Move X1, [X8+480]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move W23, [X20+24]
	042 Move W22, W0
	043 Move X0, X21
	044 Move X9, [X8+360]
	045 Move X1, [X8+368]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X21, X0
	049 Move X23, 0xF05000
	050 Move X23, [X23+3032]
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Call CryptoConfig.MapNameToOID, X0
	059 Move X21, X20
	060 Compare X0, 0
	061 JumpIfEqual {134}
	062 Move X24, 0xF06000
	063 Move X24, [X24+3112]
	064 Move X22, X0
	065 Move X0, [X24]
	066 Call 0x1C17F10
	067 Move W1, 48
	068 Move X2, X31
	069 Move X21, X0
	070 Call ASN1..ctor, X0, X1
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X22
	077 Move X1, X31
	078 Call CryptoConfig.EncodeOID, X0
	079 Move X8, [X24]
	080 Move X23, X0
	081 Move X0, X8
	082 Call 0x1C17F10
	083 Move X1, X23
	084 Move X2, X31
	085 Move X22, X0
	086 Call ASN1..ctor, X0, X1
	087 Compare X21, 0
	088 JumpIfEqual {201}
	089 Move X0, X21
	090 Move X1, X22
	091 Move X2, X31
	092 Call ASN1.Add, X0, X1
	093 Move X0, [X24]
	094 Call 0x1C17F10
	095 Move W1, 5
	096 Move X2, X31
	097 Move X22, X0
	098 Call ASN1..ctor, X0, X1
	099 Move X0, X21
	100 Move X1, X22
	101 Move X2, X31
	102 Call ASN1.Add, X0, X1
	103 Move X0, [X24]
	104 Call 0x1C17F10
	105 Move W1, 4
	106 Move X2, X20
	107 Move X3, X31
	108 Move X22, X0
	109 Call ASN1..ctor, X0, X1, X2
	110 Move X0, [X24]
	111 Call 0x1C17F10
	112 Move W1, 48
	113 Move X2, X31
	114 Move X23, X0
	115 Call ASN1..ctor, X0, X1
	116 Compare X23, 0
	117 JumpIfEqual {201}
	118 Move X0, X23
	119 Move X1, X21
	120 Move X2, X31
	121 Call ASN1.Add, X0, X1
	122 Move X0, X23
	123 Move X1, X22
	124 Move X2, X31
	125 Call ASN1.Add, X0, X1
	126 Move X8, [X23]
	127 Move X0, X23
	128 Move X9, [X8+376]
	129 Move X1, [X8+384]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X21, X0
	132 Compare X0, 0
	133 JumpIfEqual {201}
	134 Move W8, [X21+24]
	135 Move W4, [X20+24]
	136 Move X23, 0xED8000
	137 Move X22, 0xED8000
	138 Move X23, [X23+1448]
	139 Move X22, [X22+1560]
	140 Subtract W3, W8, W4
	141 Move X0, X20
	142 Move W1, W31
	143 Move X2, X21
	144 Move X5, X31
	145 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move W8, [X21+24]
	152 Move W0, 8
	153 Move X2, X31
	154 Subtract W8, W19, W8
	155 Subtract W1, W8, 3
	156 Call Math.Max, X0, X1
	157 Move W9, [X21+24]
	158 Move X8, [X22]
	159 Add W19, W0, 3
	160 Move W22, W0
	161 Add W1, W19, W9
	162 Move X0, X8
	163 Call 0x1C17D6C
	164 Compare X0, 0
	165 JumpIfEqual {201}
	166 Move X9, [X0+24]
	167 Move X20, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add W10, W22, 2
	170 Move W8, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X20+33], W8
	173 Move W11, W10
	174 Move X8, X31
	175 And X9, X9, 0
	176 Add X10, X20, 34
	177 Subtract X11, X11, 2
	178 Move W12, 255
	179 Add X13, X8, 2
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X10], W12
	182 Add X8, X8, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W4, [X21+24]
	185 Move X0, X21
	186 Move W1, W31
	187 Move X2, X20
	188 Move W3, W19
	189 Move X5, X31
	190 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	191 Move X0, X20
	192 Move X20, [X31+48]
	193 Move X19, [X31+56]
	194 Move X22, [X31+32]
	195 Move X21, [X31+40]
	196 Move X24, [X31+16]
	197 Move X23, [X31+24]
	198 Move X30, [X31+64]
	199 Return X0
	200 Call 0x1C17F28
	201 Call 0x1C17F20
	202 Move X0, 0xF06000
	203 Move X0, [X0+1064]
	204 Call 0x1C17D08
	205 Move X1, X21
	206 Call String.Concat, X0, X1
	207 Move X19, X0
	208 Move X0, 0xF05000
	209 Move X0, [X0+3296]
	210 Call 0x1C17D08
	211 Call 0x1C17F10
	212 Move X1, X19
	213 Move X2, X31
	214 Move X20, X0
	215 Call CryptographicException..ctor, X0, X1
	216 Move X0, 0xF06000
	217 Move X0, [X0+3432]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X20
	221 Call 0x1C17DEC

Method: System.Security.Cryptography.HashAlgorithm CreateFromName(System.String name)

Disassembly:
	0x0321C21C ADRP X0, 0xF05000
	0x0321C220 LDR X0, [X0 + 0x548]
	0x0321C224 BL 0x1C16D08
	0x0321C228 MOV X1, X0
	0x0321C22C MOV X0, X19
	0x0321C230 MOV X2, X31
	0x0321C234 BL 0x3379B6C
	0x0321C238 ADRP X0, 0xF05000
	0x0321C23C LDR X0, [X0 + 0xDA0]
	0x0321C240 BL 0x1C16D08
	0x0321C244 MOV X1, X0
	0x0321C248 MOV X0, X19
	0x0321C24C BL 0x1C16DEC
	0x0321C250 STP X30, X19, [X31 - 0x10]!
	0x0321C254 MOV X19, X0
	0x0321C258 BL 0x32213F8
	0x0321C25C LDR X9, [X19 + 0x18]
	0x0321C260 CBZ X9, 0x321C2B4
	0x0321C264 LDR W8, [X19 + 0x10]
	0x0321C268 LDR W10, [X9 + 0x18]
	0x0321C26C SUB W8, W8, 0x1
	0x0321C270 CMP W8, W10
	0x0321C274 B.CS 0x321C2B8
	0x0321C278 ADD X9, X9, W8, 0x2, SXTW
	0x0321C27C LDR W10, [X9 + 0x20]
	0x0321C280 TBNZ X10, 0x1F, 0x321C2A4
	0x0321C284 MOVZ W9, 0x20
	0x0321C288 MOVZ W11, 0x80000000
	0x0321C28C SUBS W9, W9, 0x1
	0x0321C290 B.EQ 0x321C2A8
	0x0321C294 AND W12, W10, W11, 0x1
	0x0321C298 UBFM W11, W11, 0x1, 0x1F
	0x0321C29C CBZ W12, 0x321C28C
	0x0321C2A0 B 0x321C2A8
	0x0321C2A4 MOVZ W9, 0x20
	0x0321C2A8 ADD W0, W9, W8, 0x5, LSL
	0x0321C2AC LDP X30, X19, [X31], #0x10
	0x0321C2B0 RET
	0x0321C2B4 BL 0x1C16F20
	0x0321C2B8 BL 0x1C16F28
	0x0321C2BC STR X30, [X31 - 0x10]!
	0x0321C2C0 BL 0x32214D8
	0x0321C2C4 UBFM W0, W0, 0x1F, 0x1F
	0x0321C2C8 LDR X30, [X31], #0x10
	0x0321C2CC RET
	0x0321C2D0 STR X30, [X31 - 0x20]!
	0x0321C2D4 STP X20, X19, [X31 + 0x10]
	0x0321C2D8 ADRP X20, 0x11C0000
	0x0321C2DC LDRB W8, [X20 + 0x31E]
	0x0321C2E0 MOV W19, W0
	0x0321C2E4 TBNZ X8, 0x0, 0x321C2FC
	0x0321C2E8 ADRP X0, 0xF05000
	0x0321C2EC LDR X0, [X0 + 0xD90]
	0x0321C2F0 BL 0x1C16CF4
	0x0321C2F4 MOVZ W8, 0x1
	0x0321C2F8 STRB W8, [X20 + 0x31E]
	0x0321C2FC TBNZ X19, 0x1F, 0x321C32C
	0x0321C300 ADRP X8, 0xF05000
	0x0321C304 LDR X8, [X8 + 0xD90]
	0x0321C308 LDR X0, [X8]
	0x0321C30C BL 0x1C16F10
	0x0321C310 MOV W1, W19
	0x0321C314 MOV X20, X0
	0x0321C318 BL 0x3221450
	0x0321C31C MOV X0, X20
	0x0321C320 LDP X20, X19, [X31 + 0x10]
	0x0321C324 LDR X30, [X31], #0x20
	0x0321C328 RET
	0x0321C32C ADRP X0, 0xEDF000
	0x0321C330 LDR X0, [X0 + 0x760]
	0x0321C334 BL 0x1C16D08
	0x0321C338 BL 0x1C16F10
	0x0321C33C MOV X19, X0
	0x0321C340 ADRP X0, 0xEE1000
	0x0321C344 LDR X0, [X0 + 0xEC8]
	0x0321C348 BL 0x1C16D08
	0x0321C34C MOV X1, X0
	0x0321C350 MOV X0, X19
	0x0321C354 MOV X2, X31
	0x0321C358 BL 0x3316014
	0x0321C35C ADRP X0, 0xF05000
	0x0321C360 LDR X0, [X0 + 0xDA8]
	0x0321C364 BL 0x1C16D08
	0x0321C368 MOV X1, X0
	0x0321C36C MOV X0, X19
	0x0321C370 BL 0x1C16DEC
	0x0321C374 STR X30, [X31 - 0x30]!
	0x0321C378 STP X22, X21, [X31 + 0x10]
	0x0321C37C STP X20, X19, [X31 + 0x20]
	0x0321C380 ADRP X22, 0x11C0000
	0x0321C384 ADRP X21, 0xF05000
	0x0321C388 LDRB W8, [X22 + 0x31F]
	0x0321C38C LDR X21, [X21 + 0xD90]
	0x0321C390 MOV X20, X1
	0x0321C394 MOV X19, X0
	0x0321C398 TBNZ X8, 0x0, 0x321C3B0
	0x0321C39C ADRP X0, 0xF05000
	0x0321C3A0 LDR X0, [X0 + 0xD90]
	0x0321C3A4 BL 0x1C16CF4
	0x0321C3A8 MOVZ W8, 0x1
	0x0321C3AC STRB W8, [X22 + 0x31F]
	0x0321C3B0 LDR X0, [X21]
	0x0321C3B4 LDR W8, [X0 + 0xE0]
	0x0321C3B8 CBNZ W8, 0x321C3C0
	0x0321C3BC BL 0x1C16DFC
	0x0321C3C0 MOV X0, X20
	0x0321C3C4 MOV W1, W31
	0x0321C3C8 BL 0x321FE58
	0x0321C3CC LDR X8, [X21]
	0x0321C3D0 TBZ X0, 0x0, 0x321C3FC
	0x0321C3D4 MOV X0, X8
	0x0321C3D8 BL 0x1C16F10
	0x0321C3DC MOV X1, X19
	0x0321C3E0 MOV X20, X0
	0x0321C3E4 BL 0x3221264
	0x0321C3E8 MOV X0, X20
	0x0321C3EC LDP X20, X19, [X31 + 0x20]
	0x0321C3F0 LDP X22, X21, [X31 + 0x10]
	0x0321C3F4 LDR X30, [X31], #0x30
	0x0321C3F8 RET
	0x0321C3FC LDR W9, [X8 + 0xE0]
	0x0321C400 CBNZ W9, 0x321C40C
	0x0321C404 MOV X0, X8
	0x0321C408 BL 0x1C16DFC
	0x0321C40C MOV X0, X19
	0x0321C410 MOV W1, W31
	0x0321C414 BL 0x321FE58
	0x0321C418 TBNZ X0, 0x0, 0x321C478
	0x0321C41C MOV X0, X19
	0x0321C420 MOV X1, X20
	0x0321C424 BL 0x32214D8
	0x0321C428 CBZ W0, 0x321C44C
	0x0321C42C CMP W0, 0x1
	0x0321C430 B.NE 0x321C470
	0x0321C434 MOV X0, X19
	0x0321C438 MOV X1, X20
	0x0321C43C LDP X20, X19, [X31 + 0x20]
	0x0321C440 LDP X22, X21, [X31 + 0x10]
	0x0321C444 LDR X30, [X31], #0x30
	0x0321C448 B 0x322161C
	0x0321C44C LDR X0, [X21]
	0x0321C450 LDR W8, [X0 + 0xE0]
	0x0321C454 CBNZ W8, 0x321C45C
	0x0321C458 BL 0x1C16DFC
	0x0321C45C LDP X20, X19, [X31 + 0x20]
	0x0321C460 LDP X22, X21, [X31 + 0x10]
	0x0321C464 MOV W0, W31
	0x0321C468 LDR X30, [X31], #0x30
	0x0321C46C B 0x321C2D0
	0x0321C470 ADDS W31, W0, 0x1
	0x0321C474 B.NE 0x321C4AC
	0x0321C478 ADRP X0, 0xF05000
	0x0321C47C LDR X0, [X0 + 0x560]
	0x0321C480 BL 0x1C16D08
	0x0321C484 BL 0x1C16F10
	0x0321C488 MOV X19, X0
	0x0321C48C ADRP X0, 0xF05000
	0x0321C490 LDR X0, [X0 + 0x568]
	0x0321C494 BL 0x1C16D08
	0x0321C498 MOV X1, X0
	0x0321C49C MOV X0, X19
	0x0321C4A0 MOV X2, X31
	0x0321C4A4 BL 0x3316338
	0x0321C4A8 B 0x321C4C8
	0x0321C4AC ADRP X0, 0xED7000
	0x0321C4B0 LDR X0, [X0 + 0x7D0]
	0x0321C4B4 BL 0x1C16D08
	0x0321C4B8 BL 0x1C16F10
	0x0321C4BC MOV X1, X31
	0x0321C4C0 MOV X19, X0
	0x0321C4C4 BL 0x33B2C54
	0x0321C4C8 ADRP X0, 0xF05000
	0x0321C4CC LDR X0, [X0 + 0xDB0]
	0x0321C4D0 BL 0x1C16D08
	0x0321C4D4 MOV X1, X0
	0x0321C4D8 MOV X0, X19
	0x0321C4DC BL 0x1C16DEC
	0x0321C4E0 B 0x3222C00
	0x0321C4E4 STR X30, [X31 - 0x10]!
	0x0321C4E8 BL 0x3221844
	0x0321C4EC CBZ X0, 0x321C508
	0x0321C4F0 LDR W8, [X0 + 0x18]
	0x0321C4F4 CMP W8, 0x1
	0x0321C4F8 B.LS 0x321C50C
	0x0321C4FC LDR X0, [X0 + 0x28]
	0x0321C500 LDR X30, [X31], #0x10
	0x0321C504 RET
	0x0321C508 BL 0x1C16F20
	0x0321C50C BL 0x1C16F28
	0x0321C510 STR X30, [X31 - 0x20]!
	0x0321C514 STP X20, X19, [X31 + 0x10]
	0x0321C518 LDRB W8, [X0 + 0x23]
	0x0321C51C CBNZ W8, 0x321C558
	0x0321C520 LDRB W8, [X0 + 0x22]
	0x0321C524 CBZ W8, 0x321C548
	0x0321C528 LDR X0, [X0 + 0x58]
	0x0321C52C CBZ X0, 0x321C5A8
	0x0321C530 BL 0x321C250
	0x0321C534 ANDS W31, W0, 0x7
	0x0321C538 B.EQ 0x321C54C
	0x0321C53C ADD W8, W0, 0x8
	0x0321C540 AND W0, W8, 0xFFFFFFF8
	0x0321C544 B 0x321C54C
	0x0321C548 LDR W0, [X0 + 0x10]
	0x0321C54C LDP X20, X19, [X31 + 0x10]
	0x0321C550 LDR X30, [X31], #0x20
	0x0321C554 RET
	0x0321C558 ADRP X0, 0xF05000
	0x0321C55C LDR X0, [X0 + 0x578]
	0x0321C560 BL 0x1C16D08
	0x0321C564 MOV X1, X31
	0x0321C568 BL 0x320A160
	0x0321C56C MOV X19, X0
	0x0321C570 ADRP X0, 0xF00000
	0x0321C574 LDR X0, [X0 + 0x4B8]
	0x0321C578 BL 0x1C16D08
	0x0321C57C BL 0x1C16F10
	0x0321C580 MOV X1, X19
	0x0321C584 MOV X2, X31
	0x0321C588 MOV X20, X0
	0x0321C58C BL 0x338C448
	0x0321C590 ADRP X0, 0xF05000
	0x0321C594 LDR X0, [X0 + 0xDB8]
	0x0321C598 BL 0x1C16D08
	0x0321C59C MOV X1, X0
	0x0321C5A0 MOV X0, X20
	0x0321C5A4 BL 0x1C16DEC
	0x0321C5A8 BL 0x1C16F20
	0x0321C5AC STP X30, X21, [X31 - 0x20]!
	0x0321C5B0 STP X20, X19, [X31 + 0x10]
	0x0321C5B4 ADRP X20, 0x11C0000
	0x0321C5B8 LDRB W8, [X20 + 0x2FF]
	0x0321C5BC MOV X19, X0
	0x0321C5C0 TBNZ X8, 0x0, 0x321C5D8
	0x0321C5C4 ADRP X0, 0xF05000
	0x0321C5C8 LDR X0, [X0 + 0xD90]
	0x0321C5CC BL 0x1C16CF4
	0x0321C5D0 MOVZ W8, 0x1
	0x0321C5D4 STRB W8, [X20 + 0x2FF]
	0x0321C5D8 LDRB W8, [X19 + 0x22]
	0x0321C5DC CBZ W8, 0x321C614
	0x0321C5E0 ADRP X21, 0xF05000
	0x0321C5E4 LDR X21, [X21 + 0xD90]
	0x0321C5E8 LDR X20, [X19 + 0x28]
	0x0321C5EC LDR X0, [X21]
	0x0321C5F0 LDR W8, [X0 + 0xE0]
	0x0321C5F4 CBNZ W8, 0x321C5FC
	0x0321C5F8 BL 0x1C16DFC
	0x0321C5FC MOV X0, X20
	0x0321C600 MOV X1, X31
	0x0321C604 BL 0x321C64C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C1000
	005 Move W8, [X20+763]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {49}
	011 Move X0, 0xF06000
	012 Move X0, [X0+1104]
	013 Call 0x1C17CF4
	014 Move X0, 0xF06000
	015 Move X0, [X0+3424]
	016 Call 0x1C17CF4
	017 Move X0, 0xF01000
	018 Move X0, [X0+432]
	019 Call 0x1C17CF4
	020 Move X0, 0xED8000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xF06000
	024 Move X0, [X0+1080]
	025 Call 0x1C17CF4
	026 Move X0, 0xF05000
	027 Move X0, [X0+3352]
	028 Call 0x1C17CF4
	029 Move X0, 0xF05000
	030 Move X0, [X0+3360]
	031 Call 0x1C17CF4
	032 Move X0, 0xF05000
	033 Move X0, [X0+3392]
	034 Call 0x1C17CF4
	035 Move X0, 0xF05000
	036 Move X0, [X0+3400]
	037 Call 0x1C17CF4
	038 Move X0, 0xF05000
	039 Move X0, [X0+3408]
	040 Call 0x1C17CF4
	041 Move X0, 0xF05000
	042 Move X0, [X0+3416]
	043 Call 0x1C17CF4
	044 Move X0, 0xF06000
	045 Move X0, [X0+1088]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+763], W8
	049 Move X0, X19
	050 Move X1, X31
	051 Call <PrivateImplementationDetails>.ComputeStringHash, X0
	052 Move W8, 0xD733
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, 0xF834
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W8, 0x1627
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, 0xF834
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, 0xF05000
	065 Move X8, [X8+3392]
	066 Move X0, X19
	067 Move X1, [X8]
	068 Call String.Equals, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {202}
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X0, X31
	076 Move X30, [X31+32]
	077 Call SHA1.Create
	078 Return X0
	079 Move W8, 0xF99A
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W8, 0xDF12
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, 0xF05000
	086 Move X8, [X8+3400]
	087 Move X0, X19
	088 Move X1, [X8]
	089 Call String.Equals, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {202}
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X0, X31
	097 Move X30, [X31+32]
	098 Call MD2.Create
	099 Return X0
	100 Move W8, 0xD5A0
	101 NotImplemented "Instruction MOVK not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W8, 0xD733
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, 0xF05000
	107 Move X8, [X8+3408]
	108 Move X0, X19
	109 Move X1, [X8]
	110 Call String.Equals, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {202}
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move X0, X31
	118 Move X30, [X31+32]
	119 Call MD5.Create
	120 Return X0
	121 Move W8, 0xB20B
	122 NotImplemented "Instruction MOVK not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W8, 0x1476
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, 0xF05000
	128 Move X8, [X8+3352]
	129 Move X0, X19
	130 Move X1, [X8]
	131 Call String.Equals, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {202}
	136 Move X20, [X31+16]
	137 Move X19, [X31+24]
	138 Move X0, X31
	139 Move X30, [X31+32]
	140 Call SHA384.Create
	141 Return X0
	142 Move X8, 0xF06000
	143 Move X8, [X8+1088]
	144 Move X0, X19
	145 Move X1, [X8]
	146 Call String.Equals, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {202}
	151 Move X20, [X31+16]
	152 Move X19, [X31+24]
	153 Move X0, X31
	154 Move X30, [X31+32]
	155 Call RIPEMD160.Create
	156 Return X0
	157 Move X8, 0xF05000
	158 Move X8, [X8+3360]
	159 Move X0, X19
	160 Move X1, [X8]
	161 Call String.Equals, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {202}
	166 Move X20, [X31+16]
	167 Move X19, [X31+24]
	168 Move X0, X31
	169 Move X30, [X31+32]
	170 Call SHA256.Create
	171 Return X0
	172 Move X8, 0xF06000
	173 Move X8, [X8+1080]
	174 Move X0, X19
	175 Move X1, [X8]
	176 Call String.Equals, X0, X1
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {202}
	181 Move X20, [X31+16]
	182 Move X19, [X31+24]
	183 Move X0, X31
	184 Move X30, [X31+32]
	185 Call MD4.Create
	186 Return X0
	187 Move X8, 0xF05000
	188 Move X8, [X8+3416]
	189 Move X0, X19
	190 Move X1, [X8]
	191 Call String.Equals, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {202}
	196 Move X20, [X31+16]
	197 Move X19, [X31+24]
	198 Move X0, X31
	199 Move X30, [X31+32]
	200 Call SHA512.Create
	201 Return X0
	202 Move X8, 0xED8000
	203 Move X8, [X8+1728]
	204 Move X0, [X8]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X8, 0xF01000
	210 Move X8, [X8+432]
	211 Move X9, 0xF06000
	212 Move X9, [X9+3424]
	213 Move X1, [X8]
	214 Move X2, [X9]
	215 Move X0, X19
	216 Call 0x1C1803C
	217 Move X1, X31
	218 Call Activator.CreateInstance, X0
	219 Compare X0, 0
	220 JumpIfEqual {232}
	221 Move X9, 0xF06000
	222 Move X9, [X9+1104]
	223 Move X8, [X0]
	224 Move X1, [X9]
	225 Move W10, [X8+304]
	226 Move W9, [X1+304]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X8, [X8+200]
	229 Add X8, X8, X9
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X20, [X31+16]
	233 Move X19, [X31+24]
	234 Move X30, [X31+32]
	235 Return X0
	236 Call 0x1C181E0
	237 Move X20, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X20
	240 Call 0x3EB2AD0
	241 Move X20, X0
	242 Move X0, 0xEDE000
	243 Move X0, [X0+3264]
	244 Call 0x1C17D08
	245 Move X8, [X20]
	246 Move X1, [X8]
	247 Call 0x1C18270
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {273}
	252 Call 0x3EB2AE0
	253 Move X0, 0xF06000
	254 Move X0, [X0+320]
	255 Call 0x1C17D08
	256 Move X1, X19
	257 Call String.Concat, X0, X1
	258 Move X19, X0
	259 Move X0, 0xF05000
	260 Move X0, [X0+3296]
	261 Call 0x1C17D08
	262 Call 0x1C17F10
	263 Move X1, X19
	264 Move X2, X31
	265 Move X20, X0
	266 Call CryptographicException..ctor, X0, X1
	267 Move X0, 0xF06000
	268 Move X0, [X0+3424]
	269 Call 0x1C17D08
	270 Move X1, X0
	271 Move X0, X20
	272 Call 0x1C17DEC
	273 Move W0, 8
	274 Call 0x3EB2AF0
	275 Move X8, [X20]
	276 Move [X0], X8
	277 Move X1, 0xC99000
	278 Add X1, X1, 3672
	279 Move X2, X31
	280 Call 0x3EB2B00
	281 Move X20, X0
	282 Call 0x3EB2AE0
	283 Move X0, X20
	284 Call 0x1D2D690
	285 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0321CA0C BL 0x1C16F28
	0x0321CA10 BL 0x1C16F20
	0x0321CA14 STP X30, X23, [X31 - 0x30]!
	0x0321CA18 STP X22, X21, [X31 + 0x10]
	0x0321CA1C STP X20, X19, [X31 + 0x20]
	0x0321CA20 ADRP X22, 0x11C0000
	0x0321CA24 ADRP X23, 0xF05000
	0x0321CA28 LDRB W8, [X22 + 0x32E]
	0x0321CA2C LDR X23, [X23 + 0xDC8]
	0x0321CA30 MOV X21, X2
	0x0321CA34 MOV X19, X1
	0x0321CA38 MOV X20, X0
	0x0321CA3C TBNZ X8, 0x0, 0x321CA54
	0x0321CA40 ADRP X0, 0xF05000
	0x0321CA44 LDR X0, [X0 + 0xDC8]
	0x0321CA48 BL 0x1C16CF4
	0x0321CA4C MOVZ W8, 0x1
	0x0321CA50 STRB W8, [X22 + 0x32E]
	0x0321CA54 LDR X0, [X23]
	0x0321CA58 BL 0x1C16F10
	0x0321CA5C MOV X1, X21
	0x0321CA60 MOV X22, X0
	0x0321CA64 BL 0x32230F8
	0x0321CA68 CBZ X22, 0x321CA88
	0x0321CA6C MOV X0, X22
	0x0321CA70 MOV X1, X20
	0x0321CA74 MOV X2, X19
	0x0321CA78 LDP X20, X19, [X31 + 0x20]
	0x0321CA7C LDP X22, X21, [X31 + 0x10]
	0x0321CA80 LDP X30, X23, [X31], #0x30
	0x0321CA84 B 0x32231CC
	0x0321CA88 BL 0x1C16F20
	0x0321CA8C STP X30, X21, [X31 - 0x20]!
	0x0321CA90 STP X20, X19, [X31 + 0x10]
	0x0321CA94 ADRP X21, 0x11C0000
	0x0321CA98 LDRB W8, [X21 + 0x307]
	0x0321CA9C MOV W19, W2
	0x0321CAA0 MOV X20, X1
	0x0321CAA4 TBNZ X8, 0x0, 0x321CABC
	0x0321CAA8 ADRP X0, 0xED7000
	0x0321CAAC LDR X0, [X0 + 0x618]
	0x0321CAB0 BL 0x1C16CF4
	0x0321CAB4 MOVZ W8, 0x1
	0x0321CAB8 STRB W8, [X21 + 0x307]
	0x0321CABC CBZ X20, 0x321CB38
	0x0321CAC0 MOV X0, X20
	0x0321CAC4 BL 0x321CEB4
	0x0321CAC8 CBZ X0, 0x321CB38
	0x0321CACC LDR W8, [X0 + 0x18]
	0x0321CAD0 MOV X20, X0
	0x0321CAD4 CMP W8, W19
	0x0321CAD8 B.GE 0x321CB28
	0x0321CADC ADRP X8, 0xED7000
	0x0321CAE0 LDR X8, [X8 + 0x618]
	0x0321CAE4 MOV W1, W19
	0x0321CAE8 LDR X0, [X8]
	0x0321CAEC BL 0x1C16D6C
	0x0321CAF0 LDR W4, [X20 + 0x18]
	0x0321CAF4 MOV X21, X0
	0x0321CAF8 MOV X0, X20
	0x0321CAFC MOV W1, W31
	0x0321CB00 SUB W3, W19, W4
	0x0321CB04 MOV X2, X21
	0x0321CB08 MOV X5, X31
	0x0321CB0C BL 0x33A8A9C
	0x0321CB10 LDR W2, [X20 + 0x18]
	0x0321CB14 MOV X0, X20
	0x0321CB18 MOV W1, W31
	0x0321CB1C MOV X3, X31
	0x0321CB20 BL 0x339FA34
	0x0321CB24 MOV X20, X21
	0x0321CB28 MOV X0, X20
	0x0321CB2C LDP X20, X19, [X31 + 0x10]
	0x0321CB30 LDP X30, X21, [X31], #0x20
	0x0321CB34 RET
	0x0321CB38 BL 0x1C16F20
	0x0321CB3C STR X30, [X31 - 0x10]!
	0x0321CB40 LDR W8, [X0 + 0x10]
	0x0321CB44 CBZ W8, 0x321CB7C
	0x0321CB48 LDR X8, [X0 + 0x18]
	0x0321CB4C CBZ X8, 0x321CB88
	0x0321CB50 LDR W9, [X8 + 0x18]
	0x0321CB54 MOV X10, X31
	0x0321CB58 CMP W10, W9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x11C1000
	010 Move X22, 0xED8000
	011 Move X19, 0xF06000
	012 Move X20, 0xF06000
	013 Move X24, 0xF06000
	014 Move X23, 0xF06000
	015 Move X21, 0xF06000
	016 Move X22, [X22+1560]
	017 Move W8, [X25+764]
	018 Move X19, [X19+3440]
	019 Move X20, [X20+3416]
	020 Move X24, [X24+3448]
	021 Move X23, [X23+3456]
	022 Move X21, [X21+3464]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0xED8000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0xF06000
	031 Move X0, [X0+3416]
	032 Call 0x1C17CF4
	033 Move X0, 0xF06000
	034 Move X0, [X0+3464]
	035 Call 0x1C17CF4
	036 Move X0, 0xF06000
	037 Move X0, [X0+3456]
	038 Call 0x1C17CF4
	039 Move X0, 0xF06000
	040 Move X0, [X0+3440]
	041 Call 0x1C17CF4
	042 Move X0, 0xF06000
	043 Move X0, [X0+3448]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+764], W8
	047 Move X0, [X22]
	048 Move W1, 20
	049 Call 0x1C17D6C
	050 Move X1, [X19]
	051 Move X2, X31
	052 Move X19, X0
	053 Call RuntimeHelpers.InitializeArray, X0, X1
	054 Move X8, [X20]
	055 Move W1, 32
	056 Move X8, [X8+184]
	057 Move [X8], X19
	058 Move X0, [X22]
	059 Call 0x1C17D6C
	060 Move X1, [X24]
	061 Move X2, X31
	062 Move X19, X0
	063 Call RuntimeHelpers.InitializeArray, X0, X1
	064 Move X8, [X20]
	065 Move W1, 48
	066 Move X8, [X8+184]
	067 Move [X8+8], X19
	068 Move X0, [X22]
	069 Call 0x1C17D6C
	070 Move X1, [X23]
	071 Move X2, X31
	072 Move X19, X0
	073 Call RuntimeHelpers.InitializeArray, X0, X1
	074 Move X8, [X20]
	075 Move W1, 64
	076 Move X8, [X8+184]
	077 Move [X8+16], X19
	078 Move X0, [X22]
	079 Call 0x1C17D6C
	080 Move X1, [X21]
	081 Move X2, X31
	082 Move X19, X0
	083 Call RuntimeHelpers.InitializeArray, X0, X1
	084 Move X8, [X20]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X8, [X8+184]
	090 Move [X8+24], X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X30, [X31+64]
	094 Move X25, [X31+72]
	095 Return 

