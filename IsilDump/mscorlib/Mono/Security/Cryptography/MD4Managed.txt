Type: Mono.Security.Cryptography.MD4Managed

Method: System.Void .ctor()

Disassembly:
	0x0321AD3C CBZ X19, 0x321ADCC
	0x0321AD40 LDR W8, [X19 + 0x18]
	0x0321AD44 MOV X9, X31
	0x0321AD48 SXTW X10, W8
	0x0321AD4C CMP X9, X8
	0x0321AD50 B.CS 0x321ADC8
	0x0321AD54 ADD X21, X9, 0x1
	0x0321AD58 CMP X21, X10
	0x0321AD5C B.GE 0x321AD70
	0x0321AD60 ADD X9, X19, X9
	0x0321AD64 LDRB W11, [X9 + 0x20]
	0x0321AD68 MOV X9, X21
	0x0321AD6C CBZ W11, 0x321AD4C
	0x0321AD70 CMP W21, 0x1
	0x0321AD74 B.EQ 0x321ADB8
	0x0321AD78 ADRP X9, 0xED9000
	0x0321AD7C LDR X9, [X9 + 0x618]
	0x0321AD80 SUB W8, W8, W21
	0x0321AD84 ADD W1, W8, 0x1
	0x0321AD88 LDR X0, [X9]
	0x0321AD8C BL 0x1C16D6C
	0x0321AD90 CBZ X0, 0x321ADCC
	0x0321AD94 LDR W4, [X0 + 0x18]
	0x0321AD98 MOV X20, X0
	0x0321AD9C SUB X1, X21, 0x1
	0x0321ADA0 MOV X0, X19
	0x0321ADA4 MOV X2, X20
	0x0321ADA8 MOV W3, W31
	0x0321ADAC MOV X5, X31
	0x0321ADB0 BL 0x33A8A9C
	0x0321ADB4 MOV X19, X20
	0x0321ADB8 MOV X0, X19
	0x0321ADBC LDP X20, X19, [X31 + 0x10]
	0x0321ADC0 LDP X30, X21, [X31], #0x20
	0x0321ADC4 RET
	0x0321ADC8 BL 0x1C16F28
	0x0321ADCC BL 0x1C16F20
	0x0321ADD0 STR X30, [X31 - 0x10]!
	0x0321ADD4 CBZ X0, 0x321ADE8
	0x0321ADD8 LDR X8, [X0]
	0x0321ADDC LDP X3, X2, [X8 + 0x1D8]
	0x0321ADE0 LDR X30, [X31], #0x10
	0x0321ADE4 BR X3
	0x0321ADE8 BL 0x1C16F20
	0x0321ADEC STR X30, [X31 - 0x40]!
	0x0321ADF0 STP X24, X23, [X31 + 0x10]
	0x0321ADF4 STP X22, X21, [X31 + 0x20]
	0x0321ADF8 STP X20, X19, [X31 + 0x30]
	0x0321ADFC ADRP X23, 0x11C2000
	0x0321AE00 ADRP X24, 0xF07000
	0x0321AE04 LDRB W8, [X23 + 0x2F7]
	0x0321AE08 LDR X24, [X24 + 0xD58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11C3000
	007 Move X20, 0xF03000
	008 Move X21, 0xEDA000
	009 Move W8, [X22+753]
	010 Move X20, [X20+3336]
	011 Move X21, [X21+1560]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xEDA000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xF03000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+753], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call HashAlgorithm..ctor, X0
	028 Move W8, 128
	029 Move [X19+20], W8
	030 Move X0, [X20]
	031 Move W1, 4
	032 Call 0x1C17D6C
	033 Move [X19+40], X0
	034 Move X0, [X20]
	035 Move W1, 2
	036 Call 0x1C17D6C
	037 Move [X19+56], X0
	038 Move X0, [X21]
	039 Move W1, 64
	040 Call 0x1C17D6C
	041 Move [X19+48], X0
	042 Move X0, [X21]
	043 Move W1, 16
	044 Call 0x1C17D6C
	045 Move [X19+72], X0
	046 Move X0, [X20]
	047 Move W1, 16
	048 Call 0x1C17D6C
	049 Move X8, [X19]
	050 Move [X19+64], X0
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X2, [X8+600]
	055 Move X1, [X8+608]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 CallNoReturn X2

Method: System.Void Initialize()

Disassembly:
	0x0321AE0C MOV X19, X3
	0x0321AE10 MOV X20, X2
	0x0321AE14 MOV X21, X1
	0x0321AE18 MOV X22, X0
	0x0321AE1C TBNZ X8, 0x0, 0x321AE34
	0x0321AE20 ADRP X0, 0xF07000
	0x0321AE24 LDR X0, [X0 + 0xD58]
	0x0321AE28 BL 0x1C16CF4
	0x0321AE2C MOVZ W8, 0x1
	0x0321AE30 STRB W8, [X23 + 0x2F7]
	0x0321AE34 LDR X0, [X24]
	0x0321AE38 LDR W8, [X0 + 0xE0]
	0x0321AE3C CBNZ W8, 0x321AE44
	0x0321AE40 BL 0x1C16DFC
	0x0321AE44 MOV X0, X22
	0x0321AE48 MOV X1, X21
	0x0321AE4C MOV X2, X20
	0x0321AE50 MOV X3, X19
	0x0321AE54 LDP X20, X19, [X31 + 0x30]
	0x0321AE58 LDP X22, X21, [X31 + 0x20]
	0x0321AE5C LDP X24, X23, [X31 + 0x10]
	0x0321AE60 MOV W4, W31
	0x0321AE64 LDR X30, [X31], #0x40
	0x0321AE68 B 0x321AE6C
	0x0321AE6C STP X30, X25, [X31 - 0x40]!
	0x0321AE70 STP X24, X23, [X31 + 0x10]
	0x0321AE74 STP X22, X21, [X31 + 0x20]
	0x0321AE78 STP X20, X19, [X31 + 0x30]
	0x0321AE7C ADRP X24, 0x11C2000
	0x0321AE80 LDRB W8, [X24 + 0x2F9]
	0x0321AE84 MOV W21, W4
	0x0321AE88 MOV X23, X3
	0x0321AE8C MOV X19, X2
	0x0321AE90 MOV X22, X1
	0x0321AE94 MOV X20, X0
	0x0321AE98 TBNZ X8, 0x0, 0x321AEBC
	0x0321AE9C ADRP X0, 0xED9000
	0x0321AEA0 LDR X0, [X0 + 0x618]
	0x0321AEA4 BL 0x1C16CF4
	0x0321AEA8 ADRP X0, 0xF07000
	0x0321AEAC LDR X0, [X0 + 0xD58]
	0x0321AEB0 BL 0x1C16CF4
	0x0321AEB4 MOVZ W8, 0x1
	0x0321AEB8 STRB W8, [X24 + 0x2F9]
	0x0321AEBC CBZ X20, 0x321B040

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfEqual {48}
	006 Move W9, [X8+24]
	007 Compare W9, 0
	008 JumpIfEqual {47}
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move [X8+32], W31
	011 Move [X8+36], W31
	012 Move X8, [X0+40]
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfEqual {48}
	016 Move W9, [X8+24]
	017 Compare W9, 0
	018 JumpIfEqual {47}
	019 Move W10, 0x2301
	020 NotImplemented "Instruction MOVK not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X8+32], W10
	023 Move W10, 0xAB89
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X8+36], W10
	027 Move W10, 0xDCFE
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X8+40], W10
	031 Move W9, 0x5476
	032 NotImplemented "Instruction MOVK not yet implemented."
	033 Move [X8+44], W9
	034 Move X0, [X19+48]
	035 Move W2, 64
	036 Move W1, W31
	037 Move X3, X31
	038 Call Array.Clear, X0, X1, X2
	039 Move X0, [X19+64]
	040 Move W2, 16
	041 Move W1, W31
	042 Move X3, X31
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Call Array.Clear, X0, X1, X2
	046 Return 
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Void HashCore(System.Byte[] array, System.Int32 ibStart, System.Int32 cbSize)

Disassembly:
	0x0321AEC0 LDR X8, [X20]
	0x0321AEC4 ADRP X25, 0xF07000
	0x0321AEC8 MOV X0, X20
	0x0321AECC LDP X9, X1, [X8 + 0x198]
	0x0321AED0 LDR X25, [X25 + 0xD58]
	0x0321AED4 BLR X9
	0x0321AED8 LDR X8, [X25]
	0x0321AEDC SBFM W24, W0, 0x3, 0x1F
	0x0321AEE0 LDR W9, [X8 + 0xE0]
	0x0321AEE4 CBNZ W9, 0x321AEF0
	0x0321AEE8 MOV X0, X8
	0x0321AEEC BL 0x1C16DFC
	0x0321AEF0 MOV X0, X23
	0x0321AEF4 BL 0x321AD10
	0x0321AEF8 LDR X8, [X20]
	0x0321AEFC MOV X1, X0
	0x0321AF00 MOV X0, X20
	0x0321AF04 LDP X9, X2, [X8 + 0x1D8]
	0x0321AF08 BLR X9
	0x0321AF0C MOV W1, W24
	0x0321AF10 BL 0x321AC84
	0x0321AF14 MOV X20, X0
	0x0321AF18 MOV X0, X22
	0x0321AF1C MOV X1, X19
	0x0321AF20 MOV W2, W24
	0x0321AF24 BL 0x321B608
	0x0321AF28 MOV X1, X20
	0x0321AF2C BL 0x321ABF8
	0x0321AF30 TBNZ X0, 0x0, 0x321AFC4
	0x0321AF34 TBZ X21, 0x0, 0x321AFC4
	0x0321AF38 CBZ X20, 0x321B040
	0x0321AF3C LDR W8, [X20 + 0x18]
	0x0321AF40 CBZ W8, 0x321B03C
	0x0321AF44 LDRB W9, [X20 + 0x20]
	0x0321AF48 CBNZ W9, 0x321AFC0
	0x0321AF4C CMP W8, 0x1
	0x0321AF50 B.LS 0x321B03C
	0x0321AF54 LDRB W9, [X20 + 0x21]
	0x0321AF58 CMP W9, 0x1
	0x0321AF5C B.NE 0x321AFC0
	0x0321AF60 CBZ X19, 0x321B040
	0x0321AF64 LDR W1, [X19 + 0x18]
	0x0321AF68 MOVZ W9, 0x2
	0x0321AF6C ORN W10, W31, W1, 0x0
	0x0321AF70 ADD W10, W10, W8
	0x0321AF74 CMP W10, 0x2
	0x0321AF78 CSEL W22, W10, W9, GT
	0x0321AF7C CMP W10, 0x3
	0x0321AF80 B.LT 0x321AFAC
	0x0321AF84 MOVZ W9, 0x2
	0x0321AF88 CMP W8, W9
	0x0321AF8C B.EQ 0x321B03C
	0x0321AF90 ADD X10, X20, W9, SXTW
	0x0321AF94 LDRB W10, [X10 + 0x20]
	0x0321AF98 CMP W10, 0xFF
	0x0321AF9C B.NE 0x321AFC0
	0x0321AFA0 ADD W9, W9, 0x1
	0x0321AFA4 CMP W22, W9
	0x0321AFA8 B.NE 0x321AF88
	0x0321AFAC CMP W22, W8
	0x0321AFB0 B.CS 0x321B03C
	0x0321AFB4 ADD X8, X20, W22, UXTW
	0x0321AFB8 LDRB W8, [X8 + 0x20]
	0x0321AFBC CBZ W8, 0x321AFDC
	0x0321AFC0 MOV W0, W31
	0x0321AFC4 LDP X20, X19, [X31 + 0x30]
	0x0321AFC8 LDP X22, X21, [X31 + 0x20]
	0x0321AFCC LDP X24, X23, [X31 + 0x10]
	0x0321AFD0 AND W0, W0, 0x1
	0x0321AFD4 LDP X30, X25, [X31], #0x40
	0x0321AFD8 RET
	0x0321AFDC ADRP X8, 0xED9000
	0x0321AFE0 LDR X8, [X8 + 0x618]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+56]
	009 Compare X8, 0
	010 JumpIfEqual {79}
	011 Move W10, [X8+24]
	012 Compare W10, 0
	013 JumpIfEqual {78}
	014 Move W9, [X8+32]
	015 Move W11, W3
	016 ShiftRight W11, 29
	017 And W11, W11, 0xFFFFFFF
	018 Move W19, W3
	019 Move W20, W2
	020 Add W12, W9, W3
	021 Move X22, X0
	022 Move X21, X1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move [X8+32], W12
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W10, [X8+36]
	027 Add W10, W10, 1
	028 Move [X8+36], W10
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W10, [X8+36]
	031 Move W24, W9
	032 ShiftRight W24, 3
	033 And W24, W24, 255
	034 Move W9, 64
	035 Subtract W23, W9, W24
	036 Add W9, W10, W19
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X8+36], W9
	039 Move W23, W31
	040 Move X2, [X22+48]
	041 Move X0, X21
	042 Move W1, W20
	043 Move W3, W24
	044 Move W4, W23
	045 Move X5, X31
	046 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	047 Move X1, [X22+40]
	048 Move X2, [X22+48]
	049 Move X0, X22
	050 Move W3, W31
	051 Call MD4Managed.MD4Transform, X0, X1, X2, X3
	052 Xor W8, W24, 127
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X1, [X22+40]
	055 Add W3, W20, W23
	056 Move X0, X22
	057 Move X2, X21
	058 Call MD4Managed.MD4Transform, X0, X1, X2, X3
	059 Add W8, W23, 127
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W23, W23, 64
	062 Move W24, W31
	063 Move X2, [X22+48]
	064 Add W1, W23, W20
	065 Subtract W4, W19, W23
	066 Move X0, X21
	067 Move W3, W24
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X5, X31
	075 Move X30, [X31+64]
	076 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	077 Return 
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Byte[] HashFinal()

Disassembly:
	0x0321B65C BL 0x1C16CF4
	0x0321B660 MOVZ W8, 0x1
	0x0321B664 STRB W8, [X22 + 0x2FA]
	0x0321B668 CBZ X20, 0x321B8E4
	0x0321B66C CBZ X21, 0x321B8E4
	0x0321B670 LDR X8, [X21]
	0x0321B674 MOV X0, X21
	0x0321B678 LDP X9, X1, [X8 + 0x1D8]
	0x0321B67C BLR X9
	0x0321B680 LDR X8, [X21]
	0x0321B684 LDR W23, [X20 + 0x18]
	0x0321B688 MOV W22, W0
	0x0321B68C MOV X0, X21
	0x0321B690 LDP X9, X1, [X8 + 0x168]
	0x0321B694 BLR X9
	0x0321B698 CMP W23, W22, ASR
	0x0321B69C MOV X21, X0
	0x0321B6A0 B.NE 0x321B8E8
	0x0321B6A4 ADRP X23, 0xF05000
	0x0321B6A8 LDR X23, [X23 + 0xBD8]
	0x0321B6AC LDR X0, [X23]
	0x0321B6B0 LDR W8, [X0 + 0xE0]
	0x0321B6B4 CBNZ W8, 0x321B6BC
	0x0321B6B8 BL 0x1C16DFC
	0x0321B6BC MOV X0, X21
	0x0321B6C0 MOV X1, X31
	0x0321B6C4 BL 0x3264820
	0x0321B6C8 MOV X21, X20
	0x0321B6CC CBZ X0, 0x321B7DC
	0x0321B6D0 ADRP X24, 0xF06000
	0x0321B6D4 LDR X24, [X24 + 0xC28]
	0x0321B6D8 MOV X22, X0
	0x0321B6DC LDR X0, [X24]
	0x0321B6E0 BL 0x1C16F10
	0x0321B6E4 MOVZ W1, 0x30
	0x0321B6E8 MOV X2, X31
	0x0321B6EC MOV X21, X0
	0x0321B6F0 BL 0x3215CDC
	0x0321B6F4 LDR X0, [X23]
	0x0321B6F8 LDR W8, [X0 + 0xE0]
	0x0321B6FC CBNZ W8, 0x321B704
	0x0321B700 BL 0x1C16DFC
	0x0321B704 MOV X0, X22
	0x0321B708 MOV X1, X31
	0x0321B70C BL 0x3264FF4
	0x0321B710 LDR X8, [X24]
	0x0321B714 MOV X23, X0
	0x0321B718 MOV X0, X8
	0x0321B71C BL 0x1C16F10
	0x0321B720 MOV X1, X23
	0x0321B724 MOV X2, X31
	0x0321B728 MOV X22, X0
	0x0321B72C BL 0x3215D38
	0x0321B730 CBZ X21, 0x321B8E4
	0x0321B734 MOV X0, X21
	0x0321B738 MOV X1, X22
	0x0321B73C MOV X2, X31
	0x0321B740 BL 0x3216064
	0x0321B744 LDR X0, [X24]
	0x0321B748 BL 0x1C16F10
	0x0321B74C MOVZ W1, 0x5
	0x0321B750 MOV X2, X31
	0x0321B754 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C2000
	006 Move X21, 0xED9000
	007 Move W8, [X20+754]
	008 Move X21, [X21+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xED9000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+754], W8
	019 Move X0, [X21]
	020 Move W1, 8
	021 Call 0x1C17D6C
	022 Move X2, [X19+56]
	023 Move X1, X0
	024 Move X20, X0
	025 Call MD4Managed.Encode, X0, X1, X2
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfEqual {73}
	029 Move W9, [X8+24]
	030 Compare W9, 0
	031 JumpIfEqual {74}
	032 Move W8, [X8+32]
	033 Move W9, 120
	034 Move W10, 56
	035 Move W8, W8
	036 ShiftRight W8, 3
	037 And W8, W8, 255
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Subtract W21, W9, W8
	041 Move W1, W21
	042 Call MD4Managed.Padding, X0, X1
	043 Move X8, [X19]
	044 Move X1, X0
	045 Move X0, X19
	046 Move W2, W31
	047 Move X9, [X8+568]
	048 Move X4, [X8+576]
	049 Move W3, W21
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move W3, 8
	053 Move X0, X19
	054 Move X1, X20
	055 Move X9, [X8+568]
	056 Move X4, [X8+576]
	057 Move W2, W31
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X1, [X19+72]
	060 Move X2, [X19+40]
	061 Call MD4Managed.Encode, X0, X1, X2
	062 Move X8, [X19]
	063 Move X0, X19
	064 Move X9, [X8+600]
	065 Move X1, [X8+608]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+72]
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28

Method: System.Byte[] Padding(System.Int32 nLength)

Disassembly:
	0x0321B850 CBZ X0, 0x321B8E4
	0x0321B854 LDR X9, [X0 + 0x18]
	0x0321B858 MOV X20, X0
	0x0321B85C CMP W9, 0x1
	0x0321B860 B.LS 0x321B8E0
	0x0321B864 ADD W10, W22, 0x2
	0x0321B868 MOVZ W8, 0x1
	0x0321B86C CMP W10, 0x3
	0x0321B870 STRB W8, [X20 + 0x21]
	0x0321B874 B.LT 0x321B8AC
	0x0321B878 MOV W11, W10
	0x0321B87C MOV X8, X31
	0x0321B880 AND X9, X9, 0x0
	0x0321B884 ADD X10, X20, 0x22
	0x0321B888 SUB X11, X11, 0x2
	0x0321B88C MOVZ W12, 0xFF
	0x0321B890 ADD X13, X8, 0x2
	0x0321B894 CMP X13, X9
	0x0321B898 B.CS 0x321B8E0
	0x0321B89C STRB W12, [X10, X8, LSL]
	0x0321B8A0 ADD X8, X8, 0x1
	0x0321B8A4 CMP X11, X8
	0x0321B8A8 B.NE 0x321B890
	0x0321B8AC LDR W4, [X21 + 0x18]
	0x0321B8B0 MOV X0, X21
	0x0321B8B4 MOV W1, W31
	0x0321B8B8 MOV X2, X20
	0x0321B8BC MOV W3, W19
	0x0321B8C0 MOV X5, X31
	0x0321B8C4 BL 0x33A8A9C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C2000
	005 Move W8, [X20+755]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xED9000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+755], W8
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, 0xED9000
	018 Move X8, [X8+1560]
	019 Move W1, W19
	020 Move X0, [X8]
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {34}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move W8, 128
	028 Move [X0+32], W8
	029 Move X0, X31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20
	035 Call 0x1C17F28

Method: System.UInt32 F(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x0321B8C8 MOV X0, X20
	0x0321B8CC LDP X20, X19, [X31 + 0x30]
	0x0321B8D0 LDP X22, X21, [X31 + 0x20]
	0x0321B8D4 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 And W8, W2, W1
	002 NotImplemented "Instruction BIC not yet implemented."
	003 Or W0, W9, W8
	004 Return X0

Method: System.UInt32 G(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x0321B8D8 LDR X30, [X31], #0x40
	0x0321B8DC RET
	0x0321B8E0 BL 0x1C16F28
	0x0321B8E4 BL 0x1C16F20
	0x0321B8E8 ADRP X0, 0xF06000

ISIL:
	001 Or W8, W3, W2
	002 And W8, W8, W1
	003 And W9, W3, W2
	004 Or W0, W8, W9
	005 Return X0

Method: System.UInt32 H(System.UInt32 x, System.UInt32 y, System.UInt32 z)

Disassembly:
	0x0321B8EC LDR X0, [X0 + 0x428]
	0x0321B8F0 BL 0x1C16D08
	0x0321B8F4 MOV X1, X21

ISIL:
	001 Xor W8, W2, W1
	002 Xor W0, W8, W3
	003 Return X0

Method: System.UInt32 ROL(System.UInt32 x, System.Byte n)

Disassembly:
	0x0321B8F8 BL 0x321B938
	0x0321B8FC MOV X19, X0
	0x0321B900 ADRP X0, 0xF05000

ISIL:
	001 Subtract W8, W31, W2
	002 NotImplemented "Instruction RORV not yet implemented."
	003 Return X0

Method: System.Void FF(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x0321B904 LDR X0, [X0 + 0xCE0]
	0x0321B908 BL 0x1C16D08
	0x0321B90C BL 0x1C16F10
	0x0321B910 MOV X1, X19
	0x0321B914 MOV X2, X31
	0x0321B918 MOV X20, X0
	0x0321B91C BL 0x3252170
	0x0321B920 ADRP X0, 0xF06000
	0x0321B924 LDR X0, [X0 + 0xD68]
	0x0321B928 BL 0x1C16D08

ISIL:
	001 Move W8, [X1]
	002 And W9, W3, W2
	003 NotImplemented "Instruction BIC not yet implemented."
	004 Or W9, W10, W9
	005 Add W9, W9, W5
	006 Add W8, W9, W8
	007 Subtract W9, W31, W6
	008 NotImplemented "Instruction RORV not yet implemented."
	009 Move [X1], W8
	010 Return 

Method: System.Void GG(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x0321B92C MOV X1, X0
	0x0321B930 MOV X0, X20
	0x0321B934 BL 0x1C16DEC
	0x0321B938 STR X30, [X31 - 0x30]!
	0x0321B93C STP X22, X21, [X31 + 0x10]
	0x0321B940 STP X20, X19, [X31 + 0x20]
	0x0321B944 ADRP X21, 0x11C1000
	0x0321B948 LDRB W8, [X21 + 0x366]
	0x0321B94C MOV X20, X1
	0x0321B950 MOV X19, X0
	0x0321B954 TBNZ X8, 0x0, 0x321B96C
	0x0321B958 ADRP X0, 0xEDA000
	0x0321B95C LDR X0, [X0 + 0x278]
	0x0321B960 BL 0x1C16CF4

ISIL:
	001 Move W8, [X1]
	002 Or W9, W4, W3
	003 And W10, W4, W3
	004 And W9, W9, W2
	005 Or W9, W9, W10
	006 Move W11, 0x7999
	007 Add W9, W5, W9
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Add W8, W9, W8
	010 Add W8, W8, W11
	011 Subtract W9, W31, W6
	012 NotImplemented "Instruction RORV not yet implemented."
	013 Move [X1], W8
	014 Return 

Method: System.Void HH(ref System.UInt32 a, System.UInt32 b, System.UInt32 c, System.UInt32 d, System.UInt32 x, System.Byte s)

Disassembly:
	0x0321B964 MOVZ W8, 0x1
	0x0321B968 STRB W8, [X21 + 0x366]
	0x0321B96C CBZ X19, 0x321B984
	0x0321B970 LDR W8, [X19 + 0x10]
	0x0321B974 CBZ W8, 0x321B984
	0x0321B978 MOV W8, W31
	0x0321B97C CBNZ X20, 0x321B98C
	0x0321B980 B 0x321B9A0
	0x0321B984 MOVZ W8, 0x1
	0x0321B988 CBZ X20, 0x321B9A0
	0x0321B98C LDR W9, [X20 + 0x10]
	0x0321B990 CBZ W9, 0x321B9A0

ISIL:
	001 Move W8, [X1]
	002 Xor W9, W3, W2
	003 Xor W9, W9, W4
	004 Move W10, 0xEBA1
	005 Add W9, W5, W9
	006 NotImplemented "Instruction MOVK not yet implemented."
	007 Add W8, W9, W8
	008 Add W8, W8, W10
	009 Subtract W9, W31, W6
	010 NotImplemented "Instruction RORV not yet implemented."
	011 Move [X1], W8
	012 Return 

Method: System.Void Encode(System.Byte[] output, System.UInt32[] input)

Disassembly:
	0x0321B758 BL 0x3215CDC
	0x0321B75C MOV X0, X21
	0x0321B760 MOV X1, X22
	0x0321B764 MOV X2, X31
	0x0321B768 BL 0x3216064
	0x0321B76C LDR X0, [X24]
	0x0321B770 BL 0x1C16F10
	0x0321B774 MOVZ W1, 0x4
	0x0321B778 MOV X2, X20
	0x0321B77C MOV X3, X31
	0x0321B780 MOV X22, X0
	0x0321B784 BL 0x3215D08
	0x0321B788 LDR X0, [X24]
	0x0321B78C BL 0x1C16F10
	0x0321B790 MOVZ W1, 0x30
	0x0321B794 MOV X2, X31
	0x0321B798 MOV X23, X0
	0x0321B79C BL 0x3215CDC
	0x0321B7A0 CBZ X23, 0x321B8E4
	0x0321B7A4 MOV X0, X23
	0x0321B7A8 MOV X1, X21
	0x0321B7AC MOV X2, X31
	0x0321B7B0 BL 0x3216064
	0x0321B7B4 MOV X0, X23
	0x0321B7B8 MOV X1, X22
	0x0321B7BC MOV X2, X31
	0x0321B7C0 BL 0x3216064
	0x0321B7C4 LDR X8, [X23]
	0x0321B7C8 MOV X0, X23
	0x0321B7CC LDP X9, X1, [X8 + 0x178]
	0x0321B7D0 BLR X9
	0x0321B7D4 MOV X21, X0
	0x0321B7D8 CBZ X0, 0x321B8E4
	0x0321B7DC LDR W8, [X21 + 0x18]
	0x0321B7E0 LDR W4, [X20 + 0x18]
	0x0321B7E4 ADRP X23, 0xED8000
	0x0321B7E8 ADRP X22, 0xED8000
	0x0321B7EC LDR X23, [X23 + 0x5A8]
	0x0321B7F0 LDR X22, [X22 + 0x618]
	0x0321B7F4 SUB W3, W8, W4
	0x0321B7F8 MOV X0, X20
	0x0321B7FC MOV W1, W31
	0x0321B800 MOV X2, X21
	0x0321B804 MOV X5, X31
	0x0321B808 BL 0x33A8A9C
	0x0321B80C LDR X0, [X23]
	0x0321B810 LDR W8, [X0 + 0xE0]
	0x0321B814 CBNZ W8, 0x321B81C
	0x0321B818 BL 0x1C16DFC
	0x0321B81C LDR W8, [X21 + 0x18]
	0x0321B820 MOVZ W0, 0x8
	0x0321B824 MOV X2, X31
	0x0321B828 SUB W8, W19, W8
	0x0321B82C SUB W1, W8, 0x3
	0x0321B830 BL 0x337EDF0
	0x0321B834 LDR W9, [X21 + 0x18]
	0x0321B838 LDR X8, [X22]
	0x0321B83C ADD W19, W0, 0x3
	0x0321B840 MOV W22, W0
	0x0321B844 ADD W1, W19, W9
	0x0321B848 MOV X0, X8
	0x0321B84C BL 0x1C16D6C

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {59}
	004 Move W10, [X1+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W9, 3
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W8, TEMP
	010 Compare X2, 0
	011 JumpIfEqual {59}
	012 Move W12, [X2+24]
	013 Add W11, W8, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Subtract W12, W9, 3
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X10, X2, W11
	018 Add X10, X10, 32
	019 Move W13, [X10]
	020 Add X14, X1, W12
	021 Move [X14+32], W13
	022 Move W13, [X2+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W13, [X1+24]
	025 Add W12, W12, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W13, [X10]
	028 Subtract W14, W9, 2
	029 Add X14, X1, W14
	030 Move W13, W13
	031 ShiftRight W13, 8
	032 And W13, W13, 0x7FFFFFFF
	033 Move [X14+32], W13
	034 Move W13, [X2+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W13, [X1+24]
	037 Add W11, W12, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Subtract W13, W9, 1
	041 Add X13, X1, W13
	042 Add W8, W8, 1
	043 Move [X13+32], W12
	044 Move W12, [X2+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W12, [X1+24]
	047 Add W11, W11, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W10, [X10+3]
	050 Add X12, X1, W9
	051 Add W11, W11, 1
	052 Add W9, W9, 4
	053 Move [X12+32], W10
	054 Move W10, [X1+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X30, [X31+16]
	057 Return 
	058 Call 0x1C17F28
	059 Call 0x1C17F20

Method: System.Void Decode(System.UInt32[] output, System.Byte[] input, System.Int32 index)

Disassembly:
	0x0321B994 TBZ X8, 0x0, 0x321B9CC
	0x0321B998 MOV X19, X20
	0x0321B99C B 0x321B9B8
	0x0321B9A0 TBZ X8, 0x0, 0x321B9B8
	0x0321B9A4 ADRP X8, 0xEDA000
	0x0321B9A8 LDR X8, [X8 + 0x278]
	0x0321B9AC LDR X8, [X8]
	0x0321B9B0 LDR X8, [X8 + 0xB8]
	0x0321B9B4 LDR X19, [X8]
	0x0321B9B8 MOV X0, X19
	0x0321B9BC LDP X20, X19, [X31 + 0x20]
	0x0321B9C0 LDP X22, X21, [X31 + 0x10]
	0x0321B9C4 LDR X30, [X31], #0x30
	0x0321B9C8 RET
	0x0321B9CC CBZ X19, 0x321BA04
	0x0321B9D0 LDR W21, [X19 + 0x10]
	0x0321B9D4 ADD W0, W9, W21
	0x0321B9D8 BL 0x1C8825C
	0x0321B9DC MOV W1, W31
	0x0321B9E0 MOV X2, X19
	0x0321B9E4 MOV X22, X0
	0x0321B9E8 BL 0x322728C
	0x0321B9EC MOV X0, X22
	0x0321B9F0 MOV W1, W21
	0x0321B9F4 MOV X2, X20
	0x0321B9F8 BL 0x322728C
	0x0321B9FC MOV X0, X22
	0x0321BA00 B 0x321B9BC
	0x0321BA04 BL 0x1C16F20
	0x0321BA08 B 0x3226C14
	0x0321BA0C STP X30, X25, [X31 - 0x40]!
	0x0321BA10 STP X24, X23, [X31 + 0x10]
	0x0321BA14 STP X22, X21, [X31 + 0x20]
	0x0321BA18 STP X20, X19, [X31 + 0x30]
	0x0321BA1C ADRP X25, 0x11C1000
	0x0321BA20 ADRP X22, 0xED8000
	0x0321BA24 ADRP X19, 0xF06000
	0x0321BA28 ADRP X20, 0xF06000
	0x0321BA2C ADRP X24, 0xF06000
	0x0321BA30 ADRP X23, 0xF06000
	0x0321BA34 ADRP X21, 0xF06000
	0x0321BA38 LDR X22, [X22 + 0x618]
	0x0321BA3C LDRB W8, [X25 + 0x2FC]
	0x0321BA40 LDR X19, [X19 + 0xD70]
	0x0321BA44 LDR X20, [X20 + 0xD58]
	0x0321BA48 LDR X24, [X24 + 0xD78]
	0x0321BA4C LDR X23, [X23 + 0xD80]
	0x0321BA50 LDR X21, [X21 + 0xD88]
	0x0321BA54 TBNZ X8, 0x0, 0x321BAA8
	0x0321BA58 ADRP X0, 0xED8000
	0x0321BA5C LDR X0, [X0 + 0x618]
	0x0321BA60 BL 0x1C16CF4
	0x0321BA64 ADRP X0, 0xF06000
	0x0321BA68 LDR X0, [X0 + 0xD58]
	0x0321BA6C BL 0x1C16CF4
	0x0321BA70 ADRP X0, 0xF06000
	0x0321BA74 LDR X0, [X0 + 0xD88]
	0x0321BA78 BL 0x1C16CF4
	0x0321BA7C ADRP X0, 0xF06000
	0x0321BA80 LDR X0, [X0 + 0xD80]
	0x0321BA84 BL 0x1C16CF4
	0x0321BA88 ADRP X0, 0xF06000
	0x0321BA8C LDR X0, [X0 + 0xD70]
	0x0321BA90 BL 0x1C16CF4
	0x0321BA94 ADRP X0, 0xF06000
	0x0321BA98 LDR X0, [X0 + 0xD78]
	0x0321BA9C BL 0x1C16CF4
	0x0321BAA0 MOVZ W8, 0x1
	0x0321BAA4 STRB W8, [X25 + 0x2FC]
	0x0321BAA8 LDR X0, [X22]
	0x0321BAAC MOVZ W1, 0x14
	0x0321BAB0 BL 0x1C16D6C
	0x0321BAB4 LDR X1, [X19]
	0x0321BAB8 MOV X2, X31
	0x0321BABC MOV X19, X0
	0x0321BAC0 BL 0x32C5BD8
	0x0321BAC4 LDR X8, [X20]
	0x0321BAC8 MOVZ W1, 0x20
	0x0321BACC LDR X8, [X8 + 0xB8]
	0x0321BAD0 STR X19, [X8]
	0x0321BAD4 LDR X0, [X22]
	0x0321BAD8 BL 0x1C16D6C
	0x0321BADC LDR X1, [X24]
	0x0321BAE0 MOV X2, X31
	0x0321BAE4 MOV X19, X0
	0x0321BAE8 BL 0x32C5BD8
	0x0321BAEC LDR X8, [X20]
	0x0321BAF0 MOVZ W1, 0x30
	0x0321BAF4 LDR X8, [X8 + 0xB8]
	0x0321BAF8 STR X19, [X8 + 0x8]
	0x0321BAFC LDR X0, [X22]
	0x0321BB00 BL 0x1C16D6C
	0x0321BB04 LDR X1, [X23]
	0x0321BB08 MOV X2, X31
	0x0321BB0C MOV X19, X0
	0x0321BB10 BL 0x32C5BD8
	0x0321BB14 LDR X8, [X20]
	0x0321BB18 MOVZ W1, 0x40
	0x0321BB1C LDR X8, [X8 + 0xB8]
	0x0321BB20 STR X19, [X8 + 0x10]
	0x0321BB24 LDR X0, [X22]
	0x0321BB28 BL 0x1C16D6C
	0x0321BB2C LDR X1, [X21]
	0x0321BB30 MOV X2, X31
	0x0321BB34 MOV X19, X0
	0x0321BB38 BL 0x32C5BD8
	0x0321BB3C LDR X8, [X20]
	0x0321BB40 LDP X22, X21, [X31 + 0x20]
	0x0321BB44 LDP X24, X23, [X31 + 0x10]
	0x0321BB48 LDR X8, [X8 + 0xB8]
	0x0321BB4C STR X19, [X8 + 0x18]
	0x0321BB50 LDP X20, X19, [X31 + 0x30]
	0x0321BB54 LDP X30, X25, [X31], #0x40
	0x0321BB58 RET
	0x0321BB5C STP X30, X23, [X31 - 0x30]!
	0x0321BB60 STP X22, X21, [X31 + 0x10]
	0x0321BB64 STP X20, X19, [X31 + 0x20]
	0x0321BB68 ADRP X23, 0x11C1000
	0x0321BB6C ADRP X21, 0xF06000
	0x0321BB70 ADRP X22, 0xF06000
	0x0321BB74 LDRB W8, [X23 + 0x2FD]
	0x0321BB78 LDR X21, [X21 + 0x520]
	0x0321BB7C LDR X22, [X22 + 0x528]
	0x0321BB80 MOV W19, W1
	0x0321BB84 MOV X20, X0
	0x0321BB88 TBNZ X8, 0x0, 0x321BBAC
	0x0321BB8C ADRP X0, 0xF06000
	0x0321BB90 LDR X0, [X0 + 0x520]
	0x0321BB94 BL 0x1C16CF4
	0x0321BB98 ADRP X0, 0xF06000
	0x0321BB9C LDR X0, [X0 + 0x528]
	0x0321BBA0 BL 0x1C16CF4
	0x0321BBA4 MOVZ W8, 0x1
	0x0321BBA8 STRB W8, [X23 + 0x2FD]
	0x0321BBAC MOVZ W8, 0x1
	0x0321BBB0 MOV X0, X20
	0x0321BBB4 MOV X1, X31
	0x0321BBB8 STRB W8, [X20 + 0x21]
	0x0321BBBC BL 0x325B958
	0x0321BBC0 LDR X0, [X21]
	0x0321BBC4 MOVZ W1, 0x1
	0x0321BBC8 BL 0x1C16D6C
	0x0321BBCC STR X0, [X20 + 0x18]
	0x0321BBD0 MOV X21, X0
	0x0321BBD4 LDR X0, [X22]
	0x0321BBD8 BL 0x1C16F10
	0x0321BBDC MOVZ W1, 0x180
	0x0321BBE0 MOVZ W2, 0x4000
	0x0321BBE4 MOVZ W3, 0x8
	0x0321BBE8 MOV X4, X31
	0x0321BBEC MOV X22, X0
	0x0321BBF0 BL 0x3251FDC
	0x0321BBF4 CBZ X21, 0x321BC20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {49}
	004 Move W12, [X1+24]
	005 Move X8, X12
	006 ShiftRight X8, 32
	007 And X8, X8, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, X31
	010 Move W9, W3
	011 Move X10, W12
	012 Add X11, X1, 32
	013 Move X12, X12
	014 ShiftRight X12, 62
	015 And X12, X12, 0x1FFFFFFF
	016 Compare X2, 0
	017 JumpIfEqual {49}
	018 Move W14, [X2+24]
	019 Add X13, X9, X8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X15, X13, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X15, X15, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add W15, W15, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X14, X9, X8
	029 Add X17, X14, 1
	030 Add X13, X2, W13
	031 Add X17, X2, W17
	032 Add X15, X9, X8
	033 Add X16, X2, 32
	034 Move W13, [X13+32]
	035 Add X14, X14, 2
	036 Move W17, [X17+32]
	037 Add X15, X15, 3
	038 Move W14, [X16]
	039 Move W15, [X16]
	040 NotImplemented "Instruction BFM not yet implemented."
	041 Subtract X10, X10, 1
	042 NotImplemented "Instruction BFM not yet implemented."
	043 NotImplemented "Instruction BFM not yet implemented."
	044 Move [X11], W13
	045 Add X8, X8, 4
	046 Move X30, [X31+16]
	047 Return 
	048 Call 0x1C17F28
	049 Call 0x1C17F20
	050 Move [X31-64], X30
	051 Move [X31+16], X24
	052 Move [X31+24], X23
	053 Move [X31+32], X22
	054 Move [X31+40], X21
	055 Move [X31+48], X20
	056 Move [X31+56], X19
	057 Move X8, [X3+56]
	058 Move X21, X3
	059 Move W20, W2
	060 Move X19, X1
	061 Move X22, X0
	062 Compare X8, 0
	063 JumpIfNotEqual {79}
	064 Move X0, 0xF00000
	065 Move X0, [X0+3432]
	066 Call 0x1C17CF4
	067 Move X0, 0xF00000
	068 Move X0, [X0+3440]
	069 Call 0x1C17CF4
	070 Move X0, 0xED9000
	071 Move X0, [X0+1728]
	072 Call 0x1C17CF4
	073 Move X8, [X21+56]
	074 Compare X8, 0
	075 JumpIfNotEqual {79}
	076 Move X0, X21
	077 Call 0x1C5D6E0
	078 Move X8, [X21+56]
	079 Move X24, 0xED9000
	080 Move X24, [X24+1728]
	081 Move X23, [X8]
	082 Move X0, [X24]
	083 Move W9, [X0+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X23
	088 Move X1, X31
	089 Call Type.GetTypeFromHandle, X0
	090 Move X8, 0xF00000
	091 Move X8, [X8+3432]
	092 Move X23, X0
	093 Move X1, X31
	094 Move X8, [X8]
	095 Move X0, X8
	096 Call Type.GetTypeFromHandle, X0
	097 Move X1, X0
	098 Move X0, X23
	099 Move X2, X31
	100 Call Type.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {122}
	105 Move X8, [X21+56]
	106 Move X0, X22
	107 Move X1, X19
	108 Move X2, [X8+16]
	109 Call 0x2219CF0, X0
	110 Move W1, W20
	111 Move W2, W19
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X3, X31
	119 Move X30, [X31+64]
	120 Call SpanHelpers.IndexOf, X0, X1, X2
	121 Return 
	122 Move X0, [X24]
	123 Move X8, [X21+56]
	124 Move W9, [X0+224]
	125 Move X23, [X8]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X23
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Move X8, 0xF00000
	133 Move X8, [X8+3440]
	134 Move X23, X0
	135 Move X1, X31
	136 Move X8, [X8]
	137 Move X0, X8
	138 Call Type.GetTypeFromHandle, X0
	139 Move X1, X0
	140 Move X0, X23
	141 Move X2, X31
	142 Call Type.op_Equality, X0, X1
	143 Move X8, [X21+56]
	144 Move W23, W0
	145 Move X0, X22
	146 Move X1, X19
	147 Move X2, [X8+16]
	148 Call 0x2219CF0, X0
	149 Move TEMP, X23
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {165}
	153 And W1, W20, 255
	154 Move W2, W19
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X24, [X31+16]
	160 Move X23, [X31+24]
	161 Move X3, X31
	162 Move X30, [X31+64]
	163 Call SpanHelpers.IndexOf, X0, X1, X2
	164 Return 
	165 Move X8, [X21+56]
	166 Move W1, W20
	167 Move W2, W19
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X3, [X8+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X24, [X31+16]
	174 Move X23, [X31+24]
	175 Move X30, [X31+64]
	176 Call 0x22580F8, X0, X1, X2
	177 Return 

Method: System.Void MD4Transform(System.UInt32[] state, System.Byte[] block, System.Int32 index)

Disassembly:
	0x0321AFE4 LDR X0, [X8]
	0x0321AFE8 BL 0x1C16D6C
	0x0321AFEC CBZ X0, 0x321B040
	0x0321AFF0 LDR W4, [X0 + 0x18]
	0x0321AFF4 MOV X21, X0
	0x0321AFF8 ADD W1, W22, 0x1
	0x0321AFFC MOV X0, X20
	0x0321B000 MOV X2, X21
	0x0321B004 MOV W3, W31
	0x0321B008 MOV X5, X31
	0x0321B00C BL 0x33A8A9C
	0x0321B010 LDR X0, [X25]
	0x0321B014 LDR W8, [X0 + 0xE0]
	0x0321B018 CBNZ W8, 0x321B020
	0x0321B01C BL 0x1C16DFC
	0x0321B020 MOV X0, X21
	0x0321B024 MOV X1, X19
	0x0321B028 LDP X20, X19, [X31 + 0x30]
	0x0321B02C LDP X22, X21, [X31 + 0x20]
	0x0321B030 LDP X24, X23, [X31 + 0x10]
	0x0321B034 LDP X30, X25, [X31], #0x40
	0x0321B038 B 0x321ABF8
	0x0321B03C BL 0x1C16F28
	0x0321B040 BL 0x1C16F20
	0x0321B044 STR X30, [X31 - 0x40]!
	0x0321B048 STP X24, X23, [X31 + 0x10]
	0x0321B04C STP X22, X21, [X31 + 0x20]
	0x0321B050 STP X20, X19, [X31 + 0x30]
	0x0321B054 ADRP X23, 0x11C1000
	0x0321B058 ADRP X24, 0xF06000
	0x0321B05C LDRB W8, [X23 + 0x2F8]
	0x0321B060 LDR X24, [X24 + 0xD58]
	0x0321B064 MOV X20, X3
	0x0321B068 MOV X21, X2
	0x0321B06C MOV X19, X1
	0x0321B070 MOV X22, X0
	0x0321B074 TBNZ X8, 0x0, 0x321B098
	0x0321B078 ADRP X0, 0xED8000
	0x0321B07C LDR X0, [X0 + 0xE00]
	0x0321B080 BL 0x1C16CF4
	0x0321B084 ADRP X0, 0xF06000
	0x0321B088 LDR X0, [X0 + 0xD58]
	0x0321B08C BL 0x1C16CF4
	0x0321B090 MOVZ W8, 0x1
	0x0321B094 STRB W8, [X23 + 0x2F8]
	0x0321B098 LDR X0, [X24]
	0x0321B09C LDR W8, [X0 + 0xE0]
	0x0321B0A0 CBNZ W8, 0x321B0A8
	0x0321B0A4 BL 0x1C16DFC
	0x0321B0A8 ADRP X23, 0xED8000
	0x0321B0AC LDR X23, [X23 + 0xE00]
	0x0321B0B0 MOV X0, X19
	0x0321B0B4 BL 0x321B21C
	0x0321B0B8 LDR X8, [X24]
	0x0321B0BC MOV X19, X0
	0x0321B0C0 LDR W9, [X8 + 0xE0]
	0x0321B0C4 CBNZ W9, 0x321B0D0
	0x0321B0C8 MOV X0, X8
	0x0321B0CC BL 0x1C16DFC
	0x0321B0D0 MOV X0, X22
	0x0321B0D4 MOV X1, X19
	0x0321B0D8 MOV X2, X21
	0x0321B0DC MOV X3, X20
	0x0321B0E0 MOV W4, W31
	0x0321B0E4 BL 0x321AE6C
	0x0321B0E8 MOV W21, W0
	0x0321B0EC MOV X20, X31
	0x0321B0F0 CBZ X19, 0x321B14C
	0x0321B0F4 LDR X8, [X19]
	0x0321B0F8 LDR X1, [X23]
	0x0321B0FC LDRH W9, [X8 + 0x12E]
	0x0321B100 CBZ X9, 0x321B124
	0x0321B104 LDR X10, [X8 + 0xB0]
	0x0321B108 ADD X10, X10, 0x8
	0x0321B10C LDUR X11, [X10 - 0x8]
	0x0321B110 CMP X11, X1
	0x0321B114 B.EQ 0x321B134
	0x0321B118 SUBS X9, X9, 0x1
	0x0321B11C ADD X10, X10, 0x10
	0x0321B120 B.NE 0x321B10C
	0x0321B124 MOV X0, X19
	0x0321B128 MOV W2, W31
	0x0321B12C BL 0x1C5C788
	0x0321B130 B 0x321B140
	0x0321B134 LDRSW X9, [X10]
	0x0321B138 ADD X8, X8, X9, 0x4, LSL
	0x0321B13C ADD X0, X8, 0x138
	0x0321B140 LDP X8, X1, [X0]
	0x0321B144 MOV X0, X19
	0x0321B148 BLR X8
	0x0321B14C CBNZ X20, 0x321B168
	0x0321B150 AND W0, W21, 0x1
	0x0321B154 LDP X20, X19, [X31 + 0x30]
	0x0321B158 LDP X22, X21, [X31 + 0x20]
	0x0321B15C LDP X24, X23, [X31 + 0x10]
	0x0321B160 LDR X30, [X31], #0x40
	0x0321B164 RET
	0x0321B168 MOV X0, X20
	0x0321B16C BL 0x1C16F18
	0x0321B170 B 0x321B174
	0x0321B174 MOV X21, X0
	0x0321B178 CMP W1, 0x1
	0x0321B17C B.NE 0x321B19C
	0x0321B180 MOV X0, X21
	0x0321B184 BL 0x3EB1AD0
	0x0321B188 LDR X20, [X0]
	0x0321B18C BL 0x3EB1AE0
	0x0321B190 MOV W21, W31
	0x0321B194 CBNZ X19, 0x321B0F4
	0x0321B198 B 0x321B14C
	0x0321B19C MOV X20, X31
	0x0321B1A0 B 0x321B1A8
	0x0321B1A4 MOV X21, X0
	0x0321B1A8 CBZ X19, 0x321B204
	0x0321B1AC LDR X8, [X19]
	0x0321B1B0 LDR X1, [X23]
	0x0321B1B4 LDRH W9, [X8 + 0x12E]
	0x0321B1B8 CBZ X9, 0x321B1DC
	0x0321B1BC LDR X10, [X8 + 0xB0]
	0x0321B1C0 ADD X10, X10, 0x8
	0x0321B1C4 LDUR X11, [X10 - 0x8]
	0x0321B1C8 CMP X11, X1
	0x0321B1CC B.EQ 0x321B1EC
	0x0321B1D0 SUBS X9, X9, 0x1
	0x0321B1D4 ADD X10, X10, 0x10
	0x0321B1D8 B.NE 0x321B1C4
	0x0321B1DC MOV X0, X19
	0x0321B1E0 MOV W2, W31
	0x0321B1E4 BL 0x1C5C788
	0x0321B1E8 B 0x321B1F8
	0x0321B1EC LDRSW X9, [X10]
	0x0321B1F0 ADD X8, X8, X9, 0x4, LSL
	0x0321B1F4 ADD X0, X8, 0x138
	0x0321B1F8 LDP X8, X1, [X0]
	0x0321B1FC MOV X0, X19
	0x0321B200 BLR X8
	0x0321B204 CBNZ X20, 0x321B210
	0x0321B208 MOV X0, X21
	0x0321B20C BL 0x1D2C690
	0x0321B210 MOV X0, X20
	0x0321B214 BL 0x1C16F18
	0x0321B218 BL 0x1990590
	0x0321B21C STR X30, [X31 - 0x20]!
	0x0321B220 STP X20, X19, [X31 + 0x10]
	0x0321B224 ADRP X20, 0x11C1000
	0x0321B228 LDRB W8, [X20 + 0x2FB]
	0x0321B22C MOV X19, X0
	0x0321B230 TBNZ X8, 0x0, 0x321B2CC
	0x0321B234 ADRP X0, 0xF06000
	0x0321B238 LDR X0, [X0 + 0x450]
	0x0321B23C BL 0x1C16CF4
	0x0321B240 ADRP X0, 0xF06000
	0x0321B244 LDR X0, [X0 + 0xD60]
	0x0321B248 BL 0x1C16CF4
	0x0321B24C ADRP X0, 0xF01000
	0x0321B250 LDR X0, [X0 + 0x1B0]
	0x0321B254 BL 0x1C16CF4
	0x0321B258 ADRP X0, 0xED8000
	0x0321B25C LDR X0, [X0 + 0x6C0]
	0x0321B260 BL 0x1C16CF4
	0x0321B264 ADRP X0, 0xF06000
	0x0321B268 LDR X0, [X0 + 0x438]
	0x0321B26C BL 0x1C16CF4
	0x0321B270 ADRP X0, 0xF05000
	0x0321B274 LDR X0, [X0 + 0xD18]
	0x0321B278 BL 0x1C16CF4
	0x0321B27C ADRP X0, 0xF05000
	0x0321B280 LDR X0, [X0 + 0xD20]
	0x0321B284 BL 0x1C16CF4
	0x0321B288 ADRP X0, 0xF05000
	0x0321B28C LDR X0, [X0 + 0xD40]
	0x0321B290 BL 0x1C16CF4
	0x0321B294 ADRP X0, 0xF05000
	0x0321B298 LDR X0, [X0 + 0xD48]
	0x0321B29C BL 0x1C16CF4
	0x0321B2A0 ADRP X0, 0xF05000
	0x0321B2A4 LDR X0, [X0 + 0xD50]
	0x0321B2A8 BL 0x1C16CF4
	0x0321B2AC ADRP X0, 0xF05000
	0x0321B2B0 LDR X0, [X0 + 0xD58]
	0x0321B2B4 BL 0x1C16CF4
	0x0321B2B8 ADRP X0, 0xF06000
	0x0321B2BC LDR X0, [X0 + 0x440]
	0x0321B2C0 BL 0x1C16CF4
	0x0321B2C4 MOVZ W8, 0x1
	0x0321B2C8 STRB W8, [X20 + 0x2FB]
	0x0321B2CC MOV X0, X19
	0x0321B2D0 MOV X1, X31
	0x0321B2D4 BL 0x335C87C
	0x0321B2D8 MOVZ W8, 0xD733
	0x0321B2DC MOVK W8, 0x73600000
	0x0321B2E0 CMP W0, W8
	0x0321B2E4 B.HI 0x321B340
	0x0321B2E8 MOVZ W8, 0xF834
	0x0321B2EC MOVK W8, 0x18BC0000
	0x0321B2F0 CMP W0, W8
	0x0321B2F4 B.HI 0x321B38C
	0x0321B2F8 MOVZ W8, 0x1627
	0x0321B2FC MOVK W8, 0xC520000
	0x0321B300 CMP W0, W8
	0x0321B304 B.EQ 0x321B41C
	0x0321B308 MOVZ W8, 0xF834
	0x0321B30C MOVK W8, 0x18BC0000
	0x0321B310 CMP W0, W8
	0x0321B314 B.NE 0x321B4BC
	0x0321B318 ADRP X8, 0xF05000
	0x0321B31C LDR X8, [X8 + 0xD40]
	0x0321B320 MOV X0, X19
	0x0321B324 LDR X1, [X8]
	0x0321B328 BL 0x3226C14
	0x0321B32C TBZ X0, 0x0, 0x321B4BC
	0x0321B330 LDP X20, X19, [X31 + 0x10]
	0x0321B334 MOV X0, X31
	0x0321B338 LDR X30, [X31], #0x20
	0x0321B33C B 0x325D0E8
	0x0321B340 MOVZ W8, 0xF99A
	0x0321B344 MOVK W8, 0xB0B20000
	0x0321B348 CMP W0, W8
	0x0321B34C B.HI 0x321B3D4
	0x0321B350 B.EQ 0x321B444
	0x0321B354 MOVZ W8, 0xDF12
	0x0321B358 MOVK W8, 0x78600000
	0x0321B35C CMP W0, W8
	0x0321B360 B.NE 0x321B4BC
	0x0321B364 ADRP X8, 0xF05000
	0x0321B368 LDR X8, [X8 + 0xD48]
	0x0321B36C MOV X0, X19
	0x0321B370 LDR X1, [X8]
	0x0321B374 BL 0x3226C14
	0x0321B378 TBZ X0, 0x0, 0x321B4BC
	0x0321B37C LDP X20, X19, [X31 + 0x10]
	0x0321B380 MOV X0, X31
	0x0321B384 LDR X30, [X31], #0x20
	0x0321B388 B 0x3219618
	0x0321B38C MOVZ W8, 0xD5A0
	0x0321B390 MOVK W8, 0x72600000
	0x0321B394 CMP W0, W8
	0x0321B398 B.EQ 0x321B46C
	0x0321B39C MOVZ W8, 0xD733
	0x0321B3A0 MOVK W8, 0x73600000
	0x0321B3A4 CMP W0, W8
	0x0321B3A8 B.NE 0x321B4BC
	0x0321B3AC ADRP X8, 0xF05000
	0x0321B3B0 LDR X8, [X8 + 0xD50]
	0x0321B3B4 MOV X0, X19
	0x0321B3B8 LDR X1, [X8]
	0x0321B3BC BL 0x3226C14
	0x0321B3C0 TBZ X0, 0x0, 0x321B4BC
	0x0321B3C4 LDP X20, X19, [X31 + 0x10]
	0x0321B3C8 MOV X0, X31
	0x0321B3CC LDR X30, [X31], #0x20
	0x0321B3D0 B 0x32560FC
	0x0321B3D4 MOVZ W8, 0xB20B
	0x0321B3D8 MOVK W8, 0xB4720000
	0x0321B3DC CMP W0, W8
	0x0321B3E0 B.EQ 0x321B494
	0x0321B3E4 MOVZ W8, 0x1476
	0x0321B3E8 MOVK W8, 0xB6140000
	0x0321B3EC CMP W0, W8
	0x0321B3F0 B.NE 0x321B4BC
	0x0321B3F4 ADRP X8, 0xF05000
	0x0321B3F8 LDR X8, [X8 + 0xD18]
	0x0321B3FC MOV X0, X19
	0x0321B400 LDR X1, [X8]
	0x0321B404 BL 0x3226C14
	0x0321B408 TBZ X0, 0x0, 0x321B4BC
	0x0321B40C LDP X20, X19, [X31 + 0x10]
	0x0321B410 MOV X0, X31
	0x0321B414 LDR X30, [X31], #0x20
	0x0321B418 B 0x325E6BC
	0x0321B41C ADRP X8, 0xF06000
	0x0321B420 LDR X8, [X8 + 0x440]
	0x0321B424 MOV X0, X19
	0x0321B428 LDR X1, [X8]
	0x0321B42C BL 0x3226C14
	0x0321B430 TBZ X0, 0x0, 0x321B4BC
	0x0321B434 LDP X20, X19, [X31 + 0x10]
	0x0321B438 MOV X0, X31
	0x0321B43C LDR X30, [X31], #0x20
	0x0321B440 B 0x3259E04
	0x0321B444 ADRP X8, 0xF05000
	0x0321B448 LDR X8, [X8 + 0xD20]
	0x0321B44C MOV X0, X19
	0x0321B450 LDR X1, [X8]
	0x0321B454 BL 0x3226C14
	0x0321B458 TBZ X0, 0x0, 0x321B4BC
	0x0321B45C LDP X20, X19, [X31 + 0x10]
	0x0321B460 MOV X0, X31
	0x0321B464 LDR X30, [X31], #0x20
	0x0321B468 B 0x325D984
	0x0321B46C ADRP X8, 0xF06000
	0x0321B470 LDR X8, [X8 + 0x438]
	0x0321B474 MOV X0, X19
	0x0321B478 LDR X1, [X8]
	0x0321B47C BL 0x3226C14
	0x0321B480 TBZ X0, 0x0, 0x321B4BC
	0x0321B484 LDP X20, X19, [X31 + 0x10]
	0x0321B488 MOV X0, X31
	0x0321B48C LDR X30, [X31], #0x20
	0x0321B490 B 0x3219CEC
	0x0321B494 ADRP X8, 0xF05000
	0x0321B498 LDR X8, [X8 + 0xD58]
	0x0321B49C MOV X0, X19
	0x0321B4A0 LDR X1, [X8]
	0x0321B4A4 BL 0x3226C14
	0x0321B4A8 TBZ X0, 0x0, 0x321B4BC
	0x0321B4AC LDP X20, X19, [X31 + 0x10]
	0x0321B4B0 MOV X0, X31
	0x0321B4B4 LDR X30, [X31], #0x20
	0x0321B4B8 B 0x325F434
	0x0321B4BC ADRP X8, 0xED8000
	0x0321B4C0 LDR X8, [X8 + 0x6C0]
	0x0321B4C4 LDR X0, [X8]
	0x0321B4C8 LDR W8, [X0 + 0xE0]
	0x0321B4CC CBNZ W8, 0x321B4D4
	0x0321B4D0 BL 0x1C16DFC
	0x0321B4D4 ADRP X8, 0xF01000
	0x0321B4D8 LDR X8, [X8 + 0x1B0]
	0x0321B4DC ADRP X9, 0xF06000
	0x0321B4E0 LDR X9, [X9 + 0xD60]
	0x0321B4E4 LDR X1, [X8]
	0x0321B4E8 LDR X2, [X9]
	0x0321B4EC MOV X0, X19
	0x0321B4F0 BL 0x1C1703C
	0x0321B4F4 MOV X1, X31
	0x0321B4F8 BL 0x33A703C
	0x0321B4FC CBZ X0, 0x321B534
	0x0321B500 ADRP X9, 0xF06000
	0x0321B504 LDR X9, [X9 + 0x450]
	0x0321B508 LDR X8, [X0]
	0x0321B50C LDR X1, [X9]
	0x0321B510 LDRB W10, [X8 + 0x130]
	0x0321B514 LDRB W9, [X1 + 0x130]
	0x0321B518 CMP W10, W9
	0x0321B51C B.CC 0x321B540
	0x0321B520 LDR X8, [X8 + 0xC8]
	0x0321B524 ADD X8, X8, X9, 0x3, LSL
	0x0321B528 LDUR X8, [X8 - 0x8]
	0x0321B52C CMP X8, X1
	0x0321B530 B.NE 0x321B540
	0x0321B534 LDP X20, X19, [X31 + 0x10]
	0x0321B538 LDR X30, [X31], #0x20
	0x0321B53C RET
	0x0321B540 BL 0x1C171E0
	0x0321B544 B 0x321B54C
	0x0321B548 B 0x321B54C
	0x0321B54C MOV X20, X0
	0x0321B550 CMP W1, 0x1
	0x0321B554 B.NE 0x321B5FC
	0x0321B558 MOV X0, X20
	0x0321B55C BL 0x3EB1AD0
	0x0321B560 MOV X20, X0
	0x0321B564 ADRP X0, 0xEDE000
	0x0321B568 LDR X0, [X0 + 0xCC0]
	0x0321B56C BL 0x1C16D08
	0x0321B570 LDR X8, [X20]
	0x0321B574 LDR X1, [X8]
	0x0321B578 BL 0x1C17270
	0x0321B57C TBZ X0, 0x0, 0x321B5D4
	0x0321B580 BL 0x3EB1AE0
	0x0321B584 ADRP X0, 0xF06000
	0x0321B588 LDR X0, [X0 + 0x140]
	0x0321B58C BL 0x1C16D08
	0x0321B590 MOV X1, X19
	0x0321B594 BL 0x321B938
	0x0321B598 MOV X19, X0
	0x0321B59C ADRP X0, 0xF05000
	0x0321B5A0 LDR X0, [X0 + 0xCE0]
	0x0321B5A4 BL 0x1C16D08
	0x0321B5A8 BL 0x1C16F10
	0x0321B5AC MOV X1, X19
	0x0321B5B0 MOV X2, X31
	0x0321B5B4 MOV X20, X0
	0x0321B5B8 BL 0x3252170
	0x0321B5BC ADRP X0, 0xF06000
	0x0321B5C0 LDR X0, [X0 + 0xD60]
	0x0321B5C4 BL 0x1C16D08
	0x0321B5C8 MOV X1, X0
	0x0321B5CC MOV X0, X20
	0x0321B5D0 BL 0x1C16DEC
	0x0321B5D4 MOVZ W0, 0x8
	0x0321B5D8 BL 0x3EB1AF0
	0x0321B5DC LDR X8, [X20]
	0x0321B5E0 STR X8, [X0]
	0x0321B5E4 ADRP X1, 0xC99000
	0x0321B5E8 ADD X1, X1, 0xE58
	0x0321B5EC MOV X2, X31
	0x0321B5F0 BL 0x3EB1B00
	0x0321B5F4 MOV X20, X0
	0x0321B5F8 BL 0x3EB1AE0
	0x0321B5FC MOV X0, X20
	0x0321B600 BL 0x1D2C690
	0x0321B604 BL 0x1990590
	0x0321B608 STR X30, [X31 - 0x40]!
	0x0321B60C STP X24, X23, [X31 + 0x10]
	0x0321B610 STP X22, X21, [X31 + 0x20]
	0x0321B614 STP X20, X19, [X31 + 0x30]
	0x0321B618 ADRP X22, 0x11C1000
	0x0321B61C LDRB W8, [X22 + 0x2FA]
	0x0321B620 MOV W19, W2
	0x0321B624 MOV X20, X1
	0x0321B628 MOV X21, X0
	0x0321B62C TBNZ X8, 0x0, 0x321B668
	0x0321B630 ADRP X0, 0xF06000
	0x0321B634 LDR X0, [X0 + 0xC28]
	0x0321B638 BL 0x1C16CF4
	0x0321B63C ADRP X0, 0xED8000
	0x0321B640 LDR X0, [X0 + 0x618]
	0x0321B644 BL 0x1C16CF4
	0x0321B648 ADRP X0, 0xF05000
	0x0321B64C LDR X0, [X0 + 0xBD8]
	0x0321B650 BL 0x1C16CF4
	0x0321B654 ADRP X0, 0xED8000
	0x0321B658 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X1, 0
	013 JumpIfEqual {418}
	014 Move W8, [X1+24]
	015 Move X19, X1
	016 Compare W8, 0
	017 JumpIfEqual {417}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X1, [X0+64]
	022 Move W23, [X19+32]
	023 Move W21, [X19+36]
	024 Move W22, [X19+40]
	025 Move W24, [X19+44]
	026 Move X20, X0
	027 Call MD4Managed.Decode, X0, X1, X2, X3
	028 Move X1, [X20+64]
	029 Compare X1, 0
	030 JumpIfEqual {418}
	031 Move W8, [X1+24]
	032 Compare W8, 0
	033 JumpIfEqual {417}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {417}
	052 Move W0, [X1+32]
	053 Move W9, [X1+36]
	054 And W20, W22, W21
	055 NotImplemented "Instruction BIC not yet implemented."
	056 Add W20, W20, W23
	057 Add W20, W20, W25
	058 Add W20, W20, W0
	059 NotImplemented "Instruction EXTR not yet implemented."
	060 And W23, W20, W21
	061 NotImplemented "Instruction BIC not yet implemented."
	062 Add W23, W23, W24
	063 Add W23, W23, W25
	064 Add W23, W23, W9
	065 Move W12, [X1+40]
	066 Move W10, [X1+44]
	067 NotImplemented "Instruction EXTR not yet implemented."
	068 And W24, W23, W20
	069 NotImplemented "Instruction BIC not yet implemented."
	070 Add W22, W24, W22
	071 Add W22, W22, W25
	072 Add W22, W22, W12
	073 NotImplemented "Instruction EXTR not yet implemented."
	074 And W24, W22, W23
	075 NotImplemented "Instruction BIC not yet implemented."
	076 Add W21, W24, W21
	077 Add W21, W21, W25
	078 Add W21, W21, W10
	079 Move W14, [X1+48]
	080 Move W13, [X1+52]
	081 NotImplemented "Instruction EXTR not yet implemented."
	082 And W24, W21, W22
	083 NotImplemented "Instruction BIC not yet implemented."
	084 Add W20, W24, W20
	085 Add W20, W20, W25
	086 Add W20, W20, W14
	087 NotImplemented "Instruction EXTR not yet implemented."
	088 And W24, W20, W21
	089 NotImplemented "Instruction BIC not yet implemented."
	090 Add W23, W24, W23
	091 Add W23, W23, W25
	092 Add W23, W23, W13
	093 Move W15, [X1+56]
	094 Move W11, [X1+60]
	095 NotImplemented "Instruction EXTR not yet implemented."
	096 And W24, W23, W20
	097 NotImplemented "Instruction BIC not yet implemented."
	098 Add W22, W24, W22
	099 Add W22, W22, W25
	100 Add W22, W22, W15
	101 NotImplemented "Instruction EXTR not yet implemented."
	102 And W24, W22, W23
	103 NotImplemented "Instruction BIC not yet implemented."
	104 Add W21, W24, W21
	105 Add W21, W21, W25
	106 Add W21, W21, W11
	107 Move W6, [X1+64]
	108 Move W17, [X1+68]
	109 NotImplemented "Instruction EXTR not yet implemented."
	110 And W24, W21, W22
	111 NotImplemented "Instruction BIC not yet implemented."
	112 Add W20, W24, W20
	113 Add W20, W20, W25
	114 Add W20, W20, W6
	115 NotImplemented "Instruction EXTR not yet implemented."
	116 And W24, W20, W21
	117 NotImplemented "Instruction BIC not yet implemented."
	118 Add W23, W24, W23
	119 Add W23, W23, W25
	120 Add W23, W23, W17
	121 Move W2, [X1+72]
	122 Move W16, [X1+76]
	123 NotImplemented "Instruction EXTR not yet implemented."
	124 And W24, W23, W20
	125 NotImplemented "Instruction BIC not yet implemented."
	126 Add W22, W24, W22
	127 Add W22, W22, W25
	128 Add W22, W22, W2
	129 NotImplemented "Instruction EXTR not yet implemented."
	130 And W24, W22, W23
	131 NotImplemented "Instruction BIC not yet implemented."
	132 Add W21, W24, W21
	133 Add W21, W21, W25
	134 Add W21, W21, W16
	135 Move W4, [X1+80]
	136 Move W3, [X1+84]
	137 NotImplemented "Instruction EXTR not yet implemented."
	138 And W24, W21, W22
	139 NotImplemented "Instruction BIC not yet implemented."
	140 Add W20, W24, W20
	141 Add W20, W20, W25
	142 Add W20, W20, W4
	143 NotImplemented "Instruction EXTR not yet implemented."
	144 And W24, W20, W21
	145 NotImplemented "Instruction BIC not yet implemented."
	146 Add W23, W24, W23
	147 Add W23, W23, W25
	148 Add W23, W23, W3
	149 Move W5, [X1+88]
	150 Move W1, [X1+92]
	151 NotImplemented "Instruction EXTR not yet implemented."
	152 And W24, W23, W20
	153 NotImplemented "Instruction BIC not yet implemented."
	154 Add W22, W24, W22
	155 Add W22, W22, W25
	156 Add W22, W22, W5
	157 NotImplemented "Instruction EXTR not yet implemented."
	158 And W24, W22, W23
	159 Add W26, W0, W20
	160 NotImplemented "Instruction BIC not yet implemented."
	161 Add W21, W24, W21
	162 Add W20, W21, W20
	163 Add W27, W14, W23
	164 Or W23, W22, W23
	165 Add W20, W20, W1
	166 And W23, W23, W20
	167 Move W7, 0x7999
	168 Or W23, W23, W24
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 Add W23, W26, W23
	171 Or W24, W22, W20
	172 Add W23, W23, W7
	173 Add W25, W6, W22
	174 And W22, W22, W20
	175 And W24, W24, W23
	176 Or W22, W24, W22
	177 NotImplemented "Instruction EXTR not yet implemented."
	178 Add W22, W27, W22
	179 Or W24, W26, W20
	180 Add W22, W22, W7
	181 NotImplemented "Instruction EXTR not yet implemented."
	182 And W20, W26, W20
	183 And W24, W24, W22
	184 Or W20, W24, W20
	185 NotImplemented "Instruction EXTR not yet implemented."
	186 Add W20, W25, W20
	187 Or W24, W27, W23
	188 Add W20, W20, W7
	189 And W23, W27, W23
	190 And W24, W24, W20
	191 Add W21, W4, W21
	192 Or W23, W24, W23
	193 NotImplemented "Instruction EXTR not yet implemented."
	194 Add W21, W21, W23
	195 Or W24, W25, W22
	196 Add W21, W21, W7
	197 And W22, W25, W22
	198 And W24, W24, W21
	199 Add W26, W9, W26
	200 Or W22, W24, W22
	201 NotImplemented "Instruction EXTR not yet implemented."
	202 Add W22, W26, W22
	203 Or W24, W23, W20
	204 Add W22, W22, W7
	205 And W20, W23, W20
	206 And W24, W24, W22
	207 Add W27, W13, W27
	208 Or W20, W24, W20
	209 NotImplemented "Instruction EXTR not yet implemented."
	210 Add W20, W27, W20
	211 Or W24, W26, W21
	212 Add W20, W20, W7
	213 And W21, W26, W21
	214 And W24, W24, W20
	215 Add W25, W17, W25
	216 Or W21, W24, W21
	217 NotImplemented "Instruction EXTR not yet implemented."
	218 Add W21, W25, W21
	219 Or W24, W27, W22
	220 Add W21, W21, W7
	221 And W22, W27, W22
	222 And W24, W24, W21
	223 Add W23, W3, W23
	224 Or W22, W24, W22
	225 NotImplemented "Instruction EXTR not yet implemented."
	226 Add W22, W23, W22
	227 Or W24, W25, W20
	228 Add W22, W22, W7
	229 And W20, W25, W20
	230 And W24, W24, W22
	231 Add W26, W12, W26
	232 Or W20, W24, W20
	233 NotImplemented "Instruction EXTR not yet implemented."
	234 Add W20, W26, W20
	235 Or W24, W23, W21
	236 Add W20, W20, W7
	237 And W21, W23, W21
	238 And W24, W24, W20
	239 Add W27, W15, W27
	240 Or W21, W24, W21
	241 NotImplemented "Instruction EXTR not yet implemented."
	242 Add W21, W27, W21
	243 Or W24, W26, W22
	244 Add W21, W21, W7
	245 And W22, W26, W22
	246 And W24, W24, W21
	247 Add W25, W2, W25
	248 NotImplemented "Instruction EXTR not yet implemented."
	249 Or W22, W24, W22
	250 Or W24, W27, W20
	251 And W28, W27, W20
	252 Add W20, W25, W22
	253 Add W22, W20, W7
	254 And W24, W24, W22
	255 Add W23, W5, W23
	256 Or W24, W24, W28
	257 NotImplemented "Instruction EXTR not yet implemented."
	258 Add W23, W23, W24
	259 Or W25, W20, W21
	260 Add W23, W23, W7
	261 And W21, W20, W21
	262 And W25, W25, W23
	263 Add W26, W10, W26
	264 Or W21, W25, W21
	265 NotImplemented "Instruction EXTR not yet implemented."
	266 Add W21, W26, W21
	267 Or W25, W24, W22
	268 Add W21, W21, W7
	269 And W22, W24, W22
	270 And W25, W25, W21
	271 Or W22, W25, W22
	272 Add W27, W11, W27
	273 NotImplemented "Instruction EXTR not yet implemented."
	274 Add W22, W27, W22
	275 Or W25, W26, W23
	276 Add W22, W22, W7
	277 And W23, W26, W23
	278 And W25, W25, W22
	279 Or W23, W25, W23
	280 Add W20, W16, W20
	281 NotImplemented "Instruction EXTR not yet implemented."
	282 Add W20, W20, W23
	283 Or W25, W27, W21
	284 Add W20, W20, W7
	285 And W21, W27, W21
	286 And W25, W25, W20
	287 Add W24, W1, W24
	288 Or W21, W25, W21
	289 Add W21, W24, W21
	290 Add W7, W21, W7
	291 NotImplemented "Instruction EXTR not yet implemented."
	292 NotImplemented "Instruction EXTR not yet implemented."
	293 Xor W20, W21, W20
	294 Add W26, W0, W26
	295 Move W0, 0xEBA1
	296 Add W4, W4, W21
	297 Xor W21, W20, W22
	298 NotImplemented "Instruction MOVK not yet implemented."
	299 Add W21, W26, W21
	300 Add W21, W21, W0
	301 Add W6, W6, W27
	302 Xor W20, W20, W21
	303 NotImplemented "Instruction EXTR not yet implemented."
	304 Add W6, W6, W20
	305 Xor W7, W22, W7
	306 Add W6, W6, W0
	307 Add W14, W14, W23
	308 Xor W7, W7, W6
	309 NotImplemented "Instruction EXTR not yet implemented."
	310 Add W14, W14, W7
	311 Xor W7, W20, W21
	312 Add W14, W14, W0
	313 Xor W7, W7, W14
	314 Add W2, W2, W20
	315 NotImplemented "Instruction EXTR not yet implemented."
	316 Add W4, W4, W7
	317 Xor W6, W20, W6
	318 Add W4, W4, W0
	319 Add W12, W12, W22
	320 Xor W6, W6, W4
	321 NotImplemented "Instruction EXTR not yet implemented."
	322 Add W12, W12, W6
	323 Xor W14, W7, W14
	324 Add W12, W12, W0
	325 Xor W14, W14, W12
	326 NotImplemented "Instruction EXTR not yet implemented."
	327 Add W14, W2, W14
	328 Xor W2, W6, W4
	329 Add W14, W14, W0
	330 Add W15, W15, W20
	331 Xor W2, W2, W14
	332 NotImplemented "Instruction EXTR not yet implemented."
	333 Add W15, W15, W2
	334 Xor W12, W4, W12
	335 Add W15, W15, W0
	336 Add W5, W5, W7
	337 Xor W12, W12, W15
	338 NotImplemented "Instruction EXTR not yet implemented."
	339 Add W12, W5, W12
	340 Xor W14, W2, W14
	341 Add W12, W12, W0
	342 Add W9, W9, W6
	343 Xor W14, W14, W12
	344 Add W2, W13, W2
	345 NotImplemented "Instruction EXTR not yet implemented."
	346 Add W9, W9, W14
	347 Xor W14, W13, W15
	348 Add W9, W9, W0
	349 Add W17, W17, W4
	350 Xor W14, W14, W9
	351 Add W15, W3, W13
	352 NotImplemented "Instruction EXTR not yet implemented."
	353 Add W14, W17, W14
	354 Xor W12, W13, W12
	355 Add W14, W14, W0
	356 Xor W12, W12, W14
	357 Add W10, W10, W13
	358 NotImplemented "Instruction EXTR not yet implemented."
	359 Add W12, W2, W12
	360 Xor W17, W13, W9
	361 Add W9, W12, W0
	362 Xor W17, W17, W9
	363 NotImplemented "Instruction EXTR not yet implemented."
	364 Add W15, W15, W17
	365 Xor W17, W12, W14
	366 Add W14, W15, W0
	367 Move W27, [X19+32]
	368 Xor W15, W17, W14
	369 Add W10, W10, W15
	370 Add W10, W10, W0
	371 NotImplemented "Instruction EXTR not yet implemented."
	372 Add W17, W27, W15
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move [X19+32], W17
	375 NotImplemented "Instruction EXTR not yet implemented."
	376 Xor W9, W17, W9
	377 Add W13, W16, W13
	378 Xor W9, W9, W10
	379 Add W9, W13, W9
	380 Xor W14, W15, W14
	381 Add W13, W9, W0
	382 Add W11, W11, W12
	383 NotImplemented "Instruction EXTR not yet implemented."
	384 Xor W13, W14, W13
	385 Add W11, W11, W13
	386 Xor W13, W9, W10
	387 Add W10, W11, W0
	388 Move W12, [X19+36]
	389 Add W15, W1, W17
	390 Xor W11, W13, W10
	391 Add W11, W15, W11
	392 Add W11, W11, W0
	393 NotImplemented "Instruction EXTR not yet implemented."
	394 Add W11, W12, W11
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move [X19+36], W11
	397 Move W11, [X19+40]
	398 NotImplemented "Instruction EXTR not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Add W10, W11, W10
	401 Move [X19+40], W10
	402 Move W8, [X19+44]
	403 Move X22, [X31+64]
	404 Move X21, [X31+72]
	405 Move X24, [X31+48]
	406 Move X23, [X31+56]
	407 Move X26, [X31+32]
	408 Move X25, [X31+40]
	409 Add W8, W8, W9
	410 Move [X19+44], W8
	411 Move X20, [X31+80]
	412 Move X19, [X31+88]
	413 Move X28, [X31+16]
	414 Move X27, [X31+24]
	415 Move X30, [X31+96]
	416 Return 
	417 Call 0x1C17F28
	418 Call 0x1C17F20

