Type: Mono.Security.ASN1

Method: System.Void .ctor(System.Byte tag)

Disassembly:
	0x03216CDC B.LS 0x3216D48
	0x03216CE0 ADD X8, X1, W2, SXTW
	0x03216CE4 LDRB W8, [X8 + 0x20]
	0x03216CE8 STRB W8, [X0]
	0x03216CEC LDR W9, [X1 + 0x18]
	0x03216CF0 ADD W8, W2, 0x1
	0x03216CF4 CMP W8, W9
	0x03216CF8 B.CS 0x3216D48
	0x03216CFC ADD X8, X1, W8, SXTW
	0x03216D00 LDRB W8, [X8 + 0x20]
	0x03216D04 STRB W8, [X0 + 0x1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move [X20+24], X31
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void .ctor(System.Byte tag, System.Byte[] data)

Disassembly:
	0x03216D08 LDR W9, [X1 + 0x18]
	0x03216D0C ADD W8, W2, 0x2
	0x03216D10 CMP W8, W9
	0x03216D14 B.CS 0x3216D48
	0x03216D18 ADD X8, X1, W8, SXTW
	0x03216D1C LDRB W8, [X8 + 0x20]
	0x03216D20 STRB W8, [X0 + 0x2]
	0x03216D24 LDR W9, [X1 + 0x18]
	0x03216D28 ADD W8, W2, 0x3
	0x03216D2C CMP W8, W9
	0x03216D30 B.CS 0x3216D48
	0x03216D34 ADD X8, X1, W8, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(System.Byte[] data)

Disassembly:
	0x03216D38 LDRB W8, [X8 + 0x20]
	0x03216D3C STRB W8, [X0 + 0x3]
	0x03216D40 LDR X30, [X31], #0x10
	0x03216D44 RET
	0x03216D48 BL 0x1C16F28
	0x03216D4C BL 0x1C16F20
	0x03216D50 STR X30, [X31 - 0x10]!
	0x03216D54 CBZ X1, 0x3216DA0
	0x03216D58 MOV W9, W2
	0x03216D5C MOV X8, X31
	0x03216D60 UBFM X10, X9, 0x20, 0x1F
	0x03216D64 MOVZ X11, 0x1
	0x03216D68 LDR W12, [X1 + 0x18]
	0x03216D6C ADD X13, X9, X8
	0x03216D70 CMP X13, X12
	0x03216D74 B.CS 0x3216D9C
	0x03216D78 ADD X12, X1, X10, 0x20, ASR
	0x03216D7C LDRB W12, [X12 + 0x20]
	0x03216D80 ADD X10, X10, X11
	0x03216D84 STRB W12, [X0, X8, LSL]
	0x03216D88 ADD X8, X8, 0x1
	0x03216D8C CMP X8, 0x8
	0x03216D90 B.NE 0x3216D68
	0x03216D94 LDR X30, [X31], #0x10
	0x03216D98 RET
	0x03216D9C BL 0x1C16F28
	0x03216DA0 BL 0x1C16F20
	0x03216DA4 STR X30, [X31 - 0x10]!
	0x03216DA8 MOV W2, W1
	0x03216DAC MOV X1, X0
	0x03216DB0 ADD X0, X31, 0xC
	0x03216DB4 STR W31, [X31 + 0xC]
	0x03216DB8 BL 0x3216CCC
	0x03216DBC LDR V0, [X31 + 0xC]
	0x03216DC0 LDR X30, [X31], #0x10
	0x03216DC4 RET
	0x03216DC8 STR X30, [X31 - 0x10]!
	0x03216DCC MOV W2, W1
	0x03216DD0 MOV X1, X0
	0x03216DD4 ADD X0, X31, 0x8
	0x03216DD8 STR X31, [X31 + 0x8]
	0x03216DDC BL 0x3216D50
	0x03216DE0 LDR V0, [X31 + 0x8]
	0x03216DE4 LDR X30, [X31], #0x10
	0x03216DE8 RET
	0x03216DEC STR X30, [X31 - 0x10]!
	0x03216DF0 CBZ X0, 0x3216E5C
	0x03216DF4 LDR W10, [X0 + 0x18]
	0x03216DF8 ADD W8, W1, 0x3
	0x03216DFC CMP W8, W10
	0x03216E00 B.CS 0x3216E58
	0x03216E04 ADD W9, W1, 0x2
	0x03216E08 CMP W9, W10
	0x03216E0C B.CS 0x3216E58
	0x03216E10 ADD W11, W1, 0x1
	0x03216E14 CMP W11, W10
	0x03216E18 B.CS 0x3216E58
	0x03216E1C CMP W10, W1
	0x03216E20 B.LS 0x3216E58
	0x03216E24 ADD X8, X0, W8, SXTW
	0x03216E28 ADD X9, X0, W9, SXTW
	0x03216E2C LDRB W8, [X8 + 0x20]
	0x03216E30 LDRB W9, [X9 + 0x20]
	0x03216E34 ADD X10, X0, 0x20
	0x03216E38 LDRB W11, [X10, W11, SXTW]
	0x03216E3C LDRB W10, [X10, W1, SXTW]
	0x03216E40 UBFM W8, W8, 0x8, 0x7
	0x03216E44 BFM W8, W9, 0x10, 0x7
	0x03216E48 BFM W8, W11, 0x18, 0x7
	0x03216E4C ORR W0, W8, W10, 0x0
	0x03216E50 LDR X30, [X31], #0x10
	0x03216E54 RET
	0x03216E58 BL 0x1C16F28
	0x03216E5C BL 0x1C16F20
	0x03216E60 STR X30, [X31 - 0x10]!
	0x03216E64 CBZ X0, 0x3216ED0
	0x03216E68 LDR W10, [X0 + 0x18]
	0x03216E6C ADD W8, W1, 0x3
	0x03216E70 CMP W8, W10
	0x03216E74 B.CS 0x3216ECC
	0x03216E78 ADD W9, W1, 0x2
	0x03216E7C CMP W9, W10
	0x03216E80 B.CS 0x3216ECC
	0x03216E84 ADD W11, W1, 0x1
	0x03216E88 CMP W11, W10
	0x03216E8C B.CS 0x3216ECC
	0x03216E90 CMP W10, W1
	0x03216E94 B.LS 0x3216ECC
	0x03216E98 ADD X8, X0, W8, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11C7000
	007 Move W8, [X21+716]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xEDE000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+716], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Compare X20, 0
	023 JumpIfEqual {78}
	024 Move W11, [X20+24]
	025 Compare W11, 0
	026 JumpIfEqual {77}
	027 Move W8, [X20+32]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move [X19+16], W8
	030 Move W8, [X20+33]
	031 Subtract W9, W8, 129
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W22, 2
	034 Move W21, W8
	035 Move W21, W31
	036 Subtract X10, X8, 128
	037 Subtract W11, W11, 2
	038 Add X12, X20, 34
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W13, [X12+1]
	041 Subtract X10, X10, 1
	042 NotImplemented "Instruction BFM not yet implemented."
	043 Move W21, W13
	044 Subtract W22, W8, 126
	045 Move X8, 0xEDE000
	046 Move X8, [X8+1560]
	047 Move W1, W21
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X2, X0
	051 Move [X19+24], X0
	052 Move X0, X20
	053 Move W1, W22
	054 Move W3, W31
	055 Move W4, W21
	056 Move X5, X31
	057 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	058 Move W8, [X19+16]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 32
	061 Compare TEMP, 32
	062 JumpIfNotEqual {71}
	063 Move [X31+12], W31
	064 Move X1, [X19+24]
	065 Compare X1, 0
	066 JumpIfEqual {78}
	067 Move W3, [X1+24]
	068 Add X2, X31, 12
	069 Move X0, X19
	070 Call ASN1.Decode, X0, X1, X2, X3
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Call 0x1C17F28
	078 Call 0x1C17F20
	079 Move X0, 0xEDE000
	080 Move X0, [X0+2880]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0xF0B000
	085 Move X0, [X0+2952]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call NotSupportedException..ctor, X0, X1
	091 Move X0, 0xF0C000
	092 Move X0, [X0+3104]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC

Method: System.Int32 get_Count()

Disassembly:
	0x03216FB8 STP V2, V3, [X31 + 0x20]
	0x03216FBC CBZ X0, 0x3216FF8
	0x03216FC0 LDR X8, [X0]
	0x03216FC4 LDP V0, V1, [X31]
	0x03216FC8 LDP V2, V3, [X31 + 0x20]
	0x03216FCC ADD X1, X31, 0x80
	0x03216FD0 LDR X9, [X8 + 0x1F8]

ISIL:
	001 Move X0, [X0+32]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+664]
	006 Move X1, [X8+672]
	007 CallNoReturn X2
	008 Return X0

Method: System.Byte[] get_Value()

Disassembly:
	0x03216FD4 STP V0, V1, [X31 + 0x80]
	0x03216FD8 STP V2, V3, [X31 + 0xA0]
	0x03216FDC LDR X2, [X8 + 0x200]
	0x03216FE0 MOV X19, X0
	0x03216FE4 BLR X9
	0x03216FE8 MOV X0, X19
	0x03216FEC LDP X30, X19, [X31 + 0xC0]
	0x03216FF0 ADD X31, X31, 0xD0
	0x03216FF4 RET
	0x03216FF8 BL 0x1C16F20
	0x03216FFC SUB X31, X31, 0x80
	0x03217000 STP X29, X30, [X31 + 0x20]
	0x03217004 STP X28, X27, [X31 + 0x30]
	0x03217008 STP X26, X25, [X31 + 0x40]
	0x0321700C STP X24, X23, [X31 + 0x50]
	0x03217010 STP X22, X21, [X31 + 0x60]
	0x03217014 STP X20, X19, [X31 + 0x70]
	0x03217018 ADRP X22, 0x11C5000
	0x0321701C LDRB W9, [X22 + 0x2D6]
	0x03217020 MOV W21, W1
	0x03217024 MOV X20, X0
	0x03217028 MOV X19, X8
	0x0321702C TBNZ X9, 0x0, 0x3217050
	0x03217030 ADRP X0, 0xF09000
	0x03217034 LDR X0, [X0 + 0xBD0]
	0x03217038 BL 0x1C16CF4
	0x0321703C ADRP X0, 0xEDC000
	0x03217040 LDR X0, [X0 + 0x618]
	0x03217044 BL 0x1C16CF4
	0x03217048 MOVZ W8, 0x1
	0x0321704C STRB W8, [X22 + 0x2D6]
	0x03217050 CBZ X20, 0x32173C0
	0x03217054 LDR W8, [X20 + 0x18]
	0x03217058 CMP W8, W21
	0x0321705C B.LE 0x32173F4
	0x03217060 B.LS 0x321743C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11C7000
	005 Move W8, [X20+717]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xEDE000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+717], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {25}
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+376]
	022 Move X1, [X8+384]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+24]
	025 Compare X0, 0
	026 JumpIfEqual {43}
	027 Move X1, X31
	028 Call Array.Clone, X0
	029 Compare X0, 0
	030 JumpIfEqual {39}
	031 Move X8, 0xEDD000
	032 Move X8, [X8+1560]
	033 Move X19, X0
	034 Move X20, [X8]
	035 Move X1, X20
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfEqual {44}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, X19
	045 Move X1, X20
	046 Call 0x1C181E0

Method: Mono.Security.ASN1 Add(Mono.Security.ASN1 asn1)

Disassembly:
	0x03217064 ADD X9, X20, W21, SXTW
	0x03217068 LDRB W9, [X9 + 0x20]
	0x0321706C CMP W9, 0x7
	0x03217070 B.NE 0x3217378
	0x03217074 ADD W9, W21, 0x1
	0x03217078 CMP W9, W8
	0x0321707C B.CS 0x3217440
	0x03217080 ADD X9, X20, W9, SXTW
	0x03217084 LDRB W9, [X9 + 0x20]
	0x03217088 CMP W9, 0x2
	0x0321708C B.NE 0x3217378
	0x03217090 ADD W9, W21, 0x2
	0x03217094 CMP W9, W8
	0x03217098 B.CS 0x3217444
	0x0321709C ADD X9, X20, W9, SXTW
	0x032170A0 LDRB W9, [X9 + 0x20]
	0x032170A4 CBNZ W9, 0x3217378
	0x032170A8 ADD W9, W21, 0x3
	0x032170AC CMP W9, W8
	0x032170B0 B.CS 0x3217448
	0x032170B4 ADD X8, X20, W9, SXTW
	0x032170B8 LDRB W8, [X8 + 0x20]
	0x032170BC CBNZ W8, 0x3217378
	0x032170C0 ADD W1, W21, 0x8
	0x032170C4 MOV X0, X20
	0x032170C8 BL 0x3216E60
	0x032170CC MOVZ W8, 0x5352
	0x032170D0 MOVK W8, 0x32410000
	0x032170D4 CMP W0, W8
	0x032170D8 B.NE 0x3217378
	0x032170DC ADD W1, W21, 0xC
	0x032170E0 MOV X0, X20
	0x032170E4 BL 0x3216DEC
	0x032170E8 ADRP X28, 0xEDC000
	0x032170EC LDR X28, [X28 + 0x618]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11C6000
	006 Move W8, [X21+718]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF0A000
	014 Move X0, [X0+2976]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+718], W8
	018 Compare X19, 0
	019 JumpIfEqual {39}
	020 Move X21, [X20+32]
	021 Compare X21, 0
	022 JumpIfNotEqual {33}
	023 Move X8, 0xF0A000
	024 Move X8, [X8+2976]
	025 Move X0, [X8]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X21, X0
	029 Call ArrayList..ctor, X0
	030 Move [X20+32], X21
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move X8, [X21]
	034 Move X0, X21
	035 Move X1, X19
	036 Move X9, [X8+776]
	037 Move X2, [X8+784]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Byte[] GetBytes()

Disassembly:
	0x032170F0 MOV W25, W0
	0x032170F4 LDR X0, [X28]
	0x032170F8 MOVZ W1, 0x4
	0x032170FC BL 0x1C16D6C
	0x03217100 MOV X22, X0
	0x03217104 ADD W1, W21, 0x10
	0x03217108 MOVZ W4, 0x4
	0x0321710C MOV X0, X20
	0x03217110 MOV X2, X22
	0x03217114 MOV W3, W31
	0x03217118 MOV X5, X31
	0x0321711C BL 0x33A8A9C
	0x03217120 ADRP X23, 0xF09000
	0x03217124 LDR X23, [X23 + 0xBD0]
	0x03217128 LDR X1, [X23]
	0x0321712C MOV X0, X22
	0x03217130 BL 0x21465E8
	0x03217134 MOV X0, X22
	0x03217138 BL 0x3216ED4
	0x0321713C MOV X29, X0
	0x03217140 LDR X0, [X28]
	0x03217144 SBFM W24, W25, 0x3, 0x1F
	0x03217148 MOV W1, W24
	0x0321714C BL 0x1C16D6C
	0x03217150 MOV X27, X0
	0x03217154 ADD W22, W21, 0x14
	0x03217158 MOV X0, X20
	0x0321715C MOV W1, W22
	0x03217160 MOV X2, X27
	0x03217164 MOV W3, W31
	0x03217168 MOV W4, W24
	0x0321716C MOV X5, X31
	0x03217170 BL 0x33A8A9C
	0x03217174 LDR X1, [X23]
	0x03217178 MOV X0, X27
	0x0321717C BL 0x21465E8
	0x03217180 LDR X0, [X28]
	0x03217184 SBFM W26, W25, 0x4, 0x1F
	0x03217188 MOV W1, W26
	0x0321718C BL 0x1C16D6C
	0x03217190 MOV X25, X0
	0x03217194 ADD W22, W24, W22
	0x03217198 MOV X0, X20
	0x0321719C MOV W1, W22
	0x032171A0 MOV X2, X25
	0x032171A4 MOV W3, W31
	0x032171A8 MOV W4, W26
	0x032171AC MOV X5, X31
	0x032171B0 BL 0x33A8A9C
	0x032171B4 LDR X1, [X23]
	0x032171B8 STR X27, [X31 + 0x18]
	0x032171BC MOV X0, X25
	0x032171C0 BL 0x21465E8
	0x032171C4 LDR X0, [X28]
	0x032171C8 MOV W1, W26
	0x032171CC BL 0x1C16D6C
	0x032171D0 MOV X27, X0
	0x032171D4 ADD W22, W22, W26
	0x032171D8 MOV X0, X20
	0x032171DC MOV W1, W22
	0x032171E0 MOV X2, X27
	0x032171E4 MOV W3, W31
	0x032171E8 MOV W4, W26
	0x032171EC MOV X5, X31
	0x032171F0 BL 0x33A8A9C
	0x032171F4 LDR X1, [X23]
	0x032171F8 MOV X0, X27
	0x032171FC BL 0x21465E8
	0x03217200 LDR X0, [X28]
	0x03217204 MOV W1, W26
	0x03217208 BL 0x1C16D6C
	0x0321720C MOV X28, X0
	0x03217210 ADD W22, W22, W26
	0x03217214 MOV X0, X20
	0x03217218 MOV W1, W22
	0x0321721C MOV X2, X28
	0x03217220 MOV W3, W31
	0x03217224 MOV W4, W26
	0x03217228 MOV X5, X31
	0x0321722C BL 0x33A8A9C
	0x03217230 LDR X1, [X23]
	0x03217234 STR X29, [X31 + 0x10]
	0x03217238 MOV X0, X28
	0x0321723C BL 0x21465E8
	0x03217240 ADRP X8, 0xEDC000
	0x03217244 LDR X8, [X8 + 0x618]
	0x03217248 LDR X0, [X8]
	0x0321724C MOV W1, W26
	0x03217250 BL 0x1C16D6C
	0x03217254 MOV X29, X0
	0x03217258 ADD W23, W22, W26
	0x0321725C MOV X0, X20
	0x03217260 MOV W1, W23
	0x03217264 MOV X2, X29
	0x03217268 MOV W3, W31
	0x0321726C MOV W4, W26
	0x03217270 MOV X5, X31
	0x03217274 BL 0x33A8A9C
	0x03217278 STR X27, [X31 + 0x8]
	0x0321727C ADRP X8, 0xF09000
	0x03217280 LDR X8, [X8 + 0xBD0]
	0x03217284 LDR X1, [X8]
	0x03217288 MOV X0, X29
	0x0321728C BL 0x21465E8
	0x03217290 ADRP X8, 0xEDC000
	0x03217294 LDR X8, [X8 + 0x618]
	0x03217298 MOV X27, X25
	0x0321729C LDR X0, [X8]
	0x032172A0 MOV W1, W26
	0x032172A4 BL 0x1C16D6C
	0x032172A8 MOV X22, X0
	0x032172AC ADD W25, W23, W26
	0x032172B0 MOV X0, X20
	0x032172B4 MOV W1, W25
	0x032172B8 MOV X2, X22
	0x032172BC MOV W3, W31
	0x032172C0 MOV W4, W26
	0x032172C4 MOV X5, X31
	0x032172C8 BL 0x33A8A9C
	0x032172CC ADRP X8, 0xF09000
	0x032172D0 LDR X8, [X8 + 0xBD0]
	0x032172D4 LDR X1, [X8]
	0x032172D8 MOV X0, X22
	0x032172DC BL 0x21465E8
	0x032172E0 ADRP X8, 0xEDC000
	0x032172E4 LDR X8, [X8 + 0x618]
	0x032172E8 LDR X0, [X8]
	0x032172EC MOV W1, W24
	0x032172F0 BL 0x1C16D6C
	0x032172F4 LDR W8, [X20 + 0x18]
	0x032172F8 ADD W1, W25, W26
	0x032172FC ADD W9, W24, W21
	0x03217300 ADD W9, W9, W1
	0x03217304 MOV X23, X0
	0x03217308 CMP W9, W8
	0x0321730C B.GT 0x321733C
	0x03217310 MOV X0, X20
	0x03217314 MOV X2, X23
	0x03217318 MOV W3, W31
	0x0321731C MOV W4, W24
	0x03217320 MOV X5, X31
	0x03217324 BL 0x33A8A9C
	0x03217328 ADRP X8, 0xF09000
	0x0321732C LDR X8, [X8 + 0xBD0]
	0x03217330 LDR X1, [X8]
	0x03217334 MOV X0, X23
	0x03217338 BL 0x21465E8
	0x0321733C LDR X9, [X31 + 0x10]
	0x03217340 LDR X8, [X31 + 0x18]
	0x03217344 STP X28, X29, [X19 + 0x20]
	0x03217348 STP X22, X23, [X19 + 0x30]
	0x0321734C LDP X22, X21, [X31 + 0x60]
	0x03217350 STP X9, X8, [X19]
	0x03217354 LDR X8, [X31 + 0x8]
	0x03217358 LDP X24, X23, [X31 + 0x50]
	0x0321735C LDP X26, X25, [X31 + 0x40]
	0x03217360 LDP X29, X30, [X31 + 0x20]
	0x03217364 STP X27, X8, [X19 + 0x10]
	0x03217368 LDP X20, X19, [X31 + 0x70]
	0x0321736C LDP X28, X27, [X31 + 0x30]
	0x03217370 ADD X31, X31, 0x80
	0x03217374 RET
	0x03217378 ADRP X0, 0xF09000
	0x0321737C LDR X0, [X0 + 0xCE0]
	0x03217380 BL 0x1C16D08
	0x03217384 BL 0x1C16F10
	0x03217388 MOV X19, X0
	0x0321738C ADRP X0, 0xF0A000
	0x03217390 LDR X0, [X0 + 0xC30]
	0x03217394 BL 0x1C16D08
	0x03217398 MOV X1, X0
	0x0321739C MOV X0, X19
	0x032173A0 MOV X2, X31
	0x032173A4 BL 0x3252170
	0x032173A8 ADRP X0, 0xF0A000
	0x032173AC LDR X0, [X0 + 0xC38]
	0x032173B0 BL 0x1C16D08
	0x032173B4 MOV X1, X0
	0x032173B8 MOV X0, X19
	0x032173BC BL 0x1C16DEC
	0x032173C0 ADRP X0, 0xEE1000
	0x032173C4 LDR X0, [X0 + 0x528]
	0x032173C8 BL 0x1C16D08
	0x032173CC BL 0x1C16F10
	0x032173D0 MOV X19, X0
	0x032173D4 ADRP X0, 0xF0A000
	0x032173D8 LDR X0, [X0 + 0xC40]
	0x032173DC BL 0x1C16D08
	0x032173E0 MOV X1, X0
	0x032173E4 MOV X0, X19
	0x032173E8 MOV X2, X31
	0x032173EC BL 0x330E100
	0x032173F0 B 0x3217424
	0x032173F4 ADRP X0, 0xEE4000
	0x032173F8 LDR X0, [X0 + 0x578]
	0x032173FC BL 0x1C16D08
	0x03217400 BL 0x1C16F10
	0x03217404 MOV X19, X0
	0x03217408 ADRP X0, 0xF0A000
	0x0321740C LDR X0, [X0 + 0xC48]
	0x03217410 BL 0x1C16D08
	0x03217414 MOV X1, X0
	0x03217418 MOV X0, X19
	0x0321741C MOV X2, X31
	0x03217420 BL 0x3314A68
	0x03217424 ADRP X0, 0xF0A000
	0x03217428 LDR X0, [X0 + 0xC38]
	0x0321742C BL 0x1C16D08
	0x03217430 MOV X1, X0
	0x03217434 MOV X0, X19
	0x03217438 BL 0x1C16DEC
	0x0321743C BL 0x1C16F28
	0x03217440 BL 0x1C16F28
	0x03217444 BL 0x1C16F28
	0x03217448 BL 0x1C16F28
	0x0321744C B 0x32174C8
	0x03217450 B 0x32174C8
	0x03217454 B 0x32174C8
	0x03217458 B 0x32174C8
	0x0321745C B 0x32174C8
	0x03217460 B 0x32174C8
	0x03217464 B 0x32174C8
	0x03217468 B 0x32174C8
	0x0321746C B 0x32174C8
	0x03217470 B 0x32174C8
	0x03217474 B 0x32174C8
	0x03217478 B 0x32174C8
	0x0321747C B 0x32174C8
	0x03217480 B 0x32174C8
	0x03217484 B 0x32174C8
	0x03217488 B 0x32174C8
	0x0321748C B 0x32174C8
	0x03217490 B 0x32174C8
	0x03217494 B 0x32174C8
	0x03217498 B 0x32174C8
	0x0321749C B 0x32174C8
	0x032174A0 B 0x32174C8
	0x032174A4 B 0x32174C8
	0x032174A8 B 0x32174C8
	0x032174AC B 0x32174C8
	0x032174B0 B 0x32174C8
	0x032174B4 B 0x32174C8
	0x032174B8 B 0x32174C8
	0x032174BC B 0x32174C8
	0x032174C0 B 0x32174C8
	0x032174C4 B 0x32174C8
	0x032174C8 MOV X19, X0
	0x032174CC CMP W1, 0x1
	0x032174D0 B.NE 0x3217578
	0x032174D4 MOV X0, X19
	0x032174D8 BL 0x3EB1AD0
	0x032174DC MOV X19, X0
	0x032174E0 ADRP X0, 0xEDC000
	0x032174E4 LDR X0, [X0 + 0x7D0]
	0x032174E8 BL 0x1C16D08
	0x032174EC LDR X8, [X19]
	0x032174F0 LDR X1, [X8]
	0x032174F4 BL 0x1C17270
	0x032174F8 TBZ X0, 0x0, 0x3217550
	0x032174FC LDR X19, [X19]
	0x03217500 BL 0x3EB1AE0
	0x03217504 ADRP X0, 0xF09000
	0x03217508 LDR X0, [X0 + 0xCE0]
	0x0321750C BL 0x1C16D08
	0x03217510 BL 0x1C16F10
	0x03217514 MOV X20, X0
	0x03217518 ADRP X0, 0xF0A000
	0x0321751C LDR X0, [X0 + 0xC50]
	0x03217520 BL 0x1C16D08
	0x03217524 MOV X1, X0
	0x03217528 MOV X0, X20
	0x0321752C MOV X2, X19
	0x03217530 MOV X3, X31
	0x03217534 BL 0x325240C
	0x03217538 ADRP X0, 0xF0A000
	0x0321753C LDR X0, [X0 + 0xC38]
	0x03217540 BL 0x1C16D08
	0x03217544 MOV X1, X0
	0x03217548 MOV X0, X20
	0x0321754C BL 0x1C16DEC
	0x03217550 MOVZ W0, 0x8
	0x03217554 BL 0x3EB1AF0
	0x03217558 LDR X8, [X19]
	0x0321755C STR X8, [X0]
	0x03217560 ADRP X1, 0xC9D000
	0x03217564 ADD X1, X1, 0xE58
	0x03217568 MOV X2, X31
	0x0321756C BL 0x3EB1B00
	0x03217570 MOV X19, X0
	0x03217574 BL 0x3EB1AE0
	0x03217578 MOV X0, X19
	0x0321757C BL 0x1D2C690
	0x03217580 BL 0x1990590
	0x03217584 SUB X31, X31, 0xE0
	0x03217588 STR X30, [X31 + 0xC0]
	0x0321758C STP X20, X19, [X31 + 0xD0]
	0x03217590 MOVI V0.2D, 0x0
	0x03217594 ADD X8, X31, 0x40
	0x03217598 STP V0, V0, [X31 + 0x60]
	0x0321759C STP V0, V0, [X31 + 0x40]
	0x032175A0 BL 0x32176C4
	0x032175A4 MOV X0, X31
	0x032175A8 BL 0x325B960
	0x032175AC LDP V0, V1, [X31 + 0x40]
	0x032175B0 LDP V2, V3, [X31 + 0x60]
	0x032175B4 MOV X19, X0
	0x032175B8 STP V0, V1, [X31]
	0x032175BC STP V2, V3, [X31 + 0x20]
	0x032175C0 CBZ X0, 0x3217600
	0x032175C4 LDR X8, [X19]
	0x032175C8 LDP V0, V1, [X31]
	0x032175CC LDP V2, V3, [X31 + 0x20]
	0x032175D0 LDR X9, [X8 + 0x1F8]
	0x032175D4 STP V0, V1, [X31 + 0x80]
	0x032175D8 STP V2, V3, [X31 + 0xA0]
	0x032175DC LDR X2, [X8 + 0x200]
	0x032175E0 ADD X1, X31, 0x80
	0x032175E4 MOV X0, X19
	0x032175E8 BLR X9
	0x032175EC MOV X0, X19
	0x032175F0 LDP X20, X19, [X31 + 0xD0]
	0x032175F4 LDR X30, [X31 + 0xC0]
	0x032175F8 ADD X31, X31, 0xE0
	0x032175FC RET
	0x03217600 BL 0x1C16F20
	0x03217604 B 0x3217608
	0x03217608 MOV X19, X0
	0x0321760C CMP W1, 0x1
	0x03217610 B.NE 0x32176B8
	0x03217614 MOV X0, X19
	0x03217618 BL 0x3EB1AD0
	0x0321761C MOV X19, X0
	0x03217620 ADRP X0, 0xEDC000
	0x03217624 LDR X0, [X0 + 0x7D0]
	0x03217628 BL 0x1C16D08
	0x0321762C LDR X8, [X19]
	0x03217630 LDR X1, [X8]
	0x03217634 BL 0x1C17270
	0x03217638 TBZ X0, 0x0, 0x3217690
	0x0321763C LDR X19, [X19]
	0x03217640 BL 0x3EB1AE0
	0x03217644 ADRP X0, 0xF09000
	0x03217648 LDR X0, [X0 + 0xCE0]
	0x0321764C BL 0x1C16D08
	0x03217650 BL 0x1C16F10
	0x03217654 MOV X20, X0
	0x03217658 ADRP X0, 0xF0A000
	0x0321765C LDR X0, [X0 + 0xC50]
	0x03217660 BL 0x1C16D08
	0x03217664 MOV X1, X0
	0x03217668 MOV X0, X20
	0x0321766C MOV X2, X19
	0x03217670 MOV X3, X31
	0x03217674 BL 0x325240C
	0x03217678 ADRP X0, 0xF0A000
	0x0321767C LDR X0, [X0 + 0xC58]
	0x03217680 BL 0x1C16D08
	0x03217684 MOV X1, X0
	0x03217688 MOV X0, X20
	0x0321768C BL 0x1C16DEC
	0x03217690 MOVZ W0, 0x8
	0x03217694 BL 0x3EB1AF0
	0x03217698 LDR X8, [X19]
	0x0321769C STR X8, [X0]
	0x032176A0 ADRP X1, 0xC9D000
	0x032176A4 ADD X1, X1, 0xE58
	0x032176A8 MOV X2, X31
	0x032176AC BL 0x3EB1B00
	0x032176B0 MOV X19, X0
	0x032176B4 BL 0x3EB1AE0
	0x032176B8 MOV X0, X19
	0x032176BC BL 0x1D2C690
	0x032176C0 BL 0x1990590
	0x032176C4 SUB X31, X31, 0x70
	0x032176C8 STR X30, [X31 + 0x30]
	0x032176CC STP X24, X23, [X31 + 0x40]
	0x032176D0 STP X22, X21, [X31 + 0x50]
	0x032176D4 STP X20, X19, [X31 + 0x60]
	0x032176D8 ADRP X22, 0x11C5000
	0x032176DC LDRB W9, [X22 + 0x2D7]
	0x032176E0 MOV W21, W1
	0x032176E4 MOV X20, X0
	0x032176E8 MOV X19, X8
	0x032176EC TBNZ X9, 0x0, 0x3217710
	0x032176F0 ADRP X0, 0xF09000
	0x032176F4 LDR X0, [X0 + 0xBD0]
	0x032176F8 BL 0x1C16CF4
	0x032176FC ADRP X0, 0xEDC000
	0x03217700 LDR X0, [X0 + 0x618]
	0x03217704 BL 0x1C16CF4
	0x03217708 MOVZ W8, 0x1
	0x0321770C STRB W8, [X22 + 0x2D7]
	0x03217710 CBZ X20, 0x32178F8
	0x03217714 LDR W8, [X20 + 0x18]
	0x03217718 CMP W8, W21
	0x0321771C B.LE 0x321792C
	0x03217720 B.LS 0x3217974
	0x03217724 ADD X9, X20, W21, SXTW
	0x03217728 LDRB W9, [X9 + 0x20]
	0x0321772C CMP W9, 0x6
	0x03217730 B.NE 0x32178B0
	0x03217734 ADD W9, W21, 0x1
	0x03217738 CMP W9, W8
	0x0321773C B.CS 0x3217978
	0x03217740 ADD X9, X20, W9, SXTW
	0x03217744 LDRB W9, [X9 + 0x20]
	0x03217748 CMP W9, 0x2
	0x0321774C B.NE 0x32178B0
	0x03217750 ADD W9, W21, 0x2
	0x03217754 CMP W9, W8
	0x03217758 B.CS 0x321797C
	0x0321775C ADD X9, X20, W9, SXTW
	0x03217760 LDRB W9, [X9 + 0x20]
	0x03217764 CBNZ W9, 0x32178B0
	0x03217768 ADD W9, W21, 0x3
	0x0321776C CMP W9, W8
	0x03217770 B.CS 0x3217980

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x11C6000
	012 Move W8, [X20+719]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xF0B000
	019 Move X0, [X0+3112]
	020 Call 0x1C17CF4
	021 Move X0, 0xF0A000
	022 Move X0, [X0+2976]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDD000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xEDD000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0xEDD000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+719], W8
	035 Move X0, [X19+32]
	036 Compare X0, 0
	037 JumpIfEqual {139}
	038 Move X8, [X0]
	039 Move X9, [X8+664]
	040 Move X1, [X8+672]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xF0A000
	044 Move X8, [X8+2976]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X20, X0
	049 Call ArrayList..ctor, X0
	050 Move X0, [X19+32]
	051 Compare X0, 0
	052 JumpIfEqual {301}
	053 Move X8, [X0]
	054 Move X9, [X8+904]
	055 Move X1, [X8+912]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X22, X0
	058 Compare X0, 0
	059 JumpIfEqual {383}
	060 Move X24, 0xEDD000
	061 Move X25, 0xF0B000
	062 Move X24, [X24+3608]
	063 Move X25, [X25+3112]
	064 Move W21, W31
	065 Move X8, [X22]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X22
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X22
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {157}
	090 Move X8, [X22]
	091 Move X1, [X24]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 1
	102 Move X0, X22
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 1
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X22
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {377}
	114 Move X8, [X0]
	115 Move X1, [X25]
	116 Move W10, [X8+304]
	117 Move W9, [X1+304]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X10, [X8+200]
	120 Add X9, X10, X9
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X9, [X8+376]
	124 Move X1, [X8+384]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Compare X20, 0
	127 JumpIfEqual {378}
	128 Move X8, [X20]
	129 Move X23, X0
	130 Move X9, [X8+776]
	131 Move X2, [X8+784]
	132 Move X0, X20
	133 Move X1, X23
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Compare X23, 0
	136 JumpIfEqual {376}
	137 Move W8, [X23+24]
	138 Add W21, W21, W8
	139 Move X21, [X19+24]
	140 Compare X21, 0
	141 JumpIfEqual {181}
	142 Move X20, [X21+24]
	143 Move X8, 0xEDD000
	144 Move X8, [X8+1560]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, [X8]
	147 Add W1, W20, 2
	148 Call 0x1C17D6C
	149 Move X22, X0
	150 Move W3, 2
	151 Move X0, X21
	152 Move W1, W31
	153 Move X2, X22
	154 Move W4, W20
	155 Move X5, X31
	156 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	157 Move X23, X31
	158 Move W24, 5
	159 Move X25, 0xEDD000
	160 Move X25, [X25+3584]
	161 Move X0, X22
	162 Move X1, [X25]
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {250}
	166 Move X8, [X0]
	167 Move X1, [X25]
	168 Move X22, X0
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move X0, X22
	179 Move W2, W31
	180 Call 0x1C5D788
	181 Move X8, 0xEDD000
	182 Move X8, [X8+1560]
	183 Move W1, 2
	184 Move X0, [X8]
	185 Call 0x1C17D6C
	186 Move X22, X0
	187 Move W20, W31
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, [X8]
	191 Move TEMP, 0xFF000000
	192 Not TEMP
	193 Move W8, TEMP
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Add W1, W20, 6
	196 Call 0x1C17D6C
	197 Move X22, X0
	198 Move W3, 6
	199 Move X0, X21
	200 Move W1, W31
	201 Move X2, X22
	202 Move W4, W20
	203 Move X5, X31
	204 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	205 Compare X22, 0
	206 JumpIfEqual {301}
	207 Move W8, [X22+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X9, X20
	210 ShiftRight X9, 24
	211 And X9, X9, 0x7FFFFFFF
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move [X22+34], W9
	214 Move X9, X20
	215 ShiftRight X9, 16
	216 And X9, X9, 0x7FFFFFFF
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move [X22+35], W9
	219 Move X9, X20
	220 ShiftRight X9, 8
	221 And X9, X9, 0x7FFFFFFF
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X22+36], W9
	224 Move [X22+37], W20
	225 Move W20, 132
	226 Move X0, [X8]
	227 Add W1, W20, 3
	228 Call 0x1C17D6C
	229 Move X22, X0
	230 Move W3, 3
	231 Move X0, X21
	232 Move W1, W31
	233 Move X2, X22
	234 Move W4, W20
	235 Move X5, X31
	236 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	237 Compare X22, 0
	238 JumpIfEqual {301}
	239 Move W8, [X22+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X22+34], W20
	242 Move W20, 129
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Add X8, X8, X9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X22
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Compare X23, 0
	251 JumpIfNotEqual {384}
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Compare W24, 0
	254 JumpIfNotEqual {363}
	255 Move X27, 0xEDD000
	256 Move X27, [X27+1560]
	257 Move W1, W21
	258 Move X0, [X27]
	259 Call 0x1C17D6C
	260 Move X8, [X19+32]
	261 Compare X8, 0
	262 JumpIfEqual {301}
	263 Move X21, X0
	264 Move W22, W31
	265 Move W23, W31
	266 Move X9, [X8]
	267 Move X0, X8
	268 Move X10, [X9+664]
	269 Move X1, [X9+672]
	270 NotImplemented "Instruction BLR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Compare X20, 0
	273 JumpIfEqual {301}
	274 Move X8, [X20]
	275 Move X0, X20
	276 Move W1, W23
	277 Move X9, [X8+744]
	278 Move X2, [X8+752]
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Compare X0, 0
	281 JumpIfEqual {301}
	282 Move X26, [X27]
	283 Move X24, X0
	284 Move X1, X26
	285 Call 0x1C17E00
	286 Compare X0, 0
	287 JumpIfEqual {379}
	288 Move W4, [X0+24]
	289 Move W1, W31
	290 Move X2, X21
	291 Move W3, W22
	292 Move X5, X31
	293 Move X25, X0
	294 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	295 Move W9, [X25+24]
	296 Move X8, [X19+32]
	297 Add W23, W23, 1
	298 Add W22, W22, W9
	299 Compare X8, 0
	300 JumpIfNotEqual {266}
	301 Call 0x1C17F20
	302 Move X0, [X8]
	303 Add W1, W20, 4
	304 Call 0x1C17D6C
	305 Move X22, X0
	306 Move W3, 4
	307 Move X0, X21
	308 Move W1, W31
	309 Move X2, X22
	310 Move W4, W20
	311 Move X5, X31
	312 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	313 Compare X22, 0
	314 JumpIfEqual {301}
	315 Move W8, [X22+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X9, X20
	318 ShiftRight X9, 8
	319 And X9, X9, 0x7FFFFFFF
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move [X22+34], W9
	322 Move [X22+35], W20
	323 Move W20, 130
	324 Add W1, W20, 5
	325 Call 0x1C17D6C
	326 Move X22, X0
	327 Move W3, 5
	328 Move X0, X21
	329 Move W1, W31
	330 Move X2, X22
	331 Move W4, W20
	332 Move X5, X31
	333 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	334 Compare X22, 0
	335 JumpIfEqual {301}
	336 Move W8, [X22+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X9, X20
	339 ShiftRight X9, 16
	340 And X9, X9, 0x7FFFFFFF
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move [X22+34], W9
	343 Move X9, X20
	344 ShiftRight X9, 8
	345 And X9, X9, 0x7FFFFFFF
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X22+35], W9
	348 Move [X22+36], W20
	349 Move W20, 131
	350 Move X8, [X19+24]
	351 Compare X8, 0
	352 JumpIfNotEqual {354}
	353 Move [X19+24], X21
	354 Compare X22, 0
	355 JumpIfEqual {301}
	356 Move W8, [X22+24]
	357 Compare W8, 0
	358 JumpIfEqual {382}
	359 Move W9, [X19+16]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move [X22+32], W9
	362 Move [X22+33], W20
	363 Move X0, X22
	364 Move X20, [X31+64]
	365 Move X19, [X31+72]
	366 Move X22, [X31+48]
	367 Move X21, [X31+56]
	368 Move X24, [X31+32]
	369 Move X23, [X31+40]
	370 Move X26, [X31+16]
	371 Move X25, [X31+24]
	372 Move X30, [X31+80]
	373 Move X27, [X31+88]
	374 Return X0
	375 Call 0x1C181E0
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Move X0, X24
	380 Move X1, X26
	381 Call 0x1C181E0
	382 Call 0x1C17F28
	383 Call 0x1C17F20
	384 Move X0, X23
	385 Call 0x1C17F18
	386 Move X24, X0
	387 Move W21, W31
	388 Move X24, X0
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X0, X24
	391 Call 0x3EB2AD0
	392 Move X23, [X0]
	393 Call 0x3EB2AE0
	394 Move W24, W31
	395 Move X23, X31
	396 Move X24, X0
	397 Move X20, 0xEDD000
	398 Move X20, [X20+3584]
	399 Move X1, [X20]
	400 Move X0, X22
	401 Call 0x1C17E00
	402 Move X19, X0
	403 Compare X0, 0
	404 JumpIfEqual {426}
	405 Move X8, [X19]
	406 Move X1, [X20]
	407 NotImplemented "Instruction LDRH not yet implemented."
	408 Compare X9, 0
	409 JumpIfEqual {416}
	410 Move X10, [X8+176]
	411 Add X10, X10, 8
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Subtract X9, X9, 1
	415 Add X10, X10, 16
	416 Move X0, X19
	417 Move W2, W31
	418 Call 0x1C5D788
	419 NotImplemented "Instruction LDRSW not yet implemented."
	420 Add X8, X8, X9
	421 Add X0, X8, 312
	422 Move X8, [X0]
	423 Move X1, [X0+8]
	424 Move X0, X19
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Compare X23, 0
	427 JumpIfNotEqual {430}
	428 Move X0, X24
	429 Call 0x1D2D690
	430 Move X0, X23
	431 Call 0x1C17F18
	432 Call 0x1991590

Method: System.Void Decode(System.Byte[] asn1, ref System.Int32 anPos, System.Int32 anLength)

Disassembly:
	0x03216E9C ADD X9, X0, W9, SXTW
	0x03216EA0 LDRB W8, [X8 + 0x20]
	0x03216EA4 LDRB W9, [X9 + 0x20]
	0x03216EA8 ADD X10, X0, 0x20
	0x03216EAC LDRB W11, [X10, W11, SXTW]
	0x03216EB0 LDRB W10, [X10, W1, SXTW]
	0x03216EB4 UBFM W8, W8, 0x8, 0x7
	0x03216EB8 BFM W8, W9, 0x10, 0x7
	0x03216EBC BFM W8, W11, 0x18, 0x7
	0x03216EC0 ORR W0, W8, W10, 0x0
	0x03216EC4 LDR X30, [X31], #0x10
	0x03216EC8 RET
	0x03216ECC BL 0x1C16F28
	0x03216ED0 BL 0x1C16F20
	0x03216ED4 STP X30, X21, [X31 - 0x20]!
	0x03216ED8 STP X20, X19, [X31 + 0x10]
	0x03216EDC ADRP X20, 0x11C6000
	0x03216EE0 LDRB W8, [X20 + 0x2D5]
	0x03216EE4 MOV X19, X0
	0x03216EE8 TBNZ X8, 0x0, 0x3216F00
	0x03216EEC ADRP X0, 0xEDD000
	0x03216EF0 LDR X0, [X0 + 0x618]
	0x03216EF4 BL 0x1C16CF4
	0x03216EF8 MOVZ W8, 0x1
	0x03216EFC STRB W8, [X20 + 0x2D5]
	0x03216F00 CBZ X19, 0x3216F84
	0x03216F04 LDR W8, [X19 + 0x18]
	0x03216F08 CMP W8, 0x1
	0x03216F0C B.LT 0x3216F34
	0x03216F10 MOV W20, W31
	0x03216F14 SUBS W1, W8, W20
	0x03216F18 B.EQ 0x3216F80
	0x03216F1C ADD X9, X19, W20, SXTW
	0x03216F20 LDRB W9, [X9 + 0x20]
	0x03216F24 CBNZ W9, 0x3216F3C
	0x03216F28 ADD W20, W20, 0x1
	0x03216F2C CMP W8, W20
	0x03216F30 B.NE 0x3216F14
	0x03216F34 MOV X21, X31
	0x03216F38 B 0x3216F70
	0x03216F3C ADRP X8, 0xEDD000
	0x03216F40 LDR X8, [X8 + 0x618]
	0x03216F44 LDR X0, [X8]
	0x03216F48 BL 0x1C16D6C
	0x03216F4C CBZ X0, 0x3216F84
	0x03216F50 LDR W4, [X0 + 0x18]
	0x03216F54 MOV X21, X0
	0x03216F58 MOV X0, X19
	0x03216F5C MOV W1, W20
	0x03216F60 MOV X2, X21
	0x03216F64 MOV W3, W31
	0x03216F68 MOV X5, X31
	0x03216F6C BL 0x33A8A9C
	0x03216F70 LDP X20, X19, [X31 + 0x10]
	0x03216F74 MOV X0, X21
	0x03216F78 LDP X30, X21, [X31], #0x20
	0x03216F7C RET
	0x03216F80 BL 0x1C16F28
	0x03216F84 BL 0x1C16F20
	0x03216F88 SUB X31, X31, 0xD0
	0x03216F8C STP X30, X19, [X31 + 0xC0]
	0x03216F90 MOVI V0.2D, 0x0
	0x03216F94 ADD X8, X31, 0x40
	0x03216F98 STP V0, V0, [X31 + 0x60]
	0x03216F9C STP V0, V0, [X31 + 0x40]
	0x03216FA0 BL 0x3216FFC
	0x03216FA4 MOV X0, X31
	0x03216FA8 BL 0x325B960
	0x03216FAC LDP V0, V1, [X31 + 0x40]
	0x03216FB0 LDP V2, V3, [X31 + 0x60]
	0x03216FB4 STP V0, V1, [X31]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X23, 0x11C7000
	012 Move W8, [X23+720]
	013 Move W22, W3
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0xF0C000
	022 Move X0, [X0+3112]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+720], W8
	026 Move [X31+28], W31
	027 Move [X31+24], W31
	028 Move [X31+8], X31
	029 Move W8, [X19]
	030 Subtract W23, W22, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X24, 0xF0C000
	033 Move X24, [X24+3112]
	034 Add X3, X31, 28
	035 Add X4, X31, 24
	036 Add X5, X31, 8
	037 Move X1, X20
	038 Move X2, X19
	039 Call ASN1.DecodeTLV, X0, X1, X2, X3, X4, X5
	040 Move W25, [X31+28]
	041 Compare W25, 0
	042 JumpIfEqual {59}
	043 Move X0, [X24]
	044 Move X26, [X31+8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call Object..ctor, X0
	049 Move X0, X21
	050 Move X1, X22
	051 Move [X22+16], W25
	052 Move [X22+24], X26
	053 Call ASN1.Add, X0, X1
	054 Move TEMP, X25
	055 And TEMP, TEMP, 32
	056 Compare TEMP, 32
	057 JumpIfEqual {60}
	058 Move W25, [X31+24]
	059 Move W8, [X19]
	060 Move W8, [X19]
	061 Move W25, [X31+24]
	062 Add X2, X31, 4
	063 Move X0, X22
	064 Move X1, X20
	065 Add W3, W25, W8
	066 Move [X31+4], W8
	067 Call ASN1.Decode, X0, X1, X2, X3
	068 Move W8, [X19]
	069 Add W8, W25, W8
	070 Move [X19], W8
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X26, [X31+32]
	079 Move X25, [X31+40]
	080 Move X30, [X31+16]
	081 Add X31, X31, 96
	082 Return 

Method: System.Void DecodeTLV(System.Byte[] asn1, ref System.Int32 pos, out System.Byte tag, out System.Int32 length, out System.Byte[] content)

Disassembly:
	0x03217774 ADD X8, X20, W9, SXTW
	0x03217778 LDRB W8, [X8 + 0x20]
	0x0321777C CBNZ W8, 0x32178B0
	0x03217780 ADD W1, W21, 0x8
	0x03217784 MOV X0, X20
	0x03217788 BL 0x3216E60
	0x0321778C MOVZ W8, 0x5352
	0x03217790 MOVK W8, 0x31410000
	0x03217794 CMP W0, W8
	0x03217798 B.NE 0x32178B0
	0x0321779C ADD W1, W21, 0xC
	0x032177A0 MOV X0, X20
	0x032177A4 BL 0x3216DEC
	0x032177A8 ADRP X24, 0xEDC000
	0x032177AC LDR X24, [X24 + 0x618]
	0x032177B0 MOV W23, W0
	0x032177B4 MOVI V0.2D, 0x0
	0x032177B8 STP V0, V0, [X31 + 0x10]
	0x032177BC LDR X0, [X24]
	0x032177C0 STR V0, [X31]
	0x032177C4 MOVZ W1, 0x3
	0x032177C8 BL 0x1C16D6C
	0x032177CC LDR W8, [X20 + 0x18]
	0x032177D0 ADD W9, W21, 0x12
	0x032177D4 CMP W9, W8
	0x032177D8 B.CS 0x3217984
	0x032177DC MOV X22, X0
	0x032177E0 CBZ X0, 0x3217988
	0x032177E4 LDR W8, [X22 + 0x18]
	0x032177E8 CBZ W8, 0x321798C
	0x032177EC ADD X9, X20, W9, SXTW
	0x032177F0 LDRB W9, [X9 + 0x20]
	0x032177F4 STRB W9, [X22 + 0x20]
	0x032177F8 LDR W10, [X20 + 0x18]
	0x032177FC ADD W9, W21, 0x11
	0x03217800 CMP W9, W10
	0x03217804 B.CS 0x3217990
	0x03217808 CMP W8, 0x1
	0x0321780C B.LS 0x3217994
	0x03217810 ADD X9, X20, W9, SXTW
	0x03217814 LDRB W9, [X9 + 0x20]
	0x03217818 STRB W9, [X22 + 0x21]
	0x0321781C LDR W10, [X20 + 0x18]
	0x03217820 ADD W9, W21, 0x10
	0x03217824 CMP W9, W10
	0x03217828 B.CS 0x3217998
	0x0321782C CMP W8, 0x2
	0x03217830 B.LS 0x321799C
	0x03217834 ADD X8, X20, W9, SXTW
	0x03217838 LDRB W8, [X8 + 0x20]
	0x0321783C STRB W8, [X22 + 0x22]
	0x03217840 LDR X0, [X24]
	0x03217844 SBFM W24, W23, 0x3, 0x1F
	0x03217848 MOV W1, W24
	0x0321784C BL 0x1C16D6C
	0x03217850 MOV X23, X0
	0x03217854 ADD W1, W21, 0x14
	0x03217858 MOV X0, X20
	0x0321785C MOV X2, X23
	0x03217860 MOV W3, W31
	0x03217864 MOV W4, W24
	0x03217868 MOV X5, X31
	0x0321786C BL 0x33A8A9C
	0x03217870 ADRP X8, 0xF09000
	0x03217874 LDR X8, [X8 + 0xBD0]
	0x03217878 LDR X1, [X8]
	0x0321787C MOV X0, X23
	0x03217880 BL 0x21465E8
	0x03217884 LDP V2, V0, [X31 + 0x10]
	0x03217888 LDR V1, [X31]
	0x0321788C STP X22, X23, [X19]
	0x03217890 LDP X22, X21, [X31 + 0x50]
	0x03217894 STP V2, V0, [X19 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11C6000
	009 Move W8, [X24+721]
	010 Move X20, X5
	011 Move X19, X4
	012 Move X23, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xEDD000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+721], W8
	024 NotImplemented "Instruction LDRSW not yet implemented."
	025 Add W9, W8, 1
	026 Move [X22], W9
	027 Compare X21, 0
	028 JumpIfEqual {81}
	029 Move W9, [X21+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X21, X8
	032 Move W8, [X8+32]
	033 Move [X23], W8
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add W8, W9, 1
	036 Move [X22], W8
	037 Move W8, [X21+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X9, X21, X9
	040 Move W1, [X9+32]
	041 Move [X19], W1
	042 Move TEMP, X1
	043 And TEMP, TEMP, 128
	044 Compare TEMP, 128
	045 JumpIfNotEqual {60}
	046 And W9, W1, 127
	047 Move [X19], W31
	048 Move W10, W31
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add W12, W11, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X22], W12
	053 Add X11, X21, X11
	054 Move W1, [X11+32]
	055 Subtract W9, W9, 1
	056 NotImplemented "Instruction BFM not yet implemented."
	057 Move W10, W1
	058 Move [X19], W1
	059 Move W1, W31
	060 Move X8, 0xEDD000
	061 Move X8, [X8+1560]
	062 Move X0, [X8]
	063 Call 0x1C17D6C
	064 Move [X20], X0
	065 Move X2, X0
	066 Move W1, [X22]
	067 Move W4, [X19]
	068 Move X0, X21
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move W3, W31
	076 Move X5, X31
	077 Move X30, [X31+64]
	078 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	079 Return 
	080 Call 0x1C17F28
	081 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03217898 STR V1, [X19 + 0x1]
	0x0321789C LDP X20, X19, [X31 + 0x60]
	0x032178A0 LDP X24, X23, [X31 + 0x40]
	0x032178A4 LDR X30, [X31 + 0x30]
	0x032178A8 ADD X31, X31, 0x70
	0x032178AC RET
	0x032178B0 ADRP X0, 0xF09000
	0x032178B4 LDR X0, [X0 + 0xCE0]
	0x032178B8 BL 0x1C16D08
	0x032178BC BL 0x1C16F10
	0x032178C0 MOV X19, X0
	0x032178C4 ADRP X0, 0xF0A000
	0x032178C8 LDR X0, [X0 + 0xC30]
	0x032178CC BL 0x1C16D08
	0x032178D0 MOV X1, X0
	0x032178D4 MOV X0, X19
	0x032178D8 MOV X2, X31
	0x032178DC BL 0x3252170
	0x032178E0 ADRP X0, 0xF0A000
	0x032178E4 LDR X0, [X0 + 0xC60]
	0x032178E8 BL 0x1C16D08
	0x032178EC MOV X1, X0
	0x032178F0 MOV X0, X19
	0x032178F4 BL 0x1C16DEC
	0x032178F8 ADRP X0, 0xEE1000
	0x032178FC LDR X0, [X0 + 0x528]
	0x03217900 BL 0x1C16D08
	0x03217904 BL 0x1C16F10
	0x03217908 MOV X19, X0
	0x0321790C ADRP X0, 0xF0A000
	0x03217910 LDR X0, [X0 + 0xC40]
	0x03217914 BL 0x1C16D08
	0x03217918 MOV X1, X0
	0x0321791C MOV X0, X19
	0x03217920 MOV X2, X31
	0x03217924 BL 0x330E100
	0x03217928 B 0x321795C
	0x0321792C ADRP X0, 0xEE4000
	0x03217930 LDR X0, [X0 + 0x578]
	0x03217934 BL 0x1C16D08
	0x03217938 BL 0x1C16F10
	0x0321793C MOV X19, X0
	0x03217940 ADRP X0, 0xF0A000
	0x03217944 LDR X0, [X0 + 0xC48]
	0x03217948 BL 0x1C16D08
	0x0321794C MOV X1, X0
	0x03217950 MOV X0, X19
	0x03217954 MOV X2, X31
	0x03217958 BL 0x3314A68
	0x0321795C ADRP X0, 0xF0A000
	0x03217960 LDR X0, [X0 + 0xC60]
	0x03217964 BL 0x1C16D08
	0x03217968 MOV X1, X0
	0x0321796C MOV X0, X19
	0x03217970 BL 0x1C16DEC
	0x03217974 BL 0x1C16F28
	0x03217978 BL 0x1C16F28
	0x0321797C BL 0x1C16F28
	0x03217980 BL 0x1C16F28
	0x03217984 BL 0x1C16F28
	0x03217988 BL 0x1C16F20
	0x0321798C BL 0x1C16F28
	0x03217990 BL 0x1C16F28
	0x03217994 BL 0x1C16F28
	0x03217998 BL 0x1C16F28
	0x0321799C BL 0x1C16F28
	0x032179A0 B 0x32179D4
	0x032179A4 B 0x32179D4
	0x032179A8 B 0x32179D4
	0x032179AC B 0x32179D4
	0x032179B0 B 0x32179D4
	0x032179B4 B 0x32179D4
	0x032179B8 B 0x32179D4
	0x032179BC B 0x32179D4
	0x032179C0 B 0x32179D4
	0x032179C4 B 0x32179D4
	0x032179C8 B 0x32179D4
	0x032179CC B 0x32179D4
	0x032179D0 B 0x32179D4
	0x032179D4 MOV X19, X0
	0x032179D8 CMP W1, 0x1
	0x032179DC B.NE 0x3217A84
	0x032179E0 MOV X0, X19
	0x032179E4 BL 0x3EB1AD0
	0x032179E8 MOV X19, X0
	0x032179EC ADRP X0, 0xEDC000
	0x032179F0 LDR X0, [X0 + 0x7D0]
	0x032179F4 BL 0x1C16D08
	0x032179F8 LDR X8, [X19]
	0x032179FC LDR X1, [X8]
	0x03217A00 BL 0x1C17270
	0x03217A04 TBZ X0, 0x0, 0x3217A5C
	0x03217A08 LDR X19, [X19]
	0x03217A0C BL 0x3EB1AE0
	0x03217A10 ADRP X0, 0xF09000
	0x03217A14 LDR X0, [X0 + 0xCE0]
	0x03217A18 BL 0x1C16D08
	0x03217A1C BL 0x1C16F10
	0x03217A20 MOV X20, X0
	0x03217A24 ADRP X0, 0xF0A000
	0x03217A28 LDR X0, [X0 + 0xC50]
	0x03217A2C BL 0x1C16D08
	0x03217A30 MOV X1, X0
	0x03217A34 MOV X0, X20
	0x03217A38 MOV X2, X19
	0x03217A3C MOV X3, X31
	0x03217A40 BL 0x325240C
	0x03217A44 ADRP X0, 0xF0A000
	0x03217A48 LDR X0, [X0 + 0xC60]
	0x03217A4C BL 0x1C16D08
	0x03217A50 MOV X1, X0
	0x03217A54 MOV X0, X20
	0x03217A58 BL 0x1C16DEC
	0x03217A5C MOVZ W0, 0x8
	0x03217A60 BL 0x3EB1AF0
	0x03217A64 LDR X8, [X19]
	0x03217A68 STR X8, [X0]
	0x03217A6C ADRP X1, 0xC9D000
	0x03217A70 ADD X1, X1, 0xE58
	0x03217A74 MOV X2, X31
	0x03217A78 BL 0x3EB1B00
	0x03217A7C MOV X19, X0
	0x03217A80 BL 0x3EB1AE0
	0x03217A84 MOV X0, X19
	0x03217A88 BL 0x1D2C690
	0x03217A8C BL 0x1990590
	0x03217A90 MOV W1, W31
	0x03217A94 B 0x3217A98
	0x03217A98 STP X30, X19, [X31 - 0x10]!
	0x03217A9C CBZ X0, 0x3217AFC
	0x03217AA0 LDR W8, [X0 + 0x18]
	0x03217AA4 CMP W8, W1
	0x03217AA8 B.LE 0x3217B30
	0x03217AAC B.LS 0x3217AF8
	0x03217AB0 ADD X9, X0, W1, SXTW
	0x03217AB4 LDRB W9, [X9 + 0x20]
	0x03217AB8 CMP W9, 0x7
	0x03217ABC B.EQ 0x3217AF0
	0x03217AC0 CMP W9, 0x6
	0x03217AC4 B.EQ 0x3217AE8
	0x03217AC8 CBNZ W9, 0x3217B64
	0x03217ACC ADD W1, W1, 0xC
	0x03217AD0 CMP W1, W8
	0x03217AD4 B.CS 0x3217AF8
	0x03217AD8 ADD X8, X0, W1, SXTW
	0x03217ADC LDRB W8, [X8 + 0x20]
	0x03217AE0 CMP W8, 0x6
	0x03217AE4 B.NE 0x3217B64
	0x03217AE8 LDP X30, X19, [X31], #0x10
	0x03217AEC B 0x3217584
	0x03217AF0 LDP X30, X19, [X31], #0x10
	0x03217AF4 B 0x3216F88
	0x03217AF8 BL 0x1C16F28
	0x03217AFC ADRP X0, 0xEE1000
	0x03217B00 LDR X0, [X0 + 0x528]
	0x03217B04 BL 0x1C16D08
	0x03217B08 BL 0x1C16F10
	0x03217B0C MOV X19, X0
	0x03217B10 ADRP X0, 0xF0A000
	0x03217B14 LDR X0, [X0 + 0xC40]
	0x03217B18 BL 0x1C16D08
	0x03217B1C MOV X1, X0
	0x03217B20 MOV X0, X19
	0x03217B24 MOV X2, X31
	0x03217B28 BL 0x330E100

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x11C6000
	011 Move X21, 0xEDD000
	012 Move X23, 0xF0A000
	013 Move W8, [X20+722]
	014 Move X21, [X21+2288]
	015 Move X23, [X23+2984]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0xEDD000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDD000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0xEDD000
	028 Move X0, [X0+2288]
	029 Call 0x1C17CF4
	030 Move X0, 0xF0A000
	031 Move X0, [X0+2992]
	032 Call 0x1C17CF4
	033 Move X0, 0xF0A000
	034 Move X0, [X0+3000]
	035 Call 0x1C17CF4
	036 Move X0, 0xF0A000
	037 Move X0, [X0+3008]
	038 Call 0x1C17CF4
	039 Move X0, 0xF0A000
	040 Move X0, [X0+3016]
	041 Call 0x1C17CF4
	042 Move X0, 0xF0A000
	043 Move X0, [X0+2984]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+722], W8
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X20, X0
	051 Call StringBuilder..ctor, X0
	052 Move X1, [X23]
	053 Add X0, X19, 16
	054 Move X2, X31
	055 Call Byte.ToString, X0, X1
	056 Move X21, X0
	057 Move X0, X31
	058 Call Environment.get_NewLine
	059 Compare X20, 0
	060 JumpIfEqual {171}
	061 Move X8, 0xF0A000
	062 Move X8, [X8+2992]
	063 Move X3, X0
	064 Move X0, X20
	065 Move X2, X21
	066 Move X1, [X8]
	067 Move X4, X31
	068 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	069 Move X0, X19
	070 Call ASN1.get_Value, X0
	071 Compare X0, 0
	072 JumpIfEqual {171}
	073 Move X8, 0xEDD000
	074 Move X8, [X8+1880]
	075 Move X9, [X0+24]
	076 Move X22, 0xF0A000
	077 Move X24, 0xF0A000
	078 Move X0, [X8]
	079 Move X22, [X22+3008]
	080 Move X24, [X24+3000]
	081 Add X1, X31, 12
	082 Move [X31+12], W9
	083 Call 0x1C17E04
	084 Move X21, X0
	085 Move X0, X31
	086 Call Environment.get_NewLine
	087 Move X1, [X22]
	088 Move X3, X0
	089 Move X0, X20
	090 Move X2, X21
	091 Move X4, X31
	092 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	093 Move X1, [X24]
	094 Move X0, X20
	095 Move X2, X31
	096 Call StringBuilder.Append, X0, X1
	097 Move X0, X31
	098 Call Environment.get_NewLine
	099 Move X1, X0
	100 Move X0, X20
	101 Move X2, X31
	102 Call StringBuilder.Append, X0, X1
	103 Move X0, X19
	104 Call ASN1.get_Value, X0
	105 Compare X0, 0
	106 JumpIfEqual {171}
	107 Move X25, 0xF0A000
	108 Move X26, 0xEDD000
	109 Move X25, [X25+3016]
	110 Move X26, [X26+2504]
	111 Move X24, X31
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Call ASN1.get_Value, X0
	116 Compare X0, 0
	117 JumpIfEqual {171}
	118 Move W8, [X0+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X1, [X23]
	121 Add X8, X0, X24
	122 Add X0, X8, 32
	123 Move X2, X31
	124 Call Byte.ToString, X0, X1
	125 Move X1, [X25]
	126 Move X2, X0
	127 Move X0, X20
	128 Move X3, X31
	129 Call StringBuilder.AppendFormat, X0, X1, X2
	130 Add X24, X24, 1
	131 And X31, X24, 15
	132 Move X0, X31
	133 Call Environment.get_NewLine
	134 Move X22, [X26]
	135 Move X21, X0
	136 Move X8, [X22+56]
	137 Compare X8, 0
	138 JumpIfNotEqual {142}
	139 Move X0, X22
	140 Call 0x1C5D6E0
	141 Move X8, [X22+56]
	142 Move X0, [X8+16]
	143 Move W8, [X0+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {149}
	148 Call 0x1C5D684
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X8, [X22+56]
	154 Move X0, [X8+16]
	155 Move W8, [X0+309]
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {161}
	160 Call 0x1C5D684
	161 Move X8, [X0+184]
	162 Move X0, X20
	163 Move X1, X21
	164 Move X3, X31
	165 Move X2, [X8]
	166 Call StringBuilder.AppendFormat, X0, X1, X2
	167 Move X0, X19
	168 Call ASN1.get_Value, X0
	169 Compare X0, 0
	170 JumpIfNotEqual {112}
	171 Call 0x1C17F20
	172 Move X8, [X20]
	173 Move X0, X20
	174 Move X9, [X8+360]
	175 Move X1, [X8+368]
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X20, [X31+64]
	178 Move X19, [X31+72]
	179 Move X22, [X31+48]
	180 Move X21, [X31+56]
	181 Move X24, [X31+32]
	182 Move X23, [X31+40]
	183 Move X26, [X31+16]
	184 Move X25, [X31+24]
	185 Move X30, [X31+80]
	186 Return X0
	187 Call 0x1C17F28

