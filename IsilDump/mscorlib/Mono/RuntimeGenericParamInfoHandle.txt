Type: Mono.RuntimeGenericParamInfoHandle

Method: System.Void .ctor(System.IntPtr ptr)

Disassembly:
	0x0320BAA8 LDR X0, [X0 + 0x900]
	0x0320BAAC BL 0x1C16CF4
	0x0320BAB0 MOVZ W8, 0x1
	0x0320BAB4 STRB W8, [X21 + 0x28C]
	0x0320BAB8 LDR X0, [X22]
	0x0320BABC LDP W21, W20, [X20 + 0x58]
	0x0320BAC0 BL 0x1C16F10
	0x0320BAC4 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Move X1, X31
	006 Call IntPtr.op_Explicit, X0
	007 Move [X19], X0
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 

Method: System.Type[] get_Constraints()

Disassembly:
	0x0320BAC8 MOV W2, W21

ISIL:
No ISIL was generated
Method: System.Reflection.GenericParameterAttributes get_Attributes()

Disassembly:
	0x0320BBF8 MOVZ W8, 0x1
	0x0320BBFC STRB W8, [X20 + 0x28D]
	0x0320BC00 LDR X0, [X19 + 0x20]
	0x0320BC04 CBZ X0, 0x320BCA0
	0x0320BC08 LDR X8, [X0]
	0x0320BC0C ADRP X20, 0xEE8000
	0x0320BC10 LDP X9, X1, [X8 + 0x1D8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Type[] GetConstraints()

Disassembly:
	0x0320BACC MOV W3, W20
	0x0320BAD0 MOV X22, X0
	0x0320BAD4 BL 0x320BAEC
	0x0320BAD8 MOV X0, X22
	0x0320BADC LDP X20, X19, [X31 + 0x20]
	0x0320BAE0 LDP X22, X21, [X31 + 0x10]
	0x0320BAE4 LDR X30, [X31], #0x30
	0x0320BAE8 RET
	0x0320BAEC SUB X31, X31, 0x50
	0x0320BAF0 STP X30, X25, [X31 + 0x10]
	0x0320BAF4 STP X24, X23, [X31 + 0x20]
	0x0320BAF8 STP X22, X21, [X31 + 0x30]
	0x0320BAFC STP X20, X19, [X31 + 0x40]
	0x0320BB00 ADRP X23, 0x11D1000
	0x0320BB04 ADRP X25, 0xEE8000
	0x0320BB08 ADRP X24, 0xF16000
	0x0320BB0C LDRB W8, [X23 + 0x29E]
	0x0320BB10 LDR X25, [X25 + 0x758]
	0x0320BB14 LDR X24, [X24 + 0x908]
	0x0320BB18 MOV W19, W3
	0x0320BB1C MOV W20, W2
	0x0320BB20 MOV X22, X1
	0x0320BB24 MOV X21, X0
	0x0320BB28 TBNZ X8, 0x0, 0x320BB4C
	0x0320BB2C ADRP X0, 0xEE8000
	0x0320BB30 LDR X0, [X0 + 0x758]
	0x0320BB34 BL 0x1C16CF4
	0x0320BB38 ADRP X0, 0xF16000
	0x0320BB3C LDR X0, [X0 + 0x908]
	0x0320BB40 BL 0x1C16CF4
	0x0320BB44 MOVZ W8, 0x1
	0x0320BB48 STRB W8, [X23 + 0x29E]
	0x0320BB4C LDR X0, [X25]
	0x0320BB50 ADD X1, X31, 0xC
	0x0320BB54 STR W20, [X31 + 0xC]
	0x0320BB58 BL 0x1C16E04
	0x0320BB5C MOV X23, X0
	0x0320BB60 LDR X0, [X25]
	0x0320BB64 ADD X1, X31, 0x8
	0x0320BB68 STR W19, [X31 + 0x8]
	0x0320BB6C BL 0x1C16E04
	0x0320BB70 LDR X8, [X24]
	0x0320BB74 MOV X3, X0
	0x0320BB78 MOV X1, X22
	0x0320BB7C MOV X2, X23
	0x0320BB80 MOV X0, X8
	0x0320BB84 MOV X4, X31
	0x0320BB88 BL 0x3227C18
	0x0320BB8C MOV X1, X0
	0x0320BB90 MOV X0, X21
	0x0320BB94 MOV X2, X31
	0x0320BB98 BL 0x338C8D8
	0x0320BB9C STP W20, W19, [X21 + 0x8C]
	0x0320BBA0 LDP X20, X19, [X31 + 0x40]
	0x0320BBA4 LDP X22, X21, [X31 + 0x30]
	0x0320BBA8 LDP X24, X23, [X31 + 0x20]
	0x0320BBAC LDP X30, X25, [X31 + 0x10]
	0x0320BBB0 ADD X31, X31, 0x50
	0x0320BBB4 RET
	0x0320BBB8 STR X30, [X31 - 0x30]!
	0x0320BBBC STP X22, X21, [X31 + 0x10]
	0x0320BBC0 STP X20, X19, [X31 + 0x20]
	0x0320BBC4 ADRP X20, 0x11D1000
	0x0320BBC8 LDRB W8, [X20 + 0x28D]
	0x0320BBCC MOV X19, X0
	0x0320BBD0 TBNZ X8, 0x0, 0x320BC00
	0x0320BBD4 ADRP X0, 0xEE8000
	0x0320BBD8 LDR X0, [X0 + 0xAC8]
	0x0320BBDC BL 0x1C16CF4
	0x0320BBE0 ADRP X0, 0xF16000
	0x0320BBE4 LDR X0, [X0 + 0x910]
	0x0320BBE8 BL 0x1C16CF4
	0x0320BBEC ADRP X0, 0xEEA000
	0x0320BBF0 LDR X0, [X0 + 0x3A0]
	0x0320BBF4 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x11D2000
	010 Move X20, 0xEF1000
	011 Move W8, [X21+641]
	012 Move X20, [X20+3168]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xEF1000
	019 Move X0, [X0+3168]
	020 Call 0x1C17CF4
	021 Move X0, 0xEE9000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+641], W8
	026 Move X0, X19
	027 Call RuntimeGenericParamInfoHandle.GetConstraintsCount, X0
	028 Move X8, [X20]
	029 Move W21, W0
	030 Move W1, W21
	031 Move X0, X8
	032 Call 0x1C17D6C
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, X0
	035 Move X23, 0xEE9000
	036 Move X23, [X23+1728]
	037 Move X22, X31
	038 Move W24, W21
	039 Move W25, 32
	040 Move X8, [X19]
	041 Compare X8, 0
	042 JumpIfEqual {84}
	043 Move X8, [X8+24]
	044 Add X8, X25, X8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Call 0x1C17888
	047 Move X8, [X23]
	048 Move X21, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Call Type.GetTypeFromHandle, X0
	057 Compare X20, 0
	058 JumpIfEqual {84}
	059 Move X21, X0
	060 Compare X0, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X0, X21
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {86}
	068 Move W8, [X20+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X22, X22, 1
	071 Move [X20], X21
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X25, X25, 8
	074 Move X0, X20
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return X0
	084 Call 0x1C17F20
	085 Call 0x1C17F28
	086 Call 0x1C17F44
	087 Move X1, X31
	088 Call 0x1C17DEC

Method: System.Int32 GetConstraintsCount()

Disassembly:
	0x0320BC14 LDR X20, [X20 + 0xAC8]
	0x0320BC18 BLR X9
	0x0320BC1C LDR X8, [X20]
	0x0320BC20 MOV W1, W0
	0x0320BC24 MOV X0, X8
	0x0320BC28 BL 0x1C16D6C
	0x0320BC2C LDR X8, [X19 + 0x20]
	0x0320BC30 CBZ X8, 0x320BCA0
	0x0320BC34 LDR X9, [X8]
	0x0320BC38 ADRP X21, 0xEEA000
	0x0320BC3C ADRP X22, 0xF16000
	0x0320BC40 MOV X20, X0
	0x0320BC44 LDR X10, [X9 + 0x228]
	0x0320BC48 LDR X3, [X9 + 0x230]
	0x0320BC4C LDR X21, [X21 + 0x3A0]
	0x0320BC50 LDR X22, [X22 + 0x910]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {17}
	005 Move X8, [X8+24]
	006 Compare X8, 0
	007 JumpIfEqual {14}
	008 Move W0, W31
	009 Move X9, [X8]
	010 Compare X9, 0
	011 JumpIfEqual {15}
	012 Add X8, X8, 8
	013 Add W0, W0, 1
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

