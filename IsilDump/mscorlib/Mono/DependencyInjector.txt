Type: Mono.DependencyInjector

Method: Mono.ISystemDependencyProvider get_SystemProvider()

Disassembly:
	0x0320B368 STRB W8, [X20 + 0x28B]
	0x0320B36C LDR X0, [X24]
	0x0320B370 BL 0x1C16F10
	0x0320B374 MOV X1, X31
	0x0320B378 MOV X20, X0
	0x0320B37C BL 0x3356984
	0x0320B380 STR X20, [X19 + 0x20]
	0x0320B384 LDR X0, [X24]
	0x0320B388 BL 0x1C16F10
	0x0320B38C MOV X1, X31
	0x0320B390 MOV X20, X0
	0x0320B394 BL 0x3356984
	0x0320B398 STR X20, [X19 + 0x28]
	0x0320B39C LDR X0, [X23]
	0x0320B3A0 BL 0x1C16F10
	0x0320B3A4 MOVZ W1, 0xC8
	0x0320B3A8 MOV X2, X31
	0x0320B3AC MOV X20, X0
	0x0320B3B0 BL 0x3231B28
	0x0320B3B4 STR X20, [X19 + 0x38]
	0x0320B3B8 LDR X0, [X22]
	0x0320B3BC MOVZ W1, 0x1E
	0x0320B3C0 BL 0x1C16D6C
	0x0320B3C4 STR X0, [X19 + 0x40]
	0x0320B3C8 LDR X0, [X21]
	0x0320B3CC BL 0x1C16F10
	0x0320B3D0 MOV X20, X0
	0x0320B3D4 BL 0x320B9E8
	0x0320B3D8 MOVZ W8, 0x1
	0x0320B3DC STR X20, [X19 + 0x50]
	0x0320B3E0 STR W8, [X19 + 0x58]
	0x0320B3E4 MOV X0, X19
	0x0320B3E8 LDP X20, X19, [X31 + 0x30]
	0x0320B3EC LDP X22, X21, [X31 + 0x20]
	0x0320B3F0 LDP X24, X23, [X31 + 0x10]
	0x0320B3F4 MOV X1, X31
	0x0320B3F8 LDR X30, [X31], #0x40
	0x0320B3FC B 0x33BDD8C
	0x0320B400 STP X30, X21, [X31 - 0x20]!
	0x0320B404 STP X20, X19, [X31 + 0x10]
	0x0320B408 ADRP X21, 0x11D1000
	0x0320B40C LDRB W8, [X21 + 0x287]
	0x0320B410 MOV X20, X1
	0x0320B414 MOV X19, X0
	0x0320B418 TBNZ X8, 0x0, 0x320B430
	0x0320B41C ADRP X0, 0xF14000
	0x0320B420 LDR X0, [X0 + 0xF70]
	0x0320B424 BL 0x1C16CF4
	0x0320B428 MOVZ W8, 0x1
	0x0320B42C STRB W8, [X21 + 0x287]
	0x0320B430 LDR X0, [X19 + 0x78]
	0x0320B434 STR X31, [X19 + 0x68]
	0x0320B438 CBZ X0, 0x320B484
	0x0320B43C LDR X8, [X0]
	0x0320B440 ADRP X21, 0xF14000
	0x0320B444 LDR X9, [X8 + 0x208]
	0x0320B448 LDR X1, [X8 + 0x210]
	0x0320B44C LDR X21, [X21 + 0xF70]
	0x0320B450 BLR X9
	0x0320B454 LDR X0, [X21]
	0x0320B458 BL 0x1C16F10
	0x0320B45C MOV X1, X20
	0x0320B460 MOV X2, X31
	0x0320B464 MOV X21, X0
	0x0320B468 BL 0x32F762C
	0x0320B46C MOV X0, X19
	0x0320B470 MOV X2, X19
	0x0320B474 LDP X20, X19, [X31 + 0x10]
	0x0320B478 MOV X1, X21
	0x0320B47C LDP X30, X21, [X31], #0x20
	0x0320B480 B 0x320B488
	0x0320B484 BL 0x1C16F20
	0x0320B488 STR X30, [X31 - 0x30]!
	0x0320B48C STP X22, X21, [X31 + 0x10]
	0x0320B490 STP X20, X19, [X31 + 0x20]
	0x0320B494 ADRP X22, 0x11D1000
	0x0320B498 LDRB W8, [X22 + 0x290]
	0x0320B49C MOV X20, X2
	0x0320B4A0 MOV X21, X1
	0x0320B4A4 MOV X19, X0
	0x0320B4A8 TBNZ X8, 0x0, 0x320B4C0
	0x0320B4AC ADRP X0, 0xF16000
	0x0320B4B0 LDR X0, [X0 + 0x8D8]
	0x0320B4B4 BL 0x1C16CF4
	0x0320B4B8 MOVZ W8, 0x1
	0x0320B4BC STRB W8, [X22 + 0x290]
	0x0320B4C0 STP X20, X21, [X19 + 0x10]
	0x0320B4C4 CBZ X20, 0x320B5E8
	0x0320B4C8 ADRP X21, 0xF16000
	0x0320B4CC LDR X8, [X20]
	0x0320B4D0 LDR X21, [X21 + 0x8D8]
	0x0320B4D4 LDRH W9, [X8 + 0x12E]
	0x0320B4D8 LDR X1, [X21]
	0x0320B4DC CBZ X9, 0x320B500
	0x0320B4E0 LDR X10, [X8 + 0xB0]
	0x0320B4E4 ADD X10, X10, 0x8
	0x0320B4E8 LDUR X11, [X10 - 0x8]
	0x0320B4EC CMP X11, X1
	0x0320B4F0 B.EQ 0x320B510
	0x0320B4F4 SUBS X9, X9, 0x1
	0x0320B4F8 ADD X10, X10, 0x10
	0x0320B4FC B.NE 0x320B4E8
	0x0320B500 MOV X0, X20
	0x0320B504 MOV W2, W31
	0x0320B508 BL 0x1C5C788
	0x0320B50C B 0x320B51C
	0x0320B510 LDRSW X9, [X10]
	0x0320B514 ADD X8, X8, X9, 0x4, LSL
	0x0320B518 ADD X0, X8, 0x138
	0x0320B51C LDP X8, X2, [X0]
	0x0320B520 MOV X0, X20
	0x0320B524 MOV X1, X19
	0x0320B528 BLR X8
	0x0320B52C LDR X0, [X19 + 0x18]
	0x0320B530 CBZ X0, 0x320B5E8
	0x0320B534 LDR X8, [X0]
	0x0320B538 LDP X9, X1, [X8 + 0x1B8]
	0x0320B53C BLR X9
	0x0320B540 TBNZ X0, 0x1F, 0x320B550
	0x0320B544 MOV X0, X19
	0x0320B548 BL 0x320C4C0
	0x0320B54C B 0x320B52C
	0x0320B550 MOV X0, X19
	0x0320B554 BL 0x320CB9C
	0x0320B558 LDR X0, [X19 + 0x20]
	0x0320B55C CBZ X0, 0x320B5E8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x11D2000
	007 Move X20, 0xF17000
	008 Move W8, [X19+635]
	009 Move X20, [X20+2144]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF17000
	015 Move X0, [X0+2144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+635], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfEqual {28}
	023 Move X8, [X0+184]
	024 Move X9, [X8+8]
	025 Compare X9, 0
	026 JumpIfEqual {37}
	027 Move X21, [X8+8]
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move W9, [X0+224]
	032 Move X19, [X8+8]
	033 Compare W9, 0
	034 JumpIfEqual {59}
	035 Compare X19, 0
	036 JumpIfNotEqual {27}
	037 Move X19, [X8]
	038 Move [X31+12], W31
	039 Add X1, X31, 12
	040 Move X0, X19
	041 Move X2, X31
	042 Call Monitor.Enter, X0, X1
	043 Move X8, [X20]
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {51}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X8, [X20]
	050 Move W9, [X8+224]
	051 Move X10, [X8+184]
	052 Move X21, [X10+8]
	053 Compare X21, 0
	054 JumpIfEqual {64}
	055 Compare W9, 0
	056 JumpIfNotEqual {82}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Call 0x1C17DFC
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Compare X19, 0
	063 JumpIfNotEqual {27}
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Call DependencyInjector.ReflectionLoad
	069 Move X21, X0
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move [X8+8], X21
	073 Compare X21, 0
	074 JumpIfEqual {100}
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {82}
	078 Call 0x1C17DFC
	079 Move X8, [X20]
	080 Move X8, [X8+184]
	081 Move X21, [X8+8]
	082 Move X20, X31
	083 Move W8, [X31+12]
	084 Compare W8, 0
	085 JumpIfEqual {89}
	086 Move X0, X19
	087 Move X1, X31
	088 Call Monitor.Exit, X0
	089 Compare X20, 0
	090 JumpIfNotEqual {98}
	091 Move X0, X21
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move X21, [X31+24]
	096 Add X31, X31, 48
	097 Return X0
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X0, 0xF14000
	101 Move X0, [X0+3152]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X20, X0
	105 Move X0, 0xF17000
	106 Move X0, [X0+2152]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X20
	110 Move X2, X31
	111 Call PlatformNotSupportedException..ctor, X0, X1
	112 Move X0, 0xF17000
	113 Move X0, [X0+2160]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X20
	117 Call 0x1C17DEC
	118 Move X21, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X21
	121 Call 0x3EB2AD0
	122 Move X20, [X0]
	123 Call 0x3EB2AE0
	124 Move X21, X31
	125 Move X20, X31
	126 Move X21, X0
	127 Move W8, [X31+12]
	128 Compare W8, 0
	129 JumpIfEqual {133}
	130 Move X0, X19
	131 Move X1, X31
	132 Call Monitor.Exit, X0
	133 Compare X20, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X21
	136 Call 0x1D2D690
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Call 0x1991590

Method: System.Void Register(Mono.ISystemDependencyProvider provider)

Disassembly:
	0x0320B6AC BL 0x1C16CF4
	0x0320B6B0 MOVZ W8, 0x1
	0x0320B6B4 STRB W8, [X21 + 0x288]
	0x0320B6B8 LDR X0, [X26]
	0x0320B6BC BL 0x1C16F10
	0x0320B6C0 MOV X1, X22
	0x0320B6C4 MOV X2, X31
	0x0320B6C8 MOV X21, X0
	0x0320B6CC BL 0x3248A6C
	0x0320B6D0 LDR X8, [X20 + 0x68]
	0x0320B6D4 CBZ X8, 0x320B714
	0x0320B6D8 LDR X0, [X20 + 0x78]
	0x0320B6DC CBZ X0, 0x320B8D4
	0x0320B6E0 LDR X8, [X0]
	0x0320B6E4 LDR X9, [X8 + 0x248]
	0x0320B6E8 LDR X1, [X8 + 0x250]
	0x0320B6EC BLR X9
	0x0320B6F0 CBZ X0, 0x320B8D4
	0x0320B6F4 LDR X1, [X26]
	0x0320B6F8 LDR X8, [X0]
	0x0320B6FC CMP X8, X1
	0x0320B700 B.NE 0x320B8D8
	0x0320B704 MOV X1, X21
	0x0320B708 MOV X2, X31
	0x0320B70C BL 0x3248C08
	0x0320B710 B 0x320B718
	0x0320B714 STP X21, X21, [X20 + 0x68]
	0x0320B718 LDR X0, [X20 + 0x78]
	0x0320B71C CBZ X0, 0x320B8D4
	0x0320B720 LDR X8, [X0]
	0x0320B724 MOV X1, X21
	0x0320B728 LDR X9, [X8 + 0x268]
	0x0320B72C LDR X2, [X8 + 0x270]
	0x0320B730 BLR X9
	0x0320B734 STR X21, [X20 + 0x70]
	0x0320B738 CBZ X19, 0x320B8D4
	0x0320B73C ADRP X27, 0xF16000
	0x0320B740 LDR X8, [X19]
	0x0320B744 LDR X27, [X27 + 0x8F8]
	0x0320B748 LDRH W9, [X8 + 0x12E]
	0x0320B74C LDR X1, [X27]
	0x0320B750 CBZ X9, 0x320B774
	0x0320B754 LDR X10, [X8 + 0xB0]
	0x0320B758 ADD X10, X10, 0x8
	0x0320B75C LDUR X11, [X10 - 0x8]
	0x0320B760 CMP X11, X1
	0x0320B764 B.EQ 0x320B784
	0x0320B768 SUBS X9, X9, 0x1
	0x0320B76C ADD X10, X10, 0x10
	0x0320B770 B.NE 0x320B75C
	0x0320B774 MOV X0, X19
	0x0320B778 MOV W2, W31
	0x0320B77C BL 0x1C5C788
	0x0320B780 B 0x320B790
	0x0320B784 LDRSW X9, [X10]
	0x0320B788 ADD X8, X8, X9, 0x4, LSL
	0x0320B78C ADD X0, X8, 0x138
	0x0320B790 LDP X8, X1, [X0]
	0x0320B794 MOV X0, X19
	0x0320B798 BLR X8
	0x0320B79C CMP W0, 0x1
	0x0320B7A0 B.LT 0x320B8BC
	0x0320B7A4 MOV W21, W0
	0x0320B7A8 MOV W22, W31
	0x0320B7AC LDR X8, [X19]
	0x0320B7B0 LDR X23, [X20 + 0x70]
	0x0320B7B4 LDR X1, [X27]
	0x0320B7B8 LDRH W9, [X8 + 0x12E]
	0x0320B7BC CBZ X9, 0x320B7E0
	0x0320B7C0 LDR X10, [X8 + 0xB0]
	0x0320B7C4 ADD X10, X10, 0x8
	0x0320B7C8 LDUR X11, [X10 - 0x8]
	0x0320B7CC CMP X11, X1
	0x0320B7D0 B.EQ 0x320B7F0
	0x0320B7D4 SUBS X9, X9, 0x1
	0x0320B7D8 ADD X10, X10, 0x10
	0x0320B7DC B.NE 0x320B7C8
	0x0320B7E0 MOVZ W2, 0x1
	0x0320B7E4 MOV X0, X19
	0x0320B7E8 BL 0x1C5C788
	0x0320B7EC B 0x320B800
	0x0320B7F0 LDR W9, [X10]
	0x0320B7F4 ADD W9, W9, 0x1
	0x0320B7F8 ADD X8, X8, W9, 0x4, SXTW
	0x0320B7FC ADD X0, X8, 0x138
	0x0320B800 LDP X8, X2, [X0]
	0x0320B804 MOV X0, X19
	0x0320B808 MOV W1, W22
	0x0320B80C BLR X8
	0x0320B810 LDR X8, [X19]
	0x0320B814 LDR X1, [X27]
	0x0320B818 MOV X24, X0
	0x0320B81C LDRH W9, [X8 + 0x12E]
	0x0320B820 CBZ X9, 0x320B844
	0x0320B824 LDR X10, [X8 + 0xB0]
	0x0320B828 ADD X10, X10, 0x8
	0x0320B82C LDUR X11, [X10 - 0x8]
	0x0320B830 CMP X11, X1
	0x0320B834 B.EQ 0x320B854
	0x0320B838 SUBS X9, X9, 0x1
	0x0320B83C ADD X10, X10, 0x10
	0x0320B840 B.NE 0x320B82C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x11D2000
	007 Move X21, 0xF17000
	008 Move W8, [X19+636]
	009 Move X21, [X21+2144]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF17000
	016 Move X0, [X0+2144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+636], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X21]
	026 Move X8, [X0+184]
	027 Move X19, [X8]
	028 Move [X31+12], W31
	029 Add X1, X31, 12
	030 Move X0, X19
	031 Move X2, X31
	032 Call Monitor.Enter, X0, X1
	033 Move X8, [X21]
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X8, [X21]
	040 Move X9, [X8+184]
	041 Move X9, [X9+8]
	042 Compare X9, 0
	043 JumpIfEqual {53}
	044 Move W10, [X8+224]
	045 Compare W10, 0
	046 JumpIfNotEqual {52}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X8, [X21]
	050 Move X9, [X8+184]
	051 Move X9, [X9+8]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X8, [X21]
	059 Move X8, [X8+184]
	060 Move X21, X31
	061 Move [X8+8], X20
	062 Move W8, [X31+12]
	063 Compare W8, 0
	064 JumpIfEqual {68}
	065 Move X0, X19
	066 Move X1, X31
	067 Call Monitor.Exit, X0
	068 Compare X21, 0
	069 JumpIfNotEqual {76}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 Add X31, X31, 48
	075 Return 
	076 Move X0, X21
	077 Call 0x1C17F18
	078 Move X0, 0xEE9000
	079 Move X0, [X0+1456]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X20, X0
	083 Move X1, X31
	084 Call InvalidOperationException..ctor, X0
	085 Move X0, 0xF17000
	086 Move X0, [X0+2200]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X20
	090 Call 0x1C17DEC
	091 Move X20, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X20
	094 Call 0x3EB2AD0
	095 Move X21, [X0]
	096 Call 0x3EB2AE0
	097 Move X21, X31
	098 Move X20, X0
	099 Move W8, [X31+12]
	100 Compare W8, 0
	101 JumpIfEqual {105}
	102 Move X0, X19
	103 Move X1, X31
	104 Call Monitor.Exit, X0
	105 Compare X21, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X20
	108 Call 0x1D2D690
	109 Move X0, X21
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: Mono.ISystemDependencyProvider ReflectionLoad()

Disassembly:
	0x0320B560 LDR X8, [X0]
	0x0320B564 LDP X9, X1, [X8 + 0x1D8]
	0x0320B568 BLR X9
	0x0320B56C CMP W0, 0x1
	0x0320B570 B.GE 0x320B5EC
	0x0320B574 LDR X8, [X20]
	0x0320B578 LDR X1, [X21]
	0x0320B57C LDRH W9, [X8 + 0x12E]
	0x0320B580 CBZ X9, 0x320B5A4
	0x0320B584 LDR X10, [X8 + 0xB0]
	0x0320B588 ADD X10, X10, 0x8
	0x0320B58C LDUR X11, [X10 - 0x8]
	0x0320B590 CMP X11, X1
	0x0320B594 B.EQ 0x320B5B4
	0x0320B598 SUBS X9, X9, 0x1
	0x0320B59C ADD X10, X10, 0x10
	0x0320B5A0 B.NE 0x320B58C
	0x0320B5A4 MOVZ W2, 0x1
	0x0320B5A8 MOV X0, X20
	0x0320B5AC BL 0x1C5C788
	0x0320B5B0 B 0x320B5C4
	0x0320B5B4 LDR W9, [X10]
	0x0320B5B8 ADD W9, W9, 0x1
	0x0320B5BC ADD X8, X8, W9, 0x4, SXTW
	0x0320B5C0 ADD X0, X8, 0x138
	0x0320B5C4 LDP X8, X2, [X0]
	0x0320B5C8 MOV X0, X20
	0x0320B5CC MOV X1, X19
	0x0320B5D0 BLR X8
	0x0320B5D4 MOV X0, X19
	0x0320B5D8 LDP X20, X19, [X31 + 0x20]
	0x0320B5DC LDP X22, X21, [X31 + 0x10]
	0x0320B5E0 LDR X30, [X31], #0x30
	0x0320B5E4 B 0x320CCD4
	0x0320B5E8 BL 0x1C16F20
	0x0320B5EC LDR X20, [X19 + 0x20]
	0x0320B5F0 MOV X0, X20
	0x0320B5F4 BL 0x19903C0
	0x0320B5F8 LDR X8, [X20]
	0x0320B5FC MOV X0, X20
	0x0320B600 LDR X9, [X8 + 0x248]
	0x0320B604 LDR X1, [X8 + 0x250]
	0x0320B608 BLR X9
	0x0320B60C MOV X20, X0
	0x0320B610 ADRP X0, 0xF16000
	0x0320B614 LDR X0, [X0 + 0x8E0]
	0x0320B618 BL 0x1C16D08
	0x0320B61C MOV X1, X20
	0x0320B620 MOV X2, X31
	0x0320B624 BL 0x321EFD0
	0x0320B628 MOV X1, X0
	0x0320B62C MOV X0, X19
	0x0320B630 BL 0x320BA7C
	0x0320B634 MOV X19, X0
	0x0320B638 ADRP X0, 0xF16000
	0x0320B63C LDR X0, [X0 + 0x8E8]
	0x0320B640 BL 0x1C16D08
	0x0320B644 MOV X1, X0
	0x0320B648 MOV X0, X19
	0x0320B64C BL 0x1C16DEC
	0x0320B650 LDR X0, [X0 + 0x68]
	0x0320B654 RET
	0x0320B658 RET
	0x0320B65C RET
	0x0320B660 RET
	0x0320B664 STP X30, X27, [X31 - 0x50]!
	0x0320B668 STP X26, X25, [X31 + 0x10]
	0x0320B66C STP X24, X23, [X31 + 0x20]
	0x0320B670 STP X22, X21, [X31 + 0x30]
	0x0320B674 STP X20, X19, [X31 + 0x40]
	0x0320B678 ADRP X21, 0x11D1000
	0x0320B67C ADRP X26, 0xF16000
	0x0320B680 LDRB W8, [X21 + 0x288]
	0x0320B684 LDR X26, [X26 + 0x8F0]
	0x0320B688 MOV X19, X2
	0x0320B68C MOV X22, X1
	0x0320B690 MOV X20, X0
	0x0320B694 TBNZ X8, 0x0, 0x320B6B8
	0x0320B698 ADRP X0, 0xF16000
	0x0320B69C LDR X0, [X0 + 0x8F8]
	0x0320B6A0 BL 0x1C16CF4
	0x0320B6A4 ADRP X0, 0xF16000
	0x0320B6A8 LDR X0, [X0 + 0x8F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11D2000
	006 Move X19, 0xEE9000
	007 Move W8, [X20+637]
	008 Move X19, [X19+1728]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xF17000
	014 Move X0, [X0+2168]
	015 Call 0x1C17CF4
	016 Move X0, 0xF17000
	017 Move X0, [X0+2176]
	018 Call 0x1C17CF4
	019 Move X0, 0xF12000
	020 Move X0, [X0+432]
	021 Call 0x1C17CF4
	022 Move X0, 0xEE9000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0xF17000
	026 Move X0, [X0+2184]
	027 Call 0x1C17CF4
	028 Move X0, 0xF17000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+637], W8
	033 Move X0, [X19]
	034 Move X21, 0xF17000
	035 Move X20, 0xF12000
	036 Move X19, 0xF17000
	037 Move W8, [X0+224]
	038 Move X21, [X21+2192]
	039 Move X20, [X20+432]
	040 Move X19, [X19+2168]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Move X1, [X20]
	046 Move X2, [X19]
	047 Call 0x1C1803C
	048 Move X1, X31
	049 Move X2, X31
	050 Move X19, X0
	051 Call Type.op_Equality, X0, X1
	052 Move W8, W0
	053 Move X0, X31
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {93}
	058 Compare X19, 0
	059 JumpIfEqual {98}
	060 Move X8, 0xF17000
	061 Move X8, [X8+2184]
	062 Move W2, 26
	063 Move X0, X19
	064 Move X3, X31
	065 Move X1, [X8]
	066 Call Type.GetProperty, X0, X1, X2
	067 Move X1, X31
	068 Move X2, X31
	069 Move X19, X0
	070 Call PropertyInfo.op_Equality, X0, X1
	071 Move W8, W0
	072 Move X0, X31
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {93}
	077 Compare X19, 0
	078 JumpIfEqual {98}
	079 Move X0, X19
	080 Move X1, X31
	081 Move X2, X31
	082 Call PropertyInfo.GetValue, X0, X1
	083 Compare X0, 0
	084 JumpIfEqual {93}
	085 Move X8, 0xF17000
	086 Move X8, [X8+2176]
	087 Move X19, X0
	088 Move X20, [X8]
	089 Move X1, X20
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {99}
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Return X0
	098 Call 0x1C17F20
	099 Move X0, X19
	100 Move X1, X20
	101 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x0320B844 MOVZ W2, 0x2
	0x0320B848 MOV X0, X19
	0x0320B84C BL 0x1C5C788
	0x0320B850 B 0x320B864
	0x0320B854 LDR W9, [X10]
	0x0320B858 ADD W9, W9, 0x2
	0x0320B85C ADD X8, X8, W9, 0x4, SXTW
	0x0320B860 ADD X0, X8, 0x138
	0x0320B864 LDP X8, X2, [X0]
	0x0320B868 MOV X0, X19
	0x0320B86C MOV W1, W22
	0x0320B870 BLR X8
	0x0320B874 LDR X8, [X26]
	0x0320B878 MOV X25, X0
	0x0320B87C LDR W9, [X8 + 0xE0]
	0x0320B880 CBNZ W9, 0x320B88C
	0x0320B884 MOV X0, X8
	0x0320B888 BL 0x1C16DFC
	0x0320B88C MOV X0, X25
	0x0320B890 MOV X1, X31
	0x0320B894 BL 0x3249A78
	0x0320B898 CBZ X23, 0x320B8D4
	0x0320B89C MOV X2, X0
	0x0320B8A0 MOV X0, X23
	0x0320B8A4 MOV X1, X24
	0x0320B8A8 MOV X3, X31
	0x0320B8AC BL 0x3248A74
	0x0320B8B0 ADD W22, W22, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x11D2000
	006 Move X21, 0xEEF000
	007 Move X20, 0xF17000
	008 Move W8, [X19+638]
	009 Move X21, [X21+3264]
	010 Move X20, [X20+2144]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF17000
	016 Move X0, [X0+2144]
	017 Call 0x1C17CF4
	018 Move X0, 0xEEF000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+638], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

