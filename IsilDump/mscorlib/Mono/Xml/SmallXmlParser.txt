Type: Mono.Xml.SmallXmlParser

Method: System.Void .ctor()

Disassembly:
	0x0320C2F4 MOV X1, X0
	0x0320C2F8 MOV X0, X19
	0x0320C2FC BL 0x320BA7C
	0x0320C300 MOV X19, X0
	0x0320C304 ADRP X0, 0xF15000
	0x0320C308 LDR X0, [X0 + 0x970]
	0x0320C30C BL 0x1C16D08
	0x0320C310 MOV X1, X0
	0x0320C314 MOV X0, X19
	0x0320C318 BL 0x1C16DEC
	0x0320C31C STR X30, [X31 - 0x40]!
	0x0320C320 STP X24, X23, [X31 + 0x10]
	0x0320C324 STP X22, X21, [X31 + 0x20]
	0x0320C328 STP X20, X19, [X31 + 0x30]
	0x0320C32C ADRP X20, 0x11D0000
	0x0320C330 LDRB W8, [X20 + 0x28F]
	0x0320C334 MOV X19, X0
	0x0320C338 TBNZ X8, 0x0, 0x320C350
	0x0320C33C ADRP X0, 0xEF0000
	0x0320C340 LDR X0, [X0 + 0x8D8]
	0x0320C344 BL 0x1C16CF4
	0x0320C348 MOVZ W8, 0x1
	0x0320C34C STRB W8, [X20 + 0x28F]
	0x0320C350 LDR X0, [X19 + 0x18]
	0x0320C354 CBZ X0, 0x320C478
	0x0320C358 LDR X8, [X0]
	0x0320C35C LDP X9, X1, [X8 + 0x1B8]
	0x0320C360 BLR X9
	0x0320C364 TBNZ X0, 0x1F, 0x320C480
	0x0320C368 LDR X0, [X19 + 0x18]
	0x0320C36C CBZ X0, 0x320C478
	0x0320C370 LDR X8, [X0]
	0x0320C374 LDP X9, X1, [X8 + 0x1B8]
	0x0320C378 BLR X9
	0x0320C37C MOVZ W2, 0x1
	0x0320C380 MOV W1, W0
	0x0320C384 BL 0x320BCA4
	0x0320C388 TBZ X0, 0x0, 0x320C480
	0x0320C38C LDR X0, [X19 + 0x18]
	0x0320C390 CBZ X0, 0x320C478
	0x0320C394 LDR X8, [X0]
	0x0320C398 LDP X9, X1, [X8 + 0x1B8]
	0x0320C39C BLR X9
	0x0320C3A0 TBNZ X0, 0x1F, 0x320C48C
	0x0320C3A4 ADRP X24, 0xEF0000
	0x0320C3A8 LDR X24, [X24 + 0x8D8]
	0x0320C3AC MOV W22, W0
	0x0320C3B0 MOV W21, W31
	0x0320C3B4 MOV W20, W31
	0x0320C3B8 MOV W1, W22
	0x0320C3BC MOV W2, W31
	0x0320C3C0 BL 0x320BCA4
	0x0320C3C4 TBZ X0, 0x0, 0x320C44C
	0x0320C3C8 LDR X23, [X19 + 0x40]
	0x0320C3CC CBZ X23, 0x320C478
	0x0320C3D0 LDR W8, [X23 + 0x18]
	0x0320C3D4 CMP W20, W8
	0x0320C3D8 B.NE 0x320C40C
	0x0320C3DC LDR X0, [X24]
	0x0320C3E0 MOV W1, W21
	0x0320C3E4 BL 0x1C16D6C
	0x0320C3E8 LDR X8, [X19 + 0x40]
	0x0320C3EC MOV X23, X0
	0x0320C3F0 MOV X1, X23
	0x0320C3F4 MOV W2, W20
	0x0320C3F8 MOV X0, X8
	0x0320C3FC MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x11D1000
	009 Move X24, 0xF16000
	010 Move X23, 0xEE8000
	011 Move X22, 0xEF1000
	012 Move X21, 0xF16000
	013 Move W8, [X20+651]
	014 Move X24, [X24+2248]
	015 Move X23, [X23+2288]
	016 Move X22, [X22+2264]
	017 Move X21, [X21+2256]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xF16000
	024 Move X0, [X0+2256]
	025 Call 0x1C17CF4
	026 Move X0, 0xEF1000
	027 Move X0, [X0+2264]
	028 Call 0x1C17CF4
	029 Move X0, 0xF16000
	030 Move X0, [X0+2248]
	031 Call 0x1C17CF4
	032 Move X0, 0xEE8000
	033 Move X0, [X0+2288]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+651], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call Stack..ctor, X0
	042 Move [X19+32], X20
	043 Move X0, [X24]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call Stack..ctor, X0
	048 Move [X19+40], X20
	049 Move X0, [X23]
	050 Call 0x1C17F10
	051 Move W1, 200
	052 Move X2, X31
	053 Move X20, X0
	054 Call StringBuilder..ctor, X0, X1
	055 Move [X19+56], X20
	056 Move X0, [X22]
	057 Move W1, 30
	058 Call 0x1C17D6C
	059 Move [X19+64], X0
	060 Move X0, [X21]
	061 Call 0x1C17F10
	062 Move X20, X0
	063 Call AttrListImpl..ctor, X0
	064 Move W8, 1
	065 Move [X19+80], X20
	066 Move [X19+88], W8
	067 Move X0, X19
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+64]
	076 Call Object..ctor, X0
	077 Return 

Method: System.Exception Error(System.String msg)

Disassembly:
	0x0320CA7C LDR X0, [X19 + 0x20]
	0x0320CA80 CBZ X0, 0x320C9A8
	0x0320CA84 LDR X8, [X0]
	0x0320CA88 MOV X1, X20
	0x0320CA8C LDR X9, [X8 + 0x268]
	0x0320CA90 LDR X2, [X8 + 0x270]
	0x0320CA94 BLR X9
	0x0320CA98 LDR X0, [X19 + 0x28]
	0x0320CA9C CBZ X0, 0x320C9A8
	0x0320CAA0 LDR X8, [X0]
	0x0320CAA4 LDR X1, [X19 + 0x30]
	0x0320CAA8 LDR X9, [X8 + 0x268]
	0x0320CAAC LDR X2, [X8 + 0x270]
	0x0320CAB0 BLR X9
	0x0320CAB4 B 0x320CAD8
	0x0320CAB8 LDR W9, [X10]
	0x0320CABC ADD W9, W9, 0x3
	0x0320CAC0 ADD X8, X8, W9, 0x4, SXTW
	0x0320CAC4 ADD X0, X8, 0x138
	0x0320CAC8 LDP X8, X2, [X0]
	0x0320CACC MOV X0, X21
	0x0320CAD0 MOV X1, X20
	0x0320CAD4 BLR X8
	0x0320CAD8 MOV X0, X19
	0x0320CADC LDP X20, X19, [X31 + 0x20]
	0x0320CAE0 LDP X22, X21, [X31 + 0x10]
	0x0320CAE4 MOVZ W1, 0x3E
	0x0320CAE8 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D1000
	007 Move X22, 0xF16000
	008 Move W8, [X21+652]
	009 Move X22, [X22+2304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF16000
	017 Move X0, [X0+2304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+652], W8
	021 Move X0, [X22]
	022 Move W21, [X20+88]
	023 Move W20, [X20+92]
	024 Call 0x1C17F10
	025 Move X1, X19
	026 Move W2, W21
	027 Move W3, W20
	028 Move X22, X0
	029 Call SmallXmlParserException..ctor, X0, X1, X2, X3
	030 Move X0, X22
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Exception UnexpectedEndError()

Disassembly:
	0x0320CBB8 ADRP X0, 0xF15000
	0x0320CBBC LDR X0, [X0 + 0x8D8]
	0x0320CBC0 BL 0x1C16CF4
	0x0320CBC4 MOVZ W8, 0x1
	0x0320CBC8 STRB W8, [X20 + 0x292]
	0x0320CBCC LDR X0, [X19 + 0x38]
	0x0320CBD0 CBZ X0, 0x320CCD0
	0x0320CBD4 MOV X1, X31
	0x0320CBD8 BL 0x323260C
	0x0320CBDC CBZ W0, 0x320CCC0
	0x0320CBE0 LDR X0, [X19 + 0x38]
	0x0320CBE4 CBZ X0, 0x320CCD0
	0x0320CBE8 LDR X8, [X0]
	0x0320CBEC LDRB W22, [X19 + 0x48]
	0x0320CBF0 LDR X20, [X19 + 0x10]
	0x0320CBF4 LDP X9, X1, [X8 + 0x168]
	0x0320CBF8 BLR X9
	0x0320CBFC CBZ X20, 0x320CCD0
	0x0320CC00 ADRP X9, 0xF15000
	0x0320CC04 LDR X8, [X20]
	0x0320CC08 LDR X9, [X9 + 0x8D8]
	0x0320CC0C MOV X21, X0
	0x0320CC10 LDR X1, [X9]
	0x0320CC14 LDRH W9, [X8 + 0x12E]
	0x0320CC18 CBZ W22, 0x320CC48
	0x0320CC1C CBZ W9, 0x320CC40
	0x0320CC20 LDR X10, [X8 + 0xB0]
	0x0320CC24 ADD X10, X10, 0x8
	0x0320CC28 LDUR X11, [X10 - 0x8]
	0x0320CC2C CMP X11, X1
	0x0320CC30 B.EQ 0x320CC7C
	0x0320CC34 SUBS X9, X9, 0x1
	0x0320CC38 ADD X10, X10, 0x10
	0x0320CC3C B.NE 0x320CC28
	0x0320CC40 MOVZ W2, 0x6
	0x0320CC44 B 0x320CC70
	0x0320CC48 CBZ W9, 0x320CC6C
	0x0320CC4C LDR X10, [X8 + 0xB0]
	0x0320CC50 ADD X10, X10, 0x8
	0x0320CC54 LDUR X11, [X10 - 0x8]
	0x0320CC58 CMP X11, X1
	0x0320CC5C B.EQ 0x320CC88
	0x0320CC60 SUBS X9, X9, 0x1
	0x0320CC64 ADD X10, X10, 0x10
	0x0320CC68 B.NE 0x320CC54
	0x0320CC6C MOVZ W2, 0x5
	0x0320CC70 MOV X0, X20
	0x0320CC74 BL 0x1C5C788
	0x0320CC78 B 0x320CC98
	0x0320CC7C LDR W9, [X10]
	0x0320CC80 ADD W9, W9, 0x6
	0x0320CC84 B 0x320CC90
	0x0320CC88 LDR W9, [X10]
	0x0320CC8C ADD W9, W9, 0x5
	0x0320CC90 ADD X8, X8, W9, 0x4, SXTW
	0x0320CC94 ADD X0, X8, 0x138
	0x0320CC98 LDP X8, X2, [X0]
	0x0320CC9C MOV X0, X20
	0x0320CCA0 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11D1000
	007 Move W8, [X20+653]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xEE8000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0xF16000
	017 Move X0, [X0+2320]
	018 Call 0x1C17CF4
	019 Move X0, 0xEEA000
	020 Move X0, [X0+928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+653], W8
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {70}
	027 Move X8, [X0]
	028 Move X20, 0xEE8000
	029 Move X9, [X8+472]
	030 Move X1, [X8+480]
	031 Move X20, [X20+2760]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X20]
	034 Move W1, W0
	035 Move X0, X8
	036 Call 0x1C17D6C
	037 Move X8, [X19+32]
	038 Compare X8, 0
	039 JumpIfEqual {70}
	040 Move X9, [X8]
	041 Move X21, 0xEEA000
	042 Move X22, 0xF16000
	043 Move X20, X0
	044 Move X10, [X9+552]
	045 Move X3, [X9+560]
	046 Move X21, [X21+928]
	047 Move X22, [X22+2320]
	048 Move X0, X8
	049 Move X1, X20
	050 Move W2, W31
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X21]
	053 Move X1, X20
	054 Move X2, X31
	055 Call String.Join, X0, X1
	056 Move X8, [X22]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Move X1, X0
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Call SmallXmlParser.Error, X0, X1
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean IsNameChar(System.Char c, System.Boolean start)

Disassembly:
	0x0320CCA4 BLR X8
	0x0320CCA8 LDR X0, [X19 + 0x38]
	0x0320CCAC CBZ X0, 0x320CCD0
	0x0320CCB0 MOV W1, W31
	0x0320CCB4 MOV X2, X31
	0x0320CCB8 BL 0x3232ADC
	0x0320CCBC STRB W31, [X19 + 0x48]
	0x0320CCC0 LDP X20, X19, [X31 + 0x20]
	0x0320CCC4 LDP X22, X21, [X31 + 0x10]
	0x0320CCC8 LDR X30, [X31], #0x30
	0x0320CCCC RET
	0x0320CCD0 BL 0x1C16F20
	0x0320CCD4 STP X30, X19, [X31 - 0x10]!
	0x0320CCD8 ADRP X8, 0xFFFFFFFFFD8E1000
	0x0320CCDC MOV X19, X0
	0x0320CCE0 LDR V0, [X8 + 0xEC0]
	0x0320CCE4 LDR X0, [X0 + 0x20]
	0x0320CCE8 STP X31, X31, [X19 + 0x10]
	0x0320CCEC STR D0, [X19 + 0x58]
	0x0320CCF0 CBZ X0, 0x320CD4C
	0x0320CCF4 LDR X8, [X0]
	0x0320CCF8 LDR X9, [X8 + 0x208]
	0x0320CCFC LDR X1, [X8 + 0x210]
	0x0320CD00 BLR X9
	0x0320CD04 LDR X0, [X19 + 0x28]
	0x0320CD08 CBZ X0, 0x320CD4C
	0x0320CD0C LDR X8, [X0]
	0x0320CD10 LDR X9, [X8 + 0x208]
	0x0320CD14 LDR X1, [X8 + 0x210]
	0x0320CD18 BLR X9
	0x0320CD1C LDR X0, [X19 + 0x50]
	0x0320CD20 CBZ X0, 0x320CD4C
	0x0320CD24 BL 0x320CD50
	0x0320CD28 LDR X0, [X19 + 0x38]
	0x0320CD2C CBZ X0, 0x320CD4C
	0x0320CD30 MOV W1, W31
	0x0320CD34 MOV X2, X31
	0x0320CD38 BL 0x3232ADC
	0x0320CD3C STR X31, [X19 + 0x30]
	0x0320CD40 STRB W31, [X19 + 0x48]
	0x0320CD44 LDP X30, X19, [X31], #0x10
	0x0320CD48 RET
	0x0320CD4C BL 0x1C16F20
	0x0320CD50 STR X30, [X31 - 0x20]!
	0x0320CD54 STP X20, X19, [X31 + 0x10]
	0x0320CD58 ADRP X20, 0x11D0000
	0x0320CD5C LDRB W8, [X20 + 0x29B]
	0x0320CD60 MOV X19, X0
	0x0320CD64 TBNZ X8, 0x0, 0x320CD7C
	0x0320CD68 ADRP X0, 0xF0F000
	0x0320CD6C LDR X0, [X0 + 0xB78]
	0x0320CD70 BL 0x1C16CF4
	0x0320CD74 MOVZ W8, 0x1
	0x0320CD78 STRB W8, [X20 + 0x29B]
	0x0320CD7C LDR X8, [X19 + 0x10]
	0x0320CD80 CBZ X8, 0x320CDE8
	0x0320CD84 LDP W2, W9, [X8 + 0x18]
	0x0320CD88 ADD W9, W9, 0x1
	0x0320CD8C CMP W2, 0x1
	0x0320CD90 STP W31, W9, [X8 + 0x18]
	0x0320CD94 B.LT 0x320CDA8
	0x0320CD98 LDR X0, [X8 + 0x10]
	0x0320CD9C MOV W1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11D1000
	006 Move W8, [X21+654]
	007 Move W19, W2
	008 Move W20, W1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xEEA000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+654], W8
	018 And W9, W20, 0xFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Subtract W8, W20, 45
	021 And W8, W8, 0xFFFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 And W9, W20, 0xFFFF
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, 0xEEA000
	029 Move X8, [X8+368]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W0, W20
	036 Move X1, X31
	037 Call Char.GetUnicodeCategory, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 1
	040 NotImplemented "Instruction LSLV not yet implemented."
	041 Move W9, 488
	042 And W31, W8, W9
	043 Xor W8, W19, 1
	044 Subtract W8, W9, 1765
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract W8, W20, 699
	049 And W8, W8, 0xFFFF
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, 1
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 And W0, W8, 1
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Move W8, W31

Method: System.Boolean IsWhitespace(System.Int32 c)

Disassembly:
	0x0320CDA0 MOV X3, X31
	0x0320CDA4 BL 0x339FA34
	0x0320CDA8 LDR X8, [X19 + 0x18]
	0x0320CDAC CBZ X8, 0x320CDE8
	0x0320CDB0 LDP W2, W9, [X8 + 0x18]
	0x0320CDB4 ADD W9, W9, 0x1
	0x0320CDB8 CMP W2, 0x1
	0x0320CDBC STP W31, W9, [X8 + 0x18]
	0x0320CDC0 B.LT 0x320CDDC
	0x0320CDC4 LDR X0, [X8 + 0x10]

ISIL:
	001 Subtract W8, W1, 9
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Or W8, W9, W8
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Or W0, W9, W8
	010 Return X0

Method: System.Void SkipWhitespaces()

Disassembly:
	0x0320CDC8 LDP X20, X19, [X31 + 0x10]
	0x0320CDCC MOV W1, W31

ISIL:
	001 Move W1, W31

Method: System.Void HandleWhitespaces()

Disassembly:
	0x0320CE7C BL 0x3233D30
	0x0320CE80 LDR X0, [X19 + 0x18]
	0x0320CE84 CBNZ X0, 0x320CE04
	0x0320CE88 BL 0x1C16F20
	0x0320CE8C B.EQ 0x320CEB4
	0x0320CE90 ADD W20, W21, 0x1
	0x0320CE94 LDR X0, [X19 + 0x38]
	0x0320CE98 CBZ X0, 0x320CE88
	0x0320CE9C MOVZ W1, 0x5D
	0x0320CEA0 MOV X2, X31
	0x0320CEA4 BL 0x3233D30
	0x0320CEA8 SUB W20, W20, 0x1
	0x0320CEAC CMP W20, 0x3
	0x0320CEB0 B.GT 0x320CE94
	0x0320CEB4 LDP X20, X19, [X31 + 0x10]
	0x0320CEB8 LDP X30, X21, [X31], #0x20
	0x0320CEBC RET
	0x0320CEC0 MOV X0, X19
	0x0320CEC4 BL 0x320BBB8
	0x0320CEC8 MOV X19, X0
	0x0320CECC ADRP X0, 0xF15000
	0x0320CED0 LDR X0, [X0 + 0x9D0]
	0x0320CED4 BL 0x1C16D08
	0x0320CED8 MOV X1, X0
	0x0320CEDC MOV X0, X19
	0x0320CEE0 BL 0x1C16DEC
	0x0320CEE4 STP X30, X19, [X31 - 0x10]!
	0x0320CEE8 MOVZ W1, 0x2D
	0x0320CEEC MOV X19, X0
	0x0320CEF0 BL 0x320BFB8
	0x0320CEF4 MOVZ W1, 0x2D
	0x0320CEF8 MOV X0, X19
	0x0320CEFC BL 0x320BFB8
	0x0320CF00 MOV X0, X19
	0x0320CF04 BL 0x320BF3C
	0x0320CF08 CMP W0, 0x2D
	0x0320CF0C B.NE 0x320CF00
	0x0320CF10 MOV X0, X19
	0x0320CF14 BL 0x320BF3C
	0x0320CF18 CMP W0, 0x2D
	0x0320CF1C B.NE 0x320CF00
	0x0320CF20 MOV X0, X19
	0x0320CF24 BL 0x320BF3C
	0x0320CF28 CMP W0, 0x3E
	0x0320CF2C B.NE 0x320CF38
	0x0320CF30 LDP X30, X19, [X31], #0x10
	0x0320CF34 RET
	0x0320CF38 ADRP X0, 0xF15000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Compare X0, 0
	009 JumpIfEqual {59}
	010 Move X22, 0x2600
	011 Move W21, 1
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 Move X8, [X0]
	014 Move X9, [X8+440]
	015 Move X1, [X8+448]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, W0
	019 NotImplemented "Instruction LSLV not yet implemented."
	020 And X31, X8, X22
	021 Move X20, [X19+56]
	022 Move X0, X19
	023 Call SmallXmlParser.Read, X0
	024 Compare X20, 0
	025 JumpIfEqual {59}
	026 Move W1, W0
	027 Move X0, X20
	028 Move X2, X31
	029 Call StringBuilder.Append, X0, X1
	030 Move X0, [X19+24]
	031 Compare X0, 0
	032 JumpIfNotEqual {13}
	033 Move X0, [X19+24]
	034 Compare X0, 0
	035 JumpIfEqual {59}
	036 Move X8, [X0]
	037 Move X9, [X8+440]
	038 Move X1, [X8+448]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19+24]
	042 Compare X0, 0
	043 JumpIfEqual {59}
	044 Move X8, [X0]
	045 Move X9, [X8+440]
	046 Move X1, [X8+448]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfEqual {53}
	052 Move [X19+72], W31
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Call 0x1C17F20

Method: System.Void SkipWhitespaces(System.Boolean expected)

Disassembly:
	0x0320CDD0 MOV X3, X31
	0x0320CDD4 LDR X30, [X31], #0x20
	0x0320CDD8 B 0x339FA34
	0x0320CDDC LDP X20, X19, [X31 + 0x10]
	0x0320CDE0 LDR X30, [X31], #0x20
	0x0320CDE4 RET
	0x0320CDE8 BL 0x1C16F20
	0x0320CDEC STP X30, X21, [X31 - 0x20]!
	0x0320CDF0 STP X20, X19, [X31 + 0x10]
	0x0320CDF4 MOV X19, X0
	0x0320CDF8 LDR X0, [X0 + 0x18]
	0x0320CDFC CBZ X0, 0x320CE88
	0x0320CE00 MOV W21, W31
	0x0320CE04 LDR X8, [X0]
	0x0320CE08 LDP X9, X1, [X8 + 0x1B8]
	0x0320CE0C BLR X9
	0x0320CE10 TBNZ X0, 0x1F, 0x320CEC0
	0x0320CE14 MOV X0, X19
	0x0320CE18 BL 0x320BF3C
	0x0320CE1C AND W8, W0, 0xFFFF
	0x0320CE20 MOV W20, W0
	0x0320CE24 CMP W8, 0x3E
	0x0320CE28 B.EQ 0x320CE3C
	0x0320CE2C CMP W8, 0x5D
	0x0320CE30 B.NE 0x320CE44
	0x0320CE34 ADD W21, W21, 0x1
	0x0320CE38 B 0x320CE80
	0x0320CE3C CMP W21, 0x2
	0x0320CE40 B.GE 0x320CE8C
	0x0320CE44 LDR X0, [X19 + 0x38]
	0x0320CE48 CBZ X0, 0x320CE88
	0x0320CE4C BIC W8, W21, W21, 0x1F
	0x0320CE50 ADD W21, W8, 0x1
	0x0320CE54 SUBS W21, W21, 0x1
	0x0320CE58 B.EQ 0x320CE74
	0x0320CE5C MOVZ W1, 0x5D
	0x0320CE60 MOV X2, X31
	0x0320CE64 BL 0x3233D30
	0x0320CE68 LDR X0, [X19 + 0x38]
	0x0320CE6C CBNZ X0, 0x320CE54
	0x0320CE70 B 0x320CE88
	0x0320CE74 MOV W1, W20
	0x0320CE78 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Compare X0, 0
	009 JumpIfEqual {28}
	010 Move X22, 0x2600
	011 Move W20, W1
	012 Move W21, 1
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Move X8, [X0]
	015 Move X9, [X8+440]
	016 Move X1, [X8+448]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W8, W0
	020 NotImplemented "Instruction LSLV not yet implemented."
	021 And X31, X8, X22
	022 Move X0, X19
	023 Call SmallXmlParser.Read, X0
	024 Move X0, [X19+24]
	025 Move W20, W31
	026 Compare X0, 0
	027 JumpIfNotEqual {14}
	028 Call 0x1C17F20
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {39}
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return 
	039 Move X0, 0xF16000
	040 Move X0, [X0+2328]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call SmallXmlParser.Error, X0, X1
	045 Move X19, X0
	046 Move X0, 0xF16000
	047 Move X0, [X0+2336]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Int32 Peek()

Disassembly:
	0x0320CF98 MOVZ W8, 0x1
	0x0320CF9C STRB W8, [X21 + 0x294]
	0x0320CFA0 MOVZ W1, 0x1
	0x0320CFA4 MOV X0, X20
	0x0320CFA8 BL 0x320BDD0
	0x0320CFAC LDR X0, [X20 + 0x18]
	0x0320CFB0 CBZ X0, 0x320D098
	0x0320CFB4 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+440]
	007 Move X1, [X8+448]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 Read()

Disassembly:
	0x0320CF3C LDR X0, [X0 + 0x9D8]
	0x0320CF40 BL 0x1C16D08
	0x0320CF44 MOV X1, X0
	0x0320CF48 MOV X0, X19
	0x0320CF4C BL 0x320BA7C
	0x0320CF50 MOV X19, X0
	0x0320CF54 ADRP X0, 0xF15000
	0x0320CF58 LDR X0, [X0 + 0x9E0]
	0x0320CF5C BL 0x1C16D08
	0x0320CF60 MOV X1, X0
	0x0320CF64 MOV X0, X19
	0x0320CF68 BL 0x1C16DEC
	0x0320CF6C STR X30, [X31 - 0x30]!
	0x0320CF70 STP X22, X21, [X31 + 0x10]
	0x0320CF74 STP X20, X19, [X31 + 0x20]
	0x0320CF78 ADRP X21, 0x11D0000
	0x0320CF7C LDRB W8, [X21 + 0x294]
	0x0320CF80 MOV X19, X1
	0x0320CF84 MOV X20, X0
	0x0320CF88 TBNZ X8, 0x0, 0x320CFA0
	0x0320CF8C ADRP X0, 0xF15000
	0x0320CF90 LDR X0, [X0 + 0x9E8]
	0x0320CF94 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {27}
	007 Move X8, [X0]
	008 Move X9, [X8+456]
	009 Move X1, [X8+464]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X19+96]
	013 Compare W8, 0
	014 JumpIfEqual {24}
	015 Move W8, [X19+88]
	016 Move W9, 1
	017 Move [X19+96], W31
	018 Add W8, W8, 1
	019 Move [X19+88], W8
	020 Move [X19+92], W9
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Move W8, [X19+92]
	025 Add W8, W8, 1
	026 Move [X19+92], W8
	027 Call 0x1C17F20

Method: System.Void Expect(System.Int32 c)

Disassembly:
	0x0320CFB8 LDP X9, X1, [X8 + 0x1B8]
	0x0320CFBC BLR X9
	0x0320CFC0 CMP W0, 0x2F
	0x0320CFC4 B.EQ 0x320CFE4
	0x0320CFC8 LDR X0, [X20 + 0x18]
	0x0320CFCC CBZ X0, 0x320D098
	0x0320CFD0 LDR X8, [X0]
	0x0320CFD4 LDP X9, X1, [X8 + 0x1B8]
	0x0320CFD8 BLR X9
	0x0320CFDC CMP W0, 0x3E
	0x0320CFE0 B.NE 0x320CFF4
	0x0320CFE4 LDP X20, X19, [X31 + 0x20]
	0x0320CFE8 LDP X22, X21, [X31 + 0x10]
	0x0320CFEC LDR X30, [X31], #0x30
	0x0320CFF0 RET
	0x0320CFF4 MOV X0, X20
	0x0320CFF8 BL 0x320C31C
	0x0320CFFC MOV X21, X0
	0x0320D000 MOV X0, X20
	0x0320D004 MOV W1, W31
	0x0320D008 BL 0x320BDD0
	0x0320D00C MOVZ W1, 0x3D
	0x0320D010 MOV X0, X20
	0x0320D014 BL 0x320BFB8
	0x0320D018 MOV X0, X20
	0x0320D01C MOV W1, W31
	0x0320D020 BL 0x320BDD0
	0x0320D024 MOV X0, X20
	0x0320D028 BL 0x320BF3C
	0x0320D02C CMP W0, 0x27
	0x0320D030 B.EQ 0x320D044
	0x0320D034 CMP W0, 0x22
	0x0320D038 B.NE 0x320D09C
	0x0320D03C MOVZ W1, 0x22
	0x0320D040 B 0x320D048
	0x0320D044 MOVZ W1, 0x27
	0x0320D048 MOVZ W2, 0x1
	0x0320D04C MOV X0, X20
	0x0320D050 BL 0x320C078
	0x0320D054 ADRP X8, 0xF14000
	0x0320D058 LDR X8, [X8 + 0x9E8]
	0x0320D05C MOV X22, X0
	0x0320D060 MOV X0, X21
	0x0320D064 MOV X2, X31
	0x0320D068 LDR X1, [X8]
	0x0320D06C BL 0x321BA08
	0x0320D070 TBZ X0, 0x0, 0x320D078
	0x0320D074 STR X22, [X20 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, W1
	007 Move X19, X0
	008 Call SmallXmlParser.Read, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {20}
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+32]
	015 Move X19, [X31+40]
	016 Move X22, [X31+16]
	017 Move X21, [X31+24]
	018 Move X30, [X31+48]
	019 Return 
	020 Move X0, X19
	021 Call SmallXmlParser.UnexpectedEndError, X0
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move X20, 0xEEA000
	024 Move X20, [X20+368]
	025 Move W22, W0
	026 Move X0, X20
	027 Call 0x1C17D08
	028 Add X1, X31, 12
	029 Call 0x1C17E04
	030 Move X21, X0
	031 Move X0, X20
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Call 0x1C17D08
	034 Add X1, X31, 8
	035 Call 0x1C17E04
	036 Move X20, X0
	037 Move X0, 0xF15000
	038 Move X0, [X0+2344]
	039 Call 0x1C17D08
	040 Move X1, X21
	041 Move X2, X20
	042 Move X3, X31
	043 Call String.Format, X0, X1, X2
	044 Move X1, X0
	045 Move X0, X19
	046 Call SmallXmlParser.Error, X0, X1
	047 Move X19, X0
	048 Move X0, 0xF15000
	049 Move X0, [X0+2352]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.String ReadUntil(System.Char until, System.Boolean handleReferences)

Disassembly:
	0x0320D078 CBZ X19, 0x320D098
	0x0320D07C MOV X0, X19
	0x0320D080 MOV X1, X21
	0x0320D084 MOV X2, X22
	0x0320D088 LDP X20, X19, [X31 + 0x20]
	0x0320D08C LDP X22, X21, [X31 + 0x10]
	0x0320D090 LDR X30, [X31], #0x30
	0x0320D094 B 0x320D214
	0x0320D098 BL 0x1C16F20
	0x0320D09C ADRP X0, 0xF14000
	0x0320D0A0 LDR X0, [X0 + 0x9F0]
	0x0320D0A4 BL 0x1C16D08
	0x0320D0A8 MOV X1, X0
	0x0320D0AC MOV X0, X20
	0x0320D0B0 BL 0x320BA7C
	0x0320D0B4 MOV X19, X0
	0x0320D0B8 ADRP X0, 0xF14000
	0x0320D0BC LDR X0, [X0 + 0x9F8]
	0x0320D0C0 BL 0x1C16D08
	0x0320D0C4 MOV X1, X0
	0x0320D0C8 MOV X0, X19
	0x0320D0CC BL 0x1C16DEC
	0x0320D0D0 STR X30, [X31 - 0x20]!
	0x0320D0D4 STP X20, X19, [X31 + 0x10]
	0x0320D0D8 MOV X19, X0
	0x0320D0DC LDR X0, [X0 + 0x18]
	0x0320D0E0 STRB W31, [X19 + 0x48]
	0x0320D0E4 CBZ X0, 0x320D148
	0x0320D0E8 LDR X8, [X0]
	0x0320D0EC LDP X9, X1, [X8 + 0x1B8]
	0x0320D0F0 BLR X9
	0x0320D0F4 CMP W0, 0x26
	0x0320D0F8 B.EQ 0x320D130
	0x0320D0FC ADDS W31, W0, 0x1
	0x0320D100 B.EQ 0x320D14C
	0x0320D104 CMP W0, 0x3C
	0x0320D108 B.EQ 0x320D14C
	0x0320D10C LDR X20, [X19 + 0x38]
	0x0320D110 MOV X0, X19
	0x0320D114 BL 0x320BF3C
	0x0320D118 CBZ X20, 0x320D148
	0x0320D11C MOV W1, W0
	0x0320D120 MOV X0, X20
	0x0320D124 MOV X2, X31
	0x0320D128 BL 0x3233D30
	0x0320D12C B 0x320D140
	0x0320D130 MOV X0, X19
	0x0320D134 BL 0x320BF3C
	0x0320D138 MOV X0, X19
	0x0320D13C BL 0x320C154
	0x0320D140 LDR X0, [X19 + 0x18]
	0x0320D144 CBNZ X0, 0x320D0E8
	0x0320D148 BL 0x1C16F20
	0x0320D14C LDP X20, X19, [X31 + 0x10]
	0x0320D150 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move W20, W2
	010 Move W21, W1
	011 Move X8, [X0]
	012 Move X9, [X8+440]
	013 Move X1, [X8+448]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move TEMP, X0
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {61}
	019 Move X0, X19
	020 Call SmallXmlParser.Read, X0
	021 And W8, W0, 0xFFFF
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W1, W0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {31}
	029 Move X0, X19
	030 Call SmallXmlParser.ReadReference, X0
	031 Move X0, [X19+56]
	032 Compare X0, 0
	033 JumpIfEqual {39}
	034 Move X2, X31
	035 Call StringBuilder.Append, X0, X1
	036 Move X0, [X19+24]
	037 Compare X0, 0
	038 JumpIfNotEqual {11}
	039 Call 0x1C17F20
	040 Move X0, [X19+56]
	041 Compare X0, 0
	042 JumpIfEqual {39}
	043 Move X8, [X0]
	044 Move X9, [X8+360]
	045 Move X1, [X8+368]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X19+56]
	048 Compare X8, 0
	049 JumpIfEqual {39}
	050 Move X19, X0
	051 Move X0, X8
	052 Move W1, W31
	053 Move X2, X31
	054 Call StringBuilder.set_Length, X0, X1
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0
	061 Move X0, X19
	062 Call SmallXmlParser.UnexpectedEndError, X0
	063 Move X19, X0
	064 Move X0, 0xF15000
	065 Move X0, [X0+2360]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.String ReadName()

Disassembly:
	0x0320D31C BL 0x1C16F20
	0x0320D320 STR X30, [X31 - 0x20]!
	0x0320D324 STP X20, X19, [X31 + 0x10]
	0x0320D328 ADRP X20, 0x11CF000
	0x0320D32C LDRB W8, [X20 + 0x295]
	0x0320D330 MOV X19, X0
	0x0320D334 TBNZ X8, 0x0, 0x320D34C
	0x0320D338 ADRP X0, 0xEE7000
	0x0320D33C LDR X0, [X0 + 0x1C8]
	0x0320D340 BL 0x1C16CF4
	0x0320D344 MOVZ W8, 0x1
	0x0320D348 STRB W8, [X20 + 0x295]
	0x0320D34C LDR X8, [X19 + 0x10]
	0x0320D350 CBZ X8, 0x320D364
	0x0320D354 LDR W0, [X8 + 0x18]
	0x0320D358 LDP X20, X19, [X31 + 0x10]
	0x0320D35C LDR X30, [X31], #0x20
	0x0320D360 RET
	0x0320D364 BL 0x1C16F20
	0x0320D368 STP X30, X21, [X31 - 0x20]!
	0x0320D36C STP X20, X19, [X31 + 0x10]
	0x0320D370 ADRP X21, 0x11CF000
	0x0320D374 LDRB W8, [X21 + 0x296]
	0x0320D378 MOV W19, W1
	0x0320D37C MOV X20, X0
	0x0320D380 TBNZ X8, 0x0, 0x320D398
	0x0320D384 ADRP X0, 0xF0E000
	0x0320D388 LDR X0, [X0 + 0xB58]
	0x0320D38C BL 0x1C16CF4
	0x0320D390 MOVZ W8, 0x1
	0x0320D394 STRB W8, [X21 + 0x296]
	0x0320D398 LDR X0, [X20 + 0x10]
	0x0320D39C CBZ X0, 0x320D3BC
	0x0320D3A0 ADRP X8, 0xF0E000
	0x0320D3A4 LDR X8, [X8 + 0xB58]
	0x0320D3A8 MOV W1, W19
	0x0320D3AC LDP X20, X19, [X31 + 0x10]
	0x0320D3B0 LDR X2, [X8]
	0x0320D3B4 LDP X30, X21, [X31], #0x20
	0x0320D3B8 B 0x301BCCC
	0x0320D3BC BL 0x1C16F20
	0x0320D3C0 STP X30, X21, [X31 - 0x20]!
	0x0320D3C4 STP X20, X19, [X31 + 0x10]
	0x0320D3C8 ADRP X21, 0x11CF000
	0x0320D3CC LDRB W8, [X21 + 0x297]
	0x0320D3D0 MOV W19, W1
	0x0320D3D4 MOV X20, X0
	0x0320D3D8 TBNZ X8, 0x0, 0x320D3F0
	0x0320D3DC ADRP X0, 0xF0E000
	0x0320D3E0 LDR X0, [X0 + 0xB58]
	0x0320D3E4 BL 0x1C16CF4
	0x0320D3E8 MOVZ W8, 0x1
	0x0320D3EC STRB W8, [X21 + 0x297]
	0x0320D3F0 LDR X0, [X20 + 0x18]
	0x0320D3F4 CBZ X0, 0x320D414
	0x0320D3F8 ADRP X8, 0xF0E000
	0x0320D3FC LDR X8, [X8 + 0xB58]
	0x0320D400 MOV W1, W19
	0x0320D404 LDP X20, X19, [X31 + 0x10]
	0x0320D408 LDR X2, [X8]
	0x0320D40C LDP X30, X21, [X31], #0x20
	0x0320D410 B 0x301BCCC
	0x0320D414 BL 0x1C16F20
	0x0320D418 STR X30, [X31 - 0x30]!
	0x0320D41C STP X22, X21, [X31 + 0x10]
	0x0320D420 STP X20, X19, [X31 + 0x20]
	0x0320D424 ADRP X21, 0x11CF000
	0x0320D428 LDRB W8, [X21 + 0x298]
	0x0320D42C MOV X19, X1
	0x0320D430 MOV X20, X0
	0x0320D434 TBNZ X8, 0x0, 0x320D458
	0x0320D438 ADRP X0, 0xEE7000
	0x0320D43C LDR X0, [X0 + 0x1C8]
	0x0320D440 BL 0x1C16CF4
	0x0320D444 ADRP X0, 0xF0E000
	0x0320D448 LDR X0, [X0 + 0xB58]
	0x0320D44C BL 0x1C16CF4
	0x0320D450 MOVZ W8, 0x1
	0x0320D454 STRB W8, [X21 + 0x298]
	0x0320D458 LDR X0, [X20 + 0x10]
	0x0320D45C CBZ X0, 0x320D4A0
	0x0320D460 ADRP X22, 0xF0E000
	0x0320D464 LDR X22, [X22 + 0xB58]
	0x0320D468 MOV W21, W31
	0x0320D46C LDR W8, [X0 + 0x18]
	0x0320D470 CMP W21, W8
	0x0320D474 B.GE 0x320D4A4
	0x0320D478 LDR X2, [X22]
	0x0320D47C MOV W1, W21
	0x0320D480 BL 0x301BCCC
	0x0320D484 MOV X1, X19
	0x0320D488 MOV X2, X31
	0x0320D48C BL 0x321BA08
	0x0320D490 TBNZ X0, 0x0, 0x320D4B8
	0x0320D494 LDR X0, [X20 + 0x10]
	0x0320D498 ADD W21, W21, 0x1
	0x0320D49C CBNZ X0, 0x320D46C
	0x0320D4A0 BL 0x1C16F20
	0x0320D4A4 LDP X20, X19, [X31 + 0x20]
	0x0320D4A8 LDP X22, X21, [X31 + 0x10]
	0x0320D4AC MOV X0, X31
	0x0320D4B0 LDR X30, [X31], #0x30
	0x0320D4B4 RET
	0x0320D4B8 LDR X0, [X20 + 0x18]
	0x0320D4BC CBZ X0, 0x320D4A0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x11D0000
	009 Move W8, [X20+655]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEF0000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+655], W8
	020 Move X0, [X19+24]
	021 Compare X0, 0
	022 JumpIfEqual {122}
	023 Move X8, [X0]
	024 Move X9, [X8+440]
	025 Move X1, [X8+448]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {124}
	031 Move X0, [X19+24]
	032 Compare X0, 0
	033 JumpIfEqual {122}
	034 Move X8, [X0]
	035 Move X9, [X8+440]
	036 Move X1, [X8+448]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W2, 1
	039 Move W1, W0
	040 Call SmallXmlParser.IsNameChar, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {124}
	045 Move X0, [X19+24]
	046 Compare X0, 0
	047 JumpIfEqual {122}
	048 Move X8, [X0]
	049 Move X9, [X8+440]
	050 Move X1, [X8+448]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfEqual {126}
	056 Move X24, 0xEF0000
	057 Move X24, [X24+2264]
	058 Move W22, W0
	059 Move W21, W31
	060 Move W20, W31
	061 Move W1, W22
	062 Move W2, W31
	063 Call SmallXmlParser.IsNameChar, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {106}
	068 Move X23, [X19+64]
	069 Compare X23, 0
	070 JumpIfEqual {122}
	071 Move W8, [X23+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X24]
	074 Move W1, W21
	075 Call 0x1C17D6C
	076 Move X8, [X19+64]
	077 Move X23, X0
	078 Move X1, X23
	079 Move W2, W20
	080 Move X0, X8
	081 Move X3, X31
	082 Call Array.Copy, X0, X1, X2
	083 Move [X19+64], X23
	084 Compare X23, 0
	085 JumpIfEqual {122}
	086 Move W8, [X23+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X8, X23, W20
	089 Move X0, X19
	090 NotImplemented "Instruction STRH not yet implemented."
	091 Call SmallXmlParser.Read, X0
	092 Move X0, [X19+24]
	093 Compare X0, 0
	094 JumpIfEqual {122}
	095 Move X8, [X0]
	096 Add W20, W20, 1
	097 Move X9, [X8+440]
	098 Move X1, [X8+448]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move W22, W0
	101 Add W21, W21, 2
	102 Move TEMP, X0
	103 And TEMP, TEMP, -2147483648
	104 Compare TEMP, -2147483648
	105 JumpIfNotEqual {61}
	106 Compare W20, 0
	107 JumpIfEqual {126}
	108 Move X1, [X19+64]
	109 Move W3, W20
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X0, X31
	117 Move W2, W31
	118 Move X4, X31
	119 Move X30, [X31+64]
	120 Call String.CreateString, X0, X1, X2, X3
	121 Return X0
	122 Call 0x1C17F20
	123 Call 0x1C17F28
	124 Move X0, 0xF15000
	125 Move X0, [X0+2424]
	126 Move X0, 0xF15000
	127 Move X0, [X0+2432]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X19
	131 Call SmallXmlParser.Error, X0, X1
	132 Move X19, X0
	133 Move X0, 0xF15000
	134 Move X0, [X0+2440]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Call 0x1C17DEC

Method: System.Void Parse(System.IO.TextReader input, Mono.Xml.SmallXmlParser/IContentHandler handler)

Disassembly:
	0x0320C488 B 0x320C494
	0x0320C48C ADRP X0, 0xF15000
	0x0320C490 LDR X0, [X0 + 0x980]
	0x0320C494 BL 0x1C16D08
	0x0320C498 MOV X1, X0
	0x0320C49C MOV X0, X19
	0x0320C4A0 BL 0x320BA7C
	0x0320C4A4 MOV X19, X0
	0x0320C4A8 ADRP X0, 0xF15000
	0x0320C4AC LDR X0, [X0 + 0x988]
	0x0320C4B0 BL 0x1C16D08
	0x0320C4B4 MOV X1, X0
	0x0320C4B8 MOV X0, X19
	0x0320C4BC BL 0x1C16DEC
	0x0320C4C0 STP X30, X23, [X31 - 0x30]!
	0x0320C4C4 STP X22, X21, [X31 + 0x10]
	0x0320C4C8 STP X20, X19, [X31 + 0x20]
	0x0320C4CC ADRP X20, 0x11D0000
	0x0320C4D0 LDRB W8, [X20 + 0x291]
	0x0320C4D4 MOV X19, X0
	0x0320C4D8 TBNZ X8, 0x0, 0x320C514
	0x0320C4DC ADRP X0, 0xF15000
	0x0320C4E0 LDR X0, [X0 + 0x8D8]
	0x0320C4E4 BL 0x1C16CF4
	0x0320C4E8 ADRP X0, 0xEE9000
	0x0320C4EC LDR X0, [X0 + 0x278]
	0x0320C4F0 BL 0x1C16CF4
	0x0320C4F4 ADRP X0, 0xF15000
	0x0320C4F8 LDR X0, [X0 + 0x990]
	0x0320C4FC BL 0x1C16CF4
	0x0320C500 ADRP X0, 0xF15000
	0x0320C504 LDR X0, [X0 + 0x998]
	0x0320C508 BL 0x1C16CF4
	0x0320C50C MOVZ W8, 0x1
	0x0320C510 STRB W8, [X20 + 0x291]
	0x0320C514 LDR X0, [X19 + 0x18]
	0x0320C518 CBZ X0, 0x320C9A8
	0x0320C51C LDR X8, [X0]
	0x0320C520 LDP X9, X1, [X8 + 0x1B8]
	0x0320C524 BLR X9
	0x0320C528 CMP W0, 0x20
	0x0320C52C B.HI 0x320C570
	0x0320C530 MOV W8, W0
	0x0320C534 MOVZ W9, 0x1
	0x0320C538 LSLV X8, X9, X8
	0x0320C53C MOVZ X9, 0x2600
	0x0320C540 MOVK X9, 0x1
	0x0320C544 ANDS X31, X8, X9, 0x0
	0x0320C548 B.EQ 0x320C570
	0x0320C54C LDR X0, [X19 + 0x38]
	0x0320C550 CBZ X0, 0x320C9A8
	0x0320C554 MOV X1, X31
	0x0320C558 BL 0x323260C
	0x0320C55C CBNZ W0, 0x320C568
	0x0320C560 MOVZ W8, 0x1
	0x0320C564 STRB W8, [X19 + 0x48]
	0x0320C568 MOV X0, X19
	0x0320C56C BL 0x320BE7C
	0x0320C570 LDR X0, [X19 + 0x18]
	0x0320C574 CBZ X0, 0x320C9A8
	0x0320C578 LDR X8, [X0]
	0x0320C57C LDP X9, X1, [X8 + 0x1B8]
	0x0320C580 BLR X9
	0x0320C584 CMP W0, 0x3C
	0x0320C588 B.NE 0x320C62C
	0x0320C58C MOV X0, X19
	0x0320C590 BL 0x320BF3C
	0x0320C594 LDR X0, [X19 + 0x18]
	0x0320C598 CBZ X0, 0x320C9A8
	0x0320C59C LDR X8, [X0]
	0x0320C5A0 LDP X9, X1, [X8 + 0x1B8]
	0x0320C5A4 BLR X9
	0x0320C5A8 CMP W0, 0x3F
	0x0320C5AC B.EQ 0x320C640
	0x0320C5B0 CMP W0, 0x2F
	0x0320C5B4 B.EQ 0x320C6E8
	0x0320C5B8 CMP W0, 0x21
	0x0320C5BC B.NE 0x320C7D4
	0x0320C5C0 MOV X0, X19
	0x0320C5C4 BL 0x320BF3C
	0x0320C5C8 LDR X0, [X19 + 0x18]
	0x0320C5CC CBZ X0, 0x320C9A8
	0x0320C5D0 LDR X8, [X0]
	0x0320C5D4 LDP X9, X1, [X8 + 0x1B8]
	0x0320C5D8 BLR X9
	0x0320C5DC CMP W0, 0x5B
	0x0320C5E0 B.NE 0x320C8EC
	0x0320C5E4 MOV X0, X19
	0x0320C5E8 BL 0x320BF3C
	0x0320C5EC MOV X0, X19
	0x0320C5F0 BL 0x320C31C
	0x0320C5F4 ADRP X8, 0xF15000
	0x0320C5F8 LDR X8, [X8 + 0x998]
	0x0320C5FC MOV X2, X31
	0x0320C600 LDR X1, [X8]
	0x0320C604 BL 0x3226EF8
	0x0320C608 TBNZ X0, 0x0, 0x320CB24
	0x0320C60C MOVZ W1, 0x5B
	0x0320C610 MOV X0, X19
	0x0320C614 BL 0x320BFB8
	0x0320C618 MOV X0, X19
	0x0320C61C LDP X20, X19, [X31 + 0x20]
	0x0320C620 LDP X22, X21, [X31 + 0x10]
	0x0320C624 LDP X30, X23, [X31], #0x30
	0x0320C628 B 0x320CDEC
	0x0320C62C MOV X0, X19
	0x0320C630 LDP X20, X19, [X31 + 0x20]
	0x0320C634 LDP X22, X21, [X31 + 0x10]
	0x0320C638 LDP X30, X23, [X31], #0x30
	0x0320C63C B 0x320D0D0
	0x0320C640 MOV X0, X19
	0x0320C644 BL 0x320CB9C
	0x0320C648 MOV X0, X19
	0x0320C64C BL 0x320BF3C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11D1000
	007 Move W8, [X22+656]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF16000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+656], W8
	020 Move [X19+16], X20
	021 Move [X19+24], X21
	022 Compare X20, 0
	023 JumpIfEqual {102}
	024 Move X21, 0xF16000
	025 Move X8, [X20]
	026 Move X21, [X21+2264]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X21]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X20
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X20
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, [X19+24]
	049 Compare X0, 0
	050 JumpIfEqual {102}
	051 Move X8, [X0]
	052 Move X9, [X8+440]
	053 Move X1, [X8+448]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {61}
	059 Move X0, X19
	060 Call SmallXmlParser.ReadContent, X0
	061 Move X0, X19
	062 Call SmallXmlParser.HandleBufferedContent, X0
	063 Move X0, [X19+32]
	064 Compare X0, 0
	065 JumpIfEqual {102}
	066 Move X8, [X0]
	067 Move X9, [X8+472]
	068 Move X1, [X8+480]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X20]
	072 Move X1, [X21]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 1
	083 Move X0, X20
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X2, [X0+8]
	091 Move X0, X20
	092 Move X1, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, X19
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Call SmallXmlParser.Cleanup, X0
	101 Return 
	102 Call 0x1C17F20
	103 Move X20, [X19+32]
	104 Move X0, X20
	105 Call 0x19913C0
	106 Move X8, [X20]
	107 Move X0, X20
	108 Move X9, [X8+584]
	109 Move X1, [X8+592]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X20, X0
	112 Move X0, 0xF16000
	113 Move X0, [X0+2272]
	114 Call 0x1C17D08
	115 Move X1, X20
	116 Move X2, X31
	117 Call String.Format, X0, X1
	118 Move X1, X0
	119 Move X0, X19
	120 Call SmallXmlParser.Error, X0, X1
	121 Move X19, X0
	122 Move X0, 0xF16000
	123 Move X0, [X0+2280]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Call 0x1C17DEC

Method: System.Void Cleanup()

Disassembly:
	0x0320DCD4 ADD W8, W8, 0x2
	0x0320DCD8 LDRH W8, [X24, W8, SXTW]
	0x0320DCDC ADD W26, W26, 0x1
	0x0320DCE0 CBNZ W8, 0x320DCD0
	0x0320DCE4 ADRP X8, 0xEEF000
	0x0320DCE8 LDR X8, [X8 + 0x8D8]
	0x0320DCEC MOV W1, W26
	0x0320DCF0 LDR X0, [X8]
	0x0320DCF4 BL 0x1C16D6C
	0x0320DCF8 MOV X21, X0
	0x0320DCFC ADD X0, X24, W25, 0x1, SXTW
	0x0320DD00 MOV X1, X31
	0x0320DD04 BL 0x33C693C
	0x0320DD08 ADRP X8, 0xF0E000
	0x0320DD0C LDR X8, [X8 + 0x850]
	0x0320DD10 MOV X28, X0
	0x0320DD14 LDR X8, [X8]
	0x0320DD18 LDR W9, [X8 + 0xE0]
	0x0320DD1C CBNZ W9, 0x320DD28
	0x0320DD20 MOV X0, X8
	0x0320DD24 BL 0x1C16DFC
	0x0320DD28 ADD W8, W27, W26
	0x0320DD2C MOV X0, X28
	0x0320DD30 MOV X1, X21
	0x0320DD34 MOV W2, W31
	0x0320DD38 MOV W3, W26
	0x0320DD3C MOV X4, X31
	0x0320DD40 ADD W25, W8, 0x2
	0x0320DD44 BL 0x32C0D80
	0x0320DD48 MOVN W3, 0x0
	0x0320DD4C MOV W27, W25

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, -41021440
	004 Move X19, X0
	005 Move V0, [X8+3776]
	006 Move X0, [X0+32]
	007 Move [X19+16], X31
	008 Move [X19+24], X31
	009 Move [X19+88], D0
	010 Compare X0, 0
	011 JumpIfEqual {38}
	012 Move X8, [X0]
	013 Move X9, [X8+520]
	014 Move X1, [X8+528]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {38}
	019 Move X8, [X0]
	020 Move X9, [X8+520]
	021 Move X1, [X8+528]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X19+80]
	024 Compare X0, 0
	025 JumpIfEqual {38}
	026 Call AttrListImpl.Clear, X0
	027 Move X0, [X19+56]
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move W1, W31
	031 Move X2, X31
	032 Call StringBuilder.set_Length, X0, X1
	033 Move [X19+48], X31
	034 Move [X19+72], W31
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void ReadContent()

Disassembly:
	0x0320D4C0 LDR X2, [X22]
	0x0320D4C4 MOV W1, W21
	0x0320D4C8 LDP X20, X19, [X31 + 0x20]
	0x0320D4CC LDP X22, X21, [X31 + 0x10]
	0x0320D4D0 LDR X30, [X31], #0x30
	0x0320D4D4 B 0x301BCCC
	0x0320D4D8 STR X30, [X31 - 0x20]!
	0x0320D4DC STP X20, X19, [X31 + 0x10]
	0x0320D4E0 ADRP X20, 0x11CF000
	0x0320D4E4 LDRB W8, [X20 + 0x299]
	0x0320D4E8 MOV X19, X0
	0x0320D4EC TBNZ X8, 0x0, 0x320D504
	0x0320D4F0 ADRP X0, 0xEE8000
	0x0320D4F4 LDR X0, [X0 + 0xE78]
	0x0320D4F8 BL 0x1C16CF4
	0x0320D4FC MOVZ W8, 0x1
	0x0320D500 STRB W8, [X20 + 0x299]
	0x0320D504 LDR X0, [X19 + 0x10]
	0x0320D508 CBZ X0, 0x320D524
	0x0320D50C ADRP X8, 0xEE8000
	0x0320D510 LDR X8, [X8 + 0xE78]
	0x0320D514 LDP X20, X19, [X31 + 0x10]
	0x0320D518 LDR X1, [X8]
	0x0320D51C LDR X30, [X31], #0x20
	0x0320D520 B 0x301DDC4
	0x0320D524 BL 0x1C16F20
	0x0320D528 STR X30, [X31 - 0x20]!
	0x0320D52C STP X20, X19, [X31 + 0x10]
	0x0320D530 ADRP X20, 0x11CF000
	0x0320D534 LDRB W8, [X20 + 0x29A]
	0x0320D538 MOV X19, X0
	0x0320D53C TBNZ X8, 0x0, 0x320D554
	0x0320D540 ADRP X0, 0xEE8000
	0x0320D544 LDR X0, [X0 + 0xE78]
	0x0320D548 BL 0x1C16CF4
	0x0320D54C MOVZ W8, 0x1
	0x0320D550 STRB W8, [X20 + 0x29A]
	0x0320D554 LDR X0, [X19 + 0x18]
	0x0320D558 CBZ X0, 0x320D574
	0x0320D55C ADRP X8, 0xEE8000
	0x0320D560 LDR X8, [X8 + 0xE78]
	0x0320D564 LDP X20, X19, [X31 + 0x10]
	0x0320D568 LDR X1, [X8]
	0x0320D56C LDR X30, [X31], #0x20
	0x0320D570 B 0x301DDC4
	0x0320D574 BL 0x1C16F20
	0x0320D578 MOV X1, X31
	0x0320D57C B 0x33A51F0
	0x0320D580 STR X30, [X31 - 0x40]!
	0x0320D584 STP X24, X23, [X31 + 0x10]
	0x0320D588 STP X22, X21, [X31 + 0x20]
	0x0320D58C STP X20, X19, [X31 + 0x30]
	0x0320D590 ADRP X24, 0x11CF000
	0x0320D594 LDRB W8, [X24 + 0x29F]
	0x0320D598 MOV W22, W4
	0x0320D59C MOV W23, W3
	0x0320D5A0 MOV X20, X2
	0x0320D5A4 MOV X21, X1
	0x0320D5A8 MOV X19, X0
	0x0320D5AC TBNZ X8, 0x0, 0x320D5C4
	0x0320D5B0 ADRP X0, 0xF14000
	0x0320D5B4 LDR X0, [X0 + 0xA00]
	0x0320D5B8 BL 0x1C16CF4
	0x0320D5BC MOVZ W8, 0x1
	0x0320D5C0 STRB W8, [X24 + 0x29F]
	0x0320D5C4 MOV X0, X19
	0x0320D5C8 MOV X1, X31
	0x0320D5CC BL 0x33BDD8C
	0x0320D5D0 STP W23, W22, [X19 + 0x1C]
	0x0320D5D4 CBZ X21, 0x320D698
	0x0320D5D8 ADRP X8, 0xF14000
	0x0320D5DC LDR X8, [X8 + 0xA00]
	0x0320D5E0 LDR W1, [X21 + 0x18]
	0x0320D5E4 LDR X0, [X8]
	0x0320D5E8 BL 0x1C16D6C
	0x0320D5EC STR X0, [X19 + 0x10]
	0x0320D5F0 CBZ X0, 0x320D698
	0x0320D5F4 MOV X8, X31
	0x0320D5F8 MOV X9, X31
	0x0320D5FC ADD X10, X21, 0x20
	0x0320D600 ADD X11, X20, 0x20
	0x0320D604 MOVZ W12, 0x14
	0x0320D608 LDR X13, [X0 + 0x18]
	0x0320D60C AND X14, X13, 0x0
	0x0320D610 CMP X9, W14, SXTW
	0x0320D614 B.GE 0x320D69C
	0x0320D618 LDR W14, [X21 + 0x18]
	0x0320D61C CMP X9, X14
	0x0320D620 B.CS 0x320D6D4
	0x0320D624 CBZ X20, 0x320D698
	0x0320D628 LDR W14, [X20 + 0x18]
	0x0320D62C CMP X9, X14
	0x0320D630 B.CS 0x320D6D4
	0x0320D634 LDR W14, [X10, X9, LSL #2]
	0x0320D638 LDR W15, [X11, X9, LSL #2]
	0x0320D63C CBZ X9, 0x320D660
	0x0320D640 SUB W16, W9, 0x1
	0x0320D644 CMP W16, W13
	0x0320D648 B.CS 0x320D6D4
	0x0320D64C ADD X16, X0, X8
	0x0320D650 LDP W16, W17, [X16 + 0x14]
	0x0320D654 ADD W16, W16, W17
	0x0320D658 MOV W17, W9
	0x0320D65C B 0x320D668
	0x0320D660 MOV W17, W31
	0x0320D664 MOV W16, W31
	0x0320D668 CMP W17, W13
	0x0320D66C B.CS 0x320D6D4
	0x0320D670 SUB W13, W15, W14
	0x0320D674 SMADDL X17, X17, X12, X0
	0x0320D678 ADD W0, W16, W13
	0x0320D67C STP W14, W15, [X17 + 0x20]
	0x0320D680 STP W13, W16, [X17 + 0x28]
	0x0320D684 STR W0, [X17 + 0x30]
	0x0320D688 LDR X0, [X19 + 0x10]
	0x0320D68C ADD X9, X9, 0x1
	0x0320D690 ADD X8, X8, 0x14
	0x0320D694 CBNZ X0, 0x320D608
	0x0320D698 BL 0x1C16F20
	0x0320D69C CMP W14, 0x1
	0x0320D6A0 B.LT 0x320D6C0
	0x0320D6A4 LDR W8, [X19 + 0x18]
	0x0320D6A8 ADD X9, X0, 0x28
	0x0320D6AC LDR W10, [X9], #0x14
	0x0320D6B0 SUBS X14, X14, 0x1
	0x0320D6B4 ADD W8, W10, W8
	0x0320D6B8 B.NE 0x320D6AC
	0x0320D6BC STR W8, [X19 + 0x18]
	0x0320D6C0 LDP X20, X19, [X31 + 0x30]
	0x0320D6C4 LDP X22, X21, [X31 + 0x20]
	0x0320D6C8 LDP X24, X23, [X31 + 0x10]
	0x0320D6CC LDR X30, [X31], #0x40
	0x0320D6D0 RET
	0x0320D6D4 BL 0x1C16F28
	0x0320D6D8 SUB W8, W2, W1
	0x0320D6DC STP W8, W3, [X0 + 0x8]
	0x0320D6E0 ADD W8, W8, W3
	0x0320D6E4 STP W1, W2, [X0]
	0x0320D6E8 STR W8, [X0 + 0x10]
	0x0320D6EC RET
	0x0320D6F0 STR X30, [X31 - 0x10]!
	0x0320D6F4 LDR X8, [X0 + 0x10]
	0x0320D6F8 CBZ X8, 0x320D770
	0x0320D6FC LDR W9, [X8 + 0x18]
	0x0320D700 CMP W9, 0x1
	0x0320D704 B.LT 0x320D748
	0x0320D708 MOV W10, W31
	0x0320D70C MOVZ W11, 0x14
	0x0320D710 CMP W10, W9
	0x0320D714 B.CS 0x320D76C
	0x0320D718 SMADDL X12, X10, X11, X8
	0x0320D71C LDR W12, [X12 + 0x20]
	0x0320D720 CMP W12, W1
	0x0320D724 B.GT 0x320D748
	0x0320D728 SXTW X13, W10
	0x0320D72C MADD X14, X13, X11, X8
	0x0320D730 LDR W14, [X14 + 0x24]
	0x0320D734 CMP W14, W1
	0x0320D738 B.GT 0x320D750
	0x0320D73C ADD W10, W10, 0x1
	0x0320D740 CMP W10, W9
	0x0320D744 B.LT 0x320D710
	0x0320D748 LDR W0, [X0 + 0x1C]
	0x0320D74C B 0x320D764
	0x0320D750 MOVZ W9, 0x14
	0x0320D754 MADD X8, X13, X9, X8
	0x0320D758 LDR W8, [X8 + 0x2C]
	0x0320D75C SUB W9, W1, W12
	0x0320D760 ADD W0, W9, W8
	0x0320D764 LDR X30, [X31], #0x10
	0x0320D768 RET
	0x0320D76C BL 0x1C16F28
	0x0320D770 BL 0x1C16F20
	0x0320D774 STP X30, X23, [X31 - 0x30]!
	0x0320D778 STP X22, X21, [X31 + 0x10]
	0x0320D77C STP X20, X19, [X31 + 0x20]
	0x0320D780 MOV W21, W1
	0x0320D784 MOV X1, X31
	0x0320D788 MOV W19, W3
	0x0320D78C MOV W20, W2
	0x0320D790 MOV X22, X0
	0x0320D794 AND W23, W4, 0x1
	0x0320D798 BL 0x33BDD8C
	0x0320D79C STP W21, W20, [X22 + 0x10]
	0x0320D7A0 STR W19, [X22 + 0x18]
	0x0320D7A4 STRB W23, [X22 + 0x1C]
	0x0320D7A8 LDP X20, X19, [X31 + 0x20]
	0x0320D7AC LDP X22, X21, [X31 + 0x10]
	0x0320D7B0 LDP X30, X23, [X31], #0x30
	0x0320D7B4 RET
	0x0320D7B8 STP X30, X23, [X31 - 0x30]!
	0x0320D7BC STP X22, X21, [X31 + 0x10]
	0x0320D7C0 STP X20, X19, [X31 + 0x20]
	0x0320D7C4 MOV W22, W1
	0x0320D7C8 MOV X1, X31
	0x0320D7CC MOV X19, X4
	0x0320D7D0 MOV X20, X3
	0x0320D7D4 MOV X21, X2
	0x0320D7D8 MOV X23, X0
	0x0320D7DC BL 0x33BDD8C
	0x0320D7E0 STR W22, [X23 + 0x10]
	0x0320D7E4 STP X21, X20, [X23 + 0x18]
	0x0320D7E8 STR X19, [X23 + 0x28]
	0x0320D7EC LDP X20, X19, [X31 + 0x20]
	0x0320D7F0 LDP X22, X21, [X31 + 0x10]
	0x0320D7F4 LDP X30, X23, [X31], #0x30
	0x0320D7F8 RET
	0x0320D7FC STR X30, [X31 - 0x10]!
	0x0320D800 CBZ X1, 0x320D88C
	0x0320D804 CBZ X2, 0x320D88C
	0x0320D808 LDR X8, [X1 + 0x18]
	0x0320D80C CBZ X8, 0x320D88C
	0x0320D810 LDR X9, [X2 + 0x18]
	0x0320D814 CBZ X9, 0x320D88C
	0x0320D818 LDR W10, [X8 + 0x18]
	0x0320D81C LDR W11, [X9 + 0x18]
	0x0320D820 CMP W10, W11
	0x0320D824 CSEL W12, W11, W10, GT
	0x0320D828 CMP W12, 0x1
	0x0320D82C B.LT 0x320D86C
	0x0320D830 MOV W13, W31
	0x0320D834 CMP W10, W13
	0x0320D838 B.EQ 0x320D888
	0x0320D83C SXTW X13, W13
	0x0320D840 CMP W11, W13
	0x0320D844 B.EQ 0x320D888
	0x0320D848 ADD X14, X8, X13, 0x1, LSL
	0x0320D84C ADD X15, X9, X13, 0x1, LSL
	0x0320D850 LDRH W14, [X14 + 0x20]
	0x0320D854 LDRH W15, [X15 + 0x20]
	0x0320D858 SUBS W0, W14, W15
	0x0320D85C B.NE 0x320D880
	0x0320D860 ADD W13, W13, 0x1
	0x0320D864 CMP W12, W13
	0x0320D868 B.NE 0x320D834
	0x0320D86C SUBS W0, W10, W11
	0x0320D870 B.NE 0x320D880
	0x0320D874 LDR W8, [X1 + 0x10]
	0x0320D878 LDR W9, [X2 + 0x10]
	0x0320D87C SUB W0, W8, W9
	0x0320D880 LDR X30, [X31], #0x10
	0x0320D884 RET
	0x0320D888 BL 0x1C16F28
	0x0320D88C BL 0x1C16F20
	0x0320D890 MOV X1, X31
	0x0320D894 B 0x33BDD8C
	0x0320D898 STR X30, [X31 - 0x20]!
	0x0320D89C STP X20, X19, [X31 + 0x10]
	0x0320D8A0 ADRP X19, 0x11CF000
	0x0320D8A4 ADRP X20, 0xF14000
	0x0320D8A8 LDRB W8, [X19 + 0x2A0]
	0x0320D8AC LDR X20, [X20 + 0xA08]
	0x0320D8B0 TBNZ X8, 0x0, 0x320D8C8
	0x0320D8B4 ADRP X0, 0xF14000
	0x0320D8B8 LDR X0, [X0 + 0xA08]
	0x0320D8BC BL 0x1C16CF4
	0x0320D8C0 MOVZ W8, 0x1
	0x0320D8C4 STRB W8, [X19 + 0x2A0]
	0x0320D8C8 LDR X0, [X20]
	0x0320D8CC BL 0x1C16F10
	0x0320D8D0 MOV X1, X31
	0x0320D8D4 MOV X19, X0
	0x0320D8D8 BL 0x33BDD8C
	0x0320D8DC LDR X8, [X20]
	0x0320D8E0 LDR X8, [X8 + 0xB8]
	0x0320D8E4 STR X19, [X8]
	0x0320D8E8 LDP X20, X19, [X31 + 0x10]
	0x0320D8EC LDR X30, [X31], #0x20
	0x0320D8F0 RET
	0x0320D8F4 STP X30, X21, [X31 - 0x20]!
	0x0320D8F8 STP X20, X19, [X31 + 0x10]
	0x0320D8FC MOV W20, W1
	0x0320D900 MOV X1, X31
	0x0320D904 MOV W19, W2
	0x0320D908 MOV X21, X0
	0x0320D90C BL 0x33BDD8C
	0x0320D910 STRB W20, [X21 + 0x10]
	0x0320D914 STRB W19, [X21 + 0x11]
	0x0320D918 LDP X20, X19, [X31 + 0x10]
	0x0320D91C LDP X30, X21, [X31], #0x20
	0x0320D920 RET
	0x0320D924 STR X30, [X31 - 0x30]!
	0x0320D928 STP X22, X21, [X31 + 0x10]
	0x0320D92C STP X20, X19, [X31 + 0x20]
	0x0320D930 ADRP X21, 0x11CF000
	0x0320D934 ADRP X20, 0xF14000
	0x0320D938 LDRB W8, [X21 + 0x2A1]
	0x0320D93C LDR X20, [X20 + 0xA10]
	0x0320D940 MOV W19, W0
	0x0320D944 TBNZ X8, 0x0, 0x320D95C
	0x0320D948 ADRP X0, 0xF14000
	0x0320D94C LDR X0, [X0 + 0xA10]
	0x0320D950 BL 0x1C16CF4
	0x0320D954 MOVZ W8, 0x1
	0x0320D958 STRB W8, [X21 + 0x2A1]
	0x0320D95C LDR X0, [X20]
	0x0320D960 MOV W21, W31
	0x0320D964 LDR W8, [X0 + 0xE0]
	0x0320D968 CBNZ W8, 0x320D974
	0x0320D96C BL 0x1C16DFC
	0x0320D970 LDR X0, [X20]
	0x0320D974 LDR X8, [X0 + 0xB8]
	0x0320D978 LDR X8, [X8 + 0x80]
	0x0320D97C CBZ X8, 0x320DA20
	0x0320D980 LDR W8, [X8 + 0x18]
	0x0320D984 CMP W21, W8
	0x0320D988 B.GE 0x320D9D8
	0x0320D98C LDR W8, [X0 + 0xE0]
	0x0320D990 CBNZ W8, 0x320D99C
	0x0320D994 BL 0x1C16DFC
	0x0320D998 LDR X0, [X20]
	0x0320D99C LDR X8, [X0 + 0xB8]
	0x0320D9A0 LDR X8, [X8 + 0x80]
	0x0320D9A4 CBZ X8, 0x320DA20
	0x0320D9A8 LDR W9, [X8 + 0x18]
	0x0320D9AC CMP W21, W9
	0x0320D9B0 B.CS 0x320DA24
	0x0320D9B4 SXTW X22, W21
	0x0320D9B8 ADD X9, X8, X22, 0x3, LSL
	0x0320D9BC LDR X9, [X9 + 0x20]
	0x0320D9C0 CBZ X9, 0x320DA20
	0x0320D9C4 LDR W9, [X9 + 0x10]
	0x0320D9C8 CMP W9, W19
	0x0320D9CC B.EQ 0x320D9E0
	0x0320D9D0 ADD W21, W21, 0x1
	0x0320D9D4 B 0x320D964
	0x0320D9D8 MOV X0, X31
	0x0320D9DC B 0x320DA10
	0x0320D9E0 LDR W9, [X0 + 0xE0]
	0x0320D9E4 CBNZ W9, 0x320D9FC
	0x0320D9E8 BL 0x1C16DFC
	0x0320D9EC LDR X8, [X20]
	0x0320D9F0 LDR X8, [X8 + 0xB8]
	0x0320D9F4 LDR X8, [X8 + 0x80]
	0x0320D9F8 CBZ X8, 0x320DA20
	0x0320D9FC LDR W9, [X8 + 0x18]
	0x0320DA00 CMP W21, W9
	0x0320DA04 B.CS 0x320DA24
	0x0320DA08 ADD X8, X8, X22, 0x3, LSL
	0x0320DA0C LDR X0, [X8 + 0x20]
	0x0320DA10 LDP X20, X19, [X31 + 0x20]
	0x0320DA14 LDP X22, X21, [X31 + 0x10]
	0x0320DA18 LDR X30, [X31], #0x30
	0x0320DA1C RET
	0x0320DA20 BL 0x1C16F20
	0x0320DA24 BL 0x1C16F28
	0x0320DA28 SUB X31, X31, 0x90
	0x0320DA2C STP X29, X30, [X31 + 0x30]
	0x0320DA30 STP X28, X27, [X31 + 0x40]
	0x0320DA34 STP X26, X25, [X31 + 0x50]
	0x0320DA38 STP X24, X23, [X31 + 0x60]
	0x0320DA3C STP X22, X21, [X31 + 0x70]
	0x0320DA40 STP X20, X19, [X31 + 0x80]
	0x0320DA44 STP X2, X3, [X31 + 0x10]
	0x0320DA48 STR X0, [X31 + 0x8]
	0x0320DA4C ADRP X23, 0x11CF000
	0x0320DA50 ADRP X24, 0xF14000
	0x0320DA54 ADRP X22, 0xF14000
	0x0320DA58 ADRP X21, 0xF14000
	0x0320DA5C ADRP X20, 0xF14000
	0x0320DA60 ADRP X19, 0xF14000
	0x0320DA64 LDRB W8, [X23 + 0x2A2]
	0x0320DA68 LDR X24, [X24 + 0xA18]
	0x0320DA6C LDR X22, [X22 + 0xA20]
	0x0320DA70 LDR X21, [X21 + 0xA28]
	0x0320DA74 LDR X20, [X20 + 0xA30]
	0x0320DA78 LDR X19, [X19 + 0xA10]
	0x0320DA7C MOV X25, X1
	0x0320DA80 TBNZ X8, 0x0, 0x320DB7C
	0x0320DA84 ADRP X0, 0xEE6000
	0x0320DA88 LDR X0, [X0 + 0x618]
	0x0320DA8C BL 0x1C16CF4
	0x0320DA90 ADRP X0, 0xEEF000
	0x0320DA94 LDR X0, [X0 + 0x8D8]
	0x0320DA98 BL 0x1C16CF4
	0x0320DA9C ADRP X0, 0xF14000
	0x0320DAA0 LDR X0, [X0 + 0xA38]
	0x0320DAA4 BL 0x1C16CF4
	0x0320DAA8 ADRP X0, 0xF14000
	0x0320DAAC LDR X0, [X0 + 0xA08]
	0x0320DAB0 BL 0x1C16CF4
	0x0320DAB4 ADRP X0, 0xF14000
	0x0320DAB8 LDR X0, [X0 + 0xA40]
	0x0320DABC BL 0x1C16CF4
	0x0320DAC0 ADRP X0, 0xF14000
	0x0320DAC4 LDR X0, [X0 + 0xA48]
	0x0320DAC8 BL 0x1C16CF4
	0x0320DACC ADRP X0, 0xF14000
	0x0320DAD0 LDR X0, [X0 + 0xA50]
	0x0320DAD4 BL 0x1C16CF4
	0x0320DAD8 ADRP X0, 0xF14000
	0x0320DADC LDR X0, [X0 + 0xA58]
	0x0320DAE0 BL 0x1C16CF4
	0x0320DAE4 ADRP X0, 0xF14000
	0x0320DAE8 LDR X0, [X0 + 0xA60]
	0x0320DAEC BL 0x1C16CF4
	0x0320DAF0 ADRP X0, 0xF14000
	0x0320DAF4 LDR X0, [X0 + 0xA68]
	0x0320DAF8 BL 0x1C16CF4
	0x0320DAFC ADRP X0, 0xF14000
	0x0320DB00 LDR X0, [X0 + 0xA70]
	0x0320DB04 BL 0x1C16CF4
	0x0320DB08 ADRP X0, 0xF14000
	0x0320DB0C LDR X0, [X0 + 0xA78]
	0x0320DB10 BL 0x1C16CF4
	0x0320DB14 ADRP X0, 0xF14000
	0x0320DB18 LDR X0, [X0 + 0xA20]
	0x0320DB1C BL 0x1C16CF4
	0x0320DB20 ADRP X0, 0xF14000
	0x0320DB24 LDR X0, [X0 + 0xA30]
	0x0320DB28 BL 0x1C16CF4
	0x0320DB2C ADRP X0, 0xF14000
	0x0320DB30 LDR X0, [X0 + 0xA18]
	0x0320DB34 BL 0x1C16CF4
	0x0320DB38 ADRP X0, 0xF14000
	0x0320DB3C LDR X0, [X0 + 0xA28]
	0x0320DB40 BL 0x1C16CF4
	0x0320DB44 ADRP X0, 0xF14000
	0x0320DB48 LDR X0, [X0 + 0xA10]
	0x0320DB4C BL 0x1C16CF4
	0x0320DB50 ADRP X0, 0xF0E000
	0x0320DB54 LDR X0, [X0 + 0x850]
	0x0320DB58 BL 0x1C16CF4
	0x0320DB5C ADRP X0, 0xF14000
	0x0320DB60 LDR X0, [X0 + 0xA80]
	0x0320DB64 BL 0x1C16CF4
	0x0320DB68 ADRP X0, 0xF14000
	0x0320DB6C LDR X0, [X0 + 0xA88]
	0x0320DB70 BL 0x1C16CF4
	0x0320DB74 MOVZ W8, 0x1
	0x0320DB78 STRB W8, [X23 + 0x2A2]
	0x0320DB7C LDR X0, [X24]
	0x0320DB80 BL 0x1C16F10
	0x0320DB84 LDR X1, [X22]
	0x0320DB88 MOV X22, X0
	0x0320DB8C BL 0x301B7C4
	0x0320DB90 LDR X0, [X21]
	0x0320DB94 BL 0x1C16F10
	0x0320DB98 LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x11D0000
	008 Move W8, [X20+657]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xF15000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0xEE9000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xF15000
	021 Move X0, [X0+2448]
	022 Call 0x1C17CF4
	023 Move X0, 0xF15000
	024 Move X0, [X0+2456]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+657], W8
	028 Move X0, [X19+24]
	029 Compare X0, 0
	030 JumpIfEqual {351}
	031 Move X8, [X0]
	032 Move X9, [X8+440]
	033 Move X1, [X8+448]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, W0
	037 Move W9, 1
	038 NotImplemented "Instruction LSLV not yet implemented."
	039 Move X9, 0x2600
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 And X31, X8, X9
	042 Move X0, [X19+56]
	043 Compare X0, 0
	044 JumpIfEqual {351}
	045 Move X1, X31
	046 Call StringBuilder.get_Length, X0
	047 Compare W0, 0
	048 JumpIfNotEqual {51}
	049 Move W8, 1
	050 Move [X19+72], W8
	051 Move X0, X19
	052 Call SmallXmlParser.HandleWhitespaces, X0
	053 Move X0, [X19+24]
	054 Compare X0, 0
	055 JumpIfEqual {351}
	056 Move X8, [X0]
	057 Move X9, [X8+440]
	058 Move X1, [X8+448]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X19
	062 Call SmallXmlParser.Read, X0
	063 Move X0, [X19+24]
	064 Compare X0, 0
	065 JumpIfEqual {351}
	066 Move X8, [X0]
	067 Move X9, [X8+440]
	068 Move X1, [X8+448]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Call SmallXmlParser.Read, X0
	075 Move X0, [X19+24]
	076 Compare X0, 0
	077 JumpIfEqual {351}
	078 Move X8, [X0]
	079 Move X9, [X8+440]
	080 Move X1, [X8+448]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X19
	084 Call SmallXmlParser.Read, X0
	085 Move X0, X19
	086 Call SmallXmlParser.ReadName, X0
	087 Move X8, 0xF15000
	088 Move X8, [X8+2456]
	089 Move X2, X31
	090 Move X1, [X8]
	091 Call String.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {452}
	096 Move W1, 91
	097 Move X0, X19
	098 Call SmallXmlParser.Expect, X0, X1
	099 Move X0, X19
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Move X23, [X31+56]
	106 Call SmallXmlParser.ReadCDATASection, X0
	107 Return 
	108 Move X0, X19
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Move X23, [X31+56]
	115 Call SmallXmlParser.ReadCharacters, X0
	116 Return 
	117 Move X0, X19
	118 Call SmallXmlParser.HandleBufferedContent, X0
	119 Move X0, X19
	120 Call SmallXmlParser.Read, X0
	121 Move X0, X19
	122 Call SmallXmlParser.ReadName, X0
	123 Move X20, X0
	124 Move X0, X19
	125 Move W1, W31
	126 Call SmallXmlParser.SkipWhitespaces, X0, X1
	127 Move X0, [X19+24]
	128 Compare X0, 0
	129 JumpIfEqual {351}
	130 Move X8, 0xEE9000
	131 Move X8, [X8+632]
	132 Move X9, [X0]
	133 Move X8, [X8]
	134 Move X8, [X8+184]
	135 Move X21, [X8]
	136 Move X8, [X9+440]
	137 Move X1, [X9+448]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X22, [X19+16]
	141 Compare X22, 0
	142 JumpIfEqual {351}
	143 Move X10, 0xF15000
	144 Move X8, [X22]
	145 Move X10, [X10+2264]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 4
	157 Move X0, X22
	158 Call 0x1C5D788
	159 Move X0, X19
	160 Call SmallXmlParser.HandleBufferedContent, X0
	161 Move X0, [X19+32]
	162 Compare X0, 0
	163 JumpIfEqual {351}
	164 Move X8, [X0]
	165 Move X9, [X8+472]
	166 Move X1, [X8+480]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare W0, 0
	169 JumpIfEqual {441}
	170 Move X0, X19
	171 Call SmallXmlParser.Read, X0
	172 Move X0, X19
	173 Call SmallXmlParser.ReadName, X0
	174 Move X20, X0
	175 Move X0, X19
	176 Move W1, W31
	177 Call SmallXmlParser.SkipWhitespaces, X0, X1
	178 Move X0, [X19+32]
	179 Compare X0, 0
	180 JumpIfEqual {351}
	181 Move X8, [X0]
	182 Move X9, [X8+600]
	183 Move X1, [X8+608]
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Move X22, 0xEE9000
	186 Move X22, [X22+632]
	187 Move X21, X0
	188 Compare X0, 0
	189 JumpIfEqual {193}
	190 Move X1, [X22]
	191 Move X8, [X21]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, [X19+40]
	194 Compare X0, 0
	195 JumpIfEqual {351}
	196 Move X8, [X0]
	197 Move X9, [X8+600]
	198 Move X1, [X8+608]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, [X19+40]
	201 Compare X0, 0
	202 JumpIfEqual {351}
	203 Move X8, [X0]
	204 Move X9, [X8+472]
	205 Move X1, [X8+480]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X0, [X19+40]
	209 Compare X0, 0
	210 JumpIfEqual {351}
	211 Move X8, [X0]
	212 Move X9, [X8+584]
	213 Move X1, [X8+592]
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X0, 0
	216 JumpIfEqual {272}
	217 Move X1, [X22]
	218 Move X8, [X0]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X19+48], X0
	221 Move X8, [X0]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Call 0x1C181E0
	224 Move X0, X19
	225 Call SmallXmlParser.HandleBufferedContent, X0
	226 Move X0, X19
	227 Call SmallXmlParser.ReadName, X0
	228 Move X8, [X19+24]
	229 Compare X8, 0
	230 JumpIfEqual {351}
	231 Move X20, X0
	232 Move X9, [X8]
	233 Move X0, X8
	234 Move X10, [X9+440]
	235 Move X1, [X9+448]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, [X19+24]
	239 Compare X0, 0
	240 JumpIfEqual {351}
	241 Move X8, [X0]
	242 Move X9, [X8+440]
	243 Move X1, [X8+448]
	244 NotImplemented "Instruction BLR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X1, [X19+80]
	247 Move X0, X19
	248 Call SmallXmlParser.ReadAttribute, X0, X1
	249 Move X8, [X19+24]
	250 Compare X8, 0
	251 JumpIfNotEqual {232}
	252 Move X21, [X19+16]
	253 Compare X21, 0
	254 JumpIfEqual {351}
	255 Move X23, 0xF15000
	256 Move X8, [X21]
	257 Move X22, [X19+80]
	258 Move X23, [X23+2264]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Move X1, [X23]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move W2, 2
	270 Move X0, X21
	271 Call 0x1C5D788
	272 Move [X19+48], X31
	273 Move X0, X20
	274 Move X1, X21
	275 Move X2, X31
	276 Call String.op_Inequality, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {443}
	281 Move X21, [X19+16]
	282 Compare X21, 0
	283 JumpIfEqual {351}
	284 Move X10, 0xF15000
	285 Move X8, [X21]
	286 Move X10, [X10+2264]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {403}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move X0, [X19+24]
	298 Compare X0, 0
	299 JumpIfEqual {351}
	300 Move X8, [X0]
	301 Move X9, [X8+440]
	302 Move X1, [X8+448]
	303 NotImplemented "Instruction BLR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X0, X19
	306 Move X20, [X31+32]
	307 Move X19, [X31+40]
	308 Move X22, [X31+16]
	309 Move X21, [X31+24]
	310 Move X30, [X31+48]
	311 Move X23, [X31+56]
	312 Call SmallXmlParser.ReadComment, X0
	313 Return 
	314 Move W1, 63
	315 Move X0, X19
	316 Move W2, W31
	317 Call SmallXmlParser.ReadUntil, X0, X1, X2
	318 Move X1, X0
	319 Move X0, X21
	320 Move X2, X31
	321 Call String.Concat, X0, X1
	322 Move X8, [X19+24]
	323 Compare X8, 0
	324 JumpIfEqual {351}
	325 Move X22, 0xF15000
	326 Move X22, [X22+2448]
	327 Move X21, X0
	328 Move X9, [X8]
	329 Move X0, X8
	330 Move X10, [X9+440]
	331 Move X1, [X9+448]
	332 NotImplemented "Instruction BLR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X1, [X22]
	335 Move X0, X21
	336 Move X2, X31
	337 Call String.Concat, X0, X1
	338 Move X21, X0
	339 Move W1, 63
	340 Move X0, X19
	341 Move W2, W31
	342 Call SmallXmlParser.ReadUntil, X0, X1, X2
	343 Move X1, X0
	344 Move X0, X21
	345 Move X2, X31
	346 Call String.Concat, X0, X1
	347 Move X8, [X19+24]
	348 Move X21, X0
	349 Compare X8, 0
	350 JumpIfNotEqual {328}
	351 Call 0x1C17F20
	352 Move W9, [X10]
	353 Add W9, W9, 4
	354 Add X8, X8, W9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X3, [X0+8]
	358 Move X0, X22
	359 Move X1, X20
	360 Move X2, X21
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move W9, [X10]
	363 Add W9, W9, 2
	364 Add X8, X8, W9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X3, [X0+8]
	368 Move X0, X21
	369 Move X1, X20
	370 Move X2, X22
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Move X0, [X19+80]
	373 Compare X0, 0
	374 JumpIfEqual {351}
	375 Call AttrListImpl.Clear, X0
	376 Move X0, X19
	377 Move W1, W31
	378 Call SmallXmlParser.SkipWhitespaces, X0, X1
	379 Move X0, [X19+24]
	380 Compare X0, 0
	381 JumpIfEqual {351}
	382 Move X8, [X0]
	383 Move X9, [X8+440]
	384 Move X1, [X8+448]
	385 NotImplemented "Instruction BLR not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X19
	388 Call SmallXmlParser.Read, X0
	389 Move X21, [X19+16]
	390 Compare X21, 0
	391 JumpIfEqual {351}
	392 Move X8, [X21]
	393 Move X1, [X23]
	394 NotImplemented "Instruction LDRH not yet implemented."
	395 Compare X9, 0
	396 JumpIfEqual {403}
	397 Move X10, [X8+176]
	398 Add X10, X10, 8
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Subtract X9, X9, 1
	402 Add X10, X10, 16
	403 Move W2, 3
	404 Move X0, X21
	405 Call 0x1C5D788
	406 Move X0, [X19+32]
	407 Compare X0, 0
	408 JumpIfEqual {351}
	409 Move X8, [X0]
	410 Move X1, X20
	411 Move X9, [X8+616]
	412 Move X2, [X8+624]
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X0, [X19+40]
	415 Compare X0, 0
	416 JumpIfEqual {351}
	417 Move X8, [X0]
	418 Move X1, [X19+48]
	419 Move X9, [X8+616]
	420 Move X2, [X8+624]
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Move W9, [X10]
	423 Add W9, W9, 3
	424 Add X8, X8, W9
	425 Add X0, X8, 312
	426 Move X8, [X0]
	427 Move X2, [X0+8]
	428 Move X0, X21
	429 Move X1, X20
	430 NotImplemented "Instruction BLR not yet implemented."
	431 Move X0, X19
	432 Move X20, [X31+32]
	433 Move X19, [X31+40]
	434 Move X22, [X31+16]
	435 Move X21, [X31+24]
	436 Move W1, 62
	437 Move X30, [X31+48]
	438 Move X23, [X31+56]
	439 Call SmallXmlParser.Expect, X0, X1
	440 Return 
	441 Move X0, X19
	442 Call SmallXmlParser.UnexpectedEndError, X0
	443 Move X0, 0xF15000
	444 Move X0, [X0+2464]
	445 Call 0x1C17D08
	446 Move X1, X21
	447 Move X2, X20
	448 Move X3, X31
	449 Call String.Format, X0, X1, X2
	450 Move X0, X21
	451 Call 0x1C181E0
	452 Move X0, 0xF15000
	453 Move X0, [X0+2472]
	454 Move X0, X19
	455 Call SmallXmlParser.ReadName, X0
	456 Move X20, X0
	457 Move X0, 0xF15000
	458 Move X0, [X0+2480]
	459 Call 0x1C17D08
	460 Move X1, X0
	461 Move X0, X20
	462 Move X2, X31
	463 Call String.op_Inequality, X0, X1
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfNotEqual {470}
	468 Move X0, 0xF15000
	469 Move X0, [X0+2488]
	470 Move X0, 0xF15000
	471 Move X0, [X0+2496]
	472 Call 0x1C17D08
	473 Move X1, X0
	474 Move X0, X19
	475 Call SmallXmlParser.Error, X0, X1
	476 Move X19, X0
	477 Move X0, 0xF15000
	478 Move X0, [X0+2504]
	479 Call 0x1C17D08
	480 Move X1, X0
	481 Move X0, X19
	482 Call 0x1C17DEC

Method: System.Void HandleBufferedContent()

Disassembly:
	0x0320DB9C MOV X23, X0
	0x0320DBA0 BL 0x301B7C4
	0x0320DBA4 LDR X0, [X19]
	0x0320DBA8 LDR W8, [X0 + 0xE0]
	0x0320DBAC CBNZ W8, 0x320DBB8
	0x0320DBB0 BL 0x1C16DFC
	0x0320DBB4 LDR X0, [X19]
	0x0320DBB8 LDR X8, [X0 + 0xB8]
	0x0320DBBC LDR X8, [X8 + 0x78]
	0x0320DBC0 CBZ X8, 0x320DBDC
	0x0320DBC4 LDR W9, [X8 + 0x18]
	0x0320DBC8 ADD X8, X8, 0x20
	0x0320DBCC CMP W9, 0x0
	0x0320DBD0 CSEL X24, X31, X8, EQ
	0x0320DBD4 CBNZ X25, 0x320DBE4
	0x0320DBD8 B 0x320E0A4
	0x0320DBDC MOV X24, X31
	0x0320DBE0 CBZ X25, 0x320E0A4
	0x0320DBE4 LDP W27, W8, [X25 + 0x14]
	0x0320DBE8 ADD W29, W8, W27
	0x0320DBEC CMP W27, W29
	0x0320DBF0 B.GE 0x320DF7C
	0x0320DBF4 STR W31, [X31 + 0x24]
	0x0320DBF8 ADRP X19, 0xF14000
	0x0320DBFC ADRP X20, 0xF14000
	0x0320DC00 LDR X19, [X19 + 0xA48]
	0x0320DC04 LDR X20, [X20 + 0xA58]
	0x0320DC08 ADD W26, W27, 0x2
	0x0320DC0C LDRH W8, [X24, W27, SXTW]
	0x0320DC10 CMP W8, 0x2
	0x0320DC14 B.NE 0x320DCB8
	0x0320DC18 ADD W8, W27, 0x1
	0x0320DC1C ADD W9, W27, 0x2
	0x0320DC20 SBFM X8, X8, 0x3F, 0x1F
	0x0320DC24 SBFM X9, X9, 0x3F, 0x1F
	0x0320DC28 LDR X0, [X19]
	0x0320DC2C LDRB W28, [X8, X24, LSL]
	0x0320DC30 LDRB W21, [X9, X24, LSL]
	0x0320DC34 BL 0x1C16F10
	0x0320DC38 MOV X1, X31
	0x0320DC3C MOV X25, X0
	0x0320DC40 BL 0x33BDD8C
	0x0320DC44 STRB W28, [X25 + 0x10]
	0x0320DC48 STRB W21, [X25 + 0x11]
	0x0320DC4C CBZ X23, 0x320E0A4
	0x0320DC50 LDR W10, [X23 + 0x1C]
	0x0320DC54 LDR X8, [X23 + 0x10]
	0x0320DC58 LDR X9, [X20]
	0x0320DC5C ADD W10, W10, 0x1
	0x0320DC60 STR W10, [X23 + 0x1C]
	0x0320DC64 CBZ X8, 0x320E0A4
	0x0320DC68 LDRSW X10, [X23 + 0x18]
	0x0320DC6C LDR W11, [X8 + 0x18]
	0x0320DC70 CMP W10, W11
	0x0320DC74 B.CS 0x320DC8C
	0x0320DC78 ADD W9, W10, 0x1
	0x0320DC7C ADD X8, X8, X10, 0x3, LSL
	0x0320DC80 STR W9, [X23 + 0x18]
	0x0320DC84 STR X25, [X8 + 0x20]
	0x0320DC88 B 0x320DCA4
	0x0320DC8C LDR X8, [X9 + 0x20]
	0x0320DC90 MOV X0, X23
	0x0320DC94 MOV X1, X25
	0x0320DC98 LDR X8, [X8 + 0xC0]
	0x0320DC9C LDR X2, [X8 + 0x70]
	0x0320DCA0 BL 0x301BF90
	0x0320DCA4 ADD W27, W27, 0x3
	0x0320DCA8 CMP W27, W29
	0x0320DCAC ADD W26, W26, 0x3
	0x0320DCB0 B.LT 0x320DC0C
	0x0320DCB4 B 0x320DF7C
	0x0320DCB8 CMP W8, 0x1
	0x0320DCBC B.EQ 0x320DDF0
	0x0320DCC0 CMP W8, 0x3
	0x0320DCC4 B.NE 0x320E0A8
	0x0320DCC8 ADD W25, W27, 0x1
	0x0320DCCC MOVN W26, 0x0
	0x0320DCD0 ADD W8, W27, W26

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11D0000
	007 Move W8, [X20+658]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF15000
	014 Move X0, [X0+2264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+658], W8
	018 Move X0, [X19+56]
	019 Compare X0, 0
	020 JumpIfEqual {88}
	021 Move X1, X31
	022 Call StringBuilder.get_Length, X0
	023 Compare W0, 0
	024 JumpIfEqual {82}
	025 Move X0, [X19+56]
	026 Compare X0, 0
	027 JumpIfEqual {88}
	028 Move X8, [X0]
	029 Move W22, [X19+72]
	030 Move X20, [X19+16]
	031 Move X9, [X8+360]
	032 Move X1, [X8+368]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X20, 0
	035 JumpIfEqual {88}
	036 Move X9, 0xF15000
	037 Move X8, [X20]
	038 Move X9, [X9+2264]
	039 Move X21, X0
	040 Move X1, [X9]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Compare W22, 0
	043 JumpIfEqual {53}
	044 Compare W9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move W2, 6
	053 Compare W9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 6
	066 Move W9, [X10]
	067 Add W9, W9, 5
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X2, [X0+8]
	072 Move X0, X20
	073 Move X1, X21
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, [X19+56]
	076 Compare X0, 0
	077 JumpIfEqual {88}
	078 Move W1, W31
	079 Move X2, X31
	080 Call StringBuilder.set_Length, X0, X1
	081 Move [X19+72], W31
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void ReadCharacters()

Disassembly:
	0x0320E0D0 MOV X0, X19
	0x0320E0D4 BL 0x1C16D08
	0x0320E0D8 ADD X1, X31, 0x2C
	0x0320E0DC BL 0x1C16E04
	0x0320E0E0 MOV X20, X0
	0x0320E0E4 MOV X0, X21
	0x0320E0E8 BL 0x19903C0
	0x0320E0EC LDR X8, [X21]
	0x0320E0F0 MOV X0, X21
	0x0320E0F4 LDP X9, X1, [X8 + 0x1A8]
	0x0320E0F8 BLR X9
	0x0320E0FC MOV X21, X0
	0x0320E100 MOV X0, X19
	0x0320E104 STR W27, [X31 + 0x28]
	0x0320E108 BL 0x1C16D08
	0x0320E10C ADD X1, X31, 0x28
	0x0320E110 BL 0x1C16E04
	0x0320E114 MOV X19, X0
	0x0320E118 ADRP X0, 0xF13000
	0x0320E11C LDR X0, [X0 + 0xA90]
	0x0320E120 BL 0x1C16D08
	0x0320E124 MOV X1, X20
	0x0320E128 MOV X2, X21
	0x0320E12C MOV X3, X19
	0x0320E130 MOV X4, X31
	0x0320E134 BL 0x3227C18
	0x0320E138 MOV X19, X0
	0x0320E13C ADRP X0, 0xEEE000
	0x0320E140 LDR X0, [X0 + 0x758]
	0x0320E144 BL 0x1C16D08
	0x0320E148 BL 0x1C16F10
	0x0320E14C MOV X1, X19
	0x0320E150 MOV X2, X31
	0x0320E154 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Move [X19+72], W31
	007 Compare X0, 0
	008 JumpIfEqual {32}
	009 Move X8, [X0]
	010 Move X9, [X8+440]
	011 Move X1, [X8+448]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add W31, W0, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, [X19+56]
	017 Move X0, X19
	018 Call SmallXmlParser.Read, X0
	019 Compare X20, 0
	020 JumpIfEqual {32}
	021 Move W1, W0
	022 Move X0, X20
	023 Move X2, X31
	024 Call StringBuilder.Append, X0, X1
	025 Move X0, X19
	026 Call SmallXmlParser.Read, X0
	027 Move X0, X19
	028 Call SmallXmlParser.ReadReference, X0
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfNotEqual {9}
	032 Call 0x1C17F20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void ReadReference()

Disassembly:
	0x0320D154 RET
	0x0320D158 STP X30, X19, [X31 - 0x10]!
	0x0320D15C MOV X19, X0
	0x0320D160 LDR X0, [X0 + 0x18]
	0x0320D164 CBZ X0, 0x320D210
	0x0320D168 LDR X8, [X0]
	0x0320D16C LDP X9, X1, [X8 + 0x1B8]
	0x0320D170 BLR X9
	0x0320D174 CMP W0, 0x78
	0x0320D178 B.NE 0x320D1BC
	0x0320D17C MOV X0, X19
	0x0320D180 BL 0x320BF3C
	0x0320D184 LDR X0, [X19 + 0x18]
	0x0320D188 CBZ X0, 0x320D210
	0x0320D18C LDR X8, [X0]
	0x0320D190 LDP X9, X1, [X8 + 0x1B8]
	0x0320D194 BLR X9
	0x0320D198 TBNZ X0, 0x1F, 0x320D204
	0x0320D19C AND W8, W0, 0xFFFFFFDF
	0x0320D1A0 SUB W8, W8, 0x41
	0x0320D1A4 CMP W8, 0x6
	0x0320D1A8 B.CC 0x320D17C
	0x0320D1AC SUB W8, W0, 0x30
	0x0320D1B0 CMP W8, 0x9
	0x0320D1B4 B.LS 0x320D17C
	0x0320D1B8 B 0x320D204
	0x0320D1BC LDR X0, [X19 + 0x18]
	0x0320D1C0 CBZ X0, 0x320D210
	0x0320D1C4 LDR X8, [X0]
	0x0320D1C8 LDP X9, X1, [X8 + 0x1B8]
	0x0320D1CC BLR X9
	0x0320D1D0 SUB W8, W0, 0x30
	0x0320D1D4 CMP W8, 0x9
	0x0320D1D8 B.HI 0x320D204
	0x0320D1DC MOV X0, X19
	0x0320D1E0 BL 0x320BF3C
	0x0320D1E4 LDR X0, [X19 + 0x18]
	0x0320D1E8 CBZ X0, 0x320D210
	0x0320D1EC LDR X8, [X0]
	0x0320D1F0 LDP X9, X1, [X8 + 0x1B8]
	0x0320D1F4 BLR X9
	0x0320D1F8 SUB W8, W0, 0x30
	0x0320D1FC CMP W8, 0xA
	0x0320D200 B.CC 0x320D1DC
	0x0320D204 MOV W0, W31
	0x0320D208 LDP X30, X19, [X31], #0x10
	0x0320D20C RET
	0x0320D210 BL 0x1C16F20
	0x0320D214 STR X30, [X31 - 0x30]!
	0x0320D218 STP X22, X21, [X31 + 0x10]
	0x0320D21C STP X20, X19, [X31 + 0x20]
	0x0320D220 ADRP X22, 0x11CF000
	0x0320D224 LDRB W8, [X22 + 0x29C]
	0x0320D228 MOV X19, X2
	0x0320D22C MOV X21, X1
	0x0320D230 MOV X20, X0
	0x0320D234 TBNZ X8, 0x0, 0x320D24C
	0x0320D238 ADRP X0, 0xEE7000
	0x0320D23C LDR X0, [X0 + 0x1B8]
	0x0320D240 BL 0x1C16CF4
	0x0320D244 MOVZ W8, 0x1
	0x0320D248 STRB W8, [X22 + 0x29C]
	0x0320D24C LDR X0, [X20 + 0x10]
	0x0320D250 CBZ X0, 0x320D31C
	0x0320D254 ADRP X22, 0xEE7000
	0x0320D258 LDR X22, [X22 + 0x1B8]
	0x0320D25C LDR W10, [X0 + 0x1C]
	0x0320D260 LDR X8, [X0 + 0x10]
	0x0320D264 LDR X9, [X22]
	0x0320D268 ADD W10, W10, 0x1
	0x0320D26C STR W10, [X0 + 0x1C]
	0x0320D270 CBZ X8, 0x320D31C
	0x0320D274 LDRSW X10, [X0 + 0x18]
	0x0320D278 LDR W11, [X8 + 0x18]
	0x0320D27C CMP W10, W11
	0x0320D280 B.CS 0x320D298
	0x0320D284 ADD W9, W10, 0x1
	0x0320D288 ADD X8, X8, X10, 0x3, LSL
	0x0320D28C STR W9, [X0 + 0x18]
	0x0320D290 STR X21, [X8 + 0x20]
	0x0320D294 B 0x320D2AC
	0x0320D298 LDR X8, [X9 + 0x20]
	0x0320D29C MOV X1, X21
	0x0320D2A0 LDR X8, [X8 + 0xC0]
	0x0320D2A4 LDR X2, [X8 + 0x70]
	0x0320D2A8 BL 0x301BF90
	0x0320D2AC LDR X0, [X20 + 0x18]
	0x0320D2B0 CBZ X0, 0x320D31C
	0x0320D2B4 LDR W10, [X0 + 0x1C]
	0x0320D2B8 LDR X8, [X0 + 0x10]
	0x0320D2BC LDR X9, [X22]
	0x0320D2C0 ADD W10, W10, 0x1
	0x0320D2C4 STR W10, [X0 + 0x1C]
	0x0320D2C8 CBZ X8, 0x320D31C
	0x0320D2CC LDRSW X10, [X0 + 0x18]
	0x0320D2D0 LDR W11, [X8 + 0x18]
	0x0320D2D4 CMP W10, W11
	0x0320D2D8 B.CS 0x320D2FC
	0x0320D2DC ADD W9, W10, 0x1
	0x0320D2E0 ADD X8, X8, X10, 0x3, LSL
	0x0320D2E4 STR W9, [X0 + 0x18]
	0x0320D2E8 STR X19, [X8 + 0x20]
	0x0320D2EC LDP X20, X19, [X31 + 0x20]
	0x0320D2F0 LDP X22, X21, [X31 + 0x10]
	0x0320D2F4 LDR X30, [X31], #0x30
	0x0320D2F8 RET
	0x0320D2FC LDR X8, [X9 + 0x20]
	0x0320D300 MOV X1, X19
	0x0320D304 LDP X20, X19, [X31 + 0x20]
	0x0320D308 LDP X22, X21, [X31 + 0x10]
	0x0320D30C LDR X8, [X8 + 0xC0]
	0x0320D310 LDR X2, [X8 + 0x70]
	0x0320D314 LDR X30, [X31], #0x30
	0x0320D318 B 0x301BF90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11D0000
	005 Move W8, [X20+659]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0xF15000
	012 Move X0, [X0+2368]
	013 Call 0x1C17CF4
	014 Move X0, 0xF15000
	015 Move X0, [X0+2376]
	016 Call 0x1C17CF4
	017 Move X0, 0xF15000
	018 Move X0, [X0+2384]
	019 Call 0x1C17CF4
	020 Move X0, 0xF15000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0xF15000
	024 Move X0, [X0+2400]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+659], W8
	028 Move X0, [X19+24]
	029 Compare X0, 0
	030 JumpIfEqual {126}
	031 Move X8, [X0]
	032 Move X9, [X8+440]
	033 Move X1, [X8+448]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X0, X19
	037 Call SmallXmlParser.Read, X0
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call SmallXmlParser.ReadCharacterReference, X0
	043 Return 
	044 Move X0, X19
	045 Call SmallXmlParser.ReadName, X0
	046 Move X20, X0
	047 Move W1, 59
	048 Move X0, X19
	049 Call SmallXmlParser.Expect, X0, X1
	050 Move X8, 0xF15000
	051 Move X8, [X8+2400]
	052 Move X0, X20
	053 Move X2, X31
	054 Move X1, [X8]
	055 Call String.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {64}
	060 Move X0, [X19+56]
	061 Compare X0, 0
	062 JumpIfEqual {126}
	063 Move W1, 38
	064 Move X8, 0xF15000
	065 Move X8, [X8+2392]
	066 Move X0, X20
	067 Move X2, X31
	068 Move X1, [X8]
	069 Call String.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {78}
	074 Move X0, [X19+56]
	075 Compare X0, 0
	076 JumpIfEqual {126}
	077 Move W1, 34
	078 Move X8, 0xF15000
	079 Move X8, [X8+2384]
	080 Move X0, X20
	081 Move X2, X31
	082 Move X1, [X8]
	083 Call String.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {92}
	088 Move X0, [X19+56]
	089 Compare X0, 0
	090 JumpIfEqual {126}
	091 Move W1, 39
	092 Move X8, 0xF15000
	093 Move X8, [X8+2376]
	094 Move X0, X20
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call String.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {106}
	102 Move X0, [X19+56]
	103 Compare X0, 0
	104 JumpIfEqual {126}
	105 Move W1, 60
	106 Move X8, 0xF15000
	107 Move X8, [X8+2368]
	108 Move X0, X20
	109 Move X2, X31
	110 Move X1, [X8]
	111 Call String.op_Equality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {127}
	116 Move X0, [X19+56]
	117 Compare X0, 0
	118 JumpIfEqual {126}
	119 Move W1, 62
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X2, X31
	123 Move X30, [X31+32]
	124 Call StringBuilder.Append, X0, X1
	125 Return 
	126 Call 0x1C17F20
	127 Move X0, 0xF15000
	128 Move X0, [X0+2408]
	129 Call 0x1C17D08
	130 Move X1, X0
	131 Move X0, X19
	132 Call SmallXmlParser.Error, X0, X1
	133 Move X19, X0
	134 Move X0, 0xF15000
	135 Move X0, [X0+2416]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Call 0x1C17DEC

Method: System.Int32 ReadCharacterReference()

Disassembly:
	0x0320E158 BL 0x33802E4
	0x0320E15C ADRP X0, 0xF13000
	0x0320E160 LDR X0, [X0 + 0xA98]
	0x0320E164 BL 0x1C16D08
	0x0320E168 MOV X1, X0
	0x0320E16C MOV X0, X20
	0x0320E170 BL 0x1C16DEC
	0x0320E174 BL 0x1C16F28
	0x0320E178 STR X30, [X31 - 0x50]!
	0x0320E17C STP X26, X25, [X31 + 0x10]
	0x0320E180 STP X24, X23, [X31 + 0x20]
	0x0320E184 STP X22, X21, [X31 + 0x30]
	0x0320E188 STP X20, X19, [X31 + 0x40]
	0x0320E18C ADRP X25, 0x11CE000
	0x0320E190 ADRP X26, 0xF13000
	0x0320E194 LDRB W8, [X25 + 0x2A3]
	0x0320E198 LDR X26, [X26 + 0xAA0]
	0x0320E19C MOV X23, X5
	0x0320E1A0 MOV X22, X4
	0x0320E1A4 MOV X20, X3
	0x0320E1A8 MOV X21, X2
	0x0320E1AC MOV X19, X1
	0x0320E1B0 MOV X24, X0
	0x0320E1B4 TBNZ X8, 0x0, 0x320E208
	0x0320E1B8 ADRP X0, 0xF13000
	0x0320E1BC LDR X0, [X0 + 0xAA8]
	0x0320E1C0 BL 0x1C16CF4
	0x0320E1C4 ADRP X0, 0xF13000
	0x0320E1C8 LDR X0, [X0 + 0xA10]
	0x0320E1CC BL 0x1C16CF4
	0x0320E1D0 ADRP X0, 0xF13000
	0x0320E1D4 LDR X0, [X0 + 0xAB0]
	0x0320E1D8 BL 0x1C16CF4
	0x0320E1DC ADRP X0, 0xF13000
	0x0320E1E0 LDR X0, [X0 + 0xAB8]
	0x0320E1E4 BL 0x1C16CF4
	0x0320E1E8 ADRP X0, 0xF13000
	0x0320E1EC LDR X0, [X0 + 0xAC0]
	0x0320E1F0 BL 0x1C16CF4
	0x0320E1F4 ADRP X0, 0xF13000
	0x0320E1F8 LDR X0, [X0 + 0xAA0]
	0x0320E1FC BL 0x1C16CF4
	0x0320E200 MOVZ W8, 0x1
	0x0320E204 STRB W8, [X25 + 0x2A3]
	0x0320E208 LDR X1, [X26]
	0x0320E20C MOV X0, X24
	0x0320E210 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {54}
	007 Move X8, [X0]
	008 Move X9, [X8+440]
	009 Move X1, [X8+448]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X19
	013 Call SmallXmlParser.Read, X0
	014 Move X0, [X19+24]
	015 Compare X0, 0
	016 JumpIfEqual {54}
	017 Move X8, [X0]
	018 Move X9, [X8+440]
	019 Move X1, [X8+448]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfEqual {50}
	025 And W8, W0, 0xFFFFFFDF
	026 Subtract W8, W8, 65
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W8, W0, 48
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X19+24]
	031 Compare X0, 0
	032 JumpIfEqual {54}
	033 Move X8, [X0]
	034 Move X9, [X8+440]
	035 Move X1, [X8+448]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Subtract W8, W0, 48
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X19
	040 Call SmallXmlParser.Read, X0
	041 Move X0, [X19+24]
	042 Compare X0, 0
	043 JumpIfEqual {54}
	044 Move X8, [X0]
	045 Move X9, [X8+440]
	046 Move X1, [X8+448]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Subtract W8, W0, 48
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W0, W31
	051 Move X30, [X31+16]
	052 Move X19, [X31+24]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Void ReadAttribute(Mono.Xml.SmallXmlParser/AttrListImpl a)

Disassembly:
	0x0320DF6C CMP W27, W29
	0x0320DF70 ADD W8, W8, 0x1
	0x0320DF74 STR W8, [X31 + 0x24]
	0x0320DF78 B.LT 0x320DC08
	0x0320DF7C ADRP X19, 0xF14000
	0x0320DF80 LDR X19, [X19 + 0xA08]
	0x0320DF84 LDR X0, [X19]
	0x0320DF88 LDR W8, [X0 + 0xE0]
	0x0320DF8C CBNZ W8, 0x320DF94
	0x0320DF90 BL 0x1C16DFC
	0x0320DF94 CBZ X22, 0x320E0A4
	0x0320DF98 LDR X8, [X19]
	0x0320DF9C ADRP X9, 0xF14000
	0x0320DFA0 ADRP X19, 0xF14000
	0x0320DFA4 MOV X0, X22
	0x0320DFA8 LDR X8, [X8 + 0xB8]
	0x0320DFAC LDR X9, [X9 + 0xA60]
	0x0320DFB0 LDR X1, [X8]
	0x0320DFB4 LDR X2, [X9]
	0x0320DFB8 LDR X19, [X19 + 0xA88]
	0x0320DFBC BL 0x301DC6C
	0x0320DFC0 LDR X0, [X19]
	0x0320DFC4 LDR W8, [X0 + 0xE0]
	0x0320DFC8 CBNZ W8, 0x320DFD4
	0x0320DFCC BL 0x1C16DFC
	0x0320DFD0 LDR X0, [X19]
	0x0320DFD4 LDR X8, [X0 + 0xB8]
	0x0320DFD8 LDR X21, [X8 + 0x8]
	0x0320DFDC CBNZ X21, 0x320E030
	0x0320DFE0 LDR W8, [X0 + 0xE0]
	0x0320DFE4 CBNZ W8, 0x320DFF0
	0x0320DFE8 BL 0x1C16DFC
	0x0320DFEC LDR X0, [X19]
	0x0320DFF0 ADRP X9, 0xF14000
	0x0320DFF4 LDR X8, [X0 + 0xB8]
	0x0320DFF8 LDR X9, [X9 + 0xA38]
	0x0320DFFC LDR X24, [X8]
	0x0320E000 LDR X0, [X9]
	0x0320E004 BL 0x1C16F10
	0x0320E008 ADRP X8, 0xF13000
	0x0320E00C LDR X8, [X8 + 0xA80]
	0x0320E010 MOV X1, X24
	0x0320E014 MOV X3, X31
	0x0320E018 MOV X21, X0
	0x0320E01C LDR X2, [X8]
	0x0320E020 BL 0x295A080
	0x0320E024 LDR X8, [X19]
	0x0320E028 LDR X8, [X8 + 0xB8]
	0x0320E02C STR X21, [X8 + 0x8]
	0x0320E030 CBZ X23, 0x320E0A4
	0x0320E034 ADRP X8, 0xF13000
	0x0320E038 LDR X8, [X8 + 0xA68]
	0x0320E03C ADRP X19, 0xF13000
	0x0320E040 ADRP X20, 0xF13000
	0x0320E044 MOV X0, X23
	0x0320E048 LDR X2, [X8]
	0x0320E04C LDR X19, [X19 + 0xA78]
	0x0320E050 LDR X20, [X20 + 0xA70]
	0x0320E054 MOV X1, X21
	0x0320E058 BL 0x301DD30
	0x0320E05C LDR X1, [X19]
	0x0320E060 MOV X0, X22
	0x0320E064 BL 0x301DDC4
	0x0320E068 LDR X8, [X31 + 0x10]
	0x0320E06C STR X0, [X8]
	0x0320E070 LDR X1, [X20]
	0x0320E074 MOV X0, X23
	0x0320E078 BL 0x301DDC4
	0x0320E07C LDR X8, [X31 + 0x18]
	0x0320E080 LDP X20, X19, [X31 + 0x80]
	0x0320E084 LDP X22, X21, [X31 + 0x70]
	0x0320E088 LDP X24, X23, [X31 + 0x60]
	0x0320E08C LDP X26, X25, [X31 + 0x50]
	0x0320E090 LDP X28, X27, [X31 + 0x40]
	0x0320E094 LDP X29, X30, [X31 + 0x30]
	0x0320E098 STR X0, [X8]
	0x0320E09C ADD X31, X31, 0x90
	0x0320E0A0 RET
	0x0320E0A4 BL 0x1C16F20
	0x0320E0A8 LDR X21, [X31 + 0x8]
	0x0320E0AC MOV X0, X21
	0x0320E0B0 BL 0x19903C0
	0x0320E0B4 LDR X8, [X21]
	0x0320E0B8 MOV X0, X21
	0x0320E0BC LDP X9, X1, [X8 + 0x198]
	0x0320E0C0 BLR X9
	0x0320E0C4 STR W0, [X31 + 0x2C]
	0x0320E0C8 ADRP X19, 0xEE5000
	0x0320E0CC LDR X19, [X19 + 0x758]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11D0000
	007 Move W8, [X21+660]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF15000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+660], W8
	019 Move W1, 1
	020 Move X0, X20
	021 Call SmallXmlParser.SkipWhitespaces, X0, X1
	022 Move X0, [X20+24]
	023 Compare X0, 0
	024 JumpIfEqual {89}
	025 Move X8, [X0]
	026 Move X9, [X8+440]
	027 Move X1, [X8+448]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X20+24]
	031 Compare X0, 0
	032 JumpIfEqual {89}
	033 Move X8, [X0]
	034 Move X9, [X8+440]
	035 Move X1, [X8+448]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, X20
	045 Call SmallXmlParser.ReadName, X0
	046 Move X21, X0
	047 Move X0, X20
	048 Move W1, W31
	049 Call SmallXmlParser.SkipWhitespaces, X0, X1
	050 Move W1, 61
	051 Move X0, X20
	052 Call SmallXmlParser.Expect, X0, X1
	053 Move X0, X20
	054 Move W1, W31
	055 Call SmallXmlParser.SkipWhitespaces, X0, X1
	056 Move X0, X20
	057 Call SmallXmlParser.Read, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W1, 34
	061 Move W1, 39
	062 Move W2, 1
	063 Move X0, X20
	064 Call SmallXmlParser.ReadUntil, X0, X1, X2
	065 Move X8, 0xF14000
	066 Move X8, [X8+2536]
	067 Move X22, X0
	068 Move X0, X21
	069 Move X2, X31
	070 Move X1, [X8]
	071 Call String.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {77}
	076 Move [X20+48], X22
	077 Compare X19, 0
	078 JumpIfEqual {89}
	079 Move X0, X19
	080 Move X1, X21
	081 Move X2, X22
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Call AttrListImpl.Add, X0, X1, X2
	088 Return 
	089 Call 0x1C17F20
	090 Move X0, 0xF14000
	091 Move X0, [X0+2544]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call SmallXmlParser.Error, X0, X1
	096 Move X19, X0
	097 Move X0, 0xF14000
	098 Move X0, [X0+2552]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call 0x1C17DEC

Method: System.Void ReadCDATASection()

Disassembly:
	0x0320DDEC B 0x320DF68
	0x0320DDF0 ADD W27, W27, 0x1
	0x0320DDF4 MOV W8, W27
	0x0320DDF8 LDRH W9, [X24, W8, SXTW]
	0x0320DDFC MOV W28, W8
	0x0320DE00 MOV W25, W26
	0x0320DE04 ADD W8, W8, 0x1
	0x0320DE08 ADD W26, W26, 0x1
	0x0320DE0C CBNZ W9, 0x320DDF8
	0x0320DE10 ADRP X8, 0xEEF000
	0x0320DE14 LDR X8, [X8 + 0x8D8]
	0x0320DE18 SUB W26, W28, W27
	0x0320DE1C MOV W1, W26
	0x0320DE20 LDR X0, [X8]
	0x0320DE24 BL 0x1C16D6C
	0x0320DE28 MOV X21, X0
	0x0320DE2C ADD X0, X24, W27, 0x1, SXTW
	0x0320DE30 MOV X1, X31
	0x0320DE34 BL 0x33C693C
	0x0320DE38 ADRP X8, 0xF0E000
	0x0320DE3C LDR X8, [X8 + 0x850]
	0x0320DE40 MOV X27, X0
	0x0320DE44 LDR X8, [X8]
	0x0320DE48 LDR W9, [X8 + 0xE0]
	0x0320DE4C CBNZ W9, 0x320DE58
	0x0320DE50 MOV X0, X8
	0x0320DE54 BL 0x1C16DFC
	0x0320DE58 MOV X0, X27
	0x0320DE5C MOV X1, X21
	0x0320DE60 MOV W2, W31
	0x0320DE64 MOV W3, W26
	0x0320DE68 MOV X4, X31
	0x0320DE6C BL 0x32C0D80
	0x0320DE70 ADRP X8, 0xEE6000
	0x0320DE74 LDR X8, [X8 + 0x618]
	0x0320DE78 MOVZ W1, 0x4
	0x0320DE7C LDR X0, [X8]
	0x0320DE80 BL 0x1C16D6C
	0x0320DE84 CBZ X0, 0x320E0A4
	0x0320DE88 LDR W8, [X0 + 0x18]
	0x0320DE8C MOV X26, X0
	0x0320DE90 MOV X9, X31
	0x0320DE94 CMP X9, X8
	0x0320DE98 B.CS 0x320E174
	0x0320DE9C SBFM X10, X25, 0x3F, 0x1F
	0x0320DEA0 LDRB W10, [X10, X24, LSL]
	0x0320DEA4 ADD X11, X26, X9
	0x0320DEA8 ADD X9, X9, 0x1
	0x0320DEAC CMP X9, 0x4
	0x0320DEB0 ADD W25, W25, 0x1
	0x0320DEB4 STRB W10, [X11 + 0x20]
	0x0320DEB8 B.NE 0x320DE94
	0x0320DEBC ADRP X8, 0xF14000
	0x0320DEC0 LDR X8, [X8 + 0xA40]
	0x0320DEC4 LDR X0, [X8]
	0x0320DEC8 BL 0x1C16F10
	0x0320DECC MOV X1, X31
	0x0320DED0 MOV X27, X0
	0x0320DED4 BL 0x33BDD8C
	0x0320DED8 LDR W8, [X31 + 0x24]
	0x0320DEDC STP X21, X31, [X27 + 0x18]
	0x0320DEE0 STR X26, [X27 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {44}
	009 Move W21, W31
	010 Move X8, [X0]
	011 Move X9, [X8+440]
	012 Move X1, [X8+448]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {59}
	018 Move X0, X19
	019 Call SmallXmlParser.Read, X0
	020 And W8, W0, 0xFFFF
	021 Move W20, W0
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W21, W21, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {44}
	029 NotImplemented "Instruction BIC not yet implemented."
	030 Add W21, W8, 1
	031 Subtract W21, W21, 1
	032 Move W1, 93
	033 Move X2, X31
	034 Call StringBuilder.Append, X0, X1
	035 Move X0, [X19+56]
	036 Compare X0, 0
	037 JumpIfNotEqual {31}
	038 Move W1, W20
	039 Move X2, X31
	040 Call StringBuilder.Append, X0, X1
	041 Move X0, [X19+24]
	042 Compare X0, 0
	043 JumpIfNotEqual {10}
	044 Call 0x1C17F20
	045 Add W20, W21, 1
	046 Move X0, [X19+56]
	047 Compare X0, 0
	048 JumpIfEqual {44}
	049 Move W1, 93
	050 Move X2, X31
	051 Call StringBuilder.Append, X0, X1
	052 Subtract W20, W20, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Move X0, X19
	060 Call SmallXmlParser.UnexpectedEndError, X0
	061 Move X19, X0
	062 Move X0, 0xF15000
	063 Move X0, [X0+2512]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: System.Void ReadComment()

Disassembly:
	0x0320DEE4 STR W8, [X27 + 0x10]
	0x0320DEE8 CBZ X22, 0x320E0A4
	0x0320DEEC ADRP X9, 0xF14000
	0x0320DEF0 LDR W10, [X22 + 0x1C]
	0x0320DEF4 LDR X8, [X22 + 0x10]
	0x0320DEF8 LDR X9, [X9 + 0xA50]
	0x0320DEFC ADD W10, W10, 0x1
	0x0320DF00 LDR X9, [X9]
	0x0320DF04 STR W10, [X22 + 0x1C]
	0x0320DF08 CBZ X8, 0x320E0A4
	0x0320DF0C LDRSW X10, [X22 + 0x18]
	0x0320DF10 LDR W11, [X8 + 0x18]
	0x0320DF14 CMP W10, W11
	0x0320DF18 B.CS 0x320DF4C
	0x0320DF1C ADD W9, W10, 0x1
	0x0320DF20 ADD X8, X8, X10, 0x3, LSL
	0x0320DF24 STR W9, [X22 + 0x18]
	0x0320DF28 STR X27, [X8 + 0x20]
	0x0320DF2C B 0x320DF64
	0x0320DF30 LDR X8, [X9 + 0x20]
	0x0320DF34 MOV X0, X22
	0x0320DF38 MOV X1, X26
	0x0320DF3C LDR X8, [X8 + 0xC0]
	0x0320DF40 LDR X2, [X8 + 0x70]
	0x0320DF44 BL 0x301BF90
	0x0320DF48 B 0x320DF68
	0x0320DF4C LDR X8, [X9 + 0x20]
	0x0320DF50 MOV X0, X22
	0x0320DF54 MOV X1, X27
	0x0320DF58 LDR X8, [X8 + 0xC0]
	0x0320DF5C LDR X2, [X8 + 0x70]
	0x0320DF60 BL 0x301BF90
	0x0320DF64 ADD W27, W28, 0x6
	0x0320DF68 LDR W8, [X31 + 0x24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W1, 45
	004 Move X19, X0
	005 Call SmallXmlParser.Expect, X0, X1
	006 Move W1, 45
	007 Move X0, X19
	008 Call SmallXmlParser.Expect, X0, X1
	009 Move X0, X19
	010 Call SmallXmlParser.Read, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X19
	013 Call SmallXmlParser.Read, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X19
	016 Call SmallXmlParser.Read, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return 
	021 Move X0, 0xF15000
	022 Move X0, [X0+2520]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X19
	026 Call SmallXmlParser.Error, X0, X1
	027 Move X19, X0
	028 Move X0, 0xF15000
	029 Move X0, [X0+2528]
	030 Call 0x1C17D08
	031 Move X1, X0
	032 Move X0, X19
	033 Call 0x1C17DEC

