Type: Mono.Math.Prime.PrimalityTests

Method: System.Int32 GetSPPRounds(Mono.Math.BigInteger bi, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x03225194 LDR X0, [X0 + 0xFB0]
	0x03225198 BL 0x1C16CF4
	0x0322519C MOVZ W8, 0x1
	0x032251A0 STRB W8, [X22 + 0x34E]
	0x032251A4 LDR X8, [X23]
	0x032251A8 LDR X8, [X8 + 0xB8]
	0x032251AC LDR X0, [X8]
	0x032251B0 CBZ X0, 0x32251D8
	0x032251B4 LDR X8, [X0]
	0x032251B8 MOV W1, W21
	0x032251BC MOV W2, W20
	0x032251C0 MOV W3, W19
	0x032251C4 LDP X5, X4, [X8 + 0x1A8]
	0x032251C8 LDP X20, X19, [X31 + 0x20]
	0x032251CC LDP X22, X21, [X31 + 0x10]
	0x032251D0 LDP X30, X23, [X31], #0x30
	0x032251D4 BR X5
	0x032251D8 LDP X20, X19, [X31 + 0x20]
	0x032251DC LDP X22, X21, [X31 + 0x10]
	0x032251E0 LDP X30, X23, [X31], #0x30
	0x032251E4 RET
	0x032251E8 STP X30, X25, [X31 - 0x40]!
	0x032251EC STP X24, X23, [X31 + 0x10]
	0x032251F0 STP X22, X21, [X31 + 0x20]
	0x032251F4 STP X20, X19, [X31 + 0x30]
	0x032251F8 ADRP X24, 0x11B7000
	0x032251FC ADRP X25, 0xEFC000
	0x03225200 LDRB W8, [X24 + 0x34F]
	0x03225204 LDR X25, [X25 + 0xFB0]
	0x03225208 MOV W19, W4
	0x0322520C MOV W20, W3
	0x03225210 MOV W21, W2
	0x03225214 MOV W22, W1
	0x03225218 MOV W23, W0
	0x0322521C TBNZ X8, 0x0, 0x3225234
	0x03225220 ADRP X0, 0xEFC000
	0x03225224 LDR X0, [X0 + 0xFB0]
	0x03225228 BL 0x1C16CF4
	0x0322522C MOVZ W8, 0x1
	0x03225230 STRB W8, [X24 + 0x34F]
	0x03225234 LDR X8, [X25]
	0x03225238 LDR X8, [X8 + 0xB8]
	0x0322523C LDR X0, [X8]
	0x03225240 CBZ X0, 0x3225274
	0x03225244 LDR X8, [X0]
	0x03225248 MOV W1, W23
	0x0322524C MOV W2, W22
	0x03225250 MOV W3, W21
	0x03225254 LDP X7, X6, [X8 + 0x1B8]
	0x03225258 MOV W4, W20
	0x0322525C MOV W5, W19
	0x03225260 LDP X20, X19, [X31 + 0x30]
	0x03225264 LDP X22, X21, [X31 + 0x20]
	0x03225268 LDP X24, X23, [X31 + 0x10]
	0x0322526C LDP X30, X25, [X31], #0x40
	0x03225270 BR X7
	0x03225274 LDP X20, X19, [X31 + 0x30]
	0x03225278 LDP X22, X21, [X31 + 0x20]
	0x0322527C LDP X24, X23, [X31 + 0x10]
	0x03225280 LDP X30, X25, [X31], #0x40
	0x03225284 RET
	0x03225288 STR X30, [X31 - 0x10]!
	0x0322528C MOV X1, X31
	0x03225290 BL 0x32C2380
	0x03225294 CBZ X0, 0x32252A4
	0x03225298 MOV X1, X31
	0x0322529C LDR X30, [X31], #0x10
	0x032252A0 B 0x32C2440
	0x032252A4 BL 0x1C16F20
	0x032252A8 STR X30, [X31 - 0x20]!
	0x032252AC STP X20, X19, [X31 + 0x10]
	0x032252B0 ADRP X20, 0x11B7000
	0x032252B4 ADRP X19, 0xEFC000
	0x032252B8 LDRB W8, [X20 + 0x350]
	0x032252BC LDR X19, [X19 + 0xFB8]
	0x032252C0 TBNZ X8, 0x0, 0x32252D8
	0x032252C4 ADRP X0, 0xEFC000
	0x032252C8 LDR X0, [X0 + 0xFB8]
	0x032252CC BL 0x1C16CF4
	0x032252D0 MOVZ W8, 0x1
	0x032252D4 STRB W8, [X20 + 0x350]
	0x032252D8 LDR X0, [X19]
	0x032252DC LDR W8, [X0 + 0xE0]
	0x032252E0 CBNZ W8, 0x32252EC
	0x032252E4 BL 0x1C16DFC
	0x032252E8 LDR X0, [X19]
	0x032252EC LDR X8, [X0 + 0xB8]
	0x032252F0 LDP X20, X19, [X31 + 0x10]
	0x032252F4 LDR X0, [X8]
	0x032252F8 LDR X30, [X31], #0x20
	0x032252FC RET
	0x03225300 STP X30, X21, [X31 - 0x20]!
	0x03225304 STP X20, X19, [X31 + 0x10]
	0x03225308 ADRP X19, 0x11B7000
	0x0322530C ADRP X21, 0xEFC000
	0x03225310 ADRP X20, 0xEFC000
	0x03225314 LDRB W8, [X19 + 0x351]
	0x03225318 LDR X21, [X21 + 0xFC0]
	0x0322531C LDR X20, [X20 + 0xFB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {55}
	005 Move W19, W1
	006 Call BigInteger.BitCount, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 2
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move W0, 27
	021 Move W0, 18
	022 Move W0, 15
	023 Move W0, 12
	024 Move W0, 9
	025 Move W0, 8
	026 Move W0, 7
	027 Move W0, 6
	028 Move W0, 5
	029 Move W0, 4
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, -40427520
	032 Move W8, W19
	033 Add X9, X9, 1053
	034 NotImplemented "Instruction ADR not yet implemented."
	035 Move W11, [X9]
	036 Add X10, X10, X11
	037 CallNoReturn X10
	038 Move W8, W0
	039 ShiftRight W8, 2
	040 And W8, W8, 0x7FFFFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSINC not yet implemented."
	043 Move W0, W0
	044 ShiftRight W0, 1
	045 And W0, W0, 0x7FFFFFFF
	046 Move W0, W0
	047 ShiftRight W0, 31
	048 And W0, W0, 0x3FFFFFFF
	049 Move W0, W0
	050 ShiftRight W0, 30
	051 And W0, W0, 0x1FFFFFFF
	052 Move X30, [X31+16]
	053 Move X19, [X31+24]
	054 Return X0
	055 Call 0x1C17F20
	056 Move X0, 0xED7000
	057 Move X0, [X0+1888]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0xEFD000
	062 Move X0, [X0+1904]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentOutOfRangeException..ctor, X0, X1
	068 Move X0, 0xECF000
	069 Move X0, [X0+2000]
	070 Call 0x1C17D08
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Move X0, 0xEFD000
	074 Move X0, [X0+1912]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Move X2, X31
	079 Call Exception..ctor, X0, X1
	080 Move X0, 0xEFD000
	081 Move X0, [X0+3968]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Call 0x1C17DEC

Method: System.Boolean Test(Mono.Math.BigInteger n, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x032242D0 BL 0x3316014
	0x032242D4 B 0x3224308
	0x032242D8 ADRP X0, 0xECF000
	0x032242DC LDR X0, [X0 + 0x7D0]
	0x032242E0 BL 0x1C16D08
	0x032242E4 BL 0x1C16F10
	0x032242E8 MOV X19, X0
	0x032242EC ADRP X0, 0xEFD000
	0x032242F0 LDR X0, [X0 + 0x778]
	0x032242F4 BL 0x1C16D08
	0x032242F8 MOV X1, X0
	0x032242FC MOV X0, X19
	0x03224300 MOV X2, X31
	0x03224304 BL 0x33B2C70
	0x03224308 ADRP X0, 0xEFD000
	0x0322430C LDR X0, [X0 + 0xF80]
	0x03224310 BL 0x1C16D08
	0x03224314 MOV X1, X0
	0x03224318 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {24}
	006 Move W19, W1
	007 Move X20, X0
	008 Call BigInteger.BitCount, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X20
	011 Move W1, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Call PrimalityTests.RabinMillerTest, X0, X1
	016 Return X0
	017 Move X0, X20
	018 Move W1, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Call PrimalityTests.SmallPrimeSppTest, X0, X1
	023 Return X0
	024 Call 0x1C17F20

Method: System.Boolean RabinMillerTest(Mono.Math.BigInteger n, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x032254F8 STR X30, [X31 - 0x20]!
	0x032254FC STP X20, X19, [X31 + 0x10]
	0x03225500 ADRP X19, 0x11B7000
	0x03225504 ADRP X20, 0xEF7000
	0x03225508 LDRB W8, [X19 + 0x354]
	0x0322550C LDR X20, [X20 + 0xE48]
	0x03225510 TBNZ X8, 0x0, 0x3225528
	0x03225514 ADRP X0, 0xEF7000
	0x03225518 LDR X0, [X0 + 0xE48]
	0x0322551C BL 0x1C16CF4
	0x03225520 MOVZ W8, 0x1
	0x03225524 STRB W8, [X19 + 0x354]
	0x03225528 LDR X8, [X20]
	0x0322552C LDP X20, X19, [X31 + 0x10]
	0x03225530 MOVZ W9, 0x40
	0x03225534 LDR X8, [X8 + 0xB8]
	0x03225538 STR W9, [X8]
	0x0322553C LDR X30, [X31], #0x20
	0x03225540 RET
	0x03225544 STR X30, [X31 - 0x20]!
	0x03225548 STP X20, X19, [X31 + 0x10]
	0x0322554C ADRP X20, 0x11B7000
	0x03225550 LDRB W8, [X20 + 0x355]
	0x03225554 MOV X19, X0
	0x03225558 TBNZ X8, 0x0, 0x3225570
	0x0322555C ADRP X0, 0xECE000
	0x03225560 LDR X0, [X0 + 0x618]
	0x03225564 BL 0x1C16CF4
	0x03225568 MOVZ W8, 0x1
	0x0322556C STRB W8, [X20 + 0x355]
	0x03225570 CBZ X19, 0x32255AC
	0x03225574 MOV X0, X19
	0x03225578 MOV X1, X31
	0x0322557C BL 0x33A01F0
	0x03225580 CBZ X0, 0x32255B0
	0x03225584 ADRP X8, 0xECE000
	0x03225588 LDR X8, [X8 + 0x618]
	0x0322558C MOV X19, X0
	0x03225590 LDR X20, [X8]
	0x03225594 MOV X1, X20
	0x03225598 BL 0x1C16E00
	0x0322559C CBNZ X0, 0x32255B0
	0x032255A0 MOV X0, X19
	0x032255A4 MOV X1, X20
	0x032255A8 BL 0x1C171E0
	0x032255AC MOV X0, X31
	0x032255B0 LDP X20, X19, [X31 + 0x10]
	0x032255B4 LDR X30, [X31], #0x20
	0x032255B8 RET
	0x032255BC STR X30, [X31 - 0x20]!
	0x032255C0 STP X20, X19, [X31 + 0x10]
	0x032255C4 ADRP X20, 0x11B7000
	0x032255C8 LDRB W8, [X20 + 0x356]
	0x032255CC MOV X19, X0
	0x032255D0 TBNZ X8, 0x0, 0x32255E8
	0x032255D4 ADRP X0, 0xED7000
	0x032255D8 LDR X0, [X0 + 0x8D8]
	0x032255DC BL 0x1C16CF4
	0x032255E0 MOVZ W8, 0x1
	0x032255E4 STRB W8, [X20 + 0x356]
	0x032255E8 CBZ X19, 0x32256A4
	0x032255EC ADRP X8, 0xED7000
	0x032255F0 LDR X8, [X8 + 0x8D8]
	0x032255F4 LDR W9, [X19 + 0x18]
	0x032255F8 LDR X0, [X8]
	0x032255FC UBFM W1, W9, 0x1F, 0x1E
	0x03225600 BL 0x1C16D6C
	0x03225604 LDR X9, [X19 + 0x18]
	0x03225608 CMP W9, 0x1
	0x0322560C B.LT 0x3225694
	0x03225610 AND X9, X9, 0x0
	0x03225614 MOV X8, X31
	0x03225618 MOV W14, W31
	0x0322561C ADD X10, X19, 0x20
	0x03225620 MOVZ W11, 0x37
	0x03225624 SXTW X12, W9
	0x03225628 MOVZ W13, 0x30
	0x0322562C CMP X8, X9
	0x03225630 B.CS 0x32256A0
	0x03225634 LDRB W15, [X10, X8, LSL]
	0x03225638 CMP W15, 0xA0
	0x0322563C CSEL W16, W13, W11, CC
	0x03225640 CBZ X0, 0x32256A4
	0x03225644 LDR W17, [X0 + 0x18]
	0x03225648 CMP W14, W17
	0x0322564C B.CS 0x32256A0
	0x03225650 ADD W1, W16, W15, 0x4, LSR
	0x03225654 ADD W16, W14, 0x1
	0x03225658 ADD X2, X0, W14, 0x1, SXTW
	0x0322565C CMP W16, W17
	0x03225660 STRH W1, [X2 + 0x20]
	0x03225664 B.CS 0x32256A0
	0x03225668 AND W15, W15, 0xF
	0x0322566C CMP W15, 0xA
	0x03225670 ADD W14, W14, 0x1
	0x03225674 CSEL W17, W13, W11, CC
	0x03225678 ADD X8, X8, 0x1
	0x0322567C ADD X14, X0, W14, 0x1, SXTW
	0x03225680 ADD W15, W17, W15
	0x03225684 CMP X8, X12
	0x03225688 STRH W15, [X14 + 0x20]
	0x0322568C ADD W14, W16, 0x1
	0x03225690 B.LT 0x322562C
	0x03225694 LDP X20, X19, [X31 + 0x10]
	0x03225698 LDR X30, [X31], #0x20
	0x0322569C RET
	0x032256A0 BL 0x1C16F28
	0x032256A4 BL 0x1C16F20
	0x032256A8 AND W8, W0, 0xFF
	0x032256AC MOVZ W9, 0x37
	0x032256B0 CMP W8, 0xA
	0x032256B4 MOVZ W8, 0x30
	0x032256B8 CSEL W8, W8, W9, CC
	0x032256BC ADD W0, W8, W0, UXTB
	0x032256C0 RET
	0x032256C4 STR X30, [X31 - 0x10]!
	0x032256C8 BL 0x32255BC
	0x032256CC LDR X30, [X31], #0x10
	0x032256D0 B 0x322CD98
	0x032256D4 MOV X0, X1
	0x032256D8 B 0x322CD98
	0x032256DC STR X30, [X31 - 0x10]!
	0x032256E0 CBZ X0, 0x3225704
	0x032256E4 CBZ X1, 0x3225704
	0x032256E8 LDRSW X8, [X0 + 0x10]
	0x032256EC ADD X0, X0, 0x14
	0x032256F0 ADD X1, X1, 0x14
	0x032256F4 MOV X3, X31
	0x032256F8 UBFM X2, X8, 0x3F, 0x3E
	0x032256FC LDR X30, [X31], #0x10
	0x03225700 B 0x3391068
	0x03225704 BL 0x1C16F20
	0x03225708 ADD X0, X0, 0x14
	0x0322570C RET
	0x03225710 STR X30, [X31 - 0x10]!
	0x03225714 CBZ X0, 0x3225744
	0x03225718 CBZ X3, 0x3225744
	0x0322571C ADD X8, X0, W1, 0x1, SXTW
	0x03225720 ADD X9, X3, W4, 0x1, SXTW
	0x03225724 ADD X0, X8, 0x14
	0x03225728 ADD X8, X9, 0x14
	0x0322572C MOV W1, W2
	0x03225730 MOV X2, X8
	0x03225734 MOV W3, W5
	0x03225738 MOV X4, X31
	0x0322573C LDR X30, [X31], #0x10
	0x03225740 B 0x33911D8
	0x03225744 BL 0x1C16F20
	0x03225748 STR X30, [X31 - 0x30]!
	0x0322574C STP X22, X21, [X31 + 0x10]
	0x03225750 STP X20, X19, [X31 + 0x20]
	0x03225754 ADRP X21, 0x11B7000
	0x03225758 LDRB W8, [X21 + 0x357]
	0x0322575C MOV X19, X1
	0x03225760 MOV X20, X0
	0x03225764 TBNZ X8, 0x0, 0x322577C
	0x03225768 ADRP X0, 0xECE000
	0x0322576C LDR X0, [X0 + 0x5A8]
	0x03225770 BL 0x1C16CF4
	0x03225774 MOVZ W8, 0x1
	0x03225778 STRB W8, [X21 + 0x357]
	0x0322577C CBZ X20, 0x3225900
	0x03225780 CBZ X19, 0x3225900
	0x03225784 ADRP X8, 0xECE000
	0x03225788 LDR X8, [X8 + 0x5A8]
	0x0322578C LDR W21, [X20 + 0x10]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x11B8000
	013 Move W8, [X19+832]
	014 Move W20, W1
	015 Move X25, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xEFD000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0xEFD000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+832], W8
	028 Compare X25, 0
	029 JumpIfEqual {203}
	030 Move X26, 0xEFD000
	031 Move X26, [X26+3472]
	032 Move X0, X25
	033 Call BigInteger.BitCount, X0
	034 Move X8, [X26]
	035 Move W19, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W0, W19
	042 Call BigInteger.op_Implicit, X0
	043 Move W1, W20
	044 Call PrimalityTests.GetSPPRounds, X0, X1
	045 Move W20, W0
	046 Move W0, 1
	047 Call BigInteger.op_Implicit, X0
	048 Move X1, X0
	049 Move X0, X25
	050 Call BigInteger.op_Subtraction, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {203}
	053 Move X23, 0xEFD000
	054 Move X23, [X23+3528]
	055 Move X21, X0
	056 Call BigInteger.LowestSetBit, X0
	057 Move W22, W0
	058 Move X0, X21
	059 Move W1, W22
	060 Call Kernel.RightShift, X0, X1
	061 Move X8, [X23]
	062 Move X23, X0
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X1, X25
	066 Move X24, X0
	067 Call ModulusRing..ctor, X0, X1
	068 Move X0, X25
	069 Call BigInteger.BitCount, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X25, X31
	072 Compare X24, 0
	073 JumpIfEqual {203}
	074 Move W1, 2
	075 Move X0, X24
	076 Move X2, X23
	077 Call ModulusRing.Pow, X0, X1, X2
	078 Move X25, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W27, W31
	081 Compare W27, 0
	082 JumpIfNotEqual {95}
	083 Move X0, [X26]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X25
	089 Move X1, X31
	090 Call BigInteger.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {128}
	095 Move X0, [X26]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W0, W19
	101 Call BigInteger.GenerateRandom, X0
	102 Move X25, X0
	103 Move W0, 2
	104 Call BigInteger.op_Implicit, X0
	105 Move X1, X0
	106 Move X0, X25
	107 Call Kernel.Compare, X0, X1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X26]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X25
	115 Move X1, X21
	116 Call Kernel.Compare, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, -2147483648
	119 Compare TEMP, -2147483648
	120 JumpIfNotEqual {95}
	121 Compare X24, 0
	122 JumpIfEqual {203}
	123 Move X0, X24
	124 Move X1, X25
	125 Move X2, X23
	126 Call ModulusRing.Pow, X0, X1, X2
	127 Move X25, X0
	128 Move X0, [X26]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move W1, 1
	134 Move X0, X25
	135 Call BigInteger.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {187}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W28, W22
	142 Move X0, [X26]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X25
	148 Move X1, X21
	149 Call BigInteger.op_Inequality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {175}
	154 Move X0, [X26]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move W0, 2
	160 Call BigInteger.op_Implicit, X0
	161 Compare X24, 0
	162 JumpIfEqual {203}
	163 Move X2, X0
	164 Move X0, X24
	165 Move X1, X25
	166 Call ModulusRing.Pow, X0, X1, X2
	167 Move W1, 1
	168 Move X25, X0
	169 Call BigInteger.op_Equality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {190}
	174 Subtract W28, W28, 1
	175 Move X0, [X26]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X25
	181 Move X1, X21
	182 Call BigInteger.op_Inequality, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {190}
	187 Add W27, W27, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W0, 1
	190 Move W0, W31
	191 Move X20, [X31+80]
	192 Move X19, [X31+88]
	193 Move X22, [X31+64]
	194 Move X21, [X31+72]
	195 Move X24, [X31+48]
	196 Move X23, [X31+56]
	197 Move X26, [X31+32]
	198 Move X25, [X31+40]
	199 Move X28, [X31+16]
	200 Move X27, [X31+24]
	201 Move X30, [X31+96]
	202 Return X0
	203 Call 0x1C17F20

Method: System.Boolean SmallPrimeSppTest(Mono.Math.BigInteger bi, Mono.Math.Prime.ConfidenceFactor confidence)

Disassembly:
	0x03225320 TBNZ X8, 0x0, 0x3225344
	0x03225324 ADRP X0, 0xEFC000
	0x03225328 LDR X0, [X0 + 0xFC0]
	0x0322532C BL 0x1C16CF4
	0x03225330 ADRP X0, 0xEFC000
	0x03225334 LDR X0, [X0 + 0xFB8]
	0x03225338 BL 0x1C16CF4
	0x0322533C MOVZ W8, 0x1
	0x03225340 STRB W8, [X19 + 0x351]
	0x03225344 LDR X0, [X21]
	0x03225348 BL 0x1C16F10
	0x0322534C MOV X1, X31
	0x03225350 MOV X19, X0
	0x03225354 BL 0x33BDD8C
	0x03225358 LDR X8, [X20]
	0x0322535C LDR X8, [X8 + 0xB8]
	0x03225360 STR X19, [X8]
	0x03225364 LDP X20, X19, [X31 + 0x10]
	0x03225368 LDP X30, X21, [X31], #0x20
	0x0322536C RET
	0x03225370 MOV X1, X31
	0x03225374 B 0x33BDD8C
	0x03225378 STR X30, [X31 - 0x20]!
	0x0322537C STP X20, X19, [X31 + 0x10]
	0x03225380 ADRP X19, 0x11B7000
	0x03225384 ADRP X20, 0xEFC000
	0x03225388 LDRB W8, [X19 + 0x352]
	0x0322538C LDR X20, [X20 + 0xFC8]
	0x03225390 TBNZ X8, 0x0, 0x32253A8
	0x03225394 ADRP X0, 0xEFC000
	0x03225398 LDR X0, [X0 + 0xFC8]
	0x0322539C BL 0x1C16CF4
	0x032253A0 MOVZ W8, 0x1
	0x032253A4 STRB W8, [X19 + 0x352]
	0x032253A8 LDR X0, [X20]
	0x032253AC BL 0x1C16F10
	0x032253B0 MOV X1, X31
	0x032253B4 MOV X19, X0
	0x032253B8 BL 0x32D4588
	0x032253BC MOV X0, X19
	0x032253C0 LDP X20, X19, [X31 + 0x10]
	0x032253C4 LDR X30, [X31], #0x20
	0x032253C8 RET
	0x032253CC STR X30, [X31 - 0x20]!
	0x032253D0 STP X20, X19, [X31 + 0x10]
	0x032253D4 MOV X19, X1
	0x032253D8 MOV X1, X31
	0x032253DC MOV X20, X0
	0x032253E0 BL 0x33BDD8C
	0x032253E4 STR X19, [X20 + 0x10]
	0x032253E8 LDP X20, X19, [X31 + 0x10]
	0x032253EC LDR X30, [X31], #0x20
	0x032253F0 RET
	0x032253F4 STP X30, X23, [X31 - 0x30]!
	0x032253F8 STP X22, X21, [X31 + 0x10]
	0x032253FC STP X20, X19, [X31 + 0x20]
	0x03225400 ADRP X21, 0x11B7000
	0x03225404 ADRP X23, 0xEFA000
	0x03225408 ADRP X22, 0xEF7000
	0x0322540C LDRB W8, [X21 + 0x353]
	0x03225410 LDR X23, [X23 + 0x1D8]
	0x03225414 LDR X22, [X22 + 0xE48]
	0x03225418 MOV W19, W1
	0x0322541C MOV X20, X0
	0x03225420 TBNZ X8, 0x0, 0x3225444
	0x03225424 ADRP X0, 0xEF7000
	0x03225428 LDR X0, [X0 + 0xE48]
	0x0322542C BL 0x1C16CF4
	0x03225430 ADRP X0, 0xEFA000
	0x03225434 LDR X0, [X0 + 0x1D8]
	0x03225438 BL 0x1C16CF4
	0x0322543C MOVZ W8, 0x1
	0x03225440 STRB W8, [X21 + 0x353]
	0x03225444 LDR X0, [X23]
	0x03225448 BL 0x1C16F10
	0x0322544C MOV X1, X20
	0x03225450 MOV W2, W19
	0x03225454 MOV X3, X31
	0x03225458 MOV X21, X0
	0x0322545C BL 0x33E6984
	0x03225460 LDR X0, [X22]
	0x03225464 BL 0x1C16F10
	0x03225468 MOV X1, X31
	0x0322546C MOV X19, X0
	0x03225470 BL 0x33BDD8C
	0x03225474 STR X21, [X19 + 0x10]
	0x03225478 MOV X0, X19
	0x0322547C LDP X20, X19, [X31 + 0x20]
	0x03225480 LDP X22, X21, [X31 + 0x10]
	0x03225484 LDP X30, X23, [X31], #0x30
	0x03225488 RET
	0x0322548C STR X30, [X31 - 0x10]!
	0x03225490 LDR X0, [X0 + 0x10]
	0x03225494 CBZ X0, 0x32254A8
	0x03225498 AND W1, W1, 0x1
	0x0322549C MOV X2, X31
	0x032254A0 LDR X30, [X31], #0x10
	0x032254A4 B 0x33E7018
	0x032254A8 BL 0x1C16F20
	0x032254AC STR X30, [X31 - 0x10]!
	0x032254B0 LDR X0, [X0 + 0x10]
	0x032254B4 CBZ X0, 0x32254C4
	0x032254B8 MOV X2, X31
	0x032254BC LDR X30, [X31], #0x10
	0x032254C0 B 0x33E6B3C
	0x032254C4 BL 0x1C16F20
	0x032254C8 MOV X1, X31
	0x032254CC B 0x33E3BEC
	0x032254D0 MOV X0, X31
	0x032254D4 B 0x33E3C64
	0x032254D8 STR X30, [X31 - 0x10]!
	0x032254DC MOV X1, X31
	0x032254E0 BL 0x33E3BC4
	0x032254E4 MOVZ W0, 0x1
	0x032254E8 LDR X30, [X31], #0x10
	0x032254EC RET
	0x032254F0 MOVZ W0, 0x1
	0x032254F4 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x11B8000
	014 Move X25, 0xEFD000
	015 Move W8, [X21+833]
	016 Move X25, [X25+3472]
	017 Move W20, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xEFD000
	024 Move X0, [X0+3472]
	025 Call 0x1C17CF4
	026 Move X0, 0xEFD000
	027 Move X0, [X0+3528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+833], W8
	031 Move X0, X19
	032 Move W1, W20
	033 Call PrimalityTests.GetSPPRounds, X0, X1
	034 Move X8, [X25]
	035 Move W24, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W0, 1
	042 Call BigInteger.op_Implicit, X0
	043 Move X1, X0
	044 Move X0, X19
	045 Call BigInteger.op_Subtraction, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {138}
	048 Move X22, 0xEFD000
	049 Move X22, [X22+3528]
	050 Move X20, X0
	051 Call BigInteger.LowestSetBit, X0
	052 Move W21, W0
	053 Move X0, X20
	054 Move W1, W21
	055 Call Kernel.RightShift, X0, X1
	056 Move X8, [X22]
	057 Move X22, X0
	058 Move X0, X8
	059 Call 0x1C17F10
	060 Move X1, X19
	061 Move X23, X0
	062 Call ModulusRing..ctor, X0, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X27, X31
	065 Move W28, W24
	066 Move W26, 1
	067 Move X0, [X25]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X25]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {138}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X23, 0
	080 JumpIfEqual {138}
	081 Add X8, X8, X27
	082 Move W1, [X8+32]
	083 Move X0, X23
	084 Move X2, X22
	085 Call ModulusRing.Pow, X0, X1, X2
	086 Move W1, 1
	087 Move X24, X0
	088 Call BigInteger.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {96}
	093 Add X27, X27, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W29, W21
	098 Move X0, [X25]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X24
	104 Move X1, X20
	105 Call BigInteger.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {93}
	110 Move X0, [X25]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X24
	116 Move X1, X24
	117 Call BigInteger.op_Multiply, X0, X1
	118 Move X1, X19
	119 Call BigInteger.op_Modulus, X0, X1
	120 Subtract W29, W29, 1
	121 Move X24, X0
	122 Move W26, W31
	123 NotImplemented "Instruction ORN not yet implemented."
	124 Move X20, [X31+80]
	125 Move X19, [X31+88]
	126 Move X22, [X31+64]
	127 Move X21, [X31+72]
	128 Move X24, [X31+48]
	129 Move X23, [X31+56]
	130 Move X26, [X31+32]
	131 Move X25, [X31+40]
	132 Move X28, [X31+16]
	133 Move X27, [X31+24]
	134 And W0, W8, 1
	135 Move X29, [X31+96]
	136 Move X30, [X31+104]
	137 Return X0
	138 Call 0x1C17F20
	139 Call 0x1C17F28

