Type: Mono.Math.Prime.Generator.PrimeGeneratorBase

Method: Mono.Math.Prime.ConfidenceFactor get_Confidence()

Disassembly:
	0x03225790 LDR W22, [X19 + 0x10]
	0x03225794 LDR X0, [X8]

ISIL:
	001 Move W0, 2
	002 Return X0

Method: Mono.Math.Prime.PrimalityTest get_PrimalityTest()

Disassembly:
	0x03225798 LDR W8, [X0 + 0xE0]
	0x0322579C CBNZ W8, 0x32257A4
	0x032257A0 BL 0x1C16DFC
	0x032257A4 MOV W0, W21
	0x032257A8 MOV W1, W22
	0x032257AC MOV X2, X31
	0x032257B0 BL 0x337EE94
	0x032257B4 MOV X8, X20
	0x032257B8 MOV X9, X19
	0x032257BC LDRH W10, [X8 + 0x16]!
	0x032257C0 LDRH W11, [X9 + 0x16]!
	0x032257C4 CMP W10, W11
	0x032257C8 B.NE 0x32258E4
	0x032257CC SUB X11, X8, 0x2
	0x032257D0 SUB X10, X9, 0x2
	0x032257D4 SUB W12, W0, 0x2
	0x032257D8 ADD X8, X11, 0x4
	0x032257DC CMP W12, 0xC
	0x032257E0 ADD X9, X10, 0x4
	0x032257E4 B.LT 0x3225864
	0x032257E8 MOV X12, X31
	0x032257EC ADD W13, W0, 0xA
	0x032257F0 SUB X14, X11, 0x14
	0x032257F4 SUB X15, X10, 0x14
	0x032257F8 ADD X16, X14, X12
	0x032257FC ADD X17, X15, X12
	0x03225800 LDR X0, [X16 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11B8000
	006 Move X21, 0xEFD000
	007 Move X19, 0xEFD000
	008 Move W8, [X20+834]
	009 Move X21, [X21+3976]
	010 Move X19, [X19+3984]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEFD000
	016 Move X0, [X0+3976]
	017 Call 0x1C17CF4
	018 Move X0, 0xEFD000
	019 Move X0, [X0+3984]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+834], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X2, [X19]
	026 Move X1, X31
	027 Move X19, X0
	028 Call PrimalityTest..ctor, X0, X1, X2
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Int32 get_TrialDivisionBounds()

Disassembly:
	0x03225804 LDR X1, [X17 + 0x18]
	0x03225808 CMP X0, X1

ISIL:
	001 Move W0, 4000
	002 Return X0

Method: Mono.Math.BigInteger GenerateNewPrime(System.Int32 bits)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x0322580C B.NE 0x32258B8
	0x03225810 LDR X16, [X16 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

