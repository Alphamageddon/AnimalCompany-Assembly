Type: Mono.Math.BigInteger/Kernel

Method: Mono.Math.BigInteger Subtract(Mono.Math.BigInteger big, Mono.Math.BigInteger small)

Disassembly:
	0x0322261C B 0x3222620
	0x03222620 STR X30, [X31 - 0x10]!
	0x03222624 LDR W9, [X0 + 0x10]
	0x03222628 UBFM W8, W1, 0x5, 0x1F
	0x0322262C CMP W8, W9
	0x03222630 B.CS 0x322266C
	0x03222634 LDR X9, [X0 + 0x18]
	0x03222638 CBZ X9, 0x3222674
	0x0322263C LDR W10, [X9 + 0x18]
	0x03222640 CMP W8, W10
	0x03222644 B.CS 0x3222678
	0x03222648 ADD X8, X9, W8, 0x2, UXTW
	0x0322264C LDR W9, [X8 + 0x20]
	0x03222650 MOVZ W10, 0x1
	0x03222654 LSLV W10, W10, W1
	0x03222658 ANDS W31, W2, 0x1
	0x0322265C BIC W11, W9, W10, 0x0
	0x03222660 ORR W9, W9, W10, 0x0
	0x03222664 CSEL W9, W9, W11, NE
	0x03222668 STR W9, [X8 + 0x20]
	0x0322266C LDR X30, [X31], #0x10
	0x03222670 RET
	0x03222674 BL 0x1C16F20
	0x03222678 BL 0x1C16F28
	0x0322267C STP X30, X21, [X31 - 0x20]!
	0x03222680 STP X20, X19, [X31 + 0x10]
	0x03222684 ADRP X20, 0x11BA000
	0x03222688 ADRP X21, 0xEFF000
	0x0322268C LDRB W8, [X20 + 0x327]
	0x03222690 LDR X21, [X21 + 0xD90]
	0x03222694 MOV X19, X0
	0x03222698 TBNZ X8, 0x0, 0x32226B0
	0x0322269C ADRP X0, 0xEFF000
	0x032226A0 LDR X0, [X0 + 0xD90]
	0x032226A4 BL 0x1C16CF4
	0x032226A8 MOVZ W8, 0x1
	0x032226AC STRB W8, [X20 + 0x327]
	0x032226B0 LDR X0, [X21]
	0x032226B4 LDR W8, [X0 + 0xE0]
	0x032226B8 CBNZ W8, 0x32226C0
	0x032226BC BL 0x1C16DFC
	0x032226C0 MOV X0, X19
	0x032226C4 MOV W1, W31
	0x032226C8 BL 0x321FE58
	0x032226CC MOVN W20, 0x0
	0x032226D0 TBNZ X0, 0x0, 0x32226E8
	0x032226D4 ADD W20, W20, 0x1
	0x032226D8 MOV X0, X19
	0x032226DC MOV W1, W20
	0x032226E0 BL 0x3222584
	0x032226E4 TBZ X0, 0x0, 0x32226D4
	0x032226E8 MOV W0, W20
	0x032226EC LDP X20, X19, [X31 + 0x10]
	0x032226F0 LDP X30, X21, [X31], #0x20
	0x032226F4 RET
	0x032226F8 STR X30, [X31 - 0x10]!
	0x032226FC BL 0x32214D8
	0x03222700 CMP W0, 0x0
	0x03222704 CSET W0, GT
	0x03222708 LDR X30, [X31], #0x10
	0x0322270C RET
	0x03222710 STR X30, [X31 - 0x30]!
	0x03222714 STP X22, X21, [X31 + 0x10]
	0x03222718 STP X20, X19, [X31 + 0x20]
	0x0322271C ADRP X21, 0x11BA000
	0x03222720 ADRP X22, 0xEFF000
	0x03222724 LDRB W8, [X21 + 0x32B]
	0x03222728 LDR X22, [X22 + 0x710]
	0x0322272C MOV W19, W1
	0x03222730 MOV X20, X0
	0x03222734 TBNZ X8, 0x0, 0x322274C
	0x03222738 ADRP X0, 0xEFF000
	0x0322273C LDR X0, [X0 + 0x710]
	0x03222740 BL 0x1C16CF4
	0x03222744 MOVZ W8, 0x1
	0x03222748 STRB W8, [X21 + 0x32B]
	0x0322274C LDR X2, [X22]
	0x03222750 MOV X0, X20
	0x03222754 MOV W1, W19
	0x03222758 LDP X20, X19, [X31 + 0x20]
	0x0322275C LDP X22, X21, [X31 + 0x10]
	0x03222760 LDR X30, [X31], #0x30
	0x03222764 B 0x3222768
	0x03222768 STR X30, [X31 - 0x50]!
	0x0322276C STP X26, X25, [X31 + 0x10]
	0x03222770 STP X24, X23, [X31 + 0x20]
	0x03222774 STP X22, X21, [X31 + 0x30]
	0x03222778 STP X20, X19, [X31 + 0x40]
	0x0322277C ADRP X22, 0x11BA000
	0x03222780 LDRB W8, [X22 + 0x32C]
	0x03222784 MOV X19, X2
	0x03222788 MOV W20, W1
	0x0322278C MOV X21, X0
	0x03222790 TBNZ X8, 0x0, 0x32227D8
	0x03222794 ADRP X0, 0xEFF000
	0x03222798 LDR X0, [X0 + 0xD90]
	0x0322279C BL 0x1C16CF4
	0x032227A0 ADRP X0, 0xED3000
	0x032227A4 LDR X0, [X0 + 0x170]
	0x032227A8 BL 0x1C16CF4
	0x032227AC ADRP X0, 0xED1000
	0x032227B0 LDR X0, [X0 + 0x988]
	0x032227B4 BL 0x1C16CF4
	0x032227B8 ADRP X0, 0xEF5000
	0x032227BC LDR X0, [X0 + 0xEC0]
	0x032227C0 BL 0x1C16CF4
	0x032227C4 ADRP X0, 0xED3000
	0x032227C8 LDR X0, [X0 + 0x4B0]
	0x032227CC BL 0x1C16CF4
	0x032227D0 MOVZ W8, 0x1
	0x032227D4 STRB W8, [X22 + 0x32C]
	0x032227D8 STRH W31, [X31 + 0xC]
	0x032227DC CBZ X19, 0x3222918

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11BB000
	007 Move W8, [X20+824]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF00000
	015 Move X0, [X0+3472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+824], W8
	019 Compare X19, 0
	020 JumpIfEqual {118}
	021 Move X8, 0xF00000
	022 Move X8, [X8+3472]
	023 Move W22, [X19+16]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move W2, W22
	027 Move X20, X0
	028 Call BigInteger..ctor, X0, X1, X2
	029 Compare X20, 0
	030 JumpIfEqual {118}
	031 Compare X21, 0
	032 JumpIfEqual {118}
	033 Move X11, [X21+24]
	034 Compare X11, 0
	035 JumpIfEqual {118}
	036 Move X8, [X19+24]
	037 Move X9, [X20+24]
	038 Move W14, [X11+24]
	039 Move X10, X31
	040 Move W13, W31
	041 Add X15, X11, 32
	042 Add X16, X8, 32
	043 Add X17, X9, 32
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X8, 0
	046 JumpIfEqual {118}
	047 Move X11, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {118}
	051 Move X12, [X9+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, [X15]
	054 Move W1, [X16]
	055 Add W0, W0, W13
	056 Subtract W1, W1, W0
	057 Move [X17], W1
	058 Move W2, [X21+16]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 Add W31, W0, W1
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Add X10, X10, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Or W13, W13, W0
	066 Move W14, [X19+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move TEMP, X13
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {94}
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Add X13, X8, 32
	077 And X14, X14, 0
	078 And X15, X15, 0
	079 Add X16, X9, 32
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W17, [X13]
	083 Subtract W17, W17, 1
	084 Move [X16], W17
	085 Move W1, [X13]
	086 Move W0, [X19+16]
	087 Add X17, X10, 1
	088 Compare W1, 0
	089 JumpIfNotEqual {92}
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, X17
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W10, W17
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W13, W10
	098 Add X9, X9, 32
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Add X8, X8, 32
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W12, [X8]
	104 Move [X9], W12
	105 Move W12, [X19+16]
	106 Add X13, X13, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X20
	109 Call BigInteger.Normalize, X0
	110 Move X0, X20
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F20

Method: System.Void MinusEq(Mono.Math.BigInteger big, Mono.Math.BigInteger small)

Disassembly:
	0x032247D4 MOVZ W8, 0x1
	0x032247D8 STRB W8, [X20 + 0x342]
	0x032247DC LDR X0, [X21]
	0x032247E0 BL 0x1C16F10
	0x032247E4 LDR X2, [X19]
	0x032247E8 MOV X1, X31
	0x032247EC MOV X19, X0
	0x032247F0 BL 0x322407C
	0x032247F4 MOV X0, X19
	0x032247F8 LDP X20, X19, [X31 + 0x10]
	0x032247FC LDP X30, X21, [X31], #0x20
	0x03224800 RET
	0x03224804 MOVZ W0, 0xFA0
	0x03224808 RET
	0x0322480C MOV X1, X31
	0x03224810 B 0x33BDD8C
	0x03224814 STP X30, X21, [X31 - 0x20]!
	0x03224818 STP X20, X19, [X31 + 0x10]
	0x0322481C ADRP X20, 0x11B8000
	0x03224820 ADRP X21, 0xEFD000
	0x03224824 LDRB W8, [X20 + 0x343]
	0x03224828 LDR X21, [X21 + 0xD90]
	0x0322482C MOV W19, W1
	0x03224830 TBNZ X8, 0x0, 0x3224848
	0x03224834 ADRP X0, 0xEFD000
	0x03224838 LDR X0, [X0 + 0xD90]
	0x0322483C BL 0x1C16CF4
	0x03224840 MOVZ W8, 0x1
	0x03224844 STRB W8, [X20 + 0x343]
	0x03224848 LDR X0, [X21]
	0x0322484C LDR W8, [X0 + 0xE0]
	0x03224850 CBNZ W8, 0x3224858
	0x03224854 BL 0x1C16DFC
	0x03224858 MOV W0, W19
	0x0322485C BL 0x321FDA0
	0x03224860 CBZ X0, 0x3224884
	0x03224864 MOVZ W2, 0x1
	0x03224868 MOV W1, W31
	0x0322486C MOV X19, X0
	0x03224870 BL 0x3222620
	0x03224874 MOV X0, X19
	0x03224878 LDP X20, X19, [X31 + 0x10]
	0x0322487C LDP X30, X21, [X31], #0x20
	0x03224880 RET
	0x03224884 BL 0x1C16F20
	0x03224888 LDR X8, [X0]
	0x0322488C MOV X2, X31
	0x03224890 LDP X4, X3, [X8 + 0x1C8]
	0x03224894 BR X4
	0x03224898 SUB X31, X31, 0x70
	0x0322489C STP X29, X30, [X31 + 0x10]
	0x032248A0 STP X28, X27, [X31 + 0x20]
	0x032248A4 STP X26, X25, [X31 + 0x30]
	0x032248A8 STP X24, X23, [X31 + 0x40]
	0x032248AC STP X22, X21, [X31 + 0x50]
	0x032248B0 STP X20, X19, [X31 + 0x60]
	0x032248B4 STR X2, [X31 + 0x8]
	0x032248B8 ADRP X19, 0x11B8000
	0x032248BC ADRP X24, 0xEFD000
	0x032248C0 LDRB W8, [X19 + 0x344]
	0x032248C4 LDR X24, [X24 + 0xD90]
	0x032248C8 MOV W21, W1
	0x032248CC MOV X20, X0
	0x032248D0 TBNZ X8, 0x0, 0x32248E8
	0x032248D4 ADRP X0, 0xEFD000
	0x032248D8 LDR X0, [X0 + 0xD90]
	0x032248DC BL 0x1C16CF4
	0x032248E0 MOVZ W8, 0x1
	0x032248E4 STRB W8, [X19 + 0x344]
	0x032248E8 LDR X8, [X20]
	0x032248EC LDR X2, [X31 + 0x8]
	0x032248F0 MOV X0, X20
	0x032248F4 MOV W1, W21
	0x032248F8 LDP X9, X3, [X8 + 0x1B8]
	0x032248FC BLR X9
	0x03224900 LDR X8, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {74}
	004 Compare X1, 0
	005 JumpIfEqual {74}
	006 Move X9, [X1+24]
	007 Compare X9, 0
	008 JumpIfEqual {74}
	009 Move X8, [X0+24]
	010 Move W11, [X9+24]
	011 Move X10, X31
	012 Move W16, W31
	013 Add X12, X9, 32
	014 Add X13, X8, 32
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Compare X8, 0
	017 JumpIfEqual {74}
	018 Move X9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W15, [X12]
	021 Move W14, W16
	022 Move W16, [X13]
	023 Add W15, W15, W14
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract W17, W16, W15
	026 Move [X13], W17
	027 Move W3, [X1+16]
	028 NotImplemented "Instruction ORN not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Add X10, X10, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Or W16, W16, W4
	035 Move W13, [X0+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Or W11, W12, W11
	042 Compare W11, 0
	043 JumpIfEqual {57}
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 And X11, X11, 0
	047 Add X12, X8, 32
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W13, [X12]
	050 Subtract W13, W13, 1
	051 Move [X12], W13
	052 Move W13, [X0+16]
	053 Add X10, X10, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare W13, 0
	056 JumpIfNotEqual {59}
	057 Compare W13, 0
	058 JumpIfEqual {69}
	059 Subtract W10, W13, 1
	060 Move W11, W10
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X12, X8, W11
	063 Move W12, [X12+32]
	064 Compare W12, 0
	065 JumpIfNotEqual {71}
	066 Move [X0+16], W11
	067 Subtract W11, W11, 1
	068 Add W31, W11, 1
	069 Move W8, 1
	070 Move [X0+16], W8
	071 Move X30, [X31+16]
	072 Return 
	073 Call 0x1C17F28
	074 Call 0x1C17F20

Method: System.Void PlusEq(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x03224904 MOV X21, X0
	0x03224908 LDR W9, [X8 + 0xE0]
	0x0322490C CBNZ W9, 0x3224918
	0x03224910 MOV X0, X8
	0x03224914 BL 0x1C16DFC
	0x03224918 MOVZ W8, 0xD796
	0x0322491C MOVK W8, 0xC0CF0000
	0x03224920 ORR W1, W8, 0x1
	0x03224924 MOV X0, X21
	0x03224928 BL 0x32217E0
	0x0322492C LDR X8, [X20]
	0x03224930 MOV W22, W0
	0x03224934 MOV X0, X20
	0x03224938 LDP X9, X1, [X8 + 0x198]
	0x0322493C BLR X9
	0x03224940 LDR X8, [X24]
	0x03224944 MOVZ W19, 0xC235
	0x03224948 MOVZ W28, 0xDCB1
	0x0322494C MOVZ W27, 0x286B
	0x03224950 LDR X8, [X8 + 0xB8]
	0x03224954 SXTW X26, W0
	0x03224958 MOVK W19, 0x4F720000
	0x0322495C MOVK W28, 0x8D30000
	0x03224960 LDR X29, [X8]
	0x03224964 MOVK W27, 0x3F300000
	0x03224968 MUL W8, W22, W19
	0x0322496C CMP W8, W28
	0x03224970 B.CC 0x3224B28
	0x03224974 MOVZ W8, 0x42C9
	0x03224978 MOVK W8, 0xB2160000
	0x0322497C UMADDL X8, X22, X8, X31
	0x03224980 UBFM X8, X8, 0x24, 0x3F
	0x03224984 MOVZ W9, 0x17
	0x03224988 MSUB W8, W8, W9, W22
	0x0322498C CBZ W8, 0x3224B28
	0x03224990 MOVZ W8, 0x6BCB
	0x03224994 MOVK W8, 0xAF280000
	0x03224998 UMADDL X8, X22, X8, X31
	0x0322499C UBFM X8, X8, 0x20, 0x3F
	0x032249A0 SUB W9, W22, W8
	0x032249A4 ADD W8, W8, W9, 0x1, LSR
	0x032249A8 UBFM W8, W8, 0x4, 0x1F
	0x032249AC MOVZ W9, 0x13
	0x032249B0 MSUB W8, W8, W9, W22
	0x032249B4 CBZ W8, 0x3224B28
	0x032249B8 MOVZ W8, 0xF0F1
	0x032249BC MOVK W8, 0xF0F00000
	0x032249C0 UMADDL X8, X22, X8, X31
	0x032249C4 UBFM X8, X8, 0x24, 0x3F
	0x032249C8 ADD W8, W8, W8, 0x4, LSL
	0x032249CC SUB W8, W22, W8
	0x032249D0 CBZ W8, 0x3224B28
	0x032249D4 MOVZ W8, 0xEC4F
	0x032249D8 MOVK W8, 0x4EC40000
	0x032249DC UMADDL X8, X22, X8, X31
	0x032249E0 UBFM X8, X8, 0x22, 0x3F
	0x032249E4 MOVZ W9, 0xD
	0x032249E8 MSUB W8, W8, W9, W22
	0x032249EC CBZ W8, 0x3224B28
	0x032249F0 MOVZ W8, 0x8BA3
	0x032249F4 MOVK W8, 0xBA2E0000
	0x032249F8 UMADDL X8, X22, X8, X31
	0x032249FC UBFM X8, X8, 0x23, 0x3F
	0x03224A00 MOVZ W9, 0xB
	0x03224A04 MSUB W8, W8, W9, W22
	0x03224A08 CBZ W8, 0x3224B28
	0x03224A0C MOVZ W8, 0x4925
	0x03224A10 MOVK W8, 0x24920000
	0x03224A14 UMADDL X8, X22, X8, X31
	0x03224A18 UBFM X8, X8, 0x20, 0x3F
	0x03224A1C SUB W9, W22, W8
	0x03224A20 ADD W8, W8, W9, 0x1, LSR
	0x03224A24 UBFM W8, W8, 0x2, 0x1F
	0x03224A28 SUB W8, W8, W8, 0x3, LSL
	0x03224A2C ADD W8, W22, W8
	0x03224A30 CBZ W8, 0x3224B28
	0x03224A34 MOVZ W8, 0xAAAB
	0x03224A38 MOVK W8, 0xAAAA0000
	0x03224A3C UMADDL X8, X22, X8, X31
	0x03224A40 UBFM X8, X8, 0x21, 0x3F
	0x03224A44 ADD W8, W8, W8, 0x1, LSL
	0x03224A48 SUB W8, W22, W8
	0x03224A4C CBZ W8, 0x3224B28
	0x03224A50 MOVZ W8, 0xCCCD
	0x03224A54 MOVK W8, 0xCCCC0000
	0x03224A58 UMADDL X8, X22, X8, X31
	0x03224A5C UBFM X8, X8, 0x22, 0x3F
	0x03224A60 ADD W8, W8, W8, 0x2, LSL
	0x03224A64 SUB W8, W22, W8
	0x03224A68 CBZ W8, 0x3224B28
	0x03224A6C CBZ X29, 0x3224B78
	0x03224A70 LDR W8, [X29 + 0x18]
	0x03224A74 CMP W8, 0xB
	0x03224A78 B.LT 0x3224AC8
	0x03224A7C MOVZ W25, 0xA
	0x03224A80 CMP W25, W8
	0x03224A84 B.CS 0x3224B74
	0x03224A88 ADD X8, X29, W25, 0x2, SXTW
	0x03224A8C LDR W23, [X8 + 0x20]
	0x03224A90 CMP X23, X26

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {97}
	004 Compare X1, 0
	005 JumpIfEqual {97}
	006 Move W12, [X0+16]
	007 Move W14, [X1+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X9, [X8+24]
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Compare X9, 0
	014 JumpIfEqual {97}
	015 Move W11, [X10+16]
	016 Move X17, [X10+24]
	017 Move X10, [X0+24]
	018 Move W13, [X9+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X16, X31
	021 Move X1, X31
	022 Add X2, X9, 32
	023 Add X3, X17, 32
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 Add X4, X10, 32
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X17, 0
	028 JumpIfEqual {97}
	029 Move W15, [X17+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X10, 0
	032 JumpIfEqual {97}
	033 Move W15, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W5, [X2]
	036 Move W6, [X3]
	037 Add X1, X1, X5
	038 Add X1, X1, X6
	039 Move [X4], W1
	040 Add X16, X16, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X1, X1
	043 ShiftRight X1, 32
	044 And X1, X1, 0x7FFFFFFF
	045 Compare X1, 0
	046 JumpIfEqual {66}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W16, W8
	052 Add X17, X9, 32
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Add X3, X10, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W4, [X17]
	058 Add W4, W4, 1
	059 Move [X3], W4
	060 Add X11, X11, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W4, 0
	063 JumpIfEqual {55}
	064 Compare W4, 0
	065 JumpIfEqual {88}
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract W12, W8, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W12, W11
	073 Move W14, W8
	074 Add X10, X10, 32
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Add X9, X9, 32
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W15, [X9]
	080 Move [X10], W15
	081 Add X12, X12, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W8, W8, 1
	084 Move [X0+16], W8
	085 Move X30, [X31+16]
	086 Call BigInteger.Normalize, X0
	087 Return 
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X10, W11
	090 Move W9, 1
	091 Add W10, W11, 1
	092 Move [X8+32], W9
	093 Move [X0+16], W10
	094 Move X30, [X31+16]
	095 Return 
	096 Call 0x1C17F28
	097 Call 0x1C17F20

Method: Mono.Math.BigInteger/Sign Compare(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x032224D8 MOV W1, W31
	0x032224DC MOV W3, W31
	0x032224E0 MOV W4, W21
	0x032224E4 MOV X5, X31
	0x032224E8 BL 0x33A8A9C
	0x032224EC CBZ W23, 0x3222538
	0x032224F0 LDR X8, [X19 + 0x18]
	0x032224F4 CBZ X8, 0x322257C
	0x032224F8 LDR W10, [X8 + 0x18]
	0x032224FC SXTW X9, W24
	0x03222500 SUB X9, X9, 0x1
	0x03222504 CMP W9, W10
	0x03222508 B.CS 0x3222580
	0x0322250C ADD X8, X8, X9, 0x2, LSL
	0x03222510 LDR W9, [X8 + 0x20]
	0x03222514 SUB W10, W23, 0x1
	0x03222518 MOVZ W11, 0x1
	0x0322251C SUB W12, W31, W23
	0x03222520 MOVN W13, 0x0
	0x03222524 LSLV W10, W11, W10
	0x03222528 ORR W9, W9, W10, 0x0
	0x0322252C LSRV W10, W13, W12
	0x03222530 AND W9, W9, W10, 0x0
	0x03222534 B 0x3222560
	0x03222538 LDR X8, [X19 + 0x18]
	0x0322253C CBZ X8, 0x322257C
	0x03222540 LDR W10, [X8 + 0x18]
	0x03222544 SXTW X9, W24
	0x03222548 SUB X9, X9, 0x1
	0x0322254C CMP W9, W10
	0x03222550 B.CS 0x3222580
	0x03222554 ADD X8, X8, X9, 0x2, LSL
	0x03222558 LDR W9, [X8 + 0x20]
	0x0322255C ORR W9, W9, 0x80000000
	0x03222560 MOV X0, X19
	0x03222564 LDP X20, X19, [X31 + 0x30]
	0x03222568 LDP X22, X21, [X31 + 0x20]
	0x0322256C LDP X24, X23, [X31 + 0x10]
	0x03222570 STR W9, [X8 + 0x20]
	0x03222574 LDR X30, [X31], #0x40
	0x03222578 B 0x32213F8
	0x0322257C BL 0x1C16F20
	0x03222580 BL 0x1C16F28
	0x03222584 STP X30, X19, [X31 - 0x10]!
	0x03222588 TBNZ X1, 0x1F, 0x32225C8
	0x0322258C LDR X8, [X0 + 0x18]
	0x03222590 CBZ X8, 0x3222610
	0x03222594 LDR W10, [X8 + 0x18]
	0x03222598 UBFM W9, W1, 0x5, 0x1F
	0x0322259C CMP W9, W10
	0x032225A0 B.CS 0x3222614
	0x032225A4 ADD X8, X8, W9, 0x2, UXTW
	0x032225A8 LDR W8, [X8 + 0x20]
	0x032225AC MOVZ W9, 0x1
	0x032225B0 LSLV W9, W9, W1
	0x032225B4 ORR W9, W8, W9, 0x0
	0x032225B8 CMP W9, W8
	0x032225BC CSET W0, EQ
	0x032225C0 LDP X30, X19, [X31], #0x10
	0x032225C4 RET
	0x032225C8 ADRP X0, 0xEDB000
	0x032225CC LDR X0, [X0 + 0xF78]
	0x032225D0 BL 0x1C16D08
	0x032225D4 BL 0x1C16F10
	0x032225D8 MOV X19, X0
	0x032225DC ADRP X0, 0xEFF000
	0x032225E0 LDR X0, [X0 + 0x700]
	0x032225E4 BL 0x1C16D08
	0x032225E8 MOV X1, X0
	0x032225EC MOV X0, X19
	0x032225F0 MOV X2, X31
	0x032225F4 BL 0x3379B6C
	0x032225F8 ADRP X0, 0xEFF000
	0x032225FC LDR X0, [X0 + 0xF50]
	0x03222600 BL 0x1C16D08
	0x03222604 MOV X1, X0
	0x03222608 MOV X0, X19
	0x0322260C BL 0x1C16DEC
	0x03222610 BL 0x1C16F20
	0x03222614 BL 0x1C16F28
	0x03222618 MOVZ W2, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {82}
	004 Compare X1, 0
	005 JumpIfEqual {82}
	006 Move W10, [X0+16]
	007 Move W9, [X1+16]
	008 Move W8, W10
	009 Compare W10, 0
	010 JumpIfEqual {21}
	011 Move X11, [X0+24]
	012 Compare X11, 0
	013 JumpIfEqual {82}
	014 Move W12, [X11+24]
	015 Subtract W10, W8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X11, X11, W10
	018 Move W11, [X11+32]
	019 Compare W11, 0
	020 JumpIfEqual {8}
	021 Subtract W10, W8, 1
	022 Move W11, W9
	023 Compare W9, 0
	024 JumpIfEqual {35}
	025 Move X12, [X1+24]
	026 Compare X12, 0
	027 JumpIfEqual {82}
	028 Move W13, [X12+24]
	029 Subtract W9, W11, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X12, X12, W9
	032 Move W12, [X12+32]
	033 Compare W12, 0
	034 JumpIfEqual {22}
	035 Or W9, W11, W8
	036 Compare W9, 0
	037 JumpIfEqual {42}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W0, TEMP
	042 Move W0, W31
	043 Move W0, 1
	044 Move X8, [X0+24]
	045 Move W9, W10
	046 Compare W10, 0
	047 JumpIfEqual {64}
	048 Compare X8, 0
	049 JumpIfEqual {82}
	050 Move W10, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X10, [X1+24]
	053 Compare X10, 0
	054 JumpIfEqual {82}
	055 Move W11, [X10+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W11, W9
	058 Add X12, X8, X11
	059 Add X10, X10, X11
	060 Move W11, [X12+32]
	061 Move W10, [X10+32]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract W10, W9, 1
	064 Compare X8, 0
	065 JumpIfEqual {82}
	066 Move W10, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X10, [X1+24]
	069 Compare X10, 0
	070 JumpIfEqual {82}
	071 Move W11, [X10+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W9, W9
	074 Add X8, X8, X9
	075 Add X9, X10, X9
	076 Move W8, [X8+32]
	077 Move W9, [X9+32]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move X30, [X31+16]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.UInt32 SingleByteDivideInPlace(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x032239A8 CBZ X1, 0x3223A00
	0x032239AC CMP W11, W8
	0x032239B0 B.CS 0x3223A68
	0x032239B4 CMP W11, W13
	0x032239B8 CSEL W1, W11, W13, HI
	0x032239BC CMP W11, W15
	0x032239C0 MOV W16, W8
	0x032239C4 ADD X17, X9, 0x20
	0x032239C8 CSEL W2, W11, W15, HI
	0x032239CC ADD X3, X10, 0x20
	0x032239D0 CMP X1, X11
	0x032239D4 B.EQ 0x3223A8C
	0x032239D8 CMP X2, X11
	0x032239DC B.EQ 0x3223A8C
	0x032239E0 LDR W4, [X17, X11, LSL #2]
	0x032239E4 ADD W4, W4, 0x1
	0x032239E8 STR W4, [X3, X11, LSL #2]
	0x032239EC ADD X11, X11, 0x1
	0x032239F0 CMP X11, X16
	0x032239F4 B.CS 0x32239FC
	0x032239F8 CBZ W4, 0x32239D0
	0x032239FC CBZ W4, 0x3223A68
	0x03223A00 CMP W12, W14
	0x03223A04 B.CS 0x3223A58
	0x03223A08 SUB W12, W8, 0x1
	0x03223A0C CMP W11, W12
	0x03223A10 B.CS 0x3223A58
	0x03223A14 CMP W11, W13
	0x03223A18 CSEL W13, W11, W13, HI

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {33}
	005 Move W8, [X0+16]
	006 Compare W8, 0
	007 JumpIfEqual {26}
	008 Move X11, [X0+24]
	009 Compare X11, 0
	010 JumpIfEqual {33}
	011 Move W9, [X11+24]
	012 Move X19, X31
	013 Move W10, W1
	014 Add X11, X11, 28
	015 Subtract X12, X8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W13, [X11]
	018 NotImplemented "Instruction BFM not yet implemented."
	019 NotImplemented "Instruction UDIV not yet implemented."
	020 Move [X11], W14
	021 NotImplemented "Instruction NOP not yet implemented."
	022 NotImplemented "Instruction MSUB not yet implemented."
	023 Move X8, X12
	024 Compare X12, 0
	025 JumpIfNotEqual {15}
	026 Move W19, W31
	027 Call BigInteger.Normalize, X0
	028 Move W0, W19
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return X0
	032 Call 0x1C17F28
	033 Call 0x1C17F20

Method: System.UInt32 DwordMod(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x032227E0 LDRSW X8, [X19 + 0x10]
	0x032227E4 CMP X8, W20, UXTW
	0x032227E8 B.LT 0x322291C
	0x032227EC CMP W20, 0x1
	0x032227F0 B.EQ 0x322294C
	0x032227F4 ADRP X24, 0xEFF000
	0x032227F8 LDR X24, [X24 + 0xD90]
	0x032227FC LDR X0, [X24]
	0x03222800 LDR W8, [X0 + 0xE0]
	0x03222804 CBNZ W8, 0x322280C
	0x03222808 BL 0x1C16DFC
	0x0322280C MOV X0, X21
	0x03222810 MOV W1, W31
	0x03222814 BL 0x321FE58
	0x03222818 TBZ X0, 0x0, 0x3222828
	0x0322281C ADRP X8, 0xED3000
	0x03222820 LDR X8, [X8 + 0x4B0]
	0x03222824 B 0x3222850
	0x03222828 LDR X0, [X24]
	0x0322282C LDR W8, [X0 + 0xE0]
	0x03222830 CBNZ W8, 0x3222838
	0x03222834 BL 0x1C16DFC
	0x03222838 MOVZ W1, 0x1
	0x0322283C MOV X0, X21
	0x03222840 BL 0x321FE58

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {27}
	004 Move W8, [X0+16]
	005 Compare W8, 0
	006 JumpIfEqual {23}
	007 Move X11, [X0+24]
	008 Compare X11, 0
	009 JumpIfEqual {27}
	010 Move W9, [X11+24]
	011 Move X0, X31
	012 Move W10, W1
	013 Add X11, X11, 28
	014 Subtract X12, X8, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W13, [X11]
	017 Move X8, X12
	018 NotImplemented "Instruction BFM not yet implemented."
	019 NotImplemented "Instruction UDIV not yet implemented."
	020 NotImplemented "Instruction MSUB not yet implemented."
	021 Compare X12, 0
	022 JumpIfNotEqual {14}
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Return X0
	026 Call 0x1C17F28
	027 Call 0x1C17F20

Method: Mono.Math.BigInteger[] DwordDivMod(Mono.Math.BigInteger n, System.UInt32 d)

Disassembly:
	0x03224E34 STR X19, [X20 + 0x10]
	0x03224E38 LDP X20, X19, [X31 + 0x10]
	0x03224E3C LDR X30, [X31], #0x20
	0x03224E40 RET
	0x03224E44 AND W2, W1, 0x1
	0x03224E48 MOV X1, X31
	0x03224E4C MOV X3, X31
	0x03224E50 B 0x32C0158
	0x03224E54 SUB X31, X31, 0x30
	0x03224E58 STP X30, X21, [X31 + 0x10]
	0x03224E5C STP X20, X19, [X31 + 0x20]
	0x03224E60 ADRP X21, 0x11B8000
	0x03224E64 ADRP X20, 0xEFD000
	0x03224E68 LDRB W8, [X21 + 0x34A]
	0x03224E6C LDR X20, [X20 + 0xFA8]
	0x03224E70 MOV X19, X0
	0x03224E74 TBNZ X8, 0x0, 0x3224E8C
	0x03224E78 ADRP X0, 0xEFD000
	0x03224E7C LDR X0, [X0 + 0xFA8]
	0x03224E80 BL 0x1C16CF4
	0x03224E84 MOVZ W8, 0x1
	0x03224E88 STRB W8, [X21 + 0x34A]
	0x03224E8C LDR X0, [X20]
	0x03224E90 STR W31, [X31 + 0xC]
	0x03224E94 LDR X19, [X19 + 0x10]
	0x03224E98 LDR W8, [X0 + 0xE0]
	0x03224E9C CBNZ W8, 0x3224EA4
	0x03224EA0 BL 0x1C16DFC
	0x03224EA4 ADD X1, X31, 0xC
	0x03224EA8 MOV X0, X19
	0x03224EAC MOV X2, X31
	0x03224EB0 BL 0x32FC8E0
	0x03224EB4 LDR W8, [X31 + 0xC]
	0x03224EB8 LDP X20, X19, [X31 + 0x20]
	0x03224EBC LDP X30, X21, [X31 + 0x10]
	0x03224EC0 CMP W8, 0x0
	0x03224EC4 CSET W0, EQ
	0x03224EC8 ADD X31, X31, 0x30
	0x03224ECC RET
	0x03224ED0 STR X30, [X31 - 0x20]!
	0x03224ED4 STP X20, X19, [X31 + 0x10]
	0x03224ED8 MOV X19, X1
	0x03224EDC AND W2, W2, 0x1
	0x03224EE0 MOV X1, X31
	0x03224EE4 MOV X3, X31
	0x03224EE8 MOV X20, X0
	0x03224EEC BL 0x32C0158
	0x03224EF0 STR X19, [X20 + 0x10]
	0x03224EF4 LDP X20, X19, [X31 + 0x10]
	0x03224EF8 LDR X30, [X31], #0x20
	0x03224EFC RET
	0x03224F00 STR X30, [X31 - 0x10]!
	0x03224F04 LDR X0, [X0 + 0x10]
	0x03224F08 MOV X1, X31
	0x03224F0C BL 0x33EB3F0
	0x03224F10 MOVZ W0, 0x1
	0x03224F14 LDR X30, [X31], #0x10
	0x03224F18 RET
	0x03224F1C SUB X31, X31, 0x20
	0x03224F20 STP X30, X19, [X31 + 0x10]
	0x03224F24 ADD X19, X0, 0x10
	0x03224F28 MOV X0, X19
	0x03224F2C MOV X1, X31
	0x03224F30 BL 0x33C6964
	0x03224F34 TBZ X0, 0x0, 0x3224F40
	0x03224F38 MOVZ W0, 0x1
	0x03224F3C B 0x3224F68
	0x03224F40 LDR X19, [X19]
	0x03224F44 ADD X0, X31, 0x8
	0x03224F48 MOVN W1, 0x0
	0x03224F4C MOV X2, X31
	0x03224F50 STR X31, [X31 + 0x8]
	0x03224F54 BL 0x33C6730
	0x03224F58 LDR X1, [X31 + 0x8]
	0x03224F5C MOV X0, X19
	0x03224F60 MOV X2, X31
	0x03224F64 BL 0x33BE5B0
	0x03224F68 LDP X30, X19, [X31 + 0x10]
	0x03224F6C AND W0, W0, 0x1
	0x03224F70 ADD X31, X31, 0x20
	0x03224F74 RET
	0x03224F78 STR X30, [X31 - 0x20]!
	0x03224F7C STP X20, X19, [X31 + 0x10]
	0x03224F80 MOV W19, W1
	0x03224F84 MOV X20, X0
	0x03224F88 ADD X0, X31, 0x8
	0x03224F8C MOVN W1, 0x0
	0x03224F90 MOV X2, X31
	0x03224F94 STR X31, [X31 + 0x8]
	0x03224F98 BL 0x33C6730
	0x03224F9C LDR X1, [X31 + 0x8]
	0x03224FA0 AND W2, W19, 0x1
	0x03224FA4 MOV X0, X20
	0x03224FA8 MOV X3, X31
	0x03224FAC BL 0x32C0158
	0x03224FB0 LDP X20, X19, [X31 + 0x10]
	0x03224FB4 LDR X30, [X31], #0x20
	0x03224FB8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x11B9000
	008 Move W8, [X19+825]
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEFE000
	016 Move X0, [X0+3896]
	017 Call 0x1C17CF4
	018 Move X0, 0xEFE000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+825], W8
	023 Compare X20, 0
	024 JumpIfEqual {110}
	025 Move X23, 0xEFE000
	026 Move X23, [X23+3472]
	027 Move W22, [X20+16]
	028 Move X0, [X23]
	029 Call 0x1C17F10
	030 Move W2, W22
	031 Move X19, X0
	032 Call BigInteger..ctor, X0, X1, X2
	033 Move W11, [X20+16]
	034 Compare W11, 0
	035 JumpIfEqual {59}
	036 Move X8, [X20+24]
	037 Compare X8, 0
	038 JumpIfEqual {110}
	039 Move W9, [X8+24]
	040 Move X20, X31
	041 Move W10, W21
	042 Add X11, X11, 7
	043 Subtract X13, X11, 8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Compare X19, 0
	046 JumpIfEqual {110}
	047 Move X12, [X19+24]
	048 Compare X12, 0
	049 JumpIfEqual {110}
	050 Move W14, [X12+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W13, [X8]
	053 NotImplemented "Instruction BFM not yet implemented."
	054 NotImplemented "Instruction UDIV not yet implemented."
	055 Move [X12], W14
	056 Subtract X11, X11, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction MSUB not yet implemented."
	059 Compare X19, 0
	060 JumpIfEqual {110}
	061 Move W20, W31
	062 Move X21, 0xEFE000
	063 Move X21, [X21+3896]
	064 Move X0, X19
	065 Call BigInteger.Normalize, X0
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W0, W20
	072 Call BigInteger.op_Implicit, X0
	073 Move X8, [X21]
	074 Move X20, X0
	075 Move W1, 2
	076 Move X0, X8
	077 Call 0x1C17D6C
	078 Compare X0, 0
	079 JumpIfEqual {110}
	080 Move X8, [X0]
	081 Move X21, X0
	082 Move X0, X19
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {112}
	087 Move W8, [X21+24]
	088 Compare W8, 0
	089 JumpIfEqual {111}
	090 Move [X21+32], X19
	091 Compare X20, 0
	092 JumpIfEqual {100}
	093 Move X8, [X21]
	094 Move X0, X20
	095 Move X1, [X8+64]
	096 Call 0x1C17E00
	097 Compare X0, 0
	098 JumpIfEqual {112}
	099 Move W8, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X21+40], X20
	102 Move X0, X21
	103 Move X20, [X31+32]
	104 Move X19, [X31+40]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Return X0
	110 Call 0x1C17F20
	111 Call 0x1C17F28
	112 Call 0x1C17F44
	113 Move X1, X31
	114 Call 0x1C17DEC

Method: Mono.Math.BigInteger[] multiByteDivide(Mono.Math.BigInteger bi1, Mono.Math.BigInteger bi2)

Disassembly:
	0x03222844 TBZ X0, 0x0, 0x3222870
	0x03222848 ADRP X8, 0xEF5000
	0x0322284C LDR X8, [X8 + 0xEC0]
	0x03222850 LDR X22, [X8]
	0x03222854 MOV X0, X22
	0x03222858 LDP X20, X19, [X31 + 0x40]
	0x0322285C LDP X22, X21, [X31 + 0x30]
	0x03222860 LDP X24, X23, [X31 + 0x20]
	0x03222864 LDP X26, X25, [X31 + 0x10]
	0x03222868 LDR X30, [X31], #0x50
	0x0322286C RET
	0x03222870 ADRP X8, 0xED1000
	0x03222874 LDR X8, [X8 + 0x988]
	0x03222878 LDR X0, [X24]
	0x0322287C LDR X22, [X8]
	0x03222880 BL 0x1C16F10
	0x03222884 MOV X1, X21
	0x03222888 MOV X23, X0
	0x0322288C BL 0x3221264
	0x03222890 ADRP X26, 0xED3000
	0x03222894 LDR X26, [X26 + 0x170]
	0x03222898 ADD X25, X19, 0x14
	0x0322289C LDR X0, [X24]
	0x032228A0 LDR W8, [X0 + 0xE0]
	0x032228A4 CBNZ W8, 0x32228AC
	0x032228A8 BL 0x1C16DFC
	0x032228AC MOV X0, X23
	0x032228B0 MOV W1, W31
	0x032228B4 BL 0x322065C
	0x032228B8 TBZ X0, 0x0, 0x3222854
	0x032228BC MOV X0, X23
	0x032228C0 MOV W1, W20
	0x032228C4 BL 0x32229A8
	0x032228C8 LDRSW X8, [X19 + 0x10]
	0x032228CC MOV W9, W0
	0x032228D0 MOV W21, W0
	0x032228D4 CMP X9, X8
	0x032228D8 B.LT 0x32228E4
	0x032228DC MOV X0, X31
	0x032228E0 BL 0x339D674
	0x032228E4 LDRH W8, [X25, W21, SXTW]
	0x032228E8 LDR X0, [X26]
	0x032228EC STRH W8, [X31 + 0xC]
	0x032228F0 LDR W8, [X0 + 0xE0]
	0x032228F4 CBNZ W8, 0x32228FC
	0x032228F8 BL 0x1C16DFC
	0x032228FC ADD X0, X31, 0xC
	0x03222900 MOV X1, X31
	0x03222904 BL 0x330A76C
	0x03222908 MOV X1, X22
	0x0322290C BL 0x321B938
	0x03222910 MOV X22, X0
	0x03222914 B 0x322289C
	0x03222918 BL 0x1C16F20
	0x0322291C ADRP X0, 0xED9000
	0x03222920 LDR X0, [X0 + 0x578]
	0x03222924 BL 0x1C16D08
	0x03222928 BL 0x1C16F10
	0x0322292C MOV X19, X0
	0x03222930 ADRP X0, 0xEFF000
	0x03222934 LDR X0, [X0 + 0x718]
	0x03222938 BL 0x1C16D08
	0x0322293C MOV X20, X0
	0x03222940 ADRP X0, 0xEFF000
	0x03222944 LDR X0, [X0 + 0x720]
	0x03222948 B 0x3222978
	0x0322294C ADRP X0, 0xED9000
	0x03222950 LDR X0, [X0 + 0x578]
	0x03222954 BL 0x1C16D08
	0x03222958 BL 0x1C16F10
	0x0322295C MOV X19, X0
	0x03222960 ADRP X0, 0xEFF000
	0x03222964 LDR X0, [X0 + 0x728]
	0x03222968 BL 0x1C16D08
	0x0322296C MOV X20, X0
	0x03222970 ADRP X0, 0xEFF000
	0x03222974 LDR X0, [X0 + 0x730]
	0x03222978 BL 0x1C16D08
	0x0322297C MOV X2, X0
	0x03222980 MOV X0, X19
	0x03222984 MOV X1, X20
	0x03222988 MOV X3, X31
	0x0322298C BL 0x330E16C
	0x03222990 ADRP X0, 0xEFF000
	0x03222994 LDR X0, [X0 + 0xF58]
	0x03222998 BL 0x1C16D08
	0x0322299C MOV X1, X0
	0x032229A0 MOV X0, X19
	0x032229A4 BL 0x1C16DEC
	0x032229A8 STP X30, X19, [X31 - 0x10]!
	0x032229AC CBZ X0, 0x3222A18
	0x032229B0 LDR W8, [X0 + 0x10]
	0x032229B4 CBZ W8, 0x3222A00
	0x032229B8 LDR X11, [X0 + 0x18]
	0x032229BC CBZ X11, 0x3222A18
	0x032229C0 LDR W9, [X11 + 0x18]
	0x032229C4 MOV X19, X31
	0x032229C8 MOV W10, W1
	0x032229CC ADD X11, X11, 0x1C
	0x032229D0 SUB X12, X8, 0x1
	0x032229D4 CMP X12, X9
	0x032229D8 B.CS 0x3222A14
	0x032229DC LDR W13, [X11, X8, LSL #2]
	0x032229E0 BFM X13, X19, 0x20, 0x1F
	0x032229E4 UDIV X14, X13, X10
	0x032229E8 STR W14, [X11, X8, LSL #2]
	0x032229EC NOP
	0x032229F0 MSUB X19, X14, X10, X13
	0x032229F4 MOV X8, X12
	0x032229F8 CBNZ X12, 0x32229D0
	0x032229FC B 0x3222A04
	0x03222A00 MOV W19, W31
	0x03222A04 BL 0x32213F8
	0x03222A08 MOV W0, W19
	0x03222A0C LDP X30, X19, [X31], #0x10
	0x03222A10 RET
	0x03222A14 BL 0x1C16F28
	0x03222A18 BL 0x1C16F20
	0x03222A1C STR X30, [X31 - 0x20]!
	0x03222A20 STP X20, X19, [X31 + 0x10]
	0x03222A24 LDRSW X8, [X0 + 0x10]
	0x03222A28 MOV W9, W1
	0x03222A2C MOV X19, X0
	0x03222A30 MOV W20, W1
	0x03222A34 CMP X9, X8
	0x03222A38 B.LT 0x3222A44
	0x03222A3C MOV X0, X31
	0x03222A40 BL 0x339D674
	0x03222A44 ADD X8, X19, W20, 0x1, SXTW
	0x03222A48 LDRH W0, [X8 + 0x14]
	0x03222A4C LDP X20, X19, [X31 + 0x10]
	0x03222A50 LDR X30, [X31], #0x20
	0x03222A54 RET
	0x03222A58 STR X30, [X31 - 0x10]!
	0x03222A5C LDR W8, [X0 + 0x10]
	0x03222A60 CBZ W8, 0x3222A9C
	0x03222A64 LDR X11, [X0 + 0x18]
	0x03222A68 CBZ X11, 0x3222AAC
	0x03222A6C LDR W10, [X11 + 0x18]
	0x03222A70 MOV X9, X31
	0x03222A74 MOV W0, W31
	0x03222A78 ADD X11, X11, 0x20
	0x03222A7C CMP X9, X10
	0x03222A80 B.CS 0x3222AA8
	0x03222A84 LDR W12, [X11, X9, LSL #2]
	0x03222A88 ADD X9, X9, 0x1
	0x03222A8C CMP X9, X8
	0x03222A90 EOR W0, W12, W0, 0x0
	0x03222A94 B.CC 0x3222A7C
	0x03222A98 B 0x3222AA0
	0x03222A9C MOV W0, W31
	0x03222AA0 LDR X30, [X31], #0x10
	0x03222AA4 RET
	0x03222AA8 BL 0x1C16F28
	0x03222AAC BL 0x1C16F20
	0x03222AB0 MOVZ W1, 0xA
	0x03222AB4 B 0x3222710
	0x03222AB8 STP X30, X21, [X31 - 0x20]!
	0x03222ABC STP X20, X19, [X31 + 0x10]
	0x03222AC0 ADRP X21, 0x11BA000
	0x03222AC4 LDRB W8, [X21 + 0x32D]
	0x03222AC8 MOV X20, X1
	0x03222ACC MOV X19, X0
	0x03222AD0 TBNZ X8, 0x0, 0x3222B00
	0x03222AD4 ADRP X0, 0xEFF000
	0x03222AD8 LDR X0, [X0 + 0xD90]
	0x03222ADC BL 0x1C16CF4
	0x03222AE0 ADRP X0, 0xED1000
	0x03222AE4 LDR X0, [X0 + 0x758]
	0x03222AE8 BL 0x1C16CF4
	0x03222AEC ADRP X0, 0xED9000
	0x03222AF0 LDR X0, [X0 + 0x720]
	0x03222AF4 BL 0x1C16CF4
	0x03222AF8 MOVZ W8, 0x1
	0x03222AFC STRB W8, [X21 + 0x32D]
	0x03222B00 CBZ X20, 0x3222BD4
	0x03222B04 ADRP X8, 0xED1000
	0x03222B08 LDR X8, [X8 + 0x758]
	0x03222B0C LDR X9, [X8]
	0x03222B10 LDR X8, [X20]
	0x03222B14 CMP X8, X9
	0x03222B18 B.EQ 0x3222B40
	0x03222B1C ADRP X9, 0xEFF000
	0x03222B20 LDR X9, [X9 + 0xD90]
	0x03222B24 LDRB W10, [X8 + 0x130]
	0x03222B28 LDR X0, [X9]
	0x03222B2C LDRB W9, [X0 + 0x130]
	0x03222B30 CMP W10, W9
	0x03222B34 B.CS 0x3222BA4
	0x03222B38 MOV X20, X31
	0x03222B3C B 0x3222BB8
	0x03222B40 MOV X0, X20
	0x03222B44 BL 0x1C16E08
	0x03222B48 LDR W8, [X0]
	0x03222B4C TBNZ X8, 0x1F, 0x3222BD4
	0x03222B50 ADRP X8, 0xEFF000
	0x03222B54 LDR X8, [X8 + 0xD90]
	0x03222B58 LDR X0, [X8]
	0x03222B5C LDR W8, [X0 + 0xE0]
	0x03222B60 CBNZ W8, 0x3222B68
	0x03222B64 BL 0x1C16DFC
	0x03222B68 ADRP X8, 0xED9000
	0x03222B6C LDR X8, [X8 + 0x720]
	0x03222B70 LDR X9, [X20]
	0x03222B74 MOV X0, X20
	0x03222B78 LDR X1, [X8]
	0x03222B7C LDR X8, [X9 + 0x40]
	0x03222B80 LDR X9, [X1 + 0x40]
	0x03222B84 CMP X8, X9
	0x03222B88 B.NE 0x3222BFC
	0x03222B8C BL 0x1C16E08
	0x03222B90 LDR W1, [X0]
	0x03222B94 MOV X0, X19
	0x03222B98 LDP X20, X19, [X31 + 0x10]
	0x03222B9C LDP X30, X21, [X31], #0x20
	0x03222BA0 B 0x321FE58
	0x03222BA4 LDR X8, [X8 + 0xC8]
	0x03222BA8 ADD X8, X8, X9, 0x3, LSL
	0x03222BAC LDUR X8, [X8 - 0x8]
	0x03222BB0 CMP X8, X0
	0x03222BB4 CSEL X20, X20, X31, EQ
	0x03222BB8 LDR W8, [X0 + 0xE0]
	0x03222BBC CBNZ W8, 0x3222BC4
	0x03222BC0 BL 0x1C16DFC
	0x03222BC4 MOV X0, X20
	0x03222BC8 MOV X1, X31
	0x03222BCC BL 0x321C64C
	0x03222BD0 TBZ X0, 0x0, 0x3222BDC
	0x03222BD4 MOV W0, W31
	0x03222BD8 B 0x3222BF0
	0x03222BDC MOV X0, X19
	0x03222BE0 MOV X1, X20
	0x03222BE4 BL 0x32214D8
	0x03222BE8 CMP W0, 0x0
	0x03222BEC CSET W0, EQ
	0x03222BF0 LDP X20, X19, [X31 + 0x10]
	0x03222BF4 LDP X30, X21, [X31], #0x20
	0x03222BF8 RET
	0x03222BFC BL 0x1C171E0
	0x03222C00 STP X29, X30, [X31 - 0x60]!
	0x03222C04 STP X28, X27, [X31 + 0x10]
	0x03222C08 STP X26, X25, [X31 + 0x20]
	0x03222C0C STP X24, X23, [X31 + 0x30]
	0x03222C10 STP X22, X21, [X31 + 0x40]
	0x03222C14 STP X20, X19, [X31 + 0x50]
	0x03222C18 ADRP X19, 0x11BA000
	0x03222C1C LDRB W8, [X19 + 0x33F]
	0x03222C20 MOV X23, X1
	0x03222C24 MOV X25, X0
	0x03222C28 TBNZ X8, 0x0, 0x3222C58
	0x03222C2C ADRP X0, 0xEFF000
	0x03222C30 LDR X0, [X0 + 0xF38]
	0x03222C34 BL 0x1C16CF4
	0x03222C38 ADRP X0, 0xEFF000
	0x03222C3C LDR X0, [X0 + 0xD90]
	0x03222C40 BL 0x1C16CF4
	0x03222C44 ADRP X0, 0xEFF000
	0x03222C48 LDR X0, [X0 + 0xDC8]
	0x03222C4C BL 0x1C16CF4
	0x03222C50 MOVZ W8, 0x1
	0x03222C54 STRB W8, [X19 + 0x33F]
	0x03222C58 CBZ X23, 0x32230AC
	0x03222C5C LDR W8, [X23 + 0x10]
	0x03222C60 CMP W8, 0x1
	0x03222C64 B.NE 0x3222CC4
	0x03222C68 LDR X8, [X23 + 0x18]
	0x03222C6C CBZ X8, 0x32230AC
	0x03222C70 LDR W9, [X8 + 0x18]
	0x03222C74 CBZ W9, 0x322309C
	0x03222C78 LDR W1, [X8 + 0x20]
	0x03222C7C MOV X0, X25
	0x03222C80 BL 0x3223FBC
	0x03222C84 ADRP X8, 0xEFF000
	0x03222C88 LDR X8, [X8 + 0xD90]
	0x03222C8C MOV W19, W0
	0x03222C90 LDR X8, [X8]
	0x03222C94 LDR W9, [X8 + 0xE0]
	0x03222C98 CBNZ W9, 0x3222CA4
	0x03222C9C MOV X0, X8
	0x03222CA0 BL 0x1C16DFC
	0x03222CA4 MOV W0, W19
	0x03222CA8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x11BB000
	012 Move W8, [X19+826]
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xF00000
	020 Move X0, [X0+3896]
	021 Call 0x1C17CF4
	022 Move X0, 0xF00000
	023 Move X0, [X0+3472]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+826], W8
	027 Move X0, X20
	028 Move X1, X22
	029 Call Kernel.Compare, X0, X1
	030 Add W31, W0, 1
	031 Compare X20, 0
	032 JumpIfEqual {318}
	033 Move X0, X20
	034 Call BigInteger.Normalize, X0
	035 Compare X22, 0
	036 JumpIfEqual {318}
	037 Move X0, X22
	038 Call BigInteger.Normalize, X0
	039 Move W26, [X22+16]
	040 Subtract W8, W26, 1
	041 Move X8, [X22+24]
	042 Compare X8, 0
	043 JumpIfEqual {318}
	044 Move W9, [X8+24]
	045 Compare W9, 0
	046 JumpIfEqual {317}
	047 Move W1, [X8+32]
	048 Move X0, X20
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X30, [X31+80]
	058 Move X27, [X31+88]
	059 Call Kernel.DwordDivMod, X0, X1
	060 Return X0
	061 Move X8, 0xF00000
	062 Move X8, [X8+3896]
	063 Move W1, 2
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Move X21, 0xF00000
	067 Move X21, [X21+3472]
	068 Move X22, X0
	069 Move X8, [X21]
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move W0, W31
	076 Call BigInteger.op_Implicit, X0
	077 Compare X22, 0
	078 JumpIfEqual {318}
	079 Move X19, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X22]
	083 Move X0, X19
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {319}
	088 Move W8, [X22+24]
	089 Compare W8, 0
	090 JumpIfEqual {317}
	091 Move [X22+32], X19
	092 Move X0, [X21]
	093 Call 0x1C17F10
	094 Move X1, X20
	095 Move X19, X0
	096 Call BigInteger..ctor, X0, X1
	097 Compare X19, 0
	098 JumpIfNotEqual {296}
	099 Move X9, [X22+24]
	100 Compare X9, 0
	101 JumpIfEqual {318}
	102 Move W10, [X9+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W25, [X20+16]
	105 Add X8, X9, W8
	106 Move W8, [X8+32]
	107 Move W19, W31
	108 Subtract W27, W25, W26
	109 Move TEMP, X8
	110 And TEMP, TEMP, -2147483648
	111 Compare TEMP, -2147483648
	112 JumpIfEqual {124}
	113 Move W9, 0x80000000
	114 Move W10, W9
	115 ShiftRight W10, 1
	116 And W10, W10, 0x7FFFFFFF
	117 Add W19, W19, 1
	118 Compare W10, 0
	119 JumpIfEqual {124}
	120 And W11, W8, W9
	121 Move W9, W10
	122 Compare W11, 0
	123 JumpIfEqual {114}
	124 Move X23, 0xF00000
	125 Move X23, [X23+3472]
	126 Move X0, [X23]
	127 Call 0x1C17F10
	128 Add W2, W27, 1
	129 Move X21, X0
	130 Call BigInteger..ctor, X0, X1, X2
	131 Move X0, [X23]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X20
	137 Move W1, W19
	138 Call Kernel.LeftShift, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {318}
	141 Move X24, [X0+24]
	142 Move X20, X0
	143 Move X0, X22
	144 Move W1, W19
	145 Call Kernel.LeftShift, X0, X1
	146 Compare X0, 0
	147 JumpIfEqual {318}
	148 Move X11, [X0+24]
	149 Compare X11, 0
	150 JumpIfEqual {318}
	151 Move W8, [X0+16]
	152 Move X9, [X11+24]
	153 Subtract W10, W8, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract W12, W8, 2
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add W13, W25, 1
	158 Subtract W8, W13, W8
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Compare X24, 0
	161 JumpIfEqual {318}
	162 Add X13, X11, W10
	163 Add X15, X11, W12
	164 Add W14, W26, 1
	165 Move W10, [X24+24]
	166 Move W12, [X13+32]
	167 Move W13, [X15+32]
	168 Move X14, W14
	169 NotImplemented "Instruction CMP not yet implemented."
	170 And X9, X9, 0
	171 Add X11, X11, 32
	172 NotImplemented "Instruction CSINC not yet implemented."
	173 Move W17, W27
	174 Move X16, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract W0, W25, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X4, X24, 32
	179 Move W3, [X4]
	180 Move W1, [X4]
	181 Subtract W2, W25, 2
	182 Add X4, X4, W2
	183 NotImplemented "Instruction BFM not yet implemented."
	184 NotImplemented "Instruction UDIV not yet implemented."
	185 NotImplemented "Instruction MSUB not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W5, [X4]
	189 Multiply X6, X1, X13
	190 NotImplemented "Instruction BFM not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X3, X3, X12
	193 Move X5, X3
	194 ShiftRight X5, 32
	195 And X5, X5, 0x7FFFFFFF
	196 Subtract X1, X1, 1
	197 Compare X5, 0
	198 JumpIfEqual {186}
	199 Move X2, X31
	200 Move X3, X31
	201 And X4, X1, 0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X5, X17, X2
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move W6, [X11]
	206 Add X5, X24, W5
	207 Move W7, [X5+32]
	208 Add X2, X2, 1
	209 NotImplemented "Instruction MADD not yet implemented."
	210 Subtract W6, W7, W3
	211 Move X3, X3
	212 ShiftRight X3, 32
	213 And X3, X3, 0x7FFFFFFF
	214 NotImplemented "Instruction CINC not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X5+32], W6
	217 Compare X3, 0
	218 JumpIfEqual {237}
	219 Move X2, X31
	220 Move X3, X31
	221 Subtract W1, W1, 1
	222 Add X4, X17, X2
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X4, X24, W4
	226 Add X4, X4, 32
	227 Move W5, [X4]
	228 Move W6, [X11]
	229 Add X2, X2, 1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Add X3, X3, X5
	232 Add X3, X3, X6
	233 Move [X4], W3
	234 Move X3, X3
	235 ShiftRight X3, 32
	236 And X3, X3, 0x7FFFFFFF
	237 Compare X21, 0
	238 JumpIfEqual {318}
	239 Move X2, [X21+24]
	240 Compare X2, 0
	241 JumpIfEqual {318}
	242 Move W3, [X2+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract W8, W8, 1
	245 Add X2, X2, W17
	246 Subtract X17, X17, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W25, W0
	249 Move [X2+32], W1
	250 Compare X21, 0
	251 JumpIfEqual {318}
	252 Move X0, X21
	253 Call BigInteger.Normalize, X0
	254 Move X0, X20
	255 Call BigInteger.Normalize, X0
	256 Move X8, 0xF00000
	257 Move X8, [X8+3896]
	258 Move W1, 2
	259 Move X0, [X8]
	260 Call 0x1C17D6C
	261 Compare X0, 0
	262 JumpIfEqual {318}
	263 Move X8, [X0]
	264 Move X22, X0
	265 Move X0, X21
	266 Move X1, [X8+64]
	267 Call 0x1C17E00
	268 Compare X0, 0
	269 JumpIfEqual {319}
	270 Move W8, [X22+24]
	271 Compare W8, 0
	272 JumpIfEqual {317}
	273 Move X8, [X22]
	274 Move [X22+32], X21
	275 Move X0, X20
	276 Move X1, [X8+64]
	277 Call 0x1C17E00
	278 Compare X0, 0
	279 JumpIfEqual {319}
	280 Move W8, [X22+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move [X22+40], X20
	283 Compare W19, 0
	284 JumpIfEqual {305}
	285 Move X0, [X23]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move X0, X20
	291 Move W1, W19
	292 Call Kernel.RightShift, X0, X1
	293 Move X19, X0
	294 Compare X0, 0
	295 JumpIfEqual {302}
	296 Move X8, [X22]
	297 Move X0, X19
	298 Move X1, [X8+64]
	299 Call 0x1C17E00
	300 Compare X0, 0
	301 JumpIfEqual {319}
	302 Move W8, [X22+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move [X22+40], X19
	305 Move X0, X22
	306 Move X20, [X31+64]
	307 Move X19, [X31+72]
	308 Move X22, [X31+48]
	309 Move X21, [X31+56]
	310 Move X24, [X31+32]
	311 Move X23, [X31+40]
	312 Move X26, [X31+16]
	313 Move X25, [X31+24]
	314 Move X30, [X31+80]
	315 Move X27, [X31+88]
	316 Return X0
	317 Call 0x1C17F28
	318 Call 0x1C17F20
	319 Call 0x1C17F44
	320 Move X1, X31
	321 Call 0x1C17DEC

Method: Mono.Math.BigInteger LeftShift(Mono.Math.BigInteger bi, System.Int32 n)

Disassembly:
	0x03222E9C BL 0x3223C10
	0x03222EA0 LDR X8, [X19 + 0x18]
	0x03222EA4 CMP W8, 0x1
	0x03222EA8 B.LS 0x322309C
	0x03222EAC LDR X26, [X19 + 0x28]
	0x03222EB0 MOV X25, X0
	0x03222EB4 CBZ X26, 0x3222ED0
	0x03222EB8 LDR X8, [X19]
	0x03222EBC MOV X0, X26
	0x03222EC0 LDR X1, [X8 + 0x40]
	0x03222EC4 BL 0x1C16E00
	0x03222EC8 CBZ X0, 0x32230A0
	0x03222ECC LDR X8, [X19 + 0x18]
	0x03222ED0 CBZ W8, 0x322309C
	0x03222ED4 STR X26, [X19 + 0x20]
	0x03222ED8 CBZ X25, 0x3222EF4
	0x03222EDC LDR X8, [X19]
	0x03222EE0 MOV X0, X25
	0x03222EE4 LDR X1, [X8 + 0x40]
	0x03222EE8 BL 0x1C16E00
	0x03222EEC CBZ X0, 0x32230A0
	0x03222EF0 LDR W8, [X19 + 0x18]
	0x03222EF4 CMP W8, 0x1
	0x03222EF8 B.LS 0x322309C
	0x03222EFC MOV X0, X23
	0x03222F00 MOV X1, X24
	0x03222F04 STR X25, [X19 + 0x28]
	0x03222F08 BL 0x3221844
	0x03222F0C LDR X8, [X20 + 0x18]
	0x03222F10 MOV X23, X0
	0x03222F14 CMP W8, 0x1
	0x03222F18 B.LS 0x322309C
	0x03222F1C LDR X25, [X20 + 0x28]
	0x03222F20 CBZ X25, 0x3222F3C
	0x03222F24 LDR X8, [X20]
	0x03222F28 MOV X0, X25
	0x03222F2C LDR X1, [X8 + 0x40]
	0x03222F30 BL 0x1C16E00
	0x03222F34 CBZ X0, 0x32230A0
	0x03222F38 LDR X8, [X20 + 0x18]
	0x03222F3C CBZ W8, 0x322309C
	0x03222F40 STR X25, [X20 + 0x20]
	0x03222F44 CBZ X23, 0x32230AC
	0x03222F48 LDR W9, [X23 + 0x18]
	0x03222F4C CBZ W9, 0x322309C
	0x03222F50 LDR X25, [X23 + 0x20]
	0x03222F54 CBZ X25, 0x3222F70
	0x03222F58 LDR X8, [X20]
	0x03222F5C MOV X0, X25
	0x03222F60 LDR X1, [X8 + 0x40]
	0x03222F64 BL 0x1C16E00
	0x03222F68 CBZ X0, 0x32230A0
	0x03222F6C LDR W8, [X20 + 0x18]
	0x03222F70 CMP W8, 0x1
	0x03222F74 B.LS 0x322309C
	0x03222F78 STR X25, [X20 + 0x28]
	0x03222F7C LDR X8, [X21 + 0x18]
	0x03222F80 CMP W8, 0x1
	0x03222F84 B.LS 0x322309C
	0x03222F88 LDR X25, [X21 + 0x28]
	0x03222F8C CBZ X25, 0x3222FA8
	0x03222F90 LDR X8, [X21]
	0x03222F94 MOV X0, X25
	0x03222F98 LDR X1, [X8 + 0x40]
	0x03222F9C BL 0x1C16E00
	0x03222FA0 CBZ X0, 0x32230A0
	0x03222FA4 LDR X8, [X21 + 0x18]
	0x03222FA8 CBZ W8, 0x322309C
	0x03222FAC STR X25, [X21 + 0x20]
	0x03222FB0 LDR W9, [X23 + 0x18]
	0x03222FB4 CMP W9, 0x1
	0x03222FB8 B.LS 0x322309C
	0x03222FBC LDR X25, [X23 + 0x28]
	0x03222FC0 CBZ X25, 0x3222FDC
	0x03222FC4 LDR X8, [X21]
	0x03222FC8 MOV X0, X25
	0x03222FCC LDR X1, [X8 + 0x40]
	0x03222FD0 BL 0x1C16E00
	0x03222FD4 CBZ X0, 0x32230A0
	0x03222FD8 LDR W8, [X21 + 0x18]
	0x03222FDC CMP W8, 0x1
	0x03222FE0 B.LS 0x322309C
	0x03222FE4 STR X25, [X21 + 0x28]
	0x03222FE8 LDR W8, [X23 + 0x18]
	0x03222FEC CMP W8, 0x1
	0x03222FF0 B.LS 0x322309C
	0x03222FF4 LDR X25, [X23 + 0x28]
	0x03222FF8 ADD W29, W29, 0x1
	0x03222FFC MOV X23, X24
	0x03223000 B 0x3222E0C
	0x03223004 LDR W8, [X21 + 0x18]
	0x03223008 CBZ W8, 0x322309C
	0x0322300C LDR X0, [X28]
	0x03223010 LDR X21, [X21 + 0x20]
	0x03223014 LDR W8, [X0 + 0xE0]
	0x03223018 CBNZ W8, 0x3223020
	0x0322301C BL 0x1C16DFC
	0x03223020 MOVZ W1, 0x1
	0x03223024 MOV X0, X21
	0x03223028 BL 0x322065C
	0x0322302C TBNZ X0, 0x0, 0x32230B0
	0x03223030 LDR W8, [X19 + 0x18]
	0x03223034 CBZ W8, 0x322309C
	0x03223038 CMP W8, 0x1
	0x0322303C B.EQ 0x322309C
	0x03223040 CBZ X20, 0x32230AC
	0x03223044 LDR W8, [X20 + 0x18]
	0x03223048 CBZ W8, 0x322309C
	0x0322304C LDR X0, [X28]
	0x03223050 LDP X21, X19, [X19 + 0x20]
	0x03223054 LDR X20, [X20 + 0x20]
	0x03223058 LDR W8, [X0 + 0xE0]
	0x0322305C CBNZ W8, 0x3223064
	0x03223060 BL 0x1C16DFC
	0x03223064 MOV X0, X19
	0x03223068 MOV X1, X20
	0x0322306C BL 0x321C0A8
	0x03223070 CBZ X22, 0x32230AC
	0x03223074 MOV X2, X0
	0x03223078 MOV X0, X22
	0x0322307C MOV X1, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x11BB000
	009 Move W8, [X19+827]
	010 Move W21, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF00000
	017 Move X0, [X0+3472]
	018 Call 0x1C17CF4
	019 Move X0, 0xF00000
	020 Move X0, [X0+3904]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+827], W8
	024 Move X8, 0xF00000
	025 Move X8, [X8+3472]
	026 Compare W21, 0
	027 JumpIfEqual {76}
	028 Compare X20, 0
	029 JumpIfEqual {136}
	030 Move X0, [X8]
	031 Move W24, [X20+16]
	032 NotImplemented "Instruction SBFM not yet implemented."
	033 And W23, W21, 31
	034 Call 0x1C17F10
	035 Add W8, W22, W24
	036 Add W2, W8, 1
	037 Move X19, X0
	038 Call BigInteger..ctor, X0, X1, X2
	039 Move W8, [X20+16]
	040 Compare W23, 0
	041 JumpIfEqual {85}
	042 Compare W8, 0
	043 JumpIfEqual {113}
	044 Move X12, [X20+24]
	045 Compare X12, 0
	046 JumpIfEqual {136}
	047 Move W11, [X12+24]
	048 Move X14, W22
	049 Subtract W13, W31, W21
	050 Move X14, X14
	051 ShiftRight X14, 62
	052 And X14, X14, 0x1FFFFFFF
	053 Move X10, X31
	054 Move W9, W31
	055 Add X12, X12, 32
	056 And W13, W13, 31
	057 Add X14, X14, 32
	058 Move W15, W22
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare X19, 0
	061 JumpIfEqual {136}
	062 Move X16, [X19+24]
	063 Compare X16, 0
	064 JumpIfEqual {136}
	065 Move W17, [X16+24]
	066 Add W0, W15, W10
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W17, [X12]
	069 Add X16, X16, X14
	070 NotImplemented "Instruction LSLV not yet implemented."
	071 Or W9, W0, W9
	072 Move [X16], W9
	073 Add X10, X10, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction LSRV not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {136}
	078 Move X0, [X8]
	079 Move W21, [X20+16]
	080 Call 0x1C17F10
	081 Add W2, W21, 1
	082 Move X1, X20
	083 Move X19, X0
	084 Call BigInteger..ctor, X0, X1, X2
	085 Compare W8, 0
	086 JumpIfEqual {111}
	087 Compare X19, 0
	088 JumpIfEqual {136}
	089 Move W11, W22
	090 Move X10, [X19+24]
	091 Move X13, W11
	092 Move X11, [X20+24]
	093 Move X9, X31
	094 Add X13, X10, X13
	095 Move W12, W22
	096 Add X13, X13, 32
	097 Add X14, X11, 32
	098 Compare X11, 0
	099 JumpIfEqual {136}
	100 Move W15, [X11+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Compare X10, 0
	103 JumpIfEqual {136}
	104 Move W15, [X10+24]
	105 Add W16, W12, W9
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W15, [X14]
	108 Move [X13], W15
	109 Add X9, X9, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare X19, 0
	112 JumpIfNotEqual {125}
	113 Compare X19, 0
	114 JumpIfEqual {136}
	115 Move X8, X31
	116 Move W9, W31
	117 Move X10, [X19+24]
	118 Compare X10, 0
	119 JumpIfEqual {136}
	120 Move W11, [X10+24]
	121 Add X8, X8, W22
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X10, X8
	124 Move [X8+32], W9
	125 Move X0, X19
	126 Call BigInteger.Normalize, X0
	127 Move X0, X19
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Return X0
	136 Call 0x1C17F20
	137 Call 0x1C17F28

Method: Mono.Math.BigInteger RightShift(Mono.Math.BigInteger bi, System.Int32 n)

Disassembly:
	0x03223084 LDP X22, X21, [X31 + 0x40]
	0x03223088 LDP X24, X23, [X31 + 0x30]
	0x0322308C LDP X26, X25, [X31 + 0x20]
	0x03223090 LDP X28, X27, [X31 + 0x10]
	0x03223094 LDP X29, X30, [X31], #0x60
	0x03223098 B 0x3223C10
	0x0322309C BL 0x1C16F28
	0x032230A0 BL 0x1C16F44
	0x032230A4 MOV X1, X31
	0x032230A8 BL 0x1C16DEC
	0x032230AC BL 0x1C16F20
	0x032230B0 ADRP X0, 0xEFE000
	0x032230B4 LDR X0, [X0 + 0x560]
	0x032230B8 BL 0x1C16D08
	0x032230BC BL 0x1C16F10
	0x032230C0 MOV X19, X0
	0x032230C4 ADRP X0, 0xEFE000
	0x032230C8 LDR X0, [X0 + 0x740]
	0x032230CC BL 0x1C16D08
	0x032230D0 MOV X1, X0
	0x032230D4 MOV X0, X19
	0x032230D8 MOV X2, X31
	0x032230DC BL 0x3316338
	0x032230E0 ADRP X0, 0xEFE000
	0x032230E4 LDR X0, [X0 + 0xF60]
	0x032230E8 BL 0x1C16D08
	0x032230EC MOV X1, X0
	0x032230F0 MOV X0, X19
	0x032230F4 BL 0x1C16DEC
	0x032230F8 STR X30, [X31 - 0x30]!
	0x032230FC STP X22, X21, [X31 + 0x10]
	0x03223100 STP X20, X19, [X31 + 0x20]
	0x03223104 ADRP X21, 0x11B9000
	0x03223108 LDRB W8, [X21 + 0x332]
	0x0322310C MOV X20, X1
	0x03223110 MOV X19, X0
	0x03223114 TBNZ X8, 0x0, 0x322312C
	0x03223118 ADRP X0, 0xEFE000
	0x0322311C LDR X0, [X0 + 0xD90]
	0x03223120 BL 0x1C16CF4
	0x03223124 MOVZ W8, 0x1
	0x03223128 STRB W8, [X21 + 0x332]
	0x0322312C MOV X0, X19
	0x03223130 MOV X1, X31
	0x03223134 BL 0x33BDD8C
	0x03223138 STR X20, [X19 + 0x10]
	0x0322313C CBZ X20, 0x32231C4
	0x03223140 ADRP X21, 0xEFE000
	0x03223144 LDR X21, [X21 + 0xD90]
	0x03223148 LDR W22, [X20 + 0x10]
	0x0322314C LDR X0, [X21]
	0x03223150 BL 0x1C16F10
	0x03223154 MOVZ W2, 0x1
	0x03223158 BFM W2, W22, 0x1F, 0x1E
	0x0322315C MOV X20, X0
	0x03223160 BL 0x32211F0
	0x03223164 STR X20, [X19 + 0x18]
	0x03223168 CBZ X20, 0x32231C4
	0x0322316C LDR X8, [X20 + 0x18]
	0x03223170 CBZ X8, 0x32231C4
	0x03223174 LDR W10, [X8 + 0x18]
	0x03223178 UBFM W9, W22, 0x1F, 0x1E
	0x0322317C CMP W9, W10
	0x03223180 B.CS 0x32231C8
	0x03223184 ADD X8, X8, W9, 0x2, UXTW
	0x03223188 MOVZ W9, 0x1
	0x0322318C STR W9, [X8 + 0x20]
	0x03223190 LDR X0, [X21]
	0x03223194 LDR X21, [X19 + 0x10]
	0x03223198 LDR W8, [X0 + 0xE0]
	0x0322319C CBNZ W8, 0x32231A4
	0x032231A0 BL 0x1C16DFC
	0x032231A4 MOV X0, X20
	0x032231A8 MOV X1, X21
	0x032231AC BL 0x322026C
	0x032231B0 STR X0, [X19 + 0x18]
	0x032231B4 LDP X20, X19, [X31 + 0x20]
	0x032231B8 LDP X22, X21, [X31 + 0x10]
	0x032231BC LDR X30, [X31], #0x30
	0x032231C0 RET
	0x032231C4 BL 0x1C16F20
	0x032231C8 BL 0x1C16F28
	0x032231CC STP X30, X23, [X31 - 0x30]!
	0x032231D0 STP X22, X21, [X31 + 0x10]
	0x032231D4 STP X20, X19, [X31 + 0x20]
	0x032231D8 ADRP X22, 0x11B9000
	0x032231DC ADRP X23, 0xEFE000
	0x032231E0 LDRB W8, [X22 + 0x336]
	0x032231E4 LDR X23, [X23 + 0xD90]
	0x032231E8 MOV X19, X2
	0x032231EC MOV X21, X1
	0x032231F0 MOV X20, X0
	0x032231F4 TBNZ X8, 0x0, 0x322320C
	0x032231F8 ADRP X0, 0xEFE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x11BA000
	008 Move W8, [X19+828]
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xEFF000
	016 Move X0, [X0+3472]
	017 Call 0x1C17CF4
	018 Move X0, 0xEFF000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+828], W8
	023 Move X8, 0xEFF000
	024 Move X8, [X8+3472]
	025 Compare W20, 0
	026 JumpIfEqual {69}
	027 Compare X21, 0
	028 JumpIfEqual {100}
	029 Move X0, [X8]
	030 Move W23, [X21+16]
	031 NotImplemented "Instruction SBFM not yet implemented."
	032 Call 0x1C17F10
	033 Subtract W8, W23, W22
	034 Add W2, W8, 1
	035 Move X19, X0
	036 Call BigInteger..ctor, X0, X1, X2
	037 Compare X19, 0
	038 JumpIfEqual {100}
	039 Move X8, [X19+24]
	040 Compare X8, 0
	041 JumpIfEqual {100}
	042 Move W9, [X8+24]
	043 And W11, W20, 31
	044 Subtract W10, W9, 2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare W11, 0
	047 Invalid "Jump target not found in method."
	048 Move X12, [X21+24]
	049 Compare X12, 0
	050 JumpIfEqual {100}
	051 Move W14, [X12+24]
	052 Subtract W16, W31, W20
	053 Move W13, W31
	054 Move X15, W22
	055 And W16, W16, 31
	056 Add X17, X15, W10
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X17, X12, X17
	060 Move W17, [X17+32]
	061 Move W10, W10
	062 Add X0, X8, X10
	063 Subtract W10, W10, 1
	064 NotImplemented "Instruction LSRV not yet implemented."
	065 Or W13, W1, W13
	066 Add W31, W10, 1
	067 Move [X0+32], W13
	068 NotImplemented "Instruction LSLV not yet implemented."
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X21
	072 Move X19, X0
	073 Call BigInteger..ctor, X0, X1
	074 Move X11, [X21+24]
	075 Compare X11, 0
	076 JumpIfEqual {100}
	077 Move W12, [X11+24]
	078 Move X13, W22
	079 Add X14, X13, W10
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X14, X11, X14
	083 Move W14, [X14+32]
	084 Move W10, W10
	085 Add X15, X8, X10
	086 Subtract W10, W10, 1
	087 Add W31, W10, 1
	088 Move [X15+32], W14
	089 Move X0, X19
	090 Call BigInteger.Normalize, X0
	091 Move X0, X19
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Move X23, [X31+56]
	098 Return X0
	099 Call 0x1C17F28
	100 Call 0x1C17F20

Method: Mono.Math.BigInteger MultiplyByDword(Mono.Math.BigInteger n, System.UInt32 f)

Disassembly:
	0x03222DA8 CBZ X0, 0x32230A0
	0x03222DAC LDR W8, [X21 + 0x18]
	0x03222DB0 CBZ W8, 0x322309C
	0x03222DB4 MOV W0, W31
	0x03222DB8 STR X22, [X21 + 0x20]
	0x03222DBC BL 0x321C2D0
	0x03222DC0 MOV X22, X0
	0x03222DC4 CBZ X0, 0x3222DDC
	0x03222DC8 LDR X8, [X21]
	0x03222DCC MOV X0, X22
	0x03222DD0 LDR X1, [X8 + 0x40]
	0x03222DD4 BL 0x1C16E00
	0x03222DD8 CBZ X0, 0x32230A0
	0x03222DDC LDR W8, [X21 + 0x18]
	0x03222DE0 CMP W8, 0x1
	0x03222DE4 B.LS 0x322309C
	0x03222DE8 STR X22, [X21 + 0x28]
	0x03222DEC ADRP X8, 0xEFF000
	0x03222DF0 LDR X8, [X8 + 0xDC8]
	0x03222DF4 LDR X0, [X8]
	0x03222DF8 BL 0x1C16F10
	0x03222DFC MOV X1, X23
	0x03222E00 MOV X22, X0
	0x03222E04 BL 0x32230F8
	0x03222E08 MOV W29, W31
	0x03222E0C LDR X0, [X28]
	0x03222E10 MOV X24, X25
	0x03222E14 LDR W8, [X0 + 0xE0]
	0x03222E18 CBNZ W8, 0x3222E20
	0x03222E1C BL 0x1C16DFC
	0x03222E20 MOV X0, X24
	0x03222E24 MOV W1, W31
	0x03222E28 BL 0x322065C
	0x03222E2C TBZ X0, 0x0, 0x3223004
	0x03222E30 CMP W29, 0x2
	0x03222E34 B.GE 0x3222E4C
	0x03222E38 MOV X0, X23
	0x03222E3C MOV X1, X24
	0x03222E40 BL 0x3221844
	0x03222E44 CBNZ X20, 0x3222F0C
	0x03222E48 B 0x32230AC
	0x03222E4C LDR W8, [X19 + 0x18]
	0x03222E50 CBZ W8, 0x322309C
	0x03222E54 CMP W8, 0x1
	0x03222E58 B.EQ 0x322309C
	0x03222E5C CBZ X20, 0x32230AC
	0x03222E60 LDR W8, [X20 + 0x18]
	0x03222E64 CBZ W8, 0x322309C
	0x03222E68 LDR X0, [X28]
	0x03222E6C LDP X25, X26, [X19 + 0x20]
	0x03222E70 LDR X27, [X20 + 0x20]
	0x03222E74 LDR W8, [X0 + 0xE0]
	0x03222E78 CBNZ W8, 0x3222E80
	0x03222E7C BL 0x1C16DFC
	0x03222E80 MOV X0, X26
	0x03222E84 MOV X1, X27
	0x03222E88 BL 0x321C0A8
	0x03222E8C CBZ X22, 0x32230AC
	0x03222E90 MOV X2, X0
	0x03222E94 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x11BB000
	007 Move W8, [X20+829]
	008 Move W21, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF00000
	015 Move X0, [X0+3472]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+829], W8
	019 Compare X19, 0
	020 JumpIfEqual {68}
	021 Move X8, 0xF00000
	022 Move X8, [X8+3472]
	023 Move W22, [X19+16]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Add W2, W22, 1
	027 Move X20, X0
	028 Call BigInteger..ctor, X0, X1, X2
	029 Move X12, [X19+24]
	030 Compare X12, 0
	031 JumpIfEqual {68}
	032 Move W10, [X12+24]
	033 Move X8, X31
	034 Move X9, X31
	035 Move W11, W21
	036 Add X12, X12, 32
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare X20, 0
	039 JumpIfEqual {68}
	040 Move X13, [X20+24]
	041 Compare X13, 0
	042 JumpIfEqual {68}
	043 Move W14, [X13+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W15, [X12]
	046 NotImplemented "Instruction NOP not yet implemented."
	047 NotImplemented "Instruction MADD not yet implemented."
	048 Add X15, X13, X8
	049 Move [X15+32], W9
	050 Move W15, [X19+16]
	051 Add X8, X8, 1
	052 Move X9, X9
	053 ShiftRight X9, 32
	054 And X9, X9, 0x7FFFFFFF
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X13, X8
	058 Move X0, X20
	059 Move [X8+32], W9
	060 Call BigInteger.Normalize, X0
	061 Move X0, X20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20
	069 Call 0x1C17F28

Method: System.Void Multiply(System.UInt32[] x, System.UInt32 xOffset, System.UInt32 xLen, System.UInt32[] y, System.UInt32 yOffset, System.UInt32 yLen, System.UInt32[] d, System.UInt32 dOffset)

Disassembly:
	0x03222CAC LDP X22, X21, [X31 + 0x40]
	0x03222CB0 LDP X24, X23, [X31 + 0x30]
	0x03222CB4 LDP X26, X25, [X31 + 0x20]
	0x03222CB8 LDP X28, X27, [X31 + 0x10]
	0x03222CBC LDP X29, X30, [X31], #0x60
	0x03222CC0 B 0x321BF30
	0x03222CC4 ADRP X21, 0xEFF000
	0x03222CC8 LDR X21, [X21 + 0xF38]
	0x03222CCC MOVZ W1, 0x2
	0x03222CD0 LDR X0, [X21]
	0x03222CD4 BL 0x1C16D6C
	0x03222CD8 ADRP X28, 0xEFF000
	0x03222CDC LDR X28, [X28 + 0xD90]
	0x03222CE0 MOV X19, X0
	0x03222CE4 LDR X8, [X28]
	0x03222CE8 LDR W9, [X8 + 0xE0]
	0x03222CEC CBNZ W9, 0x3222CF8
	0x03222CF0 MOV X0, X8
	0x03222CF4 BL 0x1C16DFC
	0x03222CF8 MOV W0, W31
	0x03222CFC BL 0x321C2D0
	0x03222D00 CBZ X19, 0x32230AC
	0x03222D04 MOV X20, X0
	0x03222D08 CBZ X0, 0x3222D20
	0x03222D0C LDR X8, [X19]
	0x03222D10 MOV X0, X20
	0x03222D14 LDR X1, [X8 + 0x40]
	0x03222D18 BL 0x1C16E00
	0x03222D1C CBZ X0, 0x32230A0
	0x03222D20 LDR W8, [X19 + 0x18]
	0x03222D24 CBZ W8, 0x322309C
	0x03222D28 MOVZ W0, 0x1
	0x03222D2C STR X20, [X19 + 0x20]
	0x03222D30 BL 0x321C2D0
	0x03222D34 MOV X20, X0
	0x03222D38 CBZ X0, 0x3222D50
	0x03222D3C LDR X8, [X19]
	0x03222D40 MOV X0, X20
	0x03222D44 LDR X1, [X8 + 0x40]
	0x03222D48 BL 0x1C16E00
	0x03222D4C CBZ X0, 0x32230A0
	0x03222D50 LDR W8, [X19 + 0x18]
	0x03222D54 CMP W8, 0x1
	0x03222D58 B.LS 0x322309C
	0x03222D5C STR X20, [X19 + 0x28]
	0x03222D60 LDR X0, [X21]
	0x03222D64 MOVZ W1, 0x2
	0x03222D68 BL 0x1C16D6C
	0x03222D6C LDR X8, [X21]
	0x03222D70 MOV X20, X0
	0x03222D74 MOVZ W1, 0x2
	0x03222D78 MOV X0, X8
	0x03222D7C BL 0x1C16D6C
	0x03222D80 MOV X21, X0
	0x03222D84 MOV W0, W31
	0x03222D88 BL 0x321C2D0
	0x03222D8C CBZ X21, 0x32230AC
	0x03222D90 MOV X22, X0
	0x03222D94 CBZ X0, 0x3222DAC
	0x03222D98 LDR X8, [X21]
	0x03222D9C MOV X0, X22
	0x03222DA0 LDR X1, [X8 + 0x40]
	0x03222DA4 BL 0x1C16E00

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Add X8, X0, 32
	007 Compare X3, 0
	008 JumpIfNotEqual {12}
	009 Move X8, X31
	010 Compare X3, 0
	011 JumpIfEqual {18}
	012 Move W9, [X3+24]
	013 Compare W9, 0
	014 JumpIfEqual {18}
	015 Add X14, X3, 32
	016 Compare X6, 0
	017 JumpIfNotEqual {21}
	018 Move X14, X31
	019 Compare X6, 0
	020 JumpIfEqual {25}
	021 Move W9, [X6+24]
	022 Compare W9, 0
	023 JumpIfEqual {25}
	024 Add X11, X6, 32
	025 Move X11, X31
	026 Add X8, X8, W1
	027 Add X9, X8, W2
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W12, W4
	030 Add X10, X14, W4
	031 Move X15, X12
	032 ShiftRight X15, 62
	033 And X15, X15, 0x1FFFFFFF
	034 Add X11, X11, W7
	035 Add X12, X10, W5
	036 Add X13, X10, 4
	037 Add X14, X14, X15
	038 Move W15, [X8]
	039 Compare W15, 0
	040 JumpIfEqual {68}
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W17, [X10]
	043 Move W0, [X11]
	044 Move X16, X11
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction MADD not yet implemented."
	047 Move [X16+4], W15
	048 Move X15, X15
	049 ShiftRight X15, 32
	050 And X15, X15, 0x7FFFFFFF
	051 Move W16, 4
	052 Move W0, [X11]
	053 Move W17, [X8]
	054 Move W1, [X14]
	055 Add X15, X15, X0
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move [X11], W15
	058 Add X16, X16, 4
	059 Add X17, X14, X16
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X15, X15
	062 ShiftRight X15, 32
	063 And X15, X15, 0x7FFFFFFF
	064 Add X16, X11, X16
	065 Compare X15, 0
	066 JumpIfEqual {68}
	067 Move [X16], W15
	068 Add X8, X8, 4
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X11, X11, 4
	071 Return 

Method: System.Void MultiplyMod2p32pmod(System.UInt32[] x, System.Int32 xOffset, System.Int32 xLen, System.UInt32[] y, System.Int32 yOffest, System.Int32 yLen, System.UInt32[] d, System.Int32 dOffset, System.Int32 mod)

Disassembly:
	0x03224698 MOV X1, X25
	0x0322469C MOV X2, X23
	0x032246A0 BL 0x32231CC
	0x032246A4 MOV X25, X0
	0x032246A8 LDR X0, [X26]
	0x032246AC LDR W8, [X0 + 0xE0]
	0x032246B0 CBNZ W8, 0x32246B8
	0x032246B4 BL 0x1C16DFC
	0x032246B8 MOVZ W1, 0x1
	0x032246BC MOV X0, X25
	0x032246C0 BL 0x321FE58
	0x032246C4 TBNZ X0, 0x0, 0x3224758
	0x032246C8 CMP W22, 0x1
	0x032246CC MOV W28, W22
	0x032246D0 B.LT 0x3224738
	0x032246D4 LDR X0, [X26]
	0x032246D8 LDR W8, [X0 + 0xE0]
	0x032246DC CBNZ W8, 0x32246E4
	0x032246E0 BL 0x1C16DFC
	0x032246E4 MOV X0, X25
	0x032246E8 MOV X1, X21
	0x032246EC BL 0x321BFF8
	0x032246F0 TBZ X0, 0x0, 0x3224738
	0x032246F4 LDR X0, [X26]
	0x032246F8 LDR W8, [X0 + 0xE0]
	0x032246FC CBNZ W8, 0x3224704
	0x03224700 BL 0x1C16DFC
	0x03224704 MOVZ W0, 0x2
	0x03224708 BL 0x321C2D0
	0x0322470C CBZ X24, 0x322478C
	0x03224710 MOV X2, X0
	0x03224714 MOV X0, X24
	0x03224718 MOV X1, X25
	0x0322471C BL 0x32231CC
	0x03224720 MOVZ W1, 0x1
	0x03224724 MOV X25, X0
	0x03224728 BL 0x321FE58
	0x0322472C TBNZ X0, 0x0, 0x322476C
	0x03224730 SUBS W28, W28, 0x1
	0x03224734 B.NE 0x32246D4
	0x03224738 LDR X0, [X26]
	0x0322473C LDR W8, [X0 + 0xE0]
	0x03224740 CBNZ W8, 0x3224748
	0x03224744 BL 0x1C16DFC
	0x03224748 MOV X0, X25
	0x0322474C MOV X1, X21
	0x03224750 BL 0x321BFF8
	0x03224754 TBNZ X0, 0x0, 0x322476C
	0x03224758 ADD W27, W27, 0x1
	0x0322475C CMP W27, W20
	0x03224760 B.NE 0x3224614
	0x03224764 MOVZ W0, 0x1
	0x03224768 B 0x3224770
	0x0322476C MOV W0, W31
	0x03224770 LDP X20, X19, [X31 + 0x50]
	0x03224774 LDP X22, X21, [X31 + 0x40]
	0x03224778 LDP X24, X23, [X31 + 0x30]
	0x0322477C LDP X26, X25, [X31 + 0x20]
	0x03224780 LDP X28, X27, [X31 + 0x10]
	0x03224784 LDR X30, [X31], #0x60
	0x03224788 RET
	0x0322478C BL 0x1C16F20
	0x03224790 MOVZ W0, 0x2
	0x03224794 RET
	0x03224798 STP X30, X21, [X31 - 0x20]!
	0x0322479C STP X20, X19, [X31 + 0x10]
	0x032247A0 ADRP X20, 0x11B8000
	0x032247A4 ADRP X21, 0xEFD000
	0x032247A8 ADRP X19, 0xEFD000
	0x032247AC LDRB W8, [X20 + 0x342]
	0x032247B0 LDR X21, [X21 + 0xF88]
	0x032247B4 LDR X19, [X19 + 0xF90]
	0x032247B8 TBNZ X8, 0x0, 0x32247DC
	0x032247BC ADRP X0, 0xEFD000
	0x032247C0 LDR X0, [X0 + 0xF88]
	0x032247C4 BL 0x1C16CF4
	0x032247C8 ADRP X0, 0xEFD000
	0x032247CC LDR X0, [X0 + 0xF90]
	0x032247D0 BL 0x1C16CF4

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {9}
	003 Move W8, [X0+24]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Add X8, X0, 32
	007 Compare X3, 0
	008 JumpIfNotEqual {12}
	009 Move X8, X31
	010 Compare X3, 0
	011 JumpIfEqual {18}
	012 Move W9, [X3+24]
	013 Compare W9, 0
	014 JumpIfEqual {18}
	015 Add X15, X3, 32
	016 Compare X6, 0
	017 JumpIfNotEqual {21}
	018 Move X15, X31
	019 Compare X6, 0
	020 JumpIfEqual {25}
	021 Move W9, [X6+24]
	022 Compare W9, 0
	023 JumpIfEqual {25}
	024 Add X11, X6, 32
	025 Move X11, X31
	026 Add X8, X8, W1
	027 Add X9, X8, W2
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W14, [X31]
	030 NotImplemented "Instruction SBFM not yet implemented."
	031 Add X10, X15, W4
	032 Add X11, X11, W7
	033 Add X12, X10, W5
	034 Add X13, X10, 4
	035 Add X14, X11, W14
	036 Add X15, X15, X16
	037 Move W16, [X8]
	038 Compare W16, 0
	039 JumpIfEqual {80}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W17, [X10]
	043 Move W1, [X11]
	044 Move X0, X11
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Move [X0+4], W16
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X16, X16
	051 ShiftRight X16, 32
	052 And X16, X16, 0x7FFFFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X31
	055 Add X2, X11, X0
	056 Add X17, X15, X0
	057 Move W5, [X2+4]
	058 Move W3, [X8]
	059 Move W4, [X17+4]
	060 Add X1, X2, 8
	061 Add X16, X16, X5
	062 Add X6, X17, 8
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X2+4], W16
	068 Move X16, X16
	069 ShiftRight X16, 32
	070 And X16, X16, 0x7FFFFFFF
	071 Add X0, X0, 4
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X0, X11, X0
	074 Add X0, X0, 4
	075 Compare W17, 0
	076 JumpIfEqual {80}
	077 Compare X16, 0
	078 JumpIfEqual {80}
	079 Move [X0], W16
	080 Add X8, X8, 4
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X11, X11, 4
	083 Return 

Method: System.UInt32 modInverse(Mono.Math.BigInteger bi, System.UInt32 modulus)

Disassembly:
	0x03224FBC SUB X31, X31, 0x20
	0x03224FC0 STP X30, X19, [X31 + 0x10]
	0x03224FC4 LDR X19, [X0 + 0x10]
	0x03224FC8 ADD X0, X31, 0x8
	0x03224FCC MOVN W1, 0x0
	0x03224FD0 MOV X2, X31
	0x03224FD4 STR X31, [X31 + 0x8]
	0x03224FD8 BL 0x33C6730
	0x03224FDC LDR X1, [X31 + 0x8]
	0x03224FE0 MOV X0, X19
	0x03224FE4 MOV X2, X31
	0x03224FE8 BL 0x33BE5B0
	0x03224FEC LDP X30, X19, [X31 + 0x10]
	0x03224FF0 AND W0, W0, 0x1
	0x03224FF4 ADD X31, X31, 0x20
	0x03224FF8 RET
	0x03224FFC STR X30, [X31 - 0x20]!
	0x03225000 STP X20, X19, [X31 + 0x10]
	0x03225004 ADRP X19, 0x11B7000
	0x03225008 ADRP X20, 0xEFC000
	0x0322500C LDRB W8, [X19 + 0x34B]
	0x03225010 LDR X20, [X20 + 0xFB0]
	0x03225014 TBNZ X8, 0x0, 0x322502C
	0x03225018 ADRP X0, 0xEFC000
	0x0322501C LDR X0, [X0 + 0xFB0]
	0x03225020 BL 0x1C16CF4
	0x03225024 MOVZ W8, 0x1
	0x03225028 STRB W8, [X19 + 0x34B]
	0x0322502C LDR X8, [X20]
	0x03225030 LDR X8, [X8 + 0xB8]
	0x03225034 LDR X0, [X8]
	0x03225038 CBZ X0, 0x3225050
	0x0322503C LDR X8, [X0]
	0x03225040 LDP X20, X19, [X31 + 0x10]
	0x03225044 LDP X2, X1, [X8 + 0x178]
	0x03225048 LDR X30, [X31], #0x20
	0x0322504C BR X2
	0x03225050 LDP X20, X19, [X31 + 0x10]
	0x03225054 LDR X30, [X31], #0x20
	0x03225058 RET
	0x0322505C STP X30, X23, [X31 - 0x30]!
	0x03225060 STP X22, X21, [X31 + 0x10]
	0x03225064 STP X20, X19, [X31 + 0x20]
	0x03225068 ADRP X22, 0x11B7000
	0x0322506C ADRP X23, 0xEFC000
	0x03225070 LDRB W8, [X22 + 0x34C]
	0x03225074 LDR X23, [X23 + 0xFB0]
	0x03225078 MOV W19, W2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11B9000
	007 Move X22, 0xEFE000
	008 Move W8, [X21+830]
	009 Move X22, [X22+3472]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xEFE000
	017 Move X0, [X0+3472]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+830], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call Kernel.DwordMod, X0, X1
	029 Move W8, W0
	030 Move W9, W31
	031 Move W0, 1
	032 Move W10, W19
	033 Compare W8, 0
	034 JumpIfEqual {47}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction UDIV not yet implemented."
	037 NotImplemented "Instruction MSUB not yet implemented."
	038 Compare W10, 0
	039 JumpIfEqual {49}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction MADD not yet implemented."
	042 NotImplemented "Instruction UDIV not yet implemented."
	043 NotImplemented "Instruction MADD not yet implemented."
	044 NotImplemented "Instruction MSUB not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {35}
	047 Move W0, W8
	048 Subtract W0, W19, W9
	049 Move W0, W10
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0

Method: Mono.Math.BigInteger modInverse(Mono.Math.BigInteger bi, Mono.Math.BigInteger modulus)

Disassembly:
	0x03223C00 LDP X20, X19, [X31 + 0x20]
	0x03223C04 LDP X22, X21, [X31 + 0x10]
	0x03223C08 LDP X30, X23, [X31], #0x30
	0x03223C0C RET
	0x03223C10 STP X30, X23, [X31 - 0x30]!
	0x03223C14 STP X22, X21, [X31 + 0x10]
	0x03223C18 STP X20, X19, [X31 + 0x20]
	0x03223C1C ADRP X20, 0x11B9000
	0x03223C20 LDRB W8, [X20 + 0x335]
	0x03223C24 MOV X21, X2
	0x03223C28 MOV X22, X1
	0x03223C2C MOV X19, X0
	0x03223C30 TBNZ X8, 0x0, 0x3223C48
	0x03223C34 ADRP X0, 0xEFE000
	0x03223C38 LDR X0, [X0 + 0xD90]
	0x03223C3C BL 0x1C16CF4
	0x03223C40 MOVZ W8, 0x1
	0x03223C44 STRB W8, [X20 + 0x335]
	0x03223C48 ADRP X23, 0xEFE000
	0x03223C4C LDR X23, [X23 + 0xD90]
	0x03223C50 MOV X0, X22
	0x03223C54 MOV X1, X21
	0x03223C58 BL 0x32214D8
	0x03223C5C MOV W20, W0
	0x03223C60 ADDS W31, W0, 0x1
	0x03223C64 B.EQ 0x3223C98
	0x03223C68 CMP W20, 0x1
	0x03223C6C B.EQ 0x3223CB4
	0x03223C70 CBNZ W20, 0x3223D90
	0x03223C74 LDR X0, [X23]
	0x03223C78 LDR W8, [X0 + 0xE0]
	0x03223C7C CBNZ W8, 0x3223C84
	0x03223C80 BL 0x1C16DFC
	0x03223C84 LDP X20, X19, [X31 + 0x20]
	0x03223C88 LDP X22, X21, [X31 + 0x10]
	0x03223C8C MOV W0, W31
	0x03223C90 LDP X30, X23, [X31], #0x30
	0x03223C94 B 0x321C2D0
	0x03223C98 LDR X0, [X23]
	0x03223C9C LDR W8, [X0 + 0xE0]
	0x03223CA0 CBNZ W8, 0x3223CA8
	0x03223CA4 BL 0x1C16DFC
	0x03223CA8 MOV X0, X21
	0x03223CAC MOV X1, X22
	0x03223CB0 B 0x3223CCC
	0x03223CB4 LDR X0, [X23]
	0x03223CB8 LDR W8, [X0 + 0xE0]
	0x03223CBC CBNZ W8, 0x3223CC4
	0x03223CC0 BL 0x1C16DFC
	0x03223CC4 MOV X0, X22
	0x03223CC8 MOV X1, X21
	0x03223CCC BL 0x321C374
	0x03223CD0 MOV X21, X0
	0x03223CD4 LDR X0, [X23]
	0x03223CD8 LDR X22, [X19 + 0x10]
	0x03223CDC LDR W8, [X0 + 0xE0]
	0x03223CE0 CBNZ W8, 0x3223CE8
	0x03223CE4 BL 0x1C16DFC
	0x03223CE8 MOV X0, X21
	0x03223CEC MOV X1, X22
	0x03223CF0 BL 0x32214D8
	0x03223CF4 TBNZ X0, 0x1F, 0x3223D44
	0x03223CF8 CBZ X21, 0x3223D8C
	0x03223CFC LDR X22, [X19 + 0x10]
	0x03223D00 CBZ X22, 0x3223D8C
	0x03223D04 LDR W8, [X21 + 0x10]
	0x03223D08 LDR W9, [X22 + 0x10]
	0x03223D0C CMP W8, W9, LSL
	0x03223D10 B.CS 0x3223D24
	0x03223D14 MOV X0, X19
	0x03223D18 MOV X1, X21
	0x03223D1C BL 0x3223440
	0x03223D20 B 0x3223D44
	0x03223D24 LDR X0, [X23]
	0x03223D28 LDR W8, [X0 + 0xE0]
	0x03223D2C CBNZ W8, 0x3223D34
	0x03223D30 BL 0x1C16DFC
	0x03223D34 MOV X0, X21
	0x03223D38 MOV X1, X22
	0x03223D3C BL 0x321C4E4
	0x03223D40 MOV X21, X0
	0x03223D44 ADDS W31, W20, 0x1
	0x03223D48 B.EQ 0x3223D60
	0x03223D4C MOV X0, X21
	0x03223D50 LDP X20, X19, [X31 + 0x20]
	0x03223D54 LDP X22, X21, [X31 + 0x10]
	0x03223D58 LDP X30, X23, [X31], #0x30
	0x03223D5C RET
	0x03223D60 LDR X0, [X23]
	0x03223D64 LDR X19, [X19 + 0x10]
	0x03223D68 LDR W8, [X0 + 0xE0]
	0x03223D6C CBNZ W8, 0x3223D74
	0x03223D70 BL 0x1C16DFC
	0x03223D74 MOV X0, X19
	0x03223D78 MOV X1, X21
	0x03223D7C LDP X20, X19, [X31 + 0x20]
	0x03223D80 LDP X22, X21, [X31 + 0x10]
	0x03223D84 LDP X30, X23, [X31], #0x30
	0x03223D88 B 0x321C374
	0x03223D8C BL 0x1C16F20
	0x03223D90 ADRP X0, 0xED0000
	0x03223D94 LDR X0, [X0 + 0x7D0]
	0x03223D98 BL 0x1C16D08
	0x03223D9C BL 0x1C16F10
	0x03223DA0 MOV X1, X31
	0x03223DA4 MOV X19, X0
	0x03223DA8 BL 0x33B2C54
	0x03223DAC ADRP X0, 0xEFE000
	0x03223DB0 LDR X0, [X0 + 0xF78]
	0x03223DB4 BL 0x1C16D08
	0x03223DB8 MOV X1, X0
	0x03223DBC MOV X0, X19
	0x03223DC0 BL 0x1C16DEC
	0x03223DC4 STP X30, X23, [X31 - 0x30]!
	0x03223DC8 STP X22, X21, [X31 + 0x10]
	0x03223DCC STP X20, X19, [X31 + 0x20]
	0x03223DD0 ADRP X22, 0x11B9000
	0x03223DD4 ADRP X23, 0xEFE000
	0x03223DD8 LDRB W8, [X22 + 0x337]
	0x03223DDC LDR X23, [X23 + 0xD90]
	0x03223DE0 MOV X19, X2
	0x03223DE4 MOV W21, W1
	0x03223DE8 MOV X20, X0
	0x03223DEC TBNZ X8, 0x0, 0x3223E04
	0x03223DF0 ADRP X0, 0xEFE000
	0x03223DF4 LDR X0, [X0 + 0xD90]
	0x03223DF8 BL 0x1C16CF4
	0x03223DFC MOVZ W8, 0x1
	0x03223E00 STRB W8, [X22 + 0x337]
	0x03223E04 LDR X0, [X23]
	0x03223E08 BL 0x1C16F10
	0x03223E0C MOV W1, W21
	0x03223E10 MOV X22, X0
	0x03223E14 BL 0x3221450
	0x03223E18 MOV X0, X20
	0x03223E1C MOV X1, X22
	0x03223E20 MOV X2, X19
	0x03223E24 LDP X20, X19, [X31 + 0x20]
	0x03223E28 LDP X22, X21, [X31 + 0x10]
	0x03223E2C LDP X30, X23, [X31], #0x30
	0x03223E30 B 0x32231CC
	0x03223E34 STP X30, X23, [X31 - 0x30]!
	0x03223E38 STP X22, X21, [X31 + 0x10]
	0x03223E3C STP X20, X19, [X31 + 0x20]
	0x03223E40 ADRP X19, 0x11B9000
	0x03223E44 LDRB W8, [X19 + 0x339]
	0x03223E48 MOV W21, W1
	0x03223E4C MOV X20, X0
	0x03223E50 TBNZ X8, 0x0, 0x3223E74
	0x03223E54 ADRP X0, 0xEFE000
	0x03223E58 LDR X0, [X0 + 0xF38]
	0x03223E5C BL 0x1C16CF4
	0x03223E60 ADRP X0, 0xEFE000
	0x03223E64 LDR X0, [X0 + 0xD90]
	0x03223E68 BL 0x1C16CF4
	0x03223E6C MOVZ W8, 0x1
	0x03223E70 STRB W8, [X19 + 0x339]
	0x03223E74 CBZ X20, 0x3223FA8
	0x03223E78 ADRP X23, 0xEFE000
	0x03223E7C LDR X23, [X23 + 0xD90]
	0x03223E80 LDR W22, [X20 + 0x10]
	0x03223E84 LDR X0, [X23]
	0x03223E88 BL 0x1C16F10
	0x03223E8C MOV W2, W22
	0x03223E90 MOV X19, X0
	0x03223E94 BL 0x32211F0
	0x03223E98 LDR W11, [X20 + 0x10]
	0x03223E9C CBZ W11, 0x3223F00
	0x03223EA0 LDR X8, [X20 + 0x18]
	0x03223EA4 CBZ X8, 0x3223FA8
	0x03223EA8 LDR W9, [X8 + 0x18]
	0x03223EAC MOV X20, X31
	0x03223EB0 MOV W10, W21
	0x03223EB4 ADD X11, X11, 0x7
	0x03223EB8 SUB X13, X11, 0x8
	0x03223EBC CMP X13, X9
	0x03223EC0 B.CS 0x3223FAC
	0x03223EC4 CBZ X19, 0x3223FA8
	0x03223EC8 LDR X12, [X19 + 0x18]
	0x03223ECC CBZ X12, 0x3223FA8
	0x03223ED0 LDR W14, [X12 + 0x18]
	0x03223ED4 CMP X13, X14
	0x03223ED8 B.CS 0x3223FAC
	0x03223EDC LDR W13, [X8, X11, LSL #2]
	0x03223EE0 BFM X13, X20, 0x20, 0x1F
	0x03223EE4 UDIV X14, X13, X10
	0x03223EE8 STR W14, [X12, X11, LSL #2]
	0x03223EEC SUB X11, X11, 0x1
	0x03223EF0 CMP X11, 0x7
	0x03223EF4 MSUB X20, X14, X10, X13
	0x03223EF8 B.NE 0x3223EB8
	0x03223EFC B 0x3223F08
	0x03223F00 CBZ X19, 0x3223FA8
	0x03223F04 MOV W20, W31
	0x03223F08 ADRP X21, 0xEFE000
	0x03223F0C LDR X21, [X21 + 0xF38]
	0x03223F10 MOV X0, X19
	0x03223F14 BL 0x32213F8
	0x03223F18 LDR X0, [X23]
	0x03223F1C LDR W8, [X0 + 0xE0]
	0x03223F20 CBNZ W8, 0x3223F28
	0x03223F24 BL 0x1C16DFC
	0x03223F28 MOV W0, W20
	0x03223F2C BL 0x321BF30
	0x03223F30 LDR X8, [X21]
	0x03223F34 MOV X20, X0
	0x03223F38 MOVZ W1, 0x2
	0x03223F3C MOV X0, X8
	0x03223F40 BL 0x1C16D6C
	0x03223F44 CBZ X0, 0x3223FA8
	0x03223F48 LDR X8, [X0]
	0x03223F4C MOV X21, X0
	0x03223F50 MOV X0, X19
	0x03223F54 LDR X1, [X8 + 0x40]
	0x03223F58 BL 0x1C16E00
	0x03223F5C CBZ X0, 0x3223FB0
	0x03223F60 LDR W8, [X21 + 0x18]
	0x03223F64 CBZ W8, 0x3223FAC
	0x03223F68 STR X19, [X21 + 0x20]
	0x03223F6C CBZ X20, 0x3223F88
	0x03223F70 LDR X8, [X21]
	0x03223F74 MOV X0, X20
	0x03223F78 LDR X1, [X8 + 0x40]
	0x03223F7C BL 0x1C16E00
	0x03223F80 CBZ X0, 0x3223FB0
	0x03223F84 LDR W8, [X21 + 0x18]
	0x03223F88 CMP W8, 0x1
	0x03223F8C B.LS 0x3223FAC
	0x03223F90 STR X20, [X21 + 0x28]
	0x03223F94 MOV X0, X21
	0x03223F98 LDP X20, X19, [X31 + 0x20]
	0x03223F9C LDP X22, X21, [X31 + 0x10]
	0x03223FA0 LDP X30, X23, [X31], #0x30
	0x03223FA4 RET
	0x03223FA8 BL 0x1C16F20
	0x03223FAC BL 0x1C16F28
	0x03223FB0 BL 0x1C16F44
	0x03223FB4 MOV X1, X31
	0x03223FB8 BL 0x1C16DEC
	0x03223FBC STR X30, [X31 - 0x30]!
	0x03223FC0 STP X22, X21, [X31 + 0x10]
	0x03223FC4 STP X20, X19, [X31 + 0x20]
	0x03223FC8 ADRP X21, 0x11B9000
	0x03223FCC ADRP X22, 0xEFE000
	0x03223FD0 LDRB W8, [X21 + 0x33E]
	0x03223FD4 LDR X22, [X22 + 0xD90]
	0x03223FD8 MOV W19, W1
	0x03223FDC MOV X20, X0
	0x03223FE0 TBNZ X8, 0x0, 0x3223FF8
	0x03223FE4 ADRP X0, 0xEFE000
	0x03223FE8 LDR X0, [X0 + 0xD90]
	0x03223FEC BL 0x1C16CF4
	0x03223FF0 MOVZ W8, 0x1
	0x03223FF4 STRB W8, [X21 + 0x33E]
	0x03223FF8 LDR X0, [X22]
	0x03223FFC LDR W8, [X0 + 0xE0]
	0x03224000 CBNZ W8, 0x3224008
	0x03224004 BL 0x1C16DFC
	0x03224008 MOV X0, X20
	0x0322400C MOV W1, W19
	0x03224010 BL 0x32217E0
	0x03224014 MOV W8, W0
	0x03224018 MOV W9, W31
	0x0322401C MOVZ W0, 0x1
	0x03224020 MOV W10, W19
	0x03224024 CBZ W8, 0x3224058
	0x03224028 CMP W8, 0x1
	0x0322402C B.EQ 0x322406C
	0x03224030 UDIV W11, W10, W8
	0x03224034 MSUB W10, W11, W8, W10
	0x03224038 CBZ W10, 0x3224068
	0x0322403C CMP W10, 0x1
	0x03224040 MADD W9, W11, W0, W9
	0x03224044 B.EQ 0x3224060
	0x03224048 UDIV W11, W8, W10
	0x0322404C MADD W0, W11, W9, W0
	0x03224050 MSUB W8, W11, W10, W8
	0x03224054 CBNZ W8, 0x3224028
	0x03224058 MOV W0, W8
	0x0322405C B 0x322406C
	0x03224060 SUB W0, W19, W9
	0x03224064 B 0x322406C
	0x03224068 MOV W0, W10
	0x0322406C LDP X20, X19, [X31 + 0x20]
	0x03224070 LDP X22, X21, [X31 + 0x10]
	0x03224074 LDR X30, [X31], #0x30
	0x03224078 RET
	0x0322407C STR X30, [X31 - 0x30]!
	0x03224080 STP X22, X21, [X31 + 0x10]
	0x03224084 STP X20, X19, [X31 + 0x20]
	0x03224088 LDR X8, [X2 + 0x8]
	0x0322408C STP X1, X2, [X0 + 0x20]
	0x03224090 MOV X19, X0
	0x03224094 MOV X20, X2
	0x03224098 STR X8, [X0 + 0x10]
	0x0322409C LDRB W22, [X2 + 0x52]
	0x032240A0 STR X0, [X0 + 0x40]
	0x032240A4 MOV X0, X2
	0x032240A8 MOV X21, X1
	0x032240AC BL 0x1C16D84
	0x032240B0 TBZ X0, 0x0, 0x32240C8
	0x032240B4 CMP W22, 0x2
	0x032240B8 B.NE 0x3224104
	0x032240BC ADRP X8, 0xFFFFFFFFFE990000
	0x032240C0 ADD X8, X8, 0x334
	0x032240C4 B 0x3224148
	0x032240C8 CMP W22, 0x1
	0x032240CC B.NE 0x3224100
	0x032240D0 LDRB W8, [X19 + 0x70]
	0x032240D4 CBZ W8, 0x3224118
	0x032240D8 MOV X0, X20
	0x032240DC BL 0x1C16D7C
	0x032240E0 MOV W21, W0
	0x032240E4 MOV X0, X20
	0x032240E8 BL 0x1C17238
	0x032240EC TBZ X21, 0x0, 0x3224124
	0x032240F0 TBZ X0, 0x0, 0x3224134
	0x032240F4 ADRP X8, 0xFFFFFFFFFE990000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x11BA000
	014 Move W8, [X19+831]
	015 Move X23, X1
	016 Move X25, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xEFF000
	022 Move X0, [X0+3896]
	023 Call 0x1C17CF4
	024 Move X0, 0xEFF000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0xEFF000
	028 Move X0, [X0+3528]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+831], W8
	032 Compare X23, 0
	033 JumpIfEqual {363}
	034 Move W8, [X23+16]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X23+24]
	037 Compare X8, 0
	038 JumpIfEqual {363}
	039 Move W9, [X8+24]
	040 Compare W9, 0
	041 JumpIfEqual {359}
	042 Move W1, [X8+32]
	043 Move X0, X25
	044 Call Kernel.modInverse, X0, X1
	045 Move X8, 0xEFF000
	046 Move X8, [X8+3472]
	047 Move W19, W0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move W0, W19
	055 Move X20, [X31+80]
	056 Move X19, [X31+88]
	057 Move X22, [X31+64]
	058 Move X21, [X31+72]
	059 Move X24, [X31+48]
	060 Move X23, [X31+56]
	061 Move X26, [X31+32]
	062 Move X25, [X31+40]
	063 Move X28, [X31+16]
	064 Move X27, [X31+24]
	065 Move X29, [X31+96]
	066 Move X30, [X31+104]
	067 Call BigInteger.op_Implicit, X0
	068 Return X0
	069 Move X21, 0xEFF000
	070 Move X21, [X21+3896]
	071 Move W1, 2
	072 Move X0, [X21]
	073 Call 0x1C17D6C
	074 Move X28, 0xEFF000
	075 Move X28, [X28+3472]
	076 Move X19, X0
	077 Move X8, [X28]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move W0, W31
	084 Call BigInteger.op_Implicit, X0
	085 Compare X19, 0
	086 JumpIfEqual {363}
	087 Move X20, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X19]
	091 Move X0, X20
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {360}
	096 Move W8, [X19+24]
	097 Compare W8, 0
	098 JumpIfEqual {359}
	099 Move W0, 1
	100 Move [X19+32], X20
	101 Call BigInteger.op_Implicit, X0
	102 Move X20, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X19]
	106 Move X0, X20
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {360}
	111 Move W8, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X19+40], X20
	114 Move X0, [X21]
	115 Move W1, 2
	116 Call 0x1C17D6C
	117 Move X8, [X21]
	118 Move X20, X0
	119 Move W1, 2
	120 Move X0, X8
	121 Call 0x1C17D6C
	122 Move X21, X0
	123 Move W0, W31
	124 Call BigInteger.op_Implicit, X0
	125 Compare X21, 0
	126 JumpIfEqual {363}
	127 Move X22, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X21]
	131 Move X0, X22
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {360}
	136 Move W8, [X21+24]
	137 Compare W8, 0
	138 JumpIfEqual {359}
	139 Move W0, W31
	140 Move [X21+32], X22
	141 Call BigInteger.op_Implicit, X0
	142 Move X22, X0
	143 Compare X0, 0
	144 JumpIfEqual {151}
	145 Move X8, [X21]
	146 Move X0, X22
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {360}
	151 Move W8, [X21+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X21+40], X22
	154 Move X8, 0xEFF000
	155 Move X8, [X8+3528]
	156 Move X0, [X8]
	157 Call 0x1C17F10
	158 Move X1, X23
	159 Move X22, X0
	160 Call ModulusRing..ctor, X0, X1
	161 Move W29, W31
	162 Move X0, [X28]
	163 Move X24, X25
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X24
	169 Move W1, W31
	170 Call BigInteger.op_Inequality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {304}
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X23
	177 Move X1, X24
	178 Call Kernel.multiByteDivide, X0, X1
	179 Compare X20, 0
	180 JumpIfNotEqual {237}
	181 Move W8, [X19+24]
	182 Compare W8, 0
	183 JumpIfEqual {359}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare X20, 0
	186 JumpIfEqual {363}
	187 Move W8, [X20+24]
	188 Compare W8, 0
	189 JumpIfEqual {359}
	190 Move X0, [X28]
	191 Move X25, [X19+32]
	192 Move X26, [X19+40]
	193 Move X27, [X20+32]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X26
	199 Move X1, X27
	200 Call BigInteger.op_Multiply, X0, X1
	201 Compare X22, 0
	202 JumpIfEqual {363}
	203 Move X2, X0
	204 Move X0, X22
	205 Move X1, X25
	206 Call ModulusRing.Difference, X0, X1, X2
	207 Move X8, [X19+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X26, [X19+40]
	210 Move X25, X0
	211 Compare X26, 0
	212 JumpIfEqual {220}
	213 Move X8, [X19]
	214 Move X0, X26
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {360}
	219 Move X8, [X19+24]
	220 Compare W8, 0
	221 JumpIfEqual {359}
	222 Move [X19+32], X26
	223 Compare X25, 0
	224 JumpIfEqual {232}
	225 Move X8, [X19]
	226 Move X0, X25
	227 Move X1, [X8+64]
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {360}
	231 Move W8, [X19+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X0, X23
	234 Move X1, X24
	235 Move [X19+40], X25
	236 Call Kernel.multiByteDivide, X0, X1
	237 Move X8, [X20+24]
	238 Move X23, X0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X25, [X20+40]
	241 Compare X25, 0
	242 JumpIfEqual {250}
	243 Move X8, [X20]
	244 Move X0, X25
	245 Move X1, [X8+64]
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {360}
	249 Move X8, [X20+24]
	250 Compare W8, 0
	251 JumpIfEqual {359}
	252 Move [X20+32], X25
	253 Compare X23, 0
	254 JumpIfEqual {363}
	255 Move W9, [X23+24]
	256 Compare W9, 0
	257 JumpIfEqual {359}
	258 Move X25, [X23+32]
	259 Compare X25, 0
	260 JumpIfEqual {268}
	261 Move X8, [X20]
	262 Move X0, X25
	263 Move X1, [X8+64]
	264 Call 0x1C17E00
	265 Compare X0, 0
	266 JumpIfEqual {360}
	267 Move W8, [X20+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move [X20+40], X25
	270 Move X8, [X21+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X25, [X21+40]
	273 Compare X25, 0
	274 JumpIfEqual {282}
	275 Move X8, [X21]
	276 Move X0, X25
	277 Move X1, [X8+64]
	278 Call 0x1C17E00
	279 Compare X0, 0
	280 JumpIfEqual {360}
	281 Move X8, [X21+24]
	282 Compare W8, 0
	283 JumpIfEqual {359}
	284 Move [X21+32], X25
	285 Move W9, [X23+24]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X25, [X23+40]
	288 Compare X25, 0
	289 JumpIfEqual {297}
	290 Move X8, [X21]
	291 Move X0, X25
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {360}
	296 Move W8, [X21+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X21+40], X25
	299 Move W8, [X23+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X25, [X23+40]
	302 Add W29, W29, 1
	303 Move X23, X24
	304 Move W8, [X21+24]
	305 Compare W8, 0
	306 JumpIfEqual {359}
	307 Move X0, [X28]
	308 Move X21, [X21+32]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move W1, 1
	314 Move X0, X21
	315 Call BigInteger.op_Inequality, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfEqual {364}
	320 Move W8, [X19+24]
	321 Compare W8, 0
	322 JumpIfEqual {359}
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Compare X20, 0
	325 JumpIfEqual {363}
	326 Move W8, [X20+24]
	327 Compare W8, 0
	328 JumpIfEqual {359}
	329 Move X0, [X28]
	330 Move X21, [X19+32]
	331 Move X19, [X19+40]
	332 Move X20, [X20+32]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X0, X19
	338 Move X1, X20
	339 Call BigInteger.op_Multiply, X0, X1
	340 Compare X22, 0
	341 JumpIfEqual {363}
	342 Move X2, X0
	343 Move X0, X22
	344 Move X1, X21
	345 Move X20, [X31+80]
	346 Move X19, [X31+88]
	347 Move X22, [X31+64]
	348 Move X21, [X31+72]
	349 Move X24, [X31+48]
	350 Move X23, [X31+56]
	351 Move X26, [X31+32]
	352 Move X25, [X31+40]
	353 Move X28, [X31+16]
	354 Move X27, [X31+24]
	355 Move X29, [X31+96]
	356 Move X30, [X31+104]
	357 Call ModulusRing.Difference, X0, X1, X2
	358 Return X0
	359 Call 0x1C17F28
	360 Call 0x1C17F44
	361 Move X1, X31
	362 Call 0x1C17DEC
	363 Call 0x1C17F20
	364 Move X0, 0xEFE000
	365 Move X0, [X0+1376]
	366 Call 0x1C17D08
	367 Call 0x1C17F10
	368 Move X19, X0
	369 Move X0, 0xEFE000
	370 Move X0, [X0+1856]
	371 Call 0x1C17D08
	372 Move X1, X0
	373 Move X0, X19
	374 Move X2, X31
	375 Call ArithmeticException..ctor, X0, X1
	376 Move X0, 0xEFE000
	377 Move X0, [X0+3936]
	378 Call 0x1C17D08
	379 Move X1, X0
	380 Move X0, X19
	381 Call 0x1C17DEC

