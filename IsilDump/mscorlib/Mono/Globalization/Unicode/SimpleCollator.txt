Type: Mono.Globalization.Unicode.SimpleCollator

Method: System.Void .ctor(System.Globalization.CultureInfo culture)

Disassembly:
	0x03210F38 LDRB W8, [X21 + 0x2BE]
	0x03210F3C LDR X22, [X22 + 0xA10]
	0x03210F40 MOV W20, W1
	0x03210F44 MOV W19, W0
	0x03210F48 TBNZ X8, 0x0, 0x3210F60
	0x03210F4C ADRP X0, 0xF11000
	0x03210F50 LDR X0, [X0 + 0xA10]
	0x03210F54 BL 0x1C16CF4
	0x03210F58 MOVZ W8, 0x1
	0x03210F5C STRB W8, [X21 + 0x2BE]
	0x03210F60 LDR X0, [X22]
	0x03210F64 LDR W8, [X0 + 0xE0]
	0x03210F68 CBNZ W8, 0x3210F70
	0x03210F6C BL 0x1C16DFC
	0x03210F70 MOVZ W9, 0x50000000
	0x03210F74 UBFM W8, W20, 0x1, 0x1F
	0x03210F78 ANDS W31, W20, W9, 0x0
	0x03210F7C MOV W0, W19
	0x03210F80 LDP X20, X19, [X31 + 0x20]
	0x03210F84 LDP X22, X21, [X31 + 0x10]
	0x03210F88 AND W10, W8, 0x2
	0x03210F8C CSET W9, EQ
	0x03210F90 BFM W10, W8, 0x1E, 0x0
	0x03210F94 ORR W1, W10, W9, 0x0
	0x03210F98 LDR X30, [X31], #0x30
	0x03210F9C B 0x320E668
	0x03210FA0 STR X30, [X31 - 0x10]!
	0x03210FA4 LDR X8, [X0 + 0x30]
	0x03210FA8 CBZ X8, 0x3210FF4
	0x03210FAC LDR W10, [X8 + 0x18]
	0x03210FB0 ADD W9, W1, 0x7
	0x03210FB4 CMP W1, 0x0
	0x03210FB8 CSEL W9, W9, W1, LT
	0x03210FBC SBFM W9, W9, 0x3, 0x1F
	0x03210FC0 CMP W9, W10
	0x03210FC4 B.GE 0x3210FE8
	0x03210FC8 B.CS 0x3210FF8
	0x03210FCC ADD X8, X8, W9, SXTW
	0x03210FD0 LDRB W8, [X8 + 0x20]
	0x03210FD4 SUB W9, W1, W9, 0x3, LSL
	0x03210FD8 LSRV W8, W8, W9
	0x03210FDC ANDS W31, W8, 0x1
	0x03210FE0 CSET W0, EQ
	0x03210FE4 B 0x3210FEC
	0x03210FE8 MOVZ W0, 0x1
	0x03210FEC LDR X30, [X31], #0x10
	0x03210FF0 RET
	0x03210FF4 BL 0x1C16F20
	0x03210FF8 BL 0x1C16F28
	0x03210FFC STR X30, [X31 - 0x10]!
	0x03211000 CBZ X1, 0x3211018
	0x03211004 LDR W3, [X1 + 0x10]
	0x03211008 MOV W4, W2
	0x0321100C MOV W2, W31
	0x03211010 LDR X30, [X31], #0x10
	0x03211014 B 0x321101C
	0x03211018 BL 0x1C16F20
	0x0321101C STP X30, X25, [X31 - 0x40]!
	0x03211020 STP X24, X23, [X31 + 0x10]
	0x03211024 STP X22, X21, [X31 + 0x20]
	0x03211028 STP X20, X19, [X31 + 0x30]
	0x0321102C ADRP X24, 0x11CB000
	0x03211030 ADRP X25, 0xF10000
	0x03211034 LDRB W8, [X24 + 0x2BF]
	0x03211038 LDR X25, [X25 + 0xBF8]
	0x0321103C MOV W19, W4
	0x03211040 MOV W22, W3
	0x03211044 MOV W20, W2
	0x03211048 MOV X21, X1
	0x0321104C MOV X23, X0
	0x03211050 TBNZ X8, 0x0, 0x3211068
	0x03211054 ADRP X0, 0xF10000
	0x03211058 LDR X0, [X0 + 0xBF8]
	0x0321105C BL 0x1C16CF4
	0x03211060 MOVZ W8, 0x1
	0x03211064 STRB W8, [X24 + 0x2BF]
	0x03211068 LDR X0, [X25]
	0x0321106C BL 0x1C16F10
	0x03211070 MOV X1, X31
	0x03211074 MOV X24, X0
	0x03211078 BL 0x33BDD8C
	0x0321107C CBZ X24, 0x32110E0
	0x03211080 LDRB W4, [X23 + 0x5C]
	0x03211084 LDR W2, [X23 + 0x58]
	0x03211088 MOV X0, X24
	0x0321108C MOV W1, W19
	0x03211090 MOV X3, X21
	0x03211094 BL 0x32110EC
	0x03211098 ADD W3, W22, W20
	0x0321109C MOV X0, X23
	0x032110A0 MOV X1, X21
	0x032110A4 MOV W2, W20
	0x032110A8 MOV X4, X24
	0x032110AC MOV W5, W19
	0x032110B0 BL 0x3211264
	0x032110B4 MOV X0, X24
	0x032110B8 BL 0x32157A4
	0x032110BC MOVI V0.2D, 0x0
	0x032110C0 STRB W31, [X24 + 0x82]
	0x032110C4 STUR V0, [X24 + 0x58]
	0x032110C8 STUR V0, [X24 + 0x68]
	0x032110CC LDP X20, X19, [X31 + 0x30]
	0x032110D0 LDP X22, X21, [X31 + 0x20]
	0x032110D4 LDP X24, X23, [X31 + 0x10]
	0x032110D8 LDP X30, X25, [X31], #0x40
	0x032110DC RET
	0x032110E0 BL 0x1C16F20
	0x032110E4 MOV X1, X31
	0x032110E8 B 0x33BDD8C
	0x032110EC STR X30, [X31 - 0x40]!
	0x032110F0 STP X24, X23, [X31 + 0x10]
	0x032110F4 STP X22, X21, [X31 + 0x20]
	0x032110F8 STP X20, X19, [X31 + 0x30]
	0x032110FC ADRP X24, 0x11CB000
	0x03211100 LDRB W8, [X24 + 0x2C9]
	0x03211104 MOV W22, W4
	0x03211108 MOV X21, X3
	0x0321110C MOV W23, W2
	0x03211110 MOV W20, W1
	0x03211114 MOV X19, X0
	0x03211118 TBNZ X8, 0x0, 0x3211130
	0x0321111C ADRP X0, 0xEE2000
	0x03211120 LDR X0, [X0 + 0x618]
	0x03211124 BL 0x1C16CF4
	0x03211128 MOVZ W8, 0x1
	0x0321112C STRB W8, [X24 + 0x2C9]
	0x03211130 STR X21, [X19 + 0x50]
	0x03211134 STP W23, W20, [X19 + 0x78]
	0x03211138 CBZ X21, 0x3211260
	0x0321113C AND W10, W22, 0x1
	0x03211140 ADRP X22, 0xEE2000
	0x03211144 LDR X22, [X22 + 0x618]
	0x03211148 LDR W21, [X21 + 0x10]
	0x0321114C LDR X9, [X19 + 0x10]
	0x03211150 MOVZ W8, 0x1
	0x03211154 BIC W8, W8, W20, 0x1
	0x03211158 STRB W8, [X19 + 0x80]
	0x0321115C STRB W10, [X19 + 0x81]
	0x03211160 CBZ X9, 0x3211170
	0x03211164 LDR W9, [X9 + 0x18]
	0x03211168 CMP W21, W9
	0x0321116C B.LE 0x3211188
	0x03211170 LDR X0, [X22]
	0x03211174 UBFM W8, W21, 0x1F, 0x1E
	0x03211178 ADD W1, W8, 0xA
	0x0321117C BL 0x1C16D6C
	0x03211180 LDRB W8, [X19 + 0x80]
	0x03211184 STR X0, [X19 + 0x10]
	0x03211188 CBZ W8, 0x32111B0
	0x0321118C LDR X8, [X19 + 0x18]
	0x03211190 CBZ X8, 0x32111A0
	0x03211194 LDR W8, [X8 + 0x18]
	0x03211198 CMP W21, W8
	0x0321119C B.LE 0x32111B0
	0x032111A0 LDR X0, [X22]
	0x032111A4 ADD W1, W21, 0xA
	0x032111A8 BL 0x1C16D6C
	0x032111AC STR X0, [X19 + 0x18]
	0x032111B0 LDR X8, [X19 + 0x20]
	0x032111B4 CBZ X8, 0x32111C4
	0x032111B8 LDR W8, [X8 + 0x18]
	0x032111BC CMP W21, W8
	0x032111C0 B.LE 0x32111D4
	0x032111C4 LDR X0, [X22]
	0x032111C8 ADD W1, W21, 0xA
	0x032111CC BL 0x1C16D6C
	0x032111D0 STR X0, [X19 + 0x20]
	0x032111D4 LDR X8, [X19 + 0x28]
	0x032111D8 CBNZ X8, 0x32111EC
	0x032111DC LDR X0, [X22]
	0x032111E0 MOVZ W1, 0xA
	0x032111E4 BL 0x1C16D6C
	0x032111E8 STR X0, [X19 + 0x28]
	0x032111EC LDR X8, [X19 + 0x30]
	0x032111F0 CBNZ X8, 0x3211204
	0x032111F4 LDR X0, [X22]
	0x032111F8 MOVZ W1, 0xA
	0x032111FC BL 0x1C16D6C
	0x03211200 STR X0, [X19 + 0x30]
	0x03211204 LDR X8, [X19 + 0x38]
	0x03211208 CBNZ X8, 0x321121C
	0x0321120C LDR X0, [X22]
	0x03211210 MOVZ W1, 0xA
	0x03211214 BL 0x1C16D6C
	0x03211218 STR X0, [X19 + 0x38]
	0x0321121C LDR X8, [X19 + 0x40]
	0x03211220 CBNZ X8, 0x3211234
	0x03211224 LDR X0, [X22]
	0x03211228 MOVZ W1, 0xA
	0x0321122C BL 0x1C16D6C
	0x03211230 STR X0, [X19 + 0x40]
	0x03211234 LDR X8, [X19 + 0x48]
	0x03211238 CBNZ X8, 0x321124C
	0x0321123C LDR X0, [X22]
	0x03211240 MOVZ W1, 0xA
	0x03211244 BL 0x1C16D6C
	0x03211248 STR X0, [X19 + 0x48]
	0x0321124C LDP X20, X19, [X31 + 0x30]
	0x03211250 LDP X22, X21, [X31 + 0x20]
	0x03211254 LDP X24, X23, [X31 + 0x10]
	0x03211258 LDR X30, [X31], #0x40
	0x0321125C RET
	0x03211260 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x11CD000
	009 Move W8, [X21+692]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xEE4000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xF12000
	020 Move X0, [X0+2576]
	021 Call 0x1C17CF4
	022 Move X0, 0xF12000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+692], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {220}
	032 Move X8, [X20]
	033 Move X23, 0xF12000
	034 Move X24, 0xEE4000
	035 Move X0, X20
	036 Move X9, [X8+408]
	037 Move X1, [X8+416]
	038 Move X23, [X23+2576]
	039 Move X24, [X24+1560]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move [X19+88], W0
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X9, [X8+472]
	045 Move X1, [X8+480]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Add X2, X19, 24
	048 Add X3, X19, 56
	049 Add X4, X19, 64
	050 Add X5, X19, 80
	051 Add X6, X19, 72
	052 Move X1, X20
	053 Move [X19+16], X0
	054 Call SimpleCollator.SetCJKTable, X0, X1, X2, X3, X4, X5, X6
	055 Move X21, X20
	056 Move X8, [X21]
	057 Move X0, X21
	058 Move X9, [X8+408]
	059 Move X1, [X8+416]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X21]
	063 Move X0, X21
	064 Move X9, [X8+408]
	065 Move X1, [X8+416]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X23]
	068 Move W22, W0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move W0, W22
	075 Call MSCompatUnicodeTable.GetTailoringInfo, X0
	076 Compare X0, 0
	077 JumpIfNotEqual {96}
	078 Move X8, [X21]
	079 Move X0, X21
	080 Move X9, [X8+456]
	081 Move X1, [X8+464]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X21, X0
	084 Compare X0, 0
	085 JumpIfNotEqual {56}
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move W0, 127
	092 Call MSCompatUnicodeTable.GetTailoringInfo, X0
	093 Move X22, X0
	094 Compare X0, 0
	095 JumpIfNotEqual {97}
	096 Move X22, X0
	097 Move W8, [X22+28]
	098 Add X21, X19, 40
	099 Move [X19+92], W8
	100 Move X0, [X23]
	101 Add X23, X19, 32
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X22
	108 Move X2, X23
	109 Move X3, X21
	110 Call MSCompatUnicodeTable.BuildTailoringTables, X0, X1, X2, X3
	111 Move X0, [X24]
	112 Move W1, 96
	113 Call 0x1C17D6C
	114 Move X8, [X19+32]
	115 Move [X19+48], X0
	116 Compare X8, 0
	117 JumpIfEqual {220}
	118 Move W11, [X8+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W9, W31
	121 Move W10, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X11, X8, W9
	124 Move X11, [X11+32]
	125 Compare X11, 0
	126 JumpIfEqual {220}
	127 Move X11, [X11+24]
	128 Compare X11, 0
	129 JumpIfEqual {220}
	130 Move W14, [X11+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X12, X31
	133 Add X13, X11, 32
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X14, [X19+48]
	136 Compare X14, 0
	137 JumpIfEqual {220}
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move W17, [X14+24]
	140 Move X16, X15
	141 ShiftRight X16, 3
	142 And X16, X16, 0x7FFFFFFF
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X14, X14, X16
	145 Move W16, [X14+32]
	146 Add X12, X12, 1
	147 And X15, X15, 7
	148 NotImplemented "Instruction LSLV not yet implemented."
	149 Or W15, W16, W15
	150 Move [X14+32], W15
	151 Move W14, [X11+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W11, [X8+24]
	154 Add W9, W9, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, [X19+88]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X20, 0xF11000
	159 Move X20, [X20+3032]
	160 Move X0, [X20]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X20]
	166 Move X8, [X0+184]
	167 Move X8, [X8]
	168 Compare X8, 0
	169 JumpIfEqual {220}
	170 Move X8, [X8+32]
	171 Compare X8, 0
	172 JumpIfEqual {220}
	173 Move W11, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W9, W31
	176 Move W10, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X11, X8, W9
	179 Move X11, [X11+32]
	180 Compare X11, 0
	181 JumpIfEqual {220}
	182 Move X11, [X11+24]
	183 Compare X11, 0
	184 JumpIfEqual {220}
	185 Move W14, [X11+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X12, X31
	188 Add X13, X11, 32
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X14, [X19+48]
	191 Compare X14, 0
	192 JumpIfEqual {220}
	193 NotImplemented "Instruction LDRH not yet implemented."
	194 Move W17, [X14+24]
	195 Move X16, X15
	196 ShiftRight X16, 3
	197 And X16, X16, 0x7FFFFFFF
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X14, X14, X16
	200 Move W16, [X14+32]
	201 Add X12, X12, 1
	202 And X15, X15, 7
	203 NotImplemented "Instruction LSLV not yet implemented."
	204 Or W15, W16, W15
	205 Move [X14+32], W15
	206 Move W14, [X11+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move W11, [X8+24]
	209 Add W9, W9, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X20, [X31+48]
	212 Move X19, [X31+56]
	213 Move X22, [X31+32]
	214 Move X21, [X31+40]
	215 Move X24, [X31+16]
	216 Move X23, [X31+24]
	217 Move X30, [X31+64]
	218 Return 
	219 Call 0x1C17F28
	220 Call 0x1C17F20

Method: System.Void SetCJKTable(System.Globalization.CultureInfo culture, ref Mono.Globalization.Unicode.CodePointIndexer cjkIndexer, ref System.Byte* catTable, ref System.Byte* lv1Table, ref Mono.Globalization.Unicode.CodePointIndexer lv2Indexer, ref System.Byte* lv2Table)

Disassembly:
	0x03211264 STP X29, X30, [X31 - 0x60]!
	0x03211268 STP X28, X27, [X31 + 0x10]
	0x0321126C STP X26, X25, [X31 + 0x20]
	0x03211270 STP X24, X23, [X31 + 0x30]
	0x03211274 STP X22, X21, [X31 + 0x40]
	0x03211278 STP X20, X19, [X31 + 0x50]
	0x0321127C ADD X29, X31, 0x0
	0x03211280 SUB X31, X31, 0x30
	0x03211284 ADRP X20, 0x11CB000
	0x03211288 LDRB W8, [X20 + 0x2C0]
	0x0321128C MOV W19, W5
	0x03211290 MOV X28, X4
	0x03211294 MOV W26, W3
	0x03211298 MOV W22, W2
	0x0321129C MOV X27, X1
	0x032112A0 MOV X24, X0
	0x032112A4 TBNZ X8, 0x0, 0x32112C8
	0x032112A8 ADRP X0, 0xF10000
	0x032112AC LDR X0, [X0 + 0xA10]
	0x032112B0 BL 0x1C16CF4
	0x032112B4 ADRP X0, 0xF10000
	0x032112B8 LDR X0, [X0 + 0xBD8]
	0x032112BC BL 0x1C16CF4
	0x032112C0 MOVZ W8, 0x1
	0x032112C4 STRB W8, [X20 + 0x2C0]
	0x032112C8 ADD X9, X31, 0x0
	0x032112CC SUB X21, X9, 0x10
	0x032112D0 ADD X31, X21, 0x0
	0x032112D4 MOV X8, X31
	0x032112D8 STUR W31, [X9 - 0x10]
	0x032112DC STRB W31, [X21, X8, LSL]
	0x032112E0 ADD X8, X8, 0x1
	0x032112E4 CMP X8, 0x4
	0x032112E8 B.NE 0x32112DC
	0x032112EC CMP W22, W26
	0x032112F0 B.GE 0x32115B4
	0x032112F4 CBZ X27, 0x32115D4
	0x032112F8 ORR X9, X21, 0x1
	0x032112FC ORR X8, X21, 0x3
	0x03211300 STP X8, X9, [X29 - 0x28]
	0x03211304 ORR X8, X21, 0x3
	0x03211308 MOVN W25, 0x0
	0x0321130C STUR X8, [X29 - 0x30]
	0x03211310 STP X27, X28, [X29 - 0x10]
	0x03211314 STUR W26, [X29 - 0x14]
	0x03211318 MOV X0, X27
	0x0321131C MOV W1, W22
	0x03211320 MOV X2, X31
	0x03211324 BL 0x3222A1C
	0x03211328 AND W20, W0, 0xFFFF
	0x0321132C MOV X0, X24
	0x03211330 MOV W1, W20
	0x03211334 BL 0x3210BF4
	0x03211338 CBZ W0, 0x321137C
	0x0321133C MOV W23, W0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11CC000
	011 Move X26, 0xF11000
	012 Move W8, [X25+693]
	013 Move X26, [X26+3032]
	014 Move X19, X6
	015 Move X20, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X23, X2
	019 Move X24, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xF11000
	025 Move X0, [X0+2576]
	026 Call 0x1C17CF4
	027 Move X0, 0xF11000
	028 Move X0, [X0+3032]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X25+693], W8
	032 Move X0, [X26]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X24
	038 Call SimpleCollator.GetNeutralCulture, X0
	039 Compare X0, 0
	040 JumpIfEqual {71}
	041 Move X8, [X0]
	042 Move X24, 0xF11000
	043 Move X9, [X8+424]
	044 Move X1, [X8+432]
	045 Move X24, [X24+2576]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X24]
	048 Move X24, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X24
	055 Move X1, X23
	056 Move X2, X22
	057 Move X3, X21
	058 Move X4, X20
	059 Move X5, X19
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Call MSCompatUnicodeTable.FillCJK, X0, X1, X2, X3, X4, X5
	070 Return 
	071 Call 0x1C17F20

Method: System.Globalization.CultureInfo GetNeutralCulture(System.Globalization.CultureInfo info)

Disassembly:
	0x03211340 MOV X0, X24
	0x03211344 MOV W1, W25
	0x03211348 MOV W2, W23
	0x0321134C MOV W3, W19
	0x03211350 BL 0x3210D14
	0x03211354 MOV W28, W0
	0x03211358 TBNZ X0, 0x1F, 0x32113F8
	0x0321135C MOV W1, W28
	0x03211360 LDUR X28, [X29 - 0x8]
	0x03211364 MOV X0, X24
	0x03211368 MOV W2, W23
	0x0321136C MOV W4, W19
	0x03211370 MOV X3, X28
	0x03211374 BL 0x321167C
	0x03211378 B 0x32115A8
	0x0321137C ADRP X8, 0xF10000
	0x03211380 LDR X8, [X8 + 0xBD8]
	0x03211384 LDR X0, [X8]
	0x03211388 LDR W8, [X0 + 0xE0]
	0x0321138C CBNZ W8, 0x3211394
	0x03211390 BL 0x1C16DFC
	0x03211394 MOV W0, W20
	0x03211398 MOV W1, W19
	0x0321139C BL 0x3210F24
	0x032113A0 TBNZ X0, 0x0, 0x32115A8
	0x032113A4 MOV X0, X24
	0x032113A8 MOV W1, W20
	0x032113AC MOV W2, W19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {33}
	005 Move X19, X0
	006 Move X8, [X19]
	007 Move X0, X19
	008 Move X9, [X8+456]
	009 Move X1, [X8+464]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {34}
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+456]
	016 Move X1, [X8+464]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {33}
	020 Move X8, [X0]
	021 Move X9, [X8+408]
	022 Move X1, [X8+416]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+456]
	028 Move X1, [X8+464]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X19, X0
	031 Compare X0, 0
	032 JumpIfNotEqual {6}
	033 Call 0x1C17F20
	034 Move X0, X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return X0

Method: System.Byte Category(System.Int32 cp)

Disassembly:
	0x032113B0 BL 0x3210B10
	0x032113B4 MOV X1, X27
	0x032113B8 MOV W27, W0
	0x032113BC MOV X0, X24
	0x032113C0 MOV W2, W22
	0x032113C4 MOV W3, W26
	0x032113C8 BL 0x3210680
	0x032113CC CBZ X0, 0x321147C
	0x032113D0 LDR X1, [X0 + 0x20]
	0x032113D4 MOV X26, X0
	0x032113D8 CBZ X1, 0x32114C8
	0x032113DC LDR W3, [X1 + 0x10]
	0x032113E0 MOV X0, X24
	0x032113E4 MOV W2, W31
	0x032113E8 MOV X4, X28
	0x032113EC MOV W5, W19
	0x032113F0 BL 0x3211264
	0x032113F4 B 0x321158C
	0x032113F8 LDUR X8, [X29 - 0x28]
	0x032113FC LDRB W27, [X21]
	0x03211400 LDRB W20, [X8]
	0x03211404 LDUR X8, [X29 - 0x20]
	0x03211408 CMP W20, 0x1
	0x0321140C LDRB W26, [X8]
	0x03211410 B.NE 0x3211428
	0x03211414 MOV X0, X24
	0x03211418 MOV W1, W28
	0x0321141C MOV W2, W23
	0x03211420 BL 0x32104D8
	0x03211424 MOV W20, W0
	0x03211428 LDUR X8, [X29 - 0x30]
	0x0321142C LDRB W4, [X8]
	0x03211430 CMP W4, 0x1
	0x03211434 B.NE 0x321145C
	0x03211438 ADRP X8, 0xF10000
	0x0321143C LDR X8, [X8 + 0xA10]
	0x03211440 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CC000
	006 Move W8, [X21+694]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF11000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+694], W8
	018 Move X21, 0xF11000
	019 Move X21, [X21+2576]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfEqual {40}
	024 Move X0, [X20+24]
	025 Compare X0, 0
	026 JumpIfEqual {52}
	027 Move W1, W19
	028 Call CodePointIndexer.ToIndex, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {40}
	033 Move X8, [X20+56]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W0, [X8]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W0, W19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call MSCompatUnicodeTable.Category, X0
	051 Return X0
	052 Call 0x1C17F20

Method: System.Byte Level1(System.Int32 cp)

Disassembly:
	0x03211444 LDR W8, [X0 + 0xE0]
	0x03211448 CBNZ W8, 0x3211450
	0x0321144C BL 0x1C16DFC
	0x03211450 MOV W0, W28
	0x03211454 BL 0x320E5C4
	0x03211458 MOV W4, W0
	0x0321145C LDUR X28, [X29 - 0x8]
	0x03211460 CBZ X28, 0x32115D4
	0x03211464 MOV X0, X28
	0x03211468 MOV W1, W27
	0x0321146C MOV W2, W26
	0x03211470 MOV W3, W20
	0x03211474 BL 0x3211A14
	0x03211478 B 0x32114BC
	0x0321147C ADRP X8, 0xF10000
	0x03211480 LDR X8, [X8 + 0xA10]
	0x03211484 LDR X0, [X8]
	0x03211488 LDR W8, [X0 + 0xE0]
	0x0321148C CBNZ W8, 0x3211494
	0x03211490 BL 0x1C16DFC
	0x03211494 MOV W0, W27
	0x03211498 BL 0x320E780
	0x0321149C ANDS W31, W0, 0x1
	0x032114A0 MOV X0, X24
	0x032114A4 MOV W1, W27
	0x032114A8 MOV W2, W31
	0x032114AC MOV X3, X28
	0x032114B0 MOV W4, W19
	0x032114B4 CSEL W25, W25, W27, NE
	0x032114B8 BL 0x321167C
	0x032114BC LDUR W26, [X29 - 0x14]
	0x032114C0 LDUR X27, [X29 - 0x10]
	0x032114C4 B 0x32115A8
	0x032114C8 LDR X8, [X26 + 0x28]
	0x032114CC CBZ X8, 0x32115D4
	0x032114D0 MOV X9, X31
	0x032114D4 LDR W10, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CC000
	006 Move W8, [X21+695]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF11000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+695], W8
	018 Move X21, 0xF11000
	019 Move X21, [X21+2576]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X8, [X20+64]
	022 Compare X8, 0
	023 JumpIfEqual {40}
	024 Move X0, [X20+24]
	025 Compare X0, 0
	026 JumpIfEqual {52}
	027 Move W1, W19
	028 Call CodePointIndexer.ToIndex, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {40}
	033 Move X8, [X20+64]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W0, [X8]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W0, W19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call MSCompatUnicodeTable.Level1, X0
	051 Return X0
	052 Call 0x1C17F20

Method: System.Byte Level2(System.Int32 cp, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext)

Disassembly:
	0x032114D8 CMP X9, W10, SXTW
	0x032114DC B.GE 0x3211504
	0x032114E0 CMP X9, X10
	0x032114E4 B.CS 0x32115D8
	0x032114E8 ADD X8, X8, X9
	0x032114EC LDRB W8, [X8 + 0x20]
	0x032114F0 STRB W8, [X21, X9, LSL]
	0x032114F4 LDR X8, [X26 + 0x28]
	0x032114F8 ADD X9, X9, 0x1
	0x032114FC CBNZ X8, 0x32114D4
	0x03211500 B 0x32115D4
	0x03211504 LDUR X8, [X29 - 0x28]
	0x03211508 LDRB W28, [X21]
	0x0321150C LDRB W20, [X8]
	0x03211510 LDUR X8, [X29 - 0x20]
	0x03211514 CMP W20, 0x1
	0x03211518 LDRB W25, [X8]
	0x0321151C B.NE 0x3211534
	0x03211520 MOV X0, X24
	0x03211524 MOV W1, W27
	0x03211528 MOV W2, W31
	0x0321152C BL 0x32104D8
	0x03211530 MOV W20, W0
	0x03211534 LDUR X8, [X29 - 0x30]
	0x03211538 LDRB W4, [X8]
	0x0321153C CMP W4, 0x1
	0x03211540 B.NE 0x3211568
	0x03211544 ADRP X8, 0xF10000
	0x03211548 LDR X8, [X8 + 0xA10]
	0x0321154C LDR X0, [X8]
	0x03211550 LDR W8, [X0 + 0xE0]
	0x03211554 CBNZ W8, 0x321155C
	0x03211558 BL 0x1C16DFC
	0x0321155C MOV W0, W27
	0x03211560 BL 0x320E5C4
	0x03211564 MOV W4, W0
	0x03211568 LDUR X23, [X29 - 0x8]
	0x0321156C CBZ X23, 0x32115D4
	0x03211570 MOV X0, X23
	0x03211574 MOV W1, W28
	0x03211578 MOV W2, W25
	0x0321157C MOV W3, W20
	0x03211580 BL 0x3211A14
	0x03211584 MOVN W25, 0x0
	0x03211588 MOV X28, X23
	0x0321158C LDUR X27, [X29 - 0x10]
	0x03211590 LDR X8, [X26 + 0x18]
	0x03211594 CBZ X8, 0x32115D4
	0x03211598 LDR W8, [X8 + 0x18]
	0x0321159C LDUR W26, [X29 - 0x14]
	0x032115A0 ADD W8, W22, W8
	0x032115A4 SUB W22, W8, 0x1
	0x032115A8 ADD W22, W22, 0x1
	0x032115AC CMP W22, W26
	0x032115B0 B.LT 0x3211318
	0x032115B4 ADD X31, X29, 0x0
	0x032115B8 LDP X20, X19, [X31 + 0x50]
	0x032115BC LDP X22, X21, [X31 + 0x40]
	0x032115C0 LDP X24, X23, [X31 + 0x30]
	0x032115C4 LDP X26, X25, [X31 + 0x20]
	0x032115C8 LDP X28, X27, [X31 + 0x10]
	0x032115CC LDP X29, X30, [X31], #0x60
	0x032115D0 RET
	0x032115D4 BL 0x1C16F20
	0x032115D8 BL 0x1C16F28
	0x032115DC STP X30, X19, [X31 - 0x10]!
	0x032115E0 MOV X19, X0
	0x032115E4 BL 0x32157A4
	0x032115E8 MOVI V0.2D, 0x0
	0x032115EC STRB W31, [X19 + 0x82]
	0x032115F0 STUR V0, [X19 + 0x58]
	0x032115F4 STUR V0, [X19 + 0x68]
	0x032115F8 LDP X30, X19, [X31], #0x10
	0x032115FC RET
	0x03211600 CMP W2, 0x1
	0x03211604 B.LT 0x321165C
	0x03211608 ADRP X9, 0xFFFFFFFFFD8D9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11CC000
	007 Move W8, [X22+696]
	008 Move W21, W2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF11000
	016 Move X0, [X0+2576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+696], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, 5
	023 Move W0, W31
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X20+72]
	032 Compare X8, 0
	033 JumpIfEqual {72}
	034 Move X0, [X20+80]
	035 Compare X0, 0
	036 JumpIfEqual {88}
	037 Move W1, W19
	038 Call CodePointIndexer.ToIndex, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {47}
	043 Move X8, [X20+72]
	044 Move W0, [X8]
	045 Compare W0, 0
	046 JumpIfNotEqual {24}
	047 Move X8, 0xF11000
	048 Move X8, [X8+2576]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W0, W19
	055 Call MSCompatUnicodeTable.Level2, X0
	056 Move X8, [X20+40]
	057 Compare X8, 0
	058 JumpIfEqual {88}
	059 Move X9, [X8+24]
	060 Compare X9, 0
	061 JumpIfEqual {24}
	062 Subtract W9, W9, 1
	063 Move W10, W31
	064 Add X11, X8, W10
	065 Move X11, [X11+32]
	066 Compare X11, 0
	067 JumpIfEqual {88}
	068 Move W12, [X11+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W10, W10, 1
	072 Move X8, 0xF11000
	073 Move X8, [X8+2576]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W0, W19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Call MSCompatUnicodeTable.Level2, X0
	086 Return X0
	087 Move W0, [X11+17]
	088 Call 0x1C17F20

Method: System.Boolean IsHalfKana(System.Int32 cp, System.Globalization.CompareOptions opt)

Disassembly:
	0x0321160C LDR V0, [X9 + 0x79]
	0x03211610 MOV W8, W2
	0x03211614 ADD X10, X8, 0x1
	0x03211618 SUB X11, X8, 0x1
	0x0321161C MOVZ W9, 0x2
	0x03211620 AND X8, X10, 0x0
	0x03211624 UNIMPLEMENTED
	0x03211628 UNIMPLEMENTED
	0x00000000 INVALID
	0x03211630 UNIMPLEMENTED
	0x03211634 FMOV W9, S3
	0x03211638 TBZ X9, 0x0, 0x3211640
	0x0321163C STRB W31, [X1]
	0x03211640 UNIMPLEMENTED
	0x03211644 TBZ X9, 0x0, 0x321164C
	0x03211648 STRB W31, [X1 + 0x1]
	0x00000000 INVALID
	0x03211650 SUBS X8, X8, 0x2
	0x03211654 ADD X1, X1, 0x2
	0x03211658 B.NE 0x321162C
	0x0321165C RET
	0x03211660 MOVN W8, 0x0
	0x03211664 STR W1, [X0]
	0x03211668 STP X3, X2, [X0 + 0x8]
	0x0321166C STP X4, X5, [X0 + 0x18]
	0x03211670 STR X6, [X0 + 0x30]
	0x03211674 STR W8, [X0 + 0x28]
	0x03211678 RET
	0x0321167C SUB X31, X31, 0x70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CC000
	006 Move W8, [X21+697]
	007 Move W20, W1
	008 Move W19, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {28}
	013 Move TEMP, X20
	014 And TEMP, TEMP, 16
	015 Compare TEMP, 16
	016 JumpIfEqual {37}
	017 Move X8, 0xF11000
	018 Move X8, [X8+2576]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Add W8, W19, 154
	025 And W8, W8, 0xFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X0, 0xF11000
	029 Move X0, [X0+2576]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+697], W8
	033 Move TEMP, X20
	034 And TEMP, TEMP, 16
	035 Compare TEMP, 16
	036 JumpIfNotEqual {17}
	037 Move W0, 1
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: Mono.Globalization.Unicode.Contraction GetContraction(System.String s, System.Int32 start, System.Int32 end)

Disassembly:
	0x03211680 STR X30, [X31 + 0x10]
	0x03211684 STP X28, X27, [X31 + 0x20]
	0x03211688 STP X26, X25, [X31 + 0x30]
	0x0321168C STP X24, X23, [X31 + 0x40]
	0x03211690 STP X22, X21, [X31 + 0x50]
	0x03211694 STP X20, X19, [X31 + 0x60]
	0x03211698 ADRP X23, 0x11CB000
	0x0321169C LDRB W8, [X23 + 0x2C1]
	0x032116A0 MOV W22, W4
	0x032116A4 MOV X19, X3
	0x032116A8 MOV W21, W2
	0x032116AC MOV W20, W1
	0x032116B0 MOV X24, X0
	0x032116B4 TBNZ X8, 0x0, 0x32116E4
	0x032116B8 ADRP X0, 0xEE4000
	0x032116BC LDR X0, [X0 + 0x170]
	0x032116C0 BL 0x1C16CF4
	0x032116C4 ADRP X0, 0xF10000
	0x032116C8 LDR X0, [X0 + 0xA10]
	0x032116CC BL 0x1C16CF4
	0x032116D0 ADRP X0, 0xF10000
	0x032116D4 LDR X0, [X0 + 0xBD8]
	0x032116D8 BL 0x1C16CF4
	0x032116DC MOVZ W8, 0x1
	0x032116E0 STRB W8, [X23 + 0x2C1]
	0x032116E4 MOVN W8, 0x33FF
	0x032116E8 ADD W8, W20, W8
	0x032116EC UBFM W9, W8, 0x1, 0x1F
	0x032116F0 CMP W9, 0xCDA
	0x032116F4 B.LS 0x3211770
	0x032116F8 ADRP X8, 0xEE4000
	0x032116FC LDR X8, [X8 + 0x170]
	0x03211700 LDR X0, [X8]
	0x03211704 LDR W8, [X0 + 0xE0]
	0x03211708 CBNZ W8, 0x3211710
	0x0321170C BL 0x1C16DFC
	0x03211710 MOV W0, W20
	0x03211714 MOV X1, X31
	0x03211718 BL 0x331BE28
	0x0321171C CMP W0, 0x10
	0x03211720 B.EQ 0x32117BC
	0x03211724 CMP W0, 0x11
	0x03211728 B.NE 0x32117E4
	0x0321172C CBZ X19, 0x3211A10
	0x03211730 MOVZ W9, 0x409
	0x03211734 SUB W8, W20, 0xE000
	0x03211738 MOVK W9, 0x81020000
	0x0321173C SMADDL X9, X8, X9, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11CC000
	008 Move W8, [X23+698]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xF11000
	018 Move X0, [X0+3032]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+698], W8
	022 Move X4, [X22+32]
	023 Move X1, X21
	024 Move W2, W20
	025 Move W3, W19
	026 Call SimpleCollator.GetContraction, X0, X1, X2, X3, X4
	027 Compare X0, 0
	028 JumpIfNotEqual {32}
	029 Move W8, [X22+88]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X31
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0
	039 Move X22, 0xF11000
	040 Move X22, [X22+3032]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {61}
	051 Move X4, [X8+32]
	052 Move X1, X21
	053 Move W2, W20
	054 Move W3, W19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call 0x1C17F20

Method: Mono.Globalization.Unicode.Contraction GetContraction(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.Contraction[] clist)

Disassembly:
	0x03211740 UBFM X9, X9, 0x20, 0x3F
	0x03211744 ADD W9, W9, W8
	0x03211748 SBFM W11, W9, 0x7, 0x1F
	0x0321174C MOVZ W10, 0xFE
	0x03211750 ADD W9, W11, W9, 0x1F, LSR
	0x03211754 MSUB W8, W9, W10, W8
	0x03211758 SUB W1, W9, 0x1B
	0x0321175C ADD W2, W8, 0x2
	0x03211760 MOV X0, X19
	0x03211764 MOV W3, W31
	0x03211768 MOV W4, W31
	0x0321176C B 0x32119F0
	0x03211770 CBZ X19, 0x3211A10
	0x03211774 MOVZ W10, 0x409
	0x03211778 UBFM W9, W8, 0x1, 0xF
	0x0321177C MOVK W10, 0x81020000
	0x03211780 UMADDL X9, X9, X10, X31
	0x03211784 MOV X0, X19
	0x03211788 LDP X20, X19, [X31 + 0x60]
	0x0321178C LDP X22, X21, [X31 + 0x50]
	0x03211790 LDP X24, X23, [X31 + 0x40]
	0x03211794 LDP X26, X25, [X31 + 0x30]
	0x03211798 LDP X28, X27, [X31 + 0x20]
	0x0321179C LDR X30, [X31 + 0x10]
	0x032117A0 MOVZ W11, 0xFE
	0x032117A4 UBFM X9, X9, 0x26, 0x3F
	0x032117A8 MSUB W8, W9, W11, W8
	0x032117AC ADD W1, W9, 0x10
	0x032117B0 ADD W2, W8, 0x2
	0x032117B4 ADD X31, X31, 0x70
	0x032117B8 B 0x3211B58
	0x032117BC MOV W1, W20
	0x032117C0 MOV X2, X19
	0x032117C4 LDP X20, X19, [X31 + 0x60]
	0x032117C8 LDP X22, X21, [X31 + 0x50]
	0x032117CC LDP X24, X23, [X31 + 0x40]
	0x032117D0 LDP X26, X25, [X31 + 0x30]
	0x032117D4 LDP X28, X27, [X31 + 0x20]
	0x032117D8 LDR X30, [X31 + 0x10]
	0x032117DC ADD X31, X31, 0x70
	0x032117E0 B 0x3211BEC
	0x032117E4 MOV X0, X24
	0x032117E8 MOV W1, W20
	0x032117EC MOV W2, W21
	0x032117F0 BL 0x32104D8
	0x032117F4 ADRP X26, 0xF10000
	0x032117F8 LDR X26, [X26 + 0xA10]
	0x032117FC MOV W23, W0
	0x03211800 LDR X8, [X26]
	0x03211804 LDR W9, [X8 + 0xE0]
	0x03211808 CBNZ W9, 0x3211814
	0x0321180C MOV X0, X8
	0x03211810 BL 0x1C16DFC
	0x03211814 MOVZ W8, 0x3041
	0x03211818 CMP W8, W20, UXTH
	0x0321181C B.HI 0x321199C
	0x03211820 ADD W8, W20, 0x9A
	0x03211824 AND W8, W8, 0xFFFF
	0x03211828 CMP W8, 0x38
	0x0321182C B.CC 0x3211874
	0x03211830 UBFM W8, W20, 0x8, 0xF
	0x03211834 CMP W8, 0x32
	0x03211838 B.HI 0x321199C
	0x0321183C MOVZ W9, 0x309C
	0x03211840 CMP W9, W20, UXTH
	0x03211844 B.CS 0x3211868
	0x03211848 CMP W8, 0x31
	0x0321184C B.CC 0x3211990
	0x03211850 MOVN W8, 0x32CF
	0x03211854 ADD W8, W20, W8
	0x03211858 AND W8, W8, 0xFFFF
	0x0321185C CMP W8, 0x2F
	0x03211860 B.CC 0x3211874
	0x03211864 B 0x321199C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X4, 0
	013 JumpIfEqual {82}
	014 Move W8, [X4+24]
	015 Move X19, X4
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W20, W2
	018 Move X21, X1
	019 Move W23, W31
	020 Subtract W24, W3, W2
	021 Move W25, W2
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X8, X19, W23
	024 Move X22, [X8+32]
	025 Compare X22, 0
	026 JumpIfEqual {82}
	027 Move X8, [X22+24]
	028 Compare X8, 0
	029 JumpIfEqual {82}
	030 Move W9, [X8+24]
	031 Compare W9, 0
	032 JumpIfEqual {81}
	033 Compare X21, 0
	034 JumpIfEqual {82}
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X0, X21
	037 Move W1, W20
	038 Move X2, X31
	039 Call String.get_Chars, X0, X1
	040 Subtract W8, W26, W0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move TEMP, X8
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {51}
	046 Move X26, [X22+24]
	047 Compare X26, 0
	048 JumpIfEqual {82}
	049 Move W8, [X26+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, [X19+24]
	052 Add W23, W23, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X27, X31
	056 Add X28, X26, 32
	057 Add W1, W25, W27
	058 Move X0, X21
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move W8, [X26+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add X27, X27, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, X31
	068 Move X0, X22
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X26, [X31+32]
	076 Move X25, [X31+40]
	077 Move X28, [X31+16]
	078 Move X27, [X31+24]
	079 Move X30, [X31+96]
	080 Return X0
	081 Call 0x1C17F28
	082 Call 0x1C17F20

Method: Mono.Globalization.Unicode.Contraction GetTailContraction(System.String s, System.Int32 start, System.Int32 end)

Disassembly:
	0x03211868 MOVZ W8, 0x3099
	0x0321186C CMP W8, W20, UXTH
	0x03211870 B.LS 0x321199C
	0x03211874 MOV X0, X24
	0x03211878 MOV W1, W20
	0x0321187C AND W27, W20, 0xFFFF
	0x03211880 BL 0x3210444
	0x03211884 MOV W25, W0
	0x03211888 MOV X0, X24
	0x0321188C MOV W1, W20
	0x03211890 BL 0x32103B0
	0x03211894 LDR X8, [X26]
	0x03211898 MOV W24, W0
	0x0321189C LDR W9, [X8 + 0xE0]
	0x032118A0 CBNZ W9, 0x32118AC
	0x032118A4 MOV X0, X8
	0x032118A8 BL 0x1C16DFC
	0x032118AC MOV W0, W20
	0x032118B0 BL 0x320E5C4
	0x032118B4 MOV W26, W0
	0x032118B8 MOV W0, W20
	0x032118BC BL 0x320EA28
	0x032118C0 ADRP X8, 0xF10000
	0x032118C4 LDR X8, [X8 + 0xBD8]
	0x032118C8 MOV W28, W0
	0x032118CC LDR X8, [X8]
	0x032118D0 LDR W9, [X8 + 0xE0]
	0x032118D4 CBNZ W9, 0x32118E0
	0x032118D8 MOV X0, X8
	0x032118DC BL 0x1C16DFC
	0x032118E0 MOV W0, W27
	0x032118E4 MOV W1, W22
	0x032118E8 BL 0x321060C
	0x032118EC CBZ X19, 0x3211A10
	0x032118F0 MOVN W8, 0x3040
	0x032118F4 ADD W8, W20, W8
	0x032118F8 AND W8, W8, 0xFFFF
	0x032118FC CMP W8, 0x53
	0x03211900 CSET W7, HI
	0x03211904 CMP W21, 0x0
	0x03211908 AND W22, W22, 0x2
	0x0321190C CSET W8, EQ
	0x03211910 MOVZ W9, 0x4
	0x03211914 CMP W21, 0x3
	0x03211918 ORR W8, W8, W22, 0x1
	0x0321191C CINC W9, W9, EQ
	0x03211920 CMP W8, 0x0
	0x03211924 MOVZ W8, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11CC000
	008 Move W8, [X23+699]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xF11000
	018 Move X0, [X0+3032]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+699], W8
	022 Move X4, [X22+32]
	023 Move X1, X21
	024 Move W2, W20
	025 Move W3, W19
	026 Call SimpleCollator.GetTailContraction, X0, X1, X2, X3, X4
	027 Compare X0, 0
	028 JumpIfNotEqual {32}
	029 Move W8, [X22+88]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X31
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0
	039 Move X22, 0xF11000
	040 Move X22, [X22+3032]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {61}
	051 Move X4, [X8+32]
	052 Move X1, X21
	053 Move W2, W20
	054 Move W3, W19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call 0x1C17F20

Method: Mono.Globalization.Unicode.Contraction GetTailContraction(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.Contraction[] clist)

Disassembly:
	0x03211928 CSEL W6, W8, W9, NE
	0x0321192C AND W8, W0, 0x1
	0x03211930 AND W5, W28, 0x1
	0x03211934 MOV X0, X19
	0x03211938 MOV W1, W24
	0x0321193C MOV W2, W25
	0x03211940 MOV W3, W23
	0x03211944 MOV W4, W26
	0x03211948 STRB W8, [X31]
	0x0321194C BL 0x3211CA4
	0x03211950 CMP W21, 0x2
	0x03211954 B.NE 0x3211970
	0x03211958 CBNZ W22, 0x3211970
	0x0321195C MOVZ W1, 0x1
	0x03211960 MOVZ W2, 0x1
	0x03211964 MOVZ W3, 0x1
	0x03211968 MOV X0, X19
	0x0321196C B 0x3211768
	0x03211970 LDP X20, X19, [X31 + 0x60]
	0x03211974 LDP X22, X21, [X31 + 0x50]
	0x03211978 LDP X24, X23, [X31 + 0x40]
	0x0321197C LDP X26, X25, [X31 + 0x30]
	0x03211980 LDP X28, X27, [X31 + 0x20]
	0x03211984 LDR X30, [X31 + 0x10]
	0x03211988 ADD X31, X31, 0x70
	0x0321198C RET
	0x03211990 MOVZ W8, 0x30FB
	0x03211994 CMP W8, W20, UXTH
	0x03211998 B.NE 0x3211874
	0x0321199C MOV X0, X24
	0x032119A0 MOV W1, W20
	0x032119A4 BL 0x32103B0
	0x032119A8 MOV W21, W0
	0x032119AC MOV X0, X24
	0x032119B0 MOV W1, W20
	0x032119B4 BL 0x3210444
	0x032119B8 LDR X8, [X26]
	0x032119BC MOV W22, W0
	0x032119C0 LDR W9, [X8 + 0xE0]
	0x032119C4 CBNZ W9, 0x32119D0
	0x032119C8 MOV X0, X8
	0x032119CC BL 0x1C16DFC
	0x032119D0 MOV W0, W20
	0x032119D4 BL 0x320E5C4
	0x032119D8 CBZ X19, 0x3211A10
	0x032119DC MOV W4, W0
	0x032119E0 MOV X0, X19
	0x032119E4 MOV W1, W21
	0x032119E8 MOV W2, W22
	0x032119EC MOV W3, W23
	0x032119F0 LDP X20, X19, [X31 + 0x60]
	0x032119F4 LDP X22, X21, [X31 + 0x50]
	0x032119F8 LDP X24, X23, [X31 + 0x40]
	0x032119FC LDP X26, X25, [X31 + 0x30]
	0x03211A00 LDP X28, X27, [X31 + 0x20]
	0x03211A04 LDR X30, [X31 + 0x10]
	0x03211A08 ADD X31, X31, 0x70
	0x03211A0C B 0x3211A14
	0x03211A10 BL 0x1C16F20
	0x03211A14 STR X30, [X31 - 0x40]!
	0x03211A18 STP X24, X23, [X31 + 0x10]
	0x03211A1C STP X22, X21, [X31 + 0x20]
	0x03211A20 STP X20, X19, [X31 + 0x30]
	0x03211A24 ANDS W31, W3, 0xFF
	0x03211A28 MOVZ W8, 0x2
	0x03211A2C AND W9, W1, 0xFF
	0x03211A30 CSEL W20, W8, W3, EQ
	0x03211A34 ANDS W31, W4, 0xFF
	0x03211A38 MOV W22, W2
	0x03211A3C CSEL W21, W8, W4, EQ
	0x03211A40 CMP W9, 0x6
	0x03211A44 MOV X19, X0
	0x03211A48 B.NE 0x3211A74
	0x03211A4C LDRB W8, [X19 + 0x7F]
	0x03211A50 TBNZ X8, 0x5, 0x3211AF4
	0x03211A54 MOV X0, X19
	0x03211A58 MOV W2, W22
	0x03211A5C LDP X20, X19, [X31 + 0x30]
	0x03211A60 LDP X22, X21, [X31 + 0x20]
	0x03211A64 LDP X24, X23, [X31 + 0x10]
	0x03211A68 MOVZ W1, 0x6
	0x03211A6C LDR X30, [X31], #0x40
	0x03211A70 B 0x321570C
	0x03211A74 LDRB W8, [X19 + 0x80]
	0x03211A78 CMP W9, 0x1
	0x03211A7C B.NE 0x3211AE8
	0x03211A80 CBZ W8, 0x3211AE8
	0x03211A84 LDR W9, [X19 + 0x58]
	0x03211A88 CMP W9, 0x1
	0x03211A8C B.LT 0x3211AE8
	0x03211A90 LDR W9, [X19 + 0x5C]
	0x03211A94 LDR X8, [X19 + 0x18]
	0x03211A98 SUB W9, W9, 0x1
	0x03211A9C STR W9, [X19 + 0x5C]
	0x03211AA0 CBZ X8, 0x3211B50
	0x03211AA4 LDR W10, [X8 + 0x18]
	0x03211AA8 CMP W9, W10
	0x03211AAC B.CS 0x3211B54
	0x03211AB0 ADD X8, X8, W9, SXTW
	0x03211AB4 LDR W10, [X19 + 0x60]
	0x03211AB8 LDR X9, [X19 + 0x20]
	0x03211ABC LDRB W8, [X8 + 0x20]
	0x03211AC0 SUB W10, W10, 0x1
	0x03211AC4 STR W10, [X19 + 0x60]
	0x03211AC8 CBZ X9, 0x3211B50
	0x03211ACC LDR W11, [X9 + 0x18]
	0x03211AD0 CMP W10, W11
	0x03211AD4 B.CS 0x3211B54
	0x03211AD8 ADD X9, X9, W10, SXTW
	0x03211ADC LDRB W21, [X9 + 0x20]
	0x03211AE0 ADD W20, W8, W20
	0x03211AE4 B 0x3211B20
	0x03211AE8 AND W9, W1, 0xFF
	0x03211AEC CMP W9, 0x1
	0x03211AF0 B.EQ 0x3211B1C
	0x03211AF4 ADD X23, X19, 0x10
	0x03211AF8 ADD X24, X19, 0x58
	0x03211AFC MOV X2, X23
	0x03211B00 MOV X3, X24
	0x03211B04 BL 0x3215644
	0x03211B08 MOV W1, W22
	0x03211B0C MOV X2, X23

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move W22, W3
	015 Move W21, W2
	016 Subtract W23, W2, W3
	017 Move X19, X1
	018 Add W31, W22, 1
	019 Compare X19, 0
	020 JumpIfEqual {88}
	021 Move W8, [X19+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W9, W22, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, X4
	026 Compare X4, 0
	027 JumpIfEqual {88}
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W24, W31
	031 Add W25, W21, 1
	032 Move X26, INVALID
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X20, W24
	035 Move X22, [X8+32]
	036 Compare X22, 0
	037 JumpIfEqual {88}
	038 Move X27, [X22+24]
	039 Compare X27, 0
	040 JumpIfEqual {88}
	041 Move X8, [X27+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare W8, 0
	044 JumpIfEqual {87}
	045 Add X8, X26, X8
	046 Add X8, X27, X8
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X0, X19
	049 Move W1, W21
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W8, [X27+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W28, W31
	056 Subtract W29, W25, W8
	057 Add W1, W29, W28
	058 Move X0, X19
	059 Move X2, X31
	060 Call String.get_Chars, X0, X1
	061 Move W8, [X27+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X9, X27, W28
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W28, W28, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X20+24]
	069 Add W24, W24, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X22, X31
	072 Move X0, X22
	073 Move X20, [X31+96]
	074 Move X19, [X31+104]
	075 Move X22, [X31+80]
	076 Move X21, [X31+88]
	077 Move X24, [X31+64]
	078 Move X23, [X31+72]
	079 Move X26, [X31+48]
	080 Move X25, [X31+56]
	081 Move X28, [X31+32]
	082 Move X27, [X31+40]
	083 Move X29, [X31+16]
	084 Move X30, [X31+24]
	085 Add X31, X31, 112
	086 Return X0
	087 Call 0x1C17F28
	088 Call 0x1C17F20
	089 Move [X31+12], W21
	090 Move X20, 0xEE3000
	091 Move X20, [X20+1880]
	092 Move X0, X20
	093 Call 0x1C17D08
	094 Add X1, X31, 12
	095 Call 0x1C17E04
	096 Move X21, X0
	097 Move X0, X20
	098 Move [X31+8], W22
	099 Call 0x1C17D08
	100 Add X1, X31, 8
	101 Call 0x1C17E04
	102 Move X20, X0
	103 Move X0, 0xF11000
	104 Move X0, [X0+3040]
	105 Call 0x1C17D08
	106 Move X1, X21
	107 Move X2, X20
	108 Move X3, X19
	109 Move X4, X31
	110 Call String.Format, X0, X1, X2, X3
	111 Move X19, X0
	112 Move X0, 0xF11000
	113 Move X0, [X0+3048]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X1, X19
	117 Move X2, X31
	118 Move X20, X0
	119 Call SystemException..ctor, X0, X1
	120 Move X0, 0xF11000
	121 Move X0, [X0+3056]
	122 Call 0x1C17D08
	123 Move X1, X0
	124 Move X0, X20
	125 Call 0x1C17DEC

Method: System.Int32 FilterOptions(System.Int32 i, System.Globalization.CompareOptions opt)

Disassembly:
	0x03211B10 MOV X3, X24
	0x03211B14 BL 0x3215644
	0x03211B18 LDRB W8, [X19 + 0x80]
	0x03211B1C CBZ W8, 0x3211B30
	0x03211B20 ADD X2, X19, 0x18
	0x03211B24 ADD X3, X19, 0x5C
	0x03211B28 MOV W1, W20
	0x03211B2C BL 0x3215644
	0x03211B30 ADD X2, X19, 0x20
	0x03211B34 ADD X3, X19, 0x60
	0x03211B38 MOV W1, W21
	0x03211B3C LDP X20, X19, [X31 + 0x30]
	0x03211B40 LDP X22, X21, [X31 + 0x20]
	0x03211B44 LDP X24, X23, [X31 + 0x10]
	0x03211B48 LDR X30, [X31], #0x40
	0x03211B4C B 0x3215644
	0x03211B50 BL 0x1C16F20
	0x03211B54 BL 0x1C16F28
	0x03211B58 STP X30, X23, [X31 - 0x30]!
	0x03211B5C STP X22, X21, [X31 + 0x10]
	0x03211B60 STP X20, X19, [X31 + 0x20]
	0x03211B64 ADD X22, X0, 0x10
	0x03211B68 ADD X23, X0, 0x58
	0x03211B6C MOV W20, W2
	0x03211B70 MOV W21, W1
	0x03211B74 MOVZ W1, 0xFE
	0x03211B78 MOV X2, X22
	0x03211B7C MOV X3, X23
	0x03211B80 MOV X19, X0
	0x03211B84 BL 0x3215644
	0x03211B88 MOVZ W1, 0xFF
	0x03211B8C MOV X2, X22
	0x03211B90 MOV X3, X23
	0x03211B94 BL 0x3215644
	0x03211B98 MOV W1, W21
	0x03211B9C MOV X2, X22
	0x03211BA0 MOV X3, X23
	0x03211BA4 BL 0x3215644
	0x03211BA8 MOV W1, W20
	0x03211BAC MOV X2, X22
	0x03211BB0 MOV X3, X23
	0x03211BB4 BL 0x3215644
	0x03211BB8 LDRB W8, [X19 + 0x80]
	0x03211BBC CBZ W8, 0x3211BD0
	0x03211BC0 ADD X2, X19, 0x18
	0x03211BC4 ADD X3, X19, 0x5C
	0x03211BC8 MOVZ W1, 0x2
	0x03211BCC BL 0x3215644
	0x03211BD0 ADD X2, X19, 0x20
	0x03211BD4 ADD X3, X19, 0x60
	0x03211BD8 LDP X20, X19, [X31 + 0x20]
	0x03211BDC LDP X22, X21, [X31 + 0x10]
	0x03211BE0 MOVZ W1, 0x2
	0x03211BE4 LDP X30, X23, [X31], #0x30
	0x03211BE8 B 0x3215644
	0x03211BEC MOVZ W8, 0xD83F
	0x03211BF0 CMP W1, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11CC000
	007 Move W8, [X22+700]
	008 Move W20, W2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF11000
	016 Move X0, [X0+2576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+700], W8
	020 Move X22, 0xF11000
	021 Move X22, [X22+2576]
	022 Move TEMP, X20
	023 And TEMP, TEMP, 16
	024 Compare TEMP, 16
	025 JumpIfNotEqual {35}
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W19
	032 Call MSCompatUnicodeTable.ToWidthCompat, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move TEMP, X20
	036 And TEMP, TEMP, 0x10000000
	037 Compare TEMP, 0x10000000
	038 JumpIfNotEqual {48}
	039 Move X0, [X21+16]
	040 Compare X0, 0
	041 JumpIfEqual {84}
	042 Move X8, [X0]
	043 Move W1, W19
	044 Move X9, [X8+424]
	045 Move X2, [X8+432]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 And W19, W0, 0xFFFF
	048 Move TEMP, X20
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {61}
	052 Move X0, [X21+16]
	053 Compare X0, 0
	054 JumpIfEqual {84}
	055 Move X8, [X0]
	056 Move W1, W19
	057 Move X9, [X8+424]
	058 Move X2, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 And W19, W0, 0xFFFF
	061 Move TEMP, X20
	062 And TEMP, TEMP, 8
	063 Compare TEMP, 8
	064 JumpIfNotEqual {77}
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move TEMP, 0x3040
	071 Not TEMP
	072 Move W8, TEMP
	073 Add W8, W19, W8
	074 Add W9, W19, 96
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move W0, W19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return X0
	084 Call 0x1C17F20

Method: Mono.Globalization.Unicode.SimpleCollator/ExtenderType GetExtenderType(System.Int32 i)

Disassembly:
	0x03211BF4 B.LE 0x3211C1C
	0x03211BF8 MOVZ W8, 0xD880
	0x03211BFC CMP W1, W8
	0x03211C00 B.LT 0x3211C78
	0x03211C04 UBFM W8, W1, 0x7, 0x1F
	0x03211C08 CMP W8, 0x1B7
	0x03211C0C B.NE 0x3211C90
	0x03211C10 MOVN W9, 0xDB3F
	0x03211C14 MOVZ W8, 0xFE
	0x03211C18 B 0x3211C80
	0x03211C1C MOVZ W8, 0xD800
	0x03211C20 MOVZ W10, 0x3E
	0x03211C24 CMP W1, W8
	0x03211C28 MOVN W9, 0xD7FF
	0x03211C2C CINC W3, W10, NE
	0x03211C30 MOVZ W8, 0x41
	0x03211C34 CBZ X2, 0x3211C88
	0x03211C38 MOVZ W10, 0x409
	0x03211C3C ADD W9, W9, W1
	0x03211C40 MOVK W10, 0x81020000
	0x03211C44 SMADDL X10, X9, X10, X31
	0x03211C48 UBFM X10, X10, 0x20, 0x3F
	0x03211C4C ADD W10, W10, W9
	0x03211C50 SBFM W11, W10, 0x7, 0x1F
	0x03211C54 ADD W10, W11, W10, 0x1F, LSR
	0x03211C58 MOVZ W11, 0xFE
	0x03211C5C ADD W1, W10, W8
	0x03211C60 MSUB W8, W10, W11, W9
	0x03211C64 ADD W8, W8, 0x2
	0x03211C68 MOV X0, X2
	0x03211C6C MOV W2, W8
	0x03211C70 MOV W4, W3
	0x03211C74 B 0x3211A14
	0x03211C78 MOVN W9, 0xD83F
	0x03211C7C MOVZ W8, 0xF2
	0x03211C80 MOVZ W3, 0x3E
	0x03211C84 CBNZ X2, 0x3211C38
	0x03211C88 STR X30, [X31 - 0x10]!
	0x03211C8C BL 0x1C16F20
	0x03211C90 MOVN W9, 0xDB09
	0x03211C94 MOVZ W8, 0x41
	0x03211C98 MOVZ W3, 0x3F
	0x03211C9C CBNZ X2, 0x3211C38
	0x03211CA0 B 0x3211C88
	0x03211CA4 STR X30, [X31 - 0x40]!
	0x03211CA8 STP X24, X23, [X31 + 0x10]
	0x03211CAC STP X22, X21, [X31 + 0x20]
	0x03211CB0 STP X20, X19, [X31 + 0x30]
	0x03211CB4 LDRB W23, [X31 + 0x40]
	0x03211CB8 MOV W20, W7
	0x03211CBC MOV W21, W6
	0x03211CC0 MOV W22, W5
	0x03211CC4 MOV X19, X0
	0x03211CC8 BL 0x3211A14
	0x03211CCC CBZ X19, 0x3211D34
	0x03211CD0 ANDS W31, W22, 0x1
	0x03211CD4 MOVN W22, 0x1B
	0x03211CD8 MOVN W24, 0x3B
	0x03211CDC ADD X3, X19, 0x64
	0x03211CE0 ADD X2, X19, 0x28
	0x03211CE4 CSEL W1, W24, W22, NE
	0x03211CE8 BL 0x3215644
	0x03211CEC ADD X2, X19, 0x30
	0x03211CF0 ADD X3, X19, 0x68

ISIL:
	001 Move W8, 0x2015
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+88]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 3
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0
	008 Move TEMP, 0x3004
	009 Not TEMP
	010 Move W8, TEMP
	011 Add W8, W1, W8
	012 Move W9, 0xCF6B
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 0xFE7C
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, 0x30FE
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 0x3032
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, 0x30FB
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W0, 1
	023 Move W8, 0x30FC
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, 0x30FD
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W8, 0x30FE
	028 Move W8, 0x7F3E
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, 1
	031 Return X0
	032 Move W8, 0xFF70
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, 0x3005
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, 4
	037 Return X0
	038 Move TEMP, 0x3030
	039 Not TEMP
	040 Move W8, TEMP
	041 Add W8, W1, W8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, 0x309D
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, 0x309E
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, 2
	048 Return X0
	049 Move W0, W31
	050 Return X0
	051 Move W0, 3
	052 Return X0

Method: System.Byte ToDashTypeValue(Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, System.Globalization.CompareOptions opt)

Disassembly:
	0x03211CF4 MOV W1, W21
	0x03211CF8 BL 0x3215644
	0x03211CFC ANDS W31, W20, 0x1
	0x03211D00 ADD X3, X19, 0x6C
	0x03211D04 ADD X2, X19, 0x38
	0x03211D08 CSEL W1, W24, W22, NE
	0x03211D0C BL 0x3215644
	0x03211D10 ANDS W31, W23, 0x1

ISIL:
	001 Compare W0, 0
	002 JumpIfEqual {11}
	003 Move TEMP, X1
	004 And TEMP, TEMP, 2
	005 Compare TEMP, 2
	006 JumpIfEqual {11}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, 4
	009 NotImplemented "Instruction CINC not yet implemented."
	010 Return X0
	011 Move W0, 3
	012 Return X0

Method: System.Int32 FilterExtender(System.Int32 i, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, System.Globalization.CompareOptions opt)

Disassembly:
	0x03211D14 ADD X3, X19, 0x70
	0x03211D18 ADD X2, X19, 0x40
	0x03211D1C CSEL W1, W24, W22, NE
	0x03211D20 LDP X20, X19, [X31 + 0x30]
	0x03211D24 LDP X22, X21, [X31 + 0x20]
	0x03211D28 LDP X24, X23, [X31 + 0x10]
	0x03211D2C LDR X30, [X31], #0x40
	0x03211D30 B 0x3215644
	0x03211D34 BL 0x1C16F20
	0x03211D38 B 0x3211D3C
	0x03211D3C SUB X31, X31, 0xA0
	0x03211D40 STP X30, X19, [X31 + 0x90]
	0x03211D44 MOV X8, X31
	0x03211D48 MOVI V0.2D, 0x0
	0x03211D4C ADD X9, X31, 0x40
	0x03211D50 STRB W31, [X31 + 0x4C]
	0x03211D54 STRB W31, [X31 + 0x48]
	0x03211D58 STR W31, [X31 + 0x40]
	0x03211D5C STR W31, [X31 + 0x30]
	0x03211D60 STP V0, V0, [X31 + 0x60]
	0x03211D64 STR V0, [X31 + 0x5]
	0x03211D68 STRB W31, [X9, X8, LSL]
	0x03211D6C ADD X8, X8, 0x1
	0x03211D70 CMP X8, 0x4
	0x03211D74 B.NE 0x3211D68
	0x03211D78 MOV X8, X31
	0x03211D7C ADD X9, X31, 0x30
	0x03211D80 STRB W31, [X9, X8, LSL]
	0x03211D84 ADD X8, X8, 0x1
	0x03211D88 CMP X8, 0x4
	0x03211D8C B.NE 0x3211D80
	0x03211D90 ADD X8, X31, 0x40
	0x03211D94 ADD X9, X31, 0x30
	0x03211D98 STR W7, [X31 + 0x50]
	0x03211D9C MOVN W10, 0x0
	0x03211DA0 STP X8, X9, [X31 + 0x68]
	0x03211DA4 ADD X8, X31, 0x50
	0x03211DA8 MOVZ W19, 0x1
	0x03211DAC ADD X9, X31, 0x48
	0x03211DB0 ADD X7, X31, 0x4C
	0x03211DB4 STP X31, X31, [X31 + 0x58]
	0x03211DB8 STR X31, [X31 + 0x80]
	0x03211DBC STR W10, [X31 + 0x78]
	0x03211DC0 STRB W31, [X31 + 0x10]
	0x03211DC4 STR X8, [X31 + 0x18]
	0x03211DC8 STRB W19, [X31 + 0x8]
	0x03211DCC STR X9, [X31]
	0x03211DD0 BL 0x3211DEC
	0x03211DD4 CMP W0, 0x0
	0x03211DD8 CSNEG W8, W19, W19, GE
	0x03211DDC LDP X30, X19, [X31 + 0x90]
	0x03211DE0 CSEL W0, W31, W8, EQ
	0x03211DE4 ADD X31, X31, 0xA0
	0x03211DE8 RET
	0x03211DEC SUB X31, X31, 0x130
	0x03211DF0 STP X29, X30, [X31 + 0xD0]
	0x03211DF4 STP X28, X27, [X31 + 0xE0]
	0x03211DF8 STP X26, X25, [X31 + 0xF0]
	0x03211DFC STP X24, X23, [X31 + 0x100]
	0x03211E00 STP X22, X21, [X31 + 0x110]
	0x03211E04 STP X20, X19, [X31 + 0x120]
	0x03211E08 ADRP X20, 0x11CB000
	0x03211E0C LDR X21, [X31 + 0x148]
	0x03211E10 LDRB W23, [X31 + 0x138]
	0x03211E14 LDRB W8, [X20 + 0x2C2]
	0x03211E18 LDR X28, [X31 + 0x130]
	0x03211E1C MOV W19, W6
	0x03211E20 MOV X24, X4
	0x03211E24 MOV W22, W3
	0x03211E28 MOV X25, X1
	0x03211E2C MOV X29, X0
	0x03211E30 STR W5, [X31 + 0x98]
	0x03211E34 STR W2, [X31 + 0xAC]
	0x03211E38 TBNZ X8, 0x0, 0x3211E64
	0x03211E3C ADRP X0, 0xF10000
	0x03211E40 LDR X0, [X0 + 0xA10]
	0x03211E44 MOV X26, X7
	0x03211E48 BL 0x1C16CF4
	0x03211E4C ADRP X0, 0xF10000
	0x03211E50 LDR X0, [X0 + 0xBD8]
	0x03211E54 BL 0x1C16CF4
	0x03211E58 MOV X7, X26
	0x03211E5C MOVZ W8, 0x1
	0x03211E60 STRB W8, [X20 + 0x2C2]
	0x03211E64 LDR W8, [X21]
	0x03211E68 LDR W26, [X31 + 0x98]
	0x03211E6C STR X21, [X31 + 0x40]
	0x03211E70 STRB W31, [X7]
	0x03211E74 STR W8, [X31 + 0xCC]
	0x03211E78 LDR W8, [X31 + 0xAC]
	0x03211E7C ADD W20, W19, W26
	0x03211E80 MOV W21, W26
	0x03211E84 STRB W31, [X28]
	0x03211E88 ADD W27, W22, W8
	0x03211E8C MOV W12, W8
	0x03211E90 TBZ X23, 0x0, 0x3211F3C
	0x03211E94 LDR W8, [X31 + 0xAC]
	0x03211E98 CMP W27, W8
	0x03211E9C MOV W23, W8
	0x03211EA0 B.LE 0x3211EE4
	0x03211EA4 CBZ X25, 0x3213360
	0x03211EA8 LDR W23, [X31 + 0xAC]
	0x03211EAC MOV X21, X7
	0x03211EB0 MOV X0, X25
	0x03211EB4 MOV W1, W23
	0x03211EB8 MOV X2, X31
	0x03211EBC BL 0x3222A1C
	0x03211EC0 AND W1, W0, 0xFFFF
	0x03211EC4 MOV X0, X29
	0x03211EC8 BL 0x3210BF4
	0x03211ECC CBZ W0, 0x3211EE0
	0x03211ED0 SUBS W22, W22, 0x1
	0x03211ED4 ADD W23, W23, 0x1
	0x03211ED8 B.NE 0x3211EB0
	0x03211EDC MOV W23, W27
	0x03211EE0 MOV X7, X21
	0x03211EE4 CMP W20, W26
	0x03211EE8 B.LE 0x3211F34
	0x03211EEC CBZ X24, 0x3213360
	0x03211EF0 MOV X22, X7
	0x03211EF4 MOV W21, W26
	0x03211EF8 MOV X0, X24
	0x03211EFC MOV W1, W21
	0x03211F00 MOV X2, X31
	0x03211F04 BL 0x3222A1C
	0x03211F08 AND W1, W0, 0xFFFF
	0x03211F0C MOV X0, X29
	0x03211F10 BL 0x3210BF4
	0x03211F14 CBZ W0, 0x3211F28
	0x03211F18 SUBS W19, W19, 0x1
	0x03211F1C ADD W21, W21, 0x1
	0x03211F20 B.NE 0x3211EF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x11CC000
	008 Move W8, [X23+701]
	009 Move W21, W3
	010 Move W22, W2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF11000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move X0, 0xF11000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+701], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X23, 0xF11000
	027 Move X23, [X23+2576]
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 And W22, W19, 0xFFFF
	034 Move W8, 0x3041
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W8, W19, 154
	037 And W8, W8, 0xFFFF
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, W19
	040 ShiftRight W8, 8
	041 And W8, W8, 0x7FFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W9, 0x309C
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, 0x32CF
	047 Not TEMP
	048 Move W8, TEMP
	049 Add W8, W19, W8
	050 And W8, W8, 0xFFFF
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, 0x3099
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, 0x30FB
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, 0xF11000
	057 Move X8, [X8+3032]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W0, W22
	064 Move W1, W21
	065 Call SimpleCollator.IsHalfKana, X0, X1
	066 Move X8, [X23]
	067 Move W21, W0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move W1, W19
	075 Call SimpleCollator.Level1, X0, X1
	076 And W8, W0, 7
	077 Subtract W8, W8, 2
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X10, -40345600
	080 Add X10, X10, 1059
	081 Move TEMP, 0x3040
	082 Not TEMP
	083 Move W9, TEMP
	084 NotImplemented "Instruction ADR not yet implemented."
	085 Move W12, [X10]
	086 Add X11, X11, X12
	087 Add W8, W19, W9
	088 CallNoReturn X11
	089 Move TEMP, X21
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {132}
	093 Move W19, 0xFF71
	094 And W8, W8, 0xFFFF
	095 Move W9, 0x30A4
	096 Move W10, 0x3044
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 And W31, W21, 1
	100 Move W9, 0xFF72
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 And W8, W8, 0xFFFF
	103 Move W9, 0x30A6
	104 Move W10, 0x3046
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 And W31, W21, 1
	108 Move W9, 0xFF73
	109 And W8, W8, 0xFFFF
	110 Move W9, 0x30A8
	111 Move W10, 0x3048
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 And W31, W21, 1
	115 Move W9, 0xFF74
	116 And W8, W8, 0xFFFF
	117 Move W9, 0x30AA
	118 Move W10, 0x304A
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 And W31, W21, 1
	122 Move W9, 0xFF75
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move W0, W19
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Return X0
	132 And W8, W8, 0xFFFF
	133 Move W9, 0x30A2
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, 0x3042
	136 NotImplemented "Instruction CSEL not yet implemented."

Method: System.Boolean IsIgnorable(System.Int32 i, System.Globalization.CompareOptions opt)

Disassembly:
	0x03211F24 MOV W21, W20
	0x03211F28 MOV W12, W23
	0x03211F2C MOV X7, X22
	0x03211F30 B 0x3211F3C
	0x03211F34 MOV W21, W26
	0x03211F38 MOV W12, W23
	0x03211F3C LDRB W10, [X31 + 0x140]
	0x03211F40 MOVN W13, 0x0
	0x03211F44 MOVN W11, 0x0
	0x03211F48 STP W13, W11, [X31 + 0x54]
	0x03211F4C STR W10, [X31 + 0x24]
	0x03211F50 LDR W10, [X31 + 0xCC]
	0x03211F54 MOVN W11, 0x0
	0x03211F58 STP X29, X31, [X31 + 0x80]
	0x03211F5C STP X28, X7, [X31 + 0x10]
	0x03211F60 UBFM W10, W10, 0x1, 0x1
	0x03211F64 STR X31, [X31 + 0x28]
	0x03211F68 MOV X8, X31
	0x03211F6C STR W31, [X31 + 0xA8]
	0x03211F70 STR X31, [X31 + 0xA0]
	0x03211F74 STR W31, [X31 + 0x9C]
	0x03211F78 MOV X9, X31
	0x03211F7C STR X31, [X31 + 0x90]
	0x03211F80 STR W31, [X31 + 0x78]
	0x03211F84 STP W31, W31, [X31 + 0x4C]
	0x03211F88 STP W10, W31, [X31 + 0x30]
	0x03211F8C MOVZ W10, 0x5
	0x03211F90 STP W31, W11, [X31 + 0x6C]
	0x03211F94 STP W12, W21, [X31 + 0xB0]
	0x03211F98 MOV W23, W21
	0x03211F9C MOV W21, W12

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11CC000
	007 Move X22, 0xF11000
	008 Move W8, [X21+702]
	009 Move X22, [X22+2576]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF11000
	017 Move X0, [X0+2576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+702], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W9, 0x50000000
	027 Move W8, W20
	028 ShiftRight W8, 1
	029 And W8, W8, 0x7FFFFFFF
	030 And W31, W20, W9
	031 Move W0, W19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 And W10, W8, 2
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction BFM not yet implemented."
	039 Or W1, W10, W9
	040 Move X30, [X31+48]
	041 Call MSCompatUnicodeTable.IsIgnorable, X0, X1
	042 Return X0

Method: System.Boolean IsSafe(System.Int32 i)

Disassembly:
	0x03211FA0 LDR W28, [X31 + 0xCC]
	0x03211FA4 MOV W29, W21
	0x03211FA8 CMP W21, W27
	0x03211FAC MOV X19, X24
	0x03211FB0 MOV W22, W20
	0x03211FB4 MOV W26, W10
	0x03211FB8 MOV X20, X9
	0x03211FBC MOV X14, X8
	0x03211FC0 B.GE 0x321202C
	0x03211FC4 CBZ X25, 0x3213360
	0x03211FC8 MOV X0, X25
	0x03211FCC MOV W1, W29
	0x03211FD0 MOV X2, X31
	0x03211FD4 MOV X21, X14
	0x03211FD8 BL 0x3222A1C
	0x03211FDC ADRP X8, 0xF10000
	0x03211FE0 LDR X8, [X8 + 0xBD8]
	0x03211FE4 MOV W24, W0
	0x03211FE8 LDR X8, [X8]
	0x03211FEC LDR W9, [X8 + 0xE0]
	0x03211FF0 CBNZ W9, 0x3211FFC
	0x03211FF4 MOV X0, X8
	0x03211FF8 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {20}
	005 Move W10, [X8+24]
	006 Add W9, W1, 7
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W9
	012 Move W8, [X8+32]
	013 Subtract W9, W1, W9
	014 NotImplemented "Instruction LSRV not yet implemented."
	015 And W31, W8, 1
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move W0, 1
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Globalization.SortKey GetSortKey(System.String s, System.Globalization.CompareOptions options)

Disassembly:
	0x03211FFC AND W0, W24, 0xFFFF
	0x03212000 MOV W1, W28
	0x03212004 BL 0x3210F24
	0x03212008 MOV X14, X21
	0x0321200C TBZ X0, 0x0, 0x321202C
	0x03212010 ADD W21, W29, 0x1
	0x03212014 MOV X8, X14
	0x03212018 MOV X9, X20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {8}
	004 Move W3, [X1+16]
	005 Move W4, W2
	006 Move W2, W31
	007 Move X30, [X31+16]
	008 Call 0x1C17F20

Method: System.Globalization.SortKey GetSortKey(System.String s, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions options)

Disassembly:
	0x0321201C MOV W10, W26
	0x03212020 MOV W20, W22
	0x03212024 MOV X24, X19
	0x03212028 B 0x3211FA0
	0x0321202C CMP W23, W22
	0x03212030 B.GE 0x321209C
	0x03212034 STP X14, X20, [X31 + 0xB8]
	0x03212038 ADRP X21, 0xF0F000
	0x0321203C LDR X21, [X21 + 0xBD8]
	0x03212040 CBZ X19, 0x3213360
	0x03212044 MOVZ W20, 0x1
	0x03212048 MOV X0, X19
	0x0321204C MOV W1, W23
	0x03212050 MOV X2, X31
	0x03212054 BL 0x3222A1C
	0x03212058 LDR X8, [X21]
	0x0321205C MOV W24, W0
	0x03212060 LDR W9, [X8 + 0xE0]
	0x03212064 CBNZ W9, 0x3212070
	0x03212068 MOV X0, X8
	0x0321206C BL 0x1C16DFC
	0x03212070 AND W0, W24, 0xFFFF
	0x03212074 MOV W1, W28
	0x03212078 BL 0x3210F24
	0x0321207C TBZ X0, 0x0, 0x32120E8
	0x03212080 ADD W23, W23, 0x1
	0x03212084 CMP W23, W22
	0x03212088 CSET W20, LT
	0x0321208C CMP W22, W23
	0x03212090 B.NE 0x3212048
	0x03212094 LDP X14, X20, [X31 + 0xB8]
	0x03212098 MOV W23, W22
	0x0321209C CMP W29, W27
	0x032120A0 B.GE 0x3212190
	0x032120A4 LDR W10, [X31 + 0x88]
	0x032120A8 MOV W13, W26
	0x032120AC MOV W26, W23
	0x032120B0 MOV X8, X14
	0x032120B4 MOV X14, X20
	0x032120B8 LDP W20, W12, [X31 + 0x8C]
	0x032120BC LDR W23, [X31 + 0x94]
	0x032120C0 MOV X9, X31
	0x032120C4 STR W10, [X31 + 0xB4]
	0x032120C8 MOV W10, W13
	0x032120CC MOV W11, W27
	0x032120D0 MOV X24, X14
	0x032120D4 MOV W21, W29
	0x032120D8 MOV X28, X25
	0x032120DC STR W12, [X31 + 0x98]
	0x032120E0 CBNZ X14, 0x3211FA0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x11CB000
	010 Move X25, 0xF10000
	011 Move W8, [X24+703]
	012 Move X25, [X25+3064]
	013 Move W19, W4
	014 Move W22, W3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xF10000
	023 Move X0, [X0+3064]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+703], W8
	027 Move X0, [X25]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X24, X0
	031 Call Object..ctor, X0
	032 Compare X24, 0
	033 JumpIfEqual {62}
	034 Move W4, [X23+92]
	035 Move W2, [X23+88]
	036 Move X0, X24
	037 Move W1, W19
	038 Move X3, X21
	039 Call SortKeyBuffer.Initialize, X0, X1, X2, X3, X4
	040 Add W3, W22, W20
	041 Move X0, X23
	042 Move X1, X21
	043 Move W2, W20
	044 Move X4, X24
	045 Move W5, W19
	046 Call SimpleCollator.GetSortKey, X0, X1, X2, X3, X4, X5
	047 Move X0, X24
	048 Call SortKeyBuffer.GetResult, X0
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X24+130], W31
	051 Move [X24+88], V0
	052 Move [X24+104], V0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Return X0
	062 Call 0x1C17F20

Method: System.Void GetSortKey(System.String s, System.Int32 start, System.Int32 end, Mono.Globalization.Unicode.SortKeyBuffer buf, System.Globalization.CompareOptions opt)

Disassembly:
	0x03212264 B.LE 0x3212298
	0x03212268 CBZ X25, 0x3213360
	0x0321226C MOV X0, X25
	0x03212270 MOV W1, W24
	0x03212274 MOV X2, X31
	0x03212278 BL 0x3222A1C
	0x0321227C AND W1, W0, 0xFFFF
	0x03212280 MOV X0, X20
	0x03212284 BL 0x32103B0
	0x03212288 AND W8, W0, 0xFF
	0x0321228C CMP W8, 0x1
	0x03212290 SUB W8, W24, 0x1
	0x03212294 B.EQ 0x321225C
	0x03212298 SUB W8, W23, 0x1
	0x0321229C MOV W25, W8
	0x032122A0 CMP W8, W28
	0x032122A4 B.LE 0x32122D4
	0x032122A8 MOV X0, X19
	0x032122AC MOV W1, W25
	0x032122B0 MOV X2, X31
	0x032122B4 BL 0x3222A1C
	0x032122B8 AND W1, W0, 0xFFFF
	0x032122BC MOV X0, X20
	0x032122C0 BL 0x32103B0
	0x032122C4 AND W8, W0, 0xFF
	0x032122C8 CMP W8, 0x1
	0x032122CC SUB W8, W25, 0x1
	0x032122D0 B.EQ 0x321229C
	0x032122D4 CMP W24, W29
	0x032122D8 B.LE 0x3212318
	0x032122DC CBZ X26, 0x3213360
	0x032122E0 LDR W28, [X31 + 0xCC]
	0x032122E4 MOV X0, X26
	0x032122E8 MOV W1, W24
	0x032122EC MOV X2, X31
	0x032122F0 BL 0x3222A1C
	0x032122F4 AND W1, W0, 0xFFFF
	0x032122F8 MOV X0, X20
	0x032122FC BL 0x3210FA0
	0x03212300 TBNZ X0, 0x0, 0x321231C
	0x03212304 SUB W24, W24, 0x1
	0x03212308 CMP W24, W29
	0x0321230C B.GT 0x32122E4
	0x03212310 MOV W24, W29
	0x03212314 B 0x321231C
	0x03212318 LDR W28, [X31 + 0xCC]
	0x0321231C LDR W8, [X31 + 0xB4]
	0x03212320 CMP W25, W8
	0x03212324 B.LE 0x3212368
	0x03212328 MOV X0, X19
	0x0321232C MOV W1, W25
	0x03212330 MOV X2, X31
	0x03212334 BL 0x3222A1C
	0x03212338 AND W1, W0, 0xFFFF
	0x0321233C MOV X0, X20
	0x03212340 BL 0x3210FA0
	0x03212344 TBNZ X0, 0x0, 0x3212368
	0x03212348 LDR W8, [X31 + 0xB4]
	0x0321234C SUB W25, W25, 0x1
	0x03212350 CMP W25, W8
	0x03212354 B.GT 0x3212328
	0x03212358 MOV W8, W23
	0x0321235C LDR W23, [X31 + 0xB4]
	0x03212360 STR W21, [X31 + 0xB0]
	0x03212364 B 0x3212374
	0x03212368 MOV W8, W23
	0x0321236C STR W21, [X31 + 0xB0]
	0x03212370 MOV W23, W25
	0x03212374 MOV W21, W24
	0x03212378 MOV X25, X26
	0x0321237C STR W8, [X31 + 0x74]
	0x03212380 CBZ X25, 0x3213360
	0x03212384 MOV X0, X25
	0x03212388 MOV W1, W21
	0x0321238C MOV X2, X31
	0x03212390 BL 0x3222A1C
	0x03212394 AND W1, W0, 0xFFFF
	0x03212398 MOV X0, X20
	0x0321239C MOV W2, W28
	0x032123A0 BL 0x3210B10
	0x032123A4 MOV W24, W0
	0x032123A8 MOV X0, X19
	0x032123AC MOV W1, W23
	0x032123B0 MOV X2, X31
	0x032123B4 BL 0x3222A1C
	0x032123B8 AND W1, W0, 0xFFFF
	0x032123BC MOV X0, X20
	0x032123C0 MOV W2, W28
	0x032123C4 BL 0x3210B10
	0x032123C8 MOV W29, W0
	0x032123CC MOV X0, X20
	0x032123D0 MOV W1, W24
	0x032123D4 STR W24, [X31 + 0xB4]
	0x032123D8 BL 0x3210BF4
	0x032123DC STR W0, [X31 + 0x78]
	0x032123E0 CBZ W0, 0x3212408
	0x032123E4 LDR X8, [X31 + 0x40]
	0x032123E8 LDR W1, [X8 + 0x28]
	0x032123EC TBNZ X1, 0x1F, 0x3212520
	0x032123F0 MOV W24, W0
	0x032123F4 MOV X0, X20
	0x032123F8 MOV W2, W24
	0x032123FC MOV W3, W28
	0x03212400 BL 0x3210D14
	0x03212404 STR W0, [X31 + 0xB4]
	0x03212408 MOV X26, X31
	0x0321240C MOV X0, X20
	0x03212410 MOV W1, W29
	0x03212414 BL 0x3210BF4
	0x03212418 STR W0, [X31 + 0x6C]
	0x0321241C CBZ W0, 0x321243C
	0x03212420 LDR W1, [X31 + 0x54]
	0x03212424 TBNZ X1, 0x1F, 0x3212530
	0x03212428 LDR W2, [X31 + 0x6C]
	0x0321242C MOV X0, X20
	0x03212430 MOV W3, W28
	0x03212434 BL 0x3210D14
	0x03212438 MOV W29, W0
	0x0321243C STR X31, [X31 + 0x38]
	0x03212440 STR X25, [X31 + 0x60]
	0x03212444 LDR X25, [X31 + 0x80]
	0x03212448 LDR W1, [X31 + 0xB4]
	0x0321244C STR W27, [X31 + 0x5C]
	0x03212450 MOV X0, X25
	0x03212454 BL 0x32103B0
	0x03212458 MOV W24, W0
	0x0321245C AND W20, W0, 0xFF
	0x03212460 MOV X0, X25
	0x03212464 MOV W1, W29
	0x03212468 STR W29, [X31 + 0x48]
	0x0321246C BL 0x32103B0
	0x03212470 CMP W20, 0x6
	0x03212474 MOV W27, W0
	0x03212478 B.NE 0x32124FC
	0x0321247C TBNZ X28, 0x1D, 0x321256C
	0x03212480 LDR W8, [X31 + 0x7C]
	0x03212484 LDP X14, X20, [X31 + 0xB8]
	0x03212488 LDR W29, [X31 + 0xB4]
	0x0321248C CMP W8, 0x5
	0x03212490 B.NE 0x3212574
	0x03212494 LDP W9, W8, [X31 + 0xA4]
	0x03212498 LDR X0, [X31 + 0x80]
	0x0321249C CMP X14, 0x0
	0x032124A0 MOV W1, W29
	0x032124A4 SUB W8, W8, W9
	0x032124A8 LDR W9, [X31 + 0xAC]
	0x032124AC SUB W9, W21, W9
	0x032124B0 CSEL W8, W9, W8, EQ
	0x032124B4 STR W8, [X31 + 0x70]
	0x032124B8 BL 0x3210444
	0x032124BC ADRP X8, 0xF0F000
	0x032124C0 LDR X8, [X8 + 0xA10]
	0x032124C4 MOV W25, W0
	0x032124C8 LDR X8, [X8]
	0x032124CC LDR W9, [X8 + 0xE0]
	0x032124D0 CBNZ W9, 0x32124DC
	0x032124D4 MOV X0, X8
	0x032124D8 BL 0x1C16DFC
	0x032124DC MOV W0, W29
	0x032124E0 BL 0x320E5C4
	0x032124E4 LDR X14, [X31 + 0xB8]
	0x032124E8 AND W8, W25, 0xFF
	0x032124EC ADD W9, W0, 0x8
	0x032124F0 LSLV W8, W8, W9
	0x032124F4 STR W8, [X31 + 0x4C]
	0x032124F8 B 0x3212574
	0x032124FC AND W8, W27, 0xFF
	0x03212500 CMP W8, 0x6
	0x03212504 B.NE 0x3212558
	0x03212508 ADRP X20, 0xF0F000
	0x0321250C LDP W26, W15, [X31 + 0x70]
	0x03212510 LDR W29, [X31 + 0x4C]
	0x03212514 LDR X20, [X20 + 0xA10]
	0x03212518 LDR X14, [X31 + 0xB8]
	0x0321251C B 0x32125A4
	0x03212520 LDR X26, [X8 + 0x30]
	0x03212524 CBNZ X26, 0x321240C
	0x03212528 ADD W21, W21, 0x1
	0x0321252C B 0x3212544
	0x03212530 LDR X8, [X31 + 0x28]
	0x03212534 STR X8, [X31 + 0x38]
	0x03212538 CBNZ X8, 0x3212440
	0x0321253C STR X31, [X31 + 0x28]
	0x03212540 ADD W23, W23, 0x1
	0x03212544 LDR W10, [X31 + 0x74]
	0x03212548 LDP X8, X9, [X31 + 0xB8]
	0x0321254C STR W10, [X31 + 0xB4]
	0x03212550 LDR W10, [X31 + 0x7C]
	0x03212554 B 0x3212020
	0x03212558 LDR X14, [X31 + 0xB8]
	0x0321255C LDR W15, [X31 + 0x74]
	0x03212560 LDR W29, [X31 + 0xB4]
	0x03212564 MOV W25, W21
	0x03212568 B 0x3212654
	0x0321256C LDP X14, X20, [X31 + 0xB8]
	0x03212570 LDR W29, [X31 + 0xB4]
	0x03212574 LDR X8, [X31 + 0x40]
	0x03212578 LDR W15, [X31 + 0x74]
	0x0321257C ADD W25, W21, 0x1
	0x03212580 STR W29, [X8 + 0x28]
	0x03212584 AND W8, W27, 0xFF
	0x03212588 CMP W8, 0x6
	0x0321258C B.NE 0x3212628
	0x03212590 ADRP X20, 0xF0F000
	0x03212594 LDR W26, [X31 + 0x70]
	0x03212598 LDR W29, [X31 + 0x4C]
	0x0321259C LDR X20, [X20 + 0xA10]
	0x032125A0 MOV W21, W25
	0x032125A4 LDR W27, [X31 + 0x5C]
	0x032125A8 LDR X25, [X31 + 0x60]
	0x032125AC TBNZ X28, 0x1D, 0x3212848
	0x032125B0 LDR W8, [X31 + 0x7C]
	0x032125B4 LDR W28, [X31 + 0x48]
	0x032125B8 CMP W8, 0x5
	0x032125BC B.NE 0x321284C
	0x032125C0 LDP W9, W8, [X31 + 0x90]
	0x032125C4 LDR X10, [X31 + 0xC0]
	0x032125C8 LDR X0, [X31 + 0x80]
	0x032125CC MOV W1, W28
	0x032125D0 SUB W8, W8, W9
	0x032125D4 LDR W9, [X31 + 0x98]
	0x032125D8 CMP X10, 0x0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 Move X20, 0x11CB000
	016 Move W8, [X20+704]
	017 Move W19, W5
	018 Move X28, X4
	019 Move W26, W3
	020 Move W22, W2
	021 Move X27, X1
	022 Move X24, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xF10000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xF10000
	031 Move X0, [X0+3032]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+704], W8
	035 Add X9, X31, 0
	036 Subtract X21, X9, 16
	037 Add X31, X21, 0
	038 Move X8, X31
	039 Move [X9-16], W31
	040 Move [X21], W31
	041 Add X8, X8, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Compare X27, 0
	045 JumpIfEqual {247}
	046 Or X9, X21, 1
	047 Or X8, X21, 3
	048 Move [X29-40], X8
	049 Move [X29-32], X9
	050 Or X8, X21, 3
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W25, TEMP
	054 Move [X29-48], X8
	055 Move [X29-16], X27
	056 Move [X29-8], X28
	057 Move [X29-20], W26
	058 Move X0, X27
	059 Move W1, W22
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 And W20, W0, 0xFFFF
	063 Move X0, X24
	064 Move W1, W20
	065 Call SimpleCollator.GetExtenderType, X0, X1
	066 Compare W0, 0
	067 JumpIfEqual {86}
	068 Move W23, W0
	069 Move X0, X24
	070 Move W1, W25
	071 Move W2, W23
	072 Move W3, W19
	073 Call SimpleCollator.FilterExtender, X0, X1, X2, X3
	074 Move W28, W0
	075 Move TEMP, X0
	076 And TEMP, TEMP, -2147483648
	077 Compare TEMP, -2147483648
	078 JumpIfEqual {122}
	079 Move W1, W28
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move X0, X24
	082 Move W2, W23
	083 Move W4, W19
	084 Move X3, X28
	085 Call SimpleCollator.FillSortKeyRaw, X0, X1, X2, X3, X4
	086 Move X8, 0xF10000
	087 Move X8, [X8+3032]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move W0, W20
	094 Move W1, W19
	095 Call SimpleCollator.IsIgnorable, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {231}
	100 Move X0, X24
	101 Move W1, W20
	102 Move W2, W19
	103 Call SimpleCollator.FilterOptions, X0, X1, X2
	104 Move X1, X27
	105 Move W27, W0
	106 Move X0, X24
	107 Move W2, W22
	108 Move W3, W26
	109 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	110 Compare X0, 0
	111 JumpIfEqual {154}
	112 Move X1, [X0+32]
	113 Move X26, X0
	114 Compare X1, 0
	115 JumpIfEqual {173}
	116 Move W3, [X1+16]
	117 Move X0, X24
	118 Move W2, W31
	119 Move X4, X28
	120 Move W5, W19
	121 Call SimpleCollator.GetSortKey, X0, X1, X2, X3, X4, X5
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 Move W27, [X21]
	124 Move W20, [X8]
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W26, [X8]
	128 Move X0, X24
	129 Move W1, W28
	130 Move W2, W23
	131 Call SimpleCollator.Level2, X0, X1, X2
	132 Move W20, W0
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move W4, [X8]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0xF10000
	137 Move X8, [X8+2576]
	138 Move X0, [X8]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move W0, W28
	144 Call MSCompatUnicodeTable.Level3, X0
	145 Move W4, W0
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Compare X28, 0
	148 JumpIfEqual {247}
	149 Move X0, X28
	150 Move W1, W27
	151 Move W2, W26
	152 Move W3, W20
	153 Call SortKeyBuffer.AppendNormal, X0, X1, X2, X3, X4
	154 Move X8, 0xF10000
	155 Move X8, [X8+2576]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move W0, W27
	162 Call MSCompatUnicodeTable.IsIgnorableNonSpacing, X0
	163 And W31, W0, 1
	164 Move X0, X24
	165 Move W1, W27
	166 Move W2, W31
	167 Move X3, X28
	168 Move W4, W19
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 Call SimpleCollator.FillSortKeyRaw, X0, X1, X2, X3, X4
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X8, [X26+40]
	174 Compare X8, 0
	175 JumpIfEqual {247}
	176 Move X9, X31
	177 Move W10, [X8+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add X8, X8, X9
	181 Move W8, [X8+32]
	182 Move [X21], W8
	183 Move X8, [X26+40]
	184 Add X9, X9, 1
	185 Compare X8, 0
	186 JumpIfNotEqual {177}
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move W28, [X21]
	189 Move W20, [X8]
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W25, [X8]
	193 Move X0, X24
	194 Move W1, W27
	195 Move W2, W31
	196 Call SimpleCollator.Level2, X0, X1, X2
	197 Move W20, W0
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move W4, [X8]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, 0xF10000
	202 Move X8, [X8+2576]
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move W0, W27
	209 Call MSCompatUnicodeTable.Level3, X0
	210 Move W4, W0
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Compare X23, 0
	213 JumpIfEqual {247}
	214 Move X0, X23
	215 Move W1, W28
	216 Move W2, W25
	217 Move W3, W20
	218 Call SortKeyBuffer.AppendNormal, X0, X1, X2, X3, X4
	219 Move TEMP, 0
	220 Not TEMP
	221 Move W25, TEMP
	222 Move X28, X23
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 Move X8, [X26+24]
	225 Compare X8, 0
	226 JumpIfEqual {247}
	227 Move W8, [X8+24]
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 Add W8, W22, W8
	230 Subtract W22, W8, 1
	231 Add W22, W22, 1
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add X31, X29, 0
	234 Move X20, [X31+80]
	235 Move X19, [X31+88]
	236 Move X22, [X31+64]
	237 Move X21, [X31+72]
	238 Move X24, [X31+48]
	239 Move X23, [X31+56]
	240 Move X26, [X31+32]
	241 Move X25, [X31+40]
	242 Move X28, [X31+16]
	243 Move X27, [X31+24]
	244 Move X29, [X31+96]
	245 Move X30, [X31+104]
	246 Return 
	247 Call 0x1C17F20
	248 Call 0x1C17F28

Method: System.Void FillSortKeyRaw(System.Int32 i, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, Mono.Globalization.Unicode.SortKeyBuffer buf, System.Globalization.CompareOptions opt)

Disassembly:
	0x0321267C CBZ X26, 0x3212AA0
	0x03212680 LDR W21, [X31 + 0x98]
	0x03212684 LDR X14, [X31 + 0xB8]
	0x03212688 LDR W15, [X31 + 0x74]
	0x0321268C STR W31, [X31 + 0xC]
	0x03212690 MOVZ W20, 0x1
	0x03212694 LDR W8, [X31 + 0x6C]
	0x03212698 CBZ W8, 0x321275C
	0x0321269C LDR X8, [X31 + 0x38]
	0x032126A0 CBNZ X8, 0x3212780
	0x032126A4 LDR X8, [X31 + 0x40]
	0x032126A8 LDR X0, [X31 + 0x80]
	0x032126AC LDR W1, [X31 + 0x48]
	0x032126B0 LDR X21, [X8 + 0x20]
	0x032126B4 STRB W27, [X21]
	0x032126B8 BL 0x3210444
	0x032126BC LDR W8, [X31 + 0x7C]
	0x032126C0 LDR W9, [X31 + 0x30]
	0x032126C4 STR X21, [X31 + 0x38]
	0x032126C8 STRB W0, [X21 + 0x1]
	0x032126CC CMP W8, 0x2
	0x032126D0 CSET W8, CC
	0x032126D4 ORR W8, W8, W9, 0x0
	0x032126D8 TBNZ X8, 0x0, 0x32126F4
	0x032126DC LDR X0, [X31 + 0x80]
	0x032126E0 LDR W1, [X31 + 0x48]
	0x032126E4 LDR W2, [X31 + 0x6C]
	0x032126E8 BL 0x32104D8
	0x032126EC LDR X8, [X31 + 0x38]
	0x032126F0 STRB W0, [X8 + 0x2]
	0x032126F4 LDR W8, [X31 + 0x7C]
	0x032126F8 CMP W8, 0x3
	0x032126FC B.CC 0x3212734
	0x03212700 ADRP X8, 0xF0F000
	0x03212704 LDR X8, [X8 + 0xA10]
	0x03212708 LDR X0, [X8]
	0x0321270C LDR W8, [X0 + 0xE0]
	0x03212710 CBNZ W8, 0x3212718
	0x03212714 BL 0x1C16DFC
	0x03212718 LDR W0, [X31 + 0x48]
	0x0321271C BL 0x320E5C4
	0x03212720 LDR W8, [X31 + 0x7C]
	0x03212724 CMP W8, 0x4
	0x03212728 LDR X8, [X31 + 0x38]
	0x0321272C STRB W0, [X8 + 0x3]
	0x03212730 B.CS 0x3212C84
	0x03212734 LDR X14, [X31 + 0xB8]
	0x03212738 LDR W15, [X31 + 0x74]
	0x0321273C MOV W12, W31
	0x03212740 AND W8, W27, 0xFF
	0x03212744 CMP W8, 0x2
	0x03212748 LDR W8, [X31 + 0x54]
	0x0321274C LDR W9, [X31 + 0x48]
	0x03212750 CSEL W8, W8, W9, CC
	0x03212754 STR W8, [X31 + 0x54]
	0x03212758 B 0x3212784
	0x0321275C LDR X0, [X31 + 0x80]
	0x03212760 MOV X1, X19
	0x03212764 MOV W2, W23
	0x03212768 MOV W3, W22
	0x0321276C BL 0x3210680
	0x03212770 LDR W15, [X31 + 0x74]
	0x03212774 LDR X14, [X31 + 0xB8]
	0x03212778 LDR X8, [X31 + 0x38]
	0x0321277C CBZ X8, 0x3212BB4
	0x03212780 MOV W12, W31
	0x03212784 LDR W27, [X31 + 0x5C]
	0x03212788 ADD W23, W23, 0x1
	0x0321278C ADD W21, W20, W25
	0x03212790 TBNZ X28, 0x1, 0x3212838
	0x03212794 LDR X25, [X31 + 0x60]
	0x03212798 LDR X20, [X31 + 0xC0]
	0x0321279C CMP W21, W27
	0x032127A0 STR W12, [X31 + 0x8]
	0x032127A4 B.GE 0x3212904
	0x032127A8 LDR X24, [X31 + 0x80]
	0x032127AC MOV X0, X25
	0x032127B0 MOV W1, W21
	0x032127B4 MOV X2, X31
	0x032127B8 BL 0x3222A1C
	0x032127BC AND W1, W0, 0xFFFF
	0x032127C0 MOV X0, X24
	0x032127C4 BL 0x32103B0
	0x032127C8 AND W8, W0, 0xFF
	0x032127CC CMP W8, 0x1
	0x032127D0 B.NE 0x3212824
	0x032127D4 LDRB W20, [X26 + 0x2]
	0x032127D8 CBNZ W20, 0x32127E4
	0x032127DC MOVZ W20, 0x2
	0x032127E0 STRB W20, [X26 + 0x2]
	0x032127E4 MOV X0, X25
	0x032127E8 MOV W1, W21
	0x032127EC MOV X2, X31
	0x032127F0 BL 0x3222A1C
	0x032127F4 LDR X24, [X31 + 0x80]
	0x032127F8 AND W1, W0, 0xFFFF
	0x032127FC MOV W2, W31
	0x03212800 MOV X0, X24
	0x03212804 BL 0x32104D8
	0x03212808 ADD W8, W0, W20
	0x0321280C LDR X20, [X31 + 0xC0]
	0x03212810 ADD W21, W21, 0x1
	0x03212814 CMP W21, W27
	0x03212818 STRB W8, [X26 + 0x2]
	0x0321281C B.LT 0x32127AC
	0x03212820 MOV W21, W27
	0x03212824 LDR X14, [X31 + 0xB8]
	0x03212828 LDR W15, [X31 + 0x74]
	0x0321282C LDR X28, [X31 + 0x38]
	0x03212830 LDR W12, [X31 + 0x8]
	0x03212834 B 0x3212908
	0x03212838 LDR X25, [X31 + 0x60]
	0x0321283C LDR X20, [X31 + 0xC0]
	0x03212840 LDR X28, [X31 + 0x38]
	0x03212844 B 0x3212998
	0x03212848 LDR W28, [X31 + 0x48]
	0x0321284C LDR W0, [X31 + 0x58]
	0x03212850 LDR W11, [X31 + 0x50]
	0x03212854 LDR X20, [X31 + 0xC0]
	0x03212858 ADD W23, W23, 0x1
	0x0321285C STR W0, [X31 + 0x58]
	0x03212860 STP W11, W28, [X31 + 0x50]
	0x03212864 STR W29, [X31 + 0x4C]
	0x03212868 STR W26, [X31 + 0x70]
	0x0321286C LDR W10, [X31 + 0x7C]
	0x03212870 MOV X8, X14
	0x03212874 MOV X9, X20
	0x03212878 MOV X13, X20
	0x0321287C CMP W10, 0x5
	0x03212880 MOV W20, W22
	0x03212884 MOV X24, X19
	0x03212888 STR W15, [X31 + 0xB4]
	0x0321288C B.NE 0x3211FA0
	0x03212890 LDR W8, [X31 + 0x48]
	0x03212894 LDR W27, [X31 + 0x5C]
	0x03212898 LDR X25, [X31 + 0x60]
	0x0321289C MOVN W9, 0x0
	0x032128A0 CMP W29, W11
	0x032128A4 STP W8, W9, [X31 + 0x54]
	0x032128A8 MOV X8, X14
	0x032128AC MOV X9, X13
	0x032128B0 MOVN W12, 0x0
	0x032128B4 MOV W20, W22
	0x032128B8 MOV X24, X19
	0x032128BC STP W31, W31, [X31 + 0x4C]
	0x032128C0 STR W15, [X31 + 0xB4]
	0x032128C4 STR W12, [X31 + 0x70]
	0x032128C8 B.EQ 0x3211FA0
	0x032128CC LDR W8, [X31 + 0x48]
	0x032128D0 LDR W27, [X31 + 0x5C]
	0x032128D4 LDR X25, [X31 + 0x60]
	0x032128D8 MOVZ W10, 0x4
	0x032128DC STP W11, W8, [X31 + 0x50]
	0x032128E0 MOV X8, X14
	0x032128E4 MOV X9, X13
	0x032128E8 STR W15, [X31 + 0xB4]
	0x032128EC STR W29, [X31 + 0x4C]
	0x032128F0 STR W0, [X31 + 0x58]
	0x032128F4 STR W26, [X31 + 0x70]
	0x032128F8 MOV W20, W22
	0x032128FC MOV X24, X19
	0x03212900 B 0x3211FA0
	0x03212904 LDR X28, [X31 + 0x38]
	0x03212908 CMP W23, W22
	0x0321290C B.GE 0x3212998
	0x03212910 LDR X24, [X31 + 0x80]
	0x03212914 MOV X0, X19
	0x03212918 MOV W1, W23
	0x0321291C MOV X2, X31
	0x03212920 BL 0x3222A1C
	0x03212924 AND W1, W0, 0xFFFF
	0x03212928 MOV X0, X24
	0x0321292C BL 0x32103B0
	0x03212930 AND W8, W0, 0xFF
	0x03212934 CMP W8, 0x1
	0x03212938 B.NE 0x321298C
	0x0321293C LDRB W20, [X28 + 0x2]
	0x03212940 CBNZ W20, 0x321294C
	0x03212944 MOVZ W20, 0x2
	0x03212948 STRB W20, [X28 + 0x2]
	0x0321294C MOV X0, X19
	0x03212950 MOV W1, W23
	0x03212954 MOV X2, X31
	0x03212958 BL 0x3222A1C
	0x0321295C LDR X24, [X31 + 0x80]
	0x03212960 AND W1, W0, 0xFFFF
	0x03212964 MOV W2, W31
	0x03212968 MOV X0, X24
	0x0321296C BL 0x32104D8
	0x03212970 ADD W8, W0, W20
	0x03212974 LDR X20, [X31 + 0xC0]
	0x03212978 ADD W23, W23, 0x1
	0x0321297C CMP W22, W23
	0x03212980 STRB W8, [X28 + 0x2]
	0x03212984 B.NE 0x3212914
	0x03212988 MOV W23, W22
	0x0321298C LDR X14, [X31 + 0xB8]
	0x03212990 LDR W15, [X31 + 0x74]
	0x03212994 LDR W12, [X31 + 0x8]
	0x03212998 LDRB W8, [X26]
	0x0321299C LDRB W9, [X28]
	0x032129A0 SUBS W0, W8, W9
	0x032129A4 B.NE 0x32129B4
	0x032129A8 LDRB W8, [X26 + 0x1]
	0x032129AC LDRB W9, [X28 + 0x1]
	0x032129B0 SUB W0, W8, W9
	0x032129B4 CBNZ W0, 0x3213338
	0x032129B8 LDR W28, [X31 + 0x7C]
	0x032129BC MOVZ W10, 0x1
	0x032129C0 MOV X8, X14
	0x032129C4 MOV X9, X20
	0x032129C8 CMP W28, 0x1
	0x032129CC MOV W20, W22
	0x032129D0 MOV X24, X19
	0x032129D4 STR W15, [X31 + 0xB4]
	0x032129D8 B.EQ 0x3211FA0
	0x032129DC LDR W8, [X31 + 0xCC]
	0x032129E0 TBNZ X8, 0x1, 0x3212A30
	0x032129E4 LDR X9, [X31 + 0x38]
	0x032129E8 LDRB W8, [X26 + 0x2]
	0x032129EC LDRB W9, [X9 + 0x2]
	0x032129F0 SUBS W11, W8, W9
	0x032129F4 B.EQ 0x3212A30
	0x032129F8 LDR W27, [X31 + 0x5C]
	0x032129FC LDR X25, [X31 + 0x60]
	0x03212A00 LDR W8, [X31 + 0x24]
	0x03212A04 LDR X9, [X31 + 0xC0]
	0x03212A08 TBNZ X8, 0x0, 0x3213358
	0x03212A0C LDR X8, [X31 + 0x80]
	0x03212A10 STR W15, [X31 + 0xB4]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X23, 0x11CB000
	014 Move W8, [X23+705]
	015 Move W22, W4
	016 Move X19, X3
	017 Move W21, W2
	018 Move W20, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xEE4000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0xF10000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xF10000
	031 Move X0, [X0+3032]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+705], W8
	035 Move TEMP, 0x33FF
	036 Not TEMP
	037 Move W8, TEMP
	038 Add W8, W20, W8
	039 Move W9, W8
	040 ShiftRight W9, 1
	041 And W9, W9, 0x7FFFFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0xEE4000
	044 Move X8, [X8+368]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W0, W20
	051 Move X1, X31
	052 Call Char.GetUnicodeCategory, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X19, 0
	056 JumpIfEqual {270}
	057 Move W9, 1033
	058 Subtract W8, W20, 0xE000
	059 NotImplemented "Instruction MOVK not yet implemented."
	060 NotImplemented "Instruction SMADDL not yet implemented."
	061 Move X9, X9
	062 ShiftRight X9, 32
	063 And X9, X9, 0x7FFFFFFF
	064 Add W9, W9, W8
	065 NotImplemented "Instruction SBFM not yet implemented."
	066 Move W10, 254
	067 Add W9, W11, W9
	068 NotImplemented "Instruction MSUB not yet implemented."
	069 Subtract W1, W9, 27
	070 Add W2, W8, 2
	071 Move X0, X19
	072 Move W3, W31
	073 Move W4, W31
	074 Compare X19, 0
	075 JumpIfEqual {270}
	076 Move W10, 1033
	077 Move W9, W8
	078 ShiftRight W9, 1
	079 And W9, W9, 0x7FFF
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 NotImplemented "Instruction UMADDL not yet implemented."
	082 Move X0, X19
	083 Move X20, [X31+96]
	084 Move X19, [X31+104]
	085 Move X22, [X31+80]
	086 Move X21, [X31+88]
	087 Move X24, [X31+64]
	088 Move X23, [X31+72]
	089 Move X26, [X31+48]
	090 Move X25, [X31+56]
	091 Move X28, [X31+32]
	092 Move X27, [X31+40]
	093 Move X30, [X31+16]
	094 Move W11, 254
	095 Move X9, X9
	096 ShiftRight X9, 38
	097 And X9, X9, 0x7FFFFFFF
	098 NotImplemented "Instruction MSUB not yet implemented."
	099 Add W1, W9, 16
	100 Add W2, W8, 2
	101 Add X31, X31, 112
	102 Call SortKeyBuffer.AppendCJKExtension, X0, X1, X2
	103 Return 
	104 Move W1, W20
	105 Move X2, X19
	106 Move X20, [X31+96]
	107 Move X19, [X31+104]
	108 Move X22, [X31+80]
	109 Move X21, [X31+88]
	110 Move X24, [X31+64]
	111 Move X23, [X31+72]
	112 Move X26, [X31+48]
	113 Move X25, [X31+56]
	114 Move X28, [X31+32]
	115 Move X27, [X31+40]
	116 Move X30, [X31+16]
	117 Add X31, X31, 112
	118 Call SimpleCollator.FillSurrogateSortKeyRaw, X0, X1, X2
	119 Return 
	120 Move X0, X24
	121 Move W1, W20
	122 Move W2, W21
	123 Call SimpleCollator.Level2, X0, X1, X2
	124 Move X26, 0xF10000
	125 Move X26, [X26+2576]
	126 Move W23, W0
	127 Move X8, [X26]
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move W8, 0x3041
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add W8, W20, 154
	136 And W8, W8, 0xFFFF
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W8, W20
	139 ShiftRight W8, 8
	140 And W8, W8, 0x7FFF
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W9, 0x309C
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move TEMP, 0x32CF
	146 Not TEMP
	147 Move W8, TEMP
	148 Add W8, W20, W8
	149 And W8, W8, 0xFFFF
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W8, 0x3099
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X24
	154 Move W1, W20
	155 And W27, W20, 0xFFFF
	156 Call SimpleCollator.Level1, X0, X1
	157 Move W25, W0
	158 Move X0, X24
	159 Move W1, W20
	160 Call SimpleCollator.Category, X0, X1
	161 Move X8, [X26]
	162 Move W24, W0
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move W0, W20
	169 Call MSCompatUnicodeTable.Level3, X0
	170 Move W26, W0
	171 Move W0, W20
	172 Call MSCompatUnicodeTable.IsJapaneseSmallLetter, X0
	173 Move X8, 0xF10000
	174 Move X8, [X8+3032]
	175 Move W28, W0
	176 Move X8, [X8]
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move W0, W27
	183 Move W1, W22
	184 Call SimpleCollator.IsHalfKana, X0, X1
	185 Compare X19, 0
	186 JumpIfEqual {270}
	187 Move TEMP, 0x3040
	188 Not TEMP
	189 Move W8, TEMP
	190 Add W8, W20, W8
	191 And W8, W8, 0xFFFF
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CSET not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 And W22, W22, 2
	196 NotImplemented "Instruction CSET not yet implemented."
	197 Move W9, 4
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Or W8, W8, W22
	200 NotImplemented "Instruction CINC not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W8, 3
	203 NotImplemented "Instruction CSEL not yet implemented."
	204 And W8, W0, 1
	205 And W5, W28, 1
	206 Move X0, X19
	207 Move W1, W24
	208 Move W2, W25
	209 Move W3, W23
	210 Move W4, W26
	211 Move [X31], W8
	212 Call SortKeyBuffer.AppendKana, X0, X1, X2, X3, X4, X5, X6, X7, X8
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Compare W22, 0
	215 JumpIfNotEqual {220}
	216 Move W1, 1
	217 Move W2, 1
	218 Move W3, 1
	219 Move X0, X19
	220 Move X20, [X31+96]
	221 Move X19, [X31+104]
	222 Move X22, [X31+80]
	223 Move X21, [X31+88]
	224 Move X24, [X31+64]
	225 Move X23, [X31+72]
	226 Move X26, [X31+48]
	227 Move X25, [X31+56]
	228 Move X28, [X31+32]
	229 Move X27, [X31+40]
	230 Move X30, [X31+16]
	231 Add X31, X31, 112
	232 Return 
	233 Move W8, 0x30FB
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, X24
	236 Move W1, W20
	237 Call SimpleCollator.Category, X0, X1
	238 Move W21, W0
	239 Move X0, X24
	240 Move W1, W20
	241 Call SimpleCollator.Level1, X0, X1
	242 Move X8, [X26]
	243 Move W22, W0
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move W0, W20
	250 Call MSCompatUnicodeTable.Level3, X0
	251 Compare X19, 0
	252 JumpIfEqual {270}
	253 Move W4, W0
	254 Move X0, X19
	255 Move W1, W21
	256 Move W2, W22
	257 Move W3, W23
	258 Move X20, [X31+96]
	259 Move X19, [X31+104]
	260 Move X22, [X31+80]
	261 Move X21, [X31+88]
	262 Move X24, [X31+64]
	263 Move X23, [X31+72]
	264 Move X26, [X31+48]
	265 Move X25, [X31+56]
	266 Move X28, [X31+32]
	267 Move X27, [X31+40]
	268 Move X30, [X31+16]
	269 Add X31, X31, 112
	270 Call 0x1C17F20

Method: System.Void FillSurrogateSortKeyRaw(System.Int32 i, Mono.Globalization.Unicode.SortKeyBuffer buf)

Disassembly:
	0x03212BEC CMP X9, X10
	0x03212BF0 B.CS 0x3213364
	0x03212BF4 ADD X8, X8, X9
	0x03212BF8 LDRB W8, [X8 + 0x20]
	0x03212BFC STRB W8, [X29, X9, LSL]
	0x03212C00 LDR X8, [X0 + 0x28]
	0x03212C04 ADD X9, X9, 0x1
	0x03212C08 CBNZ X8, 0x3212BE0
	0x03212C0C B 0x3213360
	0x03212C10 ADRP X8, 0xF0F000
	0x03212C14 LDR X8, [X8 + 0xA10]
	0x03212C18 LDR X0, [X8]
	0x03212C1C LDR W8, [X0 + 0xE0]
	0x03212C20 CBNZ W8, 0x3212C28
	0x03212C24 BL 0x1C16DFC
	0x03212C28 LDR X14, [X31 + 0xB8]
	0x03212C2C LDR W15, [X31 + 0x74]
	0x03212C30 MOVZ W8, 0x3041
	0x03212C34 CMP W8, W29, UXTH
	0x03212C38 B.HI 0x3212DA0
	0x03212C3C ADD W8, W29, 0x9A
	0x03212C40 AND W8, W8, 0xFFFF
	0x03212C44 CMP W8, 0x38
	0x03212C48 B.CC 0x3212DD0
	0x03212C4C UBFM W8, W29, 0x8, 0xF
	0x03212C50 CMP W8, 0x32
	0x03212C54 B.HI 0x3212DA0
	0x03212C58 MOVZ W9, 0x309C
	0x03212C5C CMP W9, W29, UXTH
	0x03212C60 B.CS 0x321304C
	0x03212C64 CMP W8, 0x30
	0x03212C68 B.LS 0x321306C
	0x03212C6C MOVN W8, 0x32CF
	0x03212C70 ADD W8, W29, W8
	0x03212C74 AND W8, W8, 0xFFFF
	0x03212C78 CMP W8, 0x2F
	0x03212C7C CSET W8, CC
	0x03212C80 B 0x3213078
	0x03212C84 ADRP X8, 0xF0F000
	0x03212C88 LDR X8, [X8 + 0xA10]
	0x03212C8C LDR X0, [X8]
	0x03212C90 LDR W8, [X0 + 0xE0]
	0x03212C94 CBNZ W8, 0x3212C9C
	0x03212C98 BL 0x1C16DFC
	0x03212C9C LDR W10, [X31 + 0x48]
	0x03212CA0 LDR X14, [X31 + 0xB8]

ISIL:
	001 Move W8, 0xD83F
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 0xD880
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, W1
	006 ShiftRight W8, 7
	007 And W8, W8, 0x7FFFFFFF
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move TEMP, 0xDB3F
	010 Not TEMP
	011 Move W9, TEMP
	012 Move W8, 254
	013 Move W8, 0xD800
	014 Move W10, 62
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move TEMP, 0xD7FF
	017 Not TEMP
	018 Move W9, TEMP
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move W8, 65
	021 Compare X2, 0
	022 JumpIfEqual {49}
	023 Move W10, 1033
	024 Add W9, W9, W1
	025 NotImplemented "Instruction MOVK not yet implemented."
	026 NotImplemented "Instruction SMADDL not yet implemented."
	027 Move X10, X10
	028 ShiftRight X10, 32
	029 And X10, X10, 0x7FFFFFFF
	030 Add W10, W10, W9
	031 NotImplemented "Instruction SBFM not yet implemented."
	032 Add W10, W11, W10
	033 Move W11, 254
	034 Add W1, W10, W8
	035 NotImplemented "Instruction MSUB not yet implemented."
	036 Add W8, W8, 2
	037 Move X0, X2
	038 Move W2, W8
	039 Move W4, W3
	040 Call SortKeyBuffer.AppendNormal, X0, X1, X2, X3, X4
	041 Return 
	042 Move TEMP, 0xD83F
	043 Not TEMP
	044 Move W9, TEMP
	045 Move W8, 242
	046 Move W3, 62
	047 Compare X2, 0
	048 JumpIfNotEqual {23}
	049 Move [X31-16], X30
	050 Call 0x1C17F20
	051 Move TEMP, 0xDB09
	052 Not TEMP
	053 Move W9, TEMP
	054 Move W8, 65
	055 Move W3, 63
	056 Compare X2, 0
	057 JumpIfNotEqual {23}

Method: System.Int32 System.Globalization.ISimpleCollator.Compare(System.String s1, System.Int32 idx1, System.Int32 len1, System.String s2, System.Int32 idx2, System.Int32 len2, System.Globalization.CompareOptions options)

Disassembly:
	0x03212D38 LDR W27, [X31 + 0x5C]

ISIL:
No ISIL was generated
Method: System.Int32 Compare(System.String s1, System.Int32 idx1, System.Int32 len1, System.String s2, System.Int32 idx2, System.Int32 len2, System.Globalization.CompareOptions options)

Disassembly:
	0x03212D3C LDR X25, [X31 + 0x60]
	0x03212D40 LDR W8, [X31 + 0x24]
	0x03212D44 LDR X9, [X31 + 0xC0]
	0x03212D48 TBNZ X8, 0x0, 0x3213358
	0x03212D4C CMP W11, 0x0
	0x03212D50 MOVZ W8, 0x1
	0x03212D54 CSNEG W8, W8, W8, NE
	0x03212D58 STR W8, [X31 + 0x34]
	0x03212D5C MOVZ W10, 0x3
	0x03212D60 MOV X8, X14
	0x03212D64 STR W15, [X31 + 0xB4]
	0x03212D68 B 0x3212020
	0x03212D6C LDR X8, [X31 + 0x40]
	0x03212D70 MOVN W9, 0x0
	0x03212D74 STR W31, [X31 + 0xC]
	0x03212D78 STR W9, [X8 + 0x28]
	0x03212D7C STR X26, [X8 + 0x30]
	0x03212D80 B 0x3212694
	0x03212D84 STR X29, [X31 + 0x28]
	0x03212D88 STR X29, [X31 + 0x38]
	0x03212D8C LDR W29, [X31 + 0xB4]
	0x03212D90 MOVN W8, 0x0
	0x03212D94 MOV W12, W31
	0x03212D98 STR W8, [X31 + 0x54]
	0x03212D9C B 0x321278C
	0x03212DA0 STR W31, [X31 + 0xC]
	0x03212DA4 B 0x3212B9C
	0x03212DA8 CBZ X14, 0x3212FC0
	0x03212DAC LDR W21, [X31 + 0x98]
	0x03212DB0 STR W31, [X31 + 0xC]
	0x03212DB4 MOV X26, X31
	0x03212DB8 B 0x3212694
	0x03212DBC LDR X8, [X31 + 0xC0]
	0x03212DC0 CBZ X8, 0x3213010
	0x03212DC4 MOV W12, W31
	0x03212DC8 STR X31, [X31 + 0x38]
	0x03212DCC B 0x321278C
	0x03212DD0 MOVZ W8, 0x1
	0x03212DD4 B 0x3213078
	0x03212DD8 MOVZ W12, 0x1
	0x03212DDC B 0x3212740
	0x03212DE0 LDR X9, [X31 + 0xC0]
	0x03212DE4 LDR W27, [X31 + 0x5C]
	0x03212DE8 LDR X25, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+144], X30
	003 Move [X31+152], X19
	004 Move X8, X31
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X9, X31, 64
	007 Move [X31+76], W31
	008 Move [X31+72], W31
	009 Move [X31+64], W31
	010 Move [X31+48], W31
	011 Move [X31+96], V0
	012 Move [X31+104], V0
	013 Move [X31+5], V0
	014 Move [X9], W31
	015 Add X8, X8, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, X31
	018 Add X9, X31, 48
	019 Move [X9], W31
	020 Add X8, X8, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X31, 64
	023 Add X9, X31, 48
	024 Move [X31+80], W7
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W10, TEMP
	028 Move [X31+104], X8
	029 Move [X31+112], X9
	030 Add X8, X31, 80
	031 Move W19, 1
	032 Add X9, X31, 72
	033 Add X7, X31, 76
	034 Move [X31+88], X31
	035 Move [X31+96], X31
	036 Move [X31+128], X31
	037 Move [X31+120], W10
	038 Move [X31+16], W31
	039 Move [X31+24], X8
	040 Move [X31+8], W19
	041 Move [X31], X9
	042 Call SimpleCollator.CompareInternal, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSNEG not yet implemented."
	045 Move X30, [X31+144]
	046 Move X19, [X31+152]
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Add X31, X31, 160
	049 Return X0

Method: System.Void ClearBuffer(System.Byte* buffer, System.Int32 size)

Disassembly:
	0x03212600 BL 0x1C16DFC
	0x03212604 MOV W0, W28
	0x03212608 BL 0x320E5C4
	0x0321260C LDR X14, [X31 + 0xB8]
	0x03212610 LDR W15, [X31 + 0x74]
	0x03212614 AND W8, W24, 0xFF
	0x03212618 ADD W9, W0, 0x8
	0x0321261C LSLV W8, W8, W9
	0x03212620 STR W8, [X31 + 0x50]
	0x03212624 B 0x321284C
	0x03212628 AND W8, W24, 0xFF
	0x0321262C CMP W8, 0x6
	0x03212630 B.NE 0x3212654
	0x03212634 MOV W21, W25
	0x03212638 LDR W26, [X31 + 0x70]
	0x0321263C LDP W29, W11, [X31 + 0x4C]
	0x03212640 LDP W8, W0, [X31 + 0x54]
	0x03212644 LDR W27, [X31 + 0x5C]
	0x03212648 LDR X25, [X31 + 0x60]
	0x0321264C STR W8, [X31 + 0x48]
	0x03212650 B 0x321286C
	0x03212654 LDR W8, [X31 + 0x78]
	0x03212658 CBZ W8, 0x3212668
	0x0321265C CBZ X26, 0x3212B00

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X9, -41054208
	003 Move V0, [X9+121]
	004 Move W8, W2
	005 Add X10, X8, 1
	006 Subtract X11, X8, 1
	007 Move W9, 2
	008 And X8, X10, 0
	009 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	010 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 Move W9, S3
	014 Move TEMP, X9
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {19}
	018 Move [X1], W31
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 Invalid "Jump target not found in method."
	024 Move [X1+1], W31
	025 NotImplemented "Instruction INVALID not yet implemented."
	026 Subtract X8, X8, 2
	027 Add X1, X1, 2
	028 Return 

Method: System.Int32 CompareInternal(System.String s1, System.Int32 idx1, System.Int32 len1, System.String s2, System.Int32 idx2, System.Int32 len2, out System.Boolean targetConsumed, out System.Boolean sourceConsumed, System.Boolean skipHeadingExtenders, System.Boolean immediateBreakup, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x03212DEC MOV X8, X14
	0x03212DF0 MOV W10, W28
	0x03212DF4 MOV W20, W22
	0x03212DF8 MOV X24, X19
	0x03212DFC STR W15, [X31 + 0xB4]
	0x03212E00 CBZ W11, 0x3211FA0
	0x03212E04 ADRP X20, 0xF0F000
	0x03212E08 LDR X20, [X20 + 0xA10]
	0x03212E0C LDR X0, [X20]
	0x03212E10 LDR W8, [X0 + 0xE0]
	0x03212E14 CBNZ W8, 0x3212E1C
	0x03212E18 BL 0x1C16DFC
	0x03212E1C MOV W0, W29
	0x03212E20 BL 0x320EA28
	0x03212E24 MOV W24, W0
	0x03212E28 LDR W0, [X31 + 0x48]
	0x03212E2C BL 0x320EA28
	0x03212E30 EOR W8, W24, W0, 0x0
	0x03212E34 ANDS W31, W24, 0x1
	0x03212E38 ADRP X24, 0xF0F000
	0x03212E3C LDR W27, [X31 + 0x5C]
	0x03212E40 LDR X25, [X31 + 0x60]
	0x03212E44 LDR X24, [X24 + 0xBD8]
	0x03212E48 LDR X13, [X31 + 0xB8]
	0x03212E4C LDR W14, [X31 + 0x74]
	0x03212E50 MOVN W9, 0x0
	0x03212E54 CSNEG W9, W9, W9, NE
	0x03212E58 ANDS W31, W8, 0x1
	0x03212E5C CSEL W11, W9, W31, NE
	0x03212E60 CBNZ W11, 0x3212ED4
	0x03212E64 LDR X0, [X24]
	0x03212E68 LDR W8, [X0 + 0xE0]
	0x03212E6C CBNZ W8, 0x3212E7C
	0x03212E70 BL 0x1C16DFC
	0x03212E74 LDR W14, [X31 + 0x74]
	0x03212E78 LDR X13, [X31 + 0xB8]
	0x03212E7C LDR W11, [X31 + 0x6C]
	0x03212E80 LDR W12, [X31 + 0x78]
	0x03212E84 LDR W10, [X31 + 0x30]
	0x03212E88 CMP W11, 0x0
	0x03212E8C CSET W8, EQ
	0x03212E90 CMP W12, 0x0
	0x03212E94 CSET W9, EQ
	0x03212E98 ORR W8, W10, W8, 0x0
	0x03212E9C CMP W12, 0x3
	0x03212EA0 ORR W9, W10, W9, 0x0
	0x03212EA4 MOVZ W10, 0x4
	0x03212EA8 CINC W10, W10, EQ
	0x03212EAC CMP W9, 0x0
	0x03212EB0 MOVZ W9, 0x3
	0x03212EB4 CSEL W9, W9, W10, NE
	0x03212EB8 CMP W11, 0x3
	0x03212EBC MOVN W10, 0x4
	0x03212EC0 CINC W10, W10, NE
	0x03212EC4 CMP W8, 0x0
	0x03212EC8 MOVN W8, 0x2
	0x03212ECC CSEL W8, W8, W10, NE
	0x03212ED0 ADD W11, W8, W9
	0x03212ED4 CBNZ W11, 0x3212FA0
	0x03212ED8 LDR X0, [X20]
	0x03212EDC LDR W8, [X0 + 0xE0]
	0x03212EE0 CBNZ W8, 0x3212EF0
	0x03212EE4 BL 0x1C16DFC
	0x03212EE8 LDR W14, [X31 + 0x74]
	0x03212EEC LDR X13, [X31 + 0xB8]
	0x03212EF0 LDR W10, [X31 + 0x48]
	0x03212EF4 MOVN W9, 0x3040
	0x03212EF8 ADD W8, W29, W9
	0x03212EFC AND W8, W8, 0xFFFF
	0x03212F00 ADD W9, W10, W9
	0x03212F04 AND W9, W9, 0xFFFF
	0x03212F08 CMP W9, 0x54
	0x03212F0C CSET W9, CC
	0x03212F10 CMP W8, 0x54
	0x03212F14 CSET W8, CC
	0x03212F18 EOR W8, W8, W9, 0x0
	0x03212F1C MOVZ W9, 0x1
	0x03212F20 CSNEG W11, W9, W9, CC
	0x03212F24 TBNZ X8, 0x0, 0x3212FA0
	0x03212F28 LDR X0, [X24]
	0x03212F2C LDR W20, [X31 + 0xCC]
	0x03212F30 LDR W8, [X0 + 0xE0]
	0x03212F34 CBNZ W8, 0x3212F3C
	0x03212F38 BL 0x1C16DFC
	0x03212F3C LDR W8, [X31 + 0x48]
	0x03212F40 AND W0, W29, 0xFFFF
	0x03212F44 MOV W1, W20
	0x03212F48 AND W24, W8, 0xFFFF
	0x03212F4C BL 0x321060C
	0x03212F50 MOV W25, W0
	0x03212F54 MOV W0, W24
	0x03212F58 MOV W1, W20
	0x03212F5C BL 0x321060C
	0x03212F60 AND W8, W0, 0x1
	0x03212F64 ANDS W9, W25, 0x1
	0x03212F68 MOVN W10, 0x0
	0x03212F6C CSNEG W11, W10, W10, NE
	0x03212F70 CMP W9, W8
	0x03212F74 LDP X13, X9, [X31 + 0xB8]
	0x03212F78 LDR W14, [X31 + 0x74]
	0x03212F7C LDR X25, [X31 + 0x60]
	0x03212F80 MOV W10, W28
	0x03212F84 MOV X8, X13
	0x03212F88 MOV W20, W22
	0x03212F8C MOV X24, X19
	0x03212F90 STR W14, [X31 + 0xB4]
	0x03212F94 B.EQ 0x3211FA0
	0x03212F98 LDR W27, [X31 + 0x5C]
	0x03212F9C LDR X25, [X31 + 0x60]
	0x03212FA0 LDR X9, [X31 + 0xC0]
	0x03212FA4 MOVZ W10, 0x3
	0x03212FA8 MOV X8, X13
	0x03212FAC MOV W20, W22
	0x03212FB0 MOV X24, X19
	0x03212FB4 STR W14, [X31 + 0xB4]
	0x03212FB8 STR W11, [X31 + 0x34]
	0x03212FBC B 0x3212A94
	0x03212FC0 LDR X25, [X0 + 0x20]
	0x03212FC4 CBZ X25, 0x3213360
	0x03212FC8 LDR W10, [X31 + 0xAC]
	0x03212FCC LDR W9, [X31 + 0x5C]
	0x03212FD0 ADD W8, W21, W20
	0x03212FD4 LDR W27, [X25 + 0x10]
	0x03212FD8 STR W8, [X31 + 0xA8]
	0x03212FDC STP W9, W10, [X31 + 0xA0]
	0x03212FE0 LDR W9, [X31 + 0xB0]
	0x03212FE4 LDR X8, [X31 + 0x60]
	0x03212FE8 LDR W10, [X31 + 0x7C]
	0x03212FEC STR W31, [X31 + 0x78]
	0x03212FF0 STR W9, [X31 + 0x9C]
	0x03212FF4 LDR X9, [X31 + 0xC0]
	0x03212FF8 STP W31, W15, [X31 + 0xB0]
	0x03212FFC MOV W20, W22
	0x03213000 MOV X24, X19
	0x03213004 STR W31, [X31 + 0xAC]
	0x03213008 MOV W21, W31
	0x0321300C B 0x3211FA0
	0x03213010 LDR X24, [X0 + 0x20]
	0x03213014 CBZ X24, 0x3213360
	0x03213018 LDR W20, [X24 + 0x10]
	0x0321301C STP W21, W23, [X31 + 0x90]
	0x03213020 LDR W10, [X31 + 0x7C]
	0x03213024 MOV W21, W25
	0x03213028 LDR X25, [X31 + 0x60]
	0x0321302C STR W31, [X31 + 0xB4]
	0x03213030 STR W31, [X31 + 0x6C]
	0x03213034 MOV X8, X14
	0x03213038 MOV X9, X19
	0x0321303C STP W15, W22, [X31 + 0x88]
	0x03213040 STR W31, [X31 + 0x98]
	0x03213044 MOV W23, W31
	0x03213048 B 0x3211FA0
	0x0321304C MOVZ W8, 0x3099
	0x03213050 CMP W8, W29, UXTH
	0x03213054 CSET W8, HI
	0x03213058 B 0x3213078
	0x0321305C MOVZ W8, 0x3099
	0x03213060 CMP W8, W10, UXTH
	0x03213064 CSET W12, HI
	0x03213068 B 0x3212740
	0x0321306C MOVZ W8, 0x30FB
	0x03213070 CMP W8, W29, UXTH
	0x03213074 CSET W8, NE
	0x03213078 STR W8, [X31 + 0xC]
	0x0321307C B 0x3212B9C
	0x03213080 LDR W9, [X31 + 0x48]
	0x03213084 MOVZ W8, 0x30FB
	0x03213088 CMP W8, W9, UXTH
	0x0321308C CSET W12, NE
	0x03213090 B 0x3212740
	0x03213094 LDR W20, [X31 + 0x34]
	0x03213098 STR W13, [X31 + 0x7C]
	0x0321309C CMP W20, 0x0
	0x032130A0 CSET W8, EQ
	0x032130A4 CMP W13, 0x3
	0x032130A8 B.CC 0x32131E8
	0x032130AC LDR W9, [X31 + 0x30]
	0x032130B0 ADRP X24, 0xF0E000
	0x032130B4 LDR X24, [X24 + 0xA10]
	0x032130B8 MOV W25, W11
	0x032130BC ORR W8, W8, W9, 0x0
	0x032130C0 TBNZ X8, 0x0, 0x32131F4
	0x032130C4 CMP W26, W22
	0x032130C8 B.GE 0x3213320
	0x032130CC CMP W29, W25
	0x032130D0 B.GE 0x3213320
	0x032130D4 CBZ X28, 0x3213360
	0x032130D8 LDR W27, [X31 + 0x6C]
	0x032130DC LDR W21, [X31 + 0xCC]
	0x032130E0 MOV X0, X28
	0x032130E4 MOV W1, W29
	0x032130E8 MOV X2, X31
	0x032130EC BL 0x3222A1C
	0x032130F0 LDR X8, [X24]
	0x032130F4 MOV W23, W0
	0x032130F8 LDR W9, [X8 + 0xE0]
	0x032130FC CBNZ W9, 0x3213108
	0x03213100 MOV X0, X8
	0x03213104 BL 0x1C16DFC
	0x03213108 AND W0, W23, 0xFFFF
	0x0321310C BL 0x320E780
	0x03213110 TBZ X0, 0x0, 0x32131F4
	0x03213114 CBZ X19, 0x3213360
	0x03213118 MOV X0, X19
	0x0321311C MOV W1, W26
	0x03213120 MOV X2, X31
	0x03213124 BL 0x3222A1C
	0x03213128 LDR X8, [X24]
	0x0321312C MOV W23, W0
	0x03213130 LDR W9, [X8 + 0xE0]
	0x03213134 CBNZ W9, 0x3213140
	0x03213138 MOV X0, X8
	0x0321313C BL 0x1C16DFC
	0x03213140 AND W0, W23, 0xFFFF
	0x03213144 BL 0x320E780
	0x03213148 TBZ X0, 0x0, 0x32131F4
	0x0321314C MOV X0, X28
	0x03213150 MOV W1, W29
	0x03213154 MOV X2, X31
	0x03213158 BL 0x3222A1C
	0x0321315C LDR X20, [X31 + 0x80]
	0x03213160 AND W1, W0, 0xFFFF
	0x03213164 MOV W2, W21
	0x03213168 MOV X0, X20
	0x0321316C BL 0x3210B10
	0x03213170 LDR W2, [X31 + 0x78]
	0x03213174 MOV W1, W0
	0x03213178 MOV X0, X20
	0x0321317C BL 0x32104D8
	0x03213180 MOV W23, W0
	0x03213184 MOV X0, X19
	0x03213188 MOV W1, W26
	0x0321318C MOV X2, X31
	0x03213190 BL 0x3222A1C
	0x03213194 AND W1, W0, 0xFFFF
	0x03213198 MOV X0, X20
	0x0321319C MOV W2, W21
	0x032131A0 BL 0x3210B10
	0x032131A4 MOV W1, W0
	0x032131A8 MOV X0, X20
	0x032131AC MOV W2, W27
	0x032131B0 BL 0x32104D8
	0x032131B4 AND W8, W23, 0xFF
	0x032131B8 SUBS W20, W8, W0, UXTB
	0x032131BC B.NE 0x32131F4
	0x032131C0 ADD W26, W26, 0x1
	0x032131C4 CMP W26, W22
	0x032131C8 ADD W29, W29, 0x1
	0x032131CC B.GE 0x32132A8
	0x032131D0 MOV W20, W31
	0x032131D4 CMP W29, W25
	0x032131D8 MOV W27, W31
	0x032131DC STR W31, [X31 + 0x78]
	0x032131E0 B.LT 0x32130E0
	0x032131E4 B 0x32132A8
	0x032131E8 ADRP X24, 0xF0E000
	0x032131EC LDR X24, [X24 + 0xA10]
	0x032131F0 MOV W25, W11
	0x032131F4 LDR W8, [X31 + 0x7C]
	0x032131F8 CMP W8, 0x1
	0x032131FC B.NE 0x32132A4
	0x03213200 CBZ W20, 0x32132A4
	0x03213204 CMP W29, W25
	0x03213208 B.GE 0x3213254
	0x0321320C CBZ X28, 0x3213360
	0x03213210 MOV X0, X28
	0x03213214 MOV W1, W29
	0x03213218 MOV X2, X31
	0x0321321C BL 0x3222A1C
	0x03213220 LDR X8, [X24]
	0x03213224 MOV W21, W0
	0x03213228 LDR W9, [X8 + 0xE0]
	0x0321322C CBNZ W9, 0x3213238
	0x03213230 MOV X0, X8
	0x03213234 BL 0x1C16DFC
	0x03213238 AND W0, W21, 0xFFFF
	0x0321323C BL 0x320E780
	0x03213240 TBZ X0, 0x0, 0x3213254
	0x03213244 ADD W29, W29, 0x1
	0x03213248 CMP W25, W29
	0x0321324C B.NE 0x3213210
	0x03213250 MOV W29, W25
	0x03213254 CMP W26, W22
	0x03213258 B.GE 0x32132A4
	0x0321325C CBZ X19, 0x3213360
	0x03213260 MOV X0, X19
	0x03213264 MOV W1, W26
	0x03213268 MOV X2, X31
	0x0321326C BL 0x3222A1C
	0x03213270 LDR X8, [X24]
	0x03213274 MOV W21, W0
	0x03213278 LDR W9, [X8 + 0xE0]
	0x0321327C CBNZ W9, 0x3213288
	0x03213280 MOV X0, X8
	0x03213284 BL 0x1C16DFC
	0x03213288 AND W0, W21, 0xFFFF
	0x0321328C BL 0x320E780
	0x03213290 TBZ X0, 0x0, 0x32132A4
	0x03213294 ADD W26, W26, 0x1
	0x03213298 CMP W22, W26
	0x0321329C B.NE 0x3213260
	0x032132A0 MOV W26, W22
	0x032132A4 CBNZ W20, 0x3213320
	0x032132A8 LDR W8, [X31 + 0x58]
	0x032132AC TBNZ X8, 0x1F, 0x32132C0
	0x032132B0 LDR W9, [X31 + 0x70]
	0x032132B4 TBZ X9, 0x1F, 0x32132C0
	0x032132B8 MOVN W20, 0x0
	0x032132BC B 0x3213320
	0x032132C0 TBZ X8, 0x1F, 0x32132D4
	0x032132C4 LDR W9, [X31 + 0x70]
	0x032132C8 TBNZ X9, 0x1F, 0x32132D4
	0x032132CC MOVZ W20, 0x1
	0x032132D0 B 0x3213320
	0x032132D4 LDR W9, [X31 + 0x70]
	0x032132D8 SUBS W20, W9, W8
	0x032132DC B.NE 0x3213320
	0x032132E0 LDP W9, W8, [X31 + 0x4C]
	0x032132E4 SUBS W20, W9, W8
	0x032132E8 B.NE 0x3213320
	0x032132EC CMP W26, W22
	0x032132F0 B.NE 0x3213300
	0x032132F4 LDR X9, [X31 + 0x18]
	0x032132F8 MOVZ W8, 0x1
	0x032132FC STRB W8, [X9]
	0x03213300 CMP W29, W25
	0x03213304 B.NE 0x321331C
	0x03213308 LDR X9, [X31 + 0x10]
	0x0321330C MOV W20, W31
	0x03213310 MOVZ W8, 0x1
	0x03213314 STRB W8, [X9]
	0x03213318 B 0x3213320
	0x0321331C MOV W20, W31
	0x03213320 CMP W29, W25
	0x03213324 B.NE 0x3213334
	0x03213328 CMP W26, W22
	0x0321332C CSINV W0, W20, W31, EQ
	0x03213330 B 0x3213338
	0x03213334 MOVZ W0, 0x1
	0x03213338 LDP X20, X19, [X31 + 0x120]
	0x0321333C LDP X22, X21, [X31 + 0x110]
	0x03213340 LDP X24, X23, [X31 + 0x100]
	0x03213344 LDP X26, X25, [X31 + 0xF0]
	0x03213348 LDP X28, X27, [X31 + 0xE0]
	0x0321334C LDP X29, X30, [X31 + 0xD0]
	0x03213350 ADD X31, X31, 0x130
	0x03213354 RET
	0x03213358 MOVN W0, 0x0
	0x0321335C B 0x3213338
	0x03213360 BL 0x1C16F20
	0x03213364 BL 0x1C16F28
	0x03213368 MOVN W8, 0x0
	0x0321336C STR W8, [X0]
	0x03213370 STR X31, [X0 + 0x8]
	0x03213374 RET
	0x03213378 EOR W8, W1, W2, 0x0
	0x0321337C ANDS W31, W1, 0x1
	0x03213380 MOVZ W9, 0x1
	0x03213384 CSNEG W9, W9, W9, NE
	0x03213388 ANDS W31, W8, 0x1
	0x0321338C CSEL W0, W9, W31, NE
	0x03213390 RET
	0x03213394 STR X30, [X31 - 0x10]!
	0x03213398 CBZ X1, 0x32133B0
	0x0321339C LDR W4, [X1 + 0x10]
	0x032133A0 MOV W5, W3
	0x032133A4 MOV W3, W31
	0x032133A8 LDR X30, [X31], #0x10
	0x032133AC B 0x32133B4
	0x032133B0 BL 0x1C16F20
	0x032133B4 STP X29, X30, [X31 - 0x10]!
	0x032133B8 ADD X29, X31, 0x0
	0x032133BC SUB X31, X31, 0x40
	0x032133C0 MOVI V0.2D, 0x0
	0x032133C4 STP V0, V0, [X29 - 0x30]
	0x032133C8 STUR V0, [X29 - 0x40]
	0x032133CC CBZ X2, 0x321345C
	0x032133D0 LDR W8, [X2 + 0x10]
	0x032133D4 CBZ W8, 0x3213448
	0x032133D8 ADD X9, X31, 0x0
	0x032133DC SUB X8, X9, 0x10
	0x032133E0 ADD X31, X8, 0x0
	0x032133E4 ADD X11, X31, 0x0
	0x032133E8 STUR W31, [X9 - 0x10]
	0x032133EC SUB X9, X11, 0x10
	0x032133F0 ADD X31, X9, 0x0
	0x032133F4 MOV X10, X31
	0x032133F8 STUR W31, [X11 - 0x10]
	0x032133FC STRB W31, [X8, X10, LSL]
	0x03213400 ADD X10, X10, 0x1
	0x03213404 CMP X10, 0x4
	0x03213408 B.NE 0x32133FC
	0x0321340C MOV X10, X31
	0x03213410 STRB W31, [X9, X10, LSL]
	0x03213414 ADD X10, X10, 0x1
	0x03213418 CMP X10, 0x4
	0x0321341C B.NE 0x3213410
	0x03213420 STUR W5, [X29 - 0x40]
	0x03213424 STP X8, X9, [X29 - 0x28]
	0x03213428 MOVN W8, 0x0
	0x0321342C SUB X6, X29, 0x40
	0x03213430 MOVZ W5, 0x1
	0x03213434 STP X31, X31, [X29 - 0x38]
	0x03213438 STUR X31, [X29 - 0x10]
	0x0321343C STUR W8, [X29 - 0x18]
	0x03213440 BL 0x3213460
	0x03213444 B 0x321344C
	0x03213448 MOVZ W0, 0x1
	0x0321344C AND W0, W0, 0x1
	0x03213450 ADD X31, X29, 0x0
	0x03213454 LDP X29, X30, [X31], #0x10
	0x03213458 RET
	0x0321345C BL 0x1C16F20
	0x03213460 SUB X31, X31, 0x40
	0x03213464 STR X30, [X31 + 0x30]
	0x03213468 STRB W31, [X31 + 0x3C]
	0x0321346C STRB W31, [X31 + 0x38]
	0x03213470 CBZ X2, 0x32134C4
	0x03213474 LDR W9, [X2 + 0x10]
	0x03213478 MOV X8, X2
	0x0321347C STR X6, [X31 + 0x18]
	0x03213480 MOVZ W10, 0x1
	0x03213484 AND W11, W5, 0x1
	0x03213488 ADD X12, X31, 0x38
	0x0321348C ADD X7, X31, 0x3C
	0x03213490 MOV W2, W3
	0x03213494 MOV W3, W4
	0x03213498 MOV X4, X8
	0x0321349C MOV W5, W31
	0x032134A0 MOV W6, W9
	0x032134A4 STRB W10, [X31 + 0x10]
	0x032134A8 STRB W11, [X31 + 0x8]
	0x032134AC STR X12, [X31]
	0x032134B0 BL 0x3211DEC
	0x032134B4 LDRB W0, [X31 + 0x3C]
	0x032134B8 LDR X30, [X31 + 0x30]
	0x032134BC ADD X31, X31, 0x40
	0x032134C0 RET
	0x032134C4 BL 0x1C16F20
	0x032134C8 STR X30, [X31 - 0x10]!
	0x032134CC CBZ X1, 0x32134E4
	0x032134D0 LDR W4, [X1 + 0x10]
	0x032134D4 MOV W5, W3
	0x032134D8 SUB W3, W4, 0x1
	0x032134DC LDR X30, [X31], #0x10
	0x032134E0 B 0x32134E8
	0x032134E4 BL 0x1C16F20
	0x032134E8 SUB X31, X31, 0x40
	0x032134EC STR X30, [X31 + 0x10]
	0x032134F0 STP X22, X21, [X31 + 0x20]
	0x032134F4 STP X20, X19, [X31 + 0x30]
	0x032134F8 CBZ X2, 0x3213578
	0x032134FC LDR W8, [X2 + 0x10]
	0x03213500 MOV X20, X2
	0x03213504 CBZ W8, 0x3213558
	0x03213508 MOV X2, X20
	0x0321350C MOV W19, W5
	0x03213510 MOV X21, X1
	0x03213514 MOV X22, X0
	0x03213518 BL 0x321357C
	0x0321351C TBNZ X0, 0x1F, 0x3213560
	0x03213520 CBZ X21, 0x3213578
	0x03213524 LDR W8, [X21 + 0x10]
	0x03213528 LDR W6, [X20 + 0x10]
	0x0321352C MOV W2, W0
	0x03213530 MOV X1, X21
	0x03213534 SUB W3, W8, W0
	0x03213538 MOV X0, X22
	0x0321353C MOV X4, X20
	0x03213540 MOV W5, W31
	0x03213544 MOV W7, W19
	0x03213548 BL 0x3211D3C
	0x0321354C CMP W0, 0x0
	0x03213550 CSET W0, EQ
	0x03213554 B 0x3213564
	0x03213558 MOVZ W0, 0x1
	0x0321355C B 0x3213564
	0x03213560 MOV W0, W31
	0x03213564 LDP X20, X19, [X31 + 0x30]
	0x03213568 LDP X22, X21, [X31 + 0x20]
	0x0321356C LDR X30, [X31 + 0x10]
	0x03213570 ADD X31, X31, 0x40
	0x03213574 RET
	0x03213578 BL 0x1C16F20
	0x0321357C STP X29, X30, [X31 - 0x20]!
	0x03213580 STR X19, [X31 + 0x10]
	0x03213584 ADD X29, X31, 0x0
	0x03213588 SUB X31, X31, 0x40
	0x0321358C MRS X19, 0xC000
	0x03213590 LDR X8, [X19 + 0x28]
	0x03213594 MOVZ W9, 0x10000000
	0x03213598 CMP W5, W9
	0x0321359C MOVI V0.2D, 0x0
	0x032135A0 STUR X8, [X29 - 0x8]
	0x032135A4 STUR X31, [X29 - 0x10]
	0x032135A8 STP V0, V0, [X29 - 0x30]
	0x032135AC STUR V0, [X29 - 0x40]
	0x032135B0 B.EQ 0x32136B8
	0x032135B4 MOVZ W8, 0x40000000
	0x032135B8 CMP W5, W8
	0x032135BC B.EQ 0x32136B8
	0x032135C0 ADD X8, X31, 0x0
	0x032135C4 SUB X9, X8, 0x10
	0x032135C8 ADD X31, X9, 0x0
	0x032135CC STP X31, X31, [X8 - 0x10]
	0x032135D0 ADD X8, X31, 0x0
	0x032135D4 SUB X10, X8, 0x10
	0x032135D8 ADD X31, X10, 0x0
	0x032135DC ADD X11, X31, 0x0
	0x032135E0 STP X31, X31, [X8 - 0x10]
	0x032135E4 SUB X8, X11, 0x10
	0x032135E8 ADD X31, X8, 0x0
	0x032135EC ADD X12, X31, 0x0
	0x032135F0 STUR W31, [X11 - 0x10]
	0x032135F4 SUB X11, X12, 0x10
	0x032135F8 ADD X31, X11, 0x0
	0x032135FC ADD X14, X31, 0x0
	0x03213600 STUR W31, [X12 - 0x10]
	0x03213604 SUB X12, X14, 0x10
	0x03213608 ADD X31, X12, 0x0
	0x0321360C MOV X13, X31
	0x03213610 STUR W31, [X14 - 0x10]
	0x03213614 STRB W31, [X9, X13, LSL]
	0x03213618 ADD X13, X13, 0x1
	0x0321361C CMP X13, 0x10
	0x03213620 B.NE 0x3213614
	0x03213624 MOV X13, X31
	0x03213628 STRB W31, [X10, X13, LSL]
	0x0321362C ADD X13, X13, 0x1
	0x03213630 CMP X13, 0x10
	0x03213634 B.NE 0x3213628
	0x03213638 MOV X13, X31
	0x0321363C STRB W31, [X8, X13, LSL]
	0x03213640 ADD X13, X13, 0x1
	0x03213644 CMP X13, 0x4
	0x03213648 B.NE 0x321363C
	0x0321364C MOV X13, X31
	0x03213650 STRB W31, [X11, X13, LSL]
	0x03213654 ADD X13, X13, 0x1
	0x03213658 CMP X13, 0x4
	0x0321365C B.NE 0x3213650
	0x03213660 MOV X13, X31
	0x03213664 STRB W31, [X12, X13, LSL]
	0x03213668 ADD X13, X13, 0x1
	0x0321366C CMP X13, 0x4
	0x03213670 B.NE 0x3213664
	0x03213674 STUR W5, [X29 - 0x40]
	0x03213678 STP X10, X9, [X29 - 0x38]
	0x0321367C MOVN W9, 0x0
	0x03213680 SUB X6, X29, 0x40
	0x03213684 MOV X5, X8
	0x03213688 STP X11, X12, [X29 - 0x28]
	0x0321368C STUR X31, [X29 - 0x10]
	0x03213690 STUR W9, [X29 - 0x18]
	0x03213694 BL 0x32142B4
	0x03213698 LDR X8, [X19 + 0x28]
	0x0321369C LDUR X9, [X29 - 0x8]
	0x032136A0 CMP X8, X9
	0x032136A4 B.NE 0x3213700
	0x032136A8 ADD X31, X29, 0x0
	0x032136AC LDR X19, [X31 + 0x10]
	0x032136B0 LDP X29, X30, [X31], #0x20
	0x032136B4 RET
	0x032136B8 ADRP X0, 0xEE0000
	0x032136BC LDR X0, [X0 + 0xB40]
	0x032136C0 BL 0x1C16D08
	0x032136C4 BL 0x1C16F10
	0x032136C8 MOV X19, X0
	0x032136CC ADRP X0, 0xF0E000
	0x032136D0 LDR X0, [X0 + 0xC00]
	0x032136D4 BL 0x1C16D08
	0x032136D8 MOV X1, X0
	0x032136DC MOV X0, X19
	0x032136E0 MOV X2, X31
	0x032136E4 BL 0x3379A44
	0x032136E8 ADRP X0, 0xF0E000
	0x032136EC LDR X0, [X0 + 0xC08]
	0x032136F0 BL 0x1C16D08
	0x032136F4 MOV X1, X0
	0x032136F8 MOV X0, X19
	0x032136FC BL 0x1C16DEC
	0x03213700 BL 0x3EB1B20
	0x03213704 STP X30, X27, [X31 - 0x50]!
	0x03213708 STP X26, X25, [X31 + 0x10]
	0x0321370C STP X24, X23, [X31 + 0x20]
	0x03213710 STP X22, X21, [X31 + 0x30]
	0x03213714 STP X20, X19, [X31 + 0x40]
	0x03213718 MOVZ W8, 0x1
	0x0321371C STRB W8, [X5]
	0x03213720 CBZ X2, 0x3213868
	0x03213724 LDR W8, [X2 + 0x10]
	0x03213728 MOV X21, X2
	0x0321372C CBZ W8, 0x3213838
	0x03213730 CMP W8, W4
	0x03213734 B.GT 0x3213848
	0x03213738 STRB W31, [X5]
	0x0321373C LDR W8, [X21 + 0x10]
	0x03213740 ADD W9, W3, W4
	0x03213744 MOV X20, X5
	0x03213748 MOV W19, W3
	0x0321374C SUB W9, W9, W8
	0x03213750 ADD W25, W9, 0x1
	0x03213754 CMP W25, W3
	0x03213758 B.LE 0x3213848
	0x0321375C CMP W8, 0x1
	0x03213760 B.LT 0x321384C
	0x03213764 MOV X22, X1
	0x03213768 MOVN W26, 0x0
	0x0321376C MOVN W27, 0x0
	0x03213770 MOV W23, W31
	0x03213774 CMP W26, W23
	0x03213778 B.GE 0x32137A0
	0x0321377C MOV X0, X21
	0x03213780 MOV W1, W23
	0x03213784 MOV X2, X31
	0x03213788 BL 0x3222A1C
	0x0321378C SUB W8, W0, 0x1
	0x03213790 AND W8, W8, 0xFFFF
	0x03213794 CMP W8, 0x7F
	0x03213798 MOV W26, W23
	0x0321379C B.CS 0x3213840
	0x032137A0 ADD W24, W19, W23
	0x032137A4 CMP W27, W24
	0x032137A8 B.GE 0x32137D8
	0x032137AC CBZ X22, 0x3213868
	0x032137B0 MOV X0, X22
	0x032137B4 MOV W1, W24
	0x032137B8 MOV X2, X31
	0x032137BC BL 0x3222A1C
	0x032137C0 SUB W8, W0, 0x1
	0x032137C4 AND W8, W8, 0xFFFF
	0x032137C8 CMP W8, 0x7F
	0x032137CC MOV W27, W24
	0x032137D0 B.CC 0x32137DC
	0x032137D4 B 0x3213840
	0x032137D8 CBZ X22, 0x3213868
	0x032137DC MOV X0, X22
	0x032137E0 MOV W1, W24
	0x032137E4 MOV X2, X31
	0x032137E8 BL 0x3222A1C
	0x032137EC AND W24, W0, 0xFFFF
	0x032137F0 MOV X0, X21
	0x032137F4 MOV W1, W23
	0x032137F8 MOV X2, X31
	0x032137FC BL 0x3222A1C
	0x03213800 CMP W24, W0, UXTH
	0x03213804 B.NE 0x321381C
	0x03213808 LDR W8, [X21 + 0x10]
	0x0321380C ADD W23, W23, 0x1
	0x03213810 CMP W23, W8
	0x03213814 B.LT 0x3213774
	0x03213818 B 0x321384C
	0x0321381C ADD W19, W19, 0x1
	0x03213820 CMP W19, W25
	0x03213824 B.EQ 0x3213848
	0x03213828 LDR W8, [X21 + 0x10]
	0x0321382C CMP W8, 0x1
	0x03213830 B.GE 0x3213770
	0x03213834 B 0x321384C
	0x03213838 MOV W19, W31
	0x0321383C B 0x321384C
	0x03213840 MOVZ W8, 0x1
	0x03213844 STRB W8, [X20]
	0x03213848 MOVN W19, 0x0
	0x0321384C MOV W0, W19
	0x03213850 LDP X20, X19, [X31 + 0x40]
	0x03213854 LDP X22, X21, [X31 + 0x30]
	0x03213858 LDP X24, X23, [X31 + 0x20]
	0x0321385C LDP X26, X25, [X31 + 0x10]
	0x03213860 LDP X30, X27, [X31], #0x50
	0x03213864 RET
	0x03213868 BL 0x1C16F20
	0x0321386C STP X29, X30, [X31 - 0x50]!
	0x03213870 STR X25, [X31 + 0x10]
	0x03213874 STP X24, X23, [X31 + 0x20]
	0x03213878 STP X22, X21, [X31 + 0x30]
	0x0321387C STP X20, X19, [X31 + 0x40]
	0x03213880 ADD X29, X31, 0x0
	0x03213884 SUB X31, X31, 0x50
	0x03213888 MRS X25, 0xC000
	0x0321388C LDR X8, [X25 + 0x28]
	0x03213890 MOV W24, W5
	0x03213894 MOV W19, W4
	0x03213898 MOV W20, W3
	0x0321389C MOV X21, X2
	0x032138A0 MOV X22, X1
	0x032138A4 MOV X23, X0
	0x032138A8 MOVI V0.2D, 0x0
	0x032138AC STUR X8, [X29 - 0x8]
	0x032138B0 STUR X31, [X29 - 0x10]
	0x032138B4 STP V0, V0, [X29 - 0x30]
	0x032138B8 STUR V0, [X29 - 0x40]
	0x032138BC STURB W31, [X29 - 0x44]
	0x032138C0 CBZ W5, 0x3213924
	0x032138C4 MOVZ W8, 0x10000000
	0x032138C8 CMP W24, W8
	0x032138CC B.EQ 0x32138DC
	0x032138D0 MOVZ W8, 0x40000000
	0x032138D4 CMP W24, W8
	0x032138D8 B.NE 0x3213944
	0x032138DC ADRP X0, 0xEE0000
	0x032138E0 LDR X0, [X0 + 0xB40]
	0x032138E4 BL 0x1C16D08
	0x032138E8 BL 0x1C16F10
	0x032138EC MOV X19, X0
	0x032138F0 ADRP X0, 0xF0E000
	0x032138F4 LDR X0, [X0 + 0xC00]
	0x032138F8 BL 0x1C16D08
	0x032138FC MOV X1, X0
	0x03213900 MOV X0, X19
	0x03213904 MOV X2, X31
	0x03213908 BL 0x3379A44
	0x0321390C ADRP X0, 0xF0E000
	0x03213910 LDR X0, [X0 + 0xC10]
	0x03213914 BL 0x1C16D08
	0x03213918 MOV X1, X0
	0x0321391C MOV X0, X19
	0x03213920 BL 0x1C16DEC
	0x03213924 SUB X5, X29, 0x44
	0x03213928 MOV X1, X22
	0x0321392C MOV X2, X21
	0x03213930 MOV W3, W20
	0x03213934 MOV W4, W19
	0x03213938 BL 0x3213704
	0x0321393C LDURB W8, [X29 - 0x44]
	0x03213940 CBZ W8, 0x3213A2C
	0x03213944 ADD X9, X31, 0x0
	0x03213948 SUB X8, X9, 0x10
	0x0321394C ADD X31, X8, 0x0
	0x03213950 ADD X10, X31, 0x0
	0x03213954 STP X31, X31, [X9 - 0x10]
	0x03213958 SUB X9, X10, 0x10
	0x0321395C ADD X31, X9, 0x0
	0x03213960 STP X31, X31, [X10 - 0x10]
	0x03213964 ADD X10, X31, 0x0
	0x03213968 SUB X5, X10, 0x10
	0x0321396C ADD X31, X5, 0x0
	0x03213970 ADD X11, X31, 0x0
	0x03213974 STUR W31, [X10 - 0x10]
	0x03213978 SUB X10, X11, 0x10
	0x0321397C ADD X31, X10, 0x0
	0x03213980 ADD X13, X31, 0x0
	0x03213984 STUR W31, [X11 - 0x10]
	0x03213988 SUB X11, X13, 0x10
	0x0321398C ADD X31, X11, 0x0
	0x03213990 MOV X12, X31
	0x03213994 STUR W31, [X13 - 0x10]
	0x03213998 STRB W31, [X8, X12, LSL]
	0x0321399C ADD X12, X12, 0x1
	0x032139A0 CMP X12, 0x10
	0x032139A4 B.NE 0x3213998
	0x032139A8 MOV X12, X31
	0x032139AC STRB W31, [X9, X12, LSL]
	0x032139B0 ADD X12, X12, 0x1
	0x032139B4 CMP X12, 0x10
	0x032139B8 B.NE 0x32139AC
	0x032139BC MOV X12, X31
	0x032139C0 STRB W31, [X5, X12, LSL]
	0x032139C4 ADD X12, X12, 0x1
	0x032139C8 CMP X12, 0x4
	0x032139CC B.NE 0x32139C0
	0x032139D0 MOV X12, X31
	0x032139D4 STRB W31, [X10, X12, LSL]
	0x032139D8 ADD X12, X12, 0x1
	0x032139DC CMP X12, 0x4
	0x032139E0 B.NE 0x32139D4
	0x032139E4 MOV X12, X31
	0x032139E8 STRB W31, [X11, X12, LSL]
	0x032139EC ADD X12, X12, 0x1
	0x032139F0 CMP X12, 0x4
	0x032139F4 B.NE 0x32139E8
	0x032139F8 STP X9, X8, [X29 - 0x38]
	0x032139FC MOVN W8, 0x0
	0x03213A00 SUB X6, X29, 0x40
	0x03213A04 MOV X0, X23
	0x03213A08 MOV X1, X22
	0x03213A0C MOV X2, X21
	0x03213A10 MOV W3, W20
	0x03213A14 MOV W4, W19
	0x03213A18 STUR W24, [X29 - 0x40]
	0x03213A1C STP X10, X11, [X29 - 0x28]
	0x03213A20 STUR X31, [X29 - 0x10]
	0x03213A24 STUR W8, [X29 - 0x18]
	0x03213A28 BL 0x3213A5C
	0x03213A2C LDR X8, [X25 + 0x28]
	0x03213A30 LDUR X9, [X29 - 0x8]
	0x03213A34 CMP X8, X9
	0x03213A38 B.NE 0x3213A58
	0x03213A3C ADD X31, X29, 0x0
	0x03213A40 LDP X20, X19, [X31 + 0x40]
	0x03213A44 LDP X22, X21, [X31 + 0x30]
	0x03213A48 LDP X24, X23, [X31 + 0x20]
	0x03213A4C LDR X25, [X31 + 0x10]
	0x03213A50 LDP X29, X30, [X31], #0x50
	0x03213A54 RET
	0x03213A58 BL 0x3EB1B20
	0x03213A5C SUB X31, X31, 0x80
	0x03213A60 STP X29, X30, [X31 + 0x20]
	0x03213A64 STP X28, X27, [X31 + 0x30]
	0x03213A68 STP X26, X25, [X31 + 0x40]
	0x03213A6C STP X24, X23, [X31 + 0x50]
	0x03213A70 STP X22, X21, [X31 + 0x60]
	0x03213A74 STP X20, X19, [X31 + 0x70]
	0x03213A78 ADRP X22, 0x11C9000
	0x03213A7C LDRB W8, [X22 + 0x2C3]
	0x03213A80 MOV X21, X6
	0x03213A84 MOV X28, X5
	0x03213A88 MOV W25, W4
	0x03213A8C MOV W24, W3
	0x03213A90 MOV X19, X2
	0x03213A94 MOV X20, X1
	0x03213A98 MOV X23, X0
	0x03213A9C TBNZ X8, 0x0, 0x3213AC0
	0x03213AA0 ADRP X0, 0xF0E000
	0x03213AA4 LDR X0, [X0 + 0xA10]
	0x03213AA8 BL 0x1C16CF4
	0x03213AAC ADRP X0, 0xF0E000
	0x03213AB0 LDR X0, [X0 + 0xBD8]
	0x03213AB4 BL 0x1C16CF4
	0x03213AB8 MOVZ W8, 0x1
	0x03213ABC STRB W8, [X22 + 0x2C3]
	0x03213AC0 CBZ X19, 0x3213BF0
	0x03213AC4 LDR W8, [X19 + 0x10]
	0x03213AC8 LDR W22, [X21]
	0x03213ACC CMP W8, 0x1
	0x03213AD0 B.LT 0x3213B2C
	0x03213AD4 ADRP X27, 0xF0E000
	0x03213AD8 LDR X27, [X27 + 0xBD8]
	0x03213ADC MOV W29, W31
	0x03213AE0 MOV X0, X19
	0x03213AE4 MOV W1, W29
	0x03213AE8 MOV X2, X31
	0x03213AEC BL 0x3222A1C
	0x03213AF0 LDR X8, [X27]
	0x03213AF4 MOV W26, W0
	0x03213AF8 LDR W9, [X8 + 0xE0]
	0x03213AFC CBNZ W9, 0x3213B08
	0x03213B00 MOV X0, X8
	0x03213B04 BL 0x1C16DFC
	0x03213B08 AND W0, W26, 0xFFFF
	0x03213B0C MOV W1, W22
	0x03213B10 BL 0x3210F24
	0x03213B14 TBZ X0, 0x0, 0x3213B34
	0x03213B18 LDR W8, [X19 + 0x10]
	0x03213B1C ADD W29, W29, 0x1
	0x03213B20 CMP W29, W8
	0x03213B24 B.LT 0x3213AE0
	0x03213B28 B 0x3213B38
	0x03213B2C MOV W29, W31
	0x03213B30 B 0x3213B38
	0x03213B34 LDR W8, [X19 + 0x10]
	0x03213B38 SUBS W3, W8, W29
	0x03213B3C B.NE 0x3213B84
	0x03213B40 MOV X1, X19
	0x03213B44 MOV W2, W31
	0x03213B48 MOV W4, W29
	0x03213B4C BL 0x3213FDC
	0x03213B50 TBNZ X0, 0x1F, 0x3213C00
	0x03213B54 MOV X1, X20
	0x03213B58 MOV X2, X19
	0x03213B5C MOV W3, W24
	0x03213B60 MOV W4, W25
	0x03213B64 LDP X20, X19, [X31 + 0x70]
	0x03213B68 LDP X22, X21, [X31 + 0x60]
	0x03213B6C LDP X24, X23, [X31 + 0x50]
	0x03213B70 LDP X26, X25, [X31 + 0x40]
	0x03213B74 LDP X28, X27, [X31 + 0x30]
	0x03213B78 LDP X29, X30, [X31 + 0x20]
	0x03213B7C ADD X31, X31, 0x80
	0x03213B80 B 0x3213F04
	0x03213B84 MOV X0, X23
	0x03213B88 MOV X1, X19
	0x03213B8C MOV W2, W29
	0x03213B90 BL 0x3210680
	0x03213B94 STR X28, [X31 + 0x10]
	0x03213B98 CBZ X0, 0x3213C08
	0x03213B9C LDR X8, [X0 + 0x20]
	0x03213BA0 CMP X8, 0x0
	0x03213BA4 STR X8, [X31 + 0x8]
	0x03213BA8 CSEL X28, X28, X31, EQ
	0x03213BAC CSET W8, EQ
	0x03213BB0 STR W8, [X31 + 0x18]
	0x03213BB4 CBZ X28, 0x3213CF0
	0x03213BB8 LDR X8, [X0 + 0x28]
	0x03213BBC CBZ X8, 0x3213BF0
	0x03213BC0 MOV X9, X31
	0x03213BC4 LDR W10, [X8 + 0x18]
	0x03213BC8 CMP X9, W10, SXTW
	0x03213BCC B.GE 0x3213BF4
	0x03213BD0 CMP X9, X10
	0x03213BD4 B.CS 0x3213F00
	0x03213BD8 ADD X8, X8, X9
	0x03213BDC LDRB W8, [X8 + 0x20]
	0x03213BE0 STRB W8, [X28, X9, LSL]
	0x03213BE4 LDR X8, [X0 + 0x28]
	0x03213BE8 ADD X9, X9, 0x1
	0x03213BEC CBNZ X8, 0x3213BC4
	0x03213BF0 BL 0x1C16F20
	0x03213BF4 MOVN W26, 0x0
	0x03213BF8 MOVZ W22, 0x1
	0x03213BFC B 0x3213E8C
	0x03213C00 MOV W29, W24
	0x03213C04 B 0x3213E34
	0x03213C08 CBZ X28, 0x3213D04
	0x03213C0C MOV X0, X19
	0x03213C10 MOV W1, W29
	0x03213C14 MOV X2, X31
	0x03213C18 BL 0x3222A1C
	0x03213C1C MOV X0, X19
	0x03213C20 MOV W1, W29
	0x03213C24 MOV X2, X31
	0x03213C28 BL 0x3222A1C
	0x03213C2C AND W1, W0, 0xFFFF
	0x03213C30 MOV X0, X23
	0x03213C34 MOV W2, W22
	0x03213C38 BL 0x3210B10
	0x03213C3C MOV W26, W0
	0x03213C40 MOV X0, X23
	0x03213C44 MOV W1, W26
	0x03213C48 BL 0x32103B0
	0x03213C4C STRB W0, [X28]
	0x03213C50 MOV X0, X23
	0x03213C54 MOV W1, W26
	0x03213C58 BL 0x3210444
	0x03213C5C STRB W0, [X28 + 0x1]
	0x03213C60 TBNZ X22, 0x1, 0x3213C78
	0x03213C64 MOV X0, X23
	0x03213C68 MOV W1, W26
	0x03213C6C MOV W2, W31
	0x03213C70 BL 0x32104D8
	0x03213C74 STRB W0, [X28 + 0x2]
	0x03213C78 ADRP X8, 0xF0E000
	0x03213C7C LDR X8, [X8 + 0xA10]
	0x03213C80 LDR X0, [X8]
	0x03213C84 LDR W8, [X0 + 0xE0]
	0x03213C88 CBNZ W8, 0x3213C90
	0x03213C8C BL 0x1C16DFC
	0x03213C90 MOV W0, W26
	0x03213C94 BL 0x320E5C4
	0x03213C98 MOVZ W8, 0x3041
	0x03213C9C CMP W8, W26, UXTH
	0x03213CA0 STRB W0, [X28 + 0x3]
	0x03213CA4 B.HI 0x3213CFC
	0x03213CA8 ADD W8, W26, 0x9A
	0x03213CAC AND W8, W8, 0xFFFF
	0x03213CB0 CMP W8, 0x38
	0x03213CB4 B.CC 0x3213E58
	0x03213CB8 UBFM W8, W26, 0x8, 0xF
	0x03213CBC CMP W8, 0x32
	0x03213CC0 B.HI 0x3213CFC
	0x03213CC4 MOVZ W9, 0x309C
	0x03213CC8 CMP W9, W26, UXTH
	0x03213CCC B.CS 0x3213E60
	0x03213CD0 CMP W8, 0x30
	0x03213CD4 B.LS 0x3213E70
	0x03213CD8 MOVN W8, 0x32CF
	0x03213CDC ADD W8, W26, W8
	0x03213CE0 AND W8, W8, 0xFFFF
	0x03213CE4 CMP W8, 0x2F
	0x03213CE8 CSET W8, CC
	0x03213CEC B 0x3213E7C
	0x03213CF0 MOVN W26, 0x0
	0x03213CF4 MOVZ W22, 0x1
	0x03213CF8 B 0x3213D18
	0x03213CFC MOV W8, W31
	0x03213D00 B 0x3213E7C
	0x03213D04 MOVN W26, 0x0
	0x03213D08 MOVZ W22, 0x1
	0x03213D0C MOVZ W8, 0x1
	0x03213D10 STR X31, [X31 + 0x8]
	0x03213D14 STR W8, [X31 + 0x18]
	0x03213D18 LDR W8, [X31 + 0x18]
	0x03213D1C TBZ X8, 0x0, 0x3213D94
	0x03213D20 ADD W27, W24, W25
	0x03213D24 CMP W24, W27
	0x03213D28 STR W24, [X31 + 0x1C]
	0x03213D2C B.GE 0x3213DBC
	0x03213D30 ADD X2, X31, 0x1C
	0x03213D34 MOV X0, X23
	0x03213D38 MOV X1, X20
	0x03213D3C MOV W3, W27
	0x03213D40 MOV W4, W26
	0x03213D44 MOV X5, X28
	0x03213D48 MOV W6, W22
	0x03213D4C MOV X7, X21
	0x03213D50 BL 0x32140E8
	0x03213D54 MOV W29, W24
	0x03213D58 TBNZ X0, 0x0, 0x3213DB4
	0x03213D5C LDR W29, [X31 + 0x1C]
	0x03213D60 CMP W29, W27
	0x03213D64 B.GE 0x3213DBC
	0x03213D68 ADD X2, X31, 0x1C
	0x03213D6C MOV X0, X23
	0x03213D70 MOV X1, X20
	0x03213D74 MOV W3, W27
	0x03213D78 MOV W4, W26
	0x03213D7C MOV X5, X28
	0x03213D80 MOV W6, W22
	0x03213D84 MOV X7, X21
	0x03213D88 BL 0x32140E8
	0x03213D8C TBZ X0, 0x0, 0x3213D5C
	0x03213D90 B 0x3213DB4
	0x03213D94 LDP X2, X5, [X31 + 0x8]
	0x03213D98 MOV X0, X23
	0x03213D9C MOV X1, X20
	0x03213DA0 MOV W3, W24
	0x03213DA4 MOV W4, W25
	0x03213DA8 MOV X6, X21
	0x03213DAC BL 0x3213A5C
	0x03213DB0 MOV W29, W0
	0x03213DB4 TBZ X29, 0x1F, 0x3213DC4
	0x03213DB8 B 0x3213E30
	0x03213DBC MOVN W29, 0x0
	0x03213DC0 TBNZ X29, 0x1F, 0x3213E30
	0x03213DC4 SUB W8, W24, W29
	0x03213DC8 ADD W25, W8, W25
	0x03213DCC MOV X0, X23
	0x03213DD0 MOV X1, X20
	0x03213DD4 MOV X2, X19
	0x03213DD8 MOV W3, W29
	0x03213DDC MOV W4, W25
	0x03213DE0 MOV W5, W31
	0x03213DE4 MOV X6, X21
	0x03213DE8 BL 0x3213460
	0x03213DEC TBNZ X0, 0x0, 0x3213E34
	0x03213DF0 MOV X0, X23
	0x03213DF4 MOV X1, X20
	0x03213DF8 MOV W2, W29
	0x03213DFC MOV W3, W25
	0x03213E00 BL 0x3210680
	0x03213E04 CBZ X0, 0x3213E20
	0x03213E08 LDR X8, [X0 + 0x18]
	0x03213E0C CBZ X8, 0x3213BF0
	0x03213E10 LDR W8, [X8 + 0x18]
	0x03213E14 ADD W24, W29, W8
	0x03213E18 SUB W25, W25, W8
	0x03213E1C B 0x3213E28
	0x03213E20 ADD W24, W29, 0x1
	0x03213E24 SUB W25, W25, 0x1
	0x03213E28 CMP W25, 0x0
	0x03213E2C B.GT 0x3213D18
	0x03213E30 MOVN W29, 0x0
	0x03213E34 MOV W0, W29
	0x03213E38 LDP X20, X19, [X31 + 0x70]
	0x03213E3C LDP X22, X21, [X31 + 0x60]
	0x03213E40 LDP X24, X23, [X31 + 0x50]
	0x03213E44 LDP X26, X25, [X31 + 0x40]
	0x03213E48 LDP X28, X27, [X31 + 0x30]
	0x03213E4C LDP X29, X30, [X31 + 0x20]
	0x03213E50 ADD X31, X31, 0x80
	0x03213E54 RET
	0x03213E58 MOVZ W8, 0x1
	0x03213E5C B 0x3213E7C
	0x03213E60 MOVZ W8, 0x3099
	0x03213E64 CMP W8, W26, UXTH
	0x03213E68 CSET W8, HI
	0x03213E6C B 0x3213E7C
	0x03213E70 MOVZ W8, 0x30FB
	0x03213E74 CMP W8, W26, UXTH
	0x03213E78 CSET W8, NE
	0x03213E7C EOR W22, W8, 0x1
	0x03213E80 MOVZ W8, 0x1
	0x03213E84 STR X31, [X31 + 0x8]
	0x03213E88 STR W8, [X31 + 0x18]
	0x03213E8C LDR W8, [X19 + 0x10]
	0x03213E90 ADD W29, W29, 0x1
	0x03213E94 CMP W29, W8
	0x03213E98 B.GE 0x3213D18
	0x03213E9C MOV X0, X19
	0x03213EA0 MOV W1, W29
	0x03213EA4 MOV X2, X31
	0x03213EA8 BL 0x3222A1C
	0x03213EAC AND W1, W0, 0xFFFF
	0x03213EB0 MOV X0, X23
	0x03213EB4 BL 0x32103B0
	0x03213EB8 AND W8, W0, 0xFF
	0x03213EBC CMP W8, 0x1
	0x03213EC0 B.NE 0x3213D18
	0x03213EC4 LDRB W27, [X28 + 0x2]
	0x03213EC8 CBNZ W27, 0x3213ED4
	0x03213ECC MOVZ W27, 0x2
	0x03213ED0 STRB W27, [X28 + 0x2]
	0x03213ED4 MOV X0, X19
	0x03213ED8 MOV W1, W29
	0x03213EDC MOV X2, X31
	0x03213EE0 BL 0x3222A1C
	0x03213EE4 AND W1, W0, 0xFFFF
	0x03213EE8 MOV X0, X23
	0x03213EEC MOV W2, W31
	0x03213EF0 BL 0x32104D8
	0x03213EF4 ADD W8, W0, W27
	0x03213EF8 STRB W8, [X28 + 0x2]
	0x03213EFC B 0x3213E8C
	0x03213F00 BL 0x1C16F28
	0x03213F04 STR X30, [X31 - 0x40]!
	0x03213F08 STP X24, X23, [X31 + 0x10]
	0x03213F0C STP X22, X21, [X31 + 0x20]
	0x03213F10 STP X20, X19, [X31 + 0x30]
	0x03213F14 CBZ X2, 0x3213FD8
	0x03213F18 LDR W8, [X2 + 0x10]
	0x03213F1C MOV X20, X2
	0x03213F20 CBZ W8, 0x3213FBC
	0x03213F24 CMP W8, W4
	0x03213F28 B.GT 0x3213FB4
	0x03213F2C ADD W9, W3, W4
	0x03213F30 SUB W9, W9, W8
	0x03213F34 ADD W23, W9, 0x1
	0x03213F38 MOV W19, W3
	0x03213F3C CMP W23, W3
	0x03213F40 B.LE 0x3213FB4
	0x03213F44 CMP W8, 0x1
	0x03213F48 B.LT 0x3213FC0
	0x03213F4C MOV X21, X1
	0x03213F50 CBZ X21, 0x3213FD8
	0x03213F54 MOV W22, W31
	0x03213F58 ADD W1, W19, W22
	0x03213F5C MOV X0, X21
	0x03213F60 MOV X2, X31
	0x03213F64 BL 0x3222A1C
	0x03213F68 AND W24, W0, 0xFFFF
	0x03213F6C MOV X0, X20
	0x03213F70 MOV W1, W22
	0x03213F74 MOV X2, X31
	0x03213F78 BL 0x3222A1C
	0x03213F7C CMP W24, W0, UXTH
	0x03213F80 B.NE 0x3213F98
	0x03213F84 LDR W8, [X20 + 0x10]
	0x03213F88 ADD W22, W22, 0x1
	0x03213F8C CMP W22, W8
	0x03213F90 B.LT 0x3213F58
	0x03213F94 B 0x3213FC0
	0x03213F98 ADD W19, W19, 0x1
	0x03213F9C CMP W19, W23
	0x03213FA0 B.EQ 0x3213FB4
	0x03213FA4 LDR W8, [X20 + 0x10]
	0x03213FA8 CMP W8, 0x1
	0x03213FAC B.GE 0x3213F50
	0x03213FB0 B 0x3213FC0
	0x03213FB4 MOVN W19, 0x0
	0x03213FB8 B 0x3213FC0
	0x03213FBC MOV W19, W31
	0x03213FC0 MOV W0, W19
	0x03213FC4 LDP X20, X19, [X31 + 0x30]
	0x03213FC8 LDP X22, X21, [X31 + 0x20]
	0x03213FCC LDP X24, X23, [X31 + 0x10]
	0x03213FD0 LDR X30, [X31], #0x40
	0x03213FD4 RET
	0x03213FD8 BL 0x1C16F20
	0x03213FDC STR X30, [X31 - 0x30]!
	0x03213FE0 STP X22, X21, [X31 + 0x10]
	0x03213FE4 STP X20, X19, [X31 + 0x20]
	0x03213FE8 ADD W8, W4, W3
	0x03213FEC CMP W8, W3
	0x03213FF0 B.LE 0x3214030
	0x03213FF4 MOV X22, X1
	0x03213FF8 CBZ X1, 0x3214048
	0x03213FFC MOV W20, W4
	0x03214000 MOV W19, W3
	0x03214004 MOV W21, W2
	0x03214008 MOV X0, X22
	0x0321400C MOV W1, W19
	0x03214010 MOV X2, X31
	0x03214014 BL 0x3222A1C
	0x03214018 AND W8, W0, 0xFFFF
	0x0321401C CMP W8, W21, UXTH
	0x03214020 B.EQ 0x3214034
	0x03214024 SUBS W20, W20, 0x1
	0x03214028 ADD W19, W19, 0x1
	0x0321402C B.NE 0x3214008
	0x03214030 MOVN W19, 0x0
	0x03214034 MOV W0, W19
	0x03214038 LDP X20, X19, [X31 + 0x20]
	0x0321403C LDP X22, X21, [X31 + 0x10]
	0x03214040 LDR X30, [X31], #0x30
	0x03214044 RET
	0x03214048 BL 0x1C16F20
	0x0321404C SUB X31, X31, 0x60
	0x03214050 STR X30, [X31 + 0x10]
	0x03214054 STP X26, X25, [X31 + 0x20]
	0x03214058 STP X24, X23, [X31 + 0x30]
	0x0321405C STP X22, X21, [X31 + 0x40]
	0x03214060 STP X20, X19, [X31 + 0x50]
	0x03214064 ADD W24, W3, W2
	0x03214068 CMP W24, W2
	0x0321406C STR W2, [X31 + 0x1C]
	0x03214070 B.LE 0x32140C4
	0x03214074 LDR X25, [X31 + 0x60]
	0x03214078 MOV W20, W6
	0x0321407C MOV X21, X4
	0x03214080 MOV W19, W2
	0x03214084 MOV X22, X1
	0x03214088 MOV X23, X0
	0x0321408C AND W26, W7, 0x1
	0x03214090 ADD X2, X31, 0x1C
	0x03214094 MOV X0, X23
	0x03214098 MOV X1, X22
	0x0321409C MOV W3, W24
	0x032140A0 MOV W4, W20
	0x032140A4 MOV X5, X21
	0x032140A8 MOV W6, W26
	0x032140AC MOV X7, X25
	0x032140B0 BL 0x32140E8
	0x032140B4 TBNZ X0, 0x0, 0x32140C8
	0x032140B8 LDR W19, [X31 + 0x1C]
	0x032140BC CMP W19, W24
	0x032140C0 B.LT 0x3214090
	0x032140C4 MOVN W19, 0x0
	0x032140C8 MOV W0, W19
	0x032140CC LDP X20, X19, [X31 + 0x50]
	0x032140D0 LDP X22, X21, [X31 + 0x40]
	0x032140D4 LDP X24, X23, [X31 + 0x30]
	0x032140D8 LDP X26, X25, [X31 + 0x20]
	0x032140DC LDR X30, [X31 + 0x10]
	0x032140E0 ADD X31, X31, 0x60
	0x032140E4 RET
	0x032140E8 SUB X31, X31, 0x80
	0x032140EC STP X30, X31, [X31 + 0x20]
	0x032140F0 STP X28, X27, [X31 + 0x30]
	0x032140F4 STP X26, X25, [X31 + 0x40]
	0x032140F8 STP X24, X23, [X31 + 0x50]
	0x032140FC STP X22, X21, [X31 + 0x60]
	0x03214100 STP X20, X19, [X31 + 0x70]
	0x03214104 CBZ X1, 0x32142B0
	0x03214108 MOV X25, X1
	0x0321410C LDR W1, [X2]
	0x03214110 MOV X22, X2
	0x03214114 MOV X26, X0
	0x03214118 MOV X0, X25
	0x0321411C MOV X2, X31
	0x03214120 MOV X19, X7
	0x03214124 MOV W24, W6
	0x03214128 MOV X20, X5
	0x0321412C MOV W21, W4
	0x03214130 MOV W23, W3
	0x03214134 BL 0x3222A1C
	0x03214138 AND W28, W0, 0xFFFF
	0x0321413C CMP W28, 0x7F
	0x03214140 B.HI 0x321416C
	0x03214144 LDR X8, [X19 + 0x10]
	0x03214148 CBZ X8, 0x321416C
	0x0321414C MOV W9, W28
	0x03214150 UBFM X9, X9, 0x3, 0x3F
	0x03214154 LDRB W8, [X9, X8, LSL]
	0x03214158 AND W9, W28, 0x7
	0x0321415C LSRV W8, W8, W9
	0x03214160 TBZ X8, 0x0, 0x321416C
	0x03214164 MOVZ W0, 0x1
	0x03214168 B 0x3214290
	0x0321416C CMP W28, 0x7F
	0x03214170 B.HI 0x32141A8
	0x03214174 LDR X8, [X19 + 0x8]
	0x03214178 CBZ X8, 0x32141A8
	0x0321417C MOV W9, W28
	0x03214180 UBFM X9, X9, 0x3, 0x3F
	0x03214184 LDRB W8, [X8, X9, LSL]
	0x03214188 AND W9, W28, 0x7
	0x0321418C LSRV W8, W8, W9
	0x03214190 TBZ X8, 0x0, 0x32141A8
	0x03214194 LDR W8, [X22]
	0x03214198 MOV W0, W31
	0x0321419C ADD W8, W8, 0x1
	0x032141A0 STR W8, [X22]
	0x032141A4 B 0x3214290
	0x032141A8 LDR W1, [X22]
	0x032141AC MOV X0, X25
	0x032141B0 MOV X2, X31
	0x032141B4 BL 0x3222A1C
	0x032141B8 AND W1, W0, 0xFFFF
	0x032141BC MOV X0, X26
	0x032141C0 BL 0x3210BF4
	0x032141C4 MOV W27, W0
	0x032141C8 ADD X8, X31, 0x28
	0x032141CC AND W6, W24, 0x1
	0x032141D0 MOV X0, X26
	0x032141D4 MOV X1, X25
	0x032141D8 MOV X2, X22
	0x032141DC MOV W3, W23
	0x032141E0 MOV W4, W21
	0x032141E4 MOV X5, X20
	0x032141E8 MOV W7, W27
	0x032141EC STR X31, [X31 + 0x28]
	0x032141F0 STP X8, X19, [X31]
	0x032141F4 BL 0x3214B90
	0x032141F8 TBZ X0, 0x0, 0x3214244
	0x032141FC LDR X8, [X19 + 0x10]
	0x03214200 MOVZ W0, 0x1
	0x03214204 CBZ X8, 0x3214290
	0x03214208 LDR X9, [X31 + 0x28]
	0x0321420C CBNZ X9, 0x3214290
	0x03214210 MOVZ W0, 0x1
	0x03214214 CBNZ W27, 0x3214290
	0x03214218 CMP W28, 0x7F
	0x0321421C B.HI 0x3214290
	0x03214220 MOV W9, W28
	0x03214224 UBFM X9, X9, 0x3, 0x3F
	0x03214228 LDRB W10, [X8, X9, LSL]
	0x0321422C AND X11, X28, 0x7
	0x03214230 MOVZ W0, 0x1
	0x03214234 LSLV W11, W0, W11
	0x03214238 ORR W10, W10, W11, 0x0
	0x0321423C STRB W10, [X8, X9, LSL]
	0x03214240 B 0x3214290
	0x03214244 LDR X8, [X19 + 0x8]
	0x03214248 MOV W0, W31
	0x0321424C CBZ X8, 0x3214290
	0x03214250 LDR X9, [X31 + 0x28]
	0x03214254 CBNZ X9, 0x3214290
	0x03214258 MOV W0, W31
	0x0321425C CBNZ W27, 0x3214290
	0x03214260 CMP W28, 0x7F
	0x03214264 B.HI 0x3214290
	0x03214268 MOV W10, W28
	0x0321426C UBFM X10, X10, 0x3, 0x3F
	0x03214270 LDRB W11, [X8, X10, LSL]
	0x03214274 MOV W9, W28
	0x03214278 AND X9, X9, 0x7
	0x0321427C MOVZ W12, 0x1
	0x03214280 LSLV W9, W12, W9
	0x03214284 MOV W0, W31
	0x03214288 ORR W9, W11, W9, 0x0
	0x0321428C STRB W9, [X8, X10, LSL]
	0x03214290 LDP X20, X19, [X31 + 0x70]
	0x03214294 LDP X22, X21, [X31 + 0x60]
	0x03214298 LDP X24, X23, [X31 + 0x50]
	0x0321429C LDP X26, X25, [X31 + 0x40]
	0x032142A0 LDP X28, X27, [X31 + 0x30]
	0x032142A4 LDR X30, [X31 + 0x20]
	0x032142A8 ADD X31, X31, 0x80
	0x032142AC RET
	0x032142B0 BL 0x1C16F20
	0x032142B4 SUB X31, X31, 0xA0
	0x032142B8 STP X29, X30, [X31 + 0x40]
	0x032142BC STP X28, X27, [X31 + 0x50]
	0x032142C0 STP X26, X25, [X31 + 0x60]
	0x032142C4 STP X24, X23, [X31 + 0x70]
	0x032142C8 STP X22, X21, [X31 + 0x80]
	0x032142CC STP X20, X19, [X31 + 0x90]
	0x032142D0 ADRP X19, 0x11C8000
	0x032142D4 LDRB W8, [X19 + 0x2C4]
	0x032142D8 MOV X23, X6
	0x032142DC MOV X29, X5
	0x032142E0 MOV W26, W4
	0x032142E4 MOV X22, X2
	0x032142E8 MOV X20, X1
	0x032142EC MOV X25, X0
	0x032142F0 STR W3, [X31 + 0x38]
	0x032142F4 TBNZ X8, 0x0, 0x3214318
	0x032142F8 ADRP X0, 0xF0D000
	0x032142FC LDR X0, [X0 + 0xA10]
	0x03214300 BL 0x1C16CF4
	0x03214304 ADRP X0, 0xF0D000
	0x03214308 LDR X0, [X0 + 0xBD8]
	0x0321430C BL 0x1C16CF4
	0x03214310 MOVZ W8, 0x1
	0x03214314 STRB W8, [X19 + 0x2C4]
	0x03214318 CBZ X22, 0x3214444
	0x0321431C LDR W8, [X22 + 0x10]
	0x03214320 ADRP X28, 0xF0D000
	0x03214324 LDR W27, [X23]
	0x03214328 LDR X28, [X28 + 0xBD8]
	0x0321432C CMP W8, 0x1
	0x03214330 MOV W24, W31
	0x03214334 B.LT 0x3214388
	0x03214338 MOV X0, X22
	0x0321433C MOV W1, W24
	0x03214340 MOV X2, X31
	0x03214344 BL 0x3222A1C
	0x03214348 LDR X8, [X28]
	0x0321434C MOV W19, W0
	0x03214350 LDR W9, [X8 + 0xE0]
	0x03214354 CBNZ W9, 0x3214360
	0x03214358 MOV X0, X8
	0x0321435C BL 0x1C16DFC
	0x03214360 AND W0, W19, 0xFFFF
	0x03214364 MOV W1, W27

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0x11CB000
	015 Move X21, [X31+328]
	016 Move W23, [X31+312]
	017 Move W8, [X20+706]
	018 Move X28, [X31+304]
	019 Move W19, W6
	020 Move X24, X4
	021 Move W22, W3
	022 Move X25, X1
	023 Move X29, X0
	024 Move [X31+152], W5
	025 Move [X31+172], W2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {40}
	030 Move X0, 0xF10000
	031 Move X0, [X0+2576]
	032 Move X26, X7
	033 Call 0x1C17CF4
	034 Move X0, 0xF10000
	035 Move X0, [X0+3032]
	036 Call 0x1C17CF4
	037 Move X7, X26
	038 Move W8, 1
	039 Move [X20+706], W8
	040 Move W8, [X21]
	041 Move W26, [X31+152]
	042 Move [X31+64], X21
	043 Move [X7], W31
	044 Move [X31+204], W8
	045 Move W8, [X31+172]
	046 Add W20, W19, W26
	047 Move W21, W26
	048 Move [X28], W31
	049 Add W27, W22, W8
	050 Move W12, W8
	051 Move TEMP, X23
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {96}
	055 Move W8, [X31+172]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W23, W8
	058 Compare X25, 0
	059 JumpIfEqual {1470}
	060 Move W23, [X31+172]
	061 Move X21, X7
	062 Move X0, X25
	063 Move W1, W23
	064 Move X2, X31
	065 Call String.get_Chars, X0, X1
	066 And W1, W0, 0xFFFF
	067 Move X0, X29
	068 Call SimpleCollator.GetExtenderType, X0, X1
	069 Compare W0, 0
	070 JumpIfEqual {74}
	071 Subtract W22, W22, 1
	072 Add W23, W23, 1
	073 Move W23, W27
	074 Move X7, X21
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X24, 0
	077 JumpIfEqual {1470}
	078 Move X22, X7
	079 Move W21, W26
	080 Move X0, X24
	081 Move W1, W21
	082 Move X2, X31
	083 Call String.get_Chars, X0, X1
	084 And W1, W0, 0xFFFF
	085 Move X0, X29
	086 Call SimpleCollator.GetExtenderType, X0, X1
	087 Compare W0, 0
	088 JumpIfEqual {92}
	089 Subtract W19, W19, 1
	090 Add W21, W21, 1
	091 Move W21, W20
	092 Move W12, W23
	093 Move X7, X22
	094 Move W21, W26
	095 Move W12, W23
	096 Move W10, [X31+320]
	097 Move TEMP, 0
	098 Not TEMP
	099 Move W13, TEMP
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W11, TEMP
	103 Move [X31+84], W13
	104 Move [X31+88], W11
	105 Move [X31+36], W10
	106 Move W10, [X31+204]
	107 Move TEMP, 0
	108 Not TEMP
	109 Move W11, TEMP
	110 Move [X31+128], X29
	111 Move [X31+136], X31
	112 Move [X31+16], X28
	113 Move [X31+24], X7
	114 Move W10, W10
	115 ShiftRight W10, 1
	116 And W10, W10, 1
	117 Move [X31+40], X31
	118 Move X8, X31
	119 Move [X31+168], W31
	120 Move [X31+160], X31
	121 Move [X31+156], W31
	122 Move X9, X31
	123 Move [X31+144], X31
	124 Move [X31+120], W31
	125 Move [X31+76], W31
	126 Move [X31+80], W31
	127 Move [X31+48], W10
	128 Move [X31+52], W31
	129 Move W10, 5
	130 Move [X31+108], W31
	131 Move [X31+112], W11
	132 Move [X31+176], W12
	133 Move [X31+180], W21
	134 Move W23, W21
	135 Move W21, W12
	136 Move W28, [X31+204]
	137 Move W29, W21
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X19, X24
	140 Move W22, W20
	141 Move W26, W10
	142 Move X20, X9
	143 Move X14, X8
	144 Compare X25, 0
	145 JumpIfEqual {1470}
	146 Move X0, X25
	147 Move W1, W29
	148 Move X2, X31
	149 Move X21, X14
	150 Call String.get_Chars, X0, X1
	151 Move X8, 0xF10000
	152 Move X8, [X8+3032]
	153 Move W24, W0
	154 Move X8, [X8]
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 And W0, W24, 0xFFFF
	161 Move W1, W28
	162 Call SimpleCollator.IsIgnorable, X0, X1
	163 Move X14, X21
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {174}
	168 Add W21, W29, 1
	169 Move X8, X14
	170 Move X9, X20
	171 Move W10, W26
	172 Move W20, W22
	173 Move X24, X19
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X31+184], X14
	176 Move [X31+192], X20
	177 Move X21, 0xF0F000
	178 Move X21, [X21+3032]
	179 Compare X19, 0
	180 JumpIfEqual {1470}
	181 Move W20, 1
	182 Move X0, X19
	183 Move W1, W23
	184 Move X2, X31
	185 Call String.get_Chars, X0, X1
	186 Move X8, [X21]
	187 Move W24, W0
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 And W0, W24, 0xFFFF
	194 Move W1, W28
	195 Call SimpleCollator.IsIgnorable, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {226}
	200 Add W23, W23, 1
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSET not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X14, [X31+184]
	205 Move X20, [X31+192]
	206 Move W23, W22
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move W10, [X31+136]
	209 Move W13, W26
	210 Move W26, W23
	211 Move X8, X14
	212 Move X14, X20
	213 Move W20, [X31+140]
	214 Move W12, [X31+144]
	215 Move W23, [X31+148]
	216 Move X9, X31
	217 Move [X31+180], W10
	218 Move W10, W13
	219 Move W11, W27
	220 Move X24, X14
	221 Move W21, W29
	222 Move X28, X25
	223 Move [X31+152], W12
	224 Compare X14, 0
	225 JumpIfNotEqual {136}
	226 Move X14, [X31+184]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move TEMP, X20
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {282}
	232 Move W8, [X31+176]
	233 Move [X31+124], W26
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W8, [X31+180]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Compare X25, 0
	239 JumpIfEqual {1470}
	240 Move W28, W26
	241 Move W20, W31
	242 Add W21, W29, W20
	243 Move X0, X25
	244 Move W1, W21
	245 Move X2, X31
	246 Add W24, W23, W20
	247 Move X26, X25
	248 Call String.get_Chars, X0, X1
	249 And W25, W0, 0xFFFF
	250 Move X0, X19
	251 Move W1, W24
	252 Move X2, X31
	253 Call String.get_Chars, X0, X1
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add W8, W24, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add W20, W20, 1
	258 Move X25, X26
	259 Add W8, W21, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add W21, W29, W20
	262 Add W23, W23, W20
	263 Move X20, [X31+192]
	264 Move W11, W27
	265 Move W13, [X31+156]
	266 Move W27, [X31+160]
	267 Move W12, [X31+164]
	268 Move W21, [X31+168]
	269 Move X28, X25
	270 Move X8, X31
	271 Move X9, X20
	272 Move W10, W26
	273 Move W20, W22
	274 Move [X31+172], W12
	275 Move [X31+176], W13
	276 Move X24, X19
	277 Move X25, X14
	278 Move W13, W26
	279 Move W26, W23
	280 Compare X14, 0
	281 JumpIfNotEqual {136}
	282 Move X20, [X31+192]
	283 Move W8, [X31+180]
	284 Move X20, [X31+128]
	285 Move W21, W29
	286 Move X11, [X31+192]
	287 Move W21, W29
	288 Move W23, W24
	289 Move X25, X26
	290 Move X14, [X31+184]
	291 Move X11, [X31+192]
	292 Move W26, W28
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X8, X14
	295 Move X9, X11
	296 Move W10, W26
	297 Move W20, W22
	298 Move X24, X19
	299 Move X13, X11
	300 Move W11, W27
	301 Move W12, W26
	302 Move X26, X25
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, X14
	305 Move X9, X13
	306 Move W10, W12
	307 Move W20, W22
	308 Move X24, X19
	309 Move X20, [X31+128]
	310 Move W29, [X31+176]
	311 Move W28, [X31+180]
	312 Subtract W8, W21, 1
	313 Move W27, W11
	314 Move X25, X26
	315 Move W24, W8
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Compare X25, 0
	318 JumpIfEqual {1470}
	319 Move X0, X25
	320 Move W1, W24
	321 Move X2, X31
	322 Call String.get_Chars, X0, X1
	323 And W1, W0, 0xFFFF
	324 Move X0, X20
	325 Call SimpleCollator.Category, X0, X1
	326 And W8, W0, 255
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract W8, W24, 1
	329 Subtract W8, W23, 1
	330 Move W25, W8
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X19
	333 Move W1, W25
	334 Move X2, X31
	335 Call String.get_Chars, X0, X1
	336 And W1, W0, 0xFFFF
	337 Move X0, X20
	338 Call SimpleCollator.Category, X0, X1
	339 And W8, W0, 255
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract W8, W25, 1
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Compare X26, 0
	344 JumpIfEqual {1470}
	345 Move W28, [X31+204]
	346 Move X0, X26
	347 Move W1, W24
	348 Move X2, X31
	349 Call String.get_Chars, X0, X1
	350 And W1, W0, 0xFFFF
	351 Move X0, X20
	352 Call SimpleCollator.IsSafe, X0, X1
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfEqual {361}
	357 Subtract W24, W24, 1
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move W24, W29
	360 Move W28, [X31+204]
	361 Move W8, [X31+180]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X0, X19
	364 Move W1, W25
	365 Move X2, X31
	366 Call String.get_Chars, X0, X1
	367 And W1, W0, 0xFFFF
	368 Move X0, X20
	369 Call SimpleCollator.IsSafe, X0, X1
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {380}
	374 Move W8, [X31+180]
	375 Subtract W25, W25, 1
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move W8, W23
	378 Move W23, [X31+180]
	379 Move [X31+176], W21
	380 Move W8, W23
	381 Move [X31+176], W21
	382 Move W23, W25
	383 Move W21, W24
	384 Move X25, X26
	385 Move [X31+116], W8
	386 Compare X25, 0
	387 JumpIfEqual {1470}
	388 Move X0, X25
	389 Move W1, W21
	390 Move X2, X31
	391 Call String.get_Chars, X0, X1
	392 And W1, W0, 0xFFFF
	393 Move X0, X20
	394 Move W2, W28
	395 Call SimpleCollator.FilterOptions, X0, X1, X2
	396 Move W24, W0
	397 Move X0, X19
	398 Move W1, W23
	399 Move X2, X31
	400 Call String.get_Chars, X0, X1
	401 And W1, W0, 0xFFFF
	402 Move X0, X20
	403 Move W2, W28
	404 Call SimpleCollator.FilterOptions, X0, X1, X2
	405 Move W29, W0
	406 Move X0, X20
	407 Move W1, W24
	408 Move [X31+180], W24
	409 Call SimpleCollator.GetExtenderType, X0, X1
	410 Move [X31+120], W0
	411 Compare W0, 0
	412 JumpIfEqual {425}
	413 Move X8, [X31+64]
	414 Move W1, [X8+40]
	415 Move TEMP, X1
	416 And TEMP, TEMP, -2147483648
	417 Compare TEMP, -2147483648
	418 JumpIfEqual {501}
	419 Move W24, W0
	420 Move X0, X20
	421 Move W2, W24
	422 Move W3, W28
	423 Call SimpleCollator.FilterExtender, X0, X1, X2, X3
	424 Move [X31+180], W0
	425 Move X26, X31
	426 Move X0, X20
	427 Move W1, W29
	428 Call SimpleCollator.GetExtenderType, X0, X1
	429 Move [X31+108], W0
	430 Compare W0, 0
	431 JumpIfEqual {442}
	432 Move W1, [X31+84]
	433 Move TEMP, X1
	434 And TEMP, TEMP, -2147483648
	435 Compare TEMP, -2147483648
	436 JumpIfEqual {505}
	437 Move W2, [X31+108]
	438 Move X0, X20
	439 Move W3, W28
	440 Call SimpleCollator.FilterExtender, X0, X1, X2, X3
	441 Move W29, W0
	442 Move [X31+56], X31
	443 Move [X31+96], X25
	444 Move X25, [X31+128]
	445 Move W1, [X31+180]
	446 Move [X31+92], W27
	447 Move X0, X25
	448 Call SimpleCollator.Category, X0, X1
	449 Move W24, W0
	450 And W20, W0, 255
	451 Move X0, X25
	452 Move W1, W29
	453 Move [X31+72], W29
	454 Call SimpleCollator.Category, X0, X1
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move W27, W0
	457 Move TEMP, X28
	458 And TEMP, TEMP, 0x20000000
	459 Compare TEMP, 0x20000000
	460 JumpIfEqual {520}
	461 Move W8, [X31+124]
	462 Move X14, [X31+184]
	463 Move X20, [X31+192]
	464 Move W29, [X31+180]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move W9, [X31+164]
	467 Move W8, [X31+168]
	468 Move X0, [X31+128]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move W1, W29
	471 Subtract W8, W8, W9
	472 Move W9, [X31+172]
	473 Subtract W9, W21, W9
	474 NotImplemented "Instruction CSEL not yet implemented."
	475 Move [X31+112], W8
	476 Call SimpleCollator.Level1, X0, X1
	477 Move X8, 0xF0F000
	478 Move X8, [X8+2576]
	479 Move W25, W0
	480 Move X8, [X8]
	481 Move W9, [X8+224]
	482 Compare W9, 0
	483 JumpIfNotEqual {486}
	484 Move X0, X8
	485 Call 0x1C17DFC
	486 Move W0, W29
	487 Call MSCompatUnicodeTable.Level3, X0
	488 Move X14, [X31+184]
	489 And W8, W25, 255
	490 Add W9, W0, 8
	491 NotImplemented "Instruction LSLV not yet implemented."
	492 Move [X31+76], W8
	493 And W8, W27, 255
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X20, 0xF0F000
	496 Move W26, [X31+112]
	497 Move W15, [X31+116]
	498 Move W29, [X31+76]
	499 Move X20, [X20+2576]
	500 Move X14, [X31+184]
	501 Move X26, [X8+48]
	502 Compare X26, 0
	503 JumpIfNotEqual {426}
	504 Add W21, W21, 1
	505 Move X8, [X31+40]
	506 Move [X31+56], X8
	507 Compare X8, 0
	508 JumpIfNotEqual {443}
	509 Move [X31+40], X31
	510 Add W23, W23, 1
	511 Move W10, [X31+116]
	512 Move X8, [X31+184]
	513 Move X9, [X31+192]
	514 Move [X31+180], W10
	515 Move W10, [X31+124]
	516 Move X14, [X31+184]
	517 Move W15, [X31+116]
	518 Move W29, [X31+180]
	519 Move W25, W21
	520 Move X14, [X31+184]
	521 Move X20, [X31+192]
	522 Move W29, [X31+180]
	523 Move X8, [X31+64]
	524 Move W15, [X31+116]
	525 Add W25, W21, 1
	526 Move [X8+40], W29
	527 And W8, W27, 255
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move X20, 0xF0F000
	530 Move W26, [X31+112]
	531 Move W29, [X31+76]
	532 Move X20, [X20+2576]
	533 Move W21, W25
	534 Move W27, [X31+92]
	535 Move X25, [X31+96]
	536 Move TEMP, X28
	537 And TEMP, TEMP, 0x20000000
	538 Compare TEMP, 0x20000000
	539 JumpIfEqual {711}
	540 Move W8, [X31+124]
	541 Move W28, [X31+72]
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move W9, [X31+144]
	544 Move W8, [X31+148]
	545 Move X10, [X31+192]
	546 Move X0, [X31+128]
	547 Move W1, W28
	548 Subtract W8, W8, W9
	549 Move W9, [X31+152]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Subtract W9, W23, W9
	552 NotImplemented "Instruction CSEL not yet implemented."
	553 Move [X31+88], W8
	554 Call SimpleCollator.Level1, X0, X1
	555 Move X8, [X20]
	556 Move W24, W0
	557 Move W9, [X8+224]
	558 Compare W9, 0
	559 JumpIfNotEqual {562}
	560 Move X0, X8
	561 Call 0x1C17DFC
	562 Move W0, W28
	563 Call MSCompatUnicodeTable.Level3, X0
	564 Move X14, [X31+184]
	565 Move W15, [X31+116]
	566 And W8, W24, 255
	567 Add W9, W0, 8
	568 NotImplemented "Instruction LSLV not yet implemented."
	569 Move [X31+80], W8
	570 And W8, W24, 255
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move W21, W25
	573 Move W26, [X31+112]
	574 Move W29, [X31+76]
	575 Move W11, [X31+80]
	576 Move W8, [X31+84]
	577 Move W0, [X31+88]
	578 Move W27, [X31+92]
	579 Move X25, [X31+96]
	580 Move [X31+72], W8
	581 Move W8, [X31+120]
	582 Compare W8, 0
	583 JumpIfEqual {587}
	584 Compare X26, 0
	585 JumpIfEqual {892}
	586 Move W21, [X31+152]
	587 Move X0, [X31+128]
	588 Move X1, [X31+96]
	589 Move W3, [X31+92]
	590 Move W2, W25
	591 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	592 Compare X26, 0
	593 JumpIfEqual {867}
	594 Move W21, [X31+152]
	595 Move X14, [X31+184]
	596 Move W15, [X31+116]
	597 Move [X31+12], W31
	598 Move W20, 1
	599 Move W8, [X31+108]
	600 Compare W8, 0
	601 JumpIfEqual {652}
	602 Move X8, [X31+56]
	603 Compare X8, 0
	604 JumpIfNotEqual {662}
	605 Move X8, [X31+64]
	606 Move X0, [X31+128]
	607 Move W1, [X31+72]
	608 Move X21, [X8+32]
	609 Move [X21], W27
	610 Call SimpleCollator.Level1, X0, X1
	611 Move W8, [X31+124]
	612 Move W9, [X31+48]
	613 Move [X31+56], X21
	614 Move [X21+1], W0
	615 NotImplemented "Instruction CMP not yet implemented."
	616 NotImplemented "Instruction CSET not yet implemented."
	617 Or W8, W8, W9
	618 Move TEMP, X8
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfEqual {628}
	622 Move X0, [X31+128]
	623 Move W1, [X31+72]
	624 Move W2, [X31+108]
	625 Call SimpleCollator.Level2, X0, X1, X2
	626 Move X8, [X31+56]
	627 Move [X8+2], W0
	628 Move W8, [X31+124]
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move X8, 0xF0F000
	631 Move X8, [X8+2576]
	632 Move X0, [X8]
	633 Move W8, [X0+224]
	634 Compare W8, 0
	635 JumpIfNotEqual {637}
	636 Call 0x1C17DFC
	637 Move W0, [X31+72]
	638 Call MSCompatUnicodeTable.Level3, X0
	639 Move W8, [X31+124]
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move X8, [X31+56]
	642 Move [X8+3], W0
	643 Move X14, [X31+184]
	644 Move W15, [X31+116]
	645 Move W12, W31
	646 And W8, W27, 255
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Move W8, [X31+84]
	649 Move W9, [X31+72]
	650 NotImplemented "Instruction CSEL not yet implemented."
	651 Move [X31+84], W8
	652 Move X0, [X31+128]
	653 Move X1, X19
	654 Move W2, W23
	655 Move W3, W22
	656 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	657 Move W15, [X31+116]
	658 Move X14, [X31+184]
	659 Move X8, [X31+56]
	660 Compare X8, 0
	661 JumpIfEqual {936}
	662 Move W12, W31
	663 Move W27, [X31+92]
	664 Add W23, W23, 1
	665 Add W21, W20, W25
	666 Move TEMP, X28
	667 And TEMP, TEMP, 2
	668 Compare TEMP, 2
	669 JumpIfEqual {708}
	670 Move X25, [X31+96]
	671 Move X20, [X31+192]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move [X31+8], W12
	674 Move X24, [X31+128]
	675 Move X0, X25
	676 Move W1, W21
	677 Move X2, X31
	678 Call String.get_Chars, X0, X1
	679 And W1, W0, 0xFFFF
	680 Move X0, X24
	681 Call SimpleCollator.Category, X0, X1
	682 And W8, W0, 255
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move W20, [X26+2]
	685 Compare W20, 0
	686 JumpIfNotEqual {689}
	687 Move W20, 2
	688 Move [X26+2], W20
	689 Move X0, X25
	690 Move W1, W21
	691 Move X2, X31
	692 Call String.get_Chars, X0, X1
	693 Move X24, [X31+128]
	694 And W1, W0, 0xFFFF
	695 Move W2, W31
	696 Move X0, X24
	697 Call SimpleCollator.Level2, X0, X1, X2
	698 Add W8, W0, W20
	699 Move X20, [X31+192]
	700 Add W21, W21, 1
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Move [X26+2], W8
	703 Move W21, W27
	704 Move X14, [X31+184]
	705 Move W15, [X31+116]
	706 Move X28, [X31+56]
	707 Move W12, [X31+8]
	708 Move X25, [X31+96]
	709 Move X20, [X31+192]
	710 Move X28, [X31+56]
	711 Move W28, [X31+72]
	712 Move W0, [X31+88]
	713 Move W11, [X31+80]
	714 Move X20, [X31+192]
	715 Add W23, W23, 1
	716 Move [X31+88], W0
	717 Move [X31+80], W11
	718 Move [X31+84], W28
	719 Move [X31+76], W29
	720 Move [X31+112], W26
	721 Move W10, [X31+124]
	722 Move X8, X14
	723 Move X9, X20
	724 Move X13, X20
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Move W20, W22
	727 Move X24, X19
	728 Move [X31+180], W15
	729 Move W8, [X31+72]
	730 Move W27, [X31+92]
	731 Move X25, [X31+96]
	732 Move TEMP, 0
	733 Not TEMP
	734 Move W9, TEMP
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move [X31+84], W8
	737 Move [X31+88], W9
	738 Move X8, X14
	739 Move X9, X13
	740 Move TEMP, 0
	741 Not TEMP
	742 Move W12, TEMP
	743 Move W20, W22
	744 Move X24, X19
	745 Move [X31+76], W31
	746 Move [X31+80], W31
	747 Move [X31+180], W15
	748 Move [X31+112], W12
	749 Move W8, [X31+72]
	750 Move W27, [X31+92]
	751 Move X25, [X31+96]
	752 Move W10, 4
	753 Move [X31+80], W11
	754 Move [X31+84], W8
	755 Move X8, X14
	756 Move X9, X13
	757 Move [X31+180], W15
	758 Move [X31+76], W29
	759 Move [X31+88], W0
	760 Move [X31+112], W26
	761 Move W20, W22
	762 Move X24, X19
	763 Move X28, [X31+56]
	764 NotImplemented "Instruction CMP not yet implemented."
	765 Move X24, [X31+128]
	766 Move X0, X19
	767 Move W1, W23
	768 Move X2, X31
	769 Call String.get_Chars, X0, X1
	770 And W1, W0, 0xFFFF
	771 Move X0, X24
	772 Call SimpleCollator.Category, X0, X1
	773 And W8, W0, 255
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move W20, [X28+2]
	776 Compare W20, 0
	777 JumpIfNotEqual {780}
	778 Move W20, 2
	779 Move [X28+2], W20
	780 Move X0, X19
	781 Move W1, W23
	782 Move X2, X31
	783 Call String.get_Chars, X0, X1
	784 Move X24, [X31+128]
	785 And W1, W0, 0xFFFF
	786 Move W2, W31
	787 Move X0, X24
	788 Call SimpleCollator.Level2, X0, X1, X2
	789 Add W8, W0, W20
	790 Move X20, [X31+192]
	791 Add W23, W23, 1
	792 NotImplemented "Instruction CMP not yet implemented."
	793 Move [X28+2], W8
	794 Move W23, W22
	795 Move X14, [X31+184]
	796 Move W15, [X31+116]
	797 Move W12, [X31+8]
	798 Move W8, [X26]
	799 Move W9, [X28]
	800 Subtract W0, W8, W9
	801 Move W8, [X26+1]
	802 Move W9, [X28+1]
	803 Subtract W0, W8, W9
	804 Compare W0, 0
	805 JumpIfNotEqual {1453}
	806 Move W28, [X31+124]
	807 Move W10, 1
	808 Move X8, X14
	809 Move X9, X20
	810 NotImplemented "Instruction CMP not yet implemented."
	811 Move W20, W22
	812 Move X24, X19
	813 Move [X31+180], W15
	814 Move W8, [X31+204]
	815 Move TEMP, X8
	816 And TEMP, TEMP, 2
	817 Compare TEMP, 2
	818 JumpIfEqual {839}
	819 Move X9, [X31+56]
	820 Move W8, [X26+2]
	821 Move W9, [X9+2]
	822 Subtract W11, W8, W9
	823 Move W27, [X31+92]
	824 Move X25, [X31+96]
	825 Move W8, [X31+36]
	826 Move X9, [X31+192]
	827 Move TEMP, X8
	828 And TEMP, TEMP, 1
	829 Compare TEMP, 1
	830 JumpIfEqual {1467}
	831 Move X8, [X31+128]
	832 Move [X31+180], W15
	833 Move [X31+52], W11
	834 Move W8, [X8+92]
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Move W8, 1
	837 NotImplemented "Instruction CINC not yet implemented."
	838 Move X8, X14
	839 Move X9, [X31+192]
	840 Move W27, [X31+92]
	841 Move X25, [X31+96]
	842 Move W8, W28
	843 NotImplemented "Instruction CMP not yet implemented."
	844 Move W10, 2
	845 Move X8, X14
	846 Move W20, W22
	847 Move X24, X19
	848 Move [X31+180], W15
	849 Move X9, [X31+56]
	850 Move W8, [X26+3]
	851 Move W9, [X9+3]
	852 Subtract W11, W8, W9
	853 Move X9, [X31+192]
	854 Move W27, [X31+92]
	855 Move X25, [X31+96]
	856 Move W10, 2
	857 Move X8, X14
	858 Move [X31+180], W15
	859 Move [X31+52], W11
	860 Move W20, W22
	861 Move X24, X19
	862 Move W11, [X31+36]
	863 Move TEMP, X11
	864 And TEMP, TEMP, 1
	865 Compare TEMP, 1
	866 JumpIfNotEqual {136}
	867 Move X14, [X31+184]
	868 Move W15, [X31+116]
	869 Compare X0, 0
	870 JumpIfEqual {892}
	871 Move X9, [X0+24]
	872 Compare X9, 0
	873 JumpIfEqual {1470}
	874 Move X8, [X0+40]
	875 Move W20, [X9+24]
	876 Compare X8, 0
	877 JumpIfEqual {1061}
	878 Move X9, [X31+64]
	879 Move W21, [X31+152]
	880 Move X26, [X9+24]
	881 Move X9, X31
	882 Move W10, [X8+24]
	883 NotImplemented "Instruction CMP not yet implemented."
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Add X8, X8, X9
	886 Move W8, [X8+32]
	887 Move [X26], W8
	888 Move X8, [X0+40]
	889 Add X9, X9, 1
	890 Compare X8, 0
	891 JumpIfNotEqual {882}
	892 Move X8, [X31+64]
	893 Move X0, [X31+128]
	894 Move W1, W29
	895 Move X26, [X8+24]
	896 Move [X26], W24
	897 Call SimpleCollator.Level1, X0, X1
	898 Move W8, [X31+124]
	899 Move W9, [X31+48]
	900 Move [X26+1], W0
	901 NotImplemented "Instruction CMP not yet implemented."
	902 NotImplemented "Instruction CSET not yet implemented."
	903 Or W8, W8, W9
	904 Move TEMP, X8
	905 And TEMP, TEMP, 1
	906 Compare TEMP, 1
	907 JumpIfEqual {913}
	908 Move X0, [X31+128]
	909 Move W2, [X31+120]
	910 Move W1, W29
	911 Call SimpleCollator.Level2, X0, X1, X2
	912 Move [X26+2], W0
	913 Move W8, [X31+124]
	914 NotImplemented "Instruction CMP not yet implemented."
	915 Move W21, [X31+152]
	916 Move X8, 0xF0F000
	917 Move X8, [X8+2576]
	918 Move X0, [X8]
	919 Move W8, [X0+224]
	920 Compare W8, 0
	921 JumpIfNotEqual {923}
	922 Call 0x1C17DFC
	923 Move W0, W29
	924 Call MSCompatUnicodeTable.Level3, X0
	925 Move W8, [X31+124]
	926 Move W21, [X31+152]
	927 Move [X26+3], W0
	928 NotImplemented "Instruction CMP not yet implemented."
	929 Move [X31+12], W31
	930 Move X14, [X31+184]
	931 Move W15, [X31+116]
	932 And W8, W24, 255
	933 NotImplemented "Instruction CMP not yet implemented."
	934 Move X8, [X31+64]
	935 Move [X8+40], W29
	936 Compare X0, 0
	937 JumpIfEqual {605}
	938 Move X8, [X0+24]
	939 Compare X8, 0
	940 JumpIfEqual {1470}
	941 Move W9, [X8+24]
	942 Move X8, [X0+40]
	943 Move W27, [X31+92]
	944 Add W23, W23, W9
	945 Compare X8, 0
	946 JumpIfEqual {1066}
	947 Move X9, [X31+64]
	948 Move X29, [X9+32]
	949 Move X9, X31
	950 Move W10, [X8+24]
	951 NotImplemented "Instruction CMP not yet implemented."
	952 NotImplemented "Instruction CMP not yet implemented."
	953 Add X8, X8, X9
	954 Move W8, [X8+32]
	955 Move [X29], W8
	956 Move X8, [X0+40]
	957 Add X9, X9, 1
	958 Compare X8, 0
	959 JumpIfNotEqual {950}
	960 Move X8, 0xF0F000
	961 Move X8, [X8+2576]
	962 Move X0, [X8]
	963 Move W8, [X0+224]
	964 Compare W8, 0
	965 JumpIfNotEqual {967}
	966 Call 0x1C17DFC
	967 Move X14, [X31+184]
	968 Move W15, [X31+116]
	969 Move W8, 0x3041
	970 NotImplemented "Instruction CMP not yet implemented."
	971 Add W8, W29, 154
	972 And W8, W8, 0xFFFF
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move W8, W29
	975 ShiftRight W8, 8
	976 And W8, W8, 0x7FFF
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move W9, 0x309C
	979 NotImplemented "Instruction CMP not yet implemented."
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Move TEMP, 0x32CF
	982 Not TEMP
	983 Move W8, TEMP
	984 Add W8, W29, W8
	985 And W8, W8, 0xFFFF
	986 NotImplemented "Instruction CMP not yet implemented."
	987 NotImplemented "Instruction CSET not yet implemented."
	988 Move X8, 0xF0F000
	989 Move X8, [X8+2576]
	990 Move X0, [X8]
	991 Move W8, [X0+224]
	992 Compare W8, 0
	993 JumpIfNotEqual {995}
	994 Call 0x1C17DFC
	995 Move W10, [X31+72]
	996 Move X14, [X31+184]
	997 Move W15, [X31+116]
	998 Move W8, 0x3041
	999 NotImplemented "Instruction CMP not yet implemented."
	1000 Add W8, W10, 154
	1001 And W8, W8, 0xFFFF
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Move W8, W10
	1004 ShiftRight W8, 8
	1005 And W8, W8, 0x7FFF
	1006 NotImplemented "Instruction CMP not yet implemented."
	1007 Move W9, 0x309C
	1008 NotImplemented "Instruction CMP not yet implemented."
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 Move W9, [X31+72]
	1011 Move TEMP, 0x32CF
	1012 Not TEMP
	1013 Move W8, TEMP
	1014 Add W8, W9, W8
	1015 And W8, W8, 0xFFFF
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 NotImplemented "Instruction CSET not yet implemented."
	1018 Move X9, [X31+192]
	1019 Move W27, [X31+92]
	1020 Move X25, [X31+96]
	1021 Move W8, W28
	1022 NotImplemented "Instruction CMP not yet implemented."
	1023 Move W10, 3
	1024 Move X8, X14
	1025 Move W20, W22
	1026 Move X24, X19
	1027 Move [X31+180], W15
	1028 Move W11, [X31+12]
	1029 NotImplemented "Instruction CMP not yet implemented."
	1030 Move W27, [X31+92]
	1031 Move X25, [X31+96]
	1032 Move W8, [X31+36]
	1033 Move X9, [X31+192]
	1034 Move TEMP, X8
	1035 And TEMP, TEMP, 1
	1036 Compare TEMP, 1
	1037 JumpIfEqual {1467}
	1038 NotImplemented "Instruction CMP not yet implemented."
	1039 Move W8, 1
	1040 NotImplemented "Instruction CSNEG not yet implemented."
	1041 Move [X31+52], W8
	1042 Move W10, 3
	1043 Move X8, X14
	1044 Move [X31+180], W15
	1045 Move X8, [X31+64]
	1046 Move TEMP, 0
	1047 Not TEMP
	1048 Move W9, TEMP
	1049 Move [X31+12], W31
	1050 Move [X8+40], W9
	1051 Move [X8+48], X26
	1052 Move [X31+40], X29
	1053 Move [X31+56], X29
	1054 Move W29, [X31+180]
	1055 Move TEMP, 0
	1056 Not TEMP
	1057 Move W8, TEMP
	1058 Move W12, W31
	1059 Move [X31+84], W8
	1060 Move [X31+12], W31
	1061 Compare X14, 0
	1062 JumpIfEqual {1212}
	1063 Move W21, [X31+152]
	1064 Move [X31+12], W31
	1065 Move X26, X31
	1066 Move X8, [X31+192]
	1067 Compare X8, 0
	1068 JumpIfEqual {1234}
	1069 Move W12, W31
	1070 Move [X31+56], X31
	1071 Move W8, 1
	1072 Move W12, 1
	1073 Move X9, [X31+192]
	1074 Move W27, [X31+92]
	1075 Move X25, [X31+96]
	1076 Move X8, X14
	1077 Move W10, W28
	1078 Move W20, W22
	1079 Move X24, X19
	1080 Move [X31+180], W15
	1081 Compare W11, 0
	1082 JumpIfEqual {136}
	1083 Move X20, 0xF0F000
	1084 Move X20, [X20+2576]
	1085 Move X0, [X20]
	1086 Move W8, [X0+224]
	1087 Compare W8, 0
	1088 JumpIfNotEqual {1090}
	1089 Call 0x1C17DFC
	1090 Move W0, W29
	1091 Call MSCompatUnicodeTable.IsJapaneseSmallLetter, X0
	1092 Move W24, W0
	1093 Move W0, [X31+72]
	1094 Call MSCompatUnicodeTable.IsJapaneseSmallLetter, X0
	1095 Xor W8, W24, W0
	1096 And W31, W24, 1
	1097 Move X24, 0xF0F000
	1098 Move W27, [X31+92]
	1099 Move X25, [X31+96]
	1100 Move X24, [X24+3032]
	1101 Move X13, [X31+184]
	1102 Move W14, [X31+116]
	1103 Move TEMP, 0
	1104 Not TEMP
	1105 Move W9, TEMP
	1106 NotImplemented "Instruction CSNEG not yet implemented."
	1107 And W31, W8, 1
	1108 NotImplemented "Instruction CSEL not yet implemented."
	1109 Compare W11, 0
	1110 JumpIfNotEqual {1144}
	1111 Move X0, [X24]
	1112 Move W8, [X0+224]
	1113 Compare W8, 0
	1114 JumpIfNotEqual {1118}
	1115 Call 0x1C17DFC
	1116 Move W14, [X31+116]
	1117 Move X13, [X31+184]
	1118 Move W11, [X31+108]
	1119 Move W12, [X31+120]
	1120 Move W10, [X31+48]
	1121 NotImplemented "Instruction CMP not yet implemented."
	1122 NotImplemented "Instruction CSET not yet implemented."
	1123 NotImplemented "Instruction CMP not yet implemented."
	1124 NotImplemented "Instruction CSET not yet implemented."
	1125 Or W8, W10, W8
	1126 NotImplemented "Instruction CMP not yet implemented."
	1127 Or W9, W10, W9
	1128 Move W10, 4
	1129 NotImplemented "Instruction CINC not yet implemented."
	1130 NotImplemented "Instruction CMP not yet implemented."
	1131 Move W9, 3
	1132 NotImplemented "Instruction CSEL not yet implemented."
	1133 NotImplemented "Instruction CMP not yet implemented."
	1134 Move TEMP, 4
	1135 Not TEMP
	1136 Move W10, TEMP
	1137 NotImplemented "Instruction CINC not yet implemented."
	1138 NotImplemented "Instruction CMP not yet implemented."
	1139 Move TEMP, 2
	1140 Not TEMP
	1141 Move W8, TEMP
	1142 NotImplemented "Instruction CSEL not yet implemented."
	1143 Add W11, W8, W9
	1144 Compare W11, 0
	1145 JumpIfNotEqual {1205}
	1146 Move X0, [X20]
	1147 Move W8, [X0+224]
	1148 Compare W8, 0
	1149 JumpIfNotEqual {1153}
	1150 Call 0x1C17DFC
	1151 Move W14, [X31+116]
	1152 Move X13, [X31+184]
	1153 Move W10, [X31+72]
	1154 Move TEMP, 0x3040
	1155 Not TEMP
	1156 Move W9, TEMP
	1157 Add W8, W29, W9
	1158 And W8, W8, 0xFFFF
	1159 Add W9, W10, W9
	1160 And W9, W9, 0xFFFF
	1161 NotImplemented "Instruction CMP not yet implemented."
	1162 NotImplemented "Instruction CSET not yet implemented."
	1163 NotImplemented "Instruction CMP not yet implemented."
	1164 NotImplemented "Instruction CSET not yet implemented."
	1165 Xor W8, W8, W9
	1166 Move W9, 1
	1167 NotImplemented "Instruction CSNEG not yet implemented."
	1168 Move TEMP, X8
	1169 And TEMP, TEMP, 1
	1170 Compare TEMP, 1
	1171 JumpIfEqual {1205}
	1172 Move X0, [X24]
	1173 Move W20, [X31+204]
	1174 Move W8, [X0+224]
	1175 Compare W8, 0
	1176 JumpIfNotEqual {1178}
	1177 Call 0x1C17DFC
	1178 Move W8, [X31+72]
	1179 And W0, W29, 0xFFFF
	1180 Move W1, W20
	1181 And W24, W8, 0xFFFF
	1182 Call SimpleCollator.IsHalfKana, X0, X1
	1183 Move W25, W0
	1184 Move W0, W24
	1185 Move W1, W20
	1186 Call SimpleCollator.IsHalfKana, X0, X1
	1187 And W8, W0, 1
	1188 And W9, W25, 1
	1189 Move TEMP, 0
	1190 Not TEMP
	1191 Move W10, TEMP
	1192 NotImplemented "Instruction CSNEG not yet implemented."
	1193 NotImplemented "Instruction CMP not yet implemented."
	1194 Move X13, [X31+184]
	1195 Move X9, [X31+192]
	1196 Move W14, [X31+116]
	1197 Move X25, [X31+96]
	1198 Move W10, W28
	1199 Move X8, X13
	1200 Move W20, W22
	1201 Move X24, X19
	1202 Move [X31+180], W14
	1203 Move W27, [X31+92]
	1204 Move X25, [X31+96]
	1205 Move X9, [X31+192]
	1206 Move W10, 3
	1207 Move X8, X13
	1208 Move W20, W22
	1209 Move X24, X19
	1210 Move [X31+180], W14
	1211 Move [X31+52], W11
	1212 Move X25, [X0+32]
	1213 Compare X25, 0
	1214 JumpIfEqual {1470}
	1215 Move W10, [X31+172]
	1216 Move W9, [X31+92]
	1217 Add W8, W21, W20
	1218 Move W27, [X25+16]
	1219 Move [X31+168], W8
	1220 Move [X31+160], W9
	1221 Move [X31+164], W10
	1222 Move W9, [X31+176]
	1223 Move X8, [X31+96]
	1224 Move W10, [X31+124]
	1225 Move [X31+120], W31
	1226 Move [X31+156], W9
	1227 Move X9, [X31+192]
	1228 Move [X31+176], W31
	1229 Move [X31+180], W15
	1230 Move W20, W22
	1231 Move X24, X19
	1232 Move [X31+172], W31
	1233 Move W21, W31
	1234 Move X24, [X0+32]
	1235 Compare X24, 0
	1236 JumpIfEqual {1470}
	1237 Move W20, [X24+16]
	1238 Move [X31+144], W21
	1239 Move [X31+148], W23
	1240 Move W10, [X31+124]
	1241 Move W21, W25
	1242 Move X25, [X31+96]
	1243 Move [X31+180], W31
	1244 Move [X31+108], W31
	1245 Move X8, X14
	1246 Move X9, X19
	1247 Move [X31+136], W15
	1248 Move [X31+140], W22
	1249 Move [X31+152], W31
	1250 Move W23, W31
	1251 Move W8, 0x3099
	1252 NotImplemented "Instruction CMP not yet implemented."
	1253 NotImplemented "Instruction CSET not yet implemented."
	1254 Move W8, 0x3099
	1255 NotImplemented "Instruction CMP not yet implemented."
	1256 NotImplemented "Instruction CSET not yet implemented."
	1257 Move W8, 0x30FB
	1258 NotImplemented "Instruction CMP not yet implemented."
	1259 NotImplemented "Instruction CSET not yet implemented."
	1260 Move [X31+12], W8
	1261 Move W9, [X31+72]
	1262 Move W8, 0x30FB
	1263 NotImplemented "Instruction CMP not yet implemented."
	1264 NotImplemented "Instruction CSET not yet implemented."
	1265 Move W20, [X31+52]
	1266 Move [X31+124], W13
	1267 NotImplemented "Instruction CMP not yet implemented."
	1268 NotImplemented "Instruction CSET not yet implemented."
	1269 NotImplemented "Instruction CMP not yet implemented."
	1270 Move W9, [X31+48]
	1271 Move X24, 0xF0E000
	1272 Move X24, [X24+2576]
	1273 Move W25, W11
	1274 Or W8, W8, W9
	1275 Move TEMP, X8
	1276 And TEMP, TEMP, 1
	1277 Compare TEMP, 1
	1278 JumpIfEqual {1359}
	1279 NotImplemented "Instruction CMP not yet implemented."
	1280 NotImplemented "Instruction CMP not yet implemented."
	1281 Compare X28, 0
	1282 JumpIfEqual {1470}
	1283 Move W27, [X31+108]
	1284 Move W21, [X31+204]
	1285 Move X0, X28
	1286 Move W1, W29
	1287 Move X2, X31
	1288 Call String.get_Chars, X0, X1
	1289 Move X8, [X24]
	1290 Move W23, W0
	1291 Move W9, [X8+224]
	1292 Compare W9, 0
	1293 JumpIfNotEqual {1296}
	1294 Move X0, X8
	1295 Call 0x1C17DFC
	1296 And W0, W23, 0xFFFF
	1297 Call MSCompatUnicodeTable.IsIgnorableNonSpacing, X0
	1298 Move TEMP, X0
	1299 And TEMP, TEMP, 1
	1300 Compare TEMP, 1
	1301 JumpIfNotEqual {1359}
	1302 Compare X19, 0
	1303 JumpIfEqual {1470}
	1304 Move X0, X19
	1305 Move W1, W26
	1306 Move X2, X31
	1307 Call String.get_Chars, X0, X1
	1308 Move X8, [X24]
	1309 Move W23, W0
	1310 Move W9, [X8+224]
	1311 Compare W9, 0
	1312 JumpIfNotEqual {1315}
	1313 Move X0, X8
	1314 Call 0x1C17DFC
	1315 And W0, W23, 0xFFFF
	1316 Call MSCompatUnicodeTable.IsIgnorableNonSpacing, X0
	1317 Move TEMP, X0
	1318 And TEMP, TEMP, 1
	1319 Compare TEMP, 1
	1320 JumpIfNotEqual {1359}
	1321 Move X0, X28
	1322 Move W1, W29
	1323 Move X2, X31
	1324 Call String.get_Chars, X0, X1
	1325 Move X20, [X31+128]
	1326 And W1, W0, 0xFFFF
	1327 Move W2, W21
	1328 Move X0, X20
	1329 Call SimpleCollator.FilterOptions, X0, X1, X2
	1330 Move W2, [X31+120]
	1331 Move W1, W0
	1332 Move X0, X20
	1333 Call SimpleCollator.Level2, X0, X1, X2
	1334 Move W23, W0
	1335 Move X0, X19
	1336 Move W1, W26
	1337 Move X2, X31
	1338 Call String.get_Chars, X0, X1
	1339 And W1, W0, 0xFFFF
	1340 Move X0, X20
	1341 Move W2, W21
	1342 Call SimpleCollator.FilterOptions, X0, X1, X2
	1343 Move W1, W0
	1344 Move X0, X20
	1345 Move W2, W27
	1346 Call SimpleCollator.Level2, X0, X1, X2
	1347 And W8, W23, 255
	1348 Subtract W20, W8, W0
	1349 Add W26, W26, 1
	1350 NotImplemented "Instruction CMP not yet implemented."
	1351 Add W29, W29, 1
	1352 Move W20, W31
	1353 NotImplemented "Instruction CMP not yet implemented."
	1354 Move W27, W31
	1355 Move [X31+120], W31
	1356 Move X24, 0xF0E000
	1357 Move X24, [X24+2576]
	1358 Move W25, W11
	1359 Move W8, [X31+124]
	1360 NotImplemented "Instruction CMP not yet implemented."
	1361 Compare W20, 0
	1362 JumpIfEqual {1409}
	1363 NotImplemented "Instruction CMP not yet implemented."
	1364 Compare X28, 0
	1365 JumpIfEqual {1470}
	1366 Move X0, X28
	1367 Move W1, W29
	1368 Move X2, X31
	1369 Call String.get_Chars, X0, X1
	1370 Move X8, [X24]
	1371 Move W21, W0
	1372 Move W9, [X8+224]
	1373 Compare W9, 0
	1374 JumpIfNotEqual {1377}
	1375 Move X0, X8
	1376 Call 0x1C17DFC
	1377 And W0, W21, 0xFFFF
	1378 Call MSCompatUnicodeTable.IsIgnorableNonSpacing, X0
	1379 Move TEMP, X0
	1380 And TEMP, TEMP, 1
	1381 Compare TEMP, 1
	1382 JumpIfNotEqual {1386}
	1383 Add W29, W29, 1
	1384 NotImplemented "Instruction CMP not yet implemented."
	1385 Move W29, W25
	1386 NotImplemented "Instruction CMP not yet implemented."
	1387 Compare X19, 0
	1388 JumpIfEqual {1470}
	1389 Move X0, X19
	1390 Move W1, W26
	1391 Move X2, X31
	1392 Call String.get_Chars, X0, X1
	1393 Move X8, [X24]
	1394 Move W21, W0
	1395 Move W9, [X8+224]
	1396 Compare W9, 0
	1397 JumpIfNotEqual {1400}
	1398 Move X0, X8
	1399 Call 0x1C17DFC
	1400 And W0, W21, 0xFFFF
	1401 Call MSCompatUnicodeTable.IsIgnorableNonSpacing, X0
	1402 Move TEMP, X0
	1403 And TEMP, TEMP, 1
	1404 Compare TEMP, 1
	1405 JumpIfNotEqual {1409}
	1406 Add W26, W26, 1
	1407 NotImplemented "Instruction CMP not yet implemented."
	1408 Move W26, W22
	1409 Compare W20, 0
	1410 JumpIfNotEqual {1449}
	1411 Move W8, [X31+88]
	1412 Move TEMP, X8
	1413 And TEMP, TEMP, -2147483648
	1414 Compare TEMP, -2147483648
	1415 JumpIfEqual {1424}
	1416 Move W9, [X31+112]
	1417 Move TEMP, X9
	1418 And TEMP, TEMP, -2147483648
	1419 Compare TEMP, -2147483648
	1420 JumpIfNotEqual {1424}
	1421 Move TEMP, 0
	1422 Not TEMP
	1423 Move W20, TEMP
	1424 Move TEMP, X8
	1425 And TEMP, TEMP, -2147483648
	1426 Compare TEMP, -2147483648
	1427 JumpIfNotEqual {1434}
	1428 Move W9, [X31+112]
	1429 Move TEMP, X9
	1430 And TEMP, TEMP, -2147483648
	1431 Compare TEMP, -2147483648
	1432 JumpIfEqual {1434}
	1433 Move W20, 1
	1434 Move W9, [X31+112]
	1435 Subtract W20, W9, W8
	1436 Move W9, [X31+76]
	1437 Move W8, [X31+80]
	1438 Subtract W20, W9, W8
	1439 NotImplemented "Instruction CMP not yet implemented."
	1440 Move X9, [X31+24]
	1441 Move W8, 1
	1442 Move [X9], W8
	1443 NotImplemented "Instruction CMP not yet implemented."
	1444 Move X9, [X31+16]
	1445 Move W20, W31
	1446 Move W8, 1
	1447 Move [X9], W8
	1448 Move W20, W31
	1449 NotImplemented "Instruction CMP not yet implemented."
	1450 NotImplemented "Instruction CMP not yet implemented."
	1451 NotImplemented "Instruction CSINV not yet implemented."
	1452 Move W0, 1
	1453 Move X20, [X31+288]
	1454 Move X19, [X31+296]
	1455 Move X22, [X31+272]
	1456 Move X21, [X31+280]
	1457 Move X24, [X31+256]
	1458 Move X23, [X31+264]
	1459 Move X26, [X31+240]
	1460 Move X25, [X31+248]
	1461 Move X28, [X31+224]
	1462 Move X27, [X31+232]
	1463 Move X29, [X31+208]
	1464 Move X30, [X31+216]
	1465 Add X31, X31, 304
	1466 Return X0
	1467 Move TEMP, 0
	1468 Not TEMP
	1469 Move W0, TEMP
	1470 Call 0x1C17F20
	1471 Call 0x1C17F28

Method: System.Int32 CompareFlagPair(System.Boolean b1, System.Boolean b2)

Disassembly:
	0x03214378 CMP W24, W8
	0x0321437C B.LT 0x3214338
	0x03214380 B 0x3214388
	0x03214384 LDR W8, [X22 + 0x10]
	0x03214388 SUBS W3, W8, W24
	0x0321438C B.NE 0x32143D4
	0x03214390 MOV X1, X22

ISIL:
	001 Xor W8, W1, W2
	002 And W31, W1, 1
	003 Move W9, 1
	004 NotImplemented "Instruction CSNEG not yet implemented."
	005 And W31, W8, 1
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0

Method: System.Boolean IsPrefix(System.String src, System.String target, System.Globalization.CompareOptions opt)

Disassembly:
	0x03214394 MOV W2, W31
	0x03214398 MOV W4, W24
	0x0321439C BL 0x3213FDC
	0x032143A0 TBNZ X0, 0x1F, 0x32146F8
	0x032143A4 MOV X1, X20
	0x032143A8 MOV X2, X22
	0x032143AC LDR W3, [X31 + 0x38]
	0x032143B0 MOV W4, W26

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {8}
	004 Move W4, [X1+16]
	005 Move W5, W3
	006 Move W3, W31
	007 Move X30, [X31+16]
	008 Call 0x1C17F20

Method: System.Boolean IsPrefix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)

Disassembly:
	0x032143B4 LDP X20, X19, [X31 + 0x90]
	0x032143B8 LDP X22, X21, [X31 + 0x80]
	0x032143BC LDP X24, X23, [X31 + 0x70]
	0x032143C0 LDP X26, X25, [X31 + 0x60]
	0x032143C4 LDP X28, X27, [X31 + 0x50]
	0x032143C8 LDP X29, X30, [X31 + 0x40]
	0x032143CC ADD X31, X31, 0xA0
	0x032143D0 B 0x32147E0
	0x032143D4 MOV X0, X25
	0x032143D8 MOV X1, X22
	0x032143DC MOV W2, W24
	0x032143E0 BL 0x3210680
	0x032143E4 STR W27, [X31 + 0x1C]
	0x032143E8 STR X29, [X31 + 0x28]
	0x032143EC CBZ X0, 0x3214454
	0x032143F0 LDR X8, [X0 + 0x20]
	0x032143F4 CMP X8, 0x0
	0x032143F8 STR X8, [X31 + 0x20]
	0x032143FC CSEL X29, X29, X31, EQ
	0x03214400 CSET W8, EQ
	0x03214404 STR W8, [X31 + 0x34]
	0x03214408 CBZ X29, 0x3214530
	0x0321440C LDR X8, [X0 + 0x28]
	0x03214410 CBZ X8, 0x3214444
	0x03214414 MOV X9, X31
	0x03214418 LDR W10, [X8 + 0x18]
	0x0321441C CMP X9, W10, SXTW
	0x03214420 B.GE 0x3214448
	0x03214424 CMP X9, X10
	0x03214428 B.CS 0x32147DC
	0x0321442C ADD X8, X8, X9
	0x03214430 LDRB W8, [X8 + 0x20]
	0x03214434 STRB W8, [X29, X9, LSL]
	0x03214438 LDR X8, [X0 + 0x28]
	0x0321443C ADD X9, X9, 0x1
	0x03214440 CBNZ X8, 0x3214418
	0x03214444 BL 0x1C16F20
	0x03214448 MOVN W21, 0x0
	0x0321444C MOVZ W28, 0x1
	0x03214450 B 0x3214760
	0x03214454 CBZ X29, 0x3214548
	0x03214458 MOV X0, X22
	0x0321445C MOV W1, W24

ISIL:
	001 Move [X31-16], X29
	002 Move [X31-8], X30
	003 Add X29, X31, 0
	004 Subtract X31, X31, 64
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X29-48], V0
	007 Move [X29-40], V0
	008 Move [X29-64], V0
	009 Compare X2, 0
	010 JumpIfEqual {49}
	011 Move W8, [X2+16]
	012 Compare W8, 0
	013 JumpIfEqual {43}
	014 Add X9, X31, 0
	015 Subtract X8, X9, 16
	016 Add X31, X8, 0
	017 Add X11, X31, 0
	018 Move [X9-16], W31
	019 Subtract X9, X11, 16
	020 Add X31, X9, 0
	021 Move X10, X31
	022 Move [X11-16], W31
	023 Move [X8], W31
	024 Add X10, X10, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X10, X31
	027 Move [X9], W31
	028 Add X10, X10, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X29-64], W5
	031 Move [X29-40], X8
	032 Move [X29-32], X9
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W8, TEMP
	036 Subtract X6, X29, 64
	037 Move W5, 1
	038 Move [X29-56], X31
	039 Move [X29-48], X31
	040 Move [X29-16], X31
	041 Move [X29-24], W8
	042 Call SimpleCollator.IsPrefix, X0, X1, X2, X3, X4, X5, X6
	043 Move W0, 1
	044 And W0, W0, 1
	045 Add X31, X29, 0
	046 Move X29, [X31+16]
	047 Move X30, [X31+24]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean IsPrefix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Boolean skipHeadingExtenders, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x03214460 MOV X2, X31
	0x03214464 BL 0x3222A1C
	0x03214468 AND W1, W0, 0xFFFF
	0x0321446C MOV X0, X25
	0x03214470 MOV W2, W27
	0x03214474 BL 0x3210B10
	0x03214478 MOV W19, W0
	0x0321447C MOV X0, X25
	0x03214480 MOV W1, W19
	0x03214484 BL 0x32103B0
	0x03214488 STRB W0, [X29]
	0x0321448C MOV X0, X25
	0x03214490 MOV W1, W19
	0x03214494 BL 0x3210444
	0x03214498 STRB W0, [X29 + 0x1]
	0x0321449C TBNZ X27, 0x1, 0x32144B4
	0x032144A0 MOV X0, X25
	0x032144A4 MOV W1, W19
	0x032144A8 MOV W2, W31
	0x032144AC BL 0x32104D8
	0x032144B0 STRB W0, [X29 + 0x2]
	0x032144B4 ADRP X8, 0xF0D000
	0x032144B8 LDR X8, [X8 + 0xA10]
	0x032144BC LDR X0, [X8]
	0x032144C0 LDR W8, [X0 + 0xE0]
	0x032144C4 CBNZ W8, 0x32144CC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+60], W31
	004 Move [X31+56], W31
	005 Compare X2, 0
	006 JumpIfEqual {27}
	007 Move W9, [X2+16]
	008 Move X8, X2
	009 Move [X31+24], X6
	010 Move W10, 1
	011 And W11, W5, 1
	012 Add X12, X31, 56
	013 Add X7, X31, 60
	014 Move W2, W3
	015 Move W3, W4
	016 Move X4, X8
	017 Move W5, W31
	018 Move W6, W9
	019 Move [X31+16], W10
	020 Move [X31+8], W11
	021 Move [X31], X12
	022 Call SimpleCollator.CompareInternal, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	023 Move W0, [X31+60]
	024 Move X30, [X31+48]
	025 Add X31, X31, 64
	026 Return X0
	027 Call 0x1C17F20

Method: System.Boolean IsSuffix(System.String src, System.String target, System.Globalization.CompareOptions opt)

Disassembly:
	0x032144C8 BL 0x1C16DFC
	0x032144CC MOV W0, W19
	0x032144D0 BL 0x320E5C4
	0x032144D4 MOVZ W8, 0x3041
	0x032144D8 CMP W8, W19, UXTH
	0x032144DC STRB W0, [X29 + 0x3]
	0x032144E0 B.HI 0x321453C
	0x032144E4 ADD W8, W19, 0x9A

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {8}
	004 Move W4, [X1+16]
	005 Move W5, W3
	006 Subtract W3, W4, 1
	007 Move X30, [X31+16]
	008 Call 0x1C17F20

Method: System.Boolean IsSuffix(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)

Disassembly:
	0x032144E8 AND W8, W8, 0xFFFF
	0x032144EC CMP W8, 0x38
	0x032144F0 B.CC 0x3214720
	0x032144F4 UBFM W8, W19, 0x8, 0xF
	0x032144F8 CMP W8, 0x32
	0x032144FC B.HI 0x321453C
	0x03214500 MOVZ W9, 0x309C
	0x03214504 CMP W9, W19, UXTH
	0x03214508 B.CS 0x321472C
	0x0321450C CMP W8, 0x30
	0x03214510 B.LS 0x3214740
	0x03214514 MOVN W8, 0x32CF
	0x03214518 ADD W8, W19, W8
	0x0321451C AND W8, W8, 0xFFFF
	0x03214520 CMP W8, 0x2F
	0x03214524 MOV W21, W19
	0x03214528 CSET W8, CC
	0x0321452C B 0x3214750
	0x03214530 MOVN W21, 0x0
	0x03214534 MOVZ W28, 0x1
	0x03214538 B 0x321455C
	0x0321453C MOV W21, W19
	0x03214540 MOV W8, W31
	0x03214544 B 0x3214750
	0x03214548 MOVZ W8, 0x1
	0x0321454C STR X31, [X31 + 0x20]
	0x03214550 MOVN W21, 0x0
	0x03214554 MOVZ W28, 0x1
	0x03214558 STR W8, [X31 + 0x34]
	0x0321455C LDR W19, [X31 + 0x38]
	0x03214560 LDR W8, [X31 + 0x34]
	0x03214564 TBZ X8, 0x0, 0x32145E4
	0x03214568 SUB W27, W19, W26
	0x0321456C CMP W19, W27
	0x03214570 STR W19, [X31 + 0x3C]
	0x03214574 B.LE 0x321460C
	0x03214578 LDR W4, [X31 + 0x38]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Compare X2, 0
	008 JumpIfEqual {45}
	009 Move W8, [X2+16]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {36}
	013 Move X2, X20
	014 Move W19, W5
	015 Move X21, X1
	016 Move X22, X0
	017 Call SimpleCollator.LastIndexOf, X0, X1, X2, X3, X4, X5
	018 Move TEMP, X0
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {37}
	022 Compare X21, 0
	023 JumpIfEqual {45}
	024 Move W8, [X21+16]
	025 Move W6, [X20+16]
	026 Move W2, W0
	027 Move X1, X21
	028 Subtract W3, W8, W0
	029 Move X0, X22
	030 Move X4, X20
	031 Move W5, W31
	032 Move W7, W19
	033 Call SimpleCollator.Compare, X0, X1, X2, X3, X4, X5, X6, X7
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, 1
	037 Move W0, W31
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 64
	044 Return X0
	045 Call 0x1C17F20

Method: System.Int32 QuickIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, out System.Boolean testWasUnable)

Disassembly:
	0x03214704 LDP X22, X21, [X31 + 0x80]
	0x03214708 LDP X24, X23, [X31 + 0x70]
	0x0321470C LDP X26, X25, [X31 + 0x60]
	0x03214710 LDP X28, X27, [X31 + 0x50]
	0x03214714 LDP X29, X30, [X31 + 0x40]
	0x03214718 ADD X31, X31, 0xA0
	0x0321471C RET
	0x03214720 MOV W21, W19
	0x03214724 MOVZ W8, 0x1
	0x03214728 B 0x3214750
	0x0321472C MOVZ W8, 0x3099
	0x03214730 CMP W8, W19, UXTH
	0x03214734 MOV W21, W19
	0x03214738 CSET W8, HI
	0x0321473C B 0x3214750
	0x03214740 MOVZ W8, 0x30FB
	0x03214744 CMP W8, W19, UXTH
	0x03214748 MOV W21, W19
	0x0321474C CSET W8, NE
	0x03214750 EOR W28, W8, 0x1
	0x03214754 MOVZ W8, 0x1
	0x03214758 STR X31, [X31 + 0x20]
	0x0321475C STR W8, [X31 + 0x34]
	0x03214760 LDR W8, [X22 + 0x10]
	0x03214764 ADD W19, W24, 0x1
	0x03214768 CMP W19, W8
	0x0321476C B.GE 0x321455C
	0x03214770 MOV X0, X22
	0x03214774 MOV W1, W19
	0x03214778 MOV X2, X31
	0x0321477C BL 0x3222A1C
	0x03214780 AND W1, W0, 0xFFFF
	0x03214784 MOV X0, X25
	0x03214788 BL 0x32103B0
	0x0321478C AND W8, W0, 0xFF
	0x03214790 CMP W8, 0x1
	0x03214794 B.NE 0x321455C
	0x03214798 LDRB W24, [X29 + 0x2]
	0x0321479C CBNZ W24, 0x32147A8
	0x032147A0 MOVZ W24, 0x2
	0x032147A4 STRB W24, [X29 + 0x2]
	0x032147A8 MOV X0, X22
	0x032147AC MOV W1, W19
	0x032147B0 MOV X2, X31
	0x032147B4 BL 0x3222A1C
	0x032147B8 AND W1, W0, 0xFFFF
	0x032147BC MOV X0, X25
	0x032147C0 MOV W2, W31
	0x032147C4 BL 0x32104D8
	0x032147C8 ADD W8, W0, W24
	0x032147CC STRB W8, [X29 + 0x2]
	0x032147D0 LDR W8, [X22 + 0x10]
	0x032147D4 ADD W19, W19, 0x1
	0x032147D8 B 0x3214768
	0x032147DC BL 0x1C16F28
	0x032147E0 STR X30, [X31 - 0x60]!
	0x032147E4 STP X28, X27, [X31 + 0x10]
	0x032147E8 STP X26, X25, [X31 + 0x20]
	0x032147EC STP X24, X23, [X31 + 0x30]
	0x032147F0 STP X22, X21, [X31 + 0x40]
	0x032147F4 STP X20, X19, [X31 + 0x50]
	0x032147F8 CBZ X2, 0x3214910
	0x032147FC LDR W8, [X2 + 0x10]
	0x03214800 MOV W19, W3
	0x03214804 MOV X20, X2
	0x03214808 CBZ W8, 0x32148E4
	0x0321480C MOV X21, X1
	0x03214810 CBZ X1, 0x3214910
	0x03214814 CMP W8, W4
	0x03214818 MOVN W23, 0x0
	0x0321481C B.GT 0x32148F0
	0x03214820 LDR W9, [X21 + 0x10]
	0x03214824 CMP W9, W8
	0x03214828 B.LT 0x32148F0
	0x0321482C SUB W1, W8, 0x1
	0x03214830 ADD W8, W1, W19
	0x03214834 MOV X0, X20
	0x03214838 MOV X2, X31
	0x0321483C SUB W26, W8, W4
	0x03214840 BL 0x3222A1C
	0x03214844 CMP W26, W19
	0x03214848 B.GE 0x32148EC
	0x0321484C MOV W22, W0
	0x03214850 SUB W27, W19, 0x1
	0x03214854 MOV X0, X21
	0x03214858 MOV W1, W19
	0x0321485C MOV X2, X31
	0x03214860 BL 0x3222A1C
	0x03214864 AND W8, W0, 0xFFFF
	0x03214868 CMP W8, W22, UXTH

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W8, 1
	012 Move [X5], W8
	013 Compare X2, 0
	014 JumpIfEqual {95}
	015 Move W8, [X2+16]
	016 Move X21, X2
	017 Compare W8, 0
	018 JumpIfEqual {77}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X5], W31
	021 Move W8, [X21+16]
	022 Add W9, W3, W4
	023 Move X20, X5
	024 Move W19, W3
	025 Subtract W9, W9, W8
	026 Add W25, W9, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, X1
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W26, TEMP
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W27, TEMP
	036 Move W23, W31
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X21
	039 Move W1, W23
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Subtract W8, W0, 1
	043 And W8, W8, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W26, W23
	046 Add W24, W19, W23
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X22, 0
	049 JumpIfEqual {95}
	050 Move X0, X22
	051 Move W1, W24
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Subtract W8, W0, 1
	055 And W8, W8, 0xFFFF
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W27, W24
	058 Compare X22, 0
	059 JumpIfEqual {95}
	060 Move X0, X22
	061 Move W1, W24
	062 Move X2, X31
	063 Call String.get_Chars, X0, X1
	064 And W24, W0, 0xFFFF
	065 Move X0, X21
	066 Move W1, W23
	067 Move X2, X31
	068 Call String.get_Chars, X0, X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, [X21+16]
	071 Add W23, W23, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W19, W19, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, [X21+16]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W19, W31
	078 Move W8, 1
	079 Move [X20], W8
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W19, TEMP
	083 Move W0, W19
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move X30, [X31+80]
	093 Move X27, [X31+88]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Int32 IndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)

Disassembly:
	0x0321486C B.NE 0x32148CC
	0x03214870 LDR W8, [X20 + 0x10]
	0x03214874 SUB W9, W19, W8
	0x03214878 CMP W8, 0x2
	0x0321487C ADD W23, W9, 0x1
	0x03214880 B.MI 0x32148F0
	0x03214884 SUB W24, W8, 0x1
	0x03214888 MOV W25, W27
	0x0321488C MOV X0, X21
	0x03214890 MOV W1, W25
	0x03214894 MOV X2, X31
	0x03214898 SUB W24, W24, 0x1
	0x0321489C BL 0x3222A1C
	0x032148A0 AND W28, W0, 0xFFFF
	0x032148A4 MOV X0, X20
	0x032148A8 MOV W1, W24
	0x032148AC MOV X2, X31
	0x032148B0 BL 0x3222A1C
	0x032148B4 CMP W28, W0, UXTH
	0x032148B8 B.NE 0x32148CC
	0x032148BC CMP W24, 0x0
	0x032148C0 SUB W25, W25, 0x1
	0x032148C4 B.GT 0x321488C
	0x032148C8 B 0x32148F0
	0x032148CC SUB W19, W19, 0x1
	0x032148D0 SUB W27, W27, 0x1
	0x032148D4 CMP W19, W26
	0x032148D8 MOVN W23, 0x0
	0x032148DC B.GT 0x3214854
	0x032148E0 B 0x32148F0
	0x032148E4 MOV W23, W19
	0x032148E8 B 0x32148F0
	0x032148EC MOVN W23, 0x0
	0x032148F0 MOV W0, W23
	0x032148F4 LDP X20, X19, [X31 + 0x50]
	0x032148F8 LDP X22, X21, [X31 + 0x40]
	0x032148FC LDP X24, X23, [X31 + 0x30]
	0x03214900 LDP X26, X25, [X31 + 0x20]
	0x03214904 LDP X28, X27, [X31 + 0x10]
	0x03214908 LDR X30, [X31], #0x60
	0x0321490C RET
	0x03214910 BL 0x1C16F20
	0x03214914 SUB X31, X31, 0x70
	0x03214918 STP X30, X27, [X31 + 0x20]
	0x0321491C STP X26, X25, [X31 + 0x30]
	0x03214920 STP X24, X23, [X31 + 0x40]
	0x03214924 STP X22, X21, [X31 + 0x50]
	0x03214928 STP X20, X19, [X31 + 0x60]
	0x0321492C SUB W25, W2, W4
	0x03214930 CMP W25, W2
	0x03214934 STR W2, [X31 + 0x1C]
	0x03214938 B.GE 0x3214994
	0x0321493C LDR X27, [X31 + 0x70]
	0x03214940 MOV W20, W6
	0x03214944 MOV X21, X5
	0x03214948 MOV W22, W3
	0x0321494C MOV W19, W2
	0x03214950 MOV X23, X1
	0x03214954 MOV X24, X0
	0x03214958 AND W26, W7, 0x1
	0x0321495C ADD X2, X31, 0x1C
	0x03214960 MOV X0, X24
	0x03214964 MOV X1, X23
	0x03214968 MOV W3, W25
	0x0321496C MOV W4, W22
	0x03214970 MOV W5, W20
	0x03214974 MOV X6, X21
	0x03214978 MOV W7, W26
	0x0321497C STR X27, [X31]
	0x03214980 BL 0x32149B8
	0x03214984 TBNZ X0, 0x0, 0x3214998
	0x03214988 LDR W19, [X31 + 0x1C]
	0x0321498C CMP W19, W25
	0x03214990 B.GT 0x321495C
	0x03214994 MOVN W19, 0x0
	0x03214998 MOV W0, W19
	0x0321499C LDP X20, X19, [X31 + 0x60]
	0x032149A0 LDP X22, X21, [X31 + 0x50]
	0x032149A4 LDP X24, X23, [X31 + 0x40]
	0x032149A8 LDP X26, X25, [X31 + 0x30]
	0x032149AC LDP X30, X27, [X31 + 0x20]
	0x032149B0 ADD X31, X31, 0x70
	0x032149B4 RET
	0x032149B8 SUB X31, X31, 0x90
	0x032149BC STP X29, X30, [X31 + 0x30]
	0x032149C0 STP X28, X27, [X31 + 0x40]
	0x032149C4 STP X26, X25, [X31 + 0x50]
	0x032149C8 STP X24, X23, [X31 + 0x60]
	0x032149CC STP X22, X21, [X31 + 0x70]
	0x032149D0 STP X20, X19, [X31 + 0x80]
	0x032149D4 STR X31, [X31 + 0x28]
	0x032149D8 CBZ X1, 0x3214B8C
	0x032149DC MOV X25, X1
	0x032149E0 LDR W1, [X2]
	0x032149E4 LDR X29, [X31 + 0x90]
	0x032149E8 MOV X22, X2
	0x032149EC MOV X26, X0
	0x032149F0 MOV X0, X25
	0x032149F4 MOV X2, X31
	0x032149F8 MOV W24, W7
	0x032149FC MOV X19, X6
	0x03214A00 MOV W20, W5
	0x03214A04 MOV W21, W4
	0x03214A08 MOV W23, W3
	0x03214A0C BL 0x3222A1C
	0x03214A10 AND W28, W0, 0xFFFF
	0x03214A14 CMP W28, 0x7F
	0x03214A18 B.HI 0x3214A44
	0x03214A1C LDR X8, [X29 + 0x10]
	0x03214A20 CBZ X8, 0x3214A44
	0x03214A24 MOV W9, W28
	0x03214A28 UBFM X9, X9, 0x3, 0x3F
	0x03214A2C LDRB W8, [X9, X8, LSL]
	0x03214A30 AND W9, W28, 0x7
	0x03214A34 LSRV W8, W8, W9
	0x03214A38 TBZ X8, 0x0, 0x3214A44
	0x03214A3C MOVZ W0, 0x1
	0x03214A40 B 0x3214B6C
	0x03214A44 CMP W28, 0x7F
	0x03214A48 B.HI 0x3214A80
	0x03214A4C LDR X8, [X29 + 0x8]
	0x03214A50 CBZ X8, 0x3214A80
	0x03214A54 MOV W9, W28
	0x03214A58 UBFM X9, X9, 0x3, 0x3F

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 80
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move W24, W5
	015 Move W19, W4
	016 Move W20, W3
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X29-8], X8
	022 Move [X29-16], X31
	023 Move [X29-48], V0
	024 Move [X29-40], V0
	025 Move [X29-64], V0
	026 NotImplemented "Instruction STURB not yet implemented."
	027 Compare W5, 0
	028 JumpIfEqual {51}
	029 Move W8, 0x10000000
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, 0x40000000
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, 0xEE0000
	034 Move X0, [X0+2880]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Move X0, 0xF0E000
	039 Move X0, [X0+3072]
	040 Call 0x1C17D08
	041 Move X1, X0
	042 Move X0, X19
	043 Move X2, X31
	044 Call NotSupportedException..ctor, X0, X1
	045 Move X0, 0xF0E000
	046 Move X0, [X0+3088]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Call 0x1C17DEC
	051 Subtract X5, X29, 68
	052 Move X1, X22
	053 Move X2, X21
	054 Move W3, W20
	055 Move W4, W19
	056 Call SimpleCollator.QuickIndexOf, X0, X1, X2, X3, X4, X5
	057 NotImplemented "Instruction LDURB not yet implemented."
	058 Compare W8, 0
	059 JumpIfEqual {119}
	060 Add X9, X31, 0
	061 Subtract X8, X9, 16
	062 Add X31, X8, 0
	063 Add X10, X31, 0
	064 Move [X9-16], X31
	065 Move [X9-8], X31
	066 Subtract X9, X10, 16
	067 Add X31, X9, 0
	068 Move [X10-16], X31
	069 Move [X10-8], X31
	070 Add X10, X31, 0
	071 Subtract X5, X10, 16
	072 Add X31, X5, 0
	073 Add X11, X31, 0
	074 Move [X10-16], W31
	075 Subtract X10, X11, 16
	076 Add X31, X10, 0
	077 Add X13, X31, 0
	078 Move [X11-16], W31
	079 Subtract X11, X13, 16
	080 Add X31, X11, 0
	081 Move X12, X31
	082 Move [X13-16], W31
	083 Move [X8], W31
	084 Add X12, X12, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X12, X31
	087 Move [X9], W31
	088 Add X12, X12, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X12, X31
	091 Move [X5], W31
	092 Add X12, X12, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X12, X31
	095 Move [X10], W31
	096 Add X12, X12, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X12, X31
	099 Move [X11], W31
	100 Add X12, X12, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X29-56], X9
	103 Move [X29-48], X8
	104 Move TEMP, 0
	105 Not TEMP
	106 Move W8, TEMP
	107 Subtract X6, X29, 64
	108 Move X0, X23
	109 Move X1, X22
	110 Move X2, X21
	111 Move W3, W20
	112 Move W4, W19
	113 Move [X29-64], W24
	114 Move [X29-40], X10
	115 Move [X29-32], X11
	116 Move [X29-16], X31
	117 Move [X29-24], W8
	118 Call SimpleCollator.IndexOf, X0, X1, X2, X3, X4, X5, X6
	119 Move X8, [X25+40]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X31, X29, 0
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X25, [X31+16]
	130 Move X29, [X31+80]
	131 Move X30, [X31+88]
	132 Return X0
	133 Call 0x3EB2B20

Method: System.Int32 IndexOfOrdinal(System.String s, System.String target, System.Int32 start, System.Int32 length)

Disassembly:
	0x03214F04 STP X20, X19, [X31 + 0x40]
	0x03214F08 ADRP X26, 0x11C8000
	0x03214F0C LDRB W8, [X26 + 0x2C6]
	0x03214F10 MOV W23, W7
	0x03214F14 MOV W21, W6
	0x03214F18 MOV X24, X5
	0x03214F1C MOV W22, W4
	0x03214F20 MOV W19, W3
	0x03214F24 MOV X25, X2
	0x03214F28 MOV W20, W1
	0x03214F2C TBNZ X8, 0x0, 0x3214F50
	0x03214F30 ADRP X0, 0xF0D000
	0x03214F34 LDR X0, [X0 + 0xA10]
	0x03214F38 BL 0x1C16CF4
	0x03214F3C ADRP X0, 0xF0D000
	0x03214F40 LDR X0, [X0 + 0xBD8]
	0x03214F44 BL 0x1C16CF4
	0x03214F48 MOVZ W8, 0x1
	0x03214F4C STRB W8, [X26 + 0x2C6]
	0x03214F50 LDRB W8, [X25]
	0x03214F54 LDRB W9, [X24]
	0x03214F58 CMP W8, W9
	0x03214F5C B.NE 0x32150EC
	0x03214F60 LDRB W8, [X25 + 0x1]
	0x03214F64 LDRB W9, [X24 + 0x1]
	0x03214F68 CMP W8, W9
	0x03214F6C B.NE 0x32150EC
	0x03214F70 TBNZ X20, 0x1, 0x3214F84
	0x03214F74 LDRB W8, [X25 + 0x2]
	0x03214F78 LDRB W9, [X24 + 0x2]
	0x03214F7C CMP W8, W9
	0x03214F80 B.NE 0x32150EC
	0x03214F84 LDRB W8, [X25 + 0x3]
	0x03214F88 LDRB W9, [X24 + 0x3]
	0x03214F8C CMP W8, W9
	0x03214F90 B.NE 0x32150EC
	0x03214F94 TBZ X23, 0x0, 0x3215008
	0x03214F98 TBNZ X19, 0x1F, 0x3215114
	0x03214F9C ADRP X8, 0xF0D000
	0x03214FA0 LDR X8, [X8 + 0xA10]
	0x03214FA4 LDR X0, [X8]
	0x03214FA8 LDR W8, [X0 + 0xE0]
	0x03214FAC CBNZ W8, 0x3214FB4
	0x03214FB0 BL 0x1C16DFC
	0x03214FB4 MOVZ W8, 0x3041
	0x03214FB8 CMP W8, W19, UXTH
	0x03214FBC B.HI 0x3215114
	0x03214FC0 ADD W8, W19, 0x9A
	0x03214FC4 AND W8, W8, 0xFFFF
	0x03214FC8 CMP W8, 0x38
	0x03214FCC B.CC 0x32150EC
	0x03214FD0 UBFM W8, W19, 0x8, 0xF
	0x03214FD4 CMP W8, 0x32
	0x03214FD8 B.HI 0x3215114

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X2, 0
	009 JumpIfEqual {55}
	010 Move W8, [X2+16]
	011 Move X20, X2
	012 Compare W8, 0
	013 JumpIfEqual {45}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add W9, W3, W4
	016 Subtract W9, W9, W8
	017 Add W23, W9, 1
	018 Move W19, W3
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, X1
	022 Compare X21, 0
	023 JumpIfEqual {55}
	024 Move W22, W31
	025 Add W1, W19, W22
	026 Move X0, X21
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W24, W0, 0xFFFF
	030 Move X0, X20
	031 Move W1, W22
	032 Move X2, X31
	033 Call String.get_Chars, X0, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X20+16]
	036 Add W22, W22, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W19, W19, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X20+16]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W19, TEMP
	045 Move W19, W31
	046 Move W0, W19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Int32 IndexOfOrdinal(System.String s, System.Char target, System.Int32 start, System.Int32 length)

Disassembly:
	0x03214FDC MOVZ W9, 0x309C
	0x03214FE0 CMP W9, W19, UXTH
	0x03214FE4 B.CS 0x32150E0
	0x03214FE8 CMP W8, 0x31
	0x03214FEC B.CC 0x3215108
	0x03214FF0 MOVN W8, 0x32CF
	0x03214FF4 ADD W8, W19, W8
	0x03214FF8 AND W8, W8, 0xFFFF
	0x03214FFC CMP W8, 0x2F
	0x03215000 B.CC 0x32150EC
	0x03215004 B 0x3215114
	0x03215008 TBNZ X20, 0x1, 0x3215014
	0x0321500C CMP W22, 0x3
	0x03215010 B.EQ 0x32150EC
	0x03215014 ADRP X24, 0xF0C000
	0x03215018 LDR X24, [X24 + 0xA10]
	0x0321501C LDR X0, [X24]
	0x03215020 LDR W8, [X0 + 0xE0]
	0x03215024 CBNZ W8, 0x321502C
	0x03215028 BL 0x1C16DFC
	0x0321502C MOV W0, W19
	0x03215030 BL 0x320EA28
	0x03215034 MOV W23, W0
	0x03215038 MOV W0, W21
	0x0321503C BL 0x320EA28
	0x03215040 EOR W8, W23, W0, 0x0
	0x03215044 TBNZ X8, 0x0, 0x32150EC
	0x03215048 ADRP X23, 0xF0C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add W8, W4, W3
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X22, X1
	009 Compare X1, 0
	010 JumpIfEqual {32}
	011 Move W20, W4
	012 Move W19, W3
	013 Move W21, W2
	014 Move X0, X22
	015 Move W1, W19
	016 Move X2, X31
	017 Call String.get_Chars, X0, X1
	018 And W8, W0, 0xFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Subtract W20, W20, 1
	021 Add W19, W19, 1
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W19, TEMP
	025 Move W0, W19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Int32 IndexOfSortKey(System.String s, System.Int32 start, System.Int32 length, System.Byte* sortkey, System.Char target, System.Int32 ti, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x0321504C LDR X23, [X23 + 0xBD8]
	0x03215050 LDR X0, [X23]
	0x03215054 LDR W8, [X0 + 0xE0]
	0x03215058 CBNZ W8, 0x3215060
	0x0321505C BL 0x1C16DFC
	0x03215060 TBNZ X20, 0x1, 0x3215068
	0x03215064 CBNZ W22, 0x32150EC
	0x03215068 LDR X0, [X24]
	0x0321506C LDR W8, [X0 + 0xE0]
	0x03215070 CBNZ W8, 0x3215078
	0x03215074 BL 0x1C16DFC
	0x03215078 MOVN W8, 0x3040
	0x0321507C ADD W9, W19, W8
	0x03215080 ADD W8, W21, W8
	0x03215084 AND W9, W9, 0xFFFF
	0x03215088 AND W8, W8, 0xFFFF
	0x0321508C CMP W9, 0x53
	0x03215090 CSET W9, HI
	0x03215094 CMP W8, 0x54
	0x03215098 CSET W8, CC
	0x0321509C CMP W9, W8
	0x032150A0 B.EQ 0x32150EC
	0x032150A4 LDR X0, [X23]
	0x032150A8 LDR W8, [X0 + 0xE0]
	0x032150AC CBNZ W8, 0x32150B4
	0x032150B0 BL 0x1C16DFC
	0x032150B4 AND W0, W19, 0xFFFF
	0x032150B8 MOV W1, W20
	0x032150BC AND W21, W21, 0xFFFF
	0x032150C0 BL 0x321060C
	0x032150C4 MOV W19, W0
	0x032150C8 MOV W0, W21
	0x032150CC MOV W1, W20
	0x032150D0 BL 0x321060C
	0x032150D4 EON W8, W19, W0, 0x0
	0x032150D8 AND W0, W8, 0x1
	0x032150DC B 0x32150F0
	0x032150E0 MOVZ W8, 0x3099
	0x032150E4 CMP W8, W19, UXTH

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Add W24, W3, W2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X31+28], W2
	014 Move X25, [X31+96]
	015 Move W20, W6
	016 Move X21, X4
	017 Move W19, W2
	018 Move X22, X1
	019 Move X23, X0
	020 And W26, W7, 1
	021 Add X2, X31, 28
	022 Move X0, X23
	023 Move X1, X22
	024 Move W3, W24
	025 Move W4, W20
	026 Move X5, X21
	027 Move W6, W26
	028 Move X7, X25
	029 Call SimpleCollator.MatchesForward, X0, X1, X2, X3, X4, X5, X6, X7
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move W19, [X31+28]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W19, TEMP
	039 Move W0, W19
	040 Move X20, [X31+80]
	041 Move X19, [X31+88]
	042 Move X22, [X31+64]
	043 Move X21, [X31+72]
	044 Move X24, [X31+48]
	045 Move X23, [X31+56]
	046 Move X26, [X31+32]
	047 Move X25, [X31+40]
	048 Move X30, [X31+16]
	049 Add X31, X31, 96
	050 Return X0

Method: System.Int32 IndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Byte* targetSortKey, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x03214A5C LDRB W8, [X8, X9, LSL]
	0x03214A60 AND W9, W28, 0x7
	0x03214A64 LSRV W8, W8, W9
	0x03214A68 TBZ X8, 0x0, 0x3214A80
	0x03214A6C LDR W8, [X22]
	0x03214A70 MOV W0, W31
	0x03214A74 SUB W8, W8, 0x1
	0x03214A78 STR W8, [X22]
	0x03214A7C B 0x3214B6C
	0x03214A80 LDR W1, [X22]
	0x03214A84 MOV X0, X25
	0x03214A88 MOV X2, X31
	0x03214A8C BL 0x3222A1C
	0x03214A90 AND W1, W0, 0xFFFF
	0x03214A94 MOV X0, X26
	0x03214A98 BL 0x3210BF4
	0x03214A9C MOV W27, W0
	0x03214AA0 ADD X8, X31, 0x28
	0x03214AA4 AND W7, W24, 0x1
	0x03214AA8 STR W0, [X31]
	0x03214AAC MOV X0, X26
	0x03214AB0 MOV X1, X25
	0x03214AB4 MOV X2, X22
	0x03214AB8 MOV W3, W23
	0x03214ABC MOV W4, W21
	0x03214AC0 MOV W5, W20
	0x03214AC4 MOV X6, X19
	0x03214AC8 STR X31, [X31 + 0x28]
	0x03214ACC STP X8, X29, [X31 + 0x8]
	0x03214AD0 BL 0x321511C
	0x03214AD4 TBZ X0, 0x0, 0x3214B20
	0x03214AD8 LDR X8, [X29 + 0x10]
	0x03214ADC MOVZ W0, 0x1
	0x03214AE0 CBZ X8, 0x3214B6C
	0x03214AE4 LDR X9, [X31 + 0x28]
	0x03214AE8 CBNZ X9, 0x3214B6C
	0x03214AEC MOVZ W0, 0x1
	0x03214AF0 CBNZ W27, 0x3214B6C
	0x03214AF4 CMP W28, 0x7F
	0x03214AF8 B.HI 0x3214B6C
	0x03214AFC MOV W9, W28
	0x03214B00 UBFM X9, X9, 0x3, 0x3F
	0x03214B04 LDRB W10, [X8, X9, LSL]
	0x03214B08 AND X11, X28, 0x7
	0x03214B0C MOVZ W0, 0x1
	0x03214B10 LSLV W11, W0, W11
	0x03214B14 ORR W10, W10, W11, 0x0
	0x03214B18 STRB W10, [X8, X9, LSL]
	0x03214B1C B 0x3214B6C
	0x03214B20 LDR X8, [X29 + 0x8]
	0x03214B24 MOV W0, W31
	0x03214B28 CBZ X8, 0x3214B6C
	0x03214B2C LDR X9, [X31 + 0x28]
	0x03214B30 CBNZ X9, 0x3214B6C
	0x03214B34 MOV W0, W31
	0x03214B38 CBNZ W27, 0x3214B6C
	0x03214B3C CMP W28, 0x7F
	0x03214B40 B.HI 0x3214B6C
	0x03214B44 MOV W10, W28
	0x03214B48 UBFM X10, X10, 0x3, 0x3F
	0x03214B4C LDRB W11, [X8, X10, LSL]
	0x03214B50 MOV W9, W28
	0x03214B54 AND X9, X9, 0x7
	0x03214B58 MOVZ W12, 0x1
	0x03214B5C LSLV W9, W12, W9
	0x03214B60 MOV W0, W31
	0x03214B64 ORR W9, W11, W9, 0x0
	0x03214B68 STRB W9, [X8, X10, LSL]
	0x03214B6C LDP X20, X19, [X31 + 0x80]
	0x03214B70 LDP X22, X21, [X31 + 0x70]
	0x03214B74 LDP X24, X23, [X31 + 0x60]
	0x03214B78 LDP X26, X25, [X31 + 0x50]
	0x03214B7C LDP X28, X27, [X31 + 0x40]
	0x03214B80 LDP X29, X30, [X31 + 0x30]
	0x03214B84 ADD X31, X31, 0x90
	0x03214B88 RET
	0x03214B8C BL 0x1C16F20
	0x03214B90 SUB X31, X31, 0x80
	0x03214B94 STP X29, X30, [X31 + 0x20]
	0x03214B98 STP X28, X27, [X31 + 0x30]
	0x03214B9C STP X26, X25, [X31 + 0x40]
	0x03214BA0 STP X24, X23, [X31 + 0x50]
	0x03214BA4 STP X22, X21, [X31 + 0x60]
	0x03214BA8 STP X20, X19, [X31 + 0x70]
	0x03214BAC ADRP X25, 0x11C8000
	0x03214BB0 LDRB W8, [X25 + 0x2C5]
	0x03214BB4 LDP X24, X29, [X31 + 0x80]
	0x03214BB8 MOV X23, X5
	0x03214BBC MOV W26, W4
	0x03214BC0 MOV W21, W3
	0x03214BC4 MOV X20, X2
	0x03214BC8 MOV X22, X1
	0x03214BCC MOV X19, X0
	0x03214BD0 STP W6, W7, [X31 + 0x14]
	0x03214BD4 TBNZ X8, 0x0, 0x3214BEC
	0x03214BD8 ADRP X0, 0xF0D000
	0x03214BDC LDR X0, [X0 + 0xA10]
	0x03214BE0 BL 0x1C16CF4
	0x03214BE4 MOVZ W8, 0x1
	0x03214BE8 STRB W8, [X25 + 0x2C5]
	0x03214BEC STR W31, [X31 + 0x1C]
	0x03214BF0 LDR W27, [X29]
	0x03214BF4 LDR X28, [X29 + 0x18]
	0x03214BF8 LDR W8, [X31 + 0x18]
	0x03214BFC CBZ W8, 0x3214C2C
	0x03214C00 LDR W1, [X29 + 0x28]
	0x03214C04 TBNZ X1, 0x1F, 0x3214C50
	0x03214C08 LDR W2, [X31 + 0x18]
	0x03214C0C MOV X0, X19
	0x03214C10 MOV W3, W27
	0x03214C14 BL 0x3210D14
	0x03214C18 LDR X8, [X24]
	0x03214C1C MOV W24, W0
	0x03214C20 CBNZ X8, 0x3214C64
	0x03214C24 TBZ X24, 0x1F, 0x3214CDC
	0x03214C28 B 0x3214CB4
	0x03214C2C LDR W2, [X20]
	0x03214C30 MOV X0, X19
	0x03214C34 MOV X1, X22
	0x03214C38 MOV W3, W21
	0x03214C3C BL 0x3210680
	0x03214C40 STR X0, [X24]
	0x03214C44 CBZ X0, 0x3214CB4
	0x03214C48 MOV X8, X0
	0x03214C4C B 0x3214C60
	0x03214C50 LDR X28, [X29 + 0x30]
	0x03214C54 CBZ X28, 0x3214EDC
	0x03214C58 LDR X8, [X24]
	0x03214C5C CBZ X8, 0x3214CB4
	0x03214C60 MOVN W24, 0x0
	0x03214C64 LDR X9, [X8 + 0x18]
	0x03214C68 CBZ X9, 0x3214EF0
	0x03214C6C LDR W10, [X20]
	0x03214C70 LDR W9, [X9 + 0x18]
	0x03214C74 ADD W9, W10, W9
	0x03214C78 STR W9, [X20]
	0x03214C7C LDR W9, [X31 + 0x14]
	0x03214C80 TBZ X9, 0x0, 0x3214E84
	0x03214C84 LDR X9, [X8 + 0x28]
	0x03214C88 CBZ X9, 0x3214EAC
	0x03214C8C MOV X8, X31
	0x03214C90 LDRB W9, [X23, X8, LSL]
	0x03214C94 STRB W9, [X28, X8, LSL]
	0x03214C98 ADD X8, X8, 0x1
	0x03214C9C CMP X8, 0x4
	0x03214CA0 B.NE 0x3214C90
	0x03214CA4 MOVN W8, 0x0
	0x03214CA8 STR W8, [X29 + 0x28]
	0x03214CAC STR X28, [X29 + 0x30]
	0x03214CB0 B 0x3214D94
	0x03214CB4 CBZ X22, 0x3214EF0
	0x03214CB8 LDR W1, [X20]
	0x03214CBC MOV X0, X22
	0x03214CC0 MOV X2, X31
	0x03214CC4 BL 0x3222A1C
	0x03214CC8 AND W1, W0, 0xFFFF
	0x03214CCC MOV X0, X19
	0x03214CD0 MOV W2, W27
	0x03214CD4 BL 0x3210B10
	0x03214CD8 MOV W24, W0
	0x03214CDC LDR W8, [X20]
	0x03214CE0 MOV X0, X19
	0x03214CE4 MOV W1, W24
	0x03214CE8 STR W26, [X31 + 0x10]
	0x03214CEC ADD W8, W8, 0x1
	0x03214CF0 STR W8, [X20]
	0x03214CF4 BL 0x32103B0
	0x03214CF8 STRB W0, [X28]
	0x03214CFC LDRB W25, [X23]
	0x03214D00 MOV W26, W0
	0x03214D04 CMP W25, W0, UXTB
	0x03214D08 B.NE 0x3214D1C
	0x03214D0C MOV X0, X19
	0x03214D10 MOV W1, W24
	0x03214D14 BL 0x3210444
	0x03214D18 STRB W0, [X28 + 0x1]
	0x03214D1C TBNZ X27, 0x1, 0x3214D50
	0x03214D20 LDRB W8, [X23 + 0x1]
	0x03214D24 LDRB W9, [X28 + 0x1]
	0x03214D28 CMP W8, W9
	0x03214D2C B.NE 0x3214E3C
	0x03214D30 LDR W2, [X31 + 0x18]
	0x03214D34 MOV X0, X19
	0x03214D38 MOV W1, W24
	0x03214D3C BL 0x32104D8
	0x03214D40 CMP W25, W26, UXTB
	0x03214D44 STRB W0, [X28 + 0x2]
	0x03214D48 B.EQ 0x3214D5C
	0x03214D4C B 0x3214E3C
	0x03214D50 TBZ X27, 0x1, 0x3214E3C
	0x03214D54 CMP W25, W26, UXTB
	0x03214D58 B.NE 0x3214E3C
	0x03214D5C ADRP X8, 0xF0D000
	0x03214D60 LDR X8, [X8 + 0xA10]
	0x03214D64 LDR X0, [X8]
	0x03214D68 LDR W8, [X0 + 0xE0]
	0x03214D6C CBNZ W8, 0x3214D74
	0x03214D70 BL 0x1C16DFC
	0x03214D74 MOV W0, W24
	0x03214D78 BL 0x320E5C4
	0x03214D7C LDRB W8, [X28]
	0x03214D80 LDR W26, [X31 + 0x10]
	0x03214D84 STRB W0, [X28 + 0x3]
	0x03214D88 CMP W8, 0x1
	0x03214D8C B.EQ 0x3214D94
	0x03214D90 STR W24, [X29 + 0x28]
	0x03214D94 LDR W1, [X20]
	0x03214D98 CMP W1, W21
	0x03214D9C B.GE 0x3214E18
	0x03214DA0 CBZ X22, 0x3214EF0
	0x03214DA4 MOV X0, X22
	0x03214DA8 MOV X2, X31
	0x03214DAC BL 0x3222A1C
	0x03214DB0 AND W1, W0, 0xFFFF
	0x03214DB4 MOV X0, X19
	0x03214DB8 BL 0x32103B0
	0x03214DBC AND W8, W0, 0xFF
	0x03214DC0 CMP W8, 0x1
	0x03214DC4 B.NE 0x3214E18
	0x03214DC8 TBNZ X27, 0x1, 0x3214E04
	0x03214DCC LDRB W25, [X28 + 0x2]
	0x03214DD0 CBNZ W25, 0x3214DDC
	0x03214DD4 MOVZ W25, 0x2
	0x03214DD8 STRB W25, [X28 + 0x2]
	0x03214DDC LDR W1, [X20]
	0x03214DE0 MOV X0, X22
	0x03214DE4 MOV X2, X31
	0x03214DE8 BL 0x3222A1C
	0x03214DEC AND W1, W0, 0xFFFF
	0x03214DF0 MOV X0, X19
	0x03214DF4 MOV W2, W31
	0x03214DF8 BL 0x32104D8
	0x03214DFC ADD W8, W0, W25
	0x03214E00 STRB W8, [X28 + 0x2]
	0x03214E04 LDR W8, [X20]
	0x03214E08 ADD W1, W8, 0x1
	0x03214E0C CMP W1, W21
	0x03214E10 STR W1, [X20]
	0x03214E14 B.LT 0x3214DA4
	0x03214E18 LDP W8, W4, [X31 + 0x14]
	0x03214E1C MOV W1, W27
	0x03214E20 MOV X2, X28
	0x03214E24 MOV W3, W24
	0x03214E28 AND W7, W8, 0x1
	0x03214E2C MOV X5, X23
	0x03214E30 MOV W6, W26
	0x03214E34 BL 0x3214EF4
	0x03214E38 B 0x3214E88
	0x03214E3C LDR W1, [X20]
	0x03214E40 CMP W1, W21
	0x03214E44 B.GE 0x3214E84
	0x03214E48 CBZ X22, 0x3214EF0
	0x03214E4C MOV X0, X22
	0x03214E50 MOV X2, X31
	0x03214E54 BL 0x3222A1C
	0x03214E58 AND W1, W0, 0xFFFF
	0x03214E5C MOV X0, X19
	0x03214E60 BL 0x32103B0
	0x03214E64 AND W8, W0, 0xFF
	0x03214E68 CMP W8, 0x1
	0x03214E6C B.NE 0x3214E84
	0x03214E70 LDR W8, [X20]
	0x03214E74 ADD W1, W8, 0x1
	0x03214E78 CMP W1, W21
	0x03214E7C STR W1, [X20]
	0x03214E80 B.LT 0x3214E4C
	0x03214E84 MOV W0, W31
	0x03214E88 LDP X20, X19, [X31 + 0x70]
	0x03214E8C LDP X22, X21, [X31 + 0x60]
	0x03214E90 LDP X24, X23, [X31 + 0x50]
	0x03214E94 LDP X26, X25, [X31 + 0x40]
	0x03214E98 LDP X28, X27, [X31 + 0x30]
	0x03214E9C LDP X29, X30, [X31 + 0x20]
	0x03214EA0 AND W0, W0, 0x1
	0x03214EA4 ADD X31, X31, 0x80
	0x03214EA8 RET
	0x03214EAC STR W31, [X31 + 0x1C]
	0x03214EB0 LDR X1, [X8 + 0x20]
	0x03214EB4 CBZ X1, 0x3214EF0
	0x03214EB8 LDR W3, [X1 + 0x10]
	0x03214EBC ADD X2, X31, 0x1C
	0x03214EC0 MOVZ W6, 0x1
	0x03214EC4 MOV X0, X19
	0x03214EC8 MOV W4, W26
	0x03214ECC MOV X5, X23
	0x03214ED0 MOV X7, X29
	0x03214ED4 BL 0x32140E8
	0x03214ED8 B 0x3214E88
	0x03214EDC LDR W8, [X20]
	0x03214EE0 MOV W0, W31
	0x03214EE4 ADD W8, W8, 0x1
	0x03214EE8 STR W8, [X20]
	0x03214EEC B 0x3214E88
	0x03214EF0 BL 0x1C16F20
	0x03214EF4 STR X30, [X31 - 0x50]!
	0x03214EF8 STP X26, X25, [X31 + 0x10]
	0x03214EFC STP X24, X23, [X31 + 0x20]
	0x03214F00 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x11C9000
	015 Move W8, [X22+707]
	016 Move X21, X6
	017 Move X28, X5
	018 Move W25, W4
	019 Move W24, W3
	020 Move X19, X2
	021 Move X20, X1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xF0E000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xF0E000
	031 Move X0, [X0+3032]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+707], W8
	035 Compare X19, 0
	036 JumpIfEqual {121}
	037 Move W8, [X19+16]
	038 Move W22, [X21]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X27, 0xF0E000
	041 Move X27, [X27+3032]
	042 Move W29, W31
	043 Move X0, X19
	044 Move W1, W29
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move X8, [X27]
	048 Move W26, W0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 And W0, W26, 0xFFFF
	055 Move W1, W22
	056 Call SimpleCollator.IsIgnorable, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {65}
	061 Move W8, [X19+16]
	062 Add W29, W29, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W29, W31
	065 Move W8, [X19+16]
	066 Subtract W3, W8, W29
	067 Move X1, X19
	068 Move W2, W31
	069 Move W4, W29
	070 Call SimpleCollator.IndexOfOrdinal, X0, X1, X2, X3, X4
	071 Move TEMP, X0
	072 And TEMP, TEMP, -2147483648
	073 Compare TEMP, -2147483648
	074 JumpIfEqual {126}
	075 Move X1, X20
	076 Move X2, X19
	077 Move W3, W24
	078 Move W4, W25
	079 Move X20, [X31+112]
	080 Move X19, [X31+120]
	081 Move X22, [X31+96]
	082 Move X21, [X31+104]
	083 Move X24, [X31+80]
	084 Move X23, [X31+88]
	085 Move X26, [X31+64]
	086 Move X25, [X31+72]
	087 Move X28, [X31+48]
	088 Move X27, [X31+56]
	089 Move X29, [X31+32]
	090 Move X30, [X31+40]
	091 Add X31, X31, 128
	092 Move X0, X23
	093 Move X1, X19
	094 Move W2, W29
	095 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	096 Move [X31+16], X28
	097 Compare X0, 0
	098 JumpIfEqual {127}
	099 Move X8, [X0+32]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X31+8], X8
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Move [X31+24], W8
	105 Compare X28, 0
	106 JumpIfEqual {188}
	107 Move X8, [X0+40]
	108 Compare X8, 0
	109 JumpIfEqual {121}
	110 Move X9, X31
	111 Move W10, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X8, X8, X9
	115 Move W8, [X8+32]
	116 Move [X28], W8
	117 Move X8, [X0+40]
	118 Add X9, X9, 1
	119 Compare X8, 0
	120 JumpIfNotEqual {111}
	121 Call 0x1C17F20
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W26, TEMP
	125 Move W22, 1
	126 Move W29, W24
	127 Compare X28, 0
	128 JumpIfEqual {193}
	129 Move X0, X19
	130 Move W1, W29
	131 Move X2, X31
	132 Call String.get_Chars, X0, X1
	133 Move X0, X19
	134 Move W1, W29
	135 Move X2, X31
	136 Call String.get_Chars, X0, X1
	137 And W1, W0, 0xFFFF
	138 Move X0, X23
	139 Move W2, W22
	140 Call SimpleCollator.FilterOptions, X0, X1, X2
	141 Move W26, W0
	142 Move X0, X23
	143 Move W1, W26
	144 Call SimpleCollator.Category, X0, X1
	145 Move [X28], W0
	146 Move X0, X23
	147 Move W1, W26
	148 Call SimpleCollator.Level1, X0, X1
	149 Move [X28+1], W0
	150 Move TEMP, X22
	151 And TEMP, TEMP, 2
	152 Compare TEMP, 2
	153 JumpIfEqual {159}
	154 Move X0, X23
	155 Move W1, W26
	156 Move W2, W31
	157 Call SimpleCollator.Level2, X0, X1, X2
	158 Move [X28+2], W0
	159 Move X8, 0xF0E000
	160 Move X8, [X8+2576]
	161 Move X0, [X8]
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move W0, W26
	167 Call MSCompatUnicodeTable.Level3, X0
	168 Move W8, 0x3041
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X28+3], W0
	171 Add W8, W26, 154
	172 And W8, W8, 0xFFFF
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, W26
	175 ShiftRight W8, 8
	176 And W8, W8, 0x7FFF
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W9, 0x309C
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move TEMP, 0x32CF
	182 Not TEMP
	183 Move W8, TEMP
	184 Add W8, W26, W8
	185 And W8, W8, 0xFFFF
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSET not yet implemented."
	188 Move TEMP, 0
	189 Not TEMP
	190 Move W26, TEMP
	191 Move W22, 1
	192 Move W8, W31
	193 Move TEMP, 0
	194 Not TEMP
	195 Move W26, TEMP
	196 Move W22, 1
	197 Move W8, 1
	198 Move [X31+8], X31
	199 Move [X31+24], W8
	200 Move W8, [X31+24]
	201 Move TEMP, X8
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {237}
	205 Add W27, W24, W25
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X31+28], W24
	208 Add X2, X31, 28
	209 Move X0, X23
	210 Move X1, X20
	211 Move W3, W27
	212 Move W4, W26
	213 Move X5, X28
	214 Move W6, W22
	215 Move X7, X21
	216 Call SimpleCollator.MatchesForward, X0, X1, X2, X3, X4, X5, X6, X7
	217 Move W29, W24
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {246}
	222 Move W29, [X31+28]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add X2, X31, 28
	225 Move X0, X23
	226 Move X1, X20
	227 Move W3, W27
	228 Move W4, W26
	229 Move X5, X28
	230 Move W6, W22
	231 Move X7, X21
	232 Call SimpleCollator.MatchesForward, X0, X1, X2, X3, X4, X5, X6, X7
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {222}
	237 Move X2, [X31+8]
	238 Move X5, [X31+16]
	239 Move X0, X23
	240 Move X1, X20
	241 Move W3, W24
	242 Move W4, W25
	243 Move X6, X21
	244 Call SimpleCollator.IndexOf, X0, X1, X2, X3, X4, X5, X6
	245 Move W29, W0
	246 Move TEMP, X29
	247 And TEMP, TEMP, -2147483648
	248 Compare TEMP, -2147483648
	249 JumpIfNotEqual {257}
	250 Move TEMP, 0
	251 Not TEMP
	252 Move W29, TEMP
	253 Move TEMP, X29
	254 And TEMP, TEMP, -2147483648
	255 Compare TEMP, -2147483648
	256 JumpIfEqual {287}
	257 Subtract W8, W24, W29
	258 Add W25, W8, W25
	259 Move X0, X23
	260 Move X1, X20
	261 Move X2, X19
	262 Move W3, W29
	263 Move W4, W25
	264 Move W5, W31
	265 Move X6, X21
	266 Call SimpleCollator.IsPrefix, X0, X1, X2, X3, X4, X5, X6
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {290}
	271 Move X0, X23
	272 Move X1, X20
	273 Move W2, W29
	274 Move W3, W25
	275 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	276 Compare X0, 0
	277 JumpIfEqual {284}
	278 Move X8, [X0+24]
	279 Compare X8, 0
	280 JumpIfEqual {121}
	281 Move W8, [X8+24]
	282 Add W24, W29, W8
	283 Subtract W25, W25, W8
	284 Add W24, W29, 1
	285 Subtract W25, W25, 1
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move TEMP, 0
	288 Not TEMP
	289 Move W29, TEMP
	290 Move W0, W29
	291 Move X20, [X31+112]
	292 Move X19, [X31+120]
	293 Move X22, [X31+96]
	294 Move X21, [X31+104]
	295 Move X24, [X31+80]
	296 Move X23, [X31+88]
	297 Move X26, [X31+64]
	298 Move X25, [X31+72]
	299 Move X28, [X31+48]
	300 Move X27, [X31+56]
	301 Move X29, [X31+32]
	302 Move X30, [X31+40]
	303 Add X31, X31, 128
	304 Return X0
	305 Move W8, 1
	306 Move W8, 0x3099
	307 NotImplemented "Instruction CMP not yet implemented."
	308 NotImplemented "Instruction CSET not yet implemented."
	309 Move W8, 0x30FB
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction CSET not yet implemented."
	312 Xor W22, W8, 1
	313 Move W8, 1
	314 Move [X31+8], X31
	315 Move [X31+24], W8
	316 Move W8, [X19+16]
	317 Add W29, W29, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X19
	320 Move W1, W29
	321 Move X2, X31
	322 Call String.get_Chars, X0, X1
	323 And W1, W0, 0xFFFF
	324 Move X0, X23
	325 Call SimpleCollator.Category, X0, X1
	326 And W8, W0, 255
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move W27, [X28+2]
	329 Compare W27, 0
	330 JumpIfNotEqual {333}
	331 Move W27, 2
	332 Move [X28+2], W27
	333 Move X0, X19
	334 Move W1, W29
	335 Move X2, X31
	336 Call String.get_Chars, X0, X1
	337 And W1, W0, 0xFFFF
	338 Move X0, X23
	339 Move W2, W31
	340 Call SimpleCollator.Level2, X0, X1, X2
	341 Add W8, W0, W27
	342 Move [X28+2], W8
	343 Call 0x1C17F28

Method: System.Int32 LastIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Globalization.CompareOptions opt)

Disassembly:
	0x0321457C ADD X2, X31, 0x3C
	0x03214580 MOV X0, X25
	0x03214584 MOV X1, X20
	0x03214588 MOV W3, W27
	0x0321458C MOV W5, W21
	0x03214590 MOV X6, X29
	0x03214594 MOV W7, W28
	0x03214598 STR X23, [X31]
	0x0321459C BL 0x32149B8
	0x032145A0 MOV W24, W19
	0x032145A4 TBNZ X0, 0x0, 0x3214604
	0x032145A8 LDR W24, [X31 + 0x3C]
	0x032145AC CMP W24, W27
	0x032145B0 B.LE 0x321460C
	0x032145B4 LDR W4, [X31 + 0x38]
	0x032145B8 ADD X2, X31, 0x3C
	0x032145BC MOV X0, X25
	0x032145C0 MOV X1, X20
	0x032145C4 MOV W3, W27
	0x032145C8 MOV W5, W21
	0x032145CC MOV X6, X29
	0x032145D0 MOV W7, W28
	0x032145D4 STR X23, [X31]
	0x032145D8 BL 0x32149B8
	0x032145DC TBZ X0, 0x0, 0x32145A8
	0x032145E0 B 0x3214604
	0x032145E4 LDP X2, X5, [X31 + 0x20]
	0x032145E8 MOV X0, X25
	0x032145EC MOV X1, X20
	0x032145F0 MOV W3, W19
	0x032145F4 MOV W4, W26
	0x032145F8 MOV X6, X23
	0x032145FC BL 0x32142B4
	0x03214600 MOV W24, W0
	0x03214604 TBZ X24, 0x1F, 0x3214614
	0x03214608 B 0x321468C
	0x0321460C MOVN W24, 0x0
	0x03214610 TBNZ X24, 0x1F, 0x321468C
	0x03214614 LDR W8, [X31 + 0x38]
	0x03214618 MOV X0, X25
	0x0321461C MOV X1, X20
	0x03214620 MOV X2, X22
	0x03214624 SUB W8, W8, W24
	0x03214628 ADD W27, W8, 0x1
	0x0321462C MOV W3, W24
	0x03214630 MOV W4, W27
	0x03214634 MOV W5, W31
	0x03214638 MOV X6, X23
	0x0321463C BL 0x3213460
	0x03214640 TBNZ X0, 0x0, 0x3214694
	0x03214644 SUB W8, W24, W19
	0x03214648 MOV X0, X25
	0x0321464C MOV X1, X20
	0x03214650 MOV W2, W24
	0x03214654 MOV W3, W27
	0x03214658 ADD W26, W8, W26
	0x0321465C BL 0x3210680
	0x03214660 CBZ X0, 0x321467C
	0x03214664 LDR X8, [X0 + 0x18]
	0x03214668 CBZ X8, 0x3214444
	0x0321466C LDR W8, [X8 + 0x18]
	0x03214670 SUB W19, W24, W8
	0x03214674 SUB W26, W26, W8
	0x03214678 B 0x3214684
	0x0321467C SUB W19, W24, 0x1
	0x03214680 SUB W26, W26, 0x1
	0x03214684 CMP W26, 0x0
	0x03214688 B.GT 0x3214560
	0x0321468C MOVN W24, 0x0
	0x03214690 B 0x32146FC
	0x03214694 LDR W8, [X31 + 0x38]
	0x03214698 CMP W24, W8
	0x0321469C B.GE 0x32146FC
	0x032146A0 CBZ X20, 0x3214444
	0x032146A4 ADRP X23, 0xF0D000
	0x032146A8 LDR W22, [X31 + 0x1C]
	0x032146AC LDR X23, [X23 + 0xBD8]
	0x032146B0 MOV X0, X20
	0x032146B4 MOV W1, W24
	0x032146B8 MOV X2, X31
	0x032146BC BL 0x3222A1C
	0x032146C0 LDR X8, [X23]
	0x032146C4 MOV W19, W0
	0x032146C8 LDR W9, [X8 + 0xE0]
	0x032146CC CBNZ W9, 0x32146D8
	0x032146D0 MOV X0, X8
	0x032146D4 BL 0x1C16DFC
	0x032146D8 AND W0, W19, 0xFFFF
	0x032146DC MOV W1, W22
	0x032146E0 BL 0x3210F24
	0x032146E4 TBZ X0, 0x0, 0x32146FC
	0x032146E8 LDR W8, [X31 + 0x38]
	0x032146EC ADD W24, W24, 0x1
	0x032146F0 CMP W8, W24
	0x032146F4 B.NE 0x32146B0
	0x032146F8 LDR W24, [X31 + 0x38]
	0x032146FC MOV W0, W24
	0x03214700 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X29
	002 Move [X31-24], X30
	003 Move [X31+16], X19
	004 Add X29, X31, 0
	005 Subtract X31, X31, 64
	006 NotImplemented "Instruction MRS not yet implemented."
	007 Move X8, [X19+40]
	008 Move W9, 0x10000000
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X29-8], X8
	012 Move [X29-16], X31
	013 Move [X29-48], V0
	014 Move [X29-40], V0
	015 Move [X29-64], V0
	016 Move W8, 0x40000000
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X31, 0
	019 Subtract X9, X8, 16
	020 Add X31, X9, 0
	021 Move [X8-16], X31
	022 Move [X8-8], X31
	023 Add X8, X31, 0
	024 Subtract X10, X8, 16
	025 Add X31, X10, 0
	026 Add X11, X31, 0
	027 Move [X8-16], X31
	028 Move [X8-8], X31
	029 Subtract X8, X11, 16
	030 Add X31, X8, 0
	031 Add X12, X31, 0
	032 Move [X11-16], W31
	033 Subtract X11, X12, 16
	034 Add X31, X11, 0
	035 Add X14, X31, 0
	036 Move [X12-16], W31
	037 Subtract X12, X14, 16
	038 Add X31, X12, 0
	039 Move X13, X31
	040 Move [X14-16], W31
	041 Move [X9], W31
	042 Add X13, X13, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X13, X31
	045 Move [X10], W31
	046 Add X13, X13, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X13, X31
	049 Move [X8], W31
	050 Add X13, X13, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X13, X31
	053 Move [X11], W31
	054 Add X13, X13, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X13, X31
	057 Move [X12], W31
	058 Add X13, X13, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X29-64], W5
	061 Move [X29-56], X10
	062 Move [X29-48], X9
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W9, TEMP
	066 Subtract X6, X29, 64
	067 Move X5, X8
	068 Move [X29-40], X11
	069 Move [X29-32], X12
	070 Move [X29-16], X31
	071 Move [X29-24], W9
	072 Call SimpleCollator.LastIndexOf, X0, X1, X2, X3, X4, X5, X6
	073 Move X8, [X19+40]
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X31, X29, 0
	077 Move X19, [X31+16]
	078 Move X29, [X31+32]
	079 Move X30, [X31+40]
	080 Return X0
	081 Move X0, 0xEE0000
	082 Move X0, [X0+2880]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0xF0E000
	087 Move X0, [X0+3072]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call NotSupportedException..ctor, X0, X1
	093 Move X0, 0xF0E000
	094 Move X0, [X0+3080]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Call 0x1C17DEC
	099 Call 0x3EB2B20

Method: System.Int32 LastIndexOfOrdinal(System.String s, System.String target, System.Int32 start, System.Int32 length)

Disassembly:
	0x032157E0 LDR X0, [X0 + 0x618]
	0x032157E4 BL 0x1C16CF4
	0x032157E8 ADRP X0, 0xF0C000
	0x032157EC LDR X0, [X0 + 0xC18]
	0x032157F0 BL 0x1C16CF4
	0x032157F4 MOVZ W8, 0x1
	0x032157F8 STRB W8, [X20 + 0x2CB]
	0x032157FC LDR X20, [X19 + 0x50]
	0x03215800 CBZ X20, 0x3215C78
	0x03215804 ADRP X22, 0xEDE000
	0x03215808 ADRP X24, 0xF0C000
	0x0321580C LDR W8, [X20 + 0x10]
	0x03215810 LDR X22, [X22 + 0x618]
	0x03215814 LDR X24, [X24 + 0xC18]
	0x03215818 CBZ W8, 0x3215868
	0x0321581C LDRB W8, [X19 + 0x81]
	0x03215820 CBZ W8, 0x32158F0
	0x03215824 LDRB W8, [X19 + 0x82]
	0x03215828 CBNZ W8, 0x32158F0
	0x0321582C LDR X0, [X19 + 0x18]
	0x03215830 CBZ X0, 0x32158F0
	0x03215834 LDR W8, [X0 + 0x18]
	0x03215838 CMP W8, 0x1
	0x0321583C B.LT 0x32158D0
	0x03215840 MOV X2, X31
	0x03215844 ADD X9, X0, 0x20
	0x03215848 CMP W2, W8
	0x0321584C B.CS 0x3215C74
	0x03215850 LDRB W10, [X9, X2, LSL]
	0x03215854 CBZ W10, 0x32158D4
	0x03215858 ADD X2, X2, 0x1
	0x0321585C CMP W2, W8
	0x03215860 B.LT 0x3215848
	0x03215864 B 0x32158D4
	0x03215868 LDR X0, [X22]
	0x0321586C LDR W21, [X19 + 0x78]
	0x03215870 MOV W1, W31
	0x03215874 BL 0x1C16D6C
	0x03215878 LDR X8, [X24]
	0x0321587C LDR W19, [X19 + 0x7C]
	0x03215880 MOV X22, X0
	0x03215884 MOV X0, X8
	0x03215888 BL 0x1C16F10
	0x0321588C MOV W1, W21
	0x03215890 MOV X2, X20
	0x03215894 MOV X3, X22
	0x03215898 MOV W4, W19
	0x0321589C MOV W5, W31
	0x032158A0 MOV W6, W31
	0x032158A4 MOV W7, W31
	0x032158A8 MOV X23, X0
	0x032158AC STR X31, [X31 + 0x28]
	0x032158B0 STR W31, [X31 + 0x20]
	0x032158B4 STR W31, [X31 + 0x18]
	0x032158B8 STR W31, [X31 + 0x10]
	0x032158BC STR W31, [X31 + 0x8]
	0x032158C0 STR W31, [X31]
	0x032158C4 BL 0x333FCE4
	0x032158C8 MOV X0, X23
	0x032158CC B 0x3215C54
	0x032158D0 MOV W2, W31
	0x032158D4 ADRP X8, 0xF0C000
	0x032158D8 LDR X8, [X8 + 0x180]
	0x032158DC MOV W1, W31
	0x032158E0 LDR X3, [X8]
	0x032158E4 BL 0x2149E40
	0x032158E8 MOVZ W8, 0x1
	0x032158EC STRB W8, [X19 + 0x82]
	0x032158F0 LDR X1, [X19 + 0x18]
	0x032158F4 LDR W2, [X19 + 0x5C]
	0x032158F8 MOVZ W3, 0x2
	0x032158FC BL 0x3215C7C
	0x03215900 LDR X1, [X19 + 0x20]
	0x03215904 LDR W2, [X19 + 0x60]
	0x03215908 MOVZ W3, 0x2
	0x0321590C STR W0, [X19 + 0x5C]
	0x03215910 BL 0x3215C7C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Compare X2, 0
	013 JumpIfEqual {85}
	014 Move W8, [X2+16]
	015 Move W19, W3
	016 Move X20, X2
	017 Compare W8, 0
	018 JumpIfEqual {68}
	019 Move X21, X1
	020 Compare X1, 0
	021 JumpIfEqual {85}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W23, TEMP
	026 Move W9, [X21+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W1, W8, 1
	029 Add W8, W1, W19
	030 Move X0, X20
	031 Move X2, X31
	032 Subtract W26, W8, W4
	033 Call String.get_Chars, X0, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W22, W0
	036 Subtract W27, W19, 1
	037 Move X0, X21
	038 Move W1, W19
	039 Move X2, X31
	040 Call String.get_Chars, X0, X1
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, [X20+16]
	044 Subtract W9, W19, W8
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add W23, W9, 1
	047 Subtract W24, W8, 1
	048 Move W25, W27
	049 Move X0, X21
	050 Move W1, W25
	051 Move X2, X31
	052 Subtract W24, W24, 1
	053 Call String.get_Chars, X0, X1
	054 And W28, W0, 0xFFFF
	055 Move X0, X20
	056 Move W1, W24
	057 Move X2, X31
	058 Call String.get_Chars, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract W25, W25, 1
	062 Subtract W19, W19, 1
	063 Subtract W27, W27, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W23, TEMP
	068 Move W23, W19
	069 Move TEMP, 0
	070 Not TEMP
	071 Move W23, TEMP
	072 Move W0, W23
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X22, [X31+64]
	076 Move X21, [X31+72]
	077 Move X24, [X31+48]
	078 Move X23, [X31+56]
	079 Move X26, [X31+32]
	080 Move X25, [X31+40]
	081 Move X28, [X31+16]
	082 Move X27, [X31+24]
	083 Move X30, [X31+96]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Int32 LastIndexOfSortKey(System.String s, System.Int32 start, System.Int32 orgStart, System.Int32 length, System.Byte* sortkey, System.Int32 ti, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x03215914 LDR W21, [X19 + 0x64]
	0x03215918 LDR X1, [X19 + 0x28]
	0x0321591C MOVZ W3, 0xE4
	0x03215920 STR W0, [X19 + 0x60]
	0x03215924 MOV W2, W21
	0x03215928 BL 0x3215C7C
	0x0321592C LDR X1, [X19 + 0x30]
	0x03215930 LDR W2, [X19 + 0x68]
	0x03215934 MOVZ W3, 0x3
	0x03215938 STR W0, [X19 + 0x64]
	0x0321593C BL 0x3215C7C
	0x03215940 LDR X1, [X19 + 0x38]
	0x03215944 LDR W2, [X19 + 0x6C]
	0x03215948 MOVZ W3, 0xE4
	0x0321594C STR W0, [X19 + 0x68]
	0x03215950 BL 0x3215C7C
	0x03215954 LDR X1, [X19 + 0x40]
	0x03215958 LDR W2, [X19 + 0x70]
	0x0321595C MOVZ W3, 0xE4
	0x03215960 STR W0, [X19 + 0x6C]
	0x03215964 BL 0x3215C7C
	0x03215968 LDR X1, [X19 + 0x48]
	0x0321596C LDR W2, [X19 + 0x74]
	0x03215970 MOVZ W3, 0x2
	0x03215974 STR W0, [X19 + 0x70]
	0x03215978 BL 0x3215C7C
	0x0321597C LDUR V0, [X19 + 0x64]
	0x03215980 LDP W9, W10, [X19 + 0x58]
	0x03215984 LDR W11, [X19 + 0x60]
	0x03215988 STR W0, [X19 + 0x74]
	0x0321598C UNIMPLEMENTED
	0x03215990 LDR X8, [X22]
	0x03215994 ADD W9, W0, W9
	0x03215998 FMOV W12, S0
	0x0321599C CMP W21, 0x0
	0x032159A0 ADD W12, W12, 0x4
	0x032159A4 ADD W9, W9, W10
	0x032159A8 CSEL W10, W12, W31, GT
	0x032159AC ADD W9, W9, W11
	0x032159B0 ADD W9, W9, W10
	0x032159B4 ADD W1, W9, 0x5

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Subtract W25, W2, W4
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X31+28], W2
	015 Move X27, [X31+112]
	016 Move W20, W6
	017 Move X21, X5
	018 Move W22, W3
	019 Move W19, W2
	020 Move X23, X1
	021 Move X24, X0
	022 And W26, W7, 1
	023 Add X2, X31, 28
	024 Move X0, X24
	025 Move X1, X23
	026 Move W3, W25
	027 Move W4, W22
	028 Move W5, W20
	029 Move X6, X21
	030 Move W7, W26
	031 Move [X31], X27
	032 Call SimpleCollator.MatchesBackward, X0, X1, X2, X3, X4, X5, X6, X7, X8
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move W19, [X31+28]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W19, TEMP
	042 Move W0, W19
	043 Move X20, [X31+96]
	044 Move X19, [X31+104]
	045 Move X22, [X31+80]
	046 Move X21, [X31+88]
	047 Move X24, [X31+64]
	048 Move X23, [X31+72]
	049 Move X26, [X31+48]
	050 Move X25, [X31+56]
	051 Move X30, [X31+32]
	052 Move X27, [X31+40]
	053 Add X31, X31, 112
	054 Return X0

Method: System.Int32 LastIndexOf(System.String s, System.String target, System.Int32 start, System.Int32 length, System.Byte* targetSortKey, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x032152B4 LDR W8, [X19]
	0x032152B8 MOV W29, W0
	0x032152BC MOV X0, X22
	0x032152C0 MOV W1, W29
	0x032152C4 SUB W8, W8, 0x1
	0x032152C8 STR W8, [X19]
	0x032152CC BL 0x32103B0
	0x032152D0 STRB W0, [X26]
	0x032152D4 LDRB W21, [X20]
	0x032152D8 MOV W19, W0
	0x032152DC CMP W21, W0, UXTB
	0x032152E0 B.NE 0x32152F4
	0x032152E4 MOV X0, X22
	0x032152E8 MOV W1, W29
	0x032152EC BL 0x3210444
	0x032152F0 STRB W0, [X26 + 0x1]
	0x032152F4 TBNZ X27, 0x1, 0x3215458
	0x032152F8 LDRB W8, [X26 + 0x1]
	0x032152FC LDRB W9, [X20 + 0x1]
	0x03215300 CMP W8, W9
	0x03215304 B.NE 0x3215434
	0x03215308 LDR W2, [X31 + 0x2C]
	0x0321530C MOV X0, X22
	0x03215310 MOV W1, W29
	0x03215314 BL 0x32104D8
	0x03215318 CMP W21, W19, UXTB
	0x0321531C STRB W0, [X26 + 0x2]
	0x03215320 B.NE 0x3215434
	0x03215324 B 0x3215468
	0x03215328 LDR W2, [X31 + 0x2C]
	0x0321532C MOV W23, W0
	0x03215330 MOV X0, X22
	0x03215334 MOV W1, W24
	0x03215338 MOV W3, W27
	0x0321533C BL 0x3210D14
	0x03215340 MOV W29, W0
	0x03215344 MOV X0, X22
	0x03215348 MOV W1, W29
	0x0321534C STRB W23, [X26]
	0x03215350 BL 0x3210444
	0x03215354 STRB W0, [X26 + 0x1]
	0x03215358 TBNZ X27, 0x1, 0x3215370
	0x0321535C LDR W2, [X31 + 0x2C]
	0x03215360 MOV X0, X22
	0x03215364 MOV W1, W29
	0x03215368 BL 0x32104D8
	0x0321536C STRB W0, [X26 + 0x2]
	0x03215370 ADRP X8, 0xF0C000
	0x03215374 LDR X8, [X8 + 0xA10]
	0x03215378 LDP W28, W24, [X31 + 0x14]
	0x0321537C LDR W23, [X31 + 0x3C]
	0x03215380 LDR X0, [X8]
	0x03215384 LDR W8, [X0 + 0xE0]
	0x03215388 CBNZ W8, 0x3215390
	0x0321538C BL 0x1C16DFC
	0x03215390 MOV W0, W29
	0x03215394 BL 0x320E5C4
	0x03215398 LDR W8, [X31 + 0x2C]
	0x0321539C STRB W0, [X26 + 0x3]
	0x032153A0 CMP W8, 0x3
	0x032153A4 B.EQ 0x32153C4
	0x032153A8 ANDS W31, W21, 0xFF
	0x032153AC B.EQ 0x32153C4
	0x032153B0 LDRB W8, [X26 + 0x2]
	0x032153B4 ADD W9, W21, 0x2
	0x032153B8 CMP W8, 0x0
	0x032153BC CSEL W8, W9, W21, EQ
	0x032153C0 STRB W8, [X26 + 0x2]
	0x032153C4 LDR W8, [X19]
	0x032153C8 SUB W8, W8, 0x1
	0x032153CC STR W8, [X19]
	0x032153D0 LDR X8, [X31 + 0x30]
	0x032153D4 LDR X0, [X8]
	0x032153D8 CBZ X0, 0x3215524
	0x032153DC LDR X8, [X0 + 0x18]
	0x032153E0 CBZ X8, 0x321559C
	0x032153E4 LDR W9, [X19]
	0x032153E8 LDR W8, [X8 + 0x18]
	0x032153EC SUB W8, W9, W8
	0x032153F0 STR W8, [X19]
	0x032153F4 TBZ X28, 0x0, 0x3215434
	0x032153F8 LDR X8, [X0 + 0x28]
	0x032153FC CBZ X8, 0x3215560
	0x03215400 MOV X8, X31
	0x03215404 LDRB W9, [X20, X8, LSL]
	0x03215408 STRB W9, [X26, X8, LSL]
	0x0321540C ADD X8, X8, 0x1
	0x03215410 CMP X8, 0x4
	0x03215414 B.NE 0x3215404
	0x03215418 LDR X9, [X31 + 0x20]
	0x0321541C MOVN W8, 0x0
	0x03215420 STR W8, [X9 + 0x28]
	0x03215424 LDR W8, [X31 + 0x2C]
	0x03215428 STR X26, [X9 + 0x30]
	0x0321542C CBNZ W8, 0x3215524
	0x03215430 B 0x32154A0
	0x03215434 MOV W0, W31
	0x03215438 LDP X20, X19, [X31 + 0x90]
	0x0321543C LDP X22, X21, [X31 + 0x80]
	0x03215440 LDP X24, X23, [X31 + 0x70]
	0x03215444 LDP X26, X25, [X31 + 0x60]
	0x03215448 LDP X28, X27, [X31 + 0x50]
	0x0321544C LDP X29, X30, [X31 + 0x40]
	0x03215450 ADD X31, X31, 0xA0
	0x03215454 RET
	0x03215458 MOV W0, W31
	0x0321545C TBZ X27, 0x1, 0x3215438
	0x03215460 CMP W21, W19, UXTB
	0x03215464 B.NE 0x3215438
	0x03215468 ADRP X8, 0xF0C000
	0x0321546C LDR X8, [X8 + 0xA10]
	0x03215470 LDR X0, [X8]
	0x03215474 LDR W8, [X0 + 0xE0]
	0x03215478 CBNZ W8, 0x3215480
	0x0321547C BL 0x1C16DFC
	0x03215480 MOV W0, W29
	0x03215484 BL 0x320E5C4
	0x03215488 LDRB W8, [X26]
	0x0321548C STRB W0, [X26 + 0x3]
	0x03215490 CMP W8, 0x1
	0x03215494 B.EQ 0x32154A0
	0x03215498 LDR X8, [X31 + 0x20]
	0x0321549C STR W29, [X8 + 0x28]
	0x032154A0 LDR W8, [X31 + 0x1C]
	0x032154A4 ADD W19, W8, 0x1
	0x032154A8 CMP W19, W23
	0x032154AC B.GE 0x3215524
	0x032154B0 CBZ X25, 0x321559C
	0x032154B4 MOV X0, X25
	0x032154B8 MOV W1, W19
	0x032154BC MOV X2, X31
	0x032154C0 BL 0x3222A1C
	0x032154C4 AND W1, W0, 0xFFFF
	0x032154C8 MOV X0, X22
	0x032154CC BL 0x32103B0
	0x032154D0 AND W8, W0, 0xFF
	0x032154D4 CMP W8, 0x1
	0x032154D8 B.NE 0x3215524
	0x032154DC TBNZ X27, 0x1, 0x3215518
	0x032154E0 LDRB W21, [X26 + 0x2]
	0x032154E4 CBNZ W21, 0x32154F0
	0x032154E8 MOVZ W21, 0x2
	0x032154EC STRB W21, [X26 + 0x2]
	0x032154F0 MOV X0, X25
	0x032154F4 MOV W1, W19
	0x032154F8 MOV X2, X31
	0x032154FC BL 0x3222A1C
	0x03215500 AND W1, W0, 0xFFFF
	0x03215504 MOV X0, X22
	0x03215508 MOV W2, W31
	0x0321550C BL 0x32104D8
	0x03215510 ADD W8, W0, W21
	0x03215514 STRB W8, [X26 + 0x2]
	0x03215518 ADD W19, W19, 0x1
	0x0321551C CMP W23, W19
	0x03215520 B.NE 0x32154B4
	0x03215524 AND W7, W28, 0x1
	0x03215528 MOV W1, W27
	0x0321552C MOV X2, X26
	0x03215530 MOV W3, W29
	0x03215534 LDR W4, [X31 + 0x2C]
	0x03215538 MOV X5, X20
	0x0321553C MOV W6, W24
	0x03215540 LDP X20, X19, [X31 + 0x90]
	0x03215544 LDP X22, X21, [X31 + 0x80]
	0x03215548 LDP X24, X23, [X31 + 0x70]
	0x0321554C LDP X26, X25, [X31 + 0x60]
	0x03215550 LDP X28, X27, [X31 + 0x50]
	0x03215554 LDP X29, X30, [X31 + 0x40]
	0x03215558 ADD X31, X31, 0xA0
	0x0321555C B 0x3214EF4
	0x03215560 LDR X1, [X0 + 0x20]
	0x03215564 CBZ X1, 0x321559C
	0x03215568 LDR W4, [X1 + 0x10]
	0x0321556C LDR X8, [X31 + 0x20]
	0x03215570 MOVZ W7, 0x1
	0x03215574 MOV X0, X22
	0x03215578 SUB W2, W4, 0x1
	0x0321557C MOV W3, W2
	0x03215580 MOV X5, X20
	0x03215584 MOV W6, W24
	0x03215588 STR X8, [X31]
	0x0321558C BL 0x3214914
	0x03215590 ORN W8, W31, W0, 0x0
	0x03215594 UBFM W0, W8, 0x1F, 0x1F
	0x03215598 B 0x3215438
	0x0321559C BL 0x1C16F20
	0x032155A0 STP X30, X21, [X31 - 0x20]!
	0x032155A4 STP X20, X19, [X31 + 0x10]
	0x032155A8 ADRP X20, 0x11C7000
	0x032155AC ADRP X19, 0xEE0000
	0x032155B0 LDRB W8, [X20 + 0x2C8]
	0x032155B4 LDR X19, [X19 + 0xC48]
	0x032155B8 TBNZ X8, 0x0, 0x32155DC
	0x032155BC ADRP X0, 0xEE0000
	0x032155C0 LDR X0, [X0 + 0xC48]
	0x032155C4 BL 0x1C16CF4
	0x032155C8 ADRP X0, 0xF0C000
	0x032155CC LDR X0, [X0 + 0xBD8]
	0x032155D0 BL 0x1C16CF4
	0x032155D4 MOVZ W8, 0x1
	0x032155D8 STRB W8, [X20 + 0x2C8]
	0x032155DC LDR X0, [X19]
	0x032155E0 ADRP X21, 0xF0C000
	0x032155E4 LDR W8, [X0 + 0xE0]
	0x032155E8 LDR X21, [X21 + 0xBD8]
	0x032155EC CBNZ W8, 0x32155F4
	0x032155F0 BL 0x1C16DFC
	0x032155F4 MOV X0, X31
	0x032155F8 BL 0x3338524
	0x032155FC LDR X8, [X21]
	0x03215600 MOV X19, X0
	0x03215604 MOV X0, X8
	0x03215608 BL 0x1C16F10
	0x0321560C MOV X1, X19
	0x03215610 MOV X20, X0
	0x03215614 BL 0x320FF38
	0x03215618 LDR X8, [X21]
	0x0321561C LDR X8, [X8 + 0xB8]
	0x03215620 STR X20, [X8]
	0x03215624 LDP X20, X19, [X31 + 0x10]
	0x03215628 LDP X30, X21, [X31], #0x20
	0x0321562C RET
	0x03215630 MOVI V0.2D, 0x0
	0x03215634 STRB W31, [X0 + 0x82]
	0x03215638 STUR V0, [X0 + 0x58]
	0x0321563C STUR V0, [X0 + 0x68]
	0x03215640 RET
	0x03215644 STR X30, [X31 - 0x30]!
	0x03215648 STP X22, X21, [X31 + 0x10]
	0x0321564C STP X20, X19, [X31 + 0x20]
	0x03215650 ADRP X22, 0x11C7000
	0x03215654 LDRB W8, [X22 + 0x2CA]
	0x03215658 MOV X20, X3
	0x0321565C MOV X19, X2
	0x03215660 MOV W21, W1
	0x03215664 TBNZ X8, 0x0, 0x321567C
	0x03215668 ADRP X0, 0xEDE000
	0x0321566C LDR X0, [X0 + 0x618]
	0x03215670 BL 0x1C16CF4
	0x03215674 MOVZ W8, 0x1
	0x03215678 STRB W8, [X22 + 0x2CA]
	0x0321567C LDRSW X8, [X20]
	0x03215680 LDR X9, [X19]
	0x03215684 ADD W10, W8, 0x1
	0x03215688 STR W10, [X20]
	0x0321568C CBZ X9, 0x3215704
	0x03215690 LDR W10, [X9 + 0x18]
	0x03215694 CMP W8, W10
	0x03215698 B.CS 0x3215708
	0x0321569C ADD X8, X9, X8
	0x032156A0 STRB W21, [X8 + 0x20]
	0x032156A4 LDR X9, [X19]
	0x032156A8 CBZ X9, 0x3215704
	0x032156AC LDR W8, [X20]
	0x032156B0 LDR W9, [X9 + 0x18]
	0x032156B4 CMP W8, W9
	0x032156B8 B.NE 0x32156F4
	0x032156BC ADRP X9, 0xEDE000
	0x032156C0 LDR X9, [X9 + 0x618]
	0x032156C4 UBFM W1, W8, 0x1F, 0x1E
	0x032156C8 LDR X0, [X9]
	0x032156CC BL 0x1C16D6C
	0x032156D0 LDR X8, [X19]
	0x032156D4 CBZ X8, 0x3215704
	0x032156D8 LDR W2, [X8 + 0x18]
	0x032156DC MOV X20, X0
	0x032156E0 MOV X0, X8
	0x032156E4 MOV X1, X20
	0x032156E8 MOV X3, X31
	0x032156EC BL 0x33A0C7C
	0x032156F0 STR X20, [X19]
	0x032156F4 LDP X20, X19, [X31 + 0x20]
	0x032156F8 LDP X22, X21, [X31 + 0x10]
	0x032156FC LDR X30, [X31], #0x30
	0x03215700 RET
	0x03215704 BL 0x1C16F20
	0x03215708 BL 0x1C16F28
	0x0321570C STP X30, X23, [X31 - 0x30]!
	0x03215710 STP X22, X21, [X31 + 0x10]
	0x03215714 STP X20, X19, [X31 + 0x20]
	0x03215718 LDR W8, [X0 + 0x5C]
	0x0321571C ADD X21, X0, 0x48
	0x03215720 ADD X22, X0, 0x74
	0x03215724 MOV W19, W2
	0x03215728 ADD W9, W8, 0x1
	0x0321572C ADD W10, W8, 0x2000
	0x03215730 CMP W9, 0x0
	0x03215734 CSINC W8, W10, W8, LT
	0x03215738 AND W8, W8, 0xFFFFE000
	0x0321573C SUB W23, W9, W8
	0x03215740 SXTH W8, W23
	0x03215744 UBFM W8, W8, 0x19, 0x1E
	0x03215748 ADD W8, W23, W8
	0x0321574C UBFM W8, W8, 0x6, 0xF
	0x03215750 MOV W20, W1
	0x03215754 EOR W1, W8, 0xFFFFFF80
	0x03215758 MOV X2, X21
	0x0321575C MOV X3, X22
	0x03215760 BL 0x3215644
	0x03215764 MOVZ W1, 0x3
	0x03215768 BFM W1, W23, 0x1E, 0x1D
	0x0321576C MOV X2, X21
	0x03215770 MOV X3, X22
	0x03215774 BL 0x3215644
	0x03215778 MOV W1, W20
	0x0321577C MOV X2, X21
	0x03215780 MOV X3, X22
	0x03215784 BL 0x3215644
	0x03215788 MOV W1, W19
	0x0321578C MOV X2, X21
	0x03215790 MOV X3, X22
	0x03215794 LDP X20, X19, [X31 + 0x20]
	0x03215798 LDP X22, X21, [X31 + 0x10]
	0x0321579C LDP X30, X23, [X31], #0x30
	0x032157A0 B 0x3215644
	0x032157A4 SUB X31, X31, 0xA0
	0x032157A8 STP X29, X30, [X31 + 0x40]
	0x032157AC STP X28, X27, [X31 + 0x50]
	0x032157B0 STP X26, X25, [X31 + 0x60]
	0x032157B4 STP X24, X23, [X31 + 0x70]
	0x032157B8 STP X22, X21, [X31 + 0x80]
	0x032157BC STP X20, X19, [X31 + 0x90]
	0x032157C0 ADRP X20, 0x11C7000
	0x032157C4 LDRB W8, [X20 + 0x2CB]
	0x032157C8 MOV X19, X0
	0x032157CC TBNZ X8, 0x0, 0x32157FC
	0x032157D0 ADRP X0, 0xF0C000
	0x032157D4 LDR X0, [X0 + 0x180]
	0x032157D8 BL 0x1C16CF4
	0x032157DC ADRP X0, 0xEDE000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x11C8000
	015 Move W8, [X19+708]
	016 Move X23, X6
	017 Move X29, X5
	018 Move W26, W4
	019 Move X22, X2
	020 Move X20, X1
	021 Move X25, X0
	022 Move [X31+56], W3
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0xF0D000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xF0D000
	031 Move X0, [X0+3032]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+708], W8
	035 Compare X22, 0
	036 JumpIfEqual {121}
	037 Move W8, [X22+16]
	038 Move X28, 0xF0D000
	039 Move W27, [X23]
	040 Move X28, [X28+3032]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W24, W31
	043 Move X0, X22
	044 Move W1, W24
	045 Move X2, X31
	046 Call String.get_Chars, X0, X1
	047 Move X8, [X28]
	048 Move W19, W0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 And W0, W19, 0xFFFF
	055 Move W1, W27
	056 Call SimpleCollator.IsIgnorable, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {64}
	061 Move W8, [X22+16]
	062 Add W24, W24, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X22+16]
	065 Subtract W3, W8, W24
	066 Move X1, X22
	067 Move W2, W31
	068 Move W4, W24
	069 Call SimpleCollator.IndexOfOrdinal, X0, X1, X2, X3, X4
	070 Move TEMP, X0
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfEqual {321}
	074 Move X1, X20
	075 Move X2, X22
	076 Move W3, [X31+56]
	077 Move W4, W26
	078 Move X20, [X31+144]
	079 Move X19, [X31+152]
	080 Move X22, [X31+128]
	081 Move X21, [X31+136]
	082 Move X24, [X31+112]
	083 Move X23, [X31+120]
	084 Move X26, [X31+96]
	085 Move X25, [X31+104]
	086 Move X28, [X31+80]
	087 Move X27, [X31+88]
	088 Move X29, [X31+64]
	089 Move X30, [X31+72]
	090 Add X31, X31, 160
	091 Move X0, X25
	092 Move X1, X22
	093 Move W2, W24
	094 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	095 Move [X31+28], W27
	096 Move [X31+40], X29
	097 Compare X0, 0
	098 JumpIfEqual {126}
	099 Move X8, [X0+32]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X31+32], X8
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Move [X31+52], W8
	105 Compare X29, 0
	106 JumpIfEqual {184}
	107 Move X8, [X0+40]
	108 Compare X8, 0
	109 JumpIfEqual {121}
	110 Move X9, X31
	111 Move W10, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X8, X8, X9
	115 Move W8, [X8+32]
	116 Move [X29], W8
	117 Move X8, [X0+40]
	118 Add X9, X9, 1
	119 Compare X8, 0
	120 JumpIfNotEqual {111}
	121 Call 0x1C17F20
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W21, TEMP
	125 Move W28, 1
	126 Compare X29, 0
	127 JumpIfEqual {190}
	128 Move X0, X22
	129 Move W1, W24
	130 Move X2, X31
	131 Call String.get_Chars, X0, X1
	132 And W1, W0, 0xFFFF
	133 Move X0, X25
	134 Move W2, W27
	135 Call SimpleCollator.FilterOptions, X0, X1, X2
	136 Move W19, W0
	137 Move X0, X25
	138 Move W1, W19
	139 Call SimpleCollator.Category, X0, X1
	140 Move [X29], W0
	141 Move X0, X25
	142 Move W1, W19
	143 Call SimpleCollator.Level1, X0, X1
	144 Move [X29+1], W0
	145 Move TEMP, X27
	146 And TEMP, TEMP, 2
	147 Compare TEMP, 2
	148 JumpIfEqual {154}
	149 Move X0, X25
	150 Move W1, W19
	151 Move W2, W31
	152 Call SimpleCollator.Level2, X0, X1, X2
	153 Move [X29+2], W0
	154 Move X8, 0xF0D000
	155 Move X8, [X8+2576]
	156 Move X0, [X8]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move W0, W19
	162 Call MSCompatUnicodeTable.Level3, X0
	163 Move W8, 0x3041
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X29+3], W0
	166 Add W8, W19, 154
	167 And W8, W8, 0xFFFF
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W8, W19
	170 ShiftRight W8, 8
	171 And W8, W8, 0x7FFF
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move W9, 0x309C
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move TEMP, 0x32CF
	177 Not TEMP
	178 Move W8, TEMP
	179 Add W8, W19, W8
	180 And W8, W8, 0xFFFF
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move W21, W19
	183 NotImplemented "Instruction CSET not yet implemented."
	184 Move TEMP, 0
	185 Not TEMP
	186 Move W21, TEMP
	187 Move W28, 1
	188 Move W21, W19
	189 Move W8, W31
	190 Move W8, 1
	191 Move [X31+32], X31
	192 Move TEMP, 0
	193 Not TEMP
	194 Move W21, TEMP
	195 Move W28, 1
	196 Move [X31+52], W8
	197 Move W19, [X31+56]
	198 Move W8, [X31+52]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {237}
	203 Subtract W27, W19, W26
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move [X31+60], W19
	206 Move W4, [X31+56]
	207 Add X2, X31, 60
	208 Move X0, X25
	209 Move X1, X20
	210 Move W3, W27
	211 Move W5, W21
	212 Move X6, X29
	213 Move W7, W28
	214 Move [X31], X23
	215 Call SimpleCollator.MatchesBackward, X0, X1, X2, X3, X4, X5, X6, X7, X8
	216 Move W24, W19
	217 Move TEMP, X0
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfEqual {246}
	221 Move W24, [X31+60]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W4, [X31+56]
	224 Add X2, X31, 60
	225 Move X0, X25
	226 Move X1, X20
	227 Move W3, W27
	228 Move W5, W21
	229 Move X6, X29
	230 Move W7, W28
	231 Move [X31], X23
	232 Call SimpleCollator.MatchesBackward, X0, X1, X2, X3, X4, X5, X6, X7, X8
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {221}
	237 Move X2, [X31+32]
	238 Move X5, [X31+40]
	239 Move X0, X25
	240 Move X1, X20
	241 Move W3, W19
	242 Move W4, W26
	243 Move X6, X23
	244 Call SimpleCollator.LastIndexOf, X0, X1, X2, X3, X4, X5, X6
	245 Move W24, W0
	246 Move TEMP, X24
	247 And TEMP, TEMP, -2147483648
	248 Compare TEMP, -2147483648
	249 JumpIfNotEqual {257}
	250 Move TEMP, 0
	251 Not TEMP
	252 Move W24, TEMP
	253 Move TEMP, X24
	254 And TEMP, TEMP, -2147483648
	255 Compare TEMP, -2147483648
	256 JumpIfEqual {290}
	257 Move W8, [X31+56]
	258 Move X0, X25
	259 Move X1, X20
	260 Move X2, X22
	261 Subtract W8, W8, W24
	262 Add W27, W8, 1
	263 Move W3, W24
	264 Move W4, W27
	265 Move W5, W31
	266 Move X6, X23
	267 Call SimpleCollator.IsPrefix, X0, X1, X2, X3, X4, X5, X6
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {293}
	272 Subtract W8, W24, W19
	273 Move X0, X25
	274 Move X1, X20
	275 Move W2, W24
	276 Move W3, W27
	277 Add W26, W8, W26
	278 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	279 Compare X0, 0
	280 JumpIfEqual {287}
	281 Move X8, [X0+24]
	282 Compare X8, 0
	283 JumpIfEqual {121}
	284 Move W8, [X8+24]
	285 Subtract W19, W24, W8
	286 Subtract W26, W26, W8
	287 Subtract W19, W24, 1
	288 Subtract W26, W26, 1
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move TEMP, 0
	291 Not TEMP
	292 Move W24, TEMP
	293 Move W8, [X31+56]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Compare X20, 0
	296 JumpIfEqual {121}
	297 Move X23, 0xF0D000
	298 Move W22, [X31+28]
	299 Move X23, [X23+3032]
	300 Move X0, X20
	301 Move W1, W24
	302 Move X2, X31
	303 Call String.get_Chars, X0, X1
	304 Move X8, [X23]
	305 Move W19, W0
	306 Move W9, [X8+224]
	307 Compare W9, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X8
	310 Call 0x1C17DFC
	311 And W0, W19, 0xFFFF
	312 Move W1, W22
	313 Call SimpleCollator.IsIgnorable, X0, X1
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {322}
	318 Move W8, [X31+56]
	319 Add W24, W24, 1
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move W24, [X31+56]
	322 Move W0, W24
	323 Move X20, [X31+144]
	324 Move X19, [X31+152]
	325 Move X22, [X31+128]
	326 Move X21, [X31+136]
	327 Move X24, [X31+112]
	328 Move X23, [X31+120]
	329 Move X26, [X31+96]
	330 Move X25, [X31+104]
	331 Move X28, [X31+80]
	332 Move X27, [X31+88]
	333 Move X29, [X31+64]
	334 Move X30, [X31+72]
	335 Add X31, X31, 160
	336 Return X0
	337 Move W21, W19
	338 Move W8, 1
	339 Move W8, 0x3099
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move W21, W19
	342 NotImplemented "Instruction CSET not yet implemented."
	343 Move W8, 0x30FB
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move W21, W19
	346 NotImplemented "Instruction CSET not yet implemented."
	347 Xor W28, W8, 1
	348 Move W8, 1
	349 Move [X31+32], X31
	350 Move [X31+52], W8
	351 Move W8, [X22+16]
	352 Add W19, W24, 1
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X0, X22
	355 Move W1, W19
	356 Move X2, X31
	357 Call String.get_Chars, X0, X1
	358 And W1, W0, 0xFFFF
	359 Move X0, X25
	360 Call SimpleCollator.Category, X0, X1
	361 And W8, W0, 255
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move W24, [X29+2]
	364 Compare W24, 0
	365 JumpIfNotEqual {368}
	366 Move W24, 2
	367 Move [X29+2], W24
	368 Move X0, X22
	369 Move W1, W19
	370 Move X2, X31
	371 Call String.get_Chars, X0, X1
	372 And W1, W0, 0xFFFF
	373 Move X0, X25
	374 Move W2, W31
	375 Call SimpleCollator.Level2, X0, X1, X2
	376 Add W8, W0, W24
	377 Move [X29+2], W8
	378 Move W8, [X22+16]
	379 Add W19, W19, 1
	380 Call 0x1C17F28

Method: System.Boolean MatchesForward(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x032150E8 B.LS 0x3215114
	0x032150EC MOV W0, W31
	0x032150F0 LDP X20, X19, [X31 + 0x40]
	0x032150F4 LDP X22, X21, [X31 + 0x30]
	0x032150F8 LDP X24, X23, [X31 + 0x20]
	0x032150FC LDP X26, X25, [X31 + 0x10]
	0x03215100 LDR X30, [X31], #0x50
	0x03215104 RET
	0x03215108 MOVZ W8, 0x30FB
	0x0321510C CMP W8, W19, UXTH
	0x03215110 B.NE 0x32150EC
	0x03215114 MOVZ W0, 0x1
	0x03215118 B 0x32150F0
	0x0321511C SUB X31, X31, 0xA0
	0x03215120 STP X29, X30, [X31 + 0x40]
	0x03215124 STP X28, X27, [X31 + 0x50]
	0x03215128 STP X26, X25, [X31 + 0x60]
	0x0321512C STP X24, X23, [X31 + 0x70]
	0x03215130 STP X22, X21, [X31 + 0x80]
	0x03215134 STP X20, X19, [X31 + 0x90]
	0x03215138 LDP X8, X26, [X31 + 0xA8]
	0x0321513C ADRP X23, 0x11C7000
	0x03215140 LDR W29, [X31 + 0xA0]
	0x03215144 MOV W28, W7
	0x03215148 STR X8, [X31 + 0x30]
	0x0321514C LDRB W8, [X23 + 0x2C7]
	0x03215150 MOV X20, X6
	0x03215154 MOV W24, W5
	0x03215158 MOV W21, W3
	0x0321515C MOV X19, X2
	0x03215160 MOV X25, X1
	0x03215164 MOV X22, X0
	0x03215168 STR W4, [X31 + 0x3C]
	0x0321516C TBNZ X8, 0x0, 0x3215190
	0x03215170 ADRP X0, 0xF0C000
	0x03215174 LDR X0, [X0 + 0xA10]
	0x03215178 BL 0x1C16CF4
	0x0321517C ADRP X0, 0xF0C000
	0x03215180 LDR X0, [X0 + 0xBD8]
	0x03215184 BL 0x1C16CF4
	0x03215188 MOVZ W8, 0x1
	0x0321518C STRB W8, [X23 + 0x2C7]
	0x03215190 LDR W27, [X26]
	0x03215194 STR X26, [X31 + 0x20]
	0x03215198 LDR X26, [X26 + 0x18]
	0x0321519C LDR W2, [X19]
	0x032151A0 CBZ W29, 0x3215260
	0x032151A4 TBNZ X2, 0x1F, 0x3215434
	0x032151A8 STR W29, [X31 + 0x2C]
	0x032151AC STP W28, W24, [X31 + 0x14]
	0x032151B0 CBZ X25, 0x321559C
	0x032151B4 ADRP X28, 0xF0C000
	0x032151B8 LDR X28, [X28 + 0xBD8]
	0x032151BC MOV W21, W31
	0x032151C0 MOV W29, W2
	0x032151C4 STR W2, [X31 + 0x1C]
	0x032151C8 MOV X0, X25
	0x032151CC MOV W1, W29
	0x032151D0 MOV X2, X31
	0x032151D4 BL 0x3222A1C
	0x032151D8 LDR X8, [X28]
	0x032151DC MOV W23, W0
	0x032151E0 LDR W9, [X8 + 0xE0]
	0x032151E4 CBNZ W9, 0x32151F0
	0x032151E8 MOV X0, X8
	0x032151EC BL 0x1C16DFC
	0x032151F0 AND W0, W23, 0xFFFF
	0x032151F4 MOV W1, W27
	0x032151F8 BL 0x3210F24
	0x032151FC TBNZ X0, 0x0, 0x3215250
	0x03215200 MOV X0, X25
	0x03215204 MOV W1, W29
	0x03215208 MOV X2, X31
	0x0321520C BL 0x3222A1C
	0x03215210 AND W1, W0, 0xFFFF
	0x03215214 MOV X0, X22
	0x03215218 MOV W2, W27
	0x0321521C BL 0x3210B10
	0x03215220 MOV W24, W0
	0x03215224 MOV X0, X22
	0x03215228 MOV W1, W24
	0x0321522C BL 0x32103B0
	0x03215230 AND W8, W0, 0xFF
	0x03215234 CMP W8, 0x1
	0x03215238 B.NE 0x3215328
	0x0321523C MOV X0, X22
	0x03215240 MOV W1, W24
	0x03215244 MOV W2, W31
	0x03215248 BL 0x32104D8
	0x0321524C MOV W21, W0
	0x03215250 CMP W29, 0x0
	0x03215254 SUB W29, W29, 0x1
	0x03215258 B.GT 0x32151C8
	0x0321525C B 0x3215434
	0x03215260 MOV X0, X22
	0x03215264 MOV X1, X25
	0x03215268 MOV W3, W21
	0x0321526C STR W2, [X31 + 0x1C]
	0x03215270 BL 0x3210868
	0x03215274 LDR X8, [X31 + 0x30]
	0x03215278 LDR W23, [X31 + 0x3C]
	0x0321527C STR W29, [X31 + 0x2C]
	0x03215280 STR X0, [X8]
	0x03215284 CBZ X0, 0x3215290
	0x03215288 MOVN W29, 0x0
	0x0321528C B 0x32153DC
	0x03215290 CBZ X25, 0x321559C
	0x03215294 LDR W1, [X19]
	0x03215298 MOV X0, X25
	0x0321529C MOV X2, X31
	0x032152A0 BL 0x3222A1C
	0x032152A4 AND W1, W0, 0xFFFF
	0x032152A8 MOV X0, X22
	0x032152AC MOV W2, W27
	0x032152B0 BL 0x3210B10

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+40], X31
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Compare X1, 0
	015 JumpIfEqual {146}
	016 Move X25, X1
	017 Move W1, [X2]
	018 Move X22, X2
	019 Move X26, X0
	020 Move X0, X25
	021 Move X2, X31
	022 Move X19, X7
	023 Move W24, W6
	024 Move X20, X5
	025 Move W21, W4
	026 Move W23, W3
	027 Call String.get_Chars, X0, X1
	028 And W28, W0, 0xFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19+16]
	031 Compare X8, 0
	032 JumpIfEqual {45}
	033 Move W9, W28
	034 Move X9, X9
	035 ShiftRight X9, 3
	036 And X9, X9, 0x7FFFFFFF
	037 Move W8, [X9]
	038 And W9, W28, 7
	039 NotImplemented "Instruction LSRV not yet implemented."
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {45}
	044 Move W0, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+8]
	047 Compare X8, 0
	048 JumpIfEqual {64}
	049 Move W9, W28
	050 Move X9, X9
	051 ShiftRight X9, 3
	052 And X9, X9, 0x7FFFFFFF
	053 Move W8, [X8]
	054 And W9, W28, 7
	055 NotImplemented "Instruction LSRV not yet implemented."
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {64}
	060 Move W8, [X22]
	061 Move W0, W31
	062 Add W8, W8, 1
	063 Move [X22], W8
	064 Move W1, [X22]
	065 Move X0, X25
	066 Move X2, X31
	067 Call String.get_Chars, X0, X1
	068 And W1, W0, 0xFFFF
	069 Move X0, X26
	070 Call SimpleCollator.GetExtenderType, X0, X1
	071 Move W27, W0
	072 Add X8, X31, 40
	073 And W6, W24, 1
	074 Move X0, X26
	075 Move X1, X25
	076 Move X2, X22
	077 Move W3, W23
	078 Move W4, W21
	079 Move X5, X20
	080 Move W7, W27
	081 Move [X31+40], X31
	082 Move [X31], X8
	083 Move [X31+8], X19
	084 Call SimpleCollator.MatchesForwardCore, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {110}
	089 Move X8, [X19+16]
	090 Move W0, 1
	091 Compare X8, 0
	092 JumpIfEqual {133}
	093 Move X9, [X31+40]
	094 Compare X9, 0
	095 JumpIfNotEqual {133}
	096 Move W0, 1
	097 Compare W27, 0
	098 JumpIfNotEqual {133}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W9, W28
	101 Move X9, X9
	102 ShiftRight X9, 3
	103 And X9, X9, 0x7FFFFFFF
	104 Move W10, [X8]
	105 And X11, X28, 7
	106 Move W0, 1
	107 NotImplemented "Instruction LSLV not yet implemented."
	108 Or W10, W10, W11
	109 Move [X8], W10
	110 Move X8, [X19+8]
	111 Move W0, W31
	112 Compare X8, 0
	113 JumpIfEqual {133}
	114 Move X9, [X31+40]
	115 Compare X9, 0
	116 JumpIfNotEqual {133}
	117 Move W0, W31
	118 Compare W27, 0
	119 JumpIfNotEqual {133}
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W10, W28
	122 Move X10, X10
	123 ShiftRight X10, 3
	124 And X10, X10, 0x7FFFFFFF
	125 Move W11, [X8]
	126 Move W9, W28
	127 And X9, X9, 7
	128 Move W12, 1
	129 NotImplemented "Instruction LSLV not yet implemented."
	130 Move W0, W31
	131 Or W9, W11, W9
	132 Move [X8], W9
	133 Move X20, [X31+112]
	134 Move X19, [X31+120]
	135 Move X22, [X31+96]
	136 Move X21, [X31+104]
	137 Move X24, [X31+80]
	138 Move X23, [X31+88]
	139 Move X26, [X31+64]
	140 Move X25, [X31+72]
	141 Move X28, [X31+48]
	142 Move X27, [X31+56]
	143 Move X30, [X31+32]
	144 Add X31, X31, 128
	145 Return X0
	146 Call 0x1C17F20

Method: System.Boolean MatchesForwardCore(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, ref Mono.Globalization.Unicode.Contraction ct, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x03215B90 STRB W23, [X8 + 0x20]
	0x03215B94 LDR W8, [X20 + 0x18]
	0x03215B98 CMP W22, W8
	0x03215B9C B.CS 0x3215C74
	0x03215BA0 ADD X8, X20, W22, SXTW
	0x03215BA4 MOVZ W9, 0x1
	0x03215BA8 STRB W9, [X8 + 0x20]
	0x03215BAC LDR W4, [X19 + 0x74]
	0x03215BB0 ADD W21, W22, 0x1
	0x03215BB4 CMP W4, 0x1
	0x03215BB8 B.LT 0x3215BD8
	0x03215BBC LDR X0, [X19 + 0x48]
	0x03215BC0 MOV W1, W31
	0x03215BC4 MOV X2, X20
	0x03215BC8 MOV W3, W21
	0x03215BCC MOV X5, X31
	0x03215BD0 BL 0x339FCE8
	0x03215BD4 LDR W4, [X19 + 0x74]
	0x03215BD8 LDR W9, [X20 + 0x18]
	0x03215BDC ADD W8, W4, W21
	0x03215BE0 CMP W8, W9
	0x03215BE4 B.CS 0x3215C74
	0x03215BE8 ADD X8, X20, W8, SXTW
	0x03215BEC MOV X10, X24
	0x03215BF0 STRB W31, [X8 + 0x20]
	0x03215BF4 LDP W22, W9, [X19 + 0x78]
	0x03215BF8 LDP W8, W25, [X19 + 0x58]
	0x03215BFC LDR X0, [X10]
	0x03215C00 LDR X21, [X19 + 0x50]
	0x03215C04 LDP W26, W28, [X19 + 0x60]
	0x03215C08 LDP W29, W27, [X19 + 0x68]
	0x03215C0C LDP W23, W24, [X19 + 0x70]
	0x03215C10 STP W8, W9, [X31 + 0x38]
	0x03215C14 BL 0x1C16F10
	0x03215C18 LDP W5, W4, [X31 + 0x38]
	0x03215C1C MOV W1, W22
	0x03215C20 MOV X2, X21
	0x03215C24 MOV X3, X20
	0x03215C28 MOV W6, W25
	0x03215C2C MOV W7, W26
	0x03215C30 MOV X19, X0
	0x03215C34 STR X31, [X31 + 0x28]
	0x03215C38 STR W24, [X31 + 0x20]
	0x03215C3C STR W23, [X31 + 0x18]
	0x03215C40 STR W27, [X31 + 0x10]
	0x03215C44 STR W29, [X31 + 0x8]
	0x03215C48 STR W28, [X31]
	0x03215C4C BL 0x333FCE4
	0x03215C50 MOV X0, X19
	0x03215C54 LDP X20, X19, [X31 + 0x90]
	0x03215C58 LDP X22, X21, [X31 + 0x80]
	0x03215C5C LDP X24, X23, [X31 + 0x70]
	0x03215C60 LDP X26, X25, [X31 + 0x60]
	0x03215C64 LDP X28, X27, [X31 + 0x50]
	0x03215C68 LDP X29, X30, [X31 + 0x40]
	0x03215C6C ADD X31, X31, 0xA0
	0x03215C70 RET
	0x03215C74 BL 0x1C16F28
	0x03215C78 BL 0x1C16F20
	0x03215C7C STR X30, [X31 - 0x10]!
	0x03215C80 CMP W2, 0x1
	0x03215C84 B.LT 0x3215CC8
	0x03215C88 CBZ X1, 0x3215CD8
	0x03215C8C LDR W9, [X1 + 0x18]
	0x03215C90 MOV X8, X31
	0x03215C94 MOV W10, W2
	0x03215C98 ADD X12, X1, 0x20
	0x03215C9C MOVN W11, 0x0
	0x03215CA0 CMP X8, X9
	0x03215CA4 B.CS 0x3215CD4
	0x03215CA8 LDRB W13, [X12, X8, LSL]
	0x03215CAC CMP W13, W3, UXTB
	0x03215CB0 CSEL W11, W11, W8, EQ
	0x03215CB4 ADD X8, X8, 0x1
	0x03215CB8 CMP X10, X8
	0x03215CBC B.NE 0x3215CA0
	0x03215CC0 ADD W0, W11, 0x1
	0x03215CC4 B 0x3215CCC
	0x03215CC8 MOV W0, W31
	0x03215CCC LDR X30, [X31], #0x10
	0x03215CD0 RET
	0x03215CD4 BL 0x1C16F28
	0x03215CD8 BL 0x1C16F20
	0x03215CDC STR X30, [X31 - 0x20]!
	0x03215CE0 STP X20, X19, [X31 + 0x10]
	0x03215CE4 MOV W19, W1
	0x03215CE8 MOV X1, X31
	0x03215CEC MOV X20, X0
	0x03215CF0 BL 0x33BDD8C
	0x03215CF4 STRB W19, [X20 + 0x10]
	0x03215CF8 STR X31, [X20 + 0x18]
	0x03215CFC LDP X20, X19, [X31 + 0x10]
	0x03215D00 LDR X30, [X31], #0x20
	0x03215D04 RET
	0x03215D08 STP X30, X21, [X31 - 0x20]!
	0x03215D0C STP X20, X19, [X31 + 0x10]
	0x03215D10 MOV W20, W1
	0x03215D14 MOV X1, X31
	0x03215D18 MOV X19, X2
	0x03215D1C MOV X21, X0
	0x03215D20 BL 0x33BDD8C
	0x03215D24 STRB W20, [X21 + 0x10]
	0x03215D28 STR X19, [X21 + 0x18]
	0x03215D2C LDP X20, X19, [X31 + 0x10]
	0x03215D30 LDP X30, X21, [X31], #0x20
	0x03215D34 RET
	0x03215D38 STR X30, [X31 - 0x30]!
	0x03215D3C STP X22, X21, [X31 + 0x10]
	0x03215D40 STP X20, X19, [X31 + 0x20]
	0x03215D44 ADRP X21, 0x11C7000
	0x03215D48 LDRB W8, [X21 + 0x2CC]
	0x03215D4C MOV X20, X1
	0x03215D50 MOV X19, X0
	0x03215D54 TBNZ X8, 0x0, 0x3215D6C
	0x03215D58 ADRP X0, 0xEDE000
	0x03215D5C LDR X0, [X0 + 0x618]
	0x03215D60 BL 0x1C16CF4
	0x03215D64 MOVZ W8, 0x1
	0x03215D68 STRB W8, [X21 + 0x2CC]
	0x03215D6C MOV X0, X19
	0x03215D70 MOV X1, X31
	0x03215D74 BL 0x33BDD8C
	0x03215D78 CBZ X20, 0x3215E50
	0x03215D7C LDR W11, [X20 + 0x18]
	0x03215D80 CBZ W11, 0x3215E4C
	0x03215D84 LDRB W8, [X20 + 0x20]
	0x03215D88 CMP W11, 0x1
	0x03215D8C STRB W8, [X19 + 0x10]
	0x03215D90 B.EQ 0x3215E4C
	0x03215D94 LDRB W8, [X20 + 0x21]
	0x03215D98 SUBS W9, W8, 0x81
	0x03215D9C B.CS 0x3215DB4
	0x03215DA0 CMP W8, 0x80
	0x03215DA4 B.EQ 0x3215E54
	0x03215DA8 MOVZ W22, 0x2
	0x03215DAC MOV W21, W8
	0x03215DB0 B 0x3215DE4
	0x03215DB4 MOV W21, W31
	0x03215DB8 SUB X10, X8, 0x80
	0x03215DBC SUB W11, W11, 0x2
	0x03215DC0 ADD X12, X20, 0x22
	0x03215DC4 CMP W11, W9
	0x03215DC8 B.LS 0x3215E4C
	0x03215DCC LDRB W13, [X12], #0x1
	0x03215DD0 SUBS X10, X10, 0x1
	0x03215DD4 BFM W13, W21, 0x18, 0x17
	0x03215DD8 MOV W21, W13
	0x03215DDC B.NE 0x3215DC4
	0x03215DE0 SUB W22, W8, 0x7E
	0x03215DE4 ADRP X8, 0xEDE000
	0x03215DE8 LDR X8, [X8 + 0x618]
	0x03215DEC MOV W1, W21
	0x03215DF0 LDR X0, [X8]
	0x03215DF4 BL 0x1C16D6C
	0x03215DF8 MOV X2, X0
	0x03215DFC STR X0, [X19 + 0x18]
	0x03215E00 MOV X0, X20
	0x03215E04 MOV W1, W22
	0x03215E08 MOV W3, W31
	0x03215E0C MOV W4, W21
	0x03215E10 MOV X5, X31
	0x03215E14 BL 0x33A8A9C
	0x03215E18 LDRB W8, [X19 + 0x10]
	0x03215E1C TBZ X8, 0x5, 0x3215E3C
	0x03215E20 STR W31, [X31 + 0xC]
	0x03215E24 LDR X1, [X19 + 0x18]
	0x03215E28 CBZ X1, 0x3215E50
	0x03215E2C LDR W3, [X1 + 0x18]
	0x03215E30 ADD X2, X31, 0xC
	0x03215E34 MOV X0, X19
	0x03215E38 BL 0x3215E9C
	0x03215E3C LDP X20, X19, [X31 + 0x20]
	0x03215E40 LDP X22, X21, [X31 + 0x10]
	0x03215E44 LDR X30, [X31], #0x30
	0x03215E48 RET
	0x03215E4C BL 0x1C16F28
	0x03215E50 BL 0x1C16F20
	0x03215E54 ADRP X0, 0xEDE000
	0x03215E58 LDR X0, [X0 + 0xB40]
	0x03215E5C BL 0x1C16D08
	0x03215E60 BL 0x1C16F10
	0x03215E64 MOV X19, X0
	0x03215E68 ADRP X0, 0xF0B000
	0x03215E6C LDR X0, [X0 + 0xB88]
	0x03215E70 BL 0x1C16D08
	0x03215E74 MOV X1, X0
	0x03215E78 MOV X0, X19
	0x03215E7C MOV X2, X31
	0x03215E80 BL 0x3379A44
	0x03215E84 ADRP X0, 0xF0C000
	0x03215E88 LDR X0, [X0 + 0xC20]
	0x03215E8C BL 0x1C16D08
	0x03215E90 MOV X1, X0
	0x03215E94 MOV X0, X19
	0x03215E98 BL 0x1C16DEC
	0x03215E9C SUB X31, X31, 0x60
	0x03215EA0 STR X30, [X31 + 0x10]
	0x03215EA4 STP X26, X25, [X31 + 0x20]
	0x03215EA8 STP X24, X23, [X31 + 0x30]
	0x03215EAC STP X22, X21, [X31 + 0x40]
	0x03215EB0 STP X20, X19, [X31 + 0x50]
	0x03215EB4 ADRP X23, 0x11C7000
	0x03215EB8 LDRB W8, [X23 + 0x2D0]
	0x03215EBC MOV W22, W3
	0x03215EC0 MOV X19, X2
	0x03215EC4 MOV X20, X1
	0x03215EC8 MOV X21, X0
	0x03215ECC TBNZ X8, 0x0, 0x3215EE4
	0x03215ED0 ADRP X0, 0xF0C000
	0x03215ED4 LDR X0, [X0 + 0xC28]
	0x03215ED8 BL 0x1C16CF4
	0x03215EDC MOVZ W8, 0x1
	0x03215EE0 STRB W8, [X23 + 0x2D0]
	0x03215EE4 STRB W31, [X31 + 0x1C]
	0x03215EE8 STR W31, [X31 + 0x18]
	0x03215EEC STR X31, [X31 + 0x8]
	0x03215EF0 LDR W8, [X19]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X25, 0x11C8000
	015 Move W8, [X25+709]
	016 Move X24, [X31+128]
	017 Move X29, [X31+136]
	018 Move X23, X5
	019 Move W26, W4
	020 Move W21, W3
	021 Move X20, X2
	022 Move X22, X1
	023 Move X19, X0
	024 Move [X31+20], W6
	025 Move [X31+24], W7
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0xF0D000
	031 Move X0, [X0+2576]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+709], W8
	035 Move [X31+28], W31
	036 Move W27, [X29]
	037 Move X28, [X29+24]
	038 Move W8, [X31+24]
	039 Compare W8, 0
	040 JumpIfEqual {58}
	041 Move W1, [X29+40]
	042 Move TEMP, X1
	043 And TEMP, TEMP, -2147483648
	044 Compare TEMP, -2147483648
	045 JumpIfEqual {67}
	046 Move W2, [X31+24]
	047 Move X0, X19
	048 Move W3, W27
	049 Call SimpleCollator.FilterExtender, X0, X1, X2, X3
	050 Move X8, [X24]
	051 Move W24, W0
	052 Compare X8, 0
	053 JumpIfNotEqual {76}
	054 Move TEMP, X24
	055 And TEMP, TEMP, -2147483648
	056 Compare TEMP, -2147483648
	057 JumpIfNotEqual {112}
	058 Move W2, [X20]
	059 Move X0, X19
	060 Move X1, X22
	061 Move W3, W21
	062 Call SimpleCollator.GetContraction, X0, X1, X2, X3
	063 Move [X24], X0
	064 Compare X0, 0
	065 JumpIfEqual {101}
	066 Move X8, X0
	067 Move X28, [X29+48]
	068 Compare X28, 0
	069 JumpIfEqual {247}
	070 Move X8, [X24]
	071 Compare X8, 0
	072 JumpIfEqual {101}
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W24, TEMP
	076 Move X9, [X8+24]
	077 Compare X9, 0
	078 JumpIfEqual {251}
	079 Move W10, [X20]
	080 Move W9, [X9+24]
	081 Add W9, W10, W9
	082 Move [X20], W9
	083 Move W9, [X31+20]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {219}
	088 Move X9, [X8+40]
	089 Compare X9, 0
	090 JumpIfEqual {235}
	091 Move X8, X31
	092 Move W9, [X23]
	093 Move [X28], W9
	094 Add X8, X8, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move TEMP, 0
	097 Not TEMP
	098 Move W8, TEMP
	099 Move [X29+40], W8
	100 Move [X29+48], X28
	101 Compare X22, 0
	102 JumpIfEqual {251}
	103 Move W1, [X20]
	104 Move X0, X22
	105 Move X2, X31
	106 Call String.get_Chars, X0, X1
	107 And W1, W0, 0xFFFF
	108 Move X0, X19
	109 Move W2, W27
	110 Call SimpleCollator.FilterOptions, X0, X1, X2
	111 Move W24, W0
	112 Move W8, [X20]
	113 Move X0, X19
	114 Move W1, W24
	115 Move [X31+16], W26
	116 Add W8, W8, 1
	117 Move [X20], W8
	118 Call SimpleCollator.Category, X0, X1
	119 Move [X28], W0
	120 Move W25, [X23]
	121 Move W26, W0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X19
	124 Move W1, W24
	125 Call SimpleCollator.Level1, X0, X1
	126 Move [X28+1], W0
	127 Move TEMP, X27
	128 And TEMP, TEMP, 2
	129 Compare TEMP, 2
	130 JumpIfEqual {140}
	131 Move W8, [X23+1]
	132 Move W9, [X28+1]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W2, [X31+24]
	135 Move X0, X19
	136 Move W1, W24
	137 Call SimpleCollator.Level2, X0, X1, X2
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X28+2], W0
	140 Move TEMP, X27
	141 And TEMP, TEMP, 2
	142 Compare TEMP, 2
	143 JumpIfNotEqual {203}
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, 0xF0D000
	146 Move X8, [X8+2576]
	147 Move X0, [X8]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move W0, W24
	153 Call MSCompatUnicodeTable.Level3, X0
	154 Move W8, [X28]
	155 Move W26, [X31+16]
	156 Move [X28+3], W0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X29+40], W24
	159 Move W1, [X20]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare X22, 0
	162 JumpIfEqual {251}
	163 Move X0, X22
	164 Move X2, X31
	165 Call String.get_Chars, X0, X1
	166 And W1, W0, 0xFFFF
	167 Move X0, X19
	168 Call SimpleCollator.Category, X0, X1
	169 And W8, W0, 255
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move TEMP, X27
	172 And TEMP, TEMP, 2
	173 Compare TEMP, 2
	174 JumpIfEqual {190}
	175 Move W25, [X28+2]
	176 Compare W25, 0
	177 JumpIfNotEqual {180}
	178 Move W25, 2
	179 Move [X28+2], W25
	180 Move W1, [X20]
	181 Move X0, X22
	182 Move X2, X31
	183 Call String.get_Chars, X0, X1
	184 And W1, W0, 0xFFFF
	185 Move X0, X19
	186 Move W2, W31
	187 Call SimpleCollator.Level2, X0, X1, X2
	188 Add W8, W0, W25
	189 Move [X28+2], W8
	190 Move W8, [X20]
	191 Add W1, W8, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X20], W1
	194 Move W8, [X31+20]
	195 Move W4, [X31+24]
	196 Move W1, W27
	197 Move X2, X28
	198 Move W3, W24
	199 And W7, W8, 1
	200 Move X5, X23
	201 Move W6, W26
	202 Call SimpleCollator.MatchesPrimitive, X0, X1, X2, X3, X4, X5, X6, X7
	203 Move W1, [X20]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Compare X22, 0
	206 JumpIfEqual {251}
	207 Move X0, X22
	208 Move X2, X31
	209 Call String.get_Chars, X0, X1
	210 And W1, W0, 0xFFFF
	211 Move X0, X19
	212 Call SimpleCollator.Category, X0, X1
	213 And W8, W0, 255
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W8, [X20]
	216 Add W1, W8, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move [X20], W1
	219 Move W0, W31
	220 Move X20, [X31+112]
	221 Move X19, [X31+120]
	222 Move X22, [X31+96]
	223 Move X21, [X31+104]
	224 Move X24, [X31+80]
	225 Move X23, [X31+88]
	226 Move X26, [X31+64]
	227 Move X25, [X31+72]
	228 Move X28, [X31+48]
	229 Move X27, [X31+56]
	230 Move X29, [X31+32]
	231 Move X30, [X31+40]
	232 And W0, W0, 1
	233 Add X31, X31, 128
	234 Return X0
	235 Move [X31+28], W31
	236 Move X1, [X8+32]
	237 Compare X1, 0
	238 JumpIfEqual {251}
	239 Move W3, [X1+16]
	240 Add X2, X31, 28
	241 Move W6, 1
	242 Move X0, X19
	243 Move W4, W26
	244 Move X5, X23
	245 Move X7, X29
	246 Call SimpleCollator.MatchesForward, X0, X1, X2, X3, X4, X5, X6, X7
	247 Move W8, [X20]
	248 Move W0, W31
	249 Add W8, W8, 1
	250 Move [X20], W8
	251 Call 0x1C17F20

Method: System.Boolean MatchesPrimitive(System.Globalization.CompareOptions opt, System.Byte* source, System.Int32 si, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, System.Byte* target, System.Int32 ti, System.Boolean noLv4)

Disassembly:
	0x03215EF4 SUB W23, W22, 0x1
	0x03215EF8 CMP W8, W23
	0x03215EFC B.GE 0x3215F9C
	0x03215F00 ADRP X24, 0xF0C000
	0x03215F04 LDR X24, [X24 + 0xC28]
	0x03215F08 ADD X3, X31, 0x1C
	0x03215F0C ADD X4, X31, 0x18
	0x03215F10 ADD X5, X31, 0x8
	0x03215F14 MOV X1, X20
	0x03215F18 MOV X2, X19
	0x03215F1C BL 0x3216774
	0x03215F20 LDRB W25, [X31 + 0x1C]
	0x03215F24 CBZ W25, 0x3215F60
	0x03215F28 LDR X0, [X24]
	0x03215F2C LDR X26, [X31 + 0x8]
	0x03215F30 BL 0x1C16F10
	0x03215F34 MOV X1, X31
	0x03215F38 MOV X22, X0
	0x03215F3C BL 0x33BDD8C
	0x03215F40 MOV X0, X21
	0x03215F44 MOV X1, X22
	0x03215F48 STRB W25, [X22 + 0x10]
	0x03215F4C STR X26, [X22 + 0x18]
	0x03215F50 BL 0x3216064
	0x03215F54 TBNZ X25, 0x5, 0x3215F68
	0x03215F58 LDR W25, [X31 + 0x18]
	0x03215F5C B 0x3215F88
	0x03215F60 LDR W8, [X19]
	0x03215F64 B 0x3215F94
	0x03215F68 LDR W8, [X19]
	0x03215F6C LDR W25, [X31 + 0x18]
	0x03215F70 ADD X2, X31, 0x4
	0x03215F74 MOV X0, X22
	0x03215F78 MOV X1, X20
	0x03215F7C ADD W3, W25, W8
	0x03215F80 STR W8, [X31 + 0x4]
	0x03215F84 BL 0x3215E9C
	0x03215F88 LDR W8, [X19]
	0x03215F8C ADD W8, W25, W8
	0x03215F90 STR W8, [X19]
	0x03215F94 CMP W8, W23
	0x03215F98 B.LT 0x3215F08
	0x03215F9C LDP X20, X19, [X31 + 0x50]
	0x03215FA0 LDP X22, X21, [X31 + 0x40]
	0x03215FA4 LDP X24, X23, [X31 + 0x30]
	0x03215FA8 LDP X26, X25, [X31 + 0x20]
	0x03215FAC LDR X30, [X31 + 0x10]
	0x03215FB0 ADD X31, X31, 0x60
	0x03215FB4 RET
	0x03215FB8 LDR X0, [X0 + 0x20]
	0x03215FBC CBZ X0, 0x3215FD0
	0x03215FC0 LDR X8, [X0]
	0x03215FC4 LDR X2, [X8 + 0x298]
	0x03215FC8 LDR X1, [X8 + 0x2A0]
	0x03215FCC BR X2
	0x03215FD0 RET
	0x03215FD4 STR X30, [X31 - 0x20]!
	0x03215FD8 STP X20, X19, [X31 + 0x10]
	0x03215FDC ADRP X20, 0x11C7000
	0x03215FE0 LDRB W8, [X20 + 0x2CD]
	0x03215FE4 MOV X19, X0
	0x03215FE8 TBNZ X8, 0x0, 0x3216000
	0x03215FEC ADRP X0, 0xEDE000
	0x03215FF0 LDR X0, [X0 + 0x618]
	0x03215FF4 BL 0x1C16CF4
	0x03215FF8 MOVZ W8, 0x1
	0x03215FFC STRB W8, [X20 + 0x2CD]
	0x03216000 LDR X0, [X19 + 0x18]
	0x03216004 CBNZ X0, 0x321601C
	0x03216008 LDR X8, [X19]
	0x0321600C MOV X0, X19
	0x03216010 LDP X9, X1, [X8 + 0x178]
	0x03216014 BLR X9
	0x03216018 LDR X0, [X19 + 0x18]
	0x0321601C CBZ X0, 0x3216054
	0x03216020 MOV X1, X31
	0x03216024 BL 0x33A01F0
	0x03216028 CBZ X0, 0x3216048
	0x0321602C ADRP X8, 0xEDD000
	0x03216030 LDR X8, [X8 + 0x618]
	0x03216034 MOV X19, X0
	0x03216038 LDR X20, [X8]
	0x0321603C MOV X1, X20
	0x03216040 BL 0x1C16E00
	0x03216044 CBZ X0, 0x3216058
	0x03216048 LDP X20, X19, [X31 + 0x10]
	0x0321604C LDR X30, [X31], #0x20
	0x03216050 RET
	0x03216054 BL 0x1C16F20
	0x03216058 MOV X0, X19
	0x0321605C MOV X1, X20
	0x03216060 BL 0x1C171E0
	0x03216064 STP X30, X21, [X31 - 0x20]!
	0x03216068 STP X20, X19, [X31 + 0x10]
	0x0321606C ADRP X21, 0x11C6000
	0x03216070 LDRB W8, [X21 + 0x2CE]
	0x03216074 MOV X19, X1
	0x03216078 MOV X20, X0
	0x0321607C TBNZ X8, 0x0, 0x3216094
	0x03216080 ADRP X0, 0xF0A000
	0x03216084 LDR X0, [X0 + 0xBA0]
	0x03216088 BL 0x1C16CF4
	0x0321608C MOVZ W8, 0x1
	0x03216090 STRB W8, [X21 + 0x2CE]
	0x03216094 CBZ X19, 0x32160DC
	0x03216098 LDR X21, [X20 + 0x20]
	0x0321609C CBNZ X21, 0x32160C4
	0x032160A0 ADRP X8, 0xF0A000
	0x032160A4 LDR X8, [X8 + 0xBA0]
	0x032160A8 LDR X0, [X8]
	0x032160AC BL 0x1C16F10
	0x032160B0 MOV X1, X31
	0x032160B4 MOV X21, X0
	0x032160B8 BL 0x3351F5C
	0x032160BC STR X21, [X20 + 0x20]
	0x032160C0 CBZ X21, 0x32160EC
	0x032160C4 LDR X8, [X21]
	0x032160C8 MOV X0, X21
	0x032160CC MOV X1, X19
	0x032160D0 LDR X9, [X8 + 0x308]
	0x032160D4 LDR X2, [X8 + 0x310]
	0x032160D8 BLR X9
	0x032160DC MOV X0, X19
	0x032160E0 LDP X20, X19, [X31 + 0x10]
	0x032160E4 LDP X30, X21, [X31], #0x20
	0x032160E8 RET
	0x032160EC BL 0x1C16F20
	0x032160F0 STP X30, X27, [X31 - 0x50]!
	0x032160F4 STP X26, X25, [X31 + 0x10]
	0x032160F8 STP X24, X23, [X31 + 0x20]
	0x032160FC STP X22, X21, [X31 + 0x30]
	0x03216100 STP X20, X19, [X31 + 0x40]
	0x03216104 ADRP X20, 0x11C6000
	0x03216108 LDRB W8, [X20 + 0x2CF]
	0x0321610C MOV X19, X0
	0x03216110 TBNZ X8, 0x0, 0x3216158
	0x03216114 ADRP X0, 0xF0B000
	0x03216118 LDR X0, [X0 + 0xC28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x11C8000
	011 Move W8, [X26+710]
	012 Move W23, W7
	013 Move W21, W6
	014 Move X24, X5
	015 Move W22, W4
	016 Move W19, W3
	017 Move X25, X2
	018 Move W20, W1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xF0D000
	024 Move X0, [X0+2576]
	025 Call 0x1C17CF4
	026 Move X0, 0xF0D000
	027 Move X0, [X0+3032]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+710], W8
	031 Move W8, [X25]
	032 Move W9, [X24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X25+1]
	035 Move W9, [X24+1]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move TEMP, X20
	038 And TEMP, TEMP, 2
	039 Compare TEMP, 2
	040 JumpIfEqual {44}
	041 Move W8, [X25+2]
	042 Move W9, [X24+2]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X25+3]
	045 Move W9, [X24+3]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move TEMP, X23
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {80}
	051 Move TEMP, X19
	052 And TEMP, TEMP, -2147483648
	053 Compare TEMP, -2147483648
	054 JumpIfEqual {162}
	055 Move X8, 0xF0D000
	056 Move X8, [X8+2576]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W8, 0x3041
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W8, W19, 154
	065 And W8, W8, 0xFFFF
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, W19
	068 ShiftRight W8, 8
	069 And W8, W8, 0x7FFF
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, 0x309C
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move TEMP, 0x32CF
	075 Not TEMP
	076 Move W8, TEMP
	077 Add W8, W19, W8
	078 And W8, W8, 0xFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move TEMP, X20
	081 And TEMP, TEMP, 2
	082 Compare TEMP, 2
	083 JumpIfEqual {85}
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X24, 0xF0C000
	086 Move X24, [X24+2576]
	087 Move X0, [X24]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W0, W19
	093 Call MSCompatUnicodeTable.IsJapaneseSmallLetter, X0
	094 Move W23, W0
	095 Move W0, W21
	096 Call MSCompatUnicodeTable.IsJapaneseSmallLetter, X0
	097 Xor W8, W23, W0
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {149}
	102 Move X23, 0xF0C000
	103 Move X23, [X23+3032]
	104 Move X0, [X23]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move TEMP, X20
	110 And TEMP, TEMP, 2
	111 Compare TEMP, 2
	112 JumpIfEqual {115}
	113 Compare W22, 0
	114 JumpIfNotEqual {149}
	115 Move X0, [X24]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move TEMP, 0x3040
	121 Not TEMP
	122 Move W8, TEMP
	123 Add W9, W19, W8
	124 Add W8, W21, W8
	125 And W9, W9, 0xFFFF
	126 And W8, W8, 0xFFFF
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X23]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 And W0, W19, 0xFFFF
	138 Move W1, W20
	139 And W21, W21, 0xFFFF
	140 Call SimpleCollator.IsHalfKana, X0, X1
	141 Move W19, W0
	142 Move W0, W21
	143 Move W1, W20
	144 Call SimpleCollator.IsHalfKana, X0, X1
	145 NotImplemented "Instruction EON not yet implemented."
	146 And W0, W8, 1
	147 Move W8, 0x3099
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move W0, W31
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return X0
	160 Move W8, 0x30FB
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W0, 1

Method: System.Boolean MatchesBackward(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 orgStart, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x032159B8 MOV X0, X8
	0x032159BC BL 0x1C16D6C
	0x032159C0 LDR X8, [X19 + 0x10]
	0x032159C4 LDR W2, [X19 + 0x58]
	0x032159C8 MOV X20, X0
	0x032159CC MOV X1, X20
	0x032159D0 MOV X0, X8
	0x032159D4 MOV X3, X31
	0x032159D8 BL 0x33A0C7C
	0x032159DC CBZ X20, 0x3215C78
	0x032159E0 LDRSW X8, [X19 + 0x58]
	0x032159E4 LDR W9, [X20 + 0x18]
	0x032159E8 CMP W8, W9
	0x032159EC B.CS 0x3215C74
	0x032159F0 ADD X8, X20, X8
	0x032159F4 MOVZ W9, 0x1
	0x032159F8 STRB W9, [X8 + 0x20]
	0x032159FC LDP W8, W4, [X19 + 0x58]
	0x03215A00 CMP W4, 0x1
	0x03215A04 ADD W22, W8, 0x1
	0x03215A08 B.LT 0x3215A28
	0x03215A0C LDR X0, [X19 + 0x18]
	0x03215A10 MOV W1, W31
	0x03215A14 MOV X2, X20
	0x03215A18 MOV W3, W22
	0x03215A1C MOV X5, X31
	0x03215A20 BL 0x339FCE8
	0x03215A24 LDR W4, [X19 + 0x5C]
	0x03215A28 LDR W9, [X20 + 0x18]
	0x03215A2C ADD W8, W4, W22
	0x03215A30 CMP W8, W9
	0x03215A34 B.CS 0x3215C74
	0x03215A38 ADD X9, X20, W8, SXTW
	0x03215A3C MOVZ W10, 0x1
	0x03215A40 STRB W10, [X9 + 0x20]
	0x03215A44 LDR W4, [X19 + 0x60]
	0x03215A48 ADD W22, W8, 0x1
	0x03215A4C CMP W4, 0x1
	0x03215A50 B.LT 0x3215A70
	0x03215A54 LDR X0, [X19 + 0x20]
	0x03215A58 MOV W1, W31
	0x03215A5C MOV X2, X20
	0x03215A60 MOV W3, W22
	0x03215A64 MOV X5, X31
	0x03215A68 BL 0x339FCE8
	0x03215A6C LDR W4, [X19 + 0x60]
	0x03215A70 LDR W9, [X20 + 0x18]
	0x03215A74 ADD W8, W4, W22
	0x03215A78 CMP W8, W9
	0x03215A7C B.CS 0x3215C74
	0x03215A80 ADD W22, W8, 0x1
	0x03215A84 ADD X8, X20, W8, SXTW
	0x03215A88 MOVZ W9, 0x1
	0x03215A8C CMP W21, 0x1
	0x03215A90 STRB W9, [X8 + 0x20]
	0x03215A94 B.LT 0x3215B94
	0x03215A98 LDR X0, [X19 + 0x28]
	0x03215A9C LDR W4, [X19 + 0x64]
	0x03215AA0 MOV W1, W31
	0x03215AA4 MOV X2, X20
	0x03215AA8 MOV W3, W22
	0x03215AAC MOV X5, X31
	0x03215AB0 BL 0x339FCE8
	0x03215AB4 LDR W8, [X19 + 0x64]
	0x03215AB8 LDR W9, [X20 + 0x18]
	0x03215ABC ADD W8, W8, W22
	0x03215AC0 CMP W8, W9
	0x03215AC4 B.CS 0x3215C74
	0x03215AC8 ADD X9, X20, W8, SXTW
	0x03215ACC MOVZ W10, 0xFF
	0x03215AD0 STRB W10, [X9 + 0x20]
	0x03215AD4 LDR X0, [X19 + 0x30]
	0x03215AD8 LDR W4, [X19 + 0x68]
	0x03215ADC ADD W21, W8, 0x1
	0x03215AE0 MOV W1, W31
	0x03215AE4 MOV X2, X20
	0x03215AE8 MOV W3, W21
	0x03215AEC MOV X5, X31
	0x03215AF0 BL 0x339FCE8
	0x03215AF4 LDR W8, [X19 + 0x68]
	0x03215AF8 LDR W9, [X20 + 0x18]
	0x03215AFC ADD W8, W8, W21
	0x03215B00 CMP W8, W9
	0x03215B04 B.CS 0x3215C74
	0x03215B08 ADD X9, X20, W8, SXTW
	0x03215B0C MOVZ W10, 0x2
	0x03215B10 STRB W10, [X9 + 0x20]
	0x03215B14 LDR X0, [X19 + 0x38]
	0x03215B18 LDR W4, [X19 + 0x6C]
	0x03215B1C ADD W21, W8, 0x1
	0x03215B20 MOV W1, W31
	0x03215B24 MOV X2, X20
	0x03215B28 MOV W3, W21
	0x03215B2C MOV X5, X31
	0x03215B30 BL 0x339FCE8
	0x03215B34 LDR W8, [X19 + 0x6C]
	0x03215B38 LDR W9, [X20 + 0x18]
	0x03215B3C ADD W8, W8, W21
	0x03215B40 CMP W8, W9
	0x03215B44 B.CS 0x3215C74
	0x03215B48 ADD X9, X20, W8, SXTW
	0x03215B4C MOVZ W23, 0xFF
	0x03215B50 STRB W23, [X9 + 0x20]
	0x03215B54 LDR X0, [X19 + 0x40]
	0x03215B58 LDR W4, [X19 + 0x70]
	0x03215B5C ADD W21, W8, 0x1
	0x03215B60 MOV W1, W31
	0x03215B64 MOV X2, X20
	0x03215B68 MOV W3, W21
	0x03215B6C MOV X5, X31
	0x03215B70 BL 0x339FCE8
	0x03215B74 LDR W8, [X19 + 0x70]
	0x03215B78 LDR W9, [X20 + 0x18]
	0x03215B7C ADD W8, W8, W21
	0x03215B80 CMP W8, W9
	0x03215B84 B.CS 0x3215C74
	0x03215B88 ADD W22, W8, 0x1
	0x03215B8C ADD X8, X20, W8, SXTW

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+40], X31
	015 Compare X1, 0
	016 JumpIfEqual {150}
	017 Move X25, X1
	018 Move W1, [X2]
	019 Move X29, [X31+144]
	020 Move X22, X2
	021 Move X26, X0
	022 Move X0, X25
	023 Move X2, X31
	024 Move W24, W7
	025 Move X19, X6
	026 Move W20, W5
	027 Move W21, W4
	028 Move W23, W3
	029 Call String.get_Chars, X0, X1
	030 And W28, W0, 0xFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X29+16]
	033 Compare X8, 0
	034 JumpIfEqual {47}
	035 Move W9, W28
	036 Move X9, X9
	037 ShiftRight X9, 3
	038 And X9, X9, 0x7FFFFFFF
	039 Move W8, [X9]
	040 And W9, W28, 7
	041 NotImplemented "Instruction LSRV not yet implemented."
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 Move W0, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, [X29+8]
	049 Compare X8, 0
	050 JumpIfEqual {66}
	051 Move W9, W28
	052 Move X9, X9
	053 ShiftRight X9, 3
	054 And X9, X9, 0x7FFFFFFF
	055 Move W8, [X8]
	056 And W9, W28, 7
	057 NotImplemented "Instruction LSRV not yet implemented."
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {66}
	062 Move W8, [X22]
	063 Move W0, W31
	064 Subtract W8, W8, 1
	065 Move [X22], W8
	066 Move W1, [X22]
	067 Move X0, X25
	068 Move X2, X31
	069 Call String.get_Chars, X0, X1
	070 And W1, W0, 0xFFFF
	071 Move X0, X26
	072 Call SimpleCollator.GetExtenderType, X0, X1
	073 Move W27, W0
	074 Add X8, X31, 40
	075 And W7, W24, 1
	076 Move [X31], W0
	077 Move X0, X26
	078 Move X1, X25
	079 Move X2, X22
	080 Move W3, W23
	081 Move W4, W21
	082 Move W5, W20
	083 Move X6, X19
	084 Move [X31+40], X31
	085 Move [X31+8], X8
	086 Move [X31+16], X29
	087 Call SimpleCollator.MatchesBackwardCore, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {113}
	092 Move X8, [X29+16]
	093 Move W0, 1
	094 Compare X8, 0
	095 JumpIfEqual {136}
	096 Move X9, [X31+40]
	097 Compare X9, 0
	098 JumpIfNotEqual {136}
	099 Move W0, 1
	100 Compare W27, 0
	101 JumpIfNotEqual {136}
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W9, W28
	104 Move X9, X9
	105 ShiftRight X9, 3
	106 And X9, X9, 0x7FFFFFFF
	107 Move W10, [X8]
	108 And X11, X28, 7
	109 Move W0, 1
	110 NotImplemented "Instruction LSLV not yet implemented."
	111 Or W10, W10, W11
	112 Move [X8], W10
	113 Move X8, [X29+8]
	114 Move W0, W31
	115 Compare X8, 0
	116 JumpIfEqual {136}
	117 Move X9, [X31+40]
	118 Compare X9, 0
	119 JumpIfNotEqual {136}
	120 Move W0, W31
	121 Compare W27, 0
	122 JumpIfNotEqual {136}
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W10, W28
	125 Move X10, X10
	126 ShiftRight X10, 3
	127 And X10, X10, 0x7FFFFFFF
	128 Move W11, [X8]
	129 Move W9, W28
	130 And X9, X9, 7
	131 Move W12, 1
	132 NotImplemented "Instruction LSLV not yet implemented."
	133 Move W0, W31
	134 Or W9, W11, W9
	135 Move [X8], W9
	136 Move X20, [X31+128]
	137 Move X19, [X31+136]
	138 Move X22, [X31+112]
	139 Move X21, [X31+120]
	140 Move X24, [X31+96]
	141 Move X23, [X31+104]
	142 Move X26, [X31+80]
	143 Move X25, [X31+88]
	144 Move X28, [X31+64]
	145 Move X27, [X31+72]
	146 Move X29, [X31+48]
	147 Move X30, [X31+56]
	148 Add X31, X31, 144
	149 Return X0
	150 Call 0x1C17F20

Method: System.Boolean MatchesBackwardCore(System.String s, ref System.Int32 idx, System.Int32 end, System.Int32 orgStart, System.Int32 ti, System.Byte* sortkey, System.Boolean noLv4, Mono.Globalization.Unicode.SimpleCollator/ExtenderType ext, ref Mono.Globalization.Unicode.Contraction ct, ref Mono.Globalization.Unicode.SimpleCollator/Context ctx)

Disassembly:
	0x0321611C BL 0x1C16CF4
	0x03216120 ADRP X0, 0xF0A000
	0x03216124 LDR X0, [X0 + 0xBA0]
	0x03216128 BL 0x1C16CF4
	0x0321612C ADRP X0, 0xEDD000
	0x03216130 LDR X0, [X0 + 0x618]
	0x03216134 BL 0x1C16CF4
	0x03216138 ADRP X0, 0xEDD000
	0x0321613C LDR X0, [X0 + 0xE00]
	0x03216140 BL 0x1C16CF4
	0x03216144 ADRP X0, 0xEDD000
	0x03216148 LDR X0, [X0 + 0xE18]
	0x0321614C BL 0x1C16CF4
	0x03216150 MOVZ W8, 0x1
	0x03216154 STRB W8, [X20 + 0x2CF]
	0x03216158 LDR X0, [X19 + 0x20]
	0x0321615C CBZ X0, 0x32162E8
	0x03216160 LDR X8, [X0]
	0x03216164 LDR X9, [X8 + 0x298]
	0x03216168 LDR X1, [X8 + 0x2A0]
	0x0321616C BLR X9
	0x03216170 CMP W0, 0x1
	0x03216174 B.LT 0x32162E8
	0x03216178 ADRP X8, 0xF0A000
	0x0321617C LDR X8, [X8 + 0xBA0]
	0x03216180 LDR X0, [X8]
	0x03216184 BL 0x1C16F10
	0x03216188 MOV X1, X31
	0x0321618C MOV X20, X0
	0x03216190 BL 0x3351F5C
	0x03216194 LDR X0, [X19 + 0x20]
	0x03216198 CBZ X0, 0x3216564
	0x0321619C LDR X8, [X0]
	0x032161A0 LDR X9, [X8 + 0x388]
	0x032161A4 LDR X1, [X8 + 0x390]
	0x032161A8 BLR X9
	0x032161AC MOV X22, X0
	0x032161B0 CBZ X0, 0x3216688
	0x032161B4 ADRP X24, 0xEDD000
	0x032161B8 ADRP X25, 0xF0B000
	0x032161BC LDR X24, [X24 + 0xE18]
	0x032161C0 LDR X25, [X25 + 0xC28]
	0x032161C4 MOV W21, W31
	0x032161C8 LDR X8, [X22]
	0x032161CC LDR X1, [X24]
	0x032161D0 LDRH W9, [X8 + 0x12E]
	0x032161D4 CBZ X9, 0x32161F8
	0x032161D8 LDR X10, [X8 + 0xB0]
	0x032161DC ADD X10, X10, 0x8
	0x032161E0 LDUR X11, [X10 - 0x8]
	0x032161E4 CMP X11, X1
	0x032161E8 B.EQ 0x3216208
	0x032161EC SUBS X9, X9, 0x1
	0x032161F0 ADD X10, X10, 0x10
	0x032161F4 B.NE 0x32161E0
	0x032161F8 MOV X0, X22
	0x032161FC MOV W2, W31
	0x03216200 BL 0x1C5C788
	0x03216204 B 0x3216214
	0x03216208 LDRSW X9, [X10]
	0x0321620C ADD X8, X8, X9, 0x4, LSL
	0x03216210 ADD X0, X8, 0x138
	0x03216214 LDP X8, X1, [X0]
	0x03216218 MOV X0, X22
	0x0321621C BLR X8
	0x03216220 TBZ X0, 0x0, 0x3216334
	0x03216224 LDR X8, [X22]
	0x03216228 LDR X1, [X24]
	0x0321622C LDRH W9, [X8 + 0x12E]
	0x03216230 CBZ X9, 0x3216254
	0x03216234 LDR X10, [X8 + 0xB0]
	0x03216238 ADD X10, X10, 0x8
	0x0321623C LDUR X11, [X10 - 0x8]
	0x03216240 CMP X11, X1
	0x03216244 B.EQ 0x3216264
	0x03216248 SUBS X9, X9, 0x1
	0x0321624C ADD X10, X10, 0x10
	0x03216250 B.NE 0x321623C
	0x03216254 MOVZ W2, 0x1
	0x03216258 MOV X0, X22
	0x0321625C BL 0x1C5C788
	0x03216260 B 0x3216274
	0x03216264 LDR W9, [X10]
	0x03216268 ADD W9, W9, 0x1
	0x0321626C ADD X8, X8, W9, 0x4, SXTW
	0x03216270 ADD X0, X8, 0x138
	0x03216274 LDP X8, X1, [X0]
	0x03216278 MOV X0, X22
	0x0321627C BLR X8
	0x03216280 CBZ X0, 0x3216670
	0x03216284 LDR X8, [X0]
	0x03216288 LDR X1, [X25]
	0x0321628C LDRB W10, [X8 + 0x130]
	0x03216290 LDRB W9, [X1 + 0x130]
	0x03216294 CMP W10, W9
	0x03216298 B.CC 0x3216668
	0x0321629C LDR X10, [X8 + 0xC8]
	0x032162A0 ADD X9, X10, X9, 0x3, LSL
	0x032162A4 LDUR X9, [X9 - 0x8]
	0x032162A8 CMP X9, X1
	0x032162AC B.NE 0x3216668
	0x032162B0 LDP X9, X1, [X8 + 0x178]
	0x032162B4 BLR X9
	0x032162B8 CBZ X20, 0x3216674
	0x032162BC LDR X8, [X20]
	0x032162C0 MOV X23, X0
	0x032162C4 LDR X9, [X8 + 0x308]
	0x032162C8 LDR X2, [X8 + 0x310]
	0x032162CC MOV X0, X20
	0x032162D0 MOV X1, X23
	0x032162D4 BLR X9
	0x032162D8 CBZ X23, 0x321666C
	0x032162DC LDR W8, [X23 + 0x18]
	0x032162E0 ADD W21, W21, W8
	0x032162E4 B 0x32161C8
	0x032162E8 LDR X21, [X19 + 0x18]
	0x032162EC CBZ X21, 0x3216398
	0x032162F0 LDR X20, [X21 + 0x18]
	0x032162F4 ADRP X8, 0xEDD000
	0x032162F8 LDR X8, [X8 + 0x618]
	0x032162FC CMP W20, 0x80
	0x03216300 B.GE 0x32163B8
	0x03216304 LDR X0, [X8]
	0x03216308 ADD W1, W20, 0x2
	0x0321630C BL 0x1C16D6C
	0x03216310 MOV X22, X0
	0x03216314 MOVZ W3, 0x2
	0x03216318 MOV X0, X21
	0x0321631C MOV W1, W31
	0x03216320 MOV X2, X22
	0x03216324 MOV W4, W20
	0x03216328 MOV X5, X31
	0x0321632C BL 0x33A8A9C
	0x03216330 B 0x3216620
	0x03216334 MOV X23, X31
	0x03216338 MOVZ W24, 0x5
	0x0321633C ADRP X25, 0xEDD000
	0x03216340 LDR X25, [X25 + 0xE00]
	0x03216344 MOV X0, X22
	0x03216348 LDR X1, [X25]
	0x0321634C BL 0x1C16E00
	0x03216350 CBZ X0, 0x32164AC
	0x03216354 LDR X8, [X0]
	0x03216358 LDR X1, [X25]
	0x0321635C MOV X22, X0
	0x03216360 LDRH W9, [X8 + 0x12E]
	0x03216364 CBZ X9, 0x3216388
	0x03216368 LDR X10, [X8 + 0xB0]
	0x0321636C ADD X10, X10, 0x8
	0x03216370 LDUR X11, [X10 - 0x8]
	0x03216374 CMP X11, X1
	0x03216378 B.EQ 0x3216494
	0x0321637C SUBS X9, X9, 0x1
	0x03216380 ADD X10, X10, 0x10
	0x03216384 B.NE 0x3216370
	0x03216388 MOV X0, X22
	0x0321638C MOV W2, W31
	0x03216390 BL 0x1C5C788
	0x03216394 B 0x32164A0
	0x03216398 ADRP X8, 0xEDD000
	0x0321639C LDR X8, [X8 + 0x618]
	0x032163A0 MOVZ W1, 0x2
	0x032163A4 LDR X0, [X8]
	0x032163A8 BL 0x1C16D6C
	0x032163AC MOV X22, X0
	0x032163B0 MOV W20, W31
	0x032163B4 B 0x321662C
	0x032163B8 CMP W20, 0xFF
	0x032163BC B.LE 0x321644C
	0x032163C0 CMP W20, 0x10000
	0x032163C4 B.LT 0x3216568
	0x032163C8 LDR X0, [X8]
	0x032163CC MOVN W8, 0xFF000000
	0x032163D0 CMP W20, W8
	0x032163D4 B.LE 0x32165C0
	0x032163D8 ADD W1, W20, 0x6
	0x032163DC BL 0x1C16D6C
	0x032163E0 MOV X22, X0
	0x032163E4 MOVZ W3, 0x6
	0x032163E8 MOV X0, X21
	0x032163EC MOV W1, W31
	0x032163F0 MOV X2, X22
	0x032163F4 MOV W4, W20
	0x032163F8 MOV X5, X31
	0x032163FC BL 0x33A8A9C
	0x03216400 CBZ X22, 0x3216564
	0x03216404 LDR W8, [X22 + 0x18]
	0x03216408 CMP W8, 0x2
	0x0321640C B.LS 0x3216684
	0x03216410 UBFM X9, X20, 0x18, 0x3F
	0x03216414 CMP W8, 0x3
	0x03216418 STRB W9, [X22 + 0x22]
	0x0321641C B.EQ 0x3216684
	0x03216420 UBFM X9, X20, 0x10, 0x3F
	0x03216424 CMP W8, 0x4
	0x03216428 STRB W9, [X22 + 0x23]
	0x0321642C B.LS 0x3216684
	0x03216430 UBFM X9, X20, 0x8, 0x3F
	0x03216434 CMP W8, 0x5
	0x03216438 STRB W9, [X22 + 0x24]
	0x0321643C B.EQ 0x3216684
	0x03216440 STRB W20, [X22 + 0x25]
	0x03216444 MOVZ W20, 0x84
	0x03216448 B 0x3216620
	0x0321644C LDR X0, [X8]
	0x03216450 ADD W1, W20, 0x3
	0x03216454 BL 0x1C16D6C
	0x03216458 MOV X22, X0
	0x0321645C MOVZ W3, 0x3
	0x03216460 MOV X0, X21
	0x03216464 MOV W1, W31
	0x03216468 MOV X2, X22
	0x0321646C MOV W4, W20
	0x03216470 MOV X5, X31
	0x03216474 BL 0x33A8A9C
	0x03216478 CBZ X22, 0x3216564
	0x0321647C LDR W8, [X22 + 0x18]
	0x03216480 CMP W8, 0x2
	0x03216484 B.LS 0x3216684
	0x03216488 STRB W20, [X22 + 0x22]
	0x0321648C MOVZ W20, 0x81
	0x03216490 B 0x3216620
	0x03216494 LDRSW X9, [X10]
	0x03216498 ADD X8, X8, X9, 0x4, LSL
	0x0321649C ADD X0, X8, 0x138
	0x032164A0 LDP X8, X1, [X0]
	0x032164A4 MOV X0, X22
	0x032164A8 BLR X8
	0x032164AC CBNZ X23, 0x321668C
	0x032164B0 CMP W24, 0x5
	0x032164B4 B.EQ 0x32164BC
	0x032164B8 CBNZ W24, 0x321664C
	0x032164BC ADRP X27, 0xEDD000
	0x032164C0 LDR X27, [X27 + 0x618]
	0x032164C4 MOV W1, W21
	0x032164C8 LDR X0, [X27]
	0x032164CC BL 0x1C16D6C
	0x032164D0 LDR X8, [X19 + 0x20]
	0x032164D4 CBZ X8, 0x3216564
	0x032164D8 MOV X21, X0
	0x032164DC MOV W22, W31
	0x032164E0 MOV W23, W31
	0x032164E4 LDR X9, [X8]
	0x032164E8 MOV X0, X8
	0x032164EC LDR X10, [X9 + 0x298]
	0x032164F0 LDR X1, [X9 + 0x2A0]
	0x032164F4 BLR X10
	0x032164F8 CMP W23, W0
	0x032164FC B.GE 0x32162EC
	0x03216500 CBZ X20, 0x3216564
	0x03216504 LDR X8, [X20]
	0x03216508 MOV X0, X20
	0x0321650C MOV W1, W23
	0x03216510 LDR X9, [X8 + 0x2E8]
	0x03216514 LDR X2, [X8 + 0x2F0]
	0x03216518 BLR X9
	0x0321651C CBZ X0, 0x3216564
	0x03216520 LDR X26, [X27]
	0x03216524 MOV X24, X0
	0x03216528 MOV X1, X26
	0x0321652C BL 0x1C16E00
	0x03216530 CBZ X0, 0x3216678
	0x03216534 LDR W4, [X0 + 0x18]
	0x03216538 MOV W1, W31
	0x0321653C MOV X2, X21
	0x03216540 MOV W3, W22
	0x03216544 MOV X5, X31
	0x03216548 MOV X25, X0
	0x0321654C BL 0x33A8A9C
	0x03216550 LDR W9, [X25 + 0x18]
	0x03216554 LDR X8, [X19 + 0x20]
	0x03216558 ADD W23, W23, 0x1
	0x0321655C ADD W22, W22, W9
	0x03216560 CBNZ X8, 0x32164E4
	0x03216564 BL 0x1C16F20
	0x03216568 LDR X0, [X8]
	0x0321656C ADD W1, W20, 0x4
	0x03216570 BL 0x1C16D6C
	0x03216574 MOV X22, X0
	0x03216578 MOVZ W3, 0x4
	0x0321657C MOV X0, X21
	0x03216580 MOV W1, W31
	0x03216584 MOV X2, X22
	0x03216588 MOV W4, W20
	0x0321658C MOV X5, X31
	0x03216590 BL 0x33A8A9C
	0x03216594 CBZ X22, 0x3216564
	0x03216598 LDR W8, [X22 + 0x18]
	0x0321659C CMP W8, 0x2

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X8, [X31+168]
	015 Move X26, [X31+176]
	016 Move X23, 0x11C7000
	017 Move W29, [X31+160]
	018 Move W28, W7
	019 Move [X31+48], X8
	020 Move W8, [X23+711]
	021 Move X20, X6
	022 Move W24, W5
	023 Move W21, W3
	024 Move X19, X2
	025 Move X25, X1
	026 Move X22, X0
	027 Move [X31+60], W4
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0xF0C000
	033 Move X0, [X0+2576]
	034 Call 0x1C17CF4
	035 Move X0, 0xF0C000
	036 Move X0, [X0+3032]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+711], W8
	040 Move W27, [X26]
	041 Move [X31+32], X26
	042 Move X26, [X26+24]
	043 Move W2, [X19]
	044 Compare W29, 0
	045 JumpIfEqual {99}
	046 Move TEMP, X2
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {228}
	050 Move [X31+44], W29
	051 Move [X31+20], W28
	052 Move [X31+24], W24
	053 Compare X25, 0
	054 JumpIfEqual {337}
	055 Move X28, 0xF0C000
	056 Move X28, [X28+3032]
	057 Move W21, W31
	058 Move W29, W2
	059 Move [X31+28], W2
	060 Move X0, X25
	061 Move W1, W29
	062 Move X2, X31
	063 Call String.get_Chars, X0, X1
	064 Move X8, [X28]
	065 Move W23, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 And W0, W23, 0xFFFF
	072 Move W1, W27
	073 Call SimpleCollator.IsIgnorable, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {97}
	078 Move X0, X25
	079 Move W1, W29
	080 Move X2, X31
	081 Call String.get_Chars, X0, X1
	082 And W1, W0, 0xFFFF
	083 Move X0, X22
	084 Move W2, W27
	085 Call SimpleCollator.FilterOptions, X0, X1, X2
	086 Move W24, W0
	087 Move X0, X22
	088 Move W1, W24
	089 Call SimpleCollator.Category, X0, X1
	090 And W8, W0, 255
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X22
	093 Move W1, W24
	094 Move W2, W31
	095 Call SimpleCollator.Level2, X0, X1, X2
	096 Move W21, W0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract W29, W29, 1
	099 Move X0, X22
	100 Move X1, X25
	101 Move W3, W21
	102 Move [X31+28], W2
	103 Call SimpleCollator.GetTailContraction, X0, X1, X2, X3
	104 Move X8, [X31+48]
	105 Move W23, [X31+60]
	106 Move [X31+44], W29
	107 Move [X8], X0
	108 Compare X0, 0
	109 JumpIfEqual {113}
	110 Move TEMP, 0
	111 Not TEMP
	112 Move W29, TEMP
	113 Compare X25, 0
	114 JumpIfEqual {337}
	115 Move W1, [X19]
	116 Move X0, X25
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 And W1, W0, 0xFFFF
	120 Move X0, X22
	121 Move W2, W27
	122 Call SimpleCollator.FilterOptions, X0, X1, X2
	123 Move W8, [X19]
	124 Move W29, W0
	125 Move X0, X22
	126 Move W1, W29
	127 Subtract W8, W8, 1
	128 Move [X19], W8
	129 Call SimpleCollator.Category, X0, X1
	130 Move [X26], W0
	131 Move W21, [X20]
	132 Move W19, W0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X22
	135 Move W1, W29
	136 Call SimpleCollator.Level1, X0, X1
	137 Move [X26+1], W0
	138 Move TEMP, X27
	139 And TEMP, TEMP, 2
	140 Compare TEMP, 2
	141 JumpIfEqual {243}
	142 Move W8, [X26+1]
	143 Move W9, [X20+1]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W2, [X31+44]
	146 Move X0, X22
	147 Move W1, W29
	148 Call SimpleCollator.Level2, X0, X1, X2
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X26+2], W0
	151 Move W2, [X31+44]
	152 Move W23, W0
	153 Move X0, X22
	154 Move W1, W24
	155 Move W3, W27
	156 Call SimpleCollator.FilterExtender, X0, X1, X2, X3
	157 Move W29, W0
	158 Move X0, X22
	159 Move W1, W29
	160 Move [X26], W23
	161 Call SimpleCollator.Level1, X0, X1
	162 Move [X26+1], W0
	163 Move TEMP, X27
	164 And TEMP, TEMP, 2
	165 Compare TEMP, 2
	166 JumpIfEqual {172}
	167 Move W2, [X31+44]
	168 Move X0, X22
	169 Move W1, W29
	170 Call SimpleCollator.Level2, X0, X1, X2
	171 Move [X26+2], W0
	172 Move X8, 0xF0C000
	173 Move X8, [X8+2576]
	174 Move W28, [X31+20]
	175 Move W24, [X31+24]
	176 Move W23, [X31+60]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move W0, W29
	183 Call MSCompatUnicodeTable.Level3, X0
	184 Move W8, [X31+44]
	185 Move [X26+3], W0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 And W31, W21, 255
	188 Move W8, [X26+2]
	189 Add W9, W21, 2
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSEL not yet implemented."
	192 Move [X26+2], W8
	193 Move W8, [X19]
	194 Subtract W8, W8, 1
	195 Move [X19], W8
	196 Move X8, [X31+48]
	197 Move X0, [X8]
	198 Compare X0, 0
	199 JumpIfEqual {298}
	200 Move X8, [X0+24]
	201 Compare X8, 0
	202 JumpIfEqual {337}
	203 Move W9, [X19]
	204 Move W8, [X8+24]
	205 Subtract W8, W9, W8
	206 Move [X19], W8
	207 Move TEMP, X28
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {228}
	211 Move X8, [X0+40]
	212 Compare X8, 0
	213 JumpIfEqual {320}
	214 Move X8, X31
	215 Move W9, [X20]
	216 Move [X26], W9
	217 Add X8, X8, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, [X31+32]
	220 Move TEMP, 0
	221 Not TEMP
	222 Move W8, TEMP
	223 Move [X9+40], W8
	224 Move W8, [X31+44]
	225 Move [X9+48], X26
	226 Compare W8, 0
	227 JumpIfNotEqual {298}
	228 Move W0, W31
	229 Move X20, [X31+144]
	230 Move X19, [X31+152]
	231 Move X22, [X31+128]
	232 Move X21, [X31+136]
	233 Move X24, [X31+112]
	234 Move X23, [X31+120]
	235 Move X26, [X31+96]
	236 Move X25, [X31+104]
	237 Move X28, [X31+80]
	238 Move X27, [X31+88]
	239 Move X29, [X31+64]
	240 Move X30, [X31+72]
	241 Add X31, X31, 160
	242 Return X0
	243 Move W0, W31
	244 Move TEMP, X27
	245 And TEMP, TEMP, 2
	246 Compare TEMP, 2
	247 JumpIfNotEqual {229}
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, 0xF0C000
	250 Move X8, [X8+2576]
	251 Move X0, [X8]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move W0, W29
	257 Call MSCompatUnicodeTable.Level3, X0
	258 Move W8, [X26]
	259 Move [X26+3], W0
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, [X31+32]
	262 Move [X8+40], W29
	263 Move W8, [X31+28]
	264 Add W19, W8, 1
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Compare X25, 0
	267 JumpIfEqual {337}
	268 Move X0, X25
	269 Move W1, W19
	270 Move X2, X31
	271 Call String.get_Chars, X0, X1
	272 And W1, W0, 0xFFFF
	273 Move X0, X22
	274 Call SimpleCollator.Category, X0, X1
	275 And W8, W0, 255
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move TEMP, X27
	278 And TEMP, TEMP, 2
	279 Compare TEMP, 2
	280 JumpIfEqual {296}
	281 Move W21, [X26+2]
	282 Compare W21, 0
	283 JumpIfNotEqual {286}
	284 Move W21, 2
	285 Move [X26+2], W21
	286 Move X0, X25
	287 Move W1, W19
	288 Move X2, X31
	289 Call String.get_Chars, X0, X1
	290 And W1, W0, 0xFFFF
	291 Move X0, X22
	292 Move W2, W31
	293 Call SimpleCollator.Level2, X0, X1, X2
	294 Add W8, W0, W21
	295 Move [X26+2], W8
	296 Add W19, W19, 1
	297 NotImplemented "Instruction CMP not yet implemented."
	298 And W7, W28, 1
	299 Move W1, W27
	300 Move X2, X26
	301 Move W3, W29
	302 Move W4, [X31+44]
	303 Move X5, X20
	304 Move W6, W24
	305 Move X20, [X31+144]
	306 Move X19, [X31+152]
	307 Move X22, [X31+128]
	308 Move X21, [X31+136]
	309 Move X24, [X31+112]
	310 Move X23, [X31+120]
	311 Move X26, [X31+96]
	312 Move X25, [X31+104]
	313 Move X28, [X31+80]
	314 Move X27, [X31+88]
	315 Move X29, [X31+64]
	316 Move X30, [X31+72]
	317 Add X31, X31, 160
	318 Call SimpleCollator.MatchesPrimitive, X0, X1, X2, X3, X4, X5, X6, X7
	319 Return X0
	320 Move X1, [X0+32]
	321 Compare X1, 0
	322 JumpIfEqual {337}
	323 Move W4, [X1+16]
	324 Move X8, [X31+32]
	325 Move W7, 1
	326 Move X0, X22
	327 Subtract W2, W4, 1
	328 Move W3, W2
	329 Move X5, X20
	330 Move W6, W24
	331 Move [X31], X8
	332 Call SimpleCollator.LastIndexOfSortKey, X0, X1, X2, X3, X4, X5, X6, X7, X8
	333 NotImplemented "Instruction ORN not yet implemented."
	334 Move W0, W8
	335 ShiftRight W0, 31
	336 And W0, W0, 0x7FFFFFFF
	337 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x032165A0 B.LS 0x3216684
	0x032165A4 UBFM X9, X20, 0x8, 0x3F
	0x032165A8 CMP W8, 0x3
	0x032165AC STRB W9, [X22 + 0x22]
	0x032165B0 B.EQ 0x3216684
	0x032165B4 STRB W20, [X22 + 0x23]
	0x032165B8 MOVZ W20, 0x82
	0x032165BC B 0x3216620
	0x032165C0 ADD W1, W20, 0x5
	0x032165C4 BL 0x1C16D6C
	0x032165C8 MOV X22, X0
	0x032165CC MOVZ W3, 0x5
	0x032165D0 MOV X0, X21
	0x032165D4 MOV W1, W31
	0x032165D8 MOV X2, X22
	0x032165DC MOV W4, W20
	0x032165E0 MOV X5, X31
	0x032165E4 BL 0x33A8A9C
	0x032165E8 CBZ X22, 0x3216564
	0x032165EC LDR W8, [X22 + 0x18]
	0x032165F0 CMP W8, 0x2
	0x032165F4 B.LS 0x3216684
	0x032165F8 UBFM X9, X20, 0x10, 0x3F
	0x032165FC CMP W8, 0x3
	0x03216600 STRB W9, [X22 + 0x22]
	0x03216604 B.EQ 0x3216684
	0x03216608 UBFM X9, X20, 0x8, 0x3F
	0x0321660C CMP W8, 0x4
	0x03216610 STRB W9, [X22 + 0x23]
	0x03216614 B.LS 0x3216684
	0x03216618 STRB W20, [X22 + 0x24]
	0x0321661C MOVZ W20, 0x83
	0x03216620 LDR X8, [X19 + 0x18]
	0x03216624 CBNZ X8, 0x321662C
	0x03216628 STR X21, [X19 + 0x18]
	0x0321662C CBZ X22, 0x3216564

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11C7000
	006 Move X19, 0xEE0000
	007 Move W8, [X20+712]
	008 Move X19, [X19+3144]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xEE0000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0xF0C000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+712], W8
	021 Move X0, [X19]
	022 Move X21, 0xF0C000
	023 Move W8, [X0+224]
	024 Move X21, [X21+3032]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call CultureInfo.get_InvariantCulture
	030 Move X8, [X21]
	031 Move X19, X0
	032 Move X0, X8
	033 Call 0x1C17F10
	034 Move X1, X19
	035 Move X20, X0
	036 Call SimpleCollator..ctor, X0, X1
	037 Move X8, [X21]
	038 Move X8, [X8+184]
	039 Move [X8], X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 

