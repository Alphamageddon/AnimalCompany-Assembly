Type: Mono.Globalization.Unicode.MSCompatUnicodeTable/<>c

Method: System.Void .cctor()

Disassembly:
	0x03210664 MOVZ W8, 0x1
	0x03210668 STRB W8, [X21 + 0x2B9]
	0x0321066C TBZ X20, 0x4, 0x321062C
	0x03210670 MOVZ W0, 0x1
	0x03210674 LDP X20, X19, [X31 + 0x10]
	0x03210678 LDP X30, X21, [X31], #0x20
	0x0321067C RET
	0x03210680 STP X30, X23, [X31 - 0x30]!
	0x03210684 STP X22, X21, [X31 + 0x10]
	0x03210688 STP X20, X19, [X31 + 0x20]
	0x0321068C ADRP X23, 0x11CC000
	0x03210690 LDRB W8, [X23 + 0x2BA]
	0x03210694 MOV W19, W3
	0x03210698 MOV W20, W2
	0x0321069C MOV X21, X1
	0x032106A0 MOV X22, X0
	0x032106A4 TBNZ X8, 0x0, 0x32106BC
	0x032106A8 ADRP X0, 0xF11000
	0x032106AC LDR X0, [X0 + 0xBD8]
	0x032106B0 BL 0x1C16CF4
	0x032106B4 MOVZ W8, 0x1
	0x032106B8 STRB W8, [X23 + 0x2BA]
	0x032106BC LDR X4, [X22 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11CD000
	005 Move X20, 0xF12000
	006 Move W8, [X19+687]
	007 Move X20, [X20+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF12000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+687], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x032106C0 MOV X1, X21
	0x032106C4 MOV W2, W20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <BuildTailoringTables>b__17_0(Mono.Globalization.Unicode.Level2Map a, Mono.Globalization.Unicode.Level2Map b)

Disassembly:
	0x032106C8 MOV W3, W19
	0x032106CC BL 0x3210740
	0x032106D0 CBNZ X0, 0x32106E4
	0x032106D4 LDR W8, [X22 + 0x58]
	0x032106D8 CMP W8, 0x7F
	0x032106DC B.NE 0x32106F4
	0x032106E0 MOV X0, X31
	0x032106E4 LDP X20, X19, [X31 + 0x20]
	0x032106E8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Compare X2, 0
	005 JumpIfEqual {11}
	006 Move W8, [X1+16]
	007 Move W9, [X2+16]
	008 Subtract W0, W8, W9
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

