Type: Mono.Globalization.Unicode.SortKeyBuffer

Method: System.Void .ctor(System.Int32 lcid)

Disassembly:
	0x032120E4 B 0x3213094
	0x032120E8 LDR X14, [X31 + 0xB8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Reset()

Disassembly:
	0x03216630 LDR W8, [X22 + 0x18]
	0x03216634 CBZ W8, 0x3216684
	0x03216638 LDRB W9, [X19 + 0x10]
	0x0321663C CMP W8, 0x1
	0x03216640 STRB W9, [X22 + 0x20]

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0+130], W31
	003 Move [X0+88], V0
	004 Move [X0+104], V0
	005 Return 

Method: System.Void Initialize(System.Globalization.CompareOptions options, System.Int32 lcid, System.String s, System.Boolean frenchSort)

Disassembly:
	0x032120EC CMP W29, W27
	0x032120F0 B.GE 0x321218C
	0x032120F4 TBZ X20, 0x0, 0x32121CC
	0x032120F8 LDR W8, [X31 + 0xB0]
	0x032120FC STR W26, [X31 + 0x7C]
	0x03212100 CMP W8, W29
	0x03212104 B.GE 0x32121D4
	0x03212108 LDR W8, [X31 + 0xB4]
	0x0321210C CMP W8, W23
	0x03212110 B.GE 0x32121D4
	0x03212114 CMP W23, W22
	0x03212118 B.GE 0x32121E4
	0x0321211C CBZ X25, 0x3213360
	0x03212120 MOV W28, W26
	0x03212124 MOV W20, W31
	0x03212128 ADD W21, W29, W20
	0x0321212C MOV X0, X25
	0x03212130 MOV W1, W21
	0x03212134 MOV X2, X31
	0x03212138 ADD W24, W23, W20
	0x0321213C MOV X26, X25
	0x03212140 BL 0x3222A1C
	0x03212144 AND W25, W0, 0xFFFF
	0x03212148 MOV X0, X19
	0x0321214C MOV W1, W24
	0x03212150 MOV X2, X31
	0x03212154 BL 0x3222A1C
	0x03212158 CMP W25, W0, UXTH
	0x0321215C B.NE 0x32121F0
	0x03212160 ADD W8, W24, 0x1
	0x03212164 CMP W8, W22
	0x03212168 ADD W20, W20, 0x1
	0x0321216C MOV X25, X26
	0x03212170 B.GE 0x3212180
	0x03212174 ADD W8, W21, 0x1
	0x03212178 CMP W8, W27
	0x0321217C B.LT 0x3212128
	0x03212180 ADD W21, W29, W20
	0x03212184 ADD W23, W23, W20
	0x03212188 B 0x32121F8
	0x0321218C LDR X20, [X31 + 0xC0]
	0x03212190 MOV W11, W27
	0x03212194 LDP W13, W27, [X31 + 0x9C]
	0x03212198 LDP W12, W21, [X31 + 0xA4]
	0x0321219C MOV X28, X25
	0x032121A0 MOV X8, X31
	0x032121A4 MOV X9, X20
	0x032121A8 MOV W10, W26
	0x032121AC MOV W20, W22
	0x032121B0 STP W12, W13, [X31 + 0xAC]
	0x032121B4 MOV X24, X19
	0x032121B8 MOV X25, X14
	0x032121BC MOV W13, W26
	0x032121C0 MOV W26, W23
	0x032121C4 CBNZ X14, 0x3211FA0
	0x032121C8 B 0x3213094
	0x032121CC LDR X20, [X31 + 0xC0]
	0x032121D0 B 0x32120A4
	0x032121D4 LDR W8, [X31 + 0xB4]
	0x032121D8 LDR X20, [X31 + 0x80]
	0x032121DC MOV W21, W29
	0x032121E0 B 0x321237C
	0x032121E4 LDR X11, [X31 + 0xC0]
	0x032121E8 MOV W21, W29
	0x032121EC B 0x3212200
	0x032121F0 MOV W23, W24
	0x032121F4 MOV X25, X26
	0x032121F8 LDP X14, X11, [X31 + 0xB8]
	0x032121FC MOV W26, W28
	0x03212200 CMP W23, W22
	0x03212204 MOV X8, X14
	0x03212208 MOV X9, X11
	0x0321220C MOV W10, W26
	0x03212210 MOV W20, W22
	0x03212214 MOV X24, X19
	0x03212218 B.EQ 0x3211FA0
	0x0321221C MOV X13, X11
	0x03212220 MOV W11, W27
	0x03212224 MOV W12, W26
	0x03212228 MOV X26, X25
	0x0321222C CMP W21, W11
	0x03212230 MOV X8, X14
	0x03212234 MOV X9, X13
	0x03212238 MOV W10, W12
	0x0321223C MOV W20, W22
	0x03212240 MOV X24, X19
	0x03212244 B.EQ 0x3211FA0
	0x03212248 LDR X20, [X31 + 0x80]
	0x0321224C LDP W29, W28, [X31 + 0xB0]
	0x03212250 SUB W8, W21, 0x1
	0x03212254 MOV W27, W11
	0x03212258 MOV X25, X26
	0x0321225C MOV W24, W8
	0x03212260 CMP W8, W29

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11CB000
	009 Move W8, [X24+713]
	010 Move W22, W4
	011 Move X21, X3
	012 Move W23, W2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xEE2000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+713], W8
	024 Move [X19+80], X21
	025 Move [X19+120], W23
	026 Move [X19+124], W20
	027 Compare X21, 0
	028 JumpIfEqual {113}
	029 And W10, W22, 1
	030 Move X22, 0xEE2000
	031 Move X22, [X22+1560]
	032 Move W21, [X21+16]
	033 Move X9, [X19+16]
	034 Move W8, 1
	035 NotImplemented "Instruction BIC not yet implemented."
	036 Move [X19+128], W8
	037 Move [X19+129], W10
	038 Compare X9, 0
	039 JumpIfEqual {42}
	040 Move W9, [X9+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X22]
	043 Move W8, W21
	044 ShiftRight W8, 31
	045 And W8, W8, 0x3FFFFFFF
	046 Add W1, W8, 10
	047 Call 0x1C17D6C
	048 Move W8, [X19+128]
	049 Move [X19+16], X0
	050 Compare W8, 0
	051 JumpIfEqual {61}
	052 Move X8, [X19+24]
	053 Compare X8, 0
	054 JumpIfEqual {57}
	055 Move W8, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X22]
	058 Add W1, W21, 10
	059 Call 0x1C17D6C
	060 Move [X19+24], X0
	061 Move X8, [X19+32]
	062 Compare X8, 0
	063 JumpIfEqual {66}
	064 Move W8, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X22]
	067 Add W1, W21, 10
	068 Call 0x1C17D6C
	069 Move [X19+32], X0
	070 Move X8, [X19+40]
	071 Compare X8, 0
	072 JumpIfNotEqual {77}
	073 Move X0, [X22]
	074 Move W1, 10
	075 Call 0x1C17D6C
	076 Move [X19+40], X0
	077 Move X8, [X19+48]
	078 Compare X8, 0
	079 JumpIfNotEqual {84}
	080 Move X0, [X22]
	081 Move W1, 10
	082 Call 0x1C17D6C
	083 Move [X19+48], X0
	084 Move X8, [X19+56]
	085 Compare X8, 0
	086 JumpIfNotEqual {91}
	087 Move X0, [X22]
	088 Move W1, 10
	089 Call 0x1C17D6C
	090 Move [X19+56], X0
	091 Move X8, [X19+64]
	092 Compare X8, 0
	093 JumpIfNotEqual {98}
	094 Move X0, [X22]
	095 Move W1, 10
	096 Call 0x1C17D6C
	097 Move [X19+64], X0
	098 Move X8, [X19+72]
	099 Compare X8, 0
	100 JumpIfNotEqual {105}
	101 Move X0, [X22]
	102 Move W1, 10
	103 Call 0x1C17D6C
	104 Move [X19+72], X0
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return 
	113 Call 0x1C17F20

Method: System.Void AppendCJKExtension(System.Byte lv1msb, System.Byte lv1lsb)

Disassembly:
	0x03212B58 B 0x3212B90
	0x03212B5C ADRP X8, 0xF0F000
	0x03212B60 LDR X8, [X8 + 0xA10]
	0x03212B64 LDR X0, [X8]
	0x03212B68 LDR W8, [X0 + 0xE0]
	0x03212B6C CBNZ W8, 0x3212B74
	0x03212B70 BL 0x1C16DFC
	0x03212B74 MOV W0, W29
	0x03212B78 BL 0x320E5C4
	0x03212B7C LDR W8, [X31 + 0x7C]
	0x03212B80 LDR W21, [X31 + 0x98]
	0x03212B84 STRB W0, [X26 + 0x3]
	0x03212B88 CMP W8, 0x4
	0x03212B8C B.CS 0x3212C10
	0x03212B90 STR W31, [X31 + 0xC]
	0x03212B94 LDR X14, [X31 + 0xB8]
	0x03212B98 LDR W15, [X31 + 0x74]
	0x03212B9C AND W8, W24, 0xFF
	0x03212BA0 CMP W8, 0x2
	0x03212BA4 B.CC 0x3212690
	0x03212BA8 LDR X8, [X31 + 0x40]
	0x03212BAC STR W29, [X8 + 0x28]
	0x03212BB0 B 0x3212690
	0x03212BB4 CBZ X0, 0x32126A4
	0x03212BB8 LDR X8, [X0 + 0x18]
	0x03212BBC CBZ X8, 0x3213360
	0x03212BC0 LDR W9, [X8 + 0x18]
	0x03212BC4 LDR X8, [X0 + 0x28]
	0x03212BC8 LDR W27, [X31 + 0x5C]
	0x03212BCC ADD W23, W23, W9
	0x03212BD0 CBZ X8, 0x3212DBC
	0x03212BD4 LDR X9, [X31 + 0x40]
	0x03212BD8 LDR X29, [X9 + 0x20]
	0x03212BDC MOV X9, X31
	0x03212BE0 LDR W10, [X8 + 0x18]
	0x03212BE4 CMP X9, W10, SXTW
	0x03212BE8 B.GE 0x3212D84

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X22, X0, 16
	008 Add X23, X0, 88
	009 Move W20, W2
	010 Move W21, W1
	011 Move W1, 254
	012 Move X2, X22
	013 Move X3, X23
	014 Move X19, X0
	015 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	016 Move W1, 255
	017 Move X2, X22
	018 Move X3, X23
	019 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	020 Move W1, W21
	021 Move X2, X22
	022 Move X3, X23
	023 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	024 Move W1, W20
	025 Move X2, X22
	026 Move X3, X23
	027 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	028 Move W8, [X19+128]
	029 Compare W8, 0
	030 JumpIfEqual {35}
	031 Add X2, X19, 24
	032 Add X3, X19, 92
	033 Move W1, 2
	034 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	035 Add X2, X19, 32
	036 Add X3, X19, 96
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W1, 2
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	045 Return 

Method: System.Void AppendKana(System.Byte category, System.Byte lv1, System.Byte lv2, System.Byte lv3, System.Boolean isSmallKana, System.Byte markType, System.Boolean isKatakana, System.Boolean isHalfWidth)

Disassembly:
	0x03212CA4 LDR W15, [X31 + 0x74]
	0x03212CA8 MOVZ W8, 0x3041
	0x03212CAC CMP W8, W10, UXTH
	0x03212CB0 B.HI 0x321273C
	0x03212CB4 ADD W8, W10, 0x9A
	0x03212CB8 AND W8, W8, 0xFFFF
	0x03212CBC CMP W8, 0x38
	0x03212CC0 B.CC 0x3212DD8
	0x03212CC4 UBFM W8, W10, 0x8, 0xF
	0x03212CC8 CMP W8, 0x32
	0x03212CCC B.HI 0x321273C
	0x03212CD0 MOVZ W9, 0x309C
	0x03212CD4 CMP W9, W10, UXTH
	0x03212CD8 B.CS 0x321305C
	0x03212CDC CMP W8, 0x30
	0x03212CE0 B.LS 0x3213080
	0x03212CE4 LDR W9, [X31 + 0x48]
	0x03212CE8 MOVN W8, 0x32CF
	0x03212CEC ADD W8, W9, W8
	0x03212CF0 AND W8, W8, 0xFFFF
	0x03212CF4 CMP W8, 0x2F
	0x03212CF8 CSET W12, CC
	0x03212CFC B 0x3212740
	0x03212D00 LDR X9, [X31 + 0xC0]
	0x03212D04 LDR W27, [X31 + 0x5C]
	0x03212D08 LDR X25, [X31 + 0x60]
	0x03212D0C MOV W8, W28
	0x03212D10 CMP W28, 0x3
	0x03212D14 MOVZ W10, 0x3
	0x03212D18 MOV X8, X14
	0x03212D1C MOV W20, W22
	0x03212D20 MOV X24, X19
	0x03212D24 STR W15, [X31 + 0xB4]
	0x03212D28 B.EQ 0x3211FA0
	0x03212D2C LDR W11, [X31 + 0xC]
	0x03212D30 CMP W11, W12
	0x03212D34 B.EQ 0x3212DE0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, [X31+64]
	009 Move W20, W7
	010 Move W21, W6
	011 Move W22, W5
	012 Move X19, X0
	013 Call SortKeyBuffer.AppendNormal, X0, X1, X2, X3, X4
	014 Compare X19, 0
	015 JumpIfEqual {49}
	016 And W31, W22, 1
	017 Move TEMP, 27
	018 Not TEMP
	019 Move W22, TEMP
	020 Move TEMP, 59
	021 Not TEMP
	022 Move W24, TEMP
	023 Add X3, X19, 100
	024 Add X2, X19, 40
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	027 Add X2, X19, 48
	028 Add X3, X19, 104
	029 Move W1, W21
	030 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	031 And W31, W20, 1
	032 Add X3, X19, 108
	033 Add X2, X19, 56
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	036 And W31, W23, 1
	037 Add X3, X19, 112
	038 Add X2, X19, 64
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	048 Return 
	049 Call 0x1C17F20

Method: System.Void AppendNormal(System.Byte category, System.Byte lv1, System.Byte lv2, System.Byte lv3)

Disassembly:
	0x03212A14 STR W11, [X31 + 0x34]
	0x03212A18 LDRB W8, [X8 + 0x5C]
	0x03212A1C CMP W8, 0x0
	0x03212A20 MOVZ W8, 0x1
	0x03212A24 CINC W10, W8, NE
	0x03212A28 MOV X8, X14
	0x03212A2C B 0x3212020
	0x03212A30 LDR X9, [X31 + 0xC0]
	0x03212A34 LDR W27, [X31 + 0x5C]
	0x03212A38 LDR X25, [X31 + 0x60]
	0x03212A3C MOV W8, W28
	0x03212A40 CMP W28, 0x2
	0x03212A44 MOVZ W10, 0x2
	0x03212A48 MOV X8, X14
	0x03212A4C MOV W20, W22
	0x03212A50 MOV X24, X19
	0x03212A54 STR W15, [X31 + 0xB4]
	0x03212A58 B.EQ 0x3211FA0
	0x03212A5C LDR X9, [X31 + 0x38]
	0x03212A60 LDRB W8, [X26 + 0x3]
	0x03212A64 LDRB W9, [X9 + 0x3]
	0x03212A68 SUBS W11, W8, W9
	0x03212A6C B.EQ 0x3212D00
	0x03212A70 LDR X9, [X31 + 0xC0]
	0x03212A74 LDR W27, [X31 + 0x5C]
	0x03212A78 LDR X25, [X31 + 0x60]
	0x03212A7C MOVZ W10, 0x2
	0x03212A80 MOV X8, X14
	0x03212A84 STR W15, [X31 + 0xB4]
	0x03212A88 STR W11, [X31 + 0x34]
	0x03212A8C MOV W20, W22
	0x03212A90 MOV X24, X19
	0x03212A94 LDR W11, [X31 + 0x24]
	0x03212A98 TBZ X11, 0x0, 0x3211FA0
	0x03212A9C B 0x3213358
	0x03212AA0 LDR X14, [X31 + 0xB8]
	0x03212AA4 LDR W15, [X31 + 0x74]
	0x03212AA8 CBZ X0, 0x3212B00
	0x03212AAC LDR X9, [X0 + 0x18]
	0x03212AB0 CBZ X9, 0x3213360
	0x03212AB4 LDR X8, [X0 + 0x28]
	0x03212AB8 LDR W20, [X9 + 0x18]
	0x03212ABC CBZ X8, 0x3212DA8
	0x03212AC0 LDR X9, [X31 + 0x40]
	0x03212AC4 LDR W21, [X31 + 0x98]
	0x03212AC8 LDR X26, [X9 + 0x18]
	0x03212ACC MOV X9, X31
	0x03212AD0 LDR W10, [X8 + 0x18]
	0x03212AD4 CMP X9, W10, SXTW
	0x03212AD8 B.GE 0x3212D6C
	0x03212ADC CMP X9, X10
	0x03212AE0 B.CS 0x3213364
	0x03212AE4 ADD X8, X8, X9
	0x03212AE8 LDRB W8, [X8 + 0x20]
	0x03212AEC STRB W8, [X26, X9, LSL]
	0x03212AF0 LDR X8, [X0 + 0x28]
	0x03212AF4 ADD X9, X9, 0x1
	0x03212AF8 CBNZ X8, 0x3212AD0
	0x03212AFC B 0x3213360
	0x03212B00 LDR X8, [X31 + 0x40]
	0x03212B04 LDR X0, [X31 + 0x80]
	0x03212B08 MOV W1, W29
	0x03212B0C LDR X26, [X8 + 0x18]
	0x03212B10 STRB W24, [X26]
	0x03212B14 BL 0x3210444
	0x03212B18 LDR W8, [X31 + 0x7C]
	0x03212B1C LDR W9, [X31 + 0x30]
	0x03212B20 STRB W0, [X26 + 0x1]
	0x03212B24 CMP W8, 0x2
	0x03212B28 CSET W8, CC
	0x03212B2C ORR W8, W8, W9, 0x0
	0x03212B30 TBNZ X8, 0x0, 0x3212B48
	0x03212B34 LDR X0, [X31 + 0x80]
	0x03212B38 LDR W2, [X31 + 0x78]
	0x03212B3C MOV W1, W29
	0x03212B40 BL 0x32104D8
	0x03212B44 STRB W0, [X26 + 0x2]
	0x03212B48 LDR W8, [X31 + 0x7C]
	0x03212B4C CMP W8, 0x3
	0x03212B50 B.CS 0x3212B5C
	0x03212B54 LDR W21, [X31 + 0x98]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 And W31, W3, 255
	009 Move W8, 2
	010 And W9, W1, 255
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 And W31, W4, 255
	013 Move W22, W2
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X19, X0
	017 Move W8, [X19+127]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 32
	020 Compare TEMP, 32
	021 JumpIfEqual {63}
	022 Move X0, X19
	023 Move W2, W22
	024 Move X20, [X31+48]
	025 Move X19, [X31+56]
	026 Move X22, [X31+32]
	027 Move X21, [X31+40]
	028 Move X24, [X31+16]
	029 Move X23, [X31+24]
	030 Move W1, 6
	031 Move X30, [X31+64]
	032 Call SortKeyBuffer.AppendLevel5, X0, X1, X2
	033 Return 
	034 Move W8, [X19+128]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare W8, 0
	037 JumpIfEqual {61}
	038 Move W9, [X19+88]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, [X19+92]
	041 Move X8, [X19+24]
	042 Subtract W9, W9, 1
	043 Move [X19+92], W9
	044 Compare X8, 0
	045 JumpIfEqual {91}
	046 Move W10, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X8, X8, W9
	049 Move W10, [X19+96]
	050 Move X9, [X19+32]
	051 Move W8, [X8+32]
	052 Subtract W10, W10, 1
	053 Move [X19+96], W10
	054 Compare X9, 0
	055 JumpIfEqual {91}
	056 Move W11, [X9+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X9, X9, W10
	059 Move W21, [X9+32]
	060 Add W20, W8, W20
	061 And W9, W1, 255
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X23, X19, 16
	064 Add X24, X19, 88
	065 Move X2, X23
	066 Move X3, X24
	067 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	068 Move W1, W22
	069 Move X2, X23
	070 Move X3, X24
	071 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	072 Move W8, [X19+128]
	073 Compare W8, 0
	074 JumpIfEqual {79}
	075 Add X2, X19, 24
	076 Add X3, X19, 92
	077 Move W1, W20
	078 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	079 Add X2, X19, 32
	080 Add X3, X19, 96
	081 Move W1, W21
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	090 Return 
	091 Call 0x1C17F20
	092 Call 0x1C17F28

Method: System.Void AppendLevel5(System.Byte category, System.Byte lv1)

Disassembly:
	0x0321670C LDRH W9, [X8 + 0x12E]
	0x03216710 CBZ X9, 0x3216734
	0x03216714 LDR X10, [X8 + 0xB0]
	0x03216718 ADD X10, X10, 0x8
	0x0321671C LDUR X11, [X10 - 0x8]
	0x03216720 CMP X11, X1
	0x03216724 B.EQ 0x3216744
	0x03216728 SUBS X9, X9, 0x1
	0x0321672C ADD X10, X10, 0x10
	0x03216730 B.NE 0x321671C
	0x03216734 MOV X0, X19
	0x03216738 MOV W2, W31
	0x0321673C BL 0x1C5C788
	0x03216740 B 0x3216750
	0x03216744 LDRSW X9, [X10]
	0x03216748 ADD X8, X8, X9, 0x4, LSL
	0x0321674C ADD X0, X8, 0x138
	0x03216750 LDP X8, X1, [X0]
	0x03216754 MOV X0, X19
	0x03216758 BLR X8
	0x0321675C CBNZ X23, 0x3216768
	0x03216760 MOV X0, X24
	0x03216764 BL 0x1D2C690
	0x03216768 MOV X0, X23
	0x0321676C BL 0x1C16F18
	0x03216770 BL 0x1990590
	0x03216774 STR X30, [X31 - 0x40]!
	0x03216778 STP X24, X23, [X31 + 0x10]
	0x0321677C STP X22, X21, [X31 + 0x20]
	0x03216780 STP X20, X19, [X31 + 0x30]
	0x03216784 ADRP X24, 0x11C6000
	0x03216788 LDRB W8, [X24 + 0x2D1]
	0x0321678C MOV X20, X5
	0x03216790 MOV X19, X4
	0x03216794 MOV X23, X3
	0x03216798 MOV X22, X2
	0x0321679C MOV X21, X1
	0x032167A0 TBNZ X8, 0x0, 0x32167B8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+92]
	008 Add X21, X0, 72
	009 Add X22, X0, 116
	010 Move W19, W2
	011 Add W9, W8, 1
	012 Add W10, W8, 0x2000
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSINC not yet implemented."
	015 And W8, W8, 0xFFFFE000
	016 Subtract W23, W9, W8
	017 NotImplemented "Instruction SXTH not yet implemented."
	018 Move W8, W8
	019 ShiftRight W8, 25
	020 And W8, W8, 0x3FFFFFFF
	021 Add W8, W23, W8
	022 Move W8, W8
	023 ShiftRight W8, 6
	024 And W8, W8, 0x7FFF
	025 Move W20, W1
	026 Xor W1, W8, 0xFFFFFF80
	027 Move X2, X21
	028 Move X3, X22
	029 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	030 Move W1, 3
	031 NotImplemented "Instruction BFM not yet implemented."
	032 Move X2, X21
	033 Move X3, X22
	034 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	035 Move W1, W20
	036 Move X2, X21
	037 Move X3, X22
	038 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	039 Move W1, W19
	040 Move X2, X21
	041 Move X3, X22
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call SortKeyBuffer.AppendBufferPrimitive, X0, X1, X2, X3
	049 Return 

Method: System.Void AppendBufferPrimitive(System.Byte value, ref System.Byte[] buf, ref System.Int32 bidx)

Disassembly:
	0x03216644 B.EQ 0x3216684
	0x03216648 STRB W20, [X22 + 0x21]
	0x0321664C MOV X0, X22
	0x03216650 LDP X20, X19, [X31 + 0x40]
	0x03216654 LDP X22, X21, [X31 + 0x30]
	0x03216658 LDP X24, X23, [X31 + 0x20]
	0x0321665C LDP X26, X25, [X31 + 0x10]
	0x03216660 LDP X30, X27, [X31], #0x50
	0x03216664 RET
	0x03216668 BL 0x1C171E0
	0x0321666C BL 0x1C16F20
	0x03216670 BL 0x1C16F20
	0x03216674 BL 0x1C16F20
	0x03216678 MOV X0, X24
	0x0321667C MOV X1, X26
	0x03216680 BL 0x1C171E0
	0x03216684 BL 0x1C16F28
	0x03216688 BL 0x1C16F20
	0x0321668C MOV X0, X23
	0x03216690 BL 0x1C16F18
	0x03216694 B 0x32166A0
	0x03216698 B 0x32166B8
	0x0321669C B 0x32166B8
	0x032166A0 MOV X24, X0
	0x032166A4 MOV W21, W31
	0x032166A8 B 0x32166BC
	0x032166AC B 0x32166B8
	0x032166B0 B 0x32166B8
	0x032166B4 B 0x32166B8
	0x032166B8 MOV X24, X0
	0x032166BC CMP W1, 0x1
	0x032166C0 B.NE 0x32166DC
	0x032166C4 MOV X0, X24
	0x032166C8 BL 0x3EB1AD0
	0x032166CC LDR X23, [X0]
	0x032166D0 BL 0x3EB1AE0
	0x032166D4 MOV W24, W31
	0x032166D8 B 0x321633C
	0x032166DC MOV X23, X31
	0x032166E0 B 0x32166E8
	0x032166E4 MOV X24, X0
	0x032166E8 ADRP X20, 0xEDD000
	0x032166EC LDR X20, [X20 + 0xE00]
	0x032166F0 LDR X1, [X20]
	0x032166F4 MOV X0, X22
	0x032166F8 BL 0x1C16E00
	0x032166FC MOV X19, X0
	0x03216700 CBZ X0, 0x321675C
	0x03216704 LDR X8, [X19]
	0x03216708 LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x11C7000
	007 Move W8, [X22+714]
	008 Move X20, X3
	009 Move X19, X2
	010 Move W21, W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xEDE000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+714], W8
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Move X9, [X19]
	022 Add W10, W8, 1
	023 Move [X20], W10
	024 Compare X9, 0
	025 JumpIfEqual {59}
	026 Move W10, [X9+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X8, X9, X8
	029 Move [X8+32], W21
	030 Move X9, [X19]
	031 Compare X9, 0
	032 JumpIfEqual {59}
	033 Move W8, [X20]
	034 Move W9, [X9+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, 0xEDE000
	037 Move X9, [X9+1560]
	038 Move W1, W8
	039 ShiftRight W1, 31
	040 And W1, W1, 0x3FFFFFFF
	041 Move X0, [X9]
	042 Call 0x1C17D6C
	043 Move X8, [X19]
	044 Compare X8, 0
	045 JumpIfEqual {59}
	046 Move W2, [X8+24]
	047 Move X20, X0
	048 Move X0, X8
	049 Move X1, X20
	050 Move X3, X31
	051 Call Array.Copy, X0, X1, X2
	052 Move [X19], X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return 
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Globalization.SortKey GetResultAndReset()

Disassembly:
	0x032125DC SUB W9, W23, W9
	0x032125E0 CSEL W8, W9, W8, EQ
	0x032125E4 STR W8, [X31 + 0x58]
	0x032125E8 BL 0x3210444
	0x032125EC LDR X8, [X20]
	0x032125F0 MOV W24, W0
	0x032125F4 LDR W9, [X8 + 0xE0]
	0x032125F8 CBNZ W9, 0x3212604
	0x032125FC MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SortKeyBuffer.GetResult, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X19+130], W31
	007 Move [X19+88], V0
	008 Move [X19+104], V0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0

Method: System.Int32 GetOptimizedLength(System.Byte[] data, System.Int32 len, System.Byte defaultValue)

Disassembly:
	0x03216C7C B.EQ 0x3216C94
	0x03216C80 LDRB W8, [X19 + 0x7]
	0x03216C84 LDP X20, X19, [X31 + 0x10]
	0x03216C88 STRB W8, [X0 + 0x27]
	0x03216C8C LDP X30, X21, [X31], #0x20
	0x03216C90 RET
	0x03216C94 BL 0x1C16F28
	0x03216C98 BL 0x1C16F20
	0x03216C9C STR X30, [X31 - 0x10]!
	0x03216CA0 ADD X0, X31, 0xC
	0x03216CA4 STR S0, [X31 + 0xC]
	0x03216CA8 BL 0x3216B2C
	0x03216CAC LDR X30, [X31], #0x10
	0x03216CB0 RET
	0x03216CB4 STR X30, [X31 - 0x10]!
	0x03216CB8 ADD X0, X31, 0x8
	0x03216CBC STR D0, [X31 + 0x8]
	0x03216CC0 BL 0x3216BC4
	0x03216CC4 LDR X30, [X31], #0x10
	0x03216CC8 RET
	0x03216CCC STR X30, [X31 - 0x10]!
	0x03216CD0 CBZ X1, 0x3216D4C
	0x03216CD4 LDR W8, [X1 + 0x18]
	0x03216CD8 CMP W8, W2

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Compare X1, 0
	004 JumpIfEqual {23}
	005 Move W9, [X1+24]
	006 Move X8, X31
	007 Move W10, W2
	008 Add X12, X1, 32
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W11, TEMP
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W13, [X12]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Add X8, X8, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W0, W11, 1
	019 Move W0, W31
	020 Move X30, [X31+16]
	021 Return X0
	022 Call 0x1C17F28
	023 Call 0x1C17F20

Method: System.Globalization.SortKey GetResult()

Disassembly:
	0x032167A4 ADRP X0, 0xEDD000
	0x032167A8 LDR X0, [X0 + 0x618]
	0x032167AC BL 0x1C16CF4
	0x032167B0 MOVZ W8, 0x1
	0x032167B4 STRB W8, [X24 + 0x2D1]
	0x032167B8 LDRSW X8, [X22]
	0x032167BC ADD W9, W8, 0x1
	0x032167C0 STR W9, [X22]
	0x032167C4 CBZ X21, 0x3216894
	0x032167C8 LDR W9, [X21 + 0x18]
	0x032167CC CMP W8, W9
	0x032167D0 B.CS 0x3216890
	0x032167D4 ADD X8, X21, X8
	0x032167D8 LDRB W8, [X8 + 0x20]
	0x032167DC STRB W8, [X23]
	0x032167E0 LDRSW X9, [X22]
	0x032167E4 ADD W8, W9, 0x1
	0x032167E8 STR W8, [X22]
	0x032167EC LDR W8, [X21 + 0x18]
	0x032167F0 CMP W9, W8
	0x032167F4 B.CS 0x3216890
	0x032167F8 ADD X9, X21, X9
	0x032167FC LDRB W1, [X9 + 0x20]
	0x03216800 STR W1, [X19]
	0x03216804 TBZ X1, 0x7, 0x3216850
	0x03216808 ANDS W9, W1, 0x7F
	0x0321680C STR W31, [X19]
	0x03216810 B.EQ 0x321684C
	0x03216814 MOV W10, W31
	0x03216818 LDRSW X11, [X22]
	0x0321681C ADD W12, W11, 0x1
	0x03216820 CMP W11, W8
	0x03216824 STR W12, [X22]
	0x03216828 B.CS 0x3216890
	0x0321682C ADD X11, X21, X11
	0x03216830 LDRB W1, [X11 + 0x20]
	0x03216834 SUBS W9, W9, 0x1
	0x03216838 BFM W1, W10, 0x18, 0x17
	0x0321683C MOV W10, W1
	0x03216840 STR W1, [X19]
	0x03216844 B.NE 0x3216818
	0x03216848 B 0x3216850
	0x0321684C MOV W1, W31
	0x03216850 ADRP X8, 0xEDD000
	0x03216854 LDR X8, [X8 + 0x618]
	0x03216858 LDR X0, [X8]
	0x0321685C BL 0x1C16D6C
	0x03216860 STR X0, [X20]
	0x03216864 MOV X2, X0
	0x03216868 LDR W1, [X22]
	0x0321686C LDR W4, [X19]
	0x03216870 MOV X0, X21
	0x03216874 LDP X20, X19, [X31 + 0x30]
	0x03216878 LDP X22, X21, [X31 + 0x20]
	0x0321687C LDP X24, X23, [X31 + 0x10]
	0x03216880 MOV W3, W31
	0x03216884 MOV X5, X31
	0x03216888 LDR X30, [X31], #0x40
	0x0321688C B 0x33A8A9C
	0x03216890 BL 0x1C16F28
	0x03216894 BL 0x1C16F20
	0x03216898 STR X30, [X31 - 0x50]!
	0x0321689C STP X26, X25, [X31 + 0x10]
	0x032168A0 STP X24, X23, [X31 + 0x20]
	0x032168A4 STP X22, X21, [X31 + 0x30]
	0x032168A8 STP X20, X19, [X31 + 0x40]
	0x032168AC ADRP X20, 0x11C6000
	0x032168B0 ADRP X21, 0xEDD000
	0x032168B4 ADRP X23, 0xF0A000
	0x032168B8 LDRB W8, [X20 + 0x2D2]
	0x032168BC LDR X21, [X21 + 0x8F0]
	0x032168C0 LDR X23, [X23 + 0xBA8]
	0x032168C4 MOV X19, X0
	0x032168C8 TBNZ X8, 0x0, 0x3216934
	0x032168CC ADRP X0, 0xEDD000
	0x032168D0 LDR X0, [X0 + 0x9C8]
	0x032168D4 BL 0x1C16CF4
	0x032168D8 ADRP X0, 0xEDD000
	0x032168DC LDR X0, [X0 + 0x758]
	0x032168E0 BL 0x1C16CF4
	0x032168E4 ADRP X0, 0xEDD000
	0x032168E8 LDR X0, [X0 + 0x8F0]
	0x032168EC BL 0x1C16CF4
	0x032168F0 ADRP X0, 0xF0A000
	0x032168F4 LDR X0, [X0 + 0xBB0]
	0x032168F8 BL 0x1C16CF4
	0x032168FC ADRP X0, 0xF0A000
	0x03216900 LDR X0, [X0 + 0xBB8]
	0x03216904 BL 0x1C16CF4
	0x03216908 ADRP X0, 0xF0A000
	0x0321690C LDR X0, [X0 + 0xBC0]
	0x03216910 BL 0x1C16CF4
	0x03216914 ADRP X0, 0xF0A000
	0x03216918 LDR X0, [X0 + 0xBC8]
	0x0321691C BL 0x1C16CF4
	0x03216920 ADRP X0, 0xF0A000
	0x03216924 LDR X0, [X0 + 0xBA8]
	0x03216928 BL 0x1C16CF4
	0x0321692C MOVZ W8, 0x1
	0x03216930 STRB W8, [X20 + 0x2D2]
	0x03216934 LDR X0, [X21]
	0x03216938 BL 0x1C16F10
	0x0321693C MOV X1, X31
	0x03216940 MOV X20, X0
	0x03216944 BL 0x3231AC4
	0x03216948 LDR X1, [X23]
	0x0321694C ADD X0, X19, 0x10
	0x03216950 MOV X2, X31
	0x03216954 BL 0x3319C4C
	0x03216958 MOV X21, X0
	0x0321695C MOV X0, X31
	0x03216960 BL 0x33C1548
	0x03216964 CBZ X20, 0x3216AFC
	0x03216968 ADRP X8, 0xF0A000
	0x0321696C LDR X8, [X8 + 0xBB0]
	0x03216970 MOV X3, X0
	0x03216974 MOV X0, X20
	0x03216978 MOV X2, X21
	0x0321697C LDR X1, [X8]
	0x03216980 MOV X4, X31
	0x03216984 BL 0x3234D98
	0x03216988 MOV X0, X19
	0x0321698C BL 0x3215FD4
	0x03216990 CBZ X0, 0x3216AFC
	0x03216994 ADRP X8, 0xEDD000
	0x03216998 LDR X8, [X8 + 0x758]
	0x0321699C LDR X9, [X0 + 0x18]
	0x032169A0 ADRP X22, 0xF0A000
	0x032169A4 ADRP X24, 0xF0A000
	0x032169A8 LDR X0, [X8]
	0x032169AC LDR X22, [X22 + 0xBC0]
	0x032169B0 LDR X24, [X24 + 0xBB8]
	0x032169B4 ADD X1, X31, 0xC
	0x032169B8 STR W9, [X31 + 0xC]
	0x032169BC BL 0x1C16E04
	0x032169C0 MOV X21, X0
	0x032169C4 MOV X0, X31
	0x032169C8 BL 0x33C1548
	0x032169CC LDR X1, [X22]
	0x032169D0 MOV X3, X0
	0x032169D4 MOV X0, X20
	0x032169D8 MOV X2, X21
	0x032169DC MOV X4, X31
	0x032169E0 BL 0x3234D98
	0x032169E4 LDR X1, [X24]
	0x032169E8 MOV X0, X20
	0x032169EC MOV X2, X31
	0x032169F0 BL 0x32333E0
	0x032169F4 MOV X0, X31
	0x032169F8 BL 0x33C1548
	0x032169FC MOV X1, X0
	0x03216A00 MOV X0, X20
	0x03216A04 MOV X2, X31
	0x03216A08 BL 0x32333E0
	0x03216A0C MOV X0, X19
	0x03216A10 BL 0x3215FD4
	0x03216A14 CBZ X0, 0x3216AFC
	0x03216A18 ADRP X25, 0xF0A000
	0x03216A1C ADRP X26, 0xEDD000
	0x03216A20 LDR X25, [X25 + 0xBC8]
	0x03216A24 LDR X26, [X26 + 0x9C8]
	0x03216A28 MOV X24, X31
	0x03216A2C LDRSW X8, [X0 + 0x18]
	0x03216A30 CMP X24, X8
	0x03216A34 B.GE 0x3216B00
	0x03216A38 MOV X0, X19
	0x03216A3C BL 0x3215FD4
	0x03216A40 CBZ X0, 0x3216AFC
	0x03216A44 LDR W8, [X0 + 0x18]
	0x03216A48 CMP X24, X8
	0x03216A4C B.CS 0x3216B28
	0x03216A50 LDR X1, [X23]
	0x03216A54 ADD X8, X0, X24
	0x03216A58 ADD X0, X8, 0x20
	0x03216A5C MOV X2, X31
	0x03216A60 BL 0x3319C4C
	0x03216A64 LDR X1, [X25]
	0x03216A68 MOV X2, X0
	0x03216A6C MOV X0, X20
	0x03216A70 MOV X3, X31
	0x03216A74 BL 0x3234224
	0x03216A78 ADD X24, X24, 0x1
	0x03216A7C ANDS X31, X24, 0xF
	0x03216A80 B.NE 0x3216AF0
	0x03216A84 MOV X0, X31
	0x03216A88 BL 0x33C1548
	0x03216A8C LDR X22, [X26]
	0x03216A90 MOV X21, X0
	0x03216A94 LDR X8, [X22 + 0x38]
	0x03216A98 CBNZ X8, 0x3216AA8
	0x03216A9C MOV X0, X22
	0x03216AA0 BL 0x1C5C6E0
	0x03216AA4 LDR X8, [X22 + 0x38]
	0x03216AA8 LDR X0, [X8 + 0x10]
	0x03216AAC LDRB W8, [X0 + 0x135]
	0x03216AB0 TBNZ X8, 0x0, 0x3216AB8
	0x03216AB4 BL 0x1C5C684
	0x03216AB8 LDR W8, [X0 + 0xE0]
	0x03216ABC CBNZ W8, 0x3216AC4
	0x03216AC0 BL 0x1C16DFC
	0x03216AC4 LDR X8, [X22 + 0x38]
	0x03216AC8 LDR X0, [X8 + 0x10]
	0x03216ACC LDRB W8, [X0 + 0x135]
	0x03216AD0 TBNZ X8, 0x0, 0x3216AD8
	0x03216AD4 BL 0x1C5C684
	0x03216AD8 LDR X8, [X0 + 0xB8]
	0x03216ADC MOV X0, X20
	0x03216AE0 MOV X1, X21
	0x03216AE4 MOV X3, X31
	0x03216AE8 LDR X2, [X8]
	0x03216AEC BL 0x3234E54
	0x03216AF0 MOV X0, X19
	0x03216AF4 BL 0x3215FD4
	0x03216AF8 CBNZ X0, 0x3216A2C
	0x03216AFC BL 0x1C16F20
	0x03216B00 LDR X8, [X20]
	0x03216B04 MOV X0, X20
	0x03216B08 LDP X9, X1, [X8 + 0x168]
	0x03216B0C BLR X9
	0x03216B10 LDP X20, X19, [X31 + 0x40]
	0x03216B14 LDP X22, X21, [X31 + 0x30]
	0x03216B18 LDP X24, X23, [X31 + 0x20]
	0x03216B1C LDP X26, X25, [X31 + 0x10]
	0x03216B20 LDR X30, [X31], #0x50
	0x03216B24 RET
	0x03216B28 BL 0x1C16F28
	0x03216B2C STP X30, X21, [X31 - 0x20]!
	0x03216B30 STP X20, X19, [X31 + 0x10]
	0x03216B34 ADRP X20, 0x11C6000
	0x03216B38 ADRP X21, 0xEDD000
	0x03216B3C LDRB W8, [X20 + 0x2D3]
	0x03216B40 LDR X21, [X21 + 0x618]
	0x03216B44 MOV X19, X0
	0x03216B48 TBNZ X8, 0x0, 0x3216B60
	0x03216B4C ADRP X0, 0xEDD000
	0x03216B50 LDR X0, [X0 + 0x618]
	0x03216B54 BL 0x1C16CF4
	0x03216B58 MOVZ W8, 0x1
	0x03216B5C STRB W8, [X20 + 0x2D3]
	0x03216B60 LDR X0, [X21]
	0x03216B64 MOVZ W1, 0x4
	0x03216B68 BL 0x1C16D6C
	0x03216B6C CBZ X0, 0x3216BC0
	0x03216B70 LDR W8, [X0 + 0x18]
	0x03216B74 CBZ W8, 0x3216BBC
	0x03216B78 LDRB W9, [X19]
	0x03216B7C CMP W8, 0x1
	0x03216B80 STRB W9, [X0 + 0x20]
	0x03216B84 B.EQ 0x3216BBC
	0x03216B88 LDRB W9, [X19 + 0x1]
	0x03216B8C CMP W8, 0x2
	0x03216B90 STRB W9, [X0 + 0x21]
	0x03216B94 B.LS 0x3216BBC
	0x03216B98 LDRB W9, [X19 + 0x2]
	0x03216B9C CMP W8, 0x3
	0x03216BA0 STRB W9, [X0 + 0x22]
	0x03216BA4 B.EQ 0x3216BBC
	0x03216BA8 LDRB W8, [X19 + 0x3]
	0x03216BAC LDP X20, X19, [X31 + 0x10]
	0x03216BB0 STRB W8, [X0 + 0x23]
	0x03216BB4 LDP X30, X21, [X31], #0x20
	0x03216BB8 RET
	0x03216BBC BL 0x1C16F28
	0x03216BC0 BL 0x1C16F20
	0x03216BC4 STP X30, X21, [X31 - 0x20]!
	0x03216BC8 STP X20, X19, [X31 + 0x10]
	0x03216BCC ADRP X20, 0x11C6000
	0x03216BD0 ADRP X21, 0xEDD000
	0x03216BD4 LDRB W8, [X20 + 0x2D4]
	0x03216BD8 LDR X21, [X21 + 0x618]
	0x03216BDC MOV X19, X0
	0x03216BE0 TBNZ X8, 0x0, 0x3216BF8
	0x03216BE4 ADRP X0, 0xEDD000
	0x03216BE8 LDR X0, [X0 + 0x618]
	0x03216BEC BL 0x1C16CF4
	0x03216BF0 MOVZ W8, 0x1
	0x03216BF4 STRB W8, [X20 + 0x2D4]
	0x03216BF8 LDR X0, [X21]
	0x03216BFC MOVZ W1, 0x8
	0x03216C00 BL 0x1C16D6C
	0x03216C04 CBZ X0, 0x3216C98
	0x03216C08 LDR W8, [X0 + 0x18]
	0x03216C0C CBZ W8, 0x3216C94
	0x03216C10 LDRB W9, [X19]
	0x03216C14 CMP W8, 0x1
	0x03216C18 STRB W9, [X0 + 0x20]
	0x03216C1C B.EQ 0x3216C94
	0x03216C20 LDRB W9, [X19 + 0x1]
	0x03216C24 CMP W8, 0x2
	0x03216C28 STRB W9, [X0 + 0x21]
	0x03216C2C B.LS 0x3216C94
	0x03216C30 LDRB W9, [X19 + 0x2]
	0x03216C34 CMP W8, 0x3
	0x03216C38 STRB W9, [X0 + 0x22]
	0x03216C3C B.EQ 0x3216C94
	0x03216C40 LDRB W9, [X19 + 0x3]
	0x03216C44 CMP W8, 0x4
	0x03216C48 STRB W9, [X0 + 0x23]
	0x03216C4C B.LS 0x3216C94
	0x03216C50 LDRB W9, [X19 + 0x4]
	0x03216C54 CMP W8, 0x5
	0x03216C58 STRB W9, [X0 + 0x24]
	0x03216C5C B.EQ 0x3216C94
	0x03216C60 LDRB W9, [X19 + 0x5]
	0x03216C64 CMP W8, 0x6
	0x03216C68 STRB W9, [X0 + 0x25]
	0x03216C6C B.LS 0x3216C94
	0x03216C70 LDRB W9, [X19 + 0x6]
	0x03216C74 CMP W8, 0x7
	0x03216C78 STRB W9, [X0 + 0x26]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x11C7000
	015 Move W8, [X20+715]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xF0C000
	022 Move X0, [X0+384]
	023 Call 0x1C17CF4
	024 Move X0, 0xEDE000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0xF0C000
	028 Move X0, [X0+3096]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+715], W8
	032 Move X20, [X19+80]
	033 Compare X20, 0
	034 JumpIfEqual {323}
	035 Move X22, 0xEDE000
	036 Move X24, 0xF0C000
	037 Move W8, [X20+16]
	038 Move X22, [X22+1560]
	039 Move X24, [X24+3096]
	040 Compare W8, 0
	041 JumpIfEqual {61}
	042 Move W8, [X19+129]
	043 Compare W8, 0
	044 JumpIfEqual {94}
	045 Move W8, [X19+130]
	046 Compare W8, 0
	047 JumpIfNotEqual {94}
	048 Move X0, [X19+24]
	049 Compare X0, 0
	050 JumpIfEqual {94}
	051 Move W8, [X0+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X2, X31
	054 Add X9, X0, 32
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W10, [X9]
	057 Compare W10, 0
	058 JumpIfEqual {87}
	059 Add X2, X2, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X22]
	062 Move W21, [X19+120]
	063 Move W1, W31
	064 Call 0x1C17D6C
	065 Move X8, [X24]
	066 Move W19, [X19+124]
	067 Move X22, X0
	068 Move X0, X8
	069 Call 0x1C17F10
	070 Move W1, W21
	071 Move X2, X20
	072 Move X3, X22
	073 Move W4, W19
	074 Move W5, W31
	075 Move W6, W31
	076 Move W7, W31
	077 Move X23, X0
	078 Move [X31+40], X31
	079 Move [X31+32], W31
	080 Move [X31+24], W31
	081 Move [X31+16], W31
	082 Move [X31+8], W31
	083 Move [X31], W31
	084 Call SortKey..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12
	085 Move X0, X23
	086 Move W2, W31
	087 Move X8, 0xF0C000
	088 Move X8, [X8+384]
	089 Move W1, W31
	090 Move X3, [X8]
	091 Call Array.Reverse, X0, X1, X2
	092 Move W8, 1
	093 Move [X19+130], W8
	094 Move X1, [X19+24]
	095 Move W2, [X19+92]
	096 Move W3, 2
	097 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	098 Move X1, [X19+32]
	099 Move W2, [X19+96]
	100 Move W3, 2
	101 Move [X19+92], W0
	102 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	103 Move W21, [X19+100]
	104 Move X1, [X19+40]
	105 Move W3, 228
	106 Move [X19+96], W0
	107 Move W2, W21
	108 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	109 Move X1, [X19+48]
	110 Move W2, [X19+104]
	111 Move W3, 3
	112 Move [X19+100], W0
	113 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	114 Move X1, [X19+56]
	115 Move W2, [X19+108]
	116 Move W3, 228
	117 Move [X19+104], W0
	118 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	119 Move X1, [X19+64]
	120 Move W2, [X19+112]
	121 Move W3, 228
	122 Move [X19+108], W0
	123 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	124 Move X1, [X19+72]
	125 Move W2, [X19+116]
	126 Move W3, 2
	127 Move [X19+112], W0
	128 Call SortKeyBuffer.GetOptimizedLength, X0, X1, X2, X3
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move W9, [X19+88]
	131 Move W10, [X19+92]
	132 Move W11, [X19+96]
	133 Move [X19+116], W0
	134 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	135 Move X8, [X22]
	136 Add W9, W0, W9
	137 Move W12, S0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add W12, W12, 4
	140 Add W9, W9, W10
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Add W9, W9, W11
	143 Add W9, W9, W10
	144 Add W1, W9, 5
	145 Move X0, X8
	146 Call 0x1C17D6C
	147 Move X8, [X19+16]
	148 Move W2, [X19+88]
	149 Move X20, X0
	150 Move X1, X20
	151 Move X0, X8
	152 Move X3, X31
	153 Call Array.Copy, X0, X1, X2
	154 Compare X20, 0
	155 JumpIfEqual {323}
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Move W9, [X20+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X8, X20, X8
	160 Move W9, 1
	161 Move [X8+32], W9
	162 Move W8, [X19+88]
	163 Move W4, [X19+92]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add W22, W8, 1
	166 Move X0, [X19+24]
	167 Move W1, W31
	168 Move X2, X20
	169 Move W3, W22
	170 Move X5, X31
	171 Call Array.Copy, X0, X1, X2, X3, X4
	172 Move W4, [X19+92]
	173 Move W9, [X20+24]
	174 Add W8, W4, W22
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add X9, X20, W8
	177 Move W10, 1
	178 Move [X9+32], W10
	179 Move W4, [X19+96]
	180 Add W22, W8, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X19+32]
	183 Move W1, W31
	184 Move X2, X20
	185 Move W3, W22
	186 Move X5, X31
	187 Call Array.Copy, X0, X1, X2, X3, X4
	188 Move W4, [X19+96]
	189 Move W9, [X20+24]
	190 Add W8, W4, W22
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W22, W8, 1
	193 Add X8, X20, W8
	194 Move W9, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X8+32], W9
	197 Move X0, [X19+40]
	198 Move W4, [X19+100]
	199 Move W1, W31
	200 Move X2, X20
	201 Move W3, W22
	202 Move X5, X31
	203 Call Array.Copy, X0, X1, X2, X3, X4
	204 Move W8, [X19+100]
	205 Move W9, [X20+24]
	206 Add W8, W8, W22
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X9, X20, W8
	209 Move W10, 255
	210 Move [X9+32], W10
	211 Move X0, [X19+48]
	212 Move W4, [X19+104]
	213 Add W21, W8, 1
	214 Move W1, W31
	215 Move X2, X20
	216 Move W3, W21
	217 Move X5, X31
	218 Call Array.Copy, X0, X1, X2, X3, X4
	219 Move W8, [X19+104]
	220 Move W9, [X20+24]
	221 Add W8, W8, W21
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X9, X20, W8
	224 Move W10, 2
	225 Move [X9+32], W10
	226 Move X0, [X19+56]
	227 Move W4, [X19+108]
	228 Add W21, W8, 1
	229 Move W1, W31
	230 Move X2, X20
	231 Move W3, W21
	232 Move X5, X31
	233 Call Array.Copy, X0, X1, X2, X3, X4
	234 Move W8, [X19+108]
	235 Move W9, [X20+24]
	236 Add W8, W8, W21
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add X9, X20, W8
	239 Move W23, 255
	240 Move [X9+32], W23
	241 Move X0, [X19+64]
	242 Move W4, [X19+112]
	243 Add W21, W8, 1
	244 Move W1, W31
	245 Move X2, X20
	246 Move W3, W21
	247 Move X5, X31
	248 Call Array.Copy, X0, X1, X2, X3, X4
	249 Move W8, [X19+112]
	250 Move W9, [X20+24]
	251 Add W8, W8, W21
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Add W22, W8, 1
	254 Add X8, X20, W8
	255 Move [X8+32], W23
	256 Move W8, [X20+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Add X8, X20, W22
	259 Move W9, 1
	260 Move [X8+32], W9
	261 Move W4, [X19+116]
	262 Add W21, W22, 1
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, [X19+72]
	265 Move W1, W31
	266 Move X2, X20
	267 Move W3, W21
	268 Move X5, X31
	269 Call Array.Copy, X0, X1, X2, X3, X4
	270 Move W4, [X19+116]
	271 Move W9, [X20+24]
	272 Add W8, W4, W21
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add X8, X20, W8
	275 Move X10, X24
	276 Move [X8+32], W31
	277 Move W22, [X19+120]
	278 Move W9, [X19+124]
	279 Move W8, [X19+88]
	280 Move W25, [X19+92]
	281 Move X0, [X10]
	282 Move X21, [X19+80]
	283 Move W26, [X19+96]
	284 Move W28, [X19+100]
	285 Move W29, [X19+104]
	286 Move W27, [X19+108]
	287 Move W23, [X19+112]
	288 Move W24, [X19+116]
	289 Move [X31+56], W8
	290 Move [X31+60], W9
	291 Call 0x1C17F10
	292 Move W5, [X31+56]
	293 Move W4, [X31+60]
	294 Move W1, W22
	295 Move X2, X21
	296 Move X3, X20
	297 Move W6, W25
	298 Move W7, W26
	299 Move X19, X0
	300 Move [X31+40], X31
	301 Move [X31+32], W24
	302 Move [X31+24], W23
	303 Move [X31+16], W27
	304 Move [X31+8], W29
	305 Move [X31], W28
	306 Call SortKey..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12
	307 Move X0, X19
	308 Move X20, [X31+144]
	309 Move X19, [X31+152]
	310 Move X22, [X31+128]
	311 Move X21, [X31+136]
	312 Move X24, [X31+112]
	313 Move X23, [X31+120]
	314 Move X26, [X31+96]
	315 Move X25, [X31+104]
	316 Move X28, [X31+80]
	317 Move X27, [X31+88]
	318 Move X29, [X31+64]
	319 Move X30, [X31+72]
	320 Add X31, X31, 160
	321 Return X0
	322 Call 0x1C17F28
	323 Call 0x1C17F20

