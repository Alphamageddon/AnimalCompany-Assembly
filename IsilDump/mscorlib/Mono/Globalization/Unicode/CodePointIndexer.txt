Type: Mono.Globalization.Unicode.CodePointIndexer

Method: System.Void .ctor(System.Int32[] starts, System.Int32[] ends, System.Int32 defaultIndex, System.Int32 defaultCP)

Disassembly:
	0x0320E580 LDR X9, [X0 + 0xB8]
	0x0320E584 LDR W10, [X8 + 0xE0]
	0x0320E588 LDR X20, [X9 + 0x20]
	0x0320E58C CBNZ W10, 0x320E59C
	0x0320E590 MOV X0, X8
	0x0320E594 BL 0x1C16DFC
	0x0320E598 LDR X8, [X21]
	0x0320E59C LDR X8, [X8 + 0xB8]
	0x0320E5A0 LDR X0, [X8 + 0x18]
	0x0320E5A4 CBZ X0, 0x320E5C0
	0x0320E5A8 MOV W1, W19
	0x0320E5AC BL 0x320D6F0
	0x0320E5B0 LDRB W0, [X20, W0, SXTW]
	0x0320E5B4 LDP X20, X19, [X31 + 0x10]
	0x0320E5B8 LDP X30, X21, [X31], #0x20
	0x0320E5BC RET
	0x0320E5C0 BL 0x1C16F20
	0x0320E5C4 STP X30, X21, [X31 - 0x20]!
	0x0320E5C8 STP X20, X19, [X31 + 0x10]
	0x0320E5CC ADRP X21, 0x11CE000
	0x0320E5D0 ADRP X20, 0xF13000
	0x0320E5D4 LDRB W8, [X21 + 0x2A7]
	0x0320E5D8 LDR X20, [X20 + 0xA10]
	0x0320E5DC MOV W19, W0
	0x0320E5E0 TBNZ X8, 0x0, 0x320E604
	0x0320E5E4 ADRP X0, 0xF13000
	0x0320E5E8 LDR X0, [X0 + 0xAA8]
	0x0320E5EC BL 0x1C16CF4
	0x0320E5F0 ADRP X0, 0xF13000
	0x0320E5F4 LDR X0, [X0 + 0xA10]
	0x0320E5F8 BL 0x1C16CF4
	0x0320E5FC MOVZ W8, 0x1
	0x0320E600 STRB W8, [X21 + 0x2A7]
	0x0320E604 LDR X0, [X20]
	0x0320E608 ADRP X21, 0xF13000
	0x0320E60C LDR W8, [X0 + 0xE0]
	0x0320E610 LDR X21, [X21 + 0xAA8]
	0x0320E614 CBNZ W8, 0x320E620
	0x0320E618 BL 0x1C16DFC
	0x0320E61C LDR X0, [X20]
	0x0320E620 LDR X8, [X21]
	0x0320E624 LDR X9, [X0 + 0xB8]
	0x0320E628 LDR W10, [X8 + 0xE0]
	0x0320E62C LDR X20, [X9 + 0x28]
	0x0320E630 CBNZ W10, 0x320E640
	0x0320E634 MOV X0, X8
	0x0320E638 BL 0x1C16DFC
	0x0320E63C LDR X8, [X21]
	0x0320E640 LDR X8, [X8 + 0xB8]
	0x0320E644 LDR X0, [X8 + 0x20]
	0x0320E648 CBZ X0, 0x320E664
	0x0320E64C MOV W1, W19
	0x0320E650 BL 0x320D6F0
	0x0320E654 LDRB W0, [X20, W0, SXTW]
	0x0320E658 LDP X20, X19, [X31 + 0x10]
	0x0320E65C LDP X30, X21, [X31], #0x20
	0x0320E660 RET
	0x0320E664 BL 0x1C16F20
	0x0320E668 STP X30, X21, [X31 - 0x20]!
	0x0320E66C STP X20, X19, [X31 + 0x10]
	0x0320E670 ADRP X21, 0x11CE000
	0x0320E674 LDRB W8, [X21 + 0x2A8]
	0x0320E678 MOV W19, W1
	0x0320E67C MOV W20, W0
	0x0320E680 TBNZ X8, 0x0, 0x320E6B0
	0x0320E684 ADRP X0, 0xEE7000
	0x0320E688 LDR X0, [X0 + 0x170]
	0x0320E68C BL 0x1C16CF4
	0x0320E690 ADRP X0, 0xF13000
	0x0320E694 LDR X0, [X0 + 0xAA8]
	0x0320E698 BL 0x1C16CF4
	0x0320E69C ADRP X0, 0xF13000
	0x0320E6A0 LDR X0, [X0 + 0xA10]
	0x0320E6A4 BL 0x1C16CF4
	0x0320E6A8 MOVZ W8, 0x1
	0x0320E6AC STRB W8, [X21 + 0x2A8]
	0x0320E6B0 CBZ W20, 0x320E764
	0x0320E6B4 TBZ X19, 0x0, 0x320E6F8
	0x0320E6B8 ADRP X8, 0xEE7000
	0x0320E6BC LDR X8, [X8 + 0x170]
	0x0320E6C0 LDR X0, [X8]
	0x0320E6C4 LDR W8, [X0 + 0xE0]
	0x0320E6C8 CBNZ W8, 0x320E6D0
	0x0320E6CC BL 0x1C16DFC
	0x0320E6D0 MOV W0, W20
	0x0320E6D4 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x11CF000
	009 Move W8, [X24+671]
	010 Move W22, W4
	011 Move W23, W3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xF14000
	020 Move X0, [X0+2560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+671], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move [X19+28], W23
	028 Move [X19+32], W22
	029 Compare X21, 0
	030 JumpIfEqual {80}
	031 Move X8, 0xF14000
	032 Move X8, [X8+2560]
	033 Move W1, [X21+24]
	034 Move X0, [X8]
	035 Call 0x1C17D6C
	036 Move [X19+16], X0
	037 Compare X0, 0
	038 JumpIfEqual {80}
	039 Move X8, X31
	040 Move X9, X31
	041 Add X10, X21, 32
	042 Add X11, X20, 32
	043 Move W12, 20
	044 Move X13, [X0+24]
	045 And X14, X13, 0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W14, [X21+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X20, 0
	050 JumpIfEqual {80}
	051 Move W14, [X20+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W14, [X10]
	054 Move W15, [X11]
	055 Compare X9, 0
	056 JumpIfEqual {64}
	057 Subtract W16, W9, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X16, X0, X8
	060 Move W16, [X16+20]
	061 Move W17, [X16+24]
	062 Add W16, W16, W17
	063 Move W17, W9
	064 Move W17, W31
	065 Move W16, W31
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract W13, W15, W14
	068 NotImplemented "Instruction SMADDL not yet implemented."
	069 Add W0, W16, W13
	070 Move [X17+32], W14
	071 Move [X17+36], W15
	072 Move [X17+40], W13
	073 Move [X17+44], W16
	074 Move [X17+48], W0
	075 Move X0, [X19+16]
	076 Add X9, X9, 1
	077 Add X8, X8, 20
	078 Compare X0, 0
	079 JumpIfNotEqual {44}
	080 Call 0x1C17F20
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W8, [X19+24]
	083 Add X9, X0, 40
	084 Move W10, [X9+20]
	085 Subtract X14, X14, 1
	086 Add W8, W10, W8
	087 Move [X19+24], W8
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return 
	096 Call 0x1C17F28

Method: System.Int32 ToIndex(System.Int32 cp)

Disassembly:
	0x0320E6F0 CMP W8, 0x300
	0x0320E6F4 B.CC 0x320E770
	0x0320E6F8 ADRP X21, 0xF13000
	0x0320E6FC LDR X21, [X21 + 0xAA8]
	0x0320E700 LDR X0, [X21]
	0x0320E704 LDR W8, [X0 + 0xE0]
	0x0320E708 CBNZ W8, 0x320E714
	0x0320E70C BL 0x1C16DFC
	0x0320E710 LDR X0, [X21]
	0x0320E714 LDR X8, [X0 + 0xB8]
	0x0320E718 LDR X0, [X8]
	0x0320E71C CBZ X0, 0x320E77C
	0x0320E720 MOV W1, W20
	0x0320E724 BL 0x320D6F0
	0x0320E728 TBNZ X0, 0x1F, 0x320E76C
	0x0320E72C ADRP X21, 0xF13000
	0x0320E730 LDR X21, [X21 + 0xA10]
	0x0320E734 MOV W20, W0
	0x0320E738 LDR X0, [X21]
	0x0320E73C LDR W8, [X0 + 0xE0]
	0x0320E740 CBNZ W8, 0x320E74C
	0x0320E744 BL 0x1C16DFC
	0x0320E748 LDR X0, [X21]
	0x0320E74C LDR X8, [X0 + 0xB8]
	0x0320E750 LDR X8, [X8 + 0x8]
	0x0320E754 LDRB W8, [X8, W20, UXTW]
	0x0320E758 ANDS W31, W19, W8, 0x0
	0x0320E75C CSET W0, NE
	0x0320E760 B 0x320E770
	0x0320E764 MOVZ W0, 0x1
	0x0320E768 B 0x320E770
	0x0320E76C MOV W0, W31
	0x0320E770 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {28}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W10, W31
	008 Move W11, 20
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction SMADDL not yet implemented."
	011 Move W12, [X12+32]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X13, W10
	014 NotImplemented "Instruction MADD not yet implemented."
	015 Move W14, [X14+36]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add W10, W10, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, [X0+28]
	020 Move W9, 20
	021 NotImplemented "Instruction MADD not yet implemented."
	022 Move W8, [X8+44]
	023 Subtract W9, W1, W12
	024 Add W0, W9, W8
	025 Move X30, [X31+16]
	026 Return X0
	027 Call 0x1C17F28
	028 Call 0x1C17F20

