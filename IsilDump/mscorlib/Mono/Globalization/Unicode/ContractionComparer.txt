Type: Mono.Globalization.Unicode.ContractionComparer

Method: System.Int32 Compare(Mono.Globalization.Unicode.Contraction c1, Mono.Globalization.Unicode.Contraction c2)

Disassembly:
	0x0320E7FC MOVZ W8, 0xFF01
	0x0320E800 CMP W0, W8
	0x0320E804 B.GE 0x320E86C
	0x0320E808 MOVZ W8, 0x32FE
	0x0320E80C CMP W0, W8
	0x0320E810 B.GT 0x320E894
	0x0320E814 MOVZ W8, 0x2193
	0x0320E818 CMP W0, W8
	0x0320E81C B.LE 0x320E8A0
	0x0320E820 MOVZ W8, 0x2502
	0x0320E824 CMP W0, W8
	0x0320E828 B.LT 0x320E894
	0x0320E82C MOVZ W8, 0x25CB
	0x0320E830 CMP W0, W8
	0x0320E834 B.LE 0x320E8AC
	0x0320E838 CMP W0, 0x3000
	0x0320E83C B.LT 0x320E894
	0x0320E840 MOVZ W8, 0x3130
	0x0320E844 CMP W0, W8
	0x0320E848 B.LE 0x320E8D8
	0x0320E84C MOVZ W8, 0x3163
	0x0320E850 CMP W0, W8
	0x0320E854 B.LE 0x320E914
	0x0320E858 MOVZ W8, 0x3164
	0x0320E85C CMP W0, W8
	0x0320E860 MOVZ W8, 0xFFA0
	0x0320E864 CSEL W0, W8, W0, EQ
	0x0320E868 RET
	0x0320E86C MOVZ W8, 0xFF5E
	0x0320E870 CMP W0, W8
	0x0320E874 B.LE 0x320E898
	0x0320E878 MOVN W8, 0xFFDF
	0x0320E87C ADD W8, W0, W8
	0x0320E880 CMP W8, 0x7
	0x0320E884 B.CS 0x320E894
	0x0320E888 ADRP X9, 0xFFFFFFFFFD988000
	0x0320E88C ADD X9, X9, 0x428

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {35}
	004 Compare X2, 0
	005 JumpIfEqual {35}
	006 Move X8, [X1+24]
	007 Compare X8, 0
	008 JumpIfEqual {35}
	009 Move X9, [X2+24]
	010 Compare X9, 0
	011 JumpIfEqual {35}
	012 Move W10, [X8+24]
	013 Move W11, [X9+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W13, W31
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X13, W13
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X14, X8, X13
	022 Add X15, X9, X13
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Subtract W0, W14, W15
	026 Add W13, W13, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract W0, W10, W11
	029 Move W8, [X1+16]
	030 Move W9, [X2+16]
	031 Subtract W0, W8, W9
	032 Move X30, [X31+16]
	033 Return X0
	034 Call 0x1C17F28
	035 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0320E890 LDR W0, [X9, W8, SXTW]
	0x0320E894 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x0320E898 MOVN W8, 0xFEDF
	0x0320E89C B 0x320E8A4
	0x0320E8A0 MOVZ W8, 0xDE59
	0x0320E8A4 ADD W0, W0, W8
	0x0320E8A8 RET
	0x0320E8AC MOVZ W8, 0x2502
	0x0320E8B0 CMP W0, W8
	0x0320E8B4 B.EQ 0x320E904
	0x0320E8B8 MOVZ W8, 0x25A0
	0x0320E8BC CMP W0, W8
	0x0320E8C0 B.EQ 0x320E90C
	0x0320E8C4 MOVZ W8, 0x25CB
	0x0320E8C8 CMP W0, W8
	0x0320E8CC B.NE 0x320E894
	0x0320E8D0 MOVZ W0, 0xFFEE
	0x0320E8D4 RET
	0x0320E8D8 MOVZ W8, 0x300C
	0x0320E8DC CMP W0, W8
	0x0320E8E0 B.LE 0x320E91C
	0x0320E8E4 MOVZ W8, 0x300D
	0x0320E8E8 CMP W0, W8
	0x0320E8EC B.EQ 0x320E964
	0x0320E8F0 MOVZ W8, 0x30FB

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x11CF000
	005 Move X20, 0xF14000
	006 Move W8, [X19+672]
	007 Move X20, [X20+2568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF14000
	013 Move X0, [X0+2568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+672], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

