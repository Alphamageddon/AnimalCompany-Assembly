Type: Mono.Globalization.Unicode.MSCompatUnicodeTable

Method: Mono.Globalization.Unicode.TailoringInfo GetTailoringInfo(System.Int32 lcid)

Disassembly:
	0x0320E924 B.GT 0x320E944
	0x0320E928 CMP W0, 0x3000
	0x0320E92C B.EQ 0x320E96C
	0x0320E930 MOVZ W8, 0x3001
	0x0320E934 CMP W0, W8
	0x0320E938 B.NE 0x320E894
	0x0320E93C MOVZ W0, 0xFF64
	0x0320E940 RET
	0x0320E944 MOVZ W8, 0x3002
	0x0320E948 CMP W0, W8
	0x0320E94C B.EQ 0x320E974
	0x0320E950 MOVZ W8, 0x300C
	0x0320E954 CMP W0, W8
	0x0320E958 B.NE 0x320E894
	0x0320E95C MOVZ W0, 0xFF62
	0x0320E960 RET
	0x0320E964 MOVZ W0, 0xFF63
	0x0320E968 RET
	0x0320E96C MOVZ W0, 0x20
	0x0320E970 RET
	0x0320E974 MOVZ W0, 0xFF61
	0x0320E978 RET
	0x0320E97C MOVZ W8, 0x3041
	0x0320E980 CMP W8, W0, UXTH
	0x0320E984 B.HI 0x320E9CC
	0x0320E988 ADD W8, W0, 0x9A
	0x0320E98C AND W8, W8, 0xFFFF
	0x0320E990 CMP W8, 0x38
	0x0320E994 B.CC 0x320E9D4
	0x0320E998 UBFM W8, W0, 0x8, 0xF
	0x0320E99C CMP W8, 0x32
	0x0320E9A0 B.HI 0x320E9CC
	0x0320E9A4 MOVZ W9, 0x309C
	0x0320E9A8 CMP W9, W0, UXTH
	0x0320E9AC B.CS 0x320E9DC
	0x0320E9B0 CMP W8, 0x30
	0x0320E9B4 B.LS 0x320E9EC
	0x0320E9B8 UBFM W8, W0, 0x4, 0xF
	0x0320E9BC CMP W8, 0x32D
	0x0320E9C0 B.CC 0x320E9CC
	0x0320E9C4 MOVZ W8, 0x32FF
	0x0320E9C8 B 0x320E9E0
	0x0320E9CC MOV W0, W31
	0x0320E9D0 RET
	0x0320E9D4 MOVZ W0, 0x1
	0x0320E9D8 RET
	0x0320E9DC MOVZ W8, 0x3099
	0x0320E9E0 CMP W8, W0, UXTH
	0x0320E9E4 CSET W0, HI
	0x0320E9E8 RET
	0x0320E9EC MOVZ W8, 0x30FB
	0x0320E9F0 CMP W8, W0, UXTH
	0x0320E9F4 CSET W0, NE
	0x0320E9F8 RET
	0x0320E9FC ADD W8, W0, 0x9A
	0x0320EA00 AND W8, W8, 0xFFFF
	0x0320EA04 CMP W8, 0x38
	0x0320EA08 CSET W0, CC
	0x0320EA0C RET
	0x0320EA10 MOVN W8, 0x3040
	0x0320EA14 ADD W8, W0, W8
	0x0320EA18 AND W8, W8, 0xFFFF
	0x0320EA1C CMP W8, 0x54
	0x0320EA20 CSET W0, CC
	0x0320EA24 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11CF000
	007 Move X20, 0xF14000
	008 Move W8, [X21+673]
	009 Move X20, [X20+2576]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF14000
	016 Move X0, [X0+2576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+673], W8
	020 Move X0, [X20]
	021 Move W21, W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X8, [X8+128]
	029 Compare X8, 0
	030 JumpIfEqual {72}
	031 Move W8, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8+128]
	040 Compare X8, 0
	041 JumpIfEqual {72}
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, W21
	045 Add X9, X8, X22
	046 Move X9, [X9+32]
	047 Compare X9, 0
	048 JumpIfEqual {72}
	049 Move W9, [X9+16]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W21, W21, 1
	052 Move X0, X31
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Call 0x1C17DFC
	057 Move X8, [X20]
	058 Move X8, [X8+184]
	059 Move X8, [X8+128]
	060 Compare X8, 0
	061 JumpIfEqual {72}
	062 Move W9, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X8, X22
	065 Move X0, [X8+32]
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return X0
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Void BuildTailoringTables(System.Globalization.CultureInfo culture, Mono.Globalization.Unicode.TailoringInfo t, ref Mono.Globalization.Unicode.Contraction[] contractions, ref Mono.Globalization.Unicode.Level2Map[] diacriticals)

Disassembly:
	0x0320EA28 ADD W8, W0, 0x99
	0x0320EA2C AND W8, W8, 0xFFFF
	0x0320EA30 CMP W8, 0x9
	0x0320EA34 B.CC 0x320EA54
	0x0320EA38 MOVN W8, 0x3040
	0x0320EA3C ADD W8, W0, W8
	0x0320EA40 AND W8, W8, 0xFFFF
	0x0320EA44 CMP W8, 0xB8
	0x0320EA48 B.LS 0x320EA5C
	0x0320EA4C MOV W0, W31
	0x0320EA50 RET
	0x0320EA54 MOVZ W0, 0x1
	0x0320EA58 RET
	0x0320EA5C MOVZ W8, 0x30A9
	0x0320EA60 CMP W8, W0, UXTH
	0x0320EA64 B.CC 0x320EA94
	0x0320EA68 UBFM W8, W0, 0x2, 0xF
	0x0320EA6C CMP W8, 0xC18
	0x0320EA70 B.HI 0x320EAC0
	0x0320EA74 MOVN W8, 0x3040
	0x0320EA78 ADD W8, W0, W8
	0x0320EA7C AND W9, W8, 0xFFFF
	0x0320EA80 CMP W9, 0x23
	0x0320EA84 B.CS 0x320EA4C
	0x0320EA88 MOVZ X9, 0x155
	0x0320EA8C MOVK X9, 0x4
	0x0320EA90 B 0x320EAE0
	0x0320EA94 UBFM W8, W0, 0x3, 0xF
	0x0320EA98 CMP W8, 0x61C
	0x0320EA9C B.HI 0x320EAEC
	0x0320EAA0 MOVN W8, 0x30C2
	0x0320EAA4 ADD W8, W0, W8
	0x0320EAA8 AND W9, W8, 0xFFFF
	0x0320EAAC CMP W9, 0x25
	0x0320EAB0 B.CS 0x320EA4C
	0x0320EAB4 MOVZ X9, 0x1
	0x0320EAB8 MOVK X9, 0x15
	0x0320EABC B 0x320EAE0
	0x0320EAC0 MOVN W8, 0x3082
	0x0320EAC4 ADD W8, W0, W8
	0x0320EAC8 AND W9, W8, 0xFFFF
	0x0320EACC CMP W9, 0x27
	0x0320EAD0 B.CS 0x320EA4C
	0x0320EAD4 MOVZ X9, 0x815
	0x0320EAD8 MOVK X9, 0x40000000
	0x0320EADC MOVK X9, 0x55
	0x0320EAE0 LSRV X8, X9, X8
	0x0320EAE4 AND W0, W8, 0x1
	0x0320EAE8 RET
	0x0320EAEC MOVN W8, 0x30ED
	0x0320EAF0 ADD W8, W0, W8
	0x0320EAF4 AND W9, W8, 0xFFFF
	0x0320EAF8 CMP W9, 0x9
	0x0320EAFC B.CS 0x320EA4C
	0x0320EB00 MOVZ W9, 0x181
	0x0320EB04 LSRV W8, W9, W8
	0x0320EB08 AND W0, W8, 0x1
	0x0320EB0C RET
	0x0320EB10 STR X30, [X31 - 0x20]!
	0x0320EB14 STP X20, X19, [X31 + 0x10]
	0x0320EB18 ADRP X20, 0x11CE000
	0x0320EB1C ADRP X19, 0xF13000
	0x0320EB20 LDRB W8, [X20 + 0x2AA]
	0x0320EB24 LDR X19, [X19 + 0xA10]
	0x0320EB28 TBNZ X8, 0x0, 0x320EB40
	0x0320EB2C ADRP X0, 0xF13000
	0x0320EB30 LDR X0, [X0 + 0xA10]
	0x0320EB34 BL 0x1C16CF4
	0x0320EB38 MOVZ W8, 0x1
	0x0320EB3C STRB W8, [X20 + 0x2AA]
	0x0320EB40 LDR X0, [X19]
	0x0320EB44 LDR W8, [X0 + 0xE0]
	0x0320EB48 CBNZ W8, 0x320EB54
	0x0320EB4C BL 0x1C16DFC
	0x0320EB50 LDR X0, [X19]
	0x0320EB54 LDR X8, [X0 + 0xB8]
	0x0320EB58 LDP X20, X19, [X31 + 0x10]
	0x0320EB5C LDRB W0, [X8 + 0x90]
	0x0320EB60 LDR X30, [X31], #0x20
	0x0320EB64 RET
	0x0320EB68 SUB X31, X31, 0x30
	0x0320EB6C STP X30, X21, [X31 + 0x10]
	0x0320EB70 STP X20, X19, [X31 + 0x20]
	0x0320EB74 ADRP X21, 0x11CE000
	0x0320EB78 ADRP X20, 0xF13000
	0x0320EB7C LDRB W8, [X21 + 0x2AB]
	0x0320EB80 LDR X20, [X20 + 0xAC8]
	0x0320EB84 MOV X19, X0
	0x0320EB88 TBNZ X8, 0x0, 0x320EBAC
	0x0320EB8C ADRP X0, 0xF13000
	0x0320EB90 LDR X0, [X0 + 0xAC8]
	0x0320EB94 BL 0x1C16CF4
	0x0320EB98 ADRP X0, 0xF13000
	0x0320EB9C LDR X0, [X0 + 0xAD0]
	0x0320EBA0 BL 0x1C16CF4
	0x0320EBA4 MOVZ W8, 0x1
	0x0320EBA8 STRB W8, [X21 + 0x2AB]
	0x0320EBAC LDR X0, [X20]
	0x0320EBB0 STR W31, [X31 + 0xC]
	0x0320EBB4 STR X31, [X31]
	0x0320EBB8 BL 0x1C16CE0
	0x0320EBBC CBZ X0, 0x320EC1C
	0x0320EBC0 ADRP X9, 0xF13000
	0x0320EBC4 LDR X9, [X9 + 0xAD0]
	0x0320EBC8 LDR X8, [X0]
	0x0320EBCC LDR X1, [X9]
	0x0320EBD0 LDRB W10, [X8 + 0x130]
	0x0320EBD4 LDRB W9, [X1 + 0x130]
	0x0320EBD8 CMP W10, W9
	0x0320EBDC B.CC 0x320EC18
	0x0320EBE0 LDR X8, [X8 + 0xC8]
	0x0320EBE4 ADD X8, X8, X9, 0x3, LSL
	0x0320EBE8 LDUR X8, [X8 - 0x8]
	0x0320EBEC CMP X8, X1
	0x0320EBF0 B.NE 0x320EC18
	0x0320EBF4 ADD X2, X31, 0xC
	0x0320EBF8 ADD X3, X31, 0x0
	0x0320EBFC MOV X1, X19
	0x0320EC00 MOV X4, X31
	0x0320EC04 BL 0x32D9104
	0x0320EC08 LDP X20, X19, [X31 + 0x20]
	0x0320EC0C LDP X30, X21, [X31 + 0x10]
	0x0320EC10 ADD X31, X31, 0x30
	0x0320EC14 RET
	0x0320EC18 BL 0x1C171E0
	0x0320EC1C BL 0x1C16F20
	0x0320EC20 ADD W9, W1, 0x1
	0x0320EC24 LDRB W8, [X0, W1, UXTW]
	0x0320EC28 ADD W10, W1, 0x2
	0x0320EC2C LDRB W9, [X0, W9, SXTW]
	0x0320EC30 LDRB W10, [X0, W10, SXTW]
	0x0320EC34 ADD W11, W1, 0x3
	0x0320EC38 LDRB W11, [X0, W11, SXTW]
	0x0320EC3C BFM W8, W9, 0x18, 0x7
	0x0320EC40 BFM W8, W10, 0x10, 0x7
	0x0320EC44 BFM W8, W11, 0x8, 0x7
	0x0320EC48 MOV W0, W8
	0x0320EC4C RET
	0x0320EC50 STP X29, X30, [X31 - 0x60]!
	0x0320EC54 STP X28, X27, [X31 + 0x10]
	0x0320EC58 STP X26, X25, [X31 + 0x20]
	0x0320EC5C STP X24, X23, [X31 + 0x30]
	0x0320EC60 STP X22, X21, [X31 + 0x40]
	0x0320EC64 STP X20, X19, [X31 + 0x50]
	0x0320EC68 ADRP X21, 0x11CE000
	0x0320EC6C ADRP X22, 0xF13000
	0x0320EC70 ADRP X19, 0xEEB000
	0x0320EC74 ADRP X20, 0xF13000
	0x0320EC78 LDRB W8, [X21 + 0x2AC]
	0x0320EC7C LDR X22, [X22 + 0xA10]
	0x0320EC80 LDR X19, [X19 + 0xCC0]
	0x0320EC84 LDR X20, [X20 + 0xAD8]
	0x0320EC88 TBNZ X8, 0x0, 0x320ECE8
	0x0320EC8C ADRP X0, 0xEEE000
	0x0320EC90 LDR X0, [X0 + 0x8D8]
	0x0320EC94 BL 0x1C16CF4
	0x0320EC98 ADRP X0, 0xF13000
	0x0320EC9C LDR X0, [X0 + 0xA10]
	0x0320ECA0 BL 0x1C16CF4
	0x0320ECA4 ADRP X0, 0xEEB000
	0x0320ECA8 LDR X0, [X0 + 0xCC0]
	0x0320ECAC BL 0x1C16CF4
	0x0320ECB0 ADRP X0, 0xF13000
	0x0320ECB4 LDR X0, [X0 + 0xAE0]
	0x0320ECB8 BL 0x1C16CF4
	0x0320ECBC ADRP X0, 0xF13000
	0x0320ECC0 LDR X0, [X0 + 0xAE8]
	0x0320ECC4 BL 0x1C16CF4
	0x0320ECC8 ADRP X0, 0xF13000
	0x0320ECCC LDR X0, [X0 + 0xAD8]
	0x0320ECD0 BL 0x1C16CF4
	0x0320ECD4 ADRP X0, 0xF13000
	0x0320ECD8 LDR X0, [X0 + 0xAF0]
	0x0320ECDC BL 0x1C16CF4
	0x0320ECE0 MOVZ W8, 0x1
	0x0320ECE4 STRB W8, [X21 + 0x2AC]
	0x0320ECE8 LDR X8, [X22]
	0x0320ECEC MOVZ W9, 0x3
	0x0320ECF0 LDR X8, [X8 + 0xB8]
	0x0320ECF4 STR W9, [X8]
	0x0320ECF8 LDR X0, [X19]
	0x0320ECFC BL 0x1C16F10
	0x0320ED00 MOV X1, X31
	0x0320ED04 MOV X19, X0
	0x0320ED08 BL 0x33BDD8C
	0x0320ED0C LDR X8, [X22]
	0x0320ED10 LDR X8, [X8 + 0xB8]
	0x0320ED14 STR X19, [X8 + 0x88]
	0x0320ED18 LDR X0, [X20]
	0x0320ED1C BL 0x320EB68
	0x0320ED20 MOV X1, X31
	0x0320ED24 MOV X2, X31
	0x0320ED28 MOV X19, X0
	0x0320ED2C BL 0x33BE5B0
	0x0320ED30 TBNZ X0, 0x0, 0x320F050
	0x0320ED34 ADRP X20, 0xF13000
	0x0320ED38 LDR X20, [X20 + 0xAF0]
	0x0320ED3C MOV X0, X19
	0x0320ED40 MOV X1, X31
	0x0320ED44 BL 0x33C6948
	0x0320ED48 LDR X8, [X20]
	0x0320ED4C MOV X20, X0
	0x0320ED50 MOV X0, X8
	0x0320ED54 BL 0x320EB68
	0x0320ED58 MOV X1, X31
	0x0320ED5C MOV X2, X31
	0x0320ED60 MOV X19, X0
	0x0320ED64 BL 0x33BE5B0
	0x0320ED68 TBNZ X0, 0x0, 0x320F050
	0x0320ED6C MOV X0, X19
	0x0320ED70 MOV X1, X31
	0x0320ED74 BL 0x33C6948
	0x0320ED78 CBZ X20, 0x320F050
	0x0320ED7C MOV X19, X0
	0x0320ED80 CBZ X0, 0x320F050
	0x0320ED84 LDRB W8, [X20]
	0x0320ED88 CMP W8, 0x3
	0x0320ED8C B.NE 0x320F050
	0x0320ED90 LDRB W8, [X19]
	0x0320ED94 CMP W8, 0x3
	0x0320ED98 B.NE 0x320F050
	0x0320ED9C LDR X8, [X22]
	0x0320EDA0 LDUR W9, [X20 + 0x1]
	0x0320EDA4 ADD X10, X20, 0x5
	0x0320EDA8 LDR X8, [X8 + 0xB8]
	0x0320EDAC ADD W11, W9, 0x5
	0x0320EDB0 ADD W12, W9, 0x6
	0x0320EDB4 ADD W13, W9, 0x7
	0x0320EDB8 STR X10, [X8 + 0x8]
	0x0320EDBC LDRB W11, [X20, W11, UXTW]
	0x0320EDC0 LDRB W12, [X20, W12, SXTW]
	0x0320EDC4 ADD W14, W9, 0x8
	0x0320EDC8 LDRB W13, [X20, W13, SXTW]
	0x0320EDCC LDRB W14, [X20, W14, SXTW]
	0x0320EDD0 BFM W11, W12, 0x18, 0x7
	0x0320EDD4 ADD W9, W9, 0x9
	0x0320EDD8 BFM W11, W13, 0x10, 0x7
	0x0320EDDC BFM W11, W14, 0x8, 0x7
	0x0320EDE0 ADD X10, X9, X20
	0x0320EDE4 ADD W9, W11, W9
	0x0320EDE8 STR X10, [X8 + 0x10]
	0x0320EDEC ADD W11, W9, 0x1
	0x0320EDF0 LDRB W10, [X20, W9, UXTW]
	0x0320EDF4 ADD W12, W9, 0x2
	0x0320EDF8 LDRB W11, [X20, W11, SXTW]
	0x0320EDFC ADD W13, W9, 0x3
	0x0320EE00 LDRB W12, [X20, W12, SXTW]
	0x0320EE04 LDRB W13, [X20, W13, SXTW]
	0x0320EE08 BFM W10, W11, 0x18, 0x7
	0x0320EE0C ADD W9, W9, 0x4
	0x0320EE10 BFM W10, W12, 0x10, 0x7
	0x0320EE14 BFM W10, W13, 0x8, 0x7
	0x0320EE18 ADD X14, X9, X20
	0x0320EE1C ADD W9, W10, W9
	0x0320EE20 STR X14, [X8 + 0x18]
	0x0320EE24 ADD W11, W9, 0x1
	0x0320EE28 LDRB W10, [X20, W9, UXTW]
	0x0320EE2C LDRB W11, [X20, W11, SXTW]
	0x0320EE30 ADRP X12, 0xF13000
	0x0320EE34 ADD W13, W9, 0x2
	0x0320EE38 LDR X12, [X12 + 0xAE0]
	0x0320EE3C LDRB W13, [X20, W13, SXTW]
	0x0320EE40 BFM W10, W11, 0x18, 0x7
	0x0320EE44 ADD W11, W9, 0x3
	0x0320EE48 LDRB W11, [X20, W11, SXTW]
	0x0320EE4C BFM W10, W13, 0x10, 0x7
	0x0320EE50 ADD W13, W9, 0x4
	0x0320EE54 ADD X13, X13, X20
	0x0320EE58 BFM W10, W11, 0x8, 0x7
	0x0320EE5C ADD W9, W9, W10
	0x0320EE60 ADD W9, W9, 0x8
	0x0320EE64 ADD X9, X9, X20
	0x0320EE68 STP X13, X9, [X8 + 0x20]
	0x0320EE6C LDUR W20, [X19 + 0x1]
	0x0320EE70 LDR X0, [X12]
	0x0320EE74 MOV W1, W20
	0x0320EE78 BL 0x1C16D6C
	0x0320EE7C LDR X8, [X22]
	0x0320EE80 LDR X8, [X8 + 0xB8]
	0x0320EE84 STR X0, [X8 + 0x80]
	0x0320EE88 CBZ W20, 0x320EFA8
	0x0320EE8C MOV X24, X31
	0x0320EE90 MOVZ W23, 0x8
	0x0320EE94 MOVZ W25, 0x1
	0x0320EE98 SUB W8, W23, 0x3
	0x0320EE9C SUB W9, W23, 0x2
	0x0320EEA0 LDRB W27, [X19, W8, UXTW]
	0x0320EEA4 LDRB W8, [X19, W9, SXTW]
	0x0320EEA8 ADD W9, W23, 0x5
	0x0320EEAC LDRB W29, [X19, W9, UXTW]
	0x0320EEB0 ADD W12, W23, 0x1
	0x0320EEB4 BFM W27, W8, 0x18, 0x7
	0x0320EEB8 ADD W8, W23, 0x6
	0x0320EEBC LDRB W8, [X19, W8, SXTW]
	0x0320EEC0 ADD W13, W23, 0x2
	0x0320EEC4 LDRB W28, [X19, W12, UXTW]
	0x0320EEC8 LDRB W12, [X19, W13, SXTW]
	0x0320EECC BFM W29, W8, 0x18, 0x7
	0x0320EED0 ADD W8, W23, 0x7
	0x0320EED4 LDRB W8, [X19, W8, SXTW]
	0x0320EED8 SUB W10, W23, 0x1
	0x0320EEDC ADD W14, W23, 0x3
	0x0320EEE0 LDRB W10, [X19, W10, SXTW]
	0x0320EEE4 BFM W29, W8, 0x10, 0x7
	0x0320EEE8 ADRP X8, 0xF13000
	0x0320EEEC LDRB W11, [X19, W23, SXTW]
	0x0320EEF0 BFM W28, W12, 0x18, 0x7
	0x0320EEF4 LDRB W12, [X19, W14, SXTW]
	0x0320EEF8 LDR X8, [X8 + 0xAE8]
	0x0320EEFC ADD W9, W23, 0x4
	0x0320EF00 BFM W27, W10, 0x10, 0x7
	0x0320EF04 ADD W10, W23, 0x8
	0x0320EF08 BFM W28, W12, 0x10, 0x7
	0x0320EF0C ADD W12, W23, 0x9
	0x0320EF10 LDR X0, [X8]
	0x0320EF14 LDRB W8, [X19, W9, SXTW]
	0x0320EF18 LDRB W9, [X19, W10, SXTW]
	0x0320EF1C LDRB W26, [X19, W12, UXTW]
	0x0320EF20 BFM W27, W11, 0x8, 0x7
	0x0320EF24 BFM W28, W8, 0x8, 0x7
	0x0320EF28 BFM W29, W9, 0x8, 0x7
	0x0320EF2C BL 0x1C16F10
	0x0320EF30 CMP W26, 0x0
	0x0320EF34 MOV X1, X31
	0x0320EF38 MOV X21, X0
	0x0320EF3C CSET W26, NE
	0x0320EF40 BL 0x33BDD8C
	0x0320EF44 STP W27, W28, [X21 + 0x10]
	0x0320EF48 STR W29, [X21 + 0x18]
	0x0320EF4C STRB W26, [X21 + 0x1C]
	0x0320EF50 LDR X8, [X22]
	0x0320EF54 LDR X8, [X8 + 0xB8]
	0x0320EF58 LDR X27, [X8 + 0x80]
	0x0320EF5C CBZ X27, 0x320F07C
	0x0320EF60 LDR X8, [X27]
	0x0320EF64 MOV X0, X21
	0x0320EF68 LDR X1, [X8 + 0x40]
	0x0320EF6C BL 0x1C16E00
	0x0320EF70 CBZ X0, 0x320F070
	0x0320EF74 LDR W8, [X27 + 0x18]
	0x0320EF78 SUB W9, W25, 0x1
	0x0320EF7C CMP W9, W8
	0x0320EF80 B.CS 0x320F06C
	0x0320EF84 ADD X8, X27, X24, 0x3, LSL
	0x0320EF88 SXTW X24, W25
	0x0320EF8C ADD W23, W23, 0xD
	0x0320EF90 CMP X24, X20
	0x0320EF94 ADD W25, W25, 0x1
	0x0320EF98 STR X21, [X8 + 0x20]
	0x0320EF9C B.LT 0x320EE98
	0x0320EFA0 SUB W21, W23, 0x3
	0x0320EFA4 B 0x320EFAC
	0x0320EFA8 MOVZ W21, 0x5
	0x0320EFAC ADD W8, W21, 0x2
	0x0320EFB0 ADD W9, W21, 0x3
	0x0320EFB4 ADD W10, W21, 0x4
	0x0320EFB8 LDRB W20, [X19, W8, UXTW]
	0x0320EFBC LDRB W8, [X19, W9, SXTW]
	0x0320EFC0 LDRB W9, [X19, W10, SXTW]
	0x0320EFC4 ADD W10, W21, 0x5
	0x0320EFC8 ADRP X11, 0xEEE000
	0x0320EFCC LDRB W10, [X19, W10, SXTW]
	0x0320EFD0 LDR X11, [X11 + 0x8D8]
	0x0320EFD4 BFM X20, X8, 0x38, 0x7
	0x0320EFD8 BFM X20, X9, 0x30, 0x7
	0x0320EFDC BFM X20, X10, 0x28, 0x7
	0x0320EFE0 LDR X0, [X11]
	0x0320EFE4 MOV W1, W20
	0x0320EFE8 BL 0x1C16D6C
	0x0320EFEC LDR X8, [X22]
	0x0320EFF0 LDR X8, [X8 + 0xB8]
	0x0320EFF4 STR X0, [X8 + 0x78]
	0x0320EFF8 CBZ W20, 0x320F048
	0x0320EFFC CBZ X0, 0x320F07C
	0x0320F000 LDR W9, [X0 + 0x18]
	0x0320F004 MOV X11, X31
	0x0320F008 ADD W10, W21, 0x6
	0x0320F00C MOVZ W12, 0x1
	0x0320F010 SUB W13, W12, 0x1
	0x0320F014 CMP W13, W9
	0x0320F018 B.CS 0x320F06C
	0x0320F01C ADD W14, W10, 0x1
	0x0320F020 LDRB W13, [X19, W10, UXTW]
	0x0320F024 LDRB W14, [X19, W14, SXTW]
	0x0320F028 ADD X15, X0, X11, 0x1, LSL
	0x0320F02C SXTW X11, W12
	0x0320F030 ADD W10, W10, 0x2
	0x0320F034 CMP X11, X20
	0x0320F038 BFM W13, W14, 0x18, 0x17
	0x0320F03C ADD W12, W12, 0x1
	0x0320F040 STRH W13, [X15 + 0x20]
	0x0320F044 B.LT 0x320F010
	0x0320F048 MOVZ W9, 0x1
	0x0320F04C STRB W9, [X8 + 0x90]
	0x0320F050 LDP X20, X19, [X31 + 0x50]
	0x0320F054 LDP X22, X21, [X31 + 0x40]
	0x0320F058 LDP X24, X23, [X31 + 0x30]
	0x0320F05C LDP X26, X25, [X31 + 0x20]
	0x0320F060 LDP X28, X27, [X31 + 0x10]
	0x0320F064 LDP X29, X30, [X31], #0x60
	0x0320F068 RET
	0x0320F06C BL 0x1C16F28
	0x0320F070 BL 0x1C16F44
	0x0320F074 MOV X1, X31
	0x0320F078 BL 0x1C16DEC
	0x0320F07C BL 0x1C16F20
	0x0320F080 STR X30, [X31 - 0x50]!
	0x0320F084 STP X26, X25, [X31 + 0x10]
	0x0320F088 STP X24, X23, [X31 + 0x20]
	0x0320F08C STP X22, X21, [X31 + 0x30]
	0x0320F090 STP X20, X19, [X31 + 0x40]
	0x0320F094 ADRP X19, 0x11CD000
	0x0320F098 ADRP X26, 0xF12000
	0x0320F09C LDRB W8, [X19 + 0x2AD]
	0x0320F0A0 LDR X26, [X26 + 0xA10]
	0x0320F0A4 MOV X20, X5
	0x0320F0A8 MOV X21, X4
	0x0320F0AC MOV X22, X3
	0x0320F0B0 MOV X23, X2
	0x0320F0B4 MOV X24, X1
	0x0320F0B8 MOV X25, X0
	0x0320F0BC TBNZ X8, 0x0, 0x320F0D4
	0x0320F0C0 ADRP X0, 0xF12000
	0x0320F0C4 LDR X0, [X0 + 0xA10]
	0x0320F0C8 BL 0x1C16CF4
	0x0320F0CC MOVZ W8, 0x1
	0x0320F0D0 STRB W8, [X19 + 0x2AD]
	0x0320F0D4 LDR X0, [X26]
	0x0320F0D8 LDR W8, [X0 + 0xE0]
	0x0320F0DC CBNZ W8, 0x320F0E8
	0x0320F0E0 BL 0x1C16DFC
	0x0320F0E4 LDR X0, [X26]
	0x0320F0E8 LDR X8, [X0 + 0xB8]
	0x0320F0EC LDR X19, [X8 + 0x88]
	0x0320F0F0 STRB W31, [X31 + 0xC]
	0x0320F0F4 ADD X1, X31, 0xC
	0x0320F0F8 MOV X0, X19
	0x0320F0FC MOV X2, X31
	0x0320F100 BL 0x33DE64C
	0x0320F104 LDR X0, [X26]
	0x0320F108 LDR W8, [X0 + 0xE0]
	0x0320F10C CBNZ W8, 0x320F114
	0x0320F110 BL 0x1C16DFC
	0x0320F114 MOV X0, X25
	0x0320F118 MOV X2, X23
	0x0320F11C MOV X3, X22
	0x0320F120 MOV X5, X20
	0x0320F124 BL 0x320F1E0
	0x0320F128 MOV X0, X25
	0x0320F12C MOV X1, X24
	0x0320F130 MOV X2, X23
	0x0320F134 MOV X3, X22
	0x0320F138 MOV X4, X21
	0x0320F13C MOV X5, X20
	0x0320F140 BL 0x320E178
	0x0320F144 MOV X20, X31
	0x0320F148 LDRB W8, [X31 + 0xC]
	0x0320F14C CBZ W8, 0x320F15C
	0x0320F150 MOV X0, X19
	0x0320F154 MOV X1, X31
	0x0320F158 BL 0x33E14E4
	0x0320F15C CBNZ X20, 0x320F178
	0x0320F160 LDP X20, X19, [X31 + 0x40]
	0x0320F164 LDP X22, X21, [X31 + 0x30]
	0x0320F168 LDP X24, X23, [X31 + 0x20]
	0x0320F16C LDP X26, X25, [X31 + 0x10]
	0x0320F170 LDR X30, [X31], #0x50
	0x0320F174 RET

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+16], X2
	015 Move [X31+24], X3
	016 Move [X31+8], X0
	017 Move X23, 0x11CF000
	018 Move X24, 0xF14000
	019 Move X22, 0xF14000
	020 Move X21, 0xF14000
	021 Move X20, 0xF14000
	022 Move X19, 0xF14000
	023 Move W8, [X23+674]
	024 Move X24, [X24+2584]
	025 Move X22, [X22+2592]
	026 Move X21, [X21+2600]
	027 Move X20, [X20+2608]
	028 Move X19, [X19+2576]
	029 Move X25, X1
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {96}
	034 Move X0, 0xEE6000
	035 Move X0, [X0+1560]
	036 Call 0x1C17CF4
	037 Move X0, 0xEEF000
	038 Move X0, [X0+2264]
	039 Call 0x1C17CF4
	040 Move X0, 0xF14000
	041 Move X0, [X0+2616]
	042 Call 0x1C17CF4
	043 Move X0, 0xF14000
	044 Move X0, [X0+2568]
	045 Call 0x1C17CF4
	046 Move X0, 0xF14000
	047 Move X0, [X0+2624]
	048 Call 0x1C17CF4
	049 Move X0, 0xF14000
	050 Move X0, [X0+2632]
	051 Call 0x1C17CF4
	052 Move X0, 0xF14000
	053 Move X0, [X0+2640]
	054 Call 0x1C17CF4
	055 Move X0, 0xF14000
	056 Move X0, [X0+2648]
	057 Call 0x1C17CF4
	058 Move X0, 0xF14000
	059 Move X0, [X0+2656]
	060 Call 0x1C17CF4
	061 Move X0, 0xF14000
	062 Move X0, [X0+2664]
	063 Call 0x1C17CF4
	064 Move X0, 0xF14000
	065 Move X0, [X0+2672]
	066 Call 0x1C17CF4
	067 Move X0, 0xF14000
	068 Move X0, [X0+2680]
	069 Call 0x1C17CF4
	070 Move X0, 0xF14000
	071 Move X0, [X0+2592]
	072 Call 0x1C17CF4
	073 Move X0, 0xF14000
	074 Move X0, [X0+2608]
	075 Call 0x1C17CF4
	076 Move X0, 0xF14000
	077 Move X0, [X0+2584]
	078 Call 0x1C17CF4
	079 Move X0, 0xF14000
	080 Move X0, [X0+2600]
	081 Call 0x1C17CF4
	082 Move X0, 0xF14000
	083 Move X0, [X0+2576]
	084 Call 0x1C17CF4
	085 Move X0, 0xF0E000
	086 Move X0, [X0+2128]
	087 Call 0x1C17CF4
	088 Move X0, 0xF14000
	089 Move X0, [X0+2688]
	090 Call 0x1C17CF4
	091 Move X0, 0xF14000
	092 Move X0, [X0+2696]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X23+674], W8
	096 Move X0, [X24]
	097 Call 0x1C17F10
	098 Move X1, [X22]
	099 Move X22, X0
	100 Call List`1<Object>..ctor, X0
	101 Move X0, [X21]
	102 Call 0x1C17F10
	103 Move X1, [X20]
	104 Move X23, X0
	105 Call List`1<Object>..ctor, X0
	106 Move X0, [X19]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X19]
	112 Move X8, [X0+184]
	113 Move X8, [X8+120]
	114 Compare X8, 0
	115 JumpIfEqual {122}
	116 Move W9, [X8+24]
	117 Add X8, X8, 32
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Compare X25, 0
	121 JumpIfNotEqual {125}
	122 Move X24, X31
	123 Compare X25, 0
	124 JumpIfEqual {444}
	125 Move W27, [X25+20]
	126 Move W8, [X25+24]
	127 Add W29, W8, W27
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X31+36], W31
	130 Move X19, 0xF14000
	131 Move X20, 0xF14000
	132 Move X19, [X19+2632]
	133 Move X20, [X20+2648]
	134 Add W26, W27, 2
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W8, W27, 1
	138 Add W9, W27, 2
	139 NotImplemented "Instruction SBFM not yet implemented."
	140 NotImplemented "Instruction SBFM not yet implemented."
	141 Move X0, [X19]
	142 Move W28, [X8]
	143 Move W21, [X9]
	144 Call 0x1C17F10
	145 Move X1, X31
	146 Move X25, X0
	147 Call Object..ctor, X0
	148 Move [X25+16], W28
	149 Move [X25+17], W21
	150 Compare X23, 0
	151 JumpIfEqual {444}
	152 Move W10, [X23+28]
	153 Move X8, [X23+16]
	154 Move X9, [X20]
	155 Add W10, W10, 1
	156 Move [X23+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {444}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X23+24], W9
	165 Move [X8+32], X25
	166 Move X8, [X9+32]
	167 Move X0, X23
	168 Move X1, X25
	169 Move X8, [X8+192]
	170 Move X2, [X8+112]
	171 Call List`1<Object>.AddWithResize, X0, X1
	172 Add W27, W27, 3
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W26, W26, 3
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add W25, W27, 1
	178 Move TEMP, 0
	179 Not TEMP
	180 Move W26, TEMP
	181 Add W8, W27, W26
	182 Add W8, W8, 2
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Add W26, W26, 1
	185 Compare W8, 0
	186 JumpIfNotEqual {181}
	187 Move X8, 0xEEF000
	188 Move X8, [X8+2264]
	189 Move W1, W26
	190 Move X0, [X8]
	191 Call 0x1C17D6C
	192 Move X21, X0
	193 Add X0, X24, W25
	194 Move X1, X31
	195 Call IntPtr.op_Explicit, X0
	196 Move X8, 0xF0E000
	197 Move X8, [X8+2128]
	198 Move X28, X0
	199 Move X8, [X8]
	200 Move W9, [X8+224]
	201 Compare W9, 0
	202 JumpIfNotEqual {205}
	203 Move X0, X8
	204 Call 0x1C17DFC
	205 Add W8, W27, W26
	206 Move X0, X28
	207 Move X1, X21
	208 Move W2, W31
	209 Move W3, W26
	210 Move X4, X31
	211 Add W25, W8, 2
	212 Call Marshal.Copy, X0, X1, X2, X3
	213 Move TEMP, 0
	214 Not TEMP
	215 Move W3, TEMP
	216 Move W27, W25
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Add W27, W27, 1
	219 Add W3, W3, 1
	220 Compare W8, 0
	221 JumpIfNotEqual {217}
	222 Move X0, X31
	223 Move X1, X24
	224 Move W2, W25
	225 Move X4, X31
	226 Call String.CreateString, X0, X1, X2, X3
	227 Move X8, 0xF14000
	228 Move X8, [X8+2624]
	229 Move X25, X0
	230 Move X8, [X8]
	231 Move X0, X8
	232 Call 0x1C17F10
	233 Move X1, X31
	234 Move X26, X0
	235 Call Object..ctor, X0
	236 Move W8, [X31+36]
	237 Move [X26+24], X21
	238 Move [X26+32], X25
	239 Move [X26+40], X31
	240 Move [X26+16], W8
	241 Compare X22, 0
	242 JumpIfEqual {444}
	243 Move X9, 0xF14000
	244 Move W10, [X22+28]
	245 Move X8, [X22+16]
	246 Move X9, [X9+2640]
	247 Add W10, W10, 1
	248 Move X9, [X9]
	249 Move [X22+28], W10
	250 Compare X8, 0
	251 JumpIfEqual {444}
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Move W11, [X8+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add W9, W10, 1
	256 Add X8, X8, X10
	257 Move [X22+24], W9
	258 Move [X8+32], X26
	259 Add W27, W27, 1
	260 Move W8, W27
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Move W28, W8
	263 Move W25, W26
	264 Add W8, W8, 1
	265 Add W26, W26, 1
	266 Compare W9, 0
	267 JumpIfNotEqual {261}
	268 Move X8, 0xEEF000
	269 Move X8, [X8+2264]
	270 Subtract W26, W28, W27
	271 Move W1, W26
	272 Move X0, [X8]
	273 Call 0x1C17D6C
	274 Move X21, X0
	275 Add X0, X24, W27
	276 Move X1, X31
	277 Call IntPtr.op_Explicit, X0
	278 Move X8, 0xF0E000
	279 Move X8, [X8+2128]
	280 Move X27, X0
	281 Move X8, [X8]
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move X0, X27
	288 Move X1, X21
	289 Move W2, W31
	290 Move W3, W26
	291 Move X4, X31
	292 Call Marshal.Copy, X0, X1, X2, X3
	293 Move X8, 0xEE6000
	294 Move X8, [X8+1560]
	295 Move W1, 4
	296 Move X0, [X8]
	297 Call 0x1C17D6C
	298 Compare X0, 0
	299 JumpIfEqual {444}
	300 Move W8, [X0+24]
	301 Move X26, X0
	302 Move X9, X31
	303 NotImplemented "Instruction CMP not yet implemented."
	304 NotImplemented "Instruction SBFM not yet implemented."
	305 Move W10, [X10]
	306 Add X11, X26, X9
	307 Add X9, X9, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add W25, W25, 1
	310 Move [X11+32], W10
	311 Move X8, 0xF14000
	312 Move X8, [X8+2624]
	313 Move X0, [X8]
	314 Call 0x1C17F10
	315 Move X1, X31
	316 Move X27, X0
	317 Call Object..ctor, X0
	318 Move W8, [X31+36]
	319 Move [X27+24], X21
	320 Move [X27+32], X31
	321 Move [X27+40], X26
	322 Move [X27+16], W8
	323 Compare X22, 0
	324 JumpIfEqual {444}
	325 Move X9, 0xF14000
	326 Move W10, [X22+28]
	327 Move X8, [X22+16]
	328 Move X9, [X9+2640]
	329 Add W10, W10, 1
	330 Move X9, [X9]
	331 Move [X22+28], W10
	332 Compare X8, 0
	333 JumpIfEqual {444}
	334 NotImplemented "Instruction LDRSW not yet implemented."
	335 Move W11, [X8+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W9, W10, 1
	338 Add X8, X8, X10
	339 Move [X22+24], W9
	340 Move [X8+32], X27
	341 Move X8, [X9+32]
	342 Move X0, X22
	343 Move X1, X26
	344 Move X8, [X8+192]
	345 Move X2, [X8+112]
	346 Call List`1<Object>.AddWithResize, X0, X1
	347 Move X8, [X9+32]
	348 Move X0, X22
	349 Move X1, X27
	350 Move X8, [X8+192]
	351 Move X2, [X8+112]
	352 Call List`1<Object>.AddWithResize, X0, X1
	353 Add W27, W28, 6
	354 Move W8, [X31+36]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add W8, W8, 1
	357 Move [X31+36], W8
	358 Move X19, 0xF14000
	359 Move X19, [X19+2568]
	360 Move X0, [X19]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Compare X22, 0
	366 JumpIfEqual {444}
	367 Move X8, [X19]
	368 Move X9, 0xF14000
	369 Move X19, 0xF14000
	370 Move X0, X22
	371 Move X8, [X8+184]
	372 Move X9, [X9+2656]
	373 Move X1, [X8]
	374 Move X2, [X9]
	375 Move X19, [X19+2696]
	376 Call List`1<Object>.Sort, X0, X1
	377 Move X0, [X19]
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {383}
	381 Call 0x1C17DFC
	382 Move X0, [X19]
	383 Move X8, [X0+184]
	384 Move X21, [X8+8]
	385 Compare X21, 0
	386 JumpIfNotEqual {408}
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {392}
	390 Call 0x1C17DFC
	391 Move X0, [X19]
	392 Move X9, 0xF14000
	393 Move X8, [X0+184]
	394 Move X9, [X9+2616]
	395 Move X24, [X8]
	396 Move X0, [X9]
	397 Call 0x1C17F10
	398 Move X8, 0xF13000
	399 Move X8, [X8+2688]
	400 Move X1, X24
	401 Move X3, X31
	402 Move X21, X0
	403 Move X2, [X8]
	404 Call Comparison`1<Object>..ctor, X0, X1, X2
	405 Move X8, [X19]
	406 Move X8, [X8+184]
	407 Move [X8+8], X21
	408 Compare X23, 0
	409 JumpIfEqual {444}
	410 Move X8, 0xF13000
	411 Move X8, [X8+2664]
	412 Move X19, 0xF13000
	413 Move X20, 0xF13000
	414 Move X0, X23
	415 Move X2, [X8]
	416 Move X19, [X19+2680]
	417 Move X20, [X20+2672]
	418 Move X1, X21
	419 Call List`1<Object>.Sort, X0, X1
	420 Move X1, [X19]
	421 Move X0, X22
	422 Call List`1<Object>.ToArray, X0
	423 Move X8, [X31+16]
	424 Move [X8], X0
	425 Move X1, [X20]
	426 Move X0, X23
	427 Call List`1<Object>.ToArray, X0
	428 Move X8, [X31+24]
	429 Move X20, [X31+128]
	430 Move X19, [X31+136]
	431 Move X22, [X31+112]
	432 Move X21, [X31+120]
	433 Move X24, [X31+96]
	434 Move X23, [X31+104]
	435 Move X26, [X31+80]
	436 Move X25, [X31+88]
	437 Move X28, [X31+64]
	438 Move X27, [X31+72]
	439 Move X29, [X31+48]
	440 Move X30, [X31+56]
	441 Move [X8], X0
	442 Add X31, X31, 144
	443 Return 
	444 Call 0x1C17F20
	445 Move X21, [X31+8]
	446 Move X0, X21
	447 Call 0x19913C0
	448 Move X8, [X21]
	449 Move X0, X21
	450 Move X9, [X8+408]
	451 Move X1, [X8+416]
	452 NotImplemented "Instruction BLR not yet implemented."
	453 Move [X31+44], W0
	454 Move X19, 0xEE5000
	455 Move X19, [X19+1880]
	456 Move X0, X19
	457 Call 0x1C17D08
	458 Add X1, X31, 44
	459 Call 0x1C17E04
	460 Move X20, X0
	461 Move X0, X21
	462 Call 0x19913C0
	463 Move X8, [X21]
	464 Move X0, X21
	465 Move X9, [X8+424]
	466 Move X1, [X8+432]
	467 NotImplemented "Instruction BLR not yet implemented."
	468 Move X21, X0
	469 Move X0, X19
	470 Move [X31+40], W27
	471 Call 0x1C17D08
	472 Add X1, X31, 40
	473 Call 0x1C17E04
	474 Move X19, X0
	475 Move X0, 0xF13000
	476 Move X0, [X0+2704]
	477 Call 0x1C17D08
	478 Move X1, X20
	479 Move X2, X21
	480 Move X3, X19
	481 Move X4, X31
	482 Call String.Format, X0, X1, X2, X3
	483 Move X19, X0
	484 Move X0, 0xEEE000
	485 Move X0, [X0+1880]
	486 Call 0x1C17D08
	487 Call 0x1C17F10
	488 Move X1, X19
	489 Move X2, X31
	490 Move X20, X0
	491 Call NotImplementedException..ctor, X0, X1
	492 Move X0, 0xF13000
	493 Move X0, [X0+2712]
	494 Call 0x1C17D08
	495 Move X1, X0
	496 Move X0, X20
	497 Call 0x1C17DEC
	498 Call 0x1C17F28

Method: System.Void SetCJKReferences(System.String name, ref Mono.Globalization.Unicode.CodePointIndexer cjkIndexer, ref System.Byte* catTable, ref System.Byte* lv1Table, ref Mono.Globalization.Unicode.CodePointIndexer lv2Indexer, ref System.Byte* lv2Table)

Disassembly:
	0x0320F178 MOV X0, X20
	0x0320F17C BL 0x1C16F18
	0x0320F180 B 0x320F188
	0x0320F184 B 0x320F188
	0x0320F188 MOV X21, X0
	0x0320F18C CMP W1, 0x1
	0x0320F190 B.NE 0x320F1A8
	0x0320F194 MOV X0, X21
	0x0320F198 BL 0x3EB1AD0
	0x0320F19C LDR X20, [X0]
	0x0320F1A0 BL 0x3EB1AE0
	0x0320F1A4 B 0x320F148
	0x0320F1A8 MOV X20, X31
	0x0320F1AC B 0x320F1B4
	0x0320F1B0 MOV X21, X0
	0x0320F1B4 LDRB W8, [X31 + 0xC]
	0x0320F1B8 CBZ W8, 0x320F1C8
	0x0320F1BC MOV X0, X19
	0x0320F1C0 MOV X1, X31
	0x0320F1C4 BL 0x33E14E4
	0x0320F1C8 CBNZ X20, 0x320F1D4
	0x0320F1CC MOV X0, X21
	0x0320F1D0 BL 0x1D2C690
	0x0320F1D4 MOV X0, X20
	0x0320F1D8 BL 0x1C16F18
	0x0320F1DC BL 0x1990590
	0x0320F1E0 STR X30, [X31 - 0x50]!
	0x0320F1E4 STP X26, X25, [X31 + 0x10]
	0x0320F1E8 STP X24, X23, [X31 + 0x20]
	0x0320F1EC STP X22, X21, [X31 + 0x30]
	0x0320F1F0 STP X20, X19, [X31 + 0x40]
	0x0320F1F4 ADRP X23, 0x11CD000
	0x0320F1F8 ADRP X25, 0xF12000
	0x0320F1FC LDRB W8, [X23 + 0x2AE]
	0x0320F200 LDR X25, [X25 + 0xA10]
	0x0320F204 MOV X19, X5
	0x0320F208 MOV X20, X3
	0x0320F20C MOV X21, X2
	0x0320F210 MOV X22, X0
	0x0320F214 TBNZ X8, 0x0, 0x320F2A4
	0x0320F218 ADRP X0, 0xF12000
	0x0320F21C LDR X0, [X0 + 0xA10]
	0x0320F220 BL 0x1C16CF4
	0x0320F224 ADRP X0, 0xF12000
	0x0320F228 LDR X0, [X0 + 0xAB0]
	0x0320F22C BL 0x1C16CF4
	0x0320F230 ADRP X0, 0xF12000
	0x0320F234 LDR X0, [X0 + 0xAF8]
	0x0320F238 BL 0x1C16CF4
	0x0320F23C ADRP X0, 0xF12000
	0x0320F240 LDR X0, [X0 + 0xAB8]
	0x0320F244 BL 0x1C16CF4
	0x0320F248 ADRP X0, 0xF12000
	0x0320F24C LDR X0, [X0 + 0xB00]
	0x0320F250 BL 0x1C16CF4
	0x0320F254 ADRP X0, 0xF12000
	0x0320F258 LDR X0, [X0 + 0xAC0]
	0x0320F25C BL 0x1C16CF4
	0x0320F260 ADRP X0, 0xF12000
	0x0320F264 LDR X0, [X0 + 0xB08]
	0x0320F268 BL 0x1C16CF4
	0x0320F26C ADRP X0, 0xF12000
	0x0320F270 LDR X0, [X0 + 0xAA0]
	0x0320F274 BL 0x1C16CF4
	0x0320F278 ADRP X0, 0xF12000
	0x0320F27C LDR X0, [X0 + 0xB10]
	0x0320F280 BL 0x1C16CF4
	0x0320F284 ADRP X0, 0xF12000
	0x0320F288 LDR X0, [X0 + 0xB18]
	0x0320F28C BL 0x1C16CF4
	0x0320F290 ADRP X0, 0xF12000
	0x0320F294 LDR X0, [X0 + 0xB20]
	0x0320F298 BL 0x1C16CF4
	0x0320F29C MOVZ W8, 0x1
	0x0320F2A0 STRB W8, [X23 + 0x2AE]
	0x0320F2A4 LDR X0, [X25]
	0x0320F2A8 LDR W8, [X0 + 0xE0]
	0x0320F2AC CBNZ W8, 0x320F2B4
	0x0320F2B0 BL 0x1C16DFC
	0x0320F2B4 ADRP X23, 0x11CD000
	0x0320F2B8 LDRB W8, [X23 + 0x2F4]
	0x0320F2BC CBNZ W8, 0x320F2D4
	0x0320F2C0 ADRP X0, 0xF12000
	0x0320F2C4 LDR X0, [X0 + 0xA10]
	0x0320F2C8 BL 0x1C16CF4
	0x0320F2CC MOVZ W8, 0x1
	0x0320F2D0 STRB W8, [X23 + 0x2F4]
	0x0320F2D4 LDR X0, [X25]
	0x0320F2D8 LDR W8, [X0 + 0xE0]
	0x0320F2DC CBNZ W8, 0x320F2E8
	0x0320F2E0 BL 0x1C16DFC
	0x0320F2E4 LDR X0, [X25]
	0x0320F2E8 LDR X8, [X0 + 0xB8]
	0x0320F2EC LDRB W8, [X8 + 0x90]
	0x0320F2F0 CBZ W8, 0x320F64C
	0x0320F2F4 ADRP X26, 0xF12000
	0x0320F2F8 LDR X26, [X26 + 0xAA0]
	0x0320F2FC MOV X0, X22
	0x0320F300 MOV X2, X31
	0x0320F304 LDR X1, [X26]
	0x0320F308 BL 0x321BA08
	0x0320F30C TBZ X0, 0x0, 0x320F340
	0x0320F310 ADRP X8, 0xF12000
	0x0320F314 LDR X0, [X25]
	0x0320F318 LDR X8, [X8 + 0xB10]
	0x0320F31C LDR W9, [X0 + 0xE0]
	0x0320F320 LDR X23, [X8]
	0x0320F324 CBNZ W9, 0x320F330
	0x0320F328 BL 0x1C16DFC
	0x0320F32C LDR X0, [X25]
	0x0320F330 LDR X8, [X0 + 0xB8]
	0x0320F334 LDR X9, [X8 + 0x30]
	0x0320F338 ADD X8, X8, 0x50
	0x0320F33C B 0x320F420
	0x0320F340 ADRP X8, 0xF12000
	0x0320F344 LDR X8, [X8 + 0xAC0]
	0x0320F348 MOV X0, X22
	0x0320F34C MOV X2, X31
	0x0320F350 LDR X1, [X8]
	0x0320F354 BL 0x321BA08
	0x0320F358 TBZ X0, 0x0, 0x320F38C
	0x0320F35C ADRP X8, 0xF12000
	0x0320F360 LDR X0, [X25]
	0x0320F364 LDR X8, [X8 + 0xB08]
	0x0320F368 LDR W9, [X0 + 0xE0]
	0x0320F36C LDR X23, [X8]
	0x0320F370 CBNZ W9, 0x320F37C
	0x0320F374 BL 0x1C16DFC
	0x0320F378 LDR X0, [X25]
	0x0320F37C LDR X8, [X0 + 0xB8]
	0x0320F380 LDR X9, [X8 + 0x38]
	0x0320F384 ADD X8, X8, 0x58
	0x0320F388 B 0x320F420
	0x0320F38C ADRP X8, 0xF12000
	0x0320F390 LDR X8, [X8 + 0xAB0]
	0x0320F394 MOV X0, X22
	0x0320F398 MOV X2, X31
	0x0320F39C LDR X1, [X8]
	0x0320F3A0 BL 0x321BA08
	0x0320F3A4 TBZ X0, 0x0, 0x320F3D8
	0x0320F3A8 ADRP X8, 0xF12000
	0x0320F3AC LDR X0, [X25]
	0x0320F3B0 LDR X8, [X8 + 0xAF8]
	0x0320F3B4 LDR W9, [X0 + 0xE0]
	0x0320F3B8 LDR X23, [X8]
	0x0320F3BC CBNZ W9, 0x320F3C8
	0x0320F3C0 BL 0x1C16DFC
	0x0320F3C4 LDR X0, [X25]
	0x0320F3C8 LDR X8, [X0 + 0xB8]
	0x0320F3CC LDR X9, [X8 + 0x40]
	0x0320F3D0 ADD X8, X8, 0x60
	0x0320F3D4 B 0x320F420

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x11CE000
	011 Move X26, 0xF13000
	012 Move W8, [X25+675]
	013 Move X26, [X26+2720]
	014 Move X23, X5
	015 Move X22, X4
	016 Move X20, X3
	017 Move X21, X2
	018 Move X19, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0xF13000
	025 Move X0, [X0+2728]
	026 Call 0x1C17CF4
	027 Move X0, 0xF13000
	028 Move X0, [X0+2576]
	029 Call 0x1C17CF4
	030 Move X0, 0xF13000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move X0, 0xF13000
	034 Move X0, [X0+2744]
	035 Call 0x1C17CF4
	036 Move X0, 0xF13000
	037 Move X0, [X0+2752]
	038 Call 0x1C17CF4
	039 Move X0, 0xF13000
	040 Move X0, [X0+2720]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X25+675], W8
	044 Move X1, [X26]
	045 Move X0, X24
	046 Move X2, X31
	047 Call String.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {74}
	052 Move X22, 0xF13000
	053 Move X22, [X22+2576]
	054 Move X0, [X22]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Move X8, [X0+184]
	061 Move X9, [X8+48]
	062 Move [X21], X9
	063 Move X8, [X8+80]
	064 Move [X20], X8
	065 Move X20, 0xF13000
	066 Move X20, [X20+2728]
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Move W8, 40
	074 Move X8, 0xF13000
	075 Move X8, [X8+2752]
	076 Move X0, X24
	077 Move X2, X31
	078 Move X1, [X8]
	079 Call String.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {96}
	084 Move X22, 0xF13000
	085 Move X22, [X22+2576]
	086 Move X0, [X22]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X22]
	092 Move X8, [X0+184]
	093 Move X9, [X8+56]
	094 Move [X21], X9
	095 Move X8, [X8+88]
	096 Move X8, 0xF13000
	097 Move X8, [X8+2736]
	098 Move X0, X24
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call String.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {142}
	106 Move X22, 0xF13000
	107 Move X22, [X22+2576]
	108 Move X0, [X22]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X22]
	114 Move X8, [X0+184]
	115 Move X9, [X8+64]
	116 Move [X21], X9
	117 Move X8, [X8+96]
	118 Move [X20], X8
	119 Move X20, 0xF13000
	120 Move X20, [X20+2728]
	121 Move X0, [X20]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X20]
	127 Move W8, 48
	128 Move X22, X19
	129 Move X9, [X0+184]
	130 Move X8, [X9]
	131 Move [X22], X8
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X26, [X31+16]
	139 Move X25, [X31+24]
	140 Move X30, [X31+80]
	141 Return 
	142 Move X8, 0xF13000
	143 Move X8, [X8+2744]
	144 Move X0, X24
	145 Move X2, X31
	146 Move X1, [X8]
	147 Call String.op_Equality, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {132}
	152 Move X24, 0xF13000
	153 Move X24, [X24+2576]
	154 Move X0, [X24]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {160}
	158 Call 0x1C17DFC
	159 Move X0, [X24]
	160 Move X8, [X0+184]
	161 Move X9, [X8+72]
	162 Move [X21], X9
	163 Move X9, [X8+104]
	164 Move [X20], X9
	165 Move X8, [X8+112]
	166 Move X20, 0xF13000
	167 Move [X23], X8
	168 Move X20, [X20+2728]
	169 Move X0, [X20]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X20]
	175 Move X8, [X0+184]
	176 Move X8, [X8+48]
	177 Move [X19], X8
	178 Move X0, [X20]
	179 Move W8, 48

Method: System.Byte Category(System.Int32 cp)

Disassembly:
	0x0320F3D8 ADRP X8, 0xF12000
	0x0320F3DC LDR X8, [X8 + 0xAB8]
	0x0320F3E0 MOV X0, X22
	0x0320F3E4 MOV X2, X31
	0x0320F3E8 LDR X1, [X8]
	0x0320F3EC BL 0x321BA08
	0x0320F3F0 TBZ X0, 0x0, 0x320F64C
	0x0320F3F4 ADRP X8, 0xF12000
	0x0320F3F8 LDR X0, [X25]
	0x0320F3FC LDR X8, [X8 + 0xB20]
	0x0320F400 LDR W9, [X0 + 0xE0]
	0x0320F404 LDR X23, [X8]
	0x0320F408 CBNZ W9, 0x320F414
	0x0320F40C BL 0x1C16DFC
	0x0320F410 LDR X0, [X25]
	0x0320F414 LDR X8, [X0 + 0xB8]
	0x0320F418 LDR X9, [X8 + 0x48]
	0x0320F41C ADD X8, X8, 0x68
	0x0320F420 STR X9, [X21]
	0x0320F424 LDR X8, [X8]
	0x0320F428 STR X8, [X20]
	0x0320F42C CBZ X23, 0x320F64C
	0x0320F430 CBNZ X8, 0x320F64C
	0x0320F434 ADRP X8, 0xF12000
	0x0320F438 LDR X8, [X8 + 0xB18]
	0x0320F43C MOV X1, X23
	0x0320F440 MOV X2, X31
	0x0320F444 LDR X0, [X8]
	0x0320F448 BL 0x321EFD0
	0x0320F44C LDR X8, [X25]
	0x0320F450 MOV X24, X0
	0x0320F454 LDR W9, [X8 + 0xE0]
	0x0320F458 CBNZ W9, 0x320F464
	0x0320F45C MOV X0, X8
	0x0320F460 BL 0x1C16DFC
	0x0320F464 MOV X0, X24
	0x0320F468 BL 0x320EB68
	0x0320F46C MOV X1, X31
	0x0320F470 MOV X2, X31
	0x0320F474 MOV X24, X0
	0x0320F478 BL 0x33BE5B0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CE000
	006 Move X20, 0xF13000
	007 Move W8, [X21+676]
	008 Move X20, [X20+2576]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF13000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0xF13000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+676], W8
	022 Move X0, [X20]
	023 Move X21, 0xF13000
	024 Move W8, [X0+224]
	025 Move X21, [X21+2728]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X21]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+16]
	034 Compare W10, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Call CodePointIndexer.ToIndex, X0, X1
	045 Move W0, [X20]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Byte Level1(System.Int32 cp)

Disassembly:
	0x0320F47C TBNZ X0, 0x0, 0x320F64C
	0x0320F480 MOV X0, X24
	0x0320F484 MOV X1, X31
	0x0320F488 BL 0x33C6948
	0x0320F48C LDR X8, [X25]
	0x0320F490 MOV X24, X0
	0x0320F494 LDR W9, [X8 + 0xE0]
	0x0320F498 CBNZ W9, 0x320F4A4
	0x0320F49C MOV X0, X8
	0x0320F4A0 BL 0x1C16DFC
	0x0320F4A4 LDUR W8, [X24 + 0x1]
	0x0320F4A8 ADD X9, X24, 0x5
	0x0320F4AC STR X9, [X21]
	0x0320F4B0 MOV X0, X22
	0x0320F4B4 ADD X8, X8, X9
	0x0320F4B8 STR X8, [X20]
	0x0320F4BC LDR X1, [X26]
	0x0320F4C0 MOV X2, X31
	0x0320F4C4 BL 0x321BA08
	0x0320F4C8 TBZ X0, 0x0, 0x320F4F4
	0x0320F4CC LDR X0, [X25]
	0x0320F4D0 LDR X21, [X21]
	0x0320F4D4 LDR W8, [X0 + 0xE0]
	0x0320F4D8 CBNZ W8, 0x320F4E4
	0x0320F4DC BL 0x1C16DFC
	0x0320F4E0 LDR X0, [X25]
	0x0320F4E4 LDR X8, [X0 + 0xB8]
	0x0320F4E8 STR X21, [X8 + 0x30]
	0x0320F4EC ADD X8, X8, 0x50
	0x0320F4F0 B 0x320F5BC
	0x0320F4F4 ADRP X8, 0xF12000
	0x0320F4F8 LDR X8, [X8 + 0xAC0]
	0x0320F4FC MOV X0, X22
	0x0320F500 MOV X2, X31
	0x0320F504 LDR X1, [X8]
	0x0320F508 BL 0x321BA08
	0x0320F50C TBZ X0, 0x0, 0x320F538
	0x0320F510 LDR X0, [X25]
	0x0320F514 LDR X21, [X21]
	0x0320F518 LDR W8, [X0 + 0xE0]
	0x0320F51C CBNZ W8, 0x320F528

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CE000
	006 Move X20, 0xF13000
	007 Move W8, [X21+677]
	008 Move X20, [X20+2576]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF13000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0xF13000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+677], W8
	022 Move X0, [X20]
	023 Move X21, 0xF13000
	024 Move W8, [X0+224]
	025 Move X21, [X21+2728]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X21]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+24]
	034 Compare W10, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move X0, [X8+16]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Call CodePointIndexer.ToIndex, X0, X1
	045 Move W0, [X20]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Byte Level2(System.Int32 cp)

Disassembly:
	0x0320F520 BL 0x1C16DFC
	0x0320F524 LDR X0, [X25]
	0x0320F528 LDR X8, [X0 + 0xB8]
	0x0320F52C STR X21, [X8 + 0x38]
	0x0320F530 ADD X8, X8, 0x58
	0x0320F534 B 0x320F5BC
	0x0320F538 ADRP X8, 0xF12000
	0x0320F53C LDR X8, [X8 + 0xAB0]
	0x0320F540 MOV X0, X22
	0x0320F544 MOV X2, X31
	0x0320F548 LDR X1, [X8]
	0x0320F54C BL 0x321BA08
	0x0320F550 TBZ X0, 0x0, 0x320F57C
	0x0320F554 LDR X0, [X25]
	0x0320F558 LDR X21, [X21]
	0x0320F55C LDR W8, [X0 + 0xE0]
	0x0320F560 CBNZ W8, 0x320F56C
	0x0320F564 BL 0x1C16DFC
	0x0320F568 LDR X0, [X25]
	0x0320F56C LDR X8, [X0 + 0xB8]
	0x0320F570 STR X21, [X8 + 0x40]
	0x0320F574 ADD X8, X8, 0x60
	0x0320F578 B 0x320F5BC
	0x0320F57C ADRP X8, 0xF12000
	0x0320F580 LDR X8, [X8 + 0xAB8]
	0x0320F584 MOV X0, X22
	0x0320F588 MOV X2, X31
	0x0320F58C LDR X1, [X8]
	0x0320F590 BL 0x321BA08
	0x0320F594 TBZ X0, 0x0, 0x320F5C4
	0x0320F598 LDR X0, [X25]
	0x0320F59C LDR X21, [X21]
	0x0320F5A0 LDR W8, [X0 + 0xE0]
	0x0320F5A4 CBNZ W8, 0x320F5B0
	0x0320F5A8 BL 0x1C16DFC
	0x0320F5AC LDR X0, [X25]
	0x0320F5B0 LDR X8, [X0 + 0xB8]
	0x0320F5B4 STR X21, [X8 + 0x48]
	0x0320F5B8 ADD X8, X8, 0x68
	0x0320F5BC LDR X9, [X20]
	0x0320F5C0 STR X9, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CE000
	006 Move X20, 0xF13000
	007 Move W8, [X21+678]
	008 Move X20, [X20+2576]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF13000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0xF13000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+678], W8
	022 Move X0, [X20]
	023 Move X21, 0xF13000
	024 Move W8, [X0+224]
	025 Move X21, [X21+2728]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X21]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+32]
	034 Compare W10, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move X0, [X8+24]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Call CodePointIndexer.ToIndex, X0, X1
	045 Move W0, [X20]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Byte Level3(System.Int32 cp)

Disassembly:
	0x0320F5C4 ADRP X8, 0xF12000
	0x0320F5C8 LDR X8, [X8 + 0xB20]
	0x0320F5CC MOV X0, X23
	0x0320F5D0 MOV X2, X31
	0x0320F5D4 LDR X1, [X8]
	0x0320F5D8 BL 0x3226EF8
	0x0320F5DC TBNZ X0, 0x0, 0x320F64C
	0x0320F5E0 LDR X0, [X25]
	0x0320F5E4 LDR W8, [X0 + 0xE0]
	0x0320F5E8 CBNZ W8, 0x320F5F0
	0x0320F5EC BL 0x1C16DFC
	0x0320F5F0 ADRP X8, 0xF12000
	0x0320F5F4 LDR X8, [X8 + 0xB00]
	0x0320F5F8 LDR X0, [X8]
	0x0320F5FC BL 0x320EB68
	0x0320F600 MOV X1, X31
	0x0320F604 MOV X2, X31
	0x0320F608 MOV X20, X0
	0x0320F60C BL 0x33BE5B0
	0x0320F610 TBNZ X0, 0x0, 0x320F64C
	0x0320F614 MOV X0, X20
	0x0320F618 MOV X1, X31
	0x0320F61C BL 0x33C6948
	0x0320F620 LDR X8, [X25]
	0x0320F624 MOV X20, X0
	0x0320F628 LDR W9, [X8 + 0xE0]
	0x0320F62C CBNZ W9, 0x320F63C
	0x0320F630 MOV X0, X8
	0x0320F634 BL 0x1C16DFC
	0x0320F638 LDR X8, [X25]
	0x0320F63C LDR X8, [X8 + 0xB8]
	0x0320F640 ADD X9, X20, 0x5
	0x0320F644 STR X9, [X8 + 0x70]
	0x0320F648 STR X9, [X19]
	0x0320F64C LDP X20, X19, [X31 + 0x40]
	0x0320F650 LDP X22, X21, [X31 + 0x30]
	0x0320F654 LDP X24, X23, [X31 + 0x20]
	0x0320F658 LDP X26, X25, [X31 + 0x10]
	0x0320F65C LDR X30, [X31], #0x50
	0x0320F660 RET
	0x0320F664 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CE000
	006 Move X20, 0xF13000
	007 Move W8, [X21+679]
	008 Move X20, [X20+2576]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF13000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0xF13000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+679], W8
	022 Move X0, [X20]
	023 Move X21, 0xF13000
	024 Move W8, [X0+224]
	025 Move X21, [X21+2728]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X21]
	031 Move X9, [X0+184]
	032 Move W10, [X8+224]
	033 Move X20, [X9+40]
	034 Compare W10, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move X0, [X8+32]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Call CodePointIndexer.ToIndex, X0, X1
	045 Move W0, [X20]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean IsIgnorable(System.Int32 cp, System.Byte flag)

Disassembly:
	0x0320F668 STP X20, X19, [X31 + 0x10]
	0x0320F66C ADRP X19, 0x11CD000
	0x0320F670 ADRP X20, 0xF12000
	0x0320F674 LDRB W8, [X19 + 0x2AF]
	0x0320F678 LDR X20, [X20 + 0xA88]
	0x0320F67C TBNZ X8, 0x0, 0x320F694
	0x0320F680 ADRP X0, 0xF12000
	0x0320F684 LDR X0, [X0 + 0xA88]
	0x0320F688 BL 0x1C16CF4
	0x0320F68C MOVZ W8, 0x1
	0x0320F690 STRB W8, [X19 + 0x2AF]
	0x0320F694 LDR X0, [X20]
	0x0320F698 BL 0x1C16F10
	0x0320F69C MOV X1, X31
	0x0320F6A0 MOV X19, X0
	0x0320F6A4 BL 0x33BDD8C
	0x0320F6A8 LDR X8, [X20]
	0x0320F6AC LDR X8, [X8 + 0xB8]
	0x0320F6B0 STR X19, [X8]
	0x0320F6B4 LDP X20, X19, [X31 + 0x10]
	0x0320F6B8 LDR X30, [X31], #0x20
	0x0320F6BC RET
	0x0320F6C0 MOV X1, X31
	0x0320F6C4 B 0x33BDD8C
	0x0320F6C8 STR X30, [X31 - 0x10]!
	0x0320F6CC CBZ X1, 0x320F6E8
	0x0320F6D0 CBZ X2, 0x320F6E8
	0x0320F6D4 LDRB W8, [X1 + 0x10]
	0x0320F6D8 LDRB W9, [X2 + 0x10]
	0x0320F6DC SUB W0, W8, W9
	0x0320F6E0 LDR X30, [X31], #0x10
	0x0320F6E4 RET
	0x0320F6E8 BL 0x1C16F20
	0x0320F6EC SUB X31, X31, 0x90
	0x0320F6F0 STP X29, X30, [X31 + 0x30]
	0x0320F6F4 STP X28, X27, [X31 + 0x40]
	0x0320F6F8 STP X26, X25, [X31 + 0x50]
	0x0320F6FC STP X24, X23, [X31 + 0x60]
	0x0320F700 STP X22, X21, [X31 + 0x70]
	0x0320F704 STP X20, X19, [X31 + 0x80]
	0x0320F708 ADRP X19, 0x11CD000
	0x0320F70C ADRP X22, 0xEE5000
	0x0320F710 LDRB W8, [X19 + 0x2B0]
	0x0320F714 LDR X22, [X22 + 0xE58]
	0x0320F718 TBNZ X8, 0x0, 0x320F7C0
	0x0320F71C ADRP X0, 0xF12000
	0x0320F720 LDR X0, [X0 + 0xB28]
	0x0320F724 BL 0x1C16CF4
	0x0320F728 ADRP X0, 0xEE5000
	0x0320F72C LDR X0, [X0 + 0xE58]
	0x0320F730 BL 0x1C16CF4
	0x0320F734 ADRP X0, 0xF12000
	0x0320F738 LDR X0, [X0 + 0xAA8]
	0x0320F73C BL 0x1C16CF4
	0x0320F740 ADRP X0, 0xF12000
	0x0320F744 LDR X0, [X0 + 0xB30]
	0x0320F748 BL 0x1C16CF4
	0x0320F74C ADRP X0, 0xF12000
	0x0320F750 LDR X0, [X0 + 0xB38]
	0x0320F754 BL 0x1C16CF4
	0x0320F758 ADRP X0, 0xF12000
	0x0320F75C LDR X0, [X0 + 0xB40]
	0x0320F760 BL 0x1C16CF4
	0x0320F764 ADRP X0, 0xF12000
	0x0320F768 LDR X0, [X0 + 0xB48]
	0x0320F76C BL 0x1C16CF4
	0x0320F770 ADRP X0, 0xF12000
	0x0320F774 LDR X0, [X0 + 0xB50]
	0x0320F778 BL 0x1C16CF4
	0x0320F77C ADRP X0, 0xF12000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x11CE000
	006 Move W8, [X21+680]
	007 Move W19, W1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xEE7000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0xF13000
	017 Move X0, [X0+2728]
	018 Call 0x1C17CF4
	019 Move X0, 0xF13000
	020 Move X0, [X0+2576]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+680], W8
	024 Compare W20, 0
	025 JumpIfEqual {79}
	026 Move TEMP, X19
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {47}
	030 Move X8, 0xEE7000
	031 Move X8, [X8+368]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W20
	038 Move X1, X31
	039 Call Char.GetUnicodeCategory, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, 1
	042 Move TEMP, 0xD87F
	043 Not TEMP
	044 Move W8, TEMP
	045 Add W8, W20, W8
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X21, 0xF13000
	048 Move X21, [X21+2728]
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X8, [X0+184]
	056 Move X0, [X8]
	057 Compare X0, 0
	058 JumpIfEqual {86}
	059 Move W1, W20
	060 Call CodePointIndexer.ToIndex, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {80}
	065 Move X21, 0xF13000
	066 Move X21, [X21+2576]
	067 Move W20, W0
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move X8, [X8+8]
	076 Move W8, [X8]
	077 And W31, W19, W8
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Return X0
	086 Call 0x1C17F20

Method: System.Boolean IsIgnorableNonSpacing(System.Int32 cp)

Disassembly:
	0x0320F780 LDR X0, [X0 + 0xB58]
	0x0320F784 BL 0x1C16CF4
	0x0320F788 ADRP X0, 0xF12000
	0x0320F78C LDR X0, [X0 + 0xB60]
	0x0320F790 BL 0x1C16CF4
	0x0320F794 ADRP X0, 0xF12000
	0x0320F798 LDR X0, [X0 + 0xB68]
	0x0320F79C BL 0x1C16CF4
	0x0320F7A0 ADRP X0, 0xF12000
	0x0320F7A4 LDR X0, [X0 + 0xB70]
	0x0320F7A8 BL 0x1C16CF4
	0x0320F7AC ADRP X0, 0xF12000
	0x0320F7B0 LDR X0, [X0 + 0xB78]
	0x0320F7B4 BL 0x1C16CF4
	0x0320F7B8 MOVZ W8, 0x1
	0x0320F7BC STRB W8, [X19 + 0x2B0]
	0x0320F7C0 LDR X0, [X22]
	0x0320F7C4 MOVZ W1, 0x3
	0x0320F7C8 BL 0x1C16D6C
	0x0320F7CC CBZ X0, 0x320FB1C
	0x0320F7D0 LDR W8, [X0 + 0x18]
	0x0320F7D4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x11CE000
	006 Move X21, 0xF13000
	007 Move W8, [X20+681]
	008 Move X21, [X21+2576]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF13000
	015 Move X0, [X0+2576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+681], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 4
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call MSCompatUnicodeTable.IsIgnorable, X0, X1
	031 Return X0

Method: System.Int32 ToKanaTypeInsensitive(System.Int32 i)

Disassembly:
	0x0320F7D8 CMP W8, 0x1
	0x0320F7DC B.LS 0x320FB18
	0x0320F7E0 MOVZ W9, 0xA000
	0x0320F7E4 CMP W8, 0x2
	0x0320F7E8 STR W9, [X19 + 0x24]
	0x0320F7EC B.EQ 0x320FB18

ISIL:
	001 Move TEMP, 0x3040
	002 Not TEMP
	003 Move W8, TEMP
	004 Add W8, W0, W8
	005 Add W9, W0, 96
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Return X0

Method: System.Int32 ToWidthCompat(System.Int32 i)

Disassembly:
	0x0320F7F0 ADRP X23, 0xF12000
	0x0320F7F4 ADRP X25, 0xF12000
	0x0320F7F8 ADRP X24, 0xF12000
	0x0320F7FC ADRP X26, 0xF12000
	0x0320F800 ADRP X27, 0xF12000
	0x0320F804 ADRP X29, 0xF12000
	0x0320F808 ADRP X28, 0xF12000
	0x0320F80C ADRP X21, 0xF12000
	0x0320F810 ADRP X20, 0xF12000
	0x0320F814 MOVZ W8, 0xF900
	0x0320F818 LDR X23, [X23 + 0xB30]
	0x0320F81C LDR X25, [X25 + 0xB78]
	0x0320F820 LDR X24, [X24 + 0xB68]
	0x0320F824 LDR X26, [X26 + 0xB48]
	0x0320F828 LDR X27, [X27 + 0xB58]
	0x0320F82C LDR X29, [X29 + 0xB70]
	0x0320F830 LDR X28, [X28 + 0xB38]
	0x0320F834 LDR X21, [X21 + 0xB50]
	0x0320F838 LDR X20, [X20 + 0xB40]
	0x0320F83C STR W8, [X19 + 0x28]
	0x0320F840 LDR X0, [X22]
	0x0320F844 MOVZ W1, 0x3
	0x0320F848 BL 0x1C16D6C
	0x0320F84C LDR X1, [X23]
	0x0320F850 MOV X2, X31
	0x0320F854 STR X0, [X31 + 0x28]
	0x0320F858 BL 0x32C5BD8
	0x0320F85C LDR X0, [X22]
	0x0320F860 MOVZ W1, 0x6
	0x0320F864 BL 0x1C16D6C
	0x0320F868 LDR X1, [X25]
	0x0320F86C MOV X2, X31
	0x0320F870 STR X0, [X31 + 0x20]
	0x0320F874 BL 0x32C5BD8
	0x0320F878 LDR X0, [X22]
	0x0320F87C MOVZ W1, 0x6
	0x0320F880 BL 0x1C16D6C
	0x0320F884 LDR X1, [X24]
	0x0320F888 MOV X2, X31
	0x0320F88C STR X0, [X31 + 0x10]
	0x0320F890 BL 0x32C5BD8
	0x0320F894 LDR X0, [X22]
	0x0320F898 MOVZ W1, 0x6
	0x0320F89C BL 0x1C16D6C
	0x0320F8A0 LDR X1, [X25]
	0x0320F8A4 MOV X2, X31
	0x0320F8A8 STR X0, [X31 + 0x18]
	0x0320F8AC BL 0x32C5BD8
	0x0320F8B0 LDR X0, [X22]
	0x0320F8B4 MOVZ W1, 0x6
	0x0320F8B8 BL 0x1C16D6C
	0x0320F8BC LDR X1, [X24]
	0x0320F8C0 MOV X2, X31
	0x0320F8C4 STR X0, [X31]
	0x0320F8C8 BL 0x32C5BD8
	0x0320F8CC LDR X0, [X22]
	0x0320F8D0 MOVZ W1, 0x4
	0x0320F8D4 BL 0x1C16D6C
	0x0320F8D8 LDR X1, [X26]
	0x0320F8DC MOV X2, X31
	0x0320F8E0 STR X0, [X31 + 0x8]
	0x0320F8E4 BL 0x32C5BD8
	0x0320F8E8 LDR X0, [X22]
	0x0320F8EC MOVZ W1, 0x4
	0x0320F8F0 BL 0x1C16D6C
	0x0320F8F4 LDR X1, [X27]
	0x0320F8F8 MOV X2, X31
	0x0320F8FC MOV X27, X0
	0x0320F900 BL 0x32C5BD8
	0x0320F904 LDR X0, [X22]
	0x0320F908 MOVZ W1, 0x4
	0x0320F90C BL 0x1C16D6C
	0x0320F910 LDR X1, [X26]
	0x0320F914 MOV X2, X31
	0x0320F918 MOV X26, X0
	0x0320F91C BL 0x32C5BD8
	0x0320F920 LDR X0, [X22]
	0x0320F924 MOVZ W1, 0x4
	0x0320F928 BL 0x1C16D6C
	0x0320F92C LDR X1, [X29]
	0x0320F930 MOV X2, X31
	0x0320F934 MOV X29, X0
	0x0320F938 BL 0x32C5BD8
	0x0320F93C LDR X0, [X22]
	0x0320F940 MOVZ W1, 0x3
	0x0320F944 BL 0x1C16D6C
	0x0320F948 LDR X1, [X28]
	0x0320F94C MOV X2, X31
	0x0320F950 MOV X28, X0
	0x0320F954 BL 0x32C5BD8
	0x0320F958 LDR X0, [X22]
	0x0320F95C MOVZ W1, 0x3
	0x0320F960 BL 0x1C16D6C
	0x0320F964 LDR X1, [X21]
	0x0320F968 MOV X2, X31
	0x0320F96C MOV X21, X0
	0x0320F970 BL 0x32C5BD8
	0x0320F974 LDR X0, [X22]
	0x0320F978 MOVZ W1, 0x3

ISIL:
	001 Move W8, 0x2190
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 0xFF01
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 0x32FE
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, 0x2193
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, 0x2502
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, 0x25CB
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 0x3130
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, 0x3163
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 0x3164
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, 0xFFA0
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Return X0
	023 Move W8, 0xFF5E
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move TEMP, 0xFFDF
	026 Not TEMP
	027 Move W8, TEMP
	028 Add W8, W0, W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, -40337408
	031 Add X9, X9, 1064
	032 Move W0, [X9]
	033 Return X0
	034 Move TEMP, 0xFEDF
	035 Not TEMP
	036 Move W8, TEMP
	037 Move W8, 0xDE59
	038 Add W0, W0, W8
	039 Return X0
	040 Move W8, 0x2502
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W8, 0x25A0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, 0x25CB
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, 0xFFEE
	047 Return X0
	048 Move W8, 0x300C
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 0x300D
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, 0x30FB
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W0, 0xFF65
	055 Return X0
	056 Move W0, 0xFFE8
	057 Return X0
	058 Move W0, 0xFFED
	059 Return X0
	060 Move W8, 0xCE70
	061 Move W8, 0x3001
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, 0x3001
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W0, 0xFF64
	067 Return X0
	068 Move W8, 0x3002
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, 0x300C
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W0, 0xFF62
	073 Return X0
	074 Move W0, 0xFF63
	075 Return X0
	076 Move W0, 32
	077 Return X0
	078 Move W0, 0xFF61
	079 Return X0

Method: System.Boolean HasSpecialWeight(System.Char c)

Disassembly:
	0x0320F97C BL 0x1C16D6C
	0x0320F980 LDR X1, [X20]
	0x0320F984 MOV X2, X31
	0x0320F988 MOV X20, X0
	0x0320F98C BL 0x32C5BD8
	0x0320F990 LDR X0, [X22]
	0x0320F994 MOVZ W1, 0x3
	0x0320F998 BL 0x1C16D6C
	0x0320F99C ADRP X8, 0xF12000
	0x0320F9A0 LDR X8, [X8 + 0xB60]
	0x0320F9A4 MOV X2, X31
	0x0320F9A8 MOV X22, X0
	0x0320F9AC LDR X1, [X8]
	0x0320F9B0 BL 0x32C5BD8
	0x0320F9B4 ADRP X24, 0xF12000
	0x0320F9B8 LDR X24, [X24 + 0xB28]
	0x0320F9BC LDR X0, [X24]
	0x0320F9C0 BL 0x1C16F10
	0x0320F9C4 LDR X2, [X31 + 0x28]
	0x0320F9C8 MOVN W3, 0x0
	0x0320F9CC MOVN W4, 0x0
	0x0320F9D0 MOV X1, X19
	0x0320F9D4 MOV X23, X0
	0x0320F9D8 BL 0x320D580
	0x0320F9DC ADRP X25, 0xF12000
	0x0320F9E0 LDR X25, [X25 + 0xAA8]
	0x0320F9E4 LDR X8, [X25]
	0x0320F9E8 LDR X8, [X8 + 0xB8]
	0x0320F9EC STR X23, [X8]
	0x0320F9F0 LDR X0, [X24]
	0x0320F9F4 BL 0x1C16F10
	0x0320F9F8 LDR X1, [X31 + 0x20]

ISIL:
	001 Move W8, 0x3041
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W8, W0, 154
	004 And W8, W8, 0xFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, W0
	007 ShiftRight W8, 8
	008 And W8, W8, 0x7FFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W9, 0x309C
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, W0
	014 ShiftRight W8, 4
	015 And W8, W8, 0x7FFF
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W8, 0x32FF
	018 Move W0, W31
	019 Return X0
	020 Move W0, 1
	021 Return X0
	022 Move W8, 0x3099
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Return X0
	026 Move W8, 0x30FB
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Return X0

Method: System.Boolean IsHalfWidthKana(System.Char c)

Disassembly:
	0x0320F9FC LDR X2, [X31 + 0x10]
	0x0320FA00 MOV W3, W31
	0x0320FA04 MOV W4, W31
	0x0320FA08 MOV X19, X0
	0x0320FA0C BL 0x320D580

ISIL:
	001 Add W8, W0, 154
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsHiragana(System.Char c)

Disassembly:
	0x0320FA10 LDR X8, [X25]
	0x0320FA14 LDR X8, [X8 + 0xB8]
	0x0320FA18 STR X19, [X8 + 0x8]
	0x0320FA1C LDR X0, [X24]
	0x0320FA20 BL 0x1C16F10
	0x0320FA24 LDR X1, [X31 + 0x18]

ISIL:
	001 Move TEMP, 0x3040
	002 Not TEMP
	003 Move W8, TEMP
	004 Add W8, W0, W8
	005 And W8, W8, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Boolean IsJapaneseSmallLetter(System.Char c)

Disassembly:
	0x0320FA28 LDR X2, [X31]
	0x0320FA2C MOV W3, W31
	0x0320FA30 MOV W4, W31
	0x0320FA34 MOV X19, X0
	0x0320FA38 BL 0x320D580
	0x0320FA3C LDR X8, [X25]
	0x0320FA40 LDR X8, [X8 + 0xB8]
	0x0320FA44 STR X19, [X8 + 0x10]
	0x0320FA48 LDR X0, [X24]
	0x0320FA4C BL 0x1C16F10
	0x0320FA50 LDR X1, [X31 + 0x8]
	0x0320FA54 MOV X2, X27
	0x0320FA58 MOV W3, W31
	0x0320FA5C MOV W4, W31
	0x0320FA60 MOV X19, X0
	0x0320FA64 BL 0x320D580
	0x0320FA68 LDR X8, [X25]
	0x0320FA6C LDR X8, [X8 + 0xB8]
	0x0320FA70 STR X19, [X8 + 0x18]
	0x0320FA74 LDR X0, [X24]
	0x0320FA78 BL 0x1C16F10
	0x0320FA7C MOV X1, X26
	0x0320FA80 MOV X2, X29
	0x0320FA84 MOV W3, W31
	0x0320FA88 MOV W4, W31
	0x0320FA8C MOV X19, X0
	0x0320FA90 BL 0x320D580
	0x0320FA94 LDR X8, [X25]
	0x0320FA98 LDR X8, [X8 + 0xB8]
	0x0320FA9C STR X19, [X8 + 0x20]
	0x0320FAA0 LDR X0, [X24]
	0x0320FAA4 BL 0x1C16F10
	0x0320FAA8 MOVN W3, 0x0
	0x0320FAAC MOVN W4, 0x0
	0x0320FAB0 MOV X1, X28
	0x0320FAB4 MOV X2, X21
	0x0320FAB8 MOV X19, X0
	0x0320FABC BL 0x320D580
	0x0320FAC0 LDR X8, [X25]
	0x0320FAC4 LDR X8, [X8 + 0xB8]
	0x0320FAC8 STR X19, [X8 + 0x28]
	0x0320FACC LDR X0, [X24]
	0x0320FAD0 BL 0x1C16F10
	0x0320FAD4 MOVN W3, 0x0
	0x0320FAD8 MOVN W4, 0x0
	0x0320FADC MOV X1, X20
	0x0320FAE0 MOV X2, X22
	0x0320FAE4 MOV X19, X0
	0x0320FAE8 BL 0x320D580
	0x0320FAEC LDR X8, [X25]
	0x0320FAF0 LDP X22, X21, [X31 + 0x70]
	0x0320FAF4 LDP X24, X23, [X31 + 0x60]
	0x0320FAF8 LDP X26, X25, [X31 + 0x50]
	0x0320FAFC LDR X8, [X8 + 0xB8]
	0x0320FB00 LDP X28, X27, [X31 + 0x40]
	0x0320FB04 LDP X29, X30, [X31 + 0x30]
	0x0320FB08 STR X19, [X8 + 0x30]
	0x0320FB0C LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Add W8, W0, 153
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move TEMP, 0x3040
	005 Not TEMP
	006 Move W8, TEMP
	007 Add W8, W0, W8
	008 And W8, W8, 0xFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W0, W31
	011 Return X0
	012 Move W0, 1
	013 Return X0
	014 Move W8, 0x30A9
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W8, W0
	017 ShiftRight W8, 2
	018 And W8, W8, 0x7FFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move TEMP, 0x3040
	021 Not TEMP
	022 Move W8, TEMP
	023 Add W8, W0, W8
	024 And W9, W8, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, 341
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 Move W8, W0
	029 ShiftRight W8, 3
	030 And W8, W8, 0x7FFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move TEMP, 0x30C2
	033 Not TEMP
	034 Move W8, TEMP
	035 Add W8, W0, W8
	036 And W9, W8, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, 1
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Move TEMP, 0x3082
	041 Not TEMP
	042 Move W8, TEMP
	043 Add W8, W0, W8
	044 And W9, W8, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, 2069
	047 NotImplemented "Instruction MOVK not yet implemented."
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction LSRV not yet implemented."
	050 And W0, W8, 1
	051 Return X0
	052 Move TEMP, 0x30ED
	053 Not TEMP
	054 Move W8, TEMP
	055 Add W8, W0, W8
	056 And W9, W8, 0xFFFF
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, 385
	059 NotImplemented "Instruction LSRV not yet implemented."
	060 And W0, W8, 1
	061 Return X0

Method: System.Boolean get_IsReady()

Disassembly:
	0x0320FB10 ADD X31, X31, 0x90
	0x0320FB14 RET
	0x0320FB18 BL 0x1C16F28
	0x0320FB1C BL 0x1C16F20
	0x0320FB20 SUB X31, X31, 0x70
	0x0320FB24 STP X29, X30, [X31 + 0x10]
	0x0320FB28 STP X28, X27, [X31 + 0x20]
	0x0320FB2C STP X26, X25, [X31 + 0x30]
	0x0320FB30 STP X24, X23, [X31 + 0x40]
	0x0320FB34 STP X22, X21, [X31 + 0x50]
	0x0320FB38 STP X20, X19, [X31 + 0x60]
	0x0320FB3C ADRP X29, 0x11CD000
	0x0320FB40 ADRP X28, 0xEE5000
	0x0320FB44 ADRP X19, 0xF12000
	0x0320FB48 ADRP X21, 0xF12000
	0x0320FB4C ADRP X20, 0xF12000
	0x0320FB50 ADRP X23, 0xF12000
	0x0320FB54 ADRP X22, 0xF12000
	0x0320FB58 ADRP X25, 0xF12000
	0x0320FB5C ADRP X24, 0xF12000
	0x0320FB60 ADRP X27, 0xF12000
	0x0320FB64 ADRP X26, 0xF12000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x11CE000
	005 Move X19, 0xF13000
	006 Move W8, [X20+682]
	007 Move X19, [X19+2576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF13000
	013 Move X0, [X0+2576]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+682], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+144]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.IntPtr GetResource(System.String name)

Disassembly:
	0x0320FB68 LDR X28, [X28 + 0xE58]
	0x0320FB6C LDR X19, [X19 + 0xB80]
	0x0320FB70 LDR X21, [X21 + 0xB88]
	0x0320FB74 LDR X20, [X20 + 0xB90]
	0x0320FB78 LDR X23, [X23 + 0xB98]
	0x0320FB7C LDR X22, [X22 + 0xBA0]
	0x0320FB80 LDR X25, [X25 + 0xBA8]
	0x0320FB84 LDR X24, [X24 + 0xBB0]
	0x0320FB88 LDRB W8, [X29 + 0x2B1]
	0x0320FB8C LDR X27, [X27 + 0xBB8]
	0x0320FB90 LDR X26, [X26 + 0xBC0]
	0x0320FB94 TBNZ X8, 0x0, 0x320FC3C
	0x0320FB98 ADRP X0, 0xF12000
	0x0320FB9C LDR X0, [X0 + 0xB28]
	0x0320FBA0 BL 0x1C16CF4
	0x0320FBA4 ADRP X0, 0xEE5000
	0x0320FBA8 LDR X0, [X0 + 0xE58]
	0x0320FBAC BL 0x1C16CF4
	0x0320FBB0 ADRP X0, 0xF12000
	0x0320FBB4 LDR X0, [X0 + 0xBC8]
	0x0320FBB8 BL 0x1C16CF4
	0x0320FBBC ADRP X0, 0xF12000
	0x0320FBC0 LDR X0, [X0 + 0xBA8]
	0x0320FBC4 BL 0x1C16CF4
	0x0320FBC8 ADRP X0, 0xF12000
	0x0320FBCC LDR X0, [X0 + 0xB80]
	0x0320FBD0 BL 0x1C16CF4
	0x0320FBD4 ADRP X0, 0xF12000
	0x0320FBD8 LDR X0, [X0 + 0xB90]
	0x0320FBDC BL 0x1C16CF4
	0x0320FBE0 ADRP X0, 0xF12000
	0x0320FBE4 LDR X0, [X0 + 0xB88]
	0x0320FBE8 BL 0x1C16CF4
	0x0320FBEC ADRP X0, 0xF12000
	0x0320FBF0 LDR X0, [X0 + 0xBA0]
	0x0320FBF4 BL 0x1C16CF4
	0x0320FBF8 ADRP X0, 0xF12000
	0x0320FBFC LDR X0, [X0 + 0xBD0]
	0x0320FC00 BL 0x1C16CF4
	0x0320FC04 ADRP X0, 0xF12000
	0x0320FC08 LDR X0, [X0 + 0xBC0]
	0x0320FC0C BL 0x1C16CF4
	0x0320FC10 ADRP X0, 0xF12000
	0x0320FC14 LDR X0, [X0 + 0xB98]
	0x0320FC18 BL 0x1C16CF4
	0x0320FC1C ADRP X0, 0xF12000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x11CE000
	007 Move X20, 0xF13000
	008 Move W8, [X21+683]
	009 Move X20, [X20+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF13000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0xF13000
	019 Move X0, [X0+2768]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+683], W8
	023 Move X0, [X20]
	024 Move [X31+12], W31
	025 Move [X31], X31
	026 Call 0x1C17CE0
	027 Compare X0, 0
	028 JumpIfEqual {52}
	029 Move X9, 0xF13000
	030 Move X9, [X9+2768]
	031 Move X8, [X0]
	032 Move X1, [X9]
	033 Move W10, [X8+304]
	034 Move W9, [X1+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X8+200]
	037 Add X8, X8, X9
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X2, X31, 12
	041 Add X3, X31, 0
	042 Move X1, X19
	043 Move X4, X31
	044 Call RuntimeAssembly.GetManifestResourceInternal, X0, X1, X2, X3
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Add X31, X31, 48
	050 Return X0
	051 Call 0x1C181E0
	052 Call 0x1C17F20

Method: System.UInt32 UInt32FromBytePtr(System.Byte* raw, System.UInt32 idx)

Disassembly:
	0x0320FC20 LDR X0, [X0 + 0xBB8]
	0x0320FC24 BL 0x1C16CF4
	0x0320FC28 ADRP X0, 0xF12000
	0x0320FC2C LDR X0, [X0 + 0xBB0]
	0x0320FC30 BL 0x1C16CF4
	0x0320FC34 MOVZ W8, 0x1
	0x0320FC38 STRB W8, [X29 + 0x2B1]
	0x0320FC3C LDR X0, [X28]
	0x0320FC40 MOVZ W1, 0xB
	0x0320FC44 BL 0x1C16D6C
	0x0320FC48 LDR X1, [X19]
	0x0320FC4C MOV X2, X31

ISIL:
	001 Add W9, W1, 1
	002 Move W8, [X0]
	003 Add W10, W1, 2
	004 Move W9, [X0]
	005 Move W10, [X0]
	006 Add W11, W1, 3
	007 Move W11, [X0]
	008 NotImplemented "Instruction BFM not yet implemented."
	009 NotImplemented "Instruction BFM not yet implemented."
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Move W0, W8
	012 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0320FC50 MOV X19, X0
	0x0320FC54 BL 0x32C5BD8
	0x0320FC58 LDR X0, [X28]
	0x0320FC5C MOVZ W1, 0xB
	0x0320FC60 BL 0x1C16D6C
	0x0320FC64 LDR X1, [X21]
	0x0320FC68 MOV X2, X31
	0x0320FC6C MOV X21, X0
	0x0320FC70 BL 0x32C5BD8
	0x0320FC74 LDR X0, [X28]
	0x0320FC78 MOVZ W1, 0x9
	0x0320FC7C BL 0x1C16D6C
	0x0320FC80 LDR X1, [X20]
	0x0320FC84 MOV X2, X31
	0x0320FC88 STR X0, [X31 + 0x8]
	0x0320FC8C BL 0x32C5BD8
	0x0320FC90 LDR X0, [X28]
	0x0320FC94 MOVZ W1, 0x9
	0x0320FC98 BL 0x1C16D6C
	0x0320FC9C LDR X1, [X23]
	0x0320FCA0 MOV X2, X31
	0x0320FCA4 MOV X23, X0
	0x0320FCA8 BL 0x32C5BD8
	0x0320FCAC LDR X0, [X28]
	0x0320FCB0 MOVZ W1, 0x1E
	0x0320FCB4 BL 0x1C16D6C
	0x0320FCB8 LDR X1, [X22]
	0x0320FCBC MOV X2, X31
	0x0320FCC0 MOV X22, X0
	0x0320FCC4 BL 0x32C5BD8
	0x0320FCC8 LDR X0, [X28]
	0x0320FCCC MOVZ W1, 0x1E
	0x0320FCD0 BL 0x1C16D6C
	0x0320FCD4 LDR X1, [X25]
	0x0320FCD8 MOV X2, X31
	0x0320FCDC MOV X25, X0
	0x0320FCE0 BL 0x32C5BD8
	0x0320FCE4 LDR X0, [X28]
	0x0320FCE8 MOVZ W1, 0x3
	0x0320FCEC BL 0x1C16D6C
	0x0320FCF0 LDR X1, [X24]
	0x0320FCF4 MOV X2, X31
	0x0320FCF8 MOV X24, X0
	0x0320FCFC BL 0x32C5BD8
	0x0320FD00 LDR X0, [X28]
	0x0320FD04 MOVZ W1, 0x3
	0x0320FD08 BL 0x1C16D6C
	0x0320FD0C LDR X1, [X27]
	0x0320FD10 MOV X2, X31
	0x0320FD14 MOV X27, X0
	0x0320FD18 BL 0x32C5BD8
	0x0320FD1C LDR X0, [X28]
	0x0320FD20 MOVZ W1, 0x9
	0x0320FD24 BL 0x1C16D6C
	0x0320FD28 LDR X1, [X26]
	0x0320FD2C MOV X2, X31
	0x0320FD30 MOV X26, X0
	0x0320FD34 BL 0x32C5BD8
	0x0320FD38 LDR X0, [X28]
	0x0320FD3C MOVZ W1, 0x9
	0x0320FD40 BL 0x1C16D6C
	0x0320FD44 ADRP X8, 0xF12000
	0x0320FD48 LDR X8, [X8 + 0xBD0]
	0x0320FD4C MOV X2, X31
	0x0320FD50 MOV X28, X0
	0x0320FD54 LDR X1, [X8]
	0x0320FD58 BL 0x32C5BD8
	0x0320FD5C ADRP X20, 0xF12000
	0x0320FD60 LDR X20, [X20 + 0xB28]
	0x0320FD64 LDR X0, [X20]
	0x0320FD68 BL 0x1C16F10
	0x0320FD6C MOV X1, X19
	0x0320FD70 MOV X2, X21
	0x0320FD74 MOV W3, W31
	0x0320FD78 MOV W4, W31
	0x0320FD7C MOV X29, X0
	0x0320FD80 BL 0x320D580
	0x0320FD84 ADRP X21, 0xF12000
	0x0320FD88 LDR X21, [X21 + 0xBC8]
	0x0320FD8C LDR X8, [X21]
	0x0320FD90 LDR X8, [X8 + 0xB8]
	0x0320FD94 STR X29, [X8]
	0x0320FD98 LDR X0, [X20]
	0x0320FD9C BL 0x1C16F10
	0x0320FDA0 LDR X1, [X31 + 0x8]
	0x0320FDA4 MOV X2, X23
	0x0320FDA8 MOV W3, W31
	0x0320FDAC MOV W4, W31
	0x0320FDB0 MOV X19, X0
	0x0320FDB4 BL 0x320D580
	0x0320FDB8 LDR X8, [X21]
	0x0320FDBC LDR X8, [X8 + 0xB8]
	0x0320FDC0 STR X19, [X8 + 0x8]
	0x0320FDC4 LDR X0, [X20]
	0x0320FDC8 BL 0x1C16F10
	0x0320FDCC MOV X1, X22
	0x0320FDD0 MOV X2, X25
	0x0320FDD4 MOV W3, W31
	0x0320FDD8 MOV W4, W31
	0x0320FDDC MOV X19, X0
	0x0320FDE0 BL 0x320D580
	0x0320FDE4 LDR X8, [X21]
	0x0320FDE8 LDR X8, [X8 + 0xB8]
	0x0320FDEC STR X19, [X8 + 0x10]
	0x0320FDF0 LDR X0, [X20]
	0x0320FDF4 BL 0x1C16F10
	0x0320FDF8 MOV X1, X24
	0x0320FDFC MOV X2, X27
	0x0320FE00 MOV W3, W31
	0x0320FE04 MOV W4, W31
	0x0320FE08 MOV X19, X0
	0x0320FE0C BL 0x320D580
	0x0320FE10 LDR X8, [X21]
	0x0320FE14 LDR X8, [X8 + 0xB8]
	0x0320FE18 STR X19, [X8 + 0x18]
	0x0320FE1C LDR X0, [X20]
	0x0320FE20 BL 0x1C16F10
	0x0320FE24 MOV X1, X26
	0x0320FE28 MOV X2, X28
	0x0320FE2C MOV W3, W31
	0x0320FE30 MOV W4, W31
	0x0320FE34 MOV X19, X0
	0x0320FE38 BL 0x320D580
	0x0320FE3C LDR X8, [X21]
	0x0320FE40 LDP X22, X21, [X31 + 0x50]
	0x0320FE44 LDP X24, X23, [X31 + 0x40]
	0x0320FE48 LDP X26, X25, [X31 + 0x30]
	0x0320FE4C LDR X8, [X8 + 0xB8]
	0x0320FE50 LDP X28, X27, [X31 + 0x20]
	0x0320FE54 LDP X29, X30, [X31 + 0x10]
	0x0320FE58 STR X19, [X8 + 0x20]
	0x0320FE5C LDP X20, X19, [X31 + 0x60]
	0x0320FE60 ADD X31, X31, 0x70
	0x0320FE64 RET
	0x0320FE68 STP X30, X21, [X31 - 0x20]!
	0x0320FE6C STP X20, X19, [X31 + 0x10]
	0x0320FE70 ADRP X21, 0x11CD000
	0x0320FE74 ADRP X20, 0xF12000
	0x0320FE78 LDRB W8, [X21 + 0x2B2]
	0x0320FE7C LDR X20, [X20 + 0xBC8]
	0x0320FE80 MOV W19, W0
	0x0320FE84 TBNZ X8, 0x0, 0x320FE9C
	0x0320FE88 ADRP X0, 0xF12000
	0x0320FE8C LDR X0, [X0 + 0xBC8]
	0x0320FE90 BL 0x1C16CF4
	0x0320FE94 MOVZ W8, 0x1
	0x0320FE98 STRB W8, [X21 + 0x2B2]
	0x0320FE9C LDR X0, [X20]
	0x0320FEA0 LDR W8, [X0 + 0xE0]
	0x0320FEA4 CBNZ W8, 0x320FEB0
	0x0320FEA8 BL 0x1C16DFC
	0x0320FEAC LDR X0, [X20]
	0x0320FEB0 LDR X8, [X0 + 0xB8]
	0x0320FEB4 LDR X0, [X8]
	0x0320FEB8 CBZ X0, 0x320FECC
	0x0320FEBC MOV W1, W19
	0x0320FEC0 LDP X20, X19, [X31 + 0x10]
	0x0320FEC4 LDP X30, X21, [X31], #0x20
	0x0320FEC8 B 0x320D6F0
	0x0320FECC BL 0x1C16F20
	0x0320FED0 STP X30, X21, [X31 - 0x20]!
	0x0320FED4 STP X20, X19, [X31 + 0x10]
	0x0320FED8 ADRP X21, 0x11CD000
	0x0320FEDC ADRP X20, 0xF12000
	0x0320FEE0 LDRB W8, [X21 + 0x2B3]
	0x0320FEE4 LDR X20, [X20 + 0xBC8]
	0x0320FEE8 MOV W19, W0
	0x0320FEEC TBNZ X8, 0x0, 0x320FF04
	0x0320FEF0 ADRP X0, 0xF12000
	0x0320FEF4 LDR X0, [X0 + 0xBC8]
	0x0320FEF8 BL 0x1C16CF4
	0x0320FEFC MOVZ W8, 0x1
	0x0320FF00 STRB W8, [X21 + 0x2B3]
	0x0320FF04 LDR X0, [X20]
	0x0320FF08 LDR W8, [X0 + 0xE0]
	0x0320FF0C CBNZ W8, 0x320FF18
	0x0320FF10 BL 0x1C16DFC
	0x0320FF14 LDR X0, [X20]
	0x0320FF18 LDR X8, [X0 + 0xB8]
	0x0320FF1C LDR X0, [X8 + 0x8]
	0x0320FF20 CBZ X0, 0x320FF34
	0x0320FF24 MOV W1, W19
	0x0320FF28 LDP X20, X19, [X31 + 0x10]
	0x0320FF2C LDP X30, X21, [X31], #0x20
	0x0320FF30 B 0x320D6F0
	0x0320FF34 BL 0x1C16F20
	0x0320FF38 STR X30, [X31 - 0x40]!
	0x0320FF3C STP X24, X23, [X31 + 0x10]
	0x0320FF40 STP X22, X21, [X31 + 0x20]
	0x0320FF44 STP X20, X19, [X31 + 0x30]
	0x0320FF48 ADRP X21, 0x11CD000
	0x0320FF4C LDRB W8, [X21 + 0x2B4]
	0x0320FF50 MOV X20, X1
	0x0320FF54 MOV X19, X0
	0x0320FF58 TBNZ X8, 0x0, 0x320FF88
	0x0320FF5C ADRP X0, 0xEE4000
	0x0320FF60 LDR X0, [X0 + 0x618]
	0x0320FF64 BL 0x1C16CF4
	0x0320FF68 ADRP X0, 0xF12000
	0x0320FF6C LDR X0, [X0 + 0xA10]
	0x0320FF70 BL 0x1C16CF4
	0x0320FF74 ADRP X0, 0xF12000
	0x0320FF78 LDR X0, [X0 + 0xBD8]
	0x0320FF7C BL 0x1C16CF4
	0x0320FF80 MOVZ W8, 0x1
	0x0320FF84 STRB W8, [X21 + 0x2B4]
	0x0320FF88 MOV X0, X19
	0x0320FF8C MOV X1, X31
	0x0320FF90 BL 0x33BDD8C
	0x0320FF94 CBZ X20, 0x3210260
	0x0320FF98 LDR X8, [X20]
	0x0320FF9C ADRP X23, 0xF12000
	0x0320FFA0 ADRP X24, 0xEE4000
	0x0320FFA4 MOV X0, X20
	0x0320FFA8 LDP X9, X1, [X8 + 0x198]
	0x0320FFAC LDR X23, [X23 + 0xA10]
	0x0320FFB0 LDR X24, [X24 + 0x618]
	0x0320FFB4 BLR X9
	0x0320FFB8 STR W0, [X19 + 0x58]
	0x0320FFBC LDR X8, [X20]
	0x0320FFC0 MOV X0, X20
	0x0320FFC4 LDP X9, X1, [X8 + 0x1D8]
	0x0320FFC8 BLR X9
	0x0320FFCC ADD X2, X19, 0x18
	0x0320FFD0 ADD X3, X19, 0x38
	0x0320FFD4 ADD X4, X19, 0x40
	0x0320FFD8 ADD X5, X19, 0x50
	0x0320FFDC ADD X6, X19, 0x48
	0x0320FFE0 MOV X1, X20
	0x0320FFE4 STR X0, [X19 + 0x10]
	0x0320FFE8 BL 0x3210264
	0x0320FFEC MOV X21, X20
	0x0320FFF0 LDR X8, [X21]
	0x0320FFF4 MOV X0, X21
	0x0320FFF8 LDP X9, X1, [X8 + 0x198]
	0x0320FFFC BLR X9
	0x03210000 CMP W0, 0x7F
	0x03210004 B.EQ 0x3210058
	0x03210008 LDR X8, [X21]
	0x0321000C MOV X0, X21
	0x03210010 LDP X9, X1, [X8 + 0x198]
	0x03210014 BLR X9
	0x03210018 LDR X8, [X23]
	0x0321001C MOV W22, W0
	0x03210020 LDR W9, [X8 + 0xE0]
	0x03210024 CBNZ W9, 0x3210030
	0x03210028 MOV X0, X8
	0x0321002C BL 0x1C16DFC
	0x03210030 MOV W0, W22
	0x03210034 BL 0x320D924
	0x03210038 CBNZ X0, 0x321007C
	0x0321003C LDR X8, [X21]
	0x03210040 MOV X0, X21
	0x03210044 LDP X9, X1, [X8 + 0x1C8]
	0x03210048 BLR X9
	0x0321004C MOV X21, X0
	0x03210050 CBNZ X0, 0x320FFF0
	0x03210054 B 0x3210260
	0x03210058 LDR X0, [X23]
	0x0321005C LDR W8, [X0 + 0xE0]
	0x03210060 CBNZ W8, 0x3210068
	0x03210064 BL 0x1C16DFC
	0x03210068 MOVZ W0, 0x7F
	0x0321006C BL 0x320D924
	0x03210070 MOV X22, X0
	0x03210074 CBNZ X0, 0x3210080
	0x03210078 B 0x3210260
	0x0321007C MOV X22, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x11CE000
	014 Move X22, 0xF13000
	015 Move X19, 0xEEB000
	016 Move X20, 0xF13000
	017 Move W8, [X21+684]
	018 Move X22, [X22+2576]
	019 Move X19, [X19+3264]
	020 Move X20, [X20+2776]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0xEEE000
	026 Move X0, [X0+2264]
	027 Call 0x1C17CF4
	028 Move X0, 0xF13000
	029 Move X0, [X0+2576]
	030 Call 0x1C17CF4
	031 Move X0, 0xEEB000
	032 Move X0, [X0+3264]
	033 Call 0x1C17CF4
	034 Move X0, 0xF13000
	035 Move X0, [X0+2784]
	036 Call 0x1C17CF4
	037 Move X0, 0xF13000
	038 Move X0, [X0+2792]
	039 Call 0x1C17CF4
	040 Move X0, 0xF13000
	041 Move X0, [X0+2776]
	042 Call 0x1C17CF4
	043 Move X0, 0xF13000
	044 Move X0, [X0+2800]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+684], W8
	048 Move X8, [X22]
	049 Move W9, 3
	050 Move X8, [X8+184]
	051 Move [X8], W9
	052 Move X0, [X19]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X19, X0
	056 Call Object..ctor, X0
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move [X8+136], X19
	060 Move X0, [X20]
	061 Call MSCompatUnicodeTable.GetResource, X0
	062 Move X1, X31
	063 Move X2, X31
	064 Move X19, X0
	065 Call IntPtr.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {274}
	070 Move X20, 0xF13000
	071 Move X20, [X20+2800]
	072 Move X0, X19
	073 Move X1, X31
	074 Call IntPtr.op_Explicit, X0
	075 Move X8, [X20]
	076 Move X20, X0
	077 Move X0, X8
	078 Call MSCompatUnicodeTable.GetResource, X0
	079 Move X1, X31
	080 Move X2, X31
	081 Move X19, X0
	082 Call IntPtr.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {274}
	087 Move X0, X19
	088 Move X1, X31
	089 Call IntPtr.op_Explicit, X0
	090 Compare X20, 0
	091 JumpIfEqual {274}
	092 Move X19, X0
	093 Compare X0, 0
	094 JumpIfEqual {274}
	095 Move W8, [X20]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W8, [X19]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X22]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Add X10, X20, 5
	102 Move X8, [X8+184]
	103 Add W11, W9, 5
	104 Add W12, W9, 6
	105 Add W13, W9, 7
	106 Move [X8+8], X10
	107 Move W11, [X20]
	108 Move W12, [X20]
	109 Add W14, W9, 8
	110 Move W13, [X20]
	111 Move W14, [X20]
	112 NotImplemented "Instruction BFM not yet implemented."
	113 Add W9, W9, 9
	114 NotImplemented "Instruction BFM not yet implemented."
	115 NotImplemented "Instruction BFM not yet implemented."
	116 Add X10, X9, X20
	117 Add W9, W11, W9
	118 Move [X8+16], X10
	119 Add W11, W9, 1
	120 Move W10, [X20]
	121 Add W12, W9, 2
	122 Move W11, [X20]
	123 Add W13, W9, 3
	124 Move W12, [X20]
	125 Move W13, [X20]
	126 NotImplemented "Instruction BFM not yet implemented."
	127 Add W9, W9, 4
	128 NotImplemented "Instruction BFM not yet implemented."
	129 NotImplemented "Instruction BFM not yet implemented."
	130 Add X14, X9, X20
	131 Add W9, W10, W9
	132 Move [X8+24], X14
	133 Add W11, W9, 1
	134 Move W10, [X20]
	135 Move W11, [X20]
	136 Move X12, 0xF13000
	137 Add W13, W9, 2
	138 Move X12, [X12+2784]
	139 Move W13, [X20]
	140 NotImplemented "Instruction BFM not yet implemented."
	141 Add W11, W9, 3
	142 Move W11, [X20]
	143 NotImplemented "Instruction BFM not yet implemented."
	144 Add W13, W9, 4
	145 Add X13, X13, X20
	146 NotImplemented "Instruction BFM not yet implemented."
	147 Add W9, W9, W10
	148 Add W9, W9, 8
	149 Add X9, X9, X20
	150 Move [X8+32], X13
	151 Move [X8+40], X9
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X0, [X12]
	154 Move W1, W20
	155 Call 0x1C17D6C
	156 Move X8, [X22]
	157 Move X8, [X8+184]
	158 Move [X8+128], X0
	159 Compare W20, 0
	160 JumpIfEqual {232}
	161 Move X24, X31
	162 Move W23, 8
	163 Move W25, 1
	164 Subtract W8, W23, 3
	165 Subtract W9, W23, 2
	166 Move W27, [X19]
	167 Move W8, [X19]
	168 Add W9, W23, 5
	169 Move W29, [X19]
	170 Add W12, W23, 1
	171 NotImplemented "Instruction BFM not yet implemented."
	172 Add W8, W23, 6
	173 Move W8, [X19]
	174 Add W13, W23, 2
	175 Move W28, [X19]
	176 Move W12, [X19]
	177 NotImplemented "Instruction BFM not yet implemented."
	178 Add W8, W23, 7
	179 Move W8, [X19]
	180 Subtract W10, W23, 1
	181 Add W14, W23, 3
	182 Move W10, [X19]
	183 NotImplemented "Instruction BFM not yet implemented."
	184 Move X8, 0xF13000
	185 Move W11, [X19]
	186 NotImplemented "Instruction BFM not yet implemented."
	187 Move W12, [X19]
	188 Move X8, [X8+2792]
	189 Add W9, W23, 4
	190 NotImplemented "Instruction BFM not yet implemented."
	191 Add W10, W23, 8
	192 NotImplemented "Instruction BFM not yet implemented."
	193 Add W12, W23, 9
	194 Move X0, [X8]
	195 Move W8, [X19]
	196 Move W9, [X19]
	197 Move W26, [X19]
	198 NotImplemented "Instruction BFM not yet implemented."
	199 NotImplemented "Instruction BFM not yet implemented."
	200 NotImplemented "Instruction BFM not yet implemented."
	201 Call 0x1C17F10
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X1, X31
	204 Move X21, X0
	205 NotImplemented "Instruction CSET not yet implemented."
	206 Call Object..ctor, X0
	207 Move [X21+16], W27
	208 Move [X21+20], W28
	209 Move [X21+24], W29
	210 Move [X21+28], W26
	211 Move X8, [X22]
	212 Move X8, [X8+184]
	213 Move X27, [X8+128]
	214 Compare X27, 0
	215 JumpIfEqual {291}
	216 Move X8, [X27]
	217 Move X0, X21
	218 Move X1, [X8+64]
	219 Call 0x1C17E00
	220 Compare X0, 0
	221 JumpIfEqual {288}
	222 Move W8, [X27+24]
	223 Subtract W9, W25, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X27, X24
	226 Move X24, W25
	227 Add W23, W23, 13
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Add W25, W25, 1
	230 Move [X8+32], X21
	231 Subtract W21, W23, 3
	232 Move W21, 5
	233 Add W8, W21, 2
	234 Add W9, W21, 3
	235 Add W10, W21, 4
	236 Move W20, [X19]
	237 Move W8, [X19]
	238 Move W9, [X19]
	239 Add W10, W21, 5
	240 Move X11, 0xEEE000
	241 Move W10, [X19]
	242 Move X11, [X11+2264]
	243 NotImplemented "Instruction BFM not yet implemented."
	244 NotImplemented "Instruction BFM not yet implemented."
	245 NotImplemented "Instruction BFM not yet implemented."
	246 Move X0, [X11]
	247 Move W1, W20
	248 Call 0x1C17D6C
	249 Move X8, [X22]
	250 Move X8, [X8+184]
	251 Move [X8+120], X0
	252 Compare W20, 0
	253 JumpIfEqual {272}
	254 Compare X0, 0
	255 JumpIfEqual {291}
	256 Move W9, [X0+24]
	257 Move X11, X31
	258 Add W10, W21, 6
	259 Move W12, 1
	260 Subtract W13, W12, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add W14, W10, 1
	263 Move W13, [X19]
	264 Move W14, [X19]
	265 Add X15, X0, X11
	266 Move X11, W12
	267 Add W10, W10, 2
	268 NotImplemented "Instruction CMP not yet implemented."
	269 NotImplemented "Instruction BFM not yet implemented."
	270 Add W12, W12, 1
	271 NotImplemented "Instruction STRH not yet implemented."
	272 Move W9, 1
	273 Move [X8+144], W9
	274 Move X20, [X31+80]
	275 Move X19, [X31+88]
	276 Move X22, [X31+64]
	277 Move X21, [X31+72]
	278 Move X24, [X31+48]
	279 Move X23, [X31+56]
	280 Move X26, [X31+32]
	281 Move X25, [X31+40]
	282 Move X28, [X31+16]
	283 Move X27, [X31+24]
	284 Move X29, [X31+96]
	285 Move X30, [X31+104]
	286 Return 
	287 Call 0x1C17F28
	288 Call 0x1C17F44
	289 Move X1, X31
	290 Call 0x1C17DEC
	291 Call 0x1C17F20

Method: System.Void FillCJK(System.String culture, ref Mono.Globalization.Unicode.CodePointIndexer cjkIndexer, ref System.Byte* catTable, ref System.Byte* lv1Table, ref Mono.Globalization.Unicode.CodePointIndexer lv2Indexer, ref System.Byte* lv2Table)

Disassembly:
	0x03210080 LDRB W8, [X22 + 0x1C]
	0x03210084 ADD X21, X19, 0x28
	0x03210088 STRB W8, [X19 + 0x5C]
	0x0321008C LDR X0, [X23]
	0x03210090 ADD X23, X19, 0x20
	0x03210094 LDR W8, [X0 + 0xE0]
	0x03210098 CBNZ W8, 0x32100A0
	0x0321009C BL 0x1C16DFC
	0x032100A0 MOV X0, X20
	0x032100A4 MOV X1, X22
	0x032100A8 MOV X2, X23
	0x032100AC MOV X3, X21
	0x032100B0 BL 0x320DA28
	0x032100B4 LDR X0, [X24]
	0x032100B8 MOVZ W1, 0x60
	0x032100BC BL 0x1C16D6C
	0x032100C0 LDR X8, [X19 + 0x20]
	0x032100C4 STR X0, [X19 + 0x30]
	0x032100C8 CBZ X8, 0x3210260
	0x032100CC LDR W11, [X8 + 0x18]
	0x032100D0 CMP W11, 0x1
	0x032100D4 B.LT 0x321016C
	0x032100D8 MOV W9, W31
	0x032100DC MOVZ W10, 0x1
	0x032100E0 CMP W9, W11
	0x032100E4 B.CS 0x321025C
	0x032100E8 ADD X11, X8, W9, 0x3, SXTW
	0x032100EC LDR X11, [X11 + 0x20]
	0x032100F0 CBZ X11, 0x3210260
	0x032100F4 LDR X11, [X11 + 0x18]
	0x032100F8 CBZ X11, 0x3210260
	0x032100FC LDR W14, [X11 + 0x18]
	0x03210100 CMP W14, 0x2
	0x03210104 B.LT 0x321015C
	0x03210108 MOV X12, X31
	0x0321010C ADD X13, X11, 0x20
	0x03210110 CMP W12, W14
	0x03210114 B.CS 0x321025C
	0x03210118 LDR X14, [X19 + 0x30]
	0x0321011C CBZ X14, 0x3210260
	0x03210120 LDRH W15, [X13, X12, LSL #1]
	0x03210124 LDR W17, [X14 + 0x18]
	0x03210128 UBFM X16, X15, 0x3, 0x3F
	0x0321012C CMP W16, W17
	0x03210130 B.CS 0x321025C
	0x03210134 ADD X14, X14, X16
	0x03210138 LDRB W16, [X14 + 0x20]
	0x0321013C ADD X12, X12, 0x1
	0x03210140 AND X15, X15, 0x7
	0x03210144 LSLV W15, W10, W15
	0x03210148 ORR W15, W16, W15, 0x0
	0x0321014C STRB W15, [X14 + 0x20]
	0x03210150 LDR W14, [X11 + 0x18]
	0x03210154 CMP W12, W14
	0x03210158 B.LT 0x3210110
	0x0321015C LDR W11, [X8 + 0x18]
	0x03210160 ADD W9, W9, 0x1
	0x03210164 CMP W9, W11
	0x03210168 B.LT 0x32100E0
	0x0321016C LDR W8, [X19 + 0x58]
	0x03210170 CMP W8, 0x7F
	0x03210174 B.EQ 0x3210248
	0x03210178 ADRP X20, 0xF11000
	0x0321017C LDR X20, [X20 + 0xBD8]
	0x03210180 LDR X0, [X20]
	0x03210184 LDR W8, [X0 + 0xE0]
	0x03210188 CBNZ W8, 0x3210194
	0x0321018C BL 0x1C16DFC
	0x03210190 LDR X0, [X20]
	0x03210194 LDR X8, [X0 + 0xB8]
	0x03210198 LDR X8, [X8]
	0x0321019C CBZ X8, 0x3210260
	0x032101A0 LDR X8, [X8 + 0x20]
	0x032101A4 CBZ X8, 0x3210260
	0x032101A8 LDR W11, [X8 + 0x18]
	0x032101AC CMP W11, 0x1
	0x032101B0 B.LT 0x3210248
	0x032101B4 MOV W9, W31
	0x032101B8 MOVZ W10, 0x1
	0x032101BC CMP W9, W11
	0x032101C0 B.CS 0x321025C
	0x032101C4 ADD X11, X8, W9, 0x3, SXTW
	0x032101C8 LDR X11, [X11 + 0x20]
	0x032101CC CBZ X11, 0x3210260
	0x032101D0 LDR X11, [X11 + 0x18]
	0x032101D4 CBZ X11, 0x3210260
	0x032101D8 LDR W14, [X11 + 0x18]
	0x032101DC CMP W14, 0x2

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x11CD000
	011 Move X26, 0xF12000
	012 Move W8, [X19+685]
	013 Move X26, [X26+2576]
	014 Move X20, X5
	015 Move X21, X4
	016 Move X22, X3
	017 Move X23, X2
	018 Move X24, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xF12000
	025 Move X0, [X0+2576]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+685], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X26]
	035 Move X8, [X0+184]
	036 Move X19, [X8+136]
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X0, [X26]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X25
	048 Move X2, X23
	049 Move X3, X22
	050 Move X5, X20
	051 Call MSCompatUnicodeTable.FillCJKCore, X0, X1, X2, X3, X4, X5
	052 Move X0, X25
	053 Move X1, X24
	054 Move X2, X23
	055 Move X3, X22
	056 Move X4, X21
	057 Move X5, X20
	058 Call MSCompatUnicodeTable.SetCJKReferences, X0, X1, X2, X3, X4, X5
	059 Move X20, X31
	060 Move W8, [X31+12]
	061 Compare W8, 0
	062 JumpIfEqual {66}
	063 Move X0, X19
	064 Move X1, X31
	065 Call Monitor.Exit, X0
	066 Compare X20, 0
	067 JumpIfNotEqual {78}
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X24, [X31+32]
	073 Move X23, [X31+40]
	074 Move X26, [X31+16]
	075 Move X25, [X31+24]
	076 Move X30, [X31+80]
	077 Return 
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X21, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X21
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X20, X31
	087 Move X21, X0
	088 Move W8, [X31+12]
	089 Compare W8, 0
	090 JumpIfEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Monitor.Exit, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Void FillCJKCore(System.String culture, ref Mono.Globalization.Unicode.CodePointIndexer cjkIndexer, ref System.Byte* catTable, ref System.Byte* lv1Table, ref Mono.Globalization.Unicode.CodePointIndexer cjkLv2Indexer, ref System.Byte* lv2Table)

Disassembly:
	0x032101E0 B.LT 0x3210238
	0x032101E4 MOV X12, X31
	0x032101E8 ADD X13, X11, 0x20
	0x032101EC CMP W12, W14
	0x032101F0 B.CS 0x321025C
	0x032101F4 LDR X14, [X19 + 0x30]
	0x032101F8 CBZ X14, 0x3210260
	0x032101FC LDRH W15, [X13, X12, LSL #1]
	0x03210200 LDR W17, [X14 + 0x18]
	0x03210204 UBFM X16, X15, 0x3, 0x3F
	0x03210208 CMP W16, W17
	0x0321020C B.CS 0x321025C
	0x03210210 ADD X14, X14, X16
	0x03210214 LDRB W16, [X14 + 0x20]
	0x03210218 ADD X12, X12, 0x1
	0x0321021C AND X15, X15, 0x7
	0x03210220 LSLV W15, W10, W15
	0x03210224 ORR W15, W16, W15, 0x0
	0x03210228 STRB W15, [X14 + 0x20]
	0x0321022C LDR W14, [X11 + 0x18]
	0x03210230 CMP W12, W14
	0x03210234 B.LT 0x32101EC
	0x03210238 LDR W11, [X8 + 0x18]
	0x0321023C ADD W9, W9, 0x1
	0x03210240 CMP W9, W11
	0x03210244 B.LT 0x32101BC
	0x03210248 LDP X20, X19, [X31 + 0x30]
	0x0321024C LDP X22, X21, [X31 + 0x20]
	0x03210250 LDP X24, X23, [X31 + 0x10]
	0x03210254 LDR X30, [X31], #0x40
	0x03210258 RET
	0x0321025C BL 0x1C16F28
	0x03210260 BL 0x1C16F20
	0x03210264 STR X30, [X31 - 0x50]!
	0x03210268 STP X26, X25, [X31 + 0x10]
	0x0321026C STP X24, X23, [X31 + 0x20]
	0x03210270 STP X22, X21, [X31 + 0x30]
	0x03210274 STP X20, X19, [X31 + 0x40]
	0x03210278 ADRP X25, 0x11CC000
	0x0321027C ADRP X26, 0xF11000
	0x03210280 LDRB W8, [X25 + 0x2B5]
	0x03210284 LDR X26, [X26 + 0xBD8]
	0x03210288 MOV X19, X6
	0x0321028C MOV X20, X5
	0x03210290 MOV X21, X4
	0x03210294 MOV X22, X3
	0x03210298 MOV X23, X2
	0x0321029C MOV X24, X1
	0x032102A0 TBNZ X8, 0x0, 0x32102C4
	0x032102A4 ADRP X0, 0xF11000
	0x032102A8 LDR X0, [X0 + 0xA10]
	0x032102AC BL 0x1C16CF4
	0x032102B0 ADRP X0, 0xF11000
	0x032102B4 LDR X0, [X0 + 0xBD8]
	0x032102B8 BL 0x1C16CF4
	0x032102BC MOVZ W8, 0x1
	0x032102C0 STRB W8, [X25 + 0x2B5]
	0x032102C4 LDR X0, [X26]
	0x032102C8 LDR W8, [X0 + 0xE0]
	0x032102CC CBNZ W8, 0x32102D4
	0x032102D0 BL 0x1C16DFC
	0x032102D4 MOV X0, X24
	0x032102D8 BL 0x3210340
	0x032102DC CBZ X0, 0x321033C
	0x032102E0 LDR X8, [X0]
	0x032102E4 ADRP X24, 0xF11000
	0x032102E8 LDP X9, X1, [X8 + 0x1A8]
	0x032102EC LDR X24, [X24 + 0xA10]
	0x032102F0 BLR X9
	0x032102F4 LDR X8, [X24]
	0x032102F8 MOV X24, X0
	0x032102FC LDR W9, [X8 + 0xE0]
	0x03210300 CBNZ W9, 0x321030C
	0x03210304 MOV X0, X8
	0x03210308 BL 0x1C16DFC
	0x0321030C MOV X0, X24
	0x03210310 MOV X1, X23
	0x03210314 MOV X2, X22
	0x03210318 MOV X3, X21
	0x0321031C MOV X4, X20
	0x03210320 MOV X5, X19
	0x03210324 LDP X20, X19, [X31 + 0x40]
	0x03210328 LDP X22, X21, [X31 + 0x30]
	0x0321032C LDP X24, X23, [X31 + 0x20]
	0x03210330 LDP X26, X25, [X31 + 0x10]
	0x03210334 LDR X30, [X31], #0x50
	0x03210338 B 0x320F080
	0x0321033C BL 0x1C16F20
	0x03210340 STP X30, X19, [X31 - 0x10]!
	0x03210344 CBZ X0, 0x32103A0
	0x03210348 MOV X19, X0
	0x0321034C LDR X8, [X19]
	0x03210350 MOV X0, X19
	0x03210354 LDP X9, X1, [X8 + 0x1C8]
	0x03210358 BLR X9
	0x0321035C CBZ X0, 0x32103A4
	0x03210360 LDR X8, [X19]
	0x03210364 MOV X0, X19
	0x03210368 LDP X9, X1, [X8 + 0x1C8]
	0x0321036C BLR X9
	0x03210370 CBZ X0, 0x32103A0
	0x03210374 LDR X8, [X0]
	0x03210378 LDP X9, X1, [X8 + 0x198]
	0x0321037C BLR X9
	0x03210380 CMP W0, 0x7F
	0x03210384 B.EQ 0x32103A4
	0x03210388 LDR X8, [X19]
	0x0321038C MOV X0, X19
	0x03210390 LDP X9, X1, [X8 + 0x1C8]
	0x03210394 BLR X9
	0x03210398 MOV X19, X0
	0x0321039C CBNZ X0, 0x321034C
	0x032103A0 BL 0x1C16F20
	0x032103A4 MOV X0, X19
	0x032103A8 LDP X30, X19, [X31], #0x10
	0x032103AC RET
	0x032103B0 STP X30, X21, [X31 - 0x20]!
	0x032103B4 STP X20, X19, [X31 + 0x10]
	0x032103B8 ADRP X21, 0x11CC000
	0x032103BC LDRB W8, [X21 + 0x2B6]
	0x032103C0 MOV W19, W1
	0x032103C4 MOV X20, X0
	0x032103C8 TBNZ X8, 0x0, 0x32103E0
	0x032103CC ADRP X0, 0xF11000
	0x032103D0 LDR X0, [X0 + 0xA10]
	0x032103D4 BL 0x1C16CF4
	0x032103D8 MOVZ W8, 0x1
	0x032103DC STRB W8, [X21 + 0x2B6]
	0x032103E0 ADRP X21, 0xF11000
	0x032103E4 LDR X21, [X21 + 0xA10]
	0x032103E8 CMP W19, 0x3000
	0x032103EC B.LT 0x3210420
	0x032103F0 LDR X8, [X20 + 0x38]
	0x032103F4 CBZ X8, 0x3210420
	0x032103F8 LDR X0, [X20 + 0x18]
	0x032103FC CBZ X0, 0x3210440
	0x03210400 MOV W1, W19
	0x03210404 BL 0x320D6F0
	0x03210408 TBNZ X0, 0x1F, 0x3210420
	0x0321040C LDR X8, [X20 + 0x38]
	0x03210410 LDP X20, X19, [X31 + 0x10]
	0x03210414 LDRB W0, [X8, W0, UXTW]
	0x03210418 LDP X30, X21, [X31], #0x20
	0x0321041C RET
	0x03210420 LDR X0, [X21]
	0x03210424 LDR W8, [X0 + 0xE0]
	0x03210428 CBNZ W8, 0x3210430
	0x0321042C BL 0x1C16DFC
	0x03210430 MOV W0, W19
	0x03210434 LDP X20, X19, [X31 + 0x10]
	0x03210438 LDP X30, X21, [X31], #0x20
	0x0321043C B 0x320E3D8
	0x03210440 BL 0x1C16F20
	0x03210444 STP X30, X21, [X31 - 0x20]!
	0x03210448 STP X20, X19, [X31 + 0x10]
	0x0321044C ADRP X21, 0x11CC000
	0x03210450 LDRB W8, [X21 + 0x2B7]
	0x03210454 MOV W19, W1
	0x03210458 MOV X20, X0
	0x0321045C TBNZ X8, 0x0, 0x3210474
	0x03210460 ADRP X0, 0xF11000
	0x03210464 LDR X0, [X0 + 0xA10]
	0x03210468 BL 0x1C16CF4
	0x0321046C MOVZ W8, 0x1
	0x03210470 STRB W8, [X21 + 0x2B7]
	0x03210474 ADRP X21, 0xF11000
	0x03210478 LDR X21, [X21 + 0xA10]
	0x0321047C CMP W19, 0x3000
	0x03210480 B.LT 0x32104B4
	0x03210484 LDR X8, [X20 + 0x40]
	0x03210488 CBZ X8, 0x32104B4
	0x0321048C LDR X0, [X20 + 0x18]
	0x03210490 CBZ X0, 0x32104D4
	0x03210494 MOV W1, W19
	0x03210498 BL 0x320D6F0
	0x0321049C TBNZ X0, 0x1F, 0x32104B4
	0x032104A0 LDR X8, [X20 + 0x40]
	0x032104A4 LDP X20, X19, [X31 + 0x10]
	0x032104A8 LDRB W0, [X8, W0, UXTW]
	0x032104AC LDP X30, X21, [X31], #0x20
	0x032104B0 RET
	0x032104B4 LDR X0, [X21]
	0x032104B8 LDR W8, [X0 + 0xE0]
	0x032104BC CBNZ W8, 0x32104C4
	0x032104C0 BL 0x1C16DFC
	0x032104C4 MOV W0, W19
	0x032104C8 LDP X20, X19, [X31 + 0x10]
	0x032104CC LDP X30, X21, [X31], #0x20
	0x032104D0 B 0x320E47C
	0x032104D4 BL 0x1C16F20
	0x032104D8 STR X30, [X31 - 0x30]!
	0x032104DC STP X22, X21, [X31 + 0x10]
	0x032104E0 STP X20, X19, [X31 + 0x20]
	0x032104E4 ADRP X22, 0x11CC000
	0x032104E8 LDRB W8, [X22 + 0x2B8]
	0x032104EC MOV W21, W2
	0x032104F0 MOV W19, W1
	0x032104F4 MOV X20, X0
	0x032104F8 TBNZ X8, 0x0, 0x3210510
	0x032104FC ADRP X0, 0xF11000
	0x03210500 LDR X0, [X0 + 0xA10]
	0x03210504 BL 0x1C16CF4
	0x03210508 MOVZ W8, 0x1
	0x0321050C STRB W8, [X22 + 0x2B8]
	0x03210510 CMP W21, 0x3
	0x03210514 B.EQ 0x3210528
	0x03210518 CMP W21, 0x4
	0x0321051C B.NE 0x321053C
	0x03210520 MOVZ W0, 0x5
	0x03210524 B 0x321052C
	0x03210528 MOV W0, W31
	0x0321052C LDP X20, X19, [X31 + 0x20]
	0x03210530 LDP X22, X21, [X31 + 0x10]
	0x03210534 LDR X30, [X31], #0x30
	0x03210538 RET
	0x0321053C CMP W19, 0x3000
	0x03210540 B.LT 0x32105D4
	0x03210544 LDR X8, [X20 + 0x48]
	0x03210548 CBZ X8, 0x32105D4
	0x0321054C LDR X0, [X20 + 0x50]
	0x03210550 CBZ X0, 0x3210608
	0x03210554 MOV W1, W19
	0x03210558 BL 0x320D6F0
	0x0321055C TBNZ X0, 0x1F, 0x321056C
	0x03210560 LDR X8, [X20 + 0x48]
	0x03210564 LDRB W0, [X8, W0, UXTW]
	0x03210568 CBNZ W0, 0x321052C
	0x0321056C ADRP X8, 0xF11000
	0x03210570 LDR X8, [X8 + 0xA10]
	0x03210574 LDR X0, [X8]
	0x03210578 LDR W8, [X0 + 0xE0]
	0x0321057C CBNZ W8, 0x3210584
	0x03210580 BL 0x1C16DFC
	0x03210584 MOV W0, W19
	0x03210588 BL 0x320E520
	0x0321058C LDR X8, [X20 + 0x28]
	0x03210590 CBZ X8, 0x3210608
	0x03210594 LDR X9, [X8 + 0x18]
	0x03210598 CBZ X9, 0x321052C
	0x0321059C SUBS W9, W9, 0x1
	0x032105A0 B.LT 0x321052C
	0x032105A4 MOV W10, W31
	0x032105A8 ADD X11, X8, W10, 0x3, SXTW
	0x032105AC LDR X11, [X11 + 0x20]
	0x032105B0 CBZ X11, 0x3210608
	0x032105B4 LDRB W12, [X11 + 0x10]
	0x032105B8 CMP W12, W0, UXTB
	0x032105BC B.EQ 0x3210600
	0x032105C0 B.HI 0x321052C
	0x032105C4 CMP W9, W10
	0x032105C8 ADD W10, W10, 0x1
	0x032105CC B.NE 0x32105A8
	0x032105D0 B 0x321052C
	0x032105D4 ADRP X8, 0xF11000
	0x032105D8 LDR X8, [X8 + 0xA10]
	0x032105DC LDR X0, [X8]
	0x032105E0 LDR W8, [X0 + 0xE0]
	0x032105E4 CBNZ W8, 0x32105EC
	0x032105E8 BL 0x1C16DFC
	0x032105EC MOV W0, W19
	0x032105F0 LDP X20, X19, [X31 + 0x20]
	0x032105F4 LDP X22, X21, [X31 + 0x10]
	0x032105F8 LDR X30, [X31], #0x30
	0x032105FC B 0x320E520
	0x03210600 LDRB W0, [X11 + 0x11]
	0x03210604 B 0x321052C
	0x03210608 BL 0x1C16F20
	0x0321060C STP X30, X21, [X31 - 0x20]!
	0x03210610 STP X20, X19, [X31 + 0x10]
	0x03210614 ADRP X21, 0x11CC000
	0x03210618 LDRB W8, [X21 + 0x2B9]
	0x0321061C MOV W20, W1
	0x03210620 MOV W19, W0
	0x03210624 TBZ X8, 0x0, 0x3210658
	0x03210628 TBNZ X20, 0x4, 0x3210670
	0x0321062C ADRP X8, 0xF11000
	0x03210630 LDR X8, [X8 + 0xA10]
	0x03210634 LDR X0, [X8]
	0x03210638 LDR W8, [X0 + 0xE0]
	0x0321063C CBNZ W8, 0x3210644
	0x03210640 BL 0x1C16DFC
	0x03210644 ADD W8, W19, 0x9A
	0x03210648 AND W8, W8, 0xFFFF
	0x0321064C CMP W8, 0x38
	0x03210650 CSET W0, CC
	0x03210654 B 0x3210674
	0x03210658 ADRP X0, 0xF11000
	0x0321065C LDR X0, [X0 + 0xA10]
	0x03210660 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x11CD000
	011 Move X25, 0xF12000
	012 Move W8, [X23+686]
	013 Move X25, [X25+2576]
	014 Move X19, X5
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0xF12000
	023 Move X0, [X0+2576]
	024 Call 0x1C17CF4
	025 Move X0, 0xF12000
	026 Move X0, [X0+2736]
	027 Call 0x1C17CF4
	028 Move X0, 0xF12000
	029 Move X0, [X0+2808]
	030 Call 0x1C17CF4
	031 Move X0, 0xF12000
	032 Move X0, [X0+2744]
	033 Call 0x1C17CF4
	034 Move X0, 0xF12000
	035 Move X0, [X0+2816]
	036 Call 0x1C17CF4
	037 Move X0, 0xF12000
	038 Move X0, [X0+2752]
	039 Call 0x1C17CF4
	040 Move X0, 0xF12000
	041 Move X0, [X0+2824]
	042 Call 0x1C17CF4
	043 Move X0, 0xF12000
	044 Move X0, [X0+2720]
	045 Call 0x1C17CF4
	046 Move X0, 0xF12000
	047 Move X0, [X0+2832]
	048 Call 0x1C17CF4
	049 Move X0, 0xF12000
	050 Move X0, [X0+2840]
	051 Call 0x1C17CF4
	052 Move X0, 0xF12000
	053 Move X0, [X0+2848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+686], W8
	057 Move X0, [X25]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X23, 0x11CD000
	063 Move W8, [X23+756]
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0xF12000
	067 Move X0, [X0+2576]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X23+756], W8
	071 Move X0, [X25]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X25]
	077 Move X8, [X0+184]
	078 Move W8, [X8+144]
	079 Compare W8, 0
	080 JumpIfEqual {336}
	081 Move X26, 0xF12000
	082 Move X26, [X26+2720]
	083 Move X0, X22
	084 Move X2, X31
	085 Move X1, [X26]
	086 Call String.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {103}
	091 Move X8, 0xF12000
	092 Move X0, [X25]
	093 Move X8, [X8+2832]
	094 Move W9, [X0+224]
	095 Move X23, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X25]
	100 Move X8, [X0+184]
	101 Move X9, [X8+48]
	102 Add X8, X8, 80
	103 Move X8, 0xF12000
	104 Move X8, [X8+2752]
	105 Move X0, X22
	106 Move X2, X31
	107 Move X1, [X8]
	108 Call String.op_Equality, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {125}
	113 Move X8, 0xF12000
	114 Move X0, [X25]
	115 Move X8, [X8+2824]
	116 Move W9, [X0+224]
	117 Move X23, [X8]
	118 Compare W9, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X25]
	122 Move X8, [X0+184]
	123 Move X9, [X8+56]
	124 Add X8, X8, 88
	125 Move X8, 0xF12000
	126 Move X8, [X8+2736]
	127 Move X0, X22
	128 Move X2, X31
	129 Move X1, [X8]
	130 Call String.op_Equality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {147}
	135 Move X8, 0xF12000
	136 Move X0, [X25]
	137 Move X8, [X8+2808]
	138 Move W9, [X0+224]
	139 Move X23, [X8]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X25]
	144 Move X8, [X0+184]
	145 Move X9, [X8+64]
	146 Add X8, X8, 96
	147 Move X8, 0xF12000
	148 Move X8, [X8+2744]
	149 Move X0, X22
	150 Move X2, X31
	151 Move X1, [X8]
	152 Call String.op_Equality, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {336}
	157 Move X8, 0xF12000
	158 Move X0, [X25]
	159 Move X8, [X8+2848]
	160 Move W9, [X0+224]
	161 Move X23, [X8]
	162 Compare W9, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X25]
	166 Move X8, [X0+184]
	167 Move X9, [X8+72]
	168 Add X8, X8, 104
	169 Move [X21], X9
	170 Move X8, [X8]
	171 Move [X20], X8
	172 Compare X23, 0
	173 JumpIfEqual {336}
	174 Compare X8, 0
	175 JumpIfNotEqual {336}
	176 Move X8, 0xF12000
	177 Move X8, [X8+2840]
	178 Move X1, X23
	179 Move X2, X31
	180 Move X0, [X8]
	181 Call String.Format, X0, X1
	182 Move X8, [X25]
	183 Move X24, X0
	184 Move W9, [X8+224]
	185 Compare W9, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X8
	188 Call 0x1C17DFC
	189 Move X0, X24
	190 Call MSCompatUnicodeTable.GetResource, X0
	191 Move X1, X31
	192 Move X2, X31
	193 Move X24, X0
	194 Call IntPtr.op_Equality, X0, X1
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {336}
	199 Move X0, X24
	200 Move X1, X31
	201 Call IntPtr.op_Explicit, X0
	202 Move X8, [X25]
	203 Move X24, X0
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 Add X9, X24, 5
	211 Move [X21], X9
	212 Move X0, X22
	213 Add X8, X8, X9
	214 Move [X20], X8
	215 Move X1, [X26]
	216 Move X2, X31
	217 Call String.op_Equality, X0, X1
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {232}
	222 Move X0, [X25]
	223 Move X21, [X21]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {229}
	227 Call 0x1C17DFC
	228 Move X0, [X25]
	229 Move X8, [X0+184]
	230 Move [X8+48], X21
	231 Add X8, X8, 80
	232 Move X8, 0xF12000
	233 Move X8, [X8+2752]
	234 Move X0, X22
	235 Move X2, X31
	236 Move X1, [X8]
	237 Call String.op_Equality, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {252}
	242 Move X0, [X25]
	243 Move X21, [X21]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {249}
	247 Call 0x1C17DFC
	248 Move X0, [X25]
	249 Move X8, [X0+184]
	250 Move [X8+56], X21
	251 Add X8, X8, 88
	252 Move X8, 0xF12000
	253 Move X8, [X8+2736]
	254 Move X0, X22
	255 Move X2, X31
	256 Move X1, [X8]
	257 Call String.op_Equality, X0, X1
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {272}
	262 Move X0, [X25]
	263 Move X21, [X21]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {269}
	267 Call 0x1C17DFC
	268 Move X0, [X25]
	269 Move X8, [X0+184]
	270 Move [X8+64], X21
	271 Add X8, X8, 96
	272 Move X8, 0xF12000
	273 Move X8, [X8+2744]
	274 Move X0, X22
	275 Move X2, X31
	276 Move X1, [X8]
	277 Call String.op_Equality, X0, X1
	278 Move TEMP, X0
	279 And TEMP, TEMP, 1
	280 Compare TEMP, 1
	281 JumpIfNotEqual {294}
	282 Move X0, [X25]
	283 Move X21, [X21]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {289}
	287 Call 0x1C17DFC
	288 Move X0, [X25]
	289 Move X8, [X0+184]
	290 Move [X8+72], X21
	291 Add X8, X8, 104
	292 Move X9, [X20]
	293 Move [X8], X9
	294 Move X8, 0xF12000
	295 Move X8, [X8+2848]
	296 Move X0, X23
	297 Move X2, X31
	298 Move X1, [X8]
	299 Call String.op_Inequality, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {336}
	304 Move X0, [X25]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X8, 0xF12000
	310 Move X8, [X8+2816]
	311 Move X0, [X8]
	312 Call MSCompatUnicodeTable.GetResource, X0
	313 Move X1, X31
	314 Move X2, X31
	315 Move X20, X0
	316 Call IntPtr.op_Equality, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {336}
	321 Move X0, X20
	322 Move X1, X31
	323 Call IntPtr.op_Explicit, X0
	324 Move X8, [X25]
	325 Move X20, X0
	326 Move W9, [X8+224]
	327 Compare W9, 0
	328 JumpIfNotEqual {332}
	329 Move X0, X8
	330 Call 0x1C17DFC
	331 Move X8, [X25]
	332 Move X8, [X8+184]
	333 Add X9, X20, 5
	334 Move [X8+112], X9
	335 Move [X19], X9
	336 Move X20, [X31+64]
	337 Move X19, [X31+72]
	338 Move X22, [X31+48]
	339 Move X21, [X31+56]
	340 Move X24, [X31+32]
	341 Move X23, [X31+40]
	342 Move X26, [X31+16]
	343 Move X25, [X31+24]
	344 Move X30, [X31+80]
	345 Return 

