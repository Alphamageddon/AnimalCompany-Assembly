Type: UnityEngine.ProBuilder.Poly2Tri.Polygon

Method: System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.PolygonPoint> points)

Disassembly:
	0x038EEDB0 LDR X0, [X8]
	0x038EEDB4 BL 0x1C16F10
	0x038EEDB8 ADRP X8, 0x85F000
	0x038EEDBC LDR X8, [X8 + 0x758]
	0x038EEDC0 MOV W1, W21
	0x038EEDC4 MOV X22, X0
	0x038EEDC8 LDR X2, [X8]
	0x038EEDCC BL 0x301B830
	0x038EEDD0 STR X22, [X20 + 0x28]
	0x038EEDD4 LDR X0, [X20 + 0x10]
	0x038EEDD8 CBZ X0, 0x38EEE68
	0x038EEDDC ADRP X25, 0x85F000
	0x038EEDE0 ADRP X23, 0x85F000
	0x038EEDE4 ADRP X27, 0x85F000
	0x038EEDE8 ADRP X26, 0x85F000
	0x038EEDEC ADRP X24, 0x85F000
	0x038EEDF0 LDR X25, [X25 + 0x708]
	0x038EEDF4 LDR X23, [X23 + 0x680]
	0x038EEDF8 LDR X27, [X27 + 0x750]
	0x038EEDFC LDR X26, [X26 + 0x740]
	0x038EEE00 LDR X24, [X24 + 0x738]
	0x038EEE04 MOV W21, W31
	0x038EEE08 LDR W8, [X0 + 0x18]
	0x038EEE0C LDR X2, [X25]
	0x038EEE10 SUB W8, W8, 0x1
	0x038EEE14 CMP W21, W8
	0x038EEE18 B.GE 0x38EEE6C
	0x038EEE1C MOV W1, W21
	0x038EEE20 BL 0x301BCCC
	0x038EEE24 LDR X8, [X20 + 0x10]
	0x038EEE28 CBZ X8, 0x38EEE68
	0x038EEE2C LDR X2, [X25]
	0x038EEE30 ADD W21, W21, 0x1
	0x038EEE34 MOV X22, X0
	0x038EEE38 MOV X0, X8
	0x038EEE3C MOV W1, W21
	0x038EEE40 BL 0x301BCCC
	0x038EEE44 CBZ X19, 0x38EEE68
	0x038EEE48 LDR X8, [X19]
	0x038EEE4C MOV X2, X0
	0x038EEE50 MOV X0, X19
	0x038EEE54 MOV X1, X22
	0x038EEE58 LDP X9, X3, [X8 + 0x198]
	0x038EEE5C BLR X9
	0x038EEE60 LDR X0, [X20 + 0x10]
	0x038EEE64 CBNZ X0, 0x38EEE08
	0x038EEE68 BL 0x1C16F20
	0x038EEE6C MOV W1, W31
	0x038EEE70 BL 0x301BCCC
	0x038EEE74 LDR X8, [X20 + 0x10]
	0x038EEE78 CBZ X8, 0x38EEE68
	0x038EEE7C LDR W9, [X8 + 0x18]
	0x038EEE80 LDR X2, [X25]
	0x038EEE84 MOV X21, X0
	0x038EEE88 MOV X0, X8
	0x038EEE8C SUB W1, W9, 0x1
	0x038EEE90 BL 0x301BCCC
	0x038EEE94 CBZ X19, 0x38EEE68
	0x038EEE98 LDR X8, [X19]
	0x038EEE9C MOV X2, X0
	0x038EEEA0 MOV X0, X19
	0x038EEEA4 MOV X1, X21
	0x038EEEA8 LDP X9, X3, [X8 + 0x198]
	0x038EEEAC BLR X9
	0x038EEEB0 LDR X0, [X19 + 0x20]
	0x038EEEB4 CBZ X0, 0x38EEE68
	0x038EEEB8 LDR X1, [X20 + 0x10]
	0x038EEEBC LDR X2, [X23]
	0x038EEEC0 BL 0x301C194
	0x038EEEC4 LDR X0, [X20 + 0x20]
	0x038EEEC8 CBZ X0, 0x38EEFC8
	0x038EEECC LDR X1, [X27]
	0x038EEED0 ADD X8, X31, 0x8
	0x038EEED4 BL 0x301CB58
	0x038EEED8 LDUR V0, [X31 + 0x8]
	0x038EEEDC LDR X8, [X31 + 0x18]
	0x038EEEE0 STR V0, [X31 + 0x2]
	0x038EEEE4 STR X8, [X31 + 0x30]
	0x038EEEE8 LDR X1, [X26]
	0x038EEEEC ADD X0, X31, 0x20
	0x038EEEF0 BL 0x2BC4350
	0x038EEEF4 TBZ X0, 0x0, 0x38EEFBC
	0x038EEEF8 LDR X27, [X31 + 0x30]
	0x038EEEFC MOVZ W21, 0x1
	0x038EEF00 CBZ X27, 0x38EEFFC
	0x038EEF04 LDR X8, [X27 + 0x10]
	0x038EEF08 CBZ X8, 0x38EF000
	0x038EEF0C LDR W9, [X8 + 0x18]
	0x038EEF10 LDR X2, [X25]
	0x038EEF14 SUB W1, W21, 0x1
	0x038EEF18 SUB W9, W9, 0x1
	0x038EEF1C CMP W1, W9
	0x038EEF20 B.GE 0x38EEF64
	0x038EEF24 MOV X0, X8
	0x038EEF28 BL 0x301BCCC
	0x038EEF2C MOV X22, X0
	0x038EEF30 LDR X0, [X27 + 0x10]
	0x038EEF34 CBZ X0, 0x38EF004
	0x038EEF38 LDR X2, [X25]
	0x038EEF3C MOV W1, W21
	0x038EEF40 BL 0x301BCCC
	0x038EEF44 LDR X8, [X19]
	0x038EEF48 ADD W21, W21, 0x1
	0x038EEF4C MOV X2, X0
	0x038EEF50 LDP X9, X3, [X8 + 0x198]
	0x038EEF54 MOV X0, X19
	0x038EEF58 MOV X1, X22
	0x038EEF5C BLR X9
	0x038EEF60 B 0x38EEF00
	0x038EEF64 MOV X0, X8
	0x038EEF68 MOV W1, W31
	0x038EEF6C BL 0x301BCCC
	0x038EEF70 MOV X21, X0
	0x038EEF74 LDR X0, [X27 + 0x10]
	0x038EEF78 CBZ X0, 0x38EF008
	0x038EEF7C LDR W8, [X0 + 0x18]
	0x038EEF80 LDR X2, [X25]
	0x038EEF84 SUB W1, W8, 0x1
	0x038EEF88 BL 0x301BCCC
	0x038EEF8C LDR X8, [X19]
	0x038EEF90 MOV X2, X0
	0x038EEF94 LDP X9, X3, [X8 + 0x198]
	0x038EEF98 MOV X0, X19
	0x038EEF9C MOV X1, X21
	0x038EEFA0 BLR X9
	0x038EEFA4 LDR X0, [X19 + 0x20]
	0x038EEFA8 CBZ X0, 0x38EF00C
	0x038EEFAC LDR X1, [X27 + 0x10]
	0x038EEFB0 LDR X2, [X23]
	0x038EEFB4 BL 0x301C194
	0x038EEFB8 B 0x38EEEE8
	0x038EEFBC LDR X1, [X24]
	0x038EEFC0 ADD X0, X31, 0x20
	0x038EEFC4 BL 0x2BC434C
	0x038EEFC8 LDR X1, [X20 + 0x18]
	0x038EEFCC CBZ X1, 0x38EEFE0
	0x038EEFD0 LDR X0, [X19 + 0x20]
	0x038EEFD4 CBZ X0, 0x38EEE68
	0x038EEFD8 LDR X2, [X23]
	0x038EEFDC BL 0x301C194
	0x038EEFE0 LDP X20, X19, [X31 + 0x80]
	0x038EEFE4 LDP X22, X21, [X31 + 0x70]
	0x038EEFE8 LDP X24, X23, [X31 + 0x60]
	0x038EEFEC LDP X26, X25, [X31 + 0x50]
	0x038EEFF0 LDP X30, X27, [X31 + 0x40]
	0x038EEFF4 ADD X31, X31, 0x90
	0x038EEFF8 RET
	0x038EEFFC BL 0x1C16F20
	0x038EF000 BL 0x1C16F20
	0x038EF004 BL 0x1C16F20
	0x038EF008 BL 0x1C16F20
	0x038EF00C BL 0x1C16F20
	0x038EF010 B 0x38EF040
	0x038EF014 B 0x38EF040
	0x038EF018 B 0x38EF040
	0x038EF01C B 0x38EF040
	0x038EF020 B 0x38EF040
	0x038EF024 B 0x38EF040
	0x038EF028 B 0x38EF040
	0x038EF02C B 0x38EF040
	0x038EF030 B 0x38EF040
	0x038EF034 B 0x38EF040
	0x038EF038 B 0x38EF040
	0x038EF03C B 0x38EF040
	0x038EF040 CMP W1, 0x1
	0x038EF044 B.NE 0x38EF06C
	0x038EF048 BL 0x3EB1AD0
	0x038EF04C LDR X21, [X0]
	0x038EF050 BL 0x3EB1AE0
	0x038EF054 LDR X1, [X24]
	0x038EF058 ADD X0, X31, 0x20
	0x038EF05C BL 0x2BC434C
	0x038EF060 CBZ X21, 0x38EEFC8
	0x038EF064 MOV X0, X21
	0x038EF068 BL 0x1C16F18
	0x038EF06C MOV X19, X0
	0x038EF070 MOV X21, X31
	0x038EF074 B 0x38EF07C
	0x038EF078 MOV X19, X0
	0x038EF07C LDR X1, [X24]
	0x038EF080 ADD X0, X31, 0x20
	0x038EF084 BL 0x2BC434C
	0x038EF088 CBNZ X21, 0x38EF094
	0x038EF08C MOV X0, X19
	0x038EF090 BL 0x1D2C690
	0x038EF094 MOV X0, X21
	0x038EF098 BL 0x1C16F18
	0x038EF09C BL 0x1990590
	0x038EF0A0 STP D9, D8, [X31 - 0x30]!
	0x038EF0A4 STR X30, [X31 + 0x10]
	0x038EF0A8 STP X20, X19, [X31 + 0x20]
	0x038EF0AC MOV W19, W1
	0x038EF0B0 MOV X1, X31
	0x038EF0B4 MOV V8.16B, V1.16B
	0x038EF0B8 MOV V9.16B, V0.16B
	0x038EF0BC MOV X20, X0
	0x038EF0C0 BL 0x33BDD8C
	0x038EF0C4 STP D9, D8, [X20 + 0x18]
	0x038EF0C8 STR W19, [X20 + 0x28]
	0x038EF0CC LDP X20, X19, [X31 + 0x20]
	0x038EF0D0 LDR X30, [X31 + 0x10]
	0x038EF0D4 LDP D9, D8, [X31], #0x30
	0x038EF0D8 RET
	0x038EF0DC STP D9, D8, [X31 - 0x30]!
	0x038EF0E0 STR X30, [X31 + 0x10]
	0x038EF0E4 STP X20, X19, [X31 + 0x20]
	0x038EF0E8 MOV W19, W1
	0x038EF0EC MOV X1, X31
	0x038EF0F0 MOV V8.16B, V1.16B
	0x038EF0F4 MOV V9.16B, V0.16B
	0x038EF0F8 MOV X20, X0
	0x038EF0FC BL 0x33BDD8C
	0x038EF100 STP D9, D8, [X20 + 0x18]
	0x038EF104 STR W19, [X20 + 0x28]
	0x038EF108 LDP X20, X19, [X31 + 0x20]
	0x038EF10C LDR X30, [X31 + 0x10]
	0x038EF110 LDP D9, D8, [X31], #0x30
	0x038EF114 RET
	0x038EF118 LDR X0, [X0 + 0x30]
	0x038EF11C RET
	0x038EF120 STR X1, [X0 + 0x30]
	0x038EF124 RET
	0x038EF128 LDR X0, [X0 + 0x38]
	0x038EF12C RET
	0x038EF130 STR X1, [X0 + 0x38]
	0x038EF134 RET
	0x038EF138 STR X30, [X31 - 0x30]!
	0x038EF13C STP X22, X21, [X31 + 0x10]
	0x038EF140 STP X20, X19, [X31 + 0x20]
	0x038EF144 ADRP X21, 0xAF2000
	0x038EF148 ADRP X22, 0x85E000
	0x038EF14C ADRP X20, 0x85E000
	0x038EF150 LDRB W8, [X21 + 0x6FD]
	0x038EF154 LDR X22, [X22 + 0x6C8]
	0x038EF158 LDR X20, [X20 + 0x6C0]
	0x038EF15C MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xAF4000
	009 Move X23, 0x860000
	010 Move X21, 0x860000
	011 Move W8, [X22+1775]
	012 Move X23, [X23+1624]
	013 Move X21, [X21+1632]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x860000
	021 Move X0, [X0+1640]
	022 Call 0x1C17CF4
	023 Move X0, 0x860000
	024 Move X0, [X0+1648]
	025 Call 0x1C17CF4
	026 Move X0, 0x860000
	027 Move X0, [X0+1656]
	028 Call 0x1C17CF4
	029 Move X0, 0x860000
	030 Move X0, [X0+1664]
	031 Call 0x1C17CF4
	032 Move X0, 0x860000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0x860000
	036 Move X0, [X0+1624]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1775], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, [X21]
	043 Move X21, X0
	044 Call List`1<Object>..ctor, X0
	045 Move X0, X20
	046 Move X1, X31
	047 Move [X20+16], X21
	048 Call Object..ctor, X0
	049 Compare X19, 0
	050 JumpIfEqual {223}
	051 Move X23, 0x860000
	052 Move X8, [X19]
	053 Move X23, [X23+1648]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X23]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X19
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X19
	073 NotImplemented "Instruction BLR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X24, 0x860000
	076 Move X8, [X19]
	077 Move X24, [X24+1656]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X24]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X2, [X0+8]
	096 Move X0, X19
	097 Move W1, W31
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X19]
	100 Move X1, [X23]
	101 Move X21, X0
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X19
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X19
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X19]
	122 Move X1, [X24]
	123 Subtract W22, W0, 1
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X19
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X2, [X0+8]
	141 Move X0, X19
	142 Move W1, W22
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Compare X21, 0
	145 JumpIfEqual {223}
	146 Move X8, [X21]
	147 Move X22, 0x860000
	148 Move X1, X0
	149 Move X0, X21
	150 Move X9, [X8+312]
	151 Move X2, [X8+320]
	152 Move X22, [X22+1640]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {203}
	158 Move X8, [X19]
	159 Move X1, [X23]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X19
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X19
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, [X19]
	180 Move X1, [X24]
	181 Subtract W21, W0, 1
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 4
	192 Move X0, X19
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Add W9, W9, 4
	196 Add X8, X8, W9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X2, [X0+8]
	200 Move X0, X19
	201 Move W1, W21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X1, [X22]
	204 Move X20, [X20+16]
	205 Move X0, X19
	206 Call Enumerable.Cast, X0
	207 Compare X20, 0
	208 JumpIfEqual {223}
	209 Move X8, 0x85F000
	210 Move X8, [X8+1664]
	211 Move X1, X0
	212 Move X0, X20
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X2, [X8]
	216 Move X22, [X31+32]
	217 Move X21, [X31+40]
	218 Move X24, [X31+16]
	219 Move X23, [X31+24]
	220 Move X30, [X31+64]
	221 Call List`1<Object>.AddRange, X0, X1
	222 Return 
	223 Call 0x1C17F20
	224 Move X0, 0x80D000
	225 Move X0, [X0+1400]
	226 Call 0x1C17D08
	227 Call 0x1C17F10
	228 Move X19, X0
	229 Move X0, 0x85F000
	230 Move X0, [X0+1672]
	231 Call 0x1C17D08
	232 Move X20, X0
	233 Move X0, 0x85F000
	234 Move X0, [X0+1680]
	235 Call 0x1C17D08
	236 Move X2, X0
	237 Move X0, X19
	238 Move X1, X20
	239 Move X3, X31
	240 Call ArgumentException..ctor, X0, X1, X2
	241 Move X0, 0x85F000
	242 Move X0, [X0+1688]
	243 Call 0x1C17D08
	244 Move X1, X0
	245 Move X0, X19
	246 Call 0x1C17DEC

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Poly2Tri.PolygonPoint> points)

Disassembly:
	0x038EF160 TBNZ X8, 0x0, 0x38EF184
	0x038EF164 ADRP X0, 0x85E000
	0x038EF168 LDR X0, [X0 + 0x6C0]
	0x038EF16C BL 0x1C16CF4
	0x038EF170 ADRP X0, 0x85E000
	0x038EF174 LDR X0, [X0 + 0x6C8]
	0x038EF178 BL 0x1C16CF4
	0x038EF17C MOVZ W8, 0x1
	0x038EF180 STRB W8, [X21 + 0x6FD]
	0x038EF184 LDR X0, [X22]
	0x038EF188 BL 0x1C16F10
	0x038EF18C LDR X1, [X20]
	0x038EF190 MOV X20, X0
	0x038EF194 BL 0x301B7C4
	0x038EF198 STR X20, [X19 + 0x10]
	0x038EF19C MOV X0, X19
	0x038EF1A0 LDP X20, X19, [X31 + 0x20]
	0x038EF1A4 LDP X22, X21, [X31 + 0x10]
	0x038EF1A8 MOV X1, X31
	0x038EF1AC LDR X30, [X31], #0x30
	0x038EF1B0 B 0x33BDD8C
	0x038EF1B4 STP X30, X23, [X31 - 0x30]!
	0x038EF1B8 STP X22, X21, [X31 + 0x10]
	0x038EF1BC STP X20, X19, [X31 + 0x20]
	0x038EF1C0 ADRP X22, 0xAF2000
	0x038EF1C4 ADRP X23, 0x85E000
	0x038EF1C8 ADRP X21, 0x85E000
	0x038EF1CC LDRB W8, [X22 + 0x6FE]
	0x038EF1D0 LDR X23, [X23 + 0x6C8]
	0x038EF1D4 LDR X21, [X21 + 0x6C0]
	0x038EF1D8 MOV X19, X1
	0x038EF1DC MOV X20, X0
	0x038EF1E0 TBNZ X8, 0x0, 0x38EF210
	0x038EF1E4 ADRP X0, 0x85E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAF3000
	007 Move X22, 0x85F000
	008 Move W8, [X21+1776]
	009 Move X22, [X22+1656]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x85F000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move X0, 0x85F000
	020 Move X0, [X0+1656]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1776], W8
	024 Move X1, [X22]
	025 Move X0, X20
	026 Call 0x1C17E00
	027 Move X1, X0
	028 Compare X0, 0
	029 JumpIfNotEqual {36}
	030 Move X8, 0x85F000
	031 Move X8, [X8+1696]
	032 Move X0, X20
	033 Move X1, [X8]
	034 Call Enumerable.ToArray, X0
	035 Move X1, X0
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call Polygon..ctor, X0, X1
	043 Return 

Method: System.Void .ctor(UnityEngine.ProBuilder.Poly2Tri.PolygonPoint[] points)

Disassembly:
	0x038EF1E8 LDR X0, [X0 + 0x6B8]

ISIL:
	001 Call Polygon..ctor, X0, X1
	002 Return 

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationMode get_TriangulationMode()

Disassembly:
	0x038EF1EC BL 0x1C16CF4
	0x038EF1F0 ADRP X0, 0x85E000

ISIL:
	001 Move W0, 2
	002 Return X0

Method: System.Void AddSteinerPoint(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038EF1F4 LDR X0, [X0 + 0x6C0]
	0x038EF1F8 BL 0x1C16CF4
	0x038EF1FC ADRP X0, 0x85E000
	0x038EF200 LDR X0, [X0 + 0x6C8]
	0x038EF204 BL 0x1C16CF4
	0x038EF208 MOVZ W8, 0x1
	0x038EF20C STRB W8, [X22 + 0x6FE]
	0x038EF210 LDR X0, [X23]
	0x038EF214 BL 0x1C16F10
	0x038EF218 LDR X1, [X21]
	0x038EF21C MOV X21, X0
	0x038EF220 BL 0x301B7C4
	0x038EF224 MOV X0, X20
	0x038EF228 MOV X1, X31
	0x038EF22C STR X21, [X20 + 0x10]
	0x038EF230 BL 0x33BDD8C
	0x038EF234 LDR X0, [X20 + 0x10]
	0x038EF238 CBZ X0, 0x38EF2AC
	0x038EF23C ADRP X9, 0x85E000
	0x038EF240 LDR X9, [X9 + 0x6B8]
	0x038EF244 LDR W10, [X0 + 0x1C]
	0x038EF248 LDR X8, [X0 + 0x10]
	0x038EF24C LDR X9, [X9]
	0x038EF250 ADD W10, W10, 0x1
	0x038EF254 STR W10, [X0 + 0x1C]
	0x038EF258 CBZ X8, 0x38EF2AC
	0x038EF25C LDRSW X10, [X0 + 0x18]
	0x038EF260 LDR W11, [X8 + 0x18]
	0x038EF264 CMP W10, W11
	0x038EF268 B.CS 0x38EF28C
	0x038EF26C ADD W9, W10, 0x1
	0x038EF270 ADD X8, X8, X10, 0x3, LSL
	0x038EF274 STR W9, [X0 + 0x18]
	0x038EF278 STR X19, [X8 + 0x20]
	0x038EF27C LDP X20, X19, [X31 + 0x20]
	0x038EF280 LDP X22, X21, [X31 + 0x10]
	0x038EF284 LDP X30, X23, [X31], #0x30
	0x038EF288 RET
	0x038EF28C LDR X8, [X9 + 0x20]
	0x038EF290 MOV X1, X19
	0x038EF294 LDP X20, X19, [X31 + 0x20]
	0x038EF298 LDP X22, X21, [X31 + 0x10]
	0x038EF29C LDR X8, [X8 + 0xC0]
	0x038EF2A0 LDR X2, [X8 + 0x70]
	0x038EF2A4 LDP X30, X23, [X31], #0x30
	0x038EF2A8 B 0x301BF90
	0x038EF2AC BL 0x1C16F20
	0x038EF2B0 STP X30, X21, [X31 - 0x20]!
	0x038EF2B4 STP X20, X19, [X31 + 0x10]
	0x038EF2B8 ADRP X21, 0xAF2000
	0x038EF2BC LDRB W8, [X21 + 0x6FF]
	0x038EF2C0 MOV X19, X1
	0x038EF2C4 MOV X20, X0
	0x038EF2C8 TBNZ X8, 0x0, 0x38EF2E0
	0x038EF2CC ADRP X0, 0x85E000
	0x038EF2D0 LDR X0, [X0 + 0x6B8]
	0x038EF2D4 BL 0x1C16CF4
	0x038EF2D8 MOVZ W8, 0x1
	0x038EF2DC STRB W8, [X21 + 0x6FF]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAF3000
	006 Move W8, [X20+1777]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1704]
	015 Call 0x1C17CF4
	016 Move X0, 0x85F000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move X0, 0x85F000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1777], W8
	024 Move X20, [X21+24]
	025 Compare X20, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x85F000
	028 Move X8, [X8+1624]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x85F000
	032 Move X8, [X8+1632]
	033 Move X20, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X21+24], X20
	037 Compare X20, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x85F000
	040 Move X9, [X9+1704]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Return 
	071 Call 0x1C17F20

Method: System.Void AddSteinerPoints(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> points)

Disassembly:
	0x038EF2E0 LDR X0, [X20 + 0x10]
	0x038EF2E4 CBZ X0, 0x38EF350
	0x038EF2E8 ADRP X9, 0x85E000
	0x038EF2EC LDR X9, [X9 + 0x6B8]
	0x038EF2F0 LDR W10, [X0 + 0x1C]
	0x038EF2F4 LDR X8, [X0 + 0x10]
	0x038EF2F8 LDR X9, [X9]
	0x038EF2FC ADD W10, W10, 0x1
	0x038EF300 STR W10, [X0 + 0x1C]
	0x038EF304 CBZ X8, 0x38EF350
	0x038EF308 LDRSW X10, [X0 + 0x18]
	0x038EF30C LDR W11, [X8 + 0x18]
	0x038EF310 CMP W10, W11
	0x038EF314 B.CS 0x38EF334
	0x038EF318 ADD W9, W10, 0x1
	0x038EF31C ADD X8, X8, X10, 0x3, LSL
	0x038EF320 STR W9, [X0 + 0x18]
	0x038EF324 STR X19, [X8 + 0x20]
	0x038EF328 LDP X20, X19, [X31 + 0x10]
	0x038EF32C LDP X30, X21, [X31], #0x20
	0x038EF330 RET
	0x038EF334 LDR X8, [X9 + 0x20]
	0x038EF338 MOV X1, X19
	0x038EF33C LDP X20, X19, [X31 + 0x10]
	0x038EF340 LDR X8, [X8 + 0xC0]
	0x038EF344 LDR X2, [X8 + 0x70]
	0x038EF348 LDP X30, X21, [X31], #0x20
	0x038EF34C B 0x301BF90
	0x038EF350 BL 0x1C16F20
	0x038EF354 LDR X0, [X0 + 0x10]
	0x038EF358 RET
	0x038EF35C LDRB W0, [X0 + 0x46]
	0x038EF360 RET
	0x038EF364 AND W8, W1, 0x1
	0x038EF368 STRB W8, [X0 + 0x46]
	0x038EF36C RET
	0x038EF370 STR X30, [X31 - 0x40]!
	0x038EF374 STP X24, X23, [X31 + 0x10]
	0x038EF378 STP X22, X21, [X31 + 0x20]
	0x038EF37C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF3000
	006 Move W8, [X21+1778]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1664]
	015 Call 0x1C17CF4
	016 Move X0, 0x85F000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move X0, 0x85F000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1778], W8
	024 Move X21, [X20+24]
	025 Compare X21, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x85F000
	028 Move X8, [X8+1624]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x85F000
	032 Move X8, [X8+1632]
	033 Move X21, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X20+24], X21
	037 Compare X21, 0
	038 JumpIfEqual {50}
	039 Move X8, 0x85F000
	040 Move X8, [X8+1664]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X2, [X8]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call List`1<Object>.AddRange, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Void ClearSteinerPoints()

Disassembly:
	0x038EF380 ADRP X24, 0xAF2000
	0x038EF384 ADRP X23, 0x85E000
	0x038EF388 LDRB W8, [X24 + 0x700]
	0x038EF38C LDR X23, [X23 + 0x770]
	0x038EF390 MOV X19, X3
	0x038EF394 MOV X20, X2
	0x038EF398 MOV X21, X1
	0x038EF39C MOV X22, X0
	0x038EF3A0 TBNZ X8, 0x0, 0x38EF3B8
	0x038EF3A4 ADRP X0, 0x85E000
	0x038EF3A8 LDR X0, [X0 + 0x770]
	0x038EF3AC BL 0x1C16CF4
	0x038EF3B0 MOVZ W8, 0x1
	0x038EF3B4 STRB W8, [X24 + 0x700]
	0x038EF3B8 MOV X0, X22
	0x038EF3BC MOV X1, X31
	0x038EF3C0 BL 0x33BDD8C
	0x038EF3C4 LDR X3, [X23]
	0x038EF3C8 ADD X22, X22, 0x10
	0x038EF3CC MOV X0, X22
	0x038EF3D0 MOV W1, W31
	0x038EF3D4 MOV X2, X21
	0x038EF3D8 BL 0x2D1F6B0
	0x038EF3DC LDR X3, [X23]
	0x038EF3E0 MOVZ W1, 0x1
	0x038EF3E4 MOV X0, X22
	0x038EF3E8 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAF3000
	005 Move W8, [X20+1779]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x85F000
	012 Move X0, [X0+1712]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1779], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {33}
	019 Move W2, [X8+24]
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X0, [X8+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 Call Array.Clear, X0, X1, X2
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void AddHole(UnityEngine.ProBuilder.Poly2Tri.Polygon poly)

Disassembly:
	0x038EF3EC BL 0x2D1F6B0
	0x038EF3F0 LDR X3, [X23]
	0x038EF3F4 MOV X0, X22
	0x038EF3F8 MOV X2, X19
	0x038EF3FC LDP X20, X19, [X31 + 0x30]
	0x038EF400 LDP X22, X21, [X31 + 0x20]
	0x038EF404 LDP X24, X23, [X31 + 0x10]
	0x038EF408 MOVZ W1, 0x2
	0x038EF40C LDR X30, [X31], #0x40
	0x038EF410 B 0x2D1F6B0
	0x038EF414 STR X30, [X31 - 0x30]!
	0x038EF418 STP X22, X21, [X31 + 0x10]
	0x038EF41C STP X20, X19, [X31 + 0x20]
	0x038EF420 ADRP X22, 0xAF2000
	0x038EF424 ADRP X21, 0x85E000
	0x038EF428 LDRB W8, [X22 + 0x701]
	0x038EF42C LDR X21, [X21 + 0x778]
	0x038EF430 MOV X19, X1
	0x038EF434 MOV X20, X0
	0x038EF438 TBNZ X8, 0x0, 0x38EF450
	0x038EF43C ADRP X0, 0x85E000
	0x038EF440 LDR X0, [X0 + 0x778]
	0x038EF444 BL 0x1C16CF4
	0x038EF448 MOVZ W8, 0x1
	0x038EF44C STRB W8, [X22 + 0x701]
	0x038EF450 LDR X2, [X21]
	0x038EF454 ADD X0, X20, 0x10
	0x038EF458 MOV X1, X19
	0x038EF45C BL 0x2D1F788
	0x038EF460 ADDS W31, W0, 0x1
	0x038EF464 B.EQ 0x38EF478
	0x038EF468 LDP X20, X19, [X31 + 0x20]
	0x038EF46C LDP X22, X21, [X31 + 0x10]
	0x038EF470 LDR X30, [X31], #0x30
	0x038EF474 RET
	0x038EF478 ADRP X0, 0x804000
	0x038EF47C LDR X0, [X0 + 0x7D0]
	0x038EF480 BL 0x1C16D08
	0x038EF484 BL 0x1C16F10
	0x038EF488 MOV X19, X0
	0x038EF48C ADRP X0, 0x85E000
	0x038EF490 LDR X0, [X0 + 0x780]
	0x038EF494 BL 0x1C16D08
	0x038EF498 MOV X1, X0
	0x038EF49C MOV X0, X19
	0x038EF4A0 MOV X2, X31
	0x038EF4A4 BL 0x33B2C70
	0x038EF4A8 ADRP X0, 0x85E000
	0x038EF4AC LDR X0, [X0 + 0x788]
	0x038EF4B0 BL 0x1C16D08
	0x038EF4B4 MOV X1, X0
	0x038EF4B8 MOV X0, X19
	0x038EF4BC BL 0x1C16DEC
	0x038EF4C0 STR X30, [X31 - 0x10]!
	0x038EF4C4 BL 0x38EF414
	0x038EF4C8 MOVZ W9, 0x5556
	0x038EF4CC ADD W8, W0, 0x2
	0x038EF4D0 MOVK W9, 0x55550000
	0x038EF4D4 SMADDL X9, X8, X9, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAF3000
	006 Move W8, [X20+1780]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1720]
	015 Call 0x1C17CF4
	016 Move X0, 0x85F000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x85F000
	020 Move X0, [X0+1736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1780], W8
	024 Move X20, [X21+32]
	025 Compare X20, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x85F000
	028 Move X8, [X8+1736]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x85F000
	032 Move X8, [X8+1728]
	033 Move X20, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X21+32], X20
	037 Compare X20, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x85F000
	040 Move X9, [X9+1720]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Return 
	071 Call 0x1C17F20

Method: System.Void InsertPointAfter(UnityEngine.ProBuilder.Poly2Tri.PolygonPoint point, UnityEngine.ProBuilder.Poly2Tri.PolygonPoint newPoint)

Disassembly:
	0x038EF4D8 UBFM X10, X9, 0x3F, 0x3F
	0x038EF4DC UBFM X9, X9, 0x20, 0x3F
	0x038EF4E0 ADD W9, W9, W10
	0x038EF4E4 ADD W9, W9, W9, 0x1, LSL
	0x038EF4E8 SUB W0, W8, W9
	0x038EF4EC LDR X30, [X31], #0x10
	0x038EF4F0 RET
	0x038EF4F4 STR X30, [X31 - 0x10]!
	0x038EF4F8 BL 0x38EF414
	0x038EF4FC MOVZ W9, 0x5556
	0x038EF500 ADD W8, W0, 0x1
	0x038EF504 MOVK W9, 0x55550000
	0x038EF508 SMADDL X9, X8, X9, X31
	0x038EF50C UBFM X10, X9, 0x3F, 0x3F
	0x038EF510 UBFM X9, X9, 0x20, 0x3F
	0x038EF514 ADD W9, W9, W10
	0x038EF518 ADD W9, W9, W9, 0x1, LSL
	0x038EF51C SUB W0, W8, W9
	0x038EF520 LDR X30, [X31], #0x10
	0x038EF524 RET
	0x038EF528 STR X30, [X31 - 0x30]!
	0x038EF52C STP X22, X21, [X31 + 0x10]
	0x038EF530 STP X20, X19, [X31 + 0x20]
	0x038EF534 ADRP X22, 0xAF2000
	0x038EF538 ADRP X21, 0x85E000
	0x038EF53C LDRB W8, [X22 + 0x702]
	0x038EF540 LDR X21, [X21 + 0x790]
	0x038EF544 MOV X19, X1
	0x038EF548 MOV X20, X0
	0x038EF54C TBNZ X8, 0x0, 0x38EF564
	0x038EF550 ADRP X0, 0x85E000
	0x038EF554 LDR X0, [X0 + 0x790]
	0x038EF558 BL 0x1C16CF4
	0x038EF55C MOVZ W8, 0x1
	0x038EF560 STRB W8, [X22 + 0x702]
	0x038EF564 LDR X2, [X21]
	0x038EF568 ADD X0, X20, 0x10
	0x038EF56C MOV X1, X19
	0x038EF570 LDP X20, X19, [X31 + 0x20]
	0x038EF574 LDP X22, X21, [X31 + 0x10]
	0x038EF578 LDR X30, [X31], #0x30
	0x038EF57C B 0x2D1F714
	0x038EF580 STP X30, X23, [X31 - 0x30]!
	0x038EF584 STP X22, X21, [X31 + 0x10]
	0x038EF588 STP X20, X19, [X31 + 0x20]
	0x038EF58C ADRP X23, 0xAF2000
	0x038EF590 LDRB W8, [X23 + 0x703]
	0x038EF594 MOV X19, X3
	0x038EF598 MOV X21, X2
	0x038EF59C MOV X22, X1
	0x038EF5A0 MOV X20, X0
	0x038EF5A4 TBNZ X8, 0x0, 0x38EF5BC
	0x038EF5A8 ADRP X0, 0x85E000
	0x038EF5AC LDR X0, [X0 + 0x798]
	0x038EF5B0 BL 0x1C16CF4
	0x038EF5B4 MOVZ W8, 0x1
	0x038EF5B8 STRB W8, [X23 + 0x703]
	0x038EF5BC MOV X0, X20
	0x038EF5C0 MOV X1, X22
	0x038EF5C4 MOV X2, X21
	0x038EF5C8 BL 0x38EF644
	0x038EF5CC ADDS W31, W0, 0x1
	0x038EF5D0 B.EQ 0x38EF5FC
	0x038EF5D4 ADRP X8, 0x85E000
	0x038EF5D8 LDR X8, [X8 + 0x798]
	0x038EF5DC MOV W1, W0
	0x038EF5E0 ADD X0, X20, 0x28
	0x038EF5E4 MOV X2, X19
	0x038EF5E8 LDR X3, [X8]
	0x038EF5EC LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAF3000
	007 Move W8, [X22+1781]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x85F000
	016 Move X0, [X0+1744]
	017 Call 0x1C17CF4
	018 Move X0, 0x85F000
	019 Move X0, [X0+1752]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1781], W8
	023 Move X0, [X21+16]
	024 Compare X0, 0
	025 JumpIfEqual {60}
	026 Move X8, 0x85F000
	027 Move X8, [X8+1744]
	028 Move X1, X20
	029 Move X2, [X8]
	030 Call List`1<Object>.IndexOf, X0, X1
	031 Add W31, W0, 1
	032 Compare X20, 0
	033 JumpIfEqual {60}
	034 Compare X19, 0
	035 JumpIfEqual {60}
	036 Move X8, [X20+48]
	037 Move [X19+48], X8
	038 Move [X19+56], X20
	039 Move X8, [X20+48]
	040 Compare X8, 0
	041 JumpIfEqual {60}
	042 Move [X8+56], X19
	043 Move [X20+48], X19
	044 Move X8, [X21+16]
	045 Compare X8, 0
	046 JumpIfEqual {60}
	047 Move X9, 0x85F000
	048 Move X9, [X9+1752]
	049 Move X2, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X3, [X9]
	055 Add W1, W0, 1
	056 Move X0, X8
	057 Move X30, [X31+48]
	058 Call List`1<Object>.Insert, X0, X1, X2
	059 Return 
	060 Call 0x1C17F20
	061 Move X0, 0x80D000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x85F000
	067 Move X0, [X0+1760]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0x85F000
	071 Move X0, [X0+1768]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0x85F000
	079 Move X0, [X0+1776]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC

Method: System.Void AddPoints(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Poly2Tri.PolygonPoint> list)

Disassembly:
	0x038EF5F0 LDP X22, X21, [X31 + 0x10]
	0x038EF5F4 LDP X30, X23, [X31], #0x30
	0x038EF5F8 B 0x2D1F6B0
	0x038EF5FC ADRP X0, 0x804000
	0x038EF600 LDR X0, [X0 + 0x7D0]
	0x038EF604 BL 0x1C16D08
	0x038EF608 BL 0x1C16F10
	0x038EF60C MOV X19, X0
	0x038EF610 ADRP X0, 0x85E000
	0x038EF614 LDR X0, [X0 + 0x7A0]
	0x038EF618 BL 0x1C16D08
	0x038EF61C MOV X1, X0
	0x038EF620 MOV X0, X19
	0x038EF624 MOV X2, X31
	0x038EF628 BL 0x33B2C70
	0x038EF62C ADRP X0, 0x85E000
	0x038EF630 LDR X0, [X0 + 0x7A8]
	0x038EF634 BL 0x1C16D08
	0x038EF638 MOV X1, X0
	0x038EF63C MOV X0, X19
	0x038EF640 BL 0x1C16DEC
	0x038EF644 STP X30, X23, [X31 - 0x30]!
	0x038EF648 STP X22, X21, [X31 + 0x10]
	0x038EF64C STP X20, X19, [X31 + 0x20]
	0x038EF650 ADRP X23, 0xAF2000
	0x038EF654 ADRP X22, 0x85E000
	0x038EF658 LDRB W8, [X23 + 0x712]
	0x038EF65C LDR X22, [X22 + 0x778]
	0x038EF660 MOV X19, X2
	0x038EF664 MOV X20, X1
	0x038EF668 MOV X21, X0
	0x038EF66C TBNZ X8, 0x0, 0x38EF684
	0x038EF670 ADRP X0, 0x85E000
	0x038EF674 LDR X0, [X0 + 0x778]
	0x038EF678 BL 0x1C16CF4
	0x038EF67C MOVZ W8, 0x1
	0x038EF680 STRB W8, [X23 + 0x712]
	0x038EF684 LDR X2, [X22]
	0x038EF688 ADD X21, X21, 0x10
	0x038EF68C MOV X0, X21
	0x038EF690 MOV X1, X20
	0x038EF694 BL 0x2D1F788
	0x038EF698 LDR X2, [X22]
	0x038EF69C MOV W20, W0
	0x038EF6A0 MOV X0, X21
	0x038EF6A4 MOV X1, X19
	0x038EF6A8 BL 0x2D1F788
	0x038EF6AC CMP W20, 0x0
	0x038EF6B0 CSET W8, EQ
	0x038EF6B4 CMP W0, 0x0
	0x038EF6B8 CSET W9, EQ
	0x038EF6BC CMP W0, 0x1
	0x038EF6C0 CSET W10, EQ
	0x038EF6C4 CMP W20, 0x1
	0x038EF6C8 CSET W11, EQ
	0x038EF6CC CSEL W12, W11, W20, EQ
	0x038EF6D0 CMP W12, 0x2
	0x038EF6D4 ORR W10, W11, W10, 0x0
	0x038EF6D8 CSET W11, EQ
	0x038EF6DC CMP W0, 0x2
	0x038EF6E0 CSET W12, EQ
	0x038EF6E4 CMP W10, 0x1
	0x038EF6E8 ORR W11, W12, W11, 0x0
	0x038EF6EC B.NE 0x38EF6FC
	0x038EF6F0 TBZ X11, 0x0, 0x38EF6FC
	0x038EF6F4 MOV W0, W31
	0x038EF6F8 B 0x38EF71C
	0x038EF6FC ORR W8, W8, W9, 0x0
	0x038EF700 AND W9, W8, W11, 0x0
	0x038EF704 TBZ X9, 0x0, 0x38EF710
	0x038EF708 MOVZ W0, 0x1
	0x038EF70C B 0x38EF71C
	0x038EF710 ANDS W31, W8, W10, 0x0
	0x038EF714 MOVZ W8, 0x2
	0x038EF718 CSINV W0, W8, W31, NE
	0x038EF71C LDP X20, X19, [X31 + 0x20]
	0x038EF720 LDP X22, X21, [X31 + 0x10]
	0x038EF724 LDP X30, X23, [X31], #0x30
	0x038EF728 RET
	0x038EF72C STR X30, [X31 - 0x50]!
	0x038EF730 STP X26, X25, [X31 + 0x10]
	0x038EF734 STP X24, X23, [X31 + 0x20]
	0x038EF738 STP X22, X21, [X31 + 0x30]
	0x038EF73C STP X20, X19, [X31 + 0x40]
	0x038EF740 ADRP X21, 0xAF2000
	0x038EF744 ADRP X26, 0x85E000
	0x038EF748 LDRB W8, [X21 + 0x704]
	0x038EF74C LDR X26, [X26 + 0x7B0]
	0x038EF750 MOV X20, X1
	0x038EF754 MOV X19, X0
	0x038EF758 TBNZ X8, 0x0, 0x38EF77C
	0x038EF75C ADRP X0, 0x85E000
	0x038EF760 LDR X0, [X0 + 0x7B0]
	0x038EF764 BL 0x1C16CF4
	0x038EF768 ADRP X0, 0x85E000
	0x038EF76C LDR X0, [X0 + 0x798]
	0x038EF770 BL 0x1C16CF4
	0x038EF774 MOVZ W8, 0x1
	0x038EF778 STRB W8, [X21 + 0x704]
	0x038EF77C LDR X2, [X26]
	0x038EF780 ADD X21, X19, 0x10
	0x038EF784 MOV X0, X21
	0x038EF788 MOV W1, W31
	0x038EF78C BL 0x2D1F64C
	0x038EF790 CBZ X20, 0x38EF888
	0x038EF794 MOV X1, X0
	0x038EF798 MOV X0, X20
	0x038EF79C BL 0x38EF528
	0x038EF7A0 LDR X2, [X26]
	0x038EF7A4 MOV W24, W0
	0x038EF7A8 MOVZ W1, 0x1
	0x038EF7AC MOV X0, X21
	0x038EF7B0 MOVZ W22, 0x1
	0x038EF7B4 BL 0x2D1F64C
	0x038EF7B8 MOV X1, X0
	0x038EF7BC MOV X0, X20
	0x038EF7C0 BL 0x38EF528
	0x038EF7C4 LDR X2, [X26]
	0x038EF7C8 MOV W25, W0
	0x038EF7CC MOVZ W1, 0x2
	0x038EF7D0 MOV X0, X21
	0x038EF7D4 MOVZ W23, 0x2
	0x038EF7D8 BL 0x2D1F64C
	0x038EF7DC MOV X1, X0
	0x038EF7E0 MOV X0, X20
	0x038EF7E4 BL 0x38EF528
	0x038EF7E8 TBZ X25, 0x0, 0x38EF7F8
	0x038EF7EC TBZ X0, 0x0, 0x38EF7F8
	0x038EF7F0 MOV W1, W31
	0x038EF7F4 B 0x38EF824
	0x038EF7F8 AND W8, W24, W0, 0x0
	0x038EF7FC TBZ X8, 0x0, 0x38EF810
	0x038EF800 MOV W22, W31
	0x038EF804 MOVZ W23, 0x2
	0x038EF808 MOVZ W1, 0x1
	0x038EF80C B 0x38EF824
	0x038EF810 AND W8, W24, W25, 0x0
	0x038EF814 TBZ X8, 0x0, 0x38EF88C
	0x038EF818 MOV W22, W31
	0x038EF81C MOVZ W23, 0x1
	0x038EF820 MOVZ W1, 0x2
	0x038EF824 ADRP X8, 0x85E000
	0x038EF828 LDR X8, [X8 + 0x798]
	0x038EF82C ADD X0, X19, 0x28
	0x038EF830 MOV X2, X20
	0x038EF834 LDR X3, [X8]
	0x038EF838 BL 0x2D1F6B0
	0x038EF83C LDR X2, [X26]
	0x038EF840 MOV X0, X21
	0x038EF844 MOV W1, W22
	0x038EF848 BL 0x2D1F64C
	0x038EF84C LDR X2, [X26]
	0x038EF850 MOV X22, X0
	0x038EF854 MOV X0, X21
	0x038EF858 MOV W1, W23
	0x038EF85C BL 0x2D1F64C
	0x038EF860 MOV X2, X0
	0x038EF864 MOV X0, X20
	0x038EF868 MOV X1, X22
	0x038EF86C MOV X3, X19
	0x038EF870 LDP X20, X19, [X31 + 0x40]
	0x038EF874 LDP X22, X21, [X31 + 0x30]
	0x038EF878 LDP X24, X23, [X31 + 0x20]
	0x038EF87C LDP X26, X25, [X31 + 0x10]
	0x038EF880 LDR X30, [X31], #0x50
	0x038EF884 B 0x38EF580
	0x038EF888 BL 0x1C16F20
	0x038EF88C ADRP X0, 0x804000
	0x038EF890 LDR X0, [X0 + 0x7D0]
	0x038EF894 BL 0x1C16D08
	0x038EF898 BL 0x1C16F10
	0x038EF89C MOV X19, X0
	0x038EF8A0 ADRP X0, 0x85E000
	0x038EF8A4 LDR X0, [X0 + 0x7B8]
	0x038EF8A8 BL 0x1C16D08
	0x038EF8AC MOV X1, X0
	0x038EF8B0 MOV X0, X19
	0x038EF8B4 MOV X2, X31
	0x038EF8B8 BL 0x33B2C70
	0x038EF8BC ADRP X0, 0x85E000
	0x038EF8C0 LDR X0, [X0 + 0x7C0]
	0x038EF8C4 BL 0x1C16D08
	0x038EF8C8 MOV X1, X0
	0x038EF8CC MOV X0, X19
	0x038EF8D0 BL 0x1C16DEC
	0x038EF8D4 STP X30, X19, [X31 - 0x10]!
	0x038EF8D8 CBZ X1, 0x38EF8FC
	0x038EF8DC MOV X19, X0
	0x038EF8E0 MOV X0, X1
	0x038EF8E4 MOV X1, X2
	0x038EF8E8 BL 0x38EF900
	0x038EF8EC MOV X1, X0
	0x038EF8F0 MOV X0, X19
	0x038EF8F4 LDP X30, X19, [X31], #0x10
	0x038EF8F8 B 0x38EF900
	0x038EF8FC BL 0x1C16F20
	0x038EF900 STR X30, [X31 - 0x30]!
	0x038EF904 STP X22, X21, [X31 + 0x10]
	0x038EF908 STP X20, X19, [X31 + 0x20]
	0x038EF90C ADRP X21, 0xAF2000
	0x038EF910 ADRP X22, 0x85E000
	0x038EF914 LDRB W8, [X21 + 0x709]
	0x038EF918 LDR X22, [X22 + 0x7B0]
	0x038EF91C MOV X19, X1
	0x038EF920 MOV X20, X0
	0x038EF924 TBNZ X8, 0x0, 0x38EF93C
	0x038EF928 ADRP X0, 0x85E000
	0x038EF92C LDR X0, [X0 + 0x7B0]
	0x038EF930 BL 0x1C16CF4
	0x038EF934 MOVZ W8, 0x1
	0x038EF938 STRB W8, [X21 + 0x709]
	0x038EF93C MOV X0, X20
	0x038EF940 MOV X1, X19
	0x038EF944 ADD X21, X20, 0x10
	0x038EF948 BL 0x38EF414
	0x038EF94C MOVZ W9, 0x5556
	0x038EF950 ADD W8, W0, 0x2
	0x038EF954 MOVK W9, 0x55550000
	0x038EF958 SMADDL X9, X8, X9, X31
	0x038EF95C UBFM X10, X9, 0x3F, 0x3F
	0x038EF960 UBFM X9, X9, 0x20, 0x3F
	0x038EF964 LDR X2, [X22]
	0x038EF968 MOV X0, X21
	0x038EF96C LDP X20, X19, [X31 + 0x20]
	0x038EF970 LDP X22, X21, [X31 + 0x10]
	0x038EF974 ADD W9, W9, W10
	0x038EF978 ADD W9, W9, W9, 0x1, LSL
	0x038EF97C SUB W1, W8, W9
	0x038EF980 LDR X30, [X31], #0x30
	0x038EF984 B 0x2D1F64C
	0x038EF988 STP X30, X23, [X31 - 0x30]!
	0x038EF98C STP X22, X21, [X31 + 0x10]
	0x038EF990 STP X20, X19, [X31 + 0x20]
	0x038EF994 ADRP X23, 0xAF2000
	0x038EF998 ADRP X21, 0x85E000
	0x038EF99C ADRP X22, 0x85E000
	0x038EF9A0 LDRB W8, [X23 + 0x705]
	0x038EF9A4 LDR X21, [X21 + 0x778]
	0x038EF9A8 LDR X22, [X22 + 0x7C8]
	0x038EF9AC MOV X19, X1
	0x038EF9B0 MOV X20, X0
	0x038EF9B4 TBNZ X8, 0x0, 0x38EF9D8
	0x038EF9B8 ADRP X0, 0x85E000
	0x038EF9BC LDR X0, [X0 + 0x778]
	0x038EF9C0 BL 0x1C16CF4
	0x038EF9C4 ADRP X0, 0x85E000
	0x038EF9C8 LDR X0, [X0 + 0x7C8]
	0x038EF9CC BL 0x1C16CF4
	0x038EF9D0 MOVZ W8, 0x1
	0x038EF9D4 STRB W8, [X23 + 0x705]
	0x038EF9D8 LDR X2, [X21]
	0x038EF9DC ADD X0, X20, 0x10
	0x038EF9E0 MOV X1, X19
	0x038EF9E4 ADD X21, X20, 0x28
	0x038EF9E8 BL 0x2D1F788
	0x038EF9EC MOVZ W9, 0x5556
	0x038EF9F0 ADD W8, W0, 0x1
	0x038EF9F4 MOVK W9, 0x55550000
	0x038EF9F8 SMADDL X9, X8, X9, X31
	0x038EF9FC UBFM X10, X9, 0x3F, 0x3F
	0x038EFA00 UBFM X9, X9, 0x20, 0x3F

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xAF3000
	009 Move W8, [X21+1782]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x805000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x85F000
	020 Move X0, [X0+1784]
	021 Call 0x1C17CF4
	022 Move X0, 0x85F000
	023 Move X0, [X0+1792]
	024 Call 0x1C17CF4
	025 Move X0, 0x805000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0x85F000
	029 Move X0, [X0+1704]
	030 Call 0x1C17CF4
	031 Move X0, 0x85F000
	032 Move X0, [X0+1800]
	033 Call 0x1C17CF4
	034 Move X0, 0x85F000
	035 Move X0, [X0+1808]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1782], W8
	039 Compare X20, 0
	040 JumpIfEqual {228}
	041 Move X10, 0x85F000
	042 Move X8, [X20]
	043 Move X10, [X10+1784]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Move X1, [X10]
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X20
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X22, 0x805000
	063 Move X22, [X22+3584]
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X20, X0
	067 Compare X0, 0
	068 JumpIfEqual {222}
	069 Move X21, 0x805000
	070 Move X23, 0x85F000
	071 Move X24, 0x85F000
	072 Move X21, [X21+3608]
	073 Move X23, [X23+1792]
	074 Move X24, [X24+1704]
	075 Move X8, [X20]
	076 Move X1, [X21]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X20
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {154}
	100 Move X8, [X20]
	101 Move X1, [X23]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X20
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X20
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, X0
	122 Compare X0, 0
	123 JumpIfEqual {219}
	124 Move X9, [X19+48]
	125 Move [X8+56], X9
	126 Compare X9, 0
	127 JumpIfEqual {131}
	128 Move X10, [X9+48]
	129 Move [X8+48], X10
	130 Move [X9+48], X8
	131 Move X0, [X19+16]
	132 Move [X19+48], X8
	133 Compare X0, 0
	134 JumpIfEqual {220}
	135 Move W11, [X0+28]
	136 Move X9, [X0+16]
	137 Move X10, [X24]
	138 Add W11, W11, 1
	139 Move [X0+28], W11
	140 Compare X9, 0
	141 JumpIfEqual {218}
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Move W12, [X9+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W10, W11, 1
	146 Add X9, X9, X11
	147 Move [X0+24], W10
	148 Move [X9+32], X8
	149 Move X9, [X10+32]
	150 Move X9, [X9+192]
	151 Move X2, [X9+112]
	152 Move X1, X8
	153 Call List`1<Object>.AddWithResize, X0, X1
	154 Move X21, X31
	155 Move W23, 5
	156 Compare X20, 0
	157 JumpIfEqual {179}
	158 Move X8, [X20]
	159 Move X1, [X22]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X20
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X20
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Compare X21, 0
	180 JumpIfNotEqual {223}
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Compare W23, 0
	183 JumpIfNotEqual {210}
	184 Move X0, [X19+16]
	185 Compare X0, 0
	186 JumpIfEqual {228}
	187 Move X8, 0x85F000
	188 Move X8, [X8+1800]
	189 Move W1, W31
	190 Move X2, [X8]
	191 Call List`1<Object>.get_Item, X0, X1
	192 Compare X0, 0
	193 JumpIfEqual {225}
	194 Move X9, 0x85F000
	195 Move X9, [X9+1808]
	196 Move X8, [X0]
	197 Move X1, [X9]
	198 Move W10, [X8+304]
	199 Move W9, [X1+304]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X8, [X8+200]
	202 Add X8, X8, X9
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, [X19+48]
	206 Compare X8, 0
	207 JumpIfEqual {228}
	208 Move [X8+48], X0
	209 Move [X0+56], X8
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X24, [X31+16]
	215 Move X23, [X31+24]
	216 Move X30, [X31+64]
	217 Return 
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Call 0x1C181E0
	222 Call 0x1C17F20
	223 Move X0, X21
	224 Call 0x1C17F18
	225 Move X8, [X19+48]
	226 Compare X8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17F20
	229 Move [X8+48], X0
	230 Call 0x1C17F20
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Call 0x3EB2AD0
	233 Move X21, [X0]
	234 Call 0x3EB2AE0
	235 Move W23, W31
	236 Compare X20, 0
	237 JumpIfNotEqual {158}
	238 Move X19, X0
	239 Move X21, X31
	240 Move X19, X0
	241 Compare X20, 0
	242 JumpIfEqual {264}
	243 Move X8, [X20]
	244 Move X1, [X22]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move X0, X20
	255 Move W2, W31
	256 Call 0x1C5D788
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Add X8, X8, X9
	259 Add X0, X8, 312
	260 Move X8, [X0]
	261 Move X1, [X0+8]
	262 Move X0, X20
	263 NotImplemented "Instruction BLR not yet implemented."
	264 Compare X21, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X19
	267 Call 0x1D2D690
	268 Move X0, X21
	269 Call 0x1C17F18
	270 Call 0x1991590

Method: System.Void AddPoint(UnityEngine.ProBuilder.Poly2Tri.PolygonPoint p)

Disassembly:
	0x038EFA04 LDR X2, [X22]
	0x038EFA08 MOV X0, X21
	0x038EFA0C LDP X20, X19, [X31 + 0x20]
	0x038EFA10 LDP X22, X21, [X31 + 0x10]
	0x038EFA14 ADD W9, W9, W10
	0x038EFA18 ADD W9, W9, W9, 0x1, LSL
	0x038EFA1C SUB W1, W8, W9
	0x038EFA20 LDP X30, X23, [X31], #0x30
	0x038EFA24 B 0x2D1F64C
	0x038EFA28 STP X30, X23, [X31 - 0x30]!
	0x038EFA2C STP X22, X21, [X31 + 0x10]
	0x038EFA30 STP X20, X19, [X31 + 0x20]
	0x038EFA34 ADRP X23, 0xAF2000
	0x038EFA38 ADRP X21, 0x85E000
	0x038EFA3C ADRP X22, 0x85E000
	0x038EFA40 LDRB W8, [X23 + 0x706]
	0x038EFA44 LDR X21, [X21 + 0x778]
	0x038EFA48 LDR X22, [X22 + 0x7C8]
	0x038EFA4C MOV X19, X1
	0x038EFA50 MOV X20, X0
	0x038EFA54 TBNZ X8, 0x0, 0x38EFA78
	0x038EFA58 ADRP X0, 0x85E000
	0x038EFA5C LDR X0, [X0 + 0x778]
	0x038EFA60 BL 0x1C16CF4
	0x038EFA64 ADRP X0, 0x85E000
	0x038EFA68 LDR X0, [X0 + 0x7C8]
	0x038EFA6C BL 0x1C16CF4
	0x038EFA70 MOVZ W8, 0x1
	0x038EFA74 STRB W8, [X23 + 0x706]
	0x038EFA78 LDR X2, [X21]
	0x038EFA7C ADD X0, X20, 0x10
	0x038EFA80 MOV X1, X19
	0x038EFA84 ADD X21, X20, 0x28
	0x038EFA88 BL 0x2D1F788
	0x038EFA8C MOVZ W9, 0x5556
	0x038EFA90 ADD W8, W0, 0x2
	0x038EFA94 MOVK W9, 0x55550000
	0x038EFA98 SMADDL X9, X8, X9, X31
	0x038EFA9C UBFM X10, X9, 0x3F, 0x3F
	0x038EFAA0 UBFM X9, X9, 0x20, 0x3F
	0x038EFAA4 LDR X2, [X22]
	0x038EFAA8 MOV X0, X21
	0x038EFAAC LDP X20, X19, [X31 + 0x20]
	0x038EFAB0 LDP X22, X21, [X31 + 0x10]
	0x038EFAB4 ADD W9, W9, W10
	0x038EFAB8 ADD W9, W9, W9, 0x1, LSL
	0x038EFABC SUB W1, W8, W9
	0x038EFAC0 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF3000
	006 Move W8, [X21+1783]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1704]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1783], W8
	018 Compare X19, 0
	019 JumpIfEqual {61}
	020 Move X8, [X20+48]
	021 Move [X19+56], X8
	022 Compare X8, 0
	023 JumpIfEqual {61}
	024 Move X9, [X8+48]
	025 Move [X19+48], X9
	026 Move [X8+48], X19
	027 Move X0, [X20+16]
	028 Compare X0, 0
	029 JumpIfEqual {61}
	030 Move X9, 0x85F000
	031 Move X9, [X9+1704]
	032 Move W10, [X0+28]
	033 Move X8, [X0+16]
	034 Move X9, [X9]
	035 Add W10, W10, 1
	036 Move [X0+28], W10
	037 Compare X8, 0
	038 JumpIfEqual {61}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W11, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add W9, W10, 1
	043 Add X8, X8, X10
	044 Move [X0+24], W9
	045 Move [X8+32], X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Move X8, [X9+32]
	052 Move X1, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X8, [X8+192]
	056 Move X2, [X8+112]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call List`1<Object>.AddWithResize, X0, X1
	060 Return 
	061 Call 0x1C17F20

Method: System.Void RemovePoint(UnityEngine.ProBuilder.Poly2Tri.PolygonPoint p)

Disassembly:
	0x038EFAC4 B 0x2D1F64C
	0x038EFAC8 STP X30, X23, [X31 - 0x30]!
	0x038EFACC STP X22, X21, [X31 + 0x10]
	0x038EFAD0 STP X20, X19, [X31 + 0x20]
	0x038EFAD4 ADRP X23, 0xAF2000
	0x038EFAD8 ADRP X21, 0x85E000
	0x038EFADC ADRP X22, 0x85E000
	0x038EFAE0 LDRB W8, [X23 + 0x707]
	0x038EFAE4 LDR X21, [X21 + 0x778]
	0x038EFAE8 LDR X22, [X22 + 0x7C8]
	0x038EFAEC MOV X19, X1
	0x038EFAF0 MOV X20, X0
	0x038EFAF4 TBNZ X8, 0x0, 0x38EFB18
	0x038EFAF8 ADRP X0, 0x85E000
	0x038EFAFC LDR X0, [X0 + 0x778]
	0x038EFB00 BL 0x1C16CF4
	0x038EFB04 ADRP X0, 0x85E000
	0x038EFB08 LDR X0, [X0 + 0x7C8]
	0x038EFB0C BL 0x1C16CF4
	0x038EFB10 MOVZ W8, 0x1
	0x038EFB14 STRB W8, [X23 + 0x707]
	0x038EFB18 LDR X2, [X21]
	0x038EFB1C ADD X0, X20, 0x10
	0x038EFB20 MOV X1, X19
	0x038EFB24 ADD X21, X20, 0x28
	0x038EFB28 BL 0x2D1F788
	0x038EFB2C LDR X2, [X22]
	0x038EFB30 MOV W1, W0
	0x038EFB34 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF3000
	006 Move W8, [X21+1784]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1784], W8
	018 Compare X19, 0
	019 JumpIfEqual {41}
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfEqual {41}
	023 Move X9, [X19+48]
	024 Move [X8+48], X9
	025 Compare X9, 0
	026 JumpIfEqual {41}
	027 Move [X9+56], X8
	028 Move X0, [X20+16]
	029 Compare X0, 0
	030 JumpIfEqual {41}
	031 Move X8, 0x85F000
	032 Move X8, [X8+1816]
	033 Move X1, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, [X8]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call List`1<Object>.Remove, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> get_Points()

Disassembly:
	0x038EFB38 LDP X20, X19, [X31 + 0x20]
	0x038EFB3C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> get_Triangles()

Disassembly:
	0x038EFB40 LDP X30, X23, [X31], #0x30
	0x038EFB44 B 0x2D1F64C

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.Polygon> get_Holes()

Disassembly:
	0x038EFB48 STR X30, [X31 - 0x30]!
	0x038EFB4C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void AddTriangle(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t)

Disassembly:
	0x038EFB50 STP X20, X19, [X31 + 0x20]
	0x038EFB54 ADRP X21, 0xAF2000
	0x038EFB58 ADRP X22, 0x85E000
	0x038EFB5C LDRB W8, [X21 + 0x708]
	0x038EFB60 LDR X22, [X22 + 0x7B0]
	0x038EFB64 MOV X19, X1
	0x038EFB68 MOV X20, X0
	0x038EFB6C TBNZ X8, 0x0, 0x38EFB84
	0x038EFB70 ADRP X0, 0x85E000
	0x038EFB74 LDR X0, [X0 + 0x7B0]
	0x038EFB78 BL 0x1C16CF4
	0x038EFB7C MOVZ W8, 0x1
	0x038EFB80 STRB W8, [X21 + 0x708]
	0x038EFB84 MOV X0, X20
	0x038EFB88 MOV X1, X19
	0x038EFB8C ADD X21, X20, 0x10
	0x038EFB90 BL 0x38EF414
	0x038EFB94 MOVZ W9, 0x5556
	0x038EFB98 ADD W8, W0, 0x1
	0x038EFB9C MOVK W9, 0x55550000
	0x038EFBA0 SMADDL X9, X8, X9, X31
	0x038EFBA4 UBFM X10, X9, 0x3F, 0x3F
	0x038EFBA8 UBFM X9, X9, 0x20, 0x3F
	0x038EFBAC LDR X2, [X22]
	0x038EFBB0 MOV X0, X21
	0x038EFBB4 LDP X20, X19, [X31 + 0x20]
	0x038EFBB8 LDP X22, X21, [X31 + 0x10]
	0x038EFBBC ADD W9, W9, W10
	0x038EFBC0 ADD W9, W9, W9, 0x1, LSL
	0x038EFBC4 SUB W1, W8, W9
	0x038EFBC8 LDR X30, [X31], #0x30
	0x038EFBCC B 0x2D1F64C
	0x038EFBD0 STR X30, [X31 - 0x30]!
	0x038EFBD4 STP X22, X21, [X31 + 0x10]
	0x038EFBD8 STP X20, X19, [X31 + 0x20]
	0x038EFBDC ADRP X20, 0xAF2000
	0x038EFBE0 ADRP X22, 0x85E000
	0x038EFBE4 ADRP X21, 0x85E000
	0x038EFBE8 LDRB W8, [X20 + 0x70A]
	0x038EFBEC LDR X22, [X22 + 0x7B0]
	0x038EFBF0 LDR X21, [X21 + 0x770]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF3000
	006 Move W8, [X21+1785]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1785], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x85F000
	022 Move X9, [X9+1824]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void AddTriangles(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> list)

Disassembly:
	0x038EFBF4 MOV X19, X0
	0x038EFBF8 TBNZ X8, 0x0, 0x38EFC1C
	0x038EFBFC ADRP X0, 0x85E000
	0x038EFC00 LDR X0, [X0 + 0x7B0]
	0x038EFC04 BL 0x1C16CF4
	0x038EFC08 ADRP X0, 0x85E000
	0x038EFC0C LDR X0, [X0 + 0x770]
	0x038EFC10 BL 0x1C16CF4
	0x038EFC14 MOVZ W8, 0x1
	0x038EFC18 STRB W8, [X20 + 0x70A]
	0x038EFC1C LDR X2, [X22]
	0x038EFC20 ADD X19, X19, 0x10
	0x038EFC24 MOVZ W1, 0x2
	0x038EFC28 MOV X0, X19
	0x038EFC2C BL 0x2D1F64C
	0x038EFC30 LDR X2, [X22]
	0x038EFC34 MOV X20, X0
	0x038EFC38 MOVZ W1, 0x1
	0x038EFC3C MOV X0, X19
	0x038EFC40 BL 0x2D1F64C
	0x038EFC44 LDR X3, [X21]
	0x038EFC48 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF3000
	006 Move W8, [X21+1786]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85F000
	014 Move X0, [X0+1832]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1786], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x85F000
	022 Move X8, [X8+1832]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.AddRange, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void ClearTriangles()

Disassembly:
	0x038EFC4C MOVZ W1, 0x2
	0x038EFC50 MOV X0, X19
	0x038EFC54 BL 0x2D1F6B0
	0x038EFC58 LDR X2, [X22]
	0x038EFC5C MOV X0, X19
	0x038EFC60 MOV W1, W31
	0x038EFC64 BL 0x2D1F64C
	0x038EFC68 LDR X3, [X21]
	0x038EFC6C MOV X2, X0
	0x038EFC70 MOVZ W1, 0x1
	0x038EFC74 MOV X0, X19
	0x038EFC78 BL 0x2D1F6B0
	0x038EFC7C LDR X3, [X21]
	0x038EFC80 MOV X0, X19
	0x038EFC84 MOV X2, X20
	0x038EFC88 LDP X20, X19, [X31 + 0x20]
	0x038EFC8C LDP X22, X21, [X31 + 0x10]
	0x038EFC90 MOV W1, W31
	0x038EFC94 LDR X30, [X31], #0x30
	0x038EFC98 B 0x2D1F6B0
	0x038EFC9C STP X30, X23, [X31 - 0x30]!
	0x038EFCA0 STP X22, X21, [X31 + 0x10]
	0x038EFCA4 STP X20, X19, [X31 + 0x20]
	0x038EFCA8 ADRP X22, 0xAF2000
	0x038EFCAC ADRP X23, 0x85E000
	0x038EFCB0 LDRB W8, [X22 + 0x70B]
	0x038EFCB4 LDR X23, [X23 + 0x770]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAF3000
	005 Move W8, [X20+1787]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x85F000
	012 Move X0, [X0+1840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1787], W8
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {33}
	019 Move W2, [X8+24]
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X0, [X8+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 Call Array.Clear, X0, X1, X2
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 

Method: System.Void Prepare(UnityEngine.ProBuilder.Poly2Tri.TriangulationContext tcx)

Disassembly:
	0x038EFCB8 MOV X19, X2
	0x038EFCBC MOV X20, X1
	0x038EFCC0 MOV X21, X0
	0x038EFCC4 TBNZ X8, 0x0, 0x38EFCDC
	0x038EFCC8 ADRP X0, 0x85E000
	0x038EFCCC LDR X0, [X0 + 0x770]
	0x038EFCD0 BL 0x1C16CF4
	0x038EFCD4 MOVZ W8, 0x1
	0x038EFCD8 STRB W8, [X22 + 0x70B]
	0x038EFCDC MOV X0, X21
	0x038EFCE0 BL 0x38EFBD0
	0x038EFCE4 MOV X0, X21
	0x038EFCE8 MOV X1, X20
	0x038EFCEC ADD X22, X21, 0x10
	0x038EFCF0 BL 0x38EF414
	0x038EFCF4 MOVZ W9, 0x5556
	0x038EFCF8 ADD W8, W0, 0x1
	0x038EFCFC MOVK W9, 0x55550000
	0x038EFD00 SMADDL X9, X8, X9, X31
	0x038EFD04 UBFM X10, X9, 0x3F, 0x3F
	0x038EFD08 UBFM X9, X9, 0x20, 0x3F
	0x038EFD0C LDR X3, [X23]
	0x038EFD10 MOV X0, X22
	0x038EFD14 MOV X2, X19
	0x038EFD18 LDP X20, X19, [X31 + 0x20]
	0x038EFD1C LDP X22, X21, [X31 + 0x10]
	0x038EFD20 ADD W9, W9, W10
	0x038EFD24 ADD W9, W9, W9, 0x1, LSL
	0x038EFD28 SUB W1, W8, W9
	0x038EFD2C LDP X30, X23, [X31], #0x30
	0x038EFD30 B 0x2D1F6B0
	0x038EFD34 STR X30, [X31 - 0x30]!
	0x038EFD38 STP X22, X21, [X31 + 0x10]
	0x038EFD3C STP X20, X19, [X31 + 0x20]
	0x038EFD40 ADRP X19, 0xAF2000
	0x038EFD44 ADRP X22, 0x804000
	0x038EFD48 ADRP X21, 0x85E000
	0x038EFD4C LDRB W8, [X19 + 0x70C]
	0x038EFD50 LDR X22, [X22 + 0xAC8]
	0x038EFD54 LDR X21, [X21 + 0x7B0]
	0x038EFD58 MOV X20, X0
	0x038EFD5C TBNZ X8, 0x0, 0x38EFD8C
	0x038EFD60 ADRP X0, 0x85E000
	0x038EFD64 LDR X0, [X0 + 0x7B0]
	0x038EFD68 BL 0x1C16CF4
	0x038EFD6C ADRP X0, 0x804000
	0x038EFD70 LDR X0, [X0 + 0xAC8]
	0x038EFD74 BL 0x1C16CF4
	0x038EFD78 ADRP X0, 0x806000
	0x038EFD7C LDR X0, [X0 + 0x3A0]
	0x038EFD80 BL 0x1C16CF4
	0x038EFD84 MOVZ W8, 0x1
	0x038EFD88 STRB W8, [X19 + 0x70C]
	0x038EFD8C LDR X0, [X22]
	0x038EFD90 MOVZ W1, 0x5
	0x038EFD94 BL 0x1C16D6C
	0x038EFD98 LDR X2, [X21]
	0x038EFD9C ADD X20, X20, 0x10
	0x038EFDA0 MOV X19, X0
	0x038EFDA4 MOV X0, X20
	0x038EFDA8 MOV W1, W31
	0x038EFDAC BL 0x2D1F64C
	0x038EFDB0 CBZ X0, 0x38EFDC0
	0x038EFDB4 LDR X8, [X0]
	0x038EFDB8 LDP X9, X1, [X8 + 0x168]
	0x038EFDBC BLR X9
	0x038EFDC0 CBZ X19, 0x38EFE74
	0x038EFDC4 LDR W8, [X19 + 0x18]
	0x038EFDC8 CBZ W8, 0x38EFE70
	0x038EFDCC CMP W8, 0x1
	0x038EFDD0 STR X0, [X19 + 0x20]
	0x038EFDD4 B.EQ 0x38EFE70
	0x038EFDD8 ADRP X22, 0x806000
	0x038EFDDC LDR X22, [X22 + 0x3A0]
	0x038EFDE0 MOVZ W1, 0x1
	0x038EFDE4 MOV X0, X20
	0x038EFDE8 LDR X8, [X22]
	0x038EFDEC STR X8, [X19 + 0x28]
	0x038EFDF0 LDR X2, [X21]
	0x038EFDF4 BL 0x2D1F64C
	0x038EFDF8 CBZ X0, 0x38EFE08
	0x038EFDFC LDR X8, [X0]
	0x038EFE00 LDP X9, X1, [X8 + 0x168]
	0x038EFE04 BLR X9
	0x038EFE08 LDR W8, [X19 + 0x18]
	0x038EFE0C CMP W8, 0x2
	0x038EFE10 B.LS 0x38EFE70
	0x038EFE14 CMP W8, 0x3
	0x038EFE18 STR X0, [X19 + 0x30]
	0x038EFE1C B.EQ 0x38EFE70
	0x038EFE20 LDR X8, [X22]
	0x038EFE24 MOVZ W1, 0x2
	0x038EFE28 MOV X0, X20
	0x038EFE2C STR X8, [X19 + 0x38]
	0x038EFE30 LDR X2, [X21]
	0x038EFE34 BL 0x2D1F64C
	0x038EFE38 CBZ X0, 0x38EFE48
	0x038EFE3C LDR X8, [X0]
	0x038EFE40 LDP X9, X1, [X8 + 0x168]
	0x038EFE44 BLR X9
	0x038EFE48 LDR W8, [X19 + 0x18]
	0x038EFE4C CMP W8, 0x4
	0x038EFE50 B.LS 0x38EFE70
	0x038EFE54 STR X0, [X19 + 0x40]
	0x038EFE58 MOV X0, X19
	0x038EFE5C LDP X20, X19, [X31 + 0x20]
	0x038EFE60 LDP X22, X21, [X31 + 0x10]
	0x038EFE64 MOV X1, X31
	0x038EFE68 LDR X30, [X31], #0x30
	0x038EFE6C B 0x32278CC
	0x038EFE70 BL 0x1C16F28
	0x038EFE74 BL 0x1C16F20
	0x038EFE78 STP X29, X30, [X31 - 0x60]!
	0x038EFE7C STP X28, X27, [X31 + 0x10]
	0x038EFE80 STP X26, X25, [X31 + 0x20]
	0x038EFE84 STP X24, X23, [X31 + 0x30]
	0x038EFE88 STP X22, X21, [X31 + 0x40]
	0x038EFE8C STP X20, X19, [X31 + 0x50]
	0x038EFE90 ADRP X19, 0xAF2000
	0x038EFE94 LDRB W8, [X19 + 0x70D]
	0x038EFE98 MOV X22, X0
	0x038EFE9C TBNZ X8, 0x0, 0x38EFEC0
	0x038EFEA0 ADRP X0, 0x85E000
	0x038EFEA4 LDR X0, [X0 + 0x7C8]
	0x038EFEA8 BL 0x1C16CF4
	0x038EFEAC ADRP X0, 0x85E000
	0x038EFEB0 LDR X0, [X0 + 0x7B0]
	0x038EFEB4 BL 0x1C16CF4
	0x038EFEB8 MOVZ W8, 0x1
	0x038EFEBC STRB W8, [X19 + 0x70D]
	0x038EFEC0 ADRP X25, 0x85E000
	0x038EFEC4 ADRP X26, 0x85E000
	0x038EFEC8 LDR X25, [X25 + 0x7C8]
	0x038EFECC LDR X26, [X26 + 0x7B0]
	0x038EFED0 MOVZ W28, 0xAAAB
	0x038EFED4 MOV W19, W31
	0x038EFED8 ADD X20, X22, 0x40
	0x038EFEDC ADD X21, X22, 0x28
	0x038EFEE0 ADD X22, X22, 0x10
	0x038EFEE4 MOVK W28, 0xAAAA0000
	0x038EFEE8 MOVZ W29, 0x2
	0x038EFEEC MOV X0, X20
	0x038EFEF0 MOV W1, W19
	0x038EFEF4 BL 0x38EFFA4
	0x038EFEF8 TBZ X0, 0x0, 0x38EFF74
	0x038EFEFC LDR X2, [X25]
	0x038EFF00 MOV X0, X21
	0x038EFF04 MOV W1, W19
	0x038EFF08 BL 0x2D1F64C
	0x038EFF0C CBZ X0, 0x38EFF74
	0x038EFF10 LDR X2, [X25]
	0x038EFF14 UMADDL X8, X29, X28, X31
	0x038EFF18 UBFM X8, X8, 0x21, 0x3F
	0x038EFF1C ADD W8, W8, W8, 0x1, LSL
	0x038EFF20 MOVZ W9, 0x2
	0x038EFF24 MOV X0, X21
	0x038EFF28 MOV W1, W19
	0x038EFF2C SUB W27, W9, W8
	0x038EFF30 BL 0x2D1F64C
	0x038EFF34 LDR X2, [X26]
	0x038EFF38 CMP W19, 0x2
	0x038EFF3C MOV X23, X0
	0x038EFF40 CSINC W1, W31, W19, EQ
	0x038EFF44 MOV X0, X22
	0x038EFF48 BL 0x2D1F64C
	0x038EFF4C LDR X2, [X26]
	0x038EFF50 MOV X24, X0
	0x038EFF54 ADD W1, W19, W27
	0x038EFF58 MOV X0, X22
	0x038EFF5C BL 0x2D1F64C
	0x038EFF60 CBZ X23, 0x38EFFA0
	0x038EFF64 MOV X2, X0
	0x038EFF68 MOV X0, X23
	0x038EFF6C MOV X1, X24
	0x038EFF70 BL 0x38F0008
	0x038EFF74 ADD W19, W19, 0x1
	0x038EFF78 CMP W19, 0x3
	0x038EFF7C ADD W29, W29, 0x1
	0x038EFF80 B.NE 0x38EFEEC
	0x038EFF84 LDP X20, X19, [X31 + 0x50]
	0x038EFF88 LDP X22, X21, [X31 + 0x40]
	0x038EFF8C LDP X24, X23, [X31 + 0x30]
	0x038EFF90 LDP X26, X25, [X31 + 0x20]
	0x038EFF94 LDP X28, X27, [X31 + 0x10]
	0x038EFF98 LDP X29, X30, [X31], #0x60
	0x038EFF9C RET
	0x038EFFA0 BL 0x1C16F20
	0x038EFFA4 STP X30, X19, [X31 - 0x10]!
	0x038EFFA8 CMP W1, 0x2
	0x038EFFAC B.EQ 0x38EFFF0
	0x038EFFB0 CMP W1, 0x1
	0x038EFFB4 B.EQ 0x38EFFF8
	0x038EFFB8 CBZ W1, 0x38EFFFC
	0x038EFFBC ADRP X0, 0x80E000
	0x038EFFC0 LDR X0, [X0 + 0xF78]
	0x038EFFC4 BL 0x1C16D08
	0x038EFFC8 BL 0x1C16F10
	0x038EFFCC MOV X1, X31
	0x038EFFD0 MOV X19, X0
	0x038EFFD4 BL 0x3379B10
	0x038EFFD8 ADRP X0, 0x85E000
	0x038EFFDC LDR X0, [X0 + 0x7D0]
	0x038EFFE0 BL 0x1C16D08
	0x038EFFE4 MOV X1, X0
	0x038EFFE8 MOV X0, X19
	0x038EFFEC BL 0x1C16DEC
	0x038EFFF0 ADD X0, X0, 0x2
	0x038EFFF4 B 0x38EFFFC
	0x038EFFF8 ADD X0, X0, 0x1
	0x038EFFFC LDRB W0, [X0]
	0x038F0000 LDP X30, X19, [X31], #0x10
	0x038F0004 RET
	0x038F0008 STP X30, X19, [X31 - 0x10]!
	0x038F000C MOV X19, X0
	0x038F0010 BL 0x38EF644
	0x038F0014 ADDS W31, W0, 0x1
	0x038F0018 B.EQ 0x38F0030
	0x038F001C MOV W1, W0
	0x038F0020 ADD X0, X19, 0x40
	0x038F0024 MOVZ W2, 0x1
	0x038F0028 LDP X30, X19, [X31], #0x10
	0x038F002C B 0x38F0354
	0x038F0030 LDP X30, X19, [X31], #0x10
	0x038F0034 RET
	0x038F0038 STP X29, X30, [X31 - 0x60]!
	0x038F003C STP X28, X27, [X31 + 0x10]
	0x038F0040 STP X26, X25, [X31 + 0x20]
	0x038F0044 STP X24, X23, [X31 + 0x30]
	0x038F0048 STP X22, X21, [X31 + 0x40]
	0x038F004C STP X20, X19, [X31 + 0x50]
	0x038F0050 ADRP X20, 0xAF1000
	0x038F0054 LDRB W8, [X20 + 0x70E]
	0x038F0058 MOV X19, X1
	0x038F005C MOV X21, X0
	0x038F0060 TBNZ X8, 0x0, 0x38F0078
	0x038F0064 ADRP X0, 0x85D000
	0x038F0068 LDR X0, [X0 + 0x7B0]
	0x038F006C BL 0x1C16CF4
	0x038F0070 MOVZ W8, 0x1
	0x038F0074 STRB W8, [X20 + 0x70E]
	0x038F0078 ADRP X24, 0x85D000
	0x038F007C LDR X24, [X24 + 0x7B0]
	0x038F0080 MOVZ W26, 0xAAAB
	0x038F0084 MOV W22, W31
	0x038F0088 ADD X20, X21, 0x40
	0x038F008C ADD X21, X21, 0x10
	0x038F0090 MOVZ W25, 0x2
	0x038F0094 MOVK W26, 0xAAAA0000
	0x038F0098 MOVZ W27, 0x2
	0x038F009C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X21, 0xAF3000
	013 Move W8, [X21+1788]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {52}
	020 Move X0, 0x85F000
	021 Move X0, [X0+1848]
	022 Call 0x1C17CF4
	023 Move X0, 0x85F000
	024 Move X0, [X0+1856]
	025 Call 0x1C17CF4
	026 Move X0, 0x85F000
	027 Move X0, [X0+1864]
	028 Call 0x1C17CF4
	029 Move X0, 0x85F000
	030 Move X0, [X0+1664]
	031 Call 0x1C17CF4
	032 Move X0, 0x85F000
	033 Move X0, [X0+1840]
	034 Call 0x1C17CF4
	035 Move X0, 0x85F000
	036 Move X0, [X0+1872]
	037 Call 0x1C17CF4
	038 Move X0, 0x85F000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0x85F000
	042 Move X0, [X0+1888]
	043 Call 0x1C17CF4
	044 Move X0, 0x85F000
	045 Move X0, [X0+1800]
	046 Call 0x1C17CF4
	047 Move X0, 0x85F000
	048 Move X0, [X0+1896]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+1788], W8
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move X8, [X20+40]
	056 Compare X8, 0
	057 JumpIfEqual {68}
	058 Move W2, [X8+24]
	059 Move W9, [X8+28]
	060 Add W9, W9, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X8+24], W31
	063 Move [X8+28], W9
	064 Move X0, [X8+16]
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X8, [X20+16]
	069 Compare X8, 0
	070 JumpIfEqual {124}
	071 Move W21, [X8+24]
	072 Move X8, 0x85F000
	073 Move X8, [X8+1896]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X8, 0x85F000
	077 Move X8, [X8+1880]
	078 Move W1, W21
	079 Move X22, X0
	080 Move X2, [X8]
	081 Call List`1<Object>..ctor, X0, X1
	082 Move [X20+40], X22
	083 Move X0, [X20+16]
	084 Compare X0, 0
	085 JumpIfEqual {124}
	086 Move X25, 0x85F000
	087 Move X23, 0x85F000
	088 Move X27, 0x85F000
	089 Move X26, 0x85F000
	090 Move X24, 0x85F000
	091 Move X25, [X25+1800]
	092 Move X23, [X23+1664]
	093 Move X27, [X27+1872]
	094 Move X26, [X26+1856]
	095 Move X24, [X24+1848]
	096 Move W21, W31
	097 Move W8, [X0+24]
	098 Move X2, [X25]
	099 Subtract W8, W8, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W1, W21
	102 Call List`1<Object>.get_Item, X0, X1
	103 Move X8, [X20+16]
	104 Compare X8, 0
	105 JumpIfEqual {124}
	106 Move X2, [X25]
	107 Add W21, W21, 1
	108 Move X22, X0
	109 Move X0, X8
	110 Move W1, W21
	111 Call List`1<Object>.get_Item, X0, X1
	112 Compare X19, 0
	113 JumpIfEqual {124}
	114 Move X8, [X19]
	115 Move X2, X0
	116 Move X0, X19
	117 Move X1, X22
	118 Move X9, [X8+408]
	119 Move X3, [X8+416]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X0, [X20+16]
	122 Compare X0, 0
	123 JumpIfNotEqual {97}
	124 Call 0x1C17F20
	125 Move W1, W31
	126 Call List`1<Object>.get_Item, X0, X1
	127 Move X8, [X20+16]
	128 Compare X8, 0
	129 JumpIfEqual {124}
	130 Move W9, [X8+24]
	131 Move X2, [X25]
	132 Move X21, X0
	133 Move X0, X8
	134 Subtract W1, W9, 1
	135 Call List`1<Object>.get_Item, X0, X1
	136 Compare X19, 0
	137 JumpIfEqual {124}
	138 Move X8, [X19]
	139 Move X2, X0
	140 Move X0, X19
	141 Move X1, X21
	142 Move X9, [X8+408]
	143 Move X3, [X8+416]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X0, [X19+32]
	146 Compare X0, 0
	147 JumpIfEqual {124}
	148 Move X1, [X20+16]
	149 Move X2, [X23]
	150 Call List`1<Object>.AddRange, X0, X1
	151 Move X0, [X20+32]
	152 Compare X0, 0
	153 JumpIfEqual {224}
	154 Move X1, [X27]
	155 Add X8, X31, 8
	156 Call List`1<Object>.GetEnumerator, X0
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move X8, [X31+24]
	159 Move [X31+2], V0
	160 Move [X31+48], X8
	161 Move X1, [X26]
	162 Add X0, X31, 32
	163 Call Enumerator<Object>.MoveNext, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {221}
	168 Move X27, [X31+48]
	169 Move W21, 1
	170 Compare X27, 0
	171 JumpIfEqual {244}
	172 Move X8, [X27+16]
	173 Compare X8, 0
	174 JumpIfEqual {245}
	175 Move W9, [X8+24]
	176 Move X2, [X25]
	177 Subtract W1, W21, 1
	178 Subtract W9, W9, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X0, X8
	181 Call List`1<Object>.get_Item, X0, X1
	182 Move X22, X0
	183 Move X0, [X27+16]
	184 Compare X0, 0
	185 JumpIfEqual {246}
	186 Move X2, [X25]
	187 Move W1, W21
	188 Call List`1<Object>.get_Item, X0, X1
	189 Move X8, [X19]
	190 Add W21, W21, 1
	191 Move X2, X0
	192 Move X9, [X8+408]
	193 Move X3, [X8+416]
	194 Move X0, X19
	195 Move X1, X22
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X0, X8
	198 Move W1, W31
	199 Call List`1<Object>.get_Item, X0, X1
	200 Move X21, X0
	201 Move X0, [X27+16]
	202 Compare X0, 0
	203 JumpIfEqual {247}
	204 Move W8, [X0+24]
	205 Move X2, [X25]
	206 Subtract W1, W8, 1
	207 Call List`1<Object>.get_Item, X0, X1
	208 Move X8, [X19]
	209 Move X2, X0
	210 Move X9, [X8+408]
	211 Move X3, [X8+416]
	212 Move X0, X19
	213 Move X1, X21
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X0, [X19+32]
	216 Compare X0, 0
	217 JumpIfEqual {248}
	218 Move X1, [X27+16]
	219 Move X2, [X23]
	220 Call List`1<Object>.AddRange, X0, X1
	221 Move X1, [X24]
	222 Add X0, X31, 32
	223 Call Enumerator<Object>.Dispose, X0
	224 Move X1, [X20+24]
	225 Compare X1, 0
	226 JumpIfEqual {232}
	227 Move X0, [X19+32]
	228 Compare X0, 0
	229 JumpIfEqual {124}
	230 Move X2, [X23]
	231 Call List`1<Object>.AddRange, X0, X1
	232 Move X20, [X31+128]
	233 Move X19, [X31+136]
	234 Move X22, [X31+112]
	235 Move X21, [X31+120]
	236 Move X24, [X31+96]
	237 Move X23, [X31+104]
	238 Move X26, [X31+80]
	239 Move X25, [X31+88]
	240 Move X30, [X31+64]
	241 Move X27, [X31+72]
	242 Add X31, X31, 144
	243 Return 
	244 Call 0x1C17F20
	245 Call 0x1C17F20
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Call 0x3EB2AD0
	251 Move X21, [X0]
	252 Call 0x3EB2AE0
	253 Move X1, [X24]
	254 Add X0, X31, 32
	255 Call Enumerator<Object>.Dispose, X0
	256 Compare X21, 0
	257 JumpIfEqual {224}
	258 Move X0, X21
	259 Call 0x1C17F18
	260 Move X19, X0
	261 Move X21, X31
	262 Move X19, X0
	263 Move X1, [X24]
	264 Add X0, X31, 32
	265 Call Enumerator<Object>.Dispose, X0
	266 Compare X21, 0
	267 JumpIfNotEqual {270}
	268 Move X0, X19
	269 Call 0x1D2D690
	270 Move X0, X21
	271 Call 0x1C17F18
	272 Call 0x1991590

