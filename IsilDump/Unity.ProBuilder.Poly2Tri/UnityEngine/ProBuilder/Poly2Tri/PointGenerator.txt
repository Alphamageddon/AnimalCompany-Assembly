Type: UnityEngine.ProBuilder.Poly2Tri.PointGenerator

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> UniformDistribution(System.Int32 n, System.Double scale)

Disassembly:
	0x038F66A0 MOV X0, X19
	0x038F66A4 LDP X20, X19, [X31 + 0x10]
	0x038F66A8 LDP X30, X21, [X31], #0x20
	0x038F66AC RET
	0x038F66B0 STP X30, X21, [X31 - 0x20]!
	0x038F66B4 STP X20, X19, [X31 + 0x10]
	0x038F66B8 ADRP X20, 0xAEB000
	0x038F66BC ADRP X21, 0x857000
	0x038F66C0 ADRP X19, 0x857000
	0x038F66C4 LDRB W8, [X20 + 0x758]
	0x038F66C8 LDR X21, [X21 + 0x9D8]
	0x038F66CC LDR X19, [X19 + 0x9E8]
	0x038F66D0 TBNZ X8, 0x0, 0x38F66F4
	0x038F66D4 ADRP X0, 0x857000
	0x038F66D8 LDR X0, [X0 + 0x9D8]
	0x038F66DC BL 0x1C16CF4
	0x038F66E0 ADRP X0, 0x857000
	0x038F66E4 LDR X0, [X0 + 0x9E8]
	0x038F66E8 BL 0x1C16CF4
	0x038F66EC MOVZ W8, 0x1
	0x038F66F0 STRB W8, [X20 + 0x758]
	0x038F66F4 LDR X0, [X21]
	0x038F66F8 BL 0x1C16F10
	0x038F66FC LDR X20, [X19]
	0x038F6700 MOV X1, X31
	0x038F6704 MOV X19, X0
	0x038F6708 BL 0x33BDD8C
	0x038F670C MOVZ W8, 0x2
	0x038F6710 STR W8, [X19 + 0x10]
	0x038F6714 STR X20, [X19 + 0x18]
	0x038F6718 MOV X0, X19
	0x038F671C LDP X20, X19, [X31 + 0x10]
	0x038F6720 LDP X30, X21, [X31], #0x20
	0x038F6724 RET
	0x038F6728 STP X30, X21, [X31 - 0x20]!
	0x038F672C STP X20, X19, [X31 + 0x10]
	0x038F6730 ADRP X20, 0xAEB000
	0x038F6734 ADRP X21, 0x857000
	0x038F6738 ADRP X19, 0x857000
	0x038F673C LDRB W8, [X20 + 0x759]
	0x038F6740 LDR X21, [X21 + 0x9D8]
	0x038F6744 LDR X19, [X19 + 0x9F0]
	0x038F6748 TBNZ X8, 0x0, 0x38F676C
	0x038F674C ADRP X0, 0x857000
	0x038F6750 LDR X0, [X0 + 0x9D8]
	0x038F6754 BL 0x1C16CF4
	0x038F6758 ADRP X0, 0x857000
	0x038F675C LDR X0, [X0 + 0x9F0]
	0x038F6760 BL 0x1C16CF4
	0x038F6764 MOVZ W8, 0x1
	0x038F6768 STRB W8, [X20 + 0x759]
	0x038F676C LDR X0, [X21]
	0x038F6770 BL 0x1C16F10
	0x038F6774 LDR X20, [X19]
	0x038F6778 MOV X1, X31
	0x038F677C MOV X19, X0
	0x038F6780 BL 0x33BDD8C
	0x038F6784 MOVZ W8, 0x2
	0x038F6788 STR W8, [X19 + 0x10]
	0x038F678C STR X20, [X19 + 0x18]
	0x038F6790 MOV X0, X19
	0x038F6794 LDP X20, X19, [X31 + 0x10]
	0x038F6798 LDP X30, X21, [X31], #0x20
	0x038F679C RET
	0x038F67A0 STP W1, W2, [X0]
	0x038F67A4 RET
	0x038F67A8 LDP W9, W8, [X0]
	0x038F67AC SUB W8, W8, W9
	0x038F67B0 CMP W8, 0x1
	0x038F67B4 CSET W0, GT
	0x038F67B8 RET
	0x038F67BC LDP W8, W9, [X0]
	0x038F67C0 SUB W9, W9, W8
	0x038F67C4 CMP W9, 0x0
	0x038F67C8 CINC W9, W9, LT
	0x038F67CC ADD W0, W8, W9, 0x1, ASR
	0x038F67D0 RET
	0x038F67D4 SUB X31, X31, 0x30
	0x038F67D8 STP X30, X21, [X31 + 0x10]
	0x038F67DC STP X20, X19, [X31 + 0x20]
	0x038F67E0 ADRP X20, 0xAEB000
	0x038F67E4 ADRP X21, 0x7FD000
	0x038F67E8 LDRB W8, [X20 + 0x75A]
	0x038F67EC LDR X21, [X21 + 0xAC8]
	0x038F67F0 MOV X19, X0
	0x038F67F4 TBNZ X8, 0x0, 0x38F6830
	0x038F67F8 ADRP X0, 0x7FD000
	0x038F67FC LDR X0, [X0 + 0xAC8]
	0x038F6800 BL 0x1C16CF4
	0x038F6804 ADRP X0, 0x82A000
	0x038F6808 LDR X0, [X0 + 0x360]
	0x038F680C BL 0x1C16CF4
	0x038F6810 ADRP X0, 0x7FD000
	0x038F6814 LDR X0, [X0 + 0x838]
	0x038F6818 BL 0x1C16CF4
	0x038F681C ADRP X0, 0x857000
	0x038F6820 LDR X0, [X0 + 0x9F8]
	0x038F6824 BL 0x1C16CF4
	0x038F6828 MOVZ W8, 0x1
	0x038F682C STRB W8, [X20 + 0x75A]
	0x038F6830 LDR X0, [X21]
	0x038F6834 MOVZ W1, 0x6
	0x038F6838 BL 0x1C16D6C
	0x038F683C CBZ X0, 0x38F6918
	0x038F6840 LDR W8, [X0 + 0x18]
	0x038F6844 MOV X20, X0
	0x038F6848 CBZ W8, 0x38F6914
	0x038F684C ADRP X8, 0x82A000
	0x038F6850 LDR X8, [X8 + 0x360]
	0x038F6854 MOV X0, X19
	0x038F6858 MOV X1, X31
	0x038F685C LDR X8, [X8]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xAEC000
	014 Move X22, 0x858000
	015 Move X20, 0x858000
	016 Move W8, [X21+1866]
	017 Move X22, [X22+1624]
	018 Move X20, [X20+1632]
	019 Move V8, V0
	020 Move W19, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x858000
	026 Move X0, [X0+1704]
	027 Call 0x1C17CF4
	028 Move X0, 0x858000
	029 Move X0, [X0+1632]
	030 Call 0x1C17CF4
	031 Move X0, 0x858000
	032 Move X0, [X0+1624]
	033 Call 0x1C17CF4
	034 Move X0, 0x858000
	035 Move X0, [X0+2448]
	036 Call 0x1C17CF4
	037 Move X0, 0x858000
	038 Move X0, [X0+2048]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1866], W8
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, [X20]
	045 Move X20, X0
	046 Call List`1<Object>..ctor, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X23, 0x858000
	049 Move X24, 0x858000
	050 Move X25, 0x858000
	051 Move X23, [X23+2448]
	052 Move X24, [X24+2048]
	053 Move X25, [X25+1704]
	054 Move W22, W31
	055 Move D11, 0.5
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X23]
	062 Move X8, [X0+184]
	063 Move X0, [X8]
	064 Compare X0, 0
	065 JumpIfEqual {131}
	066 Move X8, [X0]
	067 Move X9, [X8+440]
	068 Move X1, [X8+448]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X23]
	071 Move X8, [X8+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {131}
	075 Move X8, [X0]
	076 Move V9, V0
	077 Move X9, [X8+440]
	078 Move X1, [X8+448]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, [X24]
	081 Move V10, V0
	082 Call 0x1C17F10
	083 Subtract D0, D11, D9
	084 Subtract D1, D11, D10
	085 Move X1, X31
	086 Move X21, X0
	087 Multiply D9, D0, D8
	088 Multiply D10, D1, D8
	089 Call Object..ctor, X0
	090 Move [X21+24], D9
	091 Move [X21+32], D10
	092 Move [X21+40], W22
	093 Compare X20, 0
	094 JumpIfEqual {131}
	095 Move W10, [X20+28]
	096 Move X8, [X20+16]
	097 Move X9, [X25]
	098 Add W10, W10, 1
	099 Move [X20+28], W10
	100 Compare X8, 0
	101 JumpIfEqual {131}
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Move W11, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add W9, W10, 1
	106 Add X8, X8, X10
	107 Move [X20+24], W9
	108 Move [X8+32], X21
	109 Move X8, [X9+32]
	110 Move X0, X20
	111 Move X1, X21
	112 Move X8, [X8+192]
	113 Move X2, [X8+112]
	114 Call List`1<Object>.AddWithResize, X0, X1
	115 Add W22, W22, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X20
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X30, [X31+32]
	125 Move X25, [X31+40]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Move D11, [X31+96]
	129 Move D10, [X31+104]
	130 Return X0
	131 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> UniformGrid(System.Int32 n, System.Double scale)

Disassembly:
	0x038F6860 STR X8, [X20 + 0x20]
	0x038F6864 BL 0x337B6E0
	0x038F6868 LDR W8, [X20 + 0x18]
	0x038F686C CMP W8, 0x1
	0x038F6870 B.LS 0x38F6914
	0x038F6874 CMP W8, 0x2
	0x038F6878 STR X0, [X20 + 0x28]
	0x038F687C B.EQ 0x38F6914
	0x038F6880 ADRP X8, 0x7FD000
	0x038F6884 LDR X8, [X8 + 0x838]
	0x038F6888 ADD X0, X19, 0x4
	0x038F688C MOV X1, X31
	0x038F6890 LDR X8, [X8]
	0x038F6894 STR X8, [X20 + 0x30]
	0x038F6898 BL 0x337B6E0
	0x038F689C LDR W8, [X20 + 0x18]
	0x038F68A0 CMP W8, 0x3
	0x038F68A4 B.LS 0x38F6914
	0x038F68A8 CMP W8, 0x4
	0x038F68AC STR X0, [X20 + 0x38]
	0x038F68B0 B.EQ 0x38F6914
	0x038F68B4 ADRP X8, 0x857000
	0x038F68B8 LDR X8, [X8 + 0x9F8]
	0x038F68BC ADD X0, X31, 0xC
	0x038F68C0 MOV X1, X31
	0x038F68C4 LDR X8, [X8]
	0x038F68C8 STR X8, [X20 + 0x40]
	0x038F68CC LDP W8, W9, [X19]
	0x038F68D0 SUB W9, W9, W8
	0x038F68D4 CMP W9, 0x0
	0x038F68D8 CINC W9, W9, LT
	0x038F68DC ADD W8, W8, W9, 0x1, ASR
	0x038F68E0 STR W8, [X31 + 0xC]
	0x038F68E4 BL 0x337B6E0
	0x038F68E8 LDR W8, [X20 + 0x18]
	0x038F68EC CMP W8, 0x5
	0x038F68F0 B.LS 0x38F6914
	0x038F68F4 STR X0, [X20 + 0x48]
	0x038F68F8 MOV X0, X20
	0x038F68FC MOV X1, X31
	0x038F6900 BL 0x32278CC
	0x038F6904 LDP X20, X19, [X31 + 0x20]
	0x038F6908 LDP X30, X21, [X31 + 0x10]
	0x038F690C ADD X31, X31, 0x30
	0x038F6910 RET
	0x038F6914 BL 0x1C16F28
	0x038F6918 BL 0x1C16F20
	0x038F691C ADRP X9, 0xFFFFFFFFFD1F6000
	0x038F6920 LDR V0, [X9 + 0x8E]
	0x038F6924 MOVZ X9, 0x9
	0x038F6928 STP X31, X9, [X8 + 0x10]
	0x038F692C STR V0, [X8]
	0x038F6930 RET
	0x038F6934 ADRP X8, 0xFFFFFFFFFD1F6000
	0x038F6938 LDR V0, [X8 + 0x8E]
	0x038F693C MOVZ X8, 0x9
	0x038F6940 STP X31, X8, [X0 + 0x10]
	0x038F6944 STR V0, [X0]
	0x038F6948 RET
	0x038F694C LDRB W0, [X0]
	0x038F6950 RET
	0x038F6954 AND W8, W1, 0x1
	0x038F6958 STRB W8, [X0]
	0x038F695C RET
	0x038F6960 LDRB W0, [X0 + 0x1]
	0x038F6964 RET
	0x038F6968 AND W8, W1, 0x1
	0x038F696C STRB W8, [X0 + 0x1]
	0x038F6970 RET
	0x038F6974 LDRB W0, [X0 + 0x2]
	0x038F6978 RET
	0x038F697C AND W8, W1, 0x1
	0x038F6980 STRB W8, [X0 + 0x2]
	0x038F6984 RET
	0x038F6988 LDRB W0, [X0 + 0x3]
	0x038F698C RET
	0x038F6990 AND W8, W1, 0x1
	0x038F6994 STRB W8, [X0 + 0x3]
	0x038F6998 RET
	0x038F699C LDR W0, [X0 + 0x4]
	0x038F69A0 RET
	0x038F69A4 STR W1, [X0 + 0x4]
	0x038F69A8 RET
	0x038F69AC LDP S0, S1, [X0 + 0x8]
	0x038F69B0 RET
	0x038F69B4 STP S0, S1, [X0 + 0x8]
	0x038F69B8 RET
	0x038F69BC LDP S0, S1, [X0 + 0x10]
	0x038F69C0 RET
	0x038F69C4 STP S0, S1, [X0 + 0x10]
	0x038F69C8 RET
	0x038F69CC LDR V0, [X0 + 0x18]
	0x038F69D0 RET
	0x038F69D4 STR S0, [X0 + 0x18]
	0x038F69D8 RET
	0x038F69DC LDR W0, [X0 + 0x1C]
	0x038F69E0 RET
	0x038F69E4 STR W1, [X0 + 0x1C]
	0x038F69E8 RET

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xAEC000
	015 Move X22, 0x858000
	016 Move X20, 0x858000
	017 Move W8, [X21+1867]
	018 Move X22, [X22+1624]
	019 Move X20, [X20+1632]
	020 Move V8, V0
	021 Move W19, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x858000
	027 Move X0, [X0+1704]
	028 Call 0x1C17CF4
	029 Move X0, 0x858000
	030 Move X0, [X0+1632]
	031 Call 0x1C17CF4
	032 Move X0, 0x858000
	033 Move X0, [X0+1624]
	034 Call 0x1C17CF4
	035 Move X0, 0x858000
	036 Move X0, [X0+2048]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1867], W8
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X1, [X20]
	043 Move X20, X0
	044 Call List`1<Object>..ctor, X0
	045 Add W22, W19, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X24, 0x858000
	048 Move X25, 0x858000
	049 Move X24, [X24+2048]
	050 Move X25, [X25+1704]
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 Move D1, 0.5
	053 Move W23, W31
	054 NotImplemented "Instruction FDIV not yet implemented."
	055 Multiply D8, D8, D1
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 Multiply D0, D9, D0
	058 Move W26, W31
	059 Subtract D10, D8, D0
	060 Move X0, [X24]
	061 Call 0x1C17F10
	062 NotImplemented "Instruction SCVTF not yet implemented."
	063 Multiply D0, D9, D0
	064 Move X1, X31
	065 Move X21, X0
	066 Subtract D11, D8, D0
	067 Call Object..ctor, X0
	068 Move [X21+24], D10
	069 Move [X21+32], D11
	070 Move [X21+40], W23
	071 Compare X20, 0
	072 JumpIfEqual {112}
	073 Move W10, [X20+28]
	074 Move X8, [X20+16]
	075 Move X9, [X25]
	076 Add W10, W10, 1
	077 Move [X20+28], W10
	078 Compare X8, 0
	079 JumpIfEqual {112}
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Move W11, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add W9, W10, 1
	084 Add X8, X8, X10
	085 Move [X20+24], W9
	086 Move [X8+32], X21
	087 Move X8, [X9+32]
	088 Move X0, X20
	089 Move X1, X21
	090 Move X8, [X8+192]
	091 Move X2, [X8+112]
	092 Call List`1<Object>.AddWithResize, X0, X1
	093 Add W26, W26, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W23, W23, 1
	097 Move X0, X20
	098 Move X20, [X31+96]
	099 Move X19, [X31+104]
	100 Move X22, [X31+80]
	101 Move X21, [X31+88]
	102 Move X24, [X31+64]
	103 Move X23, [X31+72]
	104 Move X26, [X31+48]
	105 Move X25, [X31+56]
	106 Move X30, [X31+32]
	107 Move D9, [X31+16]
	108 Move D8, [X31+24]
	109 Move D11, [X31+112]
	110 Move D10, [X31+120]
	111 Return X0
	112 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x038F69EC LDRB W8, [X1]
	0x038F69F0 AND W8, W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x038F69F4 STRB W8, [X0]
	0x038F69F8 LDRB W8, [X1 + 0x1]
	0x038F69FC AND W8, W8, 0x1
	0x038F6A00 STRB W8, [X0 + 0x1]
	0x038F6A04 LDRB W8, [X1 + 0x2]
	0x038F6A08 AND W8, W8, 0x1
	0x038F6A0C STRB W8, [X0 + 0x2]
	0x038F6A10 LDRB W8, [X1 + 0x3]
	0x038F6A14 AND W8, W8, 0x1
	0x038F6A18 STRB W8, [X0 + 0x3]
	0x038F6A1C LDR W8, [X1 + 0x4]
	0x038F6A20 STR W8, [X0 + 0x4]
	0x038F6A24 LDR X8, [X1 + 0x8]
	0x038F6A28 STR X8, [X0 + 0x8]
	0x038F6A2C LDR X8, [X1 + 0x10]
	0x038F6A30 STR X8, [X0 + 0x10]
	0x038F6A34 LDR V0, [X1 + 0x18]
	0x038F6A38 STR S0, [X0 + 0x18]
	0x038F6A3C LDR W8, [X1 + 0x1C]
	0x038F6A40 STR W8, [X0 + 0x1C]
	0x038F6A44 RET
	0x038F6A48 ADRP X9, 0xFFFFFFFFFD1F6000
	0x038F6A4C LDR V0, [X9 + 0x8E]
	0x038F6A50 MOVZ X9, 0x9
	0x038F6A54 STP X31, X9, [X8 + 0x10]
	0x038F6A58 STR V0, [X8]
	0x038F6A5C RET
	0x038F6A60 ADRP X9, 0xFFFFFFFFFD1F4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xAEC000
	006 Move X21, 0x805000
	007 Move X20, 0x858000
	008 Move W8, [X19+1868]
	009 Move X21, [X21+744]
	010 Move X20, [X20+2448]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x858000
	016 Move X0, [X0+2448]
	017 Call 0x1C17CF4
	018 Move X0, 0x805000
	019 Move X0, [X0+744]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1868], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Random..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

