Type: UnityEngine.ProBuilder.Poly2Tri.DTSweepDebugContext

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle get_PrimaryTriangle()

Disassembly:
	0x038F5A8C STP X20, X19, [X31 + 0xB0]
	0x038F5A90 ADRP X19, 0xAEC000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_PrimaryTriangle(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle value)

Disassembly:
	0x038F36BC ADRP X23, 0x85A000
	0x038F36C0 LDR X20, [X20 + 0x10]
	0x038F36C4 LDR X0, [X8]
	0x038F36C8 LDR X21, [X21 + 0x8E0]
	0x038F36CC LDR X23, [X23 + 0x8D0]
	0x038F36D0 BL 0x1C16F10
	0x038F36D4 LDR X2, [X21]
	0x038F36D8 MOV X1, X22
	0x038F36DC MOV X3, X31
	0x038F36E0 MOV X21, X0
	0x038F36E4 BL 0x2D2F428
	0x038F36E8 LDR X2, [X23]
	0x038F36EC MOV X0, X20
	0x038F36F0 MOV X1, X21
	0x038F36F4 BL 0x21C4138
	0x038F36F8 CBZ X0, 0x38F372C
	0x038F36FC ADRP X8, 0x85A000
	0x038F3700 LDR X8, [X8 + 0x8C8]
	0x038F3704 STR X19, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAEF000
	006 Move W8, [X21+1847]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85B000
	014 Move X0, [X0+2184]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1847], W8
	018 Move X8, [X20+16]
	019 Move [X20+24], X19
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle get_SecondaryTriangle()

Disassembly:
	0x038F5A94 ADRP X21, 0x858000
	0x038F5A98 LDRB W8, [X19 + 0x74D]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_SecondaryTriangle(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle value)

Disassembly:
	0x038F47A8 MOV V10.16B, V12.16B
	0x038F47AC LDR X1, [X20]
	0x038F47B0 ADD X0, X31, 0x8
	0x038F47B4 BL 0x2BC4350
	0x038F47B8 TBZ X0, 0x0, 0x38F47EC
	0x038F47BC LDR X8, [X31 + 0x18]
	0x038F47C0 CBZ X8, 0x38F4894
	0x038F47C4 LDP D0, D12, [X8 + 0x18]
	0x038F47C8 FCMP D0, D9
	0x038F47CC FCSEL D9, D0, D9, GT
	0x038F47D0 FCMP D0, D8
	0x038F47D4 FCSEL D8, D0, D8, MI
	0x038F47D8 FCMP D12, D11
	0x038F47DC FCSEL D11, D12, D11, GT
	0x038F47E0 FCMP D12, D10
	0x038F47E4 B.PL 0x38F47AC
	0x038F47E8 B 0x38F47A8
	0x038F47EC LDR X1, [X21]
	0x038F47F0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAEE000
	006 Move W8, [X21+1848]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85A000
	014 Move X0, [X0+2280]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1848], W8
	018 Move X8, [X20+16]
	019 Move [X20+32], X19
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint get_ActivePoint()

Disassembly:
	0x038F5A9C LDR X21, [X21 + 0x998]
	0x038F5AA0 MOV W20, W0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ActivePoint(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint value)

Disassembly:
	0x038F5AA4 MOV V8.16B, V0.16B
	0x038F5AA8 TBNZ X8, 0x0, 0x38F5AF0
	0x038F5AAC ADRP X0, 0x7FE000
	0x038F5AB0 LDR X0, [X0 + 0x5A8]
	0x038F5AB4 BL 0x1C16CF4
	0x038F5AB8 ADRP X0, 0x858000
	0x038F5ABC LDR X0, [X0 + 0x9A0]
	0x038F5AC0 BL 0x1C16CF4
	0x038F5AC4 ADRP X0, 0x858000
	0x038F5AC8 LDR X0, [X0 + 0x998]
	0x038F5ACC BL 0x1C16CF4
	0x038F5AD0 ADRP X0, 0x858000
	0x038F5AD4 LDR X0, [X0 + 0x710]
	0x038F5AD8 BL 0x1C16CF4
	0x038F5ADC ADRP X0, 0x858000
	0x038F5AE0 LDR X0, [X0 + 0x9A8]
	0x038F5AE4 BL 0x1C16CF4
	0x038F5AE8 MOVZ W8, 0x1
	0x038F5AEC STRB W8, [X19 + 0x74D]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAED000
	006 Move W8, [X21+1849]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x859000
	014 Move X0, [X0+2392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1849], W8
	018 Move X8, [X20+16]
	019 Move [X20+40], X19
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode get_ActiveNode()

Disassembly:
	0x038F5AF0 LDR X0, [X21]
	0x038F5AF4 MOV W1, W20

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_ActiveNode(UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode value)

Disassembly:
	0x038F2ED0 CMP W0, 0x1
	0x038F2ED4 B.EQ 0x38F2F04
	0x038F2ED8 MOV X0, X21
	0x038F2EDC MOV X1, X20
	0x038F2EE0 MOV X2, X19
	0x038F2EE4 BL 0x38F2CE0
	0x038F2EE8 B 0x38F2E30
	0x038F2EEC LDP X20, X19, [X31 + 0x40]
	0x038F2EF0 LDP X22, X21, [X31 + 0x30]
	0x038F2EF4 LDP X24, X23, [X31 + 0x20]
	0x038F2EF8 LDP X26, X25, [X31 + 0x10]
	0x038F2EFC LDP X30, X27, [X31], #0x50
	0x038F2F00 RET
	0x038F2F04 MOV X0, X21
	0x038F2F08 MOV X1, X20
	0x038F2F0C MOV X2, X19
	0x038F2F10 LDP X20, X19, [X31 + 0x40]
	0x038F2F14 LDP X22, X21, [X31 + 0x30]
	0x038F2F18 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF0000
	006 Move W8, [X21+1850]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85C000
	014 Move X0, [X0+2176]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1850], W8
	018 Move X8, [X20+16]
	019 Move [X20+48], X19
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint get_ActiveConstraint()

Disassembly:
	0x038F5AF8 BL 0x1C16D6C
	0x038F5AFC CMP W20, 0x1

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_ActiveConstraint(UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint value)

Disassembly:
	0x038F24B4 LDR X24, [X24 + 0x7C8]
	0x038F24B8 MOV W22, W31
	0x038F24BC ADD X21, X20, 0x43
	0x038F24C0 ADD X23, X20, 0x28
	0x038F24C4 ADD X9, X20, 0x10
	0x038F24C8 ADD X8, X20, 0x40
	0x038F24CC MOVZ W28, 0x1
	0x038F24D0 STP X8, X9, [X31 + 0x10]
	0x038F24D4 MOV X0, X21
	0x038F24D8 MOV W1, W22
	0x038F24DC BL 0x38EFFA4
	0x038F24E0 TBNZ X0, 0x0, 0x38F25E0
	0x038F24E4 LDR X2, [X24]
	0x038F24E8 MOV X0, X23
	0x038F24EC MOV W1, W22
	0x038F24F0 BL 0x2D1F64C
	0x038F24F4 CBZ X0, 0x38F25E0
	0x038F24F8 ADRP X8, 0x85B000
	0x038F24FC LDR X8, [X8 + 0x7B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF0000
	006 Move W8, [X21+1851]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85C000
	014 Move X0, [X0+2144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1851], W8
	018 Move X8, [X20+16]
	019 Move [X20+56], X19
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx)

Disassembly:
	0x038F5434 ADRP X10, 0x858000
	0x038F5438 LDR X8, [X19]
	0x038F543C LDR X10, [X10 + 0x970]
	0x038F5440 LDRH W9, [X8 + 0x12E]
	0x038F5444 LDR X1, [X10]
	0x038F5448 CBZ X9, 0x38F546C
	0x038F544C LDR X10, [X8 + 0xB0]
	0x038F5450 ADD X10, X10, 0x8
	0x038F5454 LDUR X11, [X10 - 0x8]
	0x038F5458 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean get_IsDebugContext()

Disassembly:
	0x038F5B28 FMOV D11, 0.5
	0x038F5B2C FMOV D3, 8.000000000465661

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void Clear()

Disassembly:
	0x038F5B30 MOVZ W26, 0x4DD3
	0x038F5B34 MOVZ W28, 0x851F
	0x038F5B38 FMUL D10, D8, D0
	0x038F5B3C FMUL D0, D8, D1
	0x038F5B40 MOV X21, X31
	0x038F5B44 MOV W25, W20
	0x038F5B48 MOVK W26, 0x10620000
	0x038F5B4C MOVZ W27, 0xFA
	0x038F5B50 MOVK W28, 0x51EB0000
	0x038F5B54 FDIV D12, D8, D2
	0x038F5B58 FMUL D13, D8, D11
	0x038F5B5C FDIV D14, D8, D3
	0x038F5B60 STR D4, [X31 + 0x8]
	0x038F5B64 FDIV D15, D0, D4
	0x038F5B68 MOVZ W29, 0x32
	0x038F5B6C AND X8, X21, 0x0
	0x038F5B70 MUL X9, X8, X26

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call DTSweepDebugContext.set_PrimaryTriangle, X0, X1
	006 Move X0, X19
	007 Move X1, X31
	008 Call DTSweepDebugContext.set_SecondaryTriangle, X0, X1
	009 Move X0, X19
	010 Move X1, X31
	011 Call DTSweepDebugContext.set_ActivePoint, X0, X1
	012 Move X0, X19
	013 Move X1, X31
	014 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	015 Move X0, X19
	016 Move X1, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call DTSweepDebugContext.set_ActiveConstraint, X0, X1
	020 Return 

