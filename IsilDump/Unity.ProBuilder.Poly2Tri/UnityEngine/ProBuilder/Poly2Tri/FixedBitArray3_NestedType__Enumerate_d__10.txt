Type: UnityEngine.ProBuilder.Poly2Tri.FixedBitArray3/<Enumerate>d__10

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x038F71C4 LDR V1, [X0]
	0x038F71C8 LDR V2, [X0 + 0x18]
	0x038F71CC LDR V7, [X0 + 0x20]
	0x038F71D0 FSUB S4, S4, S0
	0x038F71D4 LDR V3, [X1]
	0x038F71D8 LDR V6, [X0 + 0x8]
	0x038F71DC FADD S16, S4, S4
	0x038F71E0 FMUL S5, S0, S0
	0x038F71E4 FMUL S0, S16, S0
	0x038F71E8 LDR V16, [X1 + 0x8]
	0x038F71EC FMUL S4, S4, S4
	0x038F71F0 FMUL S7, S0, S7
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x038F72A4 FADD S1, S4, S1

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x038F72A8 FADD V3.2S, V3.2S, V6.2S
	0x038F72AC FADD S1, S1, S0
	0x038F72B0 FADD V0.2S, V3.2S, V16.2S
	0x038F72B4 FADD S2, S1, S2
	0x038F72B8 MOV S1, V0.S[1]
	0x038F72BC RET
	0x038F72C0 SUB X31, X31, 0xD0
	0x038F72C4 STP D15, D14, [X31 + 0x50]
	0x038F72C8 STP D13, D12, [X31 + 0x60]
	0x038F72CC STP D11, D10, [X31 + 0x70]
	0x038F72D0 STP D9, D8, [X31 + 0x80]
	0x038F72D4 STP X30, X25, [X31 + 0x90]
	0x038F72D8 STP X24, X23, [X31 + 0xA0]
	0x038F72DC STP X22, X21, [X31 + 0xB0]
	0x038F72E0 STP X20, X19, [X31 + 0xC0]
	0x038F72E4 ADRP X23, 0xAEA000
	0x038F72E8 LDRB W8, [X23 + 0x75C]
	0x038F72EC MOV W21, W3
	0x038F72F0 MOV W22, W2
	0x038F72F4 MOV W20, W1
	0x038F72F8 MOV X19, X0
	0x038F72FC TBNZ X8, 0x0, 0x38F7314
	0x038F7300 ADRP X0, 0x856000
	0x038F7304 LDR X0, [X0 + 0xA58]
	0x038F7308 BL 0x1C16CF4
	0x038F730C MOVZ W8, 0x1
	0x038F7310 STRB W8, [X23 + 0x75C]
	0x038F7314 TBNZ X22, 0x1F, 0x38F7368

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W8, 0
	007 JumpIfNotEqual {28}
	008 Move W1, W31
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W8, TEMP
	012 Move [X19+16], W8
	013 Move [X19+36], W31
	014 Move W8, [X19+36]
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W9, TEMP
	018 Move [X19+16], W9
	019 Add W1, W8, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X19+36], W1
	022 Add X0, X19, 28
	023 Call FixedBitArray3.get_Item, X0, X1
	024 And W8, W0, 1
	025 Move W0, 1
	026 Move [X19+20], W8
	027 Move [X19+16], W0
	028 Move W0, W31
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return X0

Method: System.Boolean System.Collections.Generic.IEnumerator<System.Boolean>.get_Current()

Disassembly:
	0x038F7318 TBNZ X21, 0x1F, 0x38F73B4
	0x038F731C CBZ X19, 0x38F7C68

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x038F7320 ADRP X23, 0x856000
	0x038F7324 LDR X8, [X19]
	0x038F7328 LDR X23, [X23 + 0xA58]
	0x038F732C LDRH W9, [X8 + 0x12E]
	0x038F7330 LDR X1, [X23]
	0x038F7334 CBZ X9, 0x38F7358
	0x038F7338 LDR X10, [X8 + 0xB0]
	0x038F733C ADD X10, X10, 0x8
	0x038F7340 LDUR X11, [X10 - 0x8]
	0x038F7344 CMP X11, X1
	0x038F7348 B.EQ 0x38F7400
	0x038F734C SUBS X9, X9, 0x1
	0x038F7350 ADD X10, X10, 0x10
	0x038F7354 B.NE 0x38F7340

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x7FD000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x857000
	011 Move X0, [X0+2496]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x038F7358 MOV X0, X19
	0x038F735C MOV W2, W31
	0x038F7360 BL 0x1C5C788
	0x038F7364 B 0x38F740C
	0x038F7368 CBZ X19, 0x38F7C68
	0x038F736C ADRP X22, 0x856000
	0x038F7370 LDR X8, [X19]
	0x038F7374 LDR X22, [X22 + 0xA58]
	0x038F7378 LDRH W9, [X8 + 0x12E]
	0x038F737C LDR X1, [X22]
	0x038F7380 CBZ X9, 0x38F73A4
	0x038F7384 LDR X10, [X8 + 0xB0]
	0x038F7388 ADD X10, X10, 0x8
	0x038F738C LDUR X11, [X10 - 0x8]
	0x038F7390 CMP X11, X1
	0x038F7394 B.EQ 0x38F78B8
	0x038F7398 SUBS X9, X9, 0x1
	0x038F739C ADD X10, X10, 0x10
	0x038F73A0 B.NE 0x38F738C
	0x038F73A4 MOV X0, X19
	0x038F73A8 MOV W2, W31
	0x038F73AC BL 0x1C5C788
	0x038F73B0 B 0x38F78C4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAEB000
	007 Move X20, 0x7FD000
	008 Move W8, [X21+1874]
	009 Move X20, [X20+2904]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7FD000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1874], W8
	020 Move W8, [X19+20]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Boolean> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()

Disassembly:
	0x038F73B4 CBZ X19, 0x38F7C68
	0x038F73B8 ADRP X21, 0x856000
	0x038F73BC LDR X8, [X19]
	0x038F73C0 LDR X21, [X21 + 0xA58]
	0x038F73C4 LDRH W9, [X8 + 0x12E]
	0x038F73C8 LDR X1, [X21]
	0x038F73CC CBZ X9, 0x38F73F0
	0x038F73D0 LDR X10, [X8 + 0xB0]
	0x038F73D4 ADD X10, X10, 0x8
	0x038F73D8 LDUR X11, [X10 - 0x8]
	0x038F73DC CMP X11, X1
	0x038F73E0 B.EQ 0x38F7AF4
	0x038F73E4 SUBS X9, X9, 0x1
	0x038F73E8 ADD X10, X10, 0x10
	0x038F73EC B.NE 0x38F73D8
	0x038F73F0 MOV X0, X19
	0x038F73F4 MOV W2, W31
	0x038F73F8 BL 0x1C5C788
	0x038F73FC B 0x38F7B00
	0x038F7400 LDRSW X9, [X10]
	0x038F7404 ADD X8, X8, X9, 0x4, LSL
	0x038F7408 ADD X0, X8, 0x138
	0x038F740C LDP X9, X2, [X0]
	0x038F7410 ADD X8, X31, 0x18
	0x038F7414 MOV X0, X19
	0x038F7418 MOV W1, W20
	0x038F741C BLR X9
	0x038F7420 LDR X8, [X19]
	0x038F7424 LDR V8, [X31 + 0x18]
	0x038F7428 LDR V9, [X31 + 0x20]
	0x038F742C LDR V11, [X31 + 0x30]
	0x038F7430 LDR V10, [X31 + 0x38]
	0x038F7434 LDRH W9, [X8 + 0x12E]
	0x038F7438 LDR X1, [X23]
	0x038F743C CBZ X9, 0x38F7460
	0x038F7440 LDR X10, [X8 + 0xB0]
	0x038F7444 ADD X10, X10, 0x8
	0x038F7448 LDUR X11, [X10 - 0x8]
	0x038F744C CMP X11, X1
	0x038F7450 B.EQ 0x38F7470
	0x038F7454 SUBS X9, X9, 0x1
	0x038F7458 ADD X10, X10, 0x10
	0x038F745C B.NE 0x38F7448

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAEB000
	005 Move W8, [X20+1875]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x857000
	012 Move X0, [X0+2480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1875], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+24]
	019 Move X0, X31
	020 Call Environment.get_CurrentManagedThreadId
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+16], W31
	023 Move X20, X19
	024 Move X8, 0x857000
	025 Move X8, [X8+2480]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X20, X0
	030 Call Object..ctor, X0
	031 Move X0, X31
	032 Move [X20+16], W31
	033 Call Environment.get_CurrentManagedThreadId
	034 Move [X20+24], W0
	035 NotImplemented "Instruction LDURH not yet implemented."
	036 Move W9, [X19+33]
	037 Move X0, X20
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move [X31+10], W9
	040 Move [X20+30], W9
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x038F7460 MOV X0, X19

ISIL:
	001 Call <Enumerate>d__10.System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator, X0
	002 Return X0

