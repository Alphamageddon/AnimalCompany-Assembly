Type: UnityEngine.ProBuilder.Poly2Tri.FixedArray3`1

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02D2064C RET
	0x02D20650 STP X30, X23, [X31 - 0x30]!
	0x02D20654 STP X22, X21, [X31 + 0x10]
	0x02D20658 STP X20, X19, [X31 + 0x20]
	0x02D2065C MOV X20, X0
	0x02D20660 LDR X0, [X1 + 0x20]
	0x02D20664 LDR W21, [X20 + 0x8]
	0x02D20668 MOV X19, X1
	0x02D2066C LDRB W8, [X0 + 0x135]
	0x02D20670 TBNZ X8, 0x0, 0x2D20678
	0x02D20674 BL 0x1C5C684
	0x02D20678 LDR X8, [X0 + 0xC0]
	0x02D2067C LDR X0, [X8 + 0x20]
	0x02D20680 LDRB W8, [X0 + 0x135]
	0x02D20684 TBNZ X8, 0x0, 0x2D2068C
	0x02D20688 BL 0x1C5C684
	0x02D2068C MOV W1, W21
	0x02D20690 BL 0x1C16D6C
	0x02D20694 LDR W8, [X20 + 0x8]
	0x02D20698 MOV X21, X0
	0x02D2069C CMP W8, 0x1
	0x02D206A0 B.LT 0x2D206F8
	0x02D206A4 MOV X22, X31
	0x02D206A8 ADD X23, X21, 0x20
	0x02D206AC LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W1, 0
	007 JumpIfEqual {21}
	008 Move X0, 0x13DE000
	009 Move X0, [X0+3960]
	010 Move X19, X2
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X1, X31
	014 Move X20, X0
	015 Call IndexOutOfRangeException..ctor, X0
	016 Move X0, X20
	017 Move X1, X19
	018 Call 0x1C17DEC
	019 Add X0, X0, 16
	020 Add X0, X0, 8
	021 Move X0, [X0]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x02D206B0 LDRB W8, [X0 + 0x135]
	0x02D206B4 TBNZ X8, 0x0, 0x2D206BC
	0x02D206B8 BL 0x1C5C684
	0x02D206BC LDR X8, [X0 + 0xC0]
	0x02D206C0 MOV X0, X20
	0x02D206C4 MOV W1, W22
	0x02D206C8 LDR X2, [X8 + 0x28]
	0x02D206CC BL 0x2D205F0
	0x02D206D0 CBZ X21, 0x2D2070C
	0x02D206D4 LDR W8, [X21 + 0x18]
	0x02D206D8 CMP X22, X8
	0x02D206DC B.CS 0x2D20710
	0x02D206E0 LDR W8, [X0]
	0x02D206E4 STR W8, [X23, X22, LSL #2]
	0x02D206E8 LDRSW X8, [X20 + 0x8]
	0x02D206EC ADD X22, X22, 0x1
	0x02D206F0 CMP X22, X8
	0x02D206F4 B.LT 0x2D206AC
	0x02D206F8 MOV X0, X21
	0x02D206FC LDP X20, X19, [X31 + 0x20]
	0x02D20700 LDP X22, X21, [X31 + 0x10]
	0x02D20704 LDP X30, X23, [X31], #0x30
	0x02D20708 RET
	0x02D2070C BL 0x1C16F20
	0x02D20710 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W1, 0
	007 JumpIfEqual {21}
	008 Move X0, 0x13DE000
	009 Move X0, [X0+3960]
	010 Move X19, X3
	011 Call 0x1C17D08
	012 Call 0x1C17F10
	013 Move X1, X31
	014 Move X20, X0
	015 Call IndexOutOfRangeException..ctor, X0
	016 Move X0, X20
	017 Move X1, X19
	018 Call 0x1C17DEC
	019 Add X0, X0, 16
	020 Add X0, X0, 8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move [X0], X2
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean Contains(T value)

Disassembly:
	0x02D20714 STP X30, X23, [X31 - 0x30]!
	0x02D20718 STP X22, X21, [X31 + 0x10]
	0x02D2071C STP X20, X19, [X31 + 0x20]
	0x02D20720 LDR W8, [X0 + 0x8]
	0x02D20724 CMP W8, 0x1
	0x02D20728 B.LT 0x2D207E4
	0x02D2072C MOV X19, X2
	0x02D20730 MOV X20, X0
	0x02D20734 MOV X21, X1
	0x02D20738 MOV W22, W31
	0x02D2073C LDR X0, [X19 + 0x20]
	0x02D20740 LDRB W8, [X0 + 0x135]
	0x02D20744 TBNZ X8, 0x0, 0x2D2074C
	0x02D20748 BL 0x1C5C684
	0x02D2074C LDR X8, [X0 + 0xC0]
	0x02D20750 MOV X0, X20
	0x02D20754 MOV W1, W22
	0x02D20758 LDR X2, [X8 + 0x28]
	0x02D2075C BL 0x2D205F0
	0x02D20760 CBZ X21, 0x2D207F4
	0x02D20764 MOV X8, X0
	0x02D20768 LDR X0, [X19 + 0x20]
	0x02D2076C LDR W23, [X8]
	0x02D20770 LDRB W9, [X0 + 0x135]
	0x02D20774 TBNZ X9, 0x0, 0x2D2077C
	0x02D20778 BL 0x1C5C684
	0x02D2077C LDR X9, [X0 + 0xC0]
	0x02D20780 LDR W10, [X21 + 0x1C]
	0x02D20784 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move W22, W31
	011 Move W23, 1
	012 Move X0, [X19+32]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move X8, [X0+192]
	020 Move X0, X21
	021 Move W1, W22
	022 Move X2, [X8+16]
	023 Call 0x2D2064C, X0, X1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add W22, W22, 1
	027 NotImplemented "Instruction CSET not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 And W0, W23, 1
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return X0

Method: System.Int32 IndexOf(T value)

Disassembly:
	0x02D20788 LDR X9, [X9 + 0x48]
	0x02D2078C ADD W10, W10, 0x1
	0x02D20790 STR W10, [X21 + 0x1C]
	0x02D20794 CBZ X8, 0x2D207F4
	0x02D20798 LDRSW X10, [X21 + 0x18]
	0x02D2079C LDR W11, [X8 + 0x18]
	0x02D207A0 CMP W10, W11
	0x02D207A4 B.CS 0x2D207BC
	0x02D207A8 ADD W9, W10, 0x1
	0x02D207AC ADD X8, X8, X10, 0x2, LSL
	0x02D207B0 STR W9, [X21 + 0x18]
	0x02D207B4 STR W23, [X8 + 0x20]
	0x02D207B8 B 0x2D207D4
	0x02D207BC LDR X8, [X9 + 0x20]
	0x02D207C0 MOV X0, X21
	0x02D207C4 MOV X1, X23
	0x02D207C8 LDR X8, [X8 + 0xC0]
	0x02D207CC LDR X2, [X8 + 0x70]
	0x02D207D0 BL 0x3057634
	0x02D207D4 LDR W8, [X20 + 0x8]
	0x02D207D8 ADD W22, W22, 0x1
	0x02D207DC CMP W22, W8
	0x02D207E0 B.LT 0x2D2073C
	0x02D207E4 LDP X20, X19, [X31 + 0x20]
	0x02D207E8 LDP X22, X21, [X31 + 0x10]
	0x02D207EC LDP X30, X23, [X31], #0x30
	0x02D207F0 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Move X21, X1
	008 Move X22, X0
	009 Move W19, W31
	010 Move X0, [X20+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, X22
	019 Move W1, W19
	020 Move X2, [X8+16]
	021 Call 0x2D2064C, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add W19, W19, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W19, TEMP
	028 Move W0, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Void Clear()

Disassembly:
	0x02D207F4 BL 0x1C16F20
	0x02D207F8 STR X30, [X31 - 0x40]!
	0x02D207FC STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X31
	003 Move [X0+16], X31
	004 Return 

Method: System.Void Clear(T value)

Disassembly:
	0x02D20800 STP X22, X21, [X31 + 0x20]
	0x02D20804 STP X20, X19, [X31 + 0x30]
	0x02D20808 MOV X19, X3
	0x02D2080C CBZ X1, 0x2D2088C
	0x02D20810 LDR X8, [X1 + 0x18]
	0x02D20814 MOV X20, X1
	0x02D20818 CMP W8, 0x1
	0x02D2081C B.LT 0x2D20874
	0x02D20820 MOV X21, X0
	0x02D20824 MOV X22, X31
	0x02D20828 AND X23, X8, 0x0
	0x02D2082C ADD X24, X20, 0x20
	0x02D20830 LDR X0, [X19 + 0x20]
	0x02D20834 LDRB W8, [X0 + 0x135]
	0x02D20838 TBNZ X8, 0x0, 0x2D20840
	0x02D2083C BL 0x1C5C684
	0x02D20840 LDR X8, [X0 + 0xC0]
	0x02D20844 MOV X0, X21
	0x02D20848 MOV W1, W22
	0x02D2084C LDR X2, [X8 + 0x28]
	0x02D20850 BL 0x2D205F0
	0x02D20854 LDR W8, [X20 + 0x18]
	0x02D20858 CMP X22, X8
	0x02D2085C B.CS 0x2D20888
	0x02D20860 LDR W8, [X0]
	0x02D20864 STR W8, [X24, X22, LSL #2]
	0x02D20868 ADD X22, X22, 0x1
	0x02D2086C CMP X23, X22
	0x02D20870 B.NE 0x2D20830
	0x02D20874 LDP X20, X19, [X31 + 0x30]
	0x02D20878 LDP X22, X21, [X31 + 0x20]
	0x02D2087C LDP X24, X23, [X31 + 0x10]
	0x02D20880 LDR X30, [X31], #0x40
	0x02D20884 RET
	0x02D20888 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move W22, W31
	010 Move X0, [X19+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, X21
	019 Move W1, W22
	020 Move X2, [X8+16]
	021 Call 0x2D2064C, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, X21
	032 Move W1, W22
	033 Move X2, X31
	034 Move X3, [X8+32]
	035 Call 0x2D206B0, X0, X1, X2
	036 Add W22, W22, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.Collections.Generic.IEnumerable`1<T> Enumerate()

Disassembly:
	0x02D2088C ADRP X0, 0x13D8000
	0x02D20890 LDR X0, [X0 + 0x528]
	0x02D20894 BL 0x1C16D08
	0x02D20898 BL 0x1C16F10
	0x02D2089C MOV X20, X0
	0x02D208A0 ADRP X0, 0x13FB000
	0x02D208A4 LDR X0, [X0 + 0x640]
	0x02D208A8 BL 0x1C16D08
	0x02D208AC MOV X1, X0
	0x02D208B0 MOV X0, X20
	0x02D208B4 MOV X2, X31
	0x02D208B8 BL 0x330E100
	0x02D208BC MOV X0, X20
	0x02D208C0 MOV X1, X19
	0x02D208C4 BL 0x1C16DEC
	0x02D208C8 STP X30, X19, [X31 - 0x10]!
	0x02D208CC LDR X8, [X1 + 0x20]
	0x02D208D0 MOV X19, X0
	0x02D208D4 LDRB W9, [X8 + 0x135]
	0x02D208D8 TBNZ X9, 0x0, 0x2D208E8
	0x02D208DC MOV X0, X8
	0x02D208E0 BL 0x1C5C684
	0x02D208E4 MOV X8, X0
	0x02D208E8 LDR X8, [X8 + 0xC0]
	0x02D208EC MOV X0, X19
	0x02D208F0 LDR X1, [X8 + 0x50]
	0x02D208F4 LDP X30, X19, [X31], #0x10
	0x02D208F8 B 0x2D20F6C
	0x02D208FC STP X30, X21, [X31 - 0x20]!
	0x02D20900 STP X20, X19, [X31 + 0x10]
	0x02D20904 LDP X19, X21, [X0]
	0x02D20908 STP X31, X31, [X8]
	0x02D2090C STR X31, [X8 + 0x10]
	0x02D20910 LDR X0, [X1 + 0x20]
	0x02D20914 MOV X20, X8
	0x02D20918 LDRB W8, [X0 + 0x135]
	0x02D2091C TBNZ X8, 0x0, 0x2D20924
	0x02D20920 BL 0x1C5C684
	0x02D20924 LDR X8, [X0 + 0xC0]
	0x02D20928 MOV X0, X20
	0x02D2092C MOV X1, X19
	0x02D20930 LDP X20, X19, [X31 + 0x10]
	0x02D20934 LDR X3, [X8 + 0x60]
	0x02D20938 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+40]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X8, [X20+32]
	026 Move X20, X0
	027 Move W9, [X8+309]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, X0
	035 Move X8, [X8+192]
	036 Move TEMP, 1
	037 Not TEMP
	038 Move W1, TEMP
	039 Move X0, X20
	040 Move X2, [X8+48]
	041 Call 0x238C55C, X0, X1
	042 Move X8, [X19+16]
	043 Move V0, [X19]
	044 Move [X31+16], X8
	045 Move [X31], V0
	046 Compare X20, 0
	047 JumpIfEqual {58}
	048 Move X8, [X31+16]
	049 Move V0, [X31]
	050 Move X0, X20
	051 Move X30, [X31+32]
	052 Move [X20+80], X8
	053 Move [X20+4], V0
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Add X31, X31, 64
	057 Return X0
	058 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x02D2093C LDP X30, X21, [X31], #0x20
	0x02D20940 B 0x2BC98F8
	0x02D20944 SUB X31, X31, 0x60
	0x02D20948 STR X30, [X31 + 0x40]
	0x02D2094C STP X20, X19, [X31 + 0x50]
	0x02D20950 LDR X8, [X1 + 0x20]
	0x02D20954 MOV X19, X1
	0x02D20958 MOV X20, X0
	0x02D2095C LDRB W9, [X8 + 0x135]
	0x02D20960 TBNZ X9, 0x0, 0x2D20970
	0x02D20964 MOV X0, X8
	0x02D20968 BL 0x1C5C684
	0x02D2096C MOV X8, X0
	0x02D20970 LDR X8, [X8 + 0xC0]
	0x02D20974 MOV X0, X20
	0x02D20978 LDR X1, [X8 + 0x68]
	0x02D2097C ADD X8, X31, 0x0
	0x02D20980 BL 0x2D208FC
	0x02D20984 LDR X8, [X31 + 0x10]
	0x02D20988 LDR V0, [X31]
	0x02D2098C STR X8, [X31 + 0x30]
	0x02D20990 STR V0, [X31 + 0x2]
	0x02D20994 STR V0, [X31]
	0x02D20998 STR X8, [X31 + 0x10]
	0x02D2099C LDR X0, [X19 + 0x20]
	0x02D209A0 LDRB W8, [X0 + 0x135]
	0x02D209A4 TBNZ X8, 0x0, 0x2D209AC
	0x02D209A8 BL 0x1C5C684
	0x02D209AC LDR X8, [X0 + 0xC0]
	0x02D209B0 ADD X1, X31, 0x0
	0x02D209B4 LDR X0, [X8 + 0x58]
	0x02D209B8 BL 0x1C16E04
	0x02D209BC LDP X20, X19, [X31 + 0x50]
	0x02D209C0 LDR X30, [X31 + 0x40]
	0x02D209C4 ADD X31, X31, 0x60
	0x02D209C8 RET
	0x02D209CC SUB X31, X31, 0x60
	0x02D209D0 STR X30, [X31 + 0x40]
	0x02D209D4 STP X20, X19, [X31 + 0x50]
	0x02D209D8 LDR X8, [X1 + 0x20]
	0x02D209DC MOV X19, X1
	0x02D209E0 MOV X20, X0
	0x02D209E4 LDRB W9, [X8 + 0x135]
	0x02D209E8 TBNZ X9, 0x0, 0x2D209F8
	0x02D209EC MOV X0, X8
	0x02D209F0 BL 0x1C5C684
	0x02D209F4 MOV X8, X0
	0x02D209F8 LDR X8, [X8 + 0xC0]
	0x02D209FC MOV X0, X20
	0x02D20A00 LDR X1, [X8 + 0x68]
	0x02D20A04 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, X19
	017 Move X1, [X8+64]
	018 Call 0x2D2088C, X0
	019 Compare X0, 0
	020 JumpIfEqual {62}
	021 Move X19, X0
	022 Move X0, [X20+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X1, [X8+56]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X8, [X19]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X2, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 CallNoReturn X2
	062 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02D20A08 BL 0x2D208FC
	0x02D20A0C LDR X8, [X31 + 0x10]
	0x02D20A10 LDR V0, [X31]
	0x02D20A14 STR X8, [X31 + 0x30]
	0x02D20A18 STR V0, [X31 + 0x2]
	0x02D20A1C STR V0, [X31]
	0x02D20A20 STR X8, [X31 + 0x10]
	0x02D20A24 LDR X0, [X19 + 0x20]
	0x02D20A28 LDRB W8, [X0 + 0x135]
	0x02D20A2C TBNZ X8, 0x0, 0x2D20A34
	0x02D20A30 BL 0x1C5C684
	0x02D20A34 LDR X8, [X0 + 0xC0]
	0x02D20A38 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+88]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call 0x2D2093C, X0
	019 Return X0

