Type: UnityEngine.ProBuilder.Poly2Tri.PointSet

Method: System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> get_Points()

Disassembly:
	0x038F5FD4 LDR X0, [X0 + 0x9A0]
	0x038F5FD8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Points(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> value)

Disassembly:
	0x038F5FDC ADRP X0, 0x805000
	0x038F5FE0 LDR X0, [X0 + 0x2E8]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> get_Triangles()

Disassembly:
	0x038F5FE4 BL 0x1C16CF4
	0x038F5FE8 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Triangles(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> value)

Disassembly:
	0x038F5FEC STRB W8, [X19 + 0x74F]
	0x038F5FF0 LDR X0, [X21]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void .ctor(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint> points)

Disassembly:
	0x038F5BFC FADD D0, D10, D0
	0x038F5C00 FCMP D0, D13
	0x038F5C04 FCSEL D0, D13, D0, GT
	0x038F5C08 FCMP D0, D14
	0x038F5C0C FCSEL D10, D14, D0, MI
	0x038F5C10 FCMP D10, D13
	0x038F5C14 B.GT 0x38F5B88
	0x038F5C18 LDR X0, [X22]
	0x038F5C1C LDR W8, [X0 + 0xE0]
	0x038F5C20 CBNZ W8, 0x38F5C2C
	0x038F5C24 BL 0x1C16DFC
	0x038F5C28 LDR X0, [X22]
	0x038F5C2C ADRP X9, 0x7FE000
	0x038F5C30 LDR X8, [X0 + 0xB8]
	0x038F5C34 LDR X9, [X9 + 0x5A8]
	0x038F5C38 LDR V8, [X8 + 0x8]
	0x038F5C3C LDR X0, [X9]
	0x038F5C40 MOV V0.16B, V8.16B
	0x038F5C44 LDR W8, [X0 + 0xE0]
	0x038F5C48 CBNZ W8, 0x38F5C5C
	0x038F5C4C BL 0x1C16DFC
	0x038F5C50 LDR X8, [X22]
	0x038F5C54 LDR X8, [X8 + 0xB8]
	0x038F5C58 LDR V0, [X8 + 0x8]
	0x038F5C5C SCVTF D9, W21
	0x038F5C60 STR D0, [X31 + 0x10]
	0x038F5C64 FMUL D0, D8, D9
	0x038F5C68 LDR V8, [X31 + 0x8]
	0x038F5C6C FDIV D0, D0, D8
	0x038F5C70 BL 0x3EB1BF0
	0x038F5C74 STR D0, [X31 + 0x18]
	0x038F5C78 LDR V0, [X31 + 0x10]
	0x038F5C7C FMUL D0, D0, D9
	0x038F5C80 FDIV D0, D0, D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAED000
	008 Move X22, 0x859000
	009 Move X21, 0x859000
	010 Move W8, [X23+1853]
	011 Move X22, [X22+1624]
	012 Move X21, [X21+2400]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x859000
	020 Move X0, [X0+2400]
	021 Call 0x1C17CF4
	022 Move X0, 0x859000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1853], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X20
	034 Move X21, X0
	035 Call List`1<Object>..ctor, X0, X1
	036 Move [X19+16], X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Return 

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationMode get_TriangulationMode()

Disassembly:
	0x038F5FF4 BL 0x1C16F10
	0x038F5FF8 MOV X1, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void AddTriangle(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t)

Disassembly:
	0x038F5FFC MOV X19, X0
	0x038F6000 BL 0x338E3CC
	0x038F6004 LDR X8, [X20]
	0x038F6008 MOVZ X9, 0x2D18
	0x038F600C MOVK X9, 0x54440000
	0x038F6010 MOVK X9, 0x21FB
	0x038F6014 LDR X8, [X8 + 0xB8]
	0x038F6018 MOVK X9, 0x40190000
	0x038F601C STR X19, [X8]
	0x038F6020 LDR X8, [X20]
	0x038F6024 LDP X20, X19, [X31 + 0x10]
	0x038F6028 LDR X8, [X8 + 0xB8]
	0x038F602C STR X9, [X8 + 0x8]
	0x038F6030 LDP X30, X21, [X31], #0x20
	0x038F6034 RET
	0x038F6038 STR X30, [X31 - 0x30]!
	0x038F603C STP X22, X21, [X31 + 0x10]
	0x038F6040 STP X20, X19, [X31 + 0x20]
	0x038F6044 AND W21, W1, 0x1
	0x038F6048 MOV W1, W31
	0x038F604C MOV X19, X0
	0x038F6050 BL 0x38EFFA4
	0x038F6054 AND W8, W0, 0x1
	0x038F6058 CMP W8, W21
	0x038F605C B.EQ 0x38F6098
	0x038F6060 MOV W20, W31
	0x038F6064 MOV W22, W20
	0x038F6068 CMP W20, 0x2
	0x038F606C B.EQ 0x38F608C
	0x038F6070 ADD W20, W22, 0x1
	0x038F6074 MOV X0, X19
	0x038F6078 MOV W1, W20
	0x038F607C BL 0x38EFFA4
	0x038F6080 AND W8, W0, 0x1
	0x038F6084 CMP W8, W21
	0x038F6088 B.NE 0x38F6064
	0x038F608C CMP W22, 0x2
	0x038F6090 CSET W0, CC
	0x038F6094 B 0x38F609C
	0x038F6098 MOVZ W0, 0x1
	0x038F609C LDP X20, X19, [X31 + 0x20]
	0x038F60A0 LDP X22, X21, [X31 + 0x10]
	0x038F60A4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAEC000
	006 Move W8, [X21+1854]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x858000
	014 Move X0, [X0+2416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1854], W8
	018 Move X20, [X20+24]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x858000
	022 Move X8, [X20]
	023 Move X10, [X10+2416]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Void AddTriangles(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> list)

Disassembly:
	0x038F60A8 RET
	0x038F60AC STP X30, X21, [X31 - 0x20]!
	0x038F60B0 STP X20, X19, [X31 + 0x10]
	0x038F60B4 MOV X20, X0
	0x038F60B8 MOV W19, W31
	0x038F60BC AND W21, W1, 0x1
	0x038F60C0 MOV X0, X20
	0x038F60C4 MOV W1, W19
	0x038F60C8 BL 0x38EFFA4
	0x038F60CC AND W8, W0, 0x1
	0x038F60D0 CMP W8, W21
	0x038F60D4 B.EQ 0x38F60E8
	0x038F60D8 ADD W19, W19, 0x1
	0x038F60DC CMP W19, 0x3
	0x038F60E0 B.NE 0x38F60C0
	0x038F60E4 MOVN W19, 0x0
	0x038F60E8 MOV W0, W19
	0x038F60EC LDP X20, X19, [X31 + 0x10]
	0x038F60F0 LDP X30, X21, [X31], #0x20
	0x038F60F4 RET
	0x038F60F8 STP X30, X21, [X31 - 0x20]!
	0x038F60FC STP X20, X19, [X31 + 0x10]
	0x038F6100 MOV W19, W1
	0x038F6104 MOV X20, X0
	0x038F6108 MOV W21, W31
	0x038F610C MOV X0, X20
	0x038F6110 MOV W1, W21
	0x038F6114 BL 0x38EFFA4
	0x038F6118 EOR W8, W0, W19, 0x0
	0x038F611C TBNZ X8, 0x0, 0x38F6130
	0x038F6120 MOV X0, X20
	0x038F6124 MOV W1, W21
	0x038F6128 MOV W2, W31
	0x038F612C BL 0x38F0354
	0x038F6130 ADD W21, W21, 0x1
	0x038F6134 CMP W21, 0x3
	0x038F6138 B.NE 0x38F610C
	0x038F613C LDP X20, X19, [X31 + 0x10]
	0x038F6140 LDP X30, X21, [X31], #0x20
	0x038F6144 RET
	0x038F6148 STP X30, X21, [X31 - 0x20]!
	0x038F614C STP X20, X19, [X31 + 0x10]
	0x038F6150 ADRP X20, 0xAEB000
	0x038F6154 ADRP X21, 0x857000
	0x038F6158 LDRB W8, [X20 + 0x750]
	0x038F615C LDR X21, [X21 + 0x9B0]
	0x038F6160 MOV X19, X0
	0x038F6164 TBNZ X8, 0x0, 0x38F617C
	0x038F6168 ADRP X0, 0x857000
	0x038F616C LDR X0, [X0 + 0x9B0]
	0x038F6170 BL 0x1C16CF4
	0x038F6174 MOVZ W8, 0x1
	0x038F6178 STRB W8, [X20 + 0x750]
	0x038F617C LDR X0, [X21]
	0x038F6180 BL 0x1C16F10
	0x038F6184 MOV X1, X31
	0x038F6188 MOV X20, X0
	0x038F618C BL 0x33BDD8C
	0x038F6190 MOVN W8, 0x1
	0x038F6194 MOV X0, X31
	0x038F6198 STR W8, [X20 + 0x10]
	0x038F619C BL 0x33C151C
	0x038F61A0 STR W0, [X20 + 0x18]
	0x038F61A4 LDRB W8, [X19 + 0x2]
	0x038F61A8 LDRH W9, [X19]
	0x038F61AC MOV X0, X20
	0x038F61B0 STRB W8, [X20 + 0x21]
	0x038F61B4 STURH W9, [X20 + 0x1F]
	0x038F61B8 LDP X20, X19, [X31 + 0x10]
	0x038F61BC LDP X30, X21, [X31], #0x20
	0x038F61C0 RET
	0x038F61C4 STR X30, [X31 - 0x20]!
	0x038F61C8 STP X20, X19, [X31 + 0x10]
	0x038F61CC MOV W19, W1
	0x038F61D0 MOV X1, X31
	0x038F61D4 MOV X20, X0
	0x038F61D8 BL 0x33BDD8C
	0x038F61DC MOV X0, X31
	0x038F61E0 STR W19, [X20 + 0x10]
	0x038F61E4 BL 0x33C151C
	0x038F61E8 STR W0, [X20 + 0x18]
	0x038F61EC LDP X20, X19, [X31 + 0x10]
	0x038F61F0 LDR X30, [X31], #0x20
	0x038F61F4 RET
	0x038F61F8 STR X30, [X31 - 0x20]!
	0x038F61FC STP X20, X19, [X31 + 0x10]
	0x038F6200 ADRP X20, 0xAEB000
	0x038F6204 LDRB W8, [X20 + 0x751]
	0x038F6208 MOV X19, X0
	0x038F620C TBNZ X8, 0x0, 0x38F6224
	0x038F6210 ADRP X0, 0x857000
	0x038F6214 LDR X0, [X0 + 0x9B8]
	0x038F6218 BL 0x1C16CF4
	0x038F621C MOVZ W8, 0x1
	0x038F6220 STRB W8, [X20 + 0x751]
	0x038F6224 MOV X0, X19
	0x038F6228 BL 0x38F6148
	0x038F622C CBZ X0, 0x38F629C
	0x038F6230 ADRP X10, 0x857000
	0x038F6234 LDR X8, [X0]
	0x038F6238 LDR X10, [X10 + 0x9B8]
	0x038F623C MOV X19, X0
	0x038F6240 LDRH W9, [X8 + 0x12E]
	0x038F6244 LDR X1, [X10]
	0x038F6248 CBZ X9, 0x38F626C
	0x038F624C LDR X10, [X8 + 0xB0]
	0x038F6250 ADD X10, X10, 0x8
	0x038F6254 LDUR X11, [X10 - 0x8]
	0x038F6258 CMP X11, X1
	0x038F625C B.EQ 0x38F627C
	0x038F6260 SUBS X9, X9, 0x1
	0x038F6264 ADD X10, X10, 0x10
	0x038F6268 B.NE 0x38F6254
	0x038F626C MOV X0, X19
	0x038F6270 MOV W2, W31
	0x038F6274 BL 0x1C5C788
	0x038F6278 B 0x38F6288
	0x038F627C LDRSW X9, [X10]
	0x038F6280 ADD X8, X8, X9, 0x4, LSL
	0x038F6284 ADD X0, X8, 0x138
	0x038F6288 LDP X2, X1, [X0]
	0x038F628C MOV X0, X19
	0x038F6290 LDP X20, X19, [X31 + 0x10]
	0x038F6294 LDR X30, [X31], #0x20
	0x038F6298 BR X2
	0x038F629C BL 0x1C16F20
	0x038F62A0 B 0x38F61F8
	0x038F62A4 RET
	0x038F62A8 STP X30, X19, [X31 - 0x10]!
	0x038F62AC LDR W8, [X0 + 0x10]
	0x038F62B0 MOV X19, X0
	0x038F62B4 CMP W8, 0x1
	0x038F62B8 B.EQ 0x38F62D4
	0x038F62BC CBNZ W8, 0x38F630C
	0x038F62C0 MOV W1, W31
	0x038F62C4 MOVN W8, 0x0
	0x038F62C8 STR W8, [X19 + 0x10]
	0x038F62CC STR W31, [X19 + 0x24]
	0x038F62D0 B 0x38F62F0
	0x038F62D4 LDR W8, [X19 + 0x24]
	0x038F62D8 MOVN W9, 0x0
	0x038F62DC STR W9, [X19 + 0x10]
	0x038F62E0 ADD W1, W8, 0x1
	0x038F62E4 CMP W1, 0x3
	0x038F62E8 STR W1, [X19 + 0x24]
	0x038F62EC B.GE 0x38F630C
	0x038F62F0 ADD X0, X19, 0x1C
	0x038F62F4 BL 0x38EFFA4
	0x038F62F8 AND W8, W0, 0x1
	0x038F62FC MOVZ W0, 0x1
	0x038F6300 STRB W8, [X19 + 0x14]
	0x038F6304 STR W0, [X19 + 0x10]
	0x038F6308 B 0x38F6310
	0x038F630C MOV W0, W31
	0x038F6310 LDP X30, X19, [X31], #0x10
	0x038F6314 RET
	0x038F6318 LDRB W0, [X0 + 0x14]
	0x038F631C RET
	0x038F6320 STP X30, X19, [X31 - 0x10]!
	0x038F6324 ADRP X0, 0x7FD000
	0x038F6328 LDR X0, [X0 + 0xB40]
	0x038F632C BL 0x1C16D08
	0x038F6330 BL 0x1C16F10
	0x038F6334 MOV X1, X31
	0x038F6338 MOV X19, X0
	0x038F633C BL 0x3380310
	0x038F6340 ADRP X0, 0x857000
	0x038F6344 LDR X0, [X0 + 0x9C0]
	0x038F6348 BL 0x1C16D08
	0x038F634C MOV X1, X0
	0x038F6350 MOV X0, X19
	0x038F6354 BL 0x1C16DEC
	0x038F6358 SUB X31, X31, 0x30
	0x038F635C STP X30, X21, [X31 + 0x10]
	0x038F6360 STP X20, X19, [X31 + 0x20]
	0x038F6364 ADRP X21, 0xAEB000
	0x038F6368 ADRP X20, 0x7FD000
	0x038F636C LDRB W8, [X21 + 0x752]
	0x038F6370 LDR X20, [X20 + 0xB58]
	0x038F6374 MOV X19, X0
	0x038F6378 TBNZ X8, 0x0, 0x38F6390
	0x038F637C ADRP X0, 0x7FD000
	0x038F6380 LDR X0, [X0 + 0xB58]
	0x038F6384 BL 0x1C16CF4
	0x038F6388 MOVZ W8, 0x1
	0x038F638C STRB W8, [X21 + 0x752]
	0x038F6390 LDRB W8, [X19 + 0x14]
	0x038F6394 LDR X0, [X20]
	0x038F6398 ADD X1, X31, 0xC
	0x038F639C STRB W8, [X31 + 0xC]
	0x038F63A0 BL 0x1C16E04
	0x038F63A4 LDP X20, X19, [X31 + 0x20]
	0x038F63A8 LDP X30, X21, [X31 + 0x10]
	0x038F63AC ADD X31, X31, 0x30
	0x038F63B0 RET
	0x038F63B4 STR X30, [X31 - 0x20]!
	0x038F63B8 STP X20, X19, [X31 + 0x10]
	0x038F63BC ADRP X20, 0xAEB000
	0x038F63C0 LDRB W8, [X20 + 0x753]
	0x038F63C4 MOV X19, X0
	0x038F63C8 TBNZ X8, 0x0, 0x38F63E0
	0x038F63CC ADRP X0, 0x857000
	0x038F63D0 LDR X0, [X0 + 0x9B0]
	0x038F63D4 BL 0x1C16CF4
	0x038F63D8 MOVZ W8, 0x1
	0x038F63DC STRB W8, [X20 + 0x753]
	0x038F63E0 LDR W8, [X19 + 0x10]
	0x038F63E4 ADDS W31, W8, 0x2
	0x038F63E8 B.NE 0x38F640C
	0x038F63EC LDR W20, [X19 + 0x18]
	0x038F63F0 MOV X0, X31
	0x038F63F4 BL 0x33C151C
	0x038F63F8 CMP W20, W0
	0x038F63FC B.NE 0x38F640C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xAEC000
	011 Move W8, [X21+1855]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x858000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0x7FE000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x858000
	025 Move X0, [X0+2432]
	026 Call 0x1C17CF4
	027 Move X0, 0x858000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move X0, 0x7FE000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1855], W8
	035 Compare X19, 0
	036 JumpIfEqual {181}
	037 Move X10, 0x858000
	038 Move X8, [X19]
	039 Move X10, [X10+2432]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X23, 0x7FE000
	059 Move X23, [X23+3584]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X19, X0
	063 Compare X0, 0
	064 JumpIfEqual {182}
	065 Move X24, 0x7FE000
	066 Move X25, 0x858000
	067 Move X26, 0x858000
	068 Move X24, [X24+3608]
	069 Move X25, [X25+2440]
	070 Move X26, [X26+2416]
	071 Move X8, [X19]
	072 Move X1, [X24]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X19
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {144}
	096 Move X8, [X19]
	097 Move X1, [X25]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X19
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X22, [X20+24]
	118 Compare X22, 0
	119 JumpIfEqual {180}
	120 Move X8, [X22]
	121 Move X1, [X26]
	122 Move X21, X0
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 2
	133 Move X0, X22
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 2
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X2, [X0+8]
	141 Move X0, X22
	142 Move X1, X21
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X20, X31
	145 Compare X19, 0
	146 JumpIfEqual {168}
	147 Move X8, [X19]
	148 Move X1, [X23]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X19
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X19
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X20, 0
	169 JumpIfNotEqual {183}
	170 Move X20, [X31+64]
	171 Move X19, [X31+72]
	172 Move X22, [X31+48]
	173 Move X21, [X31+56]
	174 Move X24, [X31+32]
	175 Move X23, [X31+40]
	176 Move X26, [X31+16]
	177 Move X25, [X31+24]
	178 Move X30, [X31+80]
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Move X0, X20
	184 Call 0x1C17F18
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Move X20, [X0]
	188 Call 0x3EB2AE0
	189 Move [X31+8], X0
	190 Move X20, X31
	191 Move [X31+8], X0
	192 Compare X19, 0
	193 JumpIfEqual {215}
	194 Move X8, [X19]
	195 Move X1, [X23]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X19
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X19
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X20, 0
	216 JumpIfNotEqual {219}
	217 Move X0, [X31+8]
	218 Call 0x1D2D690
	219 Move X0, X20
	220 Call 0x1C17F18
	221 Call 0x1991590

Method: System.Void ClearTriangles()

Disassembly:
	0x038F6400 STR W31, [X19 + 0x10]
	0x038F6404 MOV X20, X19
	0x038F6408 B 0x38F6438
	0x038F640C ADRP X8, 0x857000
	0x038F6410 LDR X8, [X8 + 0x9B0]
	0x038F6414 LDR X0, [X8]
	0x038F6418 BL 0x1C16F10
	0x038F641C MOV X1, X31
	0x038F6420 MOV X20, X0
	0x038F6424 BL 0x33BDD8C
	0x038F6428 MOV X0, X31
	0x038F642C STR W31, [X20 + 0x10]
	0x038F6430 BL 0x33C151C
	0x038F6434 STR W0, [X20 + 0x18]
	0x038F6438 LDURH W8, [X19 + 0x1F]
	0x038F643C LDRB W9, [X19 + 0x21]
	0x038F6440 MOV X0, X20
	0x038F6444 STRH W8, [X31 + 0x8]
	0x038F6448 STRB W9, [X31 + 0xA]
	0x038F644C STRB W9, [X20 + 0x1E]
	0x038F6450 STRH W8, [X20 + 0x1C]
	0x038F6454 LDP X20, X19, [X31 + 0x10]
	0x038F6458 LDR X30, [X31], #0x20
	0x038F645C RET
	0x038F6460 B 0x38F63B4
	0x038F6464 STP X30, X23, [X31 - 0x30]!
	0x038F6468 STP X22, X21, [X31 + 0x10]
	0x038F646C STP X20, X19, [X31 + 0x20]
	0x038F6470 ADRP X23, 0xAEB000
	0x038F6474 ADRP X22, 0x7FD000
	0x038F6478 ADRP X20, 0x857000
	0x038F647C ADRP X21, 0x857000
	0x038F6480 MOV X19, X8
	0x038F6484 LDRB W8, [X23 + 0x754]
	0x038F6488 LDR X22, [X22 + 0x618]
	0x038F648C LDR X20, [X20 + 0x9C8]
	0x038F6490 LDR X21, [X21 + 0x9D0]
	0x038F6494 TBNZ X8, 0x0, 0x38F64C4
	0x038F6498 ADRP X0, 0x7FD000
	0x038F649C LDR X0, [X0 + 0x618]
	0x038F64A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAEC000
	005 Move W8, [X20+1856]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x858000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1856], W8
	016 Move X19, [X19+24]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x858000
	020 Move X8, [X19]
	021 Move X10, [X10+2416]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 3
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 3
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Void Prepare(UnityEngine.ProBuilder.Poly2Tri.TriangulationContext tcx)

Disassembly:
	0x038F5E30 STR D3, [X31]
	0x038F5E34 LDR X0, [X22]
	0x038F5E38 LDR W8, [X0 + 0xE0]
	0x038F5E3C CBNZ W8, 0x38F5E48
	0x038F5E40 BL 0x1C16DFC
	0x038F5E44 LDR X0, [X22]
	0x038F5E48 LDR X8, [X0 + 0xB8]
	0x038F5E4C LDR X0, [X8]
	0x038F5E50 CBZ X0, 0x38F5F90
	0x038F5E54 LDR X8, [X0]
	0x038F5E58 LDP X9, X1, [X8 + 0x1B8]
	0x038F5E5C BLR X9
	0x038F5E60 FSUB D0, D10, D0
	0x038F5E64 FMUL D0, D12, D0
	0x038F5E68 FADD D0, D15, D0
	0x038F5E6C FCMP D0, D13
	0x038F5E70 FCSEL D0, D13, D0, GT
	0x038F5E74 FCMP D0, D14
	0x038F5E78 FCSEL D15, D14, D0, MI
	0x038F5E7C FCMP D15, D13
	0x038F5E80 B.GT 0x38F5E34
	0x038F5E84 LDR X0, [X22]
	0x038F5E88 LDR W8, [X0 + 0xE0]
	0x038F5E8C CBNZ W8, 0x38F5E98
	0x038F5E90 BL 0x1C16DFC
	0x038F5E94 LDR X0, [X22]
	0x038F5E98 LDR X8, [X0 + 0xB8]
	0x038F5E9C LDR X0, [X23]
	0x038F5EA0 LDR V8, [X8 + 0x8]
	0x038F5EA4 LDR W8, [X0 + 0xE0]
	0x038F5EA8 MOV V9.16B, V8.16B
	0x038F5EAC CBNZ W8, 0x38F5EC0
	0x038F5EB0 BL 0x1C16DFC
	0x038F5EB4 LDR X8, [X22]
	0x038F5EB8 LDR X8, [X8 + 0xB8]
	0x038F5EBC LDR V9, [X8 + 0x8]
	0x038F5EC0 SCVTF D11, W21
	0x038F5EC4 FMUL D0, D8, D11
	0x038F5EC8 LDR V8, [X31]
	0x038F5ECC FDIV D0, D0, D8
	0x038F5ED0 BL 0x3EB1BF0
	0x038F5ED4 STR D0, [X31 + 0x8]
	0x038F5ED8 FMUL D0, D9, D11
	0x038F5EDC FDIV D0, D0, D8
	0x038F5EE0 BL 0x3EB1C30
	0x038F5EE4 LDR X0, [X24]
	0x038F5EE8 MOV V9.16B, V0.16B
	0x038F5EEC BL 0x1C16F10
	0x038F5EF0 LDR V0, [X31 + 0x8]
	0x038F5EF4 MOV X1, X31
	0x038F5EF8 MOV X20, X0
	0x038F5EFC FMUL D9, D15, D9
	0x038F5F00 FMUL D8, D15, D0
	0x038F5F04 BL 0x33BDD8C
	0x038F5F08 STP D8, D9, [X20 + 0x18]
	0x038F5F0C STR W21, [X20 + 0x28]
	0x038F5F10 CBZ X19, 0x38F5F90
	0x038F5F14 LDR X8, [X19]
	0x038F5F18 MOV X0, X20
	0x038F5F1C LDR X1, [X8 + 0x40]
	0x038F5F20 BL 0x1C16E00
	0x038F5F24 CBZ X0, 0x38F5F94
	0x038F5F28 LDR W8, [X19 + 0x18]
	0x038F5F2C CMP X21, X8
	0x038F5F30 B.CS 0x38F5FA0
	0x038F5F34 ADD X8, X19, X21, 0x3, LSL
	0x038F5F38 ADD X21, X21, 0x1
	0x038F5F3C CMP X21, X25
	0x038F5F40 STR X20, [X8 + 0x20]
	0x038F5F44 B.NE 0x38F5E34
	0x038F5F48 ADRP X8, 0x858000
	0x038F5F4C LDR X8, [X8 + 0x9A8]
	0x038F5F50 LDR X0, [X8]
	0x038F5F54 BL 0x1C16F10
	0x038F5F58 MOV X1, X19
	0x038F5F5C MOV X20, X0
	0x038F5F60 BL 0x38EDDB0
	0x038F5F64 MOV X0, X20
	0x038F5F68 LDP X20, X19, [X31 + 0x80]
	0x038F5F6C LDP X22, X21, [X31 + 0x70]
	0x038F5F70 LDP X24, X23, [X31 + 0x60]
	0x038F5F74 LDP X30, X25, [X31 + 0x50]
	0x038F5F78 LDP D9, D8, [X31 + 0x40]
	0x038F5F7C LDP D11, D10, [X31 + 0x30]
	0x038F5F80 LDP D13, D12, [X31 + 0x20]
	0x038F5F84 LDP D15, D14, [X31 + 0x10]
	0x038F5F88 ADD X31, X31, 0x90
	0x038F5F8C RET
	0x038F5F90 BL 0x1C16F20
	0x038F5F94 BL 0x1C16F44
	0x038F5F98 MOV X1, X31
	0x038F5F9C BL 0x1C16DEC
	0x038F5FA0 BL 0x1C16F28
	0x038F5FA4 MOV X1, X31
	0x038F5FA8 B 0x33BDD8C
	0x038F5FAC STP X30, X21, [X31 - 0x20]!
	0x038F5FB0 STP X20, X19, [X31 + 0x10]
	0x038F5FB4 ADRP X19, 0xAEC000
	0x038F5FB8 ADRP X21, 0x805000
	0x038F5FBC ADRP X20, 0x858000
	0x038F5FC0 LDRB W8, [X19 + 0x74F]
	0x038F5FC4 LDR X21, [X21 + 0x2E8]
	0x038F5FC8 LDR X20, [X20 + 0x9A0]
	0x038F5FCC TBNZ X8, 0x0, 0x38F5FF0
	0x038F5FD0 ADRP X0, 0x858000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAED000
	007 Move W8, [X21+1857]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x859000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x859000
	018 Move X0, [X0+2424]
	019 Call 0x1C17CF4
	020 Move X0, 0x859000
	021 Move X0, [X0+1664]
	022 Call 0x1C17CF4
	023 Move X0, 0x859000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x859000
	027 Move X0, [X0+1896]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1857], W8
	031 Move X21, [X19+24]
	032 Compare X21, 0
	033 JumpIfEqual {50}
	034 Move X10, 0x859000
	035 Move X8, [X21]
	036 Move X10, [X10+2416]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 3
	048 Move X0, X21
	049 Call 0x1C5D788
	050 Move X21, [X19+16]
	051 Compare X21, 0
	052 JumpIfEqual {115}
	053 Move X10, 0x859000
	054 Move X8, [X21]
	055 Move X10, [X10+2424]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 3
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X20, 0
	078 JumpIfNotEqual {101}
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X21
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x859000
	087 Move X8, [X8+1896]
	088 Move W21, W0
	089 Move X8, [X8]
	090 Move X0, X8
	091 Call 0x1C17F10
	092 Move X8, 0x859000
	093 Move X8, [X8+1880]
	094 Move W1, W21
	095 Move X22, X0
	096 Move X2, [X8]
	097 Call List`1<Object>..ctor, X0, X1
	098 Move [X19+24], X22
	099 Compare X20, 0
	100 JumpIfEqual {115}
	101 Move X0, [X20+32]
	102 Compare X0, 0
	103 JumpIfEqual {115}
	104 Move X8, 0x859000
	105 Move X8, [X8+1664]
	106 Move X1, [X19+16]
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X2, [X8]
	112 Move X30, [X31+48]
	113 Call List`1<Object>.AddRange, X0, X1
	114 Return 
	115 Call 0x1C17F20

