Type: UnityEngine.ProBuilder.Poly2Tri.DTSweep

Method: System.Void Triangulate(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx)

Disassembly:
	0x038EED60 STRB W8, [X21 + 0x6FC]
	0x038EED64 STP X31, X31, [X31 + 0x20]
	0x038EED68 STR X31, [X31 + 0x30]
	0x038EED6C LDR X8, [X20 + 0x28]
	0x038EED70 CBZ X8, 0x38EED9C
	0x038EED74 LDP W2, W9, [X8 + 0x18]
	0x038EED78 ADD W9, W9, 0x1
	0x038EED7C CMP W2, 0x1
	0x038EED80 STP W31, W9, [X8 + 0x18]
	0x038EED84 B.LT 0x38EEDD4
	0x038EED88 LDR X0, [X8 + 0x10]
	0x038EED8C MOV W1, W31
	0x038EED90 MOV X3, X31
	0x038EED94 BL 0x339FA34
	0x038EED98 B 0x38EEDD4
	0x038EED9C LDR X8, [X20 + 0x10]
	0x038EEDA0 CBZ X8, 0x38EEE68
	0x038EEDA4 LDR W21, [X8 + 0x18]
	0x038EEDA8 ADRP X8, 0x85F000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {20}
	005 Move X19, X0
	006 Call DTSweepContext.CreateAdvancingFront, X0
	007 Move X0, X19
	008 Call DTSweep.Sweep, X0
	009 Move W8, [X19+40]
	010 Move X0, X19
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Call DTSweep.FinalizationPolygon, X0
	013 Call DTSweep.FinalizationConvexHull, X0
	014 Move W8, [X19+56]
	015 Add W8, W8, 1
	016 Move [X19+56], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void Sweep(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx)

Disassembly:
	0x038F1DCC LDP X20, X19, [X31 + 0x10]
	0x038F1DD0 LDR X2, [X8]
	0x038F1DD4 LDP X30, X21, [X31], #0x20
	0x038F1DD8 B 0x301D7A8
	0x038F1DDC BL 0x1C16F20
	0x038F1DE0 STP X30, X21, [X31 - 0x20]!
	0x038F1DE4 STP X20, X19, [X31 + 0x10]
	0x038F1DE8 ADRP X20, 0xAF0000
	0x038F1DEC LDRB W8, [X20 + 0x735]
	0x038F1DF0 MOV X19, X0
	0x038F1DF4 TBNZ X8, 0x0, 0x38F1E18
	0x038F1DF8 ADRP X0, 0x85C000
	0x038F1DFC LDR X0, [X0 + 0x730]
	0x038F1E00 BL 0x1C16CF4
	0x038F1E04 ADRP X0, 0x85C000
	0x038F1E08 LDR X0, [X0 + 0x878]
	0x038F1E0C BL 0x1C16CF4
	0x038F1E10 MOVZ W8, 0x1
	0x038F1E14 STRB W8, [X20 + 0x735]
	0x038F1E18 LDR X20, [X19 + 0x30]
	0x038F1E1C CBZ X20, 0x38F1ECC
	0x038F1E20 ADRP X10, 0x85C000
	0x038F1E24 LDR X8, [X20]
	0x038F1E28 LDR X10, [X10 + 0x878]
	0x038F1E2C LDR X21, [X19 + 0x18]
	0x038F1E30 LDRH W9, [X8 + 0x12E]
	0x038F1E34 LDR X1, [X10]
	0x038F1E38 CBZ X9, 0x38F1E5C
	0x038F1E3C LDR X10, [X8 + 0xB0]
	0x038F1E40 ADD X10, X10, 0x8
	0x038F1E44 LDUR X11, [X10 - 0x8]
	0x038F1E48 CMP X11, X1
	0x038F1E4C B.EQ 0x38F1E6C
	0x038F1E50 SUBS X9, X9, 0x1
	0x038F1E54 ADD X10, X10, 0x10
	0x038F1E58 B.NE 0x38F1E44
	0x038F1E5C MOVZ W2, 0x4
	0x038F1E60 MOV X0, X20
	0x038F1E64 BL 0x1C5C788
	0x038F1E68 B 0x38F1E7C
	0x038F1E6C LDR W9, [X10]
	0x038F1E70 ADD W9, W9, 0x4
	0x038F1E74 ADD X8, X8, W9, 0x4, SXTW
	0x038F1E78 ADD X0, X8, 0x138
	0x038F1E7C LDP X8, X2, [X0]
	0x038F1E80 MOV X0, X20
	0x038F1E84 MOV X1, X21
	0x038F1E88 BLR X8
	0x038F1E8C LDR X8, [X19 + 0x18]
	0x038F1E90 CBZ X8, 0x38F1ECC
	0x038F1E94 LDP W2, W9, [X8 + 0x18]
	0x038F1E98 ADD W9, W9, 0x1
	0x038F1E9C CMP W2, 0x1
	0x038F1EA0 STP W31, W9, [X8 + 0x18]
	0x038F1EA4 B.LT 0x38F1EC0
	0x038F1EA8 LDR X0, [X8 + 0x10]
	0x038F1EAC LDP X20, X19, [X31 + 0x10]
	0x038F1EB0 MOV W1, W31
	0x038F1EB4 MOV X3, X31
	0x038F1EB8 LDP X30, X21, [X31], #0x20
	0x038F1EBC B 0x339FA34
	0x038F1EC0 LDP X20, X19, [X31 + 0x10]
	0x038F1EC4 LDP X30, X21, [X31], #0x20
	0x038F1EC8 RET
	0x038F1ECC BL 0x1C16F20
	0x038F1ED0 STP X30, X21, [X31 - 0x20]!
	0x038F1ED4 STP X20, X19, [X31 + 0x10]
	0x038F1ED8 ADRP X21, 0xAF0000
	0x038F1EDC LDRB W8, [X21 + 0x73A]
	0x038F1EE0 MOV X19, X1
	0x038F1EE4 MOV X20, X0
	0x038F1EE8 TBNZ X8, 0x0, 0x38F1F00
	0x038F1EEC ADRP X0, 0x85C000
	0x038F1EF0 LDR X0, [X0 + 0x880]
	0x038F1EF4 BL 0x1C16CF4
	0x038F1EF8 MOVZ W8, 0x1
	0x038F1EFC STRB W8, [X21 + 0x73A]
	0x038F1F00 LDR X8, [X20 + 0x10]
	0x038F1F04 STR X19, [X20 + 0x30]
	0x038F1F08 CBZ X8, 0x38F1F18
	0x038F1F0C LDP X20, X19, [X31 + 0x10]
	0x038F1F10 LDP X30, X21, [X31], #0x20
	0x038F1F14 RET
	0x038F1F18 BL 0x1C16F20
	0x038F1F1C STR D8, [X31 - 0x30]!
	0x038F1F20 STR X30, [X31 + 0x8]
	0x038F1F24 STP X22, X21, [X31 + 0x10]
	0x038F1F28 STP X20, X19, [X31 + 0x20]
	0x038F1F2C ADRP X22, 0xAF0000
	0x038F1F30 LDRB W8, [X22 + 0x748]
	0x038F1F34 MOV X20, X2
	0x038F1F38 MOV X19, X1
	0x038F1F3C MOV X21, X0
	0x038F1F40 TBNZ X8, 0x0, 0x38F1F58
	0x038F1F44 ADRP X0, 0x85C000
	0x038F1F48 LDR X0, [X0 + 0x850]
	0x038F1F4C BL 0x1C16CF4
	0x038F1F50 MOVZ W8, 0x1
	0x038F1F54 STRB W8, [X22 + 0x748]
	0x038F1F58 CBZ X21, 0x38F2000
	0x038F1F5C CBZ X20, 0x38F2000
	0x038F1F60 CBZ X19, 0x38F2000
	0x038F1F64 LDP D5, D4, [X19 + 0x18]
	0x038F1F68 ADRP X19, 0x85C000
	0x038F1F6C LDP D0, D1, [X20 + 0x18]
	0x038F1F70 LDP D2, D3, [X21 + 0x18]
	0x038F1F74 LDR X19, [X19 + 0x850]
	0x038F1F78 FSUB D5, D5, D0
	0x038F1F7C FSUB D3, D3, D1
	0x038F1F80 LDR X0, [X19]
	0x038F1F84 FSUB D0, D2, D0
	0x038F1F88 FSUB D1, D4, D1
	0x038F1F8C FMUL D3, D3, D5
	0x038F1F90 LDR W8, [X0 + 0xE0]
	0x038F1F94 FMUL D0, D0, D1
	0x038F1F98 FSUB D8, D0, D3
	0x038F1F9C CBNZ W8, 0x38F1FA8
	0x038F1FA0 BL 0x1C16DFC
	0x038F1FA4 LDR X0, [X19]
	0x038F1FA8 LDR X8, [X0 + 0xB8]
	0x038F1FAC LDR V0, [X8]
	0x038F1FB0 FNEG D1, D0
	0x038F1FB4 FCMP D8, D1
	0x038F1FB8 B.LE 0x38F1FDC
	0x038F1FBC LDR W8, [X0 + 0xE0]
	0x038F1FC0 CBNZ W8, 0x38F1FD4
	0x038F1FC4 BL 0x1C16DFC
	0x038F1FC8 LDR X8, [X19]
	0x038F1FCC LDR X8, [X8 + 0xB8]
	0x038F1FD0 LDR V0, [X8]
	0x038F1FD4 FCMP D8, D0
	0x038F1FD8 B.MI 0x38F1FE8
	0x038F1FDC FCMP D8, 0x0
	0x038F1FE0 CSET W0, GT

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X20, 0xAF1000
	013 Move W8, [X20+1812]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x85D000
	020 Move X0, [X0+2096]
	021 Call 0x1C17CF4
	022 Move X0, 0x85D000
	023 Move X0, [X0+2104]
	024 Call 0x1C17CF4
	025 Move X0, 0x85D000
	026 Move X0, [X0+2112]
	027 Call 0x1C17CF4
	028 Move X0, 0x85D000
	029 Move X0, [X0+2120]
	030 Call 0x1C17CF4
	031 Move X0, 0x85D000
	032 Move X0, [X0+1888]
	033 Call 0x1C17CF4
	034 Move X0, 0x85D000
	035 Move X0, [X0+1800]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1812], W8
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Compare X19, 0
	043 JumpIfEqual {138}
	044 Move X20, [X19+32]
	045 Compare X20, 0
	046 JumpIfEqual {138}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X25, 0x85D000
	050 Move X26, 0x85D000
	051 Move X27, 0x85D000
	052 Move X24, 0x85D000
	053 Move X25, [X25+1800]
	054 Move X26, [X26+2120]
	055 Move X27, [X27+2104]
	056 Move X24, [X24+2096]
	057 Move W21, 1
	058 Move X2, [X25]
	059 Move X0, X20
	060 Move W1, W21
	061 Call List`1<Object>.get_Item, X0, X1
	062 Move X23, X0
	063 Move X0, X19
	064 Move X1, X23
	065 Call DTSweep.PointEvent, X0, X1
	066 Compare X23, 0
	067 JumpIfEqual {138}
	068 Move X22, X0
	069 Move X0, [X23+16]
	070 Compare X0, 0
	071 JumpIfEqual {109}
	072 Move X1, [X26]
	073 Add X8, X31, 8
	074 Call List`1<Object>.GetEnumerator, X0
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move X8, [X31+24]
	077 Move [X31+2], V0
	078 Move [X31+48], X8
	079 Move X1, [X27]
	080 Add X0, X31, 32
	081 Call Enumerator<Object>.MoveNext, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Move X8, [X19]
	087 Move X23, [X31+48]
	088 Move X9, [X8+440]
	089 Move X1, [X8+448]
	090 Move X0, X19
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {102}
	096 Move X0, X19
	097 Call TriangulationContext.get_DTDebugContext, X0
	098 Compare X0, 0
	099 JumpIfEqual {112}
	100 Move X1, X23
	101 Call DTSweepDebugContext.set_ActiveConstraint, X0, X1
	102 Move X0, X19
	103 Move X1, X23
	104 Move X2, X22
	105 Call DTSweep.EdgeEvent, X0, X1, X2
	106 Move X1, [X24]
	107 Add X0, X31, 32
	108 Call Enumerator<Object>.Dispose, X0
	109 Move W8, [X20+24]
	110 Add W21, W21, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Call 0x1C17F20
	113 Move X22, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X22
	116 Call 0x3EB2AD0
	117 Move X23, [X0]
	118 Call 0x3EB2AE0
	119 Move X1, [X24]
	120 Add X0, X31, 32
	121 Call Enumerator<Object>.Dispose, X0
	122 Compare X23, 0
	123 JumpIfEqual {109}
	124 Move X0, X23
	125 Call 0x1C17F18
	126 Move X20, [X31+128]
	127 Move X19, [X31+136]
	128 Move X22, [X31+112]
	129 Move X21, [X31+120]
	130 Move X24, [X31+96]
	131 Move X23, [X31+104]
	132 Move X26, [X31+80]
	133 Move X25, [X31+88]
	134 Move X30, [X31+64]
	135 Move X27, [X31+72]
	136 Add X31, X31, 144
	137 Return 
	138 Call 0x1C17F20
	139 Move X23, X31
	140 Move X22, X0
	141 Move X1, [X24]
	142 Add X0, X31, 32
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X23, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X22
	147 Call 0x1D2D690
	148 Move X0, X23
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void FinalizationConvexHull(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx)

Disassembly:
	0x038F208C LDR X8, [X20 + 0x18]
	0x038F2090 CBZ X8, 0x38F2178
	0x038F2094 CBZ X21, 0x38F2178
	0x038F2098 LDR X1, [X8 + 0x30]
	0x038F209C MOV X0, X21
	0x038F20A0 BL 0x38EF72C
	0x038F20A4 LDR X1, [X20 + 0x30]
	0x038F20A8 MOV X0, X21
	0x038F20AC BL 0x38EF72C
	0x038F20B0 CBZ X19, 0x38F2178
	0x038F20B4 LDR X0, [X19 + 0x18]
	0x038F20B8 CBZ X0, 0x38F2178
	0x038F20BC ADRP X9, 0x85B000
	0x038F20C0 LDR X9, [X9 + 0x720]
	0x038F20C4 LDR W10, [X0 + 0x1C]
	0x038F20C8 LDR X8, [X0 + 0x10]
	0x038F20CC LDR X9, [X9]
	0x038F20D0 ADD W10, W10, 0x1
	0x038F20D4 STR W10, [X0 + 0x1C]
	0x038F20D8 CBZ X8, 0x38F2178
	0x038F20DC LDRSW X10, [X0 + 0x18]
	0x038F20E0 LDR W11, [X8 + 0x18]
	0x038F20E4 CMP W10, W11
	0x038F20E8 B.CS 0x38F2100
	0x038F20EC ADD W9, W10, 0x1
	0x038F20F0 ADD X8, X8, X10, 0x3, LSL
	0x038F20F4 STR W9, [X0 + 0x18]
	0x038F20F8 STR X21, [X8 + 0x20]
	0x038F20FC B 0x38F2114
	0x038F2100 LDR X8, [X9 + 0x20]
	0x038F2104 MOV X1, X21
	0x038F2108 LDR X8, [X8 + 0xC0]
	0x038F210C LDR X2, [X8 + 0x70]
	0x038F2110 BL 0x301BF90
	0x038F2114 LDR X8, [X20 + 0x18]
	0x038F2118 CBZ X8, 0x38F2178
	0x038F211C LDR X9, [X20 + 0x10]
	0x038F2120 STR X9, [X8 + 0x10]
	0x038F2124 LDR X9, [X20 + 0x10]
	0x038F2128 CBZ X9, 0x38F2178
	0x038F212C STR X8, [X9 + 0x18]
	0x038F2130 LDR X8, [X19 + 0x48]
	0x038F2134 CBZ X8, 0x38F2178
	0x038F2138 MOV X0, X19
	0x038F213C MOV X1, X21
	0x038F2140 BL 0x38F2450
	0x038F2144 TBZ X0, 0x0, 0x38F215C
	0x038F2148 LDP X20, X19, [X31 + 0x30]
	0x038F214C LDP X22, X21, [X31 + 0x20]
	0x038F2150 LDP X24, X23, [X31 + 0x10]
	0x038F2154 LDR X30, [X31], #0x40
	0x038F2158 RET
	0x038F215C MOV X0, X19
	0x038F2160 MOV X1, X21
	0x038F2164 LDP X20, X19, [X31 + 0x30]
	0x038F2168 LDP X22, X21, [X31 + 0x20]
	0x038F216C LDP X24, X23, [X31 + 0x10]
	0x038F2170 LDR X30, [X31], #0x40
	0x038F2174 B 0x38F1CAC
	0x038F2178 BL 0x1C16F20
	0x038F217C B 0x38F445C
	0x038F2180 STR X30, [X31 - 0x10]!
	0x038F2184 LDR X0, [X0 + 0x48]
	0x038F2188 CBZ X0, 0x38F219C
	0x038F218C CBZ X1, 0x38F219C
	0x038F2190 LDR V0, [X1 + 0x18]
	0x038F2194 LDR X30, [X31], #0x10
	0x038F2198 B 0x38F0A08
	0x038F219C BL 0x1C16F20
	0x038F21A0 STR X30, [X31 - 0x40]!
	0x038F21A4 STP X24, X23, [X31 + 0x10]
	0x038F21A8 STP X22, X21, [X31 + 0x20]
	0x038F21AC STP X20, X19, [X31 + 0x30]
	0x038F21B0 ADRP X20, 0xAEF000
	0x038F21B4 LDRB W8, [X20 + 0x717]
	0x038F21B8 MOV X21, X2
	0x038F21BC MOV X22, X1
	0x038F21C0 MOV X19, X0
	0x038F21C4 TBNZ X8, 0x0, 0x38F21F4
	0x038F21C8 ADRP X0, 0x85B000
	0x038F21CC LDR X0, [X0 + 0x818]
	0x038F21D0 BL 0x1C16CF4
	0x038F21D4 ADRP X0, 0x85B000
	0x038F21D8 LDR X0, [X0 + 0x828]
	0x038F21DC BL 0x1C16CF4
	0x038F21E0 ADRP X0, 0x85B000
	0x038F21E4 LDR X0, [X0 + 0x720]
	0x038F21E8 BL 0x1C16CF4
	0x038F21EC MOVZ W8, 0x1
	0x038F21F0 STRB W8, [X20 + 0x717]
	0x038F21F4 CBZ X21, 0x38F233C
	0x038F21F8 LDR X8, [X21 + 0x10]
	0x038F21FC CBZ X8, 0x38F233C
	0x038F2200 ADRP X9, 0x85B000
	0x038F2204 LDR X9, [X9 + 0x828]
	0x038F2208 LDR X23, [X21 + 0x28]
	0x038F220C LDR X24, [X8 + 0x28]
	0x038F2210 LDR X0, [X9]
	0x038F2214 BL 0x1C16F10
	0x038F2218 MOV X1, X22
	0x038F221C MOV X2, X23
	0x038F2220 MOV X3, X24
	0x038F2224 MOV X20, X0
	0x038F2228 BL 0x38EF370
	0x038F222C CBZ X20, 0x38F233C
	0x038F2230 LDR X1, [X21 + 0x30]
	0x038F2234 MOV X0, X20
	0x038F2238 BL 0x38EF72C
	0x038F223C CBZ X19, 0x38F233C
	0x038F2240 LDR X0, [X19 + 0x18]
	0x038F2244 CBZ X0, 0x38F233C
	0x038F2248 ADRP X9, 0x85B000
	0x038F224C LDR X9, [X9 + 0x720]
	0x038F2250 LDR W10, [X0 + 0x1C]
	0x038F2254 LDR X8, [X0 + 0x10]
	0x038F2258 LDR X9, [X9]
	0x038F225C ADD W10, W10, 0x1
	0x038F2260 STR W10, [X0 + 0x1C]
	0x038F2264 CBZ X8, 0x38F233C
	0x038F2268 LDRSW X10, [X0 + 0x18]
	0x038F226C LDR W11, [X8 + 0x18]
	0x038F2270 ADRP X23, 0x85B000
	0x038F2274 LDR X23, [X23 + 0x818]
	0x038F2278 CMP W10, W11
	0x038F227C B.CS 0x38F2294
	0x038F2280 ADD W9, W10, 0x1
	0x038F2284 ADD X8, X8, X10, 0x3, LSL
	0x038F2288 STR W9, [X0 + 0x18]
	0x038F228C STR X20, [X8 + 0x20]
	0x038F2290 B 0x38F22A8
	0x038F2294 LDR X8, [X9 + 0x20]
	0x038F2298 MOV X1, X20
	0x038F229C LDR X8, [X8 + 0xC0]
	0x038F22A0 LDR X2, [X8 + 0x70]
	0x038F22A4 BL 0x301BF90
	0x038F22A8 LDR X0, [X23]
	0x038F22AC BL 0x1C16F10
	0x038F22B0 MOV X1, X22
	0x038F22B4 MOV X23, X0
	0x038F22B8 BL 0x38F0B54
	0x038F22BC CBZ X23, 0x38F233C
	0x038F22C0 LDR X8, [X21 + 0x10]
	0x038F22C4 STP X8, X21, [X23 + 0x10]
	0x038F22C8 LDR X8, [X21 + 0x10]
	0x038F22CC CBZ X8, 0x38F233C
	0x038F22D0 STR X23, [X8 + 0x18]
	0x038F22D4 STR X23, [X21 + 0x10]
	0x038F22D8 LDR X8, [X19 + 0x48]
	0x038F22DC CBZ X8, 0x38F233C
	0x038F22E0 LDR X8, [X19]
	0x038F22E4 MOV X0, X19
	0x038F22E8 LDP X9, X1, [X8 + 0x1B8]
	0x038F22EC BLR X9
	0x038F22F0 TBZ X0, 0x0, 0x38F2308
	0x038F22F4 MOV X0, X19
	0x038F22F8 BL 0x38F1438
	0x038F22FC CBZ X0, 0x38F233C
	0x038F2300 MOV X1, X23
	0x038F2304 BL 0x38F1ED0
	0x038F2308 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {212}
	009 Move X8, [X0+72]
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfEqual {212}
	013 Move X8, [X8+16]
	014 Compare X8, 0
	015 JumpIfEqual {212}
	016 Move X1, [X8+16]
	017 Compare X1, 0
	018 JumpIfEqual {212}
	019 Move X2, [X1+16]
	020 Move X0, X19
	021 Call DTSweep.TurnAdvancingFrontConvex, X0, X1, X2
	022 Move X8, [X19+72]
	023 Compare X8, 0
	024 JumpIfEqual {212}
	025 Move X8, [X8+24]
	026 Compare X8, 0
	027 JumpIfEqual {212}
	028 Move X23, [X8+24]
	029 Compare X23, 0
	030 JumpIfEqual {212}
	031 Move X8, [X23+16]
	032 Compare X8, 0
	033 JumpIfEqual {212}
	034 Move X0, [X23+48]
	035 Compare X0, 0
	036 JumpIfEqual {212}
	037 Move X1, [X8+40]
	038 Call DelaunayTriangle.Contains, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {79}
	043 Move X8, [X23+24]
	044 Compare X8, 0
	045 JumpIfEqual {212}
	046 Move X0, [X23+48]
	047 Compare X0, 0
	048 JumpIfEqual {212}
	049 Move X1, [X8+40]
	050 Call DelaunayTriangle.Contains, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X0, [X23+48]
	056 Compare X0, 0
	057 JumpIfEqual {212}
	058 Move X1, [X23+40]
	059 Call DelaunayTriangle.NeighborAcrossFrom, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {212}
	062 Move X22, [X23+40]
	063 Move X21, [X23+48]
	064 Move X20, X0
	065 Move X1, X21
	066 Move X2, X22
	067 Call DelaunayTriangle.OppositePoint, X0, X1, X2
	068 Move X3, X0
	069 Move X0, X21
	070 Move X1, X22
	071 Move X2, X20
	072 Call DTSweep.RotateTrianglePair, X0, X1, X2, X3
	073 Move X1, [X23+48]
	074 Move X0, X19
	075 Call DTSweepContext.MapTriangleToNodes, X0, X1
	076 Move X0, X19
	077 Move X1, X20
	078 Call DTSweepContext.MapTriangleToNodes, X0, X1
	079 Move X8, [X19+72]
	080 Compare X8, 0
	081 JumpIfEqual {212}
	082 Move X8, [X8+16]
	083 Compare X8, 0
	084 JumpIfEqual {212}
	085 Move X23, [X8+16]
	086 Compare X23, 0
	087 JumpIfEqual {212}
	088 Move X8, [X23+24]
	089 Compare X8, 0
	090 JumpIfEqual {212}
	091 Move X0, [X23+48]
	092 Compare X0, 0
	093 JumpIfEqual {212}
	094 Move X1, [X8+40]
	095 Call DelaunayTriangle.Contains, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {136}
	100 Move X8, [X23+16]
	101 Compare X8, 0
	102 JumpIfEqual {212}
	103 Move X0, [X23+48]
	104 Compare X0, 0
	105 JumpIfEqual {212}
	106 Move X1, [X8+40]
	107 Call DelaunayTriangle.Contains, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {136}
	112 Move X0, [X23+48]
	113 Compare X0, 0
	114 JumpIfEqual {212}
	115 Move X1, [X23+40]
	116 Call DelaunayTriangle.NeighborAcrossFrom, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {212}
	119 Move X22, [X23+40]
	120 Move X21, [X23+48]
	121 Move X20, X0
	122 Move X1, X21
	123 Move X2, X22
	124 Call DelaunayTriangle.OppositePoint, X0, X1, X2
	125 Move X3, X0
	126 Move X0, X21
	127 Move X1, X22
	128 Move X2, X20
	129 Call DTSweep.RotateTrianglePair, X0, X1, X2, X3
	130 Move X1, [X23+48]
	131 Move X0, X19
	132 Call DTSweepContext.MapTriangleToNodes, X0, X1
	133 Move X0, X19
	134 Move X1, X20
	135 Call DTSweepContext.MapTriangleToNodes, X0, X1
	136 Move X9, [X19+72]
	137 Compare X9, 0
	138 JumpIfEqual {212}
	139 Move X8, [X9+16]
	140 Compare X8, 0
	141 JumpIfEqual {212}
	142 Move X9, [X9+24]
	143 Compare X9, 0
	144 JumpIfEqual {212}
	145 Move X9, [X9+24]
	146 Compare X9, 0
	147 JumpIfEqual {212}
	148 Move X22, [X8+40]
	149 Move X21, [X9+40]
	150 Move X20, [X9+48]
	151 Move X0, X19
	152 Move X1, X20
	153 Call DTSweepContext.RemoveFromList, X0, X1
	154 Compare X20, 0
	155 JumpIfEqual {212}
	156 Move X0, X20
	157 Move X1, X21
	158 Call DelaunayTriangle.PointCCWFrom, X0, X1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X21, X0
	161 Move X0, X20
	162 Move X1, X21
	163 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	164 Move X20, X0
	165 Move X8, [X19+72]
	166 Compare X8, 0
	167 JumpIfEqual {212}
	168 Move X8, [X8+16]
	169 Compare X8, 0
	170 JumpIfEqual {212}
	171 Move X9, [X8+16]
	172 Compare X9, 0
	173 JumpIfEqual {212}
	174 Move X1, [X8+40]
	175 Move X22, [X9+40]
	176 Move X0, X20
	177 Call DelaunayTriangle.PointCWFrom, X0, X1
	178 Move X8, [X19+72]
	179 Compare X8, 0
	180 JumpIfEqual {212}
	181 Move X8, [X8+16]
	182 Compare X8, 0
	183 JumpIfEqual {212}
	184 Move X1, [X8+40]
	185 Move X21, X0
	186 Move X0, X20
	187 Call DelaunayTriangle.NeighborCWFrom, X0, X1
	188 Move X20, X0
	189 Move X0, X19
	190 Move X1, X20
	191 Call DTSweepContext.RemoveFromList, X0, X1
	192 Compare X20, 0
	193 JumpIfEqual {212}
	194 Move X0, X20
	195 Move X1, X21
	196 Call DelaunayTriangle.PointCCWFrom, X0, X1
	197 Move X21, X0
	198 Move X0, X20
	199 Move X1, X21
	200 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X20, X0
	203 Move X0, X19
	204 Move X20, [X31+32]
	205 Move X19, [X31+40]
	206 Move X22, [X31+16]
	207 Move X21, [X31+24]
	208 Move X30, [X31+48]
	209 Move X23, [X31+56]
	210 Call DTSweepContext.FinalizeTriangulation, X0
	211 Return 
	212 Call 0x1C17F20

Method: System.Void TurnAdvancingFrontConvex(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode b, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode c)

Disassembly:
	0x038F2688 MOV X0, X19
	0x038F268C MOV X1, X26
	0x038F2690 BL 0x38F1CAC
	0x038F2694 MOV X0, X21
	0x038F2698 MOV W1, W22
	0x038F269C MOV W2, W31
	0x038F26A0 BL 0x38F0354
	0x038F26A4 MOV X0, X23
	0x038F26A8 MOV W1, W27
	0x038F26AC MOV W2, W31
	0x038F26B0 BL 0x38F0354
	0x038F26B4 B 0x38F25F4
	0x038F26B8 BL 0x1C16F20
	0x038F26BC STP X30, X21, [X31 - 0x20]!
	0x038F26C0 STP X20, X19, [X31 + 0x10]
	0x038F26C4 ADRP X21, 0xAEF000
	0x038F26C8 LDRB W8, [X21 + 0x737]
	0x038F26CC MOV X19, X1
	0x038F26D0 MOV X20, X0
	0x038F26D4 TBNZ X8, 0x0, 0x38F26EC
	0x038F26D8 ADRP X0, 0x85B000
	0x038F26DC LDR X0, [X0 + 0x888]
	0x038F26E0 BL 0x1C16CF4
	0x038F26E4 MOVZ W8, 0x1
	0x038F26E8 STRB W8, [X21 + 0x737]
	0x038F26EC LDR X8, [X20 + 0x10]
	0x038F26F0 STR X19, [X20 + 0x18]
	0x038F26F4 CBZ X8, 0x38F2704
	0x038F26F8 LDP X20, X19, [X31 + 0x10]
	0x038F26FC LDP X30, X21, [X31], #0x20
	0x038F2700 RET
	0x038F2704 BL 0x1C16F20
	0x038F2708 STR X30, [X31 - 0x40]!
	0x038F270C STP X24, X23, [X31 + 0x10]
	0x038F2710 STP X22, X21, [X31 + 0x20]
	0x038F2714 STP X20, X19, [X31 + 0x30]
	0x038F2718 ADRP X22, 0xAEF000
	0x038F271C LDRB W8, [X22 + 0x720]
	0x038F2720 MOV X19, X2
	0x038F2724 MOV X20, X1
	0x038F2728 MOV X21, X0
	0x038F272C TBNZ X8, 0x0, 0x38F2744
	0x038F2730 ADRP X0, 0x85B000
	0x038F2734 LDR X0, [X0 + 0x7C8]
	0x038F2738 BL 0x1C16CF4
	0x038F273C MOVZ W8, 0x1
	0x038F2740 STRB W8, [X22 + 0x720]
	0x038F2744 CBZ X21, 0x38F27C4
	0x038F2748 MOV X0, X21
	0x038F274C MOV X1, X20
	0x038F2750 MOV X2, X19
	0x038F2754 BL 0x38EF644
	0x038F2758 ADDS W31, W0, 0x1
	0x038F275C B.EQ 0x38F27A8
	0x038F2760 ADRP X24, 0x85B000
	0x038F2764 LDR X24, [X24 + 0x7C8]
	0x038F2768 MOV W23, W0
	0x038F276C ADD X0, X21, 0x40
	0x038F2770 MOVZ W2, 0x1
	0x038F2774 MOV W1, W23
	0x038F2778 MOVZ W22, 0x1
	0x038F277C BL 0x38F0354
	0x038F2780 LDR X2, [X24]
	0x038F2784 ADD X0, X21, 0x28
	0x038F2788 MOV W1, W23
	0x038F278C BL 0x2D1F64C
	0x038F2790 CBZ X0, 0x38F27AC
	0x038F2794 MOV X1, X20
	0x038F2798 MOV X2, X19
	0x038F279C BL 0x38F0008
	0x038F27A0 MOVZ W22, 0x1
	0x038F27A4 B 0x38F27AC
	0x038F27A8 MOV W22, W31
	0x038F27AC MOV W0, W22
	0x038F27B0 LDP X20, X19, [X31 + 0x30]
	0x038F27B4 LDP X22, X21, [X31 + 0x20]
	0x038F27B8 LDP X24, X23, [X31 + 0x10]
	0x038F27BC LDR X30, [X31], #0x40
	0x038F27C0 RET
	0x038F27C4 BL 0x1C16F20
	0x038F27C8 STR X30, [X31 - 0x10]!
	0x038F27CC CBZ X0, 0x38F27F0
	0x038F27D0 LDR X8, [X0 + 0x68]
	0x038F27D4 CBZ X8, 0x38F27F0
	0x038F27D8 LDRB W8, [X8 + 0x18]
	0x038F27DC CBZ W8, 0x38F27E8
	0x038F27E0 LDR X30, [X31], #0x10
	0x038F27E4 B 0x38F29D0
	0x038F27E8 LDR X30, [X31], #0x10
	0x038F27EC B 0x38F2ADC
	0x038F27F0 BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xAF0000
	011 Move W8, [X22+1813]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x85C000
	020 Move X0, [X0+2128]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1813], W8
	024 Compare X21, 0
	025 JumpIfEqual {101}
	026 Move X8, [X21+72]
	027 Compare X8, 0
	028 JumpIfEqual {101}
	029 Move X26, 0x85C000
	030 Move X26, [X26+2128]
	031 Move X22, X20
	032 Move X8, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, [X21]
	035 Move X0, X21
	036 Move X9, [X8+440]
	037 Move X1, [X8+448]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Move X0, X21
	044 Call TriangulationContext.get_DTDebugContext, X0
	045 Compare X0, 0
	046 JumpIfEqual {101}
	047 Move X1, X19
	048 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	049 Compare X22, 0
	050 JumpIfEqual {101}
	051 Compare X19, 0
	052 JumpIfEqual {101}
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfEqual {101}
	056 Move X0, [X26]
	057 Move X25, [X22+40]
	058 Move X23, [X19+40]
	059 Move X24, [X8+40]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X25
	065 Move X1, X23
	066 Move X2, X24
	067 Call TriangulationUtil.Orient2d, X0, X1, X2
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X22+24]
	071 Compare X8, 0
	072 JumpIfEqual {101}
	073 Move X0, [X26]
	074 Move X25, [X8+40]
	075 Move X23, [X22+40]
	076 Move X24, [X19+40]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X25
	082 Move X1, X23
	083 Move X2, X24
	084 Call TriangulationUtil.Orient2d, X0, X1, X2
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X21
	087 Move X1, X22
	088 Call DTSweep.Fill, X0, X1
	089 Move X8, [X21+72]
	090 Move X22, [X22+24]
	091 Compare X8, 0
	092 JumpIfNotEqual {32}
	093 Move X22, X19
	094 Move X0, X21
	095 Move X1, X19
	096 Call DTSweep.Fill, X0, X1
	097 Move X8, [X21+72]
	098 Move X19, [X19+16]
	099 Compare X8, 0
	100 JumpIfNotEqual {32}
	101 Call 0x1C17F20
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X26, [X31+16]
	109 Move X25, [X31+24]
	110 Move X30, [X31+80]
	111 Return 

Method: System.Void FinalizationPolygon(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx)

Disassembly:
	0x038F1FE4 B 0x38F1FEC
	0x038F1FE8 MOVZ W0, 0x2
	0x038F1FEC LDP X20, X19, [X31 + 0x20]
	0x038F1FF0 LDP X22, X21, [X31 + 0x10]
	0x038F1FF4 LDR X30, [X31 + 0x8]
	0x038F1FF8 LDR V8, [X31], #0x30
	0x038F1FFC RET
	0x038F2000 BL 0x1C16F20
	0x038F2004 STR X30, [X31 - 0x40]!
	0x038F2008 STP X24, X23, [X31 + 0x10]
	0x038F200C STP X22, X21, [X31 + 0x20]
	0x038F2010 STP X20, X19, [X31 + 0x30]
	0x038F2014 ADRP X21, 0xAEF000
	0x038F2018 LDRB W8, [X21 + 0x72A]
	0x038F201C MOV X20, X1
	0x038F2020 MOV X19, X0
	0x038F2024 TBNZ X8, 0x0, 0x38F2048
	0x038F2028 ADRP X0, 0x85B000
	0x038F202C LDR X0, [X0 + 0x828]
	0x038F2030 BL 0x1C16CF4
	0x038F2034 ADRP X0, 0x85B000
	0x038F2038 LDR X0, [X0 + 0x720]
	0x038F203C BL 0x1C16CF4
	0x038F2040 MOVZ W8, 0x1
	0x038F2044 STRB W8, [X21 + 0x72A]
	0x038F2048 CBZ X20, 0x38F2178
	0x038F204C LDR X8, [X20 + 0x18]
	0x038F2050 CBZ X8, 0x38F2178
	0x038F2054 LDR X9, [X20 + 0x10]
	0x038F2058 CBZ X9, 0x38F2178
	0x038F205C ADRP X10, 0x85B000
	0x038F2060 LDR X10, [X10 + 0x828]
	0x038F2064 LDR X22, [X20 + 0x28]
	0x038F2068 LDR X23, [X8 + 0x28]
	0x038F206C LDR X24, [X9 + 0x28]
	0x038F2070 LDR X0, [X10]
	0x038F2074 BL 0x1C16F10
	0x038F2078 MOV X1, X23
	0x038F207C MOV X2, X22
	0x038F2080 MOV X3, X24
	0x038F2084 MOV X21, X0
	0x038F2088 BL 0x38EF370

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {52}
	009 Move X8, [X0+72]
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfEqual {52}
	013 Move X8, [X8+16]
	014 Compare X8, 0
	015 JumpIfEqual {52}
	016 Move X8, [X8+16]
	017 Compare X8, 0
	018 JumpIfEqual {52}
	019 Move X20, [X8+48]
	020 Compare X20, 0
	021 JumpIfEqual {52}
	022 Move X21, [X8+40]
	023 Move W23, 0x5556
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move X0, X20
	026 Move X1, X21
	027 Add X22, X20, 64
	028 Call DelaunayTriangle.IndexOf, X0, X1
	029 Add W8, W0, 1
	030 NotImplemented "Instruction SMADDL not yet implemented."
	031 Move X10, X9
	032 ShiftRight X10, 63
	033 And X10, X10, 0x7FFFFFFF
	034 Move X9, X9
	035 ShiftRight X9, 32
	036 And X9, X9, 0x7FFFFFFF
	037 Add W9, W9, W10
	038 Add W9, W9, W9
	039 Subtract W1, W8, W9
	040 Move X0, X22
	041 Call FixedBitArray3.get_Item, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {53}
	046 Move X0, X20
	047 Move X1, X21
	048 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	049 Move X20, X0
	050 Compare X0, 0
	051 JumpIfNotEqual {25}
	052 Call 0x1C17F20
	053 Move X0, X19
	054 Move X1, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call DTSweepContext.MeshCleanReq, X0, X1
	062 Return 

Method: UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode PointEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F231C MOV X1, X20
	0x038F2320 BL 0x38F1CAC
	0x038F2324 MOV X0, X23
	0x038F2328 LDP X20, X19, [X31 + 0x30]
	0x038F232C LDP X22, X21, [X31 + 0x20]
	0x038F2330 LDP X24, X23, [X31 + 0x10]
	0x038F2334 LDR X30, [X31], #0x40
	0x038F2338 RET
	0x038F233C BL 0x1C16F20
	0x038F2340 STR X30, [X31 - 0x10]!
	0x038F2344 LDR X8, [X0 + 0x48]
	0x038F2348 CBZ X8, 0x38F2354
	0x038F234C LDR X30, [X31], #0x10
	0x038F2350 RET
	0x038F2354 BL 0x1C16F20
	0x038F2358 STP D9, D8, [X31 - 0x30]!
	0x038F235C STP X30, X21, [X31 + 0x10]
	0x038F2360 STP X20, X19, [X31 + 0x20]
	0x038F2364 CBZ X1, 0x38F23FC
	0x038F2368 LDR X21, [X1 + 0x10]
	0x038F236C MOV X19, X1
	0x038F2370 CBZ X21, 0x38F23FC
	0x038F2374 ADRP X8, 0xFFFFFFFFFD1FB000
	0x038F2378 ADRP X9, 0xFFFFFFFFFD1FB000
	0x038F237C LDR V8, [X8 + 0xF90]
	0x038F2380 LDR V9, [X9 + 0xBD0]
	0x038F2384 MOV X20, X0
	0x038F2388 LDR X8, [X21 + 0x10]
	0x038F238C CBZ X8, 0x38F23C0
	0x038F2390 MOV X0, X21
	0x038F2394 BL 0x38F3BE4
	0x038F2398 FCMP D0, D8
	0x038F239C B.GT 0x38F23C0
	0x038F23A0 FCMP D0, D9
	0x038F23A4 B.MI 0x38F23C0
	0x038F23A8 MOV X0, X20
	0x038F23AC MOV X1, X21
	0x038F23B0 BL 0x38F2004
	0x038F23B4 LDR X21, [X21 + 0x10]
	0x038F23B8 CBNZ X21, 0x38F2388
	0x038F23BC B 0x38F23FC
	0x038F23C0 LDR X21, [X19 + 0x18]
	0x038F23C4 CBZ X21, 0x38F23FC
	0x038F23C8 LDR X8, [X21 + 0x18]
	0x038F23CC CBZ X8, 0x38F2400
	0x038F23D0 MOV X0, X21
	0x038F23D4 BL 0x38F3BE4
	0x038F23D8 FCMP D0, D8
	0x038F23DC B.GT 0x38F2400
	0x038F23E0 FCMP D0, D9
	0x038F23E4 B.MI 0x38F2400
	0x038F23E8 MOV X0, X20
	0x038F23EC MOV X1, X21
	0x038F23F0 BL 0x38F2004
	0x038F23F4 LDR X21, [X21 + 0x18]
	0x038F23F8 CBNZ X21, 0x38F23C8
	0x038F23FC BL 0x1C16F20
	0x038F2400 LDR X8, [X19 + 0x10]
	0x038F2404 CBZ X8, 0x38F2440
	0x038F2408 LDR X8, [X8 + 0x10]
	0x038F240C CBZ X8, 0x38F2440
	0x038F2410 MOV X0, X19
	0x038F2414 BL 0x38F3CA8
	0x038F2418 ADRP X8, 0xFFFFFFFFFD1FC000
	0x038F241C LDR V1, [X8 + 0x418]
	0x038F2420 FCMP D0, D1
	0x038F2424 B.PL 0x38F2440

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAF0000
	010 Move W8, [X21+1814]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x85C000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1814], W8
	022 Compare X19, 0
	023 JumpIfEqual {88}
	024 Move X0, X19
	025 Move X1, X20
	026 Call DTSweepContext.LocateNode, X0, X1
	027 Move X8, [X19]
	028 Move X21, X0
	029 Move X0, X19
	030 Move X9, [X8+440]
	031 Move X1, [X8+448]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X0, X19
	038 Call TriangulationContext.get_DTDebugContext, X0
	039 Compare X0, 0
	040 JumpIfEqual {88}
	041 Move X1, X21
	042 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	043 Move X0, X19
	044 Move X1, X20
	045 Move X2, X21
	046 Call DTSweep.NewFrontTriangle, X0, X1, X2
	047 Compare X20, 0
	048 JumpIfEqual {88}
	049 Compare X21, 0
	050 JumpIfEqual {88}
	051 Move X8, [X21+40]
	052 Compare X8, 0
	053 JumpIfEqual {88}
	054 Move X23, 0x85C000
	055 Move X23, [X23+2128]
	056 Move X22, X0
	057 Move V8, [X20+24]
	058 Move V9, [X8+24]
	059 Move X0, [X23]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X23]
	065 Move X8, [X0+184]
	066 Move V0, [X8]
	067 Add D0, D9, D0
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move X0, X19
	070 Move X1, X21
	071 Call DTSweep.Fill, X0, X1
	072 Move X8, [X19+72]
	073 Compare X8, 0
	074 JumpIfEqual {88}
	075 Move X0, X19
	076 Move X1, X22
	077 Call DTSweep.FillAdvancingFront, X0, X1
	078 Move X0, X22
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Move D9, [X31+64]
	086 Move D8, [X31+72]
	087 Return X0
	088 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode NewFrontTriangle(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F31A0 MOV X1, X19
	0x038F31A4 BL 0x38F1ED0
	0x038F31A8 CBZ X19, 0x38F325C
	0x038F31AC LDR X23, [X19 + 0x28]
	0x038F31B0 CBZ X23, 0x38F325C
	0x038F31B4 CBZ X20, 0x38F325C
	0x038F31B8 LDR X8, [X20 + 0x10]
	0x038F31BC CBZ X8, 0x38F325C
	0x038F31C0 LDR V0, [X23 + 0x18]
	0x038F31C4 LDR V1, [X8 + 0x18]
	0x038F31C8 FCMP D0, D1
	0x038F31CC B.LE 0x38F3220
	0x038F31D0 LDR X8, [X19 + 0x18]
	0x038F31D4 CBZ X8, 0x38F325C
	0x038F31D8 LDR X9, [X8 + 0x18]
	0x038F31DC CBZ X9, 0x38F325C
	0x038F31E0 LDR X0, [X22]
	0x038F31E4 LDR X24, [X8 + 0x28]
	0x038F31E8 LDR X25, [X9 + 0x28]
	0x038F31EC LDR W8, [X0 + 0xE0]
	0x038F31F0 CBNZ W8, 0x38F31F8
	0x038F31F4 BL 0x1C16DFC
	0x038F31F8 MOV X0, X23
	0x038F31FC MOV X1, X24
	0x038F3200 MOV X2, X25
	0x038F3204 BL 0x38F1F1C
	0x038F3208 CBZ W0, 0x38F3238
	0x038F320C MOV X0, X21
	0x038F3210 MOV X1, X20
	0x038F3214 MOV X2, X19
	0x038F3218 BL 0x38F2F2C
	0x038F321C B 0x38F3168
	0x038F3220 LDP X20, X19, [X31 + 0x40]
	0x038F3224 LDP X22, X21, [X31 + 0x30]
	0x038F3228 LDP X24, X23, [X31 + 0x20]
	0x038F322C LDP X26, X25, [X31 + 0x10]
	0x038F3230 LDP X30, X27, [X31], #0x50
	0x038F3234 RET
	0x038F3238 MOV X0, X21
	0x038F323C MOV X1, X20
	0x038F3240 MOV X2, X19
	0x038F3244 LDP X20, X19, [X31 + 0x40]
	0x038F3248 LDP X22, X21, [X31 + 0x30]
	0x038F324C LDP X24, X23, [X31 + 0x20]
	0x038F3250 LDP X26, X25, [X31 + 0x10]
	0x038F3254 LDP X30, X27, [X31], #0x50
	0x038F3258 B 0x38F3044
	0x038F325C BL 0x1C16F20
	0x038F3260 STR X30, [X31 - 0x30]!
	0x038F3264 STP X22, X21, [X31 + 0x10]
	0x038F3268 STP X20, X19, [X31 + 0x20]
	0x038F326C MOV X21, X2
	0x038F3270 MOV X2, X31
	0x038F3274 MOV X19, X4
	0x038F3278 MOV X20, X3
	0x038F327C MOV X22, X0
	0x038F3280 BL 0x33802E4
	0x038F3284 STP X21, X20, [X22 + 0x90]
	0x038F3288 STR X19, [X22 + 0xA0]
	0x038F328C LDP X20, X19, [X31 + 0x20]
	0x038F3290 LDP X22, X21, [X31 + 0x10]
	0x038F3294 LDR X30, [X31], #0x30
	0x038F3298 RET
	0x038F329C STP X29, X30, [X31 - 0x60]!
	0x038F32A0 STP X28, X27, [X31 + 0x10]
	0x038F32A4 STP X26, X25, [X31 + 0x20]
	0x038F32A8 STP X24, X23, [X31 + 0x30]
	0x038F32AC STP X22, X21, [X31 + 0x40]
	0x038F32B0 STP X20, X19, [X31 + 0x50]
	0x038F32B4 ADRP X28, 0x85A000
	0x038F32B8 LDR X28, [X28 + 0x850]
	0x038F32BC MOV X20, X4
	0x038F32C0 MOV X21, X3
	0x038F32C4 MOV X27, X2
	0x038F32C8 MOV X22, X1
	0x038F32CC MOV X19, X0
	0x038F32D0 ADRP X29, 0xAEE000
	0x038F32D4 LDRB W8, [X29 + 0x723]
	0x038F32D8 TBNZ X8, 0x0, 0x38F331C
	0x038F32DC ADRP X0, 0x808000
	0x038F32E0 LDR X0, [X0 + 0x958]
	0x038F32E4 BL 0x1C16CF4
	0x038F32E8 MOV X0, X28
	0x038F32EC BL 0x1C16CF4
	0x038F32F0 ADRP X0, 0x85A000
	0x038F32F4 LDR X0, [X0 + 0x8A8]
	0x038F32F8 BL 0x1C16CF4
	0x038F32FC ADRP X0, 0x85A000
	0x038F3300 LDR X0, [X0 + 0x8B0]
	0x038F3304 BL 0x1C16CF4
	0x038F3308 ADRP X0, 0x85A000
	0x038F330C LDR X0, [X0 + 0x8B8]
	0x038F3310 BL 0x1C16CF4
	0x038F3314 MOVZ W8, 0x1
	0x038F3318 STRB W8, [X29 + 0x723]
	0x038F331C CBZ X21, 0x38F361C
	0x038F3320 MOV X0, X21
	0x038F3324 MOV X1, X20
	0x038F3328 BL 0x38EFAC8
	0x038F332C CBZ X0, 0x38F361C
	0x038F3330 MOV X1, X21
	0x038F3334 MOV X2, X20
	0x038F3338 MOV X26, X0
	0x038F333C BL 0x38EF8D4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAEF000
	009 Move W8, [X20+1815]
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x85B000
	018 Move X0, [X0+2072]
	019 Call 0x1C17CF4
	020 Move X0, 0x85B000
	021 Move X0, [X0+2088]
	022 Call 0x1C17CF4
	023 Move X0, 0x85B000
	024 Move X0, [X0+1824]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1815], W8
	028 Compare X21, 0
	029 JumpIfEqual {129}
	030 Move X8, [X21+16]
	031 Compare X8, 0
	032 JumpIfEqual {129}
	033 Move X9, 0x85B000
	034 Move X9, [X9+2088]
	035 Move X23, [X21+40]
	036 Move X24, [X8+40]
	037 Move X0, [X9]
	038 Call 0x1C17F10
	039 Move X1, X22
	040 Move X2, X23
	041 Move X3, X24
	042 Move X20, X0
	043 Call DelaunayTriangle..ctor, X0, X1, X2, X3
	044 Compare X20, 0
	045 JumpIfEqual {129}
	046 Move X1, [X21+48]
	047 Move X0, X20
	048 Call DelaunayTriangle.MarkNeighbor, X0, X1
	049 Compare X19, 0
	050 JumpIfEqual {129}
	051 Move X0, [X19+24]
	052 Compare X0, 0
	053 JumpIfEqual {129}
	054 Move X9, 0x85B000
	055 Move X9, [X9+1824]
	056 Move W10, [X0+28]
	057 Move X8, [X0+16]
	058 Move X9, [X9]
	059 Add W10, W10, 1
	060 Move [X0+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {129}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 Move X23, 0x85B000
	066 Move X23, [X23+2072]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W9, W10, 1
	069 Add X8, X8, X10
	070 Move [X0+24], W9
	071 Move [X8+32], X20
	072 Move X8, [X9+32]
	073 Move X1, X20
	074 Move X8, [X8+192]
	075 Move X2, [X8+112]
	076 Call List`1<Object>.AddWithResize, X0, X1
	077 Move X0, [X23]
	078 Call 0x1C17F10
	079 Move X1, X22
	080 Move X23, X0
	081 Call AdvancingFrontNode..ctor, X0, X1
	082 Compare X23, 0
	083 JumpIfEqual {129}
	084 Move X8, [X21+16]
	085 Move [X23+16], X8
	086 Move [X23+24], X21
	087 Move X8, [X21+16]
	088 Compare X8, 0
	089 JumpIfEqual {129}
	090 Move [X8+24], X23
	091 Move [X21+16], X23
	092 Move X8, [X19+72]
	093 Compare X8, 0
	094 JumpIfEqual {129}
	095 Move X8, [X19]
	096 Move X0, X19
	097 Move X9, [X8+440]
	098 Move X1, [X8+448]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {110}
	104 Move X0, X19
	105 Call TriangulationContext.get_DTDebugContext, X0
	106 Compare X0, 0
	107 JumpIfEqual {129}
	108 Move X1, X23
	109 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	110 Move X0, X19
	111 Move X1, X20
	112 Call DTSweep.Legalize, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {120}
	117 Move X0, X19
	118 Move X1, X20
	119 Call DTSweepContext.MapTriangleToNodes, X0, X1
	120 Move X0, X23
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X22, [X31+32]
	124 Move X21, [X31+40]
	125 Move X24, [X31+16]
	126 Move X23, [X31+24]
	127 Move X30, [X31+64]
	128 Return X0
	129 Call 0x1C17F20

Method: System.Void EdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F2500 MOV X26, X0
	0x038F2504 LDR X0, [X31 + 0x18]
	0x038F2508 MOV W1, W22
	0x038F250C LDR X2, [X8]
	0x038F2510 BL 0x2D1F64C
	0x038F2514 MOV X29, X0
	0x038F2518 MOV X0, X26
	0x038F251C MOV X1, X20
	0x038F2520 MOV X2, X29
	0x038F2524 BL 0x38EF8D4
	0x038F2528 MOV X19, X0
	0x038F252C MOV X0, X26
	0x038F2530 MOV X1, X19
	0x038F2534 BL 0x38EF414
	0x038F2538 MOV W27, W0
	0x038F253C ADD X25, X26, 0x40
	0x038F2540 MOV X0, X25
	0x038F2544 MOV W1, W27
	0x038F2548 BL 0x38EFFA4
	0x038F254C TBNZ X0, 0x0, 0x38F2564
	0x038F2550 ADD X0, X26, 0x43
	0x038F2554 MOV W1, W27
	0x038F2558 STR X0, [X31 + 0x8]
	0x038F255C BL 0x38EFFA4
	0x038F2560 TBZ X0, 0x0, 0x38F2584
	0x038F2564 MOV X0, X25
	0x038F2568 MOV W1, W27
	0x038F256C BL 0x38EFFA4
	0x038F2570 AND W2, W0, 0x1
	0x038F2574 LDR X0, [X31 + 0x10]
	0x038F2578 MOV W1, W22
	0x038F257C BL 0x38F0354
	0x038F2580 B 0x38F25E0
	0x038F2584 MOV X0, X20
	0x038F2588 MOV X1, X29
	0x038F258C BL 0x38EFB48
	0x038F2590 MOV X25, X0
	0x038F2594 MOV X0, X20
	0x038F2598 MOV X1, X29
	0x038F259C BL 0x38EF900
	0x038F25A0 ADRP X8, 0x85B000
	0x038F25A4 LDR X8, [X8 + 0x850]
	0x038F25A8 MOV X24, X0
	0x038F25AC LDR X8, [X8]
	0x038F25B0 LDR W9, [X8 + 0xE0]
	0x038F25B4 CBNZ W9, 0x38F25C0
	0x038F25B8 MOV X0, X8
	0x038F25BC BL 0x1C16DFC
	0x038F25C0 MOV X0, X29
	0x038F25C4 MOV X1, X25
	0x038F25C8 MOV X2, X24
	0x038F25CC MOV X3, X19
	0x038F25D0 BL 0x38F40CC
	0x038F25D4 ADRP X24, 0x85B000
	0x038F25D8 LDR X24, [X24 + 0x7C8]
	0x038F25DC TBNZ X0, 0x0, 0x38F2618
	0x038F25E0 CMP W22, 0x2
	0x038F25E4 ADD W22, W22, 0x1
	0x038F25E8 CSET W28, CC
	0x038F25EC CMP W22, 0x3
	0x038F25F0 B.NE 0x38F24D4
	0x038F25F4 AND W0, W28, 0x1
	0x038F25F8 LDP X20, X19, [X31 + 0x70]
	0x038F25FC LDP X22, X21, [X31 + 0x60]
	0x038F2600 LDP X24, X23, [X31 + 0x50]
	0x038F2604 LDP X26, X25, [X31 + 0x40]
	0x038F2608 LDP X28, X27, [X31 + 0x30]
	0x038F260C LDP X29, X30, [X31 + 0x20]
	0x038F2610 ADD X31, X31, 0x80
	0x038F2614 RET
	0x038F2618 MOVZ W2, 0x1
	0x038F261C MOV X0, X21
	0x038F2620 MOV W1, W22
	0x038F2624 BL 0x38F0354
	0x038F2628 LDR X23, [X31 + 0x8]
	0x038F262C MOVZ W2, 0x1
	0x038F2630 MOV W1, W27
	0x038F2634 MOV X0, X23
	0x038F2638 BL 0x38F0354
	0x038F263C MOV X0, X20
	0x038F2640 MOV X1, X29
	0x038F2644 MOV X2, X26
	0x038F2648 MOV X3, X19
	0x038F264C BL 0x38F17F4
	0x038F2650 LDR X19, [X31]
	0x038F2654 MOV X1, X20
	0x038F2658 MOV X0, X19
	0x038F265C BL 0x38F2450
	0x038F2660 TBNZ X0, 0x0, 0x38F2674
	0x038F2664 CBZ X19, 0x38F26B8
	0x038F2668 MOV X0, X19
	0x038F266C MOV X1, X20
	0x038F2670 BL 0x38F1CAC
	0x038F2674 MOV X0, X19
	0x038F2678 MOV X1, X26
	0x038F267C BL 0x38F2450
	0x038F2680 TBNZ X0, 0x0, 0x38F2694

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {69}
	007 Move X8, [X0+104]
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfEqual {70}
	011 Move X21, X1
	012 Move [X8+16], X1
	013 Compare X1, 0
	014 JumpIfEqual {71}
	015 Move X9, [X21+16]
	016 Compare X9, 0
	017 JumpIfEqual {72}
	018 Move X10, [X21+24]
	019 Compare X10, 0
	020 JumpIfEqual {73}
	021 Move V0, [X9+24]
	022 Move V1, [X10+24]
	023 Move X20, X2
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move [X8+24], W9
	027 Move X8, [X19]
	028 Move X9, [X8+440]
	029 Move X1, [X8+448]
	030 Move X0, X19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move X0, X19
	037 Call TriangulationContext.get_DTDebugContext, X0
	038 Compare X20, 0
	039 JumpIfEqual {75}
	040 Compare X0, 0
	041 JumpIfEqual {76}
	042 Move X1, [X20+48]
	043 Call DTSweepDebugContext.set_PrimaryTriangle, X0, X1
	044 Compare X20, 0
	045 JumpIfEqual {74}
	046 Move X0, [X20+48]
	047 Move X1, [X21+16]
	048 Move X2, [X21+24]
	049 Call DTSweep.IsEdgeSideOfTriangle, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {64}
	054 Move X0, X19
	055 Move X1, X21
	056 Move X2, X20
	057 Call DTSweep.FillEdgeEvent, X0, X1, X2
	058 Move X1, [X21+16]
	059 Move X2, [X21+24]
	060 Move X3, [X20+48]
	061 Move X0, X19
	062 Move X4, X2
	063 Call DTSweep.EdgeEvent, X0, X1, X2, X3, X4
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Call 0x1C17F20
	072 Call 0x1C17F20
	073 Call 0x1C17F20
	074 Call 0x1C17F20
	075 Call 0x1C17F20
	076 Call 0x1C17F20
	077 Move X19, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X19
	080 Call 0x3EB2AD0
	081 Move X19, X0
	082 Move X0, 0x808000
	083 Move X0, [X0+3264]
	084 Call 0x1C17D08
	085 Move X8, [X19]
	086 Move X1, [X8]
	087 Call 0x1C18270
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {98}
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call 0x3EB2AE0
	097 Return 
	098 Move W0, 8
	099 Call 0x3EB2AF0
	100 Move X8, [X19]
	101 Move [X0], X8
	102 Move X1, 0x5C3000
	103 Add X1, X1, 3672
	104 Move X2, X31
	105 Call 0x3EB2B00
	106 Move X19, X0
	107 Call 0x3EB2AE0
	108 Move X0, X19
	109 Call 0x1D2D690
	110 Call 0x1991590

Method: System.Void FillEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F37C8 LDR X0, [X0 + 0x8E8]
	0x038F37CC BL 0x1C16CF4
	0x038F37D0 MOVZ W8, 0x1
	0x038F37D4 STRB W8, [X21 + 0x738]
	0x038F37D8 LDR X8, [X20 + 0x10]
	0x038F37DC STR X19, [X20 + 0x20]
	0x038F37E0 CBZ X8, 0x38F37F0
	0x038F37E4 LDP X20, X19, [X31 + 0x10]
	0x038F37E8 LDP X30, X21, [X31], #0x20
	0x038F37EC RET
	0x038F37F0 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {16}
	004 Move X8, [X0+104]
	005 Compare X8, 0
	006 JumpIfEqual {16}
	007 Move W8, [X8+24]
	008 Compare W8, 0
	009 JumpIfEqual {13}
	010 Move X30, [X31+16]
	011 Call DTSweep.FillRightAboveEdgeEvent, X0, X1, X2
	012 Return 
	013 Move X30, [X31+16]
	014 Call DTSweep.FillLeftAboveEdgeEvent, X0, X1, X2
	015 Return 
	016 Call 0x1C17F20

Method: System.Void FillRightConcaveEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3BE4 STP D11, D10, [X31 - 0x40]!
	0x038F3BE8 STP D9, D8, [X31 + 0x10]
	0x038F3BEC STR X30, [X31 + 0x20]
	0x038F3BF0 STP X20, X19, [X31 + 0x30]
	0x038F3BF4 ADRP X20, 0xAEE000
	0x038F3BF8 LDRB W8, [X20 + 0x728]
	0x038F3BFC MOV X19, X0
	0x038F3C00 TBNZ X8, 0x0, 0x38F3C18
	0x038F3C04 ADRP X0, 0x800000
	0x038F3C08 LDR X0, [X0 + 0x5A8]
	0x038F3C0C BL 0x1C16CF4
	0x038F3C10 MOVZ W8, 0x1
	0x038F3C14 STRB W8, [X20 + 0x728]
	0x038F3C18 CBZ X19, 0x38F3CA4
	0x038F3C1C LDR X9, [X19 + 0x28]
	0x038F3C20 CBZ X9, 0x38F3CA4
	0x038F3C24 LDR X8, [X19 + 0x10]
	0x038F3C28 CBZ X8, 0x38F3CA4
	0x038F3C2C LDR X8, [X8 + 0x28]
	0x038F3C30 CBZ X8, 0x38F3CA4
	0x038F3C34 LDR X10, [X19 + 0x18]
	0x038F3C38 CBZ X10, 0x38F3CA4
	0x038F3C3C LDR X10, [X10 + 0x28]
	0x038F3C40 CBZ X10, 0x38F3CA4
	0x038F3C44 ADRP X11, 0x800000
	0x038F3C48 LDR X11, [X11 + 0x5A8]
	0x038F3C4C LDP D0, D1, [X9 + 0x18]
	0x038F3C50 LDP D2, D3, [X8 + 0x18]
	0x038F3C54 LDP D4, D5, [X10 + 0x18]
	0x038F3C58 LDR X0, [X11]
	0x038F3C5C FSUB D9, D2, D0
	0x038F3C60 FSUB D8, D3, D1
	0x038F3C64 LDR W8, [X0 + 0xE0]
	0x038F3C68 FSUB D11, D4, D0
	0x038F3C6C FSUB D10, D5, D1
	0x038F3C70 CBNZ W8, 0x38F3C78
	0x038F3C74 BL 0x1C16DFC
	0x038F3C78 FMUL D0, D9, D10
	0x038F3C7C FMUL D1, D8, D11
	0x038F3C80 FMUL D2, D9, D11
	0x038F3C84 FMUL D3, D8, D10
	0x038F3C88 LDP X20, X19, [X31 + 0x30]
	0x038F3C8C LDR X30, [X31 + 0x20]
	0x038F3C90 LDP D9, D8, [X31 + 0x10]
	0x038F3C94 FSUB D0, D0, D1
	0x038F3C98 FADD D1, D2, D3
	0x038F3C9C LDP D11, D10, [X31], #0x40
	0x038F3CA0 B 0x3EB1D80
	0x038F3CA4 BL 0x1C16F20
	0x038F3CA8 STP D11, D10, [X31 - 0x40]!
	0x038F3CAC STP D9, D8, [X31 + 0x10]
	0x038F3CB0 STR X30, [X31 + 0x20]
	0x038F3CB4 STP X20, X19, [X31 + 0x30]
	0x038F3CB8 ADRP X20, 0xAEE000
	0x038F3CBC LDRB W8, [X20 + 0x729]
	0x038F3CC0 MOV X19, X0
	0x038F3CC4 TBNZ X8, 0x0, 0x38F3CDC
	0x038F3CC8 ADRP X0, 0x800000
	0x038F3CCC LDR X0, [X0 + 0x5A8]
	0x038F3CD0 BL 0x1C16CF4
	0x038F3CD4 MOVZ W8, 0x1
	0x038F3CD8 STRB W8, [X20 + 0x729]
	0x038F3CDC CBZ X19, 0x38F3D3C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85B000
	012 Move X22, [X22+2128]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move X26, 0xAEF000
	017 Move W27, 1
	018 Move W8, [X26+1816]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1816], W27
	026 Compare X19, 0
	027 JumpIfEqual {80}
	028 Move X1, [X19+16]
	029 Move X0, X21
	030 Call DTSweep.Fill, X0, X1
	031 Move X8, [X19+16]
	032 Compare X8, 0
	033 JumpIfEqual {80}
	034 Compare X20, 0
	035 JumpIfEqual {80}
	036 Move X23, [X8+40]
	037 Move X24, [X20+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X22]
	040 Move X25, [X20+24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X25
	046 Move X1, X23
	047 Move X2, X24
	048 Call TriangulationUtil.Orient2d, X0, X1, X2
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+16]
	051 Compare X8, 0
	052 JumpIfEqual {80}
	053 Move X9, [X8+16]
	054 Compare X9, 0
	055 JumpIfEqual {80}
	056 Move X0, [X22]
	057 Move X25, [X19+40]
	058 Move X23, [X8+40]
	059 Move X24, [X9+40]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X25
	065 Move X1, X23
	066 Move X2, X24
	067 Call TriangulationUtil.Orient2d, X0, X1, X2
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X26, [X31+16]
	076 Move X25, [X31+24]
	077 Move X30, [X31+80]
	078 Move X27, [X31+88]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void FillRightConvexEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3CE0 LDR X8, [X19 + 0x28]
	0x038F3CE4 CBZ X8, 0x38F3D3C
	0x038F3CE8 LDR X9, [X19 + 0x10]
	0x038F3CEC CBZ X9, 0x38F3D3C
	0x038F3CF0 LDR X9, [X9 + 0x10]
	0x038F3CF4 CBZ X9, 0x38F3D3C
	0x038F3CF8 LDR X9, [X9 + 0x28]
	0x038F3CFC CBZ X9, 0x38F3D3C
	0x038F3D00 ADRP X10, 0x800000
	0x038F3D04 LDR X10, [X10 + 0x5A8]
	0x038F3D08 LDP D9, D8, [X8 + 0x18]
	0x038F3D0C LDP D11, D10, [X9 + 0x18]
	0x038F3D10 LDR X0, [X10]
	0x038F3D14 LDR W8, [X0 + 0xE0]
	0x038F3D18 CBNZ W8, 0x38F3D20
	0x038F3D1C BL 0x1C16DFC
	0x038F3D20 FSUB D1, D9, D11
	0x038F3D24 FSUB D0, D8, D10
	0x038F3D28 LDP X20, X19, [X31 + 0x30]
	0x038F3D2C LDR X30, [X31 + 0x20]
	0x038F3D30 LDP D9, D8, [X31 + 0x10]
	0x038F3D34 LDP D11, D10, [X31], #0x40
	0x038F3D38 B 0x3EB1D80
	0x038F3D3C BL 0x1C16F20
	0x038F3D40 STP X30, X23, [X31 - 0x30]!
	0x038F3D44 STP X22, X21, [X31 + 0x10]
	0x038F3D48 STP X20, X19, [X31 + 0x20]
	0x038F3D4C ADRP X21, 0xAEE000
	0x038F3D50 LDRB W8, [X21 + 0x726]
	0x038F3D54 MOV X20, X1
	0x038F3D58 MOV X19, X0
	0x038F3D5C TBNZ X8, 0x0, 0x38F3D74
	0x038F3D60 ADRP X0, 0x85A000
	0x038F3D64 LDR X0, [X0 + 0x850]
	0x038F3D68 BL 0x1C16CF4
	0x038F3D6C MOVZ W8, 0x1
	0x038F3D70 STRB W8, [X21 + 0x726]
	0x038F3D74 CBZ X20, 0x38F3EDC
	0x038F3D78 LDR X8, [X20 + 0x10]
	0x038F3D7C CBZ X8, 0x38F3EDC
	0x038F3D80 LDR X9, [X8 + 0x10]
	0x038F3D84 CBZ X9, 0x38F3EDC
	0x038F3D88 ADRP X10, 0x85A000
	0x038F3D8C LDR X10, [X10 + 0x850]
	0x038F3D90 LDR X23, [X20 + 0x28]
	0x038F3D94 LDR X21, [X8 + 0x28]
	0x038F3D98 LDR X22, [X9 + 0x28]
	0x038F3D9C LDR X0, [X10]
	0x038F3DA0 LDR W8, [X0 + 0xE0]
	0x038F3DA4 CBNZ W8, 0x38F3DAC
	0x038F3DA8 BL 0x1C16DFC
	0x038F3DAC MOV X0, X23
	0x038F3DB0 MOV X1, X21
	0x038F3DB4 MOV X2, X22
	0x038F3DB8 BL 0x38F1F1C
	0x038F3DBC CBZ X19, 0x38F3EDC
	0x038F3DC0 LDR X8, [X19 + 0x60]
	0x038F3DC4 CMP W0, 0x1
	0x038F3DC8 B.NE 0x38F3DD4
	0x038F3DCC CBNZ X8, 0x38F3DDC
	0x038F3DD0 B 0x38F3EDC
	0x038F3DD4 CBZ X8, 0x38F3EDC
	0x038F3DD8 LDR X20, [X20 + 0x10]
	0x038F3DDC MOV X9, X20
	0x038F3DE0 STR X20, [X8 + 0x10]
	0x038F3DE4 CBZ X9, 0x38F3ED0
	0x038F3DE8 MOV X1, X9
	0x038F3DEC LDR X9, [X9 + 0x10]
	0x038F3DF0 CBZ X9, 0x38F3E14
	0x038F3DF4 LDR X10, [X1 + 0x28]
	0x038F3DF8 CBZ X10, 0x38F3EC8
	0x038F3DFC LDR X11, [X9 + 0x28]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85B000
	012 Move X22, [X22+2128]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move X26, 0xAEF000
	017 Move W27, 1
	018 Move W8, [X26+1817]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1817], W27
	026 Compare X20, 0
	027 JumpIfEqual {98}
	028 Move X8, [X20+16]
	029 Compare X8, 0
	030 JumpIfEqual {98}
	031 Move X9, [X8+16]
	032 Compare X9, 0
	033 JumpIfEqual {98}
	034 Move X10, [X9+16]
	035 Compare X10, 0
	036 JumpIfEqual {98}
	037 Move X0, [X22]
	038 Move X25, [X8+40]
	039 Move X23, [X9+40]
	040 Move X24, [X10+40]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X25
	046 Move X1, X23
	047 Move X2, X24
	048 Call TriangulationUtil.Orient2d, X0, X1, X2
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X19, 0
	051 JumpIfEqual {98}
	052 Move X8, [X20+16]
	053 Compare X8, 0
	054 JumpIfEqual {98}
	055 Move X8, [X8+16]
	056 Compare X8, 0
	057 JumpIfEqual {98}
	058 Move X0, [X22]
	059 Move X23, [X8+40]
	060 Move X24, [X19+16]
	061 Move X25, [X19+24]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X25
	067 Move X1, X23
	068 Move X2, X24
	069 Call TriangulationUtil.Orient2d, X0, X1, X2
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X20+16]
	072 Move X2, [X20+16]
	073 Move X0, X21
	074 Move X1, X19
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X26, [X31+16]
	082 Move X25, [X31+24]
	083 Move X30, [X31+80]
	084 Move X27, [X31+88]
	085 Call DTSweep.FillRightConcaveEdgeEvent, X0, X1, X2
	086 Return 
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X30, [X31+80]
	096 Move X27, [X31+88]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void FillRightBelowEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3E00 CBZ X11, 0x38F3EC8
	0x038F3E04 LDR V0, [X10 + 0x20]
	0x038F3E08 LDR V1, [X11 + 0x20]
	0x038F3E0C FCMP D0, D1
	0x038F3E10 B.GE 0x38F3DE4
	0x038F3E14 CMP X1, X20
	0x038F3E18 STR X1, [X8 + 0x18]
	0x038F3E1C B.EQ 0x38F3EB8
	0x038F3E20 MOV X10, X1
	0x038F3E24 CBZ X9, 0x38F3E60
	0x038F3E28 MOV X10, X1
	0x038F3E2C LDR X12, [X10 + 0x28]
	0x038F3E30 CBZ X12, 0x38F3ED8
	0x038F3E34 MOV X11, X9
	0x038F3E38 LDR X9, [X9 + 0x28]
	0x038F3E3C CBZ X9, 0x38F3ED8
	0x038F3E40 LDR V0, [X12 + 0x20]
	0x038F3E44 LDR V1, [X9 + 0x20]
	0x038F3E48 FCMP D0, D1
	0x038F3E4C B.PL 0x38F3E60
	0x038F3E50 LDR X9, [X11 + 0x10]
	0x038F3E54 MOV X10, X11
	0x038F3E58 CBNZ X9, 0x38F3E2C
	0x038F3E5C MOV X10, X11
	0x038F3E60 CMP X10, X1
	0x038F3E64 STR X10, [X8 + 0x20]
	0x038F3E68 B.EQ 0x38F3EB8
	0x038F3E6C LDR X9, [X10 + 0x28]
	0x038F3E70 CBZ X9, 0x38F3EDC
	0x038F3E74 CBZ X20, 0x38F3EDC
	0x038F3E78 LDR X10, [X20 + 0x28]
	0x038F3E7C CBZ X10, 0x38F3EDC
	0x038F3E80 LDR V0, [X9 + 0x18]
	0x038F3E84 LDR V1, [X10 + 0x18]
	0x038F3E88 MOV X0, X19
	0x038F3E8C LDP X20, X19, [X31 + 0x20]
	0x038F3E90 LDP X22, X21, [X31 + 0x10]
	0x038F3E94 FSUB D0, D0, D1
	0x038F3E98 STR D0, [X8 + 0x28]
	0x038F3E9C LDR V0, [X10 + 0x20]
	0x038F3EA0 LDR V1, [X9 + 0x20]
	0x038F3EA4 FCMP D0, D1
	0x038F3EA8 CSET W9, GT
	0x038F3EAC STRB W9, [X8 + 0x30]
	0x038F3EB0 LDP X30, X23, [X31], #0x30
	0x038F3EB4 B 0x38F3EE0
	0x038F3EB8 LDP X20, X19, [X31 + 0x20]
	0x038F3EBC LDP X22, X21, [X31 + 0x10]
	0x038F3EC0 LDP X30, X23, [X31], #0x30
	0x038F3EC4 RET
	0x038F3EC8 STR X1, [X8 + 0x18]
	0x038F3ECC BL 0x1C16F20
	0x038F3ED0 STR X31, [X8 + 0x18]
	0x038F3ED4 BL 0x1C16F20
	0x038F3ED8 STR X10, [X8 + 0x20]
	0x038F3EDC BL 0x1C16F20
	0x038F3EE0 STP X30, X27, [X31 - 0x50]!
	0x038F3EE4 STP X26, X25, [X31 + 0x10]
	0x038F3EE8 STP X24, X23, [X31 + 0x20]
	0x038F3EEC STP X22, X21, [X31 + 0x30]
	0x038F3EF0 STP X20, X19, [X31 + 0x40]
	0x038F3EF4 ADRP X20, 0x85A000
	0x038F3EF8 LDR X20, [X20 + 0x850]
	0x038F3EFC MOV X21, X1
	0x038F3F00 MOV X19, X0
	0x038F3F04 ADRP X24, 0xAEE000
	0x038F3F08 MOVZ W25, 0x1
	0x038F3F0C LDRB W8, [X24 + 0x727]
	0x038F3F10 TBNZ X8, 0x0, 0x38F3F20
	0x038F3F14 MOV X0, X20
	0x038F3F18 BL 0x1C16CF4
	0x038F3F1C STRB W25, [X24 + 0x727]
	0x038F3F20 MOV X0, X19
	0x038F3F24 MOV X1, X21
	0x038F3F28 BL 0x38F4050

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85B000
	012 Move X22, [X22+2128]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move X26, 0xAEF000
	017 Move W27, 1
	018 Move W8, [X26+1818]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1818], W27
	026 Compare X21, 0
	027 JumpIfEqual {104}
	028 Move X8, [X21]
	029 Move X0, X21
	030 Move X9, [X8+440]
	031 Move X1, [X8+448]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X0, X21
	038 Call TriangulationContext.get_DTDebugContext, X0
	039 Compare X0, 0
	040 JumpIfEqual {104}
	041 Move X1, X19
	042 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {104}
	045 Move X23, [X19+40]
	046 Compare X23, 0
	047 JumpIfEqual {104}
	048 Compare X20, 0
	049 JumpIfEqual {104}
	050 Move X8, [X20+16]
	051 Compare X8, 0
	052 JumpIfEqual {104}
	053 Move V0, [X23+24]
	054 Move V1, [X8+24]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X8, [X19+16]
	057 Compare X8, 0
	058 JumpIfEqual {104}
	059 Move X9, [X8+16]
	060 Compare X9, 0
	061 JumpIfEqual {104}
	062 Move X0, [X22]
	063 Move X24, [X8+40]
	064 Move X25, [X9+40]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X23
	070 Move X1, X24
	071 Move X2, X25
	072 Call TriangulationUtil.Orient2d, X0, X1, X2
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Move X1, X20
	076 Move X2, X19
	077 Call DTSweep.FillRightConvexEdgeEvent, X0, X1, X2
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Move X27, [X31+88]
	088 Return 
	089 Move X0, X21
	090 Move X1, X20
	091 Move X2, X19
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move X30, [X31+80]
	101 Move X27, [X31+88]
	102 Call DTSweep.FillRightConcaveEdgeEvent, X0, X1, X2
	103 Return 
	104 Call 0x1C17F20

Method: System.Void FillRightAboveEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F39D0 BL 0x38F3260
	0x038F39D4 ADRP X0, 0x85A000
	0x038F39D8 LDR X0, [X0 + 0x8F8]
	0x038F39DC BL 0x1C16D08
	0x038F39E0 MOV X1, X0
	0x038F39E4 MOV X0, X22
	0x038F39E8 BL 0x1C16DEC
	0x038F39EC BL 0x1C16F20
	0x038F39F0 ADRP X0, 0x809000
	0x038F39F4 LDR X0, [X0 + 0x758]
	0x038F39F8 BL 0x1C16D08
	0x038F39FC BL 0x1C16F10
	0x038F3A00 MOV X19, X0
	0x038F3A04 ADRP X0, 0x85A000
	0x038F3A08 LDR X0, [X0 + 0x900]
	0x038F3A0C BL 0x1C16D08
	0x038F3A10 MOV X1, X0
	0x038F3A14 MOV X0, X19
	0x038F3A18 MOV X2, X31
	0x038F3A1C BL 0x33802E4
	0x038F3A20 ADRP X0, 0x85A000
	0x038F3A24 LDR X0, [X0 + 0x8F8]
	0x038F3A28 BL 0x1C16D08
	0x038F3A2C MOV X1, X0
	0x038F3A30 MOV X0, X19
	0x038F3A34 BL 0x1C16DEC
	0x038F3A38 STP X29, X30, [X31 - 0x60]!
	0x038F3A3C STP X28, X27, [X31 + 0x10]
	0x038F3A40 STP X26, X25, [X31 + 0x20]
	0x038F3A44 STP X24, X23, [X31 + 0x30]
	0x038F3A48 STP X22, X21, [X31 + 0x40]
	0x038F3A4C STP X20, X19, [X31 + 0x50]
	0x038F3A50 ADRP X24, 0x85A000
	0x038F3A54 ADRP X25, 0x85A000
	0x038F3A58 LDR X24, [X24 + 0x908]
	0x038F3A5C LDR X25, [X25 + 0x850]
	0x038F3A60 MOV X27, X5
	0x038F3A64 MOV X28, X4
	0x038F3A68 MOV X20, X3
	0x038F3A6C MOV X19, X2
	0x038F3A70 MOV X22, X1
	0x038F3A74 MOV X21, X0
	0x038F3A78 ADRP X23, 0xAEE000
	0x038F3A7C LDRB W8, [X23 + 0x725]
	0x038F3A80 TBNZ X8, 0x0, 0x38F3AA8
	0x038F3A84 ADRP X0, 0x808000
	0x038F3A88 LDR X0, [X0 + 0x958]
	0x038F3A8C BL 0x1C16CF4
	0x038F3A90 MOV X0, X25
	0x038F3A94 BL 0x1C16CF4
	0x038F3A98 MOV X0, X24
	0x038F3A9C BL 0x1C16CF4
	0x038F3AA0 MOVZ W8, 0x1
	0x038F3AA4 STRB W8, [X23 + 0x725]
	0x038F3AA8 CBZ X28, 0x38F3BD4
	0x038F3AAC MOV X0, X28
	0x038F3AB0 MOV X1, X27
	0x038F3AB4 BL 0x38EFAC8
	0x038F3AB8 CBZ X0, 0x38F3BD4
	0x038F3ABC MOV X1, X28
	0x038F3AC0 MOV X2, X27
	0x038F3AC4 MOV X26, X0
	0x038F3AC8 BL 0x38EF8D4
	0x038F3ACC CBZ X21, 0x38F3BD4
	0x038F3AD0 LDR X8, [X21]
	0x038F3AD4 MOV X27, X0
	0x038F3AD8 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAEF000
	010 Move W8, [X22+1819]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x85B000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1819], W8
	023 Compare X19, 0
	024 JumpIfEqual {81}
	025 Move X25, 0x85B000
	026 Move X25, [X25+2128]
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {81}
	030 Move X8, [X8+40]
	031 Compare X8, 0
	032 JumpIfEqual {81}
	033 Compare X20, 0
	034 JumpIfEqual {81}
	035 Move X9, [X20+16]
	036 Compare X9, 0
	037 JumpIfEqual {81}
	038 Move V0, [X8+24]
	039 Move V1, [X9+24]
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Compare X21, 0
	042 JumpIfEqual {81}
	043 Move X8, [X21]
	044 Move X0, X21
	045 Move X9, [X8+440]
	046 Move X1, [X8+448]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {58}
	052 Move X0, X21
	053 Call TriangulationContext.get_DTDebugContext, X0
	054 Compare X0, 0
	055 JumpIfEqual {81}
	056 Move X1, X19
	057 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	058 Move X8, [X19+16]
	059 Compare X8, 0
	060 JumpIfEqual {81}
	061 Move X0, [X25]
	062 Move X22, [X8+40]
	063 Move X23, [X20+16]
	064 Move X24, [X20+24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X24
	070 Move X1, X22
	071 Move X2, X23
	072 Call TriangulationUtil.Orient2d, X0, X1, X2
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X21
	075 Move X1, X20
	076 Move X2, X19
	077 Call DTSweep.FillRightBelowEdgeEvent, X0, X1, X2
	078 Move X19, [X19+16]
	079 Compare X19, 0
	080 JumpIfNotEqual {27}
	081 Call 0x1C17F20
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Return 

Method: System.Void FillLeftConvexEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3F2C TBNZ X0, 0x0, 0x38F4034
	0x038F3F30 MOV X0, X19
	0x038F3F34 MOV X1, X21
	0x038F3F38 BL 0x38F2004
	0x038F3F3C CBZ X21, 0x38F404C
	0x038F3F40 MOV X27, X21
	0x038F3F44 LDR X8, [X27 + 0x18]!
	0x038F3F48 CBZ X19, 0x38F404C
	0x038F3F4C LDR X10, [X19 + 0x60]
	0x038F3F50 CBZ X10, 0x38F404C
	0x038F3F54 LDR X11, [X10 + 0x10]
	0x038F3F58 MOV X26, X21
	0x038F3F5C LDR X9, [X26 + 0x10]!
	0x038F3F60 LDR X10, [X10 + 0x20]
	0x038F3F64 CMP X8, X11
	0x038F3F68 B.EQ 0x38F3FA0
	0x038F3F6C CMP X9, X10
	0x038F3F70 B.EQ 0x38F3FE8
	0x038F3F74 CBZ X8, 0x38F404C
	0x038F3F78 LDR X8, [X8 + 0x28]
	0x038F3F7C CBZ X8, 0x38F404C
	0x038F3F80 CBZ X9, 0x38F404C
	0x038F3F84 LDR X9, [X9 + 0x28]
	0x038F3F88 CBZ X9, 0x38F404C
	0x038F3F8C LDR V0, [X8 + 0x20]
	0x038F3F90 LDR V1, [X9 + 0x20]
	0x038F3F94 FCMP D0, D1
	0x038F3F98 CSEL X26, X27, X26, MI
	0x038F3F9C B 0x38F402C
	0x038F3FA0 CMP X9, X10
	0x038F3FA4 B.EQ 0x38F4034
	0x038F3FA8 CBZ X9, 0x38F404C
	0x038F3FAC LDR X8, [X9 + 0x10]
	0x038F3FB0 CBZ X8, 0x38F404C
	0x038F3FB4 LDR X0, [X20]
	0x038F3FB8 LDR X23, [X21 + 0x28]
	0x038F3FBC LDR X21, [X9 + 0x28]
	0x038F3FC0 LDR X22, [X8 + 0x28]
	0x038F3FC4 LDR W9, [X0 + 0xE0]
	0x038F3FC8 CBNZ W9, 0x38F3FD0
	0x038F3FCC BL 0x1C16DFC
	0x038F3FD0 MOV X0, X23
	0x038F3FD4 MOV X1, X21
	0x038F3FD8 MOV X2, X22
	0x038F3FDC BL 0x38F1F1C
	0x038F3FE0 CBNZ W0, 0x38F402C
	0x038F3FE4 B 0x38F4034
	0x038F3FE8 CBZ X8, 0x38F404C
	0x038F3FEC LDR X9, [X8 + 0x18]
	0x038F3FF0 CBZ X9, 0x38F404C
	0x038F3FF4 LDR X0, [X20]
	0x038F3FF8 LDR X23, [X21 + 0x28]
	0x038F3FFC LDR X21, [X8 + 0x28]
	0x038F4000 LDR X22, [X9 + 0x28]
	0x038F4004 LDR W8, [X0 + 0xE0]
	0x038F4008 CBNZ W8, 0x38F4010
	0x038F400C BL 0x1C16DFC
	0x038F4010 MOV X0, X23
	0x038F4014 MOV X1, X21
	0x038F4018 MOV X2, X22
	0x038F401C BL 0x38F1F1C
	0x038F4020 CMP W0, 0x1
	0x038F4024 MOV X26, X27
	0x038F4028 B.EQ 0x38F4034
	0x038F402C LDR X21, [X26]
	0x038F4030 B 0x38F3F0C
	0x038F4034 LDP X20, X19, [X31 + 0x40]
	0x038F4038 LDP X22, X21, [X31 + 0x30]
	0x038F403C LDP X24, X23, [X31 + 0x20]
	0x038F4040 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85B000
	012 Move X22, [X22+2128]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move X26, 0xAEF000
	017 Move W27, 1
	018 Move W8, [X26+1820]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1820], W27
	026 Compare X20, 0
	027 JumpIfEqual {98}
	028 Move X8, [X20+24]
	029 Compare X8, 0
	030 JumpIfEqual {98}
	031 Move X9, [X8+24]
	032 Compare X9, 0
	033 JumpIfEqual {98}
	034 Move X10, [X9+24]
	035 Compare X10, 0
	036 JumpIfEqual {98}
	037 Move X0, [X22]
	038 Move X25, [X8+40]
	039 Move X23, [X9+40]
	040 Move X24, [X10+40]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X25
	046 Move X1, X23
	047 Move X2, X24
	048 Call TriangulationUtil.Orient2d, X0, X1, X2
	049 Compare W0, 0
	050 JumpIfEqual {74}
	051 Compare X19, 0
	052 JumpIfEqual {98}
	053 Move X8, [X20+24]
	054 Compare X8, 0
	055 JumpIfEqual {98}
	056 Move X8, [X8+24]
	057 Compare X8, 0
	058 JumpIfEqual {98}
	059 Move X0, [X22]
	060 Move X23, [X8+40]
	061 Move X24, [X19+16]
	062 Move X25, [X19+24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X25
	068 Move X1, X23
	069 Move X2, X24
	070 Call TriangulationUtil.Orient2d, X0, X1, X2
	071 Compare W0, 0
	072 JumpIfNotEqual {87}
	073 Move X20, [X20+24]
	074 Move X2, [X20+24]
	075 Move X0, X21
	076 Move X1, X19
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X30, [X31+80]
	086 Move X27, [X31+88]
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X30, [X31+80]
	096 Move X27, [X31+88]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void FillLeftConcaveEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4044 LDP X30, X27, [X31], #0x50
	0x038F4048 RET
	0x038F404C BL 0x1C16F20
	0x038F4050 STR X30, [X31 - 0x10]!
	0x038F4054 CBZ X0, 0x38F40B0
	0x038F4058 LDR X8, [X0 + 0x60]
	0x038F405C CBZ X8, 0x38F40B0
	0x038F4060 LDRB W9, [X8 + 0x30]
	0x038F4064 CBZ W9, 0x38F4074
	0x038F4068 LDR X9, [X8 + 0x10]
	0x038F406C CBNZ X9, 0x38F407C
	0x038F4070 B 0x38F40B0
	0x038F4074 LDR X9, [X8 + 0x20]
	0x038F4078 CBZ X9, 0x38F40B0
	0x038F407C LDR X9, [X9 + 0x28]
	0x038F4080 CBZ X9, 0x38F40B0
	0x038F4084 CBZ X1, 0x38F40B0
	0x038F4088 LDR X10, [X1 + 0x28]
	0x038F408C CBZ X10, 0x38F40B0
	0x038F4090 LDR V0, [X9 + 0x20]
	0x038F4094 LDR V1, [X10 + 0x20]
	0x038F4098 LDR V2, [X8 + 0x28]
	0x038F409C FSUB D0, D0, D1
	0x038F40A0 FCMP D2, D0
	0x038F40A4 CSET W0, GT
	0x038F40A8 LDR X30, [X31], #0x10
	0x038F40AC RET
	0x038F40B0 BL 0x1C16F20
	0x038F40B4 STR X30, [X31 - 0x10]!
	0x038F40B8 LDR X8, [X0 + 0x48]
	0x038F40BC CBZ X8, 0x38F40C8
	0x038F40C0 LDR X30, [X31], #0x10
	0x038F40C4 RET
	0x038F40C8 BL 0x1C16F20
	0x038F40CC STR X30, [X31 - 0x10]!
	0x038F40D0 CBZ X3, 0x38F418C
	0x038F40D4 CBZ X0, 0x38F418C
	0x038F40D8 CBZ X1, 0x38F418C
	0x038F40DC LDP D4, D6, [X3 + 0x18]
	0x038F40E0 LDP D0, D1, [X0 + 0x18]
	0x038F40E4 LDP D3, D7, [X1 + 0x18]
	0x038F40E8 FSUB D2, D0, D4
	0x038F40EC FSUB D1, D1, D6
	0x038F40F0 FSUB D5, D3, D4
	0x038F40F4 FSUB D3, D7, D6
	0x038F40F8 FMUL D0, D1, D5
	0x038F40FC FMUL D7, D2, D3
	0x038F4100 FSUB D0, D7, D0
	0x038F4104 FCMP D0, 0x0
	0x038F4108 B.LS 0x38F4180
	0x038F410C CBZ X2, 0x38F418C
	0x038F4110 LDP D7, D16, [X2 + 0x18]
	0x038F4114 FSUB D7, D7, D4
	0x038F4118 FSUB D6, D16, D6
	0x038F411C FMUL D4, D2, D6
	0x038F4120 FMUL D16, D1, D7
	0x038F4124 FSUB D4, D16, D4
	0x038F4128 FCMP D4, 0x0
	0x038F412C B.LS 0x38F4180
	0x038F4130 FMUL D16, D5, D6
	0x038F4134 FMUL D17, D3, D7

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85A000
	012 Move X22, [X22+2128]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move X26, 0xAEE000
	017 Move W27, 1
	018 Move W8, [X26+1821]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1821], W27
	026 Compare X19, 0
	027 JumpIfEqual {82}
	028 Move X1, [X19+24]
	029 Move X0, X21
	030 Call DTSweep.Fill, X0, X1
	031 Move X8, [X19+24]
	032 Compare X8, 0
	033 JumpIfEqual {82}
	034 Compare X20, 0
	035 JumpIfEqual {82}
	036 Move X23, [X8+40]
	037 Move X24, [X20+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X22]
	040 Move X25, [X20+24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X25
	046 Move X1, X23
	047 Move X2, X24
	048 Call TriangulationUtil.Orient2d, X0, X1, X2
	049 Compare W0, 0
	050 JumpIfNotEqual {71}
	051 Move X8, [X19+24]
	052 Compare X8, 0
	053 JumpIfEqual {82}
	054 Move X9, [X8+24]
	055 Compare X9, 0
	056 JumpIfEqual {82}
	057 Move X0, [X22]
	058 Move X25, [X19+40]
	059 Move X23, [X8+40]
	060 Move X24, [X9+40]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X25
	066 Move X1, X23
	067 Move X2, X24
	068 Call TriangulationUtil.Orient2d, X0, X1, X2
	069 Compare W0, 0
	070 JumpIfEqual {18}
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move X30, [X31+80]
	080 Move X27, [X31+88]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void FillLeftBelowEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4138 FMUL D5, D5, D5
	0x038F413C FMUL D3, D3, D3
	0x038F4140 FMUL D2, D2, D2
	0x038F4144 FMUL D1, D1, D1
	0x038F4148 FMUL D7, D7, D7
	0x038F414C FMUL D6, D6, D6
	0x038F4150 FADD D3, D5, D3
	0x038F4154 FADD D1, D2, D1
	0x038F4158 FSUB D2, D16, D17
	0x038F415C FADD D5, D7, D6
	0x038F4160 FMUL D1, D1, D2
	0x038F4164 FMUL D2, D3, D4
	0x038F4168 FADD D1, D1, D2
	0x038F416C FMUL D0, D0, D5
	0x038F4170 FADD D0, D0, D1
	0x038F4174 FCMP D0, 0x0
	0x038F4178 CSET W0, GT
	0x038F417C B 0x38F4184
	0x038F4180 MOV W0, W31
	0x038F4184 LDR X30, [X31], #0x10
	0x038F4188 RET
	0x038F418C BL 0x1C16F20
	0x038F4190 STR X30, [X31 - 0x10]!
	0x038F4194 CBZ X1, 0x38F41C4
	0x038F4198 LDR X9, [X1 + 0x18]
	0x038F419C LDR X8, [X0 + 0x10]
	0x038F41A0 CMP X9, X8
	0x038F41A4 B.EQ 0x38F41B8
	0x038F41A8 LDR X9, [X1 + 0x10]
	0x038F41AC CMP X9, X8
	0x038F41B0 CSET W0, EQ
	0x038F41B4 B 0x38F41BC
	0x038F41B8 MOVZ W0, 0x1
	0x038F41BC LDR X30, [X31], #0x10
	0x038F41C0 RET
	0x038F41C4 BL 0x1C16F20
	0x038F41C8 MOV X1, X31
	0x038F41CC B 0x33BDD8C
	0x038F41D0 MOV X1, X31
	0x038F41D4 B 0x33BDD8C
	0x038F41D8 STP X30, X21, [X31 - 0x20]!
	0x038F41DC STP X20, X19, [X31 + 0x10]
	0x038F41E0 ADRP X20, 0xAED000
	0x038F41E4 LDRB W8, [X20 + 0x747]
	0x038F41E8 MOV X19, X1
	0x038F41EC MOV X21, X0
	0x038F41F0 TBNZ X8, 0x0, 0x38F4220
	0x038F41F4 ADRP X0, 0x859000
	0x038F41F8 LDR X0, [X0 + 0x910]
	0x038F41FC BL 0x1C16CF4
	0x038F4200 ADRP X0, 0x859000
	0x038F4204 LDR X0, [X0 + 0x918]
	0x038F4208 BL 0x1C16CF4
	0x038F420C ADRP X0, 0x859000
	0x038F4210 LDR X0, [X0 + 0x920]
	0x038F4214 BL 0x1C16CF4
	0x038F4218 MOVZ W8, 0x1
	0x038F421C STRB W8, [X20 + 0x747]
	0x038F4220 LDR X20, [X21 + 0x10]
	0x038F4224 CBNZ X20, 0x38F4254
	0x038F4228 ADRP X8, 0x859000
	0x038F422C LDR X8, [X8 + 0x920]
	0x038F4230 LDR X0, [X8]
	0x038F4234 BL 0x1C16F10
	0x038F4238 ADRP X8, 0x859000
	0x038F423C LDR X8, [X8 + 0x918]
	0x038F4240 MOV X20, X0
	0x038F4244 LDR X1, [X8]
	0x038F4248 BL 0x301B7C4
	0x038F424C STR X20, [X21 + 0x10]
	0x038F4250 CBZ X20, 0x38F42C0
	0x038F4254 ADRP X9, 0x859000
	0x038F4258 LDR X9, [X9 + 0x910]
	0x038F425C LDR W10, [X20 + 0x1C]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x85A000
	012 Move X22, [X22+2128]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move X26, 0xAEE000
	017 Move W27, 1
	018 Move W8, [X26+1822]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X22
	024 Call 0x1C17CF4
	025 Move [X26+1822], W27
	026 Compare X21, 0
	027 JumpIfEqual {105}
	028 Move X8, [X21]
	029 Move X0, X21
	030 Move X9, [X8+440]
	031 Move X1, [X8+448]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X0, X21
	038 Call TriangulationContext.get_DTDebugContext, X0
	039 Compare X0, 0
	040 JumpIfEqual {105}
	041 Move X1, X19
	042 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	043 Compare X19, 0
	044 JumpIfEqual {105}
	045 Move X23, [X19+40]
	046 Compare X23, 0
	047 JumpIfEqual {105}
	048 Compare X20, 0
	049 JumpIfEqual {105}
	050 Move X8, [X20+16]
	051 Compare X8, 0
	052 JumpIfEqual {105}
	053 Move V0, [X23+24]
	054 Move V1, [X8+24]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X8, [X19+24]
	057 Compare X8, 0
	058 JumpIfEqual {105}
	059 Move X9, [X8+24]
	060 Compare X9, 0
	061 JumpIfEqual {105}
	062 Move X0, [X22]
	063 Move X24, [X8+40]
	064 Move X25, [X9+40]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X23
	070 Move X1, X24
	071 Move X2, X25
	072 Call TriangulationUtil.Orient2d, X0, X1, X2
	073 Compare W0, 0
	074 JumpIfEqual {90}
	075 Move X0, X21
	076 Move X1, X20
	077 Move X2, X19
	078 Call DTSweep.FillLeftConvexEdgeEvent, X0, X1, X2
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X24, [X31+32]
	084 Move X23, [X31+40]
	085 Move X26, [X31+16]
	086 Move X25, [X31+24]
	087 Move X30, [X31+80]
	088 Move X27, [X31+88]
	089 Return 
	090 Move X0, X21
	091 Move X1, X20
	092 Move X2, X19
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move X30, [X31+80]
	102 Move X27, [X31+88]
	103 Call DTSweep.FillLeftConcaveEdgeEvent, X0, X1, X2
	104 Return 
	105 Call 0x1C17F20

Method: System.Void FillLeftAboveEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3ADC LDP X9, X1, [X8 + 0x1B8]
	0x038F3AE0 BLR X9
	0x038F3AE4 TBZ X0, 0x0, 0x38F3B34
	0x038F3AE8 ADRP X8, 0x808000
	0x038F3AEC LDR X8, [X8 + 0x958]
	0x038F3AF0 LDR X0, [X8]
	0x038F3AF4 LDR W8, [X0 + 0xE0]
	0x038F3AF8 CBNZ W8, 0x38F3B00
	0x038F3AFC BL 0x1C16DFC
	0x038F3B00 LDR X0, [X24]
	0x038F3B04 MOV X1, X31
	0x038F3B08 BL 0x33C33A0
	0x038F3B0C MOV X0, X21
	0x038F3B10 BL 0x38F1438
	0x038F3B14 CBZ X0, 0x38F3BD4
	0x038F3B18 MOV X1, X28
	0x038F3B1C BL 0x38F26BC
	0x038F3B20 MOV X0, X21
	0x038F3B24 BL 0x38F1438
	0x038F3B28 CBZ X0, 0x38F3BD4
	0x038F3B2C MOV X1, X26
	0x038F3B30 BL 0x38F37A8
	0x038F3B34 CBZ X20, 0x38F3BD4
	0x038F3B38 MOV X0, X20
	0x038F3B3C MOV X1, X19
	0x038F3B40 BL 0x38EFB48
	0x038F3B44 MOV X28, X0
	0x038F3B48 MOV X0, X20
	0x038F3B4C MOV X1, X19
	0x038F3B50 BL 0x38EF900
	0x038F3B54 LDR X8, [X25]
	0x038F3B58 MOV X29, X0
	0x038F3B5C LDR W9, [X8 + 0xE0]
	0x038F3B60 CBNZ W9, 0x38F3B6C
	0x038F3B64 MOV X0, X8
	0x038F3B68 BL 0x1C16DFC
	0x038F3B6C MOV X0, X19
	0x038F3B70 MOV X1, X28
	0x038F3B74 MOV X2, X29
	0x038F3B78 MOV X3, X27
	0x038F3B7C BL 0x38F37F4
	0x038F3B80 TBNZ X0, 0x0, 0x38F3BA4
	0x038F3B84 MOV X0, X22
	0x038F3B88 MOV X1, X19
	0x038F3B8C MOV X2, X26
	0x038F3B90 MOV X3, X27
	0x038F3B94 BL 0x38F38E0
	0x038F3B98 MOV X27, X0
	0x038F3B9C MOV X28, X26
	0x038F3BA0 B 0x38F3A7C
	0x038F3BA4 MOV X0, X21
	0x038F3BA8 MOV X1, X19
	0x038F3BAC MOV X2, X27
	0x038F3BB0 MOV X3, X26
	0x038F3BB4 MOV X4, X27
	0x038F3BB8 LDP X20, X19, [X31 + 0x50]
	0x038F3BBC LDP X22, X21, [X31 + 0x40]
	0x038F3BC0 LDP X24, X23, [X31 + 0x30]
	0x038F3BC4 LDP X26, X25, [X31 + 0x20]
	0x038F3BC8 LDP X28, X27, [X31 + 0x10]
	0x038F3BCC LDP X29, X30, [X31], #0x60
	0x038F3BD0 B 0x38F329C
	0x038F3BD4 BL 0x1C16F20
	0x038F3BD8 STRB W31, [X0 + 0x2]
	0x038F3BDC STRH W31, [X0]
	0x038F3BE0 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAEF000
	010 Move W8, [X22+1823]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x85B000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1823], W8
	023 Compare X19, 0
	024 JumpIfEqual {82}
	025 Move X25, 0x85B000
	026 Move X25, [X25+2128]
	027 Move X8, [X19+24]
	028 Compare X8, 0
	029 JumpIfEqual {82}
	030 Move X8, [X8+40]
	031 Compare X8, 0
	032 JumpIfEqual {82}
	033 Compare X20, 0
	034 JumpIfEqual {82}
	035 Move X9, [X20+16]
	036 Compare X9, 0
	037 JumpIfEqual {82}
	038 Move V0, [X8+24]
	039 Move V1, [X9+24]
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Compare X21, 0
	042 JumpIfEqual {82}
	043 Move X8, [X21]
	044 Move X0, X21
	045 Move X9, [X8+440]
	046 Move X1, [X8+448]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {58}
	052 Move X0, X21
	053 Call TriangulationContext.get_DTDebugContext, X0
	054 Compare X0, 0
	055 JumpIfEqual {82}
	056 Move X1, X19
	057 Call DTSweepDebugContext.set_ActiveNode, X0, X1
	058 Move X8, [X19+24]
	059 Compare X8, 0
	060 JumpIfEqual {82}
	061 Move X0, [X25]
	062 Move X22, [X8+40]
	063 Move X23, [X20+16]
	064 Move X24, [X20+24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X24
	070 Move X1, X22
	071 Move X2, X23
	072 Call TriangulationUtil.Orient2d, X0, X1, X2
	073 Compare W0, 0
	074 JumpIfNotEqual {79}
	075 Move X0, X21
	076 Move X1, X20
	077 Move X2, X19
	078 Call DTSweep.FillLeftBelowEdgeEvent, X0, X1, X2
	079 Move X19, [X19+24]
	080 Compare X19, 0
	081 JumpIfNotEqual {27}
	082 Call 0x1C17F20
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Return 

Method: System.Boolean IsEdgeSideOfTriangle(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle triangle, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq)

Disassembly:
	0x038F3708 LDR X20, [X22 + 0x10]
	0x038F370C LDR X0, [X8]
	0x038F3710 BL 0x1C16F10
	0x038F3714 MOV X1, X20
	0x038F3718 MOV X2, X19
	0x038F371C LDP X20, X19, [X31 + 0x20]
	0x038F3720 LDP X22, X21, [X31 + 0x10]
	0x038F3724 LDP X30, X23, [X31], #0x30
	0x038F3728 B 0x38F3738
	0x038F372C BL 0x1C16F20
	0x038F3730 MOV X1, X31
	0x038F3734 B 0x33BDD8C
	0x038F3738 STP X30, X21, [X31 - 0x20]!
	0x038F373C STP X20, X19, [X31 + 0x10]
	0x038F3740 MOV X20, X1
	0x038F3744 MOV X1, X31
	0x038F3748 MOV X21, X2
	0x038F374C MOV X19, X0
	0x038F3750 BL 0x33BDD8C
	0x038F3754 STP X20, X21, [X19 + 0x10]
	0x038F3758 CBZ X20, 0x38F37A4
	0x038F375C CBZ X21, 0x38F37A4
	0x038F3760 LDR V0, [X20 + 0x20]
	0x038F3764 LDR V1, [X21 + 0x20]
	0x038F3768 FCMP D0, D1
	0x038F376C B.GT 0x38F3784
	0x038F3770 B.NE 0x38F378C
	0x038F3774 LDR V0, [X20 + 0x18]
	0x038F3778 LDR V1, [X21 + 0x18]
	0x038F377C FCMP D0, D1
	0x038F3780 B.LE 0x38F378C
	0x038F3784 STP X21, X20, [X19 + 0x10]
	0x038F3788 B 0x38F3790
	0x038F378C MOV X20, X21
	0x038F3790 MOV X0, X20
	0x038F3794 MOV X1, X19
	0x038F3798 LDP X20, X19, [X31 + 0x10]
	0x038F379C LDP X30, X21, [X31], #0x20
	0x038F37A0 B 0x38F41D8
	0x038F37A4 BL 0x1C16F20
	0x038F37A8 STP X30, X21, [X31 - 0x20]!
	0x038F37AC STP X20, X19, [X31 + 0x10]
	0x038F37B0 ADRP X21, 0xAEE000
	0x038F37B4 LDRB W8, [X21 + 0x738]
	0x038F37B8 MOV X19, X1
	0x038F37BC MOV X20, X0
	0x038F37C0 TBNZ X8, 0x0, 0x38F37D8
	0x038F37C4 ADRP X0, 0x85A000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xAEF000
	009 Move W8, [X22+1824]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x85B000
	018 Move X0, [X0+1992]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1824], W8
	022 Compare X21, 0
	023 JumpIfEqual {57}
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Call DelaunayTriangle.EdgeIndex, X0, X1, X2
	028 Add W31, W0, 1
	029 Move X24, 0x85B000
	030 Move X24, [X24+1992]
	031 Move W23, W0
	032 Add X0, X21, 64
	033 Move W2, 1
	034 Move W1, W23
	035 Move W22, 1
	036 Call FixedBitArray3.set_Item, X0, X1, X2
	037 Move X2, [X24]
	038 Add X0, X21, 40
	039 Move W1, W23
	040 Call 0x2D2064C, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move X1, X20
	044 Move X2, X19
	045 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	046 Move W22, 1
	047 Move W22, W31
	048 Move W0, W22
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void EdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle triangle, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F37F4 STR X30, [X31 - 0x10]!
	0x038F37F8 CBZ X3, 0x38F3868
	0x038F37FC CBZ X0, 0x38F3868
	0x038F3800 CBZ X1, 0x38F3868
	0x038F3804 LDP D0, D1, [X3 + 0x18]
	0x038F3808 LDP D2, D3, [X0 + 0x18]
	0x038F380C LDP D4, D5, [X1 + 0x18]
	0x038F3810 FSUB D2, D2, D0
	0x038F3814 FSUB D3, D3, D1
	0x038F3818 FSUB D4, D4, D0
	0x038F381C FSUB D5, D5, D1
	0x038F3820 FMUL D4, D3, D4
	0x038F3824 FMUL D5, D2, D5
	0x038F3828 FSUB D4, D5, D4
	0x038F382C FCMP D4, 0x0
	0x038F3830 B.LS 0x38F385C
	0x038F3834 CBZ X2, 0x38F3868
	0x038F3838 LDP D5, D4, [X2 + 0x18]
	0x038F383C FSUB D1, D4, D1
	0x038F3840 FSUB D0, D5, D0
	0x038F3844 FMUL D1, D2, D1
	0x038F3848 FMUL D0, D3, D0
	0x038F384C FSUB D0, D0, D1
	0x038F3850 FCMP D0, 0x0
	0x038F3854 CSET W0, HI
	0x038F3858 B 0x38F3860
	0x038F385C MOV W0, W31
	0x038F3860 LDR X30, [X31], #0x10
	0x038F3864 RET
	0x038F3868 BL 0x1C16F20
	0x038F386C STP X30, X21, [X31 - 0x20]!
	0x038F3870 STP X20, X19, [X31 + 0x10]
	0x038F3874 CMP W1, 0x1
	0x038F3878 MOV X21, X0
	0x038F387C B.NE 0x38F3890
	0x038F3880 MOV X19, X3
	0x038F3884 MOV X20, X2
	0x038F3888 CBNZ X3, 0x38F389C
	0x038F388C BL 0x1C16F20
	0x038F3890 MOV X19, X2
	0x038F3894 MOV X20, X3
	0x038F3898 CBZ X2, 0x38F388C
	0x038F389C MOV X0, X19
	0x038F38A0 MOV X1, X4
	0x038F38A4 MOV X2, X5
	0x038F38A8 BL 0x38EF644
	0x038F38AC MOV W1, W0
	0x038F38B0 ADD X0, X19, 0x43
	0x038F38B4 MOVZ W2, 0x1
	0x038F38B8 BL 0x38F0354
	0x038F38BC MOV X0, X21
	0x038F38C0 MOV X1, X19
	0x038F38C4 BL 0x38F2450
	0x038F38C8 STRB W31, [X19 + 0x45]
	0x038F38CC STURH W31, [X19 + 0x43]
	0x038F38D0 MOV X0, X20
	0x038F38D4 LDP X20, X19, [X31 + 0x10]
	0x038F38D8 LDP X30, X21, [X31], #0x20
	0x038F38DC RET
	0x038F38E0 STR X30, [X31 - 0x40]!
	0x038F38E4 STP X24, X23, [X31 + 0x10]
	0x038F38E8 STP X22, X21, [X31 + 0x20]
	0x038F38EC STP X20, X19, [X31 + 0x30]
	0x038F38F0 ADRP X23, 0xAEE000
	0x038F38F4 ADRP X24, 0x85A000
	0x038F38F8 LDRB W8, [X23 + 0x724]
	0x038F38FC LDR X24, [X24 + 0x850]
	0x038F3900 MOV X19, X3
	0x038F3904 MOV X22, X2
	0x038F3908 MOV X21, X1
	0x038F390C MOV X20, X0
	0x038F3910 TBNZ X8, 0x0, 0x38F3928
	0x038F3914 ADRP X0, 0x85A000
	0x038F3918 LDR X0, [X0 + 0x850]
	0x038F391C BL 0x1C16CF4
	0x038F3920 MOVZ W8, 0x1
	0x038F3924 STRB W8, [X23 + 0x724]
	0x038F3928 LDR X0, [X24]
	0x038F392C LDR W8, [X0 + 0xE0]
	0x038F3930 CBNZ W8, 0x38F3938
	0x038F3934 BL 0x1C16DFC
	0x038F3938 MOV X0, X21
	0x038F393C MOV X1, X19
	0x038F3940 MOV X2, X20
	0x038F3944 BL 0x38F1F1C
	0x038F3948 CBZ W0, 0x38F3974
	0x038F394C CMP W0, 0x1
	0x038F3950 B.NE 0x38F3994
	0x038F3954 CBZ X22, 0x38F39EC
	0x038F3958 MOV X0, X22
	0x038F395C MOV X1, X19
	0x038F3960 LDP X20, X19, [X31 + 0x30]
	0x038F3964 LDP X22, X21, [X31 + 0x20]
	0x038F3968 LDP X24, X23, [X31 + 0x10]
	0x038F396C LDR X30, [X31], #0x40
	0x038F3970 B 0x38EF900
	0x038F3974 CBZ X22, 0x38F39EC
	0x038F3978 MOV X0, X22
	0x038F397C MOV X1, X19
	0x038F3980 LDP X20, X19, [X31 + 0x30]
	0x038F3984 LDP X22, X21, [X31 + 0x20]
	0x038F3988 LDP X24, X23, [X31 + 0x10]
	0x038F398C LDR X30, [X31], #0x40
	0x038F3990 B 0x38EFB48
	0x038F3994 CMP W0, 0x2
	0x038F3998 B.NE 0x38F39F0
	0x038F399C ADRP X0, 0x85A000
	0x038F39A0 LDR X0, [X0 + 0x890]
	0x038F39A4 BL 0x1C16D08
	0x038F39A8 BL 0x1C16F10
	0x038F39AC MOV X22, X0
	0x038F39B0 ADRP X0, 0x85A000
	0x038F39B4 LDR X0, [X0 + 0x8F0]
	0x038F39B8 BL 0x1C16D08
	0x038F39BC MOV X1, X0
	0x038F39C0 MOV X0, X22
	0x038F39C4 MOV X2, X21
	0x038F39C8 MOV X3, X19
	0x038F39CC MOV X4, X20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x85B000
	013 Move X24, [X24+2128]
	014 Move X21, X4
	015 Move X23, X3
	016 Move X20, X2
	017 Move X19, X1
	018 Move X22, X0
	019 Move X27, 0xAEF000
	020 Move W28, 1
	021 Move W8, [X27+1825]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X24
	027 Call 0x1C17CF4
	028 Move [X27+1825], W28
	029 Compare X22, 0
	030 JumpIfEqual {126}
	031 Move X8, [X22]
	032 Move X0, X22
	033 Move X9, [X8+440]
	034 Move X1, [X8+448]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Move X0, X22
	041 Call TriangulationContext.get_DTDebugContext, X0
	042 Compare X0, 0
	043 JumpIfEqual {126}
	044 Move X1, X23
	045 Call DTSweepDebugContext.set_PrimaryTriangle, X0, X1
	046 Move X0, X23
	047 Move X1, X19
	048 Move X2, X20
	049 Call DTSweep.IsEdgeSideOfTriangle, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {96}
	054 Compare X23, 0
	055 JumpIfEqual {126}
	056 Move X0, X23
	057 Move X1, X21
	058 Call DelaunayTriangle.PointCCWFrom, X0, X1
	059 Move X8, [X24]
	060 Move X25, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X25
	068 Move X2, X19
	069 Call TriangulationUtil.Orient2d, X0, X1, X2
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W26, W0
	072 Move X0, X23
	073 Move X1, X21
	074 Call DelaunayTriangle.PointCWFrom, X0, X1
	075 Move X8, [X24]
	076 Move X25, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X25
	084 Move X2, X19
	085 Call TriangulationUtil.Orient2d, X0, X1, X2
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X23
	089 Move X1, X21
	090 Compare W26, 0
	091 JumpIfEqual {94}
	092 Call DelaunayTriangle.NeighborCWFrom, X0, X1
	093 Move X23, X0
	094 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	095 Move X23, X0
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X22, [X31+64]
	099 Move X21, [X31+72]
	100 Move X24, [X31+48]
	101 Move X23, [X31+56]
	102 Move X26, [X31+32]
	103 Move X25, [X31+40]
	104 Move X28, [X31+16]
	105 Move X27, [X31+24]
	106 Move X30, [X31+96]
	107 Return 
	108 Move X0, X22
	109 Move X1, X19
	110 Move X2, X20
	111 Move X3, X23
	112 Move X4, X21
	113 Move X20, [X31+80]
	114 Move X19, [X31+88]
	115 Move X22, [X31+64]
	116 Move X21, [X31+72]
	117 Move X24, [X31+48]
	118 Move X23, [X31+56]
	119 Move X26, [X31+32]
	120 Move X25, [X31+40]
	121 Move X28, [X31+16]
	122 Move X27, [X31+24]
	123 Move X30, [X31+96]
	124 Call DTSweep.FlipEdgeEvent, X0, X1, X2, X3, X4
	125 Return 
	126 Call 0x1C17F20
	127 Move X0, 0x85B000
	128 Move X0, [X0+2192]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X21, X0
	132 Move X0, 0x85B000
	133 Move X0, [X0+2200]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X21
	137 Move X2, X20
	138 Move X3, X25
	139 Move X4, X19
	140 Call PointOnEdgeException..ctor, X0, X1, X2, X3, X4
	141 Move X0, 0x85B000
	142 Move X0, [X0+2208]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X21
	146 Call 0x1C17DEC

Method: System.Void SplitEdge(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F4620 STRB W8, [X20 + 0x743]
	0x038F4624 LDR X8, [X19 + 0x20]
	0x038F4628 CBZ X8, 0x38F4674
	0x038F462C LDP W2, W9, [X8 + 0x18]
	0x038F4630 ADD W9, W9, 0x1
	0x038F4634 CMP W2, 0x1
	0x038F4638 STP W31, W9, [X8 + 0x18]
	0x038F463C B.LT 0x38F4650
	0x038F4640 LDR X0, [X8 + 0x10]
	0x038F4644 MOV W1, W31
	0x038F4648 MOV X3, X31
	0x038F464C BL 0x339FA34
	0x038F4650 LDR X0, [X19 + 0x10]
	0x038F4654 CBZ X0, 0x38F4664
	0x038F4658 LDR X8, [X0]
	0x038F465C LDP X9, X1, [X8 + 0x178]
	0x038F4660 BLR X9
	0x038F4664 STR W31, [X19 + 0x38]
	0x038F4668 LDP X20, X19, [X31 + 0x10]
	0x038F466C LDR X30, [X31], #0x20
	0x038F4670 RET
	0x038F4674 BL 0x1C16F20
	0x038F4678 SUB X31, X31, 0x80
	0x038F467C STR D12, [X31 + 0x20]
	0x038F4680 STP D11, D10, [X31 + 0x28]
	0x038F4684 STP D9, D8, [X31 + 0x38]
	0x038F4688 STR X30, [X31 + 0x48]
	0x038F468C STP X24, X23, [X31 + 0x50]
	0x038F4690 STP X22, X21, [X31 + 0x60]
	0x038F4694 STP X20, X19, [X31 + 0x70]
	0x038F4698 ADRP X21, 0xAED000
	0x038F469C LDRB W8, [X21 + 0x734]
	0x038F46A0 MOV X20, X1
	0x038F46A4 MOV X19, X0
	0x038F46A8 TBNZ X8, 0x0, 0x38F4708
	0x038F46AC ADRP X0, 0x859000
	0x038F46B0 LDR X0, [X0 + 0x930]
	0x038F46B4 BL 0x1C16CF4
	0x038F46B8 ADRP X0, 0x859000
	0x038F46BC LDR X0, [X0 + 0x938]
	0x038F46C0 BL 0x1C16CF4
	0x038F46C4 ADRP X0, 0x859000
	0x038F46C8 LDR X0, [X0 + 0x940]
	0x038F46CC BL 0x1C16CF4
	0x038F46D0 ADRP X0, 0x859000
	0x038F46D4 LDR X0, [X0 + 0x948]
	0x038F46D8 BL 0x1C16CF4
	0x038F46DC ADRP X0, 0x859000
	0x038F46E0 LDR X0, [X0 + 0x950]
	0x038F46E4 BL 0x1C16CF4
	0x038F46E8 ADRP X0, 0x859000
	0x038F46EC LDR X0, [X0 + 0x708]
	0x038F46F0 BL 0x1C16CF4
	0x038F46F4 ADRP X0, 0x859000
	0x038F46F8 LDR X0, [X0 + 0x800]
	0x038F46FC BL 0x1C16CF4
	0x038F4700 MOVZ W8, 0x1
	0x038F4704 STRB W8, [X21 + 0x734]
	0x038F4708 MOV X0, X19
	0x038F470C MOV X1, X20
	0x038F4710 STP X31, X31, [X31 + 0x8]
	0x038F4714 STR X31, [X31 + 0x18]
	0x038F4718 BL 0x38F4914
	0x038F471C LDR X0, [X19 + 0x20]
	0x038F4720 CBZ X0, 0x38F4898
	0x038F4724 ADRP X20, 0x859000
	0x038F4728 LDR X20, [X20 + 0x708]
	0x038F472C MOV W1, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAEE000
	008 Move X23, 0x85A000
	009 Move W8, [X22+1826]
	010 Move X23, [X23+2240]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x85A000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move X0, 0x85A000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move X0, 0x85A000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0x85A000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0x85A000
	031 Move X0, [X0+2240]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1826], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X22, X0
	039 Call Object..ctor, X0
	040 Compare X22, 0
	041 JumpIfEqual {81}
	042 Move [X22+16], X21
	043 Compare X20, 0
	044 JumpIfEqual {81}
	045 Move X8, 0x85A000
	046 Move X8, [X8+2264]
	047 Move X21, 0x85A000
	048 Move X23, 0x85A000
	049 Move X20, [X20+16]
	050 Move X0, [X8]
	051 Move X21, [X21+2272]
	052 Move X23, [X23+2256]
	053 Call 0x1C17F10
	054 Move X2, [X21]
	055 Move X1, X22
	056 Move X3, X31
	057 Move X21, X0
	058 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	059 Move X2, [X23]
	060 Move X0, X20
	061 Move X1, X21
	062 Call Enumerable.First, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {81}
	065 Move X8, 0x85A000
	066 Move X8, [X8+2248]
	067 Move [X0+16], X19
	068 Move X20, [X22+16]
	069 Move X0, [X8]
	070 Call 0x1C17F10
	071 Move X1, X20
	072 Move X2, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Call DTSweepConstraint..ctor, X0, X1, X2
	080 Return 
	081 Call 0x1C17F20

Method: System.Void FlipEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F429C RET
	0x038F42A0 LDR X8, [X9 + 0x20]
	0x038F42A4 MOV X0, X20
	0x038F42A8 MOV X1, X19
	0x038F42AC LDP X20, X19, [X31 + 0x10]
	0x038F42B0 LDR X8, [X8 + 0xC0]
	0x038F42B4 LDR X2, [X8 + 0x70]
	0x038F42B8 LDP X30, X21, [X31], #0x20
	0x038F42BC B 0x301BF90
	0x038F42C0 BL 0x1C16F20
	0x038F42C4 LDR X0, [X0 + 0x50]
	0x038F42C8 RET
	0x038F42CC STR X1, [X0 + 0x50]
	0x038F42D0 RET
	0x038F42D4 LDR X0, [X0 + 0x58]
	0x038F42D8 RET
	0x038F42DC STR X1, [X0 + 0x58]
	0x038F42E0 RET
	0x038F42E4 MOV X1, X31
	0x038F42E8 B 0x33BDD8C
	0x038F42EC MOV X1, X31
	0x038F42F0 B 0x33BDD8C
	0x038F42F4 STR X30, [X31 - 0x40]!
	0x038F42F8 STP X24, X23, [X31 + 0x10]
	0x038F42FC STP X22, X21, [X31 + 0x20]
	0x038F4300 STP X20, X19, [X31 + 0x30]
	0x038F4304 ADRP X23, 0xAED000
	0x038F4308 ADRP X24, 0x859000
	0x038F430C ADRP X20, 0x859000
	0x038F4310 ADRP X22, 0x859000
	0x038F4314 ADRP X21, 0x859000
	0x038F4318 LDRB W8, [X23 + 0x745]
	0x038F431C LDR X24, [X24 + 0x768]
	0x038F4320 LDR X20, [X20 + 0x928]
	0x038F4324 LDR X22, [X22 + 0x658]
	0x038F4328 LDR X21, [X21 + 0x660]
	0x038F432C MOV X19, X0
	0x038F4330 TBNZ X8, 0x0, 0x38F436C
	0x038F4334 ADRP X0, 0x859000
	0x038F4338 LDR X0, [X0 + 0x660]
	0x038F433C BL 0x1C16CF4
	0x038F4340 ADRP X0, 0x859000
	0x038F4344 LDR X0, [X0 + 0x928]
	0x038F4348 BL 0x1C16CF4
	0x038F434C ADRP X0, 0x859000
	0x038F4350 LDR X0, [X0 + 0x658]
	0x038F4354 BL 0x1C16CF4
	0x038F4358 ADRP X0, 0x859000
	0x038F435C LDR X0, [X0 + 0x768]
	0x038F4360 BL 0x1C16CF4
	0x038F4364 MOVZ W8, 0x1
	0x038F4368 STRB W8, [X23 + 0x745]
	0x038F436C LDR X0, [X24]
	0x038F4370 BL 0x1C16F10
	0x038F4374 LDR X1, [X20]
	0x038F4378 MOV X20, X0
	0x038F437C BL 0x301B7C4
	0x038F4380 STR X20, [X19 + 0x18]
	0x038F4384 LDR X0, [X22]
	0x038F4388 BL 0x1C16F10
	0x038F438C LDR X1, [X21]
	0x038F4390 MOV X20, X0
	0x038F4394 BL 0x301B7C4
	0x038F4398 STR X20, [X19 + 0x20]
	0x038F439C MOV X0, X19
	0x038F43A0 LDP X20, X19, [X31 + 0x30]
	0x038F43A4 LDP X22, X21, [X31 + 0x20]
	0x038F43A8 LDP X24, X23, [X31 + 0x10]
	0x038F43AC MOV X1, X31
	0x038F43B0 LDR X30, [X31], #0x40
	0x038F43B4 B 0x33BDD8C
	0x038F43B8 LDRB W0, [X0 + 0x3C]
	0x038F43BC RET
	0x038F43C0 STP X30, X21, [X31 - 0x20]!
	0x038F43C4 STP X20, X19, [X31 + 0x10]
	0x038F43C8 ADRP X21, 0xAED000
	0x038F43CC LDRB W8, [X21 + 0x72E]
	0x038F43D0 MOV W19, W1
	0x038F43D4 MOV X20, X0
	0x038F43D8 TBNZ X8, 0x0, 0x38F43F0
	0x038F43DC ADRP X0, 0x859000
	0x038F43E0 LDR X0, [X0 + 0x858]
	0x038F43E4 BL 0x1C16CF4
	0x038F43E8 MOVZ W8, 0x1
	0x038F43EC STRB W8, [X21 + 0x72E]
	0x038F43F0 TBZ X19, 0x0, 0x38F4420
	0x038F43F4 LDR X8, [X20 + 0x10]
	0x038F43F8 CBNZ X8, 0x38F4420
	0x038F43FC ADRP X8, 0x859000
	0x038F4400 LDR X8, [X8 + 0x858]
	0x038F4404 LDR X0, [X8]
	0x038F4408 BL 0x1C16F10
	0x038F440C MOV X1, X31
	0x038F4410 MOV X21, X0
	0x038F4414 BL 0x33BDD8C
	0x038F4418 STR X20, [X21 + 0x10]
	0x038F441C STR X21, [X20 + 0x10]
	0x038F4420 AND W8, W19, 0x1
	0x038F4424 STRB W8, [X20 + 0x3C]
	0x038F4428 LDP X20, X19, [X31 + 0x10]
	0x038F442C LDP X30, X21, [X31], #0x20
	0x038F4430 RET
	0x038F4434 STR X30, [X31 - 0x20]!
	0x038F4438 STP X20, X19, [X31 + 0x10]
	0x038F443C MOV X19, X1
	0x038F4440 MOV X1, X31
	0x038F4444 MOV X20, X0
	0x038F4448 BL 0x33BDD8C
	0x038F444C STR X19, [X20 + 0x10]
	0x038F4450 LDP X20, X19, [X31 + 0x10]
	0x038F4454 LDR X30, [X31], #0x20
	0x038F4458 RET
	0x038F445C STP X30, X23, [X31 - 0x30]!
	0x038F4460 STP X22, X21, [X31 + 0x10]
	0x038F4464 STP X20, X19, [X31 + 0x20]
	0x038F4468 ADRP X21, 0xAED000
	0x038F446C LDRB W8, [X21 + 0x730]
	0x038F4470 MOV X20, X1
	0x038F4474 MOV X19, X0
	0x038F4478 TBNZ X8, 0x0, 0x38F449C
	0x038F447C ADRP X0, 0x859000
	0x038F4480 LDR X0, [X0 + 0x7C8]
	0x038F4484 BL 0x1C16CF4
	0x038F4488 ADRP X0, 0x859000
	0x038F448C LDR X0, [X0 + 0x878]
	0x038F4490 BL 0x1C16CF4
	0x038F4494 MOVZ W8, 0x1
	0x038F4498 STRB W8, [X21 + 0x730]
	0x038F449C CBZ X20, 0x38F456C
	0x038F44A0 LDRB W8, [X20 + 0x46]
	0x038F44A4 CBNZ W8, 0x38F456C
	0x038F44A8 MOVZ W8, 0x1
	0x038F44AC STRB W8, [X20 + 0x46]
	0x038F44B0 LDR X21, [X19 + 0x30]
	0x038F44B4 CBZ X21, 0x38F457C
	0x038F44B8 ADRP X10, 0x859000
	0x038F44BC LDR X8, [X21]
	0x038F44C0 LDR X10, [X10 + 0x878]
	0x038F44C4 LDRH W9, [X8 + 0x12E]
	0x038F44C8 LDR X1, [X10]
	0x038F44CC CBZ X9, 0x38F44F0
	0x038F44D0 LDR X10, [X8 + 0xB0]
	0x038F44D4 ADD X10, X10, 0x8
	0x038F44D8 LDUR X11, [X10 - 0x8]
	0x038F44DC CMP X11, X1
	0x038F44E0 B.EQ 0x38F4500
	0x038F44E4 SUBS X9, X9, 0x1
	0x038F44E8 ADD X10, X10, 0x10
	0x038F44EC B.NE 0x38F44D8
	0x038F44F0 MOVZ W2, 0x3
	0x038F44F4 MOV X0, X21
	0x038F44F8 BL 0x1C5C788
	0x038F44FC B 0x38F4510
	0x038F4500 LDR W9, [X10]
	0x038F4504 ADD W9, W9, 0x3
	0x038F4508 ADD X8, X8, W9, 0x4, SXTW
	0x038F450C ADD X0, X8, 0x138
	0x038F4510 LDP X8, X2, [X0]
	0x038F4514 MOV X0, X21
	0x038F4518 MOV X1, X20
	0x038F451C BLR X8
	0x038F4520 ADRP X23, 0x859000
	0x038F4524 LDR X23, [X23 + 0x7C8]
	0x038F4528 MOV W21, W31
	0x038F452C ADD X22, X20, 0x40
	0x038F4530 ADD X20, X20, 0x28
	0x038F4534 MOV X0, X22
	0x038F4538 MOV W1, W21
	0x038F453C BL 0x38EFFA4
	0x038F4540 TBNZ X0, 0x0, 0x38F4560
	0x038F4544 LDR X2, [X23]
	0x038F4548 MOV X0, X20
	0x038F454C MOV W1, W21
	0x038F4550 BL 0x2D1F64C
	0x038F4554 MOV X1, X0
	0x038F4558 MOV X0, X19
	0x038F455C BL 0x38F445C
	0x038F4560 ADD W21, W21, 0x1
	0x038F4564 CMP W21, 0x3
	0x038F4568 B.NE 0x38F4534
	0x038F456C LDP X20, X19, [X31 + 0x20]
	0x038F4570 LDP X22, X21, [X31 + 0x10]
	0x038F4574 LDP X30, X23, [X31], #0x30
	0x038F4578 RET
	0x038F457C BL 0x1C16F20
	0x038F4580 STR X30, [X31 - 0x20]!
	0x038F4584 STP X20, X19, [X31 + 0x10]
	0x038F4588 ADRP X20, 0xAED000
	0x038F458C LDRB W8, [X20 + 0x731]
	0x038F4590 MOV X19, X0
	0x038F4594 TBNZ X8, 0x0, 0x38F45AC
	0x038F4598 ADRP X0, 0x859000
	0x038F459C LDR X0, [X0 + 0x730]
	0x038F45A0 BL 0x1C16CF4
	0x038F45A4 MOVZ W8, 0x1
	0x038F45A8 STRB W8, [X20 + 0x731]
	0x038F45AC MOV X0, X19
	0x038F45B0 BL 0x38F45F8
	0x038F45B4 LDR X8, [X19 + 0x18]
	0x038F45B8 CBZ X8, 0x38F45F4
	0x038F45BC LDP W2, W9, [X8 + 0x18]
	0x038F45C0 ADD W9, W9, 0x1
	0x038F45C4 CMP W2, 0x1
	0x038F45C8 STP W31, W9, [X8 + 0x18]
	0x038F45CC B.LT 0x38F45E8
	0x038F45D0 LDR X0, [X8 + 0x10]
	0x038F45D4 LDP X20, X19, [X31 + 0x10]
	0x038F45D8 MOV W1, W31
	0x038F45DC MOV X3, X31
	0x038F45E0 LDR X30, [X31], #0x20
	0x038F45E4 B 0x339FA34
	0x038F45E8 LDP X20, X19, [X31 + 0x10]
	0x038F45EC LDR X30, [X31], #0x20
	0x038F45F0 RET
	0x038F45F4 BL 0x1C16F20
	0x038F45F8 STR X30, [X31 - 0x20]!
	0x038F45FC STP X20, X19, [X31 + 0x10]
	0x038F4600 ADRP X20, 0xAED000
	0x038F4604 LDRB W8, [X20 + 0x743]
	0x038F4608 MOV X19, X0
	0x038F460C TBNZ X8, 0x0, 0x38F4624
	0x038F4610 ADRP X0, 0x859000
	0x038F4614 LDR X0, [X0 + 0x6B0]
	0x038F4618 BL 0x1C16CF4
	0x038F461C MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x85A000
	014 Move X28, [X28+2128]
	015 Move X20, X4
	016 Move X21, X3
	017 Move X27, X2
	018 Move X22, X1
	019 Move X19, X0
	020 Move X29, 0xAEE000
	021 Move W8, [X29+1827]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {42}
	026 Move X0, 0x808000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, X28
	030 Call 0x1C17CF4
	031 Move X0, 0x85A000
	032 Move X0, [X0+2216]
	033 Call 0x1C17CF4
	034 Move X0, 0x85A000
	035 Move X0, [X0+2224]
	036 Call 0x1C17CF4
	037 Move X0, 0x85A000
	038 Move X0, [X0+2232]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X29+1827], W8
	042 Compare X21, 0
	043 JumpIfEqual {287}
	044 Move X0, X21
	045 Move X1, X20
	046 Call DelaunayTriangle.NeighborAcrossFrom, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {287}
	049 Move X1, X21
	050 Move X2, X20
	051 Move X26, X0
	052 Call DelaunayTriangle.OppositePoint, X0, X1, X2
	053 Compare X19, 0
	054 JumpIfEqual {287}
	055 Move X8, [X19]
	056 Move X24, X0
	057 Move X0, X19
	058 Move X9, [X8+440]
	059 Move X1, [X8+448]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {77}
	065 Move X0, X19
	066 Call TriangulationContext.get_DTDebugContext, X0
	067 Compare X0, 0
	068 JumpIfEqual {287}
	069 Move X1, X21
	070 Call DTSweepDebugContext.set_PrimaryTriangle, X0, X1
	071 Move X0, X19
	072 Call TriangulationContext.get_DTDebugContext, X0
	073 Compare X0, 0
	074 JumpIfEqual {287}
	075 Move X1, X26
	076 Call DTSweepDebugContext.set_SecondaryTriangle, X0, X1
	077 Move X0, X21
	078 Move X1, X20
	079 Call DelaunayTriangle.PointCCWFrom, X0, X1
	080 Move X25, X0
	081 Move X0, X21
	082 Move X1, X20
	083 Call DelaunayTriangle.PointCWFrom, X0, X1
	084 Move X8, [X28]
	085 Move X23, X0
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Move X1, X25
	093 Move X2, X23
	094 Move X3, X24
	095 Call TriangulationUtil.InScanArea, X0, X1, X2, X3
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {151}
	100 Move X0, X21
	101 Move X1, X20
	102 Move X2, X26
	103 Move X3, X24
	104 Call DTSweep.RotateTrianglePair, X0, X1, X2, X3
	105 Move X0, X19
	106 Move X1, X21
	107 Call DTSweepContext.MapTriangleToNodes, X0, X1
	108 Move X0, X19
	109 Move X1, X26
	110 Call DTSweepContext.MapTriangleToNodes, X0, X1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X9, [X8+440]
	116 Move X1, [X8+448]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {134}
	122 Move X8, 0x808000
	123 Move X8, [X8+2392]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X8, 0x85A000
	130 Move X8, [X8+2216]
	131 Move X1, X31
	132 Move X0, [X8]
	133 Call Console.WriteLine, X0
	134 Move X0, [X28]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X27
	140 Move X1, X24
	141 Move X2, X22
	142 Call TriangulationUtil.Orient2d, X0, X1, X2
	143 Move W1, W0
	144 Move X0, X19
	145 Move X2, X21
	146 Move X3, X26
	147 Move X4, X20
	148 Move X5, X24
	149 Call DTSweep.NextFlipTriangle, X0, X1, X2, X3, X4, X5
	150 Move X21, X0
	151 Move X0, X22
	152 Move X1, X27
	153 Move X2, X26
	154 Move X3, X24
	155 Call DTSweep.NextFlipPoint, X0, X1, X2, X3
	156 Move X5, X0
	157 Move X0, X19
	158 Move X1, X22
	159 Move X2, X27
	160 Move X3, X21
	161 Move X4, X26
	162 Call DTSweep.FlipScanEdgeEvent, X0, X1, X2, X3, X4, X5
	163 Move X0, X19
	164 Move X1, X22
	165 Move X2, X27
	166 Move X3, X21
	167 Move X4, X20
	168 Move X20, [X31+80]
	169 Move X19, [X31+88]
	170 Move X22, [X31+64]
	171 Move X21, [X31+72]
	172 Move X24, [X31+48]
	173 Move X23, [X31+56]
	174 Move X26, [X31+32]
	175 Move X25, [X31+40]
	176 Move X28, [X31+16]
	177 Move X27, [X31+24]
	178 Move X29, [X31+96]
	179 Move X30, [X31+104]
	180 Call DTSweep.EdgeEvent, X0, X1, X2, X3, X4
	181 Return 
	182 Move X8, [X19+104]
	183 Compare X8, 0
	184 JumpIfEqual {287}
	185 Move X8, [X8+16]
	186 Compare X8, 0
	187 JumpIfEqual {287}
	188 Move X9, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X8+16]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X19]
	193 Move X0, X19
	194 Move X9, [X8+440]
	195 Move X1, [X8+448]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {226}
	201 Move X8, 0x808000
	202 Move X8, [X8+2392]
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X8, 0x85A000
	209 Move X8, [X8+2232]
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X22, [X31+64]
	213 Move X21, [X31+72]
	214 Move X24, [X31+48]
	215 Move X23, [X31+56]
	216 Move X0, [X8]
	217 Move X26, [X31+32]
	218 Move X25, [X31+40]
	219 Move X28, [X31+16]
	220 Move X27, [X31+24]
	221 Move X1, X31
	222 Move X29, [X31+96]
	223 Move X30, [X31+104]
	224 Call Console.WriteLine, X0
	225 Return 
	226 Move X20, [X31+80]
	227 Move X19, [X31+88]
	228 Move X22, [X31+64]
	229 Move X21, [X31+72]
	230 Move X24, [X31+48]
	231 Move X23, [X31+56]
	232 Move X26, [X31+32]
	233 Move X25, [X31+40]
	234 Move X28, [X31+16]
	235 Move X27, [X31+24]
	236 Move X29, [X31+96]
	237 Move X30, [X31+104]
	238 Return 
	239 Move X8, [X19]
	240 Move X0, X19
	241 Move X9, [X8+440]
	242 Move X1, [X8+448]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {260}
	248 Move X8, 0x808000
	249 Move X8, [X8+2392]
	250 Move X0, [X8]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X8, 0x85A000
	256 Move X8, [X8+2224]
	257 Move X1, X31
	258 Move X0, [X8]
	259 Call Console.WriteLine, X0
	260 Move X0, X21
	261 Move X1, X22
	262 Move X2, X20
	263 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	264 Move X0, X26
	265 Move X1, X22
	266 Move X2, X20
	267 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	268 Move X0, X19
	269 Move X1, X21
	270 Call DTSweep.Legalize, X0, X1
	271 Move X0, X19
	272 Move X1, X26
	273 Move X20, [X31+80]
	274 Move X19, [X31+88]
	275 Move X22, [X31+64]
	276 Move X21, [X31+72]
	277 Move X24, [X31+48]
	278 Move X23, [X31+56]
	279 Move X26, [X31+32]
	280 Move X25, [X31+40]
	281 Move X28, [X31+16]
	282 Move X27, [X31+24]
	283 Move X29, [X31+96]
	284 Move X30, [X31+104]
	285 Call DTSweep.Legalize, X0, X1
	286 Return 
	287 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint NextFlipPoint(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle ot, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint op)

Disassembly:
	0x038F48E0 B 0x38F48E8
	0x038F48E4 MOV X21, X0
	0x038F48E8 ADRP X8, 0x859000
	0x038F48EC LDR X8, [X8 + 0x930]
	0x038F48F0 LDR X1, [X8]
	0x038F48F4 ADD X0, X31, 0x8
	0x038F48F8 BL 0x2BC434C
	0x038F48FC CBNZ X20, 0x38F4908
	0x038F4900 MOV X0, X21
	0x038F4904 BL 0x1D2C690
	0x038F4908 MOV X0, X20
	0x038F490C BL 0x1C16F18
	0x038F4910 BL 0x1990590
	0x038F4914 STP X30, X21, [X31 - 0x20]!
	0x038F4918 STP X20, X19, [X31 + 0x10]
	0x038F491C ADRP X21, 0xAED000
	0x038F4920 LDRB W8, [X21 + 0x742]
	0x038F4924 MOV X19, X1
	0x038F4928 MOV X20, X0
	0x038F492C TBNZ X8, 0x0, 0x38F4944
	0x038F4930 ADRP X0, 0x859000
	0x038F4934 LDR X0, [X0 + 0x878]
	0x038F4938 BL 0x1C16CF4
	0x038F493C MOVZ W8, 0x1
	0x038F4940 STRB W8, [X21 + 0x742]
	0x038F4944 STR X19, [X20 + 0x30]
	0x038F4948 CBZ X19, 0x38F4A18
	0x038F494C ADRP X21, 0x859000
	0x038F4950 LDR X8, [X19]
	0x038F4954 LDR X21, [X21 + 0x878]
	0x038F4958 LDRH W9, [X8 + 0x12E]
	0x038F495C LDR X1, [X21]
	0x038F4960 CBZ X9, 0x38F4984
	0x038F4964 LDR X10, [X8 + 0xB0]
	0x038F4968 ADD X10, X10, 0x8
	0x038F496C LDUR X11, [X10 - 0x8]
	0x038F4970 CMP X11, X1
	0x038F4974 B.EQ 0x38F4994
	0x038F4978 SUBS X9, X9, 0x1
	0x038F497C ADD X10, X10, 0x10
	0x038F4980 B.NE 0x38F496C
	0x038F4984 MOVZ W2, 0x6
	0x038F4988 MOV X0, X19
	0x038F498C BL 0x1C5C788
	0x038F4990 B 0x38F49A4
	0x038F4994 LDR W9, [X10]
	0x038F4998 ADD W9, W9, 0x6
	0x038F499C ADD X8, X8, W9, 0x4, SXTW
	0x038F49A0 ADD X0, X8, 0x138
	0x038F49A4 LDP X8, X1, [X0]
	0x038F49A8 MOV X0, X19
	0x038F49AC BLR X8
	0x038F49B0 STR W0, [X20 + 0x28]
	0x038F49B4 LDR X8, [X19]
	0x038F49B8 LDR X1, [X21]
	0x038F49BC LDRH W9, [X8 + 0x12E]
	0x038F49C0 CBZ X9, 0x38F49E4
	0x038F49C4 LDR X10, [X8 + 0xB0]
	0x038F49C8 ADD X10, X10, 0x8
	0x038F49CC LDUR X11, [X10 - 0x8]
	0x038F49D0 CMP X11, X1
	0x038F49D4 B.EQ 0x38F49F4
	0x038F49D8 SUBS X9, X9, 0x1
	0x038F49DC ADD X10, X10, 0x10
	0x038F49E0 B.NE 0x38F49CC
	0x038F49E4 MOV X0, X19
	0x038F49E8 MOV W2, W31
	0x038F49EC BL 0x1C5C788
	0x038F49F0 B 0x38F4A00
	0x038F49F4 LDRSW X9, [X10]
	0x038F49F8 ADD X8, X8, X9, 0x4, LSL
	0x038F49FC ADD X0, X8, 0x138
	0x038F4A00 LDP X3, X2, [X0]
	0x038F4A04 MOV X0, X19
	0x038F4A08 MOV X1, X20
	0x038F4A0C LDP X20, X19, [X31 + 0x10]
	0x038F4A10 LDP X30, X21, [X31], #0x20
	0x038F4A14 BR X3
	0x038F4A18 BL 0x1C16F20
	0x038F4A1C STR X30, [X31 - 0x30]!
	0x038F4A20 STP X22, X21, [X31 + 0x10]
	0x038F4A24 STP X20, X19, [X31 + 0x20]
	0x038F4A28 ADRP X21, 0xAED000
	0x038F4A2C ADRP X22, 0x859000
	0x038F4A30 LDRB W8, [X21 + 0x736]
	0x038F4A34 LDR X22, [X22 + 0x8C8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAEE000
	009 Move X24, 0x85A000
	010 Move W8, [X23+1828]
	011 Move X24, [X24+2128]
	012 Move X19, X3
	013 Move X22, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x85A000
	021 Move X0, [X0+2128]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+1828], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X20
	033 Call TriangulationUtil.Orient2d, X0, X1, X2
	034 Compare W0, 0
	035 JumpIfEqual {50}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare X22, 0
	038 JumpIfEqual {84}
	039 Move X0, X22
	040 Move X1, X19
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Call DelaunayTriangle.PointCWFrom, X0, X1
	049 Return X0
	050 Compare X22, 0
	051 JumpIfEqual {84}
	052 Move X0, X22
	053 Move X1, X19
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Call DelaunayTriangle.PointCCWFrom, X0, X1
	062 Return X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, 0x85A000
	065 Move X0, [X0+2192]
	066 Call 0x1C17D08
	067 Call 0x1C17F10
	068 Move X22, X0
	069 Move X0, 0x85A000
	070 Move X0, [X0+2288]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X22
	074 Move X2, X21
	075 Move X3, X19
	076 Move X4, X20
	077 Call PointOnEdgeException..ctor, X0, X1, X2, X3, X4
	078 Move X0, 0x85A000
	079 Move X0, [X0+2296]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X22
	083 Call 0x1C17DEC
	084 Call 0x1C17F20
	085 Move X0, 0x809000
	086 Move X0, [X0+1880]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0x85A000
	091 Move X0, [X0+2304]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call NotImplementedException..ctor, X0, X1
	097 Move X0, 0x85A000
	098 Move X0, [X0+2296]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle NextFlipTriangle(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.Orientation o, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle ot, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint op)

Disassembly:
	0x038F486C BL 0x301DC6C
	0x038F4870 LDP X20, X19, [X31 + 0x70]
	0x038F4874 LDP X22, X21, [X31 + 0x60]
	0x038F4878 LDP X24, X23, [X31 + 0x50]
	0x038F487C LDR X30, [X31 + 0x48]
	0x038F4880 LDP D9, D8, [X31 + 0x38]
	0x038F4884 LDP D11, D10, [X31 + 0x28]
	0x038F4888 LDR V12, [X31 + 0x20]
	0x038F488C ADD X31, X31, 0x80
	0x038F4890 RET
	0x038F4894 BL 0x1C16F20
	0x038F4898 BL 0x1C16F20
	0x038F489C B 0x38F48A0
	0x038F48A0 MOV X21, X0
	0x038F48A4 CMP W1, 0x1
	0x038F48A8 B.NE 0x38F48DC
	0x038F48AC MOV X0, X21
	0x038F48B0 BL 0x3EB1AD0
	0x038F48B4 LDR X20, [X0]
	0x038F48B8 BL 0x3EB1AE0
	0x038F48BC ADRP X8, 0x859000
	0x038F48C0 LDR X8, [X8 + 0x930]
	0x038F48C4 ADD X0, X31, 0x8
	0x038F48C8 LDR X1, [X8]
	0x038F48CC BL 0x2BC434C
	0x038F48D0 CBZ X20, 0x38F47F8
	0x038F48D4 MOV X0, X20
	0x038F48D8 BL 0x1C16F18
	0x038F48DC MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X21, X0
	007 Move X19, X3
	008 Move X20, X2
	009 Compare X3, 0
	010 JumpIfNotEqual {16}
	011 Call 0x1C17F20
	012 Move X19, X2
	013 Move X20, X3
	014 Compare X2, 0
	015 JumpIfEqual {11}
	016 Move X0, X19
	017 Move X1, X4
	018 Move X2, X5
	019 Call DelaunayTriangle.EdgeIndex, X0, X1, X2
	020 Move W1, W0
	021 Add X0, X19, 67
	022 Move W2, 1
	023 Call FixedBitArray3.set_Item, X0, X1, X2
	024 Move X0, X21
	025 Move X1, X19
	026 Call DTSweep.Legalize, X0, X1
	027 Move [X19+69], W31
	028 NotImplemented "Instruction STURH not yet implemented."
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Void FlipScanEdgeEvent(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint ep, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint eq, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle flipTriangle, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F4A38 MOV X19, X2
	0x038F4A3C MOV X20, X1
	0x038F4A40 TBNZ X8, 0x0, 0x38F4A58
	0x038F4A44 ADRP X0, 0x859000
	0x038F4A48 LDR X0, [X0 + 0x8C8]
	0x038F4A4C BL 0x1C16CF4
	0x038F4A50 MOVZ W8, 0x1
	0x038F4A54 STRB W8, [X21 + 0x736]
	0x038F4A58 LDR X0, [X22]
	0x038F4A5C BL 0x1C16F10
	0x038F4A60 MOV X1, X20
	0x038F4A64 MOV X2, X19
	0x038F4A68 MOV X21, X0
	0x038F4A6C BL 0x38F3738
	0x038F4A70 MOV X0, X21
	0x038F4A74 LDP X20, X19, [X31 + 0x20]
	0x038F4A78 LDP X22, X21, [X31 + 0x10]
	0x038F4A7C LDR X30, [X31], #0x30
	0x038F4A80 RET
	0x038F4A84 MOV W0, W31
	0x038F4A88 RET
	0x038F4A8C LDR X0, [X0 + 0x18]
	0x038F4A90 RET
	0x038F4A94 LDR X0, [X0 + 0x20]
	0x038F4A98 RET
	0x038F4A9C LDR X0, [X0 + 0x28]
	0x038F4AA0 RET
	0x038F4AA4 STP X30, X21, [X31 - 0x20]!
	0x038F4AA8 STP X20, X19, [X31 + 0x10]
	0x038F4AAC ADRP X21, 0xAED000
	0x038F4AB0 LDRB W8, [X21 + 0x739]
	0x038F4AB4 MOV X19, X1
	0x038F4AB8 MOV X20, X0
	0x038F4ABC TBNZ X8, 0x0, 0x38F4AD4
	0x038F4AC0 ADRP X0, 0x859000
	0x038F4AC4 LDR X0, [X0 + 0x958]
	0x038F4AC8 BL 0x1C16CF4
	0x038F4ACC MOVZ W8, 0x1
	0x038F4AD0 STRB W8, [X21 + 0x739]
	0x038F4AD4 LDR X8, [X20 + 0x10]
	0x038F4AD8 STR X19, [X20 + 0x28]
	0x038F4ADC CBZ X8, 0x38F4AEC
	0x038F4AE0 LDP X20, X19, [X31 + 0x10]
	0x038F4AE4 LDP X30, X21, [X31], #0x20
	0x038F4AE8 RET
	0x038F4AEC BL 0x1C16F20
	0x038F4AF0 LDR X0, [X0 + 0x30]
	0x038F4AF4 RET
	0x038F4AF8 LDR X0, [X0 + 0x38]
	0x038F4AFC RET
	0x038F4B00 STR X30, [X31 - 0x20]!
	0x038F4B04 STP X20, X19, [X31 + 0x10]
	0x038F4B08 MOV X19, X1
	0x038F4B0C MOV X1, X31
	0x038F4B10 MOV X20, X0
	0x038F4B14 BL 0x33BDD8C
	0x038F4B18 STR X19, [X20 + 0x10]
	0x038F4B1C LDP X20, X19, [X31 + 0x10]
	0x038F4B20 LDR X30, [X31], #0x20
	0x038F4B24 RET
	0x038F4B28 MOVZ W0, 0x1
	0x038F4B2C RET
	0x038F4B30 STP X30, X19, [X31 - 0x10]!
	0x038F4B34 MOV X1, X31
	0x038F4B38 MOV X19, X0
	0x038F4B3C BL 0x38F26BC
	0x038F4B40 MOV X0, X19
	0x038F4B44 MOV X1, X31
	0x038F4B48 BL 0x38F37A8
	0x038F4B4C MOV X0, X19
	0x038F4B50 MOV X1, X31
	0x038F4B54 BL 0x38F4AA4
	0x038F4B58 MOV X0, X19
	0x038F4B5C MOV X1, X31
	0x038F4B60 BL 0x38F1ED0
	0x038F4B64 MOV X0, X19
	0x038F4B68 MOV X1, X31
	0x038F4B6C LDP X30, X19, [X31], #0x10
	0x038F4B70 B 0x38F14B4
	0x038F4B74 STR X30, [X31 - 0x10]!
	0x038F4B78 CBZ X1, 0x38F4BC4
	0x038F4B7C CBZ X2, 0x38F4BC4
	0x038F4B80 LDR V0, [X1 + 0x20]
	0x038F4B84 LDR V1, [X2 + 0x20]
	0x038F4B88 FCMP D0, D1
	0x038F4B8C B.MI 0x38F4BA4
	0x038F4B90 B.GT 0x38F4BB0
	0x038F4B94 LDR V0, [X1 + 0x18]
	0x038F4B98 LDR V1, [X2 + 0x18]
	0x038F4B9C FCMP D0, D1
	0x038F4BA0 B.PL 0x38F4BAC
	0x038F4BA4 MOVN W0, 0x0
	0x038F4BA8 B 0x38F4BB4
	0x038F4BAC B.LE 0x38F4BBC
	0x038F4BB0 MOVZ W0, 0x1
	0x038F4BB4 LDR X30, [X31], #0x10
	0x038F4BB8 RET
	0x038F4BBC MOV W0, W31
	0x038F4BC0 B 0x38F4BB4
	0x038F4BC4 BL 0x1C16F20
	0x038F4BC8 LDR X0, [X0 + 0x20]
	0x038F4BCC RET
	0x038F4BD0 STR X1, [X0 + 0x20]
	0x038F4BD4 RET

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0x85A000
	014 Move X25, 0x85A000
	015 Move X24, [X24+2312]
	016 Move X25, [X25+2128]
	017 Move X27, X5
	018 Move X28, X4
	019 Move X20, X3
	020 Move X19, X2
	021 Move X22, X1
	022 Move X21, X0
	023 Move X23, 0xAEE000
	024 Move W8, [X23+1829]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {38}
	029 Move X0, 0x808000
	030 Move X0, [X0+2392]
	031 Call 0x1C17CF4
	032 Move X0, X25
	033 Call 0x1C17CF4
	034 Move X0, X24
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1829], W8
	038 Compare X28, 0
	039 JumpIfEqual {134}
	040 Move X0, X28
	041 Move X1, X27
	042 Call DelaunayTriangle.NeighborAcrossFrom, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {134}
	045 Move X1, X28
	046 Move X2, X27
	047 Move X26, X0
	048 Call DelaunayTriangle.OppositePoint, X0, X1, X2
	049 Compare X21, 0
	050 JumpIfEqual {134}
	051 Move X8, [X21]
	052 Move X27, X0
	053 Move X0, X21
	054 Move X9, [X8+440]
	055 Move X1, [X8+448]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {83}
	061 Move X8, 0x808000
	062 Move X8, [X8+2392]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, [X24]
	069 Move X1, X31
	070 Call Console.WriteLine, X0
	071 Move X0, X21
	072 Call TriangulationContext.get_DTDebugContext, X0
	073 Compare X0, 0
	074 JumpIfEqual {134}
	075 Move X1, X28
	076 Call DTSweepDebugContext.set_PrimaryTriangle, X0, X1
	077 Move X0, X21
	078 Call TriangulationContext.get_DTDebugContext, X0
	079 Compare X0, 0
	080 JumpIfEqual {134}
	081 Move X1, X26
	082 Call DTSweepDebugContext.set_SecondaryTriangle, X0, X1
	083 Compare X20, 0
	084 JumpIfEqual {134}
	085 Move X0, X20
	086 Move X1, X19
	087 Call DelaunayTriangle.PointCCWFrom, X0, X1
	088 Move X28, X0
	089 Move X0, X20
	090 Move X1, X19
	091 Call DelaunayTriangle.PointCWFrom, X0, X1
	092 Move X8, [X25]
	093 Move X29, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X0, X19
	100 Move X1, X28
	101 Move X2, X29
	102 Move X3, X27
	103 Call TriangulationUtil.InScanArea, X0, X1, X2, X3
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {115}
	108 Move X0, X22
	109 Move X1, X19
	110 Move X2, X26
	111 Move X3, X27
	112 Call DTSweep.NextFlipPoint, X0, X1, X2, X3
	113 Move X27, X0
	114 Move X28, X26
	115 Move X0, X21
	116 Move X1, X19
	117 Move X2, X27
	118 Move X3, X26
	119 Move X4, X27
	120 Move X20, [X31+80]
	121 Move X19, [X31+88]
	122 Move X22, [X31+64]
	123 Move X21, [X31+72]
	124 Move X24, [X31+48]
	125 Move X23, [X31+56]
	126 Move X26, [X31+32]
	127 Move X25, [X31+40]
	128 Move X28, [X31+16]
	129 Move X27, [X31+24]
	130 Move X29, [X31+96]
	131 Move X30, [X31+104]
	132 Call DTSweep.FlipEdgeEvent, X0, X1, X2, X3, X4
	133 Return 
	134 Call 0x1C17F20

Method: System.Void FillAdvancingFront(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode n)

Disassembly:
	0x038F3358 TBZ X0, 0x0, 0x38F3384
	0x038F335C MOV X0, X19
	0x038F3360 BL 0x38F1438
	0x038F3364 CBZ X0, 0x38F361C
	0x038F3368 MOV X1, X21
	0x038F336C BL 0x38F26BC
	0x038F3370 MOV X0, X19
	0x038F3374 BL 0x38F1438
	0x038F3378 CBZ X0, 0x38F361C
	0x038F337C MOV X1, X26
	0x038F3380 BL 0x38F37A8
	0x038F3384 MOV X0, X21
	0x038F3388 MOV X1, X20
	0x038F338C BL 0x38EFB48
	0x038F3390 MOV X25, X0
	0x038F3394 MOV X0, X21
	0x038F3398 MOV X1, X20
	0x038F339C BL 0x38EF900
	0x038F33A0 LDR X8, [X28]
	0x038F33A4 MOV X23, X0
	0x038F33A8 LDR W9, [X8 + 0xE0]
	0x038F33AC CBNZ W9, 0x38F33B8
	0x038F33B0 MOV X0, X8
	0x038F33B4 BL 0x1C16DFC
	0x038F33B8 MOV X0, X20
	0x038F33BC MOV X1, X25
	0x038F33C0 MOV X2, X23
	0x038F33C4 MOV X3, X24
	0x038F33C8 BL 0x38F37F4
	0x038F33CC TBZ X0, 0x0, 0x38F3490
	0x038F33D0 MOV X0, X21
	0x038F33D4 MOV X1, X20
	0x038F33D8 MOV X2, X26
	0x038F33DC MOV X3, X24
	0x038F33E0 BL 0x38F17F4
	0x038F33E4 MOV X0, X19
	0x038F33E8 MOV X1, X21
	0x038F33EC BL 0x38F1CAC
	0x038F33F0 MOV X0, X19
	0x038F33F4 MOV X1, X26
	0x038F33F8 BL 0x38F1CAC
	0x038F33FC CMP X20, X27
	0x038F3400 B.NE 0x38F340C
	0x038F3404 CMP X24, X22
	0x038F3408 B.EQ 0x38F34F0
	0x038F340C LDR X8, [X19]
	0x038F3410 MOV X0, X19
	0x038F3414 LDP X9, X1, [X8 + 0x1B8]
	0x038F3418 BLR X9
	0x038F341C TBZ X0, 0x0, 0x38F344C
	0x038F3420 ADRP X8, 0x808000
	0x038F3424 LDR X8, [X8 + 0x958]
	0x038F3428 LDR X0, [X8]
	0x038F342C LDR W8, [X0 + 0xE0]
	0x038F3430 CBNZ W8, 0x38F3438
	0x038F3434 BL 0x1C16DFC
	0x038F3438 ADRP X8, 0x85A000
	0x038F343C LDR X8, [X8 + 0x8A8]
	0x038F3440 MOV X1, X31
	0x038F3444 LDR X0, [X8]
	0x038F3448 BL 0x33C33A0
	0x038F344C LDR X0, [X28]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {47}
	009 Move X21, [X1+16]
	010 Move X19, X1
	011 Compare X21, 0
	012 JumpIfEqual {47}
	013 Move X8, -48254976
	014 Move X9, -48254976
	015 Move V8, [X8+3984]
	016 Move V9, [X9+3024]
	017 Move X20, X0
	018 Move X8, [X21+16]
	019 Compare X8, 0
	020 JumpIfEqual {31}
	021 Move X0, X21
	022 Call DTSweep.HoleAngle, X0
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move X0, X20
	026 Move X1, X21
	027 Call DTSweep.Fill, X0, X1
	028 Move X21, [X21+16]
	029 Compare X21, 0
	030 JumpIfNotEqual {18}
	031 Move X21, [X19+24]
	032 Compare X21, 0
	033 JumpIfEqual {47}
	034 Move X8, [X21+24]
	035 Compare X8, 0
	036 JumpIfEqual {48}
	037 Move X0, X21
	038 Call DTSweep.HoleAngle, X0
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move X0, X20
	042 Move X1, X21
	043 Call DTSweep.Fill, X0, X1
	044 Move X21, [X21+24]
	045 Compare X21, 0
	046 JumpIfNotEqual {34}
	047 Call 0x1C17F20
	048 Move X8, [X19+16]
	049 Compare X8, 0
	050 JumpIfEqual {69}
	051 Move X8, [X8+16]
	052 Compare X8, 0
	053 JumpIfEqual {69}
	054 Move X0, X19
	055 Call DTSweep.BasinAngle, X0
	056 Move X8, -48250880
	057 Move V1, [X8+1048]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move X0, X20
	060 Move X1, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move X21, [X31+24]
	065 Move D9, [X31+48]
	066 Move D8, [X31+56]
	067 Call DTSweep.FillBasin, X0, X1
	068 Return 
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X30, [X31+16]
	072 Move X21, [X31+24]
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Return 

Method: System.Void FillBasin(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4D40 B 0x38F4D50
	0x038F4D44 LDRSW X8, [X10]
	0x038F4D48 ADD X8, X9, X8, 0x4, LSL
	0x038F4D4C ADD X0, X8, 0x138
	0x038F4D50 LDP X8, X2, [X0]
	0x038F4D54 MOV X0, X21
	0x038F4D58 MOV W1, W22
	0x038F4D5C BLR X8
	0x038F4D60 LDR X9, [X20 + 0x20]
	0x038F4D64 CBZ X9, 0x38F4E14
	0x038F4D68 LDR W8, [X9 + 0x18]
	0x038F4D6C SXTW X10, W24
	0x038F4D70 ORR X10, X10, 0x1
	0x038F4D74 CMP W10, W8
	0x038F4D78 B.CS 0x38F4E2C
	0x038F4D7C LDR X22, [X20 + 0x10]
	0x038F4D80 CBZ X22, 0x38F4E14
	0x038F4D84 LDR X8, [X22]
	0x038F4D88 ADD X9, X9, X10, 0x2, LSL
	0x038F4D8C LDR W23, [X9 + 0x20]
	0x038F4D90 LDR X1, [X25]
	0x038F4D94 LDRH W9, [X8 + 0x12E]
	0x038F4D98 MOV X21, X0
	0x038F4D9C CBZ X9, 0x38F4DC0
	0x038F4DA0 LDR X10, [X8 + 0xB0]
	0x038F4DA4 ADD X10, X10, 0x8
	0x038F4DA8 LDUR X11, [X10 - 0x8]
	0x038F4DAC CMP X11, X1
	0x038F4DB0 B.EQ 0x38F4DD0
	0x038F4DB4 SUBS X9, X9, 0x1
	0x038F4DB8 ADD X10, X10, 0x10
	0x038F4DBC B.NE 0x38F4DA8
	0x038F4DC0 MOV X0, X22
	0x038F4DC4 MOV W2, W31
	0x038F4DC8 BL 0x1C5C788
	0x038F4DCC B 0x38F4DDC
	0x038F4DD0 LDRSW X9, [X10]
	0x038F4DD4 ADD X8, X8, X9, 0x4, LSL
	0x038F4DD8 ADD X0, X8, 0x138
	0x038F4DDC LDP X8, X2, [X0]
	0x038F4DE0 MOV X0, X22
	0x038F4DE4 MOV W1, W23
	0x038F4DE8 BLR X8
	0x038F4DEC CBZ X19, 0x38F4E14
	0x038F4DF0 LDR X8, [X19]
	0x038F4DF4 MOV X2, X0
	0x038F4DF8 MOV X0, X19
	0x038F4DFC MOV X1, X21
	0x038F4E00 LDP X9, X3, [X8 + 0x198]
	0x038F4E04 BLR X9
	0x038F4E08 LDR X8, [X20 + 0x20]
	0x038F4E0C ADD W24, W24, 0x2
	0x038F4E10 CBNZ X8, 0x38F4CE4
	0x038F4E14 BL 0x1C16F20
	0x038F4E18 LDP X20, X19, [X31 + 0x30]
	0x038F4E1C LDP X22, X21, [X31 + 0x20]
	0x038F4E20 LDP X24, X23, [X31 + 0x10]
	0x038F4E24 LDP X30, X25, [X31], #0x40
	0x038F4E28 RET
	0x038F4E2C BL 0x1C16F28
	0x038F4E30 STR X30, [X31 - 0x30]!
	0x038F4E34 STP X22, X21, [X31 + 0x10]
	0x038F4E38 STP X20, X19, [X31 + 0x20]
	0x038F4E3C ADRP X21, 0xAED000
	0x038F4E40 LDRB W8, [X21 + 0x741]
	0x038F4E44 MOV X20, X1
	0x038F4E48 MOV X19, X0
	0x038F4E4C TBNZ X8, 0x0, 0x38F4E94
	0x038F4E50 ADRP X0, 0x859000
	0x038F4E54 LDR X0, [X0 + 0x970]
	0x038F4E58 BL 0x1C16CF4
	0x038F4E5C ADRP X0, 0x859000
	0x038F4E60 LDR X0, [X0 + 0x978]
	0x038F4E64 BL 0x1C16CF4
	0x038F4E68 ADRP X0, 0x859000
	0x038F4E6C LDR X0, [X0 + 0x680]
	0x038F4E70 BL 0x1C16CF4
	0x038F4E74 ADRP X0, 0x859000
	0x038F4E78 LDR X0, [X0 + 0x758]
	0x038F4E7C BL 0x1C16CF4
	0x038F4E80 ADRP X0, 0x859000
	0x038F4E84 LDR X0, [X0 + 0x768]
	0x038F4E88 BL 0x1C16CF4
	0x038F4E8C MOVZ W8, 0x1
	0x038F4E90 STRB W8, [X21 + 0x741]
	0x038F4E94 LDR X21, [X19 + 0x18]
	0x038F4E98 CBZ X21, 0x38F4EE4
	0x038F4E9C ADRP X10, 0x859000
	0x038F4EA0 LDR X8, [X21]
	0x038F4EA4 LDR X10, [X10 + 0x970]
	0x038F4EA8 LDRH W9, [X8 + 0x12E]
	0x038F4EAC LDR X1, [X10]
	0x038F4EB0 CBZ X9, 0x38F4ED4
	0x038F4EB4 LDR X10, [X8 + 0xB0]
	0x038F4EB8 ADD X10, X10, 0x8
	0x038F4EBC LDUR X11, [X10 - 0x8]
	0x038F4EC0 CMP X11, X1
	0x038F4EC4 B.EQ 0x38F4F34
	0x038F4EC8 SUBS X9, X9, 0x1
	0x038F4ECC ADD X10, X10, 0x10
	0x038F4ED0 B.NE 0x38F4EBC
	0x038F4ED4 MOVZ W2, 0x3
	0x038F4ED8 MOV X0, X21
	0x038F4EDC BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xAEE000
	008 Move W8, [X21+1830]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x85A000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1830], W8
	020 Compare X20, 0
	021 JumpIfEqual {127}
	022 Move X8, [X20+16]
	023 Compare X8, 0
	024 JumpIfEqual {127}
	025 Move X9, [X8+16]
	026 Compare X9, 0
	027 JumpIfEqual {127}
	028 Move X10, 0x85A000
	029 Move X10, [X10+2128]
	030 Move X23, [X20+40]
	031 Move X21, [X8+40]
	032 Move X22, [X9+40]
	033 Move X0, [X10]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move X1, X21
	040 Move X2, X22
	041 Call TriangulationUtil.Orient2d, X0, X1, X2
	042 Compare X19, 0
	043 JumpIfEqual {127}
	044 Move X8, [X19+96]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare X8, 0
	047 JumpIfNotEqual {51}
	048 Compare X8, 0
	049 JumpIfEqual {127}
	050 Move X20, [X20+16]
	051 Move X9, X20
	052 Move [X8+16], X20
	053 Compare X9, 0
	054 JumpIfEqual {124}
	055 Move X1, X9
	056 Move X9, [X9+16]
	057 Compare X9, 0
	058 JumpIfEqual {68}
	059 Move X10, [X1+40]
	060 Compare X10, 0
	061 JumpIfEqual {122}
	062 Move X11, [X9+40]
	063 Compare X11, 0
	064 JumpIfEqual {122}
	065 Move V0, [X10+32]
	066 Move V1, [X11+32]
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X8+24], X1
	070 Move X10, X1
	071 Compare X9, 0
	072 JumpIfEqual {89}
	073 Move X10, X1
	074 Move X12, [X10+40]
	075 Compare X12, 0
	076 JumpIfEqual {126}
	077 Move X11, X9
	078 Move X9, [X9+40]
	079 Compare X9, 0
	080 JumpIfEqual {126}
	081 Move V0, [X12+32]
	082 Move V1, [X9+32]
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move X9, [X11+16]
	085 Move X10, X11
	086 Compare X9, 0
	087 JumpIfNotEqual {74}
	088 Move X10, X11
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X8+32], X10
	091 Move X9, [X10+40]
	092 Compare X9, 0
	093 JumpIfEqual {127}
	094 Compare X20, 0
	095 JumpIfEqual {127}
	096 Move X10, [X20+40]
	097 Compare X10, 0
	098 JumpIfEqual {127}
	099 Move V0, [X9+24]
	100 Move V1, [X10+24]
	101 Move X0, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Subtract D0, D0, D1
	107 Move [X8+40], D0
	108 Move V0, [X10+32]
	109 Move V1, [X9+32]
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 NotImplemented "Instruction CSET not yet implemented."
	112 Move [X8+48], W9
	113 Move X30, [X31+48]
	114 Move X23, [X31+56]
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Return 
	122 Move [X8+24], X1
	123 Call 0x1C17F20
	124 Move [X8+24], X31
	125 Call 0x1C17F20
	126 Move [X8+32], X10
	127 Call 0x1C17F20

Method: System.Void FillBasinReq(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4EE0 B 0x38F4F44
	0x038F4EE4 LDR X21, [X19 + 0x10]
	0x038F4EE8 CBZ X21, 0x38F4FD0
	0x038F4EEC ADRP X10, 0x859000
	0x038F4EF0 LDR X8, [X21]
	0x038F4EF4 LDR X10, [X10 + 0x978]
	0x038F4EF8 LDRH W9, [X8 + 0x12E]
	0x038F4EFC LDR X1, [X10]
	0x038F4F00 CBZ X9, 0x38F4F24
	0x038F4F04 LDR X10, [X8 + 0xB0]
	0x038F4F08 ADD X10, X10, 0x8
	0x038F4F0C LDUR X11, [X10 - 0x8]
	0x038F4F10 CMP X11, X1
	0x038F4F14 B.EQ 0x38F4F58
	0x038F4F18 SUBS X9, X9, 0x1
	0x038F4F1C ADD X10, X10, 0x10
	0x038F4F20 B.NE 0x38F4F0C
	0x038F4F24 MOV X0, X21
	0x038F4F28 MOV W2, W31
	0x038F4F2C BL 0x1C5C788
	0x038F4F30 B 0x38F4F64
	0x038F4F34 LDR W9, [X10]
	0x038F4F38 ADD W9, W9, 0x3
	0x038F4F3C ADD X8, X8, W9, 0x4, SXTW
	0x038F4F40 ADD X0, X8, 0x138
	0x038F4F44 LDP X8, X1, [X0]
	0x038F4F48 MOV X0, X21
	0x038F4F4C BLR X8
	0x038F4F50 CBNZ X20, 0x38F4FA8
	0x038F4F54 B 0x38F4FD0
	0x038F4F58 LDRSW X9, [X10]
	0x038F4F5C ADD X8, X8, X9, 0x4, LSL
	0x038F4F60 ADD X0, X8, 0x138
	0x038F4F64 LDP X8, X1, [X0]
	0x038F4F68 MOV X0, X21
	0x038F4F6C BLR X8
	0x038F4F70 ADRP X8, 0x859000
	0x038F4F74 LDR X8, [X8 + 0x768]
	0x038F4F78 MOV W21, W0
	0x038F4F7C LDR X8, [X8]
	0x038F4F80 MOV X0, X8
	0x038F4F84 BL 0x1C16F10
	0x038F4F88 ADRP X8, 0x859000
	0x038F4F8C LDR X8, [X8 + 0x758]
	0x038F4F90 MOV W1, W21
	0x038F4F94 MOV X22, X0
	0x038F4F98 LDR X2, [X8]
	0x038F4F9C BL 0x301B830
	0x038F4FA0 STR X22, [X19 + 0x18]
	0x038F4FA4 CBZ X20, 0x38F4FD0
	0x038F4FA8 LDR X0, [X20 + 0x20]
	0x038F4FAC CBZ X0, 0x38F4FD0
	0x038F4FB0 ADRP X8, 0x859000
	0x038F4FB4 LDR X8, [X8 + 0x680]
	0x038F4FB8 LDR X1, [X19 + 0x10]
	0x038F4FBC LDP X20, X19, [X31 + 0x20]
	0x038F4FC0 LDP X22, X21, [X31 + 0x10]
	0x038F4FC4 LDR X2, [X8]
	0x038F4FC8 LDR X30, [X31], #0x30
	0x038F4FCC B 0x301C194
	0x038F4FD0 BL 0x1C16F20
	0x038F4FD4 LDR X0, [X0 + 0x10]
	0x038F4FD8 RET
	0x038F4FDC STR X1, [X0 + 0x10]
	0x038F4FE0 RET
	0x038F4FE4 LDR X0, [X0 + 0x18]
	0x038F4FE8 RET
	0x038F4FEC STR X1, [X0 + 0x18]
	0x038F4FF0 RET
	0x038F4FF4 MOV W0, W31
	0x038F4FF8 RET
	0x038F4FFC STP X30, X21, [X31 - 0x20]!
	0x038F5000 STP X20, X19, [X31 + 0x10]
	0x038F5004 ADRP X21, 0xAEC000
	0x038F5008 LDRB W8, [X21 + 0x73E]
	0x038F500C MOV X19, X1
	0x038F5010 MOV X20, X0
	0x038F5014 TBNZ X8, 0x0, 0x38F502C
	0x038F5018 ADRP X0, 0x858000
	0x038F501C LDR X0, [X0 + 0x970]
	0x038F5020 BL 0x1C16CF4
	0x038F5024 MOVZ W8, 0x1
	0x038F5028 STRB W8, [X21 + 0x73E]
	0x038F502C LDR X20, [X20 + 0x18]
	0x038F5030 CBZ X20, 0x38F50A4
	0x038F5034 ADRP X10, 0x858000
	0x038F5038 LDR X8, [X20]
	0x038F503C LDR X10, [X10 + 0x970]
	0x038F5040 LDRH W9, [X8 + 0x12E]
	0x038F5044 LDR X1, [X10]
	0x038F5048 CBZ X9, 0x38F506C
	0x038F504C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x85A000
	012 Move X20, [X20+2128]
	013 Move X21, X1
	014 Move X19, X0
	015 Move X24, 0xAEE000
	016 Move W25, 1
	017 Move W8, [X24+1831]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X20
	023 Call 0x1C17CF4
	024 Move [X24+1831], W25
	025 Move X0, X19
	026 Move X1, X21
	027 Call DTSweep.IsShallow, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {106}
	032 Move X0, X19
	033 Move X1, X21
	034 Call DTSweep.Fill, X0, X1
	035 Compare X21, 0
	036 JumpIfEqual {117}
	037 Move X27, X21
	038 Add X27, X27, 24
	039 Move X8, [X27]
	040 Compare X19, 0
	041 JumpIfEqual {117}
	042 Move X10, [X19+96]
	043 Compare X10, 0
	044 JumpIfEqual {117}
	045 Move X11, [X10+16]
	046 Move X26, X21
	047 Add X26, X26, 16
	048 Move X9, [X26]
	049 Move X10, [X10+32]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X8, 0
	053 JumpIfEqual {117}
	054 Move X8, [X8+40]
	055 Compare X8, 0
	056 JumpIfEqual {117}
	057 Compare X9, 0
	058 JumpIfEqual {117}
	059 Move X9, [X9+40]
	060 Compare X9, 0
	061 JumpIfEqual {117}
	062 Move V0, [X8+32]
	063 Move V1, [X9+32]
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {117}
	069 Move X8, [X9+16]
	070 Compare X8, 0
	071 JumpIfEqual {117}
	072 Move X0, [X20]
	073 Move X23, [X21+40]
	074 Move X21, [X9+40]
	075 Move X22, [X8+40]
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X23
	081 Move X1, X21
	082 Move X2, X22
	083 Call TriangulationUtil.Orient2d, X0, X1, X2
	084 Compare W0, 0
	085 JumpIfNotEqual {105}
	086 Compare X8, 0
	087 JumpIfEqual {117}
	088 Move X9, [X8+24]
	089 Compare X9, 0
	090 JumpIfEqual {117}
	091 Move X0, [X20]
	092 Move X23, [X21+40]
	093 Move X21, [X8+40]
	094 Move X22, [X9+40]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X23
	100 Move X1, X21
	101 Move X2, X22
	102 Call TriangulationUtil.Orient2d, X0, X1, X2
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X26, X27
	105 Move X21, [X26]
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move X30, [X31+80]
	115 Move X27, [X31+88]
	116 Return 
	117 Call 0x1C17F20

Method: System.Boolean IsShallow(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F5050 ADD X10, X10, 0x8
	0x038F5054 LDUR X11, [X10 - 0x8]
	0x038F5058 CMP X11, X1
	0x038F505C B.EQ 0x38F507C
	0x038F5060 SUBS X9, X9, 0x1
	0x038F5064 ADD X10, X10, 0x10
	0x038F5068 B.NE 0x38F5054
	0x038F506C MOVZ W2, 0x2
	0x038F5070 MOV X0, X20
	0x038F5074 BL 0x1C5C788
	0x038F5078 B 0x38F508C
	0x038F507C LDR W9, [X10]
	0x038F5080 ADD W9, W9, 0x2
	0x038F5084 ADD X8, X8, W9, 0x4, SXTW
	0x038F5088 ADD X0, X8, 0x138
	0x038F508C LDP X3, X2, [X0]
	0x038F5090 MOV X0, X20
	0x038F5094 MOV X1, X19
	0x038F5098 LDP X20, X19, [X31 + 0x10]
	0x038F509C LDP X30, X21, [X31], #0x20
	0x038F50A0 BR X3
	0x038F50A4 BL 0x1C16F20
	0x038F50A8 STR X30, [X31 - 0x50]!
	0x038F50AC STP X26, X25, [X31 + 0x10]
	0x038F50B0 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {32}
	004 Move X8, [X0+96]
	005 Compare X8, 0
	006 JumpIfEqual {32}
	007 Move W9, [X8+48]
	008 Compare W9, 0
	009 JumpIfEqual {13}
	010 Move X9, [X8+16]
	011 Compare X9, 0
	012 JumpIfNotEqual {16}
	013 Move X9, [X8+32]
	014 Compare X9, 0
	015 JumpIfEqual {32}
	016 Move X9, [X9+40]
	017 Compare X9, 0
	018 JumpIfEqual {32}
	019 Compare X1, 0
	020 JumpIfEqual {32}
	021 Move X10, [X1+40]
	022 Compare X10, 0
	023 JumpIfEqual {32}
	024 Move V0, [X9+32]
	025 Move V1, [X10+32]
	026 Move V2, [X8+40]
	027 Subtract D0, D0, D1
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X30, [X31+16]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Double HoleAngle(UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4BE4 MOV X20, X0
	0x038F4BE8 BL 0x38F4BFC
	0x038F4BEC STR X19, [X20 + 0x20]
	0x038F4BF0 LDP X20, X19, [X31 + 0x10]
	0x038F4BF4 LDR X30, [X31], #0x20
	0x038F4BF8 RET
	0x038F4BFC STP X30, X23, [X31 - 0x30]!
	0x038F4C00 STP X22, X21, [X31 + 0x10]
	0x038F4C04 STP X20, X19, [X31 + 0x20]
	0x038F4C08 ADRP X23, 0xAED000
	0x038F4C0C ADRP X22, 0x859000
	0x038F4C10 ADRP X21, 0x859000
	0x038F4C14 LDRB W8, [X23 + 0x73D]
	0x038F4C18 LDR X22, [X22 + 0x658]
	0x038F4C1C LDR X21, [X21 + 0x960]
	0x038F4C20 MOV X20, X1
	0x038F4C24 MOV X19, X0
	0x038F4C28 TBNZ X8, 0x0, 0x38F4C4C
	0x038F4C2C ADRP X0, 0x859000
	0x038F4C30 LDR X0, [X0 + 0x960]
	0x038F4C34 BL 0x1C16CF4
	0x038F4C38 ADRP X0, 0x859000
	0x038F4C3C LDR X0, [X0 + 0x658]
	0x038F4C40 BL 0x1C16CF4
	0x038F4C44 MOVZ W8, 0x1
	0x038F4C48 STRB W8, [X23 + 0x73D]
	0x038F4C4C MOV X0, X19
	0x038F4C50 MOV X1, X31
	0x038F4C54 BL 0x33BDD8C
	0x038F4C58 LDR X0, [X22]
	0x038F4C5C BL 0x1C16F10
	0x038F4C60 LDR X2, [X21]
	0x038F4C64 MOV X1, X20
	0x038F4C68 MOV X21, X0
	0x038F4C6C BL 0x301B8E0
	0x038F4C70 STR X21, [X19 + 0x10]
	0x038F4C74 LDP X20, X19, [X31 + 0x20]
	0x038F4C78 LDP X22, X21, [X31 + 0x10]
	0x038F4C7C LDP X30, X23, [X31], #0x30
	0x038F4C80 RET
	0x038F4C84 MOVZ W0, 0x1
	0x038F4C88 RET
	0x038F4C8C STP X30, X25, [X31 - 0x40]!
	0x038F4C90 STP X24, X23, [X31 + 0x10]
	0x038F4C94 STP X22, X21, [X31 + 0x20]
	0x038F4C98 STP X20, X19, [X31 + 0x30]
	0x038F4C9C ADRP X21, 0xAED000
	0x038F4CA0 LDRB W8, [X21 + 0x73C]
	0x038F4CA4 MOV X19, X1

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAEE000
	009 Move W8, [X20+1832]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x800000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1832], W8
	020 Compare X19, 0
	021 JumpIfEqual {69}
	022 Move X9, [X19+40]
	023 Compare X9, 0
	024 JumpIfEqual {69}
	025 Move X8, [X19+16]
	026 Compare X8, 0
	027 JumpIfEqual {69}
	028 Move X8, [X8+40]
	029 Compare X8, 0
	030 JumpIfEqual {69}
	031 Move X10, [X19+24]
	032 Compare X10, 0
	033 JumpIfEqual {69}
	034 Move X10, [X10+40]
	035 Compare X10, 0
	036 JumpIfEqual {69}
	037 Move X11, 0x800000
	038 Move X11, [X11+1448]
	039 Move D0, [X9+24]
	040 Move D1, [X9+32]
	041 Move D2, [X8+24]
	042 Move D3, [X8+32]
	043 Move D4, [X10+24]
	044 Move D5, [X10+32]
	045 Move X0, [X11]
	046 Subtract D9, D2, D0
	047 Subtract D8, D3, D1
	048 Move W8, [X0+224]
	049 Subtract D11, D4, D0
	050 Subtract D10, D5, D1
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Multiply D0, D9, D10
	055 Multiply D1, D8, D11
	056 Multiply D2, D9, D11
	057 Multiply D3, D8, D10
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+32]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Subtract D0, D0, D1
	064 Add D1, D2, D3
	065 Move D11, [X31+64]
	066 Move D10, [X31+72]
	067 Call 0x3EB2D80
	068 Return V0
	069 Call 0x1C17F20

Method: System.Double BasinAngle(UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F4CA8 MOV X20, X0
	0x038F4CAC TBNZ X8, 0x0, 0x38F4CC4
	0x038F4CB0 ADRP X0, 0x859000
	0x038F4CB4 LDR X0, [X0 + 0x968]
	0x038F4CB8 BL 0x1C16CF4
	0x038F4CBC MOVZ W8, 0x1
	0x038F4CC0 STRB W8, [X21 + 0x73C]
	0x038F4CC4 MOV X0, X20
	0x038F4CC8 MOV X1, X19
	0x038F4CCC BL 0x38F4E30
	0x038F4CD0 LDR X8, [X20 + 0x20]
	0x038F4CD4 CBZ X8, 0x38F4E14
	0x038F4CD8 ADRP X25, 0x859000
	0x038F4CDC LDR X25, [X25 + 0x968]
	0x038F4CE0 MOV W24, W31
	0x038F4CE4 LDR W9, [X8 + 0x18]
	0x038F4CE8 CMP W24, W9
	0x038F4CEC B.GE 0x38F4E18
	0x038F4CF0 B.CS 0x38F4E2C
	0x038F4CF4 LDR X21, [X20 + 0x10]
	0x038F4CF8 CBZ X21, 0x38F4E14
	0x038F4CFC LDR X9, [X21]
	0x038F4D00 ADD X8, X8, W24, 0x2, SXTW
	0x038F4D04 LDR W22, [X8 + 0x20]
	0x038F4D08 LDR X1, [X25]
	0x038F4D0C LDRH W8, [X9 + 0x12E]
	0x038F4D10 CBZ X8, 0x38F4D34
	0x038F4D14 LDR X10, [X9 + 0xB0]
	0x038F4D18 ADD X10, X10, 0x8
	0x038F4D1C LDUR X11, [X10 - 0x8]
	0x038F4D20 CMP X11, X1
	0x038F4D24 B.EQ 0x38F4D44
	0x038F4D28 SUBS X8, X8, 0x1
	0x038F4D2C ADD X10, X10, 0x10
	0x038F4D30 B.NE 0x38F4D1C
	0x038F4D34 MOV X0, X21
	0x038F4D38 MOV W2, W31
	0x038F4D3C BL 0x1C5C788

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAEE000
	009 Move W8, [X20+1833]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x800000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1833], W8
	020 Compare X19, 0
	021 JumpIfEqual {56}
	022 Move X8, [X19+40]
	023 Compare X8, 0
	024 JumpIfEqual {56}
	025 Move X9, [X19+16]
	026 Compare X9, 0
	027 JumpIfEqual {56}
	028 Move X9, [X9+16]
	029 Compare X9, 0
	030 JumpIfEqual {56}
	031 Move X9, [X9+40]
	032 Compare X9, 0
	033 JumpIfEqual {56}
	034 Move X10, 0x800000
	035 Move X10, [X10+1448]
	036 Move D9, [X8+24]
	037 Move D8, [X8+32]
	038 Move D11, [X9+24]
	039 Move D10, [X9+32]
	040 Move X0, [X10]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Subtract D1, D9, D11
	046 Subtract D0, D8, D10
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X30, [X31+32]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move D11, [X31+64]
	053 Move D10, [X31+72]
	054 Call 0x3EB2D80
	055 Return V0
	056 Call 0x1C17F20

Method: System.Void Fill(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.AdvancingFrontNode node)

Disassembly:
	0x038F3004 LDR X2, [X20 + 0x18]
	0x038F3008 MOV X0, X21
	0x038F300C MOV X1, X19
	0x038F3010 LDP X20, X19, [X31 + 0x40]
	0x038F3014 LDP X22, X21, [X31 + 0x30]
	0x038F3018 LDP X24, X23, [X31 + 0x20]
	0x038F301C LDP X26, X25, [X31 + 0x10]
	0x038F3020 LDP X30, X27, [X31], #0x50
	0x038F3024 B 0x38F3044
	0x038F3028 LDP X20, X19, [X31 + 0x40]
	0x038F302C LDP X22, X21, [X31 + 0x30]
	0x038F3030 LDP X24, X23, [X31 + 0x20]
	0x038F3034 LDP X26, X25, [X31 + 0x10]
	0x038F3038 LDP X30, X27, [X31], #0x50
	0x038F303C RET
	0x038F3040 BL 0x1C16F20
	0x038F3044 STP X30, X27, [X31 - 0x50]!
	0x038F3048 STP X26, X25, [X31 + 0x10]
	0x038F304C STP X24, X23, [X31 + 0x20]
	0x038F3050 STP X22, X21, [X31 + 0x30]
	0x038F3054 STP X20, X19, [X31 + 0x40]
	0x038F3058 ADRP X22, 0x85A000
	0x038F305C LDR X22, [X22 + 0x850]
	0x038F3060 MOV X19, X2
	0x038F3064 MOV X20, X1
	0x038F3068 MOV X21, X0
	0x038F306C ADRP X26, 0xAEE000
	0x038F3070 MOVZ W27, 0x1
	0x038F3074 LDRB W8, [X26 + 0x71D]
	0x038F3078 TBNZ X8, 0x0, 0x38F3088
	0x038F307C MOV X0, X22
	0x038F3080 BL 0x1C16CF4
	0x038F3084 STRB W27, [X26 + 0x71D]
	0x038F3088 CBZ X19, 0x38F3134
	0x038F308C LDR X1, [X19 + 0x18]
	0x038F3090 MOV X0, X21
	0x038F3094 BL 0x38F2004
	0x038F3098 LDR X8, [X19 + 0x18]
	0x038F309C CBZ X8, 0x38F3134
	0x038F30A0 CBZ X20, 0x38F3134
	0x038F30A4 LDR X23, [X8 + 0x28]
	0x038F30A8 LDR X24, [X20 + 0x10]
	0x038F30AC CMP X23, X24
	0x038F30B0 B.EQ 0x38F311C
	0x038F30B4 LDR X0, [X22]
	0x038F30B8 LDR X25, [X20 + 0x18]
	0x038F30BC LDR W8, [X0 + 0xE0]
	0x038F30C0 CBNZ W8, 0x38F30C8
	0x038F30C4 BL 0x1C16DFC
	0x038F30C8 MOV X0, X25
	0x038F30CC MOV X1, X23
	0x038F30D0 MOV X2, X24
	0x038F30D4 BL 0x38F1F1C
	0x038F30D8 CBNZ W0, 0x38F311C
	0x038F30DC LDR X8, [X19 + 0x18]
	0x038F30E0 CBZ X8, 0x38F3134
	0x038F30E4 LDR X9, [X8 + 0x18]
	0x038F30E8 CBZ X9, 0x38F3134
	0x038F30EC LDR X0, [X22]
	0x038F30F0 LDR X25, [X19 + 0x28]
	0x038F30F4 LDR X23, [X8 + 0x28]
	0x038F30F8 LDR X24, [X9 + 0x28]
	0x038F30FC LDR W8, [X0 + 0xE0]
	0x038F3100 CBNZ W8, 0x38F3108
	0x038F3104 BL 0x1C16DFC
	0x038F3108 MOV X0, X25
	0x038F310C MOV X1, X23
	0x038F3110 MOV X2, X24
	0x038F3114 BL 0x38F1F1C
	0x038F3118 CBZ W0, 0x38F3074
	0x038F311C LDP X20, X19, [X31 + 0x40]
	0x038F3120 LDP X22, X21, [X31 + 0x30]
	0x038F3124 LDP X24, X23, [X31 + 0x20]
	0x038F3128 LDP X26, X25, [X31 + 0x10]
	0x038F312C LDP X30, X27, [X31], #0x50
	0x038F3130 RET
	0x038F3134 BL 0x1C16F20
	0x038F3138 STP X30, X27, [X31 - 0x50]!
	0x038F313C STP X26, X25, [X31 + 0x10]
	0x038F3140 STP X24, X23, [X31 + 0x20]
	0x038F3144 STP X22, X21, [X31 + 0x30]
	0x038F3148 STP X20, X19, [X31 + 0x40]
	0x038F314C ADRP X22, 0x85A000
	0x038F3150 LDR X22, [X22 + 0x850]
	0x038F3154 MOV X19, X2
	0x038F3158 MOV X20, X1
	0x038F315C MOV X21, X0
	0x038F3160 ADRP X26, 0xAEE000
	0x038F3164 MOVZ W27, 0x1
	0x038F3168 LDRB W8, [X26 + 0x71E]
	0x038F316C TBNZ X8, 0x0, 0x38F317C
	0x038F3170 MOV X0, X22
	0x038F3174 BL 0x1C16CF4
	0x038F3178 STRB W27, [X26 + 0x71E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xAEF000
	009 Move W8, [X21+1834]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x85B000
	017 Move X0, [X0+2088]
	018 Call 0x1C17CF4
	019 Move X0, 0x85B000
	020 Move X0, [X0+1824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1834], W8
	024 Compare X20, 0
	025 JumpIfEqual {119}
	026 Move X8, [X20+24]
	027 Compare X8, 0
	028 JumpIfEqual {119}
	029 Move X9, [X20+16]
	030 Compare X9, 0
	031 JumpIfEqual {119}
	032 Move X10, 0x85B000
	033 Move X10, [X10+2088]
	034 Move X22, [X20+40]
	035 Move X23, [X8+40]
	036 Move X24, [X9+40]
	037 Move X0, [X10]
	038 Call 0x1C17F10
	039 Move X1, X23
	040 Move X2, X22
	041 Move X3, X24
	042 Move X21, X0
	043 Call DelaunayTriangle..ctor, X0, X1, X2, X3
	044 Move X8, [X20+24]
	045 Compare X8, 0
	046 JumpIfEqual {119}
	047 Compare X21, 0
	048 JumpIfEqual {119}
	049 Move X1, [X8+48]
	050 Move X0, X21
	051 Call DelaunayTriangle.MarkNeighbor, X0, X1
	052 Move X1, [X20+48]
	053 Move X0, X21
	054 Call DelaunayTriangle.MarkNeighbor, X0, X1
	055 Compare X19, 0
	056 JumpIfEqual {119}
	057 Move X0, [X19+24]
	058 Compare X0, 0
	059 JumpIfEqual {119}
	060 Move X9, 0x85B000
	061 Move X9, [X9+1824]
	062 Move W10, [X0+28]
	063 Move X8, [X0+16]
	064 Move X9, [X9]
	065 Add W10, W10, 1
	066 Move [X0+28], W10
	067 Compare X8, 0
	068 JumpIfEqual {119}
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move W11, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add W9, W10, 1
	073 Add X8, X8, X10
	074 Move [X0+24], W9
	075 Move [X8+32], X21
	076 Move X8, [X9+32]
	077 Move X1, X21
	078 Move X8, [X8+192]
	079 Move X2, [X8+112]
	080 Call List`1<Object>.AddWithResize, X0, X1
	081 Move X8, [X20+24]
	082 Compare X8, 0
	083 JumpIfEqual {119}
	084 Move X9, [X20+16]
	085 Move [X8+16], X9
	086 Move X9, [X20+16]
	087 Compare X9, 0
	088 JumpIfEqual {119}
	089 Move [X9+24], X8
	090 Move X8, [X19+72]
	091 Compare X8, 0
	092 JumpIfEqual {119}
	093 Move X0, X19
	094 Move X1, X21
	095 Call DTSweep.Legalize, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {108}
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Return 
	108 Move X0, X19
	109 Move X1, X21
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Call DTSweepContext.MapTriangleToNodes, X0, X1
	118 Return 
	119 Call 0x1C17F20

Method: System.Boolean Legalize(UnityEngine.ProBuilder.Poly2Tri.DTSweepContext tcx, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t)

Disassembly:
	0x038F3450 LDR W8, [X0 + 0xE0]
	0x038F3454 CBNZ W8, 0x38F345C
	0x038F3458 BL 0x1C16DFC
	0x038F345C MOV X0, X27
	0x038F3460 MOV X1, X24
	0x038F3464 MOV X2, X22
	0x038F3468 BL 0x38F1F1C
	0x038F346C MOV W1, W0
	0x038F3470 MOV X0, X19
	0x038F3474 MOV X2, X21
	0x038F3478 MOV X3, X26
	0x038F347C MOV X4, X20
	0x038F3480 MOV X5, X24
	0x038F3484 BL 0x38F386C
	0x038F3488 MOV X21, X0
	0x038F348C B 0x38F32D4
	0x038F3490 MOV X0, X22
	0x038F3494 MOV X1, X27
	0x038F3498 MOV X2, X26
	0x038F349C MOV X3, X24
	0x038F34A0 BL 0x38F38E0
	0x038F34A4 MOV X5, X0
	0x038F34A8 MOV X0, X19
	0x038F34AC MOV X1, X22
	0x038F34B0 MOV X2, X27
	0x038F34B4 MOV X3, X21
	0x038F34B8 MOV X4, X26
	0x038F34BC BL 0x38F3A38
	0x038F34C0 MOV X0, X19
	0x038F34C4 MOV X1, X22
	0x038F34C8 MOV X2, X27
	0x038F34CC MOV X3, X21
	0x038F34D0 MOV X4, X20
	0x038F34D4 LDP X20, X19, [X31 + 0x50]
	0x038F34D8 LDP X22, X21, [X31 + 0x40]
	0x038F34DC LDP X24, X23, [X31 + 0x30]
	0x038F34E0 LDP X26, X25, [X31 + 0x20]
	0x038F34E4 LDP X28, X27, [X31 + 0x10]
	0x038F34E8 LDP X29, X30, [X31], #0x60
	0x038F34EC B 0x38F27F4
	0x038F34F0 LDR X8, [X19 + 0x68]
	0x038F34F4 CBZ X8, 0x38F361C
	0x038F34F8 LDR X8, [X8 + 0x10]
	0x038F34FC CBZ X8, 0x38F361C
	0x038F3500 LDR X9, [X8 + 0x18]
	0x038F3504 CMP X20, X9
	0x038F3508 B.NE 0x38F3518
	0x038F350C LDR X8, [X8 + 0x10]
	0x038F3510 CMP X22, X8
	0x038F3514 B.EQ 0x38F358C
	0x038F3518 LDR X8, [X19]
	0x038F351C MOV X0, X19
	0x038F3520 LDP X9, X1, [X8 + 0x1B8]
	0x038F3524 BLR X9
	0x038F3528 TBZ X0, 0x0, 0x38F3570
	0x038F352C ADRP X8, 0x808000
	0x038F3530 LDR X8, [X8 + 0x958]
	0x038F3534 LDR X0, [X8]
	0x038F3538 LDR W8, [X0 + 0xE0]
	0x038F353C CBNZ W8, 0x38F3544
	0x038F3540 BL 0x1C16DFC
	0x038F3544 ADRP X8, 0x85A000
	0x038F3548 LDR X8, [X8 + 0x8B8]
	0x038F354C LDP X20, X19, [X31 + 0x50]
	0x038F3550 LDP X22, X21, [X31 + 0x40]
	0x038F3554 LDP X24, X23, [X31 + 0x30]
	0x038F3558 LDR X0, [X8]
	0x038F355C LDP X26, X25, [X31 + 0x20]
	0x038F3560 LDP X28, X27, [X31 + 0x10]
	0x038F3564 MOV X1, X31
	0x038F3568 LDP X29, X30, [X31], #0x60
	0x038F356C B 0x33C33A0
	0x038F3570 LDP X20, X19, [X31 + 0x50]
	0x038F3574 LDP X22, X21, [X31 + 0x40]
	0x038F3578 LDP X24, X23, [X31 + 0x30]
	0x038F357C LDP X26, X25, [X31 + 0x20]
	0x038F3580 LDP X28, X27, [X31 + 0x10]
	0x038F3584 LDP X29, X30, [X31], #0x60
	0x038F3588 RET
	0x038F358C LDR X8, [X19]
	0x038F3590 MOV X0, X19
	0x038F3594 LDP X9, X1, [X8 + 0x1B8]
	0x038F3598 BLR X9
	0x038F359C TBZ X0, 0x0, 0x38F35CC
	0x038F35A0 ADRP X8, 0x808000
	0x038F35A4 LDR X8, [X8 + 0x958]
	0x038F35A8 LDR X0, [X8]
	0x038F35AC LDR W8, [X0 + 0xE0]
	0x038F35B0 CBNZ W8, 0x38F35B8
	0x038F35B4 BL 0x1C16DFC
	0x038F35B8 ADRP X8, 0x85A000
	0x038F35BC LDR X8, [X8 + 0x8B0]
	0x038F35C0 MOV X1, X31
	0x038F35C4 LDR X0, [X8]
	0x038F35C8 BL 0x33C33A0
	0x038F35CC MOV X0, X21
	0x038F35D0 MOV X1, X22
	0x038F35D4 MOV X2, X20
	0x038F35D8 BL 0x38F0008
	0x038F35DC MOV X0, X26
	0x038F35E0 MOV X1, X22
	0x038F35E4 MOV X2, X20
	0x038F35E8 BL 0x38F0008
	0x038F35EC MOV X0, X19
	0x038F35F0 MOV X1, X21
	0x038F35F4 BL 0x38F2450
	0x038F35F8 MOV X0, X19
	0x038F35FC MOV X1, X26
	0x038F3600 LDP X20, X19, [X31 + 0x50]
	0x038F3604 LDP X22, X21, [X31 + 0x40]
	0x038F3608 LDP X24, X23, [X31 + 0x30]
	0x038F360C LDP X26, X25, [X31 + 0x20]
	0x038F3610 LDP X28, X27, [X31 + 0x10]
	0x038F3614 LDP X29, X30, [X31], #0x60
	0x038F3618 B 0x38F2450
	0x038F361C BL 0x1C16F20
	0x038F3620 STP X30, X23, [X31 - 0x30]!
	0x038F3624 STP X22, X21, [X31 + 0x10]
	0x038F3628 STP X20, X19, [X31 + 0x20]
	0x038F362C ADRP X22, 0xAEE000
	0x038F3630 ADRP X23, 0x85A000
	0x038F3634 LDRB W8, [X22 + 0x722]
	0x038F3638 LDR X23, [X23 + 0x8C0]
	0x038F363C MOV X19, X2
	0x038F3640 MOV X20, X1
	0x038F3644 MOV X21, X0
	0x038F3648 TBNZ X8, 0x0, 0x38F3690
	0x038F364C ADRP X0, 0x85A000
	0x038F3650 LDR X0, [X0 + 0x8C8]
	0x038F3654 BL 0x1C16CF4
	0x038F3658 ADRP X0, 0x85A000
	0x038F365C LDR X0, [X0 + 0x8D0]
	0x038F3660 BL 0x1C16CF4
	0x038F3664 ADRP X0, 0x85A000
	0x038F3668 LDR X0, [X0 + 0x8D8]
	0x038F366C BL 0x1C16CF4
	0x038F3670 ADRP X0, 0x85A000
	0x038F3674 LDR X0, [X0 + 0x8E0]
	0x038F3678 BL 0x1C16CF4
	0x038F367C ADRP X0, 0x85A000
	0x038F3680 LDR X0, [X0 + 0x8C0]
	0x038F3684 BL 0x1C16CF4
	0x038F3688 MOVZ W8, 0x1
	0x038F368C STRB W8, [X22 + 0x722]
	0x038F3690 LDR X0, [X23]
	0x038F3694 BL 0x1C16F10
	0x038F3698 MOV X1, X31
	0x038F369C MOV X22, X0
	0x038F36A0 BL 0x33BDD8C
	0x038F36A4 CBZ X22, 0x38F372C
	0x038F36A8 STR X21, [X22 + 0x10]
	0x038F36AC CBZ X20, 0x38F372C
	0x038F36B0 ADRP X8, 0x85A000
	0x038F36B4 LDR X8, [X8 + 0x8D8]
	0x038F36B8 ADRP X21, 0x85A000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xAEF000
	015 Move W8, [X19+1835]
	016 Move X20, X1
	017 Move [X31], X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x85B000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move X0, 0x85B000
	026 Move X0, [X0+1968]
	027 Call 0x1C17CF4
	028 Move X0, 0x85B000
	029 Move X0, [X0+2128]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+1835], W8
	033 Compare X20, 0
	034 JumpIfEqual {191}
	035 Move X24, 0x85B000
	036 Move X24, [X24+1992]
	037 Move W22, W31
	038 Add X21, X20, 67
	039 Add X23, X20, 40
	040 Add X9, X20, 16
	041 Add X8, X20, 64
	042 Move W28, 1
	043 Move [X31+16], X8
	044 Move [X31+24], X9
	045 Move X0, X21
	046 Move W1, W22
	047 Call FixedBitArray3.get_Item, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {125}
	052 Move X2, [X24]
	053 Move X0, X23
	054 Move W1, W22
	055 Call 0x2D2064C, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {125}
	058 Move X8, 0x85B000
	059 Move X8, [X8+1968]
	060 Move X26, X0
	061 Move X0, [X31+24]
	062 Move W1, W22
	063 Move X2, [X8]
	064 Call 0x2D2064C, X0, X1
	065 Move X29, X0
	066 Move X0, X26
	067 Move X1, X20
	068 Move X2, X29
	069 Call DelaunayTriangle.OppositePoint, X0, X1, X2
	070 Move X19, X0
	071 Move X0, X26
	072 Move X1, X19
	073 Call DelaunayTriangle.IndexOf, X0, X1
	074 Move W27, W0
	075 Add X25, X26, 64
	076 Move X0, X25
	077 Move W1, W27
	078 Call FixedBitArray3.get_Item, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {91}
	083 Add X0, X26, 67
	084 Move W1, W27
	085 Move [X31+8], X0
	086 Call FixedBitArray3.get_Item, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {98}
	091 Move X0, X25
	092 Move W1, W27
	093 Call FixedBitArray3.get_Item, X0, X1
	094 And W2, W0, 1
	095 Move X0, [X31+16]
	096 Move W1, W22
	097 Call FixedBitArray3.set_Item, X0, X1, X2
	098 Move X0, X20
	099 Move X1, X29
	100 Call DelaunayTriangle.PointCCWFrom, X0, X1
	101 Move X25, X0
	102 Move X0, X20
	103 Move X1, X29
	104 Call DelaunayTriangle.PointCWFrom, X0, X1
	105 Move X8, 0x85B000
	106 Move X8, [X8+2128]
	107 Move X24, X0
	108 Move X8, [X8]
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X0, X29
	115 Move X1, X25
	116 Move X2, X24
	117 Move X3, X19
	118 Call TriangulationUtil.SmartIncircle, X0, X1, X2, X3
	119 Move X24, 0x85B000
	120 Move X24, [X24+1992]
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {144}
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W22, W22, 1
	127 NotImplemented "Instruction CSET not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 And W0, W28, 1
	130 Move X20, [X31+112]
	131 Move X19, [X31+120]
	132 Move X22, [X31+96]
	133 Move X21, [X31+104]
	134 Move X24, [X31+80]
	135 Move X23, [X31+88]
	136 Move X26, [X31+64]
	137 Move X25, [X31+72]
	138 Move X28, [X31+48]
	139 Move X27, [X31+56]
	140 Move X29, [X31+32]
	141 Move X30, [X31+40]
	142 Add X31, X31, 128
	143 Return X0
	144 Move W2, 1
	145 Move X0, X21
	146 Move W1, W22
	147 Call FixedBitArray3.set_Item, X0, X1, X2
	148 Move X23, [X31+8]
	149 Move W2, 1
	150 Move W1, W27
	151 Move X0, X23
	152 Call FixedBitArray3.set_Item, X0, X1, X2
	153 Move X0, X20
	154 Move X1, X29
	155 Move X2, X26
	156 Move X3, X19
	157 Call DTSweep.RotateTrianglePair, X0, X1, X2, X3
	158 Move X19, [X31]
	159 Move X1, X20
	160 Move X0, X19
	161 Call DTSweep.Legalize, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {171}
	166 Compare X19, 0
	167 JumpIfEqual {191}
	168 Move X0, X19
	169 Move X1, X20
	170 Call DTSweepContext.MapTriangleToNodes, X0, X1
	171 Move X0, X19
	172 Move X1, X26
	173 Call DTSweep.Legalize, X0, X1
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {183}
	178 Compare X19, 0
	179 JumpIfEqual {191}
	180 Move X0, X19
	181 Move X1, X26
	182 Call DTSweepContext.MapTriangleToNodes, X0, X1
	183 Move X0, X21
	184 Move W1, W22
	185 Move W2, W31
	186 Call FixedBitArray3.set_Item, X0, X1, X2
	187 Move X0, X23
	188 Move W1, W27
	189 Move W2, W31
	190 Call FixedBitArray3.set_Item, X0, X1, X2
	191 Call 0x1C17F20

Method: System.Void RotateTrianglePair(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle ot, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint op)

Disassembly:
	0x038F27F4 STR X30, [X31 - 0x60]!
	0x038F27F8 STP X28, X27, [X31 + 0x10]
	0x038F27FC STP X26, X25, [X31 + 0x20]
	0x038F2800 STP X24, X23, [X31 + 0x30]
	0x038F2804 STP X22, X21, [X31 + 0x40]
	0x038F2808 STP X20, X19, [X31 + 0x50]
	0x038F280C ADRP X24, 0x85B000
	0x038F2810 LDR X24, [X24 + 0x850]
	0x038F2814 MOV X21, X4
	0x038F2818 MOV X23, X3
	0x038F281C MOV X20, X2
	0x038F2820 MOV X19, X1
	0x038F2824 MOV X22, X0
	0x038F2828 ADRP X27, 0xAEF000
	0x038F282C MOVZ W28, 0x1
	0x038F2830 LDRB W8, [X27 + 0x721]
	0x038F2834 TBNZ X8, 0x0, 0x38F2844
	0x038F2838 MOV X0, X24
	0x038F283C BL 0x1C16CF4
	0x038F2840 STRB W28, [X27 + 0x721]
	0x038F2844 CBZ X22, 0x38F297C
	0x038F2848 LDR X8, [X22]
	0x038F284C MOV X0, X22
	0x038F2850 LDP X9, X1, [X8 + 0x1B8]
	0x038F2854 BLR X9
	0x038F2858 TBZ X0, 0x0, 0x38F2870
	0x038F285C MOV X0, X22
	0x038F2860 BL 0x38F1438
	0x038F2864 CBZ X0, 0x38F297C
	0x038F2868 MOV X1, X23
	0x038F286C BL 0x38F26BC
	0x038F2870 MOV X0, X23
	0x038F2874 MOV X1, X19
	0x038F2878 MOV X2, X20
	0x038F287C BL 0x38F2708
	0x038F2880 TBNZ X0, 0x0, 0x38F2930
	0x038F2884 CBZ X23, 0x38F297C
	0x038F2888 MOV X0, X23
	0x038F288C MOV X1, X21
	0x038F2890 BL 0x38EFB48
	0x038F2894 LDR X8, [X24]
	0x038F2898 MOV X25, X0
	0x038F289C LDR W9, [X8 + 0xE0]
	0x038F28A0 CBNZ W9, 0x38F28AC
	0x038F28A4 MOV X0, X8
	0x038F28A8 BL 0x1C16DFC
	0x038F28AC MOV X0, X20
	0x038F28B0 MOV X1, X25
	0x038F28B4 MOV X2, X19
	0x038F28B8 BL 0x38F1F1C
	0x038F28BC CMP W0, 0x2
	0x038F28C0 B.EQ 0x38F2980
	0x038F28C4 MOV W26, W0
	0x038F28C8 MOV X0, X23
	0x038F28CC MOV X1, X21
	0x038F28D0 BL 0x38EF900
	0x038F28D4 LDR X8, [X24]
	0x038F28D8 MOV X25, X0
	0x038F28DC LDR W9, [X8 + 0xE0]
	0x038F28E0 CBNZ W9, 0x38F28EC
	0x038F28E4 MOV X0, X8
	0x038F28E8 BL 0x1C16DFC
	0x038F28EC MOV X0, X20
	0x038F28F0 MOV X1, X25
	0x038F28F4 MOV X2, X19
	0x038F28F8 BL 0x38F1F1C
	0x038F28FC CMP W0, 0x2
	0x038F2900 B.EQ 0x38F2980
	0x038F2904 CMP W26, W0
	0x038F2908 B.NE 0x38F294C
	0x038F290C MOV X0, X23
	0x038F2910 MOV X1, X21
	0x038F2914 CBZ W26, 0x38F2924
	0x038F2918 BL 0x38EF988
	0x038F291C MOV X23, X0
	0x038F2920 B 0x38F2830
	0x038F2924 BL 0x38EFA28
	0x038F2928 MOV X23, X0
	0x038F292C B 0x38F2830
	0x038F2930 LDP X20, X19, [X31 + 0x50]
	0x038F2934 LDP X22, X21, [X31 + 0x40]
	0x038F2938 LDP X24, X23, [X31 + 0x30]
	0x038F293C LDP X26, X25, [X31 + 0x20]
	0x038F2940 LDP X28, X27, [X31 + 0x10]
	0x038F2944 LDR X30, [X31], #0x60
	0x038F2948 RET
	0x038F294C MOV X0, X22
	0x038F2950 MOV X1, X19
	0x038F2954 MOV X2, X20
	0x038F2958 MOV X3, X23
	0x038F295C MOV X4, X21
	0x038F2960 LDP X20, X19, [X31 + 0x50]
	0x038F2964 LDP X22, X21, [X31 + 0x40]
	0x038F2968 LDP X24, X23, [X31 + 0x30]
	0x038F296C LDP X26, X25, [X31 + 0x20]
	0x038F2970 LDP X28, X27, [X31 + 0x10]
	0x038F2974 LDR X30, [X31], #0x60
	0x038F2978 B 0x38F329C
	0x038F297C BL 0x1C16F20
	0x038F2980 ADRP X0, 0x85B000
	0x038F2984 LDR X0, [X0 + 0x890]
	0x038F2988 BL 0x1C16D08
	0x038F298C BL 0x1C16F10
	0x038F2990 MOV X21, X0
	0x038F2994 ADRP X0, 0x85B000
	0x038F2998 LDR X0, [X0 + 0x898]
	0x038F299C BL 0x1C16D08
	0x038F29A0 MOV X1, X0
	0x038F29A4 MOV X0, X21
	0x038F29A8 MOV X2, X20
	0x038F29AC MOV X3, X25
	0x038F29B0 MOV X4, X19
	0x038F29B4 BL 0x38F3260
	0x038F29B8 ADRP X0, 0x85B000
	0x038F29BC LDR X0, [X0 + 0x8A0]
	0x038F29C0 BL 0x1C16D08
	0x038F29C4 MOV X1, X0
	0x038F29C8 MOV X0, X21
	0x038F29CC BL 0x1C16DEC
	0x038F29D0 STP X30, X25, [X31 - 0x40]!
	0x038F29D4 STP X24, X23, [X31 + 0x10]
	0x038F29D8 STP X22, X21, [X31 + 0x20]
	0x038F29DC STP X20, X19, [X31 + 0x30]
	0x038F29E0 ADRP X22, 0xAEF000
	0x038F29E4 LDRB W8, [X22 + 0x71B]
	0x038F29E8 MOV X19, X2
	0x038F29EC MOV X20, X1
	0x038F29F0 MOV X21, X0
	0x038F29F4 TBNZ X8, 0x0, 0x38F2A0C
	0x038F29F8 ADRP X0, 0x85B000
	0x038F29FC LDR X0, [X0 + 0x850]
	0x038F2A00 BL 0x1C16CF4
	0x038F2A04 MOVZ W8, 0x1
	0x038F2A08 STRB W8, [X22 + 0x71B]
	0x038F2A0C CBZ X19, 0x38F2AC4
	0x038F2A10 ADRP X25, 0x85B000
	0x038F2A14 LDR X25, [X25 + 0x850]
	0x038F2A18 LDR X8, [X19 + 0x10]
	0x038F2A1C CBZ X8, 0x38F2AC4
	0x038F2A20 LDR X8, [X8 + 0x28]
	0x038F2A24 CBZ X8, 0x38F2AC4
	0x038F2A28 CBZ X20, 0x38F2AC4
	0x038F2A2C LDR X9, [X20 + 0x10]
	0x038F2A30 CBZ X9, 0x38F2AC4
	0x038F2A34 LDR V0, [X8 + 0x18]
	0x038F2A38 LDR V1, [X9 + 0x18]
	0x038F2A3C FCMP D0, D1
	0x038F2A40 B.PL 0x38F2AC8
	0x038F2A44 CBZ X21, 0x38F2AC4
	0x038F2A48 LDR X8, [X21]
	0x038F2A4C MOV X0, X21
	0x038F2A50 LDP X9, X1, [X8 + 0x1B8]
	0x038F2A54 BLR X9
	0x038F2A58 TBZ X0, 0x0, 0x38F2A70
	0x038F2A5C MOV X0, X21
	0x038F2A60 BL 0x38F1438
	0x038F2A64 CBZ X0, 0x38F2AC4
	0x038F2A68 MOV X1, X19
	0x038F2A6C BL 0x38F1ED0
	0x038F2A70 LDR X8, [X19 + 0x10]
	0x038F2A74 CBZ X8, 0x38F2AC4
	0x038F2A78 LDR X0, [X25]
	0x038F2A7C LDR X22, [X8 + 0x28]
	0x038F2A80 LDP X23, X24, [X20 + 0x10]
	0x038F2A84 LDR W8, [X0 + 0xE0]
	0x038F2A88 CBNZ W8, 0x38F2A90
	0x038F2A8C BL 0x1C16DFC
	0x038F2A90 MOV X0, X24
	0x038F2A94 MOV X1, X22
	0x038F2A98 MOV X2, X23
	0x038F2A9C BL 0x38F1F1C
	0x038F2AA0 CMP W0, 0x1
	0x038F2AA4 B.NE 0x38F2ABC
	0x038F2AA8 MOV X0, X21
	0x038F2AAC MOV X1, X20
	0x038F2AB0 MOV X2, X19
	0x038F2AB4 BL 0x38F2E00
	0x038F2AB8 B 0x38F2A18
	0x038F2ABC LDR X19, [X19 + 0x10]
	0x038F2AC0 CBNZ X19, 0x38F2A18
	0x038F2AC4 BL 0x1C16F20
	0x038F2AC8 LDP X20, X19, [X31 + 0x30]
	0x038F2ACC LDP X22, X21, [X31 + 0x20]
	0x038F2AD0 LDP X24, X23, [X31 + 0x10]
	0x038F2AD4 LDP X30, X25, [X31], #0x40
	0x038F2AD8 RET
	0x038F2ADC STP X30, X25, [X31 - 0x40]!
	0x038F2AE0 STP X24, X23, [X31 + 0x10]
	0x038F2AE4 STP X22, X21, [X31 + 0x20]
	0x038F2AE8 STP X20, X19, [X31 + 0x30]
	0x038F2AEC ADRP X22, 0xAEF000
	0x038F2AF0 LDRB W8, [X22 + 0x71F]
	0x038F2AF4 MOV X19, X2
	0x038F2AF8 MOV X20, X1
	0x038F2AFC MOV X21, X0
	0x038F2B00 TBNZ X8, 0x0, 0x38F2B18
	0x038F2B04 ADRP X0, 0x85B000
	0x038F2B08 LDR X0, [X0 + 0x850]
	0x038F2B0C BL 0x1C16CF4
	0x038F2B10 MOVZ W8, 0x1
	0x038F2B14 STRB W8, [X22 + 0x71F]
	0x038F2B18 CBZ X19, 0x38F2BCC
	0x038F2B1C ADRP X25, 0x85B000
	0x038F2B20 LDR X25, [X25 + 0x850]
	0x038F2B24 LDR X8, [X19 + 0x18]
	0x038F2B28 CBZ X8, 0x38F2BCC
	0x038F2B2C LDR X8, [X8 + 0x28]
	0x038F2B30 CBZ X8, 0x38F2BCC
	0x038F2B34 CBZ X20, 0x38F2BCC
	0x038F2B38 LDR X9, [X20 + 0x10]
	0x038F2B3C CBZ X9, 0x38F2BCC
	0x038F2B40 LDR V0, [X8 + 0x18]
	0x038F2B44 LDR V1, [X9 + 0x18]
	0x038F2B48 FCMP D0, D1
	0x038F2B4C B.LE 0x38F2BD0
	0x038F2B50 CBZ X21, 0x38F2BCC
	0x038F2B54 LDR X8, [X21]
	0x038F2B58 MOV X0, X21
	0x038F2B5C LDP X9, X1, [X8 + 0x1B8]
	0x038F2B60 BLR X9
	0x038F2B64 TBZ X0, 0x0, 0x38F2B7C
	0x038F2B68 MOV X0, X21
	0x038F2B6C BL 0x38F1438
	0x038F2B70 CBZ X0, 0x38F2BCC
	0x038F2B74 MOV X1, X19
	0x038F2B78 BL 0x38F1ED0
	0x038F2B7C LDR X8, [X19 + 0x18]
	0x038F2B80 CBZ X8, 0x38F2BCC
	0x038F2B84 LDR X0, [X25]
	0x038F2B88 LDR X22, [X8 + 0x28]
	0x038F2B8C LDP X23, X24, [X20 + 0x10]
	0x038F2B90 LDR W8, [X0 + 0xE0]
	0x038F2B94 CBNZ W8, 0x38F2B9C
	0x038F2B98 BL 0x1C16DFC
	0x038F2B9C MOV X0, X24
	0x038F2BA0 MOV X1, X22
	0x038F2BA4 MOV X2, X23
	0x038F2BA8 BL 0x38F1F1C
	0x038F2BAC CBNZ W0, 0x38F2BC4
	0x038F2BB0 MOV X0, X21
	0x038F2BB4 MOV X1, X20
	0x038F2BB8 MOV X2, X19
	0x038F2BBC BL 0x38F3138
	0x038F2BC0 B 0x38F2B24
	0x038F2BC4 LDR X19, [X19 + 0x18]
	0x038F2BC8 CBNZ X19, 0x38F2B24
	0x038F2BCC BL 0x1C16F20
	0x038F2BD0 LDP X20, X19, [X31 + 0x30]
	0x038F2BD4 LDP X22, X21, [X31 + 0x20]
	0x038F2BD8 LDP X24, X23, [X31 + 0x10]
	0x038F2BDC LDP X30, X25, [X31], #0x40
	0x038F2BE0 RET
	0x038F2BE4 STP X30, X27, [X31 - 0x50]!
	0x038F2BE8 STP X26, X25, [X31 + 0x10]
	0x038F2BEC STP X24, X23, [X31 + 0x20]
	0x038F2BF0 STP X22, X21, [X31 + 0x30]
	0x038F2BF4 STP X20, X19, [X31 + 0x40]
	0x038F2BF8 ADRP X22, 0x85B000
	0x038F2BFC LDR X22, [X22 + 0x850]
	0x038F2C00 MOV X19, X2
	0x038F2C04 MOV X20, X1
	0x038F2C08 MOV X21, X0
	0x038F2C0C ADRP X26, 0xAEF000
	0x038F2C10 MOVZ W27, 0x1
	0x038F2C14 LDRB W8, [X26 + 0x718]
	0x038F2C18 TBNZ X8, 0x0, 0x38F2C28
	0x038F2C1C MOV X0, X22
	0x038F2C20 BL 0x1C16CF4
	0x038F2C24 STRB W27, [X26 + 0x718]
	0x038F2C28 CBZ X19, 0x38F2CDC
	0x038F2C2C LDR X1, [X19 + 0x10]
	0x038F2C30 MOV X0, X21
	0x038F2C34 BL 0x38F2004
	0x038F2C38 LDR X8, [X19 + 0x10]
	0x038F2C3C CBZ X8, 0x38F2CDC
	0x038F2C40 CBZ X20, 0x38F2CDC
	0x038F2C44 LDR X23, [X8 + 0x28]
	0x038F2C48 LDR X24, [X20 + 0x10]
	0x038F2C4C CMP X23, X24
	0x038F2C50 B.EQ 0x38F2CC4
	0x038F2C54 LDR X0, [X22]
	0x038F2C58 LDR X25, [X20 + 0x18]
	0x038F2C5C LDR W8, [X0 + 0xE0]
	0x038F2C60 CBNZ W8, 0x38F2C68
	0x038F2C64 BL 0x1C16DFC
	0x038F2C68 MOV X0, X25
	0x038F2C6C MOV X1, X23
	0x038F2C70 MOV X2, X24
	0x038F2C74 BL 0x38F1F1C
	0x038F2C78 CMP W0, 0x1
	0x038F2C7C B.NE 0x38F2CC4
	0x038F2C80 LDR X8, [X19 + 0x10]
	0x038F2C84 CBZ X8, 0x38F2CDC
	0x038F2C88 LDR X9, [X8 + 0x10]
	0x038F2C8C CBZ X9, 0x38F2CDC
	0x038F2C90 LDR X0, [X22]
	0x038F2C94 LDR X25, [X19 + 0x28]
	0x038F2C98 LDR X23, [X8 + 0x28]
	0x038F2C9C LDR X24, [X9 + 0x28]
	0x038F2CA0 LDR W8, [X0 + 0xE0]
	0x038F2CA4 CBNZ W8, 0x38F2CAC
	0x038F2CA8 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0xAF0000
	015 Move W8, [X21+1836]
	016 Move X25, X3
	017 Move X19, X2
	018 Move X26, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x85C000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1836], W8
	029 Compare X20, 0
	030 JumpIfEqual {388}
	031 Move X0, X20
	032 Move X1, X26
	033 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	034 Move [X31+48], X0
	035 Move X0, X20
	036 Move X1, X26
	037 Call DelaunayTriangle.NeighborCWFrom, X0, X1
	038 Move [X31+56], X0
	039 Compare X19, 0
	040 JumpIfEqual {388}
	041 Move X0, X19
	042 Move X1, X25
	043 Call DelaunayTriangle.NeighborCCWFrom, X0, X1
	044 Move [X31+32], X0
	045 Move X0, X19
	046 Move X1, X25
	047 Call DelaunayTriangle.NeighborCWFrom, X0, X1
	048 Move [X31+40], X0
	049 Move X0, X20
	050 Move X1, X26
	051 Add X21, X20, 64
	052 Call DelaunayTriangle.IndexOf, X0, X1
	053 Move W28, 0x5556
	054 Add W8, W0, 2
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 NotImplemented "Instruction SMADDL not yet implemented."
	057 Move X10, X9
	058 ShiftRight X10, 63
	059 And X10, X10, 0x7FFFFFFF
	060 Move X9, X9
	061 ShiftRight X9, 32
	062 And X9, X9, 0x7FFFFFFF
	063 Add W9, W9, W10
	064 Add W9, W9, W9
	065 Subtract W1, W8, W9
	066 Move X0, X21
	067 Move [X31+24], X21
	068 Call FixedBitArray3.get_Item, X0, X1
	069 Move [X31+8], W0
	070 Move X0, X20
	071 Move X1, X26
	072 Call DelaunayTriangle.IndexOf, X0, X1
	073 Add W8, W0, 1
	074 NotImplemented "Instruction SMADDL not yet implemented."
	075 Move X10, X9
	076 ShiftRight X10, 63
	077 And X10, X10, 0x7FFFFFFF
	078 Move X9, X9
	079 ShiftRight X9, 32
	080 And X9, X9, 0x7FFFFFFF
	081 Add W9, W9, W10
	082 Add W9, W9, W9
	083 Subtract W1, W8, W9
	084 Move X0, X21
	085 Call FixedBitArray3.get_Item, X0, X1
	086 Move [X31+16], W0
	087 Move X0, X19
	088 Move X1, X25
	089 Add X21, X19, 64
	090 Call DelaunayTriangle.IndexOf, X0, X1
	091 Add W8, W0, 2
	092 NotImplemented "Instruction SMADDL not yet implemented."
	093 Move X10, X9
	094 ShiftRight X10, 63
	095 And X10, X10, 0x7FFFFFFF
	096 Move X9, X9
	097 ShiftRight X9, 32
	098 And X9, X9, 0x7FFFFFFF
	099 Add W9, W9, W10
	100 Add W9, W9, W9
	101 Subtract W1, W8, W9
	102 Move X0, X21
	103 Move [X31], X21
	104 Call FixedBitArray3.get_Item, X0, X1
	105 Move [X31+12], W0
	106 Move X0, X19
	107 Move X1, X25
	108 Call DelaunayTriangle.IndexOf, X0, X1
	109 Add W8, W0, 1
	110 NotImplemented "Instruction SMADDL not yet implemented."
	111 Move X10, X9
	112 ShiftRight X10, 63
	113 And X10, X10, 0x7FFFFFFF
	114 Move X9, X9
	115 ShiftRight X9, 32
	116 And X9, X9, 0x7FFFFFFF
	117 Add W9, W9, W10
	118 Add W9, W9, W9
	119 Subtract W1, W8, W9
	120 Move X0, X21
	121 Call FixedBitArray3.get_Item, X0, X1
	122 Move [X31+20], W0
	123 Move X0, X20
	124 Move X1, X26
	125 Add X24, X20, 67
	126 Call DelaunayTriangle.IndexOf, X0, X1
	127 Add W8, W0, 2
	128 NotImplemented "Instruction SMADDL not yet implemented."
	129 Move X10, X9
	130 ShiftRight X10, 63
	131 And X10, X10, 0x7FFFFFFF
	132 Move X9, X9
	133 ShiftRight X9, 32
	134 And X9, X9, 0x7FFFFFFF
	135 Add W9, W9, W10
	136 Add W9, W9, W9
	137 Subtract W1, W8, W9
	138 Move X0, X24
	139 Call FixedBitArray3.get_Item, X0, X1
	140 Move W27, W0
	141 Move X0, X20
	142 Move X1, X26
	143 Call DelaunayTriangle.IndexOf, X0, X1
	144 Add W8, W0, 1
	145 NotImplemented "Instruction SMADDL not yet implemented."
	146 Move X10, X9
	147 ShiftRight X10, 63
	148 And X10, X10, 0x7FFFFFFF
	149 Move X9, X9
	150 ShiftRight X9, 32
	151 And X9, X9, 0x7FFFFFFF
	152 Add W9, W9, W10
	153 Add W9, W9, W9
	154 Subtract W1, W8, W9
	155 Move X0, X24
	156 Call FixedBitArray3.get_Item, X0, X1
	157 Move W22, W0
	158 Move X0, X19
	159 Move X1, X25
	160 Add X29, X19, 67
	161 Call DelaunayTriangle.IndexOf, X0, X1
	162 Add W8, W0, 2
	163 NotImplemented "Instruction SMADDL not yet implemented."
	164 Move X10, X9
	165 ShiftRight X10, 63
	166 And X10, X10, 0x7FFFFFFF
	167 Move X9, X9
	168 ShiftRight X9, 32
	169 And X9, X9, 0x7FFFFFFF
	170 Add W9, W9, W10
	171 Add W9, W9, W9
	172 Subtract W1, W8, W9
	173 Move X0, X29
	174 Call FixedBitArray3.get_Item, X0, X1
	175 Move W23, W0
	176 Move X0, X19
	177 Move X1, X25
	178 Call DelaunayTriangle.IndexOf, X0, X1
	179 Add W8, W0, 1
	180 NotImplemented "Instruction SMADDL not yet implemented."
	181 Move X10, X9
	182 ShiftRight X10, 63
	183 And X10, X10, 0x7FFFFFFF
	184 Move X9, X9
	185 ShiftRight X9, 32
	186 And X9, X9, 0x7FFFFFFF
	187 Add W9, W9, W10
	188 Add W9, W9, W9
	189 Subtract W1, W8, W9
	190 Move X0, X29
	191 Call FixedBitArray3.get_Item, X0, X1
	192 Move W21, W0
	193 Move X0, X20
	194 Move X1, X26
	195 Move X2, X25
	196 Call DelaunayTriangle.Legalize, X0, X1, X2
	197 Move X0, X19
	198 Move X1, X25
	199 Move X2, X26
	200 Call DelaunayTriangle.Legalize, X0, X1, X2
	201 Move X0, X19
	202 Move X1, X26
	203 Call DelaunayTriangle.IndexOf, X0, X1
	204 Add W8, W0, 2
	205 NotImplemented "Instruction SMADDL not yet implemented."
	206 Move X10, X9
	207 ShiftRight X10, 63
	208 And X10, X10, 0x7FFFFFFF
	209 Move X9, X9
	210 ShiftRight X9, 32
	211 And X9, X9, 0x7FFFFFFF
	212 Add W9, W9, W10
	213 Add W9, W9, W9
	214 Subtract W1, W8, W9
	215 And W2, W27, 1
	216 Move X0, X29
	217 Call FixedBitArray3.set_Item, X0, X1, X2
	218 Move X0, X20
	219 Move X1, X26
	220 Call DelaunayTriangle.IndexOf, X0, X1
	221 Add W8, W0, 1
	222 NotImplemented "Instruction SMADDL not yet implemented."
	223 Move X10, X9
	224 ShiftRight X10, 63
	225 And X10, X10, 0x7FFFFFFF
	226 Move X9, X9
	227 ShiftRight X9, 32
	228 And X9, X9, 0x7FFFFFFF
	229 Add W9, W9, W10
	230 Add W9, W9, W9
	231 Subtract W1, W8, W9
	232 And W2, W22, 1
	233 Move X0, X24
	234 Call FixedBitArray3.set_Item, X0, X1, X2
	235 Move X0, X20
	236 Move X1, X25
	237 Call DelaunayTriangle.IndexOf, X0, X1
	238 Add W8, W0, 2
	239 NotImplemented "Instruction SMADDL not yet implemented."
	240 Move X10, X9
	241 ShiftRight X10, 63
	242 And X10, X10, 0x7FFFFFFF
	243 Move X9, X9
	244 ShiftRight X9, 32
	245 And X9, X9, 0x7FFFFFFF
	246 Add W9, W9, W10
	247 Add W9, W9, W9
	248 Subtract W1, W8, W9
	249 And W2, W23, 1
	250 Move X0, X24
	251 Call FixedBitArray3.set_Item, X0, X1, X2
	252 Move X0, X19
	253 Move X1, X25
	254 Call DelaunayTriangle.IndexOf, X0, X1
	255 Add W8, W0, 1
	256 NotImplemented "Instruction SMADDL not yet implemented."
	257 Move X10, X9
	258 ShiftRight X10, 63
	259 And X10, X10, 0x7FFFFFFF
	260 Move X9, X9
	261 ShiftRight X9, 32
	262 And X9, X9, 0x7FFFFFFF
	263 Add W9, W9, W10
	264 Add W9, W9, W9
	265 Subtract W1, W8, W9
	266 And W2, W21, 1
	267 Move X0, X29
	268 Call FixedBitArray3.set_Item, X0, X1, X2
	269 Move X0, X19
	270 Move X1, X26
	271 Call DelaunayTriangle.IndexOf, X0, X1
	272 Add W8, W0, 2
	273 NotImplemented "Instruction SMADDL not yet implemented."
	274 Move X10, X9
	275 ShiftRight X10, 63
	276 And X10, X10, 0x7FFFFFFF
	277 Move X9, X9
	278 ShiftRight X9, 32
	279 And X9, X9, 0x7FFFFFFF
	280 Add W9, W9, W10
	281 Add W9, W9, W9
	282 Subtract W1, W8, W9
	283 Move W8, [X31+8]
	284 Move X22, [X31]
	285 And W2, W8, 1
	286 Move X0, X22
	287 Call FixedBitArray3.set_Item, X0, X1, X2
	288 Move X0, X20
	289 Move X1, X26
	290 Call DelaunayTriangle.IndexOf, X0, X1
	291 Add W8, W0, 1
	292 NotImplemented "Instruction SMADDL not yet implemented."
	293 Move X10, X9
	294 ShiftRight X10, 63
	295 And X10, X10, 0x7FFFFFFF
	296 Move X9, X9
	297 ShiftRight X9, 32
	298 And X9, X9, 0x7FFFFFFF
	299 Add W9, W9, W10
	300 Add W9, W9, W9
	301 Subtract W1, W8, W9
	302 Move W8, [X31+16]
	303 Move X21, [X31+24]
	304 And W2, W8, 1
	305 Move X0, X21
	306 Call FixedBitArray3.set_Item, X0, X1, X2
	307 Move X0, X20
	308 Move X1, X25
	309 Call DelaunayTriangle.IndexOf, X0, X1
	310 Add W8, W0, 2
	311 NotImplemented "Instruction SMADDL not yet implemented."
	312 Move X10, X9
	313 ShiftRight X10, 63
	314 And X10, X10, 0x7FFFFFFF
	315 Move X9, X9
	316 ShiftRight X9, 32
	317 And X9, X9, 0x7FFFFFFF
	318 Add W9, W9, W10
	319 Add W9, W9, W9
	320 Subtract W1, W8, W9
	321 Move W8, [X31+12]
	322 Move X0, X21
	323 And W2, W8, 1
	324 Call FixedBitArray3.set_Item, X0, X1, X2
	325 Move X0, X19
	326 Move X1, X25
	327 Call DelaunayTriangle.IndexOf, X0, X1
	328 Add W8, W0, 1
	329 NotImplemented "Instruction SMADDL not yet implemented."
	330 Move X10, X9
	331 ShiftRight X10, 63
	332 And X10, X10, 0x7FFFFFFF
	333 Move X9, X9
	334 ShiftRight X9, 32
	335 And X9, X9, 0x7FFFFFFF
	336 Add W9, W9, W10
	337 Add W9, W9, W9
	338 Subtract W1, W8, W9
	339 Move W8, [X31+20]
	340 Move X0, X22
	341 And W2, W8, 1
	342 Call FixedBitArray3.set_Item, X0, X1, X2
	343 Move X21, 0x85C000
	344 Move X21, [X21+2152]
	345 Add X0, X20, 40
	346 Move X1, [X21]
	347 Call 0x2D207F4, X0
	348 Move X1, [X21]
	349 Add X0, X19, 40
	350 Call 0x2D207F4, X0
	351 Move X1, [X31+48]
	352 Compare X1, 0
	353 JumpIfEqual {356}
	354 Move X0, X19
	355 Call DelaunayTriangle.MarkNeighbor, X0, X1
	356 Move X1, [X31+56]
	357 Compare X1, 0
	358 JumpIfEqual {361}
	359 Move X0, X20
	360 Call DelaunayTriangle.MarkNeighbor, X0, X1
	361 Move X1, [X31+32]
	362 Compare X1, 0
	363 JumpIfEqual {366}
	364 Move X0, X20
	365 Call DelaunayTriangle.MarkNeighbor, X0, X1
	366 Move X1, [X31+40]
	367 Compare X1, 0
	368 JumpIfEqual {371}
	369 Move X0, X19
	370 Call DelaunayTriangle.MarkNeighbor, X0, X1
	371 Move X0, X20
	372 Move X1, X19
	373 Move X20, [X31+144]
	374 Move X19, [X31+152]
	375 Move X22, [X31+128]
	376 Move X21, [X31+136]
	377 Move X24, [X31+112]
	378 Move X23, [X31+120]
	379 Move X26, [X31+96]
	380 Move X25, [X31+104]
	381 Move X28, [X31+80]
	382 Move X27, [X31+88]
	383 Move X29, [X31+64]
	384 Move X30, [X31+72]
	385 Add X31, X31, 160
	386 Call DelaunayTriangle.MarkNeighbor, X0, X1
	387 Return 
	388 Call 0x1C17F20

