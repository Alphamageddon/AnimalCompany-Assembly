Type: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle

Method: System.Boolean get_IsInterior()

Disassembly:
	0x038F035C B.EQ 0x38F03A0
	0x038F0360 CMP W1, 0x1

ISIL:
	001 Move W0, [X0+70]
	002 Return X0

Method: System.Void set_IsInterior(System.Boolean value)

Disassembly:
	0x038F0364 B.EQ 0x38F03A8
	0x038F0368 CBZ W1, 0x38F03AC
	0x038F036C ADRP X0, 0x80D000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+70], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p1, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p2, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p3)

Disassembly:
	0x038F0370 LDR X0, [X0 + 0xF78]
	0x038F0374 BL 0x1C16D08
	0x038F0378 BL 0x1C16F10
	0x038F037C MOV X1, X31
	0x038F0380 MOV X19, X0
	0x038F0384 BL 0x3379B10
	0x038F0388 ADRP X0, 0x85D000
	0x038F038C LDR X0, [X0 + 0x7F8]
	0x038F0390 BL 0x1C16D08
	0x038F0394 MOV X1, X0
	0x038F0398 MOV X0, X19
	0x038F039C BL 0x1C16DEC
	0x038F03A0 ADD X0, X0, 0x2
	0x038F03A4 B 0x38F03AC
	0x038F03A8 ADD X0, X0, 0x1
	0x038F03AC AND W8, W2, 0x1
	0x038F03B0 STRB W8, [X0]
	0x038F03B4 LDP X30, X19, [X31], #0x10
	0x038F03B8 RET
	0x038F03BC STR X30, [X31 - 0x10]!
	0x038F03C0 CBZ X1, 0x38F03D4
	0x038F03C4 LDP X8, X2, [X1 + 0x10]
	0x038F03C8 MOV X1, X8
	0x038F03CC LDR X30, [X31], #0x10
	0x038F03D0 B 0x38F0008
	0x038F03D4 BL 0x1C16F20
	0x038F03D8 STP D11, D10, [X31 - 0x40]!
	0x038F03DC STP D9, D8, [X31 + 0x10]
	0x038F03E0 STP X30, X21, [X31 + 0x20]
	0x038F03E4 STP X20, X19, [X31 + 0x30]
	0x038F03E8 ADRP X21, 0xAF1000
	0x038F03EC ADRP X20, 0x85D000
	0x038F03F0 LDRB W8, [X21 + 0x710]
	0x038F03F4 LDR X20, [X20 + 0x7B0]
	0x038F03F8 MOV X19, X0
	0x038F03FC TBNZ X8, 0x0, 0x38F0420
	0x038F0400 ADRP X0, 0x85D000
	0x038F0404 LDR X0, [X0 + 0x7B0]
	0x038F0408 BL 0x1C16CF4
	0x038F040C ADRP X0, 0x803000
	0x038F0410 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xAF2000
	009 Move X23, 0x85E000
	010 Move W8, [X24+1792]
	011 Move X23, [X23+1904]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x85E000
	021 Move X0, [X0+1904]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+1792], W8
	025 Move X0, X22
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X3, [X23]
	029 Add X22, X22, 16
	030 Move X0, X22
	031 Move W1, W31
	032 Move X2, X21
	033 Call 0x2D206B0, X0, X1, X2
	034 Move X3, [X23]
	035 Move W1, 1
	036 Move X0, X22
	037 Move X2, X20
	038 Call 0x2D206B0, X0, X1, X2
	039 Move X3, [X23]
	040 Move X0, X22
	041 Move X2, X19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move W1, 2
	049 Move X30, [X31+64]
	050 Call 0x2D206B0, X0, X1, X2
	051 Return 

Method: System.Int32 IndexOf(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F0414 BL 0x1C16CF4
	0x038F0418 MOVZ W8, 0x1
	0x038F041C STRB W8, [X21 + 0x710]
	0x038F0420 LDR X2, [X20]
	0x038F0424 ADD X19, X19, 0x10
	0x038F0428 MOV X0, X19
	0x038F042C MOV W1, W31
	0x038F0430 BL 0x2D1F64C
	0x038F0434 CBZ X0, 0x38F04CC
	0x038F0438 LDR X2, [X20]
	0x038F043C LDR V8, [X0 + 0x18]
	0x038F0440 MOVZ W1, 0x1
	0x038F0444 MOV X0, X19
	0x038F0448 BL 0x2D1F64C
	0x038F044C CBZ X0, 0x38F04CC
	0x038F0450 LDR X2, [X20]
	0x038F0454 LDR V9, [X0 + 0x18]
	0x038F0458 MOVZ W1, 0x2
	0x038F045C MOV X0, X19
	0x038F0460 BL 0x2D1F64C
	0x038F0464 CBZ X0, 0x38F04CC
	0x038F0468 LDR X2, [X20]
	0x038F046C LDR V10, [X0 + 0x20]
	0x038F0470 MOVZ W1, 0x1
	0x038F0474 MOV X0, X19
	0x038F0478 BL 0x2D1F64C
	0x038F047C CBZ X0, 0x38F04CC
	0x038F0480 ADRP X8, 0x803000
	0x038F0484 LDR X8, [X8 + 0x5A8]
	0x038F0488 LDR V11, [X0 + 0x20]
	0x038F048C LDR X8, [X8]
	0x038F0490 LDR W9, [X8 + 0xE0]
	0x038F0494 CBNZ W9, 0x38F04A0
	0x038F0498 MOV X0, X8
	0x038F049C BL 0x1C16DFC
	0x038F04A0 FSUB D0, D10, D11
	0x038F04A4 FSUB D1, D8, D9
	0x038F04A8 LDP X20, X19, [X31 + 0x30]
	0x038F04AC LDP X30, X21, [X31 + 0x20]
	0x038F04B0 LDP D9, D8, [X31 + 0x10]
	0x038F04B4 FMUL D0, D1, D0
	0x038F04B8 FMOV D1, 0.5
	0x038F04BC FMUL D0, D0, D1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAF2000
	007 Move X21, 0x85E000
	008 Move W8, [X22+1793]
	009 Move X21, [X21+1912]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x85E000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1793], W8
	021 Move X2, [X21]
	022 Add X0, X20, 16
	023 Move X1, X19
	024 Call 0x2D20788, X0, X1
	025 Add W31, W0, 1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0
	032 Move X0, 0x804000
	033 Move X0, [X0+2000]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0x85E000
	038 Move X0, [X0+1920]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call Exception..ctor, X0, X1
	044 Move X0, 0x85E000
	045 Move X0, [X0+1928]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Int32 IndexCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F04C0 FABS D0, D0
	0x038F04C4 LDP D11, D10, [X31], #0x40
	0x038F04C8 RET
	0x038F04CC BL 0x1C16F20
	0x038F04D0 STR D12, [X31 - 0x50]!
	0x038F04D4 STP D11, D10, [X31 + 0x10]
	0x038F04D8 STP D9, D8, [X31 + 0x20]
	0x038F04DC STP X30, X21, [X31 + 0x30]
	0x038F04E0 STP X20, X19, [X31 + 0x40]
	0x038F04E4 ADRP X21, 0xAF1000
	0x038F04E8 ADRP X20, 0x85D000
	0x038F04EC LDRB W8, [X21 + 0x711]
	0x038F04F0 LDR X20, [X20 + 0x7B0]

ISIL:
	001 Move [X31-16], X30
	002 Call DelaunayTriangle.IndexOf, X0, X1
	003 Move W9, 0x5556
	004 Add W8, W0, 2
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMADDL not yet implemented."
	007 Move X10, X9
	008 ShiftRight X10, 63
	009 And X10, X10, 0x7FFFFFFF
	010 Move X9, X9
	011 ShiftRight X9, 32
	012 And X9, X9, 0x7FFFFFFF
	013 Add W9, W9, W10
	014 Add W9, W9, W9
	015 Subtract W0, W8, W9
	016 Move X30, [X31+16]
	017 Return X0

Method: System.Int32 IndexCCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F04F4 MOV X19, X0
	0x038F04F8 TBNZ X8, 0x0, 0x38F051C
	0x038F04FC ADRP X0, 0x85D000
	0x038F0500 LDR X0, [X0 + 0x7B0]
	0x038F0504 BL 0x1C16CF4
	0x038F0508 ADRP X0, 0x85D000
	0x038F050C LDR X0, [X0 + 0x800]
	0x038F0510 BL 0x1C16CF4
	0x038F0514 MOVZ W8, 0x1
	0x038F0518 STRB W8, [X21 + 0x711]
	0x038F051C LDR X2, [X20]
	0x038F0520 ADD X19, X19, 0x10
	0x038F0524 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Call DelaunayTriangle.IndexOf, X0, X1
	003 Move W9, 0x5556
	004 Add W8, W0, 1
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 NotImplemented "Instruction SMADDL not yet implemented."
	007 Move X10, X9
	008 ShiftRight X10, 63
	009 And X10, X10, 0x7FFFFFFF
	010 Move X9, X9
	011 ShiftRight X9, 32
	012 And X9, X9, 0x7FFFFFFF
	013 Add W9, W9, W10
	014 Add W9, W9, W9
	015 Subtract W0, W8, W9
	016 Move X30, [X31+16]
	017 Return X0

Method: System.Boolean Contains(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F0528 MOV W1, W31
	0x038F052C BL 0x2D1F64C
	0x038F0530 CBZ X0, 0x38F0610
	0x038F0534 LDR X2, [X20]
	0x038F0538 LDR V8, [X0 + 0x18]
	0x038F053C MOVZ W1, 0x1
	0x038F0540 MOV X0, X19
	0x038F0544 BL 0x2D1F64C
	0x038F0548 CBZ X0, 0x38F0610
	0x038F054C LDR X2, [X20]
	0x038F0550 LDR V9, [X0 + 0x18]
	0x038F0554 MOVZ W1, 0x2
	0x038F0558 MOV X0, X19
	0x038F055C BL 0x2D1F64C
	0x038F0560 CBZ X0, 0x38F0610
	0x038F0564 LDR X2, [X20]
	0x038F0568 LDR V10, [X0 + 0x18]
	0x038F056C MOV X0, X19
	0x038F0570 MOV W1, W31
	0x038F0574 BL 0x2D1F64C
	0x038F0578 CBZ X0, 0x38F0610
	0x038F057C LDR X2, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAF2000
	007 Move X21, 0x85E000
	008 Move W8, [X22+1794]
	009 Move X21, [X21+1936]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x85E000
	017 Move X0, [X0+1936]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1794], W8
	021 Move X2, [X21]
	022 Add X0, X20, 16
	023 Move X1, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x2D20714, X0, X1
	030 Return X0

Method: System.Void MarkNeighbor(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p1, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p2, UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t)

Disassembly:
	0x038F0580 LDR V11, [X0 + 0x20]
	0x038F0584 MOVZ W1, 0x1
	0x038F0588 MOV X0, X19
	0x038F058C BL 0x2D1F64C
	0x038F0590 CBZ X0, 0x38F0610
	0x038F0594 LDR X2, [X20]
	0x038F0598 LDR V12, [X0 + 0x20]
	0x038F059C MOVZ W1, 0x2
	0x038F05A0 MOV X0, X19
	0x038F05A4 BL 0x2D1F64C
	0x038F05A8 CBZ X0, 0x38F0610
	0x038F05AC ADRP X8, 0x85D000
	0x038F05B0 LDR V0, [X0 + 0x20]
	0x038F05B4 LDR X8, [X8 + 0x800]
	0x038F05B8 FADD D1, D11, D12
	0x038F05BC FMOV D11, 2.0000000002328306
	0x038F05C0 FADD D0, D1, D0
	0x038F05C4 LDR X0, [X8]
	0x038F05C8 FDIV D12, D0, D11
	0x038F05CC BL 0x1C16F10
	0x038F05D0 FADD D0, D8, D9
	0x038F05D4 FADD D0, D0, D10
	0x038F05D8 MOV X1, X31
	0x038F05DC MOV X19, X0
	0x038F05E0 FDIV D8, D0, D11
	0x038F05E4 BL 0x33BDD8C
	0x038F05E8 MOVN W8, 0x0
	0x038F05EC STP D8, D12, [X19 + 0x18]
	0x038F05F0 STR W8, [X19 + 0x28]
	0x038F05F4 MOV X0, X19
	0x038F05F8 LDP X20, X19, [X31 + 0x40]
	0x038F05FC LDP X30, X21, [X31 + 0x30]
	0x038F0600 LDP D9, D8, [X31 + 0x20]
	0x038F0604 LDP D11, D10, [X31 + 0x10]
	0x038F0608 LDR V12, [X31], #0x50
	0x038F060C RET
	0x038F0610 BL 0x1C16F20
	0x038F0614 STP X30, X19, [X31 - 0x10]!
	0x038F0618 ADD X19, X0, 0x40
	0x038F061C BL 0x38EF414
	0x038F0620 MOVZ W9, 0x5556
	0x038F0624 ADD W8, W0, 0x2
	0x038F0628 MOVK W9, 0x55550000
	0x038F062C SMADDL X9, X8, X9, X31
	0x038F0630 UBFM X10, X9, 0x3F, 0x3F
	0x038F0634 UBFM X9, X9, 0x20, 0x3F
	0x038F0638 ADD W9, W9, W10
	0x038F063C ADD W9, W9, W9, 0x1, LSL
	0x038F0640 SUB W1, W8, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAF2000
	008 Move W8, [X23+1795]
	009 Move X19, X3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x85E000
	018 Move X0, [X0+1944]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1795], W8
	022 Move X0, X20
	023 Move X1, X22
	024 Move X2, X21
	025 Call DelaunayTriangle.EdgeIndex, X0, X1, X2
	026 Add W31, W0, 1
	027 Move X8, 0x85E000
	028 Move X8, [X8+1944]
	029 Move W1, W0
	030 Add X0, X20, 40
	031 Move X2, X19
	032 Move X3, [X8]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call 0x2D206B0, X0, X1, X2
	040 Return 
	041 Move X0, 0x804000
	042 Move X0, [X0+2000]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0x85E000
	047 Move X0, [X0+1952]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call Exception..ctor, X0, X1
	053 Move X0, 0x85E000
	054 Move X0, [X0+1960]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Void MarkNeighbor(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t)

Disassembly:
	0x038F072C ADD W9, W9, W10
	0x038F0730 ADD W9, W9, W9, 0x1, LSL
	0x038F0734 SUB W1, W8, W9
	0x038F0738 LDR X30, [X31], #0x20
	0x038F073C B 0x38F0354
	0x038F0740 STR X30, [X31 - 0x20]!
	0x038F0744 STP X20, X19, [X31 + 0x10]
	0x038F0748 MOV W19, W2
	0x038F074C ADD X20, X0, 0x40
	0x038F0750 BL 0x38EF414
	0x038F0754 AND W2, W19, 0x1
	0x038F0758 MOV W1, W0
	0x038F075C MOV X0, X20
	0x038F0760 LDP X20, X19, [X31 + 0x10]
	0x038F0764 LDR X30, [X31], #0x20
	0x038F0768 B 0x38F0354
	0x038F076C STP X30, X19, [X31 - 0x10]!
	0x038F0770 ADD X19, X0, 0x43
	0x038F0774 BL 0x38EF414
	0x038F0778 MOVZ W9, 0x5556
	0x038F077C ADD W8, W0, 0x2
	0x038F0780 MOVK W9, 0x55550000
	0x038F0784 SMADDL X9, X8, X9, X31
	0x038F0788 UBFM X10, X9, 0x3F, 0x3F
	0x038F078C UBFM X9, X9, 0x20, 0x3F
	0x038F0790 ADD W9, W9, W10
	0x038F0794 ADD W9, W9, W9, 0x1, LSL
	0x038F0798 SUB W1, W8, W9
	0x038F079C MOV X0, X19
	0x038F07A0 LDP X30, X19, [X31], #0x10
	0x038F07A4 B 0x38EFFA4
	0x038F07A8 STP X30, X19, [X31 - 0x10]!
	0x038F07AC ADD X19, X0, 0x43
	0x038F07B0 BL 0x38EF414
	0x038F07B4 MOVZ W9, 0x5556
	0x038F07B8 ADD W8, W0, 0x1
	0x038F07BC MOVK W9, 0x55550000
	0x038F07C0 SMADDL X9, X8, X9, X31
	0x038F07C4 UBFM X10, X9, 0x3F, 0x3F
	0x038F07C8 UBFM X9, X9, 0x20, 0x3F
	0x038F07CC ADD W9, W9, W10
	0x038F07D0 ADD W9, W9, W9, 0x1, LSL
	0x038F07D4 SUB W1, W8, W9
	0x038F07D8 MOV X0, X19
	0x038F07DC LDP X30, X19, [X31], #0x10
	0x038F07E0 B 0x38EFFA4
	0x038F07E4 STP X30, X19, [X31 - 0x10]!
	0x038F07E8 ADD X19, X0, 0x43
	0x038F07EC BL 0x38EF414
	0x038F07F0 MOV W1, W0
	0x038F07F4 MOV X0, X19
	0x038F07F8 LDP X30, X19, [X31], #0x10
	0x038F07FC B 0x38EFFA4
	0x038F0800 STR X30, [X31 - 0x20]!
	0x038F0804 STP X20, X19, [X31 + 0x10]
	0x038F0808 MOV W19, W2
	0x038F080C ADD X20, X0, 0x43
	0x038F0810 BL 0x38EF414
	0x038F0814 MOVZ W9, 0x5556
	0x038F0818 ADD W8, W0, 0x2
	0x038F081C MOVK W9, 0x55550000
	0x038F0820 SMADDL X9, X8, X9, X31
	0x038F0824 UBFM X10, X9, 0x3F, 0x3F
	0x038F0828 UBFM X9, X9, 0x20, 0x3F
	0x038F082C AND W2, W19, 0x1
	0x038F0830 MOV X0, X20
	0x038F0834 LDP X20, X19, [X31 + 0x10]
	0x038F0838 ADD W9, W9, W10
	0x038F083C ADD W9, W9, W9, 0x1, LSL
	0x038F0840 SUB W1, W8, W9
	0x038F0844 LDR X30, [X31], #0x20
	0x038F0848 B 0x38F0354
	0x038F084C STR X30, [X31 - 0x20]!
	0x038F0850 STP X20, X19, [X31 + 0x10]
	0x038F0854 MOV W19, W2
	0x038F0858 ADD X20, X0, 0x43
	0x038F085C BL 0x38EF414
	0x038F0860 MOVZ W9, 0x5556
	0x038F0864 ADD W8, W0, 0x1
	0x038F0868 MOVK W9, 0x55550000
	0x038F086C SMADDL X9, X8, X9, X31
	0x038F0870 UBFM X10, X9, 0x3F, 0x3F
	0x038F0874 UBFM X9, X9, 0x20, 0x3F
	0x038F0878 AND W2, W19, 0x1
	0x038F087C MOV X0, X20
	0x038F0880 LDP X20, X19, [X31 + 0x10]
	0x038F0884 ADD W9, W9, W10
	0x038F0888 ADD W9, W9, W9, 0x1, LSL
	0x038F088C SUB W1, W8, W9
	0x038F0890 LDR X30, [X31], #0x20
	0x038F0894 B 0x38F0354
	0x038F0898 STR X30, [X31 - 0x20]!
	0x038F089C STP X20, X19, [X31 + 0x10]
	0x038F08A0 MOV W19, W2
	0x038F08A4 ADD X20, X0, 0x43
	0x038F08A8 BL 0x38EF414
	0x038F08AC AND W2, W19, 0x1
	0x038F08B0 MOV W1, W0
	0x038F08B4 MOV X0, X20
	0x038F08B8 LDP X20, X19, [X31 + 0x10]
	0x038F08BC LDR X30, [X31], #0x20
	0x038F08C0 B 0x38F0354
	0x038F08C4 STP X30, X21, [X31 - 0x20]!
	0x038F08C8 STP X20, X19, [X31 + 0x10]
	0x038F08CC MOV X20, X1
	0x038F08D0 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xAF2000
	011 Move X26, 0x85E000
	012 Move W8, [X21+1796]
	013 Move X26, [X26+1968]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x85E000
	021 Move X0, [X0+1968]
	022 Call 0x1C17CF4
	023 Move X0, 0x85E000
	024 Move X0, [X0+1944]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1796], W8
	028 Move X2, [X26]
	029 Add X21, X19, 16
	030 Move X0, X21
	031 Move W1, W31
	032 Call 0x2D2064C, X0, X1
	033 Compare X20, 0
	034 JumpIfEqual {111}
	035 Move X1, X0
	036 Move X0, X20
	037 Call DelaunayTriangle.Contains, X0, X1
	038 Move X2, [X26]
	039 Move W24, W0
	040 Move W1, 1
	041 Move X0, X21
	042 Move W22, 1
	043 Call 0x2D2064C, X0, X1
	044 Move X1, X0
	045 Move X0, X20
	046 Call DelaunayTriangle.Contains, X0, X1
	047 Move X2, [X26]
	048 Move W25, W0
	049 Move W1, 2
	050 Move X0, X21
	051 Move W23, 2
	052 Call 0x2D2064C, X0, X1
	053 Move X1, X0
	054 Move X0, X20
	055 Call DelaunayTriangle.Contains, X0, X1
	056 Move TEMP, X25
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {65}
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {65}
	064 Move W1, W31
	065 And W8, W24, W0
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {73}
	070 Move W22, W31
	071 Move W23, 2
	072 Move W1, 1
	073 And W8, W24, W25
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {112}
	078 Move W22, W31
	079 Move W23, 1
	080 Move W1, 2
	081 Move X8, 0x85E000
	082 Move X8, [X8+1944]
	083 Add X0, X19, 40
	084 Move X2, X20
	085 Move X3, [X8]
	086 Call 0x2D206B0, X0, X1, X2
	087 Move X2, [X26]
	088 Move X0, X21
	089 Move W1, W22
	090 Call 0x2D2064C, X0, X1
	091 Move X2, [X26]
	092 Move X22, X0
	093 Move X0, X21
	094 Move W1, W23
	095 Call 0x2D2064C, X0, X1
	096 Move X2, X0
	097 Move X0, X20
	098 Move X1, X22
	099 Move X3, X19
	100 Move X20, [X31+64]
	101 Move X19, [X31+72]
	102 Move X22, [X31+48]
	103 Move X21, [X31+56]
	104 Move X24, [X31+32]
	105 Move X23, [X31+40]
	106 Move X26, [X31+16]
	107 Move X25, [X31+24]
	108 Move X30, [X31+80]
	109 Call DelaunayTriangle.MarkNeighbor, X0, X1, X2, X3
	110 Return 
	111 Call 0x1C17F20
	112 Move X0, 0x804000
	113 Move X0, [X0+2000]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x85E000
	118 Move X0, [X0+1976]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Move X2, X31
	123 Call Exception..ctor, X0, X1
	124 Move X0, 0x85E000
	125 Move X0, [X0+1984]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint OppositePoint(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle t, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F08D4 MOV X19, X2
	0x038F08D8 MOV X21, X0
	0x038F08DC BL 0x33BDD8C
	0x038F08E0 STP X20, X19, [X21 + 0x10]
	0x038F08E4 STR X20, [X21 + 0x20]
	0x038F08E8 LDP X20, X19, [X31 + 0x10]
	0x038F08EC LDP X30, X21, [X31], #0x20
	0x038F08F0 RET
	0x038F08F4 RET
	0x038F08F8 RET
	0x038F08FC STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {13}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X2
	008 Call DelaunayTriangle.PointCWFrom, X0, X1
	009 Move X1, X0
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle NeighborCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F0988 CBZ X0, 0x38F09E4
	0x038F098C LDR X1, [X22]
	0x038F0990 MOV X2, X31
	0x038F0994 BL 0x32333E0
	0x038F0998 LDR X21, [X21 + 0x10]
	0x038F099C LDR X8, [X20 + 0x18]
	0x038F09A0 CMP X21, X8
	0x038F09A4 B.NE 0x38F0968
	0x038F09A8 CBZ X8, 0x38F09E4
	0x038F09AC LDR X8, [X8 + 0x28]
	0x038F09B0 CBZ X8, 0x38F09E4
	0x038F09B4 CBZ X19, 0x38F09E4
	0x038F09B8 LDR V0, [X8 + 0x18]
	0x038F09BC MOV X0, X19
	0x038F09C0 MOV X1, X31
	0x038F09C4 BL 0x3233E88
	0x038F09C8 LDR X8, [X19]
	0x038F09CC MOV X0, X19
	0x038F09D0 LDP X20, X19, [X31 + 0x20]
	0x038F09D4 LDP X22, X21, [X31 + 0x10]
	0x038F09D8 LDP X2, X1, [X8 + 0x168]
	0x038F09DC LDR X30, [X31], #0x30
	0x038F09E0 BR X2
	0x038F09E4 BL 0x1C16F20
	0x038F09E8 LDR X0, [X0 + 0x20]
	0x038F09EC RET
	0x038F09F0 STR X30, [X31 - 0x10]!
	0x038F09F4 CBZ X1, 0x38F0A04
	0x038F09F8 LDR V0, [X1 + 0x18]
	0x038F09FC LDR X30, [X31], #0x10
	0x038F0A00 B 0x38F0A08
	0x038F0A04 BL 0x1C16F20
	0x038F0A08 STR X30, [X31 - 0x10]!
	0x038F0A0C MOV X8, X0
	0x038F0A10 LDR X0, [X0 + 0x20]
	0x038F0A14 CBZ X0, 0x38F0A60
	0x038F0A18 LDR V1, [X0 + 0x20]
	0x038F0A1C FCMP D1, D0
	0x038F0A20 B.LE 0x38F0A3C
	0x038F0A24 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAF2000
	008 Move X21, 0x85E000
	009 Move X22, 0x85E000
	010 Move W8, [X23+1797]
	011 Move X21, [X21+1912]
	012 Move X22, [X22+1992]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x85E000
	020 Move X0, [X0+1912]
	021 Call 0x1C17CF4
	022 Move X0, 0x85E000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1797], W8
	027 Move X2, [X21]
	028 Add X0, X20, 16
	029 Move X1, X19
	030 Add X21, X20, 40
	031 Call 0x2D20788, X0, X1
	032 Move W9, 0x5556
	033 Add W8, W0, 1
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Move X10, X9
	037 ShiftRight X10, 63
	038 And X10, X10, 0x7FFFFFFF
	039 Move X9, X9
	040 ShiftRight X9, 32
	041 And X9, X9, 0x7FFFFFFF
	042 Move X2, [X22]
	043 Move X0, X21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Add W9, W9, W10
	049 Add W9, W9, W9
	050 Subtract W1, W8, W9
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call 0x2D2064C, X0, X1
	054 Return X0

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle NeighborCCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F0A28 CBZ X0, 0x38F0A58
	0x038F0A2C LDR V1, [X0 + 0x20]
	0x038F0A30 FCMP D1, D0
	0x038F0A34 B.HI 0x38F0A24
	0x038F0A38 B 0x38F0A54
	0x038F0A3C LDR X0, [X0 + 0x10]
	0x038F0A40 CBZ X0, 0x38F0A58
	0x038F0A44 LDR V1, [X0 + 0x20]
	0x038F0A48 FCMP D1, D0
	0x038F0A4C B.LE 0x38F0A3C
	0x038F0A50 LDR X0, [X0 + 0x18]
	0x038F0A54 STR X0, [X8 + 0x20]
	0x038F0A58 LDR X30, [X31], #0x10
	0x038F0A5C RET
	0x038F0A60 BL 0x1C16F20
	0x038F0A64 STP X30, X19, [X31 - 0x10]!
	0x038F0A68 CBZ X1, 0x38F0B50
	0x038F0A6C LDR X9, [X0 + 0x20]
	0x038F0A70 CBZ X9, 0x38F0B50
	0x038F0A74 LDR X8, [X9 + 0x28]
	0x038F0A78 CBZ X8, 0x38F0B50
	0x038F0A7C LDR V0, [X1 + 0x18]
	0x038F0A80 LDR V1, [X8 + 0x18]
	0x038F0A84 FCMP D0, D1
	0x038F0A88 B.NE 0x38F0B04
	0x038F0A8C CMP X8, X1
	0x038F0A90 B.EQ 0x38F0B3C
	0x038F0A94 LDR X8, [X9 + 0x18]
	0x038F0A98 CBZ X8, 0x38F0B50
	0x038F0A9C LDR X10, [X8 + 0x28]
	0x038F0AA0 CMP X1, X10
	0x038F0AA4 B.EQ 0x38F0B40
	0x038F0AA8 LDR X8, [X9 + 0x10]
	0x038F0AAC CBZ X8, 0x38F0B50
	0x038F0AB0 LDR X9, [X8 + 0x28]
	0x038F0AB4 CMP X1, X9
	0x038F0AB8 B.EQ 0x38F0B40
	0x038F0ABC ADRP X0, 0x803000
	0x038F0AC0 LDR X0, [X0 + 0x7D0]
	0x038F0AC4 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAF2000
	008 Move X21, 0x85E000
	009 Move X22, 0x85E000
	010 Move W8, [X23+1798]
	011 Move X21, [X21+1912]
	012 Move X22, [X22+1992]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x85E000
	020 Move X0, [X0+1912]
	021 Call 0x1C17CF4
	022 Move X0, 0x85E000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1798], W8
	027 Move X2, [X21]
	028 Add X0, X20, 16
	029 Move X1, X19
	030 Add X21, X20, 40
	031 Call 0x2D20788, X0, X1
	032 Move W9, 0x5556
	033 Add W8, W0, 2
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Move X10, X9
	037 ShiftRight X10, 63
	038 And X10, X10, 0x7FFFFFFF
	039 Move X9, X9
	040 ShiftRight X9, 32
	041 And X9, X9, 0x7FFFFFFF
	042 Move X2, [X22]
	043 Move X0, X21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Add W9, W9, W10
	049 Add W9, W9, W9
	050 Subtract W1, W8, W9
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Call 0x2D2064C, X0, X1
	054 Return X0

Method: UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle NeighborAcrossFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F0AC8 BL 0x1C16F10
	0x038F0ACC MOV X19, X0
	0x038F0AD0 ADRP X0, 0x85D000
	0x038F0AD4 LDR X0, [X0 + 0x808]
	0x038F0AD8 BL 0x1C16D08
	0x038F0ADC MOV X1, X0
	0x038F0AE0 MOV X0, X19
	0x038F0AE4 MOV X2, X31
	0x038F0AE8 BL 0x33B2C70
	0x038F0AEC ADRP X0, 0x85D000
	0x038F0AF0 LDR X0, [X0 + 0x810]
	0x038F0AF4 BL 0x1C16D08
	0x038F0AF8 MOV X1, X0
	0x038F0AFC MOV X0, X19
	0x038F0B00 BL 0x1C16DEC
	0x038F0B04 MOV X8, X9
	0x038F0B08 B.PL 0x38F0B24
	0x038F0B0C LDR X8, [X8 + 0x18]
	0x038F0B10 CBZ X8, 0x38F0B40
	0x038F0B14 LDR X9, [X8 + 0x28]
	0x038F0B18 CMP X1, X9
	0x038F0B1C B.NE 0x38F0B0C
	0x038F0B20 B 0x38F0B40
	0x038F0B24 LDR X8, [X8 + 0x10]
	0x038F0B28 CBZ X8, 0x38F0B40
	0x038F0B2C LDR X9, [X8 + 0x28]
	0x038F0B30 CMP X1, X9
	0x038F0B34 B.NE 0x38F0B24
	0x038F0B38 B 0x38F0B40
	0x038F0B3C MOV X8, X9
	0x038F0B40 STR X8, [X0 + 0x20]
	0x038F0B44 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAF2000
	008 Move X21, 0x85E000
	009 Move X22, 0x85E000
	010 Move W8, [X23+1799]
	011 Move X21, [X21+1912]
	012 Move X22, [X22+1992]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x85E000
	020 Move X0, [X0+1912]
	021 Call 0x1C17CF4
	022 Move X0, 0x85E000
	023 Move X0, [X0+1992]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1799], W8
	027 Move X2, [X21]
	028 Add X0, X20, 16
	029 Move X1, X19
	030 Add X21, X20, 40
	031 Call 0x2D20788, X0, X1
	032 Move X2, [X22]
	033 Move W1, W0
	034 Move X0, X21
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call 0x2D2064C, X0, X1
	042 Return X0

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint PointCCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F0B48 LDP X30, X19, [X31], #0x10
	0x038F0B4C RET
	0x038F0B50 BL 0x1C16F20
	0x038F0B54 STR X30, [X31 - 0x20]!
	0x038F0B58 STP X20, X19, [X31 + 0x10]
	0x038F0B5C MOV X20, X1
	0x038F0B60 MOV X1, X31
	0x038F0B64 MOV X19, X0
	0x038F0B68 BL 0x33BDD8C
	0x038F0B6C STR X20, [X19 + 0x28]
	0x038F0B70 CBZ X20, 0x38F0B88
	0x038F0B74 LDR V0, [X20 + 0x18]
	0x038F0B78 STR D0, [X19 + 0x20]
	0x038F0B7C LDP X20, X19, [X31 + 0x10]
	0x038F0B80 LDR X30, [X31], #0x20
	0x038F0B84 RET
	0x038F0B88 BL 0x1C16F20
	0x038F0B8C LDR X8, [X0 + 0x10]
	0x038F0B90 CMP X8, 0x0
	0x038F0B94 CSET W0, NE
	0x038F0B98 RET
	0x038F0B9C LDR X8, [X0 + 0x18]
	0x038F0BA0 CMP X8, 0x0
	0x038F0BA4 CSET W0, NE
	0x038F0BA8 RET
	0x038F0BAC STR X30, [X31 - 0x50]!
	0x038F0BB0 STP X26, X25, [X31 + 0x10]
	0x038F0BB4 STP X24, X23, [X31 + 0x20]
	0x038F0BB8 STP X22, X21, [X31 + 0x30]
	0x038F0BBC STP X20, X19, [X31 + 0x40]
	0x038F0BC0 ADRP X20, 0xAF1000
	0x038F0BC4 LDRB W8, [X20 + 0x732]
	0x038F0BC8 MOV X19, X0
	0x038F0BCC TBNZ X8, 0x0, 0x38F0C20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAF2000
	007 Move X22, 0x85E000
	008 Move W8, [X21+1800]
	009 Move X22, [X22+1968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x85E000
	017 Move X0, [X0+1968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1800], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Add X21, X20, 16
	024 Call DelaunayTriangle.IndexOf, X0, X1
	025 Move W9, 0x5556
	026 Add W8, W0, 1
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Move X10, X9
	030 ShiftRight X10, 63
	031 And X10, X10, 0x7FFFFFFF
	032 Move X9, X9
	033 ShiftRight X9, 32
	034 And X9, X9, 0x7FFFFFFF
	035 Move X2, [X22]
	036 Move X0, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Add W9, W9, W10
	042 Add W9, W9, W9
	043 Subtract W1, W8, W9
	044 Move X30, [X31+48]
	045 Call 0x2D2064C, X0, X1
	046 Return X0

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint PointCWFrom(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint point)

Disassembly:
	0x038F0900 STP X22, X21, [X31 + 0x10]
	0x038F0904 STP X20, X19, [X31 + 0x20]
	0x038F0908 ADRP X19, 0xAF1000
	0x038F090C ADRP X21, 0x803000
	0x038F0910 LDRB W8, [X19 + 0x713]
	0x038F0914 LDR X21, [X21 + 0x8F0]
	0x038F0918 MOV X20, X0
	0x038F091C TBNZ X8, 0x0, 0x38F0940
	0x038F0920 ADRP X0, 0x803000
	0x038F0924 LDR X0, [X0 + 0x8F0]
	0x038F0928 BL 0x1C16CF4
	0x038F092C ADRP X0, 0x80D000
	0x038F0930 LDR X0, [X0 + 0xB18]
	0x038F0934 BL 0x1C16CF4
	0x038F0938 MOVZ W8, 0x1
	0x038F093C STRB W8, [X19 + 0x713]
	0x038F0940 LDR X0, [X21]
	0x038F0944 BL 0x1C16F10
	0x038F0948 MOV X1, X31
	0x038F094C MOV X19, X0
	0x038F0950 BL 0x3231AC4
	0x038F0954 LDP X21, X8, [X20 + 0x10]
	0x038F0958 CMP X21, X8
	0x038F095C B.EQ 0x38F09A8
	0x038F0960 ADRP X22, 0x80D000
	0x038F0964 LDR X22, [X22 + 0xB18]
	0x038F0968 CBZ X21, 0x38F09E4
	0x038F096C LDR X8, [X21 + 0x28]
	0x038F0970 CBZ X8, 0x38F09E4
	0x038F0974 CBZ X19, 0x38F09E4
	0x038F0978 LDR V0, [X8 + 0x18]
	0x038F097C MOV X0, X19
	0x038F0980 MOV X1, X31
	0x038F0984 BL 0x3233E88

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAF2000
	007 Move X22, 0x85E000
	008 Move W8, [X21+1801]
	009 Move X22, [X22+1968]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x85E000
	017 Move X0, [X0+1968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1801], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Add X21, X20, 16
	024 Call DelaunayTriangle.IndexOf, X0, X1
	025 Move W9, 0x5556
	026 Add W8, W0, 2
	027 NotImplemented "Instruction MOVK not yet implemented."
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Move X10, X9
	030 ShiftRight X10, 63
	031 And X10, X10, 0x7FFFFFFF
	032 Move X9, X9
	033 ShiftRight X9, 32
	034 And X9, X9, 0x7FFFFFFF
	035 Move X2, [X22]
	036 Move X0, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Add W9, W9, W10
	042 Add W9, W9, W9
	043 Subtract W1, W8, W9
	044 Move X30, [X31+48]
	045 Call 0x2D2064C, X0, X1
	046 Return X0

Method: System.Void RotateCW()

Disassembly:
	0x038F0BD0 ADRP X0, 0x85D000
	0x038F0BD4 LDR X0, [X0 + 0x818]
	0x038F0BD8 BL 0x1C16CF4
	0x038F0BDC ADRP X0, 0x85D000
	0x038F0BE0 LDR X0, [X0 + 0x820]
	0x038F0BE4 BL 0x1C16CF4
	0x038F0BE8 ADRP X0, 0x85D000
	0x038F0BEC LDR X0, [X0 + 0x828]
	0x038F0BF0 BL 0x1C16CF4
	0x038F0BF4 ADRP X0, 0x85D000
	0x038F0BF8 LDR X0, [X0 + 0x7B0]
	0x038F0BFC BL 0x1C16CF4
	0x038F0C00 ADRP X0, 0x85D000
	0x038F0C04 LDR X0, [X0 + 0x720]
	0x038F0C08 BL 0x1C16CF4
	0x038F0C0C ADRP X0, 0x85D000
	0x038F0C10 LDR X0, [X0 + 0x708]
	0x038F0C14 BL 0x1C16CF4
	0x038F0C18 MOVZ W8, 0x1
	0x038F0C1C STRB W8, [X20 + 0x732]
	0x038F0C20 LDR X0, [X19 + 0x20]
	0x038F0C24 CBZ X0, 0x38F0DC8
	0x038F0C28 ADRP X8, 0x85D000
	0x038F0C2C LDR X8, [X8 + 0x708]
	0x038F0C30 ADRP X20, 0x85D000
	0x038F0C34 MOV W1, W31
	0x038F0C38 LDR X2, [X8]
	0x038F0C3C LDR X20, [X20 + 0x828]
	0x038F0C40 BL 0x301BCCC
	0x038F0C44 LDR X8, [X20]
	0x038F0C48 LDP X22, X21, [X19 + 0x50]
	0x038F0C4C MOV X23, X0
	0x038F0C50 MOV X0, X8
	0x038F0C54 BL 0x1C16F10
	0x038F0C58 MOV X1, X23
	0x038F0C5C MOV X2, X21
	0x038F0C60 MOV X3, X22
	0x038F0C64 MOV X20, X0
	0x038F0C68 BL 0x38EF370
	0x038F0C6C LDR X0, [X19 + 0x18]
	0x038F0C70 CBZ X0, 0x38F0DC8
	0x038F0C74 ADRP X9, 0x85D000
	0x038F0C78 LDR X9, [X9 + 0x720]
	0x038F0C7C LDR W10, [X0 + 0x1C]
	0x038F0C80 LDR X8, [X0 + 0x10]
	0x038F0C84 LDR X9, [X9]
	0x038F0C88 ADD W10, W10, 0x1
	0x038F0C8C STR W10, [X0 + 0x1C]
	0x038F0C90 CBZ X8, 0x38F0DC8
	0x038F0C94 LDRSW X10, [X0 + 0x18]
	0x038F0C98 LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAF2000
	007 Move X22, 0x85E000
	008 Move X21, 0x85E000
	009 Move W8, [X20+1802]
	010 Move X22, [X22+1968]
	011 Move X21, [X21+1904]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x85E000
	018 Move X0, [X0+1968]
	019 Call 0x1C17CF4
	020 Move X0, 0x85E000
	021 Move X0, [X0+1904]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1802], W8
	025 Move X2, [X22]
	026 Add X19, X19, 16
	027 Move W1, 2
	028 Move X0, X19
	029 Call 0x2D2064C, X0, X1
	030 Move X2, [X22]
	031 Move X20, X0
	032 Move W1, 1
	033 Move X0, X19
	034 Call 0x2D2064C, X0, X1
	035 Move X3, [X21]
	036 Move X2, X0
	037 Move W1, 2
	038 Move X0, X19
	039 Call 0x2D206B0, X0, X1, X2
	040 Move X2, [X22]
	041 Move X0, X19
	042 Move W1, W31
	043 Call 0x2D2064C, X0, X1
	044 Move X3, [X21]
	045 Move X2, X0
	046 Move W1, 1
	047 Move X0, X19
	048 Call 0x2D206B0, X0, X1, X2
	049 Move X3, [X21]
	050 Move X0, X19
	051 Move X2, X20
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move W1, W31
	057 Move X30, [X31+48]
	058 Call 0x2D206B0, X0, X1, X2
	059 Return 

Method: System.Void Legalize(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint oPoint, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint nPoint)

Disassembly:
	0x038F0C9C CMP W10, W11
	0x038F0CA0 B.CS 0x38F0CB8
	0x038F0CA4 ADD W9, W10, 0x1
	0x038F0CA8 ADD X8, X8, X10, 0x3, LSL
	0x038F0CAC STR W9, [X0 + 0x18]
	0x038F0CB0 STR X20, [X8 + 0x20]
	0x038F0CB4 B 0x38F0CCC
	0x038F0CB8 LDR X8, [X9 + 0x20]
	0x038F0CBC MOV X1, X20
	0x038F0CC0 LDR X8, [X8 + 0xC0]
	0x038F0CC4 LDR X2, [X8 + 0x70]
	0x038F0CC8 BL 0x301BF90
	0x038F0CCC CBZ X20, 0x38F0DC8
	0x038F0CD0 ADRP X26, 0x85D000
	0x038F0CD4 LDR X26, [X26 + 0x7B0]
	0x038F0CD8 ADRP X25, 0x85D000
	0x038F0CDC ADD X22, X20, 0x10
	0x038F0CE0 MOVZ W1, 0x1
	0x038F0CE4 LDR X2, [X26]
	0x038F0CE8 LDR X25, [X25 + 0x818]
	0x038F0CEC MOV X0, X22
	0x038F0CF0 BL 0x2D1F64C
	0x038F0CF4 LDR X8, [X25]
	0x038F0CF8 MOV X23, X0
	0x038F0CFC MOV X0, X8
	0x038F0D00 BL 0x1C16F10
	0x038F0D04 MOV X1, X23
	0x038F0D08 MOV X21, X0
	0x038F0D0C BL 0x38F0B54
	0x038F0D10 CBZ X21, 0x38F0DC8
	0x038F0D14 STR X20, [X21 + 0x30]
	0x038F0D18 LDR X2, [X26]
	0x038F0D1C MOV X0, X22
	0x038F0D20 MOV W1, W31
	0x038F0D24 BL 0x2D1F64C
	0x038F0D28 LDR X8, [X25]
	0x038F0D2C MOV X24, X0
	0x038F0D30 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAF2000
	008 Move X23, 0x85E000
	009 Move W8, [X22+1803]
	010 Move X23, [X23+1904]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x85E000
	019 Move X0, [X0+1904]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1803], W8
	023 Move X0, X21
	024 Call DelaunayTriangle.RotateCW, X0
	025 Move X0, X21
	026 Move X1, X20
	027 Add X22, X21, 16
	028 Call DelaunayTriangle.IndexOf, X0, X1
	029 Move W9, 0x5556
	030 Add W8, W0, 1
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 NotImplemented "Instruction SMADDL not yet implemented."
	033 Move X10, X9
	034 ShiftRight X10, 63
	035 And X10, X10, 0x7FFFFFFF
	036 Move X9, X9
	037 ShiftRight X9, 32
	038 And X9, X9, 0x7FFFFFFF
	039 Move X3, [X23]
	040 Move X0, X22
	041 Move X2, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Add W9, W9, W10
	047 Add W9, W9, W9
	048 Subtract W1, W8, W9
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call 0x2D206B0, X0, X1, X2
	052 Return 

Method: System.String ToString()

Disassembly:
	0x038F0D34 BL 0x1C16F10
	0x038F0D38 MOV X1, X24
	0x038F0D3C MOV X23, X0
	0x038F0D40 BL 0x38F0B54
	0x038F0D44 CBZ X23, 0x38F0DC8
	0x038F0D48 STR X20, [X23 + 0x30]
	0x038F0D4C LDR X2, [X26]
	0x038F0D50 ADRP X24, 0x85D000
	0x038F0D54 LDR X24, [X24 + 0x820]
	0x038F0D58 MOVZ W1, 0x2
	0x038F0D5C MOV X0, X22
	0x038F0D60 BL 0x2D1F64C
	0x038F0D64 LDR X8, [X25]
	0x038F0D68 MOV X22, X0
	0x038F0D6C MOV X0, X8
	0x038F0D70 BL 0x1C16F10
	0x038F0D74 MOV X1, X22
	0x038F0D78 MOV X20, X0
	0x038F0D7C BL 0x38F0B54
	0x038F0D80 LDR X0, [X24]
	0x038F0D84 BL 0x1C16F10
	0x038F0D88 MOV X1, X31
	0x038F0D8C MOV X22, X0
	0x038F0D90 BL 0x33BDD8C
	0x038F0D94 STP X21, X20, [X22 + 0x10]
	0x038F0D98 STR X21, [X22 + 0x20]
	0x038F0D9C STR X22, [X19 + 0x48]
	0x038F0DA0 STR X23, [X21 + 0x10]
	0x038F0DA4 STP X20, X21, [X23 + 0x10]
	0x038F0DA8 CBZ X20, 0x38F0DC8
	0x038F0DAC STR X23, [X20 + 0x18]
	0x038F0DB0 LDP X20, X19, [X31 + 0x40]
	0x038F0DB4 LDP X22, X21, [X31 + 0x30]
	0x038F0DB8 LDP X24, X23, [X31 + 0x20]
	0x038F0DBC LDP X26, X25, [X31 + 0x10]
	0x038F0DC0 LDR X30, [X31], #0x50
	0x038F0DC4 RET
	0x038F0DC8 BL 0x1C16F20
	0x038F0DCC SUB X31, X31, 0x90
	0x038F0DD0 STP X30, X27, [X31 + 0x40]
	0x038F0DD4 STP X26, X25, [X31 + 0x50]
	0x038F0DD8 STP X24, X23, [X31 + 0x60]
	0x038F0DDC STP X22, X21, [X31 + 0x70]
	0x038F0DE0 STP X20, X19, [X31 + 0x80]
	0x038F0DE4 ADRP X20, 0xAF1000
	0x038F0DE8 LDRB W8, [X20 + 0x714]
	0x038F0DEC MOV X19, X0
	0x038F0DF0 TBNZ X8, 0x0, 0x38F0E44
	0x038F0DF4 ADRP X0, 0x85D000
	0x038F0DF8 LDR X0, [X0 + 0x830]
	0x038F0DFC BL 0x1C16CF4
	0x038F0E00 ADRP X0, 0x85D000
	0x038F0E04 LDR X0, [X0 + 0x838]
	0x038F0E08 BL 0x1C16CF4
	0x038F0E0C ADRP X0, 0x85D000
	0x038F0E10 LDR X0, [X0 + 0x840]
	0x038F0E14 BL 0x1C16CF4
	0x038F0E18 ADRP X0, 0x85D000
	0x038F0E1C LDR X0, [X0 + 0x848]
	0x038F0E20 BL 0x1C16CF4
	0x038F0E24 ADRP X0, 0x85D000
	0x038F0E28 LDR X0, [X0 + 0x760]
	0x038F0E2C BL 0x1C16CF4
	0x038F0E30 ADRP X0, 0x85D000
	0x038F0E34 LDR X0, [X0 + 0x708]
	0x038F0E38 BL 0x1C16CF4
	0x038F0E3C MOVZ W8, 0x1
	0x038F0E40 STRB W8, [X20 + 0x714]
	0x038F0E44 STP X31, X31, [X31 + 0x20]
	0x038F0E48 STR X31, [X31 + 0x30]
	0x038F0E4C CBZ X19, 0x38F0FB0
	0x038F0E50 LDR X20, [X19 + 0x20]
	0x038F0E54 CBZ X20, 0x38F0FB0
	0x038F0E58 LDR W8, [X20 + 0x18]
	0x038F0E5C CMP W8, 0x2
	0x038F0E60 B.LT 0x38F0F94
	0x038F0E64 ADRP X25, 0x85D000
	0x038F0E68 ADRP X26, 0x85D000
	0x038F0E6C ADRP X27, 0x85D000
	0x038F0E70 ADRP X24, 0x85D000
	0x038F0E74 LDR X25, [X25 + 0x708]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xAF2000
	007 Move X22, 0x804000
	008 Move X21, 0x85E000
	009 Move W8, [X19+1804]
	010 Move X22, [X22+2760]
	011 Move X21, [X21+1968]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x85E000
	018 Move X0, [X0+1968]
	019 Call 0x1C17CF4
	020 Move X0, 0x804000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x806000
	024 Move X0, [X0+928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1804], W8
	028 Move X0, [X22]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Move X2, [X21]
	032 Add X20, X20, 16
	033 Move X19, X0
	034 Move X0, X20
	035 Move W1, W31
	036 Call 0x2D2064C, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {43}
	039 Move X8, [X0]
	040 Move X9, [X8+360]
	041 Move X1, [X8+368]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X19, 0
	044 JumpIfEqual {93}
	045 Move W8, [X19+24]
	046 Compare W8, 0
	047 JumpIfEqual {92}
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X19+32], X0
	050 Move X22, 0x806000
	051 Move X22, [X22+928]
	052 Move W1, 1
	053 Move X0, X20
	054 Move X8, [X22]
	055 Move [X19+40], X8
	056 Move X2, [X21]
	057 Call 0x2D2064C, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {64}
	060 Move X8, [X0]
	061 Move X9, [X8+360]
	062 Move X1, [X8+368]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W8, [X19+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+48], X0
	068 Move X8, [X22]
	069 Move W1, 2
	070 Move X0, X20
	071 Move [X19+56], X8
	072 Move X2, [X21]
	073 Call 0x2D2064C, X0, X1
	074 Compare X0, 0
	075 JumpIfEqual {80}
	076 Move X8, [X0]
	077 Move X9, [X8+360]
	078 Move X1, [X8+368]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move W8, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19+64], X0
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+48]
	090 Call String.Concat, X0
	091 Return X0
	092 Call 0x1C17F28
	093 Call 0x1C17F20

Method: System.Void MarkNeighborEdges()

Disassembly:
	0x038F0E78 LDR X26, [X26 + 0x848]
	0x038F0E7C LDR X27, [X27 + 0x838]
	0x038F0E80 LDR X24, [X24 + 0x830]
	0x038F0E84 MOVZ W21, 0x1
	0x038F0E88 LDR X2, [X25]
	0x038F0E8C MOV X0, X20
	0x038F0E90 MOV W1, W21
	0x038F0E94 BL 0x301BCCC
	0x038F0E98 MOV X23, X0
	0x038F0E9C MOV X0, X19
	0x038F0EA0 MOV X1, X23
	0x038F0EA4 BL 0x38F131C
	0x038F0EA8 CBZ X23, 0x38F0FB0
	0x038F0EAC MOV X22, X0
	0x038F0EB0 LDR X0, [X23 + 0x10]
	0x038F0EB4 CBZ X0, 0x38F0F30
	0x038F0EB8 LDR X1, [X26]
	0x038F0EBC ADD X8, X31, 0x8
	0x038F0EC0 BL 0x301CB58
	0x038F0EC4 LDUR V0, [X31 + 0x8]
	0x038F0EC8 LDR X8, [X31 + 0x18]
	0x038F0ECC STR V0, [X31 + 0x2]
	0x038F0ED0 STR X8, [X31 + 0x30]
	0x038F0ED4 LDR X1, [X27]
	0x038F0ED8 ADD X0, X31, 0x20
	0x038F0EDC BL 0x2BC4350
	0x038F0EE0 TBZ X0, 0x0, 0x38F0F24
	0x038F0EE4 LDR X8, [X19]
	0x038F0EE8 LDR X23, [X31 + 0x30]
	0x038F0EEC LDP X9, X1, [X8 + 0x1B8]
	0x038F0EF0 MOV X0, X19
	0x038F0EF4 BLR X9
	0x038F0EF8 TBZ X0, 0x0, 0x38F0F10
	0x038F0EFC MOV X0, X19
	0x038F0F00 BL 0x38F1438
	0x038F0F04 CBZ X0, 0x38F0F44
	0x038F0F08 MOV X1, X23
	0x038F0F0C BL 0x38F14B4
	0x038F0F10 MOV X0, X19
	0x038F0F14 MOV X1, X23
	0x038F0F18 MOV X2, X22
	0x038F0F1C BL 0x38F1500
	0x038F0F20 B 0x38F0ED4
	0x038F0F24 LDR X1, [X24]
	0x038F0F28 ADD X0, X31, 0x20
	0x038F0F2C BL 0x2BC434C
	0x038F0F30 LDR W8, [X20 + 0x18]
	0x038F0F34 ADD W21, W21, 0x1
	0x038F0F38 CMP W21, W8
	0x038F0F3C B.LT 0x38F0E88
	0x038F0F40 B 0x38F0F94
	0x038F0F44 BL 0x1C16F20
	0x038F0F48 B 0x38F0FBC
	0x038F0F4C B 0x38F0F60
	0x038F0F50 B 0x38F0F60
	0x038F0F54 B 0x38F0F60
	0x038F0F58 B 0x38F0F60
	0x038F0F5C B 0x38F0F60
	0x038F0F60 MOV X22, X0
	0x038F0F64 CMP W1, 0x1
	0x038F0F68 B.NE 0x38F0FB4
	0x038F0F6C MOV X0, X22
	0x038F0F70 BL 0x3EB1AD0
	0x038F0F74 LDR X23, [X0]
	0x038F0F78 BL 0x3EB1AE0
	0x038F0F7C LDR X1, [X24]
	0x038F0F80 ADD X0, X31, 0x20
	0x038F0F84 BL 0x2BC434C
	0x038F0F88 CBZ X23, 0x38F0F30
	0x038F0F8C MOV X0, X23
	0x038F0F90 BL 0x1C16F18
	0x038F0F94 LDP X20, X19, [X31 + 0x80]
	0x038F0F98 LDP X22, X21, [X31 + 0x70]
	0x038F0F9C LDP X24, X23, [X31 + 0x60]
	0x038F0FA0 LDP X26, X25, [X31 + 0x50]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xAF2000
	014 Move W8, [X19+1805]
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x85E000
	021 Move X0, [X0+1992]
	022 Call 0x1C17CF4
	023 Move X0, 0x85E000
	024 Move X0, [X0+1968]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1805], W8
	028 Move X25, 0x85E000
	029 Move X26, 0x85E000
	030 Move X25, [X25+1992]
	031 Move X26, [X26+1968]
	032 Move W28, 0xAAAB
	033 Move W19, W31
	034 Add X20, X22, 64
	035 Add X21, X22, 40
	036 Add X22, X22, 16
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 Move W29, 2
	039 Move X0, X20
	040 Move W1, W19
	041 Call FixedBitArray3.get_Item, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {80}
	046 Move X2, [X25]
	047 Move X0, X21
	048 Move W1, W19
	049 Call 0x2D2064C, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {80}
	052 Move X2, [X25]
	053 NotImplemented "Instruction UMADDL not yet implemented."
	054 Move X8, X8
	055 ShiftRight X8, 33
	056 And X8, X8, 0x7FFFFFFF
	057 Add W8, W8, W8
	058 Move W9, 2
	059 Move X0, X21
	060 Move W1, W19
	061 Subtract W27, W9, W8
	062 Call 0x2D2064C, X0, X1
	063 Move X2, [X26]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X23, X0
	066 NotImplemented "Instruction CSINC not yet implemented."
	067 Move X0, X22
	068 Call 0x2D2064C, X0, X1
	069 Move X2, [X26]
	070 Move X24, X0
	071 Add W1, W19, W27
	072 Move X0, X22
	073 Call 0x2D2064C, X0, X1
	074 Compare X23, 0
	075 JumpIfEqual {96}
	076 Move X2, X0
	077 Move X0, X23
	078 Move X1, X24
	079 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	080 Add W19, W19, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W29, W29, 1
	083 Move X20, [X31+80]
	084 Move X19, [X31+88]
	085 Move X22, [X31+64]
	086 Move X21, [X31+72]
	087 Move X24, [X31+48]
	088 Move X23, [X31+56]
	089 Move X26, [X31+32]
	090 Move X25, [X31+40]
	091 Move X28, [X31+16]
	092 Move X27, [X31+24]
	093 Move X29, [X31+96]
	094 Move X30, [X31+104]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void MarkEdge(UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle triangle)

Disassembly:
	0x038F1038 SMADDL X9, X8, X23, X31
	0x038F103C UBFM X10, X9, 0x3F, 0x3F
	0x038F1040 UBFM X9, X9, 0x20, 0x3F
	0x038F1044 ADD W9, W9, W10
	0x038F1048 ADD W9, W9, W9, 0x1, LSL
	0x038F104C SUB W1, W8, W9
	0x038F1050 MOV X0, X22
	0x038F1054 BL 0x38EFFA4
	0x038F1058 TBNZ X0, 0x0, 0x38F1074
	0x038F105C MOV X0, X20
	0x038F1060 MOV X1, X21
	0x038F1064 BL 0x38EFA28
	0x038F1068 MOV X20, X0
	0x038F106C CBNZ X0, 0x38F1024
	0x038F1070 BL 0x1C16F20
	0x038F1074 MOV X0, X19
	0x038F1078 MOV X1, X20
	0x038F107C LDP X20, X19, [X31 + 0x20]
	0x038F1080 LDP X22, X21, [X31 + 0x10]
	0x038F1084 LDP X30, X23, [X31], #0x30
	0x038F1088 B 0x38F445C
	0x038F108C STP X30, X23, [X31 - 0x30]!
	0x038F1090 STP X22, X21, [X31 + 0x10]
	0x038F1094 STP X20, X19, [X31 + 0x20]
	0x038F1098 CBZ X0, 0x38F1308
	0x038F109C LDR X8, [X0 + 0x48]
	0x038F10A0 MOV X19, X0
	0x038F10A4 CBZ X8, 0x38F1308
	0x038F10A8 LDR X8, [X8 + 0x10]
	0x038F10AC CBZ X8, 0x38F1308
	0x038F10B0 LDR X1, [X8 + 0x10]
	0x038F10B4 CBZ X1, 0x38F1308
	0x038F10B8 LDR X2, [X1 + 0x10]
	0x038F10BC MOV X0, X19
	0x038F10C0 BL 0x38F1688
	0x038F10C4 LDR X8, [X19 + 0x48]
	0x038F10C8 CBZ X8, 0x38F1308
	0x038F10CC LDR X8, [X8 + 0x18]
	0x038F10D0 CBZ X8, 0x38F1308
	0x038F10D4 LDR X23, [X8 + 0x18]
	0x038F10D8 CBZ X23, 0x38F1308
	0x038F10DC LDR X8, [X23 + 0x10]
	0x038F10E0 CBZ X8, 0x38F1308
	0x038F10E4 LDR X0, [X23 + 0x30]
	0x038F10E8 CBZ X0, 0x38F1308
	0x038F10EC LDR X1, [X8 + 0x28]
	0x038F10F0 BL 0x38EF528
	0x038F10F4 TBZ X0, 0x0, 0x38F1168
	0x038F10F8 LDR X8, [X23 + 0x18]
	0x038F10FC CBZ X8, 0x38F1308
	0x038F1100 LDR X0, [X23 + 0x30]
	0x038F1104 CBZ X0, 0x38F1308
	0x038F1108 LDR X1, [X8 + 0x28]
	0x038F110C BL 0x38EF528
	0x038F1110 TBZ X0, 0x0, 0x38F1168
	0x038F1114 LDR X0, [X23 + 0x30]
	0x038F1118 CBZ X0, 0x38F1308
	0x038F111C LDR X1, [X23 + 0x28]
	0x038F1120 BL 0x38EFAC8
	0x038F1124 CBZ X0, 0x38F1308
	0x038F1128 LDP X22, X21, [X23 + 0x28]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xAF1000
	014 Move W8, [X20+1806]
	015 Move X19, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x85D000
	022 Move X0, [X0+1968]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1806], W8
	026 Move X24, 0x85D000
	027 Move X24, [X24+1968]
	028 Move W26, 0xAAAB
	029 Move W22, W31
	030 Add X20, X21, 64
	031 Add X21, X21, 16
	032 Move W25, 2
	033 NotImplemented "Instruction MOVK not yet implemented."
	034 Move W27, 2
	035 Move X0, X20
	036 Move W1, W22
	037 Call FixedBitArray3.get_Item, X0, X1
	038 Add W28, W22, 1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {65}
	043 Move X2, [X24]
	044 NotImplemented "Instruction UMADDL not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, X8
	047 ShiftRight X8, 33
	048 And X8, X8, 0x7FFFFFFF
	049 Add W8, W8, W8
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move X0, X21
	052 Subtract W29, W25, W8
	053 Call 0x2D2064C, X0, X1
	054 Move X2, [X24]
	055 Move X23, X0
	056 Add W1, W22, W29
	057 Move X0, X21
	058 Call 0x2D2064C, X0, X1
	059 Compare X19, 0
	060 JumpIfEqual {81}
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X23
	064 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add W27, W27, 1
	067 Move W22, W28
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X26, [X31+32]
	075 Move X25, [X31+40]
	076 Move X28, [X31+16]
	077 Move X27, [X31+24]
	078 Move X29, [X31+96]
	079 Move X30, [X31+104]
	080 Return 
	081 Call 0x1C17F20

Method: System.Void MarkEdge(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Poly2Tri.DelaunayTriangle> tList)

Disassembly:
	0x038F112C MOV X20, X0
	0x038F1130 MOV X1, X21
	0x038F1134 MOV X2, X22
	0x038F1138 BL 0x38EF8D4
	0x038F113C MOV X3, X0
	0x038F1140 MOV X0, X21
	0x038F1144 MOV X1, X22
	0x038F1148 MOV X2, X20
	0x038F114C BL 0x38F17F4
	0x038F1150 LDR X1, [X23 + 0x30]
	0x038F1154 MOV X0, X19
	0x038F1158 BL 0x38F1CAC
	0x038F115C MOV X0, X19
	0x038F1160 MOV X1, X20
	0x038F1164 BL 0x38F1CAC
	0x038F1168 LDR X8, [X19 + 0x48]
	0x038F116C CBZ X8, 0x38F1308
	0x038F1170 LDR X8, [X8 + 0x10]
	0x038F1174 CBZ X8, 0x38F1308
	0x038F1178 LDR X23, [X8 + 0x10]
	0x038F117C CBZ X23, 0x38F1308
	0x038F1180 LDR X8, [X23 + 0x18]
	0x038F1184 CBZ X8, 0x38F1308
	0x038F1188 LDR X0, [X23 + 0x30]
	0x038F118C CBZ X0, 0x38F1308
	0x038F1190 LDR X1, [X8 + 0x28]
	0x038F1194 BL 0x38EF528
	0x038F1198 TBZ X0, 0x0, 0x38F120C
	0x038F119C LDR X8, [X23 + 0x10]
	0x038F11A0 CBZ X8, 0x38F1308
	0x038F11A4 LDR X0, [X23 + 0x30]
	0x038F11A8 CBZ X0, 0x38F1308
	0x038F11AC LDR X1, [X8 + 0x28]
	0x038F11B0 BL 0x38EF528
	0x038F11B4 TBZ X0, 0x0, 0x38F120C
	0x038F11B8 LDR X0, [X23 + 0x30]
	0x038F11BC CBZ X0, 0x38F1308
	0x038F11C0 LDR X1, [X23 + 0x28]
	0x038F11C4 BL 0x38EFAC8
	0x038F11C8 CBZ X0, 0x38F1308
	0x038F11CC LDP X22, X21, [X23 + 0x28]
	0x038F11D0 MOV X20, X0
	0x038F11D4 MOV X1, X21
	0x038F11D8 MOV X2, X22
	0x038F11DC BL 0x38EF8D4
	0x038F11E0 MOV X3, X0
	0x038F11E4 MOV X0, X21
	0x038F11E8 MOV X1, X22
	0x038F11EC MOV X2, X20
	0x038F11F0 BL 0x38F17F4
	0x038F11F4 LDR X1, [X23 + 0x30]
	0x038F11F8 MOV X0, X19
	0x038F11FC BL 0x38F1CAC
	0x038F1200 MOV X0, X19
	0x038F1204 MOV X1, X20
	0x038F1208 BL 0x38F1CAC
	0x038F120C LDR X9, [X19 + 0x48]
	0x038F1210 CBZ X9, 0x38F1308
	0x038F1214 LDR X8, [X9 + 0x10]
	0x038F1218 CBZ X8, 0x38F1308
	0x038F121C LDR X9, [X9 + 0x18]
	0x038F1220 CBZ X9, 0x38F1308
	0x038F1224 LDR X9, [X9 + 0x18]
	0x038F1228 CBZ X9, 0x38F1308
	0x038F122C LDR X22, [X8 + 0x28]
	0x038F1230 LDP X21, X20, [X9 + 0x28]
	0x038F1234 MOV X0, X19
	0x038F1238 MOV X1, X20
	0x038F123C BL 0x38F1D88
	0x038F1240 CBZ X20, 0x38F1308
	0x038F1244 MOV X0, X20
	0x038F1248 MOV X1, X21
	0x038F124C BL 0x38EFB48
	0x038F1250 CMP X0, X22
	0x038F1254 B.EQ 0x38F1270
	0x038F1258 MOV X21, X0
	0x038F125C MOV X0, X20
	0x038F1260 MOV X1, X21
	0x038F1264 BL 0x38EFA28
	0x038F1268 MOV X20, X0
	0x038F126C B 0x38F1234
	0x038F1270 LDR X8, [X19 + 0x48]
	0x038F1274 CBZ X8, 0x38F1308
	0x038F1278 LDR X8, [X8 + 0x10]
	0x038F127C CBZ X8, 0x38F1308
	0x038F1280 LDR X9, [X8 + 0x10]
	0x038F1284 CBZ X9, 0x38F1308
	0x038F1288 LDR X1, [X8 + 0x28]
	0x038F128C LDR X22, [X9 + 0x28]
	0x038F1290 MOV X0, X20
	0x038F1294 BL 0x38EF900
	0x038F1298 LDR X8, [X19 + 0x48]
	0x038F129C CBZ X8, 0x38F1308
	0x038F12A0 LDR X8, [X8 + 0x10]
	0x038F12A4 CBZ X8, 0x38F1308
	0x038F12A8 LDR X1, [X8 + 0x28]
	0x038F12AC MOV X21, X0
	0x038F12B0 MOV X0, X20
	0x038F12B4 BL 0x38EF988
	0x038F12B8 MOV X20, X0
	0x038F12BC MOV X0, X19
	0x038F12C0 MOV X1, X20
	0x038F12C4 BL 0x38F1D88
	0x038F12C8 CBZ X20, 0x38F1308
	0x038F12CC MOV X0, X20
	0x038F12D0 MOV X1, X21
	0x038F12D4 BL 0x38EFB48
	0x038F12D8 MOV X21, X0
	0x038F12DC MOV X0, X20
	0x038F12E0 MOV X1, X21
	0x038F12E4 BL 0x38EFA28
	0x038F12E8 CMP X21, X22
	0x038F12EC MOV X20, X0
	0x038F12F0 B.NE 0x38F12BC
	0x038F12F4 MOV X0, X19
	0x038F12F8 LDP X20, X19, [X31 + 0x20]
	0x038F12FC LDP X22, X21, [X31 + 0x10]
	0x038F1300 LDP X30, X23, [X31], #0x30
	0x038F1304 B 0x38F1DE0
	0x038F1308 BL 0x1C16F20
	0x038F130C LDR W8, [X0 + 0x38]
	0x038F1310 ADD W8, W8, 0x1
	0x038F1314 STR W8, [X0 + 0x38]
	0x038F1318 RET
	0x038F131C STP D9, D8, [X31 - 0x40]!
	0x038F1320 STP X30, X23, [X31 + 0x10]
	0x038F1324 STP X22, X21, [X31 + 0x20]
	0x038F1328 STP X20, X19, [X31 + 0x30]
	0x038F132C ADRP X21, 0xAF0000
	0x038F1330 LDRB W8, [X21 + 0x716]
	0x038F1334 MOV X20, X1
	0x038F1338 MOV X19, X0
	0x038F133C TBNZ X8, 0x0, 0x38F1354
	0x038F1340 ADRP X0, 0x85C000
	0x038F1344 LDR X0, [X0 + 0x850]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0xAF1000
	015 Move W8, [X21+1807]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x85D000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move X0, 0x85D000
	026 Move X0, [X0+2016]
	027 Call 0x1C17CF4
	028 Move X0, 0x85D000
	029 Move X0, [X0+2024]
	030 Call 0x1C17CF4
	031 Move X0, 0x85D000
	032 Move X0, [X0+1968]
	033 Call 0x1C17CF4
	034 Move X0, 0x85D000
	035 Move X0, [X0+2032]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1807], W8
	039 Move [X31+32], X31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Compare X20, 0
	043 JumpIfEqual {126}
	044 Move X8, 0x85D000
	045 Move X8, [X8+2032]
	046 Move X26, 0x85D000
	047 Move X0, X20
	048 Move X1, [X8]
	049 Move X26, [X26+1968]
	050 Add X8, X31, 8
	051 Call List`1<Object>.GetEnumerator, X0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+24]
	054 Move W27, 0xAAAB
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 Move W28, 2
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Move X8, 0x85D000
	060 Move X8, [X8+2016]
	061 Move X1, [X8]
	062 Add X0, X31, 32
	063 Call Enumerator<Object>.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {106}
	068 Move X29, [X31+48]
	069 Move W22, W31
	070 Move W24, 2
	071 Add X20, X29, 64
	072 Add X21, X29, 16
	073 Compare X29, 0
	074 JumpIfEqual {125}
	075 Move X0, X20
	076 Move W1, W22
	077 Call FixedBitArray3.get_Item, X0, X1
	078 Add W25, W22, 1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {103}
	083 Move X2, [X26]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move X0, X21
	087 Call 0x2D2064C, X0, X1
	088 NotImplemented "Instruction UMADDL not yet implemented."
	089 Move X8, X8
	090 ShiftRight X8, 33
	091 And X8, X8, 0x7FFFFFFF
	092 Move X2, [X26]
	093 Add W8, W8, W8
	094 Subtract W8, W28, W8
	095 Move X23, X0
	096 Add W1, W22, W8
	097 Move X0, X21
	098 Call 0x2D2064C, X0, X1
	099 Move X2, X0
	100 Move X0, X19
	101 Move X1, X23
	102 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W24, W24, 1
	105 Move W22, W25
	106 Move X8, 0x85D000
	107 Move X8, [X8+2008]
	108 Add X0, X31, 32
	109 Move X1, [X8]
	110 Call Enumerator<Object>.Dispose, X0
	111 Move X20, [X31+144]
	112 Move X19, [X31+152]
	113 Move X22, [X31+128]
	114 Move X21, [X31+136]
	115 Move X24, [X31+112]
	116 Move X23, [X31+120]
	117 Move X26, [X31+96]
	118 Move X25, [X31+104]
	119 Move X28, [X31+80]
	120 Move X27, [X31+88]
	121 Move X29, [X31+64]
	122 Move X30, [X31+72]
	123 Add X31, X31, 160
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Move X19, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Call 0x3EB2AD0
	131 Move X20, [X0]
	132 Call 0x3EB2AE0
	133 Move X8, 0x85D000
	134 Move X8, [X8+2008]
	135 Add X0, X31, 32
	136 Move X1, [X8]
	137 Call Enumerator<Object>.Dispose, X0
	138 Compare X20, 0
	139 JumpIfEqual {111}
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Move X20, X31
	143 Move X19, X0
	144 Move X8, 0x85D000
	145 Move X8, [X8+2008]
	146 Move X1, [X8]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X20, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X19
	152 Call 0x1D2D690
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Call 0x1991590

Method: System.Void MarkConstrainedEdge(System.Int32 index)

Disassembly:
	0x038F1348 BL 0x1C16CF4
	0x038F134C MOVZ W8, 0x1
	0x038F1350 STRB W8, [X21 + 0x716]

ISIL:
	001 Add X0, X0, 64
	002 Move W2, 1

Method: System.Void MarkConstrainedEdge(UnityEngine.ProBuilder.Poly2Tri.DTSweepConstraint edge)

Disassembly:
	0x038F13BC LDR V8, [X20 + 0x18]
	0x038F13C0 LDR V9, [X8 + 0x18]
	0x038F13C4 LDR X0, [X23]
	0x038F13C8 LDR W9, [X0 + 0xE0]
	0x038F13CC CBNZ W9, 0x38F13D8
	0x038F13D0 BL 0x1C16DFC
	0x038F13D4 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {10}
	004 Move X8, [X1+16]
	005 Move X2, [X1+24]
	006 Move X1, X8
	007 Move X30, [X31+16]
	008 Call DelaunayTriangle.MarkConstrainedEdge, X0, X1, X2
	009 Return 
	010 Call 0x1C17F20

Method: System.Void MarkConstrainedEdge(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint q)

Disassembly:
	0x038F1008 LDR X8, [X8 + 0x10]
	0x038F100C CBZ X8, 0x38F1070
	0x038F1010 LDR X20, [X8 + 0x30]
	0x038F1014 CBZ X20, 0x38F1070
	0x038F1018 LDR X21, [X8 + 0x28]
	0x038F101C MOVZ W23, 0x5556
	0x038F1020 MOVK W23, 0x55550000
	0x038F1024 MOV X0, X20
	0x038F1028 MOV X1, X21
	0x038F102C ADD X22, X20, 0x40
	0x038F1030 BL 0x38EF414
	0x038F1034 ADD W8, W0, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call DelaunayTriangle.EdgeIndex, X0, X1, X2
	005 Add W31, W0, 1
	006 Move W1, W0
	007 Add X0, X19, 64
	008 Move W2, 1
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call FixedBitArray3.set_Item, X0, X1, X2
	012 Return 
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Double Area()

Disassembly:
	0x038F13D8 LDR X8, [X0 + 0xB8]
	0x038F13DC LDR V0, [X8]
	0x038F13E0 FADD D0, D9, D0
	0x038F13E4 FCMP D8, D0
	0x038F13E8 B.HI 0x38F13F8
	0x038F13EC MOV X0, X19
	0x038F13F0 MOV X1, X21
	0x038F13F4 BL 0x38F2004
	0x038F13F8 LDR X8, [X19 + 0x48]
	0x038F13FC CBZ X8, 0x38F1424
	0x038F1400 MOV X0, X19
	0x038F1404 MOV X1, X22
	0x038F1408 BL 0x38F2358
	0x038F140C MOV X0, X22
	0x038F1410 LDP X20, X19, [X31 + 0x30]
	0x038F1414 LDP X22, X21, [X31 + 0x20]
	0x038F1418 LDP X30, X23, [X31 + 0x10]
	0x038F141C LDP D9, D8, [X31], #0x40
	0x038F1420 RET
	0x038F1424 BL 0x1C16F20
	0x038F1428 LDR X8, [X0 + 0x10]
	0x038F142C CMP X8, 0x0
	0x038F1430 CSET W0, NE
	0x038F1434 RET
	0x038F1438 STR X30, [X31 - 0x20]!
	0x038F143C STP X20, X19, [X31 + 0x10]
	0x038F1440 ADRP X20, 0xAF0000
	0x038F1444 LDRB W8, [X20 + 0x744]
	0x038F1448 MOV X19, X0
	0x038F144C TBNZ X8, 0x0, 0x38F1464
	0x038F1450 ADRP X0, 0x85C000
	0x038F1454 LDR X0, [X0 + 0x858]
	0x038F1458 BL 0x1C16CF4
	0x038F145C MOVZ W8, 0x1
	0x038F1460 STRB W8, [X20 + 0x744]
	0x038F1464 LDR X8, [X19 + 0x10]
	0x038F1468 CBZ X8, 0x38F148C
	0x038F146C ADRP X9, 0x85C000
	0x038F1470 LDR X9, [X9 + 0x858]
	0x038F1474 LDR X10, [X8]
	0x038F1478 LDR X9, [X9]
	0x038F147C LDRB W12, [X10 + 0x130]
	0x038F1480 LDRB W11, [X9 + 0x130]
	0x038F1484 CMP W12, W11
	0x038F1488 B.CS 0x38F1494
	0x038F148C MOV X0, X31
	0x038F1490 B 0x38F14A8
	0x038F1494 LDR X10, [X10 + 0xC8]
	0x038F1498 ADD X10, X10, X11, 0x3, LSL
	0x038F149C LDUR X10, [X10 - 0x8]
	0x038F14A0 CMP X10, X9
	0x038F14A4 CSEL X0, X8, X31, EQ
	0x038F14A8 LDP X20, X19, [X31 + 0x10]
	0x038F14AC LDR X30, [X31], #0x20
	0x038F14B0 RET
	0x038F14B4 STP X30, X21, [X31 - 0x20]!
	0x038F14B8 STP X20, X19, [X31 + 0x10]
	0x038F14BC ADRP X21, 0xAF0000
	0x038F14C0 LDRB W8, [X21 + 0x73B]
	0x038F14C4 MOV X19, X1
	0x038F14C8 MOV X20, X0
	0x038F14CC TBNZ X8, 0x0, 0x38F14E4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAF1000
	010 Move X20, 0x85D000
	011 Move W8, [X21+1808]
	012 Move X20, [X20+1968]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x85D000
	019 Move X0, [X0+1968]
	020 Call 0x1C17CF4
	021 Move X0, 0x803000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1808], W8
	026 Move X2, [X20]
	027 Add X19, X19, 16
	028 Move X0, X19
	029 Move W1, W31
	030 Call 0x2D2064C, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X2, [X20]
	034 Move V8, [X0+24]
	035 Move W1, 1
	036 Move X0, X19
	037 Call 0x2D2064C, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move X2, [X20]
	041 Move V9, [X0+24]
	042 Move W1, 2
	043 Move X0, X19
	044 Call 0x2D2064C, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {78}
	047 Move X2, [X20]
	048 Move V10, [X0+32]
	049 Move W1, 1
	050 Move X0, X19
	051 Call 0x2D2064C, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {78}
	054 Move X8, 0x803000
	055 Move X8, [X8+1448]
	056 Move V11, [X0+32]
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Subtract D0, D10, D11
	064 Subtract D1, D8, D9
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Move D9, [X31+16]
	070 Move D8, [X31+24]
	071 Multiply D0, D1, D0
	072 Move D1, 0.5
	073 Multiply D0, D0, D1
	074 NotImplemented "Instruction FABS not yet implemented."
	075 Move D11, [X31+64]
	076 Move D10, [X31+72]
	077 Return V0
	078 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint Centroid()

Disassembly:
	0x038F14D0 ADRP X0, 0x85C000
	0x038F14D4 LDR X0, [X0 + 0x860]
	0x038F14D8 BL 0x1C16CF4
	0x038F14DC MOVZ W8, 0x1
	0x038F14E0 STRB W8, [X21 + 0x73B]
	0x038F14E4 LDR X8, [X20 + 0x10]
	0x038F14E8 STR X19, [X20 + 0x38]
	0x038F14EC CBZ X8, 0x38F14FC
	0x038F14F0 LDP X20, X19, [X31 + 0x10]
	0x038F14F4 LDP X30, X21, [X31], #0x20
	0x038F14F8 RET
	0x038F14FC BL 0x1C16F20
	0x038F1500 STP X30, X21, [X31 - 0x20]!
	0x038F1504 STP X20, X19, [X31 + 0x10]
	0x038F1508 CBZ X0, 0x38F15C0
	0x038F150C LDR X8, [X0 + 0x68]
	0x038F1510 MOV X19, X0
	0x038F1514 CBZ X8, 0x38F15C4
	0x038F1518 MOV X21, X1
	0x038F151C STR X1, [X8 + 0x10]
	0x038F1520 CBZ X1, 0x38F15C8
	0x038F1524 LDR X9, [X21 + 0x10]
	0x038F1528 CBZ X9, 0x38F15CC
	0x038F152C LDR X10, [X21 + 0x18]
	0x038F1530 CBZ X10, 0x38F15D0
	0x038F1534 LDR V0, [X9 + 0x18]
	0x038F1538 LDR V1, [X10 + 0x18]
	0x038F153C MOV X20, X2
	0x038F1540 FCMP D0, D1
	0x038F1544 CSET W9, GT
	0x038F1548 STRB W9, [X8 + 0x18]
	0x038F154C LDR X8, [X19]
	0x038F1550 LDP X9, X1, [X8 + 0x1B8]
	0x038F1554 MOV X0, X19
	0x038F1558 BLR X9
	0x038F155C TBZ X0, 0x0, 0x38F157C
	0x038F1560 MOV X0, X19
	0x038F1564 BL 0x38F1438
	0x038F1568 CBZ X20, 0x38F15D8
	0x038F156C CBZ X0, 0x38F15DC
	0x038F1570 LDR X1, [X20 + 0x30]
	0x038F1574 BL 0x38F26BC
	0x038F1578 B 0x38F1580
	0x038F157C CBZ X20, 0x38F15D4
	0x038F1580 LDR X0, [X20 + 0x30]
	0x038F1584 LDP X1, X2, [X21 + 0x10]
	0x038F1588 BL 0x38F2708
	0x038F158C TBNZ X0, 0x0, 0x38F15B4
	0x038F1590 MOV X0, X19
	0x038F1594 MOV X1, X21
	0x038F1598 MOV X2, X20
	0x038F159C BL 0x38F27C8
	0x038F15A0 LDP X1, X2, [X21 + 0x10]
	0x038F15A4 LDR X3, [X20 + 0x30]
	0x038F15A8 MOV X0, X19
	0x038F15AC MOV X4, X2
	0x038F15B0 BL 0x38F27F4
	0x038F15B4 LDP X20, X19, [X31 + 0x10]
	0x038F15B8 LDP X30, X21, [X31], #0x20
	0x038F15BC RET
	0x038F15C0 BL 0x1C16F20
	0x038F15C4 BL 0x1C16F20
	0x038F15C8 BL 0x1C16F20
	0x038F15CC BL 0x1C16F20
	0x038F15D0 BL 0x1C16F20
	0x038F15D4 BL 0x1C16F20
	0x038F15D8 BL 0x1C16F20
	0x038F15DC BL 0x1C16F20
	0x038F15E0 B 0x38F1610
	0x038F15E4 B 0x38F1610
	0x038F15E8 B 0x38F1610
	0x038F15EC B 0x38F1610
	0x038F15F0 B 0x38F1610
	0x038F15F4 B 0x38F1610
	0x038F15F8 B 0x38F1610
	0x038F15FC B 0x38F1610
	0x038F1600 B 0x38F1610
	0x038F1604 B 0x38F1610
	0x038F1608 B 0x38F1610
	0x038F160C B 0x38F1610
	0x038F1610 MOV X19, X0

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xAF1000
	011 Move X20, 0x85D000
	012 Move W8, [X21+1809]
	013 Move X20, [X20+1968]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x85D000
	020 Move X0, [X0+1968]
	021 Call 0x1C17CF4
	022 Move X0, 0x85D000
	023 Move X0, [X0+2048]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1809], W8
	027 Move X2, [X20]
	028 Add X19, X19, 16
	029 Move X0, X19
	030 Move W1, W31
	031 Call 0x2D2064C, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {101}
	034 Move X2, [X20]
	035 Move V8, [X0+24]
	036 Move W1, 1
	037 Move X0, X19
	038 Call 0x2D2064C, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {101}
	041 Move X2, [X20]
	042 Move V9, [X0+24]
	043 Move W1, 2
	044 Move X0, X19
	045 Call 0x2D2064C, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {101}
	048 Move X2, [X20]
	049 Move V10, [X0+24]
	050 Move X0, X19
	051 Move W1, W31
	052 Call 0x2D2064C, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {101}
	055 Move X2, [X20]
	056 Move V11, [X0+32]
	057 Move W1, 1
	058 Move X0, X19
	059 Call 0x2D2064C, X0, X1
	060 Compare X0, 0
	061 JumpIfEqual {101}
	062 Move X2, [X20]
	063 Move V12, [X0+32]
	064 Move W1, 2
	065 Move X0, X19
	066 Call 0x2D2064C, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {101}
	069 Move X8, 0x85D000
	070 Move V0, [X0+32]
	071 Move X8, [X8+2048]
	072 Add D1, D11, D12
	073 Move D11, 2.0000000002328306
	074 Add D0, D1, D0
	075 Move X0, [X8]
	076 NotImplemented "Instruction FDIV not yet implemented."
	077 Call 0x1C17F10
	078 Add D0, D8, D9
	079 Add D0, D0, D10
	080 Move X1, X31
	081 Move X19, X0
	082 NotImplemented "Instruction FDIV not yet implemented."
	083 Call Object..ctor, X0
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W8, TEMP
	087 Move [X19+24], D8
	088 Move [X19+32], D12
	089 Move [X19+40], W8
	090 Move X0, X19
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X30, [X31+48]
	094 Move X21, [X31+56]
	095 Move D9, [X31+32]
	096 Move D8, [X31+40]
	097 Move D11, [X31+16]
	098 Move D10, [X31+24]
	099 Move V12, [X31+80]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Int32 EdgeIndex(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p1, UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p2)

Disassembly:
	0x038F0644 MOV X0, X19
	0x038F0648 LDP X30, X19, [X31], #0x10
	0x038F064C B 0x38EFFA4
	0x038F0650 STP X30, X19, [X31 - 0x10]!
	0x038F0654 ADD X19, X0, 0x40
	0x038F0658 BL 0x38EF414
	0x038F065C MOVZ W9, 0x5556
	0x038F0660 ADD W8, W0, 0x1
	0x038F0664 MOVK W9, 0x55550000
	0x038F0668 SMADDL X9, X8, X9, X31
	0x038F066C UBFM X10, X9, 0x3F, 0x3F
	0x038F0670 UBFM X9, X9, 0x20, 0x3F
	0x038F0674 ADD W9, W9, W10
	0x038F0678 ADD W9, W9, W9, 0x1, LSL
	0x038F067C SUB W1, W8, W9
	0x038F0680 MOV X0, X19
	0x038F0684 LDP X30, X19, [X31], #0x10
	0x038F0688 B 0x38EFFA4
	0x038F068C STP X30, X19, [X31 - 0x10]!
	0x038F0690 ADD X19, X0, 0x40
	0x038F0694 BL 0x38EF414
	0x038F0698 MOV W1, W0
	0x038F069C MOV X0, X19
	0x038F06A0 LDP X30, X19, [X31], #0x10
	0x038F06A4 B 0x38EFFA4
	0x038F06A8 STR X30, [X31 - 0x20]!
	0x038F06AC STP X20, X19, [X31 + 0x10]
	0x038F06B0 MOV W19, W2
	0x038F06B4 ADD X20, X0, 0x40
	0x038F06B8 BL 0x38EF414
	0x038F06BC MOVZ W9, 0x5556
	0x038F06C0 ADD W8, W0, 0x2
	0x038F06C4 MOVK W9, 0x55550000
	0x038F06C8 SMADDL X9, X8, X9, X31
	0x038F06CC UBFM X10, X9, 0x3F, 0x3F
	0x038F06D0 UBFM X9, X9, 0x20, 0x3F
	0x038F06D4 AND W2, W19, 0x1
	0x038F06D8 MOV X0, X20
	0x038F06DC LDP X20, X19, [X31 + 0x10]
	0x038F06E0 ADD W9, W9, W10
	0x038F06E4 ADD W9, W9, W9, 0x1, LSL
	0x038F06E8 SUB W1, W8, W9
	0x038F06EC LDR X30, [X31], #0x20
	0x038F06F0 B 0x38F0354
	0x038F06F4 STR X30, [X31 - 0x20]!
	0x038F06F8 STP X20, X19, [X31 + 0x10]
	0x038F06FC MOV W19, W2
	0x038F0700 ADD X20, X0, 0x40
	0x038F0704 BL 0x38EF414
	0x038F0708 MOVZ W9, 0x5556
	0x038F070C ADD W8, W0, 0x1
	0x038F0710 MOVK W9, 0x55550000
	0x038F0714 SMADDL X9, X8, X9, X31
	0x038F0718 UBFM X10, X9, 0x3F, 0x3F
	0x038F071C UBFM X9, X9, 0x20, 0x3F
	0x038F0720 AND W2, W19, 0x1
	0x038F0724 MOV X0, X20
	0x038F0728 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAF2000
	008 Move X22, 0x85E000
	009 Move W8, [X23+1810]
	010 Move X22, [X22+1912]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x85E000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1810], W8
	023 Move X2, [X22]
	024 Add X21, X21, 16
	025 Move X0, X21
	026 Move X1, X20
	027 Call 0x2D20788, X0, X1
	028 Move X2, [X22]
	029 Move W20, W0
	030 Move X0, X21
	031 Move X1, X19
	032 Call 0x2D20788, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Or W10, W11, W10
	044 NotImplemented "Instruction CSET not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Or W11, W12, W11
	049 Move TEMP, X11
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {54}
	053 Move W0, W31
	054 Or W8, W8, W9
	055 And W9, W8, W11
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move W0, 1
	061 And W31, W8, W10
	062 Move W8, 2
	063 NotImplemented "Instruction CSINV not yet implemented."
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0

Method: System.Boolean GetConstrainedEdgeCCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F1614 CMP W1, 0x1
	0x038F1618 B.NE 0x38F1678
	0x038F161C MOV X0, X19
	0x038F1620 BL 0x3EB1AD0
	0x038F1624 MOV X19, X0
	0x038F1628 ADRP X0, 0x808000
	0x038F162C LDR X0, [X0 + 0xCC0]
	0x038F1630 BL 0x1C16D08
	0x038F1634 LDR X8, [X19]
	0x038F1638 LDR X1, [X8]
	0x038F163C BL 0x1C17270
	0x038F1640 TBZ X0, 0x0, 0x38F1650
	0x038F1644 LDP X20, X19, [X31 + 0x10]
	0x038F1648 LDP X30, X21, [X31], #0x20
	0x038F164C B 0x3EB1AE0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 64
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W9, 0x5556
	006 Add W8, W0, 2
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X10, X9
	010 ShiftRight X10, 63
	011 And X10, X10, 0x7FFFFFFF
	012 Move X9, X9
	013 ShiftRight X9, 32
	014 And X9, X9, 0x7FFFFFFF
	015 Add W9, W9, W10
	016 Add W9, W9, W9
	017 Subtract W1, W8, W9
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call FixedBitArray3.get_Item, X0, X1
	022 Return X0

Method: System.Boolean GetConstrainedEdgeCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F1650 MOVZ W0, 0x8
	0x038F1654 BL 0x3EB1AF0
	0x038F1658 LDR X8, [X19]
	0x038F165C STR X8, [X0]
	0x038F1660 ADRP X1, 0x5C3000
	0x038F1664 ADD X1, X1, 0xE58
	0x038F1668 MOV X2, X31
	0x038F166C BL 0x3EB1B00
	0x038F1670 MOV X19, X0
	0x038F1674 BL 0x3EB1AE0
	0x038F1678 MOV X0, X19
	0x038F167C BL 0x1D2C690
	0x038F1680 BL 0x1990590
	0x038F1684 RET
	0x038F1688 STR X30, [X31 - 0x50]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 64
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W9, 0x5556
	006 Add W8, W0, 1
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X10, X9
	010 ShiftRight X10, 63
	011 And X10, X10, 0x7FFFFFFF
	012 Move X9, X9
	013 ShiftRight X9, 32
	014 And X9, X9, 0x7FFFFFFF
	015 Add W9, W9, W10
	016 Add W9, W9, W9
	017 Subtract W1, W8, W9
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call FixedBitArray3.get_Item, X0, X1
	022 Return X0

Method: System.Boolean GetConstrainedEdgeAcross(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F168C STP X26, X25, [X31 + 0x10]
	0x038F1690 STP X24, X23, [X31 + 0x20]
	0x038F1694 STP X22, X21, [X31 + 0x30]
	0x038F1698 STP X20, X19, [X31 + 0x40]
	0x038F169C ADRP X22, 0xAF0000
	0x038F16A0 LDRB W8, [X22 + 0x715]
	0x038F16A4 MOV X19, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 64
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W1, W0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call FixedBitArray3.get_Item, X0, X1
	010 Return X0

Method: System.Void SetConstrainedEdgeCCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F16A8 MOV X20, X1
	0x038F16AC MOV X21, X0
	0x038F16B0 TBNZ X8, 0x0, 0x38F16C8
	0x038F16B4 ADRP X0, 0x85C000
	0x038F16B8 LDR X0, [X0 + 0x850]
	0x038F16BC BL 0x1C16CF4
	0x038F16C0 MOVZ W8, 0x1
	0x038F16C4 STRB W8, [X22 + 0x715]
	0x038F16C8 CBZ X21, 0x38F17D8
	0x038F16CC LDR X8, [X21 + 0x48]
	0x038F16D0 CBZ X8, 0x38F17D8
	0x038F16D4 ADRP X26, 0x85C000
	0x038F16D8 LDR X26, [X26 + 0x850]
	0x038F16DC MOV X22, X20
	0x038F16E0 LDR X8, [X8 + 0x18]
	0x038F16E4 CMP X19, X8
	0x038F16E8 B.EQ 0x38F17DC
	0x038F16EC LDR X8, [X21]
	0x038F16F0 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 64
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 Move W9, 0x5556
	008 Add W8, W0, 2
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction SMADDL not yet implemented."
	011 Move X10, X9
	012 ShiftRight X10, 63
	013 And X10, X10, 0x7FFFFFFF
	014 Move X9, X9
	015 ShiftRight X9, 32
	016 And X9, X9, 0x7FFFFFFF
	017 And W2, W19, 1
	018 Move X0, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add W9, W9, W10
	022 Add W9, W9, W9
	023 Subtract W1, W8, W9
	024 Move X30, [X31+32]
	025 Call FixedBitArray3.set_Item, X0, X1, X2
	026 Return 

Method: System.Void SetConstrainedEdgeCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F16F4 LDP X9, X1, [X8 + 0x1B8]
	0x038F16F8 BLR X9
	0x038F16FC TBZ X0, 0x0, 0x38F1714
	0x038F1700 MOV X0, X21
	0x038F1704 BL 0x38F1438
	0x038F1708 CBZ X0, 0x38F17D8
	0x038F170C MOV X1, X19
	0x038F1710 BL 0x38F1ED0
	0x038F1714 CBZ X22, 0x38F17D8
	0x038F1718 CBZ X19, 0x38F17D8
	0x038F171C LDR X8, [X19 + 0x10]
	0x038F1720 CBZ X8, 0x38F17D8
	0x038F1724 LDR X0, [X26]
	0x038F1728 LDR X25, [X22 + 0x28]
	0x038F172C LDR X23, [X19 + 0x28]
	0x038F1730 LDR X24, [X8 + 0x28]
	0x038F1734 LDR W9, [X0 + 0xE0]
	0x038F1738 CBNZ W9, 0x38F1740
	0x038F173C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 64
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 Move W9, 0x5556
	008 Add W8, W0, 1
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction SMADDL not yet implemented."
	011 Move X10, X9
	012 ShiftRight X10, 63
	013 And X10, X10, 0x7FFFFFFF
	014 Move X9, X9
	015 ShiftRight X9, 32
	016 And X9, X9, 0x7FFFFFFF
	017 And W2, W19, 1
	018 Move X0, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add W9, W9, W10
	022 Add W9, W9, W9
	023 Subtract W1, W8, W9
	024 Move X30, [X31+32]
	025 Call FixedBitArray3.set_Item, X0, X1, X2
	026 Return 

Method: System.Void SetConstrainedEdgeAcross(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F1740 MOV X0, X25
	0x038F1744 MOV X1, X23
	0x038F1748 MOV X2, X24
	0x038F174C BL 0x38F1F1C
	0x038F1750 CMP W0, 0x1
	0x038F1754 B.EQ 0x38F17C0
	0x038F1758 CMP X22, X20
	0x038F175C B.EQ 0x38F17B8
	0x038F1760 LDR X8, [X22 + 0x18]
	0x038F1764 CBZ X8, 0x38F17D8
	0x038F1768 LDR X0, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 64
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 And W2, W19, 1
	008 Move W1, W0
	009 Move X0, X20
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Call FixedBitArray3.set_Item, X0, X1, X2
	014 Return 

Method: System.Boolean GetDelaunayEdgeCCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F176C LDR X25, [X8 + 0x28]
	0x038F1770 LDR X23, [X22 + 0x28]
	0x038F1774 LDR X24, [X19 + 0x28]
	0x038F1778 LDR W8, [X0 + 0xE0]
	0x038F177C CBNZ W8, 0x38F1784
	0x038F1780 BL 0x1C16DFC
	0x038F1784 MOV X0, X25
	0x038F1788 MOV X1, X23
	0x038F178C MOV X2, X24
	0x038F1790 BL 0x38F1F1C
	0x038F1794 CMP W0, 0x1
	0x038F1798 B.NE 0x38F17B8
	0x038F179C MOV X0, X21
	0x038F17A0 MOV X1, X22
	0x038F17A4 BL 0x38F2004

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 67
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W9, 0x5556
	006 Add W8, W0, 2
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X10, X9
	010 ShiftRight X10, 63
	011 And X10, X10, 0x7FFFFFFF
	012 Move X9, X9
	013 ShiftRight X9, 32
	014 And X9, X9, 0x7FFFFFFF
	015 Add W9, W9, W10
	016 Add W9, W9, W9
	017 Subtract W1, W8, W9
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call FixedBitArray3.get_Item, X0, X1
	022 Return X0

Method: System.Boolean GetDelaunayEdgeCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F17A8 LDR X8, [X21 + 0x48]
	0x038F17AC LDR X22, [X22 + 0x18]
	0x038F17B0 CBNZ X8, 0x38F16E0
	0x038F17B4 B 0x38F17D8
	0x038F17B8 MOV X22, X19
	0x038F17BC B 0x38F17CC
	0x038F17C0 MOV X0, X21
	0x038F17C4 MOV X1, X19
	0x038F17C8 BL 0x38F2004
	0x038F17CC LDR X8, [X21 + 0x48]
	0x038F17D0 LDR X19, [X19 + 0x10]
	0x038F17D4 CBNZ X8, 0x38F16E0
	0x038F17D8 BL 0x1C16F20
	0x038F17DC LDP X20, X19, [X31 + 0x40]
	0x038F17E0 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 67
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W9, 0x5556
	006 Add W8, W0, 1
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction SMADDL not yet implemented."
	009 Move X10, X9
	010 ShiftRight X10, 63
	011 And X10, X10, 0x7FFFFFFF
	012 Move X9, X9
	013 ShiftRight X9, 32
	014 And X9, X9, 0x7FFFFFFF
	015 Add W9, W9, W10
	016 Add W9, W9, W9
	017 Subtract W1, W8, W9
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call FixedBitArray3.get_Item, X0, X1
	022 Return X0

Method: System.Boolean GetDelaunayEdgeAcross(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p)

Disassembly:
	0x038F17E4 LDP X24, X23, [X31 + 0x20]
	0x038F17E8 LDP X26, X25, [X31 + 0x10]
	0x038F17EC LDR X30, [X31], #0x50
	0x038F17F0 RET
	0x038F17F4 SUB X31, X31, 0xA0
	0x038F17F8 STP X29, X30, [X31 + 0x40]
	0x038F17FC STP X28, X27, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 67
	004 Call DelaunayTriangle.IndexOf, X0, X1
	005 Move W1, W0
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call FixedBitArray3.get_Item, X0, X1
	010 Return X0

Method: System.Void SetDelaunayEdgeCCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F1800 STP X26, X25, [X31 + 0x60]
	0x038F1804 STP X24, X23, [X31 + 0x70]
	0x038F1808 STP X22, X21, [X31 + 0x80]
	0x038F180C STP X20, X19, [X31 + 0x90]
	0x038F1810 ADRP X21, 0xAF0000
	0x038F1814 LDRB W8, [X21 + 0x72C]
	0x038F1818 MOV X25, X3
	0x038F181C MOV X19, X2
	0x038F1820 MOV X26, X1
	0x038F1824 MOV X20, X0
	0x038F1828 TBNZ X8, 0x0, 0x38F1840
	0x038F182C ADRP X0, 0x85C000
	0x038F1830 LDR X0, [X0 + 0x868]
	0x038F1834 BL 0x1C16CF4
	0x038F1838 MOVZ W8, 0x1
	0x038F183C STRB W8, [X21 + 0x72C]
	0x038F1840 CBZ X20, 0x38F1CA8
	0x038F1844 MOV X0, X20
	0x038F1848 MOV X1, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 67
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 Move W9, 0x5556
	008 Add W8, W0, 2
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction SMADDL not yet implemented."
	011 Move X10, X9
	012 ShiftRight X10, 63
	013 And X10, X10, 0x7FFFFFFF
	014 Move X9, X9
	015 ShiftRight X9, 32
	016 And X9, X9, 0x7FFFFFFF
	017 And W2, W19, 1
	018 Move X0, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add W9, W9, W10
	022 Add W9, W9, W9
	023 Subtract W1, W8, W9
	024 Move X30, [X31+32]
	025 Call FixedBitArray3.set_Item, X0, X1, X2
	026 Return 

Method: System.Void SetDelaunayEdgeCW(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F184C BL 0x38EFA28
	0x038F1850 STR X0, [X31 + 0x30]
	0x038F1854 MOV X0, X20
	0x038F1858 MOV X1, X26
	0x038F185C BL 0x38EF988
	0x038F1860 STR X0, [X31 + 0x38]
	0x038F1864 CBZ X19, 0x38F1CA8
	0x038F1868 MOV X0, X19
	0x038F186C MOV X1, X25
	0x038F1870 BL 0x38EFA28
	0x038F1874 STR X0, [X31 + 0x20]
	0x038F1878 MOV X0, X19
	0x038F187C MOV X1, X25
	0x038F1880 BL 0x38EF988
	0x038F1884 STR X0, [X31 + 0x28]
	0x038F1888 MOV X0, X20
	0x038F188C MOV X1, X26
	0x038F1890 ADD X21, X20, 0x40
	0x038F1894 BL 0x38EF414

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 67
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 Move W9, 0x5556
	008 Add W8, W0, 1
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction SMADDL not yet implemented."
	011 Move X10, X9
	012 ShiftRight X10, 63
	013 And X10, X10, 0x7FFFFFFF
	014 Move X9, X9
	015 ShiftRight X9, 32
	016 And X9, X9, 0x7FFFFFFF
	017 And W2, W19, 1
	018 Move X0, X20
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Add W9, W9, W10
	022 Add W9, W9, W9
	023 Subtract W1, W8, W9
	024 Move X30, [X31+32]
	025 Call FixedBitArray3.set_Item, X0, X1, X2
	026 Return 

Method: System.Void SetDelaunayEdgeAcross(UnityEngine.ProBuilder.Poly2Tri.TriangulationPoint p, System.Boolean ce)

Disassembly:
	0x038F1898 MOVZ W28, 0x5556
	0x038F189C ADD W8, W0, 0x2
	0x038F18A0 MOVK W28, 0x55550000
	0x038F18A4 SMADDL X9, X8, X28, X31
	0x038F18A8 UBFM X10, X9, 0x3F, 0x3F
	0x038F18AC UBFM X9, X9, 0x20, 0x3F
	0x038F18B0 ADD W9, W9, W10
	0x038F18B4 ADD W9, W9, W9, 0x1, LSL
	0x038F18B8 SUB W1, W8, W9
	0x038F18BC MOV X0, X21
	0x038F18C0 STR X21, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Add X20, X0, 67
	006 Call DelaunayTriangle.IndexOf, X0, X1
	007 And W2, W19, 1
	008 Move W1, W0
	009 Move X0, X20
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Call FixedBitArray3.set_Item, X0, X1, X2
	014 Return 

