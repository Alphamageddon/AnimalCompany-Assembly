Type: UnityEngine.ProBuilder.Poly2Tri.FixedArray3`1/<Enumerate>d__10

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0238C55C LDR X8, [X20]
	0x0238C560 SUB X9, X29, 0xC
	0x0238C564 SUB X3, X29, 0x28
	0x0238C568 MOV X2, X23
	0x0238C56C LDR X8, [X8 + 0xC0]
	0x0238C570 MOV X4, X22
	0x0238C574 LDR X1, [X8 + 0x20]
	0x0238C578 LDR W8, [X0]
	0x0238C57C LDR X0, [X1]
	0x0238C580 STUR W8, [X29 - 0xC]
	0x0238C584 STP X24, X9, [X29 - 0x28]
	0x0238C588 STUR X22, [X29 - 0x18]
	0x0238C58C LDR X8, [X1 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0238C590 BLR X8

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0238C594 LDR X8, [X20]
	0x0238C598 MOV X0, X19
	0x0238C59C MOV X2, X22
	0x0238C5A0 MOV W3, W21
	0x0238C5A4 LDR X8, [X8 + 0xC0]
	0x0238C5A8 LDR X8, [X8]
	0x0238C5AC LDR X8, [X8 + 0x80]
	0x0238C5B0 ADD X1, X8, 0x20
	0x0238C5B4 BL 0x1C16D1C
	0x0238C5B8 LDR X8, [X20]
	0x0238C5BC MOVZ W1, 0x4
	0x0238C5C0 LDR X8, [X8 + 0xC0]
	0x0238C5C4 LDR X8, [X8]
	0x0238C5C8 LDR X20, [X8 + 0x80]
	0x0238C5CC MOV X0, X20
	0x0238C5D0 BL 0x1C16D14
	0x0238C5D4 MOV X0, X19
	0x0238C5D8 MOV X1, X20
	0x0238C5DC BL 0x1C16D18
	0x0238C5E0 MOVZ W8, 0x3
	0x0238C5E4 B 0x238C8B4
	0x0238C5E8 ADD X1, X8, 0x80
	0x0238C5EC MOV X0, X19
	0x0238C5F0 BL 0x1C16D18
	0x0238C5F4 LDR W26, [X0]
	0x0238C5F8 LDR X8, [X20]
	0x0238C5FC MOV X0, X19
	0x0238C600 LDR X8, [X8 + 0xC0]
	0x0238C604 LDR X8, [X8]
	0x0238C608 LDR X8, [X8 + 0x80]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W8, 0
	007 JumpIfNotEqual {30}
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W9, TEMP
	011 Move [X19+16], W9
	012 Move [X19+88], W31
	013 Move W8, [X19+88]
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W9, TEMP
	017 Move [X19+16], W9
	018 Add W8, W8, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X19+88], W8
	021 Move X9, [X1+32]
	022 Add X0, X19, 40
	023 Move W1, W8
	024 Move X9, [X9+192]
	025 Move X2, [X9+16]
	026 Call 0x2D2064C, X0, X1
	027 Move [X19+24], X0
	028 Move W0, 1
	029 Move [X19+16], W0
	030 Move W0, W31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0

Method: T System.Collections.Generic.IEnumerator<T>.get_Current()

Disassembly:
	0x0238C60C ADD X1, X8, 0x40
	0x0238C610 BL 0x1C16D18

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0238C614 LDR X0, [X0]
	0x0238C618 CBZ X0, 0x238C8BC
	0x0238C61C LDR X8, [X20]
	0x0238C620 LDR X8, [X8 + 0xC0]
	0x0238C624 LDR X1, [X8 + 0x18]
	0x0238C628 LDR X8, [X1]
	0x0238C62C BLR X8
	0x0238C630 CBZ X19, 0x238C8BC
	0x0238C634 LDR X8, [X20]
	0x0238C638 SUB W26, W26, W0
	0x0238C63C MOVZ W1, 0x4
	0x0238C640 LDR X8, [X8 + 0xC0]
	0x0238C644 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D68000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0238C648 LDR X8, [X8 + 0x80]
	0x0238C64C ADD X24, X8, 0xE0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x0238C650 MOV X0, X24
	0x0238C654 BL 0x1C16D14
	0x0238C658 MOV X0, X19
	0x0238C65C MOV X1, X24
	0x0238C660 BL 0x1C16D18
	0x0238C664 STR W26, [X0]
	0x0238C668 LDR X8, [X20]
	0x0238C66C MOV X0, X19
	0x0238C670 LDR X8, [X8 + 0xC0]
	0x0238C674 LDR X8, [X8]
	0x0238C678 LDR X8, [X8 + 0x80]
	0x0238C67C ADD X1, X8, 0xA0
	0x0238C680 BL 0x1C16D18
	0x0238C684 LDR X8, [X20]
	0x0238C688 LDR W24, [X0]
	0x0238C68C MOV X0, X19
	0x0238C690 LDR X8, [X8 + 0xC0]
	0x0238C694 LDR X8, [X8]
	0x0238C698 LDR X8, [X8 + 0x80]
	0x0238C69C ADD X1, X8, 0xE0
	0x0238C6A0 BL 0x1C16D18
	0x0238C6A4 LDR W8, [X0]
	0x0238C6A8 CMP W24, W8
	0x0238C6AC B.GE 0x238C844
	0x0238C6B0 LDR X8, [X20]
	0x0238C6B4 MOV X0, X19
	0x0238C6B8 LDR X8, [X8 + 0xC0]
	0x0238C6BC LDR X8, [X8]
	0x0238C6C0 LDR X8, [X8 + 0x80]
	0x0238C6C4 ADD X1, X8, 0xA0
	0x0238C6C8 BL 0x1C16D18
	0x0238C6CC LDR X8, [X20]
	0x0238C6D0 LDR W26, [X0]
	0x0238C6D4 MOV X0, X19
	0x0238C6D8 LDR X8, [X8 + 0xC0]
	0x0238C6DC LDR X8, [X8]
	0x0238C6E0 LDR X8, [X8 + 0x80]
	0x0238C6E4 ADD X1, X8, 0x40
	0x0238C6E8 BL 0x1C16D18
	0x0238C6EC LDR X8, [X0]
	0x0238C6F0 CBZ X8, 0x238C8BC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move W8, [X0+16]
	007 Move X19, X0
	008 Move X20, X1
	009 Add W31, W8, 2
	010 Move W21, [X19+32]
	011 Move X0, X31
	012 Call Environment.get_CurrentManagedThreadId
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X19+16], W31
	015 Move X20, X19
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X20, X0
	028 Call Object..ctor, X0
	029 Move X0, X31
	030 Move [X20+16], W31
	031 Call Environment.get_CurrentManagedThreadId
	032 Move [X20+32], W0
	033 Move V0, [X19+4]
	034 Move X8, [X19+80]
	035 Move X0, X20
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Move [X31], V0
	039 Move [X31+16], X8
	040 Move [X20+56], X8
	041 Move [X20+40], V0
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Add X31, X31, 64
	045 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0238C6F4 LDR X9, [X20]
	0x0238C6F8 LDR W8, [X8 + 0x18]
	0x0238C6FC MOVZ W1, 0x4
	0x0238C700 LDR X9, [X9 + 0xC0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Call 0x238C650, X0
	005 Return X0

