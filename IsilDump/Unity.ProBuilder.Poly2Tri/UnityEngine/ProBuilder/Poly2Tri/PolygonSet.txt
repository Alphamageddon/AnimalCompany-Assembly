Type: UnityEngine.ProBuilder.Poly2Tri.PolygonSet

Method: System.Void .ctor()

Disassembly:
	0x038F0138 STP X26, X25, [X31 + 0x60]
	0x038F013C STP X24, X23, [X31 + 0x70]
	0x038F0140 STP X22, X21, [X31 + 0x80]
	0x038F0144 STP X20, X19, [X31 + 0x90]
	0x038F0148 ADRP X21, 0xAF1000
	0x038F014C LDRB W8, [X21 + 0x70F]
	0x038F0150 MOV X20, X1
	0x038F0154 MOV X19, X0
	0x038F0158 TBNZ X8, 0x0, 0x38F01A0
	0x038F015C ADRP X0, 0x85D000
	0x038F0160 LDR X0, [X0 + 0x7D8]
	0x038F0164 BL 0x1C16CF4
	0x038F0168 ADRP X0, 0x85D000
	0x038F016C LDR X0, [X0 + 0x7E0]
	0x038F0170 BL 0x1C16CF4
	0x038F0174 ADRP X0, 0x85D000
	0x038F0178 LDR X0, [X0 + 0x7E8]
	0x038F017C BL 0x1C16CF4
	0x038F0180 ADRP X0, 0x85D000
	0x038F0184 LDR X0, [X0 + 0x7B0]
	0x038F0188 BL 0x1C16CF4
	0x038F018C ADRP X0, 0x85D000
	0x038F0190 LDR X0, [X0 + 0x7F0]
	0x038F0194 BL 0x1C16CF4
	0x038F0198 MOVZ W8, 0x1
	0x038F019C STRB W8, [X21 + 0x70F]
	0x038F01A0 STP X31, X31, [X31 + 0x20]
	0x038F01A4 STR X31, [X31 + 0x30]
	0x038F01A8 CBZ X20, 0x38F02C0
	0x038F01AC ADRP X8, 0x85D000
	0x038F01B0 LDR X8, [X8 + 0x7F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAF2000
	007 Move X22, 0x85E000
	008 Move X20, 0x85E000
	009 Move W8, [X21+1789]
	010 Move X22, [X22+1736]
	011 Move X20, [X20+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x85E000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x85E000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1789], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

Method: System.Void .ctor(UnityEngine.ProBuilder.Poly2Tri.Polygon poly)

Disassembly:
	0x038F01B4 ADRP X26, 0x85D000
	0x038F01B8 MOV X0, X20
	0x038F01BC LDR X1, [X8]
	0x038F01C0 LDR X26, [X26 + 0x7B0]
	0x038F01C4 ADD X8, X31, 0x8
	0x038F01C8 BL 0x301CB58
	0x038F01CC LDUR V0, [X31 + 0x8]
	0x038F01D0 LDR X8, [X31 + 0x18]
	0x038F01D4 MOVZ W27, 0xAAAB
	0x038F01D8 MOVK W27, 0xAAAA0000
	0x038F01DC MOVZ W28, 0x2
	0x038F01E0 STR V0, [X31 + 0x2]
	0x038F01E4 STR X8, [X31 + 0x30]
	0x038F01E8 ADRP X8, 0x85D000
	0x038F01EC LDR X8, [X8 + 0x7E0]
	0x038F01F0 LDR X1, [X8]
	0x038F01F4 ADD X0, X31, 0x20
	0x038F01F8 BL 0x2BC4350
	0x038F01FC TBZ X0, 0x0, 0x38F0288
	0x038F0200 LDR X29, [X31 + 0x30]
	0x038F0204 MOV W22, W31
	0x038F0208 MOVZ W24, 0x2
	0x038F020C ADD X20, X29, 0x40
	0x038F0210 ADD X21, X29, 0x10
	0x038F0214 CBZ X29, 0x38F02BC
	0x038F0218 MOV X0, X20
	0x038F021C MOV W1, W22
	0x038F0220 BL 0x38EFFA4
	0x038F0224 ADD W25, W22, 0x1
	0x038F0228 TBZ X0, 0x0, 0x38F0274
	0x038F022C LDR X2, [X26]
	0x038F0230 CMP W22, 0x2
	0x038F0234 CSEL W1, W31, W25, EQ
	0x038F0238 MOV X0, X21
	0x038F023C BL 0x2D1F64C
	0x038F0240 UMADDL X8, X24, X27, X31
	0x038F0244 UBFM X8, X8, 0x21, 0x3F
	0x038F0248 LDR X2, [X26]
	0x038F024C ADD W8, W8, W8, 0x1, LSL
	0x038F0250 SUB W8, W28, W8
	0x038F0254 MOV X23, X0
	0x038F0258 ADD W1, W22, W8
	0x038F025C MOV X0, X21
	0x038F0260 BL 0x2D1F64C
	0x038F0264 MOV X2, X0
	0x038F0268 MOV X0, X19
	0x038F026C MOV X1, X23
	0x038F0270 BL 0x38F0008
	0x038F0274 CMP W25, 0x3
	0x038F0278 ADD W24, W24, 0x1
	0x038F027C MOV W22, W25
	0x038F0280 B.NE 0x38F0214
	0x038F0284 B 0x38F01E8
	0x038F0288 ADRP X8, 0x85D000
	0x038F028C LDR X8, [X8 + 0x7D8]
	0x038F0290 ADD X0, X31, 0x20
	0x038F0294 LDR X1, [X8]
	0x038F0298 BL 0x2BC434C
	0x038F029C LDP X20, X19, [X31 + 0x90]
	0x038F02A0 LDP X22, X21, [X31 + 0x80]
	0x038F02A4 LDP X24, X23, [X31 + 0x70]
	0x038F02A8 LDP X26, X25, [X31 + 0x60]
	0x038F02AC LDP X28, X27, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAF2000
	008 Move X23, 0x85E000
	009 Move X21, 0x85E000
	010 Move W8, [X22+1790]
	011 Move X23, [X23+1736]
	012 Move X21, [X21+1728]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x85E000
	020 Move X0, [X0+1720]
	021 Call 0x1C17CF4
	022 Move X0, 0x85E000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x85E000
	026 Move X0, [X0+1736]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1790], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, [X21]
	033 Move X21, X0
	034 Call List`1<Object>..ctor, X0
	035 Move X0, X20
	036 Move X1, X31
	037 Move [X20+16], X21
	038 Call Object..ctor, X0
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {77}
	042 Move X9, 0x85E000
	043 Move X9, [X9+1720]
	044 Move W10, [X0+28]
	045 Move X8, [X0+16]
	046 Move X9, [X9]
	047 Add W10, W10, 1
	048 Move [X0+28], W10
	049 Compare X8, 0
	050 JumpIfEqual {77}
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Move W11, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W9, W10, 1
	055 Add X8, X8, X10
	056 Move [X0+24], W9
	057 Move [X8+32], X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return 
	065 Move X8, [X9+32]
	066 Move X1, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X8, [X8+192]
	072 Move X2, [X8+112]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Call List`1<Object>.AddWithResize, X0, X1
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Add(UnityEngine.ProBuilder.Poly2Tri.Polygon p)

Disassembly:
	0x038F02B0 LDP X29, X30, [X31 + 0x40]
	0x038F02B4 ADD X31, X31, 0xA0
	0x038F02B8 RET
	0x038F02BC BL 0x1C16F20
	0x038F02C0 BL 0x1C16F20
	0x038F02C4 B 0x38F02D4
	0x038F02C8 B 0x38F02D4
	0x038F02CC B 0x38F02D4
	0x038F02D0 B 0x38F02D4
	0x038F02D4 MOV X19, X0
	0x038F02D8 CMP W1, 0x1
	0x038F02DC B.NE 0x38F0310
	0x038F02E0 MOV X0, X19
	0x038F02E4 BL 0x3EB1AD0
	0x038F02E8 LDR X20, [X0]
	0x038F02EC BL 0x3EB1AE0
	0x038F02F0 ADRP X8, 0x85D000
	0x038F02F4 LDR X8, [X8 + 0x7D8]
	0x038F02F8 ADD X0, X31, 0x20
	0x038F02FC LDR X1, [X8]
	0x038F0300 BL 0x2BC434C
	0x038F0304 CBZ X20, 0x38F029C
	0x038F0308 MOV X0, X20
	0x038F030C BL 0x1C16F18
	0x038F0310 MOV X20, X31
	0x038F0314 B 0x38F031C
	0x038F0318 MOV X19, X0
	0x038F031C ADRP X8, 0x85D000
	0x038F0320 LDR X8, [X8 + 0x7D8]
	0x038F0324 LDR X1, [X8]
	0x038F0328 ADD X0, X31, 0x20
	0x038F032C BL 0x2BC434C
	0x038F0330 CBNZ X20, 0x38F033C
	0x038F0334 MOV X0, X19
	0x038F0338 BL 0x1D2C690
	0x038F033C MOV X0, X20
	0x038F0340 BL 0x1C16F18
	0x038F0344 BL 0x1990590
	0x038F0348 ADD X0, X0, 0x40
	0x038F034C MOVZ W2, 0x1
	0x038F0350 B 0x38F0354

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAF2000
	006 Move W8, [X21+1791]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x85E000
	014 Move X0, [X0+1720]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1791], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x85E000
	022 Move X9, [X9+1720]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Poly2Tri.Polygon> get_Polygons()

Disassembly:
	0x038F0354 STP X30, X19, [X31 - 0x10]!
	0x038F0358 CMP W1, 0x2

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

