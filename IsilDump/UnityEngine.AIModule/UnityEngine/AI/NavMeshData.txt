Type: UnityEngine.AI.NavMeshData

Method: System.Void .ctor(System.Int32 agentTypeID)

Disassembly:
	0x03BE2008 ADRP X0, 0x511000
	0x03BE200C LDR X0, [X0 + 0xA28]
	0x03BE2010 BL 0x1C16CF4
	0x03BE2014 ADRP X0, 0x511000
	0x03BE2018 LDR X0, [X0 + 0x598]
	0x03BE201C BL 0x1C16CF4
	0x03BE2020 ADRP X0, 0x57C000
	0x03BE2024 LDR X0, [X0 + 0x218]
	0x03BE2028 BL 0x1C16CF4
	0x03BE202C MOVZ W8, 0x1
	0x03BE2030 STRB W8, [X21 + 0xD9]
	0x03BE2034 LDR X0, [X22]
	0x03BE2038 LDR W8, [X0 + 0xE0]
	0x03BE203C CBNZ W8, 0x3BE2044
	0x03BE2040 BL 0x1C16DFC
	0x03BE2044 MOV X0, X20
	0x03BE2048 MOV X1, X31
	0x03BE204C MOV X2, X31
	0x03BE2050 BL 0x3C354F8
	0x03BE2054 TBZ X0, 0x0, 0x3BE2070
	0x03BE2058 CBZ X20, 0x3BE20F0
	0x03BE205C MOV X0, X20
	0x03BE2060 MOV X1, X31
	0x03BE2064 BL 0x3C385F8
	0x03BE2068 MOV W20, W0
	0x03BE206C B 0x3BE2074
	0x03BE2070 MOV W20, W31
	0x03BE2074 ADRP X21, 0x801000
	0x03BE2078 LDR X8, [X21 + 0xF8]
	0x03BE207C LDR W19, [X19]
	0x03BE2080 CBNZ X8, 0x3BE2098
	0x03BE2084 ADRP X0, 0xFFFFFFFFFCF1C000
	0x03BE2088 ADD X0, X0, 0x69B
	0x03BE208C BL 0x1C16CB8
	0x03BE2090 MOV X8, X0
	0x03BE2094 STR X0, [X21 + 0xF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x802000
	007 Move X22, 0x512000
	008 Move W8, [X21+184]
	009 Move X22, [X22+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x512000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+184], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X21, 0x802000
	030 Move X2, [X21+192]
	031 Compare X2, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51089408
	034 Add X0, X0, 132
	035 Call 0x1C17CB8
	036 Move X2, X0
	037 Move [X21+192], X0
	038 Move X0, X20
	039 Move W1, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X2

Method: System.Void Internal_Create(UnityEngine.AI.NavMeshData mono, System.Int32 agentTypeID)

Disassembly:
	0x03BE2B50 ADRP X0, 0xFFFFFFFFFCF16000
	0x03BE2B54 ADD X0, X0, 0xA84
	0x03BE2B58 BL 0x1C16CB8
	0x03BE2B5C STR X0, [X19 + 0x170]
	0x03BE2B60 LDP X30, X19, [X31], #0x10
	0x03BE2B64 BR X0
	0x03BE2B68 STR X30, [X31 - 0x20]!
	0x03BE2B6C STP X20, X19, [X31 + 0x10]
	0x03BE2B70 ADRP X20, 0x801000
	0x03BE2B74 LDR X1, [X20 + 0x178]
	0x03BE2B78 MOV W19, W0
	0x03BE2B7C CBNZ X1, 0x3BE2B94
	0x03BE2B80 ADRP X0, 0xFFFFFFFFFCF33000
	0x03BE2B84 ADD X0, X0, 0xF74
	0x03BE2B88 BL 0x1C16CB8
	0x03BE2B8C MOV X1, X0
	0x03BE2B90 STR X0, [X20 + 0x178]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x802000
	006 Move X2, [X21+192]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51089408
	012 Add X0, X0, 132
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+192], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_position(UnityEngine.Vector3 value)

Disassembly:
	0x03BE2098 MOV W0, W19
	0x03BE209C MOV W1, W20
	0x03BE20A0 BLR X8
	0x03BE20A4 TBZ X0, 0x0, 0x3BE20B8
	0x03BE20A8 LDP X20, X19, [X31 + 0x20]
	0x03BE20AC LDP X22, X21, [X31 + 0x10]
	0x03BE20B0 LDR X30, [X31], #0x30
	0x03BE20B4 RET
	0x03BE20B8 ADRP X8, 0x511000
	0x03BE20BC LDR X8, [X8 + 0xA28]
	0x03BE20C0 LDR X0, [X8]
	0x03BE20C4 LDR W8, [X0 + 0xE0]
	0x03BE20C8 CBNZ W8, 0x3BE20D0
	0x03BE20CC BL 0x1C16DFC
	0x03BE20D0 ADRP X8, 0x57C000
	0x03BE20D4 LDR X8, [X8 + 0x218]
	0x03BE20D8 LDP X20, X19, [X31 + 0x20]
	0x03BE20DC LDP X22, X21, [X31 + 0x10]
	0x03BE20E0 MOV X1, X31
	0x03BE20E4 LDR X0, [X8]
	0x03BE20E8 LDR X30, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x802000
	006 Move X8, [X20+200]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51204096
	014 Add X0, X0, 1535
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X20+200], X0
	018 Add X1, X31, 0
	019 Move X0, X19
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void set_rotation(UnityEngine.Quaternion value)

Disassembly:
	0x03BE20EC B 0x3C0649C
	0x03BE20F0 BL 0x1C16F20
	0x03BE20F4 STP X30, X21, [X31 - 0x20]!
	0x03BE20F8 STP X20, X19, [X31 + 0x10]
	0x03BE20FC ADRP X21, 0x801000
	0x03BE2100 LDR X2, [X21 + 0xF8]
	0x03BE2104 MOV W19, W1
	0x03BE2108 MOV W20, W0
	0x03BE210C CBNZ X2, 0x3BE2124
	0x03BE2110 ADRP X0, 0xFFFFFFFFFCF1C000
	0x03BE2114 ADD X0, X0, 0x69B
	0x03BE2118 BL 0x1C16CB8
	0x03BE211C MOV X2, X0
	0x03BE2120 STR X0, [X21 + 0xF8]
	0x03BE2124 MOV W0, W20
	0x03BE2128 MOV W1, W19
	0x03BE212C LDP X20, X19, [X31 + 0x10]
	0x03BE2130 LDP X30, X21, [X31], #0x20
	0x03BE2134 BR X2
	0x03BE2138 STR X30, [X31 - 0x20]!
	0x03BE213C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x802000
	006 Move X8, [X20+208]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51154944
	015 Add X0, X0, 232
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+208], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Void set_position_Injected(ref UnityEngine.Vector3 value)

Disassembly:
	0x03BE2B94 AND W0, W19, 0x1
	0x03BE2B98 LDP X20, X19, [X31 + 0x10]
	0x03BE2B9C LDR X30, [X31], #0x20
	0x03BE2BA0 BR X1
	0x03BE2BA4 STP X30, X21, [X31 - 0x20]!
	0x03BE2BA8 STP X20, X19, [X31 + 0x10]
	0x03BE2BAC ADRP X20, 0x801000
	0x03BE2BB0 ADRP X21, 0x511000
	0x03BE2BB4 LDRB W8, [X20 + 0x180]
	0x03BE2BB8 LDR X21, [X21 + 0x988]
	0x03BE2BBC MOV X19, X0
	0x03BE2BC0 TBNZ X8, 0x0, 0x3BE2BD8
	0x03BE2BC4 ADRP X0, 0x511000
	0x03BE2BC8 LDR X0, [X0 + 0x988]
	0x03BE2BCC BL 0x1C16CF4
	0x03BE2BD0 MOVZ W8, 0x1
	0x03BE2BD4 STRB W8, [X20 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x802000
	006 Move X2, [X21+200]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51204096
	012 Add X0, X0, 1535
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+200], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_rotation_Injected(ref UnityEngine.Quaternion value)

Disassembly:
	0x03BE2BD8 LDR X1, [X21]
	0x03BE2BDC MOV X0, X19
	0x03BE2BE0 LDP X20, X19, [X31 + 0x10]
	0x03BE2BE4 LDP X30, X21, [X31], #0x20
	0x03BE2BE8 B 0x3BE2BF0
	0x03BE2BEC B 0x3BE2BF0
	0x03BE2BF0 STR X30, [X31 - 0x30]!
	0x03BE2BF4 STP X22, X21, [X31 + 0x10]
	0x03BE2BF8 STP X20, X19, [X31 + 0x20]
	0x03BE2BFC ADRP X19, 0x801000
	0x03BE2C00 ADRP X22, 0x53A000
	0x03BE2C04 LDRB W8, [X19 + 0x799]
	0x03BE2C08 LDR X22, [X22 + 0x6A0]
	0x03BE2C0C MOV X20, X1
	0x03BE2C10 MOV X21, X0
	0x03BE2C14 TBNZ X8, 0x0, 0x3BE2C2C
	0x03BE2C18 ADRP X0, 0x53A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x802000
	006 Move X2, [X21+208]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51154944
	012 Add X0, X0, 232
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+208], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

