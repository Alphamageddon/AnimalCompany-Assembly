Type: System.Net.Http.HttpRequestMessage

Method: System.Void .ctor()

Disassembly:
	0x035FCED4 ADRP X25, 0xB3E000
	0x035FCED8 ADRP X22, 0xB3E000
	0x035FCEDC ADRP X23, 0xB3E000
	0x035FCEE0 LDRB W8, [X24 + 0x33D]
	0x035FCEE4 LDR X25, [X25 + 0x538]
	0x035FCEE8 LDR X22, [X22 + 0x540]
	0x035FCEEC LDR X23, [X23 + 0x548]
	0x035FCEF0 MOV X19, X2
	0x035FCEF4 MOV W20, W1
	0x035FCEF8 MOV X21, X0
	0x035FCEFC TBNZ X8, 0x0, 0x35FCF2C
	0x035FCF00 ADRP X0, 0xB3E000
	0x035FCF04 LDR X0, [X0 + 0x540]
	0x035FCF08 BL 0x1C16CF4
	0x035FCF0C ADRP X0, 0xB3E000
	0x035FCF10 LDR X0, [X0 + 0x548]
	0x035FCF14 BL 0x1C16CF4
	0x035FCF18 ADRP X0, 0xB3E000
	0x035FCF1C LDR X0, [X0 + 0x538]
	0x035FCF20 BL 0x1C16CF4
	0x035FCF24 MOVZ W8, 0x1
	0x035FCF28 STRB W8, [X24 + 0x33D]
	0x035FCF2C LDR X0, [X25]
	0x035FCF30 BL 0x1C16F10
	0x035FCF34 LDR X2, [X22]
	0x035FCF38 MOV X1, X31
	0x035FCF3C MOV X3, X31
	0x035FCF40 MOV X22, X0
	0x035FCF44 BL 0x2B47CB4
	0x035FCF48 LDR X4, [X23]
	0x035FCF4C MOV X0, X21
	0x035FCF50 MOV W1, W20
	0x035FCF54 MOV X2, X22
	0x035FCF58 MOV X3, X19
	0x035FCF5C LDP X20, X19, [X31 + 0x30]
	0x035FCF60 LDP X22, X21, [X31 + 0x20]
	0x035FCF64 LDP X24, X23, [X31 + 0x10]
	0x035FCF68 LDP X30, X25, [X31], #0x40
	0x035FCF6C B 0x21A2910

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDE5000
	006 Move X20, 0xAFB000
	007 Move W8, [X21+817]
	008 Move X20, [X20+376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xAFB000
	015 Move X0, [X0+376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+817], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0xDE5000
	028 Move W8, [X21+1013]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0xAFB000
	032 Move X0, [X0+376]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1013], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X8, [X8+8]
	044 Move [X19+24], X8
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Net.Http.HttpContent get_Content()

Disassembly:
	0x035FCF70 SUB X31, X31, 0x40
	0x035FCF74 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Content(System.Net.Http.HttpContent value)

Disassembly:
	0x035FCF78 STP X22, X21, [X31 + 0x20]
	0x035FCF7C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Net.Http.Headers.HttpRequestHeaders get_Headers()

Disassembly:
	0x035F7748 BL 0x1C16CF4
	0x035F774C ADRP X0, 0xAFF000
	0x035F7750 LDR X0, [X0 + 0x200]
	0x035F7754 BL 0x1C16CF4
	0x035F7758 ADRP X0, 0xAFE000
	0x035F775C LDR X0, [X0 + 0x570]
	0x035F7760 BL 0x1C16CF4
	0x035F7764 ADRP X0, 0xB43000
	0x035F7768 LDR X0, [X0 + 0x310]
	0x035F776C BL 0x1C16CF4
	0x035F7770 ADRP X0, 0xB04000
	0x035F7774 LDR X0, [X0 + 0xC80]
	0x035F7778 BL 0x1C16CF4
	0x035F777C ADRP X0, 0xAFC000
	0x035F7780 LDR X0, [X0 + 0x6C0]
	0x035F7784 BL 0x1C16CF4
	0x035F7788 ADRP X0, 0xB43000
	0x035F778C LDR X0, [X0 + 0x318]
	0x035F7790 BL 0x1C16CF4
	0x035F7794 ADRP X0, 0xB43000
	0x035F7798 LDR X0, [X0 + 0x150]
	0x035F779C BL 0x1C16CF4
	0x035F77A0 ADRP X0, 0xB43000
	0x035F77A4 LDR X0, [X0 + 0x320]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEA000
	005 Move W8, [X20+818]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB44000
	012 Move X0, [X0+408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+818], W8
	016 Move X20, [X19+16]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0xB44000
	020 Move X8, [X8+408]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call HttpRequestHeaders..ctor, X0
	025 Move [X19+16], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Net.Http.HttpMethod get_Method()

Disassembly:
	0x035FCFE0 B.HI 0x35FD060
	0x035FCFE4 CMP W8, 0x9

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Method(System.Net.Http.HttpMethod value)

Disassembly:
	0x035FCFE8 B.EQ 0x35FCFF4
	0x035FCFEC CMP W8, 0x20
	0x035FCFF0 B.NE 0x35FD0A4
	0x035FCFF4 LDR X0, [X19 + 0x10]
	0x035FCFF8 CBZ X0, 0x35FD260
	0x035FCFFC LDR W1, [X19 + 0x18]
	0x035FD000 LDR W8, [X0 + 0x10]
	0x035FD004 CMP W1, W8
	0x035FD008 B.NE 0x35FCFC4
	0x035FD00C MOVZ W1, 0x1
	0x035FD010 LDR W3, [X19 + 0x18]
	0x035FD014 ADD X0, X31, 0x0
	0x035FD018 MOV W2, W20
	0x035FD01C STR W31, [X31 + 0x8]
	0x035FD020 STR X31, [X31]
	0x035FD024 B 0x35FD040
	0x035FD028 STR W31, [X31 + 0x8]
	0x035FD02C STR X31, [X31]
	0x035FD030 ADD X0, X31, 0x0
	0x035FD034 MOV W1, W31
	0x035FD038 MOV W2, W31
	0x035FD03C MOV W3, W31
	0x035FD040 BL 0x35FD330
	0x035FD044 LDR X0, [X31]
	0x035FD048 LDR W1, [X31 + 0x8]
	0x035FD04C LDP X20, X19, [X31 + 0x30]
	0x035FD050 LDP X22, X21, [X31 + 0x20]
	0x035FD054 LDP X30, X23, [X31 + 0x10]
	0x035FD058 ADD X31, X31, 0x40
	0x035FD05C RET
	0x035FD060 CMP W8, 0x2F
	0x035FD064 B.HI 0x35FD124
	0x035FD068 AND W8, W21, 0xFFFF
	0x035FD06C SUB W8, W8, 0x28
	0x035FD070 CMP W8, 0x7
	0x035FD074 B.HI 0x35FD15C
	0x035FD078 ADRP X9, 0xFFFFFFFFFD59A000
	0x035FD07C ADD X9, X9, 0x2C0
	0x035FD080 ADR X10, 0xFFFFFFFFFFFFFF90
	0x035FD084 LDRB W11, [X9, X8, LSL]
	0x035FD088 ADD X10, X10, X11, 0x2, LSL
	0x035FD08C MOVZ W1, 0x8
	0x035FD090 BR X10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDE5000
	007 Move X22, 0xAFB000
	008 Move W8, [X21+819]
	009 Call 0x3EB2904
	010 Return 
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAFA000
	018 Move X0, [X0+376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+819], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Compare X19, 0
	028 JumpIfEqual {36}
	029 Move [X20+24], X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 Move X0, 0xAFC000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0xAF8000
	042 Move X0, [X0+1768]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0xB3E000
	049 Move X0, [X0+1232]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Uri get_RequestUri()

Disassembly:
	0x035FD094 LDR W8, [X19 + 0x18]
	0x035FD098 MOVZ W1, 0x9

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_RequestUri(System.Uri value)

Disassembly:
	0x035F7FE8 SUBS X9, X9, 0x1
	0x035F7FEC ADD X10, X10, 0x10
	0x035F7FF0 B.NE 0x35F7FDC
	0x035F7FF4 MOV X0, X23
	0x035F7FF8 MOV W2, W31
	0x035F7FFC BL 0x1C5C788
	0x035F8000 B 0x35F8010
	0x035F8004 LDRSW X9, [X10]
	0x035F8008 ADD X8, X8, X9, 0x4, LSL
	0x035F800C ADD X0, X8, 0x138
	0x035F8010 LDP X8, X1, [X0]
	0x035F8014 MOV X0, X23
	0x035F8018 BLR X8
	0x035F801C CBZ X24, 0x35F7DC8
	0x035F8020 B 0x35F85CC
	0x035F8024 BL 0x1C16F20
	0x035F8028 B 0x35F8784
	0x035F802C BL 0x1C16F20
	0x035F8030 B 0x35F8784
	0x035F8034 B 0x35F8044
	0x035F8038 B 0x35F8044
	0x035F803C B 0x35F8044
	0x035F8040 B 0x35F8044
	0x035F8044 CMP W1, 0x1
	0x035F8048 B.NE 0x35F857C
	0x035F804C BL 0x3EB1AD0
	0x035F8050 LDR X24, [X0]
	0x035F8054 BL 0x3EB1AE0
	0x035F8058 B 0x35F7FBC
	0x035F805C LDR X8, [X19 + 0x30]
	0x035F8060 CBZ X8, 0x35F8694
	0x035F8064 LDR X0, [X8 + 0x38]
	0x035F8068 CBZ X0, 0x35F869C
	0x035F806C MOV X2, X31
	0x035F8070 BL 0x35FAAE8
	0x035F8074 CBZ X0, 0x35F86A4
	0x035F8078 MOV W1, W31
	0x035F807C MOV X2, X31
	0x035F8080 BL 0x33ED3A0
	0x035F8084 STP X0, X1, [X31 + 0x90]
	0x035F8088 ADD X0, X31, 0x90
	0x035F808C MOV X1, X31
	0x035F8090 BL 0x32C40D4
	0x035F8094 TBNZ X0, 0x0, 0x35F7CD8
	0x035F8098 MOVZ W8, 0x2
	0x035F809C STR W8, [X19]
	0x035F80A0 LDR V0, [X31 + 0x9]
	0x035F80A4 ADRP X8, 0xB42000
	0x035F80A8 STUR V0, [X19 + 0x68]
	0x035F80AC LDR X8, [X8 + 0x230]
	0x035F80B0 LDR X0, [X8]
	0x035F80B4 LDR W8, [X0 + 0xE0]
	0x035F80B8 CBNZ W8, 0x35F80C0
	0x035F80BC BL 0x1C16DFC
	0x035F80C0 ADRP X8, 0xB42000
	0x035F80C4 LDR X8, [X8 + 0x268]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDEA000
	007 Move X22, 0xAFF000
	008 Move W8, [X21+820]
	009 Call 0x3EB28FC
	010 Return 
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xAFE000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+820], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Uri.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {50}
	035 Compare X19, 0
	036 JumpIfEqual {57}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Uri.get_IsAbsoluteUri, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {50}
	044 Move X0, X19
	045 Call HttpRequestMessage.IsAllowedAbsoluteUri, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {58}
	050 Move [X20+40], X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Call 0x1C17F20
	058 Move X0, 0xB04000
	059 Move X0, [X0+1400]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0xB43000
	064 Move X0, [X0+520]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call ArgumentException..ctor, X0, X1
	070 Move X0, 0xB43000
	071 Move X0, [X0+528]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC

Method: System.Boolean IsAllowedAbsoluteUri(System.Uri uri)

Disassembly:
	0x035FD09C SUB W20, W8, 0x1
	0x035FD0A0 B 0x35FD010
	0x035FD0A4 CMP W8, 0x22
	0x035FD0A8 B.NE 0x35FD15C
	0x035FD0AC LDR X0, [X19 + 0x10]
	0x035FD0B0 CBZ X0, 0x35FD260
	0x035FD0B4 LDR W1, [X19 + 0x18]
	0x035FD0B8 SUB W20, W1, 0x1
	0x035FD0BC LDR W8, [X0 + 0x10]
	0x035FD0C0 CMP W1, W8
	0x035FD0C4 B.GE 0x35FD264
	0x035FD0C8 ADD W8, W1, 0x1
	0x035FD0CC MOV X2, X31
	0x035FD0D0 STR W8, [X19 + 0x18]
	0x035FD0D4 BL 0x3222A1C
	0x035FD0D8 AND W8, W0, 0xFFFF
	0x035FD0DC CMP W8, 0x5C
	0x035FD0E0 B.EQ 0x35FD0FC
	0x035FD0E4 CMP W8, 0x22
	0x035FD0E8 B.EQ 0x35FD148
	0x035FD0EC LDR W1, [X19 + 0x18]
	0x035FD0F0 LDR X0, [X19 + 0x10]
	0x035FD0F4 CBNZ X0, 0x35FD0BC
	0x035FD0F8 B 0x35FD260
	0x035FD0FC LDR X0, [X19 + 0x10]
	0x035FD100 CBZ X0, 0x35FD260
	0x035FD104 LDR W8, [X19 + 0x18]
	0x035FD108 LDR W9, [X0 + 0x10]
	0x035FD10C ADD W1, W8, 0x1
	0x035FD110 CMP W1, W9
	0x035FD114 B.GE 0x35FD264
	0x035FD118 STR W1, [X19 + 0x18]
	0x035FD11C CBNZ X0, 0x35FD0BC
	0x035FD120 B 0x35FD260
	0x035FD124 AND W8, W21, 0xFFFF
	0x035FD128 CMP W8, 0x3B
	0x035FD12C B.EQ 0x35FD140
	0x035FD130 CMP W8, 0x3D
	0x035FD134 B.NE 0x35FD15C
	0x035FD138 MOVZ W1, 0x4
	0x035FD13C B 0x35FD010
	0x035FD140 MOVZ W1, 0x5
	0x035FD144 B 0x35FD010
	0x035FD148 MOVZ W1, 0x3
	0x035FD14C B 0x35FD010
	0x035FD150 TBZ X22, 0x0, 0x35FD15C
	0x035FD154 MOVZ W1, 0x7
	0x035FD158 B 0x35FD010
	0x035FD15C ADRP X22, 0xB1E000
	0x035FD160 LDR X22, [X22 + 0x8C8]
	0x035FD164 AND W23, W21, 0xFFFF
	0x035FD168 LDR X0, [X22]
	0x035FD16C LDR W8, [X0 + 0xE0]
	0x035FD170 CBNZ W8, 0x35FD17C
	0x035FD174 BL 0x1C16DFC
	0x035FD178 LDR X0, [X22]
	0x035FD17C LDR X8, [X0 + 0xB8]
	0x035FD180 LDR W8, [X8 + 0x8]
	0x035FD184 CMP W8, W23
	0x035FD188 B.LE 0x35FD264
	0x035FD18C LDR W8, [X0 + 0xE0]
	0x035FD190 CBNZ W8, 0x35FD19C
	0x035FD194 BL 0x1C16DFC
	0x035FD198 LDR X0, [X22]
	0x035FD19C LDR X8, [X0 + 0xB8]
	0x035FD1A0 LDR X8, [X8]
	0x035FD1A4 CBZ X8, 0x35FD260
	0x035FD1A8 LDR W9, [X8 + 0x18]
	0x035FD1AC CMP W23, W9
	0x035FD1B0 B.CS 0x35FD27C
	0x035FD1B4 ADD X8, X8, W21, UXTH
	0x035FD1B8 LDRB W8, [X8 + 0x20]
	0x035FD1BC CBZ W8, 0x35FD264
	0x035FD1C0 LDR X0, [X19 + 0x10]
	0x035FD1C4 CBZ X0, 0x35FD260
	0x035FD1C8 LDR W1, [X19 + 0x18]
	0x035FD1CC SUB W20, W1, 0x1
	0x035FD1D0 LDR W8, [X0 + 0x10]
	0x035FD1D4 CMP W1, W8
	0x035FD1D8 B.GE 0x35FD26C
	0x035FD1DC MOV X2, X31
	0x035FD1E0 BL 0x3222A1C
	0x035FD1E4 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDE4000
	006 Move W8, [X20+821]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAF9000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0xAF8000
	016 Move X0, [X0+3784]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+821], W8
	020 Compare X19, 0
	021 JumpIfEqual {106}
	022 Move X21, 0xAF9000
	023 Move X21, [X21+2600]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Uri.get_Scheme, X0
	027 Move X8, [X21]
	028 Move X20, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X21]
	035 Move X8, [X8+184]
	036 Move X0, X20
	037 Move X2, X31
	038 Move X1, [X8+24]
	039 Call String.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {64}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Uri.get_Scheme, X0
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {55}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X8, [X21]
	055 Move X8, [X8+184]
	056 Move X0, X20
	057 Move X2, X31
	058 Move X1, [X8+32]
	059 Call String.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {70}
	064 Move W0, 1
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return X0
	070 Move X0, X19
	071 Move X1, X31
	072 Call Uri.get_Scheme, X0
	073 Move X8, [X21]
	074 Move X20, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X21]
	081 Move X8, [X8+184]
	082 Move X0, X20
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call String.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {105}
	090 Move X0, X19
	091 Move X1, X31
	092 Call Uri.get_OriginalString, X0
	093 Compare X0, 0
	094 JumpIfEqual {106}
	095 Move X8, 0xAF8000
	096 Move X8, [X8+3784]
	097 Move W2, 4
	098 Move X3, X31
	099 Move X1, [X8]
	100 Call String.StartsWith, X0, X1, X2
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {64}
	105 Move W0, W31
	106 Call 0x1C17F20

Method: System.Version get_Version()

Disassembly:
	0x035F76E4 LDR X0, [X0 + 0xEB0]
	0x035F76E8 BL 0x1C16CF4
	0x035F76EC ADRP X0, 0xAFF000
	0x035F76F0 LDR X0, [X0 + 0x1D8]
	0x035F76F4 BL 0x1C16CF4
	0x035F76F8 ADRP X0, 0xAFF000
	0x035F76FC LDR X0, [X0 + 0x1E8]
	0x035F7700 BL 0x1C16CF4
	0x035F7704 ADRP X0, 0xB43000
	0x035F7708 LDR X0, [X0 + 0x2E0]
	0x035F770C BL 0x1C16CF4
	0x035F7710 ADRP X0, 0xB43000
	0x035F7714 LDR X0, [X0 + 0x2E8]
	0x035F7718 BL 0x1C16CF4
	0x035F771C ADRP X0, 0xB43000
	0x035F7720 LDR X0, [X0 + 0x2F0]
	0x035F7724 BL 0x1C16CF4
	0x035F7728 ADRP X0, 0xB43000
	0x035F772C LDR X0, [X0 + 0x2F8]
	0x035F7730 BL 0x1C16CF4
	0x035F7734 ADRP X0, 0xB43000
	0x035F7738 LDR X0, [X0 + 0x300]
	0x035F773C BL 0x1C16CF4
	0x035F7740 ADRP X0, 0xB43000
	0x035F7744 LDR X0, [X0 + 0x308]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEA000
	005 Move W8, [X20+822]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB44000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+822], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0xB44000
	020 Move X19, [X19+360]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8+16]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void Dispose()

Disassembly:
	0x035FD1E8 MOV W21, W0
	0x035FD1EC LDR W9, [X8 + 0xE0]
	0x035FD1F0 CBNZ W9, 0x35FD200
	0x035FD1F4 MOV X0, X8

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035FD1F8 BL 0x1C16DFC
	0x035FD1FC LDR X8, [X22]
	0x035FD200 LDR X9, [X8 + 0xB8]
	0x035FD204 LDR W9, [X9 + 0x8]
	0x035FD208 CMP W9, W21, UXTH
	0x035FD20C B.LE 0x35FD26C
	0x035FD210 LDR W9, [X8 + 0xE0]
	0x035FD214 CBNZ W9, 0x35FD224
	0x035FD218 MOV X0, X8
	0x035FD21C BL 0x1C16DFC
	0x035FD220 LDR X8, [X22]
	0x035FD224 LDR X8, [X8 + 0xB8]
	0x035FD228 LDR X8, [X8]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {9}
	005 Move W9, [X0+49]
	006 Move X8, X0
	007 Compare W9, 0
	008 JumpIfEqual {10}
	009 Return 
	010 Move X0, [X8+56]
	011 Move W9, 1
	012 Move [X8+49], W9
	013 Compare X0, 0
	014 JumpIfEqual {9}
	015 Move X8, [X0]
	016 Move W1, 1
	017 Move X3, [X8+392]
	018 Move X2, [X8+400]
	019 CallNoReturn X3

Method: System.Boolean SetIsUsed()

Disassembly:
	0x035FAE88 MOV X8, X0
	0x035FAE8C LDR W0, [X2 + 0x18]
	0x035FAE90 CMP W0, W1
	0x035FAE94 B.LE 0x35FAEA0
	0x035FAE98 MOV W0, W31
	0x035FAE9C B 0x35FAEE4
	0x035FAEA0 CMP W0, 0x1

ISIL:
	001 Move W8, [X0+48]
	002 Compare W8, 0
	003 JumpIfNotEqual {6}
	004 Move W9, 1
	005 Move [X0+48], W9
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.String ToString()

Disassembly:
	0x035FD22C CBZ X8, 0x35FD260
	0x035FD230 LDR W9, [X8 + 0x18]
	0x035FD234 AND W10, W21, 0xFFFF
	0x035FD238 CMP W10, W9
	0x035FD23C B.CS 0x35FD27C
	0x035FD240 ADD X8, X8, W21, UXTH
	0x035FD244 LDRB W8, [X8 + 0x20]
	0x035FD248 CBZ W8, 0x35FD26C
	0x035FD24C LDR W8, [X19 + 0x18]
	0x035FD250 LDR X0, [X19 + 0x10]
	0x035FD254 ADD W1, W8, 0x1
	0x035FD258 STR W1, [X19 + 0x18]
	0x035FD25C CBNZ X0, 0x35FD1D0
	0x035FD260 BL 0x1C16F20
	0x035FD264 MOV W1, W31
	0x035FD268 B 0x35FD010
	0x035FD26C MOVZ W1, 0x2
	0x035FD270 B 0x35FD010
	0x035FD274 MOVZ W1, 0x6
	0x035FD278 B 0x35FD010
	0x035FD27C BL 0x1C16F28
	0x035FD280 STP X30, X23, [X31 - 0x30]!
	0x035FD284 STP X22, X21, [X31 + 0x10]
	0x035FD288 STP X20, X19, [X31 + 0x20]
	0x035FD28C ADRP X23, 0xDE3000
	0x035FD290 ADRP X22, 0xB1E000
	0x035FD294 LDRB W8, [X23 + 0x382]
	0x035FD298 LDR X22, [X22 + 0x8D0]
	0x035FD29C MOV X19, X2
	0x035FD2A0 MOV X20, X1
	0x035FD2A4 MOV X21, X0
	0x035FD2A8 TBNZ X8, 0x0, 0x35FD2C0
	0x035FD2AC ADRP X0, 0xB1E000
	0x035FD2B0 LDR X0, [X0 + 0x8D0]
	0x035FD2B4 BL 0x1C16CF4
	0x035FD2B8 MOVZ W8, 0x1
	0x035FD2BC STRB W8, [X23 + 0x382]
	0x035FD2C0 LDR X0, [X22]
	0x035FD2C4 LDR X21, [X21 + 0x10]
	0x035FD2C8 LDR W8, [X0 + 0xE0]
	0x035FD2CC CBNZ W8, 0x35FD2D4
	0x035FD2D0 BL 0x1C16DFC
	0x035FD2D4 CBZ X21, 0x35FD2F8
	0x035FD2D8 UBFM X1, X20, 0x20, 0x3F
	0x035FD2DC SUB W2, W19, W1
	0x035FD2E0 MOV X0, X21
	0x035FD2E4 LDP X20, X19, [X31 + 0x20]
	0x035FD2E8 LDP X22, X21, [X31 + 0x10]
	0x035FD2EC MOV X3, X31
	0x035FD2F0 LDP X30, X23, [X31], #0x30
	0x035FD2F4 B 0x3228DE4
	0x035FD2F8 BL 0x1C16F20
	0x035FD2FC STR X30, [X31 - 0x10]!
	0x035FD300 LDR X0, [X0 + 0x10]
	0x035FD304 CBZ X0, 0x35FD32C
	0x035FD308 LDR W8, [X0 + 0x10]
	0x035FD30C CMP W8, W1
	0x035FD310 B.GE 0x35FD320
	0x035FD314 MOV X0, X31
	0x035FD318 LDR X30, [X31], #0x10
	0x035FD31C RET
	0x035FD320 MOV X2, X31
	0x035FD324 LDR X30, [X31], #0x10
	0x035FD328 B 0x322B484
	0x035FD32C BL 0x1C16F20
	0x035FD330 STR X30, [X31 - 0x40]!
	0x035FD334 STP X24, X23, [X31 + 0x10]
	0x035FD338 STP X22, X21, [X31 + 0x20]
	0x035FD33C STP X20, X19, [X31 + 0x30]
	0x035FD340 ADRP X24, 0xDE3000
	0x035FD344 ADRP X23, 0xB1E000
	0x035FD348 LDRB W8, [X24 + 0x37F]
	0x035FD34C LDR X23, [X23 + 0x8D0]
	0x035FD350 MOV W19, W3
	0x035FD354 MOV W20, W2
	0x035FD358 MOV W22, W1
	0x035FD35C MOV X21, X0
	0x035FD360 TBNZ X8, 0x0, 0x35FD378
	0x035FD364 ADRP X0, 0xB1E000
	0x035FD368 LDR X0, [X0 + 0x8D0]
	0x035FD36C BL 0x1C16CF4
	0x035FD370 MOVZ W8, 0x1
	0x035FD374 STRB W8, [X24 + 0x37F]
	0x035FD378 STUR X31, [X21 + 0x4]
	0x035FD37C STR W22, [X21]
	0x035FD380 LDR X0, [X23]
	0x035FD384 LDR W8, [X0 + 0xE0]
	0x035FD388 CBNZ W8, 0x35FD390
	0x035FD38C BL 0x1C16DFC
	0x035FD390 STP W20, W19, [X21 + 0x4]
	0x035FD394 LDP X20, X19, [X31 + 0x30]
	0x035FD398 LDP X22, X21, [X31 + 0x20]
	0x035FD39C LDP X24, X23, [X31 + 0x10]
	0x035FD3A0 LDR X30, [X31], #0x40
	0x035FD3A4 RET
	0x035FD3A8 STR X30, [X31 - 0x20]!
	0x035FD3AC STP X20, X19, [X31 + 0x10]
	0x035FD3B0 ADRP X20, 0xDE3000
	0x035FD3B4 LDRB W8, [X20 + 0x33F]
	0x035FD3B8 MOV X19, X0
	0x035FD3BC TBNZ X8, 0x0, 0x35FD3D4
	0x035FD3C0 ADRP X0, 0xAF6000
	0x035FD3C4 LDR X0, [X0 + 0xDD8]
	0x035FD3C8 BL 0x1C16CF4
	0x035FD3CC MOVZ W8, 0x1
	0x035FD3D0 STRB W8, [X20 + 0x33F]
	0x035FD3D4 LDP X2, X0, [X19 + 0x10]
	0x035FD3D8 CBZ X2, 0x35FD3F8
	0x035FD3DC ADRP X8, 0xAF6000
	0x035FD3E0 LDR X8, [X8 + 0xDD8]
	0x035FD3E4 LDP X20, X19, [X31 + 0x10]
	0x035FD3E8 MOV X3, X31
	0x035FD3EC LDR X1, [X8]
	0x035FD3F0 LDR X30, [X31], #0x20
	0x035FD3F4 B 0x32274B8
	0x035FD3F8 LDP X20, X19, [X31 + 0x10]
	0x035FD3FC LDR X30, [X31], #0x20
	0x035FD400 RET
	0x035FD404 STR X30, [X31 - 0x20]!
	0x035FD408 STP X20, X19, [X31 + 0x10]
	0x035FD40C ADRP X20, 0xDE3000
	0x035FD410 LDRB W8, [X20 + 0x340]
	0x035FD414 MOV X19, X0
	0x035FD418 TBNZ X8, 0x0, 0x35FD43C
	0x035FD41C ADRP X0, 0xB3D000
	0x035FD420 LDR X0, [X0 + 0x550]
	0x035FD424 BL 0x1C16CF4
	0x035FD428 ADRP X0, 0xB3D000
	0x035FD42C LDR X0, [X0 + 0x558]
	0x035FD430 BL 0x1C16CF4
	0x035FD434 MOVZ W8, 0x1
	0x035FD438 STRB W8, [X20 + 0x340]
	0x035FD43C LDR X20, [X19 + 0x10]
	0x035FD440 CBNZ X20, 0x35FD46C
	0x035FD444 ADRP X8, 0xB3D000
	0x035FD448 LDR X8, [X8 + 0x558]
	0x035FD44C LDR X0, [X8]
	0x035FD450 BL 0x1C16F10
	0x035FD454 ADRP X8, 0xB3D000
	0x035FD458 LDR X8, [X8 + 0x550]
	0x035FD45C MOV X20, X0
	0x035FD460 LDR X1, [X8]
	0x035FD464 BL 0x301B7C4
	0x035FD468 STR X20, [X19 + 0x10]
	0x035FD46C MOV X0, X20
	0x035FD470 LDP X20, X19, [X31 + 0x10]
	0x035FD474 LDR X30, [X31], #0x20
	0x035FD478 RET
	0x035FD47C LDP X8, X1, [X0 + 0x28]
	0x035FD480 MOV X0, X8
	0x035FD484 RET
	0x035FD488 STP X1, X2, [X0 + 0x28]
	0x035FD48C RET
	0x035FD490 LDRB W0, [X0 + 0x38]
	0x035FD494 RET
	0x035FD498 AND W8, W1, 0x1
	0x035FD49C STRB W8, [X0 + 0x38]
	0x035FD4A0 RET
	0x035FD4A4 LDP X8, X1, [X0 + 0x40]
	0x035FD4A8 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDE4000
	007 Move X21, 0xAF7000
	008 Move W8, [X20+823]
	009 Move X21, [X21+2288]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0xAF7000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0xAF9000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0xB3E000
	022 Move X0, [X0+1240]
	023 Call 0x1C17CF4
	024 Move X0, 0xB02000
	025 Move X0, [X0+1752]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3E000
	028 Move X0, [X0+1248]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3E000
	031 Move X0, [X0+1256]
	032 Call 0x1C17CF4
	033 Move X0, 0xAFE000
	034 Move X0, [X0+3416]
	035 Call 0x1C17CF4
	036 Move X0, 0xB3E000
	037 Move X0, [X0+1264]
	038 Call 0x1C17CF4
	039 Move X0, 0xB3E000
	040 Move X0, [X0+1272]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+823], W8
	044 Move X0, [X21]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X20, X0
	048 Call StringBuilder..ctor, X0
	049 Compare X20, 0
	050 JumpIfEqual {182}
	051 Move X8, 0xB3E000
	052 Move X8, [X8+1240]
	053 Move X0, X20
	054 Move X2, X31
	055 Move X1, [X8]
	056 Call StringBuilder.Append, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {182}
	059 Move X1, [X19+24]
	060 Move X21, 0xB3E000
	061 Move X22, 0xAF9000
	062 Move X21, [X21+1256]
	063 Move X22, [X22+2600]
	064 Move X2, X31
	065 Call StringBuilder.Append, X0, X1
	066 Move X1, [X21]
	067 Move X0, X20
	068 Move X2, X31
	069 Call StringBuilder.Append, X0, X1
	070 Move X8, [X22]
	071 Move X22, [X19+40]
	072 Move X21, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X0, X22
	079 Move X1, X31
	080 Move X2, X31
	081 Call Uri.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {94}
	086 Move X0, [X19+40]
	087 Compare X0, 0
	088 JumpIfEqual {182}
	089 Move X8, [X0]
	090 Move X9, [X8+360]
	091 Move X1, [X8+368]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X1, X0
	094 Move X8, 0xAFE000
	095 Move X8, [X8+3416]
	096 Move X1, [X8]
	097 Compare X21, 0
	098 JumpIfEqual {182}
	099 Move X22, 0xB3E000
	100 Move X22, [X22+1264]
	101 Move X0, X21
	102 Move X2, X31
	103 Call StringBuilder.Append, X0, X1
	104 Move X1, [X22]
	105 Move X0, X20
	106 Move X2, X31
	107 Call StringBuilder.Append, X0, X1
	108 Move X21, X0
	109 Move X0, X19
	110 Call HttpRequestMessage.get_Version, X0
	111 Compare X21, 0
	112 JumpIfEqual {182}
	113 Move X22, 0xB3E000
	114 Move X22, [X22+1248]
	115 Move X1, X0
	116 Move X0, X21
	117 Move X2, X31
	118 Call StringBuilder.Append, X0, X1
	119 Move X1, [X22]
	120 Move X0, X20
	121 Move X2, X31
	122 Call StringBuilder.Append, X0, X1
	123 Move X8, [X19+56]
	124 Move X21, X0
	125 Compare X8, 0
	126 JumpIfEqual {135}
	127 Move X9, [X8]
	128 Move X0, X8
	129 Move X10, [X9+360]
	130 Move X1, [X9+368]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X1, X0
	133 Compare X21, 0
	134 JumpIfNotEqual {140}
	135 Move X8, 0xAFE000
	136 Move X8, [X8+3416]
	137 Move X1, [X8]
	138 Compare X21, 0
	139 JumpIfEqual {182}
	140 Move X22, 0xB3E000
	141 Move X22, [X22+1272]
	142 Move X0, X21
	143 Move X2, X31
	144 Call StringBuilder.Append, X0, X1
	145 Move X1, [X22]
	146 Move X0, X20
	147 Move X2, X31
	148 Call StringBuilder.Append, X0, X1
	149 Move X21, X0
	150 Move X0, X19
	151 Call HttpRequestMessage.get_Headers, X0
	152 Compare X21, 0
	153 JumpIfEqual {182}
	154 Move X22, 0xB02000
	155 Move X22, [X22+1752]
	156 Move X1, X0
	157 Move X0, X21
	158 Move X2, X31
	159 Call StringBuilder.Append, X0, X1
	160 Move X0, [X19+56]
	161 Compare X0, 0
	162 JumpIfEqual {168}
	163 Call HttpContent.get_Headers, X0
	164 Move X1, X0
	165 Move X0, X20
	166 Move X2, X31
	167 Call StringBuilder.Append, X0, X1
	168 Move X1, [X22]
	169 Move X0, X20
	170 Move X2, X31
	171 Call StringBuilder.Append, X0, X1
	172 Move X8, [X20]
	173 Move X0, X20
	174 Move X20, [X31+32]
	175 Move X19, [X31+40]
	176 Move X22, [X31+16]
	177 Move X21, [X31+24]
	178 Move X2, [X8+360]
	179 Move X1, [X8+368]
	180 Move X30, [X31+48]
	181 CallNoReturn X2
	182 Call 0x1C17F20

