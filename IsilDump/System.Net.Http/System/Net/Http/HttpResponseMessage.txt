Type: System.Net.Http.HttpResponseMessage

Method: System.Void .ctor(System.Net.HttpStatusCode statusCode)

Disassembly:
	0x035F7D88 CBZ X0, 0x35F86B8
	0x035F7D8C BL 0x35F6E80
	0x035F7D90 CBZ X0, 0x35F86BC
	0x035F7D94 BL 0x35F6A98
	0x035F7D98 MOV X21, X0
	0x035F7D9C CBZ X0, 0x35F86C0
	0x035F7DA0 ADRP X27, 0xAFC000
	0x035F7DA4 ADRP X28, 0xAFF000
	0x035F7DA8 ADRP X29, 0xAFC000
	0x035F7DAC ADRP X26, 0xAFC000
	0x035F7DB0 ADRP X20, 0xAFC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Move W1, W19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Call HttpResponseMessage.set_StatusCode, X0, X1
	014 Return 

Method: System.Net.Http.HttpContent get_Content()

Disassembly:
	0x035FD4F4 STR X30, [X31 - 0x20]!
	0x035FD4F8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_Content(System.Net.Http.HttpContent value)

Disassembly:
	0x035FD4FC ADRP X20, 0xDE3000
	0x035FD500 LDRB W8, [X20 + 0x341]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Net.Http.Headers.HttpResponseHeaders get_Headers()

Disassembly:
	0x035F7EE4 CBZ X0, 0x35F802C
	0x035F7EE8 LDR X8, [X23]
	0x035F7EEC LDR X1, [X27]
	0x035F7EF0 LDRH W9, [X8 + 0x12E]
	0x035F7EF4 CBZ X9, 0x35F7F18
	0x035F7EF8 LDR X10, [X8 + 0xB0]
	0x035F7EFC ADD X10, X10, 0x8
	0x035F7F00 LDUR X11, [X10 - 0x8]
	0x035F7F04 CMP X11, X1
	0x035F7F08 B.EQ 0x35F7F28
	0x035F7F0C SUBS X9, X9, 0x1
	0x035F7F10 ADD X10, X10, 0x10
	0x035F7F14 B.NE 0x35F7F00
	0x035F7F18 MOV X0, X23
	0x035F7F1C MOV W2, W31
	0x035F7F20 BL 0x1C5C788
	0x035F7F24 B 0x35F7F34
	0x035F7F28 LDRSW X9, [X10]
	0x035F7F2C ADD X8, X8, X9, 0x4, LSL
	0x035F7F30 ADD X0, X8, 0x138
	0x035F7F34 LDP X8, X1, [X0]
	0x035F7F38 MOV X0, X23
	0x035F7F3C BLR X8
	0x035F7F40 TBZ X0, 0x0, 0x35F7FB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEA000
	005 Move W8, [X20+824]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB44000
	012 Move X0, [X0+504]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+824], W8
	016 Move X20, [X19+16]
	017 Compare X20, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0xB44000
	020 Move X8, [X8+504]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call HttpResponseHeaders..ctor, X0
	025 Move [X19+16], X20
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Boolean get_IsSuccessStatusCode()

Disassembly:
	0x035FD564 LDR X30, [X31], #0x20
	0x035FD568 RET
	0x035FD56C LDRB W0, [X0 + 0x62]
	0x035FD570 RET
	0x035FD574 AND W8, W1, 0x1

ISIL:
	001 Move W8, [X0+32]
	002 Subtract W8, W8, 200
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.String get_ReasonPhrase()

Disassembly:
	0x035FD578 STRB W8, [X0 + 0x62]
	0x035FD57C RET
	0x035FD580 LDRB W0, [X0 + 0x63]
	0x035FD584 RET
	0x035FD588 AND W8, W1, 0x1
	0x035FD58C STRB W8, [X0 + 0x63]
	0x035FD590 RET

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Move W0, [X0+32]
	007 Move X1, X31
	008 Call HttpStatusDescription.Get, X0
	009 Return X0

Method: System.Void set_ReasonPhrase(System.String value)

Disassembly:
	0x035FD594 LDRB W0, [X0 + 0x64]
	0x035FD598 RET

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Void set_RequestMessage(System.Net.Http.HttpRequestMessage value)

Disassembly:
	0x035FD59C AND W8, W1, 0x1
	0x035FD5A0 STRB W8, [X0 + 0x64]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Net.HttpStatusCode get_StatusCode()

Disassembly:
	0x035FD5A4 RET
	0x035FD5A8 LDRB W0, [X0 + 0x65]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_StatusCode(System.Net.HttpStatusCode value)

Disassembly:
	0x035FD4AC RET
	0x035FD4B0 STP X1, X2, [X0 + 0x40]
	0x035FD4B4 RET
	0x035FD4B8 LDP X8, X1, [X0 + 0x50]
	0x035FD4BC MOV X0, X8
	0x035FD4C0 RET
	0x035FD4C4 STP X1, X2, [X0 + 0x50]
	0x035FD4C8 RET
	0x035FD4CC LDRB W0, [X0 + 0x60]
	0x035FD4D0 RET
	0x035FD4D4 AND W8, W1, 0x1
	0x035FD4D8 STRB W8, [X0 + 0x60]
	0x035FD4DC RET
	0x035FD4E0 LDRB W0, [X0 + 0x61]
	0x035FD4E4 RET
	0x035FD4E8 AND W8, W1, 0x1
	0x035FD4EC STRB W8, [X0 + 0x61]
	0x035FD4F0 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {11}
	007 Move [X0+32], W1
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0xAFF000
	012 Move X0, [X0+1888]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X1, X31
	016 Move X19, X0
	017 Call ArgumentOutOfRangeException..ctor, X0
	018 Move X0, 0xB3E000
	019 Move X0, [X0+1280]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Call 0x1C17DEC

Method: System.Version get_Version()

Disassembly:
	0x035FD5AC RET
	0x035FD5B0 AND W8, W1, 0x1
	0x035FD5B4 STRB W8, [X0 + 0x65]
	0x035FD5B8 RET
	0x035FD5BC STR X30, [X31 - 0x20]!
	0x035FD5C0 STP X20, X19, [X31 + 0x10]
	0x035FD5C4 ADRP X20, 0xDE3000
	0x035FD5C8 LDRB W8, [X20 + 0x342]
	0x035FD5CC MOV X19, X0
	0x035FD5D0 TBNZ X8, 0x0, 0x35FD5F4
	0x035FD5D4 ADRP X0, 0xAF7000
	0x035FD5D8 LDR X0, [X0 + 0x1C0]
	0x035FD5DC BL 0x1C16CF4
	0x035FD5E0 ADRP X0, 0xAF7000
	0x035FD5E4 LDR X0, [X0 + 0x1D0]
	0x035FD5E8 BL 0x1C16CF4
	0x035FD5EC MOVZ W8, 0x1
	0x035FD5F0 STRB W8, [X20 + 0x342]
	0x035FD5F4 LDR X20, [X19 + 0x20]
	0x035FD5F8 CBNZ X20, 0x35FD624
	0x035FD5FC ADRP X8, 0xAF7000
	0x035FD600 LDR X8, [X8 + 0x1D0]
	0x035FD604 LDR X0, [X8]
	0x035FD608 BL 0x1C16F10
	0x035FD60C ADRP X8, 0xAF7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE4000
	005 Move W8, [X20+825]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB3E000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+825], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0xB3E000
	020 Move X19, [X19+360]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8+16]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void Dispose()

Disassembly:
	0x035FD610 LDR X8, [X8 + 0x1C0]
	0x035FD614 MOV X20, X0
	0x035FD618 LDR X1, [X8]
	0x035FD61C BL 0x301B7C4

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035FD620 STR X20, [X19 + 0x20]
	0x035FD624 MOV X0, X20
	0x035FD628 LDP X20, X19, [X31 + 0x10]
	0x035FD62C LDR X30, [X31], #0x20
	0x035FD630 RET
	0x035FD634 LDRB W0, [X0 + 0x66]
	0x035FD638 RET
	0x035FD63C AND W8, W1, 0x1
	0x035FD640 STRB W8, [X0 + 0x66]
	0x035FD644 RET
	0x035FD648 LDRB W0, [X0 + 0x67]
	0x035FD64C RET
	0x035FD650 AND W8, W1, 0x1

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {9}
	005 Move W9, [X0+48]
	006 Move X8, X0
	007 Compare W9, 0
	008 JumpIfEqual {10}
	009 Return 
	010 Move X0, [X8+56]
	011 Move W9, 1
	012 Move [X8+48], W9
	013 Compare X0, 0
	014 JumpIfEqual {9}
	015 Move X8, [X0]
	016 Move W1, 1
	017 Move X3, [X8+392]
	018 Move X2, [X8+400]
	019 CallNoReturn X3

Method: System.String ToString()

Disassembly:
	0x035FD654 STRB W8, [X0 + 0x67]
	0x035FD658 RET
	0x035FD65C LDP X8, X1, [X0 + 0x68]
	0x035FD660 MOV X0, X8
	0x035FD664 RET
	0x035FD668 STP X1, X2, [X0 + 0x68]
	0x035FD66C RET
	0x035FD670 SUB X31, X31, 0xC0
	0x035FD674 STR X30, [X31 + 0x60]
	0x035FD678 STP X28, X27, [X31 + 0x70]
	0x035FD67C STP X26, X25, [X31 + 0x80]
	0x035FD680 STP X24, X23, [X31 + 0x90]
	0x035FD684 STP X22, X21, [X31 + 0xA0]
	0x035FD688 STP X20, X19, [X31 + 0xB0]
	0x035FD68C ADRP X19, 0xDE3000
	0x035FD690 LDRB W8, [X19 + 0x343]
	0x035FD694 MOV X20, X0
	0x035FD698 TBNZ X8, 0x0, 0x35FD758
	0x035FD69C ADRP X0, 0xB3D000
	0x035FD6A0 LDR X0, [X0 + 0x560]
	0x035FD6A4 BL 0x1C16CF4
	0x035FD6A8 ADRP X0, 0xB1D000
	0x035FD6AC LDR X0, [X0 + 0xFC8]
	0x035FD6B0 BL 0x1C16CF4
	0x035FD6B4 ADRP X0, 0xB3D000
	0x035FD6B8 LDR X0, [X0 + 0x568]
	0x035FD6BC BL 0x1C16CF4
	0x035FD6C0 ADRP X0, 0xB3D000
	0x035FD6C4 LDR X0, [X0 + 0x570]
	0x035FD6C8 BL 0x1C16CF4
	0x035FD6CC ADRP X0, 0xB1D000
	0x035FD6D0 LDR X0, [X0 + 0xFD0]
	0x035FD6D4 BL 0x1C16CF4
	0x035FD6D8 ADRP X0, 0xB1D000
	0x035FD6DC LDR X0, [X0 + 0xFD8]
	0x035FD6E0 BL 0x1C16CF4
	0x035FD6E4 ADRP X0, 0xB3D000
	0x035FD6E8 LDR X0, [X0 + 0x578]
	0x035FD6EC BL 0x1C16CF4
	0x035FD6F0 ADRP X0, 0xB3D000
	0x035FD6F4 LDR X0, [X0 + 0x580]
	0x035FD6F8 BL 0x1C16CF4
	0x035FD6FC ADRP X0, 0xAF7000
	0x035FD700 LDR X0, [X0 + 0x1B8]
	0x035FD704 BL 0x1C16CF4
	0x035FD708 ADRP X0, 0xB3D000
	0x035FD70C LDR X0, [X0 + 0x588]
	0x035FD710 BL 0x1C16CF4
	0x035FD714 ADRP X0, 0xB1D000
	0x035FD718 LDR X0, [X0 + 0xFE0]
	0x035FD71C BL 0x1C16CF4
	0x035FD720 ADRP X0, 0xB3D000
	0x035FD724 LDR X0, [X0 + 0x550]
	0x035FD728 BL 0x1C16CF4
	0x035FD72C ADRP X0, 0xAF7000
	0x035FD730 LDR X0, [X0 + 0x1C0]
	0x035FD734 BL 0x1C16CF4
	0x035FD738 ADRP X0, 0xB3D000
	0x035FD73C LDR X0, [X0 + 0x558]
	0x035FD740 BL 0x1C16CF4
	0x035FD744 ADRP X0, 0xAF7000
	0x035FD748 LDR X0, [X0 + 0x1D0]
	0x035FD74C BL 0x1C16CF4
	0x035FD750 MOVZ W8, 0x1
	0x035FD754 STRB W8, [X19 + 0x343]
	0x035FD758 MOV X0, X20
	0x035FD75C MOV X1, X31
	0x035FD760 STP X31, X31, [X31 + 0x40]
	0x035FD764 STR X31, [X31 + 0x50]
	0x035FD768 STP X31, X31, [X31 + 0x20]
	0x035FD76C STR X31, [X31 + 0x30]
	0x035FD770 BL 0x33C5A24
	0x035FD774 MOV X19, X0
	0x035FD778 CBZ X0, 0x35FD7B0
	0x035FD77C ADRP X9, 0xB3D000
	0x035FD780 LDR X9, [X9 + 0x560]
	0x035FD784 LDR X8, [X19]
	0x035FD788 LDR X1, [X9]
	0x035FD78C LDRB W10, [X8 + 0x130]
	0x035FD790 LDRB W9, [X1 + 0x130]
	0x035FD794 CMP W10, W9
	0x035FD798 B.CC 0x35FDA90
	0x035FD79C LDR X8, [X8 + 0xC8]
	0x035FD7A0 ADD X8, X8, X9, 0x3, LSL
	0x035FD7A4 LDUR X8, [X8 - 0x8]
	0x035FD7A8 CMP X8, X1
	0x035FD7AC B.NE 0x35FDA90
	0x035FD7B0 LDR X8, [X20 + 0x10]
	0x035FD7B4 CBZ X8, 0x35FD8A0
	0x035FD7B8 ADRP X8, 0xB3D000
	0x035FD7BC LDR X8, [X8 + 0x558]
	0x035FD7C0 ADRP X21, 0xB3D000
	0x035FD7C4 LDR X0, [X8]
	0x035FD7C8 LDR X21, [X21 + 0x550]
	0x035FD7CC BL 0x1C16F10
	0x035FD7D0 LDR X1, [X21]
	0x035FD7D4 MOV X21, X0
	0x035FD7D8 BL 0x301B7C4
	0x035FD7DC CBZ X19, 0x35FDA8C
	0x035FD7E0 STR X21, [X19 + 0x10]
	0x035FD7E4 LDR X0, [X20 + 0x10]
	0x035FD7E8 CBZ X0, 0x35FDA8C
	0x035FD7EC ADRP X8, 0xB3D000
	0x035FD7F0 LDR X8, [X8 + 0x588]
	0x035FD7F4 ADRP X21, 0xB3D000
	0x035FD7F8 ADRP X22, 0xB3D000
	0x035FD7FC ADRP X23, 0xB3D000
	0x035FD800 LDR X1, [X8]
	0x035FD804 LDR X21, [X21 + 0x570]
	0x035FD808 LDR X22, [X22 + 0x580]
	0x035FD80C LDR X23, [X23 + 0x568]
	0x035FD810 ADD X8, X31, 0x8
	0x035FD814 BL 0x301CB58
	0x035FD818 LDUR V0, [X31 + 0x8]
	0x035FD81C LDR X8, [X31 + 0x18]
	0x035FD820 STR V0, [X31 + 0x4]
	0x035FD824 STR X8, [X31 + 0x50]
	0x035FD828 LDR X1, [X21]
	0x035FD82C ADD X0, X31, 0x40
	0x035FD830 BL 0x2BC4350
	0x035FD834 TBZ X0, 0x0, 0x35FD894
	0x035FD838 LDR X0, [X19 + 0x10]
	0x035FD83C CBZ X0, 0x35FDA74
	0x035FD840 LDR W10, [X0 + 0x1C]
	0x035FD844 LDR X1, [X31 + 0x50]
	0x035FD848 LDR X8, [X0 + 0x10]
	0x035FD84C LDR X9, [X22]
	0x035FD850 ADD W10, W10, 0x1
	0x035FD854 STR W10, [X0 + 0x1C]
	0x035FD858 CBZ X8, 0x35FDA78
	0x035FD85C LDRSW X10, [X0 + 0x18]
	0x035FD860 LDR W11, [X8 + 0x18]
	0x035FD864 CMP W10, W11
	0x035FD868 B.CS 0x35FD880
	0x035FD86C ADD W9, W10, 0x1
	0x035FD870 ADD X8, X8, X10, 0x3, LSL
	0x035FD874 STR W9, [X0 + 0x18]
	0x035FD878 STR X1, [X8 + 0x20]
	0x035FD87C B 0x35FD828
	0x035FD880 LDR X8, [X9 + 0x20]
	0x035FD884 LDR X8, [X8 + 0xC0]
	0x035FD888 LDR X2, [X8 + 0x70]
	0x035FD88C BL 0x301BF90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDE4000
	008 Move X21, 0xAF7000
	009 Move W8, [X20+826]
	010 Move X21, [X21+2288]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0xAF7000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0xB02000
	020 Move X0, [X0+1752]
	021 Call 0x1C17CF4
	022 Move X0, 0xB3E000
	023 Move X0, [X0+1288]
	024 Call 0x1C17CF4
	025 Move X0, 0xB3E000
	026 Move X0, [X0+1248]
	027 Call 0x1C17CF4
	028 Move X0, 0xB3E000
	029 Move X0, [X0+1296]
	030 Call 0x1C17CF4
	031 Move X0, 0xAFE000
	032 Move X0, [X0+3416]
	033 Call 0x1C17CF4
	034 Move X0, 0xB3E000
	035 Move X0, [X0+1264]
	036 Call 0x1C17CF4
	037 Move X0, 0xB3E000
	038 Move X0, [X0+1272]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+826], W8
	042 Move X0, [X21]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call StringBuilder..ctor, X0
	047 Compare X20, 0
	048 JumpIfEqual {163}
	049 Move X8, 0xB3E000
	050 Move X8, [X8+1296]
	051 Move X0, X20
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call StringBuilder.Append, X0, X1
	055 Compare X0, 0
	056 JumpIfEqual {163}
	057 Move W1, [X19+32]
	058 Move X21, 0xB3E000
	059 Move X21, [X21+1288]
	060 Move X2, X31
	061 Call StringBuilder.Append, X0, X1
	062 Move X1, [X21]
	063 Move X0, X20
	064 Move X2, X31
	065 Call StringBuilder.Append, X0, X1
	066 Move X8, [X19+24]
	067 Move X21, X0
	068 Compare X8, 0
	069 JumpIfNotEqual {74}
	070 Move W0, [X19+32]
	071 Move X1, X31
	072 Call HttpStatusDescription.Get, X0
	073 Move X8, X0
	074 Compare X21, 0
	075 JumpIfEqual {163}
	076 Move X22, 0xAFE000
	077 Move X22, [X22+3416]
	078 Move X23, 0xB3E000
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Move X9, [X22]
	082 Move X23, [X23+1264]
	083 Move X2, X31
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Call StringBuilder.Append, X0, X1
	086 Move X1, [X23]
	087 Move X0, X20
	088 Move X2, X31
	089 Call StringBuilder.Append, X0, X1
	090 Move X21, X0
	091 Move X0, X19
	092 Call HttpResponseMessage.get_Version, X0
	093 Compare X21, 0
	094 JumpIfEqual {163}
	095 Move X23, 0xB3E000
	096 Move X23, [X23+1248]
	097 Move X1, X0
	098 Move X0, X21
	099 Move X2, X31
	100 Call StringBuilder.Append, X0, X1
	101 Move X1, [X23]
	102 Move X0, X20
	103 Move X2, X31
	104 Call StringBuilder.Append, X0, X1
	105 Move X8, [X19+56]
	106 Move X21, X0
	107 Compare X8, 0
	108 JumpIfEqual {117}
	109 Move X9, [X8]
	110 Move X0, X8
	111 Move X10, [X9+360]
	112 Move X1, [X9+368]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X1, X0
	115 Compare X21, 0
	116 JumpIfNotEqual {120}
	117 Move X1, [X22]
	118 Compare X21, 0
	119 JumpIfEqual {163}
	120 Move X22, 0xB3E000
	121 Move X22, [X22+1272]
	122 Move X0, X21
	123 Move X2, X31
	124 Call StringBuilder.Append, X0, X1
	125 Move X1, [X22]
	126 Move X0, X20
	127 Move X2, X31
	128 Call StringBuilder.Append, X0, X1
	129 Move X21, X0
	130 Move X0, X19
	131 Call HttpResponseMessage.get_Headers, X0
	132 Compare X21, 0
	133 JumpIfEqual {163}
	134 Move X22, 0xB02000
	135 Move X22, [X22+1752]
	136 Move X1, X0
	137 Move X0, X21
	138 Move X2, X31
	139 Call StringBuilder.Append, X0, X1
	140 Move X0, [X19+56]
	141 Compare X0, 0
	142 JumpIfEqual {148}
	143 Call HttpContent.get_Headers, X0
	144 Move X1, X0
	145 Move X0, X20
	146 Move X2, X31
	147 Call StringBuilder.Append, X0, X1
	148 Move X1, [X22]
	149 Move X0, X20
	150 Move X2, X31
	151 Call StringBuilder.Append, X0, X1
	152 Move X8, [X20]
	153 Move X0, X20
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X2, [X8+360]
	159 Move X1, [X8+368]
	160 Move X30, [X31+48]
	161 Move X23, [X31+56]
	162 CallNoReturn X2
	163 Call 0x1C17F20

