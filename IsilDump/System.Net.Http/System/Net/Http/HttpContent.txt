Type: System.Net.Http.HttpContent

Method: System.Net.Http.Headers.HttpContentHeaders get_Headers()

Disassembly:
	0x035F7E80 CBZ X1, 0x35F85D4
	0x035F7E84 LDR X8, [X23]
	0x035F7E88 LDR X1, [X29]
	0x035F7E8C MOV X24, X0
	0x035F7E90 LDRH W9, [X8 + 0x12E]
	0x035F7E94 CBZ X9, 0x35F7EB8
	0x035F7E98 LDR X10, [X8 + 0xB0]
	0x035F7E9C ADD X10, X10, 0x8
	0x035F7EA0 LDUR X11, [X10 - 0x8]
	0x035F7EA4 CMP X11, X1
	0x035F7EA8 B.EQ 0x35F7EC8
	0x035F7EAC SUBS X9, X9, 0x1
	0x035F7EB0 ADD X10, X10, 0x10
	0x035F7EB4 B.NE 0x35F7EA0
	0x035F7EB8 MOV X0, X23
	0x035F7EBC MOV W2, W31
	0x035F7EC0 BL 0x1C5C788
	0x035F7EC4 B 0x35F7ED4
	0x035F7EC8 LDRSW X9, [X10]
	0x035F7ECC ADD X8, X8, X9, 0x4, LSL
	0x035F7ED0 ADD X0, X8, 0x138
	0x035F7ED4 LDP X8, X1, [X0]
	0x035F7ED8 MOV X0, X23
	0x035F7EDC BLR X8
	0x035F7EE0 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDEA000
	005 Move W8, [X20+799]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB44000
	012 Move X0, [X0+496]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+799], W8
	016 Move X20, [X19+32]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xB44000
	020 Move X8, [X8+496]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call HttpContentHeaders..ctor, X0, X1
	026 Move [X19+32], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Nullable`1<System.Int64> get_LoadedBufferLength()

Disassembly:
	0x035FBA6C BL 0x3315C64
	0x035FBA70 ADRP X0, 0xB3F000
	0x035FBA74 LDR X0, [X0 + 0x4C0]
	0x035FBA78 BL 0x1C16D08
	0x035FBA7C MOV X1, X0
	0x035FBA80 MOV X0, X19
	0x035FBA84 BL 0x1C16DEC
	0x035FBA88 ADRP X0, 0xB25000
	0x035FBA8C LDR X0, [X0 + 0xC08]
	0x035FBA90 BL 0x1C16D08
	0x035FBA94 BL 0x1C16F10
	0x035FBA98 MOV X1, X19
	0x035FBA9C MOV X2, X31
	0x035FBAA0 MOV X20, X0
	0x035FBAA4 BL 0x33674A0
	0x035FBAA8 ADRP X0, 0xB3F000
	0x035FBAAC LDR X0, [X0 + 0x4C0]
	0x035FBAB0 BL 0x1C16D08
	0x035FBAB4 MOV X1, X0
	0x035FBAB8 MOV X0, X20
	0x035FBABC BL 0x1C16DEC
	0x035FBAC0 STR X30, [X31 - 0x20]!
	0x035FBAC4 STP X20, X19, [X31 + 0x10]
	0x035FBAC8 ADRP X20, 0xDE5000
	0x035FBACC ADRP X19, 0xAFB000
	0x035FBAD0 LDRB W8, [X20 + 0x329]
	0x035FBAD4 LDR X19, [X19 + 0x178]
	0x035FBAD8 TBNZ X8, 0x0, 0x35FBAF0
	0x035FBADC ADRP X0, 0xAFB000
	0x035FBAE0 LDR X0, [X0 + 0x178]
	0x035FBAE4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xDE6000
	006 Move W8, [X20+800]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB3D000
	013 Move X0, [X0+1848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+800], W8
	017 Move X0, [X19+16]
	018 Compare X0, 0
	019 JumpIfEqual {32}
	020 Move X8, [X0]
	021 Move X19, 0xB3D000
	022 Move X9, [X8+488]
	023 Move X1, [X8+496]
	024 Move X19, [X19+1848]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X2, [X19]
	027 Move X1, X0
	028 Add X0, X31, 0
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Call Nullable`1<Int64>..ctor, X0, X1
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Move X0, [X31]
	035 Move X1, [X31+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Threading.Tasks.Task CopyToAsync(System.IO.Stream stream)

Disassembly:
	0x035FA084 BL 0x1C16F20
	0x035FA088 MOV X0, X20

ISIL:
	001 Move X2, X31
	002 Call HttpContent.CopyToAsync, X0, X1, X2
	003 Return X0

Method: System.Threading.Tasks.Task CopyToAsync(System.IO.Stream stream, System.Net.TransportContext context)

Disassembly:
	0x035FBAE8 MOVZ W8, 0x1
	0x035FBAEC STRB W8, [X20 + 0x329]
	0x035FBAF0 LDR X0, [X19]
	0x035FBAF4 LDR W8, [X0 + 0xE0]
	0x035FBAF8 CBNZ W8, 0x35FBB04
	0x035FBAFC BL 0x1C16DFC
	0x035FBB00 LDR X0, [X19]
	0x035FBB04 LDR X8, [X0 + 0xB8]
	0x035FBB08 LDP X20, X19, [X31 + 0x10]
	0x035FBB0C LDR X0, [X8 + 0x8]
	0x035FBB10 LDR X30, [X31], #0x20
	0x035FBB14 RET
	0x035FBB18 LDR X0, [X0 + 0x10]
	0x035FBB1C RET
	0x035FBB20 STR X30, [X31 - 0x20]!
	0x035FBB24 STP X20, X19, [X31 + 0x10]
	0x035FBB28 ADRP X20, 0xDE5000
	0x035FBB2C ADRP X19, 0xAFB000
	0x035FBB30 LDRB W8, [X20 + 0x32A]
	0x035FBB34 LDR X19, [X19 + 0x178]
	0x035FBB38 TBNZ X8, 0x0, 0x35FBB50
	0x035FBB3C ADRP X0, 0xAFB000
	0x035FBB40 LDR X0, [X0 + 0x178]
	0x035FBB44 BL 0x1C16CF4
	0x035FBB48 MOVZ W8, 0x1
	0x035FBB4C STRB W8, [X20 + 0x32A]
	0x035FBB50 LDR X0, [X19]
	0x035FBB54 LDR W8, [X0 + 0xE0]
	0x035FBB58 CBNZ W8, 0x35FBB64
	0x035FBB5C BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {20}
	005 Move X8, [X0+16]
	006 Compare X8, 0
	007 JumpIfEqual {14}
	008 Move X0, X8
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call Stream.CopyToAsync, X0, X1
	013 Return X0
	014 Move X8, [X0]
	015 Move X4, [X8+408]
	016 Move X3, [X8+416]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 CallNoReturn X4
	020 Move X0, 0xAFE000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0xB28000
	026 Move X0, [X0+3384]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0xB40000
	033 Move X0, [X0+1096]
	034 Call 0x1C17D08
	035 Move X1, X0
	036 Move X0, X19
	037 Call 0x1C17DEC

Method: System.Net.Http.HttpContent/FixedMemoryStream CreateFixedMemoryStream(System.Int64 maxBufferSize)

Disassembly:
	0x035FBB60 LDR X0, [X19]
	0x035FBB64 LDR X8, [X0 + 0xB8]
	0x035FBB68 LDP X20, X19, [X31 + 0x10]
	0x035FBB6C LDR X0, [X8 + 0x20]
	0x035FBB70 LDR X30, [X31], #0x20
	0x035FBB74 RET
	0x035FBB78 STR X30, [X31 - 0x20]!
	0x035FBB7C STP X20, X19, [X31 + 0x10]
	0x035FBB80 ADRP X20, 0xDE5000
	0x035FBB84 ADRP X19, 0xAFB000
	0x035FBB88 LDRB W8, [X20 + 0x32B]
	0x035FBB8C LDR X19, [X19 + 0x178]
	0x035FBB90 TBNZ X8, 0x0, 0x35FBBA8
	0x035FBB94 ADRP X0, 0xAFB000
	0x035FBB98 LDR X0, [X0 + 0x178]
	0x035FBB9C BL 0x1C16CF4
	0x035FBBA0 MOVZ W8, 0x1
	0x035FBBA4 STRB W8, [X20 + 0x32B]
	0x035FBBA8 LDR X0, [X19]
	0x035FBBAC LDR W8, [X0 + 0xE0]
	0x035FBBB0 CBNZ W8, 0x35FBBBC
	0x035FBBB4 BL 0x1C16DFC
	0x035FBBB8 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDE6000
	006 Move X21, 0xB40000
	007 Move W8, [X20+801]
	008 Move X21, [X21+1104]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB40000
	015 Move X0, [X0+1104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+801], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call MemoryStream..ctor, X0
	024 Move [X20+80], X19
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void Dispose()

Disassembly:
	0x035FBBE4 MOV X3, X31
	0x035FBBE8 B 0x3226C60
	0x035FBBEC CMP X0, X1
	0x035FBBF0 CSET W0, EQ

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035FBBF4 RET
	0x035FBBF8 STR X30, [X31 - 0x10]!
	0x035FBBFC CBZ X1, 0x35FBC18
	0x035FBC00 LDR X0, [X0 + 0x10]
	0x035FBC04 LDR X1, [X1 + 0x10]
	0x035FBC08 MOVZ W2, 0x5
	0x035FBC0C MOV X3, X31
	0x035FBC10 LDR X30, [X31], #0x10
	0x035FBC14 B 0x3226C60
	0x035FBC18 BL 0x1C16F20
	0x035FBC1C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {8}
	005 Move W8, [X0+24]
	006 Compare W8, 0
	007 JumpIfEqual {9}
	008 Return 
	009 Move X8, [X0+16]
	010 Move W9, 1
	011 Move [X0+24], W9
	012 Compare X8, 0
	013 JumpIfEqual {8}
	014 Move X0, X8
	015 Move X1, X31
	016 Call Stream.Dispose, X0
	017 Return 

Method: System.Threading.Tasks.Task LoadIntoBufferAsync()

Disassembly:
	0x035FBC20 STP X20, X19, [X31 + 0x10]
	0x035FBC24 ADRP X21, 0xDE5000

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W1, TEMP
	004 Call HttpContent.LoadIntoBufferAsync, X0, X1
	005 Return X0

Method: System.Threading.Tasks.Task LoadIntoBufferAsync(System.Int64 maxBufferSize)

Disassembly:
	0x035F9FB4 B.EQ 0x35F9FD4
	0x035F9FB8 SUBS X9, X9, 0x1
	0x035F9FBC ADD X10, X10, 0x10
	0x035F9FC0 B.NE 0x35F9FAC
	0x035F9FC4 MOV X0, X19
	0x035F9FC8 MOV W2, W31
	0x035F9FCC BL 0x1C5C788
	0x035F9FD0 B 0x35F9FE0
	0x035F9FD4 LDRSW X9, [X10]
	0x035F9FD8 ADD X8, X8, X9, 0x4, LSL
	0x035F9FDC ADD X0, X8, 0x138
	0x035F9FE0 LDP X8, X1, [X0]
	0x035F9FE4 MOV X0, X19
	0x035F9FE8 BLR X8
	0x035F9FEC MOV X2, X0
	0x035F9FF0 MOV X3, X1
	0x035F9FF4 MOV X0, X20
	0x035F9FF8 MOV X1, X2
	0x035F9FFC MOV X2, X3
	0x035FA000 BL 0x35F6F44
	0x035FA004 B 0x35F9F38
	0x035FA008 MOV X20, X31
	0x035FA00C CBZ X19, 0x35FA068
	0x035FA010 LDR X8, [X19]
	0x035FA014 LDR X1, [X21]
	0x035FA018 LDRH W9, [X8 + 0x12E]
	0x035FA01C CBZ X9, 0x35FA040
	0x035FA020 LDR X10, [X8 + 0xB0]
	0x035FA024 ADD X10, X10, 0x8
	0x035FA028 LDUR X11, [X10 - 0x8]
	0x035FA02C CMP X11, X1
	0x035FA030 B.EQ 0x35FA050
	0x035FA034 SUBS X9, X9, 0x1
	0x035FA038 ADD X10, X10, 0x10
	0x035FA03C B.NE 0x35FA028
	0x035FA040 MOV X0, X19
	0x035FA044 MOV W2, W31
	0x035FA048 BL 0x1C5C788
	0x035FA04C B 0x35FA05C
	0x035FA050 LDRSW X9, [X10]
	0x035FA054 ADD X8, X8, X9, 0x4, LSL
	0x035FA058 ADD X0, X8, 0x138
	0x035FA05C LDP X8, X1, [X0]
	0x035FA060 MOV X0, X19
	0x035FA064 BLR X8
	0x035FA068 CBNZ X20, 0x35FA088
	0x035FA06C LDP X20, X19, [X31 + 0x30]
	0x035FA070 LDP X22, X21, [X31 + 0x20]
	0x035FA074 LDP X30, X23, [X31 + 0x10]
	0x035FA078 ADD X31, X31, 0x40
	0x035FA07C RET
	0x035FA080 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xDE8000
	008 Move X21, 0xAFE000
	009 Move W8, [X22+802]
	010 Move X21, [X21+640]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB42000
	018 Move X0, [X0+880]
	019 Call 0x1C17CF4
	020 Move X0, 0xAFE000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+802], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+64], V0
	028 Move [X31+72], V0
	029 Move [X31+32], V0
	030 Move [X31+40], V0
	031 Move [X31+64], X20
	032 Move [X31+72], X19
	033 Move X19, 0xB41000
	034 Move W8, [X0+224]
	035 Move X19, [X19+880]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X8, X31, 8
	040 Move X0, X31
	041 Call AsyncTaskMethodBuilder.Create
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X9, [X31+24]
	044 Move X2, [X19]
	045 Add X8, X31, 32
	046 Or X19, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X19
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X19
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

Method: System.Threading.Tasks.Task`1<System.String> ReadAsStringAsync()

Disassembly:
	0x035FBC28 LDRB W8, [X21 + 0x32C]
	0x035FBC2C MOV X19, X1
	0x035FBC30 MOV X20, X0
	0x035FBC34 TBNZ X8, 0x0, 0x35FBC4C
	0x035FBC38 ADRP X0, 0xAFB000
	0x035FBC3C LDR X0, [X0 + 0x178]
	0x035FBC40 BL 0x1C16CF4
	0x035FBC44 MOVZ W8, 0x1
	0x035FBC48 STRB W8, [X21 + 0x32C]
	0x035FBC4C CBZ X19, 0x35FBC84
	0x035FBC50 ADRP X8, 0xAFB000
	0x035FBC54 LDR X8, [X8 + 0x178]
	0x035FBC58 LDR X9, [X19]
	0x035FBC5C LDR X8, [X8]
	0x035FBC60 LDRB W11, [X9 + 0x130]
	0x035FBC64 LDRB W10, [X8 + 0x130]
	0x035FBC68 CMP W11, W10
	0x035FBC6C B.CC 0x35FBC84
	0x035FBC70 LDR X9, [X9 + 0xC8]
	0x035FBC74 ADD X9, X9, X10, 0x3, LSL
	0x035FBC78 LDUR X9, [X9 - 0x8]
	0x035FBC7C CMP X9, X8
	0x035FBC80 B.EQ 0x35FBC94
	0x035FBC84 LDP X20, X19, [X31 + 0x10]
	0x035FBC88 MOV W0, W31
	0x035FBC8C LDP X30, X21, [X31], #0x20
	0x035FBC90 RET
	0x035FBC94 MOV X0, X20
	0x035FBC98 MOV X1, X19
	0x035FBC9C LDP X20, X19, [X31 + 0x10]
	0x035FBCA0 LDP X30, X21, [X31], #0x20
	0x035FBCA4 B 0x35FBBF8
	0x035FBCA8 STR X30, [X31 - 0x10]!
	0x035FBCAC LDR X0, [X0 + 0x10]
	0x035FBCB0 CBZ X0, 0x35FBCC4
	0x035FBCB4 LDR X8, [X0]
	0x035FBCB8 LDP X2, X1, [X8 + 0x158]
	0x035FBCBC LDR X30, [X31], #0x10
	0x035FBCC0 BR X2
	0x035FBCC4 BL 0x1C16F20
	0x035FBCC8 LDR X0, [X0 + 0x10]
	0x035FBCCC RET
	0x035FBCD0 STP X30, X27, [X31 - 0x50]!
	0x035FBCD4 STP X26, X25, [X31 + 0x10]
	0x035FBCD8 STP X24, X23, [X31 + 0x20]
	0x035FBCDC STP X22, X21, [X31 + 0x30]
	0x035FBCE0 STP X20, X19, [X31 + 0x40]
	0x035FBCE4 ADRP X27, 0xDE5000
	0x035FBCE8 ADRP X20, 0xAFB000
	0x035FBCEC ADRP X19, 0xB21000
	0x035FBCF0 ADRP X26, 0xB21000
	0x035FBCF4 ADRP X25, 0xB3B000
	0x035FBCF8 ADRP X24, 0xB3F000
	0x035FBCFC ADRP X23, 0xB21000
	0x035FBD00 ADRP X22, 0xB21000
	0x035FBD04 ADRP X21, 0xB3F000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xDE6000
	007 Move X20, 0xAFC000
	008 Move W8, [X21+803]
	009 Move X20, [X20+304]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xAFC000
	016 Move X0, [X0+312]
	017 Call 0x1C17CF4
	018 Move X0, 0xB40000
	019 Move X0, [X0+1112]
	020 Call 0x1C17CF4
	021 Move X0, 0xAFC000
	022 Move X0, [X0+328]
	023 Call 0x1C17CF4
	024 Move X0, 0xAFC000
	025 Move X0, [X0+304]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+803], W8
	029 Move X0, [X20]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 Move [X31+16], V0
	032 Move [X31+24], V0
	033 Move [X31], V0
	034 Move [X31+48], X31
	035 Move [X31+32], X19
	036 Move X19, 0xAFC000
	037 Move X21, 0xB40000
	038 Move X20, 0xAFC000
	039 Move W8, [X0+224]
	040 Move X19, [X19+312]
	041 Move X21, [X21+1112]
	042 Move X20, [X20+328]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Add X8, X31, 0
	048 Or X19, X8, 15
	049 Move X8, X19
	050 Call AsyncTaskMethodBuilder`1<Object>.Create
	051 Move X2, [X21]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Add X1, X31, 0
	056 Move X0, X19
	057 Move [X31], W8
	058 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	059 Move X1, [X20]
	060 Move X0, X19
	061 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X30, [X31+64]
	065 Move X21, [X31+72]
	066 Add X31, X31, 96
	067 Return X0

Method: System.Text.Encoding GetEncodingFromBuffer(System.Byte[] buffer, System.Int32 length, ref System.Int32 preambleLength)

Disassembly:
	0x035FBD08 LDR X20, [X20 + 0x178]
	0x035FBD0C LDR X19, [X19 + 0x4C8]
	0x035FBD10 LDR X26, [X26 + 0x4D0]
	0x035FBD14 LDRB W8, [X27 + 0x32D]
	0x035FBD18 LDR X25, [X25 + 0xB08]
	0x035FBD1C LDR X24, [X24 + 0x4C8]
	0x035FBD20 LDR X23, [X23 + 0x4D8]
	0x035FBD24 LDR X22, [X22 + 0x4E0]
	0x035FBD28 LDR X21, [X21 + 0x220]
	0x035FBD2C TBNZ X8, 0x0, 0x35FBD98
	0x035FBD30 ADRP X0, 0xAFB000
	0x035FBD34 LDR X0, [X0 + 0x178]
	0x035FBD38 BL 0x1C16CF4
	0x035FBD3C ADRP X0, 0xB21000
	0x035FBD40 LDR X0, [X0 + 0x4E0]
	0x035FBD44 BL 0x1C16CF4
	0x035FBD48 ADRP X0, 0xB21000
	0x035FBD4C LDR X0, [X0 + 0x4D8]
	0x035FBD50 BL 0x1C16CF4
	0x035FBD54 ADRP X0, 0xB21000
	0x035FBD58 LDR X0, [X0 + 0x4D0]
	0x035FBD5C BL 0x1C16CF4
	0x035FBD60 ADRP X0, 0xB3F000
	0x035FBD64 LDR X0, [X0 + 0x220]
	0x035FBD68 BL 0x1C16CF4
	0x035FBD6C ADRP X0, 0xB3F000
	0x035FBD70 LDR X0, [X0 + 0x4C8]
	0x035FBD74 BL 0x1C16CF4
	0x035FBD78 ADRP X0, 0xB3B000
	0x035FBD7C LDR X0, [X0 + 0xB08]
	0x035FBD80 BL 0x1C16CF4
	0x035FBD84 ADRP X0, 0xB21000
	0x035FBD88 LDR X0, [X0 + 0x4C8]
	0x035FBD8C BL 0x1C16CF4
	0x035FBD90 MOVZ W8, 0x1
	0x035FBD94 STRB W8, [X27 + 0x32D]
	0x035FBD98 LDR X0, [X20]
	0x035FBD9C BL 0x1C16F10
	0x035FBDA0 LDR X1, [X19]
	0x035FBDA4 MOV X19, X0
	0x035FBDA8 BL 0x35FB944
	0x035FBDAC LDR X8, [X20]
	0x035FBDB0 LDR X8, [X8 + 0xB8]
	0x035FBDB4 STR X19, [X8]
	0x035FBDB8 LDR X0, [X20]
	0x035FBDBC BL 0x1C16F10
	0x035FBDC0 LDR X1, [X26]
	0x035FBDC4 MOV X19, X0
	0x035FBDC8 BL 0x35FB944
	0x035FBDCC LDR X0, [X20]
	0x035FBDD0 LDR X8, [X0 + 0xB8]
	0x035FBDD4 STR X19, [X8 + 0x8]
	0x035FBDD8 BL 0x1C16F10
	0x035FBDDC LDR X1, [X25]
	0x035FBDE0 MOV X19, X0
	0x035FBDE4 BL 0x35FB944
	0x035FBDE8 LDR X0, [X20]
	0x035FBDEC LDR X8, [X0 + 0xB8]
	0x035FBDF0 STR X19, [X8 + 0x10]
	0x035FBDF4 BL 0x1C16F10
	0x035FBDF8 LDR X1, [X24]
	0x035FBDFC MOV X19, X0
	0x035FBE00 BL 0x35FB944
	0x035FBE04 LDR X0, [X20]
	0x035FBE08 LDR X8, [X0 + 0xB8]
	0x035FBE0C STR X19, [X8 + 0x18]
	0x035FBE10 BL 0x1C16F10
	0x035FBE14 LDR X1, [X23]
	0x035FBE18 MOV X19, X0
	0x035FBE1C BL 0x35FB944
	0x035FBE20 LDR X0, [X20]
	0x035FBE24 LDR X8, [X0 + 0xB8]
	0x035FBE28 STR X19, [X8 + 0x20]
	0x035FBE2C BL 0x1C16F10
	0x035FBE30 LDR X1, [X22]
	0x035FBE34 MOV X19, X0
	0x035FBE38 BL 0x35FB944
	0x035FBE3C LDR X0, [X20]
	0x035FBE40 LDR X8, [X0 + 0xB8]
	0x035FBE44 STR X19, [X8 + 0x28]
	0x035FBE48 BL 0x1C16F10
	0x035FBE4C LDR X1, [X21]
	0x035FBE50 MOV X19, X0
	0x035FBE54 BL 0x35FB944
	0x035FBE58 LDR X8, [X20]
	0x035FBE5C LDP X22, X21, [X31 + 0x30]
	0x035FBE60 LDP X24, X23, [X31 + 0x20]
	0x035FBE64 LDP X26, X25, [X31 + 0x10]
	0x035FBE68 LDR X8, [X8 + 0xB8]
	0x035FBE6C STR X19, [X8 + 0x30]
	0x035FBE70 LDP X20, X19, [X31 + 0x40]
	0x035FBE74 LDP X30, X27, [X31], #0x50
	0x035FBE78 RET
	0x035FBE7C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xDE6000
	010 Move X23, 0xB40000
	011 Move W8, [X22+804]
	012 Move X23, [X23+1120]
	013 Move X19, X2
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xB40000
	021 Move X0, [X0+1120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+804], W8
	025 Move X0, [X23]
	026 Move W1, 3
	027 Call 0x1C17D6C
	028 Move X22, X0
	029 Move X0, X31
	030 Call Encoding.get_UTF8
	031 Compare X22, 0
	032 JumpIfEqual {108}
	033 Move X23, X0
	034 Compare X0, 0
	035 JumpIfEqual {42}
	036 Move X8, [X22]
	037 Move X0, X23
	038 Move X1, [X8+64]
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfEqual {109}
	042 Move W8, [X22+24]
	043 Compare W8, 0
	044 JumpIfEqual {107}
	045 Move X0, X31
	046 Move [X22+32], X23
	047 Call Encoding.get_UTF32
	048 Move X23, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X22]
	052 Move X0, X23
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {109}
	057 Move W8, [X22+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X31
	060 Move [X22+40], X23
	061 Call Encoding.get_Unicode
	062 Move X23, X0
	063 Compare X0, 0
	064 JumpIfEqual {71}
	065 Move X8, [X22]
	066 Move X0, X23
	067 Move X1, [X8+64]
	068 Call 0x1C17E00
	069 Compare X0, 0
	070 JumpIfEqual {109}
	071 Move X8, [X22+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X22+48], X23
	075 Move X24, X31
	076 Add X25, X22, 32
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X23, [X25]
	079 Compare X23, 0
	080 JumpIfEqual {108}
	081 Move X8, [X23]
	082 Move X0, X23
	083 Move X9, [X8+408]
	084 Move X1, [X8+416]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X2, X0
	087 Move X0, X21
	088 Move W1, W20
	089 Call HttpContent.StartsWith, X0, X1, X2
	090 Move [X19], W0
	091 Compare W0, 0
	092 JumpIfNotEqual {97}
	093 Move X8, [X22+24]
	094 Add X24, X24, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X23, X31
	097 Move X0, X23
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Return X0
	107 Call 0x1C17F28
	108 Call 0x1C17F20
	109 Call 0x1C17F44
	110 Move X1, X31
	111 Call 0x1C17DEC

Method: System.Int32 StartsWith(System.Byte[] array, System.Int32 length, System.Byte[] value)

Disassembly:
	0x035FBE80 STP X20, X19, [X31 + 0x10]
	0x035FBE84 ADRP X20, 0xDE5000
	0x035FBE88 ADRP X21, 0xAF8000
	0x035FBE8C LDRB W8, [X20 + 0x32E]
	0x035FBE90 LDR X21, [X21 + 0x7D0]
	0x035FBE94 MOV X19, X0
	0x035FBE98 TBNZ X8, 0x0, 0x35FBEB0
	0x035FBE9C ADRP X0, 0xAF8000
	0x035FBEA0 LDR X0, [X0 + 0x7D0]
	0x035FBEA4 BL 0x1C16CF4
	0x035FBEA8 MOVZ W8, 0x1
	0x035FBEAC STRB W8, [X20 + 0x32E]
	0x035FBEB0 LDR X0, [X21]
	0x035FBEB4 LDR W8, [X0 + 0xE0]
	0x035FBEB8 CBNZ W8, 0x35FBEC0
	0x035FBEBC BL 0x1C16DFC
	0x035FBEC0 MOV X0, X19
	0x035FBEC4 LDP X20, X19, [X31 + 0x10]
	0x035FBEC8 MOV X1, X31
	0x035FBECC LDP X30, X21, [X31], #0x20
	0x035FBED0 B 0x33B2C54
	0x035FBED4 STP X30, X21, [X31 - 0x20]!
	0x035FBED8 STP X20, X19, [X31 + 0x10]
	0x035FBEDC ADRP X21, 0xDE5000
	0x035FBEE0 ADRP X20, 0xAFB000
	0x035FBEE4 LDRB W8, [X21 + 0x331]
	0x035FBEE8 LDR X20, [X20 + 0x178]
	0x035FBEEC MOV X19, X0
	0x035FBEF0 TBNZ X8, 0x0, 0x35FBF08

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {25}
	004 Move X8, X0
	005 Move W0, [X2+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Compare X8, 0
	010 JumpIfEqual {25}
	011 Move W9, [X8+24]
	012 Move W10, W31
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X10, W10
	015 Add X11, X8, X10
	016 Add X12, X2, X10
	017 Move W11, [X11+32]
	018 Move W12, [X12+32]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add W10, W10, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F28
	025 Call 0x1C17F20

Method: System.Threading.Tasks.Task SerializeToStreamAsync(System.IO.Stream stream, System.Net.TransportContext context)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean TryComputeLength(out System.Int64 length)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x035FA78C MOV X20, X0
	0x035FA790 ADRP X0, 0xB40000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

