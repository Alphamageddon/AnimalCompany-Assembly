Type: System.Net.Http.Headers.NameValueHeaderValue

Method: System.Void .ctor(System.Net.Http.Headers.NameValueHeaderValue source)

Disassembly:
	0x0360092C LDR X1, [X23]
	0x03600930 MOV X0, X19
	0x03600934 MOV X2, X31
	0x03600938 BL 0x32333E0
	0x0360093C LDP X8, X9, [X20 + 0x28]
	0x03600940 ANDS W31, W8, 0xFF
	0x03600944 STP X8, X9, [X31]
	0x03600948 B.EQ 0x3600994
	0x0360094C LDR X1, [X22]
	0x03600950 ADD X0, X31, 0x0
	0x03600954 STP X8, X9, [X31]
	0x03600958 BL 0x24349A0
	0x0360095C LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {16}
	010 Move V0, [X20+1]
	011 Move [X19+1], V0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03606DF4 MOV W1, W31
	0x03606DF8 MOV X4, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String get_Name()

Disassembly:
	0x03606DFC LDR X30, [X31], #0x30
	0x03606E00 B 0x337C0CC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03606E04 STR X30, [X31 - 0x30]!
	0x03606E08 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_Value()

Disassembly:
	0x03606E0C STP X20, X19, [X31 + 0x20]
	0x03606E10 ADRP X21, 0xDDA000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Net.Http.Headers.NameValueHeaderValue Create(System.String name, System.String value)

Disassembly:
	0x035FFCEC ADRP X23, 0xB3B000
	0x035FFCF0 ADRP X20, 0xB3B000
	0x035FFCF4 LDRB W8, [X22 + 0x3A3]
	0x035FFCF8 LDR X23, [X23 + 0x558]
	0x035FFCFC LDR X20, [X20 + 0x550]
	0x035FFD00 MOV X19, X2
	0x035FFD04 MOV X24, X1
	0x035FFD08 MOV X21, X0
	0x035FFD0C TBNZ X8, 0x0, 0x35FFD54
	0x035FFD10 ADRP X0, 0xB3B000
	0x035FFD14 LDR X0, [X0 + 0x580]
	0x035FFD18 BL 0x1C16CF4
	0x035FFD1C ADRP X0, 0xB3B000
	0x035FFD20 LDR X0, [X0 + 0x550]
	0x035FFD24 BL 0x1C16CF4
	0x035FFD28 ADRP X0, 0xB3B000
	0x035FFD2C LDR X0, [X0 + 0x558]
	0x035FFD30 BL 0x1C16CF4
	0x035FFD34 ADRP X0, 0xB3B000
	0x035FFD38 LDR X0, [X0 + 0x628]
	0x035FFD3C BL 0x1C16CF4
	0x035FFD40 ADRP X0, 0xB1C000
	0x035FFD44 LDR X0, [X0 + 0x8D0]
	0x035FFD48 BL 0x1C16CF4
	0x035FFD4C MOVZ W8, 0x1
	0x035FFD50 STRB W8, [X22 + 0x3A3]
	0x035FFD54 LDR X0, [X23]
	0x035FFD58 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDE2000
	007 Move X22, 0xB3C000
	008 Move W8, [X21+927]
	009 Move X22, [X22+1576]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB3C000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+927], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Compare X21, 0
	027 JumpIfEqual {37}
	028 Move [X21+16], X19
	029 Move [X21+24], X20
	030 Move X0, X21
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03606E14 ADRP X22, 0xAEF000
	0x03606E18 LDRB W8, [X21 + 0x3B7]
	0x03606E1C LDR X22, [X22 + 0xC48]
	0x03606E20 MOV X19, X1
	0x03606E24 MOV X20, X0
	0x03606E28 TBNZ X8, 0x0, 0x3606E40
	0x03606E2C ADRP X0, 0xAEF000
	0x03606E30 LDR X0, [X0 + 0xC48]
	0x03606E34 BL 0x1C16CF4
	0x03606E38 MOVZ W8, 0x1
	0x03606E3C STRB W8, [X21 + 0x3B7]
	0x03606E40 LDR X0, [X22]
	0x03606E44 LDR W8, [X0 + 0xE0]
	0x03606E48 CBNZ W8, 0x3606E50
	0x03606E4C BL 0x1C16DFC
	0x03606E50 MOV X0, X31
	0x03606E54 BL 0x3338524
	0x03606E58 MOV X2, X0
	0x03606E5C MOV X0, X20
	0x03606E60 MOV X3, X19
	0x03606E64 LDP X20, X19, [X31 + 0x20]
	0x03606E68 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDDB000
	006 Move X21, 0xB35000
	007 Move W8, [X20+928]
	008 Move X21, [X21+1576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB35000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+928], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call NameValueHeaderValue..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03606E6C MOV W1, W31
	0x03606E70 MOV X4, X31
	0x03606E74 LDR X30, [X31], #0x30
	0x03606E78 B 0x337D7DC
	0x03606E7C STR X30, [X31 - 0x30]!
	0x03606E80 STP X22, X21, [X31 + 0x10]
	0x03606E84 STP X20, X19, [X31 + 0x20]
	0x03606E88 ADRP X21, 0xDDA000
	0x03606E8C ADRP X22, 0xAF6000
	0x03606E90 LDRB W8, [X21 + 0x3B8]
	0x03606E94 LDR X22, [X22 + 0x9E8]
	0x03606E98 MOV X19, X1
	0x03606E9C MOV X20, X0
	0x03606EA0 TBNZ X8, 0x0, 0x3606EB8
	0x03606EA4 ADRP X0, 0xAF6000
	0x03606EA8 LDR X0, [X0 + 0x9E8]
	0x03606EAC BL 0x1C16CF4
	0x03606EB0 MOVZ W8, 0x1
	0x03606EB4 STRB W8, [X21 + 0x3B8]
	0x03606EB8 LDR X0, [X22]
	0x03606EBC LDR W8, [X0 + 0xE0]
	0x03606EC0 CBNZ W8, 0x3606EC8
	0x03606EC4 BL 0x1C16DFC
	0x03606EC8 MOV X0, X20
	0x03606ECC MOV X1, X31
	0x03606ED0 BL 0x3322D04
	0x03606ED4 MOVZ W8, 0x1
	0x03606ED8 STR X0, [X19]
	0x03606EDC LDP X20, X19, [X31 + 0x20]
	0x03606EE0 LDP X22, X21, [X31 + 0x10]
	0x03606EE4 MOV W0, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move X1, X31
	009 Call String.ToLowerInvariant, X0
	010 Compare X0, 0
	011 JumpIfEqual {42}
	012 Move X8, [X0]
	013 Move X9, [X8+344]
	014 Move X1, [X8+352]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X20+16]
	017 Move W19, W0
	018 Move X1, X31
	019 Move X0, X8
	020 Call String.IsNullOrEmpty, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {37}
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {42}
	028 Move X1, X31
	029 Call String.ToLowerInvariant, X0
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, [X0]
	033 Move X9, [X8+344]
	034 Move X1, [X8+352]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Xor W19, W0, W19
	037 Move W0, W19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03606EE8 LDR X30, [X31], #0x30
	0x03606EEC RET
	0x03606EF0 B 0x3606EF4
	0x03606EF4 MOV X20, X0
	0x03606EF8 CMP W1, 0x1
	0x03606EFC B.NE 0x3606F60
	0x03606F00 MOV X0, X20
	0x03606F04 BL 0x3EB1AD0
	0x03606F08 MOV X20, X0
	0x03606F0C ADRP X0, 0xAF3000
	0x03606F10 LDR X0, [X0 + 0xCC0]
	0x03606F14 BL 0x1C16D08
	0x03606F18 LDR X8, [X20]
	0x03606F1C LDR X1, [X8]
	0x03606F20 BL 0x1C17270
	0x03606F24 TBZ X0, 0x0, 0x3606F38
	0x03606F28 BL 0x3EB1AE0
	0x03606F2C MOV X0, X31
	0x03606F30 MOV W8, W31
	0x03606F34 B 0x3606ED8
	0x03606F38 MOVZ W0, 0x8
	0x03606F3C BL 0x3EB1AF0
	0x03606F40 LDR X8, [X20]
	0x03606F44 STR X8, [X0]
	0x03606F48 ADRP X1, 0x8AE000
	0x03606F4C ADD X1, X1, 0xE58
	0x03606F50 MOV X2, X31
	0x03606F54 BL 0x3EB1B00
	0x03606F58 MOV X20, X0
	0x03606F5C BL 0x3EB1AE0
	0x03606F60 MOV X0, X20
	0x03606F64 BL 0x1D2C690
	0x03606F68 BL 0x1990590
	0x03606F6C STR X30, [X31 - 0x30]!
	0x03606F70 STP X22, X21, [X31 + 0x10]
	0x03606F74 STP X20, X19, [X31 + 0x20]
	0x03606F78 ADRP X20, 0xDDA000
	0x03606F7C ADRP X19, 0xB34000
	0x03606F80 LDRB W8, [X20 + 0x3B9]
	0x03606F84 LDR X19, [X19 + 0xC88]
	0x03606F88 TBNZ X8, 0x0, 0x3606FC4
	0x03606F8C ADRP X0, 0xB34000
	0x03606F90 LDR X0, [X0 + 0xC68]
	0x03606F94 BL 0x1C16CF4
	0x03606F98 ADRP X0, 0xB34000
	0x03606F9C LDR X0, [X0 + 0xC90]
	0x03606FA0 BL 0x1C16CF4
	0x03606FA4 ADRP X0, 0xB34000
	0x03606FA8 LDR X0, [X0 + 0xC98]
	0x03606FAC BL 0x1C16CF4
	0x03606FB0 ADRP X0, 0xB34000
	0x03606FB4 LDR X0, [X0 + 0xC88]
	0x03606FB8 BL 0x1C16CF4
	0x03606FBC MOVZ W8, 0x1
	0x03606FC0 STRB W8, [X20 + 0x3B9]
	0x03606FC4 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDDB000
	006 Move W8, [X21+929]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB35000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+929], W8
	018 Compare X20, 0
	019 JumpIfEqual {59}
	020 Move X8, 0xB35000
	021 Move X8, [X8+1576]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {75}
	034 Move X0, [X20+24]
	035 Move X1, [X19+24]
	036 Move W2, 5
	037 Move X3, X31
	038 Call String.Equals, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {59}
	043 Move X0, [X19+16]
	044 Move X1, X31
	045 Call String.IsNullOrEmpty, X0
	046 Move X8, [X20+16]
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {65}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X8
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call String.IsNullOrEmpty, X0
	058 Return X0
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move W0, W31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Move X1, [X19+16]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move W2, 5
	069 Move X0, X8
	070 Move X3, X31
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call String.Equals, X0, X1, X2
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean TryParsePragma(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> result)

Disassembly:
	0x03606FC8 ADRP X22, 0xB34000
	0x03606FCC ADRP X20, 0xB34000
	0x03606FD0 ADRP X21, 0xB34000
	0x03606FD4 LDR W8, [X0 + 0xE0]
	0x03606FD8 LDR X22, [X22 + 0xC68]
	0x03606FDC LDR X20, [X20 + 0xC98]
	0x03606FE0 LDR X21, [X21 + 0xC90]
	0x03606FE4 CBNZ W8, 0x3606FF0
	0x03606FE8 BL 0x1C16DFC
	0x03606FEC LDR X0, [X19]
	0x03606FF0 LDR X8, [X0 + 0xB8]
	0x03606FF4 LDR X0, [X22]
	0x03606FF8 LDR X19, [X8]
	0x03606FFC BL 0x1C16F10
	0x03607000 LDR X2, [X20]
	0x03607004 MOV X1, X19
	0x03607008 MOV X3, X31
	0x0360700C MOV X20, X0
	0x03607010 BL 0x2D30578
	0x03607014 LDR X8, [X21]
	0x03607018 LDP X22, X21, [X31 + 0x10]
	0x0360701C LDR X8, [X8 + 0xB8]
	0x03607020 STR X20, [X8]
	0x03607024 LDP X20, X19, [X31 + 0x20]
	0x03607028 LDR X30, [X31], #0x30
	0x0360702C RET
	0x03607030 STR X30, [X31 - 0x20]!
	0x03607034 STP X20, X19, [X31 + 0x10]
	0x03607038 ADRP X19, 0xDD9000
	0x0360703C ADRP X20, 0xB33000
	0x03607040 LDRB W8, [X19 + 0x3BA]
	0x03607044 LDR X20, [X20 + 0xC88]
	0x03607048 TBNZ X8, 0x0, 0x3607060
	0x0360704C ADRP X0, 0xB33000
	0x03607050 LDR X0, [X0 + 0xC88]
	0x03607054 BL 0x1C16CF4
	0x03607058 MOVZ W8, 0x1
	0x0360705C STRB W8, [X19 + 0x3BA]
	0x03607060 LDR X0, [X20]
	0x03607064 BL 0x1C16F10
	0x03607068 MOV X1, X31
	0x0360706C MOV X19, X0
	0x03607070 BL 0x33BDD8C
	0x03607074 LDR X8, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDDB000
	010 Move X25, 0xB35000
	011 Move X22, 0xB35000
	012 Move X23, 0xB35000
	013 Move W8, [X24+930]
	014 Move X25, [X25+3104]
	015 Move X22, [X22+3112]
	016 Move X23, [X23+3120]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB34000
	025 Move X0, [X0+3120]
	026 Call 0x1C17CF4
	027 Move X0, 0xB34000
	028 Move X0, [X0+3104]
	029 Call 0x1C17CF4
	030 Move X0, 0xB34000
	031 Move X0, [X0+3112]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+930], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseParameters(System.Net.Http.Headers.Lexer lexer, out System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> result, out System.Net.Http.Headers.Token t)

Disassembly:
	0x03600CCC CBNZ W8, 0x3600CD4
	0x03600CD0 BL 0x1C16DFC
	0x03600CD4 LDR X23, [X19]
	0x03600CD8 CMP W22, 0x2
	0x03600CDC B.NE 0x3600D88
	0x03600CE0 LDR W2, [X19 + 0x8]
	0x03600CE4 MOV X0, X20
	0x03600CE8 MOV X1, X23
	0x03600CEC BL 0x35FD280
	0x03600CF0 ADRP X8, 0xB25000
	0x03600CF4 LDR X8, [X8 + 0xEF0]
	0x03600CF8 MOV X2, X31
	0x03600CFC MOV X23, X0
	0x03600D00 LDR X1, [X8]
	0x03600D04 BL 0x321BA08
	0x03600D08 TBZ X0, 0x0, 0x3600D38
	0x03600D0C ADRP X22, 0xB3A000
	0x03600D10 LDR X22, [X22 + 0x698]
	0x03600D14 LDR X0, [X22]
	0x03600D18 LDR W8, [X0 + 0xE0]
	0x03600D1C CBNZ W8, 0x3600D28
	0x03600D20 BL 0x1C16DFC
	0x03600D24 LDR X0, [X22]
	0x03600D28 LDR X8, [X0 + 0xB8]
	0x03600D2C LDR X8, [X8]
	0x03600D30 STR X8, [X21]
	0x03600D34 B 0x3600DEC
	0x03600D38 ADRP X8, 0xB3A000
	0x03600D3C LDR X8, [X8 + 0x6A0]
	0x03600D40 MOV X0, X23
	0x03600D44 MOV X2, X31
	0x03600D48 LDR X1, [X8]
	0x03600D4C BL 0x3226EF8
	0x03600D50 TBNZ X0, 0x0, 0x3600E08
	0x03600D54 MOV X0, X20
	0x03600D58 BL 0x3600E24
	0x03600D5C CMP W0, 0x2F
	0x03600D60 B.NE 0x3600E08
	0x03600D64 LDR W8, [X20 + 0x18]
	0x03600D68 MOV X0, X20
	0x03600D6C MOV W1, W31
	0x03600D70 ADD W8, W8, 0x1
	0x03600D74 STR W8, [X20 + 0x18]
	0x03600D78 BL 0x35FCF70
	0x03600D7C MOV X23, X0
	0x03600D80 STR X0, [X19]
	0x03600D84 STR W1, [X19 + 0x8]
	0x03600D88 LDR X0, [X24]
	0x03600D8C LDR W8, [X0 + 0xE0]
	0x03600D90 CBNZ W8, 0x3600D98
	0x03600D94 BL 0x1C16DFC
	0x03600D98 CMP W23, 0x3
	0x03600D9C B.NE 0x3600E08
	0x03600DA0 ADRP X8, 0xB3A000
	0x03600DA4 LDR X8, [X8 + 0x698]
	0x03600DA8 LDR X0, [X8]
	0x03600DAC BL 0x1C16F10
	0x03600DB0 MOV X1, X31
	0x03600DB4 MOV X23, X0
	0x03600DB8 BL 0x33BDD8C
	0x03600DBC STR X23, [X21]
	0x03600DC0 LDR X1, [X19]
	0x03600DC4 LDR W2, [X19 + 0x8]
	0x03600DC8 MOV X0, X20
	0x03600DCC BL 0x35FD280
	0x03600DD0 CBZ X23, 0x3600E20
	0x03600DD4 STR X0, [X23 + 0x18]
	0x03600DD8 LDR X8, [X21]
	0x03600DDC CBZ X8, 0x3600E20
	0x03600DE0 CMP W22, 0x2
	0x03600DE4 CSET W9, EQ
	0x03600DE8 STRB W9, [X8 + 0x10]
	0x03600DEC MOV X0, X20
	0x03600DF0 MOV W1, W31
	0x03600DF4 BL 0x35FCF70
	0x03600DF8 STR X0, [X19]
	0x03600DFC MOVZ W0, 0x1
	0x03600E00 STR W1, [X19 + 0x8]
	0x03600E04 B 0x3600E0C
	0x03600E08 MOV W0, W31
	0x03600E0C LDP X20, X19, [X31 + 0x30]
	0x03600E10 LDP X22, X21, [X31 + 0x20]
	0x03600E14 LDP X24, X23, [X31 + 0x10]
	0x03600E18 LDR X30, [X31], #0x40
	0x03600E1C RET
	0x03600E20 BL 0x1C16F20
	0x03600E24 STR X30, [X31 - 0x10]!
	0x03600E28 MOV X8, X0
	0x03600E2C LDR X0, [X0 + 0x10]
	0x03600E30 CBZ X0, 0x3600E60
	0x03600E34 LDR W1, [X8 + 0x18]
	0x03600E38 LDR W8, [X0 + 0x10]
	0x03600E3C CMP W1, W8
	0x03600E40 B.GE 0x3600E54
	0x03600E44 MOV X2, X31
	0x03600E48 BL 0x3222A1C
	0x03600E4C AND W0, W0, 0xFFFF
	0x03600E50 B 0x3600E58
	0x03600E54 MOVN W0, 0x0
	0x03600E58 LDR X30, [X31], #0x10
	0x03600E5C RET
	0x03600E60 BL 0x1C16F20
	0x03600E64 LDR W8, [X0 + 0x18]
	0x03600E68 ADD W8, W8, 0x1
	0x03600E6C STR W8, [X0 + 0x18]
	0x03600E70 RET
	0x03600E74 STP X30, X25, [X31 - 0x40]!
	0x03600E78 STP X24, X23, [X31 + 0x10]
	0x03600E7C STP X22, X21, [X31 + 0x20]
	0x03600E80 STP X20, X19, [X31 + 0x30]
	0x03600E84 ADRP X24, 0xDE0000
	0x03600E88 ADRP X25, 0xB3A000
	0x03600E8C ADRP X22, 0xB3A000
	0x03600E90 ADRP X23, 0xB3A000
	0x03600E94 LDRB W8, [X24 + 0x35A]
	0x03600E98 LDR X25, [X25 + 0x6A8]
	0x03600E9C LDR X22, [X22 + 0x6B0]
	0x03600EA0 LDR X23, [X23 + 0x6B8]
	0x03600EA4 MOV X19, X2
	0x03600EA8 MOV W20, W1
	0x03600EAC MOV X21, X0
	0x03600EB0 TBNZ X8, 0x0, 0x3600EE0
	0x03600EB4 ADRP X0, 0xB3A000
	0x03600EB8 LDR X0, [X0 + 0x6B8]
	0x03600EBC BL 0x1C16CF4
	0x03600EC0 ADRP X0, 0xB3A000
	0x03600EC4 LDR X0, [X0 + 0x6A8]
	0x03600EC8 BL 0x1C16CF4
	0x03600ECC ADRP X0, 0xB3A000
	0x03600ED0 LDR X0, [X0 + 0x6B0]
	0x03600ED4 BL 0x1C16CF4
	0x03600ED8 MOVZ W8, 0x1
	0x03600EDC STRB W8, [X24 + 0x35A]
	0x03600EE0 LDR X0, [X25]
	0x03600EE4 BL 0x1C16F10
	0x03600EE8 LDR X2, [X22]
	0x03600EEC MOV X1, X31
	0x03600EF0 MOV X3, X31
	0x03600EF4 MOV X22, X0
	0x03600EF8 BL 0x2B47CB4
	0x03600EFC LDR X4, [X23]
	0x03600F00 MOV X0, X21
	0x03600F04 MOV W1, W20
	0x03600F08 MOV X2, X22
	0x03600F0C MOV X3, X19
	0x03600F10 LDP X20, X19, [X31 + 0x30]
	0x03600F14 LDP X22, X21, [X31 + 0x20]
	0x03600F18 LDP X24, X23, [X31 + 0x10]
	0x03600F1C LDP X30, X25, [X31], #0x40
	0x03600F20 B 0x21A2910
	0x03600F24 STR X30, [X31 - 0x20]!
	0x03600F28 STP X20, X19, [X31 + 0x10]
	0x03600F2C ADRP X20, 0xDE0000
	0x03600F30 LDRB W8, [X20 + 0x35B]
	0x03600F34 MOV X19, X0
	0x03600F38 TBNZ X8, 0x0, 0x3600F50
	0x03600F3C ADRP X0, 0xB3A000
	0x03600F40 LDR X0, [X0 + 0x6C0]
	0x03600F44 BL 0x1C16CF4
	0x03600F48 MOVZ W8, 0x1
	0x03600F4C STRB W8, [X20 + 0x35B]
	0x03600F50 LDRB W8, [X19 + 0x10]
	0x03600F54 LDR X1, [X19 + 0x18]
	0x03600F58 CBZ W8, 0x3600F78
	0x03600F5C ADRP X8, 0xB3A000
	0x03600F60 LDR X8, [X8 + 0x6C0]
	0x03600F64 LDP X20, X19, [X31 + 0x10]
	0x03600F68 MOV X2, X31
	0x03600F6C LDR X0, [X8]
	0x03600F70 LDR X30, [X31], #0x20
	0x03600F74 B 0x321B938
	0x03600F78 LDP X20, X19, [X31 + 0x10]
	0x03600F7C MOV X0, X1
	0x03600F80 LDR X30, [X31], #0x20
	0x03600F84 RET

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xDE1000
	015 Move X23, 0xB3B000
	016 Move X20, 0xB3B000
	017 Move W8, [X22+931]
	018 Move X23, [X23+1368]
	019 Move X20, [X20+1360]
	020 Move X19, X2
	021 Move X24, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0xB3B000
	028 Move X0, [X0+1408]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3B000
	031 Move X0, [X0+1360]
	032 Call 0x1C17CF4
	033 Move X0, 0xB3B000
	034 Move X0, [X0+1368]
	035 Call 0x1C17CF4
	036 Move X0, 0xB3B000
	037 Move X0, [X0+1576]
	038 Call 0x1C17CF4
	039 Move X0, 0xB1C000
	040 Move X0, [X0+2256]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+931], W8
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, [X20]
	047 Move X22, X0
	048 Call List`1<Object>..ctor, X0
	049 Move [X31+8], X24
	050 Move [X24], X31
	051 Compare X21, 0
	052 JumpIfEqual {191}
	053 Move X28, 0xB1C000
	054 Move X20, 0xB3B000
	055 Move X28, [X28+2256]
	056 Move X20, [X20+1408]
	057 Move X0, X21
	058 Move W1, W31
	059 Call Lexer.Scan, X0, X1
	060 Move X25, X0
	061 Move X0, [X28]
	062 Move X26, X1
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Move W1, W31
	070 Call Lexer.Scan, X0, X1
	071 Move [X19], X0
	072 Move [X19+8], W1
	073 Move X27, X0
	074 Move X0, [X28]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Move W1, W31
	082 Call Lexer.Scan, X0, X1
	083 Move [X19], X0
	084 Move [X19+8], W1
	085 Move X27, X0
	086 Move X0, [X28]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X28]
	093 Move X27, [X19]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W8, [X19+8]
	100 Move X1, [X19]
	101 And X9, X24, 0
	102 Move X0, X21
	103 Or X24, X9, X8
	104 Move X2, X24
	105 Call Lexer.GetStringValue, X0, X1
	106 Move X27, X0
	107 Move X0, X21
	108 Move W1, W31
	109 Call Lexer.Scan, X0, X1
	110 Move [X19], X0
	111 Move [X19+8], W1
	112 Move X27, X31
	113 Move X8, 0xB3B000
	114 Move X8, [X8+1576]
	115 And X29, X26, 0
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X31
	119 Move X26, X0
	120 Call Object..ctor, X0
	121 And X8, X23, 0
	122 Or X23, X29, X8
	123 Move X0, X21
	124 Move X1, X25
	125 Move X2, X23
	126 Call Lexer.GetStringValue, X0, X1
	127 Compare X26, 0
	128 JumpIfEqual {191}
	129 Move [X26+16], X27
	130 Move [X26+24], X0
	131 Compare X22, 0
	132 JumpIfEqual {191}
	133 Move W10, [X22+28]
	134 Move X8, [X22+16]
	135 Move X9, [X20]
	136 Add W10, W10, 1
	137 Move [X22+28], W10
	138 Compare X8, 0
	139 JumpIfEqual {191}
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Move W11, [X8+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add W9, W10, 1
	144 Add X8, X8, X10
	145 Move [X22+24], W9
	146 Move [X8+32], X26
	147 Move X8, [X9+32]
	148 Move X0, X22
	149 Move X1, X26
	150 Move X8, [X8+192]
	151 Move X2, [X8+112]
	152 Call List`1<Object>.AddWithResize, X0, X1
	153 Move X0, [X28]
	154 Move X25, [X19]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X8, [X31+8]
	161 Move W0, 1
	162 Move [X8], X22
	163 Move X8, [X28]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {170}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move X8, [X28]
	170 Move X8, [X8+184]
	171 Move W0, W31
	172 Move W9, [X8+8]
	173 Move X8, [X8]
	174 Move [X19+8], W9
	175 Move [X19], X8
	176 Move X20, [X31+96]
	177 Move X19, [X31+104]
	178 Move X22, [X31+80]
	179 Move X21, [X31+88]
	180 Move X24, [X31+64]
	181 Move X23, [X31+72]
	182 Move X26, [X31+48]
	183 Move X25, [X31+56]
	184 Move X28, [X31+32]
	185 Move X27, [X31+40]
	186 Move X29, [X31+16]
	187 Move X30, [X31+24]
	188 Add X31, X31, 112
	189 Return X0
	190 Move W0, W31
	191 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03607078 LDR X8, [X8 + 0xB8]
	0x0360707C STR X19, [X8]
	0x03607080 LDP X20, X19, [X31 + 0x10]
	0x03607084 LDR X30, [X31], #0x20
	0x03607088 RET
	0x0360708C MOV X1, X31
	0x03607090 B 0x33BDD8C
	0x03607094 STP X30, X21, [X31 - 0x20]!
	0x03607098 STP X20, X19, [X31 + 0x10]
	0x0360709C ADRP X20, 0xDD9000
	0x036070A0 ADRP X21, 0xAF5000
	0x036070A4 LDRB W8, [X20 + 0x3BB]
	0x036070A8 LDR X21, [X21 + 0x9E8]
	0x036070AC MOV X19, X1
	0x036070B0 TBNZ X8, 0x0, 0x36070D4
	0x036070B4 ADRP X0, 0xAEC000
	0x036070B8 LDR X0, [X0 + 0x618]
	0x036070BC BL 0x1C16CF4
	0x036070C0 ADRP X0, 0xAF5000
	0x036070C4 LDR X0, [X0 + 0x9E8]
	0x036070C8 BL 0x1C16CF4
	0x036070CC MOVZ W8, 0x1
	0x036070D0 STRB W8, [X20 + 0x3BB]
	0x036070D4 LDR X0, [X21]
	0x036070D8 LDR W8, [X0 + 0xE0]
	0x036070DC CBZ W8, 0x360710C
	0x036070E0 CBZ X19, 0x3607114
	0x036070E4 ADRP X8, 0xAEC000
	0x036070E8 LDR X8, [X8 + 0x618]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDDA000
	005 Move W8, [X20+932]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB1A000
	012 Move X0, [X0+4024]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+932], W8
	016 Move X0, [X19+16]
	017 Move X1, X31
	018 Call String.IsNullOrEmpty, X0
	019 Move X8, [X19+24]
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {29}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, X8
	027 Move X30, [X31+32]
	028 Return X0
	029 Move X9, 0xB1A000
	030 Move X9, [X9+4024]
	031 Move X2, [X19+16]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, X8
	035 Move X1, [X9]
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Call String.Concat, X0, X1, X2
	039 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.NameValueHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x036070EC MOV X0, X19
	0x036070F0 LDR X20, [X8]
	0x036070F4 MOV X1, X20
	0x036070F8 BL 0x1C16E00
	0x036070FC CBNZ X0, 0x3607118
	0x03607100 MOV X0, X19
	0x03607104 MOV X1, X20
	0x03607108 BL 0x1C171E0
	0x0360710C BL 0x1C16DFC
	0x03607110 CBNZ X19, 0x36070E4
	0x03607114 MOV X0, X31
	0x03607118 LDP X20, X19, [X31 + 0x10]
	0x0360711C MOV X1, X31
	0x03607120 LDP X30, X21, [X31], #0x20
	0x03607124 B 0x33225A0
	0x03607128 SUB X31, X31, 0x30
	0x0360712C STP X30, X21, [X31 + 0x10]
	0x03607130 STP X20, X19, [X31 + 0x20]
	0x03607134 ADRP X21, 0xDD9000
	0x03607138 LDRB W8, [X21 + 0x3BC]
	0x0360713C MOV X19, X1
	0x03607140 MOV X20, X0
	0x03607144 TBNZ X8, 0x0, 0x360715C
	0x03607148 ADRP X0, 0xAEE000
	0x0360714C LDR X0, [X0 + 0x570]
	0x03607150 BL 0x1C16CF4
	0x03607154 MOVZ W8, 0x1
	0x03607158 STRB W8, [X21 + 0x3BC]
	0x0360715C ADRP X21, 0xAEE000
	0x03607160 LDR X21, [X21 + 0x570]
	0x03607164 ADD X1, X31, 0xC
	0x03607168 MOV X0, X20
	0x0360716C STR W31, [X31 + 0xC]
	0x03607170 BL 0x3606D8C
	0x03607174 MOV W20, W0
	0x03607178 TBZ X0, 0x0, 0x36071A0
	0x0360717C LDR X0, [X21]
	0x03607180 LDR W21, [X31 + 0xC]
	0x03607184 LDR W8, [X0 + 0xE0]
	0x03607188 CBNZ W8, 0x3607190
	0x0360718C BL 0x1C16DFC
	0x03607190 SCVTF D0, W21
	0x03607194 MOV X0, X31
	0x03607198 BL 0x3394754
	0x0360719C B 0x36071BC
	0x036071A0 LDR X0, [X21]
	0x036071A4 LDR W8, [X0 + 0xE0]
	0x036071A8 CBNZ W8, 0x36071B4
	0x036071AC BL 0x1C16DFC
	0x036071B0 LDR X0, [X21]
	0x036071B4 LDR X8, [X0 + 0xB8]
	0x036071B8 LDR X0, [X8]
	0x036071BC AND W8, W20, 0x1
	0x036071C0 STR X0, [X19]
	0x036071C4 LDP X20, X19, [X31 + 0x20]
	0x036071C8 LDP X30, X21, [X31 + 0x10]
	0x036071CC MOV W0, W8
	0x036071D0 ADD X31, X31, 0x30
	0x036071D4 RET
	0x036071D8 STR X30, [X31 - 0x30]!
	0x036071DC STP X22, X21, [X31 + 0x10]
	0x036071E0 STP X20, X19, [X31 + 0x20]
	0x036071E4 ADRP X21, 0xDD9000
	0x036071E8 ADRP X22, 0xAEE000
	0x036071EC LDRB W8, [X21 + 0x3BD]
	0x036071F0 LDR X22, [X22 + 0xA28]
	0x036071F4 MOV X19, X1
	0x036071F8 MOV X20, X0
	0x036071FC TBNZ X8, 0x0, 0x3607214
	0x03607200 ADRP X0, 0xAEE000
	0x03607204 LDR X0, [X0 + 0xA28]
	0x03607208 BL 0x1C16CF4
	0x0360720C MOVZ W8, 0x1
	0x03607210 STRB W8, [X21 + 0x3BD]
	0x03607214 LDR X0, [X22]
	0x03607218 LDR W8, [X0 + 0xE0]
	0x0360721C CBNZ W8, 0x3607224
	0x03607220 BL 0x1C16DFC
	0x03607224 MOV X0, X20
	0x03607228 MOV X2, X19
	0x0360722C LDP X20, X19, [X31 + 0x20]
	0x03607230 LDP X22, X21, [X31 + 0x10]
	0x03607234 MOV W1, W31
	0x03607238 MOV X3, X31
	0x0360723C LDR X30, [X31], #0x30
	0x03607240 B 0x361E23C
	0x03607244 MOV X1, X31
	0x03607248 B 0x33BDD8C
	0x0360724C LDR X0, [X0 + 0x10]
	0x03607250 RET
	0x03607254 STR X1, [X0 + 0x10]
	0x03607258 RET
	0x0360725C LDR X0, [X0 + 0x18]
	0x03607260 RET
	0x03607264 STR X1, [X0 + 0x18]
	0x03607268 RET
	0x0360726C MOV X1, X31
	0x03607270 B 0x33C5A24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDDA000
	008 Move W8, [X22+933]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB34000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move X0, 0xB15000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+933], W8
	024 Move [X21], X31
	025 Compare X20, 0
	026 JumpIfEqual {109}
	027 Move X23, 0xB15000
	028 Move X23, [X23+2256]
	029 Move X0, X20
	030 Move W1, W31
	031 Call Lexer.Scan, X0, X1
	032 Move [X19], X0
	033 Move [X19+8], W1
	034 Move X22, X0
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0xB34000
	042 Move X8, [X8+1576]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X22, X0
	047 Call Object..ctor, X0
	048 Move X1, [X19]
	049 Move W2, [X19+8]
	050 Move X0, X20
	051 Call Lexer.GetStringValue, X0, X1
	052 Compare X22, 0
	053 JumpIfEqual {109}
	054 Move [X22+24], X0
	055 Move X0, X20
	056 Move W1, W31
	057 Move [X21], X22
	058 Call Lexer.Scan, X0, X1
	059 Move [X19], X0
	060 Move [X19+8], W1
	061 Move X22, X0
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X20
	069 Move W1, W31
	070 Call Lexer.Scan, X0, X1
	071 Move [X19], X0
	072 Move [X19+8], W1
	073 Move X22, X0
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X23]
	081 Move X22, [X19]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X1, [X19]
	088 Move W2, [X19+8]
	089 Move X21, [X21]
	090 Move X0, X20
	091 Call Lexer.GetStringValue, X0, X1
	092 Compare X21, 0
	093 JumpIfEqual {109}
	094 Move [X21+16], X0
	095 Move X0, X20
	096 Move W1, W31
	097 Call Lexer.Scan, X0, X1
	098 Move [X19], X0
	099 Move [X19+8], W1
	100 Move W0, 1
	101 Move W0, W31
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return X0
	109 Call 0x1C17F20

