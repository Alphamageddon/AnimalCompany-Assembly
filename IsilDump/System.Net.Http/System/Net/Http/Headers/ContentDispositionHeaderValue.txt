Type: System.Net.Http.Headers.ContentDispositionHeaderValue

Method: System.Void .ctor()

Disassembly:
	0x03600644 LDRB W8, [X23 + 0x385]
	0x03600648 LDR X22, [X22 + 0x8D0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Net.Http.Headers.ContentDispositionHeaderValue source)

Disassembly:
	0x0360064C MOV X21, X2
	0x03600650 MOV X20, X0
	0x03600654 UBFM X19, X1, 0x20, 0x3F
	0x03600658 TBNZ X8, 0x0, 0x3600670
	0x0360065C ADRP X0, 0xB1B000
	0x03600660 LDR X0, [X0 + 0x8D0]
	0x03600664 BL 0x1C16CF4
	0x03600668 MOVZ W8, 0x1
	0x0360066C STRB W8, [X23 + 0x385]
	0x03600670 LDR X0, [X22]
	0x03600674 LDR W8, [X0 + 0xE0]
	0x03600678 CBNZ W8, 0x3600680
	0x0360067C BL 0x1C16DFC
	0x03600680 SUB W8, W21, W19
	0x03600684 CMP W8, 0x1
	0x03600688 B.NE 0x36006C4
	0x0360068C LDR X0, [X22]
	0x03600690 LDR X20, [X20 + 0x10]
	0x03600694 LDR W8, [X0 + 0xE0]
	0x03600698 CBNZ W8, 0x36006A0
	0x0360069C BL 0x1C16DFC
	0x036006A0 CBZ X20, 0x36006D8
	0x036006A4 MOV X0, X20
	0x036006A8 MOV W1, W19
	0x036006AC MOV X2, X31
	0x036006B0 BL 0x3222A1C
	0x036006B4 AND W8, W0, 0xFFFF
	0x036006B8 CMP W8, 0x2A
	0x036006BC CSET W0, EQ
	0x036006C0 B 0x36006C8
	0x036006C4 MOV W0, W31
	0x036006C8 LDP X20, X19, [X31 + 0x20]
	0x036006CC LDP X22, X21, [X31 + 0x10]
	0x036006D0 LDP X30, X23, [X31], #0x30
	0x036006D4 RET
	0x036006D8 BL 0x1C16F20
	0x036006DC STR X30, [X31 - 0x40]!
	0x036006E0 STP X24, X23, [X31 + 0x10]
	0x036006E4 STP X22, X21, [X31 + 0x20]
	0x036006E8 STP X20, X19, [X31 + 0x30]
	0x036006EC ADRP X24, 0xDE0000
	0x036006F0 ADRP X23, 0xAF5000
	0x036006F4 LDRB W8, [X24 + 0x387]
	0x036006F8 LDR X23, [X23 + 0xC48]
	0x036006FC MOV X19, X3
	0x03600700 MOV X22, X2
	0x03600704 MOV X20, X1
	0x03600708 MOV X21, X0
	0x0360070C TBNZ X8, 0x0, 0x3600724
	0x03600710 ADRP X0, 0xAF5000
	0x03600714 LDR X0, [X0 + 0xC48]
	0x03600718 BL 0x1C16CF4
	0x0360071C MOVZ W8, 0x1
	0x03600720 STRB W8, [X24 + 0x387]
	0x03600724 AND X2, X22, 0x0
	0x03600728 MOV X0, X21
	0x0360072C MOV X1, X20
	0x03600730 BL 0x35FD280
	0x03600734 LDR X8, [X23]
	0x03600738 MOV X20, X0
	0x0360073C LDR W9, [X8 + 0xE0]
	0x03600740 CBNZ W9, 0x360074C
	0x03600744 MOV X0, X8
	0x03600748 BL 0x1C16DFC
	0x0360074C MOV X0, X31
	0x03600750 BL 0x3338524
	0x03600754 MOV X2, X0
	0x03600758 MOV X0, X20
	0x0360075C MOV X3, X19
	0x03600760 LDP X20, X19, [X31 + 0x30]
	0x03600764 LDP X22, X21, [X31 + 0x20]
	0x03600768 LDP X24, X23, [X31 + 0x10]
	0x0360076C MOV W1, W31
	0x03600770 MOV X4, X31
	0x03600774 LDR X30, [X31], #0x40
	0x03600778 B 0x337D7DC
	0x0360077C SUB X31, X31, 0x50
	0x03600780 STR X30, [X31 + 0x10]
	0x03600784 STP X24, X23, [X31 + 0x20]
	0x03600788 STP X22, X21, [X31 + 0x30]
	0x0360078C STP X20, X19, [X31 + 0x40]
	0x03600790 ADRP X21, 0xDE0000
	0x03600794 ADRP X19, 0xAF3000
	0x03600798 LDRB W8, [X21 + 0x355]
	0x0360079C LDR X19, [X19 + 0x8F0]
	0x036007A0 MOV X20, X0
	0x036007A4 TBNZ X8, 0x0, 0x3600810
	0x036007A8 ADRP X0, 0xAF5000
	0x036007AC LDR X0, [X0 + 0xC48]
	0x036007B0 BL 0x1C16CF4
	0x036007B4 ADRP X0, 0xB1B000
	0x036007B8 LDR X0, [X0 + 0xEA8]
	0x036007BC BL 0x1C16CF4
	0x036007C0 ADRP X0, 0xB1B000
	0x036007C4 LDR X0, [X0 + 0xEB0]
	0x036007C8 BL 0x1C16CF4
	0x036007CC ADRP X0, 0xAF3000
	0x036007D0 LDR X0, [X0 + 0x8F0]
	0x036007D4 BL 0x1C16CF4
	0x036007D8 ADRP X0, 0xAF3000
	0x036007DC LDR X0, [X0 + 0xDD8]
	0x036007E0 BL 0x1C16CF4
	0x036007E4 ADRP X0, 0xAF4000
	0x036007E8 LDR X0, [X0 + 0x2A8]
	0x036007EC BL 0x1C16CF4
	0x036007F0 ADRP X0, 0xAF4000
	0x036007F4 LDR X0, [X0 + 0xEC8]
	0x036007F8 BL 0x1C16CF4
	0x036007FC ADRP X0, 0xB25000
	0x03600800 LDR X0, [X0 + 0xEF0]
	0x03600804 BL 0x1C16CF4
	0x03600808 MOVZ W8, 0x1
	0x0360080C STRB W8, [X21 + 0x355]
	0x03600810 STR X31, [X31 + 0x18]
	0x03600814 LDR X0, [X19]
	0x03600818 LDR X21, [X20 + 0x10]
	0x0360081C BL 0x1C16F10
	0x03600820 MOV X1, X21
	0x03600824 MOV X2, X31
	0x03600828 MOV X19, X0
	0x0360082C BL 0x3231CF8
	0x03600830 CBZ X19, 0x36009D4
	0x03600834 ADRP X8, 0xAF3000
	0x03600838 LDR X8, [X8 + 0xDD8]
	0x0360083C ADRP X22, 0xB1B000
	0x03600840 ADRP X21, 0xAF5000
	0x03600844 ADRP X23, 0xAF4000
	0x03600848 LDR X1, [X8]
	0x0360084C LDR X22, [X22 + 0xEB0]
	0x03600850 LDR X21, [X21 + 0xC48]
	0x03600854 LDR X23, [X23 + 0xEC8]
	0x03600858 MOV X0, X19
	0x0360085C MOV X2, X31
	0x03600860 BL 0x32333E0
	0x03600864 LDP X8, X9, [X20 + 0x18]
	0x03600868 ANDS W31, W8, 0xFF
	0x0360086C STP X8, X9, [X31]
	0x03600870 B.EQ 0x3600914
	0x03600874 LDR X1, [X22]
	0x03600878 ADRP X24, 0xAF4000
	0x0360087C LDR X24, [X24 + 0x2A8]
	0x03600880 ADD X0, X31, 0x0
	0x03600884 STP X8, X9, [X31]
	0x03600888 BL 0x24349A0
	0x0360088C LDR X8, [X21]
	0x03600890 STR X0, [X31 + 0x18]
	0x03600894 LDR W9, [X8 + 0xE0]
	0x03600898 CBNZ W9, 0x36008A4
	0x0360089C MOV X0, X8
	0x036008A0 BL 0x1C16DFC
	0x036008A4 MOV X0, X31
	0x036008A8 BL 0x3338524
	0x036008AC MOV X1, X0
	0x036008B0 ADD X0, X31, 0x18

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0xDE1000
	012 Move W8, [X21+842]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB3B000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move X0, 0xB3B000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move X0, 0xB3B000
	026 Move X0, [X0+1400]
	027 Call 0x1C17CF4
	028 Move X0, 0xB3B000
	029 Move X0, [X0+1472]
	030 Call 0x1C17CF4
	031 Move X0, 0xB3B000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move X0, 0xB3B000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+842], W8
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Call Object..ctor, X0
	045 Compare X20, 0
	046 JumpIfEqual {125}
	047 Move X8, [X20+16]
	048 Move [X19+16], X8
	049 Move X0, [X20+24]
	050 Compare X0, 0
	051 JumpIfEqual {113}
	052 Move X8, 0xB3B000
	053 Move X8, [X8+1416]
	054 Move X24, 0xB3B000
	055 Move X24, [X24+1392]
	056 Move X25, 0xB3B000
	057 Move X1, [X8]
	058 Move X26, 0xB3B000
	059 Move X23, 0xB3B000
	060 Move X25, [X25+1576]
	061 Move X26, [X26+1472]
	062 Move X23, [X23+1384]
	063 Add X8, X31, 8
	064 Call List`1<Object>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+24]
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X1, [X24]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {110}
	076 Move X22, [X31+48]
	077 Move X0, X19
	078 Call ContentDispositionHeaderValue.get_Parameters, X0
	079 Move X20, X0
	080 Move X0, [X25]
	081 Call 0x1C17F10
	082 Move X21, X0
	083 Move X1, X22
	084 Call NameValueHeaderValue..ctor, X0, X1
	085 Compare X20, 0
	086 JumpIfEqual {124}
	087 Move X8, [X20]
	088 Move X1, [X26]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 2
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 2
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move X1, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X1, [X23]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.Dispose, X0
	113 Move X20, [X31+128]
	114 Move X19, [X31+136]
	115 Move X22, [X31+112]
	116 Move X21, [X31+120]
	117 Move X24, [X31+96]
	118 Move X23, [X31+104]
	119 Move X26, [X31+80]
	120 Move X25, [X31+88]
	121 Move X30, [X31+64]
	122 Add X31, X31, 144
	123 Return 
	124 Call 0x1C17F20
	125 Move X0, 0xAF9000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xAFF000
	131 Move X0, [X0+1408]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call ArgumentNullException..ctor, X0, X1
	137 Move X0, 0xB3B000
	138 Move X0, [X0+1648]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Call 0x1C17DEC
	143 Move X19, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X1, [X23]
	150 Add X0, X31, 32
	151 Call Enumerator<Object>.Dispose, X0
	152 Compare X20, 0
	153 JumpIfEqual {113}
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Move X20, X31
	157 Move X19, X0
	158 Move X1, [X23]
	159 Add X0, X31, 32
	160 Call Enumerator<Object>.Dispose, X0
	161 Compare X20, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call 0x1D2D690
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Call 0x1991590

Method: System.Collections.Generic.ICollection`1<System.Net.Http.Headers.NameValueHeaderValue> get_Parameters()

Disassembly:
	0x036008B4 MOV X2, X31
	0x036008B8 BL 0x337CC98
	0x036008BC MOV X1, X0
	0x036008C0 MOV X0, X19
	0x036008C4 MOV X2, X31
	0x036008C8 BL 0x32333E0
	0x036008CC LDR X1, [X24]
	0x036008D0 MOV X0, X19
	0x036008D4 MOV X2, X31
	0x036008D8 BL 0x32333E0
	0x036008DC LDUR V0, [X20 + 0x38]
	0x036008E0 LDR X1, [X22]
	0x036008E4 ADD X0, X31, 0x0
	0x036008E8 STR V0, [X31]
	0x036008EC BL 0x24349A0
	0x036008F0 STR X0, [X31 + 0x18]
	0x036008F4 MOV X0, X31
	0x036008F8 BL 0x3338524
	0x036008FC MOV X1, X0
	0x03600900 ADD X0, X31, 0x18
	0x03600904 MOV X2, X31
	0x03600908 BL 0x337CC98
	0x0360090C MOV X1, X0
	0x03600910 B 0x3600920
	0x03600914 ADRP X8, 0xB25000
	0x03600918 LDR X8, [X8 + 0xEF0]
	0x0360091C LDR X1, [X8]
	0x03600920 MOV X0, X19
	0x03600924 MOV X2, X31
	0x03600928 BL 0x32333E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE1000
	005 Move W8, [X20+843]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB3B000
	012 Move X0, [X0+1360]
	013 Call 0x1C17CF4
	014 Move X0, 0xB3B000
	015 Move X0, [X0+1368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+843], W8
	019 Move X20, [X19+24]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xB3B000
	023 Move X8, [X8+1368]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB3B000
	027 Move X8, [X8+1360]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+24], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03600960 STR X0, [X31 + 0x18]
	0x03600964 LDR W9, [X8 + 0xE0]
	0x03600968 CBNZ W9, 0x3600974
	0x0360096C MOV X0, X8
	0x03600970 BL 0x1C16DFC
	0x03600974 MOV X0, X31
	0x03600978 BL 0x3338524
	0x0360097C MOV X1, X0
	0x03600980 ADD X0, X31, 0x18
	0x03600984 MOV X2, X31
	0x03600988 BL 0x337CC98
	0x0360098C MOV X1, X0
	0x03600990 B 0x36009A0
	0x03600994 ADRP X8, 0xB25000
	0x03600998 LDR X8, [X8 + 0xEF0]
	0x0360099C LDR X1, [X8]
	0x036009A0 MOV X0, X19
	0x036009A4 MOV X2, X31
	0x036009A8 BL 0x32333E0
	0x036009AC LDR X8, [X19]
	0x036009B0 MOV X0, X19
	0x036009B4 LDP X9, X1, [X8 + 0x168]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDE1000
	006 Move X21, 0xB3B000
	007 Move W8, [X20+844]
	008 Move X21, [X21+1656]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB3B000
	015 Move X0, [X0+1656]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+844], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call ContentDispositionHeaderValue..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x036009B8 BLR X9
	0x036009BC LDP X20, X19, [X31 + 0x40]
	0x036009C0 LDP X22, X21, [X31 + 0x30]
	0x036009C4 LDP X24, X23, [X31 + 0x20]
	0x036009C8 LDR X30, [X31 + 0x10]
	0x036009CC ADD X31, X31, 0x50
	0x036009D0 RET
	0x036009D4 BL 0x1C16F20
	0x036009D8 MOV X1, X31
	0x036009DC B 0x33BDD8C
	0x036009E0 LDRB W0, [X0 + 0x10]
	0x036009E4 RET
	0x036009E8 AND W8, W1, 0x1
	0x036009EC STRB W8, [X0 + 0x10]
	0x036009F0 RET
	0x036009F4 LDR X0, [X0 + 0x18]
	0x036009F8 RET
	0x036009FC STR X1, [X0 + 0x18]
	0x03600A00 RET
	0x03600A04 MOV X1, X31
	0x03600A08 B 0x33C5A24
	0x03600A0C STP X30, X21, [X31 - 0x20]!
	0x03600A10 STP X20, X19, [X31 + 0x10]
	0x03600A14 ADRP X21, 0xDE0000
	0x03600A18 LDRB W8, [X21 + 0x356]
	0x03600A1C MOV X20, X1
	0x03600A20 MOV X19, X0
	0x03600A24 TBNZ X8, 0x0, 0x3600A3C
	0x03600A28 ADRP X0, 0xB3A000
	0x03600A2C LDR X0, [X0 + 0x698]
	0x03600A30 BL 0x1C16CF4
	0x03600A34 MOVZ W8, 0x1
	0x03600A38 STRB W8, [X21 + 0x356]
	0x03600A3C CBZ X20, 0x3600AAC
	0x03600A40 ADRP X8, 0xB3A000
	0x03600A44 LDR X8, [X8 + 0x698]
	0x03600A48 LDR X9, [X20]
	0x03600A4C LDR X8, [X8]
	0x03600A50 LDRB W11, [X9 + 0x130]
	0x03600A54 LDRB W10, [X8 + 0x130]
	0x03600A58 CMP W11, W10
	0x03600A5C B.CC 0x3600AAC
	0x03600A60 LDR X9, [X9 + 0xC8]
	0x03600A64 ADD X9, X9, X10, 0x3, LSL
	0x03600A68 LDUR X9, [X9 - 0x8]
	0x03600A6C CMP X9, X8
	0x03600A70 CSEL X20, X20, X31, EQ
	0x03600A74 B.NE 0x3600AAC
	0x03600A78 CBZ X20, 0x3600ABC
	0x03600A7C LDR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDE1000
	006 Move W8, [X21+845]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB3B000
	014 Move X0, [X0+1424]
	015 Call 0x1C17CF4
	016 Move X0, 0xB3B000
	017 Move X0, [X0+1656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+845], W8
	021 Compare X20, 0
	022 JumpIfEqual {57}
	023 Move X8, 0xB3B000
	024 Move X8, [X8+1656]
	025 Move X9, [X20]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Compare X20, 0
	036 JumpIfEqual {63}
	037 Move X0, [X20+16]
	038 Move X1, [X19+16]
	039 Move W2, 5
	040 Move X3, X31
	041 Call String.Equals, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {57}
	046 Move X8, 0xB3B000
	047 Move X0, [X20+24]
	048 Move X1, [X19+24]
	049 Move X8, [X8+1424]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X2, [X8]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call 0x21A2DF4, X0, X1
	056 Return X0
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W0, W31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03600A80 LDR X1, [X19 + 0x18]
	0x03600A84 MOV X2, X31
	0x03600A88 BL 0x321BA08
	0x03600A8C TBZ X0, 0x0, 0x3600AAC
	0x03600A90 LDR X0, [X20 + 0x18]
	0x03600A94 LDR X1, [X19 + 0x18]
	0x03600A98 LDP X20, X19, [X31 + 0x10]
	0x03600A9C MOVZ W2, 0x4
	0x03600AA0 MOV X3, X31
	0x03600AA4 LDP X30, X21, [X31], #0x20
	0x03600AA8 B 0x3226C60
	0x03600AAC LDP X20, X19, [X31 + 0x10]
	0x03600AB0 MOV W0, W31
	0x03600AB4 LDP X30, X21, [X31], #0x20
	0x03600AB8 RET
	0x03600ABC BL 0x1C16F20
	0x03600AC0 SUB X31, X31, 0x30
	0x03600AC4 STP X30, X21, [X31 + 0x10]
	0x03600AC8 STP X20, X19, [X31 + 0x20]
	0x03600ACC ADRP X21, 0xDE0000
	0x03600AD0 ADRP X20, 0xAF3000
	0x03600AD4 LDRB W8, [X21 + 0x357]
	0x03600AD8 LDR X20, [X20 + 0xB58]
	0x03600ADC MOV X19, X0
	0x03600AE0 TBNZ X8, 0x0, 0x3600AF8
	0x03600AE4 ADRP X0, 0xAF3000
	0x03600AE8 LDR X0, [X0 + 0xB58]
	0x03600AEC BL 0x1C16CF4
	0x03600AF0 MOVZ W8, 0x1
	0x03600AF4 STRB W8, [X21 + 0x357]
	0x03600AF8 LDRB W8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE1000
	005 Move W8, [X20+846]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB3B000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+846], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move X1, X31
	020 Call String.ToLowerInvariant, X0
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, [X0]
	024 Move X20, 0xB3B000
	025 Move X9, [X8+344]
	026 Move X1, [X8+352]
	027 Move X20, [X20+1448]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19+24]
	030 Move X1, [X20]
	031 Move W19, W0
	032 Move X0, X8
	033 Call 0x21EBCDC, X0
	034 Xor W0, W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03600AFC LDR X0, [X20]
	0x03600B00 STRB W8, [X31 + 0xC]
	0x03600B04 LDR W8, [X0 + 0xE0]
	0x03600B08 CBNZ W8, 0x3600B10
	0x03600B0C BL 0x1C16DFC
	0x03600B10 ADD X0, X31, 0xC
	0x03600B14 MOV X1, X31
	0x03600B18 BL 0x33176B4
	0x03600B1C LDR X8, [X19 + 0x18]
	0x03600B20 CBZ X8, 0x3600B4C
	0x03600B24 LDR X9, [X8]
	0x03600B28 MOV W19, W0
	0x03600B2C MOV X0, X8
	0x03600B30 LDP X10, X1, [X9 + 0x158]
	0x03600B34 BLR X10
	0x03600B38 EOR W0, W0, W19, 0x0
	0x03600B3C LDP X20, X19, [X31 + 0x20]
	0x03600B40 LDP X30, X21, [X31 + 0x10]
	0x03600B44 ADD X31, X31, 0x30
	0x03600B48 RET
	0x03600B4C BL 0x1C16F20
	0x03600B50 SUB X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDE1000
	006 Move X21, 0xB3B000
	007 Move W8, [X20+847]
	008 Move X21, [X21+1664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB3B000
	015 Move X0, [X0+1664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+847], W8
	019 Move X20, [X19+16]
	020 Move X0, [X19+24]
	021 Move X1, [X21]
	022 Call 0x21A2EFC, X0
	023 Move X1, X0
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Concat, X0, X1
	031 Return X0

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.ContentDispositionHeaderValue parsedValue)

Disassembly:
	0x03600B54 STP X30, X23, [X31 + 0x10]
	0x03600B58 STP X22, X21, [X31 + 0x20]
	0x03600B5C STP X20, X19, [X31 + 0x30]
	0x03600B60 ADRP X23, 0xDE0000
	0x03600B64 ADRP X21, 0xB1B000
	0x03600B68 ADRP X22, 0xB3A000
	0x03600B6C LDRB W8, [X23 + 0x358]
	0x03600B70 LDR X21, [X21 + 0x8C8]
	0x03600B74 LDR X22, [X22 + 0x698]
	0x03600B78 MOV X19, X1
	0x03600B7C MOV X20, X0
	0x03600B80 TBNZ X8, 0x0, 0x3600BB0
	0x03600B84 ADRP X0, 0xB3A000
	0x03600B88 LDR X0, [X0 + 0x698]
	0x03600B8C BL 0x1C16CF4
	0x03600B90 ADRP X0, 0xB1B000
	0x03600B94 LDR X0, [X0 + 0x8C8]
	0x03600B98 BL 0x1C16CF4
	0x03600B9C ADRP X0, 0xB1B000
	0x03600BA0 LDR X0, [X0 + 0x8D0]
	0x03600BA4 BL 0x1C16CF4
	0x03600BA8 MOVZ W8, 0x1
	0x03600BAC STRB W8, [X23 + 0x358]
	0x03600BB0 LDR X0, [X21]
	0x03600BB4 STR W31, [X31 + 0x8]
	0x03600BB8 STR X31, [X31]
	0x03600BBC BL 0x1C16F10
	0x03600BC0 MOV X1, X31
	0x03600BC4 MOV X21, X0
	0x03600BC8 BL 0x33BDD8C
	0x03600BCC STR X20, [X21 + 0x10]
	0x03600BD0 LDR X0, [X22]
	0x03600BD4 LDR W8, [X0 + 0xE0]
	0x03600BD8 CBNZ W8, 0x3600BE0
	0x03600BDC BL 0x1C16DFC
	0x03600BE0 ADD X2, X31, 0x0
	0x03600BE4 MOV X0, X21
	0x03600BE8 MOV X1, X19
	0x03600BEC BL 0x3600C3C
	0x03600BF0 TBZ X0, 0x0, 0x3600C20
	0x03600BF4 ADRP X8, 0xB1B000
	0x03600BF8 LDR X8, [X8 + 0x8D0]
	0x03600BFC LDR X20, [X31]
	0x03600C00 LDR X0, [X8]
	0x03600C04 LDR W8, [X0 + 0xE0]
	0x03600C08 CBNZ W8, 0x3600C10
	0x03600C0C BL 0x1C16DFC
	0x03600C10 CMP W20, 0x1
	0x03600C14 B.NE 0x3600C20
	0x03600C18 MOVZ W0, 0x1
	0x03600C1C B 0x3600C28
	0x03600C20 MOV W0, W31
	0x03600C24 STR X31, [X19]
	0x03600C28 LDP X20, X19, [X31 + 0x30]
	0x03600C2C LDP X22, X21, [X31 + 0x20]
	0x03600C30 LDP X30, X23, [X31 + 0x10]
	0x03600C34 ADD X31, X31, 0x40
	0x03600C38 RET
	0x03600C3C STR X30, [X31 - 0x40]!
	0x03600C40 STP X24, X23, [X31 + 0x10]
	0x03600C44 STP X22, X21, [X31 + 0x20]
	0x03600C48 STP X20, X19, [X31 + 0x30]
	0x03600C4C ADRP X22, 0xDE0000
	0x03600C50 LDRB W8, [X22 + 0x359]
	0x03600C54 MOV X19, X2
	0x03600C58 MOV X21, X1
	0x03600C5C MOV X20, X0
	0x03600C60 TBNZ X8, 0x0, 0x3600C9C
	0x03600C64 ADRP X0, 0xB3A000
	0x03600C68 LDR X0, [X0 + 0x698]
	0x03600C6C BL 0x1C16CF4
	0x03600C70 ADRP X0, 0xB1B000
	0x03600C74 LDR X0, [X0 + 0x8D0]
	0x03600C78 BL 0x1C16CF4
	0x03600C7C ADRP X0, 0xB3A000
	0x03600C80 LDR X0, [X0 + 0x6A0]
	0x03600C84 BL 0x1C16CF4
	0x03600C88 ADRP X0, 0xB25000
	0x03600C8C LDR X0, [X0 + 0xEF0]
	0x03600C90 BL 0x1C16CF4
	0x03600C94 MOVZ W8, 0x1
	0x03600C98 STRB W8, [X22 + 0x359]
	0x03600C9C STR X31, [X21]
	0x03600CA0 CBZ X20, 0x3600E20
	0x03600CA4 ADRP X24, 0xB1B000
	0x03600CA8 LDR X24, [X24 + 0x8D0]
	0x03600CAC MOV X0, X20
	0x03600CB0 MOV W1, W31
	0x03600CB4 BL 0x35FCF70
	0x03600CB8 STR X0, [X19]
	0x03600CBC STR W1, [X19 + 0x8]
	0x03600CC0 MOV X22, X0
	0x03600CC4 LDR X0, [X24]
	0x03600CC8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0xDE1000
	009 Move X20, 0xB1C000
	010 Move X23, 0xB1C000
	011 Move W8, [X22+848]
	012 Move X20, [X20+2248]
	013 Move X23, [X23+2256]
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB3B000
	021 Move X0, [X0+1656]
	022 Call 0x1C17CF4
	023 Move X0, 0xB1C000
	024 Move X0, [X0+2248]
	025 Call 0x1C17CF4
	026 Move X0, 0xB1C000
	027 Move X0, [X0+2256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+848], W8
	031 Move [X19], X31
	032 Move X0, [X20]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call Object..ctor, X0
	037 Move X0, X20
	038 Move W1, W31
	039 Move [X20+16], X21
	040 Call Lexer.Scan, X0, X1
	041 Move X21, X0
	042 Move X0, [X23]
	043 Move X22, X1
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 And X2, X22, 0
	050 Move X0, X20
	051 Move X1, X21
	052 Move [X31+8], X31
	053 Call Lexer.GetStringValue, X0, X1
	054 Move X21, X0
	055 Move X0, X20
	056 Move W1, W31
	057 Call Lexer.Scan, X0, X1
	058 Move X22, X0
	059 Move X0, [X23]
	060 Move [X31+16], X22
	061 Move [X31+24], W1
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X1, X31, 8
	069 Add X2, X31, 16
	070 Move X0, X20
	071 Call NameValueHeaderValue.TryParseParameters, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {97}
	076 Move X0, [X23]
	077 Move X20, [X31+16]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0xB3B000
	084 Move X8, [X8+1656]
	085 Move X0, [X8]
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X20, X0
	089 Call Object..ctor, X0
	090 Compare X20, 0
	091 JumpIfEqual {106}
	092 Move X8, [X31+8]
	093 Move W0, 1
	094 Move [X20+16], X21
	095 Move [X20+24], X8
	096 Move [X19], X20
	097 Move W0, W31
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X30, [X31+32]
	103 Move X23, [X31+40]
	104 Add X31, X31, 80
	105 Return X0
	106 Call 0x1C17F20

