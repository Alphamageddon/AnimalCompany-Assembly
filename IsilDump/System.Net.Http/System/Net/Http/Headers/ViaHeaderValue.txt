Type: System.Net.Http.Headers.ViaHeaderValue

Method: System.Void .ctor()

Disassembly:
	0x0360B6DC ADRP X0, 0xB1D000
	0x0360B6E0 LDR X0, [X0 + 0x260]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String get_Comment()

Disassembly:
	0x0360B6E4 BL 0x1C16CF4
	0x0360B6E8 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Comment(System.String value)

Disassembly:
	0x0360B6EC STRB W8, [X21 + 0x3F9]
	0x0360B6F0 CBZ X19, 0x360B730

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_ProtocolName()

Disassembly:
	0x0360B6F4 ADRP X8, 0xB29000
	0x0360B6F8 LDR X8, [X8 + 0x940]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_ProtocolName(System.String value)

Disassembly:
	0x0360B6FC LDR W21, [X19 + 0x18]
	0x0360B700 LDR X0, [X8]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String get_ProtocolVersion()

Disassembly:
	0x0360B704 LDR W8, [X0 + 0xE0]
	0x0360B708 CBNZ W8, 0x360B710

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_ProtocolVersion(System.String value)

Disassembly:
	0x0360B70C BL 0x1C16DFC
	0x0360B710 ADD X1, X19, 0x20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_ReceivedBy()

Disassembly:
	0x0360B714 MOV X0, X20
	0x0360B718 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ReceivedBy(System.String value)

Disassembly:
	0x0360B71C MOV X2, X21
	0x0360B720 MOV W3, W31

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x0360B724 MOV W4, W31
	0x0360B728 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0360B72C B 0x360B778
	0x0360B730 ADRP X0, 0xAED000
	0x0360B734 LDR X0, [X0 + 0x528]
	0x0360B738 BL 0x1C16D08
	0x0360B73C BL 0x1C16F10
	0x0360B740 MOV X19, X0
	0x0360B744 ADRP X0, 0xAF2000
	0x0360B748 LDR X0, [X0 + 0xEC8]
	0x0360B74C BL 0x1C16D08
	0x0360B750 MOV X1, X0
	0x0360B754 MOV X0, X19
	0x0360B758 MOV X2, X31
	0x0360B75C BL 0x330E100
	0x0360B760 ADRP X0, 0xB2F000
	0x0360B764 LDR X0, [X0 + 0xE70]
	0x0360B768 BL 0x1C16D08
	0x0360B76C MOV X1, X0
	0x0360B770 MOV X0, X19
	0x0360B774 BL 0x1C16DEC
	0x0360B778 STP X29, X30, [X31 - 0x60]!
	0x0360B77C STP X28, X27, [X31 + 0x10]
	0x0360B780 STP X26, X25, [X31 + 0x20]
	0x0360B784 STP X24, X23, [X31 + 0x30]
	0x0360B788 STP X22, X21, [X31 + 0x40]
	0x0360B78C STP X20, X19, [X31 + 0x50]
	0x0360B790 ADRP X24, 0xDD5000
	0x0360B794 LDRB W8, [X24 + 0x3FA]
	0x0360B798 MOV W22, W4
	0x0360B79C MOV W23, W3
	0x0360B7A0 MOV X21, X2
	0x0360B7A4 MOV X20, X1
	0x0360B7A8 MOV X19, X0
	0x0360B7AC TBNZ X8, 0x0, 0x360B7E8
	0x0360B7B0 ADRP X0, 0xB29000
	0x0360B7B4 LDR X0, [X0 + 0x940]
	0x0360B7B8 BL 0x1C16CF4
	0x0360B7BC ADRP X0, 0xB2F000
	0x0360B7C0 LDR X0, [X0 + 0xE78]
	0x0360B7C4 BL 0x1C16CF4
	0x0360B7C8 ADRP X0, 0xB17000
	0x0360B7CC LDR X0, [X0 + 0xAC0]
	0x0360B7D0 BL 0x1C16CF4
	0x0360B7D4 ADRP X0, 0xB11000
	0x0360B7D8 LDR X0, [X0 + 0xD08]
	0x0360B7DC BL 0x1C16CF4
	0x0360B7E0 MOVZ W8, 0x1
	0x0360B7E4 STRB W8, [X24 + 0x3FA]
	0x0360B7E8 CMP W21, 0x1
	0x0360B7EC B.LT 0x360B824
	0x0360B7F0 SUB W8, W21, 0x1
	0x0360B7F4 ANDS W31, W22, 0x1
	0x0360B7F8 ADD X8, X20, X8
	0x0360B7FC CSEL X8, X20, X8, NE
	0x0360B800 LDRB W8, [X8]
	0x0360B804 EOR W10, W23, 0x1
	0x0360B808 SXTB W9, W8
	0x0360B80C CMP W9, 0x0
	0x0360B810 CSET W9, LT

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDD6000
	006 Move W8, [X21+1003]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB30000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1003], W8
	018 Compare X20, 0
	019 JumpIfEqual {71}
	020 Move X8, 0xB30000
	021 Move X8, [X8+3624]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {77}
	034 Move X0, [X20+16]
	035 Move X1, [X19+16]
	036 Move W2, 4
	037 Move X3, X31
	038 Call String.Equals, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {71}
	043 Move X0, [X20+24]
	044 Move X1, [X19+24]
	045 Move W2, 5
	046 Move X3, X31
	047 Call String.Equals, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X0, [X20+32]
	053 Move X1, [X19+32]
	054 Move W2, 5
	055 Move X3, X31
	056 Call String.Equals, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {71}
	061 Move X0, [X20+40]
	062 Move X1, [X19+40]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move W2, 5
	066 Move X3, X31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call String.Equals, X0, X1, X2
	070 Return X0
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move W0, W31
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0360B814 AND W25, W9, W10, 0x0
	0x0360B818 CBZ W8, 0x360B82C
	0x0360B81C MOV W27, W21
	0x0360B820 B 0x360B8D4
	0x0360B824 MOV W25, W31
	0x0360B828 B 0x360B8C4
	0x0360B82C TBZ X22, 0x0, 0x360B864
	0x0360B830 MOVZ W23, 0x1
	0x0360B834 CMP W21, 0x2
	0x0360B838 B.LT 0x360B890
	0x0360B83C LDRB W8, [X20, W23, SXTW]
	0x0360B840 CBNZ W8, 0x360B890
	0x0360B844 ADD W23, W23, 0x1
	0x0360B848 CMP W21, W23
	0x0360B84C B.NE 0x360B83C
	0x0360B850 ADRP X8, 0xB2F000
	0x0360B854 LDR X8, [X8 + 0xE78]
	0x0360B858 MOV W23, W21
	0x0360B85C LDR X24, [X8]
	0x0360B860 B 0x360B8AC
	0x0360B864 SUBS W8, W21, 0x2
	0x0360B868 B.LT 0x360B888
	0x0360B86C ADD X9, X20, X8
	0x0360B870 LDRB W10, [X9]
	0x0360B874 CBNZ W10, 0x360B888
	0x0360B878 SUBS W8, W8, 0x1
	0x0360B87C SUB X9, X9, 0x1
	0x0360B880 B.GE 0x360B870
	0x0360B884 MOVN W8, 0x0
	0x0360B888 ADD W8, W8, 0x1
	0x0360B88C B 0x360B8C8
	0x0360B890 ADRP X8, 0xB2F000
	0x0360B894 LDR X8, [X8 + 0xE78]
	0x0360B898 CMP W23, W21
	0x0360B89C LDR X24, [X8]
	0x0360B8A0 B.LS 0x360B8AC
	0x0360B8A4 MOV X0, X31
	0x0360B8A8 BL 0x339D6EC
	0x0360B8AC LDR X0, [X24 + 0x20]
	0x0360B8B0 LDRB W8, [X0 + 0x135]
	0x0360B8B4 TBNZ X8, 0x0, 0x360B8BC
	0x0360B8B8 BL 0x1C5C684
	0x0360B8BC SUB W21, W21, W23
	0x0360B8C0 ADD X20, X20, W23, SXTW
	0x0360B8C4 MOV W8, W21
	0x0360B8C8 MOV W27, W21
	0x0360B8CC MOV W21, W8
	0x0360B8D0 CBZ W8, 0x360B9AC
	0x0360B8D4 SUBS W26, W21, 0x4
	0x0360B8D8 B.LE 0x360B96C
	0x0360B8DC ADRP X8, 0xB11000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Compare X0, 0
	007 JumpIfEqual {70}
	008 Move X1, X31
	009 Call String.ToLowerInvariant, X0
	010 Compare X0, 0
	011 JumpIfEqual {70}
	012 Move X8, [X0]
	013 Move X9, [X8+344]
	014 Move X1, [X8+352]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {70}
	019 Move W20, W0
	020 Move X0, X8
	021 Move X1, X31
	022 Call String.ToLowerInvariant, X0
	023 Compare X0, 0
	024 JumpIfEqual {70}
	025 Move X8, [X0]
	026 Move X9, [X8+344]
	027 Move X1, [X8+352]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19+24]
	030 Xor W20, W0, W20
	031 Move X1, X31
	032 Move X0, X8
	033 Call String.IsNullOrEmpty, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {50}
	038 Move X0, [X19+24]
	039 Compare X0, 0
	040 JumpIfEqual {70}
	041 Move X1, X31
	042 Call String.ToLowerInvariant, X0
	043 Compare X0, 0
	044 JumpIfEqual {70}
	045 Move X8, [X0]
	046 Move X9, [X8+344]
	047 Move X1, [X8+352]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Xor W20, W0, W20
	050 Move X0, [X19+16]
	051 Move X1, X31
	052 Call String.IsNullOrEmpty, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {65}
	057 Move X0, [X19+16]
	058 Compare X0, 0
	059 JumpIfEqual {70}
	060 Move X8, [X0]
	061 Move X9, [X8+344]
	062 Move X1, [X8+352]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Xor W20, W0, W20
	065 Move W0, W20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.ViaHeaderValue> result)

Disassembly:
	0x0360B8E0 LDR X8, [X8 + 0xD08]
	0x0360B8E4 ANDS W29, W21, 0x3
	0x0360B8E8 UBFM W28, W21, 0x2, 0x1F
	0x0360B8EC CINC W24, W28, NE
	0x0360B8F0 LDR X0, [X8]
	0x0360B8F4 MOV W1, W24
	0x0360B8F8 BL 0x1C16D6C
	0x0360B8FC MOV X23, X0
	0x0360B900 MOV X8, X31
	0x0360B904 MOV W9, W28
	0x0360B908 TBZ X22, 0x0, 0x360B9B8
	0x0360B90C ADD X11, X23, X8, 0x2, LSL
	0x0360B910 SUBS W12, W27, W26
	0x0360B914 MOV W10, W31
	0x0360B918 ADD X11, X11, 0x20
	0x0360B91C CSEL W12, W31, W12, CC
	0x0360B920 CMP W12, W10
	0x0360B924 B.EQ 0x360BCA8
	0x0360B928 CBZ X23, 0x360BCAC
	0x0360B92C LDR W13, [X23 + 0x18]
	0x0360B930 CMP X8, X13
	0x0360B934 B.CS 0x360BCA8
	0x0360B938 LDRB W13, [X20, W26, SXTW]
	0x0360B93C LDR W14, [X11]
	0x0360B940 ADD W10, W10, 0x1
	0x0360B944 CMP W10, 0x4
	0x0360B948 ADD W26, W26, 0x1
	0x0360B94C BFM W13, W14, 0x18, 0x17
	0x0360B950 STR W13, [X11]
	0x0360B954 B.NE 0x360B920
	0x0360B958 ADD X8, X8, 0x1
	0x0360B95C CMP X8, X9
	0x0360B960 SUB W26, W26, 0x8
	0x0360B964 B.NE 0x360B90C
	0x0360B968 B 0x360BA14
	0x0360B96C SBFM W8, W25, 0x0, 0x0
	0x0360B970 STR W8, [X19]
	0x0360B974 TBZ X22, 0x0, 0x360BA84
	0x0360B978 CMP W21, 0x1
	0x0360B97C B.LT 0x360BAB4
	0x0360B980 MOV W10, W27
	0x0360B984 MOV W11, W21
	0x0360B988 CBZ X10, 0x360BCA8
	0x0360B98C LDRB W9, [X20], #0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDD6000
	010 Move X25, 0xB30000
	011 Move X22, 0xB30000
	012 Move X23, 0xB30000
	013 Move W8, [X24+1004]
	014 Move X25, [X25+3632]
	015 Move X22, [X22+3640]
	016 Move X23, [X23+3648]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB30000
	025 Move X0, [X0+3648]
	026 Call 0x1C17CF4
	027 Move X0, 0xB30000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move X0, 0xB30000
	031 Move X0, [X0+3640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+1004], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.ViaHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x0360B990 SUBS X11, X11, 0x1
	0x0360B994 SUB X10, X10, 0x1
	0x0360B998 BFM W9, W8, 0x18, 0x17
	0x0360B99C MOV W8, W9
	0x0360B9A0 STR W9, [X19]
	0x0360B9A4 B.NE 0x360B988
	0x0360B9A8 B 0x360BAB8
	0x0360B9AC STR W31, [X19]
	0x0360B9B0 STR X31, [X19 + 0x8]
	0x0360B9B4 B 0x360BC30
	0x0360B9B8 MOVZ W10, 0x3
	0x0360B9BC ADD X12, X23, X8, 0x2, LSL
	0x0360B9C0 MOV W11, W31
	0x0360B9C4 ADD X12, X12, 0x20
	0x0360B9C8 ADD W13, W10, W11
	0x0360B9CC CMP W13, W27
	0x0360B9D0 B.CS 0x360BCA8
	0x0360B9D4 CBZ X23, 0x360BCAC
	0x0360B9D8 LDR W14, [X23 + 0x18]
	0x0360B9DC CMP X8, X14
	0x0360B9E0 B.CS 0x360BCA8
	0x0360B9E4 LDRB W13, [X20, W13, SXTW]
	0x0360B9E8 LDR W14, [X12]
	0x0360B9EC SUB W11, W11, 0x1
	0x0360B9F0 ADDS W31, W11, 0x4
	0x0360B9F4 BFM W13, W14, 0x18, 0x17
	0x0360B9F8 STR W13, [X12]
	0x0360B9FC B.NE 0x360B9C8
	0x0360BA00 ADD W10, W10, W11
	0x0360BA04 ADD X8, X8, 0x1
	0x0360BA08 CMP X8, X9
	0x0360BA0C ADD W10, W10, 0x8
	0x0360BA10 B.NE 0x360B9BC
	0x0360BA14 CBZ W29, 0x360BB84
	0x0360BA18 CBZ W25, 0x360BA3C
	0x0360BA1C LDR W9, [X23 + 0x18]
	0x0360BA20 MOV W8, W24
	0x0360BA24 SUB X8, X8, 0x1
	0x0360BA28 CMP W8, W9
	0x0360BA2C B.CS 0x360BCA8
	0x0360BA30 ADD X8, X23, X8, 0x2, LSL
	0x0360BA34 MOVN W9, 0x0
	0x0360BA38 STR W9, [X8 + 0x20]
	0x0360BA3C TBZ X22, 0x0, 0x360BB3C
	0x0360BA40 ADD X9, X23, W28, 0x2, UXTW
	0x0360BA44 CMP W29, 0x1
	0x0360BA48 MOV W8, W27
	0x0360BA4C ADD X9, X9, 0x20
	0x0360BA50 CSINC W10, W29, W31, HI
	0x0360BA54 CBZ X8, 0x360BCA8
	0x0360BA58 LDR W11, [X23 + 0x18]
	0x0360BA5C CMP W28, W11
	0x0360BA60 B.CS 0x360BCA8
	0x0360BA64 LDRB W11, [X20], #0x1
	0x0360BA68 LDR W12, [X9]
	0x0360BA6C SUBS X10, X10, 0x1
	0x0360BA70 SUB X8, X8, 0x1
	0x0360BA74 BFM W11, W12, 0x18, 0x17
	0x0360BA78 STR W11, [X9]
	0x0360BA7C B.NE 0x360BA54
	0x0360BA80 B 0x360BB84
	0x0360BA84 SUBS W10, W21, 0x1
	0x0360BA88 B.MI 0x360BAB4
	0x0360BA8C MOV W11, W10
	0x0360BA90 CMP W10, W27
	0x0360BA94 B.CS 0x360BCA8
	0x0360BA98 LDRB W9, [X20, W11, UXTW]
	0x0360BA9C SUBS W11, W11, 0x1
	0x0360BAA0 BFM W9, W8, 0x18, 0x17
	0x0360BAA4 MOV W8, W9
	0x0360BAA8 STR W9, [X19]
	0x0360BAAC B.PL 0x360BA90
	0x0360BAB0 B 0x360BAB8
	0x0360BAB4 MOV W9, W8
	0x0360BAB8 CMP W9, 0x0
	0x0360BABC CSET W8, GE
	0x0360BAC0 ORR W8, W25, W8, 0x0
	0x0360BAC4 STR X31, [X19 + 0x8]
	0x0360BAC8 TBZ X8, 0x0, 0x360BB04
	0x0360BACC MOVZ W8, 0x80000000
	0x0360BAD0 CMP W9, W8
	0x0360BAD4 B.NE 0x360BC30
	0x0360BAD8 ADRP X20, 0xB29000
	0x0360BADC LDR X20, [X20 + 0x940]
	0x0360BAE0 LDR X0, [X20]
	0x0360BAE4 LDR W8, [X0 + 0xE0]
	0x0360BAE8 CBNZ W8, 0x360BAF4
	0x0360BAEC BL 0x1C16DFC
	0x0360BAF0 LDR X0, [X20]
	0x0360BAF4 LDR X8, [X0 + 0xB8]
	0x0360BAF8 LDR V0, [X8]
	0x0360BAFC STR V0, [X19]
	0x0360BB00 B 0x360BC30
	0x0360BB04 ADRP X8, 0xB11000
	0x0360BB08 LDR X8, [X8 + 0xD08]
	0x0360BB0C MOVZ W1, 0x1
	0x0360BB10 LDR X0, [X8]
	0x0360BB14 BL 0x1C16D6C
	0x0360BB18 CBZ X0, 0x360BCAC
	0x0360BB1C LDR W8, [X0 + 0x18]
	0x0360BB20 CBZ W8, 0x360BCA8
	0x0360BB24 LDR W8, [X19]
	0x0360BB28 MOVZ W9, 0x1
	0x0360BB2C STR W8, [X0 + 0x20]
	0x0360BB30 STR X0, [X19 + 0x8]
	0x0360BB34 STR W9, [X19]
	0x0360BB38 B 0x360BC30
	0x0360BB3C SUB W8, W21, 0x1
	0x0360BB40 AND W9, W21, 0xFFFFFFFC
	0x0360BB44 CMP W8, W9
	0x0360BB48 B.LT 0x360BB84
	0x0360BB4C ADD X10, X23, W28, 0x2, UXTW
	0x0360BB50 ADD X10, X10, 0x20
	0x0360BB54 CMP W8, W27
	0x0360BB58 B.CS 0x360BCA8
	0x0360BB5C LDR W11, [X23 + 0x18]
	0x0360BB60 CMP W28, W11
	0x0360BB64 B.CS 0x360BCA8
	0x0360BB68 LDRB W11, [X20, W8, SXTW]
	0x0360BB6C LDR W12, [X10]
	0x0360BB70 SUB W8, W8, 0x1
	0x0360BB74 CMP W8, W9
	0x0360BB78 BFM W11, W12, 0x18, 0x17
	0x0360BB7C STR W11, [X10]
	0x0360BB80 B.GE 0x360BB54
	0x0360BB84 CBZ W25, 0x360BC0C
	0x0360BB88 MOV X0, X23
	0x0360BB8C BL 0x360BCB0
	0x0360BB90 LDR W8, [X23 + 0x18]
	0x0360BB94 SUB W9, W8, 0x1
	0x0360BB98 ADDS W31, W9, 0x1
	0x0360BB9C CSEL W9, W8, W31, LT
	0x0360BBA0 ADD W20, W8, 0x1
	0x0360BBA4 SUBS W10, W20, 0x2
	0x0360BBA8 B.MI 0x360BC18
	0x0360BBAC CMP W10, W8
	0x0360BBB0 B.CS 0x360BCA8
	0x0360BBB4 ADD X10, X23, W10, 0x2, UXTW
	0x0360BBB8 LDR W10, [X10 + 0x20]
	0x0360BBBC SUB W20, W20, 0x1
	0x0360BBC0 CBZ W10, 0x360BBA4
	0x0360BBC4 CMP W20, 0x1
	0x0360BBC8 B.NE 0x360BC1C
	0x0360BBCC LDR W9, [X23 + 0x20]
	0x0360BBD0 MOVZ W10, 0x80000000
	0x0360BBD4 CMP W9, W10
	0x0360BBD8 B.EQ 0x360BAD8
	0x0360BBDC CMP W9, 0x1
	0x0360BBE0 B.NE 0x360BC98
	0x0360BBE4 ADRP X20, 0xB29000
	0x0360BBE8 LDR X20, [X20 + 0x940]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xDD6000
	011 Move W8, [X22+1005]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xB11000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0xB30000
	023 Move X0, [X0+3624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1005], W8
	027 Move [X31+8], X31
	028 Move [X19], X31
	029 Compare X21, 0
	030 JumpIfEqual {164}
	031 Move X26, 0xB11000
	032 Move X26, [X26+2256]
	033 Move X0, X21
	034 Move W1, W31
	035 Call Lexer.Scan, X0, X1
	036 Move [X20], X0
	037 Move [X20+8], W1
	038 Move X22, X0
	039 Move X0, [X26]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X21
	046 Move W1, W31
	047 Call Lexer.Scan, X0, X1
	048 Move X8, 0xB30000
	049 Move X8, [X8+3624]
	050 Move X23, X0
	051 Move X24, X1
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X22, X0
	056 Call Object..ctor, X0
	057 Move X0, [X26]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Move W1, W31
	065 Call Lexer.Scan, X0, X1
	066 Move X23, X0
	067 Move X0, [X26]
	068 Move X24, X1
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, [X20]
	075 Move W2, [X20+8]
	076 Move X0, X21
	077 Call Lexer.GetStringValue, X0, X1
	078 Compare X22, 0
	079 JumpIfEqual {164}
	080 And X2, X24, 0
	081 Move [X22+24], X0
	082 Move X0, X21
	083 Move X1, X23
	084 Call Lexer.GetStringValue, X0, X1
	085 Move [X22+32], X0
	086 Move X0, X21
	087 Move W1, W31
	088 Call Lexer.Scan, X0, X1
	089 Move X25, X0
	090 Move X24, X1
	091 Move X23, X0
	092 Move X1, [X20]
	093 Move W2, [X20+8]
	094 Move X0, X21
	095 Call Lexer.GetStringValue, X0, X1
	096 Compare X22, 0
	097 JumpIfEqual {164}
	098 Move X25, X23
	099 Move [X22+32], X0
	100 Move X0, [X26]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, X21
	107 Call Lexer.PeekChar, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W8, [X21+24]
	110 Move X0, X21
	111 Move W1, W31
	112 Add W8, W8, 1
	113 Move [X21+24], W8
	114 Call Lexer.Scan, X0, X1
	115 Move [X20], X0
	116 Move [X20+8], W1
	117 Move X25, X0
	118 Move X0, [X26]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X25, [X20]
	125 Move W8, [X20+8]
	126 Move W0, W31
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X26, [X31+16]
	134 Move X25, [X31+24]
	135 Move X30, [X31+80]
	136 Return X0
	137 Move W8, W24
	138 Move [X20], X25
	139 Move [X20+8], W24
	140 And X2, X24, 0
	141 Move W4, W8
	142 Move X0, X21
	143 Move X1, X23
	144 Move X3, X25
	145 Call Lexer.GetStringValue, X0, X1, X2
	146 Move [X22+40], X0
	147 Add X1, X31, 8
	148 Move X0, X21
	149 Move X2, X20
	150 Call Lexer.ScanCommentOptional, X0, X1, X2
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {160}
	155 Move X0, X21
	156 Move W1, W31
	157 Call Lexer.Scan, X0, X1
	158 Move [X20], X0
	159 Move [X20+8], W1
	160 Move X8, [X31+8]
	161 Move W0, 1
	162 Move [X22+16], X8
	163 Move [X19], X22
	164 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0360BBEC LDR X0, [X20]
	0x0360BBF0 LDR W8, [X0 + 0xE0]
	0x0360BBF4 CBNZ W8, 0x360BC00
	0x0360BBF8 BL 0x1C16DFC
	0x0360BBFC LDR X0, [X20]
	0x0360BC00 LDR X8, [X0 + 0xB8]
	0x0360BC04 LDR V0, [X8 + 0x3]
	0x0360BC08 B 0x360BAFC
	0x0360BC0C MOVZ W8, 0x1
	0x0360BC10 STR W8, [X19]
	0x0360BC14 B 0x360BC2C
	0x0360BC18 MOV W20, W9
	0x0360BC1C MOVN W9, 0x0
	0x0360BC20 CMP W20, W8
	0x0360BC24 STR W9, [X19]
	0x0360BC28 B.NE 0x360BC4C
	0x0360BC2C STR X23, [X19 + 0x8]
	0x0360BC30 LDP X20, X19, [X31 + 0x50]
	0x0360BC34 LDP X22, X21, [X31 + 0x40]
	0x0360BC38 LDP X24, X23, [X31 + 0x30]
	0x0360BC3C LDP X26, X25, [X31 + 0x20]
	0x0360BC40 LDP X28, X27, [X31 + 0x10]
	0x0360BC44 LDP X29, X30, [X31], #0x60
	0x0360BC48 RET
	0x0360BC4C ADRP X8, 0xB11000
	0x0360BC50 LDR X8, [X8 + 0xD08]
	0x0360BC54 MOV W1, W20
	0x0360BC58 LDR X0, [X8]
	0x0360BC5C BL 0x1C16D6C
	0x0360BC60 MOV X2, X0
	0x0360BC64 STR X0, [X19 + 0x8]
	0x0360BC68 MOV X0, X23
	0x0360BC6C MOV W4, W20
	0x0360BC70 LDP X20, X19, [X31 + 0x50]
	0x0360BC74 LDP X22, X21, [X31 + 0x40]
	0x0360BC78 LDP X24, X23, [X31 + 0x30]
	0x0360BC7C LDP X26, X25, [X31 + 0x20]
	0x0360BC80 LDP X28, X27, [X31 + 0x10]
	0x0360BC84 MOV W1, W31
	0x0360BC88 MOV W3, W31
	0x0360BC8C MOV X5, X31
	0x0360BC90 LDP X29, X30, [X31], #0x60
	0x0360BC94 B 0x339FCE8
	0x0360BC98 B.LT 0x360BC1C
	0x0360BC9C SUB W8, W31, W9
	0x0360BCA0 STR W8, [X19]
	0x0360BCA4 B 0x360B9B0
	0x0360BCA8 BL 0x1C16F28
	0x0360BCAC BL 0x1C16F20
	0x0360BCB0 STR X30, [X31 - 0x10]!
	0x0360BCB4 CBZ X0, 0x360BD58
	0x0360BCB8 LDR X8, [X0 + 0x18]
	0x0360BCBC CBZ X8, 0x360BD58
	0x0360BCC0 CBZ W8, 0x360BD60
	0x0360BCC4 LDR W11, [X0 + 0x20]
	0x0360BCC8 ORR X10, X31, 0x100000001
	0x0360BCCC CMP X10, X8, LSL
	0x0360BCD0 AND X9, X8, 0x0
	0x0360BCD4 SUB W10, W31, W11
	0x0360BCD8 STR W10, [X0 + 0x20]
	0x0360BCDC MOVZ W10, 0x1
	0x0360BCE0 B.GT 0x360BD30
	0x0360BCE4 CBNZ W11, 0x360BD30
	0x0360BCE8 MOV X13, X31
	0x0360BCEC SXTW X10, W8
	0x0360BCF0 ADD X11, X0, 0x24
	0x0360BCF4 SUB X12, X9, 0x1
	0x0360BCF8 CMP X12, X13

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDD6000
	005 Move W8, [X20+1006]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xAE9000
	012 Move X0, [X0+2760]
	013 Call 0x1C17CF4
	014 Move X0, 0xAE9000
	015 Move X0, [X0+3544]
	016 Call 0x1C17CF4
	017 Move X0, 0xAEA000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1006], W8
	022 Move X20, 0xAE9000
	023 Move X8, [X19+24]
	024 Move X20, [X20+3544]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X8, 0xAE9000
	028 Move X8, [X8+2760]
	029 Move W1, 5
	030 Move X0, [X8]
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {75}
	034 Move W8, [X0+24]
	035 Compare W8, 0
	036 JumpIfEqual {74}
	037 Move X9, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X0+32], X9
	040 Move X9, 0xAEA000
	041 Move X9, [X9+3784]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, [X9]
	044 Move [X0+40], X9
	045 Move X9, [X19+32]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+48], X9
	048 Move X9, [X20]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X0+56], X9
	051 Move X8, [X19+40]
	052 Move X1, X31
	053 Move [X0+64], X8
	054 Call String.Concat, X0
	055 Move X0, [X19+32]
	056 Move X2, [X19+40]
	057 Move X1, [X20]
	058 Move X3, X31
	059 Call String.Concat, X0, X1, X2
	060 Move X2, [X19+16]
	061 Compare X2, 0
	062 JumpIfEqual {70}
	063 Move X1, [X20]
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X3, X31
	067 Move X30, [X31+32]
	068 Call String.Concat, X0, X1, X2
	069 Return X0
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F28
	075 Call 0x1C17F20

