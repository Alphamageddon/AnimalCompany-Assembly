Type: System.Net.Http.Headers.EntityTagHeaderValue

Method: System.Void .ctor()

Disassembly:
	0x036019D8 LDR X4, [X21]
	0x036019DC LDR X5, [X23]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean get_IsWeak()

Disassembly:
	0x036019E0 MOVZ W2, 0x1
	0x036019E4 MOVZ W3, 0x1

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_IsWeak(System.Boolean value)

Disassembly:
	0x036019E8 MOV X1, X20
	0x036019EC BL 0x21EBD64
	0x036019F0 MOV X20, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.String get_Tag()

Disassembly:
	0x036019F4 CBZ X0, 0x3601A0C
	0x036019F8 LDR X8, [X19]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Tag(System.String value)

Disassembly:
	0x036019FC MOV X0, X20
	0x03601A00 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03601A04 BL 0x1C16E00
	0x03601A08 CBZ X0, 0x36030E0

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03601A0C LDR W8, [X22]
	0x03601A10 CMP W8, 0x3
	0x03601A14 B.LS 0x36030D8
	0x03601A18 ADRP X27, 0xB39000
	0x03601A1C LDR X27, [X27 + 0x960]
	0x03601A20 STR X20, [X19 + 0x38]
	0x03601A24 ADRP X26, 0xB39000
	0x03601A28 ADRP X23, 0xB39000
	0x03601A2C LDR X0, [X27]
	0x03601A30 ADRP X25, 0xB39000
	0x03601A34 LDR X26, [X26 + 0x718]
	0x03601A38 LDR X23, [X23 + 0xA98]
	0x03601A3C LDR X25, [X25 + 0x7A8]
	0x03601A40 BL 0x1C16F10
	0x03601A44 LDR X2, [X26]
	0x03601A48 MOV X1, X31
	0x03601A4C MOV X3, X31
	0x03601A50 MOV X20, X0
	0x03601A54 BL 0x27027B8
	0x03601A58 LDR X0, [X23]
	0x03601A5C LDR X4, [X21]
	0x03601A60 LDR X5, [X25]
	0x03601A64 MOVZ W2, 0x2
	0x03601A68 MOVZ W3, 0x1
	0x03601A6C MOV X1, X20
	0x03601A70 BL 0x21EBD64
	0x03601A74 MOV X20, X0
	0x03601A78 CBZ X0, 0x3601A90
	0x03601A7C LDR X8, [X19]
	0x03601A80 MOV X0, X20
	0x03601A84 LDR X1, [X8 + 0x40]
	0x03601A88 BL 0x1C16E00
	0x03601A8C CBZ X0, 0x36030E0
	0x03601A90 LDR W8, [X22]
	0x03601A94 CMP W8, 0x4
	0x03601A98 B.LS 0x36030D8
	0x03601A9C ADRP X8, 0xB39000
	0x03601AA0 LDR X8, [X8 + 0x910]
	0x03601AA4 STR X20, [X19 + 0x40]
	0x03601AA8 ADRP X20, 0xB39000
	0x03601AAC ADRP X23, 0xB39000
	0x03601AB0 LDR X0, [X8]
	0x03601AB4 ADRP X24, 0xB39000
	0x03601AB8 LDR X20, [X20 + 0x8B8]
	0x03601ABC LDR X23, [X23 + 0xA68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDE0000
	006 Move W8, [X21+854]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB3A000
	014 Move X0, [X0+1688]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+854], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, 0xB3A000
	021 Move X8, [X8+1688]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {58}
	034 Move X0, [X20+24]
	035 Move X1, [X19+24]
	036 Move X2, X31
	037 Call String.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {52}
	042 Move X0, [X20+24]
	043 Move X1, [X19+24]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W2, 4
	047 Move X3, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call String.Equals, X0, X1, X2
	051 Return X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move W0, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03601AC0 LDR X24, [X24 + 0x840]
	0x03601AC4 BL 0x1C16F10
	0x03601AC8 LDR X2, [X20]
	0x03601ACC MOV X1, X31
	0x03601AD0 MOV X3, X31
	0x03601AD4 MOV X20, X0
	0x03601AD8 BL 0x2702650
	0x03601ADC LDR X0, [X23]
	0x03601AE0 LDR X4, [X24]
	0x03601AE4 MOVZ W2, 0x2
	0x03601AE8 MOV X1, X20
	0x03601AEC MOV X3, X31
	0x03601AF0 BL 0x21EC000
	0x03601AF4 MOV X20, X0
	0x03601AF8 CBZ X0, 0x3601B10
	0x03601AFC LDR X8, [X19]
	0x03601B00 MOV X0, X20
	0x03601B04 LDR X1, [X8 + 0x40]
	0x03601B08 BL 0x1C16E00
	0x03601B0C CBZ X0, 0x36030E0
	0x03601B10 LDR W8, [X22]
	0x03601B14 CMP W8, 0x5
	0x03601B18 B.LS 0x36030D8
	0x03601B1C STR X20, [X19 + 0x48]
	0x03601B20 LDR X0, [X27]
	0x03601B24 ADRP X23, 0xB39000
	0x03601B28 LDR X23, [X23 + 0xA28]
	0x03601B2C BL 0x1C16F10
	0x03601B30 LDR X2, [X26]
	0x03601B34 MOV X1, X31
	0x03601B38 MOV X3, X31
	0x03601B3C MOV X20, X0
	0x03601B40 BL 0x27027B8
	0x03601B44 LDR X0, [X23]
	0x03601B48 LDR X4, [X21]
	0x03601B4C LDR X5, [X25]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDE0000
	007 Move X20, 0xAF3000
	008 Move W8, [X21+855]
	009 Move X20, [X20+2904]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xAF3000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+855], W8
	020 Move W8, [X19+16]
	021 Move X0, [X20]
	022 Move [X31+12], W8
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 12
	028 Move X1, X31
	029 Call Boolean.GetHashCode, X0
	030 Move X8, [X19+24]
	031 Compare X8, 0
	032 JumpIfEqual {46}
	033 Move X9, [X8]
	034 Move W19, W0
	035 Move X0, X8
	036 Move X10, [X9+344]
	037 Move X1, [X9+352]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Xor W0, W0, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.EntityTagHeaderValue parsedValue)

Disassembly:
	0x03601B50 MOVZ W2, 0x4
	0x03601B54 MOV X1, X20
	0x03601B58 MOV W3, W31
	0x03601B5C BL 0x21EBD64
	0x03601B60 MOV X20, X0
	0x03601B64 CBZ X0, 0x3601B7C
	0x03601B68 LDR X8, [X19]
	0x03601B6C MOV X0, X20
	0x03601B70 LDR X1, [X8 + 0x40]
	0x03601B74 BL 0x1C16E00
	0x03601B78 CBZ X0, 0x36030E0
	0x03601B7C LDR W8, [X22]
	0x03601B80 CMP W8, 0x6
	0x03601B84 B.LS 0x36030D8
	0x03601B88 ADRP X8, 0xB39000
	0x03601B8C LDR X8, [X8 + 0x920]
	0x03601B90 STR X20, [X19 + 0x50]
	0x03601B94 ADRP X20, 0xB39000
	0x03601B98 ADRP X23, 0xB2D000
	0x03601B9C LDR X0, [X8]
	0x03601BA0 ADRP X24, 0xB39000
	0x03601BA4 LDR X20, [X20 + 0x700]
	0x03601BA8 LDR X23, [X23 + 0x7D0]
	0x03601BAC LDR X24, [X24 + 0x7D0]
	0x03601BB0 BL 0x1C16F10
	0x03601BB4 LDR X2, [X20]
	0x03601BB8 MOV X1, X31
	0x03601BBC MOV X3, X31
	0x03601BC0 MOV X20, X0
	0x03601BC4 BL 0x270259C
	0x03601BC8 LDR X0, [X23]
	0x03601BCC LDR X4, [X24]
	0x03601BD0 MOVZ W2, 0x1
	0x03601BD4 MOV X1, X20
	0x03601BD8 MOV X3, X31
	0x03601BDC BL 0x21EBF7C
	0x03601BE0 MOV X20, X0
	0x03601BE4 CBZ X0, 0x3601BFC
	0x03601BE8 LDR X8, [X19]
	0x03601BEC MOV X0, X20
	0x03601BF0 LDR X1, [X8 + 0x40]
	0x03601BF4 BL 0x1C16E00
	0x03601BF8 CBZ X0, 0x36030E0
	0x03601BFC LDR W8, [X22]
	0x03601C00 CMP W8, 0x7
	0x03601C04 B.LS 0x36030D8
	0x03601C08 ADRP X8, 0xB39000
	0x03601C0C LDR X8, [X8 + 0x900]
	0x03601C10 STR X20, [X19 + 0x58]
	0x03601C14 ADRP X20, 0xB39000
	0x03601C18 ADRP X23, 0xB39000
	0x03601C1C LDR X0, [X8]
	0x03601C20 ADRP X24, 0xB39000
	0x03601C24 LDR X20, [X20 + 0x710]
	0x03601C28 LDR X23, [X23 + 0xA60]
	0x03601C2C LDR X24, [X24 + 0x7E0]
	0x03601C30 BL 0x1C16F10
	0x03601C34 LDR X2, [X20]
	0x03601C38 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xDE0000
	009 Move X21, 0xB1B000
	010 Move X22, 0xB3A000
	011 Move W8, [X23+856]
	012 Move X21, [X21+2248]
	013 Move X22, [X22+1688]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xB3A000
	021 Move X0, [X0+1688]
	022 Call 0x1C17CF4
	023 Move X0, 0xB1B000
	024 Move X0, [X0+2248]
	025 Call 0x1C17CF4
	026 Move X0, 0xB1B000
	027 Move X0, [X0+2256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+856], W8
	031 Move X0, [X21]
	032 Move [X31+8], W31
	033 Move [X31], X31
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call Object..ctor, X0
	038 Move [X21+16], X20
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X2, X31, 0
	045 Move X0, X21
	046 Move X1, X19
	047 Call EntityTagHeaderValue.TryParseElement, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {62}
	052 Move X8, 0xB1B000
	053 Move X8, [X8+2256]
	054 Move X20, [X31]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W0, 1
	062 Move W0, W31
	063 Move [X19], X31
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X30, [X31+16]
	069 Move X23, [X31+24]
	070 Add X31, X31, 64
	071 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.EntityTagHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x03601C3C MOV X3, X31
	0x03601C40 MOV X20, X0
	0x03601C44 BL 0x270259C
	0x03601C48 LDR X0, [X23]
	0x03601C4C LDR X4, [X24]
	0x03601C50 MOVZ W2, 0x3
	0x03601C54 MOV X1, X20
	0x03601C58 MOV X3, X31
	0x03601C5C BL 0x21EBF7C
	0x03601C60 MOV X20, X0
	0x03601C64 CBZ X0, 0x3601C7C
	0x03601C68 LDR X8, [X19]
	0x03601C6C MOV X0, X20
	0x03601C70 LDR X1, [X8 + 0x40]
	0x03601C74 BL 0x1C16E00
	0x03601C78 CBZ X0, 0x36030E0
	0x03601C7C LDR W8, [X22]
	0x03601C80 CMP W8, 0x8
	0x03601C84 B.LS 0x36030D8
	0x03601C88 STR X20, [X19 + 0x60]
	0x03601C8C LDR X0, [X27]
	0x03601C90 ADRP X23, 0xB39000
	0x03601C94 LDR X23, [X23 + 0x158]
	0x03601C98 BL 0x1C16F10
	0x03601C9C LDR X2, [X26]
	0x03601CA0 MOV X1, X31
	0x03601CA4 MOV X3, X31
	0x03601CA8 MOV X20, X0
	0x03601CAC BL 0x27027B8
	0x03601CB0 LDR X0, [X23]
	0x03601CB4 LDR X4, [X21]
	0x03601CB8 LDR X5, [X25]
	0x03601CBC MOVZ W2, 0x3
	0x03601CC0 MOVZ W3, 0x1
	0x03601CC4 MOV X1, X20
	0x03601CC8 BL 0x21EBD64
	0x03601CCC MOV X20, X0
	0x03601CD0 CBZ X0, 0x3601CE8
	0x03601CD4 LDR X8, [X19]
	0x03601CD8 MOV X0, X20
	0x03601CDC LDR X1, [X8 + 0x40]
	0x03601CE0 BL 0x1C16E00
	0x03601CE4 CBZ X0, 0x36030E0
	0x03601CE8 LDR W8, [X22]
	0x03601CEC CMP W8, 0x9
	0x03601CF0 B.LS 0x36030D8
	0x03601CF4 ADRP X8, 0xB39000
	0x03601CF8 LDR X8, [X8 + 0x930]
	0x03601CFC STR X20, [X19 + 0x68]
	0x03601D00 ADRP X20, 0xB39000
	0x03601D04 ADRP X23, 0xB39000
	0x03601D08 LDR X0, [X8]
	0x03601D0C ADRP X24, 0xB39000
	0x03601D10 LDR X20, [X20 + 0x720]
	0x03601D14 LDR X23, [X23 + 0xAA8]
	0x03601D18 LDR X24, [X24 + 0x7E8]
	0x03601D1C BL 0x1C16F10
	0x03601D20 LDR X2, [X20]
	0x03601D24 MOV X1, X31
	0x03601D28 MOV X3, X31
	0x03601D2C MOV X20, X0
	0x03601D30 BL 0x270259C
	0x03601D34 LDR X0, [X23]
	0x03601D38 LDR X4, [X24]
	0x03601D3C MOVZ W2, 0x4
	0x03601D40 MOV X1, X20
	0x03601D44 MOV X3, X31
	0x03601D48 BL 0x21EBF7C
	0x03601D4C MOV X20, X0
	0x03601D50 CBZ X0, 0x3601D68
	0x03601D54 LDR X8, [X19]
	0x03601D58 MOV X0, X20
	0x03601D5C LDR X1, [X8 + 0x40]
	0x03601D60 BL 0x1C16E00
	0x03601D64 CBZ X0, 0x36030E0
	0x03601D68 LDR W8, [X22]
	0x03601D6C CMP W8, 0xA
	0x03601D70 B.LS 0x36030D8
	0x03601D74 STR X20, [X19 + 0x70]
	0x03601D78 LDR X0, [X27]
	0x03601D7C ADRP X23, 0xB39000
	0x03601D80 LDR X23, [X23 + 0x6D0]
	0x03601D84 BL 0x1C16F10
	0x03601D88 LDR X2, [X26]
	0x03601D8C MOV X1, X31
	0x03601D90 MOV X3, X31
	0x03601D94 MOV X20, X0
	0x03601D98 BL 0x27027B8
	0x03601D9C LDR X0, [X23]
	0x03601DA0 LDR X4, [X21]
	0x03601DA4 LDR X5, [X25]
	0x03601DA8 MOVZ W2, 0x4
	0x03601DAC MOVZ W3, 0x1
	0x03601DB0 MOV X1, X20
	0x03601DB4 BL 0x21EBD64
	0x03601DB8 MOV X20, X0
	0x03601DBC CBZ X0, 0x3601DD4
	0x03601DC0 LDR X8, [X19]
	0x03601DC4 MOV X0, X20
	0x03601DC8 LDR X1, [X8 + 0x40]
	0x03601DCC BL 0x1C16E00
	0x03601DD0 CBZ X0, 0x36030E0
	0x03601DD4 LDR W8, [X22]
	0x03601DD8 CMP W8, 0xB
	0x03601DDC B.LS 0x36030D8
	0x03601DE0 STR X20, [X19 + 0x78]
	0x03601DE4 LDR X0, [X27]
	0x03601DE8 ADRP X23, 0xB39000
	0x03601DEC LDR X23, [X23 + 0xAC0]
	0x03601DF0 BL 0x1C16F10
	0x03601DF4 LDR X2, [X26]
	0x03601DF8 MOV X1, X31
	0x03601DFC MOV X3, X31
	0x03601E00 MOV X20, X0
	0x03601E04 BL 0x27027B8
	0x03601E08 LDR X0, [X23]
	0x03601E0C LDR X4, [X21]
	0x03601E10 LDR X5, [X25]
	0x03601E14 MOVZ W2, 0x4
	0x03601E18 MOVZ W3, 0x1
	0x03601E1C MOV X1, X20
	0x03601E20 BL 0x21EBD64

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xDE0000
	009 Move W8, [X22+857]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xB3A000
	018 Move X0, [X0+1688]
	019 Call 0x1C17CF4
	020 Move X0, 0xB1B000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3A000
	024 Move X0, [X0+1696]
	025 Call 0x1C17CF4
	026 Move X0, 0xB25000
	027 Move X0, [X0+3824]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+857], W8
	031 Move [X21], X31
	032 Compare X20, 0
	033 JumpIfEqual {138}
	034 Move X24, 0xB1B000
	035 Move X24, [X24+2256]
	036 Move X0, X20
	037 Move W1, W31
	038 Call Lexer.Scan, X0, X1
	039 Move [X19], X0
	040 Move [X19+8], W1
	041 Move X22, X0
	042 Move X0, [X24]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X23, [X19]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W2, [X19+8]
	050 Move X0, X20
	051 Move X1, X23
	052 Call Lexer.GetStringValue, X0, X1
	053 Move X8, 0xB25000
	054 Move X8, [X8+3824]
	055 Move X2, X31
	056 Move X23, X0
	057 Move X1, [X8]
	058 Call String.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {74}
	063 Move X22, 0xB3A000
	064 Move X22, [X22+1688]
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move X8, [X8]
	073 Move [X21], X8
	074 Move X8, 0xB3A000
	075 Move X8, [X8+1696]
	076 Move X0, X23
	077 Move X2, X31
	078 Move X1, [X8]
	079 Call String.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {129}
	084 Move X0, X20
	085 Call Lexer.PeekChar, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, [X20+24]
	088 Move X0, X20
	089 Move W1, W31
	090 Add W8, W8, 1
	091 Move [X20+24], W8
	092 Call Lexer.Scan, X0, X1
	093 Move X23, X0
	094 Move [X19], X0
	095 Move [X19+8], W1
	096 Move X0, [X24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0xB3A000
	103 Move X8, [X8+1688]
	104 Move X0, [X8]
	105 Call 0x1C17F10
	106 Move X1, X31
	107 Move X23, X0
	108 Call Object..ctor, X0
	109 Move [X21], X23
	110 Move X1, [X19]
	111 Move W2, [X19+8]
	112 Move X0, X20
	113 Call Lexer.GetStringValue, X0, X1
	114 Compare X23, 0
	115 JumpIfEqual {138}
	116 Move [X23+24], X0
	117 Move X8, [X21]
	118 Compare X8, 0
	119 JumpIfEqual {138}
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSET not yet implemented."
	122 Move [X8+16], W9
	123 Move X0, X20
	124 Move W1, W31
	125 Call Lexer.Scan, X0, X1
	126 Move [X19], X0
	127 Move W0, 1
	128 Move [X19+8], W1
	129 Move W0, W31
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X24, [X31+16]
	135 Move X23, [X31+24]
	136 Move X30, [X31+64]
	137 Return X0
	138 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.EntityTagHeaderValue> result)

Disassembly:
	0x03601E74 BL 0x1C16F10
	0x03601E78 LDR X2, [X20]
	0x03601E7C MOV X1, X31
	0x03601E80 MOV X3, X31
	0x03601E84 MOV X20, X0
	0x03601E88 BL 0x27024E8
	0x03601E8C LDR X0, [X23]
	0x03601E90 LDR X4, [X24]
	0x03601E94 MOVZ W2, 0x4
	0x03601E98 MOV X1, X20
	0x03601E9C MOV X3, X31
	0x03601EA0 BL 0x21EBEF8
	0x03601EA4 MOV X20, X0
	0x03601EA8 CBZ X0, 0x3601EC0
	0x03601EAC LDR X8, [X19]
	0x03601EB0 MOV X0, X20
	0x03601EB4 LDR X1, [X8 + 0x40]
	0x03601EB8 BL 0x1C16E00
	0x03601EBC CBZ X0, 0x36030E0
	0x03601EC0 LDR W8, [X22]
	0x03601EC4 CMP W8, 0xD
	0x03601EC8 B.LS 0x36030D8
	0x03601ECC ADRP X8, 0xB39000
	0x03601ED0 LDR X8, [X8 + 0x908]
	0x03601ED4 STR X20, [X19 + 0x88]
	0x03601ED8 ADRP X20, 0xB39000
	0x03601EDC ADRP X23, 0xB39000
	0x03601EE0 LDR X0, [X8]
	0x03601EE4 ADRP X21, 0xB39000
	0x03601EE8 LDR X20, [X20 + 0x9B0]
	0x03601EEC LDR X23, [X23 + 0xA90]
	0x03601EF0 LDR X21, [X21 + 0x848]
	0x03601EF4 BL 0x1C16F10
	0x03601EF8 LDR X2, [X20]
	0x03601EFC MOV X1, X31
	0x03601F00 MOV X3, X31
	0x03601F04 MOV X20, X0
	0x03601F08 BL 0x270259C
	0x03601F0C LDR X0, [X23]
	0x03601F10 LDR X4, [X21]
	0x03601F14 MOVZ W2, 0x4
	0x03601F18 MOV X1, X20
	0x03601F1C MOV X3, X31
	0x03601F20 BL 0x21EBF7C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDE0000
	010 Move X25, 0xB3A000
	011 Move X22, 0xB3A000
	012 Move X23, 0xB3A000
	013 Move W8, [X24+858]
	014 Move X25, [X25+1704]
	015 Move X22, [X22+1712]
	016 Move X23, [X23+1720]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB3A000
	025 Move X0, [X0+1720]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3A000
	028 Move X0, [X0+1704]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3A000
	031 Move X0, [X0+1712]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+858], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.String ToString()

Disassembly:
	0x03601F24 MOV X20, X0
	0x03601F28 CBZ X0, 0x3601F40
	0x03601F2C LDR X8, [X19]
	0x03601F30 MOV X0, X20
	0x03601F34 LDR X1, [X8 + 0x40]
	0x03601F38 BL 0x1C16E00
	0x03601F3C CBZ X0, 0x36030E0
	0x03601F40 LDR W8, [X22]
	0x03601F44 CMP W8, 0xE
	0x03601F48 B.LS 0x36030D8
	0x03601F4C ADRP X8, 0xB39000
	0x03601F50 LDR X8, [X8 + 0x948]
	0x03601F54 STR X20, [X19 + 0x90]
	0x03601F58 ADRP X20, 0xB39000
	0x03601F5C ADRP X23, 0xB39000
	0x03601F60 LDR X0, [X8]
	0x03601F64 ADRP X24, 0xB39000
	0x03601F68 LDR X20, [X20 + 0x868]
	0x03601F6C LDR X23, [X23 + 0xA38]
	0x03601F70 LDR X24, [X24 + 0x7D8]
	0x03601F74 BL 0x1C16F10
	0x03601F78 LDR X2, [X20]
	0x03601F7C MOV X1, X31
	0x03601F80 MOV X3, X31
	0x03601F84 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE0000
	005 Move W8, [X20+859]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB3A000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+859], W8
	016 Move W8, [X19+16]
	017 Move X1, [X19+24]
	018 Compare W8, 0
	019 JumpIfEqual {29}
	020 Move X8, 0xB3A000
	021 Move X8, [X8+1728]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X2, X31
	025 Move X0, [X8]
	026 Move X30, [X31+32]
	027 Call String.Concat, X0, X1
	028 Return X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X0, X1
	032 Move X30, [X31+32]
	033 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03601F88 BL 0x270259C
	0x03601F8C LDR X0, [X23]
	0x03601F90 LDR X4, [X24]
	0x03601F94 MOVZ W2, 0x4
	0x03601F98 MOV X1, X20
	0x03601F9C MOV X3, X31
	0x03601FA0 BL 0x21EBF7C
	0x03601FA4 MOV X20, X0
	0x03601FA8 CBZ X0, 0x3601FC0
	0x03601FAC LDR X8, [X19]
	0x03601FB0 MOV X0, X20
	0x03601FB4 LDR X1, [X8 + 0x40]
	0x03601FB8 BL 0x1C16E00
	0x03601FBC CBZ X0, 0x36030E0
	0x03601FC0 LDR W8, [X22]
	0x03601FC4 CMP W8, 0xF
	0x03601FC8 B.LS 0x36030D8
	0x03601FCC ADRP X8, 0xB39000
	0x03601FD0 LDR X8, [X8 + 0x8F8]
	0x03601FD4 STR X20, [X19 + 0x98]
	0x03601FD8 ADRP X20, 0xB39000
	0x03601FDC ADRP X23, 0xB39000
	0x03601FE0 LDR X0, [X8]
	0x03601FE4 ADRP X24, 0xB39000
	0x03601FE8 LDR X20, [X20 + 0x728]
	0x03601FEC LDR X23, [X23 + 0xAF8]
	0x03601FF0 LDR X24, [X24 + 0x7F0]
	0x03601FF4 BL 0x1C16F10
	0x03601FF8 LDR X2, [X20]
	0x03601FFC MOV X1, X31
	0x03602000 MOV X3, X31
	0x03602004 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDE0000
	005 Move X20, 0xB3A000
	006 Move W8, [X19+860]
	007 Move X20, [X20+1688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xB3A000
	013 Move X0, [X0+1688]
	014 Call 0x1C17CF4
	015 Move X0, 0xB25000
	016 Move X0, [X0+3824]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+860], W8
	020 Move X0, [X20]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X19, X0
	024 Call Object..ctor, X0
	025 Compare X19, 0
	026 JumpIfEqual {38}
	027 Move X8, 0xB25000
	028 Move X8, [X8+3824]
	029 Move X8, [X8]
	030 Move [X19+24], X8
	031 Move X8, [X20]
	032 Move X8, [X8+184]
	033 Move [X8], X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

