Type: System.Net.Http.Headers.ProductInfoHeaderValue

Method: System.Void .ctor(System.Net.Http.Headers.ProductHeaderValue product)

Disassembly:
	0x03608608 ADRP X19, 0xB13000
	0x0360860C ADRP X27, 0xB13000
	0x03608610 LDRB W8, [X20 + 0x3D0]
	0x03608614 LDR X19, [X19 + 0x8C8]
	0x03608618 LDR X27, [X27 + 0x8D0]
	0x0360861C MOV X24, X1
	0x03608620 MOV X21, X0
	0x03608624 TBNZ X8, 0x0, 0x360869C
	0x03608628 ADRP X0, 0xAF4000
	0x0360862C LDR X0, [X0 + 0x8D8]
	0x03608630 BL 0x1C16CF4
	0x03608634 ADRP X0, 0xB32000
	0x03608638 LDR X0, [X0 + 0xD48]
	0x0360863C BL 0x1C16CF4
	0x03608640 ADRP X0, 0xB13000
	0x03608644 LDR X0, [X0 + 0x8C8]
	0x03608648 BL 0x1C16CF4
	0x0360864C ADRP X0, 0xB27000
	0x03608650 LDR X0, [X0 + 0x9F8]
	0x03608654 BL 0x1C16CF4
	0x03608658 ADRP X0, 0xB2F000
	0x0360865C LDR X0, [X0 + 0x738]
	0x03608660 BL 0x1C16CF4
	0x03608664 ADRP X0, 0xB13000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move [X20+24], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X0, 0xAF1000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call ArgumentNullException..ctor, X0
	022 Move X0, 0xB33000
	023 Move X0, [X0+3264]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03608668 LDR X0, [X0 + 0xEA8]
	0x0360866C BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String get_Comment()

Disassembly:
	0x03608670 ADRP X0, 0xB32000
	0x03608674 LDR X0, [X0 + 0xD68]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Comment(System.String value)

Disassembly:
	0x03608678 BL 0x1C16CF4
	0x0360867C ADRP X0, 0xB32000

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Net.Http.Headers.ProductHeaderValue get_Product()

Disassembly:
	0x03608680 LDR X0, [X0 + 0xD80]
	0x03608684 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Product(System.Net.Http.Headers.ProductHeaderValue value)

Disassembly:
	0x03608688 ADRP X0, 0xB13000
	0x0360868C LDR X0, [X0 + 0x8D0]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03608690 BL 0x1C16CF4
	0x03608694 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03608698 STRB W8, [X20 + 0x3D0]
	0x0360869C STP X31, X31, [X31 + 0x30]
	0x036086A0 STP X31, X31, [X31 + 0x20]
	0x036086A4 STR X31, [X31 + 0x18]
	0x036086A8 STR X31, [X24]
	0x036086AC LDR X0, [X19]
	0x036086B0 BL 0x1C16F10
	0x036086B4 MOV X1, X31
	0x036086B8 MOV X20, X0
	0x036086BC BL 0x33BDD8C
	0x036086C0 MOV X0, X20
	0x036086C4 MOV W1, W31
	0x036086C8 STR X21, [X20 + 0x10]
	0x036086CC BL 0x35FCF70
	0x036086D0 MOV X22, X0
	0x036086D4 LDR X0, [X27]
	0x036086D8 MOV X23, X1
	0x036086DC LDR W8, [X0 + 0xE0]
	0x036086E0 CBNZ W8, 0x36086E8
	0x036086E4 BL 0x1C16DFC
	0x036086E8 CMP W22, 0x2
	0x036086EC B.NE 0x3608B00
	0x036086F0 ADRP X8, 0xB32000
	0x036086F4 LDR X8, [X8 + 0xD68]
	0x036086F8 LDR X0, [X8]
	0x036086FC BL 0x1C16F10
	0x03608700 MOV X21, X0
	0x03608704 BL 0x36081A0
	0x03608708 AND X2, X23, 0x0
	0x0360870C MOV X0, X20
	0x03608710 MOV X1, X22
	0x03608714 BL 0x35FD280
	0x03608718 CBZ X21, 0x3608B28
	0x0360871C STR X0, [X21 + 0x18]
	0x03608720 MOV X0, X20
	0x03608724 MOV W1, W31
	0x03608728 BL 0x35FCF70
	0x0360872C LDR X8, [X27]
	0x03608730 MOV X22, X0
	0x03608734 LDR W9, [X8 + 0xE0]
	0x03608738 CBNZ W9, 0x3608744
	0x0360873C MOV X0, X8
	0x03608740 BL 0x1C16DFC
	0x03608744 CMP W22, 0x4
	0x03608748 B.NE 0x3608B00
	0x0360874C STR X24, [X31 + 0x8]
	0x03608750 MOVZ W1, 0x1
	0x03608754 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDD9000
	006 Move W8, [X21+962]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB33000
	014 Move X0, [X0+3272]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+962], W8
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xB33000
	021 Move X8, [X8+3272]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W0, W31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Move X0, [X19+24]
	039 Compare X0, 0
	040 JumpIfEqual {52}
	041 Compare X8, 0
	042 JumpIfEqual {63}
	043 Move X9, [X0]
	044 Move X1, [X8+24]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X3, [X9+312]
	048 Move X2, [X9+320]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X3
	052 Compare X8, 0
	053 JumpIfEqual {63}
	054 Move X0, [X8+16]
	055 Move X1, [X19+16]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X2, X31
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call String.op_Equality, X0, X1
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03608758 STP X31, X31, [X31 + 0x30]
	0x0360875C STP X31, X31, [X31 + 0x20]
	0x03608760 BL 0x35FCF70
	0x03608764 MOV X25, X0
	0x03608768 LDR X0, [X27]
	0x0360876C MOV X26, X1
	0x03608770 LDR W8, [X0 + 0xE0]
	0x03608774 CBNZ W8, 0x360877C
	0x03608778 BL 0x1C16DFC
	0x0360877C CMP W25, 0x2
	0x03608780 B.EQ 0x36087D8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+24]
	004 Compare X0, 0
	005 JumpIfNotEqual {9}
	006 Move X0, [X8+16]
	007 Compare X0, 0
	008 JumpIfEqual {14}
	009 Move X8, [X0]
	010 Move X2, [X8+344]
	011 Move X1, [X8+352]
	012 Move X30, [X31+16]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.ProductInfoHeaderValue> result)

Disassembly:
	0x03608784 CMP W25, 0x7
	0x03608788 B.NE 0x3608B00
	0x0360878C MOV X0, X20
	0x03608790 MOV W1, W31
	0x03608794 BL 0x35FCF70
	0x03608798 MOV X25, X0
	0x0360879C BFM X24, X1, 0x0, 0x1F
	0x036087A0 ADD X3, X31, 0x18
	0x036087A4 MOV X0, X20
	0x036087A8 MOV X1, X25
	0x036087AC MOV X2, X24
	0x036087B0 BL 0x36006DC
	0x036087B4 TBZ X0, 0x0, 0x3608B00
	0x036087B8 ADRP X8, 0xB2F000
	0x036087BC LDR X1, [X31 + 0x18]
	0x036087C0 LDR X8, [X8 + 0x738]
	0x036087C4 ADD X0, X31, 0x20
	0x036087C8 LDR X2, [X8]
	0x036087CC BL 0x2434988
	0x036087D0 MOV W26, W31
	0x036087D4 B 0x36089F0
	0x036087D8 LDR X19, [X31 + 0x10]
	0x036087DC MOV X0, X20
	0x036087E0 MOV X1, X25
	0x036087E4 BFM X19, X26, 0x0, 0x1F
	0x036087E8 MOV X2, X19
	0x036087EC BL 0x35FD280
	0x036087F0 ADRP X8, 0xAF4000
	0x036087F4 LDR X8, [X8 + 0x8D8]
	0x036087F8 MOV X25, X0
	0x036087FC MOVZ W1, 0x1
	0x03608800 LDR X8, [X8]
	0x03608804 MOV X0, X8
	0x03608808 BL 0x1C16D6C
	0x0360880C CBZ X0, 0x3608B28
	0x03608810 LDR W8, [X0 + 0x18]
	0x03608814 MOV X1, X0
	0x03608818 CBZ W8, 0x3608B2C
	0x0360881C MOVZ W8, 0x2D
	0x03608820 STR X19, [X31 + 0x10]
	0x03608824 STRH W8, [X1 + 0x20]
	0x03608828 CBZ X25, 0x3608B28
	0x0360882C MOVZ W2, 0x1
	0x03608830 MOV X0, X25
	0x03608834 MOV X3, X31
	0x03608838 BL 0x3229F54
	0x0360883C CBZ X0, 0x3608B28
	0x03608840 LDR W8, [X0 + 0x18]
	0x03608844 MOV X26, X0
	0x03608848 CBZ W8, 0x3608B2C
	0x0360884C LDR X0, [X26 + 0x20]
	0x03608850 ADD X1, X31, 0x18
	0x03608854 BL 0x3606E04
	0x03608858 TBZ X0, 0x0, 0x3608B00
	0x0360885C LDR W8, [X26 + 0x18]
	0x03608860 CMP W8, 0x2
	0x03608864 B.EQ 0x3608938
	0x03608868 CMP W8, 0x1
	0x0360886C B.NE 0x3608B00
	0x03608870 MOVZ W1, 0x1
	0x03608874 MOV X0, X20
	0x03608878 BL 0x35FCF70
	0x0360887C ADRP X8, 0xB2F000
	0x03608880 LDR X1, [X31 + 0x18]
	0x03608884 LDR X8, [X8 + 0x738]
	0x03608888 MOV X26, X0
	0x0360888C ADD X0, X31, 0x30
	0x03608890 LDR X2, [X8]
	0x03608894 BL 0x2434988
	0x03608898 LDR X0, [X27]
	0x0360889C LDR W8, [X0 + 0xE0]
	0x036088A0 CBNZ W8, 0x36088A8
	0x036088A4 BL 0x1C16DFC
	0x036088A8 CMP W26, 0x1
	0x036088AC B.EQ 0x36089B8
	0x036088B0 CMP W26, 0x8
	0x036088B4 B.EQ 0x36089E8
	0x036088B8 CMP W26, 0x7
	0x036088BC B.NE 0x3608B00
	0x036088C0 MOV X0, X20
	0x036088C4 MOV W1, W31
	0x036088C8 BL 0x35FCF70
	0x036088CC MOV X25, X0
	0x036088D0 LDR X0, [X27]
	0x036088D4 MOV X26, X1
	0x036088D8 LDR W8, [X0 + 0xE0]
	0x036088DC CBNZ W8, 0x36088E4
	0x036088E0 BL 0x1C16DFC
	0x036088E4 CMP W25, 0x2
	0x036088E8 B.NE 0x36089E0
	0x036088EC LDR X19, [X31]
	0x036088F0 ADD X3, X31, 0x18
	0x036088F4 MOV X0, X20
	0x036088F8 MOV X1, X25
	0x036088FC BFM X19, X26, 0x0, 0x1F
	0x03608900 MOV X2, X19
	0x03608904 BL 0x36006DC
	0x03608908 TBZ X0, 0x0, 0x3608B00
	0x0360890C ADRP X8, 0xB2F000
	0x03608910 LDR X1, [X31 + 0x18]
	0x03608914 LDR X8, [X8 + 0x738]
	0x03608918 ADD X0, X31, 0x20
	0x0360891C LDR X2, [X8]
	0x03608920 BL 0x2434988
	0x03608924 LDR X8, [X31 + 0x28]
	0x03608928 LDR X9, [X31 + 0x38]
	0x0360892C MOV W26, W31
	0x03608930 STR X19, [X31]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xDD9000
	011 Move X24, 0xB33000
	012 Move X21, 0xB33000
	013 Move X22, 0xB14000
	014 Move W8, [X25+963]
	015 Move X24, [X24+3280]
	016 Move X21, [X21+3288]
	017 Move X22, [X22+2248]
	018 Move X19, X2
	019 Move W20, W1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0xB14000
	026 Move X0, [X0+2248]
	027 Call 0x1C17CF4
	028 Move X0, 0xB33000
	029 Move X0, [X0+3296]
	030 Call 0x1C17CF4
	031 Move X0, 0xB33000
	032 Move X0, [X0+3288]
	033 Call 0x1C17CF4
	034 Move X0, 0xB33000
	035 Move X0, [X0+3304]
	036 Call 0x1C17CF4
	037 Move X0, 0xB33000
	038 Move X0, [X0+3280]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X25+963], W8
	042 Move X0, [X24]
	043 Move [X31+8], X31
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X21, X0
	047 Call List`1<Object>..ctor, X0
	048 Move X0, [X22]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X22, X0
	052 Call Object..ctor, X0
	053 Add X1, X31, 8
	054 Move X0, X22
	055 Move [X22+16], X23
	056 Move [X19], X31
	057 Call ProductInfoHeaderValue.TryParseElement, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {107}
	062 Move X23, 0xB33000
	063 Move X23, [X23+3296]
	064 Move X1, [X31+8]
	065 Compare X1, 0
	066 JumpIfEqual {102}
	067 Compare X21, 0
	068 JumpIfEqual {120}
	069 Move W10, [X21+28]
	070 Move X8, [X21+16]
	071 Move X9, [X23]
	072 Add W10, W10, 1
	073 Move [X21+28], W10
	074 Compare X8, 0
	075 JumpIfEqual {120}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W11, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W9, W10, 1
	080 Add X8, X8, X10
	081 Move [X21+24], W9
	082 Move [X8+32], X1
	083 Move X8, [X9+32]
	084 Move X0, X21
	085 Move X8, [X8+192]
	086 Move X2, [X8+112]
	087 Call List`1<Object>.AddWithResize, X0, X1
	088 Move X0, X22
	089 Call Lexer.PeekChar, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, [X22+24]
	093 Add X1, X31, 8
	094 Move X0, X22
	095 Add W8, W8, 1
	096 Move [X22+24], W8
	097 Call ProductInfoHeaderValue.TryParseElement, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {64}
	102 Compare X21, 0
	103 JumpIfNotEqual {105}
	104 Add W31, W0, 1
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W0, W31
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X30, [X31+16]
	115 Move X25, [X31+24]
	116 Add X31, X31, 80
	117 Return X0
	118 Move W0, 1
	119 Move [X19], X21
	120 Call 0x1C17F20

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.ProductInfoHeaderValue parsedValue)

Disassembly:
	0x03608934 B 0x3608990
	0x03608938 ADRP X8, 0xB2F000
	0x0360893C LDR X1, [X31 + 0x18]
	0x03608940 LDR X8, [X8 + 0x738]
	0x03608944 ADD X0, X31, 0x30
	0x03608948 LDR X2, [X8]
	0x0360894C BL 0x2434988
	0x03608950 LDR W8, [X26 + 0x18]
	0x03608954 CMP W8, 0x1
	0x03608958 B.LS 0x3608B2C
	0x0360895C LDR X0, [X26 + 0x28]
	0x03608960 ADD X1, X31, 0x18
	0x03608964 BL 0x3606E04
	0x03608968 TBZ X0, 0x0, 0x3608B00
	0x0360896C ADRP X8, 0xB2F000
	0x03608970 LDR X1, [X31 + 0x18]
	0x03608974 LDR X8, [X8 + 0x738]
	0x03608978 ADD X0, X31, 0x20
	0x0360897C LDR X2, [X8]
	0x03608980 BL 0x2434988
	0x03608984 LDR X8, [X31 + 0x28]
	0x03608988 LDR X9, [X31 + 0x38]
	0x0360898C MOV W26, W31
	0x03608990 CMP X8, X9
	0x03608994 B.GE 0x36089B0
	0x03608998 LDRB W8, [X31 + 0x20]
	0x0360899C CBZ W8, 0x36089B0
	0x036089A0 LDRB W8, [X31 + 0x30]
	0x036089A4 MOVZ W25, 0x2
	0x036089A8 CBZ W8, 0x36089F0
	0x036089AC B 0x3608B04
	0x036089B0 MOVZ W25, 0x2
	0x036089B4 B 0x36089F0
	0x036089B8 LDR W8, [X25 + 0x10]
	0x036089BC SUBS W1, W8, 0x1
	0x036089C0 B.LT 0x36089DC
	0x036089C4 MOV X0, X25
	0x036089C8 MOV X2, X31
	0x036089CC BL 0x3222A1C
	0x036089D0 AND W8, W0, 0xFFFF
	0x036089D4 CMP W8, 0x2D
	0x036089D8 B.NE 0x3608B00
	0x036089DC MOVZ W25, 0x1
	0x036089E0 MOVZ W26, 0x1
	0x036089E4 B 0x36089F0
	0x036089E8 MOVZ W26, 0x1
	0x036089EC MOVZ W25, 0x8
	0x036089F0 MOV X0, X21
	0x036089F4 MOV X19, X21
	0x036089F8 BL 0x36083CC
	0x036089FC ADRP X8, 0xB32000
	0x03608A00 LDP X29, X22, [X31 + 0x30]
	0x03608A04 LDP X23, X21, [X31 + 0x20]
	0x03608A08 LDR X8, [X8 + 0xD80]
	0x03608A0C MOV X27, X0
	0x03608A10 LDR X8, [X8]
	0x03608A14 MOV X0, X8
	0x03608A18 BL 0x1C16F10
	0x03608A1C MOV X1, X29
	0x03608A20 MOV X2, X22
	0x03608A24 MOV X3, X23
	0x03608A28 MOV X4, X21
	0x03608A2C MOV X28, X0
	0x03608A30 BL 0x3608B30
	0x03608A34 CBZ X27, 0x3608B28
	0x03608A38 LDR X8, [X27]
	0x03608A3C ADRP X10, 0xB32000
	0x03608A40 MOV X21, X19
	0x03608A44 LDRH W9, [X8 + 0x12E]
	0x03608A48 LDR X10, [X10 + 0xD48]
	0x03608A4C LDR X1, [X10]
	0x03608A50 CBZ X9, 0x3608A74
	0x03608A54 LDR X10, [X8 + 0xB0]
	0x03608A58 ADD X10, X10, 0x8
	0x03608A5C LDUR X11, [X10 - 0x8]
	0x03608A60 CMP X11, X1
	0x03608A64 B.EQ 0x3608A84
	0x03608A68 SUBS X9, X9, 0x1
	0x03608A6C ADD X10, X10, 0x10
	0x03608A70 B.NE 0x3608A5C
	0x03608A74 MOVZ W2, 0x2
	0x03608A78 MOV X0, X27
	0x03608A7C BL 0x1C5C788
	0x03608A80 B 0x3608A94
	0x03608A84 LDR W9, [X10]
	0x03608A88 ADD W9, W9, 0x2
	0x03608A8C ADD X8, X8, W9, 0x4, SXTW
	0x03608A90 ADD X0, X8, 0x138
	0x03608A94 LDP X8, X2, [X0]
	0x03608A98 MOV X0, X27
	0x03608A9C MOV X1, X28
	0x03608AA0 BLR X8
	0x03608AA4 TBNZ X26, 0x0, 0x3608AB8
	0x03608AA8 MOV X0, X20
	0x03608AAC MOV W1, W31
	0x03608AB0 BL 0x35FCF70
	0x03608AB4 MOV X25, X0
	0x03608AB8 ADRP X27, 0xB13000
	0x03608ABC LDR X27, [X27 + 0x8D0]
	0x03608AC0 LDR X0, [X27]
	0x03608AC4 LDR W8, [X0 + 0xE0]
	0x03608AC8 CBNZ W8, 0x3608AD0
	0x03608ACC BL 0x1C16DFC
	0x03608AD0 CMP W25, 0x8
	0x03608AD4 B.EQ 0x3608750
	0x03608AD8 LDR X0, [X27]
	0x03608ADC LDR W8, [X0 + 0xE0]
	0x03608AE0 CBNZ W8, 0x3608AE8
	0x03608AE4 BL 0x1C16DFC
	0x03608AE8 CMP W25, 0x1
	0x03608AEC B.NE 0x3608B00
	0x03608AF0 LDR X8, [X31 + 0x8]
	0x03608AF4 MOVZ W26, 0x1
	0x03608AF8 STR X21, [X8]
	0x03608AFC B 0x3608B04
	0x03608B00 MOV W26, W31
	0x03608B04 MOV W0, W26
	0x03608B08 LDP X20, X19, [X31 + 0x90]
	0x03608B0C LDP X22, X21, [X31 + 0x80]
	0x03608B10 LDP X24, X23, [X31 + 0x70]
	0x03608B14 LDP X26, X25, [X31 + 0x60]
	0x03608B18 LDP X28, X27, [X31 + 0x50]
	0x03608B1C LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xDD9000
	010 Move W8, [X21+964]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB33000
	018 Move X0, [X0+3232]
	019 Call 0x1C17CF4
	020 Move X0, 0xB33000
	021 Move X0, [X0+3272]
	022 Call 0x1C17CF4
	023 Move X0, 0xB14000
	024 Move X0, [X0+2256]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+964], W8
	028 Move [X31+24], X31
	029 Move [X31+8], W31
	030 Move [X31], X31
	031 Move [X19], X31
	032 Compare X20, 0
	033 JumpIfEqual {136}
	034 Add X1, X31, 24
	035 Add X2, X31, 0
	036 Move X0, X20
	037 Call Lexer.ScanCommentOptional, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {56}
	042 Move X21, [X31+24]
	043 Compare X21, 0
	044 JumpIfEqual {116}
	045 Move X8, 0xB33000
	046 Move X8, [X8+3272]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X20, X0
	051 Call Object..ctor, X0
	052 Move [X19], X20
	053 Compare X20, 0
	054 JumpIfEqual {136}
	055 Move [X20+16], X21
	056 Move X24, 0xB14000
	057 Move X24, [X24+2256]
	058 Move X22, [X31]
	059 Move W23, [X31+8]
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X24]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, 0xB33000
	073 Move X8, [X8+3232]
	074 Move X0, [X8]
	075 Call 0x1C17F10
	076 Move X1, X31
	077 Move X21, X0
	078 Call Object..ctor, X0
	079 Move X0, X20
	080 Move X1, X22
	081 Move X2, X23
	082 Call Lexer.GetStringValue, X0, X1
	083 Compare X21, 0
	084 JumpIfEqual {136}
	085 Move [X21+16], X0
	086 Move W23, [X20+24]
	087 Move X0, X20
	088 Move W1, W31
	089 Call Lexer.Scan, X0, X1
	090 Move X8, [X24]
	091 Move X22, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X20
	099 Move W1, W31
	100 Call Lexer.Scan, X0, X1
	101 Move X22, X0
	102 Move X0, [X24]
	103 Move X23, X1
	104 Move [X31], X22
	105 Move [X31+8], W23
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 NotImplemented "Instruction CMP not yet implemented."
	111 And X2, X23, 0
	112 Move X0, X20
	113 Move X1, X22
	114 Call Lexer.GetStringValue, X0, X1
	115 Move [X21+24], X0
	116 Move W0, W31
	117 Move [X20+24], W23
	118 Move X8, 0xB33000
	119 Move X8, [X8+3272]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X1, X21
	123 Move X20, X0
	124 Call ProductInfoHeaderValue..ctor, X0, X1
	125 Move [X19], X20
	126 Move W0, 1
	127 Move X20, [X31+64]
	128 Move X19, [X31+72]
	129 Move X22, [X31+48]
	130 Move X21, [X31+56]
	131 Move X24, [X31+32]
	132 Move X23, [X31+40]
	133 Move X30, [X31+16]
	134 Add X31, X31, 80
	135 Return X0
	136 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03608B20 ADD X31, X31, 0xA0
	0x03608B24 RET
	0x03608B28 BL 0x1C16F20
	0x03608B2C BL 0x1C16F28
	0x03608B30 STR X30, [X31 - 0x40]!
	0x03608B34 STP X24, X23, [X31 + 0x10]
	0x03608B38 STP X22, X21, [X31 + 0x20]
	0x03608B3C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X8, [X0]
	006 Move X2, [X8+360]
	007 Move X1, [X8+368]
	008 CallNoReturn X2
	009 Move X0, [X8+16]
	010 Return X0

