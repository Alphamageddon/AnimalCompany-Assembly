Type: System.Net.Http.Headers.Parser/MD5

Method: System.Boolean TryParse(System.String input, out System.Byte[] result)

Disassembly:
	0x03607E7C MOV X22, X0
	0x03607E80 TBNZ X8, 0x0, 0x3607EC8
	0x03607E84 ADRP X0, 0xB33000
	0x03607E88 LDR X0, [X0 + 0x698]
	0x03607E8C BL 0x1C16CF4
	0x03607E90 ADRP X0, 0xB14000
	0x03607E94 LDR X0, [X0 + 0x8C8]
	0x03607E98 BL 0x1C16CF4
	0x03607E9C ADRP X0, 0xB33000
	0x03607EA0 LDR X0, [X0 + 0xD18]
	0x03607EA4 BL 0x1C16CF4
	0x03607EA8 ADRP X0, 0xB14000
	0x03607EAC LDR X0, [X0 + 0x8D0]
	0x03607EB0 BL 0x1C16CF4
	0x03607EB4 ADRP X0, 0xB33000
	0x03607EB8 LDR X0, [X0 + 0x6A0]
	0x03607EBC BL 0x1C16CF4
	0x03607EC0 MOVZ W8, 0x1
	0x03607EC4 STRB W8, [X20 + 0x3C8]
	0x03607EC8 STP X31, X31, [X31]
	0x03607ECC STR X31, [X19]
	0x03607ED0 LDR X0, [X25]
	0x03607ED4 BL 0x1C16F10
	0x03607ED8 MOV X1, X31
	0x03607EDC MOV X20, X0
	0x03607EE0 BL 0x33BDD8C
	0x03607EE4 MOV X0, X20
	0x03607EE8 MOV W1, W31
	0x03607EEC STR X22, [X20 + 0x10]
	0x03607EF0 BL 0x35FCF70
	0x03607EF4 MOV X21, X0
	0x03607EF8 LDR X0, [X24]
	0x03607EFC MOV X23, X1
	0x03607F00 LDR W8, [X0 + 0xE0]
	0x03607F04 CBNZ W8, 0x3607F0C
	0x03607F08 BL 0x1C16DFC
	0x03607F0C CMP W21, 0x2
	0x03607F10 B.NE 0x3607F88
	0x03607F14 AND X2, X23, 0x0
	0x03607F18 MOV X0, X20
	0x03607F1C MOV X1, X21
	0x03607F20 BL 0x35FD280
	0x03607F24 ADRP X8, 0xB33000
	0x03607F28 LDR X8, [X8 + 0x6A0]
	0x03607F2C MOV X2, X31
	0x03607F30 LDR X1, [X8]
	0x03607F34 BL 0x3226EF8
	0x03607F38 TBZ X0, 0x0, 0x360803C
	0x03607F3C LDR X0, [X25]
	0x03607F40 LDR W8, [X0 + 0xE0]
	0x03607F44 CBNZ W8, 0x3607F4C
	0x03607F48 BL 0x1C16DFC
	0x03607F4C ADD X1, X31, 0x0
	0x03607F50 MOV X0, X22
	0x03607F54 BL 0x3604B90
	0x03607F58 TBZ X0, 0x0, 0x3608070
	0x03607F5C ADRP X8, 0xB33000
	0x03607F60 LDP X20, X21, [X31]
	0x03607F64 LDR X8, [X8 + 0xD18]
	0x03607F68 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDDA000
	007 Move X22, 0xAF6000
	008 Move W8, [X21+952]
	009 Move X22, [X22+2536]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xAF6000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+952], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Convert.FromBase64String, X0
	029 Move W8, 1
	030 Move [X19], X0
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W0, W8
	036 Move X30, [X31+48]
	037 Return X0
	038 Move X20, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X20
	041 Call 0x3EB2AD0
	042 Move X20, X0
	043 Move X0, 0xAF3000
	044 Move X0, [X0+3264]
	045 Call 0x1C17D08
	046 Move X8, [X20]
	047 Move X1, [X8]
	048 Call 0x1C18270
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {56}
	053 Call 0x3EB2AE0
	054 Move X0, X31
	055 Move W8, W31
	056 Move W0, 8
	057 Call 0x3EB2AF0
	058 Move X8, [X20]
	059 Move [X0], X8
	060 Move X1, 0x8AE000
	061 Add X1, X1, 3672
	062 Move X2, X31
	063 Call 0x3EB2B00
	064 Move X20, X0
	065 Call 0x3EB2AE0
	066 Move X0, X20
	067 Call 0x1D2D690
	068 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03607F6C BL 0x1C16F10
	0x03607F70 MOV X1, X20
	0x03607F74 MOV X2, X21
	0x03607F78 MOV X22, X0
	0x03607F7C BL 0x3607B40
	0x03607F80 STR X22, [X19]
	0x03607F84 B 0x3608034
	0x03607F88 MOV X22, X21
	0x03607F8C LDR X0, [X24]
	0x03607F90 LDR W8, [X0 + 0xE0]
	0x03607F94 CBNZ W8, 0x3607F9C
	0x03607F98 BL 0x1C16DFC
	0x03607F9C CMP W22, 0x3
	0x03607FA0 B.NE 0x3608070
	0x03607FA4 MOV X0, X20
	0x03607FA8 MOV W1, W31
	0x03607FAC BL 0x35FCF70
	0x03607FB0 LDR X8, [X24]
	0x03607FB4 MOV X24, X0
	0x03607FB8 LDR W9, [X8 + 0xE0]
	0x03607FBC CBNZ W9, 0x3607FC8
	0x03607FC0 MOV X0, X8
	0x03607FC4 BL 0x1C16DFC
	0x03607FC8 CMP W24, 0x1
	0x03607FCC B.NE 0x3608070
	0x03607FD0 ADRP X8, 0xB33000
	0x03607FD4 LDR X8, [X8 + 0x698]
	0x03607FD8 AND X24, X23, 0x0
	0x03607FDC LDR X0, [X8]
	0x03607FE0 BL 0x1C16F10
	0x03607FE4 MOV X1, X31
	0x03607FE8 MOV X23, X0
	0x03607FEC BL 0x33BDD8C
	0x03607FF0 MOV X0, X20
	0x03607FF4 MOV X1, X22
	0x03607FF8 MOV X2, X24
	0x03607FFC BL 0x35FD280
	0x03608000 CBZ X23, 0x360808C
	0x03608004 CMP W21, 0x2
	0x03608008 CSET W8, EQ
	0x0360800C STR X0, [X23 + 0x18]
	0x03608010 STRB W8, [X23 + 0x10]
	0x03608014 ADRP X8, 0xB32000
	0x03608018 LDR X8, [X8 + 0xD18]
	0x0360801C LDR X0, [X8]
	0x03608020 BL 0x1C16F10
	0x03608024 MOV X1, X23
	0x03608028 MOV X20, X0
	0x0360802C BL 0x3607BD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDDA000
	007 Move X19, 0xB34000
	008 Move W8, [X20+953]
	009 Move X19, [X19+3208]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB34000
	015 Move X0, [X0+3176]
	016 Call 0x1C17CF4
	017 Move X0, 0xB34000
	018 Move X0, [X0+3216]
	019 Call 0x1C17CF4
	020 Move X0, 0xB34000
	021 Move X0, [X0+3224]
	022 Call 0x1C17CF4
	023 Move X0, 0xB34000
	024 Move X0, [X0+3208]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+953], W8
	028 Move X0, [X19]
	029 Move X22, 0xB34000
	030 Move X20, 0xB34000
	031 Move X21, 0xB34000
	032 Move W8, [X0+224]
	033 Move X22, [X22+3176]
	034 Move X20, [X20+3224]
	035 Move X21, [X21+3216]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X3, X31
	047 Move X20, X0
	048 Call Func`2<Object, Object>..ctor, X0, X1, X2
	049 Move X8, [X21]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move [X8], X20
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X30, [X31+48]
	057 Return 

