Type: System.Net.Http.Headers.AuthenticationHeaderValue

Method: System.Void .ctor()

Disassembly:
	0x035FDB00 MOV X0, X20
	0x035FDB04 BL 0x1C16F18

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String get_Parameter()

Disassembly:
	0x035FDB08 MOV X21, X0
	0x035FDB0C CMP W1, 0x1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Parameter(System.String value)

Disassembly:
	0x035FDB10 B.NE 0x35FDB38
	0x035FDB14 MOV X0, X21

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Scheme()

Disassembly:
	0x035FDB18 BL 0x3EB1AD0
	0x035FDB1C LDR X22, [X0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_Scheme(System.String value)

Disassembly:
	0x035FDB20 BL 0x3EB1AE0
	0x035FDB24 LDR X1, [X23]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x035FDB28 ADD X0, X31, 0x20
	0x035FDB2C BL 0x2BC434C

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x035FDB30 CBZ X22, 0x35FD990
	0x035FDB34 B 0x35FDB88
	0x035FDB38 MOV X22, X31
	0x035FDB3C B 0x35FDB44
	0x035FDB40 MOV X21, X0
	0x035FDB44 LDR X1, [X23]
	0x035FDB48 ADD X0, X31, 0x20
	0x035FDB4C BL 0x2BC434C
	0x035FDB50 CBZ X22, 0x35FDBAC
	0x035FDB54 MOV X0, X22
	0x035FDB58 BL 0x1C16F18
	0x035FDB5C MOV X21, X0
	0x035FDB60 CMP W1, 0x1
	0x035FDB64 B.NE 0x35FDB90
	0x035FDB68 MOV X0, X21
	0x035FDB6C BL 0x3EB1AD0
	0x035FDB70 LDR X22, [X0]
	0x035FDB74 BL 0x3EB1AE0
	0x035FDB78 LDR X1, [X23]
	0x035FDB7C ADD X0, X31, 0x40
	0x035FDB80 BL 0x2BC434C
	0x035FDB84 CBZ X22, 0x35FD8A0
	0x035FDB88 MOV X0, X22
	0x035FDB8C BL 0x1C16F18
	0x035FDB90 MOV X22, X31
	0x035FDB94 B 0x35FDB9C
	0x035FDB98 MOV X21, X0
	0x035FDB9C LDR X1, [X23]
	0x035FDBA0 ADD X0, X31, 0x40
	0x035FDBA4 BL 0x2BC434C
	0x035FDBA8 CBNZ X22, 0x35FDBB4
	0x035FDBAC MOV X0, X21
	0x035FDBB0 BL 0x1D2C690
	0x035FDBB4 MOV X0, X22
	0x035FDBB8 BL 0x1C16F18
	0x035FDBBC BL 0x1990590
	0x035FDBC0 STR X30, [X31 - 0x30]!
	0x035FDBC4 STP X22, X21, [X31 + 0x10]
	0x035FDBC8 STP X20, X19, [X31 + 0x20]
	0x035FDBCC ADRP X21, 0xDE3000
	0x035FDBD0 LDRB W8, [X21 + 0x344]
	0x035FDBD4 MOV X20, X1
	0x035FDBD8 MOV X19, X0
	0x035FDBDC TBNZ X8, 0x0, 0x35FDC30
	0x035FDBE0 ADRP X0, 0xB3D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDE4000
	006 Move W8, [X21+827]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB3E000
	014 Move X0, [X0+1328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+827], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, 0xB3E000
	021 Move X8, [X8+1328]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {58}
	034 Move X0, [X20+24]
	035 Move X1, [X19+24]
	036 Move W2, 5
	037 Move X3, X31
	038 Call String.Equals, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {52}
	043 Move X0, [X20+16]
	044 Move X1, [X19+16]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call String.op_Equality, X0, X1
	051 Return X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move W0, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x035FDBE4 LDR X0, [X0 + 0x560]
	0x035FDBE8 BL 0x1C16CF4
	0x035FDBEC ADRP X0, 0xB3D000
	0x035FDBF0 LDR X0, [X0 + 0x590]
	0x035FDBF4 BL 0x1C16CF4
	0x035FDBF8 ADRP X0, 0xB3D000
	0x035FDBFC LDR X0, [X0 + 0x598]
	0x035FDC00 BL 0x1C16CF4
	0x035FDC04 ADRP X0, 0xB3D000
	0x035FDC08 LDR X0, [X0 + 0x5A0]
	0x035FDC0C BL 0x1C16CF4
	0x035FDC10 ADRP X0, 0xB2A000
	0x035FDC14 LDR X0, [X0 + 0xB88]
	0x035FDC18 BL 0x1C16CF4
	0x035FDC1C ADRP X0, 0xAF8000
	0x035FDC20 LDR X0, [X0 + 0x570]
	0x035FDC24 BL 0x1C16CF4
	0x035FDC28 MOVZ W8, 0x1
	0x035FDC2C STRB W8, [X21 + 0x344]
	0x035FDC30 CBZ X20, 0x35FDF44
	0x035FDC34 ADRP X8, 0xB3D000
	0x035FDC38 LDR X8, [X8 + 0x560]
	0x035FDC3C LDR X9, [X20]
	0x035FDC40 LDR X8, [X8]
	0x035FDC44 LDRB W11, [X9 + 0x130]
	0x035FDC48 LDRB W10, [X8 + 0x130]
	0x035FDC4C CMP W11, W10
	0x035FDC50 B.CC 0x35FDF44
	0x035FDC54 LDR X9, [X9 + 0xC8]
	0x035FDC58 ADD X9, X9, X10, 0x3, LSL
	0x035FDC5C LDUR X9, [X9 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+24]
	006 Compare X0, 0
	007 JumpIfEqual {42}
	008 Move X1, X31
	009 Call String.ToLowerInvariant, X0
	010 Compare X0, 0
	011 JumpIfEqual {42}
	012 Move X8, [X0]
	013 Move X9, [X8+344]
	014 Move X1, [X8+352]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X20+16]
	017 Move W19, W0
	018 Move X1, X31
	019 Move X0, X8
	020 Call String.IsNullOrEmpty, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {37}
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {42}
	028 Move X1, X31
	029 Call String.ToLowerInvariant, X0
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, [X0]
	033 Move X9, [X8+344]
	034 Move X1, [X8+352]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Xor W19, W0, W19
	037 Move W0, W19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.AuthenticationHeaderValue parsedValue)

Disassembly:
	0x035FDC60 CMP X9, X8
	0x035FDC64 CSEL X22, X20, X31, EQ
	0x035FDC68 B.NE 0x35FDF44
	0x035FDC6C CBZ X22, 0x35FDF58
	0x035FDC70 LDRB W8, [X19 + 0x28]
	0x035FDC74 LDRB W9, [X22 + 0x28]
	0x035FDC78 CMP W8, 0x0
	0x035FDC7C CSET W10, NE
	0x035FDC80 CMP W9, 0x0
	0x035FDC84 CSET W9, NE
	0x035FDC88 EOR W9, W10, W9, 0x0
	0x035FDC8C TBNZ X9, 0x0, 0x35FDF44
	0x035FDC90 CBZ W8, 0x35FDCC8
	0x035FDC94 ADRP X8, 0xAF8000
	0x035FDC98 LDR X8, [X8 + 0x570]
	0x035FDC9C LDR X20, [X19 + 0x30]
	0x035FDCA0 LDR X21, [X22 + 0x30]
	0x035FDCA4 LDR X0, [X8]
	0x035FDCA8 LDR W8, [X0 + 0xE0]
	0x035FDCAC CBNZ W8, 0x35FDCB4
	0x035FDCB0 BL 0x1C16DFC
	0x035FDCB4 MOV X0, X20
	0x035FDCB8 MOV X1, X21
	0x035FDCBC MOV X2, X31
	0x035FDCC0 BL 0x3394CE4
	0x035FDCC4 TBNZ X0, 0x0, 0x35FDF44
	0x035FDCC8 LDRB W8, [X19 + 0x38]
	0x035FDCCC LDRB W9, [X22 + 0x38]
	0x035FDCD0 CMP W8, 0x0
	0x035FDCD4 CSET W8, EQ
	0x035FDCD8 CMP W9, 0x0
	0x035FDCDC CSET W9, NE
	0x035FDCE0 CMP W8, W9
	0x035FDCE4 B.EQ 0x35FDF44
	0x035FDCE8 LDRB W8, [X19 + 0x40]
	0x035FDCEC LDRB W9, [X22 + 0x40]
	0x035FDCF0 CMP W8, 0x0
	0x035FDCF4 CSET W10, NE
	0x035FDCF8 CMP W9, 0x0
	0x035FDCFC CSET W9, NE
	0x035FDD00 EOR W9, W10, W9, 0x0
	0x035FDD04 TBNZ X9, 0x0, 0x35FDF44
	0x035FDD08 CBZ W8, 0x35FDD40
	0x035FDD0C ADRP X8, 0xAF8000
	0x035FDD10 LDR X8, [X8 + 0x570]
	0x035FDD14 LDR X20, [X19 + 0x48]
	0x035FDD18 LDR X21, [X22 + 0x48]
	0x035FDD1C LDR X0, [X8]
	0x035FDD20 LDR W8, [X0 + 0xE0]
	0x035FDD24 CBNZ W8, 0x35FDD2C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xDE4000
	008 Move X21, 0xB1F000
	009 Move W8, [X22+828]
	010 Move X21, [X21+2248]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB1F000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move X0, 0xB1F000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+828], W8
	025 Move X0, [X21]
	026 Move [X31+8], W31
	027 Move [X31], X31
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Add X2, X31, 0
	033 Move X0, X21
	034 Move X1, X19
	035 Move [X21+16], X20
	036 Call AuthenticationHeaderValue.TryParseElement, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {51}
	041 Move X8, 0xB1F000
	042 Move X8, [X8+2256]
	043 Move X20, [X31]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W0, 1
	051 Move W0, W31
	052 Move [X19], X31
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 64
	059 Return X0

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.AuthenticationHeaderValue> result)

Disassembly:
	0x035FDEC0 LDR X8, [X8 + 0x570]
	0x035FDEC4 LDR X20, [X19 + 0x70]
	0x035FDEC8 LDR X21, [X22 + 0x70]
	0x035FDECC LDR X0, [X8]
	0x035FDED0 LDR W8, [X0 + 0xE0]
	0x035FDED4 CBNZ W8, 0x35FDEDC
	0x035FDED8 BL 0x1C16DFC
	0x035FDEDC MOV X0, X20
	0x035FDEE0 MOV X1, X21
	0x035FDEE4 MOV X2, X31
	0x035FDEE8 BL 0x3394CE4
	0x035FDEEC TBNZ X0, 0x0, 0x35FDF44
	0x035FDEF0 ADRP X8, 0xB3D000
	0x035FDEF4 LDR X0, [X19 + 0x10]
	0x035FDEF8 LDR X1, [X22 + 0x10]
	0x035FDEFC LDR X8, [X8 + 0x590]
	0x035FDF00 LDR X2, [X8]
	0x035FDF04 BL 0x21A1DF4
	0x035FDF08 TBZ X0, 0x0, 0x35FDF44
	0x035FDF0C ADRP X20, 0xB3D000
	0x035FDF10 LDR X0, [X19 + 0x18]
	0x035FDF14 LDR X1, [X22 + 0x18]
	0x035FDF18 LDR X20, [X20 + 0x598]
	0x035FDF1C LDR X2, [X20]
	0x035FDF20 BL 0x21A1DF4
	0x035FDF24 TBZ X0, 0x0, 0x35FDF44
	0x035FDF28 LDR X0, [X19 + 0x20]
	0x035FDF2C LDR X1, [X22 + 0x20]
	0x035FDF30 LDR X2, [X20]
	0x035FDF34 LDP X20, X19, [X31 + 0x20]
	0x035FDF38 LDP X22, X21, [X31 + 0x10]
	0x035FDF3C LDR X30, [X31], #0x30
	0x035FDF40 B 0x21A1DF4
	0x035FDF44 LDP X20, X19, [X31 + 0x20]
	0x035FDF48 LDP X22, X21, [X31 + 0x10]
	0x035FDF4C MOV W0, W31
	0x035FDF50 LDR X30, [X31], #0x30
	0x035FDF54 RET
	0x035FDF58 BL 0x1C16F20
	0x035FDF5C SUB X31, X31, 0x90
	0x035FDF60 STP X29, X30, [X31 + 0x30]
	0x035FDF64 STP X28, X27, [X31 + 0x40]
	0x035FDF68 STP X26, X25, [X31 + 0x50]
	0x035FDF6C STP X24, X23, [X31 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDE4000
	010 Move X25, 0xB3E000
	011 Move X22, 0xB3E000
	012 Move X23, 0xB3E000
	013 Move W8, [X24+829]
	014 Move X25, [X25+1336]
	015 Move X22, [X22+1344]
	016 Move X23, [X23+1352]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB3E000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3E000
	028 Move X0, [X0+1352]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3E000
	031 Move X0, [X0+1336]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+829], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.AuthenticationHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x035FDD50 CMP W9, 0x0
	0x035FDD54 CSET W9, NE
	0x035FDD58 EOR W9, W10, W9, 0x0
	0x035FDD5C TBNZ X9, 0x0, 0x35FDF44
	0x035FDD60 CBZ W8, 0x35FDD98
	0x035FDD64 ADRP X8, 0xAF8000
	0x035FDD68 LDR X8, [X8 + 0x570]
	0x035FDD6C LDR X20, [X19 + 0x58]
	0x035FDD70 LDR X21, [X22 + 0x58]
	0x035FDD74 LDR X0, [X8]
	0x035FDD78 LDR W8, [X0 + 0xE0]
	0x035FDD7C CBNZ W8, 0x35FDD84
	0x035FDD80 BL 0x1C16DFC
	0x035FDD84 MOV X0, X20
	0x035FDD88 MOV X1, X21
	0x035FDD8C MOV X2, X31
	0x035FDD90 BL 0x3394CE4
	0x035FDD94 TBNZ X0, 0x0, 0x35FDF44
	0x035FDD98 LDRB W8, [X19 + 0x60]
	0x035FDD9C LDRB W9, [X22 + 0x60]
	0x035FDDA0 CMP W8, 0x0
	0x035FDDA4 CSET W8, EQ
	0x035FDDA8 CMP W9, 0x0
	0x035FDDAC CSET W9, NE
	0x035FDDB0 CMP W8, W9
	0x035FDDB4 B.EQ 0x35FDF44
	0x035FDDB8 LDRB W8, [X19 + 0x61]
	0x035FDDBC LDRB W9, [X22 + 0x61]
	0x035FDDC0 CMP W8, 0x0
	0x035FDDC4 CSET W8, EQ
	0x035FDDC8 CMP W9, 0x0
	0x035FDDCC CSET W9, NE
	0x035FDDD0 CMP W8, W9
	0x035FDDD4 B.EQ 0x35FDF44
	0x035FDDD8 LDRB W8, [X19 + 0x62]
	0x035FDDDC LDRB W9, [X22 + 0x62]
	0x035FDDE0 CMP W8, 0x0
	0x035FDDE4 CSET W8, EQ
	0x035FDDE8 CMP W9, 0x0
	0x035FDDEC CSET W9, NE
	0x035FDDF0 CMP W8, W9
	0x035FDDF4 B.EQ 0x35FDF44
	0x035FDDF8 LDRB W8, [X19 + 0x63]
	0x035FDDFC LDRB W9, [X22 + 0x63]
	0x035FDE00 CMP W8, 0x0
	0x035FDE04 CSET W8, EQ
	0x035FDE08 CMP W9, 0x0
	0x035FDE0C CSET W9, NE
	0x035FDE10 CMP W8, W9
	0x035FDE14 B.EQ 0x35FDF44
	0x035FDE18 LDRB W8, [X19 + 0x64]
	0x035FDE1C LDRB W9, [X22 + 0x64]
	0x035FDE20 CMP W8, 0x0
	0x035FDE24 CSET W8, EQ
	0x035FDE28 CMP W9, 0x0
	0x035FDE2C CSET W9, NE
	0x035FDE30 CMP W8, W9
	0x035FDE34 B.EQ 0x35FDF44
	0x035FDE38 LDRB W8, [X19 + 0x65]
	0x035FDE3C LDRB W9, [X22 + 0x65]
	0x035FDE40 CMP W8, 0x0
	0x035FDE44 CSET W8, EQ
	0x035FDE48 CMP W9, 0x0
	0x035FDE4C CSET W9, NE
	0x035FDE50 CMP W8, W9
	0x035FDE54 B.EQ 0x35FDF44
	0x035FDE58 LDRB W8, [X19 + 0x66]
	0x035FDE5C LDRB W9, [X22 + 0x66]
	0x035FDE60 CMP W8, 0x0
	0x035FDE64 CSET W8, EQ
	0x035FDE68 CMP W9, 0x0
	0x035FDE6C CSET W9, NE
	0x035FDE70 CMP W8, W9
	0x035FDE74 B.EQ 0x35FDF44
	0x035FDE78 LDRB W8, [X19 + 0x67]
	0x035FDE7C LDRB W9, [X22 + 0x67]
	0x035FDE80 CMP W8, 0x0
	0x035FDE84 CSET W8, EQ
	0x035FDE88 CMP W9, 0x0
	0x035FDE8C CSET W9, NE
	0x035FDE90 CMP W8, W9
	0x035FDE94 B.EQ 0x35FDF44
	0x035FDE98 LDRB W8, [X19 + 0x68]
	0x035FDE9C LDRB W9, [X22 + 0x68]
	0x035FDEA0 CMP W8, 0x0
	0x035FDEA4 CSET W10, NE
	0x035FDEA8 CMP W9, 0x0
	0x035FDEAC CSET W9, NE
	0x035FDEB0 EOR W9, W10, W9, 0x0
	0x035FDEB4 TBNZ X9, 0x0, 0x35FDF44
	0x035FDEB8 CBZ W8, 0x35FDEF0
	0x035FDEBC ADRP X8, 0xAF8000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xDE4000
	010 Move W8, [X20+830]
	011 Move X19, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB3E000
	019 Move X0, [X0+1328]
	020 Call 0x1C17CF4
	021 Move X0, 0xB1F000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+830], W8
	026 Compare X21, 0
	027 JumpIfEqual {104}
	028 Move X24, 0xB1F000
	029 Move X24, [X24+2256]
	030 Move X0, X21
	031 Move W1, W31
	032 Call Lexer.Scan, X0, X1
	033 Move [X19], X0
	034 Move [X19+8], W1
	035 Move X20, X0
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xB3E000
	043 Move X8, [X8+1328]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X23, X0
	048 Call Object..ctor, X0
	049 Move [X22], X23
	050 Move X1, [X19]
	051 Move W2, [X19+8]
	052 Move X0, X21
	053 Call Lexer.GetStringValue, X0, X1
	054 Compare X23, 0
	055 JumpIfEqual {104}
	056 Move [X23+24], X0
	057 Move X0, X21
	058 Move W1, W31
	059 Call Lexer.Scan, X0, X1
	060 Move [X19], X0
	061 Move [X19+8], W1
	062 Move X23, X0
	063 Move X0, [X24]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X24]
	070 Move X22, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move W1, [X19+4]
	076 Move X0, X21
	077 Call Lexer.GetRemainingStringValue, X0, X1
	078 Compare X22, 0
	079 JumpIfEqual {104}
	080 Move [X22+16], X0
	081 Add X0, X31, 0
	082 Move W1, 1
	083 Move W2, W31
	084 Move W3, W31
	085 Move [X31+8], W31
	086 Move [X31], X31
	087 Call Token..ctor, X0, X1, X2, X3
	088 Move W8, [X31+8]
	089 Move X9, [X31]
	090 Move [X19+8], W8
	091 Move [X19], X9
	092 Move [X22], X31
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X30, [X31+16]
	101 NotImplemented "Instruction CSET not yet implemented."
	102 Add X31, X31, 80
	103 Return X0
	104 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x035FE3A8 B.HI 0x35FE418
	0x035FE3AC MOVZ W8, 0xBD1E
	0x035FE3B0 MOVK W8, 0x2AE30000
	0x035FE3B4 CMP W0, W8
	0x035FE3B8 B.HI 0x35FE484
	0x035FE3BC MOVZ W8, 0x1B3A
	0x035FE3C0 MOVK W8, 0x7B10000
	0x035FE3C4 CMP W0, W8
	0x035FE3C8 B.EQ 0x35FE4FC
	0x035FE3CC MOVZ W8, 0x9480
	0x035FE3D0 MOVK W8, 0x18920000
	0x035FE3D4 CMP W0, W8
	0x035FE3D8 B.EQ 0x35FE508
	0x035FE3DC MOVZ W8, 0xBD1E
	0x035FE3E0 MOVK W8, 0x2AE30000
	0x035FE3E4 CMP W0, W8
	0x035FE3E8 B.NE 0x35FE950
	0x035FE3EC ADRP X8, 0xB3C000
	0x035FE3F0 LDR X8, [X8 + 0x5D0]
	0x035FE3F4 MOV X0, X29
	0x035FE3F8 MOV X2, X31
	0x035FE3FC LDR X1, [X8]
	0x035FE400 BL 0x321BA08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE3000
	005 Move W8, [X20+831]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xAF6000
	012 Move X0, [X0+3544]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+831], W8
	016 Move X2, [X19+16]
	017 Move X0, [X19+24]
	018 Compare X2, 0
	019 JumpIfEqual {29}
	020 Move X8, 0xAF6000
	021 Move X8, [X8+3544]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, X31
	025 Move X1, [X8]
	026 Move X30, [X31+32]
	027 Call String.Concat, X0, X1, X2
	028 Return X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

