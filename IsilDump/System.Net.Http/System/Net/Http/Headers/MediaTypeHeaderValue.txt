Type: System.Net.Http.Headers.MediaTypeHeaderValue

Method: System.Void .ctor(System.String mediaType)

Disassembly:
	0x0360616C B.NE 0x360625C
	0x03606170 ADRP X8, 0xB34000
	0x03606174 LDR X8, [X8 + 0x628]
	0x03606178 LDR X0, [X8]
	0x0360617C BL 0x1C16F10
	0x03606180 MOV X1, X31
	0x03606184 MOV X22, X0
	0x03606188 BL 0x33BDD8C
	0x0360618C LDR X1, [X19]
	0x03606190 LDR W2, [X19 + 0x8]
	0x03606194 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Void .ctor(System.Net.Http.Headers.MediaTypeHeaderValue source)

Disassembly:
	0x036062F0 BL 0x35FF92C
	0x036062F4 CBZ X20, 0x36063DC
	0x036062F8 LDR X0, [X20 + 0x20]
	0x036062FC CBZ X0, 0x36063C0
	0x03606300 ADRP X8, 0xB34000
	0x03606304 LDR X8, [X8 + 0x588]
	0x03606308 ADRP X23, 0xB34000
	0x0360630C ADRP X24, 0xB34000
	0x03606310 ADRP X22, 0xB34000
	0x03606314 LDR X1, [X8]
	0x03606318 LDR X23, [X23 + 0x570]
	0x0360631C LDR X24, [X24 + 0x5C0]
	0x03606320 LDR X22, [X22 + 0x568]
	0x03606324 ADD X8, X31, 0x8
	0x03606328 BL 0x301CB58
	0x0360632C LDR X1, [X23]
	0x03606330 ADD X0, X31, 0x8
	0x03606334 BL 0x2BC4350
	0x03606338 TBZ X0, 0x0, 0x36063B4
	0x0360633C LDR X20, [X31 + 0x18]
	0x03606340 MOV X0, X19
	0x03606344 BL 0x3606450
	0x03606348 MOV X21, X0
	0x0360634C CBZ X0, 0x36063D8
	0x03606350 LDR X8, [X21]
	0x03606354 LDR X1, [X24]
	0x03606358 LDRH W9, [X8 + 0x12E]
	0x0360635C CBZ X9, 0x3606380
	0x03606360 LDR X10, [X8 + 0xB0]
	0x03606364 ADD X10, X10, 0x8
	0x03606368 LDUR X11, [X10 - 0x8]
	0x0360636C CMP X11, X1
	0x03606370 B.EQ 0x3606390
	0x03606374 SUBS X9, X9, 0x1
	0x03606378 ADD X10, X10, 0x10
	0x0360637C B.NE 0x3606368
	0x03606380 MOVZ W2, 0x2
	0x03606384 MOV X0, X21
	0x03606388 BL 0x1C5C788
	0x0360638C B 0x36063A0
	0x03606390 LDR W9, [X10]
	0x03606394 ADD W9, W9, 0x2
	0x03606398 ADD X8, X8, W9, 0x4, SXTW
	0x0360639C ADD X0, X8, 0x138
	0x036063A0 LDP X8, X2, [X0]
	0x036063A4 MOV X0, X21
	0x036063A8 MOV X1, X20
	0x036063AC BLR X8
	0x036063B0 B 0x360632C
	0x036063B4 LDR X1, [X22]
	0x036063B8 ADD X0, X31, 0x8
	0x036063BC BL 0x2BC434C
	0x036063C0 LDP X20, X19, [X31 + 0x50]
	0x036063C4 LDP X22, X21, [X31 + 0x40]
	0x036063C8 LDP X24, X23, [X31 + 0x30]
	0x036063CC LDR X30, [X31 + 0x20]
	0x036063D0 ADD X31, X31, 0x60
	0x036063D4 RET
	0x036063D8 BL 0x1C16F20
	0x036063DC BL 0x1C16F20
	0x036063E0 B 0x36063EC
	0x036063E4 B 0x36063EC
	0x036063E8 B 0x36063EC
	0x036063EC MOV X19, X0
	0x036063F0 CMP W1, 0x1
	0x036063F4 B.NE 0x3606420
	0x036063F8 MOV X0, X19
	0x036063FC BL 0x3EB1AD0
	0x03606400 LDR X20, [X0]
	0x03606404 BL 0x3EB1AE0
	0x03606408 LDR X1, [X22]
	0x0360640C ADD X0, X31, 0x8
	0x03606410 BL 0x2BC434C
	0x03606414 CBZ X20, 0x36063C0
	0x03606418 MOV X0, X20
	0x0360641C BL 0x1C16F18
	0x03606420 MOV X20, X31
	0x03606424 B 0x360642C
	0x03606428 MOV X19, X0
	0x0360642C LDR X1, [X22]
	0x03606430 ADD X0, X31, 0x8
	0x03606434 BL 0x2BC434C
	0x03606438 CBNZ X20, 0x3606444
	0x0360643C MOV X0, X19
	0x03606440 BL 0x1D2C690
	0x03606444 MOV X0, X20
	0x03606448 BL 0x1C16F18
	0x0360644C BL 0x1990590
	0x03606450 STR X30, [X31 - 0x20]!
	0x03606454 STP X20, X19, [X31 + 0x10]
	0x03606458 ADRP X20, 0xDDA000
	0x0360645C LDRB W8, [X20 + 0x3A7]
	0x03606460 MOV X19, X0
	0x03606464 TBNZ X8, 0x0, 0x3606488
	0x03606468 ADRP X0, 0xB34000
	0x0360646C LDR X0, [X0 + 0x550]
	0x03606470 BL 0x1C16CF4
	0x03606474 ADRP X0, 0xB34000
	0x03606478 LDR X0, [X0 + 0x558]
	0x0360647C BL 0x1C16CF4
	0x03606480 MOVZ W8, 0x1
	0x03606484 STRB W8, [X20 + 0x3A7]
	0x03606488 LDR X20, [X19 + 0x20]
	0x0360648C CBNZ X20, 0x36064B8
	0x03606490 ADRP X8, 0xB34000
	0x03606494 LDR X8, [X8 + 0x558]
	0x03606498 LDR X0, [X8]
	0x0360649C BL 0x1C16F10
	0x036064A0 ADRP X8, 0xB34000
	0x036064A4 LDR X8, [X8 + 0x550]
	0x036064A8 MOV X20, X0
	0x036064AC LDR X1, [X8]
	0x036064B0 BL 0x301B7C4
	0x036064B4 STR X20, [X19 + 0x20]
	0x036064B8 MOV X0, X20
	0x036064BC LDP X20, X19, [X31 + 0x10]
	0x036064C0 LDR X30, [X31], #0x20
	0x036064C4 RET
	0x036064C8 MOV X1, X31
	0x036064CC B 0x33BDD8C
	0x036064D0 STP X30, X21, [X31 - 0x20]!
	0x036064D4 STP X20, X19, [X31 + 0x10]
	0x036064D8 ADRP X20, 0xDDA000
	0x036064DC ADRP X21, 0xB34000
	0x036064E0 LDRB W8, [X20 + 0x3A8]
	0x036064E4 LDR X21, [X21 + 0xC38]
	0x036064E8 MOV X19, X0
	0x036064EC TBNZ X8, 0x0, 0x3606504
	0x036064F0 ADRP X0, 0xB34000
	0x036064F4 LDR X0, [X0 + 0xC38]
	0x036064F8 BL 0x1C16CF4
	0x036064FC MOVZ W8, 0x1
	0x03606500 STRB W8, [X20 + 0x3A8]
	0x03606504 LDR X0, [X21]
	0x03606508 BL 0x1C16F10
	0x0360650C MOV X1, X19
	0x03606510 MOV X20, X0
	0x03606514 BL 0x3606274
	0x03606518 MOV X0, X20
	0x0360651C LDP X20, X19, [X31 + 0x10]
	0x03606520 LDP X30, X21, [X31], #0x20
	0x03606524 RET
	0x03606528 STP X30, X21, [X31 - 0x20]!
	0x0360652C STP X20, X19, [X31 + 0x10]
	0x03606530 ADRP X21, 0xDDA000
	0x03606534 LDRB W8, [X21 + 0x3A9]
	0x03606538 MOV X20, X1
	0x0360653C MOV X19, X0
	0x03606540 TBNZ X8, 0x0, 0x3606564
	0x03606544 ADRP X0, 0xB34000
	0x03606548 LDR X0, [X0 + 0x590]
	0x0360654C BL 0x1C16CF4
	0x03606550 ADRP X0, 0xB34000
	0x03606554 LDR X0, [X0 + 0xC38]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0xDDB000
	012 Move W8, [X21+913]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB35000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move X0, 0xB35000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move X0, 0xB35000
	026 Move X0, [X0+1400]
	027 Call 0x1C17CF4
	028 Move X0, 0xB35000
	029 Move X0, [X0+1472]
	030 Call 0x1C17CF4
	031 Move X0, 0xB35000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move X0, 0xB35000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+913], W8
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Call Object..ctor, X0
	045 Compare X20, 0
	046 JumpIfEqual {125}
	047 Move X8, [X20+24]
	048 Move [X19+24], X8
	049 Move X0, [X20+16]
	050 Compare X0, 0
	051 JumpIfEqual {113}
	052 Move X8, 0xB35000
	053 Move X8, [X8+1416]
	054 Move X24, 0xB35000
	055 Move X24, [X24+1392]
	056 Move X25, 0xB35000
	057 Move X1, [X8]
	058 Move X26, 0xB35000
	059 Move X23, 0xB35000
	060 Move X25, [X25+1576]
	061 Move X26, [X26+1472]
	062 Move X23, [X23+1384]
	063 Add X8, X31, 8
	064 Call List`1<Object>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+24]
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X1, [X24]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {110}
	076 Move X22, [X31+48]
	077 Move X0, X19
	078 Call MediaTypeHeaderValue.get_Parameters, X0
	079 Move X20, X0
	080 Move X0, [X25]
	081 Call 0x1C17F10
	082 Move X21, X0
	083 Move X1, X22
	084 Call NameValueHeaderValue..ctor, X0, X1
	085 Compare X20, 0
	086 JumpIfEqual {124}
	087 Move X8, [X20]
	088 Move X1, [X26]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 2
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 2
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move X1, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X1, [X23]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.Dispose, X0
	113 Move X20, [X31+128]
	114 Move X19, [X31+136]
	115 Move X22, [X31+112]
	116 Move X21, [X31+120]
	117 Move X24, [X31+96]
	118 Move X23, [X31+104]
	119 Move X26, [X31+80]
	120 Move X25, [X31+88]
	121 Move X30, [X31+64]
	122 Add X31, X31, 144
	123 Return 
	124 Call 0x1C17F20
	125 Move X0, 0xAF3000
	126 Move X0, [X0+1320]
	127 Call 0x1C17D08
	128 Call 0x1C17F10
	129 Move X19, X0
	130 Move X0, 0xAF9000
	131 Move X0, [X0+1408]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call ArgumentNullException..ctor, X0, X1
	137 Move X0, 0xB35000
	138 Move X0, [X0+3048]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X19
	142 Call 0x1C17DEC
	143 Move X19, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X1, [X23]
	150 Add X0, X31, 32
	151 Call Enumerator<Object>.Dispose, X0
	152 Compare X20, 0
	153 JumpIfEqual {113}
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Move X20, X31
	157 Move X19, X0
	158 Move X1, [X23]
	159 Add X0, X31, 32
	160 Call Enumerator<Object>.Dispose, X0
	161 Compare X20, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call 0x1D2D690
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x036065D0 B 0x21A1DF4
	0x036065D4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String get_CharSet()

Disassembly:
	0x035FC7AC MOV X0, X21
	0x035FC7B0 MOV X2, X31
	0x035FC7B4 BL 0x3233F90
	0x035FC7B8 LDR X1, [X23]
	0x035FC7BC MOV X0, X20
	0x035FC7C0 MOV X2, X31
	0x035FC7C4 BL 0x32333E0
	0x035FC7C8 LDR X8, [X19 + 0x38]
	0x035FC7CC MOV X21, X0
	0x035FC7D0 CBZ X8, 0x35FC7F0
	0x035FC7D4 LDR X9, [X8]
	0x035FC7D8 MOV X0, X8
	0x035FC7DC LDP X10, X1, [X9 + 0x168]
	0x035FC7E0 BLR X10
	0x035FC7E4 MOV X1, X0
	0x035FC7E8 CBNZ X21, 0x35FC7F8
	0x035FC7EC B 0x35FC88C
	0x035FC7F0 LDR X1, [X22]
	0x035FC7F4 CBZ X21, 0x35FC88C
	0x035FC7F8 ADRP X22, 0xB3E000
	0x035FC7FC LDR X22, [X22 + 0x4F8]
	0x035FC800 MOV X0, X21
	0x035FC804 MOV X2, X31
	0x035FC808 BL 0x32333E0
	0x035FC80C LDR X1, [X22]
	0x035FC810 MOV X0, X20
	0x035FC814 MOV X2, X31
	0x035FC818 BL 0x32333E0
	0x035FC81C MOV X21, X0
	0x035FC820 MOV X0, X19
	0x035FC824 BL 0x35F6EE4
	0x035FC828 CBZ X21, 0x35FC88C
	0x035FC82C ADRP X22, 0xB02000
	0x035FC830 LDR X22, [X22 + 0x6D8]
	0x035FC834 MOV X1, X0
	0x035FC838 MOV X0, X21
	0x035FC83C MOV X2, X31
	0x035FC840 BL 0x3233F90
	0x035FC844 LDR X0, [X19 + 0x38]
	0x035FC848 CBZ X0, 0x35FC860
	0x035FC84C BL 0x35F6E80
	0x035FC850 MOV X1, X0
	0x035FC854 MOV X0, X20
	0x035FC858 MOV X2, X31
	0x035FC85C BL 0x3233F90
	0x035FC860 LDR X1, [X22]
	0x035FC864 MOV X0, X20
	0x035FC868 MOV X2, X31
	0x035FC86C BL 0x32333E0
	0x035FC870 LDR X8, [X20]
	0x035FC874 MOV X0, X20
	0x035FC878 LDP X20, X19, [X31 + 0x20]
	0x035FC87C LDP X22, X21, [X31 + 0x10]
	0x035FC880 LDP X2, X1, [X8 + 0x168]
	0x035FC884 LDP X30, X23, [X31], #0x30
	0x035FC888 BR X2
	0x035FC88C BL 0x1C16F20
	0x035FC890 MOVZ W2, 0x4000
	0x035FC894 B 0x35FC898
	0x035FC898 STP X30, X21, [X31 - 0x20]!
	0x035FC89C STP X20, X19, [X31 + 0x10]
	0x035FC8A0 MOV X20, X1
	0x035FC8A4 MOV X1, X31
	0x035FC8A8 MOV W21, W2
	0x035FC8AC MOV X19, X0
	0x035FC8B0 BL 0x33BDD8C
	0x035FC8B4 CBZ X20, 0x35FC8FC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xDE5000
	008 Move W8, [X20+914]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB3F000
	015 Move X0, [X0+1176]
	016 Call 0x1C17CF4
	017 Move X0, 0xB3F000
	018 Move X0, [X0+1184]
	019 Call 0x1C17CF4
	020 Move X0, 0xB3F000
	021 Move X0, [X0+1192]
	022 Call 0x1C17CF4
	023 Move X0, 0xB3F000
	024 Move X0, [X0+1200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+914], W8
	028 Move X19, [X19+16]
	029 Compare X19, 0
	030 JumpIfEqual {73}
	031 Move X22, 0xB3F000
	032 Move X22, [X22+1200]
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X23, 0xB3F000
	041 Move X20, [X8+8]
	042 Move X23, [X23+1176]
	043 Compare X20, 0
	044 JumpIfNotEqual {66}
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X9, 0xB3F000
	051 Move X8, [X0+184]
	052 Move X9, [X9+1184]
	053 Move X21, [X8]
	054 Move X0, [X9]
	055 Call 0x1C17F10
	056 Move X8, 0xB3F000
	057 Move X8, [X8+1192]
	058 Move X1, X21
	059 Move X3, X31
	060 Move X20, X0
	061 Move X2, [X8]
	062 Call Predicate`1<Object>..ctor, X0, X1, X2
	063 Move X8, [X22]
	064 Move X8, [X8+184]
	065 Move [X8+8], X20
	066 Move X2, [X23]
	067 Move X0, X19
	068 Move X1, X20
	069 Call List`1<Object>.Find, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {74}
	072 Move X0, [X0+16]
	073 Move X0, X31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return X0

Method: System.Void set_MediaType(System.String value)

Disassembly:
	0x03606198 BL 0x35FD280
	0x0360619C CBZ X22, 0x3606270
	0x036061A0 STR X0, [X22 + 0x18]
	0x036061A4 MOV X0, X20
	0x036061A8 MOV W1, W31
	0x036061AC STR X22, [X21]
	0x036061B0 BL 0x35FCF70
	0x036061B4 STR X0, [X19]
	0x036061B8 STR W1, [X19 + 0x8]
	0x036061BC MOV X22, X0
	0x036061C0 LDR X0, [X23]
	0x036061C4 LDR W8, [X0 + 0xE0]
	0x036061C8 CBNZ W8, 0x36061D0
	0x036061CC BL 0x1C16DFC
	0x036061D0 CMP W22, 0x4
	0x036061D4 B.NE 0x3606254
	0x036061D8 MOV X0, X20
	0x036061DC MOV W1, W31
	0x036061E0 BL 0x35FCF70
	0x036061E4 STR X0, [X19]
	0x036061E8 STR W1, [X19 + 0x8]
	0x036061EC MOV X22, X0
	0x036061F0 LDR X0, [X23]
	0x036061F4 LDR W8, [X0 + 0xE0]
	0x036061F8 CBNZ W8, 0x3606200
	0x036061FC BL 0x1C16DFC
	0x03606200 CMP W22, 0x2
	0x03606204 B.EQ 0x3606224
	0x03606208 LDR X0, [X23]
	0x0360620C LDR X22, [X19]
	0x03606210 LDR W8, [X0 + 0xE0]
	0x03606214 CBNZ W8, 0x360621C
	0x03606218 BL 0x1C16DFC
	0x0360621C CMP W22, 0x3
	0x03606220 B.NE 0x360625C
	0x03606224 LDR X1, [X19]
	0x03606228 LDR W2, [X19 + 0x8]
	0x0360622C LDR X21, [X21]
	0x03606230 MOV X0, X20
	0x03606234 BL 0x35FD280
	0x03606238 CBZ X21, 0x3606270
	0x0360623C STR X0, [X21 + 0x10]
	0x03606240 MOV X0, X20
	0x03606244 MOV W1, W31
	0x03606248 BL 0x35FCF70
	0x0360624C STR X0, [X19]
	0x03606250 STR W1, [X19 + 0x8]
	0x03606254 MOVZ W0, 0x1
	0x03606258 B 0x3606260
	0x0360625C MOV W0, W31
	0x03606260 LDP X20, X19, [X31 + 0x20]
	0x03606264 LDP X22, X21, [X31 + 0x10]
	0x03606268 LDP X30, X23, [X31], #0x30
	0x0360626C RET
	0x03606270 BL 0x1C16F20
	0x03606274 SUB X31, X31, 0x60
	0x03606278 STR X30, [X31 + 0x20]
	0x0360627C STP X24, X23, [X31 + 0x30]
	0x03606280 STP X22, X21, [X31 + 0x40]
	0x03606284 STP X20, X19, [X31 + 0x50]
	0x03606288 ADRP X21, 0xDDA000
	0x0360628C LDRB W8, [X21 + 0x3A6]
	0x03606290 MOV X20, X1
	0x03606294 MOV X19, X0
	0x03606298 TBNZ X8, 0x0, 0x36062E0
	0x0360629C ADRP X0, 0xB34000
	0x036062A0 LDR X0, [X0 + 0x568]
	0x036062A4 BL 0x1C16CF4
	0x036062A8 ADRP X0, 0xB34000
	0x036062AC LDR X0, [X0 + 0x570]
	0x036062B0 BL 0x1C16CF4
	0x036062B4 ADRP X0, 0xB34000
	0x036062B8 LDR X0, [X0 + 0x578]
	0x036062BC BL 0x1C16CF4
	0x036062C0 ADRP X0, 0xB34000
	0x036062C4 LDR X0, [X0 + 0x5C0]
	0x036062C8 BL 0x1C16CF4
	0x036062CC ADRP X0, 0xB34000
	0x036062D0 LDR X0, [X0 + 0x588]
	0x036062D4 BL 0x1C16CF4
	0x036062D8 MOVZ W8, 0x1
	0x036062DC STRB W8, [X21 + 0x3A6]
	0x036062E0 MOV X0, X19
	0x036062E4 MOV X1, X20
	0x036062E8 STP X31, X31, [X31 + 0x8]
	0x036062EC STR X31, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xDDB000
	007 Move W8, [X21+915]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xB16000
	015 Move X0, [X0+2248]
	016 Call 0x1C17CF4
	017 Move X0, 0xB35000
	018 Move X0, [X0+3016]
	019 Call 0x1C17CF4
	020 Move X0, 0xB35000
	021 Move X0, [X0+3024]
	022 Call 0x1C17CF4
	023 Move X0, 0xB16000
	024 Move X0, [X0+2256]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+915], W8
	028 Move [X31+16], X31
	029 Move [X31+24], X31
	030 Move [X31+8], X31
	031 Compare X20, 0
	032 JumpIfEqual {77}
	033 Move X8, 0xB16000
	034 Move X8, [X8+2248]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X21, X0
	039 Call Object..ctor, X0
	040 Add X1, X31, 24
	041 Move X0, X21
	042 Move [X21+16], X20
	043 Call MediaTypeHeaderValue.TryParseMediaType, X0, X1
	044 And W31, W0, 255
	045 Move [X31+8], X0
	046 Move [X31+16], X1
	047 Move X8, 0xB35000
	048 Move X8, [X8+3024]
	049 Move X20, 0xB16000
	050 Add X0, X31, 8
	051 Move X1, [X8]
	052 Move X20, [X20+2256]
	053 Call Nullable`1<Token>.get_Value, X0
	054 Move X8, [X20]
	055 Move X20, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Move [X19+24], X8
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Add X31, X31, 64
	069 Return 
	070 Move X0, 0xB1B000
	071 Move X0, [X0+3080]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X19, X0
	076 Call FormatException..ctor, X0
	077 Move X0, 0xAF3000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0xB35000
	083 Move X0, [X0+3032]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0xB35000
	090 Move X0, [X0+3040]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC

Method: System.Collections.Generic.ICollection`1<System.Net.Http.Headers.NameValueHeaderValue> get_Parameters()

Disassembly:
	0x03606558 BL 0x1C16CF4
	0x0360655C MOVZ W8, 0x1
	0x03606560 STRB W8, [X21 + 0x3A9]
	0x03606564 CBZ X20, 0x36065D4
	0x03606568 ADRP X8, 0xB34000
	0x0360656C LDR X8, [X8 + 0xC38]
	0x03606570 LDR X9, [X20]
	0x03606574 LDR X8, [X8]
	0x03606578 LDRB W11, [X9 + 0x130]
	0x0360657C LDRB W10, [X8 + 0x130]
	0x03606580 CMP W11, W10
	0x03606584 B.CC 0x36065D4
	0x03606588 LDR X9, [X9 + 0xC8]
	0x0360658C ADD X9, X9, X10, 0x3, LSL
	0x03606590 LDUR X9, [X9 - 0x8]
	0x03606594 CMP X9, X8
	0x03606598 CSEL X21, X20, X31, EQ
	0x0360659C B.NE 0x36065D4
	0x036065A0 MOV X0, X19
	0x036065A4 MOV X1, X20
	0x036065A8 BL 0x3605EE8
	0x036065AC TBZ X0, 0x0, 0x36065D4
	0x036065B0 CBZ X21, 0x36065E4
	0x036065B4 ADRP X8, 0xB34000
	0x036065B8 LDR X0, [X21 + 0x20]
	0x036065BC LDR X1, [X19 + 0x20]
	0x036065C0 LDR X8, [X8 + 0x590]
	0x036065C4 LDP X20, X19, [X31 + 0x10]
	0x036065C8 LDR X2, [X8]
	0x036065CC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDDB000
	005 Move W8, [X20+916]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB35000
	012 Move X0, [X0+1360]
	013 Call 0x1C17CF4
	014 Move X0, 0xB35000
	015 Move X0, [X0+1368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+916], W8
	019 Move X20, [X19+16]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xB35000
	023 Move X8, [X8+1368]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB35000
	027 Move X8, [X8+1360]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+16], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03606760 BL 0x2B47CB4
	0x03606764 LDR X4, [X23]
	0x03606768 MOV X0, X21
	0x0360676C MOV W1, W20
	0x03606770 MOV X2, X22
	0x03606774 MOV X3, X19
	0x03606778 LDP X20, X19, [X31 + 0x30]
	0x0360677C LDP X22, X21, [X31 + 0x20]
	0x03606780 LDP X24, X23, [X31 + 0x10]
	0x03606784 LDP X30, X25, [X31], #0x40
	0x03606788 B 0x21A2910
	0x0360678C SUB X31, X31, 0x40
	0x03606790 STP X30, X23, [X31 + 0x10]
	0x03606794 STP X22, X21, [X31 + 0x20]
	0x03606798 STP X20, X19, [X31 + 0x30]
	0x0360679C ADRP X22, 0xDDA000
	0x036067A0 LDRB W8, [X22 + 0x3AD]
	0x036067A4 MOV X20, X2
	0x036067A8 MOV X19, X1
	0x036067AC MOV X21, X0
	0x036067B0 TBNZ X8, 0x0, 0x36067D4
	0x036067B4 ADRP X0, 0xB34000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDDB000
	006 Move X21, 0xB35000
	007 Move W8, [X20+917]
	008 Move X21, [X21+3064]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB35000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+917], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call MediaTypeHeaderValue..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x036067B8 LDR X0, [X0 + 0xC38]
	0x036067BC BL 0x1C16CF4
	0x036067C0 ADRP X0, 0xB15000
	0x036067C4 LDR X0, [X0 + 0x8D0]
	0x036067C8 BL 0x1C16CF4
	0x036067CC MOVZ W8, 0x1
	0x036067D0 STRB W8, [X22 + 0x3AD]
	0x036067D4 STR X31, [X31 + 0x8]
	0x036067D8 STR X31, [X19]
	0x036067DC CBZ X21, 0x3606964
	0x036067E0 ADRP X23, 0xB15000
	0x036067E4 LDR X23, [X23 + 0x8D0]
	0x036067E8 MOV X0, X21
	0x036067EC MOV W1, W31
	0x036067F0 BL 0x35FCF70
	0x036067F4 STR X0, [X20]
	0x036067F8 STR W1, [X20 + 0x8]
	0x036067FC MOV X22, X0
	0x03606800 LDR X0, [X23]
	0x03606804 LDR W8, [X0 + 0xE0]
	0x03606808 CBNZ W8, 0x3606810
	0x0360680C BL 0x1C16DFC
	0x03606810 CMP W22, 0x2
	0x03606814 B.NE 0x360694C
	0x03606818 ADRP X8, 0xB34000
	0x0360681C LDR X8, [X8 + 0xC38]
	0x03606820 LDR X0, [X8]
	0x03606824 BL 0x1C16F10
	0x03606828 MOV X1, X31
	0x0360682C MOV X22, X0
	0x03606830 BL 0x33BDD8C
	0x03606834 LDR X1, [X20]
	0x03606838 LDR W2, [X20 + 0x8]
	0x0360683C MOV X0, X21
	0x03606840 BL 0x35FD280
	0x03606844 CBZ X22, 0x3606964
	0x03606848 STR X0, [X22 + 0x18]
	0x0360684C MOV X0, X21
	0x03606850 MOV W1, W31
	0x03606854 STR X22, [X19]
	0x03606858 BL 0x35FCF70
	0x0360685C STR X0, [X20]
	0x03606860 STR W1, [X20 + 0x8]
	0x03606864 MOV X22, X0
	0x03606868 LDR X0, [X23]
	0x0360686C LDR W8, [X0 + 0xE0]
	0x03606870 CBNZ W8, 0x3606878
	0x03606874 BL 0x1C16DFC
	0x03606878 CMP W22, 0x4
	0x0360687C B.NE 0x3606904

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDDB000
	006 Move W8, [X21+918]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB35000
	014 Move X0, [X0+1424]
	015 Call 0x1C17CF4
	016 Move X0, 0xB35000
	017 Move X0, [X0+3064]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+918], W8
	021 Compare X20, 0
	022 JumpIfEqual {57}
	023 Move X8, 0xB35000
	024 Move X8, [X8+3064]
	025 Move X9, [X20]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Compare X20, 0
	036 JumpIfEqual {63}
	037 Move X0, [X20+24]
	038 Move X1, [X19+24]
	039 Move W2, 5
	040 Move X3, X31
	041 Call String.Equals, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {57}
	046 Move X8, 0xB35000
	047 Move X0, [X20+16]
	048 Move X1, [X19+16]
	049 Move X8, [X8+1424]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X2, [X8]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call 0x21A2DF4, X0, X1
	056 Return X0
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W0, W31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03606880 MOV X0, X21
	0x03606884 MOV W1, W31
	0x03606888 BL 0x35FCF70
	0x0360688C STR X0, [X20]
	0x03606890 STR W1, [X20 + 0x8]
	0x03606894 MOV X22, X0
	0x03606898 LDR X0, [X23]
	0x0360689C LDR W8, [X0 + 0xE0]
	0x036068A0 CBNZ W8, 0x36068A8
	0x036068A4 BL 0x1C16DFC
	0x036068A8 CMP W22, 0x2
	0x036068AC B.EQ 0x36068CC
	0x036068B0 LDR X0, [X23]
	0x036068B4 LDR X22, [X20]
	0x036068B8 LDR W8, [X0 + 0xE0]
	0x036068BC CBNZ W8, 0x36068C4
	0x036068C0 BL 0x1C16DFC
	0x036068C4 CMP W22, 0x3
	0x036068C8 B.NE 0x360694C
	0x036068CC LDR X1, [X20]
	0x036068D0 LDR W2, [X20 + 0x8]
	0x036068D4 LDR X22, [X19]
	0x036068D8 MOV X0, X21
	0x036068DC BL 0x35FD280
	0x036068E0 CBZ X22, 0x3606964
	0x036068E4 STR X0, [X22 + 0x10]
	0x036068E8 MOV X0, X21
	0x036068EC MOV W1, W31
	0x036068F0 BL 0x35FCF70
	0x036068F4 MOV X22, X0
	0x036068F8 STR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDDB000
	005 Move W8, [X20+919]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB35000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+919], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move X1, X31
	020 Call String.ToLowerInvariant, X0
	021 Compare X0, 0
	022 JumpIfEqual {39}
	023 Move X8, [X0]
	024 Move X20, 0xB35000
	025 Move X9, [X8+344]
	026 Move X1, [X8+352]
	027 Move X20, [X20+1448]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X19+16]
	030 Move X1, [X20]
	031 Move W19, W0
	032 Move X0, X8
	033 Call 0x21EBCDC, X0
	034 Xor W0, W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x036068FC STR W1, [X20 + 0x8]
	0x03606900 B 0x3606908
	0x03606904 LDR X22, [X20]
	0x03606908 LDR X0, [X23]
	0x0360690C LDR W8, [X0 + 0xE0]
	0x03606910 CBNZ W8, 0x3606918
	0x03606914 BL 0x1C16DFC
	0x03606918 CMP W22, 0x5
	0x0360691C B.NE 0x3606944
	0x03606920 ADD X1, X31, 0x8
	0x03606924 MOV X0, X21
	0x03606928 MOV X2, X20
	0x0360692C BL 0x35FFCCC
	0x03606930 TBZ X0, 0x0, 0x360694C
	0x03606934 LDR X8, [X19]
	0x03606938 CBZ X8, 0x3606964
	0x0360693C LDR X9, [X31 + 0x8]
	0x03606940 STR X9, [X8 + 0x20]
	0x03606944 MOVZ W0, 0x1
	0x03606948 B 0x3606950
	0x0360694C MOV W0, W31
	0x03606950 LDP X20, X19, [X31 + 0x30]
	0x03606954 LDP X22, X21, [X31 + 0x20]
	0x03606958 LDP X30, X23, [X31 + 0x10]
	0x0360695C ADD X31, X31, 0x40
	0x03606960 RET
	0x03606964 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDDB000
	005 Move W8, [X20+920]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB35000
	012 Move X0, [X0+1664]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+920], W8
	016 Move X0, [X19+16]
	017 Move X19, [X19+24]
	018 Compare X0, 0
	019 JumpIfEqual {32}
	020 Move X8, 0xB35000
	021 Move X8, [X8+1664]
	022 Move X1, [X8]
	023 Call 0x21A2EFC, X0
	024 Move X1, X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call String.Concat, X0, X1
	031 Return X0
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.MediaTypeHeaderValue parsedValue)

Disassembly:
	0x03606968 STR X30, [X31 - 0x30]!
	0x0360696C STP X22, X21, [X31 + 0x10]
	0x03606970 STP X20, X19, [X31 + 0x20]
	0x03606974 ADRP X21, 0xDDA000
	0x03606978 ADRP X22, 0xB15000
	0x0360697C LDRB W8, [X21 + 0x3B0]
	0x03606980 LDR X22, [X22 + 0x8C8]
	0x03606984 MOV X19, X1
	0x03606988 MOV X20, X0
	0x0360698C TBNZ X8, 0x0, 0x36069A4
	0x03606990 ADRP X0, 0xB15000
	0x03606994 LDR X0, [X0 + 0x8C8]
	0x03606998 BL 0x1C16CF4
	0x0360699C MOVZ W8, 0x1
	0x036069A0 STRB W8, [X21 + 0x3B0]
	0x036069A4 LDR X0, [X22]
	0x036069A8 LDR W8, [X0 + 0xE0]
	0x036069AC CBNZ W8, 0x36069B4
	0x036069B0 BL 0x1C16DFC
	0x036069B4 MOV X0, X20
	0x036069B8 MOV X1, X19
	0x036069BC LDP X20, X19, [X31 + 0x20]
	0x036069C0 LDP X22, X21, [X31 + 0x10]
	0x036069C4 LDR X30, [X31], #0x30
	0x036069C8 B 0x3604B90
	0x036069CC STR X30, [X31 - 0x30]!
	0x036069D0 STP X22, X21, [X31 + 0x10]
	0x036069D4 STP X20, X19, [X31 + 0x20]
	0x036069D8 ADRP X20, 0xDDA000
	0x036069DC ADRP X19, 0xB34000
	0x036069E0 LDRB W8, [X20 + 0x3B1]
	0x036069E4 LDR X19, [X19 + 0xC60]
	0x036069E8 TBNZ X8, 0x0, 0x3606A24
	0x036069EC ADRP X0, 0xB34000
	0x036069F0 LDR X0, [X0 + 0x738]
	0x036069F4 BL 0x1C16CF4
	0x036069F8 ADRP X0, 0xB34000
	0x036069FC LDR X0, [X0 + 0xC68]
	0x03606A00 BL 0x1C16CF4
	0x03606A04 ADRP X0, 0xB34000
	0x03606A08 LDR X0, [X0 + 0xC70]
	0x03606A0C BL 0x1C16CF4
	0x03606A10 ADRP X0, 0xB34000
	0x03606A14 LDR X0, [X0 + 0xC60]
	0x03606A18 BL 0x1C16CF4
	0x03606A1C MOVZ W8, 0x1
	0x03606A20 STRB W8, [X20 + 0x3B1]
	0x03606A24 LDR X0, [X19]
	0x03606A28 ADRP X22, 0xB34000
	0x03606A2C ADRP X20, 0xB34000
	0x03606A30 ADRP X21, 0xB34000
	0x03606A34 LDR W8, [X0 + 0xE0]
	0x03606A38 LDR X22, [X22 + 0xC68]
	0x03606A3C LDR X20, [X20 + 0xC70]
	0x03606A40 LDR X21, [X21 + 0x738]
	0x03606A44 CBNZ W8, 0x3606A50
	0x03606A48 BL 0x1C16DFC
	0x03606A4C LDR X0, [X19]
	0x03606A50 LDR X8, [X0 + 0xB8]
	0x03606A54 LDR X0, [X22]
	0x03606A58 LDR X19, [X8]
	0x03606A5C BL 0x1C16F10
	0x03606A60 LDR X2, [X20]
	0x03606A64 MOV X1, X19
	0x03606A68 MOV X3, X31
	0x03606A6C MOV X20, X0
	0x03606A70 BL 0x2D30578
	0x03606A74 LDR X8, [X21]
	0x03606A78 LDP X22, X21, [X31 + 0x10]
	0x03606A7C LDR X8, [X8 + 0xB8]
	0x03606A80 STR X20, [X8]
	0x03606A84 LDP X20, X19, [X31 + 0x20]
	0x03606A88 LDR X30, [X31], #0x30
	0x03606A8C RET
	0x03606A90 STR X30, [X31 - 0x20]!
	0x03606A94 STP X20, X19, [X31 + 0x10]
	0x03606A98 ADRP X19, 0xDDA000
	0x03606A9C ADRP X20, 0xB34000
	0x03606AA0 LDRB W8, [X19 + 0x3B2]
	0x03606AA4 LDR X20, [X20 + 0xC60]
	0x03606AA8 TBNZ X8, 0x0, 0x3606AC0
	0x03606AAC ADRP X0, 0xB34000
	0x03606AB0 LDR X0, [X0 + 0xC60]
	0x03606AB4 BL 0x1C16CF4
	0x03606AB8 MOVZ W8, 0x1
	0x03606ABC STRB W8, [X19 + 0x3B2]
	0x03606AC0 LDR X0, [X20]
	0x03606AC4 BL 0x1C16F10
	0x03606AC8 MOV X1, X31
	0x03606ACC MOV X19, X0
	0x03606AD0 BL 0x33BDD8C
	0x03606AD4 LDR X8, [X20]
	0x03606AD8 LDR X8, [X8 + 0xB8]
	0x03606ADC STR X19, [X8]
	0x03606AE0 LDP X20, X19, [X31 + 0x10]
	0x03606AE4 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xDDB000
	008 Move X20, 0xB16000
	009 Move W8, [X22+921]
	010 Move X20, [X20+2248]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xB16000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move X0, 0xB35000
	021 Move X0, [X0+3064]
	022 Call 0x1C17CF4
	023 Move X0, 0xB35000
	024 Move X0, [X0+3016]
	025 Call 0x1C17CF4
	026 Move X0, 0xB35000
	027 Move X0, [X0+3024]
	028 Call 0x1C17CF4
	029 Move X0, 0xB16000
	030 Move X0, [X0+2256]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+921], W8
	034 Move [X31+56], X31
	035 Move [X31+24], X31
	036 Move [X31+32], X31
	037 Move [X31+16], W31
	038 Move [X31+8], X31
	039 Move [X19], X31
	040 Move X0, [X20]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call Object..ctor, X0
	045 Add X1, X31, 56
	046 Move X0, X20
	047 Move [X20+16], X21
	048 Move [X31+40], X31
	049 Call MediaTypeHeaderValue.TryParseMediaType, X0, X1
	050 And W31, W0, 255
	051 Move [X31+24], X0
	052 Move [X31+32], X1
	053 Move X8, 0xB35000
	054 Move X8, [X8+3024]
	055 Move X22, 0xB16000
	056 Add X0, X31, 24
	057 Move X1, [X8]
	058 Move X22, [X22+2256]
	059 Call Nullable`1<Token>.get_Value, X0
	060 Move X8, [X22]
	061 Move X21, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X1, X31, 40
	070 Add X2, X31, 8
	071 Move X0, X20
	072 Call NameValueHeaderValue.TryParseParameters, X0, X1, X2
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {99}
	077 Move X0, [X22]
	078 Move X20, [X31+8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, 0xB35000
	085 Move X8, [X8+3064]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X20, X0
	090 Call Object..ctor, X0
	091 Compare X20, 0
	092 JumpIfEqual {107}
	093 Move X9, [X31+56]
	094 Move X8, [X31+40]
	095 Move W0, 1
	096 Move [X20+16], X8
	097 Move [X20+24], X9
	098 Move [X19], X20
	099 Move W0, W31
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X30, [X31+48]
	105 Add X31, X31, 96
	106 Return X0
	107 Call 0x1C17F20

Method: System.Nullable`1<System.Net.Http.Headers.Token> TryParseMediaType(System.Net.Http.Headers.Lexer lexer, out System.String media)

Disassembly:
	0x036065D8 MOV W0, W31
	0x036065DC LDP X30, X21, [X31], #0x20
	0x036065E0 RET
	0x036065E4 BL 0x1C16F20
	0x036065E8 STP X30, X21, [X31 - 0x20]!
	0x036065EC STP X20, X19, [X31 + 0x10]
	0x036065F0 ADRP X21, 0xDDA000
	0x036065F4 ADRP X20, 0xB34000
	0x036065F8 LDRB W8, [X21 + 0x3AA]
	0x036065FC LDR X20, [X20 + 0x5A8]
	0x03606600 MOV X19, X0
	0x03606604 TBNZ X8, 0x0, 0x360661C
	0x03606608 ADRP X0, 0xB34000
	0x0360660C LDR X0, [X0 + 0x5A8]
	0x03606610 BL 0x1C16CF4
	0x03606614 MOVZ W8, 0x1
	0x03606618 STRB W8, [X21 + 0x3AA]
	0x0360661C MOV X0, X19
	0x03606620 BL 0x3605E6C
	0x03606624 LDR X8, [X19 + 0x20]
	0x03606628 LDR X1, [X20]
	0x0360662C MOV W19, W0
	0x03606630 MOV X0, X8
	0x03606634 BL 0x21EACDC
	0x03606638 EOR W0, W0, W19, 0x0
	0x0360663C LDP X20, X19, [X31 + 0x10]
	0x03606640 LDP X30, X21, [X31], #0x20
	0x03606644 RET
	0x03606648 STR X30, [X31 - 0x20]!
	0x0360664C STP X20, X19, [X31 + 0x10]
	0x03606650 ADRP X20, 0xDDA000
	0x03606654 LDRB W8, [X20 + 0x3AB]
	0x03606658 MOV X19, X0
	0x0360665C TBNZ X8, 0x0, 0x3606680
	0x03606660 ADRP X0, 0xB34000
	0x03606664 LDR X0, [X0 + 0x680]
	0x03606668 BL 0x1C16CF4
	0x0360666C ADRP X0, 0xB34000
	0x03606670 LDR X0, [X0 + 0xC40]
	0x03606674 BL 0x1C16CF4
	0x03606678 MOVZ W8, 0x1
	0x0360667C STRB W8, [X20 + 0x3AB]
	0x03606680 LDR X8, [X19 + 0x20]
	0x03606684 CBZ X8, 0x36066CC
	0x03606688 LDR W8, [X8 + 0x18]
	0x0360668C CBZ W8, 0x36066CC
	0x03606690 MOV X0, X19
	0x03606694 BL 0x3606078
	0x03606698 ADRP X9, 0xB34000
	0x0360669C LDR X8, [X19 + 0x20]
	0x036066A0 LDR X9, [X9 + 0x680]
	0x036066A4 MOV X19, X0
	0x036066A8 MOV X0, X8
	0x036066AC LDR X1, [X9]
	0x036066B0 BL 0x21A1EFC
	0x036066B4 MOV X1, X0
	0x036066B8 MOV X0, X19
	0x036066BC LDP X20, X19, [X31 + 0x10]
	0x036066C0 MOV X2, X31
	0x036066C4 LDR X30, [X31], #0x20
	0x036066C8 B 0x321B938
	0x036066CC MOV X0, X19
	0x036066D0 LDP X20, X19, [X31 + 0x10]
	0x036066D4 LDR X30, [X31], #0x20
	0x036066D8 B 0x3606078
	0x036066DC STP X30, X25, [X31 - 0x40]!
	0x036066E0 STP X24, X23, [X31 + 0x10]
	0x036066E4 STP X22, X21, [X31 + 0x20]
	0x036066E8 STP X20, X19, [X31 + 0x30]
	0x036066EC ADRP X24, 0xDDA000
	0x036066F0 ADRP X25, 0xB34000
	0x036066F4 ADRP X22, 0xB34000
	0x036066F8 ADRP X23, 0xB34000
	0x036066FC LDRB W8, [X24 + 0x3AC]
	0x03606700 LDR X25, [X25 + 0xC48]
	0x03606704 LDR X22, [X22 + 0xC50]
	0x03606708 LDR X23, [X23 + 0xC58]
	0x0360670C MOV X19, X2
	0x03606710 MOV W20, W1
	0x03606714 MOV X21, X0
	0x03606718 TBNZ X8, 0x0, 0x3606748
	0x0360671C ADRP X0, 0xB34000
	0x03606720 LDR X0, [X0 + 0xC58]
	0x03606724 BL 0x1C16CF4
	0x03606728 ADRP X0, 0xB34000
	0x0360672C LDR X0, [X0 + 0xC48]
	0x03606730 BL 0x1C16CF4
	0x03606734 ADRP X0, 0xB34000
	0x03606738 LDR X0, [X0 + 0xC50]
	0x0360673C BL 0x1C16CF4
	0x03606740 MOVZ W8, 0x1
	0x03606744 STRB W8, [X24 + 0x3AC]
	0x03606748 LDR X0, [X25]
	0x0360674C BL 0x1C16F10
	0x03606750 LDR X2, [X22]
	0x03606754 MOV X1, X31
	0x03606758 MOV X3, X31
	0x0360675C MOV X22, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xDDB000
	010 Move W8, [X21+922]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB35000
	018 Move X0, [X0+3056]
	019 Call 0x1C17CF4
	020 Move X0, 0xB16000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move X0, 0xAEF000
	024 Move X0, [X0+3784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+922], W8
	028 Move [X19], X31
	029 Compare X20, 0
	030 JumpIfEqual {110}
	031 Move X24, 0xB16000
	032 Move X24, [X24+2256]
	033 Move X0, X20
	034 Move W1, W31
	035 Call Lexer.Scan, X0, X1
	036 Move X21, X0
	037 Move X0, [X24]
	038 Move X22, X1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X20
	045 Move W1, W31
	046 Call Lexer.Scan, X0, X1
	047 Move X8, [X24]
	048 Move X23, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X20
	056 Move W1, W31
	057 Call Lexer.Scan, X0, X1
	058 Move X23, X0
	059 Move X0, [X24]
	060 Move X24, X1
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 NotImplemented "Instruction CMP not yet implemented."
	066 And X2, X22, 0
	067 Move X0, X20
	068 Move X1, X21
	069 And X22, X24, 0
	070 Call Lexer.GetStringValue, X0, X1
	071 Move X21, X0
	072 Move X0, X20
	073 Move X1, X23
	074 Move X2, X22
	075 Call Lexer.GetStringValue, X0, X1
	076 Move X8, 0xAEF000
	077 Move X8, [X8+3784]
	078 Move X2, X0
	079 Move X0, X21
	080 Move X3, X31
	081 Move X1, [X8]
	082 Call String.Concat, X0, X1, X2
	083 Move [X19], X0
	084 Move X0, X20
	085 Move W1, W31
	086 Call Lexer.Scan, X0, X1
	087 Move X8, 0xB35000
	088 Move X8, [X8+3056]
	089 Move X4, X0
	090 And X2, X1, 0
	091 Add X0, X31, 0
	092 Move X3, [X8]
	093 Move X1, X4
	094 Move [X31], X31
	095 Move [X31+8], X31
	096 Call Nullable`1<Token>..ctor, X0, X1
	097 Move [X31], X31
	098 Move [X31+8], X31
	099 Move X0, [X31]
	100 Move X1, [X31+8]
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X30, [X31+16]
	108 Add X31, X31, 80
	109 Return X0
	110 Call 0x1C17F20

