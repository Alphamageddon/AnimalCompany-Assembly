Type: System.Net.Http.Headers.RetryConditionHeaderValue

Method: System.Void .ctor(System.DateTimeOffset date)

Disassembly:
	0x0360A100 LDRB W8, [X20 + 0x3E3]
	0x0360A104 LDR X21, [X21 + 0xDE8]
	0x0360A108 MOV X19, X0
	0x0360A10C TBNZ X8, 0x0, 0x360A124
	0x0360A110 ADRP X0, 0xB30000
	0x0360A114 LDR X0, [X0 + 0xDE8]
	0x0360A118 BL 0x1C16CF4
	0x0360A11C MOVZ W8, 0x1
	0x0360A120 STRB W8, [X20 + 0x3E3]
	0x0360A124 LDR X0, [X21]
	0x0360A128 BL 0x1C16F10
	0x0360A12C MOV X1, X19
	0x0360A130 MOV X20, X0
	0x0360A134 BL 0x3609E44
	0x0360A138 MOV X0, X20
	0x0360A13C LDP X20, X19, [X31 + 0x10]
	0x0360A140 LDP X30, X21, [X31], #0x20
	0x0360A144 RET
	0x0360A148 STP X30, X21, [X31 - 0x20]!
	0x0360A14C STP X20, X19, [X31 + 0x10]
	0x0360A150 ADRP X21, 0xDD6000
	0x0360A154 LDRB W8, [X21 + 0x3E4]
	0x0360A158 MOV X20, X1
	0x0360A15C MOV X19, X0
	0x0360A160 TBNZ X8, 0x0, 0x360A184
	0x0360A164 ADRP X0, 0xB30000
	0x0360A168 LDR X0, [X0 + 0x590]
	0x0360A16C BL 0x1C16CF4
	0x0360A170 ADRP X0, 0xB30000
	0x0360A174 LDR X0, [X0 + 0xDE8]
	0x0360A178 BL 0x1C16CF4
	0x0360A17C MOVZ W8, 0x1
	0x0360A180 STRB W8, [X21 + 0x3E4]
	0x0360A184 CBZ X20, 0x360A1FC
	0x0360A188 ADRP X8, 0xB30000
	0x0360A18C LDR X8, [X8 + 0xDE8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xDD7000
	009 Move X22, 0xB31000
	010 Move W8, [X23+982]
	011 Move X22, [X22+3312]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB31000
	020 Move X0, [X0+3312]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+982], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X3, [X22]
	028 Add X0, X31, 8
	029 Move X1, X21
	030 Move X2, X20
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Call Nullable`1<DateTimeOffset>..ctor, X0, X1
	035 Move X8, [X31+24]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move X30, [X31+32]
	040 Move X23, [X31+40]
	041 Move [X19+32], X8
	042 Move [X19+1], V0
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Add X31, X31, 80
	046 Return 

Method: System.Void .ctor(System.TimeSpan delta)

Disassembly:
	0x0360A190 LDR X9, [X20]
	0x0360A194 LDR X8, [X8]
	0x0360A198 LDRB W11, [X9 + 0x130]
	0x0360A19C LDRB W10, [X8 + 0x130]
	0x0360A1A0 CMP W11, W10
	0x0360A1A4 B.CC 0x360A1FC
	0x0360A1A8 LDR X9, [X9 + 0xC8]
	0x0360A1AC ADD X9, X9, X10, 0x3, LSL
	0x0360A1B0 LDUR X9, [X9 - 0x8]
	0x0360A1B4 CMP X9, X8
	0x0360A1B8 CSEL X20, X20, X31, EQ
	0x0360A1BC B.NE 0x360A1FC
	0x0360A1C0 CBZ X20, 0x360A20C
	0x0360A1C4 LDR X0, [X19 + 0x10]
	0x0360A1C8 LDR X1, [X20 + 0x10]
	0x0360A1CC MOVZ W2, 0x5
	0x0360A1D0 MOV X3, X31
	0x0360A1D4 BL 0x3226C60
	0x0360A1D8 TBZ X0, 0x0, 0x360A1FC
	0x0360A1DC ADRP X8, 0xB30000
	0x0360A1E0 LDR X0, [X19 + 0x18]
	0x0360A1E4 LDR X1, [X20 + 0x18]
	0x0360A1E8 LDR X8, [X8 + 0x590]
	0x0360A1EC LDP X20, X19, [X31 + 0x10]
	0x0360A1F0 LDR X2, [X8]
	0x0360A1F4 LDP X30, X21, [X31], #0x20
	0x0360A1F8 B 0x21A1DF4
	0x0360A1FC LDP X20, X19, [X31 + 0x10]
	0x0360A200 MOV W0, W31
	0x0360A204 LDP X30, X21, [X31], #0x20
	0x0360A208 RET
	0x0360A20C BL 0x1C16F20
	0x0360A210 STR X30, [X31 - 0x20]!
	0x0360A214 STP X20, X19, [X31 + 0x10]
	0x0360A218 ADRP X20, 0xDD6000
	0x0360A21C LDRB W8, [X20 + 0x3E5]
	0x0360A220 MOV X19, X0
	0x0360A224 TBNZ X8, 0x0, 0x360A23C
	0x0360A228 ADRP X0, 0xB30000
	0x0360A22C LDR X0, [X0 + 0x5A8]
	0x0360A230 BL 0x1C16CF4
	0x0360A234 MOVZ W8, 0x1
	0x0360A238 STRB W8, [X20 + 0x3E5]
	0x0360A23C LDR X0, [X19 + 0x10]
	0x0360A240 CBZ X0, 0x360A290
	0x0360A244 MOV X1, X31
	0x0360A248 BL 0x322B6E4
	0x0360A24C CBZ X0, 0x360A290
	0x0360A250 LDR X8, [X0]
	0x0360A254 LDP X9, X1, [X8 + 0x158]
	0x0360A258 BLR X9
	0x0360A25C LDR X8, [X19 + 0x18]
	0x0360A260 MOV W19, W0
	0x0360A264 CBZ X8, 0x360A280
	0x0360A268 ADRP X9, 0xB30000
	0x0360A26C LDR X9, [X9 + 0x5A8]
	0x0360A270 MOV X0, X8
	0x0360A274 LDR X1, [X9]
	0x0360A278 BL 0x21EACDC
	0x0360A27C EOR W19, W0, W19, 0x0
	0x0360A280 MOV W0, W19
	0x0360A284 LDP X20, X19, [X31 + 0x10]
	0x0360A288 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xDD7000
	007 Move [X31+24], X1
	008 Move X20, 0xAEC000
	009 Move W8, [X21+983]
	010 Move X20, [X20+1392]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB1E000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0xAEC000
	020 Move X0, [X0+1392]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+983], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Add X0, X31, 24
	033 Move X1, X31
	034 Call TimeSpan.get_TotalSeconds, X0
	035 Move X8, -45203456
	036 Move V1, [X8+1816]
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move X8, 0xB1E000
	039 Move X8, [X8+2968]
	040 Move X1, [X31+24]
	041 Add X0, X31, 0
	042 Move [X31], X31
	043 Move [X31+8], X31
	044 Move X2, [X8]
	045 Call Nullable`1<TimeSpan>..ctor, X0, X1
	046 Move V0, [X31]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Move [X19+40], V0
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Add X31, X31, 64
	053 Return 
	054 Move X0, 0xAF2000
	055 Move X0, [X0+1888]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0xB12000
	060 Move X0, [X0+3944]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1
	066 Move X0, 0xB31000
	067 Move X0, [X0+3480]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Nullable`1<System.DateTimeOffset> get_Date()

Disassembly:
	0x0360A28C RET
	0x0360A290 BL 0x1C16F20
	0x0360A294 STP X30, X21, [X31 - 0x20]!
	0x0360A298 STP X20, X19, [X31 + 0x10]
	0x0360A29C ADRP X20, 0xDD6000

ISIL:
	001 Move X9, [X0+32]
	002 Move V0, [X0+1]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_Date(System.Nullable`1<System.DateTimeOffset> value)

Disassembly:
	0x0360A2A0 ADRP X21, 0xB30000
	0x0360A2A4 LDRB W8, [X20 + 0x3E6]
	0x0360A2A8 LDR X21, [X21 + 0x680]
	0x0360A2AC MOV X19, X0
	0x0360A2B0 TBNZ X8, 0x0, 0x360A2C8

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+32], X8
	004 Move [X0+1], V0
	005 Return 

Method: System.Nullable`1<System.TimeSpan> get_Delta()

Disassembly:
	0x0360A2B4 ADRP X0, 0xB30000
	0x0360A2B8 LDR X0, [X0 + 0x680]
	0x0360A2BC BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+40]
	002 Move X1, [X0+48]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_Delta(System.Nullable`1<System.TimeSpan> value)

Disassembly:
	0x0360A2C0 MOVZ W8, 0x1
	0x0360A2C4 STRB W8, [X20 + 0x3E6]

ISIL:
	001 Move [X0+40], X1
	002 Move [X0+48], X2
	003 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x0360A2C8 LDP X20, X0, [X19 + 0x10]
	0x0360A2CC LDR X1, [X21]

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0360A2D0 BL 0x21A1EFC
	0x0360A2D4 MOV X1, X0
	0x0360A2D8 MOV X0, X20
	0x0360A2DC LDP X20, X19, [X31 + 0x10]
	0x0360A2E0 MOV X2, X31
	0x0360A2E4 LDP X30, X21, [X31], #0x20
	0x0360A2E8 B 0x321B938
	0x0360A2EC STP X30, X25, [X31 - 0x40]!
	0x0360A2F0 STP X24, X23, [X31 + 0x10]
	0x0360A2F4 STP X22, X21, [X31 + 0x20]
	0x0360A2F8 STP X20, X19, [X31 + 0x30]
	0x0360A2FC ADRP X24, 0xDD6000
	0x0360A300 ADRP X25, 0xB30000
	0x0360A304 ADRP X22, 0xB30000
	0x0360A308 ADRP X23, 0xB30000
	0x0360A30C LDRB W8, [X24 + 0x3E7]
	0x0360A310 LDR X25, [X25 + 0xDF0]
	0x0360A314 LDR X22, [X22 + 0xDF8]
	0x0360A318 LDR X23, [X23 + 0xE00]
	0x0360A31C MOV X19, X2
	0x0360A320 MOV W20, W1
	0x0360A324 MOV X21, X0
	0x0360A328 TBNZ X8, 0x0, 0x360A358
	0x0360A32C ADRP X0, 0xB30000
	0x0360A330 LDR X0, [X0 + 0xE00]
	0x0360A334 BL 0x1C16CF4
	0x0360A338 ADRP X0, 0xB30000
	0x0360A33C LDR X0, [X0 + 0xDF0]
	0x0360A340 BL 0x1C16CF4
	0x0360A344 ADRP X0, 0xB30000
	0x0360A348 LDR X0, [X0 + 0xDF8]
	0x0360A34C BL 0x1C16CF4
	0x0360A350 MOVZ W8, 0x1
	0x0360A354 STRB W8, [X24 + 0x3E7]
	0x0360A358 LDR X0, [X25]
	0x0360A35C BL 0x1C16F10
	0x0360A360 LDR X2, [X22]
	0x0360A364 MOV X1, X31
	0x0360A368 MOV X3, X31
	0x0360A36C MOV X22, X0
	0x0360A370 BL 0x2B47CB4
	0x0360A374 LDR X4, [X23]
	0x0360A378 MOV X0, X21
	0x0360A37C MOV W1, W20
	0x0360A380 MOV X2, X22
	0x0360A384 MOV X3, X19
	0x0360A388 LDP X20, X19, [X31 + 0x30]
	0x0360A38C LDP X22, X21, [X31 + 0x20]
	0x0360A390 LDP X24, X23, [X31 + 0x10]
	0x0360A394 LDP X30, X25, [X31], #0x40
	0x0360A398 B 0x21A2910
	0x0360A39C STR X30, [X31 - 0x40]!
	0x0360A3A0 STP X24, X23, [X31 + 0x10]
	0x0360A3A4 STP X22, X21, [X31 + 0x20]
	0x0360A3A8 STP X20, X19, [X31 + 0x30]
	0x0360A3AC ADRP X22, 0xDD6000
	0x0360A3B0 LDRB W8, [X22 + 0x3E8]
	0x0360A3B4 MOV X20, X2
	0x0360A3B8 MOV X19, X1
	0x0360A3BC MOV X21, X0
	0x0360A3C0 TBNZ X8, 0x0, 0x360A3E4
	0x0360A3C4 ADRP X0, 0xB11000
	0x0360A3C8 LDR X0, [X0 + 0x8D0]
	0x0360A3CC BL 0x1C16CF4
	0x0360A3D0 ADRP X0, 0xB30000
	0x0360A3D4 LDR X0, [X0 + 0xDE8]
	0x0360A3D8 BL 0x1C16CF4
	0x0360A3DC MOVZ W8, 0x1
	0x0360A3E0 STRB W8, [X22 + 0x3E8]
	0x0360A3E4 STR X31, [X19]
	0x0360A3E8 CBZ X21, 0x360A4DC
	0x0360A3EC ADRP X24, 0xB11000
	0x0360A3F0 LDR X24, [X24 + 0x8D0]
	0x0360A3F4 MOV X0, X21
	0x0360A3F8 MOV W1, W31
	0x0360A3FC BL 0x35FCF70
	0x0360A400 STR X0, [X20]
	0x0360A404 STR W1, [X20 + 0x8]
	0x0360A408 MOV X22, X0
	0x0360A40C LDR X0, [X24]
	0x0360A410 LDR W8, [X0 + 0xE0]
	0x0360A414 CBNZ W8, 0x360A41C
	0x0360A418 BL 0x1C16DFC
	0x0360A41C CMP W22, 0x2
	0x0360A420 B.NE 0x360A4C4
	0x0360A424 ADRP X8, 0xB30000
	0x0360A428 LDR X8, [X8 + 0xDE8]
	0x0360A42C LDR X0, [X8]
	0x0360A430 BL 0x1C16F10
	0x0360A434 MOV X1, X31
	0x0360A438 MOV X22, X0
	0x0360A43C BL 0x33BDD8C
	0x0360A440 LDR X1, [X20]
	0x0360A444 LDR W2, [X20 + 0x8]
	0x0360A448 MOV X0, X21
	0x0360A44C BL 0x35FD280
	0x0360A450 CBZ X22, 0x360A4DC
	0x0360A454 STR X0, [X22 + 0x10]
	0x0360A458 MOV X0, X21
	0x0360A45C MOV W1, W31
	0x0360A460 BL 0x35FCF70
	0x0360A464 STR X0, [X20]
	0x0360A468 STR W1, [X20 + 0x8]
	0x0360A46C MOV X23, X0
	0x0360A470 LDR X0, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xDD7000
	009 Move W8, [X21+984]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xAEC000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move X0, 0xB31000
	020 Move X0, [X0+3336]
	021 Call 0x1C17CF4
	022 Move X0, 0xB31000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move X0, 0xB31000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0xB1E000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move X0, 0xB31000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move X0, 0xAEC000
	035 Move X0, [X0+1392]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+984], W8
	039 Compare X20, 0
	040 JumpIfEqual {120}
	041 Move X8, 0xB31000
	042 Move X8, [X8+3488]
	043 Move X9, [X20]
	044 Move X8, [X8]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Compare X24, 0
	054 JumpIfEqual {129}
	055 Move W8, [X24+16]
	056 Move W9, [X19+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSET not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare W8, 0
	063 JumpIfEqual {85}
	064 Move X8, 0xAEC000
	065 Move X8, [X8+2648]
	066 Move X23, [X24+24]
	067 Move X22, [X24+32]
	068 Move X21, [X19+24]
	069 Move X20, [X19+32]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X23
	076 Move X1, X22
	077 Move X2, X21
	078 Move X3, X20
	079 Move X4, X31
	080 Call DateTimeOffset.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {120}
	085 Move W8, [X24+40]
	086 Move W9, [X19+40]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSET not yet implemented."
	091 Xor W9, W9, W10
	092 Xor W0, W9, 1
	093 Move TEMP, X9
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {121}
	097 Compare W8, 0
	098 JumpIfEqual {121}
	099 Move X8, 0xAEC000
	100 Move X8, [X8+1392]
	101 Move X20, [X24+48]
	102 Move X19, [X19+48]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X20
	109 Move X1, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+64]
	118 Call TimeSpan.op_Equality, X0, X1
	119 Return X0
	120 Move W0, W31
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X22, [X31+32]
	124 Move X21, [X31+40]
	125 Move X24, [X31+16]
	126 Move X23, [X31+24]
	127 Move X30, [X31+64]
	128 Return X0
	129 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0360A474 LDR W8, [X0 + 0xE0]
	0x0360A478 CBNZ W8, 0x360A480
	0x0360A47C BL 0x1C16DFC
	0x0360A480 CMP W23, 0x5
	0x0360A484 B.NE 0x360A4B8
	0x0360A488 ADD X1, X22, 0x18
	0x0360A48C MOV X0, X21
	0x0360A490 MOV X2, X20
	0x0360A494 BL 0x35FFCCC
	0x0360A498 TBZ X0, 0x0, 0x360A4C4
	0x0360A49C LDR X0, [X24]
	0x0360A4A0 LDR X20, [X20]
	0x0360A4A4 LDR W8, [X0 + 0xE0]
	0x0360A4A8 CBNZ W8, 0x360A4B0
	0x0360A4AC BL 0x1C16DFC
	0x0360A4B0 CMP W20, 0x1
	0x0360A4B4 B.NE 0x360A4C4
	0x0360A4B8 MOVZ W0, 0x1
	0x0360A4BC STR X22, [X19]
	0x0360A4C0 B 0x360A4C8
	0x0360A4C4 MOV W0, W31
	0x0360A4C8 LDP X20, X19, [X31 + 0x30]
	0x0360A4CC LDP X22, X21, [X31 + 0x20]
	0x0360A4D0 LDP X24, X23, [X31 + 0x10]
	0x0360A4D4 LDR X30, [X31], #0x40
	0x0360A4D8 RET
	0x0360A4DC BL 0x1C16F20
	0x0360A4E0 MOV X1, X31
	0x0360A4E4 B 0x33BDD8C
	0x0360A4E8 STP X30, X25, [X31 - 0x40]!
	0x0360A4EC STP X24, X23, [X31 + 0x10]
	0x0360A4F0 STP X22, X21, [X31 + 0x20]
	0x0360A4F4 STP X20, X19, [X31 + 0x30]
	0x0360A4F8 ADRP X24, 0xDD6000
	0x0360A4FC ADRP X25, 0xB30000
	0x0360A500 ADRP X22, 0xB30000
	0x0360A504 ADRP X23, 0xB30000
	0x0360A508 LDRB W8, [X24 + 0x3E9]
	0x0360A50C LDR X25, [X25 + 0xE08]
	0x0360A510 LDR X22, [X22 + 0xE10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xDD7000
	008 Move X20, 0xB31000
	009 Move X21, 0xB31000
	010 Move W8, [X22+985]
	011 Move X20, [X20+3360]
	012 Move X21, [X21+1456]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xB31000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move X0, 0xB31000
	022 Move X0, [X0+3360]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+985], W8
	026 Move [X31], X31
	027 Move [X31+8], X31
	028 Move X8, [X19+32]
	029 Move V0, [X19+1]
	030 Move X1, [X20]
	031 Add X0, X31, 16
	032 Move [X31+32], X8
	033 Move [X31+1], V0
	034 Call Nullable`1<DateTimeOffset>.GetHashCode, X0
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move X1, [X21]
	037 Move W20, W0
	038 Add X0, X31, 0
	039 Move [X31], V0
	040 Call Nullable`1<TimeSpan>.GetHashCode, X0
	041 Xor W0, W0, W20
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X30, [X31+48]
	047 Add X31, X31, 96
	048 Return X0

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.RetryConditionHeaderValue parsedValue)

Disassembly:
	0x0360A514 LDR X23, [X23 + 0xE18]
	0x0360A518 MOV X19, X2
	0x0360A51C MOV W20, W1
	0x0360A520 MOV X21, X0
	0x0360A524 TBNZ X8, 0x0, 0x360A554
	0x0360A528 ADRP X0, 0xB30000
	0x0360A52C LDR X0, [X0 + 0xE18]
	0x0360A530 BL 0x1C16CF4
	0x0360A534 ADRP X0, 0xB30000
	0x0360A538 LDR X0, [X0 + 0xE08]
	0x0360A53C BL 0x1C16CF4
	0x0360A540 ADRP X0, 0xB30000
	0x0360A544 LDR X0, [X0 + 0xE10]
	0x0360A548 BL 0x1C16CF4
	0x0360A54C MOVZ W8, 0x1
	0x0360A550 STRB W8, [X24 + 0x3E9]
	0x0360A554 LDR X0, [X25]
	0x0360A558 BL 0x1C16F10
	0x0360A55C LDR X2, [X22]
	0x0360A560 MOV X1, X31
	0x0360A564 MOV X3, X31
	0x0360A568 MOV X22, X0
	0x0360A56C BL 0x2B47CB4
	0x0360A570 LDR X4, [X23]
	0x0360A574 MOV X0, X21
	0x0360A578 MOV W1, W20
	0x0360A57C MOV X2, X22
	0x0360A580 MOV X3, X19
	0x0360A584 LDP X20, X19, [X31 + 0x30]
	0x0360A588 LDP X22, X21, [X31 + 0x20]
	0x0360A58C LDP X24, X23, [X31 + 0x10]
	0x0360A590 LDP X30, X25, [X31], #0x40
	0x0360A594 B 0x21A2910
	0x0360A598 STR X30, [X31 - 0x40]!
	0x0360A59C STP X24, X23, [X31 + 0x10]
	0x0360A5A0 STP X22, X21, [X31 + 0x20]
	0x0360A5A4 STP X20, X19, [X31 + 0x30]
	0x0360A5A8 ADRP X22, 0xDD6000
	0x0360A5AC LDRB W8, [X22 + 0x3EA]
	0x0360A5B0 MOV X20, X2
	0x0360A5B4 MOV X19, X1
	0x0360A5B8 MOV X21, X0
	0x0360A5BC TBNZ X8, 0x0, 0x360A5E0
	0x0360A5C0 ADRP X0, 0xB11000
	0x0360A5C4 LDR X0, [X0 + 0x8D0]
	0x0360A5C8 BL 0x1C16CF4
	0x0360A5CC ADRP X0, 0xB30000
	0x0360A5D0 LDR X0, [X0 + 0xE20]
	0x0360A5D4 BL 0x1C16CF4
	0x0360A5D8 MOVZ W8, 0x1
	0x0360A5DC STRB W8, [X22 + 0x3EA]
	0x0360A5E0 STR X31, [X19]
	0x0360A5E4 CBZ X21, 0x360A6D8
	0x0360A5E8 ADRP X24, 0xB11000
	0x0360A5EC LDR X24, [X24 + 0x8D0]
	0x0360A5F0 MOV X0, X21
	0x0360A5F4 MOV W1, W31
	0x0360A5F8 BL 0x35FCF70
	0x0360A5FC STR X0, [X20]
	0x0360A600 STR W1, [X20 + 0x8]
	0x0360A604 MOV X22, X0
	0x0360A608 LDR X0, [X24]
	0x0360A60C LDR W8, [X0 + 0xE0]
	0x0360A610 CBNZ W8, 0x360A618
	0x0360A614 BL 0x1C16DFC
	0x0360A618 CMP W22, 0x2
	0x0360A61C B.NE 0x360A6C0
	0x0360A620 ADRP X8, 0xB30000
	0x0360A624 LDR X8, [X8 + 0xE20]
	0x0360A628 LDR X0, [X8]
	0x0360A62C BL 0x1C16F10
	0x0360A630 MOV X1, X31
	0x0360A634 MOV X22, X0
	0x0360A638 BL 0x33BDD8C
	0x0360A63C LDR X1, [X20]
	0x0360A640 LDR W2, [X20 + 0x8]
	0x0360A644 MOV X0, X21
	0x0360A648 BL 0x35FD280
	0x0360A64C CBZ X22, 0x360A6D8
	0x0360A650 STR X0, [X22 + 0x10]
	0x0360A654 MOV X0, X21
	0x0360A658 MOV W1, W31
	0x0360A65C BL 0x35FCF70
	0x0360A660 STR X0, [X20]
	0x0360A664 STR W1, [X20 + 0x8]
	0x0360A668 MOV X23, X0
	0x0360A66C LDR X0, [X24]
	0x0360A670 LDR W8, [X0 + 0xE0]
	0x0360A674 CBNZ W8, 0x360A67C
	0x0360A678 BL 0x1C16DFC
	0x0360A67C CMP W23, 0x5
	0x0360A680 B.NE 0x360A6B4
	0x0360A684 ADD X1, X22, 0x18
	0x0360A688 MOV X0, X21
	0x0360A68C MOV X2, X20
	0x0360A690 BL 0x35FFCCC
	0x0360A694 TBZ X0, 0x0, 0x360A6C0
	0x0360A698 LDR X0, [X24]
	0x0360A69C LDR X20, [X20]
	0x0360A6A0 LDR W8, [X0 + 0xE0]
	0x0360A6A4 CBNZ W8, 0x360A6AC
	0x0360A6A8 BL 0x1C16DFC
	0x0360A6AC CMP W20, 0x1
	0x0360A6B0 B.NE 0x360A6C0
	0x0360A6B4 MOVZ W0, 0x1
	0x0360A6B8 STR X22, [X19]
	0x0360A6BC B 0x360A6C4
	0x0360A6C0 MOV W0, W31
	0x0360A6C4 LDP X20, X19, [X31 + 0x30]
	0x0360A6C8 LDP X22, X21, [X31 + 0x20]
	0x0360A6CC LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X21, 0xDD7000
	011 Move X25, 0xB12000
	012 Move X24, 0xB12000
	013 Move W8, [X21+986]
	014 Move X25, [X25+2248]
	015 Move X24, [X24+2256]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xB12000
	023 Move X0, [X0+2248]
	024 Call 0x1C17CF4
	025 Move X0, 0xB1E000
	026 Move X0, [X0+2952]
	027 Call 0x1C17CF4
	028 Move X0, 0xB1E000
	029 Move X0, [X0+2960]
	030 Call 0x1C17CF4
	031 Move X0, 0xB31000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move X0, 0xB12000
	035 Move X0, [X0+2256]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+986], W8
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Move [X19], X31
	042 Move X0, [X25]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X21, X0
	046 Call Object..ctor, X0
	047 Move X0, X21
	048 Move W1, W31
	049 Move [X21+16], X20
	050 Call Lexer.Scan, X0, X1
	051 Move X22, X0
	052 Move X0, [X24]
	053 Move X23, X1
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction CMP not yet implemented."
	059 And X2, X23, 0
	060 Move X0, X21
	061 Move X1, X22
	062 Call Lexer.TryGetTimeSpanValue, X0, X1
	063 And W31, W0, 255
	064 Move [X31+16], X0
	065 Move [X31+24], X1
	066 Move X0, X21
	067 Move W1, W31
	068 Call Lexer.Scan, X0, X1
	069 Move X8, [X24]
	070 Move X20, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0xB1E000
	078 Move X8, [X8+2960]
	079 Add X0, X31, 16
	080 Move X1, [X8]
	081 Call Nullable`1<TimeSpan>.get_Value, X0
	082 Move X8, 0xB31000
	083 Move X8, [X8+3488]
	084 Move X20, X0
	085 Move X8, [X8]
	086 Move X0, X8
	087 Call 0x1C17F10
	088 Move X1, X20
	089 Move X21, X0
	090 Call RetryConditionHeaderValue..ctor, X0, X1
	091 Move [X19], X21
	092 Move X0, [X25]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Add X1, X31, 0
	098 Move X0, X20
	099 Call Lexer.TryGetDateValue, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {116}
	104 Move X8, 0xB31000
	105 Move X20, [X31]
	106 Move X21, [X31+8]
	107 Move X8, [X8+3488]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X1, X20
	111 Move X2, X21
	112 Move X22, X0
	113 Call RetryConditionHeaderValue..ctor, X0, X1
	114 Move [X19], X22
	115 Move W0, 1
	116 Move W0, W31
	117 Move X20, [X31+80]
	118 Move X19, [X31+88]
	119 Move X22, [X31+64]
	120 Move X21, [X31+72]
	121 Move X24, [X31+48]
	122 Move X23, [X31+56]
	123 Move X30, [X31+32]
	124 Move X25, [X31+40]
	125 Add X31, X31, 96
	126 Return X0

Method: System.String ToString()

Disassembly:
	0x0360A6D0 LDR X30, [X31], #0x40
	0x0360A6D4 RET
	0x0360A6D8 BL 0x1C16F20
	0x0360A6DC MOV X1, X31
	0x0360A6E0 B 0x33BDD8C
	0x0360A6E4 LDR X0, [X0 + 0x10]
	0x0360A6E8 RET
	0x0360A6EC STR X1, [X0 + 0x10]
	0x0360A6F0 RET
	0x0360A6F4 LDR X0, [X0 + 0x18]
	0x0360A6F8 RET
	0x0360A6FC STR X1, [X0 + 0x18]
	0x0360A700 RET
	0x0360A704 LDR X0, [X0 + 0x20]
	0x0360A708 RET
	0x0360A70C STR X1, [X0 + 0x20]
	0x0360A710 RET
	0x0360A714 LDR X0, [X0 + 0x28]
	0x0360A718 RET
	0x0360A71C STR X1, [X0 + 0x28]
	0x0360A720 RET
	0x0360A724 MOV X1, X31
	0x0360A728 B 0x33C5A24
	0x0360A72C STP X30, X21, [X31 - 0x20]!
	0x0360A730 STP X20, X19, [X31 + 0x10]
	0x0360A734 ADRP X21, 0xDD6000
	0x0360A738 LDRB W8, [X21 + 0x3EB]
	0x0360A73C MOV X20, X1
	0x0360A740 MOV X19, X0
	0x0360A744 TBNZ X8, 0x0, 0x360A75C
	0x0360A748 ADRP X0, 0xB30000
	0x0360A74C LDR X0, [X0 + 0xE28]
	0x0360A750 BL 0x1C16CF4
	0x0360A754 MOVZ W8, 0x1
	0x0360A758 STRB W8, [X21 + 0x3EB]
	0x0360A75C CBZ X20, 0x360A800
	0x0360A760 ADRP X8, 0xB30000
	0x0360A764 LDR X8, [X8 + 0xE28]
	0x0360A768 LDR X9, [X20]
	0x0360A76C LDR X8, [X8]
	0x0360A770 LDRB W11, [X9 + 0x130]
	0x0360A774 LDRB W10, [X8 + 0x130]
	0x0360A778 CMP W11, W10
	0x0360A77C B.CC 0x360A800
	0x0360A780 LDR X9, [X9 + 0xC8]
	0x0360A784 ADD X9, X9, X10, 0x3, LSL
	0x0360A788 LDUR X9, [X9 - 0x8]
	0x0360A78C CMP X9, X8
	0x0360A790 CSEL X20, X20, X31, EQ
	0x0360A794 B.NE 0x360A800
	0x0360A798 CBZ X20, 0x360A810
	0x0360A79C LDR X0, [X20 + 0x10]
	0x0360A7A0 LDR X1, [X19 + 0x10]
	0x0360A7A4 MOVZ W2, 0x4
	0x0360A7A8 MOV X3, X31
	0x0360A7AC BL 0x3226C60
	0x0360A7B0 TBZ X0, 0x0, 0x360A800
	0x0360A7B4 LDR X0, [X20 + 0x18]
	0x0360A7B8 LDR X1, [X19 + 0x18]
	0x0360A7BC MOVZ W2, 0x5
	0x0360A7C0 MOV X3, X31
	0x0360A7C4 BL 0x3226C60
	0x0360A7C8 TBZ X0, 0x0, 0x360A800
	0x0360A7CC LDR X0, [X20 + 0x20]
	0x0360A7D0 LDR X1, [X19 + 0x20]
	0x0360A7D4 MOVZ W2, 0x5
	0x0360A7D8 MOV X3, X31
	0x0360A7DC BL 0x3226C60
	0x0360A7E0 TBZ X0, 0x0, 0x360A800
	0x0360A7E4 LDR X0, [X20 + 0x28]
	0x0360A7E8 LDR X1, [X19 + 0x28]
	0x0360A7EC LDP X20, X19, [X31 + 0x10]
	0x0360A7F0 MOVZ W2, 0x5
	0x0360A7F4 MOV X3, X31
	0x0360A7F8 LDP X30, X21, [X31], #0x20
	0x0360A7FC B 0x3226C60
	0x0360A800 LDP X20, X19, [X31 + 0x10]
	0x0360A804 MOV W0, W31
	0x0360A808 LDP X30, X21, [X31], #0x20
	0x0360A80C RET
	0x0360A810 BL 0x1C16F20
	0x0360A814 STR X30, [X31 - 0x20]!
	0x0360A818 STP X20, X19, [X31 + 0x10]
	0x0360A81C MOV X19, X0
	0x0360A820 LDR X0, [X0 + 0x20]
	0x0360A824 CBZ X0, 0x360A8DC
	0x0360A828 MOV X1, X31
	0x0360A82C BL 0x322B6E4
	0x0360A830 CBZ X0, 0x360A8DC
	0x0360A834 LDR X8, [X0]
	0x0360A838 LDP X9, X1, [X8 + 0x158]
	0x0360A83C BLR X9
	0x0360A840 LDR X8, [X19 + 0x28]
	0x0360A844 CBZ X8, 0x360A8DC
	0x0360A848 MOV W20, W0
	0x0360A84C MOV X0, X8
	0x0360A850 MOV X1, X31
	0x0360A854 BL 0x322B6E4
	0x0360A858 CBZ X0, 0x360A8DC
	0x0360A85C LDR X8, [X0]
	0x0360A860 LDP X9, X1, [X8 + 0x158]
	0x0360A864 BLR X9
	0x0360A868 LDR X8, [X19 + 0x18]
	0x0360A86C EOR W20, W0, W20, 0x0
	0x0360A870 MOV X1, X31
	0x0360A874 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+96], X20
	004 Move [X31+104], X19
	005 Move X20, 0xDD7000
	006 Move W8, [X20+987]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0xAEC000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move X0, 0xAEC000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move X0, 0xB1E000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0xB31000
	022 Move X0, [X0+3368]
	023 Call 0x1C17CF4
	024 Move X0, 0xB1E000
	025 Move X0, [X0+2960]
	026 Call 0x1C17CF4
	027 Move X0, 0xAEC000
	028 Move X0, [X0+1392]
	029 Call 0x1C17CF4
	030 Move X0, 0xB17000
	031 Move X0, [X0+936]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+987], W8
	035 Move [X31+32], X31
	036 Move [X31+40], X31
	037 Move [X31+48], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move [X31+88], X31
	041 Move [X31+8], X31
	042 Move X8, [X19+40]
	043 Move X9, [X19+48]
	044 Move X20, 0xAEC000
	045 Move X20, [X20+3144]
	046 And W31, W8, 255
	047 Move [X31+64], X8
	048 Move [X31+72], X9
	049 Move X10, 0xB1E000
	050 Move X10, [X10+2960]
	051 Move X19, 0xAEC000
	052 Add X0, X31, 64
	053 Move X1, [X10]
	054 Move X19, [X19+1392]
	055 Move [X31+64], X8
	056 Move [X31+72], X9
	057 Call Nullable`1<TimeSpan>.get_Value, X0
	058 Move X8, [X19]
	059 Move [X31+88], X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Add X0, X31, 88
	066 Move X1, X31
	067 Call TimeSpan.get_TotalSeconds, X0
	068 Move X0, [X20]
	069 Move [X31+8], D0
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X31
	075 Call CultureInfo.get_InvariantCulture
	076 Move X1, X0
	077 Add X0, X31, 8
	078 Move X2, X31
	079 Call Double.ToString, X0, X1
	080 Move X9, 0xB31000
	081 Move V0, [X19+1]
	082 Move X8, [X19+32]
	083 Move X9, [X9+3368]
	084 Add X0, X31, 32
	085 Move [X31+2], V0
	086 Move [X31+48], X8
	087 Move X1, [X9]
	088 Call Nullable`1<DateTimeOffset>.get_Value, X0
	089 Move X8, X0
	090 Move X0, [X20]
	091 Move [X31+16], X8
	092 Move [X31+24], X1
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X31
	098 Call CultureInfo.get_InvariantCulture
	099 Move X8, 0xAEC000
	100 Move X8, [X8+2648]
	101 Move X19, X0
	102 Move X8, [X8]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, 0xB17000
	109 Move X8, [X8+936]
	110 Add X0, X31, 16
	111 Move X2, X19
	112 Move X3, X31
	113 Move X1, [X8]
	114 Call DateTimeOffset.ToString, X0, X1, X2
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X30, [X31+80]
	118 Add X31, X31, 112
	119 Return X0

