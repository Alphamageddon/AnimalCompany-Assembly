Type: System.Net.Http.Headers.CollectionParser

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, System.Net.Http.Headers.ElementTryParser`1<T> parser, out System.Collections.Generic.List`1<T> result)

Disassembly:
	0x021A3910 BL 0x3C32FC4
	0x021A3914 LDR X0, [X31]
	0x021A3918 LDP X20, X19, [X31 + 0x20]
	0x021A391C LDR X30, [X31 + 0x10]
	0x021A3920 ADD X31, X31, 0x30
	0x021A3924 RET
	0x021A3928 STP X29, X30, [X31 - 0x60]!
	0x021A392C STP X28, X27, [X31 + 0x10]
	0x021A3930 STP X26, X25, [X31 + 0x20]
	0x021A3934 STP X24, X23, [X31 + 0x30]
	0x021A3938 STP X22, X21, [X31 + 0x40]
	0x021A393C STP X20, X19, [X31 + 0x50]
	0x021A3940 ADD X29, X31, 0x0
	0x021A3944 SUB X31, X31, 0x10
	0x021A3948 STUR X1, [X29 - 0x10]
	0x021A394C MRS X19, 0xC000
	0x021A3950 LDR X8, [X19 + 0x28]
	0x021A3954 MOV X20, X2
	0x021A3958 MOV X23, X0
	0x021A395C STUR X8, [X29 - 0x8]
	0x021A3960 LDR X28, [X2 + 0x38]
	0x021A3964 CBNZ X28, 0x21A3988
	0x021A3968 ADRP X0, 0x1F50000
	0x021A396C LDR X0, [X0 + 0x6C0]
	0x021A3970 BL 0x1C16CF4
	0x021A3974 LDR X28, [X20 + 0x38]
	0x021A3978 CBNZ X28, 0x21A3988
	0x021A397C MOV X0, X20
	0x021A3980 BL 0x1C5C6E0
	0x021A3984 LDR X28, [X20 + 0x38]
	0x021A3988 LDR X9, [X28 + 0x10]
	0x021A398C LDR X8, [X28]
	0x021A3990 LDR W21, [X9 + 0xFC]
	0x021A3994 LDR W24, [X8 + 0xFC]
	0x021A3998 ADD X8, X31, 0x0
	0x021A399C ADD X9, X21, 0xF
	0x021A39A0 AND X26, X9, 0x1FFFFFFFF
	0x021A39A4 SUB X22, X8, X26
	0x021A39A8 ADD X31, X22, 0x0
	0x021A39AC ADD X9, X24, 0xF
	0x021A39B0 ADD X8, X31, 0x0
	0x021A39B4 AND X9, X9, 0x1FFFFFFFF
	0x021A39B8 SUB X25, X8, X9
	0x021A39BC ADD X31, X25, 0x0
	0x021A39C0 ADD X8, X31, 0x0
	0x021A39C4 SUB X27, X8, X9
	0x021A39C8 ADD X31, X27, 0x0
	0x021A39CC MOV X0, X27
	0x021A39D0 MOV W1, W31
	0x021A39D4 MOV X2, X24
	0x021A39D8 BL 0x3EB1B10
	0x021A39DC ADD X8, X31, 0x0
	0x021A39E0 SUB X26, X8, X26
	0x021A39E4 ADD X31, X26, 0x0
	0x021A39E8 MOV X0, X26
	0x021A39EC MOV W1, W31
	0x021A39F0 MOV X2, X21
	0x021A39F4 BL 0x3EB1B10
	0x021A39F8 MOV X0, X27
	0x021A39FC MOV W1, W31
	0x021A3A00 MOV X2, X24
	0x021A3A04 BL 0x3EB1B10
	0x021A3A08 ADRP X8, 0x1F50000
	0x021A3A0C LDR X8, [X8 + 0x6C0]
	0x021A3A10 LDR X28, [X28 + 0x8]
	0x021A3A14 LDR X0, [X8]
	0x021A3A18 LDR W8, [X0 + 0xE0]
	0x021A3A1C CBNZ W8, 0x21A3A24
	0x021A3A20 BL 0x1C16DFC
	0x021A3A24 MOV X0, X28
	0x021A3A28 MOV X1, X31
	0x021A3A2C BL 0x338C698
	0x021A3A30 LDR X8, [X20 + 0x38]
	0x021A3A34 MOV X28, X0
	0x021A3A38 MOV X0, X27
	0x021A3A3C LDR X8, [X8]
	0x021A3A40 LDR X8, [X8 + 0x80]
	0x021A3A44 ADD X1, X8, 0x20
	0x021A3A48 BL 0x1C16D18
	0x021A3A4C MOV X2, X0
	0x021A3A50 MOV X0, X23
	0x021A3A54 MOV X1, X28
	0x021A3A58 MOV X3, X31
	0x021A3A5C BL 0x3C32FC4
	0x021A3A60 MOV X0, X25
	0x021A3A64 MOV X1, X27
	0x021A3A68 MOV X2, X24
	0x021A3A6C BL 0x3EB1AC0
	0x021A3A70 LDR X8, [X20 + 0x38]
	0x021A3A74 MOV X0, X25
	0x021A3A78 LDR X8, [X8]
	0x021A3A7C LDR X1, [X8 + 0x80]
	0x021A3A80 BL 0x1C16D18
	0x021A3A84 MOV X1, X0
	0x021A3A88 MOV X0, X22
	0x021A3A8C MOV X2, X21
	0x021A3A90 BL 0x3EB1AC0
	0x021A3A94 MOV X0, X26
	0x021A3A98 MOV X1, X22
	0x021A3A9C MOV X2, X21
	0x021A3AA0 BL 0x3EB1AC0
	0x021A3AA4 MOV X0, X22
	0x021A3AA8 MOV X1, X26
	0x021A3AAC MOV X2, X21
	0x021A3AB0 BL 0x3EB1AC0
	0x021A3AB4 LDUR X0, [X29 - 0x10]
	0x021A3AB8 MOV X1, X22
	0x021A3ABC MOV X2, X21
	0x021A3AC0 BL 0x3EB1AC0
	0x021A3AC4 LDR X8, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X8, [X4+56]
	011 Move X21, X4
	012 Move X19, X3
	013 Move X22, X2
	014 Move W20, W1
	015 Move X24, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {29}
	018 Move X0, 0x1F79000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F79000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move X8, [X21+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X21
	028 Call 0x1C5D6E0
	029 Move X8, 0x1F79000
	030 Move X8, [X8+2248]
	031 Move [X31+24], W31
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X24
	037 Move X2, X31
	038 Move X23, X0
	039 Call Lexer..ctor, X0, X1
	040 Move X8, [X21+56]
	041 Move X0, [X8+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Call 0x1C17F10
	049 Move X8, [X21+56]
	050 Move X24, X0
	051 Move X1, [X8+16]
	052 Call List`1<Object>..ctor, X0
	053 Move [X19], X24
	054 Compare X22, 0
	055 JumpIfEqual {127}
	056 Move X24, 0x1F79000
	057 Move X24, [X24+2256]
	058 Move X8, [X22+24]
	059 Move X0, [X22+64]
	060 Move X4, [X22+40]
	061 Add X2, X31, 8
	062 Add X3, X31, 16
	063 Move X1, X23
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {115}
	069 Move X1, [X31+8]
	070 Compare X1, 0
	071 JumpIfEqual {94}
	072 Move X0, [X19]
	073 Compare X0, 0
	074 JumpIfEqual {127}
	075 Move X9, [X21+56]
	076 Move W10, [X0+28]
	077 Move X8, [X0+16]
	078 Move X9, [X9+56]
	079 Add W10, W10, 1
	080 Move [X0+28], W10
	081 Compare X8, 0
	082 JumpIfEqual {127}
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W9, W10, 1
	087 Add X8, X8, X10
	088 Move [X0+24], W9
	089 Move [X8+32], X1
	090 Move X8, [X9+32]
	091 Move X8, [X8+192]
	092 Move X2, [X8+112]
	093 Call List`1<Object>.AddWithResize, X0, X1
	094 Move X0, [X24]
	095 Move X25, [X31+16]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X24]
	102 Move X21, [X31+16]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X19]
	109 Compare X8, 0
	110 JumpIfEqual {127}
	111 Move W8, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W0, W31
	114 Move [X19], X31
	115 Move W0, W31
	116 Move X20, [X31+80]
	117 Move X19, [X31+88]
	118 Move X22, [X31+64]
	119 Move X21, [X31+72]
	120 Move X24, [X31+48]
	121 Move X23, [X31+56]
	122 Move X30, [X31+32]
	123 Move X25, [X31+40]
	124 Add X31, X31, 96
	125 Return X0
	126 Move W0, 1
	127 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.String> result)

Disassembly:
	0x036004C8 MOV X0, X20
	0x036004CC MOV W1, W31
	0x036004D0 BL 0x35FCF70
	0x036004D4 MOV X4, X0
	0x036004D8 AND X2, X1, 0x0
	0x036004DC ADD X3, X31, 0x18
	0x036004E0 MOV X0, X20
	0x036004E4 MOV X1, X4
	0x036004E8 BL 0x36006DC
	0x036004EC MOV W8, W0
	0x036004F0 MOV W0, W31
	0x036004F4 TBZ X8, 0x0, 0x3600610
	0x036004F8 LDR X1, [X31 + 0x18]
	0x036004FC LDR X2, [X23]
	0x03600500 ADD X0, X31, 0x0
	0x03600504 STP X31, X31, [X31]
	0x03600508 BL 0x2434988
	0x0360050C LDR V0, [X31]
	0x03600510 STUR V0, [X21 + 0x38]
	0x03600514 B 0x3600398
	0x03600518 MOV X0, X20
	0x0360051C MOV X1, X22
	0x03600520 MOV X2, X23
	0x03600524 BL 0x35FD280
	0x03600528 CBZ X0, 0x3600628
	0x0360052C LDR W8, [X0 + 0x10]
	0x03600530 CMP W8, 0x3
	0x03600534 B.LT 0x360060C
	0x03600538 MOVZ W1, 0x2D
	0x0360053C MOV W2, W31
	0x03600540 MOV X3, X31
	0x03600544 BL 0x3229AE8
	0x03600548 CBZ X0, 0x3600628
	0x0360054C LDR W8, [X0 + 0x18]
	0x03600550 MOV X22, X0
	0x03600554 CMP W8, 0x2
	0x03600558 B.NE 0x360060C
	0x0360055C ADRP X25, 0xAF5000
	0x03600560 LDR X25, [X25 + 0xC48]
	0x03600564 LDR X23, [X22 + 0x20]
	0x03600568 LDR X0, [X25]
	0x0360056C LDR W8, [X0 + 0xE0]
	0x03600570 CBNZ W8, 0x3600578
	0x03600574 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDE1000
	010 Move X25, 0xB3B000
	011 Move X22, 0xB3B000
	012 Move X23, 0xB3B000
	013 Move W8, [X24+840]
	014 Move X25, [X25+1624]
	015 Move X22, [X22+1632]
	016 Move X23, [X23+1640]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB3B000
	025 Move X0, [X0+1632]
	026 Call 0x1C17CF4
	027 Move X0, 0xB3B000
	028 Move X0, [X0+1640]
	029 Call 0x1C17CF4
	030 Move X0, 0xB3B000
	031 Move X0, [X0+1624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+840], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseStringElement(System.Net.Http.Headers.Lexer lexer, out System.String parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x03600578 MOV X0, X31
	0x0360057C BL 0x3338524
	0x03600580 MOV X2, X0
	0x03600584 ADD X3, X31, 0x18
	0x03600588 MOV X0, X23
	0x0360058C MOV W1, W31
	0x03600590 MOV X4, X31
	0x03600594 BL 0x337D7DC
	0x03600598 MOV W8, W0
	0x0360059C MOV W0, W31
	0x036005A0 TBZ X8, 0x0, 0x3600610
	0x036005A4 ADRP X23, 0xB37000
	0x036005A8 LDR X1, [X31 + 0x18]
	0x036005AC LDR X23, [X23 + 0x738]
	0x036005B0 ADD X0, X31, 0x0
	0x036005B4 STP X31, X31, [X31]
	0x036005B8 LDR X2, [X23]
	0x036005BC BL 0x2434988
	0x036005C0 LDR V0, [X31]
	0x036005C4 STUR V0, [X21 + 0x18]
	0x036005C8 LDR W8, [X22 + 0x18]
	0x036005CC CMP W8, 0x1
	0x036005D0 B.LS 0x360062C
	0x036005D4 LDR X0, [X25]
	0x036005D8 LDR X22, [X22 + 0x28]
	0x036005DC LDR W8, [X0 + 0xE0]
	0x036005E0 CBNZ W8, 0x36005E8
	0x036005E4 BL 0x1C16DFC
	0x036005E8 MOV X0, X31
	0x036005EC BL 0x3338524
	0x036005F0 MOV X2, X0
	0x036005F4 ADD X3, X31, 0x18
	0x036005F8 MOV X0, X22
	0x036005FC MOV W1, W31
	0x03600600 MOV X4, X31
	0x03600604 BL 0x337D7DC
	0x03600608 B 0x36004EC
	0x0360060C MOV W0, W31
	0x03600610 LDP X20, X19, [X31 + 0x50]
	0x03600614 LDP X22, X21, [X31 + 0x40]
	0x03600618 LDP X24, X23, [X31 + 0x30]
	0x0360061C LDP X30, X25, [X31 + 0x20]
	0x03600620 ADD X31, X31, 0x60
	0x03600624 RET
	0x03600628 BL 0x1C16F20
	0x0360062C BL 0x1C16F28
	0x03600630 STP X30, X23, [X31 - 0x30]!
	0x03600634 STP X22, X21, [X31 + 0x10]
	0x03600638 STP X20, X19, [X31 + 0x20]
	0x0360063C ADRP X23, 0xDE0000
	0x03600640 ADRP X22, 0xB1B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDE1000
	008 Move W8, [X22+841]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xB1C000
	017 Move X0, [X0+2256]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+841], W8
	021 Compare X21, 0
	022 JumpIfEqual {62}
	023 Move X23, 0xB1C000
	024 Move X23, [X23+2256]
	025 Move X0, X21
	026 Move W1, W31
	027 Call Lexer.Scan, X0, X1
	028 Move [X19], X0
	029 Move [X19+8], W1
	030 Move X22, X0
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X1, [X19]
	038 Move W2, [X19+8]
	039 Move X0, X21
	040 Call Lexer.GetStringValue, X0, X1
	041 Move [X20], X0
	042 Compare X0, 0
	043 JumpIfEqual {62}
	044 Move W8, [X0+16]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Move [X20], X31
	048 Move X0, X21
	049 Move W1, W31
	050 Call Lexer.Scan, X0, X1
	051 Move [X19], X0
	052 Move [X19+8], W1
	053 Move [X20], X31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move W0, 1
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return X0
	062 Call 0x1C17F20

