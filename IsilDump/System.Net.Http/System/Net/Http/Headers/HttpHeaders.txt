Type: System.Net.Http.Headers.HttpHeaders

Method: System.Void .cctor()

Disassembly:
	0x0360211C CBNZ W8, 0x3602128
	0x03602120 BL 0x1C16DFC
	0x03602124 LDR X0, [X28]
	0x03602128 LDR X8, [X0 + 0xB8]
	0x0360212C LDR X0, [X23]
	0x03602130 LDR X4, [X26]
	0x03602134 MOVZ W2, 0x3
	0x03602138 LDR X3, [X8]
	0x0360213C MOV X1, X20
	0x03602140 BL 0x21EBDF0
	0x03602144 MOV X20, X0
	0x03602148 CBZ X0, 0x3602160
	0x0360214C LDR X8, [X19]
	0x03602150 MOV X0, X20
	0x03602154 LDR X1, [X8 + 0x40]
	0x03602158 BL 0x1C16E00
	0x0360215C CBZ X0, 0x36030E0
	0x03602160 LDR W8, [X22]
	0x03602164 CMP W8, 0x12
	0x03602168 B.LS 0x36030D8
	0x0360216C ADRP X8, 0xB38000
	0x03602170 LDR X8, [X8 + 0x8D8]
	0x03602174 STR X20, [X19 + 0xB0]
	0x03602178 ADRP X20, 0xB38000
	0x0360217C ADRP X23, 0xB38000
	0x03602180 LDR X0, [X8]
	0x03602184 ADRP X24, 0xB38000
	0x03602188 LDR X20, [X20 + 0x760]
	0x0360218C LDR X23, [X23 + 0xA10]
	0x03602190 LDR X24, [X24 + 0x800]
	0x03602194 BL 0x1C16F10
	0x03602198 LDR X2, [X20]
	0x0360219C MOV X1, X31
	0x036021A0 MOV X3, X31
	0x036021A4 MOV X20, X0
	0x036021A8 BL 0x270259C
	0x036021AC LDR X0, [X23]
	0x036021B0 LDR X4, [X24]
	0x036021B4 MOVZ W2, 0x2
	0x036021B8 MOV X1, X20
	0x036021BC MOV X3, X31
	0x036021C0 BL 0x21EBF7C
	0x036021C4 MOV X20, X0
	0x036021C8 CBZ X0, 0x36021E0
	0x036021CC LDR X8, [X19]
	0x036021D0 MOV X0, X20
	0x036021D4 LDR X1, [X8 + 0x40]
	0x036021D8 BL 0x1C16E00
	0x036021DC CBZ X0, 0x36030E0
	0x036021E0 LDR W8, [X22]
	0x036021E4 CMP W8, 0x13
	0x036021E8 B.LS 0x36030D8
	0x036021EC ADRP X8, 0xB38000
	0x036021F0 LDR X8, [X8 + 0x9A8]
	0x036021F4 STR X20, [X19 + 0xB8]
	0x036021F8 ADRP X20, 0xB38000
	0x036021FC ADRP X23, 0xB38000
	0x03602200 LDR X0, [X8]
	0x03602204 ADRP X24, 0xB38000
	0x03602208 LDR X20, [X20 + 0x880]
	0x0360220C LDR X23, [X23 + 0xAD8]
	0x03602210 LDR X24, [X24 + 0x788]
	0x03602214 BL 0x1C16F10
	0x03602218 LDR X2, [X20]
	0x0360221C MOV X1, X31
	0x03602220 MOV X3, X31
	0x03602224 MOV X20, X0
	0x03602228 BL 0x27027B8
	0x0360222C ADRP X8, 0xAF1000
	0x03602230 LDR X0, [X23]
	0x03602234 LDR X8, [X8 + 0x838]
	0x03602238 LDR X5, [X24]
	0x0360223C MOVZ W2, 0x1
	0x03602240 MOVZ W3, 0x1
	0x03602244 LDR X4, [X8]
	0x03602248 MOV X1, X20
	0x0360224C BL 0x21EBD64
	0x03602250 MOV X20, X0
	0x03602254 CBZ X0, 0x360226C
	0x03602258 LDR X8, [X19]
	0x0360225C MOV X0, X20
	0x03602260 LDR X1, [X8 + 0x40]
	0x03602264 BL 0x1C16E00
	0x03602268 CBZ X0, 0x36030E0
	0x0360226C LDR W8, [X22]
	0x03602270 CMP W8, 0x14
	0x03602274 B.LS 0x36030D8
	0x03602278 STR X20, [X19 + 0xC0]
	0x0360227C LDR X0, [X27]
	0x03602280 ADRP X23, 0xB38000
	0x03602284 LDR X23, [X23 + 0xA78]
	0x03602288 BL 0x1C16F10
	0x0360228C LDR X2, [X29]
	0x03602290 MOV X1, X31
	0x03602294 MOV X3, X31
	0x03602298 MOV X20, X0
	0x0360229C BL 0x2702380
	0x036022A0 LDR X8, [X28]
	0x036022A4 LDR X0, [X23]
	0x036022A8 LDR X4, [X26]
	0x036022AC MOVZ W2, 0x4
	0x036022B0 LDR X8, [X8 + 0xB8]
	0x036022B4 MOV X1, X20
	0x036022B8 LDR X3, [X8]
	0x036022BC BL 0x21EBDF0
	0x036022C0 MOV X20, X0
	0x036022C4 CBZ X0, 0x36022DC
	0x036022C8 LDR X8, [X19]
	0x036022CC MOV X0, X20
	0x036022D0 LDR X1, [X8 + 0x40]
	0x036022D4 BL 0x1C16E00
	0x036022D8 CBZ X0, 0x36030E0
	0x036022DC LDR W8, [X22]
	0x036022E0 CMP W8, 0x15
	0x036022E4 B.LS 0x36030D8
	0x036022E8 ADRP X24, 0xB38000
	0x036022EC LDR X24, [X24 + 0x8E0]
	0x036022F0 STR X20, [X19 + 0xC8]
	0x036022F4 ADRP X20, 0xB38000
	0x036022F8 ADRP X25, 0xB38000
	0x036022FC LDR X0, [X24]
	0x03602300 ADRP X23, 0xB38000
	0x03602304 LDR X20, [X20 + 0x758]
	0x03602308 LDR X25, [X25 + 0xA70]
	0x0360230C LDR X23, [X23 + 0x838]
	0x03602310 BL 0x1C16F10
	0x03602314 LDR X2, [X20]
	0x03602318 MOV X1, X31
	0x0360231C MOV X3, X31
	0x03602320 MOV X20, X0
	0x03602324 BL 0x270259C
	0x03602328 LDR X0, [X25]
	0x0360232C LDR X4, [X23]
	0x03602330 MOVZ W2, 0x1
	0x03602334 MOV X1, X20
	0x03602338 MOV X3, X31
	0x0360233C BL 0x21EBF7C
	0x03602340 MOV X20, X0
	0x03602344 CBZ X0, 0x360235C
	0x03602348 LDR X8, [X19]
	0x0360234C MOV X0, X20
	0x03602350 LDR X1, [X8 + 0x40]
	0x03602354 BL 0x1C16E00
	0x03602358 CBZ X0, 0x36030E0
	0x0360235C LDR W8, [X22]
	0x03602360 CMP W8, 0x16
	0x03602364 B.LS 0x36030D8
	0x03602368 STR X20, [X19 + 0xD0]
	0x0360236C LDR X0, [X24]
	0x03602370 ADRP X20, 0xB38000
	0x03602374 ADRP X24, 0xB38000
	0x03602378 LDR X20, [X20 + 0x850]
	0x0360237C LDR X24, [X24 + 0x188]
	0x03602380 BL 0x1C16F10
	0x03602384 LDR X2, [X20]
	0x03602388 MOV X1, X31
	0x0360238C MOV X3, X31
	0x03602390 MOV X20, X0
	0x03602394 BL 0x270259C
	0x03602398 LDR X0, [X24]
	0x0360239C LDR X4, [X23]
	0x036023A0 MOVZ W2, 0x1
	0x036023A4 MOV X1, X20
	0x036023A8 MOV X3, X31
	0x036023AC BL 0x21EBF7C
	0x036023B0 MOV X20, X0
	0x036023B4 CBZ X0, 0x36023CC
	0x036023B8 LDR X8, [X19]
	0x036023BC MOV X0, X20
	0x036023C0 LDR X1, [X8 + 0x40]
	0x036023C4 BL 0x1C16E00
	0x036023C8 CBZ X0, 0x36030E0
	0x036023CC LDR W8, [X22]
	0x036023D0 CMP W8, 0x17
	0x036023D4 B.LS 0x36030D8
	0x036023D8 ADRP X25, 0xB38000
	0x036023DC LDR X25, [X25 + 0x990]
	0x036023E0 STR X20, [X19 + 0xD8]
	0x036023E4 ADRP X24, 0xB38000
	0x036023E8 ADRP X21, 0xB38000
	0x036023EC LDR X0, [X25]
	0x036023F0 ADRP X23, 0xB38000
	0x036023F4 LDR X24, [X24 + 0x768]
	0x036023F8 LDR X21, [X21 + 0xA58]
	0x036023FC LDR X23, [X23 + 0x778]
	0x03602400 BL 0x1C16F10
	0x03602404 LDR X2, [X24]
	0x03602408 MOV X1, X31
	0x0360240C MOV X3, X31
	0x03602410 MOV X20, X0
	0x03602414 BL 0x27027B8
	0x03602418 ADRP X8, 0xAF1000
	0x0360241C LDR X0, [X21]
	0x03602420 LDR X8, [X8 + 0x838]
	0x03602424 LDR X5, [X23]
	0x03602428 MOVZ W2, 0x1
	0x0360242C MOVZ W3, 0x1
	0x03602430 LDR X4, [X8]
	0x03602434 MOV X1, X20
	0x03602438 BL 0x21EBD64
	0x0360243C MOV X20, X0
	0x03602440 CBZ X0, 0x3602458
	0x03602444 LDR X8, [X19]
	0x03602448 MOV X0, X20
	0x0360244C LDR X1, [X8 + 0x40]
	0x03602450 BL 0x1C16E00
	0x03602454 CBZ X0, 0x36030E0
	0x03602458 LDR W8, [X22]
	0x0360245C CMP W8, 0x18
	0x03602460 B.LS 0x36030D8
	0x03602464 STR X20, [X19 + 0xE0]
	0x03602468 LDR X0, [X27]
	0x0360246C ADRP X21, 0xB38000
	0x03602470 LDR X21, [X21 + 0xAA0]
	0x03602474 BL 0x1C16F10
	0x03602478 LDR X2, [X29]
	0x0360247C MOV X1, X31
	0x03602480 MOV X3, X31
	0x03602484 MOV X20, X0
	0x03602488 BL 0x2702380
	0x0360248C LDR X8, [X28]
	0x03602490 LDR X0, [X21]
	0x03602494 LDR X4, [X26]
	0x03602498 MOVZ W2, 0x1
	0x0360249C LDR X8, [X8 + 0xB8]
	0x036024A0 MOV X1, X20
	0x036024A4 LDR X3, [X8]
	0x036024A8 BL 0x21EBDF0
	0x036024AC MOV X20, X0
	0x036024B0 CBZ X0, 0x36024C8
	0x036024B4 LDR X8, [X19]
	0x036024B8 MOV X0, X20
	0x036024BC LDR X1, [X8 + 0x40]
	0x036024C0 BL 0x1C16E00
	0x036024C4 CBZ X0, 0x36030E0
	0x036024C8 LDR W8, [X22]
	0x036024CC CMP W8, 0x19
	0x036024D0 B.LS 0x36030D8
	0x036024D4 STR X20, [X19 + 0xE8]
	0x036024D8 LDR X0, [X25]
	0x036024DC ADRP X21, 0xB38000
	0x036024E0 LDR X21, [X21 + 0xAE0]
	0x036024E4 BL 0x1C16F10
	0x036024E8 LDR X2, [X24]
	0x036024EC MOV X1, X31
	0x036024F0 MOV X3, X31
	0x036024F4 MOV X20, X0
	0x036024F8 BL 0x27027B8
	0x036024FC ADRP X8, 0xAF1000
	0x03602500 LDR X0, [X21]
	0x03602504 LDR X8, [X8 + 0x838]
	0x03602508 LDR X5, [X23]
	0x0360250C MOVZ W2, 0x1
	0x03602510 MOVZ W3, 0x1
	0x03602514 LDR X4, [X8]
	0x03602518 MOV X1, X20
	0x0360251C BL 0x21EBD64
	0x03602520 MOV X20, X0
	0x03602524 CBZ X0, 0x360253C
	0x03602528 LDR X8, [X19]
	0x0360252C MOV X0, X20
	0x03602530 LDR X1, [X8 + 0x40]
	0x03602534 BL 0x1C16E00
	0x03602538 CBZ X0, 0x36030E0
	0x0360253C LDR W8, [X22]
	0x03602540 ADRP X25, 0xB38000
	0x03602544 LDR X25, [X25 + 0x848]
	0x03602548 CMP W8, 0x1A
	0x0360254C B.LS 0x36030D8
	0x03602550 ADRP X8, 0xB38000
	0x03602554 LDR X8, [X8 + 0x8D0]
	0x03602558 STR X20, [X19 + 0xF0]
	0x0360255C ADRP X20, 0xB38000
	0x03602560 ADRP X21, 0xB38000
	0x03602564 LDR X0, [X8]
	0x03602568 ADRP X23, 0xB38000
	0x0360256C LDR X20, [X20 + 0x898]
	0x03602570 LDR X21, [X21 + 0xA50]
	0x03602574 LDR X23, [X23 + 0x820]
	0x03602578 BL 0x1C16F10
	0x0360257C LDR X2, [X20]
	0x03602580 MOV X1, X31
	0x03602584 MOV X3, X31
	0x03602588 MOV X20, X0
	0x0360258C BL 0x270259C
	0x03602590 LDR X0, [X21]
	0x03602594 LDR X4, [X23]
	0x03602598 MOVZ W2, 0x1
	0x0360259C MOV X1, X20
	0x036025A0 MOV X3, X31
	0x036025A4 BL 0x21EBF7C
	0x036025A8 MOV X20, X0
	0x036025AC CBZ X0, 0x36025C4
	0x036025B0 LDR X8, [X19]
	0x036025B4 MOV X0, X20
	0x036025B8 LDR X1, [X8 + 0x40]
	0x036025BC BL 0x1C16E00
	0x036025C0 CBZ X0, 0x36030E0
	0x036025C4 LDR W8, [X22]
	0x036025C8 CMP W8, 0x1B
	0x036025CC B.LS 0x36030D8
	0x036025D0 STR X20, [X19 + 0xF8]
	0x036025D4 LDR X0, [X27]
	0x036025D8 ADRP X21, 0xB38000
	0x036025DC LDR X21, [X21 + 0xAB8]
	0x036025E0 BL 0x1C16F10
	0x036025E4 LDR X2, [X29]
	0x036025E8 MOV X1, X31
	0x036025EC MOV X3, X31
	0x036025F0 MOV X20, X0
	0x036025F4 BL 0x2702380
	0x036025F8 LDR X8, [X28]
	0x036025FC LDR X0, [X21]
	0x03602600 LDR X4, [X26]
	0x03602604 MOVZ W2, 0x1
	0x03602608 LDR X8, [X8 + 0xB8]
	0x0360260C MOV X1, X20
	0x03602610 LDR X3, [X8]
	0x03602614 BL 0x21EBDF0
	0x03602618 MOV X20, X0
	0x0360261C CBZ X0, 0x3602634
	0x03602620 LDR X8, [X19]
	0x03602624 MOV X0, X20
	0x03602628 LDR X1, [X8 + 0x40]
	0x0360262C BL 0x1C16E00
	0x03602630 CBZ X0, 0x36030E0
	0x03602634 LDR W8, [X22]
	0x03602638 CMP W8, 0x1C
	0x0360263C B.LS 0x36030D8
	0x03602640 STR X20, [X19 + 0x100]
	0x03602644 LDR X0, [X27]
	0x03602648 ADRP X21, 0xB38000
	0x0360264C LDR X21, [X21 + 0xA88]
	0x03602650 BL 0x1C16F10
	0x03602654 LDR X2, [X29]
	0x03602658 MOV X1, X31
	0x0360265C MOV X3, X31
	0x03602660 MOV X20, X0
	0x03602664 BL 0x2702380
	0x03602668 LDR X8, [X28]
	0x0360266C LDR X0, [X21]
	0x03602670 LDR X4, [X26]
	0x03602674 MOVZ W2, 0x4
	0x03602678 LDR X8, [X8 + 0xB8]
	0x0360267C MOV X1, X20
	0x03602680 LDR X3, [X8]
	0x03602684 BL 0x21EBDF0
	0x03602688 MOV X20, X0
	0x0360268C CBZ X0, 0x36026A4
	0x03602690 LDR X8, [X19]
	0x03602694 MOV X0, X20
	0x03602698 LDR X1, [X8 + 0x40]
	0x0360269C BL 0x1C16E00
	0x036026A0 CBZ X0, 0x36030E0
	0x036026A4 LDR W8, [X22]
	0x036026A8 ADRP X24, 0xAF1000
	0x036026AC ADRP X27, 0xB38000
	0x036026B0 ADRP X28, 0xB38000
	0x036026B4 LDR X24, [X24 + 0x838]
	0x036026B8 LDR X27, [X27 + 0x9B0]
	0x036026BC LDR X28, [X28 + 0x908]
	0x036026C0 CMP W8, 0x1D
	0x036026C4 B.LS 0x36030D8
	0x036026C8 STR X20, [X19 + 0x108]
	0x036026CC LDR X0, [X28]
	0x036026D0 ADRP X21, 0xB38000
	0x036026D4 LDR X21, [X21 + 0x9E0]
	0x036026D8 BL 0x1C16F10
	0x036026DC LDR X2, [X27]
	0x036026E0 MOV X1, X31
	0x036026E4 MOV X3, X31
	0x036026E8 MOV X20, X0
	0x036026EC BL 0x270259C
	0x036026F0 LDR X0, [X21]
	0x036026F4 LDR X4, [X25]
	0x036026F8 MOVZ W2, 0x2
	0x036026FC MOV X1, X20
	0x03602700 MOV X3, X31
	0x03602704 BL 0x21EBF7C
	0x03602708 MOV X20, X0
	0x0360270C CBZ X0, 0x3602724
	0x03602710 LDR X8, [X19]
	0x03602714 MOV X0, X20
	0x03602718 LDR X1, [X8 + 0x40]
	0x0360271C BL 0x1C16E00
	0x03602720 CBZ X0, 0x36030E0
	0x03602724 LDR W8, [X22]
	0x03602728 CMP W8, 0x1E
	0x0360272C B.LS 0x36030D8
	0x03602730 ADRP X8, 0xB38000
	0x03602734 LDR X8, [X8 + 0x940]
	0x03602738 STR X20, [X19 + 0x110]
	0x0360273C ADRP X20, 0xB38000
	0x03602740 ADRP X21, 0xB38000
	0x03602744 LDR X0, [X8]
	0x03602748 ADRP X23, 0xB38000
	0x0360274C LDR X20, [X20 + 0x858]
	0x03602750 LDR X21, [X21 + 0xA20]
	0x03602754 LDR X23, [X23 + 0x808]
	0x03602758 BL 0x1C16F10
	0x0360275C LDR X2, [X20]
	0x03602760 MOV X1, X31
	0x03602764 MOV X3, X31
	0x03602768 MOV X20, X0
	0x0360276C BL 0x2702434
	0x03602770 LDR X0, [X21]
	0x03602774 LDR X4, [X23]
	0x03602778 MOVZ W2, 0x1
	0x0360277C MOV X1, X20
	0x03602780 MOV X3, X31
	0x03602784 BL 0x21EBE74
	0x03602788 MOV X20, X0
	0x0360278C CBZ X0, 0x36027A4
	0x03602790 LDR X8, [X19]
	0x03602794 MOV X0, X20
	0x03602798 LDR X1, [X8 + 0x40]
	0x0360279C BL 0x1C16E00
	0x036027A0 CBZ X0, 0x36030E0
	0x036027A4 LDR W8, [X22]
	0x036027A8 CMP W8, 0x1F
	0x036027AC B.LS 0x36030D8
	0x036027B0 ADRP X8, 0xB38000
	0x036027B4 LDR X8, [X8 + 0x970]
	0x036027B8 STR X20, [X19 + 0x118]
	0x036027BC ADRP X20, 0xB38000
	0x036027C0 ADRP X21, 0xB38000
	0x036027C4 LDR X0, [X8]
	0x036027C8 ADRP X23, 0xB38000
	0x036027CC LDR X20, [X20 + 0x878]
	0x036027D0 LDR X21, [X21 + 0x9F8]
	0x036027D4 LDR X23, [X23 + 0x780]
	0x036027D8 BL 0x1C16F10
	0x036027DC LDR X2, [X20]
	0x036027E0 MOV X1, X31
	0x036027E4 MOV X3, X31
	0x036027E8 MOV X20, X0
	0x036027EC BL 0x27027B8
	0x036027F0 LDR X0, [X21]
	0x036027F4 LDR X4, [X24]
	0x036027F8 LDR X5, [X23]
	0x036027FC MOVZ W2, 0x3
	0x03602800 MOVZ W3, 0x1
	0x03602804 MOV X1, X20
	0x03602808 BL 0x21EBD64
	0x0360280C MOV X20, X0
	0x03602810 CBZ X0, 0x3602828
	0x03602814 LDR X8, [X19]
	0x03602818 MOV X0, X20
	0x0360281C LDR X1, [X8 + 0x40]
	0x03602820 BL 0x1C16E00
	0x03602824 CBZ X0, 0x36030E0
	0x03602828 LDR W8, [X22]
	0x0360282C CMP W8, 0x20
	0x03602830 B.LS 0x36030D8
	0x03602834 ADRP X26, 0xB38000
	0x03602838 LDR X26, [X26 + 0x978]
	0x0360283C STR X20, [X19 + 0x120]
	0x03602840 ADRP X29, 0xB38000
	0x03602844 ADRP X21, 0xB38000
	0x03602848 LDR X0, [X26]
	0x0360284C ADRP X23, 0xB38000
	0x03602850 LDR X29, [X29 + 0x708]
	0x03602854 LDR X21, [X21 + 0xAC8]
	0x03602858 LDR X23, [X23 + 0x770]
	0x0360285C BL 0x1C16F10
	0x03602860 LDR X2, [X29]
	0x03602864 MOV X1, X31
	0x03602868 MOV X3, X31
	0x0360286C MOV X20, X0
	0x03602870 BL 0x27027B8
	0x03602874 LDR X0, [X21]
	0x03602878 LDR X4, [X24]
	0x0360287C LDR X5, [X23]
	0x03602880 MOVZ W2, 0x2
	0x03602884 MOVZ W3, 0x1
	0x03602888 MOV X1, X20
	0x0360288C BL 0x21EBD64
	0x03602890 MOV X20, X0
	0x03602894 CBZ X0, 0x36028AC
	0x03602898 LDR X8, [X19]
	0x0360289C MOV X0, X20
	0x036028A0 LDR X1, [X8 + 0x40]
	0x036028A4 BL 0x1C16E00
	0x036028A8 CBZ X0, 0x36030E0
	0x036028AC LDR W8, [X22]
	0x036028B0 CMP W8, 0x21
	0x036028B4 B.LS 0x36030D8
	0x036028B8 STR X20, [X19 + 0x128]
	0x036028BC ADRP X8, 0xB38000
	0x036028C0 LDR X8, [X8 + 0x920]
	0x036028C4 ADRP X21, 0xB38000
	0x036028C8 LDR X0, [X8]
	0x036028CC LDR X21, [X21 + 0xAB0]
	0x036028D0 BL 0x1C16F10
	0x036028D4 ADRP X8, 0xB38000
	0x036028D8 LDR X8, [X8 + 0x700]
	0x036028DC MOV X1, X31
	0x036028E0 MOV X3, X31
	0x036028E4 MOV X20, X0
	0x036028E8 LDR X2, [X8]
	0x036028EC BL 0x270259C
	0x036028F0 ADRP X8, 0xB38000
	0x036028F4 LDR X0, [X21]
	0x036028F8 LDR X8, [X8 + 0x7D0]
	0x036028FC MOVZ W2, 0x1
	0x03602900 MOV X1, X20
	0x03602904 MOV X3, X31
	0x03602908 LDR X4, [X8]
	0x0360290C BL 0x21EBF7C
	0x03602910 MOV X20, X0
	0x03602914 CBZ X0, 0x360292C
	0x03602918 LDR X8, [X19]
	0x0360291C MOV X0, X20
	0x03602920 LDR X1, [X8 + 0x40]
	0x03602924 BL 0x1C16E00
	0x03602928 CBZ X0, 0x36030E0
	0x0360292C LDR W8, [X22]
	0x03602930 CMP W8, 0x22
	0x03602934 B.LS 0x36030D8
	0x03602938 ADRP X8, 0xB38000
	0x0360293C LDR X8, [X8 + 0x918]
	0x03602940 STR X20, [X19 + 0x130]
	0x03602944 ADRP X20, 0xB38000
	0x03602948 ADRP X21, 0xB38000
	0x0360294C LDR X0, [X8]
	0x03602950 ADRP X23, 0xB38000
	0x03602954 LDR X20, [X20 + 0x8A0]
	0x03602958 LDR X21, [X21 + 0xAE8]
	0x0360295C LDR X23, [X23 + 0x828]
	0x03602960 BL 0x1C16F10
	0x03602964 LDR X2, [X20]
	0x03602968 MOV X1, X31
	0x0360296C MOV X3, X31
	0x03602970 MOV X20, X0
	0x03602974 BL 0x270259C
	0x03602978 LDR X0, [X21]
	0x0360297C LDR X4, [X23]
	0x03602980 MOVZ W2, 0x1
	0x03602984 MOV X1, X20
	0x03602988 MOV X3, X31
	0x0360298C BL 0x21EBF7C
	0x03602990 MOV X20, X0
	0x03602994 CBZ X0, 0x36029AC
	0x03602998 LDR X8, [X19]
	0x0360299C MOV X0, X20
	0x036029A0 LDR X1, [X8 + 0x40]
	0x036029A4 BL 0x1C16E00
	0x036029A8 CBZ X0, 0x36030E0
	0x036029AC LDR W8, [X22]
	0x036029B0 CMP W8, 0x23
	0x036029B4 B.LS 0x36030D8
	0x036029B8 STR X20, [X19 + 0x138]
	0x036029BC LDR X0, [X28]
	0x036029C0 ADRP X21, 0xB38000
	0x036029C4 LDR X21, [X21 + 0x9F0]
	0x036029C8 BL 0x1C16F10
	0x036029CC LDR X2, [X27]
	0x036029D0 MOV X1, X31
	0x036029D4 MOV X3, X31
	0x036029D8 MOV X20, X0
	0x036029DC BL 0x270259C
	0x036029E0 LDR X0, [X21]
	0x036029E4 LDR X4, [X25]
	0x036029E8 MOVZ W2, 0x1
	0x036029EC MOV X1, X20
	0x036029F0 MOV X3, X31
	0x036029F4 BL 0x21EBF7C
	0x036029F8 MOV X20, X0
	0x036029FC CBZ X0, 0x3602A14
	0x03602A00 LDR X8, [X19]
	0x03602A04 MOV X0, X20
	0x03602A08 LDR X1, [X8 + 0x40]
	0x03602A0C BL 0x1C16E00
	0x03602A10 CBZ X0, 0x36030E0
	0x03602A14 LDR W8, [X22]
	0x03602A18 CMP W8, 0x24
	0x03602A1C B.LS 0x36030D8
	0x03602A20 ADRP X8, 0xB38000
	0x03602A24 LDR X8, [X8 + 0x938]
	0x03602A28 STR X20, [X19 + 0x140]
	0x03602A2C ADRP X20, 0xB38000
	0x03602A30 ADRP X21, 0xB38000
	0x03602A34 LDR X0, [X8]
	0x03602A38 ADRP X23, 0xB38000
	0x03602A3C LDR X20, [X20 + 0x8A8]
	0x03602A40 LDR X21, [X21 + 0x9D0]
	0x03602A44 LDR X23, [X23 + 0x830]
	0x03602A48 BL 0x1C16F10
	0x03602A4C LDR X2, [X20]
	0x03602A50 MOV X1, X31
	0x03602A54 MOV X3, X31
	0x03602A58 MOV X20, X0
	0x03602A5C BL 0x270259C
	0x03602A60 LDR X0, [X21]
	0x03602A64 LDR X4, [X23]
	0x03602A68 MOVZ W2, 0x2
	0x03602A6C MOV X1, X20
	0x03602A70 MOV X3, X31
	0x03602A74 BL 0x21EBF7C
	0x03602A78 MOV X20, X0
	0x03602A7C CBZ X0, 0x3602A94
	0x03602A80 LDR X8, [X19]
	0x03602A84 MOV X0, X20
	0x03602A88 LDR X1, [X8 + 0x40]
	0x03602A8C BL 0x1C16E00
	0x03602A90 CBZ X0, 0x36030E0
	0x03602A94 LDR W8, [X22]
	0x03602A98 CMP W8, 0x25
	0x03602A9C B.LS 0x36030D8
	0x03602AA0 ADRP X25, 0xB38000
	0x03602AA4 LDR X25, [X25 + 0x980]
	0x03602AA8 ADRP X24, 0xB38000
	0x03602AAC LDR X24, [X24 + 0x890]
	0x03602AB0 STR X20, [X19 + 0x148]
	0x03602AB4 LDR X0, [X25]
	0x03602AB8 ADRP X21, 0xB38000
	0x03602ABC ADRP X23, 0xAF1000
	0x03602AC0 ADRP X27, 0xB38000
	0x03602AC4 LDR X21, [X21 + 0x9D8]
	0x03602AC8 LDR X23, [X23 + 0xDD8]
	0x03602ACC LDR X27, [X27 + 0x798]
	0x03602AD0 BL 0x1C16F10
	0x03602AD4 LDR X2, [X24]
	0x03602AD8 MOV X1, X31
	0x03602ADC MOV X3, X31
	0x03602AE0 MOV X20, X0
	0x03602AE4 BL 0x27027B8
	0x03602AE8 LDR X0, [X21]
	0x03602AEC LDR X4, [X23]
	0x03602AF0 LDR X5, [X27]
	0x03602AF4 MOVZ W2, 0x2
	0x03602AF8 MOVZ W3, 0x1
	0x03602AFC MOV X1, X20
	0x03602B00 BL 0x21EBD64
	0x03602B04 MOV X20, X0
	0x03602B08 CBZ X0, 0x3602B20
	0x03602B0C LDR X8, [X19]
	0x03602B10 MOV X0, X20
	0x03602B14 LDR X1, [X8 + 0x40]
	0x03602B18 BL 0x1C16E00
	0x03602B1C CBZ X0, 0x36030E0
	0x03602B20 LDR W8, [X22]
	0x03602B24 CMP W8, 0x26
	0x03602B28 B.LS 0x36030D8
	0x03602B2C ADRP X8, 0xB38000
	0x03602B30 LDR X8, [X8 + 0x968]
	0x03602B34 STR X20, [X19 + 0x150]
	0x03602B38 ADRP X20, 0xB38000
	0x03602B3C ADRP X21, 0xB38000
	0x03602B40 LDR X0, [X8]
	0x03602B44 ADRP X28, 0xB38000
	0x03602B48 LDR X20, [X20 + 0x8C8]
	0x03602B4C LDR X21, [X21 + 0xA40]
	0x03602B50 LDR X28, [X28 + 0x7B8]
	0x03602B54 BL 0x1C16F10
	0x03602B58 LDR X2, [X20]
	0x03602B5C MOV X1, X31
	0x03602B60 MOV X3, X31
	0x03602B64 MOV X20, X0
	0x03602B68 BL 0x27027B8
	0x03602B6C ADRP X8, 0xAF1000
	0x03602B70 LDR X0, [X21]
	0x03602B74 LDR X8, [X8 + 0x838]
	0x03602B78 LDR X5, [X28]
	0x03602B7C MOVZ W2, 0x1
	0x03602B80 MOV X1, X20
	0x03602B84 LDR X4, [X8]
	0x03602B88 MOV W3, W31
	0x03602B8C BL 0x21EBD64
	0x03602B90 MOV X20, X0
	0x03602B94 CBZ X0, 0x3602BAC
	0x03602B98 LDR X8, [X19]
	0x03602B9C MOV X0, X20
	0x03602BA0 LDR X1, [X8 + 0x40]
	0x03602BA4 BL 0x1C16E00
	0x03602BA8 CBZ X0, 0x36030E0
	0x03602BAC LDR W8, [X22]
	0x03602BB0 CMP W8, 0x27
	0x03602BB4 B.LS 0x36030D8
	0x03602BB8 STR X20, [X19 + 0x158]
	0x03602BBC ADRP X8, 0xB38000
	0x03602BC0 LDR X8, [X8 + 0x960]
	0x03602BC4 ADRP X21, 0xB38000
	0x03602BC8 LDR X0, [X8]
	0x03602BCC LDR X21, [X21 + 0xAD0]
	0x03602BD0 BL 0x1C16F10
	0x03602BD4 ADRP X8, 0xB38000
	0x03602BD8 LDR X8, [X8 + 0x718]
	0x03602BDC MOV X1, X31
	0x03602BE0 MOV X3, X31
	0x03602BE4 MOV X20, X0
	0x03602BE8 LDR X2, [X8]
	0x03602BEC BL 0x27027B8
	0x03602BF0 ADRP X8, 0xAF1000
	0x03602BF4 LDR X0, [X21]
	0x03602BF8 LDR X8, [X8 + 0x838]
	0x03602BFC MOVZ W2, 0x3
	0x03602C00 MOVZ W3, 0x1
	0x03602C04 MOV X1, X20
	0x03602C08 LDR X4, [X8]
	0x03602C0C ADRP X8, 0xB38000
	0x03602C10 LDR X8, [X8 + 0x7A8]
	0x03602C14 LDR X5, [X8]
	0x03602C18 BL 0x21EBD64
	0x03602C1C MOV X20, X0
	0x03602C20 CBZ X0, 0x3602C38
	0x03602C24 LDR X8, [X19]
	0x03602C28 MOV X0, X20
	0x03602C2C LDR X1, [X8 + 0x40]
	0x03602C30 BL 0x1C16E00
	0x03602C34 CBZ X0, 0x36030E0
	0x03602C38 LDR W8, [X22]
	0x03602C3C CMP W8, 0x28
	0x03602C40 B.LS 0x36030D8
	0x03602C44 ADRP X8, 0xB38000
	0x03602C48 LDR X8, [X8 + 0x958]
	0x03602C4C STR X20, [X19 + 0x160]
	0x03602C50 ADRP X20, 0xB38000
	0x03602C54 ADRP X21, 0xB38000
	0x03602C58 LDR X0, [X8]
	0x03602C5C ADRP X28, 0xB38000
	0x03602C60 LDR X20, [X20 + 0x8C0]
	0x03602C64 LDR X21, [X21 + 0x190]
	0x03602C68 LDR X28, [X28 + 0x7B0]
	0x03602C6C BL 0x1C16F10
	0x03602C70 LDR X2, [X20]
	0x03602C74 MOV X1, X31
	0x03602C78 MOV X3, X31
	0x03602C7C MOV X20, X0
	0x03602C80 BL 0x27027B8
	0x03602C84 ADRP X8, 0xAF1000
	0x03602C88 LDR X0, [X21]
	0x03602C8C LDR X8, [X8 + 0x838]
	0x03602C90 LDR X5, [X28]
	0x03602C94 MOVZ W2, 0x3
	0x03602C98 MOVZ W3, 0x1
	0x03602C9C LDR X4, [X8]
	0x03602CA0 MOV X1, X20
	0x03602CA4 BL 0x21EBD64
	0x03602CA8 MOV X20, X0
	0x03602CAC CBZ X0, 0x3602CC4
	0x03602CB0 LDR X8, [X19]
	0x03602CB4 MOV X0, X20
	0x03602CB8 LDR X1, [X8 + 0x40]
	0x03602CBC BL 0x1C16E00
	0x03602CC0 CBZ X0, 0x36030E0
	0x03602CC4 LDR W8, [X22]
	0x03602CC8 CMP W8, 0x29
	0x03602CCC B.LS 0x36030D8
	0x03602CD0 ADRP X8, 0xB38000
	0x03602CD4 LDR X8, [X8 + 0x9A0]
	0x03602CD8 STR X20, [X19 + 0x168]
	0x03602CDC ADRP X20, 0xB38000
	0x03602CE0 ADRP X21, 0xB38000
	0x03602CE4 LDR X0, [X8]
	0x03602CE8 ADRP X28, 0xB38000
	0x03602CEC LDR X20, [X20 + 0x888]
	0x03602CF0 LDR X21, [X21 + 0xA08]
	0x03602CF4 LDR X28, [X28 + 0x790]
	0x03602CF8 BL 0x1C16F10
	0x03602CFC LDR X2, [X20]
	0x03602D00 MOV X1, X31
	0x03602D04 MOV X3, X31
	0x03602D08 MOV X20, X0
	0x03602D0C BL 0x27027B8
	0x03602D10 ADRP X8, 0xAF1000
	0x03602D14 LDR X0, [X21]
	0x03602D18 LDR X8, [X8 + 0x838]
	0x03602D1C LDR X5, [X28]
	0x03602D20 MOVZ W2, 0x3
	0x03602D24 MOVZ W3, 0x1
	0x03602D28 LDR X4, [X8]
	0x03602D2C MOV X1, X20
	0x03602D30 BL 0x21EBD64
	0x03602D34 MOV X20, X0
	0x03602D38 CBZ X0, 0x3602D50
	0x03602D3C LDR X8, [X19]
	0x03602D40 MOV X0, X20
	0x03602D44 LDR X1, [X8 + 0x40]
	0x03602D48 BL 0x1C16E00
	0x03602D4C CBZ X0, 0x36030E0
	0x03602D50 LDR W8, [X22]
	0x03602D54 CMP W8, 0x2A
	0x03602D58 B.LS 0x36030D8
	0x03602D5C STR X20, [X19 + 0x170]
	0x03602D60 LDR X0, [X25]
	0x03602D64 ADRP X21, 0xB38000
	0x03602D68 LDR X21, [X21 + 0xA30]
	0x03602D6C BL 0x1C16F10
	0x03602D70 LDR X2, [X24]
	0x03602D74 MOV X1, X31
	0x03602D78 MOV X3, X31
	0x03602D7C MOV X20, X0
	0x03602D80 BL 0x27027B8
	0x03602D84 LDR X0, [X21]
	0x03602D88 LDR X4, [X23]
	0x03602D8C LDR X5, [X27]
	0x03602D90 MOVZ W2, 0x1
	0x03602D94 MOVZ W3, 0x1
	0x03602D98 MOV X1, X20
	0x03602D9C BL 0x21EBD64
	0x03602DA0 ADRP X24, 0xAF1000
	0x03602DA4 LDR X24, [X24 + 0x838]
	0x03602DA8 MOV X20, X0
	0x03602DAC CBZ X0, 0x3602DC4
	0x03602DB0 LDR X8, [X19]
	0x03602DB4 MOV X0, X20
	0x03602DB8 LDR X1, [X8 + 0x40]
	0x03602DBC BL 0x1C16E00
	0x03602DC0 CBZ X0, 0x36030E0
	0x03602DC4 LDR W8, [X22]
	0x03602DC8 ADRP X23, 0xB38000
	0x03602DCC LDR X23, [X23 + 0x7A8]
	0x03602DD0 CMP W8, 0x2B
	0x03602DD4 B.LS 0x36030D8
	0x03602DD8 STR X20, [X19 + 0x178]
	0x03602DDC ADRP X8, 0xB38000
	0x03602DE0 LDR X8, [X8 + 0x960]
	0x03602DE4 ADRP X21, 0xB38000
	0x03602DE8 LDR X0, [X8]
	0x03602DEC LDR X21, [X21 + 0xA48]
	0x03602DF0 BL 0x1C16F10
	0x03602DF4 ADRP X8, 0xB38000
	0x03602DF8 LDR X8, [X8 + 0x718]
	0x03602DFC MOV X1, X31
	0x03602E00 MOV X3, X31
	0x03602E04 MOV X20, X0
	0x03602E08 LDR X2, [X8]
	0x03602E0C BL 0x27027B8
	0x03602E10 LDR X0, [X21]
	0x03602E14 LDR X4, [X24]
	0x03602E18 LDR X5, [X23]
	0x03602E1C MOVZ W2, 0x2
	0x03602E20 MOVZ W3, 0x1
	0x03602E24 MOV X1, X20
	0x03602E28 BL 0x21EBD64
	0x03602E2C MOV X20, X0
	0x03602E30 CBZ X0, 0x3602E48
	0x03602E34 LDR X8, [X19]
	0x03602E38 MOV X0, X20
	0x03602E3C LDR X1, [X8 + 0x40]
	0x03602E40 BL 0x1C16E00
	0x03602E44 CBZ X0, 0x36030E0
	0x03602E48 LDR W8, [X22]
	0x03602E4C CMP W8, 0x2C
	0x03602E50 B.LS 0x36030D8
	0x03602E54 ADRP X8, 0xB38000
	0x03602E58 LDR X8, [X8 + 0x988]
	0x03602E5C STR X20, [X19 + 0x180]
	0x03602E60 ADRP X20, 0xB38000
	0x03602E64 ADRP X21, 0xB38000
	0x03602E68 LDR X0, [X8]
	0x03602E6C ADRP X23, 0xB38000
	0x03602E70 LDR X20, [X20 + 0x9B8]
	0x03602E74 LDR X21, [X21 + 0xAF0]
	0x03602E78 LDR X23, [X23 + 0x7C0]
	0x03602E7C BL 0x1C16F10
	0x03602E80 LDR X2, [X20]
	0x03602E84 MOV X1, X31
	0x03602E88 MOV X3, X31
	0x03602E8C MOV X20, X0
	0x03602E90 BL 0x27027B8
	0x03602E94 LDR X0, [X21]
	0x03602E98 LDR X4, [X24]
	0x03602E9C LDR X5, [X23]
	0x03602EA0 MOVZ W2, 0x3
	0x03602EA4 MOVZ W3, 0x1
	0x03602EA8 MOV X1, X20
	0x03602EAC BL 0x21EBD64
	0x03602EB0 MOV X20, X0
	0x03602EB4 CBZ X0, 0x3602ECC
	0x03602EB8 LDR X8, [X19]
	0x03602EBC MOV X0, X20
	0x03602EC0 LDR X1, [X8 + 0x40]
	0x03602EC4 BL 0x1C16E00
	0x03602EC8 CBZ X0, 0x36030E0
	0x03602ECC LDR W8, [X22]
	0x03602ED0 CMP W8, 0x2D
	0x03602ED4 B.LS 0x36030D8
	0x03602ED8 ADRP X8, 0xB38000
	0x03602EDC LDR X8, [X8 + 0x950]
	0x03602EE0 STR X20, [X19 + 0x188]
	0x03602EE4 ADRP X20, 0xB38000
	0x03602EE8 ADRP X21, 0xAFA000
	0x03602EEC LDR X0, [X8]
	0x03602EF0 ADRP X23, 0xB38000
	0x03602EF4 LDR X20, [X20 + 0x9C0]
	0x03602EF8 LDR X21, [X21 + 0xD70]
	0x03602EFC LDR X23, [X23 + 0x7C8]
	0x03602F00 BL 0x1C16F10
	0x03602F04 LDR X2, [X20]
	0x03602F08 MOV X1, X31
	0x03602F0C MOV X3, X31
	0x03602F10 MOV X20, X0
	0x03602F14 BL 0x27027B8
	0x03602F18 LDR X0, [X21]
	0x03602F1C LDR X4, [X24]
	0x03602F20 LDR X5, [X23]
	0x03602F24 MOVZ W2, 0x3
	0x03602F28 MOVZ W3, 0x1
	0x03602F2C MOV X1, X20
	0x03602F30 BL 0x21EBD64
	0x03602F34 MOV X20, X0
	0x03602F38 CBZ X0, 0x3602F50
	0x03602F3C LDR X8, [X19]
	0x03602F40 MOV X0, X20
	0x03602F44 LDR X1, [X8 + 0x40]
	0x03602F48 BL 0x1C16E00
	0x03602F4C CBZ X0, 0x36030E0
	0x03602F50 LDR W8, [X22]
	0x03602F54 ADRP X23, 0xB38000
	0x03602F58 LDR X23, [X23 + 0x770]
	0x03602F5C CMP W8, 0x2E
	0x03602F60 B.LS 0x36030D8
	0x03602F64 STR X20, [X19 + 0x190]
	0x03602F68 LDR X0, [X26]
	0x03602F6C ADRP X21, 0xB38000
	0x03602F70 LDR X21, [X21 + 0xA80]
	0x03602F74 BL 0x1C16F10
	0x03602F78 LDR X2, [X29]
	0x03602F7C MOV X1, X31
	0x03602F80 MOV X3, X31
	0x03602F84 MOV X20, X0
	0x03602F88 BL 0x27027B8
	0x03602F8C LDR X0, [X21]
	0x03602F90 LDR X4, [X24]
	0x03602F94 LDR X5, [X23]
	0x03602F98 MOVZ W2, 0x2
	0x03602F9C MOVZ W3, 0x1
	0x03602FA0 MOV X1, X20
	0x03602FA4 BL 0x21EBD64
	0x03602FA8 MOV X20, X0
	0x03602FAC CBZ X0, 0x3602FC4
	0x03602FB0 LDR X8, [X19]
	0x03602FB4 MOV X0, X20
	0x03602FB8 LDR X1, [X8 + 0x40]
	0x03602FBC BL 0x1C16E00
	0x03602FC0 CBZ X0, 0x36030E0
	0x03602FC4 LDR W8, [X22]
	0x03602FC8 CMP W8, 0x2F
	0x03602FCC B.LS 0x36030D8
	0x03602FD0 ADRP X21, 0xAFE000
	0x03602FD4 LDR X21, [X21 + 0x2F0]
	0x03602FD8 STR X20, [X19 + 0x198]
	0x03602FDC LDR X0, [X21]
	0x03602FE0 LDR W8, [X0 + 0xE0]
	0x03602FE4 CBNZ W8, 0x3602FEC
	0x03602FE8 BL 0x1C16DFC
	0x03602FEC ADRP X20, 0xDDA000
	0x03602FF0 LDRB W8, [X20 + 0x926]
	0x03602FF4 CBNZ W8, 0x360300C
	0x03602FF8 ADRP X0, 0xAFE000
	0x03602FFC LDR X0, [X0 + 0x2F0]
	0x03603000 BL 0x1C16CF4
	0x03603004 MOVZ W8, 0x1
	0x03603008 STRB W8, [X20 + 0x926]
	0x0360300C LDR X0, [X21]
	0x03603010 ADRP X25, 0xB37000
	0x03603014 ADRP X24, 0xB37000
	0x03603018 ADRP X23, 0xB18000
	0x0360301C LDR W8, [X0 + 0xE0]
	0x03603020 LDR X25, [X25 + 0x750]
	0x03603024 LDR X24, [X24 + 0x748]
	0x03603028 LDR X23, [X23 + 0xB50]
	0x0360302C CBNZ W8, 0x3603038
	0x03603030 BL 0x1C16DFC
	0x03603034 LDR X0, [X21]
	0x03603038 LDR X8, [X0 + 0xB8]
	0x0360303C LDR X0, [X25]
	0x03603040 LDR X20, [X8 + 0x18]
	0x03603044 BL 0x1C16F10
	0x03603048 LDR X2, [X24]
	0x0360304C MOV X1, X20
	0x03603050 MOV X21, X0
	0x03603054 BL 0x2AA4830
	0x03603058 LDR X8, [X23]
	0x0360305C LDR X8, [X8 + 0xB8]
	0x03603060 STR X21, [X8]
	0x03603064 LDR X8, [X22]
	0x03603068 CMP W8, 0x1
	0x0360306C B.LT 0x36030BC
	0x03603070 ADRP X21, 0xB37000
	0x03603074 LDR X21, [X21 + 0x740]
	0x03603078 MOV X20, X31
	0x0360307C ADD X19, X19, 0x20
	0x03603080 CMP W20, W8
	0x03603084 B.CS 0x36030D8
	0x03603088 LDR X2, [X19, X20, LSL #3]
	0x0360308C CBZ X2, 0x36030DC
	0x03603090 LDR X8, [X23]
	0x03603094 LDR X8, [X8 + 0xB8]
	0x03603098 LDR X0, [X8]
	0x0360309C CBZ X0, 0x36030DC
	0x036030A0 LDR X1, [X2 + 0x18]
	0x036030A4 LDR X3, [X21]
	0x036030A8 BL 0x2AA5098
	0x036030AC LDR X8, [X22]
	0x036030B0 ADD X20, X20, 0x1
	0x036030B4 CMP W20, W8
	0x036030B8 B.LT 0x3603080
	0x036030BC LDP X20, X19, [X31 + 0x50]
	0x036030C0 LDP X22, X21, [X31 + 0x40]
	0x036030C4 LDP X24, X23, [X31 + 0x30]
	0x036030C8 LDP X26, X25, [X31 + 0x20]
	0x036030CC LDP X28, X27, [X31 + 0x10]
	0x036030D0 LDP X29, X30, [X31], #0x60
	0x036030D4 RET
	0x036030D8 BL 0x1C16F28
	0x036030DC BL 0x1C16F20
	0x036030E0 BL 0x1C16F44
	0x036030E4 MOV X1, X31
	0x036030E8 BL 0x1C16DEC
	0x036030EC STR X30, [X31 - 0x30]!
	0x036030F0 STP X22, X21, [X31 + 0x10]
	0x036030F4 STP X20, X19, [X31 + 0x20]
	0x036030F8 ADRP X21, 0xDDD000
	0x036030FC ADRP X20, 0xAFD000
	0x03603100 LDRB W8, [X21 + 0x362]
	0x03603104 LDR X20, [X20 + 0x2F0]
	0x03603108 MOV X19, X0
	0x0360310C TBNZ X8, 0x0, 0x360313C
	0x03603110 ADRP X0, 0xB37000
	0x03603114 LDR X0, [X0 + 0xB00]
	0x03603118 BL 0x1C16CF4
	0x0360311C ADRP X0, 0xB37000
	0x03603120 LDR X0, [X0 + 0xB08]
	0x03603124 BL 0x1C16CF4
	0x03603128 ADRP X0, 0xAFD000
	0x0360312C LDR X0, [X0 + 0x2F0]
	0x03603130 BL 0x1C16CF4
	0x03603134 MOVZ W8, 0x1
	0x03603138 STRB W8, [X21 + 0x362]
	0x0360313C MOV X0, X19
	0x03603140 MOV X1, X31
	0x03603144 BL 0x33BDD8C
	0x03603148 LDR X0, [X20]
	0x0360314C LDR W8, [X0 + 0xE0]
	0x03603150 CBNZ W8, 0x3603158
	0x03603154 BL 0x1C16DFC
	0x03603158 ADRP X21, 0xDD9000
	0x0360315C LDRB W8, [X21 + 0x926]
	0x03603160 CBNZ W8, 0x3603178
	0x03603164 ADRP X0, 0xAFD000
	0x03603168 LDR X0, [X0 + 0x2F0]
	0x0360316C BL 0x1C16CF4
	0x03603170 MOVZ W8, 0x1
	0x03603174 STRB W8, [X21 + 0x926]
	0x03603178 LDR X0, [X20]
	0x0360317C ADRP X22, 0xB37000
	0x03603180 ADRP X21, 0xB37000
	0x03603184 LDR W8, [X0 + 0xE0]
	0x03603188 LDR X22, [X22 + 0xB08]
	0x0360318C LDR X21, [X21 + 0xB00]
	0x03603190 CBNZ W8, 0x360319C
	0x03603194 BL 0x1C16DFC
	0x03603198 LDR X0, [X20]
	0x0360319C LDR X8, [X0 + 0xB8]
	0x036031A0 LDR X0, [X22]
	0x036031A4 LDR X20, [X8 + 0x18]
	0x036031A8 BL 0x1C16F10
	0x036031AC LDR X2, [X21]
	0x036031B0 MOV X1, X20
	0x036031B4 MOV X21, X0
	0x036031B8 BL 0x2AA4830
	0x036031BC STR X21, [X19 + 0x10]
	0x036031C0 LDP X20, X19, [X31 + 0x20]
	0x036031C4 LDP X22, X21, [X31 + 0x10]
	0x036031C8 LDR X30, [X31], #0x30
	0x036031CC RET
	0x036031D0 STP X30, X23, [X31 - 0x30]!
	0x036031D4 STP X22, X21, [X31 + 0x10]
	0x036031D8 STP X20, X19, [X31 + 0x20]
	0x036031DC ADRP X22, 0xDDD000
	0x036031E0 ADRP X23, 0xAF0000
	0x036031E4 LDRB W8, [X22 + 0x363]
	0x036031E8 LDR X23, [X23 + 0xAC8]
	0x036031EC MOV X20, X2
	0x036031F0 MOV X19, X1
	0x036031F4 MOV X21, X0
	0x036031F8 TBNZ X8, 0x0, 0x3603210
	0x036031FC ADRP X0, 0xAF0000
	0x03603200 LDR X0, [X0 + 0xAC8]
	0x03603204 BL 0x1C16CF4
	0x03603208 MOVZ W8, 0x1
	0x0360320C STRB W8, [X22 + 0x363]
	0x03603210 LDR X0, [X23]
	0x03603214 MOVZ W1, 0x1
	0x03603218 BL 0x1C16D6C
	0x0360321C CBZ X0, 0x3603248
	0x03603220 LDR W8, [X0 + 0x18]
	0x03603224 MOV X2, X0
	0x03603228 CBZ W8, 0x360324C
	0x0360322C STR X20, [X2 + 0x20]
	0x03603230 MOV X0, X21
	0x03603234 MOV X1, X19
	0x03603238 LDP X20, X19, [X31 + 0x20]
	0x0360323C LDP X22, X21, [X31 + 0x10]
	0x03603240 LDP X30, X23, [X31], #0x30
	0x03603244 B 0x3603250
	0x03603248 BL 0x1C16F20
	0x0360324C BL 0x1C16F28
	0x03603250 STP X30, X21, [X31 - 0x20]!
	0x03603254 STP X20, X19, [X31 + 0x10]
	0x03603258 CBZ X2, 0x360328C
	0x0360325C MOV X19, X2
	0x03603260 MOV X20, X1
	0x03603264 MOV X21, X0
	0x03603268 BL 0x36032D4
	0x0360326C MOV X1, X20
	0x03603270 MOV X2, X19
	0x03603274 LDP X20, X19, [X31 + 0x10]
	0x03603278 MOV X3, X0
	0x0360327C MOV X0, X21
	0x03603280 MOV W4, W31
	0x03603284 LDP X30, X21, [X31], #0x20
	0x03603288 B 0x3603434
	0x0360328C ADRP X0, 0xAF5000
	0x03603290 LDR X0, [X0 + 0x528]
	0x03603294 BL 0x1C16D08
	0x03603298 BL 0x1C16F10
	0x0360329C MOV X19, X0
	0x036032A0 ADRP X0, 0xAFA000
	0x036032A4 LDR X0, [X0 + 0xED8]
	0x036032A8 BL 0x1C16D08
	0x036032AC MOV X1, X0
	0x036032B0 MOV X0, X19
	0x036032B4 MOV X2, X31
	0x036032B8 BL 0x330E100
	0x036032BC ADRP X0, 0xB37000
	0x036032C0 LDR X0, [X0 + 0xB10]
	0x036032C4 BL 0x1C16D08
	0x036032C8 MOV X1, X0
	0x036032CC MOV X0, X19
	0x036032D0 BL 0x1C16DEC
	0x036032D4 SUB X31, X31, 0x30
	0x036032D8 STP X30, X21, [X31 + 0x10]
	0x036032DC STP X20, X19, [X31 + 0x20]
	0x036032E0 ADRP X21, 0xDDD000
	0x036032E4 LDRB W8, [X21 + 0x365]
	0x036032E8 MOV X19, X1
	0x036032EC MOV X20, X0
	0x036032F0 TBNZ X8, 0x0, 0x3603314
	0x036032F4 ADRP X0, 0xB37000
	0x036032F8 LDR X0, [X0 + 0x380]
	0x036032FC BL 0x1C16CF4
	0x03603300 ADRP X0, 0xB18000
	0x03603304 LDR X0, [X0 + 0xB50]
	0x03603308 BL 0x1C16CF4
	0x0360330C MOVZ W8, 0x1
	0x03603310 STRB W8, [X21 + 0x365]
	0x03603314 MOV X0, X19
	0x03603318 MOV X1, X31
	0x0360331C STR X31, [X31 + 0x8]
	0x03603320 BL 0x32277A8
	0x03603324 TBNZ X0, 0x0, 0x36033B4
	0x03603328 ADRP X21, 0xB18000
	0x0360332C LDR X21, [X21 + 0xB50]
	0x03603330 MOV X0, X19
	0x03603334 BL 0x35FB9CC
	0x03603338 LDR X0, [X21]
	0x0360333C LDR W8, [X0 + 0xE0]
	0x03603340 CBNZ W8, 0x360334C
	0x03603344 BL 0x1C16DFC
	0x03603348 LDR X0, [X21]
	0x0360334C LDR X8, [X0 + 0xB8]
	0x03603350 LDR X0, [X8]
	0x03603354 CBZ X0, 0x36033B0
	0x03603358 ADRP X8, 0xB37000
	0x0360335C LDR X8, [X8 + 0x380]
	0x03603360 ADD X2, X31, 0x8
	0x03603364 MOV X1, X19
	0x03603368 LDR X3, [X8]
	0x0360336C BL 0x2AA6B2C
	0x03603370 LDR X8, [X31 + 0x8]
	0x03603374 TBZ X0, 0x0, 0x360339C
	0x03603378 CBZ X8, 0x36033B0
	0x0360337C LDR W9, [X8 + 0x14]
	0x03603380 LDR W10, [X20 + 0x18]
	0x03603384 ANDS W31, W10, W9, 0x0
	0x03603388 B.NE 0x360339C
	0x0360338C CBZ W10, 0x3603398
	0x03603390 ORR W8, W10, W9, 0x0
	0x03603394 TBNZ X8, 0x2, 0x36033FC
	0x03603398 MOV X8, X31
	0x0360339C LDP X20, X19, [X31 + 0x20]
	0x036033A0 LDP X30, X21, [X31 + 0x10]
	0x036033A4 MOV X0, X8
	0x036033A8 ADD X31, X31, 0x30
	0x036033AC RET
	0x036033B0 BL 0x1C16F20
	0x036033B4 ADRP X0, 0xAF8000
	0x036033B8 LDR X0, [X0 + 0x578]
	0x036033BC BL 0x1C16D08
	0x036033C0 BL 0x1C16F10
	0x036033C4 MOV X19, X0
	0x036033C8 ADRP X0, 0xAF8000
	0x036033CC LDR X0, [X0 + 0x588]
	0x036033D0 BL 0x1C16D08
	0x036033D4 MOV X1, X0
	0x036033D8 MOV X0, X19
	0x036033DC MOV X2, X31
	0x036033E0 BL 0x3314A68
	0x036033E4 ADRP X0, 0xB37000
	0x036033E8 LDR X0, [X0 + 0xB18]
	0x036033EC BL 0x1C16D08
	0x036033F0 MOV X1, X0
	0x036033F4 MOV X0, X19
	0x036033F8 BL 0x1C16DEC
	0x036033FC ADRP X0, 0xAF0000
	0x03603400 LDR X0, [X0 + 0x5B0]
	0x03603404 BL 0x1C16D08
	0x03603408 BL 0x1C16F10
	0x0360340C MOV X1, X19
	0x03603410 MOV X2, X31
	0x03603414 MOV X20, X0
	0x03603418 BL 0x337DF1C
	0x0360341C ADRP X0, 0xB37000
	0x03603420 LDR X0, [X0 + 0xB18]
	0x03603424 BL 0x1C16D08
	0x03603428 MOV X1, X0
	0x0360342C MOV X0, X20
	0x03603430 BL 0x1C16DEC
	0x03603434 SUB X31, X31, 0x80
	0x03603438 STP X29, X30, [X31 + 0x20]
	0x0360343C STP X28, X27, [X31 + 0x30]
	0x03603440 STP X26, X25, [X31 + 0x40]
	0x03603444 STP X24, X23, [X31 + 0x50]
	0x03603448 STP X22, X21, [X31 + 0x60]
	0x0360344C STP X20, X19, [X31 + 0x70]
	0x03603450 ADRP X24, 0xDDD000
	0x03603454 LDRB W8, [X24 + 0x364]
	0x03603458 MOV W21, W4
	0x0360345C MOV X22, X3
	0x03603460 MOV X19, X2
	0x03603464 MOV X20, X1
	0x03603468 MOV X23, X0
	0x0360346C TBNZ X8, 0x0, 0x36034E4
	0x03603470 ADRP X0, 0xB18000
	0x03603474 LDR X0, [X0 + 0xB68]
	0x03603478 BL 0x1C16CF4
	0x0360347C ADRP X0, 0xB18000
	0x03603480 LDR X0, [X0 + 0xB40]
	0x03603484 BL 0x1C16CF4
	0x03603488 ADRP X0, 0xB18000
	0x0360348C LDR X0, [X0 + 0xB70]
	0x03603490 BL 0x1C16CF4
	0x03603494 ADRP X0, 0xAF0000
	0x03603498 LDR X0, [X0 + 0xE00]
	0x0360349C BL 0x1C16CF4
	0x036034A0 ADRP X0, 0xAF0000
	0x036034A4 LDR X0, [X0 + 0xF70]
	0x036034A8 BL 0x1C16CF4
	0x036034AC ADRP X0, 0xAF0000
	0x036034B0 LDR X0, [X0 + 0xF78]
	0x036034B4 BL 0x1C16CF4
	0x036034B8 ADRP X0, 0xAF0000
	0x036034BC LDR X0, [X0 + 0xE18]
	0x036034C0 BL 0x1C16CF4
	0x036034C4 ADRP X0, 0xAF1000
	0x036034C8 LDR X0, [X0 + 0x1B8]
	0x036034CC BL 0x1C16CF4
	0x036034D0 ADRP X0, 0xAF2000
	0x036034D4 LDR X0, [X0 + 0x278]
	0x036034D8 BL 0x1C16CF4
	0x036034DC MOVZ W8, 0x1
	0x036034E0 STRB W8, [X24 + 0x364]
	0x036034E4 STP X31, X31, [X31 + 0x10]
	0x036034E8 LDR X0, [X23 + 0x10]
	0x036034EC CBZ X0, 0x3603918
	0x036034F0 ADRP X8, 0xB18000
	0x036034F4 LDR X8, [X8 + 0xB40]
	0x036034F8 ADD X2, X31, 0x18
	0x036034FC MOV X1, X20
	0x03603500 LDR X3, [X8]
	0x03603504 BL 0x2AA6B2C
	0x03603508 CBZ X19, 0x3603918
	0x0360350C ADRP X10, 0xAF0000
	0x03603510 LDR X8, [X19]
	0x03603514 LDR X10, [X10 + 0xF70]
	0x03603518 LDRH W9, [X8 + 0x12E]
	0x0360351C LDR X1, [X10]
	0x03603520 CBZ X9, 0x3603544
	0x03603524 LDR X10, [X8 + 0xB0]
	0x03603528 ADD X10, X10, 0x8
	0x0360352C LDUR X11, [X10 - 0x8]
	0x03603530 CMP X11, X1
	0x03603534 B.EQ 0x3603554
	0x03603538 SUBS X9, X9, 0x1
	0x0360353C ADD X10, X10, 0x10
	0x03603540 B.NE 0x360352C
	0x03603544 MOV X0, X19
	0x03603548 MOV W2, W31
	0x0360354C BL 0x1C5C788
	0x03603550 B 0x3603560
	0x03603554 LDRSW X9, [X10]
	0x03603558 ADD X8, X8, X9, 0x4, LSL
	0x0360355C ADD X0, X8, 0x138
	0x03603560 ADRP X29, 0xAF0000
	0x03603564 ADRP X26, 0xAF0000
	0x03603568 LDR X29, [X29 + 0xE18]
	0x0360356C LDR X26, [X26 + 0xF78]
	0x03603570 LDP X8, X1, [X0]
	0x03603574 MOV X0, X19
	0x03603578 BLR X8
	0x0360357C MOV X19, X0
	0x03603580 MOVZ W27, 0x1
	0x03603584 MOV W28, W27
	0x03603588 CBZ X19, 0x36038A8
	0x0360358C LDR X8, [X19]
	0x03603590 LDR X1, [X29]
	0x03603594 LDRH W9, [X8 + 0x12E]
	0x03603598 CBZ X9, 0x36035BC
	0x0360359C LDR X10, [X8 + 0xB0]
	0x036035A0 ADD X10, X10, 0x8
	0x036035A4 LDUR X11, [X10 - 0x8]
	0x036035A8 CMP X11, X1
	0x036035AC B.EQ 0x36035CC
	0x036035B0 SUBS X9, X9, 0x1
	0x036035B4 ADD X10, X10, 0x10
	0x036035B8 B.NE 0x36035A4
	0x036035BC MOV X0, X19
	0x036035C0 MOV W2, W31
	0x036035C4 BL 0x1C5C788
	0x036035C8 B 0x36035D8
	0x036035CC LDRSW X9, [X10]
	0x036035D0 ADD X8, X8, X9, 0x4, LSL
	0x036035D4 ADD X0, X8, 0x138
	0x036035D8 LDP X8, X1, [X0]
	0x036035DC MOV X0, X19
	0x036035E0 BLR X8
	0x036035E4 TBZ X0, 0x0, 0x3603818
	0x036035E8 LDR X8, [X19]
	0x036035EC LDR X1, [X26]
	0x036035F0 LDRH W9, [X8 + 0x12E]
	0x036035F4 CBZ X9, 0x3603618
	0x036035F8 LDR X10, [X8 + 0xB0]
	0x036035FC ADD X10, X10, 0x8
	0x03603600 LDUR X11, [X10 - 0x8]
	0x03603604 CMP X11, X1
	0x03603608 B.EQ 0x3603628
	0x0360360C SUBS X9, X9, 0x1
	0x03603610 ADD X10, X10, 0x10
	0x03603614 B.NE 0x3603600
	0x03603618 MOV X0, X19
	0x0360361C MOV W2, W31
	0x03603620 BL 0x1C5C788
	0x03603624 B 0x3603634
	0x03603628 LDRSW X9, [X10]
	0x0360362C ADD X8, X8, X9, 0x4, LSL
	0x03603630 ADD X0, X8, 0x138
	0x03603634 LDP X8, X1, [X0]
	0x03603638 MOV X0, X19
	0x0360363C BLR X8
	0x03603640 LDR X25, [X31 + 0x18]
	0x03603644 MOV X24, X0
	0x03603648 CBZ X22, 0x3603674
	0x0360364C LDR X8, [X22]
	0x03603650 LDP X9, X3, [X8 + 0x1B8]
	0x03603654 ADD X2, X31, 0x10
	0x03603658 MOV X0, X22
	0x0360365C MOV X1, X24
	0x03603660 BLR X9
	0x03603664 TBNZ X0, 0x0, 0x3603710
	0x03603668 MOV W28, W31
	0x0360366C TBNZ X21, 0x0, 0x3603588
	0x03603670 B 0x36038AC
	0x03603674 MOV X28, X25
	0x03603678 CBNZ X25, 0x36036A4
	0x0360367C ADRP X8, 0xB18000
	0x03603680 LDR X8, [X8 + 0xB70]
	0x03603684 LDR X0, [X8]
	0x03603688 BL 0x1C16F10
	0x0360368C MOV X28, X0
	0x03603690 MOV X1, X31
	0x03603694 BL 0x33BDD8C
	0x03603698 STR X31, [X28 + 0x10]
	0x0360369C STR X31, [X28 + 0x20]
	0x036036A0 STR X28, [X31 + 0x18]
	0x036036A4 MOV X0, X28
	0x036036A8 BL 0x3603A94
	0x036036AC CBNZ X24, 0x36036C4
	0x036036B0 ADRP X8, 0xAF2000
	0x036036B4 LDR X8, [X8 + 0x278]
	0x036036B8 LDR X8, [X8]
	0x036036BC LDR X8, [X8 + 0xB8]
	0x036036C0 LDR X24, [X8]
	0x036036C4 CBZ X0, 0x3603928
	0x036036C8 ADRP X9, 0xAF1000
	0x036036CC LDR W10, [X0 + 0x1C]
	0x036036D0 LDR X8, [X0 + 0x10]
	0x036036D4 LDR X9, [X9 + 0x1B8]
	0x036036D8 ADD W10, W10, 0x1
	0x036036DC LDR X9, [X9]
	0x036036E0 STR W10, [X0 + 0x1C]
	0x036036E4 CBZ X8, 0x3603924
	0x036036E8 LDRSW X10, [X0 + 0x18]
	0x036036EC LDR W11, [X8 + 0x18]
	0x036036F0 CMP W10, W11
	0x036036F4 B.CS 0x360378C
	0x036036F8 ADD W9, W10, 0x1
	0x036036FC ADD X8, X8, X10, 0x3, LSL
	0x03603700 STR W9, [X0 + 0x18]
	0x03603704 STR X24, [X8 + 0x20]
	0x03603708 CBNZ X25, 0x3603584
	0x0360370C B 0x36037F4
	0x03603710 LDRB W8, [X22 + 0x10]
	0x03603714 LDR X24, [X31 + 0x18]
	0x03603718 CBZ W8, 0x36037A8
	0x0360371C CBNZ X24, 0x3603770
	0x03603720 LDR X8, [X22]
	0x03603724 MOV X1, X23
	0x03603728 STR X20, [X31 + 0x8]
	0x0360372C LDP X9, X3, [X8 + 0x198]
	0x03603730 MOV X0, X22
	0x03603734 MOV X2, X22
	0x03603738 BLR X9
	0x0360373C ADRP X8, 0xB18000
	0x03603740 LDR X20, [X22 + 0x20]
	0x03603744 LDR X8, [X8 + 0xB70]
	0x03603748 MOV X27, X0
	0x0360374C LDR X0, [X8]
	0x03603750 BL 0x1C16F10
	0x03603754 MOV X24, X0
	0x03603758 MOV X1, X31
	0x0360375C BL 0x33BDD8C
	0x03603760 STR X20, [X24 + 0x20]
	0x03603764 LDR X20, [X31 + 0x8]
	0x03603768 STR X27, [X24 + 0x10]
	0x0360376C STR X24, [X31 + 0x18]
	0x03603770 LDR X8, [X22]
	0x03603774 LDR X1, [X24 + 0x10]
	0x03603778 LDR X2, [X31 + 0x10]
	0x0360377C LDP X9, X3, [X8 + 0x188]
	0x03603780 MOV X0, X22
	0x03603784 BLR X9
	0x03603788 B 0x36037EC
	0x0360378C LDR X8, [X9 + 0x20]
	0x03603790 LDR X8, [X8 + 0xC0]
	0x03603794 LDR X2, [X8 + 0x70]
	0x03603798 MOV X1, X24
	0x0360379C BL 0x301BF90
	0x036037A0 CBNZ X25, 0x3603584
	0x036037A4 B 0x36037F4
	0x036037A8 STR X23, [X31 + 0x8]
	0x036037AC CBNZ X24, 0x3603930
	0x036037B0 ADRP X8, 0xB18000
	0x036037B4 MOV X23, X20
	0x036037B8 LDR X20, [X31 + 0x10]
	0x036037BC LDR X27, [X22 + 0x20]
	0x036037C0 LDR X8, [X8 + 0xB70]
	0x036037C4 LDR X0, [X8]
	0x036037C8 BL 0x1C16F10
	0x036037CC MOV X24, X0
	0x036037D0 MOV X1, X31
	0x036037D4 BL 0x33BDD8C
	0x036037D8 STR X20, [X24 + 0x10]
	0x036037DC MOV X20, X23
	0x036037E0 LDR X23, [X31 + 0x8]
	0x036037E4 STR X27, [X24 + 0x20]
	0x036037E8 STR X24, [X31 + 0x18]
	0x036037EC MOV W27, W28
	0x036037F0 CBNZ X25, 0x3603584
	0x036037F4 LDR X0, [X23 + 0x10]
	0x036037F8 CBZ X0, 0x360392C
	0x036037FC ADRP X8, 0xB18000
	0x03603800 LDR X2, [X31 + 0x18]
	0x03603804 LDR X8, [X8 + 0xB68]
	0x03603808 LDR X3, [X8]
	0x0360380C MOV X1, X20
	0x03603810 BL 0x2AA5098
	0x03603814 B 0x3603584
	0x03603818 MOV X21, X31
	0x0360381C CBZ X19, 0x3603880
	0x03603820 LDR X8, [X19]
	0x03603824 ADRP X10, 0xAF0000
	0x03603828 LDRH W9, [X8 + 0x12E]
	0x0360382C LDR X10, [X10 + 0xE00]
	0x03603830 LDR X1, [X10]
	0x03603834 CBZ X9, 0x3603858
	0x03603838 LDR X10, [X8 + 0xB0]
	0x0360383C ADD X10, X10, 0x8
	0x03603840 LDUR X11, [X10 - 0x8]
	0x03603844 CMP X11, X1
	0x03603848 B.EQ 0x3603868
	0x0360384C SUBS X9, X9, 0x1
	0x03603850 ADD X10, X10, 0x10
	0x03603854 B.NE 0x3603840
	0x03603858 MOV X0, X19
	0x0360385C MOV W2, W31
	0x03603860 BL 0x1C5C788
	0x03603864 B 0x3603874
	0x03603868 LDRSW X9, [X10]
	0x0360386C ADD X8, X8, X9, 0x4, LSL
	0x03603870 ADD X0, X8, 0x138
	0x03603874 LDP X8, X1, [X0]
	0x03603878 MOV X0, X19
	0x0360387C BLR X8
	0x03603880 CBNZ X21, 0x360391C
	0x03603884 AND W0, W28, 0x1
	0x03603888 LDP X20, X19, [X31 + 0x70]
	0x0360388C LDP X22, X21, [X31 + 0x60]
	0x03603890 LDP X24, X23, [X31 + 0x50]
	0x03603894 LDP X26, X25, [X31 + 0x40]
	0x03603898 LDP X28, X27, [X31 + 0x30]
	0x0360389C LDP X29, X30, [X31 + 0x20]
	0x036038A0 ADD X31, X31, 0x80
	0x036038A4 RET
	0x036038A8 BL 0x1C16F20
	0x036038AC ADRP X0, 0xB37000
	0x036038B0 LDR X0, [X0 + 0xB20]
	0x036038B4 BL 0x1C16D08
	0x036038B8 MOV X21, X0
	0x036038BC ADRP X0, 0xAF8000
	0x036038C0 LDR X0, [X0 + 0x9B0]
	0x036038C4 BL 0x1C16D08
	0x036038C8 MOV X2, X0
	0x036038CC MOV X0, X21
	0x036038D0 MOV X1, X20
	0x036038D4 MOV X3, X31
	0x036038D8 BL 0x32274B8
	0x036038DC MOV X20, X0
	0x036038E0 ADRP X0, 0xB1D000
	0x036038E4 LDR X0, [X0 + 0xC08]
	0x036038E8 BL 0x1C16D08
	0x036038EC BL 0x1C16F10
	0x036038F0 MOV X21, X0
	0x036038F4 MOV X1, X20
	0x036038F8 MOV X2, X31
	0x036038FC BL 0x33674A0
	0x03603900 ADRP X0, 0xB37000
	0x03603904 LDR X0, [X0 + 0xB28]
	0x03603908 BL 0x1C16D08
	0x0360390C MOV X1, X0
	0x03603910 MOV X0, X21
	0x03603914 BL 0x1C16DEC
	0x03603918 BL 0x1C16F20
	0x0360391C MOV X0, X21
	0x03603920 BL 0x1C16F18
	0x03603924 BL 0x1C16F20
	0x03603928 BL 0x1C16F20
	0x0360392C BL 0x1C16F20
	0x03603930 ADRP X0, 0xB1D000
	0x03603934 LDR X0, [X0 + 0xC08]
	0x03603938 BL 0x1C16D08
	0x0360393C BL 0x1C16F10
	0x03603940 MOV X20, X0
	0x03603944 MOV X1, X31
	0x03603948 BL 0x3367444
	0x0360394C ADRP X0, 0xB37000
	0x03603950 LDR X0, [X0 + 0xB28]
	0x03603954 BL 0x1C16D08
	0x03603958 MOV X1, X0
	0x0360395C MOV X0, X20
	0x03603960 BL 0x1C16DEC
	0x03603964 B 0x36039B0
	0x03603968 B 0x36039B0
	0x0360396C B 0x36039B0
	0x03603970 B 0x3603994
	0x03603974 B 0x36039B0
	0x03603978 B 0x36039B0
	0x0360397C B 0x3603994
	0x03603980 B 0x3603994
	0x03603984 B 0x3603994
	0x03603988 B 0x3603994
	0x0360398C B 0x3603994
	0x03603990 B 0x3603994
	0x03603994 MOV X20, X0
	0x03603998 B 0x36039B8
	0x0360399C B 0x36039B0
	0x036039A0 MOV X20, X0
	0x036039A4 MOVZ W27, 0x1
	0x036039A8 B 0x36039B8
	0x036039AC B 0x36039B0
	0x036039B0 MOV X20, X0
	0x036039B4 MOV W27, W28
	0x036039B8 CMP W1, 0x1
	0x036039BC B.NE 0x36039DC
	0x036039C0 MOV X0, X20
	0x036039C4 BL 0x3EB1AD0
	0x036039C8 LDR X21, [X0]
	0x036039CC BL 0x3EB1AE0
	0x036039D0 MOV W28, W27
	0x036039D4 CBNZ X19, 0x3603820
	0x036039D8 B 0x3603880
	0x036039DC MOV X21, X31
	0x036039E0 B 0x36039E8
	0x036039E4 MOV X20, X0
	0x036039E8 CBZ X19, 0x3603A4C
	0x036039EC LDR X8, [X19]
	0x036039F0 ADRP X10, 0xAF0000
	0x036039F4 LDRH W9, [X8 + 0x12E]
	0x036039F8 LDR X10, [X10 + 0xE00]
	0x036039FC LDR X1, [X10]
	0x03603A00 CBZ X9, 0x3603A24
	0x03603A04 LDR X10, [X8 + 0xB0]
	0x03603A08 ADD X10, X10, 0x8
	0x03603A0C LDUR X11, [X10 - 0x8]
	0x03603A10 CMP X11, X1
	0x03603A14 B.EQ 0x3603A34
	0x03603A18 SUBS X9, X9, 0x1
	0x03603A1C ADD X10, X10, 0x10
	0x03603A20 B.NE 0x3603A0C
	0x03603A24 MOV X0, X19
	0x03603A28 MOV W2, W31
	0x03603A2C BL 0x1C5C788
	0x03603A30 B 0x3603A40
	0x03603A34 LDRSW X9, [X10]
	0x03603A38 ADD X8, X8, X9, 0x4, LSL
	0x03603A3C ADD X0, X8, 0x138
	0x03603A40 LDP X8, X1, [X0]
	0x03603A44 MOV X0, X19
	0x03603A48 BLR X8
	0x03603A4C CBNZ X21, 0x3603A58
	0x03603A50 MOV X0, X20
	0x03603A54 BL 0x1D2C690
	0x03603A58 MOV X0, X21
	0x03603A5C BL 0x1C16F18
	0x03603A60 BL 0x1990590
	0x03603A64 STP X30, X21, [X31 - 0x20]!
	0x03603A68 STP X20, X19, [X31 + 0x10]
	0x03603A6C MOV X20, X1
	0x03603A70 MOV X1, X31
	0x03603A74 MOV X19, X2
	0x03603A78 MOV X21, X0
	0x03603A7C BL 0x33BDD8C
	0x03603A80 STR X20, [X21 + 0x10]
	0x03603A84 STR X19, [X21 + 0x20]
	0x03603A88 LDP X20, X19, [X31 + 0x10]
	0x03603A8C LDP X30, X21, [X31], #0x20
	0x03603A90 RET
	0x03603A94 STR X30, [X31 - 0x20]!
	0x03603A98 STP X20, X19, [X31 + 0x10]
	0x03603A9C ADRP X20, 0xDDD000
	0x03603AA0 LDRB W8, [X20 + 0x36D]
	0x03603AA4 MOV X19, X0
	0x03603AA8 TBNZ X8, 0x0, 0x3603ACC
	0x03603AAC ADRP X0, 0xAF1000
	0x03603AB0 LDR X0, [X0 + 0x1C0]
	0x03603AB4 BL 0x1C16CF4
	0x03603AB8 ADRP X0, 0xAF1000
	0x03603ABC LDR X0, [X0 + 0x1D0]
	0x03603AC0 BL 0x1C16CF4
	0x03603AC4 MOVZ W8, 0x1
	0x03603AC8 STRB W8, [X20 + 0x36D]
	0x03603ACC LDR X20, [X19 + 0x18]
	0x03603AD0 CBNZ X20, 0x3603AFC
	0x03603AD4 ADRP X8, 0xAF1000
	0x03603AD8 LDR X8, [X8 + 0x1D0]
	0x03603ADC LDR X0, [X8]
	0x03603AE0 BL 0x1C16F10
	0x03603AE4 ADRP X8, 0xAF1000
	0x03603AE8 LDR X8, [X8 + 0x1C0]
	0x03603AEC MOV X20, X0
	0x03603AF0 LDR X1, [X8]
	0x03603AF4 BL 0x301B7C4
	0x03603AF8 STR X20, [X19 + 0x18]
	0x03603AFC MOV X0, X20
	0x03603B00 LDP X20, X19, [X31 + 0x10]
	0x03603B04 LDR X30, [X31], #0x20
	0x03603B08 RET
	0x03603B0C STR X30, [X31 - 0x30]!
	0x03603B10 STP X22, X21, [X31 + 0x10]
	0x03603B14 STP X20, X19, [X31 + 0x20]
	0x03603B18 ADRP X22, 0xDDD000
	0x03603B1C LDRB W8, [X22 + 0x366]
	0x03603B20 MOV X19, X2
	0x03603B24 MOV X21, X1
	0x03603B28 MOV X20, X0
	0x03603B2C TBNZ X8, 0x0, 0x3603B50
	0x03603B30 ADRP X0, 0xB37000
	0x03603B34 LDR X0, [X0 + 0x380]
	0x03603B38 BL 0x1C16CF4
	0x03603B3C ADRP X0, 0xB18000
	0x03603B40 LDR X0, [X0 + 0xB50]
	0x03603B44 BL 0x1C16CF4
	0x03603B48 MOVZ W8, 0x1
	0x03603B4C STRB W8, [X22 + 0x366]
	0x03603B50 MOV X0, X21
	0x03603B54 BL 0x3603BF0
	0x03603B58 TBZ X0, 0x0, 0x3603BCC
	0x03603B5C ADRP X22, 0xB18000
	0x03603B60 LDR X22, [X22 + 0xB50]
	0x03603B64 LDR X0, [X22]
	0x03603B68 LDR W8, [X0 + 0xE0]
	0x03603B6C CBNZ W8, 0x3603B78
	0x03603B70 BL 0x1C16DFC
	0x03603B74 LDR X0, [X22]
	0x03603B78 LDR X8, [X0 + 0xB8]
	0x03603B7C LDR X0, [X8]
	0x03603B80 CBZ X0, 0x3603BEC
	0x03603B84 ADRP X8, 0xB37000
	0x03603B88 LDR X8, [X8 + 0x380]
	0x03603B8C MOV X1, X21
	0x03603B90 MOV X2, X19
	0x03603B94 LDR X3, [X8]
	0x03603B98 BL 0x2AA6B2C
	0x03603B9C TBZ X0, 0x0, 0x3603BC4
	0x03603BA0 LDR X9, [X19]
	0x03603BA4 CBZ X9, 0x3603BEC
	0x03603BA8 LDR W8, [X20 + 0x18]
	0x03603BAC CBZ W8, 0x3603BC4
	0x03603BB0 LDR W9, [X9 + 0x14]
	0x03603BB4 AND W10, W8, W9, 0x0
	0x03603BB8 CBNZ W10, 0x3603BC4
	0x03603BBC ORR W8, W8, W9, 0x0
	0x03603BC0 TBNZ X8, 0x2, 0x3603BE4
	0x03603BC4 MOVZ W0, 0x1
	0x03603BC8 B 0x3603BD4
	0x03603BCC MOV W0, W31
	0x03603BD0 STR X31, [X19]
	0x03603BD4 LDP X20, X19, [X31 + 0x20]
	0x03603BD8 LDP X22, X21, [X31 + 0x10]
	0x03603BDC LDR X30, [X31], #0x30
	0x03603BE0 RET
	0x03603BE4 MOV W0, W31
	0x03603BE8 B 0x3603BD4
	0x03603BEC BL 0x1C16F20
	0x03603BF0 STR X30, [X31 - 0x20]!
	0x03603BF4 STP X20, X19, [X31 + 0x10]
	0x03603BF8 ADRP X20, 0xDDD000
	0x03603BFC LDRB W8, [X20 + 0x3AF]
	0x03603C00 MOV X19, X0
	0x03603C04 TBNZ X8, 0x0, 0x3603C1C
	0x03603C08 ADRP X0, 0xB18000
	0x03603C0C LDR X0, [X0 + 0x8C8]
	0x03603C10 BL 0x1C16CF4
	0x03603C14 MOVZ W8, 0x1
	0x03603C18 STRB W8, [X20 + 0x3AF]
	0x03603C1C CBZ X19, 0x3603C48
	0x03603C20 ADRP X8, 0xB18000
	0x03603C24 LDR X8, [X8 + 0x8C8]
	0x03603C28 LDR X0, [X8]
	0x03603C2C LDR W8, [X0 + 0xE0]
	0x03603C30 CBNZ W8, 0x3603C38
	0x03603C34 BL 0x1C16DFC
	0x03603C38 MOV X0, X19
	0x03603C3C LDP X20, X19, [X31 + 0x10]
	0x03603C40 LDR X30, [X31], #0x20
	0x03603C44 B 0x3604D0C
	0x03603C48 LDP X20, X19, [X31 + 0x10]
	0x03603C4C MOV W0, W31
	0x03603C50 LDR X30, [X31], #0x20
	0x03603C54 RET
	0x03603C58 STR X30, [X31 - 0x20]!
	0x03603C5C STP X20, X19, [X31 + 0x10]
	0x03603C60 MOV W19, W1
	0x03603C64 MOV X1, X31
	0x03603C68 MOV X20, X0
	0x03603C6C BL 0x33BDD8C
	0x03603C70 STR W19, [X20 + 0x10]
	0x03603C74 LDP X20, X19, [X31 + 0x10]
	0x03603C78 LDR X30, [X31], #0x20
	0x03603C7C RET
	0x03603C80 B 0x35F6A98
	0x03603C84 STR X30, [X31 - 0x60]!
	0x03603C88 STP X28, X27, [X31 + 0x10]
	0x03603C8C STP X26, X25, [X31 + 0x20]
	0x03603C90 STP X24, X23, [X31 + 0x30]
	0x03603C94 STP X22, X21, [X31 + 0x40]
	0x03603C98 STP X20, X19, [X31 + 0x50]
	0x03603C9C ADRP X21, 0xDDD000
	0x03603CA0 ADRP X20, 0xAF0000
	0x03603CA4 LDRB W8, [X21 + 0x369]
	0x03603CA8 LDR X20, [X20 + 0x8F0]
	0x03603CAC MOV X19, X0
	0x03603CB0 TBNZ X8, 0x0, 0x3603D28
	0x03603CB4 ADRP X0, 0xB18000
	0x03603CB8 LDR X0, [X0 + 0xB50]
	0x03603CBC BL 0x1C16CF4
	0x03603CC0 ADRP X0, 0xAF0000
	0x03603CC4 LDR X0, [X0 + 0xE00]
	0x03603CC8 BL 0x1C16CF4
	0x03603CCC ADRP X0, 0xAF3000
	0x03603CD0 LDR X0, [X0 + 0x260]
	0x03603CD4 BL 0x1C16CF4
	0x03603CD8 ADRP X0, 0xAF0000
	0x03603CDC LDR X0, [X0 + 0xE18]
	0x03603CE0 BL 0x1C16CF4
	0x03603CE4 ADRP X0, 0xAF3000
	0x03603CE8 LDR X0, [X0 + 0x268]
	0x03603CEC BL 0x1C16CF4
	0x03603CF0 ADRP X0, 0xAF3000
	0x03603CF4 LDR X0, [X0 + 0x270]
	0x03603CF8 BL 0x1C16CF4
	0x03603CFC ADRP X0, 0xAF0000
	0x03603D00 LDR X0, [X0 + 0x8F0]
	0x03603D04 BL 0x1C16CF4
	0x03603D08 ADRP X0, 0xAF4000
	0x03603D0C LDR X0, [X0 + 0x928]
	0x03603D10 BL 0x1C16CF4
	0x03603D14 ADRP X0, 0xB2E000
	0x03603D18 LDR X0, [X0 + 0x420]
	0x03603D1C BL 0x1C16CF4
	0x03603D20 MOVZ W8, 0x1
	0x03603D24 STRB W8, [X21 + 0x369]
	0x03603D28 LDR X0, [X20]
	0x03603D2C ADRP X23, 0xAF0000
	0x03603D30 LDR X23, [X23 + 0xE00]
	0x03603D34 BL 0x1C16F10
	0x03603D38 MOV X1, X31
	0x03603D3C MOV X20, X0
	0x03603D40 BL 0x3231AC4
	0x03603D44 MOV X0, X19
	0x03603D48 BL 0x35F6A98
	0x03603D4C MOV X19, X0
	0x03603D50 CBZ X0, 0x3603F30
	0x03603D54 ADRP X24, 0xAF0000
	0x03603D58 ADRP X25, 0xAF3000
	0x03603D5C ADRP X26, 0xAF4000
	0x03603D60 ADRP X27, 0xB18000
	0x03603D64 ADRP X28, 0xB2E000
	0x03603D68 LDR X24, [X24 + 0xE18]
	0x03603D6C LDR X25, [X25 + 0x260]
	0x03603D70 LDR X26, [X26 + 0x928]
	0x03603D74 LDR X27, [X27 + 0xB50]
	0x03603D78 LDR X28, [X28 + 0x420]
	0x03603D7C LDR X8, [X19]
	0x03603D80 LDR X1, [X24]
	0x03603D84 LDRH W9, [X8 + 0x12E]
	0x03603D88 CBZ X9, 0x3603DAC
	0x03603D8C LDR X10, [X8 + 0xB0]
	0x03603D90 ADD X10, X10, 0x8
	0x03603D94 LDUR X11, [X10 - 0x8]
	0x03603D98 CMP X11, X1
	0x03603D9C B.EQ 0x3603DBC
	0x03603DA0 SUBS X9, X9, 0x1
	0x03603DA4 ADD X10, X10, 0x10
	0x03603DA8 B.NE 0x3603D94
	0x03603DAC MOV X0, X19
	0x03603DB0 MOV W2, W31
	0x03603DB4 BL 0x1C5C788
	0x03603DB8 B 0x3603DC8
	0x03603DBC LDRSW X9, [X10]
	0x03603DC0 ADD X8, X8, X9, 0x4, LSL
	0x03603DC4 ADD X0, X8, 0x138
	0x03603DC8 LDP X8, X1, [X0]
	0x03603DCC MOV X0, X19
	0x03603DD0 BLR X8
	0x03603DD4 TBZ X0, 0x0, 0x3603E9C
	0x03603DD8 LDR X8, [X19]
	0x03603DDC LDR X1, [X25]
	0x03603DE0 LDRH W9, [X8 + 0x12E]
	0x03603DE4 CBZ X9, 0x3603E08
	0x03603DE8 LDR X10, [X8 + 0xB0]
	0x03603DEC ADD X10, X10, 0x8
	0x03603DF0 LDUR X11, [X10 - 0x8]
	0x03603DF4 CMP X11, X1
	0x03603DF8 B.EQ 0x3603E18
	0x03603DFC SUBS X9, X9, 0x1
	0x03603E00 ADD X10, X10, 0x10
	0x03603E04 B.NE 0x3603DF0
	0x03603E08 MOV X0, X19
	0x03603E0C MOV W2, W31
	0x03603E10 BL 0x1C5C788
	0x03603E14 B 0x3603E24
	0x03603E18 LDRSW X9, [X10]
	0x03603E1C ADD X8, X8, X9, 0x4, LSL
	0x03603E20 ADD X0, X8, 0x138
	0x03603E24 LDP X8, X1, [X0]
	0x03603E28 MOV X0, X19
	0x03603E2C BLR X8
	0x03603E30 CBZ X20, 0x3603F2C
	0x03603E34 MOV X21, X0
	0x03603E38 MOV X22, X1
	0x03603E3C MOV X0, X20
	0x03603E40 MOV X1, X21
	0x03603E44 MOV X2, X31
	0x03603E48 BL 0x32333E0
	0x03603E4C LDR X1, [X26]
	0x03603E50 MOV X0, X20
	0x03603E54 MOV X2, X31
	0x03603E58 BL 0x32333E0
	0x03603E5C LDR X0, [X27]
	0x03603E60 LDR W8, [X0 + 0xE0]
	0x03603E64 CBNZ W8, 0x3603E6C
	0x03603E68 BL 0x1C16DFC
	0x03603E6C MOV X0, X21
	0x03603E70 MOV X1, X22
	0x03603E74 BL 0x35F9274
	0x03603E78 MOV X1, X0
	0x03603E7C MOV X0, X20
	0x03603E80 MOV X2, X31
	0x03603E84 BL 0x32333E0
	0x03603E88 LDR X1, [X28]
	0x03603E8C MOV X0, X20
	0x03603E90 MOV X2, X31
	0x03603E94 BL 0x32333E0
	0x03603E98 B 0x3603D7C
	0x03603E9C MOV X21, X31
	0x03603EA0 CBZ X19, 0x3603EFC
	0x03603EA4 LDR X8, [X19]
	0x03603EA8 LDR X1, [X23]
	0x03603EAC LDRH W9, [X8 + 0x12E]
	0x03603EB0 CBZ X9, 0x3603ED4
	0x03603EB4 LDR X10, [X8 + 0xB0]
	0x03603EB8 ADD X10, X10, 0x8
	0x03603EBC LDUR X11, [X10 - 0x8]
	0x03603EC0 CMP X11, X1
	0x03603EC4 B.EQ 0x3603EE4
	0x03603EC8 SUBS X9, X9, 0x1
	0x03603ECC ADD X10, X10, 0x10
	0x03603ED0 B.NE 0x3603EBC
	0x03603ED4 MOV X0, X19
	0x03603ED8 MOV W2, W31
	0x03603EDC BL 0x1C5C788
	0x03603EE0 B 0x3603EF0
	0x03603EE4 LDRSW X9, [X10]
	0x03603EE8 ADD X8, X8, X9, 0x4, LSL
	0x03603EEC ADD X0, X8, 0x138
	0x03603EF0 LDP X8, X1, [X0]
	0x03603EF4 MOV X0, X19
	0x03603EF8 BLR X8
	0x03603EFC CBNZ X21, 0x3603F34
	0x03603F00 CBZ X20, 0x3603F3C
	0x03603F04 LDR X8, [X20]
	0x03603F08 MOV X0, X20
	0x03603F0C LDP X20, X19, [X31 + 0x50]
	0x03603F10 LDP X22, X21, [X31 + 0x40]
	0x03603F14 LDP X2, X1, [X8 + 0x168]
	0x03603F18 LDP X24, X23, [X31 + 0x30]
	0x03603F1C LDP X26, X25, [X31 + 0x20]
	0x03603F20 LDP X28, X27, [X31 + 0x10]
	0x03603F24 LDR X30, [X31], #0x60
	0x03603F28 BR X2
	0x03603F2C BL 0x1C16F20
	0x03603F30 BL 0x1C16F20
	0x03603F34 MOV X0, X21
	0x03603F38 BL 0x1C16F18
	0x03603F3C BL 0x1C16F20
	0x03603F40 B 0x3603F64
	0x03603F44 B 0x3603F64
	0x03603F48 B 0x3603F64
	0x03603F4C B 0x3603F64
	0x03603F50 B 0x3603F64
	0x03603F54 B 0x3603F64
	0x03603F58 B 0x3603F64
	0x03603F5C B 0x3603F64
	0x03603F60 B 0x3603F64
	0x03603F64 CMP W1, 0x1
	0x03603F68 B.NE 0x3603F7C
	0x03603F6C BL 0x3EB1AD0
	0x03603F70 LDR X21, [X0]
	0x03603F74 BL 0x3EB1AE0
	0x03603F78 B 0x3603EA0
	0x03603F7C MOV X20, X0
	0x03603F80 MOV X21, X31
	0x03603F84 B 0x3603F8C
	0x03603F88 MOV X20, X0
	0x03603F8C CBZ X19, 0x3603FE8
	0x03603F90 LDR X8, [X19]
	0x03603F94 LDR X1, [X23]
	0x03603F98 LDRH W9, [X8 + 0x12E]
	0x03603F9C CBZ X9, 0x3603FC0
	0x03603FA0 LDR X10, [X8 + 0xB0]
	0x03603FA4 ADD X10, X10, 0x8
	0x03603FA8 LDUR X11, [X10 - 0x8]
	0x03603FAC CMP X11, X1
	0x03603FB0 B.EQ 0x3603FD0
	0x03603FB4 SUBS X9, X9, 0x1
	0x03603FB8 ADD X10, X10, 0x10
	0x03603FBC B.NE 0x3603FA8
	0x03603FC0 MOV X0, X19
	0x03603FC4 MOV W2, W31
	0x03603FC8 BL 0x1C5C788
	0x03603FCC B 0x3603FDC
	0x03603FD0 LDRSW X9, [X10]
	0x03603FD4 ADD X8, X8, X9, 0x4, LSL
	0x03603FD8 ADD X0, X8, 0x138
	0x03603FDC LDP X8, X1, [X0]
	0x03603FE0 MOV X0, X19
	0x03603FE4 BLR X8
	0x03603FE8 CBNZ X21, 0x3603FF4
	0x03603FEC MOV X0, X20
	0x03603FF0 BL 0x1D2C690
	0x03603FF4 MOV X0, X21
	0x03603FF8 BL 0x1C16F18
	0x03603FFC BL 0x1990590
	0x03604000 STP X30, X21, [X31 - 0x20]!
	0x03604004 STP X20, X19, [X31 + 0x10]
	0x03604008 ADRP X21, 0xDDC000
	0x0360400C LDRB W8, [X21 + 0x36A]
	0x03604010 MOV X20, X2
	0x03604014 MOV X19, X1
	0x03604018 TBNZ X8, 0x0, 0x3604054
	0x0360401C ADRP X0, 0xB1A000
	0x03604020 LDR X0, [X0 + 0xF30]
	0x03604024 BL 0x1C16CF4
	0x03604028 ADRP X0, 0xAF0000
	0x0360402C LDR X0, [X0 + 0x1B8]
	0x03604030 BL 0x1C16CF4
	0x03604034 ADRP X0, 0xAF0000
	0x03604038 LDR X0, [X0 + 0x1C0]
	0x0360403C BL 0x1C16CF4
	0x03604040 ADRP X0, 0xAF0000
	0x03604044 LDR X0, [X0 + 0x1D0]
	0x03604048 BL 0x1C16CF4
	0x0360404C MOVZ W8, 0x1
	0x03604050 STRB W8, [X21 + 0x36A]
	0x03604054 CBZ X20, 0x3604080
	0x03604058 LDRB W8, [X20 + 0x10]
	0x0360405C CBZ W8, 0x3604080
	0x03604060 CBZ X19, 0x36041D0
	0x03604064 LDR X8, [X20]
	0x03604068 LDR X1, [X19 + 0x10]
	0x0360406C MOV X0, X20
	0x03604070 LDP X9, X2, [X8 + 0x1A8]
	0x03604074 BLR X9
	0x03604078 MOV X20, X0
	0x0360407C B 0x3604134
	0x03604080 CBZ X19, 0x36041D0
	0x03604084 LDR X8, [X19 + 0x10]
	0x03604088 CBZ X8, 0x3604114
	0x0360408C MOV X0, X19
	0x03604090 BL 0x36041D4
	0x03604094 MOV X1, X31
	0x03604098 MOV X21, X0
	0x0360409C BL 0x32277A8
	0x036040A0 MOV X20, X31
	0x036040A4 TBNZ X0, 0x0, 0x3604134
	0x036040A8 ADRP X8, 0xAF0000
	0x036040AC LDR X8, [X8 + 0x1D0]
	0x036040B0 LDR X0, [X8]
	0x036040B4 BL 0x1C16F10
	0x036040B8 ADRP X8, 0xAF0000
	0x036040BC LDR X8, [X8 + 0x1C0]
	0x036040C0 MOV X20, X0
	0x036040C4 LDR X1, [X8]
	0x036040C8 BL 0x301B7C4
	0x036040CC CBZ X20, 0x36041D0
	0x036040D0 ADRP X9, 0xAF0000
	0x036040D4 LDR X9, [X9 + 0x1B8]
	0x036040D8 LDR W10, [X20 + 0x1C]
	0x036040DC LDR X8, [X20 + 0x10]
	0x036040E0 LDR X9, [X9]
	0x036040E4 ADD W10, W10, 0x1
	0x036040E8 STR W10, [X20 + 0x1C]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xDDF000
	014 Move X25, 0xB39000
	015 Move X19, 0xB39000
	016 Move X20, 0xB39000
	017 Move X22, 0xB39000
	018 Move X21, 0xAF2000
	019 Move X23, 0xB39000
	020 Move X25, [X25+1752]
	021 Move W8, [X24+865]
	022 Move X19, [X19+1760]
	023 Move X20, [X20+1768]
	024 Move X22, [X22+1776]
	025 Move X21, [X21+2104]
	026 Move X23, [X23+1784]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {468}
	031 Move X0, 0xB39000
	032 Move X0, [X0+1792]
	033 Call 0x1C17CF4
	034 Move X0, 0xB39000
	035 Move X0, [X0+1800]
	036 Call 0x1C17CF4
	037 Move X0, 0xB39000
	038 Move X0, [X0+1808]
	039 Call 0x1C17CF4
	040 Move X0, 0xB39000
	041 Move X0, [X0+1816]
	042 Call 0x1C17CF4
	043 Move X0, 0xB39000
	044 Move X0, [X0+1824]
	045 Call 0x1C17CF4
	046 Move X0, 0xB39000
	047 Move X0, [X0+1832]
	048 Call 0x1C17CF4
	049 Move X0, 0xB39000
	050 Move X0, [X0+1840]
	051 Call 0x1C17CF4
	052 Move X0, 0xB39000
	053 Move X0, [X0+1848]
	054 Call 0x1C17CF4
	055 Move X0, 0xB39000
	056 Move X0, [X0+1856]
	057 Call 0x1C17CF4
	058 Move X0, 0xB39000
	059 Move X0, [X0+1864]
	060 Call 0x1C17CF4
	061 Move X0, 0xB39000
	062 Move X0, [X0+1872]
	063 Call 0x1C17CF4
	064 Move X0, 0xB39000
	065 Move X0, [X0+1880]
	066 Call 0x1C17CF4
	067 Move X0, 0xB39000
	068 Move X0, [X0+1888]
	069 Call 0x1C17CF4
	070 Move X0, 0xB39000
	071 Move X0, [X0+1896]
	072 Call 0x1C17CF4
	073 Move X0, 0xB39000
	074 Move X0, [X0+1752]
	075 Call 0x1C17CF4
	076 Move X0, 0xB39000
	077 Move X0, [X0+1904]
	078 Call 0x1C17CF4
	079 Move X0, 0xB39000
	080 Move X0, [X0+1912]
	081 Call 0x1C17CF4
	082 Move X0, 0xB39000
	083 Move X0, [X0+1784]
	084 Call 0x1C17CF4
	085 Move X0, 0xB39000
	086 Move X0, [X0+1920]
	087 Call 0x1C17CF4
	088 Move X0, 0xB39000
	089 Move X0, [X0+1928]
	090 Call 0x1C17CF4
	091 Move X0, 0xB39000
	092 Move X0, [X0+1936]
	093 Call 0x1C17CF4
	094 Move X0, 0xB39000
	095 Move X0, [X0+1944]
	096 Call 0x1C17CF4
	097 Move X0, 0xB39000
	098 Move X0, [X0+1952]
	099 Call 0x1C17CF4
	100 Move X0, 0xB39000
	101 Move X0, [X0+1960]
	102 Call 0x1C17CF4
	103 Move X0, 0xB39000
	104 Move X0, [X0+1968]
	105 Call 0x1C17CF4
	106 Move X0, 0xB39000
	107 Move X0, [X0+1976]
	108 Call 0x1C17CF4
	109 Move X0, 0xB39000
	110 Move X0, [X0+1984]
	111 Call 0x1C17CF4
	112 Move X0, 0xB39000
	113 Move X0, [X0+1992]
	114 Call 0x1C17CF4
	115 Move X0, 0xB39000
	116 Move X0, [X0+2000]
	117 Call 0x1C17CF4
	118 Move X0, 0xB39000
	119 Move X0, [X0+2008]
	120 Call 0x1C17CF4
	121 Move X0, 0xB39000
	122 Move X0, [X0+2016]
	123 Call 0x1C17CF4
	124 Move X0, 0xB39000
	125 Move X0, [X0+2024]
	126 Call 0x1C17CF4
	127 Move X0, 0xB39000
	128 Move X0, [X0+2032]
	129 Call 0x1C17CF4
	130 Move X0, 0xB39000
	131 Move X0, [X0+2040]
	132 Call 0x1C17CF4
	133 Move X0, 0xB39000
	134 Move X0, [X0+2048]
	135 Call 0x1C17CF4
	136 Move X0, 0xB39000
	137 Move X0, [X0+2056]
	138 Call 0x1C17CF4
	139 Move X0, 0xB39000
	140 Move X0, [X0+2064]
	141 Call 0x1C17CF4
	142 Move X0, 0xB39000
	143 Move X0, [X0+2072]
	144 Call 0x1C17CF4
	145 Move X0, 0xB39000
	146 Move X0, [X0+2080]
	147 Call 0x1C17CF4
	148 Move X0, 0xB39000
	149 Move X0, [X0+2088]
	150 Call 0x1C17CF4
	151 Move X0, 0xB39000
	152 Move X0, [X0+2096]
	153 Call 0x1C17CF4
	154 Move X0, 0xB39000
	155 Move X0, [X0+2104]
	156 Call 0x1C17CF4
	157 Move X0, 0xB39000
	158 Move X0, [X0+2112]
	159 Call 0x1C17CF4
	160 Move X0, 0xB39000
	161 Move X0, [X0+2120]
	162 Call 0x1C17CF4
	163 Move X0, 0xB39000
	164 Move X0, [X0+2128]
	165 Call 0x1C17CF4
	166 Move X0, 0xB1A000
	167 Move X0, [X0+2896]
	168 Call 0x1C17CF4
	169 Move X0, 0xB39000
	170 Move X0, [X0+2136]
	171 Call 0x1C17CF4
	172 Move X0, 0xB39000
	173 Move X0, [X0+2144]
	174 Call 0x1C17CF4
	175 Move X0, 0xB39000
	176 Move X0, [X0+2152]
	177 Call 0x1C17CF4
	178 Move X0, 0xB39000
	179 Move X0, [X0+2160]
	180 Call 0x1C17CF4
	181 Move X0, 0xB39000
	182 Move X0, [X0+1768]
	183 Call 0x1C17CF4
	184 Move X0, 0xB39000
	185 Move X0, [X0+2168]
	186 Call 0x1C17CF4
	187 Move X0, 0xB39000
	188 Move X0, [X0+2176]
	189 Call 0x1C17CF4
	190 Move X0, 0xB39000
	191 Move X0, [X0+2184]
	192 Call 0x1C17CF4
	193 Move X0, 0xB39000
	194 Move X0, [X0+2192]
	195 Call 0x1C17CF4
	196 Move X0, 0xB39000
	197 Move X0, [X0+2200]
	198 Call 0x1C17CF4
	199 Move X0, 0xB39000
	200 Move X0, [X0+2208]
	201 Call 0x1C17CF4
	202 Move X0, 0xB39000
	203 Move X0, [X0+2216]
	204 Call 0x1C17CF4
	205 Move X0, 0xAFF000
	206 Move X0, [X0+752]
	207 Call 0x1C17CF4
	208 Move X0, 0xB39000
	209 Move X0, [X0+2224]
	210 Call 0x1C17CF4
	211 Move X0, 0xB39000
	212 Move X0, [X0+2232]
	213 Call 0x1C17CF4
	214 Move X0, 0xB39000
	215 Move X0, [X0+2240]
	216 Call 0x1C17CF4
	217 Move X0, 0xB39000
	218 Move X0, [X0+2248]
	219 Call 0x1C17CF4
	220 Move X0, 0xB39000
	221 Move X0, [X0+2256]
	222 Call 0x1C17CF4
	223 Move X0, 0xB39000
	224 Move X0, [X0+2264]
	225 Call 0x1C17CF4
	226 Move X0, 0xB39000
	227 Move X0, [X0+2272]
	228 Call 0x1C17CF4
	229 Move X0, 0xB39000
	230 Move X0, [X0+2280]
	231 Call 0x1C17CF4
	232 Move X0, 0xB39000
	233 Move X0, [X0+2288]
	234 Call 0x1C17CF4
	235 Move X0, 0xB39000
	236 Move X0, [X0+2296]
	237 Call 0x1C17CF4
	238 Move X0, 0xB39000
	239 Move X0, [X0+2304]
	240 Call 0x1C17CF4
	241 Move X0, 0xB39000
	242 Move X0, [X0+2312]
	243 Call 0x1C17CF4
	244 Move X0, 0xB39000
	245 Move X0, [X0+2320]
	246 Call 0x1C17CF4
	247 Move X0, 0xB39000
	248 Move X0, [X0+2328]
	249 Call 0x1C17CF4
	250 Move X0, 0xB39000
	251 Move X0, [X0+2336]
	252 Call 0x1C17CF4
	253 Move X0, 0xB39000
	254 Move X0, [X0+2344]
	255 Call 0x1C17CF4
	256 Move X0, 0xB39000
	257 Move X0, [X0+2352]
	258 Call 0x1C17CF4
	259 Move X0, 0xB39000
	260 Move X0, [X0+2360]
	261 Call 0x1C17CF4
	262 Move X0, 0xB39000
	263 Move X0, [X0+2368]
	264 Call 0x1C17CF4
	265 Move X0, 0xB39000
	266 Move X0, [X0+2376]
	267 Call 0x1C17CF4
	268 Move X0, 0xB39000
	269 Move X0, [X0+2384]
	270 Call 0x1C17CF4
	271 Move X0, 0xB39000
	272 Move X0, [X0+2392]
	273 Call 0x1C17CF4
	274 Move X0, 0xB39000
	275 Move X0, [X0+2400]
	276 Call 0x1C17CF4
	277 Move X0, 0xB39000
	278 Move X0, [X0+2408]
	279 Call 0x1C17CF4
	280 Move X0, 0xB39000
	281 Move X0, [X0+2416]
	282 Call 0x1C17CF4
	283 Move X0, 0xB39000
	284 Move X0, [X0+2424]
	285 Call 0x1C17CF4
	286 Move X0, 0xB39000
	287 Move X0, [X0+2432]
	288 Call 0x1C17CF4
	289 Move X0, 0xB39000
	290 Move X0, [X0+2440]
	291 Call 0x1C17CF4
	292 Move X0, 0xB39000
	293 Move X0, [X0+2448]
	294 Call 0x1C17CF4
	295 Move X0, 0xB39000
	296 Move X0, [X0+1760]
	297 Call 0x1C17CF4
	298 Move X0, 0xB39000
	299 Move X0, [X0+2456]
	300 Call 0x1C17CF4
	301 Move X0, 0xB39000
	302 Move X0, [X0+2464]
	303 Call 0x1C17CF4
	304 Move X0, 0xB39000
	305 Move X0, [X0+2472]
	306 Call 0x1C17CF4
	307 Move X0, 0xB39000
	308 Move X0, [X0+2480]
	309 Call 0x1C17CF4
	310 Move X0, 0xB39000
	311 Move X0, [X0+2488]
	312 Call 0x1C17CF4
	313 Move X0, 0xB39000
	314 Move X0, [X0+2496]
	315 Call 0x1C17CF4
	316 Move X0, 0xB39000
	317 Move X0, [X0+2504]
	318 Call 0x1C17CF4
	319 Move X0, 0xB39000
	320 Move X0, [X0+392]
	321 Call 0x1C17CF4
	322 Move X0, 0xB39000
	323 Move X0, [X0+2512]
	324 Call 0x1C17CF4
	325 Move X0, 0xB39000
	326 Move X0, [X0+2520]
	327 Call 0x1C17CF4
	328 Move X0, 0xB39000
	329 Move X0, [X0+2528]
	330 Call 0x1C17CF4
	331 Move X0, 0xB39000
	332 Move X0, [X0+2536]
	333 Call 0x1C17CF4
	334 Move X0, 0xB39000
	335 Move X0, [X0+2544]
	336 Call 0x1C17CF4
	337 Move X0, 0xB39000
	338 Move X0, [X0+1776]
	339 Call 0x1C17CF4
	340 Move X0, 0xB39000
	341 Move X0, [X0+2552]
	342 Call 0x1C17CF4
	343 Move X0, 0xB39000
	344 Move X0, [X0+2560]
	345 Call 0x1C17CF4
	346 Move X0, 0xAF2000
	347 Move X0, [X0+3544]
	348 Call 0x1C17CF4
	349 Move X0, 0xB39000
	350 Move X0, [X0+2568]
	351 Call 0x1C17CF4
	352 Move X0, 0xB39000
	353 Move X0, [X0+2576]
	354 Call 0x1C17CF4
	355 Move X0, 0xB39000
	356 Move X0, [X0+2584]
	357 Call 0x1C17CF4
	358 Move X0, 0xB39000
	359 Move X0, [X0+2592]
	360 Call 0x1C17CF4
	361 Move X0, 0xAFB000
	362 Move X0, [X0+3440]
	363 Call 0x1C17CF4
	364 Move X0, 0xB39000
	365 Move X0, [X0+1744]
	366 Call 0x1C17CF4
	367 Move X0, 0xB39000
	368 Move X0, [X0+2600]
	369 Call 0x1C17CF4
	370 Move X0, 0xB39000
	371 Move X0, [X0+2608]
	372 Call 0x1C17CF4
	373 Move X0, 0xB39000
	374 Move X0, [X0+2616]
	375 Call 0x1C17CF4
	376 Move X0, 0xB39000
	377 Move X0, [X0+2624]
	378 Call 0x1C17CF4
	379 Move X0, 0xB39000
	380 Move X0, [X0+2632]
	381 Call 0x1C17CF4
	382 Move X0, 0xB2D000
	383 Move X0, [X0+2440]
	384 Call 0x1C17CF4
	385 Move X0, 0xB39000
	386 Move X0, [X0+2640]
	387 Call 0x1C17CF4
	388 Move X0, 0xB39000
	389 Move X0, [X0+2648]
	390 Call 0x1C17CF4
	391 Move X0, 0xB39000
	392 Move X0, [X0+400]
	393 Call 0x1C17CF4
	394 Move X0, 0xB39000
	395 Move X0, [X0+2656]
	396 Call 0x1C17CF4
	397 Move X0, 0xB39000
	398 Move X0, [X0+2664]
	399 Call 0x1C17CF4
	400 Move X0, 0xAF2000
	401 Move X0, [X0+2104]
	402 Call 0x1C17CF4
	403 Move X0, 0xB39000
	404 Move X0, [X0+2672]
	405 Call 0x1C17CF4
	406 Move X0, 0xB39000
	407 Move X0, [X0+2680]
	408 Call 0x1C17CF4
	409 Move X0, 0xB39000
	410 Move X0, [X0+2688]
	411 Call 0x1C17CF4
	412 Move X0, 0xB1A000
	413 Move X0, [X0+2856]
	414 Call 0x1C17CF4
	415 Move X0, 0xB39000
	416 Move X0, [X0+2696]
	417 Call 0x1C17CF4
	418 Move X0, 0xB39000
	419 Move X0, [X0+2704]
	420 Call 0x1C17CF4
	421 Move X0, 0xB2D000
	422 Move X0, [X0+2000]
	423 Call 0x1C17CF4
	424 Move X0, 0xB39000
	425 Move X0, [X0+2712]
	426 Call 0x1C17CF4
	427 Move X0, 0xB39000
	428 Move X0, [X0+2720]
	429 Call 0x1C17CF4
	430 Move X0, 0xB39000
	431 Move X0, [X0+2728]
	432 Call 0x1C17CF4
	433 Move X0, 0xB39000
	434 Move X0, [X0+2736]
	435 Call 0x1C17CF4
	436 Move X0, 0xB39000
	437 Move X0, [X0+344]
	438 Call 0x1C17CF4
	439 Move X0, 0xB39000
	440 Move X0, [X0+2744]
	441 Call 0x1C17CF4
	442 Move X0, 0xB39000
	443 Move X0, [X0+2752]
	444 Call 0x1C17CF4
	445 Move X0, 0xB39000
	446 Move X0, [X0+2760]
	447 Call 0x1C17CF4
	448 Move X0, 0xB39000
	449 Move X0, [X0+2768]
	450 Call 0x1C17CF4
	451 Move X0, 0xB39000
	452 Move X0, [X0+2776]
	453 Call 0x1C17CF4
	454 Move X0, 0xB39000
	455 Move X0, [X0+2784]
	456 Call 0x1C17CF4
	457 Move X0, 0xB39000
	458 Move X0, [X0+2792]
	459 Call 0x1C17CF4
	460 Move X0, 0xB39000
	461 Move X0, [X0+2800]
	462 Call 0x1C17CF4
	463 Move X0, 0xB39000
	464 Move X0, [X0+2808]
	465 Call 0x1C17CF4
	466 Move W8, 1
	467 Move [X24+865], W8
	468 Move X0, [X25]
	469 Move W1, 48
	470 Call 0x1C17D6C
	471 Move X8, [X19]
	472 Move X19, X0
	473 Move X0, X8
	474 Call 0x1C17F10
	475 Move X2, [X20]
	476 Move X1, X31
	477 Move X3, X31
	478 Move X20, X0
	479 Call 0x27037B8, X0, X1, X2
	480 Move X0, [X22]
	481 Move X4, [X21]
	482 Move X5, [X23]
	483 Move W2, 1
	484 Move W3, 1
	485 Move X1, X20
	486 Call 0x21ECD64, X0, X1, X2, X3, X4
	487 Compare X19, 0
	488 JumpIfEqual {2103}
	489 Move X20, X0
	490 Compare X0, 0
	491 JumpIfEqual {498}
	492 Move X8, [X19]
	493 Move X0, X20
	494 Move X1, [X8+64]
	495 Call 0x1C17E00
	496 Compare X0, 0
	497 JumpIfEqual {2104}
	498 Move X22, X19
	499 Add X22, X22, 24
	500 Move W8, [X22]
	501 Compare W8, 0
	502 JumpIfEqual {2102}
	503 Move X25, 0xB39000
	504 Move X25, [X25+2456]
	505 Move [X19+32], X20
	506 Move X24, 0xB39000
	507 Move X26, 0xB39000
	508 Move X0, [X25]
	509 Move X23, 0xB39000
	510 Move X24, [X24+2224]
	511 Move X26, [X26+2560]
	512 Move X23, [X23+1952]
	513 Call 0x1C17F10
	514 Move X2, [X24]
	515 Move X1, X31
	516 Move X3, X31
	517 Move X20, X0
	518 Call 0x27037B8, X0, X1, X2
	519 Move X0, [X26]
	520 Move X4, [X21]
	521 Move X5, [X23]
	522 Move W2, 1
	523 Move W3, 1
	524 Move X1, X20
	525 Call 0x21ECD64, X0, X1, X2, X3, X4
	526 Move X20, X0
	527 Compare X0, 0
	528 JumpIfEqual {535}
	529 Move X8, [X19]
	530 Move X0, X20
	531 Move X1, [X8+64]
	532 Call 0x1C17E00
	533 Compare X0, 0
	534 JumpIfEqual {2104}
	535 Move W8, [X22]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move [X19+40], X20
	538 Move X0, [X25]
	539 Move X26, 0xB39000
	540 Move X26, [X26+2536]
	541 Call 0x1C17F10
	542 Move X2, [X24]
	543 Move X1, X31
	544 Move X3, X31
	545 Move X20, X0
	546 Call 0x27037B8, X0, X1, X2
	547 Move X0, [X26]
	548 Move X4, [X21]
	549 Move X5, [X23]
	550 Move W2, 1
	551 Move W3, 1
	552 Move X1, X20
	553 Call 0x21ECD64, X0, X1, X2, X3, X4
	554 Move X20, X0
	555 Compare X0, 0
	556 JumpIfEqual {563}
	557 Move X8, [X19]
	558 Move X0, X20
	559 Move X1, [X8+64]
	560 Call 0x1C17E00
	561 Compare X0, 0
	562 JumpIfEqual {2104}
	563 Move W8, [X22]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move [X19+48], X20
	566 Move X0, [X25]
	567 Move X25, 0xB39000
	568 Move X25, [X25+2504]
	569 Call 0x1C17F10
	570 Move X2, [X24]
	571 Move X1, X31
	572 Move X3, X31
	573 Move X20, X0
	574 Call 0x27037B8, X0, X1, X2
	575 Move X0, [X25]
	576 Move X4, [X21]
	577 Move X5, [X23]
	578 Move W2, 1
	579 Move W3, 1
	580 Move X1, X20
	581 Call 0x21ECD64, X0, X1, X2, X3, X4
	582 Move X20, X0
	583 Compare X0, 0
	584 JumpIfEqual {591}
	585 Move X8, [X19]
	586 Move X0, X20
	587 Move X1, [X8+64]
	588 Call 0x1C17E00
	589 Compare X0, 0
	590 JumpIfEqual {2104}
	591 Move W8, [X22]
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move X27, 0xB39000
	594 Move X27, [X27+2400]
	595 Move [X19+56], X20
	596 Move X26, 0xB39000
	597 Move X23, 0xB39000
	598 Move X0, [X27]
	599 Move X25, 0xB39000
	600 Move X26, [X26+1816]
	601 Move X23, [X23+2712]
	602 Move X25, [X25+1960]
	603 Call 0x1C17F10
	604 Move X2, [X26]
	605 Move X1, X31
	606 Move X3, X31
	607 Move X20, X0
	608 Call 0x27037B8, X0, X1, X2
	609 Move X0, [X23]
	610 Move X4, [X21]
	611 Move X5, [X25]
	612 Move W2, 2
	613 Move W3, 1
	614 Move X1, X20
	615 Call 0x21ECD64, X0, X1, X2, X3, X4
	616 Move X20, X0
	617 Compare X0, 0
	618 JumpIfEqual {625}
	619 Move X8, [X19]
	620 Move X0, X20
	621 Move X1, [X8+64]
	622 Call 0x1C17E00
	623 Compare X0, 0
	624 JumpIfEqual {2104}
	625 Move W8, [X22]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move X8, 0xB39000
	628 Move X8, [X8+2320]
	629 Move [X19+64], X20
	630 Move X20, 0xB39000
	631 Move X23, 0xB39000
	632 Move X0, [X8]
	633 Move X24, 0xB39000
	634 Move X20, [X20+2232]
	635 Move X23, [X23+2664]
	636 Move X24, [X24+2112]
	637 Call 0x1C17F10
	638 Move X2, [X20]
	639 Move X1, X31
	640 Move X3, X31
	641 Move X20, X0
	642 Call TryParseDelegate`1<TimeSpan>..ctor, X0, X1, X2
	643 Move X0, [X23]
	644 Move X4, [X24]
	645 Move W2, 2
	646 Move X1, X20
	647 Move X3, X31
	648 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	649 Move X20, X0
	650 Compare X0, 0
	651 JumpIfEqual {658}
	652 Move X8, [X19]
	653 Move X0, X20
	654 Move X1, [X8+64]
	655 Call 0x1C17E00
	656 Compare X0, 0
	657 JumpIfEqual {2104}
	658 Move W8, [X22]
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move [X19+72], X20
	661 Move X0, [X27]
	662 Move X23, 0xB39000
	663 Move X23, [X23+2600]
	664 Call 0x1C17F10
	665 Move X2, [X26]
	666 Move X1, X31
	667 Move X3, X31
	668 Move X20, X0
	669 Call 0x27037B8, X0, X1, X2
	670 Move X0, [X23]
	671 Move X4, [X21]
	672 Move X5, [X25]
	673 Move W2, 4
	674 Move X1, X20
	675 Move W3, W31
	676 Call 0x21ECD64, X0, X1, X2, X3, X4
	677 Move X20, X0
	678 Compare X0, 0
	679 JumpIfEqual {686}
	680 Move X8, [X19]
	681 Move X0, X20
	682 Move X1, [X8+64]
	683 Call 0x1C17E00
	684 Compare X0, 0
	685 JumpIfEqual {2104}
	686 Move W8, [X22]
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Move X8, 0xB39000
	689 Move X8, [X8+2336]
	690 Move [X19+80], X20
	691 Move X20, 0xB39000
	692 Move X23, 0xB2D000
	693 Move X0, [X8]
	694 Move X24, 0xB39000
	695 Move X20, [X20+1792]
	696 Move X23, [X23+2000]
	697 Move X24, [X24+2000]
	698 Call 0x1C17F10
	699 Move X2, [X20]
	700 Move X1, X31
	701 Move X3, X31
	702 Move X20, X0
	703 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	704 Move X0, [X23]
	705 Move X4, [X24]
	706 Move W2, 1
	707 Move X1, X20
	708 Move X3, X31
	709 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	710 Move X20, X0
	711 Compare X0, 0
	712 JumpIfEqual {719}
	713 Move X8, [X19]
	714 Move X0, X20
	715 Move X1, [X8+64]
	716 Call 0x1C17E00
	717 Compare X0, 0
	718 JumpIfEqual {2104}
	719 Move W8, [X22]
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Move X8, 0xB39000
	722 Move X8, [X8+2304]
	723 Move [X19+88], X20
	724 Move X20, 0xB39000
	725 Move X23, 0xB39000
	726 Move X0, [X8]
	727 Move X24, 0xB39000
	728 Move X20, [X20+1808]
	729 Move X23, [X23+2656]
	730 Move X24, [X24+2016]
	731 Call 0x1C17F10
	732 Move X2, [X20]
	733 Move X1, X31
	734 Move X3, X31
	735 Move X20, X0
	736 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	737 Move X0, [X23]
	738 Move X4, [X24]
	739 Move W2, 3
	740 Move X1, X20
	741 Move X3, X31
	742 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	743 Move X20, X0
	744 Compare X0, 0
	745 JumpIfEqual {752}
	746 Move X8, [X19]
	747 Move X0, X20
	748 Move X1, [X8+64]
	749 Call 0x1C17E00
	750 Compare X0, 0
	751 JumpIfEqual {2104}
	752 Move W8, [X22]
	753 NotImplemented "Instruction CMP not yet implemented."
	754 Move [X19+96], X20
	755 Move X0, [X27]
	756 Move X23, 0xB39000
	757 Move X23, [X23+344]
	758 Call 0x1C17F10
	759 Move X2, [X26]
	760 Move X1, X31
	761 Move X3, X31
	762 Move X20, X0
	763 Call 0x27037B8, X0, X1, X2
	764 Move X0, [X23]
	765 Move X4, [X21]
	766 Move X5, [X25]
	767 Move W2, 3
	768 Move W3, 1
	769 Move X1, X20
	770 Call 0x21ECD64, X0, X1, X2, X3, X4
	771 Move X20, X0
	772 Compare X0, 0
	773 JumpIfEqual {780}
	774 Move X8, [X19]
	775 Move X0, X20
	776 Move X1, [X8+64]
	777 Call 0x1C17E00
	778 Compare X0, 0
	779 JumpIfEqual {2104}
	780 Move W8, [X22]
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X8, 0xB39000
	783 Move X8, [X8+2352]
	784 Move [X19+104], X20
	785 Move X20, 0xB39000
	786 Move X23, 0xB39000
	787 Move X0, [X8]
	788 Move X24, 0xB39000
	789 Move X20, [X20+1824]
	790 Move X23, [X23+2728]
	791 Move X24, [X24+2024]
	792 Call 0x1C17F10
	793 Move X2, [X20]
	794 Move X1, X31
	795 Move X3, X31
	796 Move X20, X0
	797 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	798 Move X0, [X23]
	799 Move X4, [X24]
	800 Move W2, 4
	801 Move X1, X20
	802 Move X3, X31
	803 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	804 Move X20, X0
	805 Compare X0, 0
	806 JumpIfEqual {813}
	807 Move X8, [X19]
	808 Move X0, X20
	809 Move X1, [X8+64]
	810 Call 0x1C17E00
	811 Compare X0, 0
	812 JumpIfEqual {2104}
	813 Move W8, [X22]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move [X19+112], X20
	816 Move X0, [X27]
	817 Move X23, 0xB39000
	818 Move X23, [X23+1744]
	819 Call 0x1C17F10
	820 Move X2, [X26]
	821 Move X1, X31
	822 Move X3, X31
	823 Move X20, X0
	824 Call 0x27037B8, X0, X1, X2
	825 Move X0, [X23]
	826 Move X4, [X21]
	827 Move X5, [X25]
	828 Move W2, 4
	829 Move W3, 1
	830 Move X1, X20
	831 Call 0x21ECD64, X0, X1, X2, X3, X4
	832 Move X20, X0
	833 Compare X0, 0
	834 JumpIfEqual {841}
	835 Move X8, [X19]
	836 Move X0, X20
	837 Move X1, [X8+64]
	838 Call 0x1C17E00
	839 Compare X0, 0
	840 JumpIfEqual {2104}
	841 Move W8, [X22]
	842 NotImplemented "Instruction CMP not yet implemented."
	843 Move [X19+120], X20
	844 Move X0, [X27]
	845 Move X23, 0xB39000
	846 Move X23, [X23+2752]
	847 Call 0x1C17F10
	848 Move X2, [X26]
	849 Move X1, X31
	850 Move X3, X31
	851 Move X20, X0
	852 Call 0x27037B8, X0, X1, X2
	853 Move X0, [X23]
	854 Move X4, [X21]
	855 Move X5, [X25]
	856 Move W2, 4
	857 Move W3, 1
	858 Move X1, X20
	859 Call 0x21ECD64, X0, X1, X2, X3, X4
	860 Move X20, X0
	861 Compare X0, 0
	862 JumpIfEqual {869}
	863 Move X8, [X19]
	864 Move X0, X20
	865 Move X1, [X8+64]
	866 Call 0x1C17E00
	867 Compare X0, 0
	868 JumpIfEqual {2104}
	869 Move W8, [X22]
	870 NotImplemented "Instruction CMP not yet implemented."
	871 Move X8, 0xB39000
	872 Move X8, [X8+2288]
	873 Move [X19+128], X20
	874 Move X20, 0xB39000
	875 Move X23, 0xB1A000
	876 Move X0, [X8]
	877 Move X24, 0xB39000
	878 Move X20, [X20+2144]
	879 Move X23, [X23+2856]
	880 Move X24, [X24+2064]
	881 Call 0x1C17F10
	882 Move X2, [X20]
	883 Move X1, X31
	884 Move X3, X31
	885 Move X20, X0
	886 Call TryParseDelegate`1<Int64>..ctor, X0, X1, X2
	887 Move X0, [X23]
	888 Move X4, [X24]
	889 Move W2, 4
	890 Move X1, X20
	891 Move X3, X31
	892 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	893 Move X20, X0
	894 Compare X0, 0
	895 JumpIfEqual {902}
	896 Move X8, [X19]
	897 Move X0, X20
	898 Move X1, [X8+64]
	899 Call 0x1C17E00
	900 Compare X0, 0
	901 JumpIfEqual {2104}
	902 Move W8, [X22]
	903 NotImplemented "Instruction CMP not yet implemented."
	904 Move X8, 0xB39000
	905 Move X8, [X8+2312]
	906 Move [X19+136], X20
	907 Move X20, 0xB39000
	908 Move X23, 0xB39000
	909 Move X0, [X8]
	910 Move X21, 0xB39000
	911 Move X20, [X20+2480]
	912 Move X23, [X23+2704]
	913 Move X21, [X21+2120]
	914 Call 0x1C17F10
	915 Move X2, [X20]
	916 Move X1, X31
	917 Move X3, X31
	918 Move X20, X0
	919 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	920 Move X0, [X23]
	921 Move X4, [X21]
	922 Move W2, 4
	923 Move X1, X20
	924 Move X3, X31
	925 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	926 Move X20, X0
	927 Compare X0, 0
	928 JumpIfEqual {935}
	929 Move X8, [X19]
	930 Move X0, X20
	931 Move X1, [X8+64]
	932 Call 0x1C17E00
	933 Compare X0, 0
	934 JumpIfEqual {2104}
	935 Move W8, [X22]
	936 NotImplemented "Instruction CMP not yet implemented."
	937 Move X8, 0xB39000
	938 Move X8, [X8+2376]
	939 Move [X19+144], X20
	940 Move X20, 0xB39000
	941 Move X23, 0xB39000
	942 Move X0, [X8]
	943 Move X24, 0xB39000
	944 Move X20, [X20+2152]
	945 Move X23, [X23+2616]
	946 Move X24, [X24+2008]
	947 Call 0x1C17F10
	948 Move X2, [X20]
	949 Move X1, X31
	950 Move X3, X31
	951 Move X20, X0
	952 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	953 Move X0, [X23]
	954 Move X4, [X24]
	955 Move W2, 4
	956 Move X1, X20
	957 Move X3, X31
	958 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	959 Move X20, X0
	960 Compare X0, 0
	961 JumpIfEqual {968}
	962 Move X8, [X19]
	963 Move X0, X20
	964 Move X1, [X8+64]
	965 Call 0x1C17E00
	966 Compare X0, 0
	967 JumpIfEqual {2104}
	968 Move W8, [X22]
	969 NotImplemented "Instruction CMP not yet implemented."
	970 Move X8, 0xB39000
	971 Move X8, [X8+2296]
	972 Move [X19+152], X20
	973 Move X20, 0xB39000
	974 Move X23, 0xB39000
	975 Move X0, [X8]
	976 Move X24, 0xB39000
	977 Move X20, [X20+1832]
	978 Move X23, [X23+2808]
	979 Move X24, [X24+2032]
	980 Call 0x1C17F10
	981 Move X2, [X20]
	982 Move X1, X31
	983 Move X3, X31
	984 Move X20, X0
	985 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	986 Move X0, [X23]
	987 Move X4, [X24]
	988 Move W2, 4
	989 Move X1, X20
	990 Move X3, X31
	991 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	992 Move X20, X0
	993 Compare X0, 0
	994 JumpIfEqual {1001}
	995 Move X8, [X19]
	996 Move X0, X20
	997 Move X1, [X8+64]
	998 Call 0x1C17E00
	999 Compare X0, 0
	1000 JumpIfEqual {2104}
	1001 Move W8, [X22]
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Move X8, 0xB38000
	1004 Move X8, [X8+2280]
	1005 Move [X19+160], X20
	1006 Move X20, 0xB38000
	1007 Move X23, 0xB2C000
	1008 Move X0, [X8]
	1009 Move X24, 0xB38000
	1010 Move X20, [X20+2160]
	1011 Move X23, [X23+2440]
	1012 Move X24, [X24+2072]
	1013 Call 0x1C17F10
	1014 Move X2, [X20]
	1015 Move X1, X31
	1016 Move X3, X31
	1017 Move X20, X0
	1018 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1019 Move X0, [X23]
	1020 Move X4, [X24]
	1021 Move W2, 4
	1022 Move X1, X20
	1023 Move X3, X31
	1024 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1025 Move X20, X0
	1026 Compare X0, 0
	1027 JumpIfEqual {1034}
	1028 Move X8, [X19]
	1029 Move X0, X20
	1030 Move X1, [X8+64]
	1031 Call 0x1C17E00
	1032 Compare X0, 0
	1033 JumpIfEqual {2104}
	1034 Move W8, [X22]
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Move X27, 0xB38000
	1037 Move X27, [X27+2344]
	1038 Move X29, 0xB38000
	1039 Move X29, [X29+1840]
	1040 Move [X19+168], X20
	1041 Move X0, [X27]
	1042 Move X28, 0xB38000
	1043 Move X23, 0xB38000
	1044 Move X26, 0xB38000
	1045 Move X28, [X28+1848]
	1046 Move X23, [X23+2584]
	1047 Move X26, [X26+2040]
	1048 Call 0x1C17F10
	1049 Move X2, [X29]
	1050 Move X1, X31
	1051 Move X3, X31
	1052 Move X20, X0
	1053 Call 0x2703380, X0, X1, X2
	1054 Move X0, [X28]
	1055 Move W8, [X0+224]
	1056 Compare W8, 0
	1057 JumpIfNotEqual {1060}
	1058 Call 0x1C17DFC
	1059 Move X0, [X28]
	1060 Move X8, [X0+184]
	1061 Move X0, [X23]
	1062 Move X4, [X26]
	1063 Move W2, 3
	1064 Move X3, [X8]
	1065 Move X1, X20
	1066 Call 0x21ECDF0, X0, X1, X2, X3
	1067 Move X20, X0
	1068 Compare X0, 0
	1069 JumpIfEqual {1076}
	1070 Move X8, [X19]
	1071 Move X0, X20
	1072 Move X1, [X8+64]
	1073 Call 0x1C17E00
	1074 Compare X0, 0
	1075 JumpIfEqual {2104}
	1076 Move W8, [X22]
	1077 NotImplemented "Instruction CMP not yet implemented."
	1078 Move X8, 0xB38000
	1079 Move X8, [X8+2264]
	1080 Move [X19+176], X20
	1081 Move X20, 0xB38000
	1082 Move X23, 0xB38000
	1083 Move X0, [X8]
	1084 Move X24, 0xB38000
	1085 Move X20, [X20+1888]
	1086 Move X23, [X23+2576]
	1087 Move X24, [X24+2048]
	1088 Call 0x1C17F10
	1089 Move X2, [X20]
	1090 Move X1, X31
	1091 Move X3, X31
	1092 Move X20, X0
	1093 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1094 Move X0, [X23]
	1095 Move X4, [X24]
	1096 Move W2, 2
	1097 Move X1, X20
	1098 Move X3, X31
	1099 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1100 Move X20, X0
	1101 Compare X0, 0
	1102 JumpIfEqual {1109}
	1103 Move X8, [X19]
	1104 Move X0, X20
	1105 Move X1, [X8+64]
	1106 Call 0x1C17E00
	1107 Compare X0, 0
	1108 JumpIfEqual {2104}
	1109 Move W8, [X22]
	1110 NotImplemented "Instruction CMP not yet implemented."
	1111 Move X8, 0xB38000
	1112 Move X8, [X8+2472]
	1113 Move [X19+184], X20
	1114 Move X20, 0xB38000
	1115 Move X23, 0xB38000
	1116 Move X0, [X8]
	1117 Move X24, 0xB38000
	1118 Move X20, [X20+2176]
	1119 Move X23, [X23+2776]
	1120 Move X24, [X24+1928]
	1121 Call 0x1C17F10
	1122 Move X2, [X20]
	1123 Move X1, X31
	1124 Move X3, X31
	1125 Move X20, X0
	1126 Call 0x27037B8, X0, X1, X2
	1127 Move X8, 0xAF1000
	1128 Move X0, [X23]
	1129 Move X8, [X8+2104]
	1130 Move X5, [X24]
	1131 Move W2, 1
	1132 Move W3, 1
	1133 Move X4, [X8]
	1134 Move X1, X20
	1135 Call 0x21ECD64, X0, X1, X2, X3, X4
	1136 Move X20, X0
	1137 Compare X0, 0
	1138 JumpIfEqual {1145}
	1139 Move X8, [X19]
	1140 Move X0, X20
	1141 Move X1, [X8+64]
	1142 Call 0x1C17E00
	1143 Compare X0, 0
	1144 JumpIfEqual {2104}
	1145 Move W8, [X22]
	1146 NotImplemented "Instruction CMP not yet implemented."
	1147 Move [X19+192], X20
	1148 Move X0, [X27]
	1149 Move X23, 0xB38000
	1150 Move X23, [X23+2680]
	1151 Call 0x1C17F10
	1152 Move X2, [X29]
	1153 Move X1, X31
	1154 Move X3, X31
	1155 Move X20, X0
	1156 Call 0x2703380, X0, X1, X2
	1157 Move X8, [X28]
	1158 Move X0, [X23]
	1159 Move X4, [X26]
	1160 Move W2, 4
	1161 Move X8, [X8+184]
	1162 Move X1, X20
	1163 Move X3, [X8]
	1164 Call 0x21ECDF0, X0, X1, X2, X3
	1165 Move X20, X0
	1166 Compare X0, 0
	1167 JumpIfEqual {1174}
	1168 Move X8, [X19]
	1169 Move X0, X20
	1170 Move X1, [X8+64]
	1171 Call 0x1C17E00
	1172 Compare X0, 0
	1173 JumpIfEqual {2104}
	1174 Move W8, [X22]
	1175 NotImplemented "Instruction CMP not yet implemented."
	1176 Move X24, 0xB38000
	1177 Move X24, [X24+2272]
	1178 Move [X19+200], X20
	1179 Move X20, 0xB38000
	1180 Move X25, 0xB38000
	1181 Move X0, [X24]
	1182 Move X23, 0xB38000
	1183 Move X20, [X20+1880]
	1184 Move X25, [X25+2672]
	1185 Move X23, [X23+2104]
	1186 Call 0x1C17F10
	1187 Move X2, [X20]
	1188 Move X1, X31
	1189 Move X3, X31
	1190 Move X20, X0
	1191 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1192 Move X0, [X25]
	1193 Move X4, [X23]
	1194 Move W2, 1
	1195 Move X1, X20
	1196 Move X3, X31
	1197 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1198 Move X20, X0
	1199 Compare X0, 0
	1200 JumpIfEqual {1207}
	1201 Move X8, [X19]
	1202 Move X0, X20
	1203 Move X1, [X8+64]
	1204 Call 0x1C17E00
	1205 Compare X0, 0
	1206 JumpIfEqual {2104}
	1207 Move W8, [X22]
	1208 NotImplemented "Instruction CMP not yet implemented."
	1209 Move [X19+208], X20
	1210 Move X0, [X24]
	1211 Move X20, 0xB38000
	1212 Move X24, 0xB38000
	1213 Move X20, [X20+2128]
	1214 Move X24, [X24+392]
	1215 Call 0x1C17F10
	1216 Move X2, [X20]
	1217 Move X1, X31
	1218 Move X3, X31
	1219 Move X20, X0
	1220 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1221 Move X0, [X24]
	1222 Move X4, [X23]
	1223 Move W2, 1
	1224 Move X1, X20
	1225 Move X3, X31
	1226 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1227 Move X20, X0
	1228 Compare X0, 0
	1229 JumpIfEqual {1236}
	1230 Move X8, [X19]
	1231 Move X0, X20
	1232 Move X1, [X8+64]
	1233 Call 0x1C17E00
	1234 Compare X0, 0
	1235 JumpIfEqual {2104}
	1236 Move W8, [X22]
	1237 NotImplemented "Instruction CMP not yet implemented."
	1238 Move X25, 0xB38000
	1239 Move X25, [X25+2448]
	1240 Move [X19+216], X20
	1241 Move X24, 0xB38000
	1242 Move X21, 0xB38000
	1243 Move X0, [X25]
	1244 Move X23, 0xB38000
	1245 Move X24, [X24+1896]
	1246 Move X21, [X21+2648]
	1247 Move X23, [X23+1912]
	1248 Call 0x1C17F10
	1249 Move X2, [X24]
	1250 Move X1, X31
	1251 Move X3, X31
	1252 Move X20, X0
	1253 Call 0x27037B8, X0, X1, X2
	1254 Move X8, 0xAF1000
	1255 Move X0, [X21]
	1256 Move X8, [X8+2104]
	1257 Move X5, [X23]
	1258 Move W2, 1
	1259 Move W3, 1
	1260 Move X4, [X8]
	1261 Move X1, X20
	1262 Call 0x21ECD64, X0, X1, X2, X3, X4
	1263 Move X20, X0
	1264 Compare X0, 0
	1265 JumpIfEqual {1272}
	1266 Move X8, [X19]
	1267 Move X0, X20
	1268 Move X1, [X8+64]
	1269 Call 0x1C17E00
	1270 Compare X0, 0
	1271 JumpIfEqual {2104}
	1272 Move W8, [X22]
	1273 NotImplemented "Instruction CMP not yet implemented."
	1274 Move [X19+224], X20
	1275 Move X0, [X27]
	1276 Move X21, 0xB38000
	1277 Move X21, [X21+2720]
	1278 Call 0x1C17F10
	1279 Move X2, [X29]
	1280 Move X1, X31
	1281 Move X3, X31
	1282 Move X20, X0
	1283 Call 0x2703380, X0, X1, X2
	1284 Move X8, [X28]
	1285 Move X0, [X21]
	1286 Move X4, [X26]
	1287 Move W2, 1
	1288 Move X8, [X8+184]
	1289 Move X1, X20
	1290 Move X3, [X8]
	1291 Call 0x21ECDF0, X0, X1, X2, X3
	1292 Move X20, X0
	1293 Compare X0, 0
	1294 JumpIfEqual {1301}
	1295 Move X8, [X19]
	1296 Move X0, X20
	1297 Move X1, [X8+64]
	1298 Call 0x1C17E00
	1299 Compare X0, 0
	1300 JumpIfEqual {2104}
	1301 Move W8, [X22]
	1302 NotImplemented "Instruction CMP not yet implemented."
	1303 Move [X19+232], X20
	1304 Move X0, [X25]
	1305 Move X21, 0xB38000
	1306 Move X21, [X21+2784]
	1307 Call 0x1C17F10
	1308 Move X2, [X24]
	1309 Move X1, X31
	1310 Move X3, X31
	1311 Move X20, X0
	1312 Call 0x27037B8, X0, X1, X2
	1313 Move X8, 0xAF1000
	1314 Move X0, [X21]
	1315 Move X8, [X8+2104]
	1316 Move X5, [X23]
	1317 Move W2, 1
	1318 Move W3, 1
	1319 Move X4, [X8]
	1320 Move X1, X20
	1321 Call 0x21ECD64, X0, X1, X2, X3, X4
	1322 Move X20, X0
	1323 Compare X0, 0
	1324 JumpIfEqual {1331}
	1325 Move X8, [X19]
	1326 Move X0, X20
	1327 Move X1, [X8+64]
	1328 Call 0x1C17E00
	1329 Compare X0, 0
	1330 JumpIfEqual {2104}
	1331 Move W8, [X22]
	1332 Move X25, 0xB38000
	1333 Move X25, [X25+2120]
	1334 NotImplemented "Instruction CMP not yet implemented."
	1335 Move X8, 0xB38000
	1336 Move X8, [X8+2256]
	1337 Move [X19+240], X20
	1338 Move X20, 0xB38000
	1339 Move X21, 0xB38000
	1340 Move X0, [X8]
	1341 Move X23, 0xB38000
	1342 Move X20, [X20+2200]
	1343 Move X21, [X21+2640]
	1344 Move X23, [X23+2080]
	1345 Call 0x1C17F10
	1346 Move X2, [X20]
	1347 Move X1, X31
	1348 Move X3, X31
	1349 Move X20, X0
	1350 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1351 Move X0, [X21]
	1352 Move X4, [X23]
	1353 Move W2, 1
	1354 Move X1, X20
	1355 Move X3, X31
	1356 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1357 Move X20, X0
	1358 Compare X0, 0
	1359 JumpIfEqual {1366}
	1360 Move X8, [X19]
	1361 Move X0, X20
	1362 Move X1, [X8+64]
	1363 Call 0x1C17E00
	1364 Compare X0, 0
	1365 JumpIfEqual {2104}
	1366 Move W8, [X22]
	1367 NotImplemented "Instruction CMP not yet implemented."
	1368 Move [X19+248], X20
	1369 Move X0, [X27]
	1370 Move X21, 0xB38000
	1371 Move X21, [X21+2744]
	1372 Call 0x1C17F10
	1373 Move X2, [X29]
	1374 Move X1, X31
	1375 Move X3, X31
	1376 Move X20, X0
	1377 Call 0x2703380, X0, X1, X2
	1378 Move X8, [X28]
	1379 Move X0, [X21]
	1380 Move X4, [X26]
	1381 Move W2, 1
	1382 Move X8, [X8+184]
	1383 Move X1, X20
	1384 Move X3, [X8]
	1385 Call 0x21ECDF0, X0, X1, X2, X3
	1386 Move X20, X0
	1387 Compare X0, 0
	1388 JumpIfEqual {1395}
	1389 Move X8, [X19]
	1390 Move X0, X20
	1391 Move X1, [X8+64]
	1392 Call 0x1C17E00
	1393 Compare X0, 0
	1394 JumpIfEqual {2104}
	1395 Move W8, [X22]
	1396 NotImplemented "Instruction CMP not yet implemented."
	1397 Move [X19+256], X20
	1398 Move X0, [X27]
	1399 Move X21, 0xB38000
	1400 Move X21, [X21+2696]
	1401 Call 0x1C17F10
	1402 Move X2, [X29]
	1403 Move X1, X31
	1404 Move X3, X31
	1405 Move X20, X0
	1406 Call 0x2703380, X0, X1, X2
	1407 Move X8, [X28]
	1408 Move X0, [X21]
	1409 Move X4, [X26]
	1410 Move W2, 4
	1411 Move X8, [X8+184]
	1412 Move X1, X20
	1413 Move X3, [X8]
	1414 Call 0x21ECDF0, X0, X1, X2, X3
	1415 Move X20, X0
	1416 Compare X0, 0
	1417 JumpIfEqual {1424}
	1418 Move X8, [X19]
	1419 Move X0, X20
	1420 Move X1, [X8+64]
	1421 Call 0x1C17E00
	1422 Compare X0, 0
	1423 JumpIfEqual {2104}
	1424 Move W8, [X22]
	1425 Move X24, 0xAF1000
	1426 Move X27, 0xB38000
	1427 Move X28, 0xB38000
	1428 Move X24, [X24+2104]
	1429 Move X27, [X27+2480]
	1430 Move X28, [X28+2312]
	1431 NotImplemented "Instruction CMP not yet implemented."
	1432 Move [X19+264], X20
	1433 Move X0, [X28]
	1434 Move X21, 0xB38000
	1435 Move X21, [X21+2528]
	1436 Call 0x1C17F10
	1437 Move X2, [X27]
	1438 Move X1, X31
	1439 Move X3, X31
	1440 Move X20, X0
	1441 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1442 Move X0, [X21]
	1443 Move X4, [X25]
	1444 Move W2, 2
	1445 Move X1, X20
	1446 Move X3, X31
	1447 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1448 Move X20, X0
	1449 Compare X0, 0
	1450 JumpIfEqual {1457}
	1451 Move X8, [X19]
	1452 Move X0, X20
	1453 Move X1, [X8+64]
	1454 Call 0x1C17E00
	1455 Compare X0, 0
	1456 JumpIfEqual {2104}
	1457 Move W8, [X22]
	1458 NotImplemented "Instruction CMP not yet implemented."
	1459 Move X8, 0xB38000
	1460 Move X8, [X8+2368]
	1461 Move [X19+272], X20
	1462 Move X20, 0xB38000
	1463 Move X21, 0xB38000
	1464 Move X0, [X8]
	1465 Move X23, 0xB38000
	1466 Move X20, [X20+2136]
	1467 Move X21, [X21+2592]
	1468 Move X23, [X23+2056]
	1469 Call 0x1C17F10
	1470 Move X2, [X20]
	1471 Move X1, X31
	1472 Move X3, X31
	1473 Move X20, X0
	1474 Call TryParseDelegate`1<Int32>..ctor, X0, X1, X2
	1475 Move X0, [X21]
	1476 Move X4, [X23]
	1477 Move W2, 1
	1478 Move X1, X20
	1479 Move X3, X31
	1480 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1481 Move X20, X0
	1482 Compare X0, 0
	1483 JumpIfEqual {1490}
	1484 Move X8, [X19]
	1485 Move X0, X20
	1486 Move X1, [X8+64]
	1487 Call 0x1C17E00
	1488 Compare X0, 0
	1489 JumpIfEqual {2104}
	1490 Move W8, [X22]
	1491 NotImplemented "Instruction CMP not yet implemented."
	1492 Move X8, 0xB38000
	1493 Move X8, [X8+2416]
	1494 Move [X19+280], X20
	1495 Move X20, 0xB38000
	1496 Move X21, 0xB38000
	1497 Move X0, [X8]
	1498 Move X23, 0xB38000
	1499 Move X20, [X20+2168]
	1500 Move X21, [X21+2552]
	1501 Move X23, [X23+1920]
	1502 Call 0x1C17F10
	1503 Move X2, [X20]
	1504 Move X1, X31
	1505 Move X3, X31
	1506 Move X20, X0
	1507 Call 0x27037B8, X0, X1, X2
	1508 Move X0, [X21]
	1509 Move X4, [X24]
	1510 Move X5, [X23]
	1511 Move W2, 3
	1512 Move W3, 1
	1513 Move X1, X20
	1514 Call 0x21ECD64, X0, X1, X2, X3, X4
	1515 Move X20, X0
	1516 Compare X0, 0
	1517 JumpIfEqual {1524}
	1518 Move X8, [X19]
	1519 Move X0, X20
	1520 Move X1, [X8+64]
	1521 Call 0x1C17E00
	1522 Compare X0, 0
	1523 JumpIfEqual {2104}
	1524 Move W8, [X22]
	1525 NotImplemented "Instruction CMP not yet implemented."
	1526 Move X26, 0xB38000
	1527 Move X26, [X26+2424]
	1528 Move [X19+288], X20
	1529 Move X29, 0xB38000
	1530 Move X21, 0xB38000
	1531 Move X0, [X26]
	1532 Move X23, 0xB38000
	1533 Move X29, [X29+1800]
	1534 Move X21, [X21+2760]
	1535 Move X23, [X23+1904]
	1536 Call 0x1C17F10
	1537 Move X2, [X29]
	1538 Move X1, X31
	1539 Move X3, X31
	1540 Move X20, X0
	1541 Call 0x27037B8, X0, X1, X2
	1542 Move X0, [X21]
	1543 Move X4, [X24]
	1544 Move X5, [X23]
	1545 Move W2, 2
	1546 Move W3, 1
	1547 Move X1, X20
	1548 Call 0x21ECD64, X0, X1, X2, X3, X4
	1549 Move X20, X0
	1550 Compare X0, 0
	1551 JumpIfEqual {1558}
	1552 Move X8, [X19]
	1553 Move X0, X20
	1554 Move X1, [X8+64]
	1555 Call 0x1C17E00
	1556 Compare X0, 0
	1557 JumpIfEqual {2104}
	1558 Move W8, [X22]
	1559 NotImplemented "Instruction CMP not yet implemented."
	1560 Move [X19+296], X20
	1561 Move X8, 0xB38000
	1562 Move X8, [X8+2336]
	1563 Move X21, 0xB38000
	1564 Move X0, [X8]
	1565 Move X21, [X21+2736]
	1566 Call 0x1C17F10
	1567 Move X8, 0xB38000
	1568 Move X8, [X8+1792]
	1569 Move X1, X31
	1570 Move X3, X31
	1571 Move X20, X0
	1572 Move X2, [X8]
	1573 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1574 Move X8, 0xB38000
	1575 Move X0, [X21]
	1576 Move X8, [X8+2000]
	1577 Move W2, 1
	1578 Move X1, X20
	1579 Move X3, X31
	1580 Move X4, [X8]
	1581 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1582 Move X20, X0
	1583 Compare X0, 0
	1584 JumpIfEqual {1591}
	1585 Move X8, [X19]
	1586 Move X0, X20
	1587 Move X1, [X8+64]
	1588 Call 0x1C17E00
	1589 Compare X0, 0
	1590 JumpIfEqual {2104}
	1591 Move W8, [X22]
	1592 NotImplemented "Instruction CMP not yet implemented."
	1593 Move X8, 0xB38000
	1594 Move X8, [X8+2328]
	1595 Move [X19+304], X20
	1596 Move X20, 0xB38000
	1597 Move X21, 0xB38000
	1598 Move X0, [X8]
	1599 Move X23, 0xB38000
	1600 Move X20, [X20+2208]
	1601 Move X21, [X21+2792]
	1602 Move X23, [X23+2088]
	1603 Call 0x1C17F10
	1604 Move X2, [X20]
	1605 Move X1, X31
	1606 Move X3, X31
	1607 Move X20, X0
	1608 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1609 Move X0, [X21]
	1610 Move X4, [X23]
	1611 Move W2, 1
	1612 Move X1, X20
	1613 Move X3, X31
	1614 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1615 Move X20, X0
	1616 Compare X0, 0
	1617 JumpIfEqual {1624}
	1618 Move X8, [X19]
	1619 Move X0, X20
	1620 Move X1, [X8+64]
	1621 Call 0x1C17E00
	1622 Compare X0, 0
	1623 JumpIfEqual {2104}
	1624 Move W8, [X22]
	1625 NotImplemented "Instruction CMP not yet implemented."
	1626 Move [X19+312], X20
	1627 Move X0, [X28]
	1628 Move X21, 0xB38000
	1629 Move X21, [X21+2544]
	1630 Call 0x1C17F10
	1631 Move X2, [X27]
	1632 Move X1, X31
	1633 Move X3, X31
	1634 Move X20, X0
	1635 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1636 Move X0, [X21]
	1637 Move X4, [X25]
	1638 Move W2, 1
	1639 Move X1, X20
	1640 Move X3, X31
	1641 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1642 Move X20, X0
	1643 Compare X0, 0
	1644 JumpIfEqual {1651}
	1645 Move X8, [X19]
	1646 Move X0, X20
	1647 Move X1, [X8+64]
	1648 Call 0x1C17E00
	1649 Compare X0, 0
	1650 JumpIfEqual {2104}
	1651 Move W8, [X22]
	1652 NotImplemented "Instruction CMP not yet implemented."
	1653 Move X8, 0xB38000
	1654 Move X8, [X8+2360]
	1655 Move [X19+320], X20
	1656 Move X20, 0xB38000
	1657 Move X21, 0xB38000
	1658 Move X0, [X8]
	1659 Move X23, 0xB38000
	1660 Move X20, [X20+2216]
	1661 Move X21, [X21+2512]
	1662 Move X23, [X23+2096]
	1663 Call 0x1C17F10
	1664 Move X2, [X20]
	1665 Move X1, X31
	1666 Move X3, X31
	1667 Move X20, X0
	1668 Call TryParseDelegate`1<Object>..ctor, X0, X1, X2
	1669 Move X0, [X21]
	1670 Move X4, [X23]
	1671 Move W2, 2
	1672 Move X1, X20
	1673 Move X3, X31
	1674 Call HeaderInfo.CreateSingle, X0, X1, X2, X3
	1675 Move X20, X0
	1676 Compare X0, 0
	1677 JumpIfEqual {1684}
	1678 Move X8, [X19]
	1679 Move X0, X20
	1680 Move X1, [X8+64]
	1681 Call 0x1C17E00
	1682 Compare X0, 0
	1683 JumpIfEqual {2104}
	1684 Move W8, [X22]
	1685 NotImplemented "Instruction CMP not yet implemented."
	1686 Move X25, 0xB38000
	1687 Move X25, [X25+2432]
	1688 Move X24, 0xB38000
	1689 Move X24, [X24+2192]
	1690 Move [X19+328], X20
	1691 Move X0, [X25]
	1692 Move X21, 0xB38000
	1693 Move X23, 0xAF1000
	1694 Move X27, 0xB38000
	1695 Move X21, [X21+2520]
	1696 Move X23, [X23+3544]
	1697 Move X27, [X27+1944]
	1698 Call 0x1C17F10
	1699 Move X2, [X24]
	1700 Move X1, X31
	1701 Move X3, X31
	1702 Move X20, X0
	1703 Call 0x27037B8, X0, X1, X2
	1704 Move X0, [X21]
	1705 Move X4, [X23]
	1706 Move X5, [X27]
	1707 Move W2, 2
	1708 Move W3, 1
	1709 Move X1, X20
	1710 Call 0x21ECD64, X0, X1, X2, X3, X4
	1711 Move X20, X0
	1712 Compare X0, 0
	1713 JumpIfEqual {1720}
	1714 Move X8, [X19]
	1715 Move X0, X20
	1716 Move X1, [X8+64]
	1717 Call 0x1C17E00
	1718 Compare X0, 0
	1719 JumpIfEqual {2104}
	1720 Move W8, [X22]
	1721 NotImplemented "Instruction CMP not yet implemented."
	1722 Move X8, 0xB38000
	1723 Move X8, [X8+2408]
	1724 Move [X19+336], X20
	1725 Move X20, 0xB38000
	1726 Move X21, 0xB38000
	1727 Move X0, [X8]
	1728 Move X28, 0xB38000
	1729 Move X20, [X20+2248]
	1730 Move X21, [X21+2624]
	1731 Move X28, [X28+1976]
	1732 Call 0x1C17F10
	1733 Move X2, [X20]
	1734 Move X1, X31
	1735 Move X3, X31
	1736 Move X20, X0
	1737 Call 0x27037B8, X0, X1, X2
	1738 Move X8, 0xAF1000
	1739 Move X0, [X21]
	1740 Move X8, [X8+2104]
	1741 Move X5, [X28]
	1742 Move W2, 1
	1743 Move X1, X20
	1744 Move X4, [X8]
	1745 Move W3, W31
	1746 Call 0x21ECD64, X0, X1, X2, X3, X4
	1747 Move X20, X0
	1748 Compare X0, 0
	1749 JumpIfEqual {1756}
	1750 Move X8, [X19]
	1751 Move X0, X20
	1752 Move X1, [X8+64]
	1753 Call 0x1C17E00
	1754 Compare X0, 0
	1755 JumpIfEqual {2104}
	1756 Move W8, [X22]
	1757 NotImplemented "Instruction CMP not yet implemented."
	1758 Move [X19+344], X20
	1759 Move X8, 0xB38000
	1760 Move X8, [X8+2400]
	1761 Move X21, 0xB38000
	1762 Move X0, [X8]
	1763 Move X21, [X21+2768]
	1764 Call 0x1C17F10
	1765 Move X8, 0xB38000
	1766 Move X8, [X8+1816]
	1767 Move X1, X31
	1768 Move X3, X31
	1769 Move X20, X0
	1770 Move X2, [X8]
	1771 Call 0x27037B8, X0, X1, X2
	1772 Move X8, 0xAF1000
	1773 Move X0, [X21]
	1774 Move X8, [X8+2104]
	1775 Move W2, 3
	1776 Move W3, 1
	1777 Move X1, X20
	1778 Move X4, [X8]
	1779 Move X8, 0xB38000
	1780 Move X8, [X8+1960]
	1781 Move X5, [X8]
	1782 Call 0x21ECD64, X0, X1, X2, X3, X4
	1783 Move X20, X0
	1784 Compare X0, 0
	1785 JumpIfEqual {1792}
	1786 Move X8, [X19]
	1787 Move X0, X20
	1788 Move X1, [X8+64]
	1789 Call 0x1C17E00
	1790 Compare X0, 0
	1791 JumpIfEqual {2104}
	1792 Move W8, [X22]
	1793 NotImplemented "Instruction CMP not yet implemented."
	1794 Move X8, 0xB38000
	1795 Move X8, [X8+2392]
	1796 Move [X19+352], X20
	1797 Move X20, 0xB38000
	1798 Move X21, 0xB38000
	1799 Move X0, [X8]
	1800 Move X28, 0xB38000
	1801 Move X20, [X20+2240]
	1802 Move X21, [X21+400]
	1803 Move X28, [X28+1968]
	1804 Call 0x1C17F10
	1805 Move X2, [X20]
	1806 Move X1, X31
	1807 Move X3, X31
	1808 Move X20, X0
	1809 Call 0x27037B8, X0, X1, X2
	1810 Move X8, 0xAF1000
	1811 Move X0, [X21]
	1812 Move X8, [X8+2104]
	1813 Move X5, [X28]
	1814 Move W2, 3
	1815 Move W3, 1
	1816 Move X4, [X8]
	1817 Move X1, X20
	1818 Call 0x21ECD64, X0, X1, X2, X3, X4
	1819 Move X20, X0
	1820 Compare X0, 0
	1821 JumpIfEqual {1828}
	1822 Move X8, [X19]
	1823 Move X0, X20
	1824 Move X1, [X8+64]
	1825 Call 0x1C17E00
	1826 Compare X0, 0
	1827 JumpIfEqual {2104}
	1828 Move W8, [X22]
	1829 NotImplemented "Instruction CMP not yet implemented."
	1830 Move X8, 0xB38000
	1831 Move X8, [X8+2464]
	1832 Move [X19+360], X20
	1833 Move X20, 0xB38000
	1834 Move X21, 0xB38000
	1835 Move X0, [X8]
	1836 Move X28, 0xB38000
	1837 Move X20, [X20+2184]
	1838 Move X21, [X21+2568]
	1839 Move X28, [X28+1936]
	1840 Call 0x1C17F10
	1841 Move X2, [X20]
	1842 Move X1, X31
	1843 Move X3, X31
	1844 Move X20, X0
	1845 Call 0x27037B8, X0, X1, X2
	1846 Move X8, 0xAF1000
	1847 Move X0, [X21]
	1848 Move X8, [X8+2104]
	1849 Move X5, [X28]
	1850 Move W2, 3
	1851 Move W3, 1
	1852 Move X4, [X8]
	1853 Move X1, X20
	1854 Call 0x21ECD64, X0, X1, X2, X3, X4
	1855 Move X20, X0
	1856 Compare X0, 0
	1857 JumpIfEqual {1864}
	1858 Move X8, [X19]
	1859 Move X0, X20
	1860 Move X1, [X8+64]
	1861 Call 0x1C17E00
	1862 Compare X0, 0
	1863 JumpIfEqual {2104}
	1864 Move W8, [X22]
	1865 NotImplemented "Instruction CMP not yet implemented."
	1866 Move [X19+368], X20
	1867 Move X0, [X25]
	1868 Move X21, 0xB38000
	1869 Move X21, [X21+2608]
	1870 Call 0x1C17F10
	1871 Move X2, [X24]
	1872 Move X1, X31
	1873 Move X3, X31
	1874 Move X20, X0
	1875 Call 0x27037B8, X0, X1, X2
	1876 Move X0, [X21]
	1877 Move X4, [X23]
	1878 Move X5, [X27]
	1879 Move W2, 1
	1880 Move W3, 1
	1881 Move X1, X20
	1882 Call 0x21ECD64, X0, X1, X2, X3, X4
	1883 Move X24, 0xAF1000
	1884 Move X24, [X24+2104]
	1885 Move X20, X0
	1886 Compare X0, 0
	1887 JumpIfEqual {1894}
	1888 Move X8, [X19]
	1889 Move X0, X20
	1890 Move X1, [X8+64]
	1891 Call 0x1C17E00
	1892 Compare X0, 0
	1893 JumpIfEqual {2104}
	1894 Move W8, [X22]
	1895 Move X23, 0xB38000
	1896 Move X23, [X23+1960]
	1897 NotImplemented "Instruction CMP not yet implemented."
	1898 Move [X19+376], X20
	1899 Move X8, 0xB38000
	1900 Move X8, [X8+2400]
	1901 Move X21, 0xB38000
	1902 Move X0, [X8]
	1903 Move X21, [X21+2632]
	1904 Call 0x1C17F10
	1905 Move X8, 0xB38000
	1906 Move X8, [X8+1816]
	1907 Move X1, X31
	1908 Move X3, X31
	1909 Move X20, X0
	1910 Move X2, [X8]
	1911 Call 0x27037B8, X0, X1, X2
	1912 Move X0, [X21]
	1913 Move X4, [X24]
	1914 Move X5, [X23]
	1915 Move W2, 2
	1916 Move W3, 1
	1917 Move X1, X20
	1918 Call 0x21ECD64, X0, X1, X2, X3, X4
	1919 Move X20, X0
	1920 Compare X0, 0
	1921 JumpIfEqual {1928}
	1922 Move X8, [X19]
	1923 Move X0, X20
	1924 Move X1, [X8+64]
	1925 Call 0x1C17E00
	1926 Compare X0, 0
	1927 JumpIfEqual {2104}
	1928 Move W8, [X22]
	1929 NotImplemented "Instruction CMP not yet implemented."
	1930 Move X8, 0xB38000
	1931 Move X8, [X8+2440]
	1932 Move [X19+384], X20
	1933 Move X20, 0xB38000
	1934 Move X21, 0xB38000
	1935 Move X0, [X8]
	1936 Move X23, 0xB38000
	1937 Move X20, [X20+2488]
	1938 Move X21, [X21+2800]
	1939 Move X23, [X23+1984]
	1940 Call 0x1C17F10
	1941 Move X2, [X20]
	1942 Move X1, X31
	1943 Move X3, X31
	1944 Move X20, X0
	1945 Call 0x27037B8, X0, X1, X2
	1946 Move X0, [X21]
	1947 Move X4, [X24]
	1948 Move X5, [X23]
	1949 Move W2, 3
	1950 Move W3, 1
	1951 Move X1, X20
	1952 Call 0x21ECD64, X0, X1, X2, X3, X4
	1953 Move X20, X0
	1954 Compare X0, 0
	1955 JumpIfEqual {1962}
	1956 Move X8, [X19]
	1957 Move X0, X20
	1958 Move X1, [X8+64]
	1959 Call 0x1C17E00
	1960 Compare X0, 0
	1961 JumpIfEqual {2104}
	1962 Move W8, [X22]
	1963 NotImplemented "Instruction CMP not yet implemented."
	1964 Move X8, 0xB38000
	1965 Move X8, [X8+2384]
	1966 Move [X19+392], X20
	1967 Move X20, 0xB38000
	1968 Move X21, 0xAFA000
	1969 Move X0, [X8]
	1970 Move X23, 0xB38000
	1971 Move X20, [X20+2496]
	1972 Move X21, [X21+3440]
	1973 Move X23, [X23+1992]
	1974 Call 0x1C17F10
	1975 Move X2, [X20]
	1976 Move X1, X31
	1977 Move X3, X31
	1978 Move X20, X0
	1979 Call 0x27037B8, X0, X1, X2
	1980 Move X0, [X21]
	1981 Move X4, [X24]
	1982 Move X5, [X23]
	1983 Move W2, 3
	1984 Move W3, 1
	1985 Move X1, X20
	1986 Call 0x21ECD64, X0, X1, X2, X3, X4
	1987 Move X20, X0
	1988 Compare X0, 0
	1989 JumpIfEqual {1996}
	1990 Move X8, [X19]
	1991 Move X0, X20
	1992 Move X1, [X8+64]
	1993 Call 0x1C17E00
	1994 Compare X0, 0
	1995 JumpIfEqual {2104}
	1996 Move W8, [X22]
	1997 Move X23, 0xB38000
	1998 Move X23, [X23+1904]
	1999 NotImplemented "Instruction CMP not yet implemented."
	2000 Move [X19+400], X20
	2001 Move X0, [X26]
	2002 Move X21, 0xB38000
	2003 Move X21, [X21+2688]
	2004 Call 0x1C17F10
	2005 Move X2, [X29]
	2006 Move X1, X31
	2007 Move X3, X31
	2008 Move X20, X0
	2009 Call 0x27037B8, X0, X1, X2
	2010 Move X0, [X21]
	2011 Move X4, [X24]
	2012 Move X5, [X23]
	2013 Move W2, 2
	2014 Move W3, 1
	2015 Move X1, X20
	2016 Call 0x21ECD64, X0, X1, X2, X3, X4
	2017 Move X20, X0
	2018 Compare X0, 0
	2019 JumpIfEqual {2026}
	2020 Move X8, [X19]
	2021 Move X0, X20
	2022 Move X1, [X8+64]
	2023 Call 0x1C17E00
	2024 Compare X0, 0
	2025 JumpIfEqual {2104}
	2026 Move W8, [X22]
	2027 NotImplemented "Instruction CMP not yet implemented."
	2028 Move X21, 0xAFE000
	2029 Move X21, [X21+752]
	2030 Move [X19+408], X20
	2031 Move X0, [X21]
	2032 Move W8, [X0+224]
	2033 Compare W8, 0
	2034 JumpIfNotEqual {2036}
	2035 Call 0x1C17DFC
	2036 Move X20, 0xDDA000
	2037 Move W8, [X20+2342]
	2038 Compare W8, 0
	2039 JumpIfNotEqual {2045}
	2040 Move X0, 0xAFE000
	2041 Move X0, [X0+752]
	2042 Call 0x1C17CF4
	2043 Move W8, 1
	2044 Move [X20+2342], W8
	2045 Move X0, [X21]
	2046 Move X25, 0xB37000
	2047 Move X24, 0xB37000
	2048 Move X23, 0xB18000
	2049 Move W8, [X0+224]
	2050 Move X25, [X25+1872]
	2051 Move X24, [X24+1864]
	2052 Move X23, [X23+2896]
	2053 Compare W8, 0
	2054 JumpIfNotEqual {2057}
	2055 Call 0x1C17DFC
	2056 Move X0, [X21]
	2057 Move X8, [X0+184]
	2058 Move X0, [X25]
	2059 Move X20, [X8+24]
	2060 Call 0x1C17F10
	2061 Move X2, [X24]
	2062 Move X1, X20
	2063 Move X21, X0
	2064 Call Dictionary`2<Object, Object>..ctor, X0, X1
	2065 Move X8, [X23]
	2066 Move X8, [X8+184]
	2067 Move [X8], X21
	2068 Move X8, [X22]
	2069 NotImplemented "Instruction CMP not yet implemented."
	2070 Move X21, 0xB37000
	2071 Move X21, [X21+1856]
	2072 Move X20, X31
	2073 Add X19, X19, 32
	2074 NotImplemented "Instruction CMP not yet implemented."
	2075 Move X2, [X19]
	2076 Compare X2, 0
	2077 JumpIfEqual {2103}
	2078 Move X8, [X23]
	2079 Move X8, [X8+184]
	2080 Move X0, [X8]
	2081 Compare X0, 0
	2082 JumpIfEqual {2103}
	2083 Move X1, [X2+24]
	2084 Move X3, [X21]
	2085 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	2086 Move X8, [X22]
	2087 Add X20, X20, 1
	2088 NotImplemented "Instruction CMP not yet implemented."
	2089 Move X20, [X31+80]
	2090 Move X19, [X31+88]
	2091 Move X22, [X31+64]
	2092 Move X21, [X31+72]
	2093 Move X24, [X31+48]
	2094 Move X23, [X31+56]
	2095 Move X26, [X31+32]
	2096 Move X25, [X31+40]
	2097 Move X28, [X31+16]
	2098 Move X27, [X31+24]
	2099 Move X29, [X31+96]
	2100 Move X30, [X31+104]
	2101 Return 
	2102 Call 0x1C17F28
	2103 Call 0x1C17F20
	2104 Call 0x1C17F44
	2105 Move X1, X31
	2106 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x036040EC CBZ X8, 0x36041D0
	0x036040F0 LDRSW X10, [X20 + 0x18]
	0x036040F4 LDR W11, [X8 + 0x18]
	0x036040F8 CMP W10, W11
	0x036040FC B.CS 0x360411C
	0x03604100 ADD W9, W10, 0x1
	0x03604104 ADD X8, X8, X10, 0x3, LSL
	0x03604108 STR W9, [X20 + 0x18]
	0x0360410C STR X21, [X8 + 0x20]
	0x03604110 B 0x3604134
	0x03604114 MOV X20, X31
	0x03604118 B 0x3604134
	0x0360411C LDR X8, [X9 + 0x20]
	0x03604120 MOV X0, X20
	0x03604124 MOV X1, X21
	0x03604128 LDR X8, [X8 + 0xC0]
	0x0360412C LDR X2, [X8 + 0x70]
	0x03604130 BL 0x301BF90
	0x03604134 ADRP X21, 0xDDC000
	0x03604138 LDRB W8, [X21 + 0x36C]
	0x0360413C TBNZ X8, 0x0, 0x3604154
	0x03604140 ADRP X0, 0xAF0000
	0x03604144 LDR X0, [X0 + 0x1C8]
	0x03604148 BL 0x1C16CF4
	0x0360414C MOVZ W8, 0x1
	0x03604150 STRB W8, [X21 + 0x36C]
	0x03604154 LDR X8, [X19 + 0x18]
	0x03604158 CBZ X8, 0x36041C0
	0x0360415C LDR W8, [X8 + 0x18]
	0x03604160 CMP W8, 0x1
	0x03604164 B.LT 0x36041C0
	0x03604168 CBZ X20, 0x3604178
	0x0360416C MOV X0, X19
	0x03604170 BL 0x3603A94
	0x03604174 B 0x36041A8
	0x03604178 ADRP X8, 0xAF0000
	0x0360417C LDR X8, [X8 + 0x1D0]
	0x03604180 LDR X0, [X8]
	0x03604184 BL 0x1C16F10
	0x03604188 ADRP X8, 0xAF0000
	0x0360418C LDR X8, [X8 + 0x1C0]
	0x03604190 MOV X20, X0
	0x03604194 LDR X1, [X8]
	0x03604198 BL 0x301B7C4
	0x0360419C MOV X0, X19
	0x036041A0 BL 0x3603A94
	0x036041A4 CBZ X20, 0x36041D0
	0x036041A8 ADRP X8, 0xB1A000
	0x036041AC LDR X8, [X8 + 0xF30]
	0x036041B0 MOV X1, X0
	0x036041B4 MOV X0, X20
	0x036041B8 LDR X2, [X8]
	0x036041BC BL 0x301C194
	0x036041C0 MOV X0, X20
	0x036041C4 LDP X20, X19, [X31 + 0x10]
	0x036041C8 LDP X30, X21, [X31], #0x20
	0x036041CC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDDD000
	007 Move X20, 0xAFD000
	008 Move W8, [X21+866]
	009 Move X20, [X20+752]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xB37000
	016 Move X0, [X0+2816]
	017 Call 0x1C17CF4
	018 Move X0, 0xB37000
	019 Move X0, [X0+2824]
	020 Call 0x1C17CF4
	021 Move X0, 0xAFD000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+866], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X21, 0xDD9000
	035 Move W8, [X21+2342]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xAFD000
	039 Move X0, [X0+752]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2342], W8
	043 Move X0, [X20]
	044 Move X22, 0xB37000
	045 Move X21, 0xB37000
	046 Move W8, [X0+224]
	047 Move X22, [X22+2824]
	048 Move X21, [X21+2816]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move X0, [X22]
	055 Move X20, [X8+24]
	056 Call 0x1C17F10
	057 Move X2, [X21]
	058 Move X1, X20
	059 Move X21, X0
	060 Call Dictionary`2<Object, Object>..ctor, X0, X1
	061 Move [X19+16], X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 

Method: System.Void .ctor(System.Net.Http.Headers.HttpHeaderKind headerKind)

Disassembly:
	0x03602090 LDR X4, [X24]
	0x03602094 MOVZ W2, 0x4
	0x03602098 MOV X1, X20
	0x0360209C MOV X3, X31
	0x036020A0 BL 0x21EBF7C
	0x036020A4 MOV X20, X0
	0x036020A8 CBZ X0, 0x36020C0
	0x036020AC LDR X8, [X19]
	0x036020B0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call HttpHeaders..ctor, X0
	007 Move [X20+24], W19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Return 

Method: System.Void Add(System.String name, System.String value)

Disassembly:
	0x036041D0 BL 0x1C16F20
	0x036041D4 LDR X1, [X0 + 0x10]
	0x036041D8 CBZ X1, 0x36041F4
	0x036041DC LDR X8, [X0 + 0x20]
	0x036041E0 CBZ X8, 0x36041FC
	0x036041E4 LDR X3, [X8 + 0x18]
	0x036041E8 LDR X0, [X8 + 0x40]
	0x036041EC LDR X2, [X8 + 0x28]
	0x036041F0 BR X3
	0x036041F4 MOV X0, X31
	0x036041F8 RET
	0x036041FC LDR X8, [X1]
	0x03604200 MOV X0, X1
	0x03604204 LDP X2, X8, [X8 + 0x168]
	0x03604208 MOV X1, X8
	0x0360420C BR X2
	0x03604210 STR X30, [X31 - 0x20]!
	0x03604214 STP X20, X19, [X31 + 0x10]
	0x03604218 ADRP X20, 0xDDC000
	0x0360421C LDRB W8, [X20 + 0x36C]
	0x03604220 MOV X19, X0
	0x03604224 TBNZ X8, 0x0, 0x360423C
	0x03604228 ADRP X0, 0xAF0000
	0x0360422C LDR X0, [X0 + 0x1C8]
	0x03604230 BL 0x1C16CF4
	0x03604234 MOVZ W8, 0x1
	0x03604238 STRB W8, [X20 + 0x36C]
	0x0360423C LDR X8, [X19 + 0x18]
	0x03604240 CBZ X8, 0x3604254
	0x03604244 LDR W8, [X8 + 0x18]
	0x03604248 CMP W8, 0x0
	0x0360424C CSET W0, GT

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDDD000
	008 Move X23, 0xAF0000
	009 Move W8, [X22+867]
	010 Move X23, [X23+2760]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xAF0000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+867], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {41}
	028 Move W8, [X0+24]
	029 Move X2, X0
	030 Compare W8, 0
	031 JumpIfEqual {42}
	032 Move [X2+32], X20
	033 Move X0, X21
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call 0x1C17F20
	042 Call 0x1C17F28

Method: System.Void Add(System.String name, System.Collections.Generic.IEnumerable`1<System.String> values)

Disassembly:
	0x03604250 B 0x3604258
	0x03604254 MOV W0, W31
	0x03604258 LDP X20, X19, [X31 + 0x10]
	0x0360425C LDR X30, [X31], #0x20
	0x03604260 RET
	0x03604264 STR X1, [X0 + 0x18]
	0x03604268 RET
	0x0360426C LDR W8, [X0 + 0x10]
	0x03604270 CMP W8, 0x1
	0x03604274 B.EQ 0x3604280
	0x03604278 ADDS W31, W8, 0x3
	0x0360427C B.NE 0x3604284
	0x03604280 B 0x3604544
	0x03604284 RET
	0x03604288 SUB X31, X31, 0xC0
	0x0360428C STP X30, X25, [X31 + 0x80]
	0x03604290 STP X24, X23, [X31 + 0x90]
	0x03604294 STP X22, X21, [X31 + 0xA0]
	0x03604298 STP X20, X19, [X31 + 0xB0]
	0x0360429C ADRP X20, 0xDDC000
	0x036042A0 LDRB W8, [X20 + 0x36E]
	0x036042A4 MOV X19, X0
	0x036042A8 STR X0, [X31 + 0x78]
	0x036042AC TBNZ X8, 0x0, 0x3604318
	0x036042B0 ADRP X0, 0xB36000
	0x036042B4 LDR X0, [X0 + 0xB30]
	0x036042B8 BL 0x1C16CF4
	0x036042BC ADRP X0, 0xB36000
	0x036042C0 LDR X0, [X0 + 0x380]
	0x036042C4 BL 0x1C16CF4
	0x036042C8 ADRP X0, 0xB36000
	0x036042CC LDR X0, [X0 + 0xB38]
	0x036042D0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {22}
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Call HttpHeaders.CheckName, X0, X1
	011 Move X1, X20
	012 Move X2, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, X0
	016 Move X0, X21
	017 Move W4, W31
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 Call HttpHeaders.AddInternal, X0, X1, X2, X3, X4
	021 Return 
	022 Move X0, 0xAF5000
	023 Move X0, [X0+1320]
	024 Call 0x1C17D08
	025 Call 0x1C17F10
	026 Move X19, X0
	027 Move X0, 0xAFA000
	028 Move X0, [X0+3800]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Move X2, X31
	033 Call ArgumentNullException..ctor, X0, X1
	034 Move X0, 0xB37000
	035 Move X0, [X0+2832]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X19
	039 Call 0x1C17DEC

Method: System.Boolean AddInternal(System.String name, System.Collections.Generic.IEnumerable`1<System.String> values, System.Net.Http.Headers.HeaderInfo headerInfo, System.Boolean ignoreInvalid)

Disassembly:
	0x03604434 B 0x36043B0
	0x03604438 BL 0x3604544
	0x0360443C LDR X8, [X31 + 0x78]
	0x03604440 MOV W0, W31
	0x03604444 MOVI V0.2D, 0x0
	0x03604448 STR X31, [X8 + 0x50]
	0x0360444C STP V0, V0, [X8 + 0x30]
	0x03604450 B 0x36044E8
	0x03604454 ADRP X8, 0xB36000
	0x03604458 LDR X8, [X8 + 0xB50]
	0x0360445C STP X31, X31, [X31 + 0x30]
	0x03604460 LDR X3, [X8]
	0x03604464 ADD X0, X31, 0x30
	0x03604468 MOV X1, X19
	0x0360446C BL 0x2EE2840
	0x03604470 LDR X8, [X31 + 0x78]
	0x03604474 LDR V0, [X31 + 0x3]
	0x03604478 MOVZ W0, 0x1
	0x0360447C STR W0, [X8 + 0x10]
	0x03604480 STUR V0, [X8 + 0x18]
	0x03604484 B 0x36044E8
	0x03604488 BL 0x1C16F20
	0x0360448C BL 0x1C16F20
	0x03604490 BL 0x1C16F20
	0x03604494 BL 0x1C16F20
	0x03604498 BL 0x1C16F20
	0x0360449C B 0x36044C8
	0x036044A0 B 0x36044C8
	0x036044A4 B 0x36044C8
	0x036044A8 B 0x36044C8
	0x036044AC B 0x36044C8
	0x036044B0 B 0x36044C8
	0x036044B4 B 0x36044C8
	0x036044B8 B 0x36044C8
	0x036044BC B 0x36044C8
	0x036044C0 B 0x36044C8
	0x036044C4 B 0x36044C8
	0x036044C8 CMP W1, 0x1
	0x036044CC B.NE 0x3604518
	0x036044D0 BL 0x3EB1AD0
	0x036044D4 LDR X19, [X0]
	0x036044D8 STR X19, [X31 + 0x60]
	0x036044DC BL 0x3EB1AE0
	0x036044E0 CBNZ X19, 0x3604500
	0x036044E4 MOV W0, W31
	0x036044E8 LDP X20, X19, [X31 + 0xB0]
	0x036044EC LDP X22, X21, [X31 + 0xA0]
	0x036044F0 LDP X24, X23, [X31 + 0x90]
	0x036044F4 LDP X30, X25, [X31 + 0x80]
	0x036044F8 ADD X31, X31, 0xC0
	0x036044FC RET
	0x03604500 ADD X8, X31, 0x60
	0x03604504 ADD X0, X8, 0x8
	0x03604508 BL 0x1BC4F70
	0x0360450C MOV X0, X19
	0x03604510 BL 0x1C16F18
	0x03604514 CBNZ X19, 0x360451C
	0x03604518 BL 0x1D2C690
	0x0360451C LDR X0, [X31 + 0x78]
	0x03604520 LDR W8, [X0 + 0x10]
	0x03604524 CMP W8, 0x1
	0x03604528 B.EQ 0x3604534
	0x0360452C ADDS W31, W8, 0x3
	0x03604530 B.NE 0x3604538
	0x03604534 BL 0x3604544
	0x03604538 MOV X0, X19
	0x0360453C BL 0x1C16F18
	0x03604540 BL 0x1990590
	0x03604544 STP X30, X21, [X31 - 0x20]!
	0x03604548 STP X20, X19, [X31 + 0x10]
	0x0360454C ADRP X21, 0xDDC000
	0x03604550 ADRP X20, 0xB36000
	0x03604554 LDRB W8, [X21 + 0x36F]
	0x03604558 LDR X20, [X20 + 0xB60]
	0x0360455C MOV X19, X0
	0x03604560 TBNZ X8, 0x0, 0x3604578
	0x03604564 ADRP X0, 0xB36000
	0x03604568 LDR X0, [X0 + 0xB60]
	0x0360456C BL 0x1C16CF4
	0x03604570 MOVZ W8, 0x1
	0x03604574 STRB W8, [X21 + 0x36F]
	0x03604578 MOVN W8, 0x0
	0x0360457C STR W8, [X19 + 0x10]
	0x03604580 LDR X1, [X20]
	0x03604584 ADD X0, X19, 0x30
	0x03604588 LDP X20, X19, [X31 + 0x10]
	0x0360458C LDP X30, X21, [X31], #0x20
	0x03604590 B 0x2C0A83C
	0x03604594 LDP X8, X1, [X0 + 0x18]
	0x03604598 MOV X0, X8
	0x0360459C RET
	0x036045A0 STP X30, X19, [X31 - 0x10]!
	0x036045A4 ADRP X0, 0xAEF000
	0x036045A8 LDR X0, [X0 + 0xB40]
	0x036045AC BL 0x1C16D08
	0x036045B0 BL 0x1C16F10
	0x036045B4 MOV X1, X31
	0x036045B8 MOV X19, X0
	0x036045BC BL 0x3380310
	0x036045C0 ADRP X0, 0xB36000
	0x036045C4 LDR X0, [X0 + 0xB68]
	0x036045C8 BL 0x1C16D08
	0x036045CC MOV X1, X0
	0x036045D0 MOV X0, X19
	0x036045D4 BL 0x1C16DEC
	0x036045D8 SUB X31, X31, 0x30
	0x036045DC STP X30, X21, [X31 + 0x10]
	0x036045E0 STP X20, X19, [X31 + 0x20]
	0x036045E4 ADRP X21, 0xDDC000
	0x036045E8 ADRP X20, 0xB36000
	0x036045EC LDRB W8, [X21 + 0x370]
	0x036045F0 LDR X20, [X20 + 0xB70]
	0x036045F4 MOV X19, X0
	0x036045F8 TBNZ X8, 0x0, 0x3604610
	0x036045FC ADRP X0, 0xB36000
	0x03604600 LDR X0, [X0 + 0xB70]
	0x03604604 BL 0x1C16CF4
	0x03604608 MOVZ W8, 0x1
	0x0360460C STRB W8, [X21 + 0x370]
	0x03604610 LDUR V0, [X19 + 0x18]
	0x03604614 LDR X0, [X20]
	0x03604618 ADD X1, X31, 0x0
	0x0360461C STR V0, [X31]
	0x03604620 BL 0x1C16E04
	0x03604624 LDP X20, X19, [X31 + 0x20]
	0x03604628 LDP X30, X21, [X31 + 0x10]
	0x0360462C ADD X31, X31, 0x30
	0x03604630 RET
	0x03604634 STR X30, [X31 - 0x30]!
	0x03604638 STP X22, X21, [X31 + 0x10]
	0x0360463C STP X20, X19, [X31 + 0x20]
	0x03604640 ADRP X20, 0xDDC000
	0x03604644 ADRP X21, 0xB36000
	0x03604648 ADRP X22, 0xB36000
	0x0360464C LDRB W8, [X20 + 0x372]
	0x03604650 LDR X21, [X21 + 0x6F0]
	0x03604654 LDR X22, [X22 + 0xB78]
	0x03604658 MOV X19, X0
	0x0360465C TBNZ X8, 0x0, 0x3604680
	0x03604660 ADRP X0, 0xB36000
	0x03604664 LDR X0, [X0 + 0xB78]
	0x03604668 BL 0x1C16CF4
	0x0360466C ADRP X0, 0xB36000
	0x03604670 LDR X0, [X0 + 0x6F0]
	0x03604674 BL 0x1C16CF4
	0x03604678 MOVZ W8, 0x1
	0x0360467C STRB W8, [X20 + 0x372]
	0x03604680 LDR X1, [X21]
	0x03604684 LDR X2, [X22]
	0x03604688 MOV X0, X19
	0x0360468C LDP X20, X19, [X31 + 0x20]
	0x03604690 LDP X22, X21, [X31 + 0x10]
	0x03604694 LDR X30, [X31], #0x30
	0x03604698 B 0x21ECDE4
	0x0360469C STR X30, [X31 - 0x30]!
	0x036046A0 STP X22, X21, [X31 + 0x10]
	0x036046A4 STP X20, X19, [X31 + 0x20]
	0x036046A8 ADRP X20, 0xDDC000
	0x036046AC ADRP X21, 0xB36000
	0x036046B0 ADRP X22, 0xB36000
	0x036046B4 LDRB W8, [X20 + 0x377]
	0x036046B8 LDR X21, [X21 + 0x190]
	0x036046BC LDR X22, [X22 + 0xB80]
	0x036046C0 MOV X19, X0
	0x036046C4 TBNZ X8, 0x0, 0x36046E8
	0x036046C8 ADRP X0, 0xB36000
	0x036046CC LDR X0, [X0 + 0xB80]
	0x036046D0 BL 0x1C16CF4
	0x036046D4 ADRP X0, 0xB36000
	0x036046D8 LDR X0, [X0 + 0x190]
	0x036046DC BL 0x1C16CF4
	0x036046E0 MOVZ W8, 0x1
	0x036046E4 STRB W8, [X20 + 0x377]
	0x036046E8 LDR X1, [X21]
	0x036046EC LDR X2, [X22]
	0x036046F0 MOV X0, X19
	0x036046F4 LDP X20, X19, [X31 + 0x20]
	0x036046F8 LDP X22, X21, [X31 + 0x10]
	0x036046FC LDR X30, [X31], #0x30
	0x03604700 B 0x21ECDE4
	0x03604704 STR X30, [X31 - 0x20]!
	0x03604708 STP X20, X19, [X31 + 0x10]
	0x0360470C ADRP X19, 0xDDC000
	0x03604710 ADRP X20, 0xB36000
	0x03604714 LDRB W8, [X19 + 0x37A]
	0x03604718 LDR X20, [X20 + 0x1B0]
	0x0360471C TBNZ X8, 0x0, 0x3604734
	0x03604720 ADRP X0, 0xB36000
	0x03604724 LDR X0, [X0 + 0x1B0]
	0x03604728 BL 0x1C16CF4
	0x0360472C MOVZ W8, 0x1
	0x03604730 STRB W8, [X19 + 0x37A]
	0x03604734 LDR X0, [X20]
	0x03604738 BL 0x1C16F10
	0x0360473C MOV X1, X31
	0x03604740 MOV X19, X0
	0x03604744 BL 0x33BDD8C
	0x03604748 LDR X8, [X20]
	0x0360474C LDR X8, [X8 + 0xB8]
	0x03604750 STR X19, [X8]
	0x03604754 LDP X20, X19, [X31 + 0x10]
	0x03604758 LDR X30, [X31], #0x20
	0x0360475C RET
	0x03604760 MOV X1, X31
	0x03604764 B 0x33BDD8C
	0x03604768 STP X30, X21, [X31 - 0x20]!
	0x0360476C STP X20, X19, [X31 + 0x10]
	0x03604770 ADRP X20, 0xDDC000
	0x03604774 ADRP X21, 0xB36000
	0x03604778 LDRB W8, [X20 + 0x37B]
	0x0360477C LDR X21, [X21 + 0xB88]
	0x03604780 MOV X19, X1
	0x03604784 TBNZ X8, 0x0, 0x360479C
	0x03604788 ADRP X0, 0xB36000
	0x0360478C LDR X0, [X0 + 0xB88]
	0x03604790 BL 0x1C16CF4
	0x03604794 MOVZ W8, 0x1
	0x03604798 STRB W8, [X20 + 0x37B]
	0x0360479C LDR X1, [X21]
	0x036047A0 MOV X0, X19
	0x036047A4 LDP X20, X19, [X31 + 0x10]
	0x036047A8 MOVZ W2, 0x5
	0x036047AC MOV X3, X31
	0x036047B0 LDP X30, X21, [X31], #0x20
	0x036047B4 B 0x3226C60
	0x036047B8 STR X30, [X31 - 0x20]!
	0x036047BC STP X20, X19, [X31 + 0x10]
	0x036047C0 ADRP X20, 0xDDC000
	0x036047C4 LDRB W8, [X20 + 0x37C]
	0x036047C8 MOV X19, X1
	0x036047CC TBNZ X8, 0x0, 0x36047E4
	0x036047D0 ADRP X0, 0xB36000
	0x036047D4 LDR X0, [X0 + 0xB90]
	0x036047D8 BL 0x1C16CF4
	0x036047DC MOVZ W8, 0x1
	0x036047E0 STRB W8, [X20 + 0x37C]
	0x036047E4 CBZ X19, 0x360480C
	0x036047E8 ADRP X8, 0xB36000
	0x036047EC LDR X8, [X8 + 0xB90]
	0x036047F0 LDR X0, [X19 + 0x10]
	0x036047F4 LDP X20, X19, [X31 + 0x10]
	0x036047F8 MOVZ W2, 0x5
	0x036047FC LDR X1, [X8]
	0x03604800 MOV X3, X31
	0x03604804 LDR X30, [X31], #0x20
	0x03604808 B 0x3226C60
	0x0360480C BL 0x1C16F20
	0x03604810 STR X30, [X31 - 0x20]!
	0x03604814 STP X20, X19, [X31 + 0x10]
	0x03604818 ADRP X20, 0xDDC000
	0x0360481C LDRB W8, [X20 + 0x37D]
	0x03604820 MOV X19, X1
	0x03604824 TBNZ X8, 0x0, 0x360483C
	0x03604828 ADRP X0, 0xB36000
	0x0360482C LDR X0, [X0 + 0x258]
	0x03604830 BL 0x1C16CF4
	0x03604834 MOVZ W8, 0x1
	0x03604838 STRB W8, [X20 + 0x37D]
	0x0360483C CBZ X19, 0x3604864
	0x03604840 ADRP X8, 0xB36000
	0x03604844 LDR X8, [X8 + 0x258]
	0x03604848 LDR X0, [X19 + 0x10]
	0x0360484C LDP X20, X19, [X31 + 0x10]
	0x03604850 MOVZ W2, 0x5
	0x03604854 LDR X1, [X8]
	0x03604858 MOV X3, X31
	0x0360485C LDR X30, [X31], #0x20
	0x03604860 B 0x3226C60
	0x03604864 BL 0x1C16F20
	0x03604868 LDR W0, [X0 + 0x4]
	0x0360486C RET
	0x03604870 STR W1, [X0 + 0x4]
	0x03604874 RET
	0x03604878 LDR W0, [X0 + 0x8]
	0x0360487C RET
	0x03604880 STR W1, [X0 + 0x8]
	0x03604884 RET
	0x03604888 LDR W0, [X0]
	0x0360488C RET
	0x03604890 RET
	0x03604894 SUB X31, X31, 0x40
	0x03604898 STP X30, X21, [X31 + 0x20]
	0x0360489C STP X20, X19, [X31 + 0x30]
	0x036048A0 ADRP X20, 0xDDC000
	0x036048A4 ADRP X21, 0xB36000
	0x036048A8 LDRB W8, [X20 + 0x380]
	0x036048AC LDR X21, [X21 + 0xB98]
	0x036048B0 MOV X19, X0
	0x036048B4 TBNZ X8, 0x0, 0x36048CC
	0x036048B8 ADRP X0, 0xB36000
	0x036048BC LDR X0, [X0 + 0xB98]
	0x036048C0 BL 0x1C16CF4
	0x036048C4 MOVZ W8, 0x1
	0x036048C8 STRB W8, [X20 + 0x380]
	0x036048CC LDR X8, [X21]
	0x036048D0 MOVN X9, 0x0
	0x036048D4 ADD X0, X31, 0x8
	0x036048D8 MOV X1, X31
	0x036048DC STP X8, X9, [X31 + 0x8]
	0x036048E0 LDR W8, [X19]
	0x036048E4 STR W8, [X31 + 0x18]
	0x036048E8 BL 0x33B162C
	0x036048EC LDP X20, X19, [X31 + 0x30]
	0x036048F0 LDP X30, X21, [X31 + 0x20]
	0x036048F4 ADD X31, X31, 0x40
	0x036048F8 RET
	0x036048FC SUB X31, X31, 0x30
	0x03604900 STR X30, [X31 + 0x10]
	0x03604904 STP X20, X19, [X31 + 0x20]
	0x03604908 ADRP X20, 0xDDC000
	0x0360490C ADRP X19, 0xB17000
	0x03604910 LDRB W8, [X20 + 0x381]
	0x03604914 LDR X19, [X19 + 0x8D0]
	0x03604918 TBNZ X8, 0x0, 0x3604930
	0x0360491C ADRP X0, 0xB17000
	0x03604920 LDR X0, [X0 + 0x8D0]
	0x03604924 BL 0x1C16CF4
	0x03604928 MOVZ W8, 0x1
	0x0360492C STRB W8, [X20 + 0x381]
	0x03604930 ADD X0, X31, 0x0
	0x03604934 MOVZ W1, 0x2
	0x03604938 MOV W2, W31
	0x0360493C MOV W3, W31
	0x03604940 STR W31, [X31 + 0x8]
	0x03604944 STR X31, [X31]
	0x03604948 BL 0x35FD330
	0x0360494C LDR X8, [X19]
	0x03604950 LDR W9, [X31 + 0x8]
	0x03604954 LDR X10, [X31]
	0x03604958 LDP X20, X19, [X31 + 0x20]
	0x0360495C LDR X8, [X8 + 0xB8]
	0x03604960 LDR X30, [X31 + 0x10]
	0x03604964 STR W9, [X8 + 0x8]
	0x03604968 STR X10, [X8]
	0x0360496C ADD X31, X31, 0x30
	0x03604970 RET
	0x03604974 LDR W0, [X0 + 0x18]
	0x03604978 RET
	0x0360497C STR W1, [X0 + 0x18]
	0x03604980 RET
	0x03604984 STP X30, X23, [X31 - 0x30]!
	0x03604988 STP X22, X21, [X31 + 0x10]
	0x0360498C STP X20, X19, [X31 + 0x20]
	0x03604990 ADRP X23, 0xDDC000
	0x03604994 ADRP X22, 0xB17000
	0x03604998 LDRB W8, [X23 + 0x383]
	0x0360499C LDR X22, [X22 + 0x8D0]
	0x036049A0 MOV X19, X4
	0x036049A4 MOV X20, X1
	0x036049A8 MOV X21, X0
	0x036049AC TBNZ X8, 0x0, 0x36049C4
	0x036049B0 ADRP X0, 0xB17000
	0x036049B4 LDR X0, [X0 + 0x8D0]
	0x036049B8 BL 0x1C16CF4
	0x036049BC MOVZ W8, 0x1
	0x036049C0 STRB W8, [X23 + 0x383]
	0x036049C4 LDR X0, [X22]
	0x036049C8 LDR X21, [X21 + 0x10]
	0x036049CC LDR W8, [X0 + 0xE0]
	0x036049D0 CBNZ W8, 0x36049D8
	0x036049D4 BL 0x1C16DFC
	0x036049D8 CBZ X21, 0x36049FC
	0x036049DC UBFM X1, X20, 0x20, 0x3F
	0x036049E0 SUB W2, W19, W1
	0x036049E4 MOV X0, X21
	0x036049E8 LDP X20, X19, [X31 + 0x20]
	0x036049EC LDP X22, X21, [X31 + 0x10]
	0x036049F0 MOV X3, X31
	0x036049F4 LDP X30, X23, [X31], #0x30
	0x036049F8 B 0x3228DE4
	0x036049FC BL 0x1C16F20
	0x03604A00 STR X30, [X31 - 0x40]!
	0x03604A04 STP X24, X23, [X31 + 0x10]
	0x03604A08 STP X22, X21, [X31 + 0x20]
	0x03604A0C STP X20, X19, [X31 + 0x30]
	0x03604A10 ADRP X24, 0xDDC000
	0x03604A14 ADRP X23, 0xAF1000
	0x03604A18 LDRB W8, [X24 + 0x386]
	0x03604A1C LDR X23, [X23 + 0xC48]
	0x03604A20 MOV X19, X3
	0x03604A24 MOV X22, X2
	0x03604A28 MOV X20, X1
	0x03604A2C MOV X21, X0
	0x03604A30 TBNZ X8, 0x0, 0x3604A48
	0x03604A34 ADRP X0, 0xAF1000
	0x03604A38 LDR X0, [X0 + 0xC48]
	0x03604A3C BL 0x1C16CF4
	0x03604A40 MOVZ W8, 0x1
	0x03604A44 STRB W8, [X24 + 0x386]
	0x03604A48 AND X2, X22, 0x0
	0x03604A4C MOV X0, X21
	0x03604A50 MOV X1, X20
	0x03604A54 BL 0x35FD280
	0x03604A58 LDR X8, [X23]
	0x03604A5C MOV X20, X0
	0x03604A60 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X24, 0xDDD000
	015 Move W8, [X24+868]
	016 Move W21, W4
	017 Move X22, X3
	018 Move X19, X2
	019 Move X20, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0xB18000
	026 Move X0, [X0+2920]
	027 Call 0x1C17CF4
	028 Move X0, 0xB18000
	029 Move X0, [X0+2880]
	030 Call 0x1C17CF4
	031 Move X0, 0xB18000
	032 Move X0, [X0+2928]
	033 Call 0x1C17CF4
	034 Move X0, 0xAF0000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0xAF0000
	038 Move X0, [X0+3952]
	039 Call 0x1C17CF4
	040 Move X0, 0xAF0000
	041 Move X0, [X0+3960]
	042 Call 0x1C17CF4
	043 Move X0, 0xAF0000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0xAF1000
	047 Move X0, [X0+440]
	048 Call 0x1C17CF4
	049 Move X0, 0xAF2000
	050 Move X0, [X0+632]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X24+868], W8
	054 Move [X31+16], X31
	055 Move [X31+24], X31
	056 Move X0, [X23+16]
	057 Compare X0, 0
	058 JumpIfEqual {349}
	059 Move X8, 0xB18000
	060 Move X8, [X8+2880]
	061 Add X2, X31, 24
	062 Move X1, X20
	063 Move X3, [X8]
	064 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	065 Compare X19, 0
	066 JumpIfEqual {349}
	067 Move X10, 0xAF0000
	068 Move X8, [X19]
	069 Move X10, [X10+3952]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X19
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X29, 0xAF0000
	087 Move X26, 0xAF0000
	088 Move X29, [X29+3608]
	089 Move X26, [X26+3960]
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X19, X0
	095 Move W27, 1
	096 Move W28, W27
	097 Compare X19, 0
	098 JumpIfEqual {321}
	099 Move X8, [X19]
	100 Move X1, [X29]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {278}
	124 Move X8, [X19]
	125 Move X1, [X26]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X19
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X19
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X25, [X31+24]
	146 Move X24, X0
	147 Compare X22, 0
	148 JumpIfEqual {165}
	149 Move X8, [X22]
	150 Move X9, [X8+440]
	151 Move X3, [X8+448]
	152 Add X2, X31, 16
	153 Move X0, X22
	154 Move X1, X24
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {207}
	160 Move W28, W31
	161 Move TEMP, X21
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {97}
	165 Move X28, X25
	166 Compare X25, 0
	167 JumpIfNotEqual {178}
	168 Move X8, 0xB18000
	169 Move X8, [X8+2928]
	170 Move X0, [X8]
	171 Call 0x1C17F10
	172 Move X28, X0
	173 Move X1, X31
	174 Call Object..ctor, X0
	175 Move [X28+16], X31
	176 Move [X28+32], X31
	177 Move [X31+24], X28
	178 Move X0, X28
	179 Call HeaderBucket.get_Values, X0
	180 Compare X24, 0
	181 JumpIfNotEqual {187}
	182 Move X8, 0xAF2000
	183 Move X8, [X8+632]
	184 Move X8, [X8]
	185 Move X8, [X8+184]
	186 Move X24, [X8]
	187 Compare X0, 0
	188 JumpIfEqual {353}
	189 Move X9, 0xAF1000
	190 Move W10, [X0+28]
	191 Move X8, [X0+16]
	192 Move X9, [X9+440]
	193 Add W10, W10, 1
	194 Move X9, [X9]
	195 Move [X0+28], W10
	196 Compare X8, 0
	197 JumpIfEqual {352}
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Move W11, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add W9, W10, 1
	202 Add X8, X8, X10
	203 Move [X0+24], W9
	204 Move [X8+32], X24
	205 Compare X25, 0
	206 JumpIfNotEqual {96}
	207 Move W8, [X22+16]
	208 Move X24, [X31+24]
	209 Compare W8, 0
	210 JumpIfEqual {248}
	211 Compare X24, 0
	212 JumpIfNotEqual {234}
	213 Move X8, [X22]
	214 Move X1, X23
	215 Move [X31+8], X20
	216 Move X9, [X8+408]
	217 Move X3, [X8+416]
	218 Move X0, X22
	219 Move X2, X22
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Move X8, 0xB18000
	222 Move X20, [X22+32]
	223 Move X8, [X8+2928]
	224 Move X27, X0
	225 Move X0, [X8]
	226 Call 0x1C17F10
	227 Move X24, X0
	228 Move X1, X31
	229 Call Object..ctor, X0
	230 Move [X24+32], X20
	231 Move X20, [X31+8]
	232 Move [X24+16], X27
	233 Move [X31+24], X24
	234 Move X8, [X22]
	235 Move X1, [X24+16]
	236 Move X2, [X31+16]
	237 Move X9, [X8+392]
	238 Move X3, [X8+400]
	239 Move X0, X22
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X8, [X9+32]
	242 Move X8, [X8+192]
	243 Move X2, [X8+112]
	244 Move X1, X24
	245 Call List`1<Object>.AddWithResize, X0, X1
	246 Compare X25, 0
	247 JumpIfNotEqual {96}
	248 Move [X31+8], X23
	249 Compare X24, 0
	250 JumpIfNotEqual {355}
	251 Move X8, 0xB18000
	252 Move X23, X20
	253 Move X20, [X31+16]
	254 Move X27, [X22+32]
	255 Move X8, [X8+2928]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X24, X0
	259 Move X1, X31
	260 Call Object..ctor, X0
	261 Move [X24+16], X20
	262 Move X20, X23
	263 Move X23, [X31+8]
	264 Move [X24+32], X27
	265 Move [X31+24], X24
	266 Move W27, W28
	267 Compare X25, 0
	268 JumpIfNotEqual {96}
	269 Move X0, [X23+16]
	270 Compare X0, 0
	271 JumpIfEqual {354}
	272 Move X8, 0xB18000
	273 Move X2, [X31+24]
	274 Move X8, [X8+2920]
	275 Move X3, [X8]
	276 Move X1, X20
	277 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	278 Move X21, X31
	279 Compare X19, 0
	280 JumpIfEqual {304}
	281 Move X8, [X19]
	282 Move X10, 0xAF0000
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Move X10, [X10+3584]
	285 Move X1, [X10]
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move X0, X19
	295 Move W2, W31
	296 Call 0x1C5D788
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X8, X8, X9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X19
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Compare X21, 0
	305 JumpIfNotEqual {350}
	306 And W0, W28, 1
	307 Move X20, [X31+112]
	308 Move X19, [X31+120]
	309 Move X22, [X31+96]
	310 Move X21, [X31+104]
	311 Move X24, [X31+80]
	312 Move X23, [X31+88]
	313 Move X26, [X31+64]
	314 Move X25, [X31+72]
	315 Move X28, [X31+48]
	316 Move X27, [X31+56]
	317 Move X29, [X31+32]
	318 Move X30, [X31+40]
	319 Add X31, X31, 128
	320 Return X0
	321 Call 0x1C17F20
	322 Move X0, 0xB37000
	323 Move X0, [X0+2848]
	324 Call 0x1C17D08
	325 Move X21, X0
	326 Move X0, 0xAF8000
	327 Move X0, [X0+2480]
	328 Call 0x1C17D08
	329 Move X2, X0
	330 Move X0, X21
	331 Move X1, X20
	332 Move X3, X31
	333 Call String.Concat, X0, X1, X2
	334 Move X20, X0
	335 Move X0, 0xB1D000
	336 Move X0, [X0+3080]
	337 Call 0x1C17D08
	338 Call 0x1C17F10
	339 Move X21, X0
	340 Move X1, X20
	341 Move X2, X31
	342 Call FormatException..ctor, X0, X1
	343 Move X0, 0xB37000
	344 Move X0, [X0+2856]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X21
	348 Call 0x1C17DEC
	349 Call 0x1C17F20
	350 Move X0, X21
	351 Call 0x1C17F18
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Move X0, 0xB1D000
	356 Move X0, [X0+3080]
	357 Call 0x1C17D08
	358 Call 0x1C17F10
	359 Move X20, X0
	360 Move X1, X31
	361 Call FormatException..ctor, X0
	362 Move X0, 0xB37000
	363 Move X0, [X0+2856]
	364 Call 0x1C17D08
	365 Move X1, X0
	366 Move X0, X20
	367 Call 0x1C17DEC
	368 Move X20, X0
	369 Move X20, X0
	370 Move W27, 1
	371 Move X20, X0
	372 Move W27, W28
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X20
	375 Call 0x3EB2AD0
	376 Move X21, [X0]
	377 Call 0x3EB2AE0
	378 Move W28, W27
	379 Compare X19, 0
	380 JumpIfNotEqual {281}
	381 Move X21, X31
	382 Move X20, X0
	383 Compare X19, 0
	384 JumpIfEqual {408}
	385 Move X8, [X19]
	386 Move X10, 0xAF0000
	387 NotImplemented "Instruction LDRH not yet implemented."
	388 Move X10, [X10+3584]
	389 Move X1, [X10]
	390 Compare X9, 0
	391 JumpIfEqual {398}
	392 Move X10, [X8+176]
	393 Add X10, X10, 8
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Subtract X9, X9, 1
	397 Add X10, X10, 16
	398 Move X0, X19
	399 Move W2, W31
	400 Call 0x1C5D788
	401 NotImplemented "Instruction LDRSW not yet implemented."
	402 Add X8, X8, X9
	403 Add X0, X8, 312
	404 Move X8, [X0]
	405 Move X1, [X0+8]
	406 Move X0, X19
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Compare X21, 0
	409 JumpIfNotEqual {412}
	410 Move X0, X20
	411 Call 0x1D2D690
	412 Move X0, X21
	413 Call 0x1C17F18
	414 Call 0x1991590

Method: System.Boolean TryAddWithoutValidation(System.String name, System.Collections.Generic.IEnumerable`1<System.String> values)

Disassembly:
	0x035F7F44 LDR X8, [X23]
	0x035F7F48 LDR X1, [X20]
	0x035F7F4C LDRH W9, [X8 + 0x12E]
	0x035F7F50 CBZ X9, 0x35F7F74
	0x035F7F54 LDR X10, [X8 + 0xB0]
	0x035F7F58 ADD X10, X10, 0x8
	0x035F7F5C LDUR X11, [X10 - 0x8]
	0x035F7F60 CMP X11, X1
	0x035F7F64 B.EQ 0x35F7F84
	0x035F7F68 SUBS X9, X9, 0x1
	0x035F7F6C ADD X10, X10, 0x10
	0x035F7F70 B.NE 0x35F7F5C
	0x035F7F74 MOV X0, X23
	0x035F7F78 MOV W2, W31
	0x035F7F7C BL 0x1C5C788
	0x035F7F80 B 0x35F7F90
	0x035F7F84 LDRSW X9, [X10]
	0x035F7F88 ADD X8, X8, X9, 0x4, LSL
	0x035F7F8C ADD X0, X8, 0x138
	0x035F7F90 LDP X8, X1, [X0]
	0x035F7F94 MOV X0, X23
	0x035F7F98 BLR X8
	0x035F7F9C CBZ X22, 0x35F8024
	0x035F7FA0 MOV X2, X0
	0x035F7FA4 MOV X0, X22
	0x035F7FA8 MOV X1, X24
	0x035F7FAC MOV X3, X31
	0x035F7FB0 BL 0x3680610
	0x035F7FB4 B 0x35F7EE8
	0x035F7FB8 MOV X24, X31
	0x035F7FBC TBZ X25, 0x1F, 0x35F801C
	0x035F7FC0 CBZ X23, 0x35F801C
	0x035F7FC4 LDR X8, [X23]
	0x035F7FC8 LDR X1, [X26]
	0x035F7FCC LDRH W9, [X8 + 0x12E]
	0x035F7FD0 CBZ X9, 0x35F7FF4
	0x035F7FD4 LDR X10, [X8 + 0xB0]
	0x035F7FD8 ADD X10, X10, 0x8
	0x035F7FDC LDUR X11, [X10 - 0x8]
	0x035F7FE0 CMP X11, X1
	0x035F7FE4 B.EQ 0x35F8004

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Compare X2, 0
	008 JumpIfEqual {32}
	009 Move X19, X2
	010 Add X2, X31, 8
	011 Move X20, X1
	012 Move X21, X0
	013 Call HttpHeaders.TryCheckName, X0, X1, X2
	014 Move W22, W0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {25}
	019 Move W4, 1
	020 Move X0, X21
	021 Move X1, X20
	022 Move X2, X19
	023 Move X3, X31
	024 Call HttpHeaders.AddInternal, X0, X1, X2, X3, X4
	025 And W0, W22, 1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0
	032 Move X0, 0xB02000
	033 Move X0, [X0+1320]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0xB07000
	038 Move X0, [X0+3800]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentNullException..ctor, X0, X1
	044 Move X0, 0xB44000
	045 Move X0, [X0+512]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Net.Http.Headers.HeaderInfo CheckName(System.String name)

Disassembly:
	0x036042D4 ADRP X0, 0xB36000
	0x036042D8 LDR X0, [X0 + 0xB40]
	0x036042DC BL 0x1C16CF4
	0x036042E0 ADRP X0, 0xB36000
	0x036042E4 LDR X0, [X0 + 0xB48]
	0x036042E8 BL 0x1C16CF4
	0x036042EC ADRP X0, 0xB17000
	0x036042F0 LDR X0, [X0 + 0xB50]
	0x036042F4 BL 0x1C16CF4
	0x036042F8 ADRP X0, 0xB36000
	0x036042FC LDR X0, [X0 + 0xB50]
	0x03604300 BL 0x1C16CF4
	0x03604304 ADRP X0, 0xB36000
	0x03604308 LDR X0, [X0 + 0xB58]
	0x0360430C BL 0x1C16CF4
	0x03604310 MOVZ W8, 0x1
	0x03604314 STRB W8, [X20 + 0x36E]
	0x03604318 ADD X8, X31, 0x78
	0x0360431C STP X8, X31, [X31 + 0x68]
	0x03604320 LDR W8, [X19 + 0x10]
	0x03604324 LDR X21, [X19 + 0x28]
	0x03604328 CMP W8, 0x1
	0x0360432C B.EQ 0x3604388
	0x03604330 CBNZ W8, 0x36044E4
	0x03604334 MOVN W8, 0x0
	0x03604338 STR W8, [X19 + 0x10]
	0x0360433C CBZ X21, 0x3604494
	0x03604340 LDR X0, [X21 + 0x10]
	0x03604344 CBZ X0, 0x3604498
	0x03604348 ADRP X8, 0xB36000
	0x0360434C LDR X8, [X8 + 0xB30]
	0x03604350 LDR X1, [X8]
	0x03604354 ADD X8, X31, 0x8
	0x03604358 BL 0x2AA54BC
	0x0360435C LDUR V0, [X31 + 0x8]
	0x03604360 LDUR V1, [X31 + 0x18]
	0x03604364 LDR X8, [X31 + 0x28]
	0x03604368 LDR X19, [X31 + 0x78]
	0x0360436C MOVN W9, 0x2
	0x03604370 STP V0, V1, [X31 + 0x30]
	0x03604374 STR X8, [X31 + 0x50]
	0x03604378 STR X8, [X19 + 0x50]
	0x0360437C STP V0, V1, [X19 + 0x30]
	0x03604380 STR W9, [X19 + 0x10]
	0x03604384 B 0x3604390
	0x03604388 MOVN W8, 0x2
	0x0360438C STR W8, [X19 + 0x10]
	0x03604390 ADRP X22, 0xB36000
	0x03604394 ADRP X23, 0xB36000
	0x03604398 ADRP X24, 0xB17000
	0x0360439C ADRP X25, 0xB36000
	0x036043A0 LDR X22, [X22 + 0xB40]
	0x036043A4 LDR X23, [X23 + 0xB38]
	0x036043A8 LDR X24, [X24 + 0xB50]
	0x036043AC LDR X25, [X25 + 0x380]
	0x036043B0 LDR X1, [X22]
	0x036043B4 ADD X0, X19, 0x30
	0x036043B8 BL 0x2C0A728
	0x036043BC MOV W8, W0
	0x036043C0 LDR X0, [X31 + 0x78]
	0x036043C4 TBZ X8, 0x0, 0x3604438
	0x036043C8 CBZ X21, 0x360448C
	0x036043CC LDR X8, [X21 + 0x10]
	0x036043D0 CBZ X8, 0x3604490
	0x036043D4 LDR X19, [X0 + 0x40]
	0x036043D8 LDR X2, [X23]
	0x036043DC MOV X0, X8
	0x036043E0 MOV X1, X19
	0x036043E4 BL 0x2AA5018
	0x036043E8 MOV X20, X0
	0x036043EC LDR X0, [X24]
	0x036043F0 LDR W8, [X0 + 0xE0]
	0x036043F4 CBNZ W8, 0x3604400
	0x036043F8 BL 0x1C16DFC
	0x036043FC LDR X0, [X24]
	0x03604400 LDR X8, [X0 + 0xB8]
	0x03604404 LDR X0, [X8]
	0x03604408 CBZ X0, 0x3604488
	0x0360440C LDR X3, [X25]
	0x03604410 ADD X2, X31, 0x70
	0x03604414 MOV X1, X19
	0x03604418 BL 0x2AA6B2C
	0x0360441C LDR X2, [X31 + 0x70]
	0x03604420 MOV X1, X20
	0x03604424 BL 0x3604000
	0x03604428 MOV X2, X0
	0x0360442C CBNZ X0, 0x3604454
	0x03604430 LDR X19, [X31 + 0x78]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDDD000
	007 Move W8, [X21+869]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB37000
	015 Move X0, [X0+896]
	016 Call 0x1C17CF4
	017 Move X0, 0xB18000
	018 Move X0, [X0+2896]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+869], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X31+8], X31
	025 Call String.IsNullOrEmpty, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {76}
	030 Move X21, 0xB18000
	031 Move X21, [X21+2896]
	032 Move X0, X19
	033 Call Token.Check, X0
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move X0, [X8]
	042 Compare X0, 0
	043 JumpIfEqual {75}
	044 Move X8, 0xB37000
	045 Move X8, [X8+896]
	046 Add X2, X31, 8
	047 Move X1, X19
	048 Move X3, [X8]
	049 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	050 Move X8, [X31+8]
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {68}
	055 Compare X8, 0
	056 JumpIfEqual {75}
	057 Move W9, [X8+20]
	058 Move W10, [X20+24]
	059 And W31, W10, W9
	060 Compare W10, 0
	061 JumpIfEqual {67}
	062 Or W8, W10, W9
	063 Move TEMP, X8
	064 And TEMP, TEMP, 4
	065 Compare TEMP, 4
	066 JumpIfEqual {94}
	067 Move X8, X31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move X21, [X31+24]
	072 Move X0, X8
	073 Add X31, X31, 48
	074 Return X0
	075 Call 0x1C17F20
	076 Move X0, 0xAF8000
	077 Move X0, [X0+1400]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Move X0, 0xAF8000
	082 Move X0, [X0+1416]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call ArgumentException..ctor, X0, X1
	088 Move X0, 0xB37000
	089 Move X0, [X0+2840]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X19
	093 Call 0x1C17DEC
	094 Move X0, 0xAF0000
	095 Move X0, [X0+1456]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X1, X19
	099 Move X2, X31
	100 Move X20, X0
	101 Call InvalidOperationException..ctor, X0, X1
	102 Move X0, 0xB37000
	103 Move X0, [X0+2840]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X20
	107 Call 0x1C17DEC

Method: System.Boolean TryCheckName(System.String name, out System.Net.Http.Headers.HeaderInfo headerInfo)

Disassembly:
	0x03604B0C LDR X0, [X23]
	0x03604B10 LDR X22, [X22 + 0x10]
	0x03604B14 LDR W8, [X0 + 0xE0]
	0x03604B18 CBNZ W8, 0x3604B20
	0x03604B1C BL 0x1C16DFC
	0x03604B20 CBZ X22, 0x3604B8C
	0x03604B24 UBFM X8, X21, 0x20, 0x3F
	0x03604B28 ADD W1, W8, 0x1
	0x03604B2C SUB W8, W20, W8
	0x03604B30 SUB W2, W8, 0x2
	0x03604B34 MOV X0, X22
	0x03604B38 MOV X3, X31
	0x03604B3C BL 0x3228DE4
	0x03604B40 B 0x3604B54
	0x03604B44 AND X2, X20, 0x0
	0x03604B48 MOV X0, X22
	0x03604B4C MOV X1, X21
	0x03604B50 BL 0x35FD280
	0x03604B54 ADRP X8, 0xB17000
	0x03604B58 LDR X8, [X8 + 0x8C8]
	0x03604B5C MOV X20, X0
	0x03604B60 LDR X0, [X8]
	0x03604B64 LDR W8, [X0 + 0xE0]
	0x03604B68 CBNZ W8, 0x3604B70
	0x03604B6C BL 0x1C16DFC
	0x03604B70 MOV X0, X20
	0x03604B74 MOV X1, X19
	0x03604B78 LDP X20, X19, [X31 + 0x30]
	0x03604B7C LDP X22, X21, [X31 + 0x20]
	0x03604B80 LDP X24, X23, [X31 + 0x10]
	0x03604B84 LDR X30, [X31], #0x40
	0x03604B88 B 0x3604B90
	0x03604B8C BL 0x1C16F20
	0x03604B90 STR X30, [X31 - 0x30]!
	0x03604B94 STP X22, X21, [X31 + 0x10]
	0x03604B98 STP X20, X19, [X31 + 0x20]
	0x03604B9C ADRP X22, 0xDDC000
	0x03604BA0 ADRP X21, 0xB17000
	0x03604BA4 LDRB W8, [X22 + 0x38A]
	0x03604BA8 LDR X21, [X21 + 0x8C8]
	0x03604BAC MOV X19, X1
	0x03604BB0 MOV X20, X0
	0x03604BB4 TBNZ X8, 0x0, 0x3604BE4
	0x03604BB8 ADRP X0, 0xB24000
	0x03604BBC LDR X0, [X0 + 0x328]
	0x03604BC0 BL 0x1C16CF4
	0x03604BC4 ADRP X0, 0xAF1000
	0x03604BC8 LDR X0, [X0 + 0xA58]
	0x03604BCC BL 0x1C16CF4
	0x03604BD0 ADRP X0, 0xB17000
	0x03604BD4 LDR X0, [X0 + 0x8C8]
	0x03604BD8 BL 0x1C16CF4
	0x03604BDC MOVZ W8, 0x1
	0x03604BE0 STRB W8, [X22 + 0x38A]
	0x03604BE4 LDR X0, [X21]
	0x03604BE8 ADRP X22, 0xB24000
	0x03604BEC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDDD000
	007 Move W8, [X22+870]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB37000
	016 Move X0, [X0+896]
	017 Call 0x1C17CF4
	018 Move X0, 0xB18000
	019 Move X0, [X0+2896]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+870], W8
	023 Move X0, X21
	024 Call Token.TryCheck, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {67}
	029 Move X22, 0xB18000
	030 Move X22, [X22+2896]
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfEqual {76}
	041 Move X8, 0xB37000
	042 Move X8, [X8+896]
	043 Move X1, X21
	044 Move X2, X19
	045 Move X3, [X8]
	046 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {66}
	051 Move X9, [X19]
	052 Compare X9, 0
	053 JumpIfEqual {76}
	054 Move W8, [X20+24]
	055 Compare W8, 0
	056 JumpIfEqual {66}
	057 Move W9, [X9+20]
	058 And W10, W8, W9
	059 Compare W10, 0
	060 JumpIfNotEqual {66}
	061 Or W8, W8, W9
	062 Move TEMP, X8
	063 And TEMP, TEMP, 4
	064 Compare TEMP, 4
	065 JumpIfEqual {75}
	066 Move W0, 1
	067 Move W0, W31
	068 Move [X19], X31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Move W0, W31
	076 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String, System.Collections.Generic.IEnumerable`1<System.String>>> GetEnumerator()

Disassembly:
	0x035F7A98 BL 0x1C16DFC
	0x035F7A9C LDR X8, [X23]
	0x035F7AA0 ADRP X9, 0xB26000
	0x035F7AA4 LDR X8, [X8 + 0xB8]
	0x035F7AA8 LDR X9, [X9 + 0xE48]
	0x035F7AAC LDR X22, [X8]
	0x035F7AB0 LDR X0, [X9]
	0x035F7AB4 BL 0x1C16F10
	0x035F7AB8 ADRP X8, 0xB43000
	0x035F7ABC LDR X8, [X8 + 0x318]
	0x035F7AC0 MOV X21, X0
	0x035F7AC4 LDR X2, [X8]
	0x035F7AC8 MOV X1, X22
	0x035F7ACC MOV X3, X31
	0x035F7AD0 BL 0x2A6B948
	0x035F7AD4 LDR X8, [X23]
	0x035F7AD8 LDR X8, [X8 + 0xB8]
	0x035F7ADC STR X21, [X8 + 0x18]
	0x035F7AE0 LDR X0, [X20]
	0x035F7AE4 LDR X22, [X19 + 0x38]
	0x035F7AE8 LDR W8, [X0 + 0xE0]
	0x035F7AEC CBNZ W8, 0x35F7AF4
	0x035F7AF0 BL 0x1C16DFC
	0x035F7AF4 ADD X0, X19, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDEA000
	006 Move X21, 0xB44000
	007 Move W8, [X20+871]
	008 Move X21, [X21+464]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB44000
	015 Move X0, [X0+464]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+871], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+40], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03604C80 ADRP X23, 0xAF1000

ISIL:
	001 Call HttpHeaders.GetEnumerator, X0
	002 Return X0

Method: System.String GetSingleHeaderString(System.String key, System.Collections.Generic.IEnumerable`1<System.String> values)

Disassembly:
	0x035FA274 MOVZ W8, 0x1
	0x035FA278 STRB W8, [X20 + 0x31C]
	0x035FA27C LDR X0, [X19]
	0x035FA280 ADRP X19, 0xAFB000
	0x035FA284 LDR W8, [X0 + 0xE0]
	0x035FA288 LDR X19, [X19 + 0xA40]
	0x035FA28C CBNZ W8, 0x35FA294
	0x035FA290 BL 0x1C16DFC
	0x035FA294 MOVZ X8, 0x40590000
	0x035FA298 FMOV D0, X8
	0x035FA29C MOV X0, X31
	0x035FA2A0 BL 0x3394754
	0x035FA2A4 LDR X8, [X19]
	0x035FA2A8 LDP X20, X19, [X31 + 0x10]
	0x035FA2AC LDR X8, [X8 + 0xB8]
	0x035FA2B0 STR X0, [X8]
	0x035FA2B4 LDR X30, [X31], #0x20
	0x035FA2B8 RET
	0x035FA2BC STR X30, [X31 - 0x10]!
	0x035FA2C0 LDR X0, [X0 + 0x10]
	0x035FA2C4 CBZ X0, 0x35FA2D8
	0x035FA2C8 LDR X8, [X0]
	0x035FA2CC LDP X4, X3, [X8 + 0x198]
	0x035FA2D0 LDR X30, [X31], #0x10
	0x035FA2D4 BR X4
	0x035FA2D8 BL 0x1C16F20
	0x035FA2DC STR X30, [X31 - 0x10]!
	0x035FA2E0 LDR X0, [X0 + 0x10]
	0x035FA2E4 CBZ X0, 0x35FA2F8
	0x035FA2E8 LDR X8, [X0]
	0x035FA2EC LDP X4, X3, [X8 + 0x198]
	0x035FA2F0 LDR X30, [X31], #0x10
	0x035FA2F4 BR X4
	0x035FA2F8 BL 0x1C16F20
	0x035FA2FC SUB X31, X31, 0x70
	0x035FA300 STR X30, [X31 + 0x30]
	0x035FA304 STP X24, X23, [X31 + 0x40]
	0x035FA308 STP X22, X21, [X31 + 0x50]
	0x035FA30C STP X20, X19, [X31 + 0x60]
	0x035FA310 ADRP X20, 0xDE6000
	0x035FA314 LDRB W8, [X20 + 0x31D]
	0x035FA318 MOV X19, X0
	0x035FA31C TBNZ X8, 0x0, 0x35FA3AC
	0x035FA320 ADRP X0, 0xB40000
	0x035FA324 LDR X0, [X0 + 0x400]
	0x035FA328 BL 0x1C16CF4
	0x035FA32C ADRP X0, 0xB40000
	0x035FA330 LDR X0, [X0 + 0x408]
	0x035FA334 BL 0x1C16CF4
	0x035FA338 ADRP X0, 0xB40000
	0x035FA33C LDR X0, [X0 + 0x280]
	0x035FA340 BL 0x1C16CF4
	0x035FA344 ADRP X0, 0xB40000
	0x035FA348 LDR X0, [X0 + 0x230]
	0x035FA34C BL 0x1C16CF4
	0x035FA350 ADRP X0, 0xAFB000
	0x035FA354 LDR X0, [X0 + 0xA50]
	0x035FA358 BL 0x1C16CF4
	0x035FA35C ADRP X0, 0xB40000
	0x035FA360 LDR X0, [X0 + 0x410]
	0x035FA364 BL 0x1C16CF4
	0x035FA368 ADRP X0, 0xB40000
	0x035FA36C LDR X0, [X0 + 0x418]
	0x035FA370 BL 0x1C16CF4
	0x035FA374 ADRP X0, 0xB40000
	0x035FA378 LDR X0, [X0 + 0x420]
	0x035FA37C BL 0x1C16CF4
	0x035FA380 ADRP X0, 0xAFB000
	0x035FA384 LDR X0, [X0 + 0xA30]
	0x035FA388 BL 0x1C16CF4
	0x035FA38C ADRP X0, 0xAF9000
	0x035FA390 LDR X0, [X0 + 0xE00]
	0x035FA394 BL 0x1C16CF4
	0x035FA398 ADRP X0, 0xB40000
	0x035FA39C LDR X0, [X0 + 0x428]
	0x035FA3A0 BL 0x1C16CF4
	0x035FA3A4 MOVZ W8, 0x1
	0x035FA3A8 STRB W8, [X20 + 0x31D]
	0x035FA3AC STP X31, X31, [X31 + 0x20]
	0x035FA3B0 STP X31, X31, [X31 + 0x10]
	0x035FA3B4 STR W31, [X31 + 0x8]
	0x035FA3B8 LDR W23, [X19]
	0x035FA3BC LDR X22, [X19 + 0x20]
	0x035FA3C0 CMP W23, 0x2
	0x035FA3C4 B.CC 0x35FA518
	0x035FA3C8 CBZ X22, 0x35FA720
	0x035FA3CC LDR X0, [X22 + 0x28]
	0x035FA3D0 CBZ X0, 0x35FA724
	0x035FA3D4 MOV X1, X31
	0x035FA3D8 BL 0x33DFA08
	0x035FA3DC ADRP X8, 0xAFB000
	0x035FA3E0 LDR X8, [X8 + 0xA50]
	0x035FA3E4 MOV X20, X0
	0x035FA3E8 LDR X21, [X19 + 0x28]
	0x035FA3EC LDR X0, [X8]
	0x035FA3F0 LDR W8, [X0 + 0xE0]
	0x035FA3F4 CBNZ W8, 0x35FA3FC
	0x035FA3F8 BL 0x1C16DFC
	0x035FA3FC MOV X0, X20
	0x035FA400 MOV X1, X21
	0x035FA404 MOV X2, X31
	0x035FA408 BL 0x33E0A98
	0x035FA40C STR X0, [X19 + 0x40]
	0x035FA410 LDR X8, [X22 + 0x10]
	0x035FA414 CBZ X8, 0x35FA45C
	0x035FA418 ADRP X9, 0xAFB000
	0x035FA41C LDR X9, [X9 + 0xA30]
	0x035FA420 LDR X10, [X8]
	0x035FA424 LDR X9, [X9]
	0x035FA428 LDRB W12, [X10 + 0x130]
	0x035FA42C LDRB W11, [X9 + 0x130]
	0x035FA430 CMP W12, W11
	0x035FA434 B.CC 0x35FA45C
	0x035FA438 LDR X10, [X10 + 0xC8]
	0x035FA43C ADD X10, X10, X11, 0x3, LSL
	0x035FA440 LDUR X10, [X10 - 0x8]
	0x035FA444 CMP X10, X9
	0x035FA448 B.NE 0x35FA45C
	0x035FA44C LDR X1, [X22 + 0x48]
	0x035FA450 MOV X0, X8
	0x035FA454 BL 0x35F58BC
	0x035FA458 LDR X0, [X19 + 0x40]
	0x035FA45C CBZ X0, 0x35FA728
	0x035FA460 LDR X1, [X22 + 0x48]
	0x035FA464 MOV X2, X31
	0x035FA468 BL 0x33DFDEC
	0x035FA46C LDR X0, [X19 + 0x40]
	0x035FA470 CBZ X0, 0x35FA72C
	0x035FA474 LDR X20, [X19 + 0x30]
	0x035FA478 MOV X1, X31
	0x035FA47C BL 0x33DFA08
	0x035FA480 MOV X2, X0
	0x035FA484 LDR X0, [X22 + 0x10]
	0x035FA488 CBZ X0, 0x35FA730
	0x035FA48C LDR X8, [X0]
	0x035FA490 LDP X9, X3, [X8 + 0x198]
	0x035FA494 MOV X1, X20
	0x035FA498 BLR X9
	0x035FA49C CBZ X0, 0x35FA734
	0x035FA4A0 ADRP X8, 0xB40000
	0x035FA4A4 LDR X8, [X8 + 0x428]
	0x035FA4A8 LDR X2, [X8]
	0x035FA4AC MOV W1, W31
	0x035FA4B0 BL 0x269F5D4
	0x035FA4B4 ADRP X8, 0xB40000
	0x035FA4B8 LDR X8, [X8 + 0x420]
	0x035FA4BC STP X0, X1, [X31 + 0x20]
	0x035FA4C0 LDR X8, [X8]
	0x035FA4C4 ADD X0, X31, 0x20
	0x035FA4C8 MOV X1, X8
	0x035FA4CC BL 0x2998B64
	0x035FA4D0 TBNZ X0, 0x0, 0x35FA558
	0x035FA4D4 STR W31, [X19]
	0x035FA4D8 LDR V0, [X31 + 0x2]
	0x035FA4DC ADRP X8, 0xB40000
	0x035FA4E0 STR V0, [X19 + 0x5]
	0x035FA4E4 LDR X8, [X8 + 0x230]
	0x035FA4E8 LDR X0, [X8]
	0x035FA4EC LDR W8, [X0 + 0xE0]
	0x035FA4F0 CBNZ W8, 0x35FA4F8
	0x035FA4F4 BL 0x1C16DFC
	0x035FA4F8 ADRP X8, 0xB40000
	0x035FA4FC LDR X8, [X8 + 0x408]
	0x035FA500 ADD X0, X19, 0x8
	0x035FA504 LDR X3, [X8]
	0x035FA508 ADD X1, X31, 0x20
	0x035FA50C MOV X2, X19
	0x035FA510 BL 0x1FAF268
	0x035FA514 B 0x35FA700
	0x035FA518 CBZ W23, 0x35FA544
	0x035FA51C LDR V0, [X19 + 0x6]
	0x035FA520 MOVN W23, 0x0
	0x035FA524 STR V0, [X31 + 0x1]
	0x035FA528 STP X31, X31, [X19 + 0x60]
	0x035FA52C STR W23, [X19]
	0x035FA530 ADD X0, X31, 0x10
	0x035FA534 MOV X1, X31
	0x035FA538 BL 0x32C40F0
	0x035FA53C LDR X20, [X19 + 0x48]
	0x035FA540 B 0x35FA600
	0x035FA544 LDR V0, [X19 + 0x5]
	0x035FA548 MOVN W23, 0x0
	0x035FA54C STR V0, [X31 + 0x2]
	0x035FA550 STP X31, X31, [X19 + 0x50]
	0x035FA554 STR W23, [X19]
	0x035FA558 ADRP X8, 0xB40000
	0x035FA55C LDR X8, [X8 + 0x418]
	0x035FA560 ADD X0, X31, 0x20
	0x035FA564 LDR X1, [X8]
	0x035FA568 BL 0x2998BB0
	0x035FA56C MOV X20, X0
	0x035FA570 STR X0, [X19 + 0x48]
	0x035FA574 CBZ X0, 0x35FA77C
	0x035FA578 LDR X0, [X20 + 0x38]
	0x035FA57C CBZ X0, 0x35FA600
	0x035FA580 LDRB W8, [X19 + 0x38]
	0x035FA584 TBNZ X8, 0x0, 0x35FA600
	0x035FA588 CBZ X22, 0x35FA7C4
	0x035FA58C LDR X1, [X22 + 0x40]
	0x035FA590 BL 0x35F8FB4
	0x035FA594 CBZ X0, 0x35FA7C8
	0x035FA598 MOV W1, W31
	0x035FA59C MOV X2, X31
	0x035FA5A0 BL 0x33ED3A0
	0x035FA5A4 STP X0, X1, [X31 + 0x10]
	0x035FA5A8 ADD X0, X31, 0x10
	0x035FA5AC MOV X1, X31
	0x035FA5B0 BL 0x32C40D4
	0x035FA5B4 TBNZ X0, 0x0, 0x35FA530
	0x035FA5B8 MOVZ W8, 0x1
	0x035FA5BC STR W8, [X19]
	0x035FA5C0 LDR V0, [X31 + 0x1]
	0x035FA5C4 ADRP X8, 0xB40000
	0x035FA5C8 STR V0, [X19 + 0x6]
	0x035FA5CC LDR X8, [X8 + 0x230]
	0x035FA5D0 LDR X0, [X8]
	0x035FA5D4 LDR W8, [X0 + 0xE0]
	0x035FA5D8 CBNZ W8, 0x35FA5E0
	0x035FA5DC BL 0x1C16DFC
	0x035FA5E0 ADRP X8, 0xB40000
	0x035FA5E4 LDR X8, [X8 + 0x400]
	0x035FA5E8 ADD X0, X19, 0x8
	0x035FA5EC LDR X3, [X8]
	0x035FA5F0 ADD X1, X31, 0x10
	0x035FA5F4 MOV X2, X19
	0x035FA5F8 BL 0x1FC6BC4
	0x035FA5FC B 0x35FA700
	0x035FA600 MOV X21, X31
	0x035FA604 MOV W24, W31
	0x035FA608 TBZ X23, 0x1F, 0x35FA674
	0x035FA60C LDR X22, [X19 + 0x40]
	0x035FA610 CBZ X22, 0x35FA674
	0x035FA614 ADRP X10, 0xAF9000
	0x035FA618 LDR X8, [X22]
	0x035FA61C LDR X10, [X10 + 0xE00]
	0x035FA620 LDRH W9, [X8 + 0x12E]
	0x035FA624 LDR X1, [X10]
	0x035FA628 CBZ X9, 0x35FA64C
	0x035FA62C LDR X10, [X8 + 0xB0]
	0x035FA630 ADD X10, X10, 0x8
	0x035FA634 LDUR X11, [X10 - 0x8]
	0x035FA638 CMP X11, X1
	0x035FA63C B.EQ 0x35FA65C
	0x035FA640 SUBS X9, X9, 0x1
	0x035FA644 ADD X10, X10, 0x10
	0x035FA648 B.NE 0x35FA634
	0x035FA64C MOV X0, X22
	0x035FA650 MOV W2, W31
	0x035FA654 BL 0x1C5C788
	0x035FA658 B 0x35FA668
	0x035FA65C LDRSW X9, [X10]
	0x035FA660 ADD X8, X8, X9, 0x4, LSL
	0x035FA664 ADD X0, X8, 0x138
	0x035FA668 LDP X8, X1, [X0]
	0x035FA66C MOV X0, X22
	0x035FA670 BLR X8
	0x035FA674 CBNZ X21, 0x35FA718
	0x035FA678 TBZ X24, 0x0, 0x35FA6C8
	0x035FA67C MOVN X8, 0x0
	0x035FA680 ADD X9, X31, 0x0
	0x035FA684 LDR X20, [X9, X8, LSL #3]
	0x035FA688 MOVN W8, 0x1
	0x035FA68C STR W8, [X19], #0x8
	0x035FA690 ADRP X0, 0xB40000
	0x035FA694 LDR X0, [X0 + 0x230]
	0x035FA698 BL 0x1C16D08
	0x035FA69C LDR W8, [X0 + 0xE0]
	0x035FA6A0 CBNZ W8, 0x35FA6A8
	0x035FA6A4 BL 0x1C16DFC
	0x035FA6A8 ADRP X0, 0xB40000
	0x035FA6AC LDR X0, [X0 + 0x350]
	0x035FA6B0 BL 0x1C16D08
	0x035FA6B4 MOV X2, X0
	0x035FA6B8 MOV X0, X19
	0x035FA6BC MOV X1, X20
	0x035FA6C0 BL 0x26324C8
	0x035FA6C4 B 0x35FA700
	0x035FA6C8 MOVN W8, 0x1
	0x035FA6CC STR W8, [X19], #0x8
	0x035FA6D0 ADRP X8, 0xB40000
	0x035FA6D4 LDR X8, [X8 + 0x230]
	0x035FA6D8 LDR X0, [X8]
	0x035FA6DC LDR W8, [X0 + 0xE0]
	0x035FA6E0 CBNZ W8, 0x35FA6E8
	0x035FA6E4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xDE7000
	013 Move X21, 0xAFC000
	014 Move X22, 0xB22000
	015 Move W8, [X23+872]
	016 Move X21, [X21+928]
	017 Move X22, [X22+2896]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0xB41000
	025 Move X0, [X0+896]
	026 Call 0x1C17CF4
	027 Move X0, 0xB22000
	028 Move X0, [X0+2896]
	029 Call 0x1C17CF4
	030 Move X0, 0xAFA000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0xAFA000
	034 Move X0, [X0+3952]
	035 Call 0x1C17CF4
	036 Move X0, 0xAFA000
	037 Move X0, [X0+3960]
	038 Call 0x1C17CF4
	039 Move X0, 0xAFA000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0xAFA000
	043 Move X0, [X0+2288]
	044 Call 0x1C17CF4
	045 Move X0, 0xAFA000
	046 Move X0, [X0+3544]
	047 Call 0x1C17CF4
	048 Move X0, 0xAFC000
	049 Move X0, [X0+928]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+872], W8
	053 Move X0, [X22]
	054 Move [X31+8], X31
	055 Move X21, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X22]
	061 Move X8, [X0+184]
	062 Move X0, [X8]
	063 Compare X0, 0
	064 JumpIfEqual {266}
	065 Move X8, 0xB41000
	066 Move X8, [X8+896]
	067 Add X2, X31, 8
	068 Move X1, X19
	069 Move X3, [X8]
	070 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {86}
	075 Move X0, [X31+8]
	076 Compare X0, 0
	077 JumpIfEqual {266}
	078 Move W8, [X0+16]
	079 Compare W8, 0
	080 JumpIfEqual {86}
	081 Move X8, [X0]
	082 Move X9, [X8+376]
	083 Move X1, [X8+384]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X21, X0
	086 Move X8, 0xAFA000
	087 Move X8, [X8+2288]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X1, X31
	091 Move X19, X0
	092 Call StringBuilder..ctor, X0
	093 Compare X20, 0
	094 JumpIfEqual {266}
	095 Move X10, 0xAFA000
	096 Move X8, [X20]
	097 Move X10, [X10+3952]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X20
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X25, 0xAFA000
	115 Move X25, [X25+3608]
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X26, 0xAFA000
	119 Move X27, 0xAFA000
	120 Move X23, 0xAFA000
	121 Move X26, [X26+3960]
	122 Move X27, [X27+3544]
	123 Move X23, [X23+3584]
	124 Move X0, X20
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X20, X0
	127 Move W8, 1
	128 Compare X20, 0
	129 JumpIfEqual {263}
	130 Move W24, W8
	131 Move X8, [X20]
	132 Move X1, [X25]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X20
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X20
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {207}
	156 Move X8, [X20]
	157 Move X1, [X26]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X20
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X20
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X22, X0
	178 Move TEMP, X24
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {184}
	182 Compare X19, 0
	183 JumpIfNotEqual {202}
	184 Compare X19, 0
	185 JumpIfEqual {265}
	186 Move X0, X19
	187 Move X1, X21
	188 Move X2, X31
	189 Call StringBuilder.Append, X0, X1
	190 Move X1, [X27]
	191 Move X0, X21
	192 Move X2, X31
	193 Call String.op_Inequality, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {202}
	198 Move X1, [X27]
	199 Move X0, X19
	200 Move X2, X31
	201 Call StringBuilder.Append, X0, X1
	202 Move X0, X19
	203 Move X1, X22
	204 Move X2, X31
	205 Call StringBuilder.Append, X0, X1
	206 Move W8, W31
	207 Move X21, X31
	208 Move W22, 6
	209 Compare X20, 0
	210 JumpIfEqual {232}
	211 Move X8, [X20]
	212 Move X1, [X23]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X20
	223 Move W2, W31
	224 Call 0x1C5D788
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X8, X8, X9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X1, [X0+8]
	230 Move X0, X20
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Compare X21, 0
	233 JumpIfNotEqual {267}
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Compare W22, 0
	236 JumpIfNotEqual {250}
	237 Move TEMP, X24
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {242}
	241 Move X2, X31
	242 Compare X19, 0
	243 JumpIfEqual {266}
	244 Move X8, [X19]
	245 Move X0, X19
	246 Move X9, [X8+360]
	247 Move X1, [X8+368]
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move X2, X0
	250 Move X20, [X31+80]
	251 Move X19, [X31+88]
	252 Move X22, [X31+64]
	253 Move X21, [X31+72]
	254 Move X24, [X31+48]
	255 Move X23, [X31+56]
	256 Move X26, [X31+32]
	257 Move X25, [X31+40]
	258 Move X30, [X31+16]
	259 Move X27, [X31+24]
	260 Move X0, X2
	261 Add X31, X31, 96
	262 Return X0
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Move X0, X21
	268 Call 0x1C17F18
	269 Move W24, W31
	270 Move W24, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Call 0x3EB2AD0
	273 Move X21, [X0]
	274 Call 0x3EB2AE0
	275 Move W22, W31
	276 Compare X20, 0
	277 JumpIfNotEqual {211}
	278 Move X19, X0
	279 Move X21, X31
	280 Move X19, X0
	281 Compare X20, 0
	282 JumpIfEqual {304}
	283 Move X8, [X20]
	284 Move X1, [X23]
	285 NotImplemented "Instruction LDRH not yet implemented."
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move X0, X20
	295 Move W2, W31
	296 Call 0x1C5D788
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X8, X8, X9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X20
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Compare X21, 0
	305 JumpIfNotEqual {308}
	306 Move X0, X19
	307 Call 0x1D2D690
	308 Move X0, X21
	309 Call 0x1C17F18
	310 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x03604C84 LDRB W8, [X24 + 0x38B]
	0x03604C88 LDR X23, [X23 + 0xC48]
	0x03604C8C MOV X19, X3
	0x03604C90 MOV X22, X2
	0x03604C94 MOV X20, X1
	0x03604C98 MOV X21, X0
	0x03604C9C TBNZ X8, 0x0, 0x3604CB4
	0x03604CA0 ADRP X0, 0xAF1000
	0x03604CA4 LDR X0, [X0 + 0xC48]
	0x03604CA8 BL 0x1C16CF4
	0x03604CAC MOVZ W8, 0x1
	0x03604CB0 STRB W8, [X24 + 0x38B]
	0x03604CB4 AND X2, X22, 0x0
	0x03604CB8 MOV X0, X21
	0x03604CBC MOV X1, X20
	0x03604CC0 BL 0x35FD280
	0x03604CC4 LDR X8, [X23]
	0x03604CC8 MOV X20, X0
	0x03604CCC LDR W9, [X8 + 0xE0]
	0x03604CD0 CBNZ W9, 0x3604CDC
	0x03604CD4 MOV X0, X8
	0x03604CD8 BL 0x1C16DFC
	0x03604CDC MOV X0, X31
	0x03604CE0 BL 0x3338524
	0x03604CE4 MOV X2, X0
	0x03604CE8 MOV X0, X20
	0x03604CEC MOV X3, X19
	0x03604CF0 LDP X20, X19, [X31 + 0x30]
	0x03604CF4 LDP X22, X21, [X31 + 0x20]
	0x03604CF8 LDP X24, X23, [X31 + 0x10]
	0x03604CFC MOVZ W1, 0x20
	0x03604D00 MOV X4, X31
	0x03604D04 LDR X30, [X31], #0x40
	0x03604D08 B 0x3366A70
	0x03604D0C STP X30, X23, [X31 - 0x30]!
	0x03604D10 STP X22, X21, [X31 + 0x10]
	0x03604D14 STP X20, X19, [X31 + 0x20]
	0x03604D18 ADRP X20, 0xDDC000
	0x03604D1C LDRB W8, [X20 + 0x38C]
	0x03604D20 MOV X19, X0
	0x03604D24 TBNZ X8, 0x0, 0x3604D3C
	0x03604D28 ADRP X0, 0xB17000
	0x03604D2C LDR X0, [X0 + 0x8C8]
	0x03604D30 BL 0x1C16CF4
	0x03604D34 MOVZ W8, 0x1
	0x03604D38 STRB W8, [X20 + 0x38C]
	0x03604D3C CBZ X19, 0x3604DC0
	0x03604D40 LDR W8, [X19 + 0x10]
	0x03604D44 CMP W8, 0x0
	0x03604D48 CSET W20, GT
	0x03604D4C CMP W8, 0x1
	0x03604D50 B.LT 0x3604DAC
	0x03604D54 ADRP X23, 0xB17000
	0x03604D58 LDR X23, [X23 + 0x8C8]
	0x03604D5C MOV W21, W31
	0x03604D60 MOV X0, X19
	0x03604D64 MOV W1, W21
	0x03604D68 MOV X2, X31
	0x03604D6C BL 0x3222A1C
	0x03604D70 LDR X8, [X23]
	0x03604D74 MOV W22, W0
	0x03604D78 LDR W9, [X8 + 0xE0]
	0x03604D7C CBNZ W9, 0x3604D88
	0x03604D80 MOV X0, X8
	0x03604D84 BL 0x1C16DFC
	0x03604D88 MOV W0, W22
	0x03604D8C BL 0x3604DC4
	0x03604D90 TBZ X0, 0x0, 0x3604DA8
	0x03604D94 LDR W8, [X19 + 0x10]
	0x03604D98 ADD W21, W21, 0x1
	0x03604D9C CMP W21, W8
	0x03604DA0 B.LT 0x3604D60
	0x03604DA4 B 0x3604DAC
	0x03604DA8 MOV W20, W31
	0x03604DAC MOV W0, W20
	0x03604DB0 LDP X20, X19, [X31 + 0x20]
	0x03604DB4 LDP X22, X21, [X31 + 0x10]
	0x03604DB8 LDP X30, X23, [X31], #0x30
	0x03604DBC RET
	0x03604DC0 BL 0x1C16F20
	0x03604DC4 STP X30, X21, [X31 - 0x20]!
	0x03604DC8 STP X20, X19, [X31 + 0x10]
	0x03604DCC ADRP X21, 0xDDC000
	0x03604DD0 ADRP X20, 0xB17000
	0x03604DD4 LDRB W8, [X21 + 0x38D]
	0x03604DD8 LDR X20, [X20 + 0x8C8]
	0x03604DDC MOV W19, W0
	0x03604DE0 TBNZ X8, 0x0, 0x3604DF8
	0x03604DE4 ADRP X0, 0xB17000
	0x03604DE8 LDR X0, [X0 + 0x8C8]
	0x03604DEC BL 0x1C16CF4
	0x03604DF0 MOVZ W8, 0x1
	0x03604DF4 STRB W8, [X21 + 0x38D]
	0x03604DF8 LDR X0, [X20]
	0x03604DFC LDR W8, [X0 + 0xE0]
	0x03604E00 CBNZ W8, 0x3604E0C
	0x03604E04 BL 0x1C16DFC
	0x03604E08 LDR X0, [X20]
	0x03604E0C LDR X8, [X0 + 0xB8]
	0x03604E10 LDR W8, [X8 + 0x8]
	0x03604E14 CMP W8, W19, UXTH
	0x03604E18 B.LE 0x3604E5C
	0x03604E1C LDR W8, [X0 + 0xE0]
	0x03604E20 CBNZ W8, 0x3604E2C
	0x03604E24 BL 0x1C16DFC
	0x03604E28 LDR X0, [X20]
	0x03604E2C LDR X8, [X0 + 0xB8]
	0x03604E30 LDR X8, [X8]
	0x03604E34 CBZ X8, 0x3604E6C
	0x03604E38 LDR W9, [X8 + 0x18]
	0x03604E3C AND W10, W19, 0xFFFF
	0x03604E40 CMP W10, W9
	0x03604E44 B.CS 0x3604E70
	0x03604E48 ADD X8, X8, W19, UXTH
	0x03604E4C LDRB W8, [X8 + 0x20]
	0x03604E50 CMP W8, 0x0
	0x03604E54 CSET W0, NE
	0x03604E58 B 0x3604E60
	0x03604E5C MOV W0, W31
	0x03604E60 LDP X20, X19, [X31 + 0x10]
	0x03604E64 LDP X30, X21, [X31], #0x20
	0x03604E68 RET
	0x03604E6C BL 0x1C16F20
	0x03604E70 BL 0x1C16F28
	0x03604E74 STP X30, X23, [X31 - 0x30]!
	0x03604E78 STP X22, X21, [X31 + 0x10]
	0x03604E7C STP X20, X19, [X31 + 0x20]
	0x03604E80 ADRP X22, 0xDDC000
	0x03604E84 ADRP X23, 0xB17000
	0x03604E88 LDRB W8, [X22 + 0x38E]
	0x03604E8C LDR X23, [X23 + 0x8D0]
	0x03604E90 MOV X21, X2
	0x03604E94 MOV X19, X1
	0x03604E98 MOV X20, X0
	0x03604E9C TBNZ X8, 0x0, 0x3604EB4
	0x03604EA0 ADRP X0, 0xB17000
	0x03604EA4 LDR X0, [X0 + 0x8D0]
	0x03604EA8 BL 0x1C16CF4
	0x03604EAC MOVZ W8, 0x1
	0x03604EB0 STRB W8, [X22 + 0x38E]
	0x03604EB4 MOV X0, X20
	0x03604EB8 MOV W1, W31
	0x03604EBC BL 0x35FCF70
	0x03604EC0 STR X0, [X21]
	0x03604EC4 STR W1, [X21 + 0x8]
	0x03604EC8 MOV X22, X0
	0x03604ECC LDR X0, [X23]
	0x03604ED0 LDR W8, [X0 + 0xE0]
	0x03604ED4 CBNZ W8, 0x3604EDC
	0x03604ED8 BL 0x1C16DFC
	0x03604EDC CMP W22, 0x9
	0x03604EE0 B.NE 0x3604F7C
	0x03604EE4 LDR X0, [X20 + 0x10]
	0x03604EE8 CBZ X0, 0x3604FD0
	0x03604EEC LDR W1, [X20 + 0x18]
	0x03604EF0 MOVZ W22, 0x1
	0x03604EF4 LDR W8, [X0 + 0x10]
	0x03604EF8 CMP W1, W8
	0x03604EFC B.GE 0x3604F7C
	0x03604F00 MOV X2, X31
	0x03604F04 BL 0x3222A1C
	0x03604F08 AND W8, W0, 0xFFFF
	0x03604F0C CMP W8, 0x29
	0x03604F10 B.EQ 0x3604F44
	0x03604F14 CMP W8, 0x28
	0x03604F18 B.EQ 0x3604F60
	0x03604F1C SUB W8, W0, 0x20
	0x03604F20 AND W8, W8, 0xFFFF
	0x03604F24 CMP W8, 0x5E
	0x03604F28 B.HI 0x3604F7C
	0x03604F2C LDR W8, [X20 + 0x18]
	0x03604F30 LDR X0, [X20 + 0x10]
	0x03604F34 ADD W1, W8, 0x1
	0x03604F38 STR W1, [X20 + 0x18]
	0x03604F3C CBNZ X0, 0x3604EF4
	0x03604F40 B 0x3604FD0
	0x03604F44 LDR W8, [X20 + 0x18]
	0x03604F48 SUB W22, W22, 0x1
	0x03604F4C CMP W22, 0x1
	0x03604F50 ADD W1, W8, 0x1
	0x03604F54 STR W1, [X20 + 0x18]
	0x03604F58 B.GE 0x3604F70
	0x03604F5C B 0x3604F9C
	0x03604F60 LDR W8, [X20 + 0x18]
	0x03604F64 ADD W22, W22, 0x1
	0x03604F68 ADD W1, W8, 0x1
	0x03604F6C STR W1, [X20 + 0x18]
	0x03604F70 LDR X0, [X20 + 0x10]
	0x03604F74 CBNZ X0, 0x3604EF4
	0x03604F78 B 0x3604FD0
	0x03604F7C MOV X0, X31
	0x03604F80 MOV W8, W31
	0x03604F84 STR X0, [X19]
	0x03604F88 LDP X20, X19, [X31 + 0x20]
	0x03604F8C LDP X22, X21, [X31 + 0x10]
	0x03604F90 MOV W0, W8
	0x03604F94 LDP X30, X23, [X31], #0x30
	0x03604F98 RET
	0x03604F9C LDR X0, [X23]
	0x03604FA0 LDR W8, [X0 + 0xE0]
	0x03604FA4 CBNZ W8, 0x3604FAC
	0x03604FA8 BL 0x1C16DFC
	0x03604FAC LDR X0, [X20 + 0x10]
	0x03604FB0 CBZ X0, 0x3604FD0
	0x03604FB4 LDR W1, [X21 + 0x4]
	0x03604FB8 LDR W8, [X20 + 0x18]
	0x03604FBC MOV X3, X31
	0x03604FC0 SUB W2, W8, W1
	0x03604FC4 BL 0x3228DE4
	0x03604FC8 MOVZ W8, 0x1
	0x03604FCC B 0x3604F84
	0x03604FD0 BL 0x1C16F20
	0x03604FD4 STR X30, [X31 - 0x30]!
	0x03604FD8 STP X22, X21, [X31 + 0x10]
	0x03604FDC STP X20, X19, [X31 + 0x20]
	0x03604FE0 ADRP X21, 0xDDC000
	0x03604FE4 ADRP X22, 0xAF1000
	0x03604FE8 ADRP X19, 0xB36000
	0x03604FEC ADRP X20, 0xB17000
	0x03604FF0 LDRB W8, [X21 + 0x390]
	0x03604FF4 LDR X22, [X22 + 0x9B8]
	0x03604FF8 LDR X19, [X19 + 0xBA0]
	0x03604FFC LDR X20, [X20 + 0x8C8]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xDDD000
	013 Move X20, 0xAF0000
	014 Move W8, [X21+873]
	015 Move X20, [X20+2288]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xB18000
	022 Move X0, [X0+2896]
	023 Call 0x1C17CF4
	024 Move X0, 0xAF0000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xAF3000
	028 Move X0, [X0+608]
	029 Call 0x1C17CF4
	030 Move X0, 0xAF0000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0xAF3000
	034 Move X0, [X0+616]
	035 Call 0x1C17CF4
	036 Move X0, 0xAF3000
	037 Move X0, [X0+624]
	038 Call 0x1C17CF4
	039 Move X0, 0xAF0000
	040 Move X0, [X0+2288]
	041 Call 0x1C17CF4
	042 Move X0, 0xAF4000
	043 Move X0, [X0+2344]
	044 Call 0x1C17CF4
	045 Move X0, 0xB2E000
	046 Move X0, [X0+1056]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+873], W8
	050 Move X0, [X20]
	051 Move X23, 0xAF0000
	052 Move X23, [X23+3584]
	053 Call 0x1C17F10
	054 Move X1, X31
	055 Move X20, X0
	056 Call StringBuilder..ctor, X0
	057 Move X0, X19
	058 Call HttpHeaders.GetEnumerator, X0
	059 Move X19, X0
	060 Compare X0, 0
	061 JumpIfEqual {191}
	062 Move X24, 0xAF0000
	063 Move X25, 0xAF3000
	064 Move X26, 0xAF4000
	065 Move X27, 0xB18000
	066 Move X28, 0xB2E000
	067 Move X24, [X24+3608]
	068 Move X25, [X25+608]
	069 Move X26, [X26+2344]
	070 Move X27, [X27+2896]
	071 Move X28, [X28+1056]
	072 Move X8, [X19]
	073 Move X1, [X24]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Compare X9, 0
	076 JumpIfEqual {83}
	077 Move X10, [X8+176]
	078 Add X10, X10, 8
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Subtract X9, X9, 1
	082 Add X10, X10, 16
	083 Move X0, X19
	084 Move W2, W31
	085 Call 0x1C5D788
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {146}
	097 Move X8, [X19]
	098 Move X1, [X25]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X19
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X19
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X20, 0
	119 JumpIfEqual {190}
	120 Move X21, X0
	121 Move X22, X1
	122 Move X0, X20
	123 Move X1, X21
	124 Move X2, X31
	125 Call StringBuilder.Append, X0, X1
	126 Move X1, [X26]
	127 Move X0, X20
	128 Move X2, X31
	129 Call StringBuilder.Append, X0, X1
	130 Move X0, [X27]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X21
	136 Move X1, X22
	137 Call HttpHeaders.GetSingleHeaderString, X0, X1
	138 Move X1, X0
	139 Move X0, X20
	140 Move X2, X31
	141 Call StringBuilder.Append, X0, X1
	142 Move X1, [X28]
	143 Move X0, X20
	144 Move X2, X31
	145 Call StringBuilder.Append, X0, X1
	146 Move X21, X31
	147 Compare X19, 0
	148 JumpIfEqual {170}
	149 Move X8, [X19]
	150 Move X1, [X23]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X19
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X21, 0
	171 JumpIfNotEqual {192}
	172 Compare X20, 0
	173 JumpIfEqual {194}
	174 Move X8, [X20]
	175 Move X0, X20
	176 Move X20, [X31+80]
	177 Move X19, [X31+88]
	178 Move X22, [X31+64]
	179 Move X21, [X31+72]
	180 Move X2, [X8+360]
	181 Move X1, [X8+368]
	182 Move X24, [X31+48]
	183 Move X23, [X31+56]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 Move X30, [X31+96]
	189 CallNoReturn X2
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Move X0, X21
	193 Call 0x1C17F18
	194 Call 0x1C17F20
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Call 0x3EB2AD0
	197 Move X21, [X0]
	198 Call 0x3EB2AE0
	199 Move X20, X0
	200 Move X21, X31
	201 Move X20, X0
	202 Compare X19, 0
	203 JumpIfEqual {225}
	204 Move X8, [X19]
	205 Move X1, [X23]
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X19
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X19
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X21, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X20
	228 Call 0x1D2D690
	229 Move X0, X21
	230 Call 0x1C17F18
	231 Call 0x1991590

Method: System.Collections.Generic.List`1<System.String> GetAllHeaderValues(System.Net.Http.Headers.HttpHeaders/HeaderBucket bucket, System.Net.Http.Headers.HeaderInfo headerInfo)

Disassembly:
	0x03605000 TBNZ X8, 0x0, 0x3605078
	0x03605004 ADRP X0, 0xAF0000
	0x03605008 LDR X0, [X0 + 0x9B8]
	0x0360500C BL 0x1C16CF4
	0x03605010 ADRP X0, 0xB16000
	0x03605014 LDR X0, [X0 + 0x8C8]
	0x03605018 BL 0x1C16CF4
	0x0360501C ADRP X0, 0xAEE000
	0x03605020 LDR X0, [X0 + 0xAC8]
	0x03605024 BL 0x1C16CF4
	0x03605028 ADRP X0, 0xB35000
	0x0360502C LDR X0, [X0 + 0xBA0]
	0x03605030 BL 0x1C16CF4
	0x03605034 ADRP X0, 0xB35000
	0x03605038 LDR X0, [X0 + 0xBA8]
	0x0360503C BL 0x1C16CF4
	0x03605040 ADRP X0, 0xB35000
	0x03605044 LDR X0, [X0 + 0xBB0]
	0x03605048 BL 0x1C16CF4
	0x0360504C ADRP X0, 0xB35000
	0x03605050 LDR X0, [X0 + 0xBB8]
	0x03605054 BL 0x1C16CF4
	0x03605058 ADRP X0, 0xB1B000
	0x0360505C LDR X0, [X0 + 0x3A8]
	0x03605060 BL 0x1C16CF4
	0x03605064 ADRP X0, 0xB35000
	0x03605068 LDR X0, [X0 + 0xBC0]
	0x0360506C BL 0x1C16CF4
	0x03605070 MOVZ W8, 0x1
	0x03605074 STRB W8, [X21 + 0x390]
	0x03605078 LDR X0, [X22]
	0x0360507C MOVZ W1, 0x7F
	0x03605080 BL 0x1C16D6C
	0x03605084 LDR X1, [X19]
	0x03605088 MOV X2, X31
	0x0360508C MOV X19, X0
	0x03605090 BL 0x32C5BD8
	0x03605094 LDR X8, [X20]
	0x03605098 LDR X8, [X8 + 0xB8]
	0x0360509C STR X19, [X8]
	0x036050A0 LDR X8, [X20]
	0x036050A4 LDR X8, [X8 + 0xB8]
	0x036050A8 LDR X9, [X8]
	0x036050AC CBZ X9, 0x3605168
	0x036050B0 LDR X9, [X9 + 0x18]
	0x036050B4 ADRP X10, 0xAEE000
	0x036050B8 LDR X10, [X10 + 0xAC8]
	0x036050BC MOVZ W1, 0x5
	0x036050C0 STR W9, [X8 + 0x8]
	0x036050C4 LDR X0, [X10]
	0x036050C8 BL 0x1C16D6C
	0x036050CC CBZ X0, 0x3605168
	0x036050D0 LDR W8, [X0 + 0x18]
	0x036050D4 CBZ W8, 0x3605164
	0x036050D8 ADRP X9, 0xB1B000
	0x036050DC LDR X9, [X9 + 0x3A8]
	0x036050E0 CMP W8, 0x1
	0x036050E4 LDR X9, [X9]
	0x036050E8 STR X9, [X0 + 0x20]
	0x036050EC B.EQ 0x3605164
	0x036050F0 ADRP X9, 0xB35000
	0x036050F4 LDR X9, [X9 + 0xBB8]
	0x036050F8 CMP W8, 0x2
	0x036050FC LDR X9, [X9]
	0x03605100 STR X9, [X0 + 0x28]
	0x03605104 B.LS 0x3605164
	0x03605108 ADRP X9, 0xB35000
	0x0360510C LDR X9, [X9 + 0xBB0]
	0x03605110 CMP W8, 0x3
	0x03605114 LDR X9, [X9]
	0x03605118 STR X9, [X0 + 0x30]
	0x0360511C B.EQ 0x3605164
	0x03605120 ADRP X9, 0xB35000
	0x03605124 LDR X9, [X9 + 0xBC0]
	0x03605128 CMP W8, 0x4
	0x0360512C LDR X9, [X9]
	0x03605130 STR X9, [X0 + 0x38]
	0x03605134 B.LS 0x3605164
	0x03605138 ADRP X8, 0xB35000
	0x0360513C LDR X8, [X8 + 0xBA8]
	0x03605140 LDP X22, X21, [X31 + 0x10]
	0x03605144 LDR X8, [X8]
	0x03605148 STR X8, [X0 + 0x40]
	0x0360514C LDR X8, [X20]
	0x03605150 LDP X20, X19, [X31 + 0x20]
	0x03605154 LDR X8, [X8 + 0xB8]
	0x03605158 STR X0, [X8 + 0x10]
	0x0360515C LDR X30, [X31], #0x30
	0x03605160 RET
	0x03605164 BL 0x1C16F28
	0x03605168 BL 0x1C16F20
	0x0360516C STR X30, [X31 - 0x20]!
	0x03605170 STP X20, X19, [X31 + 0x10]
	0x03605174 MOV X19, X1
	0x03605178 MOV X1, X31
	0x0360517C MOV X20, X0
	0x03605180 BL 0x33BDD8C
	0x03605184 MOV X0, X20
	0x03605188 MOV X1, X19
	0x0360518C LDP X20, X19, [X31 + 0x10]
	0x03605190 LDR X30, [X31], #0x20
	0x03605194 B 0x3605198
	0x03605198 SUB X31, X31, 0x40
	0x0360519C STP X30, X21, [X31 + 0x20]
	0x036051A0 STP X20, X19, [X31 + 0x30]
	0x036051A4 ADRP X21, 0xDDB000
	0x036051A8 LDRB W8, [X21 + 0x393]
	0x036051AC MOV X20, X1
	0x036051B0 MOV X19, X0
	0x036051B4 TBNZ X8, 0x0, 0x36051F0
	0x036051B8 ADRP X0, 0xB16000
	0x036051BC LDR X0, [X0 + 0x8C8]
	0x036051C0 BL 0x1C16CF4
	0x036051C4 ADRP X0, 0xB35000
	0x036051C8 LDR X0, [X0 + 0xBC8]
	0x036051CC BL 0x1C16CF4
	0x036051D0 ADRP X0, 0xB35000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDDC000
	006 Move W8, [X21+874]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xB1A000
	014 Move X0, [X0+3888]
	015 Call 0x1C17CF4
	016 Move X0, 0xAF0000
	017 Move X0, [X0+440]
	018 Call 0x1C17CF4
	019 Move X0, 0xAF0000
	020 Move X0, [X0+448]
	021 Call 0x1C17CF4
	022 Move X0, 0xAF0000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+874], W8
	027 Compare X20, 0
	028 JumpIfEqual {41}
	029 Move W8, [X20+16]
	030 Compare W8, 0
	031 JumpIfEqual {41}
	032 Compare X19, 0
	033 JumpIfEqual {135}
	034 Move X8, [X20]
	035 Move X1, [X19+16]
	036 Move X0, X20
	037 Move X9, [X8+424]
	038 Move X2, [X8+432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, X0
	041 Compare X19, 0
	042 JumpIfEqual {135}
	043 Move X8, [X19+16]
	044 Compare X8, 0
	045 JumpIfEqual {83}
	046 Move X0, X19
	047 Call HeaderBucket.ParsedToString, X0
	048 Move X1, X31
	049 Move X21, X0
	050 Call String.IsNullOrEmpty, X0
	051 Move X20, X31
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {90}
	056 Move X8, 0xAF0000
	057 Move X8, [X8+464]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X8, 0xAF0000
	061 Move X8, [X8+448]
	062 Move X20, X0
	063 Move X1, [X8]
	064 Call List`1<Object>..ctor, X0
	065 Compare X20, 0
	066 JumpIfEqual {135}
	067 Move X9, 0xAF0000
	068 Move X9, [X9+440]
	069 Move W10, [X20+28]
	070 Move X8, [X20+16]
	071 Move X9, [X9]
	072 Add W10, W10, 1
	073 Move [X20+28], W10
	074 Compare X8, 0
	075 JumpIfEqual {135}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W11, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W9, W10, 1
	080 Add X8, X8, X10
	081 Move [X20+24], W9
	082 Move [X8+32], X21
	083 Move X20, X31
	084 Move X8, [X9+32]
	085 Move X0, X20
	086 Move X1, X21
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<Object>.AddWithResize, X0, X1
	090 Move X21, 0xDDC000
	091 Move W8, [X21+876]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {101}
	096 Move X0, 0xAF0000
	097 Move X0, [X0+456]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+876], W8
	101 Move X8, [X19+24]
	102 Compare X8, 0
	103 JumpIfEqual {129}
	104 Move W8, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X20, 0
	107 JumpIfEqual {110}
	108 Move X0, X19
	109 Call HeaderBucket.get_Values, X0
	110 Move X8, 0xAF0000
	111 Move X8, [X8+464]
	112 Move X0, [X8]
	113 Call 0x1C17F10
	114 Move X8, 0xAF0000
	115 Move X8, [X8+448]
	116 Move X20, X0
	117 Move X1, [X8]
	118 Call List`1<Object>..ctor, X0
	119 Move X0, X19
	120 Call HeaderBucket.get_Values, X0
	121 Compare X20, 0
	122 JumpIfEqual {135}
	123 Move X8, 0xB1A000
	124 Move X8, [X8+3888]
	125 Move X1, X0
	126 Move X0, X20
	127 Move X2, [X8]
	128 Call List`1<Object>.AddRange, X0, X1
	129 Move X0, X20
	130 Move X20, [X31+16]
	131 Move X19, [X31+24]
	132 Move X30, [X31+32]
	133 Move X21, [X31+40]
	134 Return X0
	135 Call 0x1C17F20

Method: System.Net.Http.Headers.HttpHeaderKind GetKnownHeaderKind(System.String name)

Disassembly:
	0x035FA178 BL 0x1C16CF4
	0x035FA17C ADRP X0, 0xB40000
	0x035FA180 LDR X0, [X0 + 0x3F8]
	0x035FA184 BL 0x1C16CF4
	0x035FA188 ADRP X0, 0xB40000
	0x035FA18C LDR X0, [X0 + 0x248]
	0x035FA190 BL 0x1C16CF4
	0x035FA194 ADRP X0, 0xB40000
	0x035FA198 LDR X0, [X0 + 0x230]
	0x035FA19C BL 0x1C16CF4
	0x035FA1A0 MOVZ W8, 0x1
	0x035FA1A4 STRB W8, [X24 + 0x31B]
	0x035FA1A8 LDR X0, [X23]
	0x035FA1AC MOVI V0.2D, 0x0
	0x035FA1B0 STP V0, V0, [X31 + 0x20]
	0x035FA1B4 STP V0, V0, [X31 + 0x50]
	0x035FA1B8 STR V0, [X31 + 0x4]
	0x035FA1BC STP V0, V0, [X31]
	0x035FA1C0 STP X19, X22, [X31 + 0x28]
	0x035FA1C4 STR W20, [X31 + 0x38]
	0x035FA1C8 STR X21, [X31 + 0x20]
	0x035FA1CC ADRP X19, 0xB40000
	0x035FA1D0 ADRP X21, 0xB40000
	0x035FA1D4 ADRP X20, 0xB40000
	0x035FA1D8 LDR W8, [X0 + 0xE0]
	0x035FA1DC LDR X19, [X19 + 0x238]
	0x035FA1E0 LDR X21, [X21 + 0x3F8]
	0x035FA1E4 LDR X20, [X20 + 0x248]
	0x035FA1E8 CBNZ W8, 0x35FA1F0
	0x035FA1EC BL 0x1C16DFC
	0x035FA1F0 LDR X0, [X19]
	0x035FA1F4 ADD X8, X31, 0x0
	0x035FA1F8 ORR X19, X8, 0xF
	0x035FA1FC MOV X8, X19
	0x035FA200 BL 0x263221C
	0x035FA204 LDR X2, [X21]
	0x035FA208 MOVN W8, 0x0
	0x035FA20C ADD X1, X31, 0x0
	0x035FA210 MOV X0, X19
	0x035FA214 STR W8, [X31]
	0x035FA218 BL 0x1FCF914
	0x035FA21C LDR X1, [X20]
	0x035FA220 MOV X0, X19
	0x035FA224 BL 0x2632230
	0x035FA228 LDP X20, X19, [X31 + 0xA0]
	0x035FA22C LDP X22, X21, [X31 + 0x90]
	0x035FA230 LDP X24, X23, [X31 + 0x80]
	0x035FA234 LDR X30, [X31 + 0x70]
	0x035FA238 ADD X31, X31, 0xB0
	0x035FA23C RET
	0x035FA240 STR X30, [X31 - 0x20]!
	0x035FA244 STP X20, X19, [X31 + 0x10]
	0x035FA248 ADRP X20, 0xDE6000
	0x035FA24C ADRP X19, 0xAFB000
	0x035FA250 LDRB W8, [X20 + 0x31C]
	0x035FA254 LDR X19, [X19 + 0x570]
	0x035FA258 TBNZ X8, 0x0, 0x35FA27C
	0x035FA25C ADRP X0, 0xAFB000
	0x035FA260 LDR X0, [X0 + 0xA40]
	0x035FA264 BL 0x1C16CF4
	0x035FA268 ADRP X0, 0xAFB000
	0x035FA26C LDR X0, [X0 + 0x570]
	0x035FA270 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE7000
	005 Move W8, [X20+875]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB41000
	012 Move X0, [X0+896]
	013 Call 0x1C17CF4
	014 Move X0, 0xB22000
	015 Move X0, [X0+2896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+875], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Move [X31+8], X31
	022 Call String.IsNullOrEmpty, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X20, 0xB22000
	028 Move X20, [X20+2896]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X0, [X8]
	037 Compare X0, 0
	038 JumpIfEqual {58}
	039 Move X8, 0xB41000
	040 Move X8, [X8+896]
	041 Add X2, X31, 8
	042 Move X1, X19
	043 Move X3, [X8]
	044 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {53}
	049 Move X8, [X31+8]
	050 Compare X8, 0
	051 JumpIfEqual {58}
	052 Move W0, [X8+20]
	053 Move W0, W31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return X0
	058 Call 0x1C17F20
	059 Move X0, 0xB02000
	060 Move X0, [X0+1400]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X19, X0
	064 Move X0, 0xB02000
	065 Move X0, [X0+1416]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Move X2, X31
	070 Call ArgumentException..ctor, X0, X1
	071 Move X0, 0xB41000
	072 Move X0, [X0+904]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X19
	076 Call 0x1C17DEC

Method: T GetValue(System.String name)

Disassembly:
	0x021ED5E0 CBZ X22, 0x21ED6C0
	0x021ED5E4 LDR X8, [X19 + 0x38]
	0x021ED5E8 ADD X9, X31, 0x18
	0x021ED5EC ADD X3, X31, 0x8
	0x021ED5F0 ADD X4, X31, 0x10
	0x021ED5F4 LDR X1, [X8 + 0x8]
	0x021ED5F8 MOV X2, X22
	0x021ED5FC LDR X8, [X1]
	0x021ED600 STR X0, [X31 + 0x18]
	0x021ED604 STR X9, [X31 + 0x8]
	0x021ED608 LDR X9, [X1 + 0x10]
	0x021ED60C MOV X0, X8
	0x021ED610 BLR X9
	0x021ED614 ADRP X8, 0x1F07000
	0x021ED618 LDR X22, [X31 + 0x10]
	0x021ED61C LDR W23, [X20 + 0xD8]
	0x021ED620 LDR X8, [X8 + 0xE70]
	0x021ED624 LDR X0, [X8]
	0x021ED628 BL 0x1C16F10
	0x021ED62C LDR X8, [X20]
	0x021ED630 MOV X1, X20
	0x021ED634 MOV X3, X31
	0x021ED638 MOV X24, X0
	0x021ED63C LDR X2, [X8 + 0x310]
	0x021ED640 BL 0x3314368
	0x021ED644 ADRP X8, 0x1F0F000
	0x021ED648 LDR X8, [X8 + 0x940]
	0x021ED64C LDR X0, [X8]
	0x021ED650 BL 0x1C16F10
	0x021ED654 LDR X8, [X19 + 0x38]
	0x021ED658 MOV X1, X20
	0x021ED65C MOV X3, X31
	0x021ED660 MOV X25, X0
	0x021ED664 LDR X2, [X8 + 0x18]
	0x021ED668 BL 0x2D27194
	0x021ED66C ADRP X8, 0x1F2E000
	0x021ED670 LDR X8, [X8 + 0xB88]
	0x021ED674 LDR X0, [X8]
	0x021ED678 LDR W8, [X0 + 0xE0]
	0x021ED67C CBNZ W8, 0x21ED684
	0x021ED680 BL 0x1C16DFC
	0x021ED684 LDR X8, [X19 + 0x38]
	0x021ED688 MOV X0, X22
	0x021ED68C MOV W1, W23
	0x021ED690 MOV X2, X24
	0x021ED694 LDR X5, [X8 + 0x20]
	0x021ED698 MOV X3, X25
	0x021ED69C MOV X4, X21
	0x021ED6A0 LDR X8, [X5]
	0x021ED6A4 BLR X8
	0x021ED6A8 LDP X20, X19, [X31 + 0x50]
	0x021ED6AC LDP X22, X21, [X31 + 0x40]
	0x021ED6B0 LDP X24, X23, [X31 + 0x30]
	0x021ED6B4 LDP X30, X25, [X31 + 0x20]
	0x021ED6B8 ADD X31, X31, 0x60
	0x021ED6BC RET
	0x021ED6C0 BL 0x1C16F20
	0x021ED6C4 STR X30, [X31 - 0x40]!
	0x021ED6C8 STP X24, X23, [X31 + 0x10]
	0x021ED6CC STP X22, X21, [X31 + 0x20]
	0x021ED6D0 STP X20, X19, [X31 + 0x30]
	0x021ED6D4 LDR X8, [X5 + 0x38]
	0x021ED6D8 MOV X21, X5
	0x021ED6DC MOV X24, X4
	0x021ED6E0 MOV X19, X3
	0x021ED6E4 MOV X20, X2
	0x021ED6E8 MOV W22, W1
	0x021ED6EC MOV X23, X0
	0x021ED6F0 CBNZ X8, 0x21ED71C
	0x021ED6F4 ADRP X0, 0x1F08000
	0x021ED6F8 LDR X0, [X0 + 0xA50]
	0x021ED6FC BL 0x1C16CF4
	0x021ED700 ADRP X0, 0x1F2E000
	0x021ED704 LDR X0, [X0 + 0xB88]
	0x021ED708 BL 0x1C16CF4
	0x021ED70C LDR X8, [X21 + 0x38]
	0x021ED710 CBNZ X8, 0x21ED71C
	0x021ED714 MOV X0, X21
	0x021ED718 BL 0x1C5C6E0
	0x021ED71C ADRP X8, 0x1F08000
	0x021ED720 LDR X8, [X8 + 0xA50]
	0x021ED724 LDR X0, [X8]
	0x021ED728 LDR W8, [X0 + 0xE0]
	0x021ED72C CBNZ W8, 0x21ED734
	0x021ED730 BL 0x1C16DFC
	0x021ED734 MOV X0, X24
	0x021ED738 MOV X1, X31
	0x021ED73C BL 0x33E0DCC
	0x021ED740 CBZ X0, 0x21ED7B8
	0x021ED744 MOV X1, X31
	0x021ED748 MOV X24, X0
	0x021ED74C BL 0x33DFA08
	0x021ED750 CBZ X23, 0x21ED7B8
	0x021ED754 MOV X1, X0
	0x021ED758 LDR X8, [X23 + 0x18]
	0x021ED75C LDR X0, [X23 + 0x40]
	0x021ED760 LDR X2, [X23 + 0x28]
	0x021ED764 BLR X8
	0x021ED768 ADRP X8, 0x1F2E000
	0x021ED76C LDR X8, [X8 + 0xB88]
	0x021ED770 MOV X23, X0
	0x021ED774 LDR X8, [X8]
	0x021ED778 LDR W9, [X8 + 0xE0]
	0x021ED77C CBNZ W9, 0x21ED788
	0x021ED780 MOV X0, X8
	0x021ED784 BL 0x1C16DFC
	0x021ED788 LDR X8, [X21 + 0x38]
	0x021ED78C MOV X0, X23
	0x021ED790 MOV W1, W22
	0x021ED794 MOV X2, X20
	0x021ED798 LDR X5, [X8 + 0x18]
	0x021ED79C MOV X3, X19
	0x021ED7A0 MOV X4, X24
	0x021ED7A4 LDP X20, X19, [X31 + 0x30]
	0x021ED7A8 LDP X22, X21, [X31 + 0x20]
	0x021ED7AC LDP X24, X23, [X31 + 0x10]
	0x021ED7B0 LDR X30, [X31], #0x40
	0x021ED7B4 B 0x21ED8DC
	0x021ED7B8 BL 0x1C16F20
	0x021ED7BC SUB X31, X31, 0x50
	0x021ED7C0 STR X30, [X31 + 0x10]
	0x021ED7C4 STP X24, X23, [X31 + 0x20]
	0x021ED7C8 STP X22, X21, [X31 + 0x30]
	0x021ED7CC STP X20, X19, [X31 + 0x40]
	0x021ED7D0 LDR X8, [X5 + 0x38]
	0x021ED7D4 MOV X22, X5
	0x021ED7D8 MOV X24, X4
	0x021ED7DC MOV X19, X3
	0x021ED7E0 MOV X20, X2
	0x021ED7E4 MOV W21, W1
	0x021ED7E8 MOV X23, X0
	0x021ED7EC CBNZ X8, 0x21ED818
	0x021ED7F0 ADRP X0, 0x1F08000
	0x021ED7F4 LDR X0, [X0 + 0xA50]
	0x021ED7F8 BL 0x1C16CF4
	0x021ED7FC ADRP X0, 0x1F2E000
	0x021ED800 LDR X0, [X0 + 0xB88]
	0x021ED804 BL 0x1C16CF4
	0x021ED808 LDR X8, [X22 + 0x38]
	0x021ED80C CBNZ X8, 0x21ED818
	0x021ED810 MOV X0, X22
	0x021ED814 BL 0x1C5C6E0
	0x021ED818 ADRP X8, 0x1F08000
	0x021ED81C LDR X8, [X8 + 0xA50]
	0x021ED820 LDR X0, [X8]
	0x021ED824 LDR W8, [X0 + 0xE0]
	0x021ED828 CBNZ W8, 0x21ED830
	0x021ED82C BL 0x1C16DFC
	0x021ED830 MOV X0, X24
	0x021ED834 MOV X1, X31
	0x021ED838 BL 0x33E0DCC
	0x021ED83C CBZ X0, 0x21ED8D8
	0x021ED840 MOV X1, X31
	0x021ED844 MOV X24, X0
	0x021ED848 BL 0x33DFA08
	0x021ED84C CBZ X23, 0x21ED8D8
	0x021ED850 LDR X8, [X22 + 0x38]
	0x021ED854 ADD X9, X31, 0x18
	0x021ED858 ADD X3, X31, 0x0
	0x021ED85C ADD X4, X31, 0x8
	0x021ED860 LDR X1, [X8 + 0x8]
	0x021ED864 MOV X2, X23
	0x021ED868 LDR X8, [X1]
	0x021ED86C STR X0, [X31 + 0x18]
	0x021ED870 STR X9, [X31]
	0x021ED874 LDR X9, [X1 + 0x10]
	0x021ED878 MOV X0, X8
	0x021ED87C BLR X9
	0x021ED880 ADRP X8, 0x1F2E000
	0x021ED884 LDR X8, [X8 + 0xB88]
	0x021ED888 LDR X23, [X31 + 0x8]
	0x021ED88C LDR X0, [X8]
	0x021ED890 LDR W8, [X0 + 0xE0]
	0x021ED894 CBNZ W8, 0x21ED89C
	0x021ED898 BL 0x1C16DFC
	0x021ED89C LDR X8, [X22 + 0x38]
	0x021ED8A0 MOV X0, X23
	0x021ED8A4 MOV W1, W21

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 16
	010 Move X8, [X2+56]
	011 Move X19, X2
	012 Move X22, X1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {39}
	016 Move X0, 0x1F2F000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F2F000
	020 Move X0, [X0+2888]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F2F000
	023 Move X0, [X0+2896]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F2F000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F2F000
	029 Move X0, [X0+2912]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F07000
	032 Move X0, [X0+1728]
	033 Call 0x1C17CF4
	034 Move X8, [X19+56]
	035 Compare X8, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X19
	038 Call 0x1C5D6E0
	039 Subtract X20, X31, 16
	040 Add X31, X20, 0
	041 Subtract X21, X31, 16
	042 Add X31, X21, 0
	043 Move [X29+24], X31
	044 Move [X29-8], X31
	045 Move X0, [X23+16]
	046 Compare X0, 0
	047 JumpIfEqual {215}
	048 Move X8, 0x1F2F000
	049 Move X8, [X8+2880]
	050 Add X2, X29, 24
	051 Move X1, X22
	052 Move X3, [X8]
	053 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {117}
	058 Move X0, [X29+24]
	059 Compare X0, 0
	060 JumpIfEqual {215}
	061 Move X1, X31
	062 Call HeaderBucket.get_HasStringValues, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {119}
	067 Move X23, 0x1F2F000
	068 Move X23, [X23+2896]
	069 Move X0, [X23]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X23]
	075 Move X8, [X0+184]
	076 Move X0, [X8]
	077 Compare X0, 0
	078 JumpIfEqual {215}
	079 Move X8, 0x1F2F000
	080 Move X8, [X8+2888]
	081 Move X1, X22
	082 Move X2, [X8]
	083 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	084 Move X8, [X29+24]
	085 Compare X8, 0
	086 JumpIfEqual {215}
	087 Move X22, X0
	088 Move X0, X8
	089 Move X1, X31
	090 Call HeaderBucket.get_Values, X0
	091 Compare X0, 0
	092 JumpIfEqual {215}
	093 Move X23, 0x1F2F000
	094 Move X23, [X23+2904]
	095 Move W1, W31
	096 Move X2, [X23]
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X22, 0
	099 JumpIfEqual {215}
	100 Move X8, [X22]
	101 Move X1, X0
	102 Subtract X2, X29, 8
	103 Move X0, X22
	104 Move X9, [X8+440]
	105 Move X3, [X8+448]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {153}
	111 Move X9, [X29+24]
	112 Compare X9, 0
	113 JumpIfEqual {215}
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move [X9+16], X8
	116 Move [X9+24], X31
	117 Move X0, X31
	118 Move X1, X31
	119 Move X9, [X29+24]
	120 Compare X9, 0
	121 JumpIfEqual {215}
	122 Move X8, [X19+56]
	123 Move X19, [X9+16]
	124 Move X8, [X8]
	125 Move W10, [X8+309]
	126 Move TEMP, X10
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {133}
	130 Move X0, X8
	131 Call 0x1C5D684
	132 Move X8, X0
	133 Compare X19, 0
	134 JumpIfEqual {138}
	135 Move X9, [X19]
	136 Move X1, [X8+64]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Move X1, X8
	140 Move X2, X21
	141 Call 0x1C17E0C
	142 Move X0, [X21]
	143 Move X1, [X21+8]
	144 Add X31, X29, 0
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X23, [X31+16]
	150 Move X29, [X31+64]
	151 Move X30, [X31+72]
	152 Return X0
	153 Move X8, 0x1F07000
	154 Move X8, [X8+1728]
	155 Move X0, [X8]
	156 Move X8, [X19+56]
	157 Move W9, [X0+224]
	158 Move X21, [X8+8]
	159 Compare W9, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X21
	163 Move X1, X31
	164 Call Type.GetTypeFromHandle, X0
	165 Move X8, 0x1F2F000
	166 Move X8, [X8+2912]
	167 Move X21, X0
	168 Move X1, X31
	169 Move X8, [X8]
	170 Move X0, X8
	171 Call Type.GetTypeFromHandle, X0
	172 Move X1, X0
	173 Move X0, X21
	174 Move X2, X31
	175 Call Type.op_Equality, X0, X1
	176 Move W8, W0
	177 Move X0, X31
	178 Move X1, X31
	179 Move TEMP, X8
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {144}
	183 Move X0, [X29+24]
	184 Compare X0, 0
	185 JumpIfEqual {215}
	186 Move X1, X31
	187 Call HeaderBucket.get_Values, X0
	188 Compare X0, 0
	189 JumpIfEqual {215}
	190 Move X2, [X23]
	191 Move W1, W31
	192 Call List`1<Object>.get_Item, X0, X1
	193 Move X8, [X19+56]
	194 Move X19, X0
	195 Move X8, [X8]
	196 Move W9, [X8+309]
	197 Move TEMP, X9
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfEqual {204}
	201 Move X0, X8
	202 Call 0x1C5D684
	203 Move X8, X0
	204 Compare X19, 0
	205 JumpIfEqual {209}
	206 Move X9, [X19]
	207 Move X1, [X8+64]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, X19
	210 Move X1, X8
	211 Move X2, X20
	212 Call 0x1C17E0C
	213 Move X0, [X20]
	214 Move X1, [X20+8]
	215 Call 0x1C17F20
	216 Move X0, X19
	217 Call 0x1C181E0

Method: System.Net.Http.Headers.HttpHeaderValueCollection`1<T> GetValues(System.String name)

Disassembly:
	0x021EDDE4 STP X30, X19, [X31 - 0x10]!
	0x021EDDE8 LDR X8, [X0 + 0x38]
	0x021EDDEC MOV X19, X0
	0x021EDDF0 CBNZ X8, 0x21EDE14
	0x021EDDF4 ADRP X0, 0x1F2E000
	0x021EDDF8 LDR X0, [X0 + 0xB90]
	0x021EDDFC BL 0x1C16CF4
	0x021EDE00 LDR X8, [X19 + 0x38]
	0x021EDE04 CBNZ X8, 0x21EDE14
	0x021EDE08 MOV X0, X19
	0x021EDE0C BL 0x1C5C6E0
	0x021EDE10 LDR X8, [X19 + 0x38]
	0x021EDE14 LDR X0, [X8 + 0x8]
	0x021EDE18 LDRB W8, [X0 + 0x135]
	0x021EDE1C TBNZ X8, 0x0, 0x21EDE24
	0x021EDE20 BL 0x1C5C684
	0x021EDE24 LDR W8, [X0 + 0xE0]
	0x021EDE28 CBNZ W8, 0x21EDE30
	0x021EDE2C BL 0x1C16DFC
	0x021EDE30 LDR X8, [X19 + 0x38]
	0x021EDE34 LDR X0, [X8]
	0x021EDE38 BL 0x2EA5A00
	0x021EDE3C LDR X8, [X19 + 0x38]
	0x021EDE40 LDR X0, [X8 + 0x8]
	0x021EDE44 LDRB W8, [X0 + 0x135]
	0x021EDE48 TBNZ X8, 0x0, 0x21EDE50
	0x021EDE4C BL 0x1C5C684
	0x021EDE50 ADRP X8, 0x1F2E000
	0x021EDE54 LDR X0, [X0 + 0xB8]
	0x021EDE58 LDR X8, [X8 + 0xB90]
	0x021EDE5C LDR X1, [X8]
	0x021EDE60 BL 0x25E6504
	0x021EDE64 LDR X0, [X0]
	0x021EDE68 LDP X30, X19, [X31], #0x10
	0x021EDE6C RET
	0x021EDE70 STP X30, X19, [X31 - 0x10]!
	0x021EDE74 LDR X8, [X0 + 0x38]
	0x021EDE78 MOV X19, X0
	0x021EDE7C CBNZ X8, 0x21EDEA0
	0x021EDE80 ADRP X0, 0x1F2E000
	0x021EDE84 LDR X0, [X0 + 0xB90]
	0x021EDE88 BL 0x1C16CF4
	0x021EDE8C LDR X8, [X19 + 0x38]
	0x021EDE90 CBNZ X8, 0x21EDEA0
	0x021EDE94 MOV X0, X19
	0x021EDE98 BL 0x1C5C6E0
	0x021EDE9C LDR X8, [X19 + 0x38]
	0x021EDEA0 LDR X0, [X8 + 0x8]
	0x021EDEA4 LDRB W8, [X0 + 0x135]
	0x021EDEA8 TBNZ X8, 0x0, 0x21EDEB0
	0x021EDEAC BL 0x1C5C684
	0x021EDEB0 LDR W8, [X0 + 0xE0]
	0x021EDEB4 CBNZ W8, 0x21EDEBC
	0x021EDEB8 BL 0x1C16DFC
	0x021EDEBC LDR X8, [X19 + 0x38]
	0x021EDEC0 LDR X0, [X8]
	0x021EDEC4 BL 0x2EA5CBC
	0x021EDEC8 LDR X8, [X19 + 0x38]
	0x021EDECC LDR X0, [X8 + 0x8]
	0x021EDED0 LDRB W8, [X0 + 0x135]
	0x021EDED4 TBNZ X8, 0x0, 0x21EDEDC
	0x021EDED8 BL 0x1C5C684
	0x021EDEDC ADRP X8, 0x1F2E000
	0x021EDEE0 LDR X0, [X0 + 0xB8]
	0x021EDEE4 LDR X8, [X8 + 0xB90]
	0x021EDEE8 LDR X1, [X8]
	0x021EDEEC BL 0x25E6504
	0x021EDEF0 LDR X0, [X0]
	0x021EDEF4 LDP X30, X19, [X31], #0x10
	0x021EDEF8 RET
	0x021EDEFC STP X30, X19, [X31 - 0x10]!
	0x021EDF00 LDR X8, [X0 + 0x38]
	0x021EDF04 MOV X19, X0
	0x021EDF08 CBNZ X8, 0x21EDF2C
	0x021EDF0C ADRP X0, 0x1F2E000
	0x021EDF10 LDR X0, [X0 + 0xB90]
	0x021EDF14 BL 0x1C16CF4
	0x021EDF18 LDR X8, [X19 + 0x38]
	0x021EDF1C CBNZ X8, 0x21EDF2C
	0x021EDF20 MOV X0, X19
	0x021EDF24 BL 0x1C5C6E0
	0x021EDF28 LDR X8, [X19 + 0x38]
	0x021EDF2C LDR X0, [X8 + 0x8]
	0x021EDF30 LDRB W8, [X0 + 0x135]
	0x021EDF34 TBNZ X8, 0x0, 0x21EDF3C
	0x021EDF38 BL 0x1C5C684
	0x021EDF3C LDR W8, [X0 + 0xE0]
	0x021EDF40 CBNZ W8, 0x21EDF48
	0x021EDF44 BL 0x1C16DFC
	0x021EDF48 LDR X8, [X19 + 0x38]
	0x021EDF4C LDR X0, [X8]
	0x021EDF50 BL 0x2EA5F78
	0x021EDF54 LDR X8, [X19 + 0x38]
	0x021EDF58 LDR X0, [X8 + 0x8]
	0x021EDF5C LDRB W8, [X0 + 0x135]
	0x021EDF60 TBNZ X8, 0x0, 0x21EDF68
	0x021EDF64 BL 0x1C5C684
	0x021EDF68 ADRP X8, 0x1F2E000
	0x021EDF6C LDR X0, [X0 + 0xB8]
	0x021EDF70 LDR X8, [X8 + 0xB90]
	0x021EDF74 LDR X1, [X8]
	0x021EDF78 BL 0x25E6504
	0x021EDF7C LDR X0, [X0]
	0x021EDF80 LDP X30, X19, [X31], #0x10
	0x021EDF84 RET
	0x021EDF88 STP X30, X19, [X31 - 0x10]!
	0x021EDF8C LDR X8, [X0 + 0x38]
	0x021EDF90 MOV X19, X0
	0x021EDF94 CBNZ X8, 0x21EDFB8
	0x021EDF98 ADRP X0, 0x1F2E000
	0x021EDF9C LDR X0, [X0 + 0xB90]
	0x021EDFA0 BL 0x1C16CF4
	0x021EDFA4 LDR X8, [X19 + 0x38]
	0x021EDFA8 CBNZ X8, 0x21EDFB8
	0x021EDFAC MOV X0, X19
	0x021EDFB0 BL 0x1C5C6E0
	0x021EDFB4 LDR X8, [X19 + 0x38]
	0x021EDFB8 LDR X0, [X8 + 0x8]
	0x021EDFBC LDRB W8, [X0 + 0x135]
	0x021EDFC0 TBNZ X8, 0x0, 0x21EDFC8
	0x021EDFC4 BL 0x1C5C684
	0x021EDFC8 LDR W8, [X0 + 0xE0]
	0x021EDFCC CBNZ W8, 0x21EDFD4
	0x021EDFD0 BL 0x1C16DFC
	0x021EDFD4 LDR X8, [X19 + 0x38]
	0x021EDFD8 LDR X0, [X8]
	0x021EDFDC LDR X8, [X0]
	0x021EDFE0 BLR X8
	0x021EDFE4 LDR X8, [X19 + 0x38]
	0x021EDFE8 LDR X0, [X8 + 0x8]
	0x021EDFEC LDRB W8, [X0 + 0x135]
	0x021EDFF0 TBNZ X8, 0x0, 0x21EDFF8
	0x021EDFF4 BL 0x1C5C684
	0x021EDFF8 ADRP X8, 0x1F2E000
	0x021EDFFC LDR X0, [X0 + 0xB8]
	0x021EE000 B 0x3EB17DC
	0x021EE004 LDR X1, [X8]
	0x021EE008 BL 0x25E6504
	0x021EE00C LDR X0, [X0]
	0x021EE010 LDP X30, X19, [X31], #0x10
	0x021EE014 RET
	0x021EE018 STP X30, X19, [X31 - 0x10]!
	0x021EE01C LDR X8, [X0 + 0x38]
	0x021EE020 MOV X19, X0
	0x021EE024 CBNZ X8, 0x21EE048
	0x021EE028 ADRP X0, 0x1F2D000
	0x021EE02C LDR X0, [X0 + 0xB90]
	0x021EE030 BL 0x1C16CF4
	0x021EE034 LDR X8, [X19 + 0x38]
	0x021EE038 CBNZ X8, 0x21EE048
	0x021EE03C MOV X0, X19
	0x021EE040 BL 0x1C5C6E0
	0x021EE044 LDR X8, [X19 + 0x38]
	0x021EE048 LDR X0, [X8 + 0x8]
	0x021EE04C LDRB W8, [X0 + 0x135]
	0x021EE050 TBNZ X8, 0x0, 0x21EE058
	0x021EE054 BL 0x1C5C684
	0x021EE058 LDR W8, [X0 + 0xE0]
	0x021EE05C CBNZ W8, 0x21EE064
	0x021EE060 BL 0x1C16DFC
	0x021EE064 LDR X8, [X19 + 0x38]
	0x021EE068 LDR X0, [X8]
	0x021EE06C BL 0x2EA6624
	0x021EE070 LDR X8, [X19 + 0x38]
	0x021EE074 LDR X0, [X8 + 0x8]
	0x021EE078 LDRB W8, [X0 + 0x135]
	0x021EE07C TBNZ X8, 0x0, 0x21EE084
	0x021EE080 BL 0x1C5C684
	0x021EE084 ADRP X8, 0x1F2D000
	0x021EE088 LDR X0, [X0 + 0xB8]
	0x021EE08C LDR X8, [X8 + 0xB90]
	0x021EE090 LDR X1, [X8]
	0x021EE094 BL 0x25E6504
	0x021EE098 LDR X0, [X0]
	0x021EE09C LDP X30, X19, [X31], #0x10
	0x021EE0A0 RET
	0x021EE0A4 SUB X31, X31, 0x60
	0x021EE0A8 STR X30, [X31 + 0x30]
	0x021EE0AC STP X22, X21, [X31 + 0x40]
	0x021EE0B0 STP X20, X19, [X31 + 0x50]
	0x021EE0B4 LDR X8, [X3 + 0x38]
	0x021EE0B8 MOV X19, X2
	0x021EE0BC MOV X20, X1
	0x021EE0C0 MOV X21, X0
	0x021EE0C4 CBNZ X8, 0x21EE0D8
	0x021EE0C8 MOV X0, X3
	0x021EE0CC MOV X22, X3
	0x021EE0D0 BL 0x1C5C6E0
	0x021EE0D4 LDR X8, [X22 + 0x38]
	0x021EE0D8 MOVI V0.2D, 0x0
	0x021EE0DC STR X31, [X31 + 0x20]
	0x021EE0E0 STP V0, V0, [X31]
	0x021EE0E4 LDR X0, [X8 + 0x18]
	0x021EE0E8 BL 0x21EDC40
	0x021EE0EC MOV X2, X0
	0x021EE0F0 ADD X0, X31, 0x0
	0x021EE0F4 MOVZ W5, 0x2
	0x021EE0F8 MOV X1, X21
	0x021EE0FC MOV X3, X20
	0x021EE100 MOV X4, X19
	0x021EE104 MOV X6, X31
	0x021EE108 BL 0x3BFE4B0
	0x021EE10C ADD X0, X31, 0x0
	0x021EE110 MOV X1, X31
	0x021EE114 BL 0x3BFE134
	0x021EE118 LDP X20, X19, [X31 + 0x50]
	0x021EE11C LDP X22, X21, [X31 + 0x40]
	0x021EE120 LDR X30, [X31 + 0x30]
	0x021EE124 ADD X31, X31, 0x60
	0x021EE128 RET
	0x021EE12C SUB X31, X31, 0x60
	0x021EE130 STR X30, [X31 + 0x30]
	0x021EE134 STP X22, X21, [X31 + 0x40]
	0x021EE138 STP X20, X19, [X31 + 0x50]
	0x021EE13C LDR X8, [X3 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X8, [X2+56]
	010 Move X19, X2
	011 Move X21, X1
	012 Move X20, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {44}
	015 Move X0, 0x1F2F000
	016 Move X0, [X0+2920]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F2F000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F2F000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F2F000
	025 Move X0, [X0+2928]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F2F000
	028 Move X0, [X0+2896]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F2F000
	031 Move X0, [X0+2936]
	032 Call 0x1C17CF4
	033 Move X0, 0x1F08000
	034 Move X0, [X0+456]
	035 Call 0x1C17CF4
	036 Move X0, 0x1F2F000
	037 Move X0, [X0+2904]
	038 Call 0x1C17CF4
	039 Move X8, [X19+56]
	040 Compare X8, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X19
	043 Call 0x1C5D6E0
	044 Move [X31+24], X31
	045 Move [X31+8], X31
	046 Move X0, [X20+16]
	047 Compare X0, 0
	048 JumpIfEqual {238}
	049 Move X8, 0x1F2F000
	050 Move X8, [X8+2880]
	051 Add X2, X31, 24
	052 Move X1, X21
	053 Move X3, [X8]
	054 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {117}
	059 Move X22, 0x1F2F000
	060 Move X22, [X22+2896]
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X22]
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {238}
	071 Move X8, 0x1F2F000
	072 Move X8, [X8+2888]
	073 Move X1, X21
	074 Move X2, [X8]
	075 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	076 Move X8, [X19+56]
	077 Move X22, X0
	078 Move X8, [X8]
	079 Move W9, [X8+309]
	080 Move TEMP, X9
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X8, X0
	087 Move X0, X8
	088 Call 0x1C17F10
	089 Move X8, [X19+56]
	090 Move X1, X20
	091 Move X2, X22
	092 Move X23, X0
	093 Move X3, [X8+8]
	094 Call 0x2DE15B4, X0, X1, X2
	095 Compare X22, 0
	096 JumpIfEqual {238}
	097 Move X8, 0x1F2F000
	098 Move X24, [X22+32]
	099 Move X8, [X8+2928]
	100 Move X0, [X8]
	101 Call 0x1C17F10
	102 Move X1, X23
	103 Move X2, X24
	104 Move X3, X31
	105 Move X22, X0
	106 Call HeaderBucket..ctor, X0, X1, X2
	107 Move [X31+24], X22
	108 Move X0, [X20+16]
	109 Compare X0, 0
	110 JumpIfEqual {238}
	111 Move X8, 0x1F2F000
	112 Move X8, [X8+2920]
	113 Move X1, X21
	114 Move X2, X22
	115 Move X3, [X8]
	116 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	117 Move X8, [X31+24]
	118 Compare X8, 0
	119 JumpIfEqual {238}
	120 Move X9, [X19+56]
	121 Move X22, [X8+16]
	122 Move X1, [X9]
	123 Move W9, [X1+309]
	124 Move TEMP, X9
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {131}
	128 Move X0, X1
	129 Call 0x1C5D684
	130 Move X1, X0
	131 Compare X22, 0
	132 JumpIfEqual {135}
	133 Move X8, [X22]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, [X31+24]
	136 Compare X0, 0
	137 JumpIfEqual {238}
	138 Move X1, X31
	139 Call HeaderBucket.get_HasStringValues, X0
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {249}
	144 Move X23, 0x1F2F000
	145 Move X23, [X23+2896]
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move X0, [X23]
	152 Move X8, [X0+184]
	153 Move X0, [X8]
	154 Compare X0, 0
	155 JumpIfEqual {238}
	156 Move X8, 0x1F2F000
	157 Move X8, [X8+2888]
	158 Move X1, X21
	159 Move X2, [X8]
	160 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	161 Move X21, X0
	162 Compare X22, 0
	163 JumpIfNotEqual {183}
	164 Move X8, [X19+56]
	165 Move X23, [X31+24]
	166 Move X0, [X8]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Call 0x1C17F10
	174 Move X8, [X19+56]
	175 Move X1, X20
	176 Move X2, X21
	177 Move X22, X0
	178 Move X3, [X8+8]
	179 Call 0x2DE15B4, X0, X1, X2
	180 Compare X23, 0
	181 JumpIfEqual {238}
	182 Move [X23+16], X22
	183 Move X0, [X31+24]
	184 Compare X0, 0
	185 JumpIfEqual {238}
	186 Move X24, 0x1F2E000
	187 Move X24, [X24+2904]
	188 Move W20, W31
	189 Move X1, X31
	190 Call HeaderBucket.get_Values, X0
	191 Compare X0, 0
	192 JumpIfEqual {238}
	193 Move X8, [X31+24]
	194 Compare X8, 0
	195 JumpIfEqual {238}
	196 Move W23, [X0+24]
	197 Move X0, X8
	198 Move X1, X31
	199 Call HeaderBucket.get_Values, X0
	200 Compare X0, 0
	201 JumpIfEqual {238}
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X2, [X24]
	204 Move W1, W20
	205 Call List`1<Object>.get_Item, X0, X1
	206 Compare X21, 0
	207 JumpIfEqual {238}
	208 Move X8, [X21]
	209 Move X23, X0
	210 Add X2, X31, 8
	211 Move X0, X21
	212 Move X9, [X8+440]
	213 Move X3, [X8+448]
	214 Move X1, X23
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {227}
	220 Move X8, [X21]
	221 Move X2, [X31+8]
	222 Move X0, X21
	223 Move X1, X22
	224 Move X9, [X8+392]
	225 Move X3, [X8+400]
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X22, 0
	228 JumpIfEqual {238}
	229 Move X8, [X19+56]
	230 Move X0, X22
	231 Move X1, X23
	232 Move X2, [X8+16]
	233 Call 0x2DE16DC, X0, X1
	234 Move X0, [X31+24]
	235 Add W20, W20, 1
	236 Compare X0, 0
	237 JumpIfNotEqual {189}
	238 Call 0x1C17F20
	239 Move W2, [X0+24]
	240 Move W8, [X0+28]
	241 Add W8, W8, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X0+24], W31
	244 Move [X0+28], W8
	245 Move X0, [X0+16]
	246 Move W1, W31
	247 Move X3, X31
	248 Call Array.Clear, X0, X1, X2
	249 Move X0, X22
	250 Move X20, [X31+64]
	251 Move X19, [X31+72]
	252 Move X22, [X31+48]
	253 Move X21, [X31+56]
	254 Move X24, [X31+32]
	255 Move X23, [X31+40]
	256 Move X30, [X31+16]
	257 Add X31, X31, 80
	258 Return X0
	259 Move X0, X22
	260 Call 0x1C181E0

Method: System.Void SetValue(System.String name, T value, System.Func`2<System.Object, System.String> toStringConverter = null)

Disassembly:
	0x021EE140 MOV X19, X2
	0x021EE144 MOV X20, X1
	0x021EE148 MOV X21, X0
	0x021EE14C CBNZ X8, 0x21EE160
	0x021EE150 MOV X0, X3
	0x021EE154 MOV X22, X3
	0x021EE158 BL 0x1C5C6E0
	0x021EE15C LDR X8, [X22 + 0x38]
	0x021EE160 MOVI V0.2D, 0x0
	0x021EE164 STR X31, [X31 + 0x20]
	0x021EE168 STP V0, V0, [X31]
	0x021EE16C LDR X0, [X8 + 0x18]
	0x021EE170 BL 0x21EDCCC
	0x021EE174 MOV X2, X0
	0x021EE178 ADD X0, X31, 0x0
	0x021EE17C MOVZ W5, 0x2
	0x021EE180 MOV X1, X21
	0x021EE184 MOV X3, X20
	0x021EE188 MOV X4, X19
	0x021EE18C MOV X6, X31
	0x021EE190 BL 0x3BFE4B0
	0x021EE194 ADD X0, X31, 0x0
	0x021EE198 MOV X1, X31
	0x021EE19C BL 0x3BFE134
	0x021EE1A0 LDP X20, X19, [X31 + 0x50]
	0x021EE1A4 LDP X22, X21, [X31 + 0x40]
	0x021EE1A8 LDR X30, [X31 + 0x30]
	0x021EE1AC ADD X31, X31, 0x60
	0x021EE1B0 RET
	0x021EE1B4 SUB X31, X31, 0x60
	0x021EE1B8 STR X30, [X31 + 0x30]
	0x021EE1BC STP X22, X21, [X31 + 0x40]
	0x021EE1C0 STP X20, X19, [X31 + 0x50]
	0x021EE1C4 LDR X8, [X3 + 0x38]
	0x021EE1C8 MOV X19, X2
	0x021EE1CC MOV X20, X1
	0x021EE1D0 MOV X21, X0
	0x021EE1D4 CBNZ X8, 0x21EE1E8
	0x021EE1D8 MOV X0, X3
	0x021EE1DC MOV X22, X3
	0x021EE1E0 BL 0x1C5C6E0
	0x021EE1E4 LDR X8, [X22 + 0x38]
	0x021EE1E8 MOVI V0.2D, 0x0
	0x021EE1EC STR X31, [X31 + 0x20]
	0x021EE1F0 STP V0, V0, [X31]
	0x021EE1F4 LDR X0, [X8 + 0x18]
	0x021EE1F8 BL 0x21EDD58
	0x021EE1FC MOV X2, X0
	0x021EE200 ADD X0, X31, 0x0
	0x021EE204 MOVZ W5, 0x2
	0x021EE208 MOV X1, X21
	0x021EE20C MOV X3, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X1
	012 Move X23, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {28}
	015 Move X0, 0x1F2E000
	016 Move X0, [X0+2944]
	017 Move X22, X4
	018 Call 0x1C17CF4
	019 Move X0, 0x1F2E000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X8, [X22+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X22
	026 Call 0x1C5D6E0
	027 Move X8, [X22+56]
	028 Move X22, [X23+16]
	029 Move [X31+8], X21
	030 Move X0, [X8]
	031 Add X1, X31, 8
	032 Call 0x1C17E04
	033 Move X8, 0x1F2E000
	034 Move X8, [X8+2928]
	035 Move X23, X0
	036 Move X8, [X8]
	037 Move X0, X8
	038 Call 0x1C17F10
	039 Move X1, X23
	040 Move X2, X20
	041 Move X3, X31
	042 Move X21, X0
	043 Call HeaderBucket..ctor, X0, X1, X2
	044 Compare X22, 0
	045 JumpIfEqual {61}
	046 Move X8, 0x1F2E000
	047 Move X8, [X8+2944]
	048 Move X0, X22
	049 Move X1, X19
	050 Move X2, X21
	051 Move X3, [X8]
	052 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Move X23, [X31+24]
	059 Add X31, X31, 64
	060 Return 
	061 Call 0x1C17F20

