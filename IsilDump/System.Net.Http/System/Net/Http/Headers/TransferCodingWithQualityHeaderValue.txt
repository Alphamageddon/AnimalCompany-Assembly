Type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue

Method: System.Void .ctor()

Disassembly:
	0x0360B4E0 BL 0x336545C
	0x0360B4E4 LDR X1, [X21]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.TransferCodingWithQualityHeaderValue> result)

Disassembly:
	0x0360B4E8 LDR X3, [X22]
	0x0360B4EC MOV X2, X0
	0x0360B4F0 MOV X0, X20
	0x0360B4F4 MOV X4, X31
	0x0360B4F8 BL 0x32277C4
	0x0360B4FC MOV X20, X0
	0x0360B500 MOV X0, X20
	0x0360B504 LDP X20, X19, [X31 + 0x50]
	0x0360B508 LDP X22, X21, [X31 + 0x40]
	0x0360B50C LDP X30, X23, [X31 + 0x30]
	0x0360B510 ADD X31, X31, 0x60
	0x0360B514 RET
	0x0360B518 BL 0x1C16F28
	0x0360B51C BL 0x1C16F20
	0x0360B520 STP X30, X21, [X31 - 0x20]!
	0x0360B524 STP X20, X19, [X31 + 0x10]
	0x0360B528 ADRP X21, 0xDD5000
	0x0360B52C LDRB W8, [X21 + 0x3F7]
	0x0360B530 MOV W20, W1
	0x0360B534 MOV X19, X0
	0x0360B538 TBNZ X8, 0x0, 0x360B550
	0x0360B53C ADRP X0, 0xB29000
	0x0360B540 LDR X0, [X0 + 0x940]
	0x0360B544 BL 0x1C16CF4
	0x0360B548 MOVZ W8, 0x1
	0x0360B54C STRB W8, [X21 + 0x3F7]
	0x0360B550 MOVZ W8, 0x80000000
	0x0360B554 CMP W20, W8
	0x0360B558 B.NE 0x360B588
	0x0360B55C ADRP X20, 0xB29000
	0x0360B560 LDR X20, [X20 + 0x940]
	0x0360B564 LDR X0, [X20]
	0x0360B568 LDR W8, [X0 + 0xE0]
	0x0360B56C CBNZ W8, 0x360B578
	0x0360B570 BL 0x1C16DFC
	0x0360B574 LDR X0, [X20]
	0x0360B578 LDR X8, [X0 + 0xB8]
	0x0360B57C LDR V0, [X8]
	0x0360B580 STR V0, [X19]
	0x0360B584 B 0x360B590
	0x0360B588 STR W20, [X19]
	0x0360B58C STR X31, [X19 + 0x8]
	0x0360B590 LDP X20, X19, [X31 + 0x10]
	0x0360B594 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDD6000
	010 Move X25, 0xB30000
	011 Move X22, 0xB30000
	012 Move X23, 0xB30000
	013 Move W8, [X24+1001]
	014 Move X25, [X25+3592]
	015 Move X22, [X22+3600]
	016 Move X23, [X23+3608]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB30000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xB30000
	028 Move X0, [X0+3592]
	029 Call 0x1C17CF4
	030 Move X0, 0xB30000
	031 Move X0, [X0+3600]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+1001], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.TransferCodingWithQualityHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x0360B598 RET
	0x0360B59C STP X30, X21, [X31 - 0x20]!
	0x0360B5A0 STP X20, X19, [X31 + 0x10]
	0x0360B5A4 ADRP X21, 0xDD5000
	0x0360B5A8 LDRB W8, [X21 + 0x3F8]
	0x0360B5AC MOV X20, X1
	0x0360B5B0 MOV X19, X0
	0x0360B5B4 TBNZ X8, 0x0, 0x360B5D8
	0x0360B5B8 ADRP X0, 0xB29000
	0x0360B5BC LDR X0, [X0 + 0x940]
	0x0360B5C0 BL 0x1C16CF4
	0x0360B5C4 ADRP X0, 0xB11000
	0x0360B5C8 LDR X0, [X0 + 0xD08]
	0x0360B5CC BL 0x1C16CF4
	0x0360B5D0 MOVZ W8, 0x1
	0x0360B5D4 STRB W8, [X21 + 0x3F8]
	0x0360B5D8 MOVN W8, 0x80000000
	0x0360B5DC ADD X8, X20, X8
	0x0360B5E0 MOVN W9, 0x1
	0x0360B5E4 CMP X8, X9
	0x0360B5E8 B.LS 0x360B624
	0x0360B5EC ORR X8, X31, 0xFFFFFFFF
	0x0360B5F0 CMP X20, X8
	0x0360B5F4 B.NE 0x360B638
	0x0360B5F8 ADRP X20, 0xB29000
	0x0360B5FC LDR X20, [X20 + 0x940]
	0x0360B600 LDR X0, [X20]
	0x0360B604 LDR W8, [X0 + 0xE0]
	0x0360B608 CBNZ W8, 0x360B614
	0x0360B60C BL 0x1C16DFC
	0x0360B610 LDR X0, [X20]
	0x0360B614 LDR X8, [X0 + 0xB8]
	0x0360B618 LDR V0, [X8]
	0x0360B61C STR V0, [X19]
	0x0360B620 B 0x360B62C
	0x0360B624 STR W20, [X19]
	0x0360B628 STR X31, [X19 + 0x8]
	0x0360B62C LDP X20, X19, [X31 + 0x10]
	0x0360B630 LDP X30, X21, [X31], #0x20
	0x0360B634 RET
	0x0360B638 CMP X20, 0x0
	0x0360B63C MOVZ W8, 0x1
	0x0360B640 CSNEG W8, W8, W8, GE
	0x0360B644 STR W8, [X19]
	0x0360B648 ADRP X8, 0xB11000
	0x0360B64C LDR X8, [X8 + 0xD08]
	0x0360B650 CSNEG X20, X20, X20, PL
	0x0360B654 UBFM X21, X20, 0x20, 0x3F
	0x0360B658 LDR X0, [X8]
	0x0360B65C CBNZ X21, 0x360B680
	0x0360B660 MOVZ W1, 0x1
	0x0360B664 BL 0x1C16D6C
	0x0360B668 STR X0, [X19 + 0x8]
	0x0360B66C CBZ X0, 0x360B6B0
	0x0360B670 LDR W8, [X0 + 0x18]
	0x0360B674 CBZ W8, 0x360B6AC
	0x0360B678 STR W20, [X0 + 0x20]
	0x0360B67C B 0x360B62C
	0x0360B680 MOVZ W1, 0x2
	0x0360B684 BL 0x1C16D6C
	0x0360B688 STR X0, [X19 + 0x8]
	0x0360B68C CBZ X0, 0x360B6B0
	0x0360B690 LDR W8, [X0 + 0x18]
	0x0360B694 CBZ W8, 0x360B6AC
	0x0360B698 CMP W8, 0x1
	0x0360B69C STR W20, [X0 + 0x20]
	0x0360B6A0 B.EQ 0x360B6AC
	0x0360B6A4 STR W21, [X0 + 0x24]
	0x0360B6A8 B 0x360B62C
	0x0360B6AC BL 0x1C16F28
	0x0360B6B0 BL 0x1C16F20
	0x0360B6B4 STP X30, X21, [X31 - 0x20]!
	0x0360B6B8 STP X20, X19, [X31 + 0x10]
	0x0360B6BC ADRP X21, 0xDD5000
	0x0360B6C0 LDRB W8, [X21 + 0x3F9]
	0x0360B6C4 MOV X19, X1
	0x0360B6C8 MOV X20, X0
	0x0360B6CC TBNZ X8, 0x0, 0x360B6F0
	0x0360B6D0 ADRP X0, 0xB29000
	0x0360B6D4 LDR X0, [X0 + 0x940]
	0x0360B6D8 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xDD6000
	009 Move W8, [X22+1002]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB11000
	018 Move X0, [X0+2256]
	019 Call 0x1C17CF4
	020 Move X0, 0xB30000
	021 Move X0, [X0+3616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1002], W8
	025 Move [X19], X31
	026 Compare X21, 0
	027 JumpIfEqual {94}
	028 Move X24, 0xB11000
	029 Move X24, [X24+2256]
	030 Move X0, X21
	031 Move W1, W31
	032 Call Lexer.Scan, X0, X1
	033 Move [X20], X0
	034 Move [X20+8], W1
	035 Move X22, X0
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xB30000
	043 Move X8, [X8+3616]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call Object..ctor, X0
	049 Move X1, [X20]
	050 Move W2, [X20+8]
	051 Move X0, X21
	052 Call Lexer.GetStringValue, X0, X1
	053 Compare X22, 0
	054 JumpIfEqual {94}
	055 Move [X22+16], X0
	056 Move X0, X21
	057 Move W1, W31
	058 Call Lexer.Scan, X0, X1
	059 Move [X20], X0
	060 Move [X20+8], W1
	061 Move X23, X0
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X1, X22, 24
	069 Move X0, X21
	070 Move X2, X20
	071 Call NameValueHeaderValue.TryParseParameters, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {85}
	076 Move X0, [X24]
	077 Move X20, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W0, 1
	084 Move [X19], X22
	085 Move W0, W31
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Return X0
	094 Call 0x1C17F20

