Type: System.Net.Http.Headers.RangeConditionHeaderValue

Method: System.Void .ctor(System.DateTimeOffset date)

Disassembly:
	0x03608B40 ADRP X24, 0xDD8000
	0x03608B44 LDRB W8, [X24 + 0x3D2]
	0x03608B48 MOV X19, X4
	0x03608B4C MOV X20, X3
	0x03608B50 MOV X21, X2
	0x03608B54 MOV X22, X1
	0x03608B58 MOV X23, X0
	0x03608B5C TBNZ X8, 0x0, 0x3608B80
	0x03608B60 ADRP X0, 0xB27000
	0x03608B64 LDR X0, [X0 + 0x9F8]
	0x03608B68 BL 0x1C16CF4
	0x03608B6C ADRP X0, 0xB13000
	0x03608B70 LDR X0, [X0 + 0xEA8]
	0x03608B74 BL 0x1C16CF4
	0x03608B78 MOVZ W8, 0x1
	0x03608B7C STRB W8, [X24 + 0x3D2]
	0x03608B80 MOV X0, X23
	0x03608B84 MOV X1, X31
	0x03608B88 BL 0x33BDD8C
	0x03608B8C ANDS W31, W22, 0xFF
	0x03608B90 B.EQ 0x3608BA8
	0x03608B94 CMP X21, X19
	0x03608B98 B.LE 0x3608BB0
	0x03608B9C ANDS W31, W20, 0xFF
	0x03608BA0 B.EQ 0x3608BB0
	0x03608BA4 B 0x3608BF4
	0x03608BA8 ANDS W31, W20, 0xFF
	0x03608BAC B.EQ 0x3608C5C
	0x03608BB0 ANDS W31, W22, 0xFF
	0x03608BB4 CSET W8, NE
	0x03608BB8 UBFM X9, X21, 0x3F, 0x3F
	0x03608BBC ANDS W31, W8, W9, 0x0
	0x03608BC0 B.NE 0x3608BF4
	0x03608BC4 ANDS W31, W20, 0xFF
	0x03608BC8 CSET W8, NE
	0x03608BCC UBFM X9, X19, 0x3F, 0x3F

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xDD9000
	009 Move X22, 0xB33000
	010 Move W8, [X23+965]
	011 Move X22, [X22+3312]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xB33000
	020 Move X0, [X0+3312]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+965], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X3, [X22]
	028 Add X0, X31, 8
	029 Move X1, X21
	030 Move X2, X20
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Call Nullable`1<DateTimeOffset>..ctor, X0, X1
	035 Move X8, [X31+24]
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move X30, [X31+32]
	040 Move X23, [X31+40]
	041 Move [X19+32], X8
	042 Move [X19+1], V0
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Add X31, X31, 80
	046 Return 

Method: System.Void .ctor(System.Net.Http.Headers.EntityTagHeaderValue entityTag)

Disassembly:
	0x03608BD0 ANDS W31, W8, W9, 0x0
	0x03608BD4 B.NE 0x3608C14
	0x03608BD8 STP X22, X21, [X23 + 0x10]
	0x03608BDC STP X20, X19, [X23 + 0x20]
	0x03608BE0 LDP X20, X19, [X31 + 0x30]
	0x03608BE4 LDP X22, X21, [X31 + 0x20]
	0x03608BE8 LDP X24, X23, [X31 + 0x10]
	0x03608BEC LDR X30, [X31], #0x40
	0x03608BF0 RET
	0x03608BF4 ADRP X0, 0xAF3000
	0x03608BF8 LDR X0, [X0 + 0x760]
	0x03608BFC BL 0x1C16D08
	0x03608C00 BL 0x1C16F10
	0x03608C04 MOV X19, X0
	0x03608C08 ADRP X0, 0xB14000
	0x03608C0C LDR X0, [X0 + 0x760]
	0x03608C10 B 0x3608C30
	0x03608C14 ADRP X0, 0xAF3000
	0x03608C18 LDR X0, [X0 + 0x760]
	0x03608C1C BL 0x1C16D08
	0x03608C20 BL 0x1C16F10
	0x03608C24 MOV X19, X0
	0x03608C28 ADRP X0, 0xB14000
	0x03608C2C LDR X0, [X0 + 0x768]
	0x03608C30 BL 0x1C16D08
	0x03608C34 MOV X1, X0
	0x03608C38 MOV X0, X19
	0x03608C3C MOV X2, X31
	0x03608C40 BL 0x3316014

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Compare X19, 0
	009 JumpIfEqual {15}
	010 Move [X20+40], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Return 
	015 Move X0, 0xAF1000
	016 Move X0, [X0+1320]
	017 Call 0x1C17D08
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Move X0, 0xB33000
	021 Move X0, [X0+3320]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Move X2, X31
	026 Call ArgumentNullException..ctor, X0, X1
	027 Move X0, 0xB33000
	028 Move X0, [X0+3328]
	029 Call 0x1C17D08
	030 Move X1, X0
	031 Move X0, X19
	032 Call 0x1C17DEC

Method: System.Nullable`1<System.DateTimeOffset> get_Date()

Disassembly:
	0x03608C44 ADRP X0, 0xB32000
	0x03608C48 LDR X0, [X0 + 0xD88]
	0x03608C4C BL 0x1C16D08
	0x03608C50 MOV X1, X0
	0x03608C54 MOV X0, X19

ISIL:
	001 Move X9, [X0+32]
	002 Move V0, [X0+1]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_Date(System.Nullable`1<System.DateTimeOffset> value)

Disassembly:
	0x03608C58 BL 0x1C16DEC
	0x03608C5C ADRP X0, 0xAF3000
	0x03608C60 LDR X0, [X0 + 0x578]
	0x03608C64 BL 0x1C16D08
	0x03608C68 BL 0x1C16F10

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+32], X8
	004 Move [X0+1], V0
	005 Return 

Method: System.Net.Http.Headers.EntityTagHeaderValue get_EntityTag()

Disassembly:
	0x03608C6C MOV X1, X31
	0x03608C70 MOV X19, X0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_EntityTag(System.Net.Http.Headers.EntityTagHeaderValue value)

Disassembly:
	0x03608C74 BL 0x3315C64
	0x03608C78 B 0x3608C44

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x03608C7C STP X30, X25, [X31 - 0x40]!
	0x03608C80 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call Object.MemberwiseClone, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03608C84 STP X22, X21, [X31 + 0x20]
	0x03608C88 STP X20, X19, [X31 + 0x30]
	0x03608C8C ADRP X21, 0xDD8000
	0x03608C90 ADRP X20, 0xAEB000
	0x03608C94 LDRB W8, [X21 + 0x3D1]
	0x03608C98 LDR X20, [X20 + 0x8F0]
	0x03608C9C MOV X19, X0
	0x03608CA0 TBNZ X8, 0x0, 0x3608CE8
	0x03608CA4 ADRP X0, 0xB32000
	0x03608CA8 LDR X0, [X0 + 0xD48]
	0x03608CAC BL 0x1C16CF4
	0x03608CB0 ADRP X0, 0xB32000
	0x03608CB4 LDR X0, [X0 + 0xD90]
	0x03608CB8 BL 0x1C16CF4
	0x03608CBC ADRP X0, 0xAEB000
	0x03608CC0 LDR X0, [X0 + 0x8F0]
	0x03608CC4 BL 0x1C16CF4
	0x03608CC8 ADRP X0, 0xB18000
	0x03608CCC LDR X0, [X0 + 0xFB8]
	0x03608CD0 BL 0x1C16CF4
	0x03608CD4 ADRP X0, 0xAEB000
	0x03608CD8 LDR X0, [X0 + 0x838]
	0x03608CDC BL 0x1C16CF4
	0x03608CE0 MOVZ W8, 0x1
	0x03608CE4 STRB W8, [X21 + 0x3D1]
	0x03608CE8 LDR X0, [X20]
	0x03608CEC LDR X21, [X19 + 0x18]
	0x03608CF0 BL 0x1C16F10
	0x03608CF4 MOV X1, X21
	0x03608CF8 MOV X2, X31
	0x03608CFC MOV X20, X0
	0x03608D00 BL 0x3231CF8
	0x03608D04 CBZ X20, 0x3608DF8
	0x03608D08 ADRP X8, 0xB18000
	0x03608D0C LDR X8, [X8 + 0xFB8]
	0x03608D10 MOV X0, X20
	0x03608D14 MOV X2, X31
	0x03608D18 LDR X1, [X8]
	0x03608D1C BL 0x32333E0
	0x03608D20 MOV X0, X19
	0x03608D24 BL 0x36083CC
	0x03608D28 CBZ X0, 0x3608DF8
	0x03608D2C ADRP X23, 0xB32000
	0x03608D30 ADRP X24, 0xB32000
	0x03608D34 ADRP X25, 0xAEB000
	0x03608D38 LDR X23, [X23 + 0xD48]
	0x03608D3C LDR X24, [X24 + 0xD90]
	0x03608D40 LDR X25, [X25 + 0x838]
	0x03608D44 MOV X22, X0
	0x03608D48 MOV W21, W31
	0x03608D4C LDR X8, [X22]
	0x03608D50 LDR X1, [X23]
	0x03608D54 LDRH W9, [X8 + 0x12E]
	0x03608D58 CBZ X9, 0x3608D7C
	0x03608D5C LDR X10, [X8 + 0xB0]
	0x03608D60 ADD X10, X10, 0x8
	0x03608D64 LDUR X11, [X10 - 0x8]
	0x03608D68 CMP X11, X1
	0x03608D6C B.EQ 0x3608D8C
	0x03608D70 SUBS X9, X9, 0x1
	0x03608D74 ADD X10, X10, 0x10
	0x03608D78 B.NE 0x3608D64
	0x03608D7C MOV X0, X22
	0x03608D80 MOV W2, W31
	0x03608D84 BL 0x1C5C788
	0x03608D88 B 0x3608D98
	0x03608D8C LDRSW X9, [X10]
	0x03608D90 ADD X8, X8, X9, 0x4, LSL
	0x03608D94 ADD X0, X8, 0x138
	0x03608D98 LDP X8, X1, [X0]
	0x03608D9C MOV X0, X22
	0x03608DA0 BLR X8
	0x03608DA4 CMP W21, W0
	0x03608DA8 B.GE 0x3608DFC
	0x03608DAC CBZ W21, 0x3608DC0
	0x03608DB0 LDR X1, [X25]
	0x03608DB4 MOV X0, X20
	0x03608DB8 MOV X2, X31
	0x03608DBC BL 0x32333E0
	0x03608DC0 LDR X0, [X19 + 0x10]
	0x03608DC4 CBZ X0, 0x3608DF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDD9000
	007 Move W8, [X21+966]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xAEE000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0xB33000
	018 Move X0, [X0+3336]
	019 Call 0x1C17CF4
	020 Move X0, 0xB33000
	021 Move X0, [X0+3344]
	022 Call 0x1C17CF4
	023 Move X0, 0xB33000
	024 Move X0, [X0+3352]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+966], W8
	028 Compare X20, 0
	029 JumpIfEqual {42}
	030 Move X8, 0xB33000
	031 Move X8, [X8+3352]
	032 Move X9, [X20]
	033 Move X8, [X8]
	034 Move W11, [X9+304]
	035 Move W10, [X8+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move W0, W31
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Move X0, [X19+40]
	050 Compare X0, 0
	051 JumpIfEqual {64}
	052 Compare X8, 0
	053 JumpIfEqual {103}
	054 Move X9, [X0]
	055 Move X1, [X8+40]
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X3, [X9+312]
	061 Move X2, [X9+320]
	062 Move X30, [X31+48]
	063 CallNoReturn X3
	064 Compare X8, 0
	065 JumpIfEqual {103}
	066 Move W9, [X19+16]
	067 Move W10, [X8+16]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Xor W10, W10, W11
	073 Xor W0, W10, 1
	074 Move TEMP, X10
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {43}
	078 Compare W9, 0
	079 JumpIfEqual {43}
	080 Move X9, 0xAEE000
	081 Move X9, [X9+2648]
	082 Move X22, [X19+24]
	083 Move X20, [X19+32]
	084 Move X21, [X8+24]
	085 Move X19, [X8+32]
	086 Move X0, [X9]
	087 Move W9, [X0+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X22
	092 Move X1, X20
	093 Move X2, X21
	094 Move X3, X19
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X4, X31
	100 Move X30, [X31+48]
	101 Call DateTimeOffset.op_Equality, X0, X1
	102 Return X0
	103 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03608DC8 LDR X2, [X24]
	0x03608DCC MOV W1, W21
	0x03608DD0 BL 0x301BCCC
	0x03608DD4 MOV X1, X0
	0x03608DD8 MOV X0, X20
	0x03608DDC MOV X2, X31
	0x03608DE0 BL 0x3233F90
	0x03608DE4 MOV X0, X19
	0x03608DE8 ADD W21, W21, 0x1
	0x03608DEC BL 0x36083CC
	0x03608DF0 MOV X22, X0
	0x03608DF4 CBNZ X0, 0x3608D4C
	0x03608DF8 BL 0x1C16F20
	0x03608DFC LDR X8, [X20]
	0x03608E00 MOV X0, X20
	0x03608E04 LDP X20, X19, [X31 + 0x30]
	0x03608E08 LDP X22, X21, [X31 + 0x20]
	0x03608E0C LDP X2, X1, [X8 + 0x168]
	0x03608E10 LDP X24, X23, [X31 + 0x10]
	0x03608E14 LDP X30, X25, [X31], #0x40
	0x03608E18 BR X2
	0x03608E1C LDP X8, X1, [X0 + 0x10]
	0x03608E20 MOV X0, X8
	0x03608E24 RET
	0x03608E28 STP X1, X2, [X0 + 0x10]
	0x03608E2C RET
	0x03608E30 LDP X8, X1, [X0 + 0x20]
	0x03608E34 MOV X0, X8
	0x03608E38 RET
	0x03608E3C STP X1, X2, [X0 + 0x20]
	0x03608E40 RET
	0x03608E44 MOV X1, X31
	0x03608E48 B 0x33C5A24

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xDD9000
	006 Move W8, [X20+967]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB33000
	013 Move X0, [X0+3360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+967], W8
	017 Move [X31], X31
	018 Move [X31+8], X31
	019 Move [X31+16], X31
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {27}
	023 Move X8, [X0]
	024 Move X9, [X8+344]
	025 Move X1, [X8+352]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X9, 0xB33000
	028 Move V0, [X19+1]
	029 Move X8, [X19+32]
	030 Move X9, [X9+3360]
	031 Add X0, X31, 0
	032 Move [X31], V0
	033 Move [X31+16], X8
	034 Move X1, [X9]
	035 Call Nullable`1<DateTimeOffset>.GetHashCode, X0
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Add X31, X31, 64
	040 Return X0

Method: System.Boolean TryParse(System.String input, out System.Net.Http.Headers.RangeConditionHeaderValue parsedValue)

Disassembly:
	0x03608E4C STP X30, X21, [X31 - 0x20]!
	0x03608E50 STP X20, X19, [X31 + 0x10]
	0x03608E54 ADRP X21, 0xDD8000
	0x03608E58 LDRB W8, [X21 + 0x3D3]
	0x03608E5C MOV X20, X1
	0x03608E60 MOV X19, X0
	0x03608E64 TBNZ X8, 0x0, 0x3608E94
	0x03608E68 ADRP X0, 0xB27000
	0x03608E6C LDR X0, [X0 + 0x9F8]
	0x03608E70 BL 0x1C16CF4
	0x03608E74 ADRP X0, 0xB13000
	0x03608E78 LDR X0, [X0 + 0xEA8]
	0x03608E7C BL 0x1C16CF4
	0x03608E80 ADRP X0, 0xB32000
	0x03608E84 LDR X0, [X0 + 0xD80]
	0x03608E88 BL 0x1C16CF4
	0x03608E8C MOVZ W8, 0x1
	0x03608E90 STRB W8, [X21 + 0x3D3]
	0x03608E94 CBZ X20, 0x3608ED0
	0x03608E98 ADRP X8, 0xB32000
	0x03608E9C LDR X8, [X8 + 0xD80]
	0x03608EA0 LDR X9, [X20]
	0x03608EA4 LDR X8, [X8]
	0x03608EA8 LDRB W11, [X9 + 0x130]
	0x03608EAC LDRB W10, [X8 + 0x130]
	0x03608EB0 CMP W11, W10
	0x03608EB4 B.CC 0x3608ED0
	0x03608EB8 LDR X9, [X9 + 0xC8]
	0x03608EBC ADD X9, X9, X10, 0x3, LSL
	0x03608EC0 LDUR X9, [X9 - 0x8]
	0x03608EC4 CMP X9, X8
	0x03608EC8 CSEL X8, X20, X31, EQ
	0x03608ECC B.EQ 0x3608EE0
	0x03608ED0 MOV W0, W31
	0x03608ED4 LDP X20, X19, [X31 + 0x10]
	0x03608ED8 LDP X30, X21, [X31], #0x20
	0x03608EDC RET
	0x03608EE0 CBZ X8, 0x3608F4C
	0x03608EE4 LDRB W9, [X8 + 0x10]
	0x03608EE8 LDRB W10, [X19 + 0x10]
	0x03608EEC LDR X11, [X8 + 0x18]
	0x03608EF0 LDR X12, [X19 + 0x18]
	0x03608EF4 CMP W9, 0x0
	0x03608EF8 CSET W9, EQ
	0x03608EFC CMP W10, 0x0
	0x03608F00 CSET W10, NE
	0x03608F04 CMP X11, X12
	0x03608F08 MOV W0, W31
	0x03608F0C B.NE 0x3608ED4
	0x03608F10 EOR W9, W9, W10, 0x0
	0x03608F14 CBZ W9, 0x3608ED4
	0x03608F18 LDRB W9, [X8 + 0x20]
	0x03608F1C LDRB W10, [X19 + 0x20]
	0x03608F20 LDR X8, [X8 + 0x28]
	0x03608F24 LDR X11, [X19 + 0x28]
	0x03608F28 CMP W9, 0x0
	0x03608F2C CSET W9, EQ
	0x03608F30 CMP W10, 0x0
	0x03608F34 CSET W10, NE
	0x03608F38 CMP X8, X11
	0x03608F3C CSET W8, EQ
	0x03608F40 EOR W9, W9, W10, 0x0
	0x03608F44 AND W0, W8, W9, 0x0
	0x03608F48 B 0x3608ED4
	0x03608F4C BL 0x1C16F20
	0x03608F50 SUB X31, X31, 0x30
	0x03608F54 STP X30, X21, [X31 + 0x10]
	0x03608F58 STP X20, X19, [X31 + 0x20]
	0x03608F5C ADRP X20, 0xDD8000
	0x03608F60 ADRP X21, 0xB32000
	0x03608F64 LDRB W8, [X20 + 0x3D4]
	0x03608F68 LDR X21, [X21 + 0x690]
	0x03608F6C MOV X19, X0
	0x03608F70 TBNZ X8, 0x0, 0x3608F88
	0x03608F74 ADRP X0, 0xB32000
	0x03608F78 LDR X0, [X0 + 0x690]
	0x03608F7C BL 0x1C16CF4
	0x03608F80 MOVZ W8, 0x1
	0x03608F84 STRB W8, [X20 + 0x3D4]
	0x03608F88 LDR V0, [X19 + 0x1]
	0x03608F8C LDR X1, [X21]
	0x03608F90 ADD X0, X31, 0x0
	0x03608F94 STR V0, [X31]
	0x03608F98 BL 0x2434A54
	0x03608F9C LDR V0, [X19 + 0x2]
	0x03608FA0 LDR X1, [X21]
	0x03608FA4 MOV W20, W0
	0x03608FA8 ADD X0, X31, 0x0
	0x03608FAC STR V0, [X31]
	0x03608FB0 BL 0x2434A54
	0x03608FB4 EOR W0, W0, W20, 0x0
	0x03608FB8 LDP X20, X19, [X31 + 0x20]
	0x03608FBC LDP X30, X21, [X31 + 0x10]
	0x03608FC0 ADD X31, X31, 0x30
	0x03608FC4 RET
	0x03608FC8 SUB X31, X31, 0x40
	0x03608FCC STR X30, [X31 + 0x10]
	0x03608FD0 STP X22, X21, [X31 + 0x20]
	0x03608FD4 STP X20, X19, [X31 + 0x30]
	0x03608FD8 ADRP X20, 0xDD8000
	0x03608FDC LDRB W8, [X20 + 0x3D5]
	0x03608FE0 MOV X19, X0
	0x03608FE4 TBNZ X8, 0x0, 0x3609014
	0x03608FE8 ADRP X0, 0xB13000
	0x03608FEC LDR X0, [X0 + 0xEA8]
	0x03608FF0 BL 0x1C16CF4
	0x03608FF4 ADRP X0, 0xB13000
	0x03608FF8 LDR X0, [X0 + 0xEB0]
	0x03608FFC BL 0x1C16CF4
	0x03609000 ADRP X0, 0xAEB000
	0x03609004 LDR X0, [X0 + 0x2A8]
	0x03609008 BL 0x1C16CF4
	0x0360900C MOVZ W8, 0x1
	0x03609010 STRB W8, [X20 + 0x3D5]
	0x03609014 STR X31, [X31 + 0x18]
	0x03609018 LDP V0, V1, [X19 + 0x10]
	0x0360901C ADRP X21, 0xB12000
	0x03609020 LDR X21, [X21 + 0xEB0]
	0x03609024 UNIMPLEMENTED
	0x03609028 STR V1, [X31]
	0x0360902C CBZ W8, 0x36090A0
	0x03609030 LDR X1, [X21]
	0x03609034 ADD X0, X31, 0x0
	0x03609038 UNIMPLEMENTED
	0x0360903C STR V0, [X31]
	0x03609040 BL 0x24349A0
	0x03609044 STR X0, [X31 + 0x18]
	0x03609048 ADD X0, X31, 0x18
	0x0360904C MOV X1, X31
	0x03609050 BL 0x337C96C
	0x03609054 MOV X20, X0
	0x03609058 CBZ W22, 0x36090D4
	0x0360905C LDR V0, [X19 + 0x2]
	0x03609060 LDR X1, [X21]
	0x03609064 ADD X0, X31, 0x0
	0x03609068 STR V0, [X31]
	0x0360906C BL 0x24349A0
	0x03609070 STR X0, [X31 + 0x18]
	0x03609074 ADD X0, X31, 0x18
	0x03609078 MOV X1, X31
	0x0360907C BL 0x337C96C
	0x03609080 ADRP X8, 0xAEB000
	0x03609084 LDR X8, [X8 + 0x2A8]
	0x03609088 MOV X2, X0
	0x0360908C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xDD9000
	011 Move X25, 0xB14000
	012 Move X24, 0xB14000
	013 Move W8, [X20+968]
	014 Move X25, [X25+2248]
	015 Move X24, [X24+2256]
	016 Move X19, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xB33000
	023 Move X0, [X0+1688]
	024 Call 0x1C17CF4
	025 Move X0, 0xB14000
	026 Move X0, [X0+2248]
	027 Call 0x1C17CF4
	028 Move X0, 0xB33000
	029 Move X0, [X0+3352]
	030 Call 0x1C17CF4
	031 Move X0, 0xB14000
	032 Move X0, [X0+2256]
	033 Call 0x1C17CF4
	034 Move X0, 0xB33000
	035 Move X0, [X0+1696]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+968], W8
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Move [X19], X31
	042 Move X0, [X25]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X20, X0
	046 Call Object..ctor, X0
	047 Move X0, X20
	048 Move W1, W31
	049 Move [X20+16], X22
	050 Call Lexer.Scan, X0, X1
	051 Move X21, X0
	052 Move X0, [X24]
	053 Move X23, X1
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction CMP not yet implemented."
	059 And X2, X23, 0
	060 Move X0, X20
	061 Move X1, X21
	062 Call Lexer.GetStringValue, X0, X1
	063 Move X8, 0xB33000
	064 Move X8, [X8+1696]
	065 Move X2, X31
	066 Move X1, [X8]
	067 Call String.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {140}
	072 Move X0, [X25]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X1, X31, 0
	078 Move X0, X22
	079 Call Lexer.TryGetDateValue, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {151}
	084 Move X8, 0xB33000
	085 Move X20, [X31]
	086 Move X21, [X31+8]
	087 Move X8, [X8+3352]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X1, X20
	091 Move X2, X21
	092 Move X22, X0
	093 Call RangeConditionHeaderValue..ctor, X0, X1
	094 Move [X19], X22
	095 Move X22, X21
	096 Move X0, [X24]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X20
	103 Move W1, W31
	104 Call Lexer.Scan, X0, X1
	105 Move X8, [X24]
	106 Move X24, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, 0xB33000
	114 Move X8, [X8+1688]
	115 And X24, X23, 0
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X31
	119 Move X23, X0
	120 Call Object..ctor, X0
	121 Move X0, X20
	122 Move X1, X22
	123 Move X2, X24
	124 Call Lexer.GetStringValue, X0, X1
	125 Compare X23, 0
	126 JumpIfEqual {162}
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Move [X23+24], X0
	130 Move [X23+16], W8
	131 Move X8, 0xB32000
	132 Move X8, [X8+3352]
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X1, X23
	136 Move X20, X0
	137 Call RangeConditionHeaderValue..ctor, X0, X1
	138 Move [X19], X20
	139 Move W0, 1
	140 Move X0, X20
	141 Call Lexer.PeekChar, X0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, [X20+24]
	144 Move X0, X20
	145 Move W1, W31
	146 Add W8, W8, 1
	147 Move [X20+24], W8
	148 Call Lexer.Scan, X0, X1
	149 Move X22, X0
	150 Move X23, X1
	151 Move W0, W31
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X30, [X31+16]
	159 Move X25, [X31+24]
	160 Add X31, X31, 80
	161 Return X0
	162 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03609090 MOV X3, X31
	0x03609094 LDR X1, [X8]
	0x03609098 BL 0x32274B8
	0x0360909C B 0x36090EC
	0x036090A0 LDR X1, [X21]
	0x036090A4 ADD X0, X31, 0x0
	0x036090A8 BL 0x24349A0
	0x036090AC STR X0, [X31 + 0x18]
	0x036090B0 ADD X0, X31, 0x18
	0x036090B4 MOV X1, X31
	0x036090B8 BL 0x337C96C
	0x036090BC ADRP X8, 0xAEB000
	0x036090C0 LDR X8, [X8 + 0x2A8]
	0x036090C4 MOV X1, X0
	0x036090C8 LDR X8, [X8]
	0x036090CC MOV X0, X8
	0x036090D0 B 0x36090E4
	0x036090D4 ADRP X8, 0xAEB000
	0x036090D8 LDR X8, [X8 + 0x2A8]
	0x036090DC MOV X0, X20
	0x036090E0 LDR X1, [X8]
	0x036090E4 MOV X2, X31
	0x036090E8 BL 0x321B938
	0x036090EC LDP X20, X19, [X31 + 0x30]
	0x036090F0 LDP X22, X21, [X31 + 0x20]
	0x036090F4 LDR X30, [X31 + 0x10]
	0x036090F8 ADD X31, X31, 0x40
	0x036090FC RET
	0x03609100 SUB X31, X31, 0x50
	0x03609104 STP X30, X23, [X31 + 0x20]
	0x03609108 STP X22, X21, [X31 + 0x30]
	0x0360910C STP X20, X19, [X31 + 0x40]
	0x03609110 ADRP X23, 0xDD7000
	0x03609114 ADRP X22, 0xB31000
	0x03609118 LDRB W8, [X23 + 0x3D6]
	0x0360911C LDR X22, [X22 + 0xCF0]
	0x03609120 MOV X20, X2
	0x03609124 MOV X21, X1
	0x03609128 MOV X19, X0
	0x0360912C TBNZ X8, 0x0, 0x3609144
	0x03609130 ADRP X0, 0xB31000
	0x03609134 LDR X0, [X0 + 0xCF0]
	0x03609138 BL 0x1C16CF4
	0x0360913C MOVZ W8, 0x1
	0x03609140 STRB W8, [X23 + 0x3D6]
	0x03609144 MOV X0, X19
	0x03609148 MOV X1, X31
	0x0360914C BL 0x33BDD8C
	0x03609150 LDR X3, [X22]
	0x03609154 ADD X0, X31, 0x8
	0x03609158 MOV X1, X21
	0x0360915C MOV X2, X20
	0x03609160 STP X31, X31, [X31 + 0x8]
	0x03609164 STR X31, [X31 + 0x18]
	0x03609168 BL 0x2430E40
	0x0360916C LDR X8, [X31 + 0x18]
	0x03609170 LDUR V0, [X31 + 0x8]
	0x03609174 LDP X22, X21, [X31 + 0x30]
	0x03609178 LDP X30, X23, [X31 + 0x20]
	0x0360917C STR X8, [X19 + 0x20]
	0x03609180 STR V0, [X19 + 0x1]
	0x03609184 LDP X20, X19, [X31 + 0x40]
	0x03609188 ADD X31, X31, 0x50
	0x0360918C RET
	0x03609190 SUB X31, X31, 0x40
	0x03609194 STP X30, X21, [X31 + 0x20]
	0x03609198 STP X20, X19, [X31 + 0x30]
	0x0360919C ADRP X21, 0xDD7000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X20, 0xDD8000
	006 Move W8, [X20+969]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xAED000
	013 Move X0, [X0+3144]
	014 Call 0x1C17CF4
	015 Move X0, 0xAED000
	016 Move X0, [X0+2648]
	017 Call 0x1C17CF4
	018 Move X0, 0xB32000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0xB18000
	022 Move X0, [X0+936]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+969], W8
	026 Move [X31+16], X31
	027 Move [X31+24], X31
	028 Move [X31+32], X31
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X0, [X19+40]
	032 Compare X0, 0
	033 JumpIfEqual {38}
	034 Move X8, [X0]
	035 Move X9, [X8+360]
	036 Move X1, [X8+368]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X9, 0xB32000
	039 Move V0, [X19+1]
	040 Move X8, [X19+32]
	041 Move X9, [X9+3368]
	042 Add X0, X31, 16
	043 Move [X31+1], V0
	044 Move [X31+32], X8
	045 Move X1, [X9]
	046 Call Nullable`1<DateTimeOffset>.get_Value, X0
	047 Move X9, 0xAED000
	048 Move X9, [X9+3144]
	049 Move X8, X0
	050 Move [X31], X8
	051 Move [X31+8], X1
	052 Move X0, [X9]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X31
	058 Call CultureInfo.get_InvariantCulture
	059 Move X8, 0xAED000
	060 Move X8, [X8+2648]
	061 Move X19, X0
	062 Move X8, [X8]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, 0xB18000
	069 Move X8, [X8+936]
	070 Add X0, X31, 0
	071 Move X2, X19
	072 Move X3, X31
	073 Move X1, [X8]
	074 Call DateTimeOffset.ToString, X0, X1, X2
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X30, [X31+48]
	078 Add X31, X31, 80
	079 Return X0

