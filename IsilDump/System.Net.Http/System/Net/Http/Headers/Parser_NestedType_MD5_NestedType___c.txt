Type: System.Net.Http.Headers.Parser/MD5/<>c

Method: System.Void .cctor()

Disassembly:
	0x03608030 STR X20, [X19]
	0x03608034 MOVZ W0, 0x1
	0x03608038 B 0x3608074
	0x0360803C MOV X0, X20
	0x03608040 BL 0x3600E24
	0x03608044 CMP W0, 0x2F
	0x03608048 B.NE 0x3608070
	0x0360804C LDR W8, [X20 + 0x18]
	0x03608050 MOV X0, X20
	0x03608054 MOV W1, W31
	0x03608058 ADD W8, W8, 0x1
	0x0360805C STR W8, [X20 + 0x18]
	0x03608060 BL 0x35FCF70
	0x03608064 MOV X22, X0
	0x03608068 MOV X23, X1
	0x0360806C B 0x3607F8C
	0x03608070 MOV W0, W31
	0x03608074 LDP X20, X19, [X31 + 0x40]
	0x03608078 LDP X22, X21, [X31 + 0x30]
	0x0360807C LDP X24, X23, [X31 + 0x20]
	0x03608080 LDP X30, X25, [X31 + 0x10]
	0x03608084 ADD X31, X31, 0x50
	0x03608088 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDD9000
	005 Move X20, 0xB33000
	006 Move W8, [X19+954]
	007 Move X20, [X20+3208]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xB33000
	013 Move X0, [X0+3208]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+954], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x0360808C BL 0x1C16F20
	0x03608090 SUB X31, X31, 0x50

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <.cctor>b__2_0(System.Object l)

Disassembly:
	0x03608094 STR X30, [X31 + 0x30]
	0x03608098 STP X20, X19, [X31 + 0x40]
	0x0360809C ADRP X20, 0xDD8000
	0x036080A0 LDRB W8, [X20 + 0x3C9]
	0x036080A4 MOV X19, X0
	0x036080A8 TBNZ X8, 0x0, 0x36080E4
	0x036080AC ADRP X0, 0xAED000
	0x036080B0 LDR X0, [X0 + 0xC48]
	0x036080B4 BL 0x1C16CF4
	0x036080B8 ADRP X0, 0xAED000
	0x036080BC LDR X0, [X0 + 0xA58]
	0x036080C0 BL 0x1C16CF4
	0x036080C4 ADRP X0, 0xB32000
	0x036080C8 LDR X0, [X0 + 0xD28]
	0x036080CC BL 0x1C16CF4
	0x036080D0 ADRP X0, 0xB18000
	0x036080D4 LDR X0, [X0 + 0x3A8]
	0x036080D8 BL 0x1C16CF4
	0x036080DC MOVZ W8, 0x1
	0x036080E0 STRB W8, [X20 + 0x3C9]
	0x036080E4 STP X31, X31, [X31 + 0x10]
	0x036080E8 STR X31, [X31 + 0x20]
	0x036080EC STP X31, X31, [X31]
	0x036080F0 LDR X0, [X19 + 0x28]
	0x036080F4 CBZ X0, 0x3608108
	0x036080F8 LDR X8, [X0]
	0x036080FC LDP X9, X1, [X8 + 0x168]
	0x03608100 BLR X9
	0x03608104 B 0x3608190
	0x03608108 ADRP X9, 0xB32000
	0x0360810C LDR V0, [X19 + 0x1]
	0x03608110 LDR X8, [X19 + 0x20]
	0x03608114 LDR X9, [X9 + 0xD28]
	0x03608118 ADD X0, X31, 0x10
	0x0360811C STR V0, [X31 + 0x1]
	0x03608120 STR X8, [X31 + 0x20]
	0x03608124 LDR X1, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDD9000
	006 Move X21, 0xAF5000
	007 Move W8, [X20+955]
	008 Move X21, [X21+2536]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xAEC000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xAF5000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+955], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfEqual {39}
	026 Compare X19, 0
	027 JumpIfEqual {42}
	028 Move X8, 0xAEC000
	029 Move X8, [X8+1560]
	030 Move X0, X19
	031 Move X20, [X8]
	032 Move X1, X20
	033 Call 0x1C17E00
	034 Compare X0, 0
	035 JumpIfNotEqual {43}
	036 Move X0, X19
	037 Move X1, X20
	038 Call 0x1C181E0
	039 Call 0x1C17DFC
	040 Compare X19, 0
	041 JumpIfNotEqual {28}
	042 Move X0, X31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Convert.ToBase64String, X0
	049 Return X0

