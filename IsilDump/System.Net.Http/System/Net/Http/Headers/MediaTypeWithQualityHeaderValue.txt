Type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue

Method: System.Void .ctor(System.String mediaType)

Disassembly:
	0x03606BA4 LDR W9, [X8 + 0xE0]
	0x03606BA8 CBNZ W9, 0x3606BB4
	0x03606BAC MOV X0, X8
	0x03606BB0 BL 0x1C16DFC
	0x03606BB4 LDR X1, [X21]
	0x03606BB8 ADD X0, X31, 0x0
	0x03606BBC MOV X2, X19
	0x03606BC0 MOV X3, X31
	0x03606BC4 BL 0x336545C
	0x03606BC8 LDP X20, X19, [X31 + 0x20]
	0x03606BCC LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Call MediaTypeHeaderValue.set_MediaType, X0, X1
	014 Return 

Method: System.Void .ctor()

Disassembly:
	0x03606BD0 ADD X31, X31, 0x30
	0x03606BD4 RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.MediaTypeWithQualityHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x03606BD8 BL 0x1C16F20
	0x03606BDC MOV X0, X19
	0x03606BE0 BL 0x1C171E0
	0x03606BE4 STR X30, [X31 - 0x30]!
	0x03606BE8 STP X22, X21, [X31 + 0x10]
	0x03606BEC STP X20, X19, [X31 + 0x20]
	0x03606BF0 ADRP X21, 0xDDA000
	0x03606BF4 ADRP X22, 0xB34000
	0x03606BF8 LDRB W8, [X21 + 0x3B4]
	0x03606BFC LDR X22, [X22 + 0xC78]
	0x03606C00 MOV X19, X1
	0x03606C04 MOV X20, X0
	0x03606C08 TBNZ X8, 0x0, 0x3606C20
	0x03606C0C ADRP X0, 0xB34000
	0x03606C10 LDR X0, [X0 + 0xC78]
	0x03606C14 BL 0x1C16CF4
	0x03606C18 MOVZ W8, 0x1
	0x03606C1C STRB W8, [X21 + 0x3B4]
	0x03606C20 LDR X0, [X22]
	0x03606C24 BL 0x1C16F10
	0x03606C28 MOV X1, X20
	0x03606C2C MOV X2, X31
	0x03606C30 BL 0x36CF95C
	0x03606C34 MOVZ W0, 0x1
	0x03606C38 STR X20, [X19]
	0x03606C3C LDP X20, X19, [X31 + 0x20]
	0x03606C40 LDP X22, X21, [X31 + 0x10]
	0x03606C44 LDR X30, [X31], #0x30
	0x03606C48 RET
	0x03606C4C CMP W1, 0x1
	0x03606C50 MOV X20, X0
	0x03606C54 B.NE 0x3606CB8
	0x03606C58 MOV X0, X20
	0x03606C5C BL 0x3EB1AD0
	0x03606C60 MOV X20, X0
	0x03606C64 ADRP X0, 0xAF3000
	0x03606C68 LDR X0, [X0 + 0xCC0]
	0x03606C6C BL 0x1C16D08
	0x03606C70 LDR X8, [X20]
	0x03606C74 LDR X1, [X8]
	0x03606C78 BL 0x1C17270
	0x03606C7C TBZ X0, 0x0, 0x3606C90
	0x03606C80 BL 0x3EB1AE0
	0x03606C84 MOV X20, X31
	0x03606C88 MOV W0, W31
	0x03606C8C B 0x3606C38
	0x03606C90 MOVZ W0, 0x8
	0x03606C94 BL 0x3EB1AF0
	0x03606C98 LDR X8, [X20]
	0x03606C9C STR X8, [X0]
	0x03606CA0 ADRP X1, 0x8AE000
	0x03606CA4 ADD X1, X1, 0xE58
	0x03606CA8 MOV X2, X31
	0x03606CAC BL 0x3EB1B00
	0x03606CB0 MOV X20, X0
	0x03606CB4 BL 0x3EB1AE0
	0x03606CB8 MOV X0, X20
	0x03606CBC BL 0x1D2C690
	0x03606CC0 BL 0x1990590
	0x03606CC4 STR X30, [X31 - 0x40]!
	0x03606CC8 STP X24, X23, [X31 + 0x10]
	0x03606CCC STP X22, X21, [X31 + 0x20]
	0x03606CD0 STP X20, X19, [X31 + 0x30]
	0x03606CD4 ADRP X24, 0xDDA000
	0x03606CD8 ADRP X22, 0xB34000
	0x03606CDC ADRP X23, 0xAEE000
	0x03606CE0 ADRP X21, 0xAEF000
	0x03606CE4 LDRB W8, [X24 + 0x3B5]
	0x03606CE8 LDR X22, [X22 + 0xC80]
	0x03606CEC LDR X23, [X23 + 0xEC8]
	0x03606CF0 LDR X21, [X21 + 0xA28]
	0x03606CF4 MOV X20, X1
	0x03606CF8 MOV X19, X0
	0x03606CFC TBNZ X8, 0x0, 0x3606D2C
	0x03606D00 ADRP X0, 0xAEF000
	0x03606D04 LDR X0, [X0 + 0xA28]
	0x03606D08 BL 0x1C16CF4
	0x03606D0C ADRP X0, 0xB34000
	0x03606D10 LDR X0, [X0 + 0xC80]
	0x03606D14 BL 0x1C16CF4
	0x03606D18 ADRP X0, 0xAEE000
	0x03606D1C LDR X0, [X0 + 0xEC8]
	0x03606D20 BL 0x1C16CF4
	0x03606D24 MOVZ W8, 0x1
	0x03606D28 STRB W8, [X24 + 0x3B5]
	0x03606D2C STR X31, [X31 + 0x8]
	0x03606D30 STR X19, [X20]
	0x03606D34 LDR X0, [X22]
	0x03606D38 LDR X2, [X23]
	0x03606D3C MOV X1, X19
	0x03606D40 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0xDDB000
	009 Move W8, [X22+925]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0xAF1000
	018 Move X0, [X0+448]
	019 Call 0x1C17CF4
	020 Move X0, 0xB35000
	021 Move X0, [X0+3016]
	022 Call 0x1C17CF4
	023 Move X0, 0xB35000
	024 Move X0, [X0+3024]
	025 Call 0x1C17CF4
	026 Move X0, 0xB16000
	027 Move X0, [X0+2256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+925], W8
	031 Move X23, 0xB16000
	032 Move X23, [X23+2256]
	033 Add X1, X31, 24
	034 Move X0, X21
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move [X31], X31
	038 Move [X31+8], X31
	039 Move [X19], X31
	040 Call MediaTypeHeaderValue.TryParseMediaType, X0, X1
	041 And W31, W0, 255
	042 Move [X31], X0
	043 Move [X31+8], X1
	044 Move X8, 0xB35000
	045 Move X8, [X8+3024]
	046 Add X0, X31, 0
	047 Move X1, [X8]
	048 Call Nullable`1<Token>.get_Value, X0
	049 Move [X20], X0
	050 Move [X20+8], W1
	051 Move X22, X0
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X1, X31, 16
	059 Move X0, X21
	060 Move X2, X20
	061 Call NameValueHeaderValue.TryParseParameters, X0, X1, X2
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {97}
	066 Move X8, 0xAF1000
	067 Move X8, [X8+448]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call Object..ctor, X0
	073 Move [X19], X20
	074 Compare X20, 0
	075 JumpIfEqual {106}
	076 Move X8, [X31+24]
	077 Move [X20+24], X8
	078 Move X8, [X19]
	079 Compare X8, 0
	080 JumpIfEqual {106}
	081 Move X9, [X31+16]
	082 Move W0, 1
	083 Move [X8+16], X9
	084 Move X8, [X23]
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {91}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X8, [X23]
	091 Move X8, [X8+184]
	092 Move W0, W31
	093 Move W9, [X8+8]
	094 Move X8, [X8]
	095 Move [X20+8], W9
	096 Move [X20], X8
	097 Move W0, W31
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X30, [X31+32]
	103 Move X23, [X31+40]
	104 Add X31, X31, 80
	105 Return X0
	106 Call 0x1C17F20

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.MediaTypeWithQualityHeaderValue> result)

Disassembly:
	0x03606D44 BL 0x32274B8
	0x03606D48 LDR X8, [X21]
	0x03606D4C MOV X19, X0
	0x03606D50 LDR W9, [X8 + 0xE0]
	0x03606D54 CBNZ W9, 0x3606D60
	0x03606D58 MOV X0, X8
	0x03606D5C BL 0x1C16DFC
	0x03606D60 ADD X2, X31, 0x8
	0x03606D64 MOVZ W1, 0x1
	0x03606D68 MOV X0, X19
	0x03606D6C MOV X3, X31
	0x03606D70 BL 0x361E23C
	0x03606D74 LDP X20, X19, [X31 + 0x30]
	0x03606D78 LDP X22, X21, [X31 + 0x20]
	0x03606D7C LDP X24, X23, [X31 + 0x10]
	0x03606D80 AND W0, W0, 0x1
	0x03606D84 LDR X30, [X31], #0x40
	0x03606D88 RET
	0x03606D8C STR X30, [X31 - 0x30]!
	0x03606D90 STP X22, X21, [X31 + 0x10]
	0x03606D94 STP X20, X19, [X31 + 0x20]
	0x03606D98 ADRP X21, 0xDDA000
	0x03606D9C ADRP X22, 0xAEF000
	0x03606DA0 LDRB W8, [X21 + 0x3B6]
	0x03606DA4 LDR X22, [X22 + 0xC48]
	0x03606DA8 MOV X19, X1
	0x03606DAC MOV X20, X0
	0x03606DB0 TBNZ X8, 0x0, 0x3606DC8
	0x03606DB4 ADRP X0, 0xAEF000
	0x03606DB8 LDR X0, [X0 + 0xC48]
	0x03606DBC BL 0x1C16CF4
	0x03606DC0 MOVZ W8, 0x1
	0x03606DC4 STRB W8, [X21 + 0x3B6]
	0x03606DC8 LDR X0, [X22]
	0x03606DCC LDR W8, [X0 + 0xE0]
	0x03606DD0 CBNZ W8, 0x3606DD8
	0x03606DD4 BL 0x1C16DFC
	0x03606DD8 MOV X0, X31
	0x03606DDC BL 0x3338524
	0x03606DE0 MOV X2, X0
	0x03606DE4 MOV X0, X20
	0x03606DE8 MOV X3, X19
	0x03606DEC LDP X20, X19, [X31 + 0x20]
	0x03606DF0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDDB000
	010 Move X25, 0xB35000
	011 Move X22, 0xB35000
	012 Move X23, 0xB35000
	013 Move W8, [X24+926]
	014 Move X25, [X25+3080]
	015 Move X22, [X22+3088]
	016 Move X23, [X23+3096]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB35000
	025 Move X0, [X0+3096]
	026 Call 0x1C17CF4
	027 Move X0, 0xB35000
	028 Move X0, [X0+3080]
	029 Call 0x1C17CF4
	030 Move X0, 0xB35000
	031 Move X0, [X0+3088]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+926], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

