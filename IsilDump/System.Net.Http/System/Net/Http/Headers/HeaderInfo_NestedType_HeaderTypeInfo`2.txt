Type: System.Net.Http.Headers.HeaderInfo/HeaderTypeInfo`2

Method: System.Void .ctor(System.String name, System.Net.Http.Headers.TryParseDelegate`1<T> parser, System.Net.Http.Headers.HttpHeaderKind headerKind)

Disassembly:
	0x02DDEF88 B.NE 0x2DDEF74
	0x02DDEF8C MOV X0, X20
	0x02DDEF90 MOV W2, W31
	0x02DDEF94 BL 0x1C5C788
	0x02DDEF98 B 0x2DDEFA8
	0x02DDEF9C LDRSW X9, [X10]
	0x02DDEFA0 ADD X8, X8, X9, 0x4, LSL
	0x02DDEFA4 ADD X0, X8, 0x138
	0x02DDEFA8 LDP X8, X1, [X0]
	0x02DDEFAC MOV X0, X20
	0x02DDEFB0 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move W2, W3
	006 Move X3, X31
	007 Move X20, X0
	008 Call HeaderInfo..ctor, X0, X1, X2
	009 Move [X20+40], X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Return 

Method: System.Void AddToCollection(System.Object collection, System.Object value)

Disassembly:
	0x02DDEFB4 CBZ X0, 0x2DDF114
	0x02DDEFB8 LDR X8, [X0]
	0x02DDEFBC LDP X9, X1, [X8 + 0x168]
	0x02DDEFC0 BLR X9
	0x02DDEFC4 MOV X1, X0
	0x02DDEFC8 CBZ X21, 0x2DDF118
	0x02DDEFCC LDR W10, [X21 + 0x1C]
	0x02DDEFD0 LDR X8, [X21 + 0x10]
	0x02DDEFD4 LDR X9, [X24]
	0x02DDEFD8 ADD W10, W10, 0x1
	0x02DDEFDC STR W10, [X21 + 0x1C]
	0x02DDEFE0 CBZ X8, 0x2DDF110
	0x02DDEFE4 LDRSW X10, [X21 + 0x18]
	0x02DDEFE8 LDR W11, [X8 + 0x18]
	0x02DDEFEC CMP W10, W11
	0x02DDEFF0 B.CS 0x2DDF008
	0x02DDEFF4 ADD W9, W10, 0x1
	0x02DDEFF8 ADD X8, X8, X10, 0x3, LSL
	0x02DDEFFC STR W9, [X21 + 0x18]
	0x02DDF000 STR X1, [X8 + 0x20]
	0x02DDF004 B 0x2DDEEE4
	0x02DDF008 LDR X8, [X9 + 0x20]
	0x02DDF00C LDR X8, [X8 + 0xC0]
	0x02DDF010 LDR X2, [X8 + 0x70]
	0x02DDF014 MOV X0, X21
	0x02DDF018 BL 0x301BF90
	0x02DDF01C B 0x2DDEEE4
	0x02DDF020 MOV X22, X31
	0x02DDF024 MOVZ W23, 0x7
	0x02DDF028 CBZ X20, 0x2DDF0C8
	0x02DDF02C ADRP X10, 0x1314000
	0x02DDF030 LDR X8, [X20]
	0x02DDF034 LDR X10, [X10 + 0xE00]
	0x02DDF038 LDRH W9, [X8 + 0x12E]
	0x02DDF03C LDR X1, [X10]
	0x02DDF040 CBZ X9, 0x2DDF064
	0x02DDF044 LDR X10, [X8 + 0xB0]
	0x02DDF048 ADD X10, X10, 0x8
	0x02DDF04C LDUR X11, [X10 - 0x8]
	0x02DDF050 CMP X11, X1
	0x02DDF054 B.EQ 0x2DDF0B0
	0x02DDF058 SUBS X9, X9, 0x1
	0x02DDF05C ADD X10, X10, 0x10
	0x02DDF060 B.NE 0x2DDF04C
	0x02DDF064 MOV X0, X20
	0x02DDF068 MOV W2, W31
	0x02DDF06C BL 0x1C5C788
	0x02DDF070 B 0x2DDF0BC
	0x02DDF074 LDR X19, [X19 + 0x28]
	0x02DDF078 CBZ X19, 0x2DDF0A8
	0x02DDF07C ADRP X8, 0x1315000
	0x02DDF080 LDR X8, [X8 + 0x1D0]
	0x02DDF084 LDR X0, [X8]
	0x02DDF088 BL 0x1C16F10
	0x02DDF08C ADRP X8, 0x131C000
	0x02DDF090 LDR X8, [X8 + 0xDD8]
	0x02DDF094 MOV X1, X19
	0x02DDF098 MOV X21, X0
	0x02DDF09C LDR X2, [X8]
	0x02DDF0A0 BL 0x301B8E0
	0x02DDF0A4 B 0x2DDF0F8
	0x02DDF0A8 MOV X21, X31
	0x02DDF0AC B 0x2DDF0F8
	0x02DDF0B0 LDRSW X9, [X10]
	0x02DDF0B4 ADD X8, X8, X9, 0x4, LSL
	0x02DDF0B8 ADD X0, X8, 0x138
	0x02DDF0BC LDP X8, X1, [X0]
	0x02DDF0C0 MOV X0, X20
	0x02DDF0C4 BLR X8
	0x02DDF0C8 CBNZ X22, 0x2DDF12C
	0x02DDF0CC CMP W23, 0x7
	0x02DDF0D0 B.EQ 0x2DDF0D8
	0x02DDF0D4 CBNZ W23, 0x2DDF0F8
	0x02DDF0D8 LDR X1, [X19 + 0x28]
	0x02DDF0DC CBZ X1, 0x2DDF0F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+32]
	007 Move X19, X3
	008 Move X21, X2
	009 Move X20, X1
	010 Move X8, [X8+192]
	011 Move X8, [X8+16]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Compare X20, 0
	021 JumpIfEqual {24}
	022 Move X9, [X20]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+32]
	025 Move X8, [X8+192]
	026 Move X0, [X8+24]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Compare X21, 0
	034 JumpIfEqual {39}
	035 Move X8, [X21]
	036 Move W9, [X0+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, X31
	040 Compare X20, 0
	041 JumpIfEqual {82}
	042 Move X8, [X19+32]
	043 Move X8, [X8+192]
	044 Compare X1, 0
	045 JumpIfEqual {55}
	046 Move X2, [X8+32]
	047 Move X0, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call 0x2DE16B8, X0, X1
	054 Return 
	055 Move X22, [X8+40]
	056 Move W8, [X22+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X22
	062 Call 0x1C5D684
	063 Move X22, X0
	064 Compare X21, 0
	065 JumpIfEqual {83}
	066 Move X0, X21
	067 Move X1, X22
	068 Call 0x1C17E00
	069 Move X1, X0
	070 Compare X0, 0
	071 JumpIfNotEqual {84}
	072 Move X0, X21
	073 Move X1, X22
	074 Call 0x1C181E0
	075 Move X8, [X8+200]
	076 Add X8, X8, X9
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Compare X20, 0
	081 JumpIfNotEqual {42}
	082 Call 0x1C17F20
	083 Move X1, X31
	084 Move X8, [X19+32]
	085 Move X0, X20
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X8, [X8+192]
	091 Move X2, [X8+48]
	092 Move X30, [X31+48]
	093 Call 0x2DE164C, X0, X1
	094 Return 
	095 Move X0, X20
	096 Move X1, X8
	097 Call 0x1C181E0

Method: System.Object CreateCollection(System.Net.Http.Headers.HttpHeaders headers, System.Net.Http.Headers.HeaderInfo headerInfo)

Disassembly:
	0x02DDF0E0 CBZ X21, 0x2DDF11C
	0x02DDF0E4 ADRP X8, 0x133F000
	0x02DDF0E8 LDR X8, [X8 + 0xF30]
	0x02DDF0EC MOV X0, X21
	0x02DDF0F0 LDR X2, [X8]
	0x02DDF0F4 BL 0x301C194
	0x02DDF0F8 MOV X0, X21
	0x02DDF0FC LDP X20, X19, [X31 + 0x30]
	0x02DDF100 LDP X22, X21, [X31 + 0x20]
	0x02DDF104 LDP X24, X23, [X31 + 0x10]
	0x02DDF108 LDR X30, [X31], #0x40
	0x02DDF10C RET
	0x02DDF110 BL 0x1C16F20
	0x02DDF114 BL 0x1C16F20
	0x02DDF118 BL 0x1C16F20
	0x02DDF11C BL 0x1C16F20
	0x02DDF120 MOV X0, X19
	0x02DDF124 BL 0x1C171E0
	0x02DDF128 BL 0x1C16F20
	0x02DDF12C MOV X0, X22
	0x02DDF130 BL 0x1C16F18
	0x02DDF134 B 0x2DDF148
	0x02DDF138 B 0x2DDF148

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X1, X21
	020 Move X2, X19
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X3, [X8+56]
	024 Call 0x2DE15B4, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Collections.Generic.List`1<System.String> ToStringCollection(System.Object collection)

Disassembly:
	0x02DDF13C B 0x2DDF148
	0x02DDF140 B 0x2DDF148
	0x02DDF144 B 0x2DDF148
	0x02DDF148 MOV X23, X0
	0x02DDF14C CMP W1, 0x1
	0x02DDF150 B.NE 0x2DDF170
	0x02DDF154 MOV X0, X23
	0x02DDF158 BL 0x3EB1AD0
	0x02DDF15C LDR X22, [X0]
	0x02DDF160 BL 0x3EB1AE0
	0x02DDF164 MOV W23, W31
	0x02DDF168 CBNZ X20, 0x2DDF02C
	0x02DDF16C B 0x2DDF0C8
	0x02DDF170 MOV X22, X31
	0x02DDF174 B 0x2DDF17C
	0x02DDF178 MOV X23, X0
	0x02DDF17C CBZ X20, 0x2DDF1E0
	0x02DDF180 ADRP X10, 0x1314000
	0x02DDF184 LDR X8, [X20]
	0x02DDF188 LDR X10, [X10 + 0xE00]
	0x02DDF18C LDRH W9, [X8 + 0x12E]
	0x02DDF190 LDR X1, [X10]
	0x02DDF194 CBZ X9, 0x2DDF1B8
	0x02DDF198 LDR X10, [X8 + 0xB0]
	0x02DDF19C ADD X10, X10, 0x8
	0x02DDF1A0 LDUR X11, [X10 - 0x8]
	0x02DDF1A4 CMP X11, X1
	0x02DDF1A8 B.EQ 0x2DDF1C8
	0x02DDF1AC SUBS X9, X9, 0x1
	0x02DDF1B0 ADD X10, X10, 0x10
	0x02DDF1B4 B.NE 0x2DDF1A0
	0x02DDF1B8 MOV X0, X20
	0x02DDF1BC MOV W2, W31
	0x02DDF1C0 BL 0x1C5C788
	0x02DDF1C4 B 0x2DDF1D4
	0x02DDF1C8 LDRSW X9, [X10]
	0x02DDF1CC ADD X8, X8, X9, 0x4, LSL
	0x02DDF1D0 ADD X0, X8, 0x138
	0x02DDF1D4 LDP X8, X1, [X0]
	0x02DDF1D8 MOV X0, X20
	0x02DDF1DC BLR X8
	0x02DDF1E0 CBNZ X22, 0x2DDF1EC
	0x02DDF1E4 MOV X0, X23
	0x02DDF1E8 BL 0x1D2C690
	0x02DDF1EC MOV X0, X22
	0x02DDF1F0 BL 0x1C16F18
	0x02DDF1F4 BL 0x1990590
	0x02DDF1F8 SUB X31, X31, 0x30
	0x02DDF1FC STP X30, X31, [X31 + 0x10]
	0x02DDF200 STP X20, X19, [X31 + 0x20]
	0x02DDF204 LDR X8, [X0 + 0x28]
	0x02DDF208 CBZ X8, 0x2DDF268
	0x02DDF20C MOV X20, X3
	0x02DDF210 LDR X9, [X8 + 0x18]
	0x02DDF214 LDR X0, [X8 + 0x40]
	0x02DDF218 LDR X3, [X8 + 0x28]
	0x02DDF21C MOV X19, X2
	0x02DDF220 ADD X2, X31, 0x18
	0x02DDF224 BLR X9
	0x02DDF228 LDR X8, [X31 + 0x18]
	0x02DDF22C ADD X1, X31, 0x8
	0x02DDF230 STR X8, [X31 + 0x8]
	0x02DDF234 LDR X8, [X20 + 0x20]
	0x02DDF238 MOV W20, W0
	0x02DDF23C LDR X8, [X8 + 0xC0]
	0x02DDF240 LDR X8, [X8 + 0x78]
	0x02DDF244 MOV X0, X8
	0x02DDF248 BL 0x1C16E04
	0x02DDF24C AND W8, W20, 0x1
	0x02DDF250 STR X0, [X19]
	0x02DDF254 LDP X20, X19, [X31 + 0x20]
	0x02DDF258 LDR X30, [X31 + 0x10]
	0x02DDF25C MOV W0, W8
	0x02DDF260 ADD X31, X31, 0x30
	0x02DDF264 RET
	0x02DDF268 BL 0x1C16F20
	0x02DDF26C STR X30, [X31 - 0x20]!
	0x02DDF270 STP X20, X19, [X31 + 0x10]
	0x02DDF274 MOV X19, X2
	0x02DDF278 MOV W2, W3
	0x02DDF27C MOV X3, X31
	0x02DDF280 MOV X20, X0
	0x02DDF284 BL 0x3601008
	0x02DDF288 STR X19, [X20 + 0x28]
	0x02DDF28C LDP X20, X19, [X31 + 0x10]
	0x02DDF290 LDR X30, [X31], #0x20
	0x02DDF294 RET
	0x02DDF298 STR X30, [X31 - 0x30]!
	0x02DDF29C STP X22, X21, [X31 + 0x10]
	0x02DDF2A0 STP X20, X19, [X31 + 0x20]
	0x02DDF2A4 LDR X8, [X3 + 0x20]
	0x02DDF2A8 MOV X19, X3
	0x02DDF2AC MOV X21, X2
	0x02DDF2B0 MOV X20, X1
	0x02DDF2B4 LDR X8, [X8 + 0xC0]
	0x02DDF2B8 LDR X8, [X8 + 0x10]
	0x02DDF2BC LDRB W9, [X8 + 0x135]
	0x02DDF2C0 TBNZ X9, 0x0, 0x2DDF2D0
	0x02DDF2C4 MOV X0, X8
	0x02DDF2C8 BL 0x1C5C684
	0x02DDF2CC MOV X8, X0
	0x02DDF2D0 CBZ X20, 0x2DDF2E0
	0x02DDF2D4 LDR X9, [X20]
	0x02DDF2D8 CMP X9, X8
	0x02DDF2DC B.NE 0x2DDF3B8
	0x02DDF2E0 LDR X8, [X19 + 0x20]
	0x02DDF2E4 LDR X8, [X8 + 0xC0]
	0x02DDF2E8 LDR X0, [X8 + 0x18]
	0x02DDF2EC LDRB W8, [X0 + 0x135]
	0x02DDF2F0 TBNZ X8, 0x0, 0x2DDF2F8
	0x02DDF2F4 BL 0x1C5C684
	0x02DDF2F8 CBZ X21, 0x2DDF310
	0x02DDF2FC LDR X8, [X21]
	0x02DDF300 LDRB W9, [X0 + 0x130]
	0x02DDF304 LDRB W10, [X8 + 0x130]
	0x02DDF308 CMP W10, W9
	0x02DDF30C B.CS 0x2DDF378
	0x02DDF310 MOV X1, X31
	0x02DDF314 CBZ X20, 0x2DDF390
	0x02DDF318 LDR X8, [X19 + 0x20]
	0x02DDF31C LDR X8, [X8 + 0xC0]
	0x02DDF320 CBZ X1, 0x2DDF33C
	0x02DDF324 LDR X2, [X8 + 0x20]
	0x02DDF328 MOV X0, X20
	0x02DDF32C LDP X20, X19, [X31 + 0x20]
	0x02DDF330 LDP X22, X21, [X31 + 0x10]
	0x02DDF334 LDR X30, [X31], #0x30
	0x02DDF338 B 0x2DE06B8
	0x02DDF33C LDR X22, [X8 + 0x28]
	0x02DDF340 LDRB W8, [X22 + 0x135]
	0x02DDF344 TBNZ X8, 0x0, 0x2DDF354
	0x02DDF348 MOV X0, X22
	0x02DDF34C BL 0x1C5C684
	0x02DDF350 MOV X22, X0
	0x02DDF354 CBZ X21, 0x2DDF394
	0x02DDF358 MOV X0, X21
	0x02DDF35C MOV X1, X22
	0x02DDF360 BL 0x1C16E00
	0x02DDF364 MOV X1, X0
	0x02DDF368 CBNZ X0, 0x2DDF398
	0x02DDF36C MOV X0, X21
	0x02DDF370 MOV X1, X22
	0x02DDF374 BL 0x1C171E0
	0x02DDF378 LDR X8, [X8 + 0xC8]
	0x02DDF37C ADD X8, X8, X9, 0x3, LSL
	0x02DDF380 LDUR X8, [X8 - 0x8]
	0x02DDF384 CMP X8, X0
	0x02DDF388 CSEL X1, X21, X31, EQ
	0x02DDF38C CBNZ X20, 0x2DDF318
	0x02DDF390 BL 0x1C16F20
	0x02DDF394 MOV X1, X31
	0x02DDF398 LDR X8, [X19 + 0x20]
	0x02DDF39C MOV X0, X20
	0x02DDF3A0 LDP X20, X19, [X31 + 0x20]
	0x02DDF3A4 LDP X22, X21, [X31 + 0x10]
	0x02DDF3A8 LDR X8, [X8 + 0xC0]
	0x02DDF3AC LDR X2, [X8 + 0x30]
	0x02DDF3B0 LDR X30, [X31], #0x30
	0x02DDF3B4 B 0x2DE064C
	0x02DDF3B8 MOV X0, X20
	0x02DDF3BC MOV X1, X8
	0x02DDF3C0 BL 0x1C171E0
	0x02DDF3C4 STP X30, X21, [X31 - 0x20]!
	0x02DDF3C8 STP X20, X19, [X31 + 0x10]
	0x02DDF3CC LDR X8, [X3 + 0x20]
	0x02DDF3D0 MOV X20, X3
	0x02DDF3D4 MOV X19, X2
	0x02DDF3D8 MOV X21, X1
	0x02DDF3DC LDR X8, [X8 + 0xC0]
	0x02DDF3E0 LDR X0, [X8 + 0x10]
	0x02DDF3E4 LDRB W8, [X0 + 0x135]
	0x02DDF3E8 TBNZ X8, 0x0, 0x2DDF3F0
	0x02DDF3EC BL 0x1C5C684
	0x02DDF3F0 BL 0x1C16F10
	0x02DDF3F4 LDR X8, [X20 + 0x20]
	0x02DDF3F8 MOV X1, X21
	0x02DDF3FC MOV X2, X19
	0x02DDF400 MOV X20, X0
	0x02DDF404 LDR X8, [X8 + 0xC0]
	0x02DDF408 LDR X3, [X8 + 0x38]
	0x02DDF40C BL 0x2DE05B4
	0x02DDF410 MOV X0, X20
	0x02DDF414 LDP X20, X19, [X31 + 0x10]
	0x02DDF418 LDP X30, X21, [X31], #0x20
	0x02DDF41C RET
	0x02DDF420 STR X30, [X31 - 0x40]!
	0x02DDF424 STP X24, X23, [X31 + 0x10]
	0x02DDF428 STP X22, X21, [X31 + 0x20]
	0x02DDF42C STP X20, X19, [X31 + 0x30]
	0x02DDF430 ADRP X20, 0x15FC000
	0x02DDF434 LDRB W8, [X20 + 0x9B3]
	0x02DDF438 MOV X22, X2
	0x02DDF43C MOV X19, X1
	0x02DDF440 TBNZ X8, 0x0, 0x2DDF4A0
	0x02DDF444 ADRP X0, 0x1314000
	0x02DDF448 LDR X0, [X0 + 0xE00]
	0x02DDF44C BL 0x1C16CF4
	0x02DDF450 ADRP X0, 0x1314000
	0x02DDF454 LDR X0, [X0 + 0xE18]
	0x02DDF458 BL 0x1C16CF4
	0x02DDF45C ADRP X0, 0x133F000
	0x02DDF460 LDR X0, [X0 + 0xF30]
	0x02DDF464 BL 0x1C16CF4
	0x02DDF468 ADRP X0, 0x1315000
	0x02DDF46C LDR X0, [X0 + 0x1B8]
	0x02DDF470 BL 0x1C16CF4
	0x02DDF474 ADRP X0, 0x131C000
	0x02DDF478 LDR X0, [X0 + 0xDD8]
	0x02DDF47C BL 0x1C16CF4
	0x02DDF480 ADRP X0, 0x1315000
	0x02DDF484 LDR X0, [X0 + 0x1C0]
	0x02DDF488 BL 0x1C16CF4
	0x02DDF48C ADRP X0, 0x1315000
	0x02DDF490 LDR X0, [X0 + 0x1D0]
	0x02DDF494 BL 0x1C16CF4
	0x02DDF498 MOVZ W8, 0x1
	0x02DDF49C STRB W8, [X20 + 0x9B3]
	0x02DDF4A0 CBZ X19, 0x2DDF6F4
	0x02DDF4A4 LDR X8, [X22 + 0x20]
	0x02DDF4A8 LDR X8, [X8 + 0xC0]
	0x02DDF4AC LDR X1, [X8 + 0x10]
	0x02DDF4B0 LDRB W8, [X1 + 0x135]
	0x02DDF4B4 TBNZ X8, 0x0, 0x2DDF4C4
	0x02DDF4B8 MOV X0, X1
	0x02DDF4BC BL 0x1C5C684
	0x02DDF4C0 MOV X1, X0
	0x02DDF4C4 LDR X8, [X19]
	0x02DDF4C8 CMP X8, X1
	0x02DDF4CC B.NE 0x2DDF76C
	0x02DDF4D0 LDR X8, [X19 + 0x10]
	0x02DDF4D4 CBZ X8, 0x2DDF768
	0x02DDF4D8 LDR W8, [X8 + 0x18]
	0x02DDF4DC CBZ W8, 0x2DDF6C0
	0x02DDF4E0 ADRP X8, 0x1315000
	0x02DDF4E4 LDR X8, [X8 + 0x1D0]
	0x02DDF4E8 LDR X0, [X8]
	0x02DDF4EC BL 0x1C16F10
	0x02DDF4F0 ADRP X8, 0x1315000
	0x02DDF4F4 LDR X8, [X8 + 0x1C0]
	0x02DDF4F8 MOV X21, X0
	0x02DDF4FC LDR X1, [X8]
	0x02DDF500 BL 0x301B7C4
	0x02DDF504 LDR X8, [X22 + 0x20]
	0x02DDF508 MOV X0, X19
	0x02DDF50C LDR X8, [X8 + 0xC0]
	0x02DDF510 LDR X1, [X8 + 0x50]
	0x02DDF514 BL 0x2DE0908
	0x02DDF518 MOV X20, X0
	0x02DDF51C CBZ X0, 0x2DDF774
	0x02DDF520 ADRP X23, 0x1314000
	0x02DDF524 ADRP X24, 0x1315000
	0x02DDF528 LDR X23, [X23 + 0xE18]
	0x02DDF52C LDR X24, [X24 + 0x1B8]
	0x02DDF530 LDR X8, [X20]
	0x02DDF534 LDR X1, [X23]
	0x02DDF538 LDRH W9, [X8 + 0x12E]
	0x02DDF53C CBZ X9, 0x2DDF560
	0x02DDF540 LDR X10, [X8 + 0xB0]
	0x02DDF544 ADD X10, X10, 0x8
	0x02DDF548 LDUR X11, [X10 - 0x8]
	0x02DDF54C CMP X11, X1
	0x02DDF550 B.EQ 0x2DDF570
	0x02DDF554 SUBS X9, X9, 0x1
	0x02DDF558 ADD X10, X10, 0x10
	0x02DDF55C B.NE 0x2DDF548

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x15FD000
	009 Move W8, [X20+2480]
	010 Move X22, X2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x1315000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x1315000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0x1340000
	023 Move X0, [X0+3888]
	024 Call 0x1C17CF4
	025 Move X0, 0x1316000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move X0, 0x131D000
	029 Move X0, [X0+3544]
	030 Call 0x1C17CF4
	031 Move X0, 0x1316000
	032 Move X0, [X0+448]
	033 Call 0x1C17CF4
	034 Move X0, 0x1316000
	035 Move X0, [X0+464]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2480], W8
	039 Compare X19, 0
	040 JumpIfEqual {198}
	041 Move X8, [X22+32]
	042 Move X8, [X8+192]
	043 Move X1, [X8+16]
	044 Move W8, [X1+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X1
	050 Call 0x1C5D684
	051 Move X1, X0
	052 Move X8, [X19]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X19+16]
	055 Compare X8, 0
	056 JumpIfEqual {233}
	057 Move W8, [X8+24]
	058 Compare W8, 0
	059 JumpIfEqual {185}
	060 Move X8, 0x1316000
	061 Move X8, [X8+464]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, 0x1316000
	065 Move X8, [X8+448]
	066 Move X21, X0
	067 Move X1, [X8]
	068 Call List`1<Object>..ctor, X0
	069 Move X8, [X22+32]
	070 Move X0, X19
	071 Move X8, [X8+192]
	072 Move X1, [X8+80]
	073 Call 0x2DE1908, X0
	074 Move X20, X0
	075 Compare X0, 0
	076 JumpIfEqual {236}
	077 Move X23, 0x1315000
	078 Move X24, 0x1316000
	079 Move X23, [X23+3608]
	080 Move X24, [X24+440]
	081 Move X8, [X20]
	082 Move X1, [X23]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X20
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X20
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {165}
	106 Move X8, [X22+32]
	107 Move X8, [X8+192]
	108 Move X1, [X8+88]
	109 Move W8, [X1+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X1
	115 Call 0x1C5D684
	116 Move X1, X0
	117 Move X8, [X20]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X20
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X0, 0
	138 JumpIfEqual {231}
	139 Move X8, [X0]
	140 Move X9, [X8+360]
	141 Move X1, [X8+368]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X1, X0
	144 Compare X21, 0
	145 JumpIfEqual {232}
	146 Move W10, [X21+28]
	147 Move X8, [X21+16]
	148 Move X9, [X24]
	149 Add W10, W10, 1
	150 Move [X21+28], W10
	151 Compare X8, 0
	152 JumpIfEqual {230}
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Move W11, [X8+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W9, W10, 1
	157 Add X8, X8, X10
	158 Move [X21+24], W9
	159 Move [X8+32], X1
	160 Move X8, [X9+32]
	161 Move X8, [X8+192]
	162 Move X2, [X8+112]
	163 Move X0, X21
	164 Call List`1<Object>.AddWithResize, X0, X1
	165 Move X22, X31
	166 Move W23, 7
	167 Compare X20, 0
	168 JumpIfEqual {206}
	169 Move X10, 0x1315000
	170 Move X8, [X20]
	171 Move X10, [X10+3584]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X20
	183 Move W2, W31
	184 Call 0x1C5D788
	185 Move X19, [X19+40]
	186 Compare X19, 0
	187 JumpIfEqual {198}
	188 Move X8, 0x1316000
	189 Move X8, [X8+464]
	190 Move X0, [X8]
	191 Call 0x1C17F10
	192 Move X8, 0x131D000
	193 Move X8, [X8+3544]
	194 Move X1, X19
	195 Move X21, X0
	196 Move X2, [X8]
	197 Call List`1<Object>..ctor, X0, X1
	198 Move X21, X31
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Compare X22, 0
	207 JumpIfNotEqual {237}
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Compare W23, 0
	210 JumpIfNotEqual {221}
	211 Move X1, [X19+40]
	212 Compare X1, 0
	213 JumpIfEqual {221}
	214 Compare X21, 0
	215 JumpIfEqual {233}
	216 Move X8, 0x1340000
	217 Move X8, [X8+3888]
	218 Move X0, X21
	219 Move X2, [X8]
	220 Call List`1<Object>.AddRange, X0, X1
	221 Move X0, X21
	222 Move X20, [X31+48]
	223 Move X19, [X31+56]
	224 Move X22, [X31+32]
	225 Move X21, [X31+40]
	226 Move X24, [X31+16]
	227 Move X23, [X31+24]
	228 Move X30, [X31+64]
	229 Return X0
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X0, X19
	235 Call 0x1C181E0
	236 Call 0x1C17F20
	237 Move X0, X22
	238 Call 0x1C17F18
	239 Move X23, X0
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X23
	242 Call 0x3EB2AD0
	243 Move X22, [X0]
	244 Call 0x3EB2AE0
	245 Move W23, W31
	246 Compare X20, 0
	247 JumpIfNotEqual {169}
	248 Move X22, X31
	249 Move X23, X0
	250 Compare X20, 0
	251 JumpIfEqual {275}
	252 Move X10, 0x1315000
	253 Move X8, [X20]
	254 Move X10, [X10+3584]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Move X1, [X10]
	257 Compare X9, 0
	258 JumpIfEqual {265}
	259 Move X10, [X8+176]
	260 Add X10, X10, 8
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Subtract X9, X9, 1
	264 Add X10, X10, 16
	265 Move X0, X20
	266 Move W2, W31
	267 Call 0x1C5D788
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Add X8, X8, X9
	270 Add X0, X8, 312
	271 Move X8, [X0]
	272 Move X1, [X0+8]
	273 Move X0, X20
	274 NotImplemented "Instruction BLR not yet implemented."
	275 Compare X22, 0
	276 JumpIfNotEqual {279}
	277 Move X0, X23
	278 Call 0x1D2D690
	279 Move X0, X22
	280 Call 0x1C17F18
	281 Call 0x1991590

Method: System.Boolean TryParse(System.String value, out System.Object result)

Disassembly:
	0x02DDF560 MOV X0, X20
	0x02DDF564 MOV W2, W31
	0x02DDF568 BL 0x1C5C788
	0x02DDF56C B 0x2DDF57C
	0x02DDF570 LDRSW X9, [X10]
	0x02DDF574 ADD X8, X8, X9, 0x4, LSL
	0x02DDF578 ADD X0, X8, 0x138
	0x02DDF57C LDP X8, X1, [X0]
	0x02DDF580 MOV X0, X20
	0x02DDF584 BLR X8
	0x02DDF588 TBZ X0, 0x0, 0x2DDF66C
	0x02DDF58C LDR X8, [X22 + 0x20]
	0x02DDF590 LDR X8, [X8 + 0xC0]
	0x02DDF594 LDR X1, [X8 + 0x58]
	0x02DDF598 LDRB W8, [X1 + 0x135]
	0x02DDF59C TBNZ X8, 0x0, 0x2DDF5AC
	0x02DDF5A0 MOV X0, X1
	0x02DDF5A4 BL 0x1C5C684
	0x02DDF5A8 MOV X1, X0
	0x02DDF5AC LDR X8, [X20]
	0x02DDF5B0 LDRH W9, [X8 + 0x12E]
	0x02DDF5B4 CBZ X9, 0x2DDF5D8
	0x02DDF5B8 LDR X10, [X8 + 0xB0]
	0x02DDF5BC ADD X10, X10, 0x8
	0x02DDF5C0 LDUR X11, [X10 - 0x8]
	0x02DDF5C4 CMP X11, X1
	0x02DDF5C8 B.EQ 0x2DDF5E8
	0x02DDF5CC SUBS X9, X9, 0x1
	0x02DDF5D0 ADD X10, X10, 0x10
	0x02DDF5D4 B.NE 0x2DDF5C0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+16], X31
	007 Move X8, [X0+40]
	008 Compare X8, 0
	009 JumpIfEqual {34}
	010 Move X20, X3
	011 Move X9, [X8+24]
	012 Move X0, [X8+64]
	013 Move X3, [X8+40]
	014 Move X19, X2
	015 Add X2, X31, 16
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move V0, [X31+1]
	018 Add X1, X31, 0
	019 Move [X31], V0
	020 Move X8, [X20+32]
	021 Move W20, W0
	022 Move X8, [X8+192]
	023 Move X8, [X8+120]
	024 Move X0, X8
	025 Call 0x1C17E04
	026 And W8, W20, 1
	027 Move [X19], X0
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X30, [X31+32]
	031 Move W0, W8
	032 Add X31, X31, 64
	033 Return X0
	034 Call 0x1C17F20

