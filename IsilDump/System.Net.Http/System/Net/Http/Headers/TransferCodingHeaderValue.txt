Type: System.Net.Http.Headers.TransferCodingHeaderValue

Method: System.Void .ctor(System.Net.Http.Headers.TransferCodingHeaderValue source)

Disassembly:
	0x0360AE44 LDRB W8, [X19 + 0x20]
	0x0360AE48 LDRB W9, [X21 + 0x20]
	0x0360AE4C CMP W8, 0x0
	0x0360AE50 CSET W10, NE
	0x0360AE54 CMP W9, 0x0
	0x0360AE58 CSET W9, NE
	0x0360AE5C EOR W9, W9, W10, 0x0
	0x0360AE60 EOR W0, W9, 0x1
	0x0360AE64 TBNZ X9, 0x0, 0x360AEB4
	0x0360AE68 CBZ W8, 0x360AEB4
	0x0360AE6C ADRP X8, 0xAEB000
	0x0360AE70 LDR X8, [X8 + 0xA58]
	0x0360AE74 LDP X21, X20, [X21 + 0x28]
	0x0360AE78 LDP X19, X22, [X19 + 0x28]
	0x0360AE7C LDR X0, [X8]
	0x0360AE80 LDR W8, [X0 + 0xE0]
	0x0360AE84 CBNZ W8, 0x360AE8C
	0x0360AE88 BL 0x1C16DFC
	0x0360AE8C MOV X0, X19
	0x0360AE90 MOV X1, X22
	0x0360AE94 MOV X2, X21
	0x0360AE98 MOV X3, X20
	0x0360AE9C LDP X20, X19, [X31 + 0x20]
	0x0360AEA0 LDP X22, X21, [X31 + 0x10]
	0x0360AEA4 MOV X4, X31
	0x0360AEA8 LDR X30, [X31], #0x30
	0x0360AEAC B 0x3365C58
	0x0360AEB0 MOV W0, W31
	0x0360AEB4 LDP X20, X19, [X31 + 0x20]
	0x0360AEB8 LDP X22, X21, [X31 + 0x10]
	0x0360AEBC LDR X30, [X31], #0x30
	0x0360AEC0 RET
	0x0360AEC4 BL 0x1C16F20
	0x0360AEC8 SUB X31, X31, 0x50
	0x0360AECC STP X30, X23, [X31 + 0x20]
	0x0360AED0 STP X22, X21, [X31 + 0x30]
	0x0360AED4 STP X20, X19, [X31 + 0x40]
	0x0360AED8 ADRP X20, 0xDD6000
	0x0360AEDC LDRB W8, [X20 + 0x3F0]
	0x0360AEE0 MOV X19, X0
	0x0360AEE4 TBNZ X8, 0x0, 0x360AEFC
	0x0360AEE8 ADRP X0, 0xB30000
	0x0360AEEC LDR X0, [X0 + 0xD20]
	0x0360AEF0 BL 0x1C16CF4
	0x0360AEF4 MOVZ W8, 0x1
	0x0360AEF8 STRB W8, [X20 + 0x3F0]
	0x0360AEFC STP X31, X31, [X31]
	0x0360AF00 STR X31, [X31 + 0x10]
	0x0360AF04 LDR W8, [X19 + 0x18]
	0x0360AF08 ADD X0, X31, 0x1C
	0x0360AF0C MOV X1, X31
	0x0360AF10 STR W8, [X31 + 0x1C]
	0x0360AF14 BL 0x337B6D8
	0x0360AF18 LDR X8, [X19 + 0x10]
	0x0360AF1C CBZ X8, 0x360AFA4
	0x0360AF20 MOV W20, W0
	0x0360AF24 MOV X0, X8
	0x0360AF28 MOV X1, X31
	0x0360AF2C BL 0x322B6E4
	0x0360AF30 CBZ X0, 0x360AFA4
	0x0360AF34 LDR X8, [X0]
	0x0360AF38 LDP X9, X1, [X8 + 0x158]
	0x0360AF3C BLR X9
	0x0360AF40 LDR X8, [X19 + 0x38]
	0x0360AF44 CBZ X8, 0x360AFA4
	0x0360AF48 LDR X9, [X8]
	0x0360AF4C ADRP X23, 0xB30000
	0x0360AF50 MOV W21, W0
	0x0360AF54 MOV X0, X8
	0x0360AF58 LDP X10, X1, [X9 + 0x158]
	0x0360AF5C LDR X23, [X23 + 0xD20]
	0x0360AF60 BLR X10
	0x0360AF64 LDR V0, [X19 + 0x2]
	0x0360AF68 LDR X8, [X19 + 0x30]
	0x0360AF6C LDR X1, [X23]
	0x0360AF70 MOV W22, W0
	0x0360AF74 ADD X0, X31, 0x0
	0x0360AF78 STR V0, [X31]
	0x0360AF7C STR X8, [X31 + 0x10]
	0x0360AF80 BL 0x2430F60
	0x0360AF84 EOR W8, W21, W20, 0x0
	0x0360AF88 EOR W8, W8, W22, 0x0
	0x0360AF8C LDP X20, X19, [X31 + 0x40]
	0x0360AF90 LDP X22, X21, [X31 + 0x30]
	0x0360AF94 LDP X30, X23, [X31 + 0x20]
	0x0360AF98 EOR W0, W8, W0, 0x0
	0x0360AF9C ADD X31, X31, 0x50
	0x0360AFA0 RET
	0x0360AFA4 BL 0x1C16F20
	0x0360AFA8 STP X30, X25, [X31 - 0x40]!
	0x0360AFAC STP X24, X23, [X31 + 0x10]
	0x0360AFB0 STP X22, X21, [X31 + 0x20]
	0x0360AFB4 STP X20, X19, [X31 + 0x30]
	0x0360AFB8 ADRP X24, 0xDD6000
	0x0360AFBC ADRP X25, 0xB30000
	0x0360AFC0 ADRP X22, 0xB30000
	0x0360AFC4 ADRP X23, 0xB30000
	0x0360AFC8 LDRB W8, [X24 + 0x3F1]
	0x0360AFCC LDR X25, [X25 + 0xE50]
	0x0360AFD0 LDR X22, [X22 + 0xE58]
	0x0360AFD4 LDR X23, [X23 + 0xE60]
	0x0360AFD8 MOV X19, X2
	0x0360AFDC MOV W20, W1
	0x0360AFE0 MOV X21, X0
	0x0360AFE4 TBNZ X8, 0x0, 0x360B014
	0x0360AFE8 ADRP X0, 0xB30000
	0x0360AFEC LDR X0, [X0 + 0xE60]
	0x0360AFF0 BL 0x1C16CF4
	0x0360AFF4 ADRP X0, 0xB30000
	0x0360AFF8 LDR X0, [X0 + 0xE50]
	0x0360AFFC BL 0x1C16CF4
	0x0360B000 ADRP X0, 0xB2F000
	0x0360B004 LDR X0, [X0 + 0xE58]
	0x0360B008 BL 0x1C16CF4
	0x0360B00C MOVZ W8, 0x1
	0x0360B010 STRB W8, [X24 + 0x3F1]
	0x0360B014 LDR X0, [X25]
	0x0360B018 BL 0x1C16F10
	0x0360B01C LDR X2, [X22]
	0x0360B020 MOV X1, X31
	0x0360B024 MOV X3, X31
	0x0360B028 MOV X22, X0
	0x0360B02C BL 0x2B47CB4
	0x0360B030 LDR X4, [X23]
	0x0360B034 MOV X0, X21
	0x0360B038 MOV W1, W20
	0x0360B03C MOV X2, X22
	0x0360B040 MOV X3, X19
	0x0360B044 LDP X20, X19, [X31 + 0x30]
	0x0360B048 LDP X22, X21, [X31 + 0x20]
	0x0360B04C LDP X24, X23, [X31 + 0x10]
	0x0360B050 LDP X30, X25, [X31], #0x40
	0x0360B054 B 0x21A2910
	0x0360B058 SUB X31, X31, 0x70
	0x0360B05C STP X30, X25, [X31 + 0x30]
	0x0360B060 STP X24, X23, [X31 + 0x40]
	0x0360B064 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0xDD7000
	012 Move W8, [X21+993]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB31000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move X0, 0xB31000
	023 Move X0, [X0+1392]
	024 Call 0x1C17CF4
	025 Move X0, 0xB31000
	026 Move X0, [X0+1400]
	027 Call 0x1C17CF4
	028 Move X0, 0xB31000
	029 Move X0, [X0+1472]
	030 Call 0x1C17CF4
	031 Move X0, 0xB31000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move X0, 0xB31000
	035 Move X0, [X0+1576]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+993], W8
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Call Object..ctor, X0
	045 Compare X20, 0
	046 JumpIfEqual {125}
	047 Move X8, [X20+16]
	048 Move [X19+16], X8
	049 Move X0, [X20+24]
	050 Compare X0, 0
	051 JumpIfEqual {113}
	052 Move X8, 0xB31000
	053 Move X8, [X8+1416]
	054 Move X24, 0xB31000
	055 Move X24, [X24+1392]
	056 Move X25, 0xB31000
	057 Move X1, [X8]
	058 Move X26, 0xB31000
	059 Move X23, 0xB31000
	060 Move X25, [X25+1576]
	061 Move X26, [X26+1472]
	062 Move X23, [X23+1384]
	063 Add X8, X31, 8
	064 Call List`1<Object>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+24]
	067 Move [X31+2], V0
	068 Move [X31+48], X8
	069 Move X1, [X24]
	070 Add X0, X31, 32
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {110}
	076 Move X22, [X31+48]
	077 Move X0, X19
	078 Call TransferCodingHeaderValue.get_Parameters, X0
	079 Move X20, X0
	080 Move X0, [X25]
	081 Call 0x1C17F10
	082 Move X21, X0
	083 Move X1, X22
	084 Call NameValueHeaderValue..ctor, X0, X1
	085 Compare X20, 0
	086 JumpIfEqual {124}
	087 Move X8, [X20]
	088 Move X1, [X26]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 2
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 2
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move X1, X21
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X1, [X23]
	111 Add X0, X31, 32
	112 Call Enumerator<Object>.Dispose, X0
	113 Move X20, [X31+128]
	114 Move X19, [X31+136]
	115 Move X22, [X31+112]
	116 Move X21, [X31+120]
	117 Move X24, [X31+96]
	118 Move X23, [X31+104]
	119 Move X26, [X31+80]
	120 Move X25, [X31+88]
	121 Move X30, [X31+64]
	122 Add X31, X31, 144
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Move X19, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X23]
	133 Add X0, X31, 32
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {113}
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X20, X31
	140 Move X19, X0
	141 Move X1, [X23]
	142 Add X0, X31, 32
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x0360B0E0 LDR X0, [X25]
	0x0360B0E4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Collections.Generic.ICollection`1<System.Net.Http.Headers.NameValueHeaderValue> get_Parameters()

Disassembly:
	0x0360B068 STP X20, X19, [X31 + 0x60]
	0x0360B06C ADRP X22, 0xDD5000
	0x0360B070 LDRB W8, [X22 + 0x3F2]
	0x0360B074 MOV X20, X2
	0x0360B078 MOV X19, X1
	0x0360B07C MOV X21, X0
	0x0360B080 TBNZ X8, 0x0, 0x360B0B0
	0x0360B084 ADRP X0, 0xB2F000
	0x0360B088 LDR X0, [X0 + 0xCF0]
	0x0360B08C BL 0x1C16CF4
	0x0360B090 ADRP X0, 0xB10000
	0x0360B094 LDR X0, [X0 + 0x8D0]
	0x0360B098 BL 0x1C16CF4
	0x0360B09C ADRP X0, 0xB2F000
	0x0360B0A0 LDR X0, [X0 + 0xE48]
	0x0360B0A4 BL 0x1C16CF4
	0x0360B0A8 MOVZ W8, 0x1
	0x0360B0AC STRB W8, [X22 + 0x3F2]
	0x0360B0B0 STR W31, [X31 + 0x2C]
	0x0360B0B4 STP X31, X31, [X31 + 0x18]
	0x0360B0B8 STR X31, [X19]
	0x0360B0BC CBZ X21, 0x360B2E0
	0x0360B0C0 ADRP X25, 0xB10000
	0x0360B0C4 LDR X25, [X25 + 0x8D0]
	0x0360B0C8 MOV X0, X21
	0x0360B0CC MOV W1, W31
	0x0360B0D0 BL 0x35FCF70
	0x0360B0D4 STR X0, [X20]
	0x0360B0D8 STR W1, [X20 + 0x8]
	0x0360B0DC MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDD6000
	005 Move W8, [X20+994]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB30000
	012 Move X0, [X0+1360]
	013 Call 0x1C17CF4
	014 Move X0, 0xB30000
	015 Move X0, [X0+1368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+994], W8
	019 Move X20, [X19+24]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xB30000
	023 Move X8, [X8+1368]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xB30000
	027 Move X8, [X8+1360]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+24], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.String get_Value()

Disassembly:
	0x0360B0E8 CBNZ W8, 0x360B0F0
	0x0360B0EC BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Object System.ICloneable.Clone()

Disassembly:
	0x0360B0F0 CMP W22, 0x2
	0x0360B0F4 B.NE 0x360B2C4
	0x0360B0F8 LDR X1, [X20]
	0x0360B0FC LDR W2, [X20 + 0x8]
	0x0360B100 ADD X3, X31, 0x2C
	0x0360B104 MOV X0, X21
	0x0360B108 BL 0x3604A00
	0x0360B10C MOV W8, W0
	0x0360B110 MOV W0, W31
	0x0360B114 TBZ X8, 0x0, 0x360B2C8
	0x0360B118 LDR W8, [X31 + 0x2C]
	0x0360B11C CMP W8, 0x3E7
	0x0360B120 B.HI 0x360B2C8
	0x0360B124 MOV X0, X21
	0x0360B128 MOV W1, W31
	0x0360B12C BL 0x35FCF70
	0x0360B130 STR X0, [X20]
	0x0360B134 STR W1, [X20 + 0x8]
	0x0360B138 MOV X22, X0
	0x0360B13C LDR X0, [X25]
	0x0360B140 LDR W8, [X0 + 0xE0]
	0x0360B144 CBNZ W8, 0x360B14C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDD6000
	006 Move X21, 0xB30000
	007 Move W8, [X20+995]
	008 Move X21, [X21+3560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB30000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+995], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call TransferCodingHeaderValue..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0360B148 BL 0x1C16DFC
	0x0360B14C CMP W22, 0x2
	0x0360B150 B.NE 0x360B2C4
	0x0360B154 LDR X23, [X20]
	0x0360B158 LDR W24, [X20 + 0x8]
	0x0360B15C MOV X0, X21
	0x0360B160 BL 0x3600E24
	0x0360B164 CMP W0, 0x3A
	0x0360B168 B.NE 0x360B1A4
	0x0360B16C LDR W8, [X21 + 0x18]
	0x0360B170 MOV X0, X21
	0x0360B174 MOV W1, W31
	0x0360B178 ADD W8, W8, 0x1
	0x0360B17C STR W8, [X21 + 0x18]
	0x0360B180 BL 0x35FCF70
	0x0360B184 MOV X23, X0
	0x0360B188 LDR X0, [X25]
	0x0360B18C MOV X24, X1
	0x0360B190 LDR W8, [X0 + 0xE0]
	0x0360B194 CBNZ W8, 0x360B19C
	0x0360B198 BL 0x1C16DFC
	0x0360B19C CMP W23, 0x2
	0x0360B1A0 B.NE 0x360B2C4
	0x0360B1A4 ADRP X8, 0xB2F000
	0x0360B1A8 LDR X8, [X8 + 0xE48]
	0x0360B1AC LDR X0, [X8]
	0x0360B1B0 BL 0x1C16F10
	0x0360B1B4 MOV X1, X31
	0x0360B1B8 MOV X22, X0
	0x0360B1BC BL 0x33BDD8C
	0x0360B1C0 CBZ X22, 0x360B2E0
	0x0360B1C4 LDR W8, [X31 + 0x2C]
	0x0360B1C8 MOV W4, W24
	0x0360B1CC MOV X0, X21
	0x0360B1D0 MOV X3, X23
	0x0360B1D4 STR W8, [X22 + 0x18]
	0x0360B1D8 LDR X1, [X20]
	0x0360B1DC LDR W2, [X20 + 0x8]
	0x0360B1E0 BL 0x3604984
	0x0360B1E4 STR X0, [X22 + 0x10]
	0x0360B1E8 MOV X0, X21
	0x0360B1EC MOV W1, W31
	0x0360B1F0 BL 0x35FCF70
	0x0360B1F4 STR X0, [X20]
	0x0360B1F8 STR W1, [X20 + 0x8]
	0x0360B1FC MOV X23, X0
	0x0360B200 LDR X0, [X25]
	0x0360B204 LDR W8, [X0 + 0xE0]
	0x0360B208 CBNZ W8, 0x360B210
	0x0360B20C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDD6000
	006 Move W8, [X21+996]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xB30000
	014 Move X0, [X0+1424]
	015 Call 0x1C17CF4
	016 Move X0, 0xB30000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+996], W8
	021 Compare X20, 0
	022 JumpIfEqual {57}
	023 Move X8, 0xB30000
	024 Move X8, [X8+3560]
	025 Move X9, [X20]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Compare X20, 0
	036 JumpIfEqual {63}
	037 Move X0, [X19+16]
	038 Move X1, [X20+16]
	039 Move W2, 5
	040 Move X3, X31
	041 Call String.Equals, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {57}
	046 Move X8, 0xB30000
	047 Move X0, [X19+24]
	048 Move X1, [X20+24]
	049 Move X8, [X8+1424]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X2, [X8]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call 0x21A2DF4, X0, X1
	056 Return X0
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W0, W31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x0360B210 CMP W23, 0x3
	0x0360B214 B.NE 0x360B2C4
	0x0360B218 LDR X1, [X20]
	0x0360B21C LDR W2, [X20 + 0x8]
	0x0360B220 MOV X0, X21
	0x0360B224 BL 0x35FD280
	0x0360B228 STR X0, [X22 + 0x38]
	0x0360B22C MOV X0, X21
	0x0360B230 MOV W1, W31
	0x0360B234 BL 0x35FCF70
	0x0360B238 STR X0, [X20]
	0x0360B23C STR W1, [X20 + 0x8]
	0x0360B240 MOV X23, X0
	0x0360B244 LDR X0, [X25]
	0x0360B248 LDR W8, [X0 + 0xE0]
	0x0360B24C CBNZ W8, 0x360B254
	0x0360B250 BL 0x1C16DFC
	0x0360B254 CMP W23, 0x3
	0x0360B258 B.NE 0x360B2B8
	0x0360B25C LDR X1, [X20]
	0x0360B260 LDR W2, [X20 + 0x8]
	0x0360B264 ADD X3, X31, 0x18
	0x0360B268 MOV X0, X21
	0x0360B26C BL 0x3604AA0
	0x0360B270 TBZ X0, 0x0, 0x360B2C4
	0x0360B274 ADRP X8, 0xB2F000
	0x0360B278 LDP X1, X2, [X31 + 0x18]
	0x0360B27C LDR X8, [X8 + 0xCF0]
	0x0360B280 ADD X0, X31, 0x0
	0x0360B284 STP X31, X31, [X31]
	0x0360B288 STR X31, [X31 + 0x10]
	0x0360B28C LDR X3, [X8]
	0x0360B290 BL 0x2430E40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDD6000
	005 Move W8, [X20+997]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xB30000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+997], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {42}
	019 Move X1, X31
	020 Call String.ToLowerInvariant, X0
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X8, [X0]
	024 Move X9, [X8+344]
	025 Move X1, [X8+352]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19+24]
	028 Move W19, W0
	029 Compare X8, 0
	030 JumpIfEqual {37}
	031 Move X9, 0xB30000
	032 Move X9, [X9+1448]
	033 Move X0, X8
	034 Move X1, [X9]
	035 Call 0x21EBCDC, X0
	036 Xor W19, W0, W19
	037 Move W0, W19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0
	042 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0360B294 LDR X8, [X31 + 0x10]
	0x0360B298 LDR V0, [X31]
	0x0360B29C MOV X0, X21
	0x0360B2A0 MOV W1, W31
	0x0360B2A4 STR X8, [X22 + 0x30]
	0x0360B2A8 STR V0, [X22 + 0x2]
	0x0360B2AC BL 0x35FCF70
	0x0360B2B0 STR X0, [X20]
	0x0360B2B4 STR W1, [X20 + 0x8]
	0x0360B2B8 MOVZ W0, 0x1
	0x0360B2BC STR X22, [X19]
	0x0360B2C0 B 0x360B2C8
	0x0360B2C4 MOV W0, W31
	0x0360B2C8 LDP X20, X19, [X31 + 0x60]
	0x0360B2CC LDP X22, X21, [X31 + 0x50]
	0x0360B2D0 LDP X24, X23, [X31 + 0x40]
	0x0360B2D4 LDP X30, X25, [X31 + 0x30]
	0x0360B2D8 ADD X31, X31, 0x70
	0x0360B2DC RET
	0x0360B2E0 BL 0x1C16F20
	0x0360B2E4 SUB X31, X31, 0x60
	0x0360B2E8 STP X30, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xDD6000
	006 Move X21, 0xB30000
	007 Move W8, [X20+998]
	008 Move X21, [X21+1664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB30000
	015 Move X0, [X0+1664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+998], W8
	019 Move X20, [X19+16]
	020 Move X0, [X19+24]
	021 Move X1, [X21]
	022 Call 0x21A2EFC, X0
	023 Move X1, X0
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X2, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Concat, X0, X1
	031 Return X0

Method: System.Boolean TryParse(System.String input, System.Int32 minimalCount, out System.Collections.Generic.List`1<System.Net.Http.Headers.TransferCodingHeaderValue> result)

Disassembly:
	0x0360B2EC STP X22, X21, [X31 + 0x40]
	0x0360B2F0 STP X20, X19, [X31 + 0x50]
	0x0360B2F4 ADRP X22, 0xDD5000
	0x0360B2F8 ADRP X20, 0xAE8000
	0x0360B2FC ADRP X21, 0xB1F000
	0x0360B300 LDRB W8, [X22 + 0x3F3]
	0x0360B304 LDR X20, [X20 + 0xAC8]
	0x0360B308 LDR X21, [X21 + 0xBF8]
	0x0360B30C MOV X19, X0
	0x0360B310 TBNZ X8, 0x0, 0x360B394
	0x0360B314 ADRP X0, 0xAEA000
	0x0360B318 LDR X0, [X0 + 0xC48]
	0x0360B31C BL 0x1C16CF4
	0x0360B320 ADRP X0, 0xAEA000
	0x0360B324 LDR X0, [X0 + 0xA58]
	0x0360B328 BL 0x1C16CF4
	0x0360B32C ADRP X0, 0xB2F000
	0x0360B330 LDR X0, [X0 + 0xD10]
	0x0360B334 BL 0x1C16CF4
	0x0360B338 ADRP X0, 0xB2F000
	0x0360B33C LDR X0, [X0 + 0xD28]
	0x0360B340 BL 0x1C16CF4
	0x0360B344 ADRP X0, 0xAE8000
	0x0360B348 LDR X0, [X0 + 0xAC8]
	0x0360B34C BL 0x1C16CF4
	0x0360B350 ADRP X0, 0xAE8000
	0x0360B354 LDR X0, [X0 + 0xDD8]
	0x0360B358 BL 0x1C16CF4
	0x0360B35C ADRP X0, 0xB15000
	0x0360B360 LDR X0, [X0 + 0x3A8]
	0x0360B364 BL 0x1C16CF4
	0x0360B368 ADRP X0, 0xAF3000
	0x0360B36C LDR X0, [X0 + 0xCD8]
	0x0360B370 BL 0x1C16CF4
	0x0360B374 ADRP X0, 0xB1F000
	0x0360B378 LDR X0, [X0 + 0xBF8]
	0x0360B37C BL 0x1C16CF4
	0x0360B380 ADRP X0, 0xB2F000
	0x0360B384 LDR X0, [X0 + 0xE68]
	0x0360B388 BL 0x1C16CF4
	0x0360B38C MOVZ W8, 0x1
	0x0360B390 STRB W8, [X22 + 0x3F3]
	0x0360B394 LDR X0, [X20]
	0x0360B398 MOVZ W1, 0x5

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xDD6000
	010 Move X25, 0xB30000
	011 Move X22, 0xB30000
	012 Move X23, 0xB30000
	013 Move W8, [X24+999]
	014 Move X25, [X25+3568]
	015 Move X22, [X22+3576]
	016 Move X23, [X23+3584]
	017 Move X19, X2
	018 Move W20, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0xB30000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xB30000
	028 Move X0, [X0+3568]
	029 Call 0x1C17CF4
	030 Move X0, 0xB30000
	031 Move X0, [X0+3576]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+999], W8
	035 Move X0, [X25]
	036 Call 0x1C17F10
	037 Move X2, [X22]
	038 Move X1, X31
	039 Move X3, X31
	040 Move X22, X0
	041 Call 0x2B48CB4, X0, X1, X2
	042 Move X4, [X23]
	043 Move X0, X21
	044 Move W1, W20
	045 Move X2, X22
	046 Move X3, X19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Move X25, [X31+72]
	055 Call 0x21A3910, X0, X1, X2, X3
	056 Return X0

Method: System.Boolean TryParseElement(System.Net.Http.Headers.Lexer lexer, out System.Net.Http.Headers.TransferCodingHeaderValue parsedValue, out System.Net.Http.Headers.Token t)

Disassembly:
	0x0360B39C STP X31, X31, [X31 + 0x10]
	0x0360B3A0 STR X31, [X31 + 0x20]
	0x0360B3A4 STP X31, X31, [X31]
	0x0360B3A8 BL 0x1C16D6C
	0x0360B3AC LDR W8, [X19 + 0x18]
	0x0360B3B0 LDR X1, [X21]
	0x0360B3B4 MOV X20, X0
	0x0360B3B8 ADD X0, X31, 0x2C
	0x0360B3BC MOV X2, X31
	0x0360B3C0 STR W8, [X31 + 0x2C]
	0x0360B3C4 BL 0x337B774
	0x0360B3C8 CBZ X20, 0x360B51C
	0x0360B3CC LDR W8, [X20 + 0x18]
	0x0360B3D0 CBZ W8, 0x360B518
	0x0360B3D4 CMP W8, 0x1
	0x0360B3D8 STR X0, [X20 + 0x20]
	0x0360B3DC B.EQ 0x360B518
	0x0360B3E0 ADRP X9, 0xAE8000
	0x0360B3E4 LDR X9, [X9 + 0xDD8]
	0x0360B3E8 CMP W8, 0x2
	0x0360B3EC LDR X10, [X9]
	0x0360B3F0 STR X10, [X20 + 0x28]
	0x0360B3F4 B.LS 0x360B518
	0x0360B3F8 LDR X10, [X19 + 0x10]
	0x0360B3FC CMP W8, 0x3
	0x0360B400 STR X10, [X20 + 0x30]
	0x0360B404 B.EQ 0x360B518
	0x0360B408 LDR X9, [X9]
	0x0360B40C CMP W8, 0x4
	0x0360B410 STR X9, [X20 + 0x38]
	0x0360B414 B.LS 0x360B518
	0x0360B418 LDR X8, [X19 + 0x38]
	0x0360B41C MOV X0, X20
	0x0360B420 MOV X1, X31
	0x0360B424 STR X8, [X20 + 0x40]
	0x0360B428 BL 0x32278CC
	0x0360B42C LDR V0, [X19 + 0x2]
	0x0360B430 LDR X8, [X19 + 0x30]
	0x0360B434 MOV X20, X0
	0x0360B438 STR V0, [X31 + 0x1]
	0x0360B43C LDRB W9, [X31 + 0x10]
	0x0360B440 STR X8, [X31 + 0x20]
	0x0360B444 CBZ W9, 0x360B500
	0x0360B448 ADRP X8, 0xB2F000
	0x0360B44C LDR X8, [X8 + 0xD28]
	0x0360B450 ADRP X21, 0xAEA000
	0x0360B454 ADD X9, X19, 0x20
	0x0360B458 LDR X21, [X21 + 0xC48]
	0x0360B45C LDR X10, [X9 + 0x10]
	0x0360B460 LDR V0, [X9]
	0x0360B464 LDR X1, [X8]
	0x0360B468 ADRP X19, 0xAEA000
	0x0360B46C LDR X19, [X19 + 0xA58]
	0x0360B470 ADD X0, X31, 0x10
	0x0360B474 STR X10, [X31 + 0x20]
	0x0360B478 STR V0, [X31 + 0x1]
	0x0360B47C BL 0x2430E58
	0x0360B480 MOV X8, X0
	0x0360B484 LDR X0, [X21]
	0x0360B488 STP X8, X1, [X31]
	0x0360B48C LDR W8, [X0 + 0xE0]
	0x0360B490 CBNZ W8, 0x360B498
	0x0360B494 BL 0x1C16DFC
	0x0360B498 ADRP X23, 0xB15000
	0x0360B49C ADRP X21, 0xB2F000
	0x0360B4A0 ADRP X22, 0xAF3000
	0x0360B4A4 LDR X23, [X23 + 0x3A8]
	0x0360B4A8 LDR X21, [X21 + 0xE68]
	0x0360B4AC LDR X22, [X22 + 0xCD8]
	0x0360B4B0 MOV X0, X31
	0x0360B4B4 BL 0x3338524
	0x0360B4B8 LDR X8, [X19]
	0x0360B4BC MOV X19, X0
	0x0360B4C0 LDR W9, [X8 + 0xE0]
	0x0360B4C4 CBNZ W9, 0x360B4D0
	0x0360B4C8 MOV X0, X8
	0x0360B4CC BL 0x1C16DFC
	0x0360B4D0 LDR X1, [X23]
	0x0360B4D4 ADD X0, X31, 0x0
	0x0360B4D8 MOV X2, X19
	0x0360B4DC MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xDD6000
	009 Move W8, [X22+1000]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xB11000
	018 Move X0, [X0+2256]
	019 Call 0x1C17CF4
	020 Move X0, 0xB30000
	021 Move X0, [X0+3560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1000], W8
	025 Move [X19], X31
	026 Compare X21, 0
	027 JumpIfEqual {94}
	028 Move X24, 0xB11000
	029 Move X24, [X24+2256]
	030 Move X0, X21
	031 Move W1, W31
	032 Call Lexer.Scan, X0, X1
	033 Move [X20], X0
	034 Move [X20+8], W1
	035 Move X22, X0
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0xB30000
	043 Move X8, [X8+3560]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X22, X0
	048 Call Object..ctor, X0
	049 Move X1, [X20]
	050 Move W2, [X20+8]
	051 Move X0, X21
	052 Call Lexer.GetStringValue, X0, X1
	053 Compare X22, 0
	054 JumpIfEqual {94}
	055 Move [X22+16], X0
	056 Move X0, X21
	057 Move W1, W31
	058 Call Lexer.Scan, X0, X1
	059 Move [X20], X0
	060 Move [X20+8], W1
	061 Move X23, X0
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X1, X22, 24
	069 Move X0, X21
	070 Move X2, X20
	071 Call NameValueHeaderValue.TryParseParameters, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {85}
	076 Move X0, [X24]
	077 Move X20, [X20]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W0, 1
	084 Move [X19], X22
	085 Move W0, W31
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Return X0
	094 Call 0x1C17F20

