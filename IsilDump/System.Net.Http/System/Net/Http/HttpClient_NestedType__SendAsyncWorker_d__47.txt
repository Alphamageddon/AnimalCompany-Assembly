Type: System.Net.Http.HttpClient/<SendAsyncWorker>d__47

Method: System.Void MoveNext()

Disassembly:
	0x035FB2FC ADRP X1, 0x8B9000
	0x035FB300 ADD X1, X1, 0xE58
	0x035FB304 MOV X2, X31
	0x035FB308 BL 0x3EB1B00
	0x035FB30C MOV X20, X0
	0x035FB310 BL 0x3EB1AE0
	0x035FB314 MOV X0, X20
	0x035FB318 BL 0x1D2C690
	0x035FB31C BL 0x1990590
	0x035FB320 STR X30, [X31 - 0x30]!
	0x035FB324 STP X22, X21, [X31 + 0x10]
	0x035FB328 STP X20, X19, [X31 + 0x20]
	0x035FB32C ADRP X21, 0xDE5000
	0x035FB330 ADRP X22, 0xAFB000
	0x035FB334 LDRB W8, [X21 + 0x326]
	0x035FB338 LDR X22, [X22 + 0x280]
	0x035FB33C MOV X19, X1
	0x035FB340 MOV X20, X0
	0x035FB344 TBNZ X8, 0x0, 0x35FB35C
	0x035FB348 ADRP X0, 0xAFB000
	0x035FB34C LDR X0, [X0 + 0x280]
	0x035FB350 BL 0x1C16CF4
	0x035FB354 MOVZ W8, 0x1
	0x035FB358 STRB W8, [X21 + 0x326]
	0x035FB35C LDR X0, [X22]
	0x035FB360 LDR W8, [X0 + 0xE0]
	0x035FB364 CBNZ W8, 0x35FB36C
	0x035FB368 BL 0x1C16DFC
	0x035FB36C ADD X0, X20, 0x8
	0x035FB370 MOV X1, X19
	0x035FB374 LDP X20, X19, [X31 + 0x20]
	0x035FB378 LDP X22, X21, [X31 + 0x10]
	0x035FB37C MOV X2, X31
	0x035FB380 LDR X30, [X31], #0x30
	0x035FB384 B 0x32C477C
	0x035FB388 SUB X31, X31, 0x50
	0x035FB38C STP X30, X23, [X31 + 0x20]
	0x035FB390 STP X22, X21, [X31 + 0x30]
	0x035FB394 STP X20, X19, [X31 + 0x40]
	0x035FB398 ADRP X20, 0xDE5000
	0x035FB39C LDRB W8, [X20 + 0x327]
	0x035FB3A0 MOV X19, X0
	0x035FB3A4 TBNZ X8, 0x0, 0x35FB3E0
	0x035FB3A8 ADRP X0, 0xB3F000
	0x035FB3AC LDR X0, [X0 + 0x488]
	0x035FB3B0 BL 0x1C16CF4
	0x035FB3B4 ADRP X0, 0xAFB000
	0x035FB3B8 LDR X0, [X0 + 0x160]
	0x035FB3BC BL 0x1C16CF4
	0x035FB3C0 ADRP X0, 0xAFB000
	0x035FB3C4 LDR X0, [X0 + 0x130]
	0x035FB3C8 BL 0x1C16CF4
	0x035FB3CC ADRP X0, 0xAFA000
	0x035FB3D0 LDR X0, [X0 + 0x278]
	0x035FB3D4 BL 0x1C16CF4
	0x035FB3D8 MOVZ W8, 0x1
	0x035FB3DC STRB W8, [X20 + 0x327]
	0x035FB3E0 STP X31, X31, [X31]
	0x035FB3E4 ADRP X23, 0xAFB000
	0x035FB3E8 LDR W8, [X19]
	0x035FB3EC LDR X20, [X19 + 0x20]
	0x035FB3F0 LDR X23, [X23 + 0x130]
	0x035FB3F4 CBZ W8, 0x35FB468
	0x035FB3F8 CBZ X20, 0x35FB600
	0x035FB3FC MOVN W1, 0x80000000
	0x035FB400 MOV X0, X20
	0x035FB404 BL 0x35F8FB4
	0x035FB408 CBZ X0, 0x35FB604
	0x035FB40C MOV W1, W31
	0x035FB410 MOV X2, X31
	0x035FB414 BL 0x33ED3A0
	0x035FB418 STP X0, X1, [X31]
	0x035FB41C ADD X0, X31, 0x0
	0x035FB420 MOV X1, X31
	0x035FB424 BL 0x32C40D4
	0x035FB428 TBNZ X0, 0x0, 0x35FB47C
	0x035FB42C STR W31, [X19]
	0x035FB430 LDR V0, [X31]
	0x035FB434 STUR V0, [X19 + 0x28]
	0x035FB438 LDR X0, [X23]
	0x035FB43C LDR W8, [X0 + 0xE0]
	0x035FB440 CBNZ W8, 0x35FB448
	0x035FB444 BL 0x1C16DFC
	0x035FB448 ADRP X8, 0xB3F000
	0x035FB44C LDR X8, [X8 + 0x488]
	0x035FB450 ADD X0, X19, 0x8
	0x035FB454 LDR X3, [X8]
	0x035FB458 ADD X1, X31, 0x0
	0x035FB45C MOV X2, X19
	0x035FB460 BL 0x1FC6DD8
	0x035FB464 B 0x35FB5E4
	0x035FB468 LDUR V0, [X19 + 0x28]
	0x035FB46C MOVN W8, 0x0
	0x035FB470 STR V0, [X31]
	0x035FB474 STP X31, X31, [X19 + 0x28]
	0x035FB478 STR W8, [X19]
	0x035FB47C ADD X0, X31, 0x0
	0x035FB480 MOV X1, X31
	0x035FB484 BL 0x32C40F0
	0x035FB488 CBZ X20, 0x35FB5F8
	0x035FB48C LDR X0, [X20 + 0x10]
	0x035FB490 CBZ X0, 0x35FB5FC
	0x035FB494 LDR X8, [X0]
	0x035FB498 LDP X9, X1, [X8 + 0x1E8]
	0x035FB49C BLR X9
	0x035FB4A0 CBZ X0, 0x35FB5A0
	0x035FB4A4 LDR X0, [X20 + 0x10]
	0x035FB4A8 CBZ X0, 0x35FB608
	0x035FB4AC LDR X8, [X0]
	0x035FB4B0 LDR X1, [X8 + 0x3C0]
	0x035FB4B4 LDR X9, [X8 + 0x3B8]
	0x035FB4B8 BLR X9
	0x035FB4BC MOV X21, X0
	0x035FB4C0 LDR X0, [X20 + 0x10]
	0x035FB4C4 CBZ X0, 0x35FB60C
	0x035FB4C8 LDR X8, [X0]
	0x035FB4CC LDP X9, X1, [X8 + 0x1E8]
	0x035FB4D0 BLR X9
	0x035FB4D4 STR W31, [X31 + 0x1C]
	0x035FB4D8 MOV X22, X0
	0x035FB4DC LDR X0, [X20 + 0x20]
	0x035FB4E0 CBZ X0, 0x35FB550
	0x035FB4E4 BL 0x35FB744
	0x035FB4E8 CBZ X0, 0x35FB550
	0x035FB4EC LDR X0, [X20 + 0x20]
	0x035FB4F0 CBZ X0, 0x35FB610
	0x035FB4F4 BL 0x35FB744
	0x035FB4F8 CBZ X0, 0x35FB614
	0x035FB4FC BL 0x35FB7AC
	0x035FB500 CBZ X0, 0x35FB550
	0x035FB504 LDR X0, [X20 + 0x20]
	0x035FB508 CBZ X0, 0x35FB61C
	0x035FB50C BL 0x35FB744
	0x035FB510 CBZ X0, 0x35FB620
	0x035FB514 BL 0x35FB7AC
	0x035FB518 MOV X1, X31
	0x035FB51C BL 0x3243998
	0x035FB520 MOV X20, X0
	0x035FB524 CBZ X0, 0x35FB624
	0x035FB528 LDR X8, [X20]
	0x035FB52C LDP X9, X1, [X8 + 0x198]
	0x035FB530 MOV X0, X20
	0x035FB534 BLR X9
	0x035FB538 MOV X2, X0
	0x035FB53C MOV X0, X21
	0x035FB540 MOV W1, W22
	0x035FB544 BL 0x35FAE80
	0x035FB548 STR W0, [X31 + 0x1C]
	0x035FB54C B 0x35FB578
	0x035FB550 ADD X2, X31, 0x1C
	0x035FB554 MOV X0, X21
	0x035FB558 MOV W1, W22
	0x035FB55C BL 0x35FAD08
	0x035FB560 MOV X20, X0
	0x035FB564 CBNZ X0, 0x35FB578
	0x035FB568 MOV X0, X31
	0x035FB56C BL 0x3241948
	0x035FB570 MOV X20, X0
	0x035FB574 CBZ X0, 0x35FB618
	0x035FB578 LDR X8, [X20]
	0x035FB57C LDR W2, [X31 + 0x1C]
	0x035FB580 LDR X9, [X8 + 0x388]
	0x035FB584 LDR X4, [X8 + 0x390]
	0x035FB588 SUB W3, W22, W2
	0x035FB58C MOV X0, X20
	0x035FB590 MOV X1, X21
	0x035FB594 BLR X9
	0x035FB598 MOV X20, X0
	0x035FB59C B 0x35FB5B4
	0x035FB5A0 ADRP X8, 0xAFA000
	0x035FB5A4 LDR X8, [X8 + 0x278]
	0x035FB5A8 LDR X8, [X8]
	0x035FB5AC LDR X8, [X8 + 0xB8]
	0x035FB5B0 LDR X20, [X8]
	0x035FB5B4 MOVN W8, 0x1
	0x035FB5B8 STR W8, [X19], #0x8
	0x035FB5BC LDR X0, [X23]
	0x035FB5C0 ADRP X21, 0xAFB000
	0x035FB5C4 LDR W8, [X0 + 0xE0]
	0x035FB5C8 LDR X21, [X21 + 0x160]
	0x035FB5CC CBNZ W8, 0x35FB5D4
	0x035FB5D0 BL 0x1C16DFC
	0x035FB5D4 LDR X2, [X21]
	0x035FB5D8 MOV X0, X19
	0x035FB5DC MOV X1, X20
	0x035FB5E0 BL 0x26322B0
	0x035FB5E4 LDP X20, X19, [X31 + 0x40]
	0x035FB5E8 LDP X22, X21, [X31 + 0x30]
	0x035FB5EC LDP X30, X23, [X31 + 0x20]
	0x035FB5F0 ADD X31, X31, 0x50
	0x035FB5F4 RET
	0x035FB5F8 BL 0x1C16F20
	0x035FB5FC BL 0x1C16F20
	0x035FB600 BL 0x1C16F20
	0x035FB604 BL 0x1C16F20
	0x035FB608 BL 0x1C16F20
	0x035FB60C BL 0x1C16F20
	0x035FB610 BL 0x1C16F20
	0x035FB614 BL 0x1C16F20
	0x035FB618 BL 0x1C16F20
	0x035FB61C BL 0x1C16F20
	0x035FB620 BL 0x1C16F20
	0x035FB624 BL 0x1C16F20
	0x035FB628 B 0x35FB694
	0x035FB62C B 0x35FB694
	0x035FB630 B 0x35FB694
	0x035FB634 B 0x35FB694
	0x035FB638 B 0x35FB694
	0x035FB63C B 0x35FB694
	0x035FB640 B 0x35FB694
	0x035FB644 B 0x35FB694
	0x035FB648 B 0x35FB694
	0x035FB64C B 0x35FB694
	0x035FB650 B 0x35FB694
	0x035FB654 B 0x35FB694
	0x035FB658 B 0x35FB694
	0x035FB65C B 0x35FB694
	0x035FB660 B 0x35FB694
	0x035FB664 B 0x35FB694
	0x035FB668 B 0x35FB694
	0x035FB66C B 0x35FB694
	0x035FB670 B 0x35FB694
	0x035FB674 B 0x35FB694
	0x035FB678 B 0x35FB694
	0x035FB67C B 0x35FB694
	0x035FB680 B 0x35FB694
	0x035FB684 B 0x35FB694
	0x035FB688 B 0x35FB694
	0x035FB68C B 0x35FB694
	0x035FB690 B 0x35FB694
	0x035FB694 MOV X20, X0
	0x035FB698 CMP W1, 0x1
	0x035FB69C B.NE 0x35FB738
	0x035FB6A0 MOV X0, X20
	0x035FB6A4 BL 0x3EB1AD0
	0x035FB6A8 MOV X20, X0
	0x035FB6AC ADRP X0, 0xAF8000
	0x035FB6B0 LDR X0, [X0 + 0x7D0]
	0x035FB6B4 BL 0x1C16D08
	0x035FB6B8 LDR X8, [X20]
	0x035FB6BC LDR X1, [X8]
	0x035FB6C0 BL 0x1C17270
	0x035FB6C4 TBZ X0, 0x0, 0x35FB710
	0x035FB6C8 LDR X20, [X20]
	0x035FB6CC BL 0x3EB1AE0
	0x035FB6D0 MOVN W8, 0x1
	0x035FB6D4 STR W8, [X19], #0x8
	0x035FB6D8 ADRP X0, 0xAFB000
	0x035FB6DC LDR X0, [X0 + 0x130]
	0x035FB6E0 BL 0x1C16D08
	0x035FB6E4 LDR W8, [X0 + 0xE0]
	0x035FB6E8 CBNZ W8, 0x35FB6F0
	0x035FB6EC BL 0x1C16DFC
	0x035FB6F0 ADRP X0, 0xAFB000
	0x035FB6F4 LDR X0, [X0 + 0x240]
	0x035FB6F8 BL 0x1C16D08
	0x035FB6FC MOV X2, X0
	0x035FB700 MOV X0, X19
	0x035FB704 MOV X1, X20
	0x035FB708 BL 0x26324C8
	0x035FB70C B 0x35FB5E4
	0x035FB710 MOVZ W0, 0x8
	0x035FB714 BL 0x3EB1AF0
	0x035FB718 LDR X8, [X20]
	0x035FB71C STR X8, [X0]
	0x035FB720 ADRP X1, 0x8B9000
	0x035FB724 ADD X1, X1, 0xE58
	0x035FB728 MOV X2, X31
	0x035FB72C BL 0x3EB1B00
	0x035FB730 MOV X20, X0
	0x035FB734 BL 0x3EB1AE0
	0x035FB738 MOV X0, X20
	0x035FB73C BL 0x1D2C690
	0x035FB740 BL 0x1990590
	0x035FB744 STR X30, [X31 - 0x30]!
	0x035FB748 STP X22, X21, [X31 + 0x10]
	0x035FB74C STP X20, X19, [X31 + 0x20]
	0x035FB750 ADRP X20, 0xDE5000
	0x035FB754 ADRP X21, 0xB33000
	0x035FB758 ADRP X22, 0xB3F000
	0x035FB75C LDRB W8, [X20 + 0x360]
	0x035FB760 LDR X21, [X21 + 0x988]
	0x035FB764 LDR X22, [X22 + 0x490]
	0x035FB768 MOV X19, X0
	0x035FB76C TBNZ X8, 0x0, 0x35FB790
	0x035FB770 ADRP X0, 0xB3F000
	0x035FB774 LDR X0, [X0 + 0x490]
	0x035FB778 BL 0x1C16CF4
	0x035FB77C ADRP X0, 0xB33000
	0x035FB780 LDR X0, [X0 + 0x988]
	0x035FB784 BL 0x1C16CF4
	0x035FB788 MOVZ W8, 0x1
	0x035FB78C STRB W8, [X20 + 0x360]
	0x035FB790 LDR X1, [X21]
	0x035FB794 LDR X2, [X22]
	0x035FB798 MOV X0, X19
	0x035FB79C LDP X20, X19, [X31 + 0x20]
	0x035FB7A0 LDP X22, X21, [X31 + 0x10]
	0x035FB7A4 LDR X30, [X31], #0x30
	0x035FB7A8 B 0x21EC8A8
	0x035FB7AC STP X30, X23, [X31 - 0x30]!
	0x035FB7B0 STP X22, X21, [X31 + 0x10]
	0x035FB7B4 STP X20, X19, [X31 + 0x20]
	0x035FB7B8 ADRP X20, 0xDE5000
	0x035FB7BC LDRB W8, [X20 + 0x392]
	0x035FB7C0 MOV X19, X0
	0x035FB7C4 TBNZ X8, 0x0, 0x35FB800
	0x035FB7C8 ADRP X0, 0xB3F000
	0x035FB7CC LDR X0, [X0 + 0x498]
	0x035FB7D0 BL 0x1C16CF4
	0x035FB7D4 ADRP X0, 0xB3F000
	0x035FB7D8 LDR X0, [X0 + 0x4A0]
	0x035FB7DC BL 0x1C16CF4
	0x035FB7E0 ADRP X0, 0xB3F000
	0x035FB7E4 LDR X0, [X0 + 0x4A8]
	0x035FB7E8 BL 0x1C16CF4
	0x035FB7EC ADRP X0, 0xB3F000
	0x035FB7F0 LDR X0, [X0 + 0x4B0]
	0x035FB7F4 BL 0x1C16CF4
	0x035FB7F8 MOVZ W8, 0x1
	0x035FB7FC STRB W8, [X20 + 0x392]
	0x035FB800 LDR X19, [X19 + 0x10]
	0x035FB804 CBZ X19, 0x35FB8A4
	0x035FB808 ADRP X22, 0xB3F000
	0x035FB80C LDR X22, [X22 + 0x4B0]
	0x035FB810 LDR X0, [X22]
	0x035FB814 LDR W8, [X0 + 0xE0]
	0x035FB818 CBNZ W8, 0x35FB824
	0x035FB81C BL 0x1C16DFC
	0x035FB820 LDR X0, [X22]
	0x035FB824 LDR X8, [X0 + 0xB8]
	0x035FB828 ADRP X23, 0xB3F000
	0x035FB82C LDR X20, [X8 + 0x8]
	0x035FB830 LDR X23, [X23 + 0x498]
	0x035FB834 CBNZ X20, 0x35FB888
	0x035FB838 LDR W8, [X0 + 0xE0]
	0x035FB83C CBNZ W8, 0x35FB848
	0x035FB840 BL 0x1C16DFC
	0x035FB844 LDR X0, [X22]
	0x035FB848 ADRP X9, 0xB3F000
	0x035FB84C LDR X8, [X0 + 0xB8]
	0x035FB850 LDR X9, [X9 + 0x4A0]
	0x035FB854 LDR X21, [X8]
	0x035FB858 LDR X0, [X9]
	0x035FB85C BL 0x1C16F10
	0x035FB860 ADRP X8, 0xB3F000
	0x035FB864 LDR X8, [X8 + 0x4A8]
	0x035FB868 MOV X1, X21
	0x035FB86C MOV X3, X31
	0x035FB870 MOV X20, X0
	0x035FB874 LDR X2, [X8]
	0x035FB878 BL 0x24AD1FC
	0x035FB87C LDR X8, [X22]
	0x035FB880 LDR X8, [X8 + 0xB8]
	0x035FB884 STR X20, [X8 + 0x8]
	0x035FB888 LDR X2, [X23]
	0x035FB88C MOV X0, X19
	0x035FB890 MOV X1, X20
	0x035FB894 BL 0x301C5F0
	0x035FB898 CBZ X0, 0x35FB8A8
	0x035FB89C LDR X0, [X0 + 0x10]
	0x035FB8A0 B 0x35FB8A8
	0x035FB8A4 MOV X0, X31
	0x035FB8A8 LDP X20, X19, [X31 + 0x20]
	0x035FB8AC LDP X22, X21, [X31 + 0x10]
	0x035FB8B0 LDP X30, X23, [X31], #0x30
	0x035FB8B4 RET
	0x035FB8B8 STR X30, [X31 - 0x30]!
	0x035FB8BC STP X22, X21, [X31 + 0x10]
	0x035FB8C0 STP X20, X19, [X31 + 0x20]
	0x035FB8C4 ADRP X22, 0xDE5000
	0x035FB8C8 ADRP X21, 0xAFB000
	0x035FB8CC LDRB W8, [X22 + 0x328]
	0x035FB8D0 LDR X21, [X21 + 0x130]
	0x035FB8D4 MOV X19, X1
	0x035FB8D8 MOV X20, X0
	0x035FB8DC TBNZ X8, 0x0, 0x35FB900
	0x035FB8E0 ADRP X0, 0xAFB000
	0x035FB8E4 LDR X0, [X0 + 0x248]
	0x035FB8E8 BL 0x1C16CF4
	0x035FB8EC ADRP X0, 0xAFB000
	0x035FB8F0 LDR X0, [X0 + 0x130]
	0x035FB8F4 BL 0x1C16CF4
	0x035FB8F8 MOVZ W8, 0x1
	0x035FB8FC STRB W8, [X22 + 0x328]
	0x035FB900 LDR X0, [X21]
	0x035FB904 ADRP X21, 0xAFB000
	0x035FB908 LDR W8, [X0 + 0xE0]
	0x035FB90C LDR X21, [X21 + 0x248]
	0x035FB910 CBNZ W8, 0x35FB918
	0x035FB914 BL 0x1C16DFC
	0x035FB918 LDR X2, [X21]
	0x035FB91C ADD X0, X20, 0x8
	0x035FB920 MOV X1, X19
	0x035FB924 LDP X20, X19, [X31 + 0x20]
	0x035FB928 LDP X22, X21, [X31 + 0x10]
	0x035FB92C LDR X30, [X31], #0x30
	0x035FB930 B 0x2632228
	0x035FB934 LDR X8, [X0]
	0x035FB938 MOVZ W1, 0x1
	0x035FB93C LDP X3, X2, [X8 + 0x188]
	0x035FB940 BR X3
	0x035FB944 STR X30, [X31 - 0x20]!
	0x035FB948 STP X20, X19, [X31 + 0x10]
	0x035FB94C MOV X19, X1
	0x035FB950 MOV X1, X31
	0x035FB954 MOV X20, X0
	0x035FB958 BL 0x33BDD8C
	0x035FB95C MOV X0, X19
	0x035FB960 MOV X1, X31
	0x035FB964 BL 0x32277A8
	0x035FB968 TBNZ X0, 0x0, 0x35FB984
	0x035FB96C MOV X0, X19
	0x035FB970 BL 0x35FB9CC
	0x035FB974 STR X19, [X20 + 0x10]
	0x035FB978 LDP X20, X19, [X31 + 0x10]
	0x035FB97C LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xDE6000
	010 Move W8, [X20+797]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {51}
	016 Move X0, 0xB40000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0xB40000
	020 Move X0, [X0+1032]
	021 Call 0x1C17CF4
	022 Move X0, 0xB40000
	023 Move X0, [X0+640]
	024 Call 0x1C17CF4
	025 Move X0, 0xB40000
	026 Move X0, [X0+560]
	027 Call 0x1C17CF4
	028 Move X0, 0xAFB000
	029 Move X0, [X0+2640]
	030 Call 0x1C17CF4
	031 Move X0, 0xB40000
	032 Move X0, [X0+1040]
	033 Call 0x1C17CF4
	034 Move X0, 0xB40000
	035 Move X0, [X0+1048]
	036 Call 0x1C17CF4
	037 Move X0, 0xB40000
	038 Move X0, [X0+1056]
	039 Call 0x1C17CF4
	040 Move X0, 0xAFB000
	041 Move X0, [X0+2608]
	042 Call 0x1C17CF4
	043 Move X0, 0xAF9000
	044 Move X0, [X0+3584]
	045 Call 0x1C17CF4
	046 Move X0, 0xB40000
	047 Move X0, [X0+1064]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+797], W8
	051 Move [X31+32], X31
	052 Move [X31+40], X31
	053 Move [X31+16], X31
	054 Move [X31+24], X31
	055 Move [X31+8], W31
	056 Move W23, [X19]
	057 Move X22, [X19+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X22, 0
	060 JumpIfEqual {318}
	061 Move X0, [X22+40]
	062 Compare X0, 0
	063 JumpIfEqual {319}
	064 Move X1, X31
	065 Call CancellationTokenSource.get_Token, X0
	066 Move X8, 0xAFB000
	067 Move X8, [X8+2640]
	068 Move X20, X0
	069 Move X21, [X19+40]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X20
	076 Move X1, X21
	077 Move X2, X31
	078 Call CancellationTokenSource.CreateLinkedTokenSource, X0, X1
	079 Move [X19+64], X0
	080 Move X8, [X22+16]
	081 Compare X8, 0
	082 JumpIfEqual {98}
	083 Move X9, 0xAFB000
	084 Move X9, [X9+2608]
	085 Move X10, [X8]
	086 Move X9, [X9]
	087 Move W12, [X10+304]
	088 Move W11, [X9+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X10, [X10+200]
	091 Add X10, X10, X11
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X1, [X22+72]
	095 Move X0, X8
	096 Call HttpClientHandler.SetWebRequestTimeout, X0, X1
	097 Move X0, [X19+64]
	098 Compare X0, 0
	099 JumpIfEqual {320}
	100 Move X1, [X22+72]
	101 Move X2, X31
	102 Call CancellationTokenSource.CancelAfter, X0, X1
	103 Move X0, [X19+64]
	104 Compare X0, 0
	105 JumpIfEqual {321}
	106 Move X20, [X19+48]
	107 Move X1, X31
	108 Call CancellationTokenSource.get_Token, X0
	109 Move X2, X0
	110 Move X0, [X22+16]
	111 Compare X0, 0
	112 JumpIfEqual {322}
	113 Move X8, [X0]
	114 Move X9, [X8+408]
	115 Move X3, [X8+416]
	116 Move X1, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Compare X0, 0
	119 JumpIfEqual {323}
	120 Move X8, 0xB40000
	121 Move X8, [X8+1064]
	122 Move X2, [X8]
	123 Move W1, W31
	124 Call Task`1<Object>.ConfigureAwait, X0, X1
	125 Move X8, 0xB40000
	126 Move X8, [X8+1056]
	127 Move [X31+32], X0
	128 Move [X31+40], X1
	129 Move X8, [X8]
	130 Add X0, X31, 32
	131 Move X1, X8
	132 Call ConfiguredTaskAwaiter<Object>.get_IsCompleted, X0
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {176}
	137 Move [X19], W31
	138 Move V0, [X31+2]
	139 Move X8, 0xB40000
	140 Move [X19+5], V0
	141 Move X8, [X8+560]
	142 Move X0, [X8]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X8, 0xB40000
	148 Move X8, [X8+1032]
	149 Add X0, X19, 8
	150 Move X3, [X8]
	151 Add X1, X31, 32
	152 Move X2, X19
	153 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	154 Compare W23, 0
	155 JumpIfEqual {168}
	156 Move V0, [X19+6]
	157 Move TEMP, 0
	158 Not TEMP
	159 Move W23, TEMP
	160 Move [X31+1], V0
	161 Move [X19+96], X31
	162 Move [X19+104], X31
	163 Move [X19], W23
	164 Add X0, X31, 16
	165 Move X1, X31
	166 Call ConfiguredTaskAwaiter.GetResult, X0
	167 Move X20, [X19+72]
	168 Move V0, [X19+5]
	169 Move TEMP, 0
	170 Not TEMP
	171 Move W23, TEMP
	172 Move [X31+2], V0
	173 Move [X19+80], X31
	174 Move [X19+88], X31
	175 Move [X19], W23
	176 Move X8, 0xB40000
	177 Move X8, [X8+1048]
	178 Add X0, X31, 32
	179 Move X1, [X8]
	180 Call ConfiguredTaskAwaiter<Object>.GetResult, X0
	181 Move X20, X0
	182 Move [X19+72], X0
	183 Compare X0, 0
	184 JumpIfEqual {341}
	185 Move X0, [X20+56]
	186 Compare X0, 0
	187 JumpIfEqual {229}
	188 Move W8, [X19+56]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {229}
	193 Compare X22, 0
	194 JumpIfEqual {359}
	195 Move X1, [X22+64]
	196 Call HttpContent.LoadIntoBufferAsync, X0, X1
	197 Compare X0, 0
	198 JumpIfEqual {360}
	199 Move W1, W31
	200 Move X2, X31
	201 Call Task.ConfigureAwait, X0, X1
	202 Move [X31+16], X0
	203 Move [X31+24], X1
	204 Add X0, X31, 16
	205 Move X1, X31
	206 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {164}
	211 Move W8, 1
	212 Move [X19], W8
	213 Move V0, [X31+1]
	214 Move X8, 0xB40000
	215 Move [X19+6], V0
	216 Move X8, [X8+560]
	217 Move X0, [X8]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X8, 0xB40000
	223 Move X8, [X8+1024]
	224 Add X0, X19, 8
	225 Move X3, [X8]
	226 Add X1, X31, 16
	227 Move X2, X19
	228 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	229 Move X21, X31
	230 Move W24, W31
	231 Move TEMP, X23
	232 And TEMP, TEMP, -2147483648
	233 Compare TEMP, -2147483648
	234 JumpIfNotEqual {261}
	235 Move X22, [X19+64]
	236 Compare X22, 0
	237 JumpIfEqual {261}
	238 Move X10, 0xAF9000
	239 Move X8, [X22]
	240 Move X10, [X10+3584]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move X0, X22
	252 Move W2, W31
	253 Call 0x1C5D788
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X21, 0
	262 JumpIfNotEqual {316}
	263 Move TEMP, X24
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {290}
	267 Move TEMP, 0
	268 Not TEMP
	269 Move X8, TEMP
	270 Add X9, X31, 0
	271 Move X20, [X9]
	272 Move TEMP, 1
	273 Not TEMP
	274 Move W8, TEMP
	275 Move [X19+8], W8
	276 Move X0, 0xB40000
	277 Move X0, [X0+560]
	278 Call 0x1C17D08
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Move X0, 0xB40000
	284 Move X0, [X0+848]
	285 Call 0x1C17D08
	286 Move X2, X0
	287 Move X0, X19
	288 Move X1, X20
	289 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	290 Move TEMP, 1
	291 Not TEMP
	292 Move W8, TEMP
	293 Move [X19+8], W8
	294 Move X8, 0xB40000
	295 Move X8, [X8+560]
	296 Move X0, [X8]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {301}
	300 Call 0x1C17DFC
	301 Move X8, 0xB40000
	302 Move X8, [X8+640]
	303 Move X0, X19
	304 Move X1, X20
	305 Move X2, [X8]
	306 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	307 Move X20, [X31+96]
	308 Move X19, [X31+104]
	309 Move X22, [X31+80]
	310 Move X21, [X31+88]
	311 Move X24, [X31+64]
	312 Move X23, [X31+72]
	313 Move X30, [X31+48]
	314 Add X31, X31, 112
	315 Return 
	316 Move X0, X21
	317 Call 0x1C17F18
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Move X0, 0xAF9000
	324 Move X0, [X0+1456]
	325 Call 0x1C17D08
	326 Call 0x1C17F10
	327 Move X20, X0
	328 Move X0, 0xB40000
	329 Move X0, [X0+1072]
	330 Call 0x1C17D08
	331 Move X1, X0
	332 Move X0, X20
	333 Move X2, X31
	334 Call InvalidOperationException..ctor, X0, X1
	335 Move X0, 0xB40000
	336 Move X0, [X0+1080]
	337 Call 0x1C17D08
	338 Move X1, X0
	339 Move X0, X20
	340 Call 0x1C17DEC
	341 Move X0, 0xAF9000
	342 Move X0, [X0+1456]
	343 Call 0x1C17D08
	344 Call 0x1C17F10
	345 Move X20, X0
	346 Move X0, 0xB40000
	347 Move X0, [X0+1088]
	348 Call 0x1C17D08
	349 Move X1, X0
	350 Move X0, X20
	351 Move X2, X31
	352 Call InvalidOperationException..ctor, X0, X1
	353 Move X0, 0xB40000
	354 Move X0, [X0+1080]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Move X0, X20
	358 Call 0x1C17DEC
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Move X22, X1
	362 Move X20, X0
	363 Move W23, 1
	364 Move X22, X1
	365 Move X20, X0
	366 Move W23, W31
	367 Move X22, X1
	368 Move X20, X0
	369 Move X22, X1
	370 Move X20, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X20
	373 Call 0x3EB2AD0
	374 Move X21, [X0]
	375 Call 0x3EB2AE0
	376 Move X20, X31
	377 Move W24, 1
	378 Move TEMP, X23
	379 And TEMP, TEMP, -2147483648
	380 Compare TEMP, -2147483648
	381 JumpIfNotEqual {261}
	382 Move X21, X31
	383 Move TEMP, X23
	384 And TEMP, TEMP, -2147483648
	385 Compare TEMP, -2147483648
	386 JumpIfNotEqual {413}
	387 Move X23, [X19+64]
	388 Compare X23, 0
	389 JumpIfEqual {413}
	390 Move X10, 0xAF9000
	391 Move X8, [X23]
	392 Move X10, [X10+3584]
	393 NotImplemented "Instruction LDRH not yet implemented."
	394 Move X1, [X10]
	395 Compare X9, 0
	396 JumpIfEqual {403}
	397 Move X10, [X8+176]
	398 Add X10, X10, 8
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Subtract X9, X9, 1
	402 Add X10, X10, 16
	403 Move X0, X23
	404 Move W2, W31
	405 Call 0x1C5D788
	406 NotImplemented "Instruction LDRSW not yet implemented."
	407 Add X8, X8, X9
	408 Add X0, X8, 312
	409 Move X8, [X0]
	410 Move X1, [X0+8]
	411 Move X0, X23
	412 NotImplemented "Instruction BLR not yet implemented."
	413 Compare X21, 0
	414 JumpIfNotEqual {443}
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X20
	417 Call 0x3EB2AD0
	418 Move X20, X0
	419 Move X0, 0xAF9000
	420 Move X0, [X0+2000]
	421 Call 0x1C17D08
	422 Move X8, [X20]
	423 Move X1, [X8]
	424 Call 0x1C18270
	425 Move TEMP, X0
	426 And TEMP, TEMP, 1
	427 Compare TEMP, 1
	428 JumpIfNotEqual {435}
	429 Move X8, [X20]
	430 Move W9, 1
	431 Move [X31+8], W9
	432 Move [X31], X8
	433 Call 0x3EB2AE0
	434 Move X8, X31
	435 Move W0, 8
	436 Call 0x3EB2AF0
	437 Move X8, [X20]
	438 Move [X0], X8
	439 Move X1, 0x8BA000
	440 Add X1, X1, 3672
	441 Move X2, X31
	442 Call 0x3EB2B00
	443 Move X0, X21
	444 Call 0x1C17F18
	445 Move X22, X1
	446 Move X20, X0
	447 Move TEMP, X23
	448 And TEMP, TEMP, -2147483648
	449 Compare TEMP, -2147483648
	450 JumpIfNotEqual {413}
	451 Move X20, X0
	452 Call 0x3EB2AE0
	453 Move X0, X20
	454 Call 0x1D2D690
	455 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035FB980 RET
	0x035FB984 ADRP X0, 0xB00000
	0x035FB988 LDR X0, [X0 + 0x578]
	0x035FB98C BL 0x1C16D08
	0x035FB990 BL 0x1C16F10
	0x035FB994 MOV X19, X0
	0x035FB998 ADRP X0, 0xAF9000
	0x035FB99C LDR X0, [X0 + 0x6E8]
	0x035FB9A0 BL 0x1C16D08
	0x035FB9A4 MOV X1, X0
	0x035FB9A8 MOV X0, X19
	0x035FB9AC MOV X2, X31
	0x035FB9B0 BL 0x3314A68
	0x035FB9B4 ADRP X0, 0xB3F000
	0x035FB9B8 LDR X0, [X0 + 0x4B8]
	0x035FB9BC BL 0x1C16D08
	0x035FB9C0 MOV X1, X0
	0x035FB9C4 MOV X0, X19
	0x035FB9C8 BL 0x1C16DEC
	0x035FB9CC STR X30, [X31 - 0x20]!
	0x035FB9D0 STP X20, X19, [X31 + 0x10]
	0x035FB9D4 ADRP X20, 0xDE5000
	0x035FB9D8 LDRB W8, [X20 + 0x3AE]
	0x035FB9DC MOV X19, X0
	0x035FB9E0 TBNZ X8, 0x0, 0x35FB9F8
	0x035FB9E4 ADRP X0, 0xB20000
	0x035FB9E8 LDR X0, [X0 + 0x8C8]
	0x035FB9EC BL 0x1C16CF4
	0x035FB9F0 MOVZ W8, 0x1
	0x035FB9F4 STRB W8, [X20 + 0x3AE]
	0x035FB9F8 CBZ X19, 0x35FBA2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDE6000
	007 Move X21, 0xB40000
	008 Move W8, [X22+798]
	009 Move X21, [X21+560]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB40000
	017 Move X0, [X0+888]
	018 Call 0x1C17CF4
	019 Move X0, 0xB40000
	020 Move X0, [X0+560]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+798], W8
	024 Move X0, [X21]
	025 Move X21, 0xB40000
	026 Move W8, [X0+224]
	027 Move X21, [X21+888]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

