Type: System.Net.Http.HttpContent/<ReadAsStringAsync>d__20

Method: System.Void MoveNext()

Disassembly:
	0x035FC388 MOV X0, X21
	0x035FC38C MOV X2, X31
	0x035FC390 BL 0x32333E0
	0x035FC394 LDR X1, [X22]
	0x035FC398 MOV X0, X20
	0x035FC39C MOV X2, X31
	0x035FC3A0 BL 0x32333E0
	0x035FC3A4 MOV X21, X0
	0x035FC3A8 MOV X0, X19
	0x035FC3AC BL 0x35F66E4
	0x035FC3B0 CBZ X21, 0x35FC4A8
	0x035FC3B4 ADRP X22, 0xB3E000
	0x035FC3B8 LDR X22, [X22 + 0x4E0]
	0x035FC3BC MOV X1, X0
	0x035FC3C0 MOV X0, X21
	0x035FC3C4 MOV X2, X31
	0x035FC3C8 BL 0x3233F90
	0x035FC3CC LDR X1, [X22]
	0x035FC3D0 MOV X0, X20
	0x035FC3D4 MOV X2, X31
	0x035FC3D8 BL 0x32333E0
	0x035FC3DC LDR X8, [X19 + 0x38]
	0x035FC3E0 MOV X21, X0
	0x035FC3E4 CBZ X8, 0x35FC404
	0x035FC3E8 LDR X9, [X8]
	0x035FC3EC MOV X0, X8
	0x035FC3F0 LDP X10, X1, [X9 + 0x168]
	0x035FC3F4 BLR X10
	0x035FC3F8 MOV X1, X0
	0x035FC3FC CBNZ X21, 0x35FC414
	0x035FC400 B 0x35FC4A8
	0x035FC404 ADRP X8, 0xAFE000
	0x035FC408 LDR X8, [X8 + 0xD58]
	0x035FC40C LDR X1, [X8]
	0x035FC410 CBZ X21, 0x35FC4A8
	0x035FC414 ADRP X22, 0xB3E000
	0x035FC418 LDR X22, [X22 + 0x4F8]
	0x035FC41C MOV X0, X21
	0x035FC420 MOV X2, X31
	0x035FC424 BL 0x32333E0
	0x035FC428 LDR X1, [X22]
	0x035FC42C MOV X0, X20
	0x035FC430 MOV X2, X31
	0x035FC434 BL 0x32333E0
	0x035FC438 MOV X21, X0
	0x035FC43C MOV X0, X19
	0x035FC440 BL 0x35F6748
	0x035FC444 CBZ X21, 0x35FC4A8
	0x035FC448 ADRP X22, 0xB02000
	0x035FC44C LDR X22, [X22 + 0x6D8]
	0x035FC450 MOV X1, X0
	0x035FC454 MOV X0, X21
	0x035FC458 MOV X2, X31
	0x035FC45C BL 0x3233F90
	0x035FC460 LDR X0, [X19 + 0x38]
	0x035FC464 CBZ X0, 0x35FC47C
	0x035FC468 BL 0x35F6E80
	0x035FC46C MOV X1, X0
	0x035FC470 MOV X0, X20
	0x035FC474 MOV X2, X31
	0x035FC478 BL 0x3233F90
	0x035FC47C LDR X1, [X22]
	0x035FC480 MOV X0, X20
	0x035FC484 MOV X2, X31
	0x035FC488 BL 0x32333E0
	0x035FC48C LDR X8, [X20]
	0x035FC490 MOV X0, X20
	0x035FC494 LDP X20, X19, [X31 + 0x20]
	0x035FC498 LDP X22, X21, [X31 + 0x10]
	0x035FC49C LDP X2, X1, [X8 + 0x168]
	0x035FC4A0 LDR X30, [X31], #0x30
	0x035FC4A4 BR X2
	0x035FC4A8 BL 0x1C16F20
	0x035FC4AC STP X30, X19, [X31 - 0x10]!
	0x035FC4B0 TBNZ X1, 0x1F, 0x35FC4C0
	0x035FC4B4 STR W1, [X0 + 0x20]
	0x035FC4B8 LDP X30, X19, [X31], #0x10
	0x035FC4BC RET
	0x035FC4C0 ADRP X0, 0xAFF000
	0x035FC4C4 LDR X0, [X0 + 0x760]
	0x035FC4C8 BL 0x1C16D08
	0x035FC4CC BL 0x1C16F10
	0x035FC4D0 MOV X1, X31
	0x035FC4D4 MOV X19, X0
	0x035FC4D8 BL 0x3315FB8
	0x035FC4DC ADRP X0, 0xB3E000
	0x035FC4E0 LDR X0, [X0 + 0x500]
	0x035FC4E4 BL 0x1C16D08
	0x035FC4E8 MOV X1, X0
	0x035FC4EC MOV X0, X19
	0x035FC4F0 BL 0x1C16DEC
	0x035FC4F4 LDR X0, [X0 + 0x38]
	0x035FC4F8 RET
	0x035FC4FC STR X1, [X0 + 0x38]
	0x035FC500 RET
	0x035FC504 STP X30, X21, [X31 - 0x20]!
	0x035FC508 STP X20, X19, [X31 + 0x10]
	0x035FC50C ADRP X20, 0xDE4000
	0x035FC510 ADRP X21, 0xB1F000
	0x035FC514 LDRB W8, [X20 + 0x37E]
	0x035FC518 LDR X21, [X21 + 0xB50]
	0x035FC51C MOV X19, X0
	0x035FC520 TBNZ X8, 0x0, 0x35FC538
	0x035FC524 ADRP X0, 0xB1F000
	0x035FC528 LDR X0, [X0 + 0xB50]
	0x035FC52C BL 0x1C16CF4
	0x035FC530 MOVZ W8, 0x1
	0x035FC534 STRB W8, [X20 + 0x37E]
	0x035FC538 LDR X0, [X21]
	0x035FC53C LDR W8, [X0 + 0xE0]
	0x035FC540 CBNZ W8, 0x35FC548
	0x035FC544 BL 0x1C16DFC
	0x035FC548 MOV X0, X19
	0x035FC54C BL 0x36030EC
	0x035FC550 MOVZ W8, 0x2
	0x035FC554 STR W8, [X19 + 0x18]
	0x035FC558 LDP X20, X19, [X31 + 0x10]
	0x035FC55C LDP X30, X21, [X31], #0x20
	0x035FC560 RET
	0x035FC564 LDR W8, [X0 + 0x20]
	0x035FC568 SUB W8, W8, 0xC8
	0x035FC56C CMP W8, 0x64
	0x035FC570 CSET W0, CC
	0x035FC574 RET
	0x035FC578 LDR X8, [X0 + 0x18]
	0x035FC57C CBZ X8, 0x35FC588
	0x035FC580 MOV X0, X8
	0x035FC584 RET
	0x035FC588 LDR W0, [X0 + 0x20]
	0x035FC58C MOV X1, X31
	0x035FC590 B 0x366A9F8
	0x035FC594 STR X1, [X0 + 0x18]
	0x035FC598 RET
	0x035FC59C STR X1, [X0 + 0x40]
	0x035FC5A0 RET
	0x035FC5A4 LDR W0, [X0 + 0x20]
	0x035FC5A8 RET
	0x035FC5AC STR X30, [X31 - 0x20]!
	0x035FC5B0 STP X20, X19, [X31 + 0x10]
	0x035FC5B4 ADRP X20, 0xDE4000
	0x035FC5B8 LDRB W8, [X20 + 0x339]
	0x035FC5BC MOV X19, X0
	0x035FC5C0 TBNZ X8, 0x0, 0x35FC5D8
	0x035FC5C4 ADRP X0, 0xB3E000
	0x035FC5C8 LDR X0, [X0 + 0x168]
	0x035FC5CC BL 0x1C16CF4
	0x035FC5D0 MOVZ W8, 0x1
	0x035FC5D4 STRB W8, [X20 + 0x339]
	0x035FC5D8 LDR X0, [X19 + 0x28]
	0x035FC5DC CBNZ X0, 0x35FC604
	0x035FC5E0 ADRP X19, 0xB3E000
	0x035FC5E4 LDR X19, [X19 + 0x168]
	0x035FC5E8 LDR X0, [X19]
	0x035FC5EC LDR W8, [X0 + 0xE0]
	0x035FC5F0 CBNZ W8, 0x35FC5FC
	0x035FC5F4 BL 0x1C16DFC
	0x035FC5F8 LDR X0, [X19]
	0x035FC5FC LDR X8, [X0 + 0xB8]
	0x035FC600 LDR X0, [X8 + 0x10]
	0x035FC604 LDP X20, X19, [X31 + 0x10]
	0x035FC608 LDR X30, [X31], #0x20
	0x035FC60C RET
	0x035FC610 LDR X8, [X0]
	0x035FC614 MOVZ W1, 0x1
	0x035FC618 LDP X3, X2, [X8 + 0x188]
	0x035FC61C BR X3
	0x035FC620 TBZ X1, 0x0, 0x35FC630
	0x035FC624 LDRB W9, [X0 + 0x30]
	0x035FC628 MOV X8, X0
	0x035FC62C CBZ W9, 0x35FC634
	0x035FC630 RET
	0x035FC634 LDR X0, [X8 + 0x38]
	0x035FC638 MOVZ W9, 0x1
	0x035FC63C STRB W9, [X8 + 0x30]
	0x035FC640 CBZ X0, 0x35FC630
	0x035FC644 LDR X8, [X0]
	0x035FC648 MOVZ W1, 0x1
	0x035FC64C LDP X3, X2, [X8 + 0x188]
	0x035FC650 BR X3
	0x035FC654 STP X30, X23, [X31 - 0x30]!
	0x035FC658 STP X22, X21, [X31 + 0x10]
	0x035FC65C STP X20, X19, [X31 + 0x20]
	0x035FC660 ADRP X20, 0xDE4000
	0x035FC664 ADRP X21, 0xAF7000
	0x035FC668 LDRB W8, [X20 + 0x33A]
	0x035FC66C LDR X21, [X21 + 0x8F0]
	0x035FC670 MOV X19, X0
	0x035FC674 TBNZ X8, 0x0, 0x35FC6E0
	0x035FC678 ADRP X0, 0xAF7000
	0x035FC67C LDR X0, [X0 + 0x8F0]
	0x035FC680 BL 0x1C16CF4
	0x035FC684 ADRP X0, 0xB02000
	0x035FC688 LDR X0, [X0 + 0x6D8]
	0x035FC68C BL 0x1C16CF4
	0x035FC690 ADRP X0, 0xB3E000
	0x035FC694 LDR X0, [X0 + 0x508]
	0x035FC698 BL 0x1C16CF4
	0x035FC69C ADRP X0, 0xB3E000
	0x035FC6A0 LDR X0, [X0 + 0x4E0]
	0x035FC6A4 BL 0x1C16CF4
	0x035FC6A8 ADRP X0, 0xB3E000
	0x035FC6AC LDR X0, [X0 + 0x510]
	0x035FC6B0 BL 0x1C16CF4
	0x035FC6B4 ADRP X0, 0xAFE000
	0x035FC6B8 LDR X0, [X0 + 0xD58]
	0x035FC6BC BL 0x1C16CF4
	0x035FC6C0 ADRP X0, 0xB3E000
	0x035FC6C4 LDR X0, [X0 + 0x4F0]
	0x035FC6C8 BL 0x1C16CF4
	0x035FC6CC ADRP X0, 0xB3E000
	0x035FC6D0 LDR X0, [X0 + 0x4F8]
	0x035FC6D4 BL 0x1C16CF4
	0x035FC6D8 MOVZ W8, 0x1
	0x035FC6DC STRB W8, [X20 + 0x33A]
	0x035FC6E0 LDR X0, [X21]
	0x035FC6E4 BL 0x1C16F10
	0x035FC6E8 MOV X1, X31
	0x035FC6EC MOV X20, X0
	0x035FC6F0 BL 0x3231AC4
	0x035FC6F4 CBZ X20, 0x35FC88C
	0x035FC6F8 ADRP X8, 0xB3E000
	0x035FC6FC LDR X8, [X8 + 0x510]
	0x035FC700 MOV X0, X20
	0x035FC704 MOV X2, X31
	0x035FC708 LDR X1, [X8]
	0x035FC70C BL 0x32333E0
	0x035FC710 CBZ X0, 0x35FC88C
	0x035FC714 LDR W1, [X19 + 0x20]
	0x035FC718 ADRP X21, 0xB3E000
	0x035FC71C LDR X21, [X21 + 0x508]
	0x035FC720 MOV X2, X31
	0x035FC724 BL 0x3233E30
	0x035FC728 LDR X1, [X21]
	0x035FC72C MOV X0, X20
	0x035FC730 MOV X2, X31
	0x035FC734 BL 0x32333E0
	0x035FC738 LDR X8, [X19 + 0x18]
	0x035FC73C MOV X21, X0
	0x035FC740 CBNZ X8, 0x35FC754

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xDE5000
	009 Move W8, [X20+807]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xB3F000
	016 Move X0, [X0+1160]
	017 Call 0x1C17CF4
	018 Move X0, 0xAFB000
	019 Move X0, [X0+352]
	020 Call 0x1C17CF4
	021 Move X0, 0xAFB000
	022 Move X0, [X0+304]
	023 Call 0x1C17CF4
	024 Move X0, 0xAFA000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+807], W8
	029 Move [X31], X31
	030 Move [X31+8], X31
	031 Move X23, 0xAFB000
	032 Move W8, [X19]
	033 Move X20, [X19+32]
	034 Move X23, [X23+304]
	035 Compare W8, 0
	036 JumpIfEqual {73}
	037 Compare X20, 0
	038 JumpIfEqual {200}
	039 Move TEMP, 0x80000000
	040 Not TEMP
	041 Move W1, TEMP
	042 Move X0, X20
	043 Call HttpContent.LoadIntoBufferAsync, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {201}
	046 Move W1, W31
	047 Move X2, X31
	048 Call Task.ConfigureAwait, X0, X1
	049 Move [X31], X0
	050 Move [X31+8], X1
	051 Add X0, X31, 0
	052 Move X1, X31
	053 Call ConfiguredTaskAwaiter.get_IsCompleted, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {81}
	058 Move [X19], W31
	059 Move V0, [X31]
	060 Move [X19+40], V0
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X8, 0xB3F000
	067 Move X8, [X8+1160]
	068 Add X0, X19, 8
	069 Move X3, [X8]
	070 Add X1, X31, 0
	071 Move X2, X19
	072 Call AsyncTaskMethodBuilder`1<Object>.AwaitUnsafeOnCompleted, X0, X1, X2
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W8, TEMP
	077 Move [X31], V0
	078 Move [X19+40], X31
	079 Move [X19+48], X31
	080 Move [X19], W8
	081 Add X0, X31, 0
	082 Move X1, X31
	083 Call ConfiguredTaskAwaiter.GetResult, X0
	084 Compare X20, 0
	085 JumpIfEqual {198}
	086 Move X0, [X20+16]
	087 Compare X0, 0
	088 JumpIfEqual {199}
	089 Move X8, [X0]
	090 Move X9, [X8+488]
	091 Move X1, [X8+496]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {170}
	095 Move X0, [X20+16]
	096 Compare X0, 0
	097 JumpIfEqual {202}
	098 Move X8, [X0]
	099 Move X1, [X8+960]
	100 Move X9, [X8+952]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X21, X0
	103 Move X0, [X20+16]
	104 Compare X0, 0
	105 JumpIfEqual {203}
	106 Move X8, [X0]
	107 Move X9, [X8+488]
	108 Move X1, [X8+496]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move [X31+28], W31
	111 Move X22, X0
	112 Move X0, [X20+32]
	113 Compare X0, 0
	114 JumpIfEqual {149}
	115 Call HttpContentHeaders.get_ContentType, X0
	116 Compare X0, 0
	117 JumpIfEqual {149}
	118 Move X0, [X20+32]
	119 Compare X0, 0
	120 JumpIfEqual {204}
	121 Call HttpContentHeaders.get_ContentType, X0
	122 Compare X0, 0
	123 JumpIfEqual {205}
	124 Call MediaTypeHeaderValue.get_CharSet, X0
	125 Compare X0, 0
	126 JumpIfEqual {149}
	127 Move X0, [X20+32]
	128 Compare X0, 0
	129 JumpIfEqual {207}
	130 Call HttpContentHeaders.get_ContentType, X0
	131 Compare X0, 0
	132 JumpIfEqual {208}
	133 Call MediaTypeHeaderValue.get_CharSet, X0
	134 Move X1, X31
	135 Call Encoding.GetEncoding, X0
	136 Move X20, X0
	137 Compare X0, 0
	138 JumpIfEqual {209}
	139 Move X8, [X20]
	140 Move X9, [X8+408]
	141 Move X1, [X8+416]
	142 Move X0, X20
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X2, X0
	145 Move X0, X21
	146 Move W1, W22
	147 Call HttpContent.StartsWith, X0, X1, X2
	148 Move [X31+28], W0
	149 Add X2, X31, 28
	150 Move X0, X21
	151 Move W1, W22
	152 Call HttpContent.GetEncodingFromBuffer, X0, X1, X2
	153 Move X20, X0
	154 Compare X0, 0
	155 JumpIfNotEqual {161}
	156 Move X0, X31
	157 Call Encoding.get_UTF8
	158 Move X20, X0
	159 Compare X0, 0
	160 JumpIfEqual {206}
	161 Move X8, [X20]
	162 Move W2, [X31+28]
	163 Move X9, [X8+904]
	164 Move X4, [X8+912]
	165 Subtract W3, W22, W2
	166 Move X0, X20
	167 Move X1, X21
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X20, X0
	170 Move X8, 0xAFA000
	171 Move X8, [X8+632]
	172 Move X8, [X8]
	173 Move X8, [X8+184]
	174 Move X20, [X8]
	175 Move TEMP, 1
	176 Not TEMP
	177 Move W8, TEMP
	178 Move [X19+8], W8
	179 Move X0, [X23]
	180 Move X21, 0xAFB000
	181 Move W8, [X0+224]
	182 Move X21, [X21+352]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X2, [X21]
	187 Move X0, X19
	188 Move X1, X20
	189 Call AsyncTaskMethodBuilder`1<Object>.SetResult, X0, X1
	190 Move X20, [X31+64]
	191 Move X19, [X31+72]
	192 Move X22, [X31+48]
	193 Move X21, [X31+56]
	194 Move X30, [X31+32]
	195 Move X23, [X31+40]
	196 Add X31, X31, 80
	197 Return 
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Move X20, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X0, X20
	213 Call 0x3EB2AD0
	214 Move X20, X0
	215 Move X0, 0xAF8000
	216 Move X0, [X0+2000]
	217 Call 0x1C17D08
	218 Move X8, [X20]
	219 Move X1, [X8]
	220 Call 0x1C18270
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {245}
	225 Move X20, [X20]
	226 Call 0x3EB2AE0
	227 Move TEMP, 1
	228 Not TEMP
	229 Move W8, TEMP
	230 Move [X19+8], W8
	231 Move X0, 0xAFB000
	232 Move X0, [X0+304]
	233 Call 0x1C17D08
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, 0xAFB000
	239 Move X0, [X0+576]
	240 Call 0x1C17D08
	241 Move X2, X0
	242 Move X0, X19
	243 Move X1, X20
	244 Call AsyncTaskMethodBuilder`1<Object>.SetException, X0, X1
	245 Move W0, 8
	246 Call 0x3EB2AF0
	247 Move X8, [X20]
	248 Move [X0], X8
	249 Move X1, 0x8B9000
	250 Add X1, X1, 3672
	251 Move X2, X31
	252 Call 0x3EB2B00
	253 Move X20, X0
	254 Call 0x3EB2AE0
	255 Move X0, X20
	256 Call 0x1D2D690
	257 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x035FC8B8 CMP W21, 0x0
	0x035FC8BC B.LE 0x35FC930
	0x035FC8C0 STR X20, [X19 + 0x28]
	0x035FC8C4 STR W21, [X19 + 0x30]
	0x035FC8C8 LDR X8, [X20]
	0x035FC8CC MOV X0, X20
	0x035FC8D0 LDP X9, X1, [X8 + 0x1B8]
	0x035FC8D4 BLR X9
	0x035FC8D8 TBZ X0, 0x0, 0x35FC8F0
	0x035FC8DC LDR X8, [X20]
	0x035FC8E0 MOV X0, X20
	0x035FC8E4 LDP X9, X1, [X8 + 0x1F8]
	0x035FC8E8 BLR X9
	0x035FC8EC STR X0, [X19 + 0x40]
	0x035FC8F0 LDP X20, X19, [X31 + 0x10]
	0x035FC8F4 LDP X30, X21, [X31], #0x20
	0x035FC8F8 RET
	0x035FC8FC ADRP X0, 0xAFC000
	0x035FC900 LDR X0, [X0 + 0x528]
	0x035FC904 BL 0x1C16D08
	0x035FC908 BL 0x1C16F10
	0x035FC90C MOV X19, X0
	0x035FC910 ADRP X0, 0xB3E000
	0x035FC914 LDR X0, [X0 + 0x390]
	0x035FC918 BL 0x1C16D08
	0x035FC91C MOV X1, X0
	0x035FC920 MOV X0, X19
	0x035FC924 MOV X2, X31
	0x035FC928 BL 0x330E100
	0x035FC92C B 0x35FC960
	0x035FC930 ADRP X0, 0xAFF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDE5000
	007 Move X21, 0xAFB000
	008 Move W8, [X22+808]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xAFB000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0xAFB000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+808], W8
	024 Move X0, [X21]
	025 Move X21, 0xAFB000
	026 Move W8, [X0+224]
	027 Move X21, [X21+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X2, [X21]
	032 Add X0, X20, 8
	033 Move X1, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Call AsyncTaskMethodBuilder`1<Object>.SetStateMachine, X0, X1
	040 Return 

