Type: System.Net.Http.HttpClient

Method: System.Void .ctor(System.Net.Http.HttpMessageHandler handler)

Disassembly:
	0x035FA8E0 BLR X8
	0x035FA8E4 CBNZ X21, 0x35FA954

ISIL:
	001 Move W2, 1

Method: System.Void .ctor(System.Net.Http.HttpMessageHandler handler, System.Boolean disposeHandler)

Disassembly:
	0x035FA8E8 CMP W22, 0x1
	0x035FA8EC B.NE 0x35FA974
	0x035FA8F0 MOV X0, X20
	0x035FA8F4 BL 0x3EB1AD0
	0x035FA8F8 MOV X20, X0
	0x035FA8FC ADRP X0, 0xAF9000
	0x035FA900 LDR X0, [X0 + 0x7D0]
	0x035FA904 BL 0x1C16D08
	0x035FA908 LDR X8, [X20]
	0x035FA90C LDR X1, [X8]
	0x035FA910 BL 0x1C17270
	0x035FA914 TBZ X0, 0x0, 0x35FA934
	0x035FA918 LDR X8, [X20]
	0x035FA91C MOVZ W9, 0x1
	0x035FA920 STR W9, [X31 + 0x8]
	0x035FA924 STR X8, [X31]
	0x035FA928 BL 0x3EB1AE0
	0x035FA92C MOV X8, X31
	0x035FA930 B 0x35FA680
	0x035FA934 MOVZ W0, 0x8
	0x035FA938 BL 0x3EB1AF0
	0x035FA93C LDR X8, [X20]
	0x035FA940 STR X8, [X0]
	0x035FA944 ADRP X1, 0x8BA000
	0x035FA948 ADD X1, X1, 0xE58
	0x035FA94C MOV X2, X31
	0x035FA950 BL 0x3EB1B00
	0x035FA954 MOV X0, X21
	0x035FA958 BL 0x1C16F18
	0x035FA95C MOV X22, X1
	0x035FA960 MOV X20, X0
	0x035FA964 TBZ X23, 0x1F, 0x35FA8E4
	0x035FA968 B 0x35FA87C
	0x035FA96C MOV X20, X0
	0x035FA970 BL 0x3EB1AE0
	0x035FA974 MOV X0, X20
	0x035FA978 BL 0x1D2C690
	0x035FA97C BL 0x1990590
	0x035FA980 STR X30, [X31 - 0x30]!
	0x035FA984 STP X22, X21, [X31 + 0x10]
	0x035FA988 STP X20, X19, [X31 + 0x20]
	0x035FA98C ADRP X22, 0xDE6000
	0x035FA990 ADRP X21, 0xB40000
	0x035FA994 LDRB W8, [X22 + 0x31E]
	0x035FA998 LDR X21, [X21 + 0x230]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xDE7000
	008 Move X22, 0xAFC000
	009 Move W8, [X23+792]
	010 Move X22, [X22+2624]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xAFC000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move X0, 0xAFC000
	022 Move X0, [X0+2624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+792], W8
	026 Move X23, 0xAFC000
	027 Move X23, [X23+2640]
	028 And W2, W21, 1
	029 Move X0, X19
	030 Move X1, X20
	031 Call HttpMessageInvoker..ctor, X0, X1, X2
	032 Move TEMP, 0x80000000
	033 Not TEMP
	034 Move W8, TEMP
	035 Move [X19+64], X8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X8, [X8]
	044 Move [X19+72], X8
	045 Move X0, [X23]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X20, X0
	049 Call CancellationTokenSource..ctor, X0
	050 Move [X19+40], X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 

Method: System.Int64 get_MaxResponseContentBufferSize()

Disassembly:
	0x035FAA1C MOV X20, X0
	0x035FAA20 TBNZ X8, 0x0, 0x35FAA38

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Timeout(System.TimeSpan value)

Disassembly:
	0x035FAA24 ADRP X0, 0xB21000
	0x035FAA28 LDR X0, [X0 + 0xB50]
	0x035FAA2C BL 0x1C16CF4
	0x035FAA30 MOVZ W8, 0x1
	0x035FAA34 STRB W8, [X21 + 0x35D]
	0x035FAA38 LDR X0, [X22]
	0x035FAA3C LDR W8, [X0 + 0xE0]
	0x035FAA40 CBNZ W8, 0x35FAA48
	0x035FAA44 BL 0x1C16DFC
	0x035FAA48 MOV X0, X20
	0x035FAA4C BL 0x36030EC
	0x035FAA50 MOVZ W8, 0x4
	0x035FAA54 STR W8, [X20 + 0x18]
	0x035FAA58 STR X19, [X20 + 0x20]
	0x035FAA5C LDP X20, X19, [X31 + 0x20]
	0x035FAA60 LDP X22, X21, [X31 + 0x10]
	0x035FAA64 LDR X30, [X31], #0x30
	0x035FAA68 RET
	0x035FAA6C SUB X31, X31, 0x30
	0x035FAA70 STR X30, [X31 + 0x10]
	0x035FAA74 STP X20, X19, [X31 + 0x20]
	0x035FAA78 ADRP X20, 0xDE6000
	0x035FAA7C LDRB W8, [X20 + 0x320]
	0x035FAA80 MOV X19, X0
	0x035FAA84 TBNZ X8, 0x0, 0x35FAA9C
	0x035FAA88 ADRP X0, 0xB3D000
	0x035FAA8C LDR X0, [X0 + 0x738]
	0x035FAA90 BL 0x1C16CF4
	0x035FAA94 MOVZ W8, 0x1
	0x035FAA98 STRB W8, [X20 + 0x320]
	0x035FAA9C LDR X0, [X19 + 0x10]
	0x035FAAA0 CBZ X0, 0x35FAAD0
	0x035FAAA4 LDR X8, [X0]
	0x035FAAA8 ADRP X19, 0xB3D000
	0x035FAAAC LDP X9, X1, [X8 + 0x1E8]
	0x035FAAB0 LDR X19, [X19 + 0x738]
	0x035FAAB4 BLR X9
	0x035FAAB8 LDR X2, [X19]
	0x035FAABC MOV X1, X0
	0x035FAAC0 ADD X0, X31, 0x0
	0x035FAAC4 STP X31, X31, [X31]
	0x035FAAC8 BL 0x2434988
	0x035FAACC B 0x35FAAD4
	0x035FAAD0 STP X31, X31, [X31]
	0x035FAAD4 LDP X0, X1, [X31]
	0x035FAAD8 LDP X20, X19, [X31 + 0x20]
	0x035FAADC LDR X30, [X31 + 0x10]
	0x035FAAE0 ADD X31, X31, 0x30
	0x035FAAE4 RET
	0x035FAAE8 STP X30, X19, [X31 - 0x10]!
	0x035FAAEC CBZ X1, 0x35FAB18
	0x035FAAF0 LDR X8, [X0 + 0x10]
	0x035FAAF4 CBZ X8, 0x35FAB08
	0x035FAAF8 MOV X0, X8
	0x035FAAFC MOV X2, X31
	0x035FAB00 LDP X30, X19, [X31], #0x10
	0x035FAB04 B 0x32EFDA8
	0x035FAB08 LDR X8, [X0]
	0x035FAB0C LDP X4, X3, [X8 + 0x198]
	0x035FAB10 LDP X30, X19, [X31], #0x10
	0x035FAB14 BR X4
	0x035FAB18 ADRP X0, 0xAFE000
	0x035FAB1C LDR X0, [X0 + 0x528]
	0x035FAB20 BL 0x1C16D08
	0x035FAB24 BL 0x1C16F10
	0x035FAB28 MOV X19, X0
	0x035FAB2C ADRP X0, 0xB28000
	0x035FAB30 LDR X0, [X0 + 0xD38]
	0x035FAB34 BL 0x1C16D08
	0x035FAB38 MOV X1, X0
	0x035FAB3C MOV X0, X19
	0x035FAB40 MOV X2, X31
	0x035FAB44 BL 0x330E100
	0x035FAB48 ADRP X0, 0xB40000
	0x035FAB4C LDR X0, [X0 + 0x448]
	0x035FAB50 BL 0x1C16D08
	0x035FAB54 MOV X1, X0
	0x035FAB58 MOV X0, X19
	0x035FAB5C BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDE7000
	007 Move [X31+8], X1
	008 Move X21, 0xAFD000
	009 Move W8, [X22+793]
	010 Move X21, [X21+296]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xAFC000
	018 Move X0, [X0+1392]
	019 Call 0x1C17CF4
	020 Move X0, 0xAFD000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+793], W8
	025 Move X0, [X21]
	026 Move X22, 0xAFC000
	027 Move W8, [X0+224]
	028 Move X22, [X22+1392]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X22]
	034 Move X9, [X0+184]
	035 Move W10, [X8+224]
	036 Move X21, [X9]
	037 Compare W10, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X21
	043 Move X2, X31
	044 Call TimeSpan.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {76}
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 Move X8, [X0+184]
	056 Move X0, X20
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call TimeSpan.op_LessThanOrEqual, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {83}
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X0, X31, 8
	070 Move X1, X31
	071 Call TimeSpan.get_TotalMilliseconds, X0
	072 Move X8, -45137920
	073 Move V1, [X8+2744]
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move X20, [X31+8]
	076 Move [X19+72], X20
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Move X0, 0xB02000
	084 Move X0, [X0+1888]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X1, X31
	088 Move X19, X0
	089 Call ArgumentOutOfRangeException..ctor, X0
	090 Move X0, 0xB41000
	091 Move X0, [X0+976]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x035FAB60 STP X30, X21, [X31 - 0x20]!
	0x035FAB64 STP X20, X19, [X31 + 0x10]
	0x035FAB68 ADRP X20, 0xDE6000
	0x035FAB6C ADRP X21, 0xB40000
	0x035FAB70 LDRB W8, [X20 + 0x321]
	0x035FAB74 LDR X21, [X21 + 0x450]
	0x035FAB78 MOV X19, X0
	0x035FAB7C TBNZ X8, 0x0, 0x35FAB94
	0x035FAB80 ADRP X0, 0xB40000
	0x035FAB84 LDR X0, [X0 + 0x450]
	0x035FAB88 BL 0x1C16CF4
	0x035FAB8C MOVZ W8, 0x1
	0x035FAB90 STRB W8, [X20 + 0x321]
	0x035FAB94 LDR X0, [X21]
	0x035FAB98 BL 0x1C16F10
	0x035FAB9C MOV X1, X31
	0x035FABA0 MOV X20, X0
	0x035FABA4 BL 0x32E23B4
	0x035FABA8 STR X19, [X20 + 0x50]
	0x035FABAC MOV X0, X20
	0x035FABB0 LDP X20, X19, [X31 + 0x10]
	0x035FABB4 LDP X30, X21, [X31], #0x20
	0x035FABB8 RET
	0x035FABBC STR X30, [X31 - 0x20]!
	0x035FABC0 STP X20, X19, [X31 + 0x10]
	0x035FABC4 MOV X19, X1
	0x035FABC8 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, X1
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {35}
	007 Move W8, [X0+48]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {23}
	011 Move X0, [X19+40]
	012 Move W8, 1
	013 Move [X19+48], W8
	014 Compare X0, 0
	015 JumpIfEqual {38}
	016 Move X1, X31
	017 Call CancellationTokenSource.Cancel, X0
	018 Move X0, [X19+40]
	019 Compare X0, 0
	020 JumpIfEqual {38}
	021 Move X1, X31
	022 Call CancellationTokenSource.Dispose, X0
	023 Move W8, [X19+24]
	024 Compare W8, 0
	025 JumpIfEqual {35}
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {35}
	029 Move X8, [X0]
	030 Move W1, 1
	031 Move X9, [X8+392]
	032 Move X2, [X8+400]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move [X19+16], X31
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 
	038 Call 0x1C17F20

Method: System.Threading.Tasks.Task`1<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035FAC04 LDR X8, [X0 + 0x10]
	0x035FAC08 MOVZ W9, 0x1
	0x035FAC0C STRB W9, [X0 + 0x18]

ISIL:
	001 Move X3, X2
	002 Move W2, W31

Method: System.Threading.Tasks.Task`1<System.Net.Http.HttpResponseMessage> SendAsync(System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035FAC10 CBZ X8, 0x35FAC00
	0x035FAC14 MOV X0, X8
	0x035FAC18 MOV X1, X31
	0x035FAC1C B 0x32F02B8
	0x035FAC20 MOVN W1, 0x80000000
	0x035FAC24 B 0x35F8FB4
	0x035FAC28 SUB X31, X31, 0x60
	0x035FAC2C STP X30, X21, [X31 + 0x40]
	0x035FAC30 STP X20, X19, [X31 + 0x50]
	0x035FAC34 ADRP X21, 0xDE6000
	0x035FAC38 ADRP X20, 0xAFC000
	0x035FAC3C LDRB W8, [X21 + 0x323]
	0x035FAC40 LDR X20, [X20 + 0x130]
	0x035FAC44 MOV X19, X0
	0x035FAC48 TBNZ X8, 0x0, 0x35FAC84
	0x035FAC4C ADRP X0, 0xAFC000
	0x035FAC50 LDR X0, [X0 + 0x138]
	0x035FAC54 BL 0x1C16CF4
	0x035FAC58 ADRP X0, 0xB40000
	0x035FAC5C LDR X0, [X0 + 0x458]
	0x035FAC60 BL 0x1C16CF4
	0x035FAC64 ADRP X0, 0xAFC000
	0x035FAC68 LDR X0, [X0 + 0x148]
	0x035FAC6C BL 0x1C16CF4
	0x035FAC70 ADRP X0, 0xAFC000
	0x035FAC74 LDR X0, [X0 + 0x130]
	0x035FAC78 BL 0x1C16CF4
	0x035FAC7C MOVZ W8, 0x1
	0x035FAC80 STRB W8, [X21 + 0x323]
	0x035FAC84 LDR X0, [X20]
	0x035FAC88 MOVI V0.2D, 0x0
	0x035FAC8C STP V0, V0, [X31 + 0x10]
	0x035FAC90 STR V0, [X31]
	0x035FAC94 STR X31, [X31 + 0x30]
	0x035FAC98 STR X19, [X31 + 0x20]
	0x035FAC9C ADRP X19, 0xAFC000
	0x035FACA0 ADRP X21, 0xB40000
	0x035FACA4 ADRP X20, 0xAFC000
	0x035FACA8 LDR W8, [X0 + 0xE0]
	0x035FACAC LDR X19, [X19 + 0x138]
	0x035FACB0 LDR X21, [X21 + 0x458]
	0x035FACB4 LDR X20, [X20 + 0x148]
	0x035FACB8 CBNZ W8, 0x35FACC0
	0x035FACBC BL 0x1C16DFC
	0x035FACC0 LDR X0, [X19]
	0x035FACC4 ADD X8, X31, 0x0
	0x035FACC8 ORR X19, X8, 0xF
	0x035FACCC MOV X8, X19
	0x035FACD0 BL 0x263221C
	0x035FACD4 LDR X2, [X21]
	0x035FACD8 MOVN W8, 0x0
	0x035FACDC ADD X1, X31, 0x0
	0x035FACE0 MOV X0, X19
	0x035FACE4 STR W8, [X31]
	0x035FACE8 BL 0x1FCFA14
	0x035FACEC LDR X1, [X20]
	0x035FACF0 MOV X0, X19
	0x035FACF4 BL 0x2632230
	0x035FACF8 LDP X20, X19, [X31 + 0x50]
	0x035FACFC LDP X30, X21, [X31 + 0x40]
	0x035FAD00 ADD X31, X31, 0x60
	0x035FAD04 RET
	0x035FAD08 STP X30, X25, [X31 - 0x40]!
	0x035FAD0C STP X24, X23, [X31 + 0x10]
	0x035FAD10 STP X22, X21, [X31 + 0x20]
	0x035FAD14 STP X20, X19, [X31 + 0x30]
	0x035FAD18 ADRP X22, 0xDE6000
	0x035FAD1C ADRP X23, 0xB40000
	0x035FAD20 LDRB W8, [X22 + 0x324]
	0x035FAD24 LDR X23, [X23 + 0x460]
	0x035FAD28 MOV X19, X2
	0x035FAD2C MOV W20, W1
	0x035FAD30 MOV X21, X0
	0x035FAD34 TBNZ X8, 0x0, 0x35FAD4C
	0x035FAD38 ADRP X0, 0xB40000
	0x035FAD3C LDR X0, [X0 + 0x460]
	0x035FAD40 BL 0x1C16CF4
	0x035FAD44 MOVZ W8, 0x1
	0x035FAD48 STRB W8, [X22 + 0x324]
	0x035FAD4C LDR X0, [X23]
	0x035FAD50 MOVZ W1, 0x3
	0x035FAD54 BL 0x1C16D6C
	0x035FAD58 MOV X22, X0
	0x035FAD5C MOV X0, X31
	0x035FAD60 BL 0x3241948
	0x035FAD64 CBZ X22, 0x35FAE70
	0x035FAD68 MOV X23, X0
	0x035FAD6C CBZ X0, 0x35FAD84
	0x035FAD70 LDR X8, [X22]
	0x035FAD74 MOV X0, X23
	0x035FAD78 LDR X1, [X8 + 0x40]
	0x035FAD7C BL 0x1C16E00
	0x035FAD80 CBZ X0, 0x35FAE74
	0x035FAD84 LDR W8, [X22 + 0x18]
	0x035FAD88 CBZ W8, 0x35FAE6C
	0x035FAD8C MOV X0, X31
	0x035FAD90 STR X23, [X22 + 0x20]
	0x035FAD94 BL 0x3242E20
	0x035FAD98 MOV X23, X0
	0x035FAD9C CBZ X0, 0x35FADB4
	0x035FADA0 LDR X8, [X22]
	0x035FADA4 MOV X0, X23
	0x035FADA8 LDR X1, [X8 + 0x40]
	0x035FADAC BL 0x1C16E00
	0x035FADB0 CBZ X0, 0x35FAE74
	0x035FADB4 LDR W8, [X22 + 0x18]
	0x035FADB8 CMP W8, 0x1
	0x035FADBC B.LS 0x35FAE6C
	0x035FADC0 MOV X0, X31
	0x035FADC4 STR X23, [X22 + 0x28]
	0x035FADC8 BL 0x3242C30
	0x035FADCC MOV X23, X0
	0x035FADD0 CBZ X0, 0x35FADE8
	0x035FADD4 LDR X8, [X22]
	0x035FADD8 MOV X0, X23
	0x035FADDC LDR X1, [X8 + 0x40]
	0x035FADE0 BL 0x1C16E00
	0x035FADE4 CBZ X0, 0x35FAE74
	0x035FADE8 LDR X8, [X22 + 0x18]
	0x035FADEC CMP W8, 0x2
	0x035FADF0 B.LS 0x35FAE6C
	0x035FADF4 CMP W8, 0x1
	0x035FADF8 STR X23, [X22 + 0x30]
	0x035FADFC B.LT 0x35FAE50
	0x035FAE00 MOV X24, X31
	0x035FAE04 ADD X25, X22, 0x20
	0x035FAE08 CMP W24, W8
	0x035FAE0C B.CS 0x35FAE6C
	0x035FAE10 LDR X23, [X25, X24, LSL #3]
	0x035FAE14 CBZ X23, 0x35FAE70
	0x035FAE18 LDR X8, [X23]
	0x035FAE1C MOV X0, X23
	0x035FAE20 LDP X9, X1, [X8 + 0x198]
	0x035FAE24 BLR X9
	0x035FAE28 MOV X2, X0
	0x035FAE2C MOV X0, X21
	0x035FAE30 MOV W1, W20
	0x035FAE34 BL 0x35FAE80
	0x035FAE38 STR W0, [X19]
	0x035FAE3C CBNZ W0, 0x35FAE54
	0x035FAE40 LDR X8, [X22 + 0x18]
	0x035FAE44 ADD X24, X24, 0x1
	0x035FAE48 CMP W24, W8
	0x035FAE4C B.LT 0x35FAE08
	0x035FAE50 MOV X23, X31
	0x035FAE54 MOV X0, X23
	0x035FAE58 LDP X20, X19, [X31 + 0x30]
	0x035FAE5C LDP X22, X21, [X31 + 0x20]
	0x035FAE60 LDP X24, X23, [X31 + 0x10]
	0x035FAE64 LDP X30, X25, [X31], #0x40
	0x035FAE68 RET
	0x035FAE6C BL 0x1C16F28
	0x035FAE70 BL 0x1C16F20
	0x035FAE74 BL 0x1C16F44
	0x035FAE78 MOV X1, X31
	0x035FAE7C BL 0x1C16DEC
	0x035FAE80 STR X30, [X31 - 0x10]!
	0x035FAE84 CBZ X2, 0x35FAEF0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xDE7000
	010 Move W8, [X23+794]
	011 Move X19, X3
	012 Move W20, W2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xAFC000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0xAFB000
	023 Move X0, [X0+3784]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+794], W8
	027 Compare X21, 0
	028 JumpIfEqual {159}
	029 Move W8, [X21+48]
	030 Compare W8, 0
	031 JumpIfNotEqual {171}
	032 Move X25, 0xAFC000
	033 Move X25, [X25+2600]
	034 Move W8, 1
	035 Move [X21+48], W8
	036 Move X23, [X21+40]
	037 Move X0, [X25]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Move X2, X31
	045 Call Uri.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {66}
	050 Move X0, [X25]
	051 Move X23, [X22+32]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X23
	057 Move X1, X31
	058 Move X2, X31
	059 Call Uri.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {178}
	064 Move X1, [X22+32]
	065 Move X0, X21
	066 Compare X23, 0
	067 JumpIfEqual {158}
	068 Move X0, X23
	069 Move X1, X31
	070 Call Uri.get_IsAbsoluteUri, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {110}
	075 Move X0, X23
	076 Move X1, X31
	077 Call Uri.get_Scheme, X0
	078 Move X8, [X25]
	079 Move X24, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {86}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X8, [X25]
	086 Move X8, [X8+184]
	087 Move X0, X24
	088 Move X2, X31
	089 Move X1, [X8]
	090 Call String.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {135}
	095 Move X0, X23
	096 Move X1, X31
	097 Call Uri.get_OriginalString, X0
	098 Compare X0, 0
	099 JumpIfEqual {158}
	100 Move X8, 0xAFB000
	101 Move X8, [X8+3784]
	102 Move W2, 4
	103 Move X3, X31
	104 Move X1, [X8]
	105 Call String.StartsWith, X0, X1, X2
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {135}
	110 Move X0, [X25]
	111 Move X24, [X22+32]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X24
	117 Move X1, X31
	118 Move X2, X31
	119 Call Uri.op_Equality, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {178}
	124 Move X0, [X25]
	125 Move X24, [X22+32]
	126 Call 0x1C17F10
	127 Move X1, X24
	128 Move X2, X23
	129 Move X3, X31
	130 Move X25, X0
	131 Call Uri..ctor, X0, X1, X2
	132 Move X0, X21
	133 Move X1, X25
	134 Call HttpRequestMessage.set_RequestUri, X0, X1
	135 Move X8, [X22+56]
	136 Compare X8, 0
	137 JumpIfEqual {144}
	138 Move X0, X21
	139 Call HttpRequestMessage.get_Headers, X0
	140 Compare X0, 0
	141 JumpIfEqual {158}
	142 Move X1, [X22+56]
	143 Call HttpRequestHeaders.AddHeaders, X0, X1
	144 Move X0, X22
	145 Move X1, X21
	146 Move W2, W20
	147 Move X3, X19
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X24, [X31+16]
	153 Move X23, [X31+24]
	154 Move X30, [X31+64]
	155 Move X25, [X31+72]
	156 Call HttpClient.SendAsyncWorker, X0, X1, X2, X3
	157 Return X0
	158 Call 0x1C17F20
	159 Move X0, 0xAFF000
	160 Move X0, [X0+1320]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X19, X0
	164 Move X0, 0xB41000
	165 Move X0, [X0+984]
	166 Call 0x1C17D08
	167 Move X1, X0
	168 Move X0, X19
	169 Move X2, X31
	170 Call ArgumentNullException..ctor, X0, X1
	171 Move X0, 0xAFA000
	172 Move X0, [X0+1456]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X19, X0
	176 Move X0, 0xB41000
	177 Move X0, [X0+992]
	178 Move X0, 0xAFA000
	179 Move X0, [X0+1456]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X19, X0
	183 Move X0, 0xB41000
	184 Move X0, [X0+1000]
	185 Call 0x1C17D08
	186 Move X1, X0
	187 Move X0, X19
	188 Move X2, X31
	189 Call InvalidOperationException..ctor, X0, X1
	190 Move X0, 0xB41000
	191 Move X0, [X0+1008]
	192 Call 0x1C17D08
	193 Move X1, X0
	194 Move X0, X19
	195 Call 0x1C17DEC

Method: System.Threading.Tasks.Task`1<System.Net.Http.HttpResponseMessage> SendAsyncWorker(System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035FB138 LDR X0, [X21]
	0x035FB13C LDR W8, [X0 + 0xE0]
	0x035FB140 CBNZ W8, 0x35FB148
	0x035FB144 BL 0x1C16DFC
	0x035FB148 ADRP X8, 0xB3F000
	0x035FB14C LDR X8, [X8 + 0x478]
	0x035FB150 ADD X0, X19, 0x8
	0x035FB154 LDR X3, [X8]
	0x035FB158 ADD X1, X31, 0x0
	0x035FB15C MOV X2, X19
	0x035FB160 BL 0x218BB20
	0x035FB164 B 0x35FB1D0
	0x035FB168 LDR V0, [X19 + 0x3]
	0x035FB16C MOVN W8, 0x0
	0x035FB170 STR V0, [X31]
	0x035FB174 STP X31, X31, [X19 + 0x30]
	0x035FB178 STR W8, [X19]
	0x035FB17C ADD X0, X31, 0x0
	0x035FB180 MOV X1, X31
	0x035FB184 BL 0x32C40F0
	0x035FB188 CBZ X20, 0x35FB1F8
	0x035FB18C LDR X0, [X20 + 0x10]
	0x035FB190 CBZ X0, 0x35FB1FC
	0x035FB194 LDR X8, [X0]
	0x035FB198 LDR X9, [X8 + 0x338]
	0x035FB19C LDR X3, [X8 + 0x340]
	0x035FB1A0 MOV X1, X31
	0x035FB1A4 MOV W2, W31
	0x035FB1A8 BLR X9
	0x035FB1AC MOVN W8, 0x1
	0x035FB1B0 STR W8, [X19], #0x8
	0x035FB1B4 LDR X0, [X21]
	0x035FB1B8 LDR W8, [X0 + 0xE0]
	0x035FB1BC CBNZ W8, 0x35FB1C4
	0x035FB1C0 BL 0x1C16DFC
	0x035FB1C4 MOV X0, X19
	0x035FB1C8 MOV X1, X31
	0x035FB1CC BL 0x32C4864
	0x035FB1D0 LDP X20, X19, [X31 + 0x20]
	0x035FB1D4 LDP X30, X21, [X31 + 0x10]
	0x035FB1D8 ADD X31, X31, 0x30
	0x035FB1DC RET
	0x035FB1E0 BL 0x1C16F20
	0x035FB1E4 MOV X0, X20
	0x035FB1E8 MOV X1, X31
	0x035FB1EC BL 0x33BE520
	0x035FB1F0 CBNZ X0, 0x35FB204
	0x035FB1F4 BL 0x1C16F20
	0x035FB1F8 BL 0x1C16F20
	0x035FB1FC BL 0x1C16F20
	0x035FB200 BL 0x1C16F20
	0x035FB204 LDR X8, [X0]
	0x035FB208 LDP X9, X1, [X8 + 0x168]
	0x035FB20C BLR X9
	0x035FB210 MOV X20, X0
	0x035FB214 ADRP X0, 0xB21000
	0x035FB218 LDR X0, [X0 + 0x4B8]
	0x035FB21C BL 0x1C16D08
	0x035FB220 BL 0x1C16F10
	0x035FB224 MOV X21, X0
	0x035FB228 MOV X1, X20
	0x035FB22C MOV X2, X31
	0x035FB230 BL 0x338C448
	0x035FB234 ADRP X0, 0xB3F000
	0x035FB238 LDR X0, [X0 + 0x480]
	0x035FB23C BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X24, 0xDE6000
	010 Move X23, 0xB40000
	011 Move W8, [X24+795]
	012 Move X23, [X23+560]
	013 Move X19, X3
	014 Move W20, W2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0xB40000
	022 Move X0, [X0+568]
	023 Call 0x1C17CF4
	024 Move X0, 0xB40000
	025 Move X0, [X0+1016]
	026 Call 0x1C17CF4
	027 Move X0, 0xB40000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0xB40000
	031 Move X0, [X0+560]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+795], W8
	035 Move X0, [X23]
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Move [X31+80], V0
	040 Move [X31+88], V0
	041 Move [X31+4], V0
	042 Move [X31], V0
	043 Move [X31+8], V0
	044 Move [X31+40], X19
	045 Move [X31+48], X22
	046 Move [X31+56], W20
	047 Move [X31+32], X21
	048 Move X19, 0xB40000
	049 Move X21, 0xB40000
	050 Move X20, 0xB40000
	051 Move W8, [X0+224]
	052 Move X19, [X19+568]
	053 Move X21, [X21+1016]
	054 Move X20, [X20+584]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X19]
	059 Add X8, X31, 0
	060 Or X19, X8, 15
	061 Move X8, X19
	062 Call AsyncTaskMethodBuilder`1<Object>.Create
	063 Move X2, [X21]
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Add X1, X31, 0
	068 Move X0, X19
	069 Move [X31], W8
	070 Call AsyncTaskMethodBuilder`1<Object>.Start, X0, X1
	071 Move X1, [X20]
	072 Move X0, X19
	073 Call AsyncTaskMethodBuilder`1<Object>.get_Task, X0
	074 Move X20, [X31+160]
	075 Move X19, [X31+168]
	076 Move X22, [X31+144]
	077 Move X21, [X31+152]
	078 Move X24, [X31+128]
	079 Move X23, [X31+136]
	080 Move X30, [X31+112]
	081 Add X31, X31, 176
	082 Return X0

Method: System.Void .cctor()

Disassembly:
	0x035FB240 MOV X1, X0
	0x035FB244 MOV X0, X21
	0x035FB248 BL 0x1C16DEC
	0x035FB24C B 0x35FB27C
	0x035FB250 B 0x35FB27C
	0x035FB254 B 0x35FB27C
	0x035FB258 B 0x35FB27C
	0x035FB25C B 0x35FB27C
	0x035FB260 B 0x35FB27C
	0x035FB264 B 0x35FB27C
	0x035FB268 B 0x35FB27C
	0x035FB26C B 0x35FB27C
	0x035FB270 B 0x35FB27C
	0x035FB274 B 0x35FB27C
	0x035FB278 B 0x35FB27C
	0x035FB27C MOV X20, X0
	0x035FB280 CMP W1, 0x1
	0x035FB284 B.NE 0x35FB314
	0x035FB288 MOV X0, X20
	0x035FB28C BL 0x3EB1AD0
	0x035FB290 MOV X20, X0
	0x035FB294 ADRP X0, 0xAF8000
	0x035FB298 LDR X0, [X0 + 0x7D0]
	0x035FB29C BL 0x1C16D08
	0x035FB2A0 LDR X8, [X20]
	0x035FB2A4 LDR X1, [X8]
	0x035FB2A8 BL 0x1C17270
	0x035FB2AC TBZ X0, 0x0, 0x35FB2EC
	0x035FB2B0 LDR X20, [X20]
	0x035FB2B4 BL 0x3EB1AE0
	0x035FB2B8 MOVN W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDE6000
	005 Move X19, 0xAFB000
	006 Move W8, [X20+796]
	007 Move X19, [X19+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xAFB000
	013 Move X0, [X0+2624]
	014 Call 0x1C17CF4
	015 Move X0, 0xAFB000
	016 Move X0, [X0+1392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+796], W8
	020 Move X0, [X19]
	021 Move X19, 0xAFB000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2624]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X8, 0x40590000
	028 Move D0, X8
	029 Move X0, X31
	030 Call TimeSpan.FromSeconds, V0
	031 Move X8, [X19]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X8, [X8+184]
	035 Move [X8], X0
	036 Move X30, [X31+32]
	037 Return 

Method: System.Threading.Tasks.Task`1<System.Net.Http.HttpResponseMessage> <>n__0(System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x035FB2BC STR W8, [X19], #0x8
	0x035FB2C0 ADRP X0, 0xAFB000
	0x035FB2C4 LDR X0, [X0 + 0x280]
	0x035FB2C8 BL 0x1C16D08
	0x035FB2CC LDR W8, [X0 + 0xE0]
	0x035FB2D0 CBNZ W8, 0x35FB2D8
	0x035FB2D4 BL 0x1C16DFC
	0x035FB2D8 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X4, [X8+408]
	007 Move X3, [X8+416]
	008 Move X30, [X31+16]
	009 CallNoReturn X4
	010 Call 0x1C17F20

