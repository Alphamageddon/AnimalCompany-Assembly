Type: UnityEngine.ProBuilder.Vector2Mask

Method: System.Single get_x()

Disassembly:
	0x0393DFA0 SUB W8, W9, W8
	0x0393DFA4 MOVZ W9, 0xBDAD
	0x0393DFA8 ADD W8, W8, W0
	0x0393DFAC MOVK W9, 0xA0000
	0x0393DFB0 ADD W0, W8, W9
	0x0393DFB4 LDR X30, [X31], #0x20

ISIL:
	001 Move W8, [X0]
	002 Move S0, 1
	003 Move S1, W31
	004 And W31, W8, 1
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Return V0

Method: System.Single get_y()

Disassembly:
	0x0393DFB8 RET
	0x0393DFBC STR X30, [X31 - 0x20]!
	0x0393DFC0 STP X20, X19, [X31 + 0x10]
	0x0393DFC4 MOV X20, X1
	0x0393DFC8 MOV X1, X31
	0x0393DFCC MOV X19, X0

ISIL:
	001 Move W8, [X0]
	002 Move S0, 1
	003 Move S1, W31
	004 And W31, W8, 2
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Return V0

Method: System.Void .ctor(UnityEngine.Vector3 v, System.Single epsilon = 1E-45)

Disassembly:
	0x0393DFD0 BL 0x33BDD8C
	0x0393DFD4 CBZ X20, 0x393E0B4
	0x0393DFD8 LDR W8, [X20 + 0x18]
	0x0393DFDC LDR X9, [X20 + 0x10]
	0x0393DFE0 LDR W10, [X19 + 0x78]
	0x0393DFE4 STR W8, [X19 + 0x18]
	0x0393DFE8 STR X9, [X19 + 0x10]
	0x0393DFEC LDR W8, [X20 + 0x78]
	0x0393DFF0 BFM W10, W8, 0x0, 0x0

ISIL:
	001 NotImplemented "Instruction FABS not yet implemented."
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FABS not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Or W9, W8, 2
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move [X0], W8
	009 Return 

Method: System.Void .ctor(System.Byte mask)

Disassembly:
	0x0393DFF4 STR W10, [X19 + 0x78]
	0x0393DFF8 LDUR V0, [X20 + 0x1C]

ISIL:
	001 Move [X0], W1
	002 Return 

Method: UnityEngine.Vector2 op_Implicit(UnityEngine.ProBuilder.Vector2Mask mask)

Disassembly:
	0x0393DFFC STUR V0, [X19 + 0x1C]
	0x0393E000 LDR W8, [X20 + 0x78]
	0x0393E004 UBFM W8, W8, 0x5, 0x1F
	0x0393E008 BFM W10, W8, 0x1B, 0x0
	0x0393E00C STR W10, [X19 + 0x78]
	0x0393E010 LDR X8, [X20 + 0x48]
	0x0393E014 STR X8, [X19 + 0x48]
	0x0393E018 LDR W8, [X20 + 0x78]
	0x0393E01C UBFM W8, W8, 0x1, 0x1F
	0x0393E020 BFM W10, W8, 0x1F, 0x0
	0x0393E024 STR W10, [X19 + 0x78]
	0x0393E028 LDR W8, [X20 + 0x34]
	0x0393E02C LDUR X9, [X20 + 0x2C]
	0x0393E030 STR W8, [X19 + 0x34]
	0x0393E034 STUR X9, [X19 + 0x2C]
	0x0393E038 LDR W8, [X20 + 0x78]
	0x0393E03C UBFM W8, W8, 0x6, 0x1F
	0x0393E040 BFM W10, W8, 0x1A, 0x0
	0x0393E044 STR W10, [X19 + 0x78]
	0x0393E048 LDUR V0, [X20 + 0x38]
	0x0393E04C STUR V0, [X19 + 0x38]
	0x0393E050 LDR W8, [X20 + 0x78]
	0x0393E054 UBFM W8, W8, 0x7, 0x1F
	0x0393E058 BFM W10, W8, 0x19, 0x0
	0x0393E05C STR W10, [X19 + 0x78]
	0x0393E060 LDR X8, [X20 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAA4000
	006 Move X20, 0x811000
	007 Move W8, [X21+2362]
	008 Move X20, [X20+3800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x811000
	015 Move X0, [X0+3800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2362], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W31, W19, 1
	025 Move S1, 1
	026 Move S2, W31
	027 NotImplemented "Instruction FCSEL not yet implemented."
	028 And W31, W19, 2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 NotImplemented "Instruction FCSEL not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: UnityEngine.ProBuilder.Vector2Mask op_Implicit(UnityEngine.Vector2 v)

Disassembly:
	0x0393E064 STR X8, [X19 + 0x50]
	0x0393E068 LDR W8, [X20 + 0x78]
	0x0393E06C UBFM W8, W8, 0x2, 0x1F
	0x0393E070 BFM W10, W8, 0x1E, 0x0
	0x0393E074 STR W10, [X19 + 0x78]
	0x0393E078 LDUR V0, [X20 + 0x58]
	0x0393E07C STUR V0, [X19 + 0x58]
	0x0393E080 LDR W8, [X20 + 0x78]
	0x0393E084 UBFM W8, W8, 0x3, 0x1F
	0x0393E088 BFM W10, W8, 0x1D, 0x0

ISIL:
	001 Move W8, 1
	002 NotImplemented "Instruction FABS not yet implemented."
	003 Move S2, W8
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FABS not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Or W9, W8, 2
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Return X0

Method: UnityEngine.ProBuilder.Vector2Mask op_BitwiseOr(UnityEngine.ProBuilder.Vector2Mask left, UnityEngine.ProBuilder.Vector2Mask right)

Disassembly:
	0x0393E08C STR W10, [X19 + 0x78]
	0x0393E090 LDUR V0, [X20 + 0x68]
	0x0393E094 STUR V0, [X19 + 0x68]

ISIL:
	001 Or W8, W1, W0
	002 And X0, X8, 255
	003 Return X0

Method: UnityEngine.ProBuilder.Vector2Mask op_BitwiseAnd(UnityEngine.ProBuilder.Vector2Mask left, UnityEngine.ProBuilder.Vector2Mask right)

Disassembly:
	0x0393E098 LDR W8, [X20 + 0x78]
	0x0393E09C UBFM W8, W8, 0x4, 0x1F
	0x0393E0A0 BFM W10, W8, 0x1C, 0x0

ISIL:
	001 And W8, W0, W1
	002 And X0, X8, 255
	003 Return X0

Method: UnityEngine.ProBuilder.Vector2Mask op_ExclusiveOr(UnityEngine.ProBuilder.Vector2Mask left, UnityEngine.ProBuilder.Vector2Mask right)

Disassembly:
	0x0393E0A4 STR W10, [X19 + 0x78]
	0x0393E0A8 LDP X20, X19, [X31 + 0x10]
	0x0393E0AC LDR X30, [X31], #0x20

ISIL:
	001 Xor W8, W1, W0
	002 And X0, X8, 255
	003 Return X0

Method: UnityEngine.Vector2 op_Multiply(UnityEngine.ProBuilder.Vector2Mask mask, System.Single value)

Disassembly:
	0x0393E0B0 RET
	0x0393E0B4 ADRP X0, 0x7BA000
	0x0393E0B8 LDR X0, [X0 + 0x528]
	0x0393E0BC BL 0x1C16D08
	0x0393E0C0 BL 0x1C16F10
	0x0393E0C4 MOV X19, X0
	0x0393E0C8 ADRP X0, 0x810000
	0x0393E0CC LDR X0, [X0 + 0x618]
	0x0393E0D0 BL 0x1C16D08
	0x0393E0D4 MOV X1, X0
	0x0393E0D8 MOV X0, X19
	0x0393E0DC MOV X2, X31
	0x0393E0E0 BL 0x330E100
	0x0393E0E4 ADRP X0, 0x810000
	0x0393E0E8 LDR X0, [X0 + 0xEF8]
	0x0393E0EC BL 0x1C16D08
	0x0393E0F0 MOV X1, X0
	0x0393E0F4 MOV X0, X19
	0x0393E0F8 BL 0x1C16DEC
	0x0393E0FC CMP X0, X1
	0x0393E100 B.EQ 0x393E11C
	0x0393E104 MOV X8, X0
	0x0393E108 MOV W0, W31
	0x0393E10C CBZ X8, 0x393E120
	0x0393E110 CBZ X1, 0x393E120
	0x0393E114 MOV X0, X8
	0x0393E118 B 0x393DC8C
	0x0393E11C MOVZ W0, 0x1
	0x0393E120 RET
	0x0393E124 CMP X0, X1
	0x0393E128 B.EQ 0x393E14C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA4000
	007 Move X20, 0x811000
	008 Move W8, [X21+2363]
	009 Move X20, [X20+3800]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x811000
	017 Move X0, [X0+3800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2363], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W31, W19, 1
	027 Move S0, 1
	028 Move S1, W31
	029 NotImplemented "Instruction FCSEL not yet implemented."
	030 And W31, W19, 2
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 NotImplemented "Instruction FCSEL not yet implemented."
	036 Multiply S0, S2, S8
	037 Multiply S1, S1, S8
	038 Move V8, [X31+48]
	039 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0393E12C MOVZ W8, 0x1
	0x0393E130 CBZ X0, 0x393E150
	0x0393E134 CBZ X1, 0x393E150
	0x0393E138 STR X30, [X31 - 0x10]!
	0x0393E13C BL 0x393DC8C
	0x0393E140 EOR W8, W0, 0x1
	0x0393E144 LDR X30, [X31], #0x10
	0x0393E148 B 0x393E150
	0x0393E14C MOV W8, W31
	0x0393E150 AND W0, W8, 0x1
	0x0393E154 RET
	0x0393E158 B 0x393E15C
	0x0393E15C STR X30, [X31 - 0x30]!
	0x0393E160 STP X22, X21, [X31 + 0x10]
	0x0393E164 STP X20, X19, [X31 + 0x20]
	0x0393E168 ADRP X21, 0xAA3000
	0x0393E16C ADRP X22, 0x810000
	0x0393E170 LDRB W8, [X21 + 0x947]
	0x0393E174 LDR X22, [X22 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xAA4000
	005 Move X20, 0x811000
	006 Move W8, [X19+2364]
	007 Move X20, [X20+3800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x811000
	013 Move X0, [X0+3800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2364], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 3
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

