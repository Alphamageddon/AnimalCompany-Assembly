Type: UnityEngine.ProBuilder.HSVColor

Method: System.Void .ctor(System.Single h, System.Single s, System.Single v)

Disassembly:
	0x038FDBB0 LDR X21, [X0]
	0x038FDBB4 BL 0x3EB1AE0
	0x038FDBB8 LDR X1, [X23]
	0x038FDBBC ADD X0, X31, 0x0
	0x038FDBC0 BL 0x2C0A83C
	0x038FDBC4 CBZ X21, 0x38FDB6C
	0x038FDBC8 MOV X0, X21
	0x038FDBCC BL 0x1C16F18
	0x038FDBD0 MOV X21, X31
	0x038FDBD4 B 0x38FDBDC
	0x038FDBD8 MOV X20, X0
	0x038FDBDC LDR X1, [X23]
	0x038FDBE0 ADD X0, X31, 0x0
	0x038FDBE4 BL 0x2C0A83C
	0x038FDBE8 CBNZ X21, 0x38FDBF4

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Move V8, V2
	008 Move V9, V1
	009 Move V10, V0
	010 Move X19, X0
	011 Call Object..ctor, X0
	012 Move [X19+16], S10
	013 Move [X19+24], S9
	014 Move [X19+24], S8
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Move D9, [X31+16]
	018 Move D8, [X31+24]
	019 Move V10, [X31+48]
	020 Return 

Method: System.Void .ctor(System.Single h, System.Single s, System.Single v, System.Single sv_modifier)

Disassembly:
	0x038FDBEC MOV X0, X20
	0x038FDBF0 BL 0x1D2C690
	0x038FDBF4 MOV X0, X21
	0x038FDBF8 BL 0x1C16F18
	0x038FDBFC BL 0x1990590
	0x038FDC00 STR X30, [X31 - 0x10]!
	0x038FDC04 FMOV S4, 1
	0x038FDC08 FDIV S3, S4, S3
	0x038FDC0C FMUL S0, S3, S0
	0x038FDC10 FMUL S1, S3, S1
	0x038FDC14 FMUL S2, S3, S2
	0x038FDC18 BL 0x38FD0B8
	0x038FDC1C LDR X30, [X31], #0x10
	0x038FDC20 B 0x38FD3D8
	0x038FDC24 STP W1, W2, [X0]
	0x038FDC28 RET
	0x038FDC2C LDR W8, [X0]
	0x038FDC30 TBNZ X8, 0x1F, 0x38FDC50

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X1, X31
	008 Move V8, V3
	009 Move V9, V2
	010 Move V10, V1
	011 Move V11, V0
	012 Move X19, X0
	013 Call Object..ctor, X0
	014 Multiply S0, S10, S8
	015 Multiply S1, S9, S8
	016 Move [X19+16], S11
	017 Move [X19+24], S0
	018 Move [X19+24], S1
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Move D9, [X31+16]
	022 Move D8, [X31+24]
	023 Move D11, [X31+48]
	024 Move D10, [X31+56]
	025 Return 

Method: UnityEngine.ProBuilder.HSVColor FromRGB(UnityEngine.Color col)

Disassembly:
	0x038FDC34 LDR W9, [X0 + 0x4]
	0x038FDC38 CMP W9, 0x0
	0x038FDC3C CSET W10, GE
	0x038FDC40 CMP W8, W9
	0x038FDC44 CSET W8, NE
	0x038FDC48 AND W0, W10, W8, 0x0
	0x038FDC4C RET
	0x038FDC50 MOV W0, W31
	0x038FDC54 RET
	0x038FDC58 STP X30, X21, [X31 - 0x20]!
	0x038FDC5C STP X20, X19, [X31 + 0x10]
	0x038FDC60 ADRP X20, 0xAE4000
	0x038FDC64 ADRP X21, 0x7F6000
	0x038FDC68 LDRB W8, [X20 + 0x794]
	0x038FDC6C LDR X21, [X21 + 0xAC8]
	0x038FDC70 MOV X19, X0
	0x038FDC74 TBNZ X8, 0x0, 0x38FDCB0
	0x038FDC78 ADRP X0, 0x7F6000
	0x038FDC7C LDR X0, [X0 + 0xAC8]
	0x038FDC80 BL 0x1C16CF4
	0x038FDC84 ADRP X0, 0x7F6000
	0x038FDC88 LDR X0, [X0 + 0x838]
	0x038FDC8C BL 0x1C16CF4
	0x038FDC90 ADRP X0, 0x7F6000
	0x038FDC94 LDR X0, [X0 + 0xEC8]
	0x038FDC98 BL 0x1C16CF4
	0x038FDC9C ADRP X0, 0x7F6000
	0x038FDCA0 LDR X0, [X0 + 0x848]
	0x038FDCA4 BL 0x1C16CF4
	0x038FDCA8 MOVZ W8, 0x1
	0x038FDCAC STRB W8, [X20 + 0x794]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAE5000
	009 Move X19, 0x84F000
	010 Move W8, [X20+1925]
	011 Move X19, [X19+368]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x84F000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1925], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move V2, V9
	031 Move V3, V8
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X30, [X31+32]
	035 Move D9, [X31+16]
	036 Move D8, [X31+24]
	037 Move V0, V11
	038 Move V1, V10
	039 Move D11, [X31+64]
	040 Move D10, [X31+72]

Method: System.String ToString()

Disassembly:
	0x038FDE80 CSEL W11, W8, W9, LT
	0x038FDE84 CSEL W8, W9, W8, LT
	0x038FDE88 MADD W8, W11, W10, W8
	0x038FDE8C MOVZ W9, 0x58B3
	0x038FDE90 ADD W0, W8, W9
	0x038FDE94 RET
	0x038FDE98 AND X8, X1, 0x0
	0x038FDE9C ADD X8, X8, X0
	0x038FDEA0 ADD W9, W1, W0
	0x038FDEA4 AND X8, X8, 0x0
	0x038FDEA8 ORR X0, X8, X9, 0x0
	0x038FDEAC RET
	0x038FDEB0 AND X8, X1, 0x0
	0x038FDEB4 SUB X8, X0, X8
	0x038FDEB8 SUB W9, W0, W1
	0x038FDEBC AND X8, X8, 0x0
	0x038FDEC0 ORR X0, X8, X9, 0x0
	0x038FDEC4 RET
	0x038FDEC8 UBFM X8, X0, 0x20, 0x3F
	0x038FDECC ADD W0, W0, W1
	0x038FDED0 ADD W8, W8, W1
	0x038FDED4 BFM X0, X8, 0x20, 0x1F
	0x038FDED8 RET
	0x038FDEDC UBFM X8, X0, 0x20, 0x3F
	0x038FDEE0 SUB W0, W0, W1
	0x038FDEE4 SUB W8, W8, W1
	0x038FDEE8 BFM X0, X8, 0x20, 0x1F
	0x038FDEEC RET
	0x038FDEF0 STR X30, [X31 - 0x30]!
	0x038FDEF4 STP X22, X21, [X31 + 0x10]
	0x038FDEF8 STP X20, X19, [X31 + 0x20]
	0x038FDEFC ADRP X22, 0xAE4000
	0x038FDF00 ADRP X21, 0x81E000
	0x038FDF04 LDRB W8, [X22 + 0x796]
	0x038FDF08 LDR X21, [X21 + 0x600]
	0x038FDF0C MOV X19, X1
	0x038FDF10 MOV X20, X0
	0x038FDF14 TBNZ X8, 0x0, 0x38FDF2C
	0x038FDF18 ADRP X0, 0x81E000
	0x038FDF1C LDR X0, [X0 + 0x600]
	0x038FDF20 BL 0x1C16CF4
	0x038FDF24 MOVZ W8, 0x1
	0x038FDF28 STRB W8, [X22 + 0x796]
	0x038FDF2C LDR X0, [X21]
	0x038FDF30 UBFM X21, X20, 0x20, 0x3F
	0x038FDF34 LDR W8, [X0 + 0xE0]
	0x038FDF38 CBNZ W8, 0x38FDF40
	0x038FDF3C BL 0x1C16DFC
	0x038FDF40 CMP W20, W19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAE5000
	009 Move X23, 0x7F7000
	010 Move X22, 0x851000
	011 Move W8, [X20+1926]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+3128]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x7F7000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x851000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1926], W8
	027 Move V0, [X19+16]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], S0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+20]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+24]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], S0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Single SqrDistance(UnityEngine.ProBuilder.HSVColor InColor)

Disassembly:
	0x038FDF44 UBFM X8, X19, 0x20, 0x3F
	0x038FDF48 B.NE 0x38FDF5C
	0x038FDF4C CMP W21, W8
	0x038FDF50 B.NE 0x38FDF5C
	0x038FDF54 MOVZ W0, 0x1
	0x038FDF58 B 0x38FDF70
	0x038FDF5C CMP W20, W8
	0x038FDF60 CSET W8, EQ
	0x038FDF64 CMP W21, W19
	0x038FDF68 CSET W9, EQ
	0x038FDF6C AND W0, W9, W8, 0x0
	0x038FDF70 LDP X20, X19, [X31 + 0x20]
	0x038FDF74 LDP X22, X21, [X31 + 0x10]
	0x038FDF78 LDR X30, [X31], #0x30
	0x038FDF7C RET
	0x038FDF80 STR X30, [X31 - 0x30]!
	0x038FDF84 STP X22, X21, [X31 + 0x10]
	0x038FDF88 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {19}
	004 Move V0, [X1+16]
	005 Move V1, [X0+16]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 Move W8, 0x43B40000
	009 Move S4, W8
	010 NotImplemented "Instruction FDIV not yet implemented."
	011 NotImplemented "Instruction FDIV not yet implemented."
	012 Subtract V2, V2, V3
	013 Subtract S0, S0, S1
	014 Add S0, S0, S2
	015 Move S1, V2.S[1]
	016 Add S0, S0, S1
	017 Move X30, [X31+16]
	018 Return V0
	019 Call 0x1C17F20

