Type: UnityEngine.ProBuilder.Spline

Method: UnityEngine.ProBuilder.ProBuilderMesh Extrude(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.BezierPoint> points, System.Single radius = 0.5, System.Int32 columns = 32, System.Int32 rows = 16, System.Boolean closeLoop = False, System.Boolean smooth = True)

Disassembly:
	0x03938334 BLR X8
	0x03938338 ADRP X26, 0x7BB000
	0x0393833C ADRP X24, 0x7BB000
	0x03938340 LDR X26, [X26 + 0x5A8]
	0x03938344 LDR X24, [X24 + 0x5A0]
	0x03938348 MOV W22, W0
	0x0393834C ADRP X27, 0xAA0000
	0x03938350 ADRP X25, 0xFFFFFFFFFD1B2000
	0x03938354 TBZ X23, 0x0, 0x3938364

ISIL:
	001 Move [X31-16], X30
	002 And W3, W3, 1
	003 And W4, W4, 1
	004 Add X5, X31, 8
	005 Move [X31+8], X31
	006 Call Spline.Extrude, X0, V0, X1, X2, X3, X4, X5
	007 Move X0, [X31+8]
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void Extrude(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.BezierPoint> bezierPoints, System.Single radius, System.Int32 columns, System.Int32 rows, System.Boolean closeLoop, System.Boolean smooth, ref UnityEngine.ProBuilder.ProBuilderMesh target)

Disassembly:
	0x03938358 CMP W21, 0x1
	0x0393835C CSEL W10, W22, W21, LT
	0x03938360 B 0x393837C
	0x03938364 SUBS W23, W21, 0x1
	0x03938368 B.LT 0x3938778
	0x0393836C SUB W8, W22, 0x1
	0x03938370 CMP W8, W21
	0x03938374 MOV W10, W21
	0x03938378 B.LE 0x39387BC
	0x0393837C LDR X8, [X20]
	0x03938380 LDR X1, [X28]
	0x03938384 SUB W23, W10, 0x1
	0x03938388 LDRH W9, [X8 + 0x12E]
	0x0393838C CBZ X9, 0x39383B0
	0x03938390 LDR X10, [X8 + 0xB0]
	0x03938394 ADD X10, X10, 0x8
	0x03938398 LDUR X11, [X10 - 0x8]
	0x0393839C CMP X11, X1
	0x039383A0 B.EQ 0x39383C0
	0x039383A4 SUBS X9, X9, 0x1
	0x039383A8 ADD X10, X10, 0x10
	0x039383AC B.NE 0x3938398
	0x039383B0 MOV X0, X20
	0x039383B4 MOV W2, W31
	0x039383B8 BL 0x1C5C788
	0x039383BC B 0x39383CC
	0x039383C0 LDRSW X9, [X10]
	0x039383C4 ADD X8, X8, X9, 0x4, LSL
	0x039383C8 ADD X0, X8, 0x138
	0x039383CC LDP X8, X2, [X0]
	0x039383D0 MOV X0, X20
	0x039383D4 MOV W1, W21
	0x039383D8 BLR X8
	0x039383DC LDR X8, [X20]
	0x039383E0 LDR X1, [X28]
	0x039383E4 MOV V8.16B, V0.16B
	0x039383E8 MOV V9.16B, V1.16B
	0x039383EC LDRH W9, [X8 + 0x12E]
	0x039383F0 MOV V10.16B, V2.16B
	0x039383F4 CBZ X9, 0x3938418
	0x039383F8 LDR X10, [X8 + 0xB0]
	0x039383FC ADD X10, X10, 0x8
	0x03938400 LDUR X11, [X10 - 0x8]
	0x03938404 CMP X11, X1
	0x03938408 B.EQ 0x3938428
	0x0393840C SUBS X9, X9, 0x1
	0x03938410 ADD X10, X10, 0x10
	0x03938414 B.NE 0x3938400
	0x03938418 MOV X0, X20
	0x0393841C MOV W2, W31
	0x03938420 BL 0x1C5C788
	0x03938424 B 0x3938434

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xAAA000
	013 Move X27, 0x817000
	014 Move X25, 0x817000
	015 Move W8, [X26+2321]
	016 Move X27, [X27+3544]
	017 Move X25, [X25+3552]
	018 Move X19, X5
	019 Move W21, W4
	020 Move W23, W3
	021 Move W20, W2
	022 Move W22, W1
	023 Move V8, V0
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x817000
	030 Move X0, [X0+3552]
	031 Call 0x1C17CF4
	032 Move X0, 0x817000
	033 Move X0, [X0+3544]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+2321], W8
	037 Move X0, [X27]
	038 Call 0x1C17F10
	039 Move X1, [X25]
	040 Move X25, X0
	041 Call List`1<Quaternion>..ctor, X0
	042 And W23, W23, 1
	043 Move X0, X24
	044 Move W1, W22
	045 Move W2, W23
	046 Move X3, X25
	047 Call Spline.GetControlPoints, X0, X1, X2, X3
	048 And W3, W21, 1
	049 Move W1, W20
	050 Move W2, W23
	051 Move X4, X19
	052 Move X5, X25
	053 Move X20, [X31+80]
	054 Move X19, [X31+88]
	055 Move X22, [X31+64]
	056 Move X21, [X31+72]
	057 Move X24, [X31+48]
	058 Move X23, [X31+56]
	059 Move X26, [X31+32]
	060 Move X25, [X31+40]
	061 Move X30, [X31+16]
	062 Move X27, [X31+24]
	063 Move V0, V8
	064 Move V8, [X31+96]
	065 Call Spline.Extrude, X0, V0, X1, X2, X3, X4, X5
	066 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Vector3> GetControlPoints(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.BezierPoint> bezierPoints, System.Int32 subdivisionsPerSegment, System.Boolean closeLoop, System.Collections.Generic.List`1<UnityEngine.Quaternion> rotations)

Disassembly:
	0x03938428 LDRSW X9, [X10]
	0x0393842C ADD X8, X8, X9, 0x4, LSL
	0x03938430 ADD X0, X8, 0x138
	0x03938434 LDP X8, X2, [X0]
	0x03938438 MOV X0, X20
	0x0393843C MOV W1, W23
	0x03938440 ADD W29, W21, 0x1
	0x03938444 BLR X8
	0x03938448 LDRB W8, [X27 + 0x785]
	0x0393844C MOV V11.16B, V0.16B
	0x03938450 MOV V12.16B, V1.16B
	0x03938454 MOV V13.16B, V2.16B
	0x03938458 CBNZ W8, 0x3938470
	0x0393845C ADRP X0, 0x7BB000
	0x03938460 LDR X0, [X0 + 0x5A8]
	0x03938464 BL 0x1C16CF4
	0x03938468 MOVZ W8, 0x1
	0x0393846C STRB W8, [X27 + 0x785]
	0x03938470 LDR X0, [X26]
	0x03938474 SDIV W23, W29, W22
	0x03938478 FSUB S11, S8, S11
	0x0393847C FSUB S9, S9, S12
	0x03938480 LDR W8, [X0 + 0xE0]
	0x03938484 FSUB S8, S10, S13
	0x03938488 CBNZ W8, 0x3938490
	0x0393848C BL 0x1C16DFC
	0x03938490 FMUL S0, S11, S11
	0x03938494 FMUL S1, S9, S9
	0x03938498 LDR V10, [X25 + 0x17C]
	0x0393849C FADD S0, S0, S1
	0x039384A0 FMUL S1, S8, S8
	0x039384A4 FADD S0, S1, S0
	0x039384A8 FSQRT S0, S0
	0x039384AC FCMP S0, S10
	0x039384B0 MSUB W22, W23, W22, W29
	0x039384B4 B.LE 0x39384C8
	0x039384B8 FDIV S14, S11, S0
	0x039384BC FDIV S12, S9, S0
	0x039384C0 FDIV S13, S8, S0
	0x039384C4 B 0x39384F8
	0x039384C8 ADRP X23, 0xAA0000
	0x039384CC LDRB W8, [X23 + 0x783]
	0x039384D0 CBNZ W8, 0x39384E8
	0x039384D4 ADRP X0, 0x7BB000
	0x039384D8 LDR X0, [X0 + 0x5A0]
	0x039384DC BL 0x1C16CF4
	0x039384E0 MOVZ W8, 0x1
	0x039384E4 STRB W8, [X23 + 0x783]
	0x039384E8 LDR X8, [X24]
	0x039384EC LDR X8, [X8 + 0xB8]
	0x039384F0 LDP S14, S12, [X8]
	0x039384F4 LDR V13, [X8 + 0x8]
	0x039384F8 LDR X8, [X20]
	0x039384FC LDR X1, [X28]
	0x03938500 LDRH W9, [X8 + 0x12E]
	0x03938504 CBZ X9, 0x3938528
	0x03938508 LDR X10, [X8 + 0xB0]
	0x0393850C ADD X10, X10, 0x8
	0x03938510 LDUR X11, [X10 - 0x8]
	0x03938514 CMP X11, X1
	0x03938518 B.EQ 0x3938538
	0x0393851C SUBS X9, X9, 0x1
	0x03938520 ADD X10, X10, 0x10
	0x03938524 B.NE 0x3938510
	0x03938528 MOV X0, X20
	0x0393852C MOV W2, W31
	0x03938530 BL 0x1C5C788
	0x03938534 B 0x3938544
	0x03938538 LDRSW X9, [X10]
	0x0393853C ADD X8, X8, X9, 0x4, LSL
	0x03938540 ADD X0, X8, 0x138
	0x03938544 LDP X8, X2, [X0]
	0x03938548 MOV X0, X20
	0x0393854C MOV W1, W22
	0x03938550 BLR X8
	0x03938554 LDR X8, [X20]
	0x03938558 LDR X1, [X28]
	0x0393855C STP S12, S13, [X31 + 0x8]
	0x03938560 LDRH W9, [X8 + 0x12E]
	0x03938564 CBZ X9, 0x3938588
	0x03938568 LDR X10, [X8 + 0xB0]
	0x0393856C ADD X10, X10, 0x8
	0x03938570 LDUR X11, [X10 - 0x8]
	0x03938574 CMP X11, X1
	0x03938578 B.EQ 0x39385A4
	0x0393857C SUBS X9, X9, 0x1
	0x03938580 ADD X10, X10, 0x10
	0x03938584 B.NE 0x3938570
	0x03938588 MOV X0, X20
	0x0393858C MOV W2, W31
	0x03938590 MOV V15.16B, V2.16B
	0x03938594 MOV V8.16B, V1.16B
	0x03938598 MOV V9.16B, V0.16B
	0x0393859C BL 0x1C5C788
	0x039385A0 B 0x39385BC
	0x039385A4 LDRSW X9, [X10]
	0x039385A8 MOV V15.16B, V2.16B
	0x039385AC MOV V8.16B, V1.16B
	0x039385B0 MOV V9.16B, V0.16B
	0x039385B4 ADD X8, X8, X9, 0x4, LSL
	0x039385B8 ADD X0, X8, 0x138
	0x039385BC LDP X8, X2, [X0]
	0x039385C0 MOV X0, X20
	0x039385C4 MOV W1, W21
	0x039385C8 BLR X8
	0x039385CC LDRB W8, [X27 + 0x785]
	0x039385D0 MOV V11.16B, V0.16B
	0x039385D4 MOV V12.16B, V1.16B
	0x039385D8 MOV V13.16B, V2.16B
	0x039385DC CBNZ W8, 0x39385F4
	0x039385E0 ADRP X0, 0x7BB000
	0x039385E4 LDR X0, [X0 + 0x5A8]
	0x039385E8 BL 0x1C16CF4
	0x039385EC MOVZ W8, 0x1
	0x039385F0 STRB W8, [X27 + 0x785]
	0x039385F4 LDR X0, [X26]
	0x039385F8 FSUB S11, S9, S11
	0x039385FC FSUB S9, S8, S12
	0x03938600 FSUB S8, S15, S13
	0x03938604 LDR W8, [X0 + 0xE0]
	0x03938608 CBNZ W8, 0x3938610
	0x0393860C BL 0x1C16DFC
	0x03938610 FMUL S0, S11, S11
	0x03938614 FMUL S1, S9, S9
	0x03938618 FADD S0, S0, S1
	0x0393861C FMUL S1, S8, S8
	0x03938620 FADD S0, S1, S0
	0x03938624 FSQRT S2, S0
	0x03938628 FCMP S2, S10
	0x0393862C MOV V13.16B, V14.16B
	0x03938630 B.LE 0x3938648
	0x03938634 LDP S14, S15, [X31 + 0x8]
	0x03938638 FDIV S0, S11, S2
	0x0393863C FDIV S1, S9, S2
	0x03938640 FDIV S2, S8, S2
	0x03938644 B 0x393867C
	0x03938648 ADRP X20, 0xAA0000
	0x0393864C LDRB W8, [X20 + 0x783]
	0x03938650 LDP S14, S15, [X31 + 0x8]
	0x03938654 CBNZ W8, 0x393866C
	0x03938658 ADRP X0, 0x7BB000
	0x0393865C LDR X0, [X0 + 0x5A0]
	0x03938660 BL 0x1C16CF4
	0x03938664 MOVZ W8, 0x1
	0x03938668 STRB W8, [X20 + 0x783]
	0x0393866C LDR X8, [X24]
	0x03938670 LDR X8, [X8 + 0xB8]
	0x03938674 LDP S0, S1, [X8]
	0x03938678 LDR V2, [X8 + 0x8]
	0x0393867C ADRP X20, 0xAA0000
	0x03938680 LDRB W8, [X20 + 0xA24]
	0x03938684 FADD S0, S13, S0
	0x03938688 FADD S1, S14, S1
	0x0393868C FADD S2, S15, S2
	0x03938690 FMOV S3, 0.5
	0x03938694 FMUL S8, S0, S3
	0x03938698 FMUL S9, S1, S3
	0x0393869C FMUL S10, S2, S3
	0x039386A0 CBNZ W8, 0x39386B8
	0x039386A4 ADRP X0, 0x7BB000
	0x039386A8 LDR X0, [X0 + 0x5A8]
	0x039386AC BL 0x1C16CF4
	0x039386B0 MOVZ W8, 0x1
	0x039386B4 STRB W8, [X20 + 0xA24]
	0x039386B8 LDR X0, [X26]
	0x039386BC FMUL S0, S13, S13
	0x039386C0 FMUL S1, S14, S14
	0x039386C4 FADD S0, S0, S1
	0x039386C8 FMUL S1, S15, S15
	0x039386CC LDR W8, [X0 + 0xE0]
	0x039386D0 FADD S11, S1, S0
	0x039386D4 FMUL S0, S8, S8
	0x039386D8 FMUL S1, S9, S9
	0x039386DC FADD S0, S0, S1
	0x039386E0 FMUL S1, S10, S10
	0x039386E4 FADD S12, S1, S0
	0x039386E8 CBNZ W8, 0x39386F0
	0x039386EC BL 0x1C16DFC
	0x039386F0 ADRP X8, 0xFFFFFFFFFD1B1000
	0x039386F4 LDR V0, [X8 + 0xFE8]
	0x039386F8 FMUL S1, S11, S12
	0x039386FC FSQRT S1, S1
	0x03938700 FCMP S1, S0
	0x03938704 FMOV S0, W31
	0x03938708 B.MI 0x393876C
	0x0393870C LDR X0, [X26]
	0x03938710 FMUL S0, S13, S8
	0x03938714 FMUL S2, S14, S9
	0x03938718 FMUL S3, S15, S10
	0x0393871C FADD S0, S0, S2
	0x03938720 FADD S0, S3, S0
	0x03938724 LDR W8, [X0 + 0xE0]
	0x03938728 FDIV S0, S0, S1
	0x0393872C FMOV S1, 1
	0x03938730 FMOV S2, -1
	0x03938734 FMIN S1, S0, S1
	0x03938738 FCMP S0, S2
	0x0393873C FCSEL S11, S1, S2, PL
	0x03938740 CBNZ W8, 0x3938748
	0x03938744 BL 0x1C16DFC
	0x03938748 FCVT S0, S11
	0x0393874C BL 0x3EB1B80
	0x03938750 ADRP X8, 0xFFFFFFFFFD1B2000
	0x03938754 LDR V1, [X8 + 0x448]
	0x03938758 ADRP X8, 0xFFFFFFFFFD1B2000
	0x0393875C LDR V2, [X8 + 0x104]
	0x00000000 INVALID
	0x03938764 FMUL S0, S0, S1
	0x03938768 FMUL S0, S0, S2
	0x0393876C MOV X0, X31
	0x03938770 BL 0x3908F08
	0x03938774 B 0x3938914
	0x03938778 LDR X8, [X20]
	0x0393877C LDR X1, [X28]
	0x03938780 ADD W22, W21, 0x1
	0x03938784 LDRH W9, [X8 + 0x12E]
	0x03938788 CBZ X9, 0x39387AC
	0x0393878C LDR X10, [X8 + 0xB0]
	0x03938790 ADD X10, X10, 0x8
	0x03938794 LDUR X11, [X10 - 0x8]
	0x03938798 CMP X11, X1
	0x0393879C B.EQ 0x39387FC
	0x039387A0 SUBS X9, X9, 0x1
	0x039387A4 ADD X10, X10, 0x10
	0x039387A8 B.NE 0x3938794
	0x039387AC MOV X0, X20
	0x039387B0 MOV W2, W31
	0x039387B4 BL 0x1C5C788
	0x039387B8 B 0x3938808
	0x039387BC LDR X8, [X20]
	0x039387C0 LDR X1, [X28]
	0x039387C4 LDRH W9, [X8 + 0x12E]
	0x039387C8 CBZ X9, 0x39387EC
	0x039387CC LDR X10, [X8 + 0xB0]
	0x039387D0 ADD X10, X10, 0x8
	0x039387D4 LDUR X11, [X10 - 0x8]
	0x039387D8 CMP X11, X1
	0x039387DC B.EQ 0x3938880
	0x039387E0 SUBS X9, X9, 0x1
	0x039387E4 ADD X10, X10, 0x10
	0x039387E8 B.NE 0x39387D4
	0x039387EC MOV X0, X20
	0x039387F0 MOV W2, W31
	0x039387F4 BL 0x1C5C788
	0x039387F8 B 0x393888C
	0x039387FC LDRSW X9, [X10]
	0x03938800 ADD X8, X8, X9, 0x4, LSL
	0x03938804 ADD X0, X8, 0x138
	0x03938808 LDP X8, X2, [X0]
	0x0393880C MOV X0, X20
	0x03938810 MOV W1, W22
	0x03938814 BLR X8
	0x03938818 LDR X8, [X20]
	0x0393881C LDR X1, [X28]
	0x03938820 MOV V8.16B, V0.16B
	0x03938824 MOV V9.16B, V1.16B
	0x03938828 LDRH W9, [X8 + 0x12E]
	0x0393882C MOV V10.16B, V2.16B
	0x03938830 CBZ X9, 0x3938854
	0x03938834 LDR X10, [X8 + 0xB0]
	0x03938838 ADD X10, X10, 0x8
	0x0393883C LDUR X11, [X10 - 0x8]
	0x03938840 CMP X11, X1
	0x03938844 B.EQ 0x3938864
	0x03938848 SUBS X9, X9, 0x1
	0x0393884C ADD X10, X10, 0x10
	0x03938850 B.NE 0x393883C
	0x03938854 MOV X0, X20
	0x03938858 MOV W2, W31
	0x0393885C BL 0x1C5C788
	0x03938860 B 0x3938870
	0x03938864 LDRSW X9, [X10]
	0x03938868 ADD X8, X8, X9, 0x4, LSL
	0x0393886C ADD X0, X8, 0x138
	0x03938870 LDP X8, X2, [X0]
	0x03938874 MOV X0, X20
	0x03938878 MOV W1, W21
	0x0393887C B 0x3938900
	0x03938880 LDRSW X9, [X10]
	0x03938884 ADD X8, X8, X9, 0x4, LSL
	0x03938888 ADD X0, X8, 0x138
	0x0393888C LDP X8, X2, [X0]
	0x03938890 MOV X0, X20
	0x03938894 MOV W1, W21
	0x03938898 BLR X8
	0x0393889C LDR X8, [X20]
	0x039388A0 LDR X1, [X28]
	0x039388A4 MOV V8.16B, V0.16B
	0x039388A8 MOV V9.16B, V1.16B
	0x039388AC LDRH W9, [X8 + 0x12E]
	0x039388B0 MOV V10.16B, V2.16B
	0x039388B4 CBZ X9, 0x39388D8
	0x039388B8 LDR X10, [X8 + 0xB0]
	0x039388BC ADD X10, X10, 0x8
	0x039388C0 LDUR X11, [X10 - 0x8]
	0x039388C4 CMP X11, X1
	0x039388C8 B.EQ 0x39388E8
	0x039388CC SUBS X9, X9, 0x1
	0x039388D0 ADD X10, X10, 0x10
	0x039388D4 B.NE 0x39388C0
	0x039388D8 MOV X0, X20
	0x039388DC MOV W2, W31
	0x039388E0 BL 0x1C5C788
	0x039388E4 B 0x39388F4
	0x039388E8 LDRSW X9, [X10]
	0x039388EC ADD X8, X8, X9, 0x4, LSL
	0x039388F0 ADD X0, X8, 0x138
	0x039388F4 LDP X8, X2, [X0]
	0x039388F8 MOV X0, X20
	0x039388FC MOV W1, W23
	0x03938900 BLR X8
	0x03938904 FSUB S8, S8, S0
	0x03938908 FSUB S9, S9, S1
	0x0393890C FSUB S10, S10, S2
	0x03938910 FMOV S0, 1
	0x03938914 STR S0, [X19]
	0x03938918 LDRB W8, [X27 + 0x785]
	0x0393891C CBNZ W8, 0x3938934
	0x03938920 ADRP X0, 0x7BB000
	0x03938924 LDR X0, [X0 + 0x5A8]
	0x03938928 BL 0x1C16CF4
	0x0393892C MOVZ W8, 0x1
	0x03938930 STRB W8, [X27 + 0x785]
	0x03938934 LDR X0, [X26]
	0x03938938 LDR W8, [X0 + 0xE0]
	0x0393893C CBNZ W8, 0x3938944

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+272], D14
	003 Move [X31+288], D13
	004 Move [X31+296], D12
	005 Move [X31+304], D11
	006 Move [X31+312], D10
	007 Move [X31+320], D9
	008 Move [X31+328], D8
	009 Move [X31+336], X29
	010 Move [X31+344], X30
	011 Move [X31+352], X28
	012 Move [X31+360], X27
	013 Move [X31+368], X26
	014 Move [X31+376], X25
	015 Move [X31+384], X24
	016 Move [X31+392], X23
	017 Move [X31+400], X22
	018 Move [X31+408], X21
	019 Move [X31+416], X20
	020 Move [X31+424], X19
	021 Move X20, 0xAAA000
	022 Move W8, [X20+2322]
	023 Move X19, X3
	024 Move X22, X0
	025 Move [X31+280], W2
	026 Move [X31+284], W1
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {57}
	031 Move X0, 0x817000
	032 Move X0, [X0+3560]
	033 Call 0x1C17CF4
	034 Move X0, 0x816000
	035 Move X0, [X0+2648]
	036 Call 0x1C17CF4
	037 Move X0, 0x7C0000
	038 Move X0, [X0+952]
	039 Call 0x1C17CF4
	040 Move X0, 0x817000
	041 Move X0, [X0+3568]
	042 Call 0x1C17CF4
	043 Move X0, 0x817000
	044 Move X0, [X0+3576]
	045 Call 0x1C17CF4
	046 Move X0, 0x7C0000
	047 Move X0, [X0+968]
	048 Call 0x1C17CF4
	049 Move X0, 0x817000
	050 Move X0, [X0+3584]
	051 Call 0x1C17CF4
	052 Move X0, 0x7C0000
	053 Move X0, [X0+960]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+2322], W8
	057 Compare X22, 0
	058 JumpIfEqual {355}
	059 Move X10, 0x817000
	060 Move X8, [X22]
	061 Move X10, [X10+3560]
	062 Move X21, 0x7C0000
	063 Move X20, 0x7C0000
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Move X21, [X21+960]
	067 Move X20, [X20+968]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X22
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X22
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X21]
	087 Move W23, W0
	088 Move X0, X8
	089 Call 0x1C17F10
	090 Move W8, [X31+284]
	091 Move X2, [X20]
	092 Move X24, X0
	093 Multiply W25, W23, W8
	094 Move W1, W25
	095 Call List`1<Vector3>..ctor, X0, X1
	096 Compare X19, 0
	097 JumpIfEqual {108}
	098 Move W8, [X19+28]
	099 Move X9, 0x817000
	100 Move X9, [X9+3584]
	101 Move X0, X19
	102 Add W8, W8, 1
	103 Move [X19+24], W31
	104 Move [X19+28], W8
	105 Move X2, [X9]
	106 Move W1, W25
	107 Call List`1<Quaternion>.set_Capacity, X0, X1
	108 Move W8, [X31+280]
	109 NotImplemented "Instruction ORN not yet implemented."
	110 And W8, W8, 1
	111 Subtract W8, W23, W8
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X31+28], W8
	114 Move X29, 0x816000
	115 Subtract W8, W23, 2
	116 Move X29, [X29+2648]
	117 Move [X31+24], W8
	118 Move W8, [X31+284]
	119 Move W27, W31
	120 Add X28, X31, 152
	121 NotImplemented "Instruction SCVTF not yet implemented."
	122 Move W8, [X31+24]
	123 Move W9, [X31+280]
	124 Add W25, W27, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Xor W9, W9, 1
	128 And W8, W8, W9
	129 Move W9, [X31+284]
	130 Add W21, W8, W9
	131 Subtract W8, W21, 1
	132 Move W20, W31
	133 NotImplemented "Instruction SCVTF not yet implemented."
	134 Move X8, [X22]
	135 Move X1, [X29]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X22
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X9, [X0]
	152 Move X2, [X0+8]
	153 Add X8, X31, 152
	154 Move X0, X22
	155 Move W1, W27
	156 NotImplemented "Instruction BLR not yet implemented."
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move V1, [X28+16]
	159 Move V2, [X28+32]
	160 Move W8, [X31+200]
	161 Move X1, [X29]
	162 Move [X31+208], V0
	163 Move [X31+216], V1
	164 Move [X31+15], V2
	165 Move [X31+256], W8
	166 Move X8, [X22]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X22
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X9, [X0]
	183 Move X2, [X0+8]
	184 NotImplemented "Instruction SDIV not yet implemented."
	185 NotImplemented "Instruction MSUB not yet implemented."
	186 Add X8, X31, 152
	187 Move X0, X22
	188 Move W1, W26
	189 NotImplemented "Instruction BLR not yet implemented."
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move V1, [X28+16]
	192 Move V2, [X28+32]
	193 Move W8, [X31+200]
	194 NotImplemented "Instruction SCVTF not yet implemented."
	195 Add X0, X31, 96
	196 Move [X31+32], V0
	197 Move [X31+40], V1
	198 Move V0, [X31+208]
	199 Move V1, [X31+224]
	200 Move [X31+4], V2
	201 Move V2, [X31+15]
	202 Move [X31+80], W8
	203 Move W8, [X31+256]
	204 Move [X31+96], V0
	205 Move [X31+104], V1
	206 NotImplemented "Instruction FDIV not yet implemented."
	207 Add X1, X31, 32
	208 Move X2, X31
	209 Move [X31+8], V2
	210 Move [X31+144], W8
	211 Call BezierPoint.CubicPosition, X0, X1, V0
	212 Compare X24, 0
	213 JumpIfEqual {355}
	214 Move X8, 0x7C0000
	215 Move W10, [X24+28]
	216 Move X9, [X24+16]
	217 Move X8, [X8+952]
	218 Add W10, W10, 1
	219 Move X8, [X8]
	220 Move [X24+28], W10
	221 Compare X9, 0
	222 JumpIfEqual {355}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Move W11, [X9+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move W11, 12
	227 Add W8, W10, 1
	228 NotImplemented "Instruction MADD not yet implemented."
	229 Move [X24+24], W8
	230 Move [X9+32], S0
	231 Move [X9+40], S1
	232 Move [X9+40], S2
	233 Compare X19, 0
	234 JumpIfNotEqual {242}
	235 Move X8, [X8+32]
	236 Move X0, X24
	237 Move X8, [X8+192]
	238 Move X1, [X8+112]
	239 Call List`1<Vector3>.AddWithResize, X0, X1
	240 Compare X19, 0
	241 JumpIfEqual {328}
	242 Move X8, [X22]
	243 Move X1, [X29]
	244 NotImplemented "Instruction LDRH not yet implemented."
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move X0, X22
	254 Move W2, W31
	255 Call 0x1C5D788
	256 NotImplemented "Instruction LDRSW not yet implemented."
	257 Add X8, X8, X9
	258 Add X0, X8, 312
	259 Move X9, [X0]
	260 Move X2, [X0+8]
	261 Add X8, X31, 208
	262 Move X0, X22
	263 Move W1, W27
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X8, [X22]
	266 Move S11, [X31+244]
	267 Move S10, [X31+248]
	268 Move S9, [X31+252]
	269 Move S8, [X31+256]
	270 Move X1, [X29]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move X0, X22
	281 Move W2, W31
	282 Call 0x1C5D788
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Add X8, X8, X9
	285 Add X0, X8, 312
	286 Move X9, [X0]
	287 Move X2, [X0+8]
	288 Add X8, X31, 208
	289 Move X0, X22
	290 Move W1, W26
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move S4, [X31+244]
	293 Move S5, [X31+248]
	294 Move S6, [X31+252]
	295 Move S7, [X31+256]
	296 NotImplemented "Instruction FDIV not yet implemented."
	297 Move [X31], S0
	298 Move V0, V11
	299 Move V1, V10
	300 Move V2, V9
	301 Move V3, V8
	302 Move X0, X31
	303 Call Quaternion.Slerp, X0, X1, V0
	304 Move X9, 0x817000
	305 Move W10, [X19+28]
	306 Move X8, [X19+16]
	307 Move X9, [X9+3568]
	308 Add W10, W10, 1
	309 Move X9, [X9]
	310 Move [X19+28], W10
	311 Compare X8, 0
	312 JumpIfEqual {355}
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Move W11, [X8+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Add W9, W10, 1
	317 Add X8, X8, X10
	318 Move [X19+24], W9
	319 Move [X8+32], S0
	320 Move [X8+40], S1
	321 Move [X8+40], S2
	322 Move [X8+48], S3
	323 Move X8, [X9+32]
	324 Move X0, X19
	325 Move X8, [X8+192]
	326 Move X1, [X8+112]
	327 Call List`1<Quaternion>.AddWithResize, X0, X1
	328 Add W20, W20, 1
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move W8, [X31+28]
	331 Move W27, W25
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X0, X24
	334 Move X20, [X31+416]
	335 Move X19, [X31+424]
	336 Move X22, [X31+400]
	337 Move X21, [X31+408]
	338 Move X24, [X31+384]
	339 Move X23, [X31+392]
	340 Move X26, [X31+368]
	341 Move X25, [X31+376]
	342 Move X28, [X31+352]
	343 Move X27, [X31+360]
	344 Move X29, [X31+336]
	345 Move X30, [X31+344]
	346 Move D9, [X31+320]
	347 Move D8, [X31+328]
	348 Move D11, [X31+304]
	349 Move D10, [X31+312]
	350 Move D13, [X31+288]
	351 Move D12, [X31+296]
	352 Move V14, [X31+272]
	353 Add X31, X31, 432
	354 Return X0
	355 Call 0x1C17F20

Method: System.Void Extrude(System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Single radius, System.Int32 radiusRows, System.Boolean closeLoop, System.Boolean smooth, ref UnityEngine.ProBuilder.ProBuilderMesh target, System.Collections.Generic.IList`1<UnityEngine.Quaternion> pointRotations = null)

Disassembly:
	0x03938940 BL 0x1C16DFC
	0x03938944 FMUL S0, S8, S8
	0x03938948 FMUL S1, S9, S9
	0x0393894C LDR V2, [X25 + 0x17C]
	0x03938950 FADD S0, S0, S1
	0x03938954 FMUL S1, S10, S10
	0x03938958 FADD S0, S1, S0
	0x0393895C FSQRT S0, S0
	0x03938960 FCMP S0, S2
	0x03938964 B.LE 0x3938978
	0x03938968 FDIV S8, S8, S0
	0x0393896C FDIV S9, S9, S0
	0x03938970 FDIV S10, S10, S0
	0x03938974 B 0x39389A8
	0x03938978 ADRP X19, 0xAA0000
	0x0393897C LDRB W8, [X19 + 0x783]
	0x03938980 CBNZ W8, 0x3938998
	0x03938984 ADRP X0, 0x7BB000
	0x03938988 LDR X0, [X0 + 0x5A0]
	0x0393898C BL 0x1C16CF4
	0x03938990 MOVZ W8, 0x1
	0x03938994 STRB W8, [X19 + 0x783]
	0x03938998 LDR X8, [X24]
	0x0393899C LDR X8, [X8 + 0xB8]
	0x039389A0 LDP S8, S9, [X8]
	0x039389A4 LDR V10, [X8 + 0x8]
	0x039389A8 ADRP X19, 0xAA0000
	0x039389AC LDRB W8, [X19 + 0x786]
	0x039389B0 CBNZ W8, 0x39389C8
	0x039389B4 ADRP X0, 0x7BB000
	0x039389B8 LDR X0, [X0 + 0x5A0]
	0x039389BC BL 0x1C16CF4
	0x039389C0 MOVZ W8, 0x1
	0x039389C4 STRB W8, [X19 + 0x786]
	0x039389C8 LDR X8, [X24]
	0x039389CC MOV V0.16B, V8.16B
	0x039389D0 MOV V1.16B, V9.16B
	0x039389D4 MOV V2.16B, V10.16B
	0x039389D8 LDR X8, [X8 + 0xB8]
	0x039389DC MOV X0, X31
	0x039389E0 LDP S3, S4, [X8 + 0x18]
	0x039389E4 LDR V5, [X8 + 0x20]
	0x039389E8 ADRP X8, 0xFFFFFFFFFD1B1000
	0x039389EC LDR V11, [X8 + 0xF28]
	0x039389F0 MOV V6.16B, V11.16B
	0x039389F4 BL 0x390B304
	0x039389F8 TBNZ X0, 0x0, 0x3938A48
	0x039389FC ADRP X19, 0xAA0000
	0x03938A00 LDRB W8, [X19 + 0x783]
	0x03938A04 CBNZ W8, 0x3938A1C
	0x03938A08 ADRP X0, 0x7BB000
	0x03938A0C LDR X0, [X0 + 0x5A0]
	0x03938A10 BL 0x1C16CF4
	0x03938A14 MOVZ W8, 0x1
	0x03938A18 STRB W8, [X19 + 0x783]
	0x03938A1C LDR X8, [X24]
	0x03938A20 MOV V0.16B, V8.16B
	0x03938A24 MOV V1.16B, V9.16B
	0x03938A28 MOV V2.16B, V10.16B
	0x03938A2C LDR X8, [X8 + 0xB8]
	0x03938A30 MOV V6.16B, V11.16B
	0x03938A34 MOV X0, X31
	0x03938A38 LDP S3, S4, [X8]
	0x03938A3C LDR V5, [X8 + 0x8]
	0x03938A40 BL 0x390B304
	0x03938A44 TBZ X0, 0x0, 0x3938A84
	0x03938A48 ADRP X19, 0xAA0000
	0x03938A4C LDRB W8, [X19 + 0x793]
	0x03938A50 CBNZ W8, 0x3938A68
	0x03938A54 ADRP X0, 0x7BC000
	0x03938A58 LDR X0, [X0 + 0x5A8]
	0x03938A5C BL 0x1C16CF4
	0x03938A60 MOVZ W8, 0x1
	0x03938A64 STRB W8, [X19 + 0x793]
	0x03938A68 ADRP X8, 0x7BC000
	0x03938A6C LDR X8, [X8 + 0x5A8]
	0x03938A70 LDR X8, [X8]
	0x03938A74 LDR X8, [X8 + 0xB8]
	0x03938A78 LDP S0, S1, [X8]
	0x03938A7C LDP S2, S3, [X8 + 0x8]
	0x03938A80 B 0x3938A98
	0x03938A84 MOV V0.16B, V8.16B
	0x03938A88 MOV V1.16B, V9.16B
	0x03938A8C MOV V2.16B, V10.16B
	0x03938A90 MOV X0, X31
	0x03938A94 BL 0x3C2A8C4
	0x03938A98 LDP X20, X19, [X31 + 0xA0]
	0x03938A9C LDP X22, X21, [X31 + 0x90]
	0x03938AA0 LDP X24, X23, [X31 + 0x80]
	0x03938AA4 LDP X26, X25, [X31 + 0x70]
	0x03938AA8 LDP X28, X27, [X31 + 0x60]
	0x03938AAC LDP X29, X30, [X31 + 0x50]
	0x03938AB0 LDP D9, D8, [X31 + 0x40]
	0x03938AB4 LDP D11, D10, [X31 + 0x30]
	0x03938AB8 LDP D13, D12, [X31 + 0x20]
	0x03938ABC LDP D15, D14, [X31 + 0x10]
	0x03938AC0 ADD X31, X31, 0xB0
	0x03938AC4 RET
	0x03938AC8 BL 0x1C16F20
	0x03938ACC SUB X31, X31, 0xC0
	0x03938AD0 STP D15, D14, [X31 + 0x20]
	0x03938AD4 STP D13, D12, [X31 + 0x30]
	0x03938AD8 STP D11, D10, [X31 + 0x40]
	0x03938ADC STP D9, D8, [X31 + 0x50]
	0x03938AE0 STR X30, [X31 + 0x60]
	0x03938AE4 STP X28, X27, [X31 + 0x70]
	0x03938AE8 STP X26, X25, [X31 + 0x80]
	0x03938AEC STP X24, X23, [X31 + 0x90]
	0x03938AF0 STP X22, X21, [X31 + 0xA0]
	0x03938AF4 STP X20, X19, [X31 + 0xB0]
	0x03938AF8 STP S2, S3, [X31 + 0x10]
	0x03938AFC STP S0, S1, [X31 + 0x8]
	0x03938B00 ADRP X19, 0xAA9000
	0x03938B04 ADRP X21, 0x7BD000
	0x03938B08 LDRB W8, [X19 + 0x915]
	0x03938B0C LDR X21, [X21 + 0x9B0]
	0x03938B10 MOV W20, W0
	0x03938B14 MOV V8.16B, V7.16B
	0x03938B18 MOV V15.16B, V6.16B
	0x03938B1C MOV V11.16B, V5.16B
	0x03938B20 MOV V13.16B, V4.16B
	0x03938B24 TBNZ X8, 0x0, 0x3938B3C
	0x03938B28 ADRP X0, 0x7BD000
	0x03938B2C LDR X0, [X0 + 0x9B0]
	0x03938B30 BL 0x1C16CF4
	0x03938B34 MOVZ W8, 0x1
	0x03938B38 STRB W8, [X19 + 0x915]
	0x03938B3C LDR X0, [X21]
	0x03938B40 UBFM W1, W20, 0x1F, 0x1E
	0x03938B44 BL 0x1C16D6C
	0x03938B48 SUBS W9, W20, 0x1
	0x03938B4C MOV X19, X0
	0x03938B50 B.LT 0x3938C80
	0x03938B54 SCVTF S9, W9
	0x03938B58 ADRP X9, 0xFFFFFFFFFD1B2000
	0x03938B5C LDR V10, [X9 + 0x104]
	0x03938B60 MOV W20, W20
	0x03938B64 MOV X21, X31
	0x03938B68 MOV X8, X31
	0x03938B6C MOVN X22, 0x0
	0x03938B70 MOVZ W23, 0x43B40000
	0x03938B74 SUB X24, X20, 0x1
	0x03938B78 MOVZ W25, 0xC
	0x03938B7C MOVZ X26, 0x1
	0x03938B80 MOVZ X27, 0x2
	0x03938B84 SCVTF S0, W8
	0x03938B88 FMOV S14, W23
	0x03938B8C FDIV S0, S0, S9
	0x03938B90 ADD X28, X8, 0x1
	0x03938B94 FMUL S0, S0, S14
	0x03938B98 CMP X24, X8
	0x03938B9C SCVTF S1, W28
	0x03938BA0 FMUL S0, S0, S10
	0x03938BA4 FMOV S2, W31
	0x03938BA8 ADD X0, X31, 0x6C
	0x03938BAC ADD X1, X31, 0x68
	0x03938BB0 FCSEL S12, S2, S1, EQ
	0x03938BB4 BL 0x3EB1BC0
	0x03938BB8 LDP S0, S1, [X31 + 0x68]
	0x03938BBC LDP S2, S3, [X31 + 0x10]
	0x03938BC0 FMOV S6, W31
	0x03938BC4 MOV X0, X31
	0x03938BC8 FMUL S4, S0, S8
	0x03938BCC FMUL S5, S1, S8
	0x03938BD0 LDP S0, S1, [X31 + 0x8]
	0x03938BD4 BL 0x3C2A9FC
	0x03938BD8 CBZ X19, 0x3938CB8
	0x03938BDC LDR W8, [X19 + 0x18]
	0x03938BE0 ADD X9, X22, 0x1
	0x03938BE4 CMP X9, X8
	0x03938BE8 B.CS 0x3938CB4
	0x03938BEC FDIV S3, S12, S9
	0x03938BF0 FADD S4, S13, S0
	0x03938BF4 SBFM X8, X21, 0x20, 0x3F
	0x03938BF8 FMUL S0, S3, S14
	0x03938BFC FADD S1, S11, S1
	0x03938C00 FADD S2, S15, S2
	0x03938C04 MADD X8, X8, X25, X19
	0x03938C08 FMUL S0, S0, S10
	0x03938C0C ADD X0, X31, 0x1C
	0x03938C10 ADD X1, X31, 0x18
	0x03938C14 STP S4, S1, [X8 + 0x20]
	0x03938C18 STR S2, [X8 + 0x28]
	0x03938C1C BL 0x3EB1BC0
	0x03938C20 LDP S0, S1, [X31 + 0x18]
	0x03938C24 LDP S2, S3, [X31 + 0x10]
	0x03938C28 FMOV S6, W31
	0x03938C2C MOV X0, X31
	0x03938C30 FMUL S4, S0, S8
	0x03938C34 FMUL S5, S1, S8
	0x03938C38 LDP S0, S1, [X31 + 0x8]
	0x03938C3C BL 0x3C2A9FC
	0x03938C40 LDR W8, [X19 + 0x18]
	0x03938C44 ADD X22, X22, 0x2
	0x03938C48 CMP X22, X8
	0x03938C4C B.CS 0x3938CB4
	0x03938C50 ADD X8, X21, X26
	0x03938C54 SBFM X8, X8, 0x20, 0x3F
	0x03938C58 FADD S2, S15, S2
	0x03938C5C FADD S1, S11, S1
	0x03938C60 FADD S0, S13, S0
	0x03938C64 MADD X8, X8, X25, X19
	0x03938C68 ADD X21, X21, X27
	0x03938C6C CMP X20, X28
	0x03938C70 STP S0, S1, [X8 + 0x20]
	0x03938C74 STR S2, [X8 + 0x28]
	0x03938C78 MOV X8, X28
	0x03938C7C B.NE 0x3938B84
	0x03938C80 MOV X0, X19
	0x03938C84 LDP X20, X19, [X31 + 0xB0]
	0x03938C88 LDP X22, X21, [X31 + 0xA0]
	0x03938C8C LDP X24, X23, [X31 + 0x90]
	0x03938C90 LDP X26, X25, [X31 + 0x80]
	0x03938C94 LDP X28, X27, [X31 + 0x70]
	0x03938C98 LDR X30, [X31 + 0x60]
	0x03938C9C LDP D9, D8, [X31 + 0x50]
	0x03938CA0 LDP D11, D10, [X31 + 0x40]
	0x03938CA4 LDP D13, D12, [X31 + 0x30]
	0x03938CA8 LDP D15, D14, [X31 + 0x20]
	0x03938CAC ADD X31, X31, 0xC0
	0x03938CB0 RET
	0x03938CB4 BL 0x1C16F28
	0x03938CB8 BL 0x1C16F20
	0x03938CBC STR X30, [X31 - 0x30]!
	0x03938CC0 STP X22, X21, [X31 + 0x10]
	0x03938CC4 STP X20, X19, [X31 + 0x20]
	0x03938CC8 ADRP X22, 0xAA9000
	0x03938CCC ADRP X21, 0x815000
	0x03938CD0 ADRP X20, 0x815000
	0x03938CD4 LDRB W8, [X22 + 0x916]
	0x03938CD8 LDR X21, [X21 + 0xD28]
	0x03938CDC LDR X20, [X20 + 0xD30]
	0x03938CE0 MOV X19, X0
	0x03938CE4 TBNZ X8, 0x0, 0x3938D08
	0x03938CE8 ADRP X0, 0x815000
	0x03938CEC LDR X0, [X0 + 0xD30]
	0x03938CF0 BL 0x1C16CF4
	0x03938CF4 ADRP X0, 0x815000
	0x03938CF8 LDR X0, [X0 + 0xD28]
	0x03938CFC BL 0x1C16CF4
	0x03938D00 MOVZ W8, 0x1
	0x03938D04 STRB W8, [X22 + 0x916]
	0x03938D08 LDR X0, [X21]
	0x03938D0C LDR X19, [X19 + 0x10]
	0x03938D10 BL 0x1C16F10
	0x03938D14 LDR X2, [X20]
	0x03938D18 MOV X1, X19
	0x03938D1C MOV X20, X0
	0x03938D20 BL 0x253DBA8
	0x03938D24 MOV X0, X20
	0x03938D28 LDP X20, X19, [X31 + 0x20]
	0x03938D2C LDP X22, X21, [X31 + 0x10]
	0x03938D30 LDR X30, [X31], #0x30
	0x03938D34 RET
	0x03938D38 STR X30, [X31 - 0x30]!
	0x03938D3C STP X22, X21, [X31 + 0x10]
	0x03938D40 STP X20, X19, [X31 + 0x20]
	0x03938D44 ADRP X21, 0xAA9000
	0x03938D48 ADRP X22, 0x7BD000
	0x03938D4C LDRB W8, [X21 + 0x917]
	0x03938D50 LDR X22, [X22 + 0x9C8]
	0x03938D54 MOV X20, X1
	0x03938D58 MOV X19, X0
	0x03938D5C TBNZ X8, 0x0, 0x3938D74
	0x03938D60 ADRP X0, 0x7BD000
	0x03938D64 LDR X0, [X0 + 0x9C8]
	0x03938D68 BL 0x1C16CF4
	0x03938D6C MOVZ W8, 0x1
	0x03938D70 STRB W8, [X21 + 0x917]
	0x03938D74 LDR X1, [X22]
	0x03938D78 MOV X0, X20
	0x03938D7C BL 0x21D54D4
	0x03938D80 STR X0, [X19 + 0x10]
	0x03938D84 LDP X20, X19, [X31 + 0x20]
	0x03938D88 LDP X22, X21, [X31 + 0x10]
	0x03938D8C LDR X30, [X31], #0x30
	0x03938D90 RET
	0x03938D94 LDR W0, [X0 + 0x18]
	0x03938D98 RET
	0x03938D9C STR W1, [X0 + 0x18]
	0x03938DA0 RET
	0x03938DA4 LDR W0, [X0 + 0x1C]
	0x03938DA8 RET
	0x03938DAC STR W1, [X0 + 0x1C]
	0x03938DB0 RET
	0x03938DB4 STP X30, X23, [X31 - 0x30]!
	0x03938DB8 STP X22, X21, [X31 + 0x10]
	0x03938DBC STP X20, X19, [X31 + 0x20]
	0x03938DC0 ADRP X23, 0xAA9000
	0x03938DC4 LDRB W8, [X23 + 0x918]
	0x03938DC8 MOV X22, X3
	0x03938DCC MOV W20, W2
	0x03938DD0 MOV W19, W1
	0x03938DD4 MOV X21, X0
	0x03938DD8 TBNZ X8, 0x0, 0x3938DF0
	0x03938DDC ADRP X0, 0x7BD000
	0x03938DE0 LDR X0, [X0 + 0x9C8]
	0x03938DE4 BL 0x1C16CF4
	0x03938DE8 MOVZ W8, 0x1
	0x03938DEC STRB W8, [X23 + 0x918]
	0x03938DF0 MOV X0, X21
	0x03938DF4 MOV X1, X31
	0x03938DF8 BL 0x33BDD8C
	0x03938DFC CBZ X22, 0x3938E2C
	0x03938E00 ADRP X8, 0x7BD000
	0x03938E04 LDR X8, [X8 + 0x9C8]
	0x03938E08 MOV X0, X22
	0x03938E0C LDR X1, [X8]
	0x03938E10 BL 0x21D54D4
	0x03938E14 STR X0, [X21 + 0x10]
	0x03938E18 STP W20, W19, [X21 + 0x18]
	0x03938E1C LDP X20, X19, [X31 + 0x20]
	0x03938E20 LDP X22, X21, [X31 + 0x10]
	0x03938E24 LDP X30, X23, [X31], #0x30
	0x03938E28 RET
	0x03938E2C ADRP X0, 0x7C0000
	0x03938E30 LDR X0, [X0 + 0x528]
	0x03938E34 BL 0x1C16D08
	0x03938E38 BL 0x1C16F10
	0x03938E3C MOV X19, X0
	0x03938E40 ADRP X0, 0x7F3000
	0x03938E44 LDR X0, [X0 + 0xE10]
	0x03938E48 BL 0x1C16D08
	0x03938E4C MOV X1, X0
	0x03938E50 MOV X0, X19
	0x03938E54 MOV X2, X31
	0x03938E58 BL 0x330E100
	0x03938E5C ADRP X0, 0x816000
	0x03938E60 LDR X0, [X0 + 0xE18]
	0x03938E64 BL 0x1C16D08
	0x03938E68 MOV X1, X0
	0x03938E6C MOV X0, X19
	0x03938E70 BL 0x1C16DEC
	0x03938E74 STP X30, X23, [X31 - 0x30]!
	0x03938E78 STP X22, X21, [X31 + 0x10]
	0x03938E7C STP X20, X19, [X31 + 0x20]
	0x03938E80 ADRP X23, 0xAA9000
	0x03938E84 ADRP X22, 0x7BB000
	0x03938E88 LDRB W8, [X23 + 0x919]
	0x03938E8C LDR X22, [X22 + 0x598]
	0x03938E90 MOV W19, W2
	0x03938E94 MOV X21, X1
	0x03938E98 MOV X20, X0
	0x03938E9C TBNZ X8, 0x0, 0x3938EB4
	0x03938EA0 ADRP X0, 0x7BB000
	0x03938EA4 LDR X0, [X0 + 0x598]
	0x03938EA8 BL 0x1C16CF4
	0x03938EAC MOVZ W8, 0x1
	0x03938EB0 STRB W8, [X23 + 0x919]
	0x03938EB4 MOV X0, X20
	0x03938EB8 MOV X1, X31
	0x03938EBC BL 0x33BDD8C
	0x03938EC0 LDR X0, [X22]
	0x03938EC4 LDR W8, [X0 + 0xE0]
	0x03938EC8 CBNZ W8, 0x3938ED0
	0x03938ECC BL 0x1C16DFC
	0x03938ED0 MOV X0, X21
	0x03938ED4 MOV X1, X31
	0x03938ED8 MOV X2, X31
	0x03938EDC BL 0x3C3883C
	0x03938EE0 TBNZ X0, 0x0, 0x3938F20
	0x03938EE4 CBZ X21, 0x3938F68
	0x03938EE8 MOV X0, X21
	0x03938EEC MOV W1, W19
	0x03938EF0 MOV X2, X31
	0x03938EF4 BL 0x3C191E8
	0x03938EF8 STR X0, [X20 + 0x10]
	0x03938EFC MOV X0, X21
	0x03938F00 MOV W1, W19
	0x03938F04 MOV X2, X31
	0x03938F08 BL 0x3C1A1A4
	0x03938F0C STP W0, W19, [X20 + 0x18]
	0x03938F10 LDP X20, X19, [X31 + 0x20]
	0x03938F14 LDP X22, X21, [X31 + 0x10]
	0x03938F18 LDP X30, X23, [X31], #0x30
	0x03938F1C RET
	0x03938F20 ADRP X0, 0x7C0000
	0x03938F24 LDR X0, [X0 + 0x528]
	0x03938F28 BL 0x1C16D08
	0x03938F2C BL 0x1C16F10
	0x03938F30 MOV X19, X0
	0x03938F34 ADRP X0, 0x815000
	0x03938F38 LDR X0, [X0 + 0xE90]
	0x03938F3C BL 0x1C16D08
	0x03938F40 MOV X1, X0
	0x03938F44 MOV X0, X19
	0x03938F48 MOV X2, X31
	0x03938F4C BL 0x330E100
	0x03938F50 ADRP X0, 0x816000
	0x03938F54 LDR X0, [X0 + 0xE20]
	0x03938F58 BL 0x1C16D08
	0x03938F5C MOV X1, X0
	0x03938F60 MOV X0, X19
	0x03938F64 BL 0x1C16DEC
	0x03938F68 BL 0x1C16F20
	0x03938F6C SUB X31, X31, 0x50
	0x03938F70 STP X30, X23, [X31 + 0x20]
	0x03938F74 STP X22, X21, [X31 + 0x30]
	0x03938F78 STP X20, X19, [X31 + 0x40]
	0x03938F7C ADRP X23, 0xAA9000
	0x03938F80 ADRP X20, 0x7BB000
	0x03938F84 ADRP X22, 0x816000
	0x03938F88 ADRP X21, 0x7E5000
	0x03938F8C LDRB W8, [X23 + 0x91A]
	0x03938F90 LDR X20, [X20 + 0x758]
	0x03938F94 LDR X22, [X22 + 0x58]
	0x03938F98 LDR X21, [X21 + 0x280]
	0x03938F9C MOV X19, X0
	0x03938FA0 TBNZ X8, 0x0, 0x3938FDC
	0x03938FA4 ADRP X0, 0x7BB000
	0x03938FA8 LDR X0, [X0 + 0x758]
	0x03938FAC BL 0x1C16CF4
	0x03938FB0 ADRP X0, 0x816000
	0x03938FB4 LDR X0, [X0 + 0x58]
	0x03938FB8 BL 0x1C16CF4
	0x03938FBC ADRP X0, 0x7E5000
	0x03938FC0 LDR X0, [X0 + 0x280]
	0x03938FC4 BL 0x1C16CF4
	0x03938FC8 ADRP X0, 0x7BD000
	0x03938FCC LDR X0, [X0 + 0x4B0]
	0x03938FD0 BL 0x1C16CF4
	0x03938FD4 MOVZ W8, 0x1
	0x03938FD8 STRB W8, [X23 + 0x91A]
	0x03938FDC LDR W8, [X19 + 0x1C]
	0x03938FE0 LDR X0, [X20]
	0x03938FE4 ADD X1, X31, 0x18
	0x03938FE8 STP W8, W31, [X31 + 0x18]
	0x03938FEC BL 0x1C16E04
	0x03938FF0 LDR X8, [X22]
	0x03938FF4 MOVN X9, 0x0
	0x03938FF8 MOV X20, X0
	0x03938FFC ADD X0, X31, 0x0
	0x03939000 STP X8, X9, [X31]
	0x03939004 LDR W8, [X19 + 0x18]
	0x03939008 MOV X1, X31
	0x0393900C STR W8, [X31 + 0x10]
	0x03939010 BL 0x33B162C
	0x03939014 LDR X8, [X19 + 0x10]
	0x03939018 LDR X21, [X21]
	0x0393901C MOV X19, X0
	0x03939020 CBZ X8, 0x3939040
	0x03939024 LDR X8, [X8 + 0x18]
	0x03939028 ADD X0, X31, 0x1C
	0x0393902C MOV X1, X31
	0x03939030 STR W8, [X31 + 0x1C]
	0x03939034 BL 0x337B6E0
	0x03939038 MOV X3, X0
	0x0393903C B 0x393904C
	0x03939040 ADRP X8, 0x7BC000
	0x03939044 LDR X8, [X8 + 0x4B0]
	0x03939048 LDR X3, [X8]
	0x0393904C MOV X0, X21
	0x03939050 MOV X1, X20
	0x03939054 MOV X2, X19
	0x03939058 MOV X4, X31
	0x0393905C BL 0x3227C18
	0x03939060 LDP X20, X19, [X31 + 0x40]
	0x03939064 LDP X22, X21, [X31 + 0x30]
	0x03939068 LDP X30, X23, [X31 + 0x20]
	0x0393906C ADD X31, X31, 0x50
	0x03939070 RET
	0x03939074 STR X30, [X31 - 0x10]!
	0x03939078 CBZ X0, 0x39390DC
	0x0393907C LDR X8, [X0 + 0x28]
	0x03939080 CBZ X8, 0x39390DC
	0x03939084 LDR W9, [X8 + 0x18]
	0x03939088 CMP W9, 0x1
	0x0393908C B.LT 0x39390CC
	0x03939090 MOV W11, W31
	0x03939094 MOV W10, W31
	0x03939098 CMP W9, W11
	0x0393909C B.EQ 0x39390D8
	0x039390A0 ADD X12, X8, W11, 0x3, SXTW
	0x039390A4 LDR X12, [X12 + 0x20]
	0x039390A8 CBZ X12, 0x39390DC
	0x039390AC LDR W12, [X12 + 0x48]
	0x039390B0 ADD W11, W11, 0x1
	0x039390B4 CMP W10, W12
	0x039390B8 CSEL W10, W10, W12, GT
	0x039390BC CMP W9, W11
	0x039390C0 B.NE 0x3939098
	0x039390C4 ADD W0, W10, 0x1
	0x039390C8 B 0x39390D0
	0x039390CC MOVZ W0, 0x1
	0x039390D0 LDR X30, [X31], #0x10
	0x039390D4 RET
	0x039390D8 BL 0x1C16F28
	0x039390DC BL 0x1C16F20
	0x039390E0 SUB X31, X31, 0x80
	0x039390E4 STP X29, X30, [X31 + 0x20]
	0x039390E8 STP X28, X27, [X31 + 0x30]
	0x039390EC STP X26, X25, [X31 + 0x40]
	0x039390F0 STP X24, X23, [X31 + 0x50]
	0x039390F4 STP X22, X21, [X31 + 0x60]
	0x039390F8 STP X20, X19, [X31 + 0x70]
	0x039390FC ADRP X19, 0xAA8000
	0x03939100 LDRB W8, [X19 + 0x91B]
	0x03939104 MOV W21, W2
	0x03939108 MOV W24, W1
	0x0393910C MOV X22, X0
	0x03939110 TBNZ X8, 0x0, 0x39391B8
	0x03939114 ADRP X0, 0x7BA000
	0x03939118 LDR X0, [X0 + 0xE00]
	0x0393911C BL 0x1C16CF4
	0x03939120 ADRP X0, 0x814000
	0x03939124 LDR X0, [X0 + 0xDB0]
	0x03939128 BL 0x1C16CF4
	0x0393912C ADRP X0, 0x814000
	0x03939130 LDR X0, [X0 + 0xDB8]
	0x03939134 BL 0x1C16CF4
	0x03939138 ADRP X0, 0x7BA000
	0x0393913C LDR X0, [X0 + 0xE18]
	0x03939140 BL 0x1C16CF4
	0x03939144 ADRP X0, 0x7BB000
	0x03939148 LDR X0, [X0 + 0xE58]
	0x0393914C BL 0x1C16CF4
	0x03939150 ADRP X0, 0x815000
	0x03939154 LDR X0, [X0 + 0xE28]
	0x03939158 BL 0x1C16CF4
	0x0393915C ADRP X0, 0x815000
	0x03939160 LDR X0, [X0 + 0x688]
	0x03939164 BL 0x1C16CF4
	0x03939168 ADRP X0, 0x7BE000
	0x0393916C LDR X0, [X0 + 0xB70]
	0x03939170 BL 0x1C16CF4
	0x03939174 ADRP X0, 0x7BB000
	0x03939178 LDR X0, [X0 + 0xE28]
	0x0393917C BL 0x1C16CF4
	0x03939180 ADRP X0, 0x7E4000
	0x03939184 LDR X0, [X0 + 0xF38]
	0x03939188 BL 0x1C16CF4
	0x0393918C ADRP X0, 0x7BB000
	0x03939190 LDR X0, [X0 + 0xE30]
	0x03939194 BL 0x1C16CF4
	0x03939198 ADRP X0, 0x815000
	0x0393919C LDR X0, [X0 + 0xE30]
	0x039391A0 BL 0x1C16CF4
	0x039391A4 ADRP X0, 0x815000
	0x039391A8 LDR X0, [X0 + 0xE38]
	0x039391AC BL 0x1C16CF4
	0x039391B0 MOVZ W8, 0x1
	0x039391B4 STRB W8, [X19 + 0x91B]
	0x039391B8 ORR W8, W21, 0x2
	0x039391BC CMP W8, 0x2
	0x039391C0 B.NE 0x39398D8
	0x039391C4 CBZ X22, 0x3939898
	0x039391C8 ADRP X19, 0x815000
	0x039391CC LDR X19, [X19 + 0xE28]
	0x039391D0 CMP W21, 0x2
	0x039391D4 B.NE 0x39391EC
	0x039391D8 LDR X0, [X19]
	0x039391DC MOV W1, W24
	0x039391E0 BL 0x1C16D6C
	0x039391E4 MOV X20, X0
	0x039391E8 B 0x39391F0
	0x039391EC MOV X20, X31
	0x039391F0 LDR X0, [X19]
	0x039391F4 MOV W1, W24
	0x039391F8 BL 0x1C16D6C
	0x039391FC SUBS W8, W24, 0x1
	0x03939200 MOV X19, X0
	0x03939204 STR W8, [X31 + 0xC]
	0x03939208 B.LT 0x39392C0
	0x0393920C ADRP X26, 0x7BB000
	0x03939210 ADRP X27, 0x7BE000
	0x03939214 LDR X26, [X26 + 0xE30]
	0x03939218 LDR X27, [X27 + 0xB70]
	0x0393921C MOV X25, X31
	0x03939220 MOV W28, W24
	0x03939224 ADD X29, X19, 0x20
	0x03939228 ADD X23, X20, 0x20
	0x0393922C CMP W21, 0x2
	0x03939230 B.NE 0x3939274
	0x03939234 LDR X0, [X26]
	0x03939238 BL 0x1C16F10
	0x0393923C LDR X1, [X27]
	0x03939240 MOV X24, X0
	0x03939244 BL 0x2FDBF14
	0x03939248 CBZ X20, 0x3939884
	0x0393924C CBZ X24, 0x3939264
	0x03939250 LDR X8, [X20]
	0x03939254 MOV X0, X24
	0x03939258 LDR X1, [X8 + 0x40]
	0x0393925C BL 0x1C16E00
	0x03939260 CBZ X0, 0x393988C

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X29
	011 Move [X31+184], X30
	012 Move [X31+192], X28
	013 Move [X31+200], X27
	014 Move [X31+208], X26
	015 Move [X31+216], X25
	016 Move [X31+224], X24
	017 Move [X31+232], X23
	018 Move [X31+240], X22
	019 Move [X31+248], X21
	020 Move [X31+256], X20
	021 Move [X31+264], X19
	022 Move X20, 0xAAA000
	023 Move W8, [X20+2323]
	024 Move X24, X5
	025 Move X23, X4
	026 Move W21, W3
	027 Move W19, W1
	028 Move V11, V0
	029 Move [X31+80], W2
	030 Move [X31+96], X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {70}
	035 Move X0, 0x817000
	036 Move X0, [X0+1008]
	037 Call 0x1C17CF4
	038 Move X0, 0x817000
	039 Move X0, [X0+1376]
	040 Call 0x1C17CF4
	041 Move X0, 0x817000
	042 Move X0, [X0+3592]
	043 Call 0x1C17CF4
	044 Move X0, 0x816000
	045 Move X0, [X0+3960]
	046 Call 0x1C17CF4
	047 Move X0, 0x817000
	048 Move X0, [X0+3600]
	049 Call 0x1C17CF4
	050 Move X0, 0x816000
	051 Move X0, [X0+3968]
	052 Call 0x1C17CF4
	053 Move X0, 0x7BD000
	054 Move X0, [X0+3672]
	055 Call 0x1C17CF4
	056 Move X0, 0x7BC000
	057 Move X0, [X0+1448]
	058 Call 0x1C17CF4
	059 Move X0, 0x7BC000
	060 Move X0, [X0+1432]
	061 Call 0x1C17CF4
	062 Move X0, 0x817000
	063 Move X0, [X0+1320]
	064 Call 0x1C17CF4
	065 Move X0, 0x7BE000
	066 Move X0, [X0+2480]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X20+2323], W8
	070 Move X8, [X31+96]
	071 Move [X31+104], X31
	072 Compare X8, 0
	073 JumpIfEqual {592}
	074 Move X20, 0x816000
	075 Move X8, [X8]
	076 Move X20, [X20+3960]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X20]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X22, [X31+96]
	088 Move W2, W31
	089 Move X0, X22
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move X22, [X31+96]
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X22
	098 NotImplemented "Instruction BLR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X22]
	101 Move X1, [X20]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X22, [X31+96]
	112 Move W2, W31
	113 Move X0, X22
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move X22, [X31+96]
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X22
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, 0x7BC000
	124 Move X8, [X8+1448]
	125 Move W27, W0
	126 Move X8, [X8]
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move W0, 3
	133 Move W1, W19
	134 Move X2, X31
	135 Call Math.Max, X0, X1
	136 Move W8, [X31+80]
	137 Move W25, W0
	138 ShiftRight W25, 31
	139 And W25, W25, 0x3FFFFFFF
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W19, W0
	142 NotImplemented "Instruction ORN not yet implemented."
	143 And W8, W8, 1
	144 Subtract W8, W27, W8
	145 Multiply W8, W8, W25
	146 Move W8, W8
	147 ShiftRight W8, 31
	148 And W8, W8, 0x3FFFFFFF
	149 NotImplemented "Instruction CSEL not yet implemented."
	150 Move [X31+32], X24
	151 Move [X31+16], X23
	152 Compare X24, 0
	153 JumpIfEqual {170}
	154 Move X10, 0x817000
	155 Move X8, [X24]
	156 Move X10, [X10+3592]
	157 NotImplemented "Instruction LDRH not yet implemented."
	158 Move X1, [X10]
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X24
	168 Move W2, W31
	169 Call 0x1C5D788
	170 Move W9, 1
	171 Move [X31+64], W9
	172 Move W22, W8
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X24
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X24, [X31+96]
	181 Move X1, [X20]
	182 Move W26, W0
	183 Move X8, [X24]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X24
	194 Move W2, W31
	195 Call 0x1C5D788
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Add X8, X8, X9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X24
	202 NotImplemented "Instruction BLR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSET not yet implemented."
	205 Move [X31+64], W8
	206 Move X8, 0x7BE000
	207 Move X8, [X8+2480]
	208 Move W1, W22
	209 Move X0, [X8]
	210 Call 0x1C17D6C
	211 Move [X31+72], X0
	212 Move X9, 0x817000
	213 Move X9, [X9+1008]
	214 Subtract W8, W27, 1
	215 Move [X31+68], W27
	216 Move X0, [X9]
	217 Move W9, [X31+80]
	218 And W31, W9, 1
	219 NotImplemented "Instruction CSEL not yet implemented."
	220 Multiply W1, W19, W20
	221 Call 0x1C17D6C
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X27, X0
	224 Move [X31+60], W20
	225 Add W8, W19, 1
	226 Move [X31+92], W8
	227 Move X20, 0x7BD000
	228 Move X23, 0x817000
	229 Move X20, [X20+3672]
	230 Move X23, [X23+1376]
	231 Subtract W8, W25, 1
	232 Move W8, W8
	233 ShiftRight W8, 1
	234 And W8, W8, 0x7FFFFFFF
	235 Move W26, W31
	236 Move W28, W31
	237 Move W29, W31
	238 Move W22, W31
	239 Add W8, W8, 1
	240 Move [X31+44], W8
	241 Move [X31+28], S11
	242 Move W8, [X31+80]
	243 Move X19, [X31+96]
	244 Add X3, X31, 108
	245 Move W1, W22
	246 And W24, W8, 1
	247 Move X0, X19
	248 Move W2, W24
	249 Call Spline.GetRingRotation, X0, X1, X2, X3
	250 Move W9, [X31+68]
	251 Add W10, W22, 1
	252 Add X3, X31, 104
	253 Move X0, X19
	254 NotImplemented "Instruction SDIV not yet implemented."
	255 NotImplemented "Instruction MSUB not yet implemented."
	256 Move W1, W8
	257 Move W2, W24
	258 Move V15, V0
	259 Move V8, V1
	260 Move V14, V2
	261 Move V9, V3
	262 Move [X31+84], W10
	263 Move W19, W8
	264 Call Spline.GetRingRotation, X0, X1, X2, X3
	265 Move W8, [X31+64]
	266 Move V13, V1
	267 Move V10, V3
	268 Move TEMP, X8
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {274}
	272 Move [X31+88], S2
	273 Move V12, V0
	274 Move X24, [X31+32]
	275 Compare X24, 0
	276 JumpIfEqual {615}
	277 Move X8, [X24]
	278 Move X10, 0x817000
	279 NotImplemented "Instruction LDRH not yet implemented."
	280 Move X10, [X10+3600]
	281 Move [X31+52], S9
	282 Move [X31+60], S10
	283 Move [X31+88], S2
	284 Move [X31+48], S0
	285 Move X1, [X10]
	286 Compare X9, 0
	287 JumpIfEqual {294}
	288 Move X10, [X8+176]
	289 Add X10, X10, 8
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Subtract X9, X9, 1
	293 Add X10, X10, 16
	294 Move X0, X24
	295 Move W2, W31
	296 Call 0x1C5D788
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X8, X8, X9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X2, [X0+8]
	302 Move X0, X24
	303 Move W1, W22
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move X8, [X24]
	306 Move X10, 0x817000
	307 Move V11, V0
	308 Move V10, V1
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Move X10, [X10+3600]
	311 Move V9, V2
	312 Move V12, V3
	313 Move X1, [X10]
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move X0, X24
	323 Move W2, W31
	324 Call 0x1C5D788
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Add X8, X8, X9
	327 Add X0, X8, 312
	328 Move V21, [X31+52]
	329 Move X8, [X0]
	330 Move X2, [X0+8]
	331 Multiply S1, S15, S12
	332 Multiply S5, S8, S12
	333 Multiply S0, S21, S11
	334 Multiply S4, S21, S10
	335 Multiply S17, S15, S11
	336 Multiply S20, S21, S9
	337 Multiply S21, S21, S12
	338 Multiply S22, S14, S12
	339 Multiply S2, S8, S9
	340 Multiply S6, S14, S11
	341 Multiply S16, S15, S10
	342 Multiply S19, S8, S10
	343 Add S0, S0, S1
	344 Add S1, S4, S5
	345 Add S4, S20, S22
	346 Subtract S5, S21, S17
	347 Multiply S3, S14, S10
	348 Multiply S7, S15, S9
	349 Multiply S18, S8, S11
	350 Multiply S23, S14, S9
	351 Add S0, S2, S0
	352 Add S1, S6, S1
	353 Add S2, S16, S4
	354 Subtract S4, S5, S19
	355 Move X0, X24
	356 Move W1, W19
	357 Subtract S15, S0, S3
	358 Subtract S8, S1, S7
	359 Subtract S14, S2, S18
	360 Subtract S9, S4, S23
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move V23, [X31+56]
	363 Move V21, [X31+48]
	364 Move V24, [X31+88]
	365 Multiply S17, S13, S3
	366 Multiply S4, S23, S0
	367 Multiply S5, S21, S3
	368 Multiply S16, S23, S1
	369 Multiply S19, S21, S2
	370 Multiply S20, S21, S1
	371 Multiply S21, S21, S0
	372 Multiply S22, S23, S2
	373 Multiply S23, S23, S3
	374 Multiply S3, S24, S3
	375 Move V11, [X31+28]
	376 Multiply S6, S13, S2
	377 Multiply S7, S24, S1
	378 Multiply S18, S24, S0
	379 Multiply S1, S13, S1
	380 Add S4, S4, S5
	381 Add S5, S16, S17
	382 Add S3, S22, S3
	383 Subtract S16, S23, S21
	384 Multiply S0, S13, S0
	385 Multiply S2, S24, S2
	386 Add S4, S6, S4
	387 Add S5, S18, S5
	388 Add S3, S20, S3
	389 Subtract S1, S16, S1
	390 Subtract S12, S4, S7
	391 Subtract S13, S5, S19
	392 Subtract S0, S3, S0
	393 Subtract S10, S1, S2
	394 Move [X31+88], S0
	395 Move X24, [X31+96]
	396 Move X10, 0x816000
	397 Move X8, [X24]
	398 NotImplemented "Instruction LDRH not yet implemented."
	399 Move X10, [X10+3968]
	400 Move X1, [X10]
	401 Compare X9, 0
	402 JumpIfEqual {409}
	403 Move X10, [X8+176]
	404 Add X10, X10, 8
	405 NotImplemented "Instruction LDUR not yet implemented."
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Subtract X9, X9, 1
	408 Add X10, X10, 16
	409 Move X0, X24
	410 Move W2, W31
	411 Call 0x1C5D788
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Add X8, X8, X9
	414 Add X0, X8, 312
	415 Move X8, [X0]
	416 Move X2, [X0+8]
	417 Move X0, X24
	418 Move W1, W22
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Move W0, [X31+92]
	421 Move V4, V0
	422 Move V5, V1
	423 Move V6, V2
	424 Move V0, V15
	425 Move V1, V8
	426 Move V2, V14
	427 Move V3, V9
	428 Move V7, V11
	429 Call Spline.VertexRing, X0, X1, V0, X2
	430 Move X8, [X24]
	431 Move X10, 0x816000
	432 Move X22, X0
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Move X10, [X10+3968]
	435 Move X1, [X10]
	436 Compare X9, 0
	437 JumpIfEqual {444}
	438 Move X10, [X8+176]
	439 Add X10, X10, 8
	440 NotImplemented "Instruction LDUR not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Subtract X9, X9, 1
	443 Add X10, X10, 16
	444 Move X0, X24
	445 Move W2, W31
	446 Call 0x1C5D788
	447 NotImplemented "Instruction LDRSW not yet implemented."
	448 Add X8, X8, X9
	449 Add X0, X8, 312
	450 Move X8, [X0]
	451 Move X2, [X0+8]
	452 Move X0, X24
	453 Move W1, W19
	454 NotImplemented "Instruction BLR not yet implemented."
	455 Move V6, V2
	456 Move V2, [X31+88]
	457 Move W0, [X31+92]
	458 Move V4, V0
	459 Move V5, V1
	460 Move V0, V12
	461 Move V1, V13
	462 Move V3, V10
	463 Move V7, V11
	464 Call Spline.VertexRing, X0, X1, V0, X2
	465 Move X24, X0
	466 Move X0, X22
	467 Move X22, [X31+72]
	468 Move W1, W31
	469 Move W3, W29
	470 Move W4, W25
	471 Move X2, X22
	472 Move X5, X31
	473 Call Array.Copy, X0, X1, X2, X3, X4
	474 Add W19, W29, W25
	475 Move X0, X24
	476 Move W1, W31
	477 Move X2, X22
	478 Move W3, W19
	479 Move W4, W25
	480 Move X5, X31
	481 Call Array.Copy, X0, X1, X2, X3, X4
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Move W24, [X31+44]
	484 Add W8, W24, W28
	485 Move [X31+88], W8
	486 Move X0, [X20]
	487 Move W1, 6
	488 Call 0x1C17D6C
	489 Compare X0, 0
	490 JumpIfEqual {615}
	491 Move W8, [X0+24]
	492 Move X22, X0
	493 Compare W8, 0
	494 JumpIfEqual {614}
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move [X22+32], W26
	497 Add W9, W26, 1
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move [X22+36], W9
	500 Add W10, W25, W26
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move [X22+40], W10
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move [X22+44], W10
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move [X22+48], W9
	507 Add W8, W25, W26
	508 Add W8, W8, 1
	509 Move [X22+52], W8
	510 Move X0, [X23]
	511 Call 0x1C17F10
	512 Move X1, X22
	513 Move X2, X31
	514 Move X29, X0
	515 Call Face..ctor, X0, X1
	516 Compare X27, 0
	517 JumpIfEqual {615}
	518 Move W8, [X27+24]
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Add X8, X27, W28
	521 Move [X8+32], X29
	522 Move TEMP, X21
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfNotEqual {530}
	526 Compare X29, 0
	527 JumpIfEqual {615}
	528 Move W8, 2
	529 Move [X29+24], W8
	530 Add W28, W28, 1
	531 Subtract W24, W24, 1
	532 Add W26, W26, 2
	533 Move W28, [X31+88]
	534 Move W8, [X31+60]
	535 Move W22, [X31+84]
	536 Add W29, W19, W25
	537 Add W26, W26, W25
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X8, 0x7BB000
	540 Move X8, [X8+1432]
	541 Move X20, [X31+16]
	542 Move X0, [X8]
	543 Move X19, [X20]
	544 Move W8, [X0+224]
	545 Compare W8, 0
	546 JumpIfNotEqual {548}
	547 Call 0x1C17DFC
	548 Move X0, X19
	549 Move X1, X31
	550 Move X2, X31
	551 Call Object.op_Inequality, X0, X1
	552 Move TEMP, X0
	553 And TEMP, TEMP, 1
	554 Compare TEMP, 1
	555 JumpIfNotEqual {565}
	556 Move X0, [X20]
	557 Compare X0, 0
	558 JumpIfEqual {615}
	559 Compare X27, 0
	560 JumpIfEqual {577}
	561 Move X1, [X31+72]
	562 Move X2, X27
	563 Move X3, X31
	564 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	565 Move X8, 0x816000
	566 Move X8, [X8+1320]
	567 Move X0, [X8]
	568 Move W8, [X0+224]
	569 Compare W8, 0
	570 JumpIfNotEqual {572}
	571 Call 0x1C17DFC
	572 Move X0, [X31+72]
	573 Move X1, X27
	574 Move X2, X31
	575 Call ProBuilderMesh.Create, X0, X1
	576 Move [X20], X0
	577 Move X1, [X31+72]
	578 Move X2, X31
	579 Call ProBuilderMesh.set_positions, X0, X1
	580 Move X0, [X20]
	581 Compare X0, 0
	582 JumpIfEqual {615}
	583 Move W1, W31
	584 Move X2, X31
	585 Call ProBuilderMesh.ToMesh, X0, X1
	586 Move X0, [X20]
	587 Compare X0, 0
	588 JumpIfEqual {615}
	589 Move W1, 15
	590 Move X2, X31
	591 Call ProBuilderMesh.Refresh, X0, X1
	592 Move X20, [X31+256]
	593 Move X19, [X31+264]
	594 Move X22, [X31+240]
	595 Move X21, [X31+248]
	596 Move X24, [X31+224]
	597 Move X23, [X31+232]
	598 Move X26, [X31+208]
	599 Move X25, [X31+216]
	600 Move X28, [X31+192]
	601 Move X27, [X31+200]
	602 Move X29, [X31+176]
	603 Move X30, [X31+184]
	604 Move D9, [X31+160]
	605 Move D8, [X31+168]
	606 Move D11, [X31+144]
	607 Move D10, [X31+152]
	608 Move D13, [X31+128]
	609 Move D12, [X31+136]
	610 Move D15, [X31+112]
	611 Move D14, [X31+120]
	612 Add X31, X31, 272
	613 Return 
	614 Call 0x1C17F28
	615 Call 0x1C17F20

Method: UnityEngine.Quaternion GetRingRotation(System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Int32 i, System.Boolean closeLoop, out System.Single secant)

Disassembly:
	0x03939264 LDR W8, [X20 + 0x18]
	0x03939268 CMP X25, X8
	0x0393926C B.CS 0x3939880
	0x03939270 STR X24, [X23, X25, LSL #3]
	0x03939274 LDR X0, [X26]
	0x03939278 BL 0x1C16F10
	0x0393927C LDR X1, [X27]
	0x03939280 MOV X24, X0
	0x03939284 BL 0x2FDBF14
	0x03939288 CBZ X19, 0x3939884
	0x0393928C CBZ X24, 0x39392A4
	0x03939290 LDR X8, [X19]
	0x03939294 MOV X0, X24
	0x03939298 LDR X1, [X8 + 0x40]
	0x0393929C BL 0x1C16E00
	0x039392A0 CBZ X0, 0x393988C
	0x039392A4 LDR W8, [X19 + 0x18]
	0x039392A8 CMP X25, X8
	0x039392AC B.CS 0x3939880
	0x039392B0 STR X24, [X29, X25, LSL #3]
	0x039392B4 ADD X25, X25, 0x1
	0x039392B8 CMP X28, X25
	0x039392BC B.NE 0x393922C
	0x039392C0 ADRP X10, 0x814000
	0x039392C4 LDR X8, [X22]
	0x039392C8 LDR X10, [X10 + 0xDB0]
	0x039392CC LDRH W9, [X8 + 0x12E]
	0x039392D0 LDR X1, [X10]
	0x039392D4 CBZ X9, 0x39392F8
	0x039392D8 LDR X10, [X8 + 0xB0]
	0x039392DC ADD X10, X10, 0x8
	0x039392E0 LDUR X11, [X10 - 0x8]
	0x039392E4 CMP X11, X1
	0x039392E8 B.EQ 0x3939308
	0x039392EC SUBS X9, X9, 0x1
	0x039392F0 ADD X10, X10, 0x10
	0x039392F4 B.NE 0x39392E0
	0x039392F8 MOV X0, X22
	0x039392FC MOV W2, W31
	0x03939300 BL 0x1C5C788
	0x03939304 B 0x3939314
	0x03939308 LDRSW X9, [X10]
	0x0393930C ADD X8, X8, X9, 0x4, LSL
	0x03939310 ADD X0, X8, 0x138
	0x03939314 LDP X8, X1, [X0]
	0x03939318 ADRP X27, 0x7BA000
	0x0393931C LDR X27, [X27 + 0xE00]
	0x03939320 MOV X0, X22
	0x03939324 BLR X8
	0x03939328 MOV X22, X0
	0x0393932C STR X19, [X31 + 0x10]
	0x03939330 CBZ X0, 0x39398CC
	0x03939334 ADRP X28, 0x7BA000
	0x03939338 ADRP X29, 0x814000
	0x0393933C ADRP X26, 0x815000
	0x03939340 LDR X28, [X28 + 0xE18]
	0x03939344 LDR X29, [X29 + 0xDB8]
	0x03939348 LDR X26, [X26 + 0x688]
	0x0393934C MOVN W8, 0x0
	0x03939350 STR W8, [X31 + 0x1C]
	0x03939354 LDR X8, [X22]
	0x03939358 LDR X1, [X28]
	0x0393935C LDRH W9, [X8 + 0x12E]
	0x03939360 CBZ X9, 0x3939384
	0x03939364 LDR X10, [X8 + 0xB0]
	0x03939368 ADD X10, X10, 0x8
	0x0393936C LDUR X11, [X10 - 0x8]
	0x03939370 CMP X11, X1
	0x03939374 B.EQ 0x3939394
	0x03939378 SUBS X9, X9, 0x1
	0x0393937C ADD X10, X10, 0x10
	0x03939380 B.NE 0x393936C
	0x03939384 MOV X0, X22
	0x03939388 MOV W2, W31
	0x0393938C BL 0x1C5C788
	0x03939390 B 0x39393A0
	0x03939394 LDRSW X9, [X10]
	0x03939398 ADD X8, X8, X9, 0x4, LSL
	0x0393939C ADD X0, X8, 0x138
	0x039393A0 LDP X8, X1, [X0]
	0x039393A4 MOV X0, X22
	0x039393A8 BLR X8
	0x039393AC TBZ X0, 0x0, 0x39394CC
	0x039393B0 LDR X8, [X22]
	0x039393B4 LDR X1, [X29]
	0x039393B8 LDRH W9, [X8 + 0x12E]
	0x039393BC CBZ X9, 0x39393E0
	0x039393C0 LDR X10, [X8 + 0xB0]
	0x039393C4 ADD X10, X10, 0x8
	0x039393C8 LDUR X11, [X10 - 0x8]
	0x039393CC CMP X11, X1
	0x039393D0 B.EQ 0x39393F0
	0x039393D4 SUBS X9, X9, 0x1
	0x039393D8 ADD X10, X10, 0x10
	0x039393DC B.NE 0x39393C8
	0x039393E0 MOV X0, X22
	0x039393E4 MOV W2, W31
	0x039393E8 BL 0x1C5C788
	0x039393EC B 0x39393FC
	0x039393F0 LDRSW X9, [X10]
	0x039393F4 ADD X8, X8, X9, 0x4, LSL
	0x039393F8 ADD X0, X8, 0x138
	0x039393FC LDP X8, X1, [X0]
	0x03939400 MOV X0, X22
	0x03939404 BLR X8
	0x03939408 MOV X24, X0
	0x0393940C CBZ X0, 0x3939888
	0x03939410 LDR X8, [X24 + 0x10]
	0x03939414 CBZ X8, 0x3939354
	0x03939418 LDR W8, [X8 + 0x18]
	0x0393941C CMP W8, 0x1
	0x03939420 B.LT 0x3939354
	0x03939424 LDR W0, [X24 + 0x48]
	0x03939428 LDR W2, [X31 + 0xC]
	0x0393942C MOV W1, W31
	0x03939430 MOV X3, X31
	0x03939434 BL 0x3907A24
	0x03939438 LDR W8, [X31 + 0x1C]
	0x0393943C MOV W25, W0
	0x03939440 CMP W0, W8
	0x03939444 CSEL W8, W0, W8, GT
	0x03939448 CMP W21, 0x2
	0x0393944C STR W8, [X31 + 0x1C]
	0x03939450 B.NE 0x39394A0
	0x03939454 MOV X0, X24
	0x03939458 MOV X1, X31
	0x0393945C BL 0x3900798
	0x03939460 TBZ X0, 0x0, 0x39394A0
	0x03939464 CBZ X20, 0x393992C
	0x03939468 LDR W8, [X20 + 0x18]
	0x0393946C CMP W25, W8
	0x03939470 B.CS 0x3939930
	0x03939474 ADD X8, X20, W25, 0x3, SXTW
	0x03939478 LDR X25, [X8 + 0x20]
	0x0393947C MOV X0, X24
	0x03939480 MOV X1, X31
	0x03939484 BL 0x39007E0
	0x03939488 MOV X1, X0
	0x0393948C CBZ X25, 0x3939934
	0x03939490 LDR X2, [X26]
	0x03939494 MOV X0, X25
	0x03939498 BL 0x2FDC918
	0x0393949C B 0x3939354
	0x039394A0 CBZ X19, 0x3939928
	0x039394A4 LDR W8, [X19 + 0x18]
	0x039394A8 CMP W25, W8
	0x039394AC B.CS 0x3939920
	0x039394B0 ADD X8, X19, W25, 0x3, SXTW
	0x039394B4 LDR X0, [X8 + 0x20]
	0x039394B8 CBZ X0, 0x3939924
	0x039394BC LDR X1, [X24 + 0x10]
	0x039394C0 LDR X2, [X26]
	0x039394C4 BL 0x2FDC918
	0x039394C8 B 0x3939354
	0x039394CC MOV X24, X31
	0x039394D0 CBZ X22, 0x393952C
	0x039394D4 LDR X8, [X22]
	0x039394D8 LDR X1, [X27]
	0x039394DC LDRH W9, [X8 + 0x12E]
	0x039394E0 CBZ X9, 0x3939504
	0x039394E4 LDR X10, [X8 + 0xB0]
	0x039394E8 ADD X10, X10, 0x8
	0x039394EC LDUR X11, [X10 - 0x8]
	0x039394F0 CMP X11, X1
	0x039394F4 B.EQ 0x3939514
	0x039394F8 SUBS X9, X9, 0x1
	0x039394FC ADD X10, X10, 0x10
	0x03939500 B.NE 0x39394EC
	0x03939504 MOV X0, X22
	0x03939508 MOV W2, W31
	0x0393950C BL 0x1C5C788
	0x03939510 B 0x3939520
	0x03939514 LDRSW X9, [X10]
	0x03939518 ADD X8, X8, X9, 0x4, LSL
	0x0393951C ADD X0, X8, 0x138
	0x03939520 LDP X8, X1, [X0]
	0x03939524 MOV X0, X22
	0x03939528 BLR X8
	0x0393952C CBNZ X24, 0x39398D0
	0x03939530 ADRP X8, 0x815000
	0x03939534 LDR X8, [X8 + 0xE30]
	0x03939538 LDR X0, [X8]
	0x0393953C LDR W8, [X31 + 0x1C]
	0x03939540 ADD W23, W8, 0x1
	0x03939544 MOV W1, W23
	0x03939548 BL 0x1C16D6C
	0x0393954C MOV X22, X0
	0x03939550 CBZ W21, 0x39397EC
	0x03939554 CMP W21, 0x2
	0x03939558 B.NE 0x393985C
	0x0393955C CMP W23, 0x1
	0x03939560 B.LT 0x393985C
	0x03939564 CBZ X19, 0x3939884
	0x03939568 ADRP X29, 0x7E4000
	0x0393956C LDR X29, [X29 + 0xF38]
	0x03939570 MOV W8, W31
	0x03939574 LDR W9, [X19 + 0x18]
	0x03939578 CMP W8, W9
	0x0393957C B.CS 0x3939880
	0x03939580 SXTW X21, W8
	0x03939584 ADD X8, X19, X21, 0x3, LSL
	0x03939588 LDR X25, [X8 + 0x20]
	0x0393958C CBZ X25, 0x3939884
	0x03939590 LDR W27, [X25 + 0x18]
	0x03939594 CMP W27, 0x1
	0x03939598 B.LT 0x3939784
	0x0393959C CBZ X20, 0x3939884
	0x039395A0 LDR W8, [X20 + 0x18]
	0x039395A4 CMP W21, W8
	0x039395A8 B.CS 0x3939880
	0x039395AC ADD X8, X20, X21, 0x3, LSL
	0x039395B0 LDR X23, [X8 + 0x20]
	0x039395B4 CBZ X23, 0x3939884
	0x039395B8 ADRP X8, 0x7BB000
	0x039395BC LDR W28, [X23 + 0x18]
	0x039395C0 LDR X8, [X8 + 0xE58]
	0x039395C4 MOVZ W9, 0x6
	0x039395C8 MOV X19, X20
	0x039395CC CMP W28, 0x0
	0x039395D0 LDR X0, [X8]
	0x039395D4 ADD W8, W28, 0x3
	0x039395D8 CSEL W8, W8, W28, LT
	0x039395DC SBFM W8, W8, 0x2, 0x1F
	0x039395E0 MADD W1, W8, W9, W27
	0x039395E4 BL 0x1C16D6C
	0x039395E8 MOV X24, X0
	0x039395EC MOV X26, X31
	0x039395F0 ADD X20, X0, 0x20
	0x039395F4 LDR X2, [X29]
	0x039395F8 MOV X0, X25
	0x039395FC MOV W1, W26
	0x03939600 BL 0x2FDC41C
	0x03939604 CBZ X24, 0x3939884
	0x03939608 LDR W8, [X24 + 0x18]
	0x0393960C CMP X26, X8
	0x03939610 B.CS 0x3939880
	0x03939614 STR W0, [X20, X26, LSL #2]
	0x03939618 ADD X26, X26, 0x1
	0x0393961C CMP X27, X26
	0x03939620 B.NE 0x39395F4
	0x03939624 CMP W28, 0x1
	0x03939628 B.LT 0x393974C
	0x0393962C MOV W25, W31
	0x03939630 LDR X2, [X29]
	0x03939634 MOV X0, X23
	0x03939638 MOV W1, W25
	0x0393963C BL 0x2FDC41C
	0x03939640 LDR W8, [X24 + 0x18]
	0x03939644 CMP W27, W8
	0x03939648 B.CS 0x3939880
	0x0393964C ADD X8, X24, W27, 0x2, SXTW
	0x03939650 STR W0, [X8 + 0x20]
	0x03939654 LDR X2, [X29]
	0x03939658 ADD W25, W25, 0x1
	0x0393965C MOV X0, X23
	0x03939660 MOV W1, W25
	0x03939664 BL 0x2FDC41C
	0x03939668 LDR W8, [X24 + 0x18]
	0x0393966C ADD W20, W27, 0x1
	0x03939670 CMP W20, W8
	0x03939674 B.CS 0x3939880
	0x03939678 ADD X8, X24, W20, 0x2, SXTW
	0x0393967C STR W0, [X8 + 0x20]
	0x03939680 LDR X2, [X29]
	0x03939684 ADD W25, W25, 0x1
	0x03939688 MOV X0, X23
	0x0393968C MOV W1, W25
	0x03939690 BL 0x2FDC41C
	0x03939694 LDR W8, [X24 + 0x18]
	0x03939698 ADD W20, W20, 0x1
	0x0393969C CMP W20, W8
	0x039396A0 B.CS 0x3939880
	0x039396A4 ADD W8, W27, 0x2
	0x039396A8 ADD X8, X24, W8, 0x2, SXTW
	0x039396AC STR W0, [X8 + 0x20]
	0x039396B0 LDR X2, [X29]
	0x039396B4 MOV X0, X23
	0x039396B8 MOV W1, W25
	0x039396BC BL 0x2FDC41C
	0x039396C0 LDR W8, [X24 + 0x18]
	0x039396C4 ADD W20, W20, 0x1
	0x039396C8 CMP W20, W8
	0x039396CC B.CS 0x3939880
	0x039396D0 ADD W8, W27, 0x3
	0x039396D4 ADD X8, X24, W8, 0x2, SXTW
	0x039396D8 STR W0, [X8 + 0x20]
	0x039396DC LDR X2, [X29]
	0x039396E0 ADD W25, W25, 0x1
	0x039396E4 MOV X0, X23
	0x039396E8 MOV W1, W25
	0x039396EC BL 0x2FDC41C
	0x039396F0 LDR W8, [X24 + 0x18]
	0x039396F4 ADD W20, W20, 0x1
	0x039396F8 CMP W20, W8
	0x039396FC B.CS 0x3939880
	0x03939700 ADD W8, W27, 0x4
	0x03939704 ADD X8, X24, W8, 0x2, SXTW
	0x03939708 STR W0, [X8 + 0x20]
	0x0393970C LDR X2, [X29]
	0x03939710 SUB W25, W25, 0x3
	0x03939714 MOV X0, X23
	0x03939718 MOV W1, W25
	0x0393971C BL 0x2FDC41C
	0x03939720 LDR W9, [X24 + 0x18]
	0x03939724 ADD W8, W20, 0x1
	0x03939728 CMP W8, W9
	0x0393972C B.CS 0x3939880
	0x03939730 ADD W9, W27, 0x5
	0x03939734 ADD W25, W25, 0x4
	0x03939738 ADD X9, X24, W9, 0x2, SXTW
	0x0393973C CMP W25, W28
	0x03939740 ADD W27, W8, 0x1
	0x03939744 STR W0, [X9 + 0x20]
	0x03939748 B.LT 0x3939630
	0x0393974C ADRP X8, 0x815000
	0x03939750 LDR X8, [X8 + 0xE38]
	0x03939754 LDR X0, [X8]
	0x03939758 BL 0x1C16F10
	0x0393975C MOV W1, W21
	0x03939760 MOV W2, W31
	0x03939764 MOV X3, X24
	0x03939768 MOV X23, X0
	0x0393976C BL 0x3938DB4
	0x03939770 CBZ X22, 0x3939884
	0x03939774 LDR W8, [X22 + 0x18]
	0x03939778 MOV X20, X19
	0x0393977C LDR X19, [X31 + 0x10]
	0x03939780 B 0x39397C8
	0x03939784 CBZ X20, 0x3939884
	0x03939788 LDR W8, [X20 + 0x18]
	0x0393978C CMP W21, W8
	0x03939790 B.CS 0x3939880
	0x03939794 ADD X8, X20, X21, 0x3, LSL
	0x03939798 LDR X24, [X8 + 0x20]
	0x0393979C ADRP X8, 0x815000
	0x039397A0 LDR X8, [X8 + 0xE38]
	0x039397A4 LDR X0, [X8]
	0x039397A8 BL 0x1C16F10
	0x039397AC MOVZ W2, 0x2
	0x039397B0 MOV W1, W21
	0x039397B4 MOV X3, X24
	0x039397B8 MOV X23, X0
	0x039397BC BL 0x3938DB4
	0x039397C0 CBZ X22, 0x3939884
	0x039397C4 LDR W8, [X22 + 0x18]
	0x039397C8 CMP W21, W8
	0x039397CC B.CS 0x3939880
	0x039397D0 LDR W9, [X31 + 0x1C]
	0x039397D4 ADD X8, X22, X21, 0x3, LSL
	0x039397D8 STR X23, [X8 + 0x20]
	0x039397DC ADD W8, W21, 0x1
	0x039397E0 CMP W21, W9
	0x039397E4 B.NE 0x3939574
	0x039397E8 B 0x393985C
	0x039397EC CMP W23, 0x1
	0x039397F0 B.LT 0x393985C
	0x039397F4 CBZ X19, 0x3939884
	0x039397F8 ADRP X27, 0x815000
	0x039397FC LDR X27, [X27 + 0xE38]
	0x03939800 MOV X20, X31
	0x03939804 MOV W24, W23
	0x03939808 ADD X25, X19, 0x20
	0x0393980C ADD X26, X22, 0x20
	0x03939810 LDR W8, [X19 + 0x18]
	0x03939814 CMP X20, X8
	0x03939818 B.CS 0x3939880
	0x0393981C LDR X0, [X27]
	0x03939820 LDR X23, [X25, X20, LSL #3]
	0x03939824 BL 0x1C16F10
	0x03939828 MOV W1, W20
	0x0393982C MOV W2, W31
	0x03939830 MOV X3, X23
	0x03939834 MOV X21, X0
	0x03939838 BL 0x3938DB4
	0x0393983C CBZ X22, 0x3939884
	0x03939840 LDR W8, [X22 + 0x18]
	0x03939844 CMP X20, X8
	0x03939848 B.CS 0x3939880
	0x0393984C STR X21, [X26, X20, LSL #3]
	0x03939850 ADD X20, X20, 0x1
	0x03939854 CMP X24, X20
	0x03939858 B.NE 0x3939810
	0x0393985C MOV X0, X22
	0x03939860 LDP X20, X19, [X31 + 0x70]
	0x03939864 LDP X22, X21, [X31 + 0x60]
	0x03939868 LDP X24, X23, [X31 + 0x50]
	0x0393986C LDP X26, X25, [X31 + 0x40]
	0x03939870 LDP X28, X27, [X31 + 0x30]
	0x03939874 LDP X29, X30, [X31 + 0x20]
	0x03939878 ADD X31, X31, 0x80
	0x0393987C RET
	0x03939880 BL 0x1C16F28
	0x03939884 BL 0x1C16F20
	0x03939888 BL 0x1C16F20
	0x0393988C BL 0x1C16F44
	0x03939890 MOV X1, X31
	0x03939894 BL 0x1C16DEC
	0x03939898 ADRP X0, 0x7BF000
	0x0393989C LDR X0, [X0 + 0x528]
	0x039398A0 BL 0x1C16D08
	0x039398A4 BL 0x1C16F10
	0x039398A8 MOV X19, X0
	0x039398AC ADRP X0, 0x815000
	0x039398B0 LDR X0, [X0 + 0x640]
	0x039398B4 BL 0x1C16D08
	0x039398B8 MOV X1, X0
	0x039398BC MOV X0, X19
	0x039398C0 MOV X2, X31
	0x039398C4 BL 0x330E100
	0x039398C8 B 0x3939908
	0x039398CC BL 0x1C16F20
	0x039398D0 MOV X0, X24
	0x039398D4 BL 0x1C16F18
	0x039398D8 ADRP X0, 0x7C3000
	0x039398DC LDR X0, [X0 + 0x758]
	0x039398E0 BL 0x1C16D08
	0x039398E4 BL 0x1C16F10
	0x039398E8 MOV X19, X0
	0x039398EC ADRP X0, 0x815000
	0x039398F0 LDR X0, [X0 + 0xE40]
	0x039398F4 BL 0x1C16D08
	0x039398F8 MOV X1, X0
	0x039398FC MOV X0, X19
	0x03939900 MOV X2, X31
	0x03939904 BL 0x33802E4
	0x03939908 ADRP X0, 0x815000
	0x0393990C LDR X0, [X0 + 0xE48]
	0x03939910 BL 0x1C16D08
	0x03939914 MOV X1, X0
	0x03939918 MOV X0, X19
	0x0393991C BL 0x1C16DEC
	0x03939920 BL 0x1C16F28
	0x03939924 BL 0x1C16F20
	0x03939928 BL 0x1C16F20
	0x0393992C BL 0x1C16F20
	0x03939930 BL 0x1C16F28
	0x03939934 BL 0x1C16F20
	0x03939938 B 0x3939974
	0x0393993C B 0x3939974
	0x03939940 B 0x3939974
	0x03939944 B 0x3939980
	0x03939948 B 0x3939980
	0x0393994C B 0x3939974
	0x03939950 B 0x3939974
	0x03939954 B 0x3939980
	0x03939958 B 0x3939974
	0x0393995C B 0x3939980
	0x03939960 LDR X19, [X31 + 0x10]
	0x03939964 MOVN W8, 0x0
	0x03939968 MOV X23, X0
	0x0393996C STR W8, [X31 + 0x1C]
	0x03939970 B 0x3939984
	0x03939974 LDR X19, [X31 + 0x10]
	0x03939978 B 0x3939980
	0x0393997C B 0x3939980
	0x03939980 MOV X23, X0
	0x03939984 CMP W1, 0x1
	0x03939988 B.NE 0x39399A0
	0x0393998C MOV X0, X23
	0x03939990 BL 0x3EB1AD0
	0x03939994 LDR X24, [X0]
	0x03939998 BL 0x3EB1AE0
	0x0393999C B 0x39394D0
	0x039399A0 MOV X24, X31
	0x039399A4 B 0x39399AC
	0x039399A8 MOV X23, X0
	0x039399AC CBZ X22, 0x3939A08
	0x039399B0 LDR X8, [X22]
	0x039399B4 LDR X1, [X27]
	0x039399B8 LDRH W9, [X8 + 0x12E]
	0x039399BC CBZ X9, 0x39399E0
	0x039399C0 LDR X10, [X8 + 0xB0]
	0x039399C4 ADD X10, X10, 0x8
	0x039399C8 LDUR X11, [X10 - 0x8]
	0x039399CC CMP X11, X1
	0x039399D0 B.EQ 0x39399F0
	0x039399D4 SUBS X9, X9, 0x1
	0x039399D8 ADD X10, X10, 0x10
	0x039399DC B.NE 0x39399C8
	0x039399E0 MOV X0, X22
	0x039399E4 MOV W2, W31
	0x039399E8 BL 0x1C5C788
	0x039399EC B 0x39399FC
	0x039399F0 LDRSW X9, [X10]
	0x039399F4 ADD X8, X8, X9, 0x4, LSL
	0x039399F8 ADD X0, X8, 0x138
	0x039399FC LDP X8, X1, [X0]
	0x03939A00 MOV X0, X22
	0x03939A04 BLR X8
	0x03939A08 CBNZ X24, 0x3939A14
	0x03939A0C MOV X0, X23
	0x03939A10 BL 0x1D2C690
	0x03939A14 MOV X0, X24
	0x03939A18 BL 0x1C16F18
	0x03939A1C BL 0x1990590
	0x03939A20 STR X30, [X31 - 0x50]!
	0x03939A24 STP X26, X25, [X31 + 0x10]
	0x03939A28 STP X24, X23, [X31 + 0x20]
	0x03939A2C STP X22, X21, [X31 + 0x30]
	0x03939A30 STP X20, X19, [X31 + 0x40]
	0x03939A34 ADRP X19, 0xAA8000
	0x03939A38 LDRB W8, [X19 + 0x91C]
	0x03939A3C MOV X20, X0
	0x03939A40 TBNZ X8, 0x0, 0x3939A64
	0x03939A44 ADRP X0, 0x815000
	0x03939A48 LDR X0, [X0 + 0xE50]
	0x03939A4C BL 0x1C16CF4
	0x03939A50 ADRP X0, 0x7BA000
	0x03939A54 LDR X0, [X0 + 0x598]
	0x03939A58 BL 0x1C16CF4
	0x03939A5C MOVZ W8, 0x1
	0x03939A60 STRB W8, [X19 + 0x91C]
	0x03939A64 CBZ X20, 0x3939B44
	0x03939A68 MOV X0, X20
	0x03939A6C MOV X1, X31
	0x03939A70 BL 0x3912AD8
	0x03939A74 CBZ X0, 0x3939B44
	0x03939A78 MOV X1, X31
	0x03939A7C BL 0x3C1351C
	0x03939A80 CBZ X0, 0x3939B44
	0x03939A84 LDR X22, [X20 + 0x28]
	0x03939A88 CBZ X22, 0x3939B44
	0x03939A8C LDR W8, [X22 + 0x18]
	0x03939A90 CMP W8, 0x1
	0x03939A94 B.LT 0x3939B2C
	0x03939A98 LDR W9, [X0 + 0x18]
	0x03939A9C ADRP X24, 0x7BA000
	0x03939AA0 ADRP X25, 0x815000
	0x03939AA4 LDR X24, [X24 + 0x598]
	0x03939AA8 LDR X25, [X25 + 0xE50]
	0x03939AAC MOV X19, X0
	0x03939AB0 MOV W23, W31
	0x03939AB4 SUB W20, W9, 0x1
	0x03939AB8 CMP W23, W8
	0x03939ABC B.CS 0x3939B48
	0x03939AC0 ADD X8, X22, W23, 0x3, SXTW
	0x03939AC4 LDR X26, [X8 + 0x20]
	0x03939AC8 CBZ X26, 0x3939B44

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X22, 0xAA9000
	023 Move W8, [X22+2324]
	024 Move X19, X3
	025 Move W23, W2
	026 Move W21, W1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x815000
	033 Move X0, [X0+3960]
	034 Call 0x1C17CF4
	035 Move X0, 0x815000
	036 Move X0, [X0+3968]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2324], W8
	040 Compare X20, 0
	041 JumpIfEqual {574}
	042 Move X10, 0x815000
	043 Move X8, [X20]
	044 Move X10, [X10+3960]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X28, 0x815000
	064 Move X28, [X28+3968]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X26, 0x7BB000
	068 Move X24, 0x7BB000
	069 Move X26, [X26+1448]
	070 Move X24, [X24+1440]
	071 Move W22, W0
	072 Move X27, 0xAA0000
	073 Move X25, -48553984
	074 Move TEMP, X23
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {80}
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Subtract W23, W21, 1
	081 Subtract W8, W22, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W10, W21
	084 Move X8, [X20]
	085 Move X1, [X28]
	086 Subtract W23, W10, 1
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X20
	105 Move W1, W21
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X20]
	108 Move X1, [X28]
	109 Move V8, V0
	110 Move V9, V1
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move V10, V2
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move X0, X20
	122 Move W2, W31
	123 Call 0x1C5D788
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Add X8, X8, X9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X2, [X0+8]
	129 Move X0, X20
	130 Move W1, W23
	131 Add W29, W21, 1
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move W8, [X27+1925]
	134 Move V11, V0
	135 Move V12, V1
	136 Move V13, V2
	137 Compare W8, 0
	138 JumpIfNotEqual {144}
	139 Move X0, 0x7BB000
	140 Move X0, [X0+1448]
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X27+1925], W8
	144 Move X0, [X26]
	145 NotImplemented "Instruction SDIV not yet implemented."
	146 Subtract S11, S8, S11
	147 Subtract S9, S9, S12
	148 Move W8, [X0+224]
	149 Subtract S8, S10, S13
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Multiply S0, S11, S11
	154 Multiply S1, S9, S9
	155 Move V10, [X25+380]
	156 Add S0, S0, S1
	157 Multiply S1, S8, S8
	158 Add S0, S1, S0
	159 NotImplemented "Instruction FSQRT not yet implemented."
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 NotImplemented "Instruction MSUB not yet implemented."
	162 NotImplemented "Instruction FDIV not yet implemented."
	163 NotImplemented "Instruction FDIV not yet implemented."
	164 NotImplemented "Instruction FDIV not yet implemented."
	165 Move X23, 0xAA0000
	166 Move W8, [X23+1923]
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x7BB000
	170 Move X0, [X0+1440]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X23+1923], W8
	174 Move X8, [X24]
	175 Move X8, [X8+184]
	176 Move S14, [X8]
	177 Move S12, [X8+4]
	178 Move V13, [X8+8]
	179 Move X8, [X20]
	180 Move X1, [X28]
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move X0, X20
	191 Move W2, W31
	192 Call 0x1C5D788
	193 NotImplemented "Instruction LDRSW not yet implemented."
	194 Add X8, X8, X9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X2, [X0+8]
	198 Move X0, X20
	199 Move W1, W22
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move X8, [X20]
	202 Move X1, [X28]
	203 Move [X31+8], S12
	204 Move [X31+16], S13
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X20
	215 Move W2, W31
	216 Move V15, V2
	217 Move V8, V1
	218 Move V9, V0
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move V15, V2
	222 Move V8, V1
	223 Move V9, V0
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X2, [X0+8]
	228 Move X0, X20
	229 Move W1, W21
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move W8, [X27+1925]
	232 Move V11, V0
	233 Move V12, V1
	234 Move V13, V2
	235 Compare W8, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0x7BB000
	238 Move X0, [X0+1448]
	239 Call 0x1C17CF4
	240 Move W8, 1
	241 Move [X27+1925], W8
	242 Move X0, [X26]
	243 Subtract S11, S9, S11
	244 Subtract S9, S8, S12
	245 Subtract S8, S15, S13
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Multiply S0, S11, S11
	251 Multiply S1, S9, S9
	252 Add S0, S0, S1
	253 Multiply S1, S8, S8
	254 Add S0, S1, S0
	255 NotImplemented "Instruction FSQRT not yet implemented."
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Move V13, V14
	258 Move S14, [X31+8]
	259 Move S15, [X31+12]
	260 NotImplemented "Instruction FDIV not yet implemented."
	261 NotImplemented "Instruction FDIV not yet implemented."
	262 NotImplemented "Instruction FDIV not yet implemented."
	263 Move X20, 0xAA0000
	264 Move W8, [X20+1923]
	265 Move S14, [X31+8]
	266 Move S15, [X31+12]
	267 Compare W8, 0
	268 JumpIfNotEqual {274}
	269 Move X0, 0x7BB000
	270 Move X0, [X0+1440]
	271 Call 0x1C17CF4
	272 Move W8, 1
	273 Move [X20+1923], W8
	274 Move X8, [X24]
	275 Move X8, [X8+184]
	276 Move S0, [X8]
	277 Move S1, [X8+4]
	278 Move V2, [X8+8]
	279 Move X20, 0xAA0000
	280 Move W8, [X20+2596]
	281 Add S0, S13, S0
	282 Add S1, S14, S1
	283 Add S2, S15, S2
	284 Move S3, 0.5
	285 Multiply S8, S0, S3
	286 Multiply S9, S1, S3
	287 Multiply S10, S2, S3
	288 Compare W8, 0
	289 JumpIfNotEqual {295}
	290 Move X0, 0x7BB000
	291 Move X0, [X0+1448]
	292 Call 0x1C17CF4
	293 Move W8, 1
	294 Move [X20+2596], W8
	295 Move X0, [X26]
	296 Multiply S0, S13, S13
	297 Multiply S1, S14, S14
	298 Add S0, S0, S1
	299 Multiply S1, S15, S15
	300 Move W8, [X0+224]
	301 Add S11, S1, S0
	302 Multiply S0, S8, S8
	303 Multiply S1, S9, S9
	304 Add S0, S0, S1
	305 Multiply S1, S10, S10
	306 Add S12, S1, S0
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X8, -48558080
	311 Move V0, [X8+4072]
	312 Multiply S1, S11, S12
	313 NotImplemented "Instruction FSQRT not yet implemented."
	314 NotImplemented "Instruction FCMP not yet implemented."
	315 Move S0, W31
	316 Move X0, [X26]
	317 Multiply S0, S13, S8
	318 Multiply S2, S14, S9
	319 Multiply S3, S15, S10
	320 Add S0, S0, S2
	321 Add S0, S3, S0
	322 Move W8, [X0+224]
	323 NotImplemented "Instruction FDIV not yet implemented."
	324 Move S1, 1
	325 Move S2, -1
	326 NotImplemented "Instruction FMIN not yet implemented."
	327 NotImplemented "Instruction FCMP not yet implemented."
	328 NotImplemented "Instruction FCSEL not yet implemented."
	329 Compare W8, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 NotImplemented "Instruction FCVT not yet implemented."
	333 Call 0x3EB2B80
	334 Move X8, -48553984
	335 Move V1, [X8+1096]
	336 Move X8, -48553984
	337 Move V2, [X8+260]
	338 NotImplemented "Instruction INVALID not yet implemented."
	339 Multiply S0, S0, S1
	340 Multiply S0, S0, S2
	341 Move X0, X31
	342 Call Math.Secant, V0
	343 Move X8, [X20]
	344 Move X1, [X28]
	345 Add W22, W21, 1
	346 NotImplemented "Instruction LDRH not yet implemented."
	347 Compare X9, 0
	348 JumpIfEqual {355}
	349 Move X10, [X8+176]
	350 Add X10, X10, 8
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Subtract X9, X9, 1
	354 Add X10, X10, 16
	355 Move X0, X20
	356 Move W2, W31
	357 Call 0x1C5D788
	358 Move X8, [X20]
	359 Move X1, [X28]
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Compare X9, 0
	362 JumpIfEqual {369}
	363 Move X10, [X8+176]
	364 Add X10, X10, 8
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Subtract X9, X9, 1
	368 Add X10, X10, 16
	369 Move X0, X20
	370 Move W2, W31
	371 Call 0x1C5D788
	372 NotImplemented "Instruction LDRSW not yet implemented."
	373 Add X8, X8, X9
	374 Add X0, X8, 312
	375 Move X8, [X0]
	376 Move X2, [X0+8]
	377 Move X0, X20
	378 Move W1, W22
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X8, [X20]
	381 Move X1, [X28]
	382 Move V8, V0
	383 Move V9, V1
	384 NotImplemented "Instruction LDRH not yet implemented."
	385 Move V10, V2
	386 Compare X9, 0
	387 JumpIfEqual {394}
	388 Move X10, [X8+176]
	389 Add X10, X10, 8
	390 NotImplemented "Instruction LDUR not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Subtract X9, X9, 1
	393 Add X10, X10, 16
	394 Move X0, X20
	395 Move W2, W31
	396 Call 0x1C5D788
	397 NotImplemented "Instruction LDRSW not yet implemented."
	398 Add X8, X8, X9
	399 Add X0, X8, 312
	400 Move X8, [X0]
	401 Move X2, [X0+8]
	402 Move X0, X20
	403 Move W1, W21
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Add X8, X8, X9
	406 Add X0, X8, 312
	407 Move X8, [X0]
	408 Move X2, [X0+8]
	409 Move X0, X20
	410 Move W1, W21
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X8, [X20]
	413 Move X1, [X28]
	414 Move V8, V0
	415 Move V9, V1
	416 NotImplemented "Instruction LDRH not yet implemented."
	417 Move V10, V2
	418 Compare X9, 0
	419 JumpIfEqual {426}
	420 Move X10, [X8+176]
	421 Add X10, X10, 8
	422 NotImplemented "Instruction LDUR not yet implemented."
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Subtract X9, X9, 1
	425 Add X10, X10, 16
	426 Move X0, X20
	427 Move W2, W31
	428 Call 0x1C5D788
	429 NotImplemented "Instruction LDRSW not yet implemented."
	430 Add X8, X8, X9
	431 Add X0, X8, 312
	432 Move X8, [X0]
	433 Move X2, [X0+8]
	434 Move X0, X20
	435 Move W1, W23
	436 NotImplemented "Instruction BLR not yet implemented."
	437 Subtract S8, S8, S0
	438 Subtract S9, S9, S1
	439 Subtract S10, S10, S2
	440 Move S0, 1
	441 Move [X19], S0
	442 Move W8, [X27+1925]
	443 Compare W8, 0
	444 JumpIfNotEqual {450}
	445 Move X0, 0x7BB000
	446 Move X0, [X0+1448]
	447 Call 0x1C17CF4
	448 Move W8, 1
	449 Move [X27+1925], W8
	450 Move X0, [X26]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Multiply S0, S8, S8
	456 Multiply S1, S9, S9
	457 Move V2, [X25+380]
	458 Add S0, S0, S1
	459 Multiply S1, S10, S10
	460 Add S0, S1, S0
	461 NotImplemented "Instruction FSQRT not yet implemented."
	462 NotImplemented "Instruction FCMP not yet implemented."
	463 NotImplemented "Instruction FDIV not yet implemented."
	464 NotImplemented "Instruction FDIV not yet implemented."
	465 NotImplemented "Instruction FDIV not yet implemented."
	466 Move X19, 0xAA0000
	467 Move W8, [X19+1923]
	468 Compare W8, 0
	469 JumpIfNotEqual {475}
	470 Move X0, 0x7BB000
	471 Move X0, [X0+1440]
	472 Call 0x1C17CF4
	473 Move W8, 1
	474 Move [X19+1923], W8
	475 Move X8, [X24]
	476 Move X8, [X8+184]
	477 Move S8, [X8]
	478 Move S9, [X8+4]
	479 Move V10, [X8+8]
	480 Move X19, 0xAA0000
	481 Move W8, [X19+1926]
	482 Compare W8, 0
	483 JumpIfNotEqual {489}
	484 Move X0, 0x7BB000
	485 Move X0, [X0+1440]
	486 Call 0x1C17CF4
	487 Move W8, 1
	488 Move [X19+1926], W8
	489 Move X8, [X24]
	490 Move V0, V8
	491 Move V1, V9
	492 Move V2, V10
	493 Move X8, [X8+184]
	494 Move X0, X31
	495 Move S3, [X8+24]
	496 Move S4, [X8+28]
	497 Move V5, [X8+32]
	498 Move X8, -48558080
	499 Move V11, [X8+3880]
	500 Move V6, V11
	501 Call Math.Approx3, X0, X1, V0
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfEqual {530}
	506 Move X19, 0xAA0000
	507 Move W8, [X19+1923]
	508 Compare W8, 0
	509 JumpIfNotEqual {515}
	510 Move X0, 0x7BB000
	511 Move X0, [X0+1440]
	512 Call 0x1C17CF4
	513 Move W8, 1
	514 Move [X19+1923], W8
	515 Move X8, [X24]
	516 Move V0, V8
	517 Move V1, V9
	518 Move V2, V10
	519 Move X8, [X8+184]
	520 Move V6, V11
	521 Move X0, X31
	522 Move S3, [X8]
	523 Move S4, [X8+4]
	524 Move V5, [X8+8]
	525 Call Math.Approx3, X0, X1, V0
	526 Move TEMP, X0
	527 And TEMP, TEMP, 1
	528 Compare TEMP, 1
	529 JumpIfNotEqual {547}
	530 Move X19, 0xAA0000
	531 Move W8, [X19+1939]
	532 Compare W8, 0
	533 JumpIfNotEqual {539}
	534 Move X0, 0x7BC000
	535 Move X0, [X0+1448]
	536 Call 0x1C17CF4
	537 Move W8, 1
	538 Move [X19+1939], W8
	539 Move X8, 0x7BC000
	540 Move X8, [X8+1448]
	541 Move X8, [X8]
	542 Move X8, [X8+184]
	543 Move S0, [X8]
	544 Move S1, [X8+4]
	545 Move S2, [X8+8]
	546 Move S3, [X8+12]
	547 Move V0, V8
	548 Move V1, V9
	549 Move V2, V10
	550 Move X0, X31
	551 Call Quaternion.LookRotation, X0
	552 Move X20, [X31+160]
	553 Move X19, [X31+168]
	554 Move X22, [X31+144]
	555 Move X21, [X31+152]
	556 Move X24, [X31+128]
	557 Move X23, [X31+136]
	558 Move X26, [X31+112]
	559 Move X25, [X31+120]
	560 Move X28, [X31+96]
	561 Move X27, [X31+104]
	562 Move X29, [X31+80]
	563 Move X30, [X31+88]
	564 Move D9, [X31+64]
	565 Move D8, [X31+72]
	566 Move D11, [X31+48]
	567 Move D10, [X31+56]
	568 Move D13, [X31+32]
	569 Move D12, [X31+40]
	570 Move D15, [X31+16]
	571 Move D14, [X31+24]
	572 Add X31, X31, 176
	573 Return X0
	574 Call 0x1C17F20

Method: UnityEngine.Vector3[] VertexRing(UnityEngine.Quaternion orientation, UnityEngine.Vector3 offset, System.Single radius, System.Int32 segments)

Disassembly:
	0x03939ACC LDR X0, [X24]
	0x03939AD0 LDR X21, [X26 + 0x40]
	0x03939AD4 LDR W8, [X0 + 0xE0]
	0x03939AD8 CBNZ W8, 0x3939AE0
	0x03939ADC BL 0x1C16DFC
	0x03939AE0 MOV X0, X21
	0x03939AE4 MOV X1, X31
	0x03939AE8 MOV X2, X31
	0x03939AEC BL 0x3C3883C
	0x03939AF0 TBNZ X0, 0x0, 0x3939B1C
	0x03939AF4 LDR X1, [X26 + 0x40]
	0x03939AF8 LDR X2, [X25]
	0x03939AFC MOV X0, X19
	0x03939B00 BL 0x22E75A0
	0x03939B04 MOV W1, W31
	0x03939B08 MOV W2, W20
	0x03939B0C MOV X3, X31
	0x03939B10 BL 0x3907A24
	0x03939B14 STR W0, [X26 + 0x48]
	0x03939B18 STR X31, [X26 + 0x40]
	0x03939B1C LDR W8, [X22 + 0x18]
	0x03939B20 ADD W23, W23, 0x1
	0x03939B24 CMP W23, W8
	0x03939B28 B.LT 0x3939AB8
	0x03939B2C LDP X20, X19, [X31 + 0x40]
	0x03939B30 LDP X22, X21, [X31 + 0x30]
	0x03939B34 LDP X24, X23, [X31 + 0x20]
	0x03939B38 LDP X26, X25, [X31 + 0x10]
	0x03939B3C LDR X30, [X31], #0x50
	0x03939B40 RET
	0x03939B44 BL 0x1C16F20
	0x03939B48 BL 0x1C16F28
	0x03939B4C STR D12, [X31 - 0x40]!
	0x03939B50 STP D11, D10, [X31 + 0x10]
	0x03939B54 STP D9, D8, [X31 + 0x20]
	0x03939B58 STP X30, X19, [X31 + 0x30]
	0x03939B5C MOV X1, X31
	0x03939B60 MOV V8.16B, V4.16B
	0x03939B64 MOV V9.16B, V3.16B
	0x03939B68 MOV V10.16B, V2.16B
	0x03939B6C MOV V11.16B, V1.16B
	0x03939B70 MOV V12.16B, V0.16B
	0x03939B74 MOV X19, X0
	0x03939B78 BL 0x33BDD8C
	0x03939B7C STP S12, S11, [X19 + 0x10]
	0x03939B80 STP S10, S9, [X19 + 0x18]
	0x03939B84 STR S8, [X19 + 0x20]
	0x03939B88 LDP X30, X19, [X31 + 0x30]
	0x03939B8C LDP D9, D8, [X31 + 0x20]
	0x03939B90 LDP D11, D10, [X31 + 0x10]
	0x03939B94 LDR V12, [X31], #0x40
	0x03939B98 RET
	0x03939B9C STP D9, D8, [X31 - 0x20]!
	0x03939BA0 STP X30, X19, [X31 + 0x10]
	0x03939BA4 LDP S2, S3, [X0 + 0x10]
	0x03939BA8 LDR V4, [X0 + 0x18]
	0x03939BAC MOV X19, X0
	0x03939BB0 MOV X0, X31
	0x03939BB4 FADD S8, S0, S2
	0x03939BB8 FADD S9, S1, S3
	0x03939BBC MOV V0.16B, V8.16B
	0x03939BC0 MOV V1.16B, V9.16B
	0x03939BC4 MOV V2.16B, V8.16B
	0x03939BC8 MOV V3.16B, V9.16B
	0x03939BCC BL 0x3908120
	0x03939BD0 LDP S4, S5, [X19 + 0x1C]
	0x03939BD4 MOV V0.16B, V8.16B
	0x03939BD8 MOV V1.16B, V9.16B
	0x03939BDC MOV V2.16B, V8.16B
	0x03939BE0 MOV V3.16B, V9.16B
	0x03939BE4 MOV X0, X31
	0x03939BE8 BL 0x3908190
	0x03939BEC LDP X30, X19, [X31 + 0x10]
	0x03939BF0 MOV V0.16B, V8.16B
	0x03939BF4 MOV V1.16B, V9.16B
	0x03939BF8 LDP D9, D8, [X31], #0x20
	0x03939BFC RET
	0x03939C00 SUB X31, X31, 0x30
	0x03939C04 STP X30, X21, [X31 + 0x10]
	0x03939C08 STP X20, X19, [X31 + 0x20]
	0x03939C0C ADRP X20, 0xAA8000
	0x03939C10 ADRP X21, 0x7BA000
	0x03939C14 LDRB W8, [X20 + 0x91D]
	0x03939C18 LDR X21, [X21 + 0xAC8]
	0x03939C1C MOV X19, X0
	0x03939C20 TBNZ X8, 0x0, 0x3939C5C
	0x03939C24 ADRP X0, 0x7BA000
	0x03939C28 LDR X0, [X0 + 0xAC8]
	0x03939C2C BL 0x1C16CF4
	0x03939C30 ADRP X0, 0x815000
	0x03939C34 LDR X0, [X0 + 0xE58]
	0x03939C38 BL 0x1C16CF4
	0x03939C3C ADRP X0, 0x815000
	0x03939C40 LDR X0, [X0 + 0xE60]
	0x03939C44 BL 0x1C16CF4
	0x03939C48 ADRP X0, 0x815000
	0x03939C4C LDR X0, [X0 + 0xE68]
	0x03939C50 BL 0x1C16CF4
	0x03939C54 MOVZ W8, 0x1
	0x03939C58 STRB W8, [X20 + 0x91D]
	0x03939C5C LDR X0, [X21]
	0x03939C60 MOVZ W1, 0x6
	0x03939C64 BL 0x1C16D6C
	0x03939C68 CBZ X0, 0x3939D4C
	0x03939C6C LDR W8, [X0 + 0x18]
	0x03939C70 MOV X20, X0
	0x03939C74 CBZ W8, 0x3939D48
	0x03939C78 ADRP X8, 0x815000
	0x03939C7C LDR X8, [X8 + 0xE58]
	0x03939C80 ADD X0, X31, 0x8
	0x03939C84 MOV X1, X31
	0x03939C88 MOV X2, X31
	0x03939C8C LDR X8, [X8]
	0x03939C90 MOV X3, X31
	0x03939C94 STR X8, [X20 + 0x20]
	0x03939C98 LDR X8, [X19 + 0x10]
	0x03939C9C STR X8, [X31 + 0x8]
	0x03939CA0 BL 0x25F34C4
	0x03939CA4 LDR W8, [X20 + 0x18]
	0x03939CA8 CMP W8, 0x1
	0x03939CAC B.LS 0x3939D48
	0x03939CB0 CMP W8, 0x2
	0x03939CB4 STR X0, [X20 + 0x28]
	0x03939CB8 B.EQ 0x3939D48

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X28
	012 Move [X31+120], X27
	013 Move [X31+128], X26
	014 Move [X31+136], X25
	015 Move [X31+144], X24
	016 Move [X31+152], X23
	017 Move [X31+160], X22
	018 Move [X31+168], X21
	019 Move [X31+176], X20
	020 Move [X31+184], X19
	021 Move [X31+16], S2
	022 Move [X31+24], S3
	023 Move [X31+8], S0
	024 Move [X31+16], S1
	025 Move X19, 0xAA9000
	026 Move X21, 0x7BD000
	027 Move W8, [X19+2325]
	028 Move X21, [X21+2480]
	029 Move W20, W0
	030 Move V8, V7
	031 Move V15, V6
	032 Move V11, V5
	033 Move V13, V4
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {43}
	038 Move X0, 0x7BD000
	039 Move X0, [X0+2480]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+2325], W8
	043 Move X0, [X21]
	044 Move W1, W20
	045 ShiftRight W1, 31
	046 And W1, W1, 0x3FFFFFFF
	047 Call 0x1C17D6C
	048 Subtract W9, W20, 1
	049 Move X19, X0
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 Move X9, -48553984
	052 Move V10, [X9+260]
	053 Move W20, W20
	054 Move X21, X31
	055 Move X8, X31
	056 Move TEMP, 0
	057 Not TEMP
	058 Move X22, TEMP
	059 Move W23, 0x43B40000
	060 Subtract X24, X20, 1
	061 Move W25, 12
	062 Move X26, 1
	063 Move X27, 2
	064 NotImplemented "Instruction SCVTF not yet implemented."
	065 Move S14, W23
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 Add X28, X8, 1
	068 Multiply S0, S0, S14
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 Multiply S0, S0, S10
	072 Move S2, W31
	073 Add X0, X31, 108
	074 Add X1, X31, 104
	075 NotImplemented "Instruction FCSEL not yet implemented."
	076 Call 0x3EB2BC0
	077 Move S0, [X31+104]
	078 Move S1, [X31+108]
	079 Move S2, [X31+16]
	080 Move S3, [X31+20]
	081 Move S6, W31
	082 Move X0, X31
	083 Multiply S4, S0, S8
	084 Multiply S5, S1, S8
	085 Move S0, [X31+8]
	086 Move S1, [X31+12]
	087 Call Quaternion.op_Multiply, X0, X1
	088 Compare X19, 0
	089 JumpIfEqual {156}
	090 Move W8, [X19+24]
	091 Add X9, X22, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 Add S4, S13, S0
	095 NotImplemented "Instruction SBFM not yet implemented."
	096 Multiply S0, S3, S14
	097 Add S1, S11, S1
	098 Add S2, S15, S2
	099 NotImplemented "Instruction MADD not yet implemented."
	100 Multiply S0, S0, S10
	101 Add X0, X31, 28
	102 Add X1, X31, 24
	103 Move [X8+32], S4
	104 Move [X8+40], S1
	105 Move [X8+40], S2
	106 Call 0x3EB2BC0
	107 Move S0, [X31+24]
	108 Move S1, [X31+28]
	109 Move S2, [X31+16]
	110 Move S3, [X31+20]
	111 Move S6, W31
	112 Move X0, X31
	113 Multiply S4, S0, S8
	114 Multiply S5, S1, S8
	115 Move S0, [X31+8]
	116 Move S1, [X31+12]
	117 Call Quaternion.op_Multiply, X0, X1
	118 Move W8, [X19+24]
	119 Add X22, X22, 2
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X21, X26
	122 NotImplemented "Instruction SBFM not yet implemented."
	123 Add S2, S15, S2
	124 Add S1, S11, S1
	125 Add S0, S13, S0
	126 NotImplemented "Instruction MADD not yet implemented."
	127 Add X21, X21, X27
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X8+32], S0
	130 Move [X8+40], S1
	131 Move [X8+40], S2
	132 Move X8, X28
	133 Move X0, X19
	134 Move X20, [X31+176]
	135 Move X19, [X31+184]
	136 Move X22, [X31+160]
	137 Move X21, [X31+168]
	138 Move X24, [X31+144]
	139 Move X23, [X31+152]
	140 Move X26, [X31+128]
	141 Move X25, [X31+136]
	142 Move X28, [X31+112]
	143 Move X27, [X31+120]
	144 Move X30, [X31+96]
	145 Move D9, [X31+80]
	146 Move D8, [X31+88]
	147 Move D11, [X31+64]
	148 Move D10, [X31+72]
	149 Move D13, [X31+48]
	150 Move D12, [X31+56]
	151 Move D15, [X31+32]
	152 Move D14, [X31+40]
	153 Add X31, X31, 192
	154 Return X0
	155 Call 0x1C17F28
	156 Call 0x1C17F20

