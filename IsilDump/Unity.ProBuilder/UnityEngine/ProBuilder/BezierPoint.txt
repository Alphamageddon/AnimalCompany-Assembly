Type: UnityEngine.ProBuilder.BezierPoint

Method: System.Void .ctor(UnityEngine.Vector3 position, UnityEngine.Vector3 tangentIn, UnityEngine.Vector3 tangentOut, UnityEngine.Quaternion rotation)

Disassembly:
	0x038F7E04 STR W10, [X20 + 0x18]
	0x038F7E08 MOVZ W10, 0x34
	0x038F7E0C ADRP X11, 0xFFFFFFFFFD1F4000
	0x038F7E10 MADD X8, X9, X10, X8
	0x038F7E14 ADRP X9, 0xFFFFFFFFFD1F6000
	0x038F7E18 LDR V4, [X11 + 0xF6]
	0x038F7E1C LDR V5, [X9 + 0x660]
	0x038F7E20 STP S10, S9, [X8 + 0x20]
	0x038F7E24 STR S8, [X8 + 0x28]
	0x038F7E28 STP S3, S2, [X8 + 0x44]

ISIL:
	001 Move V6, [X31+1]
	002 Move V7, [X31+8]
	003 Move X8, [X31]
	004 Move [X0], S0
	005 Move [X0+8], S1
	006 Move [X0+8], S2
	007 Move [X0+16], S3
	008 Move [X0+16], S4
	009 Move [X0+24], S5
	010 Move [X0+24], X8
	011 Move [X0+32], S7
	012 Move [X0+36], V6
	013 Return 

Method: System.Void EnforceTangentMode(UnityEngine.ProBuilder.BezierTangentDirection master, UnityEngine.ProBuilder.BezierTangentMode mode)

Disassembly:
	0x038F7E2C STUR V4, [X8 + 0x2C]
	0x038F7E30 STUR D5, [X8 + 0x3C]
	0x038F7E34 STP S1, S0, [X8 + 0x4C]
	0x038F7E38 LDR X19, [X19 + 0x20]
	0x038F7E3C B 0x38F7EA0
	0x038F7E40 LDR X8, [X10 + 0x20]
	0x038F7E44 ADRP X9, 0xFFFFFFFFFD1F4000
	0x038F7E48 LDR V4, [X9 + 0xF6]
	0x038F7E4C ADRP X9, 0xFFFFFFFFFD1F6000
	0x038F7E50 LDR X8, [X8 + 0xC0]
	0x038F7E54 LDR V5, [X9 + 0x660]
	0x038F7E58 ADD X1, X31, 0x0
	0x038F7E5C MOV X0, X20
	0x038F7E60 LDR X2, [X8 + 0x70]
	0x038F7E64 STP S10, S9, [X31]
	0x038F7E68 STR S8, [X31 + 0x8]
	0x038F7E6C STUR V4, [X31 + 0xC]
	0x038F7E70 STUR D5, [X31 + 0x1C]
	0x038F7E74 STP S3, S2, [X31 + 0x24]
	0x038F7E78 STP S1, S0, [X31 + 0x2C]
	0x038F7E7C BL 0x2F5F18C
	0x038F7E80 LDRB W8, [X23 + 0x793]
	0x038F7E84 LDR X19, [X19 + 0x20]
	0x038F7E88 CBNZ W8, 0x38F7EA0
	0x038F7E8C ADRP X0, 0x7FD000
	0x038F7E90 LDR X0, [X0 + 0x5A8]
	0x038F7E94 BL 0x1C16CF4
	0x038F7E98 MOVZ W8, 0x1
	0x038F7E9C STRB W8, [X23 + 0x793]
	0x038F7EA0 CBZ X19, 0x38F7F6C
	0x038F7EA4 LDR X8, [X22]
	0x038F7EA8 LDR W11, [X19 + 0x1C]
	0x038F7EAC LDR X10, [X21]
	0x038F7EB0 LDR X9, [X8 + 0xB8]
	0x038F7EB4 LDR X8, [X19 + 0x10]
	0x038F7EB8 LDP S3, S2, [X9]
	0x038F7EBC LDP S1, S0, [X9 + 0x8]
	0x038F7EC0 ADD W9, W11, 0x1
	0x038F7EC4 STR W9, [X19 + 0x1C]
	0x038F7EC8 CBZ X8, 0x38F7F6C
	0x038F7ECC LDRSW X9, [X19 + 0x18]
	0x038F7ED0 LDR W11, [X8 + 0x18]
	0x038F7ED4 CMP W9, W11
	0x038F7ED8 B.CS 0x38F7F14
	0x038F7EDC ADD W10, W9, 0x1
	0x038F7EE0 STR W10, [X19 + 0x18]
	0x038F7EE4 MOVZ W10, 0x34
	0x038F7EE8 ADRP X11, 0xFFFFFFFFFD1F4000
	0x038F7EEC MADD X8, X9, X10, X8
	0x038F7EF0 ADRP X9, 0xFFFFFFFFFD1F4000
	0x038F7EF4 LDR V4, [X11 + 0x22]
	0x038F7EF8 LDR V5, [X9 + 0x3F]
	0x038F7EFC MOVZ W10, 0xC0000000
	0x038F7F00 STR W10, [X8 + 0x40]
	0x038F7F04 STP S3, S2, [X8 + 0x44]
	0x038F7F08 STP V4, V5, [X8 + 0x20]
	0x038F7F0C STP S1, S0, [X8 + 0x4C]
	0x038F7F10 B 0x38F7F50
	0x038F7F14 LDR X8, [X10 + 0x20]
	0x038F7F18 ADRP X9, 0xFFFFFFFFFD1F4000
	0x038F7F1C ADRP X10, 0xFFFFFFFFFD1F4000
	0x038F7F20 LDR V4, [X9 + 0x22]
	0x038F7F24 LDR X8, [X8 + 0xC0]
	0x038F7F28 LDR V5, [X10 + 0x3F]
	0x038F7F2C MOVZ W9, 0xC0000000
	0x038F7F30 ADD X1, X31, 0x0
	0x038F7F34 LDR X2, [X8 + 0x70]
	0x038F7F38 MOV X0, X19
	0x038F7F3C STP V4, V5, [X31]
	0x038F7F40 STR W9, [X31 + 0x20]
	0x038F7F44 STP S3, S2, [X31 + 0x24]
	0x038F7F48 STP S1, S0, [X31 + 0x2C]
	0x038F7F4C BL 0x2F5F18C
	0x038F7F50 LDP X20, X19, [X31 + 0x80]
	0x038F7F54 LDP X22, X21, [X31 + 0x70]
	0x038F7F58 LDP X30, X23, [X31 + 0x60]
	0x038F7F5C LDP D9, D8, [X31 + 0x50]
	0x038F7F60 LDR V10, [X31 + 0x40]
	0x038F7F64 ADD X31, X31, 0x90
	0x038F7F68 RET
	0x038F7F6C BL 0x1C16F20
	0x038F7F70 STR X30, [X31 - 0x20]!
	0x038F7F74 STP X20, X19, [X31 + 0x10]
	0x038F7F78 ADRP X20, 0xAEA000
	0x038F7F7C LDRB W8, [X20 + 0x75F]
	0x038F7F80 MOV X19, X0
	0x038F7F84 TBNZ X8, 0x0, 0x38F7F9C
	0x038F7F88 ADRP X0, 0x856000
	0x038F7F8C LDR X0, [X0 + 0xA70]
	0x038F7F90 BL 0x1C16CF4
	0x038F7F94 MOVZ W8, 0x1
	0x038F7F98 STRB W8, [X20 + 0x75F]
	0x038F7F9C LDR X8, [X19 + 0x20]
	0x038F7FA0 CBZ X8, 0x38F8028
	0x038F7FA4 LDR W20, [X8 + 0x18]
	0x038F7FA8 MOV X0, X19
	0x038F7FAC BL 0x38F7C80
	0x038F7FB0 CMP W20, 0x1
	0x038F7FB4 B.LE 0x38F7FE0
	0x038F7FB8 STR X0, [X31 + 0x8]
	0x038F7FBC LDR X0, [X19 + 0x20]
	0x038F7FC0 LDR V0, [X19 + 0x2C]
	0x038F7FC4 LDP W2, W1, [X19 + 0x30]
	0x038F7FC8 LDRB W3, [X19 + 0x28]
	0x038F7FCC LDRB W4, [X19 + 0x38]
	0x038F7FD0 ADD X5, X31, 0x8
	0x038F7FD4 MOV X6, X31
	0x038F7FD8 BL 0x3937358
	0x038F7FDC B 0x38F801C
	0x038F7FE0 CBZ X0, 0x38F8028
	0x038F7FE4 MOV X1, X31
	0x038F7FE8 BL 0x3916FC0
	0x038F7FEC MOV X0, X19
	0x038F7FF0 BL 0x38F7C80
	0x038F7FF4 CBZ X0, 0x38F8028
	0x038F7FF8 MOV W1, W31
	0x038F7FFC MOV X2, X31
	0x038F8000 BL 0x39197E8
	0x038F8004 MOV X0, X19
	0x038F8008 BL 0x38F7C80
	0x038F800C CBZ X0, 0x38F8028
	0x038F8010 MOVZ W1, 0x1F
	0x038F8014 MOV X2, X31
	0x038F8018 BL 0x3919D94
	0x038F801C LDP X20, X19, [X31 + 0x10]
	0x038F8020 LDR X30, [X31], #0x20
	0x038F8024 RET
	0x038F8028 BL 0x1C16F20
	0x038F802C STR X30, [X31 - 0x30]!
	0x038F8030 STP X22, X21, [X31 + 0x10]
	0x038F8034 STP X20, X19, [X31 + 0x20]
	0x038F8038 ADRP X21, 0xAE9000
	0x038F803C ADRP X22, 0x855000
	0x038F8040 ADRP X20, 0x855000
	0x038F8044 LDRB W8, [X21 + 0x760]
	0x038F8048 LDR X22, [X22 + 0xA78]
	0x038F804C LDR X20, [X20 + 0xA80]
	0x038F8050 MOV X19, X0
	0x038F8054 TBNZ X8, 0x0, 0x38F8078
	0x038F8058 ADRP X0, 0x855000
	0x038F805C LDR X0, [X0 + 0xA80]
	0x038F8060 BL 0x1C16CF4
	0x038F8064 ADRP X0, 0x855000
	0x038F8068 LDR X0, [X0 + 0xA78]
	0x038F806C BL 0x1C16CF4
	0x038F8070 MOVZ W8, 0x1
	0x038F8074 STRB W8, [X21 + 0x760]
	0x038F8078 LDR X0, [X22]
	0x038F807C BL 0x1C16F10
	0x038F8080 LDR X1, [X20]
	0x038F8084 MOV X20, X0
	0x038F8088 BL 0x2F5E8A0
	0x038F808C ADRP X8, 0xFFFFFFFFFD1F6000
	0x038F8090 LDR V0, [X8 + 0x170]
	0x038F8094 MOVZ W8, 0x3F000000
	0x038F8098 MOVZ W9, 0x1
	0x038F809C STR X20, [X19 + 0x20]
	0x038F80A0 STR W8, [X19 + 0x2C]
	0x038F80A4 STR D0, [X19 + 0x30]
	0x038F80A8 STRB W9, [X19 + 0x38]
	0x038F80AC MOV X0, X19
	0x038F80B0 LDP X20, X19, [X31 + 0x20]
	0x038F80B4 LDP X22, X21, [X31 + 0x10]
	0x038F80B8 MOV X1, X31
	0x038F80BC LDR X30, [X31], #0x30
	0x038F80C0 B 0x3C36C30
	0x038F80C4 LDP S0, S1, [X0 + 0x18]
	0x038F80C8 RET
	0x038F80CC FMOV S2, 0.5
	0x038F80D0 STP S0, S1, [X0 + 0x18]
	0x038F80D4 FMUL S0, S0, S2
	0x038F80D8 FMUL S1, S1, S2
	0x038F80DC STP S0, S1, [X0 + 0x20]
	0x038F80E0 RET
	0x038F80E4 LDP S0, S1, [X0 + 0x20]
	0x038F80E8 RET
	0x038F80EC STP X30, X21, [X31 - 0x20]!
	0x038F80F0 STP X20, X19, [X31 + 0x10]
	0x038F80F4 ADRP X20, 0xAE9000
	0x038F80F8 ADRP X21, 0x855000
	0x038F80FC LDRB W8, [X20 + 0x761]
	0x038F8100 LDR X21, [X21 + 0xA88]
	0x038F8104 MOV X19, X0
	0x038F8108 TBNZ X8, 0x0, 0x38F8120
	0x038F810C ADRP X0, 0x855000
	0x038F8110 LDR X0, [X0 + 0xA88]
	0x038F8114 BL 0x1C16CF4
	0x038F8118 MOVZ W8, 0x1
	0x038F811C STRB W8, [X20 + 0x761]
	0x038F8120 LDR X0, [X21]
	0x038F8124 MOVZ W1, 0x4
	0x038F8128 BL 0x1C16D6C
	0x038F812C CBZ X0, 0x38F81B0
	0x038F8130 LDR W8, [X0 + 0x18]
	0x038F8134 CBZ W8, 0x38F81AC
	0x038F8138 LDR V0, [X19 + 0x20]
	0x038F813C LDR V1, [X19 + 0x10]
	0x038F8140 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X19, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move V13, [X19]
	018 Move V12, [X19+8]
	019 Move [X31], D13
	020 Move [X31+12], S12
	021 Compare W1, 0
	022 JumpIfEqual {64}
	023 Move X20, 0xAE2000
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move W8, [X20+1925]
	026 Move V9, [X19+20]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x7FD000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1925], W8
	034 Move X20, 0x7FD000
	035 Move X20, [X20+1448]
	036 Subtract V10, V8, V13
	037 Subtract S11, S9, S12
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, -48283648
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 Move V1, [X8+380]
	046 NotImplemented "Instruction FADDP not yet implemented."
	047 Multiply S2, S11, S11
	048 Add S0, S2, S0
	049 NotImplemented "Instruction FSQRT not yet implemented."
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 NotImplemented "Instruction FDIV not yet implemented."
	054 Move V1, [X19]
	055 Move V0, [X19+8]
	056 Compare W1, 0
	057 JumpIfEqual {95}
	058 Move V2, [X19+24]
	059 Move V3, [X19+32]
	060 Subtract V2, V2, V1
	061 Subtract S3, S3, S0
	062 Subtract V1, V1, V2
	063 Subtract S0, S0, S3
	064 Move X20, 0xAE2000
	065 Move V8, [X19+24]
	066 Move W8, [X20+1925]
	067 Move V9, [X19+32]
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x7FD000
	071 Move X0, [X0+1448]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+1925], W8
	075 Move X20, 0x7FD000
	076 Move X20, [X20+1448]
	077 Subtract V10, V8, V13
	078 Subtract S11, S9, S12
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X8, -48283648
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 Move V1, [X8+380]
	087 NotImplemented "Instruction FADDP not yet implemented."
	088 Multiply S2, S11, S11
	089 Add S0, S2, S0
	090 NotImplemented "Instruction FSQRT not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move V3, [X19+20]
	097 Subtract V2, V2, V1
	098 Subtract S3, S3, S0
	099 Subtract V1, V1, V2
	100 Subtract S0, S0, S3
	101 Move X21, 0xAE2000
	102 Move W8, [X21+1923]
	103 Compare W8, 0
	104 JumpIfNotEqual {110}
	105 Move X0, 0x7FD000
	106 Move X0, [X0+1440]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X21+1923], W8
	110 Move X8, 0x7FD000
	111 Move X8, [X8+1440]
	112 Move X8, [X8]
	113 Move X8, [X8+184]
	114 Move V10, [X8]
	115 Move V11, [X8+8]
	116 Move X21, 0xAE2000
	117 Move S12, [X19+24]
	118 Move S13, [X19+28]
	119 Move V14, [X19+32]
	120 Move S15, [X19]
	121 Move S8, [X19+4]
	122 Move W8, [X21+1924]
	123 Move V9, [X19+8]
	124 Compare W8, 0
	125 JumpIfNotEqual {131}
	126 Move X0, 0x7FC000
	127 Move X0, [X0+1448]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X21+1924], W8
	131 Move X0, [X20]
	132 Subtract S15, S12, S15
	133 Subtract S12, S13, S8
	134 Subtract S8, S14, S9
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Multiply S0, S15, S15
	140 Multiply S1, S12, S12
	141 Multiply S2, S8, S8
	142 Add S0, S0, S1
	143 Add S0, S0, S2
	144 Move V2, [X31]
	145 NotImplemented "Instruction FSQRT not yet implemented."
	146 NotImplemented "Instruction INVALID not yet implemented."
	147 Multiply S0, S11, S0
	148 Add V1, V2, V1
	149 Move V2, [X31+12]
	150 Add S0, S2, S0
	151 Move [X19+12], D1
	152 Move [X19+20], S0
	153 Move X21, 0xAE1000
	154 Move W8, [X21+1923]
	155 Compare W8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, 0x7FC000
	158 Move X0, [X0+1440]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X21+1923], W8
	162 Move X8, 0x7FC000
	163 Move X8, [X8+1440]
	164 Move X8, [X8]
	165 Move X8, [X8+184]
	166 Move V10, [X8]
	167 Move V11, [X8+8]
	168 Move X21, 0xAE1000
	169 Move S12, [X19+16]
	170 Move S13, [X19+20]
	171 Move S14, [X19]
	172 Move S8, [X19+4]
	173 Move W8, [X21+1924]
	174 Move S9, [X19+8]
	175 Move S15, [X19+12]
	176 Compare W8, 0
	177 JumpIfNotEqual {183}
	178 Move X0, 0x7FC000
	179 Move X0, [X0+1448]
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move [X21+1924], W8
	183 Move X0, [X20]
	184 Subtract S14, S15, S14
	185 Subtract S12, S12, S8
	186 Subtract S8, S13, S9
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Multiply S0, S14, S14
	192 Multiply S1, S12, S12
	193 Multiply S2, S8, S8
	194 Add S0, S0, S1
	195 Add S0, S0, S2
	196 Move V2, [X31]
	197 NotImplemented "Instruction FSQRT not yet implemented."
	198 NotImplemented "Instruction INVALID not yet implemented."
	199 Multiply S0, S11, S0
	200 Add V1, V2, V1
	201 Move V2, [X31+12]
	202 Add S0, S2, S0
	203 Move [X19+24], D1
	204 Move [X19+32], S0
	205 Move X20, [X31+96]
	206 Move X19, [X31+104]
	207 Move X30, [X31+80]
	208 Move X21, [X31+88]
	209 Move D9, [X31+64]
	210 Move D8, [X31+72]
	211 Move D11, [X31+48]
	212 Move D10, [X31+56]
	213 Move D13, [X31+32]
	214 Move D12, [X31+40]
	215 Move D15, [X31+16]
	216 Move D14, [X31+24]
	217 Add X31, X31, 112
	218 Return 

Method: System.Void SetPosition(UnityEngine.Vector3 position)

Disassembly:
	0x038F8144 FSUB V2.2S, V1.2S, V0.2S
	0x038F8148 FADD V0.2S, V1.2S, V0.2S
	0x038F814C MOV V2.S[1], V0.S[1]
	0x038F8150 STR D2, [X0 + 0x20]
	0x038F8154 B.EQ 0x38F81AC
	0x038F8158 LDR V0, [X19 + 0x10]
	0x038F815C LDR V1, [X19 + 0x20]
	0x038F8160 CMP W8, 0x2
	0x038F8164 FADD V0.2S, V0.2S, V1.2S
	0x038F8168 STR D0, [X0 + 0x28]
	0x038F816C B.LS 0x38F81AC
	0x038F8170 LDR V0, [X19 + 0x10]
	0x038F8174 LDR V1, [X19 + 0x20]
	0x038F8178 CMP W8, 0x3
	0x038F817C FSUB V0.2S, V0.2S, V1.2S
	0x038F8180 STR D0, [X0 + 0x30]
	0x038F8184 B.EQ 0x38F81AC
	0x038F8188 LDR V0, [X19 + 0x10]
	0x038F818C LDR V1, [X19 + 0x20]
	0x038F8190 LDP X20, X19, [X31 + 0x10]
	0x038F8194 FADD V2.2S, V0.2S, V1.2S

ISIL:
	001 Move V3, [X0]
	002 Move V4, [X0+8]
	003 Move V5, V0
	004 Move [X0], S0
	005 Move [X0+8], S1
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move V5.S[1], V1.S[0]
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 Subtract V3, V5, V3
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move [X0+8], S2
	012 Subtract S2, S2, S4
	013 Add V0, V3, V0
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	016 Move V3.S[1], V2.S[0]
	017 Move [X0+12], D0
	018 Add V0, V4, V1
	019 Add V1, V3, V5
	020 Move [X0+20], D0
	021 Move [X0+28], D1
	022 Return 

Method: System.Void SetTangentIn(UnityEngine.Vector3 tangent, UnityEngine.ProBuilder.BezierTangentMode mode)

Disassembly:
	0x038F8198 FSUB V0.2S, V0.2S, V1.2S
	0x038F819C MOV V2.S[1], V0.S[1]
	0x038F81A0 STR D2, [X0 + 0x38]
	0x038F81A4 LDP X30, X21, [X31], #0x20
	0x038F81A8 RET

ISIL:
	001 Move W2, W1
	002 Move W1, W31
	003 Move [X0+12], S0
	004 Move [X0+20], S1
	005 Move [X0+20], S2
	006 Call BezierPoint.EnforceTangentMode, X0, X1, X2
	007 Return 

Method: System.Void SetTangentOut(UnityEngine.Vector3 tangent, UnityEngine.ProBuilder.BezierTangentMode mode)

Disassembly:
	0x038F81AC BL 0x1C16F28
	0x038F81B0 BL 0x1C16F20
	0x038F81B4 STR X30, [X31 - 0x20]!
	0x038F81B8 STP X20, X19, [X31 + 0x10]
	0x038F81BC ADRP X20, 0xAE1000

ISIL:
	001 Move W2, W1
	002 Move W1, 1
	003 Move [X0+24], S0
	004 Move [X0+32], S1
	005 Move [X0+32], S2
	006 Call BezierPoint.EnforceTangentMode, X0, X1, X2
	007 Return 

Method: UnityEngine.Vector3 QuadraticPosition(UnityEngine.ProBuilder.BezierPoint a, UnityEngine.ProBuilder.BezierPoint b, System.Single t)

Disassembly:
	0x038F81C0 LDRB W8, [X20 + 0x78F]
	0x038F81C4 MOV X19, X0
	0x038F81C8 CBNZ W8, 0x38F81E0
	0x038F81CC ADRP X0, 0x803000
	0x038F81D0 LDR X0, [X0 + 0xF08]
	0x038F81D4 BL 0x1C16CF4
	0x038F81D8 MOVZ W8, 0x1
	0x038F81DC STRB W8, [X20 + 0x78F]
	0x038F81E0 ADRP X8, 0x803000
	0x038F81E4 LDR X8, [X8 + 0xF08]
	0x038F81E8 MOV X0, X19
	0x038F81EC MOV X1, X31
	0x038F81F0 LDR X8, [X8]
	0x038F81F4 LDR X9, [X8 + 0xB8]
	0x038F81F8 LDR V0, [X9]
	0x038F81FC STR D0, [X19 + 0x10]
	0x038F8200 LDR X9, [X8 + 0xB8]
	0x038F8204 LDR V0, [X9]
	0x038F8208 STR D0, [X19 + 0x18]
	0x038F820C LDR X8, [X8 + 0xB8]
	0x038F8210 LDR V0, [X8]
	0x038F8214 STR D0, [X19 + 0x20]
	0x038F8218 LDP X20, X19, [X31 + 0x10]
	0x038F821C LDR X30, [X31], #0x20

ISIL:
	001 Move S4, 1
	002 Move V1, [X0]
	003 Move V2, [X0+24]
	004 Move V7, [X0+32]
	005 Subtract S4, S4, S0
	006 Move V3, [X1]
	007 Move V6, [X0+8]
	008 Add S16, S4, S4
	009 Multiply S5, S0, S0
	010 Multiply S0, S16, S0
	011 Move V16, [X1+8]
	012 Multiply S4, S4, S4
	013 Multiply S7, S0, S7
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 Multiply S6, S4, S6
	017 NotImplemented "Instruction INVALID not yet implemented."
	018 Add V0, V1, V0
	019 Multiply S16, S5, S16
	020 Add S2, S6, S7
	021 Add V0, V0, V3
	022 Add S2, S2, S16
	023 Move S1, V0.S[1]
	024 Return X0

Method: UnityEngine.Vector3 CubicPosition(UnityEngine.ProBuilder.BezierPoint a, UnityEngine.ProBuilder.BezierPoint b, System.Single t)

Disassembly:
	0x038F8220 B 0x33BDD8C
	0x038F8224 STP D11, D10, [X31 - 0x40]!
	0x038F8228 STP D9, D8, [X31 + 0x10]
	0x038F822C STR X30, [X31 + 0x20]
	0x038F8230 STP X20, X19, [X31 + 0x30]
	0x038F8234 ADRP X20, 0xAE1000
	0x038F8238 LDRB W8, [X20 + 0x78F]
	0x038F823C MOV V8.16B, V3.16B
	0x038F8240 MOV V9.16B, V2.16B
	0x038F8244 MOV V10.16B, V1.16B
	0x038F8248 MOV V11.16B, V0.16B
	0x038F824C MOV X19, X0
	0x038F8250 CBNZ W8, 0x38F8268
	0x038F8254 ADRP X0, 0x803000
	0x038F8258 LDR X0, [X0 + 0xF08]
	0x038F825C BL 0x1C16CF4
	0x038F8260 MOVZ W8, 0x1
	0x038F8264 STRB W8, [X20 + 0x78F]
	0x038F8268 ADRP X8, 0x803000
	0x038F826C LDR X8, [X8 + 0xF08]
	0x038F8270 MOV X0, X19
	0x038F8274 MOV X1, X31
	0x038F8278 LDR X8, [X8]
	0x038F827C LDR X9, [X8 + 0xB8]
	0x038F8280 LDR V0, [X9]
	0x038F8284 STR D0, [X19 + 0x10]
	0x038F8288 LDR X9, [X8 + 0xB8]
	0x038F828C LDR V0, [X9]
	0x038F8290 STR D0, [X19 + 0x18]
	0x038F8294 LDR X8, [X8 + 0xB8]
	0x038F8298 LDR V0, [X8]
	0x038F829C STR D0, [X19 + 0x20]
	0x038F82A0 BL 0x33BDD8C
	0x038F82A4 FMOV S0, 0.5
	0x038F82A8 FMUL S1, S9, S0
	0x038F82AC FMUL S0, S8, S0
	0x038F82B0 STP S11, S10, [X19 + 0x10]
	0x038F82B4 STP S9, S8, [X19 + 0x18]
	0x038F82B8 STP S1, S0, [X19 + 0x20]
	0x038F82BC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move S2, W31
	004 Move V16, [X1]
	005 Move V17, [X1+8]
	006 NotImplemented "Instruction FMIN not yet implemented."
	007 NotImplemented "Instruction FCSEL not yet implemented."
	008 Move V3, [X0]
	009 Move V4, [X0+8]
	010 Multiply S2, S0, S0
	011 Subtract S1, S1, S0
	012 Multiply S2, S0, S2
	013 Move S7, 3
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Multiply S2, S2, S17
	016 Multiply S17, S1, S1
	017 Move V5, [X0+24]
	018 Multiply S17, S1, S17
	019 Multiply S7, S1, S7
	020 Move V6, [X0+32]
	021 NotImplemented "Instruction INVALID not yet implemented."
	022 Multiply S4, S17, S4
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Multiply S1, S1, S7
	025 Multiply S7, S0, S7
	026 Multiply S1, S0, S1
	027 Multiply S0, S0, S7
	028 Move V7, [X1+20]
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Multiply S1, S1, S6
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 Add V3, V3, V5
	033 Multiply S0, S0, S7
	034 Add S1, S4, S1
	035 Add V3, V3, V6
	036 Add S1, S1, S0
	037 Add V0, V3, V16
	038 Add S2, S1, S2
	039 Move S1, V0.S[1]
	040 Return X0

Method: UnityEngine.Vector3 GetLookDirection(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.BezierPoint> points, System.Int32 index, System.Int32 previous, System.Int32 next)

Disassembly:
	0x038F82C0 LDR X30, [X31 + 0x20]
	0x038F82C4 LDP D9, D8, [X31 + 0x10]
	0x038F82C8 LDP D11, D10, [X31], #0x40
	0x038F82CC RET
	0x038F82D0 STP X30, X21, [X31 - 0x20]!
	0x038F82D4 STP X20, X19, [X31 + 0x10]
	0x038F82D8 ADRP X21, 0xAE1000
	0x038F82DC LDRB W8, [X21 + 0x78F]
	0x038F82E0 MOV X19, X1
	0x038F82E4 MOV X20, X0
	0x038F82E8 CBNZ W8, 0x38F8300
	0x038F82EC ADRP X0, 0x803000
	0x038F82F0 LDR X0, [X0 + 0xF08]
	0x038F82F4 BL 0x1C16CF4
	0x038F82F8 MOVZ W8, 0x1
	0x038F82FC STRB W8, [X21 + 0x78F]
	0x038F8300 ADRP X8, 0x803000
	0x038F8304 LDR X8, [X8 + 0xF08]
	0x038F8308 MOV X0, X20
	0x038F830C MOV X1, X31
	0x038F8310 LDR X8, [X8]
	0x038F8314 LDR X9, [X8 + 0xB8]
	0x038F8318 LDR V0, [X9]
	0x038F831C STR D0, [X20 + 0x10]
	0x038F8320 LDR X9, [X8 + 0xB8]
	0x038F8324 LDR V0, [X9]
	0x038F8328 STR D0, [X20 + 0x18]
	0x038F832C LDR X8, [X8 + 0xB8]
	0x038F8330 LDR V0, [X8]
	0x038F8334 STR D0, [X20 + 0x20]
	0x038F8338 BL 0x33BDD8C
	0x038F833C MOV X0, X20
	0x038F8340 MOV X1, X19
	0x038F8344 LDP X20, X19, [X31 + 0x10]
	0x038F8348 LDP X30, X21, [X31], #0x20
	0x038F834C B 0x38F8350
	0x038F8350 STR D12, [X31 - 0x60]!
	0x038F8354 STP D11, D10, [X31 + 0x10]
	0x038F8358 STP D9, D8, [X31 + 0x20]
	0x038F835C STP X30, X23, [X31 + 0x30]
	0x038F8360 STP X22, X21, [X31 + 0x40]
	0x038F8364 STP X20, X19, [X31 + 0x50]
	0x038F8368 ADRP X21, 0xAE9000
	0x038F836C LDRB W8, [X21 + 0x762]
	0x038F8370 MOV X20, X1
	0x038F8374 MOV X19, X0
	0x038F8378 TBNZ X8, 0x0, 0x38F839C
	0x038F837C ADRP X0, 0x855000
	0x038F8380 LDR X0, [X0 + 0xA90]
	0x038F8384 BL 0x1C16CF4
	0x038F8388 ADRP X0, 0x855000
	0x038F838C LDR X0, [X0 + 0xA98]
	0x038F8390 BL 0x1C16CF4
	0x038F8394 MOVZ W8, 0x1
	0x038F8398 STRB W8, [X21 + 0x762]
	0x038F839C CBZ X20, 0x38F863C
	0x038F83A0 ADRP X10, 0x855000
	0x038F83A4 LDR X8, [X20]
	0x038F83A8 LDR X10, [X10 + 0xA90]
	0x038F83AC LDRH W9, [X8 + 0x12E]
	0x038F83B0 LDR X1, [X10]
	0x038F83B4 CBZ X9, 0x38F83D8
	0x038F83B8 LDR X10, [X8 + 0xB0]
	0x038F83BC ADD X10, X10, 0x8
	0x038F83C0 LDUR X11, [X10 - 0x8]
	0x038F83C4 CMP X11, X1
	0x038F83C8 B.EQ 0x38F83E8
	0x038F83CC SUBS X9, X9, 0x1
	0x038F83D0 ADD X10, X10, 0x10
	0x038F83D4 B.NE 0x38F83C0
	0x038F83D8 MOV X0, X20
	0x038F83DC MOV W2, W31
	0x038F83E0 BL 0x1C5C788
	0x038F83E4 B 0x38F83F4
	0x038F83E8 LDRSW X9, [X10]
	0x038F83EC ADD X8, X8, X9, 0x4, LSL
	0x038F83F0 ADD X0, X8, 0x138
	0x038F83F4 LDP X8, X1, [X0]
	0x038F83F8 MOV X0, X20
	0x038F83FC BLR X8
	0x038F8400 CMP W0, 0x1
	0x038F8404 B.LT 0x38F8454
	0x038F8408 ADRP X23, 0x855000
	0x038F840C LDR X8, [X20]
	0x038F8410 LDR X23, [X23 + 0xA98]
	0x038F8414 MOV W21, W0
	0x038F8418 LDRH W9, [X8 + 0x12E]
	0x038F841C LDR X1, [X23]
	0x038F8420 CBZ X9, 0x38F8444
	0x038F8424 LDR X10, [X8 + 0xB0]
	0x038F8428 ADD X10, X10, 0x8
	0x038F842C LDUR X11, [X10 - 0x8]
	0x038F8430 CMP X11, X1
	0x038F8434 B.EQ 0x38F8468
	0x038F8438 SUBS X9, X9, 0x1
	0x038F843C ADD X10, X10, 0x10
	0x038F8440 B.NE 0x38F842C
	0x038F8444 MOV X0, X20
	0x038F8448 MOV W2, W31
	0x038F844C BL 0x1C5C788
	0x038F8450 B 0x38F8474
	0x038F8454 FMOV S11, W31
	0x038F8458 FMOV S9, W31
	0x038F845C FMOV S12, W31
	0x038F8460 FMOV S8, W31
	0x038F8464 B 0x38F85F0
	0x038F8468 LDRSW X9, [X10]
	0x038F846C ADD X8, X8, X9, 0x4, LSL
	0x038F8470 ADD X0, X8, 0x138
	0x038F8474 LDP X8, X2, [X0]
	0x038F8478 MOV X0, X20
	0x038F847C MOV W1, W31
	0x038F8480 BLR X8
	0x038F8484 LDR X8, [X20]
	0x038F8488 LDR X1, [X23]
	0x038F848C MOV V8.16B, V0.16B
	0x038F8490 LDRH W9, [X8 + 0x12E]
	0x038F8494 CBZ X9, 0x38F84B8
	0x038F8498 LDR X10, [X8 + 0xB0]
	0x038F849C ADD X10, X10, 0x8
	0x038F84A0 LDUR X11, [X10 - 0x8]
	0x038F84A4 CMP X11, X1
	0x038F84A8 B.EQ 0x38F84C8
	0x038F84AC SUBS X9, X9, 0x1
	0x038F84B0 ADD X10, X10, 0x10
	0x038F84B4 B.NE 0x38F84A0
	0x038F84B8 MOV X0, X20
	0x038F84BC MOV W2, W31
	0x038F84C0 BL 0x1C5C788
	0x038F84C4 B 0x38F84D4
	0x038F84C8 LDRSW X9, [X10]
	0x038F84CC ADD X8, X8, X9, 0x4, LSL
	0x038F84D0 ADD X0, X8, 0x138
	0x038F84D4 LDP X8, X2, [X0]
	0x038F84D8 MOV X0, X20
	0x038F84DC MOV W1, W31
	0x038F84E0 BLR X8
	0x038F84E4 CMP W21, 0x2
	0x038F84E8 MOV V9.16B, V1.16B
	0x038F84EC B.LT 0x38F85E8
	0x038F84F0 MOVZ W22, 0x1
	0x038F84F4 MOV V12.16B, V8.16B
	0x038F84F8 MOV V11.16B, V9.16B
	0x038F84FC LDR X8, [X20]
	0x038F8500 LDR X1, [X23]
	0x038F8504 LDRH W9, [X8 + 0x12E]
	0x038F8508 CBZ X9, 0x38F852C
	0x038F850C LDR X10, [X8 + 0xB0]
	0x038F8510 ADD X10, X10, 0x8
	0x038F8514 LDUR X11, [X10 - 0x8]
	0x038F8518 CMP X11, X1
	0x038F851C B.EQ 0x38F853C
	0x038F8520 SUBS X9, X9, 0x1
	0x038F8524 ADD X10, X10, 0x10
	0x038F8528 B.NE 0x38F8514
	0x038F852C MOV X0, X20
	0x038F8530 MOV W2, W31
	0x038F8534 BL 0x1C5C788
	0x038F8538 B 0x38F8548
	0x038F853C LDRSW X9, [X10]
	0x038F8540 ADD X8, X8, X9, 0x4, LSL
	0x038F8544 ADD X0, X8, 0x138
	0x038F8548 LDP X8, X2, [X0]
	0x038F854C MOV X0, X20
	0x038F8550 MOV W1, W22
	0x038F8554 BLR X8
	0x038F8558 LDR X8, [X20]
	0x038F855C LDR X1, [X23]
	0x038F8560 MOV V10.16B, V0.16B
	0x038F8564 LDRH W9, [X8 + 0x12E]
	0x038F8568 CBZ X9, 0x38F858C
	0x038F856C LDR X10, [X8 + 0xB0]
	0x038F8570 ADD X10, X10, 0x8
	0x038F8574 LDUR X11, [X10 - 0x8]
	0x038F8578 CMP X11, X1
	0x038F857C B.EQ 0x38F859C
	0x038F8580 SUBS X9, X9, 0x1
	0x038F8584 ADD X10, X10, 0x10
	0x038F8588 B.NE 0x38F8574
	0x038F858C MOV X0, X20
	0x038F8590 MOV W2, W31
	0x038F8594 BL 0x1C5C788
	0x038F8598 B 0x38F85A8
	0x038F859C LDRSW X9, [X10]
	0x038F85A0 ADD X8, X8, X9, 0x4, LSL
	0x038F85A4 ADD X0, X8, 0x138
	0x038F85A8 LDP X8, X2, [X0]
	0x038F85AC MOV X0, X20
	0x038F85B0 MOV W1, W22
	0x038F85B4 BLR X8
	0x038F85B8 FCMP S10, S8
	0x038F85BC FCSEL S8, S10, S8, MI
	0x038F85C0 FCMP S10, S12
	0x038F85C4 FCSEL S12, S10, S12, GT
	0x038F85C8 FCMP S1, S9
	0x038F85CC ADD W22, W22, 0x1
	0x038F85D0 FCSEL S9, S1, S9, MI
	0x038F85D4 FCMP S1, S11
	0x038F85D8 FCSEL S11, S1, S11, GT
	0x038F85DC CMP W22, W21
	0x038F85E0 B.NE 0x38F84FC
	0x038F85E4 B 0x38F85F0
	0x038F85E8 MOV V11.16B, V9.16B
	0x038F85EC MOV V12.16B, V8.16B
	0x038F85F0 FADD S0, S12, S8
	0x038F85F4 FMOV S1, 0.5
	0x038F85F8 FADD S2, S11, S9
	0x038F85FC FSUB S3, S12, S8
	0x038F8600 FSUB S4, S11, S9
	0x038F8604 FMUL S0, S0, S1
	0x038F8608 FMUL S2, S2, S1
	0x038F860C STP S3, S4, [X19 + 0x18]
	0x038F8610 FMUL S3, S3, S1
	0x038F8614 FMUL S1, S4, S1
	0x038F8618 STP S0, S2, [X19 + 0x10]
	0x038F861C STP S3, S1, [X19 + 0x20]
	0x038F8620 LDP X20, X19, [X31 + 0x50]
	0x038F8624 LDP X22, X21, [X31 + 0x40]
	0x038F8628 LDP X30, X23, [X31 + 0x30]
	0x038F862C LDP D9, D8, [X31 + 0x20]
	0x038F8630 LDP D11, D10, [X31 + 0x10]
	0x038F8634 LDR V12, [X31], #0x60
	0x038F8638 RET
	0x038F863C BL 0x1C16F20
	0x038F8640 STR X30, [X31 - 0x30]!
	0x038F8644 STP X22, X21, [X31 + 0x10]
	0x038F8648 STP X20, X19, [X31 + 0x20]
	0x038F864C ADRP X22, 0xAE1000
	0x038F8650 LDRB W8, [X22 + 0x78F]
	0x038F8654 MOV X19, X2
	0x038F8658 MOV X20, X1
	0x038F865C MOV X21, X0
	0x038F8660 CBNZ W8, 0x38F8678
	0x038F8664 ADRP X0, 0x803000
	0x038F8668 LDR X0, [X0 + 0xF08]
	0x038F866C BL 0x1C16CF4
	0x038F8670 MOVZ W8, 0x1
	0x038F8674 STRB W8, [X22 + 0x78F]
	0x038F8678 ADRP X8, 0x803000
	0x038F867C LDR X8, [X8 + 0xF08]
	0x038F8680 MOV X0, X21
	0x038F8684 MOV X1, X31
	0x038F8688 LDR X8, [X8]
	0x038F868C LDR X9, [X8 + 0xB8]
	0x038F8690 LDR V0, [X9]
	0x038F8694 STR D0, [X21 + 0x10]
	0x038F8698 LDR X9, [X8 + 0xB8]
	0x038F869C LDR V0, [X9]
	0x038F86A0 STR D0, [X21 + 0x18]
	0x038F86A4 LDR X8, [X8 + 0xB8]
	0x038F86A8 LDR V0, [X8]
	0x038F86AC STR D0, [X21 + 0x20]
	0x038F86B0 BL 0x33BDD8C
	0x038F86B4 MOV X0, X21
	0x038F86B8 MOV X1, X20
	0x038F86BC MOV X2, X19
	0x038F86C0 LDP X20, X19, [X31 + 0x20]
	0x038F86C4 LDP X22, X21, [X31 + 0x10]
	0x038F86C8 LDR X30, [X31], #0x30
	0x038F86CC B 0x38F86D0
	0x038F86D0 STR D12, [X31 - 0x70]!
	0x038F86D4 STP D11, D10, [X31 + 0x8]
	0x038F86D8 STP D9, D8, [X31 + 0x18]
	0x038F86DC STR X30, [X31 + 0x28]
	0x038F86E0 STP X26, X25, [X31 + 0x30]
	0x038F86E4 STP X24, X23, [X31 + 0x40]
	0x038F86E8 STP X22, X21, [X31 + 0x50]
	0x038F86EC STP X20, X19, [X31 + 0x60]
	0x038F86F0 ADRP X22, 0xAE9000
	0x038F86F4 LDRB W8, [X22 + 0x763]
	0x038F86F8 MOV X20, X2
	0x038F86FC MOV X21, X1
	0x038F8700 MOV X19, X0
	0x038F8704 TBNZ X8, 0x0, 0x38F8740
	0x038F8708 ADRP X0, 0x855000
	0x038F870C LDR X0, [X0 + 0xA90]
	0x038F8710 BL 0x1C16CF4
	0x038F8714 ADRP X0, 0x823000
	0x038F8718 LDR X0, [X0 + 0x7A0]
	0x038F871C BL 0x1C16CF4
	0x038F8720 ADRP X0, 0x855000
	0x038F8724 LDR X0, [X0 + 0xA98]
	0x038F8728 BL 0x1C16CF4
	0x038F872C ADRP X0, 0x823000
	0x038F8730 LDR X0, [X0 + 0x7A8]
	0x038F8734 BL 0x1C16CF4
	0x038F8738 MOVZ W8, 0x1
	0x038F873C STRB W8, [X22 + 0x763]
	0x038F8740 CBZ X21, 0x38F8C2C
	0x038F8744 ADRP X10, 0x855000
	0x038F8748 LDR X8, [X21]
	0x038F874C LDR X10, [X10 + 0xA90]
	0x038F8750 LDRH W9, [X8 + 0x12E]
	0x038F8754 LDR X1, [X10]
	0x038F8758 CBZ X9, 0x38F877C
	0x038F875C LDR X10, [X8 + 0xB0]
	0x038F8760 ADD X10, X10, 0x8
	0x038F8764 LDUR X11, [X10 - 0x8]
	0x038F8768 CMP X11, X1
	0x038F876C B.EQ 0x38F878C
	0x038F8770 SUBS X9, X9, 0x1
	0x038F8774 ADD X10, X10, 0x10
	0x038F8778 B.NE 0x38F8764
	0x038F877C MOV X0, X21
	0x038F8780 MOV W2, W31
	0x038F8784 BL 0x1C5C788
	0x038F8788 B 0x38F8798
	0x038F878C LDRSW X9, [X10]
	0x038F8790 ADD X8, X8, X9, 0x4, LSL
	0x038F8794 ADD X0, X8, 0x138
	0x038F8798 LDP X8, X1, [X0]
	0x038F879C MOV X0, X21
	0x038F87A0 BLR X8
	0x038F87A4 CMP W0, 0x1
	0x038F87A8 FMOV S9, W31
	0x038F87AC B.LT 0x38F87FC
	0x038F87B0 CBZ X20, 0x38F8C2C
	0x038F87B4 ADRP X24, 0x823000
	0x038F87B8 LDR X8, [X20]
	0x038F87BC LDR X24, [X24 + 0x7A0]
	0x038F87C0 LDRH W9, [X8 + 0x12E]
	0x038F87C4 LDR X1, [X24]
	0x038F87C8 CBZ X9, 0x38F87EC
	0x038F87CC LDR X10, [X8 + 0xB0]
	0x038F87D0 ADD X10, X10, 0x8
	0x038F87D4 LDUR X11, [X10 - 0x8]
	0x038F87D8 CMP X11, X1
	0x038F87DC B.EQ 0x38F880C
	0x038F87E0 SUBS X9, X9, 0x1
	0x038F87E4 ADD X10, X10, 0x10
	0x038F87E8 B.NE 0x38F87D4
	0x038F87EC MOV X0, X20
	0x038F87F0 MOV W2, W31
	0x038F87F4 BL 0x1C5C788
	0x038F87F8 B 0x38F8818
	0x038F87FC FMOV S11, W31
	0x038F8800 FMOV S8, W31
	0x038F8804 FMOV S12, W31
	0x038F8808 B 0x38F8BD8
	0x038F880C LDRSW X9, [X10]
	0x038F8810 ADD X8, X8, X9, 0x4, LSL
	0x038F8814 ADD X0, X8, 0x138
	0x038F8818 LDP X8, X1, [X0]
	0x038F881C MOV X0, X20
	0x038F8820 BLR X8
	0x038F8824 CMP W0, 0x1
	0x038F8828 FMOV S11, W31
	0x038F882C FMOV S8, W31
	0x038F8830 FMOV S12, W31
	0x038F8834 B.LT 0x38F8BD8
	0x038F8838 ADRP X25, 0x823000
	0x038F883C LDR X8, [X20]
	0x038F8840 LDR X25, [X25 + 0x7A8]
	0x038F8844 LDRH W9, [X8 + 0x12E]
	0x038F8848 LDR X1, [X25]
	0x038F884C CBZ X9, 0x38F8870
	0x038F8850 LDR X10, [X8 + 0xB0]
	0x038F8854 ADD X10, X10, 0x8
	0x038F8858 LDUR X11, [X10 - 0x8]
	0x038F885C CMP X11, X1
	0x038F8860 B.EQ 0x38F8880
	0x038F8864 SUBS X9, X9, 0x1
	0x038F8868 ADD X10, X10, 0x10
	0x038F886C B.NE 0x38F8858
	0x038F8870 MOV X0, X20
	0x038F8874 MOV W2, W31
	0x038F8878 BL 0x1C5C788
	0x038F887C B 0x38F888C
	0x038F8880 LDRSW X9, [X10]
	0x038F8884 ADD X8, X8, X9, 0x4, LSL
	0x038F8888 ADD X0, X8, 0x138
	0x038F888C LDP X8, X2, [X0]
	0x038F8890 MOV X0, X20
	0x038F8894 MOV W1, W31
	0x038F8898 BLR X8
	0x038F889C ADRP X26, 0x855000
	0x038F88A0 LDR X8, [X21]
	0x038F88A4 LDR X26, [X26 + 0xA98]
	0x038F88A8 MOV W22, W0
	0x038F88AC LDRH W9, [X8 + 0x12E]
	0x038F88B0 LDR X1, [X26]
	0x038F88B4 CBZ X9, 0x38F88D8
	0x038F88B8 LDR X10, [X8 + 0xB0]
	0x038F88BC ADD X10, X10, 0x8
	0x038F88C0 LDUR X11, [X10 - 0x8]
	0x038F88C4 CMP X11, X1
	0x038F88C8 B.EQ 0x38F88E8
	0x038F88CC SUBS X9, X9, 0x1
	0x038F88D0 ADD X10, X10, 0x10
	0x038F88D4 B.NE 0x38F88C0
	0x038F88D8 MOV X0, X21
	0x038F88DC MOV W2, W31
	0x038F88E0 BL 0x1C5C788
	0x038F88E4 B 0x38F88F4
	0x038F88E8 LDRSW X9, [X10]
	0x038F88EC ADD X8, X8, X9, 0x4, LSL
	0x038F88F0 ADD X0, X8, 0x138
	0x038F88F4 LDP X8, X2, [X0]
	0x038F88F8 MOV X0, X21
	0x038F88FC MOV W1, W22
	0x038F8900 BLR X8
	0x038F8904 LDR X8, [X20]
	0x038F8908 LDR X1, [X25]
	0x038F890C MOV V8.16B, V0.16B
	0x038F8910 LDRH W9, [X8 + 0x12E]
	0x038F8914 CBZ X9, 0x38F8938
	0x038F8918 LDR X10, [X8 + 0xB0]
	0x038F891C ADD X10, X10, 0x8
	0x038F8920 LDUR X11, [X10 - 0x8]
	0x038F8924 CMP X11, X1
	0x038F8928 B.EQ 0x38F8948
	0x038F892C SUBS X9, X9, 0x1
	0x038F8930 ADD X10, X10, 0x10
	0x038F8934 B.NE 0x38F8920
	0x038F8938 MOV X0, X20
	0x038F893C MOV W2, W31
	0x038F8940 BL 0x1C5C788
	0x038F8944 B 0x38F8954
	0x038F8948 LDRSW X9, [X10]
	0x038F894C ADD X8, X8, X9, 0x4, LSL
	0x038F8950 ADD X0, X8, 0x138
	0x038F8954 LDP X8, X2, [X0]
	0x038F8958 MOV X0, X20
	0x038F895C MOV W1, W31
	0x038F8960 BLR X8
	0x038F8964 LDR X8, [X21]
	0x038F8968 LDR X1, [X26]
	0x038F896C MOV W22, W0
	0x038F8970 LDRH W9, [X8 + 0x12E]
	0x038F8974 CBZ X9, 0x38F8998
	0x038F8978 LDR X10, [X8 + 0xB0]
	0x038F897C ADD X10, X10, 0x8
	0x038F8980 LDUR X11, [X10 - 0x8]
	0x038F8984 CMP X11, X1
	0x038F8988 B.EQ 0x38F89A8
	0x038F898C SUBS X9, X9, 0x1
	0x038F8990 ADD X10, X10, 0x10
	0x038F8994 B.NE 0x38F8980
	0x038F8998 MOV X0, X21
	0x038F899C MOV W2, W31
	0x038F89A0 BL 0x1C5C788
	0x038F89A4 B 0x38F89B4
	0x038F89A8 LDRSW X9, [X10]
	0x038F89AC ADD X8, X8, X9, 0x4, LSL
	0x038F89B0 ADD X0, X8, 0x138
	0x038F89B4 LDP X8, X2, [X0]
	0x038F89B8 MOV X0, X21
	0x038F89BC MOV W1, W22
	0x038F89C0 BLR X8
	0x038F89C4 MOV V9.16B, V1.16B
	0x038F89C8 MOVZ W22, 0x1
	0x038F89CC MOV V11.16B, V1.16B
	0x038F89D0 MOV V12.16B, V8.16B
	0x038F89D4 LDR X8, [X20]
	0x038F89D8 LDR X1, [X24]
	0x038F89DC LDRH W9, [X8 + 0x12E]
	0x038F89E0 CBZ X9, 0x38F8A04
	0x038F89E4 LDR X10, [X8 + 0xB0]
	0x038F89E8 ADD X10, X10, 0x8
	0x038F89EC LDUR X11, [X10 - 0x8]
	0x038F89F0 CMP X11, X1
	0x038F89F4 B.EQ 0x38F8A14
	0x038F89F8 SUBS X9, X9, 0x1
	0x038F89FC ADD X10, X10, 0x10
	0x038F8A00 B.NE 0x38F89EC
	0x038F8A04 MOV X0, X20
	0x038F8A08 MOV W2, W31
	0x038F8A0C BL 0x1C5C788
	0x038F8A10 B 0x38F8A20
	0x038F8A14 LDRSW X9, [X10]
	0x038F8A18 ADD X8, X8, X9, 0x4, LSL
	0x038F8A1C ADD X0, X8, 0x138
	0x038F8A20 LDP X8, X1, [X0]
	0x038F8A24 MOV X0, X20
	0x038F8A28 BLR X8
	0x038F8A2C CMP W22, W0
	0x038F8A30 B.GE 0x38F8BD8
	0x038F8A34 LDR X8, [X20]
	0x038F8A38 LDR X1, [X25]
	0x038F8A3C LDRH W9, [X8 + 0x12E]
	0x038F8A40 CBZ X9, 0x38F8A64
	0x038F8A44 LDR X10, [X8 + 0xB0]
	0x038F8A48 ADD X10, X10, 0x8
	0x038F8A4C LDUR X11, [X10 - 0x8]
	0x038F8A50 CMP X11, X1
	0x038F8A54 B.EQ 0x38F8A74
	0x038F8A58 SUBS X9, X9, 0x1
	0x038F8A5C ADD X10, X10, 0x10
	0x038F8A60 B.NE 0x38F8A4C
	0x038F8A64 MOV X0, X20
	0x038F8A68 MOV W2, W31
	0x038F8A6C BL 0x1C5C788
	0x038F8A70 B 0x38F8A80
	0x038F8A74 LDRSW X9, [X10]
	0x038F8A78 ADD X8, X8, X9, 0x4, LSL
	0x038F8A7C ADD X0, X8, 0x138
	0x038F8A80 LDP X8, X2, [X0]
	0x038F8A84 MOV X0, X20
	0x038F8A88 MOV W1, W22
	0x038F8A8C BLR X8
	0x038F8A90 LDR X8, [X21]
	0x038F8A94 LDR X1, [X26]
	0x038F8A98 MOV W23, W0
	0x038F8A9C LDRH W9, [X8 + 0x12E]
	0x038F8AA0 CBZ X9, 0x38F8AC4
	0x038F8AA4 LDR X10, [X8 + 0xB0]
	0x038F8AA8 ADD X10, X10, 0x8
	0x038F8AAC LDUR X11, [X10 - 0x8]
	0x038F8AB0 CMP X11, X1
	0x038F8AB4 B.EQ 0x38F8AD4
	0x038F8AB8 SUBS X9, X9, 0x1
	0x038F8ABC ADD X10, X10, 0x10
	0x038F8AC0 B.NE 0x38F8AAC
	0x038F8AC4 MOV X0, X21
	0x038F8AC8 MOV W2, W31
	0x038F8ACC BL 0x1C5C788
	0x038F8AD0 B 0x38F8AE0
	0x038F8AD4 LDRSW X9, [X10]
	0x038F8AD8 ADD X8, X8, X9, 0x4, LSL
	0x038F8ADC ADD X0, X8, 0x138
	0x038F8AE0 LDP X8, X2, [X0]
	0x038F8AE4 MOV X0, X21
	0x038F8AE8 MOV W1, W23
	0x038F8AEC BLR X8
	0x038F8AF0 LDR X8, [X20]
	0x038F8AF4 LDR X1, [X25]
	0x038F8AF8 MOV V10.16B, V0.16B
	0x038F8AFC LDRH W9, [X8 + 0x12E]
	0x038F8B00 CBZ X9, 0x38F8B24
	0x038F8B04 LDR X10, [X8 + 0xB0]
	0x038F8B08 ADD X10, X10, 0x8
	0x038F8B0C LDUR X11, [X10 - 0x8]
	0x038F8B10 CMP X11, X1
	0x038F8B14 B.EQ 0x38F8B34
	0x038F8B18 SUBS X9, X9, 0x1
	0x038F8B1C ADD X10, X10, 0x10
	0x038F8B20 B.NE 0x38F8B0C
	0x038F8B24 MOV X0, X20
	0x038F8B28 MOV W2, W31
	0x038F8B2C BL 0x1C5C788
	0x038F8B30 B 0x38F8B40
	0x038F8B34 LDRSW X9, [X10]
	0x038F8B38 ADD X8, X8, X9, 0x4, LSL
	0x038F8B3C ADD X0, X8, 0x138
	0x038F8B40 LDP X8, X2, [X0]
	0x038F8B44 MOV X0, X20
	0x038F8B48 MOV W1, W22
	0x038F8B4C BLR X8
	0x038F8B50 LDR X8, [X21]
	0x038F8B54 LDR X1, [X26]
	0x038F8B58 MOV W23, W0
	0x038F8B5C LDRH W9, [X8 + 0x12E]
	0x038F8B60 CBZ X9, 0x38F8B84
	0x038F8B64 LDR X10, [X8 + 0xB0]
	0x038F8B68 ADD X10, X10, 0x8
	0x038F8B6C LDUR X11, [X10 - 0x8]
	0x038F8B70 CMP X11, X1
	0x038F8B74 B.EQ 0x38F8B94
	0x038F8B78 SUBS X9, X9, 0x1
	0x038F8B7C ADD X10, X10, 0x10
	0x038F8B80 B.NE 0x38F8B6C
	0x038F8B84 MOV X0, X21
	0x038F8B88 MOV W2, W31
	0x038F8B8C BL 0x1C5C788
	0x038F8B90 B 0x38F8BA0
	0x038F8B94 LDRSW X9, [X10]
	0x038F8B98 ADD X8, X8, X9, 0x4, LSL
	0x038F8B9C ADD X0, X8, 0x138
	0x038F8BA0 LDP X8, X2, [X0]
	0x038F8BA4 MOV X0, X21
	0x038F8BA8 MOV W1, W23
	0x038F8BAC BLR X8
	0x038F8BB0 FCMP S10, S12
	0x038F8BB4 FCSEL S12, S10, S12, MI
	0x038F8BB8 FCMP S10, S8
	0x038F8BBC FCSEL S8, S10, S8, GT
	0x038F8BC0 FCMP S1, S11
	0x038F8BC4 FCSEL S11, S1, S11, MI
	0x038F8BC8 FCMP S1, S9
	0x038F8BCC FCSEL S9, S1, S9, GT
	0x038F8BD0 ADD W22, W22, 0x1
	0x038F8BD4 B 0x38F89D4
	0x038F8BD8 FADD S0, S8, S12
	0x038F8BDC FMOV S1, 0.5
	0x038F8BE0 FADD S2, S9, S11
	0x038F8BE4 FSUB S3, S8, S12
	0x038F8BE8 FSUB S4, S9, S11
	0x038F8BEC FMUL S0, S0, S1
	0x038F8BF0 FMUL S2, S2, S1
	0x038F8BF4 STP S3, S4, [X19 + 0x18]
	0x038F8BF8 FMUL S3, S3, S1
	0x038F8BFC FMUL S1, S4, S1
	0x038F8C00 STP S0, S2, [X19 + 0x10]
	0x038F8C04 STP S3, S1, [X19 + 0x20]
	0x038F8C08 LDP X20, X19, [X31 + 0x60]
	0x038F8C0C LDP X22, X21, [X31 + 0x50]
	0x038F8C10 LDP X24, X23, [X31 + 0x40]
	0x038F8C14 LDP X26, X25, [X31 + 0x30]
	0x038F8C18 LDR X30, [X31 + 0x28]
	0x038F8C1C LDP D9, D8, [X31 + 0x18]
	0x038F8C20 LDP D11, D10, [X31 + 0x8]
	0x038F8C24 LDR V12, [X31], #0x70
	0x038F8C28 RET
	0x038F8C2C BL 0x1C16F20
	0x038F8C30 STR X30, [X31 - 0x30]!
	0x038F8C34 STP X22, X21, [X31 + 0x10]
	0x038F8C38 STP X20, X19, [X31 + 0x20]
	0x038F8C3C ADRP X22, 0xAE1000
	0x038F8C40 LDRB W8, [X22 + 0x78F]
	0x038F8C44 MOV X20, X2
	0x038F8C48 MOV X21, X1
	0x038F8C4C MOV X19, X0
	0x038F8C50 CBNZ W8, 0x38F8C68
	0x038F8C54 ADRP X0, 0x803000
	0x038F8C58 LDR X0, [X0 + 0xF08]
	0x038F8C5C BL 0x1C16CF4
	0x038F8C60 MOVZ W8, 0x1
	0x038F8C64 STRB W8, [X22 + 0x78F]
	0x038F8C68 ADRP X8, 0x803000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+152], X25
	012 Move [X31+160], X24
	013 Move [X31+168], X23
	014 Move [X31+176], X22
	015 Move [X31+184], X21
	016 Move [X31+192], X20
	017 Move [X31+200], X19
	018 Move X23, 0xAEA000
	019 Move W8, [X23+1884]
	020 Move W21, W3
	021 Move W22, W2
	022 Move W20, W1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x856000
	029 Move X0, [X0+2648]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+1884], W8
	033 Move TEMP, X22
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfEqual {59}
	037 Move TEMP, X21
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {77}
	041 Compare X19, 0
	042 JumpIfEqual {638}
	043 Move X23, 0x856000
	044 Move X8, [X19]
	045 Move X23, [X23+2648]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X23]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 Compare X19, 0
	060 JumpIfEqual {638}
	061 Move X22, 0x856000
	062 Move X8, [X19]
	063 Move X22, [X22+2648]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X22]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 Compare X19, 0
	078 JumpIfEqual {638}
	079 Move X21, 0x856000
	080 Move X8, [X19]
	081 Move X21, [X21+2648]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X21]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X9, [X0]
	099 Move X2, [X0+8]
	100 Add X8, X31, 24
	101 Move X0, X19
	102 Move W1, W20
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X19]
	105 Move V8, [X31+24]
	106 Move V9, [X31+32]
	107 Move V11, [X31+48]
	108 Move V10, [X31+56]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X23]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X19
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X9, [X0]
	126 Move X2, [X0+8]
	127 Add X8, X31, 24
	128 Move X0, X19
	129 Move W1, W22
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X8, -48287744
	132 Move V12, [X8+492]
	133 Move W8, 0x5C28
	134 Move X9, -48287744
	135 NotImplemented "Instruction MOVK not yet implemented."
	136 Move V13, [X9+112]
	137 Move W9, 0x51EB
	138 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	139 Move X8, [X19]
	140 NotImplemented "Instruction MOVK not yet implemented."
	141 Move X10, -48287744
	142 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	143 Move V0, [X31+24]
	144 Move V1, [X31+32]
	145 NotImplemented "Instruction INVALID not yet implemented."
	146 Move V11, [X10+116]
	147 Move W11, 0xD70B
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X23]
	150 NotImplemented "Instruction MOVK not yet implemented."
	151 Multiply S4, S9, S12
	152 Multiply S5, S10, S13
	153 NotImplemented "Instruction INVALID not yet implemented."
	154 Add S8, S4, S5
	155 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	156 Multiply S9, S1, S11
	157 Add V10, V2, V3
	158 NotImplemented "Instruction INVALID not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X19
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X9, [X0]
	174 Move X2, [X0+8]
	175 Add X8, X31, 24
	176 Move X0, X19
	177 Move W1, W20
	178 Add S8, S8, S9
	179 Add V9, V10, V14
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X22, 0xAE1000
	182 Move V10, [X31+24]
	183 Move W8, [X22+1925]
	184 Move V14, [X31+32]
	185 Compare W8, 0
	186 JumpIfNotEqual {192}
	187 Move X0, 0x7FC000
	188 Move X0, [X0+1448]
	189 Call 0x1C17CF4
	190 Move W8, 1
	191 Move [X22+1925], W8
	192 Move X24, 0x7FC000
	193 Move X24, [X24+1448]
	194 Subtract V10, V9, V10
	195 Subtract S9, S8, S14
	196 Move X0, [X24]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X8, -48287744
	202 NotImplemented "Instruction INVALID not yet implemented."
	203 Move V8, [X8+380]
	204 NotImplemented "Instruction FADDP not yet implemented."
	205 Multiply S1, S9, S9
	206 Add S0, S1, S0
	207 NotImplemented "Instruction FSQRT not yet implemented."
	208 NotImplemented "Instruction FCMP not yet implemented."
	209 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	210 NotImplemented "Instruction INVALID not yet implemented."
	211 Move [X31+16], D1
	212 NotImplemented "Instruction FDIV not yet implemented."
	213 Move X25, 0xAE1000
	214 Move W8, [X25+1923]
	215 Compare W8, 0
	216 JumpIfNotEqual {222}
	217 Move X0, 0x7FC000
	218 Move X0, [X0+1440]
	219 Call 0x1C17CF4
	220 Move W8, 1
	221 Move [X25+1923], W8
	222 Move X8, 0x7FC000
	223 Move X8, [X8+1440]
	224 Move X8, [X8]
	225 Move X8, [X8+184]
	226 Move V0, [X8]
	227 Move [X31+16], D0
	228 Move V0, [X8+8]
	229 Move X8, [X19]
	230 Move X1, [X23]
	231 Move [X31+12], S0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X19
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X9, [X0]
	248 Move X2, [X0+8]
	249 Add X8, X31, 24
	250 Move X0, X19
	251 Move W1, W20
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X8, [X19]
	254 Move V14, [X31+24]
	255 Move V9, [X31+32]
	256 Move V15, [X31+48]
	257 Move V10, [X31+56]
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Move X1, [X23]
	260 Compare X9, 0
	261 JumpIfEqual {268}
	262 Move X10, [X8+176]
	263 Add X10, X10, 8
	264 NotImplemented "Instruction LDUR not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Subtract X9, X9, 1
	267 Add X10, X10, 16
	268 Move X0, X19
	269 Move W2, W31
	270 Call 0x1C5D788
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Add X8, X8, X9
	273 Add X0, X8, 312
	274 Move X9, [X0]
	275 Move X2, [X0+8]
	276 Add X8, X31, 24
	277 Move X0, X19
	278 Move W1, W21
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move W8, 0x5C28
	281 NotImplemented "Instruction MOVK not yet implemented."
	282 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	283 Move X8, [X19]
	284 Move V1, [X31+32]
	285 Move W9, 0x51EB
	286 Move V0, [X31+24]
	287 NotImplemented "Instruction MOVK not yet implemented."
	288 Move W10, 0xD70B
	289 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	290 NotImplemented "Instruction LDRH not yet implemented."
	291 Move X1, [X23]
	292 Multiply S2, S9, S12
	293 Multiply S3, S10, S13
	294 NotImplemented "Instruction MOVK not yet implemented."
	295 Add S9, S2, S3
	296 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	297 NotImplemented "Instruction INVALID not yet implemented."
	298 Multiply S10, S1, S11
	299 NotImplemented "Instruction INVALID not yet implemented."
	300 Add V11, V3, V1
	301 NotImplemented "Instruction INVALID not yet implemented."
	302 Compare X9, 0
	303 JumpIfEqual {310}
	304 Move X10, [X8+176]
	305 Add X10, X10, 8
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Subtract X9, X9, 1
	309 Add X10, X10, 16
	310 Move X0, X19
	311 Move W2, W31
	312 Call 0x1C5D788
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X9, [X0]
	317 Move X2, [X0+8]
	318 Add X8, X31, 24
	319 Move X0, X19
	320 Move W1, W20
	321 Add S9, S9, S10
	322 Add V10, V11, V12
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move V11, [X31+24]
	325 Move W8, [X22+1925]
	326 Move V12, [X31+32]
	327 Compare W8, 0
	328 JumpIfNotEqual {334}
	329 Move X0, 0x7FC000
	330 Move X0, [X0+1448]
	331 Call 0x1C17CF4
	332 Move W8, 1
	333 Move [X22+1925], W8
	334 Move X0, [X24]
	335 Subtract V10, V10, V11
	336 Subtract S9, S9, S12
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 Invalid "Jump target not found in method."
	340 Call 0x1C17DFC
	341 NotImplemented "Instruction INVALID not yet implemented."
	342 NotImplemented "Instruction FADDP not yet implemented."
	343 Multiply S1, S9, S9
	344 Add S0, S1, S0
	345 NotImplemented "Instruction FSQRT not yet implemented."
	346 NotImplemented "Instruction FCMP not yet implemented."
	347 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	348 NotImplemented "Instruction INVALID not yet implemented."
	349 NotImplemented "Instruction FDIV not yet implemented."
	350 Move X19, 0xAE1000
	351 Move W8, [X19+1923]
	352 Compare W8, 0
	353 JumpIfNotEqual {359}
	354 Move X0, 0x7FC000
	355 Move X0, [X0+1440]
	356 Call 0x1C17CF4
	357 Move W8, 1
	358 Move [X19+1923], W8
	359 Move X8, 0x7FC000
	360 Move X8, [X8+1440]
	361 Move X8, [X8]
	362 Move X8, [X8+184]
	363 Move V0, [X8]
	364 Move V1, [X8+8]
	365 Move V2, [X31+16]
	366 Move W8, [X22+1925]
	367 NotImplemented "Instruction MOVI not yet implemented."
	368 Move S12, 0.5
	369 Add V9, V2, V0
	370 Move V0, [X31+12]
	371 Add S11, S0, S1
	372 Compare W8, 0
	373 JumpIfNotEqual {379}
	374 Move X0, 0x7FC000
	375 Move X0, [X0+1448]
	376 Call 0x1C17CF4
	377 Move W8, 1
	378 Move [X22+1925], W8
	379 Move X0, [X24]
	380 NotImplemented "Instruction INVALID not yet implemented."
	381 Multiply S9, S11, S12
	382 Move W8, [X0+224]
	383 Compare W8, 0
	384 Invalid "Jump target not found in method."
	385 Call 0x1C17DFC
	386 NotImplemented "Instruction INVALID not yet implemented."
	387 NotImplemented "Instruction FADDP not yet implemented."
	388 Multiply S1, S9, S9
	389 Add S0, S1, S0
	390 NotImplemented "Instruction FSQRT not yet implemented."
	391 NotImplemented "Instruction FCMP not yet implemented."
	392 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	393 NotImplemented "Instruction INVALID not yet implemented."
	394 NotImplemented "Instruction FDIV not yet implemented."
	395 NotImplemented "Instruction LDRSW not yet implemented."
	396 Add X8, X8, X9
	397 Add X0, X8, 312
	398 Move X9, [X0]
	399 Move X2, [X0+8]
	400 Add X8, X31, 24
	401 Move X0, X19
	402 Move W1, W20
	403 NotImplemented "Instruction BLR not yet implemented."
	404 Move X8, [X19]
	405 Move V8, [X31+24]
	406 Move V9, [X31+32]
	407 Move X1, [X22]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move X0, X19
	418 Move W2, W31
	419 Call 0x1C5D788
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Add X8, X8, X9
	422 Add X0, X8, 312
	423 Move X9, [X0]
	424 Move X2, [X0+8]
	425 Add X8, X31, 24
	426 Move X0, X19
	427 Move W1, W20
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move X8, [X19]
	430 Move V12, [X31+24]
	431 Move V11, [X31+32]
	432 Move V13, [X31+48]
	433 Move V10, [X31+56]
	434 NotImplemented "Instruction LDRH not yet implemented."
	435 Move X1, [X22]
	436 Compare X9, 0
	437 JumpIfEqual {444}
	438 Move X10, [X8+176]
	439 Add X10, X10, 8
	440 NotImplemented "Instruction LDUR not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Subtract X9, X9, 1
	443 Add X10, X10, 16
	444 Move X0, X19
	445 Move W2, W31
	446 Call 0x1C5D788
	447 NotImplemented "Instruction LDRSW not yet implemented."
	448 Add X8, X8, X9
	449 Add X0, X8, 312
	450 Move X9, [X0]
	451 Move X2, [X0+8]
	452 Add X8, X31, 24
	453 Move X0, X19
	454 Move W1, W21
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Move W9, 0x5C28
	457 NotImplemented "Instruction MOVK not yet implemented."
	458 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	459 Move W9, 0x51EB
	460 Move V0, [X31+24]
	461 Move X8, -48287744
	462 NotImplemented "Instruction MOVK not yet implemented."
	463 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	464 Move V4, [X8+492]
	465 Move W8, 0xD70B
	466 NotImplemented "Instruction INVALID not yet implemented."
	467 NotImplemented "Instruction INVALID not yet implemented."
	468 NotImplemented "Instruction MOVK not yet implemented."
	469 Move X9, -48287744
	470 Add V2, V2, V3
	471 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	472 Move X8, -48287744
	473 NotImplemented "Instruction INVALID not yet implemented."
	474 Move V3, [X9+112]
	475 Move V1, [X31+32]
	476 Move V5, [X8+116]
	477 Move X19, 0xAE1000
	478 Move W8, [X19+1925]
	479 Multiply S4, S11, S4
	480 Multiply S3, S10, S3
	481 Multiply S1, S1, S5
	482 Add S3, S4, S3
	483 Add S11, S3, S1
	484 Add V10, V2, V0
	485 Compare W8, 0
	486 JumpIfNotEqual {492}
	487 Move X0, 0x7FC000
	488 Move X0, [X0+1448]
	489 Call 0x1C17CF4
	490 Move W8, 1
	491 Move [X19+1925], W8
	492 Move X8, 0x7FC000
	493 Move X8, [X8+1448]
	494 Subtract V10, V8, V10
	495 Subtract S8, S9, S11
	496 Move X0, [X8]
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X8, -48287744
	502 NotImplemented "Instruction INVALID not yet implemented."
	503 Move V2, [X8+380]
	504 NotImplemented "Instruction FADDP not yet implemented."
	505 Multiply S1, S8, S8
	506 Add S0, S1, S0
	507 NotImplemented "Instruction FSQRT not yet implemented."
	508 NotImplemented "Instruction FCMP not yet implemented."
	509 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	510 NotImplemented "Instruction INVALID not yet implemented."
	511 NotImplemented "Instruction FDIV not yet implemented."
	512 Move X19, 0xAE1000
	513 Move W8, [X19+1923]
	514 Compare W8, 0
	515 JumpIfNotEqual {521}
	516 Move X0, 0x7FC000
	517 Move X0, [X0+1440]
	518 Call 0x1C17CF4
	519 Move W8, 1
	520 Move [X19+1923], W8
	521 Move X8, 0x7FC000
	522 Move X8, [X8+1440]
	523 Move X8, [X8]
	524 Move X8, [X8+184]
	525 Move V0, [X8]
	526 Move V2, [X8+8]
	527 Move X20, [X31+192]
	528 Move X19, [X31+200]
	529 Move X22, [X31+176]
	530 Move X21, [X31+184]
	531 Move X24, [X31+160]
	532 Move X23, [X31+168]
	533 Move X30, [X31+144]
	534 Move X25, [X31+152]
	535 Move D9, [X31+128]
	536 Move D8, [X31+136]
	537 Move D11, [X31+112]
	538 Move D10, [X31+120]
	539 Move D13, [X31+96]
	540 Move D12, [X31+104]
	541 Move D15, [X31+80]
	542 Move D14, [X31+88]
	543 Move S1, V0.S[1]
	544 Add X31, X31, 208
	545 Return X0
	546 NotImplemented "Instruction LDRSW not yet implemented."
	547 Add X8, X8, X9
	548 Add X0, X8, 312
	549 Move X9, [X0]
	550 Move X2, [X0+8]
	551 Add X8, X31, 24
	552 Move X0, X19
	553 Move W1, W20
	554 NotImplemented "Instruction BLR not yet implemented."
	555 Move X8, [X19]
	556 Move V9, [X31+24]
	557 Move V10, [X31+32]
	558 Move V8, [X31+48]
	559 Move V11, [X31+56]
	560 NotImplemented "Instruction LDRH not yet implemented."
	561 Move X1, [X21]
	562 Compare X9, 0
	563 JumpIfEqual {570}
	564 Move X10, [X8+176]
	565 Add X10, X10, 8
	566 NotImplemented "Instruction LDUR not yet implemented."
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Subtract X9, X9, 1
	569 Add X10, X10, 16
	570 Move X0, X19
	571 Move W2, W31
	572 Call 0x1C5D788
	573 NotImplemented "Instruction LDRSW not yet implemented."
	574 Add X8, X8, X9
	575 Add X0, X8, 312
	576 Move X9, [X0]
	577 Move X2, [X0+8]
	578 Add X8, X31, 24
	579 Move X0, X19
	580 Move W1, W22
	581 NotImplemented "Instruction BLR not yet implemented."
	582 Move X8, -48287744
	583 Move V1, [X8+492]
	584 Move W8, 0x5C28
	585 NotImplemented "Instruction MOVK not yet implemented."
	586 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	587 Move X8, -48287744
	588 Move V0, [X31+32]
	589 Move X9, -48287744
	590 Move V4, [X8+116]
	591 Move V3, [X9+112]
	592 Move W9, 0x51EB
	593 Move X8, [X19]
	594 NotImplemented "Instruction MOVK not yet implemented."
	595 NotImplemented "Instruction INVALID not yet implemented."
	596 Multiply S9, S0, S4
	597 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	598 Move W9, 0xD70B
	599 Multiply S1, S10, S1
	600 Multiply S3, S11, S3
	601 Move V5, [X31+24]
	602 NotImplemented "Instruction MOVK not yet implemented."
	603 Add S10, S1, S3
	604 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	605 NotImplemented "Instruction LDRH not yet implemented."
	606 Move X1, [X21]
	607 NotImplemented "Instruction INVALID not yet implemented."
	608 Add V8, V2, V0
	609 NotImplemented "Instruction INVALID not yet implemented."
	610 Compare X9, 0
	611 JumpIfEqual {618}
	612 Move X10, [X8+176]
	613 Add X10, X10, 8
	614 NotImplemented "Instruction LDUR not yet implemented."
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Subtract X9, X9, 1
	617 Add X10, X10, 16
	618 Move X0, X19
	619 Move W2, W31
	620 Call 0x1C5D788
	621 NotImplemented "Instruction LDRSW not yet implemented."
	622 Add X8, X8, X9
	623 Add X0, X8, 312
	624 Move X9, [X0]
	625 Move X2, [X0+8]
	626 Add X8, X31, 24
	627 Move X0, X19
	628 Move W1, W20
	629 Add S9, S10, S9
	630 Add V8, V8, V11
	631 NotImplemented "Instruction BLR not yet implemented."
	632 Move X19, 0xAE1000
	633 Move V10, [X31+24]
	634 Move W8, [X19+1925]
	635 Move V11, [X31+32]
	636 Compare W8, 0
	637 JumpIfNotEqual {492}
	638 Call 0x1C17F20

