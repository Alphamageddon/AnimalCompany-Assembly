Type: UnityEngine.ProBuilder.UvUnwrapping

Method: System.Void SetAutoUV(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces, System.Boolean auto)

Disassembly:
	0x0393BC9C LDR X10, [X8 + 0xB0]
	0x0393BCA0 ADD X10, X10, 0x8
	0x0393BCA4 LDUR X11, [X10 - 0x8]
	0x0393BCA8 CMP X11, X1
	0x0393BCAC B.EQ 0x393BCCC
	0x0393BCB0 SUBS X9, X9, 0x1
	0x0393BCB4 ADD X10, X10, 0x10
	0x0393BCB8 B.NE 0x393BCA4
	0x0393BCBC MOV X0, X20
	0x0393BCC0 MOV W2, W31
	0x0393BCC4 BL 0x1C5C788
	0x0393BCC8 B 0x393BCD8
	0x0393BCCC LDRSW X9, [X10]
	0x0393BCD0 ADD X8, X8, X9, 0x4, LSL
	0x0393BCD4 ADD X0, X8, 0x138
	0x0393BCD8 LDP X8, X2, [X0]
	0x0393BCDC MOV X0, X20
	0x0393BCE0 MOV W1, W23
	0x0393BCE4 BLR X8
	0x0393BCE8 LDR X8, [X20]
	0x0393BCEC LDR X1, [X26]
	0x0393BCF0 MOV W24, W0
	0x0393BCF4 LDRH W9, [X8 + 0x12E]
	0x0393BCF8 CBZ X9, 0x393BD1C
	0x0393BCFC LDR X10, [X8 + 0xB0]
	0x0393BD00 ADD X10, X10, 0x8
	0x0393BD04 LDUR X11, [X10 - 0x8]
	0x0393BD08 CMP X11, X1
	0x0393BD0C B.EQ 0x393BD2C
	0x0393BD10 SUBS X9, X9, 0x1
	0x0393BD14 ADD X10, X10, 0x10
	0x0393BD18 B.NE 0x393BD04
	0x0393BD1C MOV X0, X20
	0x0393BD20 MOV W2, W31
	0x0393BD24 BL 0x1C5C788
	0x0393BD28 B 0x393BD38
	0x0393BD2C LDRSW X9, [X10]
	0x0393BD30 ADD X8, X8, X9, 0x4, LSL
	0x0393BD34 ADD X0, X8, 0x138
	0x0393BD38 LDP X8, X2, [X0]
	0x0393BD3C MOV X0, X20
	0x0393BD40 MOV W1, W23
	0x0393BD44 BLR X8
	0x0393BD48 LDR W8, [X21 + 0x18]
	0x0393BD4C CMP W0, W8
	0x0393BD50 B.CS 0x393C2FC
	0x0393BD54 SXTW X8, W0
	0x0393BD58 ADD X8, X21, X8, 0x3, LSL
	0x0393BD5C LDP S0, S1, [X8 + 0x20]
	0x0393BD60 LDP S4, S5, [X19 + 0x8]
	0x0393BD64 LDR V2, [X31]
	0x0393BD68 MOV V3.16B, V8.16B
	0x0393BD6C MOV X0, X31
	0x0393BD70 BL 0x3908190
	0x0393BD74 LDR W8, [X21 + 0x18]
	0x0393BD78 CMP W24, W8
	0x0393BD7C B.CS 0x393C2FC
	0x0393BD80 SXTW X8, W24
	0x0393BD84 ADD X8, X21, X8, 0x3, LSL
	0x0393BD88 STP S0, S1, [X8 + 0x20]
	0x0393BD8C LDR X8, [X20]
	0x0393BD90 LDR X1, [X26]
	0x0393BD94 LDRH W9, [X8 + 0x12E]
	0x0393BD98 CBZ X9, 0x393BDBC
	0x0393BD9C LDR X10, [X8 + 0xB0]
	0x0393BDA0 ADD X10, X10, 0x8
	0x0393BDA4 LDUR X11, [X10 - 0x8]
	0x0393BDA8 CMP X11, X1
	0x0393BDAC B.EQ 0x393BDCC
	0x0393BDB0 SUBS X9, X9, 0x1
	0x0393BDB4 ADD X10, X10, 0x10
	0x0393BDB8 B.NE 0x393BDA4
	0x0393BDBC MOV X0, X20
	0x0393BDC0 MOV W2, W31
	0x0393BDC4 BL 0x1C5C788
	0x0393BDC8 B 0x393BDD8
	0x0393BDCC LDRSW X9, [X10]
	0x0393BDD0 ADD X8, X8, X9, 0x4, LSL
	0x0393BDD4 ADD X0, X8, 0x138
	0x0393BDD8 LDP X8, X2, [X0]
	0x0393BDDC MOV X0, X20
	0x0393BDE0 MOV W1, W23
	0x0393BDE4 BLR X8
	0x0393BDE8 LDR X8, [X20]
	0x0393BDEC LDR X1, [X26]
	0x0393BDF0 MOV W24, W0
	0x0393BDF4 LDRH W9, [X8 + 0x12E]
	0x0393BDF8 CBZ X9, 0x393BE1C
	0x0393BDFC LDR X10, [X8 + 0xB0]
	0x0393BE00 ADD X10, X10, 0x8
	0x0393BE04 LDUR X11, [X10 - 0x8]
	0x0393BE08 CMP X11, X1
	0x0393BE0C B.EQ 0x393BE2C
	0x0393BE10 SUBS X9, X9, 0x1
	0x0393BE14 ADD X10, X10, 0x10
	0x0393BE18 B.NE 0x393BE04
	0x0393BE1C MOV X0, X20
	0x0393BE20 MOV W2, W31
	0x0393BE24 BL 0x1C5C788
	0x0393BE28 B 0x393BE38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAA7000
	008 Move W8, [X22+2346]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x814000
	017 Move X0, [X0+3768]
	018 Call 0x1C17CF4
	019 Move X0, 0x814000
	020 Move X0, [X0+3776]
	021 Call 0x1C17CF4
	022 Move X0, 0x814000
	023 Move X0, [X0+3784]
	024 Call 0x1C17CF4
	025 Move X0, 0x814000
	026 Move X0, [X0+3792]
	027 Call 0x1C17CF4
	028 Move X0, 0x814000
	029 Move X0, [X0+1424]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2346], W8
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {93}
	037 Move X23, 0x814000
	038 Move X23, [X23+3792]
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X23]
	045 Move X8, [X0+184]
	046 Move X21, [X8+8]
	047 Compare X21, 0
	048 JumpIfNotEqual {70}
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Move X9, 0x814000
	055 Move X8, [X0+184]
	056 Move X9, [X9+3776]
	057 Move X22, [X8]
	058 Move X0, [X9]
	059 Call 0x1C17F10
	060 Move X8, 0x814000
	061 Move X8, [X8+3784]
	062 Move X1, X22
	063 Move X3, X31
	064 Move X21, X0
	065 Move X2, [X8]
	066 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	067 Move X8, [X23]
	068 Move X8, [X8+184]
	069 Move [X8+8], X21
	070 Move X8, 0x814000
	071 Move X8, [X8+3768]
	072 Move X0, X19
	073 Move X1, X21
	074 Move X2, [X8]
	075 Call Enumerable.Where, X0, X1
	076 Move X8, 0x814000
	077 Move X8, [X8+1424]
	078 Move X19, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Compare X19, 0
	094 JumpIfEqual {119}
	095 Move W8, [X19+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W9, W31
	098 Move TEMP, 0
	099 Not TEMP
	100 Move W10, TEMP
	101 Move W11, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X12, X19, W9
	104 Move X12, [X12+32]
	105 Compare X12, 0
	106 JumpIfEqual {119}
	107 Add W9, W9, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X12+84], W10
	110 Move [X12+76], W11
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Return 
	118 Call 0x1C17F28
	119 Call 0x1C17F20

Method: System.Void SetAutoAndAlignUnwrapParamsToUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> facesToConvert)

Disassembly:
	0x0393BE2C LDRSW X9, [X10]
	0x0393BE30 ADD X8, X8, X9, 0x4, LSL
	0x0393BE34 ADD X0, X8, 0x138
	0x0393BE38 LDP X8, X2, [X0]
	0x0393BE3C MOV X0, X20
	0x0393BE40 MOV W1, W23
	0x0393BE44 BLR X8
	0x0393BE48 LDR W8, [X21 + 0x18]
	0x0393BE4C CMP W0, W8
	0x0393BE50 B.CS 0x393C2FC
	0x0393BE54 SXTW X8, W0
	0x0393BE58 ADD X8, X21, X8, 0x3, LSL
	0x0393BE5C LDP S0, S1, [X8 + 0x20]
	0x0393BE60 LDR V4, [X19 + 0x18]
	0x0393BE64 LDR V2, [X31]
	0x0393BE68 MOV V3.16B, V8.16B
	0x0393BE6C MOV X0, X31
	0x0393BE70 BL 0x3908120
	0x0393BE74 LDR W8, [X21 + 0x18]
	0x0393BE78 CMP W24, W8
	0x0393BE7C B.CS 0x393C2FC
	0x0393BE80 SXTW X8, W24
	0x0393BE84 ADD W23, W23, 0x1
	0x0393BE88 ADD X8, X21, X8, 0x3, LSL
	0x0393BE8C CMP W23, W22
	0x0393BE90 STP S0, S1, [X8 + 0x20]
	0x0393BE94 B.NE 0x393BC10
	0x0393BE98 LDRB W8, [X19]
	0x0393BE9C CBNZ W8, 0x393BED4
	0x0393BEA0 LDR W23, [X19 + 0x1C]
	0x0393BEA4 CMP W23, 0x9
	0x0393BEA8 B.EQ 0x393BED4
	0x0393BEAC ADRP X8, 0x813000
	0x0393BEB0 LDR X8, [X8 + 0x590]
	0x0393BEB4 LDR X0, [X8]
	0x0393BEB8 LDR W8, [X0 + 0xE0]
	0x0393BEBC CBNZ W8, 0x393BEC4
	0x0393BEC0 BL 0x1C16DFC
	0x0393BEC4 MOV X0, X21
	0x0393BEC8 MOV X1, X20
	0x0393BECC MOV W2, W23
	0x0393BED0 BL 0x393C6B4
	0x0393BED4 LDRB W8, [X19 + 0x1]
	0x0393BED8 CBNZ W8, 0x393BEE4
	0x0393BEDC LDRB W8, [X19 + 0x2]
	0x0393BEE0 CBZ W8, 0x393C2E8
	0x0393BEE4 CMP W22, 0x1
	0x0393BEE8 B.LT 0x393C160
	0x0393BEEC CMP W22, 0x1
	0x0393BEF0 MOV W23, W31
	0x0393BEF4 CSINC W22, W22, W31, GT
	0x0393BEF8 LDR X8, [X20]
	0x0393BEFC LDR X1, [X26]
	0x0393BF00 LDRH W9, [X8 + 0x12E]
	0x0393BF04 CBZ X9, 0x393BF28
	0x0393BF08 LDR X10, [X8 + 0xB0]
	0x0393BF0C ADD X10, X10, 0x8
	0x0393BF10 LDUR X11, [X10 - 0x8]
	0x0393BF14 CMP X11, X1
	0x0393BF18 B.EQ 0x393BF38
	0x0393BF1C SUBS X9, X9, 0x1
	0x0393BF20 ADD X10, X10, 0x10
	0x0393BF24 B.NE 0x393BF10
	0x0393BF28 MOV X0, X20
	0x0393BF2C MOV W2, W31
	0x0393BF30 BL 0x1C5C788
	0x0393BF34 B 0x393BF44
	0x0393BF38 LDRSW X9, [X10]
	0x0393BF3C ADD X8, X8, X9, 0x4, LSL
	0x0393BF40 ADD X0, X8, 0x138
	0x0393BF44 LDP X8, X2, [X0]
	0x0393BF48 MOV X0, X20
	0x0393BF4C MOV W1, W23
	0x0393BF50 BLR X8
	0x0393BF54 CBZ X21, 0x393C300
	0x0393BF58 LDR W8, [X21 + 0x18]
	0x0393BF5C CMP W0, W8
	0x0393BF60 B.CS 0x393C2FC
	0x0393BF64 LDR X8, [X20]
	0x0393BF68 ADD X9, X21, W0, 0x3, SXTW
	0x0393BF6C LDR V8, [X9 + 0x20]
	0x0393BF70 LDR X1, [X26]
	0x0393BF74 LDRH W9, [X8 + 0x12E]
	0x0393BF78 CBZ X9, 0x393BF9C
	0x0393BF7C LDR X10, [X8 + 0xB0]
	0x0393BF80 ADD X10, X10, 0x8
	0x0393BF84 LDUR X11, [X10 - 0x8]
	0x0393BF88 CMP X11, X1
	0x0393BF8C B.EQ 0x393BFAC
	0x0393BF90 SUBS X9, X9, 0x1
	0x0393BF94 ADD X10, X10, 0x10
	0x0393BF98 B.NE 0x393BF84
	0x0393BF9C MOV X0, X20
	0x0393BFA0 MOV W2, W31
	0x0393BFA4 BL 0x1C5C788
	0x0393BFA8 B 0x393BFB8
	0x0393BFAC LDRSW X9, [X10]
	0x0393BFB0 ADD X8, X8, X9, 0x4, LSL
	0x0393BFB4 ADD X0, X8, 0x138
	0x0393BFB8 LDP X8, X2, [X0]
	0x0393BFBC MOV X0, X20
	0x0393BFC0 MOV W1, W23
	0x0393BFC4 BLR X8
	0x0393BFC8 LDR W8, [X21 + 0x18]
	0x0393BFCC CMP W0, W8
	0x0393BFD0 B.CS 0x393C2FC
	0x0393BFD4 LDR X8, [X20]
	0x0393BFD8 ADD X9, X21, W0, 0x3, SXTW
	0x0393BFDC LDRB W10, [X19 + 0x1]
	0x0393BFE0 LDRB W11, [X19 + 0x2]
	0x0393BFE4 LDR V1, [X9 + 0x24]
	0x0393BFE8 LDRB W24, [X19 + 0x3]
	0x0393BFEC LDRH W9, [X8 + 0x12E]
	0x0393BFF0 LDR X1, [X26]
	0x0393BFF4 FNEG S0, S8
	0x0393BFF8 CMP W10, 0x0
	0x0393BFFC FCSEL S9, S8, S0, EQ
	0x0393C000 FNEG S0, S1
	0x0393C004 CMP W11, 0x0
	0x0393C008 FCSEL S8, S1, S0, EQ
	0x0393C00C CBZ X9, 0x393C030
	0x0393C010 LDR X10, [X8 + 0xB0]
	0x0393C014 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X20, 0xAA7000
	013 Move W8, [X20+2347]
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x814000
	021 Move X0, [X0+992]
	022 Call 0x1C17CF4
	023 Move X0, 0x814000
	024 Move X0, [X0+1208]
	025 Call 0x1C17CF4
	026 Move X0, 0x814000
	027 Move X0, [X0+1008]
	028 Call 0x1C17CF4
	029 Move X0, 0x814000
	030 Move X0, [X0+1424]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2347], W8
	034 Compare X19, 0
	035 JumpIfEqual {139}
	036 Move X20, 0x814000
	037 Move X21, 0x814000
	038 Move X20, [X20+1208]
	039 Move X21, [X21+1008]
	040 Move X0, X19
	041 Move X1, X31
	042 Call ProBuilderMesh.get_textures, X0
	043 Move X1, [X20]
	044 Call Enumerable.ToArray, X0
	045 Move X1, [X21]
	046 Move X20, X0
	047 Move X0, X22
	048 Call 0x1C17E00
	049 Move X21, X0
	050 Compare X0, 0
	051 JumpIfNotEqual {58}
	052 Move X8, 0x814000
	053 Move X8, [X8+992]
	054 Move X0, X22
	055 Move X1, [X8]
	056 Call Enumerable.ToArray, X0
	057 Move X21, X0
	058 Compare X21, 0
	059 JumpIfEqual {139}
	060 Move W8, [X21+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W22, W31
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X21, W22
	065 Move X23, [X8+32]
	066 Add X8, X31, 0
	067 Move X0, X31
	068 Call AutoUnwrapSettings.get_defaultAutoUnwrapSettings
	069 Move V0, [X31]
	070 Move V1, [X31+16]
	071 Move [X31+32], V0
	072 Move [X31+40], V1
	073 Compare X23, 0
	074 JumpIfEqual {139}
	075 Move V1, [X31+32]
	076 Move V0, [X31+48]
	077 NotImplemented "Instruction MOVI not yet implemented."
	078 Move [X23+80], D2
	079 Move [X23+76], W31
	080 Move [X23+44], V0
	081 Move [X23+28], V1
	082 Move W8, [X21+24]
	083 Add W22, W22, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X19
	086 Move X1, X21
	087 Move X2, X31
	088 Call ProBuilderMesh.RefreshUV, X0, X1
	089 Move W8, [X21+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X25, 0x814000
	092 Move X22, [X19+96]
	093 Move X25, [X25+1424]
	094 Move X24, X31
	095 Add X26, X21, 32
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X27, [X26]
	098 Compare X27, 0
	099 JumpIfEqual {139}
	100 Move X0, [X25]
	101 Move X23, [X27+16]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Add X8, X31, 32
	107 Move X0, X22
	108 Move X1, X23
	109 Move X2, X20
	110 Move X3, X23
	111 Call UvUnwrapping.CalculateDelta, X0, X1, X2, X3
	112 Move V0, [X31+32]
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move V2, [X31+40]
	115 Add X24, X24, 1
	116 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	117 Move [X27+36], D1
	118 Move [X27+44], D0
	119 Move [X27+52], S2
	120 Move W8, [X21+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X19
	123 Move X1, X21
	124 Move X2, X31
	125 Call ProBuilderMesh.RefreshUV, X0, X1
	126 Move X20, [X31+128]
	127 Move X19, [X31+136]
	128 Move X22, [X31+112]
	129 Move X21, [X31+120]
	130 Move X24, [X31+96]
	131 Move X23, [X31+104]
	132 Move X26, [X31+80]
	133 Move X25, [X31+88]
	134 Move X30, [X31+64]
	135 Move X27, [X31+72]
	136 Add X31, X31, 144
	137 Return 
	138 Call 0x1C17F28
	139 Call 0x1C17F20

Method: UnityEngine.ProBuilder.AutoUnwrapSettings GetAutoUnwrapSettings(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x0393C45C LDP V1, V0, [X19]
	0x0393C460 ADD X2, X31, 0x0
	0x0393C464 MOV X0, X20
	0x0393C468 LDR X1, [X8 + 0x10]
	0x0393C46C STP V1, V0, [X31]
	0x0393C470 BL 0x393BA14
	0x0393C474 LDP X20, X19, [X31 + 0x80]
	0x0393C478 LDP X22, X21, [X31 + 0x70]
	0x0393C47C LDP X24, X23, [X31 + 0x60]
	0x0393C480 LDP X26, X25, [X31 + 0x50]
	0x0393C484 LDP X30, X27, [X31 + 0x40]
	0x0393C488 ADD X31, X31, 0x90
	0x0393C48C RET
	0x0393C490 BL 0x1C16F20
	0x0393C494 BL 0x1C16F28
	0x0393C498 SUB X31, X31, 0x70
	0x0393C49C STR D10, [X31 + 0x20]
	0x0393C4A0 STP D9, D8, [X31 + 0x30]
	0x0393C4A4 STP X30, X23, [X31 + 0x40]
	0x0393C4A8 STP X22, X21, [X31 + 0x50]
	0x0393C4AC STP X20, X19, [X31 + 0x60]
	0x0393C4B0 ADRP X21, 0xAA5000
	0x0393C4B4 LDRB W8, [X21 + 0x934]
	0x0393C4B8 MOV X22, X2
	0x0393C4BC MOV X19, X1
	0x0393C4C0 MOV X20, X0
	0x0393C4C4 STR D0, [X31 + 0x10]
	0x0393C4C8 TBNZ X8, 0x0, 0x393C4F4
	0x0393C4CC ADRP X0, 0x7DF000
	0x0393C4D0 LDR X0, [X0 + 0x7A0]
	0x0393C4D4 STR V1, [X31]
	0x0393C4D8 BL 0x1C16CF4
	0x0393C4DC ADRP X0, 0x7DF000
	0x0393C4E0 LDR X0, [X0 + 0x7A8]
	0x0393C4E4 BL 0x1C16CF4
	0x0393C4E8 LDR V1, [X31]
	0x0393C4EC MOVZ W8, 0x1
	0x0393C4F0 STRB W8, [X21 + 0x934]
	0x0393C4F4 CBZ X22, 0x393C6B0
	0x0393C4F8 CBZ X19, 0x393C6B0
	0x0393C4FC LDR V0, [X22 + 0x10]
	0x0393C500 ADRP X22, 0x7DF000
	0x0393C504 ADRP X23, 0x7DF000
	0x0393C508 LDR X22, [X22 + 0x7A0]
	0x0393C50C LDR X23, [X23 + 0x7A8]
	0x0393C510 LDR V2, [X31 + 0x1]
	0x0393C514 MOV W21, W31
	0x0393C518 MOV V3.16B, V2.16B
	0x0393C51C MOV V3.S[1], V1.S[0]
	0x00000000 INVALID
	0x0393C524 MOV V2.S[1], V1.S[0]
	0x0393C528 FSUB V9.2S, V0.2S, V8.2S
	0x0393C52C STR V2, [X31 + 0x1]
	0x0393C530 LDR X8, [X19]
	0x0393C534 LDR X1, [X22]
	0x0393C538 LDRH W9, [X8 + 0x12E]
	0x0393C53C CBZ X9, 0x393C560
	0x0393C540 LDR X10, [X8 + 0xB0]
	0x0393C544 ADD X10, X10, 0x8
	0x0393C548 LDUR X11, [X10 - 0x8]
	0x0393C54C CMP X11, X1
	0x0393C550 B.EQ 0x393C570
	0x0393C554 SUBS X9, X9, 0x1
	0x0393C558 ADD X10, X10, 0x10
	0x0393C55C B.NE 0x393C548

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D10
	003 Move [X31+72], D9
	004 Move [X31+80], D8
	005 Move [X31+88], X30
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0xAA6000
	011 Move W9, [X22+2348]
	012 Move X20, X1
	013 Move X21, X0
	014 Move X19, X8
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x813000
	020 Move X0, [X0+1424]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2348], W8
	024 Compare X20, 0
	025 JumpIfEqual {79}
	026 Move W8, [X20+76]
	027 Compare W8, 0
	028 JumpIfEqual {58}
	029 Move X8, 0x813000
	030 Move X8, [X8+1424]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X8, X31, 0
	037 Move X0, X21
	038 Move X1, X20
	039 Call UvUnwrapping.GetUVTransform, X0, X1
	040 Move V8, [X31]
	041 Move V9, [X31+8]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Add X8, X31, 0
	044 Move X0, X31
	045 Call AutoUnwrapSettings.get_defaultAutoUnwrapSettings
	046 Move V0, [X31+8]
	047 Move X8, [X31]
	048 Move W10, [X31+28]
	049 Move W9, 0x43B40000
	050 Move S1, W9
	051 Subtract S1, S1, S9
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Move [X19+24], S1
	054 Move [X19], X8
	055 Move [X19+8], D0
	056 Move [X19+16], D8
	057 Move [X19+28], W10
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction MOVI not yet implemented."
	061 Add X1, X31, 32
	062 Move X0, X19
	063 Move X2, X31
	064 Move [X31+32], V1
	065 Move [X31+40], V0
	066 Move [X19], V2
	067 Move [X19+8], V2
	068 Call AutoUnwrapSettings..ctor, X0, X1
	069 Move X20, [X31+112]
	070 Move X19, [X31+120]
	071 Move X22, [X31+96]
	072 Move X21, [X31+104]
	073 Move X30, [X31+88]
	074 Move D9, [X31+72]
	075 Move D8, [X31+80]
	076 Move V10, [X31+64]
	077 Add X31, X31, 128
	078 Return X0
	079 Call 0x1C17F20

Method: UnityEngine.ProBuilder.UvUnwrapping/UVTransform GetUVTransform(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x0393C560 MOV X0, X19
	0x0393C564 MOV W2, W31
	0x0393C568 BL 0x1C5C788
	0x0393C56C B 0x393C57C
	0x0393C570 LDRSW X9, [X10]
	0x0393C574 ADD X8, X8, X9, 0x4, LSL
	0x0393C578 ADD X0, X8, 0x138
	0x0393C57C LDP X8, X1, [X0]
	0x0393C580 MOV X0, X19
	0x0393C584 BLR X8
	0x0393C588 CMP W21, W0
	0x0393C58C B.GE 0x393C690
	0x0393C590 LDR X8, [X19]
	0x0393C594 LDR X1, [X23]
	0x0393C598 LDRH W9, [X8 + 0x12E]
	0x0393C59C CBZ X9, 0x393C5C0
	0x0393C5A0 LDR X10, [X8 + 0xB0]
	0x0393C5A4 ADD X10, X10, 0x8
	0x0393C5A8 LDUR X11, [X10 - 0x8]
	0x0393C5AC CMP X11, X1
	0x0393C5B0 B.EQ 0x393C5D0
	0x0393C5B4 SUBS X9, X9, 0x1
	0x0393C5B8 ADD X10, X10, 0x10
	0x0393C5BC B.NE 0x393C5A8
	0x0393C5C0 MOV X0, X19
	0x0393C5C4 MOV W2, W31
	0x0393C5C8 BL 0x1C5C788
	0x0393C5CC B 0x393C5DC
	0x0393C5D0 LDRSW X9, [X10]
	0x0393C5D4 ADD X8, X8, X9, 0x4, LSL
	0x0393C5D8 ADD X0, X8, 0x138
	0x0393C5DC LDP X8, X2, [X0]
	0x0393C5E0 MOV X0, X19
	0x0393C5E4 MOV W1, W21
	0x0393C5E8 BLR X8
	0x0393C5EC CBZ X20, 0x393C6B0
	0x0393C5F0 LDR W8, [X20 + 0x18]
	0x0393C5F4 CMP W0, W8
	0x0393C5F8 B.CS 0x393C6AC
	0x0393C5FC LDR X8, [X19]
	0x0393C600 ADD X9, X20, W0, 0x3, SXTW
	0x0393C604 LDR V10, [X9 + 0x20]
	0x0393C608 LDR X1, [X23]
	0x0393C60C LDRH W9, [X8 + 0x12E]
	0x0393C610 CBZ X9, 0x393C634
	0x0393C614 LDR X10, [X8 + 0xB0]
	0x0393C618 ADD X10, X10, 0x8
	0x0393C61C LDUR X11, [X10 - 0x8]
	0x0393C620 CMP X11, X1
	0x0393C624 B.EQ 0x393C644
	0x0393C628 SUBS X9, X9, 0x1
	0x0393C62C ADD X10, X10, 0x10
	0x0393C630 B.NE 0x393C61C
	0x0393C634 MOV X0, X19
	0x0393C638 MOV W2, W31
	0x0393C63C BL 0x1C5C788
	0x0393C640 B 0x393C650
	0x0393C644 LDRSW X9, [X10]
	0x0393C648 ADD X8, X8, X9, 0x4, LSL
	0x0393C64C ADD X0, X8, 0x138
	0x0393C650 LDP X8, X2, [X0]
	0x0393C654 MOV X0, X19
	0x0393C658 MOV W1, W21
	0x0393C65C BLR X8
	0x0393C660 LDR W8, [X20 + 0x18]
	0x0393C664 CMP W0, W8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X22, 0xAA6000
	013 Move W9, [X22+2349]
	014 Move X20, X1
	015 Move X21, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x813000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2349], W8
	026 Compare X21, 0
	027 JumpIfEqual {80}
	028 Compare X20, 0
	029 JumpIfEqual {80}
	030 Move X24, 0x813000
	031 Move X22, [X21+88]
	032 Move X23, [X20+16]
	033 Move X24, [X24+1424]
	034 Move X0, X21
	035 Move X1, X20
	036 Move X2, X31
	037 Call Math.Normal, X0, X1
	038 Move X0, [X24]
	039 Move V8, V0
	040 Move V9, V1
	041 Move V10, V2
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X24]
	047 Move X8, [X0+184]
	048 Move X0, X22
	049 Move X1, X23
	050 Move V0, V8
	051 Move X2, [X8]
	052 Move V1, V9
	053 Move V2, V10
	054 Move X3, X31
	055 Call Projection.PlanarProject, X0, X1, X2, X3
	056 Move X8, [X24]
	057 Move X0, [X21+96]
	058 Move X1, [X20+16]
	059 Move X3, X31
	060 Move X8, [X8+184]
	061 Move X2, [X8]
	062 Add X8, X31, 8
	063 Call UvUnwrapping.CalculateDelta, X0, X1, X2, X3
	064 Move W8, [X31+24]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X22, [X31+80]
	067 Move X21, [X31+88]
	068 Move X24, [X31+64]
	069 Move X23, [X31+72]
	070 Move [X19+16], W8
	071 Move [X19], V0
	072 Move X20, [X31+96]
	073 Move X19, [X31+104]
	074 Move X30, [X31+56]
	075 Move D9, [X31+40]
	076 Move D8, [X31+48]
	077 Move V10, [X31+32]
	078 Add X31, X31, 112
	079 Return X0
	080 Call 0x1C17F20

Method: System.Int32 GetIndex(System.Collections.Generic.IList`1<System.Int32> collection, System.Int32 index)

Disassembly:
	0x0393C668 B.CS 0x393C6AC
	0x0393C66C LDR V1, [X31 + 0x1]
	0x0393C670 FSUB V0.2S, V10.2S, V9.2S
	0x0393C674 FSUB V0.2S, V0.2S, V8.2S
	0x0393C678 ADD X8, X20, W0, 0x3, SXTW
	0x00000000 INVALID
	0x0393C680 FADD V0.2S, V8.2S, V0.2S
	0x0393C684 ADD W21, W21, 0x1
	0x0393C688 STR D0, [X8 + 0x20]
	0x0393C68C B 0x393C530
	0x0393C690 LDP X20, X19, [X31 + 0x60]
	0x0393C694 LDP X22, X21, [X31 + 0x50]
	0x0393C698 LDP X30, X23, [X31 + 0x40]
	0x0393C69C LDP D9, D8, [X31 + 0x30]
	0x0393C6A0 LDR V10, [X31 + 0x20]
	0x0393C6A4 ADD X31, X31, 0x70
	0x0393C6A8 RET
	0x0393C6AC BL 0x1C16F28
	0x0393C6B0 BL 0x1C16F20
	0x0393C6B4 STP D11, D10, [X31 - 0x60]!
	0x0393C6B8 STP D9, D8, [X31 + 0x10]
	0x0393C6BC STP X30, X25, [X31 + 0x20]
	0x0393C6C0 STP X24, X23, [X31 + 0x30]
	0x0393C6C4 STP X22, X21, [X31 + 0x40]
	0x0393C6C8 STP X20, X19, [X31 + 0x50]
	0x0393C6CC ADRP X22, 0xAA5000
	0x0393C6D0 ADRP X23, 0x812000
	0x0393C6D4 LDRB W8, [X22 + 0x935]
	0x0393C6D8 LDR X23, [X23 + 0x590]
	0x0393C6DC MOV W21, W2
	0x0393C6E0 MOV X19, X1
	0x0393C6E4 MOV X20, X0
	0x0393C6E8 TBNZ X8, 0x0, 0x393C718
	0x0393C6EC ADRP X0, 0x7DF000
	0x0393C6F0 LDR X0, [X0 + 0x7A0]
	0x0393C6F4 BL 0x1C16CF4
	0x0393C6F8 ADRP X0, 0x7DF000
	0x0393C6FC LDR X0, [X0 + 0x7A8]
	0x0393C700 BL 0x1C16CF4
	0x0393C704 ADRP X0, 0x812000
	0x0393C708 LDR X0, [X0 + 0x590]
	0x0393C70C BL 0x1C16CF4
	0x0393C710 MOVZ W8, 0x1
	0x0393C714 STRB W8, [X22 + 0x935]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAA6000
	006 Move W8, [X21+2350]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7E0000
	014 Move X0, [X0+1960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2350], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X10, 0x7E0000
	021 Move X8, [X20]
	022 Move X10, [X10+1960]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 Move W0, W19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X3, [X0]
	046 Move X2, [X0+8]
	047 Move X0, X20
	048 Move W1, W19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 CallNoReturn X3

Method: UnityEngine.ProBuilder.UvUnwrapping/UVTransform CalculateDelta(System.Collections.Generic.IList`1<UnityEngine.Vector2> src, System.Collections.Generic.IList`1<System.Int32> srcIndices, System.Collections.Generic.IList`1<UnityEngine.Vector2> dst, System.Collections.Generic.IList`1<System.Int32> dstIndices)

Disassembly:
	0x0393C018 LDUR X11, [X10 - 0x8]
	0x0393C01C CMP X11, X1
	0x0393C020 B.EQ 0x393C040
	0x0393C024 SUBS X9, X9, 0x1
	0x0393C028 ADD X10, X10, 0x10
	0x0393C02C B.NE 0x393C018
	0x0393C030 MOV X0, X20
	0x0393C034 MOV W2, W31
	0x0393C038 BL 0x1C5C788
	0x0393C03C B 0x393C04C
	0x0393C040 LDRSW X9, [X10]
	0x0393C044 ADD X8, X8, X9, 0x4, LSL
	0x0393C048 ADD X0, X8, 0x138
	0x0393C04C LDP X8, X2, [X0]
	0x0393C050 MOV X0, X20
	0x0393C054 MOV W1, W23
	0x0393C058 BLR X8
	0x0393C05C LDR W8, [X21 + 0x18]
	0x0393C060 CMP W0, W8
	0x0393C064 B.CS 0x393C2FC
	0x0393C068 ADD X8, X21, W0, 0x3, SXTW
	0x0393C06C ADD X8, X8, 0x20
	0x0393C070 CBZ W24, 0x393C0B8
	0x0393C074 STR S8, [X8]
	0x0393C078 LDR X8, [X20]
	0x0393C07C LDR X1, [X26]
	0x0393C080 LDRH W9, [X8 + 0x12E]
	0x0393C084 CBZ X9, 0x393C0A8
	0x0393C088 LDR X10, [X8 + 0xB0]
	0x0393C08C ADD X10, X10, 0x8
	0x0393C090 LDUR X11, [X10 - 0x8]
	0x0393C094 CMP X11, X1
	0x0393C098 B.EQ 0x393C0FC
	0x0393C09C SUBS X9, X9, 0x1
	0x0393C0A0 ADD X10, X10, 0x10
	0x0393C0A4 B.NE 0x393C090
	0x0393C0A8 MOV X0, X20
	0x0393C0AC MOV W2, W31
	0x0393C0B0 BL 0x1C5C788
	0x0393C0B4 B 0x393C108
	0x0393C0B8 STR S9, [X8]
	0x0393C0BC LDR X8, [X20]
	0x0393C0C0 LDR X1, [X26]
	0x0393C0C4 LDRH W9, [X8 + 0x12E]
	0x0393C0C8 CBZ X9, 0x393C0EC
	0x0393C0CC LDR X10, [X8 + 0xB0]
	0x0393C0D0 ADD X10, X10, 0x8
	0x0393C0D4 LDUR X11, [X10 - 0x8]
	0x0393C0D8 CMP X11, X1
	0x0393C0DC B.EQ 0x393C124
	0x0393C0E0 SUBS X9, X9, 0x1
	0x0393C0E4 ADD X10, X10, 0x10
	0x0393C0E8 B.NE 0x393C0D4
	0x0393C0EC MOV X0, X20
	0x0393C0F0 MOV W2, W31
	0x0393C0F4 BL 0x1C5C788
	0x0393C0F8 B 0x393C130
	0x0393C0FC LDRSW X9, [X10]
	0x0393C100 ADD X8, X8, X9, 0x4, LSL
	0x0393C104 ADD X0, X8, 0x138
	0x0393C108 LDP X8, X2, [X0]
	0x0393C10C MOV X0, X20
	0x0393C110 MOV W1, W23
	0x0393C114 BLR X8
	0x0393C118 LDR W8, [X21 + 0x18]
	0x0393C11C MOV V8.16B, V9.16B
	0x0393C120 B 0x393C144
	0x0393C124 LDRSW X9, [X10]
	0x0393C128 ADD X8, X8, X9, 0x4, LSL
	0x0393C12C ADD X0, X8, 0x138
	0x0393C130 LDP X8, X2, [X0]
	0x0393C134 MOV X0, X20
	0x0393C138 MOV W1, W23
	0x0393C13C BLR X8
	0x0393C140 LDR W8, [X21 + 0x18]
	0x0393C144 CMP W0, W8
	0x0393C148 B.CS 0x393C2FC
	0x0393C14C ADD W23, W23, 0x1
	0x0393C150 ADD X8, X21, W0, 0x3, SXTW
	0x0393C154 CMP W23, W22
	0x0393C158 STR S8, [X8 + 0x24]
	0x0393C15C B.NE 0x393BEF8
	0x0393C160 MOV W22, W31
	0x0393C164 LDR X8, [X20]
	0x0393C168 LDR X1, [X25]
	0x0393C16C LDRH W9, [X8 + 0x12E]
	0x0393C170 CBZ X9, 0x393C194
	0x0393C174 LDR X10, [X8 + 0xB0]
	0x0393C178 ADD X10, X10, 0x8
	0x0393C17C LDUR X11, [X10 - 0x8]
	0x0393C180 CMP X11, X1
	0x0393C184 B.EQ 0x393C1A4
	0x0393C188 SUBS X9, X9, 0x1
	0x0393C18C ADD X10, X10, 0x10
	0x0393C190 B.NE 0x393C17C
	0x0393C194 MOV X0, X20
	0x0393C198 MOV W2, W31
	0x0393C19C BL 0x1C5C788
	0x0393C1A0 B 0x393C1B0
	0x0393C1A4 LDRSW X9, [X10]
	0x0393C1A8 ADD X8, X8, X9, 0x4, LSL
	0x0393C1AC ADD X0, X8, 0x138
	0x0393C1B0 LDP X8, X1, [X0]
	0x0393C1B4 MOV X0, X20
	0x0393C1B8 BLR X8
	0x0393C1BC CMP W22, W0
	0x0393C1C0 B.GE 0x393C2C8
	0x0393C1C4 LDR X8, [X20]
	0x0393C1C8 LDR X1, [X26]
	0x0393C1CC LDRH W9, [X8 + 0x12E]
	0x0393C1D0 CBZ X9, 0x393C1F4
	0x0393C1D4 LDR X10, [X8 + 0xB0]
	0x0393C1D8 ADD X10, X10, 0x8
	0x0393C1DC LDUR X11, [X10 - 0x8]
	0x0393C1E0 CMP X11, X1
	0x0393C1E4 B.EQ 0x393C204
	0x0393C1E8 SUBS X9, X9, 0x1
	0x0393C1EC ADD X10, X10, 0x10
	0x0393C1F0 B.NE 0x393C1DC
	0x0393C1F4 MOV X0, X20
	0x0393C1F8 MOV W2, W31
	0x0393C1FC BL 0x1C5C788
	0x0393C200 B 0x393C210
	0x0393C204 LDRSW X9, [X10]
	0x0393C208 ADD X8, X8, X9, 0x4, LSL
	0x0393C20C ADD X0, X8, 0x138
	0x0393C210 LDP X8, X2, [X0]
	0x0393C214 MOV X0, X20
	0x0393C218 MOV W1, W22
	0x0393C21C BLR X8
	0x0393C220 CBZ X21, 0x393C300
	0x0393C224 LDR W8, [X21 + 0x18]
	0x0393C228 CMP W0, W8
	0x0393C22C B.CS 0x393C2FC
	0x0393C230 ADD X8, X21, W0, 0x3, SXTW
	0x0393C234 LDR V0, [X8 + 0x20]
	0x0393C238 LDR V1, [X19 + 0x10]
	0x0393C23C FSUB S0, S0, S1
	0x0393C240 STR S0, [X8 + 0x20]
	0x0393C244 LDR X8, [X20]
	0x0393C248 LDR X1, [X26]
	0x0393C24C LDRH W9, [X8 + 0x12E]
	0x0393C250 CBZ X9, 0x393C274
	0x0393C254 LDR X10, [X8 + 0xB0]
	0x0393C258 ADD X10, X10, 0x8
	0x0393C25C LDUR X11, [X10 - 0x8]
	0x0393C260 CMP X11, X1
	0x0393C264 B.EQ 0x393C284
	0x0393C268 SUBS X9, X9, 0x1
	0x0393C26C ADD X10, X10, 0x10
	0x0393C270 B.NE 0x393C25C
	0x0393C274 MOV X0, X20
	0x0393C278 MOV W2, W31
	0x0393C27C BL 0x1C5C788
	0x0393C280 B 0x393C290
	0x0393C284 LDRSW X9, [X10]
	0x0393C288 ADD X8, X8, X9, 0x4, LSL
	0x0393C28C ADD X0, X8, 0x138
	0x0393C290 LDP X8, X2, [X0]
	0x0393C294 MOV X0, X20
	0x0393C298 MOV W1, W22
	0x0393C29C BLR X8
	0x0393C2A0 LDR W8, [X21 + 0x18]
	0x0393C2A4 CMP W0, W8
	0x0393C2A8 B.CS 0x393C2FC
	0x0393C2AC ADD X8, X21, W0, 0x3, SXTW
	0x0393C2B0 LDR V0, [X19 + 0x14]
	0x0393C2B4 LDR V1, [X8 + 0x24]
	0x0393C2B8 ADD W22, W22, 0x1
	0x0393C2BC FSUB S0, S1, S0
	0x0393C2C0 STR S0, [X8 + 0x24]
	0x0393C2C4 B 0x393C164
	0x0393C2C8 LDP X20, X19, [X31 + 0x60]
	0x0393C2CC LDP X22, X21, [X31 + 0x50]
	0x0393C2D0 LDP X24, X23, [X31 + 0x40]
	0x0393C2D4 LDP X26, X25, [X31 + 0x30]
	0x0393C2D8 LDR X30, [X31 + 0x20]
	0x0393C2DC LDP D9, D8, [X31 + 0x10]
	0x0393C2E0 ADD X31, X31, 0x70
	0x0393C2E4 RET
	0x0393C2E8 LDRB W8, [X19 + 0x3]
	0x0393C2EC CBZ W8, 0x393C160
	0x0393C2F0 CMP W22, 0x0
	0x0393C2F4 B.GT 0x393BEEC
	0x0393C2F8 B 0x393C160
	0x0393C2FC BL 0x1C16F28
	0x0393C300 BL 0x1C16F20
	0x0393C304 SUB X31, X31, 0x90
	0x0393C308 STP X30, X27, [X31 + 0x40]
	0x0393C30C STP X26, X25, [X31 + 0x50]
	0x0393C310 STP X24, X23, [X31 + 0x60]
	0x0393C314 STP X22, X21, [X31 + 0x70]
	0x0393C318 STP X20, X19, [X31 + 0x80]
	0x0393C31C ADRP X22, 0xAA5000
	0x0393C320 ADRP X24, 0x812000
	0x0393C324 LDRB W8, [X22 + 0x932]
	0x0393C328 LDR X24, [X24 + 0x590]
	0x0393C32C MOV X19, X2
	0x0393C330 MOV W21, W1
	0x0393C334 MOV X20, X0
	0x0393C338 TBNZ X8, 0x0, 0x393C368
	0x0393C33C ADRP X0, 0x812000
	0x0393C340 LDR X0, [X0 + 0x688]
	0x0393C344 BL 0x1C16CF4
	0x0393C348 ADRP X0, 0x7BE000
	0x0393C34C LDR X0, [X0 + 0x858]
	0x0393C350 BL 0x1C16CF4
	0x0393C354 ADRP X0, 0x812000
	0x0393C358 LDR X0, [X0 + 0x590]
	0x0393C35C BL 0x1C16CF4
	0x0393C360 MOVZ W8, 0x1
	0x0393C364 STRB W8, [X22 + 0x932]
	0x0393C368 LDP V1, V0, [X19]
	0x0393C36C ADD X2, X31, 0x20
	0x0393C370 MOV X0, X20
	0x0393C374 MOV W1, W21
	0x0393C378 MOV X3, X31
	0x0393C37C STP V1, V0, [X31 + 0x20]
	0x0393C380 BL 0x392069C
	0x0393C384 LDR X0, [X24]
	0x0393C388 LDR W8, [X0 + 0xE0]
	0x0393C38C CBNZ W8, 0x393C398
	0x0393C390 BL 0x1C16DFC
	0x0393C394 LDR X0, [X24]
	0x0393C398 LDR X8, [X0 + 0xB8]
	0x0393C39C LDR X8, [X8 + 0x10]
	0x0393C3A0 CBZ X8, 0x393C490
	0x0393C3A4 LDR W9, [X8 + 0x1C]
	0x0393C3A8 ADD W9, W9, 0x1
	0x0393C3AC STP W31, W9, [X8 + 0x18]
	0x0393C3B0 CBZ X20, 0x393C490
	0x0393C3B4 LDR X25, [X20 + 0x28]
	0x0393C3B8 CBZ X25, 0x393C490
	0x0393C3BC LDR W8, [X25 + 0x18]
	0x0393C3C0 CMP W8, 0x1
	0x0393C3C4 B.LT 0x393C440
	0x0393C3C8 ADRP X27, 0x812000
	0x0393C3CC LDR X27, [X27 + 0x688]
	0x0393C3D0 MOV W26, W31
	0x0393C3D4 CMP W26, W8
	0x0393C3D8 B.CS 0x393C494
	0x0393C3DC ADD X8, X25, W26, 0x3, SXTW
	0x0393C3E0 LDR X22, [X8 + 0x20]
	0x0393C3E4 CBZ X22, 0x393C490
	0x0393C3E8 LDR W8, [X22 + 0x54]
	0x0393C3EC CMP W8, W21
	0x0393C3F0 B.NE 0x393C430
	0x0393C3F4 LDR X0, [X24]
	0x0393C3F8 LDR W8, [X0 + 0xE0]
	0x0393C3FC CBNZ W8, 0x393C408
	0x0393C400 BL 0x1C16DFC
	0x0393C404 LDR X0, [X24]
	0x0393C408 LDR X8, [X0 + 0xB8]
	0x0393C40C MOV X0, X22
	0x0393C410 MOV X1, X31
	0x0393C414 LDR X23, [X8 + 0x10]
	0x0393C418 BL 0x38FF530
	0x0393C41C CBZ X23, 0x393C490
	0x0393C420 LDR X2, [X27]
	0x0393C424 MOV X1, X0
	0x0393C428 MOV X0, X23
	0x0393C42C BL 0x2FDC918
	0x0393C430 LDR W8, [X25 + 0x18]
	0x0393C434 ADD W26, W26, 0x1
	0x0393C438 CMP W26, W8
	0x0393C43C B.LT 0x393C3D4
	0x0393C440 LDR X0, [X24]
	0x0393C444 LDR X20, [X20 + 0x60]
	0x0393C448 LDR W8, [X0 + 0xE0]
	0x0393C44C CBNZ W8, 0x393C458
	0x0393C450 BL 0x1C16DFC
	0x0393C454 LDR X0, [X24]
	0x0393C458 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-128], D13
	002 Move [X31-120], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0xAA6000
	017 Move X25, 0x813000
	018 Move X19, X8
	019 Move W8, [X24+2351]
	020 Move X25, [X25+1424]
	021 Move X22, X3
	022 Move X23, X2
	023 Move X21, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0x812000
	030 Move X0, [X0+3920]
	031 Call 0x1C17CF4
	032 Move X0, 0x812000
	033 Move X0, [X0+2712]
	034 Call 0x1C17CF4
	035 Move X0, 0x813000
	036 Move X0, [X0+1424]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+2351], W8
	040 Move X0, [X25]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W1, 1
	046 Move X0, X21
	047 Call UvUnwrapping.GetIndex, X0, X1
	048 Compare X20, 0
	049 JumpIfEqual {300}
	050 Move X26, 0x812000
	051 Move X8, [X20]
	052 Move X26, [X26+2712]
	053 Move W24, W0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X26]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X2, [X0+8]
	072 Move X0, X20
	073 Move W1, W24
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, X21
	076 Move W1, W31
	077 Move V8, V0
	078 Move V9, V1
	079 Call UvUnwrapping.GetIndex, X0, X1
	080 Move X8, [X20]
	081 Move X1, [X26]
	082 Move W24, W0
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X20
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X2, [X0+8]
	100 Move X0, X20
	101 Move W1, W24
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move W1, 1
	104 Move X0, X22
	105 Move V10, V0
	106 Move V11, V1
	107 Call UvUnwrapping.GetIndex, X0, X1
	108 Compare X23, 0
	109 JumpIfEqual {300}
	110 Move X8, [X23]
	111 Move X1, [X26]
	112 Move W24, W0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X23
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X2, [X0+8]
	130 Move X0, X23
	131 Move W1, W24
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X0, X22
	134 Move W1, W31
	135 Move V12, V0
	136 Move V13, V1
	137 Call UvUnwrapping.GetIndex, X0, X1
	138 Move X8, [X23]
	139 Move X1, [X26]
	140 Move W24, W0
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X23
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X2, [X0+8]
	158 Move X0, X23
	159 Move W1, W24
	160 Subtract S8, S8, S10
	161 Subtract S9, S9, S11
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X24, 0xA9D000
	164 Move W8, [X24+2590]
	165 Subtract S11, S12, S0
	166 Subtract S10, S13, S1
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x7B8000
	170 Move X0, [X0+1448]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X24+2590], W8
	174 Move X24, 0x7B8000
	175 Move X24, [X24+1448]
	176 Multiply S0, S11, S11
	177 Multiply S1, S10, S10
	178 Add S12, S0, S1
	179 Move X0, [X24]
	180 Multiply S0, S8, S8
	181 Multiply S1, S9, S9
	182 Add S13, S0, S1
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X8, -48570368
	188 Move V1, [X8+4072]
	189 Multiply S0, S13, S12
	190 NotImplemented "Instruction FSQRT not yet implemented."
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Move S1, W31
	193 Move X0, [X24]
	194 Multiply S1, S8, S11
	195 Multiply S2, S9, S10
	196 Add S1, S1, S2
	197 Move W8, [X0+224]
	198 NotImplemented "Instruction FDIV not yet implemented."
	199 Move S1, 1
	200 Move S2, -1
	201 NotImplemented "Instruction FMIN not yet implemented."
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 NotImplemented "Instruction FCSEL not yet implemented."
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 NotImplemented "Instruction FCVT not yet implemented."
	208 Call 0x3EB2B80
	209 Move X8, -48566272
	210 Move V1, [X8+1096]
	211 NotImplemented "Instruction INVALID not yet implemented."
	212 Multiply S1, S0, S1
	213 Multiply S0, S9, S11
	214 Multiply S2, S8, S10
	215 Move W8, 0x43B40000
	216 Subtract S0, S0, S2
	217 Move S2, W8
	218 Subtract S2, S2, S1
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 NotImplemented "Instruction FCSEL not yet implemented."
	221 Move X0, X23
	222 Compare X22, 0
	223 JumpIfEqual {227}
	224 Move X1, X22
	225 Move X2, X31
	226 Call Bounds2D.Center, X0, X1
	227 Move X1, X31
	228 Call Bounds2D.Center, X0
	229 Move X0, [X25]
	230 Move X24, 0x812000
	231 Move V8, V0
	232 Move V9, V1
	233 Move W8, [X0+224]
	234 Move X24, [X24+3920]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 NotImplemented "Instruction FNEG not yet implemented."
	239 Move X0, X23
	240 Move X1, X22
	241 Move V0, V8
	242 Move V1, V9
	243 Call UvUnwrapping.GetRotatedSize, X0, X1, X2, V0
	244 Move X0, [X24]
	245 Move V10, V0
	246 Move V11, V1
	247 Call 0x1C17F10
	248 Move X22, X0
	249 Move X1, X20
	250 Compare X21, 0
	251 JumpIfEqual {296}
	252 Move X2, X21
	253 Move X3, X31
	254 Call Bounds2D..ctor, X0, X1, X2
	255 Compare X22, 0
	256 JumpIfEqual {300}
	257 Move S2, [X22+24]
	258 Move S3, [X22+28]
	259 Move V0, V10
	260 Move V1, V11
	261 Move X0, X31
	262 Call Math.DivideBy, X0, X1
	263 Move S4, [X22+16]
	264 Move S5, [X22+20]
	265 Move S2, [X22+24]
	266 Move S3, [X22+28]
	267 Move X0, X31
	268 Multiply S0, S4, S0
	269 Multiply S1, S1, S5
	270 Subtract S8, S8, S0
	271 Subtract S9, S9, S1
	272 Move V0, V10
	273 Move V1, V11
	274 Call Math.DivideBy, X0, X1
	275 Move [X19], S8
	276 Move [X19+8], S9
	277 Move [X19+8], S12
	278 Move [X19+16], S0
	279 Move [X19+16], S1
	280 Move X20, [X31+112]
	281 Move X19, [X31+120]
	282 Move X22, [X31+96]
	283 Move X21, [X31+104]
	284 Move X24, [X31+80]
	285 Move X23, [X31+88]
	286 Move X26, [X31+64]
	287 Move X25, [X31+72]
	288 Move X30, [X31+48]
	289 Move D9, [X31+32]
	290 Move D8, [X31+40]
	291 Move D11, [X31+16]
	292 Move D10, [X31+24]
	293 Move D13, [X31+128]
	294 Move D12, [X31+136]
	295 Return X0
	296 Move X2, X31
	297 Call Bounds2D..ctor, X0, X1
	298 Compare X22, 0
	299 JumpIfNotEqual {257}
	300 Call 0x1C17F20

Method: UnityEngine.Vector2 GetRotatedSize(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indices, UnityEngine.Vector2 center, System.Single rotation)

Disassembly:
	0x0393C718 LDR X0, [X23]
	0x0393C71C LDR W8, [X0 + 0xE0]
	0x0393C720 CBNZ W8, 0x393C72C
	0x0393C724 BL 0x1C16DFC
	0x0393C728 LDR X0, [X23]
	0x0393C72C LDR X8, [X0 + 0xB8]
	0x0393C730 MOV X0, X20
	0x0393C734 MOV X1, X19
	0x0393C738 MOV X2, X31
	0x0393C73C STR X31, [X8 + 0x8]
	0x0393C740 BL 0x3909D54
	0x0393C744 MOV X0, X20
	0x0393C748 MOV X1, X19
	0x0393C74C MOV X2, X31
	0x0393C750 MOV V10.16B, V0.16B
	0x0393C754 MOV V8.16B, V1.16B
	0x0393C758 BL 0x390A0E0
	0x0393C75C MOV V11.16B, V0.16B
	0x0393C760 CMP W21, 0x8
	0x0393C764 MOV V9.16B, V1.16B
	0x0393C768 B.HI 0x393C7C4
	0x0393C76C MOVZ W8, 0x1
	0x0393C770 LSLV W8, W8, W21
	0x0393C774 MOVZ W9, 0x49
	0x0393C778 ANDS W31, W8, W9, 0x0
	0x0393C77C B.NE 0x393C7AC
	0x0393C780 MOVZ W9, 0x124
	0x0393C784 ANDS W31, W8, W9, 0x0
	0x0393C788 B.EQ 0x393C7C4
	0x0393C78C LDR X0, [X23]
	0x0393C790 LDR W8, [X0 + 0xE0]
	0x0393C794 CBNZ W8, 0x393C7A0
	0x0393C798 BL 0x1C16DFC
	0x0393C79C LDR X0, [X23]
	0x0393C7A0 FMOV S0, -1
	0x0393C7A4 FADD S10, S11, S0
	0x0393C7A8 B 0x393C7F0
	0x0393C7AC LDR X0, [X23]
	0x0393C7B0 LDR W8, [X0 + 0xE0]
	0x0393C7B4 CBNZ W8, 0x393C7F0
	0x0393C7B8 BL 0x1C16DFC
	0x0393C7BC LDR X0, [X23]
	0x0393C7C0 B 0x393C7F0
	0x0393C7C4 LDR X0, [X23]
	0x0393C7C8 LDR W8, [X0 + 0xE0]
	0x0393C7CC CBNZ W8, 0x393C7D8
	0x0393C7D0 BL 0x1C16DFC
	0x0393C7D4 LDR X0, [X23]
	0x0393C7D8 FSUB S0, S11, S10
	0x0393C7DC FMOV S1, 0.5
	0x0393C7E0 FMUL S0, S0, S1
	0x0393C7E4 FADD S0, S10, S0
	0x0393C7E8 FMOV S1, -0.5
	0x0393C7EC FADD S10, S0, S1
	0x0393C7F0 LDR X8, [X0 + 0xB8]
	0x0393C7F4 SUB W9, W21, 0x3
	0x0393C7F8 CMP W9, 0x3
	0x0393C7FC STR S10, [X8 + 0x8]
	0x0393C800 B.CC 0x393C828
	0x0393C804 CMP W21, 0x2
	0x0393C808 B.HI 0x393CA18
	0x0393C80C LDR W8, [X0 + 0xE0]
	0x0393C810 CBNZ W8, 0x393C81C
	0x0393C814 BL 0x1C16DFC
	0x0393C818 LDR X0, [X23]
	0x0393C81C FMOV S0, -1
	0x0393C820 FADD S8, S9, S0
	0x0393C824 B 0x393C850
	0x0393C828 LDR W8, [X0 + 0xE0]
	0x0393C82C CBNZ W8, 0x393C838
	0x0393C830 BL 0x1C16DFC
	0x0393C834 LDR X0, [X23]
	0x0393C838 FSUB S0, S9, S8
	0x0393C83C FMOV S1, 0.5
	0x0393C840 FMUL S0, S0, S1
	0x0393C844 FADD S0, S8, S0
	0x0393C848 FMOV S1, -0.5
	0x0393C84C FADD S8, S0, S1
	0x0393C850 LDR X8, [X0 + 0xB8]
	0x0393C854 STR S8, [X8 + 0xC]
	0x0393C858 CBZ X19, 0x393CA30
	0x0393C85C ADRP X10, 0x7DF000
	0x0393C860 LDR X8, [X19]
	0x0393C864 LDR X10, [X10 + 0x7A0]
	0x0393C868 LDRH W9, [X8 + 0x12E]
	0x0393C86C LDR X1, [X10]
	0x0393C870 CBZ X9, 0x393C894
	0x0393C874 LDR X10, [X8 + 0xB0]
	0x0393C878 ADD X10, X10, 0x8
	0x0393C87C LDUR X11, [X10 - 0x8]
	0x0393C880 CMP X11, X1
	0x0393C884 B.EQ 0x393C8A4
	0x0393C888 SUBS X9, X9, 0x1
	0x0393C88C ADD X10, X10, 0x10
	0x0393C890 B.NE 0x393C87C
	0x0393C894 MOV X0, X19
	0x0393C898 MOV W2, W31
	0x0393C89C BL 0x1C5C788
	0x0393C8A0 B 0x393C8B0
	0x0393C8A4 LDRSW X9, [X10]
	0x0393C8A8 ADD X8, X8, X9, 0x4, LSL
	0x0393C8AC ADD X0, X8, 0x138
	0x0393C8B0 LDP X8, X1, [X0]
	0x0393C8B4 MOV X0, X19
	0x0393C8B8 BLR X8
	0x0393C8BC CMP W0, 0x1
	0x0393C8C0 B.LT 0x393C9FC
	0x0393C8C4 ADRP X24, 0x7DF000
	0x0393C8C8 LDR X24, [X24 + 0x7A8]
	0x0393C8CC MOV W21, W0
	0x0393C8D0 MOV W22, W31
	0x0393C8D4 LDR X8, [X19]
	0x0393C8D8 LDR X1, [X24]
	0x0393C8DC LDRH W9, [X8 + 0x12E]
	0x0393C8E0 CBZ X9, 0x393C904
	0x0393C8E4 LDR X10, [X8 + 0xB0]
	0x0393C8E8 ADD X10, X10, 0x8
	0x0393C8EC LDUR X11, [X10 - 0x8]
	0x0393C8F0 CMP X11, X1
	0x0393C8F4 B.EQ 0x393C914
	0x0393C8F8 SUBS X9, X9, 0x1
	0x0393C8FC ADD X10, X10, 0x10
	0x0393C900 B.NE 0x393C8EC
	0x0393C904 MOV X0, X19
	0x0393C908 MOV W2, W31
	0x0393C90C BL 0x1C5C788
	0x0393C910 B 0x393C920
	0x0393C914 LDRSW X9, [X10]
	0x0393C918 ADD X8, X8, X9, 0x4, LSL
	0x0393C91C ADD X0, X8, 0x138
	0x0393C920 LDP X8, X2, [X0]
	0x0393C924 MOV X0, X19
	0x0393C928 MOV W1, W22
	0x0393C92C BLR X8
	0x0393C930 CBZ X20, 0x393CA30
	0x0393C934 LDR W8, [X20 + 0x18]
	0x0393C938 CMP W0, W8
	0x0393C93C B.CS 0x393CA2C
	0x0393C940 ADD X25, X20, W0, 0x3, SXTW
	0x0393C944 LDR V8, [X25 + 0x20]!
	0x0393C948 LDR X0, [X23]
	0x0393C94C LDR W8, [X0 + 0xE0]
	0x0393C950 CBNZ W8, 0x393C95C
	0x0393C954 BL 0x1C16DFC
	0x0393C958 LDR X0, [X23]
	0x0393C95C LDR X8, [X0 + 0xB8]
	0x0393C960 LDR V0, [X8 + 0x8]
	0x0393C964 FSUB S0, S8, S0
	0x0393C968 STR S0, [X25]
	0x0393C96C LDR X8, [X19]
	0x0393C970 LDR X1, [X24]
	0x0393C974 LDRH W9, [X8 + 0x12E]
	0x0393C978 CBZ X9, 0x393C99C
	0x0393C97C LDR X10, [X8 + 0xB0]
	0x0393C980 ADD X10, X10, 0x8
	0x0393C984 LDUR X11, [X10 - 0x8]
	0x0393C988 CMP X11, X1
	0x0393C98C B.EQ 0x393C9AC
	0x0393C990 SUBS X9, X9, 0x1
	0x0393C994 ADD X10, X10, 0x10
	0x0393C998 B.NE 0x393C984
	0x0393C99C MOV X0, X19
	0x0393C9A0 MOV W2, W31
	0x0393C9A4 BL 0x1C5C788
	0x0393C9A8 B 0x393C9B8
	0x0393C9AC LDRSW X9, [X10]
	0x0393C9B0 ADD X8, X8, X9, 0x4, LSL
	0x0393C9B4 ADD X0, X8, 0x138
	0x0393C9B8 LDP X8, X2, [X0]
	0x0393C9BC MOV X0, X19
	0x0393C9C0 MOV W1, W22
	0x0393C9C4 BLR X8
	0x0393C9C8 LDR W8, [X20 + 0x18]
	0x0393C9CC CMP W0, W8
	0x0393C9D0 B.CS 0x393CA2C
	0x0393C9D4 LDR X8, [X23]
	0x0393C9D8 ADD X9, X20, W0, 0x3, SXTW
	0x0393C9DC LDR V0, [X9 + 0x24]
	0x0393C9E0 ADD W22, W22, 0x1
	0x0393C9E4 LDR X8, [X8 + 0xB8]
	0x0393C9E8 CMP W22, W21
	0x0393C9EC LDR V1, [X8 + 0xC]
	0x0393C9F0 FSUB S0, S0, S1
	0x0393C9F4 STR S0, [X9 + 0x24]
	0x0393C9F8 B.NE 0x393C8D4
	0x0393C9FC LDP X20, X19, [X31 + 0x50]
	0x0393CA00 LDP X22, X21, [X31 + 0x40]
	0x0393CA04 LDP X24, X23, [X31 + 0x30]
	0x0393CA08 LDP X30, X25, [X31 + 0x20]
	0x0393CA0C LDP D9, D8, [X31 + 0x10]
	0x0393CA10 LDP D11, D10, [X31], #0x60

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0xAA6000
	017 Move W8, [X21+2352]
	018 Move V8, V2
	019 Move V9, V1
	020 Move V10, V0
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x812000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E0000
	031 Move X0, [X0+1952]
	032 Call 0x1C17CF4
	033 Move X0, 0x812000
	034 Move X0, [X0+2712]
	035 Call 0x1C17CF4
	036 Move X0, 0x813000
	037 Move X0, [X0+1424]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2352], W8
	041 Compare X19, 0
	042 JumpIfEqual {59}
	043 Move X10, 0x7E0000
	044 Move X8, [X19]
	045 Move X10, [X10+1952]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 Compare X20, 0
	060 JumpIfEqual {205}
	061 Move X10, 0x812000
	062 Move X8, [X20]
	063 Move X10, [X10+2704]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X20
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X20
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X24, 0x813000
	091 Move X24, [X24+1424]
	092 Move W21, W0
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X19
	099 Move W1, W31
	100 Call UvUnwrapping.GetIndex, X0, X1
	101 Compare X20, 0
	102 JumpIfEqual {205}
	103 Move X25, 0x812000
	104 Move X8, [X20]
	105 Move X25, [X25+2712]
	106 Move W22, W0
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X25]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X20
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X20
	126 Move W1, W22
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move V2, V10
	129 Move V3, V9
	130 Move V4, V8
	131 Move X0, X31
	132 Call Math.RotateAroundPoint, X0, X1, V0
	133 Move V11, V0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move V12, V1
	136 Move W22, 1
	137 Move V14, V11
	138 Move V13, V12
	139 Move X0, [X24]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X19
	145 Move W1, W22
	146 Call UvUnwrapping.GetIndex, X0, X1
	147 Move X8, [X20]
	148 Move X1, [X25]
	149 Move W23, W0
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X20
	160 Move W2, W31
	161 Call 0x1C5D788
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Add X8, X8, X9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X2, [X0+8]
	167 Move X0, X20
	168 Move W1, W23
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move V2, V10
	171 Move V3, V9
	172 Move V4, V8
	173 Move X0, X31
	174 Call Math.RotateAroundPoint, X0, X1, V0
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 NotImplemented "Instruction FCSEL not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction FCSEL not yet implemented."
	179 NotImplemented "Instruction FCMP not yet implemented."
	180 Add W22, W22, 1
	181 NotImplemented "Instruction FCSEL not yet implemented."
	182 NotImplemented "Instruction FCMP not yet implemented."
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move V13, V12
	186 Move V14, V11
	187 Subtract S0, S14, S11
	188 Subtract S1, S13, S12
	189 Move X20, [X31+112]
	190 Move X19, [X31+120]
	191 Move X22, [X31+96]
	192 Move X21, [X31+104]
	193 Move X24, [X31+80]
	194 Move X23, [X31+88]
	195 Move X30, [X31+64]
	196 Move X25, [X31+72]
	197 Move D9, [X31+48]
	198 Move D8, [X31+56]
	199 Move D11, [X31+32]
	200 Move D10, [X31+40]
	201 Move D13, [X31+16]
	202 Move D12, [X31+24]
	203 Move V14, [X31+128]
	204 Return X0
	205 Call 0x1C17F20

Method: System.Void Unwrap(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face, UnityEngine.Vector3 projection = null)

Disassembly:
	0x03934424 FDIV S0, S0, S14
	0x03934428 FMUL S0, S0, S12
	0x0393442C FMUL S0, S0, S15
	0x03934430 ADD X0, X31, 0x3C
	0x03934434 MOV X1, X31
	0x03934438 STR S0, [X31 + 0x3C]
	0x0393443C BL 0x338FE24
	0x03934440 CBZ X22, 0x3934564
	0x03934444 MOV X1, X0
	0x03934448 MOV X0, X22
	0x0393444C MOV X2, X31
	0x03934450 BL 0x32338A8
	0x03934454 LDR W10, [X20 + 0x18]
	0x03934458 SUB W9, W25, 0x2
	0x0393445C CMP W9, W10
	0x03934460 B.CS 0x3934560
	0x03934464 SUB W8, W25, 0x1
	0x03934468 CMP W8, W10
	0x0393446C B.CS 0x3934560
	0x03934470 SXTW X9, W9
	0x03934474 ADD X10, X20, 0x20
	0x03934478 MADD X9, X9, X26, X10
	0x0393447C LDR V0, [X9]
	0x03934480 LDR V1, [X9 + 0x8]
	0x03934484 SXTW X8, W8
	0x03934488 MADD X8, X8, X26, X10
	0x0393448C STR D0, [X8]
	0x03934490 STR S1, [X8 + 0x8]
	0x03934494 LDR V0, [X31 + 0x3C]
	0x03934498 ADD X0, X31, 0x28
	0x0393449C ADD X1, X31, 0x24
	0x039344A0 BL 0x3EB1BC0
	0x039344A4 LDP S10, S9, [X31 + 0x24]
	0x039344A8 LDRB W8, [X23 + 0xB70]
	0x039344AC CBNZ W8, 0x39344BC
	0x039344B0 MOV X0, X21
	0x039344B4 BL 0x1C16CF4
	0x039344B8 STRB W27, [X23 + 0xB70]
	0x039344BC LDR X8, [X21]
	0x039344C0 LDR V4, [X31 + 0x1]
	0x039344C4 FMUL S0, S10, S13
	0x039344C8 FMUL S5, S9, S13
	0x039344CC LDR X8, [X8 + 0xB8]
	0x039344D0 MOV X0, X31
	0x039344D4 LDP S1, S2, [X8 + 0x3C]
	0x039344D8 LDR V3, [X8 + 0x44]
	0x039344DC FMUL S1, S1, S4
	0x039344E0 FMUL S2, S2, S4
	0x039344E4 FMUL S3, S3, S4
	0x039344E8 FADD S4, S0, S1
	0x039344EC FADD S5, S5, S2
	0x039344F0 FADD S6, S3, S8
	0x039344F4 LDP S1, S2, [X31 + 0x4]
	0x039344F8 LDR V3, [X31 + 0xC]
	0x039344FC MOV V0.16B, V11.16B
	0x03934500 BL 0x3C2A9FC
	0x03934504 LDR W8, [X20 + 0x18]
	0x03934508 CMP W25, W8
	0x0393450C B.CS 0x3934560
	0x03934510 SXTW X8, W25
	0x03934514 ADD W24, W24, 0x1
	0x03934518 MADD X8, X8, X26, X20
	0x0393451C CMP W19, W24
	0x03934520 ADD W25, W25, 0x2
	0x03934524 STP S0, S1, [X8 + 0x20]
	0x03934528 STR S2, [X8 + 0x28]
	0x0393452C B.NE 0x3934420
	0x03934530 MOV X0, X20
	0x03934534 LDP X20, X19, [X31 + 0xC0]
	0x03934538 LDP X22, X21, [X31 + 0xB0]
	0x0393453C LDP X24, X23, [X31 + 0xA0]
	0x03934540 LDP X26, X25, [X31 + 0x90]
	0x03934544 LDP X30, X27, [X31 + 0x80]
	0x03934548 LDP D9, D8, [X31 + 0x70]
	0x0393454C LDP D11, D10, [X31 + 0x60]
	0x03934550 LDP D13, D12, [X31 + 0x50]
	0x03934554 LDP D15, D14, [X31 + 0x40]
	0x03934558 ADD X31, X31, 0xD0
	0x0393455C RET
	0x03934560 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D10
	003 Move [X31+80], D9
	004 Move [X31+88], D8
	005 Move [X31+96], X30
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0xAAE000
	010 Move W8, [X21+2353]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x81B000
	021 Move X0, [X0+1424]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2353], W8
	025 Move X21, 0xAA5000
	026 Move W8, [X21+1923]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x7C0000
	030 Move X0, [X0+1440]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1923], W8
	034 Move X8, 0x7C0000
	035 Move X8, [X8+1440]
	036 Move X9, -48537600
	037 Move V2, [X9+3872]
	038 Move X0, X20
	039 Move X8, [X8]
	040 Move X1, X19
	041 Move X2, X31
	042 Move X8, [X8+184]
	043 Move S0, [X8]
	044 Move S1, [X8+4]
	045 Move V3, [X8+8]
	046 Subtract S4, S10, S0
	047 Subtract S5, S9, S1
	048 Multiply S4, S4, S4
	049 Multiply S5, S5, S5
	050 Add S4, S4, S5
	051 Subtract S5, S8, S3
	052 Multiply S5, S5, S5
	053 Add S4, S5, S4
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 NotImplemented "Instruction FCSEL not yet implemented."
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 Call Projection.PlanarProject, X0, X1, X2
	059 Compare X20, 0
	060 JumpIfEqual {97}
	061 Compare X19, 0
	062 JumpIfEqual {97}
	063 Move X21, 0x81B000
	064 Move X20, [X20+96]
	065 Move X21, [X21+1424]
	066 Move X0, X19
	067 Move X1, X31
	068 Call Face.get_distinctIndexesInternal, X0
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move X8, [X21]
	072 Move X19, X0
	073 Move [X31+32], V1
	074 Move [X31+40], V0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move V0, [X31+32]
	081 Move V1, [X31+48]
	082 Add X2, X31, 0
	083 Move X0, X20
	084 Move X1, X19
	085 Move [X31], V0
	086 Move [X31+8], V1
	087 Call UvUnwrapping.ApplyUVSettings, X0, X1, X2
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X30, [X31+96]
	091 Move X21, [X31+104]
	092 Move D9, [X31+80]
	093 Move D8, [X31+88]
	094 Move V10, [X31+64]
	095 Add X31, X31, 128
	096 Return 
	097 Call 0x1C17F20

Method: System.Void CopyUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face source, UnityEngine.ProBuilder.Face dest)

Disassembly:
	0x03934564 BL 0x1C16F20
	0x03934568 STR X30, [X31 - 0x30]!
	0x0393456C STP X22, X21, [X31 + 0x10]
	0x03934570 STP X20, X19, [X31 + 0x20]
	0x03934574 ADRP X19, 0xAAD000
	0x03934578 ADRP X20, 0x7C1000
	0x0393457C LDRB W8, [X19 + 0x8FA]
	0x03934580 LDR X20, [X20 + 0x9B0]
	0x03934584 TBNZ X8, 0x0, 0x39345CC
	0x03934588 ADRP X0, 0x7C0000
	0x0393458C LDR X0, [X0 + 0xE58]
	0x03934590 BL 0x1C16CF4
	0x03934594 ADRP X0, 0x81A000
	0x03934598 LDR X0, [X0 + 0xBB8]
	0x0393459C BL 0x1C16CF4
	0x039345A0 ADRP X0, 0x81A000
	0x039345A4 LDR X0, [X0 + 0xCE0]
	0x039345A8 BL 0x1C16CF4
	0x039345AC ADRP X0, 0x81A000
	0x039345B0 LDR X0, [X0 + 0xCE8]
	0x039345B4 BL 0x1C16CF4
	0x039345B8 ADRP X0, 0x7C1000
	0x039345BC LDR X0, [X0 + 0x9B0]
	0x039345C0 BL 0x1C16CF4
	0x039345C4 MOVZ W8, 0x1
	0x039345C8 STRB W8, [X19 + 0x8FA]
	0x039345CC LDR X0, [X20]
	0x039345D0 MOVZ W1, 0xC
	0x039345D4 BL 0x1C16D6C
	0x039345D8 CBZ X0, 0x3934854
	0x039345DC LDR W8, [X0 + 0x18]
	0x039345E0 CBZ W8, 0x3934850
	0x039345E4 ADRP X9, 0xFFFFFFFFFD1B9000
	0x039345E8 LDR V0, [X9 + 0xFA0]
	0x039345EC CMP W8, 0x1
	0x039345F0 STR W31, [X0 + 0x28]
	0x039345F4 STR D0, [X0 + 0x20]
	0x039345F8 B.EQ 0x3934850
	0x039345FC ADRP X9, 0xFFFFFFFFFD1B9000
	0x03934600 LDR V0, [X9 + 0x730]
	0x03934604 CMP W8, 0x2
	0x03934608 STR W31, [X0 + 0x34]
	0x0393460C STUR D0, [X0 + 0x2C]
	0x03934610 B.LS 0x3934850
	0x03934614 ADRP X9, 0xFFFFFFFFFD1BA000
	0x03934618 LDR V0, [X9 + 0x238]
	0x0393461C CMP W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {51}
	007 Compare X1, 0
	008 JumpIfEqual {51}
	009 Move X21, [X0+96]
	010 Move X0, X1
	011 Move X1, X31
	012 Move X20, X2
	013 Call Face.get_distinctIndexesInternal, X0
	014 Compare X20, 0
	015 JumpIfEqual {51}
	016 Move X19, X0
	017 Move X0, X20
	018 Move X1, X31
	019 Call Face.get_distinctIndexesInternal, X0
	020 Compare X19, 0
	021 JumpIfEqual {51}
	022 Move W8, [X19+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W9, W31
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move W10, [X0+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X21, 0
	030 JumpIfEqual {51}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X11, W9
	033 Add X10, X19, X11
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Move W12, [X21+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X11, X0, X11
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X12, X21, 32
	041 Move V0, [X12]
	042 Add W9, W9, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X12], D0
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Void ProjectTextureGroup(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 group, UnityEngine.ProBuilder.AutoUnwrapSettings unwrapSettings)

Disassembly:
	0x0393D304 ADD X31, X31, 0x50
	0x0393D308 RET
	0x0393D30C LDRB W8, [X0]
	0x0393D310 AND W9, W8, 0x1
	0x0393D314 UBFM W10, W8, 0x1, 0x1
	0x0393D318 ADD W9, W10, W9
	0x0393D31C UBFM W8, W8, 0x2, 0x2
	0x0393D320 ADD W0, W9, W8
	0x0393D324 RET
	0x0393D328 STP X30, X21, [X31 - 0x20]!
	0x0393D32C STP X20, X19, [X31 + 0x10]
	0x0393D330 ADRP X21, 0xAA4000
	0x0393D334 ADRP X20, 0x811000
	0x0393D338 LDRB W8, [X21 + 0x93F]
	0x0393D33C LDR X20, [X20 + 0x6F0]
	0x0393D340 MOV X19, X0
	0x0393D344 TBNZ X8, 0x0, 0x393D35C
	0x0393D348 ADRP X0, 0x811000
	0x0393D34C LDR X0, [X0 + 0x6F0]
	0x0393D350 BL 0x1C16CF4
	0x0393D354 MOVZ W8, 0x1
	0x0393D358 STRB W8, [X21 + 0x93F]
	0x0393D35C LDR X0, [X20]
	0x0393D360 LDR W8, [X0 + 0xE0]
	0x0393D364 CBNZ W8, 0x393D36C
	0x0393D368 BL 0x1C16DFC
	0x0393D36C ANDS W31, W19, 0x1
	0x0393D370 FMOV S2, 1
	0x0393D374 FMOV S3, W31
	0x0393D378 FCSEL S0, S3, S2, EQ
	0x0393D37C ANDS W31, W19, 0x2
	0x0393D380 FCSEL S1, S3, S2, EQ
	0x0393D384 ANDS W31, W19, 0x4
	0x0393D388 LDP X20, X19, [X31 + 0x10]
	0x0393D38C FCSEL S2, S3, S2, EQ
	0x0393D390 LDP X30, X21, [X31], #0x20
	0x0393D394 RET
	0x0393D398 MOVZ W8, 0x1
	0x0393D39C FABS S0, S0
	0x0393D3A0 FMOV S3, W8
	0x0393D3A4 FCMP S0, S3
	0x0393D3A8 FABS S1, S1
	0x0393D3AC CSET W8, GT
	0x0393D3B0 FCMP S1, S3
	0x0393D3B4 ORR W9, W8, 0x2
	0x0393D3B8 FABS S2, S2
	0x0393D3BC CSEL W8, W9, W8, GT
	0x0393D3C0 ORR W9, W8, 0x4
	0x0393D3C4 FCMP S2, S3
	0x0393D3C8 CSEL W0, W9, W8, GT
	0x0393D3CC RET
	0x0393D3D0 ORR W8, W1, W0, 0x0
	0x0393D3D4 AND X0, X8, 0xFF
	0x0393D3D8 RET
	0x0393D3DC AND W8, W0, W1, 0x0
	0x0393D3E0 AND X0, X8, 0xFF
	0x0393D3E4 RET
	0x0393D3E8 EOR W8, W1, W0, 0x0
	0x0393D3EC AND X0, X8, 0xFF
	0x0393D3F0 RET
	0x0393D3F4 STR D8, [X31 - 0x30]!
	0x0393D3F8 STP X30, X21, [X31 + 0x10]
	0x0393D3FC STP X20, X19, [X31 + 0x20]
	0x0393D400 ADRP X21, 0xAA4000
	0x0393D404 ADRP X20, 0x811000
	0x0393D408 LDRB W8, [X21 + 0x940]
	0x0393D40C LDR X20, [X20 + 0x6F0]
	0x0393D410 MOV V8.16B, V0.16B
	0x0393D414 MOV X19, X0
	0x0393D418 TBNZ X8, 0x0, 0x393D430
	0x0393D41C ADRP X0, 0x811000
	0x0393D420 LDR X0, [X0 + 0x6F0]
	0x0393D424 BL 0x1C16CF4
	0x0393D428 MOVZ W8, 0x1
	0x0393D42C STRB W8, [X21 + 0x940]
	0x0393D430 LDR X0, [X20]
	0x0393D434 LDR W8, [X0 + 0xE0]
	0x0393D438 CBNZ W8, 0x393D440
	0x0393D43C BL 0x1C16DFC
	0x0393D440 ANDS W31, W19, 0x1
	0x0393D444 FMOV S1, 1
	0x0393D448 FMOV S2, W31
	0x0393D44C FCSEL S0, S2, S1, EQ
	0x0393D450 ANDS W31, W19, 0x2
	0x0393D454 FCSEL S3, S2, S1, EQ
	0x0393D458 ANDS W31, W19, 0x4
	0x0393D45C LDP X20, X19, [X31 + 0x20]
	0x0393D460 LDP X30, X21, [X31 + 0x10]
	0x0393D464 FCSEL S2, S2, S1, EQ
	0x0393D468 FMUL S0, S0, S8
	0x0393D46C FMUL S1, S3, S8
	0x0393D470 FMUL S2, S2, S8
	0x0393D474 LDR V8, [X31], #0x30
	0x0393D478 RET
	0x0393D47C STR D10, [X31 - 0x40]!
	0x0393D480 STP D9, D8, [X31 + 0x10]
	0x0393D484 STP X30, X21, [X31 + 0x20]
	0x0393D488 STP X20, X19, [X31 + 0x30]
	0x0393D48C ADRP X21, 0xAA4000
	0x0393D490 ADRP X20, 0x811000
	0x0393D494 LDRB W8, [X21 + 0x941]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0xAA5000
	013 Move X24, 0x812000
	014 Move W8, [X22+2354]
	015 Move X24, [X24+1424]
	016 Move X19, X2
	017 Move W21, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x812000
	024 Move X0, [X0+1672]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BE000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move X0, 0x812000
	030 Move X0, [X0+1424]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2354], W8
	034 Move V1, [X19]
	035 Move V0, [X19+16]
	036 Add X2, X31, 32
	037 Move X0, X20
	038 Move W1, W21
	039 Move X3, X31
	040 Move [X31+32], V1
	041 Move [X31+40], V0
	042 Call Projection.PlanarProject, X0, X1, X2
	043 Move X0, [X24]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X24]
	049 Move X8, [X0+184]
	050 Move X8, [X8+16]
	051 Compare X8, 0
	052 JumpIfEqual {122}
	053 Move W9, [X8+28]
	054 Add W9, W9, 1
	055 Move [X8+24], W31
	056 Move [X8+28], W9
	057 Compare X20, 0
	058 JumpIfEqual {122}
	059 Move X25, [X20+40]
	060 Compare X25, 0
	061 JumpIfEqual {122}
	062 Move W8, [X25+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X27, 0x812000
	065 Move X27, [X27+1672]
	066 Move W26, W31
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X25, W26
	069 Move X22, [X8+32]
	070 Compare X22, 0
	071 JumpIfEqual {122}
	072 Move W8, [X22+84]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X24]
	080 Move X8, [X0+184]
	081 Move X0, X22
	082 Move X1, X31
	083 Move X23, [X8+16]
	084 Call Face.get_distinctIndexesInternal, X0
	085 Compare X23, 0
	086 JumpIfEqual {122}
	087 Move X2, [X27]
	088 Move X1, X0
	089 Move X0, X23
	090 Call List`1<Int32>.AddRange, X0, X1
	091 Move W8, [X25+24]
	092 Add W26, W26, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X24]
	095 Move X20, [X20+96]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X24]
	101 Move X8, [X0+184]
	102 Move V1, [X19]
	103 Move V0, [X19+16]
	104 Add X2, X31, 0
	105 Move X0, X20
	106 Move X1, [X8+16]
	107 Move [X31], V1
	108 Move [X31+8], V0
	109 Call UvUnwrapping.ApplyUVSettings, X0, X1, X2
	110 Move X20, [X31+128]
	111 Move X19, [X31+136]
	112 Move X22, [X31+112]
	113 Move X21, [X31+120]
	114 Move X24, [X31+96]
	115 Move X23, [X31+104]
	116 Move X26, [X31+80]
	117 Move X25, [X31+88]
	118 Move X30, [X31+64]
	119 Move X27, [X31+72]
	120 Add X31, X31, 144
	121 Return 
	122 Call 0x1C17F20
	123 Call 0x1C17F28

Method: System.Void ApplyUVSettings(UnityEngine.Vector2[] uvs, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.ProBuilder.AutoUnwrapSettings uvSettings)

Disassembly:
	0x0393CA14 RET
	0x0393CA18 LDR W8, [X0 + 0xE0]
	0x0393CA1C CBNZ W8, 0x393C850
	0x0393CA20 BL 0x1C16DFC
	0x0393CA24 LDR X0, [X23]
	0x0393CA28 B 0x393C850
	0x0393CA2C BL 0x1C16F28
	0x0393CA30 BL 0x1C16F20
	0x0393CA34 SUB X31, X31, 0x60
	0x0393CA38 STP X30, X25, [X31 + 0x20]
	0x0393CA3C STP X24, X23, [X31 + 0x30]
	0x0393CA40 STP X22, X21, [X31 + 0x40]
	0x0393CA44 STP X20, X19, [X31 + 0x50]
	0x0393CA48 ADRP X19, 0xAA5000
	0x0393CA4C LDRB W8, [X19 + 0x936]
	0x0393CA50 MOV X20, X0
	0x0393CA54 TBNZ X8, 0x0, 0x393CA78
	0x0393CA58 ADRP X0, 0x812000
	0x0393CA5C LDR X0, [X0 + 0x4B8]
	0x0393CA60 BL 0x1C16CF4
	0x0393CA64 ADRP X0, 0x812000
	0x0393CA68 LDR X0, [X0 + 0x590]
	0x0393CA6C BL 0x1C16CF4
	0x0393CA70 MOVZ W8, 0x1
	0x0393CA74 STRB W8, [X19 + 0x936]
	0x0393CA78 CBZ X20, 0x393CB54
	0x0393CA7C ADRP X19, 0x812000
	0x0393CA80 LDR X19, [X19 + 0x4B8]
	0x0393CA84 MOV X0, X20
	0x0393CA88 MOV X1, X31
	0x0393CA8C BL 0x391766C
	0x0393CA90 LDR X1, [X19]
	0x0393CA94 BL 0x21D5914
	0x0393CA98 LDR X1, [X20 + 0x28]
	0x0393CA9C MOV X19, X0
	0x0393CAA0 MOV X0, X20
	0x0393CAA4 MOV X2, X31
	0x0393CAA8 BL 0x391A384
	0x0393CAAC LDR X22, [X20 + 0x28]
	0x0393CAB0 CBZ X22, 0x393CB54
	0x0393CAB4 LDR W8, [X22 + 0x18]
	0x0393CAB8 CMP W8, 0x1
	0x0393CABC B.LT 0x393CB38
	0x0393CAC0 ADRP X24, 0x812000
	0x0393CAC4 LDR X20, [X20 + 0x60]
	0x0393CAC8 LDR X24, [X24 + 0x590]
	0x0393CACC MOV W23, W31
	0x0393CAD0 CMP W23, W8
	0x0393CAD4 B.CS 0x393CB50
	0x0393CAD8 ADD X8, X22, W23, 0x3, SXTW
	0x0393CADC LDR X25, [X8 + 0x20]
	0x0393CAE0 CBZ X25, 0x393CB54
	0x0393CAE4 LDRB W8, [X25 + 0x4C]
	0x0393CAE8 CBNZ W8, 0x393CB28
	0x0393CAEC LDR X0, [X24]
	0x0393CAF0 LDR X21, [X25 + 0x10]
	0x0393CAF4 LDR W8, [X0 + 0xE0]
	0x0393CAF8 CBNZ W8, 0x393CB00
	0x0393CAFC BL 0x1C16DFC
	0x0393CB00 ADD X8, X31, 0x8
	0x0393CB04 MOV X0, X19
	0x0393CB08 MOV X1, X21
	0x0393CB0C MOV X2, X20
	0x0393CB10 MOV X3, X21
	0x0393CB14 BL 0x393B018
	0x0393CB18 LDR V0, [X31 + 0x8]
	0x0393CB1C LDUR V1, [X25 + 0x2C]
	0x0393CB20 FADD V0.2S, V0.2S, V1.2S
	0x0393CB24 STUR D0, [X25 + 0x2C]
	0x0393CB28 LDR W8, [X22 + 0x18]
	0x0393CB2C ADD W23, W23, 0x1
	0x0393CB30 CMP W23, W8
	0x0393CB34 B.LT 0x393CAD0
	0x0393CB38 LDP X20, X19, [X31 + 0x50]
	0x0393CB3C LDP X22, X21, [X31 + 0x40]
	0x0393CB40 LDP X24, X23, [X31 + 0x30]
	0x0393CB44 LDP X30, X25, [X31 + 0x20]
	0x0393CB48 ADD X31, X31, 0x60
	0x0393CB4C RET
	0x0393CB50 BL 0x1C16F28
	0x0393CB54 BL 0x1C16F20
	0x0393CB58 STR X30, [X31 - 0x30]!
	0x0393CB5C STP X22, X21, [X31 + 0x10]
	0x0393CB60 STP X20, X19, [X31 + 0x20]
	0x0393CB64 ADRP X22, 0xAA5000
	0x0393CB68 ADRP X21, 0x812000
	0x0393CB6C ADRP X19, 0x812000
	0x0393CB70 ADRP X20, 0x812000
	0x0393CB74 LDRB W8, [X22 + 0x937]
	0x0393CB78 LDR X21, [X21 + 0x718]
	0x0393CB7C LDR X19, [X19 + 0x710]
	0x0393CB80 LDR X20, [X20 + 0x590]
	0x0393CB84 TBNZ X8, 0x0, 0x393CBCC
	0x0393CB88 ADRP X0, 0x812000
	0x0393CB8C LDR X0, [X0 + 0x710]
	0x0393CB90 BL 0x1C16CF4
	0x0393CB94 ADRP X0, 0x7B8000
	0x0393CB98 LDR X0, [X0 + 0xE20]
	0x0393CB9C BL 0x1C16CF4
	0x0393CBA0 ADRP X0, 0x7B8000
	0x0393CBA4 LDR X0, [X0 + 0xE30]
	0x0393CBA8 BL 0x1C16CF4
	0x0393CBAC ADRP X0, 0x812000
	0x0393CBB0 LDR X0, [X0 + 0x718]
	0x0393CBB4 BL 0x1C16CF4
	0x0393CBB8 ADRP X0, 0x812000
	0x0393CBBC LDR X0, [X0 + 0x590]
	0x0393CBC0 BL 0x1C16CF4
	0x0393CBC4 MOVZ W8, 0x1
	0x0393CBC8 STRB W8, [X22 + 0x937]
	0x0393CBCC LDR X0, [X21]
	0x0393CBD0 ADRP X22, 0x7B8000
	0x0393CBD4 ADRP X21, 0x7B8000
	0x0393CBD8 LDR X22, [X22 + 0xE30]
	0x0393CBDC LDR X21, [X21 + 0xE20]
	0x0393CBE0 BL 0x1C16F10
	0x0393CBE4 LDR X2, [X19]
	0x0393CBE8 MOVZ W1, 0x8
	0x0393CBEC MOV X19, X0
	0x0393CBF0 BL 0x30C8EC4
	0x0393CBF4 LDR X8, [X20]
	0x0393CBF8 LDR X8, [X8 + 0xB8]
	0x0393CBFC STR X19, [X8]
	0x0393CC00 ADRP X19, 0xA9D000
	0x0393CC04 LDRB W8, [X19 + 0x78F]
	0x0393CC08 CBNZ W8, 0x393CC20
	0x0393CC0C ADRP X0, 0x7BF000
	0x0393CC10 LDR X0, [X0 + 0xF08]
	0x0393CC14 BL 0x1C16CF4
	0x0393CC18 MOVZ W8, 0x1
	0x0393CC1C STRB W8, [X19 + 0x78F]
	0x0393CC20 ADRP X8, 0x7BF000
	0x0393CC24 LDR X8, [X8 + 0xF08]
	0x0393CC28 LDR X9, [X20]
	0x0393CC2C LDR X8, [X8]
	0x0393CC30 LDR X8, [X8 + 0xB8]
	0x0393CC34 LDR V0, [X8]
	0x0393CC38 LDR X8, [X9 + 0xB8]
	0x0393CC3C STR D0, [X8 + 0x8]
	0x0393CC40 LDR X0, [X22]
	0x0393CC44 BL 0x1C16F10
	0x0393CC48 LDR X2, [X21]
	0x0393CC4C MOVZ W1, 0x40
	0x0393CC50 MOV X19, X0
	0x0393CC54 BL 0x2FDBF80
	0x0393CC58 LDR X8, [X20]
	0x0393CC5C LDP X22, X21, [X31 + 0x10]
	0x0393CC60 LDR X8, [X8 + 0xB8]
	0x0393CC64 STR X19, [X8 + 0x10]
	0x0393CC68 LDP X20, X19, [X31 + 0x20]
	0x0393CC6C LDR X30, [X31], #0x30
	0x0393CC70 RET
	0x0393CC74 STR X30, [X31 - 0x30]!
	0x0393CC78 STP X22, X21, [X31 + 0x10]
	0x0393CC7C STP X20, X19, [X31 + 0x20]
	0x0393CC80 ADRP X20, 0xAA5000
	0x0393CC84 ADRP X22, 0x7B7000
	0x0393CC88 ADRP X21, 0x7BE000
	0x0393CC8C LDRB W8, [X20 + 0x938]
	0x0393CC90 LDR X22, [X22 + 0xAC8]
	0x0393CC94 LDR X21, [X21 + 0xE78]
	0x0393CC98 MOV X19, X0
	0x0393CC9C TBNZ X8, 0x0, 0x393CCCC
	0x0393CCA0 ADRP X0, 0x7B7000
	0x0393CCA4 LDR X0, [X0 + 0xAC8]
	0x0393CCA8 BL 0x1C16CF4
	0x0393CCAC ADRP X0, 0x7BE000
	0x0393CCB0 LDR X0, [X0 + 0xE78]
	0x0393CCB4 BL 0x1C16CF4
	0x0393CCB8 ADRP X0, 0x7B7000
	0x0393CCBC LDR X0, [X0 + 0x838]
	0x0393CCC0 BL 0x1C16CF4
	0x0393CCC4 MOVZ W8, 0x1
	0x0393CCC8 STRB W8, [X20 + 0x938]
	0x0393CCCC LDR X0, [X22]
	0x0393CCD0 MOVZ W1, 0x5
	0x0393CCD4 BL 0x1C16D6C
	0x0393CCD8 LDR X1, [X21]
	0x0393CCDC MOV X20, X0
	0x0393CCE0 MOV X0, X19
	0x0393CCE4 MOV X2, X31
	0x0393CCE8 MOV X3, X31
	0x0393CCEC BL 0x25F34C4
	0x0393CCF0 CBZ X20, 0x393CD84
	0x0393CCF4 LDR W8, [X20 + 0x18]
	0x0393CCF8 CBZ W8, 0x393CD80
	0x0393CCFC CMP W8, 0x1
	0x0393CD00 STR X0, [X20 + 0x20]
	0x0393CD04 B.EQ 0x393CD80
	0x0393CD08 ADRP X22, 0x7B7000
	0x0393CD0C LDR X22, [X22 + 0x838]
	0x0393CD10 ADD X0, X19, 0x8
	0x0393CD14 MOV X1, X31
	0x0393CD18 LDR X8, [X22]
	0x0393CD1C STR X8, [X20 + 0x28]
	0x0393CD20 BL 0x338FE24
	0x0393CD24 LDR W8, [X20 + 0x18]
	0x0393CD28 CMP W8, 0x2
	0x0393CD2C B.LS 0x393CD80
	0x0393CD30 CMP W8, 0x3
	0x0393CD34 STR X0, [X20 + 0x30]
	0x0393CD38 B.EQ 0x393CD80
	0x0393CD3C LDR X8, [X22]
	0x0393CD40 ADD X0, X19, 0xC
	0x0393CD44 MOV X2, X31
	0x0393CD48 MOV X3, X31
	0x0393CD4C STR X8, [X20 + 0x38]
	0x0393CD50 LDR X1, [X21]
	0x0393CD54 BL 0x25F34C4
	0x0393CD58 LDR W8, [X20 + 0x18]
	0x0393CD5C CMP W8, 0x4
	0x0393CD60 B.LS 0x393CD80
	0x0393CD64 STR X0, [X20 + 0x40]
	0x0393CD68 MOV X0, X20
	0x0393CD6C LDP X20, X19, [X31 + 0x20]
	0x0393CD70 LDP X22, X21, [X31 + 0x10]
	0x0393CD74 MOV X1, X31
	0x0393CD78 LDR X30, [X31], #0x30
	0x0393CD7C B 0x32278CC
	0x0393CD80 BL 0x1C16F28
	0x0393CD84 BL 0x1C16F20
	0x0393CD88 STR X30, [X31 - 0x20]!
	0x0393CD8C STP X20, X19, [X31 + 0x10]
	0x0393CD90 ADRP X19, 0xAA5000
	0x0393CD94 ADRP X20, 0x812000
	0x0393CD98 LDRB W8, [X19 + 0x939]
	0x0393CD9C LDR X20, [X20 + 0xED0]
	0x0393CDA0 TBNZ X8, 0x0, 0x393CDB8
	0x0393CDA4 ADRP X0, 0x812000
	0x0393CDA8 LDR X0, [X0 + 0xED0]
	0x0393CDAC BL 0x1C16CF4
	0x0393CDB0 MOVZ W8, 0x1
	0x0393CDB4 STRB W8, [X19 + 0x939]
	0x0393CDB8 LDR X0, [X20]
	0x0393CDBC BL 0x1C16F10
	0x0393CDC0 MOV X1, X31
	0x0393CDC4 MOV X19, X0
	0x0393CDC8 BL 0x33BDD8C
	0x0393CDCC LDR X8, [X20]
	0x0393CDD0 LDR X8, [X8 + 0xB8]
	0x0393CDD4 STR X19, [X8]
	0x0393CDD8 LDP X20, X19, [X31 + 0x10]
	0x0393CDDC LDR X30, [X31], #0x20
	0x0393CDE0 RET
	0x0393CDE4 MOV X1, X31
	0x0393CDE8 B 0x33BDD8C
	0x0393CDEC STR X30, [X31 - 0x10]!
	0x0393CDF0 CBZ X1, 0x393CE00
	0x0393CDF4 LDRB W0, [X1 + 0x4C]
	0x0393CDF8 LDR X30, [X31], #0x10
	0x0393CDFC RET
	0x0393CE00 BL 0x1C16F20
	0x0393CE04 MOVZ W8, 0x447A0000
	0x0393CE08 FMOV S1, W8
	0x0393CE0C FMUL S0, S0, S1
	0x0393CE10 FCVTZS X8, S0
	0x0393CE14 FCVTZU X9, S0
	0x0393CE18 FCMP S0, 0x0
	0x0393CE1C CSEL X8, X8, X9, MI
	0x0393CE20 MOVZ X9, 0x5
	0x0393CE24 MOVK X9, 0x2
	0x00000000 INVALID
	0x0393CE2C SUB X10, X8, X9
	0x0393CE30 ADD X9, X9, X10, 0x1, LSR
	0x0393CE34 UBFM X9, X9, 0x1E, 0x3F
	0x0393CE38 SUB W9, W9, W9, 0x1F, LSL
	0x0393CE3C ADD W0, W8, W9
	0x0393CE40 RET
	0x0393CE44 MOVZ W8, 0x447A0000
	0x0393CE48 FMOV S2, W8
	0x0393CE4C FMUL S0, S0, S2
	0x0393CE50 MOVZ X9, 0x5
	0x0393CE54 FMUL S1, S1, S2
	0x0393CE58 FCVTZS X8, S0
	0x0393CE5C FCVTZU X10, S0
	0x0393CE60 FCMP S0, 0x0
	0x0393CE64 MOVK X9, 0x2
	0x0393CE68 FCVTZS X11, S1
	0x0393CE6C FCVTZU X12, S1
	0x0393CE70 CSEL X8, X8, X10, MI
	0x0393CE74 FCMP S1, 0x0
	0x00000000 INVALID
	0x0393CE7C CSEL X11, X11, X12, MI
	0x0393CE80 SUB X12, X8, X10
	0x00000000 INVALID
	0x0393CE88 ADD X10, X10, X12, 0x1, LSR
	0x0393CE8C SUB X12, X11, X9
	0x0393CE90 ADD X9, X9, X12, 0x1, LSR
	0x0393CE94 UBFM X10, X10, 0x1E, 0x3F
	0x0393CE98 UBFM X9, X9, 0x1E, 0x3F
	0x0393CE9C SUB W10, W10, W10, 0x1F, LSL
	0x0393CEA0 SUB W9, W9, W9, 0x1F, LSL
	0x0393CEA4 ADD W8, W8, W10
	0x0393CEA8 MOVZ W10, 0x1D
	0x0393CEAC ADD W9, W11, W9
	0x0393CEB0 MADD W8, W8, W10, W9
	0x0393CEB4 MOVZ W9, 0x58B3
	0x0393CEB8 ADD W0, W8, W9
	0x0393CEBC RET
	0x0393CEC0 MOVZ W8, 0x447A0000
	0x0393CEC4 FMOV S4, W8
	0x0393CEC8 FMUL S0, S0, S4
	0x0393CECC MOVZ X9, 0x5
	0x0393CED0 FCVTZS X8, S0
	0x0393CED4 FCVTZU X10, S0
	0x0393CED8 FCMP S0, 0x0
	0x0393CEDC MOVK X9, 0x2
	0x0393CEE0 FMUL S1, S1, S4
	0x0393CEE4 CSEL X8, X8, X10, MI
	0x0393CEE8 FMUL S2, S2, S4
	0x0393CEEC FCVTZS X11, S1
	0x0393CEF0 FCVTZU X12, S1
	0x0393CEF4 FCMP S1, 0x0
	0x00000000 INVALID
	0x0393CEFC FMUL S3, S3, S4
	0x0393CF00 FCVTZS X13, S2
	0x0393CF04 FCVTZU X14, S2
	0x0393CF08 CSEL X11, X11, X12, MI
	0x0393CF0C FCMP S2, 0x0
	0x0393CF10 SUB X12, X8, X10
	0x0393CF14 FCVTZS X15, S3
	0x0393CF18 FCVTZU X16, S3
	0x0393CF1C CSEL X13, X13, X14, MI
	0x0393CF20 FCMP S3, 0x0
	0x0393CF24 ADD X10, X10, X12, 0x1, LSR
	0x00000000 INVALID
	0x0393CF2C CSEL X15, X15, X16, MI
	0x0393CF30 UBFM X10, X10, 0x1E, 0x3F
	0x0393CF34 SUB X12, X11, X14
	0x00000000 INVALID
	0x00000000 INVALID
	0x0393CF40 SUB W10, W10, W10, 0x1F, LSL
	0x0393CF44 ADD X12, X14, X12, 0x1, LSR
	0x0393CF48 ADD W8, W8, W10
	0x0393CF4C SUB X10, X15, X9
	0x0393CF50 SUB X14, X13, X16
	0x0393CF54 ADD X9, X9, X10, 0x1, LSR
	0x0393CF58 UBFM X10, X12, 0x1E, 0x3F
	0x0393CF5C ADD X14, X16, X14, 0x1, LSR
	0x0393CF60 SUB W10, W10, W10, 0x1F, LSL
	0x0393CF64 ADD W10, W11, W10
	0x0393CF68 UBFM X11, X14, 0x1E, 0x3F
	0x0393CF6C SUB W11, W11, W11, 0x1F, LSL
	0x0393CF70 MOVZ W12, 0x1D
	0x0393CF74 UBFM X9, X9, 0x1E, 0x3F
	0x0393CF78 ADD W11, W13, W11
	0x0393CF7C SUB W9, W9, W9, 0x1F, LSL
	0x0393CF80 MADD W8, W8, W12, W10
	0x0393CF84 ADD W9, W15, W9
	0x0393CF88 MADD W8, W8, W12, W11
	0x0393CF8C MADD W8, W8, W12, W9
	0x0393CF90 MOVZ W9, 0x640B
	0x0393CF94 MOVK W9, 0x1230000
	0x0393CF98 ADD W0, W8, W9
	0x0393CF9C RET
	0x0393CFA0 LDRB W8, [X0]
	0x0393CFA4 FMOV S0, 1
	0x0393CFA8 FMOV S1, W31
	0x0393CFAC ANDS W31, W8, 0x1
	0x0393CFB0 FCSEL S0, S1, S0, EQ
	0x0393CFB4 RET
	0x0393CFB8 LDRB W8, [X0]
	0x0393CFBC FMOV S0, 1
	0x0393CFC0 FMOV S1, W31
	0x0393CFC4 ANDS W31, W8, 0x2
	0x0393CFC8 FCSEL S0, S1, S0, EQ
	0x0393CFCC RET
	0x0393CFD0 FABS S0, S0
	0x0393CFD4 FCMP S0, S3
	0x0393CFD8 FABS S1, S1
	0x0393CFDC CSET W8, GT
	0x0393CFE0 ORR W9, W8, 0x2
	0x0393CFE4 FCMP S1, S3
	0x0393CFE8 CSEL W8, W9, W8, GT
	0x0393CFEC STRB W8, [X0]
	0x0393CFF0 RET
	0x0393CFF4 STRB W1, [X0]
	0x0393CFF8 RET
	0x0393CFFC STP X30, X21, [X31 - 0x20]!
	0x0393D000 STP X20, X19, [X31 + 0x10]
	0x0393D004 ADRP X21, 0xAA4000
	0x0393D008 ADRP X20, 0x811000
	0x0393D00C LDRB W8, [X21 + 0x93A]
	0x0393D010 LDR X20, [X20 + 0xED8]
	0x0393D014 MOV X19, X0
	0x0393D018 TBNZ X8, 0x0, 0x393D030
	0x0393D01C ADRP X0, 0x811000
	0x0393D020 LDR X0, [X0 + 0xED8]
	0x0393D024 BL 0x1C16CF4
	0x0393D028 MOVZ W8, 0x1
	0x0393D02C STRB W8, [X21 + 0x93A]
	0x0393D030 LDR X0, [X20]
	0x0393D034 LDR W8, [X0 + 0xE0]
	0x0393D038 CBNZ W8, 0x393D040
	0x0393D03C BL 0x1C16DFC
	0x0393D040 ANDS W31, W19, 0x1
	0x0393D044 FMOV S1, 1
	0x0393D048 FMOV S2, W31
	0x0393D04C FCSEL S0, S2, S1, EQ
	0x0393D050 ANDS W31, W19, 0x2
	0x0393D054 LDP X20, X19, [X31 + 0x10]
	0x0393D058 FCSEL S1, S2, S1, EQ
	0x0393D05C LDP X30, X21, [X31], #0x20
	0x0393D060 RET
	0x0393D064 MOVZ W8, 0x1
	0x0393D068 FABS S0, S0
	0x0393D06C FMOV S2, W8
	0x0393D070 FCMP S0, S2
	0x0393D074 FABS S1, S1
	0x0393D078 CSET W8, GT
	0x0393D07C ORR W9, W8, 0x2
	0x0393D080 FCMP S1, S2
	0x0393D084 CSEL W0, W9, W8, GT
	0x0393D088 RET
	0x0393D08C ORR W8, W1, W0, 0x0
	0x0393D090 AND X0, X8, 0xFF
	0x0393D094 RET
	0x0393D098 AND W8, W0, W1, 0x0
	0x0393D09C AND X0, X8, 0xFF
	0x0393D0A0 RET
	0x0393D0A4 EOR W8, W1, W0, 0x0
	0x0393D0A8 AND X0, X8, 0xFF
	0x0393D0AC RET
	0x0393D0B0 STR D8, [X31 - 0x30]!
	0x0393D0B4 STP X30, X21, [X31 + 0x10]
	0x0393D0B8 STP X20, X19, [X31 + 0x20]
	0x0393D0BC ADRP X21, 0xAA4000
	0x0393D0C0 ADRP X20, 0x811000
	0x0393D0C4 LDRB W8, [X21 + 0x93B]
	0x0393D0C8 LDR X20, [X20 + 0xED8]
	0x0393D0CC MOV V8.16B, V0.16B
	0x0393D0D0 MOV X19, X0
	0x0393D0D4 TBNZ X8, 0x0, 0x393D0EC
	0x0393D0D8 ADRP X0, 0x811000
	0x0393D0DC LDR X0, [X0 + 0xED8]
	0x0393D0E0 BL 0x1C16CF4
	0x0393D0E4 MOVZ W8, 0x1
	0x0393D0E8 STRB W8, [X21 + 0x93B]
	0x0393D0EC LDR X0, [X20]
	0x0393D0F0 LDR W8, [X0 + 0xE0]
	0x0393D0F4 CBNZ W8, 0x393D0FC
	0x0393D0F8 BL 0x1C16DFC
	0x0393D0FC ANDS W31, W19, 0x1
	0x0393D100 FMOV S0, 1
	0x0393D104 FMOV S1, W31
	0x0393D108 FCSEL S2, S1, S0, EQ
	0x0393D10C ANDS W31, W19, 0x2
	0x0393D110 LDP X20, X19, [X31 + 0x20]
	0x0393D114 LDP X30, X21, [X31 + 0x10]
	0x0393D118 FCSEL S1, S1, S0, EQ
	0x0393D11C FMUL S0, S2, S8
	0x0393D120 FMUL S1, S1, S8
	0x0393D124 LDR V8, [X31], #0x30
	0x0393D128 RET
	0x0393D12C STR X30, [X31 - 0x20]!
	0x0393D130 STP X20, X19, [X31 + 0x10]
	0x0393D134 ADRP X19, 0xAA4000
	0x0393D138 ADRP X20, 0x811000
	0x0393D13C LDRB W8, [X19 + 0x93C]
	0x0393D140 LDR X20, [X20 + 0xED8]
	0x0393D144 TBNZ X8, 0x0, 0x393D15C
	0x0393D148 ADRP X0, 0x811000
	0x0393D14C LDR X0, [X0 + 0xED8]
	0x0393D150 BL 0x1C16CF4
	0x0393D154 MOVZ W8, 0x1
	0x0393D158 STRB W8, [X19 + 0x93C]
	0x0393D15C LDR X8, [X20]
	0x0393D160 LDP X20, X19, [X31 + 0x10]
	0x0393D164 MOVZ W9, 0x3
	0x0393D168 LDR X8, [X8 + 0xB8]
	0x0393D16C STRB W9, [X8]
	0x0393D170 LDR X30, [X31], #0x20
	0x0393D174 RET
	0x0393D178 LDRB W8, [X0]
	0x0393D17C FMOV S0, 1
	0x0393D180 FMOV S1, W31
	0x0393D184 ANDS W31, W8, 0x1
	0x0393D188 FCSEL S0, S1, S0, EQ
	0x0393D18C RET
	0x0393D190 LDRB W8, [X0]
	0x0393D194 FMOV S0, 1
	0x0393D198 FMOV S1, W31
	0x0393D19C ANDS W31, W8, 0x2
	0x0393D1A0 FCSEL S0, S1, S0, EQ
	0x0393D1A4 RET
	0x0393D1A8 LDRB W8, [X0]
	0x0393D1AC FMOV S0, 1
	0x0393D1B0 FMOV S1, W31
	0x0393D1B4 ANDS W31, W8, 0x4
	0x0393D1B8 FCSEL S0, S1, S0, EQ
	0x0393D1BC RET
	0x0393D1C0 FABS S0, S0
	0x0393D1C4 FCMP S0, S3
	0x0393D1C8 FABS S1, S1
	0x0393D1CC CSET W8, GT
	0x0393D1D0 FCMP S1, S3
	0x0393D1D4 ORR W9, W8, 0x2
	0x0393D1D8 FABS S2, S2
	0x0393D1DC CSEL W8, W9, W8, GT
	0x0393D1E0 ORR W9, W8, 0x4
	0x0393D1E4 FCMP S2, S3
	0x0393D1E8 CSEL W8, W9, W8, GT
	0x0393D1EC STRB W8, [X0]
	0x0393D1F0 RET
	0x0393D1F4 STRB W1, [X0]
	0x0393D1F8 RET
	0x0393D1FC SUB X31, X31, 0x50
	0x0393D200 STP D9, D8, [X31 + 0x10]
	0x0393D204 STP X30, X23, [X31 + 0x20]
	0x0393D208 STP X22, X21, [X31 + 0x30]
	0x0393D20C STP X20, X19, [X31 + 0x40]
	0x0393D210 ADRP X21, 0xAA4000
	0x0393D214 ADRP X20, 0x811000
	0x0393D218 LDRB W8, [X21 + 0x93E]
	0x0393D21C LDR X20, [X20 + 0x6F0]
	0x0393D220 MOV X19, X0
	0x0393D224 TBNZ X8, 0x0, 0x393D254
	0x0393D228 ADRP X0, 0x7B6000
	0x0393D22C LDR X0, [X0 + 0xA90]
	0x0393D230 BL 0x1C16CF4
	0x0393D234 ADRP X0, 0x811000
	0x0393D238 LDR X0, [X0 + 0x6F0]
	0x0393D23C BL 0x1C16CF4
	0x0393D240 ADRP X0, 0x811000
	0x0393D244 LDR X0, [X0 + 0xEE0]
	0x0393D248 BL 0x1C16CF4
	0x0393D24C MOVZ W8, 0x1
	0x0393D250 STRB W8, [X21 + 0x93E]
	0x0393D254 LDR X0, [X20]
	0x0393D258 ADRP X23, 0x7B6000
	0x0393D25C ADRP X22, 0x811000
	0x0393D260 LDR W8, [X0 + 0xE0]
	0x0393D264 LDR X23, [X23 + 0xA90]
	0x0393D268 LDR X22, [X22 + 0xEE0]
	0x0393D26C CBNZ W8, 0x393D274
	0x0393D270 BL 0x1C16DFC
	0x0393D274 LDRB W8, [X19]
	0x0393D278 LDR X0, [X23]
	0x0393D27C FMOV S8, 1
	0x0393D280 FMOV S9, W31
	0x0393D284 ANDS W31, W8, 0x1
	0x0393D288 FCSEL S0, S9, S8, EQ
	0x0393D28C ADD X1, X31, 0xC
	0x0393D290 STR S0, [X31 + 0xC]
	0x0393D294 BL 0x1C16E04
	0x0393D298 LDRB W8, [X19]
	0x0393D29C MOV X20, X0
	0x0393D2A0 LDR X0, [X23]
	0x0393D2A4 ADD X1, X31, 0x8
	0x0393D2A8 ANDS W31, W8, 0x2
	0x0393D2AC FCSEL S0, S9, S8, EQ
	0x0393D2B0 STR S0, [X31 + 0x8]
	0x0393D2B4 BL 0x1C16E04
	0x0393D2B8 LDRB W8, [X19]
	0x0393D2BC MOV X21, X0
	0x0393D2C0 LDR X0, [X23]
	0x0393D2C4 ADD X1, X31, 0x4
	0x0393D2C8 ANDS W31, W8, 0x4
	0x0393D2CC FCSEL S0, S9, S8, EQ
	0x0393D2D0 STR S0, [X31 + 0x4]
	0x0393D2D4 BL 0x1C16E04
	0x0393D2D8 LDR X8, [X22]
	0x0393D2DC MOV X3, X0
	0x0393D2E0 MOV X1, X20
	0x0393D2E4 MOV X2, X21
	0x0393D2E8 MOV X0, X8
	0x0393D2EC MOV X4, X31
	0x0393D2F0 BL 0x3227C18
	0x0393D2F4 LDP X20, X19, [X31 + 0x40]
	0x0393D2F8 LDP X22, X21, [X31 + 0x30]
	0x0393D2FC LDP X30, X23, [X31 + 0x20]
	0x0393D300 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X22, 0xAA6000
	014 Move W8, [X22+2355]
	015 Move X19, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x812000
	023 Move X0, [X0+3920]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E0000
	026 Move X0, [X0+1952]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E0000
	029 Move X0, [X0+1960]
	030 Call 0x1C17CF4
	031 Move X0, 0x813000
	032 Move X0, [X0+1424]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2355], W8
	036 Compare X20, 0
	037 JumpIfEqual {575}
	038 Move X25, 0x7E0000
	039 Move X8, [X20]
	040 Move X25, [X25+1952]
	041 Move X22, 0x812000
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X25]
	044 Move X22, [X22+3920]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X20
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X22]
	064 Move W22, W0
	065 Move X0, X8
	066 Call 0x1C17F10
	067 Move X1, X21
	068 Move X2, X20
	069 Move X3, X31
	070 Move X24, X0
	071 Call Bounds2D..ctor, X0, X1, X2
	072 Move W8, [X19+4]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare W8, 0
	075 JumpIfNotEqual {122}
	076 Compare X24, 0
	077 JumpIfEqual {575}
	078 Move X8, 0x813000
	079 Move X8, [X8+1424]
	080 Move S0, [X24+24]
	081 Move S1, [X24+28]
	082 Move X0, [X8]
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 NotImplemented "Instruction FCSEL not yet implemented."
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X20
	091 Move V0, V8
	092 Move V1, V8
	093 Move X2, X24
	094 Call UvUnwrapping.ScaleUVs, X0, X1, X2, X3
	095 Move V0, [X24+16]
	096 NotImplemented "Instruction FDIV not yet implemented."
	097 Compare X24, 0
	098 JumpIfEqual {575}
	099 Move X8, 0x813000
	100 Move X8, [X8+1424]
	101 Move S9, [X24+24]
	102 Move S8, [X24+28]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X20
	110 Move V0, V9
	111 Move V1, V8
	112 Move X2, X24
	113 Call UvUnwrapping.ScaleUVs, X0, X1, X2, X3
	114 Move V0, [X24+16]
	115 Move S1, [X24+24]
	116 Move S8, [X24+28]
	117 NotImplemented "Instruction FDIV not yet implemented."
	118 Move V1, [X24+20]
	119 NotImplemented "Instruction FDIV not yet implemented."
	120 Move [X24+16], S0
	121 Move [X24+24], S1
	122 Move V0, [X19+8]
	123 Move V1, 0
	124 Move X26, 0x7E0000
	125 Move X26, [X26+1960]
	126 NotImplemented "Instruction FCMEQ not yet implemented."
	127 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	128 And V1, V1, V2
	129 Move W8, S1
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {136}
	134 Move V1, [X19+24]
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Compare X24, 0
	137 JumpIfEqual {575}
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move V1, [X24+16]
	140 Move W23, W31
	141 NotImplemented "Instruction INVALID not yet implemented."
	142 Move S8, V0.S[1]
	143 Subtract V9, V1, V0
	144 Move [X31], V0
	145 Move X8, [X20]
	146 Move X1, [X26]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X2, [X0+8]
	164 Move X0, X20
	165 Move W1, W23
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X21, 0
	168 JumpIfEqual {575}
	169 Move W8, [X21+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X21, W0
	172 Move V0, [X8+32]
	173 Subtract V0, V0, V9
	174 Move [X8+32], D0
	175 Move X8, [X20]
	176 Move X1, [X26]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X20
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X2, [X0+8]
	194 Move X0, X20
	195 Move W1, W23
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X8, [X20]
	198 Move X1, [X26]
	199 Move W24, W0
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X20
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X20
	218 Move W1, W23
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move W8, [X21+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X8, W0
	223 Add X8, X21, X8
	224 Move S0, [X8+32]
	225 Move S1, [X8+36]
	226 Move S4, [X19+8]
	227 Move S5, [X19+12]
	228 Move V2, [X31]
	229 Move V3, V8
	230 Move X0, X31
	231 Call Math.ScaleAroundPoint, X0, X1, X2
	232 Move W8, [X21+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, W24
	235 Add X8, X21, X8
	236 Move [X8+32], S0
	237 Move [X8+40], S1
	238 Move X8, [X20]
	239 Move X1, [X26]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move X0, X20
	250 Move W2, W31
	251 Call 0x1C5D788
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Add X8, X8, X9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X2, [X0+8]
	257 Move X0, X20
	258 Move W1, W23
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Move X8, [X20]
	261 Move X1, [X26]
	262 Move W24, W0
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move X0, X20
	273 Move W2, W31
	274 Call 0x1C5D788
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Add X8, X8, X9
	277 Add X0, X8, 312
	278 Move X8, [X0]
	279 Move X2, [X0+8]
	280 Move X0, X20
	281 Move W1, W23
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move W8, [X21+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X8, W0
	286 Add X8, X21, X8
	287 Move S0, [X8+32]
	288 Move S1, [X8+36]
	289 Move V4, [X19+24]
	290 Move V2, [X31]
	291 Move V3, V8
	292 Move X0, X31
	293 Call Math.RotateAroundPoint, X0, X1, V0
	294 Move W8, [X21+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X8, W24
	297 Add W23, W23, 1
	298 Add X8, X21, X8
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move [X8+32], S0
	301 Move [X8+40], S1
	302 Move W8, [X19]
	303 Compare W8, 0
	304 JumpIfNotEqual {318}
	305 Move W23, [X19+28]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X8, 0x813000
	308 Move X8, [X8+1424]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X21
	315 Move X1, X20
	316 Move W2, W23
	317 Call UvUnwrapping.ApplyUVAnchor, X0, X1, X2
	318 Move W8, [X19+1]
	319 Compare W8, 0
	320 JumpIfNotEqual {324}
	321 Move W8, [X19+2]
	322 Compare W8, 0
	323 JumpIfEqual {570}
	324 NotImplemented "Instruction CMP not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W23, W31
	327 NotImplemented "Instruction CSINC not yet implemented."
	328 Move X8, [X20]
	329 Move X1, [X26]
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move X0, X20
	340 Move W2, W31
	341 Call 0x1C5D788
	342 NotImplemented "Instruction LDRSW not yet implemented."
	343 Add X8, X8, X9
	344 Add X0, X8, 312
	345 Move X8, [X0]
	346 Move X2, [X0+8]
	347 Move X0, X20
	348 Move W1, W23
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Compare X21, 0
	351 JumpIfEqual {575}
	352 Move W8, [X21+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, [X20]
	355 Add X9, X21, W0
	356 Move V8, [X9+32]
	357 Move X1, [X26]
	358 NotImplemented "Instruction LDRH not yet implemented."
	359 Compare X9, 0
	360 JumpIfEqual {367}
	361 Move X10, [X8+176]
	362 Add X10, X10, 8
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Subtract X9, X9, 1
	366 Add X10, X10, 16
	367 Move X0, X20
	368 Move W2, W31
	369 Call 0x1C5D788
	370 NotImplemented "Instruction LDRSW not yet implemented."
	371 Add X8, X8, X9
	372 Add X0, X8, 312
	373 Move X8, [X0]
	374 Move X2, [X0+8]
	375 Move X0, X20
	376 Move W1, W23
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move W8, [X21+24]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X8, [X20]
	381 Add X9, X21, W0
	382 Move W10, [X19+1]
	383 Move W11, [X19+2]
	384 Move V1, [X9+36]
	385 Move W24, [X19+3]
	386 NotImplemented "Instruction LDRH not yet implemented."
	387 Move X1, [X26]
	388 NotImplemented "Instruction FNEG not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction FCSEL not yet implemented."
	391 NotImplemented "Instruction FNEG not yet implemented."
	392 NotImplemented "Instruction CMP not yet implemented."
	393 NotImplemented "Instruction FCSEL not yet implemented."
	394 Compare X9, 0
	395 JumpIfEqual {402}
	396 Move X10, [X8+176]
	397 Add X10, X10, 8
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Subtract X9, X9, 1
	401 Add X10, X10, 16
	402 Move X0, X20
	403 Move W2, W31
	404 Call 0x1C5D788
	405 NotImplemented "Instruction LDRSW not yet implemented."
	406 Add X8, X8, X9
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X2, [X0+8]
	410 Move X0, X20
	411 Move W1, W23
	412 NotImplemented "Instruction BLR not yet implemented."
	413 Move W8, [X21+24]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Add X8, X21, W0
	416 Add X8, X8, 32
	417 Compare W24, 0
	418 JumpIfEqual {434}
	419 Move [X8], S8
	420 Move X8, [X20]
	421 Move X1, [X26]
	422 NotImplemented "Instruction LDRH not yet implemented."
	423 Compare X9, 0
	424 JumpIfEqual {431}
	425 Move X10, [X8+176]
	426 Add X10, X10, 8
	427 NotImplemented "Instruction LDUR not yet implemented."
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Subtract X9, X9, 1
	430 Add X10, X10, 16
	431 Move X0, X20
	432 Move W2, W31
	433 Call 0x1C5D788
	434 Move [X8], S9
	435 Move X8, [X20]
	436 Move X1, [X26]
	437 NotImplemented "Instruction LDRH not yet implemented."
	438 Compare X9, 0
	439 JumpIfEqual {446}
	440 Move X10, [X8+176]
	441 Add X10, X10, 8
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Subtract X9, X9, 1
	445 Add X10, X10, 16
	446 Move X0, X20
	447 Move W2, W31
	448 Call 0x1C5D788
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Add X8, X8, X9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X2, [X0+8]
	454 Move X0, X20
	455 Move W1, W23
	456 NotImplemented "Instruction BLR not yet implemented."
	457 Move W8, [X21+24]
	458 Move V8, V9
	459 NotImplemented "Instruction LDRSW not yet implemented."
	460 Add X8, X8, X9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X2, [X0+8]
	464 Move X0, X20
	465 Move W1, W23
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move W8, [X21+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Add W23, W23, 1
	470 Add X8, X21, W0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move [X8+36], S8
	473 Move W22, W31
	474 Move X8, [X20]
	475 Move X1, [X25]
	476 NotImplemented "Instruction LDRH not yet implemented."
	477 Compare X9, 0
	478 JumpIfEqual {485}
	479 Move X10, [X8+176]
	480 Add X10, X10, 8
	481 NotImplemented "Instruction LDUR not yet implemented."
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Subtract X9, X9, 1
	484 Add X10, X10, 16
	485 Move X0, X20
	486 Move W2, W31
	487 Call 0x1C5D788
	488 NotImplemented "Instruction LDRSW not yet implemented."
	489 Add X8, X8, X9
	490 Add X0, X8, 312
	491 Move X8, [X0]
	492 Move X1, [X0+8]
	493 Move X0, X20
	494 NotImplemented "Instruction BLR not yet implemented."
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X8, [X20]
	497 Move X1, [X26]
	498 NotImplemented "Instruction LDRH not yet implemented."
	499 Compare X9, 0
	500 JumpIfEqual {507}
	501 Move X10, [X8+176]
	502 Add X10, X10, 8
	503 NotImplemented "Instruction LDUR not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Subtract X9, X9, 1
	506 Add X10, X10, 16
	507 Move X0, X20
	508 Move W2, W31
	509 Call 0x1C5D788
	510 NotImplemented "Instruction LDRSW not yet implemented."
	511 Add X8, X8, X9
	512 Add X0, X8, 312
	513 Move X8, [X0]
	514 Move X2, [X0+8]
	515 Move X0, X20
	516 Move W1, W22
	517 NotImplemented "Instruction BLR not yet implemented."
	518 Compare X21, 0
	519 JumpIfEqual {575}
	520 Move W8, [X21+24]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Add X8, X21, W0
	523 Move V0, [X8+32]
	524 Move V1, [X19+16]
	525 Subtract S0, S0, S1
	526 Move [X8+32], S0
	527 Move X8, [X20]
	528 Move X1, [X26]
	529 NotImplemented "Instruction LDRH not yet implemented."
	530 Compare X9, 0
	531 JumpIfEqual {538}
	532 Move X10, [X8+176]
	533 Add X10, X10, 8
	534 NotImplemented "Instruction LDUR not yet implemented."
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Subtract X9, X9, 1
	537 Add X10, X10, 16
	538 Move X0, X20
	539 Move W2, W31
	540 Call 0x1C5D788
	541 NotImplemented "Instruction LDRSW not yet implemented."
	542 Add X8, X8, X9
	543 Add X0, X8, 312
	544 Move X8, [X0]
	545 Move X2, [X0+8]
	546 Move X0, X20
	547 Move W1, W22
	548 NotImplemented "Instruction BLR not yet implemented."
	549 Move W8, [X21+24]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Add X8, X21, W0
	552 Move V0, [X19+20]
	553 Move V1, [X8+36]
	554 Add W22, W22, 1
	555 Subtract S0, S1, S0
	556 Move [X8+36], S0
	557 Move X20, [X31+96]
	558 Move X19, [X31+104]
	559 Move X22, [X31+80]
	560 Move X21, [X31+88]
	561 Move X24, [X31+64]
	562 Move X23, [X31+72]
	563 Move X26, [X31+48]
	564 Move X25, [X31+56]
	565 Move X30, [X31+32]
	566 Move D9, [X31+16]
	567 Move D8, [X31+24]
	568 Add X31, X31, 112
	569 Return 
	570 Move W8, [X19+3]
	571 Compare W8, 0
	572 JumpIfEqual {473}
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Call 0x1C17F28
	575 Call 0x1C17F20

Method: System.Void ScaleUVs(UnityEngine.Vector2[] uvs, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.Vector2 scale, UnityEngine.ProBuilder.Bounds2D bounds)

Disassembly:
	0x0393D498 LDR X20, [X20 + 0x6F0]
	0x0393D49C MOV V8.16B, V2.16B
	0x0393D4A0 MOV V9.16B, V1.16B
	0x0393D4A4 MOV V10.16B, V0.16B
	0x0393D4A8 MOV X19, X0
	0x0393D4AC TBNZ X8, 0x0, 0x393D4C4
	0x0393D4B0 ADRP X0, 0x811000
	0x0393D4B4 LDR X0, [X0 + 0x6F0]
	0x0393D4B8 BL 0x1C16CF4
	0x0393D4BC MOVZ W8, 0x1
	0x0393D4C0 STRB W8, [X21 + 0x941]
	0x0393D4C4 LDR X0, [X20]
	0x0393D4C8 LDR W8, [X0 + 0xE0]
	0x0393D4CC CBNZ W8, 0x393D4D4
	0x0393D4D0 BL 0x1C16DFC
	0x0393D4D4 ANDS W31, W19, 0x1
	0x0393D4D8 FMOV S1, 1
	0x0393D4DC FMOV S2, W31
	0x0393D4E0 FCSEL S0, S2, S1, EQ
	0x0393D4E4 ANDS W31, W19, 0x2
	0x0393D4E8 FCSEL S3, S2, S1, EQ
	0x0393D4EC ANDS W31, W19, 0x4
	0x0393D4F0 FCSEL S2, S2, S1, EQ
	0x0393D4F4 FMUL S1, S9, S3
	0x0393D4F8 FMUL S2, S8, S2
	0x0393D4FC LDP X20, X19, [X31 + 0x30]
	0x0393D500 LDP X30, X21, [X31 + 0x20]
	0x0393D504 LDP D9, D8, [X31 + 0x10]
	0x0393D508 FMUL S0, S10, S0
	0x0393D50C LDR V10, [X31], #0x40
	0x0393D510 RET
	0x0393D514 STP D11, D10, [X31 - 0x40]!
	0x0393D518 STP D9, D8, [X31 + 0x10]
	0x0393D51C STP X30, X21, [X31 + 0x20]
	0x0393D520 STP X20, X19, [X31 + 0x30]
	0x0393D524 ADRP X21, 0xAA4000
	0x0393D528 ADRP X20, 0x811000
	0x0393D52C LDRB W8, [X21 + 0x942]
	0x0393D530 LDR X20, [X20 + 0x6F0]
	0x0393D534 MOV X19, X0
	0x0393D538 MOV V8.16B, V3.16B
	0x0393D53C MOV V9.16B, V2.16B
	0x0393D540 MOV V10.16B, V1.16B
	0x0393D544 MOV V11.16B, V0.16B
	0x0393D548 TBNZ X8, 0x0, 0x393D560
	0x0393D54C ADRP X0, 0x811000
	0x0393D550 LDR X0, [X0 + 0x6F0]
	0x0393D554 BL 0x1C16CF4
	0x0393D558 MOVZ W8, 0x1
	0x0393D55C STRB W8, [X21 + 0x942]
	0x0393D560 LDR X0, [X20]
	0x0393D564 LDR W8, [X0 + 0xE0]
	0x0393D568 CBNZ W8, 0x393D578
	0x0393D56C BL 0x1C16DFC
	0x0393D570 LDR X0, [X20]
	0x0393D574 LDR W8, [X0 + 0xE0]
	0x0393D578 AND W10, W19, 0xFF
	0x0393D57C AND W9, W19, 0x1
	0x0393D580 UBFM W11, W10, 0x1, 0x1
	0x0393D584 ADD W9, W11, W9
	0x0393D588 UBFM W10, W10, 0x2, 0x2
	0x0393D58C ADD W20, W9, W10
	0x0393D590 CBNZ W8, 0x393D598
	0x0393D594 BL 0x1C16DFC
	0x0393D598 AND X0, X19, 0xFF
	0x0393D59C BL 0x393D328
	0x0393D5A0 MOV V4.16B, V0.16B
	0x0393D5A4 MOV V5.16B, V1.16B
	0x0393D5A8 CMP W20, 0x2
	0x0393D5AC MOV V6.16B, V2.16B
	0x0393D5B0 B.HI 0x393D634
	0x0393D5B4 MOV V0.16B, V11.16B
	0x0393D5B8 MOV V1.16B, V10.16B
	0x0393D5BC MOV V2.16B, V9.16B
	0x0393D5C0 MOV V3.16B, V8.16B
	0x0393D5C4 MOV X0, X31
	0x0393D5C8 BL 0x3C2A9FC
	0x0393D5CC MOV X0, X31
	0x0393D5D0 BL 0x390B3C8
	0x0393D5D4 CMP W20, 0x2
	0x0393D5D8 B.NE 0x393D608
	0x0393D5DC FCMP S0, S2
	0x0393D5E0 FMOV S3, W31
	0x0393D5E4 FMOV S6, 1
	0x0393D5E8 FCCMP S0, S1, 0x0, LE
	0x0393D5EC FCSEL S4, S6, S3, GT
	0x0393D5F0 FCMP S1, S2
	0x0393D5F4 FCCMP S1, S0, 0x0, LE
	0x0393D5F8 FCSEL S5, S6, S3, GT
	0x0393D5FC FCMP S2, S1
	0x0393D600 FCCMP S2, S0, 0x0, LE
	0x0393D604 B 0x393D630
	0x0393D608 FCMP S0, S2
	0x0393D60C FMOV S3, W31
	0x0393D610 FMOV S6, 1
	0x0393D614 FCCMP S0, S1, 0x4, GT
	0x0393D618 FCSEL S4, S6, S3, GT
	0x0393D61C FCMP S1, S0
	0x0393D620 FCCMP S1, S2, 0x4, GT
	0x0393D624 FCSEL S5, S6, S3, GT
	0x0393D628 FCMP S2, S1
	0x0393D62C FCCMP S2, S0, 0x4, GT
	0x0393D630 FCSEL S6, S6, S3, GT
	0x0393D634 LDP X20, X19, [X31 + 0x30]
	0x0393D638 LDP X30, X21, [X31 + 0x20]
	0x0393D63C LDP D9, D8, [X31 + 0x10]
	0x0393D640 MOV V0.16B, V4.16B
	0x0393D644 MOV V1.16B, V5.16B
	0x0393D648 MOV V2.16B, V6.16B
	0x0393D64C LDP D11, D10, [X31], #0x40
	0x0393D650 RET
	0x0393D654 EOR W8, W1, W0, 0x0
	0x0393D658 ANDS X31, X8, 0xFF
	0x0393D65C CSET W0, EQ
	0x0393D660 RET
	0x0393D664 STR X30, [X31 - 0x30]!
	0x0393D668 STP X22, X21, [X31 + 0x10]
	0x0393D66C STP X20, X19, [X31 + 0x20]
	0x0393D670 ADRP X21, 0xAA4000
	0x0393D674 ADRP X22, 0x811000
	0x0393D678 LDRB W8, [X21 + 0x943]
	0x0393D67C LDR X22, [X22 + 0x6F0]
	0x0393D680 MOV X19, X1
	0x0393D684 MOV X20, X0
	0x0393D688 TBNZ X8, 0x0, 0x393D6A0
	0x0393D68C ADRP X0, 0x811000
	0x0393D690 LDR X0, [X0 + 0x6F0]
	0x0393D694 BL 0x1C16CF4
	0x0393D698 MOVZ W8, 0x1
	0x0393D69C STRB W8, [X21 + 0x943]
	0x0393D6A0 LDR X0, [X22]
	0x0393D6A4 LDR W8, [X0 + 0xE0]
	0x0393D6A8 CBNZ W8, 0x393D6B0
	0x0393D6AC BL 0x1C16DFC
	0x0393D6B0 EOR W8, W19, W20, 0x0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X30
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X21, 0xAA5000
	012 Move W8, [X21+2356]
	013 Move X22, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Move [X31+16], D0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {31}
	021 Move X0, 0x7DF000
	022 Move X0, [X0+1952]
	023 Move [X31], V1
	024 Call 0x1C17CF4
	025 Move X0, 0x7DF000
	026 Move X0, [X0+1960]
	027 Call 0x1C17CF4
	028 Move V1, [X31]
	029 Move W8, 1
	030 Move [X21+2356], W8
	031 Compare X22, 0
	032 JumpIfEqual {142}
	033 Compare X19, 0
	034 JumpIfEqual {142}
	035 Move V0, [X22+16]
	036 Move X22, 0x7DF000
	037 Move X23, 0x7DF000
	038 Move X22, [X22+1952]
	039 Move X23, [X23+1960]
	040 Move V2, [X31+1]
	041 Move W21, W31
	042 Move V3, V2
	043 Move V3.S[1], V1.S[0]
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 Move V2.S[1], V1.S[0]
	046 Subtract V9, V0, V8
	047 Move [X31+1], V2
	048 Move X8, [X19]
	049 Move X1, [X22]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19]
	071 Move X1, [X23]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X19
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X19
	090 Move W1, W21
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X20, 0
	093 JumpIfEqual {142}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X19]
	097 Add X9, X20, W0
	098 Move V10, [X9+32]
	099 Move X1, [X23]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X2, [X0+8]
	117 Move X0, X19
	118 Move W1, W21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W8, [X20+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move V1, [X31+1]
	123 Subtract V0, V10, V9
	124 Subtract V0, V0, V8
	125 Add X8, X20, W0
	126 NotImplemented "Instruction INVALID not yet implemented."
	127 Add V0, V8, V0
	128 Add W21, W21, 1
	129 Move [X8+32], D0
	130 Move X20, [X31+96]
	131 Move X19, [X31+104]
	132 Move X22, [X31+80]
	133 Move X21, [X31+88]
	134 Move X30, [X31+64]
	135 Move X23, [X31+72]
	136 Move D9, [X31+48]
	137 Move D8, [X31+56]
	138 Move V10, [X31+32]
	139 Add X31, X31, 112
	140 Return 
	141 Call 0x1C17F28
	142 Call 0x1C17F20

Method: System.Void ApplyUVAnchor(UnityEngine.Vector2[] uvs, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.ProBuilder.AutoUnwrapSettings/Anchor anchor)

Disassembly:
	0x0393D6B4 LDP X20, X19, [X31 + 0x20]
	0x0393D6B8 LDP X22, X21, [X31 + 0x10]
	0x0393D6BC ANDS X31, X8, 0xFF
	0x0393D6C0 CSET W0, NE
	0x0393D6C4 LDR X30, [X31], #0x30
	0x0393D6C8 RET
	0x0393D6CC STP X30, X19, [X31 - 0x10]!
	0x0393D6D0 CMP W1, 0x3
	0x0393D6D4 B.CS 0x393D6F0
	0x0393D6D8 LDRB W8, [X0]
	0x0393D6DC LSRV W8, W8, W1
	0x0393D6E0 AND W8, W8, 0x1
	0x0393D6E4 SCVTF S0, W8
	0x0393D6E8 LDP X30, X19, [X31], #0x10
	0x0393D6EC RET
	0x0393D6F0 ADRP X0, 0x7C0000
	0x0393D6F4 LDR X0, [X0 + 0xF78]
	0x0393D6F8 BL 0x1C16D08
	0x0393D6FC BL 0x1C16F10
	0x0393D700 MOV X1, X31
	0x0393D704 MOV X19, X0
	0x0393D708 BL 0x3379B10
	0x0393D70C ADRP X0, 0x811000
	0x0393D710 LDR X0, [X0 + 0xEE8]
	0x0393D714 BL 0x1C16D08
	0x0393D718 MOV X1, X0
	0x0393D71C MOV X0, X19
	0x0393D720 BL 0x1C16DEC
	0x0393D724 STP X30, X19, [X31 - 0x10]!
	0x0393D728 CMP W1, 0x3
	0x0393D72C B.CS 0x393D75C
	0x0393D730 LDRB W8, [X0]
	0x0393D734 MOVZ W9, 0x1
	0x0393D738 FCMP S0, 0x0
	0x0393D73C LSLV W9, W9, W1
	0x0393D740 CSET W10, GT
	0x0393D744 BIC W8, W8, W9, 0x0
	0x0393D748 LSLV W9, W10, W1
	0x0393D74C ORR W8, W8, W9, 0x0
	0x0393D750 STRB W8, [X0]
	0x0393D754 LDP X30, X19, [X31], #0x10
	0x0393D758 RET
	0x0393D75C ADRP X0, 0x7C0000
	0x0393D760 LDR X0, [X0 + 0xF78]
	0x0393D764 BL 0x1C16D08
	0x0393D768 BL 0x1C16F10
	0x0393D76C MOV X1, X31
	0x0393D770 MOV X19, X0
	0x0393D774 BL 0x3379B10
	0x0393D778 ADRP X0, 0x811000
	0x0393D77C LDR X0, [X0 + 0xEF0]
	0x0393D780 BL 0x1C16D08
	0x0393D784 MOV X1, X0
	0x0393D788 MOV X0, X19
	0x0393D78C BL 0x1C16DEC
	0x0393D790 LDRB W8, [X0]
	0x0393D794 CMP W8, W1, UXTB
	0x0393D798 CSET W0, EQ
	0x0393D79C RET
	0x0393D7A0 STP X30, X21, [X31 - 0x20]!
	0x0393D7A4 STP X20, X19, [X31 + 0x10]
	0x0393D7A8 ADRP X21, 0xAA4000
	0x0393D7AC LDRB W8, [X21 + 0x944]
	0x0393D7B0 MOV X19, X1
	0x0393D7B4 MOV X20, X0
	0x0393D7B8 TBNZ X8, 0x0, 0x393D7D0
	0x0393D7BC ADRP X0, 0x811000
	0x0393D7C0 LDR X0, [X0 + 0x6F0]
	0x0393D7C4 BL 0x1C16CF4
	0x0393D7C8 MOVZ W8, 0x1
	0x0393D7CC STRB W8, [X21 + 0x944]
	0x0393D7D0 CBZ X19, 0x393D7EC
	0x0393D7D4 ADRP X21, 0x811000
	0x0393D7D8 LDR X21, [X21 + 0x6F0]
	0x0393D7DC LDR X8, [X19]
	0x0393D7E0 LDR X0, [X21]
	0x0393D7E4 CMP X8, X0
	0x0393D7E8 B.EQ 0x393D7F4
	0x0393D7EC MOV W0, W31
	0x0393D7F0 B 0x393D838
	0x0393D7F4 LDR W8, [X0 + 0xE0]
	0x0393D7F8 CBZ W8, 0x393D804
	0x0393D7FC MOV X1, X0
	0x0393D800 B 0x393D810
	0x0393D804 BL 0x1C16DFC
	0x0393D808 LDR X1, [X21]
	0x0393D80C LDR X0, [X19]
	0x0393D810 LDR X8, [X0 + 0x40]
	0x0393D814 LDR X9, [X1 + 0x40]
	0x0393D818 MOV X0, X19
	0x0393D81C CMP X8, X9
	0x0393D820 B.NE 0x393D844
	0x0393D824 BL 0x1C16E08
	0x0393D828 LDRB W8, [X0]
	0x0393D82C LDRB W9, [X20]
	0x0393D830 CMP W9, W8
	0x0393D834 CSET W0, EQ
	0x0393D838 LDP X20, X19, [X31 + 0x10]
	0x0393D83C LDP X30, X21, [X31], #0x20
	0x0393D840 RET
	0x0393D844 BL 0x1C171E0
	0x0393D848 MOV X1, X31
	0x0393D84C B 0x3319718
	0x0393D850 STR X30, [X31 - 0x20]!
	0x0393D854 STP X20, X19, [X31 + 0x10]
	0x0393D858 ADRP X19, 0xAA4000
	0x0393D85C ADRP X20, 0x811000
	0x0393D860 LDRB W8, [X19 + 0x945]
	0x0393D864 LDR X20, [X20 + 0x6F0]
	0x0393D868 TBNZ X8, 0x0, 0x393D880
	0x0393D86C ADRP X0, 0x811000
	0x0393D870 LDR X0, [X0 + 0x6F0]
	0x0393D874 BL 0x1C16CF4
	0x0393D878 MOVZ W8, 0x1
	0x0393D87C STRB W8, [X19 + 0x945]
	0x0393D880 LDR X8, [X20]
	0x0393D884 LDP X20, X19, [X31 + 0x10]
	0x0393D888 MOVZ W9, 0x7
	0x0393D88C LDR X8, [X8 + 0xB8]
	0x0393D890 STRB W9, [X8]
	0x0393D894 LDR X30, [X31], #0x20
	0x0393D898 RET
	0x0393D89C LDP S0, S1, [X0 + 0x10]
	0x0393D8A0 LDR V2, [X0 + 0x18]
	0x0393D8A4 RET
	0x0393D8A8 STR X30, [X31 - 0x10]!
	0x0393D8AC CBZ X0, 0x393D8CC
	0x0393D8B0 LDR W8, [X0 + 0x78]
	0x0393D8B4 STP S0, S1, [X0 + 0x10]
	0x0393D8B8 STR S2, [X0 + 0x18]
	0x0393D8BC ORR W8, W8, 0x1
	0x0393D8C0 STR W8, [X0 + 0x78]
	0x0393D8C4 LDR X30, [X31], #0x10
	0x0393D8C8 RET
	0x0393D8CC BL 0x1C16F20
	0x0393D8D0 STR X30, [X31 - 0x10]!
	0x0393D8D4 CBZ X0, 0x393D8EC
	0x0393D8D8 LDR W8, [X0 + 0x78]
	0x0393D8DC BFM W8, W1, 0x0, 0x0
	0x0393D8E0 STR W8, [X0 + 0x78]
	0x0393D8E4 LDR X30, [X31], #0x10
	0x0393D8E8 RET
	0x0393D8EC BL 0x1C16F20
	0x0393D8F0 LDP S0, S1, [X0 + 0x1C]
	0x0393D8F4 LDP S2, S3, [X0 + 0x24]
	0x0393D8F8 RET
	0x0393D8FC STR X30, [X31 - 0x10]!
	0x0393D900 CBZ X0, 0x393D920
	0x0393D904 LDR W8, [X0 + 0x78]
	0x0393D908 STP S0, S1, [X0 + 0x1C]
	0x0393D90C STP S2, S3, [X0 + 0x24]
	0x0393D910 ORR W8, W8, 0x20
	0x0393D914 STR W8, [X0 + 0x78]
	0x0393D918 LDR X30, [X31], #0x10
	0x0393D91C RET
	0x0393D920 BL 0x1C16F20
	0x0393D924 STR X30, [X31 - 0x10]!
	0x0393D928 CBZ X0, 0x393D950
	0x0393D92C LDR W8, [X0 + 0x78]
	0x0393D930 ANDS W31, W1, 0x1
	0x0393D934 MOVZ W9, 0x20
	0x0393D938 CSEL W9, W9, W31, NE
	0x0393D93C AND W8, W8, 0xFFFFFFDF
	0x0393D940 ORR W8, W8, W9, 0x0
	0x0393D944 STR W8, [X0 + 0x78]
	0x0393D948 LDR X30, [X31], #0x10
	0x0393D94C RET
	0x0393D950 BL 0x1C16F20
	0x0393D954 LDP S0, S1, [X0 + 0x2C]
	0x0393D958 LDR V2, [X0 + 0x34]
	0x0393D95C RET
	0x0393D960 STR X30, [X31 - 0x10]!
	0x0393D964 CBZ X0, 0x393D984
	0x0393D968 LDR W8, [X0 + 0x78]
	0x0393D96C STP S0, S1, [X0 + 0x2C]
	0x0393D970 STR S2, [X0 + 0x34]
	0x0393D974 ORR W8, W8, 0x40
	0x0393D978 STR W8, [X0 + 0x78]
	0x0393D97C LDR X30, [X31], #0x10
	0x0393D980 RET
	0x0393D984 BL 0x1C16F20
	0x0393D988 STR X30, [X31 - 0x10]!
	0x0393D98C CBZ X0, 0x393D9B4
	0x0393D990 LDR W8, [X0 + 0x78]
	0x0393D994 ANDS W31, W1, 0x1
	0x0393D998 MOVZ W9, 0x40
	0x0393D99C CSEL W9, W9, W31, NE
	0x0393D9A0 AND W8, W8, 0xFFFFFFBF
	0x0393D9A4 ORR W8, W8, W9, 0x0
	0x0393D9A8 STR W8, [X0 + 0x78]
	0x0393D9AC LDR X30, [X31], #0x10
	0x0393D9B0 RET
	0x0393D9B4 BL 0x1C16F20
	0x0393D9B8 LDP S0, S1, [X0 + 0x38]
	0x0393D9BC LDP S2, S3, [X0 + 0x40]
	0x0393D9C0 RET
	0x0393D9C4 STR X30, [X31 - 0x10]!
	0x0393D9C8 CBZ X0, 0x393D9E8
	0x0393D9CC LDR W8, [X0 + 0x78]
	0x0393D9D0 STP S0, S1, [X0 + 0x38]
	0x0393D9D4 STP S2, S3, [X0 + 0x40]
	0x0393D9D8 ORR W8, W8, 0x80
	0x0393D9DC STR W8, [X0 + 0x78]
	0x0393D9E0 LDR X30, [X31], #0x10
	0x0393D9E4 RET
	0x0393D9E8 BL 0x1C16F20
	0x0393D9EC STR X30, [X31 - 0x10]!
	0x0393D9F0 CBZ X0, 0x393DA18
	0x0393D9F4 LDR W8, [X0 + 0x78]
	0x0393D9F8 ANDS W31, W1, 0x1
	0x0393D9FC MOVZ W9, 0x80
	0x0393DA00 CSEL W9, W9, W31, NE
	0x0393DA04 AND W8, W8, 0xFFFFFF7F
	0x0393DA08 ORR W8, W8, W9, 0x0
	0x0393DA0C STR W8, [X0 + 0x78]
	0x0393DA10 LDR X30, [X31], #0x10
	0x0393DA14 RET
	0x0393DA18 BL 0x1C16F20
	0x0393DA1C LDP S0, S1, [X0 + 0x48]
	0x0393DA20 RET
	0x0393DA24 STR X30, [X31 - 0x10]!
	0x0393DA28 CBZ X0, 0x393DA44
	0x0393DA2C LDR W8, [X0 + 0x78]
	0x0393DA30 STP S0, S1, [X0 + 0x48]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xAA5000
	014 Move X23, 0x812000
	015 Move W8, [X22+2357]
	016 Move X23, [X23+1424]
	017 Move W21, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x7DF000
	025 Move X0, [X0+1952]
	026 Call 0x1C17CF4
	027 Move X0, 0x7DF000
	028 Move X0, [X0+1960]
	029 Call 0x1C17CF4
	030 Move X0, 0x812000
	031 Move X0, [X0+1424]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2357], W8
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X23]
	041 Move X8, [X0+184]
	042 Move X0, X20
	043 Move X1, X19
	044 Move X2, X31
	045 Move [X8+8], X31
	046 Call Math.SmallestVector2, X0, X1
	047 Move X0, X20
	048 Move X1, X19
	049 Move X2, X31
	050 Move V10, V0
	051 Move V8, V1
	052 Call Math.LargestVector2, X0, X1
	053 Move V11, V0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V9, V1
	056 Move W8, 1
	057 NotImplemented "Instruction LSLV not yet implemented."
	058 Move W9, 73
	059 And W31, W8, W9
	060 Move W9, 292
	061 And W31, W8, W9
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X23]
	068 Move S0, -1
	069 Add S10, S11, S0
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {88}
	074 Call 0x1C17DFC
	075 Move X0, [X23]
	076 Move X0, [X23]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X23]
	082 Subtract S0, S11, S10
	083 Move S1, 0.5
	084 Multiply S0, S0, S1
	085 Add S0, S10, S0
	086 Move S1, -0.5
	087 Add S10, S0, S1
	088 Move X8, [X0+184]
	089 Subtract W9, W21, 3
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X8+8], S10
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X23]
	098 Move S0, -1
	099 Add S8, S9, S0
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Subtract S0, S9, S8
	106 Move S1, 0.5
	107 Multiply S0, S0, S1
	108 Add S0, S8, S0
	109 Move S1, -0.5
	110 Add S8, S0, S1
	111 Move X8, [X0+184]
	112 Move [X8+12], S8
	113 Compare X19, 0
	114 JumpIfEqual {234}
	115 Move X10, 0x7DF000
	116 Move X8, [X19]
	117 Move X10, [X10+1952]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X1, [X10]
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X19
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X19
	137 NotImplemented "Instruction BLR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X24, 0x7DF000
	140 Move X24, [X24+1960]
	141 Move W21, W0
	142 Move W22, W31
	143 Move X8, [X19]
	144 Move X1, [X24]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X19
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X2, [X0+8]
	162 Move X0, X19
	163 Move W1, W22
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X20, 0
	166 JumpIfEqual {234}
	167 Move W8, [X20+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X25, X20, W0
	170 Add X25, X25, 32
	171 Move V8, [X25]
	172 Move X0, [X23]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X23]
	178 Move X8, [X0+184]
	179 Move V0, [X8+8]
	180 Subtract S0, S8, S0
	181 Move [X25], S0
	182 Move X8, [X19]
	183 Move X1, [X24]
	184 NotImplemented "Instruction LDRH not yet implemented."
	185 Compare X9, 0
	186 JumpIfEqual {193}
	187 Move X10, [X8+176]
	188 Add X10, X10, 8
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Subtract X9, X9, 1
	192 Add X10, X10, 16
	193 Move X0, X19
	194 Move W2, W31
	195 Call 0x1C5D788
	196 NotImplemented "Instruction LDRSW not yet implemented."
	197 Add X8, X8, X9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X2, [X0+8]
	201 Move X0, X19
	202 Move W1, W22
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move W8, [X20+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, [X23]
	207 Add X9, X20, W0
	208 Move V0, [X9+36]
	209 Add W22, W22, 1
	210 Move X8, [X8+184]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move V1, [X8+12]
	213 Subtract S0, S0, S1
	214 Move [X9+36], S0
	215 Move X20, [X31+80]
	216 Move X19, [X31+88]
	217 Move X22, [X31+64]
	218 Move X21, [X31+72]
	219 Move X24, [X31+48]
	220 Move X23, [X31+56]
	221 Move X30, [X31+32]
	222 Move X25, [X31+40]
	223 Move D9, [X31+16]
	224 Move D8, [X31+24]
	225 Move D11, [X31+96]
	226 Move D10, [X31+104]
	227 Return 
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {111}
	231 Call 0x1C17DFC
	232 Move X0, [X23]
	233 Call 0x1C17F28
	234 Call 0x1C17F20

Method: System.Void UpgradeAutoUVScaleOffset(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x0393DA34 ORR W8, W8, 0x2
	0x0393DA38 STR W8, [X0 + 0x78]
	0x0393DA3C LDR X30, [X31], #0x10
	0x0393DA40 RET
	0x0393DA44 BL 0x1C16F20
	0x0393DA48 STR X30, [X31 - 0x10]!
	0x0393DA4C CBZ X0, 0x393DA74
	0x0393DA50 LDR W8, [X0 + 0x78]
	0x0393DA54 ANDS W31, W1, 0x1
	0x0393DA58 MOVZ W9, 0x2
	0x0393DA5C CSEL W9, W9, W31, NE
	0x0393DA60 AND W8, W8, 0xFFFFFFFD
	0x0393DA64 ORR W8, W8, W9, 0x0
	0x0393DA68 STR W8, [X0 + 0x78]
	0x0393DA6C LDR X30, [X31], #0x10
	0x0393DA70 RET
	0x0393DA74 BL 0x1C16F20
	0x0393DA78 LDP S0, S1, [X0 + 0x50]
	0x0393DA7C RET
	0x0393DA80 STR X30, [X31 - 0x10]!
	0x0393DA84 CBZ X0, 0x393DAA0
	0x0393DA88 LDR W8, [X0 + 0x78]
	0x0393DA8C STP S0, S1, [X0 + 0x50]
	0x0393DA90 ORR W8, W8, 0x4
	0x0393DA94 STR W8, [X0 + 0x78]
	0x0393DA98 LDR X30, [X31], #0x10
	0x0393DA9C RET
	0x0393DAA0 BL 0x1C16F20
	0x0393DAA4 STR X30, [X31 - 0x10]!
	0x0393DAA8 CBZ X0, 0x393DAD0
	0x0393DAAC LDR W8, [X0 + 0x78]
	0x0393DAB0 ANDS W31, W1, 0x1
	0x0393DAB4 MOVZ W9, 0x4
	0x0393DAB8 CSEL W9, W9, W31, NE
	0x0393DABC AND W8, W8, 0xFFFFFFFB
	0x0393DAC0 ORR W8, W8, W9, 0x0
	0x0393DAC4 STR W8, [X0 + 0x78]
	0x0393DAC8 LDR X30, [X31], #0x10
	0x0393DACC RET
	0x0393DAD0 BL 0x1C16F20
	0x0393DAD4 LDP S0, S1, [X0 + 0x58]
	0x0393DAD8 LDP S2, S3, [X0 + 0x60]
	0x0393DADC RET
	0x0393DAE0 STR X30, [X31 - 0x10]!
	0x0393DAE4 CBZ X0, 0x393DB04
	0x0393DAE8 LDR W8, [X0 + 0x78]
	0x0393DAEC STP S0, S1, [X0 + 0x58]
	0x0393DAF0 STP S2, S3, [X0 + 0x60]
	0x0393DAF4 ORR W8, W8, 0x8
	0x0393DAF8 STR W8, [X0 + 0x78]
	0x0393DAFC LDR X30, [X31], #0x10
	0x0393DB00 RET
	0x0393DB04 BL 0x1C16F20
	0x0393DB08 STR X30, [X31 - 0x10]!
	0x0393DB0C CBZ X0, 0x393DB34
	0x0393DB10 LDR W8, [X0 + 0x78]
	0x0393DB14 ANDS W31, W1, 0x1
	0x0393DB18 MOVZ W9, 0x8
	0x0393DB1C CSEL W9, W9, W31, NE
	0x0393DB20 AND W8, W8, 0xFFFFFFF7
	0x0393DB24 ORR W8, W8, W9, 0x0
	0x0393DB28 STR W8, [X0 + 0x78]
	0x0393DB2C LDR X30, [X31], #0x10
	0x0393DB30 RET
	0x0393DB34 BL 0x1C16F20
	0x0393DB38 LDP S0, S1, [X0 + 0x68]
	0x0393DB3C LDP S2, S3, [X0 + 0x70]
	0x0393DB40 RET
	0x0393DB44 STR X30, [X31 - 0x10]!
	0x0393DB48 CBZ X0, 0x393DB68
	0x0393DB4C LDR W8, [X0 + 0x78]
	0x0393DB50 STP S0, S1, [X0 + 0x68]
	0x0393DB54 STP S2, S3, [X0 + 0x70]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X19, 0xAA5000
	011 Move W8, [X19+2358]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x812000
	018 Move X0, [X0+1208]
	019 Call 0x1C17CF4
	020 Move X0, 0x812000
	021 Move X0, [X0+1424]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+2358], W8
	025 Compare X20, 0
	026 JumpIfEqual {86}
	027 Move X19, 0x812000
	028 Move X19, [X19+1208]
	029 Move X0, X20
	030 Move X1, X31
	031 Call ProBuilderMesh.get_textures, X0
	032 Move X1, [X19]
	033 Call Enumerable.ToArray, X0
	034 Move X1, [X20+40]
	035 Move X19, X0
	036 Move X0, X20
	037 Move X2, X31
	038 Call ProBuilderMesh.RefreshUV, X0, X1
	039 Move X22, [X20+40]
	040 Compare X22, 0
	041 JumpIfEqual {86}
	042 Move W8, [X22+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X24, 0x812000
	045 Move X20, [X20+96]
	046 Move X24, [X24+1424]
	047 Move W23, W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X22, W23
	050 Move X25, [X8+32]
	051 Compare X25, 0
	052 JumpIfEqual {86}
	053 Move W8, [X25+76]
	054 Compare W8, 0
	055 JumpIfNotEqual {72}
	056 Move X0, [X24]
	057 Move X21, [X25+16]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X8, X31, 8
	063 Move X0, X19
	064 Move X1, X21
	065 Move X2, X20
	066 Move X3, X21
	067 Call UvUnwrapping.CalculateDelta, X0, X1, X2, X3
	068 Move V0, [X31+8]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Add V0, V0, V1
	071 Move [X25+44], D0
	072 Move W8, [X22+24]
	073 Add W23, W23, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, [X31+80]
	076 Move X19, [X31+88]
	077 Move X22, [X31+64]
	078 Move X21, [X31+72]
	079 Move X24, [X31+48]
	080 Move X23, [X31+56]
	081 Move X30, [X31+32]
	082 Move X25, [X31+40]
	083 Add X31, X31, 96
	084 Return 
	085 Call 0x1C17F28
	086 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0393DB58 ORR W8, W8, 0x10
	0x0393DB5C STR W8, [X0 + 0x78]
	0x0393DB60 LDR X30, [X31], #0x10
	0x0393DB64 RET
	0x0393DB68 BL 0x1C16F20
	0x0393DB6C STR X30, [X31 - 0x10]!
	0x0393DB70 CBZ X0, 0x393DB98
	0x0393DB74 LDR W8, [X0 + 0x78]
	0x0393DB78 ANDS W31, W1, 0x1
	0x0393DB7C MOVZ W9, 0x10
	0x0393DB80 CSEL W9, W9, W31, NE
	0x0393DB84 AND W8, W8, 0xFFFFFFEF
	0x0393DB88 ORR W8, W8, W9, 0x0
	0x0393DB8C STR W8, [X0 + 0x78]
	0x0393DB90 LDR X30, [X31], #0x10
	0x0393DB94 RET
	0x0393DB98 BL 0x1C16F20
	0x0393DB9C LDR W0, [X0 + 0x78]
	0x0393DBA0 RET
	0x0393DBA4 LDR W8, [X0 + 0x78]
	0x0393DBA8 BICS W31, W1, W8, 0x0
	0x0393DBAC CSET W0, EQ
	0x0393DBB0 RET
	0x0393DBB4 LDR W8, [X0 + 0x78]
	0x0393DBB8 AND W0, W8, 0x1
	0x0393DBBC RET
	0x0393DBC0 LDRB W8, [X0 + 0x78]
	0x0393DBC4 UBFM W0, W8, 0x5, 0x5
	0x0393DBC8 RET
	0x0393DBCC LDRB W8, [X0 + 0x78]
	0x0393DBD0 UBFM W0, W8, 0x6, 0x6
	0x0393DBD4 RET
	0x0393DBD8 LDRB W8, [X0 + 0x78]
	0x0393DBDC UBFM W0, W8, 0x7, 0x1F
	0x0393DBE0 RET
	0x0393DBE4 LDRB W8, [X0 + 0x78]
	0x0393DBE8 UBFM W0, W8, 0x1, 0x1
	0x0393DBEC RET
	0x0393DBF0 LDRB W8, [X0 + 0x78]
	0x0393DBF4 UBFM W0, W8, 0x2, 0x2
	0x0393DBF8 RET
	0x0393DBFC LDRB W8, [X0 + 0x78]
	0x0393DC00 UBFM W0, W8, 0x3, 0x3
	0x0393DC04 RET
	0x0393DC08 LDRB W8, [X0 + 0x78]
	0x0393DC0C UBFM W0, W8, 0x4, 0x4
	0x0393DC10 RET
	0x0393DC14 MOV X1, X31
	0x0393DC18 B 0x33BDD8C
	0x0393DC1C STP X30, X21, [X31 - 0x20]!
	0x0393DC20 STP X20, X19, [X31 + 0x10]
	0x0393DC24 ADRP X21, 0xAA4000
	0x0393DC28 LDRB W8, [X21 + 0x946]
	0x0393DC2C MOV X19, X1
	0x0393DC30 MOV X20, X0
	0x0393DC34 TBNZ X8, 0x0, 0x393DC4C
	0x0393DC38 ADRP X0, 0x811000
	0x0393DC3C LDR X0, [X0 + 0x20]
	0x0393DC40 BL 0x1C16CF4
	0x0393DC44 MOVZ W8, 0x1
	0x0393DC48 STRB W8, [X21 + 0x946]
	0x0393DC4C CBZ X19, 0x393DC68
	0x0393DC50 ADRP X8, 0x811000
	0x0393DC54 LDR X8, [X8 + 0x20]
	0x0393DC58 LDR X9, [X19]
	0x0393DC5C LDR X8, [X8]
	0x0393DC60 CMP X9, X8
	0x0393DC64 B.EQ 0x393DC78
	0x0393DC68 LDP X20, X19, [X31 + 0x10]
	0x0393DC6C MOV W0, W31
	0x0393DC70 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAA5000
	007 Move X21, 0x812000
	008 Move X19, 0x812000
	009 Move X20, 0x812000
	010 Move W8, [X22+2359]
	011 Move X21, [X21+1816]
	012 Move X19, [X19+1808]
	013 Move X20, [X20+1424]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x812000
	019 Move X0, [X0+1808]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B8000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B8000
	025 Move X0, [X0+3632]
	026 Call 0x1C17CF4
	027 Move X0, 0x812000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x812000
	031 Move X0, [X0+1424]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2359], W8
	035 Move X0, [X21]
	036 Move X22, 0x7B8000
	037 Move X21, 0x7B8000
	038 Move X22, [X22+3632]
	039 Move X21, [X21+3616]
	040 Call 0x1C17F10
	041 Move X2, [X19]
	042 Move W1, 8
	043 Move X19, X0
	044 Call List`1<Vector2>..ctor, X0, X1
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8], X19
	048 Move X19, 0xA9D000
	049 Move W8, [X19+1935]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x7BF000
	053 Move X0, [X0+3848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X19+1935], W8
	057 Move X8, 0x7BF000
	058 Move X8, [X8+3848]
	059 Move X9, [X20]
	060 Move X8, [X8]
	061 Move X8, [X8+184]
	062 Move V0, [X8]
	063 Move X8, [X9+184]
	064 Move [X8+8], D0
	065 Move X0, [X22]
	066 Call 0x1C17F10
	067 Move X2, [X21]
	068 Move W1, 64
	069 Move X19, X0
	070 Call List`1<Int32>..ctor, X0, X1
	071 Move X8, [X20]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X8, [X8+184]
	075 Move [X8+16], X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+48]
	079 Return 

