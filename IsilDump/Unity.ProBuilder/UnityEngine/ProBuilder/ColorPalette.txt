Type: UnityEngine.ProBuilder.ColorPalette

Method: UnityEngine.Color get_current()

Disassembly:
	0x038FD1B8 FCMP S10, S11
	0x038FD1BC B.LE 0x38FD1E0
	0x038FD1C0 LDR V0, [X22 + 0x264]

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 Move S2, [X0+32]
	004 Move S3, [X0+36]
	005 Return X0

Method: System.Void set_current(UnityEngine.Color value)

Disassembly:
	0x038FD1C4 LDR V1, [X21 + 0x1F4]
	0x038FD1C8 FADD S0, S10, S0
	0x038FD1CC FDIV S0, S0, S1

ISIL:
	001 Move [X0+24], S0
	002 Move [X0+32], S1
	003 Move [X0+32], S2
	004 Move [X0+40], S3
	005 Return 

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.Color> get_colors()

Disassembly:
	0x038FD1D0 LDR V1, [X19 + 0x3B0]
	0x038FD1D4 BL 0x3EB1B50
	0x038FD1D8 MOV V10.16B, V0.16B
	0x038FD1DC B 0x38FD1E8
	0x038FD1E0 LDR V0, [X20 + 0xFA0]
	0x038FD1E4 FDIV S10, S10, S0
	0x038FD1E8 ADRP X23, 0x850000
	0x038FD1EC LDR X23, [X23 + 0xC40]
	0x038FD1F0 FCMP S8, S11
	0x038FD1F4 B.LE 0x38FD214
	0x038FD1F8 LDR V0, [X22 + 0x264]
	0x038FD1FC LDR V1, [X21 + 0x1F4]
	0x038FD200 FADD S0, S8, S0
	0x038FD204 FDIV S0, S0, S1
	0x038FD208 LDR V1, [X19 + 0x3B0]
	0x038FD20C BL 0x3EB1B50
	0x038FD210 B 0x38FD21C
	0x038FD214 LDR V0, [X20 + 0xFA0]
	0x038FD218 FDIV S0, S8, S0
	0x038FD21C MOVZ W8, 0x42C80000
	0x038FD220 FMOV S1, W8
	0x038FD224 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD228 LDR V2, [X8 + 0x44]
	0x038FD22C ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD230 LDR V3, [X8 + 0x268]
	0x038FD234 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD238 FMUL S4, S0, S1
	0x038FD23C LDR V0, [X8 + 0x4]
	0x038FD240 LDR X0, [X23]
	0x038FD244 FMUL S5, S9, S1
	0x038FD248 FMUL S6, S10, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE5000
	007 Move X21, 0x851000
	008 Move X20, 0x851000
	009 Move W8, [X22+1919]
	010 Move X21, [X21+3032]
	011 Move X20, [X20+3040]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x851000
	018 Move X0, [X0+3040]
	019 Call 0x1C17CF4
	020 Move X0, 0x851000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1919], W8
	025 Move X0, [X21]
	026 Move X19, [X19+40]
	027 Call 0x1C17F10
	028 Move X2, [X20]
	029 Move X1, X19
	030 Move X20, X0
	031 Call ReadOnlyCollection`1<Color>..ctor, X0, X1
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void SetColors(System.Collections.Generic.IEnumerable`1<UnityEngine.Color> colors)

Disassembly:
	0x038FD24C FMUL S1, S5, S2
	0x038FD250 FMUL S2, S6, S3
	0x038FD254 FADD S1, S1, S2
	0x038FD258 FMUL S0, S4, S0
	0x038FD25C STP V6, V5, [X31]
	0x038FD260 STR V4, [X31 + 0x2]
	0x038FD264 FADD S8, S1, S0
	0x038FD268 BL 0x1C16F10
	0x038FD26C ADRP X8, 0xFFFFFFFFFD1F1000
	0x038FD270 LDR V0, [X8 + 0x310]
	0x038FD274 LDR V3, [X31 + 0x1]
	0x038FD278 ADRP X9, 0xFFFFFFFFFD1F0000
	0x038FD27C LDR V1, [X9 + 0x668]
	0x038FD280 ADRP X8, 0xFFFFFFFFFD1F0000
	0x00000000 INVALID
	0x038FD288 LDR V3, [X31]
	0x038FD28C LDR V2, [X8 + 0xF98]
	0x038FD290 MOV X1, X31
	0x038FD294 MOV X19, X0
	0x00000000 INVALID
	0x038FD29C FADD V0.2S, V0.2S, V1.2S
	0x038FD2A0 LDR V1, [X31 + 0x2]
	0x00000000 INVALID
	0x038FD2A8 FADD V9.2S, V0.2S, V1.2S
	0x038FD2AC BL 0x33BDD8C
	0x038FD2B0 STR D9, [X19 + 0x10]
	0x038FD2B4 STR S8, [X19 + 0x18]
	0x038FD2B8 MOV X0, X19
	0x038FD2BC LDP X20, X19, [X31 + 0x70]
	0x038FD2C0 LDP X22, X21, [X31 + 0x60]
	0x038FD2C4 LDP X30, X23, [X31 + 0x50]
	0x038FD2C8 LDP D9, D8, [X31 + 0x40]
	0x038FD2CC LDP D11, D10, [X31 + 0x30]
	0x038FD2D0 ADD X31, X31, 0x80
	0x038FD2D4 RET
	0x038FD2D8 SUB X31, X31, 0x40
	0x038FD2DC STP X30, X23, [X31 + 0x10]
	0x038FD2E0 STP X22, X21, [X31 + 0x20]
	0x038FD2E4 STP X20, X19, [X31 + 0x30]
	0x038FD2E8 ADRP X20, 0xAE4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE5000
	006 Move W8, [X21+1920]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x851000
	014 Move X0, [X0+3048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1920], W8
	018 Compare X20, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x851000
	021 Move X8, [X8+3048]
	022 Move X0, X20
	023 Move X1, [X8]
	024 Call Enumerable.ToList, X0
	025 Move [X19+40], X0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X0, 0x7FC000
	032 Move X0, [X0+1320]
	033 Call 0x1C17D08
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Move X0, 0x851000
	037 Move X0, [X0+3056]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Move X2, X31
	042 Call ArgumentNullException..ctor, X0, X1
	043 Move X0, 0x851000
	044 Move X0, [X0+3064]
	045 Call 0x1C17D08
	046 Move X1, X0
	047 Move X0, X19
	048 Call 0x1C17DEC

Method: System.Void SetDefaultValues()

Disassembly:
	0x038FD2EC ADRP X23, 0x7F6000
	0x038FD2F0 ADRP X22, 0x850000
	0x038FD2F4 LDRB W8, [X20 + 0x789]
	0x038FD2F8 LDR X23, [X23 + 0xA90]
	0x038FD2FC LDR X22, [X22 + 0xC38]
	0x038FD300 MOV X19, X0
	0x038FD304 TBNZ X8, 0x0, 0x38FD328
	0x038FD308 ADRP X0, 0x7F6000
	0x038FD30C LDR X0, [X0 + 0xA90]
	0x038FD310 BL 0x1C16CF4
	0x038FD314 ADRP X0, 0x850000
	0x038FD318 LDR X0, [X0 + 0xC38]
	0x038FD31C BL 0x1C16CF4
	0x038FD320 MOVZ W8, 0x1
	0x038FD324 STRB W8, [X20 + 0x789]
	0x038FD328 LDR V0, [X19 + 0x10]
	0x038FD32C LDR X0, [X23]
	0x038FD330 ADD X1, X31, 0xC
	0x038FD334 STR S0, [X31 + 0xC]
	0x038FD338 BL 0x1C16E04
	0x038FD33C MOV X20, X0
	0x038FD340 LDR V0, [X19 + 0x14]
	0x038FD344 LDR X0, [X23]
	0x038FD348 ADD X1, X31, 0x8
	0x038FD34C STR S0, [X31 + 0x8]
	0x038FD350 BL 0x1C16E04
	0x038FD354 MOV X21, X0
	0x038FD358 LDR V0, [X19 + 0x18]
	0x038FD35C LDR X0, [X23]
	0x038FD360 ADD X1, X31, 0x4
	0x038FD364 STR S0, [X31 + 0x4]
	0x038FD368 BL 0x1C16E04
	0x038FD36C LDR X8, [X22]
	0x038FD370 MOV X3, X0
	0x038FD374 MOV X1, X20
	0x038FD378 MOV X2, X21
	0x038FD37C MOV X0, X8
	0x038FD380 MOV X4, X31
	0x038FD384 BL 0x3227C18
	0x038FD388 LDP X20, X19, [X31 + 0x30]
	0x038FD38C LDP X22, X21, [X31 + 0x20]
	0x038FD390 LDP X30, X23, [X31 + 0x10]
	0x038FD394 ADD X31, X31, 0x40
	0x038FD398 RET
	0x038FD39C STR D10, [X31 - 0x30]!
	0x038FD3A0 STP D9, D8, [X31 + 0x10]
	0x038FD3A4 STP X30, X19, [X31 + 0x20]
	0x038FD3A8 MOV X1, X31
	0x038FD3AC MOV V8.16B, V2.16B
	0x038FD3B0 MOV V9.16B, V1.16B
	0x038FD3B4 MOV V10.16B, V0.16B
	0x038FD3B8 MOV X19, X0
	0x038FD3BC BL 0x33BDD8C
	0x038FD3C0 STP S10, S9, [X19 + 0x10]
	0x038FD3C4 STR S8, [X19 + 0x18]
	0x038FD3C8 LDP X30, X19, [X31 + 0x20]
	0x038FD3CC LDP D9, D8, [X31 + 0x10]
	0x038FD3D0 LDR V10, [X31], #0x30
	0x038FD3D4 RET
	0x038FD3D8 STP X30, X21, [X31 - 0x20]!
	0x038FD3DC STP X20, X19, [X31 + 0x10]
	0x038FD3E0 ADRP X20, 0xAE4000
	0x038FD3E4 ADRP X21, 0x84E000
	0x038FD3E8 LDRB W8, [X20 + 0x78A]
	0x038FD3EC LDR X21, [X21 + 0x170]
	0x038FD3F0 MOV X19, X0
	0x038FD3F4 TBNZ X8, 0x0, 0x38FD40C
	0x038FD3F8 ADRP X0, 0x84E000
	0x038FD3FC LDR X0, [X0 + 0x170]
	0x038FD400 BL 0x1C16CF4
	0x038FD404 MOVZ W8, 0x1
	0x038FD408 STRB W8, [X20 + 0x78A]
	0x038FD40C LDR X0, [X21]
	0x038FD410 LDR W8, [X0 + 0xE0]
	0x038FD414 CBNZ W8, 0x38FD41C
	0x038FD418 BL 0x1C16DFC
	0x038FD41C MOV X0, X19
	0x038FD420 LDP X20, X19, [X31 + 0x10]
	0x038FD424 LDP X30, X21, [X31], #0x20
	0x038FD428 B 0x38FD42C
	0x038FD42C STR D12, [X31 - 0x40]!
	0x038FD430 STP D11, D10, [X31 + 0x8]
	0x038FD434 STP D9, D8, [X31 + 0x18]
	0x038FD438 STR X30, [X31 + 0x28]
	0x038FD43C STP X20, X19, [X31 + 0x30]
	0x038FD440 ADRP X20, 0xAE4000
	0x038FD444 LDRB W8, [X20 + 0x790]
	0x038FD448 MOV X19, X0
	0x038FD44C TBNZ X8, 0x0, 0x38FD464
	0x038FD450 ADRP X0, 0x850000
	0x038FD454 LDR X0, [X0 + 0xC48]
	0x038FD458 BL 0x1C16CF4
	0x038FD45C MOVZ W8, 0x1
	0x038FD460 STRB W8, [X20 + 0x790]
	0x038FD464 CBZ X19, 0x38FD5B0
	0x038FD468 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD46C LDP S0, S1, [X19 + 0x10]
	0x038FD470 LDR V2, [X8 + 0x2E4]
	0x038FD474 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD478 LDR V11, [X8 + 0x164]
	0x038FD47C ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD480 LDR V10, [X19 + 0x18]
	0x038FD484 LDR V12, [X8 + 0x34C]
	0x038FD488 MOVZ W9, 0x42C80000
	0x038FD48C FDIV S0, S0, S2
	0x038FD490 FMOV S2, W9
	0x038FD494 FCMP S0, S11
	0x038FD498 FDIV S9, S1, S2
	0x038FD49C B.LE 0x38FD4B4
	0x038FD4A0 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4A4 LDR V1, [X8 + 0x28]
	0x038FD4A8 BL 0x3EB1B50
	0x038FD4AC MOV V8.16B, V0.16B
	0x038FD4B0 B 0x38FD4CC
	0x038FD4B4 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4B8 LDR V1, [X8 + 0x26C]
	0x038FD4BC ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4C0 LDR V2, [X8 + 0x3EC]
	0x038FD4C4 FMUL S0, S0, S1
	0x038FD4C8 FADD S8, S0, S2
	0x038FD4CC FCMP S9, S11
	0x038FD4D0 FDIV S10, S10, S12
	0x038FD4D4 B.LE 0x38FD4F0
	0x038FD4D8 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4DC LDR V1, [X8 + 0x28]
	0x038FD4E0 MOV V0.16B, V9.16B
	0x038FD4E4 BL 0x3EB1B50
	0x038FD4E8 MOV V9.16B, V0.16B
	0x038FD4EC B 0x38FD508
	0x038FD4F0 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4F4 LDR V0, [X8 + 0x26C]
	0x038FD4F8 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD4FC LDR V1, [X8 + 0x3EC]
	0x038FD500 FMUL S0, S9, S0
	0x038FD504 FADD S9, S0, S1
	0x038FD508 ADRP X19, 0x850000
	0x038FD50C LDR X19, [X19 + 0xC48]
	0x038FD510 FCMP S10, S11
	0x038FD514 B.LE 0x38FD52C
	0x038FD518 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD51C LDR V1, [X8 + 0x28]
	0x038FD520 MOV V0.16B, V10.16B
	0x038FD524 BL 0x3EB1B50
	0x038FD528 B 0x38FD544
	0x038FD52C ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD530 LDR V0, [X8 + 0x26C]
	0x038FD534 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD538 LDR V1, [X8 + 0x3EC]
	0x038FD53C FMUL S0, S10, S0
	0x038FD540 FADD S0, S0, S1
	0x038FD544 LDR X0, [X19]
	0x038FD548 MOVZ W8, 0x43FA0000
	0x038FD54C FSUB S1, S8, S9
	0x038FD550 FMOV S2, W8
	0x038FD554 MOVZ W8, 0x43480000
	0x038FD558 FMUL S8, S1, S2
	0x038FD55C FSUB S0, S9, S0
	0x038FD560 FMOV S1, W8
	0x038FD564 FMUL S10, S0, S1
	0x038FD568 BL 0x1C16F10
	0x038FD56C MOVZ W8, 0x42E80000
	0x038FD570 FMOV S0, W8
	0x038FD574 FMUL S0, S9, S0
	0x038FD578 FMOV S1, -16
	0x038FD57C MOV X1, X31
	0x038FD580 MOV X19, X0
	0x038FD584 FADD S9, S0, S1
	0x038FD588 BL 0x33BDD8C
	0x038FD58C STP S9, S8, [X19 + 0x10]
	0x038FD590 STR S10, [X19 + 0x18]
	0x038FD594 MOV X0, X19
	0x038FD598 LDP X20, X19, [X31 + 0x30]
	0x038FD59C LDR X30, [X31 + 0x28]
	0x038FD5A0 LDP D9, D8, [X31 + 0x18]
	0x038FD5A4 LDP D11, D10, [X31 + 0x8]
	0x038FD5A8 LDR V12, [X31], #0x40
	0x038FD5AC RET
	0x038FD5B0 BL 0x1C16F20
	0x038FD5B4 STP D11, D10, [X31 - 0x40]!
	0x038FD5B8 STP D9, D8, [X31 + 0x10]
	0x038FD5BC STR X30, [X31 + 0x20]
	0x038FD5C0 STP X20, X19, [X31 + 0x30]
	0x038FD5C4 ADRP X20, 0xAE4000
	0x038FD5C8 ADRP X19, 0x84E000
	0x038FD5CC LDRB W8, [X20 + 0x78B]
	0x038FD5D0 LDR X19, [X19 + 0x170]
	0x038FD5D4 MOV V8.16B, V3.16B
	0x038FD5D8 MOV V9.16B, V2.16B
	0x038FD5DC MOV V10.16B, V1.16B
	0x038FD5E0 MOV V11.16B, V0.16B
	0x038FD5E4 TBNZ X8, 0x0, 0x38FD5FC
	0x038FD5E8 ADRP X0, 0x84E000
	0x038FD5EC LDR X0, [X0 + 0x170]
	0x038FD5F0 BL 0x1C16CF4
	0x038FD5F4 MOVZ W8, 0x1
	0x038FD5F8 STRB W8, [X20 + 0x78B]
	0x038FD5FC MOV V0.16B, V11.16B
	0x038FD600 MOV V1.16B, V10.16B
	0x038FD604 MOV V2.16B, V9.16B
	0x038FD608 MOV V3.16B, V8.16B
	0x038FD60C BL 0x38FCFC8
	0x038FD610 LDR X8, [X19]
	0x038FD614 MOV X19, X0
	0x038FD618 LDR W9, [X8 + 0xE0]
	0x038FD61C CBNZ W9, 0x38FD628
	0x038FD620 MOV X0, X8
	0x038FD624 BL 0x1C16DFC
	0x038FD628 MOV X0, X19
	0x038FD62C LDP X20, X19, [X31 + 0x30]
	0x038FD630 LDR X30, [X31 + 0x20]
	0x038FD634 LDP D9, D8, [X31 + 0x10]
	0x038FD638 LDP D11, D10, [X31], #0x40
	0x038FD63C B 0x38FD42C
	0x038FD640 SUB X31, X31, 0x40
	0x038FD644 STP X30, X23, [X31 + 0x10]
	0x038FD648 STP X22, X21, [X31 + 0x20]
	0x038FD64C STP X20, X19, [X31 + 0x30]
	0x038FD650 ADRP X20, 0xAE4000
	0x038FD654 ADRP X23, 0x7F6000
	0x038FD658 ADRP X22, 0x850000
	0x038FD65C LDRB W8, [X20 + 0x78C]
	0x038FD660 LDR X23, [X23 + 0xA90]
	0x038FD664 LDR X22, [X22 + 0xC38]
	0x038FD668 MOV X19, X0
	0x038FD66C TBNZ X8, 0x0, 0x38FD690
	0x038FD670 ADRP X0, 0x7F6000
	0x038FD674 LDR X0, [X0 + 0xA90]
	0x038FD678 BL 0x1C16CF4
	0x038FD67C ADRP X0, 0x850000
	0x038FD680 LDR X0, [X0 + 0xC38]
	0x038FD684 BL 0x1C16CF4
	0x038FD688 MOVZ W8, 0x1
	0x038FD68C STRB W8, [X20 + 0x78C]
	0x038FD690 LDR V0, [X19 + 0x10]
	0x038FD694 LDR X0, [X23]
	0x038FD698 ADD X1, X31, 0xC
	0x038FD69C STR S0, [X31 + 0xC]
	0x038FD6A0 BL 0x1C16E04
	0x038FD6A4 MOV X20, X0
	0x038FD6A8 LDR V0, [X19 + 0x14]
	0x038FD6AC LDR X0, [X23]
	0x038FD6B0 ADD X1, X31, 0x8
	0x038FD6B4 STR S0, [X31 + 0x8]
	0x038FD6B8 BL 0x1C16E04
	0x038FD6BC MOV X21, X0
	0x038FD6C0 LDR V0, [X19 + 0x18]
	0x038FD6C4 LDR X0, [X23]
	0x038FD6C8 ADD X1, X31, 0x4
	0x038FD6CC STR S0, [X31 + 0x4]
	0x038FD6D0 BL 0x1C16E04
	0x038FD6D4 LDR X8, [X22]
	0x038FD6D8 MOV X3, X0
	0x038FD6DC MOV X1, X20
	0x038FD6E0 MOV X2, X21
	0x038FD6E4 MOV X0, X8
	0x038FD6E8 MOV X4, X31
	0x038FD6EC BL 0x3227C18
	0x038FD6F0 LDP X20, X19, [X31 + 0x30]
	0x038FD6F4 LDP X22, X21, [X31 + 0x20]
	0x038FD6F8 LDP X30, X23, [X31 + 0x10]
	0x038FD6FC ADD X31, X31, 0x40
	0x038FD700 RET
	0x038FD704 STP D9, D8, [X31 - 0x30]!
	0x038FD708 STR X30, [X31 + 0x10]
	0x038FD70C STP X20, X19, [X31 + 0x20]
	0x038FD710 ADRP X20, 0xAE4000
	0x038FD714 ADRP X19, 0x7FD000
	0x038FD718 LDRB W8, [X20 + 0x78D]
	0x038FD71C LDR X19, [X19 + 0x4B8]
	0x038FD720 MOV V8.16B, V1.16B
	0x038FD724 MOV V9.16B, V0.16B
	0x038FD728 TBNZ X8, 0x0, 0x38FD740
	0x038FD72C ADRP X0, 0x7FD000
	0x038FD730 LDR X0, [X0 + 0x4B8]
	0x038FD734 BL 0x1C16CF4
	0x038FD738 MOVZ W8, 0x1
	0x038FD73C STRB W8, [X20 + 0x78D]
	0x038FD740 LDR X8, [X19]
	0x038FD744 LDP X20, X19, [X31 + 0x20]
	0x038FD748 LDR X30, [X31 + 0x10]
	0x038FD74C FABD S1, S9, S9
	0x038FD750 LDR X8, [X8 + 0xB8]
	0x038FD754 LDR V0, [X8]
	0x038FD758 FCMP S1, S0
	0x038FD75C CSET W0, MI
	0x038FD760 LDP D9, D8, [X31], #0x30
	0x038FD764 RET
	0x038FD768 STR D10, [X31 - 0x30]!
	0x038FD76C STP D9, D8, [X31 + 0x10]
	0x038FD770 STP X30, X19, [X31 + 0x20]
	0x038FD774 ADRP X19, 0xADB000
	0x038FD778 LDRB W8, [X19 + 0x785]
	0x038FD77C MOV V8.16B, V2.16B
	0x038FD780 MOV V9.16B, V1.16B
	0x038FD784 MOV V10.16B, V0.16B
	0x038FD788 CBNZ W8, 0x38FD7A0
	0x038FD78C ADRP X0, 0x7F6000
	0x038FD790 LDR X0, [X0 + 0x5A8]
	0x038FD794 BL 0x1C16CF4
	0x038FD798 MOVZ W8, 0x1
	0x038FD79C STRB W8, [X19 + 0x785]
	0x038FD7A0 ADRP X8, 0x7F6000
	0x038FD7A4 LDR X8, [X8 + 0x5A8]
	0x038FD7A8 LDR X0, [X8]
	0x038FD7AC LDR W8, [X0 + 0xE0]
	0x038FD7B0 CBNZ W8, 0x38FD7B8
	0x038FD7B4 BL 0x1C16DFC
	0x038FD7B8 FMUL S0, S10, S10
	0x038FD7BC FMUL S1, S9, S9
	0x038FD7C0 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD7C4 FADD S0, S0, S1
	0x038FD7C8 LDR V1, [X8 + 0x17C]
	0x038FD7CC FMUL S2, S8, S8
	0x038FD7D0 FADD S0, S2, S0
	0x038FD7D4 FSQRT S2, S0
	0x038FD7D8 FCMP S2, S1
	0x038FD7DC B.LE 0x38FD7F0
	0x038FD7E0 FDIV S0, S10, S2
	0x038FD7E4 FDIV S1, S9, S2
	0x038FD7E8 FDIV S2, S8, S2
	0x038FD7EC B 0x38FD828
	0x038FD7F0 ADRP X19, 0xADB000
	0x038FD7F4 LDRB W8, [X19 + 0x783]
	0x038FD7F8 CBNZ W8, 0x38FD810
	0x038FD7FC ADRP X0, 0x7F6000
	0x038FD800 LDR X0, [X0 + 0x5A0]
	0x038FD804 BL 0x1C16CF4
	0x038FD808 MOVZ W8, 0x1
	0x038FD80C STRB W8, [X19 + 0x783]
	0x038FD810 ADRP X8, 0x7F6000
	0x038FD814 LDR X8, [X8 + 0x5A0]
	0x038FD818 LDR X8, [X8]
	0x038FD81C LDR X8, [X8 + 0xB8]
	0x038FD820 LDP S0, S1, [X8]
	0x038FD824 LDR V2, [X8 + 0x8]
	0x038FD828 LDP X30, X19, [X31 + 0x20]
	0x038FD82C LDP D9, D8, [X31 + 0x10]
	0x038FD830 FABS S0, S0
	0x038FD834 FABS S1, S1
	0x038FD838 FABS S2, S2
	0x038FD83C FMOV S3, 1
	0x038FD840 LDR V10, [X31], #0x30
	0x038FD844 RET
	0x038FD848 STR X30, [X31 - 0x10]!
	0x038FD84C CBZ X0, 0x38FD88C
	0x038FD850 CBZ X1, 0x38FD88C
	0x038FD854 LDR V0, [X0 + 0x10]
	0x038FD858 LDR V1, [X1 + 0x10]
	0x038FD85C LDUR V2, [X0 + 0x14]
	0x038FD860 LDUR V3, [X1 + 0x14]
	0x038FD864 FSUB S0, S0, S1
	0x038FD868 FMUL S0, S0, S0
	0x038FD86C FSUB V1.2S, V2.2S, V3.2S
	0x00000000 INVALID
	0x038FD874 FADD S0, S0, S1
	0x038FD878 MOV S1, V1.S[1]
	0x038FD87C FADD S0, S0, S1
	0x038FD880 FSQRT S0, S0
	0x038FD884 LDR X30, [X31], #0x10
	0x038FD888 RET
	0x038FD88C BL 0x1C16F20
	0x038FD890 STR D10, [X31 - 0x30]!
	0x038FD894 STP D9, D8, [X31 + 0x8]
	0x038FD898 STR X30, [X31 + 0x18]
	0x038FD89C STP X20, X19, [X31 + 0x20]
	0x038FD8A0 ADRP X20, 0xAE4000
	0x038FD8A4 LDRB W8, [X20 + 0x791]
	0x038FD8A8 MOV X19, X0
	0x038FD8AC TBNZ X8, 0x0, 0x38FD8C4
	0x038FD8B0 ADRP X0, 0x84E000
	0x038FD8B4 LDR X0, [X0 + 0x170]
	0x038FD8B8 BL 0x1C16CF4
	0x038FD8BC MOVZ W8, 0x1
	0x038FD8C0 STRB W8, [X20 + 0x791]
	0x038FD8C4 CBZ X19, 0x38FD908
	0x038FD8C8 ADRP X8, 0x84E000
	0x038FD8CC LDR X8, [X8 + 0x170]
	0x038FD8D0 LDP S10, S8, [X19 + 0x10]
	0x038FD8D4 LDR V9, [X19 + 0x18]
	0x038FD8D8 LDR X0, [X8]
	0x038FD8DC LDR W8, [X0 + 0xE0]
	0x038FD8E0 CBNZ W8, 0x38FD8E8
	0x038FD8E4 BL 0x1C16DFC
	0x038FD8E8 MOV V1.16B, V8.16B
	0x038FD8EC MOV V2.16B, V9.16B
	0x038FD8F0 LDP X20, X19, [X31 + 0x20]
	0x038FD8F4 LDR X30, [X31 + 0x18]
	0x038FD8F8 LDP D9, D8, [X31 + 0x8]
	0x038FD8FC MOV V0.16B, V10.16B
	0x038FD900 LDR V10, [X31], #0x30
	0x038FD904 B 0x38FD90C
	0x038FD908 BL 0x1C16F20
	0x038FD90C FCMP S1, 0x0
	0x038FD910 B.NE 0x38FD92C
	0x038FD914 MOV V0.16B, V2.16B
	0x038FD918 MOV V1.16B, V2.16B
	0x038FD91C MOV V4.16B, V2.16B
	0x038FD920 FMOV S3, 1
	0x038FD924 MOV V2.16B, V4.16B
	0x038FD928 RET
	0x038FD92C MOVZ W8, 0x42700000
	0x038FD930 FMOV S3, W8
	0x038FD934 MOVZ W9, 0x7F800000
	0x038FD938 FDIV S0, S0, S3
	0x038FD93C FMOV S3, W9
	0x038FD940 FRINTM S4, S0
	0x038FD944 MOVZ W8, 0x80000000
	0x038FD948 FMOV S5, 1
	0x038FD94C FCMP S4, S3
	0x038FD950 FCVTMS W9, S0
	0x038FD954 FSUB S3, S5, S1
	0x038FD958 CSEL W8, W8, W9, EQ
	0x038FD95C FMUL S4, S3, S2
	0x038FD960 SCVTF S3, W8
	0x038FD964 FSUB S0, S0, S3
	0x038FD968 FMUL S3, S0, S1
	0x038FD96C FSUB S3, S5, S3
	0x038FD970 CMP W8, 0x4
	0x038FD974 FMUL S3, S3, S2
	0x038FD978 B.HI 0x38FD9B8
	0x038FD97C FSUB S0, S5, S0
	0x038FD980 ADRP X9, 0xFFFFFFFFFD29A000
	0x038FD984 ADD X9, X9, 0xA27
	0x038FD988 FMUL S0, S0, S1
	0x038FD98C FSUB S0, S5, S0
	0x038FD990 ADR X10, 0xFFFFFFFFFFFFFF90
	0x038FD994 LDRB W11, [X9, X8, LSL]
	0x038FD998 ADD X10, X10, X11, 0x2, LSL
	0x038FD99C FMUL S5, S0, S2
	0x038FD9A0 MOV V0.16B, V3.16B
	0x038FD9A4 MOV V1.16B, V2.16B
	0x038FD9A8 BR X10
	0x038FD9AC MOV V0.16B, V2.16B
	0x038FD9B0 MOV V1.16B, V5.16B
	0x038FD9B4 B 0x38FD920
	0x038FD9B8 MOV V0.16B, V2.16B
	0x038FD9BC MOV V1.16B, V4.16B
	0x038FD9C0 MOV V4.16B, V3.16B
	0x038FD9C4 B 0x38FD920
	0x038FD9C8 MOV V0.16B, V4.16B
	0x038FD9CC MOV V1.16B, V2.16B
	0x038FD9D0 MOV V4.16B, V5.16B
	0x038FD9D4 B 0x38FD920
	0x038FD9D8 MOV V0.16B, V4.16B
	0x038FD9DC MOV V1.16B, V3.16B
	0x038FD9E0 B 0x38FD91C
	0x038FD9E4 MOV V0.16B, V5.16B
	0x038FD9E8 MOV V1.16B, V4.16B
	0x038FD9EC B 0x38FD91C
	0x038FD9F0 SUB X31, X31, 0x90
	0x038FD9F4 STP D11, D10, [X31 + 0x30]
	0x038FD9F8 STP D9, D8, [X31 + 0x40]
	0x038FD9FC STP X30, X25, [X31 + 0x50]
	0x038FDA00 STP X24, X23, [X31 + 0x60]
	0x038FDA04 STP X22, X21, [X31 + 0x70]
	0x038FDA08 STP X20, X19, [X31 + 0x80]
	0x038FDA0C ADRP X20, 0xAE4000
	0x038FDA10 ADRP X19, 0x7F7000
	0x038FDA14 ADRP X22, 0x84E000
	0x038FDA18 LDRB W8, [X20 + 0x793]
	0x038FDA1C LDR X19, [X19 + 0xF60]
	0x038FDA20 LDR X22, [X22 + 0x170]
	0x038FDA24 MOV V8.16B, V3.16B
	0x038FDA28 MOV V9.16B, V2.16B
	0x038FDA2C MOV V10.16B, V1.16B
	0x038FDA30 MOV V11.16B, V0.16B
	0x038FDA34 TBNZ X8, 0x0, 0x38FDAA0
	0x038FDA38 ADRP X0, 0x84E000
	0x038FDA3C LDR X0, [X0 + 0x170]
	0x038FDA40 BL 0x1C16CF4
	0x038FDA44 ADRP X0, 0x850000
	0x038FDA48 LDR X0, [X0 + 0xC50]
	0x038FDA4C BL 0x1C16CF4
	0x038FDA50 ADRP X0, 0x850000
	0x038FDA54 LDR X0, [X0 + 0xC58]
	0x038FDA58 BL 0x1C16CF4
	0x038FDA5C ADRP X0, 0x850000
	0x038FDA60 LDR X0, [X0 + 0xC60]
	0x038FDA64 BL 0x1C16CF4
	0x038FDA68 ADRP X0, 0x850000
	0x038FDA6C LDR X0, [X0 + 0xC68]
	0x038FDA70 BL 0x1C16CF4
	0x038FDA74 ADRP X0, 0x850000
	0x038FDA78 LDR X0, [X0 + 0xC70]
	0x038FDA7C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE5000
	007 Move X22, 0x851000
	008 Move X20, 0x851000
	009 Move W8, [X21+1921]
	010 Move X22, [X22+3072]
	011 Move X20, [X20+3080]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x851000
	018 Move X0, [X0+3088]
	019 Call 0x1C17CF4
	020 Move X0, 0x851000
	021 Move X0, [X0+3080]
	022 Call 0x1C17CF4
	023 Move X0, 0x851000
	024 Move X0, [X0+3072]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1921], W8
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Color>..ctor, X0
	033 Compare X20, 0
	034 JumpIfEqual {477}
	035 Move X21, 0x851000
	036 Move X21, [X21+3088]
	037 Move W9, [X20+28]
	038 Move X8, [X20+16]
	039 Move X10, [X21]
	040 Add W9, W9, 1
	041 Move [X20+28], W9
	042 Compare X8, 0
	043 JumpIfEqual {477}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W11, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X10, -48300032
	048 Move V0, [X10+143]
	049 Add W10, W9, 1
	050 Add X8, X8, X9
	051 Move [X20+24], W10
	052 Move [X8+2], V0
	053 Move X8, [X10+32]
	054 Move X9, -48308224
	055 Move V2, [X9+352]
	056 Move S0, W31
	057 Move X8, [X8+192]
	058 Move S3, 1
	059 Move X0, X20
	060 Move X1, [X8+112]
	061 Move X8, -48308224
	062 Move V1, [X8+580]
	063 Call List`1<Color>.AddWithResize, X0, X1
	064 Move W9, [X20+28]
	065 Move X8, [X20+16]
	066 Move X10, [X21]
	067 Add W9, W9, 1
	068 Move [X20+28], W9
	069 Compare X8, 0
	070 JumpIfEqual {477}
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Move W11, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X10, -48304128
	075 Move V0, [X10+144]
	076 Add W10, W9, 1
	077 Add X8, X8, X9
	078 Move [X20+24], W10
	079 Move [X8+2], V0
	080 Move X8, [X10+32]
	081 Move X9, -48308224
	082 Move V2, [X9+996]
	083 Move S0, W31
	084 Move X8, [X8+192]
	085 Move S3, 1
	086 Move X0, X20
	087 Move X1, [X8+112]
	088 Move X8, -48308224
	089 Move V1, [X8+1112]
	090 Call List`1<Color>.AddWithResize, X0, X1
	091 Move W9, [X20+28]
	092 Move X8, [X20+16]
	093 Move X10, [X21]
	094 Add W9, W9, 1
	095 Move [X20+28], W9
	096 Compare X8, 0
	097 JumpIfEqual {477}
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Move W11, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X10, -48295936
	102 Move V0, [X10+29]
	103 Add W10, W9, 1
	104 Add X8, X8, X9
	105 Move [X20+24], W10
	106 Move [X8+2], V0
	107 Move X8, [X10+32]
	108 Move X9, -48308224
	109 Move V1, [X9+1000]
	110 Move S2, 1
	111 Move X8, [X8+192]
	112 Move S3, 1
	113 Move X0, X20
	114 Move X1, [X8+112]
	115 Move X8, -48308224
	116 Move V0, [X8+936]
	117 Call List`1<Color>.AddWithResize, X0, X1
	118 Move W9, [X20+28]
	119 Move X8, [X20+16]
	120 Move X10, [X21]
	121 Add W9, W9, 1
	122 Move [X20+28], W9
	123 Compare X8, 0
	124 JumpIfEqual {477}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W11, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X10, -48295936
	129 Move V0, [X10+53]
	130 Add W10, W9, 1
	131 Add X8, X8, X9
	132 Move [X20+24], W10
	133 Move [X8+2], V0
	134 Move X8, [X10+32]
	135 Move X9, -48308224
	136 Move V1, [X9+92]
	137 Move S3, 1
	138 Move X8, [X8+192]
	139 Move X0, X20
	140 Move V2, V1
	141 Move X1, [X8+112]
	142 Move X8, -48308224
	143 Move V0, [X8+448]
	144 Call List`1<Color>.AddWithResize, X0, X1
	145 Move W9, [X20+28]
	146 Move X8, [X20+16]
	147 Move X10, [X21]
	148 Add W9, W9, 1
	149 Move [X20+28], W9
	150 Compare X8, 0
	151 JumpIfEqual {477}
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W11, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X10, -48304128
	156 Move V0, [X10+118]
	157 Add W10, W9, 1
	158 Add X8, X8, X9
	159 Move [X20+24], W10
	160 Move [X8+2], V0
	161 Move X8, [X10+32]
	162 Move X9, -48308224
	163 Move X10, -48308224
	164 Move V1, [X9+144]
	165 Move X8, [X8+192]
	166 Move V2, [X10+408]
	167 Move S3, 1
	168 Move X0, X20
	169 Move X1, [X8+112]
	170 Move X8, -48308224
	171 Move V0, [X8+560]
	172 Call List`1<Color>.AddWithResize, X0, X1
	173 Move W9, [X20+28]
	174 Move X8, [X20+16]
	175 Move X10, [X21]
	176 Add W9, W9, 1
	177 Move [X20+28], W9
	178 Compare X8, 0
	179 JumpIfEqual {477}
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Move W11, [X8+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X10, -48300032
	184 Move V0, [X10+94]
	185 Add W10, W9, 1
	186 Add X8, X8, X9
	187 Move [X20+24], W10
	188 Move [X8+2], V0
	189 Move X8, [X10+32]
	190 Move X9, -48308224
	191 Move X10, -48308224
	192 Move V1, [X9+92]
	193 Move X8, [X8+192]
	194 Move V2, [X10+904]
	195 Move S3, 1
	196 Move X0, X20
	197 Move X1, [X8+112]
	198 Move X8, -48308224
	199 Move V0, [X8+20]
	200 Call List`1<Color>.AddWithResize, X0, X1
	201 Move W9, [X20+28]
	202 Move X8, [X20+16]
	203 Move X10, [X21]
	204 Add W9, W9, 1
	205 Move [X20+28], W9
	206 Compare X8, 0
	207 JumpIfEqual {477}
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Move W11, [X8+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X10, -48308224
	212 Move V0, [X10+113]
	213 Add W10, W9, 1
	214 Add X8, X8, X9
	215 Move [X20+24], W10
	216 Move [X8+2], V0
	217 Move X8, [X10+32]
	218 Move X9, -48308224
	219 Move V2, [X9+408]
	220 Move S1, 1
	221 Move X8, [X8+192]
	222 Move S3, 1
	223 Move X0, X20
	224 Move X1, [X8+112]
	225 Move X8, -48308224
	226 Move V0, [X8+940]
	227 Call List`1<Color>.AddWithResize, X0, X1
	228 Move W9, [X20+28]
	229 Move X8, [X20+16]
	230 Move X10, [X21]
	231 Add W9, W9, 1
	232 Move [X20+28], W9
	233 Compare X8, 0
	234 JumpIfEqual {477}
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Move W11, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X10, -48308224
	239 Move V0, [X10+205]
	240 Add W10, W9, 1
	241 Add X8, X8, X9
	242 Move [X20+24], W10
	243 Move [X8+2], V0
	244 Move X8, [X10+32]
	245 Move S0, 1
	246 Move S2, W31
	247 Move S3, 1
	248 Move X8, [X8+192]
	249 Move X0, X20
	250 Move X1, [X8+112]
	251 Move X8, -48308224
	252 Move V1, [X8+564]
	253 Call List`1<Color>.AddWithResize, X0, X1
	254 Move W9, [X20+28]
	255 Move X8, [X20+16]
	256 Move X10, [X21]
	257 Add W9, W9, 1
	258 Move [X20+28], W9
	259 Compare X8, 0
	260 JumpIfEqual {477}
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Move W11, [X8+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X10, -48295936
	265 Move V0, [X10+54]
	266 Add W10, W9, 1
	267 Add X8, X8, X9
	268 Move [X20+24], W10
	269 Move [X8+2], V0
	270 Move X8, [X10+32]
	271 Move X9, -48308224
	272 Move V2, [X9+704]
	273 Move S0, 1
	274 Move X8, [X8+192]
	275 Move S3, 1
	276 Move X0, X20
	277 Move X1, [X8+112]
	278 Move X8, -48308224
	279 Move V1, [X8+316]
	280 Call List`1<Color>.AddWithResize, X0, X1
	281 Move W9, [X20+28]
	282 Move X8, [X20+16]
	283 Move X10, [X21]
	284 Add W9, W9, 1
	285 Move [X20+28], W9
	286 Compare X8, 0
	287 JumpIfEqual {477}
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Move W11, [X8+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move X10, -48300032
	292 Move V0, [X10+183]
	293 Add W10, W9, 1
	294 Add X8, X8, X9
	295 Move [X20+24], W10
	296 Move [X8+2], V0
	297 Move X8, [X10+32]
	298 Move X9, -48308224
	299 Move V2, [X9+496]
	300 Move S0, 1
	301 Move X8, [X8+192]
	302 Move S3, 1
	303 Move X0, X20
	304 Move X1, [X8+112]
	305 Move X8, -48308224
	306 Move V1, [X8+452]
	307 Call List`1<Color>.AddWithResize, X0, X1
	308 Move W9, [X20+28]
	309 Move X8, [X20+16]
	310 Move X10, [X21]
	311 Add W9, W9, 1
	312 Move [X20+28], W9
	313 Compare X8, 0
	314 JumpIfEqual {477}
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Move W11, [X8+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X10, -48304128
	319 Move V0, [X10+247]
	320 Add W10, W9, 1
	321 Add X8, X8, X9
	322 Move [X20+24], W10
	323 Move [X8+2], V0
	324 Move X8, [X10+32]
	325 Move X9, -48308224
	326 Move X10, -48308224
	327 Move V1, [X9+204]
	328 Move X8, [X8+192]
	329 Move V2, [X10+836]
	330 Move S3, 1
	331 Move X0, X20
	332 Move X1, [X8+112]
	333 Move X8, -48308224
	334 Move V0, [X8+316]
	335 Call List`1<Color>.AddWithResize, X0, X1
	336 Move W9, [X20+28]
	337 Move X8, [X20+16]
	338 Move X10, [X21]
	339 Add W9, W9, 1
	340 Move [X20+28], W9
	341 Compare X8, 0
	342 JumpIfEqual {477}
	343 NotImplemented "Instruction LDRSW not yet implemented."
	344 Move W11, [X8+24]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X10, -48304128
	347 Move V0, [X10+84]
	348 Add W10, W9, 1
	349 Add X8, X8, X9
	350 Move [X20+24], W10
	351 Move [X8+2], V0
	352 Move X8, [X10+32]
	353 Move X9, -48308224
	354 Move X10, -48308224
	355 Move V1, [X9+120]
	356 Move X8, [X8+192]
	357 Move V2, [X10+584]
	358 Move S3, 1
	359 Move X0, X20
	360 Move X1, [X8+112]
	361 Move X8, -48308224
	362 Move V0, [X8+412]
	363 Call List`1<Color>.AddWithResize, X0, X1
	364 Move W9, [X20+28]
	365 Move X8, [X20+16]
	366 Move X10, [X21]
	367 Add W9, W9, 1
	368 Move [X20+28], W9
	369 Compare X8, 0
	370 JumpIfEqual {477}
	371 NotImplemented "Instruction LDRSW not yet implemented."
	372 Move W11, [X8+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X10, -48308224
	375 Move V0, [X10+89]
	376 Add W10, W9, 1
	377 Add X8, X8, X9
	378 Move [X20+24], W10
	379 Move [X8+2], V0
	380 Move X8, [X10+32]
	381 Move X9, -48308224
	382 Move X10, -48308224
	383 Move V1, [X9+208]
	384 Move X8, [X8+192]
	385 Move V2, [X10+732]
	386 Move S3, 1
	387 Move X0, X20
	388 Move X1, [X8+112]
	389 Move X8, -48308224
	390 Move V0, [X8+124]
	391 Call List`1<Color>.AddWithResize, X0, X1
	392 Move W9, [X20+28]
	393 Move X8, [X20+16]
	394 Move X10, [X21]
	395 Add W9, W9, 1
	396 Move [X20+28], W9
	397 Compare X8, 0
	398 JumpIfEqual {477}
	399 NotImplemented "Instruction LDRSW not yet implemented."
	400 Move W11, [X8+24]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X10, -48295936
	403 Move V0, [X10+30]
	404 Add W10, W9, 1
	405 Add X8, X8, X9
	406 Move [X20+24], W10
	407 Move [X8+2], V0
	408 Move X8, [X10+32]
	409 Move S3, 1
	410 Move X0, X20
	411 Move X8, [X8+192]
	412 Move X1, [X8+112]
	413 Move X8, -48308224
	414 Move V0, [X8+416]
	415 Move V1, V0
	416 Move V2, V0
	417 Call List`1<Color>.AddWithResize, X0, X1
	418 Move W9, [X20+28]
	419 Move X8, [X20+16]
	420 Move X10, [X21]
	421 Add W9, W9, 1
	422 Move [X20+28], W9
	423 Compare X8, 0
	424 JumpIfEqual {477}
	425 NotImplemented "Instruction LDRSW not yet implemented."
	426 Move W11, [X8+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X10, -48304128
	429 Move V0, [X10+248]
	430 Add W10, W9, 1
	431 Add X8, X8, X9
	432 Move [X20+24], W10
	433 Move [X8+2], V0
	434 Move X8, [X10+32]
	435 Move S3, 1
	436 Move X0, X20
	437 Move X8, [X8+192]
	438 Move X1, [X8+112]
	439 Move X8, -48308224
	440 Move V0, [X8+840]
	441 Move V1, V0
	442 Move V2, V0
	443 Call List`1<Color>.AddWithResize, X0, X1
	444 Move W9, [X20+28]
	445 Move X8, [X20+16]
	446 Move X10, [X21]
	447 Add W9, W9, 1
	448 Move [X20+28], W9
	449 Compare X8, 0
	450 JumpIfEqual {477}
	451 NotImplemented "Instruction LDRSW not yet implemented."
	452 Move W11, [X8+24]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move X10, -48300032
	455 Move V0, [X10+78]
	456 Add W10, W9, 1
	457 Add X8, X8, X9
	458 Move [X20+24], W10
	459 Move [X8+2], V0
	460 Move X8, [X10+32]
	461 Move S3, 1
	462 Move X0, X20
	463 Move X8, [X8+192]
	464 Move X1, [X8+112]
	465 Move X8, -48308224
	466 Move V0, [X8+608]
	467 Move V1, V0
	468 Move V2, V0
	469 Call List`1<Color>.AddWithResize, X0, X1
	470 Move [X19+40], X20
	471 Move X20, [X31+32]
	472 Move X19, [X31+40]
	473 Move X22, [X31+16]
	474 Move X21, [X31+24]
	475 Move X30, [X31+48]
	476 Return 
	477 Call 0x1C17F20

Method: UnityEngine.Color get_Item(System.Int32 i)

Disassembly:
	0x038FDA80 ADRP X0, 0x850000
	0x038FDA84 LDR X0, [X0 + 0xC78]
	0x038FDA88 BL 0x1C16CF4
	0x038FDA8C ADRP X0, 0x7F7000
	0x038FDA90 LDR X0, [X0 + 0xF60]
	0x038FDA94 BL 0x1C16CF4
	0x038FDA98 MOVZ W8, 0x1
	0x038FDA9C STRB W8, [X20 + 0x793]
	0x038FDAA0 MOVI V0.2D, 0x0
	0x038FDAA4 STP V0, V0, [X31]
	0x038FDAA8 MOV V0.16B, V11.16B
	0x038FDAAC MOV V1.16B, V10.16B
	0x038FDAB0 MOV V2.16B, V9.16B
	0x038FDAB4 MOV V3.16B, V8.16B
	0x038FDAB8 STR X31, [X31 + 0x20]
	0x038FDABC BL 0x38FD5B4
	0x038FDAC0 LDR X8, [X22]
	0x038FDAC4 LDR X19, [X19]
	0x038FDAC8 MOV X20, X0
	0x038FDACC LDR W9, [X8 + 0xE0]
	0x038FDAD0 CBNZ W9, 0x38FDAE0
	0x038FDAD4 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE5000
	006 Move W8, [X21+1922]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x851000
	014 Move X0, [X0+3096]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1922], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x851000
	022 Move X8, [X8+3096]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Color>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 i, UnityEngine.Color value)

Disassembly:
	0x038FDAD8 BL 0x1C16DFC
	0x038FDADC LDR X8, [X22]
	0x038FDAE0 LDR X8, [X8 + 0xB8]
	0x038FDAE4 LDR X0, [X8]
	0x038FDAE8 CBZ X0, 0x38FDB90
	0x038FDAEC ADRP X8, 0x850000
	0x038FDAF0 LDR X8, [X8 + 0xC50]
	0x038FDAF4 ADRP X24, 0x850000
	0x038FDAF8 ADRP X23, 0x850000
	0x038FDAFC LDR X1, [X8]
	0x038FDB00 LDR X24, [X24 + 0xC60]
	0x038FDB04 LDR X23, [X23 + 0xC58]
	0x038FDB08 ADD X8, X31, 0x0
	0x038FDB0C BL 0x2AA54BC
	0x038FDB10 MOVZ W8, 0x7F800000
	0x038FDB14 FMOV S8, W8
	0x038FDB18 LDR X1, [X24]
	0x038FDB1C ADD X0, X31, 0x0
	0x038FDB20 BL 0x2C0A728
	0x038FDB24 TBZ X0, 0x0, 0x38FDB60
	0x038FDB28 LDR X0, [X22]
	0x038FDB2C LDP X25, X21, [X31 + 0x10]
	0x038FDB30 LDR W8, [X0 + 0xE0]
	0x038FDB34 CBNZ W8, 0x38FDB3C
	0x038FDB38 BL 0x1C16DFC
	0x038FDB3C MOV X0, X20
	0x038FDB40 MOV X1, X21
	0x038FDB44 BL 0x38FD848
	0x038FDB48 FABS S0, S0
	0x038FDB4C FCMP S0, S8
	0x038FDB50 B.PL 0x38FDB18
	0x038FDB54 MOV V8.16B, V0.16B
	0x038FDB58 MOV X19, X25
	0x038FDB5C B 0x38FDB18

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAE5000
	010 Move W8, [X21+1923]
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x851000
	022 Move X0, [X0+3104]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1923], W8
	026 Move X0, [X20+40]
	027 Compare X0, 0
	028 JumpIfEqual {47}
	029 Move X8, 0x851000
	030 Move X8, [X8+3104]
	031 Move W1, W19
	032 Move V2, V9
	033 Move V3, V8
	034 Move X2, [X8]
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Move D9, [X31+16]
	040 Move D8, [X31+24]
	041 Move V0, V11
	042 Move V1, V10
	043 Move D11, [X31+64]
	044 Move D10, [X31+72]
	045 Call List`1<Color>.set_Item, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x038FDB60 LDR X1, [X23]
	0x038FDB64 ADD X0, X31, 0x0
	0x038FDB68 BL 0x2C0A83C
	0x038FDB6C MOV X0, X19
	0x038FDB70 LDP X20, X19, [X31 + 0x80]
	0x038FDB74 LDP X22, X21, [X31 + 0x70]
	0x038FDB78 LDP X24, X23, [X31 + 0x60]
	0x038FDB7C LDP X30, X25, [X31 + 0x50]
	0x038FDB80 LDP D9, D8, [X31 + 0x40]
	0x038FDB84 LDP D11, D10, [X31 + 0x30]
	0x038FDB88 ADD X31, X31, 0x90
	0x038FDB8C RET
	0x038FDB90 BL 0x1C16F20
	0x038FDB94 B 0x38FDB9C
	0x038FDB98 B 0x38FDB9C
	0x038FDB9C MOV X20, X0
	0x038FDBA0 CMP W1, 0x1
	0x038FDBA4 B.NE 0x38FDBD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE5000
	005 Move W8, [X20+1924]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x851000
	012 Move X0, [X0+3112]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1924], W8
	016 Move X8, [X19+40]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x038FDBA8 MOV X0, X20
	0x038FDBAC BL 0x3EB1AD0

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

