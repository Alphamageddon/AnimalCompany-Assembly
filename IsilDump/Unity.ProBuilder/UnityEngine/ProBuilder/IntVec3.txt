Type: UnityEngine.ProBuilder.IntVec3

Method: System.Single get_x()

Disassembly:
	0x03907374 LDR X8, [X8 + 0xF10]
	0x03907378 MOV X1, X20

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Single get_y()

Disassembly:
	0x0390737C MOV X2, X31
	0x03907380 LDR X0, [X8]

ISIL:
	001 Move V0, [X0+4]
	002 Return V0

Method: System.Single get_z()

Disassembly:
	0x03907384 BL 0x321B938
	0x03907388 ADRP X8, 0x846000

ISIL:
	001 Move V0, [X0+8]
	002 Return V0

Method: System.Void .ctor(UnityEngine.Vector3 vector)

Disassembly:
	0x0390738C LDR X8, [X8 + 0xAD0]
	0x03907390 MOV X19, X0
	0x03907394 LDR X8, [X8]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: System.String ToString()

Disassembly:
	0x03907398 LDR W9, [X8 + 0xE0]
	0x0390739C CBNZ W9, 0x39073A8
	0x039073A0 MOV X0, X8
	0x039073A4 BL 0x1C16DFC
	0x039073A8 MOV X0, X19
	0x039073AC LDP X20, X19, [X31 + 0x30]
	0x039073B0 LDP X22, X21, [X31 + 0x20]
	0x039073B4 LDP X30, X23, [X31 + 0x10]
	0x039073B8 MOVZ W1, 0x3
	0x039073BC ADD X31, X31, 0x40
	0x039073C0 B 0x39071EC
	0x039073C4 MOV X0, X20
	0x039073C8 MOV X1, X31
	0x039073CC BL 0x32E57A8
	0x039073D0 TBZ X0, 0x0, 0x390744C
	0x039073D4 MOV X0, X20
	0x039073D8 MOV X1, X31
	0x039073DC BL 0x32ECF74
	0x039073E0 MOV X20, X0
	0x039073E4 CBZ X0, 0x3907554
	0x039073E8 LDR X8, [X20]
	0x039073EC LDR X9, [X8 + 0x278]
	0x039073F0 LDR X2, [X8 + 0x280]
	0x039073F4 MOV X0, X20
	0x039073F8 MOV X1, X19
	0x039073FC BLR X9
	0x03907400 MOV X19, X31
	0x03907404 ADRP X10, 0x7EC000
	0x03907408 LDR X8, [X20]
	0x0390740C LDR X10, [X10 + 0xE00]
	0x03907410 LDRH W9, [X8 + 0x12E]
	0x03907414 LDR X1, [X10]
	0x03907418 CBZ X9, 0x390743C
	0x0390741C LDR X10, [X8 + 0xB0]
	0x03907420 ADD X10, X10, 0x8
	0x03907424 LDUR X11, [X10 - 0x8]
	0x03907428 CMP X11, X1
	0x0390742C B.EQ 0x3907500
	0x03907430 SUBS X9, X9, 0x1
	0x03907434 ADD X10, X10, 0x10
	0x03907438 B.NE 0x3907424
	0x0390743C MOV X0, X20
	0x03907440 MOV W2, W31
	0x03907444 BL 0x1C5C788
	0x03907448 B 0x390750C
	0x0390744C LDR X0, [X21]
	0x03907450 LDR W8, [X0 + 0xE0]
	0x03907454 CBNZ W8, 0x390745C
	0x03907458 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xADB000
	009 Move X23, 0x7ED000
	010 Move X22, 0x847000
	011 Move W8, [X20+2011]
	012 Move X23, [X23+2704]
	013 Move X22, [X22+3808]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x7ED000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x847000
	023 Move X0, [X0+3808]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2011], W8
	027 Move V0, [X19]
	028 Move X0, [X23]
	029 Add X1, X31, 12
	030 Move [X31+12], S0
	031 Call 0x1C17E04
	032 Move X20, X0
	033 Move V0, [X19+4]
	034 Move X0, [X23]
	035 Add X1, X31, 8
	036 Move [X31+8], S0
	037 Call 0x1C17E04
	038 Move X21, X0
	039 Move V0, [X19+8]
	040 Move X0, [X23]
	041 Add X1, X31, 4
	042 Move [X31+4], S0
	043 Call 0x1C17E04
	044 Move X8, [X22]
	045 Move X3, X0
	046 Move X1, X20
	047 Move X2, X21
	048 Move X0, X8
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X30, [X31+16]
	056 Move X23, [X31+24]
	057 Add X31, X31, 64
	058 Return X0

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.IntVec3 a, UnityEngine.ProBuilder.IntVec3 b)

Disassembly:
	0x0390745C MOV X0, X20
	0x03907460 MOV X1, X31
	0x03907464 BL 0x32EE4AC
	0x03907468 MOV X1, X31
	0x0390746C MOV X21, X0
	0x03907470 BL 0x32277A8
	0x03907474 TBNZ X0, 0x0, 0x3907370
	0x03907478 MOV X0, X21
	0x0390747C MOV X1, X31
	0x03907480 BL 0x32EC1CC
	0x03907484 MOV X0, X20
	0x03907488 MOV X1, X31
	0x0390748C BL 0x32ECECC

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31], S0
	004 Move [X31+8], S1
	005 Move [X31+8], S2
	006 Add X0, X31, 0
	007 Move V0, V3
	008 Move V1, V4
	009 Move V2, V5
	010 Call IntVec3.Equals, X0, X1
	011 Move X30, [X31+16]
	012 And W0, W0, 1
	013 Add X31, X31, 32
	014 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.IntVec3 a, UnityEngine.ProBuilder.IntVec3 b)

Disassembly:
	0x03907524 LDP X30, X23, [X31 + 0x10]
	0x03907528 ADD X31, X31, 0x40
	0x0390752C RET
	0x03907530 LDRSW X9, [X10]
	0x03907534 ADD X8, X8, X9, 0x4, LSL
	0x03907538 ADD X0, X8, 0x138
	0x0390753C LDP X8, X1, [X0]
	0x03907540 MOV X0, X21
	0x03907544 BLR X8
	0x03907548 CBNZ X22, 0x3907564
	0x0390754C CBNZ W23, 0x39073D4
	0x03907550 B 0x390751C
	0x03907554 BL 0x1C16F20
	0x03907558 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31], S0
	004 Move [X31+8], S1
	005 Move [X31+8], S2
	006 Add X0, X31, 0
	007 Move V0, V3
	008 Move V1, V4
	009 Move V2, V5
	010 Call IntVec3.Equals, X0, X1
	011 Move X30, [X31+16]
	012 NotImplemented "Instruction ORN not yet implemented."
	013 And W0, W8, 1
	014 Add X31, X31, 32
	015 Return X0

Method: System.Boolean Equals(UnityEngine.ProBuilder.IntVec3 p)

Disassembly:
	0x03907490 MOV X21, X0
	0x03907494 CBZ X0, 0x3907560
	0x03907498 LDR X8, [X21]
	0x0390749C LDR X9, [X8 + 0x278]
	0x039074A0 LDR X2, [X8 + 0x280]
	0x039074A4 MOV X0, X21
	0x039074A8 MOV X1, X19
	0x039074AC BLR X9
	0x039074B0 MOV W23, W31
	0x039074B4 MOV X22, X31
	0x039074B8 ADRP X10, 0x7EC000
	0x039074BC LDR X8, [X21]
	0x039074C0 LDR X10, [X10 + 0xE00]
	0x039074C4 LDRH W9, [X8 + 0x12E]
	0x039074C8 LDR X1, [X10]
	0x039074CC CBZ X9, 0x39074F0
	0x039074D0 LDR X10, [X8 + 0xB0]
	0x039074D4 ADD X10, X10, 0x8
	0x039074D8 LDUR X11, [X10 - 0x8]
	0x039074DC CMP X11, X1
	0x039074E0 B.EQ 0x3907530
	0x039074E4 SUBS X9, X9, 0x1
	0x039074E8 ADD X10, X10, 0x10
	0x039074EC B.NE 0x39074D8
	0x039074F0 MOV X0, X21
	0x039074F4 MOV W2, W31
	0x039074F8 BL 0x1C5C788
	0x039074FC B 0x390753C
	0x03907500 LDRSW X9, [X10]
	0x03907504 ADD X8, X8, X9, 0x4, LSL
	0x03907508 ADD X0, X8, 0x138
	0x0390750C LDP X8, X1, [X0]
	0x03907510 MOV X0, X20
	0x03907514 BLR X8
	0x03907518 CBNZ X19, 0x3907558
	0x0390751C LDP X20, X19, [X31 + 0x30]
	0x03907520 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move V9, V1
	008 Move V1, [X0]
	009 Move V10, V0
	010 Move V8, V2
	011 Move X19, X0
	012 Move V0, V1
	013 Call IntVec3.round, V0
	014 Move V0, V10
	015 Move W20, W0
	016 Call IntVec3.round, V0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move V0, [X19+4]
	019 Call IntVec3.round, V0
	020 Move V0, V9
	021 Move W20, W0
	022 Call IntVec3.round, V0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move V0, [X19+8]
	025 Call IntVec3.round, V0
	026 Move V0, V8
	027 Move W19, W0
	028 Call IntVec3.round, V0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move W0, W31
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+24]
	035 Move D9, [X31+8]
	036 Move D8, [X31+16]
	037 Move V10, [X31+48]
	038 Return X0

Method: System.Boolean Equals(UnityEngine.Vector3 p)

Disassembly:
	0x039075C4 LDR X10, [X8 + 0xB0]
	0x039075C8 ADD X10, X10, 0x8
	0x039075CC LDUR X11, [X10 - 0x8]
	0x039075D0 CMP X11, X1
	0x039075D4 B.EQ 0x39075F4
	0x039075D8 SUBS X9, X9, 0x1
	0x039075DC ADD X10, X10, 0x10
	0x039075E0 B.NE 0x39075CC
	0x039075E4 MOV X0, X21
	0x039075E8 MOV W2, W31
	0x039075EC BL 0x1C5C788
	0x039075F0 B 0x3907600
	0x039075F4 LDRSW X9, [X10]
	0x039075F8 ADD X8, X8, X9, 0x4, LSL
	0x039075FC ADD X0, X8, 0x138
	0x03907600 LDP X8, X1, [X0]
	0x03907604 MOV X0, X21
	0x03907608 BLR X8
	0x0390760C LDR X8, [X31 + 0x8]
	0x03907610 CBZ X8, 0x39076B4
	0x03907614 LDR X0, [X31 + 0x8]
	0x03907618 BL 0x1C16F18
	0x0390761C CMP W1, 0x1
	0x03907620 MOV X22, X0
	0x03907624 B.NE 0x3907640
	0x03907628 MOV X0, X22
	0x0390762C BL 0x3EB1AD0
	0x03907630 LDR X19, [X0]
	0x03907634 BL 0x3EB1AE0
	0x03907638 CBNZ X20, 0x3907404
	0x0390763C B 0x3907518
	0x03907640 MOV X19, X31
	0x03907644 B 0x390764C
	0x03907648 MOV X22, X0
	0x0390764C CBZ X20, 0x39076B0
	0x03907650 ADRP X10, 0x7EC000
	0x03907654 LDR X8, [X20]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move V9, V1
	008 Move V1, [X0]
	009 Move V10, V0
	010 Move V8, V2
	011 Move X19, X0
	012 Move V0, V1
	013 Call IntVec3.round, V0
	014 Move V0, V10
	015 Move W20, W0
	016 Call IntVec3.round, V0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move V0, [X19+4]
	019 Call IntVec3.round, V0
	020 Move V0, V9
	021 Move W20, W0
	022 Call IntVec3.round, V0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move V0, [X19+8]
	025 Call IntVec3.round, V0
	026 Move V0, V8
	027 Move W19, W0
	028 Call IntVec3.round, V0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move W0, W31
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+24]
	035 Move D9, [X31+8]
	036 Move D8, [X31+16]
	037 Move V10, [X31+48]
	038 Return X0

Method: System.Boolean Equals(System.Object b)

Disassembly:
	0x03907658 LDR X10, [X10 + 0xE00]
	0x0390765C LDRH W9, [X8 + 0x12E]
	0x03907660 LDR X1, [X10]
	0x03907664 CBZ X9, 0x3907688
	0x03907668 LDR X10, [X8 + 0xB0]
	0x0390766C ADD X10, X10, 0x8
	0x03907670 LDUR X11, [X10 - 0x8]
	0x03907674 CMP X11, X1
	0x03907678 B.EQ 0x3907698
	0x0390767C SUBS X9, X9, 0x1
	0x03907680 ADD X10, X10, 0x10
	0x03907684 B.NE 0x3907670
	0x03907688 MOV X0, X20
	0x0390768C MOV W2, W31
	0x03907690 BL 0x1C5C788
	0x03907694 B 0x39076A4
	0x03907698 LDRSW X9, [X10]
	0x0390769C ADD X8, X8, X9, 0x4, LSL
	0x039076A0 ADD X0, X8, 0x138
	0x039076A4 LDP X8, X1, [X0]
	0x039076A8 MOV X0, X20
	0x039076AC BLR X8
	0x039076B0 CBNZ X19, 0x39076BC
	0x039076B4 MOV X0, X22
	0x039076B8 BL 0x1D2C690
	0x039076BC MOV X0, X19
	0x039076C0 BL 0x1C16F18
	0x039076C4 BL 0x1990590
	0x039076C8 STR X30, [X31 - 0x20]!
	0x039076CC STP X20, X19, [X31 + 0x10]
	0x039076D0 ADRP X20, 0xADA000
	0x039076D4 ADRP X19, 0x846000
	0x039076D8 LDRB W8, [X20 + 0x7EF]
	0x039076DC LDR X19, [X19 + 0xAD0]
	0x039076E0 TBNZ X8, 0x0, 0x39076F8
	0x039076E4 ADRP X0, 0x846000
	0x039076E8 LDR X0, [X0 + 0xAD0]
	0x039076EC BL 0x1C16CF4
	0x039076F0 MOVZ W8, 0x1
	0x039076F4 STRB W8, [X20 + 0x7EF]
	0x039076F8 LDR X0, [X19]
	0x039076FC LDR W8, [X0 + 0xE0]
	0x03907700 CBNZ W8, 0x390770C
	0x03907704 BL 0x1C16DFC
	0x03907708 LDR X0, [X19]
	0x0390770C LDR X8, [X0 + 0xB8]
	0x03907710 MOV X1, X31
	0x03907714 LDR X0, [X8 + 0x10]
	0x03907718 BL 0x32E57A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move W8, [X21+2012]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x847000
	014 Move X0, [X0+3816]
	015 Call 0x1C17CF4
	016 Move X0, 0x7ED000
	017 Move X0, [X0+1440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2012], W8
	021 Compare X20, 0
	022 JumpIfEqual {45}
	023 Move X8, 0x847000
	024 Move X8, [X8+3816]
	025 Move X9, [X8]
	026 Move X8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Call 0x1C17E08
	030 Move S0, [X0]
	031 Move S1, [X0+4]
	032 Move V2, [X0+8]
	033 Move X0, X19
	034 Call IntVec3.Equals, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W0, 1
	040 Move X8, [X20]
	041 Move X9, 0x7ED000
	042 Move X9, [X9+1440]
	043 Move X9, [X9]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Move X0, X20
	052 Call 0x1C17E08
	053 Move S0, [X0]
	054 Move S1, [X0+4]
	055 Move V2, [X0+8]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call IntVec3.Equals, X0, X1
	062 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0390771C TBZ X0, 0x0, 0x390774C
	0x03907720 LDR X0, [X19]
	0x03907724 LDR W8, [X0 + 0xE0]
	0x03907728 CBNZ W8, 0x3907734

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Move X0, X31
	005 Call VectorHash.GetHashCode, X0
	006 Return X0

Method: System.Int32 round(System.Single v)

Disassembly:
	0x0390755C BL 0x1C16F18
	0x03907560 BL 0x1C16F20
	0x03907564 MOV X0, X22
	0x03907568 BL 0x1C16F18
	0x0390756C CMP W1, 0x1
	0x03907570 MOV X22, X0
	0x03907574 B.NE 0x390759C
	0x03907578 MOV X0, X22
	0x0390757C BL 0x3EB1AD0
	0x03907580 LDR X8, [X0]
	0x03907584 STR X8, [X31 + 0x8]
	0x03907588 BL 0x3EB1AE0
	0x0390758C LDR X22, [X31 + 0x8]
	0x03907590 MOVZ W23, 0x1
	0x03907594 CBNZ X21, 0x39074B8
	0x03907598 B 0x3907548
	0x0390759C STR X31, [X31 + 0x8]
	0x039075A0 B 0x39075A8
	0x039075A4 MOV X22, X0
	0x039075A8 CBZ X21, 0x390760C
	0x039075AC ADRP X10, 0x7EC000
	0x039075B0 LDR X8, [X21]
	0x039075B4 LDR X10, [X10 + 0xE00]
	0x039075B8 LDRH W9, [X8 + 0x12E]
	0x039075BC LDR X1, [X10]
	0x039075C0 CBZ X9, 0x39075E4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xADB000
	006 Move X20, 0x7F6000
	007 Move W8, [X19+2013]
	008 Move X20, [X20+2536]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7F6000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2013], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W8, 0x447A0000
	028 Move S0, W8
	029 Multiply S0, S8, S0
	030 Move X0, X31
	031 Move V8, [X31+32]
	032 Call Convert.ToInt32, V0
	033 Return X0

Method: UnityEngine.Vector3 op_Implicit(UnityEngine.ProBuilder.IntVec3 p)

Disassembly:
	0x0390772C BL 0x1C16DFC

ISIL:
	001 Return X0

Method: UnityEngine.ProBuilder.IntVec3 op_Implicit(UnityEngine.Vector3 p)

Disassembly:
	0x03907730 LDR X0, [X19]

ISIL:
	001 Return X0

