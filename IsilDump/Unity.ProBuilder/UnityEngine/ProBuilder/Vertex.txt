Type: UnityEngine.ProBuilder.Vertex

Method: UnityEngine.Vector3 get_position()

Disassembly:
	0x0393E89C BL 0x1C16CF4
	0x0393E8A0 MOVZ W8, 0x1
	0x0393E8A4 STRB W8, [X26 + 0x818]

ISIL:
	001 Move S0, [X0+16]
	002 Move S1, [X0+20]
	003 Move V2, [X0+24]
	004 Return X0

Method: System.Void set_position(UnityEngine.Vector3 value)

Disassembly:
	0x0393E8A8 LDR X0, [X20]
	0x0393E8AC LDP S10, S9, [X19 + 0x48]
	0x0393E8B0 LDR W8, [X0 + 0xE0]
	0x0393E8B4 CBNZ W8, 0x393E8BC
	0x0393E8B8 BL 0x1C16DFC
	0x0393E8BC ADRP X24, 0x7BD000
	0x0393E8C0 FMUL S0, S10, S10
	0x0393E8C4 FMUL S1, S9, S9
	0x0393E8C8 LDR X24, [X24 + 0xF08]
	0x0393E8CC FADD S0, S0, S1

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+120]
	005 Move [X0+16], S0
	006 Move [X0+24], S1
	007 Move [X0+24], S2
	008 Or W8, W8, 1
	009 Move [X0+120], W8
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Color get_color()

Disassembly:
	0x0393E8F0 LDRB W8, [X25 + 0x78F]
	0x0393E8F4 CBNZ W8, 0x393E90C
	0x0393E8F8 ADRP X0, 0x7BD000

ISIL:
	001 Move S0, [X0+28]
	002 Move S1, [X0+32]
	003 Move S2, [X0+36]
	004 Move S3, [X0+40]
	005 Return X0

Method: System.Void set_color(UnityEngine.Color value)

Disassembly:
	0x0393E8FC LDR X0, [X0 + 0xF08]
	0x0393E900 BL 0x1C16CF4
	0x0393E904 MOVZ W8, 0x1
	0x0393E908 STRB W8, [X25 + 0x78F]
	0x0393E90C LDR X8, [X24]
	0x0393E910 LDR X8, [X8 + 0xB8]
	0x0393E914 LDR V0, [X8]
	0x0393E918 STR D0, [X19 + 0x48]
	0x0393E91C LDRB W8, [X26 + 0x818]
	0x0393E920 CBNZ W8, 0x393E938

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 Move [X0+28], S0
	006 Move [X0+36], S1
	007 Move [X0+36], S2
	008 Move [X0+44], S3
	009 Or W8, W8, 32
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.Vector3 get_normal()

Disassembly:
	0x0393E954 FADD S0, S0, S1
	0x0393E958 FSQRT S0, S0
	0x0393E95C FCMP S0, S8

ISIL:
	001 Move S0, [X0+44]
	002 Move S1, [X0+48]
	003 Move V2, [X0+52]
	004 Return X0

Method: System.Void set_normal(UnityEngine.Vector3 value)

Disassembly:
	0x0393E960 B.LE 0x393E974
	0x0393E964 LDR V1, [X19 + 0x50]
	0x0393E968 UNIMPLEMENTED
	0x00000000 INVALID
	0x0393E970 B 0x393E99C
	0x0393E974 LDRB W8, [X25 + 0x78F]
	0x0393E978 CBNZ W8, 0x393E990
	0x0393E97C ADRP X0, 0x7BD000
	0x0393E980 LDR X0, [X0 + 0xF08]
	0x0393E984 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move W8, [X0+120]
	005 Move [X0+44], S0
	006 Move [X0+52], S1
	007 Move [X0+52], S2
	008 Or W8, W8, 64
	009 Move [X0+120], W8
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Vector4 get_tangent()

Disassembly:
	0x0393E9B8 BL 0x1C16CF4
	0x0393E9BC MOVZ W8, 0x1
	0x0393E9C0 STRB W8, [X21 + 0xE59]

ISIL:
	001 Move S0, [X0+56]
	002 Move S1, [X0+60]
	003 Move S2, [X0+64]
	004 Move S3, [X0+68]
	005 Return X0

Method: System.Void set_tangent(UnityEngine.Vector4 value)

Disassembly:
	0x0393E9C4 LDR X0, [X20]
	0x0393E9C8 LDR W8, [X0 + 0xE0]
	0x0393E9CC CBNZ W8, 0x393E9D4
	0x0393E9D0 BL 0x1C16DFC
	0x0393E9D4 FMUL S2, S9, S9
	0x0393E9D8 FMUL S3, S10, S10
	0x0393E9DC FMUL S1, S11, S11
	0x0393E9E0 FADD S2, S2, S3
	0x0393E9E4 FMUL S0, S12, S12
	0x0393E9E8 FADD S1, S1, S2

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 Move [X0+56], S0
	006 Move [X0+64], S1
	007 Move [X0+64], S2
	008 Move [X0+72], S3
	009 Or W8, W8, 128
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.Vector2 get_uv0()

Disassembly:
	0x0393EA1C BL 0x1C16CF4
	0x0393EA20 MOVZ W8, 0x1

ISIL:
	001 Move S0, [X0+72]
	002 Move S1, [X0+76]
	003 Return X0

Method: System.Void set_uv0(UnityEngine.Vector2 value)

Disassembly:
	0x0393EA24 STRB W8, [X23 + 0xE5A]
	0x0393EA28 LDR X8, [X22]
	0x0393EA2C LDR X8, [X8 + 0xB8]
	0x0393EA30 LDR V0, [X8]
	0x0393EA34 STUR V0, [X19 + 0x58]
	0x0393EA38 LDP S9, S10, [X19 + 0x68]
	0x0393EA3C LDRB W8, [X21 + 0xE59]
	0x0393EA40 LDP S11, S12, [X19 + 0x70]
	0x0393EA44 CBNZ W8, 0x393EA5C

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+120]
	005 Move [X0+72], S0
	006 Move [X0+80], S1
	007 Or W8, W8, 2
	008 Move [X0+120], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.Vector2 get_uv2()

Disassembly:
	0x0393EA78 FADD S2, S2, S3
	0x0393EA7C FMUL S0, S12, S12

ISIL:
	001 Move S0, [X0+80]
	002 Move S1, [X0+84]
	003 Return X0

Method: System.Void set_uv2(UnityEngine.Vector2 value)

Disassembly:
	0x0393EA80 FADD S1, S1, S2
	0x0393EA84 FADD S0, S0, S1
	0x0393EA88 FSQRT S0, S0
	0x0393EA8C FCMP S0, S8
	0x0393EA90 B.LE 0x393EAA4
	0x0393EA94 LDUR V1, [X19 + 0x68]
	0x0393EA98 UNIMPLEMENTED
	0x00000000 INVALID
	0x0393EAA0 B 0x393EACC

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 Move W8, [X0+120]
	005 Move [X0+80], S0
	006 Move [X0+88], S1
	007 Or W8, W8, 4
	008 Move [X0+120], W8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.Vector4 get_uv3()

Disassembly:
	0x0393EAD4 LDP X22, X21, [X31 + 0x60]
	0x0393EAD8 LDP X24, X23, [X31 + 0x50]
	0x0393EADC LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Move S0, [X0+88]
	002 Move S1, [X0+92]
	003 Move S2, [X0+96]
	004 Move S3, [X0+100]
	005 Return X0

Method: System.Void set_uv3(UnityEngine.Vector4 value)

Disassembly:
	0x0393EAE0 LDR X30, [X31 + 0x38]
	0x0393EAE4 LDP D9, D8, [X31 + 0x28]
	0x0393EAE8 LDP D11, D10, [X31 + 0x18]
	0x0393EAEC LDR V12, [X31 + 0x10]
	0x0393EAF0 ADD X31, X31, 0x80
	0x0393EAF4 RET
	0x0393EAF8 STR X30, [X31 - 0x30]!
	0x0393EAFC STP X22, X21, [X31 + 0x10]
	0x0393EB00 STP X20, X19, [X31 + 0x20]
	0x0393EB04 ADRP X21, 0xAA3000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 Move [X0+88], S0
	006 Move [X0+96], S1
	007 Move [X0+96], S2
	008 Move [X0+104], S3
	009 Or W8, W8, 8
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.Vector4 get_uv4()

Disassembly:
	0x0393EB38 ADRP X0, 0x810000
	0x0393EB3C LDR X0, [X0 + 0xF18]
	0x0393EB40 BL 0x1C16CF4

ISIL:
	001 Move S0, [X0+104]
	002 Move S1, [X0+108]
	003 Move S2, [X0+112]
	004 Move S3, [X0+116]
	005 Return X0

Method: System.Void set_uv4(UnityEngine.Vector4 value)

Disassembly:
	0x0393EB44 ADRP X0, 0x810000
	0x0393EB48 LDR X0, [X0 + 0xF20]
	0x0393EB4C BL 0x1C16CF4
	0x0393EB50 ADRP X0, 0x810000
	0x0393EB54 LDR X0, [X0 + 0xF28]
	0x0393EB58 BL 0x1C16CF4
	0x0393EB5C ADRP X0, 0x810000
	0x0393EB60 LDR X0, [X0 + 0xF30]
	0x0393EB64 BL 0x1C16CF4
	0x0393EB68 ADRP X0, 0x810000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 Move [X0+104], S0
	006 Move [X0+112], S1
	007 Move [X0+112], S2
	008 Move [X0+120], S3
	009 Or W8, W8, 16
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.ProBuilder.MeshArrays get_attributes()

Disassembly:
	0x0393EB9C MOV X1, X31
	0x0393EBA0 MOV X21, X0

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Boolean HasArrays(UnityEngine.ProBuilder.MeshArrays attribute)

Disassembly:
	0x0393EBA4 BL 0x3231AC4
	0x0393EBA8 LDR W8, [X20 + 0x78]
	0x0393EBAC TBZ X8, 0x0, 0x393EBF8
	0x0393EBB0 ADRP X22, 0x810000

ISIL:
	001 Move W8, [X0+120]
	002 NotImplemented "Instruction BICS not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_hasPosition()

Disassembly:
	0x0393EBB4 LDR X22, [X22 + 0xF30]
	0x0393EBB8 ADD X0, X20, 0x10
	0x0393EBBC MOV X1, X19

ISIL:
	001 Move W8, [X0+120]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_hasPosition(System.Boolean value)

Disassembly:
	0x0393E8D0 FSQRT S0, S0
	0x0393E8D4 FCMP S0, S8
	0x0393E8D8 ADRP X25, 0xA9B000
	0x0393E8DC B.LE 0x393E8F0
	0x0393E8E0 LDR V1, [X19 + 0x48]
	0x0393E8E4 UNIMPLEMENTED
	0x00000000 INVALID
	0x0393E8EC B 0x393E918

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move W8, [X0+120]
	005 NotImplemented "Instruction BFM not yet implemented."
	006 Move [X0+120], W8
	007 Move X30, [X31+16]
	008 Return 
	009 Call 0x1C17F20

Method: System.Boolean get_hasColor()

Disassembly:
	0x0393EBC0 MOV X2, X31
	0x0393EBC4 MOV X3, X31
	0x0393EBC8 BL 0x2430694

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 5
	004 And W0, W0, 31
	005 Return X0

Method: System.Void set_hasColor(System.Boolean value)

Disassembly:
	0x0393E924 ADRP X0, 0x7B5000
	0x0393E928 LDR X0, [X0 + 0x5A8]
	0x0393E92C BL 0x1C16CF4
	0x0393E930 MOVZ W8, 0x1
	0x0393E934 STRB W8, [X26 + 0x818]
	0x0393E938 LDR X0, [X20]
	0x0393E93C LDP S10, S9, [X19 + 0x50]
	0x0393E940 LDR W8, [X0 + 0xE0]
	0x0393E944 CBNZ W8, 0x393E94C
	0x0393E948 BL 0x1C16DFC
	0x0393E94C FMUL S0, S10, S10
	0x0393E950 FMUL S1, S9, S9

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 32
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFDF
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasNormal()

Disassembly:
	0x0393EBCC LDR X8, [X22]
	0x0393EBD0 MOV X1, X0
	0x0393EBD4 MOV X2, X31

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 6
	004 And W0, W0, 63
	005 Return X0

Method: System.Void set_hasNormal(System.Boolean value)

Disassembly:
	0x0393E988 MOVZ W8, 0x1
	0x0393E98C STRB W8, [X25 + 0x78F]
	0x0393E990 LDR X8, [X24]
	0x0393E994 LDR X8, [X8 + 0xB8]
	0x0393E998 LDR V0, [X8]
	0x0393E99C STR D0, [X19 + 0x50]
	0x0393E9A0 LDP S9, S10, [X19 + 0x58]
	0x0393E9A4 LDRB W8, [X21 + 0xE59]
	0x0393E9A8 LDP S11, S12, [X19 + 0x60]
	0x0393E9AC CBNZ W8, 0x393E9C4
	0x0393E9B0 ADRP X0, 0x7B5000
	0x0393E9B4 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 64
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFBF
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasTangent()

Disassembly:
	0x0393EBD8 MOV X0, X8
	0x0393EBDC BL 0x321B938
	0x0393EBE0 CBZ X21, 0x393EE2C

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 7
	004 And W0, W0, 0x7FFFFFFF
	005 Return X0

Method: System.Void set_hasTangent(System.Boolean value)

Disassembly:
	0x0393E9EC FADD S0, S0, S1
	0x0393E9F0 FSQRT S0, S0
	0x0393E9F4 FCMP S0, S8
	0x0393E9F8 B.LE 0x393EA0C
	0x0393E9FC LDUR V1, [X19 + 0x58]
	0x0393EA00 UNIMPLEMENTED
	0x00000000 INVALID
	0x0393EA08 B 0x393EA34
	0x0393EA0C LDRB W8, [X23 + 0xE5A]
	0x0393EA10 CBNZ W8, 0x393EA28
	0x0393EA14 ADRP X0, 0x7BC000
	0x0393EA18 LDR X0, [X0 + 0x9A0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 128
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFF7F
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasUV0()

Disassembly:
	0x0393EBE4 MOV X1, X0
	0x0393EBE8 MOV X0, X21
	0x0393EBEC MOV X2, X31

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_hasUV0(System.Boolean value)

Disassembly:
	0x0393EA48 ADRP X0, 0x7B5000
	0x0393EA4C LDR X0, [X0 + 0x5A8]
	0x0393EA50 BL 0x1C16CF4
	0x0393EA54 MOVZ W8, 0x1
	0x0393EA58 STRB W8, [X21 + 0xE59]
	0x0393EA5C LDR X0, [X20]
	0x0393EA60 LDR W8, [X0 + 0xE0]
	0x0393EA64 CBNZ W8, 0x393EA6C
	0x0393EA68 BL 0x1C16DFC
	0x0393EA6C FMUL S2, S9, S9
	0x0393EA70 FMUL S3, S10, S10
	0x0393EA74 FMUL S1, S11, S11

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 2
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFFD
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasUV2()

Disassembly:
	0x0393EBF0 BL 0x32338A8
	0x0393EBF4 LDR W8, [X20 + 0x78]
	0x0393EBF8 TBZ X8, 0x5, 0x393EC44

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void set_hasUV2(System.Boolean value)

Disassembly:
	0x0393EAA4 LDRB W8, [X23 + 0xE5A]
	0x0393EAA8 CBNZ W8, 0x393EAC0
	0x0393EAAC ADRP X0, 0x7BC000
	0x0393EAB0 LDR X0, [X0 + 0x9A0]
	0x0393EAB4 BL 0x1C16CF4
	0x0393EAB8 MOVZ W8, 0x1
	0x0393EABC STRB W8, [X23 + 0xE5A]
	0x0393EAC0 LDR X8, [X22]
	0x0393EAC4 LDR X8, [X8 + 0xB8]
	0x0393EAC8 LDR V0, [X8]
	0x0393EACC STUR V0, [X19 + 0x68]
	0x0393EAD0 LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 4
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFFB
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasUV3()

Disassembly:
	0x0393EBFC ADD X0, X20, 0x1C
	0x0393EC00 MOV X1, X19
	0x0393EC04 MOV X2, X31

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Void set_hasUV3(System.Boolean value)

Disassembly:
	0x0393EB08 ADRP X22, 0x7B5000
	0x0393EB0C LDRB W8, [X21 + 0x94B]
	0x0393EB10 LDR X22, [X22 + 0x8F0]
	0x0393EB14 MOV X19, X1
	0x0393EB18 MOV X20, X0
	0x0393EB1C TBNZ X8, 0x0, 0x393EB94
	0x0393EB20 ADRP X0, 0x7B5000
	0x0393EB24 LDR X0, [X0 + 0x8F0]
	0x0393EB28 BL 0x1C16CF4
	0x0393EB2C ADRP X0, 0x810000
	0x0393EB30 LDR X0, [X0 + 0xF10]
	0x0393EB34 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 8
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFF7
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Boolean get_hasUV4()

Disassembly:
	0x0393EC08 MOV X3, X31
	0x0393EC0C BL 0x21F21BC
	0x0393EC10 ADRP X8, 0x810000

ISIL:
	001 Move W8, [X0+120]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Void set_hasUV4(System.Boolean value)

Disassembly:
	0x0393EB6C LDR X0, [X0 + 0xF38]
	0x0393EB70 BL 0x1C16CF4
	0x0393EB74 ADRP X0, 0x810000
	0x0393EB78 LDR X0, [X0 + 0xF40]
	0x0393EB7C BL 0x1C16CF4
	0x0393EB80 ADRP X0, 0x810000
	0x0393EB84 LDR X0, [X0 + 0xF48]
	0x0393EB88 BL 0x1C16CF4
	0x0393EB8C MOVZ W8, 0x1
	0x0393EB90 STRB W8, [X21 + 0x94B]
	0x0393EB94 LDR X0, [X22]
	0x0393EB98 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 Move W8, [X0+120]
	005 And W31, W1, 1
	006 Move W9, 16
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 And W8, W8, 0xFFFFFFEF
	009 Or W8, W8, W9
	010 Move [X0+120], W8
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0393EC14 LDR X8, [X8 + 0xF18]
	0x0393EC18 MOV X1, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0393EC1C MOV X2, X31
	0x0393EC20 LDR X8, [X8]
	0x0393EC24 MOV X0, X8
	0x0393EC28 BL 0x321B938
	0x0393EC2C CBZ X21, 0x393EE2C
	0x0393EC30 MOV X1, X0
	0x0393EC34 MOV X0, X21
	0x0393EC38 MOV X2, X31
	0x0393EC3C BL 0x32338A8
	0x0393EC40 LDR W8, [X20 + 0x78]
	0x0393EC44 TBZ X8, 0x6, 0x393EC90
	0x0393EC48 ADD X0, X20, 0x2C
	0x0393EC4C MOV X1, X19
	0x0393EC50 MOV X2, X31
	0x0393EC54 MOV X3, X31
	0x0393EC58 BL 0x2430694
	0x0393EC5C ADRP X8, 0x810000
	0x0393EC60 LDR X8, [X8 + 0xF10]
	0x0393EC64 MOV X1, X0
	0x0393EC68 MOV X2, X31
	0x0393EC6C LDR X8, [X8]
	0x0393EC70 MOV X0, X8
	0x0393EC74 BL 0x321B938
	0x0393EC78 CBZ X21, 0x393EE2C
	0x0393EC7C MOV X1, X0
	0x0393EC80 MOV X0, X21
	0x0393EC84 MOV X2, X31
	0x0393EC88 BL 0x32338A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAA4000
	006 Move W8, [X21+2374]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x811000
	014 Move X0, [X0+32]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2374], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x811000
	021 Move X8, [X8+32]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]

Method: System.Boolean Equals(UnityEngine.ProBuilder.Vertex other)

Disassembly:
	0x0393EC8C LDR W8, [X20 + 0x78]
	0x0393EC90 TBZ X8, 0x7, 0x393ECDC
	0x0393EC94 ADD X0, X20, 0x38
	0x0393EC98 MOV X1, X19
	0x0393EC9C MOV X2, X31
	0x0393ECA0 MOV X3, X31
	0x0393ECA4 BL 0x24546F0
	0x0393ECA8 ADRP X8, 0x810000
	0x0393ECAC LDR X8, [X8 + 0xF28]
	0x0393ECB0 MOV X1, X0
	0x0393ECB4 MOV X2, X31
	0x0393ECB8 LDR X8, [X8]
	0x0393ECBC MOV X0, X8
	0x0393ECC0 BL 0x321B938
	0x0393ECC4 CBZ X21, 0x393EE2C
	0x0393ECC8 MOV X1, X0
	0x0393ECCC MOV X0, X21
	0x0393ECD0 MOV X2, X31
	0x0393ECD4 BL 0x32338A8
	0x0393ECD8 LDR W8, [X20 + 0x78]
	0x0393ECDC TBZ X8, 0x1, 0x393ED28
	0x0393ECE0 ADD X0, X20, 0x48
	0x0393ECE4 MOV X1, X19
	0x0393ECE8 MOV X2, X31
	0x0393ECEC MOV X3, X31
	0x0393ECF0 BL 0x25F34C4
	0x0393ECF4 ADRP X8, 0x810000
	0x0393ECF8 LDR X8, [X8 + 0xF38]
	0x0393ECFC MOV X1, X0
	0x0393ED00 MOV X2, X31
	0x0393ED04 LDR X8, [X8]
	0x0393ED08 MOV X0, X8
	0x0393ED0C BL 0x321B938
	0x0393ED10 CBZ X21, 0x393EE2C
	0x0393ED14 MOV X1, X0
	0x0393ED18 MOV X0, X21
	0x0393ED1C MOV X2, X31
	0x0393ED20 BL 0x32338A8
	0x0393ED24 LDR W8, [X20 + 0x78]
	0x0393ED28 TBZ X8, 0x2, 0x393ED74
	0x0393ED2C ADD X0, X20, 0x50
	0x0393ED30 MOV X1, X19
	0x0393ED34 MOV X2, X31
	0x0393ED38 MOV X3, X31
	0x0393ED3C BL 0x25F34C4
	0x0393ED40 ADRP X8, 0x810000
	0x0393ED44 LDR X8, [X8 + 0xF20]
	0x0393ED48 MOV X1, X0
	0x0393ED4C MOV X2, X31
	0x0393ED50 LDR X8, [X8]
	0x0393ED54 MOV X0, X8
	0x0393ED58 BL 0x321B938
	0x0393ED5C CBZ X21, 0x393EE2C
	0x0393ED60 MOV X1, X0
	0x0393ED64 MOV X0, X21
	0x0393ED68 MOV X2, X31
	0x0393ED6C BL 0x32338A8
	0x0393ED70 LDR W8, [X20 + 0x78]
	0x0393ED74 TBZ X8, 0x3, 0x393EDC0
	0x0393ED78 ADD X0, X20, 0x58
	0x0393ED7C MOV X1, X19
	0x0393ED80 MOV X2, X31
	0x0393ED84 MOV X3, X31
	0x0393ED88 BL 0x24546F0
	0x0393ED8C ADRP X8, 0x810000
	0x0393ED90 LDR X8, [X8 + 0xF40]
	0x0393ED94 MOV X1, X0
	0x0393ED98 MOV X2, X31
	0x0393ED9C LDR X8, [X8]
	0x0393EDA0 MOV X0, X8
	0x0393EDA4 BL 0x321B938
	0x0393EDA8 CBZ X21, 0x393EE2C
	0x0393EDAC MOV X1, X0
	0x0393EDB0 MOV X0, X21
	0x0393EDB4 MOV X2, X31
	0x0393EDB8 BL 0x32338A8
	0x0393EDBC LDR W8, [X20 + 0x78]
	0x0393EDC0 TBNZ X8, 0x4, 0x393EDCC
	0x0393EDC4 CBNZ X21, 0x393EE10
	0x0393EDC8 B 0x393EE2C
	0x0393EDCC ADD X0, X20, 0x68
	0x0393EDD0 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Compare X1, 0
	008 JumpIfEqual {124}
	009 Move X8, -48578560
	010 Move V8, [X8+3880]
	011 Move S1, [X0+20]
	012 Move S2, [X0+24]
	013 Move V0, [X0+16]
	014 Move S3, [X1+16]
	015 Move S4, [X1+20]
	016 Move V5, [X1+24]
	017 Move X20, X0
	018 Move V6, V8
	019 Move X0, X31
	020 Move X19, X1
	021 Call Math.Approx3, X0, X1, V0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {124}
	026 Move S0, [X20+28]
	027 Move S1, [X20+32]
	028 Move S2, [X20+36]
	029 Move S3, [X20+40]
	030 Move S4, [X19+28]
	031 Move S5, [X19+32]
	032 Move S6, [X19+36]
	033 Move S7, [X19+40]
	034 Move W8, 0xB717
	035 NotImplemented "Instruction MOVK not yet implemented."
	036 Move X0, X31
	037 Move [X31], W8
	038 Call Math.ApproxC, X0, X1, V0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {124}
	043 Move S0, [X20+44]
	044 Move S1, [X20+48]
	045 Move V2, [X20+52]
	046 Move S3, [X19+44]
	047 Move S4, [X19+48]
	048 Move V5, [X19+52]
	049 Move V6, V8
	050 Move X0, X31
	051 Call Math.Approx3, X0, X1, V0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {124}
	056 Move S0, [X20+56]
	057 Move S1, [X20+60]
	058 Move S2, [X20+64]
	059 Move S3, [X20+68]
	060 Move S4, [X19+56]
	061 Move S5, [X19+60]
	062 Move S6, [X19+64]
	063 Move S7, [X19+68]
	064 Move W8, 0xB717
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 Move X0, X31
	067 Move [X31], W8
	068 Call Math.Approx4, X0, X1, V0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {124}
	073 Move S0, [X20+72]
	074 Move S1, [X20+76]
	075 Move S2, [X19+72]
	076 Move S3, [X19+76]
	077 Move V4, V8
	078 Move X0, X31
	079 Call Math.Approx2, X0, X1, V0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {124}
	084 Move S0, [X20+80]
	085 Move S1, [X20+84]
	086 Move S2, [X19+80]
	087 Move S3, [X19+84]
	088 Move V4, V8
	089 Move X0, X31
	090 Call Math.Approx2, X0, X1, V0
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {124}
	095 Move S0, [X20+88]
	096 Move S1, [X20+92]
	097 Move S2, [X20+96]
	098 Move S3, [X20+100]
	099 Move S4, [X19+88]
	100 Move S5, [X19+92]
	101 Move S6, [X19+96]
	102 Move S7, [X19+100]
	103 Move W21, 0xB717
	104 NotImplemented "Instruction MOVK not yet implemented."
	105 Move X0, X31
	106 Move [X31], W21
	107 Call Math.Approx4, X0, X1, V0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {124}
	112 Move S0, [X20+104]
	113 Move S1, [X20+108]
	114 Move S2, [X20+112]
	115 Move S3, [X20+116]
	116 Move S4, [X19+104]
	117 Move S5, [X19+108]
	118 Move S6, [X19+112]
	119 Move S7, [X19+116]
	120 Move X0, X31
	121 Move [X31], W21
	122 Call Math.Approx4, X0, X1, V0
	123 And W0, W0, 1
	124 Move W0, W31
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X30, [X31+32]
	128 Move X21, [X31+40]
	129 Move V8, [X31+16]
	130 Add X31, X31, 64
	131 Return X0

Method: System.Boolean Equals(UnityEngine.ProBuilder.Vertex other, UnityEngine.ProBuilder.MeshArrays mask)

Disassembly:
	0x0393EDD4 MOV X2, X31
	0x0393EDD8 MOV X3, X31
	0x0393EDDC BL 0x24546F0
	0x0393EDE0 ADRP X8, 0x810000
	0x0393EDE4 LDR X8, [X8 + 0xF48]
	0x0393EDE8 MOV X1, X0
	0x0393EDEC MOV X2, X31
	0x0393EDF0 LDR X8, [X8]
	0x0393EDF4 MOV X0, X8
	0x0393EDF8 BL 0x321B938
	0x0393EDFC CBZ X21, 0x393EE2C
	0x0393EE00 MOV X1, X0
	0x0393EE04 MOV X0, X21
	0x0393EE08 MOV X2, X31
	0x0393EE0C BL 0x32338A8
	0x0393EE10 LDR X8, [X21]
	0x0393EE14 MOV X0, X21
	0x0393EE18 LDP X20, X19, [X31 + 0x20]
	0x0393EE1C LDP X22, X21, [X31 + 0x10]
	0x0393EE20 LDP X2, X1, [X8 + 0x168]
	0x0393EE24 LDR X30, [X31], #0x30
	0x0393EE28 BR X2
	0x0393EE2C BL 0x1C16F20
	0x0393EE30 SUB X31, X31, 0x30
	0x0393EE34 STR X30, [X31 + 0x20]
	0x0393EE38 LDR X8, [X31 + 0x30]
	0x0393EE3C MOVZ W9, 0xFF
	0x0393EE40 STR W9, [X31 + 0x8]
	0x0393EE44 STR X8, [X31]
	0x0393EE48 BL 0x393EE58
	0x0393EE4C LDR X30, [X31 + 0x20]
	0x0393EE50 ADD X31, X31, 0x30
	0x0393EE54 RET
	0x0393EE58 SUB X31, X31, 0xB0
	0x0393EE5C STP X29, X30, [X31 + 0x50]
	0x0393EE60 STP X28, X27, [X31 + 0x60]
	0x0393EE64 STP X26, X25, [X31 + 0x70]
	0x0393EE68 STP X24, X23, [X31 + 0x80]
	0x0393EE6C STP X22, X21, [X31 + 0x90]
	0x0393EE70 STP X20, X19, [X31 + 0xA0]
	0x0393EE74 ADRP X19, 0xAA3000
	0x0393EE78 LDRB W8, [X19 + 0x94C]
	0x0393EE7C MOV X26, X0
	0x0393EE80 STP X7, X6, [X31 + 0x10]
	0x0393EE84 STP X5, X4, [X31 + 0x20]
	0x0393EE88 STP X3, X2, [X31 + 0x30]
	0x0393EE8C STR X1, [X31 + 0x40]
	0x0393EE90 TBNZ X8, 0x0, 0x393EF14
	0x0393EE94 ADRP X0, 0x7BA000
	0x0393EE98 LDR X0, [X0 + 0x140]
	0x0393EE9C BL 0x1C16CF4
	0x0393EEA0 ADRP X0, 0x810000
	0x0393EEA4 LDR X0, [X0 + 0x1E8]
	0x0393EEA8 BL 0x1C16CF4
	0x0393EEAC ADRP X0, 0x80F000
	0x0393EEB0 LDR X0, [X0 + 0xF60]
	0x0393EEB4 BL 0x1C16CF4
	0x0393EEB8 ADRP X0, 0x80F000
	0x0393EEBC LDR X0, [X0 + 0xFF0]
	0x0393EEC0 BL 0x1C16CF4
	0x0393EEC4 ADRP X0, 0x810000
	0x0393EEC8 LDR X0, [X0 + 0xF50]
	0x0393EECC BL 0x1C16CF4
	0x0393EED0 ADRP X0, 0x810000
	0x0393EED4 LDR X0, [X0 + 0x8]
	0x0393EED8 BL 0x1C16CF4
	0x0393EEDC ADRP X0, 0x80F000
	0x0393EEE0 LDR X0, [X0 + 0xA88]
	0x0393EEE4 BL 0x1C16CF4
	0x0393EEE8 ADRP X0, 0x7B7000
	0x0393EEEC LDR X0, [X0 + 0x9B0]
	0x0393EEF0 BL 0x1C16CF4
	0x0393EEF4 ADRP X0, 0x810000
	0x0393EEF8 LDR X0, [X0 + 0x48]
	0x0393EEFC BL 0x1C16CF4
	0x0393EF00 ADRP X0, 0x810000
	0x0393EF04 LDR X0, [X0 + 0x20]
	0x0393EF08 BL 0x1C16CF4
	0x0393EF0C MOVZ W8, 0x1
	0x0393EF10 STRB W8, [X19 + 0x94C]
	0x0393EF14 CBZ X26, 0x393F790
	0x0393EF18 ADRP X10, 0x810000
	0x0393EF1C LDR X8, [X26]
	0x0393EF20 LDR X10, [X10 + 0x1E8]
	0x0393EF24 LDRH W9, [X8 + 0x12E]
	0x0393EF28 LDR X1, [X10]
	0x0393EF2C CBZ X9, 0x393EF50
	0x0393EF30 LDR X10, [X8 + 0xB0]
	0x0393EF34 ADD X10, X10, 0x8
	0x0393EF38 LDUR X11, [X10 - 0x8]
	0x0393EF3C CMP X11, X1
	0x0393EF40 B.EQ 0x393EF60
	0x0393EF44 SUBS X9, X9, 0x1
	0x0393EF48 ADD X10, X10, 0x10
	0x0393EF4C B.NE 0x393EF38

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {147}
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X2
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {29}
	015 Move X8, -48578560
	016 Move S1, [X20+20]
	017 Move S2, [X20+24]
	018 Move V0, [X20+16]
	019 Move S3, [X19+16]
	020 Move S4, [X19+20]
	021 Move V5, [X19+24]
	022 Move V6, [X8+3880]
	023 Move X0, X31
	024 Call Math.Approx3, X0, X1, V0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {147}
	029 Move TEMP, X21
	030 And TEMP, TEMP, 32
	031 Compare TEMP, 32
	032 JumpIfNotEqual {50}
	033 Move S2, [X20+36]
	034 Move S3, [X20+40]
	035 Move S0, [X20+28]
	036 Move S1, [X20+32]
	037 Move S4, [X19+28]
	038 Move S5, [X19+32]
	039 Move S6, [X19+36]
	040 Move S7, [X19+40]
	041 Move W8, 0xB717
	042 NotImplemented "Instruction MOVK not yet implemented."
	043 Move X0, X31
	044 Move [X31], W8
	045 Call Math.ApproxC, X0, X1, V0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {147}
	050 Move TEMP, X21
	051 And TEMP, TEMP, 64
	052 Compare TEMP, 64
	053 JumpIfNotEqual {68}
	054 Move X8, -48578560
	055 Move S1, [X20+48]
	056 Move S2, [X20+52]
	057 Move V0, [X20+44]
	058 Move S3, [X19+44]
	059 Move S4, [X19+48]
	060 Move V5, [X19+52]
	061 Move V6, [X8+3880]
	062 Move X0, X31
	063 Call Math.Approx3, X0, X1, V0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {147}
	068 Move TEMP, X21
	069 And TEMP, TEMP, 128
	070 Compare TEMP, 128
	071 JumpIfNotEqual {89}
	072 Move S2, [X20+64]
	073 Move S3, [X20+68]
	074 Move S0, [X20+56]
	075 Move S1, [X20+60]
	076 Move S4, [X19+56]
	077 Move S5, [X19+60]
	078 Move S6, [X19+64]
	079 Move S7, [X19+68]
	080 Move W8, 0xB717
	081 NotImplemented "Instruction MOVK not yet implemented."
	082 Move X0, X31
	083 Move [X31], W8
	084 Call Math.Approx4, X0, X1, V0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {147}
	089 Move TEMP, X21
	090 And TEMP, TEMP, 2
	091 Compare TEMP, 2
	092 JumpIfNotEqual {105}
	093 Move X8, -48578560
	094 Move S0, [X20+72]
	095 Move S1, [X20+76]
	096 Move S2, [X19+72]
	097 Move S3, [X19+76]
	098 Move V4, [X8+3880]
	099 Move X0, X31
	100 Call Math.Approx2, X0, X1, V0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {147}
	105 Move TEMP, X21
	106 And TEMP, TEMP, 4
	107 Compare TEMP, 4
	108 JumpIfNotEqual {121}
	109 Move X8, -48578560
	110 Move S0, [X20+80]
	111 Move S1, [X20+84]
	112 Move S2, [X19+80]
	113 Move S3, [X19+84]
	114 Move V4, [X8+3880]
	115 Move X0, X31
	116 Call Math.Approx2, X0, X1, V0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {147}
	121 Move TEMP, X21
	122 And TEMP, TEMP, 8
	123 Compare TEMP, 8
	124 JumpIfNotEqual {142}
	125 Move S2, [X20+96]
	126 Move S3, [X20+100]
	127 Move S0, [X20+88]
	128 Move S1, [X20+92]
	129 Move S4, [X19+88]
	130 Move S5, [X19+92]
	131 Move S6, [X19+96]
	132 Move S7, [X19+100]
	133 Move W8, 0xB717
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 Move X0, X31
	136 Move [X31], W8
	137 Call Math.Approx4, X0, X1, V0
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {147}
	142 Move TEMP, X21
	143 And TEMP, TEMP, 16
	144 Compare TEMP, 16
	145 JumpIfEqual {154}
	146 Move W0, 1
	147 Move W0, W31
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X30, [X31+16]
	151 Move X21, [X31+24]
	152 Add X31, X31, 48
	153 Return X0
	154 Move S2, [X20+112]
	155 Move S3, [X20+116]
	156 Move S0, [X20+104]
	157 Move S1, [X20+108]
	158 Move S4, [X19+104]
	159 Move S5, [X19+108]
	160 Move S6, [X19+112]
	161 Move S7, [X19+116]
	162 Move W8, 0xB717
	163 NotImplemented "Instruction MOVK not yet implemented."
	164 Move X0, X31
	165 Move [X31], W8
	166 Call Math.Approx4, X0, X1, V0
	167 And W0, W0, 1

Method: System.Int32 GetHashCode()

Disassembly:
	0x0393EF50 MOV X0, X26
	0x0393EF54 MOV W2, W31
	0x0393EF58 BL 0x1C5C788
	0x0393EF5C B 0x393EF6C
	0x0393EF60 LDRSW X9, [X10]
	0x0393EF64 ADD X8, X8, X9, 0x4, LSL
	0x0393EF68 ADD X0, X8, 0x138
	0x0393EF6C LDP X8, X1, [X0]
	0x0393EF70 ADRP X29, 0x80F000
	0x0393EF74 LDR W19, [X31 + 0xB8]
	0x0393EF78 LDR X29, [X29 + 0xF60]
	0x0393EF7C MOV X0, X26
	0x0393EF80 BLR X8
	0x0393EF84 MOV W28, W0
	0x0393EF88 CMP W0, 0x1
	0x0393EF8C B.LT 0x393EFD0
	0x0393EF90 LDR X8, [X26]
	0x0393EF94 LDR X1, [X29]
	0x0393EF98 LDRH W9, [X8 + 0x12E]
	0x0393EF9C CBZ X9, 0x393EFC0
	0x0393EFA0 LDR X10, [X8 + 0xB0]
	0x0393EFA4 ADD X10, X10, 0x8
	0x0393EFA8 LDUR X11, [X10 - 0x8]
	0x0393EFAC CMP X11, X1
	0x0393EFB0 B.EQ 0x393F078
	0x0393EFB4 SUBS X9, X9, 0x1
	0x0393EFB8 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move S0, [X0+16]
	005 Move S1, [X0+20]
	006 Move V2, [X0+24]
	007 Move X19, X0
	008 Move X0, X31
	009 Call VectorHash.GetHashCode, X0
	010 Move S0, [X19+72]
	011 Move S1, [X19+76]
	012 Move W20, W0
	013 Move X0, X31
	014 Call VectorHash.GetHashCode, X0
	015 Move S0, [X19+44]
	016 Move S1, [X19+48]
	017 Move V2, [X19+52]
	018 Move W19, W0
	019 Move X0, X31
	020 Call VectorHash.GetHashCode, X0
	021 Move W8, 29
	022 NotImplemented "Instruction MADD not yet implemented."
	023 Move W9, W8
	024 ShiftRight W9, 27
	025 And W9, W9, 0x3FFFFFF
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Subtract W8, W9, W8
	029 Move W9, 0xBDAD
	030 Add W8, W8, W0
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Add W0, W8, W9
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void .ctor(UnityEngine.ProBuilder.Vertex vertex)

Disassembly:
	0x0393EFBC B.NE 0x393EFA8
	0x0393EFC0 MOV X0, X26
	0x0393EFC4 MOV W2, W31
	0x0393EFC8 BL 0x1C5C788
	0x0393EFCC B 0x393F084
	0x0393EFD0 ADRP X8, 0x810000
	0x0393EFD4 LDR X8, [X8 + 0x20]
	0x0393EFD8 LDR X0, [X8]
	0x0393EFDC BL 0x1C16F10
	0x0393EFE0 MOV X1, X31
	0x0393EFE4 MOV X27, X0
	0x0393EFE8 BL 0x33BDD8C
	0x0393EFEC TBZ X19, 0x0, 0x393F09C
	0x0393EFF0 CBZ X27, 0x393F788
	0x0393EFF4 LDR W8, [X27 + 0x78]
	0x0393EFF8 AND W8, W8, 0x1
	0x0393EFFC STR W8, [X31 + 0x4C]
	0x0393F000 TBZ X19, 0x5, 0x393F0A4
	0x0393F004 CBZ X27, 0x393F788
	0x0393F008 LDR W8, [X27 + 0x78]
	0x0393F00C UBFM W8, W8, 0x5, 0x5
	0x0393F010 STR W8, [X31 + 0x48]
	0x0393F014 TBZ X19, 0x1, 0x393F0AC
	0x0393F018 CBZ X27, 0x393F788
	0x0393F01C LDR W8, [X27 + 0x78]
	0x0393F020 UBFM W21, W8, 0x1, 0x1
	0x0393F024 TBZ X19, 0x6, 0x393F0B4
	0x0393F028 CBZ X27, 0x393F788
	0x0393F02C LDR W8, [X27 + 0x78]
	0x0393F030 UBFM W22, W8, 0x6, 0x6
	0x0393F034 TBZ X19, 0x7, 0x393F0BC
	0x0393F038 CBZ X27, 0x393F788
	0x0393F03C LDR W8, [X27 + 0x78]
	0x0393F040 UBFM W23, W8, 0x7, 0x7
	0x0393F044 TBZ X19, 0x2, 0x393F0C4
	0x0393F048 CBZ X27, 0x393F788
	0x0393F04C LDR W8, [X27 + 0x78]
	0x0393F050 UBFM W24, W8, 0x2, 0x2
	0x0393F054 TBZ X19, 0x3, 0x393F0CC
	0x0393F058 CBZ X27, 0x393F788
	0x0393F05C LDR W8, [X27 + 0x78]
	0x0393F060 UBFM W25, W8, 0x3, 0x3
	0x0393F064 TBZ X19, 0x4, 0x393F0D4
	0x0393F068 CBZ X27, 0x393F788
	0x0393F06C LDR W8, [X27 + 0x78]
	0x0393F070 UBFM W19, W8, 0x4, 0x4
	0x0393F074 B 0x393F0D8
	0x0393F078 LDRSW X9, [X10]
	0x0393F07C ADD X8, X8, X9, 0x4, LSL
	0x0393F080 ADD X0, X8, 0x138
	0x0393F084 LDP X8, X2, [X0]
	0x0393F088 MOV X0, X26
	0x0393F08C MOV W1, W31
	0x0393F090 BLR X8
	0x0393F094 MOV X27, X0
	0x0393F098 TBNZ X19, 0x0, 0x393EFF0
	0x0393F09C STR W31, [X31 + 0x4C]
	0x0393F0A0 TBNZ X19, 0x5, 0x393F004
	0x0393F0A4 STR W31, [X31 + 0x48]
	0x0393F0A8 TBNZ X19, 0x1, 0x393F018
	0x0393F0AC MOV W21, W31
	0x0393F0B0 TBNZ X19, 0x6, 0x393F028
	0x0393F0B4 MOV W22, W31
	0x0393F0B8 TBNZ X19, 0x7, 0x393F038
	0x0393F0BC MOV W23, W31
	0x0393F0C0 TBNZ X19, 0x2, 0x393F048
	0x0393F0C4 MOV W24, W31
	0x0393F0C8 TBNZ X19, 0x3, 0x393F058
	0x0393F0CC MOV W25, W31
	0x0393F0D0 TBNZ X19, 0x4, 0x393F068
	0x0393F0D4 MOV W19, W31
	0x0393F0D8 ADRP X20, 0x7B6000
	0x0393F0DC LDR X20, [X20 + 0x9B0]
	0x0393F0E0 LDR W8, [X31 + 0x4C]
	0x0393F0E4 CBZ W8, 0x393F0F8
	0x0393F0E8 LDR X0, [X20]
	0x0393F0EC MOV W1, W28
	0x0393F0F0 BL 0x1C16D6C
	0x0393F0F4 B 0x393F0FC
	0x0393F0F8 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {80}
	010 Move W8, [X20+24]
	011 Move X9, [X20+16]
	012 Move W10, [X19+120]
	013 Move [X19+24], W8
	014 Move [X19+16], X9
	015 Move W8, [X20+120]
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Move [X19+120], W10
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19+28], V0
	020 Move W8, [X20+120]
	021 Move W8, W8
	022 ShiftRight W8, 5
	023 And W8, W8, 0x7FFFFFFF
	024 NotImplemented "Instruction BFM not yet implemented."
	025 Move [X19+120], W10
	026 Move X8, [X20+72]
	027 Move [X19+72], X8
	028 Move W8, [X20+120]
	029 Move W8, W8
	030 ShiftRight W8, 1
	031 And W8, W8, 0x7FFFFFFF
	032 NotImplemented "Instruction BFM not yet implemented."
	033 Move [X19+120], W10
	034 Move W8, [X20+52]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move [X19+52], W8
	037 Move [X19+44], X9
	038 Move W8, [X20+120]
	039 Move W8, W8
	040 ShiftRight W8, 6
	041 And W8, W8, 0x7FFFFFFF
	042 NotImplemented "Instruction BFM not yet implemented."
	043 Move [X19+120], W10
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move [X19+56], V0
	046 Move W8, [X20+120]
	047 Move W8, W8
	048 ShiftRight W8, 7
	049 And W8, W8, 0x7FFFFFFF
	050 NotImplemented "Instruction BFM not yet implemented."
	051 Move [X19+120], W10
	052 Move X8, [X20+80]
	053 Move [X19+80], X8
	054 Move W8, [X20+120]
	055 Move W8, W8
	056 ShiftRight W8, 2
	057 And W8, W8, 0x7FFFFFFF
	058 NotImplemented "Instruction BFM not yet implemented."
	059 Move [X19+120], W10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move [X19+88], V0
	062 Move W8, [X20+120]
	063 Move W8, W8
	064 ShiftRight W8, 3
	065 And W8, W8, 0x7FFFFFFF
	066 NotImplemented "Instruction BFM not yet implemented."
	067 Move [X19+120], W10
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move [X19+104], V0
	070 Move W8, [X20+120]
	071 Move W8, W8
	072 ShiftRight W8, 4
	073 And W8, W8, 0x7FFFFFFF
	074 NotImplemented "Instruction BFM not yet implemented."
	075 Move [X19+120], W10
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Return 
	080 Move X0, 0x7BA000
	081 Move X0, [X0+1320]
	082 Call 0x1C17D08
	083 Call 0x1C17F10
	084 Move X19, X0
	085 Move X0, 0x810000
	086 Move X0, [X0+1560]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Move X2, X31
	091 Call ArgumentNullException..ctor, X0, X1
	092 Move X0, 0x810000
	093 Move X0, [X0+3832]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Call 0x1C17DEC

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F0FC LDR X8, [X31 + 0x40]
	0x0393F100 STR X0, [X8]
	0x0393F104 LDR W8, [X31 + 0x48]
	0x0393F108 CBZ W8, 0x393F124
	0x0393F10C ADRP X8, 0x7B9000
	0x0393F110 LDR X8, [X8 + 0x140]
	0x0393F114 MOV W1, W28
	0x0393F118 LDR X0, [X8]
	0x0393F11C BL 0x1C16D6C
	0x0393F120 B 0x393F128

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move X8, X0
	003 Move W0, W31
	004 Compare X8, 0
	005 JumpIfEqual {12}
	006 Compare X1, 0
	007 JumpIfEqual {12}
	008 Move X0, X8
	009 Call Vertex.Equals, X0, X1
	010 Return X0
	011 Move W0, 1
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F124 MOV X0, X31
	0x0393F128 ADRP X27, 0x80E000
	0x0393F12C LDR X27, [X27 + 0xA88]
	0x0393F130 LDR X8, [X31 + 0x38]
	0x0393F134 STR X0, [X8]
	0x0393F138 CBZ W21, 0x393F14C
	0x0393F13C LDR X0, [X27]
	0x0393F140 MOV W1, W28
	0x0393F144 BL 0x1C16D6C
	0x0393F148 B 0x393F150
	0x0393F14C MOV X0, X31
	0x0393F150 LDR X8, [X31 + 0x30]
	0x0393F154 STR X0, [X8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Compare X1, 0
	006 JumpIfEqual {12}
	007 Move [X31-16], X30
	008 Call Vertex.Equals, X0, X1
	009 Xor W8, W0, 1
	010 Move X30, [X31+16]
	011 Move W8, W31
	012 And W0, W8, 1
	013 Return X0

Method: UnityEngine.ProBuilder.Vertex op_Addition(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F158 CBZ W22, 0x393F16C

ISIL:
No ISIL was generated
Method: UnityEngine.ProBuilder.Vertex Add(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F15C LDR X0, [X20]
	0x0393F160 MOV W1, W28
	0x0393F164 BL 0x1C16D6C
	0x0393F168 B 0x393F170
	0x0393F16C MOV X0, X31
	0x0393F170 LDR X8, [X31 + 0x28]
	0x0393F174 STR X0, [X8]
	0x0393F178 CBZ W23, 0x393F194
	0x0393F17C ADRP X8, 0x80F000
	0x0393F180 LDR X8, [X8 + 0x48]
	0x0393F184 MOV W1, W28
	0x0393F188 LDR X0, [X8]
	0x0393F18C BL 0x1C16D6C
	0x0393F190 B 0x393F198
	0x0393F194 MOV X0, X31
	0x0393F198 LDR X8, [X31 + 0x20]
	0x0393F19C STR W22, [X31 + 0x4]
	0x0393F1A0 STR X0, [X8]
	0x0393F1A4 CBZ W24, 0x393F1B8
	0x0393F1A8 LDR X0, [X27]
	0x0393F1AC MOV W1, W28
	0x0393F1B0 BL 0x1C16D6C
	0x0393F1B4 B 0x393F1BC
	0x0393F1B8 MOV X0, X31
	0x0393F1BC LDR X8, [X31 + 0xB0]
	0x0393F1C0 ADRP X9, 0x80F000
	0x0393F1C4 ADRP X27, 0x80F000
	0x0393F1C8 MOV W22, W21
	0x0393F1CC STR X8, [X31 + 0x8]
	0x0393F1D0 LDR X9, [X9 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA3000
	007 Move X22, 0x810000
	008 Move W8, [X21+2375]
	009 Move X22, [X22+32]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x810000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2375], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X21, X0
	025 Call Vertex..ctor, X0, X1
	026 Compare X21, 0
	027 JumpIfEqual {38}
	028 Move X0, X21
	029 Move X1, X19
	030 Call Vertex.Add, X0, X1
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void Add(UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F1D4 LDR X27, [X27 + 0xF50]
	0x0393F1D8 LDR X8, [X31 + 0x18]
	0x0393F1DC STR X0, [X8]
	0x0393F1E0 CBZ W25, 0x393F208
	0x0393F1E4 LDR X0, [X9]
	0x0393F1E8 MOV X21, X9
	0x0393F1EC BL 0x1C16F10
	0x0393F1F0 LDR X2, [X27]
	0x0393F1F4 MOV W1, W28
	0x0393F1F8 MOV X20, X27
	0x0393F1FC MOV X27, X0
	0x0393F200 BL 0x30CE660
	0x0393F204 B 0x393F214
	0x0393F208 MOV X21, X9
	0x0393F20C MOV X20, X27
	0x0393F210 MOV X27, X31
	0x0393F214 LDR X8, [X31 + 0x10]
	0x0393F218 STR X27, [X8]
	0x0393F21C CBZ W19, 0x393F23C
	0x0393F220 LDR X0, [X21]
	0x0393F224 BL 0x1C16F10
	0x0393F228 LDR X2, [X20]
	0x0393F22C MOV W1, W28
	0x0393F230 MOV X27, X0
	0x0393F234 BL 0x30CE660
	0x0393F238 B 0x393F240
	0x0393F23C MOV X27, X31
	0x0393F240 MOV W21, W22
	0x0393F244 LDR X8, [X31 + 0x8]
	0x0393F248 LDR W22, [X31 + 0x4]
	0x0393F24C CMP W28, 0x1
	0x0393F250 STR X27, [X8]
	0x0393F254 B.LT 0x393F768
	0x0393F258 MOV X27, X31
	0x0393F25C MOV W20, W28
	0x0393F260 LDR W8, [X31 + 0x4C]
	0x0393F264 CBZ W8, 0x393F2F8
	0x0393F268 LDR X8, [X26]
	0x0393F26C LDR X9, [X31 + 0x40]
	0x0393F270 LDR X1, [X29]
	0x0393F274 LDR X28, [X9]
	0x0393F278 LDRH W9, [X8 + 0x12E]
	0x0393F27C CBZ X9, 0x393F2A0
	0x0393F280 LDR X10, [X8 + 0xB0]
	0x0393F284 ADD X10, X10, 0x8
	0x0393F288 LDUR X11, [X10 - 0x8]
	0x0393F28C CMP X11, X1
	0x0393F290 B.EQ 0x393F2B0
	0x0393F294 SUBS X9, X9, 0x1
	0x0393F298 ADD X10, X10, 0x10
	0x0393F29C B.NE 0x393F288
	0x0393F2A0 MOV X0, X26
	0x0393F2A4 MOV W2, W31
	0x0393F2A8 BL 0x1C5C788
	0x0393F2AC B 0x393F2BC
	0x0393F2B0 LDRSW X9, [X10]
	0x0393F2B4 ADD X8, X8, X9, 0x4, LSL
	0x0393F2B8 ADD X0, X8, 0x138
	0x0393F2BC LDP X8, X2, [X0]
	0x0393F2C0 MOV X0, X26
	0x0393F2C4 MOV W1, W27

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {48}
	005 Move V0, [X0+16]
	006 Move V1, [X1+16]
	007 Move V2, [X0+24]
	008 Move V3, [X1+24]
	009 Add V0, V0, V1
	010 Move [X0+16], D0
	011 Add S2, S2, S3
	012 Move [X0+24], S2
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 Add V0, V1, V0
	017 Move [X0+28], V0
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move V1, [X0+52]
	020 Move V3, [X1+52]
	021 Add V0, V2, V0
	022 Move [X0+44], D0
	023 Add S1, S1, S3
	024 Move [X0+52], S1
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Add V0, V2, V0
	028 Move [X0+56], V0
	029 Move V0, [X1+72]
	030 Move D1, [X0+72]
	031 Move D2, [X0+80]
	032 Add V0, V1, V0
	033 Move [X0+72], D0
	034 Move V0, [X1+80]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Add V0, V2, V0
	037 Move [X0+80], D0
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Add V0, V1, V0
	040 Move [X0+88], V0
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Add V0, V0, V1
	044 Move [X0+104], V0
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Return 
	048 Move X0, 0x7BA000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x7E2000
	054 Move X0, [X0+960]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0x810000
	061 Move X0, [X0+3840]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Vertex op_Subtraction(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F2C8 BLR X8

ISIL:
No ISIL was generated
Method: UnityEngine.ProBuilder.Vertex Subtract(UnityEngine.ProBuilder.Vertex a, UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F2CC CBZ X0, 0x393F788
	0x0393F2D0 CBZ X28, 0x393F788
	0x0393F2D4 LDR W8, [X28 + 0x18]
	0x0393F2D8 CMP X27, X8
	0x0393F2DC B.CS 0x393F78C
	0x0393F2E0 LDR V0, [X0 + 0x10]
	0x0393F2E4 LDR V1, [X0 + 0x18]
	0x0393F2E8 MOVZ W8, 0xC
	0x0393F2EC MADD X8, X27, X8, X28
	0x0393F2F0 STR D0, [X8 + 0x20]
	0x0393F2F4 STR S1, [X8 + 0x28]
	0x0393F2F8 LDR W8, [X31 + 0x48]
	0x0393F2FC CBZ W8, 0x393F384
	0x0393F300 LDR X8, [X26]
	0x0393F304 LDR X9, [X31 + 0x38]
	0x0393F308 LDR X1, [X29]
	0x0393F30C LDR X28, [X9]
	0x0393F310 LDRH W9, [X8 + 0x12E]
	0x0393F314 CBZ X9, 0x393F338
	0x0393F318 LDR X10, [X8 + 0xB0]
	0x0393F31C ADD X10, X10, 0x8
	0x0393F320 LDUR X11, [X10 - 0x8]
	0x0393F324 CMP X11, X1
	0x0393F328 B.EQ 0x393F348
	0x0393F32C SUBS X9, X9, 0x1
	0x0393F330 ADD X10, X10, 0x10
	0x0393F334 B.NE 0x393F320
	0x0393F338 MOV X0, X26
	0x0393F33C MOV W2, W31
	0x0393F340 BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA3000
	007 Move X22, 0x810000
	008 Move W8, [X21+2376]
	009 Move X22, [X22+32]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x810000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2376], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X21, X0
	025 Call Vertex..ctor, X0, X1
	026 Compare X21, 0
	027 JumpIfEqual {38}
	028 Move X0, X21
	029 Move X1, X19
	030 Call Vertex.Subtract, X0, X1
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void Subtract(UnityEngine.ProBuilder.Vertex b)

Disassembly:
	0x0393F344 B 0x393F354
	0x0393F348 LDRSW X9, [X10]
	0x0393F34C ADD X8, X8, X9, 0x4, LSL
	0x0393F350 ADD X0, X8, 0x138
	0x0393F354 LDP X8, X2, [X0]
	0x0393F358 MOV X0, X26
	0x0393F35C MOV W1, W27
	0x0393F360 BLR X8
	0x0393F364 CBZ X0, 0x393F788
	0x0393F368 CBZ X28, 0x393F788
	0x0393F36C LDR W8, [X28 + 0x18]
	0x0393F370 CMP X27, X8
	0x0393F374 B.CS 0x393F78C
	0x0393F378 LDUR V0, [X0 + 0x1C]
	0x0393F37C ADD X8, X28, X27, 0x4, LSL
	0x0393F380 STR V0, [X8 + 0x2]
	0x0393F384 CBZ W21, 0x393F40C
	0x0393F388 LDR X8, [X26]
	0x0393F38C LDR X9, [X31 + 0x30]
	0x0393F390 LDR X1, [X29]
	0x0393F394 LDR X28, [X9]
	0x0393F398 LDRH W9, [X8 + 0x12E]
	0x0393F39C CBZ X9, 0x393F3C0
	0x0393F3A0 LDR X10, [X8 + 0xB0]
	0x0393F3A4 ADD X10, X10, 0x8
	0x0393F3A8 LDUR X11, [X10 - 0x8]
	0x0393F3AC CMP X11, X1
	0x0393F3B0 B.EQ 0x393F3D0
	0x0393F3B4 SUBS X9, X9, 0x1
	0x0393F3B8 ADD X10, X10, 0x10
	0x0393F3BC B.NE 0x393F3A8
	0x0393F3C0 MOV X0, X26
	0x0393F3C4 MOV W2, W31
	0x0393F3C8 BL 0x1C5C788
	0x0393F3CC B 0x393F3DC
	0x0393F3D0 LDRSW X9, [X10]
	0x0393F3D4 ADD X8, X8, X9, 0x4, LSL
	0x0393F3D8 ADD X0, X8, 0x138
	0x0393F3DC LDP X8, X2, [X0]
	0x0393F3E0 MOV X0, X26
	0x0393F3E4 MOV W1, W27
	0x0393F3E8 BLR X8
	0x0393F3EC CBZ X0, 0x393F788
	0x0393F3F0 CBZ X28, 0x393F788
	0x0393F3F4 LDR W8, [X28 + 0x18]
	0x0393F3F8 CMP X27, X8
	0x0393F3FC B.CS 0x393F78C
	0x0393F400 LDR V0, [X0 + 0x48]
	0x0393F404 ADD X8, X28, X27, 0x3, LSL
	0x0393F408 STR D0, [X8 + 0x20]
	0x0393F40C CBZ W22, 0x393F4A0
	0x0393F410 LDR X8, [X26]
	0x0393F414 LDR X9, [X31 + 0x28]
	0x0393F418 LDR X1, [X29]
	0x0393F41C LDR X28, [X9]
	0x0393F420 LDRH W9, [X8 + 0x12E]
	0x0393F424 CBZ X9, 0x393F448
	0x0393F428 LDR X10, [X8 + 0xB0]
	0x0393F42C ADD X10, X10, 0x8
	0x0393F430 LDUR X11, [X10 - 0x8]
	0x0393F434 CMP X11, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {48}
	005 Move V0, [X0+16]
	006 Move V1, [X1+16]
	007 Move V2, [X0+24]
	008 Move V3, [X1+24]
	009 Subtract V0, V0, V1
	010 Move [X0+16], D0
	011 Subtract S2, S2, S3
	012 Move [X0+24], S2
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 NotImplemented "Instruction LDUR not yet implemented."
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 Subtract V0, V1, V0
	017 Move [X0+28], V0
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move V1, [X0+52]
	020 Move V3, [X1+52]
	021 Subtract V0, V2, V0
	022 Move [X0+44], D0
	023 Subtract S1, S1, S3
	024 Move [X0+52], S1
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Subtract V0, V2, V0
	028 Move [X0+56], V0
	029 Move V0, [X1+72]
	030 Move D1, [X0+72]
	031 Move D2, [X0+80]
	032 Subtract V0, V1, V0
	033 Move [X0+72], D0
	034 Move V0, [X1+80]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Subtract V0, V2, V0
	037 Move [X0+80], D0
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Subtract V0, V1, V0
	040 Move [X0+88], V0
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Subtract V0, V0, V1
	044 Move [X0+104], V0
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Return 
	048 Move X0, 0x7BA000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x7E2000
	054 Move X0, [X0+960]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0x810000
	061 Move X0, [X0+3848]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Vertex op_Multiply(UnityEngine.ProBuilder.Vertex a, System.Single value)

Disassembly:
	0x0393F438 B.EQ 0x393F458

ISIL:
No ISIL was generated
Method: UnityEngine.ProBuilder.Vertex Multiply(UnityEngine.ProBuilder.Vertex a, System.Single value)

Disassembly:
	0x0393F43C SUBS X9, X9, 0x1
	0x0393F440 ADD X10, X10, 0x10
	0x0393F444 B.NE 0x393F430
	0x0393F448 MOV X0, X26
	0x0393F44C MOV W2, W31
	0x0393F450 BL 0x1C5C788
	0x0393F454 B 0x393F464
	0x0393F458 LDRSW X9, [X10]
	0x0393F45C ADD X8, X8, X9, 0x4, LSL
	0x0393F460 ADD X0, X8, 0x138
	0x0393F464 LDP X8, X2, [X0]
	0x0393F468 MOV X0, X26
	0x0393F46C MOV W1, W27
	0x0393F470 BLR X8
	0x0393F474 CBZ X0, 0x393F788
	0x0393F478 CBZ X28, 0x393F788
	0x0393F47C LDR W8, [X28 + 0x18]
	0x0393F480 CMP X27, X8
	0x0393F484 B.CS 0x393F78C
	0x0393F488 LDUR V0, [X0 + 0x2C]
	0x0393F48C LDR V1, [X0 + 0x34]
	0x0393F490 MOVZ W8, 0xC
	0x0393F494 MADD X8, X27, X8, X28
	0x0393F498 STR D0, [X8 + 0x20]
	0x0393F49C STR S1, [X8 + 0x28]
	0x0393F4A0 CBZ W23, 0x393F528
	0x0393F4A4 LDR X8, [X26]
	0x0393F4A8 LDR X9, [X31 + 0x20]
	0x0393F4AC LDR X1, [X29]
	0x0393F4B0 LDR X28, [X9]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA3000
	007 Move X21, 0x810000
	008 Move W8, [X20+2377]
	009 Move X21, [X21+32]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x810000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2377], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call Vertex..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {38}
	028 Move X0, X20
	029 Move V0, V8
	030 Call Vertex.Multiply, X0, V0
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move V8, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void Multiply(System.Single value)

Disassembly:
	0x0393F4B4 LDRH W9, [X8 + 0x12E]
	0x0393F4B8 CBZ X9, 0x393F4DC
	0x0393F4BC LDR X10, [X8 + 0xB0]
	0x0393F4C0 ADD X10, X10, 0x8
	0x0393F4C4 LDUR X11, [X10 - 0x8]
	0x0393F4C8 CMP X11, X1
	0x0393F4CC B.EQ 0x393F4EC
	0x0393F4D0 SUBS X9, X9, 0x1
	0x0393F4D4 ADD X10, X10, 0x10
	0x0393F4D8 B.NE 0x393F4C4
	0x0393F4DC MOV X0, X26
	0x0393F4E0 MOV W2, W31
	0x0393F4E4 BL 0x1C5C788
	0x0393F4E8 B 0x393F4F8
	0x0393F4EC LDRSW X9, [X10]
	0x0393F4F0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move V1, [X0+16]
	002 Move V2, [X0+32]
	003 Move V3, [X0+48]
	004 Move V4, [X0+64]
	005 Move V5, [X0+80]
	006 Move V6, [X0+96]
	007 Move V7, [X0+112]
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 NotImplemented "Instruction INVALID not yet implemented."
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 Move [X0+16], V1
	016 Move [X0+24], V2
	017 Move [X0+48], V3
	018 Move [X0+56], V4
	019 Move [X0+80], V5
	020 Move [X0+88], V6
	021 Move [X0+112], D0
	022 Return 

Method: UnityEngine.ProBuilder.Vertex op_Division(UnityEngine.ProBuilder.Vertex a, System.Single value)

Disassembly:
	0x0393F4F4 ADD X0, X8, 0x138

ISIL:
No ISIL was generated
Method: UnityEngine.ProBuilder.Vertex Divide(UnityEngine.ProBuilder.Vertex a, System.Single value)

Disassembly:
	0x0393F4F8 LDP X8, X2, [X0]
	0x0393F4FC MOV X0, X26
	0x0393F500 MOV W1, W27
	0x0393F504 BLR X8
	0x0393F508 CBZ X0, 0x393F788
	0x0393F50C CBZ X28, 0x393F788
	0x0393F510 LDR W8, [X28 + 0x18]
	0x0393F514 CMP X27, X8
	0x0393F518 B.CS 0x393F78C
	0x0393F51C LDUR V0, [X0 + 0x38]
	0x0393F520 ADD X8, X28, X27, 0x4, LSL
	0x0393F524 STR V0, [X8 + 0x2]
	0x0393F528 CBZ W24, 0x393F5B0
	0x0393F52C LDR X8, [X26]
	0x0393F530 LDR X9, [X31 + 0x18]
	0x0393F534 LDR X1, [X29]
	0x0393F538 LDR X28, [X9]
	0x0393F53C LDRH W9, [X8 + 0x12E]
	0x0393F540 CBZ X9, 0x393F564
	0x0393F544 LDR X10, [X8 + 0xB0]
	0x0393F548 ADD X10, X10, 0x8
	0x0393F54C LDUR X11, [X10 - 0x8]
	0x0393F550 CMP X11, X1
	0x0393F554 B.EQ 0x393F574
	0x0393F558 SUBS X9, X9, 0x1
	0x0393F55C ADD X10, X10, 0x10
	0x0393F560 B.NE 0x393F54C
	0x0393F564 MOV X0, X26
	0x0393F568 MOV W2, W31
	0x0393F56C BL 0x1C5C788

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA3000
	007 Move X21, 0x810000
	008 Move W8, [X20+2378]
	009 Move X21, [X21+32]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x810000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2378], W8
	021 Move X0, [X21]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call Vertex..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {38}
	028 Move X0, X20
	029 Move V0, V8
	030 Call Vertex.Divide, X0, V0
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move V8, [X31+48]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void Divide(System.Single value)

Disassembly:
	0x0393F570 B 0x393F580
	0x0393F574 LDRSW X9, [X10]
	0x0393F578 ADD X8, X8, X9, 0x4, LSL
	0x0393F57C ADD X0, X8, 0x138
	0x0393F580 LDP X8, X2, [X0]
	0x0393F584 MOV X0, X26
	0x0393F588 MOV W1, W27
	0x0393F58C BLR X8
	0x0393F590 CBZ X0, 0x393F788
	0x0393F594 CBZ X28, 0x393F788
	0x0393F598 LDR W8, [X28 + 0x18]
	0x0393F59C CMP X27, X8
	0x0393F5A0 B.CS 0x393F78C
	0x0393F5A4 LDR V0, [X0 + 0x50]
	0x0393F5A8 ADD X8, X28, X27, 0x3, LSL
	0x0393F5AC STR D0, [X8 + 0x20]
	0x0393F5B0 CBZ W25, 0x393F66C
	0x0393F5B4 LDR X8, [X26]

ISIL:
	001 Move V2, [X0+16]
	002 Move V3, [X0+32]
	003 Move V4, [X0+48]
	004 Move V5, [X0+64]
	005 Move V6, [X0+80]
	006 Move V7, [X0+96]
	007 Move V16, [X0+112]
	008 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	009 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 NotImplemented "Instruction INVALID not yet implemented."
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 NotImplemented "Instruction INVALID not yet implemented."
	016 NotImplemented "Instruction INVALID not yet implemented."
	017 Move [X0+16], V2
	018 Move [X0+24], V3
	019 Move [X0+48], V4
	020 Move [X0+56], V5
	021 Move [X0+80], V6
	022 Move [X0+88], V1
	023 Move [X0+112], D0
	024 Return 

Method: System.Void Normalize()

Disassembly:
	0x0393F5B8 LDR X9, [X31 + 0x10]
	0x0393F5BC LDR X1, [X29]
	0x0393F5C0 LDR X28, [X9]
	0x0393F5C4 LDRH W9, [X8 + 0x12E]
	0x0393F5C8 CBZ X9, 0x393F5EC
	0x0393F5CC LDR X10, [X8 + 0xB0]
	0x0393F5D0 ADD X10, X10, 0x8
	0x0393F5D4 LDUR X11, [X10 - 0x8]
	0x0393F5D8 CMP X11, X1
	0x0393F5DC B.EQ 0x393F5FC
	0x0393F5E0 SUBS X9, X9, 0x1
	0x0393F5E4 ADD X10, X10, 0x10
	0x0393F5E8 B.NE 0x393F5D4
	0x0393F5EC MOV X0, X26
	0x0393F5F0 MOV W2, W31
	0x0393F5F4 BL 0x1C5C788
	0x0393F5F8 B 0x393F608
	0x0393F5FC LDRSW X9, [X10]
	0x0393F600 ADD X8, X8, X9, 0x4, LSL
	0x0393F604 ADD X0, X8, 0x138
	0x0393F608 LDP X8, X2, [X0]
	0x0393F60C MOV X0, X26
	0x0393F610 MOV W1, W27
	0x0393F614 BLR X8
	0x0393F618 CBZ X0, 0x393F788
	0x0393F61C CBZ X28, 0x393F788
	0x0393F620 ADRP X8, 0x80E000
	0x0393F624 LDP S0, S1, [X0 + 0x58]
	0x0393F628 LDP S2, S3, [X0 + 0x60]
	0x0393F62C LDR W10, [X28 + 0x1C]
	0x0393F630 LDR X9, [X28 + 0x10]
	0x0393F634 LDR X8, [X8 + 0xFF0]
	0x0393F638 ADD W10, W10, 0x1
	0x0393F63C LDR X8, [X8]
	0x0393F640 STR W10, [X28 + 0x1C]
	0x0393F644 CBZ X9, 0x393F788
	0x0393F648 LDRSW X10, [X28 + 0x18]
	0x0393F64C LDR W11, [X9 + 0x18]
	0x0393F650 CMP W10, W11
	0x0393F654 B.CS 0x393F674
	0x0393F658 ADD W8, W10, 0x1
	0x0393F65C ADD X9, X9, X10, 0x4, LSL
	0x0393F660 STR W8, [X28 + 0x18]
	0x0393F664 STP S0, S1, [X9 + 0x20]
	0x0393F668 STP S2, S3, [X9 + 0x28]
	0x0393F66C CBNZ W19, 0x393F68C
	0x0393F670 B 0x393F75C
	0x0393F674 LDR X8, [X8 + 0x20]
	0x0393F678 MOV X0, X28
	0x0393F67C LDR X8, [X8 + 0xC0]
	0x0393F680 LDR X1, [X8 + 0x70]
	0x0393F684 BL 0x30CEE24
	0x0393F688 CBZ W19, 0x393F75C
	0x0393F68C LDR X8, [X26]
	0x0393F690 LDR X9, [X31 + 0x8]
	0x0393F694 LDR X1, [X29]
	0x0393F698 LDR X28, [X9]
	0x0393F69C LDRH W9, [X8 + 0x12E]
	0x0393F6A0 CBZ X9, 0x393F6C4
	0x0393F6A4 LDR X10, [X8 + 0xB0]
	0x0393F6A8 ADD X10, X10, 0x8
	0x0393F6AC LDUR X11, [X10 - 0x8]
	0x0393F6B0 CMP X11, X1
	0x0393F6B4 B.EQ 0x393F6D4
	0x0393F6B8 SUBS X9, X9, 0x1
	0x0393F6BC ADD X10, X10, 0x10
	0x0393F6C0 B.NE 0x393F6AC
	0x0393F6C4 MOV X0, X26
	0x0393F6C8 MOV W2, W31
	0x0393F6CC BL 0x1C5C788
	0x0393F6D0 B 0x393F6E0
	0x0393F6D4 LDRSW X9, [X10]
	0x0393F6D8 ADD X8, X8, X9, 0x4, LSL
	0x0393F6DC ADD X0, X8, 0x138
	0x0393F6E0 LDP X8, X2, [X0]
	0x0393F6E4 MOV X0, X26
	0x0393F6E8 MOV W1, W27
	0x0393F6EC BLR X8
	0x0393F6F0 CBZ X0, 0x393F788
	0x0393F6F4 CBZ X28, 0x393F788
	0x0393F6F8 ADRP X8, 0x80E000
	0x0393F6FC LDP S0, S1, [X0 + 0x68]
	0x0393F700 LDP S2, S3, [X0 + 0x70]
	0x0393F704 LDR W10, [X28 + 0x1C]
	0x0393F708 LDR X9, [X28 + 0x10]
	0x0393F70C LDR X8, [X8 + 0xFF0]
	0x0393F710 ADD W10, W10, 0x1
	0x0393F714 LDR X8, [X8]
	0x0393F718 STR W10, [X28 + 0x1C]
	0x0393F71C CBZ X9, 0x393F788
	0x0393F720 LDRSW X10, [X28 + 0x18]
	0x0393F724 LDR W11, [X9 + 0x18]
	0x0393F728 CMP W10, W11
	0x0393F72C B.CS 0x393F748
	0x0393F730 ADD W8, W10, 0x1
	0x0393F734 ADD X9, X9, X10, 0x4, LSL
	0x0393F738 STR W8, [X28 + 0x18]
	0x0393F73C STP S0, S1, [X9 + 0x20]
	0x0393F740 STP S2, S3, [X9 + 0x28]
	0x0393F744 B 0x393F75C
	0x0393F748 LDR X8, [X8 + 0x20]
	0x0393F74C MOV X0, X28
	0x0393F750 LDR X8, [X8 + 0xC0]
	0x0393F754 LDR X1, [X8 + 0x70]
	0x0393F758 BL 0x30CEE24
	0x0393F75C ADD X27, X27, 0x1
	0x0393F760 CMP X27, X20
	0x0393F764 B.NE 0x393F260
	0x0393F768 LDP X20, X19, [X31 + 0xA0]
	0x0393F76C LDP X22, X21, [X31 + 0x90]
	0x0393F770 LDP X24, X23, [X31 + 0x80]
	0x0393F774 LDP X26, X25, [X31 + 0x70]
	0x0393F778 LDP X28, X27, [X31 + 0x60]
	0x0393F77C LDP X29, X30, [X31 + 0x50]
	0x0393F780 ADD X31, X31, 0xB0
	0x0393F784 RET
	0x0393F788 BL 0x1C16F20
	0x0393F78C BL 0x1C16F28
	0x0393F790 ADRP X0, 0x7B9000
	0x0393F794 LDR X0, [X0 + 0x528]
	0x0393F798 BL 0x1C16D08
	0x0393F79C BL 0x1C16F10
	0x0393F7A0 MOV X19, X0
	0x0393F7A4 ADRP X0, 0x80F000
	0x0393F7A8 LDR X0, [X0 + 0x450]
	0x0393F7AC BL 0x1C16D08
	0x0393F7B0 MOV X1, X0
	0x0393F7B4 MOV X0, X19
	0x0393F7B8 MOV X2, X31
	0x0393F7BC BL 0x330E100
	0x0393F7C0 ADRP X0, 0x80F000
	0x0393F7C4 LDR X0, [X0 + 0xF58]
	0x0393F7C8 BL 0x1C16D08
	0x0393F7CC MOV X1, X0
	0x0393F7D0 MOV X0, X19
	0x0393F7D4 BL 0x1C16DEC
	0x0393F7D8 SUB X31, X31, 0x80
	0x0393F7DC STR X30, [X31 + 0x50]
	0x0393F7E0 STP X22, X21, [X31 + 0x60]
	0x0393F7E4 STP X20, X19, [X31 + 0x70]
	0x0393F7E8 ADRP X21, 0xAA2000
	0x0393F7EC ADRP X22, 0x7B4000
	0x0393F7F0 LDRB W8, [X21 + 0x94D]
	0x0393F7F4 LDR X22, [X22 + 0x598]
	0x0393F7F8 MOV X20, X1
	0x0393F7FC MOV X19, X0
	0x0393F800 TBNZ X8, 0x0, 0x393F824
	0x0393F804 ADRP X0, 0x80E000
	0x0393F808 LDR X0, [X0 + 0xF60]
	0x0393F80C BL 0x1C16CF4
	0x0393F810 ADRP X0, 0x7B4000
	0x0393F814 LDR X0, [X0 + 0x598]
	0x0393F818 BL 0x1C16CF4
	0x0393F81C MOVZ W8, 0x1
	0x0393F820 STRB W8, [X21 + 0x94D]
	0x0393F824 LDR X0, [X22]
	0x0393F828 LDR W8, [X0 + 0xE0]
	0x0393F82C CBNZ W8, 0x393F834
	0x0393F830 BL 0x1C16DFC
	0x0393F834 MOV X0, X19
	0x0393F838 MOV X1, X31
	0x0393F83C MOV X2, X31
	0x0393F840 BL 0x3C3883C
	0x0393F844 TBNZ X0, 0x0, 0x393FA30
	0x0393F848 CBZ X20, 0x393FA50
	0x0393F84C MOVZ W8, 0xFF
	0x0393F850 ADD X9, X31, 0x18
	0x0393F854 ADD X1, X31, 0x58
	0x0393F858 ADD X2, X31, 0x48
	0x0393F85C ADD X3, X31, 0x40
	0x0393F860 ADD X4, X31, 0x38
	0x0393F864 ADD X5, X31, 0x30
	0x0393F868 ADD X6, X31, 0x28
	0x0393F86C ADD X7, X31, 0x20
	0x0393F870 MOV X0, X20
	0x0393F874 STR X31, [X31 + 0x58]
	0x0393F878 STP X31, X31, [X31 + 0x40]
	0x0393F87C STP X31, X31, [X31 + 0x30]
	0x0393F880 STP X31, X31, [X31 + 0x20]
	0x0393F884 STR X31, [X31 + 0x18]
	0x0393F888 STR W8, [X31 + 0x8]
	0x0393F88C STR X9, [X31]
	0x0393F890 BL 0x393EE58
	0x0393F894 CBZ X19, 0x393FA2C
	0x0393F898 ADRP X21, 0x80E000
	0x0393F89C LDR X21, [X21 + 0xF60]
	0x0393F8A0 MOV X0, X19
	0x0393F8A4 MOV X1, X31
	0x0393F8A8 BL 0x3C19C94
	0x0393F8AC LDR X8, [X20]
	0x0393F8B0 LDR X1, [X21]
	0x0393F8B4 LDRH W9, [X8 + 0x12E]
	0x0393F8B8 CBZ X9, 0x393F8DC
	0x0393F8BC LDR X10, [X8 + 0xB0]
	0x0393F8C0 ADD X10, X10, 0x8
	0x0393F8C4 LDUR X11, [X10 - 0x8]
	0x0393F8C8 CMP X11, X1
	0x0393F8CC B.EQ 0x393F8EC
	0x0393F8D0 SUBS X9, X9, 0x1
	0x0393F8D4 ADD X10, X10, 0x10
	0x0393F8D8 B.NE 0x393F8C4
	0x0393F8DC MOV X0, X20
	0x0393F8E0 MOV W2, W31
	0x0393F8E4 BL 0x1C5C788
	0x0393F8E8 B 0x393F8F8
	0x0393F8EC LDRSW X9, [X10]
	0x0393F8F0 ADD X8, X8, X9, 0x4, LSL
	0x0393F8F4 ADD X0, X8, 0x138
	0x0393F8F8 LDP X8, X2, [X0]
	0x0393F8FC MOV X0, X20
	0x0393F900 MOV W1, W31
	0x0393F904 BLR X8
	0x0393F908 CBZ X0, 0x393FA2C
	0x0393F90C LDR W8, [X0 + 0x78]
	0x0393F910 MOV X20, X0
	0x0393F914 TBNZ X8, 0x0, 0x393F934
	0x0393F918 TBNZ X8, 0x5, 0x393F94C
	0x0393F91C TBNZ X8, 0x1, 0x393F964
	0x0393F920 TBNZ X8, 0x6, 0x393F97C
	0x0393F924 TBNZ X8, 0x7, 0x393F994
	0x0393F928 TBNZ X8, 0x2, 0x393F9AC
	0x0393F92C TBNZ X8, 0x3, 0x393F9C4
	0x0393F930 B 0x393F9DC
	0x0393F934 LDR X1, [X31 + 0x58]
	0x0393F938 MOV X0, X19
	0x0393F93C MOV X2, X31
	0x0393F940 BL 0x3C17F08
	0x0393F944 LDR W8, [X20 + 0x78]
	0x0393F948 TBZ X8, 0x5, 0x393F91C
	0x0393F94C LDR X1, [X31 + 0x48]
	0x0393F950 MOV X0, X19
	0x0393F954 MOV X2, X31
	0x0393F958 BL 0x3C18264
	0x0393F95C LDR W8, [X20 + 0x78]
	0x0393F960 TBZ X8, 0x1, 0x393F920
	0x0393F964 LDR X1, [X31 + 0x40]
	0x0393F968 MOV X0, X19
	0x0393F96C MOV X2, X31
	0x0393F970 BL 0x3C1810C
	0x0393F974 LDR W8, [X20 + 0x78]
	0x0393F978 TBZ X8, 0x6, 0x393F924
	0x0393F97C LDR X1, [X31 + 0x38]
	0x0393F980 MOV X0, X19
	0x0393F984 MOV X2, X31
	0x0393F988 BL 0x3C17FB4
	0x0393F98C LDR W8, [X20 + 0x78]
	0x0393F990 TBZ X8, 0x7, 0x393F928
	0x0393F994 LDR X1, [X31 + 0x30]
	0x0393F998 MOV X0, X19
	0x0393F99C MOV X2, X31
	0x0393F9A0 BL 0x3C18060
	0x0393F9A4 LDR W8, [X20 + 0x78]
	0x0393F9A8 TBZ X8, 0x2, 0x393F92C
	0x0393F9AC LDR X1, [X31 + 0x28]
	0x0393F9B0 MOV X0, X19
	0x0393F9B4 MOV X2, X31
	0x0393F9B8 BL 0x3C181B8
	0x0393F9BC LDR W8, [X20 + 0x78]
	0x0393F9C0 TBZ X8, 0x3, 0x393F9DC
	0x0393F9C4 LDR X2, [X31 + 0x20]
	0x0393F9C8 CBZ X2, 0x393F9DC
	0x0393F9CC MOVZ W1, 0x2
	0x0393F9D0 MOV X0, X19
	0x0393F9D4 MOV X3, X31
	0x0393F9D8 BL 0x3C18A7C
	0x0393F9DC LDRB W8, [X20 + 0x78]
	0x0393F9E0 TBZ X8, 0x4, 0x393F9FC
	0x0393F9E4 LDR X2, [X31 + 0x18]
	0x0393F9E8 CBZ X2, 0x393F9FC
	0x0393F9EC MOVZ W1, 0x3
	0x0393F9F0 MOV X0, X19
	0x0393F9F4 MOV X3, X31
	0x0393F9F8 BL 0x3C18A7C
	0x0393F9FC MOV X0, X19
	0x0393FA00 MOV X1, X31
	0x0393FA04 BL 0x3C17618
	0x0393FA08 CMP W0, 0x10000
	0x0393FA0C MOV X0, X19
	0x0393FA10 LDP X20, X19, [X31 + 0x70]
	0x0393FA14 LDP X22, X21, [X31 + 0x60]
	0x0393FA18 LDR X30, [X31 + 0x50]
	0x0393FA1C CSET W1, GE
	0x0393FA20 MOV X2, X31
	0x0393FA24 ADD X31, X31, 0x80
	0x0393FA28 B 0x3C170A8
	0x0393FA2C BL 0x1C16F20
	0x0393FA30 ADRP X0, 0x7B9000
	0x0393FA34 LDR X0, [X0 + 0x528]
	0x0393FA38 BL 0x1C16D08
	0x0393FA3C BL 0x1C16F10
	0x0393FA40 MOV X19, X0
	0x0393FA44 ADRP X0, 0x80E000
	0x0393FA48 LDR X0, [X0 + 0xE90]
	0x0393FA4C B 0x393FA6C
	0x0393FA50 ADRP X0, 0x7B9000
	0x0393FA54 LDR X0, [X0 + 0x528]
	0x0393FA58 BL 0x1C16D08
	0x0393FA5C BL 0x1C16F10
	0x0393FA60 MOV X19, X0
	0x0393FA64 ADRP X0, 0x80F000
	0x0393FA68 LDR X0, [X0 + 0x450]
	0x0393FA6C BL 0x1C16D08
	0x0393FA70 MOV X1, X0
	0x0393FA74 MOV X0, X19
	0x0393FA78 MOV X2, X31
	0x0393FA7C BL 0x330E100
	0x0393FA80 ADRP X0, 0x80F000
	0x0393FA84 LDR X0, [X0 + 0xF60]
	0x0393FA88 BL 0x1C16D08
	0x0393FA8C MOV X1, X0
	0x0393FA90 MOV X0, X19
	0x0393FA94 BL 0x1C16DEC
	0x0393FA98 SUB X31, X31, 0x90
	0x0393FA9C STP D9, D8, [X31 + 0x20]
	0x0393FAA0 STP X29, X30, [X31 + 0x30]
	0x0393FAA4 STP X28, X27, [X31 + 0x40]
	0x0393FAA8 STP X26, X25, [X31 + 0x50]
	0x0393FAAC STP X24, X23, [X31 + 0x60]
	0x0393FAB0 STP X22, X21, [X31 + 0x70]
	0x0393FAB4 STP X20, X19, [X31 + 0x80]
	0x0393FAB8 ADRP X19, 0xAA2000
	0x0393FABC LDRB W8, [X19 + 0x94E]
	0x0393FAC0 MOV X20, X1
	0x0393FAC4 MOV X21, X0
	0x0393FAC8 TBNZ X8, 0x0, 0x393FB10
	0x0393FACC ADRP X0, 0x7DC000
	0x0393FAD0 LDR X0, [X0 + 0x7A0]
	0x0393FAD4 BL 0x1C16CF4
	0x0393FAD8 ADRP X0, 0x80F000
	0x0393FADC LDR X0, [X0 + 0x1E8]
	0x0393FAE0 BL 0x1C16CF4
	0x0393FAE4 ADRP X0, 0x80E000
	0x0393FAE8 LDR X0, [X0 + 0xF60]
	0x0393FAEC BL 0x1C16CF4
	0x0393FAF0 ADRP X0, 0x7DC000
	0x0393FAF4 LDR X0, [X0 + 0x7A8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D12
	003 Move [X31+24], D11
	004 Move [X31+32], D10
	005 Move [X31+40], D9
	006 Move [X31+48], D8
	007 Move [X31+56], X30
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0xA9A000
	017 Move S8, [X0+16]
	018 Move S9, [X0+20]
	019 Move W8, [X24+1925]
	020 Move V10, [X0+24]
	021 Move X19, X0
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x7B5000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1925], W8
	029 Move X20, 0x7B5000
	030 Move X20, [X20+1448]
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, -48578560
	037 Multiply S0, S8, S8
	038 Multiply S1, S9, S9
	039 Move V8, [X8+380]
	040 Move X25, 0x7B5000
	041 Multiply S2, S10, S10
	042 Add S0, S0, S1
	043 Move X25, [X25+1440]
	044 Add S0, S2, S0
	045 NotImplemented "Instruction FSQRT not yet implemented."
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X26, 0xA9A000
	048 Move V0, [X19+16]
	049 Move V2, [X19+24]
	050 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	051 NotImplemented "Instruction INVALID not yet implemented."
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 Move W8, [X26+1923]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x7B5000
	057 Move X0, [X0+1440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X26+1923], W8
	061 Move X8, [X25]
	062 Move X8, [X8+184]
	063 Move V0, [X8]
	064 Move V1, [X8+8]
	065 Move [X19+16], D0
	066 Move [X19+24], S1
	067 Move X21, 0xA9A000
	068 Move W8, [X21+3673]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Compare W8, 0
	071 JumpIfNotEqual {79}
	072 Move X0, 0x7B5000
	073 Move X0, [X0+1448]
	074 Move [X31], V4
	075 Call 0x1C17CF4
	076 Move V4, [X31]
	077 Move W8, 1
	078 Move [X21+3673], W8
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 Invalid "Jump target not found in method."
	083 Move [X31], V4
	084 Call 0x1C17DFC
	085 Move V4, [X31]
	086 NotImplemented "Instruction INVALID not yet implemented."
	087 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	088 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	089 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	090 Add V0, V0, V3
	091 Move X22, 0x7BC000
	092 Add V0, V2, V0
	093 Move X22, [X22+2464]
	094 Add V0, V1, V0
	095 NotImplemented "Instruction FSQRT not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move X23, 0xA9A000
	098 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	099 NotImplemented "Instruction INVALID not yet implemented."
	100 Move W8, [X23+3674]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x7BC000
	104 Move X0, [X0+2464]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X23+3674], W8
	108 Move X8, [X22]
	109 Move X8, [X8+184]
	110 Move V0, [X8]
	111 Move [X19+28], V0
	112 Move S9, [X19+44]
	113 Move S10, [X19+48]
	114 Move W8, [X24+1925]
	115 Move V11, [X19+52]
	116 Compare W8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, 0x7B5000
	119 Move X0, [X0+1448]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X24+1925], W8
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Multiply S0, S9, S9
	129 Multiply S1, S10, S10
	130 Add S0, S0, S1
	131 Multiply S1, S11, S11
	132 Add S0, S1, S0
	133 NotImplemented "Instruction FSQRT not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move V2, [X19+52]
	137 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 NotImplemented "Instruction FDIV not yet implemented."
	140 Move W8, [X26+1923]
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x7B5000
	144 Move X0, [X0+1440]
	145 Call 0x1C17CF4
	146 Move W8, 1
	147 Move [X26+1923], W8
	148 Move X8, [X25]
	149 Move X8, [X8+184]
	150 Move V0, [X8]
	151 Move V1, [X8+8]
	152 Move [X19+44], D0
	153 Move [X19+52], S1
	154 Move S9, [X19+56]
	155 Move S10, [X19+60]
	156 Move W8, [X21+3673]
	157 Move S11, [X19+64]
	158 Move S12, [X19+68]
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x7B5000
	162 Move X0, [X0+1448]
	163 Call 0x1C17CF4
	164 Move W8, 1
	165 Move [X21+3673], W8
	166 Move X0, [X20]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Multiply S2, S9, S9
	172 Multiply S3, S10, S10
	173 Multiply S1, S11, S11
	174 Add S2, S2, S3
	175 Multiply S0, S12, S12
	176 Add S1, S1, S2
	177 Add S0, S0, S1
	178 NotImplemented "Instruction FSQRT not yet implemented."
	179 NotImplemented "Instruction FCMP not yet implemented."
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	182 NotImplemented "Instruction INVALID not yet implemented."
	183 Move W8, [X23+3674]
	184 Compare W8, 0
	185 JumpIfNotEqual {191}
	186 Move X0, 0x7BC000
	187 Move X0, [X0+2464]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X23+3674], W8
	191 Move X8, [X22]
	192 Move X8, [X8+184]
	193 Move V0, [X8]
	194 Move [X19+56], V0
	195 Move X26, 0xA9B000
	196 Move W8, [X26+2072]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x7B5000
	200 Move X0, [X0+1448]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X26+2072], W8
	204 Move X0, [X20]
	205 Move S10, [X19+72]
	206 Move S9, [X19+76]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X24, 0x7BD000
	212 Multiply S0, S10, S10
	213 Multiply S1, S9, S9
	214 Move X24, [X24+3848]
	215 Add S0, S0, S1
	216 NotImplemented "Instruction FSQRT not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 Move X25, 0xA9B000
	219 Move V1, [X19+72]
	220 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	221 NotImplemented "Instruction INVALID not yet implemented."
	222 Move W8, [X25+1935]
	223 Compare W8, 0
	224 JumpIfNotEqual {230}
	225 Move X0, 0x7BD000
	226 Move X0, [X0+3848]
	227 Call 0x1C17CF4
	228 Move W8, 1
	229 Move [X25+1935], W8
	230 Move X8, [X24]
	231 Move X8, [X8+184]
	232 Move V0, [X8]
	233 Move [X19+72], D0
	234 Move W8, [X26+2072]
	235 Compare W8, 0
	236 JumpIfNotEqual {242}
	237 Move X0, 0x7B5000
	238 Move X0, [X0+1448]
	239 Call 0x1C17CF4
	240 Move W8, 1
	241 Move [X26+2072], W8
	242 Move X0, [X20]
	243 Move S10, [X19+80]
	244 Move S9, [X19+84]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Multiply S0, S10, S10
	250 Multiply S1, S9, S9
	251 Add S0, S0, S1
	252 NotImplemented "Instruction FSQRT not yet implemented."
	253 NotImplemented "Instruction FCMP not yet implemented."
	254 Move V1, [X19+80]
	255 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	256 NotImplemented "Instruction INVALID not yet implemented."
	257 Move W8, [X25+1935]
	258 Compare W8, 0
	259 JumpIfNotEqual {265}
	260 Move X0, 0x7BD000
	261 Move X0, [X0+3848]
	262 Call 0x1C17CF4
	263 Move W8, 1
	264 Move [X25+1935], W8
	265 Move X8, [X24]
	266 Move X8, [X8+184]
	267 Move V0, [X8]
	268 Move [X19+80], D0
	269 Move S9, [X19+88]
	270 Move S10, [X19+92]
	271 Move W8, [X21+3673]
	272 Move S11, [X19+96]
	273 Move S12, [X19+100]
	274 Compare W8, 0
	275 JumpIfNotEqual {281}
	276 Move X0, 0x7B5000
	277 Move X0, [X0+1448]
	278 Call 0x1C17CF4
	279 Move W8, 1
	280 Move [X21+3673], W8
	281 Move X0, [X20]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Multiply S2, S9, S9
	287 Multiply S3, S10, S10
	288 Multiply S1, S11, S11
	289 Add S2, S2, S3
	290 Multiply S0, S12, S12
	291 Add S1, S1, S2
	292 Add S0, S0, S1
	293 NotImplemented "Instruction FSQRT not yet implemented."
	294 NotImplemented "Instruction FCMP not yet implemented."
	295 NotImplemented "Instruction LDUR not yet implemented."
	296 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	297 NotImplemented "Instruction INVALID not yet implemented."
	298 Move W8, [X23+3674]
	299 Compare W8, 0
	300 JumpIfNotEqual {306}
	301 Move X0, 0x7BC000
	302 Move X0, [X0+2464]
	303 Call 0x1C17CF4
	304 Move W8, 1
	305 Move [X23+3674], W8
	306 Move X8, [X22]
	307 Move X8, [X8+184]
	308 Move V0, [X8]
	309 Move [X19+88], V0
	310 Move S9, [X19+104]
	311 Move S10, [X19+108]
	312 Move W8, [X21+3673]
	313 Move S11, [X19+112]
	314 Move S12, [X19+116]
	315 Compare W8, 0
	316 JumpIfNotEqual {322}
	317 Move X0, 0x7B5000
	318 Move X0, [X0+1448]
	319 Call 0x1C17CF4
	320 Move W8, 1
	321 Move [X21+3673], W8
	322 Move X0, [X20]
	323 Move W8, [X0+224]
	324 Compare W8, 0
	325 JumpIfNotEqual {327}
	326 Call 0x1C17DFC
	327 Multiply S2, S9, S9
	328 Multiply S3, S10, S10
	329 Multiply S1, S11, S11
	330 Add S2, S2, S3
	331 Multiply S0, S12, S12
	332 Add S1, S1, S2
	333 Add S0, S0, S1
	334 NotImplemented "Instruction FSQRT not yet implemented."
	335 NotImplemented "Instruction FCMP not yet implemented."
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	338 NotImplemented "Instruction INVALID not yet implemented."
	339 Move W8, [X23+3674]
	340 Compare W8, 0
	341 JumpIfNotEqual {347}
	342 Move X0, 0x7BC000
	343 Move X0, [X0+2464]
	344 Call 0x1C17CF4
	345 Move W8, 1
	346 Move [X23+3674], W8
	347 Move X8, [X22]
	348 Move X8, [X8+184]
	349 Move V0, [X8]
	350 Move [X19+104], V0
	351 Move X20, [X31+112]
	352 Move X19, [X31+120]
	353 Move X22, [X31+96]
	354 Move X21, [X31+104]
	355 Move X24, [X31+80]
	356 Move X23, [X31+88]
	357 Move X26, [X31+64]
	358 Move X25, [X31+72]
	359 Move X30, [X31+56]
	360 Move D9, [X31+40]
	361 Move D8, [X31+48]
	362 Move D11, [X31+24]
	363 Move D10, [X31+32]
	364 Move V12, [X31+16]
	365 Add X31, X31, 128
	366 Return 

Method: System.String ToString(System.String args = null)

Disassembly:
	0x0393FAF8 BL 0x1C16CF4
	0x0393FAFC ADRP X0, 0x80F000
	0x0393FB00 LDR X0, [X0 + 0x20]
	0x0393FB04 BL 0x1C16CF4
	0x0393FB08 MOVZ W8, 0x1
	0x0393FB0C STRB W8, [X19 + 0x94E]
	0x0393FB10 CBZ X21, 0x39405C8
	0x0393FB14 ADRP X8, 0x80F000
	0x0393FB18 LDR X8, [X8 + 0x20]
	0x0393FB1C LDR X0, [X8]
	0x0393FB20 BL 0x1C16F10
	0x0393FB24 MOV X1, X31
	0x0393FB28 MOV X19, X0
	0x0393FB2C BL 0x33BDD8C
	0x0393FB30 CBZ X20, 0x393FB7C
	0x0393FB34 ADRP X10, 0x7DC000
	0x0393FB38 LDR X8, [X20]
	0x0393FB3C LDR X10, [X10 + 0x7A0]
	0x0393FB40 LDRH W9, [X8 + 0x12E]
	0x0393FB44 LDR X1, [X10]
	0x0393FB48 CBZ X9, 0x393FB6C
	0x0393FB4C LDR X10, [X8 + 0xB0]
	0x0393FB50 ADD X10, X10, 0x8
	0x0393FB54 LDUR X11, [X10 - 0x8]
	0x0393FB58 CMP X11, X1
	0x0393FB5C B.EQ 0x393FBC4
	0x0393FB60 SUBS X9, X9, 0x1
	0x0393FB64 ADD X10, X10, 0x10
	0x0393FB68 B.NE 0x393FB54
	0x0393FB6C MOV X0, X20
	0x0393FB70 MOV W2, W31
	0x0393FB74 BL 0x1C5C788
	0x0393FB78 B 0x393FBD0
	0x0393FB7C ADRP X10, 0x80F000
	0x0393FB80 LDR X8, [X21]
	0x0393FB84 LDR X10, [X10 + 0x1E8]
	0x0393FB88 LDRH W9, [X8 + 0x12E]
	0x0393FB8C LDR X1, [X10]
	0x0393FB90 CBZ X9, 0x393FBB4
	0x0393FB94 LDR X10, [X8 + 0xB0]
	0x0393FB98 ADD X10, X10, 0x8
	0x0393FB9C LDUR X11, [X10 - 0x8]
	0x0393FBA0 CMP X11, X1
	0x0393FBA4 B.EQ 0x393FBDC
	0x0393FBA8 SUBS X9, X9, 0x1
	0x0393FBAC ADD X10, X10, 0x10
	0x0393FBB0 B.NE 0x393FB9C
	0x0393FBB4 MOV X0, X21
	0x0393FBB8 MOV W2, W31
	0x0393FBBC BL 0x1C5C788
	0x0393FBC0 B 0x393FBE8
	0x0393FBC4 LDRSW X9, [X10]
	0x0393FBC8 ADD X8, X8, X9, 0x4, LSL
	0x0393FBCC ADD X0, X8, 0x138
	0x0393FBD0 LDP X8, X1, [X0]
	0x0393FBD4 MOV X0, X20
	0x0393FBD8 B 0x393FBF0
	0x0393FBDC LDRSW X9, [X10]
	0x0393FBE0 ADD X8, X8, X9, 0x4, LSL
	0x0393FBE4 ADD X0, X8, 0x138
	0x0393FBE8 LDP X8, X1, [X0]
	0x0393FBEC MOV X0, X21
	0x0393FBF0 BLR X8
	0x0393FBF4 MOV W22, W0
	0x0393FBF8 CMP W0, 0x1
	0x0393FBFC B.LT 0x394059C
	0x0393FC00 STP X31, X31, [X31 + 0x10]
	0x0393FC04 ADRP X28, 0x80E000
	0x0393FC08 LDR X28, [X28 + 0xF60]
	0x0393FC0C MOV W27, W31
	0x0393FC10 MOV W26, W31
	0x0393FC14 MOV W25, W31
	0x0393FC18 MOV W29, W31
	0x0393FC1C MOV W23, W31
	0x0393FC20 MOV W24, W23
	0x0393FC24 CBZ X20, 0x393FC90
	0x0393FC28 LDR X8, [X20]
	0x0393FC2C ADRP X10, 0x7DC000
	0x0393FC30 LDRH W9, [X8 + 0x12E]
	0x0393FC34 LDR X10, [X10 + 0x7A8]
	0x0393FC38 LDR X1, [X10]
	0x0393FC3C CBZ X9, 0x393FC60
	0x0393FC40 LDR X10, [X8 + 0xB0]
	0x0393FC44 ADD X10, X10, 0x8
	0x0393FC48 LDUR X11, [X10 - 0x8]
	0x0393FC4C CMP X11, X1
	0x0393FC50 B.EQ 0x393FC70
	0x0393FC54 SUBS X9, X9, 0x1
	0x0393FC58 ADD X10, X10, 0x10
	0x0393FC5C B.NE 0x393FC48
	0x0393FC60 MOV X0, X20
	0x0393FC64 MOV W2, W31
	0x0393FC68 BL 0x1C5C788
	0x0393FC6C B 0x393FC7C
	0x0393FC70 LDRSW X9, [X10]
	0x0393FC74 ADD X8, X8, X9, 0x4, LSL
	0x0393FC78 ADD X0, X8, 0x138
	0x0393FC7C LDP X8, X2, [X0]
	0x0393FC80 MOV X0, X20
	0x0393FC84 MOV W1, W23
	0x0393FC88 BLR X8
	0x0393FC8C MOV W24, W0
	0x0393FC90 LDR X8, [X21]
	0x0393FC94 LDR X1, [X28]
	0x0393FC98 LDRH W9, [X8 + 0x12E]
	0x0393FC9C CBZ X9, 0x393FCC0
	0x0393FCA0 LDR X10, [X8 + 0xB0]
	0x0393FCA4 ADD X10, X10, 0x8
	0x0393FCA8 LDUR X11, [X10 - 0x8]
	0x0393FCAC CMP X11, X1
	0x0393FCB0 B.EQ 0x393FCD0
	0x0393FCB4 SUBS X9, X9, 0x1
	0x0393FCB8 ADD X10, X10, 0x10
	0x0393FCBC B.NE 0x393FCA8
	0x0393FCC0 MOV X0, X21
	0x0393FCC4 MOV W2, W31
	0x0393FCC8 BL 0x1C5C788
	0x0393FCCC B 0x393FCDC
	0x0393FCD0 LDRSW X9, [X10]
	0x0393FCD4 ADD X8, X8, X9, 0x4, LSL
	0x0393FCD8 ADD X0, X8, 0x138
	0x0393FCDC LDP X8, X2, [X0]
	0x0393FCE0 MOV X0, X21
	0x0393FCE4 MOV W1, W24
	0x0393FCE8 BLR X8
	0x0393FCEC CBZ X0, 0x39405C4
	0x0393FCF0 LDRB W8, [X0 + 0x78]
	0x0393FCF4 TBZ X8, 0x0, 0x393FD80
	0x0393FCF8 CBZ X19, 0x39405C4
	0x0393FCFC LDR X8, [X21]
	0x0393FD00 LDR V9, [X19 + 0x10]
	0x0393FD04 LDR V8, [X19 + 0x18]
	0x0393FD08 LDR X1, [X28]
	0x0393FD0C LDRH W9, [X8 + 0x12E]
	0x0393FD10 CBZ X9, 0x393FD34
	0x0393FD14 LDR X10, [X8 + 0xB0]
	0x0393FD18 ADD X10, X10, 0x8
	0x0393FD1C LDUR X11, [X10 - 0x8]
	0x0393FD20 CMP X11, X1
	0x0393FD24 B.EQ 0x393FD44
	0x0393FD28 SUBS X9, X9, 0x1
	0x0393FD2C ADD X10, X10, 0x10
	0x0393FD30 B.NE 0x393FD1C
	0x0393FD34 MOV X0, X21
	0x0393FD38 MOV W2, W31
	0x0393FD3C BL 0x1C5C788
	0x0393FD40 B 0x393FD50
	0x0393FD44 LDRSW X9, [X10]
	0x0393FD48 ADD X8, X8, X9, 0x4, LSL
	0x0393FD4C ADD X0, X8, 0x138
	0x0393FD50 LDP X8, X2, [X0]
	0x0393FD54 MOV X0, X21
	0x0393FD58 MOV W1, W24
	0x0393FD5C BLR X8
	0x0393FD60 CBZ X0, 0x39405C4
	0x0393FD64 LDR V0, [X0 + 0x10]
	0x0393FD68 LDR V1, [X0 + 0x18]
	0x0393FD6C ADD W27, W27, 0x1
	0x0393FD70 FADD V0.2S, V9.2S, V0.2S
	0x0393FD74 FADD S1, S8, S1
	0x0393FD78 STR D0, [X19 + 0x10]
	0x0393FD7C STR S1, [X19 + 0x18]
	0x0393FD80 LDR X8, [X21]
	0x0393FD84 LDR X1, [X28]
	0x0393FD88 LDRH W9, [X8 + 0x12E]
	0x0393FD8C CBZ X9, 0x393FDB0
	0x0393FD90 LDR X10, [X8 + 0xB0]
	0x0393FD94 ADD X10, X10, 0x8
	0x0393FD98 LDUR X11, [X10 - 0x8]
	0x0393FD9C CMP X11, X1
	0x0393FDA0 B.EQ 0x393FDC0
	0x0393FDA4 SUBS X9, X9, 0x1
	0x0393FDA8 ADD X10, X10, 0x10
	0x0393FDAC B.NE 0x393FD98
	0x0393FDB0 MOV X0, X21
	0x0393FDB4 MOV W2, W31
	0x0393FDB8 BL 0x1C5C788
	0x0393FDBC B 0x393FDCC
	0x0393FDC0 LDRSW X9, [X10]
	0x0393FDC4 ADD X8, X8, X9, 0x4, LSL
	0x0393FDC8 ADD X0, X8, 0x138
	0x0393FDCC LDP X8, X2, [X0]
	0x0393FDD0 MOV X0, X21
	0x0393FDD4 MOV W1, W24
	0x0393FDD8 BLR X8
	0x0393FDDC CBZ X0, 0x39405C4
	0x0393FDE0 LDRB W8, [X0 + 0x78]
	0x0393FDE4 TBZ X8, 0x5, 0x393FE68
	0x0393FDE8 CBZ X19, 0x39405C4
	0x0393FDEC LDR X8, [X21]
	0x0393FDF0 LDUR V0, [X19 + 0x1C]
	0x0393FDF4 LDR X1, [X28]
	0x0393FDF8 LDRH W9, [X8 + 0x12E]
	0x0393FDFC STR V0, [X31]
	0x0393FE00 CBZ X9, 0x393FE24
	0x0393FE04 LDR X10, [X8 + 0xB0]
	0x0393FE08 ADD X10, X10, 0x8
	0x0393FE0C LDUR X11, [X10 - 0x8]
	0x0393FE10 CMP X11, X1
	0x0393FE14 B.EQ 0x393FE34
	0x0393FE18 SUBS X9, X9, 0x1
	0x0393FE1C ADD X10, X10, 0x10
	0x0393FE20 B.NE 0x393FE0C
	0x0393FE24 MOV X0, X21
	0x0393FE28 MOV W2, W31
	0x0393FE2C BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA3000
	007 Move X22, 0x7B5000
	008 Move W8, [X21+2379]
	009 Move X22, [X22+2288]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x7B5000
	017 Move X0, [X0+2288]
	018 Call 0x1C17CF4
	019 Move X0, 0x810000
	020 Move X0, [X0+3856]
	021 Call 0x1C17CF4
	022 Move X0, 0x810000
	023 Move X0, [X0+3864]
	024 Call 0x1C17CF4
	025 Move X0, 0x810000
	026 Move X0, [X0+3872]
	027 Call 0x1C17CF4
	028 Move X0, 0x810000
	029 Move X0, [X0+3880]
	030 Call 0x1C17CF4
	031 Move X0, 0x810000
	032 Move X0, [X0+3888]
	033 Call 0x1C17CF4
	034 Move X0, 0x810000
	035 Move X0, [X0+3896]
	036 Call 0x1C17CF4
	037 Move X0, 0x810000
	038 Move X0, [X0+3904]
	039 Call 0x1C17CF4
	040 Move X0, 0x810000
	041 Move X0, [X0+3912]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2379], W8
	045 Move X0, [X22]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X21, X0
	049 Call StringBuilder..ctor, X0
	050 Move W8, [X20+120]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {74}
	055 Move X22, 0x810000
	056 Move X22, [X22+3888]
	057 Add X0, X20, 16
	058 Move X1, X19
	059 Move X2, X31
	060 Move X3, X31
	061 Call 0x2431694
	062 Move X8, [X22]
	063 Move X1, X0
	064 Move X2, X31
	065 Move X0, X8
	066 Call String.Concat, X0, X1
	067 Compare X21, 0
	068 JumpIfEqual {246}
	069 Move X1, X0
	070 Move X0, X21
	071 Move X2, X31
	072 Call StringBuilder.AppendLine, X0, X1
	073 Move W8, [X20+120]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 32
	076 Compare TEMP, 32
	077 JumpIfNotEqual {97}
	078 Add X0, X20, 28
	079 Move X1, X19
	080 Move X2, X31
	081 Move X3, X31
	082 Call 0x21F31BC
	083 Move X8, 0x810000
	084 Move X8, [X8+3864]
	085 Move X1, X0
	086 Move X2, X31
	087 Move X8, [X8]
	088 Move X0, X8
	089 Call String.Concat, X0, X1
	090 Compare X21, 0
	091 JumpIfEqual {246}
	092 Move X1, X0
	093 Move X0, X21
	094 Move X2, X31
	095 Call StringBuilder.AppendLine, X0, X1
	096 Move W8, [X20+120]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 64
	099 Compare TEMP, 64
	100 JumpIfNotEqual {120}
	101 Add X0, X20, 44
	102 Move X1, X19
	103 Move X2, X31
	104 Move X3, X31
	105 Call 0x2431694
	106 Move X8, 0x810000
	107 Move X8, [X8+3856]
	108 Move X1, X0
	109 Move X2, X31
	110 Move X8, [X8]
	111 Move X0, X8
	112 Call String.Concat, X0, X1
	113 Compare X21, 0
	114 JumpIfEqual {246}
	115 Move X1, X0
	116 Move X0, X21
	117 Move X2, X31
	118 Call StringBuilder.AppendLine, X0, X1
	119 Move W8, [X20+120]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 128
	122 Compare TEMP, 128
	123 JumpIfNotEqual {143}
	124 Add X0, X20, 56
	125 Move X1, X19
	126 Move X2, X31
	127 Move X3, X31
	128 Call 0x24556F0
	129 Move X8, 0x810000
	130 Move X8, [X8+3880]
	131 Move X1, X0
	132 Move X2, X31
	133 Move X8, [X8]
	134 Move X0, X8
	135 Call String.Concat, X0, X1
	136 Compare X21, 0
	137 JumpIfEqual {246}
	138 Move X1, X0
	139 Move X0, X21
	140 Move X2, X31
	141 Call StringBuilder.AppendLine, X0, X1
	142 Move W8, [X20+120]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 2
	145 Compare TEMP, 2
	146 JumpIfNotEqual {166}
	147 Add X0, X20, 72
	148 Move X1, X19
	149 Move X2, X31
	150 Move X3, X31
	151 Call 0x25F44C4
	152 Move X8, 0x810000
	153 Move X8, [X8+3896]
	154 Move X1, X0
	155 Move X2, X31
	156 Move X8, [X8]
	157 Move X0, X8
	158 Call String.Concat, X0, X1
	159 Compare X21, 0
	160 JumpIfEqual {246}
	161 Move X1, X0
	162 Move X0, X21
	163 Move X2, X31
	164 Call StringBuilder.AppendLine, X0, X1
	165 Move W8, [X20+120]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 4
	168 Compare TEMP, 4
	169 JumpIfNotEqual {189}
	170 Add X0, X20, 80
	171 Move X1, X19
	172 Move X2, X31
	173 Move X3, X31
	174 Call 0x25F44C4
	175 Move X8, 0x810000
	176 Move X8, [X8+3872]
	177 Move X1, X0
	178 Move X2, X31
	179 Move X8, [X8]
	180 Move X0, X8
	181 Call String.Concat, X0, X1
	182 Compare X21, 0
	183 JumpIfEqual {246}
	184 Move X1, X0
	185 Move X0, X21
	186 Move X2, X31
	187 Call StringBuilder.AppendLine, X0, X1
	188 Move W8, [X20+120]
	189 Move TEMP, X8
	190 And TEMP, TEMP, 8
	191 Compare TEMP, 8
	192 JumpIfNotEqual {212}
	193 Add X0, X20, 88
	194 Move X1, X19
	195 Move X2, X31
	196 Move X3, X31
	197 Call 0x24556F0
	198 Move X8, 0x810000
	199 Move X8, [X8+3904]
	200 Move X1, X0
	201 Move X2, X31
	202 Move X8, [X8]
	203 Move X0, X8
	204 Call String.Concat, X0, X1
	205 Compare X21, 0
	206 JumpIfEqual {246}
	207 Move X1, X0
	208 Move X0, X21
	209 Move X2, X31
	210 Call StringBuilder.AppendLine, X0, X1
	211 Move W8, [X20+120]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 16
	214 Compare TEMP, 16
	215 JumpIfEqual {218}
	216 Compare X21, 0
	217 JumpIfNotEqual {236}
	218 Add X0, X20, 104
	219 Move X1, X19
	220 Move X2, X31
	221 Move X3, X31
	222 Call 0x24556F0
	223 Move X8, 0x810000
	224 Move X8, [X8+3912]
	225 Move X1, X0
	226 Move X2, X31
	227 Move X8, [X8]
	228 Move X0, X8
	229 Call String.Concat, X0, X1
	230 Compare X21, 0
	231 JumpIfEqual {246}
	232 Move X1, X0
	233 Move X0, X21
	234 Move X2, X31
	235 Call StringBuilder.AppendLine, X0, X1
	236 Move X8, [X21]
	237 Move X0, X21
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X2, [X8+360]
	243 Move X1, [X8+368]
	244 Move X30, [X31+48]
	245 CallNoReturn X2
	246 Call 0x1C17F20

Method: System.Void GetArrays(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, out UnityEngine.Vector3[] position, out UnityEngine.Color[] color, out UnityEngine.Vector2[] uv0, out UnityEngine.Vector3[] normal, out UnityEngine.Vector4[] tangent, out UnityEngine.Vector2[] uv2, out System.Collections.Generic.List`1<UnityEngine.Vector4> uv3, out System.Collections.Generic.List`1<UnityEngine.Vector4> uv4)

Disassembly:
	0x0393FE30 B 0x393FE40
	0x0393FE34 LDRSW X9, [X10]
	0x0393FE38 ADD X8, X8, X9, 0x4, LSL
	0x0393FE3C ADD X0, X8, 0x138
	0x0393FE40 LDP X8, X2, [X0]
	0x0393FE44 MOV X0, X21
	0x0393FE48 MOV W1, W24
	0x0393FE4C BLR X8
	0x0393FE50 CBZ X0, 0x39405C4
	0x0393FE54 LDUR V0, [X0 + 0x1C]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X31+48]
	004 Move W9, 255
	005 Move [X31+8], W9
	006 Move [X31], X8
	007 Call Vertex.GetArrays, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	008 Move X30, [X31+32]
	009 Add X31, X31, 48
	010 Return 

Method: System.Void GetArrays(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, out UnityEngine.Vector3[] position, out UnityEngine.Color[] color, out UnityEngine.Vector2[] uv0, out UnityEngine.Vector3[] normal, out UnityEngine.Vector4[] tangent, out UnityEngine.Vector2[] uv2, out System.Collections.Generic.List`1<UnityEngine.Vector4> uv3, out System.Collections.Generic.List`1<UnityEngine.Vector4> uv4, UnityEngine.ProBuilder.MeshArrays attributes)

Disassembly:
	0x0393FE58 LDR V1, [X31]
	0x0393FE5C ADD W26, W26, 0x1
	0x0393FE60 FADD V0.4S, V1.4S, V0.4S
	0x0393FE64 STUR V0, [X19 + 0x1C]
	0x0393FE68 LDR X8, [X21]
	0x0393FE6C LDR X1, [X28]
	0x0393FE70 LDRH W9, [X8 + 0x12E]
	0x0393FE74 CBZ X9, 0x393FE98
	0x0393FE78 LDR X10, [X8 + 0xB0]
	0x0393FE7C ADD X10, X10, 0x8
	0x0393FE80 LDUR X11, [X10 - 0x8]
	0x0393FE84 CMP X11, X1
	0x0393FE88 B.EQ 0x393FEA8
	0x0393FE8C SUBS X9, X9, 0x1
	0x0393FE90 ADD X10, X10, 0x10
	0x0393FE94 B.NE 0x393FE80
	0x0393FE98 MOV X0, X21
	0x0393FE9C MOV W2, W31
	0x0393FEA0 BL 0x1C5C788
	0x0393FEA4 B 0x393FEB4
	0x0393FEA8 LDRSW X9, [X10]
	0x0393FEAC ADD X8, X8, X9, 0x4, LSL
	0x0393FEB0 ADD X0, X8, 0x138
	0x0393FEB4 LDP X8, X2, [X0]
	0x0393FEB8 MOV X0, X21
	0x0393FEBC MOV W1, W24
	0x0393FEC0 BLR X8
	0x0393FEC4 CBZ X0, 0x39405C4
	0x0393FEC8 LDRB W8, [X0 + 0x78]
	0x0393FECC TBZ X8, 0x1, 0x393FF48
	0x0393FED0 CBZ X19, 0x39405C4
	0x0393FED4 LDR X8, [X21]
	0x0393FED8 LDR V8, [X19 + 0x48]
	0x0393FEDC LDR X1, [X28]
	0x0393FEE0 LDRH W9, [X8 + 0x12E]
	0x0393FEE4 CBZ X9, 0x393FF08
	0x0393FEE8 LDR X10, [X8 + 0xB0]
	0x0393FEEC ADD X10, X10, 0x8
	0x0393FEF0 LDUR X11, [X10 - 0x8]
	0x0393FEF4 CMP X11, X1
	0x0393FEF8 B.EQ 0x393FF18
	0x0393FEFC SUBS X9, X9, 0x1
	0x0393FF00 ADD X10, X10, 0x10
	0x0393FF04 B.NE 0x393FEF0
	0x0393FF08 MOV X0, X21
	0x0393FF0C MOV W2, W31
	0x0393FF10 BL 0x1C5C788
	0x0393FF14 B 0x393FF24
	0x0393FF18 LDRSW X9, [X10]
	0x0393FF1C ADD X8, X8, X9, 0x4, LSL
	0x0393FF20 ADD X0, X8, 0x138
	0x0393FF24 LDP X8, X2, [X0]
	0x0393FF28 MOV X0, X21
	0x0393FF2C MOV W1, W24
	0x0393FF30 BLR X8
	0x0393FF34 CBZ X0, 0x39405C4
	0x0393FF38 LDR V0, [X0 + 0x48]
	0x0393FF3C ADD W25, W25, 0x1
	0x0393FF40 FADD V0.2S, V8.2S, V0.2S
	0x0393FF44 STR D0, [X19 + 0x48]
	0x0393FF48 LDR X8, [X21]
	0x0393FF4C LDR X1, [X28]
	0x0393FF50 LDRH W9, [X8 + 0x12E]
	0x0393FF54 CBZ X9, 0x393FF78
	0x0393FF58 LDR X10, [X8 + 0xB0]
	0x0393FF5C ADD X10, X10, 0x8
	0x0393FF60 LDUR X11, [X10 - 0x8]
	0x0393FF64 CMP X11, X1
	0x0393FF68 B.EQ 0x393FF88
	0x0393FF6C SUBS X9, X9, 0x1
	0x0393FF70 ADD X10, X10, 0x10
	0x0393FF74 B.NE 0x393FF60
	0x0393FF78 MOV X0, X21
	0x0393FF7C MOV W2, W31
	0x0393FF80 BL 0x1C5C788
	0x0393FF84 B 0x393FF94
	0x0393FF88 LDRSW X9, [X10]
	0x0393FF8C ADD X8, X8, X9, 0x4, LSL
	0x0393FF90 ADD X0, X8, 0x138
	0x0393FF94 LDP X8, X2, [X0]
	0x0393FF98 MOV X0, X21
	0x0393FF9C MOV W1, W24
	0x0393FFA0 BLR X8
	0x0393FFA4 CBZ X0, 0x39405C4
	0x0393FFA8 LDRB W8, [X0 + 0x78]
	0x0393FFAC TBZ X8, 0x6, 0x3940038
	0x0393FFB0 CBZ X19, 0x39405C4
	0x0393FFB4 LDR X8, [X21]
	0x0393FFB8 LDUR V9, [X19 + 0x2C]
	0x0393FFBC LDR V8, [X19 + 0x34]
	0x0393FFC0 LDR X1, [X28]
	0x0393FFC4 LDRH W9, [X8 + 0x12E]
	0x0393FFC8 CBZ X9, 0x393FFEC
	0x0393FFCC LDR X10, [X8 + 0xB0]
	0x0393FFD0 ADD X10, X10, 0x8
	0x0393FFD4 LDUR X11, [X10 - 0x8]
	0x0393FFD8 CMP X11, X1
	0x0393FFDC B.EQ 0x393FFFC
	0x0393FFE0 SUBS X9, X9, 0x1
	0x0393FFE4 ADD X10, X10, 0x10
	0x0393FFE8 B.NE 0x393FFD4
	0x0393FFEC MOV X0, X21
	0x0393FFF0 MOV W2, W31
	0x0393FFF4 BL 0x1C5C788
	0x0393FFF8 B 0x3940008
	0x0393FFFC LDRSW X9, [X10]
	0x03940000 ADD X8, X8, X9, 0x4, LSL
	0x03940004 ADD X0, X8, 0x138
	0x03940008 LDP X8, X2, [X0]
	0x0394000C MOV X0, X21
	0x03940010 MOV W1, W24
	0x03940014 BLR X8
	0x03940018 CBZ X0, 0x39405C4
	0x0394001C LDUR V0, [X0 + 0x2C]
	0x03940020 LDR V1, [X0 + 0x34]
	0x03940024 ADD W29, W29, 0x1
	0x03940028 FADD V0.2S, V9.2S, V0.2S
	0x0394002C FADD S1, S8, S1
	0x03940030 STUR D0, [X19 + 0x2C]
	0x03940034 STR S1, [X19 + 0x34]
	0x03940038 LDR X8, [X21]
	0x0394003C LDR X1, [X28]
	0x03940040 LDRH W9, [X8 + 0x12E]
	0x03940044 CBZ X9, 0x3940068
	0x03940048 LDR X10, [X8 + 0xB0]
	0x0394004C ADD X10, X10, 0x8
	0x03940050 LDUR X11, [X10 - 0x8]
	0x03940054 CMP X11, X1
	0x03940058 B.EQ 0x3940078
	0x0394005C SUBS X9, X9, 0x1
	0x03940060 ADD X10, X10, 0x10
	0x03940064 B.NE 0x3940050
	0x03940068 MOV X0, X21
	0x0394006C MOV W2, W31
	0x03940070 BL 0x1C5C788
	0x03940074 B 0x3940084
	0x03940078 LDRSW X9, [X10]
	0x0394007C ADD X8, X8, X9, 0x4, LSL
	0x03940080 ADD X0, X8, 0x138
	0x03940084 LDP X8, X2, [X0]
	0x03940088 MOV X0, X21
	0x0394008C MOV W1, W24
	0x03940090 BLR X8
	0x03940094 CBZ X0, 0x39405C4
	0x03940098 LDRB W8, [X0 + 0x78]
	0x0394009C TBZ X8, 0x7, 0x3940128
	0x039400A0 CBZ X19, 0x39405C4
	0x039400A4 LDR X8, [X21]
	0x039400A8 LDUR V0, [X19 + 0x38]
	0x039400AC LDR X1, [X28]
	0x039400B0 LDRH W9, [X8 + 0x12E]
	0x039400B4 STR V0, [X31]
	0x039400B8 CBZ X9, 0x39400DC
	0x039400BC LDR X10, [X8 + 0xB0]
	0x039400C0 ADD X10, X10, 0x8
	0x039400C4 LDUR X11, [X10 - 0x8]
	0x039400C8 CMP X11, X1
	0x039400CC B.EQ 0x39400EC
	0x039400D0 SUBS X9, X9, 0x1
	0x039400D4 ADD X10, X10, 0x10
	0x039400D8 B.NE 0x39400C4
	0x039400DC MOV X0, X21
	0x039400E0 MOV W2, W31
	0x039400E4 BL 0x1C5C788
	0x039400E8 B 0x39400F8
	0x039400EC LDRSW X9, [X10]
	0x039400F0 ADD X8, X8, X9, 0x4, LSL
	0x039400F4 ADD X0, X8, 0x138
	0x039400F8 LDP X8, X2, [X0]
	0x039400FC MOV X0, X21
	0x03940100 MOV W1, W24
	0x03940104 BLR X8
	0x03940108 CBZ X0, 0x39405C4
	0x0394010C LDUR V0, [X0 + 0x38]
	0x03940110 LDR W8, [X31 + 0x1C]
	0x03940114 LDR V1, [X31]
	0x03940118 ADD W8, W8, 0x1
	0x0394011C FADD V0.4S, V1.4S, V0.4S
	0x03940120 STR W8, [X31 + 0x1C]
	0x03940124 STUR V0, [X19 + 0x38]
	0x03940128 LDR X8, [X21]
	0x0394012C LDR X1, [X28]
	0x03940130 LDRH W9, [X8 + 0x12E]
	0x03940134 CBZ X9, 0x3940158
	0x03940138 LDR X10, [X8 + 0xB0]
	0x0394013C ADD X10, X10, 0x8
	0x03940140 LDUR X11, [X10 - 0x8]
	0x03940144 CMP X11, X1
	0x03940148 B.EQ 0x3940168
	0x0394014C SUBS X9, X9, 0x1
	0x03940150 ADD X10, X10, 0x10
	0x03940154 B.NE 0x3940140
	0x03940158 MOV X0, X21
	0x0394015C MOV W2, W31
	0x03940160 BL 0x1C5C788
	0x03940164 B 0x3940174
	0x03940168 LDRSW X9, [X10]
	0x0394016C ADD X8, X8, X9, 0x4, LSL
	0x03940170 ADD X0, X8, 0x138
	0x03940174 LDP X8, X2, [X0]
	0x03940178 MOV X0, X21
	0x0394017C MOV W1, W24
	0x03940180 BLR X8
	0x03940184 CBZ X0, 0x39405C4
	0x03940188 LDRB W8, [X0 + 0x78]
	0x0394018C TBZ X8, 0x2, 0x3940210
	0x03940190 CBZ X19, 0x39405C4
	0x03940194 LDR X8, [X21]
	0x03940198 LDR V8, [X19 + 0x50]
	0x0394019C LDR X1, [X28]
	0x039401A0 LDRH W9, [X8 + 0x12E]
	0x039401A4 CBZ X9, 0x39401C8
	0x039401A8 LDR X10, [X8 + 0xB0]
	0x039401AC ADD X10, X10, 0x8
	0x039401B0 LDUR X11, [X10 - 0x8]
	0x039401B4 CMP X11, X1
	0x039401B8 B.EQ 0x39401D8
	0x039401BC SUBS X9, X9, 0x1
	0x039401C0 ADD X10, X10, 0x10
	0x039401C4 B.NE 0x39401B0
	0x039401C8 MOV X0, X21
	0x039401CC MOV W2, W31
	0x039401D0 BL 0x1C5C788
	0x039401D4 B 0x39401E4
	0x039401D8 LDRSW X9, [X10]
	0x039401DC ADD X8, X8, X9, 0x4, LSL
	0x039401E0 ADD X0, X8, 0x138
	0x039401E4 LDP X8, X2, [X0]
	0x039401E8 MOV X0, X21
	0x039401EC MOV W1, W24
	0x039401F0 BLR X8
	0x039401F4 CBZ X0, 0x39405C4
	0x039401F8 LDR V0, [X0 + 0x50]
	0x039401FC LDR W8, [X31 + 0x18]
	0x03940200 FADD V0.2S, V8.2S, V0.2S
	0x03940204 ADD W8, W8, 0x1
	0x03940208 STR W8, [X31 + 0x18]
	0x0394020C STR D0, [X19 + 0x50]
	0x03940210 LDR X8, [X21]
	0x03940214 LDR X1, [X28]
	0x03940218 LDRH W9, [X8 + 0x12E]
	0x0394021C CBZ X9, 0x3940240
	0x03940220 LDR X10, [X8 + 0xB0]
	0x03940224 ADD X10, X10, 0x8
	0x03940228 LDUR X11, [X10 - 0x8]
	0x0394022C CMP X11, X1
	0x03940230 B.EQ 0x3940250
	0x03940234 SUBS X9, X9, 0x1
	0x03940238 ADD X10, X10, 0x10
	0x0394023C B.NE 0x3940228
	0x03940240 MOV X0, X21
	0x03940244 MOV W2, W31
	0x03940248 BL 0x1C5C788
	0x0394024C B 0x394025C
	0x03940250 LDRSW X9, [X10]
	0x03940254 ADD X8, X8, X9, 0x4, LSL
	0x03940258 ADD X0, X8, 0x138
	0x0394025C LDP X8, X2, [X0]
	0x03940260 MOV X0, X21
	0x03940264 MOV W1, W24
	0x03940268 BLR X8
	0x0394026C CBZ X0, 0x39405C4
	0x03940270 LDRB W8, [X0 + 0x78]
	0x03940274 TBZ X8, 0x3, 0x3940300
	0x03940278 CBZ X19, 0x39405C4
	0x0394027C LDR X8, [X21]
	0x03940280 LDUR V0, [X19 + 0x58]
	0x03940284 LDR X1, [X28]
	0x03940288 LDRH W9, [X8 + 0x12E]
	0x0394028C STR V0, [X31]
	0x03940290 CBZ X9, 0x39402B4
	0x03940294 LDR X10, [X8 + 0xB0]
	0x03940298 ADD X10, X10, 0x8
	0x0394029C LDUR X11, [X10 - 0x8]
	0x039402A0 CMP X11, X1
	0x039402A4 B.EQ 0x39402C4
	0x039402A8 SUBS X9, X9, 0x1
	0x039402AC ADD X10, X10, 0x10
	0x039402B0 B.NE 0x394029C
	0x039402B4 MOV X0, X21
	0x039402B8 MOV W2, W31
	0x039402BC BL 0x1C5C788
	0x039402C0 B 0x39402D0
	0x039402C4 LDRSW X9, [X10]
	0x039402C8 ADD X8, X8, X9, 0x4, LSL
	0x039402CC ADD X0, X8, 0x138
	0x039402D0 LDP X8, X2, [X0]
	0x039402D4 MOV X0, X21
	0x039402D8 MOV W1, W24
	0x039402DC BLR X8
	0x039402E0 CBZ X0, 0x39405C4
	0x039402E4 LDUR V0, [X0 + 0x58]
	0x039402E8 LDR W8, [X31 + 0x14]
	0x039402EC LDR V1, [X31]
	0x039402F0 ADD W8, W8, 0x1
	0x039402F4 FADD V0.4S, V1.4S, V0.4S
	0x039402F8 STR W8, [X31 + 0x14]
	0x039402FC STUR V0, [X19 + 0x58]
	0x03940300 LDR X8, [X21]
	0x03940304 LDR X1, [X28]
	0x03940308 LDRH W9, [X8 + 0x12E]
	0x0394030C CBZ X9, 0x3940330
	0x03940310 LDR X10, [X8 + 0xB0]
	0x03940314 ADD X10, X10, 0x8
	0x03940318 LDUR X11, [X10 - 0x8]
	0x0394031C CMP X11, X1
	0x03940320 B.EQ 0x3940340
	0x03940324 SUBS X9, X9, 0x1
	0x03940328 ADD X10, X10, 0x10
	0x0394032C B.NE 0x3940318
	0x03940330 MOV X0, X21
	0x03940334 MOV W2, W31
	0x03940338 BL 0x1C5C788
	0x0394033C B 0x394034C
	0x03940340 LDRSW X9, [X10]
	0x03940344 ADD X8, X8, X9, 0x4, LSL
	0x03940348 ADD X0, X8, 0x138
	0x0394034C LDP X8, X2, [X0]
	0x03940350 MOV X0, X21
	0x03940354 MOV W1, W24
	0x03940358 BLR X8
	0x0394035C CBZ X0, 0x39405C4
	0x03940360 LDRB W8, [X0 + 0x78]
	0x03940364 TBZ X8, 0x4, 0x39403F0
	0x03940368 CBZ X19, 0x39405C4
	0x0394036C LDR X8, [X21]
	0x03940370 LDUR V0, [X19 + 0x68]
	0x03940374 LDR X1, [X28]
	0x03940378 LDRH W9, [X8 + 0x12E]
	0x0394037C STR V0, [X31]
	0x03940380 CBZ X9, 0x39403A4
	0x03940384 LDR X10, [X8 + 0xB0]
	0x03940388 ADD X10, X10, 0x8
	0x0394038C LDUR X11, [X10 - 0x8]
	0x03940390 CMP X11, X1
	0x03940394 B.EQ 0x39403B4
	0x03940398 SUBS X9, X9, 0x1
	0x0394039C ADD X10, X10, 0x10
	0x039403A0 B.NE 0x394038C
	0x039403A4 MOV X0, X21
	0x039403A8 MOV W2, W31
	0x039403AC BL 0x1C5C788
	0x039403B0 B 0x39403C0
	0x039403B4 LDRSW X9, [X10]
	0x039403B8 ADD X8, X8, X9, 0x4, LSL
	0x039403BC ADD X0, X8, 0x138
	0x039403C0 LDP X8, X2, [X0]
	0x039403C4 MOV X0, X21
	0x039403C8 MOV W1, W24
	0x039403CC BLR X8
	0x039403D0 CBZ X0, 0x39405C4
	0x039403D4 LDUR V0, [X0 + 0x68]
	0x039403D8 LDR W8, [X31 + 0x10]
	0x039403DC LDR V1, [X31]
	0x039403E0 ADD W8, W8, 0x1
	0x039403E4 FADD V0.4S, V1.4S, V0.4S
	0x039403E8 STR W8, [X31 + 0x10]
	0x039403EC STUR V0, [X19 + 0x68]
	0x039403F0 ADD W23, W23, 0x1
	0x039403F4 CMP W23, W22
	0x039403F8 B.NE 0x393FC20
	0x039403FC CMP W27, 0x1
	0x03940400 B.LT 0x3940438
	0x03940404 CBZ X19, 0x39405C4
	0x03940408 LDR W8, [X19 + 0x78]
	0x0394040C LDR V0, [X19 + 0x10]
	0x03940410 LDR V1, [X19 + 0x18]
	0x03940414 SCVTF S2, W27
	0x03940418 FMOV S3, 1
	0x0394041C FDIV S2, S3, S2
	0x03940420 ORR W8, W8, 0x1
	0x00000000 INVALID
	0x03940428 FMUL S1, S2, S1
	0x0394042C STR W8, [X19 + 0x78]
	0x03940430 STR D0, [X19 + 0x10]
	0x03940434 STR S1, [X19 + 0x18]
	0x03940438 CMP W26, 0x1
	0x0394043C B.LT 0x3940468
	0x03940440 CBZ X19, 0x39405C4
	0x03940444 LDR W8, [X19 + 0x78]
	0x03940448 LDUR V0, [X19 + 0x1C]
	0x0394044C SCVTF S1, W26
	0x03940450 FMOV S2, 1
	0x03940454 FDIV S1, S2, S1
	0x03940458 ORR W8, W8, 0x20
	0x00000000 INVALID
	0x03940460 STR W8, [X19 + 0x78]
	0x03940464 STUR V0, [X19 + 0x1C]
	0x03940468 CMP W25, 0x1
	0x0394046C B.LT 0x3940498
	0x03940470 CBZ X19, 0x39405C4
	0x03940474 LDR W8, [X19 + 0x78]
	0x03940478 LDR V0, [X19 + 0x48]
	0x0394047C SCVTF S1, W25
	0x03940480 FMOV S2, 1
	0x03940484 FDIV S1, S2, S1
	0x03940488 ORR W8, W8, 0x2
	0x00000000 INVALID
	0x03940490 STR W8, [X19 + 0x78]
	0x03940494 STR D0, [X19 + 0x48]
	0x03940498 CMP W29, 0x1
	0x0394049C B.LT 0x39404D4
	0x039404A0 CBZ X19, 0x39405C4
	0x039404A4 LDR W8, [X19 + 0x78]
	0x039404A8 LDUR V0, [X19 + 0x2C]
	0x039404AC LDR V1, [X19 + 0x34]
	0x039404B0 SCVTF S2, W29
	0x039404B4 FMOV S3, 1
	0x039404B8 FDIV S2, S3, S2
	0x039404BC ORR W8, W8, 0x40
	0x00000000 INVALID
	0x039404C4 FMUL S1, S2, S1
	0x039404C8 STR W8, [X19 + 0x78]
	0x039404CC STUR D0, [X19 + 0x2C]
	0x039404D0 STR S1, [X19 + 0x34]
	0x039404D4 LDP W11, W12, [X31 + 0x18]
	0x039404D8 LDP W9, W10, [X31 + 0x10]
	0x039404DC CMP W12, 0x1
	0x039404E0 B.LT 0x394050C
	0x039404E4 CBZ X19, 0x39405C4
	0x039404E8 LDR W8, [X19 + 0x78]
	0x039404EC LDUR V0, [X19 + 0x38]
	0x039404F0 SCVTF S1, W12
	0x039404F4 FMOV S2, 1
	0x039404F8 FDIV S1, S2, S1
	0x039404FC ORR W8, W8, 0x80
	0x00000000 INVALID
	0x03940504 STR W8, [X19 + 0x78]
	0x03940508 STUR V0, [X19 + 0x38]
	0x0394050C CMP W11, 0x1
	0x03940510 B.LT 0x394053C
	0x03940514 CBZ X19, 0x39405C4
	0x03940518 LDR W8, [X19 + 0x78]
	0x0394051C LDR V0, [X19 + 0x50]
	0x03940520 SCVTF S1, W11
	0x03940524 FMOV S2, 1
	0x03940528 FDIV S1, S2, S1
	0x0394052C ORR W8, W8, 0x4
	0x00000000 INVALID
	0x03940534 STR W8, [X19 + 0x78]
	0x03940538 STR D0, [X19 + 0x50]
	0x0394053C CMP W10, 0x1
	0x03940540 B.LT 0x394056C
	0x03940544 CBZ X19, 0x39405C4
	0x03940548 LDR W8, [X19 + 0x78]
	0x0394054C LDUR V0, [X19 + 0x58]
	0x03940550 SCVTF S1, W10
	0x03940554 FMOV S2, 1
	0x03940558 FDIV S1, S2, S1
	0x0394055C ORR W8, W8, 0x8
	0x00000000 INVALID
	0x03940564 STR W8, [X19 + 0x78]
	0x03940568 STUR V0, [X19 + 0x58]
	0x0394056C CMP W9, 0x1
	0x03940570 B.LT 0x394059C
	0x03940574 CBZ X19, 0x39405C4
	0x03940578 LDR W8, [X19 + 0x78]
	0x0394057C LDUR V0, [X19 + 0x68]
	0x03940580 SCVTF S1, W9
	0x03940584 FMOV S2, 1
	0x03940588 FDIV S1, S2, S1
	0x0394058C ORR W8, W8, 0x10
	0x00000000 INVALID
	0x03940594 STR W8, [X19 + 0x78]
	0x03940598 STUR V0, [X19 + 0x68]
	0x0394059C MOV X0, X19
	0x039405A0 LDP X20, X19, [X31 + 0x80]
	0x039405A4 LDP X22, X21, [X31 + 0x70]
	0x039405A8 LDP X24, X23, [X31 + 0x60]
	0x039405AC LDP X26, X25, [X31 + 0x50]
	0x039405B0 LDP X28, X27, [X31 + 0x40]
	0x039405B4 LDP X29, X30, [X31 + 0x30]
	0x039405B8 LDP D9, D8, [X31 + 0x20]
	0x039405BC ADD X31, X31, 0x90
	0x039405C0 RET
	0x039405C4 BL 0x1C16F20
	0x039405C8 ADRP X0, 0x7B8000
	0x039405CC LDR X0, [X0 + 0x528]
	0x039405D0 BL 0x1C16D08
	0x039405D4 BL 0x1C16F10
	0x039405D8 MOV X19, X0
	0x039405DC ADRP X0, 0x80E000
	0x039405E0 LDR X0, [X0 + 0x450]
	0x039405E4 BL 0x1C16D08
	0x039405E8 MOV X1, X0
	0x039405EC MOV X0, X19
	0x039405F0 MOV X2, X31
	0x039405F4 BL 0x330E100
	0x039405F8 ADRP X0, 0x80E000
	0x039405FC LDR X0, [X0 + 0xF68]
	0x03940600 BL 0x1C16D08
	0x03940604 MOV X1, X0
	0x03940608 MOV X0, X19
	0x0394060C BL 0x1C16DEC
	0x03940610 SUB X31, X31, 0x30
	0x03940614 STP X30, X21, [X31 + 0x10]
	0x03940618 STP X20, X19, [X31 + 0x20]
	0x0394061C ADRP X21, 0xAA1000
	0x03940620 LDRB W8, [X21 + 0x94F]
	0x03940624 MOV X19, X1
	0x03940628 MOV X20, X0
	0x0394062C STR D0, [X31]
	0x03940630 TBNZ X8, 0x0, 0x3940648
	0x03940634 ADRP X0, 0x80E000
	0x03940638 LDR X0, [X0 + 0x20]
	0x0394063C BL 0x1C16CF4
	0x03940640 MOVZ W8, 0x1
	0x03940644 STRB W8, [X21 + 0x94F]
	0x03940648 CBZ X20, 0x394089C
	0x0394064C CBZ X19, 0x394089C
	0x03940650 ADRP X8, 0x80E000
	0x03940654 LDR X8, [X8 + 0x20]
	0x03940658 LDR X0, [X8]
	0x0394065C BL 0x1C16F10
	0x03940660 MOV X1, X31
	0x03940664 MOV X21, X0
	0x03940668 BL 0x33BDD8C
	0x0394066C CBZ X21, 0x39408F8
	0x03940670 LDR V7, [X31]
	0x03940674 LDR V1, [X20 + 0x18]
	0x03940678 LDR V2, [X19 + 0x18]
	0x0394067C LDR V3, [X20 + 0x10]
	0x03940680 LDR V4, [X19 + 0x10]
	0x03940684 FMOV S0, 1
	0x03940688 FSUB S0, S0, S7
	0x0394068C FMUL S1, S0, S1
	0x03940690 FMUL S2, S2, S7
	0x03940694 FADD S1, S1, S2
	0x00000000 INVALID
	0x00000000 INVALID
	0x039406A0 FADD V2.2S, V2.2S, V3.2S
	0x039406A4 STR D2, [X21 + 0x10]
	0x039406A8 STR S1, [X21 + 0x18]
	0x039406AC LDRB W9, [X20 + 0x78]
	0x039406B0 LDR W8, [X19 + 0x78]
	0x039406B4 TBNZ X9, 0x5, 0x39406C4
	0x039406B8 TBZ X8, 0x5, 0x39406E8
	0x039406BC LDUR V1, [X19 + 0x1C]
	0x039406C0 B 0x39406E4
	0x039406C4 TBNZ X8, 0x5, 0x39406D0
	0x039406C8 LDUR V1, [X20 + 0x1C]
	0x039406CC B 0x39406E4
	0x039406D0 LDUR V1, [X20 + 0x1C]
	0x039406D4 LDUR V2, [X19 + 0x1C]
	0x00000000 INVALID
	0x00000000 INVALID
	0x039406E0 FADD V1.4S, V1.4S, V2.4S
	0x039406E4 STUR V1, [X21 + 0x1C]
	0x039406E8 LDRB W9, [X20 + 0x78]
	0x039406EC LDR W8, [X19 + 0x78]
	0x039406F0 UNIMPLEMENTED
	0x039406F4 UNIMPLEMENTED
	0x039406F8 TBNZ X9, 0x6, 0x394070C
	0x039406FC TBZ X8, 0x6, 0x3940754
	0x03940700 LDR W8, [X19 + 0x34]
	0x03940704 LDUR X9, [X19 + 0x2C]
	0x03940708 B 0x3940718
	0x0394070C TBNZ X8, 0x6, 0x3940724
	0x03940710 LDR W8, [X20 + 0x34]
	0x03940714 LDUR X9, [X20 + 0x2C]
	0x03940718 STR W8, [X21 + 0x34]
	0x0394071C STUR X9, [X21 + 0x2C]
	0x03940720 B 0x3940754
	0x03940724 LDUR V3, [X20 + 0x2C]
	0x03940728 LDR V4, [X20 + 0x34]
	0x0394072C LDUR V5, [X19 + 0x2C]
	0x03940730 LDR V6, [X19 + 0x34]
	0x00000000 INVALID
	0x03940738 FMUL S4, S0, S4
	0x00000000 INVALID
	0x03940740 FMUL S6, S6, S7
	0x03940744 FADD V3.2S, V3.2S, V5.2S
	0x03940748 FADD S4, S4, S6
	0x0394074C STUR D3, [X21 + 0x2C]
	0x03940750 STR S4, [X21 + 0x34]
	0x03940754 LDRB W9, [X20 + 0x78]
	0x03940758 LDR W8, [X19 + 0x78]
	0x0394075C TBNZ X9, 0x7, 0x394076C
	0x03940760 TBZ X8, 0x7, 0x3940790
	0x03940764 LDUR V3, [X19 + 0x38]
	0x03940768 B 0x394078C
	0x0394076C TBNZ X8, 0x7, 0x3940778
	0x03940770 LDUR V3, [X20 + 0x38]
	0x03940774 B 0x394078C
	0x03940778 LDUR V3, [X20 + 0x38]
	0x0394077C LDUR V4, [X19 + 0x38]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03940788 FADD V3.4S, V3.4S, V4.4S
	0x0394078C STUR V3, [X21 + 0x38]
	0x03940790 LDRB W9, [X20 + 0x78]
	0x03940794 LDR W8, [X19 + 0x78]
	0x03940798 TBNZ X9, 0x1, 0x39407A8
	0x0394079C TBZ X8, 0x1, 0x39407D0
	0x039407A0 LDR X8, [X19 + 0x48]
	0x039407A4 B 0x39407B0
	0x039407A8 TBNZ X8, 0x1, 0x39407B8
	0x039407AC LDR X8, [X20 + 0x48]
	0x039407B0 STR X8, [X21 + 0x48]
	0x039407B4 B 0x39407D0
	0x039407B8 LDR V3, [X20 + 0x48]
	0x039407BC LDR V4, [X19 + 0x48]
	0x00000000 INVALID
	0x00000000 INVALID
	0x039407C8 FADD V3.2S, V3.2S, V4.2S
	0x039407CC STR D3, [X21 + 0x48]
	0x039407D0 LDRB W9, [X20 + 0x78]
	0x039407D4 LDR W8, [X19 + 0x78]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xAA3000
	015 Move W8, [X19+2380]
	016 Move X26, X0
	017 Move [X31+16], X7
	018 Move [X31+24], X6
	019 Move [X31+32], X5
	020 Move [X31+40], X4
	021 Move [X31+48], X3
	022 Move [X31+56], X2
	023 Move [X31+64], X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, 0x7BA000
	029 Move X0, [X0+320]
	030 Call 0x1C17CF4
	031 Move X0, 0x810000
	032 Move X0, [X0+488]
	033 Call 0x1C17CF4
	034 Move X0, 0x80F000
	035 Move X0, [X0+3936]
	036 Call 0x1C17CF4
	037 Move X0, 0x80F000
	038 Move X0, [X0+4080]
	039 Call 0x1C17CF4
	040 Move X0, 0x810000
	041 Move X0, [X0+3920]
	042 Call 0x1C17CF4
	043 Move X0, 0x810000
	044 Move X0, [X0+8]
	045 Call 0x1C17CF4
	046 Move X0, 0x80F000
	047 Move X0, [X0+2696]
	048 Call 0x1C17CF4
	049 Move X0, 0x7B7000
	050 Move X0, [X0+2480]
	051 Call 0x1C17CF4
	052 Move X0, 0x810000
	053 Move X0, [X0+72]
	054 Call 0x1C17CF4
	055 Move X0, 0x810000
	056 Move X0, [X0+32]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+2380], W8
	060 Compare X26, 0
	061 JumpIfEqual {691}
	062 Move X10, 0x810000
	063 Move X8, [X26]
	064 Move X10, [X10+488]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X10]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X26
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X29, 0x80F000
	084 Move W19, [X31+184]
	085 Move X29, [X29+3936]
	086 Move X0, X26
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W28, W0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X26]
	091 Move X1, [X29]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X26
	102 Move W2, W31
	103 Call 0x1C5D788
	104 Move X8, 0x810000
	105 Move X8, [X8+32]
	106 Move X0, [X8]
	107 Call 0x1C17F10
	108 Move X1, X31
	109 Move X27, X0
	110 Call Object..ctor, X0
	111 Move TEMP, X19
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {204}
	115 Compare X27, 0
	116 JumpIfEqual {689}
	117 Move W8, [X27+120]
	118 And W8, W8, 1
	119 Move [X31+76], W8
	120 Move TEMP, X19
	121 And TEMP, TEMP, 32
	122 Compare TEMP, 32
	123 JumpIfNotEqual {209}
	124 Compare X27, 0
	125 JumpIfEqual {689}
	126 Move W8, [X27+120]
	127 Move W8, W8
	128 ShiftRight W8, 5
	129 And W8, W8, 31
	130 Move [X31+72], W8
	131 Move TEMP, X19
	132 And TEMP, TEMP, 2
	133 Compare TEMP, 2
	134 JumpIfNotEqual {214}
	135 Compare X27, 0
	136 JumpIfEqual {689}
	137 Move W8, [X27+120]
	138 Move W21, W8
	139 ShiftRight W21, 1
	140 And W21, W21, 1
	141 Move TEMP, X19
	142 And TEMP, TEMP, 64
	143 Compare TEMP, 64
	144 JumpIfNotEqual {219}
	145 Compare X27, 0
	146 JumpIfEqual {689}
	147 Move W8, [X27+120]
	148 Move W22, W8
	149 ShiftRight W22, 6
	150 And W22, W22, 63
	151 Move TEMP, X19
	152 And TEMP, TEMP, 128
	153 Compare TEMP, 128
	154 JumpIfNotEqual {224}
	155 Compare X27, 0
	156 JumpIfEqual {689}
	157 Move W8, [X27+120]
	158 Move W23, W8
	159 ShiftRight W23, 7
	160 And W23, W23, 127
	161 Move TEMP, X19
	162 And TEMP, TEMP, 4
	163 Compare TEMP, 4
	164 JumpIfNotEqual {229}
	165 Compare X27, 0
	166 JumpIfEqual {689}
	167 Move W8, [X27+120]
	168 Move W24, W8
	169 ShiftRight W24, 2
	170 And W24, W24, 3
	171 Move TEMP, X19
	172 And TEMP, TEMP, 8
	173 Compare TEMP, 8
	174 JumpIfNotEqual {234}
	175 Compare X27, 0
	176 JumpIfEqual {689}
	177 Move W8, [X27+120]
	178 Move W25, W8
	179 ShiftRight W25, 3
	180 And W25, W25, 7
	181 Move TEMP, X19
	182 And TEMP, TEMP, 16
	183 Compare TEMP, 16
	184 JumpIfNotEqual {239}
	185 Compare X27, 0
	186 JumpIfEqual {689}
	187 Move W8, [X27+120]
	188 Move W19, W8
	189 ShiftRight W19, 4
	190 And W19, W19, 15
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X2, [X0+8]
	196 Move X0, X26
	197 Move W1, W31
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X27, X0
	200 Move TEMP, X19
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {115}
	204 Move [X31+76], W31
	205 Move TEMP, X19
	206 And TEMP, TEMP, 32
	207 Compare TEMP, 32
	208 JumpIfEqual {124}
	209 Move [X31+72], W31
	210 Move TEMP, X19
	211 And TEMP, TEMP, 2
	212 Compare TEMP, 2
	213 JumpIfEqual {135}
	214 Move W21, W31
	215 Move TEMP, X19
	216 And TEMP, TEMP, 64
	217 Compare TEMP, 64
	218 JumpIfEqual {145}
	219 Move W22, W31
	220 Move TEMP, X19
	221 And TEMP, TEMP, 128
	222 Compare TEMP, 128
	223 JumpIfEqual {155}
	224 Move W23, W31
	225 Move TEMP, X19
	226 And TEMP, TEMP, 4
	227 Compare TEMP, 4
	228 JumpIfEqual {165}
	229 Move W24, W31
	230 Move TEMP, X19
	231 And TEMP, TEMP, 8
	232 Compare TEMP, 8
	233 JumpIfEqual {175}
	234 Move W25, W31
	235 Move TEMP, X19
	236 And TEMP, TEMP, 16
	237 Compare TEMP, 16
	238 JumpIfEqual {185}
	239 Move W19, W31
	240 Move X20, 0x7B6000
	241 Move X20, [X20+2480]
	242 Move W8, [X31+76]
	243 Compare W8, 0
	244 JumpIfEqual {248}
	245 Move X0, [X20]
	246 Move W1, W28
	247 Call 0x1C17D6C
	248 Move X0, X31
	249 Move X8, [X31+64]
	250 Move [X8], X0
	251 Move W8, [X31+72]
	252 Compare W8, 0
	253 JumpIfEqual {259}
	254 Move X8, 0x7B9000
	255 Move X8, [X8+320]
	256 Move W1, W28
	257 Move X0, [X8]
	258 Call 0x1C17D6C
	259 Move X0, X31
	260 Move X27, 0x80E000
	261 Move X27, [X27+2696]
	262 Move X8, [X31+56]
	263 Move [X8], X0
	264 Compare W21, 0
	265 JumpIfEqual {269}
	266 Move X0, [X27]
	267 Move W1, W28
	268 Call 0x1C17D6C
	269 Move X0, X31
	270 Move X8, [X31+48]
	271 Move [X8], X0
	272 Compare W22, 0
	273 JumpIfEqual {277}
	274 Move X0, [X20]
	275 Move W1, W28
	276 Call 0x1C17D6C
	277 Move X0, X31
	278 Move X8, [X31+40]
	279 Move [X8], X0
	280 Compare W23, 0
	281 JumpIfEqual {287}
	282 Move X8, 0x80F000
	283 Move X8, [X8+72]
	284 Move W1, W28
	285 Move X0, [X8]
	286 Call 0x1C17D6C
	287 Move X0, X31
	288 Move X8, [X31+32]
	289 Move [X31+4], W22
	290 Move [X8], X0
	291 Compare W24, 0
	292 JumpIfEqual {296}
	293 Move X0, [X27]
	294 Move W1, W28
	295 Call 0x1C17D6C
	296 Move X0, X31
	297 Move X8, [X31+176]
	298 Move X9, 0x80F000
	299 Move X27, 0x80F000
	300 Move W22, W21
	301 Move [X31+8], X8
	302 Move X9, [X9+8]
	303 Move X27, [X27+3920]
	304 Move X8, [X31+24]
	305 Move [X8], X0
	306 Compare W25, 0
	307 JumpIfEqual {316}
	308 Move X0, [X9]
	309 Move X21, X9
	310 Call 0x1C17F10
	311 Move X2, [X27]
	312 Move W1, W28
	313 Move X20, X27
	314 Move X27, X0
	315 Call List`1<Vector4>..ctor, X0, X1
	316 Move X21, X9
	317 Move X20, X27
	318 Move X27, X31
	319 Move X8, [X31+16]
	320 Move [X8], X27
	321 Compare W19, 0
	322 JumpIfEqual {329}
	323 Move X0, [X21]
	324 Call 0x1C17F10
	325 Move X2, [X20]
	326 Move W1, W28
	327 Move X27, X0
	328 Call List`1<Vector4>..ctor, X0, X1
	329 Move X27, X31
	330 Move W21, W22
	331 Move X8, [X31+8]
	332 Move W22, [X31+4]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move [X8], X27
	335 Move X27, X31
	336 Move W20, W28
	337 Move W8, [X31+76]
	338 Compare W8, 0
	339 JumpIfEqual {376}
	340 Move X8, [X26]
	341 Move X9, [X31+64]
	342 Move X1, [X29]
	343 Move X28, [X9]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move X0, X26
	354 Move W2, W31
	355 Call 0x1C5D788
	356 NotImplemented "Instruction LDRSW not yet implemented."
	357 Add X8, X8, X9
	358 Add X0, X8, 312
	359 Move X8, [X0]
	360 Move X2, [X0+8]
	361 Move X0, X26
	362 Move W1, W27
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Compare X0, 0
	365 JumpIfEqual {689}
	366 Compare X28, 0
	367 JumpIfEqual {689}
	368 Move W8, [X28+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move V0, [X0+16]
	371 Move V1, [X0+24]
	372 Move W8, 12
	373 NotImplemented "Instruction MADD not yet implemented."
	374 Move [X8+32], D0
	375 Move [X8+40], S1
	376 Move W8, [X31+72]
	377 Compare W8, 0
	378 JumpIfEqual {412}
	379 Move X8, [X26]
	380 Move X9, [X31+56]
	381 Move X1, [X29]
	382 Move X28, [X9]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Compare X9, 0
	385 JumpIfEqual {392}
	386 Move X10, [X8+176]
	387 Add X10, X10, 8
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Subtract X9, X9, 1
	391 Add X10, X10, 16
	392 Move X0, X26
	393 Move W2, W31
	394 Call 0x1C5D788
	395 NotImplemented "Instruction LDRSW not yet implemented."
	396 Add X8, X8, X9
	397 Add X0, X8, 312
	398 Move X8, [X0]
	399 Move X2, [X0+8]
	400 Move X0, X26
	401 Move W1, W27
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Compare X0, 0
	404 JumpIfEqual {689}
	405 Compare X28, 0
	406 JumpIfEqual {689}
	407 Move W8, [X28+24]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 Add X8, X28, X27
	411 Move [X8+2], V0
	412 Compare W21, 0
	413 JumpIfEqual {447}
	414 Move X8, [X26]
	415 Move X9, [X31+48]
	416 Move X1, [X29]
	417 Move X28, [X9]
	418 NotImplemented "Instruction LDRH not yet implemented."
	419 Compare X9, 0
	420 JumpIfEqual {427}
	421 Move X10, [X8+176]
	422 Add X10, X10, 8
	423 NotImplemented "Instruction LDUR not yet implemented."
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Subtract X9, X9, 1
	426 Add X10, X10, 16
	427 Move X0, X26
	428 Move W2, W31
	429 Call 0x1C5D788
	430 NotImplemented "Instruction LDRSW not yet implemented."
	431 Add X8, X8, X9
	432 Add X0, X8, 312
	433 Move X8, [X0]
	434 Move X2, [X0+8]
	435 Move X0, X26
	436 Move W1, W27
	437 NotImplemented "Instruction BLR not yet implemented."
	438 Compare X0, 0
	439 JumpIfEqual {689}
	440 Compare X28, 0
	441 JumpIfEqual {689}
	442 Move W8, [X28+24]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move V0, [X0+72]
	445 Add X8, X28, X27
	446 Move [X8+32], D0
	447 Compare W22, 0
	448 JumpIfEqual {485}
	449 Move X8, [X26]
	450 Move X9, [X31+40]
	451 Move X1, [X29]
	452 Move X28, [X9]
	453 NotImplemented "Instruction LDRH not yet implemented."
	454 Compare X9, 0
	455 JumpIfEqual {462}
	456 Move X10, [X8+176]
	457 Add X10, X10, 8
	458 NotImplemented "Instruction LDUR not yet implemented."
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Subtract X9, X9, 1
	461 Add X10, X10, 16
	462 Move X0, X26
	463 Move W2, W31
	464 Call 0x1C5D788
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Add X8, X8, X9
	467 Add X0, X8, 312
	468 Move X8, [X0]
	469 Move X2, [X0+8]
	470 Move X0, X26
	471 Move W1, W27
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Compare X0, 0
	474 JumpIfEqual {689}
	475 Compare X28, 0
	476 JumpIfEqual {689}
	477 Move W8, [X28+24]
	478 NotImplemented "Instruction CMP not yet implemented."
	479 NotImplemented "Instruction LDUR not yet implemented."
	480 Move V1, [X0+52]
	481 Move W8, 12
	482 NotImplemented "Instruction MADD not yet implemented."
	483 Move [X8+32], D0
	484 Move [X8+40], S1
	485 Compare W23, 0
	486 JumpIfEqual {520}
	487 Move X8, [X26]
	488 Move X9, [X31+32]
	489 Move X1, [X29]
	490 Move X28, [X9]
	491 NotImplemented "Instruction LDRH not yet implemented."
	492 Compare X9, 0
	493 JumpIfEqual {500}
	494 Move X10, [X8+176]
	495 Add X10, X10, 8
	496 NotImplemented "Instruction LDUR not yet implemented."
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Subtract X9, X9, 1
	499 Add X10, X10, 16
	500 Move X0, X26
	501 Move W2, W31
	502 Call 0x1C5D788
	503 NotImplemented "Instruction LDRSW not yet implemented."
	504 Add X8, X8, X9
	505 Add X0, X8, 312
	506 Move X8, [X0]
	507 Move X2, [X0+8]
	508 Move X0, X26
	509 Move W1, W27
	510 NotImplemented "Instruction BLR not yet implemented."
	511 Compare X0, 0
	512 JumpIfEqual {689}
	513 Compare X28, 0
	514 JumpIfEqual {689}
	515 Move W8, [X28+24]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 NotImplemented "Instruction LDUR not yet implemented."
	518 Add X8, X28, X27
	519 Move [X8+2], V0
	520 Compare W24, 0
	521 JumpIfEqual {555}
	522 Move X8, [X26]
	523 Move X9, [X31+24]
	524 Move X1, [X29]
	525 Move X28, [X9]
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move X0, X26
	536 Move W2, W31
	537 Call 0x1C5D788
	538 NotImplemented "Instruction LDRSW not yet implemented."
	539 Add X8, X8, X9
	540 Add X0, X8, 312
	541 Move X8, [X0]
	542 Move X2, [X0+8]
	543 Move X0, X26
	544 Move W1, W27
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Compare X0, 0
	547 JumpIfEqual {689}
	548 Compare X28, 0
	549 JumpIfEqual {689}
	550 Move W8, [X28+24]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move V0, [X0+80]
	553 Add X8, X28, X27
	554 Move [X8+32], D0
	555 Compare W25, 0
	556 JumpIfEqual {608}
	557 Move X8, [X26]
	558 Move X9, [X31+16]
	559 Move X1, [X29]
	560 Move X28, [X9]
	561 NotImplemented "Instruction LDRH not yet implemented."
	562 Compare X9, 0
	563 JumpIfEqual {570}
	564 Move X10, [X8+176]
	565 Add X10, X10, 8
	566 NotImplemented "Instruction LDUR not yet implemented."
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Subtract X9, X9, 1
	569 Add X10, X10, 16
	570 Move X0, X26
	571 Move W2, W31
	572 Call 0x1C5D788
	573 NotImplemented "Instruction LDRSW not yet implemented."
	574 Add X8, X8, X9
	575 Add X0, X8, 312
	576 Move X8, [X0]
	577 Move X2, [X0+8]
	578 Move X0, X26
	579 Move W1, W27
	580 NotImplemented "Instruction BLR not yet implemented."
	581 Compare X0, 0
	582 JumpIfEqual {689}
	583 Compare X28, 0
	584 JumpIfEqual {689}
	585 Move X8, 0x80E000
	586 Move S0, [X0+88]
	587 Move S1, [X0+92]
	588 Move S2, [X0+96]
	589 Move S3, [X0+100]
	590 Move W10, [X28+28]
	591 Move X9, [X28+16]
	592 Move X8, [X8+4080]
	593 Add W10, W10, 1
	594 Move X8, [X8]
	595 Move [X28+28], W10
	596 Compare X9, 0
	597 JumpIfEqual {689}
	598 NotImplemented "Instruction LDRSW not yet implemented."
	599 Move W11, [X9+24]
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Add W8, W10, 1
	602 Add X9, X9, X10
	603 Move [X28+24], W8
	604 Move [X9+32], S0
	605 Move [X9+40], S1
	606 Move [X9+40], S2
	607 Move [X9+48], S3
	608 Compare W19, 0
	609 JumpIfNotEqual {617}
	610 Move X8, [X8+32]
	611 Move X0, X28
	612 Move X8, [X8+192]
	613 Move X1, [X8+112]
	614 Call List`1<Vector4>.AddWithResize, X0, X1
	615 Compare W19, 0
	616 JumpIfEqual {673}
	617 Move X8, [X26]
	618 Move X9, [X31+8]
	619 Move X1, [X29]
	620 Move X28, [X9]
	621 NotImplemented "Instruction LDRH not yet implemented."
	622 Compare X9, 0
	623 JumpIfEqual {630}
	624 Move X10, [X8+176]
	625 Add X10, X10, 8
	626 NotImplemented "Instruction LDUR not yet implemented."
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Subtract X9, X9, 1
	629 Add X10, X10, 16
	630 Move X0, X26
	631 Move W2, W31
	632 Call 0x1C5D788
	633 NotImplemented "Instruction LDRSW not yet implemented."
	634 Add X8, X8, X9
	635 Add X0, X8, 312
	636 Move X8, [X0]
	637 Move X2, [X0+8]
	638 Move X0, X26
	639 Move W1, W27
	640 NotImplemented "Instruction BLR not yet implemented."
	641 Compare X0, 0
	642 JumpIfEqual {689}
	643 Compare X28, 0
	644 JumpIfEqual {689}
	645 Move X8, 0x80E000
	646 Move S0, [X0+104]
	647 Move S1, [X0+108]
	648 Move S2, [X0+112]
	649 Move S3, [X0+116]
	650 Move W10, [X28+28]
	651 Move X9, [X28+16]
	652 Move X8, [X8+4080]
	653 Add W10, W10, 1
	654 Move X8, [X8]
	655 Move [X28+28], W10
	656 Compare X9, 0
	657 JumpIfEqual {689}
	658 NotImplemented "Instruction LDRSW not yet implemented."
	659 Move W11, [X9+24]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Add W8, W10, 1
	662 Add X9, X9, X10
	663 Move [X28+24], W8
	664 Move [X9+32], S0
	665 Move [X9+40], S1
	666 Move [X9+40], S2
	667 Move [X9+48], S3
	668 Move X8, [X8+32]
	669 Move X0, X28
	670 Move X8, [X8+192]
	671 Move X1, [X8+112]
	672 Call List`1<Vector4>.AddWithResize, X0, X1
	673 Add X27, X27, 1
	674 NotImplemented "Instruction CMP not yet implemented."
	675 Move X20, [X31+160]
	676 Move X19, [X31+168]
	677 Move X22, [X31+144]
	678 Move X21, [X31+152]
	679 Move X24, [X31+128]
	680 Move X23, [X31+136]
	681 Move X26, [X31+112]
	682 Move X25, [X31+120]
	683 Move X28, [X31+96]
	684 Move X27, [X31+104]
	685 Move X29, [X31+80]
	686 Move X30, [X31+88]
	687 Add X31, X31, 176
	688 Return 
	689 Call 0x1C17F20
	690 Call 0x1C17F28
	691 Move X0, 0x7B9000
	692 Move X0, [X0+1320]
	693 Call 0x1C17D08
	694 Call 0x1C17F10
	695 Move X19, X0
	696 Move X0, 0x80F000
	697 Move X0, [X0+1104]
	698 Call 0x1C17D08
	699 Move X1, X0
	700 Move X0, X19
	701 Move X2, X31
	702 Call ArgumentNullException..ctor, X0, X1
	703 Move X0, 0x80F000
	704 Move X0, [X0+3928]
	705 Call 0x1C17D08
	706 Move X1, X0
	707 Move X0, X19
	708 Call 0x1C17DEC

Method: System.Void SetMesh(UnityEngine.Mesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices)

Disassembly:
	0x039407D8 TBNZ X9, 0x2, 0x39407E8
	0x039407DC TBZ X8, 0x2, 0x3940810
	0x039407E0 LDR X8, [X19 + 0x50]
	0x039407E4 B 0x39407F0
	0x039407E8 TBNZ X8, 0x2, 0x39407F8
	0x039407EC LDR X8, [X20 + 0x50]
	0x039407F0 STR X8, [X21 + 0x50]
	0x039407F4 B 0x3940810
	0x039407F8 LDR V3, [X20 + 0x50]
	0x039407FC LDR V4, [X19 + 0x50]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03940808 FADD V1.2S, V1.2S, V2.2S
	0x0394080C STR D1, [X21 + 0x50]
	0x03940810 LDRB W9, [X20 + 0x78]
	0x03940814 LDR W8, [X19 + 0x78]
	0x03940818 TBNZ X9, 0x3, 0x3940828
	0x0394081C TBZ X8, 0x3, 0x394084C
	0x03940820 LDUR V1, [X19 + 0x58]
	0x03940824 B 0x3940848
	0x03940828 TBNZ X8, 0x3, 0x3940834
	0x0394082C LDUR V1, [X20 + 0x58]
	0x03940830 B 0x3940848
	0x03940834 LDUR V1, [X20 + 0x58]
	0x03940838 LDUR V2, [X19 + 0x58]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03940844 FADD V1.4S, V1.4S, V2.4S
	0x03940848 STUR V1, [X21 + 0x58]
	0x0394084C LDRB W9, [X20 + 0x78]
	0x03940850 LDR W8, [X19 + 0x78]
	0x03940854 TBNZ X9, 0x4, 0x3940864
	0x03940858 TBZ X8, 0x4, 0x3940888
	0x0394085C LDUR V0, [X19 + 0x68]
	0x03940860 B 0x3940884
	0x03940864 TBNZ X8, 0x4, 0x3940870
	0x03940868 LDUR V0, [X20 + 0x68]
	0x0394086C B 0x3940884
	0x03940870 LDUR V1, [X20 + 0x68]
	0x03940874 LDUR V2, [X19 + 0x68]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03940880 FADD V0.4S, V0.4S, V1.4S
	0x03940884 STUR V0, [X21 + 0x68]
	0x03940888 MOV X0, X21
	0x0394088C LDP X20, X19, [X31 + 0x20]
	0x03940890 LDP X30, X21, [X31 + 0x10]
	0x03940894 ADD X31, X31, 0x30
	0x03940898 RET
	0x0394089C ADRP X0, 0x7B8000
	0x039408A0 LDR X0, [X0 + 0x528]
	0x039408A4 BL 0x1C16D08
	0x039408A8 BL 0x1C16F10
	0x039408AC MOV X19, X0
	0x039408B0 ADRP X0, 0x7DB000
	0x039408B4 LDR X0, [X0 + 0x780]
	0x039408B8 BL 0x1C16D08
	0x039408BC MOV X20, X0
	0x039408C0 ADRP X0, 0x80E000
	0x039408C4 LDR X0, [X0 + 0xF70]
	0x039408C8 BL 0x1C16D08
	0x039408CC MOV X2, X0
	0x039408D0 MOV X0, X19
	0x039408D4 MOV X1, X20
	0x039408D8 MOV X3, X31
	0x039408DC BL 0x3315F7C
	0x039408E0 ADRP X0, 0x80E000
	0x039408E4 LDR X0, [X0 + 0xF78]
	0x039408E8 BL 0x1C16D08
	0x039408EC MOV X1, X0
	0x039408F0 MOV X0, X19
	0x039408F4 BL 0x1C16DEC
	0x039408F8 BL 0x1C16F20
	0x039408FC STP X30, X25, [X31 - 0x40]!
	0x03940900 STP X24, X23, [X31 + 0x10]
	0x03940904 STP X22, X21, [X31 + 0x20]
	0x03940908 STP X20, X19, [X31 + 0x30]
	0x0394090C ADRP X20, 0xAA1000
	0x03940910 ADRP X21, 0x7B3000
	0x03940914 LDRB W8, [X20 + 0x950]
	0x03940918 LDR X21, [X21 + 0x598]
	0x0394091C MOV X19, X0
	0x03940920 TBNZ X8, 0x0, 0x3940944
	0x03940924 ADRP X0, 0x7B3000
	0x03940928 LDR X0, [X0 + 0x598]
	0x0394092C BL 0x1C16CF4
	0x03940930 ADRP X0, 0x7B5000
	0x03940934 LDR X0, [X0 + 0x9B0]
	0x03940938 BL 0x1C16CF4
	0x0394093C MOVZ W8, 0x1
	0x03940940 STRB W8, [X20 + 0x950]
	0x03940944 LDR X0, [X21]
	0x03940948 LDR W8, [X0 + 0xE0]
	0x0394094C CBNZ W8, 0x3940954
	0x03940950 BL 0x1C16DFC
	0x03940954 MOV X0, X19
	0x03940958 MOV X1, X31
	0x0394095C MOV X2, X31
	0x03940960 BL 0x3C3883C
	0x03940964 TBNZ X0, 0x0, 0x3940A2C
	0x03940968 CBZ X19, 0x3940A24
	0x0394096C ADRP X20, 0x7B5000
	0x03940970 LDR X20, [X20 + 0x9B0]
	0x03940974 MOV X0, X19
	0x03940978 MOV X1, X31
	0x0394097C BL 0x39120C0
	0x03940980 LDR X8, [X20]
	0x03940984 MOV W21, W0
	0x03940988 MOV W1, W21
	0x0394098C MOV X0, X8
	0x03940990 BL 0x1C16D6C
	0x03940994 CMP W21, 0x1
	0x03940998 MOV X20, X0
	0x0394099C B.LT 0x3940A0C
	0x039409A0 LDR X23, [X19 + 0x58]
	0x039409A4 MOV X22, X31
	0x039409A8 MOV W21, W21
	0x039409AC ADD X24, X20, 0x28
	0x039409B0 ADD X25, X23, 0x28
	0x039409B4 MOV X0, X19
	0x039409B8 MOV X1, X31
	0x039409BC BL 0x3C32E90
	0x039409C0 CBZ X23, 0x3940A24
	0x039409C4 LDR W8, [X23 + 0x18]
	0x039409C8 CMP X22, X8
	0x039409CC B.CS 0x3940A28
	0x039409D0 CBZ X0, 0x3940A24
	0x039409D4 LDP S1, S2, [X25 - 0x4]
	0x039409D8 LDUR V0, [X25 - 0x8]
	0x039409DC MOV X1, X31
	0x039409E0 BL 0x3C3DE4C
	0x039409E4 CBZ X20, 0x3940A24
	0x039409E8 LDR W8, [X20 + 0x18]
	0x039409EC CMP X22, X8
	0x039409F0 B.CS 0x3940A28
	0x039409F4 ADD X22, X22, 0x1
	0x039409F8 STP S0, S1, [X24 - 0x8]
	0x039409FC STR S2, [X24], #0xC
	0x03940A00 CMP X21, X22
	0x03940A04 ADD X25, X25, 0xC
	0x03940A08 B.NE 0x39409B4
	0x03940A0C MOV X0, X20
	0x03940A10 LDP X20, X19, [X31 + 0x30]
	0x03940A14 LDP X22, X21, [X31 + 0x20]
	0x03940A18 LDP X24, X23, [X31 + 0x10]
	0x03940A1C LDP X30, X25, [X31], #0x40
	0x03940A20 RET
	0x03940A24 BL 0x1C16F20
	0x03940A28 BL 0x1C16F28
	0x03940A2C ADRP X0, 0x7B8000
	0x03940A30 LDR X0, [X0 + 0x528]
	0x03940A34 BL 0x1C16D08
	0x03940A38 BL 0x1C16F10
	0x03940A3C MOV X19, X0
	0x03940A40 ADRP X0, 0x80D000
	0x03940A44 LDR X0, [X0 + 0xE90]
	0x03940A48 BL 0x1C16D08
	0x03940A4C MOV X1, X0
	0x03940A50 MOV X0, X19
	0x03940A54 MOV X2, X31
	0x03940A58 BL 0x330E100
	0x03940A5C ADRP X0, 0x80E000
	0x03940A60 LDR X0, [X0 + 0xF80]
	0x03940A64 BL 0x1C16D08
	0x03940A68 MOV X1, X0
	0x03940A6C MOV X0, X19
	0x03940A70 BL 0x1C16DEC
	0x03940A74 STR D10, [X31 - 0x40]!
	0x03940A78 STP D9, D8, [X31 + 0x8]
	0x03940A7C STR X30, [X31 + 0x18]
	0x03940A80 STP X22, X21, [X31 + 0x20]
	0x03940A84 STP X20, X19, [X31 + 0x30]
	0x03940A88 ADRP X21, 0xAA1000
	0x03940A8C ADRP X22, 0x7B3000
	0x03940A90 LDRB W8, [X21 + 0x951]
	0x03940A94 LDR X22, [X22 + 0x598]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0xAA2000
	008 Move X22, 0x7B4000
	009 Move W8, [X21+2381]
	010 Move X22, [X22+1432]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x80E000
	018 Move X0, [X0+3936]
	019 Call 0x1C17CF4
	020 Move X0, 0x7B4000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2381], W8
	025 Move X0, [X22]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {211}
	038 Compare X20, 0
	039 JumpIfEqual {218}
	040 Move W8, 255
	041 Add X9, X31, 24
	042 Add X1, X31, 88
	043 Add X2, X31, 72
	044 Add X3, X31, 64
	045 Add X4, X31, 56
	046 Add X5, X31, 48
	047 Add X6, X31, 40
	048 Add X7, X31, 32
	049 Move X0, X20
	050 Move [X31+88], X31
	051 Move [X31+64], X31
	052 Move [X31+72], X31
	053 Move [X31+48], X31
	054 Move [X31+56], X31
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+24], X31
	058 Move [X31+8], W8
	059 Move [X31], X9
	060 Call Vertex.GetArrays, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	061 Compare X19, 0
	062 JumpIfEqual {210}
	063 Move X21, 0x80E000
	064 Move X21, [X21+3936]
	065 Move X0, X19
	066 Move X1, X31
	067 Call Mesh.Clear, X0
	068 Move X8, [X20]
	069 Move X1, [X21]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X20
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X2, [X0+8]
	087 Move X0, X20
	088 Move W1, W31
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {210}
	092 Move W8, [X0+120]
	093 Move X20, X0
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {122}
	098 Move TEMP, X8
	099 And TEMP, TEMP, 32
	100 Compare TEMP, 32
	101 JumpIfEqual {131}
	102 Move TEMP, X8
	103 And TEMP, TEMP, 2
	104 Compare TEMP, 2
	105 JumpIfEqual {140}
	106 Move TEMP, X8
	107 And TEMP, TEMP, 64
	108 Compare TEMP, 64
	109 JumpIfEqual {149}
	110 Move TEMP, X8
	111 And TEMP, TEMP, 128
	112 Compare TEMP, 128
	113 JumpIfEqual {158}
	114 Move TEMP, X8
	115 And TEMP, TEMP, 4
	116 Compare TEMP, 4
	117 JumpIfEqual {167}
	118 Move TEMP, X8
	119 And TEMP, TEMP, 8
	120 Compare TEMP, 8
	121 JumpIfEqual {176}
	122 Move X1, [X31+88]
	123 Move X0, X19
	124 Move X2, X31
	125 Call Mesh.set_vertices, X0, X1
	126 Move W8, [X20+120]
	127 Move TEMP, X8
	128 And TEMP, TEMP, 32
	129 Compare TEMP, 32
	130 JumpIfNotEqual {102}
	131 Move X1, [X31+72]
	132 Move X0, X19
	133 Move X2, X31
	134 Call Mesh.set_colors, X0, X1
	135 Move W8, [X20+120]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 2
	138 Compare TEMP, 2
	139 JumpIfNotEqual {106}
	140 Move X1, [X31+64]
	141 Move X0, X19
	142 Move X2, X31
	143 Call Mesh.set_uv, X0, X1
	144 Move W8, [X20+120]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 64
	147 Compare TEMP, 64
	148 JumpIfNotEqual {110}
	149 Move X1, [X31+56]
	150 Move X0, X19
	151 Move X2, X31
	152 Call Mesh.set_normals, X0, X1
	153 Move W8, [X20+120]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 128
	156 Compare TEMP, 128
	157 JumpIfNotEqual {114}
	158 Move X1, [X31+48]
	159 Move X0, X19
	160 Move X2, X31
	161 Call Mesh.set_tangents, X0, X1
	162 Move W8, [X20+120]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 4
	165 Compare TEMP, 4
	166 JumpIfNotEqual {118}
	167 Move X1, [X31+40]
	168 Move X0, X19
	169 Move X2, X31
	170 Call Mesh.set_uv2, X0, X1
	171 Move W8, [X20+120]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 8
	174 Compare TEMP, 8
	175 JumpIfNotEqual {183}
	176 Move X2, [X31+32]
	177 Compare X2, 0
	178 JumpIfEqual {183}
	179 Move W1, 2
	180 Move X0, X19
	181 Move X3, X31
	182 Call Mesh.SetUVs, X0, X1, X2
	183 Move W8, [X20+120]
	184 Move TEMP, X8
	185 And TEMP, TEMP, 16
	186 Compare TEMP, 16
	187 JumpIfNotEqual {195}
	188 Move X2, [X31+24]
	189 Compare X2, 0
	190 JumpIfEqual {195}
	191 Move W1, 3
	192 Move X0, X19
	193 Move X3, X31
	194 Call Mesh.SetUVs, X0, X1, X2
	195 Move X0, X19
	196 Move X1, X31
	197 Call Mesh.get_vertexCount, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X19
	200 Move X20, [X31+112]
	201 Move X19, [X31+120]
	202 Move X22, [X31+96]
	203 Move X21, [X31+104]
	204 Move X30, [X31+80]
	205 NotImplemented "Instruction CSET not yet implemented."
	206 Move X2, X31
	207 Add X31, X31, 128
	208 Call Mesh.set_indexFormat, X0, X1
	209 Return 
	210 Call 0x1C17F20
	211 Move X0, 0x7B9000
	212 Move X0, [X0+1320]
	213 Call 0x1C17D08
	214 Call 0x1C17F10
	215 Move X19, X0
	216 Move X0, 0x80E000
	217 Move X0, [X0+3728]
	218 Move X0, 0x7B9000
	219 Move X0, [X0+1320]
	220 Call 0x1C17D08
	221 Call 0x1C17F10
	222 Move X19, X0
	223 Move X0, 0x80F000
	224 Move X0, [X0+1104]
	225 Call 0x1C17D08
	226 Move X1, X0
	227 Move X0, X19
	228 Move X2, X31
	229 Call ArgumentNullException..ctor, X0, X1
	230 Move X0, 0x80F000
	231 Move X0, [X0+3936]
	232 Call 0x1C17D08
	233 Move X1, X0
	234 Move X0, X19
	235 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Vertex Average(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.IList`1<System.Int32> indexes = null)

Disassembly:
	0x03940A98 MOV V8.16B, V2.16B
	0x03940A9C MOV V9.16B, V1.16B
	0x03940AA0 MOV V10.16B, V0.16B
	0x03940AA4 MOV X19, X1
	0x03940AA8 MOV X20, X0
	0x03940AAC TBNZ X8, 0x0, 0x3940AD0
	0x03940AB0 ADRP X0, 0x7B3000
	0x03940AB4 LDR X0, [X0 + 0x598]
	0x03940AB8 BL 0x1C16CF4
	0x03940ABC ADRP X0, 0x80E000
	0x03940AC0 LDR X0, [X0 + 0xF88]
	0x03940AC4 BL 0x1C16CF4
	0x03940AC8 MOVZ W8, 0x1
	0x03940ACC STRB W8, [X21 + 0x951]
	0x03940AD0 LDR X0, [X22]
	0x03940AD4 LDR W8, [X0 + 0xE0]
	0x03940AD8 CBNZ W8, 0x3940AE0
	0x03940ADC BL 0x1C16DFC
	0x03940AE0 MOV X0, X20
	0x03940AE4 MOV X1, X31
	0x03940AE8 MOV X2, X31
	0x03940AEC BL 0x3C3883C
	0x03940AF0 TBNZ X0, 0x0, 0x3940B40
	0x03940AF4 ADRP X8, 0x80E000
	0x03940AF8 LDR X8, [X8 + 0xF88]
	0x03940AFC LDR X0, [X8]
	0x03940B00 LDR W8, [X0 + 0xE0]
	0x03940B04 CBNZ W8, 0x3940B0C
	0x03940B08 BL 0x1C16DFC
	0x03940B0C MOV X0, X20
	0x03940B10 MOV X1, X19
	0x03940B14 MOV V1.16B, V9.16B
	0x03940B18 MOV V2.16B, V8.16B
	0x03940B1C LDP X20, X19, [X31 + 0x30]
	0x03940B20 LDP X22, X21, [X31 + 0x20]
	0x03940B24 LDR X30, [X31 + 0x18]
	0x03940B28 LDP D9, D8, [X31 + 0x8]
	0x03940B2C FMOV S3, W31
	0x03940B30 MOV V0.16B, V10.16B
	0x03940B34 MOV W2, W31
	0x03940B38 LDR V10, [X31], #0x40
	0x03940B3C B 0x3940B88
	0x03940B40 ADRP X0, 0x7B8000
	0x03940B44 LDR X0, [X0 + 0x528]
	0x03940B48 BL 0x1C16D08
	0x03940B4C BL 0x1C16F10
	0x03940B50 MOV X19, X0
	0x03940B54 ADRP X0, 0x80D000
	0x03940B58 LDR X0, [X0 + 0xE90]
	0x03940B5C BL 0x1C16D08
	0x03940B60 MOV X1, X0
	0x03940B64 MOV X0, X19
	0x03940B68 MOV X2, X31
	0x03940B6C BL 0x330E100
	0x03940B70 ADRP X0, 0x80E000
	0x03940B74 LDR X0, [X0 + 0xF90]
	0x03940B78 BL 0x1C16D08
	0x03940B7C MOV X1, X0
	0x03940B80 MOV X0, X19
	0x03940B84 BL 0x1C16DEC
	0x03940B88 SUB X31, X31, 0x1A0
	0x03940B8C STR D12, [X31 + 0x120]
	0x03940B90 STP D11, D10, [X31 + 0x128]
	0x03940B94 STP D9, D8, [X31 + 0x138]
	0x03940B98 STR X29, [X31 + 0x148]
	0x03940B9C STP X30, X27, [X31 + 0x150]
	0x03940BA0 STP X26, X25, [X31 + 0x160]
	0x03940BA4 STP X24, X23, [X31 + 0x170]
	0x03940BA8 STP X22, X21, [X31 + 0x180]
	0x03940BAC STP X20, X19, [X31 + 0x190]
	0x03940BB0 ADRP X23, 0xAA1000
	0x03940BB4 ADRP X22, 0x7B3000
	0x03940BB8 LDRB W8, [X23 + 0x952]
	0x03940BBC LDR X22, [X22 + 0x598]
	0x03940BC0 MOV W21, W2
	0x03940BC4 MOV V8.16B, V3.16B
	0x03940BC8 MOV V10.16B, V2.16B
	0x03940BCC MOV V11.16B, V1.16B
	0x03940BD0 MOV V12.16B, V0.16B
	0x03940BD4 MOV X20, X1
	0x03940BD8 MOV X19, X0
	0x03940BDC TBNZ X8, 0x0, 0x3940C30
	0x03940BE0 ADRP X0, 0x7B4000
	0x03940BE4 LDR X0, [X0 + 0xE28]
	0x03940BE8 BL 0x1C16CF4
	0x03940BEC ADRP X0, 0x7DD000
	0x03940BF0 LDR X0, [X0 + 0xF38]
	0x03940BF4 BL 0x1C16CF4
	0x03940BF8 ADRP X0, 0x7BA000
	0x03940BFC LDR X0, [X0 + 0x4B8]
	0x03940C00 BL 0x1C16CF4
	0x03940C04 ADRP X0, 0x7B3000
	0x03940C08 LDR X0, [X0 + 0x598]
	0x03940C0C BL 0x1C16CF4
	0x03940C10 ADRP X0, 0x80E000
	0x03940C14 LDR X0, [X0 + 0x6F0]
	0x03940C18 BL 0x1C16CF4
	0x03940C1C ADRP X0, 0x80E000
	0x03940C20 LDR X0, [X0 + 0xF88]
	0x03940C24 BL 0x1C16CF4
	0x03940C28 MOVZ W8, 0x1
	0x03940C2C STRB W8, [X23 + 0x952]
	0x03940C30 LDR X0, [X22]
	0x03940C34 MOVI V0.2D, 0x0
	0x03940C38 STP V0, V0, [X31 + 0x100]
	0x03940C3C STP V0, V0, [X31 + 0xE0]
	0x03940C40 STP V0, V0, [X31 + 0xC0]
	0x03940C44 STP V0, V0, [X31 + 0xA0]
	0x03940C48 LDR W8, [X0 + 0xE0]
	0x03940C4C CBNZ W8, 0x3940C54
	0x03940C50 BL 0x1C16DFC
	0x03940C54 MOV X0, X19
	0x03940C58 MOV X1, X31
	0x03940C5C MOV X2, X31
	0x03940C60 BL 0x3C3883C
	0x03940C64 TBNZ X0, 0x0, 0x3940FF0
	0x03940C68 ADRP X24, 0x80E000
	0x03940C6C LDR X24, [X24 + 0xF88]
	0x03940C70 LDR X0, [X24]
	0x03940C74 LDR W8, [X0 + 0xE0]
	0x03940C78 CBNZ W8, 0x3940C80
	0x03940C7C BL 0x1C16DFC
	0x03940C80 CBZ X19, 0x3940FE8
	0x03940C84 LDR X8, [X24]
	0x03940C88 MOV X0, X19
	0x03940C8C MOV X1, X20
	0x03940C90 MOV X3, X31
	0x03940C94 LDR X8, [X8 + 0xB8]
	0x03940C98 LDR X2, [X8]
	0x03940C9C BL 0x391BB88
	0x03940CA0 MOV X0, X19
	0x03940CA4 MOV X1, X31
	0x03940CA8 BL 0x3C32E90
	0x03940CAC CBZ X0, 0x3940FE8
	0x03940CB0 ADRP X20, 0x7BA000
	0x03940CB4 LDR X20, [X20 + 0x4B8]
	0x03940CB8 ADD X8, X31, 0x60
	0x03940CBC MOV X1, X31
	0x03940CC0 BL 0x3C3FF0C
	0x03940CC4 LDP V1, V0, [X31 + 0x80]
	0x03940CC8 LDP V3, V2, [X31 + 0x60]
	0x03940CCC ADD X0, X31, 0x20
	0x03940CD0 MOV X1, X31
	0x03940CD4 STP V1, V0, [X31 + 0x100]
	0x03940CD8 STP V3, V2, [X31 + 0xE0]
	0x03940CDC STP V3, V2, [X31 + 0x20]
	0x03940CE0 STP V1, V0, [X31 + 0x40]
	0x03940CE4 FMOV S3, W31
	0x03940CE8 MOV V0.16B, V12.16B
	0x03940CEC MOV V1.16B, V11.16B
	0x03940CF0 MOV V2.16B, V10.16B
	0x03940CF4 BL 0x3C2806C
	0x03940CF8 LDR X8, [X20]
	0x03940CFC LDR X20, [X19 + 0x58]
	0x03940D00 FABS S4, S8
	0x03940D04 MOV V9.16B, V2.16B
	0x03940D08 LDR X8, [X8 + 0xB8]
	0x03940D0C LDR V3, [X8]
	0x03940D10 FCMP S4, S3
	0x03940D14 B.LE 0x3940D84
	0x03940D18 MOV X0, X19
	0x03940D1C MOV X1, X31
	0x03940D20 STP V1, V0, [X31]
	0x03940D24 BL 0x3C32E90
	0x03940D28 CBZ X0, 0x3940FE8
	0x03940D2C ADD X8, X31, 0x60
	0x03940D30 MOV X1, X31
	0x03940D34 BL 0x3C3F1C8
	0x03940D38 LDP V0, V1, [X31 + 0x60]
	0x03940D3C LDP V2, V3, [X31 + 0x80]
	0x03940D40 STP V0, V1, [X31 + 0xA0]
	0x03940D44 STP V2, V3, [X31 + 0xC0]
	0x03940D48 TBZ X21, 0x0, 0x3940E2C
	0x03940D4C ADRP X8, 0xFFFFFFFFFD1A9000
	0x03940D50 LDR V0, [X8 + 0xF28]
	0x03940D54 FABS S1, S12
	0x03940D58 FABS S2, S11
	0x03940D5C FABS S3, S10
	0x03940D60 FCMP S1, S0
	0x03940D64 CSET W8, GT
	0x03940D68 FCMP S2, S0
	0x03940D6C ORR W9, W8, 0x2
	0x03940D70 CSEL W8, W9, W8, GT
	0x03940D74 ORR W9, W8, 0x4
	0x03940D78 FCMP S3, S0
	0x03940D7C CSEL W8, W9, W8, GT
	0x03940D80 B 0x3940E50
	0x03940D84 MOV V0.S[1], V1.S[0]
	0x03940D88 STR V0, [X31 + 0x1]
	0x03940D8C ADRP X22, 0x7DD000
	0x03940D90 LDR X22, [X22 + 0xF38]
	0x03940D94 MOV W21, W31
	0x03940D98 MOVZ W23, 0xC
	0x03940D9C LDR X0, [X24]
	0x03940DA0 LDR W8, [X0 + 0xE0]
	0x03940DA4 CBNZ W8, 0x3940DB0
	0x03940DA8 BL 0x1C16DFC
	0x03940DAC LDR X0, [X24]
	0x03940DB0 LDR X8, [X0 + 0xB8]
	0x03940DB4 LDR X8, [X8]
	0x03940DB8 CBZ X8, 0x3940FE8
	0x03940DBC LDR W9, [X8 + 0x18]
	0x03940DC0 CMP W21, W9
	0x03940DC4 B.GE 0x3940F9C
	0x03940DC8 LDR W9, [X0 + 0xE0]
	0x03940DCC CBNZ W9, 0x3940DE4
	0x03940DD0 BL 0x1C16DFC
	0x03940DD4 LDR X8, [X24]
	0x03940DD8 LDR X8, [X8 + 0xB8]
	0x03940DDC LDR X8, [X8]
	0x03940DE0 CBZ X8, 0x3940FE8
	0x03940DE4 LDR X2, [X22]
	0x03940DE8 MOV X0, X8
	0x03940DEC MOV W1, W21
	0x03940DF0 BL 0x2FDC41C
	0x03940DF4 CBZ X20, 0x3940FE8
	0x03940DF8 LDR W8, [X20 + 0x18]
	0x03940DFC LDR V2, [X31 + 0x1]
	0x03940E00 CMP W0, W8
	0x03940E04 B.CS 0x3940FEC
	0x03940E08 SMADDL X8, X0, X23, X20
	0x03940E0C LDR V0, [X8 + 0x20]
	0x03940E10 LDR V1, [X8 + 0x28]
	0x03940E14 ADD W21, W21, 0x1
	0x03940E18 FADD V0.2S, V2.2S, V0.2S
	0x03940E1C FADD S1, S9, S1
	0x03940E20 STR D0, [X8 + 0x20]
	0x03940E24 STR S1, [X8 + 0x28]
	0x03940E28 B 0x3940D9C
	0x03940E2C ADRP X21, 0x80E000
	0x03940E30 LDR X21, [X21 + 0x6F0]
	0x03940E34 LDR X0, [X21]
	0x03940E38 LDR W8, [X0 + 0xE0]
	0x03940E3C CBNZ W8, 0x3940E48
	0x03940E40 BL 0x1C16DFC
	0x03940E44 LDR X0, [X21]
	0x03940E48 LDR X8, [X0 + 0xB8]
	0x03940E4C LDRB W8, [X8]
	0x03940E50 ADRP X25, 0x7DD000
	0x03940E54 ADRP X27, 0x80E000
	0x03940E58 LDR X25, [X25 + 0xF38]
	0x03940E5C LDR X27, [X27 + 0x6F0]
	0x03940E60 MOV W21, W31
	0x03940E64 MOV W22, W8
	0x03940E68 MOVZ W26, 0xC
	0x03940E6C LDR X0, [X24]
	0x03940E70 LDR W8, [X0 + 0xE0]
	0x03940E74 CBNZ W8, 0x3940E80
	0x03940E78 BL 0x1C16DFC
	0x03940E7C LDR X0, [X24]
	0x03940E80 LDR X8, [X0 + 0xB8]
	0x03940E84 LDR X8, [X8]
	0x03940E88 CBZ X8, 0x3940FE8
	0x03940E8C LDR W9, [X8 + 0x18]
	0x03940E90 CMP W21, W9
	0x03940E94 B.GE 0x3940F9C
	0x03940E98 LDR W9, [X0 + 0xE0]
	0x03940E9C CBNZ W9, 0x3940EB4
	0x03940EA0 BL 0x1C16DFC
	0x03940EA4 LDR X8, [X24]
	0x03940EA8 LDR X8, [X8 + 0xB8]
	0x03940EAC LDR X8, [X8]
	0x03940EB0 CBZ X8, 0x3940FE8
	0x03940EB4 LDR X2, [X25]
	0x03940EB8 MOV X0, X8
	0x03940EBC MOV W1, W21
	0x03940EC0 BL 0x2FDC41C
	0x03940EC4 CBZ X20, 0x3940FE8
	0x03940EC8 LDR W8, [X20 + 0x18]
	0x03940ECC LDR V4, [X31]
	0x03940ED0 CMP W0, W8
	0x03940ED4 B.CS 0x3940FEC
	0x03940ED8 SXTW X8, W0
	0x03940EDC MADD X8, X8, X26, X20
	0x03940EE0 LDP S0, S1, [X8 + 0x20]
	0x03940EE4 LDR V2, [X8 + 0x28]
	0x03940EE8 LDR V3, [X31 + 0x1]
	0x03940EEC ADD X0, X31, 0xA0
	0x03940EF0 FADD S1, S4, S1
	0x03940EF4 FADD S2, S9, S2
	0x03940EF8 FADD S0, S3, S0
	0x03940EFC MOV X1, X31
	0x03940F00 BL 0x3C28278
	0x03940F04 LDR X8, [X24]
	0x03940F08 LDR X8, [X8 + 0xB8]
	0x03940F0C LDR X0, [X8]
	0x03940F10 CBZ X0, 0x3940FE8
	0x03940F14 LDR X2, [X25]
	0x03940F18 MOV W1, W21
	0x03940F1C MOV V10.16B, V0.16B
	0x03940F20 MOV V11.16B, V1.16B
	0x03940F24 MOV V12.16B, V2.16B
	0x03940F28 BL 0x2FDC41C
	0x03940F2C LDR X8, [X27]
	0x03940F30 MOV W23, W0
	0x03940F34 LDR W9, [X8 + 0xE0]
	0x03940F38 CBNZ W9, 0x3940F44
	0x03940F3C MOV X0, X8
	0x03940F40 BL 0x1C16DFC
	0x03940F44 MOV X0, X22
	0x03940F48 BL 0x393D328
	0x03940F4C FMUL S3, S0, S8
	0x03940F50 FMUL S4, S1, S8
	0x03940F54 FMUL S5, S2, S8
	0x03940F58 MOV V0.16B, V10.16B
	0x03940F5C MOV V1.16B, V11.16B
	0x03940F60 MOV V2.16B, V12.16B
	0x03940F64 MOV X0, X31
	0x03940F68 BL 0x391E590
	0x03940F6C ADD X0, X31, 0xE0
	0x03940F70 MOV X1, X31
	0x03940F74 BL 0x3C28278
	0x03940F78 LDR W8, [X20 + 0x18]
	0x03940F7C CMP W23, W8
	0x03940F80 B.CS 0x3940FEC
	0x03940F84 SXTW X8, W23
	0x03940F88 MADD X8, X8, X26, X20
	0x03940F8C ADD W21, W21, 0x1
	0x03940F90 STP S0, S1, [X8 + 0x20]
	0x03940F94 STR S2, [X8 + 0x28]
	0x03940F98 B 0x3940E6C
	0x03940F9C MOV X0, X19
	0x03940FA0 MOV X1, X31
	0x03940FA4 STR X20, [X19 + 0x58]
	0x03940FA8 BL 0x3912CAC
	0x03940FAC CBZ X0, 0x3940FE8
	0x03940FB0 MOV X1, X20
	0x03940FB4 MOV X2, X31
	0x03940FB8 BL 0x3C17F08
	0x03940FBC LDP X20, X19, [X31 + 0x190]
	0x03940FC0 LDP X22, X21, [X31 + 0x180]
	0x03940FC4 LDP X24, X23, [X31 + 0x170]
	0x03940FC8 LDP X26, X25, [X31 + 0x160]
	0x03940FCC LDP X30, X27, [X31 + 0x150]
	0x03940FD0 LDR X29, [X31 + 0x148]
	0x03940FD4 LDP D9, D8, [X31 + 0x138]
	0x03940FD8 LDP D11, D10, [X31 + 0x128]
	0x03940FDC LDR V12, [X31 + 0x120]
	0x03940FE0 ADD X31, X31, 0x1A0
	0x03940FE4 RET
	0x03940FE8 BL 0x1C16F20
	0x03940FEC BL 0x1C16F28
	0x03940FF0 ADRP X0, 0x7B8000
	0x03940FF4 LDR X0, [X0 + 0x528]
	0x03940FF8 BL 0x1C16D08
	0x03940FFC BL 0x1C16F10
	0x03941000 MOV X19, X0
	0x03941004 ADRP X0, 0x80C000
	0x03941008 LDR X0, [X0 + 0xE90]
	0x0394100C BL 0x1C16D08
	0x03941010 MOV X1, X0
	0x03941014 MOV X0, X19
	0x03941018 MOV X2, X31
	0x0394101C BL 0x330E100
	0x03941020 ADRP X0, 0x80D000
	0x03941024 LDR X0, [X0 + 0xF98]
	0x03941028 BL 0x1C16D08
	0x0394102C MOV X1, X0
	0x03941030 MOV X0, X19
	0x03941034 BL 0x1C16DEC
	0x03941038 STR D10, [X31 - 0x40]!
	0x0394103C STP D9, D8, [X31 + 0x8]
	0x03941040 STR X30, [X31 + 0x18]
	0x03941044 STP X22, X21, [X31 + 0x20]
	0x03941048 STP X20, X19, [X31 + 0x30]
	0x0394104C ADRP X21, 0xAA0000
	0x03941050 ADRP X22, 0x7B2000
	0x03941054 LDRB W8, [X21 + 0x953]
	0x03941058 LDR X22, [X22 + 0x598]
	0x0394105C MOV V8.16B, V2.16B
	0x03941060 MOV V9.16B, V1.16B
	0x03941064 MOV V10.16B, V0.16B
	0x03941068 MOV X20, X1
	0x0394106C MOV X19, X0
	0x03941070 TBNZ X8, 0x0, 0x3941094
	0x03941074 ADRP X0, 0x7B2000
	0x03941078 LDR X0, [X0 + 0x598]
	0x0394107C BL 0x1C16CF4
	0x03941080 ADRP X0, 0x80D000
	0x03941084 LDR X0, [X0 + 0xF88]
	0x03941088 BL 0x1C16CF4
	0x0394108C MOVZ W8, 0x1
	0x03941090 STRB W8, [X21 + 0x953]
	0x03941094 LDR X0, [X22]
	0x03941098 LDR W8, [X0 + 0xE0]
	0x0394109C CBNZ W8, 0x39410A4
	0x039410A0 BL 0x1C16DFC
	0x039410A4 MOV X0, X19
	0x039410A8 MOV X1, X31
	0x039410AC MOV X2, X31
	0x039410B0 BL 0x3C3883C
	0x039410B4 TBNZ X0, 0x0, 0x3941118
	0x039410B8 ADRP X21, 0x80D000
	0x039410BC LDR X21, [X21 + 0xF88]
	0x039410C0 LDR X0, [X21]
	0x039410C4 LDR W8, [X0 + 0xE0]
	0x039410C8 CBNZ W8, 0x39410D0
	0x039410CC BL 0x1C16DFC
	0x039410D0 CBZ X19, 0x3941160
	0x039410D4 LDR X8, [X21]
	0x039410D8 MOV X0, X19
	0x039410DC MOV X1, X20
	0x039410E0 MOV X3, X31
	0x039410E4 LDR X8, [X8 + 0xB8]
	0x039410E8 LDR X2, [X8]
	0x039410EC BL 0x391BB88
	0x039410F0 MOV X0, X19
	0x039410F4 MOV V1.16B, V9.16B
	0x039410F8 MOV V2.16B, V8.16B
	0x039410FC LDP X20, X19, [X31 + 0x30]
	0x03941100 LDP X22, X21, [X31 + 0x20]
	0x03941104 LDR X30, [X31 + 0x18]
	0x03941108 LDP D9, D8, [X31 + 0x8]
	0x0394110C MOV V0.16B, V10.16B
	0x03941110 LDR V10, [X31], #0x40
	0x03941114 B 0x3941164
	0x03941118 ADRP X0, 0x7B7000
	0x0394111C LDR X0, [X0 + 0x528]
	0x03941120 BL 0x1C16D08
	0x03941124 BL 0x1C16F10
	0x03941128 MOV X19, X0
	0x0394112C ADRP X0, 0x80C000
	0x03941130 LDR X0, [X0 + 0xE90]
	0x03941134 BL 0x1C16D08
	0x03941138 MOV X1, X0
	0x0394113C MOV X0, X19
	0x03941140 MOV X2, X31
	0x03941144 BL 0x330E100
	0x03941148 ADRP X0, 0x80D000
	0x0394114C LDR X0, [X0 + 0xFA0]
	0x03941150 BL 0x1C16D08
	0x03941154 MOV X1, X0
	0x03941158 MOV X0, X19
	0x0394115C BL 0x1C16DEC
	0x03941160 BL 0x1C16F20
	0x03941164 SUB X31, X31, 0x70
	0x03941168 STR D8, [X31 + 0x20]
	0x0394116C STP X30, X25, [X31 + 0x30]
	0x03941170 STP X24, X23, [X31 + 0x40]
	0x03941174 STP X22, X21, [X31 + 0x50]
	0x03941178 STP X20, X19, [X31 + 0x60]
	0x0394117C ADRP X20, 0xAA0000
	0x03941180 LDRB W8, [X20 + 0x956]
	0x03941184 MOV V8.16B, V2.16B
	0x03941188 MOV X19, X0
	0x0394118C STR D1, [X31]
	0x03941190 STR D0, [X31 + 0x10]
	0x03941194 TBNZ X8, 0x0, 0x39411C4
	0x03941198 ADRP X0, 0x7B3000
	0x0394119C LDR X0, [X0 + 0xE28]
	0x039411A0 BL 0x1C16CF4
	0x039411A4 ADRP X0, 0x7DC000
	0x039411A8 LDR X0, [X0 + 0xF38]
	0x039411AC BL 0x1C16CF4
	0x039411B0 ADRP X0, 0x80D000
	0x039411B4 LDR X0, [X0 + 0xF88]
	0x039411B8 BL 0x1C16CF4
	0x039411BC MOVZ W8, 0x1
	0x039411C0 STRB W8, [X20 + 0x956]
	0x039411C4 CBZ X19, 0x39412BC
	0x039411C8 ADRP X22, 0x80D000
	0x039411CC LDR X22, [X22 + 0xF88]
	0x039411D0 LDR X20, [X19 + 0x58]
	0x039411D4 LDR X0, [X22]
	0x039411D8 LDR W8, [X0 + 0xE0]
	0x039411DC CBNZ W8, 0x39411E8
	0x039411E0 BL 0x1C16DFC
	0x039411E4 LDR X0, [X22]
	0x039411E8 LDR X8, [X0 + 0xB8]
	0x039411EC LDR X8, [X8]
	0x039411F0 CBZ X8, 0x39412BC
	0x039411F4 LDR W8, [X8 + 0x18]
	0x039411F8 SUBS W23, W8, 0x1
	0x039411FC B.LT 0x3941288
	0x03941200 ADRP X24, 0x7DC000
	0x03941204 LDR X24, [X24 + 0xF38]
	0x03941208 LDP V1, V0, [X31]
	0x0394120C MOV W21, W31
	0x03941210 MOVZ W25, 0xC
	0x03941214 MOV V0.S[1], V1.S[0]
	0x03941218 STR V0, [X31 + 0x1]
	0x0394121C LDR W8, [X0 + 0xE0]
	0x03941220 CBNZ W8, 0x394122C
	0x03941224 BL 0x1C16DFC
	0x03941228 LDR X0, [X22]
	0x0394122C LDR X8, [X0 + 0xB8]
	0x03941230 LDR X0, [X8]
	0x03941234 CBZ X0, 0x39412BC
	0x03941238 LDR X2, [X24]
	0x0394123C MOV W1, W21
	0x03941240 BL 0x2FDC41C
	0x03941244 CBZ X20, 0x39412BC
	0x03941248 LDR W8, [X20 + 0x18]
	0x0394124C CMP W0, W8
	0x03941250 B.CS 0x39412C0
	0x03941254 SMADDL X8, X0, X25, X20
	0x03941258 LDR V0, [X8 + 0x20]
	0x0394125C LDR V1, [X8 + 0x28]
	0x03941260 LDR V2, [X31 + 0x1]
	0x03941264 CMP W23, W21
	0x03941268 FADD S1, S8, S1
	0x0394126C FADD V0.2S, V2.2S, V0.2S
	0x03941270 STR D0, [X8 + 0x20]
	0x03941274 STR S1, [X8 + 0x28]
	0x03941278 B.EQ 0x3941288
	0x0394127C LDR X0, [X22]
	0x03941280 ADD W21, W21, 0x1
	0x03941284 B 0x394121C
	0x03941288 MOV X0, X19
	0x0394128C MOV X1, X31
	0x03941290 BL 0x3912CAC
	0x03941294 CBZ X0, 0x39412BC
	0x03941298 MOV X1, X20
	0x0394129C LDP X20, X19, [X31 + 0x60]
	0x039412A0 LDP X22, X21, [X31 + 0x50]
	0x039412A4 LDP X24, X23, [X31 + 0x40]
	0x039412A8 LDP X30, X25, [X31 + 0x30]
	0x039412AC LDR V8, [X31 + 0x20]
	0x039412B0 MOV X2, X31
	0x039412B4 ADD X31, X31, 0x70
	0x039412B8 B 0x3C17F08
	0x039412BC BL 0x1C16F20
	0x039412C0 BL 0x1C16F28
	0x039412C4 STR D10, [X31 - 0x40]!
	0x039412C8 STP D9, D8, [X31 + 0x8]
	0x039412CC STR X30, [X31 + 0x18]
	0x039412D0 STP X22, X21, [X31 + 0x20]
	0x039412D4 STP X20, X19, [X31 + 0x30]
	0x039412D8 ADRP X21, 0xAA0000
	0x039412DC ADRP X22, 0x7B2000
	0x039412E0 LDRB W8, [X21 + 0x954]
	0x039412E4 LDR X22, [X22 + 0x598]
	0x039412E8 MOV V8.16B, V2.16B
	0x039412EC MOV V9.16B, V1.16B
	0x039412F0 MOV V10.16B, V0.16B
	0x039412F4 MOV X20, X1
	0x039412F8 MOV X19, X0
	0x039412FC TBNZ X8, 0x0, 0x3941320
	0x03941300 ADRP X0, 0x7B2000
	0x03941304 LDR X0, [X0 + 0x598]
	0x03941308 BL 0x1C16CF4
	0x0394130C ADRP X0, 0x80D000
	0x03941310 LDR X0, [X0 + 0xF88]
	0x03941314 BL 0x1C16CF4
	0x03941318 MOVZ W8, 0x1
	0x0394131C STRB W8, [X21 + 0x954]
	0x03941320 LDR X0, [X22]
	0x03941324 LDR W8, [X0 + 0xE0]
	0x03941328 CBNZ W8, 0x3941330
	0x0394132C BL 0x1C16DFC
	0x03941330 MOV X0, X19
	0x03941334 MOV X1, X31
	0x03941338 MOV X2, X31
	0x0394133C BL 0x3C3883C
	0x03941340 TBNZ X0, 0x0, 0x39413A4
	0x03941344 ADRP X21, 0x80D000
	0x03941348 LDR X21, [X21 + 0xF88]
	0x0394134C LDR X0, [X21]
	0x03941350 LDR W8, [X0 + 0xE0]
	0x03941354 CBNZ W8, 0x394135C
	0x03941358 BL 0x1C16DFC
	0x0394135C CBZ X19, 0x39413EC
	0x03941360 LDR X8, [X21]
	0x03941364 MOV X0, X19
	0x03941368 MOV X1, X20
	0x0394136C MOV X3, X31
	0x03941370 LDR X8, [X8 + 0xB8]
	0x03941374 LDR X2, [X8]
	0x03941378 BL 0x391C680
	0x0394137C MOV X0, X19
	0x03941380 MOV V1.16B, V9.16B
	0x03941384 MOV V2.16B, V8.16B
	0x03941388 LDP X20, X19, [X31 + 0x30]
	0x0394138C LDP X22, X21, [X31 + 0x20]
	0x03941390 LDR X30, [X31 + 0x18]
	0x03941394 LDP D9, D8, [X31 + 0x8]
	0x03941398 MOV V0.16B, V10.16B
	0x0394139C LDR V10, [X31], #0x40
	0x039413A0 B 0x3941164
	0x039413A4 ADRP X0, 0x7B7000
	0x039413A8 LDR X0, [X0 + 0x528]
	0x039413AC BL 0x1C16D08
	0x039413B0 BL 0x1C16F10
	0x039413B4 MOV X19, X0
	0x039413B8 ADRP X0, 0x80C000
	0x039413BC LDR X0, [X0 + 0xE90]
	0x039413C0 BL 0x1C16D08
	0x039413C4 MOV X1, X0
	0x039413C8 MOV X0, X19
	0x039413CC MOV X2, X31
	0x039413D0 BL 0x330E100
	0x039413D4 ADRP X0, 0x80D000
	0x039413D8 LDR X0, [X0 + 0xFA8]
	0x039413DC BL 0x1C16D08
	0x039413E0 MOV X1, X0
	0x039413E4 MOV X0, X19
	0x039413E8 BL 0x1C16DEC
	0x039413EC BL 0x1C16F20
	0x039413F0 STR D10, [X31 - 0x40]!
	0x039413F4 STP D9, D8, [X31 + 0x8]
	0x039413F8 STR X30, [X31 + 0x18]
	0x039413FC STP X22, X21, [X31 + 0x20]
	0x03941400 STP X20, X19, [X31 + 0x30]
	0x03941404 ADRP X21, 0xAA0000
	0x03941408 ADRP X22, 0x7B2000
	0x0394140C LDRB W8, [X21 + 0x955]
	0x03941410 LDR X22, [X22 + 0x598]
	0x03941414 MOV V8.16B, V2.16B
	0x03941418 MOV V9.16B, V1.16B
	0x0394141C MOV V10.16B, V0.16B
	0x03941420 MOV X20, X1
	0x03941424 MOV X19, X0
	0x03941428 TBNZ X8, 0x0, 0x394144C
	0x0394142C ADRP X0, 0x7B2000
	0x03941430 LDR X0, [X0 + 0x598]
	0x03941434 BL 0x1C16CF4
	0x03941438 ADRP X0, 0x80D000
	0x0394143C LDR X0, [X0 + 0xF88]
	0x03941440 BL 0x1C16CF4
	0x03941444 MOVZ W8, 0x1
	0x03941448 STRB W8, [X21 + 0x955]
	0x0394144C LDR X0, [X22]
	0x03941450 LDR W8, [X0 + 0xE0]
	0x03941454 CBNZ W8, 0x394145C
	0x03941458 BL 0x1C16DFC
	0x0394145C MOV X0, X19
	0x03941460 MOV X1, X31
	0x03941464 MOV X2, X31
	0x03941468 BL 0x3C3883C
	0x0394146C TBNZ X0, 0x0, 0x39414D0
	0x03941470 ADRP X21, 0x80D000
	0x03941474 LDR X21, [X21 + 0xF88]
	0x03941478 LDR X0, [X21]
	0x0394147C LDR W8, [X0 + 0xE0]
	0x03941480 CBNZ W8, 0x3941488
	0x03941484 BL 0x1C16DFC
	0x03941488 CBZ X19, 0x3941518
	0x0394148C LDR X8, [X21]
	0x03941490 MOV X0, X19
	0x03941494 MOV X1, X20
	0x03941498 MOV X3, X31
	0x0394149C LDR X8, [X8 + 0xB8]
	0x039414A0 LDR X2, [X8]
	0x039414A4 BL 0x391C0C8
	0x039414A8 MOV X0, X19
	0x039414AC MOV V1.16B, V9.16B
	0x039414B0 MOV V2.16B, V8.16B
	0x039414B4 LDP X20, X19, [X31 + 0x30]
	0x039414B8 LDP X22, X21, [X31 + 0x20]
	0x039414BC LDR X30, [X31 + 0x18]
	0x039414C0 LDP D9, D8, [X31 + 0x8]
	0x039414C4 MOV V0.16B, V10.16B
	0x039414C8 LDR V10, [X31], #0x40
	0x039414CC B 0x3941164
	0x039414D0 ADRP X0, 0x7B7000
	0x039414D4 LDR X0, [X0 + 0x528]
	0x039414D8 BL 0x1C16D08
	0x039414DC BL 0x1C16F10
	0x039414E0 MOV X19, X0
	0x039414E4 ADRP X0, 0x80C000
	0x039414E8 LDR X0, [X0 + 0xE90]
	0x039414EC BL 0x1C16D08
	0x039414F0 MOV X1, X0
	0x039414F4 MOV X0, X19
	0x039414F8 MOV X2, X31
	0x039414FC BL 0x330E100
	0x03941500 ADRP X0, 0x80D000
	0x03941504 LDR X0, [X0 + 0xFB0]
	0x03941508 BL 0x1C16D08
	0x0394150C MOV X1, X0
	0x03941510 MOV X0, X19
	0x03941514 BL 0x1C16DEC
	0x03941518 BL 0x1C16F20
	0x0394151C STR D10, [X31 - 0x60]!
	0x03941520 STP D9, D8, [X31 + 0x10]
	0x03941524 STP X30, X25, [X31 + 0x20]
	0x03941528 STP X24, X23, [X31 + 0x30]
	0x0394152C STP X22, X21, [X31 + 0x40]
	0x03941530 STP X20, X19, [X31 + 0x50]
	0x03941534 ADRP X21, 0xAA0000
	0x03941538 ADRP X22, 0x7B2000
	0x0394153C LDRB W8, [X21 + 0x957]
	0x03941540 LDR X22, [X22 + 0x598]
	0x03941544 MOV V8.16B, V2.16B
	0x03941548 MOV V9.16B, V1.16B
	0x0394154C MOV V10.16B, V0.16B
	0x03941550 MOV W20, W1
	0x03941554 MOV X19, X0
	0x03941558 TBNZ X8, 0x0, 0x3941594
	0x0394155C ADRP X0, 0x7B2000
	0x03941560 LDR X0, [X0 + 0xE00]
	0x03941564 BL 0x1C16CF4
	0x03941568 ADRP X0, 0x7DA000
	0x0394156C LDR X0, [X0 + 0x7C0]
	0x03941570 BL 0x1C16CF4
	0x03941574 ADRP X0, 0x7B2000
	0x03941578 LDR X0, [X0 + 0xE18]
	0x0394157C BL 0x1C16CF4
	0x03941580 ADRP X0, 0x7B2000
	0x03941584 LDR X0, [X0 + 0x598]
	0x03941588 BL 0x1C16CF4
	0x0394158C MOVZ W8, 0x1
	0x03941590 STRB W8, [X21 + 0x957]
	0x03941594 LDR X0, [X22]
	0x03941598 LDR W8, [X0 + 0xE0]
	0x0394159C CBNZ W8, 0x39415A4
	0x039415A0 BL 0x1C16DFC
	0x039415A4 MOV X0, X19
	0x039415A8 MOV X1, X31
	0x039415AC MOV X2, X31
	0x039415B0 BL 0x3C3883C
	0x039415B4 TBNZ X0, 0x0, 0x39417B8
	0x039415B8 CBZ X19, 0x39417B4
	0x039415BC LDR X8, [X19 + 0x30]
	0x039415C0 CBZ X8, 0x39417B4
	0x039415C4 LDR W9, [X8 + 0x18]
	0x039415C8 CMP W9, W20
	0x039415CC B.LS 0x3941800
	0x039415D0 ADD X8, X8, W20, 0x3, SXTW
	0x039415D4 LDR X0, [X8 + 0x20]
	0x039415D8 CBZ X0, 0x39417B4
	0x039415DC ADRP X23, 0x7B2000
	0x039415E0 LDR X21, [X19 + 0x58]
	0x039415E4 LDR X23, [X23 + 0xE00]
	0x039415E8 MOV X1, X31
	0x039415EC BL 0x3934978
	0x039415F0 MOV X20, X0
	0x039415F4 CBZ X0, 0x3941804
	0x039415F8 ADRP X22, 0x7B2000
	0x039415FC ADRP X24, 0x7DA000
	0x03941600 LDR X22, [X22 + 0xE18]
	0x03941604 LDR X24, [X24 + 0x7C0]
	0x03941608 MOVZ W25, 0xC
	0x0394160C LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X29
	005 Move [X31+56], X30
	006 Move [X31+64], X28
	007 Move [X31+72], X27
	008 Move [X31+80], X26
	009 Move [X31+88], X25
	010 Move [X31+96], X24
	011 Move [X31+104], X23
	012 Move [X31+112], X22
	013 Move [X31+120], X21
	014 Move [X31+128], X20
	015 Move [X31+136], X19
	016 Move X19, 0xAA2000
	017 Move W8, [X19+2382]
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x7DC000
	025 Move X0, [X0+1952]
	026 Call 0x1C17CF4
	027 Move X0, 0x80F000
	028 Move X0, [X0+488]
	029 Call 0x1C17CF4
	030 Move X0, 0x80E000
	031 Move X0, [X0+3936]
	032 Call 0x1C17CF4
	033 Move X0, 0x7DC000
	034 Move X0, [X0+1960]
	035 Call 0x1C17CF4
	036 Move X0, 0x80F000
	037 Move X0, [X0+32]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+2382], W8
	041 Compare X21, 0
	042 JumpIfEqual {766}
	043 Move X8, 0x80F000
	044 Move X8, [X8+32]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X19, X0
	049 Call Object..ctor, X0
	050 Compare X20, 0
	051 JumpIfEqual {68}
	052 Move X10, 0x7DC000
	053 Move X8, [X20]
	054 Move X10, [X10+1952]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X1, [X10]
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X20
	066 Move W2, W31
	067 Call 0x1C5D788
	068 Move X10, 0x80F000
	069 Move X8, [X21]
	070 Move X10, [X10+488]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X21
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X21
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move W22, W0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X31+16], X31
	100 Move [X31+24], X31
	101 Move X28, 0x80E000
	102 Move X28, [X28+3936]
	103 Move W27, W31
	104 Move W26, W31
	105 Move W25, W31
	106 Move W29, W31
	107 Move W23, W31
	108 Move W24, W23
	109 Compare X20, 0
	110 JumpIfEqual {136}
	111 Move X8, [X20]
	112 Move X10, 0x7DC000
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X10, [X10+1960]
	115 Move X1, [X10]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X20
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X2, [X0+8]
	132 Move X0, X20
	133 Move W1, W23
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move W24, W0
	136 Move X8, [X21]
	137 Move X1, [X28]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X21
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X2, [X0+8]
	155 Move X0, X21
	156 Move W1, W24
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X0, 0
	159 JumpIfEqual {765}
	160 Move W8, [X0+120]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {200}
	165 Compare X19, 0
	166 JumpIfEqual {765}
	167 Move X8, [X21]
	168 Move V9, [X19+16]
	169 Move V8, [X19+24]
	170 Move X1, [X28]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X21
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X2, [X0+8]
	188 Move X0, X21
	189 Move W1, W24
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Compare X0, 0
	192 JumpIfEqual {765}
	193 Move V0, [X0+16]
	194 Move V1, [X0+24]
	195 Add W27, W27, 1
	196 Add V0, V9, V0
	197 Add S1, S8, S1
	198 Move [X19+16], D0
	199 Move [X19+24], S1
	200 Move X8, [X21]
	201 Move X1, [X28]
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X21
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move W1, W24
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X0, 0
	223 JumpIfEqual {765}
	224 Move W8, [X0+120]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 32
	227 Compare TEMP, 32
	228 JumpIfNotEqual {262}
	229 Compare X19, 0
	230 JumpIfEqual {765}
	231 Move X8, [X21]
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 Move X1, [X28]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move [X31], V0
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X21
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X2, [X0+8]
	252 Move X0, X21
	253 Move W1, W24
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X0, 0
	256 JumpIfEqual {765}
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 Move V1, [X31]
	259 Add W26, W26, 1
	260 Add V0, V1, V0
	261 Move [X19+28], V0
	262 Move X8, [X21]
	263 Move X1, [X28]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X21
	274 Move W2, W31
	275 Call 0x1C5D788
	276 NotImplemented "Instruction LDRSW not yet implemented."
	277 Add X8, X8, X9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X2, [X0+8]
	281 Move X0, X21
	282 Move W1, W24
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Compare X0, 0
	285 JumpIfEqual {765}
	286 Move W8, [X0+120]
	287 Move TEMP, X8
	288 And TEMP, TEMP, 2
	289 Compare TEMP, 2
	290 JumpIfNotEqual {322}
	291 Compare X19, 0
	292 JumpIfEqual {765}
	293 Move X8, [X21]
	294 Move V8, [X19+72]
	295 Move X1, [X28]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X21
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X2, [X0+8]
	313 Move X0, X21
	314 Move W1, W24
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X0, 0
	317 JumpIfEqual {765}
	318 Move V0, [X0+72]
	319 Add W25, W25, 1
	320 Add V0, V8, V0
	321 Move [X19+72], D0
	322 Move X8, [X21]
	323 Move X1, [X28]
	324 NotImplemented "Instruction LDRH not yet implemented."
	325 Compare X9, 0
	326 JumpIfEqual {333}
	327 Move X10, [X8+176]
	328 Add X10, X10, 8
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Subtract X9, X9, 1
	332 Add X10, X10, 16
	333 Move X0, X21
	334 Move W2, W31
	335 Call 0x1C5D788
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Add X8, X8, X9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X2, [X0+8]
	341 Move X0, X21
	342 Move W1, W24
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Compare X0, 0
	345 JumpIfEqual {765}
	346 Move W8, [X0+120]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 64
	349 Compare TEMP, 64
	350 JumpIfNotEqual {386}
	351 Compare X19, 0
	352 JumpIfEqual {765}
	353 Move X8, [X21]
	354 NotImplemented "Instruction LDUR not yet implemented."
	355 Move V8, [X19+52]
	356 Move X1, [X28]
	357 NotImplemented "Instruction LDRH not yet implemented."
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move X0, X21
	367 Move W2, W31
	368 Call 0x1C5D788
	369 NotImplemented "Instruction LDRSW not yet implemented."
	370 Add X8, X8, X9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X2, [X0+8]
	374 Move X0, X21
	375 Move W1, W24
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Compare X0, 0
	378 JumpIfEqual {765}
	379 NotImplemented "Instruction LDUR not yet implemented."
	380 Move V1, [X0+52]
	381 Add W29, W29, 1
	382 Add V0, V9, V0
	383 Add S1, S8, S1
	384 Move [X19+44], D0
	385 Move [X19+52], S1
	386 Move X8, [X21]
	387 Move X1, [X28]
	388 NotImplemented "Instruction LDRH not yet implemented."
	389 Compare X9, 0
	390 JumpIfEqual {397}
	391 Move X10, [X8+176]
	392 Add X10, X10, 8
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Subtract X9, X9, 1
	396 Add X10, X10, 16
	397 Move X0, X21
	398 Move W2, W31
	399 Call 0x1C5D788
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Add X8, X8, X9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X2, [X0+8]
	405 Move X0, X21
	406 Move W1, W24
	407 NotImplemented "Instruction BLR not yet implemented."
	408 Compare X0, 0
	409 JumpIfEqual {765}
	410 Move W8, [X0+120]
	411 Move TEMP, X8
	412 And TEMP, TEMP, 128
	413 Compare TEMP, 128
	414 JumpIfNotEqual {450}
	415 Compare X19, 0
	416 JumpIfEqual {765}
	417 Move X8, [X21]
	418 NotImplemented "Instruction LDUR not yet implemented."
	419 Move X1, [X28]
	420 NotImplemented "Instruction LDRH not yet implemented."
	421 Move [X31], V0
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move X0, X21
	431 Move W2, W31
	432 Call 0x1C5D788
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X8, X8, X9
	435 Add X0, X8, 312
	436 Move X8, [X0]
	437 Move X2, [X0+8]
	438 Move X0, X21
	439 Move W1, W24
	440 NotImplemented "Instruction BLR not yet implemented."
	441 Compare X0, 0
	442 JumpIfEqual {765}
	443 NotImplemented "Instruction LDUR not yet implemented."
	444 Move W8, [X31+28]
	445 Move V1, [X31]
	446 Add W8, W8, 1
	447 Add V0, V1, V0
	448 Move [X31+28], W8
	449 Move [X19+56], V0
	450 Move X8, [X21]
	451 Move X1, [X28]
	452 NotImplemented "Instruction LDRH not yet implemented."
	453 Compare X9, 0
	454 JumpIfEqual {461}
	455 Move X10, [X8+176]
	456 Add X10, X10, 8
	457 NotImplemented "Instruction LDUR not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Subtract X9, X9, 1
	460 Add X10, X10, 16
	461 Move X0, X21
	462 Move W2, W31
	463 Call 0x1C5D788
	464 NotImplemented "Instruction LDRSW not yet implemented."
	465 Add X8, X8, X9
	466 Add X0, X8, 312
	467 Move X8, [X0]
	468 Move X2, [X0+8]
	469 Move X0, X21
	470 Move W1, W24
	471 NotImplemented "Instruction BLR not yet implemented."
	472 Compare X0, 0
	473 JumpIfEqual {765}
	474 Move W8, [X0+120]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 4
	477 Compare TEMP, 4
	478 JumpIfNotEqual {512}
	479 Compare X19, 0
	480 JumpIfEqual {765}
	481 Move X8, [X21]
	482 Move V8, [X19+80]
	483 Move X1, [X28]
	484 NotImplemented "Instruction LDRH not yet implemented."
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move X0, X21
	494 Move W2, W31
	495 Call 0x1C5D788
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Add X8, X8, X9
	498 Add X0, X8, 312
	499 Move X8, [X0]
	500 Move X2, [X0+8]
	501 Move X0, X21
	502 Move W1, W24
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Compare X0, 0
	505 JumpIfEqual {765}
	506 Move V0, [X0+80]
	507 Move W8, [X31+24]
	508 Add V0, V8, V0
	509 Add W8, W8, 1
	510 Move [X31+24], W8
	511 Move [X19+80], D0
	512 Move X8, [X21]
	513 Move X1, [X28]
	514 NotImplemented "Instruction LDRH not yet implemented."
	515 Compare X9, 0
	516 JumpIfEqual {523}
	517 Move X10, [X8+176]
	518 Add X10, X10, 8
	519 NotImplemented "Instruction LDUR not yet implemented."
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Subtract X9, X9, 1
	522 Add X10, X10, 16
	523 Move X0, X21
	524 Move W2, W31
	525 Call 0x1C5D788
	526 NotImplemented "Instruction LDRSW not yet implemented."
	527 Add X8, X8, X9
	528 Add X0, X8, 312
	529 Move X8, [X0]
	530 Move X2, [X0+8]
	531 Move X0, X21
	532 Move W1, W24
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Compare X0, 0
	535 JumpIfEqual {765}
	536 Move W8, [X0+120]
	537 Move TEMP, X8
	538 And TEMP, TEMP, 8
	539 Compare TEMP, 8
	540 JumpIfNotEqual {576}
	541 Compare X19, 0
	542 JumpIfEqual {765}
	543 Move X8, [X21]
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 Move X1, [X28]
	546 NotImplemented "Instruction LDRH not yet implemented."
	547 Move [X31], V0
	548 Compare X9, 0
	549 JumpIfEqual {556}
	550 Move X10, [X8+176]
	551 Add X10, X10, 8
	552 NotImplemented "Instruction LDUR not yet implemented."
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Subtract X9, X9, 1
	555 Add X10, X10, 16
	556 Move X0, X21
	557 Move W2, W31
	558 Call 0x1C5D788
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Add X8, X8, X9
	561 Add X0, X8, 312
	562 Move X8, [X0]
	563 Move X2, [X0+8]
	564 Move X0, X21
	565 Move W1, W24
	566 NotImplemented "Instruction BLR not yet implemented."
	567 Compare X0, 0
	568 JumpIfEqual {765}
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 Move W8, [X31+20]
	571 Move V1, [X31]
	572 Add W8, W8, 1
	573 Add V0, V1, V0
	574 Move [X31+20], W8
	575 Move [X19+88], V0
	576 Move X8, [X21]
	577 Move X1, [X28]
	578 NotImplemented "Instruction LDRH not yet implemented."
	579 Compare X9, 0
	580 JumpIfEqual {587}
	581 Move X10, [X8+176]
	582 Add X10, X10, 8
	583 NotImplemented "Instruction LDUR not yet implemented."
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Subtract X9, X9, 1
	586 Add X10, X10, 16
	587 Move X0, X21
	588 Move W2, W31
	589 Call 0x1C5D788
	590 NotImplemented "Instruction LDRSW not yet implemented."
	591 Add X8, X8, X9
	592 Add X0, X8, 312
	593 Move X8, [X0]
	594 Move X2, [X0+8]
	595 Move X0, X21
	596 Move W1, W24
	597 NotImplemented "Instruction BLR not yet implemented."
	598 Compare X0, 0
	599 JumpIfEqual {765}
	600 Move W8, [X0+120]
	601 Move TEMP, X8
	602 And TEMP, TEMP, 16
	603 Compare TEMP, 16
	604 JumpIfNotEqual {640}
	605 Compare X19, 0
	606 JumpIfEqual {765}
	607 Move X8, [X21]
	608 NotImplemented "Instruction LDUR not yet implemented."
	609 Move X1, [X28]
	610 NotImplemented "Instruction LDRH not yet implemented."
	611 Move [X31], V0
	612 Compare X9, 0
	613 JumpIfEqual {620}
	614 Move X10, [X8+176]
	615 Add X10, X10, 8
	616 NotImplemented "Instruction LDUR not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Subtract X9, X9, 1
	619 Add X10, X10, 16
	620 Move X0, X21
	621 Move W2, W31
	622 Call 0x1C5D788
	623 NotImplemented "Instruction LDRSW not yet implemented."
	624 Add X8, X8, X9
	625 Add X0, X8, 312
	626 Move X8, [X0]
	627 Move X2, [X0+8]
	628 Move X0, X21
	629 Move W1, W24
	630 NotImplemented "Instruction BLR not yet implemented."
	631 Compare X0, 0
	632 JumpIfEqual {765}
	633 NotImplemented "Instruction LDUR not yet implemented."
	634 Move W8, [X31+16]
	635 Move V1, [X31]
	636 Add W8, W8, 1
	637 Add V0, V1, V0
	638 Move [X31+16], W8
	639 Move [X19+104], V0
	640 Add W23, W23, 1
	641 NotImplemented "Instruction CMP not yet implemented."
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Compare X19, 0
	644 JumpIfEqual {765}
	645 Move W8, [X19+120]
	646 Move V0, [X19+16]
	647 Move V1, [X19+24]
	648 NotImplemented "Instruction SCVTF not yet implemented."
	649 Move S3, 1
	650 NotImplemented "Instruction FDIV not yet implemented."
	651 Or W8, W8, 1
	652 NotImplemented "Instruction INVALID not yet implemented."
	653 Multiply S1, S2, S1
	654 Move [X19+120], W8
	655 Move [X19+16], D0
	656 Move [X19+24], S1
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Compare X19, 0
	659 JumpIfEqual {765}
	660 Move W8, [X19+120]
	661 NotImplemented "Instruction LDUR not yet implemented."
	662 NotImplemented "Instruction SCVTF not yet implemented."
	663 Move S2, 1
	664 NotImplemented "Instruction FDIV not yet implemented."
	665 Or W8, W8, 32
	666 NotImplemented "Instruction INVALID not yet implemented."
	667 Move [X19+120], W8
	668 Move [X19+28], V0
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Compare X19, 0
	671 JumpIfEqual {765}
	672 Move W8, [X19+120]
	673 Move V0, [X19+72]
	674 NotImplemented "Instruction SCVTF not yet implemented."
	675 Move S2, 1
	676 NotImplemented "Instruction FDIV not yet implemented."
	677 Or W8, W8, 2
	678 NotImplemented "Instruction INVALID not yet implemented."
	679 Move [X19+120], W8
	680 Move [X19+72], D0
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Compare X19, 0
	683 JumpIfEqual {765}
	684 Move W8, [X19+120]
	685 NotImplemented "Instruction LDUR not yet implemented."
	686 Move V1, [X19+52]
	687 NotImplemented "Instruction SCVTF not yet implemented."
	688 Move S3, 1
	689 NotImplemented "Instruction FDIV not yet implemented."
	690 Or W8, W8, 64
	691 NotImplemented "Instruction INVALID not yet implemented."
	692 Multiply S1, S2, S1
	693 Move [X19+120], W8
	694 Move [X19+44], D0
	695 Move [X19+52], S1
	696 Move W11, [X31+24]
	697 Move W12, [X31+28]
	698 Move W9, [X31+16]
	699 Move W10, [X31+20]
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Compare X19, 0
	702 JumpIfEqual {765}
	703 Move W8, [X19+120]
	704 NotImplemented "Instruction LDUR not yet implemented."
	705 NotImplemented "Instruction SCVTF not yet implemented."
	706 Move S2, 1
	707 NotImplemented "Instruction FDIV not yet implemented."
	708 Or W8, W8, 128
	709 NotImplemented "Instruction INVALID not yet implemented."
	710 Move [X19+120], W8
	711 Move [X19+56], V0
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Compare X19, 0
	714 JumpIfEqual {765}
	715 Move W8, [X19+120]
	716 Move V0, [X19+80]
	717 NotImplemented "Instruction SCVTF not yet implemented."
	718 Move S2, 1
	719 NotImplemented "Instruction FDIV not yet implemented."
	720 Or W8, W8, 4
	721 NotImplemented "Instruction INVALID not yet implemented."
	722 Move [X19+120], W8
	723 Move [X19+80], D0
	724 NotImplemented "Instruction CMP not yet implemented."
	725 Compare X19, 0
	726 JumpIfEqual {765}
	727 Move W8, [X19+120]
	728 NotImplemented "Instruction LDUR not yet implemented."
	729 NotImplemented "Instruction SCVTF not yet implemented."
	730 Move S2, 1
	731 NotImplemented "Instruction FDIV not yet implemented."
	732 Or W8, W8, 8
	733 NotImplemented "Instruction INVALID not yet implemented."
	734 Move [X19+120], W8
	735 Move [X19+88], V0
	736 NotImplemented "Instruction CMP not yet implemented."
	737 Compare X19, 0
	738 JumpIfEqual {765}
	739 Move W8, [X19+120]
	740 NotImplemented "Instruction LDUR not yet implemented."
	741 NotImplemented "Instruction SCVTF not yet implemented."
	742 Move S2, 1
	743 NotImplemented "Instruction FDIV not yet implemented."
	744 Or W8, W8, 16
	745 NotImplemented "Instruction INVALID not yet implemented."
	746 Move [X19+120], W8
	747 Move [X19+104], V0
	748 Move X0, X19
	749 Move X20, [X31+128]
	750 Move X19, [X31+136]
	751 Move X22, [X31+112]
	752 Move X21, [X31+120]
	753 Move X24, [X31+96]
	754 Move X23, [X31+104]
	755 Move X26, [X31+80]
	756 Move X25, [X31+88]
	757 Move X28, [X31+64]
	758 Move X27, [X31+72]
	759 Move X29, [X31+48]
	760 Move X30, [X31+56]
	761 Move D9, [X31+32]
	762 Move D8, [X31+40]
	763 Add X31, X31, 144
	764 Return X0
	765 Call 0x1C17F20
	766 Move X0, 0x7B8000
	767 Move X0, [X0+1320]
	768 Call 0x1C17D08
	769 Call 0x1C17F10
	770 Move X19, X0
	771 Move X0, 0x80E000
	772 Move X0, [X0+1104]
	773 Call 0x1C17D08
	774 Move X1, X0
	775 Move X0, X19
	776 Move X2, X31
	777 Call ArgumentNullException..ctor, X0, X1
	778 Move X0, 0x80E000
	779 Move X0, [X0+3944]
	780 Call 0x1C17D08
	781 Move X1, X0
	782 Move X0, X19
	783 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Vertex Mix(UnityEngine.ProBuilder.Vertex x, UnityEngine.ProBuilder.Vertex y, System.Single weight)

Disassembly:
	0x03941610 LDR X1, [X22]
	0x03941614 LDRH W9, [X8 + 0x12E]
	0x03941618 CBZ X9, 0x394163C
	0x0394161C LDR X10, [X8 + 0xB0]
	0x03941620 ADD X10, X10, 0x8
	0x03941624 LDUR X11, [X10 - 0x8]
	0x03941628 CMP X11, X1
	0x0394162C B.EQ 0x394164C
	0x03941630 SUBS X9, X9, 0x1
	0x03941634 ADD X10, X10, 0x10
	0x03941638 B.NE 0x3941624
	0x0394163C MOV X0, X20
	0x03941640 MOV W2, W31
	0x03941644 BL 0x1C5C788
	0x03941648 B 0x3941658
	0x0394164C LDRSW X9, [X10]
	0x03941650 ADD X8, X8, X9, 0x4, LSL
	0x03941654 ADD X0, X8, 0x138
	0x03941658 LDP X8, X1, [X0]
	0x0394165C MOV X0, X20
	0x03941660 BLR X8
	0x03941664 TBZ X0, 0x0, 0x39416E4
	0x03941668 LDR X8, [X20]
	0x0394166C LDR X1, [X24]
	0x03941670 LDRH W9, [X8 + 0x12E]
	0x03941674 CBZ X9, 0x3941698
	0x03941678 LDR X10, [X8 + 0xB0]
	0x0394167C ADD X10, X10, 0x8
	0x03941680 LDUR X11, [X10 - 0x8]
	0x03941684 CMP X11, X1
	0x03941688 B.EQ 0x39416A8
	0x0394168C SUBS X9, X9, 0x1
	0x03941690 ADD X10, X10, 0x10
	0x03941694 B.NE 0x3941680
	0x03941698 MOV X0, X20
	0x0394169C MOV W2, W31
	0x039416A0 BL 0x1C5C788
	0x039416A4 B 0x39416B4
	0x039416A8 LDRSW X9, [X10]
	0x039416AC ADD X8, X8, X9, 0x4, LSL
	0x039416B0 ADD X0, X8, 0x138
	0x039416B4 LDP X8, X1, [X0]
	0x039416B8 MOV X0, X20
	0x039416BC BLR X8
	0x039416C0 CBZ X21, 0x39417AC
	0x039416C4 LDR W8, [X21 + 0x18]
	0x039416C8 CMP W0, W8
	0x039416CC B.CS 0x39417B0
	0x039416D0 SXTW X8, W0
	0x039416D4 MADD X8, X8, X25, X21
	0x039416D8 STP S10, S9, [X8 + 0x20]
	0x039416DC STR S8, [X8 + 0x28]
	0x039416E0 B 0x394160C
	0x039416E4 MOV X22, X31
	0x039416E8 MOVZ W24, 0x7
	0x039416EC CBZ X20, 0x3941748
	0x039416F0 LDR X8, [X20]
	0x039416F4 LDR X1, [X23]
	0x039416F8 LDRH W9, [X8 + 0x12E]
	0x039416FC CBZ X9, 0x3941720
	0x03941700 LDR X10, [X8 + 0xB0]
	0x03941704 ADD X10, X10, 0x8
	0x03941708 LDUR X11, [X10 - 0x8]
	0x0394170C CMP X11, X1
	0x03941710 B.EQ 0x3941730
	0x03941714 SUBS X9, X9, 0x1
	0x03941718 ADD X10, X10, 0x10
	0x0394171C B.NE 0x3941708
	0x03941720 MOV X0, X20
	0x03941724 MOV W2, W31
	0x03941728 BL 0x1C5C788
	0x0394172C B 0x394173C
	0x03941730 LDRSW X9, [X10]
	0x03941734 ADD X8, X8, X9, 0x4, LSL
	0x03941738 ADD X0, X8, 0x138
	0x0394173C LDP X8, X1, [X0]
	0x03941740 MOV X0, X20
	0x03941744 BLR X8
	0x03941748 CBNZ X22, 0x3941808
	0x0394174C CMP W24, 0x7
	0x03941750 B.EQ 0x3941758
	0x03941754 CBNZ W24, 0x3941790
	0x03941758 MOV X0, X19
	0x0394175C MOV X1, X31
	0x03941760 STR X21, [X19 + 0x58]
	0x03941764 BL 0x3912CAC
	0x03941768 CBZ X0, 0x39417B4
	0x0394176C MOV X1, X21
	0x03941770 LDP X20, X19, [X31 + 0x50]
	0x03941774 LDP X22, X21, [X31 + 0x40]
	0x03941778 LDP X24, X23, [X31 + 0x30]
	0x0394177C LDP X30, X25, [X31 + 0x20]
	0x03941780 LDP D9, D8, [X31 + 0x10]
	0x03941784 MOV X2, X31
	0x03941788 LDR V10, [X31], #0x60
	0x0394178C B 0x3C17F08
	0x03941790 LDP X20, X19, [X31 + 0x50]
	0x03941794 LDP X22, X21, [X31 + 0x40]
	0x03941798 LDP X24, X23, [X31 + 0x30]
	0x0394179C LDP X30, X25, [X31 + 0x20]
	0x039417A0 LDP D9, D8, [X31 + 0x10]
	0x039417A4 LDR V10, [X31], #0x60
	0x039417A8 RET
	0x039417AC BL 0x1C16F20
	0x039417B0 BL 0x1C16F28
	0x039417B4 BL 0x1C16F20
	0x039417B8 ADRP X0, 0x7B7000
	0x039417BC LDR X0, [X0 + 0x528]
	0x039417C0 BL 0x1C16D08
	0x039417C4 BL 0x1C16F10
	0x039417C8 MOV X19, X0
	0x039417CC ADRP X0, 0x80C000
	0x039417D0 LDR X0, [X0 + 0xE90]
	0x039417D4 BL 0x1C16D08
	0x039417D8 MOV X1, X0
	0x039417DC MOV X0, X19
	0x039417E0 MOV X2, X31
	0x039417E4 BL 0x330E100
	0x039417E8 ADRP X0, 0x80D000
	0x039417EC LDR X0, [X0 + 0xFB8]
	0x039417F0 BL 0x1C16D08
	0x039417F4 MOV X1, X0
	0x039417F8 MOV X0, X19
	0x039417FC BL 0x1C16DEC
	0x03941800 BL 0x1C16F28
	0x03941804 BL 0x1C16F20
	0x03941808 MOV X0, X22
	0x0394180C BL 0x1C16F18
	0x03941810 B 0x394181C
	0x03941814 B 0x394181C
	0x03941818 B 0x394181C
	0x0394181C CMP W1, 0x1
	0x03941820 B.NE 0x394183C
	0x03941824 BL 0x3EB1AD0
	0x03941828 LDR X22, [X0]
	0x0394182C BL 0x3EB1AE0
	0x03941830 MOV W24, W31
	0x03941834 CBNZ X20, 0x39416F0
	0x03941838 B 0x3941748
	0x0394183C MOV X19, X0
	0x03941840 MOV X22, X31
	0x03941844 B 0x394184C
	0x03941848 MOV X19, X0
	0x0394184C CBZ X20, 0x39418A8
	0x03941850 LDR X8, [X20]
	0x03941854 LDR X1, [X23]
	0x03941858 LDRH W9, [X8 + 0x12E]
	0x0394185C CBZ X9, 0x3941880
	0x03941860 LDR X10, [X8 + 0xB0]
	0x03941864 ADD X10, X10, 0x8
	0x03941868 LDUR X11, [X10 - 0x8]
	0x0394186C CMP X11, X1
	0x03941870 B.EQ 0x3941890
	0x03941874 SUBS X9, X9, 0x1
	0x03941878 ADD X10, X10, 0x10
	0x0394187C B.NE 0x3941868
	0x03941880 MOV X0, X20
	0x03941884 MOV W2, W31
	0x03941888 BL 0x1C5C788
	0x0394188C B 0x394189C
	0x03941890 LDRSW X9, [X10]
	0x03941894 ADD X8, X8, X9, 0x4, LSL
	0x03941898 ADD X0, X8, 0x138
	0x0394189C LDP X8, X1, [X0]
	0x039418A0 MOV X0, X20
	0x039418A4 BLR X8
	0x039418A8 CBNZ X22, 0x39418B4
	0x039418AC MOV X0, X19
	0x039418B0 BL 0x1D2C690
	0x039418B4 MOV X0, X22
	0x039418B8 BL 0x1C16F18
	0x039418BC BL 0x1990590
	0x039418C0 STP X30, X25, [X31 - 0x40]!
	0x039418C4 STP X24, X23, [X31 + 0x10]
	0x039418C8 STP X22, X21, [X31 + 0x20]
	0x039418CC STP X20, X19, [X31 + 0x30]
	0x039418D0 ADRP X21, 0xAA0000
	0x039418D4 LDRB W8, [X21 + 0x958]
	0x039418D8 MOV X22, X2
	0x039418DC MOV W19, W1
	0x039418E0 MOV X20, X0
	0x039418E4 TBNZ X8, 0x0, 0x3941914
	0x039418E8 ADRP X0, 0x7B2000
	0x039418EC LDR X0, [X0 + 0xE00]
	0x039418F0 BL 0x1C16CF4
	0x039418F4 ADRP X0, 0x7DA000
	0x039418F8 LDR X0, [X0 + 0x7C0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA1000
	007 Move W8, [X21+2383]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31], D0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x80E000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2383], W8
	020 Compare X20, 0
	021 JumpIfEqual {223}
	022 Compare X19, 0
	023 JumpIfEqual {223}
	024 Move X8, 0x80E000
	025 Move X8, [X8+32]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X21, X0
	030 Call Object..ctor, X0
	031 Compare X21, 0
	032 JumpIfEqual {246}
	033 Move V7, [X31]
	034 Move V1, [X20+24]
	035 Move V2, [X19+24]
	036 Move V3, [X20+16]
	037 Move V4, [X19+16]
	038 Move S0, 1
	039 Subtract S0, S0, S7
	040 Multiply S1, S0, S1
	041 Multiply S2, S2, S7
	042 Add S1, S1, S2
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 Add V2, V2, V3
	046 Move [X21+16], D2
	047 Move [X21+24], S1
	048 Move W9, [X20+120]
	049 Move W8, [X19+120]
	050 Move TEMP, X9
	051 And TEMP, TEMP, 32
	052 Compare TEMP, 32
	053 JumpIfEqual {59}
	054 Move TEMP, X8
	055 And TEMP, TEMP, 32
	056 Compare TEMP, 32
	057 JumpIfNotEqual {70}
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move TEMP, X8
	060 And TEMP, TEMP, 32
	061 Compare TEMP, 32
	062 JumpIfEqual {64}
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction INVALID not yet implemented."
	067 NotImplemented "Instruction INVALID not yet implemented."
	068 Add V1, V1, V2
	069 Move [X21+28], V1
	070 Move W9, [X20+120]
	071 Move W8, [X19+120]
	072 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	073 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	074 Move TEMP, X9
	075 And TEMP, TEMP, 64
	076 Compare TEMP, 64
	077 JumpIfEqual {84}
	078 Move TEMP, X8
	079 And TEMP, TEMP, 64
	080 Compare TEMP, 64
	081 JumpIfNotEqual {104}
	082 Move W8, [X19+52]
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move TEMP, X8
	085 And TEMP, TEMP, 64
	086 Compare TEMP, 64
	087 JumpIfEqual {92}
	088 Move W8, [X20+52]
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move [X21+52], W8
	091 Move [X21+44], X9
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move V4, [X20+52]
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move V6, [X19+52]
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 Multiply S4, S0, S4
	098 NotImplemented "Instruction INVALID not yet implemented."
	099 Multiply S6, S6, S7
	100 Add V3, V3, V5
	101 Add S4, S4, S6
	102 Move [X21+44], D3
	103 Move [X21+52], S4
	104 Move W9, [X20+120]
	105 Move W8, [X19+120]
	106 Move TEMP, X9
	107 And TEMP, TEMP, 128
	108 Compare TEMP, 128
	109 JumpIfEqual {115}
	110 Move TEMP, X8
	111 And TEMP, TEMP, 128
	112 Compare TEMP, 128
	113 JumpIfNotEqual {126}
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move TEMP, X8
	116 And TEMP, TEMP, 128
	117 Compare TEMP, 128
	118 JumpIfEqual {120}
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction INVALID not yet implemented."
	123 NotImplemented "Instruction INVALID not yet implemented."
	124 Add V3, V3, V4
	125 Move [X21+56], V3
	126 Move W9, [X20+120]
	127 Move W8, [X19+120]
	128 Move TEMP, X9
	129 And TEMP, TEMP, 2
	130 Compare TEMP, 2
	131 JumpIfEqual {137}
	132 Move TEMP, X8
	133 And TEMP, TEMP, 2
	134 Compare TEMP, 2
	135 JumpIfNotEqual {149}
	136 Move X8, [X19+72]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 2
	139 Compare TEMP, 2
	140 JumpIfEqual {143}
	141 Move X8, [X20+72]
	142 Move [X21+72], X8
	143 Move V3, [X20+72]
	144 Move V4, [X19+72]
	145 NotImplemented "Instruction INVALID not yet implemented."
	146 NotImplemented "Instruction INVALID not yet implemented."
	147 Add V3, V3, V4
	148 Move [X21+72], D3
	149 Move W9, [X20+120]
	150 Move W8, [X19+120]
	151 Move TEMP, X9
	152 And TEMP, TEMP, 4
	153 Compare TEMP, 4
	154 JumpIfEqual {160}
	155 Move TEMP, X8
	156 And TEMP, TEMP, 4
	157 Compare TEMP, 4
	158 JumpIfNotEqual {172}
	159 Move X8, [X19+80]
	160 Move TEMP, X8
	161 And TEMP, TEMP, 4
	162 Compare TEMP, 4
	163 JumpIfEqual {166}
	164 Move X8, [X20+80]
	165 Move [X21+80], X8
	166 Move V3, [X20+80]
	167 Move V4, [X19+80]
	168 NotImplemented "Instruction INVALID not yet implemented."
	169 NotImplemented "Instruction INVALID not yet implemented."
	170 Add V1, V1, V2
	171 Move [X21+80], D1
	172 Move W9, [X20+120]
	173 Move W8, [X19+120]
	174 Move TEMP, X9
	175 And TEMP, TEMP, 8
	176 Compare TEMP, 8
	177 JumpIfEqual {183}
	178 Move TEMP, X8
	179 And TEMP, TEMP, 8
	180 Compare TEMP, 8
	181 JumpIfNotEqual {194}
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 Move TEMP, X8
	184 And TEMP, TEMP, 8
	185 Compare TEMP, 8
	186 JumpIfEqual {188}
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction INVALID not yet implemented."
	191 NotImplemented "Instruction INVALID not yet implemented."
	192 Add V1, V1, V2
	193 Move [X21+88], V1
	194 Move W9, [X20+120]
	195 Move W8, [X19+120]
	196 Move TEMP, X9
	197 And TEMP, TEMP, 16
	198 Compare TEMP, 16
	199 JumpIfEqual {205}
	200 Move TEMP, X8
	201 And TEMP, TEMP, 16
	202 Compare TEMP, 16
	203 JumpIfNotEqual {216}
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 Move TEMP, X8
	206 And TEMP, TEMP, 16
	207 Compare TEMP, 16
	208 JumpIfEqual {210}
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction INVALID not yet implemented."
	213 NotImplemented "Instruction INVALID not yet implemented."
	214 Add V0, V0, V1
	215 Move [X21+104], V0
	216 Move X0, X21
	217 Move X20, [X31+32]
	218 Move X19, [X31+40]
	219 Move X30, [X31+16]
	220 Move X21, [X31+24]
	221 Add X31, X31, 48
	222 Return X0
	223 Move X0, 0x7B8000
	224 Move X0, [X0+1320]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X19, X0
	228 Move X0, 0x7DB000
	229 Move X0, [X0+1920]
	230 Call 0x1C17D08
	231 Move X20, X0
	232 Move X0, 0x80E000
	233 Move X0, [X0+3952]
	234 Call 0x1C17D08
	235 Move X2, X0
	236 Move X0, X19
	237 Move X1, X20
	238 Move X3, X31
	239 Call ArgumentNullException..ctor, X0, X1, X2
	240 Move X0, 0x80E000
	241 Move X0, [X0+3960]
	242 Call 0x1C17D08
	243 Move X1, X0
	244 Move X0, X19
	245 Call 0x1C17DEC
	246 Call 0x1C17F20

