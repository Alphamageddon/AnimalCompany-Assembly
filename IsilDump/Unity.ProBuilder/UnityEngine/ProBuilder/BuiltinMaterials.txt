Type: UnityEngine.ProBuilder.BuiltinMaterials

Method: System.Void Init()

Disassembly:
	0x038FB3E8 LDR X9, [X9 + 0xC8]
	0x038FB3EC ADD X9, X9, X10, 0x3, LSL
	0x038FB3F0 LDUR X9, [X9 - 0x8]
	0x038FB3F4 CMP X9, X8
	0x038FB3F8 CSEL X8, X19, X31, EQ
	0x038FB3FC LDR X0, [X21]
	0x038FB400 LDR X9, [X0 + 0xB8]
	0x038FB404 STR X8, [X9 + 0x48]
	0x038FB408 LDR W8, [X0 + 0xE0]
	0x038FB40C CBNZ W8, 0x38FB418
	0x038FB410 BL 0x1C16DFC
	0x038FB414 LDR X0, [X21]
	0x038FB418 LDR X8, [X22]
	0x038FB41C LDR X9, [X0 + 0xB8]
	0x038FB420 LDR W10, [X8 + 0xE0]
	0x038FB424 LDR X19, [X9 + 0x48]
	0x038FB428 CBNZ W10, 0x38FB434
	0x038FB42C MOV X0, X8
	0x038FB430 BL 0x1C16DFC
	0x038FB434 MOV X0, X19
	0x038FB438 MOV X1, X31
	0x038FB43C MOV X2, X31
	0x038FB440 BL 0x3C3883C
	0x038FB444 TBZ X0, 0x0, 0x38FB4B8
	0x038FB448 MOVZ W0, 0x3
	0x038FB44C MOV X1, X31
	0x038FB450 BL 0x3C353A0
	0x038FB454 CBZ X0, 0x38FB4E4
	0x038FB458 ADRP X8, 0x7FF000
	0x038FB45C LDR X8, [X8 + 0x780]
	0x038FB460 MOV X19, X0
	0x038FB464 LDR X1, [X8]
	0x038FB468 BL 0x21E52E4
	0x038FB46C CBZ X0, 0x38FB4E4
	0x038FB470 MOV X1, X31
	0x038FB474 BL 0x3C1349C
	0x038FB478 LDR X8, [X21]
	0x038FB47C MOV X20, X0
	0x038FB480 LDR W9, [X8 + 0xE0]
	0x038FB484 CBNZ W9, 0x38FB494
	0x038FB488 MOV X0, X8
	0x038FB48C BL 0x1C16DFC
	0x038FB490 LDR X8, [X21]
	0x038FB494 LDR X8, [X8 + 0xB8]
	0x038FB498 STR X20, [X8 + 0x48]
	0x038FB49C LDR X0, [X22]
	0x038FB4A0 LDR W8, [X0 + 0xE0]
	0x038FB4A4 CBNZ W8, 0x38FB4AC
	0x038FB4A8 BL 0x1C16DFC
	0x038FB4AC MOV X0, X19
	0x038FB4B0 MOV X1, X31
	0x038FB4B4 BL 0x3C39564
	0x038FB4B8 LDR X0, [X21]
	0x038FB4BC LDR W8, [X0 + 0xE0]
	0x038FB4C0 CBNZ W8, 0x38FB4CC
	0x038FB4C4 BL 0x1C16DFC
	0x038FB4C8 LDR X0, [X21]
	0x038FB4CC LDR X8, [X0 + 0xB8]
	0x038FB4D0 LDP X20, X19, [X31 + 0x20]
	0x038FB4D4 LDP X22, X21, [X31 + 0x10]
	0x038FB4D8 LDR X0, [X8 + 0x48]
	0x038FB4DC LDR X30, [X31], #0x30
	0x038FB4E0 RET
	0x038FB4E4 BL 0x1C16F20
	0x038FB4E8 STR X30, [X31 - 0x20]!
	0x038FB4EC STP X20, X19, [X31 + 0x10]
	0x038FB4F0 ADRP X20, 0xAE6000
	0x038FB4F4 ADRP X19, 0x852000
	0x038FB4F8 LDRB W8, [X20 + 0x775]
	0x038FB4FC LDR X19, [X19 + 0xAC8]
	0x038FB500 TBNZ X8, 0x0, 0x38FB518
	0x038FB504 ADRP X0, 0x852000
	0x038FB508 LDR X0, [X0 + 0xAC8]
	0x038FB50C BL 0x1C16CF4
	0x038FB510 MOVZ W8, 0x1
	0x038FB514 STRB W8, [X20 + 0x775]
	0x038FB518 LDR X0, [X19]
	0x038FB51C LDR W8, [X0 + 0xE0]
	0x038FB520 CBNZ W8, 0x38FB528
	0x038FB524 BL 0x1C16DFC
	0x038FB528 BL 0x38FA3E8
	0x038FB52C LDR X8, [X19]
	0x038FB530 LDP X20, X19, [X31 + 0x10]
	0x038FB534 LDR X8, [X8 + 0xB8]
	0x038FB538 LDR X0, [X8 + 0x50]
	0x038FB53C LDR X30, [X31], #0x20
	0x038FB540 RET
	0x038FB544 STR X30, [X31 - 0x20]!
	0x038FB548 STP X20, X19, [X31 + 0x10]
	0x038FB54C ADRP X20, 0xAE6000
	0x038FB550 ADRP X19, 0x852000
	0x038FB554 LDRB W8, [X20 + 0x776]
	0x038FB558 LDR X19, [X19 + 0xAC8]
	0x038FB55C TBNZ X8, 0x0, 0x38FB574
	0x038FB560 ADRP X0, 0x852000
	0x038FB564 LDR X0, [X0 + 0xAC8]
	0x038FB568 BL 0x1C16CF4
	0x038FB56C MOVZ W8, 0x1
	0x038FB570 STRB W8, [X20 + 0x776]
	0x038FB574 LDR X0, [X19]
	0x038FB578 LDR W8, [X0 + 0xE0]
	0x038FB57C CBNZ W8, 0x38FB584
	0x038FB580 BL 0x1C16DFC
	0x038FB584 BL 0x38FA3E8
	0x038FB588 LDR X8, [X19]
	0x038FB58C LDP X20, X19, [X31 + 0x10]
	0x038FB590 LDR X8, [X8 + 0xB8]
	0x038FB594 LDR X0, [X8 + 0x58]
	0x038FB598 LDR X30, [X31], #0x20
	0x038FB59C RET
	0x038FB5A0 STR X30, [X31 - 0x50]!
	0x038FB5A4 STP X26, X25, [X31 + 0x10]
	0x038FB5A8 STP X24, X23, [X31 + 0x20]
	0x038FB5AC STP X22, X21, [X31 + 0x30]
	0x038FB5B0 STP X20, X19, [X31 + 0x40]
	0x038FB5B4 ADRP X26, 0xAE6000
	0x038FB5B8 ADRP X24, 0x852000
	0x038FB5BC ADRP X25, 0x852000
	0x038FB5C0 ADRP X23, 0x852000
	0x038FB5C4 ADRP X22, 0x852000
	0x038FB5C8 ADRP X21, 0x852000
	0x038FB5CC ADRP X20, 0x852000
	0x038FB5D0 ADRP X19, 0x852000
	0x038FB5D4 LDR X24, [X24 + 0xAC8]
	0x038FB5D8 LDR X25, [X25 + 0xB48]
	0x038FB5DC LDRB W8, [X26 + 0x777]
	0x038FB5E0 LDR X23, [X23 + 0xB50]
	0x038FB5E4 LDR X22, [X22 + 0xB58]
	0x038FB5E8 LDR X21, [X21 + 0xB60]
	0x038FB5EC LDR X20, [X20 + 0xB68]
	0x038FB5F0 LDR X19, [X19 + 0xB70]
	0x038FB5F4 TBNZ X8, 0x0, 0x38FB654
	0x038FB5F8 ADRP X0, 0x852000
	0x038FB5FC LDR X0, [X0 + 0xAC8]
	0x038FB600 BL 0x1C16CF4
	0x038FB604 ADRP X0, 0x852000
	0x038FB608 LDR X0, [X0 + 0xB68]
	0x038FB60C BL 0x1C16CF4
	0x038FB610 ADRP X0, 0x852000
	0x038FB614 LDR X0, [X0 + 0xB48]
	0x038FB618 BL 0x1C16CF4
	0x038FB61C ADRP X0, 0x852000
	0x038FB620 LDR X0, [X0 + 0xB60]
	0x038FB624 BL 0x1C16CF4
	0x038FB628 ADRP X0, 0x852000
	0x038FB62C LDR X0, [X0 + 0xB58]
	0x038FB630 BL 0x1C16CF4
	0x038FB634 ADRP X0, 0x852000
	0x038FB638 LDR X0, [X0 + 0xB70]
	0x038FB63C BL 0x1C16CF4
	0x038FB640 ADRP X0, 0x852000
	0x038FB644 LDR X0, [X0 + 0xB50]
	0x038FB648 BL 0x1C16CF4
	0x038FB64C MOVZ W8, 0x1
	0x038FB650 STRB W8, [X26 + 0x777]
	0x038FB654 LDR X8, [X24]
	0x038FB658 ADRP X9, 0xFFFFFFFFFD1F1000
	0x038FB65C LDR V0, [X9 + 0xA7]
	0x038FB660 LDR X8, [X8 + 0xB8]
	0x038FB664 STUR V0, [X8 + 0x4]
	0x038FB668 LDR X8, [X24]
	0x038FB66C LDR X10, [X25]
	0x038FB670 LDR X9, [X23]
	0x038FB674 LDP X24, X23, [X31 + 0x20]
	0x038FB678 LDR X8, [X8 + 0xB8]
	0x038FB67C LDP X26, X25, [X31 + 0x10]
	0x038FB680 STP X10, X9, [X8 + 0x60]
	0x038FB684 LDR X10, [X22]
	0x038FB688 LDR X9, [X21]
	0x038FB68C LDP X22, X21, [X31 + 0x30]
	0x038FB690 STP X10, X9, [X8 + 0x70]
	0x038FB694 LDR X10, [X20]
	0x038FB698 LDR X9, [X19]
	0x038FB69C LDP X20, X19, [X31 + 0x40]
	0x038FB6A0 STP X10, X9, [X8 + 0x80]
	0x038FB6A4 LDR X30, [X31], #0x50
	0x038FB6A8 RET
	0x038FB6AC LDR X0, [X0 + 0x10]
	0x038FB6B0 RET
	0x038FB6B4 LDR X0, [X0 + 0x18]
	0x038FB6B8 RET
	0x038FB6BC STP X30, X21, [X31 - 0x20]!
	0x038FB6C0 STP X20, X19, [X31 + 0x10]
	0x038FB6C4 MOV X20, X1
	0x038FB6C8 MOV X1, X31
	0x038FB6CC MOV X19, X2
	0x038FB6D0 MOV X21, X0
	0x038FB6D4 BL 0x33BDD8C
	0x038FB6D8 STP X20, X19, [X21 + 0x10]
	0x038FB6DC LDP X20, X19, [X31 + 0x10]
	0x038FB6E0 LDP X30, X21, [X31], #0x20
	0x038FB6E4 RET
	0x038FB6E8 STR X30, [X31 - 0x20]!
	0x038FB6EC STP X20, X19, [X31 + 0x10]
	0x038FB6F0 ADRP X20, 0xAE6000
	0x038FB6F4 LDRB W8, [X20 + 0x778]
	0x038FB6F8 MOV X19, X0
	0x038FB6FC TBNZ X8, 0x0, 0x38FB714
	0x038FB700 ADRP X0, 0x852000
	0x038FB704 LDR X0, [X0 + 0xB78]
	0x038FB708 BL 0x1C16CF4
	0x038FB70C MOVZ W8, 0x1
	0x038FB710 STRB W8, [X20 + 0x778]
	0x038FB714 LDR X0, [X19 + 0x10]
	0x038FB718 CBZ X0, 0x38FB748
	0x038FB71C LDR X8, [X0]
	0x038FB720 ADRP X20, 0x852000
	0x038FB724 LDP X9, X1, [X8 + 0x168]
	0x038FB728 LDR X20, [X20 + 0xB78]
	0x038FB72C BLR X9
	0x038FB730 LDR X2, [X19 + 0x18]
	0x038FB734 LDR X1, [X20]
	0x038FB738 LDP X20, X19, [X31 + 0x10]
	0x038FB73C MOV X3, X31
	0x038FB740 LDR X30, [X31], #0x20
	0x038FB744 B 0x32274B8
	0x038FB748 BL 0x1C16F20
	0x038FB74C STR X30, [X31 - 0x30]!
	0x038FB750 STP X22, X21, [X31 + 0x10]
	0x038FB754 STP X20, X19, [X31 + 0x20]
	0x038FB758 ADRP X22, 0xAE6000
	0x038FB75C ADRP X21, 0x852000
	0x038FB760 ADRP X20, 0x852000
	0x038FB764 LDRB W8, [X22 + 0x779]
	0x038FB768 LDR X21, [X21 + 0xB80]
	0x038FB76C LDR X20, [X20 + 0xB88]
	0x038FB770 MOV X19, X0
	0x038FB774 TBNZ X8, 0x0, 0x38FB798
	0x038FB778 ADRP X0, 0x852000
	0x038FB77C LDR X0, [X0 + 0xB88]
	0x038FB780 BL 0x1C16CF4
	0x038FB784 ADRP X0, 0x852000
	0x038FB788 LDR X0, [X0 + 0xB80]
	0x038FB78C BL 0x1C16CF4
	0x038FB790 MOVZ W8, 0x1
	0x038FB794 STRB W8, [X22 + 0x779]
	0x038FB798 LDR X0, [X21]
	0x038FB79C LDR X19, [X19 + 0x10]
	0x038FB7A0 BL 0x1C16F10
	0x038FB7A4 LDR X2, [X20]
	0x038FB7A8 MOV X1, X19
	0x038FB7AC MOV X20, X0
	0x038FB7B0 BL 0x2551884
	0x038FB7B4 MOV X0, X20
	0x038FB7B8 LDP X20, X19, [X31 + 0x20]
	0x038FB7BC LDP X22, X21, [X31 + 0x10]
	0x038FB7C0 LDR X30, [X31], #0x30
	0x038FB7C4 RET
	0x038FB7C8 STP X29, X30, [X31 - 0x60]!
	0x038FB7CC STP X28, X27, [X31 + 0x10]
	0x038FB7D0 STP X26, X25, [X31 + 0x20]
	0x038FB7D4 STP X24, X23, [X31 + 0x30]
	0x038FB7D8 STP X22, X21, [X31 + 0x40]
	0x038FB7DC STP X20, X19, [X31 + 0x50]
	0x038FB7E0 ADRP X24, 0xAE6000
	0x038FB7E4 ADRP X20, 0x7FA000
	0x038FB7E8 ADRP X23, 0x852000
	0x038FB7EC ADRP X22, 0x852000
	0x038FB7F0 LDRB W8, [X24 + 0x77A]
	0x038FB7F4 LDR X20, [X20 + 0x278]
	0x038FB7F8 LDR X23, [X23 + 0xB90]
	0x038FB7FC LDR X22, [X22 + 0xB98]
	0x038FB800 MOV X21, X1
	0x038FB804 MOV X19, X0
	0x038FB808 TBNZ X8, 0x0, 0x38FB874
	0x038FB80C ADRP X0, 0x852000
	0x038FB810 LDR X0, [X0 + 0xBA0]
	0x038FB814 BL 0x1C16CF4
	0x038FB818 ADRP X0, 0x852000
	0x038FB81C LDR X0, [X0 + 0xB98]
	0x038FB820 BL 0x1C16CF4
	0x038FB824 ADRP X0, 0x852000
	0x038FB828 LDR X0, [X0 + 0xB90]
	0x038FB82C BL 0x1C16CF4
	0x038FB830 ADRP X0, 0x800000
	0x038FB834 LDR X0, [X0 + 0x600]
	0x038FB838 BL 0x1C16CF4
	0x038FB83C ADRP X0, 0x7F8000
	0x038FB840 LDR X0, [X0 + 0x8F0]
	0x038FB844 BL 0x1C16CF4
	0x038FB848 ADRP X0, 0x7FA000
	0x038FB84C LDR X0, [X0 + 0x278]
	0x038FB850 BL 0x1C16CF4
	0x038FB854 ADRP X0, 0x852000
	0x038FB858 LDR X0, [X0 + 0xBA8]
	0x038FB85C BL 0x1C16CF4
	0x038FB860 ADRP X0, 0x7F8000
	0x038FB864 LDR X0, [X0 + 0x988]
	0x038FB868 BL 0x1C16CF4
	0x038FB86C MOVZ W8, 0x1
	0x038FB870 STRB W8, [X24 + 0x77A]
	0x038FB874 MOV X0, X19
	0x038FB878 MOV X1, X31
	0x038FB87C BL 0x33BDD8C
	0x038FB880 LDR X8, [X20]
	0x038FB884 LDR X0, [X23]
	0x038FB888 LDR X8, [X8 + 0xB8]
	0x038FB88C LDR X20, [X8]
	0x038FB890 BL 0x1C16F10
	0x038FB894 LDR X1, [X22]
	0x038FB898 MOV X22, X0
	0x038FB89C BL 0x301B7C4
	0x038FB8A0 STR X22, [X19 + 0x10]
	0x038FB8A4 CBZ X21, 0x38FBABC
	0x038FB8A8 MOVZ W1, 0xA
	0x038FB8AC MOV X0, X21
	0x038FB8B0 MOV W2, W31
	0x038FB8B4 MOV X3, X31
	0x038FB8B8 BL 0x3229AE8
	0x038FB8BC CBZ X0, 0x38FBABC
	0x038FB8C0 LDR X8, [X0 + 0x18]
	0x038FB8C4 ADRP X24, 0x852000
	0x038FB8C8 LDR X24, [X24 + 0xBA0]
	0x038FB8CC MOV X21, X0
	0x038FB8D0 CMP W8, 0x1
	0x038FB8D4 MOV X22, X31
	0x038FB8D8 B.LT 0x38FBA10
	0x038FB8DC ADRP X26, 0x800000
	0x038FB8E0 ADRP X27, 0x852000
	0x038FB8E4 ADRP X29, 0x7F8000
	0x038FB8E8 LDR X26, [X26 + 0x600]
	0x038FB8EC LDR X27, [X27 + 0xBA8]
	0x038FB8F0 LDR X29, [X29 + 0x8F0]
	0x038FB8F4 MOV X25, X31
	0x038FB8F8 AND X8, X8, 0x0
	0x038FB8FC ADD X28, X21, 0x20
	0x038FB900 MOV X23, X20
	0x038FB904 CMP X25, W8, UXTW
	0x038FB908 B.CS 0x38FBAC0
	0x038FB90C LDR X0, [X26]
	0x038FB910 LDR X20, [X28, X25, LSL #3]
	0x038FB914 LDR W8, [X0 + 0xE0]
	0x038FB918 CBNZ W8, 0x38FB920
	0x038FB91C BL 0x1C16DFC
	0x038FB920 LDR X1, [X27]
	0x038FB924 MOV X0, X20
	0x038FB928 MOV X2, X31
	0x038FB92C BL 0x3632B2C
	0x038FB930 CBZ X0, 0x38FBABC
	0x038FB934 MOV X1, X31
	0x038FB938 BL 0x362F808
	0x038FB93C TBZ X0, 0x0, 0x38FB95C
	0x038FB940 CBZ X22, 0x38FB978
	0x038FB944 LDR X8, [X22]
	0x038FB948 MOV X0, X22
	0x038FB94C LDP X9, X1, [X8 + 0x168]
	0x038FB950 BLR X9
	0x038FB954 MOV X2, X0
	0x038FB958 B 0x38FB984
	0x038FB95C CBZ X22, 0x38FB970
	0x038FB960 MOV X0, X22
	0x038FB964 MOV X1, X20
	0x038FB968 MOV X2, X31
	0x038FB96C BL 0x32338A8
	0x038FB970 MOV X20, X23
	0x038FB974 B 0x38FB9FC
	0x038FB978 ADRP X8, 0x7F8000
	0x038FB97C LDR X8, [X8 + 0x988]
	0x038FB980 LDR X2, [X8]
	0x038FB984 MOV X1, X23
	0x038FB988 BL 0x38FBAC4
	0x038FB98C CBZ X0, 0x38FB9E8
	0x038FB990 MOV X1, X0
	0x038FB994 LDR X0, [X19 + 0x10]
	0x038FB998 CBZ X0, 0x38FBABC
	0x038FB99C LDR W10, [X0 + 0x1C]
	0x038FB9A0 LDR X8, [X0 + 0x10]
	0x038FB9A4 LDR X9, [X24]
	0x038FB9A8 ADD W10, W10, 0x1
	0x038FB9AC STR W10, [X0 + 0x1C]
	0x038FB9B0 CBZ X8, 0x38FBABC
	0x038FB9B4 LDRSW X10, [X0 + 0x18]
	0x038FB9B8 LDR W11, [X8 + 0x18]
	0x038FB9BC CMP W10, W11
	0x038FB9C0 B.CS 0x38FB9D8
	0x038FB9C4 ADD W9, W10, 0x1
	0x038FB9C8 ADD X8, X8, X10, 0x3, LSL
	0x038FB9CC STR W9, [X0 + 0x18]
	0x038FB9D0 STR X1, [X8 + 0x20]
	0x038FB9D4 B 0x38FB9E8
	0x038FB9D8 LDR X8, [X9 + 0x20]
	0x038FB9DC LDR X8, [X8 + 0xC0]
	0x038FB9E0 LDR X2, [X8 + 0x70]
	0x038FB9E4 BL 0x301BF90
	0x038FB9E8 LDR X0, [X29]
	0x038FB9EC BL 0x1C16F10
	0x038FB9F0 MOV X1, X31
	0x038FB9F4 MOV X22, X0
	0x038FB9F8 BL 0x3231AC4
	0x038FB9FC LDR W8, [X21 + 0x18]
	0x038FBA00 ADD X25, X25, 0x1
	0x038FBA04 MOV X23, X20
	0x038FBA08 CMP X25, W8, SXTW
	0x038FBA0C B.LT 0x38FB904
	0x038FBA10 CBZ X22, 0x38FBABC
	0x038FBA14 LDR X8, [X22]
	0x038FBA18 MOV X0, X22
	0x038FBA1C LDP X9, X1, [X8 + 0x168]
	0x038FBA20 BLR X9
	0x038FBA24 MOV X1, X20
	0x038FBA28 MOV X2, X0
	0x038FBA2C BL 0x38FBAC4
	0x038FBA30 CBZ X0, 0x38FBA78
	0x038FBA34 MOV X1, X0
	0x038FBA38 LDR X0, [X19 + 0x10]
	0x038FBA3C CBZ X0, 0x38FBABC
	0x038FBA40 LDR W10, [X0 + 0x1C]
	0x038FBA44 LDR X8, [X0 + 0x10]
	0x038FBA48 LDR X9, [X24]
	0x038FBA4C ADD W10, W10, 0x1
	0x038FBA50 STR W10, [X0 + 0x1C]
	0x038FBA54 CBZ X8, 0x38FBABC
	0x038FBA58 LDRSW X10, [X0 + 0x18]
	0x038FBA5C LDR W11, [X8 + 0x18]
	0x038FBA60 CMP W10, W11
	0x038FBA64 B.CS 0x38FBA94
	0x038FBA68 ADD W9, W10, 0x1
	0x038FBA6C ADD X8, X8, X10, 0x3, LSL
	0x038FBA70 STR W9, [X0 + 0x18]
	0x038FBA74 STR X1, [X8 + 0x20]
	0x038FBA78 LDP X20, X19, [X31 + 0x50]
	0x038FBA7C LDP X22, X21, [X31 + 0x40]
	0x038FBA80 LDP X24, X23, [X31 + 0x30]
	0x038FBA84 LDP X26, X25, [X31 + 0x20]
	0x038FBA88 LDP X28, X27, [X31 + 0x10]
	0x038FBA8C LDP X29, X30, [X31], #0x60
	0x038FBA90 RET
	0x038FBA94 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xAE7000
	008 Move X21, 0x853000
	009 Move W8, [X19+1897]
	010 Move X21, [X21+2760]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {68}
	015 Move X0, 0x853000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x853000
	019 Move X0, [X0+2768]
	020 Call 0x1C17CF4
	021 Move X0, 0x822000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0x7FD000
	025 Move X0, [X0+3232]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F9000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x853000
	031 Move X0, [X0+2776]
	032 Call 0x1C17CF4
	033 Move X0, 0x823000
	034 Move X0, [X0+592]
	035 Call 0x1C17CF4
	036 Move X0, 0x7F9000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move X0, 0x853000
	040 Move X0, [X0+2784]
	041 Call 0x1C17CF4
	042 Move X0, 0x853000
	043 Move X0, [X0+2792]
	044 Call 0x1C17CF4
	045 Move X0, 0x853000
	046 Move X0, [X0+2800]
	047 Call 0x1C17CF4
	048 Move X0, 0x853000
	049 Move X0, [X0+2808]
	050 Call 0x1C17CF4
	051 Move X0, 0x821000
	052 Move X0, [X0+736]
	053 Call 0x1C17CF4
	054 Move X0, 0x853000
	055 Move X0, [X0+2816]
	056 Call 0x1C17CF4
	057 Move X0, 0x853000
	058 Move X0, [X0+2824]
	059 Call 0x1C17CF4
	060 Move X0, 0x853000
	061 Move X0, [X0+2832]
	062 Call 0x1C17CF4
	063 Move X0, 0x853000
	064 Move X0, [X0+2840]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X19+1897], W8
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move W9, [X8]
	076 Compare W9, 0
	077 JumpIfNotEqual {474}
	078 Move W9, [X0+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Call 0x1C17DFC
	082 Move X8, [X21]
	083 Move X8, [X8+184]
	084 Move W9, 1
	085 Move [X8], W9
	086 Move X8, 0x853000
	087 Move X8, [X8+2784]
	088 Move X1, X31
	089 Move X0, [X8]
	090 Call Shader.Find, X0
	091 Move X22, 0x7F9000
	092 Move X22, [X22+1432]
	093 Move X19, X0
	094 Move X8, [X22]
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X19
	101 Move X1, X31
	102 Move X2, X31
	103 Call Object.op_Inequality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {114}
	108 Compare X19, 0
	109 JumpIfEqual {481}
	110 Move X0, X19
	111 Move X1, X31
	112 Call Shader.get_isSupported, X0
	113 Move W19, W0
	114 Move W19, W31
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 And W9, W19, 1
	123 Move [X8+32], W9
	124 Call BuiltinMaterials.GetDefaultMaterial
	125 Move X8, [X21]
	126 Move X1, X31
	127 Move X8, [X8+184]
	128 Move [X8+40], X0
	129 Move X8, 0x853000
	130 Move X8, [X8+2800]
	131 Move X0, [X8]
	132 Call Shader.Find, X0
	133 Move X8, [X21]
	134 Move X23, 0x853000
	135 Move X8, [X8+184]
	136 Move [X8+24], X0
	137 Move X0, [X8+104]
	138 Move X23, [X23+2776]
	139 Move X1, [X23]
	140 Call 0x2242FB8, X0
	141 Move X8, [X21]
	142 Move X19, X0
	143 Move X8, [X8+184]
	144 Move [X8+48], X0
	145 Move X0, [X22]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X19
	151 Move X1, X31
	152 Move X2, X31
	153 Call Object.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {192}
	158 Move X8, 0x853000
	159 Move X8, [X8+2768]
	160 Move X0, [X8]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X8, 0x853000
	166 Move X8, [X8+2792]
	167 Move X0, [X8]
	168 Call Log.Error, X0
	169 Move X0, [X21]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X21]
	175 Move X8, [X0+184]
	176 Move X1, X31
	177 Move X0, [X8+128]
	178 Call Shader.Find, X0
	179 Move X8, 0x7FD000
	180 Move X8, [X8+3232]
	181 Move X19, X0
	182 Move X8, [X8]
	183 Move X0, X8
	184 Call 0x1C17F10
	185 Move X1, X19
	186 Move X2, X31
	187 Move X20, X0
	188 Call Material..ctor, X0, X1
	189 Move X0, [X21]
	190 Move X8, [X0+184]
	191 Move [X8+48], X20
	192 Move X0, [X21]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move X0, [X21]
	198 Move X8, [X0+184]
	199 Move X1, [X23]
	200 Move X0, [X8+112]
	201 Call 0x2242FB8, X0
	202 Move X8, [X21]
	203 Move X19, X0
	204 Move X8, [X8+184]
	205 Move [X8+56], X0
	206 Move X0, [X22]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X19
	212 Move X1, X31
	213 Move X2, X31
	214 Call Object.op_Equality, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {253}
	219 Move X8, 0x853000
	220 Move X8, [X8+2768]
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X8, 0x853000
	227 Move X8, [X8+2808]
	228 Move X0, [X8]
	229 Call Log.Error, X0
	230 Move X0, [X21]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X21]
	236 Move X8, [X0+184]
	237 Move X1, X31
	238 Move X0, [X8+136]
	239 Call Shader.Find, X0
	240 Move X8, 0x7FD000
	241 Move X8, [X8+3232]
	242 Move X19, X0
	243 Move X8, [X8]
	244 Move X0, X8
	245 Call 0x1C17F10
	246 Move X1, X19
	247 Move X2, X31
	248 Move X20, X0
	249 Call Material..ctor, X0, X1
	250 Move X0, [X21]
	251 Move X8, [X0+184]
	252 Move [X8+56], X20
	253 Move X0, [X21]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {259}
	257 Call 0x1C17DFC
	258 Move X0, [X21]
	259 Move X8, [X0+184]
	260 Move X1, [X23]
	261 Move X0, [X8+96]
	262 Call 0x2242FB8, X0
	263 Move X8, [X21]
	264 Move X19, X0
	265 Move X8, [X8+184]
	266 Move [X8+64], X0
	267 Move X0, [X22]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X0, X19
	273 Move X1, X31
	274 Move X2, X31
	275 Call Object.op_Equality, X0, X1
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfNotEqual {314}
	280 Move X8, 0x853000
	281 Move X8, [X8+2768]
	282 Move X0, [X8]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X8, 0x853000
	288 Move X8, [X8+2840]
	289 Move X0, [X8]
	290 Call Log.Error, X0
	291 Move X0, [X21]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {297}
	295 Call 0x1C17DFC
	296 Move X0, [X21]
	297 Move X8, [X0+184]
	298 Move X1, X31
	299 Move X0, [X8+120]
	300 Call Shader.Find, X0
	301 Move X8, 0x7FD000
	302 Move X8, [X8+3232]
	303 Move X19, X0
	304 Move X8, [X8]
	305 Move X0, X8
	306 Call 0x1C17F10
	307 Move X1, X19
	308 Move X2, X31
	309 Move X20, X0
	310 Call Material..ctor, X0, X1
	311 Move X8, [X21]
	312 Move X8, [X8+184]
	313 Move [X8+64], X20
	314 Move X8, 0x7F9000
	315 Move X8, [X8+1728]
	316 Move X0, [X8]
	317 Move X8, 0x822000
	318 Move X8, [X8+632]
	319 Move W9, [X0+224]
	320 Move X19, [X8]
	321 Compare W9, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X19
	325 Move X1, X31
	326 Call Type.GetTypeFromHandle, X0
	327 Move X8, 0x853000
	328 Move X8, [X8+2824]
	329 Move X1, X0
	330 Move X2, X31
	331 Move X8, [X8]
	332 Move X0, X8
	333 Call Resources.Load, X0, X1
	334 Move X8, [X21]
	335 Move X19, X0
	336 Move W9, [X8+224]
	337 Compare W9, 0
	338 JumpIfNotEqual {341}
	339 Move X0, X8
	340 Call 0x1C17DFC
	341 Move X20, 0x7FD000
	342 Move X20, [X20+3232]
	343 Compare X19, 0
	344 JumpIfEqual {365}
	345 Move X8, [X19]
	346 Move X1, [X20]
	347 Move W10, [X8+304]
	348 Move W9, [X1+304]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X8, [X8+200]
	351 Subtract X10, X9, 1
	352 Move X8, [X8]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X8, [X21]
	355 Move X8, [X8+184]
	356 Move [X8+80], X19
	357 Move X11, [X19]
	358 Move W12, [X11+304]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X9, [X11+200]
	361 Move X9, [X9]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X0, X19
	364 Call 0x1C181E0
	365 Move X8, [X21]
	366 Move X8, [X8+184]
	367 Move [X8+80], X19
	368 Move X0, [X8+40]
	369 Compare X0, 0
	370 JumpIfEqual {481}
	371 Move X1, X31
	372 Call Material.get_shader, X0
	373 Move X8, [X20]
	374 Move X20, X0
	375 Move X0, X8
	376 Call 0x1C17F10
	377 Move X1, X20
	378 Move X2, X31
	379 Move X19, X0
	380 Call Material..ctor, X0, X1
	381 Move X8, [X21]
	382 Move X8, [X8+184]
	383 Move [X8+88], X19
	384 Compare X19, 0
	385 JumpIfEqual {481}
	386 Move W1, 61
	387 Move X0, X19
	388 Move X2, X31
	389 Call Object.set_hideFlags, X0, X1
	390 Move X8, [X21]
	391 Move X8, [X8+184]
	392 Move X0, [X8+88]
	393 Compare X0, 0
	394 JumpIfEqual {481}
	395 Move X8, 0x853000
	396 Move X8, [X8+2816]
	397 Move X2, X31
	398 Move X1, [X8]
	399 Call Material.HasProperty, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {431}
	404 Move X0, [X21]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {410}
	408 Call 0x1C17DFC
	409 Move X0, [X21]
	410 Move X9, 0x853000
	411 Move X8, [X0+184]
	412 Move X9, [X9+2832]
	413 Move X1, X31
	414 Move X19, [X8+88]
	415 Move X0, [X9]
	416 Call Resources.Load, X0
	417 Compare X19, 0
	418 JumpIfEqual {481}
	419 Move X8, X0
	420 Compare X0, 0
	421 JumpIfEqual {427}
	422 Move X9, 0x823000
	423 Move X9, [X9+592]
	424 Move X1, [X9]
	425 Move X9, [X8]
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X0, X19
	428 Move X1, X8
	429 Move X2, X31
	430 Call Material.set_mainTexture, X0, X1
	431 Move X0, [X21]
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {437}
	435 Call 0x1C17DFC
	436 Move X0, [X21]
	437 Move X8, [X0+184]
	438 Move X0, [X8+88]
	439 Compare X0, 0
	440 JumpIfEqual {481}
	441 Move X19, 0x821000
	442 Move X19, [X19+736]
	443 Move X2, X31
	444 Move X1, [X19]
	445 Call Material.HasProperty, X0, X1
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfNotEqual {474}
	450 Move X0, [X21]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {456}
	454 Call 0x1C17DFC
	455 Move X0, [X21]
	456 Move X8, [X0+184]
	457 Move X0, [X8+88]
	458 Compare X0, 0
	459 JumpIfEqual {481}
	460 Move S2, [X8+12]
	461 Move S3, [X8+16]
	462 Move S0, [X8+4]
	463 Move S1, [X8+8]
	464 Move X1, [X19]
	465 Move X20, [X31+32]
	466 Move X19, [X31+40]
	467 Move X22, [X31+16]
	468 Move X21, [X31+24]
	469 Move X2, X31
	470 Move X30, [X31+48]
	471 Move X23, [X31+56]
	472 Call Material.SetColor, X0, X1, X2
	473 Return 
	474 Move X20, [X31+32]
	475 Move X19, [X31+40]
	476 Move X22, [X31+16]
	477 Move X21, [X31+24]
	478 Move X30, [X31+48]
	479 Move X23, [X31+56]
	480 Return 
	481 Call 0x1C17F20
	482 Move X0, X8
	483 Call 0x1C181E0

Method: System.Boolean get_geometryShadersSupported()

Disassembly:
	0x038FBD08 CSET W0, EQ
	0x038FBD0C ANDS W31, W8, W9, 0x0
	0x038FBD10 B.NE 0x38FBE34
	0x038FBD14 CBZ W10, 0x38FBE34
	0x038FBD18 CMP W8, 0x0
	0x038FBD1C CSEL W10, W9, W8, EQ
	0x038FBD20 TBNZ X10, 0x3, 0x38FBD60
	0x038FBD24 TBNZ X10, 0x2, 0x38FBD80
	0x038FBD28 TBNZ X10, 0x1, 0x38FBDA0
	0x038FBD2C FMOV S16, W31
	0x038FBD30 FMOV S17, W31
	0x038FBD34 TBZ X10, 0x0, 0x38FBDBC
	0x038FBD38 FSUB S16, S7, S5
	0x038FBD3C FSUB S17, S0, S4
	0x038FBD40 FSUB S18, S6, S4
	0x038FBD44 FMUL S16, S16, S17
	0x038FBD48 CMP W10, W8
	0x038FBD4C FDIV S16, S16, S18
	0x038FBD50 FADD S16, S5, S16
	0x038FBD54 CSET W10, EQ
	0x038FBD58 MOV V17.16B, V0.16B
	0x038FBD5C B 0x38FBDD4
	0x038FBD60 FSUB S16, S6, S4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1898]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1898], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move W0, [X8+32]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_defaultMaterial()

Disassembly:
	0x038FBD64 FSUB S17, S3, S5
	0x038FBD68 FMUL S16, S17, S16
	0x038FBD6C FSUB S17, S7, S5
	0x038FBD70 FDIV S16, S16, S17
	0x038FBD74 FADD S17, S4, S16
	0x038FBD78 MOV V16.16B, V3.16B
	0x038FBD7C B 0x38FBDBC
	0x038FBD80 FSUB S16, S6, S4
	0x038FBD84 FSUB S17, S1, S5
	0x038FBD88 FMUL S16, S17, S16
	0x038FBD8C FSUB S17, S7, S5
	0x038FBD90 FDIV S16, S16, S17
	0x038FBD94 FADD S17, S4, S16
	0x038FBD98 MOV V16.16B, V1.16B
	0x038FBD9C B 0x38FBDBC
	0x038FBDA0 FSUB S16, S7, S5
	0x038FBDA4 FSUB S17, S2, S4
	0x038FBDA8 FMUL S16, S16, S17
	0x038FBDAC FSUB S17, S6, S4
	0x038FBDB0 FDIV S16, S16, S17
	0x038FBDB4 FADD S16, S5, S16
	0x038FBDB8 MOV V17.16B, V2.16B
	0x038FBDBC CMP W10, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1899]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1899], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+40]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Shader get_selectionPickerShader()

Disassembly:
	0x038FBDC0 CSET W10, EQ
	0x038FBDC4 FCMP S0, S17
	0x038FBDC8 B.LE 0x38FBDD4
	0x038FBDCC MOVZ W11, 0x1
	0x038FBDD0 B 0x38FBDE8
	0x038FBDD4 FCMP S2, S17
	0x038FBDD8 B.PL 0x38FBDE4
	0x038FBDDC MOVZ W11, 0x2
	0x038FBDE0 B 0x38FBDE8
	0x038FBDE4 MOV W11, W31
	0x038FBDE8 ORR W13, W11, 0x8
	0x038FBDEC FCMP S3, S16
	0x038FBDF0 ORR W12, W11, 0x4
	0x038FBDF4 CSEL W11, W13, W11, MI
	0x038FBDF8 FCMP S1, S16
	0x038FBDFC CSEL W11, W12, W11, GT
	0x038FBE00 CMP W10, 0x0
	0x038FBE04 CSEL W9, W9, W11, NE
	0x038FBE08 CSEL W8, W11, W8, NE
	0x038FBE0C ORR W10, W8, W9, 0x0
	0x038FBE10 FCSEL S7, S7, S16, NE
	0x038FBE14 FCSEL S6, S6, S17, NE
	0x038FBE18 FCSEL S5, S16, S5, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1900]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1900], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_facePickerMaterial()

Disassembly:
	0x038FBE1C FCSEL S4, S17, S4, NE
	0x038FBE20 CMP W10, 0x0
	0x038FBE24 CSET W0, EQ
	0x038FBE28 ANDS W31, W8, W9, 0x0
	0x038FBE2C B.NE 0x38FBE34
	0x038FBE30 CBNZ W10, 0x38FBD18
	0x038FBE34 RET
	0x038FBE38 STP X30, X21, [X31 - 0x20]!
	0x038FBE3C STP X20, X19, [X31 + 0x10]
	0x038FBE40 ADRP X20, 0xAE6000
	0x038FBE44 LDRB W8, [X20 + 0x77C]
	0x038FBE48 MOV X19, X0
	0x038FBE4C TBNZ X8, 0x0, 0x38FBE88
	0x038FBE50 ADRP X0, 0x852000
	0x038FBE54 LDR X0, [X0 + 0xAC8]
	0x038FBE58 BL 0x1C16CF4
	0x038FBE5C ADRP X0, 0x7FA000
	0x038FBE60 LDR X0, [X0 + 0x160]
	0x038FBE64 BL 0x1C16CF4
	0x038FBE68 ADRP X0, 0x852000
	0x038FBE6C LDR X0, [X0 + 0xBD0]
	0x038FBE70 BL 0x1C16CF4
	0x038FBE74 ADRP X0, 0x7F8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1901]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1901], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+48]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_vertexPickerMaterial()

Disassembly:
	0x038FBE78 LDR X0, [X0 + 0x598]
	0x038FBE7C BL 0x1C16CF4
	0x038FBE80 MOVZ W8, 0x1
	0x038FBE84 STRB W8, [X20 + 0x77C]
	0x038FBE88 MOV X0, X19
	0x038FBE8C MOV X1, X31
	0x038FBE90 BL 0x3C32ECC
	0x038FBE94 CBZ X0, 0x38FBF40
	0x038FBE98 ADRP X8, 0x852000
	0x038FBE9C LDR X8, [X8 + 0xBD0]
	0x038FBEA0 ADRP X20, 0x7F8000
	0x038FBEA4 LDR X1, [X8]
	0x038FBEA8 LDR X20, [X20 + 0x598]
	0x038FBEAC BL 0x21E52E4
	0x038FBEB0 LDR X8, [X20]
	0x038FBEB4 MOV X20, X0
	0x038FBEB8 LDR W9, [X8 + 0xE0]
	0x038FBEBC CBNZ W9, 0x38FBEC8
	0x038FBEC0 MOV X0, X8
	0x038FBEC4 BL 0x1C16DFC
	0x038FBEC8 MOV X0, X20
	0x038FBECC MOV X1, X31
	0x038FBED0 BL 0x3C38948

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1902]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1902], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+56]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_edgePickerMaterial()

Disassembly:
	0x038FBED4 TBNZ X0, 0x0, 0x38FBEFC
	0x038FBED8 MOV X0, X19
	0x038FBEDC MOV X1, X31
	0x038FBEE0 BL 0x3C32ECC
	0x038FBEE4 CBZ X0, 0x38FBF40
	0x038FBEE8 ADRP X8, 0x7FA000
	0x038FBEEC LDR X8, [X8 + 0x160]
	0x038FBEF0 LDR X1, [X8]
	0x038FBEF4 BL 0x21E51FC
	0x038FBEF8 MOV X20, X0
	0x038FBEFC CBZ X20, 0x38FBF40
	0x038FBF00 ADRP X21, 0x852000
	0x038FBF04 LDR X21, [X21 + 0xAC8]
	0x038FBF08 MOV X0, X20
	0x038FBF0C MOV W1, W31
	0x038FBF10 MOV X2, X31
	0x038FBF14 BL 0x3C8F7C8
	0x038FBF18 LDR X0, [X21]
	0x038FBF1C LDR W8, [X0 + 0xE0]
	0x038FBF20 CBNZ W8, 0x38FBF28
	0x038FBF24 BL 0x1C16DFC
	0x038FBF28 BL 0x38FB038
	0x038FBF2C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE7000
	005 Move X19, 0x853000
	006 Move W8, [X20+1903]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1903], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+64]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_triggerMaterial()

Disassembly:
	0x038FBF30 MOV X0, X19
	0x038FBF34 LDP X20, X19, [X31 + 0x10]
	0x038FBF38 LDP X30, X21, [X31], #0x20
	0x038FBF3C B 0x38FBF44
	0x038FBF40 BL 0x1C16F20
	0x038FBF44 STP X30, X23, [X31 - 0x30]!
	0x038FBF48 STP X22, X21, [X31 + 0x10]
	0x038FBF4C STP X20, X19, [X31 + 0x20]
	0x038FBF50 ADRP X23, 0xAE6000
	0x038FBF54 ADRP X22, 0x824000
	0x038FBF58 ADRP X21, 0x7F8000
	0x038FBF5C LDRB W8, [X23 + 0x7AF]
	0x038FBF60 LDR X22, [X22 + 0x5A0]
	0x038FBF64 LDR X21, [X21 + 0x598]
	0x038FBF68 MOV X19, X1
	0x038FBF6C MOV X20, X0
	0x038FBF70 TBNZ X8, 0x0, 0x38FBFA0
	0x038FBF74 ADRP X0, 0x824000
	0x038FBF78 LDR X0, [X0 + 0x5A0]
	0x038FBF7C BL 0x1C16CF4
	0x038FBF80 ADRP X0, 0x7FF000
	0x038FBF84 LDR X0, [X0 + 0x6F8]
	0x038FBF88 BL 0x1C16CF4
	0x038FBF8C ADRP X0, 0x7F8000
	0x038FBF90 LDR X0, [X0 + 0x598]
	0x038FBF94 BL 0x1C16CF4
	0x038FBF98 MOVZ W8, 0x1
	0x038FBF9C STRB W8, [X23 + 0x7AF]
	0x038FBFA0 LDR X1, [X22]
	0x038FBFA4 MOV X0, X20
	0x038FBFA8 BL 0x21A3894
	0x038FBFAC LDR X8, [X21]
	0x038FBFB0 MOV X21, X0
	0x038FBFB4 LDR W9, [X8 + 0xE0]
	0x038FBFB8 CBNZ W9, 0x38FBFC4
	0x038FBFBC MOV X0, X8
	0x038FBFC0 BL 0x1C16DFC
	0x038FBFC4 MOV X0, X21
	0x038FBFC8 MOV X1, X31
	0x038FBFCC BL 0x3C38948
	0x038FBFD0 TBZ X0, 0x0, 0x38FBFE8
	0x038FBFD4 LDR X1, [X22]
	0x038FBFD8 MOV X0, X20
	0x038FBFDC BL 0x21A3894
	0x038FBFE0 CBNZ X0, 0x38FC00C
	0x038FBFE4 B 0x38FC024
	0x038FBFE8 MOV X0, X20
	0x038FBFEC MOV X1, X31
	0x038FBFF0 BL 0x3C32ECC
	0x038FBFF4 CBZ X0, 0x38FC024
	0x038FBFF8 ADRP X8, 0x7FF000
	0x038FBFFC LDR X8, [X8 + 0x6F8]
	0x038FC000 LDR X1, [X8]
	0x038FC004 BL 0x21E51FC
	0x038FC008 CBZ X0, 0x38FC024
	0x038FC00C MOV X1, X19
	0x038FC010 LDP X20, X19, [X31 + 0x20]
	0x038FC014 LDP X22, X21, [X31 + 0x10]
	0x038FC018 MOV X2, X31
	0x038FC01C LDP X30, X23, [X31], #0x30
	0x038FC020 B 0x3C134D8
	0x038FC024 BL 0x1C16F20
	0x038FC028 STR X30, [X31 - 0x30]!
	0x038FC02C STP X22, X21, [X31 + 0x10]
	0x038FC030 STP X20, X19, [X31 + 0x20]
	0x038FC034 ADRP X21, 0xAE5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE7000
	006 Move X19, 0x853000
	007 Move W8, [X20+1904]
	008 Move X19, [X19+2760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x853000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0x822000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x7FD000
	020 Move X0, [X0+3232]
	021 Call 0x1C17CF4
	022 Move X0, 0x7F9000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x853000
	026 Move X0, [X0+2856]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1904], W8
	030 Move X0, [X19]
	031 Move X19, 0x822000
	032 Move X21, 0x7F9000
	033 Move W8, [X0+224]
	034 Move X19, [X19+632]
	035 Move X21, [X21+1728]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X20, 0x853000
	040 Move X20, [X20+2856]
	041 Call BuiltinMaterials.Init
	042 Move X0, [X21]
	043 Move X19, [X19]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X8, [X20]
	052 Move X1, X0
	053 Move X2, X31
	054 Move X0, X8
	055 Call Resources.Load, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {69}
	058 Move X9, 0x7FD000
	059 Move X9, [X9+3232]
	060 Move X8, [X0]
	061 Move X1, [X9]
	062 Move W10, [X8+304]
	063 Move W9, [X1+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C181E0

Method: UnityEngine.Material get_colliderMaterial()

Disassembly:
	0x038FC038 ADRP X22, 0x823000
	0x038FC03C ADRP X20, 0x7F7000
	0x038FC040 LDRB W8, [X21 + 0x77D]
	0x038FC044 LDR X22, [X22 + 0x5A0]
	0x038FC048 LDR X20, [X20 + 0x598]
	0x038FC04C MOV X19, X0
	0x038FC050 TBNZ X8, 0x0, 0x38FC074
	0x038FC054 ADRP X0, 0x823000
	0x038FC058 LDR X0, [X0 + 0x5A0]
	0x038FC05C BL 0x1C16CF4
	0x038FC060 ADRP X0, 0x7F7000
	0x038FC064 LDR X0, [X0 + 0x598]
	0x038FC068 BL 0x1C16CF4
	0x038FC06C MOVZ W8, 0x1
	0x038FC070 STRB W8, [X21 + 0x77D]
	0x038FC074 LDR X1, [X22]
	0x038FC078 MOV X0, X19
	0x038FC07C BL 0x21A3894
	0x038FC080 LDR X8, [X20]
	0x038FC084 MOV X19, X0
	0x038FC088 LDR W9, [X8 + 0xE0]
	0x038FC08C CBNZ W9, 0x38FC098
	0x038FC090 MOV X0, X8
	0x038FC094 BL 0x1C16DFC
	0x038FC098 MOV X0, X19
	0x038FC09C MOV X1, X31
	0x038FC0A0 MOV X2, X31
	0x038FC0A4 BL 0x3C354F8
	0x038FC0A8 TBZ X0, 0x0, 0x38FC0CC
	0x038FC0AC CBZ X19, 0x38FC0DC
	0x038FC0B0 MOV X0, X19
	0x038FC0B4 LDP X20, X19, [X31 + 0x20]
	0x038FC0B8 LDP X22, X21, [X31 + 0x10]
	0x038FC0BC MOV W1, W31
	0x038FC0C0 MOV X2, X31
	0x038FC0C4 LDR X30, [X31], #0x30
	0x038FC0C8 B 0x3C13034
	0x038FC0CC LDP X20, X19, [X31 + 0x20]
	0x038FC0D0 LDP X22, X21, [X31 + 0x10]
	0x038FC0D4 LDR X30, [X31], #0x30
	0x038FC0D8 RET
	0x038FC0DC BL 0x1C16F20
	0x038FC0E0 STR X30, [X31 - 0x30]!
	0x038FC0E4 STP X22, X21, [X31 + 0x10]
	0x038FC0E8 STP X20, X19, [X31 + 0x20]
	0x038FC0EC ADRP X21, 0xAE5000
	0x038FC0F0 ADRP X22, 0x823000
	0x038FC0F4 ADRP X20, 0x7F7000
	0x038FC0F8 LDRB W8, [X21 + 0x77E]
	0x038FC0FC LDR X22, [X22 + 0x5A0]
	0x038FC100 LDR X20, [X20 + 0x598]
	0x038FC104 MOV X19, X0
	0x038FC108 TBNZ X8, 0x0, 0x38FC12C
	0x038FC10C ADRP X0, 0x823000
	0x038FC110 LDR X0, [X0 + 0x5A0]
	0x038FC114 BL 0x1C16CF4
	0x038FC118 ADRP X0, 0x7F7000
	0x038FC11C LDR X0, [X0 + 0x598]
	0x038FC120 BL 0x1C16CF4
	0x038FC124 MOVZ W8, 0x1
	0x038FC128 STRB W8, [X21 + 0x77E]
	0x038FC12C LDR X1, [X22]
	0x038FC130 MOV X0, X19
	0x038FC134 BL 0x21A3894
	0x038FC138 LDR X8, [X20]
	0x038FC13C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE6000
	006 Move X19, 0x852000
	007 Move W8, [X20+1905]
	008 Move X19, [X19+2760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x852000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0x821000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x7FC000
	020 Move X0, [X0+3232]
	021 Call 0x1C17CF4
	022 Move X0, 0x7F8000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x852000
	026 Move X0, [X0+2864]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1905], W8
	030 Move X0, [X19]
	031 Move X19, 0x821000
	032 Move X21, 0x7F8000
	033 Move W8, [X0+224]
	034 Move X19, [X19+632]
	035 Move X21, [X21+1728]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X20, 0x852000
	040 Move X20, [X20+2864]
	041 Call BuiltinMaterials.Init
	042 Move X0, [X21]
	043 Move X19, [X19]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X8, [X20]
	052 Move X1, X0
	053 Move X2, X31
	054 Move X0, X8
	055 Call Resources.Load, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {69}
	058 Move X9, 0x7FC000
	059 Move X9, [X9+3232]
	060 Move X8, [X0]
	061 Move X1, [X9]
	062 Move W10, [X8+304]
	063 Move W9, [X1+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C181E0

Method: UnityEngine.Material get_noDrawMaterial()

Disassembly:
	0x038FC140 LDR W9, [X8 + 0xE0]
	0x038FC144 CBNZ W9, 0x38FC150
	0x038FC148 MOV X0, X8
	0x038FC14C BL 0x1C16DFC
	0x038FC150 MOV X0, X19
	0x038FC154 MOV X1, X31
	0x038FC158 MOV X2, X31
	0x038FC15C BL 0x3C354F8
	0x038FC160 TBZ X0, 0x0, 0x38FC184
	0x038FC164 CBZ X19, 0x38FC194
	0x038FC168 MOV X0, X19
	0x038FC16C LDP X20, X19, [X31 + 0x20]
	0x038FC170 LDP X22, X21, [X31 + 0x10]
	0x038FC174 MOV W1, W31
	0x038FC178 MOV X2, X31
	0x038FC17C LDR X30, [X31], #0x30
	0x038FC180 B 0x3C13034
	0x038FC184 LDP X20, X19, [X31 + 0x20]
	0x038FC188 LDP X22, X21, [X31 + 0x10]
	0x038FC18C LDR X30, [X31], #0x30
	0x038FC190 RET
	0x038FC194 BL 0x1C16F20
	0x038FC198 MOVZ W8, 0x1
	0x038FC19C MOV X1, X31
	0x038FC1A0 STRB W8, [X0 + 0x20]
	0x038FC1A4 B 0x3C36C30
	0x038FC1A8 MOVZ W8, 0x1
	0x038FC1AC MOV X1, X31
	0x038FC1B0 STRB W8, [X0 + 0x20]
	0x038FC1B4 B 0x3C36C30
	0x038FC1B8 LDP S0, S1, [X0 + 0x18]
	0x038FC1BC LDP S2, S3, [X0 + 0x20]
	0x038FC1C0 RET
	0x038FC1C4 STP S0, S1, [X0 + 0x18]
	0x038FC1C8 STP S2, S3, [X0 + 0x20]
	0x038FC1CC RET
	0x038FC1D0 STR X30, [X31 - 0x30]!
	0x038FC1D4 STP X22, X21, [X31 + 0x10]
	0x038FC1D8 STP X20, X19, [X31 + 0x20]
	0x038FC1DC ADRP X22, 0xAE5000
	0x038FC1E0 ADRP X21, 0x851000
	0x038FC1E4 ADRP X20, 0x851000
	0x038FC1E8 LDRB W8, [X22 + 0x77F]
	0x038FC1EC LDR X21, [X21 + 0xBD8]
	0x038FC1F0 LDR X20, [X20 + 0xBE0]
	0x038FC1F4 MOV X19, X0
	0x038FC1F8 TBNZ X8, 0x0, 0x38FC21C
	0x038FC1FC ADRP X0, 0x851000
	0x038FC200 LDR X0, [X0 + 0xBE0]
	0x038FC204 BL 0x1C16CF4
	0x038FC208 ADRP X0, 0x851000
	0x038FC20C LDR X0, [X0 + 0xBD8]
	0x038FC210 BL 0x1C16CF4
	0x038FC214 MOVZ W8, 0x1
	0x038FC218 STRB W8, [X22 + 0x77F]
	0x038FC21C LDR X0, [X21]
	0x038FC220 LDR X19, [X19 + 0x28]
	0x038FC224 BL 0x1C16F10
	0x038FC228 LDR X2, [X20]
	0x038FC22C MOV X1, X19
	0x038FC230 MOV X20, X0
	0x038FC234 BL 0x2525AA8
	0x038FC238 MOV X0, X20
	0x038FC23C LDP X20, X19, [X31 + 0x20]
	0x038FC240 LDP X22, X21, [X31 + 0x10]
	0x038FC244 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE6000
	006 Move X19, 0x852000
	007 Move W8, [X20+1906]
	008 Move X19, [X19+2760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x852000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0x821000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x7FC000
	020 Move X0, [X0+3232]
	021 Call 0x1C17CF4
	022 Move X0, 0x7F8000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x852000
	026 Move X0, [X0+2872]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1906], W8
	030 Move X0, [X19]
	031 Move X19, 0x821000
	032 Move X21, 0x7F8000
	033 Move W8, [X0+224]
	034 Move X19, [X19+632]
	035 Move X21, [X21+1728]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X20, 0x852000
	040 Move X20, [X20+2872]
	041 Call BuiltinMaterials.Init
	042 Move X0, [X21]
	043 Move X19, [X19]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Move X8, [X20]
	052 Move X1, X0
	053 Move X2, X31
	054 Move X0, X8
	055 Call Resources.Load, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {69}
	058 Move X9, 0x7FC000
	059 Move X9, [X9+3232]
	060 Move X8, [X0]
	061 Move X1, [X9]
	062 Move W10, [X8+304]
	063 Move W9, [X1+304]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X8+200]
	066 Add X8, X8, X9
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C181E0

Method: UnityEngine.Material GetLegacyDiffuse()

Disassembly:
	0x038FC248 RET
	0x038FC24C STP X30, X21, [X31 - 0x20]!
	0x038FC250 STP X20, X19, [X31 + 0x10]
	0x038FC254 ADRP X21, 0xAE5000
	0x038FC258 LDRB W8, [X21 + 0x780]
	0x038FC25C MOV X20, X1
	0x038FC260 MOV X19, X0
	0x038FC264 TBNZ X8, 0x0, 0x38FC27C
	0x038FC268 ADRP X0, 0x851000
	0x038FC26C LDR X0, [X0 + 0xBE8]
	0x038FC270 BL 0x1C16CF4
	0x038FC274 MOVZ W8, 0x1
	0x038FC278 STRB W8, [X21 + 0x780]
	0x038FC27C CBZ X20, 0x38FC2A4
	0x038FC280 ADRP X8, 0x851000
	0x038FC284 LDR X8, [X8 + 0xBE8]
	0x038FC288 MOV X0, X20
	0x038FC28C LDR X1, [X8]
	0x038FC290 BL 0x21D7690
	0x038FC294 STR X0, [X19 + 0x28]
	0x038FC298 LDP X20, X19, [X31 + 0x10]
	0x038FC29C LDP X30, X21, [X31], #0x20
	0x038FC2A0 RET
	0x038FC2A4 ADRP X0, 0x7FC000
	0x038FC2A8 LDR X0, [X0 + 0x528]
	0x038FC2AC BL 0x1C16D08
	0x038FC2B0 BL 0x1C16F10
	0x038FC2B4 MOV X19, X0
	0x038FC2B8 ADRP X0, 0x851000
	0x038FC2BC LDR X0, [X0 + 0xBF0]
	0x038FC2C0 BL 0x1C16D08
	0x038FC2C4 MOV X1, X0
	0x038FC2C8 MOV X0, X19
	0x038FC2CC MOV X2, X31
	0x038FC2D0 BL 0x330E100
	0x038FC2D4 ADRP X0, 0x851000
	0x038FC2D8 LDR X0, [X0 + 0xBF8]
	0x038FC2DC BL 0x1C16D08
	0x038FC2E0 MOV X1, X0
	0x038FC2E4 MOV X0, X19
	0x038FC2E8 BL 0x1C16DEC
	0x038FC2EC STR X30, [X31 - 0x30]!
	0x038FC2F0 STP X22, X21, [X31 + 0x10]
	0x038FC2F4 STP X20, X19, [X31 + 0x20]
	0x038FC2F8 ADRP X21, 0xAE5000
	0x038FC2FC ADRP X22, 0x851000
	0x038FC300 ADRP X20, 0x851000
	0x038FC304 LDRB W8, [X21 + 0x781]
	0x038FC308 LDR X22, [X22 + 0xC00]
	0x038FC30C LDR X20, [X20 + 0xC08]
	0x038FC310 MOV X19, X0
	0x038FC314 TBNZ X8, 0x0, 0x38FC344
	0x038FC318 ADRP X0, 0x851000
	0x038FC31C LDR X0, [X0 + 0xC10]
	0x038FC320 BL 0x1C16CF4
	0x038FC324 ADRP X0, 0x851000
	0x038FC328 LDR X0, [X0 + 0xC08]
	0x038FC32C BL 0x1C16CF4
	0x038FC330 ADRP X0, 0x851000
	0x038FC334 LDR X0, [X0 + 0xC00]
	0x038FC338 BL 0x1C16CF4
	0x038FC33C MOVZ W8, 0x1
	0x038FC340 STRB W8, [X21 + 0x781]
	0x038FC344 LDR X0, [X22]
	0x038FC348 BL 0x1C16F10
	0x038FC34C LDR X1, [X20]
	0x038FC350 MOV X20, X0
	0x038FC354 BL 0x2F6CBF8
	0x038FC358 CBZ X20, 0x38FCA7C
	0x038FC35C ADRP X21, 0x851000
	0x038FC360 LDR X21, [X21 + 0xC10]
	0x038FC364 LDR W9, [X20 + 0x1C]
	0x038FC368 LDR X8, [X20 + 0x10]
	0x038FC36C LDR X10, [X21]
	0x038FC370 ADD W9, W9, 0x1
	0x038FC374 STR W9, [X20 + 0x1C]
	0x038FC378 CBZ X8, 0x38FCA7C
	0x038FC37C LDRSW X9, [X20 + 0x18]
	0x038FC380 LDR W11, [X8 + 0x18]
	0x038FC384 CMP W9, W11
	0x038FC388 B.CS 0x38FC3A8
	0x038FC38C ADRP X10, 0xFFFFFFFFFD1F0000
	0x038FC390 LDR V0, [X10 + 0x8F]
	0x038FC394 ADD W10, W9, 0x1
	0x038FC398 ADD X8, X8, X9, 0x4, LSL
	0x038FC39C STR W10, [X20 + 0x18]
	0x038FC3A0 STR V0, [X8 + 0x2]
	0x038FC3A4 B 0x38FC3D4
	0x038FC3A8 LDR X8, [X10 + 0x20]
	0x038FC3AC ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC3B0 LDR V2, [X9 + 0x160]
	0x038FC3B4 FMOV S0, W31
	0x038FC3B8 LDR X8, [X8 + 0xC0]
	0x038FC3BC FMOV S3, 1
	0x038FC3C0 MOV X0, X20
	0x038FC3C4 LDR X1, [X8 + 0x70]
	0x038FC3C8 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC3CC LDR V1, [X8 + 0x244]
	0x038FC3D0 BL 0x2F6D428
	0x038FC3D4 LDR W9, [X20 + 0x1C]
	0x038FC3D8 LDR X8, [X20 + 0x10]
	0x038FC3DC LDR X10, [X21]
	0x038FC3E0 ADD W9, W9, 0x1
	0x038FC3E4 STR W9, [X20 + 0x1C]
	0x038FC3E8 CBZ X8, 0x38FCA7C
	0x038FC3EC LDRSW X9, [X20 + 0x18]
	0x038FC3F0 LDR W11, [X8 + 0x18]
	0x038FC3F4 CMP W9, W11
	0x038FC3F8 B.CS 0x38FC418
	0x038FC3FC ADRP X10, 0xFFFFFFFFFD1EF000
	0x038FC400 LDR V0, [X10 + 0x90]
	0x038FC404 ADD W10, W9, 0x1
	0x038FC408 ADD X8, X8, X9, 0x4, LSL
	0x038FC40C STR W10, [X20 + 0x18]
	0x038FC410 STR V0, [X8 + 0x2]
	0x038FC414 B 0x38FC444
	0x038FC418 LDR X8, [X10 + 0x20]
	0x038FC41C ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC420 LDR V2, [X9 + 0x3E4]
	0x038FC424 FMOV S0, W31
	0x038FC428 LDR X8, [X8 + 0xC0]
	0x038FC42C FMOV S3, 1
	0x038FC430 MOV X0, X20
	0x038FC434 LDR X1, [X8 + 0x70]
	0x038FC438 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC43C LDR V1, [X8 + 0x458]
	0x038FC440 BL 0x2F6D428
	0x038FC444 LDR W9, [X20 + 0x1C]
	0x038FC448 LDR X8, [X20 + 0x10]
	0x038FC44C LDR X10, [X21]
	0x038FC450 ADD W9, W9, 0x1
	0x038FC454 STR W9, [X20 + 0x1C]
	0x038FC458 CBZ X8, 0x38FCA7C
	0x038FC45C LDRSW X9, [X20 + 0x18]
	0x038FC460 LDR W11, [X8 + 0x18]
	0x038FC464 CMP W9, W11
	0x038FC468 B.CS 0x38FC488
	0x038FC46C ADRP X10, 0xFFFFFFFFFD1F1000
	0x038FC470 LDR V0, [X10 + 0x1D]
	0x038FC474 ADD W10, W9, 0x1
	0x038FC478 ADD X8, X8, X9, 0x4, LSL
	0x038FC47C STR W10, [X20 + 0x18]
	0x038FC480 STR V0, [X8 + 0x2]
	0x038FC484 B 0x38FC4B4
	0x038FC488 LDR X8, [X10 + 0x20]
	0x038FC48C ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC490 LDR V1, [X9 + 0x3E8]
	0x038FC494 FMOV S2, 1
	0x038FC498 LDR X8, [X8 + 0xC0]
	0x038FC49C FMOV S3, 1
	0x038FC4A0 MOV X0, X20
	0x038FC4A4 LDR X1, [X8 + 0x70]
	0x038FC4A8 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC4AC LDR V0, [X8 + 0x3A8]
	0x038FC4B0 BL 0x2F6D428
	0x038FC4B4 LDR W9, [X20 + 0x1C]
	0x038FC4B8 LDR X8, [X20 + 0x10]
	0x038FC4BC LDR X10, [X21]
	0x038FC4C0 ADD W9, W9, 0x1
	0x038FC4C4 STR W9, [X20 + 0x1C]
	0x038FC4C8 CBZ X8, 0x38FCA7C
	0x038FC4CC LDRSW X9, [X20 + 0x18]
	0x038FC4D0 LDR W11, [X8 + 0x18]
	0x038FC4D4 CMP W9, W11
	0x038FC4D8 B.CS 0x38FC4F8
	0x038FC4DC ADRP X10, 0xFFFFFFFFFD1F1000
	0x038FC4E0 LDR V0, [X10 + 0x35]
	0x038FC4E4 ADD W10, W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xAE6000
	007 Move X21, 0x852000
	008 Move W8, [X19+1907]
	009 Move X21, [X21+2760]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x852000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0x7FF000
	018 Move X0, [X0+1920]
	019 Call 0x1C17CF4
	020 Move X0, 0x821000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0x7FC000
	024 Move X0, [X0+3232]
	025 Call 0x1C17CF4
	026 Move X0, 0x7F8000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x7F8000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x852000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1907], W8
	037 Move X0, [X21]
	038 Move X22, 0x7F8000
	039 Move W8, [X0+224]
	040 Move X22, [X22+1432]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Call BuiltinMaterials.Init
	045 Move X8, [X21]
	046 Move X0, [X22]
	047 Move X8, [X8+184]
	048 Move W9, [X0+224]
	049 Move X19, [X8+72]
	050 Compare W9, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X19
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {181}
	061 Move X8, 0x7F8000
	062 Move X8, [X8+1728]
	063 Move X0, [X8]
	064 Move X8, 0x821000
	065 Move X8, [X8+632]
	066 Move W9, [X0+224]
	067 Move X19, [X8]
	068 Compare W9, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X19
	072 Move X1, X31
	073 Call Type.GetTypeFromHandle, X0
	074 Compare X0, 0
	075 JumpIfEqual {195}
	076 Move X8, 0x852000
	077 Move X8, [X8+2880]
	078 Move W2, 56
	079 Move X3, X31
	080 Move X1, [X8]
	081 Call Type.GetMethod, X0, X1, X2
	082 Move X1, X31
	083 Move X2, X31
	084 Move X19, X0
	085 Call MethodInfo.op_Inequality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {112}
	090 Compare X19, 0
	091 JumpIfEqual {195}
	092 Move X0, X19
	093 Move X1, X31
	094 Move X2, X31
	095 Move X3, X31
	096 Call MethodBase.Invoke, X0, X1, X2
	097 Move X8, [X21]
	098 Move X19, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfEqual {113}
	102 Compare X19, 0
	103 JumpIfEqual {117}
	104 Move X8, 0x7FC000
	105 Move X8, [X8+3232]
	106 Move X9, [X19]
	107 Move X8, [X8]
	108 Move W11, [X9+304]
	109 Move W10, [X8+304]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, X31
	112 Move X0, [X21]
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Compare X19, 0
	116 JumpIfNotEqual {104}
	117 Move X0, [X21]
	118 Move X8, [X0+184]
	119 Move [X8+72], X31
	120 Move X9, [X9+200]
	121 Add X9, X9, X10
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 Move X0, [X21]
	126 Move X9, [X0+184]
	127 Move [X9+72], X8
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X21]
	133 Move X8, [X22]
	134 Move X9, [X0+184]
	135 Move W10, [X8+224]
	136 Move X19, [X9+72]
	137 Compare W10, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X0, X19
	142 Move X1, X31
	143 Move X2, X31
	144 Call Object.op_Equality, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {181}
	149 Move W0, 3
	150 Move X1, X31
	151 Call GameObject.CreatePrimitive, X0
	152 Compare X0, 0
	153 JumpIfEqual {195}
	154 Move X8, 0x7FF000
	155 Move X8, [X8+1920]
	156 Move X19, X0
	157 Move X1, [X8]
	158 Call 0x21E62E4, X0
	159 Compare X0, 0
	160 JumpIfEqual {195}
	161 Move X1, X31
	162 Call Renderer.get_sharedMaterial, X0
	163 Move X8, [X21]
	164 Move X20, X0
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {171}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X8, [X21]
	171 Move X8, [X8+184]
	172 Move [X8+72], X20
	173 Move X0, [X22]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move X0, X19
	179 Move X1, X31
	180 Call Object.DestroyImmediate, X0
	181 Move X0, [X21]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X21]
	187 Move X8, [X0+184]
	188 Move X20, [X31+32]
	189 Move X19, [X31+40]
	190 Move X22, [X31+16]
	191 Move X21, [X31+24]
	192 Move X0, [X8+72]
	193 Move X30, [X31+48]
	194 Return X0
	195 Call 0x1C17F20

Method: UnityEngine.Material GetDefaultMaterial()

Disassembly:
	0x038FBA98 LDP X20, X19, [X31 + 0x50]
	0x038FBA9C LDP X22, X21, [X31 + 0x40]
	0x038FBAA0 LDP X24, X23, [X31 + 0x30]
	0x038FBAA4 LDR X8, [X8 + 0xC0]
	0x038FBAA8 LDP X26, X25, [X31 + 0x20]
	0x038FBAAC LDP X28, X27, [X31 + 0x10]
	0x038FBAB0 LDR X2, [X8 + 0x70]
	0x038FBAB4 LDP X29, X30, [X31], #0x60
	0x038FBAB8 B 0x301BF90
	0x038FBABC BL 0x1C16F20
	0x038FBAC0 BL 0x1C16F28
	0x038FBAC4 STR X30, [X31 - 0x30]!
	0x038FBAC8 STP X22, X21, [X31 + 0x10]
	0x038FBACC STP X20, X19, [X31 + 0x20]
	0x038FBAD0 ADRP X22, 0xAE6000
	0x038FBAD4 ADRP X21, 0x800000
	0x038FBAD8 LDRB W8, [X22 + 0x77B]
	0x038FBADC LDR X21, [X21 + 0x600]
	0x038FBAE0 MOV X19, X2
	0x038FBAE4 MOV X20, X1
	0x038FBAE8 TBNZ X8, 0x0, 0x38FBB30
	0x038FBAEC ADRP X0, 0x852000
	0x038FBAF0 LDR X0, [X0 + 0xBB0]
	0x038FBAF4 BL 0x1C16CF4
	0x038FBAF8 ADRP X0, 0x800000
	0x038FBAFC LDR X0, [X0 + 0x600]
	0x038FBB00 BL 0x1C16CF4
	0x038FBB04 ADRP X0, 0x852000
	0x038FBB08 LDR X0, [X0 + 0xBB8]
	0x038FBB0C BL 0x1C16CF4
	0x038FBB10 ADRP X0, 0x852000
	0x038FBB14 LDR X0, [X0 + 0xBC0]
	0x038FBB18 BL 0x1C16CF4
	0x038FBB1C ADRP X0, 0x852000
	0x038FBB20 LDR X0, [X0 + 0xBC8]
	0x038FBB24 BL 0x1C16CF4
	0x038FBB28 MOVZ W8, 0x1
	0x038FBB2C STRB W8, [X22 + 0x77B]
	0x038FBB30 LDR X0, [X21]
	0x038FBB34 ADRP X22, 0x852000
	0x038FBB38 ADRP X21, 0x852000
	0x038FBB3C LDR W8, [X0 + 0xE0]
	0x038FBB40 LDR X22, [X22 + 0xBC0]
	0x038FBB44 LDR X21, [X21 + 0xBC8]
	0x038FBB48 CBNZ W8, 0x38FBB50
	0x038FBB4C BL 0x1C16DFC
	0x038FBB50 LDR X1, [X22]
	0x038FBB54 MOV X0, X20
	0x038FBB58 MOV X2, X31
	0x038FBB5C BL 0x3632B2C
	0x038FBB60 LDR X1, [X21]
	0x038FBB64 MOV X21, X0
	0x038FBB68 MOV X0, X20
	0x038FBB6C MOV X2, X31
	0x038FBB70 BL 0x3632B2C
	0x038FBB74 CBZ X21, 0x38FBC28
	0x038FBB78 MOV X20, X0
	0x038FBB7C MOV X0, X21
	0x038FBB80 MOV X1, X31
	0x038FBB84 BL 0x362F808
	0x038FBB88 MOV X22, X31
	0x038FBB8C TBZ X0, 0x0, 0x38FBC14
	0x038FBB90 MOV X0, X21
	0x038FBB94 MOV X1, X31
	0x038FBB98 BL 0x362F62C
	0x038FBB9C CBZ X20, 0x38FBC28
	0x038FBBA0 MOV X21, X0
	0x038FBBA4 MOV X0, X20
	0x038FBBA8 MOV X1, X31
	0x038FBBAC BL 0x362F62C
	0x038FBBB0 ADRP X8, 0x852000
	0x038FBBB4 LDR X8, [X8 + 0xBB8]
	0x038FBBB8 MOV X22, X0
	0x038FBBBC LDR X8, [X8]
	0x038FBBC0 MOV X0, X8
	0x038FBBC4 BL 0x1C16F10
	0x038FBBC8 MOV X1, X21
	0x038FBBCC MOV X2, X22
	0x038FBBD0 MOV X3, X31
	0x038FBBD4 MOV X20, X0
	0x038FBBD8 BL 0x392A6CC
	0x038FBBDC CBZ X19, 0x38FBC28
	0x038FBBE0 MOV X0, X19
	0x038FBBE4 MOV X1, X31
	0x038FBBE8 BL 0x322B8DC
	0x038FBBEC ADRP X8, 0x852000
	0x038FBBF0 LDR X8, [X8 + 0xBB0]
	0x038FBBF4 MOV X19, X0
	0x038FBBF8 LDR X8, [X8]
	0x038FBBFC MOV X0, X8
	0x038FBC00 BL 0x1C16F10
	0x038FBC04 MOV X1, X31
	0x038FBC08 MOV X22, X0
	0x038FBC0C BL 0x33BDD8C
	0x038FBC10 STP X20, X19, [X22 + 0x10]
	0x038FBC14 MOV X0, X22
	0x038FBC18 LDP X20, X19, [X31 + 0x20]
	0x038FBC1C LDP X22, X21, [X31 + 0x10]
	0x038FBC20 LDR X30, [X31], #0x30
	0x038FBC24 RET
	0x038FBC28 BL 0x1C16F20
	0x038FBC2C FCMP S0, S4
	0x038FBC30 B.LE 0x38FBC3C
	0x038FBC34 MOVZ W8, 0x1
	0x038FBC38 B 0x38FBC54
	0x038FBC3C FADD S0, S2, S0
	0x038FBC40 FCMP S0, S4
	0x038FBC44 B.PL 0x38FBC50
	0x038FBC48 MOVZ W8, 0x2
	0x038FBC4C B 0x38FBC54
	0x038FBC50 MOV W8, W31
	0x038FBC54 FCMP S1, S5
	0x038FBC58 B.LE 0x38FBC64
	0x038FBC5C ORR W0, W8, 0x4
	0x038FBC60 RET
	0x038FBC64 FADD S0, S3, S1
	0x038FBC68 ORR W9, W8, 0x8
	0x038FBC6C FCMP S0, S5
	0x038FBC70 CSEL W0, W9, W8, MI
	0x038FBC74 RET
	0x038FBC78 FCMP S0, S4
	0x038FBC7C FADD S2, S2, S0
	0x038FBC80 B.LE 0x38FBC8C
	0x038FBC84 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xAE7000
	005 Move X20, 0x7F9000
	006 Move W8, [X19+1908]
	007 Move X20, [X20+1432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {32}
	012 Move X0, 0x853000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x822000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0x7FD000
	019 Move X0, [X0+3232]
	020 Call 0x1C17CF4
	021 Move X0, 0x7F9000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F9000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move X0, 0x853000
	028 Move X0, [X0+2848]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1908], W8
	032 Move X0, X31
	033 Call GraphicsSettings.get_renderPipelineAsset
	034 Move X8, [X20]
	035 Move X19, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move X19, X31
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move X0, X31
	051 Call GraphicsSettings.get_renderPipelineAsset
	052 Compare X0, 0
	053 JumpIfEqual {149}
	054 Move X8, [X0]
	055 Move X9, [X8+408]
	056 Move X1, [X8+416]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X19, X0
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {132}
	072 Move X8, 0x7F9000
	073 Move X8, [X8+1728]
	074 Move X0, [X8]
	075 Move X8, 0x822000
	076 Move X8, [X8+632]
	077 Move W9, [X0+224]
	078 Move X19, [X8]
	079 Compare W9, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X19
	083 Move X1, X31
	084 Call Type.GetTypeFromHandle, X0
	085 Move X8, 0x853000
	086 Move X8, [X8+2848]
	087 Move X1, X0
	088 Move X2, X31
	089 Move X8, [X8]
	090 Move X0, X8
	091 Call Resources.Load, X0, X1
	092 Move X19, X0
	093 Compare X0, 0
	094 JumpIfEqual {106}
	095 Move X9, 0x7FD000
	096 Move X9, [X9+3232]
	097 Move X8, [X19]
	098 Move X1, [X9]
	099 Move W10, [X8+304]
	100 Move W9, [X1+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X8+200]
	103 Add X8, X8, X9
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X19
	112 Move X1, X31
	113 Move X2, X31
	114 Call Object.op_Equality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {137}
	119 Compare X19, 0
	120 JumpIfEqual {149}
	121 Move X0, X19
	122 Move X1, X31
	123 Call Material.get_shader, X0
	124 Compare X0, 0
	125 JumpIfEqual {149}
	126 Move X1, X31
	127 Call Shader.get_isSupported, X0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {137}
	132 Move X0, X19
	133 Move X20, [X31+16]
	134 Move X19, [X31+24]
	135 Move X30, [X31+32]
	136 Return X0
	137 Move X8, 0x853000
	138 Move X8, [X8+2760]
	139 Move X0, [X8]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X20, [X31+16]
	145 Move X19, [X31+24]
	146 Move X30, [X31+32]
	147 Call BuiltinMaterials.GetLegacyDiffuse
	148 Return X0
	149 Call 0x1C17F20
	150 Move X0, X19
	151 Call 0x1C181E0

Method: UnityEngine.Material get_unlitVertexColor()

Disassembly:
	0x038FC4E8 ADD X8, X8, X9, 0x4, LSL
	0x038FC4EC STR W10, [X20 + 0x18]
	0x038FC4F0 STR V0, [X8 + 0x2]
	0x038FC4F4 B 0x38FC524
	0x038FC4F8 LDR X8, [X10 + 0x20]
	0x038FC4FC ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC500 LDR V1, [X9 + 0x5C]
	0x038FC504 FMOV S3, 1
	0x038FC508 LDR X8, [X8 + 0xC0]
	0x038FC50C MOV X0, X20
	0x038FC510 MOV V2.16B, V1.16B
	0x038FC514 LDR X1, [X8 + 0x70]
	0x038FC518 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC51C LDR V0, [X8 + 0x1C0]
	0x038FC520 BL 0x2F6D428
	0x038FC524 LDR W9, [X20 + 0x1C]
	0x038FC528 LDR X8, [X20 + 0x10]
	0x038FC52C LDR X10, [X21]
	0x038FC530 ADD W9, W9, 0x1
	0x038FC534 STR W9, [X20 + 0x1C]
	0x038FC538 CBZ X8, 0x38FCA7C
	0x038FC53C LDRSW X9, [X20 + 0x18]
	0x038FC540 LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE6000
	005 Move X19, 0x852000
	006 Move W8, [X20+1909]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x852000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1909], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+80]
	028 Move X30, [X31+32]
	029 Return X0

Method: UnityEngine.Material get_ShapePreviewMaterial()

Disassembly:
	0x038FC544 CMP W9, W11
	0x038FC548 B.CS 0x38FC568
	0x038FC54C ADRP X10, 0xFFFFFFFFFD1EF000
	0x038FC550 LDR V0, [X10 + 0x76]
	0x038FC554 ADD W10, W9, 0x1
	0x038FC558 ADD X8, X8, X9, 0x4, LSL
	0x038FC55C STR W10, [X20 + 0x18]
	0x038FC560 STR V0, [X8 + 0x2]
	0x038FC564 B 0x38FC598
	0x038FC568 LDR X8, [X10 + 0x20]
	0x038FC56C ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC570 ADRP X10, 0xFFFFFFFFFD1EE000
	0x038FC574 LDR V1, [X9 + 0x90]
	0x038FC578 LDR X8, [X8 + 0xC0]
	0x038FC57C LDR V2, [X10 + 0x198]
	0x038FC580 FMOV S3, 1
	0x038FC584 MOV X0, X20
	0x038FC588 LDR X1, [X8 + 0x70]
	0x038FC58C ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC590 LDR V0, [X8 + 0x230]
	0x038FC594 BL 0x2F6D428
	0x038FC598 LDR W9, [X20 + 0x1C]
	0x038FC59C LDR X8, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE6000
	005 Move X19, 0x852000
	006 Move W8, [X20+1910]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x852000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1910], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call BuiltinMaterials.Init
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X0, [X8+88]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void .cctor()

Disassembly:
	0x038FC5A0 LDR X10, [X21]
	0x038FC5A4 ADD W9, W9, 0x1
	0x038FC5A8 STR W9, [X20 + 0x1C]
	0x038FC5AC CBZ X8, 0x38FCA7C
	0x038FC5B0 LDRSW X9, [X20 + 0x18]
	0x038FC5B4 LDR W11, [X8 + 0x18]
	0x038FC5B8 CMP W9, W11
	0x038FC5BC B.CS 0x38FC5DC
	0x038FC5C0 ADRP X10, 0xFFFFFFFFFD1F0000
	0x038FC5C4 LDR V0, [X10 + 0x5E]
	0x038FC5C8 ADD W10, W9, 0x1
	0x038FC5CC ADD X8, X8, X9, 0x4, LSL
	0x038FC5D0 STR W10, [X20 + 0x18]
	0x038FC5D4 STR V0, [X8 + 0x2]
	0x038FC5D8 B 0x38FC60C
	0x038FC5DC LDR X8, [X10 + 0x20]
	0x038FC5E0 ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC5E4 ADRP X10, 0xFFFFFFFFFD1EE000
	0x038FC5E8 LDR V1, [X9 + 0x5C]
	0x038FC5EC LDR X8, [X8 + 0xC0]
	0x038FC5F0 LDR V2, [X10 + 0x388]
	0x038FC5F4 FMOV S3, 1
	0x038FC5F8 MOV X0, X20
	0x038FC5FC LDR X1, [X8 + 0x70]
	0x038FC600 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC604 LDR V0, [X8 + 0x14]
	0x038FC608 BL 0x2F6D428
	0x038FC60C LDR W9, [X20 + 0x1C]
	0x038FC610 LDR X8, [X20 + 0x10]
	0x038FC614 LDR X10, [X21]
	0x038FC618 ADD W9, W9, 0x1
	0x038FC61C STR W9, [X20 + 0x1C]
	0x038FC620 CBZ X8, 0x38FCA7C
	0x038FC624 LDRSW X9, [X20 + 0x18]
	0x038FC628 LDR W11, [X8 + 0x18]
	0x038FC62C CMP W9, W11
	0x038FC630 B.CS 0x38FC650
	0x038FC634 ADRP X10, 0xFFFFFFFFFD1EE000
	0x038FC638 LDR V0, [X10 + 0x71]
	0x038FC63C ADD W10, W9, 0x1
	0x038FC640 ADD X8, X8, X9, 0x4, LSL
	0x038FC644 STR W10, [X20 + 0x18]
	0x038FC648 STR V0, [X8 + 0x2]
	0x038FC64C B 0x38FC67C
	0x038FC650 LDR X8, [X10 + 0x20]
	0x038FC654 ADRP X9, 0xFFFFFFFFFD1EE000
	0x038FC658 LDR V2, [X9 + 0x198]
	0x038FC65C FMOV S1, 1
	0x038FC660 LDR X8, [X8 + 0xC0]
	0x038FC664 FMOV S3, 1
	0x038FC668 MOV X0, X20
	0x038FC66C LDR X1, [X8 + 0x70]
	0x038FC670 ADRP X8, 0xFFFFFFFFFD1EE000
	0x038FC674 LDR V0, [X8 + 0x3AC]
	0x038FC678 BL 0x2F6D428
	0x038FC67C LDR W9, [X20 + 0x1C]
	0x038FC680 LDR X8, [X20 + 0x10]
	0x038FC684 LDR X10, [X21]
	0x038FC688 ADD W9, W9, 0x1
	0x038FC68C STR W9, [X20 + 0x1C]
	0x038FC690 CBZ X8, 0x38FCA7C
	0x038FC694 LDRSW X9, [X20 + 0x18]
	0x038FC698 LDR W11, [X8 + 0x18]
	0x038FC69C CMP W9, W11
	0x038FC6A0 B.CS 0x38FC6C0
	0x038FC6A4 ADRP X10, 0xFFFFFFFFFD1EE000
	0x038FC6A8 LDR V0, [X10 + 0xCD]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xAE6000
	011 Move X24, 0x852000
	012 Move X25, 0x852000
	013 Move X23, 0x852000
	014 Move X22, 0x852000
	015 Move X21, 0x852000
	016 Move X20, 0x852000
	017 Move X19, 0x852000
	018 Move X24, [X24+2760]
	019 Move X25, [X25+2888]
	020 Move W8, [X26+1911]
	021 Move X23, [X23+2896]
	022 Move X22, [X22+2904]
	023 Move X21, [X21+2912]
	024 Move X20, [X20+2920]
	025 Move X19, [X19+2928]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x852000
	031 Move X0, [X0+2760]
	032 Call 0x1C17CF4
	033 Move X0, 0x852000
	034 Move X0, [X0+2920]
	035 Call 0x1C17CF4
	036 Move X0, 0x852000
	037 Move X0, [X0+2888]
	038 Call 0x1C17CF4
	039 Move X0, 0x852000
	040 Move X0, [X0+2912]
	041 Call 0x1C17CF4
	042 Move X0, 0x852000
	043 Move X0, [X0+2904]
	044 Call 0x1C17CF4
	045 Move X0, 0x852000
	046 Move X0, [X0+2928]
	047 Call 0x1C17CF4
	048 Move X0, 0x852000
	049 Move X0, [X0+2896]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+1911], W8
	053 Move X8, [X24]
	054 Move X9, -48295936
	055 Move V0, [X9+167]
	056 Move X8, [X8+184]
	057 Move [X8+4], V0
	058 Move X8, [X24]
	059 Move X10, [X25]
	060 Move X9, [X23]
	061 Move X24, [X31+32]
	062 Move X23, [X31+40]
	063 Move X8, [X8+184]
	064 Move X26, [X31+16]
	065 Move X25, [X31+24]
	066 Move [X8+96], X10
	067 Move [X8+104], X9
	068 Move X10, [X22]
	069 Move X9, [X21]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move [X8+112], X10
	073 Move [X8+120], X9
	074 Move X10, [X20]
	075 Move X9, [X19]
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move [X8+128], X10
	079 Move [X8+136], X9
	080 Move X30, [X31+80]
	081 Return 

