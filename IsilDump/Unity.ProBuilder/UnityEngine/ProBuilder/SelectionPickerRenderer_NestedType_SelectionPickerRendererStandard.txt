Type: UnityEngine.ProBuilder.SelectionPickerRenderer/SelectionPickerRendererStandard

Method: UnityEngine.Texture2D RenderLookupTexture(UnityEngine.Camera camera, UnityEngine.Shader shader, System.String tag, System.Int32 width = -1, System.Int32 height = -1)

Disassembly:
	0x03928E28 LDR X30, [X31], #0x20
	0x03928E2C RET
	0x03928E30 BL 0x1C16F20
	0x03928E34 STP X30, X21, [X31 - 0x20]!
	0x03928E38 STP X20, X19, [X31 + 0x10]
	0x03928E3C ADRP X21, 0xAB9000
	0x03928E40 LDRB W8, [X21 + 0x8D5]
	0x03928E44 MOV X20, X1
	0x03928E48 MOV X19, X0
	0x03928E4C TBNZ X8, 0x0, 0x3928EA0
	0x03928E50 ADRP X0, 0x826000
	0x03928E54 LDR X0, [X0 + 0x688]
	0x03928E58 BL 0x1C16CF4
	0x03928E5C ADRP X0, 0x826000
	0x03928E60 LDR X0, [X0 + 0xA50]
	0x03928E64 BL 0x1C16CF4
	0x03928E68 ADRP X0, 0x826000
	0x03928E6C LDR X0, [X0 + 0xA58]
	0x03928E70 BL 0x1C16CF4
	0x03928E74 ADRP X0, 0x826000
	0x03928E78 LDR X0, [X0 + 0xA48]
	0x03928E7C BL 0x1C16CF4
	0x03928E80 ADRP X0, 0x826000
	0x03928E84 LDR X0, [X0 + 0xA40]
	0x03928E88 BL 0x1C16CF4
	0x03928E8C ADRP X0, 0x7D2000
	0x03928E90 LDR X0, [X0 + 0x858]
	0x03928E94 BL 0x1C16CF4
	0x03928E98 MOVZ W8, 0x1
	0x03928E9C STRB W8, [X21 + 0x8D5]
	0x03928EA0 CBZ X20, 0x3928F64
	0x03928EA4 LDR X8, [X19 + 0x10]
	0x03928EA8 STR X8, [X20 + 0x10]
	0x03928EAC LDR X9, [X19 + 0x18]
	0x03928EB0 LDR X8, [X20 + 0x30]
	0x03928EB4 STR X9, [X20 + 0x18]
	0x03928EB8 CBZ X8, 0x3928F64
	0x03928EBC LDP W2, W9, [X8 + 0x18]
	0x03928EC0 ADD W9, W9, 0x1
	0x03928EC4 CMP W2, 0x1
	0x03928EC8 STP W31, W9, [X8 + 0x18]
	0x03928ECC B.LT 0x3928EE0
	0x03928ED0 LDR X0, [X8 + 0x10]
	0x03928ED4 MOV W1, W31
	0x03928ED8 MOV X3, X31
	0x03928EDC BL 0x339FA34
	0x03928EE0 LDR X8, [X20 + 0x28]
	0x03928EE4 CBZ X8, 0x3928F64
	0x03928EE8 LDR W9, [X8 + 0x1C]
	0x03928EEC ADD W9, W9, 0x1
	0x03928EF0 STP W31, W9, [X8 + 0x18]
	0x03928EF4 LDR X8, [X20 + 0x20]
	0x03928EF8 CBZ X8, 0x3928F64
	0x03928EFC LDR W9, [X8 + 0x1C]
	0x03928F00 ADD W9, W9, 0x1
	0x03928F04 STP W31, W9, [X8 + 0x18]
	0x03928F08 LDR X0, [X20 + 0x30]
	0x03928F0C CBZ X0, 0x3928F64
	0x03928F10 ADRP X8, 0x826000
	0x03928F14 LDR X8, [X8 + 0xA50]
	0x03928F18 LDR X1, [X19 + 0x30]
	0x03928F1C LDR X2, [X8]
	0x03928F20 BL 0x301C194
	0x03928F24 LDR X0, [X20 + 0x28]
	0x03928F28 CBZ X0, 0x3928F64
	0x03928F2C ADRP X8, 0x826000
	0x03928F30 LDR X8, [X8 + 0xA58]
	0x03928F34 LDR X1, [X19 + 0x28]
	0x03928F38 LDR X2, [X8]
	0x03928F3C BL 0x2FBA13C
	0x03928F40 LDR X0, [X20 + 0x20]
	0x03928F44 CBZ X0, 0x3928F64
	0x03928F48 ADRP X8, 0x826000
	0x03928F4C LDR X8, [X8 + 0x688]
	0x03928F50 LDR X1, [X19 + 0x20]
	0x03928F54 LDP X20, X19, [X31 + 0x10]
	0x03928F58 LDR X2, [X8]
	0x03928F5C LDP X30, X21, [X31], #0x20
	0x03928F60 B 0x2FDC918
	0x03928F64 BL 0x1C16F20
	0x03928F68 STP X30, X23, [X31 - 0x30]!
	0x03928F6C STP X22, X21, [X31 + 0x10]
	0x03928F70 STP X20, X19, [X31 + 0x20]
	0x03928F74 ADRP X21, 0xAB9000
	0x03928F78 ADRP X20, 0x7CB000
	0x03928F7C ADRP X22, 0x7CB000
	0x03928F80 LDRB W8, [X21 + 0x8D6]
	0x03928F84 LDR X20, [X20 + 0x8F0]
	0x03928F88 LDR X22, [X22 + 0x598]
	0x03928F8C MOV X19, X0
	0x03928F90 TBNZ X8, 0x0, 0x3928FF0
	0x03928F94 ADRP X0, 0x7CB000
	0x03928F98 LDR X0, [X0 + 0x598]
	0x03928F9C BL 0x1C16CF4
	0x03928FA0 ADRP X0, 0x7CB000
	0x03928FA4 LDR X0, [X0 + 0x8F0]
	0x03928FA8 BL 0x1C16CF4
	0x03928FAC ADRP X0, 0x826000
	0x03928FB0 LDR X0, [X0 + 0xA60]
	0x03928FB4 BL 0x1C16CF4
	0x03928FB8 ADRP X0, 0x826000
	0x03928FBC LDR X0, [X0 + 0xA68]
	0x03928FC0 BL 0x1C16CF4
	0x03928FC4 ADRP X0, 0x826000
	0x03928FC8 LDR X0, [X0 + 0xA70]
	0x03928FCC BL 0x1C16CF4
	0x03928FD0 ADRP X0, 0x826000
	0x03928FD4 LDR X0, [X0 + 0xA78]
	0x03928FD8 BL 0x1C16CF4
	0x03928FDC ADRP X0, 0x826000
	0x03928FE0 LDR X0, [X0 + 0xA80]
	0x03928FE4 BL 0x1C16CF4
	0x03928FE8 MOVZ W8, 0x1
	0x03928FEC STRB W8, [X21 + 0x8D6]
	0x03928FF0 LDR X0, [X20]
	0x03928FF4 ADRP X23, 0x826000
	0x03928FF8 LDR X23, [X23 + 0xA60]
	0x03928FFC BL 0x1C16F10
	0x03929000 MOV X1, X31
	0x03929004 MOV X20, X0
	0x03929008 BL 0x3231AC4
	0x0392900C LDR X0, [X22]
	0x03929010 LDR X21, [X19 + 0x10]
	0x03929014 LDR W8, [X0 + 0xE0]
	0x03929018 CBNZ W8, 0x3929020
	0x0392901C BL 0x1C16DFC
	0x03929020 MOV X0, X21
	0x03929024 MOV X1, X31
	0x03929028 MOV X2, X31
	0x0392902C BL 0x3C354F8
	0x03929030 LDR X21, [X23]
	0x03929034 MOV X1, X31
	0x03929038 TBZ X0, 0x0, 0x3929050
	0x0392903C LDR X0, [X19 + 0x10]
	0x03929040 CBZ X0, 0x39291C4
	0x03929044 MOV X1, X31
	0x03929048 BL 0x3C389D4
	0x0392904C MOV X1, X0
	0x03929050 MOV X0, X21
	0x03929054 MOV X2, X31
	0x03929058 BL 0x321B938
	0x0392905C CBZ X20, 0x39291C4
	0x03929060 ADRP X23, 0x825000
	0x03929064 LDR X23, [X23 + 0xA70]
	0x03929068 MOV X1, X0
	0x0392906C MOV X0, X20
	0x03929070 MOV X2, X31
	0x03929074 BL 0x32338A8
	0x03929078 LDR X0, [X22]
	0x0392907C LDR X21, [X19 + 0x18]
	0x03929080 LDR W8, [X0 + 0xE0]
	0x03929084 CBNZ W8, 0x392908C
	0x03929088 BL 0x1C16DFC
	0x0392908C MOV X0, X21
	0x03929090 MOV X1, X31
	0x03929094 MOV X2, X31
	0x03929098 BL 0x3C354F8
	0x0392909C LDR X21, [X23]
	0x039290A0 MOV X1, X31
	0x039290A4 TBZ X0, 0x0, 0x39290BC
	0x039290A8 LDR X0, [X19 + 0x18]
	0x039290AC CBZ X0, 0x39291C4
	0x039290B0 MOV X1, X31
	0x039290B4 BL 0x3C389D4
	0x039290B8 MOV X1, X0
	0x039290BC ADRP X22, 0x825000
	0x039290C0 LDR X22, [X22 + 0xA68]
	0x039290C4 MOV X0, X21
	0x039290C8 MOV X2, X31
	0x039290CC BL 0x321B938
	0x039290D0 MOV X1, X0
	0x039290D4 MOV X0, X20
	0x039290D8 MOV X2, X31
	0x039290DC BL 0x32338A8
	0x039290E0 LDR X0, [X19 + 0x30]
	0x039290E4 LDR X21, [X22]
	0x039290E8 CBZ X0, 0x3929100
	0x039290EC LDR X8, [X0]
	0x039290F0 LDP X9, X1, [X8 + 0x168]
	0x039290F4 BLR X9
	0x039290F8 MOV X1, X0
	0x039290FC B 0x3929104
	0x03929100 MOV X1, X31
	0x03929104 MOV X0, X21
	0x03929108 MOV X2, X31
	0x0392910C BL 0x321B938
	0x03929110 MOV X1, X0
	0x03929114 MOV X0, X20
	0x03929118 MOV X2, X31
	0x0392911C BL 0x32338A8
	0x03929120 LDR X0, [X19 + 0x28]
	0x03929124 CBZ X0, 0x39291C4
	0x03929128 LDR X8, [X0]
	0x0392912C ADRP X21, 0x825000
	0x03929130 ADRP X22, 0x825000
	0x03929134 LDP X9, X1, [X8 + 0x168]
	0x03929138 LDR X21, [X21 + 0xA78]
	0x0392913C LDR X22, [X22 + 0xA80]
	0x03929140 BLR X9
	0x03929144 LDR X8, [X21]
	0x03929148 MOV X1, X0
	0x0392914C MOV X2, X31
	0x03929150 MOV X0, X8
	0x03929154 BL 0x321B938
	0x03929158 MOV X1, X0
	0x0392915C MOV X0, X20
	0x03929160 MOV X2, X31
	0x03929164 BL 0x32338A8
	0x03929168 LDR X0, [X19 + 0x20]
	0x0392916C LDR X19, [X22]
	0x03929170 CBZ X0, 0x3929188
	0x03929174 LDR X8, [X0]
	0x03929178 LDP X9, X1, [X8 + 0x168]
	0x0392917C BLR X9
	0x03929180 MOV X1, X0
	0x03929184 B 0x392918C
	0x03929188 MOV X1, X31
	0x0392918C MOV X0, X19
	0x03929190 MOV X2, X31
	0x03929194 BL 0x321B938
	0x03929198 MOV X1, X0
	0x0392919C MOV X0, X20
	0x039291A0 MOV X2, X31
	0x039291A4 BL 0x32338A8
	0x039291A8 LDR X8, [X20]
	0x039291AC MOV X0, X20
	0x039291B0 LDP X20, X19, [X31 + 0x20]
	0x039291B4 LDP X22, X21, [X31 + 0x10]
	0x039291B8 LDP X2, X1, [X8 + 0x168]
	0x039291BC LDP X30, X23, [X31], #0x30
	0x039291C0 BR X2
	0x039291C4 BL 0x1C16F20
	0x039291C8 STP X30, X21, [X31 - 0x20]!
	0x039291CC STP X20, X19, [X31 + 0x10]
	0x039291D0 ADRP X21, 0xAB8000
	0x039291D4 LDRB W8, [X21 + 0x8D7]
	0x039291D8 MOV X19, X1
	0x039291DC MOV X20, X0
	0x039291E0 TBNZ X8, 0x0, 0x3929210
	0x039291E4 ADRP X0, 0x825000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D8
	003 Move [X31+128], X29
	004 Move [X31+136], X30
	005 Move [X31+144], X28
	006 Move [X31+152], X27
	007 Move [X31+160], X26
	008 Move [X31+168], X25
	009 Move [X31+176], X24
	010 Move [X31+184], X23
	011 Move [X31+192], X22
	012 Move [X31+200], X21
	013 Move [X31+208], X20
	014 Move [X31+216], X19
	015 Move X21, 0xABA000
	016 Move W8, [X21+2248]
	017 Move W20, W5
	018 Move W19, W4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X25, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x827000
	027 Move X0, [X0+2608]
	028 Call 0x1C17CF4
	029 Move X0, 0x7CC000
	030 Move X0, [X0+2648]
	031 Call 0x1C17CF4
	032 Move X0, 0x7CC000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x827000
	036 Move X0, [X0+2024]
	037 Call 0x1C17CF4
	038 Move X0, 0x7F6000
	039 Move X0, [X0+592]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+2248], W8
	043 Or W8, W20, W19
	044 Move TEMP, X8
	045 And TEMP, TEMP, -2147483648
	046 Compare TEMP, -2147483648
	047 JumpIfNotEqual {65}
	048 Compare X25, 0
	049 JumpIfEqual {267}
	050 Move X0, X25
	051 Move X1, X31
	052 Call Camera.get_pixelRect, X0
	053 Move W8, 0x7F800000
	054 Move S8, W8
	055 NotImplemented "Instruction FCVTZS not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move W20, 0x80000000
	058 Move X0, X25
	059 Move X1, X31
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Call Camera.get_pixelRect, X0
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X8, 0x7CC000
	066 Move X8, [X8+2648]
	067 Move X0, [X8]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X21, X0
	071 Call GameObject..ctor, X0
	072 Compare X21, 0
	073 JumpIfEqual {267}
	074 Move X8, 0x827000
	075 Move X8, [X8+2608]
	076 Move X0, X21
	077 Move X1, [X8]
	078 Call 0x21E61FC, X0
	079 Compare X0, 0
	080 JumpIfEqual {267}
	081 Move X26, 0x827000
	082 Move X29, 0x7F6000
	083 Move X26, [X26+2024]
	084 Move X29, [X29+592]
	085 Move X1, X25
	086 Move X2, X31
	087 Move X24, X0
	088 Call Camera.CopyFrom, X0, X1
	089 Move W1, 1
	090 Move X0, X24
	091 Move X2, X31
	092 Call Camera.set_renderingPath, X0, X1
	093 Move X0, X24
	094 Move W1, W31
	095 Move X2, X31
	096 Call Behaviour.set_enabled, X0, X1
	097 Move W1, 2
	098 Move X0, X24
	099 Move X2, X31
	100 Move W25, 2
	101 Call Camera.set_clearFlags, X0, X1
	102 Move S0, 1
	103 Move S1, 1
	104 Move S2, 1
	105 Move S3, 1
	106 Move X0, X24
	107 Move X1, X31
	108 Call Camera.set_backgroundColor, X0, X1
	109 Move X0, X24
	110 Move W1, W31
	111 Move X2, X31
	112 Call Camera.set_allowHDR, X0, X1
	113 Move X0, X24
	114 Move W1, W31
	115 Move X2, X31
	116 Call Camera.set_allowMSAA, X0, X1
	117 Move W1, 1
	118 Move X0, X24
	119 Move X2, X31
	120 Call Camera.set_forceIntoRenderTexture, X0, X1
	121 Move X0, [X26]
	122 NotImplemented "Instruction MOVI not yet implemented."
	123 Move [X31+92], V0
	124 Move [X31+64], V0
	125 Move [X31+72], V0
	126 Move [X31+56], W19
	127 Move [X31+60], W20
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X31
	133 Call SelectionPickerRenderer.get_renderTextureFormat
	134 Move W1, W0
	135 Add X0, X31, 56
	136 Move X2, X31
	137 Call RenderTextureDescriptor.set_colorFormat, X0, X1
	138 Add X0, X31, 56
	139 Move W1, W31
	140 Move X2, X31
	141 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	142 Add X0, X31, 56
	143 Move W1, 16
	144 Move X2, X31
	145 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	146 Add X0, X31, 56
	147 Move W1, W31
	148 Move X2, X31
	149 Move [X31+88], W25
	150 Call RenderTextureDescriptor.set_enableRandomWrite, X0, X1
	151 Add X0, X31, 56
	152 Move W1, W31
	153 Move X2, X31
	154 Move [X31+104], W31
	155 Call RenderTextureDescriptor.set_sRGB, X0, X1
	156 Add X0, X31, 56
	157 Move W1, W31
	158 Move X2, X31
	159 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	160 NotImplemented "Instruction MOVI not yet implemented."
	161 Move [X31+64], D0
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move W8, [X31+104]
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Add X0, X31, 0
	167 Move X1, X31
	168 Move [X31+16], V0
	169 Move [X31+24], V1
	170 Move [X31+48], W8
	171 Move [X31], V2
	172 Call RenderTexture.GetTemporary, X0
	173 Move X25, X0
	174 Move X0, X31
	175 Call RenderTexture.get_active
	176 Move X26, X0
	177 Move X0, X24
	178 Move X1, X25
	179 Move X2, X31
	180 Call Camera.set_targetTexture, X0, X1
	181 Move X0, X25
	182 Move X1, X31
	183 Call RenderTexture.set_active, X0
	184 Move X0, X31
	185 Call GraphicsSettings.get_renderPipelineAsset
	186 Move X27, X0
	187 Move X0, X31
	188 Call QualitySettings.get_renderPipeline
	189 Move X28, X0
	190 Move X0, X31
	191 Move X1, X31
	192 Call GraphicsSettings.set_renderPipelineAsset, X0
	193 Move X0, X31
	194 Move X1, X31
	195 Call QualitySettings.set_renderPipeline, X0
	196 Move X0, X24
	197 Move X1, X23
	198 Move X2, X22
	199 Move X3, X31
	200 Call Camera.RenderWithShader, X0, X1, X2
	201 Move X0, X27
	202 Move X1, X31
	203 Call GraphicsSettings.set_renderPipelineAsset, X0
	204 Move X0, X28
	205 Move X1, X31
	206 Call QualitySettings.set_renderPipeline, X0
	207 Move X0, X31
	208 Call SelectionPickerRenderer.get_textureFormat
	209 Move X8, [X29]
	210 Move W23, W0
	211 Move X0, X8
	212 Call 0x1C17F10
	213 Move W1, W19
	214 Move W2, W20
	215 Move W3, W23
	216 Move W4, W31
	217 Move W5, W31
	218 Move X6, X31
	219 Move X22, X0
	220 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5
	221 Compare X22, 0
	222 JumpIfEqual {267}
	223 Move X23, 0x7CB000
	224 Move X23, [X23+1432]
	225 NotImplemented "Instruction SCVTF not yet implemented."
	226 NotImplemented "Instruction SCVTF not yet implemented."
	227 Move S0, W31
	228 Move S1, W31
	229 Move X0, X22
	230 Move W1, W31
	231 Move W2, W31
	232 Move X3, X31
	233 Call Texture2D.ReadPixels, X0, X1, X2, X3
	234 Move X0, X22
	235 Move X1, X31
	236 Call Texture2D.Apply, X0
	237 Move X0, X26
	238 Move X1, X31
	239 Call RenderTexture.set_active, X0
	240 Move X0, X25
	241 Move X1, X31
	242 Call RenderTexture.ReleaseTemporary, X0
	243 Move X0, [X23]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, X21
	249 Move X1, X31
	250 Call Object.DestroyImmediate, X0
	251 Move X0, X22
	252 Move X20, [X31+208]
	253 Move X19, [X31+216]
	254 Move X22, [X31+192]
	255 Move X21, [X31+200]
	256 Move X24, [X31+176]
	257 Move X23, [X31+184]
	258 Move X26, [X31+160]
	259 Move X25, [X31+168]
	260 Move X28, [X31+144]
	261 Move X27, [X31+152]
	262 Move X29, [X31+128]
	263 Move X30, [X31+136]
	264 Move V8, [X31+112]
	265 Add X31, X31, 224
	266 Return X0
	267 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039291E8 LDR X0, [X0 + 0xA88]
	0x039291EC BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

