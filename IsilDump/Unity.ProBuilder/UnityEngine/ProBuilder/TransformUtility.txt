Type: UnityEngine.ProBuilder.TransformUtility

Method: System.Void UnparentChildren(UnityEngine.Transform t)

Disassembly:
	0x0393AD50 LDR X0, [X9]
	0x0393AD54 BL 0x1C16F10
	0x0393AD58 ADRP X8, 0x814000
	0x0393AD5C LDR X8, [X8 + 0xEC8]
	0x0393AD60 MOV X1, X22
	0x0393AD64 MOV X3, X31
	0x0393AD68 MOV X21, X0
	0x0393AD6C LDR X2, [X8]
	0x0393AD70 BL 0x2D2F428
	0x0393AD74 LDR X8, [X23]
	0x0393AD78 LDR X8, [X8 + 0xB8]
	0x0393AD7C STR X21, [X8 + 0x8]
	0x0393AD80 ADRP X8, 0x814000
	0x0393AD84 LDR X8, [X8 + 0xEB8]
	0x0393AD88 MOV X0, X19
	0x0393AD8C MOV X1, X21
	0x0393AD90 LDR X2, [X8]
	0x0393AD94 BL 0x21DA490
	0x0393AD98 ADRP X8, 0x814000
	0x0393AD9C LDR X8, [X8 + 0x590]
	0x0393ADA0 MOV X19, X0
	0x0393ADA4 LDR X8, [X8]
	0x0393ADA8 LDR W9, [X8 + 0xE0]
	0x0393ADAC CBNZ W9, 0x393ADB8
	0x0393ADB0 MOV X0, X8
	0x0393ADB4 BL 0x1C16DFC
	0x0393ADB8 MOV X0, X20
	0x0393ADBC MOV X1, X19
	0x0393ADC0 LDP X20, X19, [X31 + 0x20]
	0x0393ADC4 LDP X22, X21, [X31 + 0x10]
	0x0393ADC8 LDP X30, X23, [X31], #0x30
	0x0393ADCC B 0x393AE2C
	0x0393ADD0 CBZ X19, 0x393AE28
	0x0393ADD4 LDR W8, [X19 + 0x18]
	0x0393ADD8 CMP W8, 0x1
	0x0393ADDC B.LT 0x393AE14
	0x0393ADE0 MOV W9, W31
	0x0393ADE4 MOVN W10, 0x0
	0x0393ADE8 MOVZ W11, 0x1
	0x0393ADEC CMP W8, W9
	0x0393ADF0 B.EQ 0x393AE24
	0x0393ADF4 ADD X12, X19, W9, 0x3, SXTW
	0x0393ADF8 LDR X12, [X12 + 0x20]
	0x0393ADFC CBZ X12, 0x393AE28
	0x0393AE00 ADD W9, W9, 0x1
	0x0393AE04 CMP W8, W9
	0x0393AE08 STR W10, [X12 + 0x54]
	0x0393AE0C STRB W11, [X12 + 0x4C]
	0x0393AE10 B.NE 0x393ADEC
	0x0393AE14 LDP X20, X19, [X31 + 0x20]
	0x0393AE18 LDP X22, X21, [X31 + 0x10]
	0x0393AE1C LDP X30, X23, [X31], #0x30
	0x0393AE20 RET
	0x0393AE24 BL 0x1C16F28
	0x0393AE28 BL 0x1C16F20
	0x0393AE2C SUB X31, X31, 0x90
	0x0393AE30 STP X30, X27, [X31 + 0x40]
	0x0393AE34 STP X26, X25, [X31 + 0x50]
	0x0393AE38 STP X24, X23, [X31 + 0x60]
	0x0393AE3C STP X22, X21, [X31 + 0x70]
	0x0393AE40 STP X20, X19, [X31 + 0x80]
	0x0393AE44 ADRP X20, 0xAA7000
	0x0393AE48 LDRB W8, [X20 + 0x92B]
	0x0393AE4C MOV X22, X1
	0x0393AE50 MOV X19, X0
	0x0393AE54 TBNZ X8, 0x0, 0x393AE90
	0x0393AE58 ADRP X0, 0x814000
	0x0393AE5C LDR X0, [X0 + 0x3E0]
	0x0393AE60 BL 0x1C16CF4
	0x0393AE64 ADRP X0, 0x814000
	0x0393AE68 LDR X0, [X0 + 0x4B8]
	0x0393AE6C BL 0x1C16CF4
	0x0393AE70 ADRP X0, 0x814000
	0x0393AE74 LDR X0, [X0 + 0x3F0]
	0x0393AE78 BL 0x1C16CF4
	0x0393AE7C ADRP X0, 0x814000
	0x0393AE80 LDR X0, [X0 + 0x590]
	0x0393AE84 BL 0x1C16CF4
	0x0393AE88 MOVZ W8, 0x1
	0x0393AE8C STRB W8, [X20 + 0x92B]
	0x0393AE90 CBZ X19, 0x393B014
	0x0393AE94 ADRP X20, 0x814000
	0x0393AE98 ADRP X21, 0x814000
	0x0393AE9C LDR X20, [X20 + 0x4B8]
	0x0393AEA0 LDR X21, [X21 + 0x3F0]
	0x0393AEA4 MOV X0, X19
	0x0393AEA8 MOV X1, X31
	0x0393AEAC BL 0x391766C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA8000
	007 Move W8, [X20+2334]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x815000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C1000
	017 Move X0, [X0+1800]
	018 Call 0x1C17CF4
	019 Move X0, 0x815000
	020 Move X0, [X0+3704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2334], W8
	024 Compare X19, 0
	025 JumpIfEqual {89}
	026 Move X20, 0x7C1000
	027 Move X20, [X20+1800]
	028 Move X0, X19
	029 Move X1, X31
	030 Call Transform.get_childCount, X0
	031 Move X8, [X20]
	032 Move W1, W0
	033 Move X0, X8
	034 Call 0x1C17D6C
	035 Move X20, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Transform.get_childCount, X0
	039 Subtract W21, W0, 1
	040 Move X0, X19
	041 Move W1, W21
	042 Move X2, X31
	043 Call Transform.GetChild, X0, X1
	044 Compare X20, 0
	045 JumpIfEqual {89}
	046 Move X22, X0
	047 Compare X0, 0
	048 JumpIfEqual {90}
	049 Move X8, [X20]
	050 Move X0, X22
	051 Move X1, [X8+64]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {96}
	055 Move W8, [X20+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X20, W21
	058 Move W2, 1
	059 Move X0, X22
	060 Move X1, X31
	061 Move X3, X31
	062 Move [X8+32], X22
	063 Call Transform.SetParent, X0, X1, X2
	064 Subtract W21, W21, 1
	065 Move X21, 0x815000
	066 Move X21, [X21+3704]
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X0, [X8]
	075 Compare X0, 0
	076 JumpIfEqual {89}
	077 Move X8, 0x815000
	078 Move X8, [X8+3696]
	079 Move X1, X19
	080 Move X2, X20
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X3, [X8]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	088 Return 
	089 Call 0x1C17F20
	090 Move W8, [X20+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X20, W21
	093 Move [X8+32], X22
	094 Call 0x1C17F20
	095 Call 0x1C17F28
	096 Call 0x1C17F44
	097 Move X1, X31
	098 Call 0x1C17DEC

Method: System.Void ReparentChildren(UnityEngine.Transform t)

Disassembly:
	0x0393AEB0 LDR X1, [X20]
	0x0393AEB4 BL 0x21D5914
	0x0393AEB8 LDR X1, [X21]
	0x0393AEBC MOV X20, X0
	0x0393AEC0 MOV X0, X22
	0x0393AEC4 BL 0x1C16E00
	0x0393AEC8 MOV X21, X0
	0x0393AECC CBNZ X0, 0x393AEE8
	0x0393AED0 ADRP X8, 0x814000
	0x0393AED4 LDR X8, [X8 + 0x3E0]
	0x0393AED8 MOV X0, X22
	0x0393AEDC LDR X1, [X8]
	0x0393AEE0 BL 0x21D577C
	0x0393AEE4 MOV X21, X0
	0x0393AEE8 CBZ X21, 0x393B014
	0x0393AEEC LDR W8, [X21 + 0x18]
	0x0393AEF0 CMP W8, 0x1
	0x0393AEF4 B.LT 0x393AF4C
	0x0393AEF8 MOV W22, W31
	0x0393AEFC CMP W22, W8
	0x0393AF00 B.CS 0x393B010
	0x0393AF04 ADD X8, X21, W22, 0x3, SXTW
	0x0393AF08 LDR X23, [X8 + 0x20]
	0x0393AF0C ADD X8, X31, 0x0
	0x0393AF10 MOV X0, X31
	0x0393AF14 BL 0x38F691C
	0x0393AF18 LDP V0, V1, [X31]
	0x0393AF1C STP V0, V1, [X31 + 0x20]
	0x0393AF20 CBZ X23, 0x393B014
	0x0393AF24 LDP V1, V0, [X31 + 0x20]
	0x0393AF28 MOVI V2.2D, 0xFFFFFFFFFFFFFFFF
	0x0393AF2C STR D2, [X23 + 0x50]
	0x0393AF30 STRB W31, [X23 + 0x4C]
	0x0393AF34 STUR V0, [X23 + 0x2C]
	0x0393AF38 STUR V1, [X23 + 0x1C]
	0x0393AF3C LDR W8, [X21 + 0x18]
	0x0393AF40 ADD W22, W22, 0x1
	0x0393AF44 CMP W22, W8
	0x0393AF48 B.LT 0x393AEFC
	0x0393AF4C MOV X0, X19
	0x0393AF50 MOV X1, X21
	0x0393AF54 MOV X2, X31
	0x0393AF58 BL 0x391A384
	0x0393AF5C LDR W8, [X21 + 0x18]
	0x0393AF60 CMP W8, 0x1
	0x0393AF64 B.LT 0x393AFE4
	0x0393AF68 ADRP X25, 0x814000
	0x0393AF6C LDR X22, [X19 + 0x60]
	0x0393AF70 LDR X25, [X25 + 0x590]
	0x0393AF74 MOV X24, X31
	0x0393AF78 ADD X26, X21, 0x20
	0x0393AF7C CMP W24, W8
	0x0393AF80 B.CS 0x393B010
	0x0393AF84 LDR X27, [X26, X24, LSL #3]
	0x0393AF88 CBZ X27, 0x393B014
	0x0393AF8C LDR X0, [X25]
	0x0393AF90 LDR X23, [X27 + 0x10]
	0x0393AF94 LDR W8, [X0 + 0xE0]
	0x0393AF98 CBNZ W8, 0x393AFA0
	0x0393AF9C BL 0x1C16DFC
	0x0393AFA0 ADD X8, X31, 0x20
	0x0393AFA4 MOV X0, X22
	0x0393AFA8 MOV X1, X23
	0x0393AFAC MOV X2, X20
	0x0393AFB0 MOV X3, X23
	0x0393AFB4 BL 0x393B018
	0x0393AFB8 LDR V0, [X31 + 0x20]
	0x0393AFBC LDUR V1, [X31 + 0x2C]
	0x0393AFC0 LDR V2, [X31 + 0x28]
	0x0393AFC4 ADD X24, X24, 0x1
	0x0393AFC8 UNIMPLEMENTED
	0x0393AFCC STUR D1, [X27 + 0x24]
	0x0393AFD0 STUR D0, [X27 + 0x2C]
	0x0393AFD4 STR S2, [X27 + 0x34]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA8000
	007 Move X20, 0x815000
	008 Move W8, [X21+2335]
	009 Move X20, [X20+3704]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x815000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move X0, 0x815000
	019 Move X0, [X0+3720]
	020 Call 0x1C17CF4
	021 Move X0, 0x815000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2335], W8
	026 Move X0, [X20]
	027 Move [X31+8], X31
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X0, [X8]
	035 Compare X0, 0
	036 JumpIfEqual {86}
	037 Move X8, 0x815000
	038 Move X8, [X8+3720]
	039 Add X2, X31, 8
	040 Move X1, X19
	041 Move X3, [X8]
	042 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {80}
	047 Move X21, [X31+8]
	048 Compare X21, 0
	049 JumpIfEqual {86}
	050 Move W8, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W22, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W22
	055 Move X0, [X8+32]
	056 Compare X0, 0
	057 JumpIfEqual {86}
	058 Move W2, 1
	059 Move X1, X19
	060 Move X3, X31
	061 Call Transform.SetParent, X0, X1, X2
	062 Move W8, [X21+24]
	063 Add W22, W22, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X0, [X8]
	073 Compare X0, 0
	074 JumpIfEqual {86}
	075 Move X8, 0x815000
	076 Move X8, [X8+3712]
	077 Move X1, X19
	078 Move X2, [X8]
	079 Call Dictionary`2<Object, Object>.Remove, X0, X1
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return 
	086 Call 0x1C17F20
	087 Call 0x1C17F28

Method: UnityEngine.ProBuilder.Vertex TransformVertex(UnityEngine.Transform transform, UnityEngine.ProBuilder.Vertex vertex)

Disassembly:
	0x0393AFD8 LDR W8, [X21 + 0x18]
	0x0393AFDC CMP W24, W8
	0x0393AFE0 B.LT 0x393AF7C
	0x0393AFE4 MOV X0, X19
	0x0393AFE8 MOV X1, X21
	0x0393AFEC MOV X2, X31
	0x0393AFF0 BL 0x391A384
	0x0393AFF4 LDP X20, X19, [X31 + 0x80]
	0x0393AFF8 LDP X22, X21, [X31 + 0x70]
	0x0393AFFC LDP X24, X23, [X31 + 0x60]
	0x0393B000 LDP X26, X25, [X31 + 0x50]
	0x0393B004 LDP X30, X27, [X31 + 0x40]
	0x0393B008 ADD X31, X31, 0x90
	0x0393B00C RET
	0x0393B010 BL 0x1C16F28
	0x0393B014 BL 0x1C16F20
	0x0393B018 STP D13, D12, [X31 - 0x80]!
	0x0393B01C STP D11, D10, [X31 + 0x10]
	0x0393B020 STP D9, D8, [X31 + 0x20]
	0x0393B024 STR X30, [X31 + 0x30]
	0x0393B028 STP X26, X25, [X31 + 0x40]
	0x0393B02C STP X24, X23, [X31 + 0x50]
	0x0393B030 STP X22, X21, [X31 + 0x60]
	0x0393B034 STP X20, X19, [X31 + 0x70]
	0x0393B038 ADRP X24, 0xAA6000
	0x0393B03C ADRP X25, 0x813000
	0x0393B040 MOV X19, X8
	0x0393B044 LDRB W8, [X24 + 0x92F]
	0x0393B048 LDR X25, [X25 + 0x590]
	0x0393B04C MOV X22, X3
	0x0393B050 MOV X23, X2
	0x0393B054 MOV X21, X1
	0x0393B058 MOV X20, X0
	0x0393B05C TBNZ X8, 0x0, 0x393B08C
	0x0393B060 ADRP X0, 0x812000
	0x0393B064 LDR X0, [X0 + 0xF50]
	0x0393B068 BL 0x1C16CF4
	0x0393B06C ADRP X0, 0x812000
	0x0393B070 LDR X0, [X0 + 0xA98]
	0x0393B074 BL 0x1C16CF4
	0x0393B078 ADRP X0, 0x813000
	0x0393B07C LDR X0, [X0 + 0x590]
	0x0393B080 BL 0x1C16CF4
	0x0393B084 MOVZ W8, 0x1
	0x0393B088 STRB W8, [X24 + 0x92F]
	0x0393B08C LDR X0, [X25]
	0x0393B090 LDR W8, [X0 + 0xE0]
	0x0393B094 CBNZ W8, 0x393B09C
	0x0393B098 BL 0x1C16DFC
	0x0393B09C MOVZ W1, 0x1
	0x0393B0A0 MOV X0, X21
	0x0393B0A4 BL 0x393B668
	0x0393B0A8 CBZ X20, 0x393B458
	0x0393B0AC ADRP X26, 0x812000
	0x0393B0B0 LDR X8, [X20]
	0x0393B0B4 LDR X26, [X26 + 0xA98]
	0x0393B0B8 MOV W24, W0
	0x0393B0BC LDRH W9, [X8 + 0x12E]
	0x0393B0C0 LDR X1, [X26]
	0x0393B0C4 CBZ X9, 0x393B0E8
	0x0393B0C8 LDR X10, [X8 + 0xB0]
	0x0393B0CC ADD X10, X10, 0x8
	0x0393B0D0 LDUR X11, [X10 - 0x8]
	0x0393B0D4 CMP X11, X1
	0x0393B0D8 B.EQ 0x393B0F8
	0x0393B0DC SUBS X9, X9, 0x1
	0x0393B0E0 ADD X10, X10, 0x10
	0x0393B0E4 B.NE 0x393B0D0
	0x0393B0E8 MOV X0, X20
	0x0393B0EC MOV W2, W31
	0x0393B0F0 BL 0x1C5C788
	0x0393B0F4 B 0x393B104
	0x0393B0F8 LDRSW X9, [X10]
	0x0393B0FC ADD X8, X8, X9, 0x4, LSL
	0x0393B100 ADD X0, X8, 0x138
	0x0393B104 LDP X8, X2, [X0]
	0x0393B108 MOV X0, X20
	0x0393B10C MOV W1, W24
	0x0393B110 BLR X8
	0x0393B114 MOV X0, X21
	0x0393B118 MOV W1, W31
	0x0393B11C MOV V8.16B, V0.16B
	0x0393B120 MOV V9.16B, V1.16B
	0x0393B124 BL 0x393B668
	0x0393B128 LDR X8, [X20]
	0x0393B12C LDR X1, [X26]
	0x0393B130 MOV W24, W0
	0x0393B134 LDRH W9, [X8 + 0x12E]
	0x0393B138 CBZ X9, 0x393B15C
	0x0393B13C LDR X10, [X8 + 0xB0]
	0x0393B140 ADD X10, X10, 0x8
	0x0393B144 LDUR X11, [X10 - 0x8]
	0x0393B148 CMP X11, X1
	0x0393B14C B.EQ 0x393B16C
	0x0393B150 SUBS X9, X9, 0x1
	0x0393B154 ADD X10, X10, 0x10
	0x0393B158 B.NE 0x393B144
	0x0393B15C MOV X0, X20
	0x0393B160 MOV W2, W31
	0x0393B164 BL 0x1C5C788
	0x0393B168 B 0x393B178
	0x0393B16C LDRSW X9, [X10]
	0x0393B170 ADD X8, X8, X9, 0x4, LSL
	0x0393B174 ADD X0, X8, 0x138
	0x0393B178 LDP X8, X2, [X0]
	0x0393B17C MOV X0, X20
	0x0393B180 MOV W1, W24
	0x0393B184 BLR X8
	0x0393B188 MOVZ W1, 0x1
	0x0393B18C MOV X0, X22
	0x0393B190 MOV V10.16B, V0.16B
	0x0393B194 MOV V11.16B, V1.16B
	0x0393B198 BL 0x393B668
	0x0393B19C CBZ X23, 0x393B458
	0x0393B1A0 LDR X8, [X23]
	0x0393B1A4 LDR X1, [X26]
	0x0393B1A8 MOV W24, W0
	0x0393B1AC LDRH W9, [X8 + 0x12E]
	0x0393B1B0 CBZ X9, 0x393B1D4
	0x0393B1B4 LDR X10, [X8 + 0xB0]
	0x0393B1B8 ADD X10, X10, 0x8
	0x0393B1BC LDUR X11, [X10 - 0x8]
	0x0393B1C0 CMP X11, X1
	0x0393B1C4 B.EQ 0x393B1E4
	0x0393B1C8 SUBS X9, X9, 0x1
	0x0393B1CC ADD X10, X10, 0x10
	0x0393B1D0 B.NE 0x393B1BC
	0x0393B1D4 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA8000
	007 Move X22, 0x815000
	008 Move W8, [X20+2336]
	009 Move X22, [X22+32]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x814000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2336], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Vertex..ctor, X0
	026 Compare X19, 0
	027 JumpIfEqual {182}
	028 Move W1, 1
	029 Move X0, X19
	030 Move X2, X31
	031 Call Vertex.HasArrays, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Compare X21, 0
	037 JumpIfEqual {182}
	038 Move S1, [X19+20]
	039 Move S2, [X19+24]
	040 Move V0, [X19+16]
	041 Move X0, X21
	042 Move X1, X31
	043 Call Transform.TransformPoint, X0, X1
	044 Compare X20, 0
	045 JumpIfEqual {182}
	046 Move X0, X20
	047 Move X1, X31
	048 Call Vertex.set_position, X0, X1
	049 Move W1, 32
	050 Move X0, X19
	051 Move X2, X31
	052 Call Vertex.HasArrays, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {66}
	057 Compare X20, 0
	058 JumpIfEqual {182}
	059 Move S2, [X19+36]
	060 Move S3, [X19+40]
	061 Move S0, [X19+28]
	062 Move S1, [X19+32]
	063 Move X0, X20
	064 Move X1, X31
	065 Call Vertex.set_color, X0, X1
	066 Move W1, 64
	067 Move X0, X19
	068 Move X2, X31
	069 Call Vertex.HasArrays, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {87}
	074 Compare X21, 0
	075 JumpIfEqual {182}
	076 Move S1, [X19+48]
	077 Move S2, [X19+52]
	078 Move V0, [X19+44]
	079 Move X0, X21
	080 Move X1, X31
	081 Call Transform.TransformDirection, X0, X1
	082 Compare X20, 0
	083 JumpIfEqual {182}
	084 Move X0, X20
	085 Move X1, X31
	086 Call Vertex.set_normal, X0, X1
	087 Move W1, 128
	088 Move X0, X19
	089 Move X2, X31
	090 Call Vertex.HasArrays, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {111}
	095 Compare X21, 0
	096 JumpIfEqual {182}
	097 Move X0, X21
	098 Move X1, X31
	099 Call Transform.get_rotation, X0
	100 Move S4, [X19+56]
	101 Move S5, [X19+60]
	102 Move V6, [X19+64]
	103 Move X0, X31
	104 Call Quaternion.op_Multiply, X0, X1
	105 Compare X20, 0
	106 JumpIfEqual {182}
	107 Move S3, W31
	108 Move X0, X20
	109 Move X1, X31
	110 Call Vertex.set_tangent, X0, X1
	111 Move W1, 2
	112 Move X0, X19
	113 Move X2, X31
	114 Call Vertex.HasArrays, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {126}
	119 Compare X20, 0
	120 JumpIfEqual {182}
	121 Move S0, [X19+72]
	122 Move S1, [X19+76]
	123 Move X0, X20
	124 Move X1, X31
	125 Call Vertex.set_uv0, X0, X1
	126 Move W1, 4
	127 Move X0, X19
	128 Move X2, X31
	129 Call Vertex.HasArrays, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {141}
	134 Compare X20, 0
	135 JumpIfEqual {182}
	136 Move S0, [X19+80]
	137 Move S1, [X19+84]
	138 Move X0, X20
	139 Move X1, X31
	140 Call Vertex.set_uv2, X0, X1
	141 Move W1, 8
	142 Move X0, X19
	143 Move X2, X31
	144 Call Vertex.HasArrays, X0, X1
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {158}
	149 Compare X20, 0
	150 JumpIfEqual {182}
	151 Move S2, [X19+96]
	152 Move S3, [X19+100]
	153 Move S0, [X19+88]
	154 Move S1, [X19+92]
	155 Move X0, X20
	156 Move X1, X31
	157 Call Vertex.set_uv3, X0, X1
	158 Move W1, 16
	159 Move X0, X19
	160 Move X2, X31
	161 Call Vertex.HasArrays, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {175}
	166 Compare X20, 0
	167 JumpIfEqual {182}
	168 Move S2, [X19+112]
	169 Move S3, [X19+116]
	170 Move S0, [X19+104]
	171 Move S1, [X19+108]
	172 Move X0, X20
	173 Move X1, X31
	174 Call Vertex.set_uv4, X0, X1
	175 Move X0, X20
	176 Move X20, [X31+32]
	177 Move X19, [X31+40]
	178 Move X22, [X31+16]
	179 Move X21, [X31+24]
	180 Move X30, [X31+48]
	181 Return X0
	182 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Vertex InverseTransformVertex(UnityEngine.Transform transform, UnityEngine.ProBuilder.Vertex vertex)

Disassembly:
	0x0393B1D8 MOV W2, W31
	0x0393B1DC BL 0x1C5C788
	0x0393B1E0 B 0x393B1F0
	0x0393B1E4 LDRSW X9, [X10]
	0x0393B1E8 ADD X8, X8, X9, 0x4, LSL
	0x0393B1EC ADD X0, X8, 0x138
	0x0393B1F0 LDP X8, X2, [X0]
	0x0393B1F4 MOV X0, X23
	0x0393B1F8 MOV W1, W24
	0x0393B1FC BLR X8
	0x0393B200 MOV X0, X22
	0x0393B204 MOV W1, W31
	0x0393B208 MOV V12.16B, V0.16B
	0x0393B20C MOV V13.16B, V1.16B
	0x0393B210 BL 0x393B668
	0x0393B214 LDR X8, [X23]
	0x0393B218 LDR X1, [X26]
	0x0393B21C MOV W24, W0
	0x0393B220 LDRH W9, [X8 + 0x12E]
	0x0393B224 CBZ X9, 0x393B248
	0x0393B228 LDR X10, [X8 + 0xB0]
	0x0393B22C ADD X10, X10, 0x8
	0x0393B230 LDUR X11, [X10 - 0x8]
	0x0393B234 CMP X11, X1
	0x0393B238 B.EQ 0x393B258
	0x0393B23C SUBS X9, X9, 0x1
	0x0393B240 ADD X10, X10, 0x10
	0x0393B244 B.NE 0x393B230
	0x0393B248 MOV X0, X23
	0x0393B24C MOV W2, W31
	0x0393B250 BL 0x1C5C788
	0x0393B254 B 0x393B264
	0x0393B258 LDRSW X9, [X10]
	0x0393B25C ADD X8, X8, X9, 0x4, LSL
	0x0393B260 ADD X0, X8, 0x138
	0x0393B264 LDP X8, X2, [X0]
	0x0393B268 MOV X0, X23
	0x0393B26C MOV W1, W24
	0x0393B270 FSUB S8, S8, S10
	0x0393B274 FSUB S9, S9, S11
	0x0393B278 BLR X8
	0x0393B27C ADRP X24, 0xA9D000
	0x0393B280 LDRB W8, [X24 + 0xA1E]
	0x0393B284 FSUB S11, S12, S0
	0x0393B288 FSUB S10, S13, S1
	0x0393B28C CBNZ W8, 0x393B2A4
	0x0393B290 ADRP X0, 0x7B8000
	0x0393B294 LDR X0, [X0 + 0x5A8]
	0x0393B298 BL 0x1C16CF4
	0x0393B29C MOVZ W8, 0x1
	0x0393B2A0 STRB W8, [X24 + 0xA1E]
	0x0393B2A4 ADRP X24, 0x7B8000
	0x0393B2A8 LDR X24, [X24 + 0x5A8]
	0x0393B2AC FMUL S0, S11, S11
	0x0393B2B0 FMUL S1, S10, S10
	0x0393B2B4 FADD S12, S0, S1
	0x0393B2B8 LDR X0, [X24]
	0x0393B2BC FMUL S0, S8, S8
	0x0393B2C0 FMUL S1, S9, S9
	0x0393B2C4 FADD S13, S0, S1
	0x0393B2C8 LDR W8, [X0 + 0xE0]
	0x0393B2CC CBNZ W8, 0x393B2D4
	0x0393B2D0 BL 0x1C16DFC
	0x0393B2D4 ADRP X8, 0xFFFFFFFFFD1AE000
	0x0393B2D8 LDR V1, [X8 + 0xFE8]
	0x0393B2DC FMUL S0, S13, S12
	0x0393B2E0 FSQRT S0, S0
	0x0393B2E4 FCMP S0, S1
	0x0393B2E8 FMOV S1, W31
	0x0393B2EC B.MI 0x393B33C
	0x0393B2F0 LDR X0, [X24]
	0x0393B2F4 FMUL S1, S8, S11
	0x0393B2F8 FMUL S2, S9, S10
	0x0393B2FC FADD S1, S1, S2
	0x0393B300 LDR W8, [X0 + 0xE0]
	0x0393B304 FDIV S0, S1, S0
	0x0393B308 FMOV S1, 1
	0x0393B30C FMOV S2, -1
	0x0393B310 FMIN S1, S0, S1
	0x0393B314 FCMP S0, S2
	0x0393B318 FCSEL S12, S1, S2, PL
	0x0393B31C CBNZ W8, 0x393B324
	0x0393B320 BL 0x1C16DFC
	0x0393B324 FCVT S0, S12
	0x0393B328 BL 0x3EB1B80
	0x0393B32C ADRP X8, 0xFFFFFFFFFD1AF000
	0x0393B330 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x0393B338 FMUL S1, S0, S1
	0x0393B33C FMUL S0, S9, S11
	0x0393B340 FMUL S2, S8, S10
	0x0393B344 MOVZ W8, 0x43B40000
	0x0393B348 FSUB S0, S0, S2
	0x0393B34C FMOV S2, W8
	0x0393B350 FSUB S2, S2, S1
	0x0393B354 FCMP S0, 0x0
	0x0393B358 FCSEL S12, S2, S1, MI
	0x0393B35C MOV X0, X23
	0x0393B360 CBZ X22, 0x393B374
	0x0393B364 MOV X1, X22
	0x0393B368 MOV X2, X31
	0x0393B36C BL 0x38F94CC
	0x0393B370 B 0x393B37C
	0x0393B374 MOV X1, X31
	0x0393B378 BL 0x38F9218
	0x0393B37C LDR X0, [X25]
	0x0393B380 ADRP X24, 0x812000
	0x0393B384 MOV V8.16B, V0.16B
	0x0393B388 MOV V9.16B, V1.16B
	0x0393B38C LDR W8, [X0 + 0xE0]
	0x0393B390 LDR X24, [X24 + 0xF50]
	0x0393B394 CBNZ W8, 0x393B39C
	0x0393B398 BL 0x1C16DFC
	0x0393B39C FNEG S2, S12
	0x0393B3A0 MOV X0, X23
	0x0393B3A4 MOV X1, X22
	0x0393B3A8 MOV V0.16B, V8.16B
	0x0393B3AC MOV V1.16B, V9.16B
	0x0393B3B0 BL 0x393B718
	0x0393B3B4 LDR X0, [X24]
	0x0393B3B8 MOV V10.16B, V0.16B
	0x0393B3BC MOV V11.16B, V1.16B
	0x0393B3C0 BL 0x1C16F10
	0x0393B3C4 MOV X22, X0
	0x0393B3C8 MOV X1, X20
	0x0393B3CC CBZ X21, 0x393B44C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA7000
	007 Move X22, 0x814000
	008 Move W8, [X20+2337]
	009 Move X22, [X22+32]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x814000
	017 Move X0, [X0+32]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2337], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Vertex..ctor, X0
	026 Compare X19, 0
	027 JumpIfEqual {180}
	028 Move W1, 1
	029 Move X0, X19
	030 Move X2, X31
	031 Call Vertex.HasArrays, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Compare X21, 0
	037 JumpIfEqual {180}
	038 Move S1, [X19+20]
	039 Move S2, [X19+24]
	040 Move V0, [X19+16]
	041 Move X0, X21
	042 Move X1, X31
	043 Call Transform.InverseTransformPoint, X0, X1
	044 Compare X20, 0
	045 JumpIfEqual {180}
	046 Move X0, X20
	047 Move X1, X31
	048 Call Vertex.set_position, X0, X1
	049 Move W1, 32
	050 Move X0, X19
	051 Move X2, X31
	052 Call Vertex.HasArrays, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {66}
	057 Compare X20, 0
	058 JumpIfEqual {180}
	059 Move S2, [X19+36]
	060 Move S3, [X19+40]
	061 Move S0, [X19+28]
	062 Move S1, [X19+32]
	063 Move X0, X20
	064 Move X1, X31
	065 Call Vertex.set_color, X0, X1
	066 Move W1, 64
	067 Move X0, X19
	068 Move X2, X31
	069 Call Vertex.HasArrays, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {87}
	074 Compare X21, 0
	075 JumpIfEqual {180}
	076 Move S1, [X19+48]
	077 Move S2, [X19+52]
	078 Move V0, [X19+44]
	079 Move X0, X21
	080 Move X1, X31
	081 Call Transform.InverseTransformDirection, X0, X1
	082 Compare X20, 0
	083 JumpIfEqual {180}
	084 Move X0, X20
	085 Move X1, X31
	086 Call Vertex.set_normal, X0, X1
	087 Move W1, 128
	088 Move X0, X19
	089 Move X2, X31
	090 Call Vertex.HasArrays, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {109}
	095 Compare X21, 0
	096 JumpIfEqual {180}
	097 Move S1, [X19+60]
	098 Move S2, [X19+64]
	099 Move V0, [X19+56]
	100 Move X0, X21
	101 Move X1, X31
	102 Call Transform.InverseTransformDirection, X0, X1
	103 Compare X20, 0
	104 JumpIfEqual {180}
	105 Move S3, W31
	106 Move X0, X20
	107 Move X1, X31
	108 Call Vertex.set_tangent, X0, X1
	109 Move W1, 2
	110 Move X0, X19
	111 Move X2, X31
	112 Call Vertex.HasArrays, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {124}
	117 Compare X20, 0
	118 JumpIfEqual {180}
	119 Move S0, [X19+72]
	120 Move S1, [X19+76]
	121 Move X0, X20
	122 Move X1, X31
	123 Call Vertex.set_uv0, X0, X1
	124 Move W1, 4
	125 Move X0, X19
	126 Move X2, X31
	127 Call Vertex.HasArrays, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {139}
	132 Compare X20, 0
	133 JumpIfEqual {180}
	134 Move S0, [X19+80]
	135 Move S1, [X19+84]
	136 Move X0, X20
	137 Move X1, X31
	138 Call Vertex.set_uv2, X0, X1
	139 Move W1, 8
	140 Move X0, X19
	141 Move X2, X31
	142 Call Vertex.HasArrays, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {156}
	147 Compare X20, 0
	148 JumpIfEqual {180}
	149 Move S2, [X19+96]
	150 Move S3, [X19+100]
	151 Move S0, [X19+88]
	152 Move S1, [X19+92]
	153 Move X0, X20
	154 Move X1, X31
	155 Call Vertex.set_uv3, X0, X1
	156 Move W1, 16
	157 Move X0, X19
	158 Move X2, X31
	159 Call Vertex.HasArrays, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {173}
	164 Compare X20, 0
	165 JumpIfEqual {180}
	166 Move S2, [X19+112]
	167 Move S3, [X19+116]
	168 Move S0, [X19+104]
	169 Move S1, [X19+108]
	170 Move X0, X20
	171 Move X1, X31
	172 Call Vertex.set_uv4, X0, X1
	173 Move X0, X20
	174 Move X20, [X31+32]
	175 Move X19, [X31+40]
	176 Move X22, [X31+16]
	177 Move X21, [X31+24]
	178 Move X30, [X31+48]
	179 Return X0
	180 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0393B3D0 MOV X2, X21
	0x0393B3D4 MOV X3, X31
	0x0393B3D8 BL 0x38F8640
	0x0393B3DC CBZ X22, 0x393B458
	0x0393B3E0 LDP S2, S3, [X22 + 0x18]
	0x0393B3E4 MOV V0.16B, V10.16B
	0x0393B3E8 MOV V1.16B, V11.16B
	0x0393B3EC MOV X0, X31
	0x0393B3F0 BL 0x3909CB4
	0x0393B3F4 LDP S4, S5, [X22 + 0x10]
	0x0393B3F8 LDP S2, S3, [X22 + 0x18]
	0x0393B3FC MOV X0, X31
	0x0393B400 FMUL S0, S4, S0
	0x0393B404 FMUL S1, S1, S5
	0x0393B408 FSUB S8, S8, S0
	0x0393B40C FSUB S9, S9, S1
	0x0393B410 MOV V0.16B, V10.16B
	0x0393B414 MOV V1.16B, V11.16B
	0x0393B418 BL 0x3909CB4
	0x0393B41C STP S8, S9, [X19]
	0x0393B420 STP S12, S0, [X19 + 0x8]
	0x0393B424 STR S1, [X19 + 0x10]
	0x0393B428 LDP X20, X19, [X31 + 0x70]
	0x0393B42C LDP X22, X21, [X31 + 0x60]
	0x0393B430 LDP X24, X23, [X31 + 0x50]
	0x0393B434 LDP X26, X25, [X31 + 0x40]
	0x0393B438 LDR X30, [X31 + 0x30]
	0x0393B43C LDP D9, D8, [X31 + 0x20]
	0x0393B440 LDP D11, D10, [X31 + 0x10]
	0x0393B444 LDP D13, D12, [X31], #0x80
	0x0393B448 RET
	0x0393B44C MOV X2, X31
	0x0393B450 BL 0x38F82D0
	0x0393B454 CBNZ X22, 0x393B3E0
	0x0393B458 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA7000
	007 Move X22, 0x814000
	008 Move X19, 0x814000
	009 Move X20, 0x814000
	010 Move W8, [X21+2338]
	011 Move X22, [X22+3728]
	012 Move X19, [X19+3736]
	013 Move X20, [X20+3704]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x814000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move X0, 0x814000
	022 Move X0, [X0+3728]
	023 Call 0x1C17CF4
	024 Move X0, 0x814000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2338], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

