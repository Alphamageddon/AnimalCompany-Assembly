Type: UnityEngine.ProBuilder.InternalUtility

Method: T[] GetComponents(UnityEngine.GameObject go)

Disassembly:
	0x0220E050 LDR X0, [X0 + 0x170]
	0x0220E054 BL 0x1C16CF4
	0x0220E058 ADRP X0, 0x1F0D000
	0x0220E05C LDR X0, [X0 + 0xFD8]
	0x0220E060 BL 0x1C16CF4
	0x0220E064 ADRP X0, 0x1F0D000
	0x0220E068 LDR X0, [X0 + 0xFE0]
	0x0220E06C BL 0x1C16CF4
	0x0220E070 ADRP X0, 0x1F0D000
	0x0220E074 LDR X0, [X0 + 0xFE8]
	0x0220E078 BL 0x1C16CF4
	0x0220E07C ADRP X0, 0x1F0D000
	0x0220E080 LDR X0, [X0 + 0xFF0]
	0x0220E084 BL 0x1C16CF4
	0x0220E088 ADRP X0, 0x1F0D000
	0x0220E08C LDR X0, [X0 + 0xFF8]
	0x0220E090 BL 0x1C16CF4
	0x0220E094 ADRP X0, 0x1F0E000
	0x0220E098 LDR X0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {25}
	013 Move X0, X20
	014 Move X1, X31
	015 Call GameObject.get_transform, X0
	016 Compare X0, 0
	017 JumpIfEqual {25}
	018 Move X8, [X19+56]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, [X8]
	022 Move X30, [X31+32]
	023 Call 0x21A553C, X0
	024 Return X0
	025 Call 0x1C17F20

Method: T[] GetComponents(System.Collections.Generic.IEnumerable`1<UnityEngine.Transform> transforms)

Disassembly:
	0x0220DD14 BL 0x1C16CF4
	0x0220DD18 ADRP X0, 0x1F0E000
	0x0220DD1C LDR X0, [X0 + 0xFE8]
	0x0220DD20 BL 0x1C16CF4
	0x0220DD24 ADRP X0, 0x1F0E000
	0x0220DD28 LDR X0, [X0 + 0xFF0]
	0x0220DD2C BL 0x1C16CF4
	0x0220DD30 ADRP X0, 0x1F0E000
	0x0220DD34 LDR X0, [X0 + 0xFF8]
	0x0220DD38 BL 0x1C16CF4
	0x0220DD3C ADRP X0, 0x1F0F000
	0x0220DD40 LDR X0, [X0]
	0x0220DD44 BL 0x1C16CF4
	0x0220DD48 ADRP X0, 0x1F0F000
	0x0220DD4C LDR X0, [X0 + 0x8]
	0x0220DD50 BL 0x1C16CF4
	0x0220DD54 ADRP X0, 0x1EE6000
	0x0220DD58 LDR X0, [X0 + 0x8F0]
	0x0220DD5C BL 0x1C16CF4
	0x0220DD60 ADRP X0, 0x1EE6000
	0x0220DD64 LDR X0, [X0 + 0x6C0]
	0x0220DD68 BL 0x1C16CF4
	0x0220DD6C LDR X8, [X20 + 0x38]
	0x0220DD70 CBNZ X8, 0x220DD7C
	0x0220DD74 MOV X0, X20
	0x0220DD78 BL 0x1C5C6E0
	0x0220DD7C ADRP X24, 0x1F0E000
	0x0220DD80 LDR X24, [X24 + 0xFF8]
	0x0220DD84 LDR X0, [X24]
	0x0220DD88 BL 0x1C16D0C
	0x0220DD8C LDR X8, [X0 + 0x18]
	0x0220DD90 CBNZ X8, 0x220DDCC
	0x0220DD94 ADRP X8, 0x1F0E000
	0x0220DD98 LDR X8, [X8 + 0xFF0]
	0x0220DD9C LDR X0, [X8]
	0x0220DDA0 BL 0x1C16F10
	0x0220DDA4 ADRP X8, 0x1F0E000
	0x0220DDA8 LDR X8, [X8 + 0xFD8]
	0x0220DDAC MOV X22, X0
	0x0220DDB0 LDR X1, [X8]
	0x0220DDB4 BL 0x2AA4804
	0x0220DDB8 LDR X0, [X24]
	0x0220DDBC BL 0x1C16D0C
	0x0220DDC0 STR X22, [X0 + 0x18]
	0x0220DDC4 LDR X0, [X24]
	0x0220DDC8 BL 0x1C16D0C
	0x0220DDCC LDR X0, [X24]
	0x0220DDD0 BL 0x1C16D0C
	0x0220DDD4 LDR X8, [X0 + 0x10]
	0x0220DDD8 CBNZ X8, 0x220DE14
	0x0220DDDC ADRP X8, 0x1F0E000
	0x0220DDE0 LDR X8, [X8 + 0xFE8]
	0x0220DDE4 LDR X0, [X8]
	0x0220DDE8 BL 0x1C16F10
	0x0220DDEC ADRP X8, 0x1F0E000
	0x0220DDF0 LDR X8, [X8 + 0xFE0]
	0x0220DDF4 MOV X22, X0
	0x0220DDF8 LDR X1, [X8]
	0x0220DDFC BL 0x2AA4804
	0x0220DE00 LDR X0, [X24]
	0x0220DE04 BL 0x1C16D0C
	0x0220DE08 STR X22, [X0 + 0x10]
	0x0220DE0C LDR X0, [X24]
	0x0220DE10 BL 0x1C16D0C
	0x0220DE14 LDR X0, [X24]
	0x0220DE18 BL 0x1C16D0C
	0x0220DE1C LDR X8, [X0 + 0x8]
	0x0220DE20 CBNZ X8, 0x220DE54
	0x0220DE24 ADRP X8, 0x1EE6000
	0x0220DE28 LDR X8, [X8 + 0x8F0]
	0x0220DE2C LDR X0, [X8]
	0x0220DE30 BL 0x1C16F10
	0x0220DE34 MOV X1, X31
	0x0220DE38 MOV X22, X0
	0x0220DE3C BL 0x3231AC4
	0x0220DE40 LDR X0, [X24]
	0x0220DE44 BL 0x1C16D0C
	0x0220DE48 STR X22, [X0 + 0x8]
	0x0220DE4C LDR X0, [X24]
	0x0220DE50 BL 0x1C16D0C
	0x0220DE54 LDR X0, [X24]
	0x0220DE58 BL 0x1C16D0C
	0x0220DE5C LDR X8, [X0]
	0x0220DE60 CBNZ X8, 0x220DE9C
	0x0220DE64 ADRP X8, 0x1F0F000
	0x0220DE68 LDR X8, [X8 + 0x8]
	0x0220DE6C LDR X0, [X8]
	0x0220DE70 BL 0x1C16F10
	0x0220DE74 ADRP X8, 0x1F0F000
	0x0220DE78 LDR X8, [X8]
	0x0220DE7C MOV X22, X0
	0x0220DE80 LDR X1, [X8]
	0x0220DE84 BL 0x2601D04
	0x0220DE88 LDR X0, [X24]
	0x0220DE8C BL 0x1C16D0C
	0x0220DE90 STR X22, [X0]
	0x0220DE94 LDR X0, [X24]
	0x0220DE98 BL 0x1C16D0C
	0x0220DE9C LDR X0, [X24]
	0x0220DEA0 BL 0x1C16D0C
	0x0220DEA4 LDR X0, [X0 + 0x8]
	0x0220DEA8 CBZ X0, 0x220E020
	0x0220DEAC MOV W1, W31
	0x0220DEB0 MOV X2, X31
	0x0220DEB4 BL 0x3232ADC
	0x0220DEB8 CBZ X21, 0x220E020
	0x0220DEBC LDR W8, [X21 + 0x10]
	0x0220DEC0 CMP W8, 0x1
	0x0220DEC4 B.LT 0x220DF5C
	0x0220DEC8 ADRP X25, 0x1EE8000
	0x0220DECC LDR X25, [X25 + 0x170]
	0x0220DED0 MOV W22, W31
	0x0220DED4 MOV X0, X21
	0x0220DED8 MOV W1, W22
	0x0220DEDC MOV X2, X31
	0x0220DEE0 BL 0x3222A1C
	0x0220DEE4 AND W8, W0, 0xFFFF
	0x0220DEE8 CMP W8, 0x22
	0x0220DEEC B.NE 0x220DF0C
	0x0220DEF0 MOVZ W0, 0x1
	0x0220DEF4 MOV W1, W22
	0x0220DEF8 MOV X2, X21
	0x0220DEFC MOV X3, X31
	0x0220DF00 BL 0x34887D0
	0x0220DF04 MOV W22, W0
	0x0220DF08 B 0x220DF4C
	0x0220DF0C MOV W23, W0
	0x0220DF10 LDR X0, [X25]
	0x0220DF14 LDR W8, [X0 + 0xE0]
	0x0220DF18 CBNZ W8, 0x220DF20
	0x0220DF1C BL 0x1C16DFC
	0x0220DF20 MOV W0, W23
	0x0220DF24 MOV X1, X31
	0x0220DF28 BL 0x3317FCC
	0x0220DF2C TBNZ X0, 0x0, 0x220DF4C
	0x0220DF30 LDR X0, [X24]
	0x0220DF34 BL 0x1C16D0C
	0x0220DF38 LDR X0, [X0 + 0x8]
	0x0220DF3C CBZ X0, 0x220E020
	0x0220DF40 MOV W1, W23
	0x0220DF44 MOV X2, X31
	0x0220DF48 BL 0x3233D30
	0x0220DF4C LDR W8, [X21 + 0x10]
	0x0220DF50 ADD W22, W22, 0x1
	0x0220DF54 CMP W22, W8
	0x0220DF58 B.LT 0x220DED4
	0x0220DF5C ADRP X8, 0x1EE6000
	0x0220DF60 LDR X8, [X8 + 0x6C0]
	0x0220DF64 LDR X0, [X8]
	0x0220DF68 LDR X8, [X20 + 0x38]
	0x0220DF6C LDR W9, [X0 + 0xE0]
	0x0220DF70 LDR X21, [X8]
	0x0220DF74 CBNZ W9, 0x220DF7C
	0x0220DF78 BL 0x1C16DFC
	0x0220DF7C MOV X0, X21
	0x0220DF80 MOV X1, X31
	0x0220DF84 BL 0x338C698
	0x0220DF88 LDR X8, [X24]
	0x0220DF8C MOV X21, X0
	0x0220DF90 MOV X0, X8
	0x0220DF94 BL 0x1C16D0C
	0x0220DF98 LDR X0, [X0 + 0x8]
	0x0220DF9C CBZ X0, 0x220E020
	0x0220DFA0 LDR X8, [X0]
	0x0220DFA4 LDP X9, X1, [X8 + 0x168]
	0x0220DFA8 BLR X9
	0x0220DFAC MOV X1, X0
	0x0220DFB0 MOV X0, X21
	0x0220DFB4 MOV X2, X31
	0x0220DFB8 BL 0x3488D2C
	0x0220DFBC LDR X8, [X20 + 0x38]
	0x0220DFC0 MOV X20, X0
	0x0220DFC4 LDR X1, [X8 + 0x8]
	0x0220DFC8 LDRB W8, [X1 + 0x135]
	0x0220DFCC TBNZ X8, 0x0, 0x220DFDC
	0x0220DFD0 MOV X0, X1
	0x0220DFD4 BL 0x1C5C684
	0x0220DFD8 MOV X1, X0
	0x0220DFDC CBZ X20, 0x220E020
	0x0220DFE0 LDR X8, [X20]
	0x0220DFE4 LDR X9, [X1 + 0x40]
	0x0220DFE8 MOV X0, X20
	0x0220DFEC LDR X8, [X8 + 0x40]
	0x0220DFF0 CMP X8, X9
	0x0220DFF4 B.NE 0x220E024
	0x0220DFF8 BL 0x1C16E08
	0x0220DFFC LDP V0, V1, [X0]
	0x0220E000 LDR V2, [X0 + 0x2]
	0x0220E004 LDP X22, X21, [X31 + 0x20]
	0x0220E008 LDP X24, X23, [X31 + 0x10]
	0x0220E00C STP V0, V1, [X19]
	0x0220E010 STR V2, [X19 + 0x2]
	0x0220E014 LDP X20, X19, [X31 + 0x30]
	0x0220E018 LDP X30, X25, [X31], #0x40
	0x0220E01C RET
	0x0220E020 BL 0x1C16F20
	0x0220E024 BL 0x1C171E0
	0x0220E028 STP X30, X25, [X31 - 0x40]!
	0x0220E02C STP X24, X23, [X31 + 0x10]
	0x0220E030 STP X22, X21, [X31 + 0x20]
	0x0220E034 STP X20, X19, [X31 + 0x30]
	0x0220E038 LDR X9, [X1 + 0x38]
	0x0220E03C MOV X20, X1
	0x0220E040 MOV X21, X0
	0x0220E044 MOV X19, X8
	0x0220E048 CBNZ X9, 0x220E0D4
	0x0220E04C ADRP X0, 0x1EE7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X1+56]
	008 Move X19, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {30}
	012 Move X0, 0x1EE7000
	013 Move X0, [X0+3584]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F0F000
	016 Move X0, [X0+4008]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F0F000
	019 Move X0, [X0+4016]
	020 Call 0x1C17CF4
	021 Move X0, 0x1EE7000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X19
	028 Call 0x1C5D6E0
	029 Move X8, [X19+56]
	030 Move X0, [X8]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X8, [X19+56]
	039 Move X20, X0
	040 Move X1, [X8+8]
	041 Call List`1<Object>..ctor, X0
	042 Compare X21, 0
	043 JumpIfEqual {175}
	044 Move X10, 0x1F0F000
	045 Move X8, [X21]
	046 Move X10, [X10+4008]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X21
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X21
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X21, X0
	068 Compare X0, 0
	069 JumpIfEqual {176}
	070 Move X22, 0x1EE7000
	071 Move X23, 0x1F0F000
	072 Move X22, [X22+3608]
	073 Move X23, [X23+4016]
	074 Move X8, [X21]
	075 Move X1, [X22]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X21
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X21
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {132}
	099 Move X8, [X21]
	100 Move X1, [X23]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X21
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {173}
	122 Move X8, [X19+56]
	123 Move X1, [X8+16]
	124 Call 0x21A553C, X0
	125 Move X1, X0
	126 Compare X20, 0
	127 JumpIfEqual {174}
	128 Move X8, [X19+56]
	129 Move X2, [X8+32]
	130 Move X0, X20
	131 Call List`1<Object>.AddRange, X0, X1
	132 Move X22, X31
	133 Compare X21, 0
	134 JumpIfEqual {158}
	135 Move X10, 0x1EE7000
	136 Move X8, [X21]
	137 Move X10, [X10+3584]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X21
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X22, 0
	159 JumpIfNotEqual {177}
	160 Compare X20, 0
	161 JumpIfEqual {175}
	162 Move X8, [X19+56]
	163 Move X0, X20
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X1, [X8+48]
	169 Move X30, [X31+48]
	170 Move X23, [X31+56]
	171 Call List`1<Object>.ToArray, X0
	172 Return X0
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X22
	178 Call 0x1C17F18
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X22, [X0]
	182 Call 0x3EB2AE0
	183 Move X19, X0
	184 Move X22, X31
	185 Move X19, X0
	186 Compare X21, 0
	187 JumpIfEqual {211}
	188 Move X10, 0x1EE7000
	189 Move X8, [X21]
	190 Move X10, [X10+3584]
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move X1, [X10]
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move X0, X21
	202 Move W2, W31
	203 Call 0x1C5D788
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X21
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Compare X22, 0
	212 JumpIfNotEqual {215}
	213 Move X0, X19
	214 Call 0x1D2D690
	215 Move X0, X22
	216 Call 0x1C17F18
	217 Call 0x1991590

Method: UnityEngine.GameObject EmptyGameObjectWithTransform(UnityEngine.Transform t)

Disassembly:
	0x03906ACC MOV V0.16B, V11.16B
	0x03906AD0 MOV W20, W0
	0x03906AD4 BL 0x3906A34
	0x03906AD8 CMP W20, W0
	0x03906ADC B.NE 0x3906B38
	0x03906AE0 LDR V0, [X19 + 0x4]
	0x03906AE4 BL 0x3906A34
	0x03906AE8 MOV V0.16B, V10.16B
	0x03906AEC MOV W20, W0
	0x03906AF0 BL 0x3906A34
	0x03906AF4 CMP W20, W0
	0x03906AF8 B.NE 0x3906B38
	0x03906AFC LDR V0, [X19 + 0x8]
	0x03906B00 BL 0x3906A34
	0x03906B04 MOV V0.16B, V9.16B
	0x03906B08 MOV W20, W0
	0x03906B0C BL 0x3906A34
	0x03906B10 CMP W20, W0
	0x03906B14 B.NE 0x3906B38
	0x03906B18 LDR V0, [X19 + 0xC]
	0x03906B1C BL 0x3906A34
	0x03906B20 MOV V0.16B, V8.16B
	0x03906B24 MOV W19, W0
	0x03906B28 BL 0x3906A34
	0x03906B2C CMP W19, W0
	0x03906B30 CSET W0, EQ
	0x03906B34 B 0x3906B3C
	0x03906B38 MOV W0, W31
	0x03906B3C LDP X20, X19, [X31 + 0x30]
	0x03906B40 LDR X30, [X31 + 0x20]
	0x03906B44 LDP D9, D8, [X31 + 0x10]
	0x03906B48 LDP D11, D10, [X31], #0x40
	0x03906B4C RET
	0x03906B50 STP X30, X21, [X31 - 0x20]!
	0x03906B54 STP X20, X19, [X31 + 0x10]
	0x03906B58 ADRP X21, 0xADB000
	0x03906B5C LDRB W8, [X21 + 0x7DF]
	0x03906B60 MOV X20, X1
	0x03906B64 MOV X19, X0
	0x03906B68 TBNZ X8, 0x0, 0x3906B8C
	0x03906B6C ADRP X0, 0x847000
	0x03906B70 LDR X0, [X0 + 0xEF8]
	0x03906B74 BL 0x1C16CF4
	0x03906B78 ADRP X0, 0x7F4000
	0x03906B7C LDR X0, [X0 + 0x9A0]
	0x03906B80 BL 0x1C16CF4
	0x03906B84 MOVZ W8, 0x1
	0x03906B88 STRB W8, [X21 + 0x7DF]
	0x03906B8C CBZ X20, 0x3906BE4
	0x03906B90 ADRP X8, 0x847000
	0x03906B94 LDR X8, [X8 + 0xEF8]
	0x03906B98 LDR X9, [X8]
	0x03906B9C LDR X8, [X20]
	0x03906BA0 CMP X8, X9
	0x03906BA4 B.NE 0x3906BD0
	0x03906BA8 MOV X0, X20
	0x03906BAC BL 0x1C16E08
	0x03906BB0 LDP S0, S1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xADC000
	006 Move X21, 0x7EE000
	007 Move W8, [X19+2004]
	008 Move X21, [X21+2648]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7EE000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2004], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X19, X0
	023 Call GameObject..ctor, X0
	024 Compare X19, 0
	025 JumpIfEqual {70}
	026 Move X0, X19
	027 Move X1, X31
	028 Call GameObject.get_transform, X0
	029 Compare X20, 0
	030 JumpIfEqual {70}
	031 Move X21, X0
	032 Move X0, X20
	033 Move X1, X31
	034 Call Transform.get_localPosition, X0
	035 Compare X21, 0
	036 JumpIfEqual {70}
	037 Move X0, X21
	038 Move X1, X31
	039 Call Transform.set_localPosition, X0, X1
	040 Move X0, X19
	041 Move X1, X31
	042 Call GameObject.get_transform, X0
	043 Move X21, X0
	044 Move X0, X20
	045 Move X1, X31
	046 Call Transform.get_localRotation, X0
	047 Compare X21, 0
	048 JumpIfEqual {70}
	049 Move X0, X21
	050 Move X1, X31
	051 Call Transform.set_localRotation, X0, X1
	052 Move X0, X19
	053 Move X1, X31
	054 Call GameObject.get_transform, X0
	055 Move X21, X0
	056 Move X0, X20
	057 Move X1, X31
	058 Call Transform.get_localScale, X0
	059 Compare X21, 0
	060 JumpIfEqual {70}
	061 Move X0, X21
	062 Move X1, X31
	063 Call Transform.set_localScale, X0, X1
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return X0
	070 Call 0x1C17F20

Method: UnityEngine.GameObject MeshGameObjectWithTransform(System.String name, UnityEngine.Transform t, UnityEngine.Mesh mesh, UnityEngine.Material mat, System.Boolean inheritParent)

Disassembly:
	0x03906BB4 LDP S2, S3, [X0 + 0x8]
	0x03906BB8 MOV X0, X19
	0x03906BBC BL 0x3906944
	0x03906BC0 TBZ X0, 0x0, 0x3906BCC
	0x03906BC4 MOVZ W0, 0x1
	0x03906BC8 B 0x3906BE8
	0x03906BCC LDR X8, [X20]
	0x03906BD0 ADRP X9, 0x7F4000
	0x03906BD4 LDR X9, [X9 + 0x9A0]
	0x03906BD8 LDR X9, [X9]
	0x03906BDC CMP X8, X9
	0x03906BE0 B.EQ 0x3906BF4
	0x03906BE4 MOV W0, W31
	0x03906BE8 LDP X20, X19, [X31 + 0x10]
	0x03906BEC LDP X30, X21, [X31], #0x20
	0x03906BF0 RET
	0x03906BF4 MOV X0, X20
	0x03906BF8 BL 0x1C16E08
	0x03906BFC LDP S0, S1, [X0]
	0x03906C00 LDP S2, S3, [X0 + 0x8]
	0x03906C04 MOV X0, X19
	0x03906C08 LDP X20, X19, [X31 + 0x10]
	0x03906C0C LDP X30, X21, [X31], #0x20
	0x03906C10 B 0x3906A9C
	0x03906C14 LDP S0, S1, [X0]
	0x03906C18 LDP S2, S3, [X0 + 0x8]
	0x03906C1C MOV X0, X31
	0x03906C20 B 0x393CEC0
	0x03906C24 RET
	0x03906C28 RET
	0x03906C2C STP X30, X21, [X31 - 0x20]!
	0x03906C30 STP X20, X19, [X31 + 0x10]
	0x03906C34 ADRP X21, 0xADB000
	0x03906C38 ADRP X20, 0x847000
	0x03906C3C LDRB W8, [X21 + 0x7E1]
	0x03906C40 LDR X20, [X20 + 0xAD0]
	0x03906C44 MOV W19, W0
	0x03906C48 TBNZ X8, 0x0, 0x3906C6C
	0x03906C4C ADRP X0, 0x847000
	0x03906C50 LDR X0, [X0 + 0xAD0]
	0x03906C54 BL 0x1C16CF4
	0x03906C58 ADRP X0, 0x847000
	0x03906C5C LDR X0, [X0 + 0xF00]
	0x03906C60 BL 0x1C16CF4
	0x03906C64 MOVZ W8, 0x1
	0x03906C68 STRB W8, [X21 + 0x7E1]
	0x03906C6C LDR X0, [X20]
	0x03906C70 LDR W8, [X0 + 0xE0]
	0x03906C74 CBNZ W8, 0x3906C80
	0x03906C78 BL 0x1C16DFC
	0x03906C7C LDR X0, [X20]
	0x03906C80 LDR X8, [X0 + 0xB8]
	0x03906C84 LDR X0, [X8]
	0x03906C88 CBZ X0, 0x3906CB8
	0x03906C8C ADRP X9, 0x847000
	0x03906C90 LDR X9, [X9 + 0xF00]
	0x03906C94 LDR W1, [X8 + 0x8]
	0x03906C98 LDR X2, [X9]
	0x03906C9C BL 0x260141C
	0x03906CA0 LDR X8, [X20]
	0x03906CA4 LDR X8, [X8 + 0xB8]
	0x03906CA8 STR W19, [X8 + 0x8]
	0x03906CAC LDP X20, X19, [X31 + 0x10]
	0x03906CB0 LDP X30, X21, [X31], #0x20
	0x03906CB4 RET
	0x03906CB8 BL 0x1C16F20
	0x03906CBC STR X30, [X31 - 0x20]!
	0x03906CC0 STP X20, X19, [X31 + 0x10]
	0x03906CC4 ADRP X20, 0xADB000
	0x03906CC8 ADRP X19, 0x847000
	0x03906CCC LDRB W8, [X20 + 0x7E2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xADC000
	010 Move W8, [X20+2005]
	011 Move W21, W4
	012 Move X22, X3
	013 Move X23, X2
	014 Move X19, X1
	015 Move X24, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x7F5000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0x7F5000
	024 Move X0, [X0+1784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2005], W8
	028 Move X0, X19
	029 Call InternalUtility.EmptyGameObjectWithTransform, X0
	030 Compare X0, 0
	031 JumpIfEqual {90}
	032 Move X25, 0x7F5000
	033 Move X25, [X25+1776]
	034 Move X1, X24
	035 Move X2, X31
	036 Move X20, X0
	037 Call Object.set_name, X0, X1
	038 Move X1, [X25]
	039 Move X0, X20
	040 Call 0x21E61FC, X0
	041 Compare X0, 0
	042 JumpIfEqual {90}
	043 Move X24, 0x7F5000
	044 Move X24, [X24+1784]
	045 Move X1, X23
	046 Move X2, X31
	047 Call MeshFilter.set_sharedMesh, X0, X1
	048 Move X1, [X24]
	049 Move X0, X20
	050 Call 0x21E61FC, X0
	051 Compare X0, 0
	052 JumpIfEqual {90}
	053 Move X1, X22
	054 Move X2, X31
	055 Call Renderer.set_sharedMaterial, X0, X1
	056 Move W1, 61
	057 Move X0, X20
	058 Move X2, X31
	059 Call Object.set_hideFlags, X0, X1
	060 Move TEMP, X21
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {80}
	064 Move X0, X20
	065 Move X1, X31
	066 Call GameObject.get_transform, X0
	067 Compare X19, 0
	068 JumpIfEqual {90}
	069 Move X21, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Call Transform.get_parent, X0
	073 Compare X21, 0
	074 JumpIfEqual {90}
	075 Move X1, X0
	076 Move X0, X21
	077 Move W2, W31
	078 Move X3, X31
	079 Call Transform.SetParent, X0, X1, X2
	080 Move X0, X20
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Call 0x1C17F20

Method: T NextEnumValue(T current)

Disassembly:
	0x0220E09C BL 0x1C16CF4
	0x0220E0A0 ADRP X0, 0x1F0E000
	0x0220E0A4 LDR X0, [X0 + 0x8]
	0x0220E0A8 BL 0x1C16CF4
	0x0220E0AC ADRP X0, 0x1EE5000
	0x0220E0B0 LDR X0, [X0 + 0x8F0]
	0x0220E0B4 BL 0x1C16CF4
	0x0220E0B8 ADRP X0, 0x1EE5000
	0x0220E0BC LDR X0, [X0 + 0x6C0]
	0x0220E0C0 BL 0x1C16CF4
	0x0220E0C4 LDR X8, [X20 + 0x38]
	0x0220E0C8 CBNZ X8, 0x220E0D4
	0x0220E0CC MOV X0, X20
	0x0220E0D0 BL 0x1C5C6E0
	0x0220E0D4 ADRP X24, 0x1F0D000
	0x0220E0D8 LDR X24, [X24 + 0xFF8]
	0x0220E0DC LDR X0, [X24]
	0x0220E0E0 BL 0x1C16D0C
	0x0220E0E4 LDR X8, [X0 + 0x18]
	0x0220E0E8 CBNZ X8, 0x220E124
	0x0220E0EC ADRP X8, 0x1F0D000
	0x0220E0F0 LDR X8, [X8 + 0xFF0]
	0x0220E0F4 LDR X0, [X8]
	0x0220E0F8 BL 0x1C16F10
	0x0220E0FC ADRP X8, 0x1F0D000
	0x0220E100 LDR X8, [X8 + 0xFD8]
	0x0220E104 MOV X22, X0
	0x0220E108 LDR X1, [X8]
	0x0220E10C BL 0x2AA4804
	0x0220E110 LDR X0, [X24]
	0x0220E114 BL 0x1C16D0C
	0x0220E118 STR X22, [X0 + 0x18]
	0x0220E11C LDR X0, [X24]
	0x0220E120 BL 0x1C16D0C
	0x0220E124 LDR X0, [X24]
	0x0220E128 BL 0x1C16D0C
	0x0220E12C LDR X8, [X0 + 0x10]
	0x0220E130 CBNZ X8, 0x220E16C
	0x0220E134 ADRP X8, 0x1F0D000
	0x0220E138 LDR X8, [X8 + 0xFE8]
	0x0220E13C LDR X0, [X8]
	0x0220E140 BL 0x1C16F10
	0x0220E144 ADRP X8, 0x1F0D000
	0x0220E148 LDR X8, [X8 + 0xFE0]
	0x0220E14C MOV X22, X0
	0x0220E150 LDR X1, [X8]
	0x0220E154 BL 0x2AA4804
	0x0220E158 LDR X0, [X24]
	0x0220E15C BL 0x1C16D0C
	0x0220E160 STR X22, [X0 + 0x10]
	0x0220E164 LDR X0, [X24]
	0x0220E168 BL 0x1C16D0C
	0x0220E16C LDR X0, [X24]
	0x0220E170 BL 0x1C16D0C
	0x0220E174 LDR X8, [X0 + 0x8]
	0x0220E178 CBNZ X8, 0x220E1AC
	0x0220E17C ADRP X8, 0x1EE5000
	0x0220E180 LDR X8, [X8 + 0x8F0]
	0x0220E184 LDR X0, [X8]
	0x0220E188 BL 0x1C16F10
	0x0220E18C MOV X1, X31
	0x0220E190 MOV X22, X0
	0x0220E194 BL 0x3231AC4
	0x0220E198 LDR X0, [X24]
	0x0220E19C BL 0x1C16D0C
	0x0220E1A0 STR X22, [X0 + 0x8]
	0x0220E1A4 LDR X0, [X24]
	0x0220E1A8 BL 0x1C16D0C
	0x0220E1AC LDR X0, [X24]
	0x0220E1B0 BL 0x1C16D0C
	0x0220E1B4 LDR X8, [X0]
	0x0220E1B8 CBNZ X8, 0x220E1F4
	0x0220E1BC ADRP X8, 0x1F0E000
	0x0220E1C0 LDR X8, [X8 + 0x8]
	0x0220E1C4 LDR X0, [X8]
	0x0220E1C8 BL 0x1C16F10
	0x0220E1CC ADRP X8, 0x1F0E000
	0x0220E1D0 LDR X8, [X8]
	0x0220E1D4 MOV X22, X0
	0x0220E1D8 LDR X1, [X8]
	0x0220E1DC BL 0x2601D04
	0x0220E1E0 LDR X0, [X24]
	0x0220E1E4 BL 0x1C16D0C
	0x0220E1E8 STR X22, [X0]
	0x0220E1EC LDR X0, [X24]
	0x0220E1F0 BL 0x1C16D0C
	0x0220E1F4 LDR X0, [X24]
	0x0220E1F8 BL 0x1C16D0C
	0x0220E1FC LDR X0, [X0 + 0x8]
	0x0220E200 CBZ X0, 0x220E380
	0x0220E204 MOV W1, W31
	0x0220E208 MOV X2, X31
	0x0220E20C BL 0x3232ADC
	0x0220E210 CBZ X21, 0x220E380
	0x0220E214 LDR W8, [X21 + 0x10]
	0x0220E218 CMP W8, 0x1
	0x0220E21C B.LT 0x220E2B4
	0x0220E220 ADRP X25, 0x1EE7000
	0x0220E224 LDR X25, [X25 + 0x170]
	0x0220E228 MOV W22, W31
	0x0220E22C MOV X0, X21
	0x0220E230 MOV W1, W22
	0x0220E234 MOV X2, X31
	0x0220E238 BL 0x3222A1C
	0x0220E23C AND W8, W0, 0xFFFF
	0x0220E240 CMP W8, 0x22
	0x0220E244 B.NE 0x220E264
	0x0220E248 MOVZ W0, 0x1
	0x0220E24C MOV W1, W22
	0x0220E250 MOV X2, X21
	0x0220E254 MOV X3, X31
	0x0220E258 BL 0x34887D0
	0x0220E25C MOV W22, W0
	0x0220E260 B 0x220E2A4
	0x0220E264 MOV W23, W0
	0x0220E268 LDR X0, [X25]
	0x0220E26C LDR W8, [X0 + 0xE0]
	0x0220E270 CBNZ W8, 0x220E278
	0x0220E274 BL 0x1C16DFC
	0x0220E278 MOV W0, W23
	0x0220E27C MOV X1, X31
	0x0220E280 BL 0x3317FCC
	0x0220E284 TBNZ X0, 0x0, 0x220E2A4
	0x0220E288 LDR X0, [X24]
	0x0220E28C BL 0x1C16D0C
	0x0220E290 LDR X0, [X0 + 0x8]
	0x0220E294 CBZ X0, 0x220E380
	0x0220E298 MOV W1, W23
	0x0220E29C MOV X2, X31
	0x0220E2A0 BL 0x3233D30
	0x0220E2A4 LDR W8, [X21 + 0x10]
	0x0220E2A8 ADD W22, W22, 0x1
	0x0220E2AC CMP W22, W8
	0x0220E2B0 B.LT 0x220E22C
	0x0220E2B4 ADRP X8, 0x1EE5000
	0x0220E2B8 LDR X8, [X8 + 0x6C0]
	0x0220E2BC LDR X0, [X8]
	0x0220E2C0 LDR X8, [X20 + 0x38]
	0x0220E2C4 LDR W9, [X0 + 0xE0]
	0x0220E2C8 LDR X21, [X8]
	0x0220E2CC CBNZ W9, 0x220E2D4
	0x0220E2D0 BL 0x1C16DFC
	0x0220E2D4 MOV X0, X21
	0x0220E2D8 MOV X1, X31
	0x0220E2DC BL 0x338C698
	0x0220E2E0 LDR X8, [X24]
	0x0220E2E4 MOV X21, X0
	0x0220E2E8 MOV X0, X8
	0x0220E2EC BL 0x1C16D0C
	0x0220E2F0 LDR X0, [X0 + 0x8]
	0x0220E2F4 CBZ X0, 0x220E380
	0x0220E2F8 LDR X8, [X0]
	0x0220E2FC LDP X9, X1, [X8 + 0x168]
	0x0220E300 BLR X9
	0x0220E304 MOV X1, X0
	0x0220E308 MOV X0, X21
	0x0220E30C MOV X2, X31
	0x0220E310 BL 0x3488D2C
	0x0220E314 LDR X8, [X20 + 0x38]
	0x0220E318 MOV X20, X0
	0x0220E31C LDR X1, [X8 + 0x8]
	0x0220E320 LDRB W8, [X1 + 0x135]
	0x0220E324 TBNZ X8, 0x0, 0x220E334
	0x0220E328 MOV X0, X1
	0x0220E32C BL 0x1C5C684
	0x0220E330 MOV X1, X0
	0x0220E334 CBZ X20, 0x220E380
	0x0220E338 LDR X8, [X20]
	0x0220E33C LDR X9, [X1 + 0x40]
	0x0220E340 MOV X0, X20
	0x0220E344 LDR X8, [X8 + 0x40]
	0x0220E348 CMP X8, X9
	0x0220E34C B.NE 0x220E384
	0x0220E350 BL 0x1C16E08
	0x0220E354 LDR X8, [X0 + 0x30]
	0x0220E358 LDP V2, V0, [X0 + 0x10]
	0x0220E35C LDR V1, [X0]
	0x0220E360 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-40], X8
	017 Move X8, [X8+40]
	018 Move X20, X2
	019 Move X23, X0
	020 Move [X29-8], X8
	021 Move [X29-32], X0
	022 Move X9, [X2+56]
	023 Move [X29-48], X1
	024 Compare X9, 0
	025 JumpIfNotEqual {35}
	026 Move X0, 0x1EE6000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X9, [X20+56]
	030 Compare X9, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X20
	033 Call 0x1C5D6E0
	034 Move X9, [X20+56]
	035 Move X8, [X9]
	036 Add X10, X8, 309
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move TEMP, X10
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {48}
	042 Move X0, X8
	043 Call 0x1C5D684
	044 Move X9, [X20+56]
	045 Move X8, [X9]
	046 Add X10, X8, 309
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X0, X8
	049 Move W11, [X0+252]
	050 Add X12, X31, 0
	051 Add W11, W11, 16
	052 Add X11, X11, 15
	053 And X11, X11, 0x1FFFFFFFF
	054 Subtract X25, X12, X11
	055 Add X31, X25, 0
	056 Move TEMP, X10
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {66}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X9, [X20+56]
	063 Move X8, [X9]
	064 Add X10, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X0, X8
	067 Move W11, [X0+252]
	068 Add X12, X31, 0
	069 Add W11, W11, 16
	070 Add X11, X11, 15
	071 And X11, X11, 0x1FFFFFFFF
	072 Subtract X24, X12, X11
	073 Add X31, X24, 0
	074 Move W21, [X8+252]
	075 Add X11, X31, 0
	076 Add X12, X21, 15
	077 And X12, X12, 0x1FFFFFFFF
	078 Subtract X22, X11, X12
	079 Add X31, X22, 0
	080 Move TEMP, X10
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {88}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X9, [X20+56]
	087 Move X8, X0
	088 Move X10, [X9]
	089 Move X1, [X9+8]
	090 Subtract X9, X29, 32
	091 Subtract X5, X29, 16
	092 Move X0, X8
	093 Move W10, [X10+40]
	094 Move X2, X25
	095 Move X4, X31
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 Call 0x1C18728
	099 Move X8, 0x1EE6000
	100 Move X8, [X8+3576]
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X23
	108 Move X1, X31
	109 Call Enum.GetValues, X0
	110 Compare X0, 0
	111 JumpIfEqual {205}
	112 Move X1, X31
	113 Move X23, X0
	114 Call Array.get_Length, X0
	115 Move W25, W0
	116 Move W26, W31
	117 NotImplemented "Instruction BIC not yet implemented."
	118 Subtract X28, X29, 32
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X23
	121 Move W1, W26
	122 Move X2, X31
	123 Call Array.GetValue, X0, X1
	124 Move X9, [X20+56]
	125 Move X27, X0
	126 Move X8, [X9]
	127 Move W10, [X8+309]
	128 Move TEMP, X10
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {136}
	132 Move X0, X8
	133 Call 0x1C5D684
	134 Move X9, [X20+56]
	135 Move X8, X0
	136 Move X10, [X9]
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 Move X1, [X9+16]
	139 Subtract X4, X29, 16
	140 Move W10, [X10+40]
	141 Subtract X5, X29, 20
	142 Move X0, X8
	143 Move X2, X24
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSEL not yet implemented."
	146 Move [X29-16], X27
	147 Call 0x1C18728
	148 NotImplemented "Instruction LDURB not yet implemented."
	149 Add W26, W26, 1
	150 Compare W8, 0
	151 JumpIfEqual {119}
	152 NotImplemented "Instruction SDIV not yet implemented."
	153 NotImplemented "Instruction MSUB not yet implemented."
	154 Move X0, X23
	155 Move X2, X31
	156 Call Array.GetValue, X0, X1
	157 Move X8, [X20+56]
	158 Move X20, X0
	159 Move X1, [X8]
	160 Move W8, [X1+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {168}
	165 Move X0, X1
	166 Call 0x1C5D684
	167 Move X1, X0
	168 Move X0, X20
	169 Move X2, X22
	170 Call 0x1C17E10
	171 Move X1, X0
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 Move X8, [X20+56]
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 Move X0, X22
	176 Move X2, X21
	177 Move X8, [X8]
	178 Move W8, [X8+40]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X8, X29, 32
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Call 0x3EB2AC0
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Move X1, X22
	185 Move X2, X21
	186 Call 0x3EB2AC0
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move X8, [X8+40]
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X31, X29, 0
	192 Move X20, [X31+80]
	193 Move X19, [X31+88]
	194 Move X22, [X31+64]
	195 Move X21, [X31+72]
	196 Move X24, [X31+48]
	197 Move X23, [X31+56]
	198 Move X26, [X31+32]
	199 Move X25, [X31+40]
	200 Move X28, [X31+16]
	201 Move X27, [X31+24]
	202 Move X29, [X31+96]
	203 Move X30, [X31+104]
	204 Return X0
	205 Call 0x1C17F20
	206 Call 0x3EB2B20

Method: System.String ControlKeyString(System.Char character)

Disassembly:
	0x03906CD0 LDR X19, [X19 + 0xAD0]
	0x03906CD4 TBNZ X8, 0x0, 0x3906CF8
	0x03906CD8 ADRP X0, 0x847000
	0x03906CDC LDR X0, [X0 + 0xAD0]
	0x03906CE0 BL 0x1C16CF4
	0x03906CE4 ADRP X0, 0x847000
	0x03906CE8 LDR X0, [X0 + 0xF08]
	0x03906CEC BL 0x1C16CF4
	0x03906CF0 MOVZ W8, 0x1
	0x03906CF4 STRB W8, [X20 + 0x7E2]
	0x03906CF8 LDR X0, [X19]
	0x03906CFC LDR W8, [X0 + 0xE0]
	0x03906D00 CBNZ W8, 0x3906D0C
	0x03906D04 BL 0x1C16DFC
	0x03906D08 LDR X0, [X19]
	0x03906D0C LDR X8, [X0 + 0xB8]
	0x03906D10 LDR X0, [X8]
	0x03906D14 CBZ X0, 0x3906D40
	0x03906D18 ADRP X8, 0x847000
	0x03906D1C LDR X8, [X8 + 0xF08]
	0x03906D20 LDR X1, [X8]
	0x03906D24 BL 0x26013CC
	0x03906D28 LDR X8, [X19]
	0x03906D2C LDP X20, X19, [X31 + 0x10]
	0x03906D30 LDR X8, [X8 + 0xB8]
	0x03906D34 STR W0, [X8 + 0x8]
	0x03906D38 LDR X30, [X31], #0x20
	0x03906D3C RET
	0x03906D40 BL 0x1C16F20
	0x03906D44 STP X30, X21, [X31 - 0x20]!
	0x03906D48 STP X20, X19, [X31 + 0x10]
	0x03906D4C ADRP X21, 0xADB000
	0x03906D50 ADRP X20, 0x847000
	0x03906D54 LDRB W8, [X21 + 0x7E3]
	0x03906D58 LDR X20, [X20 + 0xAD0]
	0x03906D5C MOV W19, W0
	0x03906D60 TBNZ X8, 0x0, 0x3906D78
	0x03906D64 ADRP X0, 0x847000
	0x03906D68 LDR X0, [X0 + 0xAD0]
	0x03906D6C BL 0x1C16CF4
	0x03906D70 MOVZ W8, 0x1
	0x03906D74 STRB W8, [X21 + 0x7E3]
	0x03906D78 LDR X0, [X20]
	0x03906D7C LDR W8, [X0 + 0xE0]
	0x03906D80 CBNZ W8, 0x3906D8C
	0x03906D84 BL 0x1C16DFC
	0x03906D88 LDR X0, [X20]
	0x03906D8C LDR X8, [X0 + 0xB8]
	0x03906D90 STR W19, [X8 + 0x8]
	0x03906D94 LDP X20, X19, [X31 + 0x10]
	0x03906D98 LDP X30, X21, [X31], #0x20
	0x03906D9C RET
	0x03906DA0 STP X30, X21, [X31 - 0x20]!
	0x03906DA4 STP X20, X19, [X31 + 0x10]
	0x03906DA8 ADRP X21, 0xADB000
	0x03906DAC ADRP X20, 0x847000
	0x03906DB0 LDRB W8, [X21 + 0x7E4]
	0x03906DB4 LDR X20, [X20 + 0xAD0]
	0x03906DB8 MOV W19, W0
	0x03906DBC TBNZ X8, 0x0, 0x3906DD4
	0x03906DC0 ADRP X0, 0x847000
	0x03906DC4 LDR X0, [X0 + 0xAD0]
	0x03906DC8 BL 0x1C16CF4
	0x03906DCC MOVZ W8, 0x1
	0x03906DD0 STRB W8, [X21 + 0x7E4]
	0x03906DD4 LDR X0, [X20]
	0x03906DD8 LDR W8, [X0 + 0xE0]
	0x03906DDC CBNZ W8, 0x3906DE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xADC000
	005 Move W8, [X20+2006]
	006 Move W19, W0
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x7F0000
	013 Move X0, [X0+368]
	014 Call 0x1C17CF4
	015 Move X0, 0x842000
	016 Move X0, [X0+1488]
	017 Call 0x1C17CF4
	018 Move X0, 0x842000
	019 Move X0, [X0+1648]
	020 Call 0x1C17CF4
	021 Move X0, 0x842000
	022 Move X0, [X0+1528]
	023 Call 0x1C17CF4
	024 Move X0, 0x842000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2006], W8
	029 And W8, W19, 0xFFFF
	030 Move W9, 0x2324
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W9, 0x2325
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, 0x232B
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, 0x2387
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x842000
	039 Move X8, [X8+1488]
	040 Move W9, 0x21E7
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, 0x2318
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x842000
	045 Move X8, [X8+1528]
	046 Move X8, 0x842000
	047 Move X8, [X8+1648]
	048 Move X8, 0x842000
	049 Move X8, [X8+1448]
	050 Move X0, [X8]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0
	055 Move X8, 0x7F0000
	056 Move X8, [X8+368]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add X0, X31, 12
	063 Move X1, X31
	064 Call Char.ToString, X0

Method: System.Boolean TryParseColor(System.String value, ref UnityEngine.Color col)

Disassembly:
	0x03906DE0 BL 0x1C16DFC
	0x03906DE4 LDR X0, [X20]
	0x03906DE8 LDR X8, [X0 + 0xB8]
	0x03906DEC STR W19, [X8 + 0xC]
	0x03906DF0 LDP X20, X19, [X31 + 0x10]
	0x03906DF4 LDP X30, X21, [X31], #0x20
	0x03906DF8 RET
	0x03906DFC STP X30, X21, [X31 - 0x20]!
	0x03906E00 STP X20, X19, [X31 + 0x10]
	0x03906E04 ADRP X21, 0xADB000
	0x03906E08 ADRP X20, 0x847000
	0x03906E0C LDRB W8, [X21 + 0x7E5]
	0x03906E10 LDR X20, [X20 + 0xAD0]
	0x03906E14 MOV X19, X0
	0x03906E18 TBNZ X8, 0x0, 0x3906E30
	0x03906E1C ADRP X0, 0x847000
	0x03906E20 LDR X0, [X0 + 0xAD0]
	0x03906E24 BL 0x1C16CF4
	0x03906E28 MOVZ W8, 0x1
	0x03906E2C STRB W8, [X21 + 0x7E5]
	0x03906E30 LDR X0, [X20]
	0x03906E34 LDR W8, [X0 + 0xE0]
	0x03906E38 CBNZ W8, 0x3906E44
	0x03906E3C BL 0x1C16DFC
	0x03906E40 LDR X0, [X20]
	0x03906E44 LDR X8, [X0 + 0xB8]
	0x03906E48 STR X19, [X8 + 0x10]
	0x03906E4C LDP X20, X19, [X31 + 0x10]
	0x03906E50 LDP X30, X21, [X31], #0x20
	0x03906E54 RET
	0x03906E58 STP X30, X21, [X31 - 0x20]!
	0x03906E5C STP X20, X19, [X31 + 0x10]
	0x03906E60 ADRP X20, 0xADB000
	0x03906E64 ADRP X21, 0x847000
	0x03906E68 LDRB W8, [X20 + 0x7E6]
	0x03906E6C LDR X21, [X21 + 0xAD0]
	0x03906E70 MOV X19, X0
	0x03906E74 TBNZ X8, 0x0, 0x3906E8C
	0x03906E78 ADRP X0, 0x847000
	0x03906E7C LDR X0, [X0 + 0xAD0]
	0x03906E80 BL 0x1C16CF4
	0x03906E84 MOVZ W8, 0x1
	0x03906E88 STRB W8, [X20 + 0x7E6]
	0x03906E8C LDR X0, [X21]
	0x03906E90 LDR W8, [X0 + 0xE0]
	0x03906E94 CBNZ W8, 0x3906E9C
	0x03906E98 BL 0x1C16DFC
	0x03906E9C MOV X0, X19
	0x03906EA0 LDP X20, X19, [X31 + 0x10]
	0x03906EA4 MOVZ W1, 0x3
	0x03906EA8 LDP X30, X21, [X31], #0x20
	0x03906EAC B 0x3906EB0
	0x03906EB0 STR X30, [X31 - 0x30]!
	0x03906EB4 STP X22, X21, [X31 + 0x10]
	0x03906EB8 STP X20, X19, [X31 + 0x20]
	0x03906EBC ADRP X22, 0xADB000
	0x03906EC0 ADRP X21, 0x847000
	0x03906EC4 LDRB W8, [X22 + 0x7ED]
	0x03906EC8 LDR X21, [X21 + 0xAD0]
	0x03906ECC MOV W20, W1
	0x03906ED0 MOV X19, X0
	0x03906ED4 TBNZ X8, 0x0, 0x3906EEC
	0x03906ED8 ADRP X0, 0x847000
	0x03906EDC LDR X0, [X0 + 0xAD0]
	0x03906EE0 BL 0x1C16CF4
	0x03906EE4 MOVZ W8, 0x1
	0x03906EE8 STRB W8, [X22 + 0x7ED]
	0x03906EEC LDR X0, [X21]
	0x03906EF0 LDR W8, [X0 + 0xE0]
	0x03906EF4 CBNZ W8, 0x3906F00
	0x03906EF8 BL 0x1C16DFC
	0x03906EFC LDR X0, [X21]
	0x03906F00 LDR X8, [X0 + 0xB8]
	0x03906F04 LDRB W8, [X8 + 0xC]
	0x03906F08 TBZ X8, 0x0, 0x3906F28
	0x03906F0C LDR W8, [X0 + 0xE0]
	0x03906F10 CBNZ W8, 0x3906F18
	0x03906F14 BL 0x1C16DFC
	0x03906F18 MOV X0, X19
	0x03906F1C MOV W1, W20
	0x03906F20 BL 0x39071EC
	0x03906F24 LDR X0, [X21]
	0x03906F28 LDR W8, [X0 + 0xE0]
	0x03906F2C CBNZ W8, 0x3906F38
	0x03906F30 BL 0x1C16DFC
	0x03906F34 LDR X0, [X21]
	0x03906F38 LDR X8, [X0 + 0xB8]
	0x03906F3C LDRB W9, [X8 + 0xC]
	0x03906F40 TBNZ X9, 0x1, 0x3906F54
	0x03906F44 LDP X20, X19, [X31 + 0x20]
	0x03906F48 LDP X22, X21, [X31 + 0x10]
	0x03906F4C LDR X30, [X31], #0x30
	0x03906F50 RET
	0x03906F54 LDR W9, [X0 + 0xE0]
	0x03906F58 CBNZ W9, 0x3906F68
	0x03906F5C BL 0x1C16DFC
	0x03906F60 LDR X8, [X21]
	0x03906F64 LDR X8, [X8 + 0xB8]
	0x03906F68 LDR X1, [X8 + 0x10]
	0x03906F6C MOV X0, X19
	0x03906F70 LDP X20, X19, [X31 + 0x20]
	0x03906F74 LDP X22, X21, [X31 + 0x10]
	0x03906F78 LDR X30, [X31], #0x30
	0x03906F7C B 0x39072D0
	0x03906F80 RET
	0x03906F84 STR X30, [X31 - 0x30]!
	0x03906F88 STP X22, X21, [X31 + 0x10]
	0x03906F8C STP X20, X19, [X31 + 0x20]
	0x03906F90 ADRP X22, 0xADB000
	0x03906F94 ADRP X21, 0x847000
	0x03906F98 LDRB W8, [X22 + 0x7E7]
	0x03906F9C LDR X21, [X21 + 0xAD0]
	0x03906FA0 MOV X19, X1
	0x03906FA4 MOV X20, X0
	0x03906FA8 TBNZ X8, 0x0, 0x3906FC0
	0x03906FAC ADRP X0, 0x847000
	0x03906FB0 LDR X0, [X0 + 0xAD0]
	0x03906FB4 BL 0x1C16CF4
	0x03906FB8 MOVZ W8, 0x1
	0x03906FBC STRB W8, [X22 + 0x7E7]
	0x03906FC0 MOV X0, X20
	0x03906FC4 MOV X1, X19
	0x03906FC8 MOV X2, X31
	0x03906FCC BL 0x3227C5C
	0x03906FD0 LDR X8, [X21]
	0x03906FD4 MOV X19, X0
	0x03906FD8 LDR W9, [X8 + 0xE0]
	0x03906FDC CBNZ W9, 0x3906FE8
	0x03906FE0 MOV X0, X8
	0x03906FE4 BL 0x1C16DFC
	0x03906FE8 MOV X0, X19
	0x03906FEC LDP X20, X19, [X31 + 0x20]
	0x03906FF0 LDP X22, X21, [X31 + 0x10]
	0x03906FF4 LDR X30, [X31], #0x30
	0x03906FF8 B 0x3906FFC
	0x03906FFC STP X30, X21, [X31 - 0x20]!
	0x03907000 STP X20, X19, [X31 + 0x10]
	0x03907004 ADRP X21, 0xADA000
	0x03907008 ADRP X20, 0x846000
	0x0390700C LDRB W8, [X21 + 0x7E8]
	0x03907010 LDR X20, [X20 + 0xAD0]
	0x03907014 MOV X19, X0
	0x03907018 TBNZ X8, 0x0, 0x3907030
	0x0390701C ADRP X0, 0x846000
	0x03907020 LDR X0, [X0 + 0xAD0]
	0x03907024 BL 0x1C16CF4
	0x03907028 MOVZ W8, 0x1
	0x0390702C STRB W8, [X21 + 0x7E8]
	0x03907030 LDR X0, [X20]
	0x03907034 LDR W8, [X0 + 0xE0]
	0x03907038 CBNZ W8, 0x3907044

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xADC000
	012 Move X22, 0x848000
	013 Move W8, [X21+2007]
	014 Move X22, [X22+3760]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x832000
	022 Move X0, [X0+3192]
	023 Call 0x1C17CF4
	024 Move X0, 0x848000
	025 Move X0, [X0+3768]
	026 Call 0x1C17CF4
	027 Move X0, 0x818000
	028 Move X0, [X0+1608]
	029 Call 0x1C17CF4
	030 Move X0, 0x848000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move X0, 0x848000
	034 Move X0, [X0+3760]
	035 Call 0x1C17CF4
	036 Move X0, 0x848000
	037 Move X0, [X0+3784]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2007], W8
	041 Move X0, [X22]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X21, X0
	045 Call Object..ctor, X0
	046 Compare X21, 0
	047 JumpIfEqual {114}
	048 Move X8, 0x848000
	049 Move X8, [X8+3784]
	050 Move X9, 0x818000
	051 Move X22, 0x848000
	052 Move X23, 0x848000
	053 Move X8, [X8]
	054 Move X9, [X9+1608]
	055 Move X24, 0x832000
	056 Move [X21+16], X8
	057 Move X0, [X9]
	058 Move X22, [X22+3776]
	059 Move X23, [X23+3768]
	060 Move X24, [X24+3192]
	061 Call 0x1C17F10
	062 Move X2, [X22]
	063 Move X1, X21
	064 Move X3, X31
	065 Move X22, X0
	066 Call Func`2<Char, Boolean>..ctor, X0, X1, X2
	067 Move X2, [X23]
	068 Move X0, X20
	069 Move X1, X22
	070 Call Enumerable.Where, X0, X1
	071 Move X1, [X24]
	072 Call Enumerable.ToArray, X0
	073 Move X1, X0
	074 Move X0, X31
	075 Move X2, X31
	076 Call String.CreateString, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {114}
	079 Move W1, 44
	080 Move W2, W31
	081 Move X3, X31
	082 Call String.Split, X0, X1, X2
	083 Compare X0, 0
	084 JumpIfEqual {114}
	085 Move W8, [X0+24]
	086 Move X20, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X20+32]
	089 Move X1, X31
	090 Call Single.Parse, X0
	091 Move W8, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X20+40]
	094 Move V8, V0
	095 Move X1, X31
	096 Call Single.Parse, X0
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X20+48]
	100 Move V9, V0
	101 Move X1, X31
	102 Call Single.Parse, X0
	103 Move W8, [X20+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X20+56]
	106 Move V10, V0
	107 Move X1, X31
	108 Call Single.Parse, X0
	109 Move W0, 1
	110 Move [X19], S8
	111 Move [X19+8], S9
	112 Move [X19+8], S10
	113 Move [X19+16], S0
	114 Call 0x1C17F20
	115 Call 0x1C17F28
	116 Call 0x1C17F28
	117 Call 0x1C17F28
	118 Move X19, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Call 0x3EB2AD0
	122 Move X19, X0
	123 Move X0, 0x7F4000
	124 Move X0, [X0+3264]
	125 Call 0x1C17D08
	126 Move X8, [X19]
	127 Move X1, [X8]
	128 Call 0x1C18270
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {146}
	133 Call 0x3EB2AE0
	134 Move W0, W31
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X24, [X31+32]
	140 Move X23, [X31+40]
	141 Move X30, [X31+24]
	142 Move D9, [X31+8]
	143 Move D8, [X31+16]
	144 Move V10, [X31+80]
	145 Return X0
	146 Move W0, 8
	147 Call 0x3EB2AF0
	148 Move X8, [X19]
	149 Move [X0], X8
	150 Move X1, 0x5AE000
	151 Add X1, X1, 3672
	152 Move X2, X31
	153 Call 0x3EB2B00
	154 Move X19, X0
	155 Call 0x3EB2AE0
	156 Move X0, X19
	157 Call 0x1D2D690
	158 Call 0x1991590

Method: T DemandComponent(UnityEngine.Component component)

Disassembly:
	0x0220DC64 LDRH W9, [X8 + 0x12E]
	0x0220DC68 LDR X1, [X10]
	0x0220DC6C CBZ X9, 0x220DC90
	0x0220DC70 LDR X10, [X8 + 0xB0]
	0x0220DC74 ADD X10, X10, 0x8
	0x0220DC78 LDUR X11, [X10 - 0x8]
	0x0220DC7C CMP X11, X1
	0x0220DC80 B.EQ 0x220DCA0
	0x0220DC84 SUBS X9, X9, 0x1
	0x0220DC88 ADD X10, X10, 0x10
	0x0220DC8C B.NE 0x220DC78
	0x0220DC90 MOV X0, X20
	0x0220DC94 MOV W2, W31
	0x0220DC98 BL 0x1C5C788
	0x0220DC9C B 0x220DCAC
	0x0220DCA0 LDRSW X9, [X10]
	0x0220DCA4 ADD X8, X8, X9, 0x4, LSL
	0x0220DCA8 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {21}
	013 Move X0, X20
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Move X8, [X19+56]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X1, [X8]
	020 Move X30, [X31+32]
	021 Call 0x1C17F20

Method: T DemandComponent(UnityEngine.GameObject gameObject)

Disassembly:
	0x0220DCAC LDP X8, X1, [X0]
	0x0220DCB0 MOV X0, X20
	0x0220DCB4 BLR X8
	0x0220DCB8 CBNZ X22, 0x220DCC4
	0x0220DCBC MOV X0, X21
	0x0220DCC0 BL 0x1D2C690
	0x0220DCC4 MOV X0, X22
	0x0220DCC8 BL 0x1C16F18
	0x0220DCCC BL 0x1990590
	0x0220DCD0 STP X30, X25, [X31 - 0x40]!
	0x0220DCD4 STP X24, X23, [X31 + 0x10]
	0x0220DCD8 STP X22, X21, [X31 + 0x20]
	0x0220DCDC STP X20, X19, [X31 + 0x30]
	0x0220DCE0 LDR X9, [X1 + 0x38]
	0x0220DCE4 MOV X20, X1
	0x0220DCE8 MOV X21, X0
	0x0220DCEC MOV X19, X8
	0x0220DCF0 CBNZ X9, 0x220DD7C
	0x0220DCF4 ADRP X0, 0x1EE8000
	0x0220DCF8 LDR X0, [X0 + 0x170]
	0x0220DCFC BL 0x1C16CF4
	0x0220DD00 ADRP X0, 0x1F0E000
	0x0220DD04 LDR X0, [X0 + 0xFD8]
	0x0220DD08 BL 0x1C16CF4
	0x0220DD0C ADRP X0, 0x1F0E000
	0x0220DD10 LDR X0, [X0 + 0xFE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move [X31+8], X31
	012 Compare X19, 0
	013 JumpIfEqual {32}
	014 Move X8, [X20+56]
	015 Add X1, X31, 8
	016 Move X0, X19
	017 Move X2, [X8]
	018 Call 0x21E7600, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {24}
	023 Move X0, [X31+8]
	024 Move X8, [X20+56]
	025 Move X0, X19
	026 Move X1, [X8+16]
	027 Call 0x21E61FC, X0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

