Type: UnityEngine.ProBuilder.SemVer

Method: System.Int32 get_major()

Disassembly:
	0x0392B498 CBZ X20, 0x392B514
	0x0392B49C LDR X8, [X19 + 0x28]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Int32 get_minor()

Disassembly:
	0x0392B4A0 LDR X9, [X22]
	0x0392B4A4 CMP X8, 0x0

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Int32 get_patch()

Disassembly:
	0x0392B4A8 MOV X0, X20
	0x0392B4AC MOV X2, X31

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_build()

Disassembly:
	0x0392B4B0 CSEL X1, X9, X8, EQ
	0x0392B4B4 BL 0x32333E0

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.String get_type()

Disassembly:
	0x0392B4B8 B 0x392B4D0
	0x0392B4BC CBZ X20, 0x392B514
	0x0392B4C0 LDR W1, [X19 + 0x1C]
	0x0392B4C4 MOV X0, X20
	0x0392B4C8 MOV X2, X31
	0x0392B4CC BL 0x3233E30
	0x0392B4D0 MOV W8, W31
	0x0392B4D4 LDR W9, [X21 + 0x18]
	0x0392B4D8 ADD X23, X23, 0x1
	0x0392B4DC CMP X23, W9, SXTW
	0x0392B4E0 B.LT 0x392B390
	0x0392B4E4 CBZ X20, 0x392B514
	0x0392B4E8 LDR X8, [X20]
	0x0392B4EC MOV X0, X20
	0x0392B4F0 LDP X20, X19, [X31 + 0x50]
	0x0392B4F4 LDP X22, X21, [X31 + 0x40]
	0x0392B4F8 LDP X2, X1, [X8 + 0x168]
	0x0392B4FC LDP X24, X23, [X31 + 0x30]
	0x0392B500 LDP X26, X25, [X31 + 0x20]
	0x0392B504 LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB7000
	006 Move X20, 0x7C9000
	007 Move W8, [X21+2270]
	008 Move X20, [X20+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C9000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2270], W8
	019 Move X8, [X19+32]
	020 Move X9, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.String get_metadata()

Disassembly:
	0x0392B508 LDR X30, [X31], #0x60
	0x0392B50C BR X2
	0x0392B510 BL 0x1C16F28
	0x0392B514 BL 0x1C16F20
	0x0392B518 STR X30, [X31 - 0x30]!
	0x0392B51C STP X22, X21, [X31 + 0x10]
	0x0392B520 STP X20, X19, [X31 + 0x20]
	0x0392B524 ADRP X22, 0xAB6000
	0x0392B528 ADRP X20, 0x7C8000
	0x0392B52C ADRP X21, 0x823000
	0x0392B530 LDRB W8, [X22 + 0x8E5]
	0x0392B534 LDR X20, [X20 + 0x8F0]
	0x0392B538 LDR X21, [X21 + 0xB40]
	0x0392B53C MOV X19, X0
	0x0392B540 TBNZ X8, 0x0, 0x392B588
	0x0392B544 ADRP X0, 0x7C8000
	0x0392B548 LDR X0, [X0 + 0x8F0]
	0x0392B54C BL 0x1C16CF4
	0x0392B550 ADRP X0, 0x7C8000
	0x0392B554 LDR X0, [X0 + 0xDD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB7000
	006 Move X20, 0x7C9000
	007 Move W8, [X21+2271]
	008 Move X20, [X20+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C9000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2271], W8
	019 Move X8, [X19+40]
	020 Move X9, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: System.String get_date()

Disassembly:
	0x0392B558 BL 0x1C16CF4
	0x0392B55C ADRP X0, 0x7C9000
	0x0392B560 LDR X0, [X0 + 0x2A8]
	0x0392B564 BL 0x1C16CF4
	0x0392B568 ADRP X0, 0x7D1000
	0x0392B56C LDR X0, [X0 + 0x790]
	0x0392B570 BL 0x1C16CF4
	0x0392B574 ADRP X0, 0x823000
	0x0392B578 LDR X0, [X0 + 0xB40]
	0x0392B57C BL 0x1C16CF4
	0x0392B580 MOVZ W8, 0x1
	0x0392B584 STRB W8, [X22 + 0x8E5]
	0x0392B588 LDR X0, [X20]
	0x0392B58C STR W31, [X31 + 0xC]
	0x0392B590 BL 0x1C16F10
	0x0392B594 MOV X1, X31
	0x0392B598 MOV X20, X0
	0x0392B59C BL 0x3231AC4
	0x0392B5A0 LDR X1, [X21]
	0x0392B5A4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB7000
	006 Move X20, 0x7C9000
	007 Move W8, [X21+2272]
	008 Move X20, [X20+2440]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C9000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2272], W8
	019 Move X8, [X19+48]
	020 Move X9, [X20]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0

Method: UnityEngine.ProBuilder.SemVer get_MajorMinorPatch()

Disassembly:
	0x0392B5A8 BL 0x392B2E8
	0x0392B5AC CBZ X20, 0x392B744
	0x0392B5B0 MOV X1, X0
	0x0392B5B4 MOV X0, X20
	0x0392B5B8 MOV X2, X31
	0x0392B5BC BL 0x32333E0
	0x0392B5C0 ADRP X22, 0xAB6000
	0x0392B5C4 ADRP X21, 0x7C8000
	0x0392B5C8 LDRB W8, [X22 + 0x8DE]
	0x0392B5CC LDR X21, [X21 + 0x988]
	0x0392B5D0 TBNZ X8, 0x0, 0x392B5E8
	0x0392B5D4 ADRP X0, 0x7C8000
	0x0392B5D8 LDR X0, [X0 + 0x988]
	0x0392B5DC BL 0x1C16CF4
	0x0392B5E0 MOVZ W8, 0x1
	0x0392B5E4 STRB W8, [X22 + 0x8DE]
	0x0392B5E8 LDR X8, [X19 + 0x20]
	0x0392B5EC LDR X9, [X21]
	0x0392B5F0 MOV X1, X31
	0x0392B5F4 CMP X8, 0x0
	0x0392B5F8 CSEL X0, X9, X8, EQ
	0x0392B5FC BL 0x32277A8
	0x0392B600 TBNZ X0, 0x0, 0x392B698
	0x0392B604 ADRP X8, 0x7C9000
	0x0392B608 LDR X8, [X8 + 0x2A8]
	0x0392B60C MOV X0, X20
	0x0392B610 MOV X2, X31
	0x0392B614 LDR X1, [X8]
	0x0392B618 BL 0x32333E0
	0x0392B61C LDRB W8, [X22 + 0x8DE]
	0x0392B620 TBNZ X8, 0x0, 0x392B638
	0x0392B624 ADRP X0, 0x7C8000
	0x0392B628 LDR X0, [X0 + 0x988]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAB7000
	007 Move X20, 0x823000
	008 Move W8, [X21+2273]
	009 Move X20, [X20+3000]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x823000
	016 Move X0, [X0+3000]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2273], W8
	020 Move X0, [X20]
	021 Move V8, [X19+16]
	022 Move W21, [X19+24]
	023 Call 0x1C17F10
	024 Move TEMP, 0
	025 Not TEMP
	026 Move X8, TEMP
	027 Move X1, X31
	028 Move X19, X0
	029 Move [X0+16], X8
	030 Move [X0+24], X8
	031 Call Object..ctor, X0
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W8, TEMP
	035 Move [X19+16], D8
	036 Move [X19+40], X31
	037 Move [X19+48], X31
	038 Move [X19+24], W21
	039 Move [X19+28], W8
	040 Move [X19+32], X31
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Move V8, [X31+48]
	047 Return X0

Method: System.Void .ctor()

Disassembly:
	0x0392B698 ADRP X22, 0xAB6000
	0x0392B69C LDRB W8, [X22 + 0x8E0]
	0x0392B6A0 TBNZ X8, 0x0, 0x392B6B8
	0x0392B6A4 ADRP X0, 0x7C8000
	0x0392B6A8 LDR X0, [X0 + 0x988]
	0x0392B6AC BL 0x1C16CF4
	0x0392B6B0 MOVZ W8, 0x1
	0x0392B6B4 STRB W8, [X22 + 0x8E0]
	0x0392B6B8 LDR X8, [X19 + 0x30]
	0x0392B6BC LDR X9, [X21]
	0x0392B6C0 MOV X1, X31
	0x0392B6C4 CMP X8, 0x0
	0x0392B6C8 CSEL X0, X9, X8, EQ

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, 0
	004 Not TEMP
	005 Move X8, TEMP
	006 Move X1, X31
	007 Move X19, X0
	008 Move [X0+16], X8
	009 Move [X0+24], X8
	010 Call Object..ctor, X0
	011 Move X8, -48484352
	012 Move V0, [X8+55]
	013 Move [X19+40], X31
	014 Move [X19+48], X31
	015 Move [X19+32], X31
	016 Move [X19+1], V0
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void .ctor(System.String formatted, System.String date = null)

Disassembly:
	0x0392B6CC BL 0x32277A8
	0x0392B6D0 TBNZ X0, 0x0, 0x392B724
	0x0392B6D4 ADRP X8, 0x7C8000
	0x0392B6D8 LDR X8, [X8 + 0xDD8]
	0x0392B6DC MOV X0, X20
	0x0392B6E0 MOV X2, X31
	0x0392B6E4 LDR X1, [X8]
	0x0392B6E8 BL 0x32333E0
	0x0392B6EC LDRB W8, [X22 + 0x8E0]
	0x0392B6F0 TBNZ X8, 0x0, 0x392B708
	0x0392B6F4 ADRP X0, 0x7C8000
	0x0392B6F8 LDR X0, [X0 + 0x988]
	0x0392B6FC BL 0x1C16CF4
	0x0392B700 MOVZ W8, 0x1
	0x0392B704 STRB W8, [X22 + 0x8E0]
	0x0392B708 LDR X8, [X19 + 0x30]
	0x0392B70C LDR X9, [X21]
	0x0392B710 MOV X0, X20
	0x0392B714 MOV X2, X31
	0x0392B718 CMP X8, 0x0
	0x0392B71C CSEL X1, X9, X8, EQ
	0x0392B720 BL 0x32333E0
	0x0392B724 LDR X8, [X20]
	0x0392B728 MOV X0, X20
	0x0392B72C LDP X9, X1, [X8 + 0x168]
	0x0392B730 BLR X9
	0x0392B734 LDP X20, X19, [X31 + 0x20]
	0x0392B738 LDP X22, X21, [X31 + 0x10]
	0x0392B73C LDR X30, [X31], #0x30
	0x0392B740 RET
	0x0392B744 BL 0x1C16F20
	0x0392B748 SUB X31, X31, 0x30
	0x0392B74C STP X30, X21, [X31 + 0x10]
	0x0392B750 STP X20, X19, [X31 + 0x20]
	0x0392B754 ADRP X21, 0xAB6000
	0x0392B758 ADRP X20, 0x7D0000
	0x0392B75C LDRB W8, [X21 + 0x8E7]
	0x0392B760 LDR X20, [X20 + 0x600]
	0x0392B764 MOV X19, X0
	0x0392B768 TBNZ X8, 0x0, 0x392B78C
	0x0392B76C ADRP X0, 0x7D0000
	0x0392B770 LDR X0, [X0 + 0x600]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move TEMP, 0
	008 Not TEMP
	009 Move X8, TEMP
	010 Move X1, X31
	011 Move X20, X2
	012 Move X19, X0
	013 Move [X31+8], X31
	014 Move [X0+16], X8
	015 Move [X0+24], X8
	016 Call Object..ctor, X0
	017 Add X1, X31, 8
	018 Move X0, X21
	019 Move [X19+40], X21
	020 Move [X19+48], X20
	021 Call SemVer.TryGetVersionInfo, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {51}
	026 Move X20, [X31+8]
	027 Compare X20, 0
	028 JumpIfEqual {57}
	029 Move V0, [X20+1]
	030 Move X22, 0xAB7000
	031 Move X21, 0x7C9000
	032 Move [X19+1], V0
	033 Move X8, [X20+32]
	034 Move [X19+32], X8
	035 Move W8, [X22+2271]
	036 Move X21, [X21+2440]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {46}
	041 Move X0, 0x7C9000
	042 Move X0, [X0+2440]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+2271], W8
	046 Move X8, [X20+40]
	047 Move X9, [X21]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move [X19+40], X8
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 major, System.Int32 minor, System.Int32 patch, System.Int32 build = -1, System.String type = null, System.String date = null, System.String metadata = null)

Disassembly:
	0x0392B62C BL 0x1C16CF4
	0x0392B630 MOVZ W8, 0x1
	0x0392B634 STRB W8, [X22 + 0x8DE]
	0x0392B638 LDR X8, [X19 + 0x20]
	0x0392B63C LDR X9, [X21]
	0x0392B640 MOV X0, X20
	0x0392B644 MOV X2, X31
	0x0392B648 CMP X8, 0x0
	0x0392B64C CSEL X1, X9, X8, EQ
	0x0392B650 BL 0x32333E0
	0x0392B654 LDR W8, [X19 + 0x1C]
	0x0392B658 TBNZ X8, 0x1F, 0x392B698
	0x0392B65C ADRP X8, 0x7D1000
	0x0392B660 LDR X8, [X8 + 0x790]
	0x0392B664 MOV X0, X20
	0x0392B668 MOV X2, X31
	0x0392B66C LDR X1, [X8]
	0x0392B670 BL 0x32333E0
	0x0392B674 LDR W8, [X19 + 0x1C]
	0x0392B678 ADD X0, X31, 0xC
	0x0392B67C MOV X1, X31
	0x0392B680 STR W8, [X31 + 0xC]
	0x0392B684 BL 0x337B6E0
	0x0392B688 MOV X1, X0
	0x0392B68C MOV X0, X20
	0x0392B690 MOV X2, X31
	0x0392B694 BL 0x32333E0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W25, W1
	011 Move TEMP, 0
	012 Not TEMP
	013 Move X8, TEMP
	014 Move X1, X31
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W22, W4
	019 Move W23, W3
	020 Move W24, W2
	021 Move X26, X0
	022 Move [X0+16], X8
	023 Move [X0+24], X8
	024 Call Object..ctor, X0
	025 Move [X26+16], W25
	026 Move [X26+20], W24
	027 Move [X26+24], W23
	028 Move [X26+28], W22
	029 Move [X26+32], X21
	030 Move [X26+40], X19
	031 Move [X26+48], X20
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X24, [X31+32]
	037 Move X23, [X31+40]
	038 Move X26, [X31+16]
	039 Move X25, [X31+24]
	040 Move X30, [X31+80]
	041 Return 

Method: System.Boolean IsValid()

Disassembly:
	0x0392BB50 LDR X1, [X8]
	0x0392BB54 BL 0x21E51FC
	0x0392BB58 CBZ X0, 0x392BC88
	0x0392BB5C MOV X1, X19
	0x0392BB60 MOV W2, W20
	0x0392BB64 MOV X3, X31
	0x0392BB68 MOV X21, X0
	0x0392BB6C BL 0x3949FFC
	0x0392BB70 MOV X0, X21
	0x0392BB74 MOV X1, X31
	0x0392BB78 BL 0x39494A4
	0x0392BB7C CBZ X0, 0x392BC88

ISIL:
	001 Move W8, [X0+16]
	002 Add W31, W8, 1
	003 Move W8, [X0+20]
	004 Add W31, W8, 1
	005 Move W8, [X0+24]
	006 Add W31, W8, 1
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x0392BB80 ADRP X21, 0x822000
	0x0392BB84 LDR X21, [X21 + 0xAC8]
	0x0392BB88 MOV X1, X31
	0x0392BB8C MOV X20, X0
	0x0392BB90 BL 0x3912AD8
	0x0392BB94 LDR X8, [X21]
	0x0392BB98 MOV X21, X0
	0x0392BB9C LDR W9, [X8 + 0xE0]
	0x0392BBA0 CBNZ W9, 0x392BBAC
	0x0392BBA4 MOV X0, X8
	0x0392BBA8 BL 0x1C16DFC
	0x0392BBAC MOV X0, X31
	0x0392BBB0 BL 0x38FAD64
	0x0392BBB4 CBZ X21, 0x392BC88
	0x0392BBB8 ADRP X22, 0x823000
	0x0392BBBC ADRP X23, 0x7C8000
	0x0392BBC0 LDR X22, [X22 + 0xB90]
	0x0392BBC4 LDR X23, [X23 + 0x6C0]
	0x0392BBC8 MOV X1, X0
	0x0392BBCC MOV X0, X21
	0x0392BBD0 MOV X2, X31
	0x0392BBD4 BL 0x3C134D8
	0x0392BBD8 MOV X0, X19
	0x0392BBDC MOV X1, X31
	0x0392BBE0 BL 0x33BE520
	0x0392BBE4 LDR X8, [X23]
	0x0392BBE8 LDR X21, [X22]
	0x0392BBEC MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB7000
	006 Move W8, [X21+2274]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x823000
	014 Move X0, [X0+3000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2274], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x823000
	021 Move X8, [X8+3000]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]

Method: System.Int32 GetHashCode()

Disassembly:
	0x0392BDF0 CBNZ W8, 0x392BDF8
	0x0392BDF4 BL 0x1C16DFC
	0x0392BDF8 FMOV S0, 2
	0x0392BDFC FMOV S1, 2.5
	0x0392BE00 FMOV S2, 4
	0x0392BE04 MOVZ W1, 0x6
	0x0392BE08 MOVZ W2, 0x1
	0x0392BE0C MOV W0, W20
	0x0392BE10 BL 0x392C4A8
	0x0392BE14 B 0x392C084
	0x0392BE18 ADRP X8, 0x823000
	0x0392BE1C LDR X8, [X8 + 0xBB8]
	0x0392BE20 LDR X0, [X8]
	0x0392BE24 LDR W8, [X0 + 0xE0]
	0x0392BE28 CBNZ W8, 0x392BE30
	0x0392BE2C BL 0x1C16DFC
	0x0392BE30 MOVZ W8, 0x43340000
	0x0392BE34 FMOV S0, 2
	0x0392BE38 FMOV S1, 2.5
	0x0392BE3C FMOV S2, 2
	0x0392BE40 MOVZ W1, 0x8
	0x0392BE44 MOVZ W2, 0x1
	0x0392BE48 FMOV S3, W8
	0x0392BE4C MOV W0, W20
	0x0392BE50 BL 0x392CE34
	0x0392BE54 B 0x392C084
	0x0392BE58 ADRP X21, 0xAAD000
	0x0392BE5C LDRB W8, [X21 + 0x85B]
	0x0392BE60 CBNZ W8, 0x392BE78
	0x0392BE64 ADRP X0, 0x7C8000
	0x0392BE68 LDR X0, [X0 + 0x5A0]
	0x0392BE6C BL 0x1C16CF4
	0x0392BE70 MOVZ W8, 0x1
	0x0392BE74 STRB W8, [X21 + 0x85B]
	0x0392BE78 ADRP X8, 0x7C8000
	0x0392BE7C LDR X8, [X8 + 0x5A0]
	0x0392BE80 ADRP X9, 0x823000
	0x0392BE84 LDR X8, [X8]
	0x0392BE88 LDR X9, [X9 + 0xBB8]
	0x0392BE8C LDR X8, [X8 + 0xB8]
	0x0392BE90 LDR X0, [X9]
	0x0392BE94 LDP S10, S9, [X8 + 0xC]
	0x0392BE98 LDR W9, [X0 + 0xE0]
	0x0392BE9C LDR V8, [X8 + 0x14]
	0x0392BEA0 CBNZ W9, 0x392BEA8
	0x0392BEA4 BL 0x1C16DFC
	0x0392BEA8 MOV W0, W20
	0x0392BEAC MOV V0.16B, V10.16B
	0x0392BEB0 MOV V1.16B, V9.16B
	0x0392BEB4 MOV V2.16B, V8.16B
	0x0392BEB8 BL 0x392DBC0
	0x0392BEBC B 0x392C084
	0x0392BEC0 ADRP X8, 0x823000
	0x0392BEC4 LDR X8, [X8 + 0xBB8]
	0x0392BEC8 LDR X0, [X8]
	0x0392BECC LDR W8, [X0 + 0xE0]
	0x0392BED0 CBNZ W8, 0x392BED8
	0x0392BED4 BL 0x1C16DFC
	0x0392BED8 FMOV S0, 1
	0x0392BEDC FMOV S1, 2
	0x0392BEE0 MOVZ W1, 0x8
	0x0392BEE4 MOVZ W2, 0x2
	0x0392BEE8 MOVN W3, 0x0
	0x0392BEEC MOV W0, W20
	0x0392BEF0 BL 0x392E1F4
	0x0392BEF4 B 0x392C084
	0x0392BEF8 ADRP X8, 0x823000
	0x0392BEFC LDR X8, [X8 + 0xBB8]
	0x0392BF00 LDR X0, [X8]
	0x0392BF04 LDR W8, [X0 + 0xE0]
	0x0392BF08 CBNZ W8, 0x392BF10
	0x0392BF0C BL 0x1C16DFC
	0x0392BF10 FMOV S0, 5
	0x0392BF14 FMOV S1, 5
	0x0392BF18 MOVZ W1, 0x5
	0x0392BF1C MOVZ W2, 0x5
	0x0392BF20 MOVZ W3, 0x2
	0x0392BF24 MOV W0, W20
	0x0392BF28 B 0x392BFFC
	0x0392BF2C ADRP X8, 0x823000
	0x0392BF30 LDR X8, [X8 + 0xBB8]
	0x0392BF34 LDR X0, [X8]
	0x0392BF38 LDR W8, [X0 + 0xE0]
	0x0392BF3C CBNZ W8, 0x392BF44
	0x0392BF40 BL 0x1C16DFC
	0x0392BF44 FMOV S0, 3
	0x0392BF48 FMOV S1, 2.5
	0x0392BF4C FMOV S2, 0.5
	0x0392BF50 FMOV S3, 0.75
	0x0392BF54 FMOV S4, 1
	0x0392BF58 MOV W0, W20
	0x0392BF5C BL 0x392F090
	0x0392BF60 B 0x392C084
	0x0392BF64 ADRP X8, 0x823000
	0x0392BF68 LDR X8, [X8 + 0xBB8]
	0x0392BF6C LDR X0, [X8]
	0x0392BF70 LDR W8, [X0 + 0xE0]
	0x0392BF74 CBNZ W8, 0x392BF7C
	0x0392BF78 BL 0x1C16DFC
	0x0392BF7C FMOV S0, 1
	0x0392BF80 FMOV S1, 2
	0x0392BF84 FMOV S2, 0.25
	0x0392BF88 MOVZ W1, 0x8
	0x0392BF8C MOVZ W2, 0x2
	0x0392BF90 MOV W0, W20
	0x0392BF94 BL 0x39306F4
	0x0392BF98 B 0x392C084
	0x0392BF9C ADRP X8, 0x823000
	0x0392BFA0 LDR X8, [X8 + 0xBB8]
	0x0392BFA4 LDR X0, [X8]
	0x0392BFA8 LDR W8, [X0 + 0xE0]
	0x0392BFAC CBNZ W8, 0x392BFB4
	0x0392BFB0 BL 0x1C16DFC
	0x0392BFB4 FMOV S0, 0.5

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W8, [X0+16]
	011 Move X19, X0
	012 Add W31, W8, 1
	013 Move W9, [X19+20]
	014 Add W31, W9, 1
	015 Move W9, [X19+24]
	016 Add W31, W9, 1
	017 Add X0, X31, 12
	018 Move X1, X31
	019 Move [X31+12], W8
	020 Call Int32.GetHashCode, X0
	021 Move W8, [X19+20]
	022 Move W20, W0
	023 Add X0, X31, 12
	024 Move X1, X31
	025 Move [X31+12], W8
	026 Call Int32.GetHashCode, X0
	027 Move W8, [X19+24]
	028 Move W21, W0
	029 Add X0, X31, 12
	030 Move X1, X31
	031 Move [X31+12], W8
	032 Call Int32.GetHashCode, X0
	033 Move W8, [X19+28]
	034 Move W22, W0
	035 Add X0, X31, 12
	036 Move X1, X31
	037 Move [X31+12], W8
	038 Call Int32.GetHashCode, X0
	039 Move X25, 0xAB7000
	040 Move X24, 0x7C9000
	041 Move W8, [X25+2270]
	042 Move X24, [X24+2440]
	043 Move W23, W0
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {53}
	048 Move X0, 0x7C9000
	049 Move X0, [X0+2440]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+2270], W8
	053 Move X8, [X19+32]
	054 Move X9, [X24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {141}
	059 Move W8, W20
	060 ShiftRight W8, 29
	061 And W8, W8, 0xFFFFFFF
	062 Move X9, [X0]
	063 Subtract W8, W8, W20
	064 Add W8, W8, W21
	065 Move W10, W8
	066 ShiftRight W10, 29
	067 And W10, W10, 0xFFFFFFF
	068 Subtract W8, W10, W8
	069 Move X10, [X9+344]
	070 Move X1, [X9+352]
	071 Add W8, W8, W22
	072 Move W9, W8
	073 ShiftRight W9, 29
	074 And W9, W9, 0xFFFFFFF
	075 Subtract W8, W9, W8
	076 Add W8, W8, W23
	077 Move W9, 0x79ED
	078 Add W19, W8, W9
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move W8, W19
	081 ShiftRight W8, 29
	082 And W8, W8, 0xFFFFFFF
	083 Subtract W8, W8, W19
	084 Add W0, W0, W8
	085 Move X20, 0xAB7000
	086 Move W8, [X20+2271]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {96}
	091 Move X0, 0x7C9000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+2271], W8
	096 Move X21, 0x7C9000
	097 Move X8, [X19+40]
	098 Move X21, [X21+2440]
	099 Move X1, X31
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X21]
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Call String.IsNullOrEmpty, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {128}
	108 Move W8, [X20+2271]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {118}
	113 Move X0, 0x7C9000
	114 Move X0, [X0+2440]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X20+2271], W8
	118 Move X8, [X19+40]
	119 Move X9, [X21]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 Compare X0, 0
	123 JumpIfEqual {141}
	124 Move X8, [X0]
	125 Move X9, [X8+344]
	126 Move X1, [X8+352]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X0, X19
	129 Move X1, X31
	130 Call Object.GetHashCode, X0
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X24, [X31+32]
	136 Move X23, [X31+40]
	137 Move X30, [X31+16]
	138 Move X25, [X31+24]
	139 Add X31, X31, 80
	140 Return X0
	141 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.ProBuilder.SemVer version)

Disassembly:
	0x0392BBF0 LDR W9, [X8 + 0xE0]
	0x0392BBF4 CBNZ W9, 0x392BC00
	0x0392BBF8 MOV X0, X8
	0x0392BBFC BL 0x1C16DFC
	0x0392BC00 MOV X0, X21
	0x0392BC04 MOV X1, X31
	0x0392BC08 BL 0x338C698
	0x0392BC0C MOV X1, X0
	0x0392BC10 MOV X0, X19
	0x0392BC14 MOV X2, X31
	0x0392BC18 BL 0x33A7D48
	0x0392BC1C CBZ X0, 0x392BC74
	0x0392BC20 ADRP X8, 0x823000
	0x0392BC24 LDR X8, [X8 + 0xB98]
	0x0392BC28 LDR X9, [X0]
	0x0392BC2C MOV X19, X0
	0x0392BC30 LDR X8, [X8]
	0x0392BC34 LDRB W11, [X9 + 0x130]
	0x0392BC38 LDRB W10, [X8 + 0x130]
	0x0392BC3C CMP W11, W10
	0x0392BC40 B.CC 0x392BC74
	0x0392BC44 LDR X9, [X9 + 0xC8]
	0x0392BC48 ADD X9, X9, X10, 0x3, LSL
	0x0392BC4C LDUR X9, [X9 - 0x8]
	0x0392BC50 CMP X9, X8
	0x0392BC54 B.NE 0x392BC74
	0x0392BC58 MOV X0, X20
	0x0392BC5C MOV X1, X31
	0x0392BC60 BL 0x3C32ECC
	0x0392BC64 CBZ X0, 0x392BC88
	0x0392BC68 LDR X1, [X19 + 0x10]
	0x0392BC6C MOV X2, X31
	0x0392BC70 BL 0x3C38A84
	0x0392BC74 MOV X0, X20
	0x0392BC78 LDP X20, X19, [X31 + 0x20]
	0x0392BC7C LDP X22, X21, [X31 + 0x10]
	0x0392BC80 LDP X30, X23, [X31], #0x30
	0x0392BC84 RET
	0x0392BC88 BL 0x1C16F20
	0x0392BC8C ADRP X0, 0x7CD000
	0x0392BC90 LDR X0, [X0 + 0x528]
	0x0392BC94 BL 0x1C16D08
	0x0392BC98 BL 0x1C16F10
	0x0392BC9C MOV X19, X0
	0x0392BCA0 ADRP X0, 0x823000
	0x0392BCA4 LDR X0, [X0 + 0xBA8]
	0x0392BCA8 BL 0x1C16D08
	0x0392BCAC MOV X20, X0
	0x0392BCB0 ADRP X0, 0x823000
	0x0392BCB4 LDR X0, [X0 + 0xB68]
	0x0392BCB8 BL 0x1C16D08
	0x0392BCBC MOV X2, X0
	0x0392BCC0 MOV X0, X19
	0x0392BCC4 MOV X1, X20
	0x0392BCC8 MOV X3, X31
	0x0392BCCC BL 0x3315F7C
	0x0392BCD0 ADRP X0, 0x823000
	0x0392BCD4 LDR X0, [X0 + 0xBB0]
	0x0392BCD8 BL 0x1C16D08
	0x0392BCDC MOV X1, X0
	0x0392BCE0 MOV X0, X19
	0x0392BCE4 BL 0x1C16DEC
	0x0392BCE8 SUB X31, X31, 0x60
	0x0392BCEC STR D10, [X31 + 0x20]
	0x0392BCF0 STP D9, D8, [X31 + 0x28]
	0x0392BCF4 STR X30, [X31 + 0x38]
	0x0392BCF8 STP X22, X21, [X31 + 0x40]
	0x0392BCFC STP X20, X19, [X31 + 0x50]
	0x0392BD00 ADRP X21, 0xAB6000
	0x0392BD04 LDRB W8, [X21 + 0x8EA]
	0x0392BD08 MOV W20, W1
	0x0392BD0C MOV W19, W0
	0x0392BD10 TBNZ X8, 0x0, 0x392BD4C
	0x0392BD14 ADRP X0, 0x822000
	0x0392BD18 LDR X0, [X0 + 0xAC8]
	0x0392BD1C BL 0x1C16CF4
	0x0392BD20 ADRP X0, 0x7C8000
	0x0392BD24 LDR X0, [X0 + 0x598]
	0x0392BD28 BL 0x1C16CF4
	0x0392BD2C ADRP X0, 0x823000
	0x0392BD30 LDR X0, [X0 + 0xBB8]
	0x0392BD34 BL 0x1C16CF4
	0x0392BD38 ADRP X0, 0x823000
	0x0392BD3C LDR X0, [X0 + 0xBC0]
	0x0392BD40 BL 0x1C16CF4
	0x0392BD44 MOVZ W8, 0x1
	0x0392BD48 STRB W8, [X21 + 0x8EA]
	0x0392BD4C CMP W19, 0xC
	0x0392BD50 B.HI 0x392BDD8
	0x0392BD54 ADRP X9, 0xFFFFFFFFFD26C000
	0x0392BD58 MOV W8, W19
	0x0392BD5C ADD X9, X9, 0xA48
	0x0392BD60 ADR X10, 0x10
	0x0392BD64 LDRH W11, [X9, X8, LSL #1]
	0x0392BD68 ADD X10, X10, X11, 0x2, LSL
	0x0392BD6C BR X10
	0x0392BD70 ADRP X21, 0xAAD000
	0x0392BD74 LDRB W8, [X21 + 0x85B]
	0x0392BD78 CBNZ W8, 0x392BD90
	0x0392BD7C ADRP X0, 0x7C8000
	0x0392BD80 LDR X0, [X0 + 0x5A0]
	0x0392BD84 BL 0x1C16CF4
	0x0392BD88 MOVZ W8, 0x1
	0x0392BD8C STRB W8, [X21 + 0x85B]
	0x0392BD90 ADRP X8, 0x7C8000
	0x0392BD94 LDR X8, [X8 + 0x5A0]
	0x0392BD98 ADRP X9, 0x823000
	0x0392BD9C LDR X8, [X8]
	0x0392BDA0 LDR X9, [X9 + 0xBB8]
	0x0392BDA4 LDR X8, [X8 + 0xB8]
	0x0392BDA8 LDR X0, [X9]
	0x0392BDAC LDP S10, S9, [X8 + 0xC]
	0x0392BDB0 LDR W9, [X0 + 0xE0]
	0x0392BDB4 LDR V8, [X8 + 0x14]
	0x0392BDB8 CBNZ W9, 0x392BDC0
	0x0392BDBC BL 0x1C16DFC
	0x0392BDC0 MOV W0, W20
	0x0392BDC4 MOV V0.16B, V10.16B
	0x0392BDC8 MOV V1.16B, V9.16B
	0x0392BDCC MOV V2.16B, V8.16B
	0x0392BDD0 BL 0x392C238
	0x0392BDD4 B 0x392C084
	0x0392BDD8 MOV X21, X31
	0x0392BDDC B 0x392C088
	0x0392BDE0 ADRP X8, 0x823000
	0x0392BDE4 LDR X8, [X8 + 0xBB8]
	0x0392BDE8 LDR X0, [X8]
	0x0392BDEC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {117}
	008 Move W8, [X0+16]
	009 Move X19, X1
	010 Move X20, X0
	011 Add W31, W8, 1
	012 Move W9, [X20+20]
	013 Add W31, W9, 1
	014 Move W9, [X20+24]
	015 Add W31, W9, 1
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move W10, W31
	018 Move W9, [X19+16]
	019 Add W31, W9, 1
	020 Move W11, [X19+20]
	021 Add W31, W11, 1
	022 Move W11, [X19+24]
	023 Add W31, W11, 1
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Xor W10, W10, W11
	026 Move TEMP, X10
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {117}
	030 Add W31, W8, 1
	031 Move W10, [X20+20]
	032 Add W31, W10, 1
	033 Move W11, [X20+24]
	034 Add W31, W11, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, [X19+20]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X19+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X22, 0xAB7000
	041 Move X21, 0x7C9000
	042 Move W8, [X22+2270]
	043 Move X21, [X21+2440]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {53}
	048 Move X0, 0x7C9000
	049 Move X0, [X0+2440]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+2270], W8
	053 Move X9, [X20+32]
	054 Move X8, [X21]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {146}
	059 Move X9, [X19+32]
	060 Move X2, X31
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Call String.Equals, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {117}
	068 Move W8, [X20+28]
	069 Add X0, X31, 12
	070 Move X2, X31
	071 Move [X31+12], W8
	072 Move W1, [X19+28]
	073 Call Int32.Equals, X0, X1
	074 Move X21, 0xAB7000
	075 Move W8, [X21+2271]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {85}
	080 Move X0, 0x7C9000
	081 Move X0, [X0+2440]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+2271], W8
	085 Move X22, 0x7C9000
	086 Move X8, [X20+40]
	087 Move X22, [X22+2440]
	088 Move X1, X31
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, [X22]
	091 NotImplemented "Instruction CSEL not yet implemented."
	092 Call String.IsNullOrEmpty, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {117}
	097 Move W8, [X21+2271]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {107}
	102 Move X0, 0x7C9000
	103 Move X0, [X0+2440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X21+2271], W8
	107 Move X8, [X19+40]
	108 Move X9, [X22]
	109 Move X1, X31
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Call String.IsNullOrEmpty, X0
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {125}
	117 Move W0, W31
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 And W0, W0, 1
	123 Move X30, [X31+48]
	124 Return X0
	125 Move W8, [X21+2271]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {135}
	130 Move X0, 0x7C9000
	131 Move X0, [X0+2440]
	132 Call 0x1C17CF4
	133 Move W8, 1
	134 Move [X21+2271], W8
	135 Move X9, [X20+40]
	136 Move X8, [X22]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Compare X0, 0
	140 JumpIfEqual {146}
	141 Move X9, [X19+40]
	142 Move X2, X31
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CSEL not yet implemented."
	145 Call String.Equals, X0, X1
	146 Call 0x1C17F20

Method: System.Int32 CompareTo(System.Object obj)

Disassembly:
	0x0392BFB8 FMOV S1, 1
	0x0392BFBC MOVZ W1, 0x8
	0x0392BFC0 MOV W0, W20
	0x0392BFC4 BL 0x3930DB8
	0x0392BFC8 B 0x392C084
	0x0392BFCC ADRP X8, 0x823000
	0x0392BFD0 LDR X8, [X8 + 0xBB8]
	0x0392BFD4 LDR X0, [X8]
	0x0392BFD8 LDR W8, [X0 + 0xE0]
	0x0392BFDC CBNZ W8, 0x392BFE4
	0x0392BFE0 BL 0x1C16DFC
	0x0392BFE4 FMOV S0, 1
	0x0392BFE8 FMOV S1, 1
	0x0392BFEC MOVZ W3, 0x2
	0x0392BFF0 MOV W0, W20
	0x0392BFF4 MOV W1, W31
	0x0392BFF8 MOV W2, W31
	0x0392BFFC BL 0x392EAAC
	0x0392C000 B 0x392C084
	0x0392C004 ADRP X8, 0x822000
	0x0392C008 LDR X8, [X8 + 0xBB8]
	0x0392C00C LDR X0, [X8]
	0x0392C010 LDR W8, [X0 + 0xE0]
	0x0392C014 CBNZ W8, 0x392C01C
	0x0392C018 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB7000
	006 Move W8, [X21+2275]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x823000
	014 Move X0, [X0+3000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2275], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0x823000
	021 Move X8, [X8+3000]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X1, X31
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]

Method: System.Int32 WrapNoValue(System.Int32 value)

Disassembly:
	0x0392C1C8 ADD X31, X31, 0x60
	0x0392C1CC RET
	0x0392C1D0 ADRP X8, 0x822000
	0x0392C1D4 LDR X8, [X8 + 0xBB8]

ISIL:
	001 Move TEMP, 0x80000000
	002 Not TEMP
	003 Move W8, TEMP
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0

Method: System.Int32 CompareTo(UnityEngine.ProBuilder.SemVer version)

Disassembly:
	0x0392C01C MOVZ W8, 0x43340000
	0x0392C020 FMOV S1, 2
	0x0392C024 FMOV S2, 1
	0x0392C028 FMOV S3, 1
	0x0392C02C MOVZ W1, 0x9
	0x0392C030 MOVZ W2, 0x1
	0x0392C034 MOVZ W3, 0x1
	0x0392C038 MOVZ W4, 0x1
	0x0392C03C MOVZ W5, 0x1
	0x0392C040 MOVZ W6, 0x1
	0x0392C044 FMOV S0, W8
	0x0392C048 MOV W0, W20
	0x0392C04C BL 0x3931778
	0x0392C050 B 0x392C084
	0x0392C054 ADRP X8, 0x822000
	0x0392C058 LDR X8, [X8 + 0xBB8]
	0x0392C05C LDR X0, [X8]
	0x0392C060 LDR W8, [X0 + 0xE0]
	0x0392C064 CBNZ W8, 0x392C06C
	0x0392C068 BL 0x1C16DFC
	0x0392C06C FMOV S0, 0.5
	0x0392C070 MOVZ W1, 0x2
	0x0392C074 MOVZ W2, 0x1
	0x0392C078 MOV W0, W20
	0x0392C07C MOV W3, W31
	0x0392C080 BL 0x3931ED4
	0x0392C084 MOV X21, X0
	0x0392C088 ADRP X8, 0x7C7000
	0x0392C08C LDR X8, [X8 + 0x598]
	0x0392C090 LDR X0, [X8]
	0x0392C094 LDR W8, [X0 + 0xE0]
	0x0392C098 CBNZ W8, 0x392C0A0
	0x0392C09C BL 0x1C16DFC
	0x0392C0A0 MOV X0, X21
	0x0392C0A4 MOV X1, X31
	0x0392C0A8 MOV X2, X31
	0x0392C0AC BL 0x3C3883C
	0x0392C0B0 TBZ X0, 0x0, 0x392C11C
	0x0392C0B4 ADRP X21, 0xAAC000
	0x0392C0B8 LDRB W8, [X21 + 0x85B]
	0x0392C0BC CBNZ W8, 0x392C0D4
	0x0392C0C0 ADRP X0, 0x7C7000
	0x0392C0C4 LDR X0, [X0 + 0x5A0]
	0x0392C0C8 BL 0x1C16CF4
	0x0392C0CC MOVZ W8, 0x1
	0x0392C0D0 STRB W8, [X21 + 0x85B]
	0x0392C0D4 ADRP X8, 0x7C7000
	0x0392C0D8 LDR X8, [X8 + 0x5A0]
	0x0392C0DC ADRP X9, 0x822000
	0x0392C0E0 LDR X8, [X8]
	0x0392C0E4 LDR X9, [X9 + 0xBB8]
	0x0392C0E8 LDR X8, [X8 + 0xB8]
	0x0392C0EC LDR X0, [X9]
	0x0392C0F0 LDP S10, S9, [X8 + 0xC]
	0x0392C0F4 LDR W9, [X0 + 0xE0]
	0x0392C0F8 LDR V8, [X8 + 0x14]
	0x0392C0FC CBNZ W9, 0x392C104
	0x0392C100 BL 0x1C16DFC
	0x0392C104 MOV W0, W20
	0x0392C108 MOV V0.16B, V10.16B
	0x0392C10C MOV V1.16B, V9.16B
	0x0392C110 MOV V2.16B, V8.16B
	0x0392C114 BL 0x392C238
	0x0392C118 MOV X21, X0
	0x0392C11C CBZ X21, 0x392C234
	0x0392C120 ADRP X22, 0x822000
	0x0392C124 LDR X22, [X22 + 0xBC0]
	0x0392C128 MOV X0, X21
	0x0392C12C MOV X1, X31
	0x0392C130 BL 0x3C32ECC
	0x0392C134 LDR X8, [X22]
	0x0392C138 MOV X20, X0
	0x0392C13C MOVN X9, 0x0
	0x0392C140 ADD X0, X31, 0x8
	0x0392C144 MOV X1, X31
	0x0392C148 STP X8, X9, [X31 + 0x8]
	0x0392C14C STR W19, [X31 + 0x18]
	0x0392C150 BL 0x33B162C
	0x0392C154 CBZ X20, 0x392C234
	0x0392C158 ADRP X19, 0x821000
	0x0392C15C LDR X19, [X19 + 0xAC8]
	0x0392C160 MOV X1, X0
	0x0392C164 MOV X0, X20
	0x0392C168 MOV X2, X31
	0x0392C16C BL 0x3C38A84
	0x0392C170 MOV X0, X21
	0x0392C174 MOV X1, X31
	0x0392C178 BL 0x3912AD8
	0x0392C17C LDR X8, [X19]
	0x0392C180 MOV X19, X0
	0x0392C184 LDR W9, [X8 + 0xE0]
	0x0392C188 CBNZ W9, 0x392C194
	0x0392C18C MOV X0, X8
	0x0392C190 BL 0x1C16DFC
	0x0392C194 MOV X0, X31
	0x0392C198 BL 0x38FAD64
	0x0392C19C CBZ X19, 0x392C234
	0x0392C1A0 MOV X1, X0
	0x0392C1A4 MOV X0, X19
	0x0392C1A8 MOV X2, X31
	0x0392C1AC BL 0x3C134D8
	0x0392C1B0 MOV X0, X21
	0x0392C1B4 LDP X20, X19, [X31 + 0x50]
	0x0392C1B8 LDP X22, X21, [X31 + 0x40]
	0x0392C1BC LDR X30, [X31 + 0x38]
	0x0392C1C0 LDP D9, D8, [X31 + 0x28]
	0x0392C1C4 LDR V10, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {19}
	008 Move X19, X1
	009 Move X20, X0
	010 Call SemVer.Equals, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {16}
	015 Move W0, W31
	016 Move W8, [X20+16]
	017 Move W9, [X19+16]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, 1
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Return X0
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W0, TEMP
	029 Move W8, [X20+20]
	030 Move W9, [X19+20]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X20+24]
	033 Move W9, [X19+24]
	034 Move TEMP, 0x80000000
	035 Not TEMP
	036 Move W10, TEMP
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, 0xAB6000
	043 Move X21, 0x7C8000
	044 Move W8, [X22+2270]
	045 Move X21, [X21+2440]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Move X0, 0x7C8000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+2270], W8
	055 Move X8, [X20+32]
	056 Move X9, [X21]
	057 Move X1, X31
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Call String.IsNullOrEmpty, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {85}
	065 Move W8, [X22+2270]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {75}
	070 Move X0, 0x7C8000
	071 Move X0, [X0+2440]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+2270], W8
	075 Move X8, [X19+32]
	076 Move X9, [X21]
	077 Move X1, X31
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Call String.IsNullOrEmpty, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {19}
	085 Move W8, [X22+2270]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {95}
	090 Move X0, 0x7C8000
	091 Move X0, [X0+2440]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X22+2270], W8
	095 Move X8, [X20+32]
	096 Move X9, [X21]
	097 Move X1, X31
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Call String.IsNullOrEmpty, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {125}
	105 Move W8, [X22+2270]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {115}
	110 Move X0, 0x7C8000
	111 Move X0, [X0+2440]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X22+2270], W8
	115 Move X8, [X19+32]
	116 Move X9, [X21]
	117 Move X1, X31
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Call String.IsNullOrEmpty, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {26}
	125 Move W8, [X20+28]
	126 Move W9, [X19+28]
	127 Move TEMP, 0x80000000
	128 Not TEMP
	129 Move W10, TEMP
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSEL not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSINV not yet implemented."

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C1D8 LDR X0, [X8]
	0x0392C1DC LDR W8, [X0 + 0xE0]
	0x0392C1E0 CBNZ W8, 0x392C1E8
	0x0392C1E4 BL 0x1C16DFC
	0x0392C1E8 ADRP X8, 0xFFFFFFFFFD1BE000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {5}
	003 Call SemVer.Equals, X0, X1
	004 Return X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C1EC LDR V1, [X8 + 0x44C]
	0x0392C1F0 MOVZ W9, 0x43B40000
	0x0392C1F4 FMOV S2, W9
	0x0392C1F8 FMOV S0, 1
	0x0392C1FC MOVZ W1, 0xC
	0x0392C200 MOVZ W2, 0x10
	0x0392C204 MOVZ W3, 0x1
	0x0392C208 MOVZ W4, 0x1
	0x0392C20C MOV W0, W20
	0x0392C210 MOV V3.16B, V2.16B

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move [X31-16], X30
	004 Call SemVer.Equals, X0, X1
	005 Move X30, [X31+16]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 NotImplemented "Instruction ORN not yet implemented."
	009 And W0, W8, 1
	010 Return X0

Method: System.Boolean op_LessThan(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C214 BL 0x3932904
	0x0392C218 CBZ X0, 0x392C234
	0x0392C21C LDR X1, [X0 + 0x28]
	0x0392C220 MOV W2, W31
	0x0392C224 MOV X3, X31
	0x0392C228 MOV X21, X0
	0x0392C22C BL 0x397F750
	0x0392C230 B 0x392C088
	0x0392C234 BL 0x1C16F20

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {10}
	003 Move [X31-16], X30
	004 Call SemVer.CompareTo, X0, X1
	005 Move W0, W0
	006 ShiftRight W0, 31
	007 And W0, W0, 0x7FFFFFFF
	008 Move X30, [X31+16]
	009 Return X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Return X0

Method: System.Boolean op_GreaterThan(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C238 SUB X31, X31, 0xB0
	0x0392C23C STR D8, [X31 + 0x60]
	0x0392C240 STP X30, X25, [X31 + 0x70]
	0x0392C244 STP X24, X23, [X31 + 0x80]
	0x0392C248 STP X22, X21, [X31 + 0x90]
	0x0392C24C STP X20, X19, [X31 + 0xA0]
	0x0392C250 STR D1, [X31]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {8}
	003 Move [X31-16], X30
	004 Call SemVer.CompareTo, X0, X1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean op_LessThanOrEqual(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C254 STR D0, [X31 + 0x10]
	0x0392C258 ADRP X20, 0xAB5000
	0x0392C25C ADRP X21, 0x822000
	0x0392C260 LDRB W8, [X20 + 0x8EE]
	0x0392C264 LDR X21, [X21 + 0xBB8]
	0x0392C268 MOV V8.16B, V2.16B
	0x0392C26C MOV W19, W0
	0x0392C270 TBNZ X8, 0x0, 0x392C2AC
	0x0392C274 ADRP X0, 0x822000
	0x0392C278 LDR X0, [X0 + 0x528]
	0x0392C27C BL 0x1C16CF4
	0x0392C280 ADRP X0, 0x822000
	0x0392C284 LDR X0, [X0 + 0xBB8]
	0x0392C288 BL 0x1C16CF4
	0x0392C28C ADRP X0, 0x7C9000
	0x0392C290 LDR X0, [X0 + 0x9B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {13}
	006 Move X19, X1
	007 Move X20, X0
	008 Call SemVer.Equals, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W0, 1
	014 Move X0, X20
	015 Move X1, X19
	016 Call SemVer.CompareTo, X0, X1
	017 Move W0, W0
	018 ShiftRight W0, 31
	019 And W0, W0, 0x7FFFFFFF
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean op_GreaterThanOrEqual(UnityEngine.ProBuilder.SemVer left, UnityEngine.ProBuilder.SemVer right)

Disassembly:
	0x0392C294 BL 0x1C16CF4
	0x0392C298 ADRP X0, 0x822000
	0x0392C29C LDR X0, [X0 + 0xBC8]
	0x0392C2A0 BL 0x1C16CF4
	0x0392C2A4 MOVZ W8, 0x1
	0x0392C2A8 STRB W8, [X20 + 0x8EE]
	0x0392C2AC LDR X0, [X21]
	0x0392C2B0 MOVI V0.2D, 0x0
	0x0392C2B4 STP V0, V0, [X31 + 0x40]
	0x0392C2B8 LDR W8, [X0 + 0xE0]
	0x0392C2BC CBNZ W8, 0x392C2C8
	0x0392C2C0 BL 0x1C16DFC
	0x0392C2C4 LDR X0, [X21]
	0x0392C2C8 LDR X8, [X0 + 0xB8]
	0x0392C2CC LDR X8, [X8 + 0x18]
	0x0392C2D0 CBZ X8, 0x392C4A0
	0x0392C2D4 ADRP X9, 0x7C9000
	0x0392C2D8 LDR X9, [X9 + 0x9B0]
	0x0392C2DC LDR W1, [X8 + 0x18]
	0x0392C2E0 ADRP X23, 0x822000
	0x0392C2E4 ADRP X22, 0x822000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X19
	008 Move X20, X0
	009 Call SemVer.Equals, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {17}
	014 Move W0, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X0, X20
	018 Move X1, X19
	019 Call SemVer.CompareTo, X0, X1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x0392C2E8 LDR X0, [X9]
	0x0392C2EC LDR X23, [X23 + 0x528]
	0x0392C2F0 LDR X22, [X22 + 0xBC8]
	0x0392C2F4 BL 0x1C16D6C
	0x0392C2F8 LDP V1, V0, [X31]
	0x0392C2FC MOV X20, X0
	0x0392C300 MOV W24, W31
	0x0392C304 MOVZ W25, 0xC
	0x0392C308 MOV V0.S[1], V1.S[0]
	0x0392C30C STR V0, [X31 + 0x1]
	0x0392C310 LDR X0, [X21]
	0x0392C314 LDR W8, [X0 + 0xE0]
	0x0392C318 CBNZ W8, 0x392C324
	0x0392C31C BL 0x1C16DFC
	0x0392C320 LDR X0, [X21]
	0x0392C324 LDR X9, [X0 + 0xB8]
	0x0392C328 LDR X8, [X9 + 0x18]
	0x0392C32C CBZ X8, 0x392C4A0
	0x0392C330 LDR W10, [X8 + 0x18]
	0x0392C334 CMP W24, W10
	0x0392C338 B.GE 0x392C3C4
	0x0392C33C LDR W10, [X0 + 0xE0]
	0x0392C340 CBNZ W10, 0x392C358
	0x0392C344 BL 0x1C16DFC
	0x0392C348 LDR X8, [X21]
	0x0392C34C LDR X9, [X8 + 0xB8]
	0x0392C350 LDR X8, [X9 + 0x18]
	0x0392C354 CBZ X8, 0x392C4A0
	0x0392C358 LDR W10, [X8 + 0x18]
	0x0392C35C CMP W24, W10
	0x0392C360 B.CS 0x392C4A4
	0x0392C364 LDR X9, [X9 + 0x10]
	0x0392C368 CBZ X9, 0x392C4A0
	0x0392C36C SXTW X10, W24
	0x0392C370 ADD X8, X8, X10, 0x2, LSL
	0x0392C374 LDRSW X8, [X8 + 0x20]
	0x0392C378 LDR W11, [X9 + 0x18]
	0x0392C37C CMP W8, W11
	0x0392C380 B.CS 0x392C4A4
	0x0392C384 CBZ X20, 0x392C4A0
	0x0392C388 LDR W11, [X20 + 0x18]
	0x0392C38C CMP W24, W11
	0x0392C390 B.CS 0x392C4A4
	0x0392C394 MADD X8, X8, X25, X9
	0x0392C398 LDR V0, [X8 + 0x20]
	0x0392C39C LDR V1, [X8 + 0x28]
	0x0392C3A0 LDR V2, [X31 + 0x1]
	0x0392C3A4 NOP
	0x0392C3A8 MADD X8, X10, X25, X20
	0x0392C3AC ADD W24, W24, 0x1
	0x0392C3B0 FMUL S1, S8, S1
	0x00000000 INVALID
	0x0392C3B8 STR D0, [X8 + 0x20]
	0x0392C3BC STR S1, [X8 + 0x28]
	0x0392C3C0 B 0x392C310
	0x0392C3C4 LDR X0, [X23]
	0x0392C3C8 LDR W8, [X0 + 0xE0]
	0x0392C3CC CBNZ W8, 0x392C3D4
	0x0392C3D0 BL 0x1C16DFC
	0x0392C3D4 MOV X0, X20
	0x0392C3D8 MOV X1, X31
	0x0392C3DC BL 0x39190C4
	0x0392C3E0 CBZ X0, 0x392C4A0
	0x0392C3E4 MOV X1, X31
	0x0392C3E8 MOV X20, X0
	0x0392C3EC BL 0x3C32ECC
	0x0392C3F0 CBZ X0, 0x392C4A0
	0x0392C3F4 LDR X1, [X22]
	0x0392C3F8 MOV X2, X31
	0x0392C3FC BL 0x3C38A84
	0x0392C400 CBNZ W19, 0x392C470
	0x0392C404 LDR X21, [X20 + 0x28]
	0x0392C408 CBZ X21, 0x392C4A0
	0x0392C40C LDR W8, [X21 + 0x18]
	0x0392C410 CMP W8, 0x1
	0x0392C414 B.LT 0x392C470
	0x0392C418 MOV W22, W31
	0x0392C41C MOVI V8.2S, 0xBF, 0x18
	0x0392C420 CMP W22, W8
	0x0392C424 B.CS 0x392C4A4
	0x0392C428 ADD X8, X21, W22, 0x3, SXTW
	0x0392C42C LDR X23, [X8 + 0x20]
	0x0392C430 CBZ X23, 0x392C4A0
	0x0392C434 LDUR V0, [X23 + 0x2C]
	0x0392C438 LDUR V1, [X23 + 0x1C]
	0x0392C43C ADD X0, X31, 0x40
	0x0392C440 ADD X1, X31, 0x20
	0x0392C444 MOV X2, X31
	0x0392C448 STP V1, V0, [X31 + 0x20]
	0x0392C44C BL 0x38F69EC
	0x0392C450 STR D8, [X31 + 0x50]
	0x0392C454 LDP V1, V0, [X31 + 0x40]
	0x0392C458 ADD W22, W22, 0x1
	0x0392C45C STUR V0, [X23 + 0x2C]
	0x0392C460 STUR V1, [X23 + 0x1C]
	0x0392C464 LDR W8, [X21 + 0x18]
	0x0392C468 CMP W22, W8
	0x0392C46C B.LT 0x392C420
	0x0392C470 MOV X0, X20
	0x0392C474 MOV W1, W19
	0x0392C478 MOV X2, X31
	0x0392C47C BL 0x3975658
	0x0392C480 MOV X0, X20
	0x0392C484 LDP X20, X19, [X31 + 0xA0]
	0x0392C488 LDP X22, X21, [X31 + 0x90]
	0x0392C48C LDP X24, X23, [X31 + 0x80]
	0x0392C490 LDP X30, X25, [X31 + 0x70]
	0x0392C494 LDR V8, [X31 + 0x60]
	0x0392C498 ADD X31, X31, 0xB0
	0x0392C49C RET
	0x0392C4A0 BL 0x1C16F20
	0x0392C4A4 BL 0x1C16F28
	0x0392C4A8 SUB X31, X31, 0xD0
	0x0392C4AC STP D15, D14, [X31 + 0x30]
	0x0392C4B0 STP D13, D12, [X31 + 0x40]
	0x0392C4B4 STP D11, D10, [X31 + 0x50]
	0x0392C4B8 STP D9, D8, [X31 + 0x60]
	0x0392C4BC STP X29, X30, [X31 + 0x70]
	0x0392C4C0 STP X28, X27, [X31 + 0x80]
	0x0392C4C4 STP X26, X25, [X31 + 0x90]
	0x0392C4C8 STP X24, X23, [X31 + 0xA0]
	0x0392C4CC STP X22, X21, [X31 + 0xB0]
	0x0392C4D0 STP X20, X19, [X31 + 0xC0]
	0x0392C4D4 ADRP X19, 0xAB5000
	0x0392C4D8 LDRB W8, [X19 + 0x8EB]
	0x0392C4DC MOV W20, W2
	0x0392C4E0 MOV V8.16B, V2.16B
	0x0392C4E4 MOV V9.16B, V1.16B
	0x0392C4E8 MOV V10.16B, V0.16B
	0x0392C4EC STR W1, [X31 + 0x28]
	0x0392C4F0 STR W0, [X31 + 0x8]
	0x0392C4F4 TBNZ X8, 0x0, 0x392C56C
	0x0392C4F8 ADRP X0, 0x822000
	0x0392C4FC LDR X0, [X0 + 0xBD0]
	0x0392C500 BL 0x1C16CF4
	0x0392C504 ADRP X0, 0x822000
	0x0392C508 LDR X0, [X0 + 0xBD8]
	0x0392C50C BL 0x1C16CF4
	0x0392C510 ADRP X0, 0x822000
	0x0392C514 LDR X0, [X0 + 0xBE0]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xAB6000
	013 Move X22, 0x7C8000
	014 Move W8, [X20+2276]
	015 Move X22, [X22+2288]
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x7C8000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2276], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X20, X0
	031 Call StringBuilder..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {153}
	034 Move X0, X21
	035 Move X1, X31
	036 Call String.ToCharArray, X0
	037 Compare X0, 0
	038 JumpIfEqual {153}
	039 Move X9, [X0+24]
	040 Move X21, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, 0x7C8000
	043 Move X22, [X22+2440]
	044 Move W8, W31
	045 Move X23, X31
	046 And X9, X9, 0
	047 Add X24, X21, 32
	048 Move X25, 0xAB6000
	049 Move W26, 1
	050 Move X27, 0xAB6000
	051 Move X28, 0xAB6000
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {63}
	058 Compare X20, 0
	059 JumpIfEqual {153}
	060 Move X0, X20
	061 Move X2, X31
	062 Call StringBuilder.Append, X0, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Compare X20, 0
	072 JumpIfEqual {153}
	073 Move W1, [X19+16]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, [X28+2272]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X22
	082 Call 0x1C17CF4
	083 Move [X28+2272], W26
	084 Compare X20, 0
	085 JumpIfEqual {153}
	086 Move X8, [X19+48]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W8, 1
	090 Move W8, [X27+2270]
	091 Move TEMP, X8
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {98}
	095 Move X0, X22
	096 Call 0x1C17CF4
	097 Move [X27+2270], W26
	098 Compare X20, 0
	099 JumpIfEqual {153}
	100 Move X8, [X19+32]
	101 Compare X20, 0
	102 JumpIfEqual {153}
	103 Move W1, [X19+20]
	104 Compare X20, 0
	105 JumpIfEqual {153}
	106 Move W1, [X19+24]
	107 Move W8, [X25+2271]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X22
	113 Call 0x1C17CF4
	114 Move [X25+2271], W26
	115 Compare X20, 0
	116 JumpIfEqual {153}
	117 Move X8, [X19+40]
	118 Move X9, [X22]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X20
	121 Move X2, X31
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Call StringBuilder.Append, X0, X1
	124 Compare X20, 0
	125 JumpIfEqual {153}
	126 Move W1, [X19+28]
	127 Move X0, X20
	128 Move X2, X31
	129 Call StringBuilder.Append, X0, X1
	130 Move W8, W31
	131 Move W9, [X21+24]
	132 Add X23, X23, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Compare X20, 0
	135 JumpIfEqual {153}
	136 Move X8, [X20]
	137 Move X0, X20
	138 Move X20, [X31+80]
	139 Move X19, [X31+88]
	140 Move X22, [X31+64]
	141 Move X21, [X31+72]
	142 Move X2, [X8+360]
	143 Move X1, [X8+368]
	144 Move X24, [X31+48]
	145 Move X23, [X31+56]
	146 Move X26, [X31+32]
	147 Move X25, [X31+40]
	148 Move X28, [X31+16]
	149 Move X27, [X31+24]
	150 Move X30, [X31+96]
	151 CallNoReturn X2
	152 Call 0x1C17F28
	153 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0392C518 BL 0x1C16CF4
	0x0392C51C ADRP X0, 0x822000
	0x0392C520 LDR X0, [X0 + 0x3F0]
	0x0392C524 BL 0x1C16CF4
	0x0392C528 ADRP X0, 0x822000
	0x0392C52C LDR X0, [X0 + 0x560]
	0x0392C530 BL 0x1C16CF4
	0x0392C534 ADRP X0, 0x7C8000
	0x0392C538 LDR X0, [X0 + 0xE58]
	0x0392C53C BL 0x1C16CF4
	0x0392C540 ADRP X0, 0x822000
	0x0392C544 LDR X0, [X0 + 0x528]
	0x0392C548 BL 0x1C16CF4
	0x0392C54C ADRP X0, 0x7C9000
	0x0392C550 LDR X0, [X0 + 0x9B0]
	0x0392C554 BL 0x1C16CF4
	0x0392C558 ADRP X0, 0x822000
	0x0392C55C LDR X0, [X0 + 0xBE8]
	0x0392C560 BL 0x1C16CF4
	0x0392C564 MOVZ W8, 0x1
	0x0392C568 STRB W8, [X19 + 0x8EB]
	0x0392C56C ADRP X8, 0x7C9000
	0x0392C570 LDR X8, [X8 + 0x9B0]
	0x0392C574 LDR W19, [X31 + 0x28]
	0x0392C578 LDR X0, [X8]
	0x0392C57C UBFM W24, W19, 0x1D, 0x1C
	0x0392C580 MOV W1, W24
	0x0392C584 BL 0x1C16D6C
	0x0392C588 ADRP X8, 0x822000
	0x0392C58C LDR X8, [X8 + 0x3F0]
	0x0392C590 MOV X29, X0
	0x0392C594 UBFM W25, W19, 0x1F, 0x1E
	0x0392C598 MOV W1, W25
	0x0392C59C LDR X0, [X8]
	0x0392C5A0 BL 0x1C16D6C
	0x0392C5A4 MOV X28, X0
	0x0392C5A8 CMP W19, 0x1
	0x0392C5AC SCVTF S11, W19
	0x0392C5B0 B.LT 0x392C894
	0x0392C5B4 STR W20, [X31 + 0x2C]
	0x0392C5B8 CBZ X29, 0x392CE30
	0x0392C5BC MOV W8, W31
	0x0392C5C0 MOV W21, W31
	0x0392C5C4 MOV W19, W31
	0x0392C5C8 MOVZ W20, 0xC
	0x0392C5CC LDR W9, [X29 + 0x18]
	0x0392C5D0 CMP W8, W9
	0x0392C5D4 B.CS 0x392CE2C
	0x0392C5D8 SCVTF S0, W19
	0x0392C5DC SXTW X22, W8
	0x0392C5E0 FDIV S0, S0, S11
	0x0392C5E4 MADD X8, X22, X20, X29
	0x0392C5E8 FMUL S1, S9, S0
	0x0392C5EC FMUL S0, S8, S0
	0x0392C5F0 STP S10, S1, [X8 + 0x20]
	0x0392C5F4 STR S0, [X8 + 0x28]
	0x0392C5F8 LDR W9, [X29 + 0x18]
	0x0392C5FC ADD W8, W22, 0x1
	0x0392C600 CMP W8, W9
	0x0392C604 B.CS 0x392CE2C
	0x0392C608 SXTW X8, W8
	0x0392C60C MADD X9, X8, X20, X29
	0x0392C610 STR W31, [X9 + 0x20]
	0x0392C614 STP S1, S0, [X9 + 0x24]
	0x0392C618 LDR W9, [X29 + 0x18]
	0x0392C61C ADD W8, W8, 0x1
	0x0392C620 CMP W8, W9
	0x0392C624 B.CS 0x392CE2C
	0x0392C628 ADD W19, W19, 0x1
	0x0392C62C ADD W9, W22, 0x2
	0x0392C630 SCVTF S1, W19
	0x0392C634 SXTW X9, W9
	0x0392C638 FDIV S2, S1, S11
	0x0392C63C MADD X9, X9, X20, X29
	0x0392C640 FMUL S1, S9, S2
	0x0392C644 STP S10, S1, [X9 + 0x20]
	0x0392C648 STR S0, [X9 + 0x28]
	0x0392C64C LDR W9, [X29 + 0x18]
	0x0392C650 ADD W8, W8, 0x1
	0x0392C654 CMP W8, W9
	0x0392C658 B.CS 0x392CE2C
	0x0392C65C ADD W9, W22, 0x3
	0x0392C660 SXTW X9, W9
	0x0392C664 MADD X9, X9, X20, X29
	0x0392C668 STR W31, [X9 + 0x20]
	0x0392C66C STP S1, S0, [X9 + 0x24]
	0x0392C670 LDR W9, [X29 + 0x18]
	0x0392C674 ADD W8, W8, 0x1
	0x0392C678 CMP W8, W9
	0x0392C67C B.CS 0x392CE2C
	0x0392C680 ADD W9, W22, 0x4
	0x0392C684 SXTW X9, W9
	0x0392C688 MADD X9, X9, X20, X29
	0x0392C68C STP S10, S1, [X9 + 0x20]
	0x0392C690 STR S0, [X9 + 0x28]
	0x0392C694 LDR W9, [X29 + 0x18]
	0x0392C698 ADD W8, W8, 0x1
	0x0392C69C CMP W8, W9
	0x0392C6A0 B.CS 0x392CE2C
	0x0392C6A4 ADD W9, W22, 0x5
	0x0392C6A8 SXTW X9, W9
	0x0392C6AC MADD X9, X9, X20, X29
	0x0392C6B0 STR W31, [X9 + 0x20]
	0x0392C6B4 STP S1, S0, [X9 + 0x24]
	0x0392C6B8 LDR W9, [X29 + 0x18]
	0x0392C6BC ADD W8, W8, 0x1
	0x0392C6C0 CMP W8, W9
	0x0392C6C4 B.CS 0x392CE2C
	0x0392C6C8 ADD W9, W22, 0x6
	0x0392C6CC SXTW X9, W9
	0x0392C6D0 FMUL S0, S8, S2
	0x0392C6D4 MADD X9, X9, X20, X29
	0x0392C6D8 STP S10, S1, [X9 + 0x20]
	0x0392C6DC STR S0, [X9 + 0x28]
	0x0392C6E0 LDR W9, [X29 + 0x18]
	0x0392C6E4 ADD W23, W8, 0x1
	0x0392C6E8 CMP W23, W9
	0x0392C6EC B.CS 0x392CE2C
	0x0392C6F0 ADD W8, W22, 0x7
	0x0392C6F4 SXTW X8, W8
	0x0392C6F8 MADD X8, X8, X20, X29
	0x0392C6FC STR W31, [X8 + 0x20]
	0x0392C700 STP S1, S0, [X8 + 0x24]
	0x0392C704 ADRP X8, 0x7C8000
	0x0392C708 LDR X8, [X8 + 0xE58]
	0x0392C70C MOVZ W1, 0x6
	0x0392C710 LDR X0, [X8]
	0x0392C714 BL 0x1C16D6C
	0x0392C718 CBZ X0, 0x392CE30
	0x0392C71C LDR W8, [X0 + 0x18]
	0x0392C720 MOV X26, X0
	0x0392C724 CBZ W8, 0x392CE2C
	0x0392C728 SUB W9, W23, 0x7
	0x0392C72C CMP W8, 0x1
	0x0392C730 STR W9, [X26 + 0x20]
	0x0392C734 B.EQ 0x392CE2C
	0x0392C738 ADD W9, W9, 0x1
	0x0392C73C CMP W8, 0x2
	0x0392C740 STR W9, [X26 + 0x24]
	0x0392C744 B.LS 0x392CE2C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAB6000
	007 Move X20, 0x7C8000
	008 Move X21, 0x823000
	009 Move W8, [X22+2277]
	010 Move X20, [X20+2288]
	011 Move X21, [X21+2880]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x7C8000
	018 Move X0, [X0+2288]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C8000
	021 Move X0, [X0+3544]
	022 Call 0x1C17CF4
	023 Move X0, 0x7C9000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D1000
	027 Move X0, [X0+1936]
	028 Call 0x1C17CF4
	029 Move X0, 0x823000
	030 Move X0, [X0+2880]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2277], W8
	034 Move X0, [X20]
	035 Move [X31+12], W31
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X20, X0
	039 Call StringBuilder..ctor, X0
	040 Move X1, [X21]
	041 Move X0, X19
	042 Call SemVer.ToString, X0, X1
	043 Compare X20, 0
	044 JumpIfEqual {170}
	045 Move X1, X0
	046 Move X0, X20
	047 Move X2, X31
	048 Call StringBuilder.Append, X0, X1
	049 Move X22, 0xAB6000
	050 Move X21, 0x7C8000
	051 Move W8, [X22+2270]
	052 Move X21, [X21+2440]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {62}
	057 Move X0, 0x7C8000
	058 Move X0, [X0+2440]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+2270], W8
	062 Move X8, [X19+32]
	063 Move X9, [X21]
	064 Move X1, X31
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Call String.IsNullOrEmpty, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {115}
	072 Move X8, 0x7C9000
	073 Move X8, [X8+680]
	074 Move X0, X20
	075 Move X2, X31
	076 Move X1, [X8]
	077 Call StringBuilder.Append, X0, X1
	078 Move W8, [X22+2270]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {88}
	083 Move X0, 0x7C8000
	084 Move X0, [X0+2440]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X22+2270], W8
	088 Move X8, [X19+32]
	089 Move X9, [X21]
	090 Move X0, X20
	091 Move X2, X31
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Call StringBuilder.Append, X0, X1
	095 Move W8, [X19+28]
	096 Move TEMP, X8
	097 And TEMP, TEMP, -2147483648
	098 Compare TEMP, -2147483648
	099 JumpIfEqual {115}
	100 Move X8, 0x7D1000
	101 Move X8, [X8+1936]
	102 Move X0, X20
	103 Move X2, X31
	104 Move X1, [X8]
	105 Call StringBuilder.Append, X0, X1
	106 Move W8, [X19+28]
	107 Add X0, X31, 12
	108 Move X1, X31
	109 Move [X31+12], W8
	110 Call Int32.ToString, X0
	111 Move X1, X0
	112 Move X0, X20
	113 Move X2, X31
	114 Call StringBuilder.Append, X0, X1
	115 Move X22, 0xAB6000
	116 Move W8, [X22+2272]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {126}
	121 Move X0, 0x7C8000
	122 Move X0, [X0+2440]
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X22+2272], W8
	126 Move X8, [X19+48]
	127 Move X9, [X21]
	128 Move X1, X31
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Call String.IsNullOrEmpty, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {159}
	136 Move X8, 0x7C8000
	137 Move X8, [X8+3544]
	138 Move X0, X20
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call StringBuilder.Append, X0, X1
	142 Move W8, [X22+2272]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {152}
	147 Move X0, 0x7C8000
	148 Move X0, [X0+2440]
	149 Call 0x1C17CF4
	150 Move W8, 1
	151 Move [X22+2272], W8
	152 Move X8, [X19+48]
	153 Move X9, [X21]
	154 Move X0, X20
	155 Move X2, X31
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Call StringBuilder.Append, X0, X1
	159 Move X8, [X20]
	160 Move X0, X20
	161 Move X9, [X8+360]
	162 Move X1, [X8+368]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Move X20, [X31+32]
	165 Move X19, [X31+40]
	166 Move X22, [X31+16]
	167 Move X21, [X31+24]
	168 Move X30, [X31+48]
	169 Return X0
	170 Call 0x1C17F20

Method: System.Boolean TryGetVersionInfo(System.String input, out UnityEngine.ProBuilder.SemVer version)

Disassembly:
	0x0392B774 BL 0x1C16CF4
	0x0392B778 ADRP X0, 0x823000
	0x0392B77C LDR X0, [X0 + 0xB48]
	0x0392B780 BL 0x1C16CF4
	0x0392B784 MOVZ W8, 0x1
	0x0392B788 STRB W8, [X21 + 0x8E7]
	0x0392B78C LDR X0, [X20]
	0x0392B790 ADRP X20, 0x823000
	0x0392B794 LDR W8, [X0 + 0xE0]
	0x0392B798 LDR X20, [X20 + 0xB48]
	0x0392B79C CBNZ W8, 0x392B7A4
	0x0392B7A0 BL 0x1C16DFC
	0x0392B7A4 LDR X1, [X20]
	0x0392B7A8 MOV X0, X19
	0x0392B7AC MOV X2, X31
	0x0392B7B0 BL 0x3632B2C
	0x0392B7B4 STR W31, [X31 + 0xC]
	0x0392B7B8 CBZ X0, 0x392B808
	0x0392B7BC MOV X1, X31
	0x0392B7C0 MOV X19, X0
	0x0392B7C4 BL 0x362F808
	0x0392B7C8 TBZ X0, 0x0, 0x392B7F4
	0x0392B7CC MOV X0, X19
	0x0392B7D0 MOV X1, X31
	0x0392B7D4 BL 0x362F62C
	0x0392B7D8 ADD X1, X31, 0xC
	0x0392B7DC MOV X2, X31
	0x0392B7E0 BL 0x337BDF4
	0x0392B7E4 LDR W8, [X31 + 0xC]
	0x0392B7E8 ANDS W31, W0, 0x1
	0x0392B7EC CSINV W0, W8, W31, NE
	0x0392B7F0 B 0x392B7F8
	0x0392B7F4 MOVN W0, 0x0
	0x0392B7F8 LDP X20, X19, [X31 + 0x20]
	0x0392B7FC LDP X30, X21, [X31 + 0x10]
	0x0392B800 ADD X31, X31, 0x30
	0x0392B804 RET
	0x0392B808 BL 0x1C16F20
	0x0392B80C STR X30, [X31 - 0x30]!
	0x0392B810 STP X22, X21, [X31 + 0x10]
	0x0392B814 STP X20, X19, [X31 + 0x20]
	0x0392B818 ADRP X22, 0xAB6000
	0x0392B81C ADRP X21, 0x7C8000
	0x0392B820 LDRB W8, [X22 + 0x8E8]
	0x0392B824 LDR X21, [X21 + 0x6C0]
	0x0392B828 MOV W20, W1
	0x0392B82C MOV X19, X0
	0x0392B830 TBNZ X8, 0x0, 0x392B860
	0x0392B834 ADRP X0, 0x823000
	0x0392B838 LDR X0, [X0 + 0xB50]
	0x0392B83C BL 0x1C16CF4
	0x0392B840 ADRP X0, 0x823000
	0x0392B844 LDR X0, [X0 + 0xB58]
	0x0392B848 BL 0x1C16CF4
	0x0392B84C ADRP X0, 0x7C8000
	0x0392B850 LDR X0, [X0 + 0x6C0]
	0x0392B854 BL 0x1C16CF4
	0x0392B858 MOVZ W8, 0x1
	0x0392B85C STRB W8, [X22 + 0x8E8]
	0x0392B860 LDR X0, [X21]
	0x0392B864 LDR W8, [X0 + 0xE0]
	0x0392B868 CBNZ W8, 0x392B870
	0x0392B86C BL 0x1C16DFC
	0x0392B870 MOV X0, X19
	0x0392B874 MOV X1, X31
	0x0392B878 MOV X2, X31
	0x0392B87C BL 0x3395194
	0x0392B880 TBNZ X0, 0x0, 0x392B944
	0x0392B884 ADRP X8, 0x823000
	0x0392B888 LDR X0, [X21]
	0x0392B88C LDR X8, [X8 + 0xB50]
	0x0392B890 LDR W9, [X0 + 0xE0]
	0x0392B894 LDR X21, [X8]
	0x0392B898 CBNZ W9, 0x392B8A0
	0x0392B89C BL 0x1C16DFC
	0x0392B8A0 MOV X0, X21
	0x0392B8A4 MOV X1, X31
	0x0392B8A8 BL 0x338C698
	0x0392B8AC CBZ X19, 0x392B98C
	0x0392B8B0 LDR X8, [X19]
	0x0392B8B4 MOV X1, X0
	0x0392B8B8 MOV X0, X19
	0x0392B8BC LDR X9, [X8 + 0x2A8]
	0x0392B8C0 LDR X2, [X8 + 0x2B0]
	0x0392B8C4 BLR X9
	0x0392B8C8 TBNZ X0, 0x0, 0x392B990
	0x0392B8CC MOVZ W1, 0x234
	0x0392B8D0 MOV X0, X19
	0x0392B8D4 MOV X2, X31
	0x0392B8D8 MOV X3, X31
	0x0392B8DC MOV X4, X31
	0x0392B8E0 MOV X5, X31
	0x0392B8E4 MOV X6, X31
	0x0392B8E8 BL 0x33A6488
	0x0392B8EC CBZ X0, 0x392B92C
	0x0392B8F0 ADRP X8, 0x823000
	0x0392B8F4 LDR X8, [X8 + 0xB58]
	0x0392B8F8 LDR X9, [X0]
	0x0392B8FC LDR X8, [X8]
	0x0392B900 LDRB W11, [X9 + 0x130]
	0x0392B904 LDRB W10, [X8 + 0x130]
	0x0392B908 CMP W11, W10
	0x0392B90C B.CS 0x392B918
	0x0392B910 MOV X0, X31
	0x0392B914 B 0x392B92C
	0x0392B918 LDR X9, [X9 + 0xC8]
	0x0392B91C ADD X9, X9, X10, 0x3, LSL
	0x0392B920 LDUR X9, [X9 - 0x8]
	0x0392B924 CMP X9, X8
	0x0392B928 CSEL X0, X0, X31, EQ
	0x0392B92C MOV W1, W20
	0x0392B930 BL 0x392BA98
	0x0392B934 LDP X20, X19, [X31 + 0x20]
	0x0392B938 LDP X22, X21, [X31 + 0x10]
	0x0392B93C LDR X30, [X31], #0x30
	0x0392B940 RET
	0x0392B944 ADRP X0, 0x7CD000
	0x0392B948 LDR X0, [X0 + 0x528]
	0x0392B94C BL 0x1C16D08
	0x0392B950 BL 0x1C16F10
	0x0392B954 MOV X19, X0
	0x0392B958 ADRP X0, 0x823000
	0x0392B95C LDR X0, [X0 + 0xB60]
	0x0392B960 BL 0x1C16D08
	0x0392B964 MOV X20, X0
	0x0392B968 ADRP X0, 0x823000
	0x0392B96C LDR X0, [X0 + 0xB68]
	0x0392B970 BL 0x1C16D08
	0x0392B974 MOV X2, X0
	0x0392B978 MOV X0, X19
	0x0392B97C MOV X1, X20
	0x0392B980 MOV X3, X31
	0x0392B984 BL 0x3315F7C
	0x0392B988 B 0x392B9C0
	0x0392B98C BL 0x1C16F20
	0x0392B990 ADRP X0, 0x7D0000
	0x0392B994 LDR X0, [X0 + 0x578]
	0x0392B998 BL 0x1C16D08
	0x0392B99C BL 0x1C16F10
	0x0392B9A0 MOV X19, X0
	0x0392B9A4 ADRP X0, 0x823000
	0x0392B9A8 LDR X0, [X0 + 0xB70]
	0x0392B9AC BL 0x1C16D08
	0x0392B9B0 MOV X1, X0
	0x0392B9B4 MOV X0, X19
	0x0392B9B8 MOV X2, X31
	0x0392B9BC BL 0x3314A68
	0x0392B9C0 ADRP X0, 0x823000
	0x0392B9C4 LDR X0, [X0 + 0xB78]
	0x0392B9C8 BL 0x1C16D08
	0x0392B9CC MOV X1, X0
	0x0392B9D0 MOV X0, X19
	0x0392B9D4 BL 0x1C16DEC
	0x0392B9D8 B 0x392B9DC
	0x0392B9DC MOV X20, X0
	0x0392B9E0 CMP W1, 0x1
	0x0392B9E4 B.NE 0x392BA8C
	0x0392B9E8 MOV X0, X20
	0x0392B9EC BL 0x3EB1AD0
	0x0392B9F0 MOV X20, X0
	0x0392B9F4 ADRP X0, 0x7C8000
	0x0392B9F8 LDR X0, [X0 + 0x7D0]
	0x0392B9FC BL 0x1C16D08
	0x0392BA00 LDR X8, [X20]
	0x0392BA04 LDR X1, [X8]
	0x0392BA08 BL 0x1C17270
	0x0392BA0C TBZ X0, 0x0, 0x392BA64
	0x0392BA10 LDR X20, [X20]
	0x0392BA14 BL 0x3EB1AE0
	0x0392BA18 ADRP X0, 0x823000
	0x0392BA1C LDR X0, [X0 + 0xB80]
	0x0392BA20 BL 0x1C16D08
	0x0392BA24 MOV X1, X19
	0x0392BA28 MOV X2, X20
	0x0392BA2C MOV X3, X31
	0x0392BA30 BL 0x3227BD4
	0x0392BA34 MOV X19, X0
	0x0392BA38 ADRP X0, 0x7C8000
	0x0392BA3C LDR X0, [X0 + 0xA28]
	0x0392BA40 BL 0x1C16D08
	0x0392BA44 LDR W8, [X0 + 0xE0]
	0x0392BA48 CBNZ W8, 0x392BA50
	0x0392BA4C BL 0x1C16DFC
	0x0392BA50 MOV X0, X19
	0x0392BA54 MOV X1, X31
	0x0392BA58 BL 0x3C0649C
	0x0392BA5C MOV X0, X31
	0x0392BA60 B 0x392B934
	0x0392BA64 MOVZ W0, 0x8
	0x0392BA68 BL 0x3EB1AF0
	0x0392BA6C LDR X8, [X20]
	0x0392BA70 STR X8, [X0]
	0x0392BA74 ADRP X1, 0x589000
	0x0392BA78 ADD X1, X1, 0xE58
	0x0392BA7C MOV X2, X31
	0x0392BA80 BL 0x3EB1B00
	0x0392BA84 MOV X20, X0
	0x0392BA88 BL 0x3EB1AE0
	0x0392BA8C MOV X0, X20
	0x0392BA90 BL 0x1D2C690
	0x0392BA94 BL 0x1990590
	0x0392BA98 STP X30, X23, [X31 - 0x30]!
	0x0392BA9C STP X22, X21, [X31 + 0x10]
	0x0392BAA0 STP X20, X19, [X31 + 0x20]
	0x0392BAA4 ADRP X21, 0xAB6000
	0x0392BAA8 LDRB W8, [X21 + 0x8E9]
	0x0392BAAC MOV W20, W1
	0x0392BAB0 MOV X19, X0
	0x0392BAB4 TBNZ X8, 0x0, 0x392BB14
	0x0392BAB8 ADRP X0, 0x822000
	0x0392BABC LDR X0, [X0 + 0xAC8]
	0x0392BAC0 BL 0x1C16CF4
	0x0392BAC4 ADRP X0, 0x823000
	0x0392BAC8 LDR X0, [X0 + 0xB88]
	0x0392BACC BL 0x1C16CF4
	0x0392BAD0 ADRP X0, 0x7C8000
	0x0392BAD4 LDR X0, [X0 + 0xA58]
	0x0392BAD8 BL 0x1C16CF4
	0x0392BADC ADRP X0, 0x823000
	0x0392BAE0 LDR X0, [X0 + 0xB90]
	0x0392BAE4 BL 0x1C16CF4
	0x0392BAE8 ADRP X0, 0x823000
	0x0392BAEC LDR X0, [X0 + 0xB98]
	0x0392BAF0 BL 0x1C16CF4
	0x0392BAF4 ADRP X0, 0x7C8000
	0x0392BAF8 LDR X0, [X0 + 0x6C0]
	0x0392BAFC BL 0x1C16CF4
	0x0392BB00 ADRP X0, 0x823000
	0x0392BB04 LDR X0, [X0 + 0xBA0]
	0x0392BB08 BL 0x1C16CF4
	0x0392BB0C MOVZ W8, 0x1
	0x0392BB10 STRB W8, [X21 + 0x8E9]
	0x0392BB14 CBZ X19, 0x392BC8C
	0x0392BB18 ADRP X8, 0x7C8000
	0x0392BB1C LDR X8, [X8 + 0xA58]
	0x0392BB20 ADRP X21, 0x823000
	0x0392BB24 LDR X0, [X8]
	0x0392BB28 LDR X21, [X21 + 0xBA0]
	0x0392BB2C BL 0x1C16F10
	0x0392BB30 LDR X1, [X21]
	0x0392BB34 MOV X2, X31
	0x0392BB38 MOV X21, X0
	0x0392BB3C BL 0x3C35934
	0x0392BB40 CBZ X21, 0x392BC88
	0x0392BB44 ADRP X8, 0x823000
	0x0392BB48 LDR X8, [X8 + 0xB88]
	0x0392BB4C MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xAB7000
	008 Move X23, 0x823000
	009 Move X22, 0x7D1000
	010 Move W8, [X21+2278]
	011 Move X23, [X23+3000]
	012 Move X22, [X22+1536]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x7D1000
	020 Move X0, [X0+1536]
	021 Call 0x1C17CF4
	022 Move X0, 0x823000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move X0, 0x824000
	026 Move X0, [X0+2848]
	027 Call 0x1C17CF4
	028 Move X0, 0x824000
	029 Move X0, [X0+2856]
	030 Call 0x1C17CF4
	031 Move X0, 0x824000
	032 Move X0, [X0+2864]
	033 Call 0x1C17CF4
	034 Move X0, 0x824000
	035 Move X0, [X0+2872]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2278], W8
	039 Move X0, [X23]
	040 Call 0x1C17F10
	041 Move TEMP, 0
	042 Not TEMP
	043 Move X8, TEMP
	044 Move X1, X31
	045 Move X21, X0
	046 Move [X0+16], X8
	047 Move [X0+24], X8
	048 Call Object..ctor, X0
	049 Move X8, -48484352
	050 Move V0, [X8+55]
	051 Move [X21+40], X31
	052 Move [X21+48], X31
	053 Move [X21+32], X31
	054 Move [X21+1], V0
	055 Move [X19], X21
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X8, 0x824000
	062 Move X8, [X8+2856]
	063 Move X1, [X8]
	064 Move X0, X20
	065 Move X2, X31
	066 Call Regex.Match, X0, X1
	067 Move X21, X0
	068 Compare X0, 0
	069 JumpIfEqual {206}
	070 Move X0, X21
	071 Move X1, X31
	072 Call Group.get_Success, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {237}
	077 Move X0, X21
	078 Move X1, X31
	079 Call Capture.get_Value, X0
	080 Compare X0, 0
	081 JumpIfEqual {207}
	082 Move W1, 46
	083 Move W2, W31
	084 Move X3, X31
	085 Call String.Split, X0, X1, X2
	086 Move X21, X0
	087 Compare X0, 0
	088 JumpIfEqual {208}
	089 Move W8, [X21+24]
	090 Compare W8, 0
	091 JumpIfEqual {209}
	092 Move X8, [X19]
	093 Compare X8, 0
	094 JumpIfEqual {210}
	095 Move X0, [X21+32]
	096 Add X1, X8, 16
	097 Move X2, X31
	098 Call Int32.TryParse, X0, X1
	099 Move W8, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X19]
	102 Compare X8, 0
	103 JumpIfEqual {212}
	104 Move X0, [X21+40]
	105 Add X1, X8, 20
	106 Move X2, X31
	107 Call Int32.TryParse, X0, X1
	108 Move W8, [X21+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, [X19]
	111 Compare X8, 0
	112 JumpIfEqual {214}
	113 Move X0, [X21+48]
	114 Add X1, X8, 24
	115 Move X2, X31
	116 Call Int32.TryParse, X0, X1
	117 Move X0, [X22]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X8, 0x824000
	123 Move X8, [X8+2864]
	124 Move X1, [X8]
	125 Move X0, X20
	126 Move X2, X31
	127 Call Regex.Match, X0, X1
	128 Move X21, X0
	129 Compare X0, 0
	130 JumpIfEqual {215}
	131 Move X0, X21
	132 Move X1, X31
	133 Call Group.get_Success, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {145}
	138 Move X23, [X19]
	139 Move X0, X21
	140 Move X1, X31
	141 Call Capture.get_Value, X0
	142 Compare X23, 0
	143 JumpIfEqual {219}
	144 Move [X23+32], X0
	145 Move X0, [X22]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X8, 0x824000
	151 Move X8, [X8+2872]
	152 Move X1, [X8]
	153 Move X0, X20
	154 Move X2, X31
	155 Call Regex.Match, X0, X1
	156 Move X21, X0
	157 Compare X0, 0
	158 JumpIfEqual {216}
	159 Move X23, [X19]
	160 Move X0, X21
	161 Move X1, X31
	162 Call Group.get_Success, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {171}
	167 Move X0, X21
	168 Move X1, X31
	169 Call Capture.get_Value, X0
	170 Call SemVer.GetBuildNumber, X0
	171 Move TEMP, 0
	172 Not TEMP
	173 Move W0, TEMP
	174 Compare X23, 0
	175 JumpIfEqual {217}
	176 Move [X23+28], W0
	177 Move X0, [X22]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X8, 0x824000
	183 Move X8, [X8+2848]
	184 Move X1, [X8]
	185 Move X0, X20
	186 Move X2, X31
	187 Call Regex.Match, X0, X1
	188 Move X20, X0
	189 Compare X0, 0
	190 JumpIfEqual {218}
	191 Move X0, X20
	192 Move X1, X31
	193 Call Group.get_Success, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {205}
	198 Move X19, [X19]
	199 Move X0, X20
	200 Move X1, X31
	201 Call Capture.get_Value, X0
	202 Compare X19, 0
	203 JumpIfEqual {220}
	204 Move [X19+40], X0
	205 Move W0, 1
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F28
	210 Call 0x1C17F20
	211 Call 0x1C17F28
	212 Call 0x1C17F20
	213 Call 0x1C17F28
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Move X19, X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, X19
	224 Call 0x3EB2AD0
	225 Move X19, X0
	226 Move X0, 0x7CF000
	227 Move X0, [X0+3264]
	228 Call 0x1C17D08
	229 Move X8, [X19]
	230 Move X1, [X8]
	231 Call 0x1C18270
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {245}
	236 Call 0x3EB2AE0
	237 Move W0, W31
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X30, [X31+48]
	243 Move X23, [X31+56]
	244 Return X0
	245 Move W0, 8
	246 Call 0x3EB2AF0
	247 Move X8, [X19]
	248 Move [X0], X8
	249 Move X1, 0x58A000
	250 Add X1, X1, 3672
	251 Move X2, X31
	252 Call 0x3EB2B00
	253 Move X19, X0
	254 Call 0x3EB2AE0
	255 Move X0, X19
	256 Call 0x1D2D690
	257 Call 0x1991590

Method: System.Int32 GetBuildNumber(System.String input)

Disassembly:
	0x0392C748 ADD W9, W9, 0x1
	0x0392C74C CMP W8, 0x3
	0x0392C750 STR W9, [X26 + 0x28]
	0x0392C754 B.EQ 0x392CE2C
	0x0392C758 SUB W9, W9, 0x1
	0x0392C75C CMP W8, 0x4
	0x0392C760 STR W9, [X26 + 0x2C]
	0x0392C764 B.LS 0x392CE2C
	0x0392C768 ADD W9, W9, 0x2
	0x0392C76C CMP W8, 0x5
	0x0392C770 STR W9, [X26 + 0x30]
	0x0392C774 B.EQ 0x392CE2C
	0x0392C778 SUB W23, W9, 0x1
	0x0392C77C STR W23, [X26 + 0x34]
	0x0392C780 ADRP X8, 0x822000
	0x0392C784 LDR X8, [X8 + 0x560]
	0x0392C788 LDR X0, [X8]
	0x0392C78C BL 0x1C16F10
	0x0392C790 MOV X1, X26
	0x0392C794 MOV X2, X31
	0x0392C798 MOV X27, X0
	0x0392C79C BL 0x3900368
	0x0392C7A0 CBZ X28, 0x392CE30
	0x0392C7A4 LDR W8, [X28 + 0x18]
	0x0392C7A8 MOV X9, X28
	0x0392C7AC CMP W21, W8
	0x0392C7B0 B.CS 0x392CE2C
	0x0392C7B4 ADD X8, X9, W21, 0x3, SXTW
	0x0392C7B8 STR X27, [X8 + 0x20]
	0x0392C7BC ADRP X8, 0x7C8000
	0x0392C7C0 LDR X8, [X8 + 0xE58]
	0x0392C7C4 MOVZ W1, 0x6
	0x0392C7C8 LDR X0, [X8]
	0x0392C7CC BL 0x1C16D6C
	0x0392C7D0 CBZ X0, 0x392CE30
	0x0392C7D4 LDR W8, [X0 + 0x18]
	0x0392C7D8 MOV X26, X0
	0x0392C7DC CBZ W8, 0x392CE2C
	0x0392C7E0 ADD W9, W23, 0x2
	0x0392C7E4 CMP W8, 0x1
	0x0392C7E8 STR W9, [X26 + 0x20]
	0x0392C7EC B.EQ 0x392CE2C
	0x0392C7F0 ADD W9, W9, 0x1
	0x0392C7F4 CMP W8, 0x2
	0x0392C7F8 STR W9, [X26 + 0x24]
	0x0392C7FC B.LS 0x392CE2C
	0x0392C800 ADD W9, W9, 0x1
	0x0392C804 CMP W8, 0x3
	0x0392C808 STR W9, [X26 + 0x28]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAB6000
	007 Move X20, 0x7D0000
	008 Move W8, [X21+2279]
	009 Move X20, [X20+1536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x7D0000
	016 Move X0, [X0+1536]
	017 Call 0x1C17CF4
	018 Move X0, 0x823000
	019 Move X0, [X0+2888]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2279], W8
	023 Move X0, [X20]
	024 Move X20, 0x823000
	025 Move W8, [X0+224]
	026 Move X20, [X20+2888]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X1, [X20]
	031 Move X0, X19
	032 Move X2, X31
	033 Call Regex.Match, X0, X1
	034 Move [X31+12], W31
	035 Compare X0, 0
	036 JumpIfEqual {62}
	037 Move X1, X31
	038 Move X19, X0
	039 Call Group.get_Success, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {53}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Capture.get_Value, X0
	047 Add X1, X31, 12
	048 Move X2, X31
	049 Call Int32.TryParse, X0, X1
	050 Move W8, [X31+12]
	051 And W31, W0, 1
	052 NotImplemented "Instruction CSINV not yet implemented."
	053 Move TEMP, 0
	054 Not TEMP
	055 Move W0, TEMP
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 Move X21, [X31+24]
	060 Add X31, X31, 48
	061 Return X0
	062 Call 0x1C17F20

