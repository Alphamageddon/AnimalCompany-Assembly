Type: UnityEngine.ProBuilder.SharedVertex

Method: System.Int32[] get_arrayInternal()

Disassembly:
	0x03935858 MOV X22, X0
	0x0393585C BL 0x3933B88

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Int32> indexes)

Disassembly:
	0x03934B88 ORN W8, W31, W0, 0x0
	0x03934B8C UBFM W0, W8, 0x1F, 0x1F
	0x03934B90 LDR X30, [X31], #0x30
	0x03934B94 RET
	0x03934B98 STR X30, [X31 - 0x10]!
	0x03934B9C LDR X0, [X0 + 0x10]
	0x03934BA0 CBZ X0, 0x3934BB0
	0x03934BA4 MOV X3, X31
	0x03934BA8 LDR X30, [X31], #0x10
	0x03934BAC B 0x339FC34
	0x03934BB0 BL 0x1C16F20
	0x03934BB4 STR X30, [X31 - 0x30]!
	0x03934BB8 STP X22, X21, [X31 + 0x10]
	0x03934BBC STP X20, X19, [X31 + 0x20]
	0x03934BC0 ADRP X22, 0xAAD000
	0x03934BC4 ADRP X21, 0x81A000
	0x03934BC8 LDRB W8, [X22 + 0x902]
	0x03934BCC LDR X21, [X21 + 0xD00]
	0x03934BD0 MOV W20, W1
	0x03934BD4 MOV X19, X0
	0x03934BD8 TBNZ X8, 0x0, 0x3934BFC
	0x03934BDC ADRP X0, 0x81A000
	0x03934BE0 LDR X0, [X0 + 0x6E0]
	0x03934BE4 BL 0x1C16CF4
	0x03934BE8 ADRP X0, 0x81A000
	0x03934BEC LDR X0, [X0 + 0xD00]
	0x03934BF0 BL 0x1C16CF4
	0x03934BF4 MOVZ W8, 0x1
	0x03934BF8 STRB W8, [X22 + 0x902]
	0x03934BFC LDR X0, [X19 + 0x10]
	0x03934C00 LDR X2, [X21]
	0x03934C04 MOV W1, W20
	0x03934C08 BL 0x22E7518
	0x03934C0C MOV W21, W0
	0x03934C10 TBNZ X0, 0x1F, 0x3934C30
	0x03934C14 ADRP X8, 0x81A000
	0x03934C18 LDR X8, [X8 + 0x6E0]
	0x03934C1C LDR X0, [X19 + 0x10]
	0x03934C20 MOV W1, W20
	0x03934C24 LDR X2, [X8]
	0x03934C28 BL 0x217FBE4
	0x03934C2C STR X0, [X19 + 0x10]
	0x03934C30 ORN W8, W31, W21, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAAE000
	006 Move W8, [X21+2299]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7C2000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2299], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X20, 0
	022 JumpIfEqual {34}
	023 Move X8, 0x7C2000
	024 Move X8, [X8+2504]
	025 Move X0, X20
	026 Move X1, [X8]
	027 Call Enumerable.ToArray, X0
	028 Move [X19+16], X0
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Move X0, 0x7C5000
	035 Move X0, [X0+1320]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x7F8000
	040 Move X0, [X0+3600]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call ArgumentNullException..ctor, X0, X1
	046 Move X0, 0x81B000
	047 Move X0, [X0+3200]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Void .ctor(UnityEngine.ProBuilder.SharedVertex sharedVertex)

Disassembly:
	0x03935860 LDR W8, [X20 + 0x18]
	0x03935864 CMP X21, X8
	0x03935868 B.CS 0x3935898
	0x0393586C STR X22, [X26, X21, LSL #3]
	0x03935870 ADD X21, X21, 0x1
	0x03935874 CMP X21, W8, SXTW
	0x03935878 B.LT 0x3935834
	0x0393587C MOV X0, X20
	0x03935880 LDP X20, X19, [X31 + 0x40]
	0x03935884 LDP X22, X21, [X31 + 0x30]
	0x03935888 LDP X24, X23, [X31 + 0x20]
	0x0393588C LDP X26, X25, [X31 + 0x10]
	0x03935890 LDR X30, [X31], #0x50
	0x03935894 RET
	0x03935898 BL 0x1C16F28
	0x0393589C ADRP X0, 0x7C3000
	0x039358A0 LDR X0, [X0 + 0x528]
	0x039358A4 BL 0x1C16D08
	0x039358A8 BL 0x1C16F10
	0x039358AC MOV X19, X0
	0x039358B0 ADRP X0, 0x7E7000
	0x039358B4 LDR X0, [X0 + 0x1C0]
	0x039358B8 BL 0x1C16D08
	0x039358BC MOV X1, X0
	0x039358C0 MOV X0, X19
	0x039358C4 MOV X2, X31
	0x039358C8 BL 0x330E100
	0x039358CC ADRP X0, 0x819000
	0x039358D0 LDR X0, [X0 + 0xD48]
	0x039358D4 BL 0x1C16D08
	0x039358D8 MOV X1, X0
	0x039358DC MOV X0, X19
	0x039358E0 BL 0x1C16DEC
	0x039358E4 BL 0x1C16F20
	0x039358E8 STP X30, X23, [X31 - 0x30]!
	0x039358EC STP X22, X21, [X31 + 0x10]
	0x039358F0 STP X20, X19, [X31 + 0x20]
	0x039358F4 ADRP X22, 0xAAC000
	0x039358F8 ADRP X23, 0x7BF000
	0x039358FC ADRP X21, 0x7E6000
	0x03935900 LDRB W8, [X22 + 0x907]
	0x03935904 LDR X23, [X23 + 0xE30]
	0x03935908 LDR X21, [X21 + 0x798]
	0x0393590C MOV X20, X1
	0x03935910 MOV X19, X0
	0x03935914 TBNZ X8, 0x0, 0x3935944
	0x03935918 ADRP X0, 0x7E6000
	0x0393591C LDR X0, [X0 + 0x790]
	0x03935920 BL 0x1C16CF4
	0x03935924 ADRP X0, 0x7E6000
	0x03935928 LDR X0, [X0 + 0x798]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAAD000
	006 Move W8, [X21+2300]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7C0000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2300], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X19, 0
	022 JumpIfEqual {45}
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {44}
	026 Move X9, 0x7C0000
	027 Move X9, [X9+3672]
	028 Move W1, [X8+24]
	029 Move X0, [X9]
	030 Call 0x1C17D6C
	031 Move [X20+16], X0
	032 Compare X0, 0
	033 JumpIfEqual {44}
	034 Move X1, X0
	035 Move X0, [X19+16]
	036 Move W2, [X1+24]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X3, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call Array.Copy, X0, X1, X2
	043 Return 
	044 Call 0x1C17F20
	045 Move X0, 0x7C4000
	046 Move X0, [X0+1320]
	047 Call 0x1C17D08
	048 Call 0x1C17F10
	049 Move X19, X0
	050 Move X0, 0x81A000
	051 Move X0, [X0+3312]
	052 Call 0x1C17D08
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call ArgumentNullException..ctor, X0, X1
	057 Move X0, 0x81A000
	058 Move X0, [X0+3320]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Call 0x1C17DEC

Method: System.Int32 get_Item(System.Int32 i)

Disassembly:
	0x039292DC BL 0x1C16CF4
	0x039292E0 ADRP X0, 0x7CA000
	0x039292E4 LDR X0, [X0 + 0x6C0]
	0x039292E8 BL 0x1C16CF4
	0x039292EC MOVZ W8, 0x1
	0x039292F0 STRB W8, [X21 + 0x8D8]
	0x039292F4 CBZ X19, 0x3929350
	0x039292F8 CMP X20, X19
	0x039292FC B.EQ 0x3929358
	0x03929300 MOV X0, X19
	0x03929304 MOV X1, X31
	0x03929308 BL 0x33BE520

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move W0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void set_Item(System.Int32 i, System.Int32 value)

Disassembly:
	0x03935948 BL 0x1C16F10
	0x0393594C LDR X2, [X21]
	0x03935950 MOV X1, X20
	0x03935954 MOV X21, X0
	0x03935958 BL 0x2FDC030
	0x0393595C CBZ X21, 0x393598C
	0x03935960 ADRP X8, 0x7E6000
	0x03935964 LDR X8, [X8 + 0x790]
	0x03935968 MOV X0, X21
	0x0393596C LDR X1, [X8]
	0x03935970 BL 0x2FDE354
	0x03935974 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move [X8+32], W2
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Collections.Generic.IEnumerator`1<System.Int32> GetEnumerator()

Disassembly:
	0x03935978 MOV X1, X21
	0x0393597C LDP X20, X19, [X31 + 0x20]
	0x03935980 LDP X22, X21, [X31 + 0x10]
	0x03935984 LDP X30, X23, [X31], #0x30
	0x03935988 B 0x3935990
	0x0393598C BL 0x1C16F20
	0x03935990 SUB X31, X31, 0xA0
	0x03935994 STR X30, [X31 + 0x40]
	0x03935998 STP X28, X27, [X31 + 0x50]
	0x0393599C STP X26, X25, [X31 + 0x60]
	0x039359A0 STP X24, X23, [X31 + 0x70]
	0x039359A4 STP X22, X21, [X31 + 0x80]
	0x039359A8 STP X20, X19, [X31 + 0x90]
	0x039359AC ADRP X21, 0xAAC000
	0x039359B0 LDRB W8, [X21 + 0x908]
	0x039359B4 MOV X19, X1
	0x039359B8 MOV X20, X0
	0x039359BC TBNZ X8, 0x0, 0x3935A40
	0x039359C0 ADRP X0, 0x819000
	0x039359C4 LDR X0, [X0 + 0xD50]
	0x039359C8 BL 0x1C16CF4
	0x039359CC ADRP X0, 0x7E8000
	0x039359D0 LDR X0, [X0 + 0x8B0]
	0x039359D4 BL 0x1C16CF4
	0x039359D8 ADRP X0, 0x819000
	0x039359DC LDR X0, [X0 + 0xD58]
	0x039359E0 BL 0x1C16CF4
	0x039359E4 ADRP X0, 0x7E9000
	0x039359E8 LDR X0, [X0 + 0xB18]
	0x039359EC BL 0x1C16CF4
	0x039359F0 ADRP X0, 0x7E9000
	0x039359F4 LDR X0, [X0 + 0xB28]
	0x039359F8 BL 0x1C16CF4
	0x039359FC ADRP X0, 0x7E9000
	0x03935A00 LDR X0, [X0 + 0xB38]
	0x03935A04 BL 0x1C16CF4
	0x03935A08 ADRP X0, 0x819000
	0x03935A0C LDR X0, [X0 + 0xD60]
	0x03935A10 BL 0x1C16CF4
	0x03935A14 ADRP X0, 0x7E9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAAD000
	005 Move W8, [X20+2301]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7E7000
	012 Move X0, [X0+1976]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2301], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x7E7000
	020 Move X8, [X19]
	021 Move X10, [X10+1976]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03935A18 LDR X0, [X0 + 0xB50]
	0x03935A1C BL 0x1C16CF4
	0x03935A20 ADRP X0, 0x819000
	0x03935A24 LDR X0, [X0 + 0xD68]
	0x03935A28 BL 0x1C16CF4
	0x03935A2C ADRP X0, 0x819000
	0x03935A30 LDR X0, [X0 + 0xD70]
	0x03935A34 BL 0x1C16CF4
	0x03935A38 MOVZ W8, 0x1
	0x03935A3C STRB W8, [X21 + 0x908]
	0x03935A40 STP X31, X31, [X31 + 0x20]
	0x03935A44 STR X31, [X31 + 0x30]
	0x03935A48 CBZ X19, 0x3935C60
	0x03935A4C ADRP X8, 0x7E9000
	0x03935A50 LDR X8, [X8 + 0xB50]
	0x03935A54 ADRP X21, 0x7E9000
	0x03935A58 ADRP X22, 0x7E8000
	0x03935A5C ADRP X25, 0x819000
	0x03935A60 LDR X21, [X21 + 0xB28]
	0x03935A64 LDR X22, [X22 + 0x8B0]
	0x03935A68 LDR X25, [X25 + 0xD70]
	0x03935A6C LDR X1, [X8]
	0x03935A70 ADRP X23, 0x819000
	0x03935A74 ADRP X24, 0x819000
	0x03935A78 ADRP X26, 0x7E9000
	0x03935A7C LDR X23, [X23 + 0xD58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAAD000
	007 Move X20, 0x7C1000
	008 Move X21, 0x819000
	009 Move W8, [X22+2302]
	010 Move X20, [X20+928]
	011 Move X21, [X21+3528]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x819000
	018 Move X0, [X0+3528]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C1000
	021 Move X0, [X0+928]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2302], W8
	025 Move X0, [X19+16]
	026 Move X1, [X20]
	027 Move X2, [X21]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call 0x2181A28, X0, X1
	034 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03935A80 LDR X24, [X24 + 0xD50]

ISIL:
	001 Call SharedVertex.GetEnumerator, X0
	002 Return X0

Method: System.Void Add(System.Int32 item)

Disassembly:
	0x03935A84 LDR X26, [X26 + 0xB18]
	0x03935A88 ADD X8, X31, 0x8
	0x03935A8C MOV X0, X19
	0x03935A90 BL 0x2FDD2BC
	0x03935A94 LDUR V0, [X31 + 0x8]
	0x03935A98 LDR X8, [X31 + 0x18]
	0x03935A9C STR V0, [X31 + 0x2]
	0x03935AA0 STR X8, [X31 + 0x30]
	0x03935AA4 LDR X1, [X21]
	0x03935AA8 ADD X0, X31, 0x20
	0x03935AAC BL 0x2BBDDA0
	0x03935AB0 TBZ X0, 0x0, 0x3935AD0
	0x03935AB4 CBZ X20, 0x3935C64
	0x03935AB8 LDR W1, [X31 + 0x30]
	0x03935ABC LDR X3, [X22]
	0x03935AC0 MOVN W2, 0x0
	0x03935AC4 MOV X0, X20
	0x03935AC8 BL 0x2A0A330
	0x03935ACC B 0x3935AA4
	0x03935AD0 LDR X1, [X26]
	0x03935AD4 ADD X0, X31, 0x20
	0x03935AD8 BL 0x2BBDD9C
	0x03935ADC LDR X0, [X25]
	0x03935AE0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAAD000
	007 Move X21, 0x81A000
	008 Move W8, [X22+2303]
	009 Move X21, [X21+1696]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x81A000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2303], W8
	021 Move X0, [X19+16]
	022 Move X2, [X21]
	023 Move W1, W20
	024 Call 0x217DCA0, X0, X1
	025 Move [X19+16], X0
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 

Method: System.Void Clear()

Disassembly:
	0x03935AE4 CBNZ W8, 0x3935AF0
	0x03935AE8 BL 0x1C16DFC
	0x03935AEC LDR X0, [X25]
	0x03935AF0 LDR X8, [X0 + 0xB8]
	0x03935AF4 LDR X21, [X8 + 0x8]
	0x03935AF8 CBNZ X21, 0x3935B4C
	0x03935AFC LDR W8, [X0 + 0xE0]
	0x03935B00 CBNZ W8, 0x3935B0C
	0x03935B04 BL 0x1C16DFC
	0x03935B08 LDR X0, [X25]
	0x03935B0C ADRP X9, 0x819000
	0x03935B10 LDR X8, [X0 + 0xB8]
	0x03935B14 LDR X9, [X9 + 0xD60]
	0x03935B18 LDR X22, [X8]
	0x03935B1C LDR X0, [X9]
	0x03935B20 BL 0x1C16F10
	0x03935B24 ADRP X8, 0x819000
	0x03935B28 LDR X8, [X8 + 0xD68]
	0x03935B2C MOV X1, X22
	0x03935B30 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAAD000
	006 Move X21, 0x7C0000
	007 Move W8, [X20+2304]
	008 Move X21, [X21+3672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C0000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2304], W8
	019 Move X0, [X21]
	020 Move W1, W31
	021 Call 0x1C17D6C
	022 Move [X19+16], X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Boolean Contains(System.Int32 item)

Disassembly:
	0x03935B34 MOV X21, X0
	0x03935B38 LDR X2, [X8]
	0x03935B3C BL 0x2D29AF0
	0x03935B40 LDR X8, [X25]
	0x03935B44 LDR X8, [X8 + 0xB8]
	0x03935B48 STR X21, [X8 + 0x8]
	0x03935B4C LDR X2, [X23]
	0x03935B50 MOV X0, X20
	0x03935B54 MOV X1, X21
	0x03935B58 BL 0x21D82A0
	0x03935B5C BL 0x39350B4
	0x03935B60 CBZ X0, 0x3935C60
	0x03935B64 LDR X25, [X0 + 0x18]
	0x03935B68 MOV X20, X0
	0x03935B6C CMP W25, 0x1
	0x03935B70 B.LT 0x3935C3C
	0x03935B74 CBZ W25, 0x3935C38
	0x03935B78 MOV W26, W31
	0x03935B7C MOV X8, X25
	0x03935B80 ADD X27, X20, W26, 0x3, SXTW
	0x03935B84 LDR X9, [X27 + 0x20]!
	0x03935B88 CBZ X9, 0x3935C60
	0x03935B8C LDR X9, [X9 + 0x10]
	0x03935B90 CBZ X9, 0x3935C60
	0x03935B94 LDR W9, [X9 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAAD000
	007 Move X21, 0x81A000
	008 Move W8, [X22+2305]
	009 Move X21, [X21+3328]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x81A000
	017 Move X0, [X0+3328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2305], W8
	021 Move X0, [X20+16]
	022 Move X2, [X21]
	023 Move W1, W19
	024 Call Array.IndexOf, X0, X1
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 NotImplemented "Instruction ORN not yet implemented."
	030 Move W0, W8
	031 ShiftRight W0, 31
	032 And W0, W0, 0x7FFFFFFF
	033 Move X30, [X31+48]
	034 Return X0

Method: System.Void CopyTo(System.Int32[] array, System.Int32 arrayIndex)

Disassembly:
	0x03935B98 SUBS W28, W9, 0x1
	0x03935B9C B.LT 0x3935C20
	0x03935BA0 CMP W26, W8
	0x03935BA4 B.CS 0x3935C38
	0x03935BA8 MOV W21, W31
	0x03935BAC LDR X0, [X27]
	0x03935BB0 CBZ X0, 0x3935C60

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call Array.CopyTo, X0, X1, X2
	008 Return 
	009 Call 0x1C17F20

Method: System.Boolean Remove(System.Int32 item)

Disassembly:
	0x03935BB4 MOV W1, W21
	0x03935BB8 BL 0x39282DC
	0x03935BBC LDR X2, [X24]
	0x03935BC0 MOV W1, W0
	0x03935BC4 MOV X0, X19
	0x03935BC8 BL 0x217F01C
	0x03935BCC LDR W8, [X20 + 0x18]
	0x03935BD0 CMP W26, W8
	0x03935BD4 B.CS 0x3935C38
	0x03935BD8 LDR X23, [X27]
	0x03935BDC CBZ X23, 0x3935C60
	0x03935BE0 MOV W22, W0
	0x03935BE4 MOV X0, X23
	0x03935BE8 MOV W1, W21
	0x03935BEC BL 0x39282DC
	0x03935BF0 ORN W8, W31, W22, 0x0
	0x03935BF4 ADD W2, W0, W8
	0x03935BF8 MOV X0, X23
	0x03935BFC MOV W1, W21
	0x03935C00 BL 0x3934948
	0x03935C04 CMP W28, W21
	0x03935C08 B.EQ 0x3935C20
	0x03935C0C LDR W8, [X20 + 0x18]
	0x03935C10 ADD W21, W21, 0x1
	0x03935C14 CMP W26, W8
	0x03935C18 B.CC 0x3935BAC
	0x03935C1C B 0x3935C38
	0x03935C20 ADD W26, W26, 0x1
	0x03935C24 CMP W26, W25
	0x03935C28 B.EQ 0x3935C3C
	0x03935C2C LDR X8, [X20 + 0x18]
	0x03935C30 CMP W26, W8
	0x03935C34 B.CC 0x3935B80
	0x03935C38 BL 0x1C16F28
	0x03935C3C MOV X0, X20
	0x03935C40 LDP X20, X19, [X31 + 0x90]
	0x03935C44 LDP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAAD000
	007 Move X21, 0x81A000
	008 Move W8, [X22+2306]
	009 Move X21, [X21+3328]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x81A000
	017 Move X0, [X0+1760]
	018 Call 0x1C17CF4
	019 Move X0, 0x81A000
	020 Move X0, [X0+3328]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2306], W8
	024 Move X0, [X19+16]
	025 Move X2, [X21]
	026 Move W1, W20
	027 Call Array.IndexOf, X0, X1
	028 Move W21, W0
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {40}
	033 Move X8, 0x81A000
	034 Move X8, [X8+1760]
	035 Move X0, [X19+16]
	036 Move W1, W20
	037 Move X2, [X8]
	038 Call 0x2180BE4, X0, X1
	039 Move [X19+16], X0
	040 NotImplemented "Instruction ORN not yet implemented."
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move W0, W8
	046 ShiftRight W0, 31
	047 And W0, W0, 0x7FFFFFFF
	048 Move X30, [X31+48]
	049 Return X0

Method: System.Int32 get_Count()

Disassembly:
	0x0393592C BL 0x1C16CF4
	0x03935930 ADRP X0, 0x7BF000
	0x03935934 LDR X0, [X0 + 0xE30]
	0x03935938 BL 0x1C16CF4
	0x0393593C MOVZ W8, 0x1
	0x03935940 STRB W8, [X22 + 0x907]
	0x03935944 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x03935C48 LDP X24, X23, [X31 + 0x70]
	0x03935C4C LDP X26, X25, [X31 + 0x60]
	0x03935C50 LDP X28, X27, [X31 + 0x50]
	0x03935C54 LDR X30, [X31 + 0x40]
	0x03935C58 ADD X31, X31, 0xA0
	0x03935C5C RET
	0x03935C60 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call Array.get_IsReadOnly, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void GetSharedVertexLookup(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> sharedVertices, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x03935C64 BL 0x1C16F20
	0x03935C68 B 0x3935C70
	0x03935C6C B 0x3935C70
	0x03935C70 MOV X21, X0
	0x03935C74 CMP W1, 0x1
	0x03935C78 B.NE 0x3935CA4
	0x03935C7C MOV X0, X21
	0x03935C80 BL 0x3EB1AD0
	0x03935C84 LDR X22, [X0]
	0x03935C88 BL 0x3EB1AE0
	0x03935C8C LDR X1, [X26]
	0x03935C90 ADD X0, X31, 0x20
	0x03935C94 BL 0x2BBDD9C
	0x03935C98 CBZ X22, 0x3935ADC
	0x03935C9C MOV X0, X22
	0x03935CA0 BL 0x1C16F18
	0x03935CA4 MOV X22, X31
	0x03935CA8 B 0x3935CB0
	0x03935CAC MOV X21, X0
	0x03935CB0 LDR X1, [X26]
	0x03935CB4 ADD X0, X31, 0x20
	0x03935CB8 BL 0x2BBDD9C
	0x03935CBC CBNZ X22, 0x3935CC8
	0x03935CC0 MOV X0, X21
	0x03935CC4 BL 0x1D2C690
	0x03935CC8 MOV X0, X22
	0x03935CCC BL 0x1C16F18
	0x03935CD0 BL 0x1990590
	0x03935CD4 STP X30, X25, [X31 - 0x40]!
	0x03935CD8 STP X24, X23, [X31 + 0x10]
	0x03935CDC STP X22, X21, [X31 + 0x20]
	0x03935CE0 STP X20, X19, [X31 + 0x30]
	0x03935CE4 ADRP X21, 0xAAC000
	0x03935CE8 LDRB W8, [X21 + 0x909]
	0x03935CEC MOV X19, X1
	0x03935CF0 MOV X20, X0
	0x03935CF4 TBNZ X8, 0x0, 0x3935D48
	0x03935CF8 ADRP X0, 0x819000
	0x03935CFC LDR X0, [X0 + 0xD78]
	0x03935D00 BL 0x1C16CF4
	0x03935D04 ADRP X0, 0x7E8000
	0x03935D08 LDR X0, [X0 + 0x8B0]
	0x03935D0C BL 0x1C16CF4
	0x03935D10 ADRP X0, 0x7BE000
	0x03935D14 LDR X0, [X0 + 0xE00]
	0x03935D18 BL 0x1C16CF4
	0x03935D1C ADRP X0, 0x7E6000
	0x03935D20 LDR X0, [X0 + 0x7B8]
	0x03935D24 BL 0x1C16CF4
	0x03935D28 ADRP X0, 0x7E6000
	0x03935D2C LDR X0, [X0 + 0x7C0]
	0x03935D30 BL 0x1C16CF4
	0x03935D34 ADRP X0, 0x7BE000
	0x03935D38 LDR X0, [X0 + 0xE18]
	0x03935D3C BL 0x1C16CF4
	0x03935D40 MOVZ W8, 0x1
	0x03935D44 STRB W8, [X21 + 0x909]
	0x03935D48 LDR X0, [X20]
	0x03935D4C CBZ X0, 0x3935F3C
	0x03935D50 ADRP X8, 0x819000
	0x03935D54 LDR X8, [X8 + 0xD78]
	0x03935D58 LDR X1, [X8]
	0x03935D5C BL 0x2A0A118
	0x03935D60 CBZ X19, 0x3935F3C
	0x03935D64 ADRP X10, 0x7E6000
	0x03935D68 LDR X8, [X19]
	0x03935D6C LDR X10, [X10 + 0x7B8]
	0x03935D70 MOV W21, W0
	0x03935D74 LDRH W9, [X8 + 0x12E]
	0x03935D78 LDR X1, [X10]
	0x03935D7C CBZ X9, 0x3935DA0
	0x03935D80 LDR X10, [X8 + 0xB0]
	0x03935D84 ADD X10, X10, 0x8
	0x03935D88 LDUR X11, [X10 - 0x8]
	0x03935D8C CMP X11, X1
	0x03935D90 B.EQ 0x3935DB0
	0x03935D94 SUBS X9, X9, 0x1
	0x03935D98 ADD X10, X10, 0x10
	0x03935D9C B.NE 0x3935D88
	0x03935DA0 MOV X0, X19
	0x03935DA4 MOV W2, W31
	0x03935DA8 BL 0x1C5C788
	0x03935DAC B 0x3935DBC
	0x03935DB0 LDRSW X9, [X10]
	0x03935DB4 ADD X8, X8, X9, 0x4, LSL
	0x03935DB8 ADD X0, X8, 0x138
	0x03935DBC LDP X8, X1, [X0]
	0x03935DC0 ADRP X22, 0x7BE000
	0x03935DC4 LDR X22, [X22 + 0xE00]
	0x03935DC8 MOV X0, X19
	0x03935DCC BLR X8
	0x03935DD0 MOV X19, X0
	0x03935DD4 CBZ X0, 0x3935F40
	0x03935DD8 ADRP X23, 0x7BE000
	0x03935DDC ADRP X24, 0x7E6000
	0x03935DE0 ADRP X25, 0x7E8000
	0x03935DE4 LDR X23, [X23 + 0xE18]
	0x03935DE8 LDR X24, [X24 + 0x7C0]
	0x03935DEC LDR X25, [X25 + 0x8B0]
	0x03935DF0 LDR X8, [X19]
	0x03935DF4 LDR X1, [X23]
	0x03935DF8 LDRH W9, [X8 + 0x12E]
	0x03935DFC CBZ X9, 0x3935E20
	0x03935E00 LDR X10, [X8 + 0xB0]
	0x03935E04 ADD X10, X10, 0x8
	0x03935E08 LDUR X11, [X10 - 0x8]
	0x03935E0C CMP X11, X1
	0x03935E10 B.EQ 0x3935E30
	0x03935E14 SUBS X9, X9, 0x1
	0x03935E18 ADD X10, X10, 0x10
	0x03935E1C B.NE 0x3935E08
	0x03935E20 MOV X0, X19
	0x03935E24 MOV W2, W31
	0x03935E28 BL 0x1C5C788
	0x03935E2C B 0x3935E3C
	0x03935E30 LDRSW X9, [X10]
	0x03935E34 ADD X8, X8, X9, 0x4, LSL
	0x03935E38 ADD X0, X8, 0x138
	0x03935E3C LDP X8, X1, [X0]
	0x03935E40 MOV X0, X19
	0x03935E44 BLR X8
	0x03935E48 TBZ X0, 0x0, 0x3935EC0
	0x03935E4C LDR X8, [X19]
	0x03935E50 LDR X1, [X24]
	0x03935E54 LDRH W9, [X8 + 0x12E]
	0x03935E58 CBZ X9, 0x3935E7C
	0x03935E5C LDR X10, [X8 + 0xB0]
	0x03935E60 ADD X10, X10, 0x8
	0x03935E64 LDUR X11, [X10 - 0x8]
	0x03935E68 CMP X11, X1
	0x03935E6C B.EQ 0x3935E8C
	0x03935E70 SUBS X9, X9, 0x1
	0x03935E74 ADD X10, X10, 0x10
	0x03935E78 B.NE 0x3935E64
	0x03935E7C MOV X0, X19
	0x03935E80 MOV W2, W31
	0x03935E84 BL 0x1C5C788
	0x03935E88 B 0x3935E98
	0x03935E8C LDRSW X9, [X10]
	0x03935E90 ADD X8, X8, X9, 0x4, LSL
	0x03935E94 ADD X0, X8, 0x138
	0x03935E98 LDP X8, X1, [X0]
	0x03935E9C MOV X0, X19
	0x03935EA0 BLR X8
	0x03935EA4 MOV W1, W0
	0x03935EA8 LDR X0, [X20]
	0x03935EAC CBZ X0, 0x3935F38
	0x03935EB0 LDR X3, [X25]
	0x03935EB4 MOV W2, W21
	0x03935EB8 BL 0x2A0A330
	0x03935EBC B 0x3935DF0
	0x03935EC0 MOV X20, X31
	0x03935EC4 CBZ X19, 0x3935F20
	0x03935EC8 LDR X8, [X19]
	0x03935ECC LDR X1, [X22]
	0x03935ED0 LDRH W9, [X8 + 0x12E]
	0x03935ED4 CBZ X9, 0x3935EF8
	0x03935ED8 LDR X10, [X8 + 0xB0]
	0x03935EDC ADD X10, X10, 0x8
	0x03935EE0 LDUR X11, [X10 - 0x8]
	0x03935EE4 CMP X11, X1
	0x03935EE8 B.EQ 0x3935F08
	0x03935EEC SUBS X9, X9, 0x1
	0x03935EF0 ADD X10, X10, 0x10
	0x03935EF4 B.NE 0x3935EE0
	0x03935EF8 MOV X0, X19
	0x03935EFC MOV W2, W31
	0x03935F00 BL 0x1C5C788
	0x03935F04 B 0x3935F14
	0x03935F08 LDRSW X9, [X10]
	0x03935F0C ADD X8, X8, X9, 0x4, LSL
	0x03935F10 ADD X0, X8, 0x138
	0x03935F14 LDP X8, X1, [X0]
	0x03935F18 MOV X0, X19
	0x03935F1C BLR X8
	0x03935F20 CBNZ X20, 0x3935F44
	0x03935F24 LDP X20, X19, [X31 + 0x30]
	0x03935F28 LDP X22, X21, [X31 + 0x20]
	0x03935F2C LDP X24, X23, [X31 + 0x10]
	0x03935F30 LDP X30, X25, [X31], #0x40
	0x03935F34 RET
	0x03935F38 BL 0x1C16F20
	0x03935F3C BL 0x1C16F20
	0x03935F40 BL 0x1C16F20
	0x03935F44 MOV X0, X20
	0x03935F48 BL 0x1C16F18
	0x03935F4C B 0x3935F5C
	0x03935F50 B 0x3935F5C
	0x03935F54 B 0x3935F5C
	0x03935F58 B 0x3935F5C
	0x03935F5C MOV X21, X0
	0x03935F60 CMP W1, 0x1
	0x03935F64 B.NE 0x3935F7C
	0x03935F68 MOV X0, X21
	0x03935F6C BL 0x3EB1AD0
	0x03935F70 LDR X20, [X0]
	0x03935F74 BL 0x3EB1AE0
	0x03935F78 B 0x3935EC4
	0x03935F7C MOV X20, X31
	0x03935F80 B 0x3935F88
	0x03935F84 MOV X21, X0
	0x03935F88 CBZ X19, 0x3935FE4
	0x03935F8C LDR X8, [X19]
	0x03935F90 LDR X1, [X22]
	0x03935F94 LDRH W9, [X8 + 0x12E]
	0x03935F98 CBZ X9, 0x3935FBC
	0x03935F9C LDR X10, [X8 + 0xB0]
	0x03935FA0 ADD X10, X10, 0x8
	0x03935FA4 LDUR X11, [X10 - 0x8]
	0x03935FA8 CMP X11, X1
	0x03935FAC B.EQ 0x3935FCC
	0x03935FB0 SUBS X9, X9, 0x1
	0x03935FB4 ADD X10, X10, 0x10
	0x03935FB8 B.NE 0x3935FA4
	0x03935FBC MOV X0, X19
	0x03935FC0 MOV W2, W31
	0x03935FC4 BL 0x1C5C788
	0x03935FC8 B 0x3935FD8
	0x03935FCC LDRSW X9, [X10]
	0x03935FD0 ADD X8, X8, X9, 0x4, LSL
	0x03935FD4 ADD X0, X8, 0x138
	0x03935FD8 LDP X8, X1, [X0]
	0x03935FDC MOV X0, X19
	0x03935FE0 BLR X8
	0x03935FE4 CBNZ X20, 0x3935FF0
	0x03935FE8 MOV X0, X21
	0x03935FEC BL 0x1D2C690
	0x03935FF0 MOV X0, X20
	0x03935FF4 BL 0x1C16F18
	0x03935FF8 BL 0x1990590
	0x03935FFC STR X30, [X31 - 0x20]!
	0x03936000 STP X20, X19, [X31 + 0x10]
	0x03936004 ADRP X19, 0xAAB000
	0x03936008 ADRP X20, 0x818000
	0x0393600C LDRB W8, [X19 + 0x90A]
	0x03936010 LDR X20, [X20 + 0xD70]
	0x03936014 TBNZ X8, 0x0, 0x393602C
	0x03936018 ADRP X0, 0x818000
	0x0393601C LDR X0, [X0 + 0xD70]
	0x03936020 BL 0x1C16CF4
	0x03936024 MOVZ W8, 0x1
	0x03936028 STRB W8, [X19 + 0x90A]
	0x0393602C LDR X0, [X20]
	0x03936030 BL 0x1C16F10
	0x03936034 MOV X1, X31
	0x03936038 MOV X19, X0
	0x0393603C BL 0x33BDD8C
	0x03936040 LDR X8, [X20]
	0x03936044 LDR X8, [X8 + 0xB8]
	0x03936048 STR X19, [X8]
	0x0393604C LDP X20, X19, [X31 + 0x10]
	0x03936050 LDR X30, [X31], #0x20
	0x03936054 RET
	0x03936058 MOV X1, X31
	0x0393605C B 0x33BDD8C
	0x03936060 STR X30, [X31 - 0x20]!
	0x03936064 STP X20, X19, [X31 + 0x10]
	0x03936068 ADRP X20, 0xAAB000
	0x0393606C LDRB W8, [X20 + 0x90B]
	0x03936070 MOV X19, X1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xAAD000
	014 Move W8, [X21+2307]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x7C9000
	022 Move X0, [X0+2136]
	023 Call 0x1C17CF4
	024 Move X0, 0x7E9000
	025 Move X0, [X0+2256]
	026 Call 0x1C17CF4
	027 Move X0, 0x81A000
	028 Move X0, [X0+3336]
	029 Call 0x1C17CF4
	030 Move X0, 0x81A000
	031 Move X0, [X0+1032]
	032 Call 0x1C17CF4
	033 Move X0, 0x7BF000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E7000
	037 Move X0, [X0+1984]
	038 Call 0x1C17CF4
	039 Move X0, 0x7BF000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x81A000
	043 Move X0, [X0+1040]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2307], W8
	047 Compare X19, 0
	048 JumpIfEqual {235}
	049 Move X8, 0x7E9000
	050 Move X8, [X8+2256]
	051 Move X0, X19
	052 Move X1, [X8]
	053 Call Dictionary`2<Int32, Int32>.Clear, X0
	054 Compare X20, 0
	055 JumpIfEqual {235}
	056 Move X10, 0x81A000
	057 Move X8, [X20]
	058 Move X10, [X10+1032]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X20
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X20
	078 NotImplemented "Instruction BLR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X27, 0x7BF000
	081 Move X28, 0x7E7000
	082 Move X29, 0x81A000
	083 Move X25, 0x7C9000
	084 Move X27, [X27+3608]
	085 Move X28, [X28+1984]
	086 Move X29, [X29+3336]
	087 Move X25, [X25+2136]
	088 Move W21, W0
	089 Move W22, W31
	090 Move X8, [X20]
	091 Move X10, 0x81A000
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X10, [X10+1040]
	094 Move X1, [X10]
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X20
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X2, [X0+8]
	111 Move X0, X20
	112 Move W1, W22
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X0, 0
	115 JumpIfEqual {235}
	116 Call SharedVertex.GetEnumerator, X0
	117 Move X23, X0
	118 Compare X0, 0
	119 JumpIfEqual {214}
	120 Move X8, [X23]
	121 Move X1, [X27]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X23
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X23
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {180}
	145 Move X8, [X23]
	146 Move X1, [X28]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X23
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X23
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X2, [X29]
	167 Move W24, W0
	168 Move X0, X19
	169 Move W1, W24
	170 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {120}
	175 Move X3, [X25]
	176 Move X0, X19
	177 Move W1, W24
	178 Move W2, W22
	179 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	180 Move X24, X31
	181 Move W26, 6
	182 Compare X23, 0
	183 JumpIfEqual {207}
	184 Move X8, [X23]
	185 Move X10, 0x7BF000
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X10, [X10+3584]
	188 Move X1, [X10]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X23
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X23
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X24, 0
	208 JumpIfNotEqual {236}
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Compare W26, 0
	211 JumpIfNotEqual {222}
	212 Add W22, W22, 1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Call 0x1C17F20
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Call 0x3EB2AD0
	217 Move X24, [X0]
	218 Call 0x3EB2AE0
	219 Move W26, W31
	220 Compare X23, 0
	221 JumpIfNotEqual {184}
	222 Move X20, [X31+80]
	223 Move X19, [X31+88]
	224 Move X22, [X31+64]
	225 Move X21, [X31+72]
	226 Move X24, [X31+48]
	227 Move X23, [X31+56]
	228 Move X26, [X31+32]
	229 Move X25, [X31+40]
	230 Move X28, [X31+16]
	231 Move X27, [X31+24]
	232 Move X29, [X31+96]
	233 Move X30, [X31+104]
	234 Return 
	235 Call 0x1C17F20
	236 Move X0, X24
	237 Call 0x1C17F18
	238 Move X19, X0
	239 Move X24, X31
	240 Move X19, X0
	241 Compare X23, 0
	242 JumpIfEqual {267}
	243 Move X8, [X23]
	244 Move X10, 0x7BE000
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Call 0x3EB26EC
	247 Return 
	248 Move X1, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X23
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X23
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Compare X24, 0
	268 JumpIfNotEqual {271}
	269 Move X0, X19
	270 Call 0x1D2D690
	271 Move X0, X24
	272 Call 0x1C17F18
	273 Call 0x1991590

Method: System.Void ShiftIndexes(System.Int32 offset)

Disassembly:
	0x03936074 TBNZ X8, 0x0, 0x393608C
	0x03936078 ADRP X0, 0x814000
	0x0393607C LDR X0, [X0 + 0x3D0]
	0x03936080 BL 0x1C16CF4
	0x03936084 MOVZ W8, 0x1
	0x03936088 STRB W8, [X20 + 0x90B]
	0x0393608C UBFM X8, X19, 0x20, 0x3F
	0x03936090 LDP X20, X19, [X31 + 0x10]
	0x03936094 ORN W8, W31, W8, 0x0
	0x03936098 UBFM W0, W8, 0x1F, 0x1F
	0x0393609C LDR X30, [X31], #0x20
	0x039360A0 RET
	0x039360A4 STP X30, X25, [X31 - 0x40]!
	0x039360A8 STP X24, X23, [X31 + 0x10]
	0x039360AC STP X22, X21, [X31 + 0x20]
	0x039360B0 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+16]
	003 Compare X9, 0
	004 JumpIfEqual {15}
	005 Move X8, [X9+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 And X8, X8, 0
	008 Add X9, X9, 32
	009 Move W10, [X9]
	010 Subtract X8, X8, 1
	011 Add W10, W10, W1
	012 Move [X9+4], W10
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: UnityEngine.ProBuilder.SharedVertex[] ToSharedVertices(System.Collections.Generic.IEnumerable`1<System.Collections.Generic.KeyValuePair`2<System.Int32, System.Int32>> lookup)

Disassembly:
	0x039360B4 ADRP X20, 0xAAB000
	0x039360B8 ADRP X21, 0x7BD000
	0x039360BC LDRB W8, [X20 + 0x90C]
	0x039360C0 LDR X21, [X21 + 0x598]
	0x039360C4 MOV X19, X0
	0x039360C8 TBNZ X8, 0x0, 0x3936128
	0x039360CC ADRP X0, 0x818000
	0x039360D0 LDR X0, [X0 + 0x698]
	0x039360D4 BL 0x1C16CF4
	0x039360D8 ADRP X0, 0x818000
	0x039360DC LDR X0, [X0 + 0x510]
	0x039360E0 BL 0x1C16CF4
	0x039360E4 ADRP X0, 0x7BE000
	0x039360E8 LDR X0, [X0 + 0xE00]
	0x039360EC BL 0x1C16CF4
	0x039360F0 ADRP X0, 0x7BE000
	0x039360F4 LDR X0, [X0 + 0xE08]
	0x039360F8 BL 0x1C16CF4
	0x039360FC ADRP X0, 0x7BD000
	0x03936100 LDR X0, [X0 + 0x598]
	0x03936104 BL 0x1C16CF4
	0x03936108 ADRP X0, 0x818000
	0x0393610C LDR X0, [X0 + 0xD80]
	0x03936110 BL 0x1C16CF4
	0x03936114 ADRP X0, 0x818000
	0x03936118 LDR X0, [X0 + 0xD88]
	0x0393611C BL 0x1C16CF4
	0x03936120 MOVZ W8, 0x1
	0x03936124 STRB W8, [X20 + 0x90C]
	0x03936128 LDR X0, [X21]
	0x0393612C LDR W8, [X0 + 0xE0]
	0x03936130 CBNZ W8, 0x3936138
	0x03936134 BL 0x1C16DFC
	0x03936138 MOV X0, X19
	0x0393613C MOV X1, X31
	0x03936140 MOV X2, X31
	0x03936144 BL 0x3C3883C
	0x03936148 TBNZ X0, 0x0, 0x3936230
	0x0393614C CBZ X19, 0x3936278
	0x03936150 ADRP X22, 0x818000
	0x03936154 LDR X22, [X22 + 0xD88]
	0x03936158 LDR X19, [X19 + 0x28]
	0x0393615C LDR X0, [X22]
	0x03936160 LDR W8, [X0 + 0xE0]
	0x03936164 CBNZ W8, 0x3936170
	0x03936168 BL 0x1C16DFC
	0x0393616C LDR X0, [X22]
	0x03936170 LDR X8, [X0 + 0xB8]
	0x03936174 ADRP X25, 0x818000
	0x03936178 ADRP X24, 0x7BE000
	0x0393617C ADRP X23, 0x7BE000
	0x03936180 LDR X20, [X8 + 0x8]
	0x03936184 LDR X25, [X25 + 0x698]
	0x03936188 LDR X24, [X24 + 0xE08]
	0x0393618C LDR X23, [X23 + 0xE00]
	0x03936190 CBNZ X20, 0x39361E4
	0x03936194 LDR W8, [X0 + 0xE0]
	0x03936198 CBNZ W8, 0x39361A4
	0x0393619C BL 0x1C16DFC
	0x039361A0 LDR X0, [X22]
	0x039361A4 ADRP X9, 0x818000
	0x039361A8 LDR X8, [X0 + 0xB8]
	0x039361AC LDR X9, [X9 + 0x510]
	0x039361B0 LDR X21, [X8]
	0x039361B4 LDR X0, [X9]
	0x039361B8 BL 0x1C16F10
	0x039361BC ADRP X8, 0x818000
	0x039361C0 LDR X8, [X8 + 0xD80]
	0x039361C4 MOV X1, X21
	0x039361C8 MOV X3, X31
	0x039361CC MOV X20, X0
	0x039361D0 LDR X2, [X8]
	0x039361D4 BL 0x2D30128
	0x039361D8 LDR X8, [X22]
	0x039361DC LDR X8, [X8 + 0xB8]
	0x039361E0 STR X20, [X8 + 0x8]
	0x039361E4 LDR X2, [X25]
	0x039361E8 MOV X0, X19
	0x039361EC MOV X1, X20
	0x039361F0 BL 0x21CEC3C
	0x039361F4 LDR X8, [X24]
	0x039361F8 MOV X19, X0
	0x039361FC MOV X0, X8
	0x03936200 BL 0x1C16F10
	0x03936204 LDR X2, [X23]
	0x03936208 MOV X1, X19
	0x0393620C MOV X20, X0
	0x03936210 BL 0x2DA9FD8
	0x03936214 MOV X1, X20
	0x03936218 LDP X20, X19, [X31 + 0x30]
	0x0393621C LDP X22, X21, [X31 + 0x20]
	0x03936220 LDP X24, X23, [X31 + 0x10]
	0x03936224 MOVZ W0, 0x1
	0x03936228 LDP X30, X25, [X31], #0x40
	0x0393622C B 0x393627C
	0x03936230 ADRP X0, 0x7C2000
	0x03936234 LDR X0, [X0 + 0x528]
	0x03936238 BL 0x1C16D08
	0x0393623C BL 0x1C16F10
	0x03936240 MOV X19, X0
	0x03936244 ADRP X0, 0x817000
	0x03936248 LDR X0, [X0 + 0xE90]
	0x0393624C BL 0x1C16D08
	0x03936250 MOV X1, X0
	0x03936254 MOV X0, X19
	0x03936258 MOV X2, X31
	0x0393625C BL 0x330E100
	0x03936260 ADRP X0, 0x818000
	0x03936264 LDR X0, [X0 + 0xD90]
	0x03936268 BL 0x1C16D08
	0x0393626C MOV X1, X0
	0x03936270 MOV X0, X19
	0x03936274 BL 0x1C16DEC
	0x03936278 BL 0x1C16F20
	0x0393627C STP X30, X23, [X31 - 0x30]!
	0x03936280 STP X22, X21, [X31 + 0x10]
	0x03936284 STP X20, X19, [X31 + 0x20]
	0x03936288 ADRP X21, 0xAAB000
	0x0393628C LDRB W8, [X21 + 0x90D]
	0x03936290 MOV X20, X1
	0x03936294 MOV W19, W0
	0x03936298 TBNZ X8, 0x0, 0x39362B0
	0x0393629C ADRP X0, 0x7BE000
	0x039362A0 LDR X0, [X0 + 0xDF8]
	0x039362A4 BL 0x1C16CF4
	0x039362A8 MOVZ W8, 0x1
	0x039362AC STRB W8, [X21 + 0x90D]
	0x039362B0 CBZ X20, 0x3936328
	0x039362B4 ADRP X21, 0x7BE000
	0x039362B8 LDR X21, [X21 + 0xDF8]
	0x039362BC MOV X0, X20
	0x039362C0 MOV W1, W19
	0x039362C4 LDR X2, [X21]
	0x039362C8 BL 0x2DAA59C
	0x039362CC MOVZ W8, 0xFFFD
	0x039362D0 MOVK W8, 0x7FFF0000
	0x039362D4 CMP W19, W8
	0x039362D8 B.GT 0x3936314
	0x039362DC TBZ X0, 0x0, 0x3936314
	0x039362E0 MOVZ W23, 0xFFFD
	0x039362E4 MOVZ W22, 0x2B
	0x039362E8 MOVK W23, 0x7FFF0000
	0x039362EC LDR X2, [X21]
	0x039362F0 SUB W8, W19, 0x18
	0x039362F4 CMP W8, 0x10
	0x039362F8 CSINC W19, W22, W19, LS
	0x039362FC MOV X0, X20
	0x03936300 MOV W1, W19
	0x03936304 BL 0x2DAA59C
	0x03936308 CMP W19, W23
	0x0393630C B.GT 0x3936314
	0x03936310 TBNZ X0, 0x0, 0x39362EC
	0x03936314 MOV W0, W19
	0x03936318 LDP X20, X19, [X31 + 0x20]
	0x0393631C LDP X22, X21, [X31 + 0x10]
	0x03936320 LDP X30, X23, [X31], #0x30
	0x03936324 RET
	0x03936328 BL 0x1C16F20
	0x0393632C CMP W0, 0x1
	0x03936330 B.LT 0x3936344
	0x03936334 SUB W8, W0, 0x19
	0x03936338 CMP W8, 0x11
	0x0393633C CSET W0, HI
	0x03936340 RET
	0x03936344 MOV W0, W31
	0x03936348 RET
	0x0393634C MOV X2, X31
	0x03936350 B 0x3936354
	0x03936354 SUB X31, X31, 0xB0
	0x03936358 STR D8, [X31 + 0x40]
	0x0393635C STP X29, X30, [X31 + 0x50]
	0x03936360 STP X28, X27, [X31 + 0x60]
	0x03936364 STP X26, X25, [X31 + 0x70]
	0x03936368 STP X24, X23, [X31 + 0x80]
	0x0393636C STP X22, X21, [X31 + 0x90]
	0x03936370 STP X20, X19, [X31 + 0xA0]
	0x03936374 ADRP X23, 0xAAB000
	0x03936378 ADRP X22, 0x7BD000
	0x0393637C LDRB W8, [X23 + 0x90E]
	0x03936380 LDR X22, [X22 + 0x598]
	0x03936384 MOV X19, X2
	0x03936388 MOV V8.16B, V0.16B
	0x0393638C MOV X20, X1
	0x03936390 MOV X21, X0
	0x03936394 TBNZ X8, 0x0, 0x3936490
	0x03936398 ADRP X0, 0x818000
	0x0393639C LDR X0, [X0 + 0x698]
	0x039363A0 BL 0x1C16CF4
	0x039363A4 ADRP X0, 0x818000
	0x039363A8 LDR X0, [X0 + 0xD98]
	0x039363AC BL 0x1C16CF4
	0x039363B0 ADRP X0, 0x818000
	0x039363B4 LDR X0, [X0 + 0xDA0]
	0x039363B8 BL 0x1C16CF4
	0x039363BC ADRP X0, 0x818000
	0x039363C0 LDR X0, [X0 + 0xDA8]
	0x039363C4 BL 0x1C16CF4
	0x039363C8 ADRP X0, 0x818000
	0x039363CC LDR X0, [X0 + 0x510]
	0x039363D0 BL 0x1C16CF4
	0x039363D4 ADRP X0, 0x7BF000
	0x039363D8 LDR X0, [X0 + 0x9D8]
	0x039363DC BL 0x1C16CF4
	0x039363E0 ADRP X0, 0x818000
	0x039363E4 LDR X0, [X0 + 0x888]
	0x039363E8 BL 0x1C16CF4
	0x039363EC ADRP X0, 0x7BE000
	0x039363F0 LDR X0, [X0 + 0xE00]
	0x039363F4 BL 0x1C16CF4
	0x039363F8 ADRP X0, 0x818000
	0x039363FC LDR X0, [X0 + 0x890]
	0x03936400 BL 0x1C16CF4
	0x03936404 ADRP X0, 0x7BE000
	0x03936408 LDR X0, [X0 + 0xE08]
	0x0393640C BL 0x1C16CF4
	0x03936410 ADRP X0, 0x818000
	0x03936414 LDR X0, [X0 + 0x898]
	0x03936418 BL 0x1C16CF4
	0x0393641C ADRP X0, 0x7BD000
	0x03936420 LDR X0, [X0 + 0xE00]
	0x03936424 BL 0x1C16CF4
	0x03936428 ADRP X0, 0x817000
	0x0393642C LDR X0, [X0 + 0xDB0]
	0x03936430 BL 0x1C16CF4
	0x03936434 ADRP X0, 0x817000
	0x03936438 LDR X0, [X0 + 0xDB8]
	0x0393643C BL 0x1C16CF4
	0x03936440 ADRP X0, 0x7BD000
	0x03936444 LDR X0, [X0 + 0xE18]
	0x03936448 BL 0x1C16CF4
	0x0393644C ADRP X0, 0x818000
	0x03936450 LDR X0, [X0 + 0xDB0]
	0x03936454 BL 0x1C16CF4
	0x03936458 ADRP X0, 0x7BD000
	0x0393645C LDR X0, [X0 + 0x598]
	0x03936460 BL 0x1C16CF4
	0x03936464 ADRP X0, 0x818000
	0x03936468 LDR X0, [X0 + 0xDB8]
	0x0393646C BL 0x1C16CF4
	0x03936470 ADRP X0, 0x818000
	0x03936474 LDR X0, [X0 + 0xD88]
	0x03936478 BL 0x1C16CF4
	0x0393647C ADRP X0, 0x818000
	0x03936480 LDR X0, [X0 + 0xB08]
	0x03936484 BL 0x1C16CF4
	0x03936488 MOVZ W8, 0x1
	0x0393648C STRB W8, [X23 + 0x90E]
	0x03936490 LDR X0, [X22]
	0x03936494 STP X31, X31, [X31 + 0x20]
	0x03936498 STR X31, [X31 + 0x30]
	0x0393649C LDR W8, [X0 + 0xE0]
	0x039364A0 CBNZ W8, 0x39364A8
	0x039364A4 BL 0x1C16DFC
	0x039364A8 MOV X0, X21
	0x039364AC MOV X1, X31
	0x039364B0 MOV X2, X31
	0x039364B4 BL 0x3C3883C
	0x039364B8 CBZ X20, 0x3936980
	0x039364BC TBNZ X0, 0x0, 0x3936980
	0x039364C0 ADRP X10, 0x817000
	0x039364C4 LDR X8, [X20]
	0x039364C8 LDR X10, [X10 + 0xDB0]
	0x039364CC LDRH W9, [X8 + 0x12E]
	0x039364D0 LDR X1, [X10]
	0x039364D4 CBZ X9, 0x39364F8
	0x039364D8 LDR X10, [X8 + 0xB0]
	0x039364DC ADD X10, X10, 0x8
	0x039364E0 LDUR X11, [X10 - 0x8]
	0x039364E4 CMP X11, X1
	0x039364E8 B.EQ 0x3936508
	0x039364EC SUBS X9, X9, 0x1
	0x039364F0 ADD X10, X10, 0x10
	0x039364F4 B.NE 0x39364E0
	0x039364F8 MOV X0, X20
	0x039364FC MOV W2, W31
	0x03936500 BL 0x1C5C788
	0x03936504 B 0x3936514
	0x03936508 LDRSW X9, [X10]
	0x0393650C ADD X8, X8, X9, 0x4, LSL
	0x03936510 ADD X0, X8, 0x138
	0x03936514 LDP X8, X1, [X0]
	0x03936518 ADRP X25, 0x7BD000
	0x0393651C LDR X25, [X25 + 0xE00]
	0x03936520 MOV X0, X20
	0x03936524 BLR X8
	0x03936528 MOV X22, X0
	0x0393652C CBZ X0, 0x39369C8
	0x03936530 ADRP X23, 0x7BD000
	0x03936534 ADRP X26, 0x817000
	0x03936538 LDR X23, [X23 + 0xE18]
	0x0393653C LDR X26, [X26 + 0xDB8]
	0x03936540 MOV W24, W31
	0x03936544 LDR X8, [X22]
	0x03936548 LDR X1, [X23]
	0x0393654C LDRH W9, [X8 + 0x12E]
	0x03936550 CBZ X9, 0x3936574
	0x03936554 LDR X10, [X8 + 0xB0]
	0x03936558 ADD X10, X10, 0x8
	0x0393655C LDUR X11, [X10 - 0x8]
	0x03936560 CMP X11, X1
	0x03936564 B.EQ 0x3936584
	0x03936568 SUBS X9, X9, 0x1
	0x0393656C ADD X10, X10, 0x10
	0x03936570 B.NE 0x393655C
	0x03936574 MOV X0, X22
	0x03936578 MOV W2, W31
	0x0393657C BL 0x1C5C788
	0x03936580 B 0x3936590
	0x03936584 LDRSW X9, [X10]
	0x03936588 ADD X8, X8, X9, 0x4, LSL
	0x0393658C ADD X0, X8, 0x138
	0x03936590 LDP X8, X1, [X0]
	0x03936594 MOV X0, X22
	0x03936598 BLR X8
	0x0393659C TBZ X0, 0x0, 0x3936614
	0x039365A0 LDR X8, [X22]
	0x039365A4 LDR X1, [X26]
	0x039365A8 LDRH W9, [X8 + 0x12E]
	0x039365AC CBZ X9, 0x39365D0
	0x039365B0 LDR X10, [X8 + 0xB0]
	0x039365B4 ADD X10, X10, 0x8
	0x039365B8 LDUR X11, [X10 - 0x8]
	0x039365BC CMP X11, X1
	0x039365C0 B.EQ 0x39365E0
	0x039365C4 SUBS X9, X9, 0x1
	0x039365C8 ADD X10, X10, 0x10
	0x039365CC B.NE 0x39365B8
	0x039365D0 MOV X0, X22
	0x039365D4 MOV W2, W31
	0x039365D8 BL 0x1C5C788
	0x039365DC B 0x39365EC
	0x039365E0 LDRSW X9, [X10]
	0x039365E4 ADD X8, X8, X9, 0x4, LSL
	0x039365E8 ADD X0, X8, 0x138
	0x039365EC LDP X8, X1, [X0]
	0x039365F0 MOV X0, X22
	0x039365F4 BLR X8
	0x039365F8 CBZ X0, 0x3936968
	0x039365FC LDR W8, [X0 + 0x18]
	0x03936600 STR W31, [X0 + 0x18]
	0x03936604 CMP W8, 0x0
	0x03936608 CSET W8, NE
	0x0393660C ORR W24, W24, W8, 0x0
	0x03936610 B 0x3936544
	0x03936614 MOV X23, X31
	0x03936618 MOVZ W26, 0x9
	0x0393661C CBZ X22, 0x3936678
	0x03936620 LDR X8, [X22]
	0x03936624 LDR X1, [X25]
	0x03936628 LDRH W9, [X8 + 0x12E]
	0x0393662C CBZ X9, 0x3936650
	0x03936630 LDR X10, [X8 + 0xB0]
	0x03936634 ADD X10, X10, 0x8
	0x03936638 LDUR X11, [X10 - 0x8]
	0x0393663C CMP X11, X1
	0x03936640 B.EQ 0x3936660
	0x03936644 SUBS X9, X9, 0x1
	0x03936648 ADD X10, X10, 0x10
	0x0393664C B.NE 0x3936638
	0x03936650 MOV X0, X22
	0x03936654 MOV W2, W31
	0x03936658 BL 0x1C5C788
	0x0393665C B 0x393666C
	0x03936660 LDRSW X9, [X10]
	0x03936664 ADD X8, X8, X9, 0x4, LSL
	0x03936668 ADD X0, X8, 0x138
	0x0393666C LDP X8, X1, [X0]
	0x03936670 MOV X0, X22
	0x03936674 BLR X8
	0x03936678 CBNZ X23, 0x39369CC
	0x0393667C CMP W26, 0x9
	0x03936680 B.EQ 0x3936688
	0x03936684 CBNZ W26, 0x3936944
	0x03936688 CBNZ X19, 0x39366C8
	0x0393668C TBZ X24, 0x0, 0x39366B4
	0x03936690 CBZ X21, 0x393697C
	0x03936694 MOV X0, X21
	0x03936698 MOV X1, X31
	0x0393669C BL 0x3912CAC
	0x039366A0 CBZ X0, 0x393697C
	0x039366A4 MOV X1, X31
	0x039366A8 MOV X2, X31
	0x039366AC BL 0x3C17FB4
	0x039366B0 B 0x39366B8
	0x039366B4 CBZ X21, 0x393697C
	0x039366B8 MOV X0, X21
	0x039366BC MOV X1, X31
	0x039366C0 BL 0x3911808
	0x039366C4 MOV X19, X0
	0x039366C8 ADRP X8, 0xFFFFFFFFFD1B4000
	0x039366CC ADRP X9, 0xFFFFFFFFFD1B4000
	0x039366D0 LDR V0, [X8 + 0xD4]
	0x039366D4 LDR V1, [X9 + 0x104]
	0x039366D8 FCMP S8, 0x0
	0x039366DC FMIN S0, S8, S0
	0x039366E0 FMUL S0, S0, S1
	0x039366E4 FMOV S1, W31
	0x039366E8 FCSEL S0, S0, S1, PL
	0x039366EC BL 0x3EB1BD0
	0x039366F0 CBZ X21, 0x393697C
	0x039366F4 ADRP X28, 0x818000
	0x039366F8 LDR X28, [X28 + 0xD88]
	0x039366FC LDR X22, [X21 + 0x28]
	0x03936700 MOV V8.16B, V0.16B
	0x03936704 MOV X26, X20
	0x03936708 LDR X0, [X28]
	0x0393670C STR X21, [X31 + 0x48]
	0x03936710 LDR W8, [X0 + 0xE0]
	0x03936714 CBNZ W8, 0x3936720
	0x03936718 BL 0x1C16DFC
	0x0393671C LDR X0, [X28]
	0x03936720 LDR X8, [X0 + 0xB8]
	0x03936724 ADRP X21, 0x818000
	0x03936728 ADRP X20, 0x7BE000
	0x0393672C ADRP X25, 0x7BE000
	0x03936730 ADRP X29, 0x818000
	0x03936734 ADRP X24, 0x818000
	0x03936738 ADRP X27, 0x818000
	0x0393673C LDR X21, [X21 + 0x698]
	0x03936740 LDR X20, [X20 + 0xE08]
	0x03936744 LDR X23, [X8 + 0x10]
	0x03936748 LDR X25, [X25 + 0xE00]
	0x0393674C LDR X29, [X29 + 0x898]
	0x03936750 LDR X24, [X24 + 0x890]
	0x03936754 LDR X27, [X27 + 0xB08]
	0x03936758 CBNZ X23, 0x39367DC
	0x0393675C LDR W8, [X0 + 0xE0]
	0x03936760 STR X26, [X31]
	0x03936764 CBZ W8, 0x3936770
	0x03936768 MOV X20, X24
	0x0393676C B 0x393677C
	0x03936770 MOV X20, X24
	0x03936774 BL 0x1C16DFC
	0x03936778 LDR X0, [X28]
	0x0393677C ADRP X9, 0x818000
	0x03936780 LDR X8, [X0 + 0xB8]
	0x03936784 LDR X9, [X9 + 0x510]
	0x03936788 LDR X24, [X8]
	0x0393678C LDR X0, [X9]
	0x03936790 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xAAC000
	015 Move W8, [X19+2308]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {80}
	021 Move X0, 0x7C8000
	022 Move X0, [X0+2136]
	023 Call 0x1C17CF4
	024 Move X0, 0x7C8000
	025 Move X0, [X0+2160]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C8000
	028 Move X0, [X0+2192]
	029 Call 0x1C17CF4
	030 Move X0, 0x7C8000
	031 Move X0, [X0+2184]
	032 Call 0x1C17CF4
	033 Move X0, 0x7BE000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x819000
	037 Move X0, [X0+3344]
	038 Call 0x1C17CF4
	039 Move X0, 0x819000
	040 Move X0, [X0+3352]
	041 Call 0x1C17CF4
	042 Move X0, 0x7BE000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0x815000
	046 Move X0, [X0+864]
	047 Call 0x1C17CF4
	048 Move X0, 0x815000
	049 Move X0, [X0+976]
	050 Call 0x1C17CF4
	051 Move X0, 0x7BF000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move X0, 0x819000
	055 Move X0, [X0+3360]
	056 Call 0x1C17CF4
	057 Move X0, 0x7C2000
	058 Move X0, [X0+2928]
	059 Call 0x1C17CF4
	060 Move X0, 0x819000
	061 Move X0, [X0+3368]
	062 Call 0x1C17CF4
	063 Move X0, 0x819000
	064 Move X0, [X0+3376]
	065 Call 0x1C17CF4
	066 Move X0, 0x819000
	067 Move X0, [X0+3384]
	068 Call 0x1C17CF4
	069 Move X0, 0x7BF000
	070 Move X0, [X0+3632]
	071 Call 0x1C17CF4
	072 Move X0, 0x819000
	073 Move X0, [X0+3392]
	074 Call 0x1C17CF4
	075 Move X0, 0x819000
	076 Move X0, [X0+1048]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+2308], W8
	080 Move [X31+12], W31
	081 Compare X20, 0
	082 JumpIfEqual {117}
	083 Move X8, 0x7C8000
	084 Move X8, [X8+2184]
	085 Move X19, 0x7C8000
	086 Move X19, [X19+2192]
	087 Move X22, 0x819000
	088 Move X0, [X8]
	089 Move X23, 0x819000
	090 Move X24, 0x819000
	091 Move X22, [X22+3392]
	092 Move X23, [X23+3368]
	093 Move X24, [X24+3344]
	094 Call 0x1C17F10
	095 Move X1, [X19]
	096 Move X21, X0
	097 Call Dictionary`2<Int32, Int32>..ctor, X0
	098 Move X0, [X22]
	099 Call 0x1C17F10
	100 Move X1, [X23]
	101 Move X19, X0
	102 Call List`1<Object>..ctor, X0
	103 Move X8, [X20]
	104 Move X1, [X24]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 Move X8, 0x819000
	118 Move X8, [X8+1048]
	119 Move W1, W31
	120 Move X0, [X8]
	121 Call 0x1C17D6C
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X20, X0
	130 Compare X0, 0
	131 JumpIfEqual {405}
	132 Move X24, 0x7BE000
	133 Move X25, 0x819000
	134 Move X29, 0x7BF000
	135 Move X28, 0x7BF000
	136 Move X26, 0x7C2000
	137 Move X27, 0x819000
	138 Move X24, [X24+3608]
	139 Move X25, [X25+3352]
	140 Move X29, [X29+3600]
	141 Move X28, [X28+3632]
	142 Move X26, [X26+2928]
	143 Move X27, [X27+3360]
	144 Move X8, [X20]
	145 Move X1, [X24]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X20
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X20
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {345}
	169 Move X8, [X20]
	170 Move X1, [X25]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X20
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X20
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X22, X0
	191 Move X23, X0
	192 ShiftRight X23, 32
	193 And X23, X23, 0x7FFFFFFF
	194 Move TEMP, X23
	195 And TEMP, TEMP, -2147483648
	196 Compare TEMP, -2147483648
	197 JumpIfEqual {239}
	198 Move TEMP, 0
	199 Not TEMP
	200 Move W8, TEMP
	201 Move [X31+12], W8
	202 Compare X21, 0
	203 JumpIfEqual {393}
	204 Move X8, 0x7C8000
	205 Move X8, [X8+2160]
	206 Move X3, [X8]
	207 Add X2, X31, 12
	208 Move X0, X21
	209 Move W1, W23
	210 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {260}
	215 Compare X19, 0
	216 JumpIfEqual {399}
	217 Move X8, 0x819000
	218 Move W1, [X31+12]
	219 Move X8, [X8+3384]
	220 Move X2, [X8]
	221 Move X0, X19
	222 Call List`1<Object>.get_Item, X0, X1
	223 Compare X0, 0
	224 JumpIfEqual {402}
	225 Move W10, [X0+28]
	226 Move X8, [X0+16]
	227 Move X9, [X29]
	228 Add W10, W10, 1
	229 Move [X0+28], W10
	230 Compare X8, 0
	231 JumpIfEqual {398}
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Move W11, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add W9, W10, 1
	236 Add X8, X8, X10
	237 Move [X0+24], W9
	238 Move [X8+32], W22
	239 Move X0, [X28]
	240 Call 0x1C17F10
	241 Move X1, [X26]
	242 Move X23, X0
	243 Call List`1<Int32>..ctor, X0
	244 Compare X23, 0
	245 JumpIfEqual {394}
	246 Move W10, [X23+28]
	247 Move X8, [X23+16]
	248 Move X9, [X29]
	249 Add W10, W10, 1
	250 Move [X23+28], W10
	251 Compare X8, 0
	252 JumpIfEqual {396}
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Move W11, [X8+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add W9, W10, 1
	257 Add X8, X8, X10
	258 Move [X23+24], W9
	259 Move [X8+32], W22
	260 Compare X19, 0
	261 JumpIfEqual {400}
	262 Move X8, 0x7C8000
	263 Move W2, [X19+24]
	264 Move X8, [X8+2136]
	265 Move X3, [X8]
	266 Move X0, X21
	267 Move W1, W23
	268 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	269 Move X0, [X28]
	270 Call 0x1C17F10
	271 Move X1, [X26]
	272 Move X23, X0
	273 Call List`1<Int32>..ctor, X0
	274 Compare X23, 0
	275 JumpIfEqual {401}
	276 Move W10, [X23+28]
	277 Move X8, [X23+16]
	278 Move X9, [X29]
	279 Add W10, W10, 1
	280 Move [X23+28], W10
	281 Compare X8, 0
	282 JumpIfEqual {404}
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Move W11, [X8+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add W9, W10, 1
	287 Add X8, X8, X10
	288 Move [X23+24], W9
	289 Move [X8+32], W22
	290 Move X8, [X9+32]
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Move X0, X23
	294 Move W1, W22
	295 Call List`1<Int32>.AddWithResize, X0, X1
	296 Compare X19, 0
	297 JumpIfEqual {395}
	298 Move W10, [X19+28]
	299 Move X8, [X19+16]
	300 Move X9, [X27]
	301 Add W10, W10, 1
	302 Move [X19+28], W10
	303 Compare X8, 0
	304 JumpIfEqual {397}
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Move W11, [X8+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X8, [X9+32]
	309 Move X8, [X8+192]
	310 Move X2, [X8+112]
	311 Move X0, X19
	312 Move X1, X23
	313 Call List`1<Object>.AddWithResize, X0, X1
	314 Move X8, [X9+32]
	315 Move X8, [X8+192]
	316 Move X2, [X8+112]
	317 Move W1, W22
	318 Call List`1<Int32>.AddWithResize, X0, X1
	319 Move X8, [X9+32]
	320 Move X8, [X8+192]
	321 Move X2, [X8+112]
	322 Move X0, X23
	323 Move W1, W22
	324 Call List`1<Int32>.AddWithResize, X0, X1
	325 Move W10, [X19+28]
	326 Move X8, [X19+16]
	327 Move X9, [X27]
	328 Add W10, W10, 1
	329 Move [X19+28], W10
	330 Compare X8, 0
	331 JumpIfEqual {403}
	332 NotImplemented "Instruction LDRSW not yet implemented."
	333 Move W11, [X8+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add W9, W10, 1
	336 Add X8, X8, X10
	337 Move [X19+24], W9
	338 Move [X8+32], X23
	339 Move X8, [X9+32]
	340 Move X8, [X8+192]
	341 Move X2, [X8+112]
	342 Move X0, X19
	343 Move X1, X23
	344 Call List`1<Object>.AddWithResize, X0, X1
	345 Move X22, X31
	346 Move W21, 7
	347 Compare X20, 0
	348 JumpIfEqual {372}
	349 Move X10, 0x7BE000
	350 Move X8, [X20]
	351 Move X10, [X10+3584]
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Move X1, [X10]
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X20
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X20
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Compare X22, 0
	373 JumpIfNotEqual {406}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Compare W21, 0
	376 JumpIfNotEqual {379}
	377 Move X0, X19
	378 Call SharedVertex.ToSharedVertices, X0
	379 Move X20, [X31+96]
	380 Move X19, [X31+104]
	381 Move X22, [X31+80]
	382 Move X21, [X31+88]
	383 Move X24, [X31+64]
	384 Move X23, [X31+72]
	385 Move X26, [X31+48]
	386 Move X25, [X31+56]
	387 Move X28, [X31+32]
	388 Move X27, [X31+40]
	389 Move X29, [X31+16]
	390 Move X30, [X31+24]
	391 Add X31, X31, 112
	392 Return X0
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Move X0, X22
	407 Call 0x1C17F18
	408 Move X21, X0
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X0, X21
	411 Call 0x3EB2AD0
	412 Move X22, [X0]
	413 Call 0x3EB2AE0
	414 Move W21, W31
	415 Compare X20, 0
	416 JumpIfNotEqual {349}
	417 Move X22, X31
	418 Move X21, X0
	419 Compare X20, 0
	420 JumpIfEqual {444}
	421 Move X10, 0x7BE000
	422 Move X8, [X20]
	423 Move X10, [X10+3584]
	424 NotImplemented "Instruction LDRH not yet implemented."
	425 Move X1, [X10]
	426 Compare X9, 0
	427 JumpIfEqual {434}
	428 Move X10, [X8+176]
	429 Add X10, X10, 8
	430 NotImplemented "Instruction LDUR not yet implemented."
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Subtract X9, X9, 1
	433 Add X10, X10, 16
	434 Move X0, X20
	435 Move W2, W31
	436 Call 0x1C5D788
	437 NotImplemented "Instruction LDRSW not yet implemented."
	438 Add X8, X8, X9
	439 Add X0, X8, 312
	440 Move X8, [X0]
	441 Move X1, [X0+8]
	442 Move X0, X20
	443 NotImplemented "Instruction BLR not yet implemented."
	444 Compare X22, 0
	445 JumpIfNotEqual {448}
	446 Move X0, X21
	447 Call 0x1D2D690
	448 Move X0, X22
	449 Call 0x1C17F18
	450 Call 0x1991590

Method: UnityEngine.ProBuilder.SharedVertex[] ToSharedVertices(System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Int32>> list)

Disassembly:
	0x03936794 ADRP X8, 0x818000
	0x03936798 LDR X8, [X8 + 0xDB8]
	0x0393679C MOV X1, X24
	0x039367A0 MOV X3, X31
	0x039367A4 MOV X23, X0
	0x039367A8 LDR X2, [X8]
	0x039367AC BL 0x2D30128
	0x039367B0 LDR X8, [X28]
	0x039367B4 MOV X24, X20
	0x039367B8 ADRP X29, 0x818000
	0x039367BC ADRP X25, 0x7BE000
	0x039367C0 LDR X8, [X8 + 0xB8]
	0x039367C4 ADRP X20, 0x7BE000
	0x039367C8 LDR X26, [X31]
	0x039367CC STR X23, [X8 + 0x10]
	0x039367D0 LDR X29, [X29 + 0x898]
	0x039367D4 LDR X25, [X25 + 0xE00]
	0x039367D8 LDR X20, [X20 + 0xE08]
	0x039367DC LDR X2, [X21]
	0x039367E0 MOV X0, X22
	0x039367E4 MOV X1, X23
	0x039367E8 BL 0x21CEC3C
	0x039367EC LDR X8, [X20]
	0x039367F0 MOV X23, X0
	0x039367F4 MOV X0, X8
	0x039367F8 BL 0x1C16F10
	0x039367FC LDR X2, [X25]
	0x03936800 MOV X1, X23
	0x03936804 MOV X22, X0
	0x03936808 BL 0x2DA9FD8
	0x0393680C MOVZ W0, 0x1
	0x03936810 MOV X1, X22
	0x03936814 BL 0x393627C
	0x03936818 LDR X8, [X29]
	0x0393681C MOV W23, W0
	0x03936820 MOV X0, X8
	0x03936824 BL 0x1C16F10
	0x03936828 LDR X1, [X24]
	0x0393682C MOV X24, X0
	0x03936830 BL 0x2DBDE08
	0x03936834 LDR X0, [X27]
	0x03936838 LDR W8, [X0 + 0xE0]
	0x0393683C CBNZ W8, 0x3936844
	0x03936840 BL 0x1C16DFC
	0x03936844 LDR X0, [X31 + 0x48]
	0x03936848 MOVZ W2, 0x1
	0x0393684C MOV X1, X26
	0x03936850 MOV X3, X31
	0x03936854 BL 0x3942FD0
	0x03936858 CBZ X0, 0x39369D4
	0x0393685C ADRP X8, 0x818000
	0x03936860 LDR X8, [X8 + 0xDB0]
	0x03936864 LDR X1, [X8]
	0x03936868 ADD X8, X31, 0x8
	0x0393686C BL 0x301CB58
	0x03936870 ADRP X21, 0x818000
	0x03936874 ADRP X26, 0x818000
	0x03936878 ADRP X27, 0x7BF000
	0x0393687C LDR X21, [X21 + 0xDA0]
	0x03936880 LDR X26, [X26 + 0x888]
	0x03936884 LDR X27, [X27 + 0x9D8]
	0x03936888 LDUR V0, [X31 + 0x8]
	0x0393688C LDR X8, [X31 + 0x18]
	0x03936890 ADRP X25, 0x818000
	0x03936894 LDR X25, [X25 + 0xD98]
	0x03936898 FABS S8, S8
	0x0393689C STR V0, [X31 + 0x2]
	0x039368A0 STR X8, [X31 + 0x30]
	0x039368A4 LDR X1, [X21]
	0x039368A8 ADD X0, X31, 0x20
	0x039368AC BL 0x2BC4350
	0x039368B0 TBZ X0, 0x0, 0x3936930
	0x039368B4 LDR X20, [X31 + 0x30]
	0x039368B8 CBZ X20, 0x393696C
	0x039368BC CBZ X24, 0x3936970
	0x039368C0 LDR X1, [X20 + 0x20]
	0x039368C4 LDR X2, [X26]
	0x039368C8 MOV X0, X24
	0x039368CC BL 0x2DBEF30
	0x039368D0 TBZ X0, 0x0, 0x39368A4
	0x039368D4 LDR X8, [X20 + 0x20]
	0x039368D8 CBZ X8, 0x3936974
	0x039368DC STR W23, [X8 + 0x18]
	0x039368E0 MOV X0, X19
	0x039368E4 MOV X1, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xAAC000
	011 Move W8, [X20+2309]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x819000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0x819000
	021 Move X0, [X0+3384]
	022 Call 0x1C17CF4
	023 Move X0, 0x819000
	024 Move X0, [X0+1048]
	025 Call 0x1C17CF4
	026 Move X0, 0x819000
	027 Move X0, [X0+1056]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2309], W8
	031 Compare X19, 0
	032 JumpIfEqual {77}
	033 Move X8, 0x819000
	034 Move X8, [X8+1048]
	035 Move W1, [X19+24]
	036 Move X0, [X8]
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {95}
	040 Move W8, [X0+24]
	041 Move X20, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X24, 0x819000
	044 Move X25, 0x819000
	045 Move X24, [X24+3384]
	046 Move X25, [X25+1056]
	047 Move X21, X31
	048 Add X26, X20, 32
	049 Move X2, [X24]
	050 Move X0, X19
	051 Move W1, W21
	052 Call List`1<Object>.get_Item, X0, X1
	053 Move X8, [X25]
	054 Move X23, X0
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X1, X23
	058 Move X22, X0
	059 Call SharedVertex..ctor, X0, X1
	060 Move W8, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X26], X22
	063 Add X21, X21, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Return X0
	076 Call 0x1C17F28
	077 Move X0, 0x7C3000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x7E7000
	083 Move X0, [X0+448]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0x819000
	090 Move X0, [X0+3400]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Call 0x1C17F20

Method: UnityEngine.ProBuilder.SharedVertex[] GetSharedVerticesWithPositions(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions)

Disassembly:
	0x03934C34 LDP X20, X19, [X31 + 0x20]
	0x03934C38 LDP X22, X21, [X31 + 0x10]
	0x03934C3C UBFM W0, W8, 0x1F, 0x1F
	0x03934C40 LDR X30, [X31], #0x30
	0x03934C44 RET
	0x03934C48 STR X30, [X31 - 0x10]!
	0x03934C4C LDR X0, [X0 + 0x10]
	0x03934C50 CBZ X0, 0x3934C60
	0x03934C54 MOV X1, X31
	0x03934C58 LDR X30, [X31], #0x10
	0x03934C5C B 0x33A1388
	0x03934C60 BL 0x1C16F20
	0x03934C64 STP X29, X30, [X31 - 0x60]!
	0x03934C68 STP X28, X27, [X31 + 0x10]
	0x03934C6C STP X26, X25, [X31 + 0x20]
	0x03934C70 STP X24, X23, [X31 + 0x30]
	0x03934C74 STP X22, X21, [X31 + 0x40]
	0x03934C78 STP X20, X19, [X31 + 0x50]
	0x03934C7C ADRP X21, 0xAAD000
	0x03934C80 LDRB W8, [X21 + 0x903]
	0x03934C84 MOV X19, X1
	0x03934C88 MOV X20, X0
	0x03934C8C TBNZ X8, 0x0, 0x3934CF8
	0x03934C90 ADRP X0, 0x7C9000
	0x03934C94 LDR X0, [X0 + 0x858]
	0x03934C98 BL 0x1C16CF4
	0x03934C9C ADRP X0, 0x7E9000
	0x03934CA0 LDR X0, [X0 + 0x8D0]
	0x03934CA4 BL 0x1C16CF4
	0x03934CA8 ADRP X0, 0x81A000
	0x03934CAC LDR X0, [X0 + 0xD08]
	0x03934CB0 BL 0x1C16CF4
	0x03934CB4 ADRP X0, 0x81A000
	0x03934CB8 LDR X0, [X0 + 0x408]
	0x03934CBC BL 0x1C16CF4
	0x03934CC0 ADRP X0, 0x7BF000
	0x03934CC4 LDR X0, [X0 + 0xE00]
	0x03934CC8 BL 0x1C16CF4
	0x03934CCC ADRP X0, 0x7E7000
	0x03934CD0 LDR X0, [X0 + 0x7C0]
	0x03934CD4 BL 0x1C16CF4
	0x03934CD8 ADRP X0, 0x7BF000
	0x03934CDC LDR X0, [X0 + 0xE18]
	0x03934CE0 BL 0x1C16CF4
	0x03934CE4 ADRP X0, 0x81A000
	0x03934CE8 LDR X0, [X0 + 0x410]
	0x03934CEC BL 0x1C16CF4
	0x03934CF0 MOVZ W8, 0x1
	0x03934CF4 STRB W8, [X21 + 0x903]
	0x03934CF8 CBZ X19, 0x3934FDC
	0x03934CFC ADRP X8, 0x7E9000
	0x03934D00 LDR X8, [X8 + 0x8D0]
	0x03934D04 MOV X0, X19
	0x03934D08 LDR X1, [X8]
	0x03934D0C BL 0x2A0A4C4
	0x03934D10 CBZ X20, 0x3934FDC
	0x03934D14 ADRP X10, 0x81A000
	0x03934D18 LDR X8, [X20]
	0x03934D1C LDR X10, [X10 + 0x408]
	0x03934D20 LDRH W9, [X8 + 0x12E]
	0x03934D24 LDR X1, [X10]
	0x03934D28 CBZ X9, 0x3934D4C
	0x03934D2C LDR X10, [X8 + 0xB0]
	0x03934D30 ADD X10, X10, 0x8
	0x03934D34 LDUR X11, [X10 - 0x8]
	0x03934D38 CMP X11, X1
	0x03934D3C B.EQ 0x3934D5C
	0x03934D40 SUBS X9, X9, 0x1
	0x03934D44 ADD X10, X10, 0x10
	0x03934D48 B.NE 0x3934D34
	0x03934D4C MOV X0, X20
	0x03934D50 MOV W2, W31
	0x03934D54 BL 0x1C5C788
	0x03934D58 B 0x3934D68
	0x03934D5C LDRSW X9, [X10]
	0x03934D60 ADD X8, X8, X9, 0x4, LSL
	0x03934D64 ADD X0, X8, 0x138
	0x03934D68 LDP X8, X1, [X0]
	0x03934D6C MOV X0, X20
	0x03934D70 BLR X8
	0x03934D74 CMP W0, 0x1
	0x03934D78 B.LT 0x3934FC0
	0x03934D7C ADRP X27, 0x7BF000
	0x03934D80 ADRP X28, 0x7E7000
	0x03934D84 ADRP X29, 0x81A000
	0x03934D88 ADRP X25, 0x7C9000
	0x03934D8C LDR X27, [X27 + 0xE18]
	0x03934D90 LDR X28, [X28 + 0x7C0]
	0x03934D94 LDR X29, [X29 + 0xD08]
	0x03934D98 LDR X25, [X25 + 0x858]
	0x03934D9C MOV W21, W0
	0x03934DA0 MOV W22, W31
	0x03934DA4 LDR X8, [X20]
	0x03934DA8 ADRP X10, 0x81A000
	0x03934DAC LDRH W9, [X8 + 0x12E]
	0x03934DB0 LDR X10, [X10 + 0x410]
	0x03934DB4 LDR X1, [X10]
	0x03934DB8 CBZ X9, 0x3934DDC
	0x03934DBC LDR X10, [X8 + 0xB0]
	0x03934DC0 ADD X10, X10, 0x8
	0x03934DC4 LDUR X11, [X10 - 0x8]
	0x03934DC8 CMP X11, X1
	0x03934DCC B.EQ 0x3934DEC
	0x03934DD0 SUBS X9, X9, 0x1
	0x03934DD4 ADD X10, X10, 0x10
	0x03934DD8 B.NE 0x3934DC4
	0x03934DDC MOV X0, X20
	0x03934DE0 MOV W2, W31
	0x03934DE4 BL 0x1C5C788
	0x03934DE8 B 0x3934DF8
	0x03934DEC LDRSW X9, [X10]
	0x03934DF0 ADD X8, X8, X9, 0x4, LSL
	0x03934DF4 ADD X0, X8, 0x138
	0x03934DF8 LDP X8, X2, [X0]
	0x03934DFC MOV X0, X20
	0x03934E00 MOV W1, W22
	0x03934E04 BLR X8
	0x03934E08 CBZ X0, 0x3934FDC
	0x03934E0C BL 0x3934978
	0x03934E10 MOV X23, X0
	0x03934E14 CBZ X0, 0x3934F88
	0x03934E18 LDR X8, [X23]
	0x03934E1C LDR X1, [X27]
	0x03934E20 LDRH W9, [X8 + 0x12E]
	0x03934E24 CBZ X9, 0x3934E48
	0x03934E28 LDR X10, [X8 + 0xB0]
	0x03934E2C ADD X10, X10, 0x8
	0x03934E30 LDUR X11, [X10 - 0x8]
	0x03934E34 CMP X11, X1
	0x03934E38 B.EQ 0x3934E58
	0x03934E3C SUBS X9, X9, 0x1
	0x03934E40 ADD X10, X10, 0x10
	0x03934E44 B.NE 0x3934E30
	0x03934E48 MOV X0, X23
	0x03934E4C MOV W2, W31
	0x03934E50 BL 0x1C5C788
	0x03934E54 B 0x3934E64
	0x03934E58 LDRSW X9, [X10]
	0x03934E5C ADD X8, X8, X9, 0x4, LSL
	0x03934E60 ADD X0, X8, 0x138
	0x03934E64 LDP X8, X1, [X0]
	0x03934E68 MOV X0, X23
	0x03934E6C BLR X8
	0x03934E70 TBZ X0, 0x0, 0x3934EFC
	0x03934E74 LDR X8, [X23]
	0x03934E78 LDR X1, [X28]
	0x03934E7C LDRH W9, [X8 + 0x12E]
	0x03934E80 CBZ X9, 0x3934EA4
	0x03934E84 LDR X10, [X8 + 0xB0]
	0x03934E88 ADD X10, X10, 0x8
	0x03934E8C LDUR X11, [X10 - 0x8]
	0x03934E90 CMP X11, X1
	0x03934E94 B.EQ 0x3934EB4
	0x03934E98 SUBS X9, X9, 0x1
	0x03934E9C ADD X10, X10, 0x10
	0x03934EA0 B.NE 0x3934E8C
	0x03934EA4 MOV X0, X23
	0x03934EA8 MOV W2, W31
	0x03934EAC BL 0x1C5C788
	0x03934EB0 B 0x3934EC0
	0x03934EB4 LDRSW X9, [X10]
	0x03934EB8 ADD X8, X8, X9, 0x4, LSL
	0x03934EBC ADD X0, X8, 0x138
	0x03934EC0 LDP X8, X1, [X0]
	0x03934EC4 MOV X0, X23
	0x03934EC8 BLR X8
	0x03934ECC LDR X2, [X29]
	0x03934ED0 MOV W24, W0
	0x03934ED4 MOV X0, X19
	0x03934ED8 MOV W1, W24
	0x03934EDC BL 0x2A0A530
	0x03934EE0 TBNZ X0, 0x0, 0x3934E18
	0x03934EE4 LDR X3, [X25]
	0x03934EE8 MOV X0, X19
	0x03934EEC MOV W1, W24
	0x03934EF0 MOV W2, W22
	0x03934EF4 BL 0x2A0A344
	0x03934EF8 B 0x3934E18
	0x03934EFC MOV X24, X31
	0x03934F00 MOVZ W26, 0x6
	0x03934F04 CBZ X23, 0x3934F68
	0x03934F08 LDR X8, [X23]
	0x03934F0C ADRP X10, 0x7BF000
	0x03934F10 LDRH W9, [X8 + 0x12E]
	0x03934F14 LDR X10, [X10 + 0xE00]
	0x03934F18 LDR X1, [X10]
	0x03934F1C CBZ X9, 0x3934F40
	0x03934F20 LDR X10, [X8 + 0xB0]
	0x03934F24 ADD X10, X10, 0x8
	0x03934F28 LDUR X11, [X10 - 0x8]
	0x03934F2C CMP X11, X1
	0x03934F30 B.EQ 0x3934F50
	0x03934F34 SUBS X9, X9, 0x1
	0x03934F38 ADD X10, X10, 0x10
	0x03934F3C B.NE 0x3934F28
	0x03934F40 MOV X0, X23
	0x03934F44 MOV W2, W31
	0x03934F48 BL 0x1C5C788
	0x03934F4C B 0x3934F5C
	0x03934F50 LDRSW X9, [X10]
	0x03934F54 ADD X8, X8, X9, 0x4, LSL
	0x03934F58 ADD X0, X8, 0x138
	0x03934F5C LDP X8, X1, [X0]
	0x03934F60 MOV X0, X23
	0x03934F64 BLR X8
	0x03934F68 CBNZ X24, 0x3934FE0
	0x03934F6C CMP W26, 0x6
	0x03934F70 B.EQ 0x3934F78
	0x03934F74 CBNZ W26, 0x3934FC0
	0x03934F78 ADD W22, W22, 0x1
	0x03934F7C CMP W22, W21
	0x03934F80 B.NE 0x3934DA4
	0x03934F84 B 0x3934FC0
	0x03934F88 BL 0x1C16F20
	0x03934F8C B 0x3934FF4
	0x03934F90 B 0x3934FA0
	0x03934F94 B 0x3934FA0
	0x03934F98 B 0x3934FA0
	0x03934F9C B 0x3934FA0
	0x03934FA0 CMP W1, 0x1
	0x03934FA4 B.NE 0x3934FE8
	0x03934FA8 BL 0x3EB1AD0
	0x03934FAC LDR X24, [X0]
	0x03934FB0 BL 0x3EB1AE0
	0x03934FB4 MOV W26, W31
	0x03934FB8 CBNZ X23, 0x3934F08
	0x03934FBC B 0x3934F68
	0x03934FC0 LDP X20, X19, [X31 + 0x50]
	0x03934FC4 LDP X22, X21, [X31 + 0x40]
	0x03934FC8 LDP X24, X23, [X31 + 0x30]
	0x03934FCC LDP X26, X25, [X31 + 0x20]
	0x03934FD0 LDP X28, X27, [X31 + 0x10]
	0x03934FD4 LDP X29, X30, [X31], #0x60
	0x03934FD8 RET
	0x03934FDC BL 0x1C16F20
	0x03934FE0 MOV X0, X24
	0x03934FE4 BL 0x1C16F18
	0x03934FE8 MOV X19, X0
	0x03934FEC MOV X24, X31
	0x03934FF0 B 0x3934FF8
	0x03934FF4 MOV X19, X0
	0x03934FF8 CBZ X23, 0x393505C
	0x03934FFC LDR X8, [X23]
	0x03935000 ADRP X10, 0x7BE000
	0x03935004 LDRH W9, [X8 + 0x12E]
	0x03935008 B 0x3EB16EC
	0x0393500C LDR X1, [X10]
	0x03935010 CBZ X9, 0x3935034
	0x03935014 LDR X10, [X8 + 0xB0]
	0x03935018 ADD X10, X10, 0x8
	0x0393501C LDUR X11, [X10 - 0x8]
	0x03935020 CMP X11, X1
	0x03935024 B.EQ 0x3935044
	0x03935028 SUBS X9, X9, 0x1
	0x0393502C ADD X10, X10, 0x10
	0x03935030 B.NE 0x393501C
	0x03935034 MOV X0, X23
	0x03935038 MOV W2, W31
	0x0393503C BL 0x1C5C788
	0x03935040 B 0x3935050
	0x03935044 LDRSW X9, [X10]
	0x03935048 ADD X8, X8, X9, 0x4, LSL
	0x0393504C ADD X0, X8, 0x138
	0x03935050 LDP X8, X1, [X0]
	0x03935054 MOV X0, X23
	0x03935058 BLR X8
	0x0393505C CBNZ X24, 0x3935068
	0x03935060 MOV X0, X19
	0x03935064 BL 0x1D2C690
	0x03935068 MOV X0, X24
	0x0393506C BL 0x1C16F18
	0x03935070 BL 0x1990590
	0x03935074 STR X30, [X31 - 0x10]!
	0x03935078 LDR X9, [X0 + 0x10]
	0x0393507C CBZ X9, 0x39350B0
	0x03935080 LDR X8, [X9 + 0x18]
	0x03935084 CMP W8, 0x1
	0x03935088 B.LT 0x39350A8
	0x0393508C AND X8, X8, 0x0
	0x03935090 ADD X9, X9, 0x20
	0x03935094 LDR W10, [X9]
	0x03935098 SUBS X8, X8, 0x1
	0x0393509C ADD W10, W10, W1
	0x039350A0 STR W10, [X9], #0x4
	0x039350A4 B.NE 0x3935094
	0x039350A8 LDR X30, [X31], #0x10
	0x039350AC RET
	0x039350B0 BL 0x1C16F20
	0x039350B4 SUB X31, X31, 0x70
	0x039350B8 STP X29, X30, [X31 + 0x10]
	0x039350BC STP X28, X27, [X31 + 0x20]
	0x039350C0 STP X26, X25, [X31 + 0x30]
	0x039350C4 STP X24, X23, [X31 + 0x40]
	0x039350C8 STP X22, X21, [X31 + 0x50]
	0x039350CC STP X20, X19, [X31 + 0x60]
	0x039350D0 ADRP X19, 0xAAC000
	0x039350D4 LDRB W8, [X19 + 0x904]
	0x039350D8 MOV X20, X0
	0x039350DC TBNZ X8, 0x0, 0x39351CC
	0x039350E0 ADRP X0, 0x7C8000
	0x039350E4 LDR X0, [X0 + 0x858]
	0x039350E8 BL 0x1C16CF4
	0x039350EC ADRP X0, 0x7C8000
	0x039350F0 LDR X0, [X0 + 0x870]
	0x039350F4 BL 0x1C16CF4
	0x039350F8 ADRP X0, 0x7C8000
	0x039350FC LDR X0, [X0 + 0x890]
	0x03935100 BL 0x1C16CF4
	0x03935104 ADRP X0, 0x7C8000
	0x03935108 LDR X0, [X0 + 0x888]
	0x0393510C BL 0x1C16CF4
	0x03935110 ADRP X0, 0x7BE000
	0x03935114 LDR X0, [X0 + 0xE00]
	0x03935118 BL 0x1C16CF4
	0x0393511C ADRP X0, 0x819000
	0x03935120 LDR X0, [X0 + 0xD10]
	0x03935124 BL 0x1C16CF4
	0x03935128 ADRP X0, 0x819000
	0x0393512C LDR X0, [X0 + 0xD18]
	0x03935130 BL 0x1C16CF4
	0x03935134 ADRP X0, 0x7BE000
	0x03935138 LDR X0, [X0 + 0xE18]
	0x0393513C BL 0x1C16CF4
	0x03935140 ADRP X0, 0x815000
	0x03935144 LDR X0, [X0 + 0x360]
	0x03935148 BL 0x1C16CF4
	0x0393514C ADRP X0, 0x815000
	0x03935150 LDR X0, [X0 + 0x3D0]
	0x03935154 BL 0x1C16CF4
	0x03935158 ADRP X0, 0x7BF000
	0x0393515C LDR X0, [X0 + 0xE10]
	0x03935160 BL 0x1C16CF4
	0x03935164 ADRP X0, 0x819000
	0x03935168 LDR X0, [X0 + 0xD20]
	0x0393516C BL 0x1C16CF4
	0x03935170 ADRP X0, 0x7C2000
	0x03935174 LDR X0, [X0 + 0xB70]
	0x03935178 BL 0x1C16CF4
	0x0393517C ADRP X0, 0x819000
	0x03935180 LDR X0, [X0 + 0xD28]
	0x03935184 BL 0x1C16CF4
	0x03935188 ADRP X0, 0x819000
	0x0393518C LDR X0, [X0 + 0xD30]
	0x03935190 BL 0x1C16CF4
	0x03935194 ADRP X0, 0x819000
	0x03935198 LDR X0, [X0 + 0xD38]
	0x0393519C BL 0x1C16CF4
	0x039351A0 ADRP X0, 0x7BF000
	0x039351A4 LDR X0, [X0 + 0xE30]
	0x039351A8 BL 0x1C16CF4
	0x039351AC ADRP X0, 0x819000
	0x039351B0 LDR X0, [X0 + 0xD40]
	0x039351B4 BL 0x1C16CF4
	0x039351B8 ADRP X0, 0x819000
	0x039351BC LDR X0, [X0 + 0x418]
	0x039351C0 BL 0x1C16CF4
	0x039351C4 MOVZ W8, 0x1
	0x039351C8 STRB W8, [X19 + 0x904]
	0x039351CC STR W31, [X31 + 0xC]
	0x039351D0 CBZ X20, 0x3935264
	0x039351D4 ADRP X8, 0x7C8000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X29
	006 Move [X31+136], X30
	007 Move [X31+144], X28
	008 Move [X31+152], X27
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X20, 0xAAE000
	018 Move W8, [X20+2310]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {80}
	024 Move X0, 0x81B000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0x81B000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move X0, 0x81B000
	031 Move X0, [X0+3224]
	032 Call 0x1C17CF4
	033 Move X0, 0x81B000
	034 Move X0, [X0+3232]
	035 Call 0x1C17CF4
	036 Move X0, 0x81B000
	037 Move X0, [X0+3240]
	038 Call 0x1C17CF4
	039 Move X0, 0x81B000
	040 Move X0, [X0+3248]
	041 Call 0x1C17CF4
	042 Move X0, 0x81B000
	043 Move X0, [X0+3256]
	044 Call 0x1C17CF4
	045 Move X0, 0x81B000
	046 Move X0, [X0+3264]
	047 Call 0x1C17CF4
	048 Move X0, 0x81B000
	049 Move X0, [X0+3272]
	050 Call 0x1C17CF4
	051 Move X0, 0x81A000
	052 Move X0, [X0+3960]
	053 Call 0x1C17CF4
	054 Move X0, 0x81A000
	055 Move X0, [X0+3968]
	056 Call 0x1C17CF4
	057 Move X0, 0x81B000
	058 Move X0, [X0+3280]
	059 Call 0x1C17CF4
	060 Move X0, 0x7C1000
	061 Move X0, [X0+3600]
	062 Call 0x1C17CF4
	063 Move X0, 0x7C1000
	064 Move X0, [X0+3608]
	065 Call 0x1C17CF4
	066 Move X0, 0x7C4000
	067 Move X0, [X0+2928]
	068 Call 0x1C17CF4
	069 Move X0, 0x7C1000
	070 Move X0, [X0+3632]
	071 Call 0x1C17CF4
	072 Move X0, 0x81B000
	073 Move X0, [X0+1048]
	074 Call 0x1C17CF4
	075 Move X0, 0x81B000
	076 Move X0, [X0+1056]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X20+2310], W8
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move [X31+104], X31
	082 Move [X31+64], V0
	083 Move [X31+72], V0
	084 Move [X31+3], V0
	085 Compare X19, 0
	086 JumpIfEqual {334}
	087 Move X8, 0x81B000
	088 Move X8, [X8+3248]
	089 Move X20, 0x81B000
	090 Move X29, 0x81A000
	091 Move X23, 0x81A000
	092 Move X27, 0x81B000
	093 Move X28, 0x7C1000
	094 Move X24, 0x81B000
	095 Move X20, [X20+3232]
	096 Move X29, [X29+3960]
	097 Move X23, [X23+3968]
	098 Move X27, [X27+3224]
	099 Move X28, [X28+3600]
	100 Move X24, [X24+3264]
	101 Move X0, [X8]
	102 Move X25, 0x7C1000
	103 Move X26, 0x81B000
	104 Move X25, [X25+3608]
	105 Move X26, [X26+1056]
	106 Call 0x1C17F10
	107 Move X1, [X20]
	108 Move X20, X0
	109 Call Dictionary`2<IntVec3, Object>..ctor, X0
	110 Move W21, W31
	111 Move X8, [X19]
	112 Move X1, [X29]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X19]
	134 Move X1, [X23]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X19
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X2, [X0+8]
	152 Move X0, X19
	153 Move W1, W21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X0, X31
	156 Call IntVec3.op_Implicit, X0
	157 Compare X20, 0
	158 JumpIfEqual {330}
	159 Move X2, [X27]
	160 Add X1, X31, 104
	161 Move X0, X20
	162 Call Dictionary`2<IntVec3, Object>.TryGetValue, X0, X1, X2
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {184}
	167 Move X0, [X31+104]
	168 Compare X0, 0
	169 JumpIfEqual {330}
	170 Move W10, [X0+28]
	171 Move X8, [X0+16]
	172 Move X9, [X28]
	173 Add W10, W10, 1
	174 Move [X0+28], W10
	175 Compare X8, 0
	176 JumpIfEqual {330}
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Move W11, [X8+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add W9, W10, 1
	181 Add X8, X8, X10
	182 Move [X0+24], W9
	183 Move [X8+32], W21
	184 Move X8, [X19]
	185 Move X1, [X23]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X19
	196 Move W2, W31
	197 Call 0x1C5D788
	198 Move X8, [X9+32]
	199 Move W1, W21
	200 Move X8, [X8+192]
	201 Move X2, [X8+112]
	202 Call List`1<Int32>.AddWithResize, X0, X1
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X2, [X0+8]
	208 Move X0, X19
	209 Move W1, W21
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X8, 0x7C1000
	212 Move X8, [X8+3632]
	213 Move V8, V0
	214 Move V9, V1
	215 Move V10, V2
	216 Move X0, [X8]
	217 Call 0x1C17F10
	218 Move X8, 0x7C4000
	219 Move X8, [X8+2928]
	220 Move X22, X0
	221 Move X1, [X8]
	222 Call List`1<Int32>..ctor, X0
	223 Compare X22, 0
	224 JumpIfEqual {330}
	225 Move W10, [X22+28]
	226 Move X8, [X22+16]
	227 Move X9, [X28]
	228 Add W10, W10, 1
	229 Move [X22+28], W10
	230 Compare X8, 0
	231 JumpIfEqual {330}
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Move W11, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add W9, W10, 1
	236 Add X8, X8, X10
	237 Move [X22+24], W9
	238 Move [X8+32], W21
	239 Move X8, [X9+32]
	240 Move X0, X22
	241 Move W1, W21
	242 Move X8, [X8+192]
	243 Move X2, [X8+112]
	244 Call List`1<Int32>.AddWithResize, X0, X1
	245 Move X8, 0x81B000
	246 Move X8, [X8+3208]
	247 Move X0, X20
	248 Move V0, V8
	249 Move V1, V9
	250 Move X2, [X8]
	251 Move V2, V10
	252 Move X1, X22
	253 Call Dictionary`2<IntVec3, Object>.Add, X0, X1, X2
	254 Add W21, W21, 1
	255 Compare X20, 0
	256 JumpIfEqual {330}
	257 Move X8, 0x81A000
	258 Move X8, [X8+3240]
	259 Move X0, X20
	260 Move X1, [X8]
	261 Call Dictionary`2<IntVec3, Object>.get_Count, X0
	262 Move X8, 0x81A000
	263 Move X8, [X8+1048]
	264 Move W1, W0
	265 Move X8, [X8]
	266 Move X0, X8
	267 Call 0x1C17D6C
	268 Move X8, 0x81A000
	269 Move X8, [X8+3216]
	270 Move X19, X0
	271 Move X0, X20
	272 Move X1, [X8]
	273 Add X8, X31, 0
	274 Call Dictionary`2<IntVec3, Object>.GetEnumerator, X0
	275 Move V0, [X31]
	276 Move V1, [X31+16]
	277 Move V2, [X31+2]
	278 Move W22, W31
	279 Move [X31+48], V0
	280 Move [X31+56], V1
	281 Move [X31+5], V2
	282 Move X1, [X24]
	283 Add X0, X31, 48
	284 Call Enumerator<IntVec3, Object>.MoveNext, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {307}
	289 Move X0, [X31+80]
	290 Compare X0, 0
	291 JumpIfEqual {332}
	292 Move X1, [X25]
	293 Call List`1<Int32>.ToArray, X0
	294 Move X21, X0
	295 Move X0, [X26]
	296 Call 0x1C17F10
	297 Move X20, X0
	298 Move X1, X21
	299 Call SharedVertex..ctor, X0, X1
	300 Compare X19, 0
	301 JumpIfEqual {333}
	302 Move W8, [X19+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X8, X19, W22
	305 Add W22, W22, 1
	306 Move [X8+32], X20
	307 Move X8, 0x81A000
	308 Move X8, [X8+3256]
	309 Add X0, X31, 48
	310 Move X1, [X8]
	311 Call Enumerator<IntVec3, Object>.Dispose, X0
	312 Move X0, X19
	313 Move X20, [X31+208]
	314 Move X19, [X31+216]
	315 Move X22, [X31+192]
	316 Move X21, [X31+200]
	317 Move X24, [X31+176]
	318 Move X23, [X31+184]
	319 Move X26, [X31+160]
	320 Move X25, [X31+168]
	321 Move X28, [X31+144]
	322 Move X27, [X31+152]
	323 Move X29, [X31+128]
	324 Move X30, [X31+136]
	325 Move D9, [X31+112]
	326 Move D8, [X31+120]
	327 Move V10, [X31+96]
	328 Add X31, X31, 224
	329 Return X0
	330 Call 0x1C17F20
	331 Call 0x1C17F28
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Move X0, 0x7C4000
	335 Move X0, [X0+1320]
	336 Call 0x1C17D08
	337 Call 0x1C17F10
	338 Move X19, X0
	339 Move X0, 0x81A000
	340 Move X0, [X0+1840]
	341 Call 0x1C17D08
	342 Move X1, X0
	343 Move X0, X19
	344 Move X2, X31
	345 Call ArgumentNullException..ctor, X0, X1
	346 Move X0, 0x81A000
	347 Move X0, [X0+3288]
	348 Call 0x1C17D08
	349 Move X1, X0
	350 Move X0, X19
	351 Call 0x1C17DEC
	352 Move X20, X0
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X0, X20
	355 Call 0x3EB2AD0
	356 Move X21, [X0]
	357 Call 0x3EB2AE0
	358 Move X8, 0x81A000
	359 Move X8, [X8+3256]
	360 Add X0, X31, 48
	361 Move X1, [X8]
	362 Call Enumerator<IntVec3, Object>.Dispose, X0
	363 Compare X21, 0
	364 JumpIfEqual {312}
	365 Move X0, X21
	366 Call 0x1C17F18
	367 Move X21, X31
	368 Move X20, X0
	369 Move X8, 0x81A000
	370 Move X8, [X8+3256]
	371 Move X1, [X8]
	372 Add X0, X31, 48
	373 Call Enumerator<IntVec3, Object>.Dispose, X0
	374 Compare X21, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X20
	377 Call 0x1D2D690
	378 Move X0, X21
	379 Call 0x1C17F18
	380 Call 0x1991590

Method: UnityEngine.ProBuilder.SharedVertex[] RemoveAndShift(System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup, System.Collections.Generic.IEnumerable`1<System.Int32> remove)

Disassembly:
	0x039368E8 MOV V0.16B, V8.16B
	0x039368EC MOV X2, X24
	0x039368F0 BL 0x3936BAC
	0x039368F4 TBNZ X0, 0x0, 0x3936908
	0x039368F8 LDR X8, [X20 + 0x20]
	0x039368FC CBZ X8, 0x3936978
	0x03936900 STR W31, [X8 + 0x18]
	0x03936904 B 0x39368A4
	0x03936908 CBZ X22, 0x39369E0
	0x0393690C LDR X2, [X27]
	0x03936910 MOV X0, X22
	0x03936914 MOV W1, W23
	0x03936918 BL 0x2DAB03C
	0x0393691C MOV W0, W23
	0x03936920 MOV X1, X22
	0x03936924 BL 0x393627C
	0x03936928 MOV W23, W0
	0x0393692C B 0x39368A4
	0x03936930 MOV X21, X31
	0x03936934 LDR X1, [X25]
	0x03936938 ADD X0, X31, 0x20
	0x0393693C BL 0x2BC434C
	0x03936940 CBNZ X21, 0x39369D8
	0x03936944 LDP X20, X19, [X31 + 0xA0]
	0x03936948 LDP X22, X21, [X31 + 0x90]
	0x0393694C LDP X24, X23, [X31 + 0x80]
	0x03936950 LDP X26, X25, [X31 + 0x70]
	0x03936954 LDP X28, X27, [X31 + 0x60]
	0x03936958 LDP X29, X30, [X31 + 0x50]
	0x0393695C LDR V8, [X31 + 0x40]
	0x03936960 ADD X31, X31, 0xB0
	0x03936964 RET
	0x03936968 BL 0x1C16F20
	0x0393696C BL 0x1C16F20
	0x03936970 BL 0x1C16F20
	0x03936974 BL 0x1C16F20
	0x03936978 BL 0x1C16F20
	0x0393697C BL 0x1C16F20
	0x03936980 ADRP X0, 0x7C2000
	0x03936984 LDR X0, [X0 + 0x528]
	0x03936988 BL 0x1C16D08
	0x0393698C BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAAC000
	008 Move X23, 0x7BF000
	009 Move X21, 0x7E6000
	010 Move W8, [X22+2311]
	011 Move X23, [X23+3632]
	012 Move X21, [X21+1944]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x7E6000
	020 Move X0, [X0+1936]
	021 Call 0x1C17CF4
	022 Move X0, 0x7E6000
	023 Move X0, [X0+1944]
	024 Call 0x1C17CF4
	025 Move X0, 0x7BF000
	026 Move X0, [X0+3632]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2311], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X2, [X21]
	033 Move X1, X20
	034 Move X21, X0
	035 Call List`1<Int32>..ctor, X0, X1
	036 Compare X21, 0
	037 JumpIfEqual {51}
	038 Move X8, 0x7E6000
	039 Move X8, [X8+1936]
	040 Move X0, X21
	041 Move X1, [X8]
	042 Call List`1<Int32>.Sort, X0
	043 Move X0, X19
	044 Move X1, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call 0x1C17F20

Method: UnityEngine.ProBuilder.SharedVertex[] SortedRemoveAndShift(System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup, System.Collections.Generic.List`1<System.Int32> remove)

Disassembly:
	0x03936990 MOV X19, X0
	0x03936994 ADRP X0, 0x817000
	0x03936998 LDR X0, [X0 + 0xE90]
	0x0393699C BL 0x1C16D08
	0x039369A0 MOV X1, X0
	0x039369A4 MOV X0, X19
	0x039369A8 MOV X2, X31
	0x039369AC BL 0x330E100
	0x039369B0 ADRP X0, 0x818000
	0x039369B4 LDR X0, [X0 + 0xDC0]
	0x039369B8 BL 0x1C16D08
	0x039369BC MOV X1, X0
	0x039369C0 MOV X0, X19
	0x039369C4 BL 0x1C16DEC
	0x039369C8 BL 0x1C16F20
	0x039369CC MOV X0, X23
	0x039369D0 BL 0x1C16F18
	0x039369D4 BL 0x1C16F20
	0x039369D8 MOV X0, X21
	0x039369DC BL 0x1C16F18
	0x039369E0 BL 0x1C16F20
	0x039369E4 B 0x3936A24
	0x039369E8 B 0x3936A24
	0x039369EC B 0x3936A24
	0x039369F0 B 0x3936A00
	0x039369F4 B 0x3936A00
	0x039369F8 MOV W24, W31
	0x039369FC B 0x3936B08
	0x03936A00 MOV X20, X1
	0x03936A04 MOV X19, X0
	0x03936A08 B 0x3936A5C
	0x03936A0C B 0x3936A24
	0x03936A10 B 0x3936A24
	0x03936A14 B 0x3936A24
	0x03936A18 B 0x3936A24
	0x03936A1C B 0x3936A24
	0x03936A20 B 0x3936A24
	0x03936A24 MOV X20, X1
	0x03936A28 MOV X19, X0
	0x03936A2C CMP W20, 0x1
	0x03936A30 B.NE 0x3936A48
	0x03936A34 MOV X0, X19
	0x03936A38 BL 0x3EB1AD0
	0x03936A3C LDR X21, [X0]
	0x03936A40 BL 0x3EB1AE0
	0x03936A44 B 0x3936934
	0x03936A48 MOV X21, X31
	0x03936A4C LDR X1, [X25]
	0x03936A50 ADD X0, X31, 0x20
	0x03936A54 BL 0x2BC434C
	0x03936A58 CBNZ X21, 0x3936AE0
	0x03936A5C CMP W20, 0x1
	0x03936A60 B.NE 0x3936B98
	0x03936A64 MOV X0, X19
	0x03936A68 BL 0x3EB1AD0
	0x03936A6C MOV X19, X0
	0x03936A70 ADRP X0, 0x7C3000
	0x03936A74 LDR X0, [X0 + 0xCC0]
	0x03936A78 BL 0x1C16D08
	0x03936A7C LDR X8, [X19]
	0x03936A80 LDR X1, [X8]
	0x03936A84 BL 0x1C17270
	0x03936A88 TBZ X0, 0x0, 0x3936AC0
	0x03936A8C BL 0x3EB1AE0
	0x03936A90 ADRP X0, 0x7BD000
	0x03936A94 LDR X0, [X0 + 0xA28]
	0x03936A98 BL 0x1C16D08
	0x03936A9C LDR W8, [X0 + 0xE0]
	0x03936AA0 CBNZ W8, 0x3936AA8
	0x03936AA4 BL 0x1C16DFC
	0x03936AA8 ADRP X0, 0x818000
	0x03936AAC LDR X0, [X0 + 0xDC8]
	0x03936AB0 BL 0x1C16D08
	0x03936AB4 MOV X1, X31
	0x03936AB8 BL 0x3C06A04
	0x03936ABC B 0x3936944
	0x03936AC0 MOVZ W0, 0x8
	0x03936AC4 BL 0x3EB1AF0
	0x03936AC8 LDR X8, [X19]
	0x03936ACC STR X8, [X0]
	0x03936AD0 ADRP X1, 0x57E000
	0x03936AD4 ADD X1, X1, 0xE58
	0x03936AD8 MOV X2, X31
	0x03936ADC BL 0x3EB1B00
	0x03936AE0 MOV X0, X21
	0x03936AE4 BL 0x1C16F18
	0x03936AE8 MOV X20, X1
	0x03936AEC MOV X19, X0
	0x03936AF0 B 0x3936A4C
	0x03936AF4 MOV X19, X0
	0x03936AF8 BL 0x3EB1AE0
	0x03936AFC B 0x3936B98
	0x03936B00 B 0x3936B08
	0x03936B04 B 0x3936B08
	0x03936B08 CMP W1, 0x1
	0x03936B0C B.NE 0x3936B28
	0x03936B10 BL 0x3EB1AD0
	0x03936B14 LDR X23, [X0]
	0x03936B18 BL 0x3EB1AE0
	0x03936B1C MOV W26, W31
	0x03936B20 CBNZ X22, 0x3936620
	0x03936B24 B 0x3936678
	0x03936B28 MOV X19, X0
	0x03936B2C MOV X23, X31
	0x03936B30 B 0x3936B38
	0x03936B34 MOV X19, X0
	0x03936B38 CBZ X22, 0x3936B94
	0x03936B3C LDR X8, [X22]
	0x03936B40 LDR X1, [X25]
	0x03936B44 LDRH W9, [X8 + 0x12E]
	0x03936B48 CBZ X9, 0x3936B6C
	0x03936B4C LDR X10, [X8 + 0xB0]
	0x03936B50 ADD X10, X10, 0x8
	0x03936B54 LDUR X11, [X10 - 0x8]
	0x03936B58 CMP X11, X1
	0x03936B5C B.EQ 0x3936B7C
	0x03936B60 SUBS X9, X9, 0x1
	0x03936B64 ADD X10, X10, 0x10
	0x03936B68 B.NE 0x3936B54
	0x03936B6C MOV X0, X22
	0x03936B70 MOV W2, W31
	0x03936B74 BL 0x1C5C788
	0x03936B78 B 0x3936B88
	0x03936B7C LDRSW X9, [X10]
	0x03936B80 ADD X8, X8, X9, 0x4, LSL
	0x03936B84 ADD X0, X8, 0x138
	0x03936B88 LDP X8, X1, [X0]
	0x03936B8C MOV X0, X22
	0x03936B90 BLR X8
	0x03936B94 CBNZ X23, 0x3936BA0
	0x03936B98 MOV X0, X19
	0x03936B9C BL 0x1D2C690
	0x03936BA0 MOV X0, X23
	0x03936BA4 BL 0x1C16F18
	0x03936BA8 BL 0x1990590
	0x03936BAC STR D8, [X31 - 0x50]!
	0x03936BB0 STR X30, [X31 + 0x8]
	0x03936BB4 STP X26, X25, [X31 + 0x10]
	0x03936BB8 STP X24, X23, [X31 + 0x20]
	0x03936BBC STP X22, X21, [X31 + 0x30]
	0x03936BC0 STP X20, X19, [X31 + 0x40]
	0x03936BC4 ADRP X23, 0xAAB000
	0x03936BC8 ADRP X19, 0x818000
	0x03936BCC LDRB W8, [X23 + 0x90F]
	0x03936BD0 LDR X19, [X19 + 0xDD0]
	0x03936BD4 MOV X20, X2
	0x03936BD8 MOV V8.16B, V0.16B
	0x03936BDC MOV X21, X1
	0x03936BE0 MOV X22, X0
	0x03936BE4 TBNZ X8, 0x0, 0x3936C14
	0x03936BE8 ADRP X0, 0x818000
	0x03936BEC LDR X0, [X0 + 0x888]
	0x03936BF0 BL 0x1C16CF4
	0x03936BF4 ADRP X0, 0x7BD000
	0x03936BF8 LDR X0, [X0 + 0xE00]
	0x03936BFC BL 0x1C16CF4
	0x03936C00 ADRP X0, 0x818000
	0x03936C04 LDR X0, [X0 + 0xDD0]
	0x03936C08 BL 0x1C16CF4
	0x03936C0C MOVZ W8, 0x1
	0x03936C10 STRB W8, [X23 + 0x90F]
	0x03936C14 LDR X0, [X19]
	0x03936C18 ADRP X26, 0x818000
	0x03936C1C ADRP X24, 0x7BD000
	0x03936C20 LDR X26, [X26 + 0x888]
	0x03936C24 LDR X24, [X24 + 0xE00]
	0x03936C28 BL 0x1C16F10
	0x03936C2C MOV X1, X21
	0x03936C30 MOV X2, X31
	0x03936C34 MOV X19, X0
	0x03936C38 BL 0x3943870
	0x03936C3C MOV W25, W31
	0x03936C40 CBZ X19, 0x3936D90
	0x03936C44 MOV X0, X19
	0x03936C48 MOV X1, X31
	0x03936C4C BL 0x3943898
	0x03936C50 TBZ X0, 0x0, 0x3936CFC
	0x03936C54 MOV X0, X19
	0x03936C58 MOV X1, X31
	0x03936C5C BL 0x39438DC
	0x03936C60 MOV X23, X0
	0x03936C64 CBZ X0, 0x3936D80
	0x03936C68 LDR X8, [X23 + 0x38]
	0x03936C6C CBZ X8, 0x3936CB8
	0x03936C70 LDR X9, [X8 + 0x20]
	0x03936C74 CBZ X9, 0x3936D84
	0x03936C78 LDR W9, [X9 + 0x18]
	0x03936C7C CBNZ W9, 0x3936CB8
	0x03936C80 LDP X1, X2, [X23 + 0x10]
	0x03936C84 LDP X3, X4, [X8 + 0x10]
	0x03936C88 MOV X0, X22
	0x03936C8C MOV V0.16B, V8.16B
	0x03936C90 BL 0x3936E88
	0x03936C94 TBZ X0, 0x0, 0x3936CB8
	0x03936C98 LDR X8, [X23 + 0x38]
	0x03936C9C CBZ X8, 0x3936D8C
	0x03936CA0 CBZ X20, 0x3936D88
	0x03936CA4 LDR X1, [X8 + 0x20]
	0x03936CA8 LDR X2, [X26]
	0x03936CAC MOV X0, X20
	0x03936CB0 BL 0x2DBEF30
	0x03936CB4 TBNZ X0, 0x0, 0x3936CC0
	0x03936CB8 CBNZ X19, 0x3936C44
	0x03936CBC B 0x3936D94
	0x03936CC0 LDR X1, [X23 + 0x38]
	0x03936CC4 CBZ X1, 0x3936DA0
	0x03936CC8 CBZ X21, 0x3936DA4
	0x03936CCC LDR X8, [X21 + 0x20]
	0x03936CD0 CBZ X8, 0x3936DAC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X21, 0xAAC000
	014 Move W8, [X21+2312]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x819000
	022 Move X0, [X0+3408]
	023 Call 0x1C17CF4
	024 Move X0, 0x7E8000
	025 Move X0, [X0+2224]
	026 Call 0x1C17CF4
	027 Move X0, 0x819000
	028 Move X0, [X0+3416]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E9000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E9000
	034 Move X0, [X0+2856]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E9000
	037 Move X0, [X0+2872]
	038 Call 0x1C17CF4
	039 Move X0, 0x819000
	040 Move X0, [X0+3424]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E9000
	043 Move X0, [X0+2896]
	044 Call 0x1C17CF4
	045 Move X0, 0x819000
	046 Move X0, [X0+3432]
	047 Call 0x1C17CF4
	048 Move X0, 0x819000
	049 Move X0, [X0+3440]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+2312], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+48], X31
	056 Compare X19, 0
	057 JumpIfEqual {202}
	058 Move X8, 0x7E9000
	059 Move X8, [X8+2896]
	060 Move X21, 0x7E9000
	061 Move X22, 0x7E8000
	062 Move X25, 0x819000
	063 Move X21, [X21+2856]
	064 Move X22, [X22+2224]
	065 Move X25, [X25+3440]
	066 Move X1, [X8]
	067 Move X23, 0x819000
	068 Move X24, 0x819000
	069 Move X26, 0x7E9000
	070 Move X23, [X23+3416]
	071 Move X24, [X24+3408]
	072 Move X26, [X26+2840]
	073 Add X8, X31, 8
	074 Move X0, X19
	075 Call List`1<Int32>.GetEnumerator, X0
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+24]
	078 Move [X31+2], V0
	079 Move [X31+48], X8
	080 Move X1, [X21]
	081 Add X0, X31, 32
	082 Call Enumerator<Int32>.MoveNext, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {96}
	087 Compare X20, 0
	088 JumpIfEqual {203}
	089 Move W1, [X31+48]
	090 Move X3, [X22]
	091 Move TEMP, 0
	092 Not TEMP
	093 Move W2, TEMP
	094 Move X0, X20
	095 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	096 Move X1, [X26]
	097 Add X0, X31, 32
	098 Call Enumerator<Int32>.Dispose, X0
	099 Move X0, [X25]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X25]
	105 Move X8, [X0+184]
	106 Move X21, [X8+8]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X25]
	114 Move X9, 0x819000
	115 Move X8, [X0+184]
	116 Move X9, [X9+3424]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x819000
	121 Move X8, [X8+3432]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call Func`2<KeyValuePair`2<Int32, Int32>, Boolean>..ctor, X0, X1, X2
	127 Move X8, [X25]
	128 Move X8, [X8+184]
	129 Move [X8+8], X21
	130 Move X2, [X23]
	131 Move X0, X20
	132 Move X1, X21
	133 Call Enumerable.Where, X0, X1
	134 Call SharedVertex.ToSharedVertices, X0
	135 Compare X0, 0
	136 JumpIfEqual {202}
	137 Move X25, [X0+24]
	138 Move X20, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare W25, 0
	141 JumpIfEqual {187}
	142 Move W26, W31
	143 Move X8, X25
	144 Add X27, X20, W26
	145 Add X27, X27, 32
	146 Move X9, [X27]
	147 Compare X9, 0
	148 JumpIfEqual {202}
	149 Move X9, [X9+16]
	150 Compare X9, 0
	151 JumpIfEqual {202}
	152 Move W9, [X9+24]
	153 Subtract W28, W9, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W21, W31
	156 Move X0, [X27]
	157 Compare X0, 0
	158 JumpIfEqual {202}
	159 Move W1, W21
	160 Call SharedVertex.get_Item, X0, X1
	161 Move X2, [X24]
	162 Move W1, W0
	163 Move X0, X19
	164 Call 0x218001C, X0, X1
	165 Move W8, [X20+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X23, [X27]
	168 Compare X23, 0
	169 JumpIfEqual {202}
	170 Move W22, W0
	171 Move X0, X23
	172 Move W1, W21
	173 Call SharedVertex.get_Item, X0, X1
	174 NotImplemented "Instruction ORN not yet implemented."
	175 Add W2, W0, W8
	176 Move X0, X23
	177 Move W1, W21
	178 Call SharedVertex.set_Item, X0, X1, X2
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W8, [X20+24]
	181 Add W21, W21, 1
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add W26, W26, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Call 0x1C17F28
	188 Move X0, X20
	189 Move X20, [X31+144]
	190 Move X19, [X31+152]
	191 Move X22, [X31+128]
	192 Move X21, [X31+136]
	193 Move X24, [X31+112]
	194 Move X23, [X31+120]
	195 Move X26, [X31+96]
	196 Move X25, [X31+104]
	197 Move X28, [X31+80]
	198 Move X27, [X31+88]
	199 Move X30, [X31+64]
	200 Add X31, X31, 160
	201 Return X0
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Move X21, X0
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, X21
	207 Call 0x3EB2AD0
	208 Move X22, [X0]
	209 Call 0x3EB2AE0
	210 Move X1, [X26]
	211 Add X0, X31, 32
	212 Call Enumerator<Int32>.Dispose, X0
	213 Compare X22, 0
	214 JumpIfEqual {99}
	215 Move X0, X22
	216 Call 0x1C17F18
	217 Move X22, X31
	218 Move X21, X0
	219 Move X1, [X26]
	220 Add X0, X31, 32
	221 Call Enumerator<Int32>.Dispose, X0
	222 Compare X22, 0
	223 JumpIfNotEqual {226}
	224 Move X0, X21
	225 Call 0x1D2D690
	226 Move X0, X22
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.Void SetCoincident(ref System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup, System.Collections.Generic.IEnumerable`1<System.Int32> vertices)

Disassembly:
	0x03936CD4 LDR X9, [X1 + 0x20]
	0x03936CD8 CBZ X9, 0x3936DA8
	0x03936CDC LDR W8, [X8 + 0x18]
	0x03936CE0 MOVZ W25, 0x1
	0x03936CE4 STR W8, [X9 + 0x18]
	0x03936CE8 MOV X0, X22
	0x03936CEC MOV V0.16B, V8.16B
	0x03936CF0 MOV X2, X20
	0x03936CF4 BL 0x3936BAC
	0x03936CF8 B 0x3936C40
	0x03936CFC MOV X20, X31
	0x03936D00 CBZ X19, 0x3936D5C
	0x03936D04 LDR X8, [X19]
	0x03936D08 LDR X1, [X24]
	0x03936D0C LDRH W9, [X8 + 0x12E]
	0x03936D10 CBZ X9, 0x3936D34
	0x03936D14 LDR X10, [X8 + 0xB0]
	0x03936D18 ADD X10, X10, 0x8
	0x03936D1C LDUR X11, [X10 - 0x8]
	0x03936D20 CMP X11, X1
	0x03936D24 B.EQ 0x3936D44
	0x03936D28 SUBS X9, X9, 0x1
	0x03936D2C ADD X10, X10, 0x10
	0x03936D30 B.NE 0x3936D1C
	0x03936D34 MOV X0, X19
	0x03936D38 MOV W2, W31
	0x03936D3C BL 0x1C5C788
	0x03936D40 B 0x3936D50
	0x03936D44 LDRSW X9, [X10]
	0x03936D48 ADD X8, X8, X9, 0x4, LSL
	0x03936D4C ADD X0, X8, 0x138
	0x03936D50 LDP X8, X1, [X0]
	0x03936D54 MOV X0, X19
	0x03936D58 BLR X8
	0x03936D5C CBNZ X20, 0x3936D98
	0x03936D60 AND W0, W25, 0x1
	0x03936D64 LDP X20, X19, [X31 + 0x40]
	0x03936D68 LDP X22, X21, [X31 + 0x30]
	0x03936D6C LDP X24, X23, [X31 + 0x20]
	0x03936D70 LDP X26, X25, [X31 + 0x10]
	0x03936D74 LDR X30, [X31 + 0x8]
	0x03936D78 LDR V8, [X31], #0x50
	0x03936D7C RET
	0x03936D80 BL 0x1C16F20
	0x03936D84 BL 0x1C16F20
	0x03936D88 BL 0x1C16F20
	0x03936D8C BL 0x1C16F20
	0x03936D90 MOV W25, W31
	0x03936D94 BL 0x1C16F20
	0x03936D98 MOV X0, X20
	0x03936D9C BL 0x1C16F18
	0x03936DA0 BL 0x1C16F20
	0x03936DA4 BL 0x1C16F20
	0x03936DA8 BL 0x1C16F20
	0x03936DAC BL 0x1C16F20
	0x03936DB0 B 0x3936DC0
	0x03936DB4 B 0x3936DC0
	0x03936DB8 B 0x3936DC0
	0x03936DBC B 0x3936DC0
	0x03936DC0 MOVZ W25, 0x1
	0x03936DC4 B 0x3936DEC
	0x03936DC8 B 0x3936DEC
	0x03936DCC B 0x3936DEC
	0x03936DD0 MOV W25, W31
	0x03936DD4 B 0x3936DEC
	0x03936DD8 B 0x3936DEC
	0x03936DDC B 0x3936DEC
	0x03936DE0 B 0x3936DEC
	0x03936DE4 B 0x3936DEC
	0x03936DE8 B 0x3936DEC
	0x03936DEC CMP W1, 0x1
	0x03936DF0 B.NE 0x3936E04
	0x03936DF4 BL 0x3EB1AD0
	0x03936DF8 LDR X20, [X0]
	0x03936DFC BL 0x3EB1AE0
	0x03936E00 B 0x3936D00
	0x03936E04 MOV X21, X0
	0x03936E08 MOV X20, X31
	0x03936E0C B 0x3936E14
	0x03936E10 MOV X21, X0
	0x03936E14 CBZ X19, 0x3936E70
	0x03936E18 LDR X8, [X19]
	0x03936E1C LDR X1, [X24]
	0x03936E20 LDRH W9, [X8 + 0x12E]
	0x03936E24 CBZ X9, 0x3936E48
	0x03936E28 LDR X10, [X8 + 0xB0]
	0x03936E2C ADD X10, X10, 0x8
	0x03936E30 LDUR X11, [X10 - 0x8]
	0x03936E34 CMP X11, X1
	0x03936E38 B.EQ 0x3936E58
	0x03936E3C SUBS X9, X9, 0x1
	0x03936E40 ADD X10, X10, 0x10
	0x03936E44 B.NE 0x3936E30
	0x03936E48 MOV X0, X19
	0x03936E4C MOV W2, W31
	0x03936E50 BL 0x1C5C788
	0x03936E54 B 0x3936E64
	0x03936E58 LDRSW X9, [X10]
	0x03936E5C ADD X8, X8, X9, 0x4, LSL
	0x03936E60 ADD X0, X8, 0x138
	0x03936E64 LDP X8, X1, [X0]
	0x03936E68 MOV X0, X19
	0x03936E6C BLR X8
	0x03936E70 CBNZ X20, 0x3936E7C
	0x03936E74 MOV X0, X21
	0x03936E78 BL 0x1D2C690
	0x03936E7C MOV X0, X20
	0x03936E80 BL 0x1C16F18
	0x03936E84 BL 0x1990590
	0x03936E88 SUB X31, X31, 0x90
	0x03936E8C STP D15, D14, [X31 + 0x30]
	0x03936E90 STP D13, D12, [X31 + 0x40]
	0x03936E94 STP D11, D10, [X31 + 0x50]
	0x03936E98 STP D9, D8, [X31 + 0x60]
	0x03936E9C STP X30, X21, [X31 + 0x70]
	0x03936EA0 STP X20, X19, [X31 + 0x80]
	0x03936EA4 CBZ X0, 0x393729C
	0x03936EA8 LDR W9, [X0 + 0x18]
	0x03936EAC CMP W1, W9
	0x03936EB0 B.CS 0x3937298
	0x03936EB4 SBFM X8, X1, 0x20, 0x3F
	0x03936EB8 CMP W8, W9
	0x03936EBC B.CS 0x3937298
	0x03936EC0 UBFM X11, X3, 0x20, 0x3F
	0x03936EC4 CMP W4, W2
	0x03936EC8 CSEL X10, X3, X11, EQ
	0x03936ECC CMP W10, W9
	0x03936ED0 B.CS 0x3937298
	0x03936ED4 UBFM X12, X4, 0x20, 0x3F
	0x03936ED8 UBFM X13, X2, 0x20, 0x3F
	0x03936EDC CMP W12, W13
	0x03936EE0 CSEL X11, X11, X3, EQ
	0x03936EE4 CMP W11, W9
	0x03936EE8 B.CS 0x3937298
	0x03936EEC SXTW X9, W1
	0x03936EF0 MOVZ W12, 0xC
	0x03936EF4 MADD X9, X9, X12, X0
	0x03936EF8 MOVZ W12, 0xC
	0x03936EFC SXTW X10, W10
	0x03936F00 MADD X8, X8, X12, X0
	0x03936F04 MOVZ W12, 0xC
	0x03936F08 MADD X10, X10, X12, X0
	0x03936F0C MOV V9.16B, V0.16B
	0x03936F10 LDR V2, [X8 + 0x28]
	0x03936F14 LDR V0, [X10 + 0x20]
	0x03936F18 LDP S3, S1, [X8 + 0x20]
	0x03936F1C SXTW X11, W11
	0x03936F20 MOVZ W12, 0xC
	0x03936F24 STP S2, S0, [X31 + 0x20]
	0x03936F28 LDP S0, S10, [X10 + 0x24]
	0x03936F2C NOP
	0x03936F30 MADD X11, X11, X12, X0
	0x03936F34 ADRP X19, 0xAA2000
	0x03936F38 LDRB W12, [X19 + 0x785]
	0x03936F3C LDP S12, S8, [X9 + 0x20]
	0x03936F40 LDR V11, [X9 + 0x28]
	0x03936F44 STP S0, S1, [X31 + 0x28]
	0x03936F48 LDP S0, S14, [X11 + 0x20]
	0x03936F4C LDR V13, [X11 + 0x28]
	0x03936F50 MOV V15.16B, V3.16B
	0x03936F54 STR S0, [X31 + 0x18]
	0x03936F58 CBNZ W12, 0x3936F74
	0x03936F5C ADRP X0, 0x7BD000
	0x03936F60 LDR X0, [X0 + 0x5A8]
	0x03936F64 BL 0x1C16CF4
	0x03936F68 MOV V3.16B, V15.16B
	0x03936F6C MOVZ W8, 0x1
	0x03936F70 STRB W8, [X19 + 0x785]
	0x03936F74 STR S9, [X31 + 0x14]
	0x03936F78 ADRP X20, 0x7BD000
	0x03936F7C LDR X20, [X20 + 0x5A8]
	0x03936F80 LDR X0, [X20]
	0x03936F84 LDR W8, [X0 + 0xE0]
	0x03936F88 CBNZ W8, 0x3936F94
	0x03936F8C BL 0x1C16DFC
	0x03936F90 MOV V3.16B, V15.16B
	0x03936F94 ADRP X8, 0xFFFFFFFFFD1B4000
	0x03936F98 FMUL S0, S12, S12
	0x03936F9C FMUL S1, S8, S8
	0x03936FA0 LDR V2, [X8 + 0x17C]
	0x03936FA4 FADD S0, S0, S1
	0x03936FA8 FMUL S1, S11, S11
	0x03936FAC FADD S0, S1, S0
	0x03936FB0 FSQRT S0, S0
	0x03936FB4 FCMP S0, S2
	0x03936FB8 STR S2, [X31 + 0x1C]
	0x03936FBC B.LE 0x3936FD4
	0x03936FC0 FDIV S2, S12, S0
	0x03936FC4 FDIV S1, S8, S0
	0x03936FC8 STP S1, S2, [X31 + 0xC]
	0x03936FCC FDIV S0, S11, S0
	0x03936FD0 B 0x3937018
	0x03936FD4 ADRP X21, 0xAA2000
	0x03936FD8 LDRB W8, [X21 + 0x783]
	0x03936FDC CBNZ W8, 0x3936FF8
	0x03936FE0 ADRP X0, 0x7BD000
	0x03936FE4 LDR X0, [X0 + 0x5A0]
	0x03936FE8 BL 0x1C16CF4
	0x03936FEC MOV V3.16B, V15.16B
	0x03936FF0 MOVZ W8, 0x1
	0x03936FF4 STRB W8, [X21 + 0x783]
	0x03936FF8 ADRP X8, 0x7BD000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAAC000
	010 Move W8, [X21+2313]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x819000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move X0, 0x7E8000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0x7BE000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x7E6000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E6000
	030 Move X0, [X0+1984]
	031 Call 0x1C17CF4
	032 Move X0, 0x7BE000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2313], W8
	037 Move X0, [X20]
	038 Compare X0, 0
	039 JumpIfEqual {170}
	040 Move X8, 0x819000
	041 Move X8, [X8+3448]
	042 Move X1, [X8]
	043 Call Dictionary`2<Int32, Int32>.get_Count, X0
	044 Compare X19, 0
	045 JumpIfEqual {170}
	046 Move X10, 0x7E6000
	047 Move X8, [X19]
	048 Move X10, [X10+1976]
	049 Move W21, W0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X19
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X22, 0x7BE000
	069 Move X22, [X22+3584]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, X0
	073 Compare X0, 0
	074 JumpIfEqual {171}
	075 Move X23, 0x7BE000
	076 Move X24, 0x7E6000
	077 Move X25, 0x7E8000
	078 Move X23, [X23+3608]
	079 Move X24, [X24+1984]
	080 Move X25, [X25+2224]
	081 Move X8, [X19]
	082 Move X1, [X23]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {134}
	106 Move X8, [X19]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move W1, W0
	128 Move X0, [X20]
	129 Compare X0, 0
	130 JumpIfEqual {169}
	131 Move X3, [X25]
	132 Move W2, W21
	133 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	134 Move X20, X31
	135 Compare X19, 0
	136 JumpIfEqual {158}
	137 Move X8, [X19]
	138 Move X1, [X22]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X19
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X20, 0
	159 JumpIfNotEqual {172}
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Move X25, [X31+72]
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X0, X20
	173 Call 0x1C17F18
	174 Move X21, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, X21
	177 Call 0x3EB2AD0
	178 Move X20, [X0]
	179 Call 0x3EB2AE0
	180 Move X20, X31
	181 Move X21, X0
	182 Compare X19, 0
	183 JumpIfEqual {205}
	184 Move X8, [X19]
	185 Move X1, [X22]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X19
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X19
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare X20, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X21
	208 Call 0x1D2D690
	209 Move X0, X20
	210 Call 0x1C17F18
	211 Call 0x1991590

