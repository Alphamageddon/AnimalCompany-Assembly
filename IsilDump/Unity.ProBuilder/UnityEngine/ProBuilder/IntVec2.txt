Type: UnityEngine.ProBuilder.IntVec2

Method: System.Single get_x()

Disassembly:
	0x03907060 CBNZ W8, 0x3907068
	0x03907064 BL 0x1C16DFC

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Single get_y()

Disassembly:
	0x03907068 MOV X0, X19
	0x0390706C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move V0, [X0+4]
	002 Return V0

Method: System.Void .ctor(UnityEngine.Vector2 vector)

Disassembly:
	0x03907070 MOVZ W1, 0x3
	0x03907074 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Return 

Method: System.String ToString()

Disassembly:
	0x03907078 B 0x3906EB0
	0x0390707C STR X30, [X31 - 0x30]!
	0x03907080 STP X22, X21, [X31 + 0x10]
	0x03907084 STP X20, X19, [X31 + 0x20]
	0x03907088 ADRP X22, 0xADA000
	0x0390708C ADRP X21, 0x846000
	0x03907090 LDRB W8, [X22 + 0x7E9]
	0x03907094 LDR X21, [X21 + 0xAD0]
	0x03907098 MOV X19, X1
	0x0390709C MOV X20, X0
	0x039070A0 TBNZ X8, 0x0, 0x39070B8
	0x039070A4 ADRP X0, 0x846000
	0x039070A8 LDR X0, [X0 + 0xAD0]
	0x039070AC BL 0x1C16CF4
	0x039070B0 MOVZ W8, 0x1
	0x039070B4 STRB W8, [X22 + 0x7E9]
	0x039070B8 MOV X0, X20
	0x039070BC MOV X1, X19
	0x039070C0 MOV X2, X31
	0x039070C4 BL 0x3227C5C
	0x039070C8 LDR X8, [X21]
	0x039070CC MOV X19, X0
	0x039070D0 LDR W9, [X8 + 0xE0]
	0x039070D4 CBNZ W9, 0x39070E0
	0x039070D8 MOV X0, X8
	0x039070DC BL 0x1C16DFC
	0x039070E0 MOV X0, X19
	0x039070E4 LDP X20, X19, [X31 + 0x20]
	0x039070E8 LDP X22, X21, [X31 + 0x10]
	0x039070EC LDR X30, [X31], #0x30
	0x039070F0 B 0x39070F4
	0x039070F4 STP X30, X21, [X31 - 0x20]!
	0x039070F8 STP X20, X19, [X31 + 0x10]
	0x039070FC ADRP X21, 0xADA000
	0x03907100 ADRP X20, 0x846000
	0x03907104 LDRB W8, [X21 + 0x7EA]
	0x03907108 LDR X20, [X20 + 0xAD0]
	0x0390710C MOV X19, X0
	0x03907110 TBNZ X8, 0x0, 0x3907128
	0x03907114 ADRP X0, 0x846000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xADB000
	007 Move X22, 0x7ED000
	008 Move X21, 0x847000
	009 Move W8, [X20+2008]
	010 Move X22, [X22+2704]
	011 Move X21, [X21+3792]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7ED000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x847000
	021 Move X0, [X0+3792]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2008], W8
	025 Move V0, [X19]
	026 Move X0, [X22]
	027 Add X1, X31, 12
	028 Move [X31+12], S0
	029 Call 0x1C17E04
	030 Move X20, X0
	031 Move V0, [X19+4]
	032 Move X0, [X22]
	033 Add X1, X31, 8
	034 Move [X31+8], S0
	035 Call 0x1C17E04
	036 Move X8, [X21]
	037 Move X2, X0
	038 Move X1, X20
	039 Move X3, X31
	040 Move X0, X8
	041 Call String.Format, X0, X1, X2
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return X0

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.IntVec2 a, UnityEngine.ProBuilder.IntVec2 b)

Disassembly:
	0x03907118 LDR X0, [X0 + 0xAD0]
	0x0390711C BL 0x1C16CF4
	0x03907120 MOVZ W8, 0x1
	0x03907124 STRB W8, [X21 + 0x7EA]
	0x03907128 LDR X0, [X20]
	0x0390712C LDR W8, [X0 + 0xE0]
	0x03907130 CBNZ W8, 0x390713C
	0x03907134 BL 0x1C16DFC
	0x03907138 LDR X0, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], S0
	003 Move [X31+16], S1
	004 Add X0, X31, 8
	005 Move V0, V2
	006 Move V1, V3
	007 Call IntVec2.Equals, X0, X1
	008 And W0, W0, 1
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.IntVec2 a, UnityEngine.ProBuilder.IntVec2 b)

Disassembly:
	0x039071A8 MOVZ W8, 0x1
	0x039071AC STRB W8, [X22 + 0x7EB]
	0x039071B0 MOV X0, X20
	0x039071B4 MOV X1, X19
	0x039071B8 MOV X2, X31
	0x039071BC BL 0x3227C5C
	0x039071C0 LDR X8, [X21]
	0x039071C4 MOV X19, X0
	0x039071C8 LDR W9, [X8 + 0xE0]
	0x039071CC CBNZ W9, 0x39071D8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], S0
	003 Move [X31+16], S1
	004 Add X0, X31, 8
	005 Move V0, V2
	006 Move V1, V3
	007 Call IntVec2.Equals, X0, X1
	008 NotImplemented "Instruction ORN not yet implemented."
	009 And W0, W8, 1
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean Equals(UnityEngine.ProBuilder.IntVec2 p)

Disassembly:
	0x0390713C LDR X8, [X0 + 0xB8]
	0x03907140 LDRB W8, [X8 + 0x8]
	0x03907144 TBNZ X8, 0x1, 0x3907154
	0x03907148 LDP X20, X19, [X31 + 0x10]
	0x0390714C LDP X30, X21, [X31], #0x20
	0x03907150 RET
	0x03907154 LDR W8, [X0 + 0xE0]
	0x03907158 CBNZ W8, 0x3907160
	0x0390715C BL 0x1C16DFC
	0x03907160 MOV X0, X19
	0x03907164 LDP X20, X19, [X31 + 0x10]
	0x03907168 MOVZ W1, 0x2
	0x0390716C LDP X30, X21, [X31], #0x20
	0x03907170 B 0x3906EB0
	0x03907174 STR X30, [X31 - 0x30]!
	0x03907178 STP X22, X21, [X31 + 0x10]
	0x0390717C STP X20, X19, [X31 + 0x20]
	0x03907180 ADRP X22, 0xADA000
	0x03907184 ADRP X21, 0x846000
	0x03907188 LDRB W8, [X22 + 0x7EB]
	0x0390718C LDR X21, [X21 + 0xAD0]
	0x03907190 MOV X19, X1
	0x03907194 MOV X20, X0
	0x03907198 TBNZ X8, 0x0, 0x39071B0
	0x0390719C ADRP X0, 0x846000
	0x039071A0 LDR X0, [X0 + 0xAD0]
	0x039071A4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V1
	007 Move V1, [X0]
	008 Move V9, V0
	009 Move X19, X0
	010 Move V0, V1
	011 Call IntVec2.round, V0
	012 Move V0, V9
	013 Move W20, W0
	014 Call IntVec2.round, V0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move V0, [X19+4]
	017 Call IntVec2.round, V0
	018 Move V0, V8
	019 Move W19, W0
	020 Call IntVec2.round, V0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move W0, W31
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move D9, [X31+48]
	028 Move D8, [X31+56]
	029 Return X0

Method: System.Boolean Equals(UnityEngine.Vector2 p)

Disassembly:
	0x03907238 ADD X10, X10, X11, 0x2, LSL
	0x0390723C BR X10
	0x03907240 ADRP X8, 0x7EC000
	0x03907244 LDR X8, [X8 + 0xA28]
	0x03907248 LDR X0, [X8]
	0x0390724C LDR W8, [X0 + 0xE0]
	0x03907250 CBNZ W8, 0x3907258
	0x03907254 BL 0x1C16DFC
	0x03907258 MOV X0, X19
	0x0390725C LDP X20, X19, [X31 + 0x10]
	0x03907260 MOV X1, X31
	0x03907264 LDP X30, X21, [X31], #0x20
	0x03907268 B 0x3C0649C
	0x0390726C ADRP X8, 0x7EC000
	0x03907270 LDR X8, [X8 + 0xA28]
	0x03907274 LDR X0, [X8]
	0x03907278 LDR W8, [X0 + 0xE0]
	0x0390727C CBNZ W8, 0x3907284
	0x03907280 BL 0x1C16DFC
	0x03907284 MOV X0, X19
	0x03907288 LDP X20, X19, [X31 + 0x10]
	0x0390728C MOV X1, X31
	0x03907290 LDP X30, X21, [X31], #0x20
	0x03907294 B 0x3C06048
	0x03907298 LDP X20, X19, [X31 + 0x10]
	0x0390729C LDP X30, X21, [X31], #0x20
	0x039072A0 RET

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V1
	007 Move V1, [X0]
	008 Move V9, V0
	009 Move X19, X0
	010 Move V0, V1
	011 Call IntVec2.round, V0
	012 Move V0, V9
	013 Move W20, W0
	014 Call IntVec2.round, V0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move V0, [X19+4]
	017 Call IntVec2.round, V0
	018 Move V0, V8
	019 Move W19, W0
	020 Call IntVec2.round, V0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 Move W0, W31
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move D9, [X31+48]
	028 Move D8, [X31+56]
	029 Return X0

Method: System.Boolean Equals(System.Object b)

Disassembly:
	0x039072A4 ADRP X8, 0x7EC000
	0x039072A8 LDR X8, [X8 + 0xA28]
	0x039072AC LDR X0, [X8]
	0x039072B0 LDR W8, [X0 + 0xE0]
	0x039072B4 CBNZ W8, 0x39072BC
	0x039072B8 BL 0x1C16DFC
	0x039072BC MOV X0, X19
	0x039072C0 LDP X20, X19, [X31 + 0x10]
	0x039072C4 MOV X1, X31
	0x039072C8 LDP X30, X21, [X31], #0x20
	0x039072CC B 0x3C06A04
	0x039072D0 SUB X31, X31, 0x40
	0x039072D4 STP X30, X23, [X31 + 0x10]
	0x039072D8 STP X22, X21, [X31 + 0x20]
	0x039072DC STP X20, X19, [X31 + 0x30]
	0x039072E0 ADRP X21, 0xADA000
	0x039072E4 LDRB W8, [X21 + 0x7EE]
	0x039072E8 MOV X20, X1
	0x039072EC MOV X19, X0
	0x039072F0 TBNZ X8, 0x0, 0x390732C
	0x039072F4 ADRP X0, 0x7EC000
	0x039072F8 LDR X0, [X0 + 0xE00]
	0x039072FC BL 0x1C16CF4
	0x03907300 ADRP X0, 0x846000
	0x03907304 LDR X0, [X0 + 0xAD0]
	0x03907308 BL 0x1C16CF4
	0x0390730C ADRP X0, 0x813000
	0x03907310 LDR X0, [X0 + 0x1D0]
	0x03907314 BL 0x1C16CF4
	0x03907318 ADRP X0, 0x846000
	0x0390731C LDR X0, [X0 + 0xF10]
	0x03907320 BL 0x1C16CF4
	0x03907324 MOVZ W8, 0x1
	0x03907328 STRB W8, [X21 + 0x7EE]
	0x0390732C MOV X0, X20
	0x03907330 MOV X1, X31
	0x03907334 BL 0x32277A8
	0x03907338 TBNZ X0, 0x0, 0x390751C
	0x0390733C ADRP X21, 0x813000
	0x03907340 LDR X21, [X21 + 0x1D0]
	0x03907344 LDR X0, [X21]
	0x03907348 LDR W8, [X0 + 0xE0]
	0x0390734C CBNZ W8, 0x3907354
	0x03907350 BL 0x1C16DFC
	0x03907354 MOV X0, X20
	0x03907358 MOV X1, X31
	0x0390735C BL 0x32EE2E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move W8, [X21+2009]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x847000
	014 Move X0, [X0+3800]
	015 Call 0x1C17CF4
	016 Move X0, 0x7F5000
	017 Move X0, [X0+3848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2009], W8
	021 Compare X20, 0
	022 JumpIfEqual {44}
	023 Move X8, 0x847000
	024 Move X8, [X8+3800]
	025 Move X9, [X8]
	026 Move X8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Call 0x1C17E08
	030 Move S0, [X0]
	031 Move S1, [X0+4]
	032 Move X0, X19
	033 Call IntVec2.Equals, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {39}
	038 Move W0, 1
	039 Move X8, [X20]
	040 Move X9, 0x7F5000
	041 Move X9, [X9+3848]
	042 Move X9, [X9]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, W31
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Move X0, X20
	051 Call 0x1C17E08
	052 Move S0, [X0]
	053 Move S1, [X0+4]
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call IntVec2.Equals, X0, X1
	060 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03907360 MOV X1, X31
	0x03907364 MOV X20, X0
	0x03907368 BL 0x32277A8

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move X0, X31
	004 Call VectorHash.GetHashCode, X0
	005 Return X0

Method: System.Int32 round(System.Single v)

Disassembly:
	0x039071D0 MOV X0, X8
	0x039071D4 BL 0x1C16DFC
	0x039071D8 MOV X0, X19
	0x039071DC LDP X20, X19, [X31 + 0x20]
	0x039071E0 LDP X22, X21, [X31 + 0x10]
	0x039071E4 LDR X30, [X31], #0x30
	0x039071E8 B 0x38FAC88
	0x039071EC STP X30, X21, [X31 - 0x20]!
	0x039071F0 STP X20, X19, [X31 + 0x10]
	0x039071F4 ADRP X21, 0xADA000
	0x039071F8 LDRB W8, [X21 + 0x7F0]
	0x039071FC MOV W20, W1
	0x03907200 MOV X19, X0
	0x03907204 TBNZ X8, 0x0, 0x390721C
	0x03907208 ADRP X0, 0x7EC000
	0x0390720C LDR X0, [X0 + 0xA28]
	0x03907210 BL 0x1C16CF4
	0x03907214 MOVZ W8, 0x1
	0x03907218 STRB W8, [X21 + 0x7F0]
	0x0390721C CMP W20, 0x3
	0x03907220 B.HI 0x390726C
	0x03907224 ADRP X9, 0xFFFFFFFFFD290000
	0x03907228 MOV W8, W20
	0x0390722C ADD X9, X9, 0xA2C
	0x03907230 ADR X10, 0x10
	0x03907234 LDRB W11, [X9, X8, LSL]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xADB000
	006 Move X20, 0x7F6000
	007 Move W8, [X19+2010]
	008 Move X20, [X20+2536]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7F6000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2010], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W8, 0x447A0000
	028 Move S0, W8
	029 Multiply S0, S8, S0
	030 Move X0, X31
	031 Move V8, [X31+32]
	032 Call Convert.ToInt32, V0
	033 Return X0

Method: UnityEngine.Vector2 op_Implicit(UnityEngine.ProBuilder.IntVec2 p)

Disassembly:
	0x0390736C TBZ X0, 0x0, 0x39073C4

ISIL:
	001 Return X0

Method: UnityEngine.ProBuilder.IntVec2 op_Implicit(UnityEngine.Vector2 p)

Disassembly:
	0x03907370 ADRP X8, 0x846000

ISIL:
	001 Return X0

