Type: UnityEngine.ProBuilder.Transform2D

Method: System.Void .ctor(UnityEngine.Vector2 position, System.Single rotation, UnityEngine.Vector2 scale)

Disassembly:
	0x0393AB4C LDR X0, [X21]
	0x0393AB50 MOVZ W1, 0x4
	0x0393AB54 BL 0x1C16D6C
	0x0393AB58 MOV X19, X0
	0x0393AB5C LDR V0, [X20 + 0x10]
	0x0393AB60 LDR X0, [X22]
	0x0393AB64 ADD X1, X31, 0x1C
	0x0393AB68 STR S0, [X31 + 0x1C]
	0x0393AB6C BL 0x1C16E04
	0x0393AB70 CBZ X19, 0x393AC98
	0x0393AB74 MOV X21, X0
	0x0393AB78 CBZ X0, 0x393AB90
	0x0393AB7C LDR X8, [X19]
	0x0393AB80 MOV X0, X21
	0x0393AB84 LDR X1, [X8 + 0x40]
	0x0393AB88 BL 0x1C16E00
	0x0393AB8C CBZ X0, 0x393AC8C
	0x0393AB90 LDR W8, [X19 + 0x18]
	0x0393AB94 CBZ W8, 0x393AC88
	0x0393AB98 STR X21, [X19 + 0x20]

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X19
	008 Move X1, X31
	009 Move V8, V4
	010 Move V9, V3
	011 Move V10, V2
	012 Move V11, V1
	013 Move V12, V0
	014 Move X19, X0
	015 Call Object..ctor, X0
	016 Move [X19+16], S12
	017 Move [X19+24], S11
	018 Move [X19+24], S10
	019 Move [X19+32], S9
	020 Move [X19+32], S8
	021 Move X30, [X31+48]
	022 Move X19, [X31+56]
	023 Move D9, [X31+32]
	024 Move D8, [X31+40]
	025 Move D11, [X31+16]
	026 Move D10, [X31+24]
	027 Move V12, [X31+64]
	028 Return 

Method: UnityEngine.Vector2 TransformPoint(UnityEngine.Vector2 p)

Disassembly:
	0x0393AB9C LDR V0, [X20 + 0x14]
	0x0393ABA0 LDR X0, [X22]
	0x0393ABA4 ADD X1, X31, 0x18
	0x0393ABA8 STR S0, [X31 + 0x18]
	0x0393ABAC BL 0x1C16E04
	0x0393ABB0 MOV X21, X0
	0x0393ABB4 CBZ X0, 0x393ABCC
	0x0393ABB8 LDR X8, [X19]
	0x0393ABBC MOV X0, X21
	0x0393ABC0 LDR X1, [X8 + 0x40]
	0x0393ABC4 BL 0x1C16E00
	0x0393ABC8 CBZ X0, 0x393AC8C
	0x0393ABCC LDR W8, [X19 + 0x18]
	0x0393ABD0 CMP W8, 0x1
	0x0393ABD4 B.LS 0x393AC88
	0x0393ABD8 STR X21, [X19 + 0x28]
	0x0393ABDC LDR V0, [X20 + 0x18]
	0x0393ABE0 LDR X0, [X22]
	0x0393ABE4 ADD X1, X31, 0xC
	0x0393ABE8 STR S0, [X31 + 0xC]
	0x0393ABEC BL 0x1C16E04
	0x0393ABF0 MOV X21, X0
	0x0393ABF4 CBZ X0, 0x393AC0C
	0x0393ABF8 LDR X8, [X19]
	0x0393ABFC MOV X0, X21

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move S2, [X0+16]
	006 Move S3, [X0+20]
	007 Move V4, [X0+24]
	008 Move X19, X0
	009 Move X0, X31
	010 Add S8, S0, S2
	011 Add S9, S1, S3
	012 Move V0, V8
	013 Move V1, V9
	014 Move V2, V8
	015 Move V3, V9
	016 Call Math.RotateAroundPoint, X0, X1, V0
	017 Move S4, [X19+28]
	018 Move S5, [X19+32]
	019 Move V0, V8
	020 Move V1, V9
	021 Move V2, V8
	022 Move V3, V9
	023 Move X0, X31
	024 Call Math.ScaleAroundPoint, X0, X1, X2
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Move V0, V8
	028 Move V1, V9
	029 Move D9, [X31+32]
	030 Move D8, [X31+40]
	031 Return X0

Method: System.String ToString()

Disassembly:
	0x0393AC00 LDR X1, [X8 + 0x40]
	0x0393AC04 BL 0x1C16E00
	0x0393AC08 CBZ X0, 0x393AC8C
	0x0393AC0C LDR W8, [X19 + 0x18]
	0x0393AC10 CMP W8, 0x2
	0x0393AC14 B.LS 0x393AC88
	0x0393AC18 STR X21, [X19 + 0x30]
	0x0393AC1C LDR V0, [X20 + 0x1C]
	0x0393AC20 LDR X0, [X22]
	0x0393AC24 ADD X1, X31, 0x8
	0x0393AC28 STR S0, [X31 + 0x8]
	0x0393AC2C BL 0x1C16E04
	0x0393AC30 MOV X20, X0
	0x0393AC34 CBZ X0, 0x393AC4C
	0x0393AC38 LDR X8, [X19]
	0x0393AC3C MOV X0, X20
	0x0393AC40 LDR X1, [X8 + 0x40]
	0x0393AC44 BL 0x1C16E00
	0x0393AC48 CBZ X0, 0x393AC8C
	0x0393AC4C LDR W8, [X19 + 0x18]
	0x0393AC50 CMP W8, 0x3
	0x0393AC54 B.LS 0x393AC88
	0x0393AC58 ADRP X8, 0x814000
	0x0393AC5C LDR X8, [X8 + 0xEB0]
	0x0393AC60 STR X20, [X19 + 0x38]
	0x0393AC64 MOV X1, X19
	0x0393AC68 MOV X2, X31
	0x0393AC6C LDR X0, [X8]
	0x0393AC70 BL 0x3227C5C
	0x0393AC74 LDP X20, X19, [X31 + 0x30]
	0x0393AC78 LDP X22, X21, [X31 + 0x20]
	0x0393AC7C LDR X30, [X31 + 0x10]
	0x0393AC80 ADD X31, X31, 0x40
	0x0393AC84 RET
	0x0393AC88 BL 0x1C16F28
	0x0393AC8C BL 0x1C16F44
	0x0393AC90 MOV X1, X31
	0x0393AC94 BL 0x1C16DEC
	0x0393AC98 BL 0x1C16F20
	0x0393AC9C STP X30, X23, [X31 - 0x30]!
	0x0393ACA0 STP X22, X21, [X31 + 0x10]
	0x0393ACA4 STP X20, X19, [X31 + 0x20]
	0x0393ACA8 ADRP X22, 0xAA7000
	0x0393ACAC LDRB W8, [X22 + 0x92A]
	0x0393ACB0 MOV W21, W2
	0x0393ACB4 MOV X19, X1
	0x0393ACB8 MOV X20, X0
	0x0393ACBC TBNZ X8, 0x0, 0x393AD04
	0x0393ACC0 ADRP X0, 0x814000
	0x0393ACC4 LDR X0, [X0 + 0xEB8]
	0x0393ACC8 BL 0x1C16CF4
	0x0393ACCC ADRP X0, 0x814000
	0x0393ACD0 LDR X0, [X0 + 0xEC0]
	0x0393ACD4 BL 0x1C16CF4
	0x0393ACD8 ADRP X0, 0x814000
	0x0393ACDC LDR X0, [X0 + 0xEC8]
	0x0393ACE0 BL 0x1C16CF4
	0x0393ACE4 ADRP X0, 0x814000
	0x0393ACE8 LDR X0, [X0 + 0xED0]
	0x0393ACEC BL 0x1C16CF4
	0x0393ACF0 ADRP X0, 0x814000
	0x0393ACF4 LDR X0, [X0 + 0x590]
	0x0393ACF8 BL 0x1C16CF4
	0x0393ACFC MOVZ W8, 0x1
	0x0393AD00 STRB W8, [X22 + 0x92A]
	0x0393AD04 TBZ X21, 0x0, 0x393ADD0
	0x0393AD08 ADRP X23, 0x814000
	0x0393AD0C LDR X23, [X23 + 0xED0]
	0x0393AD10 LDR X0, [X23]
	0x0393AD14 LDR W8, [X0 + 0xE0]
	0x0393AD18 CBNZ W8, 0x393AD24
	0x0393AD1C BL 0x1C16DFC
	0x0393AD20 LDR X0, [X23]
	0x0393AD24 LDR X8, [X0 + 0xB8]
	0x0393AD28 LDR X21, [X8 + 0x8]
	0x0393AD2C CBNZ X21, 0x393AD80
	0x0393AD30 LDR W8, [X0 + 0xE0]
	0x0393AD34 CBNZ W8, 0x393AD40
	0x0393AD38 BL 0x1C16DFC
	0x0393AD3C LDR X0, [X23]
	0x0393AD40 ADRP X9, 0x814000
	0x0393AD44 LDR X8, [X0 + 0xB8]
	0x0393AD48 LDR X9, [X9 + 0xEC0]
	0x0393AD4C LDR X22, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA8000
	007 Move X21, 0x7BA000
	008 Move W8, [X20+2333]
	009 Move X21, [X21+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x7BA000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x815000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0x815000
	022 Move X0, [X0+3680]
	023 Call 0x1C17CF4
	024 Move X0, 0x815000
	025 Move X0, [X0+3688]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2333], W8
	029 Move X0, [X21]
	030 Move W1, 6
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {88}
	034 Move W8, [X0+24]
	035 Move X20, X0
	036 Compare W8, 0
	037 JumpIfEqual {87}
	038 Move X8, 0x815000
	039 Move X8, [X8+3672]
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Move X2, X31
	043 Move X8, [X8]
	044 Move X3, X31
	045 Move [X20+32], X8
	046 Move X8, [X19+16]
	047 Move [X31+8], X8
	048 Call 0x25F44C4
	049 Move W8, [X20+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X20+40], X0
	053 Move X8, 0x815000
	054 Move X8, [X8+3680]
	055 Add X0, X19, 24
	056 Move X1, X31
	057 Move X8, [X8]
	058 Move [X20+48], X8
	059 Call Single.ToString, X0
	060 Move W8, [X20+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X20+56], X0
	064 Move X8, 0x815000
	065 Move X8, [X8+3688]
	066 Add X0, X31, 8
	067 Move X1, X31
	068 Move X2, X31
	069 Move X8, [X8]
	070 Move X3, X31
	071 Move [X20+64], X8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move [X31+8], X8
	074 Call 0x25F44C4
	075 Move W8, [X20+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X20+72], X0
	078 Move X0, X20
	079 Move X1, X31
	080 Call String.Concat, X0
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move X21, [X31+24]
	085 Add X31, X31, 48
	086 Return X0
	087 Call 0x1C17F28
	088 Call 0x1C17F20

