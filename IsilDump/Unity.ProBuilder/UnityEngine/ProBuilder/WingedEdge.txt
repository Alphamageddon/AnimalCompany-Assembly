Type: UnityEngine.ProBuilder.WingedEdge

Method: UnityEngine.ProBuilder.EdgeLookup get_edge()

Disassembly:
	0x03942C1C LDR X0, [X0 + 0x50]
	0x03942C20 BL 0x1C16CF4
	0x03942C24 ADRP X0, 0x80D000

ISIL:
	001 Move X8, [X0+16]
	002 Move X1, [X0+24]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_edge(UnityEngine.ProBuilder.EdgeLookup value)

Disassembly:
	0x03942C28 LDR X0, [X0 + 0x58]
	0x03942C2C BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X1
	002 Move [X0+24], X2
	003 Return 

Method: UnityEngine.ProBuilder.Face get_face()

Disassembly:
	0x03942C30 ADRP X0, 0x80D000
	0x03942C34 LDR X0, [X0 + 0x60]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_face(UnityEngine.ProBuilder.Face value)

Disassembly:
	0x03942C38 BL 0x1C16CF4
	0x03942C3C ADRP X0, 0x80D000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.ProBuilder.WingedEdge get_next()

Disassembly:
	0x03942C40 LDR X0, [X0 + 0x68]
	0x03942C44 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_next(UnityEngine.ProBuilder.WingedEdge value)

Disassembly:
	0x03942C48 ADRP X0, 0x80D000
	0x03942C4C LDR X0, [X0 + 0x70]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: UnityEngine.ProBuilder.WingedEdge get_previous()

Disassembly:
	0x03942C50 BL 0x1C16CF4
	0x03942C54 ADRP X0, 0x80D000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_previous(UnityEngine.ProBuilder.WingedEdge value)

Disassembly:
	0x03942C58 LDR X0, [X0 + 0x78]
	0x03942C5C BL 0x1C16CF4

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.ProBuilder.WingedEdge get_opposite()

Disassembly:
	0x03942C60 ADRP X0, 0x7B8000
	0x03942C64 LDR X0, [X0 + 0x850]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_opposite(UnityEngine.ProBuilder.WingedEdge value)

Disassembly:
	0x03942C68 BL 0x1C16CF4
	0x03942C6C ADRP X0, 0x80D000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03942C70 LDR X0, [X0 + 0x80]
	0x03942C74 BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean Equals(UnityEngine.ProBuilder.WingedEdge other)

Disassembly:
	0x03942C78 ADRP X0, 0x80C000
	0x03942C7C LDR X0, [X0 + 0xFE0]
	0x03942C80 BL 0x1C16CF4
	0x03942C84 ADRP X0, 0x80D000
	0x03942C88 LDR X0, [X0 + 0x88]
	0x03942C8C BL 0x1C16CF4
	0x03942C90 ADRP X0, 0x80D000
	0x03942C94 LDR X0, [X0 + 0x90]
	0x03942C98 BL 0x1C16CF4
	0x03942C9C ADRP X0, 0x80D000
	0x03942CA0 LDR X0, [X0 + 0x98]
	0x03942CA4 BL 0x1C16CF4
	0x03942CA8 ADRP X0, 0x80D000
	0x03942CAC LDR X0, [X0 + 0x48]
	0x03942CB0 BL 0x1C16CF4
	0x03942CB4 ADRP X0, 0x80D000
	0x03942CB8 LDR X0, [X0 + 0xA0]
	0x03942CBC BL 0x1C16CF4
	0x03942CC0 ADRP X0, 0x80C000
	0x03942CC4 LDR X0, [X0 + 0xB08]
	0x03942CC8 BL 0x1C16CF4
	0x03942CCC MOVZ W8, 0x1
	0x03942CD0 STRB W8, [X19 + 0x963]
	0x03942CD4 LDR X0, [X22]
	0x03942CD8 BL 0x1C16F10
	0x03942CDC MOV X1, X31
	0x03942CE0 MOV X19, X0
	0x03942CE4 BL 0x33BDD8C
	0x03942CE8 CBZ X19, 0x3942ED0
	0x03942CEC ADRP X8, 0x80D000
	0x03942CF0 LDR X8, [X8 + 0x70]
	0x03942CF4 STR X21, [X19 + 0x10]
	0x03942CF8 ADRP X21, 0x80D000
	0x03942CFC ADRP X22, 0x80D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA0000
	007 Move W8, [X21+2394]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7DA000
	015 Move X0, [X0+1536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2394], W8
	019 Compare X19, 0
	020 JumpIfEqual {35}
	021 Move X8, 0x7DA000
	022 Move X8, [X8+1536]
	023 Move X9, [X20+16]
	024 Move X0, [X8]
	025 Move [X31+8], X9
	026 Move X19, [X19+16]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X0, X31, 8
	032 Move X1, X19
	033 Move X2, X31
	034 Call Edge.Equals, X0, X1
	035 Move W0, W31
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 And W0, W0, 1
	041 Add X31, X31, 48
	042 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03942D00 LDR X0, [X8]
	0x03942D04 ADRP X23, 0x80D000
	0x03942D08 LDR X21, [X21 + 0x98]
	0x03942D0C LDR X22, [X22 + 0x68]
	0x03942D10 LDR X23, [X23 + 0xA0]
	0x03942D14 BL 0x1C16F10
	0x03942D18 LDR X2, [X21]
	0x03942D1C MOV X1, X19
	0x03942D20 MOV X3, X31
	0x03942D24 MOV X21, X0
	0x03942D28 BL 0x2D2F428
	0x03942D2C LDR X2, [X22]
	0x03942D30 MOV X0, X20
	0x03942D34 MOV X1, X21
	0x03942D38 BL 0x21DA490
	0x03942D3C LDR X8, [X23]
	0x03942D40 MOV X20, X0
	0x03942D44 LDR W9, [X8 + 0xE0]
	0x03942D48 CBNZ W9, 0x3942D58
	0x03942D4C MOV X0, X8
	0x03942D50 BL 0x1C16DFC
	0x03942D54 LDR X8, [X23]
	0x03942D58 LDR X9, [X8 + 0xB8]
	0x03942D5C ADRP X25, 0x80D000
	0x03942D60 ADRP X24, 0x80D000
	0x03942D64 LDR X21, [X9 + 0x8]
	0x03942D68 LDR X25, [X25 + 0x58]
	0x03942D6C LDR X24, [X24 + 0x60]
	0x03942D70 CBNZ X21, 0x3942DC8
	0x03942D74 LDR W9, [X8 + 0xE0]
	0x03942D78 CBNZ W9, 0x3942D88
	0x03942D7C MOV X0, X8
	0x03942D80 BL 0x1C16DFC
	0x03942D84 LDR X8, [X23]
	0x03942D88 ADRP X9, 0x80D000
	0x03942D8C LDR X8, [X8 + 0xB8]
	0x03942D90 LDR X9, [X9 + 0x78]
	0x03942D94 LDR X22, [X8]
	0x03942D98 LDR X0, [X9]
	0x03942D9C BL 0x1C16F10
	0x03942DA0 ADRP X8, 0x80D000
	0x03942DA4 LDR X8, [X8 + 0x88]
	0x03942DA8 MOV X1, X22
	0x03942DAC MOV X3, X31
	0x03942DB0 MOV X21, X0
	0x03942DB4 LDR X2, [X8]
	0x03942DB8 BL 0x2D2FDEC
	0x03942DBC LDR X8, [X23]
	0x03942DC0 LDR X8, [X8 + 0xB8]
	0x03942DC4 STR X21, [X8 + 0x8]
	0x03942DC8 LDR X2, [X25]
	0x03942DCC MOV X0, X20
	0x03942DD0 MOV X1, X21
	0x03942DD4 BL 0x21CE948
	0x03942DD8 LDR X1, [X24]
	0x03942DDC BL 0x21D770C
	0x03942DE0 CBZ X0, 0x3942ED0
	0x03942DE4 LDR X8, [X19 + 0x10]
	0x03942DE8 CBZ X8, 0x3942ED0
	0x03942DEC LDR W9, [X0 + 0x18]
	0x03942DF0 LDR W8, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA0000
	007 Move W8, [X21+2395]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x7DA000
	015 Move X0, [X0+1536]
	016 Call 0x1C17CF4
	017 Move X0, 0x80D000
	018 Move X0, [X0+2824]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2395], W8
	022 Compare X19, 0
	023 JumpIfEqual {64}
	024 Move X8, 0x80D000
	025 Move X8, [X8+2824]
	026 Move X0, [X19]
	027 Move X8, [X8]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X20
	030 Move X1, X19
	031 Call WingedEdge.Equals, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {63}
	036 Move X0, [X19]
	037 Move X21, 0x7DA000
	038 Move X21, [X21+1536]
	039 Move X8, [X21]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X20+16]
	042 Move [X31+8], X8
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfEqual {47}
	046 Move X1, X0
	047 Call 0x1C17DFC
	048 Move X1, [X21]
	049 Move X0, [X19]
	050 Move X8, [X0+64]
	051 Move X9, [X1+64]
	052 Move X0, X19
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Call 0x1C17E08
	055 Move X1, [X0]
	056 Add X0, X31, 8
	057 Move X2, X31
	058 Call Edge.Equals, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {64}
	063 Move W0, 1
	064 Move W0, W31
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return X0
	071 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03942DF4 MOV X20, X0
	0x03942DF8 CMP W9, W8
	0x03942DFC B.NE 0x3942EB8
	0x03942E00 ADRP X8, 0x80C000
	0x03942E04 LDR X8, [X8 + 0xB08]
	0x03942E08 LDR X0, [X8]
	0x03942E0C LDR W8, [X0 + 0xE0]
	0x03942E10 CBNZ W8, 0x3942E18
	0x03942E14 BL 0x1C16DFC
	0x03942E18 MOV X0, X20
	0x03942E1C BL 0x394263C
	0x03942E20 LDR X0, [X23]
	0x03942E24 LDR W8, [X0 + 0xE0]
	0x03942E28 CBNZ W8, 0x3942E34
	0x03942E2C BL 0x1C16DFC
	0x03942E30 LDR X0, [X23]
	0x03942E34 LDR X8, [X0 + 0xB8]
	0x03942E38 LDR X19, [X8 + 0x10]
	0x03942E3C CBNZ X19, 0x3942E90
	0x03942E40 LDR W8, [X0 + 0xE0]
	0x03942E44 CBNZ W8, 0x3942E50
	0x03942E48 BL 0x1C16DFC
	0x03942E4C LDR X0, [X23]
	0x03942E50 ADRP X9, 0x80D000
	0x03942E54 LDR X8, [X0 + 0xB8]
	0x03942E58 LDR X9, [X9 + 0x50]
	0x03942E5C LDR X21, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA0000
	007 Move X20, 0x7DA000
	008 Move W8, [X21+2396]
	009 Move X20, [X20+1536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7DA000
	016 Move X0, [X0+1536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2396], W8
	020 Move X8, [X19+16]
	021 Move X0, [X20]
	022 Move [X31+8], X8
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Call Edge.GetHashCode, X0
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0

Method: System.Int32 Count()

Disassembly:
	0x03942E60 LDR X0, [X9]
	0x03942E64 BL 0x1C16F10
	0x03942E68 ADRP X8, 0x80D000
	0x03942E6C LDR X8, [X8 + 0x90]
	0x03942E70 MOV X1, X21
	0x03942E74 MOV X3, X31
	0x03942E78 MOV X19, X0
	0x03942E7C LDR X2, [X8]
	0x03942E80 BL 0x29A7BA0
	0x03942E84 LDR X8, [X23]
	0x03942E88 LDR X8, [X8 + 0xB8]
	0x03942E8C STR X19, [X8 + 0x10]
	0x03942E90 ADRP X8, 0x80D000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, W31
	003 Move X9, X0
	004 Compare X9, 0
	005 JumpIfEqual {14}
	006 Move X9, [X9+40]
	007 Add W8, W8, 1
	008 Compare X9, 0
	009 JumpIfEqual {11}
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, W8
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03942E94 LDR X8, [X8 + 0x80]
	0x03942E98 MOV X0, X20
	0x03942E9C MOV X1, X19
	0x03942EA0 LDP X20, X19, [X31 + 0x30]
	0x03942EA4 LDR X2, [X8]
	0x03942EA8 LDP X22, X21, [X31 + 0x20]
	0x03942EAC LDP X24, X23, [X31 + 0x10]
	0x03942EB0 LDP X30, X25, [X31], #0x40
	0x03942EB4 B 0x2130830
	0x03942EB8 LDP X20, X19, [X31 + 0x30]
	0x03942EBC LDP X22, X21, [X31 + 0x20]
	0x03942EC0 LDP X24, X23, [X31 + 0x10]
	0x03942EC4 MOV X0, X31
	0x03942EC8 LDP X30, X25, [X31], #0x40
	0x03942ECC RET
	0x03942ED0 BL 0x1C16F20
	0x03942ED4 MOV X1, X31
	0x03942ED8 B 0x33BDD8C
	0x03942EDC STR X30, [X31 - 0x30]!
	0x03942EE0 STP X22, X21, [X31 + 0x10]
	0x03942EE4 STP X20, X19, [X31 + 0x20]
	0x03942EE8 ADRP X21, 0xA9F000
	0x03942EEC ADRP X22, 0x7B1000
	0x03942EF0 LDRB W8, [X21 + 0x964]
	0x03942EF4 LDR X22, [X22 + 0x598]
	0x03942EF8 MOV W20, W1
	0x03942EFC MOV X19, X0
	0x03942F00 TBNZ X8, 0x0, 0x3942F24
	0x03942F04 ADRP X0, 0x7B1000
	0x03942F08 LDR X0, [X0 + 0x598]
	0x03942F0C BL 0x1C16CF4
	0x03942F10 ADRP X0, 0x80C000
	0x03942F14 LDR X0, [X0 + 0xB08]
	0x03942F18 BL 0x1C16CF4
	0x03942F1C MOVZ W8, 0x1
	0x03942F20 STRB W8, [X21 + 0x964]
	0x03942F24 LDR X0, [X22]
	0x03942F28 LDR W8, [X0 + 0xE0]
	0x03942F2C CBNZ W8, 0x3942F34
	0x03942F30 BL 0x1C16DFC
	0x03942F34 MOV X0, X19
	0x03942F38 MOV X1, X31
	0x03942F3C MOV X2, X31
	0x03942F40 BL 0x3C3883C
	0x03942F44 TBNZ X0, 0x0, 0x3942F84
	0x03942F48 CBZ X19, 0x3942FCC
	0x03942F4C ADRP X8, 0x80C000
	0x03942F50 LDR X8, [X8 + 0xB08]
	0x03942F54 LDR X21, [X19 + 0x28]
	0x03942F58 LDR X0, [X8]
	0x03942F5C LDR W8, [X0 + 0xE0]
	0x03942F60 CBNZ W8, 0x3942F68
	0x03942F64 BL 0x1C16DFC
	0x03942F68 AND W2, W20, 0x1
	0x03942F6C MOV X0, X19
	0x03942F70 MOV X1, X21
	0x03942F74 LDP X20, X19, [X31 + 0x20]
	0x03942F78 LDP X22, X21, [X31 + 0x10]
	0x03942F7C LDR X30, [X31], #0x30
	0x03942F80 B 0x3942FD0
	0x03942F84 ADRP X0, 0x7B6000
	0x03942F88 LDR X0, [X0 + 0x528]
	0x03942F8C BL 0x1C16D08
	0x03942F90 BL 0x1C16F10
	0x03942F94 MOV X19, X0
	0x03942F98 ADRP X0, 0x80B000
	0x03942F9C LDR X0, [X0 + 0xE90]
	0x03942FA0 BL 0x1C16D08
	0x03942FA4 MOV X1, X0
	0x03942FA8 MOV X0, X19
	0x03942FAC MOV X2, X31
	0x03942FB0 BL 0x330E100
	0x03942FB4 ADRP X0, 0x80D000
	0x03942FB8 LDR X0, [X0 + 0xA8]
	0x03942FBC BL 0x1C16D08
	0x03942FC0 MOV X1, X0
	0x03942FC4 MOV X0, X19
	0x03942FC8 BL 0x1C16DEC
	0x03942FCC BL 0x1C16F20
	0x03942FD0 SUB X31, X31, 0xA0
	0x03942FD4 STP X29, X30, [X31 + 0x40]
	0x03942FD8 STP X28, X27, [X31 + 0x50]
	0x03942FDC STP X26, X25, [X31 + 0x60]
	0x03942FE0 STP X24, X23, [X31 + 0x70]
	0x03942FE4 STP X22, X21, [X31 + 0x80]
	0x03942FE8 STP X20, X19, [X31 + 0x90]
	0x03942FEC STR W2, [X31 + 0x14]
	0x03942FF0 ADRP X21, 0xA9F000
	0x03942FF4 ADRP X20, 0x7B1000
	0x03942FF8 LDRB W8, [X21 + 0x965]
	0x03942FFC LDR X20, [X20 + 0x598]
	0x03943000 MOV X24, X1
	0x03943004 MOV X19, X0
	0x03943008 TBNZ X8, 0x0, 0x39430C8
	0x0394300C ADRP X0, 0x80C000
	0x03943010 LDR X0, [X0 + 0xB0]
	0x03943014 BL 0x1C16CF4
	0x03943018 ADRP X0, 0x80C000
	0x0394301C LDR X0, [X0 + 0xB8]
	0x03943020 BL 0x1C16CF4
	0x03943024 ADRP X0, 0x80C000
	0x03943028 LDR X0, [X0 + 0xC0]
	0x0394302C BL 0x1C16CF4
	0x03943030 ADRP X0, 0x80A000
	0x03943034 LDR X0, [X0 + 0xC80]
	0x03943038 BL 0x1C16CF4
	0x0394303C ADRP X0, 0x7B0000
	0x03943040 LDR X0, [X0 + 0xE00]
	0x03943044 BL 0x1C16CF4
	0x03943048 ADRP X0, 0x80A000
	0x0394304C LDR X0, [X0 + 0xDB0]
	0x03943050 BL 0x1C16CF4
	0x03943054 ADRP X0, 0x80A000
	0x03943058 LDR X0, [X0 + 0xDB8]
	0x0394305C BL 0x1C16CF4
	0x03943060 ADRP X0, 0x7B0000
	0x03943064 LDR X0, [X0 + 0xE18]
	0x03943068 BL 0x1C16CF4
	0x0394306C ADRP X0, 0x80C000
	0x03943070 LDR X0, [X0 + 0x20]
	0x03943074 BL 0x1C16CF4
	0x03943078 ADRP X0, 0x80C000
	0x0394307C LDR X0, [X0 + 0x28]
	0x03943080 BL 0x1C16CF4
	0x03943084 ADRP X0, 0x80B000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xAA0000
	008 Move X22, 0x7B2000
	009 Move X20, 0x7DA000
	010 Move W8, [X21+2397]
	011 Move X22, [X22+2512]
	012 Move X20, [X20+1536]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x7DA000
	019 Move X0, [X0+1536]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B2000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x80D000
	025 Move X0, [X0+4032]
	026 Call 0x1C17CF4
	027 Move X0, 0x7B2000
	028 Move X0, [X0+2096]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2397], W8
	032 Move X0, [X22]
	033 Move W1, 4
	034 Call 0x1C17D6C
	035 Move X9, [X19+16]
	036 Move X10, [X19+24]
	037 Move X8, [X20]
	038 Move X20, X0
	039 Move [X31], X9
	040 Move [X31+8], X10
	041 Move [X31+24], X10
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Add X0, X31, 24
	048 Move X1, X31
	049 Call Edge.ToString, X0
	050 Compare X20, 0
	051 JumpIfEqual {145}
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X20]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {142}
	061 Move W8, [X20+24]
	062 Compare W8, 0
	063 JumpIfEqual {141}
	064 Move [X20+32], X21
	065 Move V0, [X19+1]
	066 Add X0, X31, 24
	067 Move X1, X31
	068 Move [X31], V0
	069 Move [X31+24], D0
	070 Call Edge.ToString, X0
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X20]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {142}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X9, 0x80D000
	083 Move X9, [X9+4032]
	084 Move [X20+40], X21
	085 Move X8, [X19+56]
	086 Move X21, [X9]
	087 Compare X8, 0
	088 JumpIfEqual {97}
	089 Move V0, [X8+1]
	090 Add X0, X31, 0
	091 Move X1, X31
	092 Move [X31], V0
	093 Call EdgeLookup.ToString, X0
	094 Move X22, X0
	095 Compare X22, 0
	096 JumpIfNotEqual {102}
	097 Move X8, 0x7B2000
	098 Move X8, [X8+2096]
	099 Move X22, [X8]
	100 Compare X22, 0
	101 JumpIfEqual {108}
	102 Move X8, [X20]
	103 Move X0, X22
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {142}
	108 Move W8, [X20+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X20+48], X22
	111 Move X0, [X19+32]
	112 Compare X0, 0
	113 JumpIfEqual {145}
	114 Move X8, [X0]
	115 Move X9, [X8+360]
	116 Move X1, [X8+368]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X19, X0
	119 Compare X0, 0
	120 JumpIfEqual {127}
	121 Move X8, [X20]
	122 Move X0, X19
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {142}
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X21
	130 Move X1, X20
	131 Move X2, X31
	132 Move [X20+56], X19
	133 Call String.Format, X0, X1
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Add X31, X31, 64
	140 Return X0
	141 Call 0x1C17F28
	142 Call 0x1C17F44
	143 Move X1, X31
	144 Call 0x1C17DEC
	145 Call 0x1C17F20

Method: System.Int32[] MakeQuad(UnityEngine.ProBuilder.WingedEdge left, UnityEngine.ProBuilder.WingedEdge right)

Disassembly:
	0x03943088 LDR X0, [X0 + 0xFE0]
	0x0394308C BL 0x1C16CF4
	0x03943090 ADRP X0, 0x80B000
	0x03943094 LDR X0, [X0 + 0xFE8]
	0x03943098 BL 0x1C16CF4
	0x0394309C ADRP X0, 0x80C000
	0x039430A0 LDR X0, [X0 + 0x30]
	0x039430A4 BL 0x1C16CF4
	0x039430A8 ADRP X0, 0x7B0000
	0x039430AC LDR X0, [X0 + 0x598]
	0x039430B0 BL 0x1C16CF4
	0x039430B4 ADRP X0, 0x80B000
	0x039430B8 LDR X0, [X0 + 0xB08]
	0x039430BC BL 0x1C16CF4
	0x039430C0 MOVZ W8, 0x1
	0x039430C4 STRB W8, [X21 + 0x965]
	0x039430C8 LDR X0, [X20]
	0x039430CC STR X31, [X31 + 0x38]
	0x039430D0 LDR W8, [X0 + 0xE0]
	0x039430D4 CBNZ W8, 0x39430DC
	0x039430D8 BL 0x1C16DFC
	0x039430DC MOV X0, X19
	0x039430E0 MOV X1, X31
	0x039430E4 MOV X2, X31
	0x039430E8 BL 0x3C3883C
	0x039430EC TBNZ X0, 0x0, 0x394357C
	0x039430F0 CBZ X19, 0x3943578
	0x039430F4 ADRP X20, 0x80C000
	0x039430F8 ADRP X21, 0x80C000
	0x039430FC ADRP X25, 0x80B000
	0x03943100 LDR X20, [X20 + 0x30]
	0x03943104 LDR X21, [X21 + 0x28]
	0x03943108 LDR X25, [X25 + 0xB08]
	0x0394310C MOV X0, X19
	0x03943110 MOV X1, X31
	0x03943114 BL 0x3916198
	0x03943118 LDR X8, [X20]
	0x0394311C MOV X22, X0
	0x03943120 MOV X0, X8
	0x03943124 BL 0x1C16F10
	0x03943128 LDR X1, [X21]
	0x0394312C STR X0, [X31 + 0x8]
	0x03943130 BL 0x301B7C4
	0x03943134 LDR X0, [X25]
	0x03943138 LDR W8, [X0 + 0xE0]
	0x0394313C CBNZ W8, 0x3943148
	0x03943140 BL 0x1C16DFC
	0x03943144 LDR X0, [X25]
	0x03943148 MOV X23, X25
	0x0394314C LDR X8, [X0 + 0xB8]
	0x03943150 LDR X0, [X8]
	0x03943154 CBZ X0, 0x3943578
	0x03943158 ADRP X8, 0x80C000
	0x0394315C LDR X8, [X8 + 0xB8]
	0x03943160 LDR X1, [X8]
	0x03943164 BL 0x29DC65C
	0x03943168 CBZ X24, 0x3943578
	0x0394316C ADRP X10, 0x80A000
	0x03943170 LDR X8, [X24]
	0x03943174 LDR X10, [X10 + 0xDB0]
	0x03943178 LDRH W9, [X8 + 0x12E]
	0x0394317C LDR X1, [X10]
	0x03943180 CBZ X9, 0x39431A4
	0x03943184 LDR X10, [X8 + 0xB0]
	0x03943188 ADD X10, X10, 0x8
	0x0394318C LDUR X11, [X10 - 0x8]
	0x03943190 CMP X11, X1
	0x03943194 B.EQ 0x39431B4
	0x03943198 SUBS X9, X9, 0x1
	0x0394319C ADD X10, X10, 0x10
	0x039431A0 B.NE 0x394318C
	0x039431A4 MOV X0, X24
	0x039431A8 MOV W2, W31
	0x039431AC BL 0x1C5C788
	0x039431B0 B 0x39431C0
	0x039431B4 LDRSW X9, [X10]
	0x039431B8 ADD X8, X8, X9, 0x4, LSL
	0x039431BC ADD X0, X8, 0x138
	0x039431C0 LDP X8, X1, [X0]
	0x039431C4 MOV X0, X24
	0x039431C8 BLR X8
	0x039431CC STR X0, [X31]
	0x039431D0 CBZ X0, 0x39435C4
	0x039431D4 LDR X8, [X31]
	0x039431D8 ADRP X10, 0x7B0000
	0x039431DC LDR X8, [X8]
	0x039431E0 LDRH W9, [X8 + 0x12E]
	0x039431E4 LDR X10, [X10 + 0xE18]
	0x039431E8 LDR X1, [X10]
	0x039431EC CBZ X9, 0x3943210
	0x039431F0 LDR X10, [X8 + 0xB0]
	0x039431F4 ADD X10, X10, 0x8
	0x039431F8 LDUR X11, [X10 - 0x8]
	0x039431FC CMP X11, X1
	0x03943200 B.EQ 0x3943220
	0x03943204 SUBS X9, X9, 0x1
	0x03943208 ADD X10, X10, 0x10
	0x0394320C B.NE 0x39431F8
	0x03943210 LDR X0, [X31]
	0x03943214 MOV W2, W31
	0x03943218 BL 0x1C5C788
	0x0394321C B 0x394322C
	0x03943220 LDRSW X9, [X10]
	0x03943224 ADD X8, X8, X9, 0x4, LSL
	0x03943228 ADD X0, X8, 0x138
	0x0394322C LDP X8, X1, [X0]
	0x03943230 LDR X0, [X31]
	0x03943234 BLR X8
	0x03943238 TBZ X0, 0x0, 0x39434B4
	0x0394323C LDR X8, [X31]
	0x03943240 ADRP X10, 0x80A000
	0x03943244 LDR X8, [X8]
	0x03943248 LDRH W9, [X8 + 0x12E]
	0x0394324C LDR X10, [X10 + 0xDB8]
	0x03943250 LDR X1, [X10]
	0x03943254 CBZ X9, 0x3943278
	0x03943258 LDR X10, [X8 + 0xB0]
	0x0394325C ADD X10, X10, 0x8
	0x03943260 LDUR X11, [X10 - 0x8]
	0x03943264 CMP X11, X1
	0x03943268 B.EQ 0x3943288
	0x0394326C SUBS X9, X9, 0x1
	0x03943270 ADD X10, X10, 0x10
	0x03943274 B.NE 0x3943260
	0x03943278 LDR X0, [X31]
	0x0394327C MOV W2, W31
	0x03943280 BL 0x1C5C788
	0x03943284 B 0x3943294
	0x03943288 LDRSW X9, [X10]
	0x0394328C ADD X8, X8, X9, 0x4, LSL
	0x03943290 ADD X0, X8, 0x138
	0x03943294 LDP X8, X1, [X0]
	0x03943298 LDR X0, [X31]
	0x0394329C BLR X8
	0x039432A0 STR X0, [X31 + 0x18]
	0x039432A4 LDR X0, [X23]
	0x039432A8 LDR W8, [X0 + 0xE0]
	0x039432AC CBNZ W8, 0x39432B4
	0x039432B0 BL 0x1C16DFC
	0x039432B4 LDR X0, [X31 + 0x18]
	0x039432B8 BL 0x3942528
	0x039432BC MOV X24, X0
	0x039432C0 CBZ X0, 0x3943574
	0x039432C4 LDR W8, [X24 + 0x18]
	0x039432C8 CMP W8, 0x1
	0x039432CC B.LT 0x39431D4
	0x039432D0 MOV X21, X31
	0x039432D4 MOV X19, X31
	0x039432D8 MOV W25, W31
	0x039432DC SUB W20, W31, W8
	0x039432E0 ADRP X8, 0x80B000
	0x039432E4 LDR X8, [X8 + 0xFE8]
	0x039432E8 LDR X2, [X8]
	0x039432EC MOV X0, X24
	0x039432F0 MOV W1, W25
	0x039432F4 BL 0x2FB9C40
	0x039432F8 MOV X27, X0
	0x039432FC LDR X0, [X23]
	0x03943300 BL 0x1C16F10
	0x03943304 MOV X26, X0
	0x03943308 MOV X1, X31
	0x0394330C BL 0x33BDD8C
	0x03943310 CBZ X22, 0x3943550
	0x03943314 ADRP X29, 0x80A000
	0x03943318 LDR X29, [X29 + 0xC80]
	0x0394331C LDR X2, [X29]
	0x03943320 MOV X0, X22
	0x03943324 MOV W1, W27
	0x03943328 BL 0x2A0A2A8
	0x0394332C LDR X2, [X29]
	0x03943330 MOV W28, W0
	0x03943334 UBFM X29, X27, 0x20, 0x3F
	0x03943338 MOV X0, X22
	0x0394333C MOV W1, W29
	0x03943340 BL 0x2A0A2A8
	0x03943344 MOV W2, W0
	0x03943348 STP X31, X31, [X31 + 0x20]
	0x0394334C ADD X0, X31, 0x20
	0x03943350 MOV W1, W28
	0x03943354 MOV W3, W27
	0x03943358 MOV W4, W29
	0x0394335C MOV X5, X31
	0x03943360 BL 0x38FE740
	0x03943364 CBZ X26, 0x3943558
	0x03943368 LDR V0, [X31 + 0x2]
	0x0394336C LDR X8, [X31 + 0x18]
	0x03943370 CMP W25, 0x0
	0x03943374 CSEL X21, X21, X26, NE
	0x03943378 STR V0, [X26 + 0x1]
	0x0394337C STR X8, [X26 + 0x20]
	0x03943380 CBZ W25, 0x3943390
	0x03943384 STR X19, [X26 + 0x30]
	0x03943388 CBZ X19, 0x394355C
	0x0394338C STR X26, [X19 + 0x28]
	0x03943390 ADD W8, W20, W25
	0x03943394 ADDS W31, W8, 0x1
	0x03943398 B.NE 0x39433A8
	0x0394339C STR X21, [X26 + 0x28]
	0x039433A0 CBZ X21, 0x3943570
	0x039433A4 STR X26, [X21 + 0x30]
	0x039433A8 LDR X0, [X23]
	0x039433AC LDR W8, [X0 + 0xE0]
	0x039433B0 CBNZ W8, 0x39433BC
	0x039433B4 BL 0x1C16DFC
	0x039433B8 LDR X0, [X23]
	0x039433BC LDR X8, [X0 + 0xB8]
	0x039433C0 LDR X0, [X8]
	0x039433C4 CBZ X0, 0x3943554
	0x039433C8 ADRP X8, 0x80C000
	0x039433CC LDR X1, [X26 + 0x18]
	0x039433D0 LDR X8, [X8 + 0xC0]
	0x039433D4 LDR X3, [X8]
	0x039433D8 ADD X2, X31, 0x38
	0x039433DC BL 0x29DDFCC
	0x039433E0 TBZ X0, 0x0, 0x39433F8
	0x039433E4 LDR X8, [X31 + 0x38]
	0x039433E8 CBZ X8, 0x3943564
	0x039433EC STR X26, [X8 + 0x38]
	0x039433F0 STR X8, [X26 + 0x38]
	0x039433F4 B 0x3943434
	0x039433F8 STR X31, [X26 + 0x38]
	0x039433FC LDR X0, [X23]
	0x03943400 LDR W8, [X0 + 0xE0]
	0x03943404 CBNZ W8, 0x3943410
	0x03943408 BL 0x1C16DFC
	0x0394340C LDR X0, [X23]
	0x03943410 LDR X8, [X0 + 0xB8]
	0x03943414 LDR X0, [X8]
	0x03943418 CBZ X0, 0x3943568
	0x0394341C ADRP X8, 0x80C000
	0x03943420 LDR X1, [X26 + 0x18]
	0x03943424 LDR X8, [X8 + 0xB0]
	0x03943428 LDR X3, [X8]
	0x0394342C MOV X2, X26
	0x03943430 BL 0x29DC4D4
	0x03943434 CBZ W25, 0x3943440
	0x03943438 LDR W8, [X31 + 0x14]
	0x0394343C TBNZ X8, 0x0, 0x39434A0
	0x03943440 LDR X0, [X31 + 0x8]
	0x03943444 CBZ X0, 0x394356C
	0x03943448 ADRP X9, 0x80C000
	0x0394344C LDR W10, [X0 + 0x1C]
	0x03943450 LDR X8, [X0 + 0x10]
	0x03943454 LDR X9, [X9 + 0x20]
	0x03943458 ADD W10, W10, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xA9F000
	014 Move W8, [X19+2398]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x80C000
	022 Move X0, [X0+4040]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B2000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2398], W8
	029 Compare X21, 0
	030 JumpIfEqual {256}
	031 Move W8, 3
	032 Move X9, X21
	033 Move X9, [X9+40]
	034 Subtract W8, W8, 1
	035 Compare X9, 0
	036 JumpIfEqual {38}
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W8, 0
	039 JumpIfNotEqual {232}
	040 Compare X20, 0
	041 JumpIfEqual {256}
	042 Move W8, 3
	043 Move X9, X20
	044 Move X9, [X9+40]
	045 Subtract W8, W8, 1
	046 Compare X9, 0
	047 JumpIfEqual {49}
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare W8, 0
	050 JumpIfNotEqual {232}
	051 Move X8, 0x80C000
	052 Move X8, [X8+4040]
	053 Move W1, 6
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Compare X0, 0
	057 JumpIfEqual {256}
	058 Move W8, [X0+24]
	059 Move X19, X0
	060 Compare W8, 0
	061 JumpIfEqual {255}
	062 Move V0, [X21+1]
	063 Move [X19+2], V0
	064 Move X9, [X21+40]
	065 Compare X9, 0
	066 JumpIfEqual {256}
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move V0, [X9+1]
	069 Move [X19+3], V0
	070 Move X9, [X21+40]
	071 Compare X9, 0
	072 JumpIfEqual {256}
	073 Move X9, [X9+40]
	074 Compare X9, 0
	075 JumpIfEqual {256}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move V0, [X9+1]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X19+4], V0
	080 Move V0, [X20+1]
	081 Move [X19+5], V0
	082 Move X9, [X20+40]
	083 Compare X9, 0
	084 JumpIfEqual {256}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move V0, [X9+1]
	087 Move [X19+6], V0
	088 Move X9, [X20+40]
	089 Compare X9, 0
	090 JumpIfEqual {256}
	091 Move X9, [X9+40]
	092 Compare X9, 0
	093 JumpIfEqual {256}
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move V0, [X9+1]
	096 Move X23, 0x7B2000
	097 Move W1, 6
	098 Move [X19+7], V0
	099 Move X23, [X23+3672]
	100 Move X0, [X23]
	101 Call 0x1C17D6C
	102 Move X21, X0
	103 Move X25, X31
	104 Move W24, W31
	105 Add X26, X0, 44
	106 Add X22, X19, 88
	107 Move W28, 1
	108 Add X8, X19, X25
	109 Move X29, X31
	110 Add X20, X8, 32
	111 Move X27, X22
	112 Move W8, [X19+24]
	113 Add X9, X29, 3
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X1, [X27-8]
	116 Move X2, [X27]
	117 Move X0, X20
	118 Move X3, X31
	119 Call EdgeLookup.Equals, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {127}
	124 Add X29, X29, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X27, X27, 16
	127 Compare X21, 0
	128 JumpIfEqual {256}
	129 Move W8, [X21+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add X9, X29, 3
	132 Add X10, X21, X25
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X10+32], W28
	135 Add W24, W24, 1
	136 Move [X26], W28
	137 Add X25, X25, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, 0x80C000
	141 Move X8, [X8+4040]
	142 Move W1, 4
	143 Move X0, [X8]
	144 Call 0x1C17D6C
	145 Compare X21, 0
	146 JumpIfEqual {256}
	147 Move X20, X0
	148 Move X8, X31
	149 Move W10, W31
	150 Add X9, X19, 32
	151 Add X11, X21, 32
	152 Move W12, [X21+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W12, [X11]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W12, [X19+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare X20, 0
	159 JumpIfEqual {256}
	160 Move W12, [X20+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move V0, [X9]
	163 Add X12, X20, W10
	164 Add W10, W10, 1
	165 Move [X12+2], V0
	166 Add X8, X8, 1
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, [X23]
	169 Move W1, 4
	170 Call 0x1C17D6C
	171 Compare X20, 0
	172 JumpIfEqual {256}
	173 Move W8, [X20+24]
	174 Compare W8, 0
	175 JumpIfEqual {255}
	176 Compare X0, 0
	177 JumpIfEqual {256}
	178 Move W9, [X0+24]
	179 Compare W9, 0
	180 JumpIfEqual {255}
	181 Move W10, [X20+32]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move [X0+32], W10
	184 Move W10, [X20+36]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X0+36], W10
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W10, TEMP
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X0+40], W10
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X0+44], W10
	194 Move X10, X20
	195 Move W11, [X20+44]
	196 Add X10, X10, 56
	197 Move W9, [X10]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X10, 8
	200 Move X11, X9
	201 Move X12, X10
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X12, X20
	204 Add X12, X12, 72
	205 Move W13, [X12]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add X11, X20, 64
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X12, X20
	210 Add X12, X12, 88
	211 Move W13, [X12]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X11, X12, 8
	214 Move W11, [X11+4]
	215 Move [X0+40], W11
	216 Move W12, [X12+4]
	217 Move W10, [X10]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move W9, [X20+72]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add X9, X20, 64
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W8, [X20+88]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add X9, X20, 80
	227 Move W8, [X9+4]
	228 Move [X0+44], W8
	229 Add W31, W11, 1
	230 Add W31, W8, 1
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 Move X0, X31
	233 Move X20, [X31+80]
	234 Move X19, [X31+88]
	235 Move X22, [X31+64]
	236 Move X21, [X31+72]
	237 Move X24, [X31+48]
	238 Move X23, [X31+56]
	239 Move X26, [X31+32]
	240 Move X25, [X31+40]
	241 Move X28, [X31+16]
	242 Move X27, [X31+24]
	243 Move X29, [X31+96]
	244 Move X30, [X31+104]
	245 Return X0
	246 Move TEMP, 0
	247 Not TEMP
	248 Move W11, TEMP
	249 Move TEMP, 0
	250 Not TEMP
	251 Move W12, TEMP
	252 Move TEMP, 0
	253 Not TEMP
	254 Move W8, TEMP
	255 Call 0x1C17F28
	256 Call 0x1C17F20

Method: UnityEngine.ProBuilder.WingedEdge GetAdjacentEdgeWithCommonIndex(System.Int32 common)

Disassembly:
	0x0394345C LDR X9, [X9]
	0x03943460 STR W10, [X0 + 0x1C]
	0x03943464 CBZ X8, 0x3943560
	0x03943468 LDRSW X10, [X0 + 0x18]
	0x0394346C LDR W11, [X8 + 0x18]
	0x03943470 CMP W10, W11
	0x03943474 B.CS 0x394348C
	0x03943478 ADD W9, W10, 0x1
	0x0394347C ADD X8, X8, X10, 0x3, LSL
	0x03943480 STR W9, [X0 + 0x18]
	0x03943484 STR X26, [X8 + 0x20]
	0x03943488 B 0x39434A0
	0x0394348C LDR X8, [X9 + 0x20]
	0x03943490 LDR X8, [X8 + 0xC0]
	0x03943494 LDR X2, [X8 + 0x70]
	0x03943498 MOV X1, X26
	0x0394349C BL 0x301BF90
	0x039434A0 ADD W25, W25, 0x1
	0x039434A4 ADDS W31, W20, W25
	0x039434A8 MOV X19, X26
	0x039434AC B.NE 0x39432E0
	0x039434B0 B 0x39431D4
	0x039434B4 MOV X22, X31
	0x039434B8 LDR X8, [X31]
	0x039434BC CBZ X8, 0x3943528
	0x039434C0 LDR X8, [X8]
	0x039434C4 ADRP X10, 0x7B0000
	0x039434C8 LDRH W9, [X8 + 0x12E]
	0x039434CC LDR X10, [X10 + 0xE00]
	0x039434D0 LDR X1, [X10]
	0x039434D4 CBZ X9, 0x39434F8
	0x039434D8 LDR X10, [X8 + 0xB0]
	0x039434DC ADD X10, X10, 0x8
	0x039434E0 LDUR X11, [X10 - 0x8]
	0x039434E4 CMP X11, X1
	0x039434E8 B.EQ 0x394350C
	0x039434EC SUBS X9, X9, 0x1
	0x039434F0 ADD X10, X10, 0x10
	0x039434F4 B.NE 0x39434E0
	0x039434F8 LDR X19, [X31]
	0x039434FC MOV W2, W31
	0x03943500 MOV X0, X19
	0x03943504 BL 0x1C5C788
	0x03943508 B 0x394351C
	0x0394350C LDRSW X9, [X10]
	0x03943510 LDR X19, [X31]
	0x03943514 ADD X8, X8, X9, 0x4, LSL
	0x03943518 ADD X0, X8, 0x138
	0x0394351C LDP X8, X1, [X0]
	0x03943520 MOV X0, X19
	0x03943524 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA9F000
	007 Move W8, [X21+2399]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7D9000
	015 Move X0, [X0+1536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2399], W8
	019 Move X21, X19
	020 Add X21, X21, 40
	021 Move X8, [X21]
	022 Compare X8, 0
	023 JumpIfEqual {70}
	024 Move X22, 0x7D9000
	025 Move X22, [X22+1536]
	026 Move X8, [X8+24]
	027 Move X0, [X22]
	028 Move [X31+8], X8
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move W1, W20
	035 Move X2, X31
	036 Call Edge.Contains, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {63}
	041 Add X19, X19, 48
	042 Move X8, [X19]
	043 Compare X8, 0
	044 JumpIfEqual {70}
	045 Move X8, [X8+24]
	046 Move X0, [X22]
	047 Move [X31+8], X8
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move W1, W20
	054 Move X2, X31
	055 Call Edge.Contains, X0, X1
	056 Move W8, W0
	057 Move X0, X31
	058 Move X21, X19
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {64}
	063 Move X0, [X21]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> SortEdgesByAdjacency(UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03943528 CBNZ X22, 0x39435C8
	0x0394352C LDR X0, [X31 + 0x8]
	0x03943530 LDP X20, X19, [X31 + 0x90]
	0x03943534 LDP X22, X21, [X31 + 0x80]
	0x03943538 LDP X24, X23, [X31 + 0x70]
	0x0394353C LDP X26, X25, [X31 + 0x60]
	0x03943540 LDP X28, X27, [X31 + 0x50]
	0x03943544 LDP X29, X30, [X31 + 0x40]
	0x03943548 ADD X31, X31, 0xA0
	0x0394354C RET
	0x03943550 BL 0x1C16F20
	0x03943554 BL 0x1C16F20
	0x03943558 BL 0x1C16F20
	0x0394355C BL 0x1C16F20
	0x03943560 BL 0x1C16F20
	0x03943564 BL 0x1C16F20
	0x03943568 BL 0x1C16F20
	0x0394356C BL 0x1C16F20
	0x03943570 BL 0x1C16F20
	0x03943574 BL 0x1C16F20
	0x03943578 BL 0x1C16F20
	0x0394357C ADRP X0, 0x7B5000
	0x03943580 LDR X0, [X0 + 0x528]
	0x03943584 BL 0x1C16D08
	0x03943588 BL 0x1C16F10
	0x0394358C MOV X19, X0
	0x03943590 ADRP X0, 0x80A000
	0x03943594 LDR X0, [X0 + 0xE90]
	0x03943598 BL 0x1C16D08
	0x0394359C MOV X1, X0
	0x039435A0 MOV X0, X19
	0x039435A4 MOV X2, X31
	0x039435A8 BL 0x330E100
	0x039435AC ADRP X0, 0x80C000
	0x039435B0 LDR X0, [X0 + 0xC8]
	0x039435B4 BL 0x1C16D08
	0x039435B8 MOV X1, X0
	0x039435BC MOV X0, X19
	0x039435C0 BL 0x1C16DEC
	0x039435C4 BL 0x1C16F20
	0x039435C8 MOV X0, X22
	0x039435CC BL 0x1C16F18
	0x039435D0 B 0x394362C
	0x039435D4 B 0x394362C
	0x039435D8 B 0x394362C
	0x039435DC B 0x394362C
	0x039435E0 B 0x394362C
	0x039435E4 B 0x394362C
	0x039435E8 B 0x394362C
	0x039435EC B 0x394362C
	0x039435F0 B 0x394362C
	0x039435F4 B 0x394362C
	0x039435F8 B 0x394362C
	0x039435FC B 0x394362C
	0x03943600 B 0x394362C
	0x03943604 B 0x394362C
	0x03943608 B 0x394362C
	0x0394360C B 0x394362C
	0x03943610 B 0x394362C
	0x03943614 B 0x394362C
	0x03943618 B 0x394362C
	0x0394361C B 0x394362C
	0x03943620 B 0x394362C
	0x03943624 B 0x394362C
	0x03943628 B 0x394362C
	0x0394362C MOV X21, X0
	0x03943630 CMP W1, 0x1
	0x03943634 B.NE 0x394364C
	0x03943638 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA9F000
	007 Move W8, [X20+2400]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x80C000
	014 Move X0, [X0+4048]
	015 Call 0x1C17CF4
	016 Move X0, 0x80B000
	017 Move X0, [X0+3448]
	018 Call 0x1C17CF4
	019 Move X0, 0x80C000
	020 Move X0, [X0+2824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2400], W8
	024 Compare X19, 0
	025 JumpIfEqual {62}
	026 Move X0, X19
	027 Move X1, X31
	028 Call Face.get_edgesInternal, X0
	029 Compare X0, 0
	030 JumpIfEqual {62}
	031 Move X20, 0x80B000
	032 Move X21, 0x80C000
	033 Move X22, 0x80C000
	034 Move X20, [X20+3448]
	035 Move X21, [X21+4048]
	036 Move X22, [X22+2824]
	037 Move X0, X19
	038 Move X1, X31
	039 Call Face.get_edgesInternal, X0
	040 Move X8, [X20]
	041 Move X20, X0
	042 Move X0, X8
	043 Call 0x1C17F10
	044 Move X2, [X21]
	045 Move X1, X20
	046 Move X19, X0
	047 Call List`1<Edge>..ctor, X0, X1
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X19
	054 Call WingedEdge.SortEdgesByAdjacency, X0
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0
	062 Move X0, 0x7B6000
	063 Move X0, [X0+1320]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0x80C000
	068 Move X0, [X0+1536]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X31
	073 Call ArgumentNullException..ctor, X0, X1
	074 Move X0, 0x80C000
	075 Move X0, [X0+4056]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Call 0x1C17DEC

Method: System.Void SortEdgesByAdjacency(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x0394363C BL 0x3EB1AD0
	0x03943640 LDR X22, [X0]
	0x03943644 BL 0x3EB1AE0
	0x03943648 B 0x39434B8
	0x0394364C MOV X22, X31
	0x03943650 B 0x3943658
	0x03943654 MOV X21, X0
	0x03943658 LDR X8, [X31]
	0x0394365C CBZ X8, 0x39436C4
	0x03943660 LDR X8, [X31]
	0x03943664 ADRP X10, 0x7B0000
	0x03943668 LDR X8, [X8]
	0x0394366C LDRH W9, [X8 + 0x12E]
	0x03943670 LDR X10, [X10 + 0xE00]
	0x03943674 LDR X1, [X10]
	0x03943678 CBZ X9, 0x394369C
	0x0394367C LDR X10, [X8 + 0xB0]
	0x03943680 ADD X10, X10, 0x8
	0x03943684 LDUR X11, [X10 - 0x8]
	0x03943688 CMP X11, X1
	0x0394368C B.EQ 0x39436AC
	0x03943690 SUBS X9, X9, 0x1
	0x03943694 ADD X10, X10, 0x10
	0x03943698 B.NE 0x3943684
	0x0394369C LDR X0, [X31]
	0x039436A0 MOV W2, W31
	0x039436A4 BL 0x1C5C788
	0x039436A8 B 0x39436B8
	0x039436AC LDRSW X9, [X10]
	0x039436B0 ADD X8, X8, X9, 0x4, LSL
	0x039436B4 ADD X0, X8, 0x138
	0x039436B8 LDP X8, X1, [X0]
	0x039436BC LDR X0, [X31]
	0x039436C0 BLR X8
	0x039436C4 CBNZ X22, 0x39436D0
	0x039436C8 MOV X0, X21
	0x039436CC BL 0x1D2C690
	0x039436D0 MOV X0, X22
	0x039436D4 BL 0x1C16F18
	0x039436D8 BL 0x1990590
	0x039436DC STR X30, [X31 - 0x30]!
	0x039436E0 STP X22, X21, [X31 + 0x10]
	0x039436E4 STP X20, X19, [X31 + 0x20]
	0x039436E8 ADRP X21, 0xA9E000
	0x039436EC ADRP X22, 0x80C000
	0x039436F0 ADRP X19, 0x80C000
	0x039436F4 ADRP X20, 0x80B000
	0x039436F8 LDRB W8, [X21 + 0x966]
	0x039436FC LDR X22, [X22 + 0xD0]
	0x03943700 LDR X19, [X19 + 0xD8]
	0x03943704 LDR X20, [X20 + 0xB08]
	0x03943708 TBNZ X8, 0x0, 0x3943738
	0x0394370C ADRP X0, 0x80C000
	0x03943710 LDR X0, [X0 + 0xD8]
	0x03943714 BL 0x1C16CF4
	0x03943718 ADRP X0, 0x80C000
	0x0394371C LDR X0, [X0 + 0xD0]
	0x03943720 BL 0x1C16CF4
	0x03943724 ADRP X0, 0x80B000
	0x03943728 LDR X0, [X0 + 0xB08]
	0x0394372C BL 0x1C16CF4
	0x03943730 MOVZ W8, 0x1
	0x03943734 STRB W8, [X21 + 0x966]
	0x03943738 LDR X0, [X22]
	0x0394373C BL 0x1C16F10
	0x03943740 LDR X1, [X19]
	0x03943744 MOV X19, X0
	0x03943748 BL 0x29DBC20
	0x0394374C LDR X8, [X20]
	0x03943750 LDP X22, X21, [X31 + 0x10]
	0x03943754 LDR X8, [X8 + 0xB8]
	0x03943758 STR X19, [X8]
	0x0394375C LDP X20, X19, [X31 + 0x20]
	0x03943760 LDR X30, [X31], #0x30
	0x03943764 RET
	0x03943768 STR X30, [X31 - 0x20]!
	0x0394376C STP X20, X19, [X31 + 0x10]
	0x03943770 ADRP X19, 0xA9E000
	0x03943774 ADRP X20, 0x80C000
	0x03943778 LDRB W8, [X19 + 0x967]
	0x0394377C LDR X20, [X20 + 0xA0]
	0x03943780 TBNZ X8, 0x0, 0x3943798
	0x03943784 ADRP X0, 0x80C000
	0x03943788 LDR X0, [X0 + 0xA0]
	0x0394378C BL 0x1C16CF4
	0x03943790 MOVZ W8, 0x1
	0x03943794 STRB W8, [X19 + 0x967]
	0x03943798 LDR X0, [X20]
	0x0394379C BL 0x1C16F10
	0x039437A0 MOV X1, X31
	0x039437A4 MOV X19, X0
	0x039437A8 BL 0x33BDD8C
	0x039437AC LDR X8, [X20]
	0x039437B0 LDR X8, [X8 + 0xB8]
	0x039437B4 STR X19, [X8]
	0x039437B8 LDP X20, X19, [X31 + 0x10]
	0x039437BC LDR X30, [X31], #0x20
	0x039437C0 RET
	0x039437C4 MOV X1, X31
	0x039437C8 B 0x33BDD8C
	0x039437CC STR X30, [X31 - 0x10]!
	0x039437D0 CBZ X1, 0x39437E0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA9F000
	011 Move W8, [X20+2401]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x80C000
	018 Move X0, [X0+4064]
	019 Call 0x1C17CF4
	020 Move X0, 0x80C000
	021 Move X0, [X0+4072]
	022 Call 0x1C17CF4
	023 Move X0, 0x80C000
	024 Move X0, [X0+4080]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2401], W8
	028 Compare X19, 0
	029 JumpIfEqual {95}
	030 Move W8, [X19+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, 0x80C000
	033 Move X24, 0x80C000
	034 Move X23, [X23+4072]
	035 Move X24, [X24+4080]
	036 Move W20, 1
	037 Move X2, [X23]
	038 Subtract W1, W20, 1
	039 Move X0, X19
	040 Call List`1<Edge>.get_Item, X0, X1
	041 Move W8, [X19+24]
	042 Add W25, W20, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X26, X0
	045 ShiftRight X26, 32
	046 And X26, X26, 0x7FFFFFFF
	047 Move W21, W25
	048 Move X2, [X23]
	049 Move X0, X19
	050 Move W1, W21
	051 Call List`1<Edge>.get_Item, X0, X1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X2, [X23]
	054 Move X0, X19
	055 Move W1, W21
	056 Call List`1<Edge>.get_Item, X0, X1
	057 Move X8, X0
	058 ShiftRight X8, 32
	059 And X8, X8, 0x7FFFFFFF
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X2, [X23]
	062 Move X0, X19
	063 Move W1, W21
	064 Call List`1<Edge>.get_Item, X0, X1
	065 Move X2, [X23]
	066 Move X22, X0
	067 Move X0, X19
	068 Move W1, W20
	069 Call List`1<Edge>.get_Item, X0, X1
	070 Move X3, [X24]
	071 Move X2, X0
	072 Move X0, X19
	073 Move W1, W21
	074 Call List`1<Edge>.set_Item, X0, X1, X2
	075 Move X3, [X24]
	076 Move X0, X19
	077 Move W1, W20
	078 Move X2, X22
	079 Call List`1<Edge>.set_Item, X0, X1, X2
	080 Move W8, [X19+24]
	081 Add W21, W21, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W20, W25
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X26, [X31+16]
	092 Move X25, [X31+24]
	093 Move X30, [X31+80]
	094 Return 
	095 Move X0, 0x7B6000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0x80C000
	101 Move X0, [X0+1616]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0x80C000
	108 Move X0, [X0+4088]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC

Method: System.Collections.Generic.Dictionary`2<System.Int32, System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge>> GetSpokes(System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> wings)

Disassembly:
	0x039437D4 LDR X0, [X1 + 0x18]
	0x039437D8 LDR X30, [X31], #0x10
	0x039437DC RET
	0x039437E0 BL 0x1C16F20
	0x039437E4 MOV X0, X1
	0x039437E8 RET
	0x039437EC STP X30, X21, [X31 - 0x20]!
	0x039437F0 STP X20, X19, [X31 + 0x10]
	0x039437F4 ADRP X21, 0xA9E000
	0x039437F8 LDRB W8, [X21 + 0x968]
	0x039437FC MOV X19, X1
	0x03943800 MOV X20, X0
	0x03943804 TBNZ X8, 0x0, 0x394381C
	0x03943808 ADRP X0, 0x7B1000
	0x0394380C LDR X0, [X0 + 0xDF8]
	0x03943810 BL 0x1C16CF4
	0x03943814 MOVZ W8, 0x1
	0x03943818 STRB W8, [X21 + 0x968]
	0x0394381C CBZ X19, 0x394386C
	0x03943820 LDR X0, [X20 + 0x10]
	0x03943824 CBZ X0, 0x394386C
	0x03943828 ADRP X21, 0x7B1000
	0x0394382C LDR X21, [X21 + 0xDF8]
	0x03943830 LDR W1, [X19 + 0x18]
	0x03943834 LDR X2, [X21]
	0x03943838 BL 0x2DAA59C
	0x0394383C TBZ X0, 0x0, 0x394385C
	0x03943840 LDR X0, [X20 + 0x10]
	0x03943844 CBZ X0, 0x394386C
	0x03943848 LDR W1, [X19 + 0x1C]
	0x0394384C LDR X2, [X21]
	0x03943850 LDP X20, X19, [X31 + 0x10]
	0x03943854 LDP X30, X21, [X31], #0x20
	0x03943858 B 0x2DAA59C
	0x0394385C LDP X20, X19, [X31 + 0x10]
	0x03943860 MOV W0, W31
	0x03943864 LDP X30, X21, [X31], #0x20
	0x03943868 RET
	0x0394386C BL 0x1C16F20
	0x03943870 STR X30, [X31 - 0x20]!
	0x03943874 STP X20, X19, [X31 + 0x10]
	0x03943878 MOV X19, X1
	0x0394387C MOV X1, X31
	0x03943880 MOV X20, X0
	0x03943884 BL 0x33BDD8C
	0x03943888 STP X19, X31, [X20 + 0x10]
	0x0394388C LDP X20, X19, [X31 + 0x10]
	0x03943890 LDR X30, [X31], #0x20
	0x03943894 RET
	0x03943898 LDR X8, [X0 + 0x18]
	0x0394389C CBZ X8, 0x39438B8
	0x039438A0 LDR X8, [X8 + 0x28]
	0x039438A4 STR X8, [X0 + 0x18]
	0x039438A8 CBZ X8, 0x39438CC
	0x039438AC LDR X9, [X0 + 0x10]
	0x039438B0 CMP X8, X9
	0x039438B4 B 0x39438C4
	0x039438B8 LDR X8, [X0 + 0x10]
	0x039438BC STR X8, [X0 + 0x18]
	0x039438C0 CMP X8, 0x0
	0x039438C4 CSET W0, NE
	0x039438C8 RET
	0x039438CC MOV W0, W31
	0x039438D0 RET
	0x039438D4 STR X31, [X0 + 0x18]
	0x039438D8 RET
	0x039438DC LDR X0, [X0 + 0x18]
	0x039438E0 RET
	0x039438E4 LDR X0, [X0 + 0x18]
	0x039438E8 RET
	0x039438EC RET
	0x039438F0 STP X30, X21, [X31 - 0x20]!
	0x039438F4 STP X20, X19, [X31 + 0x10]
	0x039438F8 ADRP X21, 0xA9E000
	0x039438FC LDRB W8, [X21 + 0x969]
	0x03943900 MOV X19, X1
	0x03943904 MOV X20, X0
	0x03943908 TBNZ X8, 0x0, 0x3943920
	0x0394390C ADRP X0, 0x80C000
	0x03943910 LDR X0, [X0 + 0xE0]
	0x03943914 BL 0x1C16CF4
	0x03943918 MOVZ W8, 0x1
	0x0394391C STRB W8, [X21 + 0x969]
	0x03943920 CBZ X19, 0x3943980
	0x03943924 ADRP X8, 0x80C000
	0x03943928 LDR X8, [X8 + 0xE0]
	0x0394392C LDR X9, [X19]
	0x03943930 LDR X8, [X8]
	0x03943934 LDRB W11, [X9 + 0x130]
	0x03943938 LDRB W10, [X8 + 0x130]
	0x0394393C CMP W11, W10
	0x03943940 B.CC 0x3943980
	0x03943944 LDR X9, [X9 + 0xC8]
	0x03943948 ADD X9, X9, X10, 0x3, LSL
	0x0394394C LDUR X9, [X9 - 0x8]
	0x03943950 CMP X9, X8
	0x03943954 B.NE 0x3943980
	0x03943958 LDR V0, [X19 + 0x10]
	0x0394395C STR S0, [X20 + 0x10]
	0x03943960 LDR W8, [X19 + 0x14]
	0x03943964 STR W8, [X20 + 0x14]
	0x03943968 LDR V0, [X19 + 0x18]
	0x0394396C STR S0, [X20 + 0x18]
	0x03943970 LDRB W8, [X19 + 0x1C]
	0x03943974 STRB W8, [X20 + 0x1C]
	0x03943978 LDRB W8, [X19 + 0x1D]
	0x0394397C STRB W8, [X20 + 0x1D]
	0x03943980 LDP X20, X19, [X31 + 0x10]
	0x03943984 LDP X30, X21, [X31], #0x20
	0x03943988 RET
	0x0394398C STR D12, [X31 - 0x40]!
	0x03943990 STP D11, D10, [X31 + 0x8]
	0x03943994 STP D9, D8, [X31 + 0x18]
	0x03943998 STR X30, [X31 + 0x28]
	0x0394399C STP X20, X19, [X31 + 0x30]
	0x039439A0 ADRP X19, 0xA9E000
	0x039439A4 ADRP X20, 0x7B2000
	0x039439A8 LDRB W8, [X19 + 0x96A]
	0x039439AC LDR X20, [X20 + 0x9B0]
	0x039439B0 MOV V10.16B, V4.16B
	0x039439B4 MOV V8.16B, V3.16B
	0x039439B8 MOV V9.16B, V2.16B
	0x039439BC MOV V11.16B, V1.16B
	0x039439C0 MOV V12.16B, V0.16B
	0x039439C4 TBNZ X8, 0x0, 0x39439DC
	0x039439C8 ADRP X0, 0x7B2000
	0x039439CC LDR X0, [X0 + 0x9B0]
	0x039439D0 BL 0x1C16CF4
	0x039439D4 MOVZ W8, 0x1
	0x039439D8 STRB W8, [X19 + 0x96A]
	0x039439DC LDR X0, [X20]
	0x039439E0 MOVZ W1, 0x4
	0x039439E4 BL 0x1C16D6C
	0x039439E8 CBZ X0, 0x3943A4C
	0x039439EC LDR W8, [X0 + 0x18]
	0x039439F0 CBZ W8, 0x3943A48
	0x039439F4 CMP W8, 0x1
	0x039439F8 STP S12, S11, [X0 + 0x20]
	0x039439FC STR S10, [X0 + 0x28]
	0x03943A00 B.EQ 0x3943A48
	0x03943A04 CMP W8, 0x2
	0x03943A08 STP S9, S8, [X0 + 0x2C]
	0x03943A0C STR S10, [X0 + 0x34]
	0x03943A10 B.LS 0x3943A48
	0x03943A14 FNEG S0, S10
	0x03943A18 CMP W8, 0x3
	0x03943A1C STP S12, S11, [X0 + 0x38]
	0x03943A20 STR S0, [X0 + 0x40]
	0x03943A24 B.EQ 0x3943A48
	0x03943A28 STP S9, S8, [X0 + 0x44]
	0x03943A2C LDP X20, X19, [X31 + 0x30]
	0x03943A30 LDR X30, [X31 + 0x28]
	0x03943A34 LDP D9, D8, [X31 + 0x18]
	0x03943A38 LDP D11, D10, [X31 + 0x8]
	0x03943A3C STR S0, [X0 + 0x4C]
	0x03943A40 LDR V12, [X31], #0x40
	0x03943A44 RET
	0x03943A48 BL 0x1C16F28
	0x03943A4C BL 0x1C16F20
	0x03943A50 SUB X31, X31, 0x160
	0x03943A54 STP D15, D14, [X31 + 0xC0]
	0x03943A58 STP D13, D12, [X31 + 0xD0]
	0x03943A5C STP D11, D10, [X31 + 0xE0]
	0x03943A60 STP D9, D8, [X31 + 0xF0]
	0x03943A64 STP X29, X30, [X31 + 0x100]
	0x03943A68 STP X28, X27, [X31 + 0x110]
	0x03943A6C STP X26, X25, [X31 + 0x120]
	0x03943A70 STP X24, X23, [X31 + 0x130]
	0x03943A74 STP X22, X21, [X31 + 0x140]
	0x03943A78 STP X20, X19, [X31 + 0x150]
	0x03943A7C ADRP X19, 0xA9E000
	0x03943A80 LDRB W9, [X19 + 0x96B]
	0x03943A84 MOV V8.16B, V6.16B
	0x03943A88 MOV V9.16B, V5.16B
	0x03943A8C MOV V11.16B, V4.16B
	0x03943A90 MOV V10.16B, V3.16B
	0x03943A94 MOV V12.16B, V2.16B
	0x03943A98 MOV X29, X1
	0x03943A9C MOV X28, X8
	0x03943AA0 STP S0, S1, [X31 + 0x50]
	0x03943AA4 STR X0, [X31 + 0x80]
	0x03943AA8 TBNZ X9, 0x0, 0x3943B2C
	0x03943AAC ADRP X0, 0x7DC000
	0x03943AB0 LDR X0, [X0 + 0xD58]
	0x03943AB4 BL 0x1C16CF4
	0x03943AB8 ADRP X0, 0x7DC000
	0x03943ABC LDR X0, [X0 + 0x5B0]
	0x03943AC0 BL 0x1C16CF4
	0x03943AC4 ADRP X0, 0x7DC000
	0x03943AC8 LDR X0, [X0 + 0x5B8]
	0x03943ACC BL 0x1C16CF4
	0x03943AD0 ADRP X0, 0x7B4000
	0x03943AD4 LDR X0, [X0 + 0x978]
	0x03943AD8 BL 0x1C16CF4
	0x03943ADC ADRP X0, 0x7B4000
	0x03943AE0 LDR X0, [X0 + 0x980]
	0x03943AE4 BL 0x1C16CF4
	0x03943AE8 ADRP X0, 0x80C000
	0x03943AEC LDR X0, [X0 + 0xE8]
	0x03943AF0 BL 0x1C16CF4
	0x03943AF4 ADRP X0, 0x7B4000
	0x03943AF8 LDR X0, [X0 + 0x3C0]
	0x03943AFC BL 0x1C16CF4
	0x03943B00 ADRP X0, 0x80A000
	0x03943B04 LDR X0, [X0 + 0xA88]
	0x03943B08 BL 0x1C16CF4
	0x03943B0C ADRP X0, 0x7B2000
	0x03943B10 LDR X0, [X0 + 0x9B0]
	0x03943B14 BL 0x1C16CF4
	0x03943B18 ADRP X0, 0x80B000
	0x03943B1C LDR X0, [X0 + 0xF88]
	0x03943B20 BL 0x1C16CF4
	0x03943B24 MOVZ W8, 0x1
	0x03943B28 STRB W8, [X19 + 0x96B]
	0x03943B2C ADRP X19, 0xA95000
	0x03943B30 LDRB W8, [X19 + 0x786]
	0x03943B34 STR X31, [X31 + 0xA0]
	0x03943B38 CBNZ W8, 0x3943B50
	0x03943B3C ADRP X0, 0x7B0000
	0x03943B40 LDR X0, [X0 + 0x5A0]
	0x03943B44 BL 0x1C16CF4
	0x03943B48 MOVZ W8, 0x1
	0x03943B4C STRB W8, [X19 + 0x786]
	0x03943B50 STR S12, [X31 + 0x24]
	0x03943B54 ADRP X19, 0x7B0000
	0x03943B58 LDR X19, [X19 + 0x5A0]
	0x03943B5C MOV V0.16B, V10.16B
	0x03943B60 MOV V1.16B, V11.16B
	0x03943B64 MOV V2.16B, V9.16B
	0x03943B68 LDR X8, [X19]
	0x03943B6C MOV V3.16B, V8.16B
	0x03943B70 MOV X0, X31
	0x03943B74 LDR X8, [X8 + 0xB8]
	0x03943B78 LDP S4, S5, [X8 + 0x18]
	0x03943B7C LDR V6, [X8 + 0x20]
	0x03943B80 BL 0x3C2A9FC
	0x03943B84 ADRP X20, 0xA95000
	0x03943B88 LDRB W8, [X20 + 0xB70]
	0x03943B8C MOV V15.16B, V2.16B
	0x03943B90 STP S1, S0, [X31 + 0x74]
	0x03943B94 CBNZ W8, 0x3943BAC
	0x03943B98 ADRP X0, 0x7B0000
	0x03943B9C LDR X0, [X0 + 0x5A0]
	0x03943BA0 BL 0x1C16CF4
	0x03943BA4 MOVZ W8, 0x1
	0x03943BA8 STRB W8, [X20 + 0xB70]
	0x03943BAC LDR X8, [X19]
	0x03943BB0 MOV V0.16B, V10.16B
	0x03943BB4 MOV V1.16B, V11.16B
	0x03943BB8 MOV V2.16B, V9.16B
	0x03943BBC LDR X8, [X8 + 0xB8]
	0x03943BC0 MOV V3.16B, V8.16B
	0x03943BC4 MOV X0, X31
	0x03943BC8 LDP S4, S5, [X8 + 0x3C]
	0x03943BCC LDR V6, [X8 + 0x44]
	0x03943BD0 BL 0x3C2A9FC
	0x03943BD4 ADRP X20, 0xA95000
	0x03943BD8 LDRB W8, [X20 + 0xA1F]
	0x03943BDC MOV V12.16B, V0.16B
	0x03943BE0 MOV V13.16B, V1.16B
	0x03943BE4 MOV V14.16B, V2.16B
	0x03943BE8 CBNZ W8, 0x3943C00

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xA9F000
	015 Move W8, [X20+2402]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x80D000
	022 Move X0, [X0]
	023 Call 0x1C17CF4
	024 Move X0, 0x80D000
	025 Move X0, [X0+8]
	026 Call 0x1C17CF4
	027 Move X0, 0x80D000
	028 Move X0, [X0+16]
	029 Call 0x1C17CF4
	030 Move X0, 0x80D000
	031 Move X0, [X0+24]
	032 Call 0x1C17CF4
	033 Move X0, 0x80D000
	034 Move X0, [X0+32]
	035 Call 0x1C17CF4
	036 Move X0, 0x80D000
	037 Move X0, [X0+40]
	038 Call 0x1C17CF4
	039 Move X0, 0x80C000
	040 Move X0, [X0+2808]
	041 Call 0x1C17CF4
	042 Move X0, 0x80C000
	043 Move X0, [X0+2816]
	044 Call 0x1C17CF4
	045 Move X0, 0x80D000
	046 Move X0, [X0+48]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2402], W8
	050 Compare X19, 0
	051 JumpIfEqual {268}
	052 Move X8, 0x80D000
	053 Move X8, [X8+24]
	054 Move X20, 0x80D000
	055 Move X0, [X8]
	056 Move X20, [X20+16]
	057 Call 0x1C17F10
	058 Move X1, [X20]
	059 Move X20, X0
	060 Call Dictionary`2<Int32, Object>..ctor, X0
	061 Move [X31+8], X31
	062 Move W8, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X24, 0x80C000
	065 Move X25, 0x80D000
	066 Move X26, 0x80D000
	067 Move X27, 0x80D000
	068 Move X28, 0x80D000
	069 Move X29, 0x80D000
	070 Move X24, [X24+2816]
	071 Move X25, [X25+8]
	072 Move X26, [X26+32]
	073 Move X27, [X27+48]
	074 Move X28, [X28+40]
	075 Move X29, [X29]
	076 Move W21, W31
	077 Move X2, [X24]
	078 Move X0, X19
	079 Move W1, W21
	080 Call List`1<Object>.get_Item, X0, X1
	081 Compare X0, 0
	082 JumpIfEqual {267}
	083 Compare X20, 0
	084 JumpIfEqual {267}
	085 Move W1, [X0+24]
	086 Move X3, [X25]
	087 Add X2, X31, 8
	088 Move X0, X20
	089 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {116}
	094 Move X2, [X24]
	095 Move X22, [X31+8]
	096 Move X0, X19
	097 Move W1, W21
	098 Call List`1<Object>.get_Item, X0, X1
	099 Compare X22, 0
	100 JumpIfEqual {267}
	101 Move W10, [X22+28]
	102 Move X8, [X22+16]
	103 Move X9, [X26]
	104 Add W10, W10, 1
	105 Move [X22+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {267}
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Move W11, [X8+24]
	110 Move X1, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add W9, W10, 1
	113 Add X8, X8, X10
	114 Move [X22+24], W9
	115 Move [X8+32], X1
	116 Move X2, [X24]
	117 Move X0, X19
	118 Move W1, W21
	119 Call List`1<Object>.get_Item, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {267}
	122 Move W22, [X0+24]
	123 Move X0, [X27]
	124 Call 0x1C17F10
	125 Move X1, [X28]
	126 Move X23, X0
	127 Call List`1<Object>..ctor, X0
	128 Move X2, [X24]
	129 Move X0, X19
	130 Move W1, W21
	131 Call List`1<Object>.get_Item, X0, X1
	132 Compare X23, 0
	133 JumpIfEqual {267}
	134 Move W10, [X23+28]
	135 Move X8, [X23+16]
	136 Move X9, [X26]
	137 Add W10, W10, 1
	138 Move [X23+28], W10
	139 Compare X8, 0
	140 JumpIfEqual {267}
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Move W11, [X8+24]
	143 Move X1, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W9, W10, 1
	146 Add X8, X8, X10
	147 Move [X23+24], W9
	148 Move [X8+32], X1
	149 Move X8, [X9+32]
	150 Move X0, X22
	151 Move X8, [X8+192]
	152 Move X2, [X8+112]
	153 Call List`1<Object>.AddWithResize, X0, X1
	154 Move X8, [X9+32]
	155 Move X0, X23
	156 Move X8, [X8+192]
	157 Move X2, [X8+112]
	158 Call List`1<Object>.AddWithResize, X0, X1
	159 Move X3, [X29]
	160 Move X0, X20
	161 Move W1, W22
	162 Move X2, X23
	163 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	164 Move X2, [X24]
	165 Move X0, X19
	166 Move W1, W21
	167 Call List`1<Object>.get_Item, X0, X1
	168 Compare X0, 0
	169 JumpIfEqual {267}
	170 Move W1, [X0+28]
	171 Move X3, [X25]
	172 Add X2, X31, 8
	173 Move X0, X20
	174 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {201}
	179 Move X2, [X24]
	180 Move X22, [X31+8]
	181 Move X0, X19
	182 Move W1, W21
	183 Call List`1<Object>.get_Item, X0, X1
	184 Compare X22, 0
	185 JumpIfEqual {267}
	186 Move W10, [X22+28]
	187 Move X8, [X22+16]
	188 Move X9, [X26]
	189 Add W10, W10, 1
	190 Move [X22+28], W10
	191 Compare X8, 0
	192 JumpIfEqual {267}
	193 NotImplemented "Instruction LDRSW not yet implemented."
	194 Move W11, [X8+24]
	195 Move X1, X0
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X22+24], W9
	200 Move [X8+32], X1
	201 Move X2, [X24]
	202 Move X0, X19
	203 Move W1, W21
	204 Call List`1<Object>.get_Item, X0, X1
	205 Compare X0, 0
	206 JumpIfEqual {267}
	207 Move W22, [X0+28]
	208 Move X0, [X27]
	209 Call 0x1C17F10
	210 Move X1, [X28]
	211 Move X23, X0
	212 Call List`1<Object>..ctor, X0
	213 Move X2, [X24]
	214 Move X0, X19
	215 Move W1, W21
	216 Call List`1<Object>.get_Item, X0, X1
	217 Compare X23, 0
	218 JumpIfEqual {267}
	219 Move W10, [X23+28]
	220 Move X8, [X23+16]
	221 Move X9, [X26]
	222 Add W10, W10, 1
	223 Move [X23+28], W10
	224 Compare X8, 0
	225 JumpIfEqual {267}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W11, [X8+24]
	228 Move X1, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add W9, W10, 1
	231 Add X8, X8, X10
	232 Move [X23+24], W9
	233 Move [X8+32], X1
	234 Move X8, [X9+32]
	235 Move X0, X22
	236 Move X8, [X8+192]
	237 Move X2, [X8+112]
	238 Call List`1<Object>.AddWithResize, X0, X1
	239 Move X8, [X9+32]
	240 Move X0, X23
	241 Move X8, [X8+192]
	242 Move X2, [X8+112]
	243 Call List`1<Object>.AddWithResize, X0, X1
	244 Move X3, [X29]
	245 Move X0, X20
	246 Move W1, W22
	247 Move X2, X23
	248 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	249 Move W8, [X19+24]
	250 Add W21, W21, 1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X20
	253 Move X20, [X31+96]
	254 Move X19, [X31+104]
	255 Move X22, [X31+80]
	256 Move X21, [X31+88]
	257 Move X24, [X31+64]
	258 Move X23, [X31+72]
	259 Move X26, [X31+48]
	260 Move X25, [X31+56]
	261 Move X28, [X31+32]
	262 Move X27, [X31+40]
	263 Move X29, [X31+16]
	264 Move X30, [X31+24]
	265 Add X31, X31, 112
	266 Return X0
	267 Call 0x1C17F20
	268 Move X0, 0x7B6000
	269 Move X0, [X0+1320]
	270 Call 0x1C17D08
	271 Call 0x1C17F10
	272 Move X19, X0
	273 Move X0, 0x80D000
	274 Move X0, [X0+56]
	275 Call 0x1C17D08
	276 Move X1, X0
	277 Move X0, X19
	278 Move X2, X31
	279 Call ArgumentNullException..ctor, X0, X1
	280 Move X0, 0x80D000
	281 Move X0, [X0+64]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X19
	285 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<System.Int32> SortCommonIndexesByAdjacency(System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> wings, System.Collections.Generic.HashSet`1<System.Int32> common)

Disassembly:
	0x03943BEC ADRP X0, 0x7B0000
	0x03943BF0 LDR X0, [X0 + 0x5A0]
	0x03943BF4 BL 0x1C16CF4
	0x03943BF8 MOVZ W8, 0x1
	0x03943BFC STRB W8, [X20 + 0xA1F]
	0x03943C00 LDR X8, [X19]
	0x03943C04 MOV V0.16B, V10.16B
	0x03943C08 MOV V1.16B, V11.16B
	0x03943C0C MOV V2.16B, V9.16B
	0x03943C10 LDR X8, [X8 + 0xB8]
	0x03943C14 MOV V3.16B, V8.16B
	0x03943C18 MOV X0, X31
	0x03943C1C STR S10, [X31 + 0x70]
	0x03943C20 LDP S4, S5, [X8 + 0x48]
	0x03943C24 LDR V6, [X8 + 0x50]
	0x03943C28 STR S9, [X31 + 0x68]
	0x03943C2C BL 0x3C2A9FC
	0x03943C30 ADRP X19, 0xA95000
	0x03943C34 LDRB W8, [X19 + 0x784]
	0x03943C38 STR S0, [X31 + 0x60]
	0x03943C3C STR S1, [X31 + 0x58]
	0x03943C40 STR S2, [X31 + 0x48]
	0x03943C44 CBNZ W8, 0x3943C5C
	0x03943C48 ADRP X0, 0x7B0000
	0x03943C4C LDR X0, [X0 + 0x5A8]
	0x03943C50 BL 0x1C16CF4
	0x03943C54 MOVZ W8, 0x1
	0x03943C58 STRB W8, [X19 + 0x784]
	0x03943C5C ADRP X20, 0x7B0000
	0x03943C60 LDR X20, [X20 + 0x5A8]
	0x03943C64 LDR V0, [X31 + 0x50]
	0x03943C68 STR S8, [X31 + 0x64]
	0x03943C6C LDR X0, [X20]
	0x03943C70 FMUL S10, S0, S12
	0x03943C74 LDR V0, [X31 + 0x54]
	0x03943C78 LDR W8, [X0 + 0xE0]
	0x03943C7C FMUL S9, S0, S13
	0x03943C80 CBZ W8, 0x3943C8C
	0x03943C84 MOVZ W8, 0x1
	0x03943C88 B 0x3943C94
	0x03943C8C BL 0x1C16DFC
	0x03943C90 LDRB W8, [X19 + 0x784]
	0x03943C94 LDR V13, [X31 + 0x24]
	0x03943C98 FMUL S10, S10, S10
	0x03943C9C FMUL S9, S9, S9
	0x03943CA0 STR S11, [X31 + 0x6C]
	0x03943CA4 FMUL S8, S13, S14
	0x03943CA8 CBNZ W8, 0x3943CC0
	0x03943CAC ADRP X0, 0x7B0000
	0x03943CB0 LDR X0, [X0 + 0x5A8]
	0x03943CB4 BL 0x1C16CF4
	0x03943CB8 MOVZ W8, 0x1
	0x03943CBC STRB W8, [X19 + 0x784]
	0x03943CC0 LDR V0, [X31 + 0x50]
	0x03943CC4 LDR V1, [X31 + 0x78]
	0x03943CC8 LDR X0, [X20]
	0x03943CCC FADD S12, S10, S9
	0x03943CD0 FMUL S8, S8, S8
	0x03943CD4 FMUL S11, S0, S1
	0x03943CD8 LDR V0, [X31 + 0x54]
	0x03943CDC LDP S14, S1, [X31 + 0x70]
	0x03943CE0 LDR W8, [X0 + 0xE0]
	0x03943CE4 FMUL S9, S13, S15
	0x03943CE8 FMUL S10, S0, S1
	0x03943CEC CBZ W8, 0x3943CF8
	0x03943CF0 MOVZ W8, 0x1
	0x03943CF4 B 0x3943D00
	0x03943CF8 BL 0x1C16DFC
	0x03943CFC LDRB W8, [X19 + 0x784]
	0x03943D00 FMUL S0, S11, S11
	0x03943D04 FMUL S1, S10, S10
	0x03943D08 FADD S8, S8, S12
	0x03943D0C FADD S10, S0, S1
	0x03943D10 FMUL S9, S9, S9
	0x03943D14 CBNZ W8, 0x3943D2C
	0x03943D18 ADRP X0, 0x7B0000
	0x03943D1C LDR X0, [X0 + 0x5A8]
	0x03943D20 BL 0x1C16CF4
	0x03943D24 MOVZ W8, 0x1
	0x03943D28 STRB W8, [X19 + 0x784]
	0x03943D2C LDR X0, [X20]
	0x03943D30 ADRP X19, 0x80A000
	0x03943D34 FSQRT S8, S8
	0x03943D38 FMOV S11, 0.5
	0x03943D3C LDR W8, [X0 + 0xE0]
	0x03943D40 LDR X19, [X19 + 0xA88]
	0x03943D44 FADD S9, S9, S10
	0x03943D48 CBNZ W8, 0x3943D50
	0x03943D4C BL 0x1C16DFC
	0x03943D50 LDR X8, [X31 + 0x80]
	0x03943D54 LDR X0, [X19]
	0x03943D58 FMUL S12, S8, S11
	0x03943D5C FSQRT S15, S9
	0x03943D60 LDR W9, [X8 + 0x14]
	0x03943D64 LDR V13, [X8 + 0x18]
	0x03943D68 ADD W24, W9, 0x1
	0x03943D6C MOV W1, W24
	0x03943D70 STR X9, [X31 + 0x78]
	0x03943D74 BL 0x1C16D6C
	0x03943D78 LDR X8, [X19]
	0x03943D7C MOV X22, X0
	0x03943D80 MOV W1, W24
	0x03943D84 MOV X0, X8
	0x03943D88 BL 0x1C16D6C
	0x03943D8C LDR V10, [X31 + 0x68]
	0x03943D90 MOVZ W8, 0x42B40000
	0x03943D94 FMOV S0, W8
	0x03943D98 FCMP S13, S0
	0x03943D9C MOV X23, X0
	0x03943DA0 STR S13, [X31 + 0x20]
	0x03943DA4 B.PL 0x3943DB4
	0x03943DA8 LDR V11, [X31 + 0x6C]
	0x03943DAC FADD S12, S12, S12
	0x03943DB0 B 0x3943E3C
	0x03943DB4 LDR V11, [X31 + 0x6C]
	0x03943DB8 MOVZ W8, 0x43340000
	0x03943DBC FMOV S0, W8
	0x03943DC0 FCMP S13, S0
	0x03943DC4 B.PL 0x3943DF4
	0x03943DC8 ADRP X8, 0xFFFFFFFFFD1A7000
	0x03943DCC LDR V0, [X8 + 0x104]
	0x03943DD0 FMUL S0, S13, S0
	0x03943DD4 BL 0x3EB1BD0
	0x03943DD8 FABS S0, S0
	0x03943DDC FMOV S1, 1
	0x03943DE0 FMIN S0, S0, S1
	0x03943DE4 FSUB S0, S1, S0
	0x03943DE8 FADD S0, S0, S1
	0x03943DEC FMUL S12, S12, S0
	0x03943DF0 B 0x3943E3C
	0x03943DF4 MOVZ W8, 0x43340000
	0x03943DF8 FMOV S0, W8
	0x03943DFC FCMP S13, S0
	0x03943E00 B.LE 0x3943E3C
	0x03943E04 MOVZ W8, 0xC3340000
	0x03943E08 MOVZ W9, 0x42B40000
	0x03943E0C FMOV S2, W8
	0x03943E10 FADD S2, S13, S2
	0x03943E14 FMOV S3, W9
	0x03943E18 FMOV S0, 1
	0x03943E1C FDIV S2, S2, S3
	0x03943E20 FMOV S1, W31
	0x03943E24 FMIN S3, S2, S0
	0x03943E28 FADD S1, S3, S1
	0x03943E2C FADD S1, S1, S0
	0x03943E30 FCMP S2, 0x0
	0x03943E34 FCSEL S0, S1, S0, PL
	0x03943E38 FDIV S15, S15, S0
	0x03943E3C CMP W24, 0x1
	0x03943E40 B.LT 0x3943F30
	0x03943E44 LDR X8, [X31 + 0x78]
	0x03943E48 MOV W20, W24
	0x03943E4C ADRP X24, 0x7B8000
	0x03943E50 LDR X24, [X24 + 0xF08]
	0x03943E54 LDR V1, [X31 + 0x20]
	0x03943E58 SCVTF S0, W8
	0x03943E5C MOV X19, X31
	0x03943E60 ADD X21, X22, 0x24
	0x03943E64 ADD X25, X23, 0x24
	0x03943E68 ADRP X26, 0xA96000
	0x03943E6C FDIV S8, S1, S0
	0x03943E70 MOVZ W27, 0x1
	0x03943E74 LDRB W8, [X26 + 0x78F]
	0x03943E78 CBNZ W8, 0x3943E88
	0x03943E7C MOV X0, X24
	0x03943E80 BL 0x1C16CF4
	0x03943E84 STRB W27, [X26 + 0x78F]
	0x03943E88 LDR X8, [X24]
	0x03943E8C SCVTF S0, W19
	0x03943E90 FMUL S13, S8, S0
	0x03943E94 ADD X0, X31, 0xA0
	0x03943E98 LDR X8, [X8 + 0xB8]
	0x03943E9C MOV V0.16B, V12.16B
	0x03943EA0 MOV V1.16B, V15.16B
	0x03943EA4 MOV V2.16B, V13.16B
	0x03943EA8 LDP S3, S4, [X8]
	0x03943EAC MOV X1, X31
	0x03943EB0 BL 0x3907B28
	0x03943EB4 CBZ X22, 0x3944590
	0x03943EB8 LDR W8, [X22 + 0x18]
	0x03943EBC CMP X19, X8
	0x03943EC0 B.CS 0x394458C
	0x03943EC4 LDR X9, [X31 + 0x80]
	0x03943EC8 STP S0, S1, [X21 - 0x4]
	0x03943ECC LDRB W8, [X26 + 0x78F]
	0x03943ED0 LDR V9, [X9 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xA9F000
	010 Move X22, 0x80D000
	011 Move W8, [X19+2403]
	012 Move X22, [X22+72]
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {66}
	019 Move X0, 0x80D000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move X0, 0x80D000
	023 Move X0, [X0+88]
	024 Call 0x1C17CF4
	025 Move X0, 0x80D000
	026 Move X0, [X0+96]
	027 Call 0x1C17CF4
	028 Move X0, 0x80D000
	029 Move X0, [X0+104]
	030 Call 0x1C17CF4
	031 Move X0, 0x80D000
	032 Move X0, [X0+112]
	033 Call 0x1C17CF4
	034 Move X0, 0x80D000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0x7B8000
	038 Move X0, [X0+2128]
	039 Call 0x1C17CF4
	040 Move X0, 0x80D000
	041 Move X0, [X0+128]
	042 Call 0x1C17CF4
	043 Move X0, 0x80C000
	044 Move X0, [X0+4064]
	045 Call 0x1C17CF4
	046 Move X0, 0x80D000
	047 Move X0, [X0+136]
	048 Call 0x1C17CF4
	049 Move X0, 0x80D000
	050 Move X0, [X0+144]
	051 Call 0x1C17CF4
	052 Move X0, 0x80D000
	053 Move X0, [X0+152]
	054 Call 0x1C17CF4
	055 Move X0, 0x80D000
	056 Move X0, [X0+72]
	057 Call 0x1C17CF4
	058 Move X0, 0x80D000
	059 Move X0, [X0+160]
	060 Call 0x1C17CF4
	061 Move X0, 0x80C000
	062 Move X0, [X0+2824]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+2403], W8
	066 Move X0, [X22]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X19, X0
	070 Call Object..ctor, X0
	071 Compare X19, 0
	072 JumpIfEqual {211}
	073 Move X8, 0x80D000
	074 Move X8, [X8+112]
	075 Move [X19+16], X21
	076 Move X21, 0x80D000
	077 Move X22, 0x80D000
	078 Move X0, [X8]
	079 Move X23, 0x80D000
	080 Move X21, [X21+152]
	081 Move X22, [X22+104]
	082 Move X23, [X23+160]
	083 Call 0x1C17F10
	084 Move X2, [X21]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	089 Move X2, [X22]
	090 Move X0, X20
	091 Move X1, X21
	092 Call Enumerable.Where, X0, X1
	093 Move X8, [X23]
	094 Move X20, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X23]
	101 Move X9, [X8+184]
	102 Move X25, 0x80D000
	103 Move X24, 0x80D000
	104 Move X21, [X9+8]
	105 Move X25, [X25+88]
	106 Move X24, [X24+96]
	107 Compare X21, 0
	108 JumpIfNotEqual {131}
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {115}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move X8, [X23]
	115 Move X9, 0x80D000
	116 Move X8, [X8+184]
	117 Move X9, [X9+120]
	118 Move X22, [X8]
	119 Move X0, [X9]
	120 Call 0x1C17F10
	121 Move X8, 0x80D000
	122 Move X8, [X8+136]
	123 Move X1, X22
	124 Move X3, X31
	125 Move X21, X0
	126 Move X2, [X8]
	127 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	128 Move X8, [X23]
	129 Move X8, [X8+184]
	130 Move [X8+8], X21
	131 Move X2, [X25]
	132 Move X0, X20
	133 Move X1, X21
	134 Call Enumerable.Select, X0, X1
	135 Move X1, [X24]
	136 Call Enumerable.ToList, X0
	137 Compare X0, 0
	138 JumpIfEqual {211}
	139 Move X8, [X19+16]
	140 Compare X8, 0
	141 JumpIfEqual {211}
	142 Move W9, [X0+24]
	143 Move W8, [X8+32]
	144 Move X20, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, 0x80C000
	147 Move X8, [X8+2824]
	148 Move X0, [X8]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Call WingedEdge.SortEdgesByAdjacency, X0
	155 Move X0, [X23]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X23]
	161 Move X8, [X0+184]
	162 Move X19, [X8+16]
	163 Compare X19, 0
	164 JumpIfNotEqual {186}
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X23]
	170 Move X9, 0x80D000
	171 Move X8, [X0+184]
	172 Move X9, [X9+80]
	173 Move X21, [X8]
	174 Move X0, [X9]
	175 Call 0x1C17F10
	176 Move X8, 0x80D000
	177 Move X8, [X8+144]
	178 Move X1, X21
	179 Move X3, X31
	180 Move X19, X0
	181 Move X2, [X8]
	182 Call Converter`2<Edge, Int32>..ctor, X0, X1, X2
	183 Move X8, [X23]
	184 Move X8, [X8+184]
	185 Move [X8+16], X19
	186 Move X8, 0x80D000
	187 Move X8, [X8+128]
	188 Move X0, X20
	189 Move X1, X19
	190 Move X20, [X31+48]
	191 Move X19, [X31+56]
	192 Move X2, [X8]
	193 Move X22, [X31+32]
	194 Move X21, [X31+40]
	195 Move X24, [X31+16]
	196 Move X23, [X31+24]
	197 Move X30, [X31+64]
	198 Move X25, [X31+72]
	199 Call 0x2131830, X0, X1
	200 Return X0
	201 Move X20, [X31+48]
	202 Move X19, [X31+56]
	203 Move X22, [X31+32]
	204 Move X21, [X31+40]
	205 Move X24, [X31+16]
	206 Move X23, [X31+24]
	207 Move X0, X31
	208 Move X30, [X31+64]
	209 Move X25, [X31+72]
	210 Return X0
	211 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> GetWingedEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Boolean oneWingPerFace = False)

Disassembly:
	0x03943EDC BL 0x1C16CF4
	0x03943EE0 STRB W27, [X26 + 0x78F]
	0x03943EE4 LDR X8, [X24]
	0x03943EE8 FSUB S0, S12, S9
	0x03943EEC FSUB S1, S15, S9
	0x03943EF0 ADD X0, X31, 0xA0
	0x03943EF4 LDR X8, [X8 + 0xB8]
	0x03943EF8 MOV V2.16B, V13.16B
	0x03943EFC MOV X1, X31
	0x03943F00 LDP S3, S4, [X8]
	0x03943F04 BL 0x3907B28
	0x03943F08 CBZ X23, 0x3944590
	0x03943F0C LDR W8, [X23 + 0x18]
	0x03943F10 CMP X19, X8
	0x03943F14 B.CS 0x394458C
	0x03943F18 ADD X19, X19, 0x1
	0x03943F1C STP S0, S1, [X25 - 0x4]
	0x03943F20 ADD X21, X21, 0x8
	0x03943F24 CMP X20, X19
	0x03943F28 ADD X25, X25, 0x8
	0x03943F2C B.NE 0x3943E74
	0x03943F30 ADRP X8, 0x7B4000
	0x03943F34 LDR X8, [X8 + 0x3C0]
	0x03943F38 ADRP X19, 0x7DC000
	0x03943F3C LDR X0, [X8]
	0x03943F40 LDR X19, [X19 + 0x5B8]
	0x03943F44 BL 0x1C16F10
	0x03943F48 LDR X1, [X19]
	0x03943F4C MOV X24, X0
	0x03943F50 BL 0x30CB97C
	0x03943F54 LDR X8, [X31 + 0x78]
	0x03943F58 CMP W8, 0x1
	0x03943F5C B.LT 0x39442C4
	0x03943F60 LDR V8, [X31 + 0x64]
	0x03943F64 LDR V9, [X31 + 0x20]
	0x03943F68 STP X29, X28, [X31 + 0x10]
	0x03943F6C CBZ X22, 0x3944590
	0x03943F70 LDR V0, [X31 + 0x50]
	0x03943F74 LDR V1, [X31 + 0x60]
	0x03943F78 LDR V3, [X31 + 0x48]
	0x03943F7C ADRP X29, 0x7DC000
	0x03943F80 ADD X20, X23, 0x20
	0x03943F84 FMUL S0, S0, S1
	0x03943F88 LDP S1, S2, [X31 + 0x54]
	0x03943F8C FMUL S0, S0, S0
	0x03943F90 ADD X28, X22, 0x20
	0x03943F94 MOV X27, X31
	0x03943F98 FMUL S1, S1, S2
	0x03943F9C LDR V2, [X31 + 0x24]
	0x03943FA0 LDR X29, [X29 + 0xD58]
	0x03943FA4 LDR X8, [X31 + 0x78]
	0x03943FA8 FMUL S1, S1, S1
	0x03943FAC FMUL S2, S2, S3
	0x03943FB0 FADD S0, S0, S1
	0x03943FB4 SUB W9, W8, 0x1
	0x03943FB8 UBFM W8, W8, 0x1F, 0x1E
	0x03943FBC FMUL S2, S2, S2
	0x03943FC0 STR W8, [X31 + 0xC]
	0x03943FC4 ADD X8, X9, 0x1
	0x03943FC8 FADD S0, S2, S0
	0x03943FCC FMOV S1, 0.5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA9F000
	007 Move X22, 0x7B1000
	008 Move W8, [X21+2404]
	009 Move X22, [X22+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7B1000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x80C000
	020 Move X0, [X0+2824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2404], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {55}
	037 Compare X19, 0
	038 JumpIfEqual {73}
	039 Move X8, 0x80C000
	040 Move X8, [X8+2824]
	041 Move X21, [X19+40]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 And W2, W20, 1
	048 Move X0, X19
	049 Move X1, X21
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X0, 0x7B6000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0x80B000
	061 Move X0, [X0+3728]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0x80D000
	068 Move X0, [X0+168]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC
	073 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> GetWingedEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Boolean oneWingPerFace = False)

Disassembly:
	0x03943FD0 STR X9, [X31 + 0x58]
	0x03943FD4 ADD X9, X20, X8, 0x3, LSL
	0x03943FD8 FSQRT S0, S0
	0x03943FDC STP X9, X8, [X31 + 0x40]
	0x03943FE0 ADD X8, X28, X8, 0x3, LSL
	0x03943FE4 ADD X9, X9, 0x4
	0x03943FE8 FMUL S0, S0, S1
	0x03943FEC STP X9, X8, [X31 + 0x30]
	0x03943FF0 ADD X8, X8, 0x4
	0x03943FF4 FNEG S12, S0
	0x03943FF8 MOVZ W19, 0x43B40000
	0x03943FFC STR X8, [X31 + 0x28]
	0x03944000 STR S0, [X31 + 0x74]
	0x03944004 LDR W8, [X22 + 0x18]
	0x03944008 CMP X27, X8
	0x0394400C B.CS 0x394458C
	0x03944010 ADD X21, X27, 0x1
	0x03944014 CMP X21, X8
	0x03944018 B.CS 0x394458C
	0x0394401C LDP S0, S1, [X28]
	0x03944020 LDP S2, S3, [X28 + 0x8]
	0x03944024 MOV V4.16B, V12.16B
	0x03944028 BL 0x394398C
	0x0394402C CBZ X23, 0x3944590
	0x03944030 LDR W8, [X23 + 0x18]
	0x03944034 CMP X27, X8
	0x03944038 B.CS 0x394458C
	0x0394403C CMP X21, X8
	0x03944040 B.CS 0x394458C
	0x03944044 LDP S2, S3, [X20]
	0x03944048 LDP S0, S1, [X20 + 0x8]
	0x0394404C MOV V4.16B, V12.16B
	0x03944050 MOV X25, X0
	0x03944054 BL 0x394398C
	0x03944058 FMOV S0, W19
	0x0394405C FCMP S9, S0
	0x03944060 MOV X26, X0
	0x03944064 B.PL 0x39440B0
	0x03944068 CBNZ X27, 0x39440B0
	0x0394406C LDR X8, [X31 + 0x80]
	0x03944070 LDRB W8, [X8 + 0x1C]
	0x03944074 CBZ W8, 0x39440B0
	0x03944078 LDR W8, [X22 + 0x18]
	0x0394407C CBZ W8, 0x394458C
	0x03944080 LDR W8, [X23 + 0x18]
	0x03944084 CBZ W8, 0x394458C
	0x03944088 LDP S0, S1, [X28]
	0x0394408C LDP S2, S3, [X20]
	0x03944090 LDR V4, [X31 + 0x74]
	0x03944094 BL 0x394398C
	0x03944098 CBZ X24, 0x3944590
	0x0394409C LDR X2, [X29]
	0x039440A0 MOV X1, X0
	0x039440A4 MOV X0, X24
	0x039440A8 BL 0x30CC3E4
	0x039440AC B 0x39440B4
	0x039440B0 CBZ X24, 0x3944590
	0x039440B4 LDR X2, [X29]
	0x039440B8 MOV X0, X24
	0x039440BC MOV X1, X25
	0x039440C0 BL 0x30CC3E4
	0x039440C4 LDR X2, [X29]
	0x039440C8 MOV X0, X24
	0x039440CC MOV X1, X26
	0x039440D0 BL 0x30CC3E4
	0x039440D4 FMOV S0, W19
	0x039440D8 FCMP S9, S0
	0x039440DC B.PL 0x394414C
	0x039440E0 LDR X8, [X31 + 0x58]
	0x039440E4 CMP X8, X27
	0x039440E8 B.NE 0x394414C
	0x039440EC LDR X8, [X31 + 0x80]
	0x039440F0 LDRB W8, [X8 + 0x1C]
	0x039440F4 CBZ W8, 0x394414C
	0x039440F8 LDR W8, [X23 + 0x18]
	0x039440FC LDR X9, [X31 + 0x48]
	0x03944100 CMP X9, X8
	0x03944104 B.CS 0x394458C
	0x03944108 LDR W8, [X22 + 0x18]
	0x0394410C CMP X9, X8
	0x03944110 B.CS 0x394458C
	0x03944114 LDR X8, [X31 + 0x30]
	0x03944118 LDR V4, [X31 + 0x74]
	0x0394411C LDR V1, [X8]
	0x03944120 LDR X8, [X31 + 0x40]
	0x03944124 LDR V0, [X8]
	0x03944128 LDR X8, [X31 + 0x38]
	0x0394412C LDR V2, [X8]
	0x03944130 LDR X8, [X31 + 0x28]
	0x03944134 LDR V3, [X8]
	0x03944138 BL 0x394398C
	0x0394413C LDR X2, [X29]
	0x03944140 MOV X1, X0
	0x03944144 MOV X0, X24
	0x03944148 BL 0x30CC3E4
	0x0394414C LDR X8, [X31 + 0x78]
	0x03944150 ADD X28, X28, 0x8
	0x03944154 ADD X20, X20, 0x8
	0x03944158 MOV X27, X21
	0x0394415C CMP X8, X21
	0x03944160 B.NE 0x3944004
	0x03944164 LDR X8, [X31 + 0x78]
	0x03944168 CMP W8, 0x1
	0x0394416C B.LT 0x39442B8
	0x03944170 ADRP X21, 0x7B1000
	0x03944174 LDR X21, [X21 + 0x9B0]
	0x03944178 MOV X27, X31
	0x0394417C ADD X19, X22, 0x2C
	0x03944180 ADD X20, X23, 0x2C
	0x03944184 STR S12, [X31 + 0x60]
	0x03944188 LDR W8, [X22 + 0x18]
	0x0394418C CMP X27, X8
	0x03944190 B.CS 0x394458C
	0x03944194 ADD X9, X27, 0x1
	0x03944198 CMP X9, X8
	0x0394419C B.CS 0x394458C
	0x039441A0 LDR W8, [X23 + 0x18]
	0x039441A4 SUB X9, X9, 0x1
	0x039441A8 CMP X9, X8
	0x039441AC B.CS 0x394458C
	0x039441B0 ADD X27, X9, 0x1
	0x039441B4 CMP X27, X8
	0x039441B8 B.CS 0x394458C
	0x039441BC LDR X0, [X21]
	0x039441C0 LDP S11, S14, [X19 - 0xC]
	0x039441C4 LDP S15, S12, [X19 - 0x4]
	0x039441C8 LDP S8, S13, [X20 - 0xC]
	0x039441CC LDP S9, S10, [X20 - 0x4]
	0x039441D0 MOVZ W1, 0x4
	0x039441D4 BL 0x1C16D6C
	0x039441D8 CBZ X0, 0x3944590
	0x039441DC LDR W8, [X0 + 0x18]
	0x039441E0 LDR V0, [X31 + 0x74]
	0x039441E4 MOV X25, X0
	0x039441E8 CBZ W8, 0x394458C
	0x039441EC CMP W8, 0x1
	0x039441F0 STP S11, S14, [X25 + 0x20]
	0x039441F4 STR S0, [X25 + 0x28]
	0x039441F8 B.EQ 0x394458C
	0x039441FC CMP W8, 0x2
	0x03944200 STP S15, S12, [X25 + 0x2C]
	0x03944204 STR S0, [X25 + 0x34]
	0x03944208 B.LS 0x394458C
	0x0394420C CMP W8, 0x3
	0x03944210 STP S8, S13, [X25 + 0x38]
	0x03944214 STR S0, [X25 + 0x40]
	0x03944218 B.EQ 0x394458C
	0x0394421C STP S9, S10, [X25 + 0x44]
	0x03944220 STR S0, [X25 + 0x4C]
	0x03944224 LDR X0, [X21]
	0x03944228 MOVZ W1, 0x4
	0x0394422C BL 0x1C16D6C
	0x03944230 CBZ X0, 0x3944590
	0x03944234 LDR W8, [X0 + 0x18]
	0x03944238 MOV X26, X0
	0x0394423C CBZ W8, 0x394458C
	0x03944240 STP S15, S12, [X26 + 0x20]
	0x03944244 LDR V12, [X31 + 0x60]
	0x03944248 CMP W8, 0x1
	0x0394424C STR S12, [X26 + 0x28]
	0x03944250 B.EQ 0x394458C
	0x03944254 CMP W8, 0x2
	0x03944258 STP S11, S14, [X26 + 0x2C]
	0x0394425C STR S12, [X26 + 0x34]
	0x03944260 B.LS 0x394458C
	0x03944264 LDP S11, S14, [X31 + 0x6C]
	0x03944268 CMP W8, 0x3
	0x0394426C STP S9, S10, [X26 + 0x38]
	0x03944270 STR S12, [X26 + 0x40]
	0x03944274 B.EQ 0x394458C
	0x03944278 STP S8, S13, [X26 + 0x44]
	0x0394427C STR S12, [X26 + 0x4C]
	0x03944280 LDR X2, [X29]
	0x03944284 MOV X0, X24
	0x03944288 MOV X1, X25
	0x0394428C BL 0x30CC3E4
	0x03944290 LDR X2, [X29]
	0x03944294 MOV X0, X24
	0x03944298 MOV X1, X26
	0x0394429C BL 0x30CC3E4
	0x039442A0 LDR X8, [X31 + 0x78]
	0x039442A4 LDP S8, S10, [X31 + 0x64]
	0x039442A8 ADD X19, X19, 0x8
	0x039442AC ADD X20, X20, 0x8
	0x039442B0 CMP X27, X8
	0x039442B4 B.NE 0x3944188
	0x039442B8 LDP X29, X28, [X31 + 0x10]
	0x039442BC LDR W23, [X31 + 0xC]
	0x039442C0 B 0x39442CC
	0x039442C4 LDR V8, [X31 + 0x64]
	0x039442C8 MOV W23, W31
	0x039442CC LDP S0, S1, [X31 + 0x50]
	0x039442D0 LDR V2, [X31 + 0x24]
	0x039442D4 MOV X0, X31
	0x039442D8 BL 0x390B3D8
	0x039442DC CBZ X24, 0x3944590
	0x039442E0 LDR W8, [X24 + 0x18]
	0x039442E4 ADRP X19, 0x7DB000
	0x039442E8 LDR X19, [X19 + 0x5B0]
	0x039442EC MOV V12.16B, V0.16B
	0x039442F0 MOV V15.16B, V1.16B
	0x039442F4 MOV V13.16B, V2.16B
	0x039442F8 CMP W8, 0x1
	0x039442FC B.LT 0x3944374
	0x03944300 ADRP X20, 0x7B3000
	0x03944304 ADRP X21, 0x80B000
	0x03944308 LDR X20, [X20 + 0x980]
	0x0394430C LDR X21, [X21 + 0xE8]
	0x03944310 MOV W22, W31
	0x03944314 LDR X2, [X20]
	0x03944318 MOV X0, X24
	0x0394431C MOV W1, W22
	0x03944320 BL 0x30CBE84
	0x03944324 MOV V4.16B, V0.16B
	0x03944328 MOV V5.16B, V1.16B
	0x0394432C MOV V6.16B, V2.16B
	0x03944330 MOV V0.16B, V14.16B
	0x03944334 MOV V1.16B, V11.16B
	0x03944338 MOV V2.16B, V10.16B
	0x0394433C MOV V3.16B, V8.16B
	0x03944340 MOV X0, X31
	0x03944344 BL 0x3C2A9FC
	0x03944348 LDR X2, [X21]
	0x0394434C FMUL S0, S12, S0
	0x03944350 FMUL S1, S15, S1
	0x03944354 FMUL S2, S13, S2
	0x03944358 MOV X0, X24
	0x0394435C MOV W1, W22
	0x03944360 BL 0x30CBEE4
	0x03944364 LDR W8, [X24 + 0x18]
	0x03944368 ADD W22, W22, 0x1
	0x0394436C CMP W22, W8
	0x03944370 B.LT 0x3944314
	0x03944374 LDR X1, [X19]
	0x03944378 MOV X0, X24
	0x0394437C BL 0x30CE118
	0x03944380 CBZ X29, 0x3944590
	0x03944384 MOV X1, X0
	0x03944388 MOV X0, X29
	0x0394438C MOV X2, X31
	0x03944390 BL 0x39191DC
	0x03944394 LDR X8, [X31 + 0x80]
	0x03944398 LDRB W8, [X8 + 0x1D]
	0x0394439C CBZ W8, 0x3944400
	0x039443A0 LDR V1, [X31 + 0x20]
	0x039443A4 MOVZ W8, 0x43B40000
	0x039443A8 FMOV S0, W8
	0x039443AC FCMP S1, S0
	0x039443B0 B.PL 0x39443C0
	0x039443B4 LDR X8, [X31 + 0x80]
	0x039443B8 LDRB W8, [X8 + 0x1C]
	0x039443BC B 0x39443C4
	0x039443C0 MOV W8, W31
	0x039443C4 CMP W8, W23
	0x039443C8 B.GE 0x3944400
	0x039443CC LDR X9, [X29 + 0x28]
	0x039443D0 CBZ X9, 0x3944590
	0x039443D4 LDR W10, [X9 + 0x18]
	0x039443D8 MOVZ W11, 0x1
	0x039443DC CMP W8, W10
	0x039443E0 B.CS 0x394458C
	0x039443E4 ADD X12, X9, W8, 0x3, SXTW
	0x039443E8 LDR X12, [X12 + 0x20]
	0x039443EC CBZ X12, 0x3944590
	0x039443F0 ADD W8, W8, 0x1
	0x039443F4 CMP W23, W8
	0x039443F8 STR W11, [X12 + 0x18]
	0x039443FC B.NE 0x39443DC
	0x03944400 FMUL S0, S12, S15
	0x03944404 FMUL S0, S13, S0
	0x03944408 FCMP S0, 0x0
	0x0394440C B.PL 0x3944454
	0x03944410 LDR X19, [X29 + 0x28]
	0x03944414 CBZ X19, 0x3944590
	0x03944418 LDR W8, [X19 + 0x18]
	0x0394441C CMP W8, 0x1
	0x03944420 B.LT 0x3944454
	0x03944424 MOV W20, W31
	0x03944428 CMP W20, W8
	0x0394442C B.CS 0x394458C
	0x03944430 ADD X8, X19, W20, 0x3, SXTW
	0x03944434 LDR X0, [X8 + 0x20]
	0x03944438 CBZ X0, 0x3944590
	0x0394443C MOV X1, X31
	0x03944440 BL 0x3900E24
	0x03944444 LDR W8, [X19 + 0x18]
	0x03944448 ADD W20, W20, 0x1
	0x0394444C CMP W20, W8
	0x03944450 B.LT 0x3944428
	0x03944454 MOV X0, X29
	0x03944458 MOV X1, X31
	0x0394445C BL 0x3912CAC
	0x03944460 CBZ X0, 0x3944590
	0x03944464 MOV X1, X31
	0x03944468 BL 0x3C18F3C
	0x0394446C MOV X22, X0
	0x03944470 MOV X0, X29
	0x03944474 MOV X1, X31
	0x03944478 BL 0x3C32E90
	0x0394447C MOV X23, X0
	0x03944480 MOV X0, X29
	0x03944484 MOV X1, X31
	0x03944488 BL 0x3912CAC
	0x0394448C CBZ X0, 0x3944590
	0x03944490 ADD X8, X31, 0xA8
	0x03944494 MOV X1, X31
	0x03944498 BL 0x3C17768
	0x0394449C CBZ X23, 0x3944590
	0x039444A0 LDP S1, S0, [X31 + 0xAC]
	0x039444A4 LDR V3, [X31 + 0xA8]
	0x039444A8 ADRP X19, 0x80A000
	0x039444AC LDR X19, [X19 + 0xF88]
	0x039444B0 FNEG S2, S0
	0x039444B4 FNEG S1, S1
	0x039444B8 FNEG S0, S3
	0x039444BC MOV X0, X23
	0x039444C0 MOV X1, X31
	0x039444C4 BL 0x3C40610
	0x039444C8 LDR X0, [X19]
	0x039444CC MOV V12.16B, V0.16B
	0x039444D0 MOV V13.16B, V1.16B
	0x039444D4 MOV V14.16B, V2.16B
	0x039444D8 LDR W8, [X0 + 0xE0]
	0x039444DC CBNZ W8, 0x39444E4
	0x039444E0 BL 0x1C16DFC
	0x039444E4 MOV X0, X29
	0x039444E8 MOV X1, X22
	0x039444EC MOV V0.16B, V12.16B
	0x039444F0 MOV V1.16B, V13.16B
	0x039444F4 MOV V2.16B, V14.16B
	0x039444F8 BL 0x3940A74
	0x039444FC MOVZ W1, 0x1F
	0x03944500 MOV X0, X29
	0x03944504 MOV X2, X31
	0x03944508 BL 0x3919D94
	0x0394450C LDR X0, [X31 + 0x80]
	0x03944510 LDP S0, S1, [X31 + 0x50]
	0x03944514 LDR V2, [X31 + 0x24]
	0x03944518 LDR V3, [X31 + 0x70]
	0x0394451C LDR X8, [X0]
	0x03944520 ADD X2, X31, 0xA8
	0x03944524 MOV X1, X29
	0x03944528 MOV V4.16B, V11.16B
	0x0394452C LDR X9, [X8 + 0x178]
	0x03944530 STP X31, X31, [X31 + 0xA8]
	0x03944534 STR X31, [X31 + 0xB8]
	0x03944538 LDR X3, [X8 + 0x180]
	0x0394453C ADD X8, X31, 0x88
	0x03944540 MOV V5.16B, V10.16B
	0x03944544 MOV V6.16B, V8.16B
	0x03944548 BLR X9
	0x0394454C LDR X8, [X31 + 0x98]
	0x03944550 LDUR V0, [X31 + 0x88]
	0x03944554 LDP X20, X19, [X31 + 0x150]
	0x03944558 LDP X22, X21, [X31 + 0x140]
	0x0394455C STR X8, [X28 + 0x10]
	0x03944560 STR V0, [X28]
	0x03944564 LDP X24, X23, [X31 + 0x130]
	0x03944568 LDP X26, X25, [X31 + 0x120]
	0x0394456C LDP X28, X27, [X31 + 0x110]
	0x03944570 LDP X29, X30, [X31 + 0x100]
	0x03944574 LDP D9, D8, [X31 + 0xF0]
	0x03944578 LDP D11, D10, [X31 + 0xE0]
	0x0394457C LDP D13, D12, [X31 + 0xD0]
	0x03944580 LDP D15, D14, [X31 + 0xC0]
	0x03944584 ADD X31, X31, 0x160
	0x03944588 RET
	0x0394458C BL 0x1C16F28
	0x03944590 BL 0x1C16F20
	0x03944594 MOVZ X8, 0xCCCD
	0x03944598 MOVK X8, 0x3DCC0000
	0x0394459C MOVK X8, 0x5
	0x039445A0 MOVZ W9, 0x43340000
	0x039445A4 MOVZ W10, 0x101
	0x039445A8 MOV X1, X31
	0x039445AC STR X8, [X0 + 0x10]
	0x039445B0 STR W9, [X0 + 0x18]
	0x039445B4 STRH W10, [X0 + 0x1C]
	0x039445B8 B 0x33BDD8C
	0x039445BC MOV X1, X31
	0x039445C0 B 0x33BDD8C
	0x039445C4 STP X30, X21, [X31 - 0x20]!
	0x039445C8 STP X20, X19, [X31 + 0x10]
	0x039445CC ADRP X21, 0xA9D000
	0x039445D0 LDRB W8, [X21 + 0x96C]
	0x039445D4 MOV X19, X1
	0x039445D8 MOV X20, X0
	0x039445DC TBNZ X8, 0x0, 0x39445F4
	0x039445E0 ADRP X0, 0x80B000
	0x039445E4 LDR X0, [X0 + 0xF0]
	0x039445E8 BL 0x1C16CF4
	0x039445EC MOVZ W8, 0x1
	0x039445F0 STRB W8, [X21 + 0x96C]
	0x039445F4 CBZ X19, 0x3944644
	0x039445F8 ADRP X8, 0x80B000
	0x039445FC LDR X8, [X8 + 0xF0]
	0x03944600 LDR X9, [X19]
	0x03944604 LDR X8, [X8]
	0x03944608 LDRB W11, [X9 + 0x130]
	0x0394460C LDRB W10, [X8 + 0x130]
	0x03944610 CMP W11, W10
	0x03944614 B.CC 0x3944644
	0x03944618 LDR X9, [X9 + 0xC8]
	0x0394461C ADD X9, X9, X10, 0x3, LSL
	0x03944620 LDUR X9, [X9 - 0x8]
	0x03944624 CMP X9, X8
	0x03944628 B.NE 0x3944644
	0x0394462C LDR W8, [X19 + 0x10]
	0x03944630 STR W8, [X20 + 0x10]
	0x03944634 LDR V0, [X19 + 0x14]
	0x03944638 STR S0, [X20 + 0x14]
	0x0394463C LDRB W8, [X19 + 0x18]
	0x03944640 STRB W8, [X20 + 0x18]
	0x03944644 LDP X20, X19, [X31 + 0x10]
	0x03944648 LDP X30, X21, [X31], #0x20
	0x0394464C RET
	0x03944650 SUB X31, X31, 0x90
	0x03944654 STP D11, D10, [X31 + 0x40]
	0x03944658 STP D9, D8, [X31 + 0x50]
	0x0394465C STP X30, X23, [X31 + 0x60]
	0x03944660 STP X22, X21, [X31 + 0x70]
	0x03944664 STP X20, X19, [X31 + 0x80]
	0x03944668 ADRP X23, 0xA94000
	0x0394466C LDRB W9, [X23 + 0x786]
	0x03944670 MOV X19, X2
	0x03944674 MOV V8.16B, V6.16B
	0x03944678 MOV V9.16B, V5.16B
	0x0394467C MOV V10.16B, V4.16B
	0x03944680 MOV V11.16B, V3.16B
	0x03944684 MOV X22, X1
	0x03944688 MOV X21, X0
	0x0394468C MOV X20, X8
	0x03944690 CBNZ W9, 0x39446A8
	0x03944694 ADRP X0, 0x7AF000
	0x03944698 LDR X0, [X0 + 0x5A0]
	0x0394469C BL 0x1C16CF4
	0x039446A0 MOVZ W8, 0x1
	0x039446A4 STRB W8, [X23 + 0x786]
	0x039446A8 ADRP X8, 0x7AF000
	0x039446AC LDR X8, [X8 + 0x5A0]
	0x039446B0 MOV V0.16B, V11.16B
	0x039446B4 MOV V1.16B, V10.16B
	0x039446B8 MOV V2.16B, V9.16B
	0x039446BC LDR X8, [X8]
	0x039446C0 MOV V3.16B, V8.16B
	0x039446C4 MOV X0, X31
	0x039446C8 LDR X8, [X8 + 0xB8]
	0x039446CC LDP S4, S5, [X8 + 0x18]
	0x039446D0 LDR V6, [X8 + 0x20]
	0x039446D4 BL 0x3C2A9FC
	0x039446D8 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+20], W2
	015 Move X21, 0xA9F000
	016 Move X20, 0x7B1000
	017 Move W8, [X21+2405]
	018 Move X20, [X20+1432]
	019 Move X24, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0x80C000
	026 Move X0, [X0+176]
	027 Call 0x1C17CF4
	028 Move X0, 0x80C000
	029 Move X0, [X0+184]
	030 Call 0x1C17CF4
	031 Move X0, 0x80C000
	032 Move X0, [X0+192]
	033 Call 0x1C17CF4
	034 Move X0, 0x80A000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move X0, 0x7B0000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0x80A000
	041 Move X0, [X0+3504]
	042 Call 0x1C17CF4
	043 Move X0, 0x80A000
	044 Move X0, [X0+3512]
	045 Call 0x1C17CF4
	046 Move X0, 0x7B0000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0x80C000
	050 Move X0, [X0+32]
	051 Call 0x1C17CF4
	052 Move X0, 0x80C000
	053 Move X0, [X0+40]
	054 Call 0x1C17CF4
	055 Move X0, 0x80B000
	056 Move X0, [X0+4064]
	057 Call 0x1C17CF4
	058 Move X0, 0x80B000
	059 Move X0, [X0+4072]
	060 Call 0x1C17CF4
	061 Move X0, 0x80C000
	062 Move X0, [X0+48]
	063 Call 0x1C17CF4
	064 Move X0, 0x7B0000
	065 Move X0, [X0+1432]
	066 Call 0x1C17CF4
	067 Move X0, 0x80B000
	068 Move X0, [X0+2824]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+2405], W8
	072 Move X0, [X20]
	073 Move [X31+56], X31
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X19
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Equality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {406}
	086 Compare X19, 0
	087 JumpIfEqual {405}
	088 Move X20, 0x80C000
	089 Move X21, 0x80C000
	090 Move X25, 0x80B000
	091 Move X20, [X20+48]
	092 Move X21, [X21+40]
	093 Move X25, [X25+2824]
	094 Move X0, X19
	095 Move X1, X31
	096 Call ProBuilderMesh.get_sharedVertexLookup, X0
	097 Move X8, [X20]
	098 Move X22, X0
	099 Move X0, X8
	100 Call 0x1C17F10
	101 Move X1, [X21]
	102 Move [X31+8], X0
	103 Call List`1<Object>..ctor, X0
	104 Move X0, [X25]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X25]
	110 Move X23, X25
	111 Move X8, [X0+184]
	112 Move X0, [X8]
	113 Compare X0, 0
	114 JumpIfEqual {405}
	115 Move X8, 0x80C000
	116 Move X8, [X8+184]
	117 Move X1, [X8]
	118 Call Dictionary`2<Edge, Object>.Clear, X0
	119 Compare X24, 0
	120 JumpIfEqual {405}
	121 Move X10, 0x80A000
	122 Move X8, [X24]
	123 Move X10, [X10+3504]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X10]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X24
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X24
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move [X31], X0
	145 Compare X0, 0
	146 JumpIfEqual {424}
	147 Move X8, [X31]
	148 Move X10, 0x7B0000
	149 Move X8, [X8]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move X10, [X10+3608]
	152 Move X1, [X10]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, [X31]
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, [X31]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {349}
	175 Move X8, [X31]
	176 Move X10, 0x80A000
	177 Move X8, [X8]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X10, [X10+3512]
	180 Move X1, [X10]
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, [X31]
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, [X31]
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move [X31+24], X0
	200 Move X0, [X23]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, [X31+24]
	206 Call WingedEdge.SortEdgesByAdjacency, X0
	207 Move X24, X0
	208 Compare X0, 0
	209 JumpIfEqual {404}
	210 Move W8, [X24+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X21, X31
	213 Move X19, X31
	214 Move W25, W31
	215 Subtract W20, W31, W8
	216 Move X8, 0x80B000
	217 Move X8, [X8+4072]
	218 Move X2, [X8]
	219 Move X0, X24
	220 Move W1, W25
	221 Call List`1<Edge>.get_Item, X0, X1
	222 Move X27, X0
	223 Move X0, [X23]
	224 Call 0x1C17F10
	225 Move X26, X0
	226 Move X1, X31
	227 Call Object..ctor, X0
	228 Compare X22, 0
	229 JumpIfEqual {395}
	230 Move X29, 0x80A000
	231 Move X29, [X29+3200]
	232 Move X2, [X29]
	233 Move X0, X22
	234 Move W1, W27
	235 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	236 Move X2, [X29]
	237 Move W28, W0
	238 Move X29, X27
	239 ShiftRight X29, 32
	240 And X29, X29, 0x7FFFFFFF
	241 Move X0, X22
	242 Move W1, W29
	243 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	244 Move W2, W0
	245 Move [X31+32], X31
	246 Move [X31+40], X31
	247 Add X0, X31, 32
	248 Move W1, W28
	249 Move W3, W27
	250 Move W4, W29
	251 Move X5, X31
	252 Call EdgeLookup..ctor, X0, X1, X2, X3, X4
	253 Compare X26, 0
	254 JumpIfEqual {397}
	255 Move V0, [X31+2]
	256 Move X8, [X31+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CSEL not yet implemented."
	259 Move [X26+1], V0
	260 Move [X26+32], X8
	261 Compare W25, 0
	262 JumpIfEqual {267}
	263 Move [X26+48], X19
	264 Compare X19, 0
	265 JumpIfEqual {398}
	266 Move [X19+40], X26
	267 Add W8, W20, W25
	268 Add W31, W8, 1
	269 Move [X26+40], X21
	270 Compare X21, 0
	271 JumpIfEqual {403}
	272 Move [X21+48], X26
	273 Move X0, [X23]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {279}
	277 Call 0x1C17DFC
	278 Move X0, [X23]
	279 Move X8, [X0+184]
	280 Move X0, [X8]
	281 Compare X0, 0
	282 JumpIfEqual {396}
	283 Move X8, 0x80C000
	284 Move X1, [X26+24]
	285 Move X8, [X8+192]
	286 Move X3, [X8]
	287 Add X2, X31, 56
	288 Call Dictionary`2<Edge, Object>.TryGetValue, X0, X1, X2
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {298}
	293 Move X8, [X31+56]
	294 Compare X8, 0
	295 JumpIfEqual {400}
	296 Move [X8+56], X26
	297 Move [X26+56], X8
	298 Move [X26+56], X31
	299 Move X0, [X23]
	300 Move W8, [X0+224]
	301 Compare W8, 0
	302 JumpIfNotEqual {305}
	303 Call 0x1C17DFC
	304 Move X0, [X23]
	305 Move X8, [X0+184]
	306 Move X0, [X8]
	307 Compare X0, 0
	308 JumpIfEqual {401}
	309 Move X8, 0x80C000
	310 Move X1, [X26+24]
	311 Move X8, [X8+176]
	312 Move X3, [X8]
	313 Move X2, X26
	314 Call Dictionary`2<Edge, Object>.Add, X0, X1, X2
	315 Compare W25, 0
	316 JumpIfEqual {322}
	317 Move W8, [X31+20]
	318 Move TEMP, X8
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfEqual {346}
	322 Move X0, [X31+8]
	323 Compare X0, 0
	324 JumpIfEqual {402}
	325 Move X9, 0x80C000
	326 Move W10, [X0+28]
	327 Move X8, [X0+16]
	328 Move X9, [X9+32]
	329 Add W10, W10, 1
	330 Move X9, [X9]
	331 Move [X0+28], W10
	332 Compare X8, 0
	333 JumpIfEqual {399}
	334 NotImplemented "Instruction LDRSW not yet implemented."
	335 Move W11, [X8+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W9, W10, 1
	338 Add X8, X8, X10
	339 Move [X0+24], W9
	340 Move [X8+32], X26
	341 Move X8, [X9+32]
	342 Move X8, [X8+192]
	343 Move X2, [X8+112]
	344 Move X1, X26
	345 Call List`1<Object>.AddWithResize, X0, X1
	346 Add W25, W25, 1
	347 Add W31, W20, W25
	348 Move X19, X26
	349 Move X22, X31
	350 Move X8, [X31]
	351 Compare X8, 0
	352 JumpIfEqual {378}
	353 Move X8, [X8]
	354 Move X10, 0x7B0000
	355 NotImplemented "Instruction LDRH not yet implemented."
	356 Move X10, [X10+3584]
	357 Move X1, [X10]
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move X19, [X31]
	367 Move W2, W31
	368 Move X0, X19
	369 Call 0x1C5D788
	370 NotImplemented "Instruction LDRSW not yet implemented."
	371 Move X19, [X31]
	372 Add X8, X8, X9
	373 Add X0, X8, 312
	374 Move X8, [X0]
	375 Move X1, [X0+8]
	376 Move X0, X19
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Compare X22, 0
	379 JumpIfNotEqual {425}
	380 Move X0, [X31+8]
	381 Move X20, [X31+144]
	382 Move X19, [X31+152]
	383 Move X22, [X31+128]
	384 Move X21, [X31+136]
	385 Move X24, [X31+112]
	386 Move X23, [X31+120]
	387 Move X26, [X31+96]
	388 Move X25, [X31+104]
	389 Move X28, [X31+80]
	390 Move X27, [X31+88]
	391 Move X29, [X31+64]
	392 Move X30, [X31+72]
	393 Add X31, X31, 160
	394 Return X0
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Move X0, 0x7B5000
	407 Move X0, [X0+1320]
	408 Call 0x1C17D08
	409 Call 0x1C17F10
	410 Move X19, X0
	411 Move X0, 0x80A000
	412 Move X0, [X0+3728]
	413 Call 0x1C17D08
	414 Move X1, X0
	415 Move X0, X19
	416 Move X2, X31
	417 Call ArgumentNullException..ctor, X0, X1
	418 Move X0, 0x80C000
	419 Move X0, [X0+200]
	420 Call 0x1C17D08
	421 Move X1, X0
	422 Move X0, X19
	423 Call 0x1C17DEC
	424 Call 0x1C17F20
	425 Move X0, X22
	426 Call 0x1C17F18
	427 Move X21, X0
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X21
	430 Call 0x3EB2AD0
	431 Move X22, [X0]
	432 Call 0x3EB2AE0
	433 Move X22, X31
	434 Move X21, X0
	435 Move X8, [X31]
	436 Compare X8, 0
	437 JumpIfEqual {462}
	438 Move X8, [X31]
	439 Move X10, 0x7B0000
	440 Move X8, [X8]
	441 NotImplemented "Instruction LDRH not yet implemented."
	442 Move X10, [X10+3584]
	443 Move X1, [X10]
	444 Compare X9, 0
	445 JumpIfEqual {452}
	446 Move X10, [X8+176]
	447 Add X10, X10, 8
	448 NotImplemented "Instruction LDUR not yet implemented."
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Subtract X9, X9, 1
	451 Add X10, X10, 16
	452 Move X0, [X31]
	453 Move W2, W31
	454 Call 0x1C5D788
	455 NotImplemented "Instruction LDRSW not yet implemented."
	456 Add X8, X8, X9
	457 Add X0, X8, 312
	458 Move X8, [X0]
	459 Move X1, [X0+8]
	460 Move X0, [X31]
	461 NotImplemented "Instruction BLR not yet implemented."
	462 Compare X22, 0
	463 JumpIfNotEqual {466}
	464 Move X0, X21
	465 Call 0x1D2D690
	466 Move X0, X22
	467 Call 0x1C17F18
	468 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x039446DC BL 0x390B3C8
	0x039446E0 STR D0, [X31 + 0x10]
	0x039446E4 STR D1, [X31]
	0x039446E8 CBZ X22, 0x39447B0
	0x039446EC MOV X0, X22
	0x039446F0 MOV X1, X31
	0x039446F4 MOV V8.16B, V2.16B
	0x039446F8 BL 0x3912CAC
	0x039446FC CBZ X0, 0x39447B0
	0x03944700 ADD X8, X31, 0x28
	0x03944704 MOV X1, X31
	0x03944708 BL 0x3C17768
	0x0394470C LDR V1, [X31 + 0x3C]
	0x03944710 LDR V2, [X21 + 0x14]
	0x03944714 LDP V3, V6, [X31]
	0x03944718 LDUR V0, [X31 + 0x34]
	0x0394471C FMOV S4, 1
	0x03944720 FCMP S8, 0x0
	0x03944724 FMIN S4, S8, S4
	0x03944728 FMOV S5, W31
	0x0394472C FADD S1, S1, S1
	0x03944730 FADD S2, S2, S2
	0x03944734 MOV V6.S[1], V3.S[0]
	0x03944738 FMOV V3.2S, 0x0
	0x0394473C FCSEL S4, S4, S5, PL
	0x03944740 FSUB S1, S1, S2
	0x03944744 FMIN V3.2S, V6.2S, V3.2S
	0x03944748 UNIMPLEMENTED
	0x0394474C FADD V0.2S, V0.2S, V0.2S
	0x03944750 FMUL S1, S4, S1
	0x03944754 UNIMPLEMENTED
	0x03944758 BIC V3.8B, V3.8B, V6.8B
	0x0394475C FSUB V0.2S, V0.2S, V4.2S
	0x00000000 INVALID
	0x03944764 MOVI V6.2S, 0x3F, 0x18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA9E000
	007 Move X22, 0x80C000
	008 Move X19, 0x80C000
	009 Move X20, 0x80B000
	010 Move W8, [X21+2406]
	011 Move X22, [X22+208]
	012 Move X19, [X19+216]
	013 Move X20, [X20+2824]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x80C000
	019 Move X0, [X0+216]
	020 Call 0x1C17CF4
	021 Move X0, 0x80C000
	022 Move X0, [X0+208]
	023 Call 0x1C17CF4
	024 Move X0, 0x80B000
	025 Move X0, [X0+2824]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2406], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Edge, Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

