Type: UnityEngine.ProBuilder.SelectionPickerRenderer

Method: UnityEngine.RenderTextureFormat get_renderTextureFormat()

Disassembly:
	0x03926898 MOV X25, X3
	0x0392689C MOV X23, X2
	0x039268A0 MOV X20, X0
	0x039268A4 TBNZ X8, 0x0, 0x392691C
	0x039268A8 ADRP X0, 0x827000
	0x039268AC LDR X0, [X0 + 0xAC8]
	0x039268B0 BL 0x1C16CF4
	0x039268B4 ADRP X0, 0x828000
	0x039268B8 LDR X0, [X0 + 0x9C8]
	0x039268BC BL 0x1C16CF4
	0x039268C0 ADRP X0, 0x828000
	0x039268C4 LDR X0, [X0 + 0x9C0]
	0x039268C8 BL 0x1C16CF4
	0x039268CC ADRP X0, 0x7CF000
	0x039268D0 LDR X0, [X0 + 0x7B0]
	0x039268D4 BL 0x1C16CF4
	0x039268D8 ADRP X0, 0x828000
	0x039268DC LDR X0, [X0 + 0x990]
	0x039268E0 BL 0x1C16CF4
	0x039268E4 ADRP X0, 0x828000
	0x039268E8 LDR X0, [X0 + 0x998]
	0x039268EC BL 0x1C16CF4
	0x039268F0 ADRP X0, 0x828000
	0x039268F4 LDR X0, [X0 + 0x7E8]
	0x039268F8 BL 0x1C16CF4
	0x039268FC ADRP X0, 0x828000
	0x03926900 LDR X0, [X0 + 0x9D0]
	0x03926904 BL 0x1C16CF4
	0x03926908 ADRP X0, 0x828000
	0x0392690C LDR X0, [X0 + 0x9D8]
	0x03926910 BL 0x1C16CF4
	0x03926914 MOVZ W8, 0x1
	0x03926918 STRB W8, [X22 + 0x8C2]
	0x0392691C LDR X0, [X24]
	0x03926920 BL 0x1C16F10
	0x03926924 LDR X1, [X19]
	0x03926928 MOV X24, X0
	0x0392692C BL 0x2AFBB64
	0x03926930 MOVZ W8, 0x2
	0x03926934 STR X24, [X23]
	0x03926938 STR W8, [X31 + 0x1C]
	0x0392693C CBZ X20, 0x3926C84
	0x03926940 ADRP X10, 0x828000
	0x03926944 LDR X8, [X20]
	0x03926948 LDR X10, [X10 + 0x990]
	0x0392694C ADRP X22, 0x7CF000
	0x03926950 LDRH W9, [X8 + 0x12E]
	0x03926954 LDR X1, [X10]
	0x03926958 LDR X22, [X22 + 0x7B0]
	0x0392695C STR X25, [X31 + 0x8]
	0x03926960 CBZ X9, 0x3926984
	0x03926964 LDR X10, [X8 + 0xB0]
	0x03926968 ADD X10, X10, 0x8
	0x0392696C LDUR X11, [X10 - 0x8]
	0x03926970 CMP X11, X1
	0x03926974 B.EQ 0x3926994
	0x03926978 SUBS X9, X9, 0x1
	0x0392697C ADD X10, X10, 0x10
	0x03926980 B.NE 0x392696C
	0x03926984 MOV X0, X20
	0x03926988 MOV W2, W31
	0x0392698C BL 0x1C5C788
	0x03926990 B 0x39269A0
	0x03926994 LDRSW X9, [X10]
	0x03926998 ADD X8, X8, X9, 0x4, LSL
	0x0392699C ADD X0, X8, 0x138
	0x039269A0 LDP X8, X1, [X0]
	0x039269A4 ADRP X19, 0x827000
	0x039269A8 LDR X19, [X19 + 0xAC8]
	0x039269AC MOV X0, X20
	0x039269B0 BLR X8
	0x039269B4 LDR X8, [X22]
	0x039269B8 MOV W22, W0
	0x039269BC MOV W1, W22
	0x039269C0 MOV X0, X8
	0x039269C4 BL 0x1C16D6C
	0x039269C8 CMP W22, 0x1
	0x039269CC STR W22, [X31 + 0x18]
	0x039269D0 STR X0, [X21]
	0x039269D4 B.LT 0x3926B18
	0x039269D8 ADRP X22, 0x828000
	0x039269DC ADRP X24, 0x828000
	0x039269E0 LDR X22, [X22 + 0x7E8]
	0x039269E4 LDR X24, [X24 + 0x9D8]
	0x039269E8 LDR W8, [X31 + 0x18]
	0x039269EC MOV X25, X31
	0x039269F0 MOV W29, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xABC000
	005 Move X19, 0x829000
	006 Move W8, [X20+2233]
	007 Move X19, [X19+2024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x829000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2233], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfEqual {25}
	021 Move X8, [X0+184]
	022 Move W9, [X8+32]
	023 Compare W9, 0
	024 JumpIfNotEqual {95}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move W9, [X0+224]
	029 Move W20, [X8+32]
	030 Compare W9, 0
	031 JumpIfEqual {34}
	032 Compare W20, 0
	033 JumpIfNotEqual {95}
	034 Call 0x1C17DFC
	035 Move X0, [X19]
	036 Move X8, [X0+184]
	037 Compare W20, 0
	038 JumpIfNotEqual {95}
	039 Move W9, 1
	040 Move X20, X31
	041 Move [X8+32], W9
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Move X8, [X0+184]
	048 Move X8, [X8+56]
	049 Compare X8, 0
	050 JumpIfEqual {100}
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Call 0x1C17DFC
	057 Move X8, [X19]
	058 Move X8, [X8+184]
	059 Move X8, [X8+56]
	060 Compare X8, 0
	061 JumpIfEqual {100}
	062 Move W9, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X8, X20
	065 Move W0, [X8+32]
	066 Move X1, X31
	067 Call SystemInfo.SupportsRenderTextureFormat, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {74}
	072 Move X0, [X19]
	073 Add X20, X20, 1
	074 Move X0, [X19]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X19]
	080 Move X8, [X0+184]
	081 Move X9, [X8+56]
	082 Compare X9, 0
	083 JumpIfEqual {100}
	084 Move W10, [X9+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X9, X9, X20
	087 Move W9, [X9+32]
	088 Move [X8+48], W9
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X19]
	094 Move X8, [X0+184]
	095 Move W0, [X8+48]
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Return X0
	100 Call 0x1C17F20
	101 Call 0x1C17F28

Method: UnityEngine.TextureFormat get_textureFormat()

Disassembly:
	0x039269F4 LDR X8, [X20]
	0x039269F8 ADRP X10, 0x828000

ISIL:
	001 Move W0, 5
	002 Return X0

Method: UnityEngine.ProBuilder.SelectionPickerRenderer/ISelectionPickerRenderer get_pickerRenderer()

Disassembly:
	0x039269FC LDRH W9, [X8 + 0x12E]
	0x03926A00 LDR X10, [X10 + 0x998]
	0x03926A04 LDR X1, [X10]
	0x03926A08 CBZ X9, 0x3926A2C
	0x03926A0C LDR X10, [X8 + 0xB0]
	0x03926A10 ADD X10, X10, 0x8
	0x03926A14 LDUR X11, [X10 - 0x8]
	0x03926A18 CMP X11, X1
	0x03926A1C B.EQ 0x3926A3C
	0x03926A20 SUBS X9, X9, 0x1
	0x03926A24 ADD X10, X10, 0x10
	0x03926A28 B.NE 0x3926A14
	0x03926A2C MOV X0, X20
	0x03926A30 MOV W2, W31
	0x03926A34 BL 0x1C5C788
	0x03926A38 B 0x3926A48
	0x03926A3C LDRSW X9, [X10]
	0x03926A40 ADD X8, X8, X9, 0x4, LSL
	0x03926A44 ADD X0, X8, 0x138
	0x03926A48 LDP X8, X2, [X0]
	0x03926A4C MOV X0, X20
	0x03926A50 MOV W1, W25
	0x03926A54 BLR X8
	0x03926A58 LDR X8, [X22]
	0x03926A5C LDR X26, [X23]
	0x03926A60 MOV X27, X0
	0x03926A64 LDR W9, [X8 + 0xE0]
	0x03926A68 CBNZ W9, 0x3926A74
	0x03926A6C MOV X0, X8
	0x03926A70 BL 0x1C16DFC
	0x03926A74 ADD X2, X31, 0x1C
	0x03926A78 MOV X0, X27
	0x03926A7C MOV X1, X26
	0x03926A80 BL 0x39270D0
	0x03926A84 CBZ X27, 0x3926C84
	0x03926A88 MOV X26, X0
	0x03926A8C MOV X0, X27
	0x03926A90 MOV X1, X31
	0x03926A94 BL 0x3C389D4
	0x03926A98 LDR X1, [X24]
	0x03926A9C MOV X2, X31
	0x03926AA0 BL 0x321B938
	0x03926AA4 MOV X28, X0
	0x03926AA8 MOV X0, X27
	0x03926AAC MOV X1, X31
	0x03926AB0 BL 0x3C32E90
	0x03926AB4 LDR X8, [X19]
	0x03926AB8 MOV X27, X0
	0x03926ABC LDR W9, [X8 + 0xE0]
	0x03926AC0 CBNZ W9, 0x3926ACC
	0x03926AC4 MOV X0, X8
	0x03926AC8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xABC000
	005 Move X20, 0x829000
	006 Move W8, [X19+2234]
	007 Move X20, [X20+2024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x829000
	013 Move X0, [X0+2392]
	014 Call 0x1C17CF4
	015 Move X0, 0x829000
	016 Move X0, [X0+2400]
	017 Call 0x1C17CF4
	018 Move X0, 0x829000
	019 Move X0, [X0+2024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2234], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X8, [X8+40]
	031 Compare X8, 0
	032 JumpIfNotEqual {52}
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X8, 0x829000
	038 Move X8, [X8+2400]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call SelectionPickerRendererStandard..ctor, X0
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X0+184]
	051 Move [X8+40], X19
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X0, [X8+40]
	061 Move X30, [X31+32]
	062 Return X0

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face>> PickFacesInRect(UnityEngine.Camera camera, UnityEngine.Rect pickerRect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Int32 renderTextureWidth = -1, System.Int32 renderTextureHeight = -1)

Disassembly:
	0x03924E20 ADRP X0, 0x82A000
	0x03924E24 LDR X0, [X0 + 0x940]
	0x03924E28 BL 0x1C16CF4
	0x03924E2C ADRP X0, 0x7CF000
	0x03924E30 LDR X0, [X0 + 0x5A8]
	0x03924E34 BL 0x1C16CF4
	0x03924E38 ADRP X0, 0x7CF000
	0x03924E3C LDR X0, [X0 + 0x598]
	0x03924E40 BL 0x1C16CF4
	0x03924E44 ADRP X0, 0x82A000
	0x03924E48 LDR X0, [X0 + 0x7E8]
	0x03924E4C BL 0x1C16CF4
	0x03924E50 ADRP X0, 0x82A000
	0x03924E54 LDR X0, [X0 + 0x948]
	0x03924E58 BL 0x1C16CF4
	0x03924E5C ADRP X0, 0x82A000
	0x03924E60 LDR X0, [X0 + 0x950]
	0x03924E64 BL 0x1C16CF4
	0x03924E68 MOVZ W8, 0x1
	0x03924E6C STRB W8, [X26 + 0x8BD]
	0x03924E70 LDR X0, [X25]
	0x03924E74 MOVI V0.2D, 0x0
	0x03924E78 STR X31, [X31 + 0x88]
	0x03924E7C STP V0, V0, [X31 + 0x60]
	0x03924E80 STP X31, X31, [X31 + 0x50]
	0x03924E84 STR X31, [X31 + 0x48]
	0x03924E88 BL 0x1C16F10
	0x03924E8C LDR X1, [X19]
	0x03924E90 MOV X26, X0
	0x03924E94 BL 0x2AA4804
	0x03924E98 ADRP X8, 0x82A000
	0x03924E9C LDR X8, [X8 + 0x7E8]
	0x03924EA0 LDR X0, [X8]
	0x03924EA4 LDR W8, [X0 + 0xE0]
	0x03924EA8 CBNZ W8, 0x3924EB0
	0x03924EAC BL 0x1C16DFC
	0x03924EB0 AND W2, W23, 0x1
	0x03924EB4 ADD X3, X31, 0x88
	0x03924EB8 MOV X0, X24
	0x03924EBC MOV X1, X22
	0x03924EC0 MOV W4, W21
	0x03924EC4 MOV W5, W20
	0x03924EC8 BL 0x3926014
	0x03924ECC CBZ X0, 0x39253B8
	0x03924ED0 ADRP X29, 0x7CF000
	0x03924ED4 LDR X29, [X29 + 0x5A8]
	0x03924ED8 MOV X1, X31
	0x03924EDC MOV X24, X0
	0x03924EE0 BL 0x3C1BB18
	0x03924EE4 ADRP X19, 0xAB4000
	0x03924EE8 LDRB W8, [X19 + 0xA23]
	0x03924EEC MOV X20, X0
	0x03924EF0 CBNZ W8, 0x3924F08
	0x03924EF4 ADRP X0, 0x7CF000
	0x03924EF8 LDR X0, [X0 + 0x5A8]
	0x03924EFC BL 0x1C16CF4
	0x03924F00 MOVZ W8, 0x1
	0x03924F04 STRB W8, [X19 + 0xA23]
	0x03924F08 LDR X0, [X29]
	0x03924F0C FRINTM S12, S11
	0x03924F10 FCVTMS W21, S11
	0x03924F14 LDR W8, [X0 + 0xE0]
	0x03924F18 CBZ W8, 0x3924F34
	0x03924F1C MOVZ W8, 0x7F800000
	0x03924F20 FMOV S0, W8
	0x03924F24 FCMP S12, S0
	0x03924F28 MOVZ W8, 0x80000000
	0x03924F2C CSEL W21, W8, W21, EQ
	0x03924F30 B 0x3924F5C
	0x03924F34 BL 0x1C16DFC
	0x03924F38 LDR X0, [X29]
	0x03924F3C MOVZ W9, 0x7F800000
	0x03924F40 FMOV S0, W9
	0x03924F44 FCMP S12, S0
	0x03924F48 LDR W8, [X0 + 0xE0]
	0x03924F4C MOVZ W9, 0x80000000
	0x03924F50 CSEL W21, W9, W21, EQ
	0x03924F54 CBNZ W8, 0x3924F5C
	0x03924F58 BL 0x1C16DFC
	0x03924F5C MOV W0, W31
	0x03924F60 MOV W1, W21
	0x03924F64 MOV X2, X31
	0x03924F68 BL 0x337EDF0
	0x03924F6C LDR X8, [X24]
	0x03924F70 MOV W25, W0
	0x03924F74 MOV X0, X24
	0x03924F78 LDP X9, X1, [X8 + 0x1A8]
	0x03924F7C BLR X9
	0x03924F80 LDRB W8, [X19 + 0xA23]
	0x03924F84 SCVTF S0, W0
	0x03924F88 FSUB S10, S0, S10
	0x03924F8C CBNZ W8, 0x3924FA4
	0x03924F90 ADRP X0, 0x7CF000
	0x03924F94 LDR X0, [X0 + 0x5A8]
	0x03924F98 BL 0x1C16CF4
	0x03924F9C MOVZ W8, 0x1
	0x03924FA0 STRB W8, [X19 + 0xA23]
	0x03924FA4 LDR X0, [X29]
	0x03924FA8 FSUB S10, S10, S8
	0x03924FAC LDR W8, [X0 + 0xE0]
	0x03924FB0 CBNZ W8, 0x3924FB8
	0x03924FB4 BL 0x1C16DFC
	0x03924FB8 MOVZ W8, 0x7F800000
	0x03924FBC FRINTM S0, S10
	0x03924FC0 FMOV S1, W8
	0x03924FC4 FCVTMS W9, S10
	0x03924FC8 FCMP S0, S1
	0x03924FCC MOVZ W8, 0x80000000
	0x03924FD0 CSEL W1, W8, W9, EQ
	0x03924FD4 MOV W0, W31
	0x03924FD8 MOV X2, X31
	0x03924FDC BL 0x337EDF0
	0x03924FE0 LDR X8, [X24]
	0x03924FE4 MOV W23, W0
	0x03924FE8 MOV X0, X24
	0x03924FEC LDP X9, X1, [X8 + 0x188]
	0x03924FF0 BLR X9
	0x03924FF4 LDR X8, [X24]
	0x03924FF8 MOV W22, W0
	0x03924FFC MOV X0, X24
	0x03925000 LDP X9, X1, [X8 + 0x1A8]
	0x03925004 BLR X9
	0x03925008 LDRB W8, [X19 + 0xA23]
	0x0392500C STR W0, [X31 + 0x20]
	0x03925010 CBNZ W8, 0x3925028
	0x03925014 ADRP X0, 0x7CE000
	0x03925018 LDR X0, [X0 + 0x5A8]
	0x0392501C BL 0x1C16CF4
	0x03925020 MOVZ W8, 0x1
	0x03925024 STRB W8, [X19 + 0xA23]
	0x03925028 LDR X0, [X29]
	0x0392502C FRINTM S10, S9
	0x03925030 FCVTMS W21, S9
	0x03925034 LDR W8, [X0 + 0xE0]
	0x03925038 CBZ W8, 0x3925054
	0x0392503C MOVZ W8, 0x7F800000
	0x03925040 FMOV S0, W8
	0x03925044 FCMP S10, S0
	0x03925048 MOVZ W8, 0x80000000
	0x0392504C CSEL W21, W8, W21, EQ
	0x03925050 B 0x3925088
	0x03925054 BL 0x1C16DFC
	0x03925058 LDRB W8, [X19 + 0xA23]
	0x0392505C MOVZ W9, 0x7F800000
	0x03925060 FMOV S0, W9
	0x03925064 FCMP S10, S0
	0x03925068 MOVZ W9, 0x80000000
	0x0392506C CSEL W21, W9, W21, EQ
	0x03925070 CBNZ W8, 0x3925088
	0x03925074 ADRP X0, 0x7CE000
	0x03925078 LDR X0, [X0 + 0x5A8]
	0x0392507C BL 0x1C16CF4
	0x03925080 MOVZ W8, 0x1
	0x03925084 STRB W8, [X19 + 0xA23]
	0x03925088 LDR X0, [X29]
	0x0392508C STR X26, [X31 + 0x8]
	0x03925090 ADRP X19, 0x7CE000
	0x03925094 MOV W28, W23
	0x03925098 LDR W8, [X0 + 0xE0]
	0x0392509C LDR X19, [X19 + 0x598]
	0x039250A0 CBNZ W8, 0x39250A8
	0x039250A4 BL 0x1C16DFC
	0x039250A8 ADRP X23, 0x829000
	0x039250AC LDR X23, [X23 + 0x918]
	0x039250B0 LDR X0, [X19]
	0x039250B4 ADRP X27, 0x829000
	0x039250B8 LDR X27, [X27 + 0x900]
	0x039250BC MOVZ W8, 0x7F800000
	0x039250C0 LDR W9, [X0 + 0xE0]
	0x039250C4 FRINTM S0, S8
	0x039250C8 FMOV S1, W8
	0x039250CC FCVTMS W10, S8
	0x039250D0 FCMP S0, S1
	0x039250D4 MOVZ W8, 0x80000000
	0x039250D8 CSEL W26, W8, W10, EQ
	0x039250DC CBNZ W9, 0x39250E4
	0x039250E0 BL 0x1C16DFC
	0x039250E4 MOV X0, X24
	0x039250E8 MOV X1, X31
	0x039250EC BL 0x3C39564
	0x039250F0 LDR X0, [X23]
	0x039250F4 BL 0x1C16F10
	0x039250F8 LDR X1, [X27]
	0x039250FC MOV X24, X0
	0x03925100 BL 0x2B1474C
	0x03925104 ADD W8, W28, W26
	0x03925108 STR W8, [X31 + 0x1C]
	0x0392510C SXTW X8, W25
	0x03925110 MOV W19, W28
	0x03925114 ADD W27, W25, W21
	0x03925118 STR X8, [X31 + 0x10]
	0x0392511C MADD W23, W28, W22, W25
	0x03925120 MOVN W26, 0xFF000000
	0x03925124 LDR X0, [X29]
	0x03925128 LDR W8, [X0 + 0xE0]
	0x0392512C CBNZ W8, 0x3925134
	0x03925130 BL 0x1C16DFC
	0x03925134 LDP W0, W1, [X31 + 0x1C]
	0x03925138 MOV X2, X31
	0x0392513C BL 0x337EE94
	0x03925140 LDR X21, [X31 + 0x10]
	0x03925144 MOV W28, W19
	0x03925148 CMP W19, W0
	0x0392514C STR W23, [X31 + 0x24]
	0x03925150 B.GE 0x3925258
	0x03925154 LDR X0, [X29]
	0x03925158 LDR W8, [X0 + 0xE0]
	0x0392515C CBNZ W8, 0x3925164
	0x03925160 BL 0x1C16DFC
	0x03925164 MOV W0, W27
	0x03925168 MOV W1, W22
	0x0392516C MOV X2, X31
	0x03925170 BL 0x337EE94
	0x03925174 CMP X21, W0, SXTW
	0x03925178 B.GE 0x3925244
	0x0392517C CBZ X20, 0x39253B8
	0x03925180 LDR W8, [X20 + 0x18]
	0x03925184 CMP W23, W8
	0x03925188 B.CS 0x39253BC
	0x0392518C ADRP X8, 0x829000
	0x03925190 LDR X8, [X8 + 0x7E8]
	0x03925194 LDR X0, [X8]
	0x03925198 ADD X8, X20, W23, 0x2, SXTW
	0x0392519C LDR W19, [X8 + 0x20]
	0x039251A0 LDR W9, [X0 + 0xE0]
	0x039251A4 CBNZ W9, 0x39251AC
	0x039251A8 BL 0x1C16DFC
	0x039251AC AND W25, W19, 0xFF00
	0x039251B0 BFM W25, W19, 0x10, 0x7
	0x039251B4 BFM W25, W19, 0x10, 0x17
	0x039251B8 CBZ W25, 0x3925238
	0x039251BC CMP W25, W26
	0x039251C0 B.EQ 0x3925238
	0x039251C4 CBZ X24, 0x39253B8
	0x039251C8 ADRP X8, 0x829000
	0x039251CC LDR X8, [X8 + 0x8E0]
	0x039251D0 MOV X0, X24
	0x039251D4 MOV W1, W25
	0x039251D8 LDR X2, [X8]
	0x039251DC BL 0x2B151E0
	0x039251E0 TBZ X0, 0x0, 0x392521C
	0x039251E4 ADRP X8, 0x829000
	0x039251E8 LDR X8, [X8 + 0x908]
	0x039251EC MOV X0, X24
	0x039251F0 MOV W1, W25
	0x039251F4 LDR X2, [X8]
	0x039251F8 BL 0x2B14F58
	0x039251FC ADRP X8, 0x829000
	0x03925200 LDR X8, [X8 + 0x910]
	0x03925204 ADD W2, W0, 0x1
	0x03925208 MOV X0, X24
	0x0392520C MOV W1, W25
	0x03925210 LDR X3, [X8]
	0x03925214 BL 0x2B14FE0
	0x03925218 B 0x3925238
	0x0392521C ADRP X8, 0x829000
	0x03925220 LDR X8, [X8 + 0x8D8]
	0x03925224 MOVZ W2, 0x1
	0x03925228 MOV X0, X24
	0x0392522C MOV W1, W25
	0x03925230 LDR X3, [X8]
	0x03925234 BL 0x2B14FF4
	0x03925238 ADD X21, X21, 0x1
	0x0392523C ADD W23, W23, 0x1
	0x03925240 B 0x3925154
	0x03925244 LDR W23, [X31 + 0x24]
	0x03925248 MOV W19, W28
	0x0392524C ADD W19, W28, 0x1
	0x03925250 ADD W23, W23, W22
	0x03925254 B 0x3925124
	0x03925258 CBZ X24, 0x39253B8
	0x0392525C ADRP X8, 0x829000
	0x03925260 LDR X8, [X8 + 0x8E8]
	0x03925264 MOV X0, X24
	0x03925268 LDR X1, [X8]
	0x0392526C ADD X8, X31, 0x28
	0x03925270 BL 0x2B153CC
	0x03925274 LDUR V0, [X31 + 0x28]
	0x03925278 LDUR V1, [X31 + 0x38]
	0x0392527C ADRP X23, 0x829000
	0x03925280 ADRP X24, 0x829000
	0x03925284 ADRP X25, 0x829000
	0x03925288 STP V0, V1, [X31 + 0x60]
	0x0392528C ADRP X26, 0x828000
	0x03925290 ADRP X27, 0x828000
	0x03925294 ADRP X28, 0x828000
	0x03925298 ADRP X29, 0x829000
	0x0392529C LDR X20, [X31 + 0x88]
	0x039252A0 LDR X19, [X31 + 0x8]
	0x039252A4 LDR X23, [X23 + 0x928]
	0x039252A8 LDR X24, [X24 + 0x8F0]
	0x039252AC LDR X25, [X25 + 0x8F8]
	0x039252B0 LDR X26, [X26 + 0xD48]
	0x039252B4 LDR X27, [X27 + 0xD60]
	0x039252B8 LDR X28, [X28 + 0xD58]
	0x039252BC LDR X29, [X29 + 0x8C0]
	0x039252C0 LDR X1, [X23]
	0x039252C4 ADD X0, X31, 0x60
	0x039252C8 BL 0x2C1CF70
	0x039252CC TBZ X0, 0x0, 0x3925374
	0x039252D0 LDR W8, [X31 + 0x74]
	0x039252D4 CMP W8, 0x2
	0x039252D8 B.CC 0x39252C0
	0x039252DC CBZ X20, 0x39253C0
	0x039252E0 LDR W1, [X31 + 0x70]
	0x039252E4 LDR X3, [X24]
	0x039252E8 ADD X2, X31, 0x50
	0x039252EC MOV X0, X20
	0x039252F0 BL 0x2AFADB8
	0x039252F4 TBZ X0, 0x0, 0x39252C0
	0x039252F8 STR X31, [X31 + 0x48]
	0x039252FC CBZ X19, 0x39253C4
	0x03925300 LDR X1, [X31 + 0x50]
	0x03925304 LDR X3, [X25]
	0x03925308 ADD X2, X31, 0x48
	0x0392530C MOV X0, X19
	0x03925310 BL 0x2AA6B2C
	0x03925314 TBZ X0, 0x0, 0x3925330
	0x03925318 LDR X0, [X31 + 0x48]
	0x0392531C CBZ X0, 0x39253C8
	0x03925320 LDR X1, [X31 + 0x58]
	0x03925324 LDR X2, [X26]
	0x03925328 BL 0x2D9C138
	0x0392532C B 0x39252C0
	0x03925330 LDR X21, [X31 + 0x50]
	0x03925334 LDR X0, [X27]
	0x03925338 BL 0x1C16F10
	0x0392533C LDR X1, [X28]
	0x03925340 MOV X22, X0
	0x03925344 BL 0x2D9B014
	0x03925348 CBZ X22, 0x39253CC
	0x0392534C LDR X1, [X31 + 0x58]
	0x03925350 LDR X2, [X26]
	0x03925354 MOV X0, X22
	0x03925358 BL 0x2D9C138
	0x0392535C LDR X3, [X29]
	0x03925360 MOV X0, X19
	0x03925364 MOV X1, X21
	0x03925368 MOV X2, X22
	0x0392536C BL 0x2AA5098
	0x03925370 B 0x39252C0
	0x03925374 ADRP X8, 0x829000
	0x03925378 LDR X8, [X8 + 0x920]
	0x0392537C ADD X0, X31, 0x60
	0x03925380 LDR X1, [X8]
	0x03925384 BL 0x2C1D070
	0x03925388 MOV X0, X19
	0x0392538C LDP X20, X19, [X31 + 0x100]
	0x03925390 LDP X22, X21, [X31 + 0xF0]
	0x03925394 LDP X24, X23, [X31 + 0xE0]
	0x03925398 LDP X26, X25, [X31 + 0xD0]
	0x0392539C LDP X28, X27, [X31 + 0xC0]
	0x039253A0 LDP X29, X30, [X31 + 0xB0]
	0x039253A4 LDP D9, D8, [X31 + 0xA0]
	0x039253A8 LDP D11, D10, [X31 + 0x90]
	0x039253AC LDR V12, [X31 + 0x80]
	0x039253B0 ADD X31, X31, 0x110
	0x039253B4 RET
	0x039253B8 BL 0x1C16F20
	0x039253BC BL 0x1C16F28
	0x039253C0 BL 0x1C16F20
	0x039253C4 BL 0x1C16F20
	0x039253C8 BL 0x1C16F20
	0x039253CC BL 0x1C16F20
	0x039253D0 B 0x39253F4
	0x039253D4 B 0x39253F4
	0x039253D8 B 0x39253F4
	0x039253DC B 0x39253F4
	0x039253E0 B 0x39253F4
	0x039253E4 B 0x39253F4
	0x039253E8 B 0x39253F4
	0x039253EC B 0x39253F4

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X29
	007 Move [X31+104], X30
	008 Move [X31+112], X28
	009 Move [X31+120], X27
	010 Move [X31+128], X26
	011 Move [X31+136], X25
	012 Move [X31+144], X24
	013 Move [X31+152], X23
	014 Move [X31+160], X22
	015 Move [X31+168], X21
	016 Move [X31+176], X20
	017 Move [X31+184], X19
	018 Move X22, 0xABE000
	019 Move W8, [X22+2235]
	020 Move W19, W3
	021 Move W20, W2
	022 Move X21, X1
	023 Move V8, V3
	024 Move V9, V2
	025 Move V10, V1
	026 Move V11, V0
	027 Move X23, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {82}
	032 Move X0, 0x82B000
	033 Move X0, [X0+2160]
	034 Call 0x1C17CF4
	035 Move X0, 0x82B000
	036 Move X0, [X0+2208]
	037 Call 0x1C17CF4
	038 Move X0, 0x82B000
	039 Move X0, [X0+2216]
	040 Call 0x1C17CF4
	041 Move X0, 0x82B000
	042 Move X0, [X0+2168]
	043 Call 0x1C17CF4
	044 Move X0, 0x82B000
	045 Move X0, [X0+2176]
	046 Call 0x1C17CF4
	047 Move X0, 0x82B000
	048 Move X0, [X0+2088]
	049 Call 0x1C17CF4
	050 Move X0, 0x82B000
	051 Move X0, [X0+2184]
	052 Call 0x1C17CF4
	053 Move X0, 0x82B000
	054 Move X0, [X0+2096]
	055 Call 0x1C17CF4
	056 Move X0, 0x82B000
	057 Move X0, [X0+2192]
	058 Call 0x1C17CF4
	059 Move X0, 0x82B000
	060 Move X0, [X0+2104]
	061 Call 0x1C17CF4
	062 Move X0, 0x82B000
	063 Move X0, [X0+2200]
	064 Call 0x1C17CF4
	065 Move X0, 0x7D0000
	066 Move X0, [X0+1448]
	067 Call 0x1C17CF4
	068 Move X0, 0x7D0000
	069 Move X0, [X0+1432]
	070 Call 0x1C17CF4
	071 Move X0, 0x82B000
	072 Move X0, [X0+2024]
	073 Call 0x1C17CF4
	074 Move X0, 0x82B000
	075 Move X0, [X0+2224]
	076 Call 0x1C17CF4
	077 Move X0, 0x82B000
	078 Move X0, [X0+2232]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X22+2235], W8
	082 Move [X31+56], X31
	083 Move X8, 0x82B000
	084 Move X8, [X8+2024]
	085 Move [X31+40], X31
	086 Move [X31+48], X31
	087 Move [X31+32], X31
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Add X2, X31, 56
	094 Move X0, X23
	095 Move X1, X21
	096 Move W3, W20
	097 Move W4, W19
	098 Call SelectionPickerRenderer.RenderSelectionPickerTexture, X0, X1, X2, X3, X4
	099 Compare X0, 0
	100 JumpIfEqual {419}
	101 Move X20, 0x7D0000
	102 Move X20, [X20+1448]
	103 Move X1, X31
	104 Move X23, X0
	105 Call Texture2D.GetPixels32, X0
	106 Move X22, 0xAB5000
	107 Move W8, [X22+2595]
	108 Move X19, X0
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x7D0000
	112 Move X0, [X0+1448]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X22+2595], W8
	116 Move X0, [X20]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfEqual {127}
	120 Move W8, 0x7F800000
	121 NotImplemented "Instruction FRINTM not yet implemented."
	122 Move S1, W8
	123 NotImplemented "Instruction FCVTMS not yet implemented."
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move W8, 0x80000000
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move W9, 0x7F800000
	130 NotImplemented "Instruction FRINTM not yet implemented."
	131 Move S1, W9
	132 Move W8, [X0+224]
	133 NotImplemented "Instruction FCVTMS not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Move W9, 0x80000000
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move W0, W31
	141 Move W1, W20
	142 Move X2, X31
	143 Call Math.Max, X0, X1
	144 Move X8, [X23]
	145 Move W24, W0
	146 Move X0, X23
	147 Move X9, [X8+424]
	148 Move X1, [X8+432]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move W8, [X22+2595]
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 Subtract S10, S0, S10
	153 Compare W8, 0
	154 JumpIfNotEqual {160}
	155 Move X0, 0x7CF000
	156 Move X0, [X0+1448]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X22+2595], W8
	160 Move X8, 0x7CF000
	161 Move X8, [X8+1448]
	162 Subtract S10, S10, S8
	163 Move X0, [X8]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move W8, 0x7F800000
	169 NotImplemented "Instruction FRINTM not yet implemented."
	170 Move S1, W8
	171 NotImplemented "Instruction FCVTMS not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Move W8, 0x80000000
	174 NotImplemented "Instruction CSEL not yet implemented."
	175 Move W0, W31
	176 Move X2, X31
	177 Call Math.Max, X0, X1
	178 Move X8, [X23]
	179 Move [X31+28], W0
	180 Move X0, X23
	181 Move X9, [X8+392]
	182 Move X1, [X8+400]
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X8, [X23]
	185 Move W21, W0
	186 Move X0, X23
	187 Move X9, [X8+424]
	188 Move X1, [X8+432]
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move W8, [X22+2595]
	191 Move [X31+20], W0
	192 Compare W8, 0
	193 JumpIfNotEqual {199}
	194 Move X0, 0x7CF000
	195 Move X0, [X0+1448]
	196 Call 0x1C17CF4
	197 Move W8, 1
	198 Move [X22+2595], W8
	199 Move X8, 0x7CF000
	200 Move X8, [X8+1448]
	201 Move X0, [X8]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfEqual {212}
	205 Move W8, 0x7F800000
	206 NotImplemented "Instruction FRINTM not yet implemented."
	207 Move S1, W8
	208 NotImplemented "Instruction FCVTMS not yet implemented."
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, 0x80000000
	211 NotImplemented "Instruction CSEL not yet implemented."
	212 Call 0x1C17DFC
	213 Move W8, [X22+2595]
	214 Move W9, 0x7F800000
	215 NotImplemented "Instruction FRINTM not yet implemented."
	216 Move S1, W9
	217 NotImplemented "Instruction FCVTMS not yet implemented."
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move W9, 0x80000000
	220 NotImplemented "Instruction CSEL not yet implemented."
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0x7CF000
	224 Move X0, [X0+1448]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X22+2595], W8
	228 Move X8, 0x7CF000
	229 Move X8, [X8+1448]
	230 Move X20, 0x7CF000
	231 Move X0, [X8]
	232 Move W8, [X0+224]
	233 Move X20, [X20+1432]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move X29, 0x82A000
	238 Move X28, 0x82A000
	239 Move X22, 0x82A000
	240 Move X29, [X29+2176]
	241 Move X28, [X28+2168]
	242 Move X22, [X22+2104]
	243 Move X0, [X20]
	244 Move X25, 0x82A000
	245 Move X25, [X25+2096]
	246 Move W8, 0x7F800000
	247 Move W9, [X0+224]
	248 NotImplemented "Instruction FRINTM not yet implemented."
	249 Move S1, W8
	250 NotImplemented "Instruction FCVTMS not yet implemented."
	251 NotImplemented "Instruction FCMP not yet implemented."
	252 Move W8, 0x80000000
	253 NotImplemented "Instruction CSEL not yet implemented."
	254 Compare W9, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X20, 0x82A000
	258 Move X20, [X20+2088]
	259 Move X0, X23
	260 Move X1, X31
	261 Call Object.DestroyImmediate, X0
	262 Move X0, [X29]
	263 Call 0x1C17F10
	264 Move X1, [X28]
	265 Move X23, X0
	266 Call Dictionary`2<Object, Object>..ctor, X0
	267 Move X0, [X22]
	268 Move [X31+32], X31
	269 Call 0x1C17F10
	270 Move X1, [X25]
	271 Move X25, X0
	272 Call HashSet`1<UInt32>..ctor, X0
	273 Move W22, [X31+28]
	274 Add W28, W24, W26
	275 Add W8, W22, W27
	276 Move [X31+16], W8
	277 Move X8, W24
	278 Move [X31+8], X8
	279 NotImplemented "Instruction MADD not yet implemented."
	280 Move X24, 0x7CF000
	281 Move X27, [X31+56]
	282 Move X24, [X24+1448]
	283 Move X0, [X24]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move W0, [X31+16]
	289 Move W1, [X31+20]
	290 Move X2, X31
	291 Call Math.Min, X0, X1
	292 Move [X31+24], W26
	293 Move [X31+28], W22
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move W22, W26
	296 Move X26, [X31+8]
	297 Move X0, [X24]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move W0, W28
	303 Move W1, W21
	304 Move X2, X31
	305 Call Math.Min, X0, X1
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Compare X19, 0
	308 JumpIfEqual {419}
	309 Move W8, [X19+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X8, 0x82A000
	312 Move X8, [X8+2024]
	313 Move X0, [X8]
	314 Add X8, X19, W22
	315 Move W29, [X8+32]
	316 Move W9, [X0+224]
	317 Compare W9, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Compare X25, 0
	321 JumpIfEqual {419}
	322 Move X2, [X20]
	323 And W24, W29, 0xFF00
	324 NotImplemented "Instruction BFM not yet implemented."
	325 NotImplemented "Instruction BFM not yet implemented."
	326 Move X0, X25
	327 Move W1, W24
	328 Call HashSet`1<UInt32>.Add, X0, X1
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {392}
	333 Compare X27, 0
	334 JumpIfEqual {419}
	335 Move X8, 0x82A000
	336 Move X8, [X8+2208]
	337 Add X2, X31, 40
	338 Move X0, X27
	339 Move W1, W24
	340 Move X3, [X8]
	341 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Object>>.TryGetValue, X0, X1, X2
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {392}
	346 Compare X23, 0
	347 JumpIfEqual {419}
	348 Move X8, 0x82A000
	349 Move X1, [X31+40]
	350 Move X8, [X8+2216]
	351 Add X2, X31, 32
	352 Move X0, X23
	353 Move X3, [X8]
	354 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfNotEqual {367}
	359 Move X0, [X31+32]
	360 Compare X0, 0
	361 JumpIfEqual {419}
	362 Move X8, 0x82A000
	363 Move X1, [X31+48]
	364 Move X8, [X8+2184]
	365 Move X2, [X8]
	366 Call HashSet`1<Object>.Add, X0, X1
	367 Move X8, 0x82A000
	368 Move X24, [X31+40]
	369 Move X8, [X8+2200]
	370 Move X0, [X8]
	371 Call 0x1C17F10
	372 Move X8, 0x82A000
	373 Move X8, [X8+2192]
	374 Move X29, X0
	375 Move X1, [X8]
	376 Call HashSet`1<Object>..ctor, X0
	377 Compare X29, 0
	378 JumpIfEqual {419}
	379 Move X8, 0x82A000
	380 Move X1, [X31+48]
	381 Move X8, [X8+2184]
	382 Move X0, X29
	383 Move X2, [X8]
	384 Call HashSet`1<Object>.Add, X0, X1
	385 Move X8, 0x82A000
	386 Move X8, [X8+2160]
	387 Move X0, X23
	388 Move X1, X24
	389 Move X2, X29
	390 Move X3, [X8]
	391 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	392 Move X24, 0x7CF000
	393 Move X24, [X24+1448]
	394 Add X26, X26, 1
	395 Add W22, W22, 1
	396 Move W26, [X31+24]
	397 Move W22, [X31+28]
	398 Add W22, W22, 1
	399 Add W26, W26, W21
	400 Move X0, X23
	401 Move X20, [X31+176]
	402 Move X19, [X31+184]
	403 Move X22, [X31+160]
	404 Move X21, [X31+168]
	405 Move X24, [X31+144]
	406 Move X23, [X31+152]
	407 Move X26, [X31+128]
	408 Move X25, [X31+136]
	409 Move X28, [X31+112]
	410 Move X27, [X31+120]
	411 Move X29, [X31+96]
	412 Move X30, [X31+104]
	413 Move D9, [X31+80]
	414 Move D8, [X31+88]
	415 Move D11, [X31+64]
	416 Move D10, [X31+72]
	417 Add X31, X31, 192
	418 Return X0
	419 Call 0x1C17F20
	420 Call 0x1C17F28

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<System.Int32>> PickVerticesInRect(UnityEngine.Camera camera, UnityEngine.Rect pickerRect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, System.Int32 renderTextureWidth = -1, System.Int32 renderTextureHeight = -1)

Disassembly:
	0x03923574 BL 0x38FFA80
	0x03923578 MOV X2, X0
	0x0392357C MOV X0, X27
	0x03923580 MOV X1, X29
	0x03923584 MOV V0.16B, V13.16B
	0x03923588 MOV V1.16B, V14.16B
	0x0392358C MOV X3, X31
	0x03923590 BL 0x3908D90
	0x03923594 TBNZ X0, 0x0, 0x39235C4
	0x03923598 MOV X0, X28
	0x0392359C MOV X1, X31
	0x039235A0 BL 0x38FFA80
	0x039235A4 MOV X2, X0
	0x039235A8 MOV X0, X27
	0x039235AC MOV X1, X29
	0x039235B0 MOV V0.16B, V13.16B
	0x039235B4 MOV V1.16B, V10.16B
	0x039235B8 MOV X3, X31
	0x039235BC BL 0x3908D90
	0x039235C0 TBZ X0, 0x0, 0x3923910
	0x039235C4 MOVZ W0, 0x1
	0x039235C8 MOV W20, W31
	0x039235CC AND W29, W0, 0x1
	0x039235D0 MOV X0, X28
	0x039235D4 MOV X1, X31
	0x039235D8 BL 0x38FFA80
	0x039235DC CBZ X0, 0x3923AD8
	0x039235E0 TBNZ X29, 0x0, 0x392385C
	0x039235E4 LDR W8, [X0 + 0x18]
	0x039235E8 CMP W20, W8
	0x039235EC B.GE 0x392385C
	0x039235F0 MOV X0, X28
	0x039235F4 MOV X1, X31
	0x039235F8 BL 0x38FFA80
	0x039235FC CBZ X0, 0x3923ADC
	0x03923600 LDR W8, [X0 + 0x18]
	0x03923604 CMP W20, W8
	0x03923608 B.CS 0x3923AE4
	0x0392360C CBZ X27, 0x3923AEC
	0x03923610 SXTW X19, W20
	0x03923614 ADD X8, X0, X19, 0x3, LSL
	0x03923618 LDRSW X8, [X8 + 0x20]
	0x0392361C LDR W9, [X27 + 0x18]
	0x03923620 CMP W8, W9
	0x03923624 B.CS 0x3923AE0
	0x03923628 MADD X8, X8, X22, X27
	0x0392362C LDP S15, S8, [X8 + 0x20]
	0x03923630 MOV X0, X28
	0x03923634 MOV X1, X31
	0x03923638 BL 0x38FFA80
	0x0392363C CBZ X0, 0x3923AE8
	0x03923640 LDR W8, [X0 + 0x18]
	0x03923644 CMP W20, W8
	0x03923648 B.CS 0x3923AF4
	0x0392364C ADD X8, X0, X19, 0x3, LSL
	0x03923650 LDRSW X8, [X8 + 0x24]
	0x03923654 LDR W9, [X27 + 0x18]
	0x03923658 CMP W8, W9
	0x0392365C B.CS 0x3923AF0
	0x03923660 MADD X8, X8, X22, X27
	0x03923664 LDP S6, S7, [X8 + 0x20]
	0x03923668 MOV V0.16B, V13.16B
	0x0392366C MOV V1.16B, V14.16B
	0x03923670 MOV V2.16B, V12.16B
	0x03923674 MOV V3.16B, V14.16B
	0x03923678 MOV V4.16B, V15.16B
	0x0392367C MOV V5.16B, V8.16B
	0x03923680 MOV X0, X31
	0x03923684 BL 0x38F9128
	0x03923688 TBNZ X0, 0x0, 0x39237B4
	0x0392368C MOV X0, X28
	0x03923690 MOV X1, X31
	0x03923694 BL 0x38FFA80
	0x03923698 CBZ X0, 0x3923B3C
	0x0392369C LDR W8, [X0 + 0x18]
	0x039236A0 CMP W20, W8
	0x039236A4 B.CS 0x3923B2C
	0x039236A8 ADD X8, X0, X19, 0x3, LSL
	0x039236AC LDRSW X8, [X8 + 0x20]
	0x039236B0 LDR W9, [X27 + 0x18]
	0x039236B4 CMP W8, W9
	0x039236B8 B.CS 0x3923B34
	0x039236BC MADD X8, X8, X22, X27
	0x039236C0 LDP S8, S15, [X8 + 0x20]
	0x039236C4 MOV X0, X28
	0x039236C8 MOV X1, X31
	0x039236CC BL 0x38FFA80
	0x039236D0 CBZ X0, 0x3923B30
	0x039236D4 LDR W8, [X0 + 0x18]
	0x039236D8 CMP W20, W8
	0x039236DC B.CS 0x3923B38
	0x039236E0 ADD X8, X0, X19, 0x3, LSL
	0x039236E4 LDRSW X8, [X8 + 0x24]
	0x039236E8 LDR W9, [X27 + 0x18]
	0x039236EC CMP W8, W9
	0x039236F0 B.CS 0x3923B40
	0x039236F4 MADD X8, X8, X22, X27
	0x039236F8 LDP S6, S7, [X8 + 0x20]
	0x039236FC MOV V0.16B, V12.16B
	0x03923700 MOV V1.16B, V14.16B
	0x03923704 MOV V2.16B, V12.16B
	0x03923708 MOV V3.16B, V10.16B
	0x0392370C MOV V4.16B, V8.16B
	0x03923710 MOV V5.16B, V15.16B
	0x03923714 MOV X0, X31
	0x03923718 BL 0x38F9128
	0x0392371C TBNZ X0, 0x0, 0x39237B4
	0x03923720 MOV X0, X28
	0x03923724 MOV X1, X31
	0x03923728 BL 0x38FFA80
	0x0392372C CBZ X0, 0x3923B74
	0x03923730 LDR W8, [X0 + 0x18]
	0x03923734 CMP W20, W8
	0x03923738 B.CS 0x3923B68
	0x0392373C ADD X8, X0, X19, 0x3, LSL
	0x03923740 LDRSW X8, [X8 + 0x20]
	0x03923744 LDR W9, [X27 + 0x18]
	0x03923748 CMP W8, W9
	0x0392374C B.CS 0x3923B70
	0x03923750 MADD X8, X8, X22, X27
	0x03923754 LDP S8, S15, [X8 + 0x20]
	0x03923758 MOV X0, X28
	0x0392375C MOV X1, X31
	0x03923760 BL 0x38FFA80
	0x03923764 CBZ X0, 0x3923B64
	0x03923768 LDR W8, [X0 + 0x18]
	0x0392376C CMP W20, W8
	0x03923770 B.CS 0x3923B78
	0x03923774 ADD X8, X0, X19, 0x3, LSL
	0x03923778 LDRSW X8, [X8 + 0x24]
	0x0392377C LDR W9, [X27 + 0x18]
	0x03923780 CMP W8, W9
	0x03923784 B.CS 0x3923B6C
	0x03923788 MADD X8, X8, X22, X27
	0x0392378C LDP S6, S7, [X8 + 0x20]
	0x03923790 MOV V0.16B, V12.16B
	0x03923794 MOV V1.16B, V10.16B
	0x03923798 MOV V2.16B, V13.16B
	0x0392379C MOV V3.16B, V10.16B
	0x039237A0 MOV V4.16B, V8.16B
	0x039237A4 MOV V5.16B, V15.16B
	0x039237A8 MOV X0, X31
	0x039237AC BL 0x38F9128
	0x039237B0 TBZ X0, 0x0, 0x39237C0
	0x039237B4 MOVZ W29, 0x1
	0x039237B8 ADD W20, W20, 0x1
	0x039237BC B 0x39235D0
	0x039237C0 MOV X0, X28
	0x039237C4 MOV X1, X31
	0x039237C8 BL 0x38FFA80
	0x039237CC CBZ X0, 0x3923B98
	0x039237D0 LDR W8, [X0 + 0x18]
	0x039237D4 CMP W20, W8
	0x039237D8 B.CS 0x3923B90
	0x039237DC ADD X8, X0, X19, 0x3, LSL
	0x039237E0 LDRSW X8, [X8 + 0x20]
	0x039237E4 LDR W9, [X27 + 0x18]
	0x039237E8 CMP W8, W9
	0x039237EC B.CS 0x3923BA0
	0x039237F0 MADD X8, X8, X22, X27
	0x039237F4 LDP S8, S15, [X8 + 0x20]
	0x039237F8 MOV X0, X28
	0x039237FC MOV X1, X31
	0x03923800 BL 0x38FFA80
	0x03923804 CBZ X0, 0x3923B9C
	0x03923808 LDR W8, [X0 + 0x18]
	0x0392380C CMP W20, W8
	0x03923810 B.CS 0x3923B8C
	0x03923814 ADD X8, X0, X19, 0x3, LSL
	0x03923818 LDRSW X8, [X8 + 0x24]
	0x0392381C LDR W9, [X27 + 0x18]
	0x03923820 CMP W8, W9
	0x03923824 B.CS 0x3923B94
	0x03923828 MADD X8, X8, X22, X27
	0x0392382C LDP S6, S7, [X8 + 0x20]
	0x03923830 MOV V0.16B, V13.16B
	0x03923834 MOV V1.16B, V10.16B
	0x03923838 MOV V2.16B, V12.16B
	0x0392383C MOV V3.16B, V14.16B
	0x03923840 MOV V4.16B, V8.16B
	0x03923844 MOV V5.16B, V15.16B
	0x03923848 MOV X0, X31
	0x0392384C BL 0x38F9128
	0x03923850 ANDS W31, W0, 0x1
	0x03923854 CSINC W29, W29, W31, EQ
	0x03923858 B 0x39237B8
	0x0392385C TBZ X29, 0x0, 0x392387C
	0x03923860 LDR X0, [X31 + 0x18]
	0x03923864 CBZ X0, 0x3923B88
	0x03923868 ADRP X8, 0x82B000
	0x0392386C LDR X8, [X8 + 0x888]
	0x03923870 LDR X2, [X8]
	0x03923874 MOV X1, X28
	0x03923878 BL 0x2DBEF30
	0x0392387C LDR X8, [X23 + 0x28]
	0x03923880 ADD X24, X24, 0x1
	0x03923884 CBNZ X8, 0x39232A0
	0x03923888 B 0x3923B0C
	0x0392388C ADRP X8, 0x82B000
	0x03923890 LDR X8, [X8 + 0x7B8]
	0x03923894 LDR X0, [X8]
	0x03923898 LDR W8, [X0 + 0xE0]
	0x0392389C CBNZ W8, 0x39238A4
	0x039238A0 BL 0x1C16DFC
	0x039238A4 LDR X8, [X31 + 0x10]
	0x039238A8 ANDS W31, W8, 0xFF
	0x039238AC B.EQ 0x39238F0
	0x039238B0 MOV X0, X28
	0x039238B4 MOV X1, X31
	0x039238B8 BL 0x38FF530
	0x039238BC MOV X1, X0
	0x039238C0 MOV X0, X26
	0x039238C4 MOV X2, X31
	0x039238C8 BL 0x390A764
	0x039238CC CBZ X25, 0x3923BB0
	0x039238D0 MOV X0, X25
	0x039238D4 MOV X1, X31
	0x039238D8 BL 0x3C3DE4C
	0x039238DC MOV X0, X21
	0x039238E0 MOV X1, X23
	0x039238E4 MOV X2, X31
	0x039238E8 BL 0x3903DAC
	0x039238EC TBNZ X0, 0x0, 0x392387C
	0x039238F0 LDR X0, [X31 + 0x18]
	0x039238F4 CBZ X0, 0x3923BAC
	0x039238F8 ADRP X8, 0x82B000
	0x039238FC LDR X8, [X8 + 0x888]
	0x03923900 LDR X2, [X8]
	0x03923904 MOV X1, X28
	0x03923908 BL 0x2DBEF30
	0x0392390C B 0x392387C
	0x03923910 MOV X0, X28
	0x03923914 MOV X1, X31
	0x03923918 BL 0x38FFA80
	0x0392391C MOV X2, X0
	0x03923920 MOV X0, X27
	0x03923924 MOV X1, X29
	0x03923928 MOV V0.16B, V12.16B
	0x0392392C MOV V1.16B, V10.16B
	0x03923930 MOV X3, X31
	0x03923934 BL 0x3908D90
	0x03923938 B 0x39235C8
	0x0392393C LDR X20, [X31 + 0x8]
	0x03923940 CBZ X20, 0x3923BA8
	0x03923944 ADRP X8, 0x82B000
	0x03923948 LDR X8, [X8 + 0x870]
	0x0392394C LDR X3, [X8]
	0x03923950 LDR X2, [X31 + 0x18]
	0x03923954 LDR X19, [X31]
	0x03923958 MOV X0, X20
	0x0392395C MOV X1, X23
	0x03923960 BL 0x2AA5098
	0x03923964 B 0x39230D4
	0x03923968 MOV X22, X31
	0x0392396C CBZ X19, 0x3923A88
	0x03923970 ADRP X10, 0x7D0000
	0x03923974 LDR X8, [X19]
	0x03923978 LDR X10, [X10 + 0xE00]
	0x0392397C LDRH W9, [X8 + 0x12E]
	0x03923980 LDR X1, [X10]
	0x03923984 CBZ X9, 0x39239A8
	0x03923988 LDR X10, [X8 + 0xB0]
	0x0392398C ADD X10, X10, 0x8
	0x03923990 LDUR X11, [X10 - 0x8]
	0x03923994 CMP X11, X1
	0x03923998 B.EQ 0x3923A70
	0x0392399C SUBS X9, X9, 0x1
	0x039239A0 ADD X10, X10, 0x10
	0x039239A4 B.NE 0x3923990
	0x039239A8 MOV X0, X19
	0x039239AC MOV W2, W31
	0x039239B0 BL 0x1C5C788
	0x039239B4 B 0x3923A7C
	0x039239B8 CBZ X21, 0x3923BB4
	0x039239BC MOV X0, X21
	0x039239C0 MOV X1, X31
	0x039239C4 BL 0x3C0403C
	0x039239C8 MOV W20, W0
	0x039239CC MOV X0, X21
	0x039239D0 MOV X1, X31
	0x039239D4 BL 0x3C04078
	0x039239D8 ADRP X8, 0x82B000
	0x039239DC LDR X8, [X8 + 0x7E8]
	0x039239E0 MOV W22, W0
	0x039239E4 LDR X8, [X8]
	0x039239E8 LDR W9, [X8 + 0xE0]
	0x039239EC CBNZ W9, 0x39239F8
	0x039239F0 MOV X0, X8
	0x039239F4 BL 0x1C16DFC
	0x039239F8 SCVTF S0, W20
	0x039239FC MOVZ W8, 0x7F800000
	0x03923A00 SCVTF S1, W22
	0x03923A04 FDIV S0, S0, S11
	0x03923A08 FMOV S2, W8
	0x03923A0C MOVZ W9, 0x80000000
	0x03923A10 FDIV S1, S1, S11
	0x03923A14 FCVTZS W8, S0
	0x03923A18 FCMP S0, S2
	0x03923A1C FCVTZS W10, S1
	0x03923A20 CSEL W2, W9, W8, EQ
	0x03923A24 FCMP S1, S2
	0x03923A28 MOV X0, X21
	0x03923A2C MOV V0.16B, V12.16B
	0x03923A30 MOV V1.16B, V10.16B
	0x03923A34 LDP S2, S3, [X31 + 0x20]
	0x03923A38 MOV X1, X23
	0x03923A3C LDP X20, X19, [X31 + 0xC0]
	0x03923A40 LDP X22, X21, [X31 + 0xB0]
	0x03923A44 LDP X24, X23, [X31 + 0xA0]
	0x03923A48 LDP X26, X25, [X31 + 0x90]
	0x03923A4C LDP X28, X27, [X31 + 0x80]
	0x03923A50 LDP X29, X30, [X31 + 0x70]
	0x03923A54 LDP D9, D8, [X31 + 0x60]
	0x03923A58 LDP D11, D10, [X31 + 0x50]
	0x03923A5C LDP D13, D12, [X31 + 0x40]
	0x03923A60 LDP D15, D14, [X31 + 0x30]
	0x03923A64 CSEL W3, W9, W10, EQ
	0x03923A68 ADD X31, X31, 0xD0
	0x03923A6C B 0x3923E20
	0x03923A70 LDRSW X9, [X10]
	0x03923A74 ADD X8, X8, X9, 0x4, LSL
	0x03923A78 ADD X0, X8, 0x138
	0x03923A7C LDP X8, X1, [X0]
	0x03923A80 MOV X0, X19
	0x03923A84 BLR X8
	0x03923A88 CBNZ X22, 0x3923BBC
	0x03923A8C MOV X0, X20
	0x03923A90 LDP X20, X19, [X31 + 0xC0]
	0x03923A94 LDP X22, X21, [X31 + 0xB0]
	0x03923A98 LDP X24, X23, [X31 + 0xA0]
	0x03923A9C LDP X26, X25, [X31 + 0x90]
	0x03923AA0 LDP X28, X27, [X31 + 0x80]
	0x03923AA4 LDP X29, X30, [X31 + 0x70]
	0x03923AA8 LDP D9, D8, [X31 + 0x60]
	0x03923AAC LDP D11, D10, [X31 + 0x50]
	0x03923AB0 LDP D13, D12, [X31 + 0x40]
	0x03923AB4 LDP D15, D14, [X31 + 0x30]
	0x03923AB8 ADD X31, X31, 0xD0
	0x03923ABC RET
	0x03923AC0 BL 0x1C16F20
	0x03923AC4 BL 0x1C16F20
	0x03923AC8 BL 0x1C16F20
	0x03923ACC BL 0x1C16F20
	0x03923AD0 BL 0x1C16F28
	0x03923AD4 BL 0x1C16F28
	0x03923AD8 BL 0x1C16F20
	0x03923ADC BL 0x1C16F20
	0x03923AE0 BL 0x1C16F28
	0x03923AE4 BL 0x1C16F28
	0x03923AE8 BL 0x1C16F20
	0x03923AEC BL 0x1C16F20
	0x03923AF0 BL 0x1C16F28
	0x03923AF4 BL 0x1C16F28
	0x03923AF8 BL 0x1C16F20
	0x03923AFC BL 0x1C16F28
	0x03923B00 BL 0x1C16F20
	0x03923B04 BL 0x1C16F28
	0x03923B08 BL 0x1C16F28
	0x03923B0C BL 0x1C16F20
	0x03923B10 BL 0x1C16F20
	0x03923B14 BL 0x1C16F20
	0x03923B18 BL 0x1C16F28
	0x03923B1C BL 0x1C16F20
	0x03923B20 BL 0x1C16F28
	0x03923B24 BL 0x1C16F20
	0x03923B28 BL 0x1C16F28
	0x03923B2C BL 0x1C16F28
	0x03923B30 BL 0x1C16F20
	0x03923B34 BL 0x1C16F28
	0x03923B38 BL 0x1C16F28
	0x03923B3C BL 0x1C16F20
	0x03923B40 BL 0x1C16F28
	0x03923B44 BL 0x1C16F20
	0x03923B48 BL 0x1C16F28
	0x03923B4C BL 0x1C16F20
	0x03923B50 BL 0x1C16F20
	0x03923B54 BL 0x1C16F20
	0x03923B58 BL 0x1C16F20
	0x03923B5C BL 0x1C16F28
	0x03923B60 BL 0x1C16F20
	0x03923B64 BL 0x1C16F20
	0x03923B68 BL 0x1C16F28
	0x03923B6C BL 0x1C16F28
	0x03923B70 BL 0x1C16F28
	0x03923B74 BL 0x1C16F20
	0x03923B78 BL 0x1C16F28
	0x03923B7C BL 0x1C16F20
	0x03923B80 BL 0x1C16F28
	0x03923B84 BL 0x1C16F28
	0x03923B88 BL 0x1C16F20
	0x03923B8C BL 0x1C16F28
	0x03923B90 BL 0x1C16F28
	0x03923B94 BL 0x1C16F28
	0x03923B98 BL 0x1C16F20
	0x03923B9C BL 0x1C16F20
	0x03923BA0 BL 0x1C16F28
	0x03923BA4 BL 0x1C16F20
	0x03923BA8 BL 0x1C16F20
	0x03923BAC BL 0x1C16F20
	0x03923BB0 BL 0x1C16F20
	0x03923BB4 BL 0x1C16F20
	0x03923BB8 BL 0x1C16F20
	0x03923BBC MOV X0, X22
	0x03923BC0 BL 0x1C16F18
	0x03923BC4 B 0x3923CF0
	0x03923BC8 B 0x3923D68
	0x03923BCC B 0x3923D68
	0x03923BD0 B 0x3923D68
	0x03923BD4 B 0x3923D68
	0x03923BD8 B 0x3923D68
	0x03923BDC B 0x3923D68
	0x03923BE0 B 0x3923D68
	0x03923BE4 B 0x3923D68
	0x03923BE8 B 0x3923D68
	0x03923BEC B 0x3923D68
	0x03923BF0 B 0x3923D68
	0x03923BF4 B 0x3923D68
	0x03923BF8 B 0x3923D68
	0x03923BFC B 0x3923D68
	0x03923C00 B 0x3923CF0
	0x03923C04 B 0x3923CF0
	0x03923C08 B 0x3923D68
	0x03923C0C B 0x3923D68
	0x03923C10 B 0x3923D68
	0x03923C14 B 0x3923D68
	0x03923C18 B 0x3923D68
	0x03923C1C B 0x3923D68
	0x03923C20 B 0x3923D68
	0x03923C24 B 0x3923D68
	0x03923C28 B 0x3923D68
	0x03923C2C B 0x3923D68
	0x03923C30 B 0x3923D68
	0x03923C34 B 0x3923D68
	0x03923C38 B 0x3923D68
	0x03923C3C B 0x3923D68
	0x03923C40 B 0x3923D68
	0x03923C44 B 0x3923D68
	0x03923C48 B 0x3923D68
	0x03923C4C B 0x3923D68
	0x03923C50 B 0x3923D68
	0x03923C54 B 0x3923D68
	0x03923C58 B 0x3923D68
	0x03923C5C B 0x3923D68
	0x03923C60 B 0x3923D68
	0x03923C64 B 0x3923D68
	0x03923C68 B 0x3923D68
	0x03923C6C B 0x3923D68
	0x03923C70 B 0x3923D68
	0x03923C74 B 0x3923D68
	0x03923C78 B 0x3923D68
	0x03923C7C B 0x3923D68
	0x03923C80 B 0x3923D68
	0x03923C84 B 0x3923D68
	0x03923C88 B 0x3923D68
	0x03923C8C B 0x3923D68
	0x03923C90 B 0x3923D68
	0x03923C94 B 0x3923D68
	0x03923C98 B 0x3923D68
	0x03923C9C B 0x3923D68
	0x03923CA0 B 0x3923D68
	0x03923CA4 B 0x3923D68
	0x03923CA8 B 0x3923D68
	0x03923CAC B 0x3923D68
	0x03923CB0 B 0x3923D68
	0x03923CB4 B 0x3923D68
	0x03923CB8 B 0x3923D68
	0x03923CBC B 0x3923D68
	0x03923CC0 B 0x3923D68
	0x03923CC4 B 0x3923D68
	0x03923CC8 B 0x3923D68
	0x03923CCC B 0x3923D68
	0x03923CD0 B 0x3923D68
	0x03923CD4 B 0x3923D68
	0x03923CD8 B 0x3923D68
	0x03923CDC B 0x3923D68
	0x03923CE0 B 0x3923D68
	0x03923CE4 B 0x3923D68
	0x03923CE8 B 0x3923D68
	0x03923CEC B 0x3923D68
	0x03923CF0 MOV X21, X0
	0x03923CF4 B 0x3923D6C
	0x03923CF8 B 0x3923D68
	0x03923CFC B 0x3923D68
	0x03923D00 B 0x3923D68
	0x03923D04 B 0x3923D68
	0x03923D08 B 0x3923D68
	0x03923D0C B 0x3923D68
	0x03923D10 B 0x3923D68
	0x03923D14 B 0x3923D68
	0x03923D18 B 0x3923D68
	0x03923D1C B 0x3923D68
	0x03923D20 B 0x3923D68
	0x03923D24 B 0x3923D68
	0x03923D28 B 0x3923D68
	0x03923D2C B 0x3923D68
	0x03923D30 B 0x3923D68
	0x03923D34 B 0x3923D68
	0x03923D38 B 0x3923D68
	0x03923D3C B 0x3923D68
	0x03923D40 B 0x3923D68
	0x03923D44 B 0x3923D68
	0x03923D48 B 0x3923D68
	0x03923D4C B 0x3923D68
	0x03923D50 B 0x3923D68
	0x03923D54 B 0x3923D68
	0x03923D58 B 0x3923D68
	0x03923D5C B 0x3923D68
	0x03923D60 B 0x3923D68
	0x03923D64 B 0x3923D68
	0x03923D68 MOV X21, X0
	0x03923D6C CMP W1, 0x1
	0x03923D70 B.NE 0x3923D90
	0x03923D74 MOV X0, X21
	0x03923D78 BL 0x3EB1AD0
	0x03923D7C LDR X22, [X0]
	0x03923D80 LDR X19, [X31]
	0x03923D84 BL 0x3EB1AE0
	0x03923D88 LDR X20, [X31 + 0x8]
	0x03923D8C B 0x392396C
	0x03923D90 MOV X22, X31
	0x03923D94 B 0x3923D9C
	0x03923D98 MOV X21, X0
	0x03923D9C LDR X8, [X31]
	0x03923DA0 CBZ X8, 0x3923E08
	0x03923DA4 LDR X8, [X31]
	0x03923DA8 ADRP X10, 0x7D0000
	0x03923DAC LDR X8, [X8]
	0x03923DB0 LDR X10, [X10 + 0xE00]
	0x03923DB4 LDRH W9, [X8 + 0x12E]
	0x03923DB8 LDR X1, [X10]
	0x03923DBC CBZ X9, 0x3923DE0
	0x03923DC0 LDR X10, [X8 + 0xB0]
	0x03923DC4 ADD X10, X10, 0x8
	0x03923DC8 LDUR X11, [X10 - 0x8]
	0x03923DCC CMP X11, X1
	0x03923DD0 B.EQ 0x3923DF0
	0x03923DD4 SUBS X9, X9, 0x1
	0x03923DD8 ADD X10, X10, 0x10
	0x03923DDC B.NE 0x3923DC8
	0x03923DE0 LDR X0, [X31]
	0x03923DE4 MOV W2, W31
	0x03923DE8 BL 0x1C5C788
	0x03923DEC B 0x3923DFC
	0x03923DF0 LDRSW X9, [X10]
	0x03923DF4 ADD X8, X8, X9, 0x4, LSL
	0x03923DF8 ADD X0, X8, 0x138
	0x03923DFC LDP X8, X1, [X0]
	0x03923E00 LDR X0, [X31]
	0x03923E04 BLR X8
	0x03923E08 CBNZ X22, 0x3923E14
	0x03923E0C MOV X0, X21
	0x03923E10 BL 0x1D2C690
	0x03923E14 MOV X0, X22
	0x03923E18 BL 0x1C16F18
	0x03923E1C BL 0x1990590
	0x03923E20 SUB X31, X31, 0xC0
	0x03923E24 STP D11, D10, [X31 + 0x40]
	0x03923E28 STP D9, D8, [X31 + 0x50]
	0x03923E2C STP X29, X30, [X31 + 0x60]
	0x03923E30 STP X28, X27, [X31 + 0x70]
	0x03923E34 STP X26, X25, [X31 + 0x80]
	0x03923E38 STP X24, X23, [X31 + 0x90]
	0x03923E3C STP X22, X21, [X31 + 0xA0]
	0x03923E40 STP X20, X19, [X31 + 0xB0]
	0x03923E44 ADRP X22, 0xABE000
	0x03923E48 LDRB W8, [X22 + 0x8BB]
	0x03923E4C MOV W19, W3
	0x03923E50 MOV W20, W2
	0x03923E54 MOV X21, X1
	0x03923E58 MOV V8.16B, V3.16B
	0x03923E5C MOV V9.16B, V2.16B
	0x03923E60 MOV V10.16B, V1.16B
	0x03923E64 MOV V11.16B, V0.16B
	0x03923E68 MOV X23, X0
	0x03923E6C TBNZ X8, 0x0, 0x3923F38
	0x03923E70 ADRP X0, 0x82B000
	0x03923E74 LDR X0, [X0 + 0x870]
	0x03923E78 BL 0x1C16CF4
	0x03923E7C ADRP X0, 0x82B000
	0x03923E80 LDR X0, [X0 + 0x8A0]
	0x03923E84 BL 0x1C16CF4
	0x03923E88 ADRP X0, 0x82B000
	0x03923E8C LDR X0, [X0 + 0x8A8]
	0x03923E90 BL 0x1C16CF4
	0x03923E94 ADRP X0, 0x82B000
	0x03923E98 LDR X0, [X0 + 0x878]
	0x03923E9C BL 0x1C16CF4
	0x03923EA0 ADRP X0, 0x82B000
	0x03923EA4 LDR X0, [X0 + 0x880]
	0x03923EA8 BL 0x1C16CF4
	0x03923EAC ADRP X0, 0x82B000
	0x03923EB0 LDR X0, [X0 + 0x828]
	0x03923EB4 BL 0x1C16CF4
	0x03923EB8 ADRP X0, 0x82B000
	0x03923EBC LDR X0, [X0 + 0x888]
	0x03923EC0 BL 0x1C16CF4
	0x03923EC4 ADRP X0, 0x82B000
	0x03923EC8 LDR X0, [X0 + 0x830]
	0x03923ECC BL 0x1C16CF4
	0x03923ED0 ADRP X0, 0x82B000
	0x03923ED4 LDR X0, [X0 + 0x890]
	0x03923ED8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+160], D11
	003 Move [X31+168], D10
	004 Move [X31+176], D9
	005 Move [X31+184], D8
	006 Move [X31+192], X29
	007 Move [X31+200], X30
	008 Move [X31+208], X28
	009 Move [X31+216], X27
	010 Move [X31+224], X26
	011 Move [X31+232], X25
	012 Move [X31+240], X24
	013 Move [X31+248], X23
	014 Move [X31+256], X22
	015 Move [X31+264], X21
	016 Move [X31+272], X20
	017 Move [X31+280], X19
	018 Move X20, 0xABF000
	019 Move X26, 0x82C000
	020 Move X23, 0x82C000
	021 Move W8, [X20+2236]
	022 Move X26, [X26+2000]
	023 Move X23, [X23+1992]
	024 Move W19, W4
	025 Move W21, W3
	026 Move W25, W2
	027 Move X22, X1
	028 Move V8, V3
	029 Move V9, V2
	030 Move V10, V1
	031 Move V11, V0
	032 Move X24, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {123}
	037 Move X0, 0x82C000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0x82C000
	041 Move X0, [X0+2032]
	042 Call 0x1C17CF4
	043 Move X0, 0x82C000
	044 Move X0, [X0+2040]
	045 Call 0x1C17CF4
	046 Move X0, 0x82C000
	047 Move X0, [X0+2048]
	048 Call 0x1C17CF4
	049 Move X0, 0x82C000
	050 Move X0, [X0+1992]
	051 Call 0x1C17CF4
	052 Move X0, 0x82C000
	053 Move X0, [X0+2000]
	054 Call 0x1C17CF4
	055 Move X0, 0x82C000
	056 Move X0, [X0+2056]
	057 Call 0x1C17CF4
	058 Move X0, 0x82C000
	059 Move X0, [X0+2064]
	060 Call 0x1C17CF4
	061 Move X0, 0x82C000
	062 Move X0, [X0+2072]
	063 Call 0x1C17CF4
	064 Move X0, 0x82C000
	065 Move X0, [X0+2080]
	066 Call 0x1C17CF4
	067 Move X0, 0x7D3000
	068 Move X0, [X0+2512]
	069 Call 0x1C17CF4
	070 Move X0, 0x7D3000
	071 Move X0, [X0+2520]
	072 Call 0x1C17CF4
	073 Move X0, 0x82C000
	074 Move X0, [X0+2088]
	075 Call 0x1C17CF4
	076 Move X0, 0x7D2000
	077 Move X0, [X0+3576]
	078 Call 0x1C17CF4
	079 Move X0, 0x7D2000
	080 Move X0, [X0+3584]
	081 Call 0x1C17CF4
	082 Move X0, 0x82C000
	083 Move X0, [X0+2096]
	084 Call 0x1C17CF4
	085 Move X0, 0x7D8000
	086 Move X0, [X0+1672]
	087 Call 0x1C17CF4
	088 Move X0, 0x7D2000
	089 Move X0, [X0+3592]
	090 Call 0x1C17CF4
	091 Move X0, 0x82C000
	092 Move X0, [X0+2104]
	093 Call 0x1C17CF4
	094 Move X0, 0x82C000
	095 Move X0, [X0+2112]
	096 Call 0x1C17CF4
	097 Move X0, 0x82C000
	098 Move X0, [X0+2120]
	099 Call 0x1C17CF4
	100 Move X0, 0x7D1000
	101 Move X0, [X0+1448]
	102 Call 0x1C17CF4
	103 Move X0, 0x7D1000
	104 Move X0, [X0+1432]
	105 Call 0x1C17CF4
	106 Move X0, 0x82C000
	107 Move X0, [X0+2024]
	108 Call 0x1C17CF4
	109 Move X0, 0x82C000
	110 Move X0, [X0+2128]
	111 Call 0x1C17CF4
	112 Move X0, 0x82C000
	113 Move X0, [X0+2136]
	114 Call 0x1C17CF4
	115 Move X0, 0x82C000
	116 Move X0, [X0+2144]
	117 Call 0x1C17CF4
	118 Move X0, 0x82C000
	119 Move X0, [X0+2152]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X20+2236], W8
	123 Move X0, [X26]
	124 NotImplemented "Instruction MOVI not yet implemented."
	125 Move [X31+144], X31
	126 Move [X31+152], X31
	127 Move [X31+128], X31
	128 Move [X31+136], X31
	129 Move [X31+112], X31
	130 Move [X31+80], V0
	131 Move [X31+88], V0
	132 Call 0x1C17F10
	133 Move X1, [X23]
	134 Move [X31+32], X0
	135 Call Dictionary`2<Object, Object>..ctor, X0
	136 Move X8, 0x82C000
	137 Move X8, [X8+2024]
	138 Move X0, [X8]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 And W2, W25, 1
	144 Add X3, X31, 152
	145 Move X0, X24
	146 Move X1, X22
	147 Move W4, W21
	148 Move W5, W19
	149 Call SelectionPickerRenderer.RenderSelectionPickerTexture, X0, X1, X2, X3, X4, X5
	150 Compare X0, 0
	151 JumpIfEqual {604}
	152 Move X21, 0x7D1000
	153 Move X21, [X21+1448]
	154 Move X1, X31
	155 Move X24, X0
	156 Call Texture2D.GetPixels32, X0
	157 Move X23, 0xAB6000
	158 Move W8, [X23+2595]
	159 Move X19, X0
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x7D1000
	163 Move X0, [X0+1448]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X23+2595], W8
	167 Move X0, [X21]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfEqual {179}
	171 Move W8, 0x7F800000
	172 NotImplemented "Instruction FRINTM not yet implemented."
	173 Move S1, W8
	174 NotImplemented "Instruction FCVTMS not yet implemented."
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 Move W8, 0x80000000
	177 Move X20, X21
	178 NotImplemented "Instruction CSEL not yet implemented."
	179 Call 0x1C17DFC
	180 Move X0, [X21]
	181 Move W9, 0x7F800000
	182 NotImplemented "Instruction FRINTM not yet implemented."
	183 Move S1, W9
	184 Move W8, [X0+224]
	185 NotImplemented "Instruction FCVTMS not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Move W9, 0x80000000
	188 Move X20, X21
	189 NotImplemented "Instruction CSEL not yet implemented."
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move W0, W31
	194 Move W1, W22
	195 Move X2, X31
	196 Call Math.Max, X0, X1
	197 Move X8, [X24]
	198 Move W25, W0
	199 Move X0, X24
	200 Move X9, [X8+424]
	201 Move X1, [X8+432]
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move W8, [X23+2595]
	204 NotImplemented "Instruction SCVTF not yet implemented."
	205 Subtract S10, S0, S10
	206 Compare W8, 0
	207 JumpIfNotEqual {213}
	208 Move X0, 0x7D1000
	209 Move X0, [X0+1448]
	210 Call 0x1C17CF4
	211 Move W8, 1
	212 Move [X23+2595], W8
	213 Move X0, [X20]
	214 Subtract S10, S10, S8
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move W8, 0x7F800000
	220 NotImplemented "Instruction FRINTM not yet implemented."
	221 Move S1, W8
	222 NotImplemented "Instruction FCVTMS not yet implemented."
	223 NotImplemented "Instruction FCMP not yet implemented."
	224 Move W8, 0x80000000
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 Move W0, W31
	227 Move X2, X31
	228 Call Math.Max, X0, X1
	229 Move X8, [X24]
	230 Move W29, W0
	231 Move X0, X24
	232 Move X9, [X8+392]
	233 Move X1, [X8+400]
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X8, [X24]
	236 Move W22, W0
	237 Move X0, X24
	238 Move X9, [X8+424]
	239 Move X1, [X8+432]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move W8, [X23+2595]
	242 Move [X31+20], W0
	243 Compare W8, 0
	244 JumpIfNotEqual {250}
	245 Move X0, 0x7D1000
	246 Move X0, [X0+1448]
	247 Call 0x1C17CF4
	248 Move W8, 1
	249 Move [X23+2595], W8
	250 Move X0, [X20]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfEqual {261}
	254 Move W8, 0x7F800000
	255 NotImplemented "Instruction FRINTM not yet implemented."
	256 Move S1, W8
	257 NotImplemented "Instruction FCVTMS not yet implemented."
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 Move W8, 0x80000000
	260 NotImplemented "Instruction CSEL not yet implemented."
	261 Call 0x1C17DFC
	262 Move W8, [X23+2595]
	263 Move W9, 0x7F800000
	264 NotImplemented "Instruction FRINTM not yet implemented."
	265 Move S1, W9
	266 NotImplemented "Instruction FCVTMS not yet implemented."
	267 NotImplemented "Instruction FCMP not yet implemented."
	268 Move W9, 0x80000000
	269 NotImplemented "Instruction CSEL not yet implemented."
	270 Compare W8, 0
	271 JumpIfNotEqual {277}
	272 Move X0, 0x7D1000
	273 Move X0, [X0+1448]
	274 Call 0x1C17CF4
	275 Move W8, 1
	276 Move [X23+2595], W8
	277 Move X0, [X20]
	278 Move X26, 0x7D1000
	279 Move W8, [X0+224]
	280 Move X26, [X26+1432]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X23, 0x82C000
	285 Move X23, [X23+2104]
	286 Move X0, [X26]
	287 Move X28, 0x82C000
	288 Move X28, [X28+2096]
	289 Move W8, 0x7F800000
	290 Move W9, [X0+224]
	291 NotImplemented "Instruction FRINTM not yet implemented."
	292 Move S1, W8
	293 NotImplemented "Instruction FCVTMS not yet implemented."
	294 NotImplemented "Instruction FCMP not yet implemented."
	295 Move W8, 0x80000000
	296 NotImplemented "Instruction CSEL not yet implemented."
	297 Compare W9, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X26, 0x82C000
	301 Move X26, [X26+2088]
	302 Move X0, X24
	303 Move X1, X31
	304 Call Object.DestroyImmediate, X0
	305 Move X0, [X23]
	306 Move [X31+128], X31
	307 Call 0x1C17F10
	308 Move X1, [X28]
	309 Move X24, X0
	310 Call HashSet`1<UInt32>..ctor, X0
	311 Add W8, W29, W27
	312 Move X27, [X31+152]
	313 Move [X31+16], W8
	314 Move X8, W25
	315 Add W28, W25, W21
	316 Move [X31+8], X8
	317 NotImplemented "Instruction MADD not yet implemented."
	318 Move X0, [X20]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move W0, [X31+16]
	324 Move W1, [X31+20]
	325 Move X2, X31
	326 Call Math.Min, X0, X1
	327 Move X21, [X31+8]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move [X31+24], W23
	330 Move [X31+28], W29
	331 Move X0, [X20]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move W0, W28
	337 Move W1, W22
	338 Move X2, X31
	339 Call Math.Min, X0, X1
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Compare X19, 0
	342 JumpIfEqual {604}
	343 Move W8, [X19+24]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X8, 0x82C000
	346 Move X8, [X8+2024]
	347 Move X0, [X8]
	348 Add X8, X19, W23
	349 Move W29, [X8+32]
	350 Move W9, [X0+224]
	351 Compare W9, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Compare X24, 0
	355 JumpIfEqual {604}
	356 Move X2, [X26]
	357 And W25, W29, 0xFF00
	358 NotImplemented "Instruction BFM not yet implemented."
	359 NotImplemented "Instruction BFM not yet implemented."
	360 Move X0, X24
	361 Move W1, W25
	362 Call HashSet`1<UInt32>.Add, X0, X1
	363 Move TEMP, X0
	364 And TEMP, TEMP, 1
	365 Compare TEMP, 1
	366 JumpIfNotEqual {426}
	367 Compare X27, 0
	368 JumpIfEqual {604}
	369 Move X8, 0x82C000
	370 Move X8, [X8+2040]
	371 Add X2, X31, 136
	372 Move X0, X27
	373 Move W1, W25
	374 Move X3, [X8]
	375 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Int32>>.TryGetValue, X0, X1, X2
	376 Move TEMP, X0
	377 And TEMP, TEMP, 1
	378 Compare TEMP, 1
	379 JumpIfNotEqual {426}
	380 Move X0, [X31+32]
	381 Compare X0, 0
	382 JumpIfEqual {604}
	383 Move X8, 0x82C000
	384 Move X1, [X31+136]
	385 Move X8, [X8+2048]
	386 Add X2, X31, 128
	387 Move X3, [X8]
	388 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	389 Move TEMP, X0
	390 And TEMP, TEMP, 1
	391 Compare TEMP, 1
	392 JumpIfNotEqual {401}
	393 Move X0, [X31+128]
	394 Compare X0, 0
	395 JumpIfEqual {604}
	396 Move X8, 0x7D3000
	397 Move W1, [X31+144]
	398 Move X8, [X8+2520]
	399 Move X2, [X8]
	400 Call HashSet`1<Int32>.Add, X0, X1
	401 Move X8, 0x7D2000
	402 Move X25, [X31+136]
	403 Move X8, [X8+3592]
	404 Move X0, [X8]
	405 Call 0x1C17F10
	406 Move X8, 0x7D8000
	407 Move X8, [X8+1672]
	408 Move X29, X0
	409 Move X1, [X8]
	410 Call HashSet`1<Int32>..ctor, X0
	411 Compare X29, 0
	412 JumpIfEqual {604}
	413 Move X8, 0x7D3000
	414 Move W1, [X31+144]
	415 Move X8, [X8+2520]
	416 Move X0, X29
	417 Move X2, [X8]
	418 Call HashSet`1<Int32>.Add, X0, X1
	419 Move X8, 0x82C000
	420 Move X8, [X8+1984]
	421 Move X0, [X31+32]
	422 Move X1, X25
	423 Move X2, X29
	424 Move X3, [X8]
	425 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	426 Add X21, X21, 1
	427 Add W23, W23, 1
	428 Move W23, [X31+24]
	429 Move W29, [X31+28]
	430 Add W29, W29, 1
	431 Add W23, W23, W22
	432 Move X8, 0x82C000
	433 Move X8, [X8+2000]
	434 Move X0, [X8]
	435 Call 0x1C17F10
	436 Move X8, 0x82C000
	437 Move X8, [X8+1992]
	438 Move X19, X0
	439 Move X1, [X8]
	440 Call Dictionary`2<Object, Object>..ctor, X0
	441 Move X0, [X31+32]
	442 Compare X0, 0
	443 JumpIfEqual {604}
	444 Move X8, 0x82C000
	445 Move X8, [X8+2032]
	446 Move X1, [X8]
	447 Add X8, X31, 40
	448 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	449 NotImplemented "Instruction LDUR not yet implemented."
	450 NotImplemented "Instruction LDUR not yet implemented."
	451 Move X8, [X31+72]
	452 Move X28, 0x7D3000
	453 Move W25, 12
	454 Move [X31+80], V0
	455 Move [X31+88], V1
	456 Move [X31+112], X8
	457 Move X28, [X28+2520]
	458 Move X8, 0x82C000
	459 Move X8, [X8+2072]
	460 Move X1, [X8]
	461 Add X0, X31, 80
	462 Call Enumerator<Object, Object>.MoveNext, X0
	463 Move TEMP, X0
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfNotEqual {580}
	467 Move X8, 0x82C000
	468 Move X20, [X31+96]
	469 Move X22, [X31+104]
	470 Move X8, [X8+2152]
	471 Move X0, [X8]
	472 Call 0x1C17F10
	473 Move X21, X0
	474 Move X1, X31
	475 Call <>c__DisplayClass19_0..ctor, X0
	476 Compare X20, 0
	477 JumpIfEqual {614}
	478 Compare X21, 0
	479 JumpIfEqual {615}
	480 Move X8, [X20+88]
	481 Move [X21+16], X8
	482 Move X8, [X20+48]
	483 Move [X21+24], X8
	484 Move X8, 0x7D3000
	485 Move X8, [X8+2512]
	486 Move X0, [X8]
	487 Call 0x1C17F10
	488 Move X8, 0x82C000
	489 Move X8, [X8+2144]
	490 Move X23, X0
	491 Move X2, [X8]
	492 Move X1, X21
	493 Move X3, X31
	494 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	495 Move X8, 0x82C000
	496 Move X8, [X8+2056]
	497 Move X2, [X8]
	498 Move X0, X22
	499 Move X1, X23
	500 Call Enumerable.Select, X0, X1
	501 Move X8, 0x7D2000
	502 Move X8, [X8+3592]
	503 Move X23, X0
	504 Move X0, [X8]
	505 Call 0x1C17F10
	506 Move X8, 0x7D2000
	507 Move X8, [X8+3584]
	508 Move X22, X0
	509 Move X2, [X8]
	510 Move X1, X23
	511 Call HashSet`1<Int32>..ctor, X0, X1
	512 Move X8, 0x7D2000
	513 Move X8, [X8+3592]
	514 Move X0, [X8]
	515 Call 0x1C17F10
	516 Move X8, 0x7D8000
	517 Move X8, [X8+1672]
	518 Move X23, X0
	519 Move X1, [X8]
	520 Call HashSet`1<Int32>..ctor, X0
	521 Move X8, [X21+24]
	522 Compare X8, 0
	523 JumpIfEqual {613}
	524 Move W9, [X8+24]
	525 Subtract W26, W9, 1
	526 Move W24, W31
	527 Move W9, [X8+24]
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Add X8, X8, W24
	530 Move X0, [X8+32]
	531 Compare X0, 0
	532 JumpIfEqual {608}
	533 Move X27, [X21+16]
	534 Move W1, W31
	535 Move X2, X31
	536 Call SharedVertex.get_Item, X0, X1
	537 Compare X27, 0
	538 JumpIfEqual {609}
	539 Move W8, [X27+24]
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X8, W0
	542 NotImplemented "Instruction MADD not yet implemented."
	543 Move S0, [X8+32]
	544 Move S1, [X8+36]
	545 Move V2, [X8+40]
	546 Move X0, X31
	547 Call VectorHash.GetHashCode, X0
	548 Move W1, W0
	549 Compare X22, 0
	550 JumpIfEqual {610}
	551 Move X8, 0x7D2000
	552 Move X8, [X8+3576]
	553 Move X2, [X8]
	554 Move X0, X22
	555 Call HashSet`1<Int32>.Contains, X0, X1
	556 Move TEMP, X0
	557 And TEMP, TEMP, 1
	558 Compare TEMP, 1
	559 JumpIfNotEqual {566}
	560 Compare X23, 0
	561 JumpIfEqual {612}
	562 Move X2, [X28]
	563 Move X0, X23
	564 Move W1, W24
	565 Call HashSet`1<Int32>.Add, X0, X1
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Move X8, [X21+24]
	568 Add W24, W24, 1
	569 Compare X8, 0
	570 JumpIfNotEqual {527}
	571 Compare X19, 0
	572 JumpIfEqual {616}
	573 Move X8, 0x82C000
	574 Move X8, [X8+1984]
	575 Move X3, [X8]
	576 Move X0, X19
	577 Move X1, X20
	578 Move X2, X23
	579 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	580 Move X8, 0x82C000
	581 Move X8, [X8+2064]
	582 Add X0, X31, 80
	583 Move X1, [X8]
	584 Call Enumerator<Object, Object>.Dispose, X0
	585 Move X0, X19
	586 Move X20, [X31+272]
	587 Move X19, [X31+280]
	588 Move X22, [X31+256]
	589 Move X21, [X31+264]
	590 Move X24, [X31+240]
	591 Move X23, [X31+248]
	592 Move X26, [X31+224]
	593 Move X25, [X31+232]
	594 Move X28, [X31+208]
	595 Move X27, [X31+216]
	596 Move X29, [X31+192]
	597 Move X30, [X31+200]
	598 Move D9, [X31+176]
	599 Move D8, [X31+184]
	600 Move D11, [X31+160]
	601 Move D10, [X31+168]
	602 Add X31, X31, 288
	603 Return X0
	604 Call 0x1C17F20
	605 Call 0x1C17F28
	606 Call 0x1C17F28
	607 Call 0x1C17F28
	608 Call 0x1C17F20
	609 Call 0x1C17F20
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F20
	617 Move X20, X0
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X0, X20
	620 Call 0x3EB2AD0
	621 Move X21, [X0]
	622 Call 0x3EB2AE0
	623 Move X8, 0x82C000
	624 Move X8, [X8+2064]
	625 Add X0, X31, 80
	626 Move X1, [X8]
	627 Call Enumerator<Object, Object>.Dispose, X0
	628 Compare X21, 0
	629 JumpIfEqual {585}
	630 Move X0, X21
	631 Call 0x1C17F18
	632 Move X21, X31
	633 Move X20, X0
	634 Move X8, 0x82C000
	635 Move X8, [X8+2064]
	636 Move X1, [X8]
	637 Add X0, X31, 80
	638 Call Enumerator<Object, Object>.Dispose, X0
	639 Compare X21, 0
	640 JumpIfNotEqual {643}
	641 Move X0, X20
	642 Call 0x1D2D690
	643 Move X0, X21
	644 Call 0x1C17F18
	645 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Edge>> PickEdgesInRect(UnityEngine.Camera camera, UnityEngine.Rect pickerRect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, System.Int32 renderTextureWidth = -1, System.Int32 renderTextureHeight = -1)

Disassembly:
	0x03925CD4 BL 0x1C16DFC
	0x03925CD8 MOV X0, X22
	0x03925CDC MOV X1, X31
	0x03925CE0 BL 0x3C39564
	0x03925CE4 MOV X0, X21
	0x03925CE8 MOV X1, X31
	0x03925CEC BL 0x3C39564
	0x03925CF0 LDR W8, [X19 + 0x18]
	0x03925CF4 ADD W23, W23, 0x1
	0x03925CF8 CMP W23, W8
	0x03925CFC B.LT 0x3925C94
	0x03925D00 MOV X0, X20
	0x03925D04 LDP X20, X19, [X31 + 0x30]
	0x03925D08 LDP X22, X21, [X31 + 0x20]
	0x03925D0C LDP X24, X23, [X31 + 0x10]
	0x03925D10 LDP X30, X25, [X31], #0x40
	0x03925D14 RET
	0x03925D18 BL 0x1C16F20
	0x03925D1C BL 0x1C16F28
	0x03925D20 AND W8, W0, 0xFF00
	0x03925D24 BFM W8, W0, 0x10, 0x7
	0x03925D28 BFM W8, W0, 0x10, 0x17
	0x03925D2C MOV W0, W8
	0x03925D30 RET
	0x03925D34 SUB X31, X31, 0x60
	0x03925D38 STP X30, X27, [X31 + 0x10]
	0x03925D3C STP X26, X25, [X31 + 0x20]
	0x03925D40 STP X24, X23, [X31 + 0x30]
	0x03925D44 STP X22, X21, [X31 + 0x40]
	0x03925D48 STP X20, X19, [X31 + 0x50]
	0x03925D4C ADRP X26, 0xABC000
	0x03925D50 ADRP X25, 0x829000
	0x03925D54 LDRB W8, [X26 + 0x8BF]
	0x03925D58 LDR X25, [X25 + 0x7E8]
	0x03925D5C MOV W20, W5
	0x03925D60 MOV W21, W4
	0x03925D64 MOV X23, X3
	0x03925D68 MOV W19, W2
	0x03925D6C MOV X24, X1
	0x03925D70 MOV X22, X0
	0x03925D74 TBNZ X8, 0x0, 0x3925DD4
	0x03925D78 ADRP X0, 0x828000
	0x03925D7C LDR X0, [X0 + 0xAC8]
	0x03925D80 BL 0x1C16CF4
	0x03925D84 ADRP X0, 0x7D0000
	0x03925D88 LDR X0, [X0 + 0x168]
	0x03925D8C BL 0x1C16CF4
	0x03925D90 ADRP X0, 0x829000
	0x03925D94 LDR X0, [X0 + 0x968]
	0x03925D98 BL 0x1C16CF4
	0x03925D9C ADRP X0, 0x7CE000
	0x03925DA0 LDR X0, [X0 + 0x598]
	0x03925DA4 BL 0x1C16CF4
	0x03925DA8 ADRP X0, 0x829000
	0x03925DAC LDR X0, [X0 + 0x7E8]
	0x03925DB0 BL 0x1C16CF4
	0x03925DB4 ADRP X0, 0x829000
	0x03925DB8 LDR X0, [X0 + 0x970]
	0x03925DBC BL 0x1C16CF4
	0x03925DC0 ADRP X0, 0x7D4000
	0x03925DC4 LDR X0, [X0 + 0x950]
	0x03925DC8 BL 0x1C16CF4
	0x03925DCC MOVZ W8, 0x1
	0x03925DD0 STRB W8, [X26 + 0x8BF]
	0x03925DD4 LDR X0, [X25]
	0x03925DD8 STP X31, X31, [X31]
	0x03925DDC ADRP X26, 0x828000
	0x03925DE0 LDR W8, [X0 + 0xE0]
	0x03925DE4 LDR X26, [X26 + 0xAC8]
	0x03925DE8 CBNZ W8, 0x3925DF0
	0x03925DEC BL 0x1C16DFC
	0x03925DF0 AND W1, W19, 0x1
	0x03925DF4 ADD X3, X31, 0x8
	0x03925DF8 ADD X4, X31, 0x0
	0x03925DFC MOV X0, X24
	0x03925E00 MOV X2, X23
	0x03925E04 BL 0x392685C
	0x03925E08 LDR X0, [X26]
	0x03925E0C LDR W8, [X0 + 0xE0]
	0x03925E10 CBNZ W8, 0x3925E18
	0x03925E14 BL 0x1C16DFC
	0x03925E18 MOV X0, X31
	0x03925E1C BL 0x38FAE1C
	0x03925E20 CBZ X0, 0x3926010
	0x03925E24 LDR X8, [X25]
	0x03925E28 ADRP X9, 0x7D4000
	0x03925E2C MOV X2, X31
	0x03925E30 LDR X8, [X8 + 0xB8]
	0x03925E34 LDR X9, [X9 + 0x950]
	0x03925E38 LDP S2, S3, [X8 + 0x8]
	0x03925E3C LDP S0, S1, [X8]
	0x03925E40 LDR X1, [X9]
	0x03925E44 BL 0x3C1498C
	0x03925E48 BL 0x39259FC
	0x03925E4C MOV X23, X0
	0x03925E50 MOV X0, X31
	0x03925E54 BL 0x38FADC0
	0x03925E58 CBZ X23, 0x3926010
	0x03925E5C ADRP X9, 0x829000
	0x03925E60 ADRP X10, 0x829000
	0x03925E64 LDR X8, [X23]
	0x03925E68 LDR X9, [X9 + 0x968]
	0x03925E6C LDR X10, [X10 + 0x970]
	0x03925E70 MOV X24, X0
	0x03925E74 LDR X1, [X9]
	0x03925E78 LDRH W9, [X8 + 0x12E]
	0x03925E7C LDR X25, [X10]
	0x03925E80 CBZ X9, 0x3925EA4
	0x03925E84 LDR X10, [X8 + 0xB0]
	0x03925E88 ADD X10, X10, 0x8
	0x03925E8C LDUR X11, [X10 - 0x8]
	0x03925E90 CMP X11, X1
	0x03925E94 B.EQ 0x3925EB4
	0x03925E98 SUBS X9, X9, 0x1
	0x03925E9C ADD X10, X10, 0x10
	0x03925EA0 B.NE 0x3925E8C
	0x03925EA4 MOV X0, X23
	0x03925EA8 MOV W2, W31
	0x03925EAC BL 0x1C5C788
	0x03925EB0 B 0x3925EC0
	0x03925EB4 LDRSW X9, [X10]
	0x03925EB8 ADD X8, X8, X9, 0x4, LSL
	0x03925EBC ADD X0, X8, 0x138
	0x03925EC0 LDP X8, X6, [X0]
	0x03925EC4 MOV X0, X23
	0x03925EC8 MOV X1, X22
	0x03925ECC MOV X2, X24
	0x03925ED0 MOV X3, X25
	0x03925ED4 MOV W4, W21
	0x03925ED8 MOV W5, W20
	0x03925EDC BLR X8
	0x03925EE0 LDR X23, [X31]
	0x03925EE4 CBZ X23, 0x3926010
	0x03925EE8 LDR X8, [X23 + 0x18]
	0x03925EEC ADRP X22, 0x7CE000
	0x03925EF0 LDR X22, [X22 + 0x598]
	0x03925EF4 MOV X20, X0
	0x03925EF8 SUBS W24, W8, 0x1
	0x03925EFC B.LT 0x3925F88
	0x03925F00 CBZ W8, 0x3925FEC
	0x03925F04 ADRP X26, 0x7D0000
	0x03925F08 LDR X26, [X26 + 0x168]
	0x03925F0C MOV W25, W31
	0x03925F10 ADD X27, X23, W25, 0x3, SXTW
	0x03925F14 LDR X0, [X27 + 0x20]!
	0x03925F18 CBZ X0, 0x3926010
	0x03925F1C LDR X1, [X26]
	0x03925F20 BL 0x21E52E4
	0x03925F24 CBZ X0, 0x3926010
	0x03925F28 MOV X1, X31
	0x03925F2C BL 0x3C16D04
	0x03925F30 LDR X8, [X22]
	0x03925F34 MOV X21, X0
	0x03925F38 LDR W9, [X8 + 0xE0]
	0x03925F3C CBNZ W9, 0x3925F48
	0x03925F40 MOV X0, X8
	0x03925F44 BL 0x1C16DFC
	0x03925F48 MOV X0, X21
	0x03925F4C MOV X1, X31
	0x03925F50 BL 0x3C39564
	0x03925F54 LDR W8, [X23 + 0x18]
	0x03925F58 CMP W25, W8
	0x03925F5C B.CS 0x3925FEC
	0x03925F60 LDR X0, [X27]
	0x03925F64 MOV X1, X31
	0x03925F68 BL 0x3C39564
	0x03925F6C CMP W24, W25
	0x03925F70 B.EQ 0x3925F88
	0x03925F74 LDR W8, [X23 + 0x18]
	0x03925F78 ADD W25, W25, 0x1
	0x03925F7C CMP W25, W8
	0x03925F80 B.CC 0x3925F10
	0x03925F84 B 0x3925FEC
	0x03925F88 TBZ X19, 0x0, 0x3925FF0
	0x03925F8C LDR X21, [X31 + 0x8]
	0x03925F90 CBZ X21, 0x3926010
	0x03925F94 LDR X8, [X21 + 0x18]
	0x03925F98 CMP W8, 0x1
	0x03925F9C B.LT 0x3925FF0
	0x03925FA0 AND X8, X8, 0x0
	0x03925FA4 CBZ X8, 0x3925FEC
	0x03925FA8 MOV X23, X31
	0x03925FAC SUB X24, X8, 0x1
	0x03925FB0 ADD X25, X21, 0x20
	0x03925FB4 LDR X0, [X22]
	0x03925FB8 LDR X19, [X25, X23, LSL #3]
	0x03925FBC LDR W8, [X0 + 0xE0]
	0x03925FC0 CBNZ W8, 0x3925FC8
	0x03925FC4 BL 0x1C16DFC
	0x03925FC8 MOV X0, X19
	0x03925FCC MOV X1, X31
	0x03925FD0 BL 0x3C39564
	0x03925FD4 CMP X24, X23
	0x03925FD8 B.EQ 0x3925FF0
	0x03925FDC LDR W8, [X21 + 0x18]
	0x03925FE0 ADD X23, X23, 0x1
	0x03925FE4 CMP X23, X8
	0x03925FE8 B.CC 0x3925FB4
	0x03925FEC BL 0x1C16F28
	0x03925FF0 MOV X0, X20
	0x03925FF4 LDP X20, X19, [X31 + 0x50]
	0x03925FF8 LDP X22, X21, [X31 + 0x40]
	0x03925FFC LDP X24, X23, [X31 + 0x30]
	0x03926000 LDP X26, X25, [X31 + 0x20]
	0x03926004 LDP X30, X27, [X31 + 0x10]
	0x03926008 ADD X31, X31, 0x60
	0x0392600C RET
	0x03926010 BL 0x1C16F20
	0x03926014 SUB X31, X31, 0x60
	0x03926018 STP X30, X27, [X31 + 0x10]
	0x0392601C STP X26, X25, [X31 + 0x20]
	0x03926020 STP X24, X23, [X31 + 0x30]
	0x03926024 STP X22, X21, [X31 + 0x40]
	0x03926028 STP X20, X19, [X31 + 0x50]
	0x0392602C ADRP X26, 0xABB000
	0x03926030 ADRP X25, 0x828000
	0x03926034 LDRB W8, [X26 + 0x8C0]
	0x03926038 LDR X25, [X25 + 0x7E8]
	0x0392603C MOV W20, W5
	0x03926040 MOV W21, W4
	0x03926044 MOV X23, X3
	0x03926048 MOV W19, W2
	0x0392604C MOV X24, X1
	0x03926050 MOV X22, X0
	0x03926054 TBNZ X8, 0x0, 0x39260B4
	0x03926058 ADRP X0, 0x827000
	0x0392605C LDR X0, [X0 + 0xAC8]
	0x03926060 BL 0x1C16CF4
	0x03926064 ADRP X0, 0x7CF000
	0x03926068 LDR X0, [X0 + 0x168]
	0x0392606C BL 0x1C16CF4
	0x03926070 ADRP X0, 0x828000
	0x03926074 LDR X0, [X0 + 0x968]
	0x03926078 BL 0x1C16CF4
	0x0392607C ADRP X0, 0x7CD000
	0x03926080 LDR X0, [X0 + 0x598]
	0x03926084 BL 0x1C16CF4
	0x03926088 ADRP X0, 0x828000
	0x0392608C LDR X0, [X0 + 0x7E8]
	0x03926090 BL 0x1C16CF4
	0x03926094 ADRP X0, 0x828000
	0x03926098 LDR X0, [X0 + 0x970]
	0x0392609C BL 0x1C16CF4
	0x039260A0 ADRP X0, 0x7D3000
	0x039260A4 LDR X0, [X0 + 0x950]
	0x039260A8 BL 0x1C16CF4
	0x039260AC MOVZ W8, 0x1
	0x039260B0 STRB W8, [X26 + 0x8C0]
	0x039260B4 LDR X0, [X25]
	0x039260B8 STP X31, X31, [X31]
	0x039260BC ADRP X26, 0x827000
	0x039260C0 LDR W8, [X0 + 0xE0]
	0x039260C4 LDR X26, [X26 + 0xAC8]
	0x039260C8 CBNZ W8, 0x39260D0
	0x039260CC BL 0x1C16DFC
	0x039260D0 AND W1, W19, 0x1
	0x039260D4 ADD X3, X31, 0x8
	0x039260D8 ADD X4, X31, 0x0
	0x039260DC MOV X0, X24
	0x039260E0 MOV X2, X23
	0x039260E4 BL 0x3926C8C
	0x039260E8 LDR X0, [X26]
	0x039260EC LDR W8, [X0 + 0xE0]
	0x039260F0 CBNZ W8, 0x39260F8
	0x039260F4 BL 0x1C16DFC
	0x039260F8 MOV X0, X31
	0x039260FC BL 0x38FAE1C
	0x03926100 CBZ X0, 0x39262F0
	0x03926104 LDR X8, [X25]
	0x03926108 ADRP X9, 0x7D3000
	0x0392610C MOV X2, X31
	0x03926110 LDR X8, [X8 + 0xB8]
	0x03926114 LDR X9, [X9 + 0x950]
	0x03926118 LDP S2, S3, [X8 + 0x8]
	0x0392611C LDP S0, S1, [X8]
	0x03926120 LDR X1, [X9]
	0x03926124 BL 0x3C1498C
	0x03926128 BL 0x39259FC
	0x0392612C MOV X23, X0
	0x03926130 MOV X0, X31
	0x03926134 BL 0x38FADC0
	0x03926138 CBZ X23, 0x39262F0
	0x0392613C ADRP X9, 0x828000
	0x03926140 ADRP X10, 0x828000
	0x03926144 LDR X8, [X23]
	0x03926148 LDR X9, [X9 + 0x968]
	0x0392614C LDR X10, [X10 + 0x970]
	0x03926150 MOV X24, X0
	0x03926154 LDR X1, [X9]
	0x03926158 LDRH W9, [X8 + 0x12E]
	0x0392615C LDR X25, [X10]
	0x03926160 CBZ X9, 0x3926184
	0x03926164 LDR X10, [X8 + 0xB0]
	0x03926168 ADD X10, X10, 0x8
	0x0392616C LDUR X11, [X10 - 0x8]
	0x03926170 CMP X11, X1
	0x03926174 B.EQ 0x3926194
	0x03926178 SUBS X9, X9, 0x1
	0x0392617C ADD X10, X10, 0x10
	0x03926180 B.NE 0x392616C
	0x03926184 MOV X0, X23
	0x03926188 MOV W2, W31
	0x0392618C BL 0x1C5C788
	0x03926190 B 0x39261A0
	0x03926194 LDRSW X9, [X10]
	0x03926198 ADD X8, X8, X9, 0x4, LSL
	0x0392619C ADD X0, X8, 0x138
	0x039261A0 LDP X8, X6, [X0]
	0x039261A4 MOV X0, X23
	0x039261A8 MOV X1, X22
	0x039261AC MOV X2, X24
	0x039261B0 MOV X3, X25
	0x039261B4 MOV W4, W21
	0x039261B8 MOV W5, W20
	0x039261BC BLR X8
	0x039261C0 LDR X23, [X31]
	0x039261C4 CBZ X23, 0x39262F0
	0x039261C8 LDR X8, [X23 + 0x18]
	0x039261CC ADRP X22, 0x7CD000
	0x039261D0 LDR X22, [X22 + 0x598]
	0x039261D4 MOV X20, X0
	0x039261D8 SUBS W24, W8, 0x1
	0x039261DC B.LT 0x3926268
	0x039261E0 CBZ W8, 0x39262CC
	0x039261E4 ADRP X26, 0x7CF000
	0x039261E8 LDR X26, [X26 + 0x168]
	0x039261EC MOV W25, W31
	0x039261F0 ADD X27, X23, W25, 0x3, SXTW
	0x039261F4 LDR X0, [X27 + 0x20]!
	0x039261F8 CBZ X0, 0x39262F0
	0x039261FC LDR X1, [X26]
	0x03926200 BL 0x21E52E4
	0x03926204 CBZ X0, 0x39262F0
	0x03926208 MOV X1, X31
	0x0392620C BL 0x3C16D04
	0x03926210 LDR X8, [X22]
	0x03926214 MOV X21, X0
	0x03926218 LDR W9, [X8 + 0xE0]
	0x0392621C CBNZ W9, 0x3926228
	0x03926220 MOV X0, X8
	0x03926224 BL 0x1C16DFC
	0x03926228 MOV X0, X21
	0x0392622C MOV X1, X31
	0x03926230 BL 0x3C39564
	0x03926234 LDR W8, [X23 + 0x18]
	0x03926238 CMP W25, W8
	0x0392623C B.CS 0x39262CC
	0x03926240 LDR X0, [X27]
	0x03926244 MOV X1, X31
	0x03926248 BL 0x3C39564
	0x0392624C CMP W24, W25
	0x03926250 B.EQ 0x3926268
	0x03926254 LDR W8, [X23 + 0x18]
	0x03926258 ADD W25, W25, 0x1
	0x0392625C CMP W25, W8
	0x03926260 B.CC 0x39261F0
	0x03926264 B 0x39262CC
	0x03926268 TBZ X19, 0x0, 0x39262D0
	0x0392626C LDR X21, [X31 + 0x8]
	0x03926270 CBZ X21, 0x39262F0
	0x03926274 LDR X8, [X21 + 0x18]
	0x03926278 CMP W8, 0x1
	0x0392627C B.LT 0x39262D0
	0x03926280 AND X8, X8, 0x0
	0x03926284 CBZ X8, 0x39262CC
	0x03926288 MOV X23, X31
	0x0392628C SUB X24, X8, 0x1
	0x03926290 ADD X25, X21, 0x20
	0x03926294 LDR X0, [X22]
	0x03926298 LDR X19, [X25, X23, LSL #3]
	0x0392629C LDR W8, [X0 + 0xE0]
	0x039262A0 CBNZ W8, 0x39262A8
	0x039262A4 BL 0x1C16DFC
	0x039262A8 MOV X0, X19
	0x039262AC MOV X1, X31
	0x039262B0 BL 0x3C39564
	0x039262B4 CMP X24, X23
	0x039262B8 B.EQ 0x39262D0
	0x039262BC LDR W8, [X21 + 0x18]
	0x039262C0 ADD X23, X23, 0x1
	0x039262C4 CMP X23, X8
	0x039262C8 B.CC 0x3926294
	0x039262CC BL 0x1C16F28
	0x039262D0 MOV X0, X20
	0x039262D4 LDP X20, X19, [X31 + 0x50]
	0x039262D8 LDP X22, X21, [X31 + 0x40]
	0x039262DC LDP X24, X23, [X31 + 0x30]
	0x039262E0 LDP X26, X25, [X31 + 0x20]
	0x039262E4 LDP X30, X27, [X31 + 0x10]
	0x039262E8 ADD X31, X31, 0x60
	0x039262EC RET
	0x039262F0 BL 0x1C16F20
	0x039262F4 SUB X31, X31, 0x90
	0x039262F8 STP X29, X30, [X31 + 0x30]
	0x039262FC STP X28, X27, [X31 + 0x40]
	0x03926300 STP X26, X25, [X31 + 0x50]
	0x03926304 STP X24, X23, [X31 + 0x60]
	0x03926308 STP X22, X21, [X31 + 0x70]
	0x0392630C STP X20, X19, [X31 + 0x80]
	0x03926310 ADRP X20, 0xABB000
	0x03926314 LDRB W8, [X20 + 0x8C1]
	0x03926318 MOV X19, X1
	0x0392631C MOV X28, X0
	0x03926320 TBNZ X8, 0x0, 0x39263F8
	0x03926324 ADRP X0, 0x827000
	0x03926328 LDR X0, [X0 + 0xAC8]
	0x0392632C BL 0x1C16CF4
	0x03926330 ADRP X0, 0x7F9000
	0x03926334 LDR X0, [X0 + 0xAF8]
	0x03926338 BL 0x1C16CF4
	0x0392633C ADRP X0, 0x828000
	0x03926340 LDR X0, [X0 + 0x978]
	0x03926344 BL 0x1C16CF4
	0x03926348 ADRP X0, 0x828000
	0x0392634C LDR X0, [X0 + 0x980]
	0x03926350 BL 0x1C16CF4
	0x03926354 ADRP X0, 0x828000
	0x03926358 LDR X0, [X0 + 0x988]
	0x0392635C BL 0x1C16CF4
	0x03926360 ADRP X0, 0x827000
	0x03926364 LDR X0, [X0 + 0xFA0]
	0x03926368 BL 0x1C16CF4
	0x0392636C ADRP X0, 0x7CF000
	0x03926370 LDR X0, [X0 + 0x9C8]
	0x03926374 BL 0x1C16CF4
	0x03926378 ADRP X0, 0x827000
	0x0392637C LDR X0, [X0 + 0xFA8]
	0x03926380 BL 0x1C16CF4
	0x03926384 ADRP X0, 0x7CF000
	0x03926388 LDR X0, [X0 + 0x7B0]
	0x0392638C BL 0x1C16CF4
	0x03926390 ADRP X0, 0x828000
	0x03926394 LDR X0, [X0 + 0x990]
	0x03926398 BL 0x1C16CF4
	0x0392639C ADRP X0, 0x828000
	0x039263A0 LDR X0, [X0 + 0x998]
	0x039263A4 BL 0x1C16CF4
	0x039263A8 ADRP X0, 0x7D4000
	0x039263AC LDR X0, [X0 + 0x700]
	0x039263B0 BL 0x1C16CF4
	0x039263B4 ADRP X0, 0x828000
	0x039263B8 LDR X0, [X0 + 0x7E8]
	0x039263BC BL 0x1C16CF4
	0x039263C0 ADRP X0, 0x828000
	0x039263C4 LDR X0, [X0 + 0x9A0]
	0x039263C8 BL 0x1C16CF4
	0x039263CC ADRP X0, 0x828000
	0x039263D0 LDR X0, [X0 + 0x9A8]
	0x039263D4 BL 0x1C16CF4
	0x039263D8 ADRP X0, 0x828000
	0x039263DC LDR X0, [X0 + 0x9B0]
	0x039263E0 BL 0x1C16CF4
	0x039263E4 ADRP X0, 0x828000
	0x039263E8 LDR X0, [X0 + 0x9B8]
	0x039263EC BL 0x1C16CF4
	0x039263F0 MOVZ W8, 0x1
	0x039263F4 STRB W8, [X20 + 0x8C1]
	0x039263F8 CBZ X28, 0x3926854
	0x039263FC ADRP X10, 0x828000
	0x03926400 LDR X8, [X28]
	0x03926404 LDR X10, [X10 + 0x990]
	0x03926408 ADRP X22, 0x7CF000
	0x0392640C ADRP X21, 0x828000
	0x03926410 ADRP X20, 0x828000
	0x03926414 LDRH W9, [X8 + 0x12E]
	0x03926418 LDR X1, [X10]
	0x0392641C LDR X22, [X22 + 0x7B0]
	0x03926420 LDR X21, [X21 + 0x988]
	0x03926424 LDR X20, [X20 + 0x980]
	0x03926428 CBZ X9, 0x392644C
	0x0392642C LDR X10, [X8 + 0xB0]
	0x03926430 ADD X10, X10, 0x8
	0x03926434 LDUR X11, [X10 - 0x8]
	0x03926438 CMP X11, X1
	0x0392643C B.EQ 0x392645C
	0x03926440 SUBS X9, X9, 0x1
	0x03926444 ADD X10, X10, 0x10
	0x03926448 B.NE 0x3926434
	0x0392644C MOV X0, X28
	0x03926450 MOV W2, W31
	0x03926454 BL 0x1C5C788
	0x03926458 B 0x3926468
	0x0392645C LDRSW X9, [X10]
	0x03926460 ADD X8, X8, X9, 0x4, LSL
	0x03926464 ADD X0, X8, 0x138
	0x03926468 LDP X8, X1, [X0]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D12
	003 Move [X31+144], D11
	004 Move [X31+152], D10
	005 Move [X31+160], D9
	006 Move [X31+168], D8
	007 Move [X31+176], X29
	008 Move [X31+184], X30
	009 Move [X31+192], X28
	010 Move [X31+200], X27
	011 Move [X31+208], X26
	012 Move [X31+216], X25
	013 Move [X31+224], X24
	014 Move [X31+232], X23
	015 Move [X31+240], X22
	016 Move [X31+248], X21
	017 Move [X31+256], X20
	018 Move [X31+264], X19
	019 Move X26, 0xABD000
	020 Move X25, 0x82A000
	021 Move X19, 0x82A000
	022 Move W8, [X26+2237]
	023 Move X25, [X25+2256]
	024 Move X19, [X19+2248]
	025 Move W20, W4
	026 Move W21, W3
	027 Move W23, W2
	028 Move X22, X1
	029 Move V8, V3
	030 Move V9, V2
	031 Move V10, V1
	032 Move V11, V0
	033 Move X24, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {115}
	038 Move X0, 0x82A000
	039 Move X0, [X0+2240]
	040 Call 0x1C17CF4
	041 Move X0, 0x82A000
	042 Move X0, [X0+2264]
	043 Call 0x1C17CF4
	044 Move X0, 0x82A000
	045 Move X0, [X0+2272]
	046 Call 0x1C17CF4
	047 Move X0, 0x82A000
	048 Move X0, [X0+2280]
	049 Call 0x1C17CF4
	050 Move X0, 0x82A000
	051 Move X0, [X0+2288]
	052 Call 0x1C17CF4
	053 Move X0, 0x82A000
	054 Move X0, [X0+2296]
	055 Call 0x1C17CF4
	056 Move X0, 0x82A000
	057 Move X0, [X0+2304]
	058 Call 0x1C17CF4
	059 Move X0, 0x82A000
	060 Move X0, [X0+2248]
	061 Call 0x1C17CF4
	062 Move X0, 0x82A000
	063 Move X0, [X0+2312]
	064 Call 0x1C17CF4
	065 Move X0, 0x82A000
	066 Move X0, [X0+2320]
	067 Call 0x1C17CF4
	068 Move X0, 0x82A000
	069 Move X0, [X0+2328]
	070 Call 0x1C17CF4
	071 Move X0, 0x82A000
	072 Move X0, [X0+2256]
	073 Call 0x1C17CF4
	074 Move X0, 0x82A000
	075 Move X0, [X0+2336]
	076 Call 0x1C17CF4
	077 Move X0, 0x82A000
	078 Move X0, [X0+2344]
	079 Call 0x1C17CF4
	080 Move X0, 0x82A000
	081 Move X0, [X0+2352]
	082 Call 0x1C17CF4
	083 Move X0, 0x829000
	084 Move X0, [X0+3400]
	085 Call 0x1C17CF4
	086 Move X0, 0x829000
	087 Move X0, [X0+3416]
	088 Call 0x1C17CF4
	089 Move X0, 0x829000
	090 Move X0, [X0+3424]
	091 Call 0x1C17CF4
	092 Move X0, 0x82A000
	093 Move X0, [X0+2360]
	094 Call 0x1C17CF4
	095 Move X0, 0x82A000
	096 Move X0, [X0+2368]
	097 Call 0x1C17CF4
	098 Move X0, 0x7CF000
	099 Move X0, [X0+1448]
	100 Call 0x1C17CF4
	101 Move X0, 0x7CF000
	102 Move X0, [X0+1432]
	103 Call 0x1C17CF4
	104 Move X0, 0x82A000
	105 Move X0, [X0+2024]
	106 Call 0x1C17CF4
	107 Move X0, 0x82A000
	108 Move X0, [X0+2376]
	109 Call 0x1C17CF4
	110 Move X0, 0x82A000
	111 Move X0, [X0+2384]
	112 Call 0x1C17CF4
	113 Move W8, 1
	114 Move [X26+2237], W8
	115 Move X0, [X25]
	116 NotImplemented "Instruction MOVI not yet implemented."
	117 Move [X31+136], X31
	118 Move [X31+96], V0
	119 Move [X31+104], V0
	120 Move [X31+80], X31
	121 Move [X31+88], X31
	122 Move [X31+72], X31
	123 Call 0x1C17F10
	124 Move X1, [X19]
	125 Move X26, X0
	126 Call Dictionary`2<Object, Object>..ctor, X0
	127 Move X8, 0x82A000
	128 Move X8, [X8+2024]
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 And W2, W23, 1
	135 Add X3, X31, 136
	136 Move X0, X24
	137 Move X1, X22
	138 Move W4, W21
	139 Move W5, W20
	140 Call SelectionPickerRenderer.RenderSelectionPickerTexture, X0, X1, X2, X3, X4, X5
	141 Compare X0, 0
	142 JumpIfEqual {493}
	143 Move X29, 0x7CF000
	144 Move X29, [X29+1448]
	145 Move X1, X31
	146 Move X24, X0
	147 Call Texture2D.GetPixels32, X0
	148 Move X19, 0xAB4000
	149 Move W8, [X19+2595]
	150 Move X20, X0
	151 Compare W8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, 0x7CF000
	154 Move X0, [X0+1448]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X19+2595], W8
	158 Move X0, [X29]
	159 NotImplemented "Instruction FRINTM not yet implemented."
	160 NotImplemented "Instruction FCVTMS not yet implemented."
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfEqual {169}
	164 Move W8, 0x7F800000
	165 Move S0, W8
	166 NotImplemented "Instruction FCMP not yet implemented."
	167 Move W8, 0x80000000
	168 NotImplemented "Instruction CSEL not yet implemented."
	169 Call 0x1C17DFC
	170 Move X0, [X29]
	171 Move W9, 0x7F800000
	172 Move S0, W9
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 Move W8, [X0+224]
	175 Move W9, 0x80000000
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move W0, W31
	181 Move W1, W21
	182 Move X2, X31
	183 Call Math.Max, X0, X1
	184 Move X8, [X24]
	185 Move W25, W0
	186 Move X0, X24
	187 Move X9, [X8+424]
	188 Move X1, [X8+432]
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move W8, [X19+2595]
	191 NotImplemented "Instruction SCVTF not yet implemented."
	192 Subtract S10, S0, S10
	193 Compare W8, 0
	194 JumpIfNotEqual {200}
	195 Move X0, 0x7CF000
	196 Move X0, [X0+1448]
	197 Call 0x1C17CF4
	198 Move W8, 1
	199 Move [X19+2595], W8
	200 Move X0, [X29]
	201 Subtract S10, S10, S8
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {206}
	205 Call 0x1C17DFC
	206 Move W8, 0x7F800000
	207 NotImplemented "Instruction FRINTM not yet implemented."
	208 Move S1, W8
	209 NotImplemented "Instruction FCVTMS not yet implemented."
	210 NotImplemented "Instruction FCMP not yet implemented."
	211 Move W8, 0x80000000
	212 NotImplemented "Instruction CSEL not yet implemented."
	213 Move W0, W31
	214 Move X2, X31
	215 Call Math.Max, X0, X1
	216 Move X8, [X24]
	217 Move W23, W0
	218 Move X0, X24
	219 Move X9, [X8+392]
	220 Move X1, [X8+400]
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X8, [X24]
	223 Move W22, W0
	224 Move X0, X24
	225 Move X9, [X8+424]
	226 Move X1, [X8+432]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move W8, [X19+2595]
	229 Move [X31+32], W0
	230 Compare W8, 0
	231 JumpIfNotEqual {237}
	232 Move X0, 0x7CE000
	233 Move X0, [X0+1448]
	234 Call 0x1C17CF4
	235 Move W8, 1
	236 Move [X19+2595], W8
	237 Move X0, [X29]
	238 NotImplemented "Instruction FRINTM not yet implemented."
	239 NotImplemented "Instruction FCVTMS not yet implemented."
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfEqual {248}
	243 Move W8, 0x7F800000
	244 Move S0, W8
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 Move W8, 0x80000000
	247 NotImplemented "Instruction CSEL not yet implemented."
	248 Call 0x1C17DFC
	249 Move W8, [X19+2595]
	250 Move W9, 0x7F800000
	251 Move S0, W9
	252 NotImplemented "Instruction FCMP not yet implemented."
	253 Move W9, 0x80000000
	254 NotImplemented "Instruction CSEL not yet implemented."
	255 Compare W8, 0
	256 JumpIfNotEqual {262}
	257 Move X0, 0x7CE000
	258 Move X0, [X0+1448]
	259 Call 0x1C17CF4
	260 Move W8, 1
	261 Move [X19+2595], W8
	262 Move X0, [X29]
	263 Move [X31+8], X26
	264 Move X19, 0x7CE000
	265 Move W28, W23
	266 Move W8, [X0+224]
	267 Move X19, [X19+1432]
	268 Compare W8, 0
	269 JumpIfNotEqual {271}
	270 Call 0x1C17DFC
	271 Move X23, 0x829000
	272 Move X23, [X23+2328]
	273 Move X0, [X19]
	274 Move X27, 0x829000
	275 Move X27, [X27+2304]
	276 Move W8, 0x7F800000
	277 Move W9, [X0+224]
	278 NotImplemented "Instruction FRINTM not yet implemented."
	279 Move S1, W8
	280 NotImplemented "Instruction FCVTMS not yet implemented."
	281 NotImplemented "Instruction FCMP not yet implemented."
	282 Move W8, 0x80000000
	283 NotImplemented "Instruction CSEL not yet implemented."
	284 Compare W9, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X0, X24
	288 Move X1, X31
	289 Call Object.DestroyImmediate, X0
	290 Move X0, [X23]
	291 Call 0x1C17F10
	292 Move X1, [X27]
	293 Move X24, X0
	294 Call Dictionary`2<UInt32, UInt32>..ctor, X0
	295 Add W8, W28, W26
	296 Move [X31+28], W8
	297 Move X8, W25
	298 Move W19, W28
	299 Add W27, W25, W21
	300 Move [X31+16], X8
	301 NotImplemented "Instruction MADD not yet implemented."
	302 Move TEMP, 0xFF000000
	303 Not TEMP
	304 Move W26, TEMP
	305 Move X0, [X29]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move W0, [X31+28]
	311 Move W1, [X31+32]
	312 Move X2, X31
	313 Call Math.Min, X0, X1
	314 Move X21, [X31+16]
	315 Move W28, W19
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move [X31+36], W23
	318 Move X0, [X29]
	319 Move W8, [X0+224]
	320 Compare W8, 0
	321 JumpIfNotEqual {323}
	322 Call 0x1C17DFC
	323 Move W0, W27
	324 Move W1, W22
	325 Move X2, X31
	326 Call Math.Min, X0, X1
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Compare X20, 0
	329 JumpIfEqual {493}
	330 Move W8, [X20+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, 0x829000
	333 Move X8, [X8+2024]
	334 Move X0, [X8]
	335 Add X8, X20, W23
	336 Move W19, [X8+32]
	337 Move W9, [X0+224]
	338 Compare W9, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 And W25, W19, 0xFF00
	342 NotImplemented "Instruction BFM not yet implemented."
	343 NotImplemented "Instruction BFM not yet implemented."
	344 Compare W25, 0
	345 JumpIfEqual {379}
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Compare X24, 0
	348 JumpIfEqual {493}
	349 Move X8, 0x829000
	350 Move X8, [X8+2272]
	351 Move X0, X24
	352 Move W1, W25
	353 Move X2, [X8]
	354 Call Dictionary`2<UInt32, UInt32>.ContainsKey, X0, X1
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfNotEqual {372}
	359 Move X8, 0x829000
	360 Move X8, [X8+2312]
	361 Move X0, X24
	362 Move W1, W25
	363 Move X2, [X8]
	364 Call Dictionary`2<UInt32, UInt32>.get_Item, X0, X1
	365 Move X8, 0x829000
	366 Move X8, [X8+2320]
	367 Add W2, W0, 1
	368 Move X0, X24
	369 Move W1, W25
	370 Move X3, [X8]
	371 Call Dictionary`2<UInt32, UInt32>.set_Item, X0, X1, X2
	372 Move X8, 0x829000
	373 Move X8, [X8+2264]
	374 Move W2, 1
	375 Move X0, X24
	376 Move W1, W25
	377 Move X3, [X8]
	378 Call Dictionary`2<UInt32, UInt32>.Add, X0, X1, X2
	379 Add X21, X21, 1
	380 Add W23, W23, 1
	381 Move W23, [X31+36]
	382 Move W19, W28
	383 Add W19, W28, 1
	384 Add W23, W23, W22
	385 Compare X24, 0
	386 JumpIfEqual {493}
	387 Move X8, 0x829000
	388 Move X8, [X8+2280]
	389 Move X0, X24
	390 Move X1, [X8]
	391 Add X8, X31, 40
	392 Call Dictionary`2<UInt32, UInt32>.GetEnumerator, X0
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 Move X23, 0x829000
	396 Move X24, 0x829000
	397 Move X25, 0x829000
	398 Move [X31+96], V0
	399 Move [X31+104], V1
	400 Move X26, 0x828000
	401 Move X27, 0x828000
	402 Move X28, 0x828000
	403 Move X29, 0x829000
	404 Move X20, [X31+136]
	405 Move X19, [X31+8]
	406 Move X23, [X23+2344]
	407 Move X24, [X24+2288]
	408 Move X25, [X25+2296]
	409 Move X26, [X26+3400]
	410 Move X27, [X27+3424]
	411 Move X28, [X28+3416]
	412 Move X29, [X29+2240]
	413 Move X1, [X23]
	414 Add X0, X31, 96
	415 Call Enumerator<UInt32, UInt32>.MoveNext, X0
	416 Move TEMP, X0
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfNotEqual {468}
	420 Move W8, [X31+116]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Compare X20, 0
	423 JumpIfEqual {495}
	424 Move W1, [X31+112]
	425 Move X3, [X24]
	426 Add X2, X31, 80
	427 Move X0, X20
	428 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Edge>>.TryGetValue, X0, X1, X2
	429 Move TEMP, X0
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfNotEqual {413}
	433 Move [X31+72], X31
	434 Compare X19, 0
	435 JumpIfEqual {496}
	436 Move X1, [X31+80]
	437 Move X3, [X25]
	438 Add X2, X31, 72
	439 Move X0, X19
	440 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	441 Move TEMP, X0
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfNotEqual {451}
	445 Move X0, [X31+72]
	446 Compare X0, 0
	447 JumpIfEqual {497}
	448 Move X1, [X31+88]
	449 Move X2, [X26]
	450 Call HashSet`1<Edge>.Add, X0, X1
	451 Move X21, [X31+80]
	452 Move X0, [X27]
	453 Call 0x1C17F10
	454 Move X1, [X28]
	455 Move X22, X0
	456 Call HashSet`1<Edge>..ctor, X0
	457 Compare X22, 0
	458 JumpIfEqual {498}
	459 Move X1, [X31+88]
	460 Move X2, [X26]
	461 Move X0, X22
	462 Call HashSet`1<Edge>.Add, X0, X1
	463 Move X3, [X29]
	464 Move X0, X19
	465 Move X1, X21
	466 Move X2, X22
	467 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	468 Move X8, 0x829000
	469 Move X8, [X8+2336]
	470 Add X0, X31, 96
	471 Move X1, [X8]
	472 Call Enumerator<UInt32, UInt32>.Dispose, X0
	473 Move X0, X19
	474 Move X20, [X31+256]
	475 Move X19, [X31+264]
	476 Move X22, [X31+240]
	477 Move X21, [X31+248]
	478 Move X24, [X31+224]
	479 Move X23, [X31+232]
	480 Move X26, [X31+208]
	481 Move X25, [X31+216]
	482 Move X28, [X31+192]
	483 Move X27, [X31+200]
	484 Move X29, [X31+176]
	485 Move X30, [X31+184]
	486 Move D9, [X31+160]
	487 Move D8, [X31+168]
	488 Move D11, [X31+144]
	489 Move D10, [X31+152]
	490 Move V12, [X31+128]
	491 Add X31, X31, 272
	492 Return X0
	493 Call 0x1C17F20
	494 Call 0x1C17F28
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F20
	498 Call 0x1C17F20
	499 Move X20, X0
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move X0, X20
	502 Call 0x3EB2AD0
	503 Move X21, [X0]
	504 Call 0x3EB2AE0
	505 Move X8, 0x829000
	506 Move X8, [X8+2336]
	507 Add X0, X31, 96
	508 Move X1, [X8]
	509 Call Enumerator<UInt32, UInt32>.Dispose, X0
	510 Move X19, [X31+8]
	511 Compare X21, 0
	512 JumpIfEqual {473}
	513 Move X0, X21
	514 Call 0x1C17F18
	515 Move X21, X31
	516 Move X20, X0
	517 Move X8, 0x829000
	518 Move X8, [X8+2336]
	519 Move X1, [X8]
	520 Add X0, X31, 96
	521 Call Enumerator<UInt32, UInt32>.Dispose, X0
	522 Compare X21, 0
	523 JumpIfNotEqual {526}
	524 Move X0, X20
	525 Call 0x1D2D690
	526 Move X0, X21
	527 Call 0x1C17F18
	528 Call 0x1991590

Method: UnityEngine.Texture2D RenderSelectionPickerTexture(UnityEngine.Camera camera, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, UnityEngine.ProBuilder.Face>> map, System.Int32 width = -1, System.Int32 height = -1)

Disassembly:
	0x03926AD4 MOV X3, X0
	0x03926AD8 MOVZ W4, 0x1
	0x03926ADC MOV X0, X28
	0x03926AE0 MOV X1, X27
	0x03926AE4 MOV X2, X26
	0x03926AE8 MOV X5, X31
	0x03926AEC BL 0x3905BB4
	0x03926AF0 LDR X8, [X21]
	0x03926AF4 CBZ X8, 0x3926C84
	0x03926AF8 LDR W9, [X8 + 0x18]
	0x03926AFC CMP X25, X9
	0x03926B00 B.CS 0x3926C88
	0x03926B04 ADD X8, X8, X25, 0x3, LSL
	0x03926B08 ADD X25, X25, 0x1
	0x03926B0C CMP X25, X29
	0x03926B10 STR X0, [X8 + 0x20]
	0x03926B14 B.NE 0x39269F4
	0x03926B18 LDR W8, [X31 + 0x14]
	0x03926B1C TBZ X8, 0x0, 0x3926C5C
	0x03926B20 ADRP X8, 0x7CF000
	0x03926B24 LDR X8, [X8 + 0x7B0]
	0x03926B28 LDR W22, [X31 + 0x18]
	0x03926B2C LDR X0, [X8]
	0x03926B30 MOV W1, W22
	0x03926B34 BL 0x1C16D6C
	0x03926B38 LDR X27, [X31 + 0x8]
	0x03926B3C CMP W22, 0x1
	0x03926B40 STR X0, [X27]
	0x03926B44 B.LT 0x3926C64
	0x03926B48 ADRP X26, 0x828000
	0x03926B4C LDR X26, [X26 + 0x9D0]
	0x03926B50 MOV X21, X31
	0x03926B54 MOV W25, W22
	0x03926B58 LDR X8, [X20]
	0x03926B5C ADRP X10, 0x828000
	0x03926B60 LDRH W9, [X8 + 0x12E]
	0x03926B64 LDR X10, [X10 + 0x998]
	0x03926B68 LDR X1, [X10]
	0x03926B6C CBZ X9, 0x3926B90
	0x03926B70 LDR X10, [X8 + 0xB0]
	0x03926B74 ADD X10, X10, 0x8
	0x03926B78 LDUR X11, [X10 - 0x8]
	0x03926B7C CMP X11, X1
	0x03926B80 B.EQ 0x3926BA0
	0x03926B84 SUBS X9, X9, 0x1
	0x03926B88 ADD X10, X10, 0x10
	0x03926B8C B.NE 0x3926B78
	0x03926B90 MOV X0, X20
	0x03926B94 MOV W2, W31
	0x03926B98 BL 0x1C5C788
	0x03926B9C B 0x3926BAC
	0x03926BA0 LDRSW X9, [X10]
	0x03926BA4 ADD X8, X8, X9, 0x4, LSL
	0x03926BA8 ADD X0, X8, 0x138
	0x03926BAC LDP X8, X2, [X0]
	0x03926BB0 MOV X0, X20
	0x03926BB4 MOV W1, W21
	0x03926BB8 BLR X8
	0x03926BBC CBZ X0, 0x3926C84
	0x03926BC0 MOV X1, X31
	0x03926BC4 MOV X24, X0
	0x03926BC8 BL 0x3C389D4
	0x03926BCC LDR X1, [X26]
	0x03926BD0 MOV X2, X31
	0x03926BD4 BL 0x321B938
	0x03926BD8 MOV X22, X0
	0x03926BDC MOV X0, X24
	0x03926BE0 MOV X1, X31
	0x03926BE4 BL 0x3C32E90
	0x03926BE8 MOV X23, X0
	0x03926BEC MOV X0, X24
	0x03926BF0 BL 0x3912CAC
	0x03926BF4 LDR X8, [X19]
	0x03926BF8 MOV X24, X0
	0x03926BFC LDR W9, [X8 + 0xE0]
	0x03926C00 CBNZ W9, 0x3926C0C
	0x03926C04 MOV X0, X8
	0x03926C08 BL 0x1C16DFC
	0x03926C0C MOV X0, X31
	0x03926C10 BL 0x38FAE1C
	0x03926C14 MOV X3, X0
	0x03926C18 MOVZ W4, 0x1
	0x03926C1C MOV X0, X22
	0x03926C20 MOV X1, X23
	0x03926C24 MOV X2, X24
	0x03926C28 MOV X5, X31
	0x03926C2C BL 0x3905BB4
	0x03926C30 LDR X8, [X27]
	0x03926C34 CBZ X8, 0x3926C84
	0x03926C38 LDR W9, [X8 + 0x18]
	0x03926C3C CMP X21, X9
	0x03926C40 B.CS 0x3926C88
	0x03926C44 ADD X8, X8, X21, 0x3, LSL
	0x03926C48 ADD X21, X21, 0x1
	0x03926C4C CMP X21, X25
	0x03926C50 STR X0, [X8 + 0x20]
	0x03926C54 B.NE 0x3926B58
	0x03926C58 B 0x3926C64
	0x03926C5C LDR X8, [X31 + 0x8]
	0x03926C60 STR X31, [X8]
	0x03926C64 LDP X20, X19, [X31 + 0x70]
	0x03926C68 LDP X22, X21, [X31 + 0x60]
	0x03926C6C LDP X24, X23, [X31 + 0x50]
	0x03926C70 LDP X26, X25, [X31 + 0x40]
	0x03926C74 LDP X28, X27, [X31 + 0x30]
	0x03926C78 LDP X29, X30, [X31 + 0x20]
	0x03926C7C ADD X31, X31, 0x80
	0x03926C80 RET
	0x03926C84 BL 0x1C16F20
	0x03926C88 BL 0x1C16F28
	0x03926C8C SUB X31, X31, 0x80
	0x03926C90 STP X29, X30, [X31 + 0x20]
	0x03926C94 STP X28, X27, [X31 + 0x30]
	0x03926C98 STP X26, X25, [X31 + 0x40]
	0x03926C9C STP X24, X23, [X31 + 0x50]
	0x03926CA0 STP X22, X21, [X31 + 0x60]
	0x03926CA4 STP X20, X19, [X31 + 0x70]
	0x03926CA8 STR W1, [X31 + 0x14]
	0x03926CAC ADRP X22, 0xABB000
	0x03926CB0 ADRP X24, 0x828000
	0x03926CB4 ADRP X19, 0x828000
	0x03926CB8 LDRB W8, [X22 + 0x8C3]
	0x03926CBC LDR X24, [X24 + 0x9E0]
	0x03926CC0 LDR X19, [X19 + 0x9E8]
	0x03926CC4 MOV X21, X4
	0x03926CC8 MOV X25, X3
	0x03926CCC MOV X23, X2
	0x03926CD0 MOV X20, X0
	0x03926CD4 TBNZ X8, 0x0, 0x3926D4C
	0x03926CD8 ADRP X0, 0x827000
	0x03926CDC LDR X0, [X0 + 0xAC8]
	0x03926CE0 BL 0x1C16CF4
	0x03926CE4 ADRP X0, 0x828000
	0x03926CE8 LDR X0, [X0 + 0x9E8]
	0x03926CEC BL 0x1C16CF4
	0x03926CF0 ADRP X0, 0x828000
	0x03926CF4 LDR X0, [X0 + 0x9E0]
	0x03926CF8 BL 0x1C16CF4
	0x03926CFC ADRP X0, 0x7CF000
	0x03926D00 LDR X0, [X0 + 0x7B0]
	0x03926D04 BL 0x1C16CF4
	0x03926D08 ADRP X0, 0x828000
	0x03926D0C LDR X0, [X0 + 0x990]
	0x03926D10 BL 0x1C16CF4
	0x03926D14 ADRP X0, 0x828000
	0x03926D18 LDR X0, [X0 + 0x998]
	0x03926D1C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xABC000
	010 Move X24, 0x829000
	011 Move W8, [X25+2238]
	012 Move X24, [X24+2024]
	013 Move W20, W4
	014 Move W21, W3
	015 Move X19, X2
	016 Move X23, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x828000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D0000
	026 Move X0, [X0+360]
	027 Call 0x1C17CF4
	028 Move X0, 0x829000
	029 Move X0, [X0+2408]
	030 Call 0x1C17CF4
	031 Move X0, 0x7CE000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x829000
	035 Move X0, [X0+2024]
	036 Call 0x1C17CF4
	037 Move X0, 0x829000
	038 Move X0, [X0+2416]
	039 Call 0x1C17CF4
	040 Move X0, 0x7D4000
	041 Move X0, [X0+2384]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+2238], W8
	045 Move X0, [X24]
	046 Move X25, 0x828000
	047 Move W8, [X0+224]
	048 Move X25, [X25+2760]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X23
	053 Move X1, X19
	054 Call SelectionPickerRenderer.GenerateFacePickingObjects, X0, X1
	055 Move X8, [X25]
	056 Move X19, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X31
	063 Call BuiltinMaterials.get_facePickerMaterial
	064 Compare X0, 0
	065 JumpIfEqual {163}
	066 Move X8, [X24]
	067 Move X9, 0x7D4000
	068 Move X2, X31
	069 Move X8, [X8+184]
	070 Move X9, [X9+2384]
	071 Move S2, [X8+24]
	072 Move S3, [X8+28]
	073 Move S0, [X8+16]
	074 Move S1, [X8+20]
	075 Move X1, [X9]
	076 Call Material.SetColor, X0, X1, X2
	077 Call SelectionPickerRenderer.get_pickerRenderer
	078 Move X23, X0
	079 Move X0, X31
	080 Call BuiltinMaterials.get_selectionPickerShader
	081 Compare X23, 0
	082 JumpIfEqual {163}
	083 Move X9, 0x829000
	084 Move X10, 0x829000
	085 Move X8, [X23]
	086 Move X9, [X9+2408]
	087 Move X10, [X10+2416]
	088 Move X24, X0
	089 Move X1, [X9]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X25, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X23
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X6, [X0+8]
	108 Move X0, X23
	109 Move X1, X22
	110 Move X2, X24
	111 Move X3, X25
	112 Move W4, W21
	113 Move W5, W20
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X19, 0
	116 JumpIfEqual {163}
	117 Move W8, [X19+24]
	118 Move X20, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X24, 0x7D0000
	121 Move X25, 0x7CE000
	122 Move X24, [X24+360]
	123 Move X25, [X25+1432]
	124 Move W23, W31
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add X8, X19, W23
	127 Move X21, [X8+32]
	128 Compare X21, 0
	129 JumpIfEqual {163}
	130 Move X1, [X24]
	131 Move X0, X21
	132 Call 0x21E62E4, X0
	133 Compare X0, 0
	134 JumpIfEqual {163}
	135 Move X1, X31
	136 Call MeshFilter.get_sharedMesh, X0
	137 Move X8, [X25]
	138 Move X22, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X22
	145 Move X1, X31
	146 Call Object.DestroyImmediate, X0
	147 Move X0, X21
	148 Move X1, X31
	149 Call Object.DestroyImmediate, X0
	150 Move W8, [X19+24]
	151 Add W23, W23, 1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X20
	154 Move X20, [X31+48]
	155 Move X19, [X31+56]
	156 Move X22, [X31+32]
	157 Move X21, [X31+40]
	158 Move X24, [X31+16]
	159 Move X23, [X31+24]
	160 Move X30, [X31+64]
	161 Move X25, [X31+72]
	162 Return X0
	163 Call 0x1C17F20
	164 Call 0x1C17F28

Method: UnityEngine.Texture2D RenderSelectionPickerTexture(UnityEngine.Camera camera, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Int32>> map, System.Int32 width = -1, System.Int32 height = -1)

Disassembly:
	0x03926D34 BL 0x1C16CF4
	0x03926D38 ADRP X0, 0x828000
	0x03926D3C LDR X0, [X0 + 0x9D0]
	0x03926D40 BL 0x1C16CF4
	0x03926D44 MOVZ W8, 0x1
	0x03926D48 STRB W8, [X22 + 0x8C3]
	0x03926D4C LDR X0, [X24]
	0x03926D50 BL 0x1C16F10
	0x03926D54 LDR X1, [X19]
	0x03926D58 MOV X24, X0
	0x03926D5C BL 0x2AF8B28
	0x03926D60 MOVZ W8, 0x2
	0x03926D64 STR X24, [X23]
	0x03926D68 STR W8, [X31 + 0x1C]
	0x03926D6C CBZ X20, 0x39270B4
	0x03926D70 ADRP X10, 0x828000
	0x03926D74 LDR X8, [X20]
	0x03926D78 LDR X10, [X10 + 0x990]
	0x03926D7C ADRP X22, 0x7CF000
	0x03926D80 LDRH W9, [X8 + 0x12E]
	0x03926D84 LDR X1, [X10]
	0x03926D88 LDR X22, [X22 + 0x7B0]
	0x03926D8C STR X25, [X31 + 0x8]
	0x03926D90 CBZ X9, 0x3926DB4
	0x03926D94 LDR X10, [X8 + 0xB0]
	0x03926D98 ADD X10, X10, 0x8
	0x03926D9C LDUR X11, [X10 - 0x8]
	0x03926DA0 CMP X11, X1
	0x03926DA4 B.EQ 0x3926DC4
	0x03926DA8 SUBS X9, X9, 0x1
	0x03926DAC ADD X10, X10, 0x10
	0x03926DB0 B.NE 0x3926D9C
	0x03926DB4 MOV X0, X20
	0x03926DB8 MOV W2, W31
	0x03926DBC BL 0x1C5C788
	0x03926DC0 B 0x3926DD0
	0x03926DC4 LDRSW X9, [X10]
	0x03926DC8 ADD X8, X8, X9, 0x4, LSL
	0x03926DCC ADD X0, X8, 0x138
	0x03926DD0 LDP X8, X1, [X0]
	0x03926DD4 ADRP X19, 0x827000
	0x03926DD8 LDR X19, [X19 + 0xAC8]
	0x03926DDC MOV X0, X20
	0x03926DE0 BLR X8
	0x03926DE4 LDR X8, [X22]
	0x03926DE8 MOV W22, W0
	0x03926DEC MOV W1, W22
	0x03926DF0 MOV X0, X8
	0x03926DF4 BL 0x1C16D6C
	0x03926DF8 CMP W22, 0x1
	0x03926DFC STR W22, [X31 + 0x18]
	0x03926E00 STR X0, [X21]
	0x03926E04 B.LT 0x3926F48
	0x03926E08 ADRP X22, 0x828000
	0x03926E0C ADRP X24, 0x828000
	0x03926E10 LDR X22, [X22 + 0x7E8]
	0x03926E14 LDR X24, [X24 + 0x9F0]
	0x03926E18 LDR W8, [X31 + 0x18]
	0x03926E1C MOV X25, X31
	0x03926E20 MOV W29, W8
	0x03926E24 LDR X8, [X20]
	0x03926E28 ADRP X10, 0x828000
	0x03926E2C LDRH W9, [X8 + 0x12E]
	0x03926E30 LDR X10, [X10 + 0x998]
	0x03926E34 LDR X1, [X10]
	0x03926E38 CBZ X9, 0x3926E5C
	0x03926E3C LDR X10, [X8 + 0xB0]
	0x03926E40 ADD X10, X10, 0x8
	0x03926E44 LDUR X11, [X10 - 0x8]
	0x03926E48 CMP X11, X1
	0x03926E4C B.EQ 0x3926E6C
	0x03926E50 SUBS X9, X9, 0x1
	0x03926E54 ADD X10, X10, 0x10
	0x03926E58 B.NE 0x3926E44
	0x03926E5C MOV X0, X20
	0x03926E60 MOV W2, W31
	0x03926E64 BL 0x1C5C788
	0x03926E68 B 0x3926E78
	0x03926E6C LDRSW X9, [X10]
	0x03926E70 ADD X8, X8, X9, 0x4, LSL
	0x03926E74 ADD X0, X8, 0x138
	0x03926E78 LDP X8, X2, [X0]
	0x03926E7C MOV X0, X20
	0x03926E80 MOV W1, W25
	0x03926E84 BLR X8
	0x03926E88 LDR X8, [X22]
	0x03926E8C LDR X26, [X23]
	0x03926E90 MOV X27, X0
	0x03926E94 LDR W9, [X8 + 0xE0]
	0x03926E98 CBNZ W9, 0x3926EA4
	0x03926E9C MOV X0, X8
	0x03926EA0 BL 0x1C16DFC
	0x03926EA4 ADD X2, X31, 0x1C
	0x03926EA8 MOV X0, X27
	0x03926EAC MOV X1, X26
	0x03926EB0 BL 0x3927870
	0x03926EB4 CBZ X27, 0x39270B4
	0x03926EB8 MOV X26, X0
	0x03926EBC MOV X0, X27
	0x03926EC0 MOV X1, X31
	0x03926EC4 BL 0x3C389D4
	0x03926EC8 LDR X1, [X24]
	0x03926ECC MOV X2, X31
	0x03926ED0 BL 0x321B938
	0x03926ED4 MOV X28, X0
	0x03926ED8 MOV X0, X27
	0x03926EDC MOV X1, X31
	0x03926EE0 BL 0x3C32E90
	0x03926EE4 LDR X8, [X19]
	0x03926EE8 MOV X27, X0
	0x03926EEC LDR W9, [X8 + 0xE0]
	0x03926EF0 CBNZ W9, 0x3926EFC
	0x03926EF4 MOV X0, X8
	0x03926EF8 BL 0x1C16DFC
	0x03926EFC MOV X0, X31
	0x03926F00 BL 0x38FAED4
	0x03926F04 MOV X3, X0
	0x03926F08 MOVZ W4, 0x1
	0x03926F0C MOV X0, X28
	0x03926F10 MOV X1, X27
	0x03926F14 MOV X2, X26
	0x03926F18 MOV X5, X31
	0x03926F1C BL 0x3905BB4
	0x03926F20 LDR X8, [X21]
	0x03926F24 CBZ X8, 0x39270B4
	0x03926F28 LDR W9, [X8 + 0x18]
	0x03926F2C CMP X25, X9
	0x03926F30 B.CS 0x39270B8
	0x03926F34 ADD X8, X8, X25, 0x3, LSL
	0x03926F38 ADD X25, X25, 0x1
	0x03926F3C CMP X25, X29
	0x03926F40 STR X0, [X8 + 0x20]
	0x03926F44 B.NE 0x3926E24
	0x03926F48 LDR W8, [X31 + 0x14]
	0x03926F4C TBZ X8, 0x0, 0x392708C
	0x03926F50 ADRP X8, 0x7CF000
	0x03926F54 LDR X8, [X8 + 0x7B0]
	0x03926F58 LDR W22, [X31 + 0x18]
	0x03926F5C LDR X0, [X8]
	0x03926F60 MOV W1, W22
	0x03926F64 BL 0x1C16D6C
	0x03926F68 LDR X27, [X31 + 0x8]
	0x03926F6C CMP W22, 0x1
	0x03926F70 STR X0, [X27]
	0x03926F74 B.LT 0x3927094
	0x03926F78 ADRP X26, 0x828000
	0x03926F7C LDR X26, [X26 + 0x9D0]
	0x03926F80 MOV X21, X31
	0x03926F84 MOV W25, W22
	0x03926F88 LDR X8, [X20]
	0x03926F8C ADRP X10, 0x828000
	0x03926F90 LDRH W9, [X8 + 0x12E]
	0x03926F94 LDR X10, [X10 + 0x998]
	0x03926F98 LDR X1, [X10]
	0x03926F9C CBZ X9, 0x3926FC0
	0x03926FA0 LDR X10, [X8 + 0xB0]
	0x03926FA4 ADD X10, X10, 0x8
	0x03926FA8 LDUR X11, [X10 - 0x8]
	0x03926FAC CMP X11, X1
	0x03926FB0 B.EQ 0x3926FD0
	0x03926FB4 SUBS X9, X9, 0x1
	0x03926FB8 ADD X10, X10, 0x10
	0x03926FBC B.NE 0x3926FA8
	0x03926FC0 MOV X0, X20
	0x03926FC4 MOV W2, W31
	0x03926FC8 BL 0x1C5C788
	0x03926FCC B 0x3926FDC
	0x03926FD0 LDRSW X9, [X10]
	0x03926FD4 ADD X8, X8, X9, 0x4, LSL
	0x03926FD8 ADD X0, X8, 0x138
	0x03926FDC LDP X8, X2, [X0]
	0x03926FE0 MOV X0, X20
	0x03926FE4 MOV W1, W21
	0x03926FE8 BLR X8
	0x03926FEC CBZ X0, 0x39270B4
	0x03926FF0 MOV X1, X31
	0x03926FF4 MOV X24, X0
	0x03926FF8 BL 0x3C389D4
	0x03926FFC LDR X1, [X26]
	0x03927000 MOV X2, X31
	0x03927004 BL 0x321B938
	0x03927008 MOV X22, X0
	0x0392700C MOV X0, X24
	0x03927010 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xABC000
	013 Move X25, 0x829000
	014 Move W8, [X26+2239]
	015 Move X25, [X25+2024]
	016 Move W20, W5
	017 Move W21, W4
	018 Move X23, X3
	019 Move W19, W2
	020 Move X24, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x828000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0x7D0000
	030 Move X0, [X0+360]
	031 Call 0x1C17CF4
	032 Move X0, 0x829000
	033 Move X0, [X0+2408]
	034 Call 0x1C17CF4
	035 Move X0, 0x7CE000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x829000
	039 Move X0, [X0+2024]
	040 Call 0x1C17CF4
	041 Move X0, 0x829000
	042 Move X0, [X0+2416]
	043 Call 0x1C17CF4
	044 Move X0, 0x7D4000
	045 Move X0, [X0+2384]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+2239], W8
	049 Move X0, [X25]
	050 Move [X31], X31
	051 Move [X31+8], X31
	052 Move X26, 0x828000
	053 Move W8, [X0+224]
	054 Move X26, [X26+2760]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 And W1, W19, 1
	059 Add X3, X31, 8
	060 Add X4, X31, 0
	061 Move X0, X24
	062 Move X2, X23
	063 Call SelectionPickerRenderer.GenerateVertexPickingObjects, X0, X1, X2, X3, X4
	064 Move X0, [X26]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X31
	070 Call BuiltinMaterials.get_facePickerMaterial
	071 Compare X0, 0
	072 JumpIfEqual {207}
	073 Move X8, [X25]
	074 Move X9, 0x7D4000
	075 Move X2, X31
	076 Move X8, [X8+184]
	077 Move X9, [X9+2384]
	078 Move S2, [X8+8]
	079 Move S3, [X8+12]
	080 Move S0, [X8]
	081 Move S1, [X8+4]
	082 Move X1, [X9]
	083 Call Material.SetColor, X0, X1, X2
	084 Call SelectionPickerRenderer.get_pickerRenderer
	085 Move X23, X0
	086 Move X0, X31
	087 Call BuiltinMaterials.get_selectionPickerShader
	088 Compare X23, 0
	089 JumpIfEqual {207}
	090 Move X9, 0x829000
	091 Move X10, 0x829000
	092 Move X8, [X23]
	093 Move X9, [X9+2408]
	094 Move X10, [X10+2416]
	095 Move X24, X0
	096 Move X1, [X9]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X25, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X23
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X6, [X0+8]
	115 Move X0, X23
	116 Move X1, X22
	117 Move X2, X24
	118 Move X3, X25
	119 Move W4, W21
	120 Move W5, W20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X23, [X31]
	123 Compare X23, 0
	124 JumpIfEqual {207}
	125 Move X8, [X23+24]
	126 Move X22, 0x7CE000
	127 Move X22, [X22+1432]
	128 Move X20, X0
	129 Subtract W24, W8, 1
	130 Compare W8, 0
	131 JumpIfEqual {193}
	132 Move X26, 0x7D0000
	133 Move X26, [X26+360]
	134 Move W25, W31
	135 Add X27, X23, W25
	136 Add X27, X27, 32
	137 Move X0, [X27]
	138 Compare X0, 0
	139 JumpIfEqual {207}
	140 Move X1, [X26]
	141 Call 0x21E62E4, X0
	142 Compare X0, 0
	143 JumpIfEqual {207}
	144 Move X1, X31
	145 Call MeshFilter.get_sharedMesh, X0
	146 Move X8, [X22]
	147 Move X21, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X21
	154 Move X1, X31
	155 Call Object.DestroyImmediate, X0
	156 Move W8, [X23+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X27]
	159 Move X1, X31
	160 Call Object.DestroyImmediate, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X23+24]
	163 Add W25, W25, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move TEMP, X19
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {194}
	169 Move X21, [X31+8]
	170 Compare X21, 0
	171 JumpIfEqual {207}
	172 Move X8, [X21+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 And X8, X8, 0
	175 Compare X8, 0
	176 JumpIfEqual {193}
	177 Move X23, X31
	178 Subtract X24, X8, 1
	179 Add X25, X21, 32
	180 Move X0, [X22]
	181 Move X19, [X25]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X19
	187 Move X1, X31
	188 Call Object.DestroyImmediate, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W8, [X21+24]
	191 Add X23, X23, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x1C17F28
	194 Move X0, X20
	195 Move X20, [X31+80]
	196 Move X19, [X31+88]
	197 Move X22, [X31+64]
	198 Move X21, [X31+72]
	199 Move X24, [X31+48]
	200 Move X23, [X31+56]
	201 Move X26, [X31+32]
	202 Move X25, [X31+40]
	203 Move X30, [X31+16]
	204 Move X27, [X31+24]
	205 Add X31, X31, 96
	206 Return X0
	207 Call 0x1C17F20

Method: UnityEngine.Texture2D RenderSelectionPickerTexture(UnityEngine.Camera camera, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, UnityEngine.ProBuilder.Edge>> map, System.Int32 width = -1, System.Int32 height = -1)

Disassembly:
	0x03927014 BL 0x3C32E90
	0x03927018 MOV X23, X0
	0x0392701C MOV X0, X24
	0x03927020 BL 0x3912CAC
	0x03927024 LDR X8, [X19]
	0x03927028 MOV X24, X0
	0x0392702C LDR W9, [X8 + 0xE0]
	0x03927030 CBNZ W9, 0x392703C
	0x03927034 MOV X0, X8
	0x03927038 BL 0x1C16DFC
	0x0392703C MOV X0, X31
	0x03927040 BL 0x38FAE1C
	0x03927044 MOV X3, X0
	0x03927048 MOVZ W4, 0x1
	0x0392704C MOV X0, X22
	0x03927050 MOV X1, X23
	0x03927054 MOV X2, X24
	0x03927058 MOV X5, X31
	0x0392705C BL 0x3905BB4
	0x03927060 LDR X8, [X27]
	0x03927064 CBZ X8, 0x39270B4
	0x03927068 LDR W9, [X8 + 0x18]
	0x0392706C CMP X21, X9
	0x03927070 B.CS 0x39270B8
	0x03927074 ADD X8, X8, X21, 0x3, LSL
	0x03927078 ADD X21, X21, 0x1
	0x0392707C CMP X21, X25
	0x03927080 STR X0, [X8 + 0x20]
	0x03927084 B.NE 0x3926F88
	0x03927088 B 0x3927094
	0x0392708C LDR X8, [X31 + 0x8]
	0x03927090 STR X31, [X8]
	0x03927094 LDP X20, X19, [X31 + 0x70]
	0x03927098 LDP X22, X21, [X31 + 0x60]
	0x0392709C LDP X24, X23, [X31 + 0x50]
	0x039270A0 LDP X26, X25, [X31 + 0x40]
	0x039270A4 LDP X28, X27, [X31 + 0x30]
	0x039270A8 LDP X29, X30, [X31 + 0x20]
	0x039270AC ADD X31, X31, 0x80
	0x039270B0 RET
	0x039270B4 BL 0x1C16F20
	0x039270B8 BL 0x1C16F28
	0x039270BC AND W8, W0, 0xFF00
	0x039270C0 BFM W8, W0, 0x10, 0xF
	0x039270C4 BFM W8, W0, 0x10, 0x17
	0x039270C8 ORR W0, W8, 0xFF000000
	0x039270CC RET
	0x039270D0 SUB X31, X31, 0x110
	0x039270D4 STP D11, D10, [X31 + 0x90]
	0x039270D8 STP D9, D8, [X31 + 0xA0]
	0x039270DC STP X29, X30, [X31 + 0xB0]
	0x039270E0 STP X28, X27, [X31 + 0xC0]
	0x039270E4 STP X26, X25, [X31 + 0xD0]
	0x039270E8 STP X24, X23, [X31 + 0xE0]
	0x039270EC STP X22, X21, [X31 + 0xF0]
	0x039270F0 STP X20, X19, [X31 + 0x100]
	0x039270F4 ADRP X19, 0xABA000
	0x039270F8 LDRB W8, [X19 + 0x8C4]
	0x039270FC MOV X26, X0
	0x03927100 STR X2, [X31 + 0x68]
	0x03927104 STR X1, [X31 + 0x40]
	0x03927108 TBNZ X8, 0x0, 0x392718C
	0x0392710C ADRP X0, 0x7D1000
	0x03927110 LDR X0, [X0 + 0x140]
	0x03927114 BL 0x1C16CF4
	0x03927118 ADRP X0, 0x827000
	0x0392711C LDR X0, [X0 + 0x9F8]
	0x03927120 BL 0x1C16CF4
	0x03927124 ADRP X0, 0x7CD000
	0x03927128 LDR X0, [X0 + 0xE58]
	0x0392712C BL 0x1C16CF4
	0x03927130 ADRP X0, 0x7CC000
	0x03927134 LDR X0, [X0 + 0x5A8]
	0x03927138 BL 0x1C16CF4
	0x0392713C ADRP X0, 0x7D3000
	0x03927140 LDR X0, [X0 + 0x700]
	0x03927144 BL 0x1C16CF4
	0x03927148 ADRP X0, 0x827000
	0x0392714C LDR X0, [X0 + 0x7E8]
	0x03927150 BL 0x1C16CF4
	0x03927154 ADRP X0, 0x827000
	0x03927158 LDR X0, [X0 + 0xA00]
	0x0392715C BL 0x1C16CF4
	0x03927160 ADRP X0, 0x826000
	0x03927164 LDR X0, [X0 + 0xA88]
	0x03927168 BL 0x1C16CF4
	0x0392716C ADRP X0, 0x7CE000
	0x03927170 LDR X0, [X0 + 0x9B0]
	0x03927174 BL 0x1C16CF4
	0x03927178 ADRP X0, 0x827000
	0x0392717C LDR X0, [X0 + 0xA08]
	0x03927180 BL 0x1C16CF4
	0x03927184 MOVZ W8, 0x1
	0x03927188 STRB W8, [X19 + 0x8C4]
	0x0392718C CBZ X26, 0x392786C
	0x03927190 LDR X22, [X26 + 0x30]
	0x03927194 CBZ X22, 0x392786C
	0x03927198 ADRP X8, 0x7CC000
	0x0392719C LDR X8, [X8 + 0x5A8]
	0x039271A0 ADRP X23, 0x7CE000
	0x039271A4 ADRP X21, 0x826000
	0x039271A8 ADRP X20, 0x7D1000
	0x039271AC LDR X0, [X8]
	0x039271B0 ADRP X19, 0x7CD000
	0x039271B4 LDR W8, [X0 + 0xE0]
	0x039271B8 LDR X23, [X23 + 0x9B0]
	0x039271BC LDR X21, [X21 + 0xA88]
	0x039271C0 LDR X20, [X20 + 0x140]
	0x039271C4 LDR X19, [X19 + 0xE58]
	0x039271C8 CBNZ W8, 0x39271D0
	0x039271CC BL 0x1C16DFC
	0x039271D0 LDR W0, [X22 + 0x18]
	0x039271D4 MOVZ W1, 0x3FFE
	0x039271D8 MOV X2, X31
	0x039271DC BL 0x337EE94
	0x039271E0 LDR X8, [X23]
	0x039271E4 UBFM W24, W0, 0x1E, 0x1D
	0x039271E8 MOV W22, W0
	0x039271EC MOV W1, W24
	0x039271F0 MOV X0, X8
	0x039271F4 BL 0x1C16D6C
	0x039271F8 LDR X8, [X21]
	0x039271FC MOV X23, X0
	0x03927200 MOV W1, W24
	0x03927204 MOV X0, X8
	0x03927208 BL 0x1C16D6C
	0x0392720C LDR X8, [X21]
	0x03927210 MOV X21, X0
	0x03927214 MOV W1, W24
	0x03927218 MOV X0, X8
	0x0392721C BL 0x1C16D6C
	0x03927220 LDR X8, [X20]
	0x03927224 MOV X25, X0
	0x03927228 MOV W1, W24
	0x0392722C MOV X0, X8
	0x03927230 BL 0x1C16D6C
	0x03927234 MOV X20, X0
	0x03927238 LDR X0, [X19]
	0x0392723C ADD W8, W22, W22, 0x1, LSL
	0x03927240 UBFM W1, W8, 0x1F, 0x1E
	0x03927244 STR W22, [X31 + 0x64]
	0x03927248 BL 0x1C16D6C
	0x0392724C ADRP X8, 0xAB1000
	0x03927250 LDRB W8, [X8 + 0x786]
	0x03927254 MOV X19, X0
	0x03927258 CBNZ W8, 0x3927274
	0x0392725C ADRP X0, 0x7CC000
	0x03927260 LDR X0, [X0 + 0x5A0]
	0x03927264 BL 0x1C16CF4
	0x03927268 MOVZ W8, 0x1
	0x0392726C ADRP X9, 0xAB1000
	0x03927270 STRB W8, [X9 + 0x786]
	0x03927274 ADRP X0, 0x7CC000
	0x03927278 LDR X0, [X0 + 0x5A0]
	0x0392727C ADRP X22, 0xAB1000
	0x03927280 LDRB W9, [X22 + 0xB70]
	0x03927284 STP X19, X21, [X31 + 0x50]
	0x03927288 LDR X8, [X0]
	0x0392728C STR X20, [X31 + 0x48]
	0x03927290 LDR X8, [X8 + 0xB8]
	0x03927294 LDR V4, [X8 + 0x18]
	0x03927298 CBNZ W9, 0x39272C0
	0x0392729C STR V4, [X31 + 0x7]
	0x039272A0 BL 0x1C16CF4
	0x039272A4 ADRP X8, 0x7CC000
	0x039272A8 LDR V4, [X31 + 0x7]
	0x039272AC LDR X8, [X8 + 0x5A0]
	0x039272B0 MOVZ W9, 0x1
	0x039272B4 STRB W9, [X22 + 0xB70]
	0x039272B8 LDR X8, [X8]
	0x039272BC LDR X8, [X8 + 0xB8]
	0x039272C0 LDR W9, [X31 + 0x64]
	0x039272C4 CMP W9, 0x1
	0x039272C8 B.LT 0x39277B4
	0x039272CC LDUR V0, [X8 + 0x3C]
	0x039272D0 UNIMPLEMENTED
	0x039272D4 MOV S2, V4.S[1]
	0x039272D8 MOV W27, W31
	0x039272DC FSUB V8.2S, V1.2S, V0.2S
	0x039272E0 MOV S1, V0.S[1]
	0x039272E4 MOV W28, W31
	0x039272E8 MOV W29, W31
	0x039272EC MOVZ W24, 0xC
	0x039272F0 FSUB V5.2S, V0.2S, V4.2S

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0xABB000
	013 Move X25, 0x828000
	014 Move W8, [X26+2240]
	015 Move X25, [X25+2024]
	016 Move W20, W5
	017 Move W21, W4
	018 Move X23, X3
	019 Move W19, W2
	020 Move X24, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x827000
	027 Move X0, [X0+2760]
	028 Call 0x1C17CF4
	029 Move X0, 0x7CF000
	030 Move X0, [X0+360]
	031 Call 0x1C17CF4
	032 Move X0, 0x828000
	033 Move X0, [X0+2408]
	034 Call 0x1C17CF4
	035 Move X0, 0x7CD000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x828000
	039 Move X0, [X0+2024]
	040 Call 0x1C17CF4
	041 Move X0, 0x828000
	042 Move X0, [X0+2416]
	043 Call 0x1C17CF4
	044 Move X0, 0x7D3000
	045 Move X0, [X0+2384]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+2240], W8
	049 Move X0, [X25]
	050 Move [X31], X31
	051 Move [X31+8], X31
	052 Move X26, 0x827000
	053 Move W8, [X0+224]
	054 Move X26, [X26+2760]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 And W1, W19, 1
	059 Add X3, X31, 8
	060 Add X4, X31, 0
	061 Move X0, X24
	062 Move X2, X23
	063 Call SelectionPickerRenderer.GenerateEdgePickingObjects, X0, X1, X2, X3, X4
	064 Move X0, [X26]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X31
	070 Call BuiltinMaterials.get_facePickerMaterial
	071 Compare X0, 0
	072 JumpIfEqual {207}
	073 Move X8, [X25]
	074 Move X9, 0x7D3000
	075 Move X2, X31
	076 Move X8, [X8+184]
	077 Move X9, [X9+2384]
	078 Move S2, [X8+8]
	079 Move S3, [X8+12]
	080 Move S0, [X8]
	081 Move S1, [X8+4]
	082 Move X1, [X9]
	083 Call Material.SetColor, X0, X1, X2
	084 Call SelectionPickerRenderer.get_pickerRenderer
	085 Move X23, X0
	086 Move X0, X31
	087 Call BuiltinMaterials.get_selectionPickerShader
	088 Compare X23, 0
	089 JumpIfEqual {207}
	090 Move X9, 0x828000
	091 Move X10, 0x828000
	092 Move X8, [X23]
	093 Move X9, [X9+2408]
	094 Move X10, [X10+2416]
	095 Move X24, X0
	096 Move X1, [X9]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X25, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X23
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X6, [X0+8]
	115 Move X0, X23
	116 Move X1, X22
	117 Move X2, X24
	118 Move X3, X25
	119 Move W4, W21
	120 Move W5, W20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X23, [X31]
	123 Compare X23, 0
	124 JumpIfEqual {207}
	125 Move X8, [X23+24]
	126 Move X22, 0x7CD000
	127 Move X22, [X22+1432]
	128 Move X20, X0
	129 Subtract W24, W8, 1
	130 Compare W8, 0
	131 JumpIfEqual {193}
	132 Move X26, 0x7CF000
	133 Move X26, [X26+360]
	134 Move W25, W31
	135 Add X27, X23, W25
	136 Add X27, X27, 32
	137 Move X0, [X27]
	138 Compare X0, 0
	139 JumpIfEqual {207}
	140 Move X1, [X26]
	141 Call 0x21E62E4, X0
	142 Compare X0, 0
	143 JumpIfEqual {207}
	144 Move X1, X31
	145 Call MeshFilter.get_sharedMesh, X0
	146 Move X8, [X22]
	147 Move X21, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X21
	154 Move X1, X31
	155 Call Object.DestroyImmediate, X0
	156 Move W8, [X23+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, [X27]
	159 Move X1, X31
	160 Call Object.DestroyImmediate, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X23+24]
	163 Add W25, W25, 1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move TEMP, X19
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {194}
	169 Move X21, [X31+8]
	170 Compare X21, 0
	171 JumpIfEqual {207}
	172 Move X8, [X21+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 And X8, X8, 0
	175 Compare X8, 0
	176 JumpIfEqual {193}
	177 Move X23, X31
	178 Subtract X24, X8, 1
	179 Add X25, X21, 32
	180 Move X0, [X22]
	181 Move X19, [X25]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X19
	187 Move X1, X31
	188 Call Object.DestroyImmediate, X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move W8, [X21+24]
	191 Add X23, X23, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x1C17F28
	194 Move X0, X20
	195 Move X20, [X31+80]
	196 Move X19, [X31+88]
	197 Move X22, [X31+64]
	198 Move X21, [X31+72]
	199 Move X24, [X31+48]
	200 Move X23, [X31+56]
	201 Move X26, [X31+32]
	202 Move X25, [X31+40]
	203 Move X30, [X31+16]
	204 Move X27, [X31+24]
	205 Add X31, X31, 96
	206 Return X0
	207 Call 0x1C17F20

Method: UnityEngine.GameObject[] GenerateFacePickingObjects(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, UnityEngine.ProBuilder.Face>> map)

Disassembly:
	0x039272F4 FSUB V3.2S, V4.2S, V0.2S
	0x039272F8 FADD V0.2S, V4.2S, V0.2S
	0x039272FC FSUB S9, S1, S2
	0x03927300 FSUB S10, S2, S1
	0x03927304 FADD S11, S2, S1
	0x03927308 STP V3, V5, [X31 + 0x20]
	0x0392730C STR V0, [X31 + 0x1]
	0x03927310 LDR X8, [X26 + 0x30]
	0x03927314 CBZ X8, 0x392786C
	0x03927318 LDR W9, [X8 + 0x18]
	0x0392731C CMP W29, W9
	0x03927320 B.CS 0x3927868
	0x03927324 ADD X8, X8, W29, 0x3, SXTW
	0x03927328 LDR X0, [X8 + 0x20]
	0x0392732C CBZ X0, 0x392786C
	0x03927330 LDR X20, [X26 + 0x58]
	0x03927334 MOV W1, W31
	0x03927338 MOV X2, X31
	0x0392733C BL 0x39282DC
	0x03927340 CBZ X20, 0x392786C
	0x03927344 LDR W8, [X20 + 0x18]
	0x03927348 CMP W0, W8
	0x0392734C B.CS 0x3927868
	0x03927350 ADRP X10, 0x7CC000
	0x03927354 LDR X10, [X10 + 0x5A0]
	0x03927358 CBZ X23, 0x392786C
	0x0392735C LDR W8, [X23 + 0x18]
	0x03927360 CMP W28, W8
	0x03927364 B.CS 0x3927868
	0x03927368 SXTW X8, W0
	0x0392736C MADD X8, X8, X24, X20
	0x03927370 LDP S2, S1, [X8 + 0x20]
	0x03927374 LDR V0, [X8 + 0x28]
	0x03927378 SXTW X19, W28
	0x0392737C MADD X8, X19, X24, X23
	0x03927380 STP S2, S1, [X8 + 0x20]
	0x03927384 STR S0, [X8 + 0x28]
	0x03927388 LDR W9, [X23 + 0x18]
	0x0392738C ADD W8, W28, 0x1
	0x03927390 CMP W8, W9
	0x03927394 B.CS 0x3927868
	0x03927398 SXTW X21, W8
	0x0392739C MADD X8, X21, X24, X23
	0x039273A0 STP S2, S1, [X8 + 0x20]
	0x039273A4 STR S0, [X8 + 0x28]
	0x039273A8 LDR W9, [X23 + 0x18]
	0x039273AC ADD W8, W21, 0x1
	0x039273B0 CMP W8, W9
	0x039273B4 B.CS 0x3927868
	0x039273B8 ADD W9, W28, 0x2
	0x039273BC SXTW X20, W9
	0x039273C0 MADD X9, X20, X24, X23
	0x039273C4 STP S2, S1, [X9 + 0x20]
	0x039273C8 STR S0, [X9 + 0x28]
	0x039273CC LDR W9, [X23 + 0x18]
	0x039273D0 ADD W22, W8, 0x1
	0x039273D4 CMP W22, W9
	0x039273D8 B.CS 0x3927868
	0x039273DC ADD W8, W28, 0x3
	0x039273E0 SXTW X8, W8
	0x039273E4 STR X8, [X31 + 0x70]
	0x039273E8 NOP
	0x039273EC MADD X8, X8, X24, X23
	0x039273F0 STP S2, S1, [X8 + 0x20]
	0x039273F4 STR S0, [X8 + 0x28]
	0x039273F8 ADRP X8, 0xAB1000
	0x039273FC LDRB W8, [X8 + 0x783]
	0x03927400 CBNZ W8, 0x3927420
	0x03927404 MOV X0, X10
	0x03927408 BL 0x1C16CF4
	0x0392740C ADRP X10, 0x7CC000
	0x03927410 LDR X10, [X10 + 0x5A0]
	0x03927414 ADRP X8, 0xAB1000
	0x03927418 MOVZ W9, 0x1
	0x0392741C STRB W9, [X8 + 0x783]
	0x03927420 LDP X28, X24, [X31 + 0x50]
	0x03927424 CBZ X24, 0x392786C
	0x03927428 LDR W8, [X24 + 0x18]
	0x0392742C SUB W22, W22, 0x3
	0x03927430 CMP W22, W8
	0x03927434 B.CS 0x3927868
	0x03927438 LDR X8, [X10]
	0x0392743C LDR X8, [X8 + 0xB8]
	0x03927440 LDR V0, [X8]
	0x03927444 ADD X8, X24, X19, 0x3, LSL
	0x03927448 STR D0, [X8 + 0x20]
	0x0392744C ADRP X8, 0xAB1000
	0x03927450 LDRB W8, [X8 + 0xB70]
	0x03927454 CBNZ W8, 0x3927474
	0x03927458 MOV X0, X10
	0x0392745C BL 0x1C16CF4
	0x03927460 ADRP X10, 0x7CC000
	0x03927464 LDR X10, [X10 + 0x5A0]
	0x03927468 ADRP X8, 0xAB1000
	0x0392746C MOVZ W9, 0x1
	0x03927470 STRB W9, [X8 + 0xB70]
	0x03927474 LDR W8, [X24 + 0x18]
	0x03927478 ADD W22, W22, 0x1
	0x0392747C CMP W22, W8
	0x03927480 B.CS 0x3927868
	0x03927484 LDR X8, [X10]
	0x03927488 LDR X8, [X8 + 0xB8]
	0x0392748C LDUR V0, [X8 + 0x3C]
	0x03927490 ADD X8, X24, X21, 0x3, LSL
	0x03927494 STR D0, [X8 + 0x20]
	0x03927498 ADRP X8, 0xAB1000
	0x0392749C LDRB W8, [X8 + 0x786]
	0x039274A0 CBNZ W8, 0x39274C0
	0x039274A4 MOV X0, X10
	0x039274A8 BL 0x1C16CF4
	0x039274AC ADRP X10, 0x7CC000
	0x039274B0 LDR X10, [X10 + 0x5A0]
	0x039274B4 ADRP X8, 0xAB1000
	0x039274B8 MOVZ W9, 0x1
	0x039274BC STRB W9, [X8 + 0x786]
	0x039274C0 LDR W8, [X24 + 0x18]
	0x039274C4 ADD W22, W22, 0x1
	0x039274C8 CMP W22, W8
	0x039274CC B.CS 0x3927868
	0x039274D0 LDR X8, [X10]
	0x039274D4 LDR X8, [X8 + 0xB8]
	0x039274D8 LDR V0, [X8 + 0x18]
	0x039274DC ADD X8, X24, X20, 0x3, LSL
	0x039274E0 STR D0, [X8 + 0x20]
	0x039274E4 ADRP X8, 0xAB1000
	0x039274E8 LDRB W8, [X8 + 0x85B]
	0x039274EC CBNZ W8, 0x392750C
	0x039274F0 MOV X0, X10
	0x039274F4 BL 0x1C16CF4
	0x039274F8 ADRP X10, 0x7CC000
	0x039274FC LDR X10, [X10 + 0x5A0]
	0x03927500 MOVZ W8, 0x1
	0x03927504 ADRP X9, 0xAB1000
	0x03927508 STRB W8, [X9 + 0x85B]
	0x0392750C LDR W9, [X24 + 0x18]
	0x03927510 ADD W8, W22, 0x1
	0x03927514 CMP W8, W9
	0x03927518 B.CS 0x3927868
	0x0392751C LDR X9, [X10]
	0x03927520 LDR X11, [X31 + 0x70]
	0x03927524 LDR X9, [X9 + 0xB8]
	0x03927528 LDUR V0, [X9 + 0xC]
	0x0392752C ADD X9, X24, X11, 0x3, LSL
	0x03927530 STR D0, [X9 + 0x20]
	0x03927534 CBZ X25, 0x392786C
	0x03927538 LDR W9, [X25 + 0x18]
	0x0392753C SUB W8, W8, 0x3
	0x03927540 CMP W8, W9
	0x03927544 B.CS 0x3927868
	0x03927548 ADD X9, X25, X19, 0x3, LSL
	0x0392754C STR D8, [X9 + 0x20]
	0x03927550 LDR W9, [X25 + 0x18]
	0x03927554 ADD W8, W8, 0x1
	0x03927558 CMP W8, W9
	0x0392755C B.CS 0x3927868
	0x03927560 LDR V0, [X31 + 0x3]
	0x03927564 ADD X9, X25, X21, 0x3, LSL
	0x03927568 ADD W8, W8, 0x1
	0x0392756C STP S0, S9, [X9 + 0x20]
	0x03927570 LDR W9, [X25 + 0x18]
	0x03927574 CMP W8, W9
	0x03927578 B.CS 0x3927868
	0x0392757C LDR V0, [X31 + 0x2]
	0x03927580 ADD X9, X25, X20, 0x3, LSL
	0x03927584 STP S0, S10, [X9 + 0x20]
	0x03927588 LDR W10, [X25 + 0x18]
	0x0392758C ADD W9, W8, 0x1
	0x03927590 CMP W9, W10
	0x03927594 B.CS 0x3927868
	0x03927598 LDR V0, [X31 + 0x1]
	0x0392759C ADD X8, X25, X11, 0x3, LSL
	0x039275A0 STP S0, S11, [X8 + 0x20]
	0x039275A4 CBZ X28, 0x392786C
	0x039275A8 LDR W8, [X28 + 0x18]
	0x039275AC CMP W27, W8
	0x039275B0 B.CS 0x3927868
	0x039275B4 ADD W10, W27, 0x1
	0x039275B8 ADD X11, X28, W27, 0x2, SXTW
	0x039275BC SUB W9, W9, 0x3
	0x039275C0 CMP W10, W8
	0x039275C4 STR W9, [X11 + 0x20]
	0x039275C8 B.CS 0x3927868
	0x039275CC ADD X11, X28, W10, 0x2, SXTW
	0x039275D0 ADD W10, W10, 0x1
	0x039275D4 ADD W9, W9, 0x1
	0x039275D8 CMP W10, W8
	0x039275DC STR W9, [X11 + 0x20]
	0x039275E0 B.CS 0x3927868
	0x039275E4 ADD W11, W27, 0x2
	0x039275E8 ADD W10, W10, 0x1
	0x039275EC ADD W9, W9, 0x1
	0x039275F0 ADD X11, X28, W11, 0x2, SXTW
	0x039275F4 CMP W10, W8
	0x039275F8 STR W9, [X11 + 0x20]
	0x039275FC B.CS 0x3927868
	0x03927600 ADD W11, W27, 0x3
	0x03927604 ADD W10, W10, 0x1
	0x03927608 SUB W9, W9, 0x1
	0x0392760C ADD X11, X28, W11, 0x2, SXTW
	0x03927610 CMP W10, W8
	0x03927614 STR W9, [X11 + 0x20]
	0x03927618 B.CS 0x3927868
	0x0392761C MOV X24, X23
	0x03927620 MOV X23, X26
	0x03927624 ADD W11, W27, 0x4
	0x03927628 ADD W26, W10, 0x1
	0x0392762C ADD W9, W9, 0x2
	0x03927630 ADD X10, X28, W11, 0x2, SXTW
	0x03927634 CMP W26, W8
	0x03927638 STR W9, [X10 + 0x20]
	0x0392763C B.CS 0x3927868
	0x03927640 ADD W8, W27, 0x5
	0x03927644 ADD X8, X28, W8, 0x2, SXTW
	0x03927648 SUB W22, W9, 0x1
	0x0392764C STR W22, [X8 + 0x20]
	0x03927650 ADRP X8, 0x827000
	0x03927654 LDR X8, [X8 + 0x7E8]
	0x03927658 LDR X9, [X31 + 0x68]
	0x0392765C LDR X0, [X8]
	0x03927660 LDR W28, [X9]
	0x03927664 LDR W8, [X0 + 0xE0]
	0x03927668 MOV W27, W28
	0x0392766C CBNZ W8, 0x392767C
	0x03927670 BL 0x1C16DFC
	0x03927674 LDR X9, [X31 + 0x68]
	0x03927678 LDR W27, [X9]
	0x0392767C ADD W8, W27, 0x1
	0x03927680 STR W8, [X9]
	0x03927684 ADRP X8, 0x827000
	0x03927688 LDR X8, [X8 + 0xA00]
	0x0392768C ADD X0, X31, 0x80
	0x03927690 MOV X1, X23
	0x03927694 MOV W2, W29
	0x03927698 LDR X3, [X8]
	0x0392769C STP X31, X31, [X31 + 0x80]
	0x039276A0 BL 0x25E6C34
	0x039276A4 LDR X0, [X31 + 0x40]
	0x039276A8 CBZ X0, 0x392786C
	0x039276AC ADRP X8, 0x827000
	0x039276B0 LDP X2, X3, [X31 + 0x80]
	0x039276B4 LDR X8, [X8 + 0x9F8]
	0x039276B8 MOV W1, W27
	0x039276BC LDR X4, [X8]
	0x039276C0 BL 0x2AFC424
	0x039276C4 LDR X13, [X31 + 0x48]
	0x039276C8 CBZ X13, 0x392786C
	0x039276CC LDR W9, [X13 + 0x18]
	0x039276D0 SUB W8, W22, 0x2
	0x039276D4 CMP W8, W9
	0x039276D8 B.CS 0x3927868
	0x039276DC UBFM W9, W28, 0x10, 0xF
	0x039276E0 AND X10, X28, 0xFFFF
	0x039276E4 ORR X9, X9, X10, 0x0
	0x039276E8 ORR X9, X9, 0xFFFFFFFF
	0x039276EC UBFM W11, W28, 0x10, 0x17
	0x039276F0 MOVZ W12, 0x437F0000
	0x039276F4 UBFM W10, W9, 0x8, 0xF
	0x039276F8 UBFM W9, W9, 0x10, 0x17
	0x039276FC FMOV S2, W12
	0x03927700 UCVTF S0, W11
	0x03927704 UCVTF S1, W10
	0x03927708 UCVTF S3, W9
	0x0392770C ADD X12, X13, X19, 0x4, LSL
	0x03927710 FDIV S0, S0, S2
	0x03927714 FDIV S1, S1, S2
	0x03927718 FDIV S2, S3, S2
	0x0392771C MOVZ W10, 0x3F800000
	0x03927720 STP S0, S1, [X12 + 0x20]
	0x03927724 STR S2, [X12 + 0x28]
	0x03927728 STR W10, [X12 + 0x2C]
	0x0392772C LDR W9, [X13 + 0x18]
	0x03927730 LDR X11, [X31 + 0x70]
	0x03927734 ADD W8, W8, 0x1
	0x03927738 CMP W8, W9
	0x0392773C B.CS 0x3927868
	0x03927740 ADD X9, X13, X21, 0x4, LSL
	0x03927744 STP S0, S1, [X9 + 0x20]
	0x03927748 STR S2, [X9 + 0x28]
	0x0392774C STR W10, [X9 + 0x2C]
	0x03927750 LDR W9, [X13 + 0x18]
	0x03927754 ADD W8, W8, 0x1
	0x03927758 CMP W8, W9
	0x0392775C B.CS 0x3927868
	0x03927760 ADD X9, X13, X20, 0x4, LSL
	0x03927764 STP S0, S1, [X9 + 0x20]
	0x03927768 STR S2, [X9 + 0x28]
	0x0392776C STR W10, [X9 + 0x2C]
	0x03927770 LDR W9, [X13 + 0x18]
	0x03927774 ADD W8, W8, 0x1
	0x03927778 CMP W8, W9
	0x0392777C B.CS 0x3927868
	0x03927780 ADD W28, W8, 0x1
	0x03927784 LDR W8, [X31 + 0x64]
	0x03927788 ADD W29, W29, 0x1
	0x0392778C ADD X9, X13, X11, 0x4, LSL
	0x03927790 ADD W27, W26, 0x1
	0x03927794 CMP W8, W29
	0x03927798 MOV X26, X23
	0x0392779C MOV X23, X24
	0x039277A0 MOVZ W24, 0xC
	0x039277A4 STP S0, S1, [X9 + 0x20]
	0x039277A8 STR S2, [X9 + 0x28]
	0x039277AC STR W10, [X9 + 0x2C]
	0x039277B0 B.NE 0x3927310
	0x039277B4 ADRP X8, 0x7D3000
	0x039277B8 LDR X8, [X8 + 0x700]
	0x039277BC LDR X0, [X8]
	0x039277C0 BL 0x1C16F10
	0x039277C4 MOV X1, X31
	0x039277C8 MOV X19, X0
	0x039277CC BL 0x3C17028
	0x039277D0 CBZ X19, 0x392786C
	0x039277D4 ADRP X8, 0x827000
	0x039277D8 LDR X8, [X8 + 0xA08]
	0x039277DC MOV X0, X19
	0x039277E0 MOV X2, X31
	0x039277E4 LDR X1, [X8]
	0x039277E8 BL 0x3C38A84
	0x039277EC MOV X0, X19
	0x039277F0 MOV X1, X23
	0x039277F4 MOV X2, X31
	0x039277F8 BL 0x3C17F08
	0x039277FC LDR X1, [X31 + 0x58]
	0x03927800 MOV X0, X19
	0x03927804 MOV X2, X31
	0x03927808 BL 0x3C1810C
	0x0392780C MOV X0, X19
	0x03927810 MOV X1, X25
	0x03927814 MOV X2, X31
	0x03927818 BL 0x3C181B8
	0x0392781C LDR X1, [X31 + 0x48]
	0x03927820 MOV X0, X19
	0x03927824 MOV X2, X31
	0x03927828 BL 0x3C18264
	0x0392782C LDR X1, [X31 + 0x50]
	0x03927830 MOV X0, X19
	0x03927834 MOV X2, X31
	0x03927838 BL 0x3C18FF0
	0x0392783C MOV X0, X19
	0x03927840 LDP X20, X19, [X31 + 0x100]
	0x03927844 LDP X22, X21, [X31 + 0xF0]
	0x03927848 LDP X24, X23, [X31 + 0xE0]
	0x0392784C LDP X26, X25, [X31 + 0xD0]
	0x03927850 LDP X28, X27, [X31 + 0xC0]
	0x03927854 LDP X29, X30, [X31 + 0xB0]
	0x03927858 LDP D9, D8, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xABB000
	015 Move W8, [X20+2241]
	016 Move X19, X1
	017 Move X28, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {75}
	022 Move X0, 0x827000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0x7F9000
	026 Move X0, [X0+2808]
	027 Call 0x1C17CF4
	028 Move X0, 0x828000
	029 Move X0, [X0+2424]
	030 Call 0x1C17CF4
	031 Move X0, 0x828000
	032 Move X0, [X0+2432]
	033 Call 0x1C17CF4
	034 Move X0, 0x828000
	035 Move X0, [X0+2440]
	036 Call 0x1C17CF4
	037 Move X0, 0x827000
	038 Move X0, [X0+4000]
	039 Call 0x1C17CF4
	040 Move X0, 0x7CF000
	041 Move X0, [X0+2504]
	042 Call 0x1C17CF4
	043 Move X0, 0x827000
	044 Move X0, [X0+4008]
	045 Call 0x1C17CF4
	046 Move X0, 0x7CF000
	047 Move X0, [X0+1968]
	048 Call 0x1C17CF4
	049 Move X0, 0x828000
	050 Move X0, [X0+2448]
	051 Call 0x1C17CF4
	052 Move X0, 0x828000
	053 Move X0, [X0+2456]
	054 Call 0x1C17CF4
	055 Move X0, 0x7D4000
	056 Move X0, [X0+1792]
	057 Call 0x1C17CF4
	058 Move X0, 0x828000
	059 Move X0, [X0+2024]
	060 Call 0x1C17CF4
	061 Move X0, 0x828000
	062 Move X0, [X0+2464]
	063 Call 0x1C17CF4
	064 Move X0, 0x828000
	065 Move X0, [X0+2472]
	066 Call 0x1C17CF4
	067 Move X0, 0x828000
	068 Move X0, [X0+2480]
	069 Call 0x1C17CF4
	070 Move X0, 0x828000
	071 Move X0, [X0+2488]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+2241], W8
	075 Compare X28, 0
	076 JumpIfEqual {370}
	077 Move X10, 0x828000
	078 Move X8, [X28]
	079 Move X10, [X10+2448]
	080 Move X22, 0x7CF000
	081 Move X21, 0x828000
	082 Move X20, 0x828000
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X10]
	085 Move X22, [X22+1968]
	086 Move X21, [X21+2440]
	087 Move X20, [X20+2432]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X28
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X28
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X22]
	107 Move W23, W0
	108 Move W1, W23
	109 Move X0, X8
	110 Call 0x1C17D6C
	111 Move X8, [X21]
	112 Move X29, X0
	113 Move X0, X8
	114 Call 0x1C17F10
	115 Move X1, [X20]
	116 Move X22, X0
	117 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Object>>..ctor, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X19], X22
	120 Move X21, 0x828000
	121 Move X20, 0x828000
	122 Move X21, [X21+2480]
	123 Move X20, [X20+2424]
	124 Move X22, X31
	125 Move W27, W31
	126 Move W8, W23
	127 Move [X31], X8
	128 Move [X31+8], X29
	129 Move [X31+16], X28
	130 Move X8, [X28]
	131 Move X10, 0x828000
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X10, [X10+2456]
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X28
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X2, [X0+8]
	151 Move X0, X28
	152 Move W1, W22
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X8, 0x7D4000
	155 Move X8, [X8+1792]
	156 Move X24, X0
	157 Move X8, [X8]
	158 Move X0, X8
	159 Call 0x1C17F10
	160 Move X1, X31
	161 Move X23, X0
	162 Call Mesh..ctor, X0
	163 Compare X24, 0
	164 JumpIfEqual {370}
	165 Compare X23, 0
	166 JumpIfEqual {370}
	167 Move X1, [X24+88]
	168 Move X0, X23
	169 Move X2, X31
	170 Call Mesh.set_vertices, X0, X1
	171 Move X0, [X21]
	172 Move X25, [X24+40]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {178}
	176 Call 0x1C17DFC
	177 Move X0, [X21]
	178 Move X8, [X0+184]
	179 Move X26, [X8+8]
	180 Compare X26, 0
	181 JumpIfNotEqual {203}
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X21]
	187 Move X8, [X0+184]
	188 Move X28, [X8]
	189 Move X8, 0x827000
	190 Move X8, [X8+4008]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, 0x828000
	194 Move X8, [X8+2472]
	195 Move X1, X28
	196 Move X3, X31
	197 Move X26, X0
	198 Move X2, [X8]
	199 Call Func`2<Object, Object>..ctor, X0, X1, X2
	200 Move X8, [X21]
	201 Move X8, [X8+184]
	202 Move [X8+8], X26
	203 Move [X31+24], X22
	204 Move X8, 0x827000
	205 Move X8, [X8+4000]
	206 Move X0, X25
	207 Move X1, X26
	208 Move X2, [X8]
	209 Call Enumerable.SelectMany, X0, X1
	210 Move X8, 0x7CF000
	211 Move X8, [X8+2504]
	212 Move X1, [X8]
	213 Call Enumerable.ToArray, X0
	214 Move X1, X0
	215 Move X0, X23
	216 Move X2, X31
	217 Call Mesh.set_triangles, X0, X1
	218 Move X0, X23
	219 Move X1, X31
	220 Call Mesh.get_vertexCount, X0
	221 Move X8, 0x7F9000
	222 Move X8, [X8+2808]
	223 Move W1, W0
	224 Move X8, [X8]
	225 Move X0, X8
	226 Call 0x1C17D6C
	227 Move X22, [X24+40]
	228 Compare X22, 0
	229 JumpIfEqual {370}
	230 Move W8, [X22+24]
	231 Move X25, X0
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move W29, W31
	234 Move W21, W27
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X8, 0x828000
	237 Move X8, [X8+2024]
	238 Move X0, [X8]
	239 Add X8, X22, W29
	240 Move X26, [X8+32]
	241 Move W9, [X0+224]
	242 Compare W9, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Move X8, 0x828000
	246 Move X27, [X19]
	247 Move X8, [X8+2464]
	248 Add X0, X31, 32
	249 Move X1, X24
	250 Move X2, X26
	251 Move X3, [X8]
	252 Move [X31+32], X31
	253 Move [X31+40], X31
	254 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	255 Compare X27, 0
	256 JumpIfEqual {370}
	257 Move X2, [X31+32]
	258 Move X3, [X31+40]
	259 Move X4, [X20]
	260 Move W8, W21
	261 ShiftRight W8, 16
	262 And W8, W8, 0x7FFFFF
	263 And W1, W21, 0xFFFF
	264 NotImplemented "Instruction BFM not yet implemented."
	265 Move X0, X27
	266 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Object>>.Add, X0, X1, X2
	267 Compare X26, 0
	268 JumpIfEqual {370}
	269 Move X0, X26
	270 Move X1, X31
	271 Call Face.get_distinctIndexesInternal, X0
	272 Compare X0, 0
	273 JumpIfEqual {370}
	274 And W8, W21, 0xFF00
	275 NotImplemented "Instruction BFM not yet implemented."
	276 NotImplemented "Instruction BFM not yet implemented."
	277 Move W28, W31
	278 Add W27, W21, 1
	279 Or W21, W8, 0xFF000000
	280 Move W8, [X0+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X26
	283 Move X1, X31
	284 Call Face.get_distinctIndexesInternal, X0
	285 Compare X0, 0
	286 JumpIfEqual {370}
	287 Move W8, [X0+24]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Compare X25, 0
	290 JumpIfEqual {370}
	291 Add X8, X0, W28
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Move W9, [X25+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Add X8, X25, X8
	296 Move X0, X26
	297 Move X1, X31
	298 Move [X8+32], W21
	299 Add W28, W28, 1
	300 Call Face.get_distinctIndexesInternal, X0
	301 Compare X0, 0
	302 JumpIfNotEqual {280}
	303 Move W8, [X22+24]
	304 Add W29, W29, 1
	305 Move W21, W27
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, X23
	308 Move X1, X25
	309 Move X2, X31
	310 Call Mesh.set_colors32, X0, X1
	311 Move X0, X24
	312 Move X1, X31
	313 Call Object.get_name, X0
	314 Move X8, 0x828000
	315 Move X8, [X8+2488]
	316 Move X2, X31
	317 Move X1, [X8]
	318 Call String.Concat, X0, X1
	319 Move X25, X0
	320 Move X0, X24
	321 Move X1, X31
	322 Call Component.get_transform, X0
	323 Move X8, 0x827000
	324 Move X8, [X8+2760]
	325 Move X24, X0
	326 Move X8, [X8]
	327 Move W9, [X8+224]
	328 Compare W9, 0
	329 JumpIfNotEqual {332}
	330 Move X0, X8
	331 Call 0x1C17DFC
	332 Move X0, X31
	333 Call BuiltinMaterials.get_facePickerMaterial
	334 Move X3, X0
	335 Move W4, 1
	336 Move X0, X25
	337 Move X1, X24
	338 Move X2, X23
	339 Move X5, X31
	340 Call InternalUtility.MeshGameObjectWithTransform, X0, X1, X2, X3, X4
	341 Move X21, 0x828000
	342 Move X29, [X31+8]
	343 Move X28, [X31+16]
	344 Move X22, [X31+24]
	345 Move X21, [X21+2480]
	346 Compare X29, 0
	347 JumpIfEqual {370}
	348 Move W8, [X29+24]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X9, [X31]
	351 Add X8, X29, X22
	352 Add X22, X22, 1
	353 Move [X8+32], X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X29
	356 Move X20, [X31+128]
	357 Move X19, [X31+136]
	358 Move X22, [X31+112]
	359 Move X21, [X31+120]
	360 Move X24, [X31+96]
	361 Move X23, [X31+104]
	362 Move X26, [X31+80]
	363 Move X25, [X31+88]
	364 Move X28, [X31+64]
	365 Move X27, [X31+72]
	366 Move X29, [X31+48]
	367 Move X30, [X31+56]
	368 Add X31, X31, 144
	369 Return X0
	370 Call 0x1C17F20
	371 Call 0x1C17F28

Method: System.Void GenerateVertexPickingObjects(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Int32>> map, out UnityEngine.GameObject[] depthObjects, out UnityEngine.GameObject[] pickerObjects)

Disassembly:
	0x0392785C LDP D11, D10, [X31 + 0x90]
	0x03927860 ADD X31, X31, 0x110
	0x03927864 RET
	0x03927868 BL 0x1C16F28
	0x0392786C BL 0x1C16F20
	0x03927870 SUB X31, X31, 0xC0
	0x03927874 STP X29, X30, [X31 + 0x60]
	0x03927878 STP X28, X27, [X31 + 0x70]
	0x0392787C STP X26, X25, [X31 + 0x80]
	0x03927880 STP X24, X23, [X31 + 0x90]
	0x03927884 STP X22, X21, [X31 + 0xA0]
	0x03927888 STP X20, X19, [X31 + 0xB0]
	0x0392788C ADRP X19, 0xABA000
	0x03927890 LDRB W8, [X19 + 0x8C5]
	0x03927894 MOV X26, X1
	0x03927898 MOV X27, X0
	0x0392789C STR X2, [X31 + 0x48]
	0x039278A0 TBNZ X8, 0x0, 0x3927918
	0x039278A4 ADRP X0, 0x7F8000
	0x039278A8 LDR X0, [X0 + 0xAF8]
	0x039278AC BL 0x1C16CF4
	0x039278B0 ADRP X0, 0x827000
	0x039278B4 LDR X0, [X0 + 0xA10]
	0x039278B8 BL 0x1C16CF4
	0x039278BC ADRP X0, 0x7CD000
	0x039278C0 LDR X0, [X0 + 0xE58]
	0x039278C4 BL 0x1C16CF4
	0x039278C8 ADRP X0, 0x7CC000
	0x039278CC LDR X0, [X0 + 0x5A8]
	0x039278D0 BL 0x1C16CF4
	0x039278D4 ADRP X0, 0x7D3000
	0x039278D8 LDR X0, [X0 + 0x700]
	0x039278DC BL 0x1C16CF4
	0x039278E0 ADRP X0, 0x827000
	0x039278E4 LDR X0, [X0 + 0x7E8]
	0x039278E8 BL 0x1C16CF4
	0x039278EC ADRP X0, 0x827000
	0x039278F0 LDR X0, [X0 + 0xA18]
	0x039278F4 BL 0x1C16CF4
	0x039278F8 ADRP X0, 0x7CE000
	0x039278FC LDR X0, [X0 + 0x9B0]
	0x03927900 BL 0x1C16CF4
	0x03927904 ADRP X0, 0x827000
	0x03927908 LDR X0, [X0 + 0xA20]
	0x0392790C BL 0x1C16CF4
	0x03927910 MOVZ W8, 0x1
	0x03927914 STRB W8, [X19 + 0x8C5]
	0x03927918 CBZ X27, 0x3927D54
	0x0392791C LDR X8, [X27 + 0x28]
	0x03927920 CBZ X8, 0x392798C
	0x03927924 LDR W9, [X8 + 0x18]
	0x03927928 CMP W9, 0x0
	0x0392792C CSET W19, GT
	0x03927930 CMP W9, 0x1
	0x03927934 STR W9, [X31 + 0xC]
	0x03927938 B.LT 0x3927998
	0x0392793C MOV W20, W31
	0x03927940 MOV W22, W31
	0x03927944 LDR W9, [X8 + 0x18]
	0x03927948 CMP W20, W9
	0x0392794C B.CS 0x3927D50
	0x03927950 ADD X8, X8, W20, 0x3, SXTW
	0x03927954 LDR X0, [X8 + 0x20]
	0x03927958 CBZ X0, 0x3927D54
	0x0392795C MOV X1, X31
	0x03927960 BL 0x38FFA80
	0x03927964 CBZ X0, 0x3927D54
	0x03927968 LDR W8, [X0 + 0x18]
	0x0392796C LDR W9, [X31 + 0xC]
	0x03927970 ADD W20, W20, 0x1
	0x03927974 ADD W22, W22, W8
	0x03927978 CMP W9, W20
	0x0392797C B.EQ 0x39279A0
	0x03927980 LDR X8, [X27 + 0x28]
	0x03927984 CBNZ X8, 0x3927944
	0x03927988 B 0x3927D54
	0x0392798C MOV W19, W31
	0x03927990 STR W31, [X31 + 0xC]
	0x03927994 B 0x392799C
	0x03927998 MOV W19, W31
	0x0392799C MOV W22, W31
	0x039279A0 ADRP X8, 0x7CC000
	0x039279A4 LDR X8, [X8 + 0x5A8]
	0x039279A8 ADRP X23, 0x7CE000
	0x039279AC ADRP X21, 0x7F8000
	0x039279B0 ADRP X20, 0x7CD000
	0x039279B4 LDR X0, [X8]
	0x039279B8 LDR W8, [X0 + 0xE0]
	0x039279BC LDR X23, [X23 + 0x9B0]
	0x039279C0 LDR X21, [X21 + 0xAF8]
	0x039279C4 LDR X20, [X20 + 0xE58]
	0x039279C8 CBNZ W8, 0x39279D0
	0x039279CC BL 0x1C16DFC
	0x039279D0 MOVZ W1, 0x7FFE
	0x039279D4 MOV W0, W22
	0x039279D8 MOV X2, X31
	0x039279DC BL 0x337EE94
	0x039279E0 LDR X8, [X23]
	0x039279E4 UBFM W22, W0, 0x1F, 0x1E
	0x039279E8 MOV W23, W0
	0x039279EC MOV W1, W22
	0x039279F0 MOV X0, X8
	0x039279F4 BL 0x1C16D6C
	0x039279F8 LDR X8, [X21]
	0x039279FC STR X0, [X31 + 0x20]
	0x03927A00 MOV W1, W22
	0x03927A04 MOV X0, X8
	0x03927A08 BL 0x1C16D6C
	0x03927A0C LDR X8, [X20]
	0x03927A10 STR X0, [X31 + 0x18]
	0x03927A14 MOV W1, W22
	0x03927A18 MOV X0, X8
	0x03927A1C BL 0x1C16D6C
	0x03927A20 CMP W23, 0x1
	0x03927A24 CSET W8, LT
	0x03927A28 EOR W9, W19, 0x1
	0x03927A2C ORR W8, W9, W8, 0x0
	0x03927A30 MOV X24, X0
	0x03927A34 STR W23, [X31 + 0x8]
	0x03927A38 TBNZ X8, 0x0, 0x3927CAC
	0x03927A3C LDR W8, [X31 + 0x8]
	0x03927A40 STR X31, [X31 + 0x10]
	0x03927A44 MOV W20, W31
	0x03927A48 MOV W8, W8
	0x03927A4C STR X8, [X31 + 0x38]
	0x03927A50 LDR X8, [X27 + 0x28]
	0x03927A54 CBZ X8, 0x3927D54
	0x03927A58 LDR X9, [X31 + 0x10]
	0x03927A5C SXTW X23, W20
	0x03927A60 MOV X28, X31
	0x03927A64 STP X23, X20, [X31 + 0x28]
	0x03927A68 SXTW X10, W9
	0x03927A6C STR X10, [X31 + 0x40]
	0x03927A70 UBFM W19, W9, 0x1F, 0x1E
	0x03927A74 LDR W9, [X8 + 0x18]
	0x03927A78 CMP W20, W9
	0x03927A7C B.CS 0x3927D50
	0x03927A80 ADD X8, X8, X23, 0x3, LSL
	0x03927A84 LDR X0, [X8 + 0x20]
	0x03927A88 CBZ X0, 0x3927D54
	0x03927A8C MOV X1, X31
	0x03927A90 BL 0x38FFA80
	0x03927A94 CBZ X0, 0x3927D54
	0x03927A98 LDP X9, X8, [X31 + 0x38]
	0x03927A9C ADD X8, X8, X28
	0x03927AA0 CMP X8, X9
	0x03927AA4 B.GE 0x3927C80
	0x03927AA8 LDR W8, [X0 + 0x18]
	0x03927AAC CMP W28, W8
	0x03927AB0 B.GE 0x3927C80
	0x03927AB4 LDR X8, [X27 + 0x28]
	0x03927AB8 CBZ X8, 0x3927D54
	0x03927ABC LDR W9, [X8 + 0x18]
	0x03927AC0 CMP W20, W9
	0x03927AC4 B.CS 0x3927D50
	0x03927AC8 ADD X8, X8, X23, 0x3, LSL
	0x03927ACC LDR X0, [X8 + 0x20]
	0x03927AD0 CBZ X0, 0x3927D54
	0x03927AD4 MOV X1, X31
	0x03927AD8 BL 0x38FFA80
	0x03927ADC CBZ X0, 0x3927D54
	0x03927AE0 LDR W8, [X0 + 0x18]
	0x03927AE4 CMP W28, W8
	0x03927AE8 B.CS 0x3927D50
	0x03927AEC LDR X8, [X27 + 0x58]
	0x03927AF0 CBZ X8, 0x3927D54
	0x03927AF4 ADD X9, X0, W28, 0x3, SXTW
	0x03927AF8 MOV X22, X26
	0x03927AFC LDR X26, [X9 + 0x20]
	0x03927B00 LDR W10, [X8 + 0x18]
	0x03927B04 CMP W26, W10
	0x03927B08 B.CS 0x3927D50
	0x03927B0C SBFM X9, X26, 0x20, 0x3F
	0x03927B10 CMP W9, W10
	0x03927B14 B.CS 0x3927D50
	0x03927B18 LDR X11, [X31 + 0x20]
	0x03927B1C CBZ X11, 0x3927D54
	0x03927B20 LDR W10, [X11 + 0x18]
	0x03927B24 CMP W19, W10
	0x03927B28 B.CS 0x3927D50
	0x03927B2C SXTW X10, W26
	0x03927B30 MOVZ W12, 0xC
	0x03927B34 MADD X9, X9, X12, X8
	0x03927B38 MADD X8, X10, X12, X8
	0x03927B3C LDR V2, [X8 + 0x20]
	0x03927B40 LDR V3, [X8 + 0x28]
	0x03927B44 SXTW X25, W19
	0x03927B48 LDR V0, [X9 + 0x20]
	0x03927B4C LDR V1, [X9 + 0x28]
	0x03927B50 MOVZ W9, 0xC
	0x03927B54 MADD X8, X25, X9, X11
	0x03927B58 STR D2, [X8 + 0x20]
	0x03927B5C STR S3, [X8 + 0x28]
	0x03927B60 LDR W8, [X11 + 0x18]
	0x03927B64 ADD W29, W19, 0x1
	0x03927B68 CMP W29, W8
	0x03927B6C B.CS 0x3927D50
	0x03927B70 SXTW X20, W29
	0x03927B74 MADD X8, X20, X9, X11
	0x03927B78 STR D0, [X8 + 0x20]
	0x03927B7C STR S1, [X8 + 0x28]
	0x03927B80 ADRP X8, 0x827000
	0x03927B84 LDR X8, [X8 + 0x7E8]
	0x03927B88 LDR X9, [X31 + 0x48]
	0x03927B8C MOV X23, X27
	0x03927B90 LDR X0, [X8]
	0x03927B94 LDR W27, [X9]
	0x03927B98 LDR W8, [X0 + 0xE0]
	0x03927B9C MOV W21, W27
	0x03927BA0 CBNZ W8, 0x3927BB0
	0x03927BA4 BL 0x1C16DFC
	0x03927BA8 LDR X9, [X31 + 0x48]
	0x03927BAC LDR W21, [X9]
	0x03927BB0 ADD W8, W21, 0x1
	0x03927BB4 STR W8, [X9]
	0x03927BB8 ADRP X8, 0x827000
	0x03927BBC LDR X8, [X8 + 0xA18]
	0x03927BC0 ADD X0, X31, 0x50
	0x03927BC4 MOV X1, X23
	0x03927BC8 MOV X2, X26
	0x03927BCC LDR X3, [X8]
	0x03927BD0 STP X31, X31, [X31 + 0x50]
	0x03927BD4 BL 0x25E6B18
	0x03927BD8 CBZ X22, 0x3927D54
	0x03927BDC ADRP X8, 0x827000
	0x03927BE0 LDP X2, X3, [X31 + 0x50]
	0x03927BE4 LDR X8, [X8 + 0xA10]
	0x03927BE8 MOV X0, X22
	0x03927BEC MOV W1, W21
	0x03927BF0 MOV X26, X22
	0x03927BF4 LDR X4, [X8]
	0x03927BF8 BL 0x2AF93E8
	0x03927BFC LDR X10, [X31 + 0x18]
	0x03927C00 CBZ X10, 0x3927D54
	0x03927C04 LDR W8, [X10 + 0x18]
	0x03927C08 CMP W19, W8
	0x03927C0C B.CS 0x3927D50
	0x03927C10 AND W8, W27, 0xFF00
	0x03927C14 BFM W8, W27, 0x10, 0xF
	0x03927C18 BFM W8, W27, 0x10, 0x17
	0x03927C1C ORR W8, W8, 0xFF000000
	0x03927C20 ADD X9, X10, X25, 0x2, LSL
	0x03927C24 STR W8, [X9 + 0x20]
	0x03927C28 LDR W9, [X10 + 0x18]
	0x03927C2C CMP W29, W9
	0x03927C30 B.CS 0x3927D50
	0x03927C34 ADD X9, X10, X20, 0x2, LSL
	0x03927C38 STR W8, [X9 + 0x20]
	0x03927C3C CBZ X24, 0x3927D54
	0x03927C40 LDR W8, [X24 + 0x18]
	0x03927C44 CMP W19, W8
	0x03927C48 B.CS 0x3927D50
	0x03927C4C ADD X9, X24, X25, 0x2, LSL
	0x03927C50 CMP W29, W8
	0x03927C54 STR W19, [X9 + 0x20]
	0x03927C58 B.CS 0x3927D50
	0x03927C5C ADD X8, X24, X20, 0x2, LSL
	0x03927C60 STR W29, [X8 + 0x20]
	0x03927C64 MOV X27, X23
	0x03927C68 LDR X8, [X23 + 0x28]
	0x03927C6C LDP X23, X20, [X31 + 0x28]
	0x03927C70 ADD X28, X28, 0x1
	0x03927C74 ADD W19, W19, 0x2
	0x03927C78 CBNZ X8, 0x3927A74
	0x03927C7C B 0x3927D54
	0x03927C80 LDR W8, [X31 + 0xC]
	0x03927C84 ADD W20, W20, 0x1
	0x03927C88 CMP W20, W8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+20], W1
	015 Move X22, 0xABB000
	016 Move X24, 0x828000
	017 Move X19, 0x828000
	018 Move W8, [X22+2242]
	019 Move X24, [X24+2496]
	020 Move X19, [X19+2504]
	021 Move X21, X4
	022 Move X25, X3
	023 Move X23, X2
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x827000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x828000
	033 Move X0, [X0+2504]
	034 Call 0x1C17CF4
	035 Move X0, 0x828000
	036 Move X0, [X0+2496]
	037 Call 0x1C17CF4
	038 Move X0, 0x7CF000
	039 Move X0, [X0+1968]
	040 Call 0x1C17CF4
	041 Move X0, 0x828000
	042 Move X0, [X0+2448]
	043 Call 0x1C17CF4
	044 Move X0, 0x828000
	045 Move X0, [X0+2456]
	046 Call 0x1C17CF4
	047 Move X0, 0x828000
	048 Move X0, [X0+2024]
	049 Call 0x1C17CF4
	050 Move X0, 0x828000
	051 Move X0, [X0+2512]
	052 Call 0x1C17CF4
	053 Move X0, 0x828000
	054 Move X0, [X0+2520]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+2242], W8
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X1, [X19]
	061 Move X24, X0
	062 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Int32>>..ctor, X0
	063 Move W8, 2
	064 Move [X23], X24
	065 Move [X31+28], W8
	066 Compare X20, 0
	067 JumpIfEqual {283}
	068 Move X10, 0x828000
	069 Move X8, [X20]
	070 Move X10, [X10+2448]
	071 Move X22, 0x7CF000
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, [X10]
	074 Move X22, [X22+1968]
	075 Move [X31+8], X25
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X20
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X19, 0x827000
	093 Move X19, [X19+2760]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X22]
	097 Move W22, W0
	098 Move W1, W22
	099 Move X0, X8
	100 Call 0x1C17D6C
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X31+24], W22
	103 Move [X21], X0
	104 Move X22, 0x828000
	105 Move X24, 0x828000
	106 Move X22, [X22+2024]
	107 Move X24, [X24+2520]
	108 Move W8, [X31+24]
	109 Move X25, X31
	110 Move W29, W8
	111 Move X8, [X20]
	112 Move X10, 0x828000
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X10, [X10+2456]
	115 Move X1, [X10]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X20
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X2, [X0+8]
	132 Move X0, X20
	133 Move W1, W25
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X22]
	136 Move X26, [X23]
	137 Move X27, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Add X2, X31, 28
	144 Move X0, X27
	145 Move X1, X26
	146 Call SelectionPickerRenderer.BuildVertexMesh, X0, X1, X2
	147 Compare X27, 0
	148 JumpIfEqual {283}
	149 Move X26, X0
	150 Move X0, X27
	151 Move X1, X31
	152 Call Object.get_name, X0
	153 Move X1, [X24]
	154 Move X2, X31
	155 Call String.Concat, X0, X1
	156 Move X28, X0
	157 Move X0, X27
	158 Move X1, X31
	159 Call Component.get_transform, X0
	160 Move X8, [X19]
	161 Move X27, X0
	162 Move W9, [X8+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move X0, X31
	168 Call BuiltinMaterials.get_vertexPickerMaterial
	169 Move X3, X0
	170 Move W4, 1
	171 Move X0, X28
	172 Move X1, X27
	173 Move X2, X26
	174 Move X5, X31
	175 Call InternalUtility.MeshGameObjectWithTransform, X0, X1, X2, X3, X4
	176 Move X8, [X21]
	177 Compare X8, 0
	178 JumpIfEqual {283}
	179 Move W9, [X8+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X8, X8, X25
	182 Add X25, X25, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X8+32], X0
	185 Move W8, [X31+20]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {267}
	190 Move X8, 0x7CF000
	191 Move X8, [X8+1968]
	192 Move W22, [X31+24]
	193 Move X0, [X8]
	194 Move W1, W22
	195 Call 0x1C17D6C
	196 Move X27, [X31+8]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X27], X0
	199 Move X26, 0x828000
	200 Move X26, [X26+2512]
	201 Move X21, X31
	202 Move W25, W22
	203 Move X8, [X20]
	204 Move X10, 0x828000
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X10, [X10+2456]
	207 Move X1, [X10]
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X20
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X2, [X0+8]
	224 Move X0, X20
	225 Move W1, W21
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {283}
	229 Move X1, X31
	230 Move X24, X0
	231 Call Object.get_name, X0
	232 Move X1, [X26]
	233 Move X2, X31
	234 Call String.Concat, X0, X1
	235 Move X22, X0
	236 Move X0, X24
	237 Move X1, X31
	238 Call Component.get_transform, X0
	239 Move X23, X0
	240 Move X0, X24
	241 Call ProBuilderMesh.get_mesh, X0
	242 Move X8, [X19]
	243 Move X24, X0
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move X0, X31
	250 Call BuiltinMaterials.get_facePickerMaterial
	251 Move X3, X0
	252 Move W4, 1
	253 Move X0, X22
	254 Move X1, X23
	255 Move X2, X24
	256 Move X5, X31
	257 Call InternalUtility.MeshGameObjectWithTransform, X0, X1, X2, X3, X4
	258 Move X8, [X27]
	259 Compare X8, 0
	260 JumpIfEqual {283}
	261 Move W9, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X8, X8, X21
	264 Add X21, X21, 1
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move [X8+32], X0
	267 Move X8, [X31+8]
	268 Move [X8], X31
	269 Move X20, [X31+112]
	270 Move X19, [X31+120]
	271 Move X22, [X31+96]
	272 Move X21, [X31+104]
	273 Move X24, [X31+80]
	274 Move X23, [X31+88]
	275 Move X26, [X31+64]
	276 Move X25, [X31+72]
	277 Move X28, [X31+48]
	278 Move X27, [X31+56]
	279 Move X29, [X31+32]
	280 Move X30, [X31+40]
	281 Add X31, X31, 128
	282 Return 
	283 Call 0x1C17F20
	284 Call 0x1C17F28

Method: System.Void GenerateEdgePickingObjects(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selection, System.Boolean doDepthTest, out System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, UnityEngine.ProBuilder.Edge>> map, out UnityEngine.GameObject[] depthObjects, out UnityEngine.GameObject[] pickerObjects)

Disassembly:
	0x03927C8C B.GE 0x3927CAC
	0x03927C90 LDR X10, [X31 + 0x10]
	0x03927C94 LDR W9, [X31 + 0x8]
	0x03927C98 ADD W8, W10, W28
	0x03927C9C CMP W9, W8
	0x03927CA0 ADD X10, X28, W10, SXTW
	0x03927CA4 STR X10, [X31 + 0x10]
	0x03927CA8 B.GT 0x3927A50
	0x03927CAC ADRP X8, 0x7D3000
	0x03927CB0 LDR X8, [X8 + 0x700]
	0x03927CB4 LDR X0, [X8]
	0x03927CB8 BL 0x1C16F10
	0x03927CBC MOV X1, X31
	0x03927CC0 MOV X19, X0
	0x03927CC4 BL 0x3C17028
	0x03927CC8 CBZ X19, 0x3927D54
	0x03927CCC ADRP X8, 0x827000
	0x03927CD0 LDR X8, [X8 + 0xA20]
	0x03927CD4 MOV X0, X19
	0x03927CD8 MOV X2, X31
	0x03927CDC LDR X1, [X8]
	0x03927CE0 BL 0x3C38A84
	0x03927CE4 LDR X1, [X31 + 0x20]
	0x03927CE8 MOV X0, X19
	0x03927CEC MOV X2, X31
	0x03927CF0 BL 0x3C17F08
	0x03927CF4 LDR X1, [X31 + 0x18]
	0x03927CF8 MOV X0, X19
	0x03927CFC MOV X2, X31
	0x03927D00 BL 0x3C18318
	0x03927D04 MOVZ W1, 0x1
	0x03927D08 MOV X0, X19
	0x03927D0C MOV X2, X31
	0x03927D10 BL 0x3C17654
	0x03927D14 MOVZ W2, 0x3
	0x03927D18 MOV X0, X19
	0x03927D1C MOV X1, X24
	0x03927D20 MOV W3, W31
	0x03927D24 MOV X4, X31
	0x03927D28 BL 0x3C19784
	0x03927D2C MOV X0, X19
	0x03927D30 LDP X20, X19, [X31 + 0xB0]
	0x03927D34 LDP X22, X21, [X31 + 0xA0]
	0x03927D38 LDP X24, X23, [X31 + 0x90]
	0x03927D3C LDP X26, X25, [X31 + 0x80]
	0x03927D40 LDP X28, X27, [X31 + 0x70]
	0x03927D44 LDP X29, X30, [X31 + 0x60]
	0x03927D48 ADD X31, X31, 0xC0
	0x03927D4C RET
	0x03927D50 BL 0x1C16F28
	0x03927D54 BL 0x1C16F20
	0x03927D58 STP X30, X21, [X31 - 0x20]!
	0x03927D5C STP X20, X19, [X31 + 0x10]
	0x03927D60 ADRP X21, 0xABA000
	0x03927D64 ADRP X19, 0x827000
	0x03927D68 ADRP X20, 0x827000
	0x03927D6C LDRB W8, [X21 + 0x8C6]
	0x03927D70 LDR X19, [X19 + 0x7E8]
	0x03927D74 LDR X20, [X20 + 0xA28]
	0x03927D78 TBNZ X8, 0x0, 0x3927D9C
	0x03927D7C ADRP X0, 0x827000
	0x03927D80 LDR X0, [X0 + 0xA28]
	0x03927D84 BL 0x1C16CF4
	0x03927D88 ADRP X0, 0x827000
	0x03927D8C LDR X0, [X0 + 0x7E8]
	0x03927D90 BL 0x1C16CF4
	0x03927D94 MOVZ W8, 0x1
	0x03927D98 STRB W8, [X21 + 0x8C6]
	0x03927D9C LDR X8, [X19]
	0x03927DA0 ADRP X9, 0xFFFFFFFFFD1C5000
	0x03927DA4 LDR V0, [X9 + 0xBB]
	0x03927DA8 MOVZ W1, 0x2
	0x03927DAC LDR X8, [X8 + 0xB8]
	0x03927DB0 STR V0, [X8]
	0x03927DB4 LDR X8, [X19]
	0x03927DB8 FMOV V0.4S, 0x0
	0x03927DBC LDR X9, [X8 + 0xB8]
	0x03927DC0 STR V0, [X9 + 0x1]
	0x03927DC4 LDR X8, [X8 + 0xB8]
	0x03927DC8 MOVZ W9, 0x7
	0x03927DCC STRB W31, [X8 + 0x20]
	0x03927DD0 STR X31, [X8 + 0x28]
	0x03927DD4 STR W9, [X8 + 0x30]
	0x03927DD8 LDR X0, [X20]
	0x03927DDC BL 0x1C16D6C
	0x03927DE0 CBZ X0, 0x3927E10
	0x03927DE4 LDR W8, [X0 + 0x18]
	0x03927DE8 CMP W8, 0x1
	0x03927DEC B.LS 0x3927E14
	0x03927DF0 MOVZ W8, 0xB
	0x03927DF4 STR W8, [X0 + 0x24]
	0x03927DF8 LDR X8, [X19]
	0x03927DFC LDP X20, X19, [X31 + 0x10]
	0x03927E00 LDR X8, [X8 + 0xB8]
	0x03927E04 STR X0, [X8 + 0x38]
	0x03927E08 LDP X30, X21, [X31], #0x20
	0x03927E0C RET
	0x03927E10 BL 0x1C16F20
	0x03927E14 BL 0x1C16F28
	0x03927E18 MOV X0, X31
	0x03927E1C RET
	0x03927E20 MOV X1, X31
	0x03927E24 B 0x33BDD8C
	0x03927E28 SUB X31, X31, 0xE0
	0x03927E2C STR D8, [X31 + 0x70]
	0x03927E30 STP X29, X30, [X31 + 0x80]
	0x03927E34 STP X28, X27, [X31 + 0x90]
	0x03927E38 STP X26, X25, [X31 + 0xA0]
	0x03927E3C STP X24, X23, [X31 + 0xB0]
	0x03927E40 STP X22, X21, [X31 + 0xC0]
	0x03927E44 STP X20, X19, [X31 + 0xD0]
	0x03927E48 ADRP X21, 0xABA000
	0x03927E4C LDRB W8, [X21 + 0x8C8]
	0x03927E50 MOV W20, W5
	0x03927E54 MOV W19, W4
	0x03927E58 MOV X22, X3
	0x03927E5C MOV X23, X2
	0x03927E60 MOV X25, X1
	0x03927E64 TBNZ X8, 0x0, 0x3927EAC
	0x03927E68 ADRP X0, 0x827000
	0x03927E6C LDR X0, [X0 + 0xA30]
	0x03927E70 BL 0x1C16CF4
	0x03927E74 ADRP X0, 0x7CC000
	0x03927E78 LDR X0, [X0 + 0xA58]
	0x03927E7C BL 0x1C16CF4
	0x03927E80 ADRP X0, 0x7CC000
	0x03927E84 LDR X0, [X0 + 0x598]
	0x03927E88 BL 0x1C16CF4
	0x03927E8C ADRP X0, 0x827000
	0x03927E90 LDR X0, [X0 + 0x7E8]
	0x03927E94 BL 0x1C16CF4
	0x03927E98 ADRP X0, 0x7F6000
	0x03927E9C LDR X0, [X0 + 0x250]
	0x03927EA0 BL 0x1C16CF4
	0x03927EA4 MOVZ W8, 0x1
	0x03927EA8 STRB W8, [X21 + 0x8C8]
	0x03927EAC ORR W8, W20, W19, 0x0
	0x03927EB0 TBZ X8, 0x1F, 0x3927EF4
	0x03927EB4 CBZ X25, 0x39281E4
	0x03927EB8 MOV X0, X25
	0x03927EBC MOV X1, X31
	0x03927EC0 BL 0x3C03F08
	0x03927EC4 MOVZ W8, 0x7F800000
	0x03927EC8 FMOV S8, W8
	0x03927ECC FCVTZS W9, S2
	0x03927ED0 FCMP S2, S8
	0x03927ED4 MOVZ W20, 0x80000000
	0x03927ED8 MOV X0, X25
	0x03927EDC MOV X1, X31
	0x03927EE0 CSEL W19, W20, W9, EQ
	0x03927EE4 BL 0x3C03F08
	0x03927EE8 FCVTZS W8, S3
	0x03927EEC FCMP S3, S8
	0x03927EF0 CSEL W20, W20, W8, EQ
	0x03927EF4 ADRP X8, 0x7CC000
	0x03927EF8 LDR X8, [X8 + 0xA58]
	0x03927EFC LDR X0, [X8]
	0x03927F00 BL 0x1C16F10
	0x03927F04 MOV X1, X31
	0x03927F08 MOV X21, X0
	0x03927F0C BL 0x3C35A08
	0x03927F10 CBZ X21, 0x39281E4
	0x03927F14 ADRP X8, 0x827000
	0x03927F18 LDR X8, [X8 + 0xA30]
	0x03927F1C MOV X0, X21
	0x03927F20 LDR X1, [X8]
	0x03927F24 BL 0x21E51FC
	0x03927F28 CBZ X0, 0x39281E4
	0x03927F2C ADRP X26, 0x827000
	0x03927F30 ADRP X29, 0x7F6000
	0x03927F34 LDR X26, [X26 + 0x7E8]
	0x03927F38 LDR X29, [X29 + 0x250]
	0x03927F3C MOV X1, X25
	0x03927F40 MOV X2, X31
	0x03927F44 MOV X24, X0
	0x03927F48 BL 0x3C04D58
	0x03927F4C MOVZ W1, 0x1
	0x03927F50 MOV X0, X24
	0x03927F54 MOV X2, X31
	0x03927F58 BL 0x3C036DC
	0x03927F5C MOV X0, X24
	0x03927F60 MOV W1, W31
	0x03927F64 MOV X2, X31
	0x03927F68 BL 0x3C32410
	0x03927F6C MOVZ W1, 0x2
	0x03927F70 MOV X0, X24
	0x03927F74 MOV X2, X31
	0x03927F78 MOVZ W25, 0x2
	0x03927F7C BL 0x3C03C80
	0x03927F80 FMOV S0, 1
	0x03927F84 FMOV S1, 1
	0x03927F88 FMOV S2, 1
	0x03927F8C FMOV S3, 1
	0x03927F90 MOV X0, X24
	0x03927F94 MOV X1, X31
	0x03927F98 BL 0x3C03BAC
	0x03927F9C MOV X0, X24
	0x03927FA0 MOV W1, W31
	0x03927FA4 MOV X2, X31
	0x03927FA8 BL 0x3C0375C
	0x03927FAC MOV X0, X24
	0x03927FB0 MOV W1, W31
	0x03927FB4 MOV X2, X31
	0x03927FB8 BL 0x3C037DC
	0x03927FBC MOVZ W1, 0x1
	0x03927FC0 MOV X0, X24
	0x03927FC4 MOV X2, X31
	0x03927FC8 BL 0x3C0385C
	0x03927FCC LDR X0, [X26]
	0x03927FD0 MOVI V0.2D, 0x0
	0x03927FD4 STUR V0, [X31 + 0x5C]
	0x03927FD8 STP V0, V0, [X31 + 0x40]
	0x03927FDC STP W19, W20, [X31 + 0x38]
	0x03927FE0 LDR W8, [X0 + 0xE0]
	0x03927FE4 CBNZ W8, 0x3927FEC
	0x03927FE8 BL 0x1C16DFC
	0x03927FEC MOV X0, X31
	0x03927FF0 BL 0x3925898
	0x03927FF4 MOV W1, W0
	0x03927FF8 ADD X0, X31, 0x38
	0x03927FFC MOV X2, X31
	0x03928000 BL 0x3C225D8
	0x03928004 ADD X0, X31, 0x38
	0x03928008 MOV W1, W31
	0x0392800C MOV X2, X31
	0x03928010 BL 0x3C22B44
	0x03928014 ADD X0, X31, 0x38
	0x03928018 MOVZ W1, 0x10
	0x0392801C MOV X2, X31
	0x03928020 BL 0x3C22520
	0x03928024 ADD X0, X31, 0x38
	0x03928028 MOV W1, W31
	0x0392802C MOV X2, X31
	0x03928030 STR W25, [X31 + 0x58]
	0x03928034 BL 0x3C22B70
	0x03928038 ADD X0, X31, 0x38
	0x0392803C MOV W1, W31
	0x03928040 MOV X2, X31
	0x03928044 STR W31, [X31 + 0x68]
	0x03928048 BL 0x3C226C4
	0x0392804C ADD X0, X31, 0x38
	0x03928050 MOV W1, W31
	0x03928054 MOV X2, X31
	0x03928058 BL 0x3C22B28
	0x0392805C MOVI V0.2S, 0x1
	0x03928060 STR D0, [X31 + 0x40]
	0x03928064 LDUR V1, [X31 + 0x58]
	0x03928068 LDR W8, [X31 + 0x68]
	0x0392806C LDUR V0, [X31 + 0x48]
	0x03928070 LDUR V2, [X31 + 0x38]
	0x03928074 ADD X0, X31, 0x0
	0x03928078 MOV X1, X31
	0x0392807C STP V0, V1, [X31 + 0x10]
	0x03928080 STR W8, [X31 + 0x30]
	0x03928084 STR V2, [X31]
	0x03928088 BL 0x3C22068
	0x0392808C MOV X25, X0
	0x03928090 MOV X0, X31
	0x03928094 BL 0x3C20834
	0x03928098 MOV X26, X0
	0x0392809C MOV X0, X24
	0x039280A0 MOV X1, X25
	0x039280A4 MOV X2, X31
	0x039280A8 BL 0x3C040F0
	0x039280AC MOV X0, X25
	0x039280B0 MOV X1, X31
	0x039280B4 BL 0x3C2085C
	0x039280B8 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+20], W1
	015 Move X22, 0xABB000
	016 Move X24, 0x828000
	017 Move X19, 0x828000
	018 Move W8, [X22+2243]
	019 Move X24, [X24+2528]
	020 Move X19, [X19+2536]
	021 Move X21, X4
	022 Move X25, X3
	023 Move X23, X2
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x827000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x828000
	033 Move X0, [X0+2536]
	034 Call 0x1C17CF4
	035 Move X0, 0x828000
	036 Move X0, [X0+2528]
	037 Call 0x1C17CF4
	038 Move X0, 0x7CF000
	039 Move X0, [X0+1968]
	040 Call 0x1C17CF4
	041 Move X0, 0x828000
	042 Move X0, [X0+2448]
	043 Call 0x1C17CF4
	044 Move X0, 0x828000
	045 Move X0, [X0+2456]
	046 Call 0x1C17CF4
	047 Move X0, 0x828000
	048 Move X0, [X0+2024]
	049 Call 0x1C17CF4
	050 Move X0, 0x828000
	051 Move X0, [X0+2544]
	052 Call 0x1C17CF4
	053 Move X0, 0x828000
	054 Move X0, [X0+2512]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+2243], W8
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X1, [X19]
	061 Move X24, X0
	062 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Edge>>..ctor, X0
	063 Move W8, 2
	064 Move [X23], X24
	065 Move [X31+28], W8
	066 Compare X20, 0
	067 JumpIfEqual {283}
	068 Move X10, 0x828000
	069 Move X8, [X20]
	070 Move X10, [X10+2448]
	071 Move X22, 0x7CF000
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, [X10]
	074 Move X22, [X22+1968]
	075 Move [X31+8], X25
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X20
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X19, 0x827000
	093 Move X19, [X19+2760]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X22]
	097 Move W22, W0
	098 Move W1, W22
	099 Move X0, X8
	100 Call 0x1C17D6C
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X31+24], W22
	103 Move [X21], X0
	104 Move X22, 0x828000
	105 Move X24, 0x828000
	106 Move X22, [X22+2024]
	107 Move X24, [X24+2544]
	108 Move W8, [X31+24]
	109 Move X25, X31
	110 Move W29, W8
	111 Move X8, [X20]
	112 Move X10, 0x828000
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X10, [X10+2456]
	115 Move X1, [X10]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X20
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X2, [X0+8]
	132 Move X0, X20
	133 Move W1, W25
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X22]
	136 Move X26, [X23]
	137 Move X27, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Add X2, X31, 28
	144 Move X0, X27
	145 Move X1, X26
	146 Call SelectionPickerRenderer.BuildEdgeMesh, X0, X1, X2
	147 Compare X27, 0
	148 JumpIfEqual {283}
	149 Move X26, X0
	150 Move X0, X27
	151 Move X1, X31
	152 Call Object.get_name, X0
	153 Move X1, [X24]
	154 Move X2, X31
	155 Call String.Concat, X0, X1
	156 Move X28, X0
	157 Move X0, X27
	158 Move X1, X31
	159 Call Component.get_transform, X0
	160 Move X8, [X19]
	161 Move X27, X0
	162 Move W9, [X8+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move X0, X31
	168 Call BuiltinMaterials.get_edgePickerMaterial
	169 Move X3, X0
	170 Move W4, 1
	171 Move X0, X28
	172 Move X1, X27
	173 Move X2, X26
	174 Move X5, X31
	175 Call InternalUtility.MeshGameObjectWithTransform, X0, X1, X2, X3, X4
	176 Move X8, [X21]
	177 Compare X8, 0
	178 JumpIfEqual {283}
	179 Move W9, [X8+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X8, X8, X25
	182 Add X25, X25, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X8+32], X0
	185 Move W8, [X31+20]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {267}
	190 Move X8, 0x7CF000
	191 Move X8, [X8+1968]
	192 Move W22, [X31+24]
	193 Move X0, [X8]
	194 Move W1, W22
	195 Call 0x1C17D6C
	196 Move X27, [X31+8]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X27], X0
	199 Move X26, 0x828000
	200 Move X26, [X26+2512]
	201 Move X21, X31
	202 Move W25, W22
	203 Move X8, [X20]
	204 Move X10, 0x828000
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X10, [X10+2456]
	207 Move X1, [X10]
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X20
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X2, [X0+8]
	224 Move X0, X20
	225 Move W1, W21
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X0, 0
	228 JumpIfEqual {283}
	229 Move X1, X31
	230 Move X24, X0
	231 Call Object.get_name, X0
	232 Move X1, [X26]
	233 Move X2, X31
	234 Call String.Concat, X0, X1
	235 Move X22, X0
	236 Move X0, X24
	237 Move X1, X31
	238 Call Component.get_transform, X0
	239 Move X23, X0
	240 Move X0, X24
	241 Call ProBuilderMesh.get_mesh, X0
	242 Move X8, [X19]
	243 Move X24, X0
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {249}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move X0, X31
	250 Call BuiltinMaterials.get_facePickerMaterial
	251 Move X3, X0
	252 Move W4, 1
	253 Move X0, X22
	254 Move X1, X23
	255 Move X2, X24
	256 Move X5, X31
	257 Call InternalUtility.MeshGameObjectWithTransform, X0, X1, X2, X3, X4
	258 Move X8, [X27]
	259 Compare X8, 0
	260 JumpIfEqual {283}
	261 Move W9, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X8, X8, X21
	264 Add X21, X21, 1
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move [X8+32], X0
	267 Move X8, [X31+8]
	268 Move [X8], X31
	269 Move X20, [X31+112]
	270 Move X19, [X31+120]
	271 Move X22, [X31+96]
	272 Move X21, [X31+104]
	273 Move X24, [X31+80]
	274 Move X23, [X31+88]
	275 Move X26, [X31+64]
	276 Move X25, [X31+72]
	277 Move X28, [X31+48]
	278 Move X27, [X31+56]
	279 Move X29, [X31+32]
	280 Move X30, [X31+40]
	281 Add X31, X31, 128
	282 Return 
	283 Call 0x1C17F20
	284 Call 0x1C17F28

Method: UnityEngine.Mesh BuildVertexMesh(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Int32>> map, ref System.UInt32 index)

Disassembly:
	0x039280D0 MOV X0, X31
	0x039280D4 MOV X1, X31
	0x039280D8 BL 0x3C4BC58
	0x039280DC MOV X0, X31
	0x039280E0 MOV X1, X31
	0x039280E4 BL 0x3C1136C
	0x039280E8 MOV X0, X24
	0x039280EC MOV X1, X23
	0x039280F0 MOV X2, X22
	0x039280F4 MOV X3, X31
	0x039280F8 BL 0x3C04CC8
	0x039280FC MOV X0, X27
	0x03928100 MOV X1, X31
	0x03928104 BL 0x3C4BC58
	0x03928108 MOV X0, X28
	0x0392810C MOV X1, X31
	0x03928110 BL 0x3C1136C
	0x03928114 MOV X0, X31
	0x03928118 BL 0x39259F4
	0x0392811C LDR X8, [X29]
	0x03928120 MOV W23, W0
	0x03928124 MOV X0, X8
	0x03928128 BL 0x1C16F10
	0x0392812C MOV W1, W19
	0x03928130 MOV W2, W20
	0x03928134 MOV W3, W23
	0x03928138 MOV W4, W31
	0x0392813C MOV W5, W31
	0x03928140 MOV X6, X31
	0x03928144 MOV X22, X0
	0x03928148 BL 0x3C1C118
	0x0392814C CBZ X22, 0x39281E4
	0x03928150 ADRP X23, 0x7CB000
	0x03928154 LDR X23, [X23 + 0x598]
	0x03928158 SCVTF S3, W20
	0x0392815C SCVTF S2, W19
	0x03928160 FMOV S0, W31
	0x03928164 FMOV S1, W31
	0x03928168 MOV X0, X22
	0x0392816C MOV W1, W31
	0x03928170 MOV W2, W31
	0x03928174 MOV X3, X31
	0x03928178 BL 0x3C1C754
	0x0392817C MOV X0, X22
	0x03928180 MOV X1, X31
	0x03928184 BL 0x3C1C540
	0x03928188 MOV X0, X26
	0x0392818C MOV X1, X31
	0x03928190 BL 0x3C2085C
	0x03928194 MOV X0, X25
	0x03928198 MOV X1, X31
	0x0392819C BL 0x3C20C50
	0x039281A0 LDR X0, [X23]
	0x039281A4 LDR W8, [X0 + 0xE0]
	0x039281A8 CBNZ W8, 0x39281B0
	0x039281AC BL 0x1C16DFC
	0x039281B0 MOV X0, X21
	0x039281B4 MOV X1, X31
	0x039281B8 BL 0x3C39564
	0x039281BC MOV X0, X22
	0x039281C0 LDP X20, X19, [X31 + 0xD0]
	0x039281C4 LDP X22, X21, [X31 + 0xC0]
	0x039281C8 LDP X24, X23, [X31 + 0xB0]
	0x039281CC LDP X26, X25, [X31 + 0xA0]
	0x039281D0 LDP X28, X27, [X31 + 0x90]
	0x039281D4 LDP X29, X30, [X31 + 0x80]
	0x039281D8 LDR V8, [X31 + 0x70]
	0x039281DC ADD X31, X31, 0xE0
	0x039281E0 RET
	0x039281E4 BL 0x1C16F20
	0x039281E8 MOV X1, X31
	0x039281EC B 0x33BDD8C
	0x039281F0 STR X30, [X31 - 0x20]!
	0x039281F4 STP X20, X19, [X31 + 0x10]
	0x039281F8 ADRP X19, 0xAB9000
	0x039281FC ADRP X20, 0x826000
	0x03928200 LDRB W8, [X19 + 0x8C9]
	0x03928204 LDR X20, [X20 + 0x9B0]
	0x03928208 TBNZ X8, 0x0, 0x3928220
	0x0392820C ADRP X0, 0x826000
	0x03928210 LDR X0, [X0 + 0x9B0]
	0x03928214 BL 0x1C16CF4
	0x03928218 MOVZ W8, 0x1
	0x0392821C STRB W8, [X19 + 0x8C9]
	0x03928220 LDR X0, [X20]
	0x03928224 BL 0x1C16F10
	0x03928228 MOV X1, X31
	0x0392822C MOV X19, X0
	0x03928230 BL 0x33BDD8C
	0x03928234 LDR X8, [X20]
	0x03928238 LDR X8, [X8 + 0xB8]
	0x0392823C STR X19, [X8]
	0x03928240 LDP X20, X19, [X31 + 0x10]
	0x03928244 LDR X30, [X31], #0x20
	0x03928248 RET
	0x0392824C MOV X1, X31
	0x03928250 B 0x33BDD8C
	0x03928254 STR X30, [X31 - 0x10]!
	0x03928258 CBZ X1, 0x3928268
	0x0392825C LDR X0, [X1 + 0x10]
	0x03928260 LDR X30, [X31], #0x10
	0x03928264 RET
	0x03928268 BL 0x1C16F20
	0x0392826C MOV X1, X31
	0x03928270 B 0x33BDD8C
	0x03928274 STP X30, X19, [X31 - 0x10]!
	0x03928278 LDR X8, [X0 + 0x18]
	0x0392827C CBZ X8, 0x39282D4
	0x03928280 LDR W9, [X8 + 0x18]
	0x03928284 CMP W9, W1
	0x03928288 B.LS 0x39282D8
	0x0392828C ADD X8, X8, W1, 0x3, SXTW
	0x03928290 LDR X8, [X8 + 0x20]
	0x03928294 CBZ X8, 0x39282D4
	0x03928298 LDR X19, [X0 + 0x10]
	0x0392829C MOV X0, X8
	0x039282A0 MOV W1, W31
	0x039282A4 BL 0x39282DC
	0x039282A8 CBZ X19, 0x39282D4
	0x039282AC LDR W8, [X19 + 0x18]
	0x039282B0 CMP W0, W8
	0x039282B4 B.CS 0x39282D8
	0x039282B8 SXTW X8, W0
	0x039282BC MOVZ W9, 0xC
	0x039282C0 MADD X8, X8, X9, X19
	0x039282C4 LDP S0, S1, [X8 + 0x20]
	0x039282C8 LDR V2, [X8 + 0x28]
	0x039282CC LDP X30, X19, [X31], #0x10
	0x039282D0 B 0x392830C
	0x039282D4 BL 0x1C16F20
	0x039282D8 BL 0x1C16F28
	0x039282DC STR X30, [X31 - 0x10]!
	0x039282E0 LDR X8, [X0 + 0x10]
	0x039282E4 CBZ X8, 0x3928304
	0x039282E8 LDR W9, [X8 + 0x18]
	0x039282EC CMP W9, W1
	0x039282F0 B.LS 0x3928308
	0x039282F4 ADD X8, X8, W1, 0x2, SXTW
	0x039282F8 LDR W0, [X8 + 0x20]
	0x039282FC LDR X30, [X31], #0x10
	0x03928300 RET
	0x03928304 BL 0x1C16F20
	0x03928308 BL 0x1C16F28
	0x0392830C MOVZ W8, 0x447A0000
	0x03928310 FMOV S3, W8
	0x03928314 FMUL S0, S0, S3
	0x03928318 MOVZ X9, 0x5
	0x0392831C FCVTZS X8, S0
	0x03928320 FCVTZU X10, S0
	0x03928324 FCMP S0, 0x0
	0x03928328 MOVK X9, 0x2
	0x0392832C FMUL S1, S1, S3
	0x03928330 CSEL X8, X8, X10, MI
	0x03928334 FMUL S2, S2, S3
	0x03928338 FCVTZS X11, S1
	0x0392833C FCVTZU X12, S1
	0x03928340 FCMP S1, 0x0
	0x00000000 INVALID
	0x03928348 FCVTZS X13, S2
	0x0392834C FCVTZU X14, S2
	0x03928350 CSEL X11, X11, X12, MI
	0x03928354 FCMP S2, 0x0
	0x03928358 SUB X12, X8, X10
	0x0392835C CSEL X13, X13, X14, MI
	0x00000000 INVALID
	0x03928364 ADD X10, X10, X12, 0x1, LSR
	0x03928368 SUB X12, X11, X14
	0x00000000 INVALID
	0x03928370 UBFM X10, X10, 0x1E, 0x3F
	0x03928374 ADD X12, X14, X12, 0x1, LSR
	0x03928378 SUB X14, X13, X9
	0x0392837C SUB W10, W10, W10, 0x1F, LSL
	0x03928380 ADD X9, X9, X14, 0x1, LSR
	0x03928384 ADD W8, W8, W10
	0x03928388 UBFM X10, X12, 0x1E, 0x3F
	0x0392838C SUB W10, W10, W10, 0x1F, LSL
	0x03928390 UBFM X9, X9, 0x1E, 0x3F
	0x03928394 ADD W10, W11, W10
	0x03928398 MOVZ W11, 0x1D
	0x0392839C SUB W9, W9, W9, 0x1F, LSL
	0x039283A0 ADD W9, W13, W9
	0x039283A4 MADD W8, W8, W11, W10
	0x039283A8 MADD W8, W8, W11, W9
	0x039283AC MOVZ W9, 0xC47
	0x039283B0 MOVK W9, 0xA0000
	0x039283B4 ADD W0, W8, W9
	0x039283B8 RET
	0x039283BC LDR X0, [X0 + 0x20]
	0x039283C0 RET
	0x039283C4 STR X1, [X0 + 0x20]
	0x039283C8 RET
	0x039283CC LDR X0, [X0 + 0x28]
	0x039283D0 RET
	0x039283D4 STR X1, [X0 + 0x28]
	0x039283D8 RET
	0x039283DC LDR X0, [X0 + 0x30]
	0x039283E0 RET
	0x039283E4 STR X1, [X0 + 0x30]
	0x039283E8 RET
	0x039283EC STP X30, X27, [X31 - 0x50]!
	0x039283F0 STP X26, X25, [X31 + 0x10]
	0x039283F4 STP X24, X23, [X31 + 0x20]
	0x039283F8 STP X22, X21, [X31 + 0x30]
	0x039283FC STP X20, X19, [X31 + 0x40]
	0x03928400 ADRP X27, 0xAB9000
	0x03928404 ADRP X26, 0x7CC000
	0x03928408 ADRP X25, 0x7CF000
	0x0392840C ADRP X24, 0x825000
	0x03928410 ADRP X23, 0x825000
	0x03928414 ADRP X22, 0x825000
	0x03928418 ADRP X21, 0x826000
	0x0392841C LDR X26, [X26 + 0xE30]
	0x03928420 LDRB W8, [X27 + 0x8CA]
	0x03928424 LDR X25, [X25 + 0xB70]
	0x03928428 LDR X24, [X24 + 0xD78]
	0x0392842C LDR X23, [X23 + 0xD70]
	0x03928430 LDR X22, [X22 + 0xDF0]
	0x03928434 LDR X21, [X21 + 0xA38]
	0x03928438 MOV X20, X1
	0x0392843C MOV X19, X0
	0x03928440 TBNZ X8, 0x0, 0x3928494
	0x03928444 ADRP X0, 0x7CF000
	0x03928448 LDR X0, [X0 + 0xB70]
	0x0392844C BL 0x1C16CF4
	0x03928450 ADRP X0, 0x826000
	0x03928454 LDR X0, [X0 + 0xA38]
	0x03928458 BL 0x1C16CF4
	0x0392845C ADRP X0, 0x825000
	0x03928460 LDR X0, [X0 + 0xD70]
	0x03928464 BL 0x1C16CF4
	0x03928468 ADRP X0, 0x7CC000
	0x0392846C LDR X0, [X0 + 0xE30]
	0x03928470 BL 0x1C16CF4
	0x03928474 ADRP X0, 0x825000
	0x03928478 LDR X0, [X0 + 0xD78]
	0x0392847C BL 0x1C16CF4
	0x03928480 ADRP X0, 0x825000
	0x03928484 LDR X0, [X0 + 0xDF0]
	0x03928488 BL 0x1C16CF4
	0x0392848C MOVZ W8, 0x1
	0x03928490 STRB W8, [X27 + 0x8CA]
	0x03928494 MOV X0, X19
	0x03928498 MOV X1, X31
	0x0392849C BL 0x33BDD8C
	0x039284A0 STR X20, [X19 + 0x10]
	0x039284A4 LDR X0, [X26]
	0x039284A8 BL 0x1C16F10
	0x039284AC LDR X1, [X25]
	0x039284B0 MOV X20, X0
	0x039284B4 BL 0x2FDBF14
	0x039284B8 STR X20, [X19 + 0x20]
	0x039284BC LDR X0, [X24]
	0x039284C0 BL 0x1C16F10
	0x039284C4 LDR X1, [X23]
	0x039284C8 MOV X20, X0
	0x039284CC BL 0x2FB9738
	0x039284D0 STR X20, [X19 + 0x28]
	0x039284D4 LDR X0, [X22]
	0x039284D8 BL 0x1C16F10
	0x039284DC LDR X1, [X21]
	0x039284E0 MOV X20, X0
	0x039284E4 BL 0x301B7C4
	0x039284E8 STR X20, [X19 + 0x30]
	0x039284EC LDP X20, X19, [X31 + 0x40]
	0x039284F0 LDP X22, X21, [X31 + 0x30]
	0x039284F4 LDP X24, X23, [X31 + 0x20]
	0x039284F8 LDP X26, X25, [X31 + 0x10]
	0x039284FC LDP X30, X27, [X31], #0x50
	0x03928500 RET
	0x03928504 STR X30, [X31 - 0x40]!
	0x03928508 STP X24, X23, [X31 + 0x10]
	0x0392850C STP X22, X21, [X31 + 0x20]
	0x03928510 STP X20, X19, [X31 + 0x30]
	0x03928514 ADRP X23, 0xAB9000
	0x03928518 ADRP X24, 0x7CC000
	0x0392851C ADRP X22, 0x7CF000
	0x03928520 LDRB W8, [X23 + 0x8CB]
	0x03928524 LDR X24, [X24 + 0xE30]
	0x03928528 LDR X22, [X22 + 0xB70]
	0x0392852C MOV W21, W2
	0x03928530 MOV X19, X1
	0x03928534 MOV X20, X0
	0x03928538 TBNZ X8, 0x0, 0x3928568
	0x0392853C ADRP X0, 0x7CC000
	0x03928540 LDR X0, [X0 + 0xE10]
	0x03928544 BL 0x1C16CF4
	0x03928548 ADRP X0, 0x7CF000
	0x0392854C LDR X0, [X0 + 0xB70]
	0x03928550 BL 0x1C16CF4
	0x03928554 ADRP X0, 0x7CC000
	0x03928558 LDR X0, [X0 + 0xE30]
	0x0392855C BL 0x1C16CF4
	0x03928560 MOVZ W8, 0x1
	0x03928564 STRB W8, [X23 + 0x8CB]
	0x03928568 LDR X0, [X24]
	0x0392856C BL 0x1C16F10
	0x03928570 LDR X1, [X22]
	0x03928574 MOV X22, X0
	0x03928578 BL 0x2FDBF14
	0x0392857C CBZ X22, 0x39285FC
	0x03928580 ADRP X9, 0x7CC000
	0x03928584 LDR X9, [X9 + 0xE10]
	0x03928588 LDR W10, [X22 + 0x1C]
	0x0392858C LDR X8, [X22 + 0x10]
	0x03928590 LDR X9, [X9]
	0x03928594 ADD W10, W10, 0x1
	0x03928598 STR W10, [X22 + 0x1C]
	0x0392859C CBZ X8, 0x39285FC
	0x039285A0 LDRSW X10, [X22 + 0x18]
	0x039285A4 LDR W11, [X8 + 0x18]
	0x039285A8 CMP W10, W11
	0x039285AC B.CS 0x39285C4
	0x039285B0 ADD W9, W10, 0x1
	0x039285B4 ADD X8, X8, X10, 0x2, LSL
	0x039285B8 STR W9, [X22 + 0x18]
	0x039285BC STR W21, [X8 + 0x20]
	0x039285C0 B 0x39285DC
	0x039285C4 LDR X8, [X9 + 0x20]
	0x039285C8 MOV X0, X22
	0x039285CC MOV W1, W21
	0x039285D0 LDR X8, [X8 + 0xC0]
	0x039285D4 LDR X2, [X8 + 0x70]
	0x039285D8 BL 0x2FDC70C
	0x039285DC MOV X0, X20
	0x039285E0 MOV X1, X19
	0x039285E4 MOV X2, X22
	0x039285E8 LDP X20, X19, [X31 + 0x30]
	0x039285EC LDP X22, X21, [X31 + 0x20]
	0x039285F0 LDP X24, X23, [X31 + 0x10]
	0x039285F4 LDR X30, [X31], #0x40
	0x039285F8 B 0x3928600
	0x039285FC BL 0x1C16F20
	0x03928600 STP X30, X25, [X31 - 0x40]!
	0x03928604 STP X24, X23, [X31 + 0x10]
	0x03928608 STP X22, X21, [X31 + 0x20]
	0x0392860C STP X20, X19, [X31 + 0x30]
	0x03928610 ADRP X22, 0xAB9000
	0x03928614 ADRP X23, 0x7CB000
	0x03928618 LDRB W8, [X22 + 0x8CE]
	0x0392861C LDR X23, [X23 + 0x598]
	0x03928620 MOV X20, X2
	0x03928624 MOV X21, X1
	0x03928628 MOV X19, X0
	0x0392862C TBNZ X8, 0x0, 0x3928674
	0x03928630 ADRP X0, 0x826000
	0x03928634 LDR X0, [X0 + 0xA38]
	0x03928638 BL 0x1C16CF4
	0x0392863C ADRP X0, 0x825000
	0x03928640 LDR X0, [X0 + 0xD70]
	0x03928644 BL 0x1C16CF4
	0x03928648 ADRP X0, 0x825000
	0x0392864C LDR X0, [X0 + 0xD78]
	0x03928650 BL 0x1C16CF4
	0x03928654 ADRP X0, 0x825000
	0x03928658 LDR X0, [X0 + 0xDF0]
	0x0392865C BL 0x1C16CF4
	0x03928660 ADRP X0, 0x7CB000
	0x03928664 LDR X0, [X0 + 0x598]
	0x03928668 BL 0x1C16CF4
	0x0392866C MOVZ W8, 0x1
	0x03928670 STRB W8, [X22 + 0x8CE]
	0x03928674 LDR X0, [X23]
	0x03928678 LDR W8, [X0 + 0xE0]
	0x0392867C CBNZ W8, 0x3928684
	0x03928680 BL 0x1C16DFC
	0x03928684 MOV X0, X21
	0x03928688 MOV X1, X31
	0x0392868C MOV X2, X31
	0x03928690 BL 0x3C354F8
	0x03928694 MOV X1, X31
	0x03928698 TBZ X0, 0x0, 0x39286B0
	0x0392869C CBZ X21, 0x3928720
	0x039286A0 MOV X0, X21
	0x039286A4 MOV X1, X31
	0x039286A8 BL 0x3C32ECC
	0x039286AC MOV X1, X0
	0x039286B0 ADRP X22, 0x825000
	0x039286B4 ADRP X23, 0x825000
	0x039286B8 ADRP X24, 0x825000
	0x039286BC ADRP X25, 0x826000
	0x039286C0 LDR X22, [X22 + 0xD78]
	0x039286C4 LDR X23, [X23 + 0xD70]
	0x039286C8 LDR X24, [X24 + 0xDF0]
	0x039286CC LDR X25, [X25 + 0xA38]
	0x039286D0 MOV X0, X19
	0x039286D4 BL 0x39283EC
	0x039286D8 STP X21, X20, [X19 + 0x18]
	0x039286DC LDR X0, [X22]
	0x039286E0 BL 0x1C16F10
	0x039286E4 LDR X1, [X23]
	0x039286E8 MOV X20, X0
	0x039286EC BL 0x2FB9738
	0x039286F0 STR X20, [X19 + 0x28]
	0x039286F4 LDR X0, [X24]
	0x039286F8 BL 0x1C16F10
	0x039286FC LDR X1, [X25]
	0x03928700 MOV X20, X0
	0x03928704 BL 0x301B7C4
	0x03928708 STR X20, [X19 + 0x30]
	0x0392870C LDP X20, X19, [X31 + 0x30]
	0x03928710 LDP X22, X21, [X31 + 0x20]
	0x03928714 LDP X24, X23, [X31 + 0x10]
	0x03928718 LDP X30, X25, [X31], #0x40
	0x0392871C RET
	0x03928720 BL 0x1C16F20
	0x03928724 STR X30, [X31 - 0x40]!
	0x03928728 STP X24, X23, [X31 + 0x10]
	0x0392872C STP X22, X21, [X31 + 0x20]
	0x03928730 STP X20, X19, [X31 + 0x30]
	0x03928734 ADRP X23, 0xAB9000
	0x03928738 ADRP X24, 0x825000
	0x0392873C ADRP X22, 0x825000
	0x03928740 LDRB W8, [X23 + 0x8CC]
	0x03928744 LDR X24, [X24 + 0xD78]
	0x03928748 LDR X22, [X22 + 0xD70]
	0x0392874C MOV X21, X2
	0x03928750 MOV X19, X1
	0x03928754 MOV X20, X0
	0x03928758 TBNZ X8, 0x0, 0x3928788
	0x0392875C ADRP X0, 0x825000
	0x03928760 LDR X0, [X0 + 0xD68]
	0x03928764 BL 0x1C16CF4
	0x03928768 ADRP X0, 0x825000
	0x0392876C LDR X0, [X0 + 0xD70]
	0x03928770 BL 0x1C16CF4
	0x03928774 ADRP X0, 0x825000
	0x03928778 LDR X0, [X0 + 0xD78]
	0x0392877C BL 0x1C16CF4
	0x03928780 MOVZ W8, 0x1
	0x03928784 STRB W8, [X23 + 0x8CC]
	0x03928788 LDR X0, [X24]
	0x0392878C BL 0x1C16F10
	0x03928790 LDR X1, [X22]
	0x03928794 MOV X22, X0
	0x03928798 BL 0x2FB9738
	0x0392879C CBZ X22, 0x392881C
	0x039287A0 ADRP X9, 0x825000
	0x039287A4 LDR X9, [X9 + 0xD68]
	0x039287A8 LDR W10, [X22 + 0x1C]
	0x039287AC LDR X8, [X22 + 0x10]
	0x039287B0 LDR X9, [X9]
	0x039287B4 ADD W10, W10, 0x1
	0x039287B8 STR W10, [X22 + 0x1C]
	0x039287BC CBZ X8, 0x392881C
	0x039287C0 LDRSW X10, [X22 + 0x18]
	0x039287C4 LDR W11, [X8 + 0x18]
	0x039287C8 CMP W10, W11
	0x039287CC B.CS 0x39287E4
	0x039287D0 ADD W9, W10, 0x1
	0x039287D4 ADD X8, X8, X10, 0x3, LSL
	0x039287D8 STR W9, [X22 + 0x18]
	0x039287DC STR X21, [X8 + 0x20]
	0x039287E0 B 0x39287FC
	0x039287E4 LDR X8, [X9 + 0x20]
	0x039287E8 MOV X0, X22
	0x039287EC MOV X1, X21
	0x039287F0 LDR X8, [X8 + 0xC0]
	0x039287F4 LDR X2, [X8 + 0x70]
	0x039287F8 BL 0x2FB9F30
	0x039287FC MOV X0, X20
	0x03928800 MOV X1, X19
	0x03928804 MOV X2, X22
	0x03928808 LDP X20, X19, [X31 + 0x30]
	0x0392880C LDP X22, X21, [X31 + 0x20]
	0x03928810 LDP X24, X23, [X31 + 0x10]
	0x03928814 LDR X30, [X31], #0x40
	0x03928818 B 0x3928820
	0x0392881C BL 0x1C16F20
	0x03928820 STP X30, X25, [X31 - 0x40]!
	0x03928824 STP X24, X23, [X31 + 0x10]
	0x03928828 STP X22, X21, [X31 + 0x20]
	0x0392882C STP X20, X19, [X31 + 0x30]
	0x03928830 ADRP X22, 0xAB9000
	0x03928834 ADRP X23, 0x7CB000
	0x03928838 LDRB W8, [X22 + 0x8CF]
	0x0392883C LDR X23, [X23 + 0x598]
	0x03928840 MOV X20, X2
	0x03928844 MOV X21, X1
	0x03928848 MOV X19, X0
	0x0392884C TBNZ X8, 0x0, 0x3928894
	0x03928850 ADRP X0, 0x7CF000
	0x03928854 LDR X0, [X0 + 0xB70]
	0x03928858 BL 0x1C16CF4
	0x0392885C ADRP X0, 0x826000
	0x03928860 LDR X0, [X0 + 0xA38]
	0x03928864 BL 0x1C16CF4
	0x03928868 ADRP X0, 0x7CC000
	0x0392886C LDR X0, [X0 + 0xE30]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+144], D11
	003 Move [X31+152], D10
	004 Move [X31+160], D9
	005 Move [X31+168], D8
	006 Move [X31+176], X29
	007 Move [X31+184], X30
	008 Move [X31+192], X28
	009 Move [X31+200], X27
	010 Move [X31+208], X26
	011 Move [X31+216], X25
	012 Move [X31+224], X24
	013 Move [X31+232], X23
	014 Move [X31+240], X22
	015 Move [X31+248], X21
	016 Move [X31+256], X20
	017 Move [X31+264], X19
	018 Move X19, 0xABA000
	019 Move W8, [X19+2244]
	020 Move X26, X0
	021 Move [X31+104], X2
	022 Move [X31+64], X1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x7D1000
	028 Move X0, [X0+320]
	029 Call 0x1C17CF4
	030 Move X0, 0x827000
	031 Move X0, [X0+2552]
	032 Call 0x1C17CF4
	033 Move X0, 0x7CD000
	034 Move X0, [X0+3672]
	035 Call 0x1C17CF4
	036 Move X0, 0x7CC000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D3000
	040 Move X0, [X0+1792]
	041 Call 0x1C17CF4
	042 Move X0, 0x827000
	043 Move X0, [X0+2024]
	044 Call 0x1C17CF4
	045 Move X0, 0x827000
	046 Move X0, [X0+2560]
	047 Call 0x1C17CF4
	048 Move X0, 0x826000
	049 Move X0, [X0+2696]
	050 Call 0x1C17CF4
	051 Move X0, 0x7CE000
	052 Move X0, [X0+2480]
	053 Call 0x1C17CF4
	054 Move X0, 0x827000
	055 Move X0, [X0+2568]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+2244], W8
	059 Compare X26, 0
	060 JumpIfEqual {530}
	061 Move X22, [X26+48]
	062 Compare X22, 0
	063 JumpIfEqual {530}
	064 Move X8, 0x7CC000
	065 Move X8, [X8+1448]
	066 Move X23, 0x7CE000
	067 Move X21, 0x826000
	068 Move X20, 0x7D1000
	069 Move X0, [X8]
	070 Move X19, 0x7CD000
	071 Move W8, [X0+224]
	072 Move X23, [X23+2480]
	073 Move X21, [X21+2696]
	074 Move X20, [X20+320]
	075 Move X19, [X19+3672]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W0, [X22+24]
	080 Move W1, 0x3FFE
	081 Move X2, X31
	082 Call Math.Min, X0, X1
	083 Move X8, [X23]
	084 Move W24, W0
	085 ShiftRight W24, 30
	086 And W24, W24, 0x1FFFFFFF
	087 Move W22, W0
	088 Move W1, W24
	089 Move X0, X8
	090 Call 0x1C17D6C
	091 Move X8, [X21]
	092 Move X23, X0
	093 Move W1, W24
	094 Move X0, X8
	095 Call 0x1C17D6C
	096 Move X8, [X21]
	097 Move X21, X0
	098 Move W1, W24
	099 Move X0, X8
	100 Call 0x1C17D6C
	101 Move X8, [X20]
	102 Move X25, X0
	103 Move W1, W24
	104 Move X0, X8
	105 Call 0x1C17D6C
	106 Move X20, X0
	107 Move X0, [X19]
	108 Add W8, W22, W22
	109 Move W1, W8
	110 ShiftRight W1, 31
	111 And W1, W1, 0x3FFFFFFF
	112 Move [X31+100], W22
	113 Call 0x1C17D6C
	114 Move X8, 0xAB1000
	115 Move W8, [X8+1926]
	116 Move X19, X0
	117 Compare W8, 0
	118 JumpIfNotEqual {125}
	119 Move X0, 0x7CC000
	120 Move X0, [X0+1440]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move X9, 0xAB1000
	124 Move [X9+1926], W8
	125 Move X0, 0x7CC000
	126 Move X0, [X0+1440]
	127 Move X22, 0xAB1000
	128 Move W9, [X22+2928]
	129 Move [X31+80], X19
	130 Move [X31+88], X21
	131 Move X8, [X0]
	132 Move [X31+72], X20
	133 Move X8, [X8+184]
	134 Move V4, [X8+24]
	135 Compare W9, 0
	136 JumpIfNotEqual {146}
	137 Move [X31+7], V4
	138 Call 0x1C17CF4
	139 Move X8, 0x7CC000
	140 Move V4, [X31+7]
	141 Move X8, [X8+1440]
	142 Move W9, 1
	143 Move [X22+2928], W9
	144 Move X8, [X8]
	145 Move X8, [X8+184]
	146 Move W9, [X31+100]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	150 Move S2, V4.S[1]
	151 Move W27, W31
	152 Subtract V8, V1, V0
	153 Move S1, V0.S[1]
	154 Move W28, W31
	155 Move W29, W31
	156 Move W24, 12
	157 Subtract V5, V0, V4
	158 Subtract V3, V4, V0
	159 Add V0, V4, V0
	160 Subtract S9, S1, S2
	161 Subtract S10, S2, S1
	162 Add S11, S2, S1
	163 Move [X31+32], V3
	164 Move [X31+40], V5
	165 Move [X31+1], V0
	166 Move X8, [X26+48]
	167 Compare X8, 0
	168 JumpIfEqual {530}
	169 Move W9, [X8+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X8, W29
	172 Move X0, [X8+32]
	173 Compare X0, 0
	174 JumpIfEqual {530}
	175 Move X20, [X26+88]
	176 Move W1, W31
	177 Move X2, X31
	178 Call SharedVertex.get_Item, X0, X1
	179 Compare X20, 0
	180 JumpIfEqual {530}
	181 Move W8, [X20+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X10, 0x7CC000
	184 Move X10, [X10+1440]
	185 Compare X23, 0
	186 JumpIfEqual {530}
	187 Move W8, [X23+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, W0
	190 NotImplemented "Instruction MADD not yet implemented."
	191 Move S2, [X8+32]
	192 Move S1, [X8+36]
	193 Move V0, [X8+40]
	194 Move X19, W28
	195 NotImplemented "Instruction MADD not yet implemented."
	196 Move [X8+32], S2
	197 Move [X8+40], S1
	198 Move [X8+40], S0
	199 Move W9, [X23+24]
	200 Add W8, W28, 1
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X21, W8
	203 NotImplemented "Instruction MADD not yet implemented."
	204 Move [X8+32], S2
	205 Move [X8+40], S1
	206 Move [X8+40], S0
	207 Move W9, [X23+24]
	208 Add W8, W21, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add W9, W28, 2
	211 Move X20, W9
	212 NotImplemented "Instruction MADD not yet implemented."
	213 Move [X9+32], S2
	214 Move [X9+40], S1
	215 Move [X9+40], S0
	216 Move W9, [X23+24]
	217 Add W22, W8, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W8, W28, 3
	220 Move X8, W8
	221 Move [X31+112], X8
	222 NotImplemented "Instruction NOP not yet implemented."
	223 NotImplemented "Instruction MADD not yet implemented."
	224 Move [X8+32], S2
	225 Move [X8+40], S1
	226 Move [X8+40], S0
	227 Move X8, 0xAB1000
	228 Move W8, [X8+1923]
	229 Compare W8, 0
	230 JumpIfNotEqual {238}
	231 Move X0, X10
	232 Call 0x1C17CF4
	233 Move X10, 0x7CC000
	234 Move X10, [X10+1440]
	235 Move X8, 0xAB1000
	236 Move W9, 1
	237 Move [X8+1923], W9
	238 Move X28, [X31+80]
	239 Move X24, [X31+88]
	240 Compare X24, 0
	241 JumpIfEqual {530}
	242 Move W8, [X24+24]
	243 Subtract W22, W22, 3
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X8, [X10]
	246 Move X8, [X8+184]
	247 Move V0, [X8]
	248 Add X8, X24, X19
	249 Move [X8+32], D0
	250 Move X8, 0xAB1000
	251 Move W8, [X8+2928]
	252 Compare W8, 0
	253 JumpIfNotEqual {261}
	254 Move X0, X10
	255 Call 0x1C17CF4
	256 Move X10, 0x7CC000
	257 Move X10, [X10+1440]
	258 Move X8, 0xAB1000
	259 Move W9, 1
	260 Move [X8+2928], W9
	261 Move W8, [X24+24]
	262 Add W22, W22, 1
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X8, [X10]
	265 Move X8, [X8+184]
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Add X8, X24, X21
	268 Move [X8+32], D0
	269 Move X8, 0xAB1000
	270 Move W8, [X8+1926]
	271 Compare W8, 0
	272 JumpIfNotEqual {280}
	273 Move X0, X10
	274 Call 0x1C17CF4
	275 Move X10, 0x7CC000
	276 Move X10, [X10+1440]
	277 Move X8, 0xAB1000
	278 Move W9, 1
	279 Move [X8+1926], W9
	280 Move W8, [X24+24]
	281 Add W22, W22, 1
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, [X10]
	284 Move X8, [X8+184]
	285 Move V0, [X8+24]
	286 Add X8, X24, X20
	287 Move [X8+32], D0
	288 Move X8, 0xAB1000
	289 Move W8, [X8+2139]
	290 Compare W8, 0
	291 JumpIfNotEqual {299}
	292 Move X0, X10
	293 Call 0x1C17CF4
	294 Move X10, 0x7CC000
	295 Move X10, [X10+1440]
	296 Move W8, 1
	297 Move X9, 0xAB1000
	298 Move [X9+2139], W8
	299 Move W9, [X24+24]
	300 Add W8, W22, 1
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X9, [X10]
	303 Move X11, [X31+112]
	304 Move X9, [X9+184]
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 Add X9, X24, X11
	307 Move [X9+32], D0
	308 Compare X25, 0
	309 JumpIfEqual {530}
	310 Move W9, [X25+24]
	311 Subtract W8, W8, 3
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add X9, X25, X19
	314 Move [X9+32], D8
	315 Move W9, [X25+24]
	316 Add W8, W8, 1
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move V0, [X31+3]
	319 Add X9, X25, X21
	320 Add W8, W8, 1
	321 Move [X9+32], S0
	322 Move [X9+40], S9
	323 Move W9, [X25+24]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move V0, [X31+2]
	326 Add X9, X25, X20
	327 Move [X9+32], S0
	328 Move [X9+40], S10
	329 Move W10, [X25+24]
	330 Add W9, W8, 1
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move V0, [X31+1]
	333 Add X8, X25, X11
	334 Move [X8+32], S0
	335 Move [X8+40], S11
	336 Compare X28, 0
	337 JumpIfEqual {530}
	338 Move W8, [X28+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add W10, W27, 1
	341 Add X11, X28, W27
	342 Subtract W9, W9, 3
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move [X11+32], W9
	345 Add X11, X28, W10
	346 Add W10, W10, 1
	347 Add W9, W9, 1
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X11+32], W9
	350 Add W11, W27, 2
	351 Add W10, W10, 1
	352 Add W9, W9, 1
	353 Add X11, X28, W11
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X11+32], W9
	356 Add W11, W27, 3
	357 Add W10, W10, 1
	358 Subtract W9, W9, 1
	359 Add X11, X28, W11
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move [X11+32], W9
	362 Move X24, X23
	363 Move X23, X26
	364 Add W11, W27, 4
	365 Add W26, W10, 1
	366 Add W9, W9, 2
	367 Add X10, X28, W11
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move [X10+32], W9
	370 Add W8, W27, 5
	371 Add X8, X28, W8
	372 Subtract W22, W9, 1
	373 Move [X8+32], W22
	374 Move X8, 0x827000
	375 Move X8, [X8+2024]
	376 Move X9, [X31+104]
	377 Move X0, [X8]
	378 Move W28, [X9]
	379 Move W8, [X0+224]
	380 Move W27, W28
	381 Compare W8, 0
	382 JumpIfNotEqual {386}
	383 Call 0x1C17DFC
	384 Move X9, [X31+104]
	385 Move W27, [X9]
	386 Add W8, W27, 1
	387 Move [X9], W8
	388 Move X8, 0x827000
	389 Move X8, [X8+2560]
	390 Add X0, X31, 128
	391 Move X1, X23
	392 Move W2, W29
	393 Move X3, [X8]
	394 Move [X31+128], X31
	395 Move [X31+136], X31
	396 Call SimpleTuple`2<Object, Int32>..ctor, X0, X1, X2
	397 Move X0, [X31+64]
	398 Compare X0, 0
	399 JumpIfEqual {530}
	400 Move X8, 0x827000
	401 Move X2, [X31+128]
	402 Move X3, [X31+136]
	403 Move X8, [X8+2552]
	404 Move W1, W27
	405 Move X4, [X8]
	406 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Int32>>.Add, X0, X1, X2
	407 Move X13, [X31+72]
	408 Compare X13, 0
	409 JumpIfEqual {530}
	410 Move W9, [X13+24]
	411 Subtract W8, W22, 2
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move W9, W28
	414 ShiftRight W9, 16
	415 And W9, W9, 0x7FFF
	416 And X10, X28, 0xFFFF
	417 Or X9, X9, X10
	418 Or X9, X9, 0xFFFFFFFF
	419 Move W11, W28
	420 ShiftRight W11, 16
	421 And W11, W11, 0x7FFFFF
	422 Move W12, 0x437F0000
	423 Move W10, W9
	424 ShiftRight W10, 8
	425 And W10, W10, 0x7FFF
	426 Move W9, W9
	427 ShiftRight W9, 16
	428 And W9, W9, 0x7FFFFF
	429 Move S2, W12
	430 NotImplemented "Instruction UCVTF not yet implemented."
	431 NotImplemented "Instruction UCVTF not yet implemented."
	432 NotImplemented "Instruction UCVTF not yet implemented."
	433 Add X12, X13, X19
	434 NotImplemented "Instruction FDIV not yet implemented."
	435 NotImplemented "Instruction FDIV not yet implemented."
	436 NotImplemented "Instruction FDIV not yet implemented."
	437 Move W10, 0x3F800000
	438 Move [X12+32], S0
	439 Move [X12+40], S1
	440 Move [X12+40], S2
	441 Move [X12+44], W10
	442 Move W9, [X13+24]
	443 Move X11, [X31+112]
	444 Add W8, W8, 1
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Add X9, X13, X21
	447 Move [X9+32], S0
	448 Move [X9+40], S1
	449 Move [X9+40], S2
	450 Move [X9+44], W10
	451 Move W9, [X13+24]
	452 Add W8, W8, 1
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Add X9, X13, X20
	455 Move [X9+32], S0
	456 Move [X9+40], S1
	457 Move [X9+40], S2
	458 Move [X9+44], W10
	459 Move W9, [X13+24]
	460 Add W8, W8, 1
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Add W28, W8, 1
	463 Move W8, [X31+100]
	464 Add W29, W29, 1
	465 Add X9, X13, X11
	466 Add W27, W26, 1
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move X26, X23
	469 Move X23, X24
	470 Move W24, 12
	471 Move [X9+32], S0
	472 Move [X9+40], S1
	473 Move [X9+40], S2
	474 Move [X9+44], W10
	475 Move X8, 0x7D3000
	476 Move X8, [X8+1792]
	477 Move X0, [X8]
	478 Call 0x1C17F10
	479 Move X1, X31
	480 Move X19, X0
	481 Call Mesh..ctor, X0
	482 Compare X19, 0
	483 JumpIfEqual {530}
	484 Move X8, 0x827000
	485 Move X8, [X8+2568]
	486 Move X0, X19
	487 Move X2, X31
	488 Move X1, [X8]
	489 Call Object.set_name, X0, X1
	490 Move X0, X19
	491 Move X1, X23
	492 Move X2, X31
	493 Call Mesh.set_vertices, X0, X1
	494 Move X1, [X31+88]
	495 Move X0, X19
	496 Move X2, X31
	497 Call Mesh.set_uv, X0, X1
	498 Move X0, X19
	499 Move X1, X25
	500 Move X2, X31
	501 Call Mesh.set_uv2, X0, X1
	502 Move X1, [X31+72]
	503 Move X0, X19
	504 Move X2, X31
	505 Call Mesh.set_colors, X0, X1
	506 Move X1, [X31+80]
	507 Move X0, X19
	508 Move X2, X31
	509 Call Mesh.set_triangles, X0, X1
	510 Move X0, X19
	511 Move X20, [X31+256]
	512 Move X19, [X31+264]
	513 Move X22, [X31+240]
	514 Move X21, [X31+248]
	515 Move X24, [X31+224]
	516 Move X23, [X31+232]
	517 Move X26, [X31+208]
	518 Move X25, [X31+216]
	519 Move X28, [X31+192]
	520 Move X27, [X31+200]
	521 Move X29, [X31+176]
	522 Move X30, [X31+184]
	523 Move D9, [X31+160]
	524 Move D8, [X31+168]
	525 Move D11, [X31+144]
	526 Move D10, [X31+152]
	527 Add X31, X31, 272
	528 Return X0
	529 Call 0x1C17F28
	530 Call 0x1C17F20

Method: UnityEngine.Mesh BuildEdgeMesh(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.ProBuilderMesh, UnityEngine.ProBuilder.Edge>> map, ref System.UInt32 index)

Disassembly:
	0x03928870 BL 0x1C16CF4
	0x03928874 ADRP X0, 0x825000
	0x03928878 LDR X0, [X0 + 0xDF0]
	0x0392887C BL 0x1C16CF4
	0x03928880 ADRP X0, 0x7CB000
	0x03928884 LDR X0, [X0 + 0x598]
	0x03928888 BL 0x1C16CF4
	0x0392888C MOVZ W8, 0x1
	0x03928890 STRB W8, [X22 + 0x8CF]
	0x03928894 LDR X0, [X23]
	0x03928898 LDR W8, [X0 + 0xE0]
	0x0392889C CBNZ W8, 0x39288A4
	0x039288A0 BL 0x1C16DFC
	0x039288A4 MOV X0, X21
	0x039288A8 MOV X1, X31
	0x039288AC MOV X2, X31
	0x039288B0 BL 0x3C354F8
	0x039288B4 MOV X1, X31
	0x039288B8 TBZ X0, 0x0, 0x39288D0
	0x039288BC CBZ X21, 0x3928940
	0x039288C0 MOV X0, X21
	0x039288C4 MOV X1, X31
	0x039288C8 BL 0x3C32ECC
	0x039288CC MOV X1, X0
	0x039288D0 ADRP X22, 0x7CC000
	0x039288D4 ADRP X23, 0x7CF000
	0x039288D8 ADRP X24, 0x825000
	0x039288DC ADRP X25, 0x826000
	0x039288E0 LDR X22, [X22 + 0xE30]
	0x039288E4 LDR X23, [X23 + 0xB70]
	0x039288E8 LDR X24, [X24 + 0xDF0]
	0x039288EC LDR X25, [X25 + 0xA38]
	0x039288F0 MOV X0, X19
	0x039288F4 BL 0x39283EC
	0x039288F8 STR X21, [X19 + 0x18]
	0x039288FC LDR X0, [X22]
	0x03928900 BL 0x1C16F10
	0x03928904 LDR X1, [X23]
	0x03928908 MOV X21, X0
	0x0392890C BL 0x2FDBF14
	0x03928910 STP X21, X20, [X19 + 0x20]
	0x03928914 LDR X0, [X24]
	0x03928918 BL 0x1C16F10
	0x0392891C LDR X1, [X25]
	0x03928920 MOV X20, X0
	0x03928924 BL 0x301B7C4
	0x03928928 STR X20, [X19 + 0x30]
	0x0392892C LDP X20, X19, [X31 + 0x30]
	0x03928930 LDP X22, X21, [X31 + 0x20]
	0x03928934 LDP X24, X23, [X31 + 0x10]
	0x03928938 LDP X30, X25, [X31], #0x40
	0x0392893C RET
	0x03928940 BL 0x1C16F20
	0x03928944 STR X30, [X31 - 0x40]!
	0x03928948 STP X24, X23, [X31 + 0x10]
	0x0392894C STP X22, X21, [X31 + 0x20]
	0x03928950 STP X20, X19, [X31 + 0x30]
	0x03928954 ADRP X23, 0xAB9000
	0x03928958 ADRP X24, 0x825000
	0x0392895C ADRP X22, 0x826000
	0x03928960 LDRB W8, [X23 + 0x8CD]
	0x03928964 LDR X24, [X24 + 0xDF0]
	0x03928968 LDR X22, [X22 + 0xA38]
	0x0392896C MOV X21, X2
	0x03928970 MOV X19, X1
	0x03928974 MOV X20, X0
	0x03928978 TBNZ X8, 0x0, 0x39289A8
	0x0392897C ADRP X0, 0x825000
	0x03928980 LDR X0, [X0 + 0xE10]
	0x03928984 BL 0x1C16CF4
	0x03928988 ADRP X0, 0x826000
	0x0392898C LDR X0, [X0 + 0xA38]
	0x03928990 BL 0x1C16CF4
	0x03928994 ADRP X0, 0x825000
	0x03928998 LDR X0, [X0 + 0xDF0]
	0x0392899C BL 0x1C16CF4
	0x039289A0 MOVZ W8, 0x1
	0x039289A4 STRB W8, [X23 + 0x8CD]
	0x039289A8 LDR X0, [X24]
	0x039289AC BL 0x1C16F10
	0x039289B0 LDR X1, [X22]
	0x039289B4 MOV X22, X0
	0x039289B8 BL 0x301B7C4
	0x039289BC CBZ X22, 0x3928A3C
	0x039289C0 ADRP X9, 0x825000
	0x039289C4 LDR X9, [X9 + 0xE10]
	0x039289C8 LDR W10, [X22 + 0x1C]
	0x039289CC LDR X8, [X22 + 0x10]
	0x039289D0 LDR X9, [X9]
	0x039289D4 ADD W10, W10, 0x1
	0x039289D8 STR W10, [X22 + 0x1C]
	0x039289DC CBZ X8, 0x3928A3C
	0x039289E0 LDRSW X10, [X22 + 0x18]
	0x039289E4 LDR W11, [X8 + 0x18]
	0x039289E8 CMP W10, W11
	0x039289EC B.CS 0x3928A04
	0x039289F0 ADD W9, W10, 0x1
	0x039289F4 ADD X8, X8, X10, 0x3, LSL
	0x039289F8 STR W9, [X22 + 0x18]
	0x039289FC STR X21, [X8 + 0x20]
	0x03928A00 B 0x3928A1C
	0x03928A04 LDR X8, [X9 + 0x20]
	0x03928A08 MOV X0, X22
	0x03928A0C MOV X1, X21
	0x03928A10 LDR X8, [X8 + 0xC0]
	0x03928A14 LDR X2, [X8 + 0x70]
	0x03928A18 BL 0x301BF90
	0x03928A1C MOV X0, X20
	0x03928A20 MOV X1, X19
	0x03928A24 MOV X2, X22
	0x03928A28 LDP X20, X19, [X31 + 0x30]
	0x03928A2C LDP X22, X21, [X31 + 0x20]
	0x03928A30 LDP X24, X23, [X31 + 0x10]
	0x03928A34 LDR X30, [X31], #0x40
	0x03928A38 B 0x3928A40
	0x03928A3C BL 0x1C16F20
	0x03928A40 STP X30, X25, [X31 - 0x40]!
	0x03928A44 STP X24, X23, [X31 + 0x10]
	0x03928A48 STP X22, X21, [X31 + 0x20]
	0x03928A4C STP X20, X19, [X31 + 0x30]
	0x03928A50 ADRP X22, 0xAB9000
	0x03928A54 ADRP X23, 0x7CB000
	0x03928A58 LDRB W8, [X22 + 0x8D0]
	0x03928A5C LDR X23, [X23 + 0x598]
	0x03928A60 MOV X19, X2
	0x03928A64 MOV X21, X1
	0x03928A68 MOV X20, X0
	0x03928A6C TBNZ X8, 0x0, 0x3928AB4
	0x03928A70 ADRP X0, 0x7CF000
	0x03928A74 LDR X0, [X0 + 0xB70]
	0x03928A78 BL 0x1C16CF4
	0x03928A7C ADRP X0, 0x825000
	0x03928A80 LDR X0, [X0 + 0xD70]
	0x03928A84 BL 0x1C16CF4
	0x03928A88 ADRP X0, 0x7CC000
	0x03928A8C LDR X0, [X0 + 0xE30]
	0x03928A90 BL 0x1C16CF4
	0x03928A94 ADRP X0, 0x825000
	0x03928A98 LDR X0, [X0 + 0xD78]
	0x03928A9C BL 0x1C16CF4
	0x03928AA0 ADRP X0, 0x7CB000
	0x03928AA4 LDR X0, [X0 + 0x598]
	0x03928AA8 BL 0x1C16CF4
	0x03928AAC MOVZ W8, 0x1
	0x03928AB0 STRB W8, [X22 + 0x8D0]
	0x03928AB4 LDR X0, [X23]
	0x03928AB8 LDR W8, [X0 + 0xE0]
	0x03928ABC CBNZ W8, 0x3928AC4
	0x03928AC0 BL 0x1C16DFC
	0x03928AC4 MOV X0, X21
	0x03928AC8 MOV X1, X31
	0x03928ACC MOV X2, X31
	0x03928AD0 BL 0x3C354F8
	0x03928AD4 MOV X1, X31
	0x03928AD8 TBZ X0, 0x0, 0x3928AF0
	0x03928ADC CBZ X21, 0x3928B60
	0x03928AE0 MOV X0, X21
	0x03928AE4 MOV X1, X31
	0x03928AE8 BL 0x3C32ECC
	0x03928AEC MOV X1, X0
	0x03928AF0 ADRP X22, 0x7CC000
	0x03928AF4 ADRP X23, 0x7CF000
	0x03928AF8 ADRP X24, 0x825000
	0x03928AFC ADRP X25, 0x825000
	0x03928B00 LDR X22, [X22 + 0xE30]
	0x03928B04 LDR X23, [X23 + 0xB70]
	0x03928B08 LDR X24, [X24 + 0xD78]
	0x03928B0C LDR X25, [X25 + 0xD70]
	0x03928B10 MOV X0, X20
	0x03928B14 BL 0x39283EC
	0x03928B18 STR X21, [X20 + 0x18]
	0x03928B1C LDR X0, [X22]
	0x03928B20 BL 0x1C16F10
	0x03928B24 LDR X1, [X23]
	0x03928B28 MOV X21, X0
	0x03928B2C BL 0x2FDBF14
	0x03928B30 STR X21, [X20 + 0x20]
	0x03928B34 LDR X0, [X24]
	0x03928B38 BL 0x1C16F10
	0x03928B3C LDR X1, [X25]
	0x03928B40 MOV X21, X0
	0x03928B44 BL 0x2FB9738
	0x03928B48 STP X21, X19, [X20 + 0x28]
	0x03928B4C LDP X20, X19, [X31 + 0x30]
	0x03928B50 LDP X22, X21, [X31 + 0x20]
	0x03928B54 LDP X24, X23, [X31 + 0x10]
	0x03928B58 LDP X30, X25, [X31], #0x40
	0x03928B5C RET
	0x03928B60 BL 0x1C16F20
	0x03928B64 STP X30, X21, [X31 - 0x20]!
	0x03928B68 STP X20, X19, [X31 + 0x10]
	0x03928B6C ADRP X21, 0xAB9000
	0x03928B70 LDRB W8, [X21 + 0x8D1]
	0x03928B74 MOV X19, X1
	0x03928B78 MOV X20, X0
	0x03928B7C TBNZ X8, 0x0, 0x3928BA0
	0x03928B80 ADRP X0, 0x825000
	0x03928B84 LDR X0, [X0 + 0xE10]
	0x03928B88 BL 0x1C16CF4
	0x03928B8C ADRP X0, 0x826000
	0x03928B90 LDR X0, [X0 + 0xA40]
	0x03928B94 BL 0x1C16CF4
	0x03928B98 MOVZ W8, 0x1
	0x03928B9C STRB W8, [X21 + 0x8D1]
	0x03928BA0 LDR X0, [X20 + 0x30]
	0x03928BA4 CBZ X0, 0x3928C3C
	0x03928BA8 LDP W2, W8, [X0 + 0x18]
	0x03928BAC ADD W8, W8, 0x1
	0x03928BB0 CMP W2, 0x1
	0x03928BB4 STP W31, W8, [X0 + 0x18]
	0x03928BB8 B.LT 0x3928BD4
	0x03928BBC LDR X0, [X0 + 0x10]
	0x03928BC0 MOV W1, W31
	0x03928BC4 MOV X3, X31
	0x03928BC8 BL 0x339FA34
	0x03928BCC LDR X0, [X20 + 0x30]
	0x03928BD0 CBZ X0, 0x3928C3C
	0x03928BD4 ADRP X9, 0x825000
	0x03928BD8 LDR X9, [X9 + 0xE10]
	0x03928BDC LDR W10, [X0 + 0x1C]
	0x03928BE0 LDR X8, [X0 + 0x10]
	0x03928BE4 LDR X9, [X9]
	0x03928BE8 ADD W10, W10, 0x1
	0x03928BEC STR W10, [X0 + 0x1C]
	0x03928BF0 CBZ X8, 0x3928C3C
	0x03928BF4 LDRSW X10, [X0 + 0x18]
	0x03928BF8 LDR W11, [X8 + 0x18]
	0x03928BFC CMP W10, W11
	0x03928C00 B.CS 0x3928C20
	0x03928C04 ADD W9, W10, 0x1
	0x03928C08 ADD X8, X8, X10, 0x3, LSL
	0x03928C0C STR W9, [X0 + 0x18]
	0x03928C10 STR X19, [X8 + 0x20]
	0x03928C14 LDP X20, X19, [X31 + 0x10]
	0x03928C18 LDP X30, X21, [X31], #0x20
	0x03928C1C RET
	0x03928C20 LDR X8, [X9 + 0x20]
	0x03928C24 MOV X1, X19
	0x03928C28 LDP X20, X19, [X31 + 0x10]
	0x03928C2C LDR X8, [X8 + 0xC0]
	0x03928C30 LDR X2, [X8 + 0x70]
	0x03928C34 LDP X30, X21, [X31], #0x20
	0x03928C38 B 0x301BF90
	0x03928C3C BL 0x1C16F20
	0x03928C40 STP X30, X21, [X31 - 0x20]!
	0x03928C44 STP X20, X19, [X31 + 0x10]
	0x03928C48 ADRP X21, 0xAB9000
	0x03928C4C LDRB W8, [X21 + 0x8D2]
	0x03928C50 MOV W19, W1
	0x03928C54 MOV X20, X0
	0x03928C58 TBNZ X8, 0x0, 0x3928C7C
	0x03928C5C ADRP X0, 0x7CC000
	0x03928C60 LDR X0, [X0 + 0xE10]
	0x03928C64 BL 0x1C16CF4
	0x03928C68 ADRP X0, 0x7D2000
	0x03928C6C LDR X0, [X0 + 0x858]
	0x03928C70 BL 0x1C16CF4
	0x03928C74 MOVZ W8, 0x1
	0x03928C78 STRB W8, [X21 + 0x8D2]
	0x03928C7C LDR X0, [X20 + 0x20]
	0x03928C80 CBZ X0, 0x3928CE0
	0x03928C84 ADRP X9, 0x7CC000
	0x03928C88 LDR X9, [X9 + 0xE10]
	0x03928C8C LDR W10, [X0 + 0x1C]
	0x03928C90 LDR X8, [X0 + 0x10]
	0x03928C94 LDR X9, [X9]
	0x03928C98 ADD W10, W10, 0x2
	0x03928C9C STP W31, W10, [X0 + 0x18]
	0x03928CA0 CBZ X8, 0x3928CE0
	0x03928CA4 LDR W10, [X8 + 0x18]
	0x03928CA8 CBZ W10, 0x3928CC4
	0x03928CAC MOVZ W9, 0x1
	0x03928CB0 STR W9, [X0 + 0x18]
	0x03928CB4 STR W19, [X8 + 0x20]
	0x03928CB8 LDP X20, X19, [X31 + 0x10]
	0x03928CBC LDP X30, X21, [X31], #0x20
	0x03928CC0 RET
	0x03928CC4 LDR X8, [X9 + 0x20]
	0x03928CC8 MOV W1, W19
	0x03928CCC LDP X20, X19, [X31 + 0x10]
	0x03928CD0 LDR X8, [X8 + 0xC0]
	0x03928CD4 LDR X2, [X8 + 0x70]
	0x03928CD8 LDP X30, X21, [X31], #0x20
	0x03928CDC B 0x2FDC70C
	0x03928CE0 BL 0x1C16F20
	0x03928CE4 STP X30, X21, [X31 - 0x20]!
	0x03928CE8 STP X20, X19, [X31 + 0x10]
	0x03928CEC ADRP X21, 0xAB9000
	0x03928CF0 LDRB W8, [X21 + 0x8D3]
	0x03928CF4 MOV X19, X1
	0x03928CF8 MOV X20, X0
	0x03928CFC TBNZ X8, 0x0, 0x3928D20
	0x03928D00 ADRP X0, 0x825000
	0x03928D04 LDR X0, [X0 + 0xD68]
	0x03928D08 BL 0x1C16CF4
	0x03928D0C ADRP X0, 0x826000
	0x03928D10 LDR X0, [X0 + 0xA48]
	0x03928D14 BL 0x1C16CF4
	0x03928D18 MOVZ W8, 0x1
	0x03928D1C STRB W8, [X21 + 0x8D3]
	0x03928D20 LDR X0, [X20 + 0x28]
	0x03928D24 CBZ X0, 0x3928D84
	0x03928D28 ADRP X9, 0x825000
	0x03928D2C LDR X9, [X9 + 0xD68]
	0x03928D30 LDR W10, [X0 + 0x1C]
	0x03928D34 LDR X8, [X0 + 0x10]
	0x03928D38 LDR X9, [X9]
	0x03928D3C ADD W10, W10, 0x2
	0x03928D40 STP W31, W10, [X0 + 0x18]
	0x03928D44 CBZ X8, 0x3928D84
	0x03928D48 LDR W10, [X8 + 0x18]
	0x03928D4C CBZ W10, 0x3928D68
	0x03928D50 MOVZ W9, 0x1
	0x03928D54 STR W9, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0xABA000
	015 Move W8, [X19+2245]
	016 Move X26, X1
	017 Move X27, X0
	018 Move [X31+72], X2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x7F8000
	024 Move X0, [X0+2808]
	025 Call 0x1C17CF4
	026 Move X0, 0x827000
	027 Move X0, [X0+2576]
	028 Call 0x1C17CF4
	029 Move X0, 0x7CD000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0x7CC000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0x7D3000
	036 Move X0, [X0+1792]
	037 Call 0x1C17CF4
	038 Move X0, 0x827000
	039 Move X0, [X0+2024]
	040 Call 0x1C17CF4
	041 Move X0, 0x827000
	042 Move X0, [X0+2584]
	043 Call 0x1C17CF4
	044 Move X0, 0x7CE000
	045 Move X0, [X0+2480]
	046 Call 0x1C17CF4
	047 Move X0, 0x827000
	048 Move X0, [X0+2592]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+2245], W8
	052 Compare X27, 0
	053 JumpIfEqual {340}
	054 Move X8, [X27+40]
	055 Compare X8, 0
	056 JumpIfEqual {82}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X31+12], W9
	062 Move W20, W31
	063 Move W22, W31
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, W20
	067 Move X0, [X8+32]
	068 Compare X0, 0
	069 JumpIfEqual {340}
	070 Move X1, X31
	071 Call Face.get_edgesInternal, X0
	072 Compare X0, 0
	073 JumpIfEqual {340}
	074 Move W8, [X0+24]
	075 Move W9, [X31+12]
	076 Add W20, W20, 1
	077 Add W22, W22, W8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X8, [X27+40]
	080 Compare X8, 0
	081 JumpIfNotEqual {64}
	082 Move W19, W31
	083 Move [X31+12], W31
	084 Move W19, W31
	085 Move W22, W31
	086 Move X8, 0x7CC000
	087 Move X8, [X8+1448]
	088 Move X23, 0x7CE000
	089 Move X21, 0x7F8000
	090 Move X20, 0x7CD000
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Move X23, [X23+2480]
	094 Move X21, [X21+2808]
	095 Move X20, [X20+3672]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move W1, 0x7FFE
	100 Move W0, W22
	101 Move X2, X31
	102 Call Math.Min, X0, X1
	103 Move X8, [X23]
	104 Move W22, W0
	105 ShiftRight W22, 31
	106 And W22, W22, 0x3FFFFFFF
	107 Move W23, W0
	108 Move W1, W22
	109 Move X0, X8
	110 Call 0x1C17D6C
	111 Move X8, [X21]
	112 Move [X31+32], X0
	113 Move W1, W22
	114 Move X0, X8
	115 Call 0x1C17D6C
	116 Move X8, [X20]
	117 Move [X31+24], X0
	118 Move W1, W22
	119 Move X0, X8
	120 Call 0x1C17D6C
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 Xor W9, W19, 1
	124 Or W8, W9, W8
	125 Move X24, X0
	126 Move [X31+8], W23
	127 Move TEMP, X8
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {291}
	131 Move W8, [X31+8]
	132 Move [X31+16], X31
	133 Move W20, W31
	134 Move W8, W8
	135 Move [X31+56], X8
	136 Move X8, [X27+40]
	137 Compare X8, 0
	138 JumpIfEqual {340}
	139 Move X9, [X31+16]
	140 Move X23, W20
	141 Move X28, X31
	142 Move [X31+40], X23
	143 Move [X31+48], X20
	144 Move X10, W9
	145 Move [X31+64], X10
	146 Move W19, W9
	147 ShiftRight W19, 31
	148 And W19, W19, 0x3FFFFFFF
	149 Move W9, [X8+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X8, X8, X23
	152 Move X0, [X8+32]
	153 Compare X0, 0
	154 JumpIfEqual {340}
	155 Move X1, X31
	156 Call Face.get_edgesInternal, X0
	157 Compare X0, 0
	158 JumpIfEqual {340}
	159 Move X9, [X31+56]
	160 Move X8, [X31+64]
	161 Add X8, X8, X28
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move W8, [X0+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X8, [X27+40]
	166 Compare X8, 0
	167 JumpIfEqual {340}
	168 Move W9, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X8, X8, X23
	171 Move X0, [X8+32]
	172 Compare X0, 0
	173 JumpIfEqual {340}
	174 Move X1, X31
	175 Call Face.get_edgesInternal, X0
	176 Compare X0, 0
	177 JumpIfEqual {340}
	178 Move W8, [X0+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X8, [X27+88]
	181 Compare X8, 0
	182 JumpIfEqual {340}
	183 Add X9, X0, W28
	184 Move X22, X26
	185 Move X26, [X9+32]
	186 Move W10, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction SBFM not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X11, [X31+32]
	191 Compare X11, 0
	192 JumpIfEqual {340}
	193 Move W10, [X11+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X10, W26
	196 Move W12, 12
	197 NotImplemented "Instruction MADD not yet implemented."
	198 NotImplemented "Instruction MADD not yet implemented."
	199 Move V2, [X8+32]
	200 Move V3, [X8+40]
	201 Move X25, W19
	202 Move V0, [X9+32]
	203 Move V1, [X9+40]
	204 Move W9, 12
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Move [X8+32], D2
	207 Move [X8+40], S3
	208 Move W8, [X11+24]
	209 Add W29, W19, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X20, W29
	212 NotImplemented "Instruction MADD not yet implemented."
	213 Move [X8+32], D0
	214 Move [X8+40], S1
	215 Move X8, 0x827000
	216 Move X8, [X8+2024]
	217 Move X9, [X31+72]
	218 Move X23, X27
	219 Move X0, [X8]
	220 Move W27, [X9]
	221 Move W8, [X0+224]
	222 Move W21, W27
	223 Compare W8, 0
	224 JumpIfNotEqual {228}
	225 Call 0x1C17DFC
	226 Move X9, [X31+72]
	227 Move W21, [X9]
	228 Add W8, W21, 1
	229 Move [X9], W8
	230 Move X8, 0x827000
	231 Move X8, [X8+2584]
	232 Add X0, X31, 80
	233 Move X1, X23
	234 Move X2, X26
	235 Move X3, [X8]
	236 Move [X31+80], X31
	237 Move [X31+88], X31
	238 Call SimpleTuple`2<Object, Edge>..ctor, X0, X1, X2
	239 Compare X22, 0
	240 JumpIfEqual {340}
	241 Move X8, 0x827000
	242 Move X2, [X31+80]
	243 Move X3, [X31+88]
	244 Move X8, [X8+2576]
	245 Move X0, X22
	246 Move W1, W21
	247 Move X26, X22
	248 Move X4, [X8]
	249 Call Dictionary`2<UInt32, SimpleTuple`2<Object, Edge>>.Add, X0, X1, X2
	250 Move X10, [X31+24]
	251 Compare X10, 0
	252 JumpIfEqual {340}
	253 Move W8, [X10+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 And W8, W27, 0xFF00
	256 NotImplemented "Instruction BFM not yet implemented."
	257 NotImplemented "Instruction BFM not yet implemented."
	258 Or W8, W8, 0xFF000000
	259 Add X9, X10, X25
	260 Move [X9+32], W8
	261 Move W9, [X10+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X9, X10, X20
	264 Move [X9+32], W8
	265 Compare X24, 0
	266 JumpIfEqual {340}
	267 Move W8, [X24+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Add X9, X24, X25
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move [X9+32], W19
	272 Add X8, X24, X20
	273 Move [X8+32], W29
	274 Move X27, X23
	275 Move X8, [X23+40]
	276 Move X23, [X31+40]
	277 Move X20, [X31+48]
	278 Add X28, X28, 1
	279 Add W19, W19, 2
	280 Compare X8, 0
	281 JumpIfNotEqual {149}
	282 Move W8, [X31+12]
	283 Add W20, W20, 1
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X10, [X31+16]
	286 Move W9, [X31+8]
	287 Add W8, W10, W28
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add X10, X28, W10
	290 Move [X31+16], X10
	291 Move X8, 0x7D3000
	292 Move X8, [X8+1792]
	293 Move X0, [X8]
	294 Call 0x1C17F10
	295 Move X1, X31
	296 Move X19, X0
	297 Call Mesh..ctor, X0
	298 Compare X19, 0
	299 JumpIfEqual {340}
	300 Move X8, 0x827000
	301 Move X8, [X8+2592]
	302 Move X0, X19
	303 Move X2, X31
	304 Move X1, [X8]
	305 Call Object.set_name, X0, X1
	306 Move X1, [X31+32]
	307 Move X0, X19
	308 Move X2, X31
	309 Call Mesh.set_vertices, X0, X1
	310 Move X1, [X31+24]
	311 Move X0, X19
	312 Move X2, X31
	313 Call Mesh.set_colors32, X0, X1
	314 Move W1, 1
	315 Move X0, X19
	316 Move X2, X31
	317 Call Mesh.set_subMeshCount, X0, X1
	318 Move W2, 3
	319 Move X0, X19
	320 Move X1, X24
	321 Move W3, W31
	322 Move X4, X31
	323 Call Mesh.SetIndices, X0, X1, X2, X3
	324 Move X0, X19
	325 Move X20, [X31+176]
	326 Move X19, [X31+184]
	327 Move X22, [X31+160]
	328 Move X21, [X31+168]
	329 Move X24, [X31+144]
	330 Move X23, [X31+152]
	331 Move X26, [X31+128]
	332 Move X25, [X31+136]
	333 Move X28, [X31+112]
	334 Move X27, [X31+120]
	335 Move X29, [X31+96]
	336 Move X30, [X31+104]
	337 Add X31, X31, 192
	338 Return X0
	339 Call 0x1C17F28
	340 Call 0x1C17F20

Method: System.UInt32 DecodeRGBA(UnityEngine.Color32 color)

Disassembly:
	0x03926D20 ADRP X0, 0x828000
	0x03926D24 LDR X0, [X0 + 0x7E8]
	0x03926D28 BL 0x1C16CF4
	0x03926D2C ADRP X0, 0x828000
	0x03926D30 LDR X0, [X0 + 0x9F0]

ISIL:
	001 And W8, W0, 0xFF00
	002 NotImplemented "Instruction BFM not yet implemented."
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Move W0, W8
	005 Return X0

Method: UnityEngine.Color32 EncodeRGBA(System.UInt32 hash)

Disassembly:
	0x039280BC BL 0x3C4BBC4
	0x039280C0 MOV X27, X0
	0x039280C4 MOV X0, X31
	0x039280C8 BL 0x3C112DC
	0x039280CC MOV X28, X0

ISIL:
	001 And W8, W0, 0xFF00
	002 NotImplemented "Instruction BFM not yet implemented."
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Or W0, W8, 0xFF000000
	005 Return X0

Method: System.Boolean ShouldUseHDRP()

Disassembly:
	0x03926ACC MOV X0, X31
	0x03926AD0 BL 0x38FAE78

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03928D58 STR X19, [X8 + 0x20]
	0x03928D5C LDP X20, X19, [X31 + 0x10]
	0x03928D60 LDP X30, X21, [X31], #0x20
	0x03928D64 RET
	0x03928D68 LDR X8, [X9 + 0x20]
	0x03928D6C MOV X1, X19
	0x03928D70 LDP X20, X19, [X31 + 0x10]
	0x03928D74 LDR X8, [X8 + 0xC0]
	0x03928D78 LDR X2, [X8 + 0x70]
	0x03928D7C LDP X30, X21, [X31], #0x20
	0x03928D80 B 0x2FB9F30
	0x03928D84 BL 0x1C16F20
	0x03928D88 STR X30, [X31 - 0x20]!
	0x03928D8C STP X20, X19, [X31 + 0x10]
	0x03928D90 ADRP X20, 0xAB9000
	0x03928D94 LDRB W8, [X20 + 0x8D4]
	0x03928D98 MOV X19, X0
	0x03928D9C TBNZ X8, 0x0, 0x3928DCC
	0x03928DA0 ADRP X0, 0x826000
	0x03928DA4 LDR X0, [X0 + 0xA48]
	0x03928DA8 BL 0x1C16CF4
	0x03928DAC ADRP X0, 0x826000
	0x03928DB0 LDR X0, [X0 + 0xA40]
	0x03928DB4 BL 0x1C16CF4
	0x03928DB8 ADRP X0, 0x7D2000
	0x03928DBC LDR X0, [X0 + 0x858]
	0x03928DC0 BL 0x1C16CF4
	0x03928DC4 MOVZ W8, 0x1
	0x03928DC8 STRB W8, [X20 + 0x8D4]
	0x03928DCC LDR X8, [X19 + 0x30]
	0x03928DD0 STP X31, X31, [X19 + 0x10]
	0x03928DD4 CBZ X8, 0x3928E30
	0x03928DD8 LDP W2, W9, [X8 + 0x18]
	0x03928DDC ADD W9, W9, 0x1
	0x03928DE0 CMP W2, 0x1
	0x03928DE4 STP W31, W9, [X8 + 0x18]
	0x03928DE8 B.LT 0x3928DFC
	0x03928DEC LDR X0, [X8 + 0x10]
	0x03928DF0 MOV W1, W31
	0x03928DF4 MOV X3, X31
	0x03928DF8 BL 0x339FA34
	0x03928DFC LDR X8, [X19 + 0x28]
	0x03928E00 CBZ X8, 0x3928E30
	0x03928E04 LDR W9, [X8 + 0x1C]
	0x03928E08 ADD W9, W9, 0x1
	0x03928E0C STP W31, W9, [X8 + 0x18]
	0x03928E10 LDR X8, [X19 + 0x20]
	0x03928E14 CBZ X8, 0x3928E30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xABA000
	006 Move X19, 0x827000
	007 Move X20, 0x827000
	008 Move W8, [X21+2246]
	009 Move X19, [X19+2024]
	010 Move X20, [X20+2600]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x827000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x827000
	019 Move X0, [X0+2024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2246], W8
	023 Move X8, [X19]
	024 Move X9, -48476160
	025 Move V0, [X9+187]
	026 Move W1, 2
	027 Move X8, [X8+184]
	028 Move [X8], V0
	029 Move X8, [X19]
	030 Move V0, 0
	031 Move X9, [X8+184]
	032 Move [X9+1], V0
	033 Move X8, [X8+184]
	034 Move W9, 7
	035 Move [X8+32], W31
	036 Move [X8+40], X31
	037 Move [X8+48], W9
	038 Move X0, [X20]
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {54}
	042 Move W8, [X0+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, 11
	045 Move [X0+36], W8
	046 Move X8, [X19]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X8, [X8+184]
	050 Move [X8+56], X0
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

