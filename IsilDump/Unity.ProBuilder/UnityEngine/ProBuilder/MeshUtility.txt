Type: UnityEngine.ProBuilder.MeshUtility

Method: UnityEngine.ProBuilder.Vertex[] GeneratePerTriangleMesh(UnityEngine.Mesh mesh)

Disassembly:
	0x0390FFCC LDR W8, [X21 + 0x18]
	0x0390FFD0 CMP W8, 0x1
	0x0390FFD4 B.LT 0x391000C
	0x0390FFD8 MOV X28, X31
	0x0390FFDC ADD X29, X21, 0x20
	0x0390FFE0 MOV X0, X20
	0x0390FFE4 MOV W1, W28
	0x0390FFE8 MOV X2, X31
	0x0390FFEC BL 0x3C19138
	0x0390FFF0 LDR W8, [X21 + 0x18]
	0x0390FFF4 CMP X28, X8
	0x0390FFF8 B.CS 0x39101A4
	0x0390FFFC STR X0, [X29, X28, LSL #3]
	0x03910000 ADD X28, X28, 0x1
	0x03910004 CMP X28, W8, SXTW
	0x03910008 B.LT 0x390FFE0
	0x0391000C MOV X0, X20
	0x03910010 MOV X1, X31
	0x03910014 BL 0x3C180C0
	0x03910018 CBZ X22, 0x39101A8
	0x0391001C LDR W2, [X22 + 0x18]
	0x03910020 MOV X1, X22
	0x03910024 MOV X3, X31
	0x03910028 BL 0x33A0C7C
	0x0391002C MOV X0, X20
	0x03910030 MOV X1, X31
	0x03910034 BL 0x3C1816C
	0x03910038 CBZ X23, 0x39101A8
	0x0391003C LDR W2, [X23 + 0x18]
	0x03910040 MOV X1, X23
	0x03910044 MOV X3, X31
	0x03910048 BL 0x33A0C7C
	0x0391004C MOV X0, X20
	0x03910050 MOV X1, X31
	0x03910054 BL 0x3C17F68
	0x03910058 CBZ X26, 0x39101A8
	0x0391005C LDR W2, [X26 + 0x18]
	0x03910060 MOV X1, X26
	0x03910064 MOV X3, X31
	0x03910068 BL 0x33A0C7C
	0x0391006C MOV X0, X20
	0x03910070 MOV X1, X31
	0x03910074 BL 0x3C18014
	0x03910078 CBZ X25, 0x39101A8
	0x0391007C LDR W2, [X25 + 0x18]
	0x03910080 MOV X1, X25
	0x03910084 MOV X3, X31
	0x03910088 BL 0x33A0C7C
	0x0391008C MOV X0, X20
	0x03910090 MOV X1, X31
	0x03910094 BL 0x3C182C4
	0x03910098 CBZ X27, 0x39101A8
	0x0391009C LDR W2, [X27 + 0x18]
	0x039100A0 MOV X1, X27
	0x039100A4 MOV X3, X31
	0x039100A8 BL 0x33A0C7C
	0x039100AC CBZ X19, 0x39101A8
	0x039100B0 MOV X0, X19
	0x039100B4 MOV X1, X31
	0x039100B8 BL 0x3C19C94
	0x039100BC MOV X0, X20
	0x039100C0 MOV X1, X31
	0x039100C4 BL 0x3C389D4
	0x039100C8 MOV X1, X0
	0x039100CC MOV X0, X19
	0x039100D0 MOV X2, X31
	0x039100D4 BL 0x3C38A84
	0x039100D8 MOV X0, X19
	0x039100DC MOV X1, X24
	0x039100E0 MOV X2, X31
	0x039100E4 BL 0x3C17F08
	0x039100E8 LDR W1, [X21 + 0x18]
	0x039100EC MOV X0, X19
	0x039100F0 MOV X2, X31
	0x039100F4 BL 0x3C17654
	0x039100F8 LDR X8, [X21 + 0x18]
	0x039100FC CMP W8, 0x1
	0x03910100 B.LT 0x391013C
	0x03910104 MOV X20, X31
	0x03910108 AND X8, X8, 0x0
	0x0391010C ADD X24, X21, 0x20
	0x03910110 CMP X20, W8, UXTW
	0x03910114 B.CS 0x39101A4
	0x03910118 LDR X1, [X24, X20, LSL #3]
	0x0391011C MOV X0, X19
	0x03910120 MOV W2, W20
	0x03910124 MOV X3, X31
	0x03910128 BL 0x3C194F4
	0x0391012C LDR W8, [X21 + 0x18]
	0x03910130 ADD X20, X20, 0x1
	0x03910134 CMP X20, W8, SXTW
	0x03910138 B.LT 0x3910110
	0x0391013C MOV X0, X19
	0x03910140 MOV X1, X22
	0x03910144 MOV X2, X31
	0x03910148 BL 0x3C1810C
	0x0391014C MOV X0, X19
	0x03910150 MOV X1, X23
	0x03910154 MOV X2, X31
	0x03910158 BL 0x3C181B8
	0x0391015C MOV X0, X19
	0x03910160 MOV X1, X25
	0x03910164 MOV X2, X31
	0x03910168 BL 0x3C18060
	0x0391016C MOV X0, X19
	0x03910170 MOV X1, X26
	0x03910174 MOV X2, X31
	0x03910178 BL 0x3C17FB4
	0x0391017C MOV X0, X19
	0x03910180 MOV X1, X27
	0x03910184 LDP X20, X19, [X31 + 0x50]
	0x03910188 LDP X22, X21, [X31 + 0x40]
	0x0391018C LDP X24, X23, [X31 + 0x30]
	0x03910190 LDP X26, X25, [X31 + 0x20]
	0x03910194 LDP X28, X27, [X31 + 0x10]
	0x03910198 MOV X2, X31
	0x0391019C LDP X29, X30, [X31], #0x60
	0x039101A0 B 0x3C18318
	0x039101A4 BL 0x1C16F28
	0x039101A8 BL 0x1C16F20
	0x039101AC ADRP X0, 0x7E8000
	0x039101B0 LDR X0, [X0 + 0x528]
	0x039101B4 BL 0x1C16D08
	0x039101B8 BL 0x1C16F10
	0x039101BC MOV X19, X0
	0x039101C0 ADRP X0, 0x7EE000
	0x039101C4 LDR X0, [X0 + 0x580]
	0x039101C8 B 0x39101E8
	0x039101CC ADRP X0, 0x7E8000
	0x039101D0 LDR X0, [X0 + 0x528]
	0x039101D4 BL 0x1C16D08
	0x039101D8 BL 0x1C16F10
	0x039101DC MOV X19, X0
	0x039101E0 ADRP X0, 0x812000
	0x039101E4 LDR X0, [X0 + 0x278]
	0x039101E8 BL 0x1C16D08
	0x039101EC MOV X1, X0
	0x039101F0 MOV X0, X19
	0x039101F4 MOV X2, X31
	0x039101F8 BL 0x330E100
	0x039101FC ADRP X0, 0x83E000
	0x03910200 LDR X0, [X0 + 0x50]
	0x03910204 BL 0x1C16D08
	0x03910208 MOV X1, X0
	0x0391020C MOV X0, X19
	0x03910210 BL 0x1C16DEC
	0x03910214 SUB X31, X31, 0xA0
	0x03910218 STP X29, X30, [X31 + 0x40]
	0x0391021C STP X28, X27, [X31 + 0x50]
	0x03910220 STP X26, X25, [X31 + 0x60]
	0x03910224 STP X24, X23, [X31 + 0x70]
	0x03910228 STP X22, X21, [X31 + 0x80]
	0x0391022C STP X20, X19, [X31 + 0x90]
	0x03910230 ADRP X19, 0xAD1000
	0x03910234 ADRP X20, 0x7E3000
	0x03910238 LDRB W8, [X19 + 0x816]
	0x0391023C LDR X20, [X20 + 0x598]
	0x03910240 MOV X23, X0
	0x03910244 TBNZ X8, 0x0, 0x3910400
	0x03910248 ADRP X0, 0x7E3000
	0x0391024C LDR X0, [X0 + 0x758]
	0x03910250 BL 0x1C16CF4
	0x03910254 ADRP X0, 0x83E000
	0x03910258 LDR X0, [X0 + 0x10]
	0x0391025C BL 0x1C16CF4
	0x03910260 ADRP X0, 0x83E000
	0x03910264 LDR X0, [X0 + 0x30]
	0x03910268 BL 0x1C16CF4
	0x0391026C ADRP X0, 0x83E000
	0x03910270 LDR X0, [X0 + 0x8]
	0x03910274 BL 0x1C16CF4
	0x03910278 ADRP X0, 0x83E000
	0x0391027C LDR X0, [X0 + 0x58]
	0x03910280 BL 0x1C16CF4
	0x03910284 ADRP X0, 0x83E000
	0x03910288 LDR X0, [X0 + 0x60]
	0x0391028C BL 0x1C16CF4
	0x03910290 ADRP X0, 0x83E000
	0x03910294 LDR X0, [X0 + 0x68]
	0x03910298 BL 0x1C16CF4
	0x0391029C ADRP X0, 0x83E000
	0x039102A0 LDR X0, [X0 + 0x70]
	0x039102A4 BL 0x1C16CF4
	0x039102A8 ADRP X0, 0x83E000
	0x039102AC LDR X0, [X0 + 0x78]
	0x039102B0 BL 0x1C16CF4
	0x039102B4 ADRP X0, 0x7E3000
	0x039102B8 LDR X0, [X0 + 0x9D0]
	0x039102BC BL 0x1C16CF4
	0x039102C0 ADRP X0, 0x7E3000
	0x039102C4 LDR X0, [X0 + 0x598]
	0x039102C8 BL 0x1C16CF4
	0x039102CC ADRP X0, 0x7E3000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xAD3000
	015 Move X20, 0x7E5000
	016 Move W8, [X19+2066]
	017 Move X20, [X20+1432]
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x81C000
	024 Move X0, [X0+3488]
	025 Call 0x1C17CF4
	026 Move X0, 0x7E4000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x83F000
	030 Move X0, [X0+24]
	031 Call 0x1C17CF4
	032 Move X0, 0x83F000
	033 Move X0, [X0+32]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+2066], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X25
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {189}
	050 Move X0, X25
	051 Call MeshUtility.GetVertices, X0
	052 Compare X25, 0
	053 JumpIfEqual {188}
	054 Move X23, X0
	055 Move X0, X25
	056 Move X1, X31
	057 Call Mesh.get_subMeshCount, X0
	058 Move W21, W0
	059 Move X0, X25
	060 Move X1, X31
	061 Call Mesh.get_triangles, X0
	062 Compare X0, 0
	063 JumpIfEqual {188}
	064 Move X8, 0x83F000
	065 Move X8, [X8+24]
	066 Move W1, [X0+24]
	067 Move X19, 0x81C000
	068 Move X8, [X8]
	069 Move X19, [X19+3488]
	070 Move X0, X8
	071 Call 0x1C17D6C
	072 Move X8, [X19]
	073 Move X20, X0
	074 Move W1, W21
	075 Move X0, X8
	076 Call 0x1C17D6C
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X22, X0
	079 Move X24, X31
	080 Move W28, W31
	081 Move W26, W21
	082 Move [X31+12], W21
	083 Move [X31+16], X26
	084 Move [X31+24], X25
	085 Move X0, X25
	086 Move W1, W24
	087 Move X2, X31
	088 Call Mesh.GetTriangles, X0, X1
	089 Compare X22, 0
	090 JumpIfEqual {188}
	091 Move W8, [X22+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X21, X22, X24
	094 Move [X21+32], X0
	095 Compare X0, 0
	096 JumpIfEqual {188}
	097 Move X19, [X0+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W27, W31
	100 Move X9, X19
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare X23, 0
	104 JumpIfEqual {188}
	105 Move X29, W27
	106 Add X8, X0, X29
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Move W9, [X23+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X23, X8
	111 Move X26, [X8+32]
	112 Move X8, 0x83F000
	113 Move X8, [X8+32]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X1, X26
	117 Move X2, X31
	118 Move X25, X0
	119 Call Vertex..ctor, X0, X1
	120 Compare X20, 0
	121 JumpIfEqual {188}
	122 Move W8, [X20+24]
	123 Add W10, W28, W27
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X8, X20, W10
	126 Move [X8+32], X25
	127 Move W8, [X22+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X21]
	130 Compare X0, 0
	131 JumpIfEqual {188}
	132 Move X9, [X0+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add W27, W27, 1
	135 Add X11, X0, X29
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X11+32], W10
	138 Move X26, [X31+16]
	139 Move X25, [X31+24]
	140 Add W28, W28, W27
	141 Add X24, X24, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, X25
	144 Move X1, X20
	145 Move X2, X31
	146 Call Vertex.SetMesh, X0, X1
	147 Move W19, [X31+12]
	148 Move X0, X25
	149 Move X2, X31
	150 Move W1, W19
	151 Call Mesh.set_subMeshCount, X0, X1
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X21, X31
	154 Add X19, X22, 32
	155 Move W8, [X22+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X1, [X19]
	158 Move X0, X25
	159 Move W2, W21
	160 Move X3, X31
	161 Call Mesh.SetTriangles, X0, X1, X2
	162 Add X21, X21, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X25
	165 Move X1, X20
	166 Move X2, X31
	167 Call Vertex.SetMesh, X0, X1
	168 Move X0, X25
	169 Move W1, W21
	170 Move X2, X31
	171 Call Mesh.set_subMeshCount, X0, X1
	172 Move X0, X20
	173 Move X20, [X31+112]
	174 Move X19, [X31+120]
	175 Move X22, [X31+96]
	176 Move X21, [X31+104]
	177 Move X24, [X31+80]
	178 Move X23, [X31+88]
	179 Move X26, [X31+64]
	180 Move X25, [X31+72]
	181 Move X28, [X31+48]
	182 Move X27, [X31+56]
	183 Move X29, [X31+32]
	184 Move X30, [X31+40]
	185 Add X31, X31, 128
	186 Return X0
	187 Call 0x1C17F28
	188 Call 0x1C17F20
	189 Move X0, 0x7E9000
	190 Move X0, [X0+1320]
	191 Call 0x1C17D08
	192 Call 0x1C17F10
	193 Move X19, X0
	194 Move X0, 0x83E000
	195 Move X0, [X0+3728]
	196 Call 0x1C17D08
	197 Move X1, X0
	198 Move X0, X19
	199 Move X2, X31
	200 Call ArgumentNullException..ctor, X0, X1
	201 Move X0, 0x83F000
	202 Move X0, [X0+40]
	203 Call 0x1C17D08
	204 Move X1, X0
	205 Move X0, X19
	206 Call 0x1C17DEC

Method: System.Void GenerateTangent(UnityEngine.Mesh mesh)

Disassembly:
	0x03910820 MOV X2, X22
	0x03910824 BL 0x221C710
	0x03910828 CBZ X21, 0x3910D78
	0x0391082C ADRP X22, 0x83E000
	0x03910830 LDR X22, [X22 + 0x130]
	0x03910834 LDR W8, [X21 + 0x18]
	0x03910838 LDR X0, [X29]
	0x0391083C ADRP X23, 0x83E000
	0x03910840 ADRP X24, 0x83E000
	0x03910844 LDR X23, [X23 + 0xB0]
	0x03910848 LDR X24, [X24 + 0x100]
	0x0391084C ADD X1, X31, 0x1C
	0x03910850 STR W8, [X31 + 0x1C]
	0x03910854 BL 0x1C16E04
	0x03910858 LDR X8, [X22]
	0x0391085C MOV X1, X0
	0x03910860 MOV X2, X31
	0x03910864 MOV X0, X8
	0x03910868 BL 0x321EFD0
	0x0391086C LDR X3, [X23]
	0x03910870 LDR X4, [X19]
	0x03910874 MOV X1, X0
	0x03910878 MOV X0, X20
	0x0391087C MOV X2, X21
	0x03910880 BL 0x221C710
	0x03910884 LDR X1, [X24]
	0x03910888 MOV X0, X20
	0x0391088C MOV X2, X31
	0x03910890 BL 0x32338A8
	0x03910894 LDR X22, [X31 + 0x10]
	0x03910898 MOV X1, X31
	0x0391089C MOV X0, X22
	0x039108A0 BL 0x3C0F650
	0x039108A4 CMP W0, 0x1
	0x039108A8 B.LT 0x3910D38
	0x039108AC ADRP X25, 0x83E000
	0x039108B0 ADRP X26, 0x83E000
	0x039108B4 ADRP X19, 0x83E000
	0x039108B8 LDR X25, [X25 + 0xE0]
	0x039108BC LDR X26, [X26 + 0xA0]
	0x039108C0 LDR X19, [X19 + 0x108]
	0x039108C4 MOV W21, W31
	0x039108C8 MOV X0, X22
	0x039108CC MOV W1, W21
	0x039108D0 MOV X2, X31
	0x039108D4 BL 0x3C1A1A4
	0x039108D8 MOV W23, W0
	0x039108DC MOV X0, X22
	0x039108E0 MOV W1, W21
	0x039108E4 MOV X2, X31
	0x039108E8 BL 0x3C191E8
	0x039108EC MOV X22, X0
	0x039108F0 LDR X0, [X29]
	0x039108F4 ADD X1, X31, 0x3C
	0x039108F8 STR W21, [X31 + 0x3C]
	0x039108FC BL 0x1C16E04
	0x03910900 ADRP X8, 0x83E000
	0x03910904 LDR X8, [X8 + 0x58]
	0x03910908 MOV X24, X0
	0x0391090C ADD X1, X31, 0x38
	0x03910910 STR W23, [X31 + 0x38]
	0x03910914 LDR X0, [X8]
	0x03910918 BL 0x1C16E04
	0x0391091C ADRP X8, 0x83E000
	0x03910920 LDR X8, [X8 + 0xC0]
	0x03910924 MOV X2, X0
	0x03910928 MOV X1, X24
	0x0391092C MOV X3, X31
	0x03910930 LDR X8, [X8]
	0x03910934 MOV X0, X8
	0x03910938 BL 0x3227BD4
	0x0391093C MOV X1, X0
	0x03910940 MOV X0, X20
	0x03910944 MOV X2, X31
	0x03910948 BL 0x32338A8
	0x0391094C CMP W23, 0x5
	0x03910950 B.HI 0x3910D1C
	0x03910954 ADRP X11, 0xFFFFFFFFFD287000
	0x03910958 MOV W8, W23
	0x0391095C ADD X11, X11, 0xA30
	0x03910960 ADR X9, 0x10
	0x03910964 LDRB W10, [X11, X8, LSL]
	0x03910968 ADD X9, X9, X10, 0x2, LSL
	0x0391096C BR X9
	0x03910970 CBZ X22, 0x3910D78
	0x03910974 LDR W8, [X22 + 0x18]
	0x03910978 CMP W8, 0x1
	0x0391097C B.LT 0x3910D1C
	0x03910980 MOVZ W27, 0x2
	0x03910984 SUB W23, W27, 0x2
	0x03910988 CMP W23, W8
	0x0391098C B.CS 0x3910D68
	0x03910990 ADD X8, X22, W23, 0x2, SXTW
	0x03910994 LDR W8, [X8 + 0x20]
	0x03910998 LDR X0, [X29]
	0x0391099C ADD X1, X31, 0x3C
	0x039109A0 STR W8, [X31 + 0x3C]
	0x039109A4 BL 0x1C16E04
	0x039109A8 LDR W8, [X22 + 0x18]
	0x039109AC ADD W24, W23, 0x1
	0x039109B0 CMP W24, W8
	0x039109B4 B.CS 0x3910D68
	0x039109B8 SUB W8, W27, 0x1
	0x039109BC ADD X8, X22, W8, 0x2, SXTW
	0x039109C0 MOV X23, X0
	0x039109C4 LDR W8, [X8 + 0x20]
	0x039109C8 LDR X0, [X29]
	0x039109CC ADD X1, X31, 0x38
	0x039109D0 STR W8, [X31 + 0x38]
	0x039109D4 BL 0x1C16E04
	0x039109D8 LDR W8, [X22 + 0x18]
	0x039109DC ADD W28, W24, 0x1
	0x039109E0 CMP W28, W8
	0x039109E4 B.CS 0x3910D68
	0x039109E8 ADD X8, X22, W27, 0x2, SXTW
	0x039109EC MOV X24, X0
	0x039109F0 LDR W8, [X8 + 0x20]
	0x039109F4 LDR X0, [X29]
	0x039109F8 ADD X1, X31, 0x34
	0x039109FC STR W8, [X31 + 0x34]
	0x03910A00 BL 0x1C16E04
	0x03910A04 ADRP X8, 0x83E000
	0x03910A08 LDR X8, [X8 + 0x138]
	0x03910A0C MOV X3, X0
	0x03910A10 MOV X1, X23
	0x03910A14 MOV X2, X24
	0x03910A18 LDR X8, [X8]
	0x03910A1C MOV X4, X31
	0x03910A20 MOV X0, X8
	0x03910A24 BL 0x3227C18
	0x03910A28 MOV X1, X0
	0x03910A2C MOV X0, X20
	0x03910A30 MOV X2, X31
	0x03910A34 BL 0x32338A8
	0x03910A38 LDR W8, [X22 + 0x18]
	0x03910A3C ADD W9, W28, 0x1
	0x03910A40 ADD W27, W27, 0x3
	0x03910A44 CMP W9, W8
	0x03910A48 B.LT 0x3910984
	0x03910A4C B 0x3910D1C
	0x03910A50 CBZ X22, 0x3910D78
	0x03910A54 LDR W8, [X22 + 0x18]
	0x03910A58 CMP W8, 0x1
	0x03910A5C B.LT 0x3910D1C
	0x03910A60 MOVZ W27, 0x3
	0x03910A64 ADRP X8, 0x7E3000
	0x03910A68 LDR X8, [X8 + 0x9D0]
	0x03910A6C MOVZ W1, 0x4
	0x03910A70 SUB W28, W27, 0x3
	0x03910A74 LDR X0, [X8]
	0x03910A78 BL 0x1C16D6C
	0x03910A7C LDR W8, [X22 + 0x18]
	0x03910A80 CMP W28, W8
	0x03910A84 B.CS 0x3910D68
	0x03910A88 ADD X8, X22, W28, 0x2, SXTW
	0x03910A8C MOV X23, X0
	0x03910A90 LDR W8, [X8 + 0x20]
	0x03910A94 LDR X0, [X29]
	0x03910A98 ADD X1, X31, 0x3C
	0x03910A9C STR W8, [X31 + 0x3C]
	0x03910AA0 BL 0x1C16E04
	0x03910AA4 CBZ X23, 0x3910D78
	0x03910AA8 MOV X24, X0
	0x03910AAC CBZ X0, 0x3910AC4
	0x03910AB0 LDR X8, [X23]
	0x03910AB4 MOV X0, X24
	0x03910AB8 LDR X1, [X8 + 0x40]
	0x03910ABC BL 0x1C16E00
	0x03910AC0 CBZ X0, 0x3910D6C
	0x03910AC4 LDR W8, [X23 + 0x18]
	0x03910AC8 CBZ W8, 0x3910D68
	0x03910ACC STR X24, [X23 + 0x20]
	0x03910AD0 LDR W8, [X22 + 0x18]
	0x03910AD4 ADD W28, W28, 0x1
	0x03910AD8 CMP W28, W8
	0x03910ADC B.CS 0x3910D68
	0x03910AE0 SUB W8, W27, 0x2
	0x03910AE4 ADD X8, X22, W8, 0x2, SXTW
	0x03910AE8 LDR W8, [X8 + 0x20]
	0x03910AEC LDR X0, [X29]
	0x03910AF0 ADD X1, X31, 0x38
	0x03910AF4 STR W8, [X31 + 0x38]
	0x03910AF8 BL 0x1C16E04
	0x03910AFC MOV X24, X0
	0x03910B00 CBZ X0, 0x3910B18
	0x03910B04 LDR X8, [X23]
	0x03910B08 MOV X0, X24
	0x03910B0C LDR X1, [X8 + 0x40]
	0x03910B10 BL 0x1C16E00
	0x03910B14 CBZ X0, 0x3910D6C
	0x03910B18 LDR W8, [X23 + 0x18]
	0x03910B1C CMP W8, 0x1
	0x03910B20 B.LS 0x3910D68
	0x03910B24 STR X24, [X23 + 0x28]
	0x03910B28 LDR W8, [X22 + 0x18]
	0x03910B2C ADD W28, W28, 0x1
	0x03910B30 CMP W28, W8
	0x03910B34 B.CS 0x3910D68
	0x03910B38 SUB W8, W27, 0x1
	0x03910B3C ADD X8, X22, W8, 0x2, SXTW
	0x03910B40 LDR W8, [X8 + 0x20]
	0x03910B44 LDR X0, [X29]
	0x03910B48 ADD X1, X31, 0x34
	0x03910B4C STR W8, [X31 + 0x34]
	0x03910B50 BL 0x1C16E04
	0x03910B54 MOV X24, X0
	0x03910B58 CBZ X0, 0x3910B70
	0x03910B5C LDR X8, [X23]
	0x03910B60 MOV X0, X24
	0x03910B64 LDR X1, [X8 + 0x40]
	0x03910B68 BL 0x1C16E00
	0x03910B6C CBZ X0, 0x3910D6C
	0x03910B70 LDR W8, [X23 + 0x18]
	0x03910B74 CMP W8, 0x2
	0x03910B78 B.LS 0x3910D68
	0x03910B7C STR X24, [X23 + 0x30]
	0x03910B80 LDR W8, [X22 + 0x18]
	0x03910B84 ADD W28, W28, 0x1
	0x03910B88 CMP W28, W8
	0x03910B8C B.CS 0x3910D68
	0x03910B90 ADD X8, X22, W27, 0x2, SXTW
	0x03910B94 LDR W8, [X8 + 0x20]
	0x03910B98 LDR X0, [X29]
	0x03910B9C ADD X1, X31, 0x30
	0x03910BA0 STR W8, [X31 + 0x30]
	0x03910BA4 BL 0x1C16E04
	0x03910BA8 MOV X24, X0
	0x03910BAC CBZ X0, 0x3910BC4
	0x03910BB0 LDR X8, [X23]
	0x03910BB4 MOV X0, X24
	0x03910BB8 LDR X1, [X8 + 0x40]
	0x03910BBC BL 0x1C16E00
	0x03910BC0 CBZ X0, 0x3910D6C
	0x03910BC4 LDR W8, [X23 + 0x18]
	0x03910BC8 CMP W8, 0x3
	0x03910BCC B.LS 0x3910D68
	0x03910BD0 STR X24, [X23 + 0x38]
	0x03910BD4 LDR X0, [X25]
	0x03910BD8 MOV X1, X23
	0x03910BDC MOV X2, X31
	0x03910BE0 BL 0x3227C5C
	0x03910BE4 MOV X1, X0
	0x03910BE8 MOV X0, X20
	0x03910BEC MOV X2, X31
	0x03910BF0 BL 0x32338A8
	0x03910BF4 LDR W8, [X22 + 0x18]
	0x03910BF8 ADD W9, W28, 0x1
	0x03910BFC ADD W27, W27, 0x4
	0x03910C00 CMP W9, W8
	0x03910C04 B.LT 0x3910A64
	0x03910C08 B 0x3910D1C
	0x03910C0C CBZ X22, 0x3910D78
	0x03910C10 LDR W8, [X22 + 0x18]
	0x03910C14 CMP W8, 0x1
	0x03910C18 B.LT 0x3910D1C
	0x03910C1C MOVZ W24, 0x1
	0x03910C20 SUB W23, W24, 0x1
	0x03910C24 CMP W23, W8
	0x03910C28 B.CS 0x3910D68
	0x03910C2C ADD X8, X22, W23, 0x2, SXTW
	0x03910C30 LDR W8, [X8 + 0x20]
	0x03910C34 LDR X0, [X29]
	0x03910C38 ADD X1, X31, 0x3C
	0x03910C3C STR W8, [X31 + 0x3C]
	0x03910C40 BL 0x1C16E04
	0x03910C44 LDR W8, [X22 + 0x18]
	0x03910C48 ADD W27, W23, 0x1
	0x03910C4C CMP W27, W8
	0x03910C50 B.CS 0x3910D68
	0x03910C54 ADD X8, X22, W24, 0x2, SXTW
	0x03910C58 MOV X23, X0
	0x03910C5C LDR W8, [X8 + 0x20]
	0x03910C60 LDR X0, [X29]
	0x03910C64 ADD X1, X31, 0x38
	0x03910C68 STR W8, [X31 + 0x38]
	0x03910C6C BL 0x1C16E04
	0x03910C70 LDR X8, [X26]
	0x03910C74 MOV X2, X0
	0x03910C78 MOV X1, X23
	0x03910C7C MOV X3, X31
	0x03910C80 MOV X0, X8
	0x03910C84 BL 0x3227BD4
	0x03910C88 MOV X1, X0
	0x03910C8C MOV X0, X20
	0x03910C90 MOV X2, X31
	0x03910C94 BL 0x32338A8
	0x03910C98 LDR W8, [X22 + 0x18]
	0x03910C9C ADD W9, W27, 0x1
	0x03910CA0 ADD W24, W24, 0x2
	0x03910CA4 CMP W9, W8
	0x03910CA8 B.LT 0x3910C20
	0x03910CAC B 0x3910D1C
	0x03910CB0 CBZ X22, 0x3910D78
	0x03910CB4 LDR X8, [X22 + 0x18]
	0x03910CB8 CMP W8, 0x1
	0x03910CBC B.LT 0x3910D1C
	0x03910CC0 MOV X23, X31
	0x03910CC4 AND X8, X8, 0x0
	0x03910CC8 ADD X24, X22, 0x20
	0x03910CCC CMP X23, W8, UXTW
	0x03910CD0 B.CS 0x3910D68
	0x03910CD4 LDR W8, [X24, X23, LSL #2]
	0x03910CD8 LDR X0, [X29]
	0x03910CDC ADD X1, X31, 0x3C
	0x03910CE0 STR W8, [X31 + 0x3C]
	0x03910CE4 BL 0x1C16E04
	0x03910CE8 LDR X8, [X19]
	0x03910CEC MOV X1, X0
	0x03910CF0 MOV X2, X31
	0x03910CF4 MOV X0, X8
	0x03910CF8 BL 0x321EFD0
	0x03910CFC MOV X1, X0
	0x03910D00 MOV X0, X20
	0x03910D04 MOV X2, X31
	0x03910D08 BL 0x32338A8
	0x03910D0C LDR W8, [X22 + 0x18]
	0x03910D10 ADD X23, X23, 0x1
	0x03910D14 CMP X23, W8, SXTW
	0x03910D18 B.LT 0x3910CCC
	0x03910D1C LDR X22, [X31 + 0x10]
	0x03910D20 MOV X1, X31
	0x03910D24 ADD W21, W21, 0x1
	0x03910D28 MOV X0, X22
	0x03910D2C BL 0x3C0F650
	0x03910D30 CMP W21, W0
	0x03910D34 B.LT 0x39108C8
	0x03910D38 LDR X8, [X20]
	0x03910D3C MOV X0, X20
	0x03910D40 LDP X9, X1, [X8 + 0x168]
	0x03910D44 BLR X9
	0x03910D48 LDP X20, X19, [X31 + 0x90]
	0x03910D4C LDP X22, X21, [X31 + 0x80]
	0x03910D50 LDP X24, X23, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X29
	005 Move [X31+56], X30
	006 Move [X31+64], X28
	007 Move [X31+72], X27
	008 Move [X31+80], X26
	009 Move [X31+88], X25
	010 Move [X31+96], X24
	011 Move [X31+104], X23
	012 Move [X31+112], X22
	013 Move [X31+120], X21
	014 Move [X31+128], X20
	015 Move [X31+136], X19
	016 Move X21, 0xAD2000
	017 Move X20, 0x7E4000
	018 Move W8, [X21+2067]
	019 Move X20, [X20+1432]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x83F000
	026 Move X0, [X0+64]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E4000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E6000
	032 Move X0, [X0+2480]
	033 Call 0x1C17CF4
	034 Move X0, 0x83F000
	035 Move X0, [X0+72]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2067], W8
	039 Move X0, [X20]
	040 Move [X31+24], W31
	041 Move [X31+16], X31
	042 Move [X31+8], W31
	043 Move [X31], X31
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {332}
	056 Compare X19, 0
	057 JumpIfEqual {331}
	058 Move X0, X19
	059 Move X1, X31
	060 Call Mesh.get_triangles, X0
	061 Move X24, X0
	062 Move X0, X19
	063 Move X1, X31
	064 Call Mesh.get_vertices, X0
	065 Move X25, X0
	066 Move X0, X19
	067 Move X1, X31
	068 Call Mesh.get_uv, X0
	069 Move X26, X0
	070 Move X0, X19
	071 Move X1, X31
	072 Call Mesh.get_normals, X0
	073 Compare X24, 0
	074 JumpIfEqual {331}
	075 Compare X25, 0
	076 JumpIfEqual {331}
	077 Move X21, 0x7E6000
	078 Move X21, [X21+2480]
	079 Move X27, [X25+24]
	080 Move X20, X0
	081 Move X22, 0x83F000
	082 Move X0, [X21]
	083 Move X28, [X24+24]
	084 Move X22, [X22+72]
	085 Move W1, W27
	086 Call 0x1C17D6C
	087 Move X8, [X21]
	088 Move X21, X0
	089 Move W1, W27
	090 Move X0, X8
	091 Call 0x1C17D6C
	092 Move X8, [X22]
	093 Move X22, X0
	094 Move W1, W27
	095 Move X0, X8
	096 Call 0x1C17D6C
	097 Move X8, X28
	098 ShiftRight X8, 32
	099 And X8, X8, 0x7FFFFFFF
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, X0
	102 Move X11, X31
	103 Move X8, W28
	104 Move W9, 12
	105 Move S0, 1
	106 Move W12, [X24+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X10, X11, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X10, X10, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X12, X24, X11
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Move W14, [X25+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X11, X24, X11
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Compare X26, 0
	122 JumpIfEqual {331}
	123 Move W14, [X26+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare X21, 0
	128 JumpIfEqual {331}
	129 Move W14, [X21+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction MADD not yet implemented."
	132 NotImplemented "Instruction MADD not yet implemented."
	133 Move V1, [X14+32]
	134 Move V2, [X14+40]
	135 NotImplemented "Instruction NOP not yet implemented."
	136 NotImplemented "Instruction MADD not yet implemented."
	137 Move V3, [X15+32]
	138 Move V4, [X15+40]
	139 Add X15, X26, X13
	140 Move V5, [X14+32]
	141 Move V16, [X14+40]
	142 Add X14, X26, 32
	143 Move S17, [X15+32]
	144 Move S18, [X15+36]
	145 Add X15, X14, X12
	146 Add X14, X14, X11
	147 Move S20, [X15]
	148 Move S19, [X15+4]
	149 Move S22, [X14]
	150 Move S23, [X14+4]
	151 Subtract V6, V3, V1
	152 Subtract V7, V5, V1
	153 Subtract S1, S4, S2
	154 Subtract S3, S16, S2
	155 Subtract S5, S20, S17
	156 Subtract S4, S22, S17
	157 Subtract S2, S19, S18
	158 Subtract S16, S23, S18
	159 Multiply S17, S5, S16
	160 Multiply S18, S2, S4
	161 NotImplemented "Instruction MADD not yet implemented."
	162 NotImplemented "Instruction INVALID not yet implemented."
	163 Subtract S17, S17, S18
	164 NotImplemented "Instruction INVALID not yet implemented."
	165 Move V21, [X15+32]
	166 Subtract V18, V19, V18
	167 Move V19, [X15+40]
	168 Multiply S16, S1, S16
	169 Multiply S2, S3, S2
	170 Subtract S16, S16, S2
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 NotImplemented "Instruction INVALID not yet implemented."
	173 Multiply S16, S16, S2
	174 Add V18, V17, V21
	175 Add S19, S16, S19
	176 Move [X15+32], D18
	177 Move [X15+40], S19
	178 Move W14, [X21+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 NotImplemented "Instruction MADD not yet implemented."
	181 Move V18, [X14+32]
	182 Move V19, [X14+40]
	183 Add V18, V17, V18
	184 Add S19, S16, S19
	185 Move [X14+32], D18
	186 Move [X14+40], S19
	187 Move W14, [X21+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction MADD not yet implemented."
	190 Move V18, [X14+32]
	191 Move V19, [X14+40]
	192 Add V17, V17, V18
	193 Add S16, S16, S19
	194 Move [X14+32], D17
	195 Move [X14+40], S16
	196 Compare X22, 0
	197 JumpIfEqual {331}
	198 Move W14, [X22+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction INVALID not yet implemented."
	201 NotImplemented "Instruction INVALID not yet implemented."
	202 NotImplemented "Instruction MADD not yet implemented."
	203 Multiply S3, S3, S5
	204 Multiply S1, S1, S4
	205 Subtract V4, V7, V6
	206 Move V5, [X13+32]
	207 Move V6, [X13+40]
	208 Subtract S3, S3, S1
	209 NotImplemented "Instruction INVALID not yet implemented."
	210 Multiply S2, S3, S2
	211 Add V3, V1, V5
	212 Add S4, S2, S6
	213 Move [X13+32], D3
	214 Move [X13+40], S4
	215 Move W13, [X22+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 NotImplemented "Instruction MADD not yet implemented."
	218 Move V3, [X12+32]
	219 Move V4, [X12+40]
	220 Add V3, V1, V3
	221 Add S4, S2, S4
	222 Move [X12+32], D3
	223 Move [X12+40], S4
	224 Move W12, [X22+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 NotImplemented "Instruction MADD not yet implemented."
	227 Move V3, [X12+32]
	228 Move V4, [X12+40]
	229 Add X11, X10, 1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Add V1, V1, V3
	232 Add S2, S2, S4
	233 Move [X12+32], D1
	234 Move [X12+40], S2
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Compare X20, 0
	237 JumpIfEqual {331}
	238 Move X8, W27
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X24, X31
	241 Add X25, X23, 44
	242 Add X26, X20, 40
	243 Add X27, X22, 40
	244 Add X28, X21, 40
	245 Move S8, 1
	246 NotImplemented "Instruction CSINC not yet implemented."
	247 Move S9, -1
	248 Move W8, [X20+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 Move V1, [X26]
	252 Move [X31+16], D0
	253 Move [X31+24], S1
	254 Compare X21, 0
	255 JumpIfEqual {331}
	256 Move W8, [X21+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 Move V1, [X28]
	260 Add X0, X31, 16
	261 Add X1, X31, 0
	262 Move X2, X31
	263 Move [X31], D0
	264 Move [X31+8], S1
	265 Call Vector3.OrthoNormalize, X0, X1
	266 Compare X23, 0
	267 JumpIfEqual {331}
	268 Move W8, [X23+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move V0, [X31]
	271 Move [X25-12], S0
	272 Move V0, [X31+4]
	273 Move [X25-8], S0
	274 Move V0, [X31+8]
	275 Move [X25-4], S0
	276 Compare X22, 0
	277 JumpIfEqual {331}
	278 Move W8, [X22+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move S0, [X31+20]
	281 Move S1, [X31+24]
	282 Move S3, [X31+4]
	283 Move S2, [X31+8]
	284 Move V4, [X31]
	285 Move V5, [X31+16]
	286 Add X24, X24, 1
	287 Multiply S6, S0, S2
	288 Multiply S7, S1, S3
	289 Multiply S1, S1, S4
	290 Multiply S2, S5, S2
	291 Multiply S3, S5, S3
	292 Multiply S0, S0, S4
	293 Move S4, [X27-8]
	294 Move S5, [X27-4]
	295 Subtract S6, S6, S7
	296 Move V7, [X27+12]
	297 Subtract S1, S1, S2
	298 Subtract S0, S3, S0
	299 Multiply S2, S6, S4
	300 Multiply S1, S1, S5
	301 Multiply S0, S0, S7
	302 Add S1, S2, S1
	303 Add S0, S0, S1
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 NotImplemented "Instruction FCSEL not yet implemented."
	306 Add X26, X26, 12
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move [X25+16], S0
	309 Add X28, X28, 12
	310 Move X0, X19
	311 Move X1, X23
	312 Move X2, X31
	313 Call Mesh.set_tangents, X0, X1
	314 Move X20, [X31+128]
	315 Move X19, [X31+136]
	316 Move X22, [X31+112]
	317 Move X21, [X31+120]
	318 Move X24, [X31+96]
	319 Move X23, [X31+104]
	320 Move X26, [X31+80]
	321 Move X25, [X31+88]
	322 Move X28, [X31+64]
	323 Move X27, [X31+72]
	324 Move X29, [X31+48]
	325 Move X30, [X31+56]
	326 Move D9, [X31+32]
	327 Move D8, [X31+40]
	328 Add X31, X31, 144
	329 Return 
	330 Call 0x1C17F28
	331 Call 0x1C17F20
	332 Move X0, 0x7E9000
	333 Move X0, [X0+1320]
	334 Call 0x1C17D08
	335 Call 0x1C17F10
	336 Move X19, X0
	337 Move X0, 0x83E000
	338 Move X0, [X0+3728]
	339 Call 0x1C17D08
	340 Move X1, X0
	341 Move X0, X19
	342 Move X2, X31
	343 Call ArgumentNullException..ctor, X0, X1
	344 Move X0, 0x83F000
	345 Move X0, [X0+64]
	346 Call 0x1C17D08
	347 Move X1, X0
	348 Move X0, X19
	349 Call 0x1C17DEC

Method: UnityEngine.Mesh DeepCopy(UnityEngine.Mesh source)

Disassembly:
	0x03910D54 LDP X26, X25, [X31 + 0x60]
	0x03910D58 LDP X28, X27, [X31 + 0x50]
	0x03910D5C LDP X29, X30, [X31 + 0x40]
	0x03910D60 ADD X31, X31, 0xA0
	0x03910D64 RET
	0x03910D68 BL 0x1C16F28
	0x03910D6C BL 0x1C16F44
	0x03910D70 MOV X1, X31
	0x03910D74 BL 0x1C16DEC
	0x03910D78 BL 0x1C16F20
	0x03910D7C ADRP X0, 0x7E8000
	0x03910D80 LDR X0, [X0 + 0x528]
	0x03910D84 BL 0x1C16D08
	0x03910D88 BL 0x1C16F10
	0x03910D8C MOV X19, X0
	0x03910D90 ADRP X0, 0x83D000
	0x03910D94 LDR X0, [X0 + 0xE90]
	0x03910D98 BL 0x1C16D08
	0x03910D9C MOV X1, X0
	0x03910DA0 MOV X0, X19
	0x03910DA4 MOV X2, X31
	0x03910DA8 BL 0x330E100
	0x03910DAC ADRP X0, 0x83E000
	0x03910DB0 LDR X0, [X0 + 0x140]
	0x03910DB4 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAD2000
	006 Move X21, 0x7EB000
	007 Move W8, [X20+2068]
	008 Move X21, [X21+1792]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7EB000
	015 Move X0, [X0+1792]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2068], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Mesh..ctor, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Call MeshUtility.CopyTo, X0, X1
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Void CopyTo(UnityEngine.Mesh source, UnityEngine.Mesh destination)

Disassembly:
	0x03910DB8 MOV X1, X0
	0x03910DBC MOV X0, X19
	0x03910DC0 BL 0x1C16DEC
	0x03910DC4 STR X30, [X31 - 0x10]!
	0x03910DC8 BL 0x390F2D0
	0x03910DCC LDR X30, [X31], #0x10
	0x03910DD0 B 0x3912754
	0x03910DD4 STR X30, [X31 - 0x30]!
	0x03910DD8 STP X22, X21, [X31 + 0x10]
	0x03910DDC STP X20, X19, [X31 + 0x20]
	0x03910DE0 ADRP X20, 0xAD1000
	0x03910DE4 ADRP X21, 0x7E3000
	0x03910DE8 LDRB W8, [X20 + 0x817]
	0x03910DEC LDR X21, [X21 + 0x598]
	0x03910DF0 MOV X19, X0
	0x03910DF4 TBNZ X8, 0x0, 0x3910E0C
	0x03910DF8 ADRP X0, 0x7E3000
	0x03910DFC LDR X0, [X0 + 0x598]
	0x03910E00 BL 0x1C16CF4
	0x03910E04 MOVZ W8, 0x1
	0x03910E08 STRB W8, [X20 + 0x817]
	0x03910E0C LDR X0, [X21]
	0x03910E10 LDR W8, [X0 + 0xE0]
	0x03910E14 CBNZ W8, 0x3910E1C
	0x03910E18 BL 0x1C16DFC
	0x03910E1C MOV X0, X19
	0x03910E20 MOV X1, X31
	0x03910E24 MOV X2, X31
	0x03910E28 BL 0x3C3883C
	0x03910E2C TBNZ X0, 0x0, 0x3910E78
	0x03910E30 CBZ X19, 0x3910E90
	0x03910E34 MOV X0, X19
	0x03910E38 MOV X1, X31
	0x03910E3C BL 0x3C0F650
	0x03910E40 CMP W0, 0x1
	0x03910E44 B.LT 0x3910E78
	0x03910E48 MOV W20, W0
	0x03910E4C MOV W21, W31
	0x03910E50 MOV W22, W31
	0x03910E54 MOV X0, X19
	0x03910E58 MOV W1, W22
	0x03910E5C MOV X2, X31
	0x03910E60 BL 0x3C19298
	0x03910E64 ADD W22, W22, 0x1
	0x03910E68 CMP W20, W22
	0x03910E6C ADD W21, W0, W21
	0x03910E70 B.NE 0x3910E54
	0x03910E74 B 0x3910E7C
	0x03910E78 MOV W21, W31
	0x03910E7C MOV W0, W21
	0x03910E80 LDP X20, X19, [X31 + 0x20]
	0x03910E84 LDP X22, X21, [X31 + 0x10]
	0x03910E88 LDR X30, [X31], #0x30
	0x03910E8C RET
	0x03910E90 BL 0x1C16F20
	0x03910E94 STP X30, X23, [X31 - 0x30]!
	0x03910E98 STP X22, X21, [X31 + 0x10]
	0x03910E9C STP X20, X19, [X31 + 0x20]
	0x03910EA0 ADRP X20, 0xAD1000
	0x03910EA4 ADRP X21, 0x7E3000
	0x03910EA8 LDRB W8, [X20 + 0x818]
	0x03910EAC LDR X21, [X21 + 0x598]
	0x03910EB0 MOV X19, X0
	0x03910EB4 TBNZ X8, 0x0, 0x3910ECC
	0x03910EB8 ADRP X0, 0x7E3000
	0x03910EBC LDR X0, [X0 + 0x598]
	0x03910EC0 BL 0x1C16CF4
	0x03910EC4 MOVZ W8, 0x1
	0x03910EC8 STRB W8, [X20 + 0x818]
	0x03910ECC LDR X0, [X21]
	0x03910ED0 LDR W8, [X0 + 0xE0]
	0x03910ED4 CBNZ W8, 0x3910EDC
	0x03910ED8 BL 0x1C16DFC
	0x03910EDC MOV X0, X19
	0x03910EE0 MOV X1, X31
	0x03910EE4 MOV X2, X31
	0x03910EE8 BL 0x3C3883C
	0x03910EEC TBNZ X0, 0x0, 0x3910F8C
	0x03910EF0 CBZ X19, 0x3910FA4
	0x03910EF4 MOV X0, X19
	0x03910EF8 MOV X1, X31
	0x03910EFC BL 0x3C0F650
	0x03910F00 CMP W0, 0x1
	0x03910F04 B.LT 0x3910F8C
	0x03910F08 MOVZ W23, 0xAAAB
	0x03910F0C MOV W21, W0
	0x03910F10 MOV W20, W31
	0x03910F14 MOV W22, W31
	0x03910F18 MOVK W23, 0xAAAA0000
	0x03910F1C MOV X0, X19
	0x03910F20 MOV W1, W22
	0x03910F24 MOV X2, X31
	0x03910F28 BL 0x3C1A1A4
	0x03910F2C CBZ W0, 0x3910F60
	0x03910F30 MOV X0, X19
	0x03910F34 MOV W1, W22
	0x03910F38 MOV X2, X31
	0x03910F3C BL 0x3C1A1A4
	0x03910F40 CMP W0, 0x2
	0x03910F44 B.NE 0x3910F7C
	0x03910F48 MOV X0, X19
	0x03910F4C MOV W1, W22
	0x03910F50 MOV X2, X31
	0x03910F54 BL 0x3C19298
	0x03910F58 ADD W20, W20, W0, 0x2, LSR
	0x03910F5C B 0x3910F7C
	0x03910F60 MOV X0, X19
	0x03910F64 MOV W1, W22
	0x03910F68 MOV X2, X31
	0x03910F6C BL 0x3C19298
	0x03910F70 UMADDL X8, X0, X23, X31
	0x03910F74 UBFM X8, X8, 0x21, 0x3F
	0x03910F78 ADD W20, W8, W20
	0x03910F7C ADD W22, W22, 0x1
	0x03910F80 CMP W21, W22
	0x03910F84 B.NE 0x3910F1C
	0x03910F88 B 0x3910F90
	0x03910F8C MOV W20, W31
	0x03910F90 MOV W0, W20
	0x03910F94 LDP X20, X19, [X31 + 0x20]
	0x03910F98 LDP X22, X21, [X31 + 0x10]
	0x03910F9C LDP X30, X23, [X31], #0x30
	0x03910FA0 RET
	0x03910FA4 BL 0x1C16F20
	0x03910FA8 STP X30, X23, [X31 - 0x30]!
	0x03910FAC STP X22, X21, [X31 + 0x10]
	0x03910FB0 STP X20, X19, [X31 + 0x20]
	0x03910FB4 ADRP X23, 0xAD1000
	0x03910FB8 ADRP X22, 0x7E3000
	0x03910FBC LDRB W8, [X23 + 0x819]
	0x03910FC0 LDR X22, [X22 + 0x598]
	0x03910FC4 MOV W20, W2
	0x03910FC8 MOV X19, X1
	0x03910FCC MOV X21, X0
	0x03910FD0 TBNZ X8, 0x0, 0x391100C
	0x03910FD4 ADRP X0, 0x80F000
	0x03910FD8 LDR X0, [X0 + 0x5A0]
	0x03910FDC BL 0x1C16CF4
	0x03910FE0 ADRP X0, 0x83E000
	0x03910FE4 LDR X0, [X0 + 0x10]
	0x03910FE8 BL 0x1C16CF4
	0x03910FEC ADRP X0, 0x83E000
	0x03910FF0 LDR X0, [X0 + 0x8]
	0x03910FF4 BL 0x1C16CF4
	0x03910FF8 ADRP X0, 0x7E3000
	0x03910FFC LDR X0, [X0 + 0x598]
	0x03911000 BL 0x1C16CF4
	0x03911004 MOVZ W8, 0x1
	0x03911008 STRB W8, [X23 + 0x819]
	0x0391100C LDR X0, [X22]
	0x03911010 LDR W8, [X0 + 0xE0]
	0x03911014 CBNZ W8, 0x391101C
	0x03911018 BL 0x1C16DFC
	0x0391101C MOV X0, X21
	0x03911020 MOV X1, X31
	0x03911024 MOV X2, X31
	0x03911028 BL 0x3C3883C
	0x0391102C TBNZ X0, 0x0, 0x3911254
	0x03911030 LDR X0, [X22]
	0x03911034 LDR W8, [X0 + 0xE0]
	0x03911038 CBNZ W8, 0x3911040
	0x0391103C BL 0x1C16DFC
	0x03911040 MOV X0, X19
	0x03911044 MOV X1, X31
	0x03911048 MOV X2, X31
	0x0391104C BL 0x3C3883C
	0x03911050 TBNZ X0, 0x0, 0x3911274
	0x03911054 CBZ X19, 0x391124C
	0x03911058 MOV X0, X19
	0x0391105C MOV X1, X31
	0x03911060 BL 0x3C19C94
	0x03911064 CBZ X21, 0x391124C
	0x03911068 LDR X1, [X21 + 0x58]
	0x0391106C MOV X0, X19
	0x03911070 MOV X2, X31
	0x03911074 BL 0x3C17F08
	0x03911078 LDR X1, [X21 + 0x60]
	0x0391107C MOV X0, X19
	0x03911080 MOV X2, X31
	0x03911084 BL 0x3C1810C
	0x03911088 MOVZ W1, 0x8
	0x0391108C MOV X0, X21
	0x03911090 BL 0x39112BC
	0x03911094 TBZ X0, 0x0, 0x39110E0
	0x03911098 ADRP X8, 0x83D000
	0x0391109C LDR X8, [X8 + 0x8]
	0x039110A0 LDR X0, [X8]
	0x039110A4 BL 0x1C16F10
	0x039110A8 ADRP X8, 0x83D000
	0x039110AC LDR X8, [X8 + 0x10]
	0x039110B0 MOV X22, X0
	0x039110B4 LDR X1, [X8]
	0x039110B8 BL 0x30CE5F4
	0x039110BC MOVZ W1, 0x2
	0x039110C0 MOV X0, X21
	0x039110C4 MOV X2, X22
	0x039110C8 BL 0x39114F4
	0x039110CC MOVZ W1, 0x2
	0x039110D0 MOV X0, X19
	0x039110D4 MOV X2, X22
	0x039110D8 MOV X3, X31
	0x039110DC BL 0x3C18A7C
	0x039110E0 MOVZ W1, 0x10
	0x039110E4 MOV X0, X21
	0x039110E8 BL 0x39112BC
	0x039110EC TBZ X0, 0x0, 0x3911138
	0x039110F0 ADRP X8, 0x83D000
	0x039110F4 LDR X8, [X8 + 0x8]
	0x039110F8 LDR X0, [X8]
	0x039110FC BL 0x1C16F10
	0x03911100 ADRP X8, 0x83D000
	0x03911104 LDR X8, [X8 + 0x10]
	0x03911108 MOV X22, X0
	0x0391110C LDR X1, [X8]
	0x03911110 BL 0x30CE5F4
	0x03911114 MOVZ W1, 0x3
	0x03911118 MOV X0, X21
	0x0391111C MOV X2, X22
	0x03911120 BL 0x39114F4
	0x03911124 MOVZ W1, 0x3
	0x03911128 MOV X0, X19
	0x0391112C MOV X2, X22
	0x03911130 MOV X3, X31
	0x03911134 BL 0x3C18A7C
	0x03911138 ADRP X22, 0x80E000
	0x0391113C LDR X22, [X22 + 0x5A0]
	0x03911140 MOV X0, X21
	0x03911144 BL 0x3911808
	0x03911148 MOV X1, X0
	0x0391114C MOV X0, X19
	0x03911150 MOV X2, X31
	0x03911154 BL 0x3C17FB4
	0x03911158 MOV X0, X21
	0x0391115C BL 0x3911890
	0x03911160 MOV X1, X0
	0x03911164 MOV X0, X19
	0x03911168 MOV X2, X31
	0x0391116C BL 0x3C18060
	0x03911170 MOVZ W1, 0x20
	0x03911174 MOV X0, X21
	0x03911178 BL 0x39112BC
	0x0391117C TBZ X0, 0x0, 0x3911190
	0x03911180 LDR X1, [X21 + 0x88]
	0x03911184 MOV X0, X19
	0x03911188 MOV X2, X31
	0x0391118C BL 0x3C18264
	0x03911190 LDR X1, [X22]
	0x03911194 MOV X0, X21
	0x03911198 BL 0x21A3894
	0x0391119C CBZ X0, 0x391124C
	0x039111A0 MOV X1, X31
	0x039111A4 BL 0x3C1351C
	0x039111A8 CBZ X0, 0x391124C
	0x039111AC LDR W1, [X0 + 0x18]
	0x039111B0 LDR X0, [X21 + 0x28]
	0x039111B4 MOV W2, W20
	0x039111B8 MOV X3, X31
	0x039111BC BL 0x39390E0
	0x039111C0 CBZ X0, 0x391124C
	0x039111C4 LDR W1, [X0 + 0x18]
	0x039111C8 MOV X20, X0
	0x039111CC MOV X0, X19
	0x039111D0 MOV X2, X31
	0x039111D4 BL 0x3C17654
	0x039111D8 MOV X0, X19
	0x039111DC MOV X1, X31
	0x039111E0 BL 0x3C0F650
	0x039111E4 CMP W0, 0x1
	0x039111E8 B.LT 0x391123C
	0x039111EC MOV X21, X31
	0x039111F0 ADD X22, X20, 0x20
	0x039111F4 LDR W8, [X20 + 0x18]
	0x039111F8 CMP W21, W8
	0x039111FC B.CS 0x3911250
	0x03911200 LDR X8, [X22, X21, LSL #3]
	0x03911204 CBZ X8, 0x391124C
	0x03911208 LDR X1, [X8 + 0x10]
	0x0391120C LDR W2, [X8 + 0x18]
	0x03911210 MOV X0, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xAD2000
	014 Move X21, 0x7E4000
	015 Move W8, [X22+2069]
	016 Move X21, [X21+1432]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x810000
	024 Move X0, [X0+2808]
	025 Call 0x1C17CF4
	026 Move X0, 0x81C000
	027 Move X0, [X0+3488]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x83E000
	033 Move X0, [X0+2696]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E6000
	036 Move X0, [X0+2480]
	037 Call 0x1C17CF4
	038 Move X0, 0x83F000
	039 Move X0, [X0+72]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2069], W8
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {287}
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {294}
	069 Compare X20, 0
	070 JumpIfEqual {286}
	071 Move X0, X20
	072 Move X1, X31
	073 Call Mesh.get_vertices, X0
	074 Compare X0, 0
	075 JumpIfEqual {286}
	076 Move X26, 0x7E6000
	077 Move X26, [X26+2480]
	078 Move W1, [X0+24]
	079 Move X21, 0x81C000
	080 Move X8, [X26]
	081 Move X21, [X21+3488]
	082 Move X0, X8
	083 Call 0x1C17D6C
	084 Move X24, X0
	085 Move X0, X20
	086 Move X1, X31
	087 Call Mesh.get_subMeshCount, X0
	088 Move X8, [X21]
	089 Move W1, W0
	090 Move X0, X8
	091 Call 0x1C17D6C
	092 Move X21, X0
	093 Move X0, X20
	094 Move X1, X31
	095 Call Mesh.get_uv, X0
	096 Compare X0, 0
	097 JumpIfEqual {286}
	098 Move X23, 0x83E000
	099 Move X23, [X23+2696]
	100 Move W1, [X0+24]
	101 Move X8, [X23]
	102 Move X0, X8
	103 Call 0x1C17D6C
	104 Move X22, X0
	105 Move X0, X20
	106 Move X1, X31
	107 Call Mesh.get_uv2, X0
	108 Compare X0, 0
	109 JumpIfEqual {286}
	110 Move X8, [X23]
	111 Move W1, [X0+24]
	112 Move X0, X8
	113 Call 0x1C17D6C
	114 Move X23, X0
	115 Move X0, X20
	116 Move X1, X31
	117 Call Mesh.get_tangents, X0
	118 Compare X0, 0
	119 JumpIfEqual {286}
	120 Move X8, 0x83F000
	121 Move X8, [X8+72]
	122 Move W1, [X0+24]
	123 Move X8, [X8]
	124 Move X0, X8
	125 Call 0x1C17D6C
	126 Move X25, X0
	127 Move X0, X20
	128 Move X1, X31
	129 Call Mesh.get_normals, X0
	130 Compare X0, 0
	131 JumpIfEqual {286}
	132 Move X8, [X26]
	133 Move W1, [X0+24]
	134 Move X0, X8
	135 Call 0x1C17D6C
	136 Move X26, X0
	137 Move X0, X20
	138 Move X1, X31
	139 Call Mesh.get_colors32, X0
	140 Compare X0, 0
	141 JumpIfEqual {286}
	142 Move X8, 0x810000
	143 Move X8, [X8+2808]
	144 Move W1, [X0+24]
	145 Move X8, [X8]
	146 Move X0, X8
	147 Call 0x1C17D6C
	148 Move X27, X0
	149 Move X0, X20
	150 Move X1, X31
	151 Call Mesh.get_vertices, X0
	152 Compare X24, 0
	153 JumpIfEqual {286}
	154 Move W2, [X24+24]
	155 Move X1, X24
	156 Move X3, X31
	157 Call Array.Copy, X0, X1, X2
	158 Compare X21, 0
	159 JumpIfEqual {286}
	160 Move W8, [X21+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X28, X31
	163 Add X29, X21, 32
	164 Move X0, X20
	165 Move W1, W28
	166 Move X2, X31
	167 Call Mesh.GetTriangles, X0, X1
	168 Move W8, [X21+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X29], X0
	171 Add X28, X28, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X20
	174 Move X1, X31
	175 Call Mesh.get_uv, X0
	176 Compare X22, 0
	177 JumpIfEqual {286}
	178 Move W2, [X22+24]
	179 Move X1, X22
	180 Move X3, X31
	181 Call Array.Copy, X0, X1, X2
	182 Move X0, X20
	183 Move X1, X31
	184 Call Mesh.get_uv2, X0
	185 Compare X23, 0
	186 JumpIfEqual {286}
	187 Move W2, [X23+24]
	188 Move X1, X23
	189 Move X3, X31
	190 Call Array.Copy, X0, X1, X2
	191 Move X0, X20
	192 Move X1, X31
	193 Call Mesh.get_normals, X0
	194 Compare X26, 0
	195 JumpIfEqual {286}
	196 Move W2, [X26+24]
	197 Move X1, X26
	198 Move X3, X31
	199 Call Array.Copy, X0, X1, X2
	200 Move X0, X20
	201 Move X1, X31
	202 Call Mesh.get_tangents, X0
	203 Compare X25, 0
	204 JumpIfEqual {286}
	205 Move W2, [X25+24]
	206 Move X1, X25
	207 Move X3, X31
	208 Call Array.Copy, X0, X1, X2
	209 Move X0, X20
	210 Move X1, X31
	211 Call Mesh.get_colors32, X0
	212 Compare X27, 0
	213 JumpIfEqual {286}
	214 Move W2, [X27+24]
	215 Move X1, X27
	216 Move X3, X31
	217 Call Array.Copy, X0, X1, X2
	218 Compare X19, 0
	219 JumpIfEqual {286}
	220 Move X0, X19
	221 Move X1, X31
	222 Call Mesh.Clear, X0
	223 Move X0, X20
	224 Move X1, X31
	225 Call Object.get_name, X0
	226 Move X1, X0
	227 Move X0, X19
	228 Move X2, X31
	229 Call Object.set_name, X0, X1
	230 Move X0, X19
	231 Move X1, X24
	232 Move X2, X31
	233 Call Mesh.set_vertices, X0, X1
	234 Move W1, [X21+24]
	235 Move X0, X19
	236 Move X2, X31
	237 Call Mesh.set_subMeshCount, X0, X1
	238 Move X8, [X21+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X20, X31
	241 And X8, X8, 0
	242 Add X24, X21, 32
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X1, [X24]
	245 Move X0, X19
	246 Move W2, W20
	247 Move X3, X31
	248 Call Mesh.SetTriangles, X0, X1, X2
	249 Move W8, [X21+24]
	250 Add X20, X20, 1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X0, X19
	253 Move X1, X22
	254 Move X2, X31
	255 Call Mesh.set_uv, X0, X1
	256 Move X0, X19
	257 Move X1, X23
	258 Move X2, X31
	259 Call Mesh.set_uv2, X0, X1
	260 Move X0, X19
	261 Move X1, X25
	262 Move X2, X31
	263 Call Mesh.set_tangents, X0, X1
	264 Move X0, X19
	265 Move X1, X26
	266 Move X2, X31
	267 Call Mesh.set_normals, X0, X1
	268 Move X0, X19
	269 Move X1, X27
	270 Move X20, [X31+80]
	271 Move X19, [X31+88]
	272 Move X22, [X31+64]
	273 Move X21, [X31+72]
	274 Move X24, [X31+48]
	275 Move X23, [X31+56]
	276 Move X26, [X31+32]
	277 Move X25, [X31+40]
	278 Move X28, [X31+16]
	279 Move X27, [X31+24]
	280 Move X2, X31
	281 Move X29, [X31+96]
	282 Move X30, [X31+104]
	283 Call Mesh.set_colors32, X0, X1
	284 Return 
	285 Call 0x1C17F28
	286 Call 0x1C17F20
	287 Move X0, 0x7E8000
	288 Move X0, [X0+1320]
	289 Call 0x1C17D08
	290 Call 0x1C17F10
	291 Move X19, X0
	292 Move X0, 0x7EE000
	293 Move X0, [X0+1408]
	294 Move X0, 0x7E8000
	295 Move X0, [X0+1320]
	296 Call 0x1C17D08
	297 Call 0x1C17F10
	298 Move X19, X0
	299 Move X0, 0x812000
	300 Move X0, [X0+632]
	301 Call 0x1C17D08
	302 Move X1, X0
	303 Move X0, X19
	304 Move X2, X31
	305 Call ArgumentNullException..ctor, X0, X1
	306 Move X0, 0x83E000
	307 Move X0, [X0+80]
	308 Call 0x1C17D08
	309 Move X1, X0
	310 Move X0, X19
	311 Call 0x1C17DEC

Method: T GetMeshChannel(UnityEngine.GameObject gameObject, System.Func`2<UnityEngine.Mesh, T> attributeGetter)

Disassembly:
	0x0221C348 CBNZ X8, 0x221C398
	0x0221C34C ADRP X0, 0x1ED7000
	0x0221C350 LDR X0, [X0 + 0xE00]
	0x0221C354 BL 0x1C16CF4
	0x0221C358 ADRP X0, 0x1ED7000
	0x0221C35C LDR X0, [X0 + 0xE18]
	0x0221C360 BL 0x1C16CF4
	0x0221C364 ADRP X0, 0x1F00000
	0x0221C368 LDR X0, [X0 + 0xC0]
	0x0221C36C BL 0x1C16CF4
	0x0221C370 ADRP X0, 0x1F00000
	0x0221C374 LDR X0, [X0 + 0xC8]
	0x0221C378 BL 0x1C16CF4
	0x0221C37C ADRP X0, 0x1F00000
	0x0221C380 LDR X0, [X0 + 0xD0]
	0x0221C384 BL 0x1C16CF4
	0x0221C388 LDR X8, [X21 + 0x38]
	0x0221C38C CBNZ X8, 0x221C398
	0x0221C390 MOV X0, X21
	0x0221C394 BL 0x1C5C6E0
	0x0221C398 ADRP X8, 0x1F00000
	0x0221C39C LDR X8, [X8 + 0xC8]
	0x0221C3A0 MOV X1, X23
	0x0221C3A4 MOV X2, X31
	0x0221C3A8 LDR X0, [X8]
	0x0221C3AC BL 0x321B938
	0x0221C3B0 CBZ X19, 0x221C638
	0x0221C3B4 MOV X1, X0
	0x0221C3B8 MOV X0, X19
	0x0221C3BC MOV X2, X31
	0x0221C3C0 BL 0x32338A8
	0x0221C3C4 CBZ X20, 0x221C600
	0x0221C3C8 LDR X8, [X21 + 0x38]
	0x0221C3CC MOV X0, X20
	0x0221C3D0 LDR X1, [X8 + 0x8]
	0x0221C3D4 BL 0x21B2BA8
	0x0221C3D8 TBZ X0, 0x0, 0x221C600
	0x0221C3DC LDR X8, [X21 + 0x38]
	0x0221C3E0 LDR X1, [X8]
	0x0221C3E4 LDRB W8, [X1 + 0x135]
	0x0221C3E8 TBNZ X8, 0x0, 0x221C3F8
	0x0221C3EC MOV X0, X1
	0x0221C3F0 BL 0x1C5C684
	0x0221C3F4 MOV X1, X0
	0x0221C3F8 LDR X8, [X20]
	0x0221C3FC LDRH W9, [X8 + 0x12E]
	0x0221C400 CBZ X9, 0x221C424
	0x0221C404 LDR X10, [X8 + 0xB0]
	0x0221C408 ADD X10, X10, 0x8
	0x0221C40C LDUR X11, [X10 - 0x8]
	0x0221C410 CMP X11, X1
	0x0221C414 B.EQ 0x221C434
	0x0221C418 SUBS X9, X9, 0x1
	0x0221C41C ADD X10, X10, 0x10
	0x0221C420 B.NE 0x221C40C
	0x0221C424 MOV X0, X20
	0x0221C428 MOV W2, W31
	0x0221C42C BL 0x1C5C788
	0x0221C430 B 0x221C440
	0x0221C434 LDRSW X9, [X10]
	0x0221C438 ADD X8, X8, X9, 0x4, LSL
	0x0221C43C ADD X0, X8, 0x138
	0x0221C440 LDP X8, X1, [X0]
	0x0221C444 MOV X0, X20
	0x0221C448 BLR X8
	0x0221C44C MOV X20, X0
	0x0221C450 CBZ X0, 0x221C63C
	0x0221C454 ADRP X24, 0x1ED7000
	0x0221C458 ADRP X25, 0x1F00000
	0x0221C45C LDR X24, [X24 + 0xE18]
	0x0221C460 LDR X25, [X25 + 0xC0]
	0x0221C464 LDR X8, [X20]
	0x0221C468 LDR X1, [X24]
	0x0221C46C LDRH W9, [X8 + 0x12E]
	0x0221C470 CBZ X9, 0x221C494
	0x0221C474 LDR X10, [X8 + 0xB0]
	0x0221C478 ADD X10, X10, 0x8
	0x0221C47C LDUR X11, [X10 - 0x8]
	0x0221C480 CMP X11, X1
	0x0221C484 B.EQ 0x221C4A4
	0x0221C488 SUBS X9, X9, 0x1
	0x0221C48C ADD X10, X10, 0x10
	0x0221C490 B.NE 0x221C47C
	0x0221C494 MOV X0, X20
	0x0221C498 MOV W2, W31
	0x0221C49C BL 0x1C5C788
	0x0221C4A0 B 0x221C4B0
	0x0221C4A4 LDRSW X9, [X10]
	0x0221C4A8 ADD X8, X8, X9, 0x4, LSL
	0x0221C4AC ADD X0, X8, 0x138
	0x0221C4B0 LDP X8, X1, [X0]
	0x0221C4B4 MOV X0, X20
	0x0221C4B8 BLR X8
	0x0221C4BC TBZ X0, 0x0, 0x221C58C
	0x0221C4C0 LDR X8, [X21 + 0x38]
	0x0221C4C4 LDR X1, [X8 + 0x18]
	0x0221C4C8 LDRB W8, [X1 + 0x135]
	0x0221C4CC TBNZ X8, 0x0, 0x221C4DC
	0x0221C4D0 MOV X0, X1
	0x0221C4D4 BL 0x1C5C684
	0x0221C4D8 MOV X1, X0
	0x0221C4DC LDR X8, [X20]
	0x0221C4E0 LDRH W9, [X8 + 0x12E]
	0x0221C4E4 CBZ X9, 0x221C508
	0x0221C4E8 LDR X10, [X8 + 0xB0]
	0x0221C4EC ADD X10, X10, 0x8
	0x0221C4F0 LDUR X11, [X10 - 0x8]
	0x0221C4F4 CMP X11, X1
	0x0221C4F8 B.EQ 0x221C518
	0x0221C4FC SUBS X9, X9, 0x1
	0x0221C500 ADD X10, X10, 0x10
	0x0221C504 B.NE 0x221C4F0
	0x0221C508 MOV X0, X20
	0x0221C50C MOV W2, W31
	0x0221C510 BL 0x1C5C788
	0x0221C514 B 0x221C524
	0x0221C518 LDRSW X9, [X10]
	0x0221C51C ADD X8, X8, X9, 0x4, LSL
	0x0221C520 ADD X0, X8, 0x138
	0x0221C524 LDP X8, X1, [X0]
	0x0221C528 MOV X0, X20
	0x0221C52C BLR X8
	0x0221C530 LDR X0, [X25]
	0x0221C534 MOV V8.16B, V0.16B
	0x0221C538 MOV V9.16B, V1.16B
	0x0221C53C MOV V10.16B, V2.16B
	0x0221C540 MOV X1, X22
	0x0221C544 MOV X2, X31
	0x0221C548 BL 0x321B938
	0x0221C54C STP S8, S9, [X31]
	0x0221C550 STR S10, [X31 + 0x8]
	0x0221C554 LDR X8, [X21 + 0x38]
	0x0221C558 MOV X23, X0
	0x0221C55C LDR X0, [X8 + 0x28]
	0x0221C560 ADD X1, X31, 0x0
	0x0221C564 BL 0x1C16E04
	0x0221C568 MOV X1, X0
	0x0221C56C MOV X0, X23
	0x0221C570 MOV X2, X31
	0x0221C574 BL 0x321EFD0
	0x0221C578 MOV X1, X0
	0x0221C57C MOV X0, X19
	0x0221C580 MOV X2, X31
	0x0221C584 BL 0x32338A8
	0x0221C588 B 0x221C464
	0x0221C58C MOV X21, X31
	0x0221C590 MOV W22, W31
	0x0221C594 CBZ X20, 0x221C5F8
	0x0221C598 ADRP X10, 0x1ED7000
	0x0221C59C LDR X8, [X20]
	0x0221C5A0 LDR X10, [X10 + 0xE00]
	0x0221C5A4 LDRH W9, [X8 + 0x12E]
	0x0221C5A8 LDR X1, [X10]
	0x0221C5AC CBZ X9, 0x221C5D0
	0x0221C5B0 LDR X10, [X8 + 0xB0]
	0x0221C5B4 ADD X10, X10, 0x8
	0x0221C5B8 LDUR X11, [X10 - 0x8]
	0x0221C5BC CMP X11, X1
	0x0221C5C0 B.EQ 0x221C5E0
	0x0221C5C4 SUBS X9, X9, 0x1
	0x0221C5C8 ADD X10, X10, 0x10
	0x0221C5CC B.NE 0x221C5B8
	0x0221C5D0 MOV X0, X20
	0x0221C5D4 MOV W2, W31
	0x0221C5D8 BL 0x1C5C788
	0x0221C5DC B 0x221C5EC
	0x0221C5E0 LDRSW X9, [X10]
	0x0221C5E4 ADD X8, X8, X9, 0x4, LSL
	0x0221C5E8 ADD X0, X8, 0x138
	0x0221C5EC LDP X8, X1, [X0]
	0x0221C5F0 MOV X0, X20
	0x0221C5F4 BLR X8
	0x0221C5F8 CBNZ X21, 0x221C640
	0x0221C5FC CBZ W22, 0x221C618
	0x0221C600 ADRP X8, 0x1F00000
	0x0221C604 LDR X8, [X8 + 0xD0]
	0x0221C608 MOV X0, X19
	0x0221C60C MOV X2, X31
	0x0221C610 LDR X1, [X8]
	0x0221C614 BL 0x32338A8
	0x0221C618 LDP X20, X19, [X31 + 0x60]
	0x0221C61C LDP X22, X21, [X31 + 0x50]
	0x0221C620 LDP X24, X23, [X31 + 0x40]
	0x0221C624 LDP X30, X25, [X31 + 0x30]
	0x0221C628 LDP D9, D8, [X31 + 0x20]
	0x0221C62C LDR V10, [X31 + 0x10]
	0x0221C630 ADD X31, X31, 0x70
	0x0221C634 RET
	0x0221C638 BL 0x1C16F20
	0x0221C63C BL 0x1C16F20
	0x0221C640 MOV X0, X21
	0x0221C644 BL 0x1C16F18
	0x0221C648 B 0x221C660
	0x0221C64C B 0x221C660
	0x0221C650 B 0x221C660
	0x0221C654 B 0x221C660
	0x0221C658 B 0x221C660
	0x0221C65C B 0x221C660
	0x0221C660 MOV X22, X0
	0x0221C664 CMP W1, 0x1
	0x0221C668 B.NE 0x221C688
	0x0221C66C MOV X0, X22
	0x0221C670 BL 0x3EB1AD0
	0x0221C674 LDR X21, [X0]
	0x0221C678 BL 0x3EB1AE0
	0x0221C67C MOVZ W22, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {31}
	014 Move X0, 0x1EDA000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move X0, 0x1EDF000
	018 Move X0, [X0+1920]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EDF000
	021 Move X0, [X0+752]
	022 Call 0x1C17CF4
	023 Move X0, 0x1ED8000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X24, 0x1ED8000
	032 Move X24, [X24+1432]
	033 Move X0, [X24]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X22
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {215}
	046 Compare X19, 0
	047 JumpIfEqual {222}
	048 Compare X22, 0
	049 JumpIfEqual {214}
	050 Move X8, 0x1EDA000
	051 Move X8, [X8+360]
	052 Move X0, X22
	053 Move X1, [X8]
	054 Call 0x21E62E4, X0
	055 Move X8, [X24]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move X21, X31
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {77}
	071 Compare X20, 0
	072 JumpIfEqual {214}
	073 Move X0, X20
	074 Move X1, X31
	075 Call MeshFilter.get_sharedMesh, X0
	076 Move X21, X0
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Equality, X0, X1
	086 Move X23, X31
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {195}
	091 Compare X21, 0
	092 JumpIfEqual {214}
	093 Move X0, X21
	094 Move X1, X31
	095 Call Mesh.get_vertexCount, X0
	096 Move X8, 0x1EDF000
	097 Move X8, [X8+1920]
	098 Move W20, W0
	099 Move X0, X22
	100 Move X1, [X8]
	101 Call 0x21E62E4, X0
	102 Move X8, [X24]
	103 Move X23, X0
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X23
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 Move X22, X31
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {124}
	118 Compare X23, 0
	119 JumpIfEqual {214}
	120 Move X0, X23
	121 Move X1, X31
	122 Call MeshRenderer.get_additionalVertexStreams, X0
	123 Move X22, X0
	124 Move X0, [X24]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X22
	130 Move X1, X31
	131 Move X2, X31
	132 Call Object.op_Inequality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {170}
	137 Move X8, [X19+24]
	138 Move X0, [X19+64]
	139 Move X2, [X19+40]
	140 Move X1, X22
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X0, 0
	143 JumpIfEqual {170}
	144 Move X10, 0x1EDF000
	145 Move X8, [X0]
	146 Move X10, [X10+752]
	147 Move X23, X0
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move W2, 1
	159 Move X0, X23
	160 Call 0x1C5D788
	161 Move W9, [X10]
	162 Add W9, W9, 1
	163 Add X8, X8, W9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X1, [X0+8]
	167 Move X0, X23
	168 NotImplemented "Instruction BLR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X8, [X19+24]
	171 Move X0, [X19+64]
	172 Move X2, [X19+40]
	173 Move X1, X21
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Compare X0, 0
	176 JumpIfEqual {194}
	177 Move X10, 0x1EDF000
	178 Move X8, [X0]
	179 Move X10, [X10+752]
	180 Move X19, X0
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Move X1, [X10]
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move W2, 1
	192 Move X0, X19
	193 Call 0x1C5D788
	194 Move X23, X31
	195 Move X0, X23
	196 Move W9, [X10]
	197 Add W9, W9, 1
	198 Add X8, X8, W9
	199 Add X0, X8, 312
	200 Move X8, [X0]
	201 Move X1, [X0+8]
	202 Move X0, X19
	203 NotImplemented "Instruction BLR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 NotImplemented "Instruction CSEL not yet implemented."
	206 Move X20, [X31+48]
	207 Move X19, [X31+56]
	208 Move X22, [X31+32]
	209 Move X21, [X31+40]
	210 Move X24, [X31+16]
	211 Move X23, [X31+24]
	212 Move X30, [X31+64]
	213 Return X0
	214 Call 0x1C17F20
	215 Move X0, 0x1EDD000
	216 Move X0, [X0+1320]
	217 Call 0x1C17D08
	218 Call 0x1C17F10
	219 Move X19, X0
	220 Move X0, 0x1F01000
	221 Move X0, [X0+176]
	222 Move X0, 0x1EDD000
	223 Move X0, [X0+1320]
	224 Call 0x1C17D08
	225 Call 0x1C17F10
	226 Move X19, X0
	227 Move X0, 0x1F01000
	228 Move X0, [X0+184]
	229 Call 0x1C17D08
	230 Move X1, X0
	231 Move X0, X19
	232 Move X2, X31
	233 Call ArgumentNullException..ctor, X0, X1
	234 Move X0, X19
	235 Move X1, X20
	236 Call 0x1C17DEC

Method: System.Void PrintAttribute(System.Text.StringBuilder sb, System.String title, System.Collections.Generic.IEnumerable`1<T> attrib, System.String fmt)

Disassembly:
	0x0221CB28 ADD X29, X31, 0x0
	0x0221CB2C SUB X31, X31, 0x20
	0x0221CB30 MRS X28, 0xC000
	0x0221CB34 LDR X8, [X28 + 0x28]
	0x0221CB38 MOV X21, X4
	0x0221CB3C MOV X22, X3
	0x0221CB40 MOV X20, X2
	0x0221CB44 STUR X8, [X29 - 0x8]
	0x0221CB48 LDR X8, [X4 + 0x38]
	0x0221CB4C MOV X27, X1
	0x0221CB50 MOV X19, X0
	0x0221CB54 CBNZ X8, 0x221CBA8
	0x0221CB58 ADRP X0, 0x1ED7000
	0x0221CB5C LDR X0, [X0 + 0xE00]
	0x0221CB60 BL 0x1C16CF4
	0x0221CB64 ADRP X0, 0x1ED7000
	0x0221CB68 LDR X0, [X0 + 0xE18]
	0x0221CB6C BL 0x1C16CF4
	0x0221CB70 ADRP X0, 0x1F00000
	0x0221CB74 LDR X0, [X0 + 0xC0]
	0x0221CB78 BL 0x1C16CF4
	0x0221CB7C ADRP X0, 0x1F00000
	0x0221CB80 LDR X0, [X0 + 0xC8]
	0x0221CB84 BL 0x1C16CF4
	0x0221CB88 ADRP X0, 0x1F00000
	0x0221CB8C LDR X0, [X0 + 0xD0]
	0x0221CB90 BL 0x1C16CF4
	0x0221CB94 LDR X8, [X21 + 0x38]
	0x0221CB98 CBNZ X8, 0x221CBA8
	0x0221CB9C MOV X0, X21
	0x0221CBA0 BL 0x1C5C6E0
	0x0221CBA4 LDR X8, [X21 + 0x38]
	0x0221CBA8 LDR X8, [X8 + 0x28]
	0x0221CBAC LDR W23, [X8 + 0xFC]
	0x0221CBB0 ADD X8, X31, 0x0
	0x0221CBB4 ADD X9, X23, 0xF
	0x0221CBB8 AND X9, X9, 0x1FFFFFFFF
	0x0221CBBC SUB X24, X8, X9
	0x0221CBC0 ADD X31, X24, 0x0
	0x0221CBC4 ADD X8, X31, 0x0
	0x0221CBC8 SUB X25, X8, X9
	0x0221CBCC ADD X31, X25, 0x0
	0x0221CBD0 ADD X8, X31, 0x0
	0x0221CBD4 SUB X26, X8, X9
	0x0221CBD8 ADD X31, X26, 0x0
	0x0221CBDC MOV X0, X26
	0x0221CBE0 MOV W1, W31
	0x0221CBE4 MOV X2, X23
	0x0221CBE8 BL 0x3EB1B10
	0x0221CBEC ADRP X8, 0x1F00000
	0x0221CBF0 LDR X8, [X8 + 0xC8]
	0x0221CBF4 MOV X1, X27
	0x0221CBF8 MOV X2, X31
	0x0221CBFC LDR X0, [X8]
	0x0221CC00 BL 0x321B938
	0x0221CC04 CBZ X19, 0x221CEC4
	0x0221CC08 MOV X1, X0
	0x0221CC0C MOV X0, X19
	0x0221CC10 MOV X2, X31
	0x0221CC14 BL 0x32338A8
	0x0221CC18 CBZ X20, 0x221CE7C
	0x0221CC1C LDR X8, [X21 + 0x38]
	0x0221CC20 MOV X0, X20
	0x0221CC24 LDR X1, [X8 + 0x8]
	0x0221CC28 LDR X8, [X1]
	0x0221CC2C BLR X8
	0x0221CC30 TBZ X0, 0x0, 0x221CE7C
	0x0221CC34 LDR X8, [X21 + 0x38]
	0x0221CC38 LDR X1, [X8]
	0x0221CC3C LDRB W8, [X1 + 0x135]
	0x0221CC40 TBNZ X8, 0x0, 0x221CC50
	0x0221CC44 MOV X0, X1
	0x0221CC48 BL 0x1C5C684
	0x0221CC4C MOV X1, X0
	0x0221CC50 LDR X8, [X20]
	0x0221CC54 LDRH W9, [X8 + 0x12E]
	0x0221CC58 CBZ X9, 0x221CC7C
	0x0221CC5C LDR X10, [X8 + 0xB0]
	0x0221CC60 ADD X10, X10, 0x8
	0x0221CC64 LDUR X11, [X10 - 0x8]
	0x0221CC68 CMP X11, X1
	0x0221CC6C B.EQ 0x221CC8C
	0x0221CC70 SUBS X9, X9, 0x1
	0x0221CC74 ADD X10, X10, 0x10
	0x0221CC78 B.NE 0x221CC64
	0x0221CC7C MOV X0, X20
	0x0221CC80 MOV W2, W31
	0x0221CC84 BL 0x1C5C788
	0x0221CC88 B 0x221CC98
	0x0221CC8C LDRSW X9, [X10]
	0x0221CC90 ADD X8, X8, X9, 0x4, LSL
	0x0221CC94 ADD X0, X8, 0x138
	0x0221CC98 LDP X8, X1, [X0]
	0x0221CC9C MOV X0, X20
	0x0221CCA0 STUR X28, [X29 - 0x18]
	0x0221CCA4 BLR X8
	0x0221CCA8 MOV X20, X0
	0x0221CCAC CBZ X0, 0x221CEC8
	0x0221CCB0 ADRP X28, 0x1ED7000
	0x0221CCB4 LDR X28, [X28 + 0xE18]
	0x0221CCB8 LDR X8, [X20]
	0x0221CCBC LDR X1, [X28]
	0x0221CCC0 LDRH W9, [X8 + 0x12E]
	0x0221CCC4 CBZ X9, 0x221CCE8
	0x0221CCC8 LDR X10, [X8 + 0xB0]
	0x0221CCCC ADD X10, X10, 0x8
	0x0221CCD0 LDUR X11, [X10 - 0x8]
	0x0221CCD4 CMP X11, X1
	0x0221CCD8 B.EQ 0x221CCF8
	0x0221CCDC SUBS X9, X9, 0x1
	0x0221CCE0 ADD X10, X10, 0x10
	0x0221CCE4 B.NE 0x221CCD0
	0x0221CCE8 MOV X0, X20
	0x0221CCEC MOV W2, W31
	0x0221CCF0 BL 0x1C5C788
	0x0221CCF4 B 0x221CD04
	0x0221CCF8 LDRSW X9, [X10]
	0x0221CCFC ADD X8, X8, X9, 0x4, LSL
	0x0221CD00 ADD X0, X8, 0x138
	0x0221CD04 LDP X8, X1, [X0]
	0x0221CD08 MOV X0, X20
	0x0221CD0C BLR X8
	0x0221CD10 TBZ X0, 0x0, 0x221CE04
	0x0221CD14 LDR X8, [X21 + 0x38]
	0x0221CD18 LDR X1, [X8 + 0x18]
	0x0221CD1C LDRB W8, [X1 + 0x135]
	0x0221CD20 TBNZ X8, 0x0, 0x221CD30
	0x0221CD24 MOV X0, X1
	0x0221CD28 BL 0x1C5C684
	0x0221CD2C MOV X1, X0
	0x0221CD30 LDR X8, [X20]
	0x0221CD34 LDRH W9, [X8 + 0x12E]
	0x0221CD38 CBZ X9, 0x221CD5C
	0x0221CD3C LDR X10, [X8 + 0xB0]
	0x0221CD40 ADD X10, X10, 0x8
	0x0221CD44 LDUR X11, [X10 - 0x8]
	0x0221CD48 CMP X11, X1
	0x0221CD4C B.EQ 0x221CD6C
	0x0221CD50 SUBS X9, X9, 0x1
	0x0221CD54 ADD X10, X10, 0x10
	0x0221CD58 B.NE 0x221CD44
	0x0221CD5C MOV X0, X20
	0x0221CD60 MOV W2, W31
	0x0221CD64 BL 0x1C5C788
	0x0221CD68 B 0x221CD78
	0x0221CD6C LDRSW X9, [X10]
	0x0221CD70 ADD X8, X8, X9, 0x4, LSL
	0x0221CD74 ADD X0, X8, 0x138
	0x0221CD78 STUR X24, [X29 - 0x10]
	0x0221CD7C LDR X1, [X0 + 0x8]
	0x0221CD80 LDP X0, X8, [X1 + 0x8]
	0x0221CD84 SUB X3, X29, 0x10
	0x0221CD88 MOV X2, X20
	0x0221CD8C MOV X4, X24
	0x0221CD90 BLR X8
	0x0221CD94 MOV X0, X26
	0x0221CD98 MOV X1, X24
	0x0221CD9C MOV X2, X23
	0x0221CDA0 BL 0x3EB1AC0
	0x0221CDA4 ADRP X8, 0x1F00000
	0x0221CDA8 LDR X8, [X8 + 0xC0]
	0x0221CDAC LDR X0, [X8]
	0x0221CDB0 MOV X1, X22
	0x0221CDB4 MOV X2, X31
	0x0221CDB8 BL 0x321B938
	0x0221CDBC MOV X27, X0
	0x0221CDC0 MOV X0, X25
	0x0221CDC4 MOV X1, X26
	0x0221CDC8 MOV X2, X23
	0x0221CDCC BL 0x3EB1AC0
	0x0221CDD0 LDR X8, [X21 + 0x38]
	0x0221CDD4 LDR X0, [X8 + 0x28]
	0x0221CDD8 MOV X1, X25
	0x0221CDDC BL 0x1C16E04
	0x0221CDE0 MOV X1, X0
	0x0221CDE4 MOV X0, X27
	0x0221CDE8 MOV X2, X31
	0x0221CDEC BL 0x321EFD0
	0x0221CDF0 MOV X1, X0
	0x0221CDF4 MOV X0, X19
	0x0221CDF8 MOV X2, X31
	0x0221CDFC BL 0x32338A8
	0x0221CE00 B 0x221CCB8
	0x0221CE04 MOV X21, X31
	0x0221CE08 MOV W22, W31
	0x0221CE0C LDUR X28, [X29 - 0x18]
	0x0221CE10 CBZ X20, 0x221CE74
	0x0221CE14 ADRP X10, 0x1ED7000
	0x0221CE18 LDR X8, [X20]
	0x0221CE1C LDR X10, [X10 + 0xE00]
	0x0221CE20 LDRH W9, [X8 + 0x12E]
	0x0221CE24 LDR X1, [X10]
	0x0221CE28 CBZ X9, 0x221CE4C
	0x0221CE2C LDR X10, [X8 + 0xB0]
	0x0221CE30 ADD X10, X10, 0x8
	0x0221CE34 LDUR X11, [X10 - 0x8]
	0x0221CE38 CMP X11, X1
	0x0221CE3C B.EQ 0x221CE5C
	0x0221CE40 SUBS X9, X9, 0x1
	0x0221CE44 ADD X10, X10, 0x10
	0x0221CE48 B.NE 0x221CE34
	0x0221CE4C MOV X0, X20
	0x0221CE50 MOV W2, W31
	0x0221CE54 BL 0x1C5C788
	0x0221CE58 B 0x221CE68
	0x0221CE5C LDRSW X9, [X10]
	0x0221CE60 ADD X8, X8, X9, 0x4, LSL
	0x0221CE64 ADD X0, X8, 0x138
	0x0221CE68 LDP X8, X1, [X0]
	0x0221CE6C MOV X0, X20
	0x0221CE70 BLR X8
	0x0221CE74 CBNZ X21, 0x221CECC
	0x0221CE78 CBZ W22, 0x221CE94
	0x0221CE7C ADRP X8, 0x1F00000
	0x0221CE80 LDR X8, [X8 + 0xD0]
	0x0221CE84 MOV X0, X19
	0x0221CE88 MOV X2, X31
	0x0221CE8C LDR X1, [X8]
	0x0221CE90 BL 0x32338A8
	0x0221CE94 LDR X8, [X28 + 0x28]
	0x0221CE98 LDUR X9, [X29 - 0x8]
	0x0221CE9C CMP X8, X9
	0x0221CEA0 B.NE 0x221CED4
	0x0221CEA4 ADD X31, X29, 0x0
	0x0221CEA8 LDP X20, X19, [X31 + 0x50]
	0x0221CEAC LDP X22, X21, [X31 + 0x40]
	0x0221CEB0 LDP X24, X23, [X31 + 0x30]
	0x0221CEB4 LDP X26, X25, [X31 + 0x20]
	0x0221CEB8 LDP X28, X27, [X31 + 0x10]
	0x0221CEBC LDP X29, X30, [X31], #0x60
	0x0221CEC0 RET
	0x0221CEC4 BL 0x1C16F20
	0x0221CEC8 BL 0x1C16F20
	0x0221CECC MOV X0, X21
	0x0221CED0 BL 0x1C16F18
	0x0221CED4 BL 0x3EB1B20
	0x0221CED8 B 0x221CEF0
	0x0221CEDC B 0x221CEF0
	0x0221CEE0 B 0x221CEF0
	0x0221CEE4 B 0x221CEF0
	0x0221CEE8 B 0x221CEF0
	0x0221CEEC B 0x221CEF0
	0x0221CEF0 MOV X22, X0
	0x0221CEF4 CMP W1, 0x1
	0x0221CEF8 B.NE 0x221CF14
	0x0221CEFC MOV X0, X22
	0x0221CF00 BL 0x3EB1AD0
	0x0221CF04 LDR X21, [X0]
	0x0221CF08 BL 0x3EB1AE0
	0x0221CF0C MOVZ W22, 0x1
	0x0221CF10 B 0x221CE0C
	0x0221CF14 MOV X21, X31
	0x0221CF18 B 0x221CF20
	0x0221CF1C MOV X22, X0
	0x0221CF20 CBZ X20, 0x221CF84
	0x0221CF24 ADRP X10, 0x1ED7000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, [X4+56]
	015 Move X21, X4
	016 Move X22, X3
	017 Move X20, X2
	018 Move X23, X1
	019 Move X19, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {42}
	022 Move X0, 0x1ED8000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x1ED8000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F01000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move X0, 0x1F01000
	032 Move X0, [X0+200]
	033 Call 0x1C17CF4
	034 Move X0, 0x1F01000
	035 Move X0, [X0+208]
	036 Call 0x1C17CF4
	037 Move X8, [X21+56]
	038 Compare X8, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X21
	041 Call 0x1C5D6E0
	042 Move X8, 0x1F01000
	043 Move X8, [X8+200]
	044 Move X1, X23
	045 Move X2, X31
	046 Move X0, [X8]
	047 Call String.Concat, X0, X1
	048 Compare X19, 0
	049 JumpIfEqual {232}
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call StringBuilder.AppendLine, X0, X1
	054 Compare X20, 0
	055 JumpIfEqual {212}
	056 Move X8, [X21+56]
	057 Move X0, X20
	058 Move X1, [X8+8]
	059 Call 0x21B3148, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {212}
	064 Move X8, [X21+56]
	065 Move X1, [X8]
	066 Move W8, [X1+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Move X0, X1
	072 Call 0x1C5D684
	073 Move X1, X0
	074 Move X8, [X20]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X20
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X20, X0
	095 Compare X0, 0
	096 JumpIfEqual {233}
	097 Move X24, 0x1ED8000
	098 Move X25, 0x1F01000
	099 Move X24, [X24+3608]
	100 Move X25, [X25+192]
	101 Move X8, [X20]
	102 Move X1, [X24]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X20
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {181}
	126 Move X8, [X21+56]
	127 Move X1, [X8+24]
	128 Move W8, [X1+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move X0, X1
	134 Call 0x1C5D684
	135 Move X1, X0
	136 Move X8, [X20]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X20
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X0, [X25]
	157 Move V8, V0
	158 Move V9, V1
	159 Move V10, V2
	160 Move V11, V3
	161 Move X1, X22
	162 Move X2, X31
	163 Call String.Concat, X0, X1
	164 Move [X31], S8
	165 Move [X31+8], S9
	166 Move [X31+8], S10
	167 Move [X31+16], S11
	168 Move X8, [X21+56]
	169 Move X23, X0
	170 Move X0, [X8+40]
	171 Add X1, X31, 0
	172 Call 0x1C17E04
	173 Move X1, X0
	174 Move X0, X23
	175 Move X2, X31
	176 Call String.Format, X0, X1
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call StringBuilder.AppendLine, X0, X1
	181 Move X21, X31
	182 Move W22, W31
	183 Compare X20, 0
	184 JumpIfEqual {208}
	185 Move X10, 0x1ED8000
	186 Move X8, [X20]
	187 Move X10, [X10+3584]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move X1, [X10]
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X20
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X21, 0
	209 JumpIfNotEqual {234}
	210 Compare W22, 0
	211 JumpIfEqual {218}
	212 Move X8, 0x1F01000
	213 Move X8, [X8+208]
	214 Move X0, X19
	215 Move X2, X31
	216 Move X1, [X8]
	217 Call StringBuilder.AppendLine, X0, X1
	218 Move X20, [X31+96]
	219 Move X19, [X31+104]
	220 Move X22, [X31+80]
	221 Move X21, [X31+88]
	222 Move X24, [X31+64]
	223 Move X23, [X31+72]
	224 Move X30, [X31+48]
	225 Move X25, [X31+56]
	226 Move D9, [X31+32]
	227 Move D8, [X31+40]
	228 Move D11, [X31+16]
	229 Move D10, [X31+24]
	230 Add X31, X31, 112
	231 Return 
	232 Call 0x1C17F20
	233 Call 0x1C17F20
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Move X22, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X22
	239 Call 0x3EB2AD0
	240 Move X21, [X0]
	241 Call 0x3EB2AE0
	242 Move W22, 1
	243 Compare X20, 0
	244 JumpIfNotEqual {185}
	245 Move X21, X31
	246 Move X22, X0
	247 Compare X20, 0
	248 JumpIfEqual {272}
	249 Move X10, 0x1ED8000
	250 Move X8, [X20]
	251 Move X10, [X10+3584]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X1, [X10]
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move X0, X20
	263 Move W2, W31
	264 Call 0x1C5D788
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Add X8, X8, X9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X20
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Compare X21, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X22
	275 Call 0x1D2D690
	276 Move X0, X21
	277 Call 0x1C17F18
	278 Call 0x1991590

Method: System.String Print(UnityEngine.Mesh mesh)

Disassembly:
	0x03911214 MOV W3, W21
	0x03911218 MOV W4, W31
	0x0391121C MOV X5, X31
	0x03911220 BL 0x3C1985C
	0x03911224 MOV X0, X19
	0x03911228 MOV X1, X31
	0x0391122C BL 0x3C0F650
	0x03911230 ADD X21, X21, 0x1
	0x03911234 CMP W21, W0
	0x03911238 B.LT 0x39111F4
	0x0391123C LDP X20, X19, [X31 + 0x20]
	0x03911240 LDP X22, X21, [X31 + 0x10]
	0x03911244 LDP X30, X23, [X31], #0x30
	0x03911248 RET
	0x0391124C BL 0x1C16F20
	0x03911250 BL 0x1C16F28
	0x03911254 ADRP X0, 0x7E7000
	0x03911258 LDR X0, [X0 + 0x528]
	0x0391125C BL 0x1C16D08
	0x03911260 BL 0x1C16F10
	0x03911264 MOV X19, X0
	0x03911268 ADRP X0, 0x83D000
	0x0391126C LDR X0, [X0 + 0x148]
	0x03911270 B 0x3911290
	0x03911274 ADRP X0, 0x7E7000
	0x03911278 LDR X0, [X0 + 0x528]
	0x0391127C BL 0x1C16D08
	0x03911280 BL 0x1C16F10
	0x03911284 MOV X19, X0
	0x03911288 ADRP X0, 0x83D000
	0x0391128C LDR X0, [X0 + 0x150]
	0x03911290 BL 0x1C16D08
	0x03911294 MOV X1, X0
	0x03911298 MOV X0, X19
	0x0391129C MOV X2, X31
	0x039112A0 BL 0x330E100
	0x039112A4 ADRP X0, 0x83D000
	0x039112A8 LDR X0, [X0 + 0x158]
	0x039112AC BL 0x1C16D08
	0x039112B0 MOV X1, X0
	0x039112B4 MOV X0, X19
	0x039112B8 BL 0x1C16DEC
	0x039112BC STP X30, X21, [X31 - 0x20]!
	0x039112C0 STP X20, X19, [X31 + 0x10]
	0x039112C4 ADRP X21, 0xAD0000
	0x039112C8 LDRB W8, [X21 + 0x843]
	0x039112CC MOV W20, W1
	0x039112D0 MOV X19, X0
	0x039112D4 TBNZ X8, 0x0, 0x39112F8
	0x039112D8 ADRP X0, 0x83D000
	0x039112DC LDR X0, [X0 + 0x30]
	0x039112E0 BL 0x1C16CF4
	0x039112E4 ADRP X0, 0x7E2000
	0x039112E8 LDR X0, [X0 + 0x598]
	0x039112EC BL 0x1C16CF4
	0x039112F0 MOVZ W8, 0x1
	0x039112F4 STRB W8, [X21 + 0x843]
	0x039112F8 LDR X9, [X19 + 0x58]
	0x039112FC CBZ X9, 0x3911308
	0x03911300 LDR W8, [X9 + 0x18]
	0x03911304 B 0x391130C
	0x03911308 MOV W8, W31
	0x0391130C CMP X9, 0x0
	0x03911310 CSET W9, EQ
	0x03911314 AND W9, W20, W9, 0x0
	0x03911318 TBNZ X20, 0x6, 0x3911324
	0x0391131C MOV W10, W31
	0x03911320 B 0x3911348
	0x03911324 LDR X10, [X19 + 0x80]
	0x03911328 AND W11, W20, 0x40
	0x0391132C AND W9, W9, W11, 0x6
	0x03911330 CBZ X10, 0x3911344
	0x03911334 LDR W10, [X10 + 0x18]
	0x03911338 CMP W8, W10
	0x0391133C CSET W10, NE
	0x03911340 B 0x3911348
	0x03911344 MOVZ W10, 0x1
	0x03911348 ORR W9, W10, W9, 0x0
	0x0391134C CMP W9, 0x0
	0x03911350 CSET W9, NE
	0x03911354 TBNZ X20, 0x1, 0x3911360
	0x03911358 MOV W10, W31
	0x0391135C B 0x3911384
	0x03911360 LDR X10, [X19 + 0x60]
	0x03911364 AND W11, W20, 0x2
	0x03911368 AND W9, W9, W11, 0x1
	0x0391136C CBZ X10, 0x3911380
	0x03911370 LDR W10, [X10 + 0x18]
	0x03911374 CMP W8, W10
	0x03911378 CSET W10, NE
	0x0391137C B 0x3911384
	0x03911380 MOVZ W10, 0x1
	0x03911384 ORR W9, W10, W9, 0x0
	0x03911388 CMP W9, 0x0
	0x0391138C CSET W9, NE
	0x03911390 TBNZ X20, 0x3, 0x391139C
	0x03911394 MOV W10, W31
	0x03911398 B 0x39113C0
	0x0391139C LDR X10, [X19 + 0x68]
	0x039113A0 AND W11, W20, 0x8
	0x039113A4 AND W9, W9, W11, 0x3
	0x039113A8 CBZ X10, 0x39113BC
	0x039113AC LDR W10, [X10 + 0x18]
	0x039113B0 CMP W10, W8
	0x039113B4 CSET W10, NE
	0x039113B8 B 0x39113C0
	0x039113BC MOVZ W10, 0x1
	0x039113C0 ORR W9, W10, W9, 0x0
	0x039113C4 CMP W9, 0x0
	0x039113C8 CSET W9, NE
	0x039113CC TBNZ X20, 0x4, 0x39113D8
	0x039113D0 MOV W10, W31
	0x039113D4 B 0x39113FC
	0x039113D8 LDR X10, [X19 + 0x70]
	0x039113DC AND W11, W20, 0x10
	0x039113E0 AND W9, W9, W11, 0x4
	0x039113E4 CBZ X10, 0x39113F8
	0x039113E8 LDR W10, [X10 + 0x18]
	0x039113EC CMP W10, W8
	0x039113F0 CSET W10, NE
	0x039113F4 B 0x39113FC
	0x039113F8 MOVZ W10, 0x1
	0x039113FC ORR W9, W10, W9, 0x0
	0x03911400 CMP W9, 0x0
	0x03911404 CSET W9, NE
	0x03911408 TBNZ X20, 0x5, 0x3911414
	0x0391140C MOV W10, W31
	0x03911410 B 0x3911438
	0x03911414 LDR X10, [X19 + 0x88]
	0x03911418 AND W11, W20, 0x20
	0x0391141C AND W9, W9, W11, 0x5
	0x03911420 CBZ X10, 0x3911434
	0x03911424 LDR W10, [X10 + 0x18]
	0x03911428 CMP W8, W10
	0x0391142C CSET W10, NE
	0x03911430 B 0x3911438
	0x03911434 MOVZ W10, 0x1
	0x03911438 ORR W9, W10, W9, 0x0
	0x0391143C CMP W9, 0x0
	0x03911440 CSET W9, NE
	0x03911444 TBNZ X20, 0x7, 0x3911450
	0x03911448 MOV W8, W31
	0x0391144C B 0x3911474
	0x03911450 LDR X10, [X19 + 0x78]
	0x03911454 AND W11, W20, 0x80
	0x03911458 AND W9, W9, W11, 0x7
	0x0391145C CBZ X10, 0x3911470
	0x03911460 LDR W10, [X10 + 0x18]
	0x03911464 CMP W8, W10
	0x03911468 CSET W8, NE
	0x0391146C B 0x3911474
	0x03911470 MOVZ W8, 0x1
	0x03911474 ORR W21, W8, W9, 0x0
	0x03911478 TBZ X20, 0x2, 0x39114DC
	0x0391147C MOV X0, X19
	0x03911480 BL 0x3912CAC
	0x03911484 ADRP X8, 0x7E2000
	0x03911488 LDR X8, [X8 + 0x598]
	0x0391148C MOV X20, X0
	0x03911490 LDR X8, [X8]
	0x03911494 LDR W9, [X8 + 0xE0]
	0x03911498 CBNZ W9, 0x39114A4
	0x0391149C MOV X0, X8
	0x039114A0 BL 0x1C16DFC
	0x039114A4 MOV X0, X20
	0x039114A8 MOV X1, X31
	0x039114AC MOV X2, X31
	0x039114B0 BL 0x3C354F8
	0x039114B4 TBZ X0, 0x0, 0x39114DC
	0x039114B8 MOV X0, X19
	0x039114BC BL 0x3912CAC
	0x039114C0 CBZ X0, 0x39114F0
	0x039114C4 MOVZ W1, 0x5
	0x039114C8 MOV X2, X31
	0x039114CC BL 0x3C17434
	0x039114D0 ORN W8, W31, W0, 0x0
	0x039114D4 AND W8, W8, 0x1
	0x039114D8 ORR W21, W21, W8, 0x0
	0x039114DC LDP X20, X19, [X31 + 0x10]
	0x039114E0 CMP W21, 0x0
	0x039114E4 CSET W0, EQ
	0x039114E8 LDP X30, X21, [X31], #0x20
	0x039114EC RET
	0x039114F0 BL 0x1C16F20
	0x039114F4 STP X30, X23, [X31 - 0x30]!
	0x039114F8 STP X22, X21, [X31 + 0x10]
	0x039114FC STP X20, X19, [X31 + 0x20]
	0x03911500 ADRP X22, 0xAD0000
	0x03911504 LDRB W8, [X22 + 0x85C]
	0x03911508 MOV X19, X2
	0x0391150C MOV W21, W1
	0x03911510 MOV X20, X0
	0x03911514 TBNZ X8, 0x0, 0x3911550
	0x03911518 ADRP X0, 0x83D000
	0x0391151C LDR X0, [X0 + 0x160]
	0x03911520 BL 0x1C16CF4
	0x03911524 ADRP X0, 0x83C000
	0x03911528 LDR X0, [X0 + 0xFF0]
	0x0391152C BL 0x1C16CF4
	0x03911530 ADRP X0, 0x83C000
	0x03911534 LDR X0, [X0 + 0xFF8]
	0x03911538 BL 0x1C16CF4
	0x0391153C ADRP X0, 0x7E2000
	0x03911540 LDR X0, [X0 + 0x598]
	0x03911544 BL 0x1C16CF4
	0x03911548 MOVZ W8, 0x1
	0x0391154C STRB W8, [X22 + 0x85C]
	0x03911550 CBZ X19, 0x391178C
	0x03911554 CMP W21, 0x4
	0x03911558 B.CS 0x39117C0
	0x0391155C LDR W8, [X19 + 0x1C]
	0x03911560 CMP W21, 0x3
	0x03911564 ADD W8, W8, 0x1
	0x03911568 STP W31, W8, [X19 + 0x18]
	0x0391156C B.HI 0x3911774
	0x03911570 ADRP X9, 0xFFFFFFFFFD286000
	0x03911574 MOV W8, W21
	0x03911578 ADD X9, X9, 0xA36
	0x0391157C ADR X10, 0x10
	0x03911580 LDRB W11, [X9, X8, LSL]
	0x03911584 ADD X10, X10, X11, 0x2, LSL
	0x03911588 BR X10
	0x0391158C ADRP X23, 0x83C000
	0x03911590 LDR X23, [X23 + 0xFF0]
	0x03911594 MOV X21, X31
	0x03911598 MOV X22, X31
	0x0391159C LDR X8, [X20 + 0x58]
	0x039115A0 CBZ X8, 0x39115A8
	0x039115A4 LDR X8, [X8 + 0x18]
	0x039115A8 CMP X22, W8, SXTW
	0x039115AC B.GE 0x3911774
	0x039115B0 LDR X8, [X20 + 0x60]
	0x039115B4 CBZ X8, 0x3911784
	0x039115B8 LDR W9, [X8 + 0x18]
	0x039115BC CMP X22, X9
	0x039115C0 B.CS 0x3911788
	0x039115C4 ADD X8, X8, X21
	0x039115C8 LDR W10, [X19 + 0x1C]
	0x039115CC LDP S0, S1, [X8 + 0x20]
	0x039115D0 LDR X8, [X19 + 0x10]
	0x039115D4 LDR X9, [X23]
	0x039115D8 ADD W10, W10, 0x1
	0x039115DC STR W10, [X19 + 0x1C]
	0x039115E0 CBZ X8, 0x3911784
	0x039115E4 LDRSW X10, [X19 + 0x18]
	0x039115E8 LDR W11, [X8 + 0x18]
	0x039115EC CMP W10, W11
	0x039115F0 B.CS 0x391160C
	0x039115F4 ADD W9, W10, 0x1
	0x039115F8 ADD X8, X8, X10, 0x4, LSL
	0x039115FC STR W9, [X19 + 0x18]
	0x03911600 STP S0, S1, [X8 + 0x20]
	0x03911604 STR X31, [X8 + 0x28]
	0x03911608 B 0x3911628
	0x0391160C LDR X8, [X9 + 0x20]
	0x03911610 FMOV S2, W31
	0x03911614 FMOV S3, W31
	0x03911618 MOV X0, X19
	0x0391161C LDR X8, [X8 + 0xC0]
	0x03911620 LDR X1, [X8 + 0x70]
	0x03911624 BL 0x30CEE24
	0x03911628 ADD X22, X22, 0x1
	0x0391162C ADD X21, X21, 0x8
	0x03911630 B 0x391159C
	0x03911634 MOV X0, X20
	0x03911638 BL 0x3912CAC
	0x0391163C ADRP X8, 0x7E2000
	0x03911640 LDR X8, [X8 + 0x598]
	0x03911644 MOV X21, X0
	0x03911648 LDR X8, [X8]
	0x0391164C LDR W9, [X8 + 0xE0]
	0x03911650 CBNZ W9, 0x391165C
	0x03911654 MOV X0, X8
	0x03911658 BL 0x1C16DFC
	0x0391165C MOV X0, X21
	0x03911660 MOV X1, X31
	0x03911664 MOV X2, X31
	0x03911668 BL 0x3C354F8
	0x0391166C TBZ X0, 0x0, 0x3911774
	0x03911670 MOV X0, X20
	0x03911674 BL 0x3912CAC
	0x03911678 CBZ X0, 0x3911784
	0x0391167C MOV X1, X31
	0x03911680 BL 0x3C1816C
	0x03911684 CBZ X0, 0x3911774
	0x03911688 MOV X0, X20
	0x0391168C BL 0x3912CAC
	0x03911690 CBZ X0, 0x3911784
	0x03911694 MOV X1, X31
	0x03911698 BL 0x3C1816C
	0x0391169C CBZ X0, 0x3911784
	0x039116A0 LDR X8, [X0 + 0x18]
	0x039116A4 MOV X20, X0
	0x039116A8 CMP W8, 0x1
	0x039116AC B.LT 0x3911774
	0x039116B0 ADRP X23, 0x83C000
	0x039116B4 LDR X23, [X23 + 0xFF0]
	0x039116B8 MOV X21, X31
	0x039116BC AND X8, X8, 0x0
	0x039116C0 ADD X22, X20, 0x24
	0x039116C4 CMP X21, W8, UXTW
	0x039116C8 B.CS 0x3911788
	0x039116CC LDR W10, [X19 + 0x1C]
	0x039116D0 LDP S0, S1, [X22 - 0x4]
	0x039116D4 LDR X8, [X19 + 0x10]
	0x039116D8 LDR X9, [X23]
	0x039116DC ADD W10, W10, 0x1
	0x039116E0 STR W10, [X19 + 0x1C]
	0x039116E4 CBZ X8, 0x3911784
	0x039116E8 LDRSW X10, [X19 + 0x18]
	0x039116EC LDR W11, [X8 + 0x18]
	0x039116F0 CMP W10, W11
	0x039116F4 B.CS 0x3911710
	0x039116F8 ADD W9, W10, 0x1
	0x039116FC ADD X8, X8, X10, 0x4, LSL
	0x03911700 STR W9, [X19 + 0x18]
	0x03911704 STP S0, S1, [X8 + 0x20]
	0x03911708 STR X31, [X8 + 0x28]
	0x0391170C B 0x391172C
	0x03911710 LDR X8, [X9 + 0x20]
	0x03911714 FMOV S2, W31
	0x03911718 FMOV S3, W31
	0x0391171C MOV X0, X19
	0x03911720 LDR X8, [X8 + 0xC0]
	0x03911724 LDR X1, [X8 + 0x70]
	0x03911728 BL 0x30CEE24
	0x0391172C LDR W8, [X20 + 0x18]
	0x03911730 ADD X21, X21, 0x1
	0x03911734 ADD X22, X22, 0x8
	0x03911738 CMP X21, W8, SXTW
	0x0391173C B.LT 0x39116C4
	0x03911740 B 0x3911774
	0x03911744 LDR X1, [X20 + 0x68]
	0x03911748 CBZ X1, 0x3911774
	0x0391174C ADRP X8, 0x83D000
	0x03911750 LDR X8, [X8 + 0x160]
	0x03911754 MOV X0, X19
	0x03911758 LDP X20, X19, [X31 + 0x20]
	0x0391175C LDP X22, X21, [X31 + 0x10]
	0x03911760 LDR X2, [X8]
	0x03911764 LDP X30, X23, [X31], #0x30
	0x03911768 B 0x30CF050
	0x0391176C LDR X1, [X20 + 0x70]
	0x03911770 CBNZ X1, 0x391174C
	0x03911774 LDP X20, X19, [X31 + 0x20]
	0x03911778 LDP X22, X21, [X31 + 0x10]
	0x0391177C LDP X30, X23, [X31], #0x30
	0x03911780 RET
	0x03911784 BL 0x1C16F20
	0x03911788 BL 0x1C16F28
	0x0391178C ADRP X0, 0x7E7000
	0x03911790 LDR X0, [X0 + 0x528]
	0x03911794 BL 0x1C16D08
	0x03911798 BL 0x1C16F10
	0x0391179C MOV X19, X0
	0x039117A0 ADRP X0, 0x80B000
	0x039117A4 LDR X0, [X0 + 0x78]
	0x039117A8 BL 0x1C16D08
	0x039117AC MOV X1, X0
	0x039117B0 MOV X0, X19
	0x039117B4 MOV X2, X31
	0x039117B8 BL 0x330E100
	0x039117BC B 0x39117F0
	0x039117C0 ADRP X0, 0x7EA000
	0x039117C4 LDR X0, [X0 + 0x760]
	0x039117C8 BL 0x1C16D08
	0x039117CC BL 0x1C16F10
	0x039117D0 MOV X19, X0
	0x039117D4 ADRP X0, 0x813000
	0x039117D8 LDR X0, [X0 + 0x38]
	0x039117DC BL 0x1C16D08
	0x039117E0 MOV X1, X0
	0x039117E4 MOV X0, X19
	0x039117E8 MOV X2, X31
	0x039117EC BL 0x3316014
	0x039117F0 ADRP X0, 0x83D000
	0x039117F4 LDR X0, [X0 + 0x168]
	0x039117F8 BL 0x1C16D08
	0x039117FC MOV X1, X0
	0x03911800 MOV X0, X19
	0x03911804 BL 0x1C16DEC
	0x03911808 STR X30, [X31 - 0x20]!
	0x0391180C STP X20, X19, [X31 + 0x10]
	0x03911810 ADRP X20, 0xAD0000
	0x03911814 LDRB W8, [X20 + 0x853]
	0x03911818 MOV X19, X0
	0x0391181C TBNZ X8, 0x0, 0x3911840
	0x03911820 ADRP X0, 0x83D000
	0x03911824 LDR X0, [X0 + 0x170]
	0x03911828 BL 0x1C16CF4
	0x0391182C ADRP X0, 0x83C000
	0x03911830 LDR X0, [X0 + 0xE78]
	0x03911834 BL 0x1C16CF4
	0x03911838 MOVZ W8, 0x1
	0x0391183C STRB W8, [X20 + 0x853]
	0x03911840 ADRP X20, 0x83D000
	0x03911844 LDR X20, [X20 + 0x170]
	0x03911848 MOVZ W1, 0x40
	0x0391184C MOV X0, X19
	0x03911850 BL 0x39112BC
	0x03911854 TBNZ X0, 0x0, 0x3911878
	0x03911858 ADRP X8, 0x83C000
	0x0391185C LDR X8, [X8 + 0xE78]
	0x03911860 LDR X0, [X8]
	0x03911864 LDR W8, [X0 + 0xE0]
	0x03911868 CBNZ W8, 0x3911870
	0x0391186C BL 0x1C16DFC
	0x03911870 MOV X0, X19
	0x03911874 BL 0x3913B20
	0x03911878 MOV X0, X19
	0x0391187C BL 0x39170FC
	0x03911880 LDR X1, [X20]
	0x03911884 LDP X20, X19, [X31 + 0x10]
	0x03911888 LDR X30, [X31], #0x20
	0x0391188C B 0x21D599C
	0x03911890 STR X30, [X31 - 0x20]!
	0x03911894 STP X20, X19, [X31 + 0x10]
	0x03911898 ADRP X20, 0xAD0000
	0x0391189C LDRB W8, [X20 + 0x859]
	0x039118A0 MOV X19, X0
	0x039118A4 TBNZ X8, 0x0, 0x39118C8
	0x039118A8 ADRP X0, 0x83D000
	0x039118AC LDR X0, [X0 + 0x178]
	0x039118B0 BL 0x1C16CF4
	0x039118B4 ADRP X0, 0x83C000
	0x039118B8 LDR X0, [X0 + 0xE78]
	0x039118BC BL 0x1C16CF4
	0x039118C0 MOVZ W8, 0x1
	0x039118C4 STRB W8, [X20 + 0x859]
	0x039118C8 ADRP X20, 0x83D000
	0x039118CC LDR X20, [X20 + 0x178]
	0x039118D0 MOVZ W1, 0x80
	0x039118D4 MOV X0, X19
	0x039118D8 BL 0x39112BC
	0x039118DC TBNZ X0, 0x0, 0x3911900
	0x039118E0 ADRP X8, 0x83C000
	0x039118E4 LDR X8, [X8 + 0xE78]
	0x039118E8 LDR X0, [X8]
	0x039118EC LDR W8, [X0 + 0xE0]
	0x039118F0 CBNZ W8, 0x39118F8
	0x039118F4 BL 0x1C16DFC
	0x039118F8 MOV X0, X19
	0x039118FC BL 0x3913164
	0x03911900 MOV X0, X19
	0x03911904 BL 0x3917458
	0x03911908 LDR X1, [X20]
	0x0391190C LDP X20, X19, [X31 + 0x10]
	0x03911910 LDR X30, [X31], #0x20
	0x03911914 B 0x21D5A24
	0x03911918 SUB X31, X31, 0x90
	0x0391191C STP X29, X30, [X31 + 0x30]
	0x03911920 STP X28, X27, [X31 + 0x40]
	0x03911924 STP X26, X25, [X31 + 0x50]
	0x03911928 STP X24, X23, [X31 + 0x60]
	0x0391192C STP X22, X21, [X31 + 0x70]
	0x03911930 STP X20, X19, [X31 + 0x80]
	0x03911934 ADRP X20, 0xAD0000
	0x03911938 ADRP X19, 0x7E2000
	0x0391193C LDRB W8, [X20 + 0x81B]
	0x03911940 LDR X19, [X19 + 0x598]
	0x03911944 MOV X21, X1
	0x03911948 MOV X24, X0
	0x0391194C TBNZ X8, 0x0, 0x3911A00
	0x03911950 ADRP X0, 0x83D000
	0x03911954 LDR X0, [X0 + 0x180]
	0x03911958 BL 0x1C16CF4
	0x0391195C ADRP X0, 0x83D000
	0x03911960 LDR X0, [X0 + 0x188]
	0x03911964 BL 0x1C16CF4
	0x03911968 ADRP X0, 0x83D000
	0x0391196C LDR X0, [X0 + 0x190]
	0x03911970 BL 0x1C16CF4
	0x03911974 ADRP X0, 0x83D000
	0x03911978 LDR X0, [X0 + 0x198]
	0x0391197C BL 0x1C16CF4
	0x03911980 ADRP X0, 0x83D000
	0x03911984 LDR X0, [X0 + 0x1A0]
	0x03911988 BL 0x1C16CF4
	0x0391198C ADRP X0, 0x83D000
	0x03911990 LDR X0, [X0 + 0x1A8]
	0x03911994 BL 0x1C16CF4
	0x03911998 ADRP X0, 0x83D000
	0x0391199C LDR X0, [X0 + 0x1B0]
	0x039119A0 BL 0x1C16CF4
	0x039119A4 ADRP X0, 0x81A000
	0x039119A8 LDR X0, [X0 + 0xDA0]
	0x039119AC BL 0x1C16CF4
	0x039119B0 ADRP X0, 0x83D000
	0x039119B4 LDR X0, [X0 + 0x1B8]
	0x039119B8 BL 0x1C16CF4
	0x039119BC ADRP X0, 0x83D000
	0x039119C0 LDR X0, [X0 + 0x1C0]
	0x039119C4 BL 0x1C16CF4
	0x039119C8 ADRP X0, 0x83D000
	0x039119CC LDR X0, [X0 + 0x1C8]
	0x039119D0 BL 0x1C16CF4
	0x039119D4 ADRP X0, 0x7E2000
	0x039119D8 LDR X0, [X0 + 0x598]
	0x039119DC BL 0x1C16CF4
	0x039119E0 ADRP X0, 0x83D000
	0x039119E4 LDR X0, [X0 + 0x1D0]
	0x039119E8 BL 0x1C16CF4
	0x039119EC ADRP X0, 0x83D000
	0x039119F0 LDR X0, [X0 + 0x1D8]
	0x039119F4 BL 0x1C16CF4
	0x039119F8 MOVZ W8, 0x1
	0x039119FC STRB W8, [X20 + 0x81B]
	0x03911A00 LDR X0, [X19]
	0x03911A04 STR W31, [X31 + 0x2C]
	0x03911A08 LDR W8, [X0 + 0xE0]
	0x03911A0C CBNZ W8, 0x3911A14
	0x03911A10 BL 0x1C16DFC
	0x03911A14 MOV X0, X24
	0x03911A18 MOV X1, X31
	0x03911A1C MOV X2, X31
	0x03911A20 BL 0x3C3883C
	0x03911A24 TBNZ X0, 0x0, 0x3911DA4
	0x03911A28 MOV X23, X21
	0x03911A2C CBNZ X21, 0x3911A3C
	0x03911A30 MOV X0, X24
	0x03911A34 BL 0x390F2D0
	0x03911A38 MOV X23, X0
	0x03911A3C STR X21, [X31 + 0x8]
	0x03911A40 CBZ X24, 0x3911DA0
	0x03911A44 ADRP X19, 0x83D000
	0x03911A48 ADRP X20, 0x83D000
	0x03911A4C ADRP X21, 0x81A000
	0x03911A50 LDR X19, [X19 + 0x1C8]
	0x03911A54 LDR X20, [X20 + 0x1C0]
	0x03911A58 LDR X21, [X21 + 0xDA0]
	0x03911A5C MOV X0, X24
	0x03911A60 MOV X1, X31
	0x03911A64 BL 0x3C0F650
	0x03911A68 LDR X8, [X19]
	0x03911A6C MOV W19, W0
	0x03911A70 MOV X0, X8
	0x03911A74 BL 0x1C16F10
	0x03911A78 LDR X1, [X20]
	0x03911A7C STR X0, [X31 + 0x20]
	0x03911A80 BL 0x301B7C4
	0x03911A84 LDR X0, [X21]
	0x03911A88 MOV W1, W19
	0x03911A8C BL 0x1C16D6C
	0x03911A90 CMP W19, 0x1
	0x03911A94 MOV X21, X0
	0x03911A98 STR W19, [X31 + 0x1C]
	0x03911A9C B.LT 0x3911C50
	0x03911AA0 ADRP X29, 0x83D000
	0x03911AA4 ADRP X20, 0x83D000
	0x03911AA8 LDR X29, [X29 + 0x188]
	0x03911AAC LDR X20, [X20 + 0x180]
	0x03911AB0 MOV W25, W31
	0x03911AB4 MOV W26, W31
	0x03911AB8 STR X24, [X31 + 0x10]
	0x03911ABC MOV X0, X24
	0x03911AC0 MOV W1, W26
	0x03911AC4 MOV X2, X31
	0x03911AC8 BL 0x3C19138
	0x03911ACC CBZ X21, 0x3911DA0
	0x03911AD0 LDR W8, [X21 + 0x18]
	0x03911AD4 CMP W26, W8
	0x03911AD8 B.CS 0x3911D9C
	0x03911ADC ADD X22, X21, W26, 0x3, SXTW
	0x03911AE0 STR X0, [X22 + 0x20]!
	0x03911AE4 ADRP X8, 0x83D000
	0x03911AE8 LDR X8, [X8 + 0x198]
	0x03911AEC LDR X0, [X8]
	0x03911AF0 BL 0x1C16F10
	0x03911AF4 ADRP X8, 0x83D000
	0x03911AF8 LDR X8, [X8 + 0x190]
	0x03911AFC MOV X27, X0
	0x03911B00 LDR X1, [X8]
	0x03911B04 BL 0x2A9E704
	0x03911B08 LDR W8, [X21 + 0x18]
	0x03911B0C CMP W26, W8
	0x03911B10 B.CS 0x3911D9C
	0x03911B14 MOVZ W19, 0x8
	0x03911B18 LDR X8, [X22]
	0x03911B1C CBZ X8, 0x3911DA0
	0x03911B20 LDR W9, [X8 + 0x18]
	0x03911B24 SUB X24, X19, 0x8
	0x03911B28 CMP W24, W9
	0x03911B2C B.GE 0x3911BDC
	0x03911B30 CMP W24, W9
	0x03911B34 B.CS 0x3911D9C
	0x03911B38 CBZ X23, 0x3911DA0
	0x03911B3C LDRSW X8, [X8, X19, LSL #2]
	0x03911B40 LDR W9, [X23 + 0x18]
	0x03911B44 CMP W8, W9
	0x03911B48 B.CS 0x3911D9C
	0x03911B4C CBZ X27, 0x3911DA0
	0x03911B50 ADD X8, X23, X8, 0x3, LSL
	0x03911B54 LDR X28, [X8 + 0x20]
	0x03911B58 LDR X3, [X29]
	0x03911B5C ADD X2, X31, 0x2C
	0x03911B60 MOV X0, X27
	0x03911B64 MOV X1, X28
	0x03911B68 BL 0x2AA09F8
	0x03911B6C LDR W8, [X21 + 0x18]
	0x03911B70 CMP W26, W8
	0x03911B74 B.CS 0x3911D9C
	0x03911B78 LDR X9, [X22]
	0x03911B7C TBZ X0, 0x0, 0x3911B9C
	0x03911B80 CBZ X9, 0x3911DA0
	0x03911B84 LDR W10, [X9 + 0x18]
	0x03911B88 CMP W24, W10
	0x03911B8C B.CS 0x3911D9C
	0x03911B90 LDR W10, [X31 + 0x2C]
	0x03911B94 STR W10, [X9, X19, LSL #2]
	0x03911B98 B 0x3911BCC
	0x03911B9C CBZ X9, 0x3911DA0
	0x03911BA0 LDR W8, [X9 + 0x18]
	0x03911BA4 CMP W24, W8
	0x03911BA8 B.CS 0x3911D9C
	0x03911BAC STR W25, [X9, X19, LSL #2]
	0x03911BB0 LDR X3, [X20]
	0x03911BB4 MOV X0, X27
	0x03911BB8 MOV X1, X28
	0x03911BBC MOV W2, W25
	0x03911BC0 BL 0x2A9EF9C
	0x03911BC4 LDR W8, [X21 + 0x18]
	0x03911BC8 ADD W25, W25, 0x1
	0x03911BCC CMP W26, W8
	0x03911BD0 ADD X19, X19, 0x1
	0x03911BD4 B.CC 0x3911B18
	0x03911BD8 B 0x3911D9C
	0x03911BDC LDR X0, [X31 + 0x20]
	0x03911BE0 CBZ X0, 0x3911DA0
	0x03911BE4 ADRP X9, 0x83D000
	0x03911BE8 LDR W10, [X0 + 0x1C]
	0x03911BEC LDR X8, [X0 + 0x10]
	0x03911BF0 LDR X9, [X9 + 0x1B8]
	0x03911BF4 ADD W10, W10, 0x1
	0x03911BF8 LDR X9, [X9]
	0x03911BFC STR W10, [X0 + 0x1C]
	0x03911C00 CBZ X8, 0x3911DA0
	0x03911C04 LDRSW X10, [X0 + 0x18]
	0x03911C08 LDR W11, [X8 + 0x18]
	0x03911C0C CMP W10, W11
	0x03911C10 B.CS 0x3911C28
	0x03911C14 ADD W9, W10, 0x1
	0x03911C18 ADD X8, X8, X10, 0x3, LSL
	0x03911C1C STR W9, [X0 + 0x18]
	0x03911C20 STR X27, [X8 + 0x20]
	0x03911C24 B 0x3911C3C
	0x03911C28 LDR X8, [X9 + 0x20]
	0x03911C2C MOV X1, X27
	0x03911C30 LDR X8, [X8 + 0xC0]
	0x03911C34 LDR X2, [X8 + 0x70]
	0x03911C38 BL 0x301BF90
	0x03911C3C LDR W8, [X31 + 0x1C]
	0x03911C40 LDR X24, [X31 + 0x10]
	0x03911C44 ADD W26, W26, 0x1
	0x03911C48 CMP W26, W8
	0x03911C4C B.NE 0x3911ABC
	0x03911C50 ADRP X19, 0x83D000
	0x03911C54 LDR X19, [X19 + 0x1D8]
	0x03911C58 LDR X0, [X19]
	0x03911C5C LDR W8, [X0 + 0xE0]
	0x03911C60 CBNZ W8, 0x3911C6C
	0x03911C64 BL 0x1C16DFC
	0x03911C68 LDR X0, [X19]
	0x03911C6C LDR X8, [X0 + 0xB8]
	0x03911C70 ADRP X22, 0x83D000
	0x03911C74 ADRP X20, 0x83D000
	0x03911C78 LDR X25, [X8 + 0x8]
	0x03911C7C LDR X22, [X22 + 0x1A0]
	0x03911C80 LDR X20, [X20 + 0x1A8]
	0x03911C84 CBNZ X25, 0x3911CD8
	0x03911C88 LDR W8, [X0 + 0xE0]
	0x03911C8C CBNZ W8, 0x3911C98
	0x03911C90 BL 0x1C16DFC
	0x03911C94 LDR X0, [X19]
	0x03911C98 ADRP X9, 0x83D000
	0x03911C9C LDR X8, [X0 + 0xB8]
	0x03911CA0 LDR X9, [X9 + 0x1B0]
	0x03911CA4 LDR X26, [X8]
	0x03911CA8 LDR X0, [X9]
	0x03911CAC BL 0x1C16F10
	0x03911CB0 ADRP X8, 0x83D000
	0x03911CB4 LDR X8, [X8 + 0x1D0]
	0x03911CB8 MOV X1, X26
	0x03911CBC MOV X3, X31
	0x03911CC0 MOV X25, X0
	0x03911CC4 LDR X2, [X8]
	0x03911CC8 BL 0x2D30578
	0x03911CCC LDR X8, [X19]
	0x03911CD0 LDR X8, [X8 + 0xB8]
	0x03911CD4 STR X25, [X8 + 0x8]
	0x03911CD8 LDR X2, [X22]
	0x03911CDC LDR X0, [X31 + 0x20]
	0x03911CE0 MOV X1, X25
	0x03911CE4 BL 0x21D1048
	0x03911CE8 LDR X1, [X20]
	0x03911CEC BL 0x21D577C
	0x03911CF0 CBZ X0, 0x3911DA0
	0x03911CF4 CBZ X23, 0x3911DA0
	0x03911CF8 LDR X8, [X31 + 0x8]
	0x03911CFC MOV X1, X0
	0x03911D00 CBNZ X8, 0x3911D14
	0x03911D04 LDR W8, [X1 + 0x18]
	0x03911D08 LDR W9, [X23 + 0x18]
	0x03911D0C CMP W8, W9
	0x03911D10 B.EQ 0x3911D7C
	0x03911D14 MOV X0, X24
	0x03911D18 MOV X2, X31
	0x03911D1C BL 0x393F7D8
	0x03911D20 LDR W19, [X31 + 0x1C]
	0x03911D24 MOV X0, X24
	0x03911D28 MOV X2, X31
	0x03911D2C MOV W1, W19
	0x03911D30 BL 0x3C17654
	0x03911D34 CMP W19, 0x1
	0x03911D38 B.LT 0x3911D7C
	0x03911D3C CBZ X21, 0x3911DA0
	0x03911D40 LDR W8, [X31 + 0x1C]
	0x03911D44 MOV X20, X31
	0x03911D48 ADD X22, X21, 0x20
	0x03911D4C MOV W19, W8
	0x03911D50 LDR W8, [X21 + 0x18]
	0x03911D54 CMP X20, X8
	0x03911D58 B.CS 0x3911D9C
	0x03911D5C LDR X1, [X22, X20, LSL #3]
	0x03911D60 MOV X0, X24
	0x03911D64 MOV W2, W20
	0x03911D68 MOV X3, X31
	0x03911D6C BL 0x3C194F4
	0x03911D70 ADD X20, X20, 0x1
	0x03911D74 CMP X19, X20
	0x03911D78 B.NE 0x3911D50
	0x03911D7C LDP X20, X19, [X31 + 0x80]
	0x03911D80 LDP X22, X21, [X31 + 0x70]
	0x03911D84 LDP X24, X23, [X31 + 0x60]
	0x03911D88 LDP X26, X25, [X31 + 0x50]
	0x03911D8C LDP X28, X27, [X31 + 0x40]
	0x03911D90 LDP X29, X30, [X31 + 0x30]
	0x03911D94 ADD X31, X31, 0x90
	0x03911D98 RET
	0x03911D9C BL 0x1C16F28
	0x03911DA0 BL 0x1C16F20
	0x03911DA4 ADRP X0, 0x7E7000
	0x03911DA8 LDR X0, [X0 + 0x528]
	0x03911DAC BL 0x1C16D08
	0x03911DB0 BL 0x1C16F10
	0x03911DB4 MOV X19, X0
	0x03911DB8 ADRP X0, 0x83C000
	0x03911DBC LDR X0, [X0 + 0xE90]
	0x03911DC0 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0xAD1000
	015 Move X20, 0x7E3000
	016 Move W8, [X19+2070]
	017 Move X20, [X20+1432]
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {133}
	023 Move X0, 0x7E3000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x83E000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move X0, 0x83E000
	030 Move X0, [X0+48]
	031 Call 0x1C17CF4
	032 Move X0, 0x83E000
	033 Move X0, [X0+8]
	034 Call 0x1C17CF4
	035 Move X0, 0x83E000
	036 Move X0, [X0+88]
	037 Call 0x1C17CF4
	038 Move X0, 0x83E000
	039 Move X0, [X0+96]
	040 Call 0x1C17CF4
	041 Move X0, 0x83E000
	042 Move X0, [X0+104]
	043 Call 0x1C17CF4
	044 Move X0, 0x83E000
	045 Move X0, [X0+112]
	046 Call 0x1C17CF4
	047 Move X0, 0x83E000
	048 Move X0, [X0+120]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E3000
	051 Move X0, [X0+2512]
	052 Call 0x1C17CF4
	053 Move X0, 0x7E3000
	054 Move X0, [X0+1432]
	055 Call 0x1C17CF4
	056 Move X0, 0x7E3000
	057 Move X0, [X0+2288]
	058 Call 0x1C17CF4
	059 Move X0, 0x83E000
	060 Move X0, [X0+128]
	061 Call 0x1C17CF4
	062 Move X0, 0x83E000
	063 Move X0, [X0+136]
	064 Call 0x1C17CF4
	065 Move X0, 0x83E000
	066 Move X0, [X0+144]
	067 Call 0x1C17CF4
	068 Move X0, 0x83E000
	069 Move X0, [X0+152]
	070 Call 0x1C17CF4
	071 Move X0, 0x83E000
	072 Move X0, [X0+160]
	073 Call 0x1C17CF4
	074 Move X0, 0x83E000
	075 Move X0, [X0+168]
	076 Call 0x1C17CF4
	077 Move X0, 0x83E000
	078 Move X0, [X0+176]
	079 Call 0x1C17CF4
	080 Move X0, 0x83E000
	081 Move X0, [X0+184]
	082 Call 0x1C17CF4
	083 Move X0, 0x83E000
	084 Move X0, [X0+192]
	085 Call 0x1C17CF4
	086 Move X0, 0x83E000
	087 Move X0, [X0+200]
	088 Call 0x1C17CF4
	089 Move X0, 0x83E000
	090 Move X0, [X0+208]
	091 Call 0x1C17CF4
	092 Move X0, 0x83E000
	093 Move X0, [X0+216]
	094 Call 0x1C17CF4
	095 Move X0, 0x83E000
	096 Move X0, [X0+224]
	097 Call 0x1C17CF4
	098 Move X0, 0x83E000
	099 Move X0, [X0+232]
	100 Call 0x1C17CF4
	101 Move X0, 0x83E000
	102 Move X0, [X0+240]
	103 Call 0x1C17CF4
	104 Move X0, 0x83E000
	105 Move X0, [X0+248]
	106 Call 0x1C17CF4
	107 Move X0, 0x83E000
	108 Move X0, [X0+256]
	109 Call 0x1C17CF4
	110 Move X0, 0x83E000
	111 Move X0, [X0+264]
	112 Call 0x1C17CF4
	113 Move X0, 0x83E000
	114 Move X0, [X0+272]
	115 Call 0x1C17CF4
	116 Move X0, 0x83E000
	117 Move X0, [X0+280]
	118 Call 0x1C17CF4
	119 Move X0, 0x83E000
	120 Move X0, [X0+288]
	121 Call 0x1C17CF4
	122 Move X0, 0x83E000
	123 Move X0, [X0+296]
	124 Call 0x1C17CF4
	125 Move X0, 0x83E000
	126 Move X0, [X0+304]
	127 Call 0x1C17CF4
	128 Move X0, 0x83E000
	129 Move X0, [X0+312]
	130 Call 0x1C17CF4
	131 Move W8, 1
	132 Move [X19+2070], W8
	133 Move X0, [X20]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X23
	139 Move X1, X31
	140 Move X2, X31
	141 Call Object.op_Equality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {748}
	146 Move X8, 0x7E3000
	147 Move X8, [X8+2288]
	148 Move X0, [X8]
	149 Call 0x1C17F10
	150 Move X1, X31
	151 Move X20, X0
	152 Call StringBuilder..ctor, X0
	153 Compare X23, 0
	154 JumpIfEqual {747}
	155 Move X21, 0x83E000
	156 Move X19, 0x83E000
	157 Move X21, [X21+8]
	158 Move X19, [X19+16]
	159 Move X0, X23
	160 Move X1, X31
	161 Call Mesh.get_vertices, X0
	162 Move X28, X0
	163 Move X0, X23
	164 Move X1, X31
	165 Call Mesh.get_normals, X0
	166 Move X27, X0
	167 Move X0, X23
	168 Move X1, X31
	169 Call Mesh.get_colors, X0
	170 Move X26, X0
	171 Move X0, X23
	172 Move X1, X31
	173 Call Mesh.get_tangents, X0
	174 Move X8, [X21]
	175 Move [X31+8], X0
	176 Move X0, X8
	177 Call 0x1C17F10
	178 Move X1, [X19]
	179 Move X24, X0
	180 Call List`1<Vector4>..ctor, X0
	181 Move X0, X23
	182 Move X1, X31
	183 Call Mesh.get_uv2, X0
	184 Move X8, [X21]
	185 Move [X31], X0
	186 Move X0, X8
	187 Call 0x1C17F10
	188 Move X1, [X19]
	189 Move X22, X0
	190 Call List`1<Vector4>..ctor, X0
	191 Move X0, [X21]
	192 Call 0x1C17F10
	193 Move X1, [X19]
	194 Move X21, X0
	195 Call List`1<Vector4>..ctor, X0
	196 Move X0, X23
	197 Move W1, W31
	198 Move X2, X24
	199 Move X3, X31
	200 Call Mesh.GetUVs, X0, X1, X2
	201 Move W1, 2
	202 Move X0, X23
	203 Move X2, X22
	204 Move X3, X31
	205 Call Mesh.GetUVs, X0, X1, X2
	206 Move W1, 3
	207 Move X0, X23
	208 Move X2, X21
	209 Move X3, X31
	210 Call Mesh.GetUVs, X0, X1, X2
	211 Compare X20, 0
	212 JumpIfEqual {747}
	213 Move X8, 0x83E000
	214 Move X8, [X8+280]
	215 Move X29, 0x7E3000
	216 Move X19, 0x83E000
	217 Move X0, X20
	218 Move X1, [X8]
	219 Move X29, [X29+1880]
	220 Move X19, [X19+208]
	221 Move X2, X31
	222 Call StringBuilder.AppendLine, X0, X1
	223 Move X0, X23
	224 Call MeshUtility.GetVertices, X0
	225 Call MeshUtility.SanityCheck, X0
	226 Move X1, X0
	227 Move X0, X20
	228 Move X2, X31
	229 Call StringBuilder.AppendLine, X0, X1
	230 Move X0, X23
	231 Move X1, X31
	232 Move [X31+16], X23
	233 Call Mesh.get_vertexCount, X0
	234 Move X8, [X29]
	235 Move [X31+60], W0
	236 Add X1, X31, 60
	237 Move X0, X8
	238 Call 0x1C17E04
	239 Move X8, [X19]
	240 Move X1, X0
	241 Move X2, X31
	242 Move X0, X8
	243 Call String.Format, X0, X1
	244 Move X1, X0
	245 Move X0, X20
	246 Move X2, X31
	247 Call StringBuilder.AppendLine, X0, X1
	248 Compare X28, 0
	249 JumpIfEqual {747}
	250 Move X23, 0x83E000
	251 Move X23, [X23+136]
	252 Move X8, [X28+24]
	253 Move X0, [X29]
	254 Move X25, 0x83E000
	255 Move X19, 0x83E000
	256 Move X25, [X25+240]
	257 Move X19, [X19+112]
	258 Add X1, X31, 56
	259 Move [X31+56], W8
	260 Call 0x1C17E04
	261 Move X8, [X23]
	262 Move X1, X0
	263 Move X2, X31
	264 Move X0, X8
	265 Call String.Format, X0, X1
	266 Move X3, [X25]
	267 Move X4, [X19]
	268 Move X1, X0
	269 Move X0, X20
	270 Move X2, X28
	271 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	272 Compare X27, 0
	273 JumpIfEqual {747}
	274 Move X8, [X27+24]
	275 Move X0, [X29]
	276 Move X23, 0x83E000
	277 Move X25, 0x83E000
	278 Move X23, [X23+184]
	279 Move X25, [X25+216]
	280 Add X1, X31, 52
	281 Move [X31+52], W8
	282 Call 0x1C17E04
	283 Move X8, [X23]
	284 Move X1, X0
	285 Move X2, X31
	286 Move X0, X8
	287 Call String.Format, X0, X1
	288 Move X3, [X25]
	289 Move X4, [X19]
	290 Move X1, X0
	291 Move X0, X20
	292 Move X2, X27
	293 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	294 Compare X26, 0
	295 JumpIfEqual {747}
	296 Move X19, 0x83E000
	297 Move X19, [X19+144]
	298 Move X8, [X26+24]
	299 Move X0, [X29]
	300 Move X23, 0x83E000
	301 Move X25, 0x83E000
	302 Move X23, [X23+288]
	303 Move X25, [X25+96]
	304 Add X1, X31, 48
	305 Move [X31+48], W8
	306 Call 0x1C17E04
	307 Move X8, [X19]
	308 Move X1, X0
	309 Move X2, X31
	310 Move X0, X8
	311 Call String.Format, X0, X1
	312 Move X3, [X23]
	313 Move X4, [X25]
	314 Move X1, X0
	315 Move X0, X20
	316 Move X2, X26
	317 Call 0x221CB28, X0, X1, X2, X3
	318 Move X26, [X31+8]
	319 Compare X26, 0
	320 JumpIfEqual {747}
	321 Move X23, 0x83E000
	322 Move X23, [X23+152]
	323 Move X8, [X26+24]
	324 Move X0, [X29]
	325 Move X25, 0x83E000
	326 Move X19, 0x83E000
	327 Move X25, [X25+168]
	328 Move X19, [X19+120]
	329 Add X1, X31, 44
	330 Move [X31+44], W8
	331 Call 0x1C17E04
	332 Move X8, [X23]
	333 Move X1, X0
	334 Move X2, X31
	335 Move X0, X8
	336 Call String.Format, X0, X1
	337 Move X3, [X25]
	338 Move X4, [X19]
	339 Move X1, X0
	340 Move X0, X20
	341 Move X2, X26
	342 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	343 Move X26, [X31]
	344 Compare X24, 0
	345 JumpIfEqual {747}
	346 Move W8, [X24+24]
	347 Move X0, [X29]
	348 Move X23, 0x83E000
	349 Move X25, 0x83E000
	350 Move X23, [X23+200]
	351 Move X25, [X25+128]
	352 Add X1, X31, 40
	353 Move [X31+40], W8
	354 Call 0x1C17E04
	355 Move X8, [X23]
	356 Move X1, X0
	357 Move X2, X31
	358 Move X0, X8
	359 Call String.Format, X0, X1
	360 Move X3, [X25]
	361 Move X4, [X19]
	362 Move X1, X0
	363 Move X0, X20
	364 Move X2, X24
	365 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	366 Compare X26, 0
	367 JumpIfEqual {747}
	368 Move X23, 0x83E000
	369 Move X23, [X23+272]
	370 Move X8, [X26+24]
	371 Move X0, [X29]
	372 Move X24, 0x83E000
	373 Move X25, 0x83E000
	374 Move X24, [X24+248]
	375 Move X25, [X25+104]
	376 Add X1, X31, 36
	377 Move [X31+36], W8
	378 Call 0x1C17E04
	379 Move X8, [X23]
	380 Move X1, X0
	381 Move X2, X31
	382 Move X0, X8
	383 Call String.Format, X0, X1
	384 Move X3, [X24]
	385 Move X4, [X25]
	386 Move X1, X0
	387 Move X0, X20
	388 Move X2, X26
	389 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	390 Compare X22, 0
	391 JumpIfEqual {747}
	392 Move W8, [X22+24]
	393 Move X0, [X29]
	394 Move X23, 0x83E000
	395 Move X24, 0x83E000
	396 Move X23, [X23+296]
	397 Move X24, [X24+232]
	398 Add X1, X31, 32
	399 Move [X31+32], W8
	400 Call 0x1C17E04
	401 Move X8, [X23]
	402 Move X1, X0
	403 Move X2, X31
	404 Move X0, X8
	405 Call String.Format, X0, X1
	406 Move X3, [X24]
	407 Move X4, [X19]
	408 Move X1, X0
	409 Move X0, X20
	410 Move X2, X22
	411 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	412 Compare X21, 0
	413 JumpIfEqual {747}
	414 Move X22, 0x83E000
	415 Move X22, [X22+304]
	416 Move W8, [X21+24]
	417 Move X0, [X29]
	418 Move X23, 0x83E000
	419 Move X24, 0x83E000
	420 Move X23, [X23+176]
	421 Move X24, [X24+256]
	422 Add X1, X31, 28
	423 Move [X31+28], W8
	424 Call 0x1C17E04
	425 Move X8, [X22]
	426 Move X1, X0
	427 Move X2, X31
	428 Move X0, X8
	429 Call String.Format, X0, X1
	430 Move X3, [X23]
	431 Move X4, [X19]
	432 Move X1, X0
	433 Move X0, X20
	434 Move X2, X21
	435 Call MeshUtility.PrintAttribute, X0, X1, X2, X3
	436 Move X1, [X24]
	437 Move X0, X20
	438 Move X2, X31
	439 Call StringBuilder.AppendLine, X0, X1
	440 Move X22, [X31+16]
	441 Move X1, X31
	442 Move X0, X22
	443 Call Mesh.get_subMeshCount, X0
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move X25, 0x83E000
	446 Move X26, 0x83E000
	447 Move X19, 0x83E000
	448 Move X25, [X25+224]
	449 Move X26, [X26+160]
	450 Move X19, [X19+264]
	451 Move W21, W31
	452 Move X0, X22
	453 Move W1, W21
	454 Move X2, X31
	455 Call Mesh.GetTopology, X0, X1
	456 Move W23, W0
	457 Move X0, X22
	458 Move W1, W21
	459 Move X2, X31
	460 Call Mesh.GetIndices, X0, X1
	461 Move X22, X0
	462 Move X0, [X29]
	463 Add X1, X31, 60
	464 Move [X31+60], W21
	465 Call 0x1C17E04
	466 Move X8, 0x83E000
	467 Move X8, [X8+88]
	468 Move X24, X0
	469 Add X1, X31, 56
	470 Move [X31+56], W23
	471 Move X0, [X8]
	472 Call 0x1C17E04
	473 Move X8, 0x83E000
	474 Move X8, [X8+192]
	475 Move X2, X0
	476 Move X1, X24
	477 Move X3, X31
	478 Move X8, [X8]
	479 Move X0, X8
	480 Call String.Format, X0, X1, X2
	481 Move X1, X0
	482 Move X0, X20
	483 Move X2, X31
	484 Call StringBuilder.AppendLine, X0, X1
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X11, -47681536
	487 Move W8, W23
	488 Add X11, X11, 2608
	489 NotImplemented "Instruction ADR not yet implemented."
	490 Move W10, [X11]
	491 Add X9, X9, X10
	492 CallNoReturn X9
	493 Compare X22, 0
	494 JumpIfEqual {747}
	495 Move W8, [X22+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move W27, 2
	498 Subtract W23, W27, 2
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Add X8, X22, W23
	501 Move W8, [X8+32]
	502 Move X0, [X29]
	503 Add X1, X31, 60
	504 Move [X31+60], W8
	505 Call 0x1C17E04
	506 Move W8, [X22+24]
	507 Add W24, W23, 1
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Subtract W8, W27, 1
	510 Add X8, X22, W8
	511 Move X23, X0
	512 Move W8, [X8+32]
	513 Move X0, [X29]
	514 Add X1, X31, 56
	515 Move [X31+56], W8
	516 Call 0x1C17E04
	517 Move W8, [X22+24]
	518 Add W28, W24, 1
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Add X8, X22, W27
	521 Move X24, X0
	522 Move W8, [X8+32]
	523 Move X0, [X29]
	524 Add X1, X31, 52
	525 Move [X31+52], W8
	526 Call 0x1C17E04
	527 Move X8, 0x83E000
	528 Move X8, [X8+312]
	529 Move X3, X0
	530 Move X1, X23
	531 Move X2, X24
	532 Move X8, [X8]
	533 Move X4, X31
	534 Move X0, X8
	535 Call String.Format, X0, X1, X2, X3
	536 Move X1, X0
	537 Move X0, X20
	538 Move X2, X31
	539 Call StringBuilder.AppendLine, X0, X1
	540 Move W8, [X22+24]
	541 Add W9, W28, 1
	542 Add W27, W27, 3
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Compare X22, 0
	545 JumpIfEqual {747}
	546 Move W8, [X22+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move W27, 3
	549 Move X8, 0x7E3000
	550 Move X8, [X8+2512]
	551 Move W1, 4
	552 Subtract W28, W27, 3
	553 Move X0, [X8]
	554 Call 0x1C17D6C
	555 Move W8, [X22+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Add X8, X22, W28
	558 Move X23, X0
	559 Move W8, [X8+32]
	560 Move X0, [X29]
	561 Add X1, X31, 60
	562 Move [X31+60], W8
	563 Call 0x1C17E04
	564 Compare X23, 0
	565 JumpIfEqual {747}
	566 Move X24, X0
	567 Compare X0, 0
	568 JumpIfEqual {575}
	569 Move X8, [X23]
	570 Move X0, X24
	571 Move X1, [X8+64]
	572 Call 0x1C17E00
	573 Compare X0, 0
	574 JumpIfEqual {744}
	575 Move W8, [X23+24]
	576 Compare W8, 0
	577 JumpIfEqual {743}
	578 Move [X23+32], X24
	579 Move W8, [X22+24]
	580 Add W28, W28, 1
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Subtract W8, W27, 2
	583 Add X8, X22, W8
	584 Move W8, [X8+32]
	585 Move X0, [X29]
	586 Add X1, X31, 56
	587 Move [X31+56], W8
	588 Call 0x1C17E04
	589 Move X24, X0
	590 Compare X0, 0
	591 JumpIfEqual {598}
	592 Move X8, [X23]
	593 Move X0, X24
	594 Move X1, [X8+64]
	595 Call 0x1C17E00
	596 Compare X0, 0
	597 JumpIfEqual {744}
	598 Move W8, [X23+24]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move [X23+40], X24
	601 Move W8, [X22+24]
	602 Add W28, W28, 1
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Subtract W8, W27, 1
	605 Add X8, X22, W8
	606 Move W8, [X8+32]
	607 Move X0, [X29]
	608 Add X1, X31, 52
	609 Move [X31+52], W8
	610 Call 0x1C17E04
	611 Move X24, X0
	612 Compare X0, 0
	613 JumpIfEqual {620}
	614 Move X8, [X23]
	615 Move X0, X24
	616 Move X1, [X8+64]
	617 Call 0x1C17E00
	618 Compare X0, 0
	619 JumpIfEqual {744}
	620 Move W8, [X23+24]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move [X23+48], X24
	623 Move W8, [X22+24]
	624 Add W28, W28, 1
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Add X8, X22, W27
	627 Move W8, [X8+32]
	628 Move X0, [X29]
	629 Add X1, X31, 48
	630 Move [X31+48], W8
	631 Call 0x1C17E04
	632 Move X24, X0
	633 Compare X0, 0
	634 JumpIfEqual {641}
	635 Move X8, [X23]
	636 Move X0, X24
	637 Move X1, [X8+64]
	638 Call 0x1C17E00
	639 Compare X0, 0
	640 JumpIfEqual {744}
	641 Move W8, [X23+24]
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Move [X23+56], X24
	644 Move X0, [X25]
	645 Move X1, X23
	646 Move X2, X31
	647 Call String.Format, X0, X1
	648 Move X1, X0
	649 Move X0, X20
	650 Move X2, X31
	651 Call StringBuilder.AppendLine, X0, X1
	652 Move W8, [X22+24]
	653 Add W9, W28, 1
	654 Add W27, W27, 4
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Compare X22, 0
	657 JumpIfEqual {747}
	658 Move W8, [X22+24]
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move W24, 1
	661 Subtract W23, W24, 1
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Add X8, X22, W23
	664 Move W8, [X8+32]
	665 Move X0, [X29]
	666 Add X1, X31, 60
	667 Move [X31+60], W8
	668 Call 0x1C17E04
	669 Move W8, [X22+24]
	670 Add W27, W23, 1
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Add X8, X22, W24
	673 Move X23, X0
	674 Move W8, [X8+32]
	675 Move X0, [X29]
	676 Add X1, X31, 56
	677 Move [X31+56], W8
	678 Call 0x1C17E04
	679 Move X8, [X26]
	680 Move X2, X0
	681 Move X1, X23
	682 Move X3, X31
	683 Move X0, X8
	684 Call String.Format, X0, X1, X2
	685 Move X1, X0
	686 Move X0, X20
	687 Move X2, X31
	688 Call StringBuilder.AppendLine, X0, X1
	689 Move W8, [X22+24]
	690 Add W9, W27, 1
	691 Add W24, W24, 2
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Compare X22, 0
	694 JumpIfEqual {747}
	695 Move X8, [X22+24]
	696 NotImplemented "Instruction CMP not yet implemented."
	697 Move X23, X31
	698 And X8, X8, 0
	699 Add X24, X22, 32
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Move W8, [X24]
	702 Move X0, [X29]
	703 Add X1, X31, 60
	704 Move [X31+60], W8
	705 Call 0x1C17E04
	706 Move X8, [X19]
	707 Move X1, X0
	708 Move X2, X31
	709 Move X0, X8
	710 Call String.Format, X0, X1
	711 Move X1, X0
	712 Move X0, X20
	713 Move X2, X31
	714 Call StringBuilder.AppendLine, X0, X1
	715 Move W8, [X22+24]
	716 Add X23, X23, 1
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Move X22, [X31+16]
	719 Move X1, X31
	720 Add W21, W21, 1
	721 Move X0, X22
	722 Call Mesh.get_subMeshCount, X0
	723 NotImplemented "Instruction CMP not yet implemented."
	724 Move X8, [X20]
	725 Move X0, X20
	726 Move X9, [X8+360]
	727 Move X1, [X8+368]
	728 NotImplemented "Instruction BLR not yet implemented."
	729 Move X20, [X31+144]
	730 Move X19, [X31+152]
	731 Move X22, [X31+128]
	732 Move X21, [X31+136]
	733 Move X24, [X31+112]
	734 Move X23, [X31+120]
	735 Move X26, [X31+96]
	736 Move X25, [X31+104]
	737 Move X28, [X31+80]
	738 Move X27, [X31+88]
	739 Move X29, [X31+64]
	740 Move X30, [X31+72]
	741 Add X31, X31, 160
	742 Return X0
	743 Call 0x1C17F28
	744 Call 0x1C17F44
	745 Move X1, X31
	746 Call 0x1C17DEC
	747 Call 0x1C17F20
	748 Move X0, 0x7E8000
	749 Move X0, [X0+1320]
	750 Call 0x1C17D08
	751 Call 0x1C17F10
	752 Move X19, X0
	753 Move X0, 0x83D000
	754 Move X0, [X0+3728]
	755 Call 0x1C17D08
	756 Move X1, X0
	757 Move X0, X19
	758 Move X2, X31
	759 Call ArgumentNullException..ctor, X0, X1
	760 Move X0, 0x83E000
	761 Move X0, [X0+320]
	762 Call 0x1C17D08
	763 Move X1, X0
	764 Move X0, X19
	765 Call 0x1C17DEC

Method: System.UInt32 GetIndexCount(UnityEngine.Mesh mesh)

Disassembly:
	0x03911DD4 ADRP X0, 0x83D000
	0x03911DD8 LDR X0, [X0 + 0x1E0]
	0x03911DDC BL 0x1C16D08
	0x03911DE0 MOV X1, X0
	0x03911DE4 MOV X0, X19
	0x03911DE8 BL 0x1C16DEC
	0x03911DEC SUB X31, X31, 0x70
	0x03911DF0 STR D12, [X31 + 0x20]
	0x03911DF4 STP D11, D10, [X31 + 0x28]
	0x03911DF8 STP D9, D8, [X31 + 0x38]
	0x03911DFC STR X30, [X31 + 0x48]
	0x03911E00 STP X22, X21, [X31 + 0x50]
	0x03911E04 STP X20, X19, [X31 + 0x60]
	0x03911E08 ADRP X21, 0xAD0000
	0x03911E0C LDRB W8, [X21 + 0x81C]
	0x03911E10 MOV V8.16B, V2.16B
	0x03911E14 MOV V9.16B, V1.16B
	0x03911E18 MOV V10.16B, V0.16B
	0x03911E1C MOV X20, X1
	0x03911E20 MOV X19, X0
	0x03911E24 TBNZ X8, 0x0, 0x3911E3C
	0x03911E28 ADRP X0, 0x7E2000
	0x03911E2C LDR X0, [X0 + 0x5A8]
	0x03911E30 BL 0x1C16CF4
	0x03911E34 MOVZ W8, 0x1
	0x03911E38 STRB W8, [X21 + 0x81C]
	0x03911E3C CBZ X19, 0x39120BC
	0x03911E40 LDR X8, [X19 + 0x58]
	0x03911E44 CBZ X8, 0x3912098
	0x03911E48 LDR W8, [X8 + 0x18]
	0x03911E4C CMP W8, 0x1
	0x03911E50 B.LT 0x3912098
	0x03911E54 MOV V0.16B, V10.16B
	0x03911E58 MOV V1.16B, V9.16B
	0x03911E5C MOV V2.16B, V8.16B
	0x03911E60 MOV X0, X31
	0x03911E64 BL 0x390B3C8
	0x03911E68 LDP S3, S4, [X20 + 0xC]
	0x03911E6C LDR V5, [X20 + 0x14]
	0x03911E70 MOV X0, X31
	0x03911E74 FADD S3, S3, S3
	0x03911E78 FADD S4, S4, S4
	0x03911E7C FADD S5, S5, S5
	0x03911E80 BL 0x3909CC0
	0x03911E84 ADRP X21, 0xAC7000
	0x03911E88 LDRB W8, [X21 + 0x85B]
	0x03911E8C MOV V10.16B, V0.16B
	0x03911E90 MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAD1000
	007 Move X21, 0x7E3000
	008 Move W8, [X20+2071]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7E3000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2071], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {49}
	033 Compare X19, 0
	034 JumpIfEqual {57}
	035 Move X0, X19
	036 Move X1, X31
	037 Call Mesh.get_subMeshCount, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W20, W0
	040 Move W21, W31
	041 Move W22, W31
	042 Move X0, X19
	043 Move W1, W22
	044 Move X2, X31
	045 Call Mesh.GetIndexCount, X0, X1
	046 Add W22, W22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W21, W0, W21
	049 Move W21, W31
	050 Move W0, W21
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Call 0x1C17F20

Method: System.UInt32 GetPrimitiveCount(UnityEngine.Mesh mesh)

Disassembly:
	0x03911E94 MOV V8.16B, V2.16B
	0x03911E98 CBNZ W8, 0x3911EB0
	0x03911E9C ADRP X0, 0x7E2000
	0x03911EA0 LDR X0, [X0 + 0x5A0]
	0x03911EA4 BL 0x1C16CF4
	0x03911EA8 MOVZ W8, 0x1
	0x03911EAC STRB W8, [X21 + 0x85B]
	0x03911EB0 ADRP X21, 0x7E2000
	0x03911EB4 LDR X21, [X21 + 0x5A0]
	0x03911EB8 ADRP X9, 0xFFFFFFFFFD1D8000
	0x03911EBC LDR V11, [X9 + 0xF20]
	0x03911EC0 LDR X8, [X21]
	0x03911EC4 LDR X8, [X8 + 0xB8]
	0x03911EC8 LDP S0, S1, [X8 + 0xC]
	0x03911ECC LDR V2, [X8 + 0x14]
	0x03911ED0 FSUB S0, S10, S0
	0x03911ED4 FSUB S1, S9, S1
	0x03911ED8 FMUL S0, S0, S0
	0x03911EDC FMUL S1, S1, S1
	0x03911EE0 FADD S0, S0, S1
	0x03911EE4 FSUB S1, S8, S2
	0x03911EE8 FMUL S1, S1, S1
	0x03911EEC FADD S0, S1, S0
	0x03911EF0 FCMP S0, S11
	0x03911EF4 B.MI 0x3912098
	0x03911EF8 ADRP X22, 0xAC7000
	0x03911EFC LDRB W9, [X22 + 0x783]
	0x03911F00 CBNZ W9, 0x3911F1C
	0x03911F04 MOV X0, X21
	0x03911F08 BL 0x1C16CF4
	0x03911F0C LDR X8, [X21]
	0x03911F10 MOVZ W9, 0x1
	0x03911F14 STRB W9, [X22 + 0x783]
	0x03911F18 LDR X8, [X8 + 0xB8]
	0x03911F1C LDP S0, S1, [X8]
	0x03911F20 LDR V2, [X8 + 0x8]
	0x03911F24 FSUB S0, S10, S0
	0x03911F28 FSUB S1, S9, S1
	0x03911F2C FSUB S2, S8, S2
	0x03911F30 FMUL S0, S0, S0
	0x03911F34 FMUL S1, S1, S1
	0x03911F38 FADD S0, S0, S1
	0x03911F3C FMUL S1, S2, S2
	0x03911F40 FADD S0, S1, S0
	0x03911F44 FCMP S0, S11
	0x03911F48 B.MI 0x3912098
	0x03911F4C ADRP X22, 0x7E2000
	0x03911F50 LDR X22, [X22 + 0x5A8]
	0x03911F54 LDR V0, [X20 + 0xC]
	0x03911F58 LDR X21, [X19 + 0x58]
	0x03911F5C LDR X0, [X22]
	0x03911F60 FADD S12, S0, S0
	0x03911F64 LDR W8, [X0 + 0xE0]
	0x03911F68 CBNZ W8, 0x3911F78
	0x03911F6C BL 0x1C16DFC
	0x03911F70 LDR X0, [X22]
	0x03911F74 LDR W8, [X0 + 0xE0]
	0x03911F78 ADRP X9, 0xFFFFFFFFFD1D9000
	0x03911F7C LDR V11, [X9 + 0x410]
	0x03911F80 LDR V1, [X20 + 0x10]
	0x03911F84 FABS S0, S12
	0x03911F88 FMOV S12, W31
	0x03911F8C FCMP S0, S11
	0x03911F90 FCSEL S5, S12, S10, MI
	0x03911F94 FADD S10, S1, S1
	0x03911F98 CBNZ W8, 0x3911FB0
	0x03911F9C STR V5, [X31 + 0x1]
	0x03911FA0 BL 0x1C16DFC
	0x03911FA4 LDR X0, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xAD1000
	008 Move X21, 0x7E3000
	009 Move W8, [X20+2072]
	010 Move X21, [X21+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7E3000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2072], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {72}
	034 Compare X19, 0
	035 JumpIfEqual {81}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Mesh.get_subMeshCount, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W23, 0xAAAB
	041 Move W21, W0
	042 Move W20, W31
	043 Move W22, W31
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 Move X0, X19
	046 Move W1, W22
	047 Move X2, X31
	048 Call Mesh.GetTopology, X0, X1
	049 Compare W0, 0
	050 JumpIfEqual {61}
	051 Move X0, X19
	052 Move W1, W22
	053 Move X2, X31
	054 Call Mesh.GetTopology, X0, X1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X19
	057 Move W1, W22
	058 Move X2, X31
	059 Call Mesh.GetIndexCount, X0, X1
	060 Add W20, W20, W0
	061 Move X0, X19
	062 Move W1, W22
	063 Move X2, X31
	064 Call Mesh.GetIndexCount, X0, X1
	065 NotImplemented "Instruction UMADDL not yet implemented."
	066 Move X8, X8
	067 ShiftRight X8, 33
	068 And X8, X8, 0x7FFFFFFF
	069 Add W20, W8, W20
	070 Add W22, W22, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W20, W31
	073 Move W0, W20
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Move X23, [X31+56]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void Compile(UnityEngine.ProBuilder.ProBuilderMesh probuilderMesh, UnityEngine.Mesh targetMesh, UnityEngine.MeshTopology preferredTopology = 0)

Disassembly:
	0x03911FA8 LDR V5, [X31 + 0x1]
	0x03911FAC LDR W8, [X0 + 0xE0]
	0x03911FB0 LDR V0, [X20 + 0x14]
	0x03911FB4 FABS S1, S10
	0x03911FB8 FCMP S1, S11
	0x03911FBC FCSEL S1, S12, S9, MI
	0x03911FC0 FADD S9, S0, S0
	0x03911FC4 CBNZ W8, 0x3911FD4
	0x03911FC8 STP V1, V5, [X31]
	0x03911FCC BL 0x1C16DFC
	0x03911FD0 LDP V1, V5, [X31]
	0x03911FD4 LDR X8, [X19 + 0x58]
	0x03911FD8 FABS S0, S9
	0x03911FDC FCMP S0, S11
	0x03911FE0 FMOV S0, W31
	0x03911FE4 FCSEL S0, S0, S8, MI
	0x03911FE8 CBZ X8, 0x3912064
	0x03911FEC LDR X10, [X8 + 0x18]
	0x03911FF0 CMP W10, 0x1
	0x03911FF4 B.LT 0x3912064
	0x03911FF8 CBZ X21, 0x39120BC
	0x03911FFC LDR W9, [X21 + 0x18]
	0x03912000 MOV X8, X31
	0x03912004 AND X10, X10, 0x0
	0x03912008 MOV V5.S[1], V1.S[0]
	0x0391200C ADD X11, X21, 0x28
	0x03912010 CMP X8, X9
	0x03912014 B.CS 0x39120B8
	0x03912018 LDUR V1, [X11 - 0x8]
	0x0391201C LDR V2, [X11]
	0x03912020 LDR V3, [X20]
	0x03912024 LDR V4, [X20 + 0x8]
	0x03912028 ADD X8, X8, 0x1
	0x0391202C CMP X10, X8
	0x03912030 FSUB V1.2S, V1.2S, V3.2S
	0x03912034 FSUB S2, S2, S4
	0x00000000 INVALID
	0x0391203C FMUL S2, S0, S2
	0x03912040 STUR D1, [X11 - 0x8]
	0x03912044 STR S2, [X11]
	0x03912048 LDR V3, [X20]
	0x0391204C LDR V4, [X20 + 0x8]
	0x03912050 FADD V1.2S, V1.2S, V3.2S
	0x03912054 FADD S2, S2, S4
	0x03912058 STUR D1, [X11 - 0x8]
	0x0391205C STR S2, [X11], #0xC
	0x03912060 B.NE 0x3912010
	0x03912064 MOV X0, X19
	0x03912068 MOV W1, W31
	0x0391206C BL 0x39197E8
	0x03912070 MOV X0, X19
	0x03912074 LDP X20, X19, [X31 + 0x60]
	0x03912078 LDP X22, X21, [X31 + 0x50]
	0x0391207C LDR X30, [X31 + 0x48]
	0x03912080 LDP D9, D8, [X31 + 0x38]
	0x03912084 LDP D11, D10, [X31 + 0x28]
	0x03912088 LDR V12, [X31 + 0x20]
	0x0391208C MOVZ W1, 0x1F
	0x03912090 ADD X31, X31, 0x70
	0x03912094 B 0x3919D94
	0x03912098 LDP X20, X19, [X31 + 0x60]
	0x0391209C LDP X22, X21, [X31 + 0x50]
	0x039120A0 LDR X30, [X31 + 0x48]
	0x039120A4 LDP D9, D8, [X31 + 0x38]
	0x039120A8 LDP D11, D10, [X31 + 0x28]
	0x039120AC LDR V12, [X31 + 0x20]
	0x039120B0 ADD X31, X31, 0x70
	0x039120B4 RET
	0x039120B8 BL 0x1C16F28
	0x039120BC BL 0x1C16F20
	0x039120C0 LDR X8, [X0 + 0x58]
	0x039120C4 CBZ X8, 0x39120D0
	0x039120C8 LDR W0, [X8 + 0x18]
	0x039120CC RET
	0x039120D0 MOV W0, W31
	0x039120D4 RET
	0x039120D8 STP X30, X19, [X31 - 0x10]!
	0x039120DC MOV W1, W31
	0x039120E0 MOV X19, X0
	0x039120E4 BL 0x39197E8
	0x039120E8 MOVZ W1, 0x1F
	0x039120EC MOV X0, X19
	0x039120F0 LDP X30, X19, [X31], #0x10
	0x039120F4 B 0x3919D94
	0x039120F8 STR X30, [X31 - 0x10]!
	0x039120FC CBZ X0, 0x3912110
	0x03912100 MOV X1, X31
	0x03912104 BL 0x3912114
	0x03912108 LDR X30, [X31], #0x10
	0x0391210C B 0x3912754
	0x03912110 BL 0x1C16F20
	0x03912114 SUB X31, X31, 0xB0
	0x03912118 STP X29, X30, [X31 + 0x50]
	0x0391211C STP X28, X27, [X31 + 0x60]
	0x03912120 STP X26, X25, [X31 + 0x70]
	0x03912124 STP X24, X23, [X31 + 0x80]
	0x03912128 STP X22, X21, [X31 + 0x90]
	0x0391212C STP X20, X19, [X31 + 0xA0]
	0x03912130 ADRP X19, 0xACF000
	0x03912134 LDRB W8, [X19 + 0x84F]
	0x03912138 MOV X20, X1
	0x0391213C MOV X26, X0
	0x03912140 TBNZ X8, 0x0, 0x39121B8
	0x03912144 ADRP X0, 0x809000
	0x03912148 LDR X0, [X0 + 0x7A0]
	0x0391214C BL 0x1C16CF4
	0x03912150 ADRP X0, 0x809000
	0x03912154 LDR X0, [X0 + 0x7A8]
	0x03912158 BL 0x1C16CF4
	0x0391215C ADRP X0, 0x83C000
	0x03912160 LDR X0, [X0 + 0x10]
	0x03912164 BL 0x1C16CF4
	0x03912168 ADRP X0, 0x83C000
	0x0391216C LDR X0, [X0 + 0x30]
	0x03912170 BL 0x1C16CF4
	0x03912174 ADRP X0, 0x83C000
	0x03912178 LDR X0, [X0 + 0x38]
	0x0391217C BL 0x1C16CF4
	0x03912180 ADRP X0, 0x83C000
	0x03912184 LDR X0, [X0 + 0x8]
	0x03912188 BL 0x1C16CF4
	0x0391218C ADRP X0, 0x7E1000
	0x03912190 LDR X0, [X0 + 0x598]
	0x03912194 BL 0x1C16CF4
	0x03912198 ADRP X0, 0x83C000
	0x0391219C LDR X0, [X0 + 0x18]
	0x039121A0 BL 0x1C16CF4
	0x039121A4 ADRP X0, 0x83C000
	0x039121A8 LDR X0, [X0 + 0x20]
	0x039121AC BL 0x1C16CF4
	0x039121B0 MOVZ W8, 0x1
	0x039121B4 STRB W8, [X19 + 0x84F]
	0x039121B8 ADRP X19, 0x83C000
	0x039121BC ADRP X23, 0x7E1000
	0x039121C0 LDR X8, [X26 + 0x58]
	0x039121C4 LDR X19, [X19 + 0x18]
	0x039121C8 LDR X23, [X23 + 0x598]
	0x039121CC STR X20, [X31]
	0x039121D0 CBZ X8, 0x3912224
	0x039121D4 LDR W29, [X8 + 0x18]
	0x039121D8 CBZ X20, 0x391222C
	0x039121DC ADRP X10, 0x809000
	0x039121E0 LDR X8, [X20]
	0x039121E4 LDR X10, [X10 + 0x7A0]
	0x039121E8 LDRH W9, [X8 + 0x12E]
	0x039121EC LDR X1, [X10]
	0x039121F0 CBZ X9, 0x3912214
	0x039121F4 LDR X10, [X8 + 0xB0]
	0x039121F8 ADD X10, X10, 0x8
	0x039121FC LDUR X11, [X10 - 0x8]
	0x03912200 CMP X11, X1
	0x03912204 B.EQ 0x391223C
	0x03912208 SUBS X9, X9, 0x1
	0x0391220C ADD X10, X10, 0x10
	0x03912210 B.NE 0x39121FC
	0x03912214 MOV X0, X20
	0x03912218 MOV W2, W31
	0x0391221C BL 0x1C5C788
	0x03912220 B 0x3912248
	0x03912224 MOV W29, W31
	0x03912228 CBNZ X20, 0x39121DC
	0x0391222C MOVZ W8, 0x1
	0x03912230 STR W8, [X31 + 0x44]
	0x03912234 MOV W27, W29
	0x03912238 B 0x391225C
	0x0391223C LDRSW X9, [X10]
	0x03912240 ADD X8, X8, X9, 0x4, LSL
	0x03912244 ADD X0, X8, 0x138
	0x03912248 LDP X8, X1, [X0]
	0x0391224C MOV X0, X20
	0x03912250 BLR X8
	0x03912254 MOV W27, W0
	0x03912258 STR W31, [X31 + 0x44]
	0x0391225C LDR X0, [X19]
	0x03912260 MOV W1, W27
	0x03912264 BL 0x1C16D6C
	0x03912268 LDR X25, [X26 + 0x88]
	0x0391226C LDP X24, X19, [X26 + 0x58]
	0x03912270 MOV X20, X0
	0x03912274 MOV X0, X26
	0x03912278 BL 0x3911890
	0x0391227C MOV X21, X0
	0x03912280 MOV X0, X26
	0x03912284 BL 0x3911808
	0x03912288 MOV X22, X0
	0x0391228C MOV X0, X26
	0x03912290 BL 0x3912CAC
	0x03912294 LDR X8, [X23]
	0x03912298 MOV X23, X0
	0x0391229C LDR W9, [X8 + 0xE0]
	0x039122A0 CBNZ W9, 0x39122AC
	0x039122A4 MOV X0, X8
	0x039122A8 BL 0x1C16DFC
	0x039122AC MOV X0, X23
	0x039122B0 MOV X1, X31
	0x039122B4 MOV X2, X31
	0x039122B8 BL 0x3C354F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAD1000
	008 Move X22, 0x7E3000
	009 Move W8, [X23+2073]
	010 Move X22, [X22+1432]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x80F000
	019 Move X0, [X0+1440]
	020 Call 0x1C17CF4
	021 Move X0, 0x83E000
	022 Move X0, [X0+16]
	023 Call 0x1C17CF4
	024 Move X0, 0x83E000
	025 Move X0, [X0+8]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E3000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2073], W8
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {201}
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {208}
	058 Compare X19, 0
	059 JumpIfEqual {199}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Mesh.Clear, X0
	063 Compare X21, 0
	064 JumpIfEqual {199}
	065 Move X1, [X21+88]
	066 Move X0, X19
	067 Move X2, X31
	068 Call Mesh.set_vertices, X0, X1
	069 Move X1, [X21+96]
	070 Move X0, X19
	071 Move X2, X31
	072 Call Mesh.set_uv, X0, X1
	073 Move W1, 8
	074 Move X0, X21
	075 Call ProBuilderMesh.HasArrays, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {98}
	080 Move X8, 0x83D000
	081 Move X8, [X8+8]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X8, 0x83D000
	085 Move X8, [X8+16]
	086 Move X22, X0
	087 Move X1, [X8]
	088 Call List`1<Vector4>..ctor, X0
	089 Move W1, 2
	090 Move X0, X21
	091 Move X2, X22
	092 Call ProBuilderMesh.GetUVs, X0, X1, X2
	093 Move W1, 2
	094 Move X0, X19
	095 Move X2, X22
	096 Move X3, X31
	097 Call Mesh.SetUVs, X0, X1, X2
	098 Move W1, 16
	099 Move X0, X21
	100 Call ProBuilderMesh.HasArrays, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {123}
	105 Move X8, 0x83D000
	106 Move X8, [X8+8]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X8, 0x83D000
	110 Move X8, [X8+16]
	111 Move X22, X0
	112 Move X1, [X8]
	113 Call List`1<Vector4>..ctor, X0
	114 Move W1, 3
	115 Move X0, X21
	116 Move X2, X22
	117 Call ProBuilderMesh.GetUVs, X0, X1, X2
	118 Move W1, 3
	119 Move X0, X19
	120 Move X2, X22
	121 Move X3, X31
	122 Call Mesh.SetUVs, X0, X1, X2
	123 Move X22, 0x80E000
	124 Move X22, [X22+1440]
	125 Move X0, X21
	126 Call ProBuilderMesh.GetNormals, X0
	127 Move X1, X0
	128 Move X0, X19
	129 Move X2, X31
	130 Call Mesh.set_normals, X0, X1
	131 Move X0, X21
	132 Call ProBuilderMesh.GetTangents, X0
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call Mesh.set_tangents, X0, X1
	137 Move W1, 32
	138 Move X0, X21
	139 Call ProBuilderMesh.HasArrays, X0, X1
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {148}
	144 Move X1, [X21+136]
	145 Move X0, X19
	146 Move X2, X31
	147 Call Mesh.set_colors, X0, X1
	148 Move X1, [X22]
	149 Move X0, X21
	150 Call 0x21A4894, X0
	151 Compare X0, 0
	152 JumpIfEqual {199}
	153 Move X1, X31
	154 Call Renderer.get_sharedMaterials, X0
	155 Compare X0, 0
	156 JumpIfEqual {199}
	157 Move W1, [X0+24]
	158 Move X0, [X21+40]
	159 Move W2, W20
	160 Move X3, X31
	161 Call Submesh.GetSubmeshes, X0, X1, X2
	162 Compare X0, 0
	163 JumpIfEqual {199}
	164 Move W1, [X0+24]
	165 Move X20, X0
	166 Move X0, X19
	167 Move X2, X31
	168 Call Mesh.set_subMeshCount, X0, X1
	169 Move X0, X19
	170 Move X1, X31
	171 Call Mesh.get_subMeshCount, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X21, X31
	174 Add X22, X20, 32
	175 Move W8, [X20+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X22]
	178 Compare X8, 0
	179 JumpIfEqual {199}
	180 Move X1, [X8+16]
	181 Move W2, [X8+24]
	182 Move X0, X19
	183 Move W3, W21
	184 Move W4, W31
	185 Move X5, X31
	186 Call Mesh.SetIndices, X0, X1, X2, X3, X4
	187 Move X0, X19
	188 Move X1, X31
	189 Call Mesh.get_subMeshCount, X0
	190 Add X21, X21, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X20, [X31+32]
	193 Move X19, [X31+40]
	194 Move X22, [X31+16]
	195 Move X21, [X31+24]
	196 Move X30, [X31+48]
	197 Move X23, [X31+56]
	198 Return 
	199 Call 0x1C17F20
	200 Call 0x1C17F28
	201 Move X0, 0x7E7000
	202 Move X0, [X0+1320]
	203 Call 0x1C17D08
	204 Call 0x1C17F10
	205 Move X19, X0
	206 Move X0, 0x83D000
	207 Move X0, [X0+328]
	208 Move X0, 0x7E7000
	209 Move X0, [X0+1320]
	210 Call 0x1C17D08
	211 Call 0x1C17F10
	212 Move X19, X0
	213 Move X0, 0x83D000
	214 Move X0, [X0+336]
	215 Call 0x1C17D08
	216 Move X1, X0
	217 Move X0, X19
	218 Move X2, X31
	219 Call ArgumentNullException..ctor, X0, X1
	220 Move X0, 0x83D000
	221 Move X0, [X0+344]
	222 Call 0x1C17D08
	223 Move X1, X0
	224 Move X0, X19
	225 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Vertex[] GetVertices(UnityEngine.Mesh mesh)

Disassembly:
	0x039102D0 LDR X0, [X0 + 0x8F0]
	0x039102D4 BL 0x1C16CF4
	0x039102D8 ADRP X0, 0x83E000
	0x039102DC LDR X0, [X0 + 0x80]
	0x039102E0 BL 0x1C16CF4
	0x039102E4 ADRP X0, 0x83E000
	0x039102E8 LDR X0, [X0 + 0x88]
	0x039102EC BL 0x1C16CF4
	0x039102F0 ADRP X0, 0x83E000
	0x039102F4 LDR X0, [X0 + 0x90]
	0x039102F8 BL 0x1C16CF4
	0x039102FC ADRP X0, 0x83E000
	0x03910300 LDR X0, [X0 + 0x98]
	0x03910304 BL 0x1C16CF4
	0x03910308 ADRP X0, 0x83E000
	0x0391030C LDR X0, [X0 + 0xA0]
	0x03910310 BL 0x1C16CF4
	0x03910314 ADRP X0, 0x83E000
	0x03910318 LDR X0, [X0 + 0xA8]
	0x0391031C BL 0x1C16CF4
	0x03910320 ADRP X0, 0x83E000
	0x03910324 LDR X0, [X0 + 0xB0]
	0x03910328 BL 0x1C16CF4
	0x0391032C ADRP X0, 0x83E000
	0x03910330 LDR X0, [X0 + 0xB8]
	0x03910334 BL 0x1C16CF4
	0x03910338 ADRP X0, 0x83E000
	0x0391033C LDR X0, [X0 + 0xC0]
	0x03910340 BL 0x1C16CF4
	0x03910344 ADRP X0, 0x83E000
	0x03910348 LDR X0, [X0 + 0xC8]
	0x0391034C BL 0x1C16CF4
	0x03910350 ADRP X0, 0x83E000
	0x03910354 LDR X0, [X0 + 0xD0]
	0x03910358 BL 0x1C16CF4
	0x0391035C ADRP X0, 0x83E000
	0x03910360 LDR X0, [X0 + 0xD8]
	0x03910364 BL 0x1C16CF4
	0x03910368 ADRP X0, 0x83E000
	0x0391036C LDR X0, [X0 + 0xE0]
	0x03910370 BL 0x1C16CF4
	0x03910374 ADRP X0, 0x83E000
	0x03910378 LDR X0, [X0 + 0xE8]
	0x0391037C BL 0x1C16CF4
	0x03910380 ADRP X0, 0x83E000
	0x03910384 LDR X0, [X0 + 0xF0]
	0x03910388 BL 0x1C16CF4
	0x0391038C ADRP X0, 0x83E000
	0x03910390 LDR X0, [X0 + 0xF8]
	0x03910394 BL 0x1C16CF4
	0x03910398 ADRP X0, 0x83E000
	0x0391039C LDR X0, [X0 + 0x100]
	0x039103A0 BL 0x1C16CF4
	0x039103A4 ADRP X0, 0x83E000
	0x039103A8 LDR X0, [X0 + 0x108]
	0x039103AC BL 0x1C16CF4
	0x039103B0 ADRP X0, 0x83E000
	0x039103B4 LDR X0, [X0 + 0x110]
	0x039103B8 BL 0x1C16CF4
	0x039103BC ADRP X0, 0x83E000
	0x039103C0 LDR X0, [X0 + 0x118]
	0x039103C4 BL 0x1C16CF4
	0x039103C8 ADRP X0, 0x83E000
	0x039103CC LDR X0, [X0 + 0x120]
	0x039103D0 BL 0x1C16CF4
	0x039103D4 ADRP X0, 0x83E000
	0x039103D8 LDR X0, [X0 + 0x128]
	0x039103DC BL 0x1C16CF4
	0x039103E0 ADRP X0, 0x83E000
	0x039103E4 LDR X0, [X0 + 0x130]
	0x039103E8 BL 0x1C16CF4
	0x039103EC ADRP X0, 0x83E000
	0x039103F0 LDR X0, [X0 + 0x138]
	0x039103F4 BL 0x1C16CF4
	0x039103F8 MOVZ W8, 0x1
	0x039103FC STRB W8, [X19 + 0x816]
	0x03910400 LDR X0, [X20]
	0x03910404 LDR W8, [X0 + 0xE0]
	0x03910408 CBNZ W8, 0x3910410
	0x0391040C BL 0x1C16DFC
	0x03910410 MOV X0, X23
	0x03910414 MOV X1, X31
	0x03910418 MOV X2, X31
	0x0391041C BL 0x3C3883C
	0x03910420 TBNZ X0, 0x0, 0x3910D7C
	0x03910424 ADRP X8, 0x7E3000
	0x03910428 LDR X8, [X8 + 0x8F0]
	0x0391042C LDR X0, [X8]
	0x03910430 BL 0x1C16F10
	0x03910434 MOV X1, X31
	0x03910438 MOV X20, X0
	0x0391043C BL 0x3231AC4
	0x03910440 CBZ X23, 0x3910D78
	0x03910444 ADRP X21, 0x83E000
	0x03910448 ADRP X19, 0x83E000
	0x0391044C LDR X21, [X21 + 0x8]
	0x03910450 LDR X19, [X19 + 0x10]
	0x03910454 MOV X0, X23
	0x03910458 MOV X1, X31
	0x0391045C BL 0x3C17EBC
	0x03910460 MOV X28, X0
	0x03910464 MOV X0, X23
	0x03910468 MOV X1, X31
	0x0391046C BL 0x3C17F68
	0x03910470 MOV X27, X0
	0x03910474 MOV X0, X23
	0x03910478 MOV X1, X31
	0x0391047C BL 0x3C18218
	0x03910480 MOV X26, X0
	0x03910484 MOV X0, X23
	0x03910488 MOV X1, X31
	0x0391048C BL 0x3C18014
	0x03910490 LDR X8, [X21]
	0x03910494 STR X0, [X31 + 0x8]
	0x03910498 MOV X0, X8
	0x0391049C BL 0x1C16F10
	0x039104A0 LDR X1, [X19]
	0x039104A4 MOV X24, X0
	0x039104A8 BL 0x30CE5F4
	0x039104AC MOV X0, X23
	0x039104B0 MOV X1, X31
	0x039104B4 BL 0x3C1816C
	0x039104B8 LDR X8, [X21]
	0x039104BC STR X0, [X31]
	0x039104C0 MOV X0, X8
	0x039104C4 BL 0x1C16F10
	0x039104C8 LDR X1, [X19]
	0x039104CC MOV X22, X0
	0x039104D0 BL 0x30CE5F4
	0x039104D4 LDR X0, [X21]
	0x039104D8 BL 0x1C16F10
	0x039104DC LDR X1, [X19]
	0x039104E0 MOV X21, X0
	0x039104E4 BL 0x30CE5F4
	0x039104E8 MOV X0, X23
	0x039104EC MOV W1, W31
	0x039104F0 MOV X2, X24
	0x039104F4 MOV X3, X31
	0x039104F8 BL 0x3C18C9C
	0x039104FC MOVZ W1, 0x2
	0x03910500 MOV X0, X23
	0x03910504 MOV X2, X22
	0x03910508 MOV X3, X31
	0x0391050C BL 0x3C18C9C
	0x03910510 MOVZ W1, 0x3
	0x03910514 MOV X0, X23
	0x03910518 MOV X2, X21
	0x0391051C MOV X3, X31
	0x03910520 BL 0x3C18C9C
	0x03910524 CBZ X20, 0x3910D78
	0x03910528 ADRP X8, 0x83E000
	0x0391052C LDR X8, [X8 + 0x118]
	0x03910530 ADRP X29, 0x7E3000
	0x03910534 ADRP X19, 0x83E000
	0x03910538 MOV X0, X20
	0x0391053C LDR X1, [X8]
	0x03910540 LDR X29, [X29 + 0x758]
	0x03910544 LDR X19, [X19 + 0xD0]
	0x03910548 MOV X2, X31
	0x0391054C BL 0x32338A8
	0x03910550 MOV X0, X23
	0x03910554 BL 0x390F2D0
	0x03910558 BL 0x3912754
	0x0391055C MOV X1, X0
	0x03910560 MOV X0, X20
	0x03910564 MOV X2, X31
	0x03910568 BL 0x32338A8
	0x0391056C MOV X0, X23
	0x03910570 MOV X1, X31
	0x03910574 STR X23, [X31 + 0x10]
	0x03910578 BL 0x3C17618
	0x0391057C LDR X8, [X29]
	0x03910580 STR W0, [X31 + 0x3C]
	0x03910584 ADD X1, X31, 0x3C
	0x03910588 MOV X0, X8
	0x0391058C BL 0x1C16E04
	0x03910590 LDR X8, [X19]
	0x03910594 MOV X1, X0
	0x03910598 MOV X2, X31
	0x0391059C MOV X0, X8
	0x039105A0 BL 0x321EFD0
	0x039105A4 MOV X1, X0
	0x039105A8 MOV X0, X20
	0x039105AC MOV X2, X31
	0x039105B0 BL 0x32338A8
	0x039105B4 CBZ X28, 0x3910D78
	0x039105B8 ADRP X23, 0x83E000
	0x039105BC LDR X23, [X23 + 0x88]
	0x039105C0 LDR X8, [X28 + 0x18]
	0x039105C4 LDR X0, [X29]
	0x039105C8 ADRP X25, 0x83E000
	0x039105CC ADRP X19, 0x83E000
	0x039105D0 LDR X25, [X25 + 0xF0]
	0x039105D4 LDR X19, [X19 + 0x70]
	0x039105D8 ADD X1, X31, 0x38
	0x039105DC STR W8, [X31 + 0x38]
	0x039105E0 BL 0x1C16E04
	0x039105E4 LDR X8, [X23]
	0x039105E8 MOV X1, X0
	0x039105EC MOV X2, X31
	0x039105F0 MOV X0, X8
	0x039105F4 BL 0x321EFD0
	0x039105F8 LDR X3, [X25]
	0x039105FC LDR X4, [X19]
	0x03910600 MOV X1, X0
	0x03910604 MOV X0, X20
	0x03910608 MOV X2, X28
	0x0391060C BL 0x221C314
	0x03910610 CBZ X27, 0x3910D78
	0x03910614 LDR X8, [X27 + 0x18]
	0x03910618 LDR X0, [X29]
	0x0391061C ADRP X23, 0x83E000
	0x03910620 ADRP X25, 0x83E000
	0x03910624 LDR X23, [X23 + 0xB8]
	0x03910628 LDR X25, [X25 + 0xD8]
	0x0391062C ADD X1, X31, 0x34
	0x03910630 STR W8, [X31 + 0x34]
	0x03910634 BL 0x1C16E04
	0x03910638 LDR X8, [X23]
	0x0391063C MOV X1, X0
	0x03910640 MOV X2, X31
	0x03910644 MOV X0, X8
	0x03910648 BL 0x321EFD0
	0x0391064C LDR X3, [X25]
	0x03910650 LDR X4, [X19]
	0x03910654 MOV X1, X0
	0x03910658 MOV X0, X20
	0x0391065C MOV X2, X27
	0x03910660 BL 0x221C314
	0x03910664 CBZ X26, 0x3910D78
	0x03910668 ADRP X19, 0x83E000
	0x0391066C LDR X19, [X19 + 0x90]
	0x03910670 LDR X8, [X26 + 0x18]
	0x03910674 LDR X0, [X29]
	0x03910678 ADRP X23, 0x83E000
	0x0391067C ADRP X25, 0x83E000
	0x03910680 LDR X23, [X23 + 0x120]
	0x03910684 LDR X25, [X25 + 0x60]
	0x03910688 ADD X1, X31, 0x30
	0x0391068C STR W8, [X31 + 0x30]
	0x03910690 BL 0x1C16E04
	0x03910694 LDR X8, [X19]
	0x03910698 MOV X1, X0
	0x0391069C MOV X2, X31
	0x039106A0 MOV X0, X8
	0x039106A4 BL 0x321EFD0
	0x039106A8 LDR X3, [X23]
	0x039106AC LDR X4, [X25]
	0x039106B0 MOV X1, X0
	0x039106B4 MOV X0, X20
	0x039106B8 MOV X2, X26
	0x039106BC BL 0x221BB28
	0x039106C0 LDR X26, [X31 + 0x8]
	0x039106C4 CBZ X26, 0x3910D78
	0x039106C8 ADRP X23, 0x83E000
	0x039106CC LDR X23, [X23 + 0x98]
	0x039106D0 LDR X8, [X26 + 0x18]
	0x039106D4 LDR X0, [X29]
	0x039106D8 ADRP X25, 0x83E000
	0x039106DC ADRP X19, 0x83E000
	0x039106E0 LDR X25, [X25 + 0xA8]
	0x039106E4 LDR X19, [X19 + 0x78]
	0x039106E8 ADD X1, X31, 0x2C
	0x039106EC STR W8, [X31 + 0x2C]
	0x039106F0 BL 0x1C16E04
	0x039106F4 LDR X8, [X23]
	0x039106F8 MOV X1, X0
	0x039106FC MOV X2, X31
	0x03910700 MOV X0, X8
	0x03910704 BL 0x321EFD0
	0x03910708 LDR X3, [X25]
	0x0391070C LDR X4, [X19]
	0x03910710 MOV X1, X0
	0x03910714 MOV X0, X20
	0x03910718 MOV X2, X26
	0x0391071C BL 0x221C710
	0x03910720 LDR X26, [X31]
	0x03910724 CBZ X24, 0x3910D78
	0x03910728 LDR W8, [X24 + 0x18]
	0x0391072C LDR X0, [X29]
	0x03910730 ADRP X23, 0x83E000
	0x03910734 ADRP X25, 0x83E000
	0x03910738 LDR X23, [X23 + 0xC8]
	0x0391073C LDR X25, [X25 + 0x80]
	0x03910740 ADD X1, X31, 0x28
	0x03910744 STR W8, [X31 + 0x28]
	0x03910748 BL 0x1C16E04
	0x0391074C LDR X8, [X23]
	0x03910750 MOV X1, X0
	0x03910754 MOV X2, X31
	0x03910758 MOV X0, X8
	0x0391075C BL 0x321EFD0
	0x03910760 LDR X3, [X25]
	0x03910764 LDR X4, [X19]
	0x03910768 MOV X1, X0
	0x0391076C MOV X0, X20
	0x03910770 MOV X2, X24
	0x03910774 BL 0x221C710
	0x03910778 CBZ X26, 0x3910D78
	0x0391077C ADRP X23, 0x83E000
	0x03910780 LDR X23, [X23 + 0x110]
	0x03910784 LDR X8, [X26 + 0x18]
	0x03910788 LDR X0, [X29]
	0x0391078C ADRP X24, 0x83E000
	0x03910790 ADRP X25, 0x83E000
	0x03910794 LDR X24, [X24 + 0xF8]
	0x03910798 LDR X25, [X25 + 0x68]
	0x0391079C ADD X1, X31, 0x24
	0x039107A0 STR W8, [X31 + 0x24]
	0x039107A4 BL 0x1C16E04
	0x039107A8 LDR X8, [X23]
	0x039107AC MOV X1, X0
	0x039107B0 MOV X2, X31
	0x039107B4 MOV X0, X8
	0x039107B8 BL 0x321EFD0
	0x039107BC LDR X3, [X24]
	0x039107C0 LDR X4, [X25]
	0x039107C4 MOV X1, X0
	0x039107C8 MOV X0, X20
	0x039107CC MOV X2, X26
	0x039107D0 BL 0x221BF28
	0x039107D4 CBZ X22, 0x3910D78
	0x039107D8 LDR W8, [X22 + 0x18]
	0x039107DC LDR X0, [X29]
	0x039107E0 ADRP X23, 0x83E000
	0x039107E4 ADRP X24, 0x83E000
	0x039107E8 LDR X23, [X23 + 0x128]
	0x039107EC LDR X24, [X24 + 0xE8]
	0x039107F0 ADD X1, X31, 0x20
	0x039107F4 STR W8, [X31 + 0x20]
	0x039107F8 BL 0x1C16E04
	0x039107FC LDR X8, [X23]
	0x03910800 MOV X1, X0
	0x03910804 MOV X2, X31
	0x03910808 MOV X0, X8
	0x0391080C BL 0x321EFD0
	0x03910810 LDR X3, [X24]
	0x03910814 LDR X4, [X19]
	0x03910818 MOV X1, X0
	0x0391081C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X19, 0xAD2000
	015 Move X20, 0x7E4000
	016 Move W8, [X19+2074]
	017 Move X20, [X20+1432]
	018 Move X29, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x83F000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move X0, 0x83F000
	027 Move X0, [X0+48]
	028 Call 0x1C17CF4
	029 Move X0, 0x83F000
	030 Move X0, [X0+56]
	031 Call 0x1C17CF4
	032 Move X0, 0x83F000
	033 Move X0, [X0+8]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E4000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x83F000
	039 Move X0, [X0+24]
	040 Call 0x1C17CF4
	041 Move X0, 0x83F000
	042 Move X0, [X0+32]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+2074], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X29
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move X19, X31
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {369}
	060 Compare X29, 0
	061 JumpIfEqual {385}
	062 Move X0, X29
	063 Move X1, X31
	064 Call Mesh.get_vertexCount, X0
	065 Move X8, 0x83F000
	066 Move X8, [X8+24]
	067 Move W20, W0
	068 Move W1, W20
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call 0x1C17D6C
	072 Move X19, X0
	073 Move X0, X29
	074 Move X1, X31
	075 Call Mesh.get_vertices, X0
	076 Move X23, X0
	077 Move X0, X29
	078 Move X1, X31
	079 Call Mesh.get_colors, X0
	080 Move [X31+56], X0
	081 Move X0, X29
	082 Move X1, X31
	083 Call Mesh.get_normals, X0
	084 Move [X31+48], X0
	085 Move X0, X29
	086 Move X1, X31
	087 Call Mesh.get_tangents, X0
	088 Move [X31+40], X0
	089 Move X0, X29
	090 Move X1, X31
	091 Call Mesh.get_uv, X0
	092 Move [X31+32], X0
	093 Move X0, X29
	094 Move X1, X31
	095 Call Mesh.get_uv2, X0
	096 Move X21, 0x83F000
	097 Move X21, [X21+8]
	098 Move [X31+24], X0
	099 Move X8, [X21]
	100 Move X0, X8
	101 Call 0x1C17F10
	102 Move X22, 0x83F000
	103 Move X22, [X22+16]
	104 Move X24, X0
	105 Move X1, [X22]
	106 Call List`1<Vector4>..ctor, X0
	107 Move X0, [X21]
	108 Call 0x1C17F10
	109 Move X1, [X22]
	110 Move X21, X0
	111 Call List`1<Vector4>..ctor, X0
	112 Move W1, 2
	113 Move X0, X29
	114 Move X2, X24
	115 Move X3, X31
	116 Move [X31+16], X24
	117 Call Mesh.GetUVs, X0, X1, X2
	118 Move W1, 3
	119 Move X0, X29
	120 Move X2, X21
	121 Move X3, X31
	122 Move [X31+8], X21
	123 Call Mesh.GetUVs, X0, X1, X2
	124 Compare X23, 0
	125 JumpIfEqual {130}
	126 Move W8, [X23+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSET not yet implemented."
	129 Move [X31+108], W8
	130 Move [X31+108], W31
	131 Move X8, [X31+56]
	132 Compare X8, 0
	133 JumpIfEqual {137}
	134 Move W8, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Move W8, 1
	138 Move [X31+104], W8
	139 Move X8, [X31+48]
	140 Compare X8, 0
	141 JumpIfEqual {145}
	142 Move W8, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CSET not yet implemented."
	145 Move W8, 1
	146 Move [X31+100], W8
	147 Move X8, [X31+40]
	148 Compare X8, 0
	149 JumpIfEqual {153}
	150 Move W8, [X8+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move W8, 1
	154 Move [X31+96], W8
	155 Move X8, [X31+32]
	156 Compare X8, 0
	157 JumpIfEqual {161}
	158 Move W8, [X8+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSET not yet implemented."
	161 Move W8, 1
	162 Move [X31+92], W8
	163 Move X8, [X31+24]
	164 Compare X8, 0
	165 JumpIfEqual {169}
	166 Move W8, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CSET not yet implemented."
	169 Move W8, 1
	170 Move [X31+88], W8
	171 Move X8, [X31+56]
	172 Move X9, [X31+16]
	173 Compare X9, 0
	174 JumpIfEqual {385}
	175 Move X9, [X31+8]
	176 Compare X9, 0
	177 JumpIfEqual {385}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X9, [X31+16]
	180 Add X26, X8, 44
	181 Move X8, [X31+40]
	182 Move X29, X31
	183 Move W10, [X9+24]
	184 Move X9, [X31+8]
	185 Add X22, X8, 44
	186 Move X8, [X31+48]
	187 Add X24, X19, 32
	188 Move W9, [X9+24]
	189 Add X28, X23, 40
	190 Move [X31+80], W9
	191 Move [X31+84], W10
	192 Move W9, W20
	193 Move [X31+64], X23
	194 Move [X31+72], X9
	195 Move X9, [X31+24]
	196 Add X23, X8, 40
	197 Add X21, X9, 36
	198 Move X9, [X31+32]
	199 Add X25, X9, 36
	200 Move X8, 0x83F000
	201 Move X8, [X8+32]
	202 Move X0, [X8]
	203 Call 0x1C17F10
	204 Move X1, X31
	205 Move X27, X0
	206 Call Vertex..ctor, X0
	207 Compare X19, 0
	208 JumpIfEqual {385}
	209 Move W8, [X19+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move W8, [X31+108]
	212 Move [X24], X27
	213 Compare W8, 0
	214 JumpIfEqual {228}
	215 Move X8, [X31+64]
	216 Compare X8, 0
	217 JumpIfEqual {385}
	218 Move W8, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Compare X27, 0
	221 JumpIfEqual {385}
	222 Move S1, [X28-4]
	223 Move S2, [X28]
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 Move X0, X27
	226 Move X1, X31
	227 Call Vertex.set_position, X0, X1
	228 Move W8, [X31+104]
	229 Move TEMP, X8
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {249}
	233 Move W8, [X19+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X8, [X31+56]
	236 Compare X8, 0
	237 JumpIfEqual {385}
	238 Move W8, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X0, [X24]
	241 Compare X0, 0
	242 JumpIfEqual {385}
	243 Move S2, [X26-4]
	244 Move S3, [X26]
	245 Move S0, [X26-12]
	246 Move S1, [X26-8]
	247 Move X1, X31
	248 Call Vertex.set_color, X0, X1
	249 Move W8, [X31+100]
	250 Move TEMP, X8
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {269}
	254 Move W8, [X19+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X8, [X31+48]
	257 Compare X8, 0
	258 JumpIfEqual {385}
	259 Move W8, [X8+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, [X24]
	262 Compare X0, 0
	263 JumpIfEqual {385}
	264 Move S1, [X23-4]
	265 Move S2, [X23]
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Move X1, X31
	268 Call Vertex.set_normal, X0, X1
	269 Move W8, [X31+96]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {290}
	274 Move W8, [X19+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X8, [X31+40]
	277 Compare X8, 0
	278 JumpIfEqual {385}
	279 Move W8, [X8+24]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, [X24]
	282 Compare X0, 0
	283 JumpIfEqual {385}
	284 Move S2, [X22-4]
	285 Move S3, [X22]
	286 Move S0, [X22-12]
	287 Move S1, [X22-8]
	288 Move X1, X31
	289 Call Vertex.set_tangent, X0, X1
	290 Move W8, [X31+92]
	291 Move TEMP, X8
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {309}
	295 Move W8, [X19+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X8, [X31+32]
	298 Compare X8, 0
	299 JumpIfEqual {385}
	300 Move W8, [X8+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X0, [X24]
	303 Compare X0, 0
	304 JumpIfEqual {385}
	305 Move S0, [X25-4]
	306 Move S1, [X25]
	307 Move X1, X31
	308 Call Vertex.set_uv0, X0, X1
	309 Move W8, [X31+88]
	310 Move TEMP, X8
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfEqual {328}
	314 Move W8, [X19+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X8, [X31+24]
	317 Compare X8, 0
	318 JumpIfEqual {385}
	319 Move W8, [X8+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X0, [X24]
	322 Compare X0, 0
	323 JumpIfEqual {385}
	324 Move S0, [X21-4]
	325 Move S1, [X21]
	326 Move X1, X31
	327 Call Vertex.set_uv2, X0, X1
	328 Move W8, [X31+84]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move W8, [X19+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X8, 0x83F000
	333 Move X27, [X24]
	334 Move X8, [X8+56]
	335 Move X0, [X31+16]
	336 Move W1, W29
	337 Move X2, [X8]
	338 Call List`1<Vector4>.get_Item, X0, X1
	339 Compare X27, 0
	340 JumpIfEqual {385}
	341 Move X0, X27
	342 Move X1, X31
	343 Call Vertex.set_uv3, X0, X1
	344 Move W8, [X31+80]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move W8, [X19+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X8, 0x83F000
	349 Move X27, [X24]
	350 Move X8, [X8+56]
	351 Move X0, [X31+8]
	352 Move W1, W29
	353 Move X2, [X8]
	354 Call List`1<Vector4>.get_Item, X0, X1
	355 Compare X27, 0
	356 JumpIfEqual {385}
	357 Move X0, X27
	358 Move X1, X31
	359 Call Vertex.set_uv4, X0, X1
	360 Move X8, [X31+72]
	361 Add X29, X29, 1
	362 Add X28, X28, 12
	363 Add X21, X21, 8
	364 Add X25, X25, 8
	365 Add X26, X26, 16
	366 Add X22, X22, 16
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Add X23, X23, 12
	369 Move X0, X19
	370 Move X20, [X31+192]
	371 Move X19, [X31+200]
	372 Move X22, [X31+176]
	373 Move X21, [X31+184]
	374 Move X24, [X31+160]
	375 Move X23, [X31+168]
	376 Move X26, [X31+144]
	377 Move X25, [X31+152]
	378 Move X28, [X31+128]
	379 Move X27, [X31+136]
	380 Move X29, [X31+112]
	381 Move X30, [X31+120]
	382 Add X31, X31, 208
	383 Return X0
	384 Call 0x1C17F28
	385 Call 0x1C17F20

Method: System.Void CollapseSharedVertices(UnityEngine.Mesh mesh, UnityEngine.ProBuilder.Vertex[] vertices = null)

Disassembly:
	0x03912918 LDP S0, S1, [X23 + 0x38]
	0x0391291C LDP S2, S3, [X23 + 0x40]
	0x03912920 MOV X0, X31
	0x03912924 BL 0x390B488
	0x03912928 TBZ X0, 0x0, 0x3912964
	0x0391292C LDP S0, S1, [X23 + 0x50]
	0x03912930 MOV X0, X31
	0x03912934 BL 0x390B428
	0x03912938 TBZ X0, 0x0, 0x3912964
	0x0391293C LDP S0, S1, [X23 + 0x58]
	0x03912940 LDP S2, S3, [X23 + 0x60]
	0x03912944 MOV X0, X31
	0x03912948 BL 0x390B488
	0x0391294C TBZ X0, 0x0, 0x3912964
	0x03912950 LDP S0, S1, [X23 + 0x68]
	0x03912954 LDP S2, S3, [X23 + 0x70]
	0x03912958 MOV X0, X31
	0x0391295C BL 0x390B488
	0x03912960 TBNZ X0, 0x0, 0x39129A4
	0x03912964 LDR X0, [X26]
	0x03912968 ADD X1, X31, 0xC
	0x0391296C STR W22, [X31 + 0xC]
	0x03912970 BL 0x1C16E04
	0x03912974 MOV X24, X0
	0x03912978 MOV X0, X23
	0x0391297C MOV X1, X31
	0x03912980 MOV X2, X31
	0x03912984 BL 0x393EAF8
	0x03912988 CBZ X20, 0x39129E0
	0x0391298C LDR X1, [X27]
	0x03912990 MOV X3, X0
	0x03912994 MOV X0, X20
	0x03912998 MOV X2, X24
	0x0391299C MOV X4, X31
	0x039129A0 BL 0x3234D98
	0x039129A4 ADD W22, W22, 0x1
	0x039129A8 CMP W22, W21
	0x039129AC B.NE 0x3912868
	0x039129B0 CBZ X20, 0x39129E0
	0x039129B4 LDR X8, [X20]
	0x039129B8 MOV X0, X20
	0x039129BC LDP X9, X1, [X8 + 0x168]
	0x039129C0 BLR X9
	0x039129C4 LDP X20, X19, [X31 + 0x50]
	0x039129C8 LDP X22, X21, [X31 + 0x40]
	0x039129CC LDP X24, X23, [X31 + 0x30]
	0x039129D0 LDP X26, X25, [X31 + 0x20]
	0x039129D4 LDP X30, X27, [X31 + 0x10]
	0x039129D8 ADD X31, X31, 0x60
	0x039129DC RET
	0x039129E0 BL 0x1C16F20
	0x039129E4 SUB X31, X31, 0x30
	0x039129E8 STR X30, [X31 + 0x10]
	0x039129EC STP X20, X19, [X31 + 0x20]
	0x039129F0 ADRP X20, 0xACF000
	0x039129F4 LDRB W8, [X20 + 0x81E]
	0x039129F8 MOV X19, X0
	0x039129FC TBNZ X8, 0x0, 0x3912A20
	0x03912A00 ADRP X0, 0x83C000
	0x03912A04 LDR X0, [X0 + 0x1F8]
	0x03912A08 BL 0x1C16CF4
	0x03912A0C ADRP X0, 0x7E1000
	0x03912A10 LDR X0, [X0 + 0x598]
	0x03912A14 BL 0x1C16CF4
	0x03912A18 MOVZ W8, 0x1
	0x03912A1C STRB W8, [X20 + 0x81E]
	0x03912A20 STR X31, [X31 + 0x18]
	0x03912A24 STR X31, [X31 + 0x8]
	0x03912A28 CBZ X19, 0x3912AD4
	0x03912A2C ADRP X8, 0x83C000
	0x03912A30 LDR X8, [X8 + 0x1F8]
	0x03912A34 ADD X1, X31, 0x18
	0x03912A38 MOV X0, X19
	0x03912A3C LDR X2, [X8]
	0x03912A40 BL 0x21A4990
	0x03912A44 TBZ X0, 0x0, 0x3912AC0
	0x03912A48 LDR X0, [X31 + 0x18]
	0x03912A4C CBZ X0, 0x3912AD4
	0x03912A50 MOV X1, X31
	0x03912A54 BL 0x3C8751C
	0x03912A58 STR X0, [X31 + 0x8]
	0x03912A5C ADD X0, X31, 0x8
	0x03912A60 MOV X1, X31
	0x03912A64 BL 0x3C87528
	0x03912A68 MOV X20, X0
	0x03912A6C MOV X0, X19
	0x03912A70 BL 0x3912AD8
	0x03912A74 ADRP X8, 0x7E1000
	0x03912A78 LDR X8, [X8 + 0x598]
	0x03912A7C MOV X19, X0
	0x03912A80 LDR X8, [X8]
	0x03912A84 LDR W9, [X8 + 0xE0]
	0x03912A88 CBNZ W9, 0x3912A94
	0x03912A8C MOV X0, X8
	0x03912A90 BL 0x1C16DFC
	0x03912A94 MOV X0, X20
	0x03912A98 MOV X1, X19
	0x03912A9C MOV X2, X31
	0x03912AA0 BL 0x3C3883C
	0x03912AA4 TBZ X0, 0x0, 0x3912AC0
	0x03912AA8 ADD X0, X31, 0x8
	0x03912AAC MOV X1, X31
	0x03912AB0 MOV X2, X31
	0x03912AB4 BL 0x3C875A0
	0x03912AB8 MOVZ W0, 0x1
	0x03912ABC B 0x3912AC4
	0x03912AC0 MOV W0, W31
	0x03912AC4 LDP X20, X19, [X31 + 0x20]
	0x03912AC8 LDR X30, [X31 + 0x10]
	0x03912ACC ADD X31, X31, 0x30
	0x03912AD0 RET
	0x03912AD4 BL 0x1C16F20
	0x03912AD8 STR X30, [X31 - 0x20]!
	0x03912ADC STP X20, X19, [X31 + 0x10]
	0x03912AE0 ADRP X20, 0xACF000
	0x03912AE4 LDRB W8, [X20 + 0x841]
	0x03912AE8 MOV X19, X0
	0x03912AEC TBNZ X8, 0x0, 0x3912B04
	0x03912AF0 ADRP X0, 0x83C000
	0x03912AF4 LDR X0, [X0 + 0x200]
	0x03912AF8 BL 0x1C16CF4
	0x03912AFC MOVZ W8, 0x1
	0x03912B00 STRB W8, [X20 + 0x841]
	0x03912B04 MOV X0, X19
	0x03912B08 MOV X1, X31
	0x03912B0C BL 0x3C32ECC
	0x03912B10 CBZ X0, 0x3912B48
	0x03912B14 ADRP X8, 0x83C000
	0x03912B18 LDR X8, [X8 + 0x200]
	0x03912B1C ADD X19, X19, 0xB8
	0x03912B20 MOV X1, X19
	0x03912B24 LDR X2, [X8]
	0x03912B28 BL 0x21E6600
	0x03912B2C TBZ X0, 0x0, 0x3912B38
	0x03912B30 LDR X0, [X19]
	0x03912B34 B 0x3912B3C
	0x03912B38 MOV X0, X31
	0x03912B3C LDP X20, X19, [X31 + 0x10]
	0x03912B40 LDR X30, [X31], #0x20
	0x03912B44 RET
	0x03912B48 BL 0x1C16F20
	0x03912B4C SUB X31, X31, 0x30
	0x03912B50 STR X30, [X31 + 0x10]
	0x03912B54 STP X20, X19, [X31 + 0x20]
	0x03912B58 ADRP X20, 0xACF000
	0x03912B5C LDRB W8, [X20 + 0x81F]
	0x03912B60 MOV X19, X0
	0x03912B64 TBNZ X8, 0x0, 0x3912B7C
	0x03912B68 ADRP X0, 0x83C000
	0x03912B6C LDR X0, [X0 + 0x1F8]
	0x03912B70 BL 0x1C16CF4
	0x03912B74 MOVZ W8, 0x1
	0x03912B78 STRB W8, [X20 + 0x81F]
	0x03912B7C STR X31, [X31 + 0x18]
	0x03912B80 STR X31, [X31 + 0x8]
	0x03912B84 CBZ X19, 0x3912BE0
	0x03912B88 ADRP X8, 0x83C000
	0x03912B8C LDR X8, [X8 + 0x1F8]
	0x03912B90 ADD X1, X31, 0x18
	0x03912B94 MOV X0, X19
	0x03912B98 LDR X2, [X8]
	0x03912B9C BL 0x21A4990
	0x03912BA0 TBZ X0, 0x0, 0x3912BD0
	0x03912BA4 LDR X0, [X31 + 0x18]
	0x03912BA8 CBZ X0, 0x3912BE0
	0x03912BAC MOV X1, X31
	0x03912BB0 BL 0x3C8751C
	0x03912BB4 STR X0, [X31 + 0x8]
	0x03912BB8 MOV X0, X19
	0x03912BBC BL 0x3912AD8
	0x03912BC0 MOV X1, X0
	0x03912BC4 ADD X0, X31, 0x8
	0x03912BC8 MOV X2, X31
	0x03912BCC BL 0x3C875A0
	0x03912BD0 LDP X20, X19, [X31 + 0x20]
	0x03912BD4 LDR X30, [X31 + 0x10]
	0x03912BD8 ADD X31, X31, 0x30
	0x03912BDC RET
	0x03912BE0 BL 0x1C16F20
	0x03912BE4 SUB X31, X31, 0x40
	0x03912BE8 STP X30, X21, [X31 + 0x20]
	0x03912BEC STP X20, X19, [X31 + 0x30]
	0x03912BF0 ADRP X21, 0xACF000
	0x03912BF4 LDRB W9, [X21 + 0x820]
	0x03912BF8 MOV X20, X0
	0x03912BFC MOV X19, X8
	0x03912C00 TBNZ X9, 0x0, 0x3912C18
	0x03912C04 ADRP X0, 0x7E1000
	0x03912C08 LDR X0, [X0 + 0x598]
	0x03912C0C BL 0x1C16CF4
	0x03912C10 MOVZ W8, 0x1
	0x03912C14 STRB W8, [X21 + 0x820]
	0x03912C18 CBZ X20, 0x3912CA8
	0x03912C1C ADRP X21, 0x7E1000
	0x03912C20 LDR X21, [X21 + 0x598]
	0x03912C24 MOV X0, X20
	0x03912C28 BL 0x3912CAC
	0x03912C2C LDR X8, [X21]
	0x03912C30 MOV X21, X0
	0x03912C34 LDR W9, [X8 + 0xE0]
	0x03912C38 CBNZ W9, 0x3912C44
	0x03912C3C MOV X0, X8
	0x03912C40 BL 0x1C16DFC
	0x03912C44 MOV X0, X21
	0x03912C48 MOV X1, X31
	0x03912C4C MOV X2, X31
	0x03912C50 BL 0x3C354F8
	0x03912C54 TBZ X0, 0x0, 0x3912C74
	0x03912C58 MOV X0, X20
	0x03912C5C BL 0x3912CAC
	0x03912C60 CBZ X0, 0x3912CA8
	0x03912C64 ADD X8, X31, 0x8
	0x03912C68 MOV X1, X31
	0x03912C6C BL 0x3C17768
	0x03912C70 B 0x3912C88
	0x03912C74 LDR X0, [X20 + 0x58]
	0x03912C78 ADD X8, X31, 0x8
	0x03912C7C MOV X1, X31
	0x03912C80 MOV X2, X31
	0x03912C84 BL 0x3905368
	0x03912C88 LDR X8, [X31 + 0x18]
	0x03912C8C LDUR V0, [X31 + 0x8]
	0x03912C90 LDP X30, X21, [X31 + 0x20]
	0x03912C94 STR X8, [X19 + 0x10]
	0x03912C98 STR V0, [X19]
	0x03912C9C LDP X20, X19, [X31 + 0x30]
	0x03912CA0 ADD X31, X31, 0x40
	0x03912CA4 RET
	0x03912CA8 BL 0x1C16F20
	0x03912CAC STP X30, X21, [X31 - 0x20]!
	0x03912CB0 STP X20, X19, [X31 + 0x10]
	0x03912CB4 ADRP X20, 0xACF000
	0x03912CB8 ADRP X21, 0x7E1000
	0x03912CBC LDRB W8, [X20 + 0x86B]
	0x03912CC0 LDR X21, [X21 + 0x598]
	0x03912CC4 MOV X19, X0
	0x03912CC8 TBNZ X8, 0x0, 0x3912CE0
	0x03912CCC ADRP X0, 0x7E1000
	0x03912CD0 LDR X0, [X0 + 0x598]
	0x03912CD4 BL 0x1C16CF4
	0x03912CD8 MOVZ W8, 0x1
	0x03912CDC STRB W8, [X20 + 0x86B]
	0x03912CE0 LDR X0, [X21]
	0x03912CE4 LDR X20, [X19 + 0xB0]
	0x03912CE8 LDR W8, [X0 + 0xE0]
	0x03912CEC CBNZ W8, 0x3912CF4
	0x03912CF0 BL 0x1C16DFC
	0x03912CF4 MOV X0, X20
	0x03912CF8 MOV X1, X31
	0x03912CFC MOV X2, X31
	0x03912D00 BL 0x3C3883C
	0x03912D04 TBZ X0, 0x0, 0x3912D54
	0x03912D08 MOV X0, X19
	0x03912D0C BL 0x3915860
	0x03912D10 LDR X8, [X21]
	0x03912D14 MOV X20, X0
	0x03912D18 LDR W9, [X8 + 0xE0]
	0x03912D1C CBNZ W9, 0x3912D28
	0x03912D20 MOV X0, X8
	0x03912D24 BL 0x1C16DFC
	0x03912D28 MOV X0, X20
	0x03912D2C MOV X1, X31
	0x03912D30 MOV X2, X31
	0x03912D34 BL 0x3C354F8
	0x03912D38 TBZ X0, 0x0, 0x3912D54
	0x03912D3C MOV X0, X19
	0x03912D40 BL 0x3915860
	0x03912D44 CBZ X0, 0x3912D64
	0x03912D48 MOV X1, X31
	0x03912D4C BL 0x3C16D04
	0x03912D50 STR X0, [X19 + 0xB0]
	0x03912D54 LDR X0, [X19 + 0xB0]
	0x03912D58 LDP X20, X19, [X31 + 0x10]
	0x03912D5C LDP X30, X21, [X31], #0x20
	0x03912D60 RET
	0x03912D64 BL 0x1C16F20
	0x03912D68 STR X30, [X31 - 0x20]!
	0x03912D6C STP X20, X19, [X31 + 0x10]
	0x03912D70 ADRP X19, 0xACF000
	0x03912D74 ADRP X20, 0x83C000
	0x03912D78 LDRB W8, [X19 + 0x821]
	0x03912D7C LDR X20, [X20 + 0x1D8]
	0x03912D80 TBNZ X8, 0x0, 0x3912D98
	0x03912D84 ADRP X0, 0x83C000
	0x03912D88 LDR X0, [X0 + 0x1D8]
	0x03912D8C BL 0x1C16CF4
	0x03912D90 MOVZ W8, 0x1
	0x03912D94 STRB W8, [X19 + 0x821]
	0x03912D98 LDR X0, [X20]
	0x03912D9C BL 0x1C16F10
	0x03912DA0 MOV X1, X31
	0x03912DA4 MOV X19, X0
	0x03912DA8 BL 0x33BDD8C
	0x03912DAC LDR X8, [X20]
	0x03912DB0 LDR X8, [X8 + 0xB8]
	0x03912DB4 STR X19, [X8]
	0x03912DB8 LDP X20, X19, [X31 + 0x10]
	0x03912DBC LDR X30, [X31], #0x20
	0x03912DC0 RET
	0x03912DC4 MOV X1, X31
	0x03912DC8 B 0x33BDD8C
	0x03912DCC STR X30, [X31 - 0x20]!
	0x03912DD0 STP X20, X19, [X31 + 0x10]
	0x03912DD4 ADRP X20, 0xACF000
	0x03912DD8 LDRB W8, [X20 + 0x822]
	0x03912DDC MOV X19, X1
	0x03912DE0 TBNZ X8, 0x0, 0x3912DF8
	0x03912DE4 ADRP X0, 0x83C000
	0x03912DE8 LDR X0, [X0 + 0x208]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xAD0000
	015 Move X19, 0x7E2000
	016 Move W8, [X20+2075]
	017 Move X19, [X19+1432]
	018 Move X21, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {68}
	024 Move X0, 0x83D000
	025 Move X0, [X0+384]
	026 Call 0x1C17CF4
	027 Move X0, 0x83D000
	028 Move X0, [X0+392]
	029 Call 0x1C17CF4
	030 Move X0, 0x83D000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0x83D000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0x83D000
	037 Move X0, [X0+416]
	038 Call 0x1C17CF4
	039 Move X0, 0x83D000
	040 Move X0, [X0+424]
	041 Call 0x1C17CF4
	042 Move X0, 0x83D000
	043 Move X0, [X0+432]
	044 Call 0x1C17CF4
	045 Move X0, 0x81A000
	046 Move X0, [X0+3488]
	047 Call 0x1C17CF4
	048 Move X0, 0x83D000
	049 Move X0, [X0+440]
	050 Call 0x1C17CF4
	051 Move X0, 0x83D000
	052 Move X0, [X0+448]
	053 Call 0x1C17CF4
	054 Move X0, 0x83D000
	055 Move X0, [X0+456]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E2000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x83D000
	061 Move X0, [X0+464]
	062 Call 0x1C17CF4
	063 Move X0, 0x83D000
	064 Move X0, [X0+472]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2075], W8
	068 Move X0, [X19]
	069 Move [X31+44], W31
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X24
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {312}
	082 Move X23, X21
	083 Compare X21, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X24
	086 Call MeshUtility.GetVertices, X0
	087 Move X23, X0
	088 Move [X31+8], X21
	089 Compare X24, 0
	090 JumpIfEqual {311}
	091 Move X19, 0x83D000
	092 Move X20, 0x83D000
	093 Move X21, 0x81A000
	094 Move X19, [X19+456]
	095 Move X20, [X20+448]
	096 Move X21, [X21+3488]
	097 Move X0, X24
	098 Move X1, X31
	099 Call Mesh.get_subMeshCount, X0
	100 Move X8, [X19]
	101 Move W19, W0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X1, [X20]
	105 Move [X31+32], X0
	106 Call List`1<Object>..ctor, X0
	107 Move X0, [X21]
	108 Move W1, W19
	109 Call 0x1C17D6C
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X21, X0
	112 Move [X31+28], W19
	113 Move X29, 0x83D000
	114 Move X20, 0x83D000
	115 Move X29, [X29+392]
	116 Move X20, [X20+384]
	117 Move W25, W31
	118 Move W26, W31
	119 Move [X31+16], X24
	120 Move X0, X24
	121 Move W1, W26
	122 Move X2, X31
	123 Call Mesh.GetTriangles, X0, X1
	124 Compare X21, 0
	125 JumpIfEqual {311}
	126 Move W8, [X21+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X22, X21, W26
	129 Move [X22+32], X0
	130 Move X8, 0x83D000
	131 Move X8, [X8+408]
	132 Move X0, [X8]
	133 Call 0x1C17F10
	134 Move X8, 0x83D000
	135 Move X8, [X8+400]
	136 Move X27, X0
	137 Move X1, [X8]
	138 Call Dictionary`2<Object, Int32>..ctor, X0
	139 Move W8, [X21+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W19, 8
	142 Move X8, [X22]
	143 Compare X8, 0
	144 JumpIfEqual {311}
	145 Move W9, [X8+24]
	146 Subtract X24, X19, 8
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Compare X23, 0
	150 JumpIfEqual {311}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W9, [X23+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare X27, 0
	155 JumpIfEqual {311}
	156 Add X8, X23, X8
	157 Move X28, [X8+32]
	158 Move X3, [X29]
	159 Add X2, X31, 44
	160 Move X0, X27
	161 Move X1, X28
	162 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	163 Move W8, [X21+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X9, [X22]
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {176}
	170 Compare X9, 0
	171 JumpIfEqual {311}
	172 Move W10, [X9+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W10, [X31+44]
	175 Move [X9], W10
	176 Compare X9, 0
	177 JumpIfEqual {311}
	178 Move W8, [X9+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X9], W25
	181 Move X3, [X20]
	182 Move X0, X27
	183 Move X1, X28
	184 Move W2, W25
	185 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	186 Move W8, [X21+24]
	187 Add W25, W25, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X19, X19, 1
	190 Move X0, [X31+32]
	191 Compare X0, 0
	192 JumpIfEqual {311}
	193 Move X9, 0x83D000
	194 Move W10, [X0+28]
	195 Move X8, [X0+16]
	196 Move X9, [X9+440]
	197 Add W10, W10, 1
	198 Move X9, [X9]
	199 Move [X0+28], W10
	200 Compare X8, 0
	201 JumpIfEqual {311}
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Move W11, [X8+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add W9, W10, 1
	206 Add X8, X8, X10
	207 Move [X0+24], W9
	208 Move [X8+32], X27
	209 Move X8, [X9+32]
	210 Move X1, X27
	211 Move X8, [X8+192]
	212 Move X2, [X8+112]
	213 Call List`1<Object>.AddWithResize, X0, X1
	214 Move W8, [X31+28]
	215 Move X24, [X31+16]
	216 Add W26, W26, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X19, 0x83D000
	219 Move X19, [X19+472]
	220 Move X0, [X19]
	221 Move W8, [X0+224]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 Call 0x1C17DFC
	225 Move X0, [X19]
	226 Move X8, [X0+184]
	227 Move X22, 0x83D000
	228 Move X20, 0x83D000
	229 Move X25, [X8+8]
	230 Move X22, [X22+416]
	231 Move X20, [X20+424]
	232 Compare X25, 0
	233 JumpIfNotEqual {255}
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {239}
	237 Call 0x1C17DFC
	238 Move X0, [X19]
	239 Move X9, 0x83D000
	240 Move X8, [X0+184]
	241 Move X9, [X9+432]
	242 Move X26, [X8]
	243 Move X0, [X9]
	244 Call 0x1C17F10
	245 Move X8, 0x83D000
	246 Move X8, [X8+464]
	247 Move X1, X26
	248 Move X3, X31
	249 Move X25, X0
	250 Move X2, [X8]
	251 Call Func`2<Object, Object>..ctor, X0, X1, X2
	252 Move X8, [X19]
	253 Move X8, [X8+184]
	254 Move [X8+8], X25
	255 Move X2, [X22]
	256 Move X0, [X31+32]
	257 Move X1, X25
	258 Call Enumerable.SelectMany, X0, X1
	259 Move X1, [X20]
	260 Call Enumerable.ToArray, X0
	261 Compare X0, 0
	262 JumpIfEqual {311}
	263 Compare X23, 0
	264 JumpIfEqual {311}
	265 Move X8, [X31+8]
	266 Move X1, X0
	267 Compare X8, 0
	268 JumpIfNotEqual {272}
	269 Move W8, [X1+24]
	270 Move W9, [X23+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, X24
	273 Move X2, X31
	274 Call Vertex.SetMesh, X0, X1
	275 Move W19, [X31+28]
	276 Move X0, X24
	277 Move X2, X31
	278 Move W1, W19
	279 Call Mesh.set_subMeshCount, X0, X1
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Compare X21, 0
	282 JumpIfEqual {311}
	283 Move W8, [X31+28]
	284 Move X20, X31
	285 Add X22, X21, 32
	286 Move W19, W8
	287 Move W8, [X21+24]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X1, [X22]
	290 Move X0, X24
	291 Move W2, W20
	292 Move X3, X31
	293 Call Mesh.SetTriangles, X0, X1, X2
	294 Add X20, X20, 1
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X20, [X31+128]
	297 Move X19, [X31+136]
	298 Move X22, [X31+112]
	299 Move X21, [X31+120]
	300 Move X24, [X31+96]
	301 Move X23, [X31+104]
	302 Move X26, [X31+80]
	303 Move X25, [X31+88]
	304 Move X28, [X31+64]
	305 Move X27, [X31+72]
	306 Move X29, [X31+48]
	307 Move X30, [X31+56]
	308 Add X31, X31, 144
	309 Return 
	310 Call 0x1C17F28
	311 Call 0x1C17F20
	312 Move X0, 0x7E7000
	313 Move X0, [X0+1320]
	314 Call 0x1C17D08
	315 Call 0x1C17F10
	316 Move X19, X0
	317 Move X0, 0x83C000
	318 Move X0, [X0+3728]
	319 Call 0x1C17D08
	320 Move X1, X0
	321 Move X0, X19
	322 Move X2, X31
	323 Call ArgumentNullException..ctor, X0, X1
	324 Move X0, 0x83D000
	325 Move X0, [X0+480]
	326 Call 0x1C17D08
	327 Move X1, X0
	328 Move X0, X19
	329 Call 0x1C17DEC

Method: System.Void FitToSize(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Bounds currentSize, UnityEngine.Vector3 sizeToFit)

Disassembly:
	0x03912DEC BL 0x1C16CF4
	0x03912DF0 MOVZ W8, 0x1
	0x03912DF4 STRB W8, [X20 + 0x822]
	0x03912DF8 CBZ X19, 0x3912E18
	0x03912DFC ADRP X8, 0x83C000
	0x03912E00 LDR X8, [X8 + 0x208]
	0x03912E04 MOV X0, X19
	0x03912E08 LDP X20, X19, [X31 + 0x10]
	0x03912E0C LDR X1, [X8]
	0x03912E10 LDR X30, [X31], #0x20
	0x03912E14 B 0x2A9ED9C
	0x03912E18 BL 0x1C16F20
	0x03912E1C LDP S0, S1, [X0]
	0x03912E20 LDR V2, [X0 + 0x8]
	0x03912E24 RET
	0x03912E28 STP S0, S1, [X0]
	0x03912E2C STR S2, [X0 + 0x8]
	0x03912E30 RET
	0x03912E34 LDP S0, S1, [X0 + 0xC]
	0x03912E38 LDP S2, S3, [X0 + 0x14]
	0x03912E3C RET
	0x03912E40 STP S0, S1, [X0 + 0xC]
	0x03912E44 STP S2, S3, [X0 + 0x14]
	0x03912E48 RET
	0x03912E4C LDP S0, S1, [X0 + 0x1C]
	0x03912E50 LDR V2, [X0 + 0x24]
	0x03912E54 RET
	0x03912E58 STP S0, S1, [X0 + 0x1C]
	0x03912E5C STR S2, [X0 + 0x24]
	0x03912E60 RET
	0x03912E64 SUB X31, X31, 0x50
	0x03912E68 STP X30, X21, [X31 + 0x30]
	0x03912E6C STP X20, X19, [X31 + 0x40]
	0x03912E70 ADRP X21, 0xACF000
	0x03912E74 LDRB W8, [X21 + 0x823]
	0x03912E78 MOV X20, X1
	0x03912E7C MOV X19, X0
	0x03912E80 TBNZ X8, 0x0, 0x3912E98
	0x03912E84 ADRP X0, 0x83C000
	0x03912E88 LDR X0, [X0 + 0x210]
	0x03912E8C BL 0x1C16CF4
	0x03912E90 MOVZ W8, 0x1
	0x03912E94 STRB W8, [X21 + 0x823]
	0x03912E98 CBZ X20, 0x3912EB4
	0x03912E9C ADRP X8, 0x83C000
	0x03912EA0 LDR X8, [X8 + 0x210]
	0x03912EA4 LDR X9, [X20]
	0x03912EA8 LDR X8, [X8]
	0x03912EAC CMP X9, X8
	0x03912EB0 B.EQ 0x3912EBC
	0x03912EB4 MOV W0, W31
	0x03912EB8 B 0x3912EE0
	0x03912EBC MOV X0, X20
	0x03912EC0 BL 0x1C16E08
	0x03912EC4 LDP V0, V1, [X0]
	0x03912EC8 LDR X8, [X0 + 0x20]
	0x03912ECC ADD X1, X31, 0x0
	0x03912ED0 MOV X0, X19
	0x03912ED4 STP V0, V1, [X31]
	0x03912ED8 STR X8, [X31 + 0x20]
	0x03912EDC BL 0x3912EF4
	0x03912EE0 LDP X20, X19, [X31 + 0x40]
	0x03912EE4 LDP X30, X21, [X31 + 0x30]
	0x03912EE8 AND W0, W0, 0x1
	0x03912EEC ADD X31, X31, 0x50
	0x03912EF0 RET
	0x03912EF4 STR D8, [X31 - 0x20]!
	0x03912EF8 STR X30, [X31 + 0x8]
	0x03912EFC STP X20, X19, [X31 + 0x10]
	0x03912F00 ADRP X8, 0xFFFFFFFFFD1D7000
	0x03912F04 LDR V8, [X8 + 0xF28]
	0x03912F08 LDP S0, S1, [X0]
	0x03912F0C LDR V2, [X0 + 0x8]
	0x03912F10 LDP S3, S4, [X1]
	0x03912F14 LDR V5, [X1 + 0x8]
	0x03912F18 MOV X20, X0
	0x03912F1C MOV V6.16B, V8.16B
	0x03912F20 MOV X0, X31
	0x03912F24 MOV X19, X1
	0x03912F28 BL 0x390B304
	0x03912F2C TBZ X0, 0x0, 0x3912F78
	0x03912F30 LDP S0, S1, [X20 + 0xC]
	0x03912F34 LDR V2, [X20 + 0x14]
	0x03912F38 LDP S3, S4, [X19 + 0xC]
	0x03912F3C LDR V5, [X19 + 0x14]
	0x03912F40 MOV V6.16B, V8.16B
	0x03912F44 MOV X0, X31
	0x03912F48 BL 0x390B304
	0x03912F4C TBZ X0, 0x0, 0x3912F78
	0x03912F50 LDP S0, S1, [X20 + 0x1C]
	0x03912F54 LDR V2, [X20 + 0x24]
	0x03912F58 LDP S3, S4, [X19 + 0x1C]
	0x03912F5C LDR V5, [X19 + 0x24]
	0x03912F60 LDP X20, X19, [X31 + 0x10]
	0x03912F64 LDR X30, [X31 + 0x8]
	0x03912F68 MOV V6.16B, V8.16B
	0x03912F6C MOV X0, X31
	0x03912F70 LDR V8, [X31], #0x20
	0x03912F74 B 0x390B304
	0x03912F78 LDP X20, X19, [X31 + 0x10]
	0x03912F7C LDR X30, [X31 + 0x8]
	0x03912F80 MOV W0, W31
	0x03912F84 LDR V8, [X31], #0x20
	0x03912F88 RET
	0x03912F8C STR X30, [X31 - 0x20]!
	0x03912F90 STP X20, X19, [X31 + 0x10]
	0x03912F94 LDP S0, S1, [X0]
	0x03912F98 LDR V2, [X0 + 0x8]
	0x03912F9C MOV X19, X0
	0x03912FA0 MOV X0, X31
	0x03912FA4 BL 0x392830C
	0x03912FA8 LDP S0, S1, [X19 + 0xC]
	0x03912FAC LDP S2, S3, [X19 + 0x14]
	0x03912FB0 MOV W20, W0
	0x03912FB4 MOV X0, X31
	0x03912FB8 BL 0x393CEC0
	0x03912FBC LDP S0, S1, [X19 + 0x1C]
	0x03912FC0 LDR V2, [X19 + 0x24]
	0x03912FC4 MOV W19, W0
	0x03912FC8 MOV X0, X31
	0x03912FCC BL 0x392830C
	0x03912FD0 MOVZ W8, 0x18D
	0x03912FD4 MUL W9, W20, W8
	0x03912FD8 EOR W9, W19, W9, 0x0
	0x03912FDC LDP X20, X19, [X31 + 0x10]
	0x03912FE0 MUL W8, W9, W8
	0x03912FE4 EOR W0, W0, W8, 0x0
	0x03912FE8 LDR X30, [X31], #0x20
	0x03912FEC RET
	0x03912FF0 SUB X31, X31, 0x40
	0x03912FF4 STR X30, [X31 + 0x30]
	0x03912FF8 LDR X8, [X1 + 0x20]
	0x03912FFC LDP V1, V0, [X1]
	0x03913000 ADD X1, X31, 0x0
	0x03913004 STR X8, [X31 + 0x20]
	0x03913008 STP V1, V0, [X31]
	0x0391300C BL 0x3912EF4
	0x03913010 LDR X30, [X31 + 0x30]
	0x03913014 AND W0, W0, 0x1
	0x03913018 ADD X31, X31, 0x40
	0x0391301C RET
	0x03913020 SUB X31, X31, 0x70
	0x03913024 STR X30, [X31 + 0x60]
	0x03913028 LDR X8, [X0 + 0x20]
	0x0391302C LDP V1, V0, [X0]
	0x03913030 ADD X0, X31, 0x0
	0x03913034 STR X8, [X31 + 0x20]
	0x03913038 STP V1, V0, [X31]
	0x0391303C LDR X8, [X1 + 0x20]
	0x03913040 LDP V1, V0, [X1]
	0x03913044 ADD X1, X31, 0x30
	0x03913048 STR X8, [X31 + 0x50]
	0x0391304C STP V1, V0, [X31 + 0x30]
	0x03913050 BL 0x3912EF4
	0x03913054 LDR X30, [X31 + 0x60]
	0x03913058 ORN W8, W31, W0, 0x0
	0x0391305C AND W0, W8, 0x1
	0x03913060 ADD X31, X31, 0x70
	0x03913064 RET
	0x03913068 STP X30, X21, [X31 - 0x20]!
	0x0391306C STP X20, X19, [X31 + 0x10]
	0x03913070 ADRP X21, 0xACE000
	0x03913074 ADRP X20, 0x83A000
	0x03913078 LDRB W8, [X21 + 0x824]
	0x0391307C LDR X20, [X20 + 0xE78]
	0x03913080 MOV W19, W0
	0x03913084 TBNZ X8, 0x0, 0x39130A8
	0x03913088 ADRP X0, 0x809000
	0x0391308C LDR X0, [X0 + 0xED0]
	0x03913090 BL 0x1C16CF4
	0x03913094 ADRP X0, 0x83A000
	0x03913098 LDR X0, [X0 + 0xE78]
	0x0391309C BL 0x1C16CF4
	0x039130A0 MOVZ W8, 0x1
	0x039130A4 STRB W8, [X21 + 0x824]
	0x039130A8 LDR X0, [X20]
	0x039130AC LDR W8, [X0 + 0xE0]
	0x039130B0 CBNZ W8, 0x39130BC
	0x039130B4 BL 0x1C16DFC
	0x039130B8 LDR X0, [X20]
	0x039130BC LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D12
	003 Move [X31+40], D11
	004 Move [X31+48], D10
	005 Move [X31+56], D9
	006 Move [X31+64], D8
	007 Move [X31+72], X30
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0xAD0000
	013 Move W8, [X21+2076]
	014 Move V8, V2
	015 Move V9, V1
	016 Move V10, V0
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x7E2000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2076], W8
	028 Compare X19, 0
	029 JumpIfEqual {205}
	030 Move X8, [X19+88]
	031 Compare X8, 0
	032 JumpIfEqual {192}
	033 Move W8, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move V0, V10
	036 Move V1, V9
	037 Move V2, V8
	038 Move X0, X31
	039 Call Math.Abs, X0
	040 Move S3, [X20+12]
	041 Move S4, [X20+16]
	042 Move V5, [X20+20]
	043 Move X0, X31
	044 Add S3, S3, S3
	045 Add S4, S4, S4
	046 Add S5, S5, S5
	047 Call Math.DivideBy, X0, X1
	048 Move X21, 0xAC7000
	049 Move W8, [X21+2139]
	050 Move V10, V0
	051 Move V9, V1
	052 Move V8, V2
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, 0x7E2000
	056 Move X0, [X0+1440]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+2139], W8
	060 Move X21, 0x7E2000
	061 Move X21, [X21+1440]
	062 Move X9, -48398336
	063 Move V11, [X9+3872]
	064 Move X8, [X21]
	065 Move X8, [X8+184]
	066 Move S0, [X8+12]
	067 Move S1, [X8+16]
	068 Move V2, [X8+20]
	069 Subtract S0, S10, S0
	070 Subtract S1, S9, S1
	071 Multiply S0, S0, S0
	072 Multiply S1, S1, S1
	073 Add S0, S0, S1
	074 Subtract S1, S8, S2
	075 Multiply S1, S1, S1
	076 Add S0, S1, S0
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move X22, 0xAC7000
	079 Move W9, [X22+1923]
	080 Compare W9, 0
	081 JumpIfNotEqual {88}
	082 Move X0, X21
	083 Call 0x1C17CF4
	084 Move X8, [X21]
	085 Move W9, 1
	086 Move [X22+1923], W9
	087 Move X8, [X8+184]
	088 Move S0, [X8]
	089 Move S1, [X8+4]
	090 Move V2, [X8+8]
	091 Subtract S0, S10, S0
	092 Subtract S1, S9, S1
	093 Subtract S2, S8, S2
	094 Multiply S0, S0, S0
	095 Multiply S1, S1, S1
	096 Add S0, S0, S1
	097 Multiply S1, S2, S2
	098 Add S0, S1, S0
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move X22, 0x7E2000
	101 Move X22, [X22+1448]
	102 Move V0, [X20+12]
	103 Move X21, [X19+88]
	104 Move X0, [X22]
	105 Add S12, S0, S0
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {112}
	109 Call 0x1C17DFC
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Move X9, -48394240
	113 Move V11, [X9+1040]
	114 Move V1, [X20+16]
	115 NotImplemented "Instruction FABS not yet implemented."
	116 Move S12, W31
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 NotImplemented "Instruction FCSEL not yet implemented."
	119 Add S10, S1, S1
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move [X31+1], V5
	123 Call 0x1C17DFC
	124 Move X0, [X22]
	125 Move V5, [X31+1]
	126 Move W8, [X0+224]
	127 Move V0, [X20+20]
	128 NotImplemented "Instruction FABS not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 NotImplemented "Instruction FCSEL not yet implemented."
	131 Add S9, S0, S0
	132 Compare W8, 0
	133 JumpIfNotEqual {139}
	134 Move [X31], V1
	135 Move [X31+8], V5
	136 Call 0x1C17DFC
	137 Move V1, [X31]
	138 Move V5, [X31+16]
	139 Move X8, [X19+88]
	140 NotImplemented "Instruction FABS not yet implemented."
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 Move S0, W31
	143 NotImplemented "Instruction FCSEL not yet implemented."
	144 Compare X8, 0
	145 JumpIfEqual {174}
	146 Move X10, [X8+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare X21, 0
	149 JumpIfEqual {205}
	150 Move W9, [X21+24]
	151 Move X8, X31
	152 And X10, X10, 0
	153 Move V5.S[1], V1.S[0]
	154 Add X11, X21, 40
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 Move V2, [X11]
	158 Move V3, [X20]
	159 Move V4, [X20+8]
	160 Add X8, X8, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract V1, V1, V3
	163 Subtract S2, S2, S4
	164 NotImplemented "Instruction INVALID not yet implemented."
	165 Multiply S2, S0, S2
	166 Move [X11-8], D1
	167 Move [X11], S2
	168 Move V3, [X20]
	169 Move V4, [X20+8]
	170 Add V1, V1, V3
	171 Add S2, S2, S4
	172 Move [X11-8], D1
	173 Move [X11+12], S2
	174 Move X0, X19
	175 Move W1, W31
	176 Call ProBuilderMesh.ToMesh, X0, X1
	177 Move X0, X19
	178 Move X20, [X31+96]
	179 Move X19, [X31+104]
	180 Move X22, [X31+80]
	181 Move X21, [X31+88]
	182 Move X30, [X31+72]
	183 Move D9, [X31+56]
	184 Move D8, [X31+64]
	185 Move D11, [X31+40]
	186 Move D10, [X31+48]
	187 Move V12, [X31+32]
	188 Move W1, 31
	189 Add X31, X31, 112
	190 Call ProBuilderMesh.Refresh, X0, X1
	191 Return 
	192 Move X20, [X31+96]
	193 Move X19, [X31+104]
	194 Move X22, [X31+80]
	195 Move X21, [X31+88]
	196 Move X30, [X31+72]
	197 Move D9, [X31+56]
	198 Move D8, [X31+64]
	199 Move D11, [X31+40]
	200 Move D10, [X31+48]
	201 Move V12, [X31+32]
	202 Add X31, X31, 112
	203 Return 
	204 Call 0x1C17F28
	205 Call 0x1C17F20

Method: System.String SanityCheck(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x039130F8 LDR X2, [X9]
	0x039130FC BL 0x2116294
	0x03913100 CMP W19, 0x1
	0x03913104 B.LT 0x3913150
	0x03913108 LDR X0, [X20]
	0x0391310C MOV X21, X31
	0x03913110 MOV W19, W19

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X1, X31
	005 Call ProBuilderMesh.GetVertices, X0, X1
	006 Move X30, [X31+16]
	007 Call MeshUtility.SanityCheck, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.String SanityCheck(UnityEngine.Mesh mesh)

Disassembly:
	0x03911DC4 MOV X1, X0
	0x03911DC8 MOV X0, X19
	0x03911DCC MOV X2, X31
	0x03911DD0 BL 0x330E100

ISIL:
	001 Move [X31-16], X30
	002 Call MeshUtility.GetVertices, X0
	003 Move X30, [X31+16]
	004 Call MeshUtility.SanityCheck, X0
	005 Return X0

Method: System.String SanityCheck(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices)

Disassembly:
	0x03913754 STR W31, [X11], #0xC
	0x03913758 CMP X10, X8
	0x0391375C B.NE 0x3913744
	0x03913760 STR W20, [X31 + 0x14]
	0x03913764 CBZ X22, 0x3913B1C
	0x03913768 LDR X8, [X22 + 0x18]
	0x0391376C CMP W8, 0x1
	0x03913770 STR X8, [X31 + 0x20]
	0x03913774 B.LT 0x3913A58
	0x03913778 LDR X8, [X31 + 0x20]
	0x0391377C CBZ W8, 0x3913A54
	0x03913780 ADRP X21, 0x7E0000
	0x03913784 LDR X21, [X21 + 0x5A8]
	0x03913788 ADRP X8, 0xFFFFFFFFFD1D7000
	0x0391378C STR X22, [X31 + 0x18]
	0x03913790 ADRP X29, 0x83A000
	0x03913794 LDR V11, [X8 + 0x17C]
	0x03913798 LDR X29, [X29 + 0xE78]
	0x0391379C MOV W9, W31
	0x039137A0 MOVZ W28, 0xC
	0x039137A4 ADD X8, X22, W9, 0x3, SXTW
	0x039137A8 LDR X8, [X8 + 0x20]
	0x039137AC CBZ X8, 0x3913B1C
	0x039137B0 LDR X25, [X8 + 0x10]
	0x039137B4 STR W9, [X31 + 0x2C]
	0x039137B8 CBZ X25, 0x3913B1C
	0x039137BC LDR W8, [X25 + 0x18]
	0x039137C0 CMP W8, 0x1
	0x039137C4 B.LT 0x3913A34
	0x039137C8 MOVZ W20, 0x2
	0x039137CC SUB W9, W20, 0x2
	0x039137D0 CMP W9, W8
	0x039137D4 B.CS 0x3913A54
	0x039137D8 ADD W10, W9, 0x1
	0x039137DC CMP W10, W8
	0x039137E0 B.CS 0x3913A54
	0x039137E4 ADD W26, W10, 0x1
	0x039137E8 CMP W26, W8
	0x039137EC B.CS 0x3913A54
	0x039137F0 CBZ X24, 0x3913B1C
	0x039137F4 ADD X8, X25, W9, 0x2, SXTW
	0x039137F8 LDRSW X22, [X8 + 0x20]
	0x039137FC LDR W8, [X24 + 0x18]
	0x03913800 CMP W22, W8
	0x03913804 B.CS 0x3913A54
	0x03913808 SUB W9, W20, 0x1
	0x0391380C ADD X9, X25, W9, 0x2, SXTW
	0x03913810 LDRSW X27, [X9 + 0x20]
	0x03913814 CMP W27, W8
	0x03913818 B.CS 0x3913A54
	0x0391381C ADD X9, X25, W20, 0x2, SXTW
	0x03913820 LDRSW X23, [X9 + 0x20]
	0x03913824 CMP W23, W8
	0x03913828 B.CS 0x3913A54
	0x0391382C MADD X8, X22, X28, X24
	0x03913830 ADD X9, X24, 0x20
	0x03913834 LDP S0, S1, [X8 + 0x20]
	0x03913838 LDR V2, [X8 + 0x28]
	0x0391383C NOP
	0x03913840 MADD X8, X27, X28, X9
	0x03913844 MADD X9, X23, X28, X9
	0x03913848 LDP S4, S5, [X8 + 0x4]
	0x0391384C LDR V3, [X8]
	0x03913850 LDR X8, [X9]
	0x03913854 LDR V6, [X9 + 0x8]
	0x03913858 MOV X0, X31
	0x0391385C STR X8, [X31]
	0x03913860 STR S6, [X31 + 0x8]
	0x03913864 BL 0x3908F20
	0x03913868 ADRP X8, 0xAC5000
	0x0391386C LDRB W8, [X8 + 0x785]
	0x03913870 MOV V8.16B, V0.16B
	0x03913874 MOV V9.16B, V1.16B
	0x03913878 MOV V10.16B, V2.16B
	0x0391387C CBNZ W8, 0x3913894
	0x03913880 MOV X0, X21
	0x03913884 BL 0x1C16CF4
	0x03913888 ADRP X8, 0xAC5000
	0x0391388C MOVZ W9, 0x1
	0x03913890 STRB W9, [X8 + 0x785]
	0x03913894 LDR X0, [X21]
	0x03913898 LDR W8, [X0 + 0xE0]
	0x0391389C CBNZ W8, 0x39138A4
	0x039138A0 BL 0x1C16DFC
	0x039138A4 FMUL S0, S8, S8
	0x039138A8 FMUL S1, S9, S9
	0x039138AC FADD S0, S0, S1
	0x039138B0 FMUL S1, S10, S10
	0x039138B4 FADD S0, S1, S0
	0x039138B8 FSQRT S0, S0
	0x039138BC FCMP S0, S11
	0x039138C0 B.LE 0x39138D4
	0x039138C4 FDIV S2, S8, S0
	0x039138C8 FDIV S1, S9, S0
	0x039138CC FDIV S0, S10, S0
	0x039138D0 B 0x3913910
	0x039138D4 ADRP X8, 0xAC5000
	0x039138D8 LDRB W8, [X8 + 0x783]
	0x039138DC CBNZ W8, 0x39138F8
	0x039138E0 ADRP X0, 0x7E0000
	0x039138E4 LDR X0, [X0 + 0x5A0]
	0x039138E8 BL 0x1C16CF4
	0x039138EC MOVZ W8, 0x1
	0x039138F0 ADRP X9, 0xAC5000
	0x039138F4 STRB W8, [X9 + 0x783]
	0x039138F8 ADRP X8, 0x7E0000
	0x039138FC LDR X8, [X8 + 0x5A0]
	0x03913900 LDR X8, [X8]
	0x03913904 LDR X8, [X8 + 0xB8]
	0x03913908 LDP S2, S1, [X8]
	0x0391390C LDR V0, [X8 + 0x8]
	0x03913910 CBZ X19, 0x3913B1C
	0x03913914 LDR W8, [X19 + 0x18]
	0x03913918 CMP W22, W8
	0x0391391C B.CS 0x3913A54
	0x03913920 MADD X9, X22, X28, X19
	0x03913924 LDR V3, [X9 + 0x20]
	0x03913928 CMP W27, W8
	0x0391392C FADD S3, S2, S3
	0x03913930 STR S3, [X9 + 0x20]
	0x03913934 B.CS 0x3913A54
	0x03913938 MADD X9, X27, X28, X19
	0x0391393C LDR V3, [X9 + 0x20]
	0x03913940 CMP W23, W8
	0x03913944 FADD S3, S2, S3
	0x03913948 STR S3, [X9 + 0x20]
	0x0391394C B.CS 0x3913A54
	0x03913950 ADD X8, X19, 0x20
	0x03913954 MADD X9, X23, X28, X8
	0x03913958 LDR V3, [X9]
	0x0391395C NOP
	0x03913960 MADD X10, X22, X28, X8
	0x03913964 MADD X8, X27, X28, X8
	0x03913968 FADD S4, S2, S3
	0x0391396C LDR V2, [X10 + 0x4]
	0x03913970 FADD S2, S1, S2
	0x03913974 STR S2, [X10 + 0x4]
	0x03913978 LDR V2, [X8 + 0x4]
	0x0391397C FADD S2, S1, S2
	0x03913980 STR S2, [X8 + 0x4]
	0x03913984 LDR V2, [X9 + 0x4]
	0x03913988 FADD S1, S1, S2
	0x0391398C STP S4, S1, [X9]
	0x03913990 LDR V1, [X10 + 0x8]
	0x03913994 FADD S1, S0, S1
	0x03913998 STR S1, [X10 + 0x8]
	0x0391399C LDR V1, [X8 + 0x8]
	0x039139A0 FADD S1, S0, S1
	0x039139A4 STR S1, [X8 + 0x8]
	0x039139A8 LDR V1, [X9 + 0x8]
	0x039139AC FADD S0, S0, S1
	0x039139B0 STR S0, [X9 + 0x8]
	0x039139B4 LDR X0, [X29]
	0x039139B8 LDR W8, [X0 + 0xE0]
	0x039139BC CBNZ W8, 0x39139C8
	0x039139C0 BL 0x1C16DFC
	0x039139C4 LDR X0, [X29]
	0x039139C8 LDR X8, [X0 + 0xB8]
	0x039139CC LDR X8, [X8 + 0x10]
	0x039139D0 CBZ X8, 0x3913B1C
	0x039139D4 LDR W9, [X8 + 0x18]
	0x039139D8 CMP W22, W9
	0x039139DC B.CS 0x3913A54
	0x039139E0 ADD X10, X8, X22, 0x2, LSL

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xACF000
	013 Move X21, 0x7E1000
	014 Move W8, [X20+2077]
	015 Move X21, [X21+2288]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x83C000
	022 Move X0, [X0+488]
	023 Call 0x1C17CF4
	024 Move X0, 0x83B000
	025 Move X0, [X0+3936]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E1000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E1000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0x83C000
	034 Move X0, [X0+496]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2077], W8
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call StringBuilder..ctor, X0
	043 Compare X19, 0
	044 JumpIfEqual {214}
	045 Move X10, 0x83C000
	046 Move X8, [X19]
	047 Move X10, [X10+488]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Move X1, [X10]
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X25, 0x83B000
	070 Move X26, 0x7E1000
	071 Move X27, 0x83C000
	072 Move X25, [X25+3936]
	073 Move X26, [X26+1880]
	074 Move X27, [X27+496]
	075 Move W21, W0
	076 Move W22, W31
	077 Move X8, [X19]
	078 Move X1, [X25]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X2, [X0+8]
	096 Move X0, X19
	097 Move W1, W22
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare X0, 0
	100 JumpIfEqual {214}
	101 Move S0, [X0+16]
	102 Move S1, [X0+20]
	103 Move V2, [X0+24]
	104 Move X23, X0
	105 Move X0, X31
	106 Call Math.IsNumber, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {176}
	111 Move S0, [X23+28]
	112 Move S1, [X23+32]
	113 Move S2, [X23+36]
	114 Move S3, [X23+40]
	115 Move X0, X31
	116 Call Math.IsNumber, X0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {176}
	121 Move S0, [X23+72]
	122 Move S1, [X23+76]
	123 Move X0, X31
	124 Call Math.IsNumber, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {176}
	129 Move S0, [X23+44]
	130 Move S1, [X23+48]
	131 Move V2, [X23+52]
	132 Move X0, X31
	133 Call Math.IsNumber, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {176}
	138 Move S0, [X23+56]
	139 Move S1, [X23+60]
	140 Move S2, [X23+64]
	141 Move S3, [X23+68]
	142 Move X0, X31
	143 Call Math.IsNumber, X0
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {176}
	148 Move S0, [X23+80]
	149 Move S1, [X23+84]
	150 Move X0, X31
	151 Call Math.IsNumber, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {176}
	156 Move S0, [X23+88]
	157 Move S1, [X23+92]
	158 Move S2, [X23+96]
	159 Move S3, [X23+100]
	160 Move X0, X31
	161 Call Math.IsNumber, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {176}
	166 Move S0, [X23+104]
	167 Move S1, [X23+108]
	168 Move S2, [X23+112]
	169 Move S3, [X23+116]
	170 Move X0, X31
	171 Call Math.IsNumber, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {193}
	176 Move X0, [X26]
	177 Add X1, X31, 12
	178 Move [X31+12], W22
	179 Call 0x1C17E04
	180 Move X24, X0
	181 Move X0, X23
	182 Move X1, X31
	183 Move X2, X31
	184 Call Vertex.ToString, X0, X1
	185 Compare X20, 0
	186 JumpIfEqual {214}
	187 Move X1, [X27]
	188 Move X3, X0
	189 Move X0, X20
	190 Move X2, X24
	191 Move X4, X31
	192 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	193 Add W22, W22, 1
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Compare X20, 0
	196 JumpIfEqual {214}
	197 Move X8, [X20]
	198 Move X0, X20
	199 Move X9, [X8+360]
	200 Move X1, [X8+368]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X20, [X31+80]
	203 Move X19, [X31+88]
	204 Move X22, [X31+64]
	205 Move X21, [X31+72]
	206 Move X24, [X31+48]
	207 Move X23, [X31+56]
	208 Move X26, [X31+32]
	209 Move X25, [X31+40]
	210 Move X30, [X31+16]
	211 Move X27, [X31+24]
	212 Add X31, X31, 96
	213 Return X0
	214 Call 0x1C17F20

Method: System.Boolean IsUsedInParticleSystem(UnityEngine.ProBuilder.ProBuilderMesh pbmesh)

Disassembly:
	0x039139E4 LDR W11, [X10 + 0x20]
	0x039139E8 CMP W27, W9
	0x039139EC ADD W11, W11, 0x1
	0x039139F0 STR W11, [X10 + 0x20]
	0x039139F4 B.CS 0x3913A54
	0x039139F8 ADD X10, X8, X27, 0x2, LSL
	0x039139FC LDR W11, [X10 + 0x20]
	0x03913A00 CMP W23, W9
	0x03913A04 ADD W11, W11, 0x1
	0x03913A08 STR W11, [X10 + 0x20]
	0x03913A0C B.CS 0x3913A54
	0x03913A10 ADD X8, X8, X23, 0x2, LSL
	0x03913A14 LDR W9, [X8 + 0x20]
	0x03913A18 ADD W20, W20, 0x3
	0x03913A1C ADD W9, W9, 0x1
	0x03913A20 STR W9, [X8 + 0x20]
	0x03913A24 LDR W8, [X25 + 0x18]
	0x03913A28 ADD W9, W26, 0x1
	0x03913A2C CMP W9, W8
	0x03913A30 B.LT 0x39137CC
	0x03913A34 LDR W9, [X31 + 0x2C]
	0x03913A38 LDP X22, X8, [X31 + 0x18]
	0x03913A3C ADD W9, W9, 0x1
	0x03913A40 CMP W9, W8
	0x03913A44 B.EQ 0x3913A58
	0x03913A48 LDR W8, [X22 + 0x18]
	0x03913A4C CMP W9, W8
	0x03913A50 B.CC 0x39137A4
	0x03913A54 BL 0x1C16F28
	0x03913A58 LDR W9, [X31 + 0x14]
	0x03913A5C ADRP X23, 0x83A000
	0x03913A60 LDR X23, [X23 + 0xE78]
	0x03913A64 CMP W9, 0x1
	0x03913A68 B.LT 0x3913AF4
	0x03913A6C CBZ X19, 0x3913B1C
	0x03913A70 LDR W8, [X19 + 0x18]
	0x03913A74 MOV X20, X31
	0x03913A78 MOV W21, W9
	0x03913A7C ADD X22, X19, 0x24
	0x03913A80 CMP X20, W8, UXTW
	0x03913A84 B.CS 0x3913A54
	0x03913A88 LDR X0, [X23]
	0x03913A8C LDUR V8, [X22 - 0x4]
	0x03913A90 LDR W8, [X0 + 0xE0]
	0x03913A94 CBNZ W8, 0x3913AA0
	0x03913A98 BL 0x1C16DFC
	0x03913A9C LDR X0, [X23]
	0x03913AA0 LDR X8, [X0 + 0xB8]
	0x03913AA4 LDR X9, [X8 + 0x10]
	0x03913AA8 CBZ X9, 0x3913B1C
	0x03913AAC LDR W8, [X9 + 0x18]
	0x03913AB0 CMP X20, X8
	0x03913AB4 B.CS 0x3913A54
	0x03913AB8 LDR W8, [X19 + 0x18]
	0x03913ABC CMP X20, X8
	0x03913AC0 B.CS 0x3913A54
	0x03913AC4 ADD X9, X9, X20, 0x2, LSL
	0x03913AC8 LDR V0, [X9 + 0x20]
	0x03913ACC LDR V1, [X22]
	0x03913AD0 ADD X20, X20, 0x1
	0x03913AD4 CMP X21, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xACF000
	006 Move W8, [X20+2078]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x83C000
	013 Move X0, [X0+504]
	014 Call 0x1C17CF4
	015 Move X0, 0x7E1000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2078], W8
	020 Move [X31+24], X31
	021 Move [X31+8], X31
	022 Compare X19, 0
	023 JumpIfEqual {74}
	024 Move X8, 0x83C000
	025 Move X8, [X8+504]
	026 Add X1, X31, 24
	027 Move X0, X19
	028 Move X2, [X8]
	029 Call 0x21A5990, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {68}
	034 Move X0, [X31+24]
	035 Compare X0, 0
	036 JumpIfEqual {74}
	037 Move X1, X31
	038 Call ParticleSystem.get_shape, X0
	039 Move [X31+8], X0
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Call ShapeModule.get_meshRenderer, X0
	043 Move X20, X0
	044 Move X0, X19
	045 Call ProBuilderMesh.get_renderer, X0
	046 Move X8, 0x7E1000
	047 Move X8, [X8+1432]
	048 Move X19, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X19
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {68}
	063 Add X0, X31, 8
	064 Move X1, X31
	065 Move X2, X31
	066 Call ShapeModule.set_meshRenderer, X0, X1
	067 Move W0, 1
	068 Move W0, W31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X30, [X31+16]
	072 Add X31, X31, 48
	073 Return X0
	074 Call 0x1C17F20

Method: System.Void RestoreParticleSystem(UnityEngine.ProBuilder.ProBuilderMesh pbmesh)

Disassembly:
	0x03913B4C LDR X22, [X22 + 0xE78]
	0x03913B50 MOV X19, X0
	0x03913B54 TBNZ X8, 0x0, 0x3913B84
	0x03913B58 ADRP X0, 0x83B000
	0x03913B5C LDR X0, [X0 + 0x220]
	0x03913B60 BL 0x1C16CF4
	0x03913B64 ADRP X0, 0x83B000
	0x03913B68 LDR X0, [X0 + 0x228]
	0x03913B6C BL 0x1C16CF4
	0x03913B70 ADRP X0, 0x83A000
	0x03913B74 LDR X0, [X0 + 0xE78]
	0x03913B78 BL 0x1C16CF4
	0x03913B7C MOVZ W8, 0x1
	0x03913B80 STRB W8, [X20 + 0x827]
	0x03913B84 LDR X0, [X22]
	0x03913B88 LDR W8, [X0 + 0xE0]
	0x03913B8C CBNZ W8, 0x3913B94
	0x03913B90 BL 0x1C16DFC
	0x03913B94 MOV X0, X19
	0x03913B98 BL 0x3913664
	0x03913B9C CBZ X19, 0x39140C0
	0x03913BA0 LDR X8, [X19 + 0x58]
	0x03913BA4 CBZ X8, 0x3913BB0
	0x03913BA8 LDR W0, [X8 + 0x18]
	0x03913BAC B 0x3913BB4
	0x03913BB0 MOV W0, W31
	0x03913BB4 LDP X25, X23, [X19 + 0x28]
	0x03913BB8 LDR X24, [X19 + 0x80]
	0x03913BBC BL 0x3913068
	0x03913BC0 LDR X8, [X19 + 0x28]
	0x03913BC4 CBZ X8, 0x3913C94
	0x03913BC8 LDR W26, [X8 + 0x18]
	0x03913BCC CMP W26, 0x1
	0x03913BD0 B.LT 0x3913C94
	0x03913BD4 CBZ X25, 0x39140C0
	0x03913BD8 MOV W27, W31
	0x03913BDC MOVZ W19, 0x18
	0x03913BE0 LDR W8, [X25 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xACF000
	006 Move W8, [X20+2079]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x83C000
	013 Move X0, [X0+504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2079], W8
	017 Move [X31+24], X31
	018 Move [X31+8], X31
	019 Compare X19, 0
	020 JumpIfEqual {48}
	021 Move X8, 0x83C000
	022 Move X8, [X8+504]
	023 Add X1, X31, 24
	024 Move X0, X19
	025 Move X2, [X8]
	026 Call 0x21A5990, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {43}
	031 Move X0, [X31+24]
	032 Compare X0, 0
	033 JumpIfEqual {48}
	034 Move X1, X31
	035 Call ParticleSystem.get_shape, X0
	036 Move [X31+8], X0
	037 Move X0, X19
	038 Call ProBuilderMesh.get_renderer, X0
	039 Move X1, X0
	040 Add X0, X31, 8
	041 Move X2, X31
	042 Call ShapeModule.set_meshRenderer, X0, X1
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Add X31, X31, 48
	047 Return 
	048 Call 0x1C17F20

Method: UnityEngine.Bounds GetBounds(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03913BE4 CMP W27, W8
	0x03913BE8 B.CS 0x39140C4
	0x03913BEC ADD X8, X25, W27, 0x3, SXTW
	0x03913BF0 LDR X20, [X8 + 0x20]
	0x03913BF4 CBZ X20, 0x39140C0
	0x03913BF8 MOV X0, X20
	0x03913BFC MOV X1, X31
	0x03913C00 BL 0x38FF530
	0x03913C04 CBZ X0, 0x39140C0
	0x03913C08 LDR X28, [X0 + 0x18]
	0x03913C0C MOV X21, X0
	0x03913C10 CMP W28, 0x1
	0x03913C14 B.LT 0x3913C84
	0x03913C18 LDR X0, [X22]
	0x03913C1C MOV W29, W31
	0x03913C20 MOV X8, X28
	0x03913C24 LDR W9, [X0 + 0xE0]
	0x03913C28 CBNZ W9, 0x3913C38
	0x03913C2C BL 0x1C16DFC
	0x03913C30 LDR X0, [X22]
	0x03913C34 LDR X8, [X21 + 0x18]
	0x03913C38 CMP W29, W8
	0x03913C3C B.CS 0x39140C4
	0x03913C40 LDR X9, [X0 + 0xB8]
	0x03913C44 LDR X9, [X9 + 0x10]
	0x03913C48 CBZ X9, 0x39140C0
	0x03913C4C ADD X10, X21, W29, 0x2, SXTW
	0x03913C50 LDRSW X10, [X10 + 0x20]
	0x03913C54 LDR W11, [X9 + 0x18]
	0x03913C58 CMP W10, W11
	0x03913C5C B.CS 0x39140C4
	0x03913C60 LDR W11, [X20 + 0x18]
	0x03913C64 ADD X9, X9, X10, 0x2, LSL
	0x03913C68 ADD W29, W29, 0x1
	0x03913C6C STR W11, [X9 + 0x20]
	0x03913C70 LDR W9, [X20 + 0x18]
	0x03913C74 CMP W9, W19
	0x03913C78 CSINC W19, W19, W9, LT
	0x03913C7C CMP W28, W29
	0x03913C80 B.NE 0x3913C24
	0x03913C84 ADD W27, W27, 0x1
	0x03913C88 CMP W27, W26
	0x03913C8C B.NE 0x3913BE0
	0x03913C90 B 0x3913C98
	0x03913C94 MOVZ W19, 0x18
	0x03913C98 LDR X0, [X22]
	0x03913C9C LDR W8, [X0 + 0xE0]
	0x03913CA0 CBNZ W8, 0x3913CAC
	0x03913CA4 BL 0x1C16DFC
	0x03913CA8 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xACF000
	007 Move W9, [X21+2080]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7E1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2080], W8
	019 Compare X20, 0
	020 JumpIfEqual {62}
	021 Move X21, 0x7E1000
	022 Move X21, [X21+1432]
	023 Move X0, X20
	024 Call ProBuilderMesh.get_mesh, X0
	025 Move X8, [X21]
	026 Move X21, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Move X0, X20
	041 Call ProBuilderMesh.get_mesh, X0
	042 Compare X0, 0
	043 JumpIfEqual {62}
	044 Add X8, X31, 8
	045 Move X1, X31
	046 Call Mesh.get_bounds, X0
	047 Move X0, [X20+88]
	048 Add X8, X31, 8
	049 Move X1, X31
	050 Move X2, X31
	051 Call Math.GetBounds, X0, X1
	052 Move X8, [X31+24]
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Move [X19+16], X8
	057 Move [X19], V0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Add X31, X31, 64
	061 Return X0
	062 Call 0x1C17F20

