Type: UnityEngine.ProBuilder.ShapeFactory

Method: UnityEngine.ProBuilder.ProBuilderMesh Instantiate(UnityEngine.ProBuilder.PivotLocation pivotType = 0)

Disassembly:
	0x02255BCC SUB X9, X29, 0x18
	0x02255BD0 STUR W8, [X29 - 0xC]
	0x02255BD4 SUB X8, X29, 0xC
	0x02255BD8 SUB X4, X29, 0x28
	0x02255BDC SUB X5, X29, 0xC
	0x02255BE0 MOV X2, X28
	0x02255BE4 MOV X3, X19
	0x02255BE8 STUR W21, [X29 - 0x18]
	0x02255BEC STP X9, X8, [X29 - 0x28]
	0x02255BF0 BL 0x1C17728
	0x02255BF4 LDR X8, [X20 + 0x8]
	0x02255BF8 CBZ X8, 0x2255EDC
	0x02255BFC ADRP X9, 0x1EA1000
	0x02255C00 LDR X9, [X9 + 0xE40]
	0x02255C04 LDR W24, [X8 + 0x4]
	0x02255C08 LDR X0, [X9]
	0x02255C0C LDR W9, [X0 + 0xE0]
	0x02255C10 CBNZ W9, 0x2255C18
	0x02255C14 BL 0x1C16DFC
	0x02255C18 LDR X8, [X25]
	0x02255C1C MOV X0, X19
	0x02255C20 MOV X1, X24
	0x02255C24 LDR X2, [X8 + 0x18]
	0x02255C28 LDR X8, [X2]
	0x02255C2C BLR X8
	0x02255C30 LDR X8, [X20 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Compare X8, 0
	005 JumpIfNotEqual {16}
	006 Move X0, 0x1E9F000
	007 Move X0, [X0+1728]
	008 Move X19, X1
	009 Call 0x1C17CF4
	010 Move X8, [X19+56]
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X9, 0x1E9F000
	017 Move X9, [X9+1728]
	018 Move X19, [X8]
	019 Move X0, [X9]
	020 Move W9, [X0+224]
	021 Compare W9, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Type.GetTypeFromHandle, X0
	027 Move W1, W31
	028 Move X2, X31
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Call ShapeFactory.Instantiate, X0, X1
	032 Return X0

Method: UnityEngine.ProBuilder.ProBuilderMesh Instantiate(System.Type shapeType, UnityEngine.ProBuilder.PivotLocation pivotType = 0)

Disassembly:
	0x0392C80C B.EQ 0x392CE2C
	0x0392C810 SUB W9, W9, 0x1
	0x0392C814 CMP W8, 0x4
	0x0392C818 STR W9, [X26 + 0x2C]
	0x0392C81C B.LS 0x392CE2C
	0x0392C820 ADD W9, W9, 0x2
	0x0392C824 CMP W8, 0x5
	0x0392C828 STR W9, [X26 + 0x30]
	0x0392C82C B.EQ 0x392CE2C
	0x0392C830 SUB W23, W9, 0x1
	0x0392C834 STR W23, [X26 + 0x34]
	0x0392C838 ADRP X8, 0x822000
	0x0392C83C LDR X8, [X8 + 0x560]
	0x0392C840 LDR X0, [X8]
	0x0392C844 BL 0x1C16F10
	0x0392C848 MOV X1, X26
	0x0392C84C MOV X2, X31
	0x0392C850 MOV X27, X0
	0x0392C854 BL 0x3900368
	0x0392C858 LDR W8, [X28 + 0x18]
	0x0392C85C ADD W9, W21, 0x1
	0x0392C860 CMP W9, W8
	0x0392C864 B.CS 0x392CE2C
	0x0392C868 LDR W11, [X31 + 0x28]
	0x0392C86C ADD X10, X28, W9, 0x3, SXTW
	0x0392C870 ADD W8, W23, 0x2
	0x0392C874 ADD W21, W9, 0x1
	0x0392C878 CMP W11, W19
	0x0392C87C STR X27, [X10 + 0x20]
	0x0392C880 B.NE 0x392C5CC
	0x0392C884 LDR W20, [X31 + 0x2C]
	0x0392C888 ADD W23, W22, 0x8
	0x0392C88C TBNZ X20, 0x0, 0x392C89C
	0x0392C890 B 0x392CD98
	0x0392C894 MOV W23, W31
	0x0392C898 TBZ X20, 0x0, 0x392CD98
	0x0392C89C STR S10, [X31 + 0x14]
	0x0392C8A0 STR W31, [X31 + 0x2C]
	0x0392C8A4 ADRP X8, 0x7C9000
	0x0392C8A8 LDR X8, [X8 + 0x9B0]
	0x0392C8AC SUB W9, W25, 0x1
	0x0392C8B0 FMOV S12, W31
	0x0392C8B4 LDR X0, [X8]
	0x0392C8B8 LDR W8, [X31 + 0x28]
	0x0392C8BC SUB W8, W24, W8
	0x0392C8C0 SUB W8, W8, 0x3
	0x0392C8C4 MOVZ W24, 0xC
	0x0392C8C8 STP W8, W9, [X31 + 0xC]
	0x0392C8CC LDR W1, [X31 + 0xC]
	0x0392C8D0 STR X28, [X31 + 0x20]
	0x0392C8D4 BL 0x1C16D6C
	0x0392C8D8 ADRP X8, 0x822000
	0x0392C8DC LDR X8, [X8 + 0x3F0]
	0x0392C8E0 LDR W1, [X31 + 0x10]
	0x0392C8E4 MOV X26, X0
	0x0392C8E8 LDR X8, [X8]
	0x0392C8EC MOV X0, X8
	0x0392C8F0 BL 0x1C16D6C
	0x0392C8F4 LDR W8, [X31 + 0x28]
	0x0392C8F8 MOV X25, X0
	0x0392C8FC CMP W8, 0x0
	0x0392C900 B.LE 0x392CC18
	0x0392C904 STR X29, [X31 + 0x18]
	0x0392C908 CBZ X26, 0x392CE30
	0x0392C90C LDR W9, [X31 + 0x2C]
	0x0392C910 MOV W8, W31
	0x0392C914 MOV W29, W31
	0x0392C918 MOV W19, W31
	0x0392C91C ADD W21, W9, 0x1
	0x0392C920 LDR W10, [X26 + 0x18]
	0x0392C924 CMP W19, 0x1
	0x0392C928 CSINC W9, W19, W31, HI
	0x0392C92C CMP W8, W10
	0x0392C930 B.CS 0x392CE2C
	0x0392C934 SCVTF S0, W19
	0x0392C938 SXTW X20, W8
	0x0392C93C FDIV S0, S0, S11
	0x0392C940 MADD X8, X20, X24, X26
	0x0392C944 FMUL S13, S8, S0
	0x0392C948 STR S12, [X8 + 0x20]
	0x0392C94C STR W31, [X8 + 0x24]
	0x0392C950 STR S13, [X8 + 0x28]
	0x0392C954 LDR W10, [X26 + 0x18]
	0x0392C958 ADD W8, W20, 0x1
	0x0392C95C CMP W8, W10
	0x0392C960 B.CS 0x392CE2C
	0x0392C964 ADD W10, W19, 0x1
	0x0392C968 SCVTF S0, W10
	0x0392C96C SXTW X8, W8
	0x0392C970 FDIV S0, S0, S11
	0x0392C974 MADD X8, X8, X24, X26
	0x0392C978 FMUL S14, S8, S0
	0x0392C97C STR S12, [X8 + 0x20]
	0x0392C980 STR W31, [X8 + 0x24]
	0x0392C984 STR S14, [X8 + 0x28]
	0x0392C988 LDR W10, [X26 + 0x18]
	0x0392C98C ADD W8, W20, 0x2
	0x0392C990 CMP W8, W10
	0x0392C994 B.CS 0x392CE2C
	0x0392C998 SCVTF S1, W9
	0x0392C99C SXTW X8, W8
	0x0392C9A0 FDIV S1, S1, S11
	0x0392C9A4 MADD X8, X8, X24, X26
	0x0392C9A8 FMUL S10, S9, S1
	0x0392C9AC STP S12, S10, [X8 + 0x20]
	0x0392C9B0 STR S13, [X8 + 0x28]
	0x0392C9B4 LDR W9, [X26 + 0x18]
	0x0392C9B8 ADD W8, W20, 0x3
	0x0392C9BC CMP W8, W9
	0x0392C9C0 B.CS 0x392CE2C
	0x0392C9C4 SXTW X8, W8
	0x0392C9C8 FMUL S15, S9, S0
	0x0392C9CC MADD X8, X8, X24, X26
	0x0392C9D0 STP S12, S15, [X8 + 0x20]
	0x0392C9D4 STR S14, [X8 + 0x28]
	0x0392C9D8 ADRP X8, 0x7C8000
	0x0392C9DC LDR X8, [X8 + 0xE58]
	0x0392C9E0 MOVZ W1, 0x6
	0x0392C9E4 LDR X0, [X8]
	0x0392C9E8 BL 0x1C16D6C
	0x0392C9EC CBZ X0, 0x392CE30
	0x0392C9F0 LDR W8, [X31 + 0x2C]
	0x0392C9F4 MOV X27, X0
	0x0392C9F8 CBZ W8, 0x392CA34
	0x0392C9FC LDR W9, [X27 + 0x18]
	0x0392CA00 CBZ W9, 0x392CE2C
	0x0392CA04 ADD W10, W23, 0x2
	0x0392CA08 CMP W9, 0x1
	0x0392CA0C STR W10, [X27 + 0x20]
	0x0392CA10 B.EQ 0x392CE2C
	0x0392CA14 ADD W8, W23, 0x1
	0x0392CA18 CMP W9, 0x2
	0x0392CA1C STR W8, [X27 + 0x24]
	0x0392CA20 B.LS 0x392CE2C
	0x0392CA24 CMP W9, 0x3
	0x0392CA28 STR W23, [X27 + 0x28]
	0x0392CA2C B.NE 0x392CA68
	0x0392CA30 B 0x392CE2C
	0x0392CA34 LDR W9, [X27 + 0x18]
	0x0392CA38 CBZ W9, 0x392CE2C
	0x0392CA3C CMP W9, 0x1
	0x0392CA40 STR W23, [X27 + 0x20]
	0x0392CA44 B.EQ 0x392CE2C
	0x0392CA48 ADD W10, W23, 0x1
	0x0392CA4C CMP W9, 0x2
	0x0392CA50 STR W10, [X27 + 0x24]
	0x0392CA54 B.LS 0x392CE2C
	0x0392CA58 ADD W8, W23, 0x2
	0x0392CA5C CMP W9, 0x3
	0x0392CA60 STR W8, [X27 + 0x28]
	0x0392CA64 B.EQ 0x392CE2C
	0x0392CA68 CMP W9, 0x4
	0x0392CA6C STR W10, [X27 + 0x2C]
	0x0392CA70 B.LS 0x392CE2C
	0x0392CA74 ADD W10, W23, 0x3
	0x0392CA78 CMP W9, 0x5
	0x0392CA7C STR W10, [X27 + 0x30]
	0x0392CA80 B.EQ 0x392CE2C
	0x0392CA84 STR W8, [X27 + 0x34]
	0x0392CA88 ADRP X8, 0x822000
	0x0392CA8C LDR X8, [X8 + 0x560]
	0x0392CA90 LDR X0, [X8]
	0x0392CA94 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAB6000
	007 Move X21, 0x7C8000
	008 Move W8, [X22+2280]
	009 Move X21, [X21+1728]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x823000
	017 Move X0, [X0+2896]
	018 Call 0x1C17CF4
	019 Move X0, 0x823000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x7C8000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2280], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call Type.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {94}
	040 Move X8, 0x823000
	041 Move X0, [X21]
	042 Move X8, [X8+2896]
	043 Move W9, [X0+224]
	044 Move X21, [X8]
	045 Compare W9, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Call Type.GetTypeFromHandle, X0
	051 Compare X19, 0
	052 JumpIfEqual {111}
	053 Move X8, [X19]
	054 Move X1, X0
	055 Move X0, X19
	056 Move X9, [X8+680]
	057 Move X2, [X8+688]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {112}
	063 Move W1, 564
	064 Move X0, X19
	065 Move X2, X31
	066 Move X3, X31
	067 Move X4, X31
	068 Move X5, X31
	069 Move X6, X31
	070 Call Activator.CreateInstance, X0, X1, X2, X3, X4, X5
	071 Compare X0, 0
	072 JumpIfEqual {86}
	073 Move X8, 0x823000
	074 Move X8, [X8+2904]
	075 Move X9, [X0]
	076 Move X8, [X8]
	077 Move W11, [X9+304]
	078 Move W10, [X8+304]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X31
	081 Move X9, [X9+200]
	082 Add X9, X9, X10
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 Move W1, W20
	087 Call ShapeFactory.Instantiate, X0, X1
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return X0
	094 Move X0, 0x7CD000
	095 Move X0, [X0+1320]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0x823000
	100 Move X0, [X0+2912]
	101 Call 0x1C17D08
	102 Move X20, X0
	103 Move X0, 0x823000
	104 Move X0, [X0+2920]
	105 Call 0x1C17D08
	106 Move X2, X0
	107 Move X0, X19
	108 Move X1, X20
	109 Move X3, X31
	110 Call ArgumentNullException..ctor, X0, X1, X2
	111 Call 0x1C17F20
	112 Move X0, 0x7D0000
	113 Move X0, [X0+1400]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x823000
	118 Move X0, [X0+2928]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X19
	122 Move X2, X31
	123 Call ArgumentException..ctor, X0, X1
	124 Move X0, 0x823000
	125 Move X0, [X0+2936]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC
	130 Move X20, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X20
	133 Call 0x3EB2AD0
	134 Move X20, X0
	135 Move X0, 0x7C8000
	136 Move X0, [X0+2000]
	137 Call 0x1C17D08
	138 Move X8, [X20]
	139 Move X1, [X8]
	140 Call 0x1C18270
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {166}
	145 Move X20, [X20]
	146 Call 0x3EB2AE0
	147 Move X0, 0x823000
	148 Move X0, [X0+2944]
	149 Call 0x1C17D08
	150 Move X1, X19
	151 Move X2, X20
	152 Move X3, X31
	153 Call String.Format, X0, X1, X2
	154 Move X19, X0
	155 Move X0, 0x7C8000
	156 Move X0, [X0+2600]
	157 Call 0x1C17D08
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Move X1, X31
	164 Call Debug.LogError, X0
	165 Move X0, X31
	166 Move W0, 8
	167 Call 0x3EB2AF0
	168 Move X8, [X20]
	169 Move [X0], X8
	170 Move X1, 0x589000
	171 Add X1, X1, 3672
	172 Move X2, X31
	173 Call 0x3EB2B00
	174 Move X20, X0
	175 Call 0x3EB2AE0
	176 Move X0, X20
	177 Call 0x1D2D690
	178 Call 0x1991590

Method: UnityEngine.ProBuilder.ProBuilderMesh Instantiate(UnityEngine.ProBuilder.Shapes.Shape shape, UnityEngine.ProBuilder.PivotLocation pivotType = 0)

Disassembly:
	0x0392CA98 MOV X1, X27
	0x0392CA9C MOV X2, X31
	0x0392CAA0 MOV X28, X0
	0x0392CAA4 BL 0x3900368
	0x0392CAA8 CBZ X25, 0x392CE30
	0x0392CAAC LDR W8, [X25 + 0x18]
	0x0392CAB0 CMP W29, W8
	0x0392CAB4 B.CS 0x392CE2C
	0x0392CAB8 ADD X8, X25, W29, 0x3, SXTW
	0x0392CABC STR X28, [X8 + 0x20]
	0x0392CAC0 CBZ X28, 0x392CE30
	0x0392CAC4 ADD W22, W29, 0x1
	0x0392CAC8 STR W21, [X28 + 0x54]
	0x0392CACC ADD W28, W23, 0x4
	0x0392CAD0 ADD W8, W20, 0x4
	0x0392CAD4 CBZ W19, 0x392CB84
	0x0392CAD8 LDR W9, [X26 + 0x18]
	0x0392CADC CMP W8, W9
	0x0392CAE0 B.CS 0x392CE2C
	0x0392CAE4 SXTW X8, W8
	0x0392CAE8 MADD X8, X8, X24, X26
	0x0392CAEC STP S12, S10, [X8 + 0x20]
	0x0392CAF0 STR S13, [X8 + 0x28]
	0x0392CAF4 LDR W9, [X26 + 0x18]
	0x0392CAF8 ADD W8, W20, 0x5
	0x0392CAFC CMP W8, W9
	0x0392CB00 B.CS 0x392CE2C
	0x0392CB04 SXTW X8, W8
	0x0392CB08 MADD X8, X8, X24, X26
	0x0392CB0C STP S12, S15, [X8 + 0x20]
	0x0392CB10 STR S13, [X8 + 0x28]
	0x0392CB14 LDR W9, [X26 + 0x18]
	0x0392CB18 ADD W8, W20, 0x6
	0x0392CB1C CMP W8, W9
	0x0392CB20 B.CS 0x392CE2C
	0x0392CB24 SXTW X8, W8
	0x0392CB28 MADD X8, X8, X24, X26
	0x0392CB2C STP S12, S15, [X8 + 0x20]
	0x0392CB30 STR S14, [X8 + 0x28]
	0x0392CB34 ADRP X8, 0x7C8000
	0x0392CB38 LDR X8, [X8 + 0xE58]
	0x0392CB3C MOVZ W1, 0x3
	0x0392CB40 LDR X0, [X8]
	0x0392CB44 BL 0x1C16D6C
	0x0392CB48 CBZ X0, 0x392CE30
	0x0392CB4C LDR W8, [X0 + 0x18]
	0x0392CB50 LDR W9, [X31 + 0x2C]
	0x0392CB54 MOV X27, X0
	0x0392CB58 CBZ W9, 0x392CB90
	0x0392CB5C CBZ W8, 0x392CE2C
	0x0392CB60 CMP W8, 0x1
	0x0392CB64 STR W28, [X27 + 0x20]
	0x0392CB68 B.EQ 0x392CE2C
	0x0392CB6C ADD W9, W23, 0x5
	0x0392CB70 CMP W8, 0x2
	0x0392CB74 STR W9, [X27 + 0x24]
	0x0392CB78 B.LS 0x392CE2C
	0x0392CB7C ADD W28, W23, 0x6
	0x0392CB80 B 0x392CBB4
	0x0392CB84 MOV W29, W22
	0x0392CB88 MOV W23, W28
	0x0392CB8C B 0x392CC00
	0x0392CB90 CBZ W8, 0x392CE2C
	0x0392CB94 ADD W9, W23, 0x6
	0x0392CB98 CMP W8, 0x1
	0x0392CB9C STR W9, [X27 + 0x20]
	0x0392CBA0 B.EQ 0x392CE2C
	0x0392CBA4 ADD W9, W23, 0x5
	0x0392CBA8 CMP W8, 0x2
	0x0392CBAC STR W9, [X27 + 0x24]
	0x0392CBB0 B.LS 0x392CE2C
	0x0392CBB4 STR W28, [X27 + 0x28]
	0x0392CBB8 ADRP X8, 0x822000
	0x0392CBBC LDR X8, [X8 + 0x560]
	0x0392CBC0 LDR X0, [X8]
	0x0392CBC4 BL 0x1C16F10
	0x0392CBC8 MOV X1, X27
	0x0392CBCC MOV X2, X31
	0x0392CBD0 MOV X28, X0
	0x0392CBD4 BL 0x3900368
	0x0392CBD8 LDR W8, [X25 + 0x18]
	0x0392CBDC CMP W22, W8
	0x0392CBE0 B.CS 0x392CE2C
	0x0392CBE4 ADD X8, X25, W22, 0x3, SXTW
	0x0392CBE8 STR X28, [X8 + 0x20]
	0x0392CBEC CBZ X28, 0x392CE30
	0x0392CBF0 ADD W29, W29, 0x2
	0x0392CBF4 ADD W23, W23, 0x7
	0x0392CBF8 ADD W8, W20, 0x7
	0x0392CBFC STR W21, [X28 + 0x54]
	0x0392CC00 LDR W9, [X31 + 0x28]
	0x0392CC04 ADD W19, W19, 0x1
	0x0392CC08 CMP W19, W9
	0x0392CC0C B.NE 0x392C920
	0x0392CC10 LDR X29, [X31 + 0x18]
	0x0392CC14 B 0x392CC20
	0x0392CC18 LDR W8, [X31 + 0x2C]
	0x0392CC1C ADD W21, W8, 0x1
	0x0392CC20 ADRP X8, 0x822000
	0x0392CC24 LDR X8, [X8 + 0xBE0]
	0x0392CC28 MOV X0, X29
	0x0392CC2C MOV X1, X26
	0x0392CC30 LDR X2, [X8]
	0x0392CC34 BL 0x217DF18
	0x0392CC38 ADRP X8, 0x822000
	0x0392CC3C LDR X8, [X8 + 0xBD8]
	0x0392CC40 MOV X29, X0
	0x0392CC44 LDR X0, [X31 + 0x20]
	0x0392CC48 MOV X1, X25
	0x0392CC4C LDR X2, [X8]
	0x0392CC50 BL 0x217DE3C
	0x0392CC54 ADRP X8, 0x7C9000
	0x0392CC58 LDR X8, [X8 + 0x9B0]
	0x0392CC5C LDR V0, [X31 + 0x14]
	0x0392CC60 MOV X28, X0
	0x0392CC64 CMP W21, 0x2
	0x0392CC68 LDR X0, [X8]
	0x0392CC6C FADD S12, S0, S12
	0x0392CC70 STR W21, [X31 + 0x2C]
	0x0392CC74 B.NE 0x392C8CC
	0x0392CC78 MOVZ W1, 0x4
	0x0392CC7C BL 0x1C16D6C
	0x0392CC80 CBZ X0, 0x392CE30
	0x0392CC84 LDR W8, [X0 + 0x18]
	0x0392CC88 LDR V0, [X31 + 0x14]
	0x0392CC8C MOV X1, X0
	0x0392CC90 CBZ W8, 0x392CE2C
	0x0392CC94 CMP W8, 0x1
	0x0392CC98 STR X31, [X1 + 0x20]
	0x0392CC9C STR S8, [X1 + 0x28]
	0x0392CCA0 B.EQ 0x392CE2C
	0x0392CCA4 CMP W8, 0x2
	0x0392CCA8 STR S0, [X1 + 0x2C]
	0x0392CCAC STR W31, [X1 + 0x30]
	0x0392CCB0 STR S8, [X1 + 0x34]
	0x0392CCB4 B.LS 0x392CE2C
	0x0392CCB8 CMP W8, 0x3
	0x0392CCBC STR W31, [X1 + 0x38]
	0x0392CCC0 STP S9, S8, [X1 + 0x3C]
	0x0392CCC4 B.EQ 0x392CE2C
	0x0392CCC8 STP S0, S9, [X1 + 0x44]
	0x0392CCCC STR S8, [X1 + 0x4C]
	0x0392CCD0 ADRP X8, 0x822000
	0x0392CCD4 LDR X8, [X8 + 0xBE0]
	0x0392CCD8 MOV X0, X29
	0x0392CCDC LDR X2, [X8]
	0x0392CCE0 BL 0x217DF18
	0x0392CCE4 ADRP X8, 0x7C8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xAB6000
	008 Move W8, [X21+2281]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x822000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x823000
	019 Move X0, [X0+2952]
	020 Call 0x1C17CF4
	021 Move X0, 0x7C8000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0x823000
	025 Move X0, [X0+2960]
	026 Call 0x1C17CF4
	027 Move X0, 0x823000
	028 Move X0, [X0+2968]
	029 Call 0x1C17CF4
	030 Move X0, 0x7C8000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x823000
	034 Move X0, [X0+2976]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2281], W8
	038 Compare X19, 0
	039 JumpIfEqual {142}
	040 Move X8, 0x7C8000
	041 Move X8, [X8+2648]
	042 Move X21, 0x823000
	043 Move X0, [X8]
	044 Move X21, [X21+2976]
	045 Call 0x1C17F10
	046 Move X1, [X21]
	047 Move X2, X31
	048 Move X21, X0
	049 Call GameObject..ctor, X0, X1
	050 Compare X21, 0
	051 JumpIfEqual {141}
	052 Move X8, 0x823000
	053 Move X8, [X8+2952]
	054 Move X0, X21
	055 Move X1, [X8]
	056 Call 0x21E61FC, X0
	057 Compare X0, 0
	058 JumpIfEqual {141}
	059 Move X1, X19
	060 Move W2, W20
	061 Move X3, X31
	062 Move X21, X0
	063 Call ProBuilderShape.SetShape, X0, X1, X2
	064 Move X0, X21
	065 Move X1, X31
	066 Call ProBuilderShape.get_mesh, X0
	067 Compare X0, 0
	068 JumpIfEqual {141}
	069 Move X21, 0x822000
	070 Move X21, [X21+2760]
	071 Move X1, X31
	072 Move X20, X0
	073 Call ProBuilderMesh.get_renderer, X0
	074 Move X8, [X21]
	075 Move X21, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call BuiltinMaterials.get_defaultMaterial
	083 Compare X21, 0
	084 JumpIfEqual {141}
	085 Move X22, 0x823000
	086 Move X23, 0x7C8000
	087 Move X22, [X22+2960]
	088 Move X23, [X23+1728]
	089 Move X1, X0
	090 Move X0, X21
	091 Move X2, X31
	092 Call Renderer.set_sharedMaterial, X0, X1
	093 Move X0, X19
	094 Move X1, X31
	095 Call "il2cpp_vm_object_is_inst", X0
	096 Move X8, [X23]
	097 Move X21, [X22]
	098 Move X19, X0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X0, X21
	105 Move X1, X31
	106 Call Type.GetTypeFromHandle, X0
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call Attribute.GetCustomAttribute, X0, X1
	111 Compare X0, 0
	112 JumpIfEqual {133}
	113 Move X8, 0x823000
	114 Move X8, [X8+2968]
	115 Move X9, [X0]
	116 Move X19, X0
	117 Move X8, [X8]
	118 Move W11, [X9+304]
	119 Move W10, [X8+304]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, [X9+200]
	122 Add X9, X9, X10
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X20
	126 Move X1, X31
	127 Call Component.get_gameObject, X0
	128 Compare X0, 0
	129 JumpIfEqual {141}
	130 Move X1, [X19+16]
	131 Move X2, X31
	132 Call Object.set_name, X0, X1
	133 Move X0, X20
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X30, [X31+48]
	139 Move X23, [X31+56]
	140 Return X0
	141 Call 0x1C17F20
	142 Move X0, 0x7CD000
	143 Move X0, [X0+1320]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0x823000
	148 Move X0, [X0+2984]
	149 Call 0x1C17D08
	150 Move X20, X0
	151 Move X0, 0x823000
	152 Move X0, [X0+2920]
	153 Call 0x1C17D08
	154 Move X2, X0
	155 Move X0, X19
	156 Move X1, X20
	157 Move X3, X31
	158 Call ArgumentNullException..ctor, X0, X1, X2
	159 Move X0, 0x823000
	160 Move X0, [X0+2992]
	161 Call 0x1C17D08
	162 Move X1, X0
	163 Move X0, X19
	164 Call 0x1C17DEC

