Type: UnityEngine.ProBuilder.Projection

Method: UnityEngine.Vector2[] PlanarProject(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions, System.Collections.Generic.IList`1<System.Int32> indexes = null)

Disassembly:
	0x039201D4 BLR X8
	0x039201D8 LDR X8, [X20]
	0x039201DC LDR X1, [X26]
	0x039201E0 MOV W24, W0
	0x039201E4 LDRH W9, [X8 + 0x12E]
	0x039201E8 CBZ X9, 0x392020C
	0x039201EC LDR X10, [X8 + 0xB0]
	0x039201F0 ADD X10, X10, 0x8
	0x039201F4 LDUR X11, [X10 - 0x8]
	0x039201F8 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call Projection.FindBestPlane, X0, X1
	007 Move X0, X20
	008 Move X1, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Call Projection.PlanarProject, X0, X1, X2
	013 Return X0

Method: UnityEngine.Vector2[] PlanarProject(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.Vector3 direction)

Disassembly:
	0x03920B78 MOV X19, X31
	0x03920B7C ADRP X23, 0xAB8000
	0x03920B80 LDRB W8, [X23 + 0x783]
	0x03920B84 CBNZ W8, 0x3920B9C
	0x03920B88 ADRP X0, 0x7D3000
	0x03920B8C LDR X0, [X0 + 0x5A0]
	0x03920B90 BL 0x1C16CF4
	0x03920B94 MOVZ W8, 0x1
	0x03920B98 STRB W8, [X23 + 0x783]
	0x03920B9C ADRP X24, 0x7D3000
	0x03920BA0 LDR X24, [X24 + 0x5A0]
	0x03920BA4 LDR X8, [X24]
	0x03920BA8 LDR X8, [X8 + 0xB8]
	0x03920BAC LDP S0, S1, [X8]
	0x03920BB0 LDR V2, [X8 + 0x8]
	0x03920BB4 ADRP X8, 0xFFFFFFFFFD1C9000
	0x03920BB8 FSUB S0, S11, S0
	0x03920BBC FSUB S1, S12, S1
	0x03920BC0 FMUL S0, S0, S0
	0x03920BC4 FMUL S1, S1, S1
	0x03920BC8 FADD S0, S0, S1
	0x03920BCC LDR V1, [X8 + 0xF20]
	0x03920BD0 FSUB S2, S10, S2
	0x03920BD4 FMUL S2, S2, S2
	0x03920BD8 FADD S0, S2, S0
	0x03920BDC FCMP S0, S1
	0x03920BE0 B.PL 0x3920C04
	0x03920BE4 MOV V0.16B, V15.16B
	0x03920BE8 MOV V1.16B, V8.16B
	0x03920BEC MOV V2.16B, V9.16B
	0x03920BF0 BL 0x39204C0
	0x03920BF4 BL 0x39205E0
	0x03920BF8 MOV V11.16B, V0.16B
	0x03920BFC MOV V12.16B, V1.16B
	0x03920C00 MOV V10.16B, V2.16B
	0x03920C04 ADRP X25, 0xAB8000
	0x03920C08 LDRB W8, [X25 + 0x785]
	0x03920C0C MOV V0.16B, V8.16B
	0x03920C10 FMUL S8, S8, S10
	0x03920C14 FMUL S14, S9, S12
	0x03920C18 MOV V13.16B, V9.16B
	0x03920C1C FMUL S9, S9, S11
	0x03920C20 FMUL S10, S15, S10
	0x03920C24 FMUL S12, S15, S12
	0x03920C28 FMUL S11, S0, S11
	0x03920C2C STP S0, S15, [X31 + 0x8]
	0x03920C30 CBNZ W8, 0x3920C48
	0x03920C34 ADRP X0, 0x7D3000
	0x03920C38 LDR X0, [X0 + 0x5A8]
	0x03920C3C BL 0x1C16CF4
	0x03920C40 MOVZ W8, 0x1
	0x03920C44 STRB W8, [X25 + 0x785]
	0x03920C48 ADRP X26, 0x7D3000
	0x03920C4C LDR X26, [X26 + 0x5A8]
	0x03920C50 FSUB S15, S8, S14
	0x03920C54 FSUB S14, S9, S10
	0x03920C58 FSUB S8, S12, S11
	0x03920C5C LDR X0, [X26]
	0x03920C60 LDR W8, [X0 + 0xE0]
	0x03920C64 CBNZ W8, 0x3920C6C
	0x03920C68 BL 0x1C16DFC
	0x03920C6C ADRP X8, 0xFFFFFFFFFD1CA000
	0x03920C70 FMUL S0, S15, S15
	0x03920C74 FMUL S1, S14, S14
	0x03920C78 LDR V2, [X8 + 0x17C]
	0x03920C7C FADD S0, S0, S1
	0x03920C80 FMUL S1, S8, S8
	0x03920C84 FADD S0, S1, S0
	0x03920C88 FSQRT S0, S0
	0x03920C8C FCMP S0, S2
	0x03920C90 MOV V10.16B, V13.16B
	0x03920C94 B.LE 0x3920CA8
	0x03920C98 FDIV S11, S15, S0
	0x03920C9C FDIV S12, S14, S0
	0x03920CA0 FDIV S13, S8, S0
	0x03920CA4 B 0x3920CDC
	0x03920CA8 LDRB W8, [X23 + 0x783]
	0x03920CAC CBNZ W8, 0x3920CCC
	0x03920CB0 ADRP X0, 0x7D3000
	0x03920CB4 LDR X0, [X0 + 0x5A0]
	0x03920CB8 MOV V9.16B, V2.16B
	0x03920CBC BL 0x1C16CF4
	0x03920CC0 MOV V2.16B, V9.16B
	0x03920CC4 MOVZ W8, 0x1
	0x03920CC8 STRB W8, [X23 + 0x783]
	0x03920CCC LDR X8, [X24]
	0x03920CD0 LDR X8, [X8 + 0xB8]
	0x03920CD4 LDP S11, S12, [X8]
	0x03920CD8 LDR V13, [X8 + 0x8]
	0x03920CDC LDP S1, S0, [X31 + 0x8]
	0x03920CE0 LDRB W8, [X25 + 0x785]
	0x03920CE4 FMUL S3, S10, S14
	0x03920CE8 FMUL S10, S10, S15
	0x03920CEC FMUL S4, S1, S8
	0x03920CF0 FMUL S9, S0, S8
	0x03920CF4 FMUL S15, S1, S15
	0x03920CF8 FMUL S14, S0, S14
	0x03920CFC CBNZ W8, 0x3920D24
	0x03920D00 ADRP X0, 0x7D3000
	0x03920D04 LDR X0, [X0 + 0x5A8]
	0x03920D08 STP S4, S2, [X31 + 0x8]
	0x03920D0C MOV V8.16B, V3.16B
	0x03920D10 BL 0x1C16CF4
	0x03920D14 LDP S4, S2, [X31 + 0x8]
	0x03920D18 MOV V3.16B, V8.16B
	0x03920D1C MOVZ W8, 0x1
	0x03920D20 STRB W8, [X25 + 0x785]
	0x03920D24 LDR X0, [X26]
	0x03920D28 FSUB S8, S3, S4
	0x03920D2C FSUB S9, S9, S10

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAC2000
	010 Move W8, [X21+2213]
	011 Move V8, V2
	012 Move V9, V1
	013 Move V10, V0
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x7FC000
	021 Move X0, [X0+1952]
	022 Call 0x1C17CF4
	023 Move X0, 0x82E000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move X0, 0x801000
	027 Move X0, [X0+1808]
	028 Call 0x1C17CF4
	029 Move X0, 0x82F000
	030 Move X0, [X0+1808]
	031 Call 0x1C17CF4
	032 Move X0, 0x82F000
	033 Move X0, [X0+1816]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2213], W8
	037 Compare X19, 0
	038 JumpIfEqual {55}
	039 Move X10, 0x7FC000
	040 Move X8, [X19]
	041 Move X10, [X10+1952]
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X19
	053 Move W2, W31
	054 Call 0x1C5D788
	055 Compare X20, 0
	056 JumpIfEqual {120}
	057 Move X10, 0x82E000
	058 Move X8, [X20]
	059 Move X10, [X10+3960]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X20
	071 Move W2, W31
	072 Call 0x1C5D788
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Add X8, X8, X9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X1, [X0+8]
	078 Move X0, X19
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x82F000
	087 Move X8, [X8+1816]
	088 Move W21, W0
	089 Move X22, 0x82F000
	090 Move X0, [X8]
	091 Move X22, [X22+1808]
	092 Call 0x1C17F10
	093 Move X2, [X22]
	094 Move W1, W21
	095 Move X22, X0
	096 Call List`1<Vector2>..ctor, X0, X1
	097 Move X0, X20
	098 Move X1, X19
	099 Move V0, V10
	100 Move V1, V9
	101 Move V2, V8
	102 Move X2, X22
	103 Call Projection.PlanarProject, X0, X1, X2, X3
	104 Compare X22, 0
	105 JumpIfEqual {120}
	106 Move X8, 0x801000
	107 Move X8, [X8+1808]
	108 Move X0, X22
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X1, [X8]
	114 Move X30, [X31+24]
	115 Move D9, [X31+8]
	116 Move D8, [X31+16]
	117 Move V10, [X31+64]
	118 Call List`1<Vector2>.ToArray, X0
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void PlanarProject(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.Vector3 direction, System.Collections.Generic.List`1<UnityEngine.Vector2> results)

Disassembly:
	0x03920D30 FSUB S10, S15, S14
	0x03920D34 LDR W8, [X0 + 0xE0]
	0x03920D38 CBNZ W8, 0x3920D48
	0x03920D3C MOV V14.16B, V2.16B
	0x03920D40 BL 0x1C16DFC
	0x03920D44 MOV V2.16B, V14.16B
	0x03920D48 FMUL S0, S8, S8
	0x03920D4C FMUL S1, S9, S9
	0x03920D50 FADD S0, S0, S1
	0x03920D54 FMUL S1, S10, S10
	0x03920D58 FADD S0, S1, S0
	0x03920D5C FSQRT S0, S0
	0x03920D60 FCMP S0, S2
	0x03920D64 B.LE 0x3920D78
	0x03920D68 FDIV S8, S8, S0
	0x03920D6C FDIV S9, S9, S0
	0x03920D70 FDIV S10, S10, S0
	0x03920D74 B 0x3920DA4
	0x03920D78 LDRB W8, [X23 + 0x783]
	0x03920D7C CBNZ W8, 0x3920D94
	0x03920D80 ADRP X0, 0x7D3000
	0x03920D84 LDR X0, [X0 + 0x5A0]
	0x03920D88 BL 0x1C16CF4
	0x03920D8C MOVZ W8, 0x1
	0x03920D90 STRB W8, [X23 + 0x783]
	0x03920D94 LDR X8, [X24]
	0x03920D98 LDR X8, [X8 + 0xB8]
	0x03920D9C LDP S8, S9, [X8]
	0x03920DA0 LDR V10, [X8 + 0x8]
	0x03920DA4 CBZ X21, 0x3920EA4
	0x03920DA8 LDP X23, X21, [X21 + 0x58]
	0x03920DAC MOV X0, X20
	0x03920DB0 MOV X1, X31
	0x03920DB4 BL 0x38FF530
	0x03920DB8 CBZ X0, 0x3920EA4
	0x03920DBC LDR X24, [X0 + 0x18]
	0x03920DC0 MOV X20, X0
	0x03920DC4 CMP W24, 0x1
	0x03920DC8 B.LT 0x3920E74
	0x03920DCC MOV W25, W31
	0x03920DD0 MOVZ W26, 0xC
	0x03920DD4 MOV X8, X24
	0x03920DD8 CMP W25, W8
	0x03920DDC B.CS 0x3920EA0
	0x03920DE0 ADD X27, X20, W25, 0x2, SXTW
	0x03920DE4 LDRSW X9, [X27 + 0x20]!
	0x03920DE8 CBZ X23, 0x3920EA4
	0x03920DEC LDR W10, [X23 + 0x18]
	0x03920DF0 CMP W9, W10
	0x03920DF4 B.CS 0x3920EA0
	0x03920DF8 MADD X9, X9, X26, X23
	0x03920DFC LDP S0, S1, [X9 + 0x20]
	0x03920E00 LDR V2, [X9 + 0x28]
	0x03920E04 CBZ W22, 0x3920E1C
	0x03920E08 CBZ X19, 0x3920EA4
	0x03920E0C MOV X0, X19
	0x03920E10 MOV X1, X31
	0x03920E14 BL 0x3C3DE4C
	0x03920E18 LDR X8, [X20 + 0x18]
	0x03920E1C CMP W25, W8
	0x03920E20 B.CS 0x3920EA0
	0x03920E24 CBZ X21, 0x3920EA4
	0x03920E28 LDRSW X9, [X27]
	0x03920E2C LDR W10, [X21 + 0x18]
	0x03920E30 CMP W9, W10
	0x03920E34 B.CS 0x3920EA0
	0x03920E38 FMUL S4, S11, S0
	0x03920E3C FMUL S5, S12, S1
	0x03920E40 FMUL S0, S8, S0
	0x03920E44 FMUL S1, S9, S1
	0x03920E48 FMUL S3, S13, S2
	0x03920E4C FMUL S2, S10, S2
	0x03920E50 ADD W25, W25, 0x1
	0x03920E54 FADD S4, S4, S5
	0x03920E58 FADD S0, S0, S1
	0x03920E5C ADD X9, X21, X9, 0x3, LSL
	0x03920E60 CMP W24, W25
	0x03920E64 FADD S1, S3, S4
	0x03920E68 FADD S0, S2, S0
	0x03920E6C STP S1, S0, [X9 + 0x20]
	0x03920E70 B.NE 0x3920DD8
	0x03920E74 LDP X20, X19, [X31 + 0x90]
	0x03920E78 LDP X22, X21, [X31 + 0x80]
	0x03920E7C LDP X24, X23, [X31 + 0x70]
	0x03920E80 LDP X26, X25, [X31 + 0x60]
	0x03920E84 LDP X30, X27, [X31 + 0x50]
	0x03920E88 LDP D9, D8, [X31 + 0x40]
	0x03920E8C LDP D11, D10, [X31 + 0x30]
	0x03920E90 LDP D13, D12, [X31 + 0x20]
	0x03920E94 LDP D15, D14, [X31 + 0x10]
	0x03920E98 ADD X31, X31, 0xA0
	0x03920E9C RET
	0x03920EA0 BL 0x1C16F28
	0x03920EA4 BL 0x1C16F20
	0x03920EA8 SUB X31, X31, 0xB0
	0x03920EAC STP D15, D14, [X31 + 0x10]
	0x03920EB0 STP D13, D12, [X31 + 0x20]
	0x03920EB4 STP D11, D10, [X31 + 0x30]
	0x03920EB8 STP D9, D8, [X31 + 0x40]
	0x03920EBC STP X29, X30, [X31 + 0x50]
	0x03920EC0 STP X28, X27, [X31 + 0x60]
	0x03920EC4 STP X26, X25, [X31 + 0x70]
	0x03920EC8 STP X24, X23, [X31 + 0x80]
	0x03920ECC STP X22, X21, [X31 + 0x90]
	0x03920ED0 STP X20, X19, [X31 + 0xA0]
	0x03920ED4 ADRP X21, 0xAC1000
	0x03920ED8 LDRB W8, [X21 + 0x8A7]
	0x03920EDC MOV X19, X1
	0x03920EE0 MOV X20, X0
	0x03920EE4 TBNZ X8, 0x0, 0x3920F2C
	0x03920EE8 ADRP X0, 0x7FB000
	0x03920EEC LDR X0, [X0 + 0x7A0]
	0x03920EF0 BL 0x1C16CF4
	0x03920EF4 ADRP X0, 0x82D000
	0x03920EF8 LDR X0, [X0 + 0xF78]
	0x03920EFC BL 0x1C16CF4
	0x03920F00 ADRP X0, 0x82D000
	0x03920F04 LDR X0, [X0 + 0xF80]
	0x03920F08 BL 0x1C16CF4
	0x03920F0C ADRP X0, 0x7FB000
	0x03920F10 LDR X0, [X0 + 0x7A8]
	0x03920F14 BL 0x1C16CF4
	0x03920F18 ADRP X0, 0x82D000
	0x03920F1C LDR X0, [X0 + 0xA88]
	0x03920F20 BL 0x1C16CF4
	0x03920F24 MOVZ W8, 0x1
	0x03920F28 STRB W8, [X21 + 0x8A7]
	0x03920F2C CBZ X19, 0x3920F78
	0x03920F30 ADRP X10, 0x7FB000
	0x03920F34 LDR X8, [X19]
	0x03920F38 LDR X10, [X10 + 0x7A0]
	0x03920F3C LDRH W9, [X8 + 0x12E]
	0x03920F40 LDR X1, [X10]
	0x03920F44 CBZ X9, 0x3920F68
	0x03920F48 LDR X10, [X8 + 0xB0]
	0x03920F4C ADD X10, X10, 0x8
	0x03920F50 LDUR X11, [X10 - 0x8]
	0x03920F54 CMP X11, X1
	0x03920F58 B.EQ 0x3920FC4
	0x03920F5C SUBS X9, X9, 0x1
	0x03920F60 ADD X10, X10, 0x10
	0x03920F64 B.NE 0x3920F50
	0x03920F68 MOV X0, X19
	0x03920F6C MOV W2, W31
	0x03920F70 BL 0x1C5C788
	0x03920F74 B 0x3920FD0
	0x03920F78 CBZ X20, 0x392125C
	0x03920F7C ADRP X10, 0x82D000
	0x03920F80 LDR X8, [X20]
	0x03920F84 LDR X10, [X10 + 0xF78]
	0x03920F88 LDRH W9, [X8 + 0x12E]
	0x03920F8C LDR X1, [X10]
	0x03920F90 CBZ X9, 0x3920FB4
	0x03920F94 LDR X10, [X8 + 0xB0]
	0x03920F98 ADD X10, X10, 0x8
	0x03920F9C LDUR X11, [X10 - 0x8]
	0x03920FA0 CMP X11, X1
	0x03920FA4 B.EQ 0x3920FDC
	0x03920FA8 SUBS X9, X9, 0x1
	0x03920FAC ADD X10, X10, 0x10
	0x03920FB0 B.NE 0x3920F9C
	0x03920FB4 MOV X0, X20
	0x03920FB8 MOV W2, W31
	0x03920FBC BL 0x1C5C788
	0x03920FC0 B 0x3920FE8
	0x03920FC4 LDRSW X9, [X10]
	0x03920FC8 ADD X8, X8, X9, 0x4, LSL
	0x03920FCC ADD X0, X8, 0x138
	0x03920FD0 LDP X8, X1, [X0]
	0x03920FD4 MOV X0, X19
	0x03920FD8 B 0x3920FF0
	0x03920FDC LDRSW X9, [X10]
	0x03920FE0 ADD X8, X8, X9, 0x4, LSL
	0x03920FE4 ADD X0, X8, 0x138
	0x03920FE8 LDP X8, X1, [X0]
	0x03920FEC MOV X0, X20
	0x03920FF0 BLR X8
	0x03920FF4 ADRP X8, 0x82D000
	0x03920FF8 LDR X8, [X8 + 0xA88]
	0x03920FFC MOV W23, W0
	0x03921000 MOV W1, W23
	0x03921004 LDR X0, [X8]
	0x03921008 BL 0x1C16D6C
	0x0392100C MOV X21, X0
	0x03921010 MOV X0, X20
	0x03921014 MOV X1, X19
	0x03921018 MOV X2, X31
	0x0392101C BL 0x390A764
	0x03921020 CMP W23, 0x1
	0x03921024 STP S1, S0, [X31 + 0x8]
	0x03921028 B.LT 0x3921228
	0x0392102C ADRP X8, 0xFFFFFFFFFD1C9000
	0x03921030 ADRP X26, 0x82C000
	0x03921034 MOV W28, W23
	0x03921038 ADRP X23, 0x7D2000
	0x0392103C ADRP X9, 0xFFFFFFFFFD1C9000
	0x03921040 LDR V14, [X8 + 0x17C]
	0x03921044 ADRP X8, 0xFFFFFFFFFD1C9000
	0x03921048 ADRP X24, 0x7D2000
	0x0392104C LDR X26, [X26 + 0xF80]
	0x03921050 LDR X23, [X23 + 0x5A8]
	0x03921054 LDR V15, [X9 + 0x6C]
	0x03921058 LDR V8, [X8 + 0xAC]
	0x0392105C LDR X24, [X24 + 0x5A0]
	0x03921060 MOV V10.16B, V2.16B
	0x03921064 MOV X22, X31
	0x03921068 ADRP X29, 0xAB7000
	0x0392106C FMOV S9, 0.5
	0x03921070 ADRP X27, 0xAB7000
	0x03921074 CBZ X19, 0x39210C0
	0x03921078 LDR X8, [X19]
	0x0392107C ADRP X10, 0x7FA000
	0x03921080 LDRH W9, [X8 + 0x12E]
	0x03921084 LDR X10, [X10 + 0x7A8]
	0x03921088 LDR X1, [X10]
	0x0392108C CBZ X9, 0x39210B0
	0x03921090 LDR X10, [X8 + 0xB0]
	0x03921094 ADD X10, X10, 0x8
	0x03921098 LDUR X11, [X10 - 0x8]
	0x0392109C CMP X11, X1
	0x039210A0 B.EQ 0x39210C8
	0x039210A4 SUBS X9, X9, 0x1
	0x039210A8 ADD X10, X10, 0x10
	0x039210AC B.NE 0x3921098
	0x039210B0 MOV X0, X19
	0x039210B4 MOV W2, W31
	0x039210B8 BL 0x1C5C788
	0x039210BC B 0x39210D4
	0x039210C0 MOV W25, W22
	0x039210C4 B 0x39210E8
	0x039210C8 LDRSW X9, [X10]
	0x039210CC ADD X8, X8, X9, 0x4, LSL
	0x039210D0 ADD X0, X8, 0x138
	0x039210D4 LDP X8, X2, [X0]
	0x039210D8 MOV X0, X19
	0x039210DC MOV W1, W22
	0x039210E0 BLR X8
	0x039210E4 MOV W25, W0
	0x039210E8 CBZ X20, 0x392125C
	0x039210EC LDR X8, [X20]
	0x039210F0 LDR X1, [X26]
	0x039210F4 LDRH W9, [X8 + 0x12E]
	0x039210F8 CBZ X9, 0x392111C
	0x039210FC LDR X10, [X8 + 0xB0]
	0x03921100 ADD X10, X10, 0x8
	0x03921104 LDUR X11, [X10 - 0x8]
	0x03921108 CMP X11, X1
	0x0392110C B.EQ 0x392112C
	0x03921110 SUBS X9, X9, 0x1
	0x03921114 ADD X10, X10, 0x10
	0x03921118 B.NE 0x3921104
	0x0392111C MOV X0, X20
	0x03921120 MOV W2, W31
	0x03921124 BL 0x1C5C788
	0x03921128 B 0x3921138
	0x0392112C LDRSW X9, [X10]
	0x03921130 ADD X8, X8, X9, 0x4, LSL
	0x03921134 ADD X0, X8, 0x138
	0x03921138 LDP X8, X2, [X0]
	0x0392113C MOV X0, X20
	0x03921140 MOV W1, W25
	0x03921144 BLR X8
	0x03921148 LDRB W8, [X29 + 0x785]
	0x0392114C MOV V11.16B, V0.16B
	0x03921150 MOV V12.16B, V1.16B
	0x03921154 MOV V13.16B, V2.16B
	0x03921158 CBNZ W8, 0x392116C
	0x0392115C MOV X0, X23
	0x03921160 BL 0x1C16CF4
	0x03921164 MOVZ W8, 0x1
	0x03921168 STRB W8, [X29 + 0x785]
	0x0392116C LDR X0, [X23]
	0x03921170 LDR W8, [X0 + 0xE0]
	0x03921174 CBNZ W8, 0x392117C
	0x03921178 BL 0x1C16DFC
	0x0392117C LDP S1, S0, [X31 + 0x8]
	0x03921180 FSUB S3, S13, S10
	0x03921184 FSUB S0, S11, S0
	0x03921188 FSUB S2, S12, S1
	0x0392118C FMUL S1, S0, S0
	0x03921190 FMUL S4, S2, S2
	0x03921194 FADD S1, S1, S4
	0x03921198 FMUL S4, S3, S3
	0x0392119C FADD S1, S4, S1
	0x039211A0 FSQRT S4, S1
	0x039211A4 FCMP S4, S14
	0x039211A8 B.LE 0x39211BC
	0x039211AC FDIV S1, S0, S4
	0x039211B0 FDIV S11, S2, S4
	0x039211B4 FDIV S0, S3, S4
	0x039211B8 B 0x39211E4
	0x039211BC LDRB W8, [X27 + 0x783]
	0x039211C0 CBNZ W8, 0x39211D4
	0x039211C4 MOV X0, X24
	0x039211C8 BL 0x1C16CF4
	0x039211CC MOVZ W8, 0x1
	0x039211D0 STRB W8, [X27 + 0x783]
	0x039211D4 LDR X8, [X24]
	0x039211D8 LDR X8, [X8 + 0xB8]
	0x039211DC LDP S1, S11, [X8]
	0x039211E0 LDR V0, [X8 + 0x8]
	0x039211E4 CBZ X21, 0x392125C
	0x039211E8 LDR W8, [X21 + 0x18]
	0x039211EC CMP X22, X8
	0x039211F0 B.CS 0x3921260
	0x039211F4 BL 0x3EB1C40
	0x039211F8 FDIV S0, S0, S15
	0x039211FC FADD S0, S0, S9
	0x03921200 ADD X25, X21, X22, 0x3, LSL
	0x03921204 STR S0, [X25 + 0x20]
	0x03921208 MOV V0.16B, V11.16B
	0x0392120C BL 0x3EB1E60
	0x03921210 FDIV S0, S0, S8
	0x03921214 ADD X22, X22, 0x1
	0x03921218 FADD S0, S0, S9
	0x0392121C CMP X22, X28
	0x03921220 STR S0, [X25 + 0x24]
	0x03921224 B.NE 0x3921074
	0x03921228 MOV X0, X21
	0x0392122C LDP X20, X19, [X31 + 0xA0]
	0x03921230 LDP X22, X21, [X31 + 0x90]
	0x03921234 LDP X24, X23, [X31 + 0x80]
	0x03921238 LDP X26, X25, [X31 + 0x70]
	0x0392123C LDP X28, X27, [X31 + 0x60]
	0x03921240 LDP X29, X30, [X31 + 0x50]
	0x03921244 LDP D9, D8, [X31 + 0x40]
	0x03921248 LDP D11, D10, [X31 + 0x30]
	0x0392124C LDP D13, D12, [X31 + 0x20]
	0x03921250 LDP D15, D14, [X31 + 0x10]
	0x03921254 ADD X31, X31, 0xB0
	0x03921258 RET
	0x0392125C BL 0x1C16F20
	0x03921260 BL 0x1C16F28
	0x03921264 SUB X31, X31, 0x90
	0x03921268 STR D12, [X31 + 0x10]
	0x0392126C STP D11, D10, [X31 + 0x20]
	0x03921270 STP D9, D8, [X31 + 0x30]
	0x03921274 STP X30, X27, [X31 + 0x40]
	0x03921278 STP X26, X25, [X31 + 0x50]
	0x0392127C STP X24, X23, [X31 + 0x60]
	0x03921280 STP X22, X21, [X31 + 0x70]
	0x03921284 STP X20, X19, [X31 + 0x80]
	0x03921288 ADRP X21, 0xAC0000
	0x0392128C LDRB W8, [X21 + 0x8A8]
	0x03921290 MOV W19, W1
	0x03921294 MOV X20, X0
	0x03921298 TBNZ X8, 0x0, 0x3921358
	0x0392129C ADRP X0, 0x82D000
	0x039212A0 LDR X0, [X0 + 0x740]
	0x039212A4 BL 0x1C16CF4
	0x039212A8 ADRP X0, 0x82D000
	0x039212AC LDR X0, [X0 + 0x748]
	0x039212B0 BL 0x1C16CF4
	0x039212B4 ADRP X0, 0x82D000
	0x039212B8 LDR X0, [X0 + 0x750]
	0x039212BC BL 0x1C16CF4
	0x039212C0 ADRP X0, 0x82D000
	0x039212C4 LDR X0, [X0 + 0x4D0]
	0x039212C8 BL 0x1C16CF4
	0x039212CC ADRP X0, 0x82D000
	0x039212D0 LDR X0, [X0 + 0x758]
	0x039212D4 BL 0x1C16CF4
	0x039212D8 ADRP X0, 0x82C000
	0x039212DC LDR X0, [X0 + 0xA90]
	0x039212E0 BL 0x1C16CF4
	0x039212E4 ADRP X0, 0x82C000
	0x039212E8 LDR X0, [X0 + 0xA98]
	0x039212EC BL 0x1C16CF4
	0x039212F0 ADRP X0, 0x82D000
	0x039212F4 LDR X0, [X0 + 0x760]
	0x039212F8 BL 0x1C16CF4
	0x039212FC ADRP X0, 0x82D000
	0x03921300 LDR X0, [X0 + 0x768]
	0x03921304 BL 0x1C16CF4
	0x03921308 ADRP X0, 0x82D000
	0x0392130C LDR X0, [X0 + 0x770]
	0x03921310 BL 0x1C16CF4
	0x03921314 ADRP X0, 0x82D000
	0x03921318 LDR X0, [X0 + 0x778]
	0x0392131C BL 0x1C16CF4
	0x03921320 ADRP X0, 0x82D000
	0x03921324 LDR X0, [X0 + 0x780]
	0x03921328 BL 0x1C16CF4
	0x0392132C ADRP X0, 0x82D000
	0x03921330 LDR X0, [X0 + 0x788]
	0x03921334 BL 0x1C16CF4
	0x03921338 ADRP X0, 0x82D000
	0x0392133C LDR X0, [X0 + 0x790]
	0x03921340 BL 0x1C16CF4
	0x03921344 ADRP X0, 0x82D000
	0x03921348 LDR X0, [X0 + 0x798]
	0x0392134C BL 0x1C16CF4
	0x03921350 MOVZ W8, 0x1
	0x03921354 STRB W8, [X21 + 0x8A8]
	0x03921358 MOV X0, X20
	0x0392135C MOV X1, X31
	0x03921360 MOV X2, X31
	0x03921364 BL 0x390A418
	0x03921368 ADRP X21, 0xABA000
	0x0392136C LDRB W8, [X21 + 0x7F6]
	0x03921370 MOV V8.16B, V0.16B
	0x03921374 MOV V9.16B, V1.16B
	0x03921378 CBNZ W8, 0x3921390
	0x0392137C ADRP X0, 0x7DA000
	0x03921380 LDR X0, [X0 + 0xF08]
	0x03921384 BL 0x1C16CF4
	0x03921388 MOVZ W8, 0x1
	0x0392138C STRB W8, [X21 + 0x7F6]
	0x03921390 CBZ X20, 0x3921738
	0x03921394 ADRP X8, 0x7DA000
	0x03921398 LDR X8, [X8 + 0xF08]
	0x0392139C ADRP X11, 0x82C000
	0x039213A0 ADRP X22, 0x82D000
	0x039213A4 ADRP X21, 0x82D000
	0x039213A8 LDR X9, [X8]
	0x039213AC LDR X8, [X20]
	0x039213B0 LDR X10, [X9 + 0xB8]
	0x039213B4 LDR X11, [X11 + 0xA90]
	0x039213B8 LDRH W9, [X8 + 0x12E]
	0x039213BC LDP S10, S11, [X10 + 0x10]
	0x039213C0 LDR X1, [X11]
	0x039213C4 LDR X22, [X22 + 0x778]
	0x039213C8 LDR X21, [X21 + 0x770]
	0x039213CC CBZ X9, 0x39213F0
	0x039213D0 LDR X10, [X8 + 0xB0]
	0x039213D4 ADD X10, X10, 0x8
	0x039213D8 LDUR X11, [X10 - 0x8]
	0x039213DC CMP X11, X1
	0x039213E0 B.EQ 0x3921400
	0x039213E4 SUBS X9, X9, 0x1
	0x039213E8 ADD X10, X10, 0x10
	0x039213EC B.NE 0x39213D8
	0x039213F0 MOV X0, X20
	0x039213F4 MOV W2, W31
	0x039213F8 BL 0x1C5C788
	0x039213FC B 0x392140C
	0x03921400 LDRSW X9, [X10]
	0x03921404 ADD X8, X8, X9, 0x4, LSL
	0x03921408 ADD X0, X8, 0x138
	0x0392140C LDP X8, X1, [X0]
	0x03921410 MOV X0, X20
	0x03921414 BLR X8
	0x03921418 LDR X8, [X22]
	0x0392141C MOV W22, W0
	0x03921420 MOV X0, X8
	0x03921424 BL 0x1C16F10
	0x03921428 LDR X2, [X21]
	0x0392142C MOV W1, W22
	0x03921430 MOV X21, X0
	0x03921434 BL 0x2F35AB4
	0x03921438 CMP W22, 0x1
	0x0392143C B.LT 0x39215C8
	0x03921440 ADRP X24, 0x82C000
	0x03921444 ADRP X25, 0x82D000
	0x03921448 ADRP X26, 0x82D000
	0x0392144C LDR X24, [X24 + 0xA98]
	0x03921450 LDR X25, [X25 + 0x780]
	0x03921454 LDR X26, [X26 + 0x760]
	0x03921458 MOV W23, W31
	0x0392145C MOVZ W27, 0xC
	0x03921460 LDR X8, [X20]
	0x03921464 LDR X1, [X24]
	0x03921468 LDRH W9, [X8 + 0x12E]
	0x0392146C CBZ X9, 0x3921490
	0x03921470 LDR X10, [X8 + 0xB0]
	0x03921474 ADD X10, X10, 0x8
	0x03921478 LDUR X11, [X10 - 0x8]
	0x0392147C CMP X11, X1
	0x03921480 B.EQ 0x39214A0
	0x03921484 SUBS X9, X9, 0x1
	0x03921488 ADD X10, X10, 0x10
	0x0392148C B.NE 0x3921478
	0x03921490 MOV X0, X20
	0x03921494 MOV W2, W31
	0x03921498 BL 0x1C5C788
	0x0392149C B 0x39214AC
	0x039214A0 LDRSW X9, [X10]
	0x039214A4 ADD X8, X8, X9, 0x4, LSL
	0x039214A8 ADD X0, X8, 0x138
	0x039214AC LDP X8, X2, [X0]
	0x039214B0 MOV X0, X20
	0x039214B4 MOV W1, W23
	0x039214B8 BLR X8
	0x039214BC FSUB S2, S0, S8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X22, 0xAC2000
	021 Move W8, [X22+2214]
	022 Move X19, X2
	023 Move V8, V2
	024 Move V9, V1
	025 Move V10, V0
	026 Move X21, X1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {52}
	032 Move X0, 0x7FC000
	033 Move X0, [X0+1952]
	034 Call 0x1C17CF4
	035 Move X0, 0x82E000
	036 Move X0, [X0+3960]
	037 Call 0x1C17CF4
	038 Move X0, 0x82E000
	039 Move X0, [X0+3968]
	040 Call 0x1C17CF4
	041 Move X0, 0x7FC000
	042 Move X0, [X0+1960]
	043 Call 0x1C17CF4
	044 Move X0, 0x82F000
	045 Move X0, [X0+1824]
	046 Call 0x1C17CF4
	047 Move X0, 0x82F000
	048 Move X0, [X0+1832]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+2214], W8
	052 Compare X20, 0
	053 JumpIfEqual {478}
	054 Compare X19, 0
	055 JumpIfEqual {485}
	056 Move V0, V10
	057 Move V1, V9
	058 Move V2, V8
	059 Move X0, X31
	060 Call Math.EnsureUnitVector, X0
	061 Move V15, V0
	062 Move [X31+4], S2
	063 Move [X31+12], S1
	064 Call Projection.VectorToProjectionAxis, X0
	065 Call Projection.GetTangentToAxis, X0
	066 Move V11, V0
	067 Move V12, V1
	068 Move V13, V2
	069 Compare X21, 0
	070 JumpIfEqual {87}
	071 Move X10, 0x7FC000
	072 Move X8, [X21]
	073 Move X10, [X10+1952]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X21
	085 Move W2, W31
	086 Call 0x1C5D788
	087 Move X10, 0x82E000
	088 Move X8, [X20]
	089 Move X10, [X10+3960]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X21
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X20
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move W8, [X19+28]
	117 Move S1, [X31+4]
	118 Move S0, [X31+8]
	119 Move X23, 0xAB9000
	120 Move W22, W0
	121 Add W8, W8, 1
	122 Move [X19+24], W31
	123 Move [X19+28], W8
	124 Move W8, [X23+1925]
	125 Multiply S8, S0, S13
	126 Multiply S14, S1, S12
	127 Multiply S9, S1, S11
	128 Multiply S10, S15, S13
	129 Multiply S12, S15, S12
	130 Multiply S11, S0, S11
	131 Move [X31], S15
	132 Compare W8, 0
	133 JumpIfNotEqual {139}
	134 Move X0, 0x7D4000
	135 Move X0, [X0+1448]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X23+1925], W8
	139 Move X24, 0x7D4000
	140 Move X24, [X24+1448]
	141 Subtract S14, S8, S14
	142 Subtract S15, S9, S10
	143 Subtract S8, S12, S11
	144 Move X0, [X24]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X8, -48451584
	150 Multiply S0, S14, S14
	151 Multiply S1, S15, S15
	152 Move V3, [X8+380]
	153 Add S0, S0, S1
	154 Multiply S1, S8, S8
	155 Add S0, S1, S0
	156 NotImplemented "Instruction FSQRT not yet implemented."
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 NotImplemented "Instruction FDIV not yet implemented."
	159 Move [X31+12], S1
	160 NotImplemented "Instruction FDIV not yet implemented."
	161 NotImplemented "Instruction FDIV not yet implemented."
	162 Move X25, 0xAB9000
	163 Move W8, [X25+1923]
	164 Compare W8, 0
	165 JumpIfNotEqual {173}
	166 Move X0, 0x7D4000
	167 Move X0, [X0+1440]
	168 Move V9, V3
	169 Call 0x1C17CF4
	170 Move V3, V9
	171 Move W8, 1
	172 Move [X25+1923], W8
	173 Move X8, 0x7D4000
	174 Move X8, [X8+1440]
	175 Move X8, [X8]
	176 Move X8, [X8+184]
	177 Move S0, [X8]
	178 Move S12, [X8+4]
	179 Move V13, [X8+8]
	180 Move [X31+12], S0
	181 Move S2, [X31+4]
	182 Move S1, [X31+8]
	183 Move V0, [X31]
	184 Move W8, [X23+1925]
	185 Multiply S9, S2, S15
	186 Multiply S10, S1, S8
	187 Multiply S8, S0, S8
	188 Multiply S11, S2, S14
	189 Multiply S14, S1, S14
	190 Multiply S15, S0, S15
	191 Compare W8, 0
	192 JumpIfNotEqual {200}
	193 Move X0, 0x7D4000
	194 Move X0, [X0+1448]
	195 Move [X31+8], S3
	196 Call 0x1C17CF4
	197 Move V3, [X31+8]
	198 Move W8, 1
	199 Move [X23+1925], W8
	200 Move X0, [X24]
	201 Subtract S10, S9, S10
	202 Subtract S9, S8, S11
	203 Subtract S8, S14, S15
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {210}
	207 Move V11, V3
	208 Call 0x1C17DFC
	209 Move V3, V11
	210 Multiply S0, S10, S10
	211 Multiply S1, S9, S9
	212 Add S0, S0, S1
	213 Multiply S1, S8, S8
	214 Add S0, S1, S0
	215 NotImplemented "Instruction FSQRT not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 NotImplemented "Instruction FDIV not yet implemented."
	220 Move X23, 0xAB8000
	221 Move W8, [X23+1923]
	222 Compare W8, 0
	223 JumpIfNotEqual {229}
	224 Move X0, 0x7D3000
	225 Move X0, [X0+1440]
	226 Call 0x1C17CF4
	227 Move W8, 1
	228 Move [X23+1923], W8
	229 Move X8, 0x7D3000
	230 Move X8, [X8+1440]
	231 Move X8, [X8]
	232 Move X8, [X8+184]
	233 Move S14, [X8]
	234 Move S15, [X8+4]
	235 Move V11, [X8+8]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Compare X21, 0
	238 Invalid "Jump target not found in method."
	239 Move X25, 0x7FB000
	240 Move X26, 0x82D000
	241 Move X27, 0x82E000
	242 Move X25, [X25+1960]
	243 Move X26, [X26+3968]
	244 Move X27, [X27+1824]
	245 Move W23, W31
	246 Move X8, [X21]
	247 Move X1, [X25]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X21
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X2, [X0+8]
	265 Move X0, X21
	266 Move W1, W23
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X8, [X20]
	269 Move X1, [X26]
	270 Move W24, W0
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move X0, X20
	281 Move W2, W31
	282 Call 0x1C5D788
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Add X8, X8, X9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X2, [X0+8]
	288 Move X0, X20
	289 Move W1, W24
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X8, [X21]
	292 Move X1, [X25]
	293 Move V8, V0
	294 Move V9, V1
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Move V10, V2
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X21
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X2, [X0+8]
	313 Move X0, X21
	314 Move W1, W23
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Move X8, [X20]
	317 Move X1, [X26]
	318 Move W24, W0
	319 NotImplemented "Instruction LDRH not yet implemented."
	320 Compare X9, 0
	321 JumpIfEqual {328}
	322 Move X10, [X8+176]
	323 Add X10, X10, 8
	324 NotImplemented "Instruction LDUR not yet implemented."
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Subtract X9, X9, 1
	327 Add X10, X10, 16
	328 Move X0, X20
	329 Move W2, W31
	330 Call 0x1C5D788
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Add X8, X8, X9
	333 Add X0, X8, 312
	334 Move X8, [X0]
	335 Move X2, [X0+8]
	336 Move X0, X20
	337 Move W1, W24
	338 NotImplemented "Instruction BLR not yet implemented."
	339 Move W10, [X19+28]
	340 Move X8, [X19+16]
	341 Move X9, [X27]
	342 Add W10, W10, 1
	343 Move [X19+28], W10
	344 Compare X8, 0
	345 JumpIfEqual {477}
	346 Move V3, [X31+12]
	347 NotImplemented "Instruction LDRSW not yet implemented."
	348 Move W11, [X8+24]
	349 Multiply S4, S12, S9
	350 Multiply S3, S3, S8
	351 Multiply S6, S14, S0
	352 Multiply S1, S15, S1
	353 Multiply S5, S13, S10
	354 Add S0, S3, S4
	355 Add S1, S6, S1
	356 Multiply S2, S11, S2
	357 Add S0, S5, S0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Add S1, S2, S1
	360 Add W9, W10, 1
	361 Add X8, X8, X10
	362 Move [X19+24], W9
	363 Move [X8+32], S0
	364 Move [X8+40], S1
	365 Move X8, [X9+32]
	366 Move X0, X19
	367 Move X8, [X8+192]
	368 Move X1, [X8+112]
	369 Call List`1<Vector2>.AddWithResize, X0, X1
	370 Add W23, W23, 1
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X23, 0x82D000
	373 Move X24, 0x82E000
	374 Move X23, [X23+3968]
	375 Move X24, [X24+1824]
	376 Move W21, W31
	377 Move X8, [X20]
	378 Move X1, [X23]
	379 NotImplemented "Instruction LDRH not yet implemented."
	380 Compare X9, 0
	381 JumpIfEqual {388}
	382 Move X10, [X8+176]
	383 Add X10, X10, 8
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Subtract X9, X9, 1
	387 Add X10, X10, 16
	388 Move X0, X20
	389 Move W2, W31
	390 Call 0x1C5D788
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Add X8, X8, X9
	393 Add X0, X8, 312
	394 Move X8, [X0]
	395 Move X2, [X0+8]
	396 Move X0, X20
	397 Move W1, W21
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Move X8, [X20]
	400 Move X1, [X23]
	401 Move V8, V0
	402 Move V9, V1
	403 NotImplemented "Instruction LDRH not yet implemented."
	404 Move V10, V2
	405 Compare X9, 0
	406 JumpIfEqual {413}
	407 Move X10, [X8+176]
	408 Add X10, X10, 8
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Subtract X9, X9, 1
	412 Add X10, X10, 16
	413 Move X0, X20
	414 Move W2, W31
	415 Call 0x1C5D788
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Add X8, X8, X9
	418 Add X0, X8, 312
	419 Move X8, [X0]
	420 Move X2, [X0+8]
	421 Move X0, X20
	422 Move W1, W21
	423 NotImplemented "Instruction BLR not yet implemented."
	424 Move W10, [X19+28]
	425 Move X8, [X19+16]
	426 Move X9, [X24]
	427 Add W10, W10, 1
	428 Move [X19+28], W10
	429 Compare X8, 0
	430 JumpIfEqual {477}
	431 Move V3, [X31+12]
	432 NotImplemented "Instruction LDRSW not yet implemented."
	433 Move W11, [X8+24]
	434 Multiply S4, S12, S9
	435 Multiply S3, S3, S8
	436 Multiply S6, S14, S0
	437 Multiply S1, S15, S1
	438 Multiply S5, S13, S10
	439 Add S0, S3, S4
	440 Add S1, S6, S1
	441 Multiply S2, S11, S2
	442 Add S0, S5, S0
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Add S1, S2, S1
	445 Add W9, W10, 1
	446 Add X8, X8, X10
	447 Move [X19+24], W9
	448 Move [X8+32], S0
	449 Move [X8+40], S1
	450 Move X8, [X9+32]
	451 Move X0, X19
	452 Move X8, [X8+192]
	453 Move X1, [X8+112]
	454 Call List`1<Vector2>.AddWithResize, X0, X1
	455 Add W21, W21, 1
	456 NotImplemented "Instruction CMP not yet implemented."
	457 Move X20, [X31+144]
	458 Move X19, [X31+152]
	459 Move X22, [X31+128]
	460 Move X21, [X31+136]
	461 Move X24, [X31+112]
	462 Move X23, [X31+120]
	463 Move X26, [X31+96]
	464 Move X25, [X31+104]
	465 Move X30, [X31+80]
	466 Move X27, [X31+88]
	467 Move D9, [X31+64]
	468 Move D8, [X31+72]
	469 Move D11, [X31+48]
	470 Move D10, [X31+56]
	471 Move D13, [X31+32]
	472 Move D12, [X31+40]
	473 Move D15, [X31+16]
	474 Move D14, [X31+24]
	475 Add X31, X31, 160
	476 Return 
	477 Call 0x1C17F20
	478 Move X0, 0x7D8000
	479 Move X0, [X0+1320]
	480 Call 0x1C17D08
	481 Call 0x1C17F10
	482 Move X19, X0
	483 Move X0, 0x82E000
	484 Move X0, [X0+1840]
	485 Move X0, 0x7D8000
	486 Move X0, [X0+1320]
	487 Call 0x1C17D08
	488 Call 0x1C17F10
	489 Move X19, X0
	490 Move X0, 0x7FB000
	491 Move X0, [X0+2648]
	492 Call 0x1C17D08
	493 Move X1, X0
	494 Move X0, X19
	495 Move X2, X31
	496 Call ArgumentNullException..ctor, X0, X1
	497 Move X0, 0x82E000
	498 Move X0, [X0+1848]
	499 Call 0x1C17D08
	500 Move X1, X0
	501 Move X0, X19
	502 Call 0x1C17DEC

Method: System.Void PlanarProject(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 textureGroup, UnityEngine.ProBuilder.AutoUnwrapSettings unwrapSettings)

Disassembly:
	0x0392169C ADRP X9, 0x82D000
	0x039216A0 LDR X8, [X0 + 0xB8]
	0x039216A4 LDR X9, [X9 + 0x758]
	0x039216A8 LDR X22, [X8]
	0x039216AC LDR X0, [X9]
	0x039216B0 BL 0x1C16F10
	0x039216B4 ADRP X8, 0x82D000
	0x039216B8 LDR X8, [X8 + 0x790]
	0x039216BC MOV X1, X22
	0x039216C0 MOV X3, X31
	0x039216C4 MOV X20, X0
	0x039216C8 LDR X2, [X8]
	0x039216CC BL 0x2D2AF44
	0x039216D0 LDR X8, [X23]
	0x039216D4 LDR X8, [X8 + 0xB8]
	0x039216D8 STR X20, [X8 + 0x10]
	0x039216DC LDR X2, [X25]
	0x039216E0 MOV X0, X21
	0x039216E4 MOV X1, X20
	0x039216E8 BL 0x21CBBC8
	0x039216EC LDR X1, [X24]
	0x039216F0 BL 0x21D7B68
	0x039216F4 CBNZ W19, 0x3921710
	0x039216F8 ADRP X8, 0x82D000
	0x039216FC LDR X8, [X8 + 0x748]
	0x03921700 LDR X1, [X8]
	0x03921704 BL 0x21C9F1C
	0x03921708 LDR X1, [X24]
	0x0392170C BL 0x21D7B68
	0x03921710 LDP X20, X19, [X31 + 0x80]
	0x03921714 LDP X22, X21, [X31 + 0x70]
	0x03921718 LDP X24, X23, [X31 + 0x60]
	0x0392171C LDP X26, X25, [X31 + 0x50]
	0x03921720 LDP X30, X27, [X31 + 0x40]
	0x03921724 LDP D9, D8, [X31 + 0x30]
	0x03921728 LDP D11, D10, [X31 + 0x20]
	0x0392172C LDR V12, [X31 + 0x10]
	0x03921730 ADD X31, X31, 0x90
	0x03921734 RET
	0x03921738 BL 0x1C16F20
	0x0392173C STP X30, X19, [X31 - 0x10]!
	0x03921740 CMP W0, 0x5
	0x03921744 B.HI 0x39217A0
	0x03921748 ADRP X9, 0xFFFFFFFFFD276000
	0x0392174C MOV W8, W0
	0x03921750 ADD X9, X9, 0xA42
	0x03921754 ADR X10, 0x10
	0x03921758 LDRB W11, [X9, X8, LSL]
	0x0392175C ADD X10, X10, X11, 0x2, LSL
	0x03921760 BR X10
	0x03921764 ADRP X19, 0xAB7000
	0x03921768 LDRB W8, [X19 + 0xB70]
	0x0392176C CBNZ W8, 0x3921784
	0x03921770 ADRP X0, 0x7D2000
	0x03921774 LDR X0, [X0 + 0x5A0]
	0x03921778 BL 0x1C16CF4
	0x0392177C MOVZ W8, 0x1
	0x03921780 STRB W8, [X19 + 0xB70]
	0x03921784 ADRP X8, 0x7D2000
	0x03921788 LDR X8, [X8 + 0x5A0]
	0x0392178C LDR X8, [X8]
	0x03921790 LDR X8, [X8 + 0xB8]
	0x03921794 LDUR V0, [X8 + 0x3C]
	0x03921798 LDR V2, [X8 + 0x44]
	0x0392179C B 0x39218D0
	0x039217A0 ADRP X19, 0xAB7000
	0x039217A4 LDRB W8, [X19 + 0xA1F]
	0x039217A8 CBNZ W8, 0x39217C0
	0x039217AC ADRP X0, 0x7D2000
	0x039217B0 LDR X0, [X0 + 0x5A0]
	0x039217B4 BL 0x1C16CF4
	0x039217B8 MOVZ W8, 0x1
	0x039217BC STRB W8, [X19 + 0xA1F]
	0x039217C0 ADRP X8, 0x7D2000
	0x039217C4 LDR X8, [X8 + 0x5A0]
	0x039217C8 LDR X8, [X8]
	0x039217CC LDR X8, [X8 + 0xB8]
	0x039217D0 LDR V0, [X8 + 0x48]
	0x039217D4 LDR V2, [X8 + 0x50]
	0x039217D8 B 0x39218D0
	0x039217DC ADRP X19, 0xAB7000
	0x039217E0 LDRB W8, [X19 + 0x786]
	0x039217E4 CBNZ W8, 0x39217FC
	0x039217E8 ADRP X0, 0x7D2000
	0x039217EC LDR X0, [X0 + 0x5A0]
	0x039217F0 BL 0x1C16CF4
	0x039217F4 MOVZ W8, 0x1
	0x039217F8 STRB W8, [X19 + 0x786]
	0x039217FC ADRP X8, 0x7D2000
	0x03921800 LDR X8, [X8 + 0x5A0]
	0x03921804 LDR X8, [X8]
	0x03921808 LDR X8, [X8 + 0xB8]
	0x0392180C LDR V0, [X8 + 0x18]
	0x03921810 LDR V2, [X8 + 0x20]
	0x03921814 B 0x39218D0
	0x03921818 ADRP X19, 0xAB7000
	0x0392181C LDRB W8, [X19 + 0xB70]
	0x03921820 CBNZ W8, 0x3921838
	0x03921824 ADRP X0, 0x7D2000
	0x03921828 LDR X0, [X0 + 0x5A0]
	0x0392182C BL 0x1C16CF4
	0x03921830 MOVZ W8, 0x1
	0x03921834 STRB W8, [X19 + 0xB70]
	0x03921838 ADRP X8, 0x7D2000
	0x0392183C LDR X8, [X8 + 0x5A0]
	0x03921840 LDR X8, [X8]
	0x03921844 LDR X8, [X8 + 0xB8]
	0x03921848 LDUR V0, [X8 + 0x3C]
	0x0392184C LDR V1, [X8 + 0x44]
	0x03921850 B 0x39218C8
	0x03921854 ADRP X19, 0xAB7000
	0x03921858 LDRB W8, [X19 + 0x786]
	0x0392185C CBNZ W8, 0x3921874
	0x03921860 ADRP X0, 0x7D2000
	0x03921864 LDR X0, [X0 + 0x5A0]
	0x03921868 BL 0x1C16CF4
	0x0392186C MOVZ W8, 0x1
	0x03921870 STRB W8, [X19 + 0x786]
	0x03921874 ADRP X8, 0x7D2000
	0x03921878 LDR X8, [X8 + 0x5A0]
	0x0392187C LDR X8, [X8]
	0x03921880 LDR X8, [X8 + 0xB8]
	0x03921884 LDR V0, [X8 + 0x18]
	0x03921888 LDR V1, [X8 + 0x20]
	0x0392188C B 0x39218C8
	0x03921890 ADRP X19, 0xAB7000
	0x03921894 LDRB W8, [X19 + 0xA1F]
	0x03921898 CBNZ W8, 0x39218B0
	0x0392189C ADRP X0, 0x7D2000
	0x039218A0 LDR X0, [X0 + 0x5A0]
	0x039218A4 BL 0x1C16CF4
	0x039218A8 MOVZ W8, 0x1
	0x039218AC STRB W8, [X19 + 0xA1F]
	0x039218B0 ADRP X8, 0x7D2000
	0x039218B4 LDR X8, [X8 + 0x5A0]
	0x039218B8 LDR X8, [X8]
	0x039218BC LDR X8, [X8 + 0xB8]
	0x039218C0 LDR V0, [X8 + 0x48]
	0x039218C4 LDR V1, [X8 + 0x50]
	0x039218C8 UNIMPLEMENTED
	0x039218CC FNEG S2, S1
	0x039218D0 MOV S1, V0.S[1]
	0x039218D4 LDP X30, X19, [X31], #0x10
	0x039218D8 RET
	0x039218DC SUB X31, X31, 0x60
	0x039218E0 STR D12, [X31 + 0x10]
	0x039218E4 STP D11, D10, [X31 + 0x18]
	0x039218E8 STP D9, D8, [X31 + 0x28]
	0x039218EC STR X30, [X31 + 0x38]
	0x039218F0 STP X22, X21, [X31 + 0x40]
	0x039218F4 STP X20, X19, [X31 + 0x50]
	0x039218F8 ADRP X21, 0xAC0000
	0x039218FC ADRP X22, 0x7D2000
	0x03921900 LDRB W8, [X21 + 0x8AB]
	0x03921904 LDR X22, [X22 + 0x598]
	0x03921908 MOV W19, W1
	0x0392190C MOV X20, X0
	0x03921910 TBNZ X8, 0x0, 0x3921928
	0x03921914 ADRP X0, 0x7D2000
	0x03921918 LDR X0, [X0 + 0x598]
	0x0392191C BL 0x1C16CF4
	0x03921920 MOVZ W8, 0x1
	0x03921924 STRB W8, [X21 + 0x8AB]
	0x03921928 LDR X0, [X22]
	0x0392192C LDR W8, [X0 + 0xE0]
	0x03921930 CBNZ W8, 0x3921938
	0x03921934 BL 0x1C16DFC
	0x03921938 MOV X0, X20
	0x0392193C MOV X1, X31
	0x03921940 MOV X2, X31
	0x03921944 BL 0x3C3883C
	0x03921948 TBNZ X0, 0x0, 0x3921D58
	0x0392194C ADRP X21, 0xAB7000
	0x03921950 LDRB W8, [X21 + 0x783]
	0x03921954 CBNZ W8, 0x392196C
	0x03921958 ADRP X0, 0x7D2000
	0x0392195C LDR X0, [X0 + 0x5A0]
	0x03921960 BL 0x1C16CF4
	0x03921964 MOVZ W8, 0x1
	0x03921968 STRB W8, [X21 + 0x783]
	0x0392196C CBZ X20, 0x3921D50
	0x03921970 ADRP X22, 0x7D2000
	0x03921974 LDR X22, [X22 + 0x5A0]
	0x03921978 LDR X8, [X22]
	0x0392197C LDR X9, [X8 + 0xB8]
	0x03921980 LDR X8, [X20 + 0x28]
	0x03921984 LDR V4, [X9]
	0x03921988 LDUR V3, [X9 + 0x4]
	0x0392198C CBZ X8, 0x3921B0C
	0x03921990 LDR W9, [X8 + 0x18]
	0x03921994 CMP W9, 0x1
	0x03921998 B.LT 0x3921B0C
	0x0392199C LDR X10, [X20 + 0x58]
	0x039219A0 LDR W13, [X8 + 0x18]
	0x039219A4 MOV W11, W31
	0x039219A8 MOV W12, W31
	0x039219AC MOVZ W14, 0xC
	0x039219B0 CMP W12, W13
	0x039219B4 B.CS 0x3921D54
	0x039219B8 ADD X15, X8, W12, 0x3, SXTW
	0x039219BC LDR X15, [X15 + 0x20]
	0x039219C0 CBZ X15, 0x3921D50
	0x039219C4 LDR W16, [X15 + 0x54]
	0x039219C8 CMP W16, W19
	0x039219CC B.NE 0x3921A24
	0x039219D0 LDR X15, [X15 + 0x10]
	0x039219D4 CBZ X15, 0x3921D50
	0x039219D8 LDR W16, [X15 + 0x18]
	0x039219DC CMP W16, 0x1
	0x039219E0 B.LT 0x3921A24
	0x039219E4 MOV W17, W31
	0x039219E8 ADD W11, W11, W16
	0x039219EC CBZ X10, 0x3921D50
	0x039219F0 ADD X0, X15, W17, 0x2, SXTW
	0x039219F4 LDRSW X0, [X0 + 0x20]
	0x039219F8 LDR W1, [X10 + 0x18]
	0x039219FC CMP W0, W1
	0x03921A00 B.CS 0x3921D54
	0x03921A04 MADD X0, X0, X14, X10
	0x03921A08 LDR V0, [X0 + 0x20]
	0x03921A0C LDUR V1, [X0 + 0x24]
	0x03921A10 ADD W17, W17, 0x1
	0x03921A14 CMP W16, W17
	0x03921A18 FADD S4, S4, S0
	0x03921A1C FADD V3.2S, V3.2S, V1.2S
	0x03921A20 B.NE 0x39219EC
	0x03921A24 ADD W12, W12, 0x1
	0x03921A28 CMP W12, W9
	0x03921A2C B.NE 0x39219B0
	0x03921A30 SCVTF S0, W11
	0x03921A34 FDIV S8, S4, S0
	0x03921A38 UNIMPLEMENTED
	0x00000000 INVALID
	0x03921A40 CMP W9, 0x1
	0x03921A44 UNIMPLEMENTED
	0x03921A48 B.LT 0x3921D40
	0x03921A4C CBZ X8, 0x3921D50
	0x03921A50 LDR W12, [X8 + 0x18]
	0x03921A54 MOV W11, W31
	0x03921A58 MOVI D1, 0x0
	0x03921A5C FMOV S2, W31
	0x03921A60 MOVZ W13, 0xC
	0x03921A64 FMOV S0, W31
	0x03921A68 MOVI D3, 0x0
	0x03921A6C CMP W11, W12
	0x03921A70 B.CS 0x3921D54
	0x03921A74 ADD X14, X8, W11, 0x3, SXTW
	0x03921A78 LDR X14, [X14 + 0x20]
	0x03921A7C CBZ X14, 0x3921D50
	0x03921A80 LDR W15, [X14 + 0x54]
	0x03921A84 CMP W15, W19
	0x03921A88 B.NE 0x3921AFC
	0x03921A8C LDR X14, [X14 + 0x10]
	0x03921A90 CBZ X14, 0x3921D50
	0x03921A94 LDR W15, [X14 + 0x18]
	0x03921A98 CMP W15, 0x1
	0x03921A9C B.LT 0x3921AFC
	0x03921AA0 MOV W16, W31
	0x03921AA4 CBZ X10, 0x3921D50
	0x03921AA8 ADD X17, X14, W16, 0x2, SXTW
	0x03921AAC LDRSW X17, [X17 + 0x20]
	0x03921AB0 LDR W0, [X10 + 0x18]
	0x03921AB4 CMP W17, W0
	0x03921AB8 B.CS 0x3921D54
	0x03921ABC MADD X17, X17, X13, X10
	0x03921AC0 LDR V5, [X17 + 0x20]
	0x03921AC4 LDUR V6, [X17 + 0x24]
	0x03921AC8 ADD W16, W16, 0x1
	0x03921ACC CMP W15, W16
	0x03921AD0 FSUB S5, S5, S8
	0x03921AD4 FSUB V6.2S, V6.2S, V4.2S

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Compare X0, 0
	023 JumpIfEqual {297}
	024 Move X24, 0xAB8000
	025 Move W22, [X2]
	026 Move W8, [X24+1923]
	027 Move X23, [X0+40]
	028 Move W26, W1
	029 Move X21, X0
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x7D3000
	033 Move X0, [X0+1440]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+1923], W8
	037 Compare X23, 0
	038 JumpIfEqual {297}
	039 Move X25, 0x7D3000
	040 Move X25, [X25+1440]
	041 Move X8, [X25]
	042 Move X9, [X8+184]
	043 Move X8, [X23+24]
	044 Move S9, [X9+4]
	045 Move S8, [X9+8]
	046 Move V10, [X9]
	047 Subtract W19, W8, 1
	048 Compare W8, 0
	049 JumpIfEqual {274}
	050 Move W20, W31
	051 Add X8, X23, W20
	052 Move X1, [X8+32]
	053 Compare X1, 0
	054 JumpIfEqual {297}
	055 Move W8, [X1+84]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Move X2, X31
	059 Call Math.Normal, X0, X1
	060 Add S10, S10, S0
	061 Add S9, S9, S1
	062 Add S8, S8, S2
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X23+24]
	065 Add W20, W20, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare W22, 0
	068 JumpIfEqual {83}
	069 Move X0, X21
	070 Move X1, X31
	071 Call Component.get_transform, X0
	072 Compare X0, 0
	073 JumpIfEqual {297}
	074 Move V0, V10
	075 Move V1, V9
	076 Move V2, V8
	077 Move X1, X31
	078 Move X20, X0
	079 Call Transform.TransformDirection, X0, X1
	080 Move V10, V0
	081 Move V9, V1
	082 Move V8, V2
	083 Move X20, X31
	084 Move V0, V10
	085 Move V1, V9
	086 Move V2, V8
	087 Move [X31+4], W26
	088 Call Projection.VectorToProjectionAxis, X0
	089 Call Projection.GetTangentToAxis, X0
	090 Move X19, 0xAB8000
	091 Move W8, [X19+1925]
	092 Multiply S3, S9, S2
	093 Multiply S15, S8, S1
	094 Multiply S13, S8, S0
	095 Multiply S14, S10, S2
	096 Multiply S11, S10, S1
	097 Multiply S12, S9, S0
	098 Compare W8, 0
	099 JumpIfNotEqual {107}
	100 Move X0, 0x7D3000
	101 Move X0, [X0+1448]
	102 Move [X31+8], S3
	103 Call 0x1C17CF4
	104 Move V3, [X31+8]
	105 Move W8, 1
	106 Move [X19+1925], W8
	107 Move X26, 0x7D3000
	108 Move X26, [X26+1448]
	109 Subtract S15, S3, S15
	110 Subtract S3, S13, S14
	111 Subtract S14, S11, S12
	112 Move X0, [X26]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {119}
	116 Move V11, V3
	117 Call 0x1C17DFC
	118 Move V3, V11
	119 Move X8, -48455680
	120 Multiply S0, S15, S15
	121 Multiply S1, S3, S3
	122 Move V2, [X8+380]
	123 Add S0, S0, S1
	124 Multiply S1, S14, S14
	125 Add S0, S1, S0
	126 NotImplemented "Instruction FSQRT not yet implemented."
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 NotImplemented "Instruction FDIV not yet implemented."
	129 NotImplemented "Instruction FDIV not yet implemented."
	130 NotImplemented "Instruction FDIV not yet implemented."
	131 Move W8, [X24+1923]
	132 Compare W8, 0
	133 JumpIfNotEqual {143}
	134 Move X0, 0x7D3000
	135 Move X0, [X0+1440]
	136 Move V11, V2
	137 Move V12, V3
	138 Call 0x1C17CF4
	139 Move V3, V12
	140 Move V2, V11
	141 Move W8, 1
	142 Move [X24+1923], W8
	143 Move X8, [X25]
	144 Move X8, [X8+184]
	145 Move S11, [X8]
	146 Move S12, [X8+4]
	147 Move V13, [X8+8]
	148 Move W8, [X19+1925]
	149 Multiply S0, S8, S3
	150 Multiply S1, S9, S14
	151 Multiply S4, S10, S14
	152 Multiply S14, S8, S15
	153 Multiply S15, S9, S15
	154 Multiply S10, S10, S3
	155 Compare W8, 0
	156 JumpIfNotEqual {170}
	157 Move X0, 0x7D3000
	158 Move X0, [X0+1448]
	159 Move [X31], S2
	160 Move V9, V0
	161 Move [X31+8], S1
	162 Move V8, V4
	163 Call 0x1C17CF4
	164 Move V1, [X31+8]
	165 Move V2, [X31]
	166 Move V4, V8
	167 Move V0, V9
	168 Move W8, 1
	169 Move [X19+1925], W8
	170 Move X0, [X26]
	171 Subtract S8, S0, S1
	172 Subtract S9, S4, S14
	173 Subtract S10, S15, S10
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {180}
	177 Move V14, V2
	178 Call 0x1C17DFC
	179 Move V2, V14
	180 Multiply S0, S8, S8
	181 Multiply S1, S9, S9
	182 Add S0, S0, S1
	183 Multiply S1, S10, S10
	184 Add S0, S1, S0
	185 NotImplemented "Instruction FSQRT not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 NotImplemented "Instruction FDIV not yet implemented."
	188 NotImplemented "Instruction FDIV not yet implemented."
	189 NotImplemented "Instruction FDIV not yet implemented."
	190 Move W8, [X24+1923]
	191 Compare W8, 0
	192 JumpIfNotEqual {198}
	193 Move X0, 0x7D3000
	194 Move X0, [X0+1440]
	195 Call 0x1C17CF4
	196 Move W8, 1
	197 Move [X24+1923], W8
	198 Move X8, [X25]
	199 Move X8, [X8+184]
	200 Move S8, [X8]
	201 Move S9, [X8+4]
	202 Move V10, [X8+8]
	203 Move X8, [X23+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move [X31+8], X8
	206 Move X8, [X31+8]
	207 Compare W8, 0
	208 JumpIfEqual {274}
	209 Move X26, [X21+88]
	210 Move X27, [X21+96]
	211 Move W25, W31
	212 Move W28, 12
	213 Add X8, X23, W25
	214 Move X0, [X8+32]
	215 Compare X0, 0
	216 JumpIfEqual {297}
	217 Move W8, [X0+84]
	218 Move W9, [X31+4]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X1, X31
	221 Call Face.get_distinctIndexesInternal, X0
	222 Compare X0, 0
	223 JumpIfEqual {297}
	224 Move X29, [X0+24]
	225 Move X21, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move W19, W31
	228 Move X8, X29
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X24, X21, W19
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Compare X26, 0
	233 JumpIfEqual {297}
	234 Move W10, [X26+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction MADD not yet implemented."
	237 Move S0, [X9+32]
	238 Move S1, [X9+36]
	239 Move V2, [X9+40]
	240 Compare W22, 0
	241 JumpIfEqual {248}
	242 Compare X20, 0
	243 JumpIfEqual {297}
	244 Move X0, X20
	245 Move X1, X31
	246 Call Transform.TransformPoint, X0, X1
	247 Move X8, [X21+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Compare X27, 0
	250 JumpIfEqual {297}
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Move W10, [X27+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Multiply S4, S11, S0
	255 Multiply S5, S12, S1
	256 Multiply S0, S8, S0
	257 Multiply S1, S9, S1
	258 Multiply S3, S13, S2
	259 Multiply S2, S10, S2
	260 Add W19, W19, 1
	261 Add S4, S4, S5
	262 Add S0, S0, S1
	263 Add X9, X27, X9
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Add S1, S3, S4
	266 Add S0, S2, S0
	267 Move [X9+32], S1
	268 Move [X9+40], S0
	269 Move X8, [X31+8]
	270 Add W25, W25, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move W8, [X23+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Call 0x1C17F28
	275 Move X20, [X31+160]
	276 Move X19, [X31+168]
	277 Move X22, [X31+144]
	278 Move X21, [X31+152]
	279 Move X24, [X31+128]
	280 Move X23, [X31+136]
	281 Move X26, [X31+112]
	282 Move X25, [X31+120]
	283 Move X28, [X31+96]
	284 Move X27, [X31+104]
	285 Move X29, [X31+80]
	286 Move X30, [X31+88]
	287 Move D9, [X31+64]
	288 Move D8, [X31+72]
	289 Move D11, [X31+48]
	290 Move D10, [X31+56]
	291 Move D13, [X31+32]
	292 Move D12, [X31+40]
	293 Move D15, [X31+16]
	294 Move D14, [X31+24]
	295 Add X31, X31, 176
	296 Return 
	297 Call 0x1C17F20

Method: System.Void PlanarProject(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face, UnityEngine.Vector3 projection = null)

Disassembly:
	0x03921AD8 FMUL S7, S5, S5
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03921AE8 FADD S2, S2, S7
	0x03921AEC FADD V3.2S, V3.2S, V5.2S
	0x03921AF0 FADD S0, S0, S16
	0x03921AF4 FADD V1.2S, V1.2S, V6.2S
	0x03921AF8 B.NE 0x3921AA4
	0x03921AFC ADD W11, W11, 0x1
	0x03921B00 CMP W11, W9
	0x03921B04 B.NE 0x3921A6C
	0x03921B08 B 0x3921B28
	0x03921B0C MOVI D1, 0x0
	0x03921B10 FMOV S0, W31
	0x00000000 INVALID
	0x03921B18 FMOV S2, W31
	0x03921B1C FDIV S8, S4, S0
	0x03921B20 UNIMPLEMENTED
	0x03921B24 MOVI D3, 0x0
	0x03921B28 MOV S4, V1.S[1]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03921B34 FMUL S6, S0, S0
	0x03921B38 FMUL S16, S4, V1.S[0]
	0x03921B3C FSUB V5.2S, V5.2S, V7.2S
	0x03921B40 FSUB S7, S16, S6
	0x03921B44 MOV S6, V5.S[1]
	0x03921B48 FCMP S7, S6
	0x03921B4C STR V17, [X31]
	0x03921B50 B.LE 0x3921B84
	0x03921B54 FCMP S7, S5
	0x03921B58 B.LE 0x3921B84
	0x03921B5C FMUL S2, S0, V3.S[1]
	0x03921B60 FMUL S4, S4, V3.S[0]
	0x03921B64 FMUL S0, S0, V3.S[0]
	0x03921B68 FMUL S1, S1, V3.S[1]
	0x03921B6C FSUB S2, S2, S4
	0x03921B70 FSUB S0, S0, S1
	0x03921B74 FDIV S12, S2, S7
	0x03921B78 FDIV S10, S0, S7
	0x03921B7C FMOV S11, 1
	0x03921B80 B 0x3921BE0
	0x03921B84 FCMP S6, S5
	0x03921B88 B.LE 0x3921BB8
	0x03921B8C MOV S1, V3.S[1]
	0x03921B90 FMUL S5, S0, V3.S[1]
	0x03921B94 FMUL S4, S4, V3.S[0]
	0x03921B98 FMUL S0, S0, S2
	0x03921B9C FMUL S1, S1, V3.S[0]
	0x03921BA0 FSUB S2, S5, S4
	0x03921BA4 FSUB S0, S1, S0
	0x03921BA8 FDIV S11, S2, S6
	0x03921BAC FDIV S10, S0, S6
	0x03921BB0 FMOV S12, 1
	0x03921BB4 B 0x3921BE0
	0x03921BB8 MOV S6, V3.S[1]
	0x03921BBC FMUL S4, S0, V3.S[0]
	0x03921BC0 FMUL S1, S1, V3.S[1]
	0x03921BC4 FMUL S0, S0, S2
	0x03921BC8 FMUL S2, S6, V3.S[0]
	0x03921BCC FSUB S1, S4, S1
	0x03921BD0 FSUB S0, S2, S0
	0x03921BD4 FDIV S11, S1, S5
	0x03921BD8 FDIV S12, S0, S5
	0x03921BDC FMOV S10, 1
	0x03921BE0 ADRP X19, 0xAB7000
	0x03921BE4 LDRB W8, [X19 + 0x785]
	0x03921BE8 CBNZ W8, 0x3921C00
	0x03921BEC ADRP X0, 0x7D2000
	0x03921BF0 LDR X0, [X0 + 0x5A8]
	0x03921BF4 BL 0x1C16CF4
	0x03921BF8 MOVZ W8, 0x1
	0x03921BFC STRB W8, [X19 + 0x785]
	0x03921C00 ADRP X20, 0x7D2000
	0x03921C04 LDR X20, [X20 + 0x5A8]
	0x03921C08 LDR X0, [X20]
	0x03921C0C LDR W8, [X0 + 0xE0]
	0x03921C10 CBNZ W8, 0x3921C18
	0x03921C14 BL 0x1C16DFC
	0x03921C18 ADRP X8, 0xFFFFFFFFFD1C9000
	0x03921C1C FMUL S0, S11, S11
	0x03921C20 FMUL S1, S12, S12
	0x03921C24 LDR V9, [X8 + 0x17C]
	0x03921C28 FADD S0, S0, S1
	0x03921C2C FMUL S1, S10, S10
	0x03921C30 FADD S0, S1, S0
	0x03921C34 FSQRT S0, S0
	0x03921C38 FCMP S0, S9
	0x03921C3C B.LE 0x3921C50
	0x03921C40 FDIV S11, S11, S0
	0x03921C44 FDIV S12, S12, S0
	0x03921C48 FDIV S10, S10, S0
	0x03921C4C B 0x3921C7C
	0x03921C50 LDRB W8, [X21 + 0x783]
	0x03921C54 CBNZ W8, 0x3921C6C
	0x03921C58 ADRP X0, 0x7D2000
	0x03921C5C LDR X0, [X0 + 0x5A0]
	0x03921C60 BL 0x1C16CF4
	0x03921C64 MOVZ W8, 0x1
	0x03921C68 STRB W8, [X21 + 0x783]
	0x03921C6C LDR X8, [X22]
	0x03921C70 LDR X8, [X8 + 0xB8]
	0x03921C74 LDP S11, S12, [X8]
	0x03921C78 LDR V10, [X8 + 0x8]
	0x03921C7C LDRB W8, [X19 + 0x785]
	0x03921C80 CBNZ W8, 0x3921C98
	0x03921C84 ADRP X0, 0x7D2000
	0x03921C88 LDR X0, [X0 + 0x5A8]
	0x03921C8C BL 0x1C16CF4
	0x03921C90 MOVZ W8, 0x1
	0x03921C94 STRB W8, [X19 + 0x785]
	0x03921C98 LDR X0, [X20]
	0x03921C9C LDR W8, [X0 + 0xE0]
	0x03921CA0 CBNZ W8, 0x3921CA8
	0x03921CA4 BL 0x1C16DFC
	0x03921CA8 FMUL S0, S11, S11
	0x03921CAC FMUL S1, S12, S12
	0x03921CB0 FADD S0, S0, S1
	0x03921CB4 FMUL S1, S10, S10
	0x03921CB8 FADD S0, S1, S0
	0x03921CBC FSQRT S2, S0
	0x03921CC0 FCMP S2, S9
	0x03921CC4 B.LE 0x3921CD8
	0x03921CC8 FDIV S0, S11, S2
	0x03921CCC FDIV S1, S12, S2
	0x03921CD0 FDIV S2, S10, S2
	0x03921CD4 B 0x3921D04
	0x03921CD8 LDRB W8, [X21 + 0x783]
	0x03921CDC CBNZ W8, 0x3921CF4
	0x03921CE0 ADRP X0, 0x7D2000
	0x03921CE4 LDR X0, [X0 + 0x5A0]
	0x03921CE8 BL 0x1C16CF4
	0x03921CEC MOVZ W8, 0x1
	0x03921CF0 STRB W8, [X21 + 0x783]
	0x03921CF4 LDR X8, [X22]
	0x03921CF8 LDR X8, [X8 + 0xB8]
	0x03921CFC LDP S0, S1, [X8]
	0x03921D00 LDR V2, [X8 + 0x8]
	0x03921D04 LDR V5, [X31]
	0x03921D08 FMUL S3, S8, S0
	0x03921D0C LDP X20, X19, [X31 + 0x50]
	0x03921D10 LDP X22, X21, [X31 + 0x40]
	0x03921D14 FMUL S4, S1, V5.S[1]
	0x03921D18 LDR X30, [X31 + 0x38]
	0x03921D1C LDP D9, D8, [X31 + 0x28]
	0x03921D20 LDP D11, D10, [X31 + 0x18]
	0x03921D24 LDR V12, [X31 + 0x10]
	0x03921D28 FADD S3, S3, S4
	0x03921D2C FMUL S4, S2, V5.S[0]
	0x03921D30 FADD S3, S4, S3
	0x03921D34 FNEG S3, S3
	0x03921D38 ADD X31, X31, 0x60
	0x03921D3C RET
	0x03921D40 MOVI D1, 0x0
	0x03921D44 FMOV S0, W31
	0x03921D48 FMOV S2, W31
	0x03921D4C B 0x3921B24
	0x03921D50 BL 0x1C16F20
	0x03921D54 BL 0x1C16F28
	0x03921D58 ADRP X0, 0x7D7000
	0x03921D5C LDR X0, [X0 + 0x528]
	0x03921D60 BL 0x1C16D08
	0x03921D64 BL 0x1C16F10
	0x03921D68 MOV X19, X0
	0x03921D6C ADRP X0, 0x82C000
	0x03921D70 LDR X0, [X0 + 0xE90]
	0x03921D74 BL 0x1C16D08
	0x03921D78 MOV X1, X0
	0x03921D7C MOV X0, X19
	0x03921D80 MOV X2, X31
	0x03921D84 BL 0x330E100
	0x03921D88 ADRP X0, 0x82D000
	0x03921D8C LDR X0, [X0 + 0x7A0]
	0x03921D90 BL 0x1C16D08
	0x03921D94 MOV X1, X0
	0x03921D98 MOV X0, X19
	0x03921D9C BL 0x1C16DEC
	0x03921DA0 STR X30, [X31 - 0x20]!
	0x03921DA4 STP X20, X19, [X31 + 0x10]
	0x03921DA8 ADRP X19, 0xAC0000
	0x03921DAC ADRP X20, 0x82D000
	0x03921DB0 LDRB W8, [X19 + 0x8AC]
	0x03921DB4 LDR X20, [X20 + 0x798]
	0x03921DB8 TBNZ X8, 0x0, 0x3921DD0
	0x03921DBC ADRP X0, 0x82D000
	0x03921DC0 LDR X0, [X0 + 0x798]
	0x03921DC4 BL 0x1C16CF4
	0x03921DC8 MOVZ W8, 0x1
	0x03921DCC STRB W8, [X19 + 0x8AC]
	0x03921DD0 LDR X0, [X20]
	0x03921DD4 BL 0x1C16F10
	0x03921DD8 MOV X1, X31
	0x03921DDC MOV X19, X0
	0x03921DE0 BL 0x33BDD8C
	0x03921DE4 LDR X8, [X20]
	0x03921DE8 LDR X8, [X8 + 0xB8]
	0x03921DEC STR X19, [X8]
	0x03921DF0 LDP X20, X19, [X31 + 0x10]
	0x03921DF4 LDR X30, [X31], #0x20
	0x03921DF8 RET
	0x03921DFC MOV X1, X31
	0x03921E00 B 0x33BDD8C
	0x03921E04 STP D9, D8, [X31 - 0x20]!
	0x03921E08 STP X30, X19, [X31 + 0x10]
	0x03921E0C ADRP X19, 0xAC0000
	0x03921E10 LDRB W8, [X19 + 0x8AD]
	0x03921E14 MOV V8.16B, V3.16B
	0x03921E18 MOV V9.16B, V0.16B
	0x03921E1C TBNZ X8, 0x0, 0x3921E34
	0x03921E20 ADRP X0, 0x82D000
	0x03921E24 LDR X0, [X0 + 0x7A8]
	0x03921E28 BL 0x1C16CF4
	0x03921E2C MOVZ W8, 0x1
	0x03921E30 STRB W8, [X19 + 0x8AD]
	0x03921E34 LDP X30, X19, [X31 + 0x10]
	0x03921E38 FCMP S9, S8
	0x03921E3C MOVN W8, 0x0
	0x03921E40 CSINC W0, W8, W31, MI
	0x03921E44 LDP D9, D8, [X31], #0x20
	0x03921E48 RET
	0x03921E4C STP D9, D8, [X31 - 0x20]!
	0x03921E50 STP X30, X19, [X31 + 0x10]
	0x03921E54 ADRP X19, 0xAC0000
	0x03921E58 LDRB W8, [X19 + 0x8AE]
	0x03921E5C MOV V8.16B, V2.16B
	0x03921E60 MOV V9.16B, V1.16B
	0x03921E64 TBNZ X8, 0x0, 0x3921E7C
	0x03921E68 ADRP X0, 0x82D000
	0x03921E6C LDR X0, [X0 + 0x7B0]
	0x03921E70 BL 0x1C16CF4
	0x03921E74 MOVZ W8, 0x1
	0x03921E78 STRB W8, [X19 + 0x8AE]
	0x03921E7C LDP X30, X19, [X31 + 0x10]
	0x03921E80 MOV V0.16B, V9.16B
	0x03921E84 MOV V1.16B, V8.16B
	0x03921E88 LDP D9, D8, [X31], #0x20
	0x03921E8C RET
	0x03921E90 STR D14, [X31 - 0x50]!
	0x03921E94 STP D13, D12, [X31 + 0x8]
	0x03921E98 STP D11, D10, [X31 + 0x18]
	0x03921E9C STP D9, D8, [X31 + 0x28]
	0x03921EA0 STR X30, [X31 + 0x38]
	0x03921EA4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X2, X31
	021 Move V10, V2
	022 Move V12, V1
	023 Move V11, V0
	024 Move X20, X1
	025 Move X21, X0
	026 Call Math.Normal, X0, X1
	027 Move X0, X31
	028 Call Math.EnsureUnitVector, X0
	029 Compare X20, 0
	030 JumpIfEqual {277}
	031 Move W22, [X20+28]
	032 Move V15, V0
	033 Move V8, V1
	034 Move V9, V2
	035 Compare W22, 0
	036 JumpIfEqual {53}
	037 Compare X21, 0
	038 JumpIfEqual {277}
	039 Move X0, X21
	040 Move X1, X31
	041 Call Component.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {277}
	044 Move V0, V15
	045 Move V1, V8
	046 Move V2, V9
	047 Move X1, X31
	048 Move X19, X0
	049 Call Transform.TransformDirection, X0, X1
	050 Move V15, V0
	051 Move V8, V1
	052 Move V9, V2
	053 Move X19, X31
	054 Move X23, 0xAB8000
	055 Move W8, [X23+1923]
	056 Compare W8, 0
	057 JumpIfNotEqual {63}
	058 Move X0, 0x7D3000
	059 Move X0, [X0+1440]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X23+1923], W8
	063 Move X24, 0x7D3000
	064 Move X24, [X24+1440]
	065 Move X8, [X24]
	066 Move X8, [X8+184]
	067 Move S0, [X8]
	068 Move S1, [X8+4]
	069 Move V2, [X8+8]
	070 Move X8, -48459776
	071 Subtract S0, S11, S0
	072 Subtract S1, S12, S1
	073 Multiply S0, S0, S0
	074 Multiply S1, S1, S1
	075 Add S0, S0, S1
	076 Move V1, [X8+3872]
	077 Subtract S2, S10, S2
	078 Multiply S2, S2, S2
	079 Add S0, S2, S0
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move V0, V15
	082 Move V1, V8
	083 Move V2, V9
	084 Call Projection.VectorToProjectionAxis, X0
	085 Call Projection.GetTangentToAxis, X0
	086 Move V11, V0
	087 Move V12, V1
	088 Move V10, V2
	089 Move X25, 0xAB8000
	090 Move W8, [X25+1925]
	091 Move V0, V8
	092 Multiply S8, S8, S10
	093 Multiply S14, S9, S12
	094 Move V13, V9
	095 Multiply S9, S9, S11
	096 Multiply S10, S15, S10
	097 Multiply S12, S15, S12
	098 Multiply S11, S0, S11
	099 Move [X31+8], S0
	100 Move [X31+16], S15
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x7D3000
	104 Move X0, [X0+1448]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X25+1925], W8
	108 Move X26, 0x7D3000
	109 Move X26, [X26+1448]
	110 Subtract S15, S8, S14
	111 Subtract S14, S9, S10
	112 Subtract S8, S12, S11
	113 Move X0, [X26]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X8, -48455680
	119 Multiply S0, S15, S15
	120 Multiply S1, S14, S14
	121 Move V2, [X8+380]
	122 Add S0, S0, S1
	123 Multiply S1, S8, S8
	124 Add S0, S1, S0
	125 NotImplemented "Instruction FSQRT not yet implemented."
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move V10, V13
	128 NotImplemented "Instruction FDIV not yet implemented."
	129 NotImplemented "Instruction FDIV not yet implemented."
	130 NotImplemented "Instruction FDIV not yet implemented."
	131 Move W8, [X23+1923]
	132 Compare W8, 0
	133 JumpIfNotEqual {141}
	134 Move X0, 0x7D3000
	135 Move X0, [X0+1440]
	136 Move V9, V2
	137 Call 0x1C17CF4
	138 Move V2, V9
	139 Move W8, 1
	140 Move [X23+1923], W8
	141 Move X8, [X24]
	142 Move X8, [X8+184]
	143 Move S11, [X8]
	144 Move S12, [X8+4]
	145 Move V13, [X8+8]
	146 Move S1, [X31+8]
	147 Move S0, [X31+12]
	148 Move W8, [X25+1925]
	149 Multiply S3, S10, S14
	150 Multiply S10, S10, S15
	151 Multiply S4, S1, S8
	152 Multiply S9, S0, S8
	153 Multiply S15, S1, S15
	154 Multiply S14, S0, S14
	155 Compare W8, 0
	156 JumpIfNotEqual {168}
	157 Move X0, 0x7D3000
	158 Move X0, [X0+1448]
	159 Move [X31+8], S4
	160 Move [X31+16], S2
	161 Move V8, V3
	162 Call 0x1C17CF4
	163 Move S4, [X31+8]
	164 Move S2, [X31+12]
	165 Move V3, V8
	166 Move W8, 1
	167 Move [X25+1925], W8
	168 Move X0, [X26]
	169 Subtract S8, S3, S4
	170 Subtract S9, S9, S10
	171 Subtract S10, S15, S14
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {178}
	175 Move V14, V2
	176 Call 0x1C17DFC
	177 Move V2, V14
	178 Multiply S0, S8, S8
	179 Multiply S1, S9, S9
	180 Add S0, S0, S1
	181 Multiply S1, S10, S10
	182 Add S0, S1, S0
	183 NotImplemented "Instruction FSQRT not yet implemented."
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 NotImplemented "Instruction FDIV not yet implemented."
	186 NotImplemented "Instruction FDIV not yet implemented."
	187 NotImplemented "Instruction FDIV not yet implemented."
	188 Move W8, [X23+1923]
	189 Compare W8, 0
	190 JumpIfNotEqual {196}
	191 Move X0, 0x7D3000
	192 Move X0, [X0+1440]
	193 Call 0x1C17CF4
	194 Move W8, 1
	195 Move [X23+1923], W8
	196 Move X8, [X24]
	197 Move X8, [X8+184]
	198 Move S8, [X8]
	199 Move S9, [X8+4]
	200 Move V10, [X8+8]
	201 Compare X21, 0
	202 JumpIfEqual {277}
	203 Move X23, [X21+88]
	204 Move X21, [X21+96]
	205 Move X0, X20
	206 Move X1, X31
	207 Call Face.get_distinctIndexesInternal, X0
	208 Compare X0, 0
	209 JumpIfEqual {277}
	210 Move X24, [X0+24]
	211 Move X20, X0
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move W25, W31
	214 Move W26, 12
	215 Move X8, X24
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add X27, X20, W25
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Compare X23, 0
	220 JumpIfEqual {277}
	221 Move W10, [X23+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction MADD not yet implemented."
	224 Move S0, [X9+32]
	225 Move S1, [X9+36]
	226 Move V2, [X9+40]
	227 Compare W22, 0
	228 JumpIfEqual {235}
	229 Compare X19, 0
	230 JumpIfEqual {277}
	231 Move X0, X19
	232 Move X1, X31
	233 Call Transform.TransformPoint, X0, X1
	234 Move X8, [X20+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Compare X21, 0
	237 JumpIfEqual {277}
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Move W10, [X21+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Multiply S4, S11, S0
	242 Multiply S5, S12, S1
	243 Multiply S0, S8, S0
	244 Multiply S1, S9, S1
	245 Multiply S3, S13, S2
	246 Multiply S2, S10, S2
	247 Add W25, W25, 1
	248 Add S4, S4, S5
	249 Add S0, S0, S1
	250 Add X9, X21, X9
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add S1, S3, S4
	253 Add S0, S2, S0
	254 Move [X9+32], S1
	255 Move [X9+40], S0
	256 Move X20, [X31+144]
	257 Move X19, [X31+152]
	258 Move X22, [X31+128]
	259 Move X21, [X31+136]
	260 Move X24, [X31+112]
	261 Move X23, [X31+120]
	262 Move X26, [X31+96]
	263 Move X25, [X31+104]
	264 Move X30, [X31+80]
	265 Move X27, [X31+88]
	266 Move D9, [X31+64]
	267 Move D8, [X31+72]
	268 Move D11, [X31+48]
	269 Move D10, [X31+56]
	270 Move D13, [X31+32]
	271 Move D12, [X31+40]
	272 Move D15, [X31+16]
	273 Move D14, [X31+24]
	274 Add X31, X31, 160
	275 Return 
	276 Call 0x1C17F28
	277 Call 0x1C17F20

Method: UnityEngine.Vector2[] SphericalProject(System.Collections.Generic.IList`1<UnityEngine.Vector3> vertices, System.Collections.Generic.IList`1<System.Int32> indexes = null)

Disassembly:
	0x03921EA8 MOV W19, W1
	0x03921EAC MOV X1, X31
	0x03921EB0 MOV V8.16B, V6.16B
	0x03921EB4 MOV V9.16B, V5.16B
	0x03921EB8 MOV V10.16B, V4.16B
	0x03921EBC MOV V11.16B, V3.16B
	0x03921EC0 MOV V12.16B, V2.16B
	0x03921EC4 MOV V13.16B, V1.16B
	0x03921EC8 MOV V14.16B, V0.16B
	0x03921ECC MOV X20, X0
	0x03921ED0 BL 0x33BDD8C
	0x03921ED4 STP S14, S13, [X20 + 0x10]
	0x03921ED8 STP S12, S11, [X20 + 0x18]
	0x03921EDC STP S10, S9, [X20 + 0x20]
	0x03921EE0 STR S8, [X20 + 0x28]
	0x03921EE4 STR W19, [X20 + 0x2C]
	0x03921EE8 LDP X20, X19, [X31 + 0x40]
	0x03921EEC LDR X30, [X31 + 0x38]
	0x03921EF0 LDP D9, D8, [X31 + 0x28]
	0x03921EF4 LDP D11, D10, [X31 + 0x18]
	0x03921EF8 LDP D13, D12, [X31 + 0x8]
	0x03921EFC LDR V14, [X31], #0x50
	0x03921F00 RET
	0x03921F04 SUB X31, X31, 0xB0
	0x03921F08 STP D15, D14, [X31 + 0x10]
	0x03921F0C STP D13, D12, [X31 + 0x20]
	0x03921F10 STP D11, D10, [X31 + 0x30]
	0x03921F14 STP D9, D8, [X31 + 0x40]
	0x03921F18 STP X29, X30, [X31 + 0x50]
	0x03921F1C STP X28, X27, [X31 + 0x60]
	0x03921F20 STP X26, X25, [X31 + 0x70]
	0x03921F24 STP X24, X23, [X31 + 0x80]
	0x03921F28 STP X22, X21, [X31 + 0x90]
	0x03921F2C STP X20, X19, [X31 + 0xA0]
	0x03921F30 STR S1, [X31 + 0xC]
	0x03921F34 ADRP X23, 0xAC0000
	0x03921F38 ADRP X22, 0x82D000
	0x03921F3C LDRB W8, [X23 + 0x8AF]
	0x03921F40 LDR X22, [X22 + 0x7B8]
	0x03921F44 MOV V10.16B, V4.16B
	0x03921F48 MOV X20, X2
	0x03921F4C MOV X19, X1
	0x03921F50 MOV V11.16B, V3.16B
	0x03921F54 MOV V12.16B, V2.16B
	0x03921F58 MOV V9.16B, V0.16B
	0x03921F5C MOV X21, X0
	0x03921F60 TBNZ X8, 0x0, 0x3921FFC
	0x03921F64 ADRP X0, 0x82D000
	0x03921F68 LDR X0, [X0 + 0x7C0]
	0x03921F6C BL 0x1C16CF4
	0x03921F70 ADRP X0, 0x82D000
	0x03921F74 LDR X0, [X0 + 0x7C8]
	0x03921F78 BL 0x1C16CF4
	0x03921F7C ADRP X0, 0x82D000
	0x03921F80 LDR X0, [X0 + 0x7D0]
	0x03921F84 BL 0x1C16CF4
	0x03921F88 ADRP X0, 0x7D4000
	0x03921F8C LDR X0, [X0 + 0x9D8]
	0x03921F90 BL 0x1C16CF4
	0x03921F94 ADRP X0, 0x7D9000
	0x03921F98 LDR X0, [X0 + 0x688]
	0x03921F9C BL 0x1C16CF4
	0x03921FA0 ADRP X0, 0x7D3000
	0x03921FA4 LDR X0, [X0 + 0xE08]
	0x03921FA8 BL 0x1C16CF4
	0x03921FAC ADRP X0, 0x7D2000
	0x03921FB0 LDR X0, [X0 + 0xE00]
	0x03921FB4 BL 0x1C16CF4
	0x03921FB8 ADRP X0, 0x82D000
	0x03921FBC LDR X0, [X0 + 0x7D8]
	0x03921FC0 BL 0x1C16CF4
	0x03921FC4 ADRP X0, 0x82D000
	0x03921FC8 LDR X0, [X0 + 0x7E0]
	0x03921FCC BL 0x1C16CF4
	0x03921FD0 ADRP X0, 0x7D2000
	0x03921FD4 LDR X0, [X0 + 0xE18]
	0x03921FD8 BL 0x1C16CF4
	0x03921FDC ADRP X0, 0x82D000
	0x03921FE0 LDR X0, [X0 + 0x7B8]
	0x03921FE4 BL 0x1C16CF4
	0x03921FE8 ADRP X0, 0x82D000
	0x03921FEC LDR X0, [X0 + 0x7E8]
	0x03921FF0 BL 0x1C16CF4
	0x03921FF4 MOVZ W8, 0x1
	0x03921FF8 STRB W8, [X23 + 0x8AF]
	0x03921FFC LDR X0, [X22]
	0x03922000 LDR W8, [X0 + 0xE0]
	0x03922004 CBNZ W8, 0x392200C
	0x03922008 BL 0x1C16DFC
	0x0392200C ANDS W31, W20, 0xFF
	0x03922010 B.EQ 0x39220D4
	0x03922014 CBZ X21, 0x3922470
	0x03922018 ADRP X22, 0x82C000
	0x0392201C LDR X22, [X22 + 0x7E8]
	0x03922020 MOV X0, X21
	0x03922024 MOV X1, X31
	0x03922028 BL 0x3C0403C
	0x0392202C MOV W20, W0
	0x03922030 MOV X0, X21
	0x03922034 MOV X1, X31
	0x03922038 BL 0x3C04078
	0x0392203C LDR X8, [X22]
	0x03922040 MOV W22, W0
	0x03922044 LDR W9, [X8 + 0xE0]
	0x03922048 CBNZ W9, 0x3922054
	0x0392204C MOV X0, X8
	0x03922050 BL 0x1C16DFC
	0x03922054 SCVTF S0, W20
	0x03922058 MOVZ W8, 0x7F800000
	0x0392205C SCVTF S1, W22
	0x03922060 FDIV S0, S0, S10
	0x03922064 FMOV S2, W8
	0x03922068 MOVZ W9, 0x80000000
	0x0392206C FDIV S1, S1, S10
	0x03922070 FCVTZS W8, S0
	0x03922074 FCMP S0, S2
	0x03922078 FCVTZS W10, S1
	0x0392207C CSEL W3, W9, W8, EQ
	0x03922080 FCMP S1, S2
	0x03922084 MOV X0, X21
	0x03922088 MOV V0.16B, V9.16B
	0x0392208C LDR V1, [X31 + 0xC]
	0x03922090 MOV V2.16B, V12.16B
	0x03922094 MOV V3.16B, V11.16B
	0x03922098 MOV X1, X19
	0x0392209C LDP X20, X19, [X31 + 0xA0]
	0x039220A0 LDP X22, X21, [X31 + 0x90]
	0x039220A4 LDP X24, X23, [X31 + 0x80]
	0x039220A8 LDP X26, X25, [X31 + 0x70]
	0x039220AC LDP X28, X27, [X31 + 0x60]
	0x039220B0 LDP X29, X30, [X31 + 0x50]
	0x039220B4 LDP D9, D8, [X31 + 0x40]
	0x039220B8 LDP D11, D10, [X31 + 0x30]
	0x039220BC LDP D13, D12, [X31 + 0x20]
	0x039220C0 LDP D15, D14, [X31 + 0x10]
	0x039220C4 CSEL W4, W9, W10, EQ
	0x039220C8 MOVZ W2, 0x1
	0x039220CC ADD X31, X31, 0xB0
	0x039220D0 B 0x3922574
	0x039220D4 ADRP X8, 0x82C000
	0x039220D8 LDR X8, [X8 + 0x7D0]
	0x039220DC LDR X0, [X8]
	0x039220E0 BL 0x1C16F10
	0x039220E4 ADRP X8, 0x82C000
	0x039220E8 LDR X8, [X8 + 0x7C8]
	0x039220EC MOV X20, X0
	0x039220F0 LDR X1, [X8]
	0x039220F4 BL 0x2AA4804
	0x039220F8 CBZ X19, 0x3922470
	0x039220FC ADRP X10, 0x82C000
	0x03922100 LDR X8, [X19]
	0x03922104 LDR X10, [X10 + 0x7D8]
	0x03922108 LDRH W9, [X8 + 0x12E]
	0x0392210C LDR X1, [X10]
	0x03922110 CBZ X9, 0x3922134
	0x03922114 LDR X10, [X8 + 0xB0]
	0x03922118 ADD X10, X10, 0x8
	0x0392211C LDUR X11, [X10 - 0x8]
	0x03922120 CMP X11, X1
	0x03922124 B.EQ 0x3922144
	0x03922128 SUBS X9, X9, 0x1
	0x0392212C ADD X10, X10, 0x10
	0x03922130 B.NE 0x392211C
	0x03922134 MOV X0, X19
	0x03922138 MOV W2, W31
	0x0392213C BL 0x1C5C788
	0x03922140 B 0x3922150
	0x03922144 LDRSW X9, [X10]
	0x03922148 ADD X8, X8, X9, 0x4, LSL
	0x0392214C ADD X0, X8, 0x138
	0x03922150 LDP X8, X1, [X0]
	0x03922154 MOV X0, X19
	0x03922158 BLR X8
	0x0392215C MOV X19, X0
	0x03922160 CBZ X0, 0x3922474
	0x03922164 LDR V0, [X31 + 0xC]
	0x03922168 ADRP X29, 0x7D3000
	0x0392216C LDR X29, [X29 + 0x9D8]
	0x03922170 FADD S14, S9, S12
	0x03922174 FADD S15, S0, S11
	0x03922178 MOVZ W28, 0xC
	0x0392217C LDR X8, [X19]
	0x03922180 ADRP X10, 0x7D1000
	0x03922184 LDRH W9, [X8 + 0x12E]
	0x03922188 LDR X10, [X10 + 0xE18]
	0x0392218C LDR X1, [X10]
	0x03922190 CBZ X9, 0x39221B4
	0x03922194 LDR X10, [X8 + 0xB0]
	0x03922198 ADD X10, X10, 0x8
	0x0392219C LDUR X11, [X10 - 0x8]
	0x039221A0 CMP X11, X1
	0x039221A4 B.EQ 0x39221C4
	0x039221A8 SUBS X9, X9, 0x1
	0x039221AC ADD X10, X10, 0x10
	0x039221B0 B.NE 0x392219C
	0x039221B4 MOV X0, X19
	0x039221B8 MOV W2, W31
	0x039221BC BL 0x1C5C788
	0x039221C0 B 0x39221D0
	0x039221C4 LDRSW X9, [X10]
	0x039221C8 ADD X8, X8, X9, 0x4, LSL
	0x039221CC ADD X0, X8, 0x138
	0x039221D0 LDP X8, X1, [X0]
	0x039221D4 MOV X0, X19
	0x039221D8 BLR X8
	0x039221DC TBZ X0, 0x0, 0x39223A8
	0x039221E0 LDR X8, [X19]
	0x039221E4 ADRP X10, 0x82C000
	0x039221E8 LDRH W9, [X8 + 0x12E]
	0x039221EC LDR X10, [X10 + 0x7E0]
	0x039221F0 LDR X1, [X10]
	0x039221F4 CBZ X9, 0x3922218
	0x039221F8 LDR X10, [X8 + 0xB0]
	0x039221FC ADD X10, X10, 0x8
	0x03922200 LDUR X11, [X10 - 0x8]
	0x03922204 CMP X11, X1
	0x03922208 B.EQ 0x3922228
	0x0392220C SUBS X9, X9, 0x1
	0x03922210 ADD X10, X10, 0x10
	0x03922214 B.NE 0x3922200
	0x03922218 MOV X0, X19
	0x0392221C MOV W2, W31
	0x03922220 BL 0x1C5C788
	0x03922224 B 0x3922234
	0x03922228 LDRSW X9, [X10]
	0x0392222C ADD X8, X8, X9, 0x4, LSL
	0x03922230 ADD X0, X8, 0x138
	0x03922234 LDP X8, X1, [X0]
	0x03922238 MOV X0, X19
	0x0392223C BLR X8
	0x03922240 MOV X22, X0
	0x03922244 CBZ X0, 0x3922460
	0x03922248 LDRB W8, [X22 + 0xCC]
	0x0392224C CBZ W8, 0x392217C
	0x03922250 ADRP X8, 0x7D2000
	0x03922254 LDR X27, [X22 + 0x30]
	0x03922258 LDR X8, [X8 + 0xE08]
	0x0392225C LDR X0, [X8]
	0x03922260 BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X21, 0xAC1000
	023 Move W8, [X21+2215]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {47}
	030 Move X0, 0x7FB000
	031 Move X0, [X0+1952]
	032 Call 0x1C17CF4
	033 Move X0, 0x82D000
	034 Move X0, [X0+3960]
	035 Call 0x1C17CF4
	036 Move X0, 0x82D000
	037 Move X0, [X0+3968]
	038 Call 0x1C17CF4
	039 Move X0, 0x7FB000
	040 Move X0, [X0+1960]
	041 Call 0x1C17CF4
	042 Move X0, 0x82D000
	043 Move X0, [X0+2696]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2215], W8
	047 Compare X19, 0
	048 JumpIfEqual {65}
	049 Move X10, 0x7FB000
	050 Move X8, [X19]
	051 Move X10, [X10+1952]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 Compare X20, 0
	066 JumpIfEqual {261}
	067 Move X10, 0x82D000
	068 Move X8, [X20]
	069 Move X10, [X10+3960]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X20
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X19
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, 0x82D000
	097 Move X8, [X8+2696]
	098 Move W23, W0
	099 Move W1, W23
	100 Move X0, [X8]
	101 Call 0x1C17D6C
	102 Move X21, X0
	103 Move X0, X20
	104 Move X1, X19
	105 Move X2, X31
	106 Call Math.Average, X0, X1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+8], S1
	109 Move [X31+16], S0
	110 Move X8, -48459776
	111 Move X26, 0x82C000
	112 Move W28, W23
	113 Move X23, 0x7D2000
	114 Move X9, -48459776
	115 Move V14, [X8+380]
	116 Move X8, -48459776
	117 Move X24, 0x7D2000
	118 Move X26, [X26+3968]
	119 Move X23, [X23+1448]
	120 Move V15, [X9+108]
	121 Move V8, [X8+172]
	122 Move X24, [X24+1440]
	123 Move V10, V2
	124 Move X22, X31
	125 Move X29, 0xAB7000
	126 Move S9, 0.5
	127 Move X27, 0xAB7000
	128 Compare X19, 0
	129 JumpIfEqual {146}
	130 Move X8, [X19]
	131 Move X10, 0x7FA000
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X10, [X10+1960]
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X19
	144 Move W2, W31
	145 Call 0x1C5D788
	146 Move W25, W22
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X2, [X0+8]
	152 Move X0, X19
	153 Move W1, W22
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move W25, W0
	156 Compare X20, 0
	157 JumpIfEqual {261}
	158 Move X8, [X20]
	159 Move X1, [X26]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X20
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X2, [X0+8]
	177 Move X0, X20
	178 Move W1, W25
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move W8, [X29+1925]
	181 Move V11, V0
	182 Move V12, V1
	183 Move V13, V2
	184 Compare W8, 0
	185 JumpIfNotEqual {190}
	186 Move X0, X23
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X29+1925], W8
	190 Move X0, [X23]
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move S1, [X31+8]
	196 Move S0, [X31+12]
	197 Subtract S3, S13, S10
	198 Subtract S0, S11, S0
	199 Subtract S2, S12, S1
	200 Multiply S1, S0, S0
	201 Multiply S4, S2, S2
	202 Add S1, S1, S4
	203 Multiply S4, S3, S3
	204 Add S1, S4, S1
	205 NotImplemented "Instruction FSQRT not yet implemented."
	206 NotImplemented "Instruction FCMP not yet implemented."
	207 NotImplemented "Instruction FDIV not yet implemented."
	208 NotImplemented "Instruction FDIV not yet implemented."
	209 NotImplemented "Instruction FDIV not yet implemented."
	210 Move W8, [X27+1923]
	211 Compare W8, 0
	212 JumpIfNotEqual {217}
	213 Move X0, X24
	214 Call 0x1C17CF4
	215 Move W8, 1
	216 Move [X27+1923], W8
	217 Move X8, [X24]
	218 Move X8, [X8+184]
	219 Move S1, [X8]
	220 Move S11, [X8+4]
	221 Move V0, [X8+8]
	222 Compare X21, 0
	223 JumpIfEqual {261}
	224 Move W8, [X21+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Call 0x3EB2C40
	227 NotImplemented "Instruction FDIV not yet implemented."
	228 Add S0, S0, S9
	229 Add X25, X21, X22
	230 Move [X25+32], S0
	231 Move V0, V11
	232 Call 0x3EB2E60
	233 NotImplemented "Instruction FDIV not yet implemented."
	234 Add X22, X22, 1
	235 Add S0, S0, S9
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X25+36], S0
	238 Move X0, X21
	239 Move X20, [X31+160]
	240 Move X19, [X31+168]
	241 Move X22, [X31+144]
	242 Move X21, [X31+152]
	243 Move X24, [X31+128]
	244 Move X23, [X31+136]
	245 Move X26, [X31+112]
	246 Move X25, [X31+120]
	247 Move X28, [X31+96]
	248 Move X27, [X31+104]
	249 Move X29, [X31+80]
	250 Move X30, [X31+88]
	251 Move D9, [X31+64]
	252 Move D8, [X31+72]
	253 Move D11, [X31+48]
	254 Move D10, [X31+56]
	255 Move D13, [X31+32]
	256 Move D12, [X31+40]
	257 Move D15, [X31+16]
	258 Move D14, [X31+24]
	259 Add X31, X31, 176
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x1C17F28

Method: System.Collections.Generic.IList`1<UnityEngine.Vector2> Sort(System.Collections.Generic.IList`1<UnityEngine.Vector2> verts, UnityEngine.ProBuilder.SortMethod method = 1)

Disassembly:
	0x03922264 ADRP X8, 0x7D8000
	0x03922268 LDR X8, [X8 + 0x688]
	0x0392226C MOV X23, X0
	0x03922270 LDR X1, [X8]
	0x03922274 BL 0x2DA9EF4
	0x03922278 LDR X26, [X22 + 0x58]
	0x0392227C MOV X0, X22
	0x03922280 MOV X1, X31
	0x03922284 BL 0x3C32E90
	0x03922288 CBZ X21, 0x3922468
	0x0392228C MOV X24, X0
	0x03922290 MOV X0, X21
	0x03922294 MOV X1, X31
	0x03922298 BL 0x3C04078
	0x0392229C CBZ X27, 0x3922464
	0x039222A0 LDR W8, [X27 + 0x18]
	0x039222A4 CMP W8, 0x1
	0x039222A8 B.LT 0x3922384
	0x039222AC MOV W25, W31
	0x039222B0 SCVTF S8, W0
	0x039222B4 CMP W25, W8
	0x039222B8 B.CS 0x392244C
	0x039222BC ADD X8, X27, W25, 0x3, SXTW
	0x039222C0 LDR X0, [X8 + 0x20]
	0x039222C4 CBZ X0, 0x3922458
	0x039222C8 MOV W1, W31
	0x039222CC MOV X2, X31
	0x039222D0 BL 0x39282DC
	0x039222D4 CBZ X26, 0x3922454
	0x039222D8 LDR W8, [X26 + 0x18]
	0x039222DC CMP W0, W8
	0x039222E0 B.CS 0x3922448
	0x039222E4 CBZ X24, 0x3922450
	0x039222E8 SXTW X8, W0
	0x039222EC MADD X8, X8, X28, X26
	0x039222F0 LDP S1, S2, [X8 + 0x24]
	0x039222F4 LDR V0, [X8 + 0x20]
	0x039222F8 MOV X0, X24
	0x039222FC MOV X1, X31
	0x03922300 BL 0x3C3DE4C
	0x03922304 MOV X0, X21
	0x03922308 MOV X1, X31
	0x0392230C BL 0x3C045DC
	0x03922310 MOV V11.16B, V0.16B
	0x03922314 MOV V12.16B, V1.16B
	0x03922318 MOV V13.16B, V2.16B
	0x0392231C MOV X0, X21
	0x03922320 MOV X1, X31
	0x03922324 BL 0x3C035DC
	0x03922328 FCMP S13, S0
	0x0392232C B.MI 0x3922374
	0x03922330 FSUB S0, S8, S12
	0x03922334 FDIV S0, S0, S10
	0x03922338 FCMP S0, S15
	0x0392233C B.PL 0x3922374
	0x03922340 FDIV S1, S11, S10
	0x03922344 FCMP S1, S9
	0x03922348 B.LT 0x3922374
	0x0392234C FCMP S1, S14
	0x03922350 B.PL 0x3922374
	0x03922354 LDR V1, [X31 + 0xC]
	0x03922358 FCMP S0, S1
	0x0392235C B.LT 0x3922374
	0x03922360 CBZ X23, 0x392245C
	0x03922364 LDR X2, [X29]
	0x03922368 MOV X0, X23
	0x0392236C MOV W1, W25
	0x03922370 BL 0x2DAB03C
	0x03922374 LDR W8, [X27 + 0x18]
	0x03922378 ADD W25, W25, 0x1
	0x0392237C CMP W25, W8
	0x03922380 B.LT 0x39222B4
	0x03922384 CBZ X20, 0x392246C
	0x03922388 ADRP X8, 0x82C000
	0x0392238C LDR X8, [X8 + 0x7C0]
	0x03922390 LDR X3, [X8]
	0x03922394 MOV X0, X20
	0x03922398 MOV X1, X22
	0x0392239C MOV X2, X23
	0x039223A0 BL 0x2AA5098
	0x039223A4 B 0x392217C
	0x039223A8 MOV X22, X31
	0x039223AC CBZ X19, 0x3922410
	0x039223B0 ADRP X10, 0x7D1000
	0x039223B4 LDR X8, [X19]
	0x039223B8 LDR X10, [X10 + 0xE00]
	0x039223BC LDRH W9, [X8 + 0x12E]
	0x039223C0 LDR X1, [X10]
	0x039223C4 CBZ X9, 0x39223E8
	0x039223C8 LDR X10, [X8 + 0xB0]
	0x039223CC ADD X10, X10, 0x8
	0x039223D0 LDUR X11, [X10 - 0x8]
	0x039223D4 CMP X11, X1
	0x039223D8 B.EQ 0x39223F8
	0x039223DC SUBS X9, X9, 0x1
	0x039223E0 ADD X10, X10, 0x10
	0x039223E4 B.NE 0x39223D0
	0x039223E8 MOV X0, X19
	0x039223EC MOV W2, W31
	0x039223F0 BL 0x1C5C788
	0x039223F4 B 0x3922404
	0x039223F8 LDRSW X9, [X10]
	0x039223FC ADD X8, X8, X9, 0x4, LSL
	0x03922400 ADD X0, X8, 0x138
	0x03922404 LDP X8, X1, [X0]
	0x03922408 MOV X0, X19
	0x0392240C BLR X8
	0x03922410 CBNZ X22, 0x3922478
	0x03922414 MOV X0, X20
	0x03922418 LDP X20, X19, [X31 + 0xA0]
	0x0392241C LDP X22, X21, [X31 + 0x90]
	0x03922420 LDP X24, X23, [X31 + 0x80]
	0x03922424 LDP X26, X25, [X31 + 0x70]
	0x03922428 LDP X28, X27, [X31 + 0x60]
	0x0392242C LDP X29, X30, [X31 + 0x50]
	0x03922430 LDP D9, D8, [X31 + 0x40]
	0x03922434 LDP D11, D10, [X31 + 0x30]
	0x03922438 LDP D13, D12, [X31 + 0x20]
	0x0392243C LDP D15, D14, [X31 + 0x10]
	0x03922440 ADD X31, X31, 0xB0
	0x03922444 RET
	0x03922448 BL 0x1C16F28
	0x0392244C BL 0x1C16F28
	0x03922450 BL 0x1C16F20
	0x03922454 BL 0x1C16F20
	0x03922458 BL 0x1C16F20
	0x0392245C BL 0x1C16F20
	0x03922460 BL 0x1C16F20
	0x03922464 BL 0x1C16F20
	0x03922468 BL 0x1C16F20
	0x0392246C BL 0x1C16F20
	0x03922470 BL 0x1C16F20
	0x03922474 BL 0x1C16F20
	0x03922478 MOV X0, X22
	0x0392247C BL 0x1C16F18
	0x03922480 B 0x39224CC
	0x03922484 B 0x39224CC
	0x03922488 B 0x39224CC
	0x0392248C B 0x39224CC
	0x03922490 B 0x39224CC
	0x03922494 B 0x39224CC
	0x03922498 B 0x39224CC
	0x0392249C B 0x39224CC
	0x039224A0 B 0x39224CC
	0x039224A4 B 0x39224CC
	0x039224A8 B 0x39224CC
	0x039224AC B 0x39224CC
	0x039224B0 B 0x39224CC
	0x039224B4 B 0x39224CC
	0x039224B8 B 0x39224CC
	0x039224BC B 0x39224CC
	0x039224C0 B 0x39224CC
	0x039224C4 B 0x39224CC
	0x039224C8 B 0x39224CC
	0x039224CC MOV X21, X0
	0x039224D0 CMP W1, 0x1
	0x039224D4 B.NE 0x39224EC
	0x039224D8 MOV X0, X21
	0x039224DC BL 0x3EB1AD0
	0x039224E0 LDR X22, [X0]
	0x039224E4 BL 0x3EB1AE0
	0x039224E8 B 0x39223AC
	0x039224EC MOV X22, X31
	0x039224F0 B 0x39224F8
	0x039224F4 MOV X21, X0
	0x039224F8 CBZ X19, 0x392255C
	0x039224FC ADRP X10, 0x7D1000
	0x03922500 LDR X8, [X19]
	0x03922504 LDR X10, [X10 + 0xE00]
	0x03922508 LDRH W9, [X8 + 0x12E]
	0x0392250C LDR X1, [X10]
	0x03922510 CBZ X9, 0x3922534
	0x03922514 LDR X10, [X8 + 0xB0]
	0x03922518 ADD X10, X10, 0x8
	0x0392251C LDUR X11, [X10 - 0x8]
	0x03922520 CMP X11, X1
	0x03922524 B.EQ 0x3922544
	0x03922528 SUBS X9, X9, 0x1
	0x0392252C ADD X10, X10, 0x10
	0x03922530 B.NE 0x392251C
	0x03922534 MOV X0, X19
	0x03922538 MOV W2, W31
	0x0392253C BL 0x1C5C788
	0x03922540 B 0x3922550
	0x03922544 LDRSW X9, [X10]
	0x03922548 ADD X8, X8, X9, 0x4, LSL
	0x0392254C ADD X0, X8, 0x138
	0x03922550 LDP X8, X1, [X0]
	0x03922554 MOV X0, X19
	0x03922558 BLR X8
	0x0392255C CBNZ X22, 0x3922568
	0x03922560 MOV X0, X21
	0x03922564 BL 0x1D2C690
	0x03922568 MOV X0, X22
	0x0392256C BL 0x1C16F18
	0x03922570 BL 0x1990590
	0x03922574 SUB X31, X31, 0x120
	0x03922578 STP D11, D10, [X31 + 0xA0]
	0x0392257C STP D9, D8, [X31 + 0xB0]
	0x03922580 STP X29, X30, [X31 + 0xC0]
	0x03922584 STP X28, X27, [X31 + 0xD0]
	0x03922588 STP X26, X25, [X31 + 0xE0]
	0x0392258C STP X24, X23, [X31 + 0xF0]
	0x03922590 STP X22, X21, [X31 + 0x100]
	0x03922594 STP X20, X19, [X31 + 0x110]
	0x03922598 ADRP X20, 0xABF000
	0x0392259C ADRP X26, 0x82C000
	0x039225A0 ADRP X23, 0x82C000
	0x039225A4 LDRB W8, [X20 + 0x8BC]
	0x039225A8 LDR X26, [X26 + 0x7D0]
	0x039225AC LDR X23, [X23 + 0x7C8]
	0x039225B0 MOV W19, W4
	0x039225B4 MOV W21, W3
	0x039225B8 MOV W25, W2
	0x039225BC MOV X22, X1
	0x039225C0 MOV V8.16B, V3.16B
	0x039225C4 MOV V9.16B, V2.16B
	0x039225C8 MOV V10.16B, V1.16B
	0x039225CC MOV V11.16B, V0.16B
	0x039225D0 MOV X24, X0
	0x039225D4 TBNZ X8, 0x0, 0x3922730
	0x039225D8 ADRP X0, 0x82C000
	0x039225DC LDR X0, [X0 + 0x7C0]
	0x039225E0 BL 0x1C16CF4
	0x039225E4 ADRP X0, 0x82C000
	0x039225E8 LDR X0, [X0 + 0x7F0]
	0x039225EC BL 0x1C16CF4
	0x039225F0 ADRP X0, 0x82C000
	0x039225F4 LDR X0, [X0 + 0x7F8]
	0x039225F8 BL 0x1C16CF4
	0x039225FC ADRP X0, 0x82C000
	0x03922600 LDR X0, [X0 + 0x800]
	0x03922604 BL 0x1C16CF4
	0x03922608 ADRP X0, 0x82C000
	0x0392260C LDR X0, [X0 + 0x7C8]
	0x03922610 BL 0x1C16CF4
	0x03922614 ADRP X0, 0x82C000
	0x03922618 LDR X0, [X0 + 0x7D0]
	0x0392261C BL 0x1C16CF4
	0x03922620 ADRP X0, 0x82C000
	0x03922624 LDR X0, [X0 + 0x808]
	0x03922628 BL 0x1C16CF4
	0x0392262C ADRP X0, 0x82C000
	0x03922630 LDR X0, [X0 + 0x810]
	0x03922634 BL 0x1C16CF4
	0x03922638 ADRP X0, 0x82C000
	0x0392263C LDR X0, [X0 + 0x818]
	0x03922640 BL 0x1C16CF4
	0x03922644 ADRP X0, 0x82C000
	0x03922648 LDR X0, [X0 + 0x820]
	0x0392264C BL 0x1C16CF4
	0x03922650 ADRP X0, 0x7D3000
	0x03922654 LDR X0, [X0 + 0x9D0]
	0x03922658 BL 0x1C16CF4
	0x0392265C ADRP X0, 0x7D3000
	0x03922660 LDR X0, [X0 + 0x9D8]
	0x03922664 BL 0x1C16CF4
	0x03922668 ADRP X0, 0x82C000
	0x0392266C LDR X0, [X0 + 0x828]
	0x03922670 BL 0x1C16CF4
	0x03922674 ADRP X0, 0x7D2000
	0x03922678 LDR X0, [X0 + 0xDF8]
	0x0392267C BL 0x1C16CF4
	0x03922680 ADRP X0, 0x7D2000
	0x03922684 LDR X0, [X0 + 0xE00]
	0x03922688 BL 0x1C16CF4
	0x0392268C ADRP X0, 0x82C000
	0x03922690 LDR X0, [X0 + 0x830]
	0x03922694 BL 0x1C16CF4
	0x03922698 ADRP X0, 0x7D8000
	0x0392269C LDR X0, [X0 + 0x688]
	0x039226A0 BL 0x1C16CF4
	0x039226A4 ADRP X0, 0x7D2000
	0x039226A8 LDR X0, [X0 + 0xE08]
	0x039226AC BL 0x1C16CF4
	0x039226B0 ADRP X0, 0x82C000
	0x039226B4 LDR X0, [X0 + 0x838]
	0x039226B8 BL 0x1C16CF4
	0x039226BC ADRP X0, 0x82C000
	0x039226C0 LDR X0, [X0 + 0x840]
	0x039226C4 BL 0x1C16CF4
	0x039226C8 ADRP X0, 0x82C000
	0x039226CC LDR X0, [X0 + 0x848]
	0x039226D0 BL 0x1C16CF4
	0x039226D4 ADRP X0, 0x7D1000
	0x039226D8 LDR X0, [X0 + 0x5A8]
	0x039226DC BL 0x1C16CF4
	0x039226E0 ADRP X0, 0x7D1000
	0x039226E4 LDR X0, [X0 + 0x598]
	0x039226E8 BL 0x1C16CF4
	0x039226EC ADRP X0, 0x82C000
	0x039226F0 LDR X0, [X0 + 0x7E8]
	0x039226F4 BL 0x1C16CF4
	0x039226F8 ADRP X0, 0x82C000
	0x039226FC LDR X0, [X0 + 0x850]
	0x03922700 BL 0x1C16CF4
	0x03922704 ADRP X0, 0x82C000
	0x03922708 LDR X0, [X0 + 0x858]
	0x0392270C BL 0x1C16CF4
	0x03922710 ADRP X0, 0x82C000
	0x03922714 LDR X0, [X0 + 0x860]
	0x03922718 BL 0x1C16CF4
	0x0392271C ADRP X0, 0x82C000
	0x03922720 LDR X0, [X0 + 0x868]
	0x03922724 BL 0x1C16CF4
	0x03922728 MOVZ W8, 0x1
	0x0392272C STRB W8, [X20 + 0x8BC]
	0x03922730 LDR X0, [X26]
	0x03922734 MOVI V0.2D, 0x0
	0x03922738 STP X31, X31, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D12
	003 Move [X31+32], D11
	004 Move [X31+40], D10
	005 Move [X31+48], D9
	006 Move [X31+56], D8
	007 Move [X31+64], X30
	008 Move [X31+72], X27
	009 Move [X31+80], X26
	010 Move [X31+88], X25
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move X21, 0xAC0000
	018 Move W8, [X21+2216]
	019 Move W19, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0x82D000
	026 Move X0, [X0+1856]
	027 Call 0x1C17CF4
	028 Move X0, 0x82D000
	029 Move X0, [X0+1864]
	030 Call 0x1C17CF4
	031 Move X0, 0x82D000
	032 Move X0, [X0+1872]
	033 Call 0x1C17CF4
	034 Move X0, 0x82D000
	035 Move X0, [X0+1232]
	036 Call 0x1C17CF4
	037 Move X0, 0x82D000
	038 Move X0, [X0+1880]
	039 Call 0x1C17CF4
	040 Move X0, 0x82C000
	041 Move X0, [X0+2704]
	042 Call 0x1C17CF4
	043 Move X0, 0x82C000
	044 Move X0, [X0+2712]
	045 Call 0x1C17CF4
	046 Move X0, 0x82D000
	047 Move X0, [X0+1888]
	048 Call 0x1C17CF4
	049 Move X0, 0x82D000
	050 Move X0, [X0+1896]
	051 Call 0x1C17CF4
	052 Move X0, 0x82D000
	053 Move X0, [X0+1904]
	054 Call 0x1C17CF4
	055 Move X0, 0x82D000
	056 Move X0, [X0+1912]
	057 Call 0x1C17CF4
	058 Move X0, 0x82D000
	059 Move X0, [X0+1920]
	060 Call 0x1C17CF4
	061 Move X0, 0x82D000
	062 Move X0, [X0+1928]
	063 Call 0x1C17CF4
	064 Move X0, 0x82D000
	065 Move X0, [X0+1936]
	066 Call 0x1C17CF4
	067 Move X0, 0x82D000
	068 Move X0, [X0+1944]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+2216], W8
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Math.Average, X0, X1
	076 Move X21, 0xABA000
	077 Move W8, [X21+2038]
	078 Move V8, V0
	079 Move V9, V1
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x7DA000
	083 Move X0, [X0+3848]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X21+2038], W8
	087 Compare X20, 0
	088 JumpIfEqual {335}
	089 Move X8, 0x7DA000
	090 Move X8, [X8+3848]
	091 Move X11, 0x82C000
	092 Move X22, 0x82D000
	093 Move X21, 0x82D000
	094 Move X9, [X8]
	095 Move X8, [X20]
	096 Move X10, [X9+184]
	097 Move X11, [X11+2704]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move S10, [X10+16]
	100 Move S11, [X10+20]
	101 Move X1, [X11]
	102 Move X22, [X22+1912]
	103 Move X21, [X21+1904]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X20
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, [X22]
	123 Move W22, W0
	124 Move X0, X8
	125 Call 0x1C17F10
	126 Move X2, [X21]
	127 Move W1, W22
	128 Move X21, X0
	129 Call List`1<SimpleTuple`2<Single, Vector2>>..ctor, X0, X1
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X24, 0x82C000
	132 Move X25, 0x82D000
	133 Move X26, 0x82D000
	134 Move X24, [X24+2712]
	135 Move X25, [X25+1920]
	136 Move X26, [X26+1888]
	137 Move W23, W31
	138 Move W27, 12
	139 Move X8, [X20]
	140 Move X1, [X24]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X20
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X2, [X0+8]
	158 Move X0, X20
	159 Move W1, W23
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Subtract S2, S0, S8
	162 Subtract S3, S1, S9
	163 Move V0, V10
	164 Move V1, V11
	165 Move X0, X31
	166 Call Math.SignedAngle, X0, X1
	167 Move X8, [X20]
	168 Move X1, [X24]
	169 Move V12, V0
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move X0, X20
	180 Move W2, W31
	181 Call 0x1C5D788
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X2, [X0+8]
	187 Move X0, X20
	188 Move W1, W23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X1, [X25]
	191 Move V2, V0
	192 Move V3, V1
	193 Add X0, X31, 0
	194 Move V0, V12
	195 Move V1, V2
	196 Move V2, V3
	197 Move [X31+8], W31
	198 Move [X31], X31
	199 Call SimpleTuple`2<Single, Vector2>..ctor, X0, V0, X1
	200 Compare X21, 0
	201 JumpIfEqual {335}
	202 Move W9, [X21+28]
	203 Move S0, [X31]
	204 Move S1, [X31+4]
	205 Move V2, [X31+8]
	206 Move X8, [X21+16]
	207 Move X10, [X26]
	208 Add W9, W9, 1
	209 Move [X21+28], W9
	210 Compare X8, 0
	211 JumpIfEqual {335}
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Move W11, [X8+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add W10, W9, 1
	216 NotImplemented "Instruction MADD not yet implemented."
	217 Move [X21+24], W10
	218 Move [X8+32], S0
	219 Move [X8+40], S1
	220 Move [X8+40], S2
	221 Move X8, [X10+32]
	222 Move X0, X21
	223 Move X8, [X8+192]
	224 Move X1, [X8+112]
	225 Call List`1<SimpleTuple`2<Single, Vector2>>.AddWithResize, X0, X1
	226 Add W23, W23, 1
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X23, 0x82D000
	229 Move X23, [X23+1944]
	230 Move X0, [X23]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {236}
	234 Call 0x1C17DFC
	235 Move X0, [X23]
	236 Move X8, [X0+184]
	237 Move X20, [X8+8]
	238 Compare X20, 0
	239 JumpIfNotEqual {261}
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X23]
	245 Move X9, 0x82D000
	246 Move X8, [X0+184]
	247 Move X9, [X9+1856]
	248 Move X22, [X8]
	249 Move X0, [X9]
	250 Call 0x1C17F10
	251 Move X8, 0x82D000
	252 Move X8, [X8+1928]
	253 Move X1, X22
	254 Move X3, X31
	255 Move X20, X0
	256 Move X2, [X8]
	257 Call Comparison`1<SimpleTuple`2<Single, Vector2>>..ctor, X0, X1, X2
	258 Move X8, [X23]
	259 Move X8, [X8+184]
	260 Move [X8+8], X20
	261 Compare X21, 0
	262 JumpIfEqual {335}
	263 Move X8, 0x82D000
	264 Move X8, [X8+1896]
	265 Move X0, X21
	266 Move X1, X20
	267 Move X2, [X8]
	268 Call List`1<SimpleTuple`2<Single, Vector2>>.Sort, X0, X1
	269 Move X0, [X23]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {275}
	273 Call 0x1C17DFC
	274 Move X0, [X23]
	275 Move X8, [X0+184]
	276 Move X25, 0x82D000
	277 Move X24, 0x82D000
	278 Move X20, [X8+16]
	279 Move X25, [X25+1872]
	280 Move X24, [X24+1232]
	281 Compare X20, 0
	282 JumpIfNotEqual {304}
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X23]
	288 Move X9, 0x82D000
	289 Move X8, [X0+184]
	290 Move X9, [X9+1880]
	291 Move X22, [X8]
	292 Move X0, [X9]
	293 Call 0x1C17F10
	294 Move X8, 0x82D000
	295 Move X8, [X8+1936]
	296 Move X1, X22
	297 Move X3, X31
	298 Move X20, X0
	299 Move X2, [X8]
	300 Call Func`2<SimpleTuple`2<Single, Vector2>, Vector2>..ctor, X0, X1, X2
	301 Move X8, [X23]
	302 Move X8, [X8+184]
	303 Move [X8+16], X20
	304 Move X2, [X25]
	305 Move X0, X21
	306 Move X1, X20
	307 Call Enumerable.Select, X0, X1
	308 Move X1, [X24]
	309 Call Enumerable.ToList, X0
	310 Compare W19, 0
	311 JumpIfNotEqual {318}
	312 Move X8, 0x82D000
	313 Move X8, [X8+1864]
	314 Move X1, [X8]
	315 Call Enumerable.Reverse, X0
	316 Move X1, [X24]
	317 Call Enumerable.ToList, X0
	318 Move X20, [X31+128]
	319 Move X19, [X31+136]
	320 Move X22, [X31+112]
	321 Move X21, [X31+120]
	322 Move X24, [X31+96]
	323 Move X23, [X31+104]
	324 Move X26, [X31+80]
	325 Move X25, [X31+88]
	326 Move X30, [X31+64]
	327 Move X27, [X31+72]
	328 Move D9, [X31+48]
	329 Move D8, [X31+56]
	330 Move D11, [X31+32]
	331 Move D10, [X31+40]
	332 Move V12, [X31+16]
	333 Add X31, X31, 144
	334 Return X0
	335 Call 0x1C17F20

Method: UnityEngine.Vector3 GetTangentToAxis(UnityEngine.ProBuilder.ProjectionAxis axis)

Disassembly:
	0x039215E0 LDR X0, [X23]
	0x039215E4 LDR X8, [X0 + 0xB8]
	0x039215E8 LDR X20, [X8 + 0x8]
	0x039215EC CBNZ X20, 0x3921640
	0x039215F0 LDR W8, [X0 + 0xE0]
	0x039215F4 CBNZ W8, 0x3921600
	0x039215F8 BL 0x1C16DFC
	0x039215FC LDR X0, [X23]
	0x03921600 ADRP X9, 0x82D000
	0x03921604 LDR X8, [X0 + 0xB8]
	0x03921608 LDR X9, [X9 + 0x740]
	0x0392160C LDR X22, [X8]
	0x03921610 LDR X0, [X9]
	0x03921614 BL 0x1C16F10
	0x03921618 ADRP X8, 0x82D000
	0x0392161C LDR X8, [X8 + 0x788]
	0x03921620 MOV X1, X22
	0x03921624 MOV X3, X31
	0x03921628 MOV X20, X0
	0x0392162C LDR X2, [X8]
	0x03921630 BL 0x2956F78
	0x03921634 LDR X8, [X23]
	0x03921638 LDR X8, [X8 + 0xB8]
	0x0392163C STR X20, [X8 + 0x8]
	0x03921640 CBZ X21, 0x3921738
	0x03921644 ADRP X8, 0x82D000
	0x03921648 LDR X8, [X8 + 0x768]
	0x0392164C MOV X0, X21
	0x03921650 MOV X1, X20
	0x03921654 LDR X2, [X8]
	0x03921658 BL 0x2F38150
	0x0392165C LDR X0, [X23]
	0x03921660 LDR W8, [X0 + 0xE0]
	0x03921664 CBNZ W8, 0x3921670
	0x03921668 BL 0x1C16DFC
	0x0392166C LDR X0, [X23]
	0x03921670 LDR X8, [X0 + 0xB8]
	0x03921674 ADRP X25, 0x82D000
	0x03921678 ADRP X24, 0x82D000
	0x0392167C LDR X20, [X8 + 0x10]
	0x03921680 LDR X25, [X25 + 0x750]
	0x03921684 LDR X24, [X24 + 0x4D0]
	0x03921688 CBNZ X20, 0x39216DC
	0x0392168C LDR W8, [X0 + 0xE0]
	0x03921690 CBNZ W8, 0x392169C
	0x03921694 BL 0x1C16DFC
	0x03921698 LDR X0, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W8, 1
	005 NotImplemented "Instruction LSLV not yet implemented."
	006 Move W9, 9
	007 And W31, W8, W9
	008 Move W9, 18
	009 And W31, W8, W9
	010 Move X19, 0xAB8000
	011 Move W8, [X19+2591]
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0x7D3000
	015 Move X0, [X0+1440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2591], W8
	019 Move X8, 0x7D3000
	020 Move X8, [X8+1440]
	021 Move X8, [X8]
	022 Move X10, [X8+184]
	023 Add X8, X10, 72
	024 Add X9, X10, 76
	025 Add X10, X10, 80
	026 Move X19, 0xAB8000
	027 Move W8, [X19+1926]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x7D3000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1926], W8
	035 Move X8, 0x7D3000
	036 Move X8, [X8+1440]
	037 Move X8, [X8]
	038 Move X10, [X8+184]
	039 Add X8, X10, 24
	040 Add X9, X10, 28
	041 Add X10, X10, 32
	042 Move V2, [X10]
	043 Move V1, [X9]
	044 Move V0, [X8]
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Return X0

Method: UnityEngine.Vector3 ProjectionAxisToVector(UnityEngine.ProBuilder.ProjectionAxis axis)

Disassembly:
	0x0392273C STP X31, X31, [X31 + 0x80]
	0x03922740 STR X31, [X31 + 0x70]
	0x03922744 STP V0, V0, [X31 + 0x50]
	0x03922748 BL 0x1C16F10
	0x0392274C LDR X1, [X23]
	0x03922750 STR X0, [X31 + 0x20]
	0x03922754 BL 0x2AA4804
	0x03922758 ADRP X8, 0x82C000
	0x0392275C LDR X8, [X8 + 0x7E8]
	0x03922760 LDR X0, [X8]
	0x03922764 LDR W8, [X0 + 0xE0]
	0x03922768 CBNZ W8, 0x3922770
	0x0392276C BL 0x1C16DFC
	0x03922770 AND W2, W25, 0x1
	0x03922774 ADD X3, X31, 0x98
	0x03922778 MOV X0, X24
	0x0392277C MOV X1, X22
	0x03922780 MOV W4, W21
	0x03922784 MOV W5, W19
	0x03922788 BL 0x3925D34
	0x0392278C CBZ X0, 0x3922DE4
	0x03922790 ADRP X21, 0x7D1000
	0x03922794 LDR X21, [X21 + 0x5A8]
	0x03922798 MOV X1, X31
	0x0392279C MOV X24, X0
	0x039227A0 BL 0x3C1BB18
	0x039227A4 ADRP X23, 0xAB6000
	0x039227A8 LDRB W8, [X23 + 0xA23]
	0x039227AC MOV X19, X0
	0x039227B0 CBNZ W8, 0x39227C8
	0x039227B4 ADRP X0, 0x7D1000
	0x039227B8 LDR X0, [X0 + 0x5A8]
	0x039227BC BL 0x1C16CF4
	0x039227C0 MOVZ W8, 0x1
	0x039227C4 STRB W8, [X23 + 0xA23]
	0x039227C8 LDR X0, [X21]
	0x039227CC LDR W8, [X0 + 0xE0]
	0x039227D0 CBZ W8, 0x39227F8
	0x039227D4 MOVZ W8, 0x7F800000
	0x039227D8 FRINTM S0, S11
	0x039227DC FMOV S1, W8
	0x039227E0 FCVTMS W9, S11
	0x039227E4 FCMP S0, S1
	0x039227E8 MOVZ W8, 0x80000000
	0x039227EC MOV X20, X21
	0x039227F0 CSEL W22, W8, W9, EQ
	0x039227F4 B 0x392282C
	0x039227F8 BL 0x1C16DFC
	0x039227FC LDR X0, [X21]
	0x03922800 MOVZ W9, 0x7F800000
	0x03922804 FRINTM S0, S11
	0x03922808 FMOV S1, W9
	0x0392280C LDR W8, [X0 + 0xE0]
	0x03922810 FCVTMS W10, S11
	0x03922814 FCMP S0, S1
	0x03922818 MOVZ W9, 0x80000000
	0x0392281C MOV X20, X21
	0x03922820 CSEL W22, W9, W10, EQ
	0x03922824 CBNZ W8, 0x392282C
	0x03922828 BL 0x1C16DFC
	0x0392282C MOV W0, W31
	0x03922830 MOV W1, W22
	0x03922834 MOV X2, X31
	0x03922838 BL 0x337EDF0
	0x0392283C LDR X8, [X24]
	0x03922840 MOV W25, W0
	0x03922844 MOV X0, X24
	0x03922848 LDP X9, X1, [X8 + 0x1A8]
	0x0392284C BLR X9
	0x03922850 LDRB W8, [X23 + 0xA23]
	0x03922854 SCVTF S0, W0
	0x03922858 FSUB S10, S0, S10
	0x0392285C CBNZ W8, 0x3922874
	0x03922860 ADRP X0, 0x7D1000
	0x03922864 LDR X0, [X0 + 0x5A8]
	0x03922868 BL 0x1C16CF4
	0x0392286C MOVZ W8, 0x1
	0x03922870 STRB W8, [X23 + 0xA23]
	0x03922874 LDR X0, [X20]
	0x03922878 FSUB S10, S10, S8
	0x0392287C LDR W8, [X0 + 0xE0]
	0x03922880 CBNZ W8, 0x3922888
	0x03922884 BL 0x1C16DFC
	0x03922888 MOVZ W8, 0x7F800000
	0x0392288C FRINTM S0, S10
	0x03922890 FMOV S1, W8
	0x03922894 FCVTMS W9, S10
	0x03922898 FCMP S0, S1
	0x0392289C MOVZ W8, 0x80000000
	0x039228A0 CSEL W1, W8, W9, EQ
	0x039228A4 MOV W0, W31
	0x039228A8 MOV X2, X31
	0x039228AC BL 0x337EDF0
	0x039228B0 LDR X8, [X24]
	0x039228B4 MOV W29, W0
	0x039228B8 MOV X0, X24
	0x039228BC LDP X9, X1, [X8 + 0x188]
	0x039228C0 BLR X9
	0x039228C4 LDR X8, [X24]
	0x039228C8 MOV W22, W0
	0x039228CC MOV X0, X24
	0x039228D0 LDP X9, X1, [X8 + 0x1A8]
	0x039228D4 BLR X9
	0x039228D8 LDRB W8, [X23 + 0xA23]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -47751168
	005 Move W8, W0
	006 Add X9, X9, 2626
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Move X19, 0xAB7000
	012 Move W8, [X19+2928]
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x7D2000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2928], W8
	020 Move X8, 0x7D2000
	021 Move X8, [X8+1440]
	022 Move X8, [X8]
	023 Move X8, [X8+184]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move V2, [X8+68]
	026 Move X19, 0xAB7000
	027 Move W8, [X19+2591]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x7D2000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+2591], W8
	035 Move X8, 0x7D2000
	036 Move X8, [X8+1440]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move V0, [X8+72]
	040 Move V2, [X8+80]
	041 Move X19, 0xAB7000
	042 Move W8, [X19+1926]
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x7D2000
	046 Move X0, [X0+1440]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+1926], W8
	050 Move X8, 0x7D2000
	051 Move X8, [X8+1440]
	052 Move X8, [X8]
	053 Move X8, [X8+184]
	054 Move V0, [X8+24]
	055 Move V2, [X8+32]
	056 Move X19, 0xAB7000
	057 Move W8, [X19+2928]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x7D2000
	061 Move X0, [X0+1440]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X19+2928], W8
	065 Move X8, 0x7D2000
	066 Move X8, [X8+1440]
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move V1, [X8+68]
	071 Move X19, 0xAB7000
	072 Move W8, [X19+1926]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x7D2000
	076 Move X0, [X0+1440]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+1926], W8
	080 Move X8, 0x7D2000
	081 Move X8, [X8+1440]
	082 Move X8, [X8]
	083 Move X8, [X8+184]
	084 Move V0, [X8+24]
	085 Move V1, [X8+32]
	086 Move X19, 0xAB7000
	087 Move W8, [X19+2591]
	088 Compare W8, 0
	089 JumpIfNotEqual {95}
	090 Move X0, 0x7D2000
	091 Move X0, [X0+1440]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X19+2591], W8
	095 Move X8, 0x7D2000
	096 Move X8, [X8+1440]
	097 Move X8, [X8]
	098 Move X8, [X8+184]
	099 Move V0, [X8+72]
	100 Move V1, [X8+80]
	101 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	102 NotImplemented "Instruction FNEG not yet implemented."
	103 Move S1, V0.S[1]
	104 Move X30, [X31+16]
	105 Move X19, [X31+24]
	106 Return X0

Method: UnityEngine.ProBuilder.ProjectionAxis VectorToProjectionAxis(UnityEngine.Vector3 direction)

Disassembly:
	0x039214C0 FSUB S3, S1, S9
	0x039214C4 MOV V0.16B, V10.16B
	0x039214C8 MOV V1.16B, V11.16B
	0x039214CC MOV X0, X31
	0x039214D0 BL 0x3907E34
	0x039214D4 LDR X8, [X20]
	0x039214D8 LDR X1, [X24]
	0x039214DC MOV V12.16B, V0.16B
	0x039214E0 LDRH W9, [X8 + 0x12E]
	0x039214E4 CBZ X9, 0x3921508
	0x039214E8 LDR X10, [X8 + 0xB0]
	0x039214EC ADD X10, X10, 0x8
	0x039214F0 LDUR X11, [X10 - 0x8]
	0x039214F4 CMP X11, X1
	0x039214F8 B.EQ 0x3921518
	0x039214FC SUBS X9, X9, 0x1
	0x03921500 ADD X10, X10, 0x10
	0x03921504 B.NE 0x39214F0
	0x03921508 MOV X0, X20
	0x0392150C MOV W2, W31
	0x03921510 BL 0x1C5C788
	0x03921514 B 0x3921524
	0x03921518 LDRSW X9, [X10]
	0x0392151C ADD X8, X8, X9, 0x4, LSL
	0x03921520 ADD X0, X8, 0x138
	0x03921524 LDP X8, X2, [X0]
	0x03921528 MOV X0, X20
	0x0392152C MOV W1, W23
	0x03921530 BLR X8
	0x03921534 LDR X1, [X25]
	0x03921538 MOV V2.16B, V0.16B
	0x0392153C MOV V3.16B, V1.16B
	0x03921540 ADD X0, X31, 0x0
	0x03921544 MOV V0.16B, V12.16B
	0x03921548 MOV V1.16B, V2.16B
	0x0392154C MOV V2.16B, V3.16B
	0x03921550 STR W31, [X31 + 0x8]
	0x03921554 STR X31, [X31]
	0x03921558 BL 0x25E6F34
	0x0392155C CBZ X21, 0x3921738
	0x03921560 LDR W9, [X21 + 0x1C]
	0x03921564 LDP S0, S1, [X31]
	0x03921568 LDR V2, [X31 + 0x8]
	0x0392156C LDR X8, [X21 + 0x10]
	0x03921570 LDR X10, [X26]
	0x03921574 ADD W9, W9, 0x1
	0x03921578 STR W9, [X21 + 0x1C]
	0x0392157C CBZ X8, 0x3921738
	0x03921580 LDRSW X9, [X21 + 0x18]
	0x03921584 LDR W11, [X8 + 0x18]
	0x03921588 CMP W9, W11
	0x0392158C B.CS 0x39215A8
	0x03921590 ADD W10, W9, 0x1
	0x03921594 MADD X8, X9, X27, X8
	0x03921598 STR W10, [X21 + 0x18]
	0x0392159C STP S0, S1, [X8 + 0x20]
	0x039215A0 STR S2, [X8 + 0x28]
	0x039215A4 B 0x39215BC
	0x039215A8 LDR X8, [X10 + 0x20]
	0x039215AC MOV X0, X21
	0x039215B0 LDR X8, [X8 + 0xC0]
	0x039215B4 LDR X1, [X8 + 0x70]
	0x039215B8 BL 0x2F36280
	0x039215BC ADD W23, W23, 0x1
	0x039215C0 CMP W23, W22
	0x039215C4 B.NE 0x3921460
	0x039215C8 ADRP X23, 0x82D000
	0x039215CC LDR X23, [X23 + 0x798]
	0x039215D0 LDR X0, [X23]
	0x039215D4 LDR W8, [X0 + 0xE0]
	0x039215D8 CBNZ W8, 0x39215E4
	0x039215DC BL 0x1C16DFC

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0xAC1000
	012 Move X20, 0x7D3000
	013 Move W8, [X19+2217]
	014 Move X20, [X20+1448]
	015 Move V8, V2
	016 Move V9, V1
	017 Move V10, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x7D3000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2217], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, -48459776
	033 Move V13, [X8+3880]
	034 NotImplemented "Instruction FABS not yet implemented."
	035 NotImplemented "Instruction FABS not yet implemented."
	036 Move V0, V14
	037 Move V1, V11
	038 Move V2, V13
	039 Move X0, X31
	040 NotImplemented "Instruction FABS not yet implemented."
	041 Call Math.Approx, V0, V1, V2
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {60}
	047 Move V0, V14
	048 Move V1, V12
	049 Move V2, V13
	050 Move X0, X31
	051 Call Math.Approx, V0, V1, V2
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move W8, 3
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move V0, V11
	061 Move V1, V12
	062 Move V2, V13
	063 Move X0, X31
	064 Call Math.Approx, V0, V1, V2
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move W9, 4
	067 NotImplemented "Instruction CSET not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Xor W8, W0, 1
	070 Move W10, 5
	071 Move W11, 2
	072 NotImplemented "Instruction CSINC not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 And W31, W12, W8
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X30, [X31+56]
	080 Move D9, [X31+40]
	081 Move D8, [X31+48]
	082 Move D11, [X31+24]
	083 Move D10, [X31+32]
	084 Move D13, [X31+8]
	085 Move D12, [X31+16]
	086 Move V14, [X31+80]
	087 Return X0

Method: UnityEngine.Plane FindBestPlane(System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Collections.Generic.IList`1<System.Int32> indexes = null)

Disassembly:
	0x039201FC B.EQ 0x392021C
	0x03920200 SUBS X9, X9, 0x1
	0x03920204 ADD X10, X10, 0x10
	0x03920208 B.NE 0x39201F4
	0x0392020C MOV X0, X20
	0x03920210 MOV W2, W31
	0x03920214 BL 0x1C5C788
	0x03920218 B 0x3920228
	0x0392021C LDRSW X9, [X10]
	0x03920220 ADD X8, X8, X9, 0x4, LSL
	0x03920224 ADD X0, X8, 0x138
	0x03920228 LDP X8, X2, [X0]
	0x0392022C MOV X0, X20
	0x03920230 MOV W1, W24
	0x03920234 BLR X8
	0x03920238 LDR W10, [X19 + 0x1C]
	0x0392023C LDR X8, [X19 + 0x10]
	0x03920240 LDR X9, [X27]
	0x03920244 ADD W10, W10, 0x1
	0x03920248 STR W10, [X19 + 0x1C]
	0x0392024C CBZ X8, 0x3920454
	0x03920250 LDR V3, [X31 + 0xC]
	0x03920254 LDRSW X10, [X19 + 0x18]
	0x03920258 LDR W11, [X8 + 0x18]
	0x0392025C FMUL S4, S12, S9
	0x03920260 FMUL S3, S3, S8
	0x03920264 FMUL S6, S14, S0
	0x03920268 FMUL S1, S15, S1
	0x0392026C FMUL S5, S13, S10
	0x03920270 FADD S0, S3, S4
	0x03920274 FADD S1, S6, S1
	0x03920278 FMUL S2, S11, S2
	0x0392027C FADD S0, S5, S0
	0x03920280 CMP W10, W11
	0x03920284 FADD S1, S2, S1
	0x03920288 B.CS 0x39202A0
	0x0392028C ADD W9, W10, 0x1
	0x03920290 ADD X8, X8, X10, 0x3, LSL
	0x03920294 STR W9, [X19 + 0x18]
	0x03920298 STP S0, S1, [X8 + 0x20]
	0x0392029C B 0x39202B4
	0x039202A0 LDR X8, [X9 + 0x20]
	0x039202A4 MOV X0, X19
	0x039202A8 LDR X8, [X8 + 0xC0]
	0x039202AC LDR X1, [X8 + 0x70]
	0x039202B0 BL 0x30C9664
	0x039202B4 ADD W23, W23, 0x1
	0x039202B8 CMP W23, W22
	0x039202BC B.NE 0x39200B4
	0x039202C0 B 0x3920428
	0x039202C4 B.LT 0x3920428
	0x039202C8 ADRP X23, 0x82D000
	0x039202CC ADRP X24, 0x82E000
	0x039202D0 LDR X23, [X23 + 0xF80]
	0x039202D4 LDR X24, [X24 + 0x720]
	0x039202D8 MOV W21, W31
	0x039202DC LDR X8, [X20]
	0x039202E0 LDR X1, [X23]
	0x039202E4 LDRH W9, [X8 + 0x12E]
	0x039202E8 CBZ X9, 0x392030C
	0x039202EC LDR X10, [X8 + 0xB0]
	0x039202F0 ADD X10, X10, 0x8
	0x039202F4 LDUR X11, [X10 - 0x8]
	0x039202F8 CMP X11, X1
	0x039202FC B.EQ 0x392031C
	0x03920300 SUBS X9, X9, 0x1
	0x03920304 ADD X10, X10, 0x10
	0x03920308 B.NE 0x39202F4
	0x0392030C MOV X0, X20
	0x03920310 MOV W2, W31
	0x03920314 BL 0x1C5C788
	0x03920318 B 0x3920328
	0x0392031C LDRSW X9, [X10]
	0x03920320 ADD X8, X8, X9, 0x4, LSL
	0x03920324 ADD X0, X8, 0x138
	0x03920328 LDP X8, X2, [X0]
	0x0392032C MOV X0, X20
	0x03920330 MOV W1, W21
	0x03920334 BLR X8
	0x03920338 LDR X8, [X20]
	0x0392033C LDR X1, [X23]
	0x03920340 MOV V8.16B, V0.16B
	0x03920344 MOV V9.16B, V1.16B
	0x03920348 LDRH W9, [X8 + 0x12E]
	0x0392034C MOV V10.16B, V2.16B
	0x03920350 CBZ X9, 0x3920374
	0x03920354 LDR X10, [X8 + 0xB0]
	0x03920358 ADD X10, X10, 0x8
	0x0392035C LDUR X11, [X10 - 0x8]
	0x03920360 CMP X11, X1
	0x03920364 B.EQ 0x3920384
	0x03920368 SUBS X9, X9, 0x1
	0x0392036C ADD X10, X10, 0x10
	0x03920370 B.NE 0x392035C
	0x03920374 MOV X0, X20
	0x03920378 MOV W2, W31
	0x0392037C BL 0x1C5C788
	0x03920380 B 0x3920390
	0x03920384 LDRSW X9, [X10]
	0x03920388 ADD X8, X8, X9, 0x4, LSL
	0x0392038C ADD X0, X8, 0x138
	0x03920390 LDP X8, X2, [X0]
	0x03920394 MOV X0, X20
	0x03920398 MOV W1, W21
	0x0392039C BLR X8
	0x039203A0 LDR W10, [X19 + 0x1C]
	0x039203A4 LDR X8, [X19 + 0x10]
	0x039203A8 LDR X9, [X24]
	0x039203AC ADD W10, W10, 0x1
	0x039203B0 STR W10, [X19 + 0x1C]
	0x039203B4 CBZ X8, 0x3920454
	0x039203B8 LDR V3, [X31 + 0xC]
	0x039203BC LDRSW X10, [X19 + 0x18]
	0x039203C0 LDR W11, [X8 + 0x18]
	0x039203C4 FMUL S4, S12, S9
	0x039203C8 FMUL S3, S3, S8
	0x039203CC FMUL S6, S14, S0
	0x039203D0 FMUL S1, S15, S1
	0x039203D4 FMUL S5, S13, S10
	0x039203D8 FADD S0, S3, S4
	0x039203DC FADD S1, S6, S1
	0x039203E0 FMUL S2, S11, S2
	0x039203E4 FADD S0, S5, S0
	0x039203E8 CMP W10, W11
	0x039203EC FADD S1, S2, S1
	0x039203F0 B.CS 0x3920408
	0x039203F4 ADD W9, W10, 0x1
	0x039203F8 ADD X8, X8, X10, 0x3, LSL
	0x039203FC STR W9, [X19 + 0x18]
	0x03920400 STP S0, S1, [X8 + 0x20]
	0x03920404 B 0x392041C
	0x03920408 LDR X8, [X9 + 0x20]
	0x0392040C MOV X0, X19
	0x03920410 LDR X8, [X8 + 0xC0]
	0x03920414 LDR X1, [X8 + 0x70]
	0x03920418 BL 0x30C9664
	0x0392041C ADD W21, W21, 0x1
	0x03920420 CMP W21, W22
	0x03920424 B.NE 0x39202DC
	0x03920428 LDP X20, X19, [X31 + 0x90]
	0x0392042C LDP X22, X21, [X31 + 0x80]
	0x03920430 LDP X24, X23, [X31 + 0x70]
	0x03920434 LDP X26, X25, [X31 + 0x60]
	0x03920438 LDP X30, X27, [X31 + 0x50]
	0x0392043C LDP D9, D8, [X31 + 0x40]
	0x03920440 LDP D11, D10, [X31 + 0x30]
	0x03920444 LDP D13, D12, [X31 + 0x20]
	0x03920448 LDP D15, D14, [X31 + 0x10]
	0x0392044C ADD X31, X31, 0xA0
	0x03920450 RET
	0x03920454 BL 0x1C16F20
	0x03920458 ADRP X0, 0x7D8000
	0x0392045C LDR X0, [X0 + 0x528]
	0x03920460 BL 0x1C16D08
	0x03920464 BL 0x1C16F10
	0x03920468 MOV X19, X0
	0x0392046C ADRP X0, 0x82E000
	0x03920470 LDR X0, [X0 + 0x730]
	0x03920474 B 0x3920494
	0x03920478 ADRP X0, 0x7D8000
	0x0392047C LDR X0, [X0 + 0x528]
	0x03920480 BL 0x1C16D08
	0x03920484 BL 0x1C16F10
	0x03920488 MOV X19, X0
	0x0392048C ADRP X0, 0x7FB000
	0x03920490 LDR X0, [X0 + 0xA58]
	0x03920494 BL 0x1C16D08
	0x03920498 MOV X1, X0
	0x0392049C MOV X0, X19
	0x039204A0 MOV X2, X31
	0x039204A4 BL 0x330E100
	0x039204A8 ADRP X0, 0x82E000
	0x039204AC LDR X0, [X0 + 0x738]
	0x039204B0 BL 0x1C16D08
	0x039204B4 MOV X1, X0
	0x039204B8 MOV X0, X19
	0x039204BC BL 0x1C16DEC
	0x039204C0 STR D14, [X31 - 0x50]!
	0x039204C4 STP D13, D12, [X31 + 0x8]
	0x039204C8 STP D11, D10, [X31 + 0x18]
	0x039204CC STP D9, D8, [X31 + 0x28]
	0x039204D0 STR X30, [X31 + 0x38]
	0x039204D4 STP X20, X19, [X31 + 0x40]
	0x039204D8 ADRP X19, 0xAC1000
	0x039204DC ADRP X20, 0x7D3000
	0x039204E0 LDRB W8, [X19 + 0x8A9]
	0x039204E4 LDR X20, [X20 + 0x5A8]
	0x039204E8 MOV V8.16B, V2.16B
	0x039204EC MOV V9.16B, V1.16B
	0x039204F0 MOV V10.16B, V0.16B
	0x039204F4 TBNZ X8, 0x0, 0x392050C
	0x039204F8 ADRP X0, 0x7D3000
	0x039204FC LDR X0, [X0 + 0x5A8]
	0x03920500 BL 0x1C16CF4
	0x03920504 MOVZ W8, 0x1
	0x03920508 STRB W8, [X19 + 0x8A9]
	0x0392050C LDR X0, [X20]
	0x03920510 LDR W8, [X0 + 0xE0]
	0x03920514 CBNZ W8, 0x392051C
	0x03920518 BL 0x1C16DFC
	0x0392051C ADRP X8, 0xFFFFFFFFFD1C9000
	0x03920520 LDR V13, [X8 + 0xF28]
	0x03920524 FABS S14, S10
	0x03920528 FABS S11, S9
	0x0392052C MOV V0.16B, V14.16B
	0x03920530 MOV V1.16B, V11.16B
	0x03920534 MOV V2.16B, V13.16B
	0x03920538 MOV X0, X31
	0x0392053C FABS S12, S8
	0x03920540 BL 0x390B3B4
	0x03920544 FCMP S14, S11
	0x03920548 B.LE 0x3920580
	0x0392054C TBNZ X0, 0x0, 0x3920580
	0x03920550 MOV V0.16B, V14.16B
	0x03920554 MOV V1.16B, V12.16B
	0x03920558 MOV V2.16B, V13.16B
	0x0392055C MOV X0, X31
	0x03920560 BL 0x390B3B4
	0x03920564 FCMP S14, S12
	0x03920568 B.LE 0x3920580
	0x0392056C TBNZ X0, 0x0, 0x3920580
	0x03920570 FCMP S10, 0x0
	0x03920574 MOVZ W8, 0x3
	0x03920578 CSEL W0, W31, W8, GT
	0x0392057C B 0x39205C4
	0x03920580 MOV V0.16B, V11.16B
	0x03920584 MOV V1.16B, V12.16B
	0x03920588 MOV V2.16B, V13.16B
	0x0392058C MOV X0, X31
	0x03920590 BL 0x390B3B4
	0x03920594 FCMP S11, S12
	0x03920598 MOVZ W9, 0x4
	0x0392059C CSET W12, GT
	0x039205A0 FCMP S9, 0x0
	0x039205A4 EOR W8, W0, 0x1
	0x039205A8 MOVZ W10, 0x5
	0x039205AC MOVZ W11, 0x2
	0x039205B0 CSINC W9, W9, W31, LE
	0x039205B4 FCMP S8, 0x0
	0x039205B8 CSEL W10, W11, W10, GT
	0x039205BC ANDS W31, W12, W8, 0x0
	0x039205C0 CSEL W0, W9, W10, NE
	0x039205C4 LDP X20, X19, [X31 + 0x40]
	0x039205C8 LDR X30, [X31 + 0x38]
	0x039205CC LDP D9, D8, [X31 + 0x28]
	0x039205D0 LDP D11, D10, [X31 + 0x18]
	0x039205D4 LDP D13, D12, [X31 + 0x8]
	0x039205D8 LDR V14, [X31], #0x50
	0x039205DC RET
	0x039205E0 STP X30, X19, [X31 - 0x10]!
	0x039205E4 CMP W0, 0x5
	0x039205E8 B.HI 0x392064C
	0x039205EC MOVZ W8, 0x1
	0x039205F0 LSLV W8, W8, W0
	0x039205F4 MOVZ W9, 0x9
	0x039205F8 ANDS W31, W8, W9, 0x0
	0x039205FC B.NE 0x392064C
	0x03920600 MOVZ W9, 0x12
	0x03920604 ANDS W31, W8, W9, 0x0
	0x03920608 B.EQ 0x392064C
	0x0392060C ADRP X19, 0xAB8000
	0x03920610 LDRB W8, [X19 + 0xA1F]
	0x03920614 CBNZ W8, 0x392062C
	0x03920618 ADRP X0, 0x7D3000
	0x0392061C LDR X0, [X0 + 0x5A0]
	0x03920620 BL 0x1C16CF4
	0x03920624 MOVZ W8, 0x1
	0x03920628 STRB W8, [X19 + 0xA1F]
	0x0392062C ADRP X8, 0x7D3000
	0x03920630 LDR X8, [X8 + 0x5A0]
	0x03920634 LDR X8, [X8]
	0x03920638 LDR X10, [X8 + 0xB8]
	0x0392063C ADD X8, X10, 0x48
	0x03920640 ADD X9, X10, 0x4C
	0x03920644 ADD X10, X10, 0x50
	0x03920648 B 0x3920688
	0x0392064C ADRP X19, 0xAB8000
	0x03920650 LDRB W8, [X19 + 0x786]
	0x03920654 CBNZ W8, 0x392066C
	0x03920658 ADRP X0, 0x7D3000
	0x0392065C LDR X0, [X0 + 0x5A0]
	0x03920660 BL 0x1C16CF4
	0x03920664 MOVZ W8, 0x1
	0x03920668 STRB W8, [X19 + 0x786]
	0x0392066C ADRP X8, 0x7D3000
	0x03920670 LDR X8, [X8 + 0x5A0]
	0x03920674 LDR X8, [X8]
	0x03920678 LDR X10, [X8 + 0xB8]
	0x0392067C ADD X8, X10, 0x18
	0x03920680 ADD X9, X10, 0x1C
	0x03920684 ADD X10, X10, 0x20
	0x03920688 LDR V2, [X10]
	0x0392068C LDR V1, [X9]
	0x03920690 LDR V0, [X8]
	0x03920694 LDP X30, X19, [X31], #0x10
	0x03920698 RET
	0x0392069C SUB X31, X31, 0xB0
	0x039206A0 STP D15, D14, [X31 + 0x10]
	0x039206A4 STP D13, D12, [X31 + 0x20]
	0x039206A8 STP D11, D10, [X31 + 0x30]
	0x039206AC STP D9, D8, [X31 + 0x40]
	0x039206B0 STP X29, X30, [X31 + 0x50]
	0x039206B4 STP X28, X27, [X31 + 0x60]
	0x039206B8 STP X26, X25, [X31 + 0x70]
	0x039206BC STP X24, X23, [X31 + 0x80]
	0x039206C0 STP X22, X21, [X31 + 0x90]
	0x039206C4 STP X20, X19, [X31 + 0xA0]
	0x039206C8 CBZ X0, 0x3920AD4
	0x039206CC ADRP X24, 0xAB8000
	0x039206D0 LDRB W22, [X2]
	0x039206D4 LDRB W8, [X24 + 0x783]
	0x039206D8 LDR X23, [X0 + 0x28]
	0x039206DC MOV W26, W1
	0x039206E0 MOV X21, X0
	0x039206E4 CBNZ W8, 0x39206FC
	0x039206E8 ADRP X0, 0x7D3000
	0x039206EC LDR X0, [X0 + 0x5A0]
	0x039206F0 BL 0x1C16CF4
	0x039206F4 MOVZ W8, 0x1
	0x039206F8 STRB W8, [X24 + 0x783]
	0x039206FC CBZ X23, 0x3920AD4
	0x03920700 ADRP X25, 0x7D3000
	0x03920704 LDR X25, [X25 + 0x5A0]
	0x03920708 LDR X8, [X25]
	0x0392070C LDR X9, [X8 + 0xB8]
	0x03920710 LDR X8, [X23 + 0x18]
	0x03920714 LDP S9, S8, [X9 + 0x4]
	0x03920718 LDR V10, [X9]
	0x0392071C SUBS W19, W8, 0x1
	0x03920720 B.LT 0x3920778
	0x03920724 CBZ W8, 0x3920AA0
	0x03920728 MOV W20, W31
	0x0392072C ADD X8, X23, W20, 0x3, SXTW
	0x03920730 LDR X1, [X8 + 0x20]
	0x03920734 CBZ X1, 0x3920AD4
	0x03920738 LDR W8, [X1 + 0x54]
	0x0392073C CMP W8, W26
	0x03920740 B.NE 0x392075C
	0x03920744 MOV X0, X21
	0x03920748 MOV X2, X31
	0x0392074C BL 0x390987C
	0x03920750 FADD S10, S10, S0
	0x03920754 FADD S9, S9, S1
	0x03920758 FADD S8, S8, S2
	0x0392075C CMP W19, W20
	0x03920760 B.EQ 0x3920778
	0x03920764 LDR W8, [X23 + 0x18]
	0x03920768 ADD W20, W20, 0x1
	0x0392076C CMP W20, W8
	0x03920770 B.CC 0x392072C
	0x03920774 B 0x3920AA0
	0x03920778 CBZ W22, 0x39207B4
	0x0392077C MOV X0, X21
	0x03920780 MOV X1, X31
	0x03920784 BL 0x3C32E90
	0x03920788 CBZ X0, 0x3920AD4
	0x0392078C MOV V0.16B, V10.16B
	0x03920790 MOV V1.16B, V9.16B
	0x03920794 MOV V2.16B, V8.16B
	0x03920798 MOV X1, X31
	0x0392079C MOV X20, X0
	0x039207A0 BL 0x3C40610
	0x039207A4 MOV V10.16B, V0.16B
	0x039207A8 MOV V9.16B, V1.16B
	0x039207AC MOV V8.16B, V2.16B
	0x039207B0 B 0x39207B8
	0x039207B4 MOV X20, X31
	0x039207B8 MOV V0.16B, V10.16B
	0x039207BC MOV V1.16B, V9.16B
	0x039207C0 MOV V2.16B, V8.16B
	0x039207C4 STR W26, [X31 + 0x4]
	0x039207C8 BL 0x39204C0
	0x039207CC BL 0x39205E0
	0x039207D0 ADRP X19, 0xAB8000
	0x039207D4 LDRB W8, [X19 + 0x785]
	0x039207D8 FMUL S3, S9, S2
	0x039207DC FMUL S15, S8, S1
	0x039207E0 FMUL S13, S8, S0
	0x039207E4 FMUL S14, S10, S2
	0x039207E8 FMUL S11, S10, S1
	0x039207EC FMUL S12, S9, S0
	0x039207F0 CBNZ W8, 0x3920810
	0x039207F4 ADRP X0, 0x7D3000
	0x039207F8 LDR X0, [X0 + 0x5A8]
	0x039207FC STR S3, [X31 + 0x8]
	0x03920800 BL 0x1C16CF4
	0x03920804 LDR V3, [X31 + 0x8]
	0x03920808 MOVZ W8, 0x1
	0x0392080C STRB W8, [X19 + 0x785]
	0x03920810 ADRP X26, 0x7D3000
	0x03920814 LDR X26, [X26 + 0x5A8]
	0x03920818 FSUB S15, S3, S15
	0x0392081C FSUB S3, S13, S14
	0x03920820 FSUB S14, S11, S12
	0x03920824 LDR X0, [X26]
	0x03920828 LDR W8, [X0 + 0xE0]
	0x0392082C CBNZ W8, 0x392083C
	0x03920830 MOV V11.16B, V3.16B
	0x03920834 BL 0x1C16DFC
	0x03920838 MOV V3.16B, V11.16B
	0x0392083C ADRP X8, 0xFFFFFFFFFD1CA000
	0x03920840 FMUL S0, S15, S15
	0x03920844 FMUL S1, S3, S3
	0x03920848 LDR V2, [X8 + 0x17C]
	0x0392084C FADD S0, S0, S1
	0x03920850 FMUL S1, S14, S14
	0x03920854 FADD S0, S1, S0
	0x03920858 FSQRT S0, S0
	0x0392085C FCMP S0, S2
	0x03920860 B.LE 0x3920874
	0x03920864 FDIV S11, S15, S0
	0x03920868 FDIV S12, S3, S0
	0x0392086C FDIV S13, S14, S0
	0x03920870 B 0x39208B0
	0x03920874 LDRB W8, [X24 + 0x783]
	0x03920878 CBNZ W8, 0x39208A0
	0x0392087C ADRP X0, 0x7D3000
	0x03920880 LDR X0, [X0 + 0x5A0]
	0x03920884 MOV V11.16B, V2.16B
	0x03920888 MOV V12.16B, V3.16B
	0x0392088C BL 0x1C16CF4
	0x03920890 MOV V3.16B, V12.16B
	0x03920894 MOV V2.16B, V11.16B
	0x03920898 MOVZ W8, 0x1
	0x0392089C STRB W8, [X24 + 0x783]
	0x039208A0 LDR X8, [X25]
	0x039208A4 LDR X8, [X8 + 0xB8]
	0x039208A8 LDP S11, S12, [X8]
	0x039208AC LDR V13, [X8 + 0x8]
	0x039208B0 LDRB W8, [X19 + 0x785]
	0x039208B4 FMUL S0, S8, S3
	0x039208B8 FMUL S1, S9, S14
	0x039208BC FMUL S4, S10, S14
	0x039208C0 FMUL S14, S8, S15
	0x039208C4 FMUL S15, S9, S15
	0x039208C8 FMUL S10, S10, S3
	0x039208CC CBNZ W8, 0x3920904
	0x039208D0 ADRP X0, 0x7D3000
	0x039208D4 LDR X0, [X0 + 0x5A8]
	0x039208D8 STR S2, [X31]
	0x039208DC MOV V9.16B, V0.16B
	0x039208E0 STR S1, [X31 + 0x8]
	0x039208E4 MOV V8.16B, V4.16B
	0x039208E8 BL 0x1C16CF4
	0x039208EC LDR V1, [X31 + 0x8]
	0x039208F0 LDR V2, [X31]
	0x039208F4 MOV V4.16B, V8.16B
	0x039208F8 MOV V0.16B, V9.16B
	0x039208FC MOVZ W8, 0x1
	0x03920900 STRB W8, [X19 + 0x785]
	0x03920904 LDR X0, [X26]
	0x03920908 FSUB S8, S0, S1
	0x0392090C FSUB S9, S4, S14
	0x03920910 FSUB S10, S15, S10
	0x03920914 LDR W8, [X0 + 0xE0]
	0x03920918 CBNZ W8, 0x3920928
	0x0392091C MOV V14.16B, V2.16B
	0x03920920 BL 0x1C16DFC
	0x03920924 MOV V2.16B, V14.16B
	0x03920928 FMUL S0, S8, S8
	0x0392092C FMUL S1, S9, S9
	0x03920930 FADD S0, S0, S1
	0x03920934 FMUL S1, S10, S10
	0x03920938 FADD S0, S1, S0
	0x0392093C FSQRT S0, S0
	0x03920940 FCMP S0, S2
	0x03920944 B.LE 0x3920958
	0x03920948 FDIV S8, S8, S0
	0x0392094C FDIV S9, S9, S0
	0x03920950 FDIV S10, S10, S0
	0x03920954 B 0x3920984
	0x03920958 LDRB W8, [X24 + 0x783]
	0x0392095C CBNZ W8, 0x3920974
	0x03920960 ADRP X0, 0x7D3000
	0x03920964 LDR X0, [X0 + 0x5A0]
	0x03920968 BL 0x1C16CF4
	0x0392096C MOVZ W8, 0x1
	0x03920970 STRB W8, [X24 + 0x783]
	0x03920974 LDR X8, [X25]
	0x03920978 LDR X8, [X8 + 0xB8]
	0x0392097C LDP S8, S9, [X8]
	0x03920980 LDR V10, [X8 + 0x8]
	0x03920984 LDR X8, [X23 + 0x18]
	0x03920988 CMP W8, 0x1
	0x0392098C STR X8, [X31 + 0x8]
	0x03920990 B.LT 0x3920AA4
	0x03920994 LDR X8, [X31 + 0x8]
	0x03920998 CBZ W8, 0x3920AA0
	0x0392099C LDP X26, X27, [X21 + 0x58]
	0x039209A0 MOV W25, W31
	0x039209A4 MOVZ W28, 0xC
	0x039209A8 ADD X8, X23, W25, 0x3, SXTW
	0x039209AC LDR X0, [X8 + 0x20]
	0x039209B0 CBZ X0, 0x3920AD4
	0x039209B4 LDR W8, [X0 + 0x54]
	0x039209B8 LDR W9, [X31 + 0x4]
	0x039209BC CMP W8, W9
	0x039209C0 B.NE 0x3920A84
	0x039209C4 MOV X1, X31
	0x039209C8 BL 0x38FF530
	0x039209CC CBZ X0, 0x3920AD4
	0x039209D0 LDR X29, [X0 + 0x18]
	0x039209D4 MOV X21, X0
	0x039209D8 CMP W29, 0x1
	0x039209DC B.LT 0x3920A84
	0x039209E0 MOV W19, W31
	0x039209E4 MOV X8, X29
	0x039209E8 CMP W19, W8
	0x039209EC B.CS 0x3920AA0
	0x039209F0 ADD X24, X21, W19, 0x2, SXTW
	0x039209F4 LDRSW X9, [X24 + 0x20]!
	0x039209F8 CBZ X26, 0x3920AD4
	0x039209FC LDR W10, [X26 + 0x18]
	0x03920A00 CMP W9, W10
	0x03920A04 B.CS 0x3920AA0
	0x03920A08 MADD X9, X9, X28, X26
	0x03920A0C LDP S0, S1, [X9 + 0x20]
	0x03920A10 LDR V2, [X9 + 0x28]
	0x03920A14 CBZ W22, 0x3920A2C
	0x03920A18 CBZ X20, 0x3920AD4
	0x03920A1C MOV X0, X20
	0x03920A20 MOV X1, X31
	0x03920A24 BL 0x3C3DE4C
	0x03920A28 LDR X8, [X21 + 0x18]
	0x03920A2C CMP W19, W8
	0x03920A30 B.CS 0x3920AA0
	0x03920A34 CBZ X27, 0x3920AD4
	0x03920A38 LDRSW X9, [X24]
	0x03920A3C LDR W10, [X27 + 0x18]
	0x03920A40 CMP W9, W10
	0x03920A44 B.CS 0x3920AA0
	0x03920A48 FMUL S4, S11, S0
	0x03920A4C FMUL S5, S12, S1
	0x03920A50 FMUL S0, S8, S0
	0x03920A54 FMUL S1, S9, S1
	0x03920A58 FMUL S3, S13, S2
	0x03920A5C FMUL S2, S10, S2
	0x03920A60 ADD W19, W19, 0x1
	0x03920A64 FADD S4, S4, S5
	0x03920A68 FADD S0, S0, S1
	0x03920A6C ADD X9, X27, X9, 0x3, LSL
	0x03920A70 CMP W29, W19
	0x03920A74 FADD S1, S3, S4
	0x03920A78 FADD S0, S2, S0
	0x03920A7C STP S1, S0, [X9 + 0x20]
	0x03920A80 B.NE 0x39209E8
	0x03920A84 LDR X8, [X31 + 0x8]
	0x03920A88 ADD W25, W25, 0x1
	0x03920A8C CMP W25, W8
	0x03920A90 B.EQ 0x3920AA4
	0x03920A94 LDR W8, [X23 + 0x18]
	0x03920A98 CMP W25, W8
	0x03920A9C B.CC 0x39209A8
	0x03920AA0 BL 0x1C16F28
	0x03920AA4 LDP X20, X19, [X31 + 0xA0]
	0x03920AA8 LDP X22, X21, [X31 + 0x90]
	0x03920AAC LDP X24, X23, [X31 + 0x80]
	0x03920AB0 LDP X26, X25, [X31 + 0x70]
	0x03920AB4 LDP X28, X27, [X31 + 0x60]
	0x03920AB8 LDP X29, X30, [X31 + 0x50]
	0x03920ABC LDP D9, D8, [X31 + 0x40]
	0x03920AC0 LDP D11, D10, [X31 + 0x30]
	0x03920AC4 LDP D13, D12, [X31 + 0x20]
	0x03920AC8 LDP D15, D14, [X31 + 0x10]
	0x03920ACC ADD X31, X31, 0xB0
	0x03920AD0 RET
	0x03920AD4 BL 0x1C16F20
	0x03920AD8 SUB X31, X31, 0xA0
	0x03920ADC STP D15, D14, [X31 + 0x10]
	0x03920AE0 STP D13, D12, [X31 + 0x20]
	0x03920AE4 STP D11, D10, [X31 + 0x30]
	0x03920AE8 STP D9, D8, [X31 + 0x40]
	0x03920AEC STP X30, X27, [X31 + 0x50]
	0x03920AF0 STP X26, X25, [X31 + 0x60]
	0x03920AF4 STP X24, X23, [X31 + 0x70]
	0x03920AF8 STP X22, X21, [X31 + 0x80]
	0x03920AFC STP X20, X19, [X31 + 0x90]
	0x03920B00 MOV X2, X31
	0x03920B04 MOV V10.16B, V2.16B
	0x03920B08 MOV V12.16B, V1.16B
	0x03920B0C MOV V11.16B, V0.16B
	0x03920B10 MOV X20, X1
	0x03920B14 MOV X21, X0
	0x03920B18 BL 0x390987C
	0x03920B1C MOV X0, X31
	0x03920B20 BL 0x390B668
	0x03920B24 CBZ X20, 0x3920EA4
	0x03920B28 LDRB W22, [X20 + 0x1C]
	0x03920B2C MOV V15.16B, V0.16B
	0x03920B30 MOV V8.16B, V1.16B
	0x03920B34 MOV V9.16B, V2.16B
	0x03920B38 CBZ W22, 0x3920B78
	0x03920B3C CBZ X21, 0x3920EA4
	0x03920B40 MOV X0, X21
	0x03920B44 MOV X1, X31
	0x03920B48 BL 0x3C32E90
	0x03920B4C CBZ X0, 0x3920EA4
	0x03920B50 MOV V0.16B, V15.16B
	0x03920B54 MOV V1.16B, V8.16B
	0x03920B58 MOV V2.16B, V9.16B
	0x03920B5C MOV X1, X31
	0x03920B60 MOV X19, X0
	0x03920B64 BL 0x3C40610
	0x03920B68 MOV V15.16B, V0.16B
	0x03920B6C MOV V8.16B, V1.16B
	0x03920B70 MOV V9.16B, V2.16B
	0x03920B74 B 0x3920B7C

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X29
	011 Move [X31+120], X30
	012 Move [X31+128], X28
	013 Move [X31+136], X27
	014 Move [X31+144], X26
	015 Move [X31+152], X25
	016 Move [X31+160], X24
	017 Move [X31+168], X23
	018 Move [X31+176], X22
	019 Move [X31+184], X21
	020 Move [X31+192], X20
	021 Move [X31+200], X19
	022 Move X21, 0xAC2000
	023 Move W8, [X21+2218]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x7FC000
	031 Move X0, [X0+1952]
	032 Call 0x1C17CF4
	033 Move X0, 0x82E000
	034 Move X0, [X0+3960]
	035 Call 0x1C17CF4
	036 Move X0, 0x82E000
	037 Move X0, [X0+3968]
	038 Call 0x1C17CF4
	039 Move X0, 0x7FC000
	040 Move X0, [X0+1960]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+2218], W8
	044 Move [X31+40], X31
	045 Compare X20, 0
	046 JumpIfEqual {624}
	047 Compare X19, 0
	048 JumpIfEqual {87}
	049 Move X21, 0x7FC000
	050 Move X8, [X19]
	051 Move X21, [X21+1952]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X21]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19]
	074 Move X1, [X21]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 Move X10, 0x82E000
	088 Move X8, [X20]
	089 Move X10, [X10+3960]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move W28, W0
	111 Move W27, 1
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move W28, W0
	120 Move W27, W31
	121 Move X25, 0xAB9000
	122 Move W8, [X25+1923]
	123 Compare W8, 0
	124 JumpIfNotEqual {130}
	125 Move X0, 0x7D4000
	126 Move X0, [X0+1440]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X25+1923], W8
	130 Move X26, 0x7D4000
	131 Move X26, [X26+1440]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X26]
	134 Move X8, [X8+184]
	135 Move S11, [X8]
	136 Move S0, [X8+4]
	137 Move V1, [X8+8]
	138 Move [X31+40], S0
	139 Move [X31+48], S11
	140 Move [X31+36], S1
	141 Move [X31+12], W28
	142 Move W22, W31
	143 Move X29, X31
	144 Move X28, X31
	145 Move X21, X31
	146 Move X26, X31
	147 Move S8, W31
	148 Move S9, W31
	149 Move S10, W31
	150 Move [X31+16], X31
	151 Move [X31+24], X31
	152 Move X8, [X31+16]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X25, X31, 44
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 NotImplemented "Instruction CSEL not yet implemented."
	157 Move X8, [X31+24]
	158 Move X24, X20
	159 Move W23, W22
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 Move [X31+16], X9
	162 Move [X31+24], X8
	163 Move TEMP, X27
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {197}
	167 Compare X19, 0
	168 JumpIfEqual {623}
	169 Move X8, [X19]
	170 Move X10, 0x7FC000
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move X10, [X10+1960]
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X19
	183 Move W2, W31
	184 Call 0x1C5D788
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Add X8, X8, X9
	187 Add X0, X8, 312
	188 Move X8, [X0]
	189 Move X2, [X0+8]
	190 Move X0, X19
	191 Move W1, W22
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X25, [X31+16]
	194 Move X24, [X31+24]
	195 Move W23, W0
	196 Move V11, V8
	197 Compare X24, 0
	198 JumpIfEqual {623}
	199 Move X8, [X24]
	200 Move X10, 0x82E000
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Move X10, [X10+3968]
	203 Move X1, [X10]
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X24
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X2, [X0+8]
	220 Move X0, X24
	221 Move W1, W23
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Add S0, S11, S0
	224 Move [X25], S0
	225 Move V11, [X31+40]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Add X25, X31, 40
	228 NotImplemented "Instruction CSEL not yet implemented."
	229 NotImplemented "Instruction FCSEL not yet implemented."
	230 NotImplemented "Instruction CSEL not yet implemented."
	231 Move X24, X20
	232 Move W23, W22
	233 Move TEMP, X27
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfEqual {267}
	237 Compare X19, 0
	238 JumpIfEqual {623}
	239 Move X8, [X19]
	240 Move X10, 0x7FC000
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X10, [X10+1960]
	243 Move X1, [X10]
	244 Compare X9, 0
	245 JumpIfEqual {252}
	246 Move X10, [X8+176]
	247 Add X10, X10, 8
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X9, X9, 1
	251 Add X10, X10, 16
	252 Move X0, X19
	253 Move W2, W31
	254 Call 0x1C5D788
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Add X8, X8, X9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X2, [X0+8]
	260 Move X0, X19
	261 Move W1, W22
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move W23, W0
	264 Move X25, X28
	265 Move V11, V9
	266 Move X24, X29
	267 Compare X24, 0
	268 JumpIfEqual {623}
	269 Move X8, [X24]
	270 Move X10, 0x82E000
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Move X10, [X10+3968]
	273 Move X1, [X10]
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X24
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X2, [X0+8]
	290 Move X0, X24
	291 Move W1, W23
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Add S0, S11, S1
	294 Move [X25], S0
	295 Move V11, [X31+36]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X25, X31, 36
	298 NotImplemented "Instruction CSEL not yet implemented."
	299 NotImplemented "Instruction FCSEL not yet implemented."
	300 NotImplemented "Instruction CSEL not yet implemented."
	301 Move X24, X20
	302 Move W23, W22
	303 Move TEMP, X27
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {337}
	307 Compare X19, 0
	308 JumpIfEqual {623}
	309 Move X8, [X19]
	310 Move X10, 0x7FC000
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Move X10, [X10+1960]
	313 Move X1, [X10]
	314 Compare X9, 0
	315 JumpIfEqual {322}
	316 Move X10, [X8+176]
	317 Add X10, X10, 8
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Subtract X9, X9, 1
	321 Add X10, X10, 16
	322 Move X0, X19
	323 Move W2, W31
	324 Call 0x1C5D788
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Add X8, X8, X9
	327 Add X0, X8, 312
	328 Move X8, [X0]
	329 Move X2, [X0+8]
	330 Move X0, X19
	331 Move W1, W22
	332 NotImplemented "Instruction BLR not yet implemented."
	333 Move W23, W0
	334 Move X25, X26
	335 Move V11, V10
	336 Move X24, X21
	337 Compare X24, 0
	338 JumpIfEqual {623}
	339 Move X8, [X24]
	340 Move X10, 0x82E000
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Move X10, [X10+3968]
	343 Move X1, [X10]
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X24
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X2, [X0+8]
	360 Move X0, X24
	361 Move W1, W23
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Add S0, S11, S2
	364 Move [X25], S0
	365 Move W8, [X31+12]
	366 Move V11, [X31+44]
	367 Add W22, W22, 1
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X26, 0x7D4000
	370 Move S1, [X31+36]
	371 Move S0, [X31+40]
	372 Move X26, [X26+1440]
	373 Move W28, [X31+12]
	374 Move X25, 0xAB9000
	375 NotImplemented "Instruction SCVTF not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 NotImplemented "Instruction FDIV not yet implemented."
	378 NotImplemented "Instruction FDIV not yet implemented."
	379 NotImplemented "Instruction FDIV not yet implemented."
	380 Move [X31+40], S9
	381 Move [X31+48], S10
	382 Move [X31+24], S0
	383 Move [X31+36], S0
	384 Move W22, W31
	385 Move X21, X31
	386 Move S14, W31
	387 Move S13, W31
	388 Move S12, W31
	389 Move S15, W31
	390 Move S11, W31
	391 Move S8, W31
	392 NotImplemented "Instruction CMP not yet implemented."
	393 NotImplemented "Instruction CSEL not yet implemented."
	394 Move X24, X20
	395 Move W23, W22
	396 Move TEMP, X27
	397 And TEMP, TEMP, 1
	398 Compare TEMP, 1
	399 JumpIfEqual {428}
	400 Compare X19, 0
	401 JumpIfEqual {623}
	402 Move X8, [X19]
	403 Move X10, 0x7FC000
	404 NotImplemented "Instruction LDRH not yet implemented."
	405 Move X10, [X10+1960]
	406 Move X1, [X10]
	407 Compare X9, 0
	408 JumpIfEqual {415}
	409 Move X10, [X8+176]
	410 Add X10, X10, 8
	411 NotImplemented "Instruction LDUR not yet implemented."
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Subtract X9, X9, 1
	414 Add X10, X10, 16
	415 Move X0, X19
	416 Move W2, W31
	417 Call 0x1C5D788
	418 NotImplemented "Instruction LDRSW not yet implemented."
	419 Add X8, X8, X9
	420 Add X0, X8, 312
	421 Move X8, [X0]
	422 Move X2, [X0+8]
	423 Move X0, X19
	424 Move W1, W22
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move W23, W0
	427 Move X24, X21
	428 Compare X24, 0
	429 JumpIfEqual {623}
	430 Move X8, [X24]
	431 Move X10, 0x82E000
	432 NotImplemented "Instruction LDRH not yet implemented."
	433 Move X10, [X10+3968]
	434 Move X1, [X10]
	435 Compare X9, 0
	436 JumpIfEqual {443}
	437 Move X10, [X8+176]
	438 Add X10, X10, 8
	439 NotImplemented "Instruction LDUR not yet implemented."
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Subtract X9, X9, 1
	442 Add X10, X10, 16
	443 Move X0, X24
	444 Move W2, W31
	445 Call 0x1C5D788
	446 NotImplemented "Instruction LDRSW not yet implemented."
	447 Add X8, X8, X9
	448 Add X0, X8, 312
	449 Move X8, [X0]
	450 Move X2, [X0+8]
	451 Move X0, X24
	452 Move W1, W23
	453 NotImplemented "Instruction BLR not yet implemented."
	454 Move V3, [X31+24]
	455 Subtract S0, S0, S10
	456 Subtract S1, S1, S9
	457 Add W22, W22, 1
	458 Subtract S2, S2, S3
	459 Multiply S3, S0, S0
	460 Add S14, S14, S3
	461 Multiply S3, S0, S1
	462 Multiply S0, S0, S2
	463 Add S13, S13, S3
	464 Multiply S3, S1, S1
	465 Multiply S1, S1, S2
	466 Multiply S2, S2, S2
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add S12, S12, S0
	469 Add S15, S15, S3
	470 Add S11, S11, S1
	471 Add S8, S8, S2
	472 Move S8, W31
	473 Move S11, W31
	474 Move S15, W31
	475 Move S12, W31
	476 Move S13, W31
	477 Move S14, W31
	478 Multiply S0, S8, S15
	479 Multiply S1, S11, S11
	480 Multiply S3, S8, S14
	481 Multiply S4, S12, S12
	482 Multiply S5, S15, S14
	483 Subtract S2, S0, S1
	484 Subtract S0, S3, S4
	485 Multiply S1, S13, S13
	486 NotImplemented "Instruction FCMP not yet implemented."
	487 Subtract S1, S5, S1
	488 NotImplemented "Instruction FCMP not yet implemented."
	489 Multiply S0, S11, S12
	490 Multiply S1, S8, S13
	491 Multiply S3, S11, S13
	492 Multiply S4, S15, S12
	493 Subtract S0, S0, S1
	494 Subtract S1, S3, S4
	495 NotImplemented "Instruction FDIV not yet implemented."
	496 NotImplemented "Instruction FDIV not yet implemented."
	497 Move S13, 1
	498 NotImplemented "Instruction FCMP not yet implemented."
	499 Multiply S1, S11, S12
	500 Multiply S2, S8, S13
	501 Multiply S3, S12, S13
	502 Multiply S4, S11, S14
	503 Subtract S1, S1, S2
	504 Subtract S2, S3, S4
	505 NotImplemented "Instruction FDIV not yet implemented."
	506 NotImplemented "Instruction FDIV not yet implemented."
	507 Move S12, 1
	508 Multiply S0, S11, S13
	509 Multiply S2, S15, S12
	510 Multiply S3, S12, S13
	511 Multiply S4, S11, S14
	512 Subtract S0, S0, S2
	513 Subtract S2, S3, S4
	514 NotImplemented "Instruction FDIV not yet implemented."
	515 NotImplemented "Instruction FDIV not yet implemented."
	516 Move S11, 1
	517 Move X19, 0xAB9000
	518 Move W8, [X19+1925]
	519 Compare W8, 0
	520 JumpIfNotEqual {526}
	521 Move X0, 0x7D4000
	522 Move X0, [X0+1448]
	523 Call 0x1C17CF4
	524 Move W8, 1
	525 Move [X19+1925], W8
	526 Move X20, 0x7D4000
	527 Move X20, [X20+1448]
	528 Move X0, [X20]
	529 Move W8, [X0+224]
	530 Compare W8, 0
	531 JumpIfNotEqual {533}
	532 Call 0x1C17DFC
	533 Move X8, -48451584
	534 Multiply S0, S13, S13
	535 Multiply S1, S12, S12
	536 Move V8, [X8+380]
	537 Add S0, S0, S1
	538 Multiply S1, S11, S11
	539 Add S0, S1, S0
	540 NotImplemented "Instruction FSQRT not yet implemented."
	541 NotImplemented "Instruction FCMP not yet implemented."
	542 NotImplemented "Instruction FDIV not yet implemented."
	543 NotImplemented "Instruction FDIV not yet implemented."
	544 NotImplemented "Instruction FDIV not yet implemented."
	545 Move W8, [X25+1923]
	546 Compare W8, 0
	547 JumpIfNotEqual {553}
	548 Move X0, 0x7D4000
	549 Move X0, [X0+1440]
	550 Call 0x1C17CF4
	551 Move W8, 1
	552 Move [X25+1923], W8
	553 Move X8, [X26]
	554 Move X8, [X8+184]
	555 Move S13, [X8]
	556 Move S12, [X8+4]
	557 Move V11, [X8+8]
	558 Move W8, [X19+1925]
	559 Compare W8, 0
	560 JumpIfNotEqual {566}
	561 Move X0, 0x7D4000
	562 Move X0, [X0+1448]
	563 Call 0x1C17CF4
	564 Move W8, 1
	565 Move [X19+1925], W8
	566 Move X0, [X20]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Multiply S0, S13, S13
	572 Multiply S1, S12, S12
	573 Add S0, S0, S1
	574 Multiply S1, S11, S11
	575 Add S0, S1, S0
	576 NotImplemented "Instruction FSQRT not yet implemented."
	577 NotImplemented "Instruction FCMP not yet implemented."
	578 NotImplemented "Instruction FDIV not yet implemented."
	579 NotImplemented "Instruction FDIV not yet implemented."
	580 NotImplemented "Instruction FDIV not yet implemented."
	581 Move W8, [X25+1923]
	582 Compare W8, 0
	583 JumpIfNotEqual {589}
	584 Move X0, 0x7D4000
	585 Move X0, [X0+1440]
	586 Call 0x1C17CF4
	587 Move W8, 1
	588 Move [X25+1923], W8
	589 Move X8, [X26]
	590 Move X8, [X8+184]
	591 Move S0, [X8]
	592 Move S1, [X8+4]
	593 Move V2, [X8+8]
	594 Multiply S3, S10, S0
	595 Multiply S4, S9, S1
	596 Add S3, S3, S4
	597 Move V4, [X31+24]
	598 Move X20, [X31+192]
	599 Move X19, [X31+200]
	600 Move X22, [X31+176]
	601 Move X21, [X31+184]
	602 Move X24, [X31+160]
	603 Move X23, [X31+168]
	604 Move X26, [X31+144]
	605 Move X25, [X31+152]
	606 Move X28, [X31+128]
	607 Move X27, [X31+136]
	608 Move X29, [X31+112]
	609 Move X30, [X31+120]
	610 Move D9, [X31+96]
	611 Move D8, [X31+104]
	612 Move D11, [X31+80]
	613 Move D10, [X31+88]
	614 Move D13, [X31+64]
	615 Move D12, [X31+72]
	616 Move D15, [X31+48]
	617 Move D14, [X31+56]
	618 Multiply S4, S4, S2
	619 Add S3, S4, S3
	620 NotImplemented "Instruction FNEG not yet implemented."
	621 Add X31, X31, 208
	622 Return X0
	623 Call 0x1C17F20
	624 Move X0, 0x7D9000
	625 Move X0, [X0+1320]
	626 Call 0x1C17D08
	627 Call 0x1C17F10
	628 Move X19, X0
	629 Move X0, 0x82E000
	630 Move X0, [X0+1680]
	631 Call 0x1C17D08
	632 Move X1, X0
	633 Move X0, X19
	634 Move X2, X31
	635 Call ArgumentNullException..ctor, X0, X1
	636 Move X0, 0x82F000
	637 Move X0, [X0+1800]
	638 Call 0x1C17D08
	639 Move X1, X0
	640 Move X0, X19
	641 Call 0x1C17DEC

Method: UnityEngine.Plane FindBestPlane(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 textureGroup)

Disassembly:
	0x039228DC STR W0, [X31 + 0x14]
	0x039228E0 CBNZ W8, 0x39228F8
	0x039228E4 ADRP X0, 0x7D1000
	0x039228E8 LDR X0, [X0 + 0x5A8]
	0x039228EC BL 0x1C16CF4
	0x039228F0 MOVZ W8, 0x1
	0x039228F4 STRB W8, [X23 + 0xA23]
	0x039228F8 LDR X0, [X20]
	0x039228FC LDR W8, [X0 + 0xE0]
	0x03922900 CBZ W8, 0x3922924
	0x03922904 MOVZ W8, 0x7F800000
	0x03922908 FRINTM S0, S9
	0x0392290C FMOV S1, W8
	0x03922910 FCVTMS W9, S9
	0x03922914 FCMP S0, S1
	0x03922918 MOVZ W8, 0x80000000
	0x0392291C CSEL W21, W8, W9, EQ
	0x03922920 B 0x3922960
	0x03922924 BL 0x1C16DFC
	0x03922928 LDRB W8, [X23 + 0xA23]
	0x0392292C MOVZ W9, 0x7F800000
	0x03922930 FRINTM S0, S9
	0x03922934 FMOV S1, W9
	0x03922938 FCVTMS W10, S9
	0x0392293C FCMP S0, S1
	0x03922940 MOVZ W9, 0x80000000
	0x03922944 CSEL W21, W9, W10, EQ
	0x03922948 CBNZ W8, 0x3922960
	0x0392294C ADRP X0, 0x7D1000
	0x03922950 LDR X0, [X0 + 0x5A8]
	0x03922954 BL 0x1C16CF4
	0x03922958 MOVZ W8, 0x1
	0x0392295C STRB W8, [X23 + 0xA23]
	0x03922960 LDR X0, [X20]
	0x03922964 ADRP X26, 0x7D1000
	0x03922968 LDR W8, [X0 + 0xE0]
	0x0392296C LDR X26, [X26 + 0x598]
	0x03922970 CBNZ W8, 0x3922978
	0x03922974 BL 0x1C16DFC
	0x03922978 ADRP X23, 0x82C000
	0x0392297C LDR X23, [X23 + 0x838]
	0x03922980 LDR X0, [X26]
	0x03922984 ADRP X28, 0x82C000
	0x03922988 LDR X28, [X28 + 0x830]
	0x0392298C MOVZ W8, 0x7F800000
	0x03922990 LDR W9, [X0 + 0xE0]
	0x03922994 FRINTM S0, S8
	0x03922998 FMOV S1, W8
	0x0392299C FCVTMS W10, S8
	0x039229A0 FCMP S0, S1
	0x039229A4 MOVZ W8, 0x80000000
	0x039229A8 CSEL W27, W8, W10, EQ
	0x039229AC CBNZ W9, 0x39229B4
	0x039229B0 BL 0x1C16DFC
	0x039229B4 ADRP X26, 0x82C000
	0x039229B8 LDR X26, [X26 + 0x828]
	0x039229BC MOV X0, X24
	0x039229C0 MOV X1, X31
	0x039229C4 BL 0x3C39564
	0x039229C8 LDR X0, [X23]
	0x039229CC STR X31, [X31 + 0x80]
	0x039229D0 BL 0x1C16F10
	0x039229D4 LDR X1, [X28]
	0x039229D8 MOV X24, X0
	0x039229DC BL 0x2DCCB98
	0x039229E0 ADD W8, W29, W27
	0x039229E4 LDR X27, [X31 + 0x98]
	0x039229E8 STR W8, [X31 + 0x10]
	0x039229EC SXTW X8, W25
	0x039229F0 ADD W28, W25, W21
	0x039229F4 STR X8, [X31 + 0x8]
	0x039229F8 MADD W23, W29, W22, W25
	0x039229FC LDR X0, [X20]
	0x03922A00 LDR W8, [X0 + 0xE0]
	0x03922A04 CBNZ W8, 0x3922A0C
	0x03922A08 BL 0x1C16DFC
	0x03922A0C LDP W0, W1, [X31 + 0x10]
	0x03922A10 MOV X2, X31
	0x03922A14 BL 0x337EE94
	0x03922A18 LDR X21, [X31 + 0x8]
	0x03922A1C CMP W29, W0
	0x03922A20 STP W23, W29, [X31 + 0x18]
	0x03922A24 B.GE 0x3922B88
	0x03922A28 LDR X0, [X20]
	0x03922A2C LDR W8, [X0 + 0xE0]
	0x03922A30 CBNZ W8, 0x3922A38
	0x03922A34 BL 0x1C16DFC
	0x03922A38 MOV W0, W28
	0x03922A3C MOV W1, W22
	0x03922A40 MOV X2, X31
	0x03922A44 BL 0x337EE94
	0x03922A48 CMP X21, W0, SXTW
	0x03922A4C B.GE 0x3922B78
	0x03922A50 CBZ X19, 0x3922DE4
	0x03922A54 LDR W8, [X19 + 0x18]
	0x03922A58 CMP W23, W8
	0x03922A5C B.CS 0x3922DE8
	0x03922A60 ADRP X8, 0x82C000
	0x03922A64 LDR X8, [X8 + 0x7E8]
	0x03922A68 LDR X0, [X8]
	0x03922A6C ADD X8, X19, W23, 0x2, SXTW
	0x03922A70 LDR W29, [X8 + 0x20]
	0x03922A74 LDR W9, [X0 + 0xE0]
	0x03922A78 CBNZ W9, 0x3922A80
	0x03922A7C BL 0x1C16DFC
	0x03922A80 CBZ X24, 0x3922DE4
	0x03922A84 LDR X2, [X26]
	0x03922A88 AND W25, W29, 0xFF00
	0x03922A8C BFM W25, W29, 0x10, 0x7
	0x03922A90 BFM W25, W29, 0x10, 0x17
	0x03922A94 MOV X0, X24
	0x03922A98 MOV W1, W25
	0x03922A9C BL 0x2DCDCE0
	0x03922AA0 TBZ X0, 0x0, 0x3922B6C
	0x03922AA4 CBZ X27, 0x3922DE4
	0x03922AA8 ADRP X8, 0x82C000
	0x03922AAC LDR X8, [X8 + 0x7F8]
	0x03922AB0 ADD X2, X31, 0x88
	0x03922AB4 MOV X0, X27
	0x03922AB8 MOV W1, W25
	0x03922ABC LDR X3, [X8]
	0x03922AC0 BL 0x2AFDDF4
	0x03922AC4 TBZ X0, 0x0, 0x3922B6C
	0x03922AC8 LDR X0, [X31 + 0x20]
	0x03922ACC CBZ X0, 0x3922DE4
	0x03922AD0 ADRP X8, 0x82C000
	0x03922AD4 LDR X1, [X31 + 0x88]
	0x03922AD8 LDR X8, [X8 + 0x800]
	0x03922ADC ADD X2, X31, 0x80
	0x03922AE0 LDR X3, [X8]
	0x03922AE4 BL 0x2AA6B2C
	0x03922AE8 TBZ X0, 0x0, 0x3922B0C
	0x03922AEC LDR X0, [X31 + 0x80]
	0x03922AF0 CBZ X0, 0x3922DE4
	0x03922AF4 ADRP X8, 0x7D3000
	0x03922AF8 LDR W1, [X31 + 0x90]
	0x03922AFC LDR X8, [X8 + 0x9D8]
	0x03922B00 LDR X2, [X8]
	0x03922B04 BL 0x2DAB03C
	0x03922B08 B 0x3922B6C
	0x03922B0C ADRP X8, 0x7D2000
	0x03922B10 LDR X25, [X31 + 0x88]
	0x03922B14 LDR X8, [X8 + 0xE08]
	0x03922B18 LDR X0, [X8]
	0x03922B1C BL 0x1C16F10
	0x03922B20 ADRP X8, 0x7D8000
	0x03922B24 LDR X8, [X8 + 0x688]
	0x03922B28 MOV X29, X0
	0x03922B2C LDR X1, [X8]
	0x03922B30 BL 0x2DA9EF4
	0x03922B34 CBZ X29, 0x3922DE4
	0x03922B38 ADRP X8, 0x7D3000
	0x03922B3C LDR W1, [X31 + 0x90]
	0x03922B40 LDR X8, [X8 + 0x9D8]
	0x03922B44 MOV X0, X29
	0x03922B48 LDR X2, [X8]
	0x03922B4C BL 0x2DAB03C
	0x03922B50 ADRP X8, 0x82C000
	0x03922B54 LDR X8, [X8 + 0x7C0]
	0x03922B58 LDR X0, [X31 + 0x20]
	0x03922B5C MOV X1, X25
	0x03922B60 MOV X2, X29
	0x03922B64 LDR X3, [X8]
	0x03922B68 BL 0x2AA5098
	0x03922B6C ADD X21, X21, 0x1
	0x03922B70 ADD W23, W23, 0x1
	0x03922B74 B 0x3922A28
	0x03922B78 LDP W23, W29, [X31 + 0x18]
	0x03922B7C ADD W29, W29, 0x1
	0x03922B80 ADD W23, W23, W22
	0x03922B84 B 0x39229FC
	0x03922B88 ADRP X8, 0x82C000
	0x03922B8C LDR X8, [X8 + 0x7D0]
	0x03922B90 LDR X0, [X8]
	0x03922B94 BL 0x1C16F10
	0x03922B98 ADRP X8, 0x82C000
	0x03922B9C LDR X8, [X8 + 0x7C8]
	0x03922BA0 MOV X19, X0
	0x03922BA4 LDR X1, [X8]
	0x03922BA8 BL 0x2AA4804
	0x03922BAC LDR X0, [X31 + 0x20]
	0x03922BB0 CBZ X0, 0x3922DE4
	0x03922BB4 ADRP X8, 0x82C000
	0x03922BB8 LDR X8, [X8 + 0x7F0]
	0x03922BBC LDR X1, [X8]
	0x03922BC0 ADD X8, X31, 0x28
	0x03922BC4 BL 0x2AA54BC
	0x03922BC8 LDUR V0, [X31 + 0x28]
	0x03922BCC LDUR V1, [X31 + 0x38]
	0x03922BD0 LDR X8, [X31 + 0x48]
	0x03922BD4 ADRP X28, 0x7D3000
	0x03922BD8 MOVZ W25, 0xC
	0x03922BDC STP V0, V1, [X31 + 0x50]
	0x03922BE0 STR X8, [X31 + 0x70]
	0x03922BE4 LDR X28, [X28 + 0x9D8]
	0x03922BE8 ADRP X8, 0x82C000
	0x03922BEC LDR X8, [X8 + 0x818]
	0x03922BF0 LDR X1, [X8]
	0x03922BF4 ADD X0, X31, 0x50
	0x03922BF8 BL 0x2C0A728
	0x03922BFC TBZ X0, 0x0, 0x3922DA4
	0x03922C00 ADRP X8, 0x82C000
	0x03922C04 LDP X20, X22, [X31 + 0x60]
	0x03922C08 LDR X8, [X8 + 0x868]
	0x03922C0C LDR X0, [X8]
	0x03922C10 BL 0x1C16F10
	0x03922C14 MOV X21, X0
	0x03922C18 MOV X1, X31
	0x03922C1C BL 0x392826C
	0x03922C20 CBZ X20, 0x3922E0C
	0x03922C24 CBZ X21, 0x3922E10
	0x03922C28 LDR X8, [X20 + 0x58]
	0x03922C2C STR X8, [X21 + 0x10]
	0x03922C30 LDR X8, [X20 + 0x30]
	0x03922C34 STR X8, [X21 + 0x18]
	0x03922C38 ADRP X8, 0x7D3000
	0x03922C3C LDR X8, [X8 + 0x9D0]
	0x03922C40 LDR X0, [X8]
	0x03922C44 BL 0x1C16F10
	0x03922C48 ADRP X8, 0x82C000
	0x03922C4C LDR X8, [X8 + 0x860]
	0x03922C50 MOV X23, X0
	0x03922C54 LDR X2, [X8]
	0x03922C58 MOV X1, X21
	0x03922C5C MOV X3, X31
	0x03922C60 BL 0x2D2CF74
	0x03922C64 ADRP X8, 0x82C000
	0x03922C68 LDR X8, [X8 + 0x808]
	0x03922C6C LDR X2, [X8]
	0x03922C70 MOV X0, X22
	0x03922C74 MOV X1, X23
	0x03922C78 BL 0x21CD49C
	0x03922C7C ADRP X8, 0x7D2000
	0x03922C80 LDR X8, [X8 + 0xE08]
	0x03922C84 MOV X23, X0
	0x03922C88 LDR X0, [X8]
	0x03922C8C BL 0x1C16F10
	0x03922C90 ADRP X8, 0x7D2000
	0x03922C94 LDR X8, [X8 + 0xE00]
	0x03922C98 MOV X22, X0
	0x03922C9C LDR X2, [X8]
	0x03922CA0 MOV X1, X23
	0x03922CA4 BL 0x2DA9FD8
	0x03922CA8 ADRP X8, 0x7D2000
	0x03922CAC LDR X8, [X8 + 0xE08]
	0x03922CB0 LDR X0, [X8]
	0x03922CB4 BL 0x1C16F10
	0x03922CB8 ADRP X8, 0x7D8000
	0x03922CBC LDR X8, [X8 + 0x688]
	0x03922CC0 MOV X23, X0
	0x03922CC4 LDR X1, [X8]
	0x03922CC8 BL 0x2DA9EF4
	0x03922CCC LDR X8, [X21 + 0x18]
	0x03922CD0 CBZ X8, 0x3922E08
	0x03922CD4 LDR W9, [X8 + 0x18]
	0x03922CD8 SUBS W26, W9, 0x1
	0x03922CDC B.LT 0x3922D80
	0x03922CE0 MOV W24, W31
	0x03922CE4 LDR W9, [X8 + 0x18]
	0x03922CE8 CMP W24, W9
	0x03922CEC B.CS 0x3922DF0
	0x03922CF0 ADD X8, X8, W24, 0x3, SXTW
	0x03922CF4 LDR X0, [X8 + 0x20]
	0x03922CF8 CBZ X0, 0x3922DF4
	0x03922CFC LDR X27, [X21 + 0x10]
	0x03922D00 MOV W1, W31
	0x03922D04 MOV X2, X31
	0x03922D08 BL 0x39282DC
	0x03922D0C CBZ X27, 0x3922DF8
	0x03922D10 LDR W8, [X27 + 0x18]
	0x03922D14 CMP W0, W8
	0x03922D18 B.CS 0x3922DEC
	0x03922D1C SXTW X8, W0
	0x03922D20 MADD X8, X8, X25, X27
	0x03922D24 LDP S0, S1, [X8 + 0x20]
	0x03922D28 LDR V2, [X8 + 0x28]
	0x03922D2C MOV X0, X31
	0x03922D30 BL 0x392830C
	0x03922D34 MOV W1, W0
	0x03922D38 CBZ X22, 0x3922DFC
	0x03922D3C ADRP X8, 0x7D2000
	0x03922D40 LDR X8, [X8 + 0xDF8]
	0x03922D44 LDR X2, [X8]
	0x03922D48 MOV X0, X22
	0x03922D4C BL 0x2DAA59C
	0x03922D50 TBZ X0, 0x0, 0x3922D68
	0x03922D54 CBZ X23, 0x3922E04
	0x03922D58 LDR X2, [X28]
	0x03922D5C MOV X0, X23
	0x03922D60 MOV W1, W24
	0x03922D64 BL 0x2DAB03C
	0x03922D68 CMP W26, W24
	0x03922D6C B.EQ 0x3922D80
	0x03922D70 LDR X8, [X21 + 0x18]
	0x03922D74 ADD W24, W24, 0x1
	0x03922D78 CBNZ X8, 0x3922CE4
	0x03922D7C B 0x3922E00
	0x03922D80 CBZ X19, 0x3922E14
	0x03922D84 ADRP X8, 0x82C000
	0x03922D88 LDR X8, [X8 + 0x7C0]
	0x03922D8C LDR X3, [X8]
	0x03922D90 MOV X0, X19
	0x03922D94 MOV X1, X20
	0x03922D98 MOV X2, X23
	0x03922D9C BL 0x2AA5098

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D12
	003 Move [X31+24], D11
	004 Move [X31+32], D10
	005 Move [X31+40], D9
	006 Move [X31+48], D8
	007 Move [X31+56], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xAC0000
	013 Move X22, 0x7D2000
	014 Move W8, [X21+2219]
	015 Move X22, [X22+1432]
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x7D2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2219], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {296}
	040 Move X21, 0xAB7000
	041 Move W8, [X21+1923]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x7D2000
	045 Move X0, [X0+1440]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1923], W8
	049 Compare X20, 0
	050 JumpIfEqual {294}
	051 Move X22, 0x7D2000
	052 Move X22, [X22+1440]
	053 Move X8, [X22]
	054 Move X9, [X8+184]
	055 Move X8, [X20+40]
	056 Move V4, [X9]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Compare X8, 0
	059 JumpIfEqual {147}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X10, [X20+88]
	063 Move W13, [X8+24]
	064 Move W11, W31
	065 Move W12, W31
	066 Move W14, 12
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X15, X8, W12
	069 Move X15, [X15+32]
	070 Compare X15, 0
	071 JumpIfEqual {294}
	072 Move W16, [X15+84]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X15, [X15+16]
	075 Compare X15, 0
	076 JumpIfEqual {294}
	077 Move W16, [X15+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W17, W31
	080 Add W11, W11, W16
	081 Compare X10, 0
	082 JumpIfEqual {294}
	083 Add X0, X15, W17
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move W1, [X10+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move V0, [X0+32]
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Add W17, W17, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add S4, S4, S0
	093 Add V3, V3, V1
	094 Add W12, W12, 1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction SCVTF not yet implemented."
	097 NotImplemented "Instruction FDIV not yet implemented."
	098 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	099 NotImplemented "Instruction INVALID not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	102 Compare X8, 0
	103 JumpIfEqual {294}
	104 Move W12, [X8+24]
	105 Move W11, W31
	106 NotImplemented "Instruction MOVI not yet implemented."
	107 Move S2, W31
	108 Move W13, 12
	109 Move S0, W31
	110 NotImplemented "Instruction MOVI not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X14, X8, W11
	113 Move X14, [X14+32]
	114 Compare X14, 0
	115 JumpIfEqual {294}
	116 Move W15, [X14+84]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X14, [X14+16]
	119 Compare X14, 0
	120 JumpIfEqual {294}
	121 Move W15, [X14+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W16, W31
	124 Compare X10, 0
	125 JumpIfEqual {294}
	126 Add X17, X14, W16
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Move W0, [X10+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction MADD not yet implemented."
	131 Move V5, [X17+32]
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Add W16, W16, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract S5, S5, S8
	136 Subtract V6, V6, V4
	137 Multiply S7, S5, S5
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 NotImplemented "Instruction INVALID not yet implemented."
	140 NotImplemented "Instruction INVALID not yet implemented."
	141 Add S2, S2, S7
	142 Add V3, V3, V5
	143 Add S0, S0, S16
	144 Add V1, V1, V6
	145 Add W11, W11, 1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction MOVI not yet implemented."
	148 Move S0, W31
	149 NotImplemented "Instruction INVALID not yet implemented."
	150 Move S2, W31
	151 NotImplemented "Instruction FDIV not yet implemented."
	152 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	153 NotImplemented "Instruction MOVI not yet implemented."
	154 Move S4, V1.S[1]
	155 NotImplemented "Instruction INVALID not yet implemented."
	156 NotImplemented "Instruction INVALID not yet implemented."
	157 Multiply S6, S0, S0
	158 Multiply S16, S4, V1.S[0]
	159 Subtract V5, V5, V7
	160 Subtract S7, S16, S6
	161 Move S6, V5.S[1]
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move [X31], V17
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Multiply S2, S0, V3.S[1]
	166 Multiply S4, S4, V3.S[0]
	167 Multiply S0, S0, V3.S[0]
	168 Multiply S1, S1, V3.S[1]
	169 Subtract S2, S2, S4
	170 Subtract S0, S0, S1
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 NotImplemented "Instruction FDIV not yet implemented."
	173 Move S11, 1
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move S1, V3.S[1]
	176 Multiply S5, S0, V3.S[1]
	177 Multiply S4, S4, V3.S[0]
	178 Multiply S0, S0, S2
	179 Multiply S1, S1, V3.S[0]
	180 Subtract S2, S5, S4
	181 Subtract S0, S1, S0
	182 NotImplemented "Instruction FDIV not yet implemented."
	183 NotImplemented "Instruction FDIV not yet implemented."
	184 Move S12, 1
	185 Move S6, V3.S[1]
	186 Multiply S4, S0, V3.S[0]
	187 Multiply S1, S1, V3.S[1]
	188 Multiply S0, S0, S2
	189 Multiply S2, S6, V3.S[0]
	190 Subtract S1, S4, S1
	191 Subtract S0, S2, S0
	192 NotImplemented "Instruction FDIV not yet implemented."
	193 NotImplemented "Instruction FDIV not yet implemented."
	194 Move S10, 1
	195 Move X19, 0xAB7000
	196 Move W8, [X19+1925]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x7D2000
	200 Move X0, [X0+1448]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X19+1925], W8
	204 Move X20, 0x7D2000
	205 Move X20, [X20+1448]
	206 Move X0, [X20]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X8, -48459776
	212 Multiply S0, S11, S11
	213 Multiply S1, S12, S12
	214 Move V9, [X8+380]
	215 Add S0, S0, S1
	216 Multiply S1, S10, S10
	217 Add S0, S1, S0
	218 NotImplemented "Instruction FSQRT not yet implemented."
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 NotImplemented "Instruction FDIV not yet implemented."
	221 NotImplemented "Instruction FDIV not yet implemented."
	222 NotImplemented "Instruction FDIV not yet implemented."
	223 Move W8, [X21+1923]
	224 Compare W8, 0
	225 JumpIfNotEqual {231}
	226 Move X0, 0x7D2000
	227 Move X0, [X0+1440]
	228 Call 0x1C17CF4
	229 Move W8, 1
	230 Move [X21+1923], W8
	231 Move X8, [X22]
	232 Move X8, [X8+184]
	233 Move S11, [X8]
	234 Move S12, [X8+4]
	235 Move V10, [X8+8]
	236 Move W8, [X19+1925]
	237 Compare W8, 0
	238 JumpIfNotEqual {244}
	239 Move X0, 0x7D2000
	240 Move X0, [X0+1448]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X19+1925], W8
	244 Move X0, [X20]
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Multiply S0, S11, S11
	250 Multiply S1, S12, S12
	251 Add S0, S0, S1
	252 Multiply S1, S10, S10
	253 Add S0, S1, S0
	254 NotImplemented "Instruction FSQRT not yet implemented."
	255 NotImplemented "Instruction FCMP not yet implemented."
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 NotImplemented "Instruction FDIV not yet implemented."
	258 NotImplemented "Instruction FDIV not yet implemented."
	259 Move W8, [X21+1923]
	260 Compare W8, 0
	261 JumpIfNotEqual {267}
	262 Move X0, 0x7D2000
	263 Move X0, [X0+1440]
	264 Call 0x1C17CF4
	265 Move W8, 1
	266 Move [X21+1923], W8
	267 Move X8, [X22]
	268 Move X8, [X8+184]
	269 Move S0, [X8]
	270 Move S1, [X8+4]
	271 Move V2, [X8+8]
	272 Move V5, [X31]
	273 Multiply S3, S8, S0
	274 Move X20, [X31+80]
	275 Move X19, [X31+88]
	276 Move X22, [X31+64]
	277 Move X21, [X31+72]
	278 Multiply S4, S1, V5.S[1]
	279 Move X30, [X31+56]
	280 Move D9, [X31+40]
	281 Move D8, [X31+48]
	282 Move D11, [X31+24]
	283 Move D10, [X31+32]
	284 Move V12, [X31+16]
	285 Add S3, S3, S4
	286 Multiply S4, S2, V5.S[0]
	287 Add S3, S4, S3
	288 NotImplemented "Instruction FNEG not yet implemented."
	289 Add X31, X31, 96
	290 Return X0
	291 NotImplemented "Instruction MOVI not yet implemented."
	292 Move S0, W31
	293 Move S2, W31
	294 Call 0x1C17F20
	295 Call 0x1C17F28
	296 Move X0, 0x7D7000
	297 Move X0, [X0+1320]
	298 Call 0x1C17D08
	299 Call 0x1C17F10
	300 Move X19, X0
	301 Move X0, 0x82C000
	302 Move X0, [X0+3728]
	303 Call 0x1C17D08
	304 Move X1, X0
	305 Move X0, X19
	306 Move X2, X31
	307 Call ArgumentNullException..ctor, X0, X1
	308 Move X0, 0x82D000
	309 Move X0, [X0+1952]
	310 Call 0x1C17D08
	311 Move X1, X0
	312 Move X0, X19
	313 Call 0x1C17DEC

