Type: UnityEngine.ProBuilder.Edge

Method: System.Void .ctor(System.Int32 a, System.Int32 b)

Disassembly:
	0x038FEC24 STRB W8, [X21 + 0x7A4]
	0x038FEC28 LDR X0, [X22]

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Return 

Method: System.Boolean IsValid()

Disassembly:
	0x038FEC2C BL 0x1C16F10
	0x038FEC30 MOV X1, X31
	0x038FEC34 MOV X21, X0
	0x038FEC38 BL 0x33BDD8C
	0x038FEC3C CBZ X21, 0x38FEC94
	0x038FEC40 ADRP X8, 0x84F000
	0x038FEC44 LDR X8, [X8 + 0xCB0]
	0x038FEC48 STR X20, [X21 + 0x10]
	0x038FEC4C ADRP X20, 0x84F000
	0x038FEC50 ADRP X22, 0x84F000
	0x038FEC54 LDR X0, [X8]

ISIL:
	001 Move W8, [X0]
	002 Move TEMP, X8
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfEqual {13}
	006 Move W9, [X0+4]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 And W0, W10, W8
	012 Return X0
	013 Move W0, W31
	014 Return X0

Method: System.String ToString()

Disassembly:
	0x038FEC58 LDR X20, [X20 + 0xCB8]
	0x038FEC5C LDR X22, [X22 + 0xCA8]
	0x038FEC60 BL 0x1C16F10
	0x038FEC64 LDR X2, [X20]
	0x038FEC68 MOV X1, X21
	0x038FEC6C MOV X3, X31
	0x038FEC70 MOV X20, X0
	0x038FEC74 BL 0x2D2C5C4
	0x038FEC78 LDR X2, [X22]
	0x038FEC7C MOV X0, X19
	0x038FEC80 MOV X1, X20
	0x038FEC84 LDP X20, X19, [X31 + 0x20]
	0x038FEC88 LDP X22, X21, [X31 + 0x10]
	0x038FEC8C LDR X30, [X31], #0x30
	0x038FEC90 B 0x21CCA8C
	0x038FEC94 BL 0x1C16F20
	0x038FEC98 MOV X1, X31
	0x038FEC9C B 0x33BDD8C
	0x038FECA0 STP X30, X27, [X31 - 0x50]!
	0x038FECA4 STP X26, X25, [X31 + 0x10]
	0x038FECA8 STP X24, X23, [X31 + 0x20]
	0x038FECAC STP X22, X21, [X31 + 0x30]
	0x038FECB0 STP X20, X19, [X31 + 0x40]
	0x038FECB4 ADRP X19, 0xAE3000
	0x038FECB8 LDRB W8, [X19 + 0x7A5]
	0x038FECBC MOV X21, X1
	0x038FECC0 MOV X20, X0
	0x038FECC4 TBNZ X8, 0x0, 0x38FED30
	0x038FECC8 ADRP X0, 0x84F000
	0x038FECCC LDR X0, [X0 + 0xC80]
	0x038FECD0 BL 0x1C16CF4
	0x038FECD4 ADRP X0, 0x84F000
	0x038FECD8 LDR X0, [X0 + 0xCC0]
	0x038FECDC BL 0x1C16CF4
	0x038FECE0 ADRP X0, 0x84F000
	0x038FECE4 LDR X0, [X0 + 0xCC8]
	0x038FECE8 BL 0x1C16CF4
	0x038FECEC ADRP X0, 0x84F000
	0x038FECF0 LDR X0, [X0 + 0xCD0]
	0x038FECF4 BL 0x1C16CF4
	0x038FECF8 ADRP X0, 0x7F5000
	0x038FECFC LDR X0, [X0 + 0xE00]
	0x038FED00 BL 0x1C16CF4
	0x038FED04 ADRP X0, 0x84F000
	0x038FED08 LDR X0, [X0 + 0xC88]
	0x038FED0C BL 0x1C16CF4
	0x038FED10 ADRP X0, 0x84F000
	0x038FED14 LDR X0, [X0 + 0xC90]
	0x038FED18 BL 0x1C16CF4
	0x038FED1C ADRP X0, 0x7F5000
	0x038FED20 LDR X0, [X0 + 0xE18]
	0x038FED24 BL 0x1C16CF4
	0x038FED28 MOVZ W8, 0x1
	0x038FED2C STRB W8, [X19 + 0x7A5]
	0x038FED30 MOV X19, X31
	0x038FED34 CBZ X20, 0x38FEF50
	0x038FED38 CBZ X21, 0x38FEF50
	0x038FED3C ADRP X8, 0x84F000
	0x038FED40 LDR X8, [X8 + 0xCD0]
	0x038FED44 LDR X0, [X8]
	0x038FED48 BL 0x1C16F10
	0x038FED4C ADRP X8, 0x84F000
	0x038FED50 LDR X8, [X8 + 0xCC8]
	0x038FED54 MOV X19, X0
	0x038FED58 LDR X1, [X8]
	0x038FED5C BL 0x2D9FF10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE4000
	006 Move X21, 0x7F6000
	007 Move W8, [X20+1940]
	008 Move X21, [X21+2760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x7F6000
	015 Move X0, [X0+2760]
	016 Call 0x1C17CF4
	017 Move X0, 0x7F6000
	018 Move X0, [X0+2104]
	019 Call 0x1C17CF4
	020 Move X0, 0x7F6000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move X0, 0x7F6000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1940], W8
	028 Move X0, [X21]
	029 Move W1, 5
	030 Call 0x1C17D6C
	031 Compare X0, 0
	032 JumpIfEqual {72}
	033 Move W8, [X0+24]
	034 Move X20, X0
	035 Compare W8, 0
	036 JumpIfEqual {71}
	037 Move X8, 0x7F6000
	038 Move X8, [X8+3784]
	039 Move X0, X19
	040 Move X1, X31
	041 Move X8, [X8]
	042 Move [X20+32], X8
	043 Call Int32.ToString, X0
	044 Move W8, [X20+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+40], X0
	048 Move X8, 0x7F6000
	049 Move X8, [X8+2104]
	050 Add X0, X19, 4
	051 Move X1, X31
	052 Move X8, [X8]
	053 Move [X20+48], X8
	054 Call Int32.ToString, X0
	055 Move W8, [X20+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X20+56], X0
	059 Move X8, 0x7F6000
	060 Move X8, [X8+2120]
	061 Move X0, X20
	062 Move X1, X31
	063 Move X8, [X8]
	064 Move [X20+64], X8
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call String.Concat, X0
	070 Return X0
	071 Call 0x1C17F28
	072 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.ProBuilder.Edge other)

Disassembly:
	0x038FED60 ADRP X10, 0x84F000
	0x038FED64 LDR X8, [X20]
	0x038FED68 LDR X10, [X10 + 0xC88]
	0x038FED6C LDRH W9, [X8 + 0x12E]
	0x038FED70 LDR X1, [X10]
	0x038FED74 CBZ X9, 0x38FED98
	0x038FED78 LDR X10, [X8 + 0xB0]
	0x038FED7C ADD X10, X10, 0x8
	0x038FED80 LDUR X11, [X10 - 0x8]
	0x038FED84 CMP X11, X1
	0x038FED88 B.EQ 0x38FEDA8
	0x038FED8C SUBS X9, X9, 0x1
	0x038FED90 ADD X10, X10, 0x10
	0x038FED94 B.NE 0x38FED80
	0x038FED98 MOV X0, X20
	0x038FED9C MOV W2, W31
	0x038FEDA0 BL 0x1C5C788

ISIL:
	001 Move W8, [X0]
	002 Move X9, X1
	003 ShiftRight X9, 32
	004 And X9, X9, 0x7FFFFFFF
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W10, [X0+4]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, 1
	009 Return X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, [X0+4]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Return X0
	015 Move W0, W31
	016 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x038FEDA4 B 0x38FEDB4
	0x038FEDA8 LDRSW X9, [X10]
	0x038FEDAC ADD X8, X8, X9, 0x4, LSL
	0x038FEDB0 ADD X0, X8, 0x138
	0x038FEDB4 LDP X8, X1, [X0]
	0x038FEDB8 MOV X0, X20
	0x038FEDBC BLR X8
	0x038FEDC0 MOV X20, X0
	0x038FEDC4 CBZ X0, 0x38FEF70
	0x038FEDC8 ADRP X24, 0x7F5000
	0x038FEDCC ADRP X25, 0x84F000
	0x038FEDD0 ADRP X26, 0x84F000
	0x038FEDD4 ADRP X27, 0x84F000
	0x038FEDD8 LDR X24, [X24 + 0xE18]
	0x038FEDDC LDR X25, [X25 + 0xC90]
	0x038FEDE0 LDR X26, [X26 + 0xC80]
	0x038FEDE4 LDR X27, [X27 + 0xCC0]
	0x038FEDE8 LDR X8, [X20]
	0x038FEDEC LDR X1, [X24]
	0x038FEDF0 LDRH W9, [X8 + 0x12E]
	0x038FEDF4 CBZ X9, 0x38FEE18
	0x038FEDF8 LDR X10, [X8 + 0xB0]
	0x038FEDFC ADD X10, X10, 0x8
	0x038FEE00 LDUR X11, [X10 - 0x8]
	0x038FEE04 CMP X11, X1
	0x038FEE08 B.EQ 0x38FEE28
	0x038FEE0C SUBS X9, X9, 0x1
	0x038FEE10 ADD X10, X10, 0x10
	0x038FEE14 B.NE 0x38FEE00
	0x038FEE18 MOV X0, X20
	0x038FEE1C MOV W2, W31
	0x038FEE20 BL 0x1C5C788
	0x038FEE24 B 0x38FEE34
	0x038FEE28 LDRSW X9, [X10]
	0x038FEE2C ADD X8, X8, X9, 0x4, LSL
	0x038FEE30 ADD X0, X8, 0x138
	0x038FEE34 LDP X8, X1, [X0]
	0x038FEE38 MOV X0, X20
	0x038FEE3C BLR X8
	0x038FEE40 TBZ X0, 0x0, 0x38FEEE4
	0x038FEE44 LDR X8, [X20]
	0x038FEE48 LDR X1, [X25]
	0x038FEE4C LDRH W9, [X8 + 0x12E]
	0x038FEE50 CBZ X9, 0x38FEE74
	0x038FEE54 LDR X10, [X8 + 0xB0]
	0x038FEE58 ADD X10, X10, 0x8
	0x038FEE5C LDUR X11, [X10 - 0x8]
	0x038FEE60 CMP X11, X1
	0x038FEE64 B.EQ 0x38FEE84
	0x038FEE68 SUBS X9, X9, 0x1
	0x038FEE6C ADD X10, X10, 0x10
	0x038FEE70 B.NE 0x38FEE5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE4000
	006 Move W8, [X21+1941]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x81E000
	014 Move X0, [X0+1536]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1941], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x81E000
	021 Move X21, [X21+1536]
	022 Move X8, [X20]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfEqual {35}
	034 Move X1, X0
	035 Call 0x1C17DFC
	036 Move X1, [X21]
	037 Move X0, [X20]
	038 Move X8, [X0+64]
	039 Move X9, [X1+64]
	040 Move X0, X20
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17E08
	043 Move W8, [X0]
	044 Move W10, [X0+4]
	045 Move W9, [X19]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W11, [X19+4]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W0, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W9, [X19+4]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x038FEE74 MOV X0, X20
	0x038FEE78 MOV W2, W31
	0x038FEE7C BL 0x1C5C788
	0x038FEE80 B 0x38FEE90
	0x038FEE84 LDRSW X9, [X10]
	0x038FEE88 ADD X8, X8, X9, 0x4, LSL
	0x038FEE8C ADD X0, X8, 0x138
	0x038FEE90 LDP X8, X1, [X0]
	0x038FEE94 MOV X0, X20

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, 29
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Move W9, 0x58B3
	009 Add W0, W8, W9
	010 Return X0

Method: UnityEngine.ProBuilder.Edge op_Addition(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FEE98 BLR X8
	0x038FEE9C LDR X2, [X26]
	0x038FEEA0 MOV X22, X0
	0x038FEEA4 MOV X0, X21
	0x038FEEA8 MOV W1, W22
	0x038FEEAC BL 0x2A0A2A8

ISIL:
	001 And X8, X1, 0
	002 Add X8, X8, X0
	003 Add W9, W1, W0
	004 And X8, X8, 0
	005 Or X0, X8, X9
	006 Return X0

Method: UnityEngine.ProBuilder.Edge op_Subtraction(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FEEB0 LDR X2, [X26]
	0x038FEEB4 MOV W23, W0
	0x038FEEB8 UBFM X1, X22, 0x20, 0x3F
	0x038FEEBC MOV X0, X21
	0x038FEEC0 BL 0x2A0A2A8
	0x038FEEC4 CBZ X19, 0x38FEF6C

ISIL:
	001 And X8, X1, 0
	002 Subtract X8, X0, X8
	003 Subtract W9, W0, W1
	004 And X8, X8, 0
	005 Or X0, X8, X9
	006 Return X0

Method: UnityEngine.ProBuilder.Edge op_Addition(UnityEngine.ProBuilder.Edge a, System.Int32 b)

Disassembly:
	0x038FEEC8 LDR X3, [X27]
	0x038FEECC MOV W2, W23
	0x038FEED0 BFM X2, X0, 0x20, 0x1F
	0x038FEED4 MOV X0, X19
	0x038FEED8 MOV X1, X22

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Add W0, W0, W1
	005 Add W8, W8, W1
	006 NotImplemented "Instruction BFM not yet implemented."
	007 Return X0

Method: UnityEngine.ProBuilder.Edge op_Subtraction(UnityEngine.ProBuilder.Edge a, System.Int32 b)

Disassembly:
	0x038FEEDC BL 0x2DA1088
	0x038FEEE0 B 0x38FEDE8
	0x038FEEE4 MOV X21, X31
	0x038FEEE8 CBZ X20, 0x38FEF4C
	0x038FEEEC ADRP X10, 0x7F5000

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Subtract W0, W0, W1
	005 Subtract W8, W8, W1
	006 NotImplemented "Instruction BFM not yet implemented."
	007 Return X0

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FEEF0 LDR X8, [X20]
	0x038FEEF4 LDR X10, [X10 + 0xE00]
	0x038FEEF8 LDRH W9, [X8 + 0x12E]
	0x038FEEFC LDR X1, [X10]
	0x038FEF00 CBZ X9, 0x38FEF24
	0x038FEF04 LDR X10, [X8 + 0xB0]
	0x038FEF08 ADD X10, X10, 0x8
	0x038FEF0C LDUR X11, [X10 - 0x8]
	0x038FEF10 CMP X11, X1
	0x038FEF14 B.EQ 0x38FEF34
	0x038FEF18 SUBS X9, X9, 0x1
	0x038FEF1C ADD X10, X10, 0x10
	0x038FEF20 B.NE 0x38FEF0C
	0x038FEF24 MOV X0, X20
	0x038FEF28 MOV W2, W31
	0x038FEF2C BL 0x1C5C788
	0x038FEF30 B 0x38FEF40
	0x038FEF34 LDRSW X9, [X10]
	0x038FEF38 ADD X8, X8, X9, 0x4, LSL
	0x038FEF3C ADD X0, X8, 0x138
	0x038FEF40 LDP X8, X1, [X0]
	0x038FEF44 MOV X0, X20
	0x038FEF48 BLR X8
	0x038FEF4C CBNZ X21, 0x38FEF74
	0x038FEF50 MOV X0, X19
	0x038FEF54 LDP X20, X19, [X31 + 0x40]
	0x038FEF58 LDP X22, X21, [X31 + 0x30]
	0x038FEF5C LDP X24, X23, [X31 + 0x20]
	0x038FEF60 LDP X26, X25, [X31 + 0x10]
	0x038FEF64 LDP X30, X27, [X31], #0x50
	0x038FEF68 RET
	0x038FEF6C BL 0x1C16F20
	0x038FEF70 BL 0x1C16F20
	0x038FEF74 MOV X0, X21
	0x038FEF78 BL 0x1C16F18
	0x038FEF7C B 0x38FEF94

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE4000
	007 Move X21, 0x81E000
	008 Move W8, [X22+1942]
	009 Move X21, [X21+1536]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x81E000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1942], W8
	021 Move X0, [X21]
	022 Move X21, X20
	023 ShiftRight X21, 32
	024 And X21, X21, 0x7FFFFFFF
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, X19
	031 ShiftRight X8, 32
	032 And X8, X8, 0x7FFFFFFF
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W0, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 And W0, W9, W8
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FEF80 B 0x38FEF94
	0x038FEF84 B 0x38FEF94
	0x038FEF88 B 0x38FEF94
	0x038FEF8C B 0x38FEF94
	0x038FEF90 B 0x38FEF94
	0x038FEF94 MOV X22, X0
	0x038FEF98 CMP W1, 0x1
	0x038FEF9C B.NE 0x38FEFB4
	0x038FEFA0 MOV X0, X22
	0x038FEFA4 BL 0x3EB1AD0
	0x038FEFA8 LDR X21, [X0]
	0x038FEFAC BL 0x3EB1AE0
	0x038FEFB0 B 0x38FEEE8
	0x038FEFB4 MOV X21, X31
	0x038FEFB8 B 0x38FEFC0
	0x038FEFBC MOV X22, X0
	0x038FEFC0 CBZ X20, 0x38FF024
	0x038FEFC4 ADRP X10, 0x7F5000
	0x038FEFC8 LDR X8, [X20]
	0x038FEFCC LDR X10, [X10 + 0xE00]
	0x038FEFD0 LDRH W9, [X8 + 0x12E]
	0x038FEFD4 LDR X1, [X10]
	0x038FEFD8 CBZ X9, 0x38FEFFC
	0x038FEFDC LDR X10, [X8 + 0xB0]
	0x038FEFE0 ADD X10, X10, 0x8
	0x038FEFE4 LDUR X11, [X10 - 0x8]
	0x038FEFE8 CMP X11, X1
	0x038FEFEC B.EQ 0x38FF00C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE4000
	007 Move X22, 0x81E000
	008 Move W8, [X21+1943]
	009 Move X22, [X22+1536]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x81E000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1943], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Call Edge.op_Equality, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction ORN not yet implemented."
	034 And W0, W8, 1
	035 Move X30, [X31+48]
	036 Return X0

Method: UnityEngine.ProBuilder.Edge Add(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FEFF0 SUBS X9, X9, 0x1
	0x038FEFF4 ADD X10, X10, 0x10
	0x038FEFF8 B.NE 0x38FEFE4
	0x038FEFFC MOV X0, X20
	0x038FF000 MOV W2, W31
	0x038FF004 BL 0x1C5C788
	0x038FF008 B 0x38FF018
	0x038FF00C LDRSW X9, [X10]
	0x038FF010 ADD X8, X8, X9, 0x4, LSL
	0x038FF014 ADD X0, X8, 0x138
	0x038FF018 LDP X8, X1, [X0]
	0x038FF01C MOV X0, X20
	0x038FF020 BLR X8
	0x038FF024 CBNZ X21, 0x38FF030
	0x038FF028 MOV X0, X22
	0x038FF02C BL 0x1D2C690
	0x038FF030 MOV X0, X21
	0x038FF034 BL 0x1C16F18
	0x038FF038 BL 0x1990590
	0x038FF03C STP X30, X21, [X31 - 0x20]!
	0x038FF040 STP X20, X19, [X31 + 0x10]
	0x038FF044 ADRP X21, 0xAE2000
	0x038FF048 LDRB W8, [X21 + 0x7A6]
	0x038FF04C MOV X19, X1
	0x038FF050 MOV X20, X0
	0x038FF054 TBNZ X8, 0x0, 0x38FF06C
	0x038FF058 ADRP X0, 0x84E000
	0x038FF05C LDR X0, [X0 + 0xC80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE4000
	007 Move X22, 0x81D000
	008 Move W8, [X21+1944]
	009 Call 0x3EB26E4
	010 Return X0
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x81D000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1944], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And X8, X20, 0
	028 Add W9, W20, W19
	029 Add X8, X8, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 And X8, X8, 0
	035 Or X0, X8, X9
	036 Move X30, [X31+48]
	037 Return X0

Method: UnityEngine.ProBuilder.Edge Subtract(UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b)

Disassembly:
	0x038FF060 BL 0x1C16CF4
	0x038FF064 MOVZ W8, 0x1
	0x038FF068 STRB W8, [X21 + 0x7A6]
	0x038FF06C LDR X0, [X20 + 0x10]
	0x038FF070 CBZ X0, 0x38FF0BC
	0x038FF074 ADRP X21, 0x84E000
	0x038FF078 LDR X21, [X21 + 0xC80]
	0x038FF07C MOV W1, W19
	0x038FF080 LDR X2, [X21]
	0x038FF084 BL 0x2A0A2A8
	0x038FF088 LDR X8, [X20 + 0x10]
	0x038FF08C CBZ X8, 0x38FF0BC
	0x038FF090 LDR X2, [X21]
	0x038FF094 MOV W20, W0
	0x038FF098 UBFM X1, X19, 0x20, 0x3F
	0x038FF09C MOV X0, X8
	0x038FF0A0 BL 0x2A0A2A8
	0x038FF0A4 MOV W1, W20
	0x038FF0A8 BFM X1, X0, 0x20, 0x1F
	0x038FF0AC MOV X0, X19
	0x038FF0B0 LDP X20, X19, [X31 + 0x10]
	0x038FF0B4 LDP X30, X21, [X31], #0x20
	0x038FF0B8 RET
	0x038FF0BC BL 0x1C16F20
	0x038FF0C0 STR X30, [X31 - 0x30]!
	0x038FF0C4 STP X22, X21, [X31 + 0x10]
	0x038FF0C8 STP X20, X19, [X31 + 0x20]
	0x038FF0CC ADRP X21, 0xAE2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE3000
	007 Move X22, 0x81D000
	008 Move W8, [X21+1945]
	009 Move X22, [X22+1536]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x81D000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1945], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And X8, X20, 0
	027 Subtract W9, W19, W20
	028 Subtract X8, X19, X8
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 And X8, X8, 0
	034 Or X0, X8, X9
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Boolean Equals(UnityEngine.ProBuilder.Edge other, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x038FF0D0 ADRP X22, 0x84E000
	0x038FF0D4 LDRB W8, [X21 + 0x7A7]
	0x038FF0D8 LDR X22, [X22 + 0xCD8]
	0x038FF0DC MOV X19, X1
	0x038FF0E0 MOV X20, X0
	0x038FF0E4 TBNZ X8, 0x0, 0x38FF120
	0x038FF0E8 ADRP X0, 0x84E000
	0x038FF0EC LDR X0, [X0 + 0xCE0]
	0x038FF0F0 BL 0x1C16CF4
	0x038FF0F4 ADRP X0, 0x84E000
	0x038FF0F8 LDR X0, [X0 + 0xCE8]
	0x038FF0FC BL 0x1C16CF4
	0x038FF100 ADRP X0, 0x84E000
	0x038FF104 LDR X0, [X0 + 0xCF0]
	0x038FF108 BL 0x1C16CF4
	0x038FF10C ADRP X0, 0x84E000
	0x038FF110 LDR X0, [X0 + 0xCD8]
	0x038FF114 BL 0x1C16CF4
	0x038FF118 MOVZ W8, 0x1
	0x038FF11C STRB W8, [X21 + 0x7A7]
	0x038FF120 LDR X0, [X22]
	0x038FF124 BL 0x1C16F10
	0x038FF128 MOV X1, X31
	0x038FF12C MOV X21, X0
	0x038FF130 BL 0x33BDD8C
	0x038FF134 CBZ X21, 0x38FF18C
	0x038FF138 ADRP X8, 0x84E000
	0x038FF13C LDR X8, [X8 + 0xCE8]
	0x038FF140 STR X20, [X21 + 0x10]
	0x038FF144 ADRP X20, 0x84E000
	0x038FF148 ADRP X22, 0x84E000
	0x038FF14C LDR X0, [X8]
	0x038FF150 LDR X20, [X20 + 0xCF0]
	0x038FF154 LDR X22, [X22 + 0xCE0]
	0x038FF158 BL 0x1C16F10
	0x038FF15C LDR X2, [X20]
	0x038FF160 MOV X1, X21
	0x038FF164 MOV X3, X31
	0x038FF168 MOV X20, X0
	0x038FF16C BL 0x2D2C524
	0x038FF170 LDR X2, [X22]
	0x038FF174 MOV X0, X19
	0x038FF178 MOV X1, X20
	0x038FF17C LDP X20, X19, [X31 + 0x20]
	0x038FF180 LDP X22, X21, [X31 + 0x10]
	0x038FF184 LDR X30, [X31], #0x30
	0x038FF188 B 0x21CC798
	0x038FF18C BL 0x1C16F20
	0x038FF190 MOV X1, X31
	0x038FF194 B 0x33BDD8C
	0x038FF198 STR X30, [X31 - 0x30]!
	0x038FF19C STP X22, X21, [X31 + 0x10]
	0x038FF1A0 STP X20, X19, [X31 + 0x20]
	0x038FF1A4 ADRP X21, 0xAE2000
	0x038FF1A8 LDRB W8, [X21 + 0x7A8]
	0x038FF1AC MOV X19, X1
	0x038FF1B0 MOV X20, X0
	0x038FF1B4 TBNZ X8, 0x0, 0x38FF1CC
	0x038FF1B8 ADRP X0, 0x84E000
	0x038FF1BC LDR X0, [X0 + 0xC80]
	0x038FF1C0 BL 0x1C16CF4
	0x038FF1C4 MOVZ W8, 0x1
	0x038FF1C8 STRB W8, [X21 + 0x7A8]
	0x038FF1CC CBZ X20, 0x38FF230
	0x038FF1D0 MOV X0, X20
	0x038FF1D4 MOV X1, X31
	0x038FF1D8 BL 0x3916198
	0x038FF1DC CBZ X0, 0x38FF230
	0x038FF1E0 ADRP X22, 0x84E000
	0x038FF1E4 LDR X22, [X22 + 0xC80]
	0x038FF1E8 MOV W1, W19
	0x038FF1EC LDR X2, [X22]
	0x038FF1F0 BL 0x2A0A2A8
	0x038FF1F4 MOV W21, W0
	0x038FF1F8 MOV X0, X20
	0x038FF1FC MOV X1, X31
	0x038FF200 BL 0x3916198

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAE3000
	009 Move W8, [X23+1946]
	010 Move X22, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move X20, X1
	014 ShiftRight X20, 32
	015 And X20, X20, 0x7FFFFFFF
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x84F000
	021 Move X0, [X0+3200]
	022 Call 0x1C17CF4
	023 Move X0, 0x81D000
	024 Move X0, [X0+1536]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1946], W8
	028 Compare X22, 0
	029 JumpIfEqual {58}
	030 Move X24, 0x84F000
	031 Move X24, [X24+3200]
	032 Move W1, [X21]
	033 Move X0, X22
	034 Move X2, [X24]
	035 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	036 Move W1, [X21+4]
	037 Move X2, [X24]
	038 Move W21, W0
	039 Move X0, X22
	040 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	041 Move X2, [X24]
	042 Move W23, W0
	043 Move X0, X22
	044 Move W1, W19
	045 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	046 Move X2, [X24]
	047 Move W19, W0
	048 Move X0, X22
	049 Move W1, W20
	050 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 And W0, W9, W8
	058 Move X8, 0x81D000
	059 Move X8, [X8+1536]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move W8, [X21]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W9, [X21+4]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W0, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X21+4]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 Move W0, W31
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Return X0

Method: System.Boolean Contains(System.Int32 index)

Disassembly:
	0x038FF204 CBZ X0, 0x38FF230
	0x038FF208 LDR X2, [X22]
	0x038FF20C UBFM X1, X19, 0x20, 0x3F
	0x038FF210 BL 0x2A0A2A8
	0x038FF214 MOV W8, W21
	0x038FF218 LDP X20, X19, [X31 + 0x20]
	0x038FF21C LDP X22, X21, [X31 + 0x10]
	0x038FF220 BFM X8, X0, 0x20, 0x1F
	0x038FF224 MOV X0, X8

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move W8, [X0+4]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Boolean Contains(UnityEngine.ProBuilder.Edge other)

Disassembly:
	0x038FF228 LDR X30, [X31], #0x30
	0x038FF22C RET
	0x038FF230 BL 0x1C16F20
	0x038FF234 STR X30, [X31 - 0x20]!
	0x038FF238 STP X20, X19, [X31 + 0x10]
	0x038FF23C CBZ X0, 0x38FF2C4
	0x038FF240 LDR X8, [X0 + 0x30]
	0x038FF244 MOV X20, X0
	0x038FF248 CBZ X8, 0x38FF2C4
	0x038FF24C LDR W9, [X8 + 0x18]
	0x038FF250 MOV X19, X1
	0x038FF254 CMP W19, W9
	0x038FF258 B.CS 0x38FF2C8

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move W9, [X0+4]
	006 Move X10, X1
	007 ShiftRight X10, 32
	008 And X10, X10, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Or W0, W8, W9
	014 Return X0

Method: System.Boolean Contains(System.Int32 index, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x038FF25C UBFM X9, X19, 0x20, 0x1F
	0x038FF260 ADD X8, X8, X9, 0x1D, ASR
	0x038FF264 LDR X0, [X8 + 0x20]
	0x038FF268 CBZ X0, 0x38FF2C4
	0x038FF26C MOV W1, W31
	0x038FF270 MOV X2, X31
	0x038FF274 BL 0x39282DC
	0x038FF278 LDR X8, [X20 + 0x30]
	0x038FF27C CBZ X8, 0x38FF2C4
	0x038FF280 LDR W10, [X8 + 0x18]
	0x038FF284 SBFM X9, X19, 0x20, 0x3F
	0x038FF288 CMP W9, W10
	0x038FF28C B.CS 0x38FF2C8
	0x038FF290 ADD X8, X8, X9, 0x3, LSL
	0x038FF294 MOV W20, W0
	0x038FF298 LDR X0, [X8 + 0x20]
	0x038FF29C CBZ X0, 0x38FF2C4
	0x038FF2A0 MOV W1, W31
	0x038FF2A4 MOV X2, X31
	0x038FF2A8 BL 0x39282DC
	0x038FF2AC MOV W8, W20
	0x038FF2B0 LDP X20, X19, [X31 + 0x10]
	0x038FF2B4 BFM X8, X0, 0x20, 0x1F
	0x038FF2B8 MOV X0, X8
	0x038FF2BC LDR X30, [X31], #0x20
	0x038FF2C0 RET
	0x038FF2C4 BL 0x1C16F20
	0x038FF2C8 BL 0x1C16F28
	0x038FF2CC SUB X31, X31, 0x90
	0x038FF2D0 STP X29, X30, [X31 + 0x30]
	0x038FF2D4 STP X28, X27, [X31 + 0x40]
	0x038FF2D8 STP X26, X25, [X31 + 0x50]
	0x038FF2DC STP X24, X23, [X31 + 0x60]
	0x038FF2E0 STP X22, X21, [X31 + 0x70]
	0x038FF2E4 STP X20, X19, [X31 + 0x80]
	0x038FF2E8 ADRP X19, 0xAE2000
	0x038FF2EC LDRB W8, [X19 + 0x7A9]
	0x038FF2F0 MOV X23, X2
	0x038FF2F4 MOV X20, X1
	0x038FF2F8 MOV X21, X0
	0x038FF2FC TBNZ X8, 0x0, 0x38FF320

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE3000
	007 Move W8, [X22+1947]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x84F000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1947], W8
	020 Compare X19, 0
	021 JumpIfEqual {47}
	022 Move X22, 0x84F000
	023 Move X22, [X22+3200]
	024 Move X0, X19
	025 Move W1, W21
	026 Move X2, [X22]
	027 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	028 Move W1, [X20]
	029 Move X2, [X22]
	030 Move W21, W0
	031 Move X0, X19
	032 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W0, 1
	035 Move W1, [X20+4]
	036 Move X2, [X22]
	037 Move X0, X19
	038 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void GetIndices(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x038FF300 ADRP X0, 0x84E000
	0x038FF304 LDR X0, [X0 + 0xCF8]
	0x038FF308 BL 0x1C16CF4
	0x038FF30C ADRP X0, 0x84E000
	0x038FF310 LDR X0, [X0 + 0xD00]
	0x038FF314 BL 0x1C16CF4
	0x038FF318 MOVZ W8, 0x1
	0x038FF31C STRB W8, [X19 + 0x7A9]
	0x038FF320 STP X31, X31, [X31 + 0x20]
	0x038FF324 CBZ X21, 0x38FF528
	0x038FF328 LDP X22, X25, [X21 + 0x28]
	0x038FF32C MOV X0, X21
	0x038FF330 MOV X1, X20
	0x038FF334 BL 0x38FF198
	0x038FF338 CBZ X22, 0x38FF528
	0x038FF33C LDR W8, [X22 + 0x18]
	0x038FF340 STR X23, [X31 + 0x8]
	0x038FF344 CMP W8, 0x0
	0x038FF348 CSET W21, GT
	0x038FF34C CMP W8, 0x1
	0x038FF350 B.LT 0x38FF43C
	0x038FF354 ADRP X26, 0x84E000
	0x038FF358 LDR X26, [X26 + 0xCF8]
	0x038FF35C UBFM X9, X0, 0x20, 0x1F
	0x038FF360 ADD X10, X25, 0x20
	0x038FF364 SBFM X27, X0, 0x20, 0x3F
	0x038FF368 MOV X20, X0
	0x038FF36C MOV W23, W31
	0x038FF370 ADD X28, X10, X9, 0x1D, ASR
	0x038FF374 ADD X29, X10, X27, 0x3, LSL
	0x038FF378 MOVN W19, 0x0
	0x038FF37C CMP W23, W8
	0x038FF380 STP W19, W19, [X31 + 0x28]
	0x038FF384 STP W19, W19, [X31 + 0x20]
	0x038FF388 B.CS 0x38FF52C
	0x038FF38C ADD X24, X22, W23, 0x3, SXTW
	0x038FF390 LDR X8, [X24 + 0x20]!
	0x038FF394 CBZ X8, 0x38FF528
	0x038FF398 LDR X0, [X8 + 0x58]
	0x038FF39C CBNZ X0, 0x38FF3A8
	0x038FF3A0 MOV X0, X8
	0x038FF3A4 BL 0x38FFDEC
	0x038FF3A8 CBZ X25, 0x38FF528
	0x038FF3AC LDR W8, [X25 + 0x18]
	0x038FF3B0 CMP W20, W8
	0x038FF3B4 B.CS 0x38FF52C
	0x038FF3B8 LDR X8, [X28]
	0x038FF3BC CBZ X8, 0x38FF528
	0x038FF3C0 LDR X1, [X8 + 0x10]
	0x038FF3C4 LDR X4, [X26]
	0x038FF3C8 ADD X2, X31, 0x2C
	0x038FF3CC ADD X3, X31, 0x24
	0x038FF3D0 BL 0x217E2B4
	0x038FF3D4 TBZ X0, 0x0, 0x38FF428
	0x038FF3D8 LDR W8, [X22 + 0x18]
	0x038FF3DC CMP W23, W8
	0x038FF3E0 B.CS 0x38FF52C
	0x038FF3E4 LDR X8, [X24]
	0x038FF3E8 CBZ X8, 0x38FF528
	0x038FF3EC LDR X0, [X8 + 0x58]
	0x038FF3F0 CBNZ X0, 0x38FF3FC
	0x038FF3F4 MOV X0, X8
	0x038FF3F8 BL 0x38FFDEC
	0x038FF3FC LDR W8, [X25 + 0x18]
	0x038FF400 CMP W27, W8
	0x038FF404 B.CS 0x38FF52C
	0x038FF408 LDR X8, [X29]
	0x038FF40C CBZ X8, 0x38FF528
	0x038FF410 LDR X1, [X8 + 0x10]
	0x038FF414 LDR X4, [X26]
	0x038FF418 ADD X2, X31, 0x28
	0x038FF41C ADD X3, X31, 0x20
	0x038FF420 BL 0x217E2B4
	0x038FF424 TBNZ X0, 0x0, 0x38FF448
	0x038FF428 LDR W8, [X22 + 0x18]
	0x038FF42C ADD W23, W23, 0x1
	0x038FF430 CMP W23, W8
	0x038FF434 CSET W21, LT
	0x038FF438 B.LT 0x38FF37C
	0x038FF43C LDR X8, [X31 + 0x8]
	0x038FF440 STP X31, X31, [X8]
	0x038FF444 B 0x38FF504
	0x038FF448 LDR W8, [X22 + 0x18]
	0x038FF44C CMP W23, W8
	0x038FF450 B.CS 0x38FF52C
	0x038FF454 LDR X8, [X24]
	0x038FF458 CBZ X8, 0x38FF528
	0x038FF45C LDR X0, [X8 + 0x58]
	0x038FF460 CBNZ X0, 0x38FF470
	0x038FF464 MOV X0, X8
	0x038FF468 BL 0x38FFDEC
	0x038FF46C CBZ X0, 0x38FF528
	0x038FF470 LDRSW X9, [X31 + 0x2C]
	0x038FF474 LDR W8, [X0 + 0x18]
	0x038FF478 CMP W9, W8
	0x038FF47C B.CS 0x38FF52C
	0x038FF480 LDR W8, [X22 + 0x18]
	0x038FF484 CMP W23, W8
	0x038FF488 B.CS 0x38FF52C
	0x038FF48C LDR X8, [X24]
	0x038FF490 CBZ X8, 0x38FF528
	0x038FF494 ADD X9, X0, X9, 0x2, LSL
	0x038FF498 LDR X0, [X8 + 0x58]
	0x038FF49C LDR W20, [X9 + 0x20]
	0x038FF4A0 CBNZ X0, 0x38FF4B0
	0x038FF4A4 MOV X0, X8
	0x038FF4A8 BL 0x38FFDEC
	0x038FF4AC CBZ X0, 0x38FF528
	0x038FF4B0 LDRSW X8, [X31 + 0x28]
	0x038FF4B4 LDR W9, [X0 + 0x18]
	0x038FF4B8 CMP W8, W9
	0x038FF4BC B.CS 0x38FF52C
	0x038FF4C0 LDR W9, [X22 + 0x18]
	0x038FF4C4 CMP W23, W9
	0x038FF4C8 B.CS 0x38FF52C
	0x038FF4CC ADD X8, X0, X8, 0x2, LSL
	0x038FF4D0 ADRP X9, 0x84E000
	0x038FF4D4 LDR X1, [X24]
	0x038FF4D8 LDR W8, [X8 + 0x20]
	0x038FF4DC LDR X9, [X9 + 0xD00]
	0x038FF4E0 ADD X0, X31, 0x10
	0x038FF4E4 STP X31, X31, [X31 + 0x10]
	0x038FF4E8 BFM X20, X8, 0x20, 0x1F
	0x038FF4EC LDR X3, [X9]
	0x038FF4F0 MOV X2, X20
	0x038FF4F4 BL 0x25E6B18
	0x038FF4F8 LDR V0, [X31 + 0x1]
	0x038FF4FC LDR X8, [X31 + 0x8]
	0x038FF500 STR V0, [X8]
	0x038FF504 AND W0, W21, 0x1
	0x038FF508 LDP X20, X19, [X31 + 0x80]
	0x038FF50C LDP X22, X21, [X31 + 0x70]
	0x038FF510 LDP X24, X23, [X31 + 0x60]
	0x038FF514 LDP X26, X25, [X31 + 0x50]
	0x038FF518 LDP X28, X27, [X31 + 0x40]
	0x038FF51C LDP X29, X30, [X31 + 0x30]
	0x038FF520 ADD X31, X31, 0x90
	0x038FF524 RET
	0x038FF528 BL 0x1C16F20
	0x038FF52C BL 0x1C16F28
	0x038FF530 LDR X8, [X0 + 0x58]
	0x038FF534 CBZ X8, 0x38FF540
	0x038FF538 MOV X0, X8
	0x038FF53C RET
	0x038FF540 B 0x38FFDEC
	0x038FF544 STR X30, [X31 - 0x40]!
	0x038FF548 STP X24, X23, [X31 + 0x10]
	0x038FF54C STP X22, X21, [X31 + 0x20]
	0x038FF550 STP X20, X19, [X31 + 0x30]
	0x038FF554 ADRP X21, 0xAE2000
	0x038FF558 LDRB W8, [X21 + 0x7AA]
	0x038FF55C MOV X19, X1
	0x038FF560 MOV X20, X0
	0x038FF564 TBNZ X8, 0x0, 0x38FF57C
	0x038FF568 ADRP X0, 0x81C000
	0x038FF56C LDR X0, [X0 + 0x600]
	0x038FF570 BL 0x1C16CF4
	0x038FF574 MOVZ W8, 0x1
	0x038FF578 STRB W8, [X21 + 0x7AA]
	0x038FF57C CBZ X20, 0x38FF620
	0x038FF580 LDR X8, [X20 + 0x18]
	0x038FF584 CMP W8, 0x1
	0x038FF588 B.LT 0x38FF5FC
	0x038FF58C ADRP X22, 0x81C000
	0x038FF590 LDR X22, [X22 + 0x600]
	0x038FF594 MOV X21, X31
	0x038FF598 UBFM X23, X19, 0x20, 0x3F
	0x038FF59C AND X8, X8, 0x0
	0x038FF5A0 ADD X24, X20, 0x24
	0x038FF5A4 LDR X0, [X22]
	0x038FF5A8 LDR W9, [X0 + 0xE0]
	0x038FF5AC CBNZ W9, 0x38FF5B8
	0x038FF5B0 BL 0x1C16DFC
	0x038FF5B4 LDR W8, [X20 + 0x18]
	0x038FF5B8 CMP X21, W8, UXTW
	0x038FF5BC B.CS 0x38FF61C
	0x038FF5C0 LDUR W9, [X24 - 0x4]
	0x038FF5C4 CMP W9, W19
	0x038FF5C8 B.NE 0x38FF5D8
	0x038FF5CC LDR W10, [X24]
	0x038FF5D0 CMP W10, W23
	0x038FF5D4 B.EQ 0x38FF604
	0x038FF5D8 CMP W9, W23
	0x038FF5DC B.NE 0x38FF5EC
	0x038FF5E0 LDR W9, [X24]
	0x038FF5E4 CMP W9, W19
	0x038FF5E8 B.EQ 0x38FF604
	0x038FF5EC ADD X21, X21, 0x1
	0x038FF5F0 CMP X21, W8, SXTW
	0x038FF5F4 ADD X24, X24, 0x8
	0x038FF5F8 B.LT 0x38FF5A4
	0x038FF5FC MOV W0, W31
	0x038FF600 B 0x38FF608
	0x038FF604 MOVZ W0, 0x1
	0x038FF608 LDP X20, X19, [X31 + 0x30]
	0x038FF60C LDP X22, X21, [X31 + 0x20]
	0x038FF610 LDP X24, X23, [X31 + 0x10]
	0x038FF614 LDR X30, [X31], #0x40
	0x038FF618 RET
	0x038FF61C BL 0x1C16F28
	0x038FF620 BL 0x1C16F20
	0x038FF624 STR X30, [X31 - 0x10]!
	0x038FF628 CBZ X0, 0x38FF690
	0x038FF62C LDR W8, [X0 + 0x18]
	0x038FF630 CMP W8, 0x1
	0x038FF634 B.LT 0x38FF678
	0x038FF638 MOV W9, W31
	0x038FF63C CMP W8, W9
	0x038FF640 B.EQ 0x38FF68C
	0x038FF644 ADD X10, X0, W9, 0x3, SXTW
	0x038FF648 LDP W11, W10, [X10 + 0x20]
	0x038FF64C CMP W11, W1
	0x038FF650 B.NE 0x38FF65C
	0x038FF654 CMP W10, W2
	0x038FF658 B.EQ 0x38FF680
	0x038FF65C CMP W11, W2
	0x038FF660 B.NE 0x38FF66C
	0x038FF664 CMP W10, W1
	0x038FF668 B.EQ 0x38FF680
	0x038FF66C ADD W9, W9, 0x1
	0x038FF670 CMP W8, W9
	0x038FF674 B.NE 0x38FF63C
	0x038FF678 MOV W0, W31
	0x038FF67C B 0x38FF684
	0x038FF680 MOVZ W0, 0x1
	0x038FF684 LDR X30, [X31], #0x10
	0x038FF688 RET
	0x038FF68C BL 0x1C16F28
	0x038FF690 BL 0x1C16F20
	0x038FF694 STR X30, [X31 - 0x50]!
	0x038FF698 STP X26, X25, [X31 + 0x10]
	0x038FF69C STP X24, X23, [X31 + 0x20]
	0x038FF6A0 STP X22, X21, [X31 + 0x30]
	0x038FF6A4 STP X20, X19, [X31 + 0x40]
	0x038FF6A8 ADRP X22, 0xAE2000
	0x038FF6AC LDRB W8, [X22 + 0x7AB]
	0x038FF6B0 MOV X19, X2
	0x038FF6B4 MOV X20, X1
	0x038FF6B8 MOV X21, X0
	0x038FF6BC TBNZ X8, 0x0, 0x38FF6EC
	0x038FF6C0 ADRP X0, 0x81C000
	0x038FF6C4 LDR X0, [X0 + 0x600]
	0x038FF6C8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xAE3000
	011 Move W8, [X21+1948]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x7F5000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x84F000
	022 Move X0, [X0+3208]
	023 Call 0x1C17CF4
	024 Move X0, 0x84F000
	025 Move X0, [X0+3216]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F5000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x7F6000
	031 Move X0, [X0+3600]
	032 Call 0x1C17CF4
	033 Move X0, 0x7FC000
	034 Move X0, [X0+2136]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1948], W8
	038 Compare X20, 0
	039 JumpIfEqual {210}
	040 Move W8, [X20+28]
	041 Add W8, W8, 1
	042 Move [X20+24], W31
	043 Move [X20+28], W8
	044 Compare X19, 0
	045 JumpIfEqual {210}
	046 Move X10, 0x84F000
	047 Move X8, [X19]
	048 Move X10, [X10+3208]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X19
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X22, 0x7F5000
	068 Move X22, [X22+3584]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X19, X0
	072 Compare X0, 0
	073 JumpIfEqual {211}
	074 Move X23, 0x7F5000
	075 Move X24, 0x84F000
	076 Move X25, 0x7F6000
	077 Move X23, [X23+3608]
	078 Move X24, [X24+3216]
	079 Move X25, [X25+3600]
	080 Move X8, [X19]
	081 Move X1, [X23]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X19
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {172}
	105 Move X8, [X19]
	106 Move X1, [X24]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X19
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X19
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move W10, [X20+28]
	127 Move X8, [X20+16]
	128 Move X9, [X25]
	129 Add W10, W10, 1
	130 Move [X20+28], W10
	131 Compare X8, 0
	132 JumpIfEqual {208}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W11, [X8+24]
	135 Move X21, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W11, W10, 1
	138 Add X10, X8, X10
	139 Move [X20+24], W11
	140 Move [X10+32], W21
	141 Move W10, [X20+28]
	142 Add W10, W10, 1
	143 Move [X20+28], W10
	144 Move X8, [X9+32]
	145 Move X8, [X8+192]
	146 Move X2, [X8+112]
	147 Move X0, X20
	148 Move W1, W21
	149 Call List`1<Int32>.AddWithResize, X0, X1
	150 Move W10, [X20+28]
	151 Move X8, [X20+16]
	152 Move X9, [X25]
	153 Add W10, W10, 1
	154 Move [X20+28], W10
	155 Compare X8, 0
	156 JumpIfEqual {209}
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Move W11, [X8+24]
	159 Move X1, X21
	160 ShiftRight X1, 32
	161 And X1, X1, 0x7FFFFFFF
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W9, W10, 1
	164 Add X8, X8, X10
	165 Move [X20+24], W9
	166 Move [X8+32], W1
	167 Move X8, [X9+32]
	168 Move X8, [X8+192]
	169 Move X2, [X8+112]
	170 Move X0, X20
	171 Call List`1<Int32>.AddWithResize, X0, X1
	172 Move X20, X31
	173 Compare X19, 0
	174 JumpIfEqual {196}
	175 Move X8, [X19]
	176 Move X1, [X22]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X20, 0
	197 JumpIfNotEqual {212}
	198 Move X20, [X31+64]
	199 Move X19, [X31+72]
	200 Move X22, [X31+48]
	201 Move X21, [X31+56]
	202 Move X24, [X31+32]
	203 Move X23, [X31+40]
	204 Move X30, [X31+16]
	205 Move X25, [X31+24]
	206 Add X31, X31, 80
	207 Return 
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Move X0, X20
	213 Call 0x1C17F18
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Call 0x3EB2AD0
	216 Move X20, [X0]
	217 Call 0x3EB2AE0
	218 Move [X31+8], X0
	219 Move X20, X31
	220 Move [X31+8], X0
	221 Compare X19, 0
	222 JumpIfEqual {244}
	223 Move X8, [X19]
	224 Move X1, [X22]
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X19
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X19
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X20, 0
	245 JumpIfNotEqual {248}
	246 Move X0, [X31+8]
	247 Call 0x1D2D690
	248 Move X0, X20
	249 Call 0x1C17F18
	250 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x038FF6CC ADRP X0, 0x84E000
	0x038FF6D0 LDR X0, [X0 + 0xD08]
	0x038FF6D4 BL 0x1C16CF4
	0x038FF6D8 ADRP X0, 0x84E000
	0x038FF6DC LDR X0, [X0 + 0xD10]
	0x038FF6E0 BL 0x1C16CF4
	0x038FF6E4 MOVZ W8, 0x1
	0x038FF6E8 STRB W8, [X22 + 0x7AB]
	0x038FF6EC CBZ X20, 0x38FF830
	0x038FF6F0 ADRP X24, 0x84E000
	0x038FF6F4 ADRP X25, 0x84E000
	0x038FF6F8 ADRP X26, 0x81C000
	0x038FF6FC LDR X24, [X24 + 0xD08]
	0x038FF700 LDR X25, [X25 + 0xD10]
	0x038FF704 LDR X26, [X26 + 0x600]
	0x038FF708 MOV W22, W31
	0x038FF70C LDR X8, [X20]
	0x038FF710 LDR X1, [X24]
	0x038FF714 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xAE3000
	005 Move X20, 0x81D000
	006 Move W8, [X19+1949]
	007 Move X20, [X20+1536]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x81D000
	013 Move X0, [X0+1536]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1949], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move X9, TEMP
	023 Move X8, [X8+184]
	024 Move [X8], X9
	025 Move X30, [X31+32]
	026 Return 

