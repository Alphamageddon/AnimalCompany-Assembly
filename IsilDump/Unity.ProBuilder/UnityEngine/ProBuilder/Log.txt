Type: UnityEngine.ProBuilder.Log

Method: System.Void PushLogLevel(UnityEngine.ProBuilder.LogLevel level)

Disassembly:
	0x03907C2C LDR V0, [X8]
	0x03907C30 STR D0, [X19]
	0x03907C34 MOV V0.16B, V9.16B
	0x03907C38 MOV V1.16B, V8.16B
	0x03907C3C LDP X20, X19, [X31 + 0x30]
	0x03907C40 LDR X30, [X31 + 0x20]
	0x03907C44 LDP D9, D8, [X31 + 0x10]
	0x03907C48 LDP D11, D10, [X31], #0x40
	0x03907C4C RET
	0x03907C50 SUB X31, X31, 0x50
	0x03907C54 STR D12, [X31 + 0x10]
	0x03907C58 STP D11, D10, [X31 + 0x18]
	0x03907C5C STP D9, D8, [X31 + 0x28]
	0x03907C60 STR X30, [X31 + 0x38]
	0x03907C64 STP X20, X19, [X31 + 0x40]
	0x03907C68 ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907C6C MOV V9.16B, V0.16B
	0x03907C70 LDR V0, [X8 + 0x104]
	0x03907C74 MOV X19, X0
	0x03907C78 ADD X0, X31, 0xC
	0x03907C7C ADD X1, X31, 0x8
	0x03907C80 FMUL S10, S2, S0
	0x03907C84 MOV V0.16B, V10.16B
	0x03907C88 MOV V8.16B, V1.16B
	0x03907C8C BL 0x3EB1BC0
	0x03907C90 LDP S12, S11, [X31 + 0x8]
	0x03907C94 MOV V0.16B, V10.16B
	0x03907C98 BL 0x3EB1E50
	0x03907C9C FMUL S0, S0, S0
	0x03907CA0 FMUL S2, S9, S9
	0x03907CA4 FMUL S1, S8, S8
	0x03907CA8 FMUL S4, S2, S0
	0x03907CAC FDIV S0, S1, S0
	0x03907CB0 FADD S4, S1, S4
	0x03907CB4 FMUL S3, S9, S8
	0x03907CB8 FADD S0, S2, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move X20, 0x847000
	007 Move W8, [X21+2017]
	008 Move X20, [X20+2768]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x847000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move X0, 0x847000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2017], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {45}
	032 Move X9, 0x847000
	033 Move X9, [X9+3840]
	034 Move W1, [X8+8]
	035 Move X2, [X9]
	036 Call Stack`1<Int32Enum>.Push, X0, X1
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move [X8+8], W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void PopLogLevel()

Disassembly:
	0x03907CBC FSQRT S4, S4
	0x03907CC0 FSQRT S0, S0
	0x03907CC4 FDIV S4, S3, S4
	0x03907CC8 FCMP S12, 0x0
	0x03907CCC FDIV S0, S3, S0
	0x03907CD0 FNEG S3, S4
	0x03907CD4 FNEG S5, S0
	0x03907CD8 FCSEL S8, S3, S4, MI
	0x03907CDC FCMP S11, 0x0
	0x03907CE0 FCSEL S9, S5, S0, MI
	0x03907CE4 FNEG S0, S9
	0x03907CE8 FDIV S10, S8, S2
	0x03907CEC FDIV S11, S0, S1
	0x03907CF0 STP S11, S10, [X19]
	0x03907CF4 ADRP X20, 0xAD2000
	0x03907CF8 LDRB W8, [X20 + 0x818]
	0x03907CFC CBNZ W8, 0x3907D18
	0x03907D00 ADRP X0, 0x7EC000
	0x03907D04 LDR X0, [X0 + 0x5A8]
	0x03907D08 BL 0x1C16CF4
	0x03907D0C MOVZ W8, 0x1
	0x03907D10 STRB W8, [X20 + 0x818]
	0x03907D14 LDP S11, S10, [X19]
	0x03907D18 ADRP X8, 0x7EC000
	0x03907D1C LDR X8, [X8 + 0x5A8]
	0x03907D20 LDR X0, [X8]
	0x03907D24 LDR W8, [X0 + 0xE0]
	0x03907D28 CBNZ W8, 0x3907D30
	0x03907D2C BL 0x1C16DFC
	0x03907D30 ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907D34 LDR V1, [X8 + 0x17C]
	0x03907D38 FMUL S0, S11, S11
	0x03907D3C FMUL S2, S10, S10
	0x03907D40 FADD S0, S0, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xADB000
	005 Move X19, 0x847000
	006 Move W8, [X20+2018]
	007 Move X19, [X19+2768]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x847000
	013 Move X0, [X0+2768]
	014 Call 0x1C17CF4
	015 Move X0, 0x847000
	016 Move X0, [X0+3848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2018], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move X8, 0x847000
	031 Move X8, [X8+3848]
	032 Move X1, [X8]
	033 Call Stack`1<Int32Enum>.Pop, X0
	034 Move X8, [X19]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8+8], W0
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void SetLogLevel(UnityEngine.ProBuilder.LogLevel level)

Disassembly:
	0x03907D44 FSQRT S0, S0
	0x03907D48 FCMP S0, S1
	0x03907D4C B.LE 0x3907D60
	0x03907D50 LDR V1, [X19]
	0x03907D54 UNIMPLEMENTED
	0x00000000 INVALID
	0x03907D5C B 0x3907D94
	0x03907D60 ADRP X20, 0xAD2000
	0x03907D64 LDRB W8, [X20 + 0x78F]
	0x03907D68 CBNZ W8, 0x3907D80
	0x03907D6C ADRP X0, 0x7F4000
	0x03907D70 LDR X0, [X0 + 0xF08]
	0x03907D74 BL 0x1C16CF4
	0x03907D78 MOVZ W8, 0x1
	0x03907D7C STRB W8, [X20 + 0x78F]
	0x03907D80 ADRP X8, 0x7F4000
	0x03907D84 LDR X8, [X8 + 0xF08]
	0x03907D88 LDR X8, [X8]
	0x03907D8C LDR X8, [X8 + 0xB8]
	0x03907D90 LDR V0, [X8]
	0x03907D94 STR D0, [X19]
	0x03907D98 MOV V0.16B, V8.16B
	0x03907D9C MOV V1.16B, V9.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move X20, 0x847000
	007 Move W8, [X21+2019]
	008 Move X20, [X20+2768]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x847000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2019], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+8], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void SetOutput(UnityEngine.ProBuilder.LogOutput output)

Disassembly:
	0x03907DA0 LDP X20, X19, [X31 + 0x40]
	0x03907DA4 LDR X30, [X31 + 0x38]
	0x03907DA8 LDP D9, D8, [X31 + 0x28]
	0x03907DAC LDP D11, D10, [X31 + 0x18]
	0x03907DB0 LDR V12, [X31 + 0x10]
	0x03907DB4 ADD X31, X31, 0x50
	0x03907DB8 RET
	0x03907DBC SUB X31, X31, 0x40
	0x03907DC0 STR D12, [X31 + 0x10]
	0x03907DC4 STP D11, D10, [X31 + 0x18]
	0x03907DC8 STP D9, D8, [X31 + 0x28]
	0x03907DCC STR X30, [X31 + 0x38]
	0x03907DD0 ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907DD4 LDR V10, [X8 + 0x104]
	0x03907DD8 MOV V9.16B, V0.16B
	0x03907DDC ADD X0, X31, 0xC
	0x03907DE0 ADD X1, X31, 0x8
	0x03907DE4 FMUL S0, S1, S10
	0x03907DE8 MOV V8.16B, V2.16B
	0x03907DEC BL 0x3EB1BC0
	0x03907DF0 LDP S11, S12, [X31 + 0x8]
	0x03907DF4 FMUL S0, S8, S10
	0x03907DF8 ADD X0, X31, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move X20, 0x847000
	007 Move W8, [X21+2020]
	008 Move X20, [X20+2768]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x847000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2020], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+12], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void SetLogFile(System.String path)

Disassembly:
	0x03907DFC ADD X1, X31, 0x0
	0x03907E00 BL 0x3EB1BC0
	0x03907E04 LDP S2, S0, [X31]
	0x03907E08 FMUL S1, S12, S9
	0x03907E0C FMUL S3, S11, S9
	0x03907E10 LDR X30, [X31 + 0x38]
	0x03907E14 FMUL S2, S2, S9
	0x03907E18 LDP D9, D8, [X31 + 0x28]
	0x03907E1C LDP D11, D10, [X31 + 0x18]
	0x03907E20 LDR V12, [X31 + 0x10]
	0x03907E24 FMUL S1, S1, S0
	0x03907E28 FMUL S0, S3, S0
	0x03907E2C ADD X31, X31, 0x40
	0x03907E30 RET
	0x03907E34 STP D13, D12, [X31 - 0x40]!
	0x03907E38 STP D11, D10, [X31 + 0x10]
	0x03907E3C STP D9, D8, [X31 + 0x20]
	0x03907E40 STP X30, X19, [X31 + 0x30]
	0x03907E44 ADRP X19, 0xAD1000
	0x03907E48 LDRB W8, [X19 + 0xA1E]
	0x03907E4C MOV V10.16B, V3.16B
	0x03907E50 MOV V8.16B, V2.16B
	0x03907E54 MOV V11.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move X20, 0x847000
	007 Move W8, [X21+2021]
	008 Move X20, [X20+2768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x847000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2021], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+16], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void Debug(T value)

Disassembly:
	0x02215A48 ADRP X9, 0x1EDE000

ISIL:
	001 Return 

Method: System.Void Debug(System.String message)

Disassembly:
	0x03907E58 MOV V9.16B, V0.16B
	0x03907E5C CBNZ W8, 0x3907E74
	0x03907E60 ADRP X0, 0x7EC000
	0x03907E64 LDR X0, [X0 + 0x5A8]
	0x03907E68 BL 0x1C16CF4
	0x03907E6C MOVZ W8, 0x1
	0x03907E70 STRB W8, [X19 + 0xA1E]
	0x03907E74 ADRP X19, 0x7EC000
	0x03907E78 LDR X19, [X19 + 0x5A8]
	0x03907E7C FMUL S0, S9, S9
	0x03907E80 FMUL S1, S11, S11
	0x03907E84 FADD S12, S0, S1
	0x03907E88 LDR X0, [X19]
	0x03907E8C FMUL S0, S8, S8
	0x03907E90 FMUL S1, S10, S10
	0x03907E94 FADD S13, S0, S1
	0x03907E98 LDR W8, [X0 + 0xE0]
	0x03907E9C CBNZ W8, 0x3907EA4
	0x03907EA0 BL 0x1C16DFC
	0x03907EA4 ADRP X8, 0xFFFFFFFFFD1E2000
	0x03907EA8 LDR V1, [X8 + 0xFE8]
	0x03907EAC FMUL S0, S12, S13

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xADB000
	006 Move X21, 0x847000
	007 Move W8, [X20+2022]
	008 Move X21, [X21+2768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x847000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2022], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 3
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Void Debug(System.String format, System.Object[] values)

Disassembly:
	0x03907F80 FSUB S5, S6, S5

ISIL:
	001 Return 

Method: System.Void Info(System.String format, System.Object[] values)

Disassembly:
	0x03907F84 FSUB S1, S1, S16
	0x03907F88 FSUB S0, S0, S7
	0x03907F8C FMUL S3, S3, S3
	0x03907F90 FMUL S4, S4, S4
	0x03907F94 FMUL S18, S18, S18
	0x03907F98 FADD S17, S19, S17
	0x03907F9C FSUB S2, S2, S6
	0x03907FA0 FMUL S5, S5, S5
	0x03907FA4 FMUL S0, S0, S0
	0x03907FA8 FMUL S1, S1, S1
	0x03907FAC FADD S3, S3, S4
	0x03907FB0 FADD S17, S18, S17
	0x03907FB4 FMUL S2, S2, S2
	0x03907FB8 FADD S0, S0, S1
	0x03907FBC FADD S1, S5, S3
	0x03907FC0 FADD S6, S17, S17
	0x03907FC4 FADD S0, S2, S0
	0x03907FC8 FADD S3, S1, S1
	0x03907FCC FMUL S2, S6, S1
	0x03907FD0 FADD S4, S0, S0
	0x03907FD4 FMUL S5, S0, S0
	0x03907FD8 FMUL S0, S0, S3
	0x03907FDC FMUL S3, S17, S4
	0x03907FE0 FADD S0, S2, S0
	0x03907FE4 FMUL S7, S17, S17
	0x03907FE8 FADD S0, S3, S0
	0x03907FEC FMUL S1, S1, S1
	0x03907FF0 FSUB S0, S0, S7
	0x03907FF4 FSUB S0, S0, S1
	0x03907FF8 MOVZ W8, 0x3D800000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xADB000
	007 Move X21, 0x847000
	008 Move W8, [X22+2023]
	009 Move X21, [X21+2768]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x847000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2023], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X8, [X21]
	026 Move X19, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]

Method: System.Void Info(System.String message)

Disassembly:
	0x03907FFC FSUB S0, S0, S5
	0x03908000 FMOV S1, W8
	0x03908004 FMUL S0, S0, S1
	0x03908008 FSQRT S0, S0
	0x0390800C RET
	0x03908010 SUB X31, X31, 0x50
	0x03908014 STR D8, [X31 + 0x10]
	0x03908018 STR X30, [X31 + 0x18]
	0x0390801C STP X24, X23, [X31 + 0x20]
	0x03908020 STP X22, X21, [X31 + 0x30]
	0x03908024 STP X20, X19, [X31 + 0x40]
	0x03908028 CBZ X1, 0x390811C
	0x0390802C LDR W21, [X1 + 0x18]
	0x03908030 MOV X19, X1
	0x03908034 CMP W21, 0x1
	0x03908038 B.LT 0x39080F4
	0x0390803C MOV X20, X0
	0x03908040 FMOV S8, W31
	0x03908044 MOVZ W22, 0x2
	0x03908048 MOVZ W23, 0xC
	0x0390804C SUB W10, W22, 0x2
	0x03908050 CMP W10, W21
	0x03908054 B.CS 0x3908118
	0x03908058 CBZ X20, 0x390811C
	0x0390805C ADD X8, X19, W10, 0x2, SXTW
	0x03908060 LDRSW X8, [X8 + 0x20]
	0x03908064 LDR W9, [X20 + 0x18]
	0x03908068 CMP W8, W9
	0x0390806C B.CS 0x3908118
	0x03908070 ADD W11, W10, 0x1
	0x03908074 CMP W11, W21
	0x03908078 B.CS 0x3908118

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADA000
	006 Move X20, 0x846000
	007 Move W8, [X21+2024]
	008 Move X20, [X20+2768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x846000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2024], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+8]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 4
	029 Compare TEMP, 4
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, 3
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Log.DoPrint, X0, X1
	047 Return 

Method: System.Void Warning(System.String format, System.Object[] values)

Disassembly:
	0x0390807C SUB W10, W22, 0x1
	0x03908080 ADD X10, X19, W10, 0x2, SXTW
	0x03908084 LDRSW X10, [X10 + 0x20]
	0x03908088 CMP W10, W9
	0x0390808C B.CS 0x3908118
	0x03908090 ADD W24, W11, 0x1
	0x03908094 CMP W24, W21
	0x03908098 B.CS 0x3908118
	0x0390809C ADD X11, X19, W22, 0x2, SXTW
	0x039080A0 LDRSW X11, [X11 + 0x20]
	0x039080A4 CMP W11, W9
	0x039080A8 B.CS 0x3908118
	0x039080AC MADD X8, X8, X23, X20
	0x039080B0 MADD X9, X10, X23, X20
	0x039080B4 MADD X10, X11, X23, X20
	0x039080B8 LDP S0, S1, [X8 + 0x20]
	0x039080BC LDR V2, [X8 + 0x28]
	0x039080C0 LDP S3, S4, [X9 + 0x20]
	0x039080C4 LDR V5, [X9 + 0x28]
	0x039080C8 LDR X8, [X10 + 0x20]
	0x039080CC LDR V6, [X10 + 0x28]
	0x039080D0 STR X8, [X31]
	0x039080D4 STR S6, [X31 + 0x8]
	0x039080D8 BL 0x3907F5C
	0x039080DC ADD W8, W24, 0x1
	0x039080E0 FADD S8, S8, S0
	0x039080E4 CMP W8, W21
	0x039080E8 ADD W22, W22, 0x3
	0x039080EC B.LT 0x390804C
	0x039080F0 B 0x39080F8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xADA000
	007 Move X21, 0x846000
	008 Move W8, [X22+2025]
	009 Move X21, [X21+2768]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x846000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2025], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X8, [X21]
	026 Move X19, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]

Method: System.Void Warning(System.String message)

Disassembly:
	0x039080F4 FMOV S8, W31
	0x039080F8 MOV V0.16B, V8.16B
	0x039080FC LDP X20, X19, [X31 + 0x40]
	0x03908100 LDP X22, X21, [X31 + 0x30]
	0x03908104 LDP X24, X23, [X31 + 0x20]
	0x03908108 LDR X30, [X31 + 0x18]
	0x0390810C LDR V8, [X31 + 0x10]
	0x03908110 ADD X31, X31, 0x50
	0x03908114 RET
	0x03908118 BL 0x1C16F28
	0x0390811C BL 0x1C16F20
	0x03908120 STP D11, D10, [X31 - 0x30]!
	0x03908124 STP D9, D8, [X31 + 0x10]
	0x03908128 STR X30, [X31 + 0x20]
	0x0390812C ADRP X8, 0xFFFFFFFFFD1E2000
	0x03908130 MOV V11.16B, V0.16B
	0x03908134 LDR V0, [X8 + 0x104]
	0x03908138 ADD X0, X31, 0x2C
	0x0390813C ADD X1, X31, 0x28
	0x03908140 MOV V8.16B, V3.16B
	0x03908144 FMUL S0, S4, S0
	0x03908148 MOV V9.16B, V2.16B
	0x0390814C MOV V10.16B, V1.16B
	0x03908150 BL 0x3EB1BC0
	0x03908154 LDP S0, S1, [X31 + 0x28]
	0x03908158 FSUB S2, S10, S8
	0x0390815C FSUB S3, S11, S9
	0x03908160 LDR X30, [X31 + 0x20]
	0x03908164 FMUL S4, S3, S0
	0x03908168 FMUL S5, S2, S1
	0x0390816C FMUL S0, S2, S0
	0x03908170 FMUL S1, S3, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADA000
	006 Move X20, 0x846000
	007 Move W8, [X21+2026]
	008 Move X20, [X20+2768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x846000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2026], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+8]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 2
	029 Compare TEMP, 2
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, 2
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Log.DoPrint, X0, X1
	047 Return 

Method: System.Void Error(System.String format, System.Object[] values)

Disassembly:
	0x03908174 FADD S2, S4, S5
	0x03908178 FSUB S0, S0, S1
	0x0390817C FADD S1, S8, S0
	0x03908180 FADD S0, S9, S2
	0x03908184 LDP D9, D8, [X31 + 0x10]
	0x03908188 LDP D11, D10, [X31], #0x30
	0x0390818C RET
	0x03908190 FSUB S0, S0, S2
	0x03908194 FSUB S1, S1, S3
	0x03908198 FMUL S0, S0, S4
	0x0390819C FMUL S1, S1, S5
	0x039081A0 FADD S0, S2, S0
	0x039081A4 FADD S1, S3, S1
	0x039081A8 RET
	0x039081AC FNEG S1, S1
	0x039081B0 MOV V2.16B, V0.16B
	0x039081B4 MOV V0.16B, V1.16B
	0x039081B8 MOV V1.16B, V2.16B
	0x039081BC RET
	0x039081C0 STP D15, D14, [X31 - 0x60]!
	0x039081C4 STP D13, D12, [X31 + 0x10]
	0x039081C8 STP D11, D10, [X31 + 0x20]
	0x039081CC STP D9, D8, [X31 + 0x30]
	0x039081D0 STR X30, [X31 + 0x40]
	0x039081D4 STP X20, X19, [X31 + 0x50]
	0x039081D8 ADRP X19, 0xAD0000
	0x039081DC LDRB W8, [X19 + 0xA1E]
	0x039081E0 MOV V8.16B, V1.16B
	0x039081E4 MOV V9.16B, V0.16B
	0x039081E8 FSUB S12, S4, S2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xADA000
	007 Move X21, 0x846000
	008 Move W8, [X22+2027]
	009 Move X21, [X21+2768]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x846000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2027], W8
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X31
	024 Call String.Format, X0, X1
	025 Move X8, [X21]
	026 Move X19, X0
	027 Move W9, [X8+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {32}
	030 Move X0, X8
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Call Log.Error, X0
	039 Return 

Method: System.Void Error(System.String message)

Disassembly:
	0x038FBC88 B 0x38FBCA0
	0x038FBC8C FCMP S2, S4
	0x038FBC90 B.PL 0x38FBC9C
	0x038FBC94 MOVZ W8, 0x2
	0x038FBC98 B 0x38FBCA0
	0x038FBC9C MOV W8, W31
	0x038FBCA0 FCMP S1, S5
	0x038FBCA4 FADD S3, S3, S1
	0x038FBCA8 B.LE 0x38FBCB4
	0x038FBCAC ORR W8, W8, 0x4
	0x038FBCB0 B 0x38FBCC0
	0x038FBCB4 ORR W9, W8, 0x8
	0x038FBCB8 FCMP S3, S5
	0x038FBCBC CSEL W8, W9, W8, MI
	0x038FBCC0 FCMP S0, S6
	0x038FBCC4 B.LE 0x38FBCD0
	0x038FBCC8 MOVZ W9, 0x1
	0x038FBCCC B 0x38FBCE4
	0x038FBCD0 FCMP S2, S6
	0x038FBCD4 B.PL 0x38FBCE0
	0x038FBCD8 MOVZ W9, 0x2
	0x038FBCDC B 0x38FBCE4
	0x038FBCE0 MOV W9, W31
	0x038FBCE4 FCMP S1, S7
	0x038FBCE8 B.LE 0x38FBCF4
	0x038FBCEC ORR W9, W9, 0x4
	0x038FBCF0 B 0x38FBD00
	0x038FBCF4 ORR W10, W9, 0x8
	0x038FBCF8 FCMP S3, S7
	0x038FBCFC CSEL W9, W10, W9, MI
	0x038FBD00 ORR W10, W8, W9, 0x0
	0x038FBD04 CMP W10, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE7000
	006 Move X20, 0x853000
	007 Move W8, [X21+2028]
	008 Move X20, [X20+2768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x853000
	015 Move X0, [X0+2768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2028], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+8]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, W31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Log.DoPrint, X0, X1
	047 Return 

Method: System.Void Watch(T key, K value)

Disassembly:
	0x02215B30 B 0x32C13AC
	0x02215B34 STP X30, X19, [X31 - 0x10]!
	0x02215B38 LDR X8, [X0 + 0x38]
	0x02215B3C CBNZ X8, 0x2215B70
	0x02215B40 MOV X19, X0
	0x02215B44 ADRP X0, 0x1F06000
	0x02215B48 LDR X0, [X0 + 0x850]
	0x02215B4C BL 0x1C16CF4
	0x02215B50 ADRP X0, 0x1EDE000
	0x02215B54 LDR X0, [X0 + 0x6C0]
	0x02215B58 BL 0x1C16CF4
	0x02215B5C LDR X8, [X19 + 0x38]
	0x02215B60 CBNZ X8, 0x2215B70
	0x02215B64 MOV X0, X19
	0x02215B68 BL 0x1C5C6E0
	0x02215B6C LDR X8, [X19 + 0x38]
	0x02215B70 ADRP X9, 0x1EDE000
	0x02215B74 LDR X9, [X9 + 0x6C0]
	0x02215B78 LDR X19, [X8]
	0x02215B7C LDR X0, [X9]
	0x02215B80 LDR W9, [X0 + 0xE0]
	0x02215B84 CBNZ W9, 0x2215B8C
	0x02215B88 BL 0x1C16DFC
	0x02215B8C MOV X0, X19
	0x02215B90 MOV X1, X31
	0x02215B94 BL 0x338C698
	0x02215B98 ADRP X8, 0x1F06000
	0x02215B9C LDR X8, [X8 + 0x850]
	0x02215BA0 MOV X19, X0
	0x02215BA4 LDR X8, [X8]
	0x02215BA8 LDR W9, [X8 + 0xE0]
	0x02215BAC CBNZ W9, 0x2215BB8
	0x02215BB0 MOV X0, X8
	0x02215BB4 BL 0x1C16DFC
	0x02215BB8 MOV X0, X19
	0x02215BBC MOV X1, X31
	0x02215BC0 LDP X30, X19, [X31], #0x10
	0x02215BC4 B 0x32C13AC
	0x02215BC8 STP X30, X19, [X31 - 0x10]!
	0x02215BCC LDR X8, [X0 + 0x38]
	0x02215BD0 CBNZ X8, 0x2215C04
	0x02215BD4 MOV X19, X0
	0x02215BD8 ADRP X0, 0x1F06000
	0x02215BDC LDR X0, [X0 + 0x850]
	0x02215BE0 BL 0x1C16CF4
	0x02215BE4 ADRP X0, 0x1EDE000
	0x02215BE8 LDR X0, [X0 + 0x6C0]
	0x02215BEC BL 0x1C16CF4
	0x02215BF0 LDR X8, [X19 + 0x38]
	0x02215BF4 CBNZ X8, 0x2215C04
	0x02215BF8 MOV X0, X19
	0x02215BFC BL 0x1C5C6E0
	0x02215C00 LDR X8, [X19 + 0x38]
	0x02215C04 ADRP X9, 0x1EDE000
	0x02215C08 LDR X9, [X9 + 0x6C0]
	0x02215C0C LDR X19, [X8]
	0x02215C10 LDR X0, [X9]
	0x02215C14 LDR W9, [X0 + 0xE0]
	0x02215C18 CBNZ W9, 0x2215C20
	0x02215C1C BL 0x1C16DFC
	0x02215C20 MOV X0, X19
	0x02215C24 MOV X1, X31
	0x02215C28 BL 0x338C698
	0x02215C2C ADRP X8, 0x1F06000
	0x02215C30 LDR X8, [X8 + 0x850]
	0x02215C34 MOV X19, X0
	0x02215C38 LDR X8, [X8]
	0x02215C3C LDR W9, [X8 + 0xE0]
	0x02215C40 CBNZ W9, 0x2215C4C
	0x02215C44 MOV X0, X8
	0x02215C48 BL 0x1C16DFC
	0x02215C4C MOV X0, X19
	0x02215C50 MOV X1, X31
	0x02215C54 LDP X30, X19, [X31], #0x10
	0x02215C58 B 0x32C13AC
	0x02215C5C STP X30, X19, [X31 - 0x10]!
	0x02215C60 LDR X8, [X0 + 0x38]
	0x02215C64 CBNZ X8, 0x2215C98
	0x02215C68 MOV X19, X0
	0x02215C6C ADRP X0, 0x1F06000
	0x02215C70 LDR X0, [X0 + 0x850]
	0x02215C74 BL 0x1C16CF4
	0x02215C78 ADRP X0, 0x1EDE000
	0x02215C7C LDR X0, [X0 + 0x6C0]
	0x02215C80 BL 0x1C16CF4
	0x02215C84 LDR X8, [X19 + 0x38]
	0x02215C88 CBNZ X8, 0x2215C98
	0x02215C8C MOV X0, X19
	0x02215C90 BL 0x1C5C6E0
	0x02215C94 LDR X8, [X19 + 0x38]
	0x02215C98 ADRP X9, 0x1EDE000
	0x02215C9C LDR X9, [X9 + 0x6C0]
	0x02215CA0 LDR X19, [X8]
	0x02215CA4 LDR X0, [X9]
	0x02215CA8 LDR W9, [X0 + 0xE0]
	0x02215CAC CBNZ W9, 0x2215CB4
	0x02215CB0 BL 0x1C16DFC
	0x02215CB4 MOV X0, X19
	0x02215CB8 MOV X1, X31
	0x02215CBC BL 0x338C698
	0x02215CC0 ADRP X8, 0x1F06000
	0x02215CC4 LDR X8, [X8 + 0x850]
	0x02215CC8 MOV X19, X0
	0x02215CCC LDR X8, [X8]
	0x02215CD0 LDR W9, [X8 + 0xE0]
	0x02215CD4 CBNZ W9, 0x2215CE0
	0x02215CD8 MOV X0, X8
	0x02215CDC BL 0x1C16DFC
	0x02215CE0 MOV X0, X19
	0x02215CE4 MOV X1, X31
	0x02215CE8 LDP X30, X19, [X31], #0x10
	0x02215CEC B 0x32C13AC
	0x02215CF0 STP X30, X19, [X31 - 0x10]!
	0x02215CF4 LDR X8, [X0 + 0x38]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move [X29-32], X1
	018 Move [X29-24], X0
	019 Move X8, [X2+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {34}
	022 Move X0, 0x1EDF000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F08000
	026 Move X0, [X0+80]
	027 Call 0x1C17CF4
	028 Move X8, [X20+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X20
	032 Call 0x1C5D6E0
	033 Move X8, [X20+56]
	034 Move X0, [X8]
	035 Move W9, [X0+309]
	036 Move TEMP, X9
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {42}
	040 Call 0x1C5D684
	041 Move X8, [X20+56]
	042 Move W9, [X0+252]
	043 Add X10, X31, 0
	044 Add W9, W9, 16
	045 Add X9, X9, 15
	046 And X9, X9, 0x1FFFFFFFF
	047 Subtract X23, X10, X9
	048 Add X31, X23, 0
	049 Move X0, [X8+16]
	050 Move W9, [X0+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {57}
	055 Call 0x1C5D684
	056 Move X8, [X20+56]
	057 Move W9, [X0+252]
	058 Add X10, X31, 0
	059 Add W9, W9, 16
	060 Add X9, X9, 15
	061 And X9, X9, 0x1FFFFFFFF
	062 Subtract X22, X10, X9
	063 Add X31, X22, 0
	064 Move X0, [X8]
	065 Move W9, [X0+309]
	066 Move TEMP, X9
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {72}
	070 Call 0x1C5D684
	071 Move X8, [X20+56]
	072 Move X9, [X8]
	073 Move X1, [X8+8]
	074 Subtract X8, X29, 24
	075 Subtract X5, X29, 16
	076 Move X2, X23
	077 Move W9, [X9+40]
	078 Move X4, X31
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Call 0x1C18728
	082 Move X9, [X20+56]
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X9+16]
	085 Move W10, [X8+309]
	086 Move TEMP, X10
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {95}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X9, [X20+56]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 Move X8, [X9+16]
	095 Move X0, X8
	096 Move W8, [X8+40]
	097 Move X1, [X9+24]
	098 Subtract X5, X29, 16
	099 Move X2, X22
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X8, X29, 32
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move X4, X31
	104 Call 0x1C18728
	105 Move X8, 0x1F08000
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Move X8, [X8+80]
	108 Move X1, X21
	109 Move X3, X31
	110 Move X0, [X8]
	111 Call String.Format, X0, X1, X2
	112 Move X8, 0x1EDF000
	113 Move X8, [X8+2600]
	114 Move X19, X0
	115 Move X8, [X8]
	116 Move W9, [X8+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Move X0, X19
	122 Move X1, X31
	123 Call Debug.Log, X0
	124 Move X8, [X24+40]
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X31, X29, 0
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X29, [X31+64]
	135 Move X30, [X31+72]
	136 Return 
	137 Call 0x3EB2B20

Method: System.Void DoPrint(System.String message, UnityEngine.LogType type)

Disassembly:
	0x03907EB0 FSQRT S0, S0
	0x03907EB4 FCMP S0, S1
	0x03907EB8 FMOV S1, W31
	0x03907EBC B.MI 0x3907F0C
	0x03907EC0 LDR X0, [X19]
	0x03907EC4 FMUL S1, S9, S8
	0x03907EC8 FMUL S2, S11, S10
	0x03907ECC FADD S1, S1, S2
	0x03907ED0 LDR W8, [X0 + 0xE0]
	0x03907ED4 FDIV S0, S1, S0
	0x03907ED8 FMOV S1, 1
	0x03907EDC FMOV S2, -1
	0x03907EE0 FMIN S1, S0, S1
	0x03907EE4 FCMP S0, S2
	0x03907EE8 FCSEL S10, S1, S2, PL
	0x03907EEC CBNZ W8, 0x3907EF4
	0x03907EF0 BL 0x1C16DFC
	0x03907EF4 FCVT S0, S10
	0x03907EF8 BL 0x3EB1B80
	0x03907EFC ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907F00 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03907F08 FMUL S1, S0, S1
	0x03907F0C MOVZ W8, 0x43B40000
	0x03907F10 FSUB S0, S8, S9
	0x03907F14 LDP X30, X19, [X31 + 0x30]
	0x03907F18 LDP D9, D8, [X31 + 0x20]
	0x03907F1C LDP D11, D10, [X31 + 0x10]
	0x03907F20 FMOV S2, W8
	0x03907F24 FSUB S2, S2, S1
	0x03907F28 FCMP S0, 0x0
	0x03907F2C FCSEL S0, S2, S1, MI
	0x03907F30 LDP D13, D12, [X31], #0x40
	0x03907F34 RET
	0x03907F38 FSUB S1, S4, S1
	0x03907F3C FSUB S0, S3, S0
	0x03907F40 FSUB S2, S5, S2
	0x03907F44 FMUL S0, S0, S0
	0x03907F48 FMUL S1, S1, S1
	0x03907F4C FADD S0, S0, S1
	0x03907F50 FMUL S1, S2, S2
	0x03907F54 FADD S0, S1, S0
	0x03907F58 RET
	0x03907F5C LDP S16, S6, [X31 + 0x4]
	0x03907F60 LDR V7, [X31]
	0x03907F64 FSUB S17, S4, S1
	0x03907F68 FSUB S19, S3, S0
	0x03907F6C FSUB S4, S16, S4
	0x03907F70 FSUB S3, S7, S3
	0x03907F74 FSUB S18, S5, S2
	0x03907F78 FMUL S19, S19, S19
	0x03907F7C FMUL S17, S17, S17

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xADB000
	007 Move X21, 0x847000
	008 Move W8, [X22+2029]
	009 Move X21, [X21+2768]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x847000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2029], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W8, [X8+12]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {41}
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move W1, W20
	039 Call Log.PrintToConsole, X0, X1
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move W9, [X8+12]
	048 Move TEMP, X9
	049 And TEMP, TEMP, 2
	050 Compare TEMP, 2
	051 JumpIfEqual {58}
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 
	058 Move W9, [X0+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {64}
	061 Call 0x1C17DFC
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move X1, [X8+16]
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Call Log.PrintToFile, X0, X1
	072 Return 

Method: System.Void PrintToFile(System.String message, System.String path)

Disassembly:
	0x039082D0 STRB W8, [X20 + 0x810]
	0x039082D4 LDR X0, [X19]
	0x039082D8 LDR W8, [X0 + 0xE0]
	0x039082DC CBNZ W8, 0x39082E4
	0x039082E0 BL 0x1C16DFC
	0x039082E4 MOV V0.16B, V10.16B
	0x039082E8 BL 0x3EB1B70
	0x039082EC FSQRT S1, S15
	0x039082F0 FMUL S2, S14, S12
	0x039082F4 FMUL S3, S13, S11
	0x039082F8 FMUL S0, S1, S0
	0x039082FC FSUB S1, S2, S3
	0x03908300 FADD S0, S0, S0
	0x03908304 FCMP S1, 0x0
	0x03908308 FNEG S1, S0
	0x0390830C FCSEL S0, S1, S0, GT
	0x03908310 FMUL S1, S12, S0
	0x03908314 FMUL S0, S11, S0
	0x03908318 FSUB S0, S9, S0
	0x0390831C FADD S1, S8, S1
	0x03908320 LDP X20, X19, [X31 + 0x50]
	0x03908324 LDR X30, [X31 + 0x40]
	0x03908328 LDP D9, D8, [X31 + 0x30]
	0x0390832C LDP D11, D10, [X31 + 0x20]
	0x03908330 LDP D13, D12, [X31 + 0x10]
	0x03908334 LDP D15, D14, [X31], #0x60
	0x03908338 RET
	0x0390833C LDP S3, S4, [X0]
	0x03908340 LDP S6, S5, [X0 + 0x8]
	0x03908344 LDP S7, S16, [X0 + 0x10]
	0x03908348 FSUB S0, S0, S3
	0x0390834C FSUB S1, S1, S4
	0x03908350 FSUB S2, S2, S6
	0x03908354 FMUL S3, S7, S2
	0x03908358 FMUL S4, S16, S1
	0x0390835C FMUL S6, S16, S0
	0x03908360 FMUL S2, S5, S2
	0x03908364 FMUL S1, S5, S1
	0x03908368 FMUL S0, S7, S0
	0x0390836C FSUB S3, S3, S4
	0x03908370 FSUB S2, S6, S2
	0x03908374 FSUB S0, S1, S0
	0x03908378 FMUL S1, S3, S3
	0x0390837C FMUL S2, S2, S2
	0x03908380 FADD S1, S1, S2
	0x03908384 FMUL S0, S0, S0
	0x03908388 FADD S0, S0, S1
	0x0390838C RET
	0x03908390 SUB X31, X31, 0x60
	0x03908394 STR D8, [X31 + 0x40]
	0x03908398 STP X30, X19, [X31 + 0x50]
	0x0390839C FSUB S6, S2, S4
	0x039083A0 FSUB S7, S3, S5
	0x039083A4 FMUL S6, S6, S6
	0x039083A8 FMUL S7, S7, S7
	0x039083AC FADD S6, S6, S7
	0x039083B0 FCMP S6, 0x0
	0x039083B4 B.NE 0x3908400
	0x039083B8 ADRP X19, 0xAD9000
	0x039083BC LDRB W8, [X19 + 0x810]
	0x039083C0 CBNZ W8, 0x39083E8
	0x039083C4 ADRP X0, 0x7EB000
	0x039083C8 LDR X0, [X0 + 0x5A8]
	0x039083CC STP V3, V1, [X31 + 0x20]
	0x039083D0 STP V0, V2, [X31]
	0x039083D4 BL 0x1C16CF4
	0x039083D8 LDP V0, V2, [X31]
	0x039083DC LDP V3, V1, [X31 + 0x20]
	0x039083E0 MOVZ W8, 0x1
	0x039083E4 STRB W8, [X19 + 0x810]
	0x039083E8 ADRP X8, 0x7EB000
	0x039083EC LDR X8, [X8 + 0x5A8]
	0x039083F0 MOV V1.S[1], V0.S[0]
	0x039083F4 MOV V3.S[1], V2.S[0]
	0x039083F8 FSUB V8.2S, V1.2S, V3.2S
	0x039083FC B 0x39084D0
	0x03908400 MOV V1.S[1], V0.S[0]
	0x03908404 MOV V3.S[1], V2.S[0]
	0x03908408 MOV V5.S[1], V4.S[0]
	0x0390840C FSUB V8.2S, V1.2S, V3.2S
	0x03908410 FSUB V0.2S, V5.2S, V3.2S
	0x00000000 INVALID
	0x03908418 FADDP S2, V2.2S
	0x0390841C FDIV S4, S2, S6
	0x03908420 FCMP S4, 0x0
	0x03908424 B.PL 0x3908454
	0x03908428 ADRP X19, 0xAD9000
	0x0390842C LDRB W8, [X19 + 0x810]
	0x03908430 CBNZ W8, 0x3908448
	0x03908434 ADRP X0, 0x7EB000
	0x03908438 LDR X0, [X0 + 0x5A8]
	0x0390843C BL 0x1C16CF4
	0x03908440 MOVZ W8, 0x1
	0x03908444 STRB W8, [X19 + 0x810]
	0x03908448 ADRP X8, 0x7EB000
	0x0390844C LDR X8, [X8 + 0x5A8]
	0x03908450 B 0x39084D0
	0x03908454 FMOV S2, 1
	0x03908458 ADRP X19, 0xAD9000
	0x0390845C FCMP S4, S2
	0x03908460 B.LE 0x3908498
	0x03908464 LDRB W8, [X19 + 0x810]
	0x03908468 CBNZ W8, 0x3908488
	0x0390846C ADRP X0, 0x7EB000
	0x03908470 LDR X0, [X0 + 0x5A8]
	0x03908474 STP V5, V1, [X31 + 0x20]
	0x03908478 BL 0x1C16CF4
	0x0390847C LDP V5, V1, [X31 + 0x20]
	0x03908480 MOVZ W8, 0x1
	0x03908484 STRB W8, [X19 + 0x810]
	0x03908488 ADRP X8, 0x7EB000
	0x0390848C LDR X8, [X8 + 0x5A8]
	0x03908490 FSUB V8.2S, V1.2S, V5.2S
	0x03908494 B 0x39084D0
	0x03908498 LDRB W8, [X19 + 0x810]
	0x00000000 INVALID
	0x039084A0 FADD V8.2S, V3.2S, V0.2S
	0x039084A4 CBNZ W8, 0x39084C4
	0x039084A8 ADRP X0, 0x7EB000
	0x039084AC LDR X0, [X0 + 0x5A8]
	0x039084B0 STR V1, [X31 + 0x3]
	0x039084B4 BL 0x1C16CF4
	0x039084B8 LDR V1, [X31 + 0x3]
	0x039084BC MOVZ W8, 0x1
	0x039084C0 STRB W8, [X19 + 0x810]
	0x039084C4 ADRP X8, 0x7EB000
	0x039084C8 LDR X8, [X8 + 0x5A8]
	0x039084CC FSUB V8.2S, V1.2S, V8.2S
	0x039084D0 LDR X0, [X8]
	0x039084D4 LDR W8, [X0 + 0xE0]
	0x039084D8 CBNZ W8, 0x39084E0
	0x039084DC BL 0x1C16DFC
	0x00000000 INVALID
	0x039084E4 LDP X30, X19, [X31 + 0x50]
	0x039084E8 LDR V8, [X31 + 0x40]
	0x039084EC FADDP S0, V0.2S
	0x039084F0 FSQRT S0, S0
	0x039084F4 ADD X31, X31, 0x60
	0x039084F8 RET
	0x039084FC STP D15, D14, [X31 - 0x50]!
	0x03908500 STP D13, D12, [X31 + 0x10]
	0x03908504 STP D11, D10, [X31 + 0x20]
	0x03908508 STP D9, D8, [X31 + 0x30]
	0x0390850C STP X30, X19, [X31 + 0x40]
	0x03908510 LDP S8, S15, [X31 + 0x50]
	0x03908514 LDR V14, [X31 + 0x58]
	0x03908518 MOV V13.16B, V3.16B
	0x0390851C MOV V9.16B, V1.16B
	0x03908520 FSUB S1, S3, S8
	0x03908524 FSUB S3, S4, S15
	0x03908528 FMUL S1, S1, S1
	0x0390852C FMUL S3, S3, S3
	0x03908530 FADD S1, S1, S3
	0x03908534 FSUB S3, S5, S14
	0x03908538 FMUL S3, S3, S3
	0x0390853C FADD S3, S3, S1
	0x03908540 MOV V11.16B, V5.16B
	0x03908544 MOV V12.16B, V4.16B
	0x03908548 FCMP S3, 0x0
	0x0390854C MOV V10.16B, V0.16B
	0x03908550 B.NE 0x39085D0
	0x03908554 ADRP X19, 0xAD0000
	0x03908558 LDRB W8, [X19 + 0x85C]
	0x0390855C CBNZ W8, 0x390857C
	0x03908560 ADRP X0, 0x7EB000
	0x03908564 LDR X0, [X0 + 0x5A8]
	0x03908568 MOV V8.16B, V2.16B
	0x0390856C BL 0x1C16CF4
	0x03908570 MOV V2.16B, V8.16B
	0x03908574 MOVZ W8, 0x1
	0x03908578 STRB W8, [X19 + 0x85C]
	0x0390857C ADRP X8, 0x7EB000
	0x03908580 LDR X8, [X8 + 0x5A8]
	0x03908584 FSUB S10, S10, S13
	0x03908588 LDR X0, [X8]
	0x0390858C LDR W8, [X0 + 0xE0]
	0x03908590 FSUB S9, S9, S12
	0x03908594 FSUB S8, S2, S11
	0x03908598 CBNZ W8, 0x39085A0
	0x0390859C BL 0x1C16DFC
	0x039085A0 FMUL S0, S10, S10
	0x039085A4 FMUL S1, S9, S9
	0x039085A8 FADD S0, S0, S1
	0x039085AC FMUL S1, S8, S8
	0x039085B0 LDP X30, X19, [X31 + 0x40]
	0x039085B4 LDP D9, D8, [X31 + 0x30]
	0x039085B8 LDP D11, D10, [X31 + 0x20]
	0x039085BC LDP D13, D12, [X31 + 0x10]
	0x039085C0 FADD S0, S1, S0
	0x039085C4 FSQRT S0, S0
	0x039085C8 LDP D15, D14, [X31], #0x50
	0x039085CC RET
	0x039085D0 FSUB S16, S10, S13
	0x039085D4 FSUB S17, S9, S12
	0x039085D8 FSUB S1, S8, S13
	0x039085DC FSUB S6, S15, S12
	0x039085E0 FSUB S7, S2, S11
	0x039085E4 FSUB S0, S14, S11
	0x039085E8 FMUL S4, S16, S1
	0x039085EC FMUL S5, S17, S6
	0x039085F0 FADD S4, S4, S5
	0x039085F4 FMUL S5, S7, S0
	0x039085F8 FADD S4, S5, S4
	0x039085FC FDIV S3, S4, S3
	0x03908600 FCMP S3, 0x0
	0x03908604 B.PL 0x3908684
	0x03908608 ADRP X19, 0xAD0000
	0x0390860C LDRB W8, [X19 + 0x85C]
	0x03908610 CBNZ W8, 0x3908640
	0x03908614 ADRP X0, 0x7EB000
	0x03908618 LDR X0, [X0 + 0x5A8]
	0x0390861C MOV V8.16B, V7.16B
	0x03908620 MOV V9.16B, V16.16B
	0x03908624 MOV V10.16B, V17.16B
	0x03908628 BL 0x1C16CF4
	0x0390862C MOV V17.16B, V10.16B
	0x03908630 MOV V16.16B, V9.16B
	0x03908634 MOV V7.16B, V8.16B
	0x03908638 MOVZ W8, 0x1
	0x0390863C STRB W8, [X19 + 0x85C]
	0x03908640 ADRP X8, 0x7EB000
	0x03908644 LDR X8, [X8 + 0x5A8]
	0x03908648 LDR X0, [X8]
	0x0390864C LDR W8, [X0 + 0xE0]
	0x03908650 CBNZ W8, 0x3908670
	0x03908654 MOV V8.16B, V7.16B
	0x03908658 MOV V9.16B, V16.16B
	0x0390865C MOV V10.16B, V17.16B
	0x03908660 BL 0x1C16DFC
	0x03908664 MOV V17.16B, V10.16B
	0x03908668 MOV V16.16B, V9.16B
	0x0390866C MOV V7.16B, V8.16B
	0x03908670 FMUL S0, S16, S16
	0x03908674 FMUL S1, S17, S17
	0x03908678 FADD S0, S0, S1
	0x0390867C FMUL S1, S7, S7
	0x03908680 B 0x39085B0
	0x03908684 FMOV S4, 1
	0x03908688 FCMP S3, S4
	0x0390868C B.LE 0x39086DC
	0x03908690 ADRP X19, 0xAD0000
	0x03908694 LDRB W8, [X19 + 0x85C]
	0x03908698 CBNZ W8, 0x39086B8
	0x0390869C ADRP X0, 0x7EB000
	0x039086A0 LDR X0, [X0 + 0x5A8]
	0x039086A4 MOV V11.16B, V2.16B
	0x039086A8 BL 0x1C16CF4
	0x039086AC MOV V2.16B, V11.16B
	0x039086B0 MOVZ W8, 0x1
	0x039086B4 STRB W8, [X19 + 0x85C]
	0x039086B8 ADRP X8, 0x7EB000
	0x039086BC LDR X8, [X8 + 0x5A8]
	0x039086C0 FSUB S10, S10, S8
	0x039086C4 FSUB S9, S9, S15

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xADA000
	009 Move W8, [X21+2030]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x7EC000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x846000
	020 Move X0, [X0+2768]
	021 Call 0x1C17CF4
	022 Move X0, 0x813000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0x846000
	026 Move X0, [X0+3856]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2030], W8
	030 Move X0, X20
	031 Move X1, X31
	032 Call String.IsNullOrEmpty, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {173}
	037 Move X21, 0x813000
	038 Move X21, [X21+464]
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Path.GetFullPath, X0
	047 Move X1, X31
	048 Move X20, X0
	049 Call String.IsNullOrEmpty, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X8, 0x846000
	055 Move X8, [X8+3856]
	056 Move X1, X20
	057 Move X2, X31
	058 Move X0, [X8]
	059 Call String.Concat, X0, X1
	060 Move X8, 0x846000
	061 Move X8, [X8+2768]
	062 Move X19, X0
	063 Move X8, [X8]
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X19
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+16]
	075 Move X23, [X31+24]
	076 Move W1, 3
	077 Add X31, X31, 64
	078 Call Log.PrintToConsole, X0, X1
	079 Return 
	080 Move X0, X20
	081 Move X1, X31
	082 Call File.Exists, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {116}
	087 Move X0, X20
	088 Move X1, X31
	089 Call File.AppendText, X0
	090 Move X20, X0
	091 Compare X0, 0
	092 JumpIfEqual {192}
	093 Move X8, [X20]
	094 Move X9, [X8+632]
	095 Move X2, [X8+640]
	096 Move X0, X20
	097 Move X1, X19
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X19, X31
	100 Move X10, 0x7EC000
	101 Move X8, [X20]
	102 Move X10, [X10+3584]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Move X1, [X10]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X20
	114 Move W2, W31
	115 Call 0x1C5D788
	116 Move X0, [X21]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X20
	122 Move X1, X31
	123 Call Path.GetDirectoryName, X0
	124 Move X1, X31
	125 Move X21, X0
	126 Call String.IsNullOrEmpty, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfEqual {54}
	131 Move X0, X21
	132 Move X1, X31
	133 Call Directory.CreateDirectory, X0
	134 Move X0, X20
	135 Move X1, X31
	136 Call File.CreateText, X0
	137 Move X21, X0
	138 Compare X0, 0
	139 JumpIfEqual {195}
	140 Move X8, [X21]
	141 Move X9, [X8+632]
	142 Move X2, [X8+640]
	143 Move X0, X21
	144 Move X1, X19
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move W23, W31
	147 Move X22, X31
	148 Move X10, 0x7EC000
	149 Move X8, [X21]
	150 Move X10, [X10+3584]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X1, [X10]
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X21
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X20
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Compare X19, 0
	172 JumpIfNotEqual {193}
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X30, [X31+16]
	178 Move X23, [X31+24]
	179 Add X31, X31, 64
	180 Return 
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Add X8, X8, X9
	183 Add X0, X8, 312
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X0, X21
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Compare X22, 0
	189 JumpIfNotEqual {196}
	190 Compare W23, 0
	191 JumpIfNotEqual {87}
	192 Call 0x1C17F20
	193 Move X0, X19
	194 Call 0x1C17F18
	195 Call 0x1C17F20
	196 Move X0, X22
	197 Call 0x1C17F18
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X22, X0
	200 Move X0, X22
	201 Call 0x3EB2AD0
	202 Move X8, [X0]
	203 Move [X31+8], X8
	204 Call 0x3EB2AE0
	205 Move X22, [X31+8]
	206 Move W23, 1
	207 Compare X21, 0
	208 JumpIfNotEqual {148}
	209 Move [X31+8], X31
	210 Move X22, X0
	211 Compare X21, 0
	212 JumpIfEqual {236}
	213 Move X10, 0x7EC000
	214 Move X8, [X21]
	215 Move X10, [X10+3584]
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Move X1, [X10]
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X21
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X21
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, [X31+8]
	237 Compare X8, 0
	238 JumpIfEqual {278}
	239 Move X0, [X31+8]
	240 Call 0x1C17F18
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X22, X0
	243 Move X0, X22
	244 Call 0x3EB2AD0
	245 Move X19, [X0]
	246 Call 0x3EB2AE0
	247 Compare X20, 0
	248 JumpIfNotEqual {100}
	249 Move X19, X31
	250 Move X22, X0
	251 Compare X20, 0
	252 JumpIfEqual {276}
	253 Move X10, 0x7EC000
	254 Move X8, [X20]
	255 Move X10, [X10+3584]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X1, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X20
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X20
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X19, 0
	277 JumpIfNotEqual {280}
	278 Move X0, X22
	279 Call 0x1D2D690
	280 Move X0, X19
	281 Call 0x1C17F18
	282 Call 0x1991590

Method: System.Void ClearLogFile()

Disassembly:
	0x039086C8 FSUB S8, S2, S14
	0x039086CC LDR X0, [X8]
	0x039086D0 LDR W8, [X0 + 0xE0]
	0x039086D4 CBNZ W8, 0x39085A0
	0x039086D8 B 0x390859C
	0x039086DC ADRP X19, 0xAD0000
	0x039086E0 LDRB W8, [X19 + 0x85C]
	0x039086E4 FMUL S1, S1, S3
	0x039086E8 FMUL S4, S6, S3
	0x039086EC FMUL S0, S0, S3
	0x039086F0 FADD S8, S13, S1
	0x039086F4 FADD S12, S12, S4
	0x039086F8 FADD S11, S11, S0
	0x039086FC CBNZ W8, 0x390871C
	0x03908700 ADRP X0, 0x7EB000
	0x03908704 LDR X0, [X0 + 0x5A8]
	0x03908708 MOV V13.16B, V2.16B
	0x0390870C BL 0x1C16CF4
	0x03908710 MOV V2.16B, V13.16B
	0x03908714 MOVZ W8, 0x1
	0x03908718 STRB W8, [X19 + 0x85C]
	0x0390871C ADRP X8, 0x7EB000
	0x03908720 LDR X8, [X8 + 0x5A8]
	0x03908724 FSUB S10, S10, S8
	0x03908728 B 0x3908588
	0x0390872C SUB X31, X31, 0x30
	0x03908730 STR X30, [X31 + 0x20]
	0x03908734 LDP S0, S1, [X0]
	0x03908738 LDP S2, S3, [X0 + 0x8]
	0x0390873C LDP S4, S5, [X0 + 0x10]
	0x03908740 LDR X8, [X1]
	0x03908744 LDR V6, [X1 + 0x8]
	0x03908748 LDUR X9, [X1 + 0xC]
	0x0390874C LDR V7, [X1 + 0x14]
	0x03908750 STR X8, [X31]
	0x03908754 STR S6, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xADA000
	005 Move X19, 0x846000
	006 Move W8, [X20+2031]
	007 Move X19, [X19+2768]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x846000
	013 Move X0, [X0+2768]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2031], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X1, X31
	025 Move X0, [X8+16]
	026 Call File.Exists, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {45}
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X0, [X8+16]
	042 Move X30, [X31+32]
	043 Call File.Delete, X0
	044 Return 
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return 

Method: System.Void PrintToConsole(System.String message, UnityEngine.LogType type = 3)

Disassembly:
	0x039081EC FSUB S11, S5, S3
	0x039081F0 FSUB S13, S0, S2
	0x039081F4 FSUB S14, S1, S3
	0x039081F8 CBNZ W8, 0x3908210
	0x039081FC ADRP X0, 0x7EB000
	0x03908200 LDR X0, [X0 + 0x5A8]
	0x03908204 BL 0x1C16CF4
	0x03908208 MOVZ W8, 0x1
	0x0390820C STRB W8, [X19 + 0xA1E]
	0x03908210 ADRP X19, 0x7EB000
	0x03908214 LDR X19, [X19 + 0x5A8]
	0x03908218 FMUL S0, S12, S12
	0x0390821C FMUL S1, S11, S11
	0x03908220 FADD S10, S0, S1
	0x03908224 LDR X0, [X19]
	0x03908228 FMUL S0, S13, S13
	0x0390822C FMUL S1, S14, S14
	0x03908230 FADD S15, S0, S1
	0x03908234 LDR W8, [X0 + 0xE0]
	0x03908238 CBNZ W8, 0x3908240
	0x0390823C BL 0x1C16DFC
	0x03908240 ADRP X8, 0xFFFFFFFFFD1E1000
	0x03908244 LDR V1, [X8 + 0xFE8]
	0x03908248 FMUL S0, S15, S10
	0x0390824C FSQRT S0, S0
	0x03908250 FMOV S10, W31
	0x03908254 FCMP S0, S1
	0x03908258 B.MI 0x39082B4
	0x0390825C LDR X0, [X19]
	0x03908260 FMUL S1, S13, S12
	0x03908264 FMUL S2, S14, S11
	0x03908268 FADD S1, S1, S2
	0x0390826C LDR W8, [X0 + 0xE0]
	0x03908270 FDIV S0, S1, S0
	0x03908274 FMOV S1, 1
	0x03908278 FMOV S2, -1
	0x0390827C FMIN S1, S0, S1
	0x03908280 FCMP S0, S2
	0x03908284 FCSEL S10, S1, S2, PL
	0x03908288 CBNZ W8, 0x3908290
	0x0390828C BL 0x1C16DFC
	0x03908290 FCVT S0, S10
	0x03908294 BL 0x3EB1B80
	0x03908298 ADRP X8, 0xFFFFFFFFFD1E2000
	0x0390829C LDR V1, [X8 + 0x448]
	0x039082A0 ADRP X8, 0xFFFFFFFFFD1E2000
	0x039082A4 LDR V2, [X8 + 0x104]
	0x00000000 INVALID
	0x039082AC FMUL S0, S0, S1
	0x039082B0 FMUL S10, S0, S2
	0x039082B4 ADRP X20, 0xAD9000
	0x039082B8 LDRB W8, [X20 + 0x810]
	0x039082BC CBNZ W8, 0x39082D4
	0x039082C0 ADRP X0, 0x7EB000
	0x039082C4 LDR X0, [X0 + 0x5A8]
	0x039082C8 BL 0x1C16CF4
	0x039082CC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADA000
	006 Move W8, [X21+2032]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7EC000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2032], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, -47644672
	020 Move W8, W20
	021 Add X9, X9, 2604
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 CallNoReturn X10
	026 Move X8, 0x7EC000
	027 Move X8, [X8+2600]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Debug.LogError, X0
	040 Return 
	041 Move X8, 0x7EC000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call Debug.Log, X0
	055 Return 
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Move X8, 0x7EC000
	062 Move X8, [X8+2600]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call Debug.LogWarning, X0
	075 Return 

Method: System.Void NotNull(T obj, System.String message)

Disassembly:
	0x02215A4C LDR X9, [X9 + 0x6C0]
	0x02215A50 LDR X19, [X8]
	0x02215A54 LDR X0, [X9]
	0x02215A58 LDR W9, [X0 + 0xE0]
	0x02215A5C CBNZ W9, 0x2215A64
	0x02215A60 BL 0x1C16DFC
	0x02215A64 MOV X0, X19
	0x02215A68 MOV X1, X31
	0x02215A6C BL 0x338C698
	0x02215A70 ADRP X8, 0x1F06000
	0x02215A74 LDR X8, [X8 + 0x850]
	0x02215A78 MOV X19, X0
	0x02215A7C LDR X8, [X8]
	0x02215A80 LDR W9, [X8 + 0xE0]
	0x02215A84 CBNZ W9, 0x2215A90
	0x02215A88 MOV X0, X8
	0x02215A8C BL 0x1C16DFC
	0x02215A90 MOV X0, X19
	0x02215A94 MOV X1, X31
	0x02215A98 LDP X30, X19, [X31], #0x10
	0x02215A9C B 0x32C13AC
	0x02215AA0 STP X30, X19, [X31 - 0x10]!
	0x02215AA4 LDR X8, [X0 + 0x38]
	0x02215AA8 CBNZ X8, 0x2215ADC
	0x02215AAC MOV X19, X0
	0x02215AB0 ADRP X0, 0x1F06000
	0x02215AB4 LDR X0, [X0 + 0x850]
	0x02215AB8 BL 0x1C16CF4
	0x02215ABC ADRP X0, 0x1EDE000
	0x02215AC0 LDR X0, [X0 + 0x6C0]
	0x02215AC4 BL 0x1C16CF4
	0x02215AC8 LDR X8, [X19 + 0x38]
	0x02215ACC CBNZ X8, 0x2215ADC
	0x02215AD0 MOV X0, X19
	0x02215AD4 BL 0x1C5C6E0
	0x02215AD8 LDR X8, [X19 + 0x38]
	0x02215ADC ADRP X9, 0x1EDE000
	0x02215AE0 LDR X9, [X9 + 0x6C0]
	0x02215AE4 LDR X19, [X8]
	0x02215AE8 LDR X0, [X9]
	0x02215AEC LDR W9, [X0 + 0xE0]
	0x02215AF0 CBNZ W9, 0x2215AF8
	0x02215AF4 BL 0x1C16DFC
	0x02215AF8 MOV X0, X19
	0x02215AFC MOV X1, X31
	0x02215B00 BL 0x338C698
	0x02215B04 ADRP X8, 0x1F06000
	0x02215B08 LDR X8, [X8 + 0x850]
	0x02215B0C MOV X19, X0
	0x02215B10 LDR X8, [X8]
	0x02215B14 LDR W9, [X8 + 0xE0]
	0x02215B18 CBNZ W9, 0x2215B24
	0x02215B1C MOV X0, X8
	0x02215B20 BL 0x1C16DFC
	0x02215B24 MOV X0, X19
	0x02215B28 MOV X1, X31
	0x02215B2C LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X19, X2
	014 Move X21, X0
	015 Move X20, X1
	016 Move [X29-8], X8
	017 Move [X29-16], X0
	018 Move X24, [X2+56]
	019 Compare X24, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X24, [X19+56]
	024 Move X8, [X24]
	025 Add X9, X31, 0
	026 Move W2, [X8+252]
	027 Add X10, X2, 15
	028 And X10, X10, 0x1FFFFFFFF
	029 Subtract X22, X9, X10
	030 Add X31, X22, 0
	031 Move W8, [X8+40]
	032 Move X0, X22
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X8, X29, 16
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Call 0x3EB2AC0
	037 Move X0, [X24]
	038 Move X1, X22
	039 Call 0x1C17ED4
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {57}
	044 Move X8, [X23+40]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X31, X29, 0
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X29, [X31+64]
	055 Move X30, [X31+72]
	056 Return 
	057 Move X0, 0x1EE4000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X1, X20
	062 Move X2, X31
	063 Move X21, X0
	064 Call ArgumentNullException..ctor, X0, X1
	065 Move X0, X21
	066 Move X1, X19
	067 Call 0x1C17DEC
	068 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x03908758 STR X9, [X31 + 0x10]
	0x0390875C STR S7, [X31 + 0x18]
	0x03908760 BL 0x3908770
	0x03908764 LDR X30, [X31 + 0x20]
	0x03908768 ADD X31, X31, 0x30
	0x0390876C RET
	0x03908770 STP D15, D14, [X31 - 0x60]!
	0x03908774 STP D13, D12, [X31 + 0x10]
	0x03908778 STP D11, D10, [X31 + 0x20]
	0x0390877C STP D9, D8, [X31 + 0x30]
	0x03908780 STR X30, [X31 + 0x40]
	0x03908784 STP X20, X19, [X31 + 0x50]
	0x03908788 ADRP X20, 0xAD9000
	0x0390878C ADRP X19, 0x7F2000
	0x03908790 LDP S12, S11, [X31 + 0x74]
	0x03908794 LDRB W8, [X20 + 0x7F5]
	0x03908798 LDR V13, [X31 + 0x70]
	0x0390879C LDR X19, [X19 + 0x4B8]
	0x039087A0 MOV V15.16B, V5.16B
	0x039087A4 MOV V8.16B, V4.16B
	0x039087A8 MOV V25.16B, V3.16B
	0x039087AC TBNZ X8, 0x0, 0x39087E4
	0x039087B0 ADRP X0, 0x7F2000
	0x039087B4 LDR X0, [X0 + 0x4B8]
	0x039087B8 MOV V9.16B, V2.16B
	0x039087BC MOV V10.16B, V1.16B
	0x039087C0 MOV V14.16B, V0.16B
	0x039087C4 STR S25, [X31 + 0x4C]
	0x039087C8 BL 0x1C16CF4
	0x039087CC LDR V25, [X31 + 0x4C]
	0x039087D0 MOV V0.16B, V14.16B
	0x039087D4 MOV V1.16B, V10.16B
	0x039087D8 MOV V2.16B, V9.16B
	0x039087DC MOVZ W8, 0x1
	0x039087E0 STRB W8, [X20 + 0x7F5]
	0x039087E4 LDR X8, [X19]
	0x039087E8 FMUL S6, S25, S13
	0x039087EC FMUL S3, S8, S12
	0x039087F0 FADD S6, S6, S3
	0x039087F4 LDR X8, [X8 + 0xB8]
	0x039087F8 FMUL S3, S15, S11
	0x039087FC FADD S19, S3, S6
	0x03908800 FABS S7, S19
	0x03908804 LDR V6, [X8]
	0x03908808 FMOV S3, -1
	0x0390880C FADD S3, S7, S3
	0x03908810 FCMP S3, S6

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xADA000
	008 Move X23, 0x846000
	009 Move X19, 0x846000
	010 Move X21, 0x846000
	011 Move X20, 0x846000
	012 Move W8, [X22+2033]
	013 Move X23, [X23+3864]
	014 Move X19, [X19+3872]
	015 Move X21, [X21+2768]
	016 Move X20, [X20+3880]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x846000
	022 Move X0, [X0+2768]
	023 Call 0x1C17CF4
	024 Move X0, 0x846000
	025 Move X0, [X0+3872]
	026 Call 0x1C17CF4
	027 Move X0, 0x846000
	028 Move X0, [X0+3864]
	029 Call 0x1C17CF4
	030 Move X0, 0x846000
	031 Move X0, [X0+3880]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2033], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call Stack`1<Int32Enum>..ctor, X0
	040 Move X8, [X21]
	041 Move X9, -48336896
	042 Move V0, [X9+1320]
	043 Move X8, [X8+184]
	044 Move [X8], X19
	045 Move X8, [X21]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X8, [X8+184]
	049 Move [X8+8], D0
	050 Move X9, [X20]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move [X8+16], X9
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 

