Type: UnityEngine.ProBuilder.PreferenceDictionary

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x039153DC LDP X20, X19, [X31 + 0x20]
	0x039153E0 LDR X3, [X8]
	0x039153E4 LDP X22, X21, [X31 + 0x10]
	0x039153E8 LDR X30, [X31], #0x30
	0x039153EC B 0x2AA5084
	0x039153F0 BL 0x1C16F20
	0x039153F4 STP D11, D10, [X31 - 0x40]!
	0x039153F8 STP D9, D8, [X31 + 0x10]
	0x039153FC STP X30, X21, [X31 + 0x20]
	0x03915400 STP X20, X19, [X31 + 0x30]
	0x03915404 ADRP X21, 0xACC000
	0x03915408 LDRB W8, [X21 + 0x83C]
	0x0391540C MOV V8.16B, V3.16B
	0x03915410 MOV V9.16B, V2.16B
	0x03915414 MOV V10.16B, V1.16B
	0x03915418 MOV V11.16B, V0.16B
	0x0391541C MOV X19, X1
	0x03915420 MOV X20, X0
	0x03915424 TBNZ X8, 0x0, 0x391543C
	0x03915428 ADRP X0, 0x839000
	0x0391542C LDR X0, [X0 + 0x370]
	0x03915430 BL 0x1C16CF4
	0x03915434 MOVZ W8, 0x1
	0x03915438 STRB W8, [X21 + 0x83C]
	0x0391543C LDR X0, [X20 + 0x38]
	0x03915440 CBZ X0, 0x3915478
	0x03915444 ADRP X8, 0x839000
	0x03915448 LDR X8, [X8 + 0x370]
	0x0391544C MOV X1, X19
	0x03915450 MOV V2.16B, V9.16B
	0x03915454 MOV V3.16B, V8.16B
	0x03915458 LDR X2, [X8]
	0x0391545C LDP X20, X19, [X31 + 0x30]
	0x03915460 LDP X30, X21, [X31 + 0x20]
	0x03915464 LDP D9, D8, [X31 + 0x10]
	0x03915468 MOV V0.16B, V11.16B
	0x0391546C MOV V1.16B, V10.16B
	0x03915470 LDP D11, D10, [X31], #0x40
	0x03915474 B 0x2A95E08
	0x03915478 BL 0x1C16F20
	0x0391547C STR X30, [X31 - 0x30]!
	0x03915480 STP X22, X21, [X31 + 0x10]
	0x03915484 STP X20, X19, [X31 + 0x20]
	0x03915488 ADRP X22, 0xACC000
	0x0391548C LDRB W8, [X22 + 0x83D]
	0x03915490 MOV X19, X2
	0x03915494 MOV X20, X1
	0x03915498 MOV X21, X0
	0x0391549C TBNZ X8, 0x0, 0x39154B4
	0x039154A0 ADRP X0, 0x839000
	0x039154A4 LDR X0, [X0 + 0x378]
	0x039154A8 BL 0x1C16CF4
	0x039154AC MOVZ W8, 0x1
	0x039154B0 STRB W8, [X22 + 0x83D]
	0x039154B4 LDR X0, [X21 + 0x40]
	0x039154B8 CBZ X0, 0x39154E0
	0x039154BC ADRP X8, 0x839000
	0x039154C0 LDR X8, [X8 + 0x378]
	0x039154C4 MOV X1, X20
	0x039154C8 MOV X2, X19
	0x039154CC LDP X20, X19, [X31 + 0x20]
	0x039154D0 LDR X3, [X8]
	0x039154D4 LDP X22, X21, [X31 + 0x10]
	0x039154D8 LDR X30, [X31], #0x30
	0x039154DC B 0x2AA5084
	0x039154E0 BL 0x1C16F20
	0x039154E4 LDR X0, [X0 + 0x18]
	0x039154E8 RET
	0x039154EC LDR X0, [X0 + 0x20]
	0x039154F0 RET
	0x039154F4 LDR X0, [X0 + 0x28]
	0x039154F8 RET
	0x039154FC LDR X0, [X0 + 0x30]
	0x03915500 RET
	0x03915504 LDR X0, [X0 + 0x38]
	0x03915508 RET
	0x0391550C LDR X0, [X0 + 0x40]
	0x03915510 RET
	0x03915514 STR X30, [X31 - 0x20]!
	0x03915518 STP X20, X19, [X31 + 0x10]
	0x0391551C ADRP X20, 0xACC000
	0x03915520 LDRB W8, [X20 + 0x83E]
	0x03915524 MOV X19, X0
	0x03915528 TBNZ X8, 0x0, 0x3915570
	0x0391552C ADRP X0, 0x839000
	0x03915530 LDR X0, [X0 + 0x2F0]
	0x03915534 BL 0x1C16CF4
	0x03915538 ADRP X0, 0x839000
	0x0391553C LDR X0, [X0 + 0x2F8]
	0x03915540 BL 0x1C16CF4
	0x03915544 ADRP X0, 0x839000
	0x03915548 LDR X0, [X0 + 0x300]
	0x0391554C BL 0x1C16CF4
	0x03915550 ADRP X0, 0x830000
	0x03915554 LDR X0, [X0 + 0x298]
	0x03915558 BL 0x1C16CF4
	0x0391555C ADRP X0, 0x821000
	0x03915560 LDR X0, [X0 + 0xAF8]
	0x03915564 BL 0x1C16CF4
	0x03915568 MOVZ W8, 0x1
	0x0391556C STRB W8, [X20 + 0x83E]
	0x03915570 LDR X0, [X19 + 0x18]
	0x03915574 CBZ X0, 0x39155F0
	0x03915578 ADRP X8, 0x839000
	0x0391557C LDR X8, [X8 + 0x2F0]
	0x03915580 LDR X1, [X8]
	0x03915584 BL 0x2A898DC
	0x03915588 LDR X0, [X19 + 0x20]
	0x0391558C CBZ X0, 0x39155F0
	0x03915590 ADRP X8, 0x830000
	0x03915594 LDR X8, [X8 + 0x298]
	0x03915598 LDR X1, [X8]
	0x0391559C BL 0x2A9F124
	0x039155A0 LDR X0, [X19 + 0x28]
	0x039155A4 CBZ X0, 0x39155F0
	0x039155A8 ADRP X8, 0x839000
	0x039155AC LDR X8, [X8 + 0x300]
	0x039155B0 LDR X1, [X8]
	0x039155B4 BL 0x2AB4C18
	0x039155B8 LDR X0, [X19 + 0x30]
	0x039155BC CBZ X0, 0x39155F0
	0x039155C0 ADRP X8, 0x821000
	0x039155C4 LDR X8, [X8 + 0xAF8]
	0x039155C8 LDR X1, [X8]
	0x039155CC BL 0x2AA5220
	0x039155D0 LDR X0, [X19 + 0x38]
	0x039155D4 CBZ X0, 0x39155F0
	0x039155D8 ADRP X8, 0x839000
	0x039155DC LDR X8, [X8 + 0x2F8]
	0x039155E0 LDP X20, X19, [X31 + 0x10]
	0x039155E4 LDR X1, [X8]
	0x039155E8 LDR X30, [X31], #0x20
	0x039155EC B 0x2A95FC8
	0x039155F0 BL 0x1C16F20
	0x039155F4 STP X29, X30, [X31 - 0x60]!
	0x039155F8 STP X28, X27, [X31 + 0x10]
	0x039155FC STP X26, X25, [X31 + 0x20]
	0x03915600 STP X24, X23, [X31 + 0x30]
	0x03915604 STP X22, X21, [X31 + 0x40]
	0x03915608 STP X20, X19, [X31 + 0x50]
	0x0391560C ADRP X22, 0xACC000
	0x03915610 ADRP X23, 0x839000
	0x03915614 ADRP X20, 0x839000
	0x03915618 ADRP X21, 0x7E0000
	0x0391561C ADRP X29, 0x7E0000
	0x03915620 ADRP X28, 0x839000
	0x03915624 ADRP X27, 0x839000
	0x03915628 ADRP X26, 0x7DF000
	0x0391562C ADRP X25, 0x7DF000
	0x03915630 ADRP X24, 0x839000
	0x03915634 LDR X23, [X23 + 0x380]
	0x03915638 LDR X20, [X20 + 0x388]
	0x0391563C LDR X21, [X21 + 0xB18]
	0x03915640 LDR X29, [X29 + 0xB20]
	0x03915644 LDR X28, [X28 + 0x390]
	0x03915648 LDR X27, [X27 + 0x398]
	0x0391564C LDR X26, [X26 + 0x6D0]
	0x03915650 LDRB W8, [X22 + 0x83F]
	0x03915654 LDR X25, [X25 + 0x6C0]
	0x03915658 LDR X24, [X24 + 0x3A0]
	0x0391565C MOV X19, X0
	0x03915660 TBNZ X8, 0x0, 0x39156FC
	0x03915664 ADRP X0, 0x839000
	0x03915668 LDR X0, [X0 + 0x3A8]
	0x0391566C BL 0x1C16CF4
	0x03915670 ADRP X0, 0x839000
	0x03915674 LDR X0, [X0 + 0x398]
	0x03915678 BL 0x1C16CF4
	0x0391567C ADRP X0, 0x839000
	0x03915680 LDR X0, [X0 + 0x3B0]
	0x03915684 BL 0x1C16CF4
	0x03915688 ADRP X0, 0x7DF000
	0x0391568C LDR X0, [X0 + 0x6C0]
	0x03915690 BL 0x1C16CF4
	0x03915694 ADRP X0, 0x7E0000
	0x03915698 LDR X0, [X0 + 0xB20]
	0x0391569C BL 0x1C16CF4
	0x039156A0 ADRP X0, 0x839000
	0x039156A4 LDR X0, [X0 + 0x388]
	0x039156A8 BL 0x1C16CF4
	0x039156AC ADRP X0, 0x839000
	0x039156B0 LDR X0, [X0 + 0x380]
	0x039156B4 BL 0x1C16CF4
	0x039156B8 ADRP X0, 0x7DF000
	0x039156BC LDR X0, [X0 + 0x6D0]
	0x039156C0 BL 0x1C16CF4
	0x039156C4 ADRP X0, 0x839000
	0x039156C8 LDR X0, [X0 + 0x3B8]
	0x039156CC BL 0x1C16CF4
	0x039156D0 ADRP X0, 0x7E0000
	0x039156D4 LDR X0, [X0 + 0xB18]
	0x039156D8 BL 0x1C16CF4
	0x039156DC ADRP X0, 0x839000
	0x039156E0 LDR X0, [X0 + 0x3A0]
	0x039156E4 BL 0x1C16CF4
	0x039156E8 ADRP X0, 0x839000
	0x039156EC LDR X0, [X0 + 0x390]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xACD000
	006 Move W8, [X20+2093]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {68}
	012 Move X0, 0x80F000
	013 Move X0, [X0+2808]
	014 Call 0x1C17CF4
	015 Move X0, 0x83A000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x83A000
	019 Move X0, [X0+592]
	020 Call 0x1C17CF4
	021 Move X0, 0x83A000
	022 Move X0, [X0+600]
	023 Call 0x1C17CF4
	024 Move X0, 0x83A000
	025 Move X0, [X0+608]
	026 Call 0x1C17CF4
	027 Move X0, 0x83A000
	028 Move X0, [X0+616]
	029 Call 0x1C17CF4
	030 Move X0, 0x83A000
	031 Move X0, [X0+624]
	032 Call 0x1C17CF4
	033 Move X0, 0x83A000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move X0, 0x83A000
	037 Move X0, [X0+640]
	038 Call 0x1C17CF4
	039 Move X0, 0x83A000
	040 Move X0, [X0+648]
	041 Call 0x1C17CF4
	042 Move X0, 0x83A000
	043 Move X0, [X0+656]
	044 Call 0x1C17CF4
	045 Move X0, 0x83A000
	046 Move X0, [X0+664]
	047 Call 0x1C17CF4
	048 Move X0, 0x83A000
	049 Move X0, [X0+672]
	050 Call 0x1C17CF4
	051 Move X0, 0x839000
	052 Move X0, [X0+3048]
	053 Call 0x1C17CF4
	054 Move X0, 0x83A000
	055 Move X0, [X0+680]
	056 Call 0x1C17CF4
	057 Move X0, 0x83A000
	058 Move X0, [X0+688]
	059 Call 0x1C17CF4
	060 Move X0, 0x83A000
	061 Move X0, [X0+696]
	062 Call 0x1C17CF4
	063 Move X0, 0x81D000
	064 Move X0, [X0+776]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+2093], W8
	068 Move X0, [X19+24]
	069 Compare X0, 0
	070 JumpIfEqual {216}
	071 Move X8, 0x83A000
	072 Move X8, [X8+608]
	073 Move X20, 0x81D000
	074 Move X1, [X8]
	075 Move X20, [X20+776]
	076 Call Dictionary`2<Object, Boolean>.get_Keys, X0
	077 Move X1, [X20]
	078 Call Enumerable.ToList, X0
	079 Move X8, [X19+32]
	080 Move [X19+72], X0
	081 Compare X8, 0
	082 JumpIfEqual {216}
	083 Move X9, 0x83A000
	084 Move X9, [X9+584]
	085 Move X0, X8
	086 Move X1, [X9]
	087 Call Dictionary`2<Object, Int32>.get_Keys, X0
	088 Move X1, [X20]
	089 Call Enumerable.ToList, X0
	090 Move X8, [X19+40]
	091 Move [X19+80], X0
	092 Compare X8, 0
	093 JumpIfEqual {216}
	094 Move X9, 0x83A000
	095 Move X9, [X9+600]
	096 Move X0, X8
	097 Move X1, [X9]
	098 Call Dictionary`2<Object, Single>.get_Keys, X0
	099 Move X1, [X20]
	100 Call Enumerable.ToList, X0
	101 Move X8, [X19+48]
	102 Move [X19+88], X0
	103 Compare X8, 0
	104 JumpIfEqual {216}
	105 Move X9, 0x80F000
	106 Move X9, [X9+2808]
	107 Move X0, X8
	108 Move X1, [X9]
	109 Call Dictionary`2<Object, Object>.get_Keys, X0
	110 Move X1, [X20]
	111 Call Enumerable.ToList, X0
	112 Move X8, [X19+56]
	113 Move [X19+96], X0
	114 Compare X8, 0
	115 JumpIfEqual {216}
	116 Move X9, 0x83A000
	117 Move X9, [X9+616]
	118 Move X0, X8
	119 Move X1, [X9]
	120 Call Dictionary`2<Object, Color>.get_Keys, X0
	121 Move X1, [X20]
	122 Call Enumerable.ToList, X0
	123 Move X8, [X19+64]
	124 Move [X19+104], X0
	125 Compare X8, 0
	126 JumpIfEqual {216}
	127 Move X9, 0x83A000
	128 Move X9, [X9+592]
	129 Move X0, X8
	130 Move X1, [X9]
	131 Call Dictionary`2<Object, Object>.get_Keys, X0
	132 Move X1, [X20]
	133 Call Enumerable.ToList, X0
	134 Move X8, [X19+24]
	135 Move [X19+112], X0
	136 Compare X8, 0
	137 JumpIfEqual {216}
	138 Move X9, 0x83A000
	139 Move X9, [X9+632]
	140 Move X21, 0x83A000
	141 Move X0, X8
	142 Move X1, [X9]
	143 Move X21, [X21+672]
	144 Call Dictionary`2<Object, Boolean>.get_Values, X0
	145 Move X1, [X21]
	146 Call Enumerable.ToList, X0
	147 Move X8, [X19+32]
	148 Move [X19+120], X0
	149 Compare X8, 0
	150 JumpIfEqual {216}
	151 Move X9, 0x83A000
	152 Move X9, [X9+656]
	153 Move X21, 0x83A000
	154 Move X0, X8
	155 Move X1, [X9]
	156 Move X21, [X21+680]
	157 Call Dictionary`2<Object, Int32>.get_Values, X0
	158 Move X1, [X21]
	159 Call Enumerable.ToList, X0
	160 Move X8, [X19+40]
	161 Move [X19+128], X0
	162 Compare X8, 0
	163 JumpIfEqual {216}
	164 Move X9, 0x83A000
	165 Move X9, [X9+640]
	166 Move X21, 0x83A000
	167 Move X0, X8
	168 Move X1, [X9]
	169 Move X21, [X21+696]
	170 Call Dictionary`2<Object, Single>.get_Values, X0
	171 Move X1, [X21]
	172 Call Enumerable.ToList, X0
	173 Move X8, [X19+48]
	174 Move [X19+136], X0
	175 Compare X8, 0
	176 JumpIfEqual {216}
	177 Move X9, 0x83A000
	178 Move X9, [X9+624]
	179 Move X0, X8
	180 Move X1, [X9]
	181 Call Dictionary`2<Object, Object>.get_Values, X0
	182 Move X1, [X20]
	183 Call Enumerable.ToList, X0
	184 Move X8, [X19+56]
	185 Move [X19+144], X0
	186 Compare X8, 0
	187 JumpIfEqual {216}
	188 Move X9, 0x83A000
	189 Move X9, [X9+664]
	190 Move X20, 0x839000
	191 Move X0, X8
	192 Move X1, [X9]
	193 Move X20, [X20+3048]
	194 Call Dictionary`2<Object, Color>.get_Values, X0
	195 Move X1, [X20]
	196 Call Enumerable.ToList, X0
	197 Move X8, [X19+64]
	198 Move [X19+152], X0
	199 Compare X8, 0
	200 JumpIfEqual {216}
	201 Move X9, 0x83A000
	202 Move X9, [X9+648]
	203 Move X20, 0x83A000
	204 Move X0, X8
	205 Move X1, [X9]
	206 Move X20, [X20+688]
	207 Call Dictionary`2<Object, Object>.get_Values, X0
	208 Move X1, [X20]
	209 Call Enumerable.ToList, X0
	210 Move [X19+160], X0
	211 Move X20, [X31+16]
	212 Move X19, [X31+24]
	213 Move X30, [X31+32]
	214 Move X21, [X31+40]
	215 Return 
	216 Call 0x1C17F20

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x039156F0 BL 0x1C16CF4
	0x039156F4 MOVZ W8, 0x1
	0x039156F8 STRB W8, [X22 + 0x83F]
	0x039156FC LDR X0, [X23]
	0x03915700 BL 0x1C16F10
	0x03915704 LDR X1, [X20]
	0x03915708 MOV X20, X0
	0x0391570C BL 0x2A88E9C
	0x03915710 STR X20, [X19 + 0x18]
	0x03915714 LDR X0, [X21]
	0x03915718 BL 0x1C16F10
	0x0391571C LDR X1, [X29]
	0x03915720 MOV X20, X0
	0x03915724 BL 0x2A9E704
	0x03915728 STR X20, [X19 + 0x20]
	0x0391572C LDR X0, [X28]
	0x03915730 BL 0x1C16F10
	0x03915734 LDR X1, [X27]
	0x03915738 MOV X20, X0
	0x0391573C BL 0x2AB41F4
	0x03915740 STR X20, [X19 + 0x28]
	0x03915744 LDR X0, [X26]
	0x03915748 BL 0x1C16F10
	0x0391574C LDR X1, [X25]
	0x03915750 MOV X20, X0
	0x03915754 BL 0x2AA4804
	0x03915758 STR X20, [X19 + 0x30]
	0x0391575C LDR X0, [X24]
	0x03915760 BL 0x1C16F10
	0x03915764 ADRP X8, 0x839000
	0x03915768 LDR X8, [X8 + 0x3A8]
	0x0391576C MOV X20, X0
	0x03915770 LDR X1, [X8]
	0x03915774 BL 0x2A95568
	0x03915778 STR X20, [X19 + 0x38]
	0x0391577C ADRP X8, 0x839000
	0x03915780 LDR X8, [X8 + 0x3B8]
	0x03915784 LDR X0, [X8]
	0x03915788 BL 0x1C16F10
	0x0391578C ADRP X8, 0x839000
	0x03915790 LDR X8, [X8 + 0x3B0]
	0x03915794 MOV X20, X0
	0x03915798 LDR X1, [X8]
	0x0391579C BL 0x2AA4804
	0x039157A0 STR X20, [X19 + 0x40]
	0x039157A4 MOV X0, X19
	0x039157A8 LDP X20, X19, [X31 + 0x50]
	0x039157AC LDP X22, X21, [X31 + 0x40]
	0x039157B0 LDP X24, X23, [X31 + 0x30]
	0x039157B4 LDP X26, X25, [X31 + 0x20]
	0x039157B8 LDP X28, X27, [X31 + 0x10]
	0x039157BC MOV X1, X31
	0x039157C0 LDP X29, X30, [X31], #0x60
	0x039157C4 B 0x3C36D2C
	0x039157C8 STR X30, [X31 - 0x20]!
	0x039157CC STP X20, X19, [X31 + 0x10]
	0x039157D0 ADRP X20, 0xACC000
	0x039157D4 ADRP X19, 0x839000
	0x039157D8 LDRB W8, [X20 + 0x840]
	0x039157DC LDR X19, [X19 + 0x3C0]
	0x039157E0 TBNZ X8, 0x0, 0x39157F8
	0x039157E4 ADRP X0, 0x839000
	0x039157E8 LDR X0, [X0 + 0x3C0]
	0x039157EC BL 0x1C16CF4
	0x039157F0 MOVZ W8, 0x1
	0x039157F4 STRB W8, [X20 + 0x840]
	0x039157F8 LDR X8, [X19]
	0x039157FC ADRP X9, 0xFFFFFFFFFD1D6000
	0x03915800 LDR V0, [X9 + 0xF9]
	0x03915804 ADRP X9, 0xFFFFFFFFFD1D6000
	0x03915808 LDR X8, [X8 + 0xB8]
	0x0391580C ADRP X10, 0xFFFFFFFFFD1D6000
	0x03915810 STR V0, [X8]
	0x03915814 LDR X8, [X19]
	0x03915818 LDR V0, [X9 + 0x55]
	0x0391581C LDP X20, X19, [X31 + 0x10]
	0x03915820 LDR X9, [X8 + 0xB8]
	0x03915824 STR V0, [X9 + 0x1]
	0x03915828 LDR X8, [X8 + 0xB8]
	0x0391582C LDR V0, [X10 + 0x56]
	0x03915830 STR V0, [X8 + 0x2]
	0x03915834 LDR X30, [X31], #0x20
	0x03915838 RET
	0x0391583C LDRB W0, [X0 + 0x90]
	0x03915840 RET
	0x03915844 AND W8, W1, 0x1
	0x03915848 STRB W8, [X0 + 0x90]
	0x0391584C RET
	0x03915850 LDR X0, [X0 + 0x98]
	0x03915854 RET
	0x03915858 STR X1, [X0 + 0x98]
	0x0391585C RET
	0x03915860 STR X30, [X31 - 0x30]!
	0x03915864 STP X22, X21, [X31 + 0x10]
	0x03915868 STP X20, X19, [X31 + 0x20]
	0x0391586C ADRP X20, 0xACC000
	0x03915870 ADRP X22, 0x7DE000
	0x03915874 LDRB W8, [X20 + 0x842]
	0x03915878 LDR X22, [X22 + 0x598]
	0x0391587C MOV X19, X0
	0x03915880 TBNZ X8, 0x0, 0x39158A4
	0x03915884 ADRP X0, 0x839000
	0x03915888 LDR X0, [X0 + 0x3C8]
	0x0391588C BL 0x1C16CF4
	0x03915890 ADRP X0, 0x7DE000
	0x03915894 LDR X0, [X0 + 0x598]
	0x03915898 BL 0x1C16CF4
	0x0391589C MOVZ W8, 0x1
	0x039158A0 STRB W8, [X20 + 0x842]
	0x039158A4 MOV X20, X19
	0x039158A8 LDR X21, [X20 + 0xC0]!
	0x039158AC LDR X0, [X22]
	0x039158B0 LDR W8, [X0 + 0xE0]
	0x039158B4 CBNZ W8, 0x39158BC
	0x039158B8 BL 0x1C16DFC
	0x039158BC MOV X0, X21
	0x039158C0 MOV X1, X31
	0x039158C4 MOV X2, X31
	0x039158C8 BL 0x3C3883C
	0x039158CC TBZ X0, 0x0, 0x39158F8
	0x039158D0 MOV X0, X19
	0x039158D4 MOV X1, X31
	0x039158D8 BL 0x3C32ECC
	0x039158DC CBZ X0, 0x3915914
	0x039158E0 ADRP X8, 0x839000
	0x039158E4 LDR X8, [X8 + 0x3C8]
	0x039158E8 MOV X1, X20
	0x039158EC LDR X2, [X8]
	0x039158F0 BL 0x21E6600
	0x039158F4 TBZ X0, 0x0, 0x3915900
	0x039158F8 LDR X0, [X20]
	0x039158FC B 0x3915904
	0x03915900 MOV X0, X31
	0x03915904 LDP X20, X19, [X31 + 0x20]
	0x03915908 LDP X22, X21, [X31 + 0x10]
	0x0391590C LDR X30, [X31], #0x30
	0x03915910 RET
	0x03915914 BL 0x1C16F20
	0x03915918 LDRH W0, [X0 + 0xC8]
	0x0391591C RET
	0x03915920 LDRH W0, [X0 + 0xCA]
	0x03915924 RET
	0x03915928 LDRB W0, [X0 + 0xA0]
	0x0391592C RET
	0x03915930 AND W8, W1, 0x1
	0x03915934 STRB W8, [X0 + 0xA0]
	0x03915938 RET
	0x0391593C LDR X0, [X0 + 0x28]
	0x03915940 RET
	0x03915944 STR X1, [X0 + 0x28]
	0x03915948 RET
	0x0391594C STR X30, [X31 - 0x30]!
	0x03915950 STP X22, X21, [X31 + 0x10]
	0x03915954 STP X20, X19, [X31 + 0x20]
	0x03915958 ADRP X22, 0xACC000
	0x0391595C ADRP X21, 0x839000
	0x03915960 ADRP X20, 0x839000
	0x03915964 LDRB W8, [X22 + 0x844]
	0x03915968 LDR X21, [X21 + 0x3D0]
	0x0391596C LDR X20, [X20 + 0x3D8]
	0x03915970 MOV X19, X0
	0x03915974 TBNZ X8, 0x0, 0x3915998
	0x03915978 ADRP X0, 0x839000
	0x0391597C LDR X0, [X0 + 0x3D8]
	0x03915980 BL 0x1C16CF4
	0x03915984 ADRP X0, 0x839000
	0x03915988 LDR X0, [X0 + 0x3D0]
	0x0391598C BL 0x1C16CF4
	0x03915990 MOVZ W8, 0x1
	0x03915994 STRB W8, [X22 + 0x844]
	0x03915998 LDR X0, [X21]
	0x0391599C LDR X19, [X19 + 0x28]
	0x039159A0 BL 0x1C16F10
	0x039159A4 LDR X2, [X20]
	0x039159A8 MOV X1, X19
	0x039159AC MOV X20, X0
	0x039159B0 BL 0x2551884
	0x039159B4 MOV X0, X20
	0x039159B8 LDP X20, X19, [X31 + 0x20]
	0x039159BC LDP X22, X21, [X31 + 0x10]
	0x039159C0 LDR X30, [X31], #0x30
	0x039159C4 RET
	0x039159C8 STP X30, X21, [X31 - 0x20]!
	0x039159CC STP X20, X19, [X31 + 0x10]
	0x039159D0 ADRP X21, 0xACC000
	0x039159D4 LDRB W8, [X21 + 0x845]
	0x039159D8 MOV X20, X1
	0x039159DC MOV X19, X0
	0x039159E0 TBNZ X8, 0x0, 0x39159F8
	0x039159E4 ADRP X0, 0x839000
	0x039159E8 LDR X0, [X0 + 0x3E0]
	0x039159EC BL 0x1C16CF4
	0x039159F0 MOVZ W8, 0x1
	0x039159F4 STRB W8, [X21 + 0x845]
	0x039159F8 CBZ X20, 0x3915A20
	0x039159FC ADRP X8, 0x839000
	0x03915A00 LDR X8, [X8 + 0x3E0]
	0x03915A04 MOV X0, X20
	0x03915A08 LDR X1, [X8]
	0x03915A0C BL 0x21D577C
	0x03915A10 STR X0, [X19 + 0x28]
	0x03915A14 LDP X20, X19, [X31 + 0x10]
	0x03915A18 LDP X30, X21, [X31], #0x20
	0x03915A1C RET
	0x03915A20 ADRP X0, 0x7E3000
	0x03915A24 LDR X0, [X0 + 0x528]
	0x03915A28 BL 0x1C16D08
	0x03915A2C BL 0x1C16F10
	0x03915A30 MOV X19, X0
	0x03915A34 ADRP X0, 0x7E8000
	0x03915A38 LDR X0, [X0 + 0xEC8]
	0x03915A3C BL 0x1C16D08
	0x03915A40 MOV X1, X0
	0x03915A44 MOV X0, X19
	0x03915A48 MOV X2, X31
	0x03915A4C BL 0x330E100
	0x03915A50 ADRP X0, 0x839000
	0x03915A54 LDR X0, [X0 + 0x3E8]
	0x03915A58 BL 0x1C16D08
	0x03915A5C MOV X1, X0
	0x03915A60 MOV X0, X19
	0x03915A64 BL 0x1C16DEC
	0x03915A68 STR X30, [X31 - 0x20]!
	0x03915A6C STP X20, X19, [X31 + 0x10]
	0x03915A70 ADRP X20, 0xACC000
	0x03915A74 LDRB W8, [X20 + 0x846]
	0x03915A78 MOV X19, X0
	0x03915A7C TBNZ X8, 0x0, 0x3915AAC
	0x03915A80 ADRP X0, 0x808000
	0x03915A84 LDR X0, [X0 + 0x8D0]
	0x03915A88 BL 0x1C16CF4
	0x03915A8C ADRP X0, 0x7E8000
	0x03915A90 LDR X0, [X0 + 0x890]
	0x03915A94 BL 0x1C16CF4
	0x03915A98 ADRP X0, 0x7E8000
	0x03915A9C LDR X0, [X0 + 0x888]
	0x03915AA0 BL 0x1C16CF4
	0x03915AA4 MOVZ W8, 0x1
	0x03915AA8 STRB W8, [X20 + 0x846]
	0x03915AAC LDR X20, [X19 + 0x40]
	0x03915AB0 CBNZ X20, 0x3915AE0
	0x03915AB4 ADRP X8, 0x7E8000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xACD000
	014 Move W8, [X20+2094]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {61}
	020 Move X0, 0x83A000
	021 Move X0, [X0+704]
	022 Call 0x1C17CF4
	023 Move X0, 0x7E1000
	024 Move X0, [X0+2856]
	025 Call 0x1C17CF4
	026 Move X0, 0x83A000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0x83A000
	030 Move X0, [X0+720]
	031 Call 0x1C17CF4
	032 Move X0, 0x7E0000
	033 Move X0, [X0+2064]
	034 Call 0x1C17CF4
	035 Move X0, 0x83A000
	036 Move X0, [X0+728]
	037 Call 0x1C17CF4
	038 Move X0, 0x7E0000
	039 Move X0, [X0+456]
	040 Call 0x1C17CF4
	041 Move X0, 0x807000
	042 Move X0, [X0+2904]
	043 Call 0x1C17CF4
	044 Move X0, 0x839000
	045 Move X0, [X0+3912]
	046 Call 0x1C17CF4
	047 Move X0, 0x83A000
	048 Move X0, [X0+736]
	049 Call 0x1C17CF4
	050 Move X0, 0x809000
	051 Move X0, [X0+3896]
	052 Call 0x1C17CF4
	053 Move X0, 0x839000
	054 Move X0, [X0+3096]
	055 Call 0x1C17CF4
	056 Move X0, 0x83A000
	057 Move X0, [X0+744]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X20+2094], W8
	061 Move X0, [X19+72]
	062 Compare X0, 0
	063 JumpIfEqual {257}
	064 Move X23, 0x807000
	065 Move X27, 0x83A000
	066 Move X28, 0x83A000
	067 Move X25, 0x809000
	068 Move X26, 0x7E1000
	069 Move X29, 0x83A000
	070 Move X24, 0x83A000
	071 Move X23, [X23+2904]
	072 Move X27, [X27+736]
	073 Move X28, [X28+712]
	074 Move X25, [X25+3896]
	075 Move X26, [X26+2856]
	076 Move X29, [X29+744]
	077 Move X24, [X24+720]
	078 Move W20, W31
	079 Move W8, [X0+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X2, [X23]
	082 Move X21, [X19+24]
	083 Move W1, W20
	084 Call List`1<Object>.get_Item, X0, X1
	085 Move X8, [X19+120]
	086 Compare X8, 0
	087 JumpIfEqual {257}
	088 Move X2, [X27]
	089 Move X22, X0
	090 Move X0, X8
	091 Move W1, W20
	092 Call List`1<Boolean>.get_Item, X0, X1
	093 Compare X21, 0
	094 JumpIfEqual {257}
	095 Move X3, [X28]
	096 And W2, W0, 1
	097 Move X0, X21
	098 Move X1, X22
	099 Call Dictionary`2<Object, Boolean>.Add, X0, X1, X2
	100 Move X0, [X19+72]
	101 Add W20, W20, 1
	102 Compare X0, 0
	103 JumpIfNotEqual {79}
	104 Move X0, [X19+80]
	105 Compare X0, 0
	106 JumpIfEqual {257}
	107 Move W20, W31
	108 Move W8, [X0+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X2, [X23]
	111 Move X21, [X19+32]
	112 Move W1, W20
	113 Call List`1<Object>.get_Item, X0, X1
	114 Move X8, [X19+128]
	115 Compare X8, 0
	116 JumpIfEqual {257}
	117 Move X2, [X25]
	118 Move X22, X0
	119 Move X0, X8
	120 Move W1, W20
	121 Call List`1<Int32>.get_Item, X0, X1
	122 Compare X21, 0
	123 JumpIfEqual {257}
	124 Move X3, [X26]
	125 Move W2, W0
	126 Move X0, X21
	127 Move X1, X22
	128 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	129 Move X0, [X19+80]
	130 Add W20, W20, 1
	131 Compare X0, 0
	132 JumpIfNotEqual {108}
	133 Move X0, [X19+88]
	134 Compare X0, 0
	135 JumpIfEqual {257}
	136 Move W20, W31
	137 Move W8, [X0+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X2, [X23]
	140 Move X21, [X19+40]
	141 Move W1, W20
	142 Call List`1<Object>.get_Item, X0, X1
	143 Move X8, [X19+136]
	144 Compare X8, 0
	145 JumpIfEqual {257}
	146 Move X2, [X29]
	147 Move X22, X0
	148 Move X0, X8
	149 Move W1, W20
	150 Call List`1<Single>.get_Item, X0, X1
	151 Compare X21, 0
	152 JumpIfEqual {257}
	153 Move X2, [X24]
	154 Move X0, X21
	155 Move X1, X22
	156 Call Dictionary`2<Object, Single>.Add, X0, X1, V0
	157 Move X0, [X19+88]
	158 Add W20, W20, 1
	159 Compare X0, 0
	160 JumpIfNotEqual {137}
	161 Move X24, 0x839000
	162 Move X25, 0x83A000
	163 Move X26, 0x839000
	164 Move X27, 0x83A000
	165 Move X28, 0x7E0000
	166 Move X0, [X19+96]
	167 Move X24, [X24+3912]
	168 Move X25, [X25+728]
	169 Move X26, [X26+3096]
	170 Move X27, [X27+704]
	171 Move X28, [X28+2064]
	172 Compare X0, 0
	173 JumpIfEqual {257}
	174 Move W20, W31
	175 Move W8, [X0+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X2, [X23]
	178 Move X21, [X19+48]
	179 Move W1, W20
	180 Call List`1<Object>.get_Item, X0, X1
	181 Move X8, [X19+144]
	182 Compare X8, 0
	183 JumpIfEqual {257}
	184 Move X2, [X23]
	185 Move X22, X0
	186 Move X0, X8
	187 Move W1, W20
	188 Call List`1<Object>.get_Item, X0, X1
	189 Compare X21, 0
	190 JumpIfEqual {257}
	191 Move X3, [X28]
	192 Move X2, X0
	193 Move X0, X21
	194 Move X1, X22
	195 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	196 Move X0, [X19+96]
	197 Add W20, W20, 1
	198 Compare X0, 0
	199 JumpIfNotEqual {175}
	200 Move X0, [X19+104]
	201 Compare X0, 0
	202 JumpIfEqual {257}
	203 Move W20, W31
	204 Move W8, [X0+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X2, [X23]
	207 Move X21, [X19+56]
	208 Move W1, W20
	209 Call List`1<Object>.get_Item, X0, X1
	210 Move X8, [X19+152]
	211 Compare X8, 0
	212 JumpIfEqual {257}
	213 Move X2, [X26]
	214 Move X22, X0
	215 Move X0, X8
	216 Move W1, W20
	217 Call List`1<Color>.get_Item, X0, X1
	218 Compare X21, 0
	219 JumpIfEqual {257}
	220 Move X2, [X27]
	221 Move X0, X21
	222 Move X1, X22
	223 Call Dictionary`2<Object, Color>.Add, X0, X1, X2
	224 Move X0, [X19+104]
	225 Add W20, W20, 1
	226 Compare X0, 0
	227 JumpIfNotEqual {204}
	228 Move X0, [X19+112]
	229 Compare X0, 0
	230 JumpIfEqual {257}
	231 Move W20, W31
	232 Move W8, [X0+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X2, [X23]
	235 Move X21, [X19+64]
	236 Move W1, W20
	237 Call List`1<Object>.get_Item, X0, X1
	238 Move X8, [X19+160]
	239 Compare X8, 0
	240 JumpIfEqual {257}
	241 Move X2, [X24]
	242 Move X22, X0
	243 Move X0, X8
	244 Move W1, W20
	245 Call List`1<Object>.get_Item, X0, X1
	246 Compare X21, 0
	247 JumpIfEqual {257}
	248 Move X3, [X25]
	249 Move X2, X0
	250 Move X0, X21
	251 Move X1, X22
	252 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	253 Move X0, [X19+112]
	254 Add W20, W20, 1
	255 Compare X0, 0
	256 JumpIfNotEqual {232}
	257 Call 0x1C17F20
	258 Move X20, [X31+80]
	259 Move X19, [X31+88]
	260 Move X22, [X31+64]
	261 Move X21, [X31+72]
	262 Move X24, [X31+48]
	263 Move X23, [X31+56]
	264 Move X26, [X31+32]
	265 Move X25, [X31+40]
	266 Move X28, [X31+16]
	267 Move X27, [X31+24]
	268 Move X29, [X31+96]
	269 Move X30, [X31+104]
	270 Return 

Method: System.Void SetDefaultValues()

Disassembly:
	0x03915AB8 LDR X8, [X8 + 0x888]
	0x03915ABC LDR X0, [X8]
	0x03915AC0 BL 0x1C16F10
	0x03915AC4 ADRP X8, 0x7E8000
	0x03915AC8 LDR X8, [X8 + 0x890]
	0x03915ACC MOV X20, X0
	0x03915AD0 LDR X1, [X8]
	0x03915AD4 BL 0x2A09A9C
	0x03915AD8 STR X20, [X19 + 0x40]
	0x03915ADC CBZ X20, 0x3915B0C
	0x03915AE0 ADRP X8, 0x808000
	0x03915AE4 LDR X8, [X8 + 0x8D0]
	0x03915AE8 MOV X0, X20
	0x03915AEC LDR X1, [X8]
	0x03915AF0 BL 0x2A0A4C4
	0x03915AF4 LDRB W8, [X19 + 0x38]
	0x03915AF8 AND W8, W8, 0xFE
	0x03915AFC STRB W8, [X19 + 0x38]
	0x03915B00 LDP X20, X19, [X31 + 0x10]
	0x03915B04 LDR X30, [X31], #0x20
	0x03915B08 RET
	0x03915B0C BL 0x1C16F20
	0x03915B10 STR X30, [X31 - 0x20]!
	0x03915B14 STP X20, X19, [X31 + 0x10]
	0x03915B18 ADRP X20, 0xACC000
	0x03915B1C LDRB W8, [X20 + 0x847]
	0x03915B20 MOV X19, X0
	0x03915B24 TBNZ X8, 0x0, 0x3915B54
	0x03915B28 ADRP X0, 0x808000
	0x03915B2C LDR X0, [X0 + 0x8D0]
	0x03915B30 BL 0x1C16CF4
	0x03915B34 ADRP X0, 0x7E8000
	0x03915B38 LDR X0, [X0 + 0x890]
	0x03915B3C BL 0x1C16CF4
	0x03915B40 ADRP X0, 0x7E8000
	0x03915B44 LDR X0, [X0 + 0x888]
	0x03915B48 BL 0x1C16CF4
	0x03915B4C MOVZ W8, 0x1
	0x03915B50 STRB W8, [X20 + 0x847]
	0x03915B54 LDR X20, [X19 + 0x50]
	0x03915B58 CBNZ X20, 0x3915B88
	0x03915B5C ADRP X8, 0x7E8000
	0x03915B60 LDR X8, [X8 + 0x888]
	0x03915B64 LDR X0, [X8]
	0x03915B68 BL 0x1C16F10
	0x03915B6C ADRP X8, 0x7E8000
	0x03915B70 LDR X8, [X8 + 0x890]
	0x03915B74 MOV X20, X0
	0x03915B78 LDR X1, [X8]
	0x03915B7C BL 0x2A09A9C
	0x03915B80 STR X20, [X19 + 0x50]
	0x03915B84 CBZ X20, 0x3915BB4
	0x03915B88 ADRP X8, 0x808000
	0x03915B8C LDR X8, [X8 + 0x8D0]
	0x03915B90 MOV X0, X20
	0x03915B94 LDR X1, [X8]
	0x03915B98 BL 0x2A0A4C4
	0x03915B9C LDRB W8, [X19 + 0x38]
	0x03915BA0 AND W8, W8, 0xFFFFFFFD
	0x03915BA4 STRB W8, [X19 + 0x38]
	0x03915BA8 LDP X20, X19, [X31 + 0x10]
	0x03915BAC LDR X30, [X31], #0x20
	0x03915BB0 RET
	0x03915BB4 BL 0x1C16F20
	0x03915BB8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xACD000
	005 Move W8, [X20+2095]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {31}
	011 Move X0, 0x83A000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move X0, 0x83A000
	015 Move X0, [X0+760]
	016 Call 0x1C17CF4
	017 Move X0, 0x83A000
	018 Move X0, [X0+768]
	019 Call 0x1C17CF4
	020 Move X0, 0x83A000
	021 Move X0, [X0+776]
	022 Call 0x1C17CF4
	023 Move X0, 0x831000
	024 Move X0, [X0+664]
	025 Call 0x1C17CF4
	026 Move X0, 0x822000
	027 Move X0, [X0+2808]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2095], W8
	031 Move X0, [X19+24]
	032 Compare X0, 0
	033 JumpIfEqual {77}
	034 Move X8, 0x83A000
	035 Move X8, [X8+752]
	036 Move X1, [X8]
	037 Call Dictionary`2<Object, Boolean>.Clear, X0
	038 Move X0, [X19+32]
	039 Compare X0, 0
	040 JumpIfEqual {77}
	041 Move X8, 0x831000
	042 Move X8, [X8+664]
	043 Move X1, [X8]
	044 Call Dictionary`2<Object, Int32>.Clear, X0
	045 Move X0, [X19+40]
	046 Compare X0, 0
	047 JumpIfEqual {77}
	048 Move X8, 0x83A000
	049 Move X8, [X8+768]
	050 Move X1, [X8]
	051 Call Dictionary`2<Object, Single>.Clear, X0
	052 Move X0, [X19+48]
	053 Compare X0, 0
	054 JumpIfEqual {77}
	055 Move X8, 0x822000
	056 Move X8, [X8+2808]
	057 Move X1, [X8]
	058 Call Dictionary`2<Object, Object>.Clear, X0
	059 Move X0, [X19+56]
	060 Compare X0, 0
	061 JumpIfEqual {77}
	062 Move X8, 0x83A000
	063 Move X8, [X8+760]
	064 Move X1, [X8]
	065 Call Dictionary`2<Object, Color>.Clear, X0
	066 Move X0, [X19+64]
	067 Compare X0, 0
	068 JumpIfEqual {77}
	069 Move X8, 0x83A000
	070 Move X8, [X8+776]
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X1, [X8]
	074 Move X30, [X31+32]
	075 Call Dictionary`2<Object, Object>.Clear, X0
	076 Return 
	077 Call 0x1C17F20

Method: System.Boolean HasKey(System.String key)

Disassembly:
	0x03915BBC STP X20, X19, [X31 + 0x10]
	0x03915BC0 ADRP X20, 0xACC000
	0x03915BC4 LDRB W8, [X20 + 0x848]
	0x03915BC8 MOV X19, X0
	0x03915BCC TBNZ X8, 0x0, 0x3915C14
	0x03915BD0 ADRP X0, 0x839000
	0x03915BD4 LDR X0, [X0 + 0x3F0]
	0x03915BD8 BL 0x1C16CF4
	0x03915BDC ADRP X0, 0x7DE000
	0x03915BE0 LDR X0, [X0 + 0xE00]
	0x03915BE4 BL 0x1C16CF4
	0x03915BE8 ADRP X0, 0x838000
	0x03915BEC LDR X0, [X0 + 0xDB0]
	0x03915BF0 BL 0x1C16CF4
	0x03915BF4 ADRP X0, 0x838000
	0x03915BF8 LDR X0, [X0 + 0xDB8]
	0x03915BFC BL 0x1C16CF4
	0x03915C00 ADRP X0, 0x7DE000
	0x03915C04 LDR X0, [X0 + 0xE18]
	0x03915C08 BL 0x1C16CF4
	0x03915C0C MOVZ W8, 0x1
	0x03915C10 STRB W8, [X20 + 0x848]
	0x03915C14 LDR X8, [X19 + 0x28]
	0x03915C18 CBZ X8, 0x3915C74
	0x03915C1C MOV X0, X19
	0x03915C20 BL 0x391594C
	0x03915C24 CBZ X0, 0x3915E00
	0x03915C28 ADRP X10, 0x838000
	0x03915C2C LDR X8, [X0]
	0x03915C30 LDR X10, [X10 + 0xDB0]
	0x03915C34 MOV X19, X0
	0x03915C38 LDRH W9, [X8 + 0x12E]
	0x03915C3C LDR X1, [X10]
	0x03915C40 CBZ X9, 0x3915C64
	0x03915C44 LDR X10, [X8 + 0xB0]
	0x03915C48 ADD X10, X10, 0x8
	0x03915C4C LDUR X11, [X10 - 0x8]
	0x03915C50 CMP X11, X1
	0x03915C54 B.EQ 0x3915C90
	0x03915C58 SUBS X9, X9, 0x1
	0x03915C5C ADD X10, X10, 0x10
	0x03915C60 B.NE 0x3915C4C
	0x03915C64 MOV X0, X19
	0x03915C68 MOV W2, W31
	0x03915C6C BL 0x1C5C788
	0x03915C70 B 0x3915C9C
	0x03915C74 ADRP X8, 0x839000
	0x03915C78 LDR X8, [X8 + 0x3F0]
	0x03915C7C MOV W1, W31
	0x03915C80 LDR X0, [X8]
	0x03915C84 BL 0x1C16D6C
	0x03915C88 STR X0, [X19 + 0x28]
	0x03915C8C B 0x3915DF0
	0x03915C90 LDRSW X9, [X10]
	0x03915C94 ADD X8, X8, X9, 0x4, LSL
	0x03915C98 ADD X0, X8, 0x138
	0x03915C9C LDP X8, X1, [X0]
	0x03915CA0 MOV X0, X19
	0x03915CA4 BLR X8
	0x03915CA8 MOV X19, X0
	0x03915CAC CBZ X0, 0x3915E04
	0x03915CB0 ADRP X20, 0x7DE000
	0x03915CB4 ADRP X21, 0x838000
	0x03915CB8 LDR X20, [X20 + 0xE18]
	0x03915CBC LDR X21, [X21 + 0xDB8]
	0x03915CC0 LDR X8, [X19]
	0x03915CC4 LDR X1, [X20]
	0x03915CC8 LDRH W9, [X8 + 0x12E]
	0x03915CCC CBZ X9, 0x3915CF0
	0x03915CD0 LDR X10, [X8 + 0xB0]
	0x03915CD4 ADD X10, X10, 0x8
	0x03915CD8 LDUR X11, [X10 - 0x8]
	0x03915CDC CMP X11, X1
	0x03915CE0 B.EQ 0x3915D00
	0x03915CE4 SUBS X9, X9, 0x1
	0x03915CE8 ADD X10, X10, 0x10
	0x03915CEC B.NE 0x3915CD8
	0x03915CF0 MOV X0, X19
	0x03915CF4 MOV W2, W31
	0x03915CF8 BL 0x1C5C788
	0x03915CFC B 0x3915D0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xACD000
	006 Move W8, [X21+2096]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x7E4000
	014 Move X0, [X0+184]
	015 Call 0x1C17CF4
	016 Move X0, 0x808000
	017 Move X0, [X0+600]
	018 Call 0x1C17CF4
	019 Move X0, 0x808000
	020 Move X0, [X0+608]
	021 Call 0x1C17CF4
	022 Move X0, 0x808000
	023 Move X0, [X0+616]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E4000
	026 Move X0, [X0+1944]
	027 Call 0x1C17CF4
	028 Move X0, 0x808000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2096], W8
	033 Move X0, [X20+24]
	034 Compare X0, 0
	035 JumpIfEqual {112}
	036 Move X8, 0x808000
	037 Move X8, [X8+624]
	038 Move X1, X19
	039 Move X2, [X8]
	040 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {93}
	045 Move X0, [X20+32]
	046 Compare X0, 0
	047 JumpIfEqual {112}
	048 Move X8, 0x7E4000
	049 Move X8, [X8+1944]
	050 Move X1, X19
	051 Move X2, [X8]
	052 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {93}
	057 Move X0, [X20+40]
	058 Compare X0, 0
	059 JumpIfEqual {112}
	060 Move X8, 0x808000
	061 Move X8, [X8+600]
	062 Move X1, X19
	063 Move X2, [X8]
	064 Call Dictionary`2<Object, Single>.ContainsKey, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {93}
	069 Move X0, [X20+48]
	070 Compare X0, 0
	071 JumpIfEqual {112}
	072 Move X8, 0x7E4000
	073 Move X8, [X8+184]
	074 Move X1, X19
	075 Move X2, [X8]
	076 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {93}
	081 Move X0, [X20+56]
	082 Compare X0, 0
	083 JumpIfEqual {112}
	084 Move X8, 0x808000
	085 Move X8, [X8+608]
	086 Move X1, X19
	087 Move X2, [X8]
	088 Call Dictionary`2<Object, Color>.ContainsKey, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {99}
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move W0, 1
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 Return X0
	099 Move X0, [X20+64]
	100 Compare X0, 0
	101 JumpIfEqual {112}
	102 Move X8, 0x808000
	103 Move X8, [X8+616]
	104 Move X1, X19
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X2, [X8]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	111 Return X0
	112 Call 0x1C17F20

Method: System.Boolean HasKey(System.String key)

Disassembly:
	0x02233844 LDR X21, [X21 + 0x2A0]
	0x02233848 LDR X0, [X21]
	0x0223384C LDR W8, [X0 + 0xE0]
	0x02233850 CBNZ W8, 0x223385C
	0x02233854 BL 0x1C16DFC
	0x02233858 LDR X0, [X21]
	0x0223385C ADRP X9, 0x1EC0000
	0x02233860 LDR X8, [X0 + 0xB8]
	0x02233864 LDR X9, [X9 + 0x6C0]
	0x02233868 LDR X0, [X9]
	0x0223386C LDR X9, [X20 + 0x38]
	0x02233870 LDR X20, [X8]
	0x02233874 LDR W8, [X0 + 0xE0]
	0x02233878 LDR X21, [X9]
	0x0223387C CBNZ W8, 0x2233884
	0x02233880 BL 0x1C16DFC
	0x02233884 MOV X0, X21
	0x02233888 MOV X1, X31
	0x0223388C BL 0x338C698
	0x02233890 CBZ X20, 0x22338B8
	0x02233894 ADRP X8, 0x1EE9000
	0x02233898 LDR X8, [X8 + 0x298]
	0x0223389C MOV X1, X0
	0x022338A0 MOV X0, X20
	0x022338A4 MOV X2, X19
	0x022338A8 LDR X3, [X8]
	0x022338AC LDP X20, X19, [X31 + 0x10]
	0x022338B0 LDP X30, X21, [X31], #0x20
	0x022338B4 B 0x2AA5084
	0x022338B8 BL 0x1C16F20
	0x022338BC STP X30, X21, [X31 - 0x20]!
	0x022338C0 STP X20, X19, [X31 + 0x10]
	0x022338C4 LDR X8, [X1 + 0x38]
	0x022338C8 MOV X20, X1
	0x022338CC MOV X19, X0
	0x022338D0 CBNZ X8, 0x2233908
	0x022338D4 ADRP X0, 0x1EE9000
	0x022338D8 LDR X0, [X0 + 0x298]
	0x022338DC BL 0x1C16CF4
	0x022338E0 ADRP X0, 0x1EE9000
	0x022338E4 LDR X0, [X0 + 0x2A0]
	0x022338E8 BL 0x1C16CF4
	0x022338EC ADRP X0, 0x1EC0000
	0x022338F0 LDR X0, [X0 + 0x6C0]
	0x022338F4 BL 0x1C16CF4
	0x022338F8 LDR X8, [X20 + 0x38]
	0x022338FC CBNZ X8, 0x2233908
	0x02233900 MOV X0, X20
	0x02233904 BL 0x1C5C6E0
	0x02233908 ADRP X21, 0x1EE9000
	0x0223390C LDR X21, [X21 + 0x2A0]
	0x02233910 LDR X0, [X21]
	0x02233914 LDR W8, [X0 + 0xE0]
	0x02233918 CBNZ W8, 0x2233924
	0x0223391C BL 0x1C16DFC
	0x02233920 LDR X0, [X21]
	0x02233924 ADRP X9, 0x1EC0000
	0x02233928 LDR X8, [X0 + 0xB8]
	0x0223392C LDR X9, [X9 + 0x6C0]
	0x02233930 LDR X0, [X9]
	0x02233934 LDR X9, [X20 + 0x38]
	0x02233938 LDR X20, [X8]
	0x0223393C LDR W8, [X0 + 0xE0]
	0x02233940 LDR X21, [X9]
	0x02233944 CBNZ W8, 0x223394C
	0x02233948 BL 0x1C16DFC
	0x0223394C MOV X0, X21
	0x02233950 MOV X1, X31
	0x02233954 BL 0x338C698
	0x02233958 CBZ X20, 0x2233980
	0x0223395C ADRP X8, 0x1EE9000
	0x02233960 LDR X8, [X8 + 0x298]
	0x02233964 MOV X1, X0
	0x02233968 MOV X0, X20
	0x0223396C MOV X2, X19
	0x02233970 LDR X3, [X8]
	0x02233974 LDP X20, X19, [X31 + 0x10]
	0x02233978 LDP X30, X21, [X31], #0x20
	0x0223397C B 0x2AA5084
	0x02233980 BL 0x1C16F20
	0x02233984 STP X30, X21, [X31 - 0x20]!
	0x02233988 STP X20, X19, [X31 + 0x10]
	0x0223398C LDR X8, [X1 + 0x38]
	0x02233990 MOV X20, X1
	0x02233994 MOV X19, X0
	0x02233998 CBNZ X8, 0x22339D0
	0x0223399C ADRP X0, 0x1EE9000
	0x022339A0 LDR X0, [X0 + 0x298]
	0x022339A4 BL 0x1C16CF4
	0x022339A8 ADRP X0, 0x1EE9000
	0x022339AC LDR X0, [X0 + 0x2A0]
	0x022339B0 BL 0x1C16CF4
	0x022339B4 ADRP X0, 0x1EC0000
	0x022339B8 LDR X0, [X0 + 0x6C0]
	0x022339BC BL 0x1C16CF4
	0x022339C0 LDR X8, [X20 + 0x38]
	0x022339C4 CBNZ X8, 0x22339D0
	0x022339C8 MOV X0, X20
	0x022339CC BL 0x1C5C6E0
	0x022339D0 ADRP X21, 0x1EE9000
	0x022339D4 LDR X21, [X21 + 0x2A0]
	0x022339D8 LDR X0, [X21]
	0x022339DC LDR W8, [X0 + 0xE0]
	0x022339E0 CBNZ W8, 0x22339EC
	0x022339E4 BL 0x1C16DFC
	0x022339E8 LDR X0, [X21]
	0x022339EC ADRP X9, 0x1EC0000
	0x022339F0 LDR X8, [X0 + 0xB8]
	0x022339F4 LDR X9, [X9 + 0x6C0]
	0x022339F8 LDR X0, [X9]
	0x022339FC LDR X9, [X20 + 0x38]
	0x02233A00 LDR X20, [X8]
	0x02233A04 LDR W8, [X0 + 0xE0]
	0x02233A08 LDR X21, [X9]
	0x02233A0C CBNZ W8, 0x2233A14
	0x02233A10 BL 0x1C16DFC
	0x02233A14 MOV X0, X21
	0x02233A18 MOV X1, X31
	0x02233A1C BL 0x338C698
	0x02233A20 CBZ X20, 0x2233A48
	0x02233A24 ADRP X8, 0x1EE9000
	0x02233A28 LDR X8, [X8 + 0x298]
	0x02233A2C MOV X1, X0
	0x02233A30 MOV X0, X20
	0x02233A34 MOV X2, X19
	0x02233A38 LDR X3, [X8]
	0x02233A3C LDP X20, X19, [X31 + 0x10]
	0x02233A40 LDP X30, X21, [X31], #0x20
	0x02233A44 B 0x2AA5084
	0x02233A48 BL 0x1C16F20
	0x02233A4C STP X30, X21, [X31 - 0x20]!
	0x02233A50 STP X20, X19, [X31 + 0x10]
	0x02233A54 LDR X8, [X1 + 0x38]
	0x02233A58 MOV X20, X1
	0x02233A5C MOV X19, X0
	0x02233A60 CBNZ X8, 0x2233A98
	0x02233A64 ADRP X0, 0x1EE9000
	0x02233A68 LDR X0, [X0 + 0x298]
	0x02233A6C BL 0x1C16CF4
	0x02233A70 ADRP X0, 0x1EE9000
	0x02233A74 LDR X0, [X0 + 0x2A0]
	0x02233A78 BL 0x1C16CF4
	0x02233A7C ADRP X0, 0x1EC0000
	0x02233A80 LDR X0, [X0 + 0x6C0]
	0x02233A84 BL 0x1C16CF4
	0x02233A88 LDR X8, [X20 + 0x38]
	0x02233A8C CBNZ X8, 0x2233A98
	0x02233A90 MOV X0, X20
	0x02233A94 BL 0x1C5C6E0
	0x02233A98 ADRP X21, 0x1EE9000
	0x02233A9C LDR X21, [X21 + 0x2A0]
	0x02233AA0 LDR X0, [X21]
	0x02233AA4 LDR W8, [X0 + 0xE0]
	0x02233AA8 CBNZ W8, 0x2233AB4
	0x02233AAC BL 0x1C16DFC
	0x02233AB0 LDR X0, [X21]
	0x02233AB4 ADRP X9, 0x1EC0000
	0x02233AB8 LDR X8, [X0 + 0xB8]
	0x02233ABC LDR X9, [X9 + 0x6C0]
	0x02233AC0 LDR X0, [X9]
	0x02233AC4 LDR X9, [X20 + 0x38]
	0x02233AC8 LDR X20, [X8]
	0x02233ACC LDR W8, [X0 + 0xE0]
	0x02233AD0 LDR X21, [X9]
	0x02233AD4 CBNZ W8, 0x2233ADC
	0x02233AD8 BL 0x1C16DFC
	0x02233ADC MOV X0, X21
	0x02233AE0 MOV X1, X31
	0x02233AE4 BL 0x338C698
	0x02233AE8 CBZ X20, 0x2233B10
	0x02233AEC ADRP X8, 0x1EE9000
	0x02233AF0 LDR X8, [X8 + 0x298]
	0x02233AF4 MOV X1, X0
	0x02233AF8 MOV X0, X20
	0x02233AFC MOV X2, X19
	0x02233B00 LDR X3, [X8]
	0x02233B04 LDP X20, X19, [X31 + 0x10]
	0x02233B08 LDP X30, X21, [X31], #0x20
	0x02233B0C B 0x2AA5084
	0x02233B10 BL 0x1C16F20
	0x02233B14 STP X30, X21, [X31 - 0x20]!
	0x02233B18 STP X20, X19, [X31 + 0x10]
	0x02233B1C LDR X8, [X1 + 0x38]
	0x02233B20 MOV X20, X1
	0x02233B24 MOV X19, X0
	0x02233B28 CBNZ X8, 0x2233B60
	0x02233B2C ADRP X0, 0x1EE9000
	0x02233B30 LDR X0, [X0 + 0x298]
	0x02233B34 BL 0x1C16CF4
	0x02233B38 ADRP X0, 0x1EE9000
	0x02233B3C LDR X0, [X0 + 0x2A0]
	0x02233B40 BL 0x1C16CF4
	0x02233B44 ADRP X0, 0x1EC0000
	0x02233B48 LDR X0, [X0 + 0x6C0]
	0x02233B4C BL 0x1C16CF4
	0x02233B50 LDR X8, [X20 + 0x38]
	0x02233B54 CBNZ X8, 0x2233B60
	0x02233B58 MOV X0, X20
	0x02233B5C BL 0x1C5C6E0
	0x02233B60 ADRP X21, 0x1EE9000
	0x02233B64 LDR X21, [X21 + 0x2A0]
	0x02233B68 LDR X0, [X21]
	0x02233B6C LDR W8, [X0 + 0xE0]
	0x02233B70 CBNZ W8, 0x2233B7C
	0x02233B74 BL 0x1C16DFC
	0x02233B78 LDR X0, [X21]
	0x02233B7C ADRP X9, 0x1EC0000
	0x02233B80 LDR X8, [X0 + 0xB8]
	0x02233B84 LDR X9, [X9 + 0x6C0]
	0x02233B88 LDR X0, [X9]
	0x02233B8C LDR X9, [X20 + 0x38]
	0x02233B90 LDR X20, [X8]
	0x02233B94 LDR W8, [X0 + 0xE0]
	0x02233B98 LDR X21, [X9]
	0x02233B9C CBNZ W8, 0x2233BA4
	0x02233BA0 BL 0x1C16DFC
	0x02233BA4 MOV X0, X21
	0x02233BA8 MOV X1, X31
	0x02233BAC BL 0x338C698
	0x02233BB0 CBZ X20, 0x2233BD8
	0x02233BB4 ADRP X8, 0x1EE9000
	0x02233BB8 LDR X8, [X8 + 0x298]
	0x02233BBC MOV X1, X0
	0x02233BC0 MOV X0, X20
	0x02233BC4 MOV X2, X19
	0x02233BC8 LDR X3, [X8]
	0x02233BCC LDP X20, X19, [X31 + 0x10]
	0x02233BD0 LDP X30, X21, [X31], #0x20
	0x02233BD4 B 0x2AA5084
	0x02233BD8 BL 0x1C16F20
	0x02233BDC STP X30, X21, [X31 - 0x20]!
	0x02233BE0 STP X20, X19, [X31 + 0x10]
	0x02233BE4 LDR X8, [X1 + 0x38]
	0x02233BE8 MOV X20, X1
	0x02233BEC MOV X19, X0
	0x02233BF0 CBNZ X8, 0x2233C28
	0x02233BF4 ADRP X0, 0x1EE9000
	0x02233BF8 LDR X0, [X0 + 0x298]
	0x02233BFC BL 0x1C16CF4
	0x02233C00 ADRP X0, 0x1EE9000
	0x02233C04 LDR X0, [X0 + 0x2A0]
	0x02233C08 BL 0x1C16CF4
	0x02233C0C ADRP X0, 0x1EC0000
	0x02233C10 LDR X0, [X0 + 0x6C0]
	0x02233C14 BL 0x1C16CF4
	0x02233C18 LDR X8, [X20 + 0x38]
	0x02233C1C CBNZ X8, 0x2233C28
	0x02233C20 MOV X0, X20
	0x02233C24 BL 0x1C5C6E0
	0x02233C28 ADRP X21, 0x1EE9000
	0x02233C2C LDR X21, [X21 + 0x2A0]
	0x02233C30 LDR X0, [X21]
	0x02233C34 LDR W8, [X0 + 0xE0]
	0x02233C38 CBNZ W8, 0x2233C44
	0x02233C3C BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {65}
	014 Move X0, 0x1EEA000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move X0, 0x1EEA000
	018 Move X0, [X0+592]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EC1000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EC6000
	024 Move X0, [X0+184]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EEA000
	027 Move X0, [X0+600]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EEA000
	030 Move X0, [X0+608]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EEA000
	033 Move X0, [X0+616]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EC6000
	036 Move X0, [X0+1944]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EEA000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EE8000
	042 Move X0, [X0+3456]
	043 Call 0x1C17CF4
	044 Move X0, 0x1EEA000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move X0, 0x1EE9000
	048 Move X0, [X0+2688]
	049 Call 0x1C17CF4
	050 Move X0, 0x1EE9000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0x1EC1000
	054 Move X0, [X0+1728]
	055 Call 0x1C17CF4
	056 Move X0, 0x1EEA000
	057 Move X0, [X0+648]
	058 Call 0x1C17CF4
	059 Move X8, [X20+56]
	060 Compare X8, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X20
	063 Call 0x1C5D6E0
	064 Move X8, [X20+56]
	065 Move X24, 0x1EC1000
	066 Move X24, [X24+1728]
	067 Move X22, [X8]
	068 Move X0, [X24]
	069 Move W9, [X0+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X22
	074 Move X1, X31
	075 Call Type.GetTypeFromHandle, X0
	076 Move X8, 0x1EE8000
	077 Move X8, [X8+3456]
	078 Move X22, X0
	079 Move X1, X31
	080 Move X8, [X8]
	081 Move X0, X8
	082 Call Type.GetTypeFromHandle, X0
	083 Move X1, X0
	084 Move X0, X22
	085 Move X2, X31
	086 Call Type.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move X0, [X21+32]
	092 Compare X0, 0
	093 JumpIfEqual {316}
	094 Move X8, 0x1EC6000
	095 Move X8, [X8+1944]
	096 Move X1, X19
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X2, [X8]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	106 Return X0
	107 Move X8, 0x1EE9000
	108 Move X0, [X24]
	109 Move X8, [X8+2688]
	110 Move W9, [X0+224]
	111 Move X23, [X8]
	112 Compare W9, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X23
	116 Move X1, X31
	117 Call Type.GetTypeFromHandle, X0
	118 Move X1, X0
	119 Move X0, X22
	120 Move X2, X31
	121 Call Type.op_Equality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {142}
	126 Move X0, [X21+40]
	127 Compare X0, 0
	128 JumpIfEqual {316}
	129 Move X8, 0x1EEA000
	130 Move X8, [X8+600]
	131 Move X1, X19
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X2, [X8]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X30, [X31+64]
	140 Call Dictionary`2<Object, Single>.ContainsKey, X0, X1
	141 Return X0
	142 Move X8, 0x1EEA000
	143 Move X0, [X24]
	144 Move X8, [X8+584]
	145 Move W9, [X0+224]
	146 Move X23, [X8]
	147 Compare W9, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X23
	151 Move X1, X31
	152 Call Type.GetTypeFromHandle, X0
	153 Move X1, X0
	154 Move X0, X22
	155 Move X2, X31
	156 Call Type.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {177}
	161 Move X0, [X21+24]
	162 Compare X0, 0
	163 JumpIfEqual {316}
	164 Move X8, 0x1EEA000
	165 Move X8, [X8+624]
	166 Move X1, X19
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X2, [X8]
	172 Move X24, [X31+16]
	173 Move X23, [X31+24]
	174 Move X30, [X31+64]
	175 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	176 Return X0
	177 Move X8, 0x1EE9000
	178 Move X0, [X24]
	179 Move X8, [X8+2912]
	180 Move W9, [X0+224]
	181 Move X23, [X8]
	182 Compare W9, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X23
	186 Move X1, X31
	187 Call Type.GetTypeFromHandle, X0
	188 Move X1, X0
	189 Move X0, X22
	190 Move X2, X31
	191 Call Type.op_Equality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {212}
	196 Move X0, [X21+48]
	197 Compare X0, 0
	198 JumpIfEqual {316}
	199 Move X8, 0x1EC6000
	200 Move X8, [X8+184]
	201 Move X2, [X8]
	202 Move X1, X19
	203 Move X20, [X31+48]
	204 Move X19, [X31+56]
	205 Move X22, [X31+32]
	206 Move X21, [X31+40]
	207 Move X24, [X31+16]
	208 Move X23, [X31+24]
	209 Move X30, [X31+64]
	210 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	211 Return X0
	212 Move X8, 0x1EEA000
	213 Move X0, [X24]
	214 Move X8, [X8+592]
	215 Move W9, [X0+224]
	216 Move X23, [X8]
	217 Compare W9, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X23
	221 Move X1, X31
	222 Call Type.GetTypeFromHandle, X0
	223 Move X1, X0
	224 Move X0, X22
	225 Move X2, X31
	226 Call Type.op_Equality, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {247}
	231 Move X0, [X21+56]
	232 Compare X0, 0
	233 JumpIfEqual {316}
	234 Move X8, 0x1EEA000
	235 Move X8, [X8+608]
	236 Move X1, X19
	237 Move X20, [X31+48]
	238 Move X19, [X31+56]
	239 Move X22, [X31+32]
	240 Move X21, [X31+40]
	241 Move X2, [X8]
	242 Move X24, [X31+16]
	243 Move X23, [X31+24]
	244 Move X30, [X31+64]
	245 Call Dictionary`2<Object, Color>.ContainsKey, X0, X1
	246 Return X0
	247 Move X8, 0x1EEA000
	248 Move X0, [X24]
	249 Move X8, [X8+632]
	250 Move W9, [X0+224]
	251 Move X23, [X8]
	252 Compare W9, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X0, X23
	256 Move X1, X31
	257 Call Type.GetTypeFromHandle, X0
	258 Move X1, X0
	259 Move X0, X22
	260 Move X2, X31
	261 Call Type.op_Equality, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {271}
	266 Move X0, [X21+64]
	267 Compare X0, 0
	268 JumpIfEqual {316}
	269 Move X8, 0x1EEA000
	270 Move X8, [X8+616]
	271 Move X0, [X24]
	272 Move X8, [X20+56]
	273 Move W9, [X0+224]
	274 Move X20, [X8]
	275 Compare W9, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, X20
	279 Move X1, X31
	280 Call Type.GetTypeFromHandle, X0
	281 Compare X0, 0
	282 JumpIfEqual {316}
	283 Move X8, [X0]
	284 Move X9, [X8+360]
	285 Move X1, [X8+368]
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move X8, 0x1EEA000
	288 Move X8, [X8+648]
	289 Move X1, X0
	290 Move X2, X19
	291 Move X3, X31
	292 Move X8, [X8]
	293 Move X0, X8
	294 Call String.Format, X0, X1, X2
	295 Move X8, 0x1EC1000
	296 Move X8, [X8+2600]
	297 Move X19, X0
	298 Move X8, [X8]
	299 Move W9, [X8+224]
	300 Compare W9, 0
	301 JumpIfNotEqual {304}
	302 Move X0, X8
	303 Call 0x1C17DFC
	304 Move X0, X19
	305 Move X1, X31
	306 Call Debug.LogWarning, X0
	307 Move X20, [X31+48]
	308 Move X19, [X31+56]
	309 Move X22, [X31+32]
	310 Move X21, [X31+40]
	311 Move X24, [X31+16]
	312 Move X23, [X31+24]
	313 Move W0, W31
	314 Move X30, [X31+64]
	315 Return X0
	316 Call 0x1C17F20

Method: System.Void DeleteKey(System.String key)

Disassembly:
	0x03915D00 LDRSW X9, [X10]
	0x03915D04 ADD X8, X8, X9, 0x4, LSL
	0x03915D08 ADD X0, X8, 0x138
	0x03915D0C LDP X8, X1, [X0]
	0x03915D10 MOV X0, X19
	0x03915D14 BLR X8
	0x03915D18 TBZ X0, 0x0, 0x3915D84
	0x03915D1C LDR X8, [X19]
	0x03915D20 LDR X1, [X21]
	0x03915D24 LDRH W9, [X8 + 0x12E]
	0x03915D28 CBZ X9, 0x3915D4C
	0x03915D2C LDR X10, [X8 + 0xB0]
	0x03915D30 ADD X10, X10, 0x8
	0x03915D34 LDUR X11, [X10 - 0x8]
	0x03915D38 CMP X11, X1
	0x03915D3C B.EQ 0x3915D5C
	0x03915D40 SUBS X9, X9, 0x1
	0x03915D44 ADD X10, X10, 0x10
	0x03915D48 B.NE 0x3915D34
	0x03915D4C MOV X0, X19
	0x03915D50 MOV W2, W31
	0x03915D54 BL 0x1C5C788
	0x03915D58 B 0x3915D68
	0x03915D5C LDRSW X9, [X10]
	0x03915D60 ADD X8, X8, X9, 0x4, LSL
	0x03915D64 ADD X0, X8, 0x138
	0x03915D68 LDP X8, X1, [X0]
	0x03915D6C MOV X0, X19
	0x03915D70 BLR X8
	0x03915D74 CBZ X0, 0x3915DFC
	0x03915D78 MOV X1, X31
	0x03915D7C BL 0x38FFC64
	0x03915D80 B 0x3915CC0
	0x03915D84 MOV X20, X31
	0x03915D88 CBZ X19, 0x3915DEC
	0x03915D8C ADRP X10, 0x7DE000
	0x03915D90 LDR X8, [X19]
	0x03915D94 LDR X10, [X10 + 0xE00]
	0x03915D98 LDRH W9, [X8 + 0x12E]
	0x03915D9C LDR X1, [X10]
	0x03915DA0 CBZ X9, 0x3915DC4
	0x03915DA4 LDR X10, [X8 + 0xB0]
	0x03915DA8 ADD X10, X10, 0x8
	0x03915DAC LDUR X11, [X10 - 0x8]
	0x03915DB0 CMP X11, X1
	0x03915DB4 B.EQ 0x3915DD4
	0x03915DB8 SUBS X9, X9, 0x1
	0x03915DBC ADD X10, X10, 0x10
	0x03915DC0 B.NE 0x3915DAC
	0x03915DC4 MOV X0, X19
	0x03915DC8 MOV W2, W31
	0x03915DCC BL 0x1C5C788
	0x03915DD0 B 0x3915DE0
	0x03915DD4 LDRSW X9, [X10]
	0x03915DD8 ADD X8, X8, X9, 0x4, LSL
	0x03915DDC ADD X0, X8, 0x138
	0x03915DE0 LDP X8, X1, [X0]
	0x03915DE4 MOV X0, X19
	0x03915DE8 BLR X8
	0x03915DEC CBNZ X20, 0x3915E08
	0x03915DF0 LDP X20, X19, [X31 + 0x10]
	0x03915DF4 LDP X30, X21, [X31], #0x20
	0x03915DF8 RET
	0x03915DFC BL 0x1C16F20
	0x03915E00 BL 0x1C16F20
	0x03915E04 BL 0x1C16F20
	0x03915E08 MOV X0, X20
	0x03915E0C BL 0x1C16F18
	0x03915E10 B 0x3915E1C
	0x03915E14 B 0x3915E1C
	0x03915E18 B 0x3915E1C
	0x03915E1C MOV X21, X0
	0x03915E20 CMP W1, 0x1
	0x03915E24 B.NE 0x3915E3C
	0x03915E28 MOV X0, X21
	0x03915E2C BL 0x3EB1AD0
	0x03915E30 LDR X20, [X0]
	0x03915E34 BL 0x3EB1AE0
	0x03915E38 B 0x3915D88
	0x03915E3C MOV X20, X31
	0x03915E40 B 0x3915E48
	0x03915E44 MOV X21, X0
	0x03915E48 CBZ X19, 0x3915EAC
	0x03915E4C ADRP X10, 0x7DE000
	0x03915E50 LDR X8, [X19]
	0x03915E54 LDR X10, [X10 + 0xE00]
	0x03915E58 LDRH W9, [X8 + 0x12E]
	0x03915E5C LDR X1, [X10]
	0x03915E60 CBZ X9, 0x3915E84
	0x03915E64 LDR X10, [X8 + 0xB0]
	0x03915E68 ADD X10, X10, 0x8
	0x03915E6C LDUR X11, [X10 - 0x8]
	0x03915E70 CMP X11, X1
	0x03915E74 B.EQ 0x3915E94
	0x03915E78 SUBS X9, X9, 0x1
	0x03915E7C ADD X10, X10, 0x10
	0x03915E80 B.NE 0x3915E6C
	0x03915E84 MOV X0, X19
	0x03915E88 MOV W2, W31
	0x03915E8C BL 0x1C5C788
	0x03915E90 B 0x3915EA0
	0x03915E94 LDRSW X9, [X10]
	0x03915E98 ADD X8, X8, X9, 0x4, LSL
	0x03915E9C ADD X0, X8, 0x138
	0x03915EA0 LDP X8, X1, [X0]
	0x03915EA4 MOV X0, X19
	0x03915EA8 BLR X8
	0x03915EAC CBNZ X20, 0x3915EB8
	0x03915EB0 MOV X0, X21
	0x03915EB4 BL 0x1D2C690
	0x03915EB8 MOV X0, X20
	0x03915EBC BL 0x1C16F18
	0x03915EC0 BL 0x1990590
	0x03915EC4 STP X30, X19, [X31 - 0x10]!
	0x03915EC8 MOV X19, X0
	0x03915ECC BL 0x3915A68
	0x03915ED0 MOV X0, X19
	0x03915ED4 BL 0x3915B10
	0x03915ED8 MOV X0, X19
	0x03915EDC BL 0x3915BB8
	0x03915EE0 MOVZ W8, 0x1
	0x03915EE4 STRB W8, [X19 + 0xE8]
	0x03915EE8 LDP X30, X19, [X31], #0x10
	0x03915EEC RET
	0x03915EF0 LDR X0, [X0 + 0x30]
	0x03915EF4 RET
	0x03915EF8 STR X1, [X0 + 0x30]
	0x03915EFC B 0x3915A68
	0x03915F00 STR X30, [X31 - 0x30]!
	0x03915F04 STP X22, X21, [X31 + 0x10]
	0x03915F08 STP X20, X19, [X31 + 0x20]
	0x03915F0C ADRP X22, 0xACC000
	0x03915F10 ADRP X21, 0x839000
	0x03915F14 ADRP X20, 0x839000
	0x03915F18 LDRB W8, [X22 + 0x849]
	0x03915F1C LDR X21, [X21 + 0x3F8]
	0x03915F20 LDR X20, [X20 + 0x400]
	0x03915F24 MOV X19, X0
	0x03915F28 TBNZ X8, 0x0, 0x3915F4C
	0x03915F2C ADRP X0, 0x839000
	0x03915F30 LDR X0, [X0 + 0x400]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xACD000
	006 Move W8, [X21+2097]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {51}
	013 Move X0, 0x7E4000
	014 Move X0, [X0+184]
	015 Call 0x1C17CF4
	016 Move X0, 0x808000
	017 Move X0, [X0+600]
	018 Call 0x1C17CF4
	019 Move X0, 0x808000
	020 Move X0, [X0+608]
	021 Call 0x1C17CF4
	022 Move X0, 0x808000
	023 Move X0, [X0+616]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E4000
	026 Move X0, [X0+1944]
	027 Call 0x1C17CF4
	028 Move X0, 0x808000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move X0, 0x83A000
	032 Move X0, [X0+784]
	033 Call 0x1C17CF4
	034 Move X0, 0x83A000
	035 Move X0, [X0+792]
	036 Call 0x1C17CF4
	037 Move X0, 0x83A000
	038 Move X0, [X0+800]
	039 Call 0x1C17CF4
	040 Move X0, 0x83A000
	041 Move X0, [X0+808]
	042 Call 0x1C17CF4
	043 Move X0, 0x83A000
	044 Move X0, [X0+816]
	045 Call 0x1C17CF4
	046 Move X0, 0x83A000
	047 Move X0, [X0+824]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+2097], W8
	051 Move X0, [X20+24]
	052 Compare X0, 0
	053 JumpIfEqual {181}
	054 Move X8, 0x808000
	055 Move X8, [X8+624]
	056 Move X1, X19
	057 Move X2, [X8]
	058 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {71}
	063 Move X0, [X20+24]
	064 Compare X0, 0
	065 JumpIfEqual {181}
	066 Move X8, 0x83A000
	067 Move X8, [X8+816]
	068 Move X1, X19
	069 Move X2, [X8]
	070 Call Dictionary`2<Object, Boolean>.Remove, X0, X1
	071 Move X0, [X20+32]
	072 Compare X0, 0
	073 JumpIfEqual {181}
	074 Move X8, 0x7E4000
	075 Move X8, [X8+1944]
	076 Move X1, X19
	077 Move X2, [X8]
	078 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {91}
	083 Move X0, [X20+32]
	084 Compare X0, 0
	085 JumpIfEqual {181}
	086 Move X8, 0x83A000
	087 Move X8, [X8+792]
	088 Move X1, X19
	089 Move X2, [X8]
	090 Call Dictionary`2<Object, Int32>.Remove, X0, X1
	091 Move X0, [X20+40]
	092 Compare X0, 0
	093 JumpIfEqual {181}
	094 Move X8, 0x808000
	095 Move X8, [X8+600]
	096 Move X1, X19
	097 Move X2, [X8]
	098 Call Dictionary`2<Object, Single>.ContainsKey, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {111}
	103 Move X0, [X20+40]
	104 Compare X0, 0
	105 JumpIfEqual {181}
	106 Move X8, 0x83A000
	107 Move X8, [X8+784]
	108 Move X1, X19
	109 Move X2, [X8]
	110 Call Dictionary`2<Object, Single>.Remove, X0, X1
	111 Move X0, [X20+48]
	112 Compare X0, 0
	113 JumpIfEqual {181}
	114 Move X8, 0x7E4000
	115 Move X8, [X8+184]
	116 Move X1, X19
	117 Move X2, [X8]
	118 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {131}
	123 Move X0, [X20+48]
	124 Compare X0, 0
	125 JumpIfEqual {181}
	126 Move X8, 0x83A000
	127 Move X8, [X8+824]
	128 Move X1, X19
	129 Move X2, [X8]
	130 Call Dictionary`2<Object, Object>.Remove, X0, X1
	131 Move X0, [X20+56]
	132 Compare X0, 0
	133 JumpIfEqual {181}
	134 Move X8, 0x808000
	135 Move X8, [X8+608]
	136 Move X1, X19
	137 Move X2, [X8]
	138 Call Dictionary`2<Object, Color>.ContainsKey, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {151}
	143 Move X0, [X20+56]
	144 Compare X0, 0
	145 JumpIfEqual {181}
	146 Move X8, 0x83A000
	147 Move X8, [X8+800]
	148 Move X1, X19
	149 Move X2, [X8]
	150 Call Dictionary`2<Object, Color>.Remove, X0, X1
	151 Move X0, [X20+64]
	152 Compare X0, 0
	153 JumpIfEqual {181}
	154 Move X8, 0x808000
	155 Move X8, [X8+616]
	156 Move X1, X19
	157 Move X2, [X8]
	158 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {176}
	163 Move X0, [X20+64]
	164 Compare X0, 0
	165 JumpIfEqual {181}
	166 Move X8, 0x83A000
	167 Move X8, [X8+808]
	168 Move X1, X19
	169 Move X20, [X31+16]
	170 Move X19, [X31+24]
	171 Move X2, [X8]
	172 Move X30, [X31+32]
	173 Move X21, [X31+40]
	174 Call Dictionary`2<Object, Object>.Remove, X0, X1
	175 Return 
	176 Move X20, [X31+16]
	177 Move X19, [X31+24]
	178 Move X30, [X31+32]
	179 Move X21, [X31+40]
	180 Return 
	181 Call 0x1C17F20

Method: T Get(System.String key, T fallback = null)

Disassembly:
	0x02233260 MOV X0, X20
	0x02233264 MOV X2, X19
	0x02233268 LDR X3, [X8]
	0x0223326C LDP X20, X19, [X31 + 0x10]
	0x02233270 LDP X30, X21, [X31], #0x20
	0x02233274 B 0x2AA5084
	0x02233278 BL 0x1C16F20
	0x0223327C STP X30, X21, [X31 - 0x20]!
	0x02233280 STP X20, X19, [X31 + 0x10]
	0x02233284 LDR X8, [X1 + 0x38]
	0x02233288 MOV X20, X1
	0x0223328C MOV X19, X0
	0x02233290 CBNZ X8, 0x22332C8
	0x02233294 ADRP X0, 0x1EE9000
	0x02233298 LDR X0, [X0 + 0x298]
	0x0223329C BL 0x1C16CF4
	0x022332A0 ADRP X0, 0x1EE9000
	0x022332A4 LDR X0, [X0 + 0x2A0]
	0x022332A8 BL 0x1C16CF4
	0x022332AC ADRP X0, 0x1EC0000
	0x022332B0 LDR X0, [X0 + 0x6C0]
	0x022332B4 BL 0x1C16CF4
	0x022332B8 LDR X8, [X20 + 0x38]
	0x022332BC CBNZ X8, 0x22332C8
	0x022332C0 MOV X0, X20
	0x022332C4 BL 0x1C5C6E0
	0x022332C8 ADRP X21, 0x1EE9000
	0x022332CC LDR X21, [X21 + 0x2A0]
	0x022332D0 LDR X0, [X21]
	0x022332D4 LDR W8, [X0 + 0xE0]
	0x022332D8 CBNZ W8, 0x22332E4
	0x022332DC BL 0x1C16DFC
	0x022332E0 LDR X0, [X21]
	0x022332E4 ADRP X9, 0x1EC0000
	0x022332E8 LDR X8, [X0 + 0xB8]
	0x022332EC LDR X9, [X9 + 0x6C0]
	0x022332F0 LDR X0, [X9]
	0x022332F4 LDR X9, [X20 + 0x38]
	0x022332F8 LDR X20, [X8]
	0x022332FC LDR W8, [X0 + 0xE0]
	0x02233300 LDR X21, [X9]
	0x02233304 CBNZ W8, 0x223330C
	0x02233308 BL 0x1C16DFC
	0x0223330C MOV X0, X21
	0x02233310 MOV X1, X31
	0x02233314 BL 0x338C698
	0x02233318 CBZ X20, 0x2233340
	0x0223331C ADRP X8, 0x1EE9000
	0x02233320 LDR X8, [X8 + 0x298]
	0x02233324 MOV X1, X0
	0x02233328 MOV X0, X20
	0x0223332C MOV X2, X19
	0x02233330 LDR X3, [X8]
	0x02233334 LDP X20, X19, [X31 + 0x10]
	0x02233338 LDP X30, X21, [X31], #0x20
	0x0223333C B 0x2AA5084
	0x02233340 BL 0x1C16F20
	0x02233344 STP X30, X21, [X31 - 0x20]!
	0x02233348 STP X20, X19, [X31 + 0x10]
	0x0223334C LDR X8, [X1 + 0x38]
	0x02233350 MOV X20, X1
	0x02233354 MOV X19, X0
	0x02233358 CBNZ X8, 0x2233390
	0x0223335C ADRP X0, 0x1EE9000
	0x02233360 LDR X0, [X0 + 0x298]
	0x02233364 BL 0x1C16CF4
	0x02233368 ADRP X0, 0x1EE9000
	0x0223336C LDR X0, [X0 + 0x2A0]
	0x02233370 BL 0x1C16CF4
	0x02233374 ADRP X0, 0x1EC0000
	0x02233378 LDR X0, [X0 + 0x6C0]
	0x0223337C BL 0x1C16CF4
	0x02233380 LDR X8, [X20 + 0x38]
	0x02233384 CBNZ X8, 0x2233390
	0x02233388 MOV X0, X20
	0x0223338C BL 0x1C5C6E0
	0x02233390 ADRP X21, 0x1EE9000
	0x02233394 LDR X21, [X21 + 0x2A0]
	0x02233398 LDR X0, [X21]
	0x0223339C LDR W8, [X0 + 0xE0]
	0x022333A0 CBNZ W8, 0x22333AC
	0x022333A4 BL 0x1C16DFC
	0x022333A8 LDR X0, [X21]
	0x022333AC ADRP X9, 0x1EC0000
	0x022333B0 LDR X8, [X0 + 0xB8]
	0x022333B4 LDR X9, [X9 + 0x6C0]
	0x022333B8 LDR X0, [X9]
	0x022333BC LDR X9, [X20 + 0x38]
	0x022333C0 LDR X20, [X8]
	0x022333C4 LDR W8, [X0 + 0xE0]
	0x022333C8 LDR X21, [X9]
	0x022333CC CBNZ W8, 0x22333D4
	0x022333D0 BL 0x1C16DFC
	0x022333D4 MOV X0, X21
	0x022333D8 MOV X1, X31
	0x022333DC BL 0x338C698
	0x022333E0 CBZ X20, 0x2233408
	0x022333E4 ADRP X8, 0x1EE9000
	0x022333E8 LDR X8, [X8 + 0x298]
	0x022333EC MOV X1, X0
	0x022333F0 MOV X0, X20
	0x022333F4 MOV X2, X19
	0x022333F8 LDR X3, [X8]
	0x022333FC LDP X20, X19, [X31 + 0x10]
	0x02233400 LDP X30, X21, [X31], #0x20
	0x02233404 B 0x2AA5084
	0x02233408 BL 0x1C16F20
	0x0223340C STP X30, X21, [X31 - 0x20]!
	0x02233410 STP X20, X19, [X31 + 0x10]
	0x02233414 LDR X8, [X1 + 0x38]
	0x02233418 MOV X20, X1
	0x0223341C MOV X19, X0
	0x02233420 CBNZ X8, 0x2233458
	0x02233424 ADRP X0, 0x1EE9000
	0x02233428 LDR X0, [X0 + 0x298]
	0x0223342C BL 0x1C16CF4
	0x02233430 ADRP X0, 0x1EE9000
	0x02233434 LDR X0, [X0 + 0x2A0]
	0x02233438 BL 0x1C16CF4
	0x0223343C ADRP X0, 0x1EC0000
	0x02233440 LDR X0, [X0 + 0x6C0]
	0x02233444 BL 0x1C16CF4
	0x02233448 LDR X8, [X20 + 0x38]
	0x0223344C CBNZ X8, 0x2233458
	0x02233450 MOV X0, X20
	0x02233454 BL 0x1C5C6E0
	0x02233458 ADRP X21, 0x1EE9000
	0x0223345C LDR X21, [X21 + 0x2A0]
	0x02233460 LDR X0, [X21]
	0x02233464 LDR W8, [X0 + 0xE0]
	0x02233468 CBNZ W8, 0x2233474
	0x0223346C BL 0x1C16DFC
	0x02233470 LDR X0, [X21]
	0x02233474 ADRP X9, 0x1EC0000
	0x02233478 LDR X8, [X0 + 0xB8]
	0x0223347C LDR X9, [X9 + 0x6C0]
	0x02233480 LDR X0, [X9]
	0x02233484 LDR X9, [X20 + 0x38]
	0x02233488 LDR X20, [X8]
	0x0223348C LDR W8, [X0 + 0xE0]
	0x02233490 LDR X21, [X9]
	0x02233494 CBNZ W8, 0x223349C
	0x02233498 BL 0x1C16DFC
	0x0223349C MOV X0, X21
	0x022334A0 MOV X1, X31
	0x022334A4 BL 0x338C698
	0x022334A8 CBZ X20, 0x22334D0
	0x022334AC ADRP X8, 0x1EE9000
	0x022334B0 LDR X8, [X8 + 0x298]
	0x022334B4 MOV X1, X0
	0x022334B8 MOV X0, X20
	0x022334BC MOV X2, X19
	0x022334C0 LDR X3, [X8]
	0x022334C4 LDP X20, X19, [X31 + 0x10]
	0x022334C8 LDP X30, X21, [X31], #0x20
	0x022334CC B 0x2AA5084
	0x022334D0 BL 0x1C16F20
	0x022334D4 STP X30, X21, [X31 - 0x20]!
	0x022334D8 STP X20, X19, [X31 + 0x10]
	0x022334DC LDR X8, [X1 + 0x38]
	0x022334E0 MOV X20, X1
	0x022334E4 MOV X19, X0
	0x022334E8 CBNZ X8, 0x2233520
	0x022334EC ADRP X0, 0x1EE9000
	0x022334F0 LDR X0, [X0 + 0x298]
	0x022334F4 BL 0x1C16CF4
	0x022334F8 ADRP X0, 0x1EE9000
	0x022334FC LDR X0, [X0 + 0x2A0]
	0x02233500 BL 0x1C16CF4
	0x02233504 ADRP X0, 0x1EC0000
	0x02233508 LDR X0, [X0 + 0x6C0]
	0x0223350C BL 0x1C16CF4
	0x02233510 LDR X8, [X20 + 0x38]
	0x02233514 CBNZ X8, 0x2233520
	0x02233518 MOV X0, X20
	0x0223351C BL 0x1C5C6E0
	0x02233520 ADRP X21, 0x1EE9000
	0x02233524 LDR X21, [X21 + 0x2A0]
	0x02233528 LDR X0, [X21]
	0x0223352C LDR W8, [X0 + 0xE0]
	0x02233530 CBNZ W8, 0x223353C
	0x02233534 BL 0x1C16DFC
	0x02233538 LDR X0, [X21]
	0x0223353C ADRP X9, 0x1EC0000
	0x02233540 LDR X8, [X0 + 0xB8]
	0x02233544 LDR X9, [X9 + 0x6C0]
	0x02233548 LDR X0, [X9]
	0x0223354C LDR X9, [X20 + 0x38]
	0x02233550 LDR X20, [X8]
	0x02233554 LDR W8, [X0 + 0xE0]
	0x02233558 LDR X21, [X9]
	0x0223355C CBNZ W8, 0x2233564
	0x02233560 BL 0x1C16DFC
	0x02233564 MOV X0, X21
	0x02233568 MOV X1, X31
	0x0223356C BL 0x338C698
	0x02233570 CBZ X20, 0x2233598
	0x02233574 ADRP X8, 0x1EE9000
	0x02233578 LDR X8, [X8 + 0x298]
	0x0223357C MOV X1, X0
	0x02233580 MOV X0, X20
	0x02233584 MOV X2, X19
	0x02233588 LDR X3, [X8]
	0x0223358C LDP X20, X19, [X31 + 0x10]
	0x02233590 LDP X30, X21, [X31], #0x20
	0x02233594 B 0x2AA5084
	0x02233598 BL 0x1C16F20
	0x0223359C STP X30, X21, [X31 - 0x20]!
	0x022335A0 STP X20, X19, [X31 + 0x10]
	0x022335A4 LDR X8, [X1 + 0x38]
	0x022335A8 MOV X20, X1
	0x022335AC MOV X19, X0
	0x022335B0 CBNZ X8, 0x22335E8
	0x022335B4 ADRP X0, 0x1EE9000
	0x022335B8 LDR X0, [X0 + 0x298]
	0x022335BC BL 0x1C16CF4
	0x022335C0 ADRP X0, 0x1EE9000
	0x022335C4 LDR X0, [X0 + 0x2A0]
	0x022335C8 BL 0x1C16CF4
	0x022335CC ADRP X0, 0x1EC0000
	0x022335D0 LDR X0, [X0 + 0x6C0]
	0x022335D4 BL 0x1C16CF4
	0x022335D8 LDR X8, [X20 + 0x38]
	0x022335DC CBNZ X8, 0x22335E8
	0x022335E0 MOV X0, X20
	0x022335E4 BL 0x1C5C6E0
	0x022335E8 ADRP X21, 0x1EE9000
	0x022335EC LDR X21, [X21 + 0x2A0]
	0x022335F0 LDR X0, [X21]
	0x022335F4 LDR W8, [X0 + 0xE0]
	0x022335F8 CBNZ W8, 0x2233604
	0x022335FC BL 0x1C16DFC
	0x02233600 LDR X0, [X21]
	0x02233604 ADRP X9, 0x1EC0000
	0x02233608 LDR X8, [X0 + 0xB8]
	0x0223360C LDR X9, [X9 + 0x6C0]
	0x02233610 LDR X0, [X9]
	0x02233614 LDR X9, [X20 + 0x38]
	0x02233618 LDR X20, [X8]
	0x0223361C LDR W8, [X0 + 0xE0]
	0x02233620 LDR X21, [X9]
	0x02233624 CBNZ W8, 0x223362C
	0x02233628 BL 0x1C16DFC
	0x0223362C MOV X0, X21
	0x02233630 MOV X1, X31
	0x02233634 BL 0x338C698
	0x02233638 CBZ X20, 0x2233660
	0x0223363C ADRP X8, 0x1EE9000
	0x02233640 LDR X8, [X8 + 0x298]
	0x02233644 MOV X1, X0
	0x02233648 MOV X0, X20
	0x0223364C MOV X2, X19
	0x02233650 LDR X3, [X8]
	0x02233654 LDP X20, X19, [X31 + 0x10]
	0x02233658 LDP X30, X21, [X31], #0x20
	0x0223365C B 0x2AA5084
	0x02233660 BL 0x1C16F20
	0x02233664 STP X30, X21, [X31 - 0x20]!
	0x02233668 STP X20, X19, [X31 + 0x10]
	0x0223366C LDR X8, [X1 + 0x38]
	0x02233670 MOV X20, X1
	0x02233674 MOV X19, X0
	0x02233678 CBNZ X8, 0x22336B0
	0x0223367C ADRP X0, 0x1EE9000
	0x02233680 LDR X0, [X0 + 0x298]
	0x02233684 BL 0x1C16CF4
	0x02233688 ADRP X0, 0x1EE9000
	0x0223368C LDR X0, [X0 + 0x2A0]
	0x02233690 BL 0x1C16CF4
	0x02233694 ADRP X0, 0x1EC0000
	0x02233698 LDR X0, [X0 + 0x6C0]
	0x0223369C BL 0x1C16CF4
	0x022336A0 LDR X8, [X20 + 0x38]
	0x022336A4 CBNZ X8, 0x22336B0
	0x022336A8 MOV X0, X20
	0x022336AC BL 0x1C5C6E0
	0x022336B0 ADRP X21, 0x1EE9000
	0x022336B4 LDR X21, [X21 + 0x2A0]
	0x022336B8 LDR X0, [X21]
	0x022336BC LDR W8, [X0 + 0xE0]
	0x022336C0 CBNZ W8, 0x22336CC
	0x022336C4 BL 0x1C16DFC
	0x022336C8 LDR X0, [X21]
	0x022336CC ADRP X9, 0x1EC0000
	0x022336D0 LDR X8, [X0 + 0xB8]
	0x022336D4 LDR X9, [X9 + 0x6C0]
	0x022336D8 LDR X0, [X9]
	0x022336DC LDR X9, [X20 + 0x38]
	0x022336E0 LDR X20, [X8]
	0x022336E4 LDR W8, [X0 + 0xE0]
	0x022336E8 LDR X21, [X9]
	0x022336EC CBNZ W8, 0x22336F4
	0x022336F0 BL 0x1C16DFC
	0x022336F4 MOV X0, X21
	0x022336F8 MOV X1, X31
	0x022336FC BL 0x338C698
	0x02233700 CBZ X20, 0x2233728
	0x02233704 ADRP X8, 0x1EE9000
	0x02233708 LDR X8, [X8 + 0x298]
	0x0223370C MOV X1, X0
	0x02233710 MOV X0, X20
	0x02233714 MOV X2, X19
	0x02233718 LDR X3, [X8]
	0x0223371C LDP X20, X19, [X31 + 0x10]
	0x02233720 LDP X30, X21, [X31], #0x20
	0x02233724 B 0x2AA5084
	0x02233728 BL 0x1C16F20
	0x0223372C STP X30, X21, [X31 - 0x20]!
	0x02233730 STP X20, X19, [X31 + 0x10]
	0x02233734 LDR X8, [X1 + 0x38]
	0x02233738 MOV X20, X1
	0x0223373C MOV X19, X0
	0x02233740 CBNZ X8, 0x2233778
	0x02233744 ADRP X0, 0x1EE9000
	0x02233748 LDR X0, [X0 + 0x298]
	0x0223374C BL 0x1C16CF4
	0x02233750 ADRP X0, 0x1EE9000
	0x02233754 LDR X0, [X0 + 0x2A0]
	0x02233758 BL 0x1C16CF4
	0x0223375C ADRP X0, 0x1EC0000
	0x02233760 LDR X0, [X0 + 0x6C0]
	0x02233764 BL 0x1C16CF4
	0x02233768 LDR X8, [X20 + 0x38]
	0x0223376C CBNZ X8, 0x2233778
	0x02233770 MOV X0, X20
	0x02233774 BL 0x1C5C6E0
	0x02233778 ADRP X21, 0x1EE9000
	0x0223377C LDR X21, [X21 + 0x2A0]
	0x02233780 LDR X0, [X21]
	0x02233784 LDR W8, [X0 + 0xE0]
	0x02233788 CBNZ W8, 0x2233794
	0x0223378C BL 0x1C16DFC
	0x02233790 LDR X0, [X21]
	0x02233794 ADRP X9, 0x1EC0000
	0x02233798 LDR X8, [X0 + 0xB8]
	0x0223379C LDR X9, [X9 + 0x6C0]
	0x022337A0 LDR X0, [X9]
	0x022337A4 LDR X9, [X20 + 0x38]
	0x022337A8 LDR X20, [X8]
	0x022337AC LDR W8, [X0 + 0xE0]
	0x022337B0 LDR X21, [X9]
	0x022337B4 CBNZ W8, 0x22337BC
	0x022337B8 BL 0x1C16DFC
	0x022337BC MOV X0, X21
	0x022337C0 MOV X1, X31
	0x022337C4 BL 0x338C698
	0x022337C8 CBZ X20, 0x22337F0
	0x022337CC ADRP X8, 0x1EE9000
	0x022337D0 LDR X8, [X8 + 0x298]
	0x022337D4 MOV X1, X0
	0x022337D8 MOV X0, X20
	0x022337DC MOV X2, X19
	0x022337E0 LDR X3, [X8]
	0x022337E4 LDP X20, X19, [X31 + 0x10]
	0x022337E8 LDP X30, X21, [X31], #0x20
	0x022337EC B 0x2AA5084
	0x022337F0 BL 0x1C16F20
	0x022337F4 STP X30, X21, [X31 - 0x20]!
	0x022337F8 STP X20, X19, [X31 + 0x10]
	0x022337FC LDR X8, [X1 + 0x38]
	0x02233800 MOV X20, X1
	0x02233804 MOV X19, X0
	0x02233808 CBNZ X8, 0x2233840
	0x0223380C ADRP X0, 0x1EE9000
	0x02233810 LDR X0, [X0 + 0x298]
	0x02233814 BL 0x1C16CF4
	0x02233818 ADRP X0, 0x1EE9000
	0x0223381C LDR X0, [X0 + 0x2A0]
	0x02233820 BL 0x1C16CF4
	0x02233824 ADRP X0, 0x1EC0000
	0x02233828 LDR X0, [X0 + 0x6C0]
	0x0223382C BL 0x1C16CF4
	0x02233830 LDR X8, [X20 + 0x38]
	0x02233834 CBNZ X8, 0x2233840
	0x02233838 MOV X0, X20
	0x0223383C BL 0x1C5C6E0
	0x02233840 ADRP X21, 0x1EE9000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X28+40]
	017 Move X22, X4
	018 Move X27, X3
	019 Move X24, X2
	020 Move [X29-8], X8
	021 Move [X29-16], X2
	022 Move X8, [X4+56]
	023 Move X23, X1
	024 Move X25, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {90}
	027 Move X0, 0x1EEA000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x1EC1000
	031 Move X0, [X0+2904]
	032 Call 0x1C17CF4
	033 Move X0, 0x1EEA000
	034 Move X0, [X0+592]
	035 Call 0x1C17CF4
	036 Move X0, 0x1EE9000
	037 Move X0, [X0+1504]
	038 Call 0x1C17CF4
	039 Move X0, 0x1EC1000
	040 Move X0, [X0+2600]
	041 Call 0x1C17CF4
	042 Move X0, 0x1EC6000
	043 Move X0, [X0+184]
	044 Call 0x1C17CF4
	045 Move X0, 0x1EEA000
	046 Move X0, [X0+600]
	047 Call 0x1C17CF4
	048 Move X0, 0x1EEA000
	049 Move X0, [X0+608]
	050 Call 0x1C17CF4
	051 Move X0, 0x1EEA000
	052 Move X0, [X0+616]
	053 Call 0x1C17CF4
	054 Move X0, 0x1EC6000
	055 Move X0, [X0+1944]
	056 Call 0x1C17CF4
	057 Move X0, 0x1EEA000
	058 Move X0, [X0+624]
	059 Call 0x1C17CF4
	060 Move X0, 0x1EE8000
	061 Move X0, [X0+3456]
	062 Call 0x1C17CF4
	063 Move X0, 0x1EC1000
	064 Move X0, [X0+1880]
	065 Call 0x1C17CF4
	066 Move X0, 0x1EEA000
	067 Move X0, [X0+632]
	068 Call 0x1C17CF4
	069 Move X0, 0x1EE9000
	070 Move X0, [X0+2688]
	071 Call 0x1C17CF4
	072 Move X0, 0x1EC1000
	073 Move X0, [X0+2704]
	074 Call 0x1C17CF4
	075 Move X0, 0x1EE9000
	076 Move X0, [X0+2912]
	077 Call 0x1C17CF4
	078 Move X0, 0x1EC1000
	079 Move X0, [X0+1728]
	080 Call 0x1C17CF4
	081 Move X0, 0x1EEA000
	082 Move X0, [X0+640]
	083 Call 0x1C17CF4
	084 Move X8, [X22+56]
	085 Compare X8, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X22
	088 Call 0x1C5D6E0
	089 Move X8, [X22+56]
	090 Move X26, [X8]
	091 Move X9, [X8+8]
	092 Move W20, [X9+252]
	093 Add X9, X31, 0
	094 Add X10, X20, 15
	095 And X10, X10, 0x1FFFFFFFF
	096 Subtract X21, X9, X10
	097 Add X31, X21, 0
	098 Move X19, 0x1EC1000
	099 Move X19, [X19+1728]
	100 Move X0, [X19]
	101 Move W9, [X0+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X26
	106 Move X1, X31
	107 Call Type.GetTypeFromHandle, X0
	108 Move X8, 0x1EE8000
	109 Move X8, [X8+3456]
	110 Move X26, X0
	111 Move X1, X31
	112 Move X8, [X8]
	113 Move X0, X8
	114 Call Type.GetTypeFromHandle, X0
	115 Move X1, X0
	116 Move X0, X26
	117 Move X2, X31
	118 Call Type.op_Equality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {146}
	123 Move X0, [X25+32]
	124 Compare X0, 0
	125 JumpIfEqual {441}
	126 Move X8, 0x1EC6000
	127 Move X8, [X8+1944]
	128 Move X1, X23
	129 Move X2, [X8]
	130 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {411}
	135 Move X0, X25
	136 Move X1, X23
	137 Move W2, W31
	138 Move X3, X31
	139 Call PreferenceDictionary.GetInt, X0, X1, X2
	140 Move X8, 0x1EC1000
	141 Move X8, [X8+1880]
	142 Move [X29-32], W0
	143 Move X8, [X8]
	144 Subtract X1, X29, 32
	145 Move X0, X8
	146 Move [X29-40], X28
	147 Move X8, 0x1EE9000
	148 Move X0, [X19]
	149 Move X8, [X8+2688]
	150 Move X28, X27
	151 Move W9, [X0+224]
	152 Move X27, [X8]
	153 Compare W9, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X27
	157 Move X1, X31
	158 Call Type.GetTypeFromHandle, X0
	159 Move X1, X0
	160 Move X0, X26
	161 Move X2, X31
	162 Call Type.op_Equality, X0, X1
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {208}
	167 Move X0, [X25+40]
	168 Compare X0, 0
	169 JumpIfEqual {441}
	170 Move X8, 0x1EEA000
	171 Move X8, [X8+600]
	172 Move X1, X23
	173 Move X2, [X8]
	174 Call Dictionary`2<Object, Single>.ContainsKey, X0, X1
	175 Move X27, X28
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {411}
	181 Move S0, W31
	182 Move X0, X25
	183 Move X1, X23
	184 Move X2, X31
	185 Call PreferenceDictionary.GetFloat, X0, X1, V0
	186 Move X8, 0x1EC1000
	187 Move X8, [X8+2704]
	188 Move [X29-32], S0
	189 Move X0, [X8]
	190 Subtract X1, X29, 32
	191 Call 0x1C17E04
	192 Move X8, [X22+56]
	193 Move X22, X0
	194 Move X1, [X8+8]
	195 Move W8, [X1+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {203}
	200 Move X0, X1
	201 Call 0x1C5D684
	202 Move X1, X0
	203 Move X0, X22
	204 Move X2, X21
	205 Call 0x1C17E10
	206 Move X1, X0
	207 Move X0, X27
	208 Move X8, 0x1EEA000
	209 Move X0, [X19]
	210 Move X8, [X8+584]
	211 Move W9, [X0+224]
	212 Move X27, [X8]
	213 Compare W9, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X27
	217 Move X1, X31
	218 Call Type.GetTypeFromHandle, X0
	219 Move X1, X0
	220 Move X0, X26
	221 Move X2, X31
	222 Call Type.op_Equality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {250}
	227 Move X0, [X25+24]
	228 Compare X0, 0
	229 JumpIfEqual {441}
	230 Move X8, 0x1EEA000
	231 Move X8, [X8+624]
	232 Move X1, X23
	233 Move X2, [X8]
	234 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	235 Move X27, X28
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {411}
	241 Move X0, X25
	242 Move X1, X23
	243 Move W2, W31
	244 Move X3, X31
	245 Call PreferenceDictionary.GetBool, X0, X1, X2
	246 Move X8, 0x1EC1000
	247 Move X8, [X8+2904]
	248 And W9, W0, 1
	249 NotImplemented "Instruction STURB not yet implemented."
	250 Move X8, 0x1EE9000
	251 Move X0, [X19]
	252 Move X8, [X8+2912]
	253 Move W9, [X0+224]
	254 Move X27, [X8]
	255 Compare W9, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X27
	259 Move X1, X31
	260 Call Type.GetTypeFromHandle, X0
	261 Move X1, X0
	262 Move X0, X26
	263 Move X2, X31
	264 Call Type.op_Equality, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {288}
	269 Move X0, [X25+48]
	270 Compare X0, 0
	271 JumpIfEqual {441}
	272 Move X8, 0x1EC6000
	273 Move X8, [X8+184]
	274 Move X1, X23
	275 Move X2, [X8]
	276 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	277 Move X27, X28
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {411}
	283 Move X0, X25
	284 Move X1, X23
	285 Move X2, X31
	286 Move X3, X31
	287 Call PreferenceDictionary.GetString, X0, X1, X2
	288 Move X8, 0x1EEA000
	289 Move X0, [X19]
	290 Move X8, [X8+592]
	291 Move W9, [X0+224]
	292 Move X27, [X8]
	293 Compare W9, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X0, X27
	297 Move X1, X31
	298 Call Type.GetTypeFromHandle, X0
	299 Move X1, X0
	300 Move X0, X26
	301 Move X2, X31
	302 Call Type.op_Equality, X0, X1
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {335}
	307 Move X0, [X25+56]
	308 Compare X0, 0
	309 JumpIfEqual {441}
	310 Move X8, 0x1EEA000
	311 Move X8, [X8+608]
	312 Move X1, X23
	313 Move X2, [X8]
	314 Call Dictionary`2<Object, Color>.ContainsKey, X0, X1
	315 Move X27, X28
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {411}
	321 Move S0, W31
	322 Move S1, W31
	323 Move S2, W31
	324 Move S3, W31
	325 Move X0, X25
	326 Move X1, X23
	327 Move X2, X31
	328 Call PreferenceDictionary.GetColor, X0, X1, X2
	329 Move X8, 0x1EE9000
	330 Move X8, [X8+1504]
	331 Move [X29-32], S0
	332 Move [X29-24], S1
	333 Move [X29-24], S2
	334 Move [X29-16], S3
	335 Move X8, 0x1EEA000
	336 Move X0, [X19]
	337 Move X8, [X8+632]
	338 Move W9, [X0+224]
	339 Move X27, [X8]
	340 Compare W9, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X0, X27
	344 Move X1, X31
	345 Call Type.GetTypeFromHandle, X0
	346 Move X1, X0
	347 Move X0, X26
	348 Move X2, X31
	349 Call Type.op_Equality, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {373}
	354 Move X0, [X25+64]
	355 Compare X0, 0
	356 JumpIfEqual {441}
	357 Move X8, 0x1EEA000
	358 Move X8, [X8+616]
	359 Move X1, X23
	360 Move X27, X28
	361 Move X2, [X8]
	362 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {411}
	368 Move X0, X25
	369 Move X1, X23
	370 Move X2, X31
	371 Move X3, X31
	372 Call PreferenceDictionary.GetMaterial, X0, X1, X2
	373 Move X0, [X19]
	374 Move X8, [X22+56]
	375 Move X27, X28
	376 Move W9, [X0+224]
	377 Move X25, [X8]
	378 Compare W9, 0
	379 JumpIfNotEqual {381}
	380 Call 0x1C17DFC
	381 Move X0, X25
	382 Move X1, X31
	383 Call Type.GetTypeFromHandle, X0
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 Compare X0, 0
	386 JumpIfEqual {441}
	387 Move X8, [X0]
	388 Move X9, [X8+360]
	389 Move X1, [X8+368]
	390 NotImplemented "Instruction BLR not yet implemented."
	391 Move X8, 0x1EEA000
	392 Move X8, [X8+640]
	393 Move X1, X0
	394 Move X2, X23
	395 Move X3, X31
	396 Move X8, [X8]
	397 Move X0, X8
	398 Call String.Format, X0, X1, X2
	399 Move X8, 0x1EC1000
	400 Move X8, [X8+2600]
	401 Move X23, X0
	402 Move X8, [X8]
	403 Move W9, [X8+224]
	404 Compare W9, 0
	405 JumpIfNotEqual {408}
	406 Move X0, X8
	407 Call 0x1C17DFC
	408 Move X0, X23
	409 Move X1, X31
	410 Call Debug.LogWarning, X0
	411 Move X8, [X22+56]
	412 Move X0, X21
	413 Move X2, X20
	414 Move X8, [X8+8]
	415 Move W8, [X8+40]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Subtract X8, X29, 16
	418 NotImplemented "Instruction CSEL not yet implemented."
	419 Call 0x3EB2AC0
	420 Move X0, X27
	421 Move X1, X21
	422 Move X2, X20
	423 Call 0x3EB2AC0
	424 Move X8, [X28+40]
	425 NotImplemented "Instruction LDUR not yet implemented."
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Add X31, X29, 0
	428 Move X20, [X31+80]
	429 Move X19, [X31+88]
	430 Move X22, [X31+64]
	431 Move X21, [X31+72]
	432 Move X24, [X31+48]
	433 Move X23, [X31+56]
	434 Move X26, [X31+32]
	435 Move X25, [X31+40]
	436 Move X28, [X31+16]
	437 Move X27, [X31+24]
	438 Move X29, [X31+96]
	439 Move X30, [X31+104]
	440 Return X0
	441 Call 0x1C17F20
	442 Call 0x3EB2B20

Method: System.Void Set(System.String key, T value)

Disassembly:
	0x02233C40 LDR X0, [X21]
	0x02233C44 ADRP X9, 0x1EC0000
	0x02233C48 LDR X8, [X0 + 0xB8]
	0x02233C4C LDR X9, [X9 + 0x6C0]
	0x02233C50 LDR X0, [X9]
	0x02233C54 LDR X9, [X20 + 0x38]
	0x02233C58 LDR X20, [X8]
	0x02233C5C LDR W8, [X0 + 0xE0]
	0x02233C60 LDR X21, [X9]
	0x02233C64 CBNZ W8, 0x2233C6C
	0x02233C68 BL 0x1C16DFC
	0x02233C6C MOV X0, X21
	0x02233C70 MOV X1, X31
	0x02233C74 BL 0x338C698
	0x02233C78 CBZ X20, 0x2233CA0
	0x02233C7C ADRP X8, 0x1EE9000
	0x02233C80 LDR X8, [X8 + 0x298]
	0x02233C84 MOV X1, X0
	0x02233C88 MOV X0, X20
	0x02233C8C MOV X2, X19
	0x02233C90 LDR X3, [X8]
	0x02233C94 LDP X20, X19, [X31 + 0x10]
	0x02233C98 LDP X30, X21, [X31], #0x20
	0x02233C9C B 0x2AA5084
	0x02233CA0 BL 0x1C16F20
	0x02233CA4 STP X30, X21, [X31 - 0x20]!
	0x02233CA8 STP X20, X19, [X31 + 0x10]
	0x02233CAC LDR X8, [X1 + 0x38]
	0x02233CB0 MOV X20, X1
	0x02233CB4 MOV X19, X0
	0x02233CB8 CBNZ X8, 0x2233CF0
	0x02233CBC ADRP X0, 0x1EE9000
	0x02233CC0 LDR X0, [X0 + 0x298]
	0x02233CC4 BL 0x1C16CF4
	0x02233CC8 ADRP X0, 0x1EE9000
	0x02233CCC LDR X0, [X0 + 0x2A0]
	0x02233CD0 BL 0x1C16CF4
	0x02233CD4 ADRP X0, 0x1EC0000
	0x02233CD8 LDR X0, [X0 + 0x6C0]
	0x02233CDC BL 0x1C16CF4
	0x02233CE0 LDR X8, [X20 + 0x38]
	0x02233CE4 CBNZ X8, 0x2233CF0
	0x02233CE8 MOV X0, X20
	0x02233CEC BL 0x1C5C6E0
	0x02233CF0 ADRP X21, 0x1EE9000
	0x02233CF4 LDR X21, [X21 + 0x2A0]
	0x02233CF8 LDR X0, [X21]
	0x02233CFC LDR W8, [X0 + 0xE0]
	0x02233D00 CBNZ W8, 0x2233D0C
	0x02233D04 BL 0x1C16DFC
	0x02233D08 LDR X0, [X21]
	0x02233D0C ADRP X9, 0x1EC0000
	0x02233D10 LDR X8, [X0 + 0xB8]
	0x02233D14 LDR X9, [X9 + 0x6C0]
	0x02233D18 LDR X0, [X9]
	0x02233D1C LDR X9, [X20 + 0x38]
	0x02233D20 LDR X20, [X8]
	0x02233D24 LDR W8, [X0 + 0xE0]
	0x02233D28 LDR X21, [X9]
	0x02233D2C CBNZ W8, 0x2233D34
	0x02233D30 BL 0x1C16DFC
	0x02233D34 MOV X0, X21
	0x02233D38 MOV X1, X31
	0x02233D3C BL 0x338C698
	0x02233D40 CBZ X20, 0x2233D68
	0x02233D44 ADRP X8, 0x1EE9000
	0x02233D48 LDR X8, [X8 + 0x298]
	0x02233D4C MOV X1, X0
	0x02233D50 MOV X0, X20
	0x02233D54 MOV X2, X19
	0x02233D58 LDR X3, [X8]
	0x02233D5C LDP X20, X19, [X31 + 0x10]
	0x02233D60 LDP X30, X21, [X31], #0x20
	0x02233D64 B 0x2AA5084
	0x02233D68 BL 0x1C16F20
	0x02233D6C STP X30, X21, [X31 - 0x20]!
	0x02233D70 STP X20, X19, [X31 + 0x10]
	0x02233D74 LDR X8, [X1 + 0x38]
	0x02233D78 MOV X20, X1
	0x02233D7C MOV X19, X0
	0x02233D80 CBNZ X8, 0x2233DB8
	0x02233D84 ADRP X0, 0x1EE9000
	0x02233D88 LDR X0, [X0 + 0x298]
	0x02233D8C BL 0x1C16CF4
	0x02233D90 ADRP X0, 0x1EE9000
	0x02233D94 LDR X0, [X0 + 0x2A0]
	0x02233D98 BL 0x1C16CF4
	0x02233D9C ADRP X0, 0x1EC0000
	0x02233DA0 LDR X0, [X0 + 0x6C0]
	0x02233DA4 BL 0x1C16CF4
	0x02233DA8 LDR X8, [X20 + 0x38]
	0x02233DAC CBNZ X8, 0x2233DB8
	0x02233DB0 MOV X0, X20
	0x02233DB4 BL 0x1C5C6E0
	0x02233DB8 ADRP X21, 0x1EE9000
	0x02233DBC LDR X21, [X21 + 0x2A0]
	0x02233DC0 LDR X0, [X21]
	0x02233DC4 LDR W8, [X0 + 0xE0]
	0x02233DC8 CBNZ W8, 0x2233DD4
	0x02233DCC BL 0x1C16DFC
	0x02233DD0 LDR X0, [X21]
	0x02233DD4 ADRP X9, 0x1EC0000
	0x02233DD8 LDR X8, [X0 + 0xB8]
	0x02233DDC LDR X9, [X9 + 0x6C0]
	0x02233DE0 LDR X0, [X9]
	0x02233DE4 LDR X9, [X20 + 0x38]
	0x02233DE8 LDR X20, [X8]
	0x02233DEC LDR W8, [X0 + 0xE0]
	0x02233DF0 LDR X21, [X9]
	0x02233DF4 CBNZ W8, 0x2233DFC
	0x02233DF8 BL 0x1C16DFC
	0x02233DFC MOV X0, X21
	0x02233E00 MOV X1, X31
	0x02233E04 BL 0x338C698
	0x02233E08 CBZ X20, 0x2233E30
	0x02233E0C ADRP X8, 0x1EE9000
	0x02233E10 LDR X8, [X8 + 0x298]
	0x02233E14 MOV X1, X0
	0x02233E18 MOV X0, X20
	0x02233E1C MOV X2, X19
	0x02233E20 LDR X3, [X8]
	0x02233E24 LDP X20, X19, [X31 + 0x10]
	0x02233E28 LDP X30, X21, [X31], #0x20
	0x02233E2C B 0x2AA5084
	0x02233E30 BL 0x1C16F20
	0x02233E34 STP X30, X21, [X31 - 0x20]!
	0x02233E38 STP X20, X19, [X31 + 0x10]
	0x02233E3C LDR X8, [X1 + 0x38]
	0x02233E40 MOV X20, X1
	0x02233E44 MOV X19, X0
	0x02233E48 CBNZ X8, 0x2233E80
	0x02233E4C ADRP X0, 0x1EE9000
	0x02233E50 LDR X0, [X0 + 0x298]
	0x02233E54 BL 0x1C16CF4
	0x02233E58 ADRP X0, 0x1EE9000
	0x02233E5C LDR X0, [X0 + 0x2A0]
	0x02233E60 BL 0x1C16CF4
	0x02233E64 ADRP X0, 0x1EC0000
	0x02233E68 LDR X0, [X0 + 0x6C0]
	0x02233E6C BL 0x1C16CF4
	0x02233E70 LDR X8, [X20 + 0x38]
	0x02233E74 CBNZ X8, 0x2233E80
	0x02233E78 MOV X0, X20
	0x02233E7C BL 0x1C5C6E0
	0x02233E80 ADRP X21, 0x1EE9000
	0x02233E84 LDR X21, [X21 + 0x2A0]
	0x02233E88 LDR X0, [X21]
	0x02233E8C LDR W8, [X0 + 0xE0]
	0x02233E90 CBNZ W8, 0x2233E9C
	0x02233E94 BL 0x1C16DFC
	0x02233E98 LDR X0, [X21]
	0x02233E9C ADRP X9, 0x1EC0000
	0x02233EA0 LDR X8, [X0 + 0xB8]
	0x02233EA4 LDR X9, [X9 + 0x6C0]
	0x02233EA8 LDR X0, [X9]
	0x02233EAC LDR X9, [X20 + 0x38]
	0x02233EB0 LDR X20, [X8]
	0x02233EB4 LDR W8, [X0 + 0xE0]
	0x02233EB8 LDR X21, [X9]
	0x02233EBC CBNZ W8, 0x2233EC4
	0x02233EC0 BL 0x1C16DFC
	0x02233EC4 MOV X0, X21
	0x02233EC8 MOV X1, X31
	0x02233ECC BL 0x338C698
	0x02233ED0 CBZ X20, 0x2233EF8
	0x02233ED4 ADRP X8, 0x1EE9000
	0x02233ED8 LDR X8, [X8 + 0x298]
	0x02233EDC MOV X1, X0
	0x02233EE0 MOV X0, X20
	0x02233EE4 MOV X2, X19
	0x02233EE8 LDR X3, [X8]
	0x02233EEC LDP X20, X19, [X31 + 0x10]
	0x02233EF0 LDP X30, X21, [X31], #0x20
	0x02233EF4 B 0x2AA5084
	0x02233EF8 BL 0x1C16F20
	0x02233EFC STP X30, X21, [X31 - 0x20]!
	0x02233F00 STP X20, X19, [X31 + 0x10]
	0x02233F04 LDR X8, [X1 + 0x38]
	0x02233F08 MOV X20, X1
	0x02233F0C MOV X19, X0
	0x02233F10 CBNZ X8, 0x2233F48
	0x02233F14 ADRP X0, 0x1EE9000
	0x02233F18 LDR X0, [X0 + 0x298]
	0x02233F1C BL 0x1C16CF4
	0x02233F20 ADRP X0, 0x1EE9000
	0x02233F24 LDR X0, [X0 + 0x2A0]
	0x02233F28 BL 0x1C16CF4
	0x02233F2C ADRP X0, 0x1EC0000
	0x02233F30 LDR X0, [X0 + 0x6C0]
	0x02233F34 BL 0x1C16CF4
	0x02233F38 LDR X8, [X20 + 0x38]
	0x02233F3C CBNZ X8, 0x2233F48
	0x02233F40 MOV X0, X20
	0x02233F44 BL 0x1C5C6E0
	0x02233F48 ADRP X21, 0x1EE9000
	0x02233F4C LDR X21, [X21 + 0x2A0]
	0x02233F50 LDR X0, [X21]
	0x02233F54 LDR W8, [X0 + 0xE0]
	0x02233F58 CBNZ W8, 0x2233F64
	0x02233F5C BL 0x1C16DFC
	0x02233F60 LDR X0, [X21]
	0x02233F64 ADRP X9, 0x1EC0000
	0x02233F68 LDR X8, [X0 + 0xB8]
	0x02233F6C LDR X9, [X9 + 0x6C0]
	0x02233F70 LDR X0, [X9]
	0x02233F74 LDR X9, [X20 + 0x38]
	0x02233F78 LDR X20, [X8]
	0x02233F7C LDR W8, [X0 + 0xE0]
	0x02233F80 LDR X21, [X9]
	0x02233F84 CBNZ W8, 0x2233F8C
	0x02233F88 BL 0x1C16DFC
	0x02233F8C MOV X0, X21
	0x02233F90 MOV X1, X31
	0x02233F94 BL 0x338C698
	0x02233F98 CBZ X20, 0x2233FC0
	0x02233F9C ADRP X8, 0x1EE9000
	0x02233FA0 LDR X8, [X8 + 0x298]
	0x02233FA4 MOV X1, X0
	0x02233FA8 MOV X0, X20
	0x02233FAC MOV X2, X19
	0x02233FB0 LDR X3, [X8]
	0x02233FB4 LDP X20, X19, [X31 + 0x10]
	0x02233FB8 LDP X30, X21, [X31], #0x20
	0x02233FBC B 0x2AA5084
	0x02233FC0 BL 0x1C16F20
	0x02233FC4 STP X30, X21, [X31 - 0x20]!
	0x02233FC8 STP X20, X19, [X31 + 0x10]
	0x02233FCC LDR X8, [X1 + 0x38]
	0x02233FD0 MOV X20, X1
	0x02233FD4 MOV X19, X0
	0x02233FD8 CBNZ X8, 0x2234010
	0x02233FDC ADRP X0, 0x1EE9000
	0x02233FE0 LDR X0, [X0 + 0x298]
	0x02233FE4 BL 0x1C16CF4
	0x02233FE8 ADRP X0, 0x1EE9000
	0x02233FEC LDR X0, [X0 + 0x2A0]
	0x02233FF0 BL 0x1C16CF4
	0x02233FF4 ADRP X0, 0x1EC0000
	0x02233FF8 LDR X0, [X0 + 0x6C0]
	0x02233FFC BL 0x1C16CF4
	0x02234000 LDR X8, [X20 + 0x38]
	0x02234004 CBNZ X8, 0x2234010
	0x02234008 MOV X0, X20
	0x0223400C BL 0x1C5C6E0
	0x02234010 ADRP X21, 0x1EE8000
	0x02234014 LDR X21, [X21 + 0x2A0]
	0x02234018 LDR X0, [X21]
	0x0223401C LDR W8, [X0 + 0xE0]
	0x02234020 CBNZ W8, 0x223402C
	0x02234024 BL 0x1C16DFC
	0x02234028 LDR X0, [X21]
	0x0223402C ADRP X9, 0x1EBF000
	0x02234030 LDR X8, [X0 + 0xB8]
	0x02234034 LDR X9, [X9 + 0x6C0]
	0x02234038 LDR X0, [X9]
	0x0223403C LDR X9, [X20 + 0x38]
	0x02234040 LDR X20, [X8]
	0x02234044 LDR W8, [X0 + 0xE0]
	0x02234048 LDR X21, [X9]
	0x0223404C CBNZ W8, 0x2234054
	0x02234050 BL 0x1C16DFC
	0x02234054 MOV X0, X21
	0x02234058 MOV X1, X31
	0x0223405C BL 0x338C698
	0x02234060 CBZ X20, 0x2234088
	0x02234064 ADRP X8, 0x1EE8000
	0x02234068 LDR X8, [X8 + 0x298]
	0x0223406C MOV X1, X0
	0x02234070 MOV X0, X20
	0x02234074 MOV X2, X19
	0x02234078 LDR X3, [X8]
	0x0223407C LDP X20, X19, [X31 + 0x10]
	0x02234080 LDP X30, X21, [X31], #0x20
	0x02234084 B 0x2AA5084
	0x02234088 BL 0x1C16F20
	0x0223408C STP X30, X21, [X31 - 0x20]!
	0x02234090 STP X20, X19, [X31 + 0x10]
	0x02234094 LDR X8, [X1 + 0x38]
	0x02234098 MOV X20, X1
	0x0223409C MOV X19, X0
	0x022340A0 CBNZ X8, 0x22340D8
	0x022340A4 ADRP X0, 0x1EE8000
	0x022340A8 LDR X0, [X0 + 0x298]
	0x022340AC BL 0x1C16CF4
	0x022340B0 ADRP X0, 0x1EE8000
	0x022340B4 LDR X0, [X0 + 0x2A0]
	0x022340B8 BL 0x1C16CF4
	0x022340BC ADRP X0, 0x1EBF000
	0x022340C0 LDR X0, [X0 + 0x6C0]
	0x022340C4 BL 0x1C16CF4
	0x022340C8 LDR X8, [X20 + 0x38]
	0x022340CC CBNZ X8, 0x22340D8
	0x022340D0 MOV X0, X20
	0x022340D4 BL 0x1C5C6E0
	0x022340D8 ADRP X21, 0x1EE8000
	0x022340DC LDR X21, [X21 + 0x2A0]
	0x022340E0 LDR X0, [X21]
	0x022340E4 LDR W8, [X0 + 0xE0]
	0x022340E8 CBNZ W8, 0x22340F4
	0x022340EC BL 0x1C16DFC
	0x022340F0 LDR X0, [X21]
	0x022340F4 ADRP X9, 0x1EBF000
	0x022340F8 LDR X8, [X0 + 0xB8]
	0x022340FC LDR X9, [X9 + 0x6C0]
	0x02234100 LDR X0, [X9]
	0x02234104 LDR X9, [X20 + 0x38]
	0x02234108 LDR X20, [X8]
	0x0223410C LDR W8, [X0 + 0xE0]
	0x02234110 LDR X21, [X9]
	0x02234114 CBNZ W8, 0x223411C
	0x02234118 BL 0x1C16DFC
	0x0223411C MOV X0, X21
	0x02234120 MOV X1, X31
	0x02234124 BL 0x338C698
	0x02234128 CBZ X20, 0x2234150
	0x0223412C ADRP X8, 0x1EE8000
	0x02234130 LDR X8, [X8 + 0x298]
	0x02234134 MOV X1, X0
	0x02234138 MOV X0, X20
	0x0223413C MOV X2, X19
	0x02234140 LDR X3, [X8]
	0x02234144 LDP X20, X19, [X31 + 0x10]
	0x02234148 LDP X30, X21, [X31], #0x20
	0x0223414C B 0x2AA5084
	0x02234150 BL 0x1C16F20
	0x02234154 STP X30, X21, [X31 - 0x20]!
	0x02234158 STP X20, X19, [X31 + 0x10]
	0x0223415C LDR X8, [X1 + 0x38]
	0x02234160 MOV X20, X1
	0x02234164 MOV X19, X0
	0x02234168 CBNZ X8, 0x22341A0
	0x0223416C ADRP X0, 0x1EE8000
	0x02234170 LDR X0, [X0 + 0x298]
	0x02234174 BL 0x1C16CF4
	0x02234178 ADRP X0, 0x1EE8000
	0x0223417C LDR X0, [X0 + 0x2A0]
	0x02234180 BL 0x1C16CF4
	0x02234184 ADRP X0, 0x1EBF000
	0x02234188 LDR X0, [X0 + 0x6C0]
	0x0223418C BL 0x1C16CF4
	0x02234190 LDR X8, [X20 + 0x38]
	0x02234194 CBNZ X8, 0x22341A0
	0x02234198 MOV X0, X20
	0x0223419C BL 0x1C5C6E0
	0x022341A0 ADRP X21, 0x1EE8000
	0x022341A4 LDR X21, [X21 + 0x2A0]
	0x022341A8 LDR X0, [X21]
	0x022341AC LDR W8, [X0 + 0xE0]
	0x022341B0 CBNZ W8, 0x22341BC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 Move [X29-32], X1
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X28+40]
	018 Move X21, X3
	019 Move X23, X2
	020 Move [X29-8], X8
	021 Move [X29-24], X2
	022 Move X24, [X3+56]
	023 Move [X29-40], X0
	024 Compare X24, 0
	025 JumpIfNotEqual {59}
	026 Move X0, 0x1EC1000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EE9000
	030 Move X0, [X0+1504]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EC1000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EC1000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EC5000
	039 Move X0, [X0+3232]
	040 Call 0x1C17CF4
	041 Move X0, 0x1EC1000
	042 Move X0, [X0+2704]
	043 Call 0x1C17CF4
	044 Move X0, 0x1EC3000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move X0, 0x1EC1000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move X0, 0x1EEA000
	051 Move X0, [X0+656]
	052 Call 0x1C17CF4
	053 Move X24, [X21+56]
	054 Compare X24, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X21
	057 Call 0x1C5D6E0
	058 Move X24, [X21+56]
	059 Move X0, [X24]
	060 Move W25, [X0+252]
	061 Move W9, [X0+309]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {70}
	066 Call 0x1C5D684
	067 Move X24, [X21+56]
	068 Move W8, [X0+252]
	069 Move X0, [X24]
	070 Move W8, W25
	071 Add W8, W8, 16
	072 Add X8, X8, 15
	073 Add X9, X31, 0
	074 And X8, X8, 0x1FFFFFFFF
	075 Subtract X22, X9, X8
	076 Add X31, X22, 0
	077 Add X9, X25, 15
	078 Add X8, X31, 0
	079 And X9, X9, 0x1FFFFFFFF
	080 Subtract X26, X8, X9
	081 Add X31, X26, 0
	082 Add X8, X31, 0
	083 Subtract X27, X8, X9
	084 Add X31, X27, 0
	085 Move W8, [X0+40]
	086 Subtract X19, X29, 24
	087 Move X0, X26
	088 Move X2, X25
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Call 0x3EB2AC0
	092 Move X0, [X24]
	093 Move X1, X26
	094 Call 0x1C17E04
	095 Move X20, [X21+56]
	096 Move X24, X0
	097 Move X0, X27
	098 Move X2, X25
	099 Move X8, [X20]
	100 Move W8, [X8+40]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Call 0x3EB2AC0
	104 Move X0, [X20]
	105 Move X1, X27
	106 Call 0x1C17E04
	107 Compare X0, 0
	108 JumpIfEqual {114}
	109 Move X8, 0x1EC1000
	110 Move X8, [X8+1880]
	111 Move X1, [X8]
	112 Move X8, [X0]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X20, [X21+56]
	115 Move X0, X26
	116 Move X2, X25
	117 Move X8, [X20]
	118 Move W8, [X8+40]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSEL not yet implemented."
	121 Call 0x3EB2AC0
	122 Move X0, [X20]
	123 Move X1, X26
	124 Call 0x1C17E04
	125 Compare X0, 0
	126 JumpIfEqual {132}
	127 Move X8, 0x1EC1000
	128 Move X8, [X8+2704]
	129 Move X1, [X8]
	130 Move X8, [X0]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X20, [X21+56]
	133 Subtract X19, X29, 24
	134 Move X0, X26
	135 Move X2, X25
	136 Move X8, [X20]
	137 Move W8, [X8+40]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Call 0x3EB2AC0
	141 Move X0, [X20]
	142 Move X1, X26
	143 Call 0x1C17E04
	144 Compare X0, 0
	145 JumpIfEqual {151}
	146 Move X8, 0x1EC1000
	147 Move X8, [X8+2904]
	148 Move X1, [X8]
	149 Move X8, [X0]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X20, [X21+56]
	152 Move X0, X26
	153 Move X2, X25
	154 Move X8, [X20]
	155 Move W8, [X8+40]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Call 0x3EB2AC0
	159 Move X0, [X20]
	160 Move X1, X26
	161 Call 0x1C17E04
	162 Compare X0, 0
	163 JumpIfEqual {169}
	164 Move X8, 0x1EC3000
	165 Move X8, [X8+632]
	166 Move X1, [X8]
	167 Move X8, [X0]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X20, [X21+56]
	170 Subtract X19, X29, 24
	171 Move X0, X26
	172 Move X2, X25
	173 Move X8, [X20]
	174 Move W8, [X8+40]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Call 0x3EB2AC0
	178 Move X0, [X20]
	179 Move X1, X26
	180 Call 0x1C17E04
	181 Compare X0, 0
	182 JumpIfEqual {188}
	183 Move X8, 0x1EE9000
	184 Move X8, [X8+1504]
	185 Move X1, [X8]
	186 Move X8, [X0]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X20, [X21+56]
	189 Move X0, X26
	190 Move X2, X25
	191 Move X8, [X20]
	192 Move W8, [X8+40]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 Call 0x3EB2AC0
	196 Move X0, [X20]
	197 Move X1, X26
	198 Call 0x1C17E04
	199 Compare X0, 0
	200 JumpIfEqual {212}
	201 Move X8, 0x1EC5000
	202 Move X8, [X8+3232]
	203 Move X9, [X0]
	204 Move X1, [X8]
	205 Move W10, [X9+304]
	206 Move W8, [X1+304]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X10, [X9+200]
	209 Subtract X9, X8, 1
	210 Move X10, [X10]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, 0x1EC1000
	213 Move X8, [X8+1728]
	214 Move X0, [X8]
	215 Move X8, [X21+56]
	216 Move W9, [X0+224]
	217 Move X20, [X8+8]
	218 Compare W9, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X20
	222 Move X1, X31
	223 Call Type.GetTypeFromHandle, X0
	224 Compare X0, 0
	225 JumpIfEqual {369}
	226 Move X8, [X0]
	227 Move X9, [X8+360]
	228 Move X1, [X8+368]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X9, [X21+56]
	231 Move X20, X0
	232 Move X8, [X9]
	233 Move W10, [X8+309]
	234 Move TEMP, X10
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {242}
	238 Move X0, X8
	239 Call 0x1C5D684
	240 Move X9, [X21+56]
	241 Move X8, X0
	242 Move X10, [X9]
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 Move X1, [X9+16]
	245 Subtract X9, X29, 24
	246 Move W10, [X10+40]
	247 Subtract X5, X29, 16
	248 Move X0, X8
	249 Move X2, X22
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CSEL not yet implemented."
	252 Move X4, X31
	253 Call 0x1C18728
	254 Move X8, 0x1EEA000
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 Call 0x3EB27F4
	257 Return 
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 Move X1, X20
	260 Move X4, X31
	261 Move X0, [X8]
	262 Call String.Format, X0, X1, X2, X3
	263 Move X8, 0x1EC0000
	264 Move X8, [X8+2600]
	265 Move X19, X0
	266 Move X8, [X8]
	267 Move W9, [X8+224]
	268 Compare W9, 0
	269 JumpIfNotEqual {272}
	270 Move X0, X8
	271 Call 0x1C17DFC
	272 Move X0, X19
	273 Move X1, X31
	274 Call Debug.LogWarning, X0
	275 Compare X24, 0
	276 JumpIfEqual {369}
	277 Move X8, [X24]
	278 Move X9, [X1+64]
	279 Move X8, [X8+64]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X0, X24
	282 Call 0x1C17E08
	283 Move W2, [X0]
	284 Move X0, [X29-40]
	285 Move X1, [X29-32]
	286 Move X3, X31
	287 Call PreferenceDictionary.SetInt, X0, X1, X2
	288 Compare X24, 0
	289 JumpIfEqual {369}
	290 Move X8, [X24]
	291 Move X9, [X1+64]
	292 Move X8, [X8+64]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X24
	295 Call 0x1C17E08
	296 Move V0, [X0]
	297 Move X0, [X29-40]
	298 Move X1, [X29-32]
	299 Move X2, X31
	300 Call PreferenceDictionary.SetFloat, X0, X1, V0
	301 Compare X24, 0
	302 JumpIfEqual {369}
	303 Move X8, [X24]
	304 Move X9, [X1+64]
	305 Move X8, [X8+64]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, X24
	308 Call 0x1C17E08
	309 Move W2, [X0]
	310 Move X0, [X29-40]
	311 Move X1, [X29-32]
	312 Move X3, X31
	313 Call PreferenceDictionary.SetBool, X0, X1, X2
	314 Compare X24, 0
	315 JumpIfEqual {318}
	316 Move X8, [X24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X0, [X29-40]
	319 Move X1, [X29-32]
	320 Move X2, X24
	321 Move X3, X31
	322 Call PreferenceDictionary.SetString, X0, X1, X2
	323 Compare X24, 0
	324 JumpIfEqual {369}
	325 Move X8, [X24]
	326 Move X9, [X1+64]
	327 Move X8, [X8+64]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X0, X24
	330 Call 0x1C17E08
	331 Move S0, [X0]
	332 Move S1, [X0+4]
	333 Move S2, [X0+8]
	334 Move S3, [X0+12]
	335 Move X0, [X29-40]
	336 Move X1, [X29-32]
	337 Move X2, X31
	338 Call PreferenceDictionary.SetColor, X0, X1, X2
	339 Compare X24, 0
	340 JumpIfEqual {347}
	341 Move X10, [X24]
	342 Move W11, [X10+304]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X8, [X10+200]
	345 Move X8, [X8]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X0, [X29-40]
	348 Move X1, [X29-32]
	349 Move X2, X24
	350 Move X3, X31
	351 Call PreferenceDictionary.SetMaterial, X0, X1, X2
	352 Move X8, [X28+40]
	353 NotImplemented "Instruction LDUR not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Add X31, X29, 0
	356 Move X20, [X31+80]
	357 Move X19, [X31+88]
	358 Move X22, [X31+64]
	359 Move X21, [X31+72]
	360 Move X24, [X31+48]
	361 Move X23, [X31+56]
	362 Move X26, [X31+32]
	363 Move X25, [X31+40]
	364 Move X28, [X31+16]
	365 Move X27, [X31+24]
	366 Move X29, [X31+96]
	367 Move X30, [X31+104]
	368 Return 
	369 Call 0x1C17F20
	370 Move X0, X24
	371 Call 0x1C181E0
	372 Call 0x3EB2B20

Method: System.Boolean GetBool(System.String key, System.Boolean fallback = False)

Disassembly:
	0x03915F34 BL 0x1C16CF4
	0x03915F38 ADRP X0, 0x839000
	0x03915F3C LDR X0, [X0 + 0x3F8]
	0x03915F40 BL 0x1C16CF4
	0x03915F44 MOVZ W8, 0x1
	0x03915F48 STRB W8, [X22 + 0x849]
	0x03915F4C LDR X0, [X21]
	0x03915F50 LDR X19, [X19 + 0x30]
	0x03915F54 BL 0x1C16F10
	0x03915F58 LDR X2, [X20]
	0x03915F5C MOV X1, X19
	0x03915F60 MOV X20, X0
	0x03915F64 BL 0x2551884
	0x03915F68 MOV X0, X20
	0x03915F6C LDP X20, X19, [X31 + 0x20]
	0x03915F70 LDP X22, X21, [X31 + 0x10]
	0x03915F74 LDR X30, [X31], #0x30
	0x03915F78 RET
	0x03915F7C STP X30, X27, [X31 - 0x50]!
	0x03915F80 STP X26, X25, [X31 + 0x10]
	0x03915F84 STP X24, X23, [X31 + 0x20]
	0x03915F88 STP X22, X21, [X31 + 0x30]
	0x03915F8C STP X20, X19, [X31 + 0x40]
	0x03915F90 ADRP X21, 0xACC000
	0x03915F94 LDRB W8, [X21 + 0x84A]
	0x03915F98 MOV X19, X1
	0x03915F9C MOV X20, X0
	0x03915FA0 TBNZ X8, 0x0, 0x3915FDC
	0x03915FA4 ADRP X0, 0x839000
	0x03915FA8 LDR X0, [X0 + 0x408]
	0x03915FAC BL 0x1C16CF4
	0x03915FB0 ADRP X0, 0x839000
	0x03915FB4 LDR X0, [X0 + 0x410]
	0x03915FB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACD000
	007 Move W8, [X22+2098]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x83A000
	016 Move X0, [X0+832]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2098], W8
	020 Move [X31+12], W31
	021 Move X0, [X21+24]
	022 Compare X0, 0
	023 JumpIfEqual {42}
	024 Move X8, 0x83A000
	025 Move X8, [X8+832]
	026 Add X2, X31, 12
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Boolean>.TryGetValue, X0, X1, X2
	030 Move W8, [X31+12]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 And W31, W0, 1
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 And W0, W8, 1
	040 Move X30, [X31+48]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Int32 GetInt(System.String key, System.Int32 fallback = 0)

Disassembly:
	0x03915FBC ADRP X0, 0x839000
	0x03915FC0 LDR X0, [X0 + 0x418]
	0x03915FC4 BL 0x1C16CF4
	0x03915FC8 ADRP X0, 0x839000
	0x03915FCC LDR X0, [X0 + 0x420]
	0x03915FD0 BL 0x1C16CF4
	0x03915FD4 MOVZ W8, 0x1
	0x03915FD8 STRB W8, [X21 + 0x84A]
	0x03915FDC CBZ X19, 0x3916150
	0x03915FE0 ADRP X10, 0x839000
	0x03915FE4 LDR X8, [X19]
	0x03915FE8 LDR X10, [X10 + 0x408]
	0x03915FEC ADRP X21, 0x839000
	0x03915FF0 LDRH W9, [X8 + 0x12E]
	0x03915FF4 LDR X1, [X10]
	0x03915FF8 LDR X21, [X21 + 0x418]
	0x03915FFC CBZ X9, 0x3916020
	0x03916000 LDR X10, [X8 + 0xB0]
	0x03916004 ADD X10, X10, 0x8
	0x03916008 LDUR X11, [X10 - 0x8]
	0x0391600C CMP X11, X1
	0x03916010 B.EQ 0x3916030
	0x03916014 SUBS X9, X9, 0x1
	0x03916018 ADD X10, X10, 0x10
	0x0391601C B.NE 0x3916008
	0x03916020 MOV X0, X19
	0x03916024 MOV W2, W31
	0x03916028 BL 0x1C5C788
	0x0391602C B 0x391603C
	0x03916030 LDRSW X9, [X10]
	0x03916034 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACD000
	007 Move W8, [X22+2099]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x810000
	016 Move X0, [X0+3904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2099], W8
	020 Move [X31+12], W31
	021 Move X0, [X21+32]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0x80F000
	025 Move X8, [X8+3904]
	026 Add X2, X31, 12
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	030 Move W8, [X31+12]
	031 And W31, W0, 1
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Single GetFloat(System.String key, System.Single fallback = 0)

Disassembly:
	0x03916038 ADD X0, X8, 0x138
	0x0391603C LDP X8, X1, [X0]
	0x03916040 MOV X0, X19
	0x03916044 BLR X8
	0x03916048 LDR X8, [X21]
	0x0391604C MOV W23, W0
	0x03916050 MOV W1, W23
	0x03916054 MOV X0, X8
	0x03916058 BL 0x1C16D6C
	0x0391605C CMP W23, 0x1
	0x03916060 STR X0, [X20 + 0x30]
	0x03916064 B.LT 0x391612C
	0x03916068 ADRP X25, 0x838000
	0x0391606C ADRP X26, 0x838000
	0x03916070 LDR X25, [X25 + 0x410]
	0x03916074 LDR X26, [X26 + 0x420]
	0x03916078 MOV X22, X0
	0x0391607C MOV X21, X31
	0x03916080 MOV W27, W23
	0x03916084 LDR X8, [X19]
	0x03916088 LDR X1, [X25]
	0x0391608C LDRH W9, [X8 + 0x12E]
	0x03916090 CBZ X9, 0x39160B4
	0x03916094 LDR X10, [X8 + 0xB0]
	0x03916098 ADD X10, X10, 0x8
	0x0391609C LDUR X11, [X10 - 0x8]
	0x039160A0 CMP X11, X1
	0x039160A4 B.EQ 0x39160C4
	0x039160A8 SUBS X9, X9, 0x1
	0x039160AC ADD X10, X10, 0x10
	0x039160B0 B.NE 0x391609C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xACC000
	007 Move W8, [X21+2100]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x839000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2100], W8
	020 Move [X31+12], W31
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0x839000
	025 Move X8, [X8+840]
	026 Add X2, X31, 12
	027 Move X1, X19
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Single>.TryGetValue, X0, X1, X2
	030 Move V0, [X31+12]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 And W31, W0, 1
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Move V8, [X31+48]
	038 Return V0
	039 Call 0x1C17F20

Method: System.String GetString(System.String key, System.String fallback = null)

Disassembly:
	0x039160B4 MOV X0, X19
	0x039160B8 MOV W2, W31
	0x039160BC BL 0x1C5C788
	0x039160C0 B 0x39160D0
	0x039160C4 LDRSW X9, [X10]
	0x039160C8 ADD X8, X8, X9, 0x4, LSL
	0x039160CC ADD X0, X8, 0x138
	0x039160D0 LDP X8, X2, [X0]
	0x039160D4 MOV X0, X19
	0x039160D8 MOV W1, W21
	0x039160DC BLR X8
	0x039160E0 LDR X8, [X26]
	0x039160E4 MOV X24, X0
	0x039160E8 MOV X0, X8
	0x039160EC BL 0x1C16F10
	0x039160F0 MOV X1, X24
	0x039160F4 MOV X2, X31
	0x039160F8 MOV X23, X0
	0x039160FC BL 0x3934860
	0x03916100 CBZ X22, 0x3916148
	0x03916104 LDR W8, [X22 + 0x18]
	0x03916108 CMP X21, X8
	0x0391610C B.CS 0x391614C
	0x03916110 ADD X8, X22, X21, 0x3, LSL
	0x03916114 ADD X21, X21, 0x1
	0x03916118 CMP X21, X27
	0x0391611C STR X23, [X8 + 0x20]
	0x03916120 B.EQ 0x391612C
	0x03916124 LDR X22, [X20 + 0x30]
	0x03916128 B 0x3916084
	0x0391612C MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2101]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x813000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2101], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+48]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0x813000
	025 Move X8, [X8+1272]
	026 Add X2, X31, 8
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	030 Move X8, [X31+8]
	031 And W31, W0, 1
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: UnityEngine.Color GetColor(System.String key, UnityEngine.Color fallback = null)

Disassembly:
	0x03916130 LDP X20, X19, [X31 + 0x40]
	0x03916134 LDP X22, X21, [X31 + 0x30]
	0x03916138 LDP X24, X23, [X31 + 0x20]
	0x0391613C LDP X26, X25, [X31 + 0x10]
	0x03916140 LDP X30, X27, [X31], #0x50
	0x03916144 B 0x3915A68
	0x03916148 BL 0x1C16F20
	0x0391614C BL 0x1C16F28
	0x03916150 ADRP X0, 0x7E2000
	0x03916154 LDR X0, [X0 + 0x528]
	0x03916158 BL 0x1C16D08
	0x0391615C BL 0x1C16F10
	0x03916160 MOV X19, X0
	0x03916164 ADRP X0, 0x7E7000
	0x03916168 LDR X0, [X0 + 0xEC8]
	0x0391616C BL 0x1C16D08
	0x03916170 MOV X1, X0
	0x03916174 MOV X0, X19
	0x03916178 MOV X2, X31
	0x0391617C BL 0x330E100
	0x03916180 ADRP X0, 0x838000
	0x03916184 LDR X0, [X0 + 0x428]
	0x03916188 BL 0x1C16D08
	0x0391618C MOV X1, X0
	0x03916190 MOV X0, X19
	0x03916194 BL 0x1C16DEC
	0x03916198 STR X30, [X31 - 0x20]!
	0x0391619C STP X20, X19, [X31 + 0x10]
	0x039161A0 ADRP X20, 0xACB000
	0x039161A4 LDRB W8, [X20 + 0x84B]
	0x039161A8 MOV X19, X0
	0x039161AC TBNZ X8, 0x0, 0x39161D0
	0x039161B0 ADRP X0, 0x7E7000
	0x039161B4 LDR X0, [X0 + 0x890]
	0x039161B8 BL 0x1C16CF4
	0x039161BC ADRP X0, 0x7E7000
	0x039161C0 LDR X0, [X0 + 0x888]
	0x039161C4 BL 0x1C16CF4
	0x039161C8 MOVZ W8, 0x1
	0x039161CC STRB W8, [X20 + 0x84B]
	0x039161D0 LDRB W8, [X19 + 0x38]
	0x039161D4 TBNZ X8, 0x0, 0x3916224

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xACC000
	011 Move W8, [X21+2102]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x839000
	023 Move X0, [X0+848]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2102], W8
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Move X0, [X20+56]
	030 Compare X0, 0
	031 JumpIfEqual {60}
	032 Move X8, 0x839000
	033 Move X8, [X8+848]
	034 Add X2, X31, 0
	035 Move X1, X19
	036 Move X3, [X8]
	037 Call Dictionary`2<Object, Color>.TryGetValue, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {46}
	042 Move S11, [X31]
	043 Move S10, [X31+4]
	044 Move S9, [X31+8]
	045 Move S8, [X31+12]
	046 Move V0, V11
	047 Move V1, V10
	048 Move V2, V9
	049 Move V3, V8
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X30, [X31+48]
	053 Move X21, [X31+56]
	054 Move D9, [X31+32]
	055 Move D8, [X31+40]
	056 Move D11, [X31+16]
	057 Move D10, [X31+24]
	058 Add X31, X31, 80
	059 Return X0
	060 Call 0x1C17F20

Method: UnityEngine.Material GetMaterial(System.String key, UnityEngine.Material fallback = null)

Disassembly:
	0x039161D8 LDR X20, [X19 + 0x40]
	0x039161DC CBNZ X20, 0x3916208
	0x039161E0 ADRP X8, 0x7E7000
	0x039161E4 LDR X8, [X8 + 0x888]
	0x039161E8 LDR X0, [X8]
	0x039161EC BL 0x1C16F10
	0x039161F0 ADRP X8, 0x7E7000
	0x039161F4 LDR X8, [X8 + 0x890]
	0x039161F8 MOV X20, X0
	0x039161FC LDR X1, [X8]
	0x03916200 BL 0x2A09A9C
	0x03916204 STR X20, [X19 + 0x40]
	0x03916208 LDR X0, [X19 + 0x30]
	0x0391620C MOV X1, X20
	0x03916210 MOV X2, X31
	0x03916214 BL 0x3934C64
	0x03916218 LDRB W8, [X19 + 0x38]
	0x0391621C ORR W8, W8, 0x1
	0x03916220 STRB W8, [X19 + 0x38]
	0x03916224 LDR X0, [X19 + 0x40]
	0x03916228 LDP X20, X19, [X31 + 0x10]
	0x0391622C LDR X30, [X31], #0x20
	0x03916230 RET
	0x03916234 STP X30, X19, [X31 - 0x10]!
	0x03916238 CBZ X1, 0x391625C
	0x0391623C MOV X19, X0
	0x03916240 MOV X0, X1
	0x03916244 MOV X1, X31
	0x03916248 BL 0x39350B4
	0x0391624C STR X0, [X19 + 0x30]
	0x03916250 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2103]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x839000
	016 Move X0, [X0+856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2103], W8
	020 Move [X31+8], X31
	021 Move X0, [X21+64]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X8, 0x839000
	025 Move X8, [X8+856]
	026 Add X2, X31, 8
	027 Move X1, X20
	028 Move X3, [X8]
	029 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	030 Move X8, [X31+8]
	031 And W31, W0, 1
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void SetBool(System.String key, System.Boolean value)

Disassembly:
	0x03916254 LDP X30, X19, [X31], #0x10
	0x03916258 B 0x3915A68
	0x0391625C ADRP X0, 0x7E2000
	0x03916260 LDR X0, [X0 + 0x528]
	0x03916264 BL 0x1C16D08
	0x03916268 BL 0x1C16F10
	0x0391626C MOV X19, X0
	0x03916270 ADRP X0, 0x815000
	0x03916274 LDR X0, [X0 + 0xE10]
	0x03916278 BL 0x1C16D08
	0x0391627C MOV X1, X0
	0x03916280 MOV X0, X19
	0x03916284 MOV X2, X31
	0x03916288 BL 0x330E100
	0x0391628C ADRP X0, 0x838000
	0x03916290 LDR X0, [X0 + 0x430]
	0x03916294 BL 0x1C16D08
	0x03916298 MOV X1, X0
	0x0391629C MOV X0, X19
	0x039162A0 BL 0x1C16DEC
	0x039162A4 LDR X0, [X0 + 0x48]
	0x039162A8 RET
	0x039162AC STR X1, [X0 + 0x48]
	0x039162B0 B 0x3915B10
	0x039162B4 STR X30, [X31 - 0x20]!
	0x039162B8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2104]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x839000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2104], W8
	020 Move X0, [X21+24]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x839000
	024 Move X8, [X8+864]
	025 And W2, W20, 1
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<Object, Boolean>.set_Item, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.Void SetInt(System.String key, System.Int32 value)

Disassembly:
	0x039162BC ADRP X20, 0xACB000
	0x039162C0 LDRB W8, [X20 + 0x84C]
	0x039162C4 MOV X19, X0
	0x039162C8 TBNZ X8, 0x0, 0x39162EC
	0x039162CC ADRP X0, 0x7E7000
	0x039162D0 LDR X0, [X0 + 0x890]
	0x039162D4 BL 0x1C16CF4
	0x039162D8 ADRP X0, 0x7E7000
	0x039162DC LDR X0, [X0 + 0x888]
	0x039162E0 BL 0x1C16CF4
	0x039162E4 MOVZ W8, 0x1
	0x039162E8 STRB W8, [X20 + 0x84C]
	0x039162EC LDRB W8, [X19 + 0x38]
	0x039162F0 TBNZ X8, 0x1, 0x391633C
	0x039162F4 LDR X20, [X19 + 0x50]
	0x039162F8 ORR W8, W8, 0x2
	0x039162FC STRB W8, [X19 + 0x38]
	0x03916300 CBNZ X20, 0x391632C
	0x03916304 ADRP X8, 0x7E7000
	0x03916308 LDR X8, [X8 + 0x888]
	0x0391630C LDR X0, [X8]
	0x03916310 BL 0x1C16F10
	0x03916314 ADRP X8, 0x7E7000
	0x03916318 LDR X8, [X8 + 0x890]
	0x0391631C MOV X20, X0
	0x03916320 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2105]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7E3000
	016 Move X0, [X0+1960]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2105], W8
	020 Move X0, [X21+32]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x7E3000
	024 Move X8, [X8+1960]
	025 Move X1, X20
	026 Move W2, W19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<Object, Int32>.set_Item, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.Void SetFloat(System.String key, System.Single value)

Disassembly:
	0x03916324 BL 0x2A09A9C
	0x03916328 STR X20, [X19 + 0x50]
	0x0391632C LDR X0, [X19 + 0x48]
	0x03916330 MOV X1, X20
	0x03916334 MOV X2, X31
	0x03916338 BL 0x3934C64
	0x0391633C LDR X0, [X19 + 0x50]
	0x03916340 LDP X20, X19, [X31 + 0x10]
	0x03916344 LDR X30, [X31], #0x20
	0x03916348 RET
	0x0391634C STP X30, X19, [X31 - 0x10]!
	0x03916350 CBZ X1, 0x3916374
	0x03916354 MOV X19, X0
	0x03916358 MOV X0, X1
	0x0391635C MOV X1, X31
	0x03916360 BL 0x39350B4
	0x03916364 STR X0, [X19 + 0x48]
	0x03916368 MOV X0, X19
	0x0391636C LDP X30, X19, [X31], #0x10
	0x03916370 B 0x3915B10
	0x03916374 ADRP X0, 0x7E2000
	0x03916378 LDR X0, [X0 + 0x528]
	0x0391637C BL 0x1C16D08
	0x03916380 BL 0x1C16F10
	0x03916384 MOV X19, X0
	0x03916388 ADRP X0, 0x815000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xACC000
	007 Move W8, [X21+2106]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x839000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2106], W8
	020 Move X0, [X20+40]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x839000
	024 Move X8, [X8+872]
	025 Move X1, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move X2, [X8]
	031 Move V0, V8
	032 Move V8, [X31+48]
	033 Call Dictionary`2<Object, Single>.set_Item, X0, X1, V0
	034 Return 
	035 Call 0x1C17F20

Method: System.Void SetString(System.String key, System.String value)

Disassembly:
	0x0391638C LDR X0, [X0 + 0xE10]
	0x03916390 BL 0x1C16D08
	0x03916394 MOV X1, X0
	0x03916398 MOV X0, X19
	0x0391639C MOV X2, X31
	0x039163A0 BL 0x330E100
	0x039163A4 ADRP X0, 0x838000
	0x039163A8 LDR X0, [X0 + 0x438]
	0x039163AC BL 0x1C16D08
	0x039163B0 MOV X1, X0
	0x039163B4 MOV X0, X19
	0x039163B8 BL 0x1C16DEC
	0x039163BC LDR X0, [X0 + 0x58]
	0x039163C0 RET
	0x039163C4 STR X1, [X0 + 0x58]
	0x039163C8 RET
	0x039163CC STR X30, [X31 - 0x30]!
	0x039163D0 STP X22, X21, [X31 + 0x10]
	0x039163D4 STP X20, X19, [X31 + 0x20]
	0x039163D8 ADRP X22, 0xACB000
	0x039163DC ADRP X21, 0x838000
	0x039163E0 ADRP X20, 0x838000
	0x039163E4 LDRB W8, [X22 + 0x84D]
	0x039163E8 LDR X21, [X21 + 0x230]
	0x039163EC LDR X20, [X20 + 0x238]
	0x039163F0 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2107]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7DF000
	016 Move X0, [X0+1736]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2107], W8
	020 Move X0, [X21+48]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x7DF000
	024 Move X8, [X8+1736]
	025 Move X1, X20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.Void SetColor(System.String key, UnityEngine.Color value)

Disassembly:
	0x039163F4 TBNZ X8, 0x0, 0x3916418
	0x039163F8 ADRP X0, 0x838000
	0x039163FC LDR X0, [X0 + 0x238]
	0x03916400 BL 0x1C16CF4
	0x03916404 ADRP X0, 0x838000
	0x03916408 LDR X0, [X0 + 0x230]
	0x0391640C BL 0x1C16CF4
	0x03916410 MOVZ W8, 0x1
	0x03916414 STRB W8, [X22 + 0x84D]
	0x03916418 LDR X0, [X21]
	0x0391641C LDR X19, [X19 + 0x58]
	0x03916420 BL 0x1C16F10
	0x03916424 LDR X2, [X20]
	0x03916428 MOV X1, X19
	0x0391642C MOV X20, X0
	0x03916430 BL 0x257D040
	0x03916434 MOV X0, X20
	0x03916438 LDP X20, X19, [X31 + 0x20]
	0x0391643C LDP X22, X21, [X31 + 0x10]
	0x03916440 LDR X30, [X31], #0x30
	0x03916444 RET
	0x03916448 STP X30, X21, [X31 - 0x20]!
	0x0391644C STP X20, X19, [X31 + 0x10]
	0x03916450 ADRP X21, 0xACB000
	0x03916454 LDRB W8, [X21 + 0x84E]
	0x03916458 MOV X20, X1
	0x0391645C MOV X19, X0
	0x03916460 TBNZ X8, 0x0, 0x3916478
	0x03916464 ADRP X0, 0x838000
	0x03916468 LDR X0, [X0 + 0x170]
	0x0391646C BL 0x1C16CF4
	0x03916470 MOVZ W8, 0x1
	0x03916474 STRB W8, [X21 + 0x84E]
	0x03916478 CBZ X20, 0x39164A0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xACC000
	010 Move W8, [X21+2108]
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x839000
	022 Move X0, [X0+880]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2108], W8
	026 Move X0, [X20+56]
	027 Compare X0, 0
	028 JumpIfEqual {47}
	029 Move X8, 0x839000
	030 Move X8, [X8+880]
	031 Move X1, X19
	032 Move V2, V9
	033 Move V3, V8
	034 Move X2, [X8]
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Move D9, [X31+16]
	040 Move D8, [X31+24]
	041 Move V0, V11
	042 Move V1, V10
	043 Move D11, [X31+64]
	044 Move D10, [X31+72]
	045 Call Dictionary`2<Object, Color>.set_Item, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: System.Void SetMaterial(System.String key, UnityEngine.Material value)

Disassembly:
	0x0391647C ADRP X8, 0x838000
	0x03916480 LDR X8, [X8 + 0x170]
	0x03916484 MOV X0, X20
	0x03916488 LDR X1, [X8]
	0x0391648C BL 0x21D599C
	0x03916490 STR X0, [X19 + 0x58]
	0x03916494 LDP X20, X19, [X31 + 0x10]
	0x03916498 LDP X30, X21, [X31], #0x20
	0x0391649C RET
	0x039164A0 ADRP X0, 0x7E2000
	0x039164A4 LDR X0, [X0 + 0x528]
	0x039164A8 BL 0x1C16D08
	0x039164AC BL 0x1C16F10
	0x039164B0 MOV X19, X0
	0x039164B4 ADRP X0, 0x7E7000
	0x039164B8 LDR X0, [X0 + 0xEC8]
	0x039164BC BL 0x1C16D08
	0x039164C0 MOV X1, X0
	0x039164C4 MOV X0, X19
	0x039164C8 MOV X2, X31
	0x039164CC BL 0x330E100
	0x039164D0 ADRP X0, 0x838000
	0x039164D4 LDR X0, [X0 + 0x440]
	0x039164D8 BL 0x1C16D08
	0x039164DC MOV X1, X0
	0x039164E0 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACC000
	007 Move W8, [X22+2109]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x839000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2109], W8
	020 Move X0, [X21+64]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0x839000
	024 Move X8, [X8+888]
	025 Move X1, X20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<System.String, System.Boolean> GetBoolDictionary()

Disassembly:
	0x039164E4 BL 0x1C16DEC
	0x039164E8 SUB X31, X31, 0xA0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.Int32> GetIntDictionary()

Disassembly:
	0x039164EC STP X29, X30, [X31 + 0x40]
	0x039164F0 STP X28, X27, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.Single> GetFloatDictionary()

Disassembly:
	0x039164F4 STP X26, X25, [X31 + 0x60]
	0x039164F8 STP X24, X23, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, System.String> GetStringDictionary()

Disassembly:
	0x039164FC STP X22, X21, [X31 + 0x80]
	0x03916500 STP X20, X19, [X31 + 0x90]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, UnityEngine.Color> GetColorDictionary()

Disassembly:
	0x03916504 ADRP X20, 0xACB000
	0x03916508 LDRB W8, [X20 + 0x850]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<System.String, UnityEngine.Material> GetMaterialDictionary()

Disassembly:
	0x0391650C MOV X19, X1
	0x03916510 MOV X25, X0

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void Clear()

Disassembly:
	0x03916514 TBNZ X8, 0x0, 0x3916580
	0x03916518 ADRP X0, 0x838000
	0x0391651C LDR X0, [X0 + 0x1E8]
	0x03916520 BL 0x1C16CF4
	0x03916524 ADRP X0, 0x837000
	0x03916528 LDR X0, [X0 + 0xF60]
	0x0391652C BL 0x1C16CF4
	0x03916530 ADRP X0, 0x838000
	0x03916534 LDR X0, [X0 + 0x10]
	0x03916538 BL 0x1C16CF4
	0x0391653C ADRP X0, 0x838000
	0x03916540 LDR X0, [X0 + 0x30]
	0x03916544 BL 0x1C16CF4
	0x03916548 ADRP X0, 0x838000
	0x0391654C LDR X0, [X0 + 0x38]
	0x03916550 BL 0x1C16CF4
	0x03916554 ADRP X0, 0x838000
	0x03916558 LDR X0, [X0 + 0x8]
	0x0391655C BL 0x1C16CF4
	0x03916560 ADRP X0, 0x7DD000
	0x03916564 LDR X0, [X0 + 0x598]
	0x03916568 BL 0x1C16CF4
	0x0391656C ADRP X0, 0x838000
	0x03916570 LDR X0, [X0 + 0x20]
	0x03916574 BL 0x1C16CF4
	0x03916578 MOVZ W8, 0x1
	0x0391657C STRB W8, [X20 + 0x850]
	0x03916580 LDR X8, [X25 + 0x58]
	0x03916584 CBZ X8, 0x3916594
	0x03916588 LDR W27, [X8 + 0x18]
	0x0391658C CBNZ X19, 0x391659C
	0x03916590 B 0x3916CEC
	0x03916594 MOV W27, W31
	0x03916598 CBZ X19, 0x3916CEC
	0x0391659C ADRP X10, 0x838000
	0x039165A0 LDR X8, [X19]
	0x039165A4 LDR X10, [X10 + 0x1E8]
	0x039165A8 ADRP X22, 0x7DD000
	0x039165AC LDRH W9, [X8 + 0x12E]
	0x039165B0 LDR X1, [X10]
	0x039165B4 LDR X22, [X22 + 0x598]
	0x039165B8 CBZ X9, 0x39165DC
	0x039165BC LDR X10, [X8 + 0xB0]
	0x039165C0 ADD X10, X10, 0x8
	0x039165C4 LDUR X11, [X10 - 0x8]
	0x039165C8 CMP X11, X1
	0x039165CC B.EQ 0x39165EC
	0x039165D0 SUBS X9, X9, 0x1
	0x039165D4 ADD X10, X10, 0x10
	0x039165D8 B.NE 0x39165C4
	0x039165DC MOVZ W2, 0x3
	0x039165E0 MOV X0, X19
	0x039165E4 BL 0x1C5C788
	0x039165E8 B 0x39165FC
	0x039165EC LDR W9, [X10]
	0x039165F0 ADD W9, W9, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xACC000
	005 Move W8, [X20+2110]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x839000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move X0, 0x839000
	015 Move X0, [X0+760]
	016 Call 0x1C17CF4
	017 Move X0, 0x839000
	018 Move X0, [X0+768]
	019 Call 0x1C17CF4
	020 Move X0, 0x830000
	021 Move X0, [X0+664]
	022 Call 0x1C17CF4
	023 Move X0, 0x821000
	024 Move X0, [X0+2808]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2110], W8
	028 Move X0, [X19+24]
	029 Compare X0, 0
	030 JumpIfEqual {67}
	031 Move X8, 0x839000
	032 Move X8, [X8+752]
	033 Move X1, [X8]
	034 Call Dictionary`2<Object, Boolean>.Clear, X0
	035 Move X0, [X19+32]
	036 Compare X0, 0
	037 JumpIfEqual {67}
	038 Move X8, 0x830000
	039 Move X8, [X8+664]
	040 Move X1, [X8]
	041 Call Dictionary`2<Object, Int32>.Clear, X0
	042 Move X0, [X19+40]
	043 Compare X0, 0
	044 JumpIfEqual {67}
	045 Move X8, 0x839000
	046 Move X8, [X8+768]
	047 Move X1, [X8]
	048 Call Dictionary`2<Object, Single>.Clear, X0
	049 Move X0, [X19+48]
	050 Compare X0, 0
	051 JumpIfEqual {67}
	052 Move X8, 0x821000
	053 Move X8, [X8+2808]
	054 Move X1, [X8]
	055 Call Dictionary`2<Object, Object>.Clear, X0
	056 Move X0, [X19+56]
	057 Compare X0, 0
	058 JumpIfEqual {67}
	059 Move X8, 0x839000
	060 Move X8, [X8+760]
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X1, [X8]
	064 Move X30, [X31+32]
	065 Call Dictionary`2<Object, Color>.Clear, X0
	066 Return 
	067 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039165F4 ADD X8, X8, W9, 0x4, SXTW
	0x039165F8 ADD X0, X8, 0x138
	0x039165FC LDP X8, X1, [X0]
	0x03916600 MOV X0, X19
	0x03916604 BLR X8
	0x03916608 LDR X24, [X25 + 0x88]
	0x0391660C LDP X28, X23, [X25 + 0x58]
	0x03916610 MOV X0, X25
	0x03916614 BL 0x3911890
	0x03916618 MOV X20, X0
	0x0391661C MOV X0, X25
	0x03916620 BL 0x3911808
	0x03916624 MOV X21, X0
	0x03916628 MOV X0, X25
	0x0391662C BL 0x3912CAC
	0x03916630 LDR X8, [X22]
	0x03916634 MOV X22, X0
	0x03916638 LDR W9, [X8 + 0xE0]
	0x0391663C CBNZ W9, 0x3916648
	0x03916640 MOV X0, X8
	0x03916644 BL 0x1C16DFC
	0x03916648 MOV X0, X22
	0x0391664C MOV X1, X31
	0x03916650 MOV X2, X31
	0x03916654 BL 0x3C354F8
	0x03916658 MOV X22, X31
	0x0391665C TBZ X0, 0x0, 0x3916678
	0x03916660 MOV X0, X25
	0x03916664 BL 0x3912CAC
	0x03916668 CBZ X0, 0x3916CEC
	0x0391666C MOV X1, X31
	0x03916670 BL 0x3C1816C
	0x03916674 MOV X22, X0
	0x03916678 STR X24, [X31 + 0x30]
	0x0391667C ADRP X24, 0x838000
	0x03916680 LDR X24, [X24 + 0x8]
	0x03916684 ADRP X26, 0x838000
	0x03916688 LDR X0, [X24]
	0x0391668C LDR X26, [X26 + 0x10]
	0x03916690 BL 0x1C16F10
	0x03916694 LDR X1, [X26]
	0x03916698 MOV X29, X0
	0x0391669C BL 0x30CE5F4
	0x039166A0 LDR X0, [X24]
	0x039166A4 BL 0x1C16F10
	0x039166A8 LDR X1, [X26]
	0x039166AC MOV X24, X0
	0x039166B0 BL 0x30CE5F4
	0x039166B4 MOVZ W1, 0x2
	0x039166B8 MOV X0, X25
	0x039166BC MOV X2, X29
	0x039166C0 STR X29, [X31 + 0x8]
	0x039166C4 BL 0x39114F4
	0x039166C8 MOVZ W1, 0x3
	0x039166CC MOV X0, X25
	0x039166D0 MOV X2, X24
	0x039166D4 STR X24, [X31]
	0x039166D8 BL 0x39114F4
	0x039166DC CBZ X28, 0x39166F4
	0x039166E0 LDR W8, [X28 + 0x18]
	0x039166E4 CMP W27, W8
	0x039166E8 CSET W8, EQ
	0x039166EC STR W8, [X31 + 0x3C]
	0x039166F0 B 0x39166F8
	0x039166F4 STR W31, [X31 + 0x3C]
	0x039166F8 LDR X29, [X31 + 0x30]
	0x039166FC CBZ X29, 0x3916710
	0x03916700 LDR W8, [X29 + 0x18]
	0x03916704 CMP W27, W8
	0x03916708 CSET W8, NE
	0x0391670C B 0x3916714
	0x03916710 MOVZ W8, 0x1
	0x03916714 STR W8, [X31 + 0x30]
	0x03916718 CBZ X21, 0x391672C
	0x0391671C LDR W8, [X21 + 0x18]
	0x03916720 CMP W27, W8
	0x03916724 CSET W8, NE
	0x03916728 B 0x3916730
	0x0391672C MOVZ W8, 0x1
	0x03916730 STR W8, [X31 + 0x2C]
	0x03916734 CBZ X20, 0x3916748
	0x03916738 LDR W8, [X20 + 0x18]
	0x0391673C CMP W27, W8
	0x03916740 CSET W8, NE
	0x03916744 B 0x391674C
	0x03916748 MOVZ W8, 0x1
	0x0391674C STR W8, [X31 + 0x28]
	0x03916750 CBZ X23, 0x3916764
	0x03916754 LDR W8, [X23 + 0x18]
	0x03916758 CMP W27, W8
	0x0391675C CSET W8, NE
	0x03916760 B 0x3916768
	0x03916764 MOVZ W8, 0x1
	0x03916768 STR W8, [X31 + 0x24]
	0x0391676C CBZ X22, 0x3916780
	0x03916770 LDR W8, [X22 + 0x18]
	0x03916774 CMP W27, W8
	0x03916778 CSET W8, NE
	0x0391677C B 0x3916784
	0x03916780 MOVZ W8, 0x1
	0x03916784 STR W8, [X31 + 0x20]
	0x03916788 LDR X8, [X31 + 0x8]
	0x0391678C CBZ X8, 0x3916CEC
	0x03916790 LDR X8, [X31]
	0x03916794 CBZ X8, 0x3916CEC
	0x03916798 CMP W27, 0x1
	0x0391679C B.LT 0x3916CCC
	0x039167A0 ADRP X24, 0x837000
	0x039167A4 LDR X24, [X24 + 0xF60]
	0x039167A8 LDR X8, [X31 + 0x8]
	0x039167AC MOV X25, X31
	0x039167B0 LDR W9, [X8 + 0x18]
	0x039167B4 LDR X8, [X31]
	0x039167B8 LDR W8, [X8 + 0x18]
	0x039167BC STP W8, W9, [X31 + 0x18]
	0x039167C0 MOV W8, W27
	0x039167C4 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xACC000
	014 Move X23, 0x839000
	015 Move X20, 0x839000
	016 Move X21, 0x7E0000
	017 Move X29, 0x7E0000
	018 Move X28, 0x839000
	019 Move X27, 0x839000
	020 Move X26, 0x7DF000
	021 Move X25, 0x7DF000
	022 Move X24, 0x839000
	023 Move X23, [X23+896]
	024 Move X20, [X20+904]
	025 Move X21, [X21+2840]
	026 Move X29, [X29+2848]
	027 Move X28, [X28+912]
	028 Move X27, [X27+920]
	029 Move X26, [X26+1744]
	030 Move W8, [X22+2111]
	031 Move X25, [X25+1728]
	032 Move X24, [X24+928]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {76}
	038 Move X0, 0x839000
	039 Move X0, [X0+936]
	040 Call 0x1C17CF4
	041 Move X0, 0x839000
	042 Move X0, [X0+920]
	043 Call 0x1C17CF4
	044 Move X0, 0x839000
	045 Move X0, [X0+944]
	046 Call 0x1C17CF4
	047 Move X0, 0x7DF000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E0000
	051 Move X0, [X0+2848]
	052 Call 0x1C17CF4
	053 Move X0, 0x839000
	054 Move X0, [X0+904]
	055 Call 0x1C17CF4
	056 Move X0, 0x839000
	057 Move X0, [X0+896]
	058 Call 0x1C17CF4
	059 Move X0, 0x7DF000
	060 Move X0, [X0+1744]
	061 Call 0x1C17CF4
	062 Move X0, 0x839000
	063 Move X0, [X0+952]
	064 Call 0x1C17CF4
	065 Move X0, 0x7E0000
	066 Move X0, [X0+2840]
	067 Call 0x1C17CF4
	068 Move X0, 0x839000
	069 Move X0, [X0+928]
	070 Call 0x1C17CF4
	071 Move X0, 0x839000
	072 Move X0, [X0+912]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X22+2111], W8
	076 Move X0, [X23]
	077 Call 0x1C17F10
	078 Move X1, [X20]
	079 Move X20, X0
	080 Call Dictionary`2<Object, Boolean>..ctor, X0
	081 Move [X19+24], X20
	082 Move X0, [X21]
	083 Call 0x1C17F10
	084 Move X1, [X29]
	085 Move X20, X0
	086 Call Dictionary`2<Object, Int32>..ctor, X0
	087 Move [X19+32], X20
	088 Move X0, [X28]
	089 Call 0x1C17F10
	090 Move X1, [X27]
	091 Move X20, X0
	092 Call Dictionary`2<Object, Single>..ctor, X0
	093 Move [X19+40], X20
	094 Move X0, [X26]
	095 Call 0x1C17F10
	096 Move X1, [X25]
	097 Move X20, X0
	098 Call Dictionary`2<Object, Object>..ctor, X0
	099 Move [X19+48], X20
	100 Move X0, [X24]
	101 Call 0x1C17F10
	102 Move X8, 0x839000
	103 Move X8, [X8+936]
	104 Move X20, X0
	105 Move X1, [X8]
	106 Call Dictionary`2<Object, Color>..ctor, X0
	107 Move [X19+56], X20
	108 Move X8, 0x839000
	109 Move X8, [X8+952]
	110 Move X0, [X8]
	111 Call 0x1C17F10
	112 Move X8, 0x839000
	113 Move X8, [X8+944]
	114 Move X20, X0
	115 Move X1, [X8]
	116 Call Dictionary`2<Object, Object>..ctor, X0
	117 Move [X19+64], X20
	118 Move X0, X19
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X26, [X31+32]
	126 Move X25, [X31+40]
	127 Move X28, [X31+16]
	128 Move X27, [X31+24]
	129 Move X1, X31
	130 Move X29, [X31+96]
	131 Move X30, [X31+104]
	132 Call ScriptableObject..ctor, X0
	133 Return 

