Type: UnityEngine.ProBuilder.MeshOperations.MergeElements

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> MergePairs(UnityEngine.ProBuilder.ProBuilderMesh target, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.Face, UnityEngine.ProBuilder.Face>> pairs, System.Boolean collapseCoincidentVertices = True)

Disassembly:
	0x039739C4 LDR X0, [X8]
	0x039739C8 BL 0x1C16F10
	0x039739CC ADRP X8, 0x784000
	0x039739D0 LDR X8, [X8 + 0xB70]
	0x039739D4 MOV X20, X0
	0x039739D8 LDR X1, [X8]
	0x039739DC BL 0x2FDBF14
	0x039739E0 CBZ X19, 0x3973B4C
	0x039739E4 ADRP X24, 0x7DC000
	0x039739E8 LDR X24, [X24 + 0xFE8]
	0x039739EC LDR X21, [X19 + 0x28]
	0x039739F0 LDR X0, [X24]
	0x039739F4 LDR W8, [X0 + 0xE0]
	0x039739F8 CBNZ W8, 0x3973A04
	0x039739FC BL 0x1C16DFC
	0x03973A00 LDR X0, [X24]
	0x03973A04 LDR X8, [X0 + 0xB8]
	0x03973A08 ADRP X27, 0x7DA000
	0x03973A0C ADRP X26, 0x781000
	0x03973A10 ADRP X25, 0x781000
	0x03973A14 LDR X22, [X8 + 0x18]
	0x03973A18 LDR X27, [X27 + 0xFA0]
	0x03973A1C LDR X26, [X26 + 0xE08]
	0x03973A20 LDR X25, [X25 + 0xE00]
	0x03973A24 CBNZ X22, 0x3973A78
	0x03973A28 LDR W8, [X0 + 0xE0]
	0x03973A2C CBNZ W8, 0x3973A38
	0x03973A30 BL 0x1C16DFC
	0x03973A34 LDR X0, [X24]
	0x03973A38 ADRP X9, 0x7DA000
	0x03973A3C LDR X8, [X0 + 0xB8]
	0x03973A40 LDR X9, [X9 + 0xFA8]
	0x03973A44 LDR X23, [X8]
	0x03973A48 LDR X0, [X9]
	0x03973A4C BL 0x1C16F10
	0x03973A50 ADRP X8, 0x7DC000
	0x03973A54 LDR X8, [X8 + 0xFE0]
	0x03973A58 MOV X1, X23
	0x03973A5C MOV X3, X31
	0x03973A60 MOV X22, X0
	0x03973A64 LDR X2, [X8]
	0x03973A68 BL 0x2D30578
	0x03973A6C LDR X8, [X24]
	0x03973A70 LDR X8, [X8 + 0xB8]
	0x03973A74 STR X22, [X8 + 0x18]
	0x03973A78 LDR X2, [X27]
	0x03973A7C MOV X0, X21
	0x03973A80 MOV X1, X22
	0x03973A84 BL 0x21D0FD8
	0x03973A88 LDR X8, [X26]
	0x03973A8C MOV X22, X0
	0x03973A90 MOV X0, X8
	0x03973A94 BL 0x1C16F10
	0x03973A98 LDR X2, [X25]
	0x03973A9C MOV X1, X22
	0x03973AA0 MOV X21, X0
	0x03973AA4 BL 0x2DA9FD8
	0x03973AA8 LDR X8, [X19 + 0x58]
	0x03973AAC CBZ X8, 0x3973B4C
	0x03973AB0 ADRP X23, 0x781000
	0x03973AB4 ADRP X24, 0x781000
	0x03973AB8 LDR X23, [X23 + 0xDF8]
	0x03973ABC LDR X24, [X24 + 0xE10]
	0x03973AC0 MOV W22, W31
	0x03973AC4 LDR W8, [X8 + 0x18]
	0x03973AC8 CMP W22, W8
	0x03973ACC B.GE 0x3973B50
	0x03973AD0 CBZ X21, 0x3973B4C
	0x03973AD4 LDR X2, [X23]
	0x03973AD8 MOV X0, X21
	0x03973ADC MOV W1, W22
	0x03973AE0 BL 0x2DAA59C
	0x03973AE4 TBNZ X0, 0x0, 0x3973B40
	0x03973AE8 CBZ X20, 0x3973B4C
	0x03973AEC LDR W10, [X20 + 0x1C]
	0x03973AF0 LDR X8, [X20 + 0x10]
	0x03973AF4 LDR X9, [X24]
	0x03973AF8 ADD W10, W10, 0x1
	0x03973AFC STR W10, [X20 + 0x1C]
	0x03973B00 CBZ X8, 0x3973B4C
	0x03973B04 LDRSW X10, [X20 + 0x18]
	0x03973B08 LDR W11, [X8 + 0x18]
	0x03973B0C CMP W10, W11
	0x03973B10 B.CS 0x3973B28
	0x03973B14 ADD W9, W10, 0x1
	0x03973B18 ADD X8, X8, X10, 0x2, LSL
	0x03973B1C STR W9, [X20 + 0x18]
	0x03973B20 STR W22, [X8 + 0x20]
	0x03973B24 B 0x3973B40
	0x03973B28 LDR X8, [X9 + 0x20]
	0x03973B2C MOV X0, X20
	0x03973B30 MOV W1, W22
	0x03973B34 LDR X8, [X8 + 0xC0]
	0x03973B38 LDR X2, [X8 + 0x70]
	0x03973B3C BL 0x2FDC70C
	0x03973B40 LDR X8, [X19 + 0x58]
	0x03973B44 ADD W22, W22, 0x1
	0x03973B48 CBNZ X8, 0x3973AC4
	0x03973B4C BL 0x1C16F20
	0x03973B50 MOV X0, X19
	0x03973B54 MOV X1, X20
	0x03973B58 MOV X2, X31
	0x03973B5C BL 0x39561FC
	0x03973B60 CBZ X20, 0x3973B4C
	0x03973B64 LDR W8, [X20 + 0x18]
	0x03973B68 LDP X20, X19, [X31 + 0x40]
	0x03973B6C LDP X22, X21, [X31 + 0x30]
	0x03973B70 LDP X24, X23, [X31 + 0x20]
	0x03973B74 LDP X26, X25, [X31 + 0x10]
	0x03973B78 CMP W8, 0x0
	0x03973B7C CSET W0, GT
	0x03973B80 LDP X30, X27, [X31], #0x50
	0x03973B84 RET
	0x03973B88 ADRP X0, 0x785000
	0x03973B8C LDR X0, [X0 + 0x528]
	0x03973B90 BL 0x1C16D08
	0x03973B94 BL 0x1C16F10
	0x03973B98 MOV X19, X0
	0x03973B9C ADRP X0, 0x7DA000
	0x03973BA0 LDR X0, [X0 + 0xE90]
	0x03973BA4 BL 0x1C16D08
	0x03973BA8 MOV X1, X0
	0x03973BAC MOV X0, X19
	0x03973BB0 MOV X2, X31
	0x03973BB4 BL 0x330E100
	0x03973BB8 ADRP X0, 0x7DC000
	0x03973BBC LDR X0, [X0 + 0xFF0]
	0x03973BC0 BL 0x1C16D08
	0x03973BC4 MOV X1, X0
	0x03973BC8 MOV X0, X19
	0x03973BCC BL 0x1C16DEC
	0x03973BD0 STR X30, [X31 - 0x20]!
	0x03973BD4 STP X20, X19, [X31 + 0x10]
	0x03973BD8 ADRP X19, 0xA6E000
	0x03973BDC ADRP X20, 0x7DC000
	0x03973BE0 LDRB W8, [X19 + 0x9FD]
	0x03973BE4 LDR X20, [X20 + 0xFD8]
	0x03973BE8 TBNZ X8, 0x0, 0x3973C00
	0x03973BEC ADRP X0, 0x7DC000
	0x03973BF0 LDR X0, [X0 + 0xFD8]
	0x03973BF4 BL 0x1C16CF4
	0x03973BF8 MOVZ W8, 0x1
	0x03973BFC STRB W8, [X19 + 0x9FD]
	0x03973C00 LDR X0, [X20]
	0x03973C04 BL 0x1C16F10
	0x03973C08 MOV X1, X31
	0x03973C0C MOV X19, X0
	0x03973C10 BL 0x33BDD8C
	0x03973C14 LDR X8, [X20]
	0x03973C18 LDR X8, [X8 + 0xB8]
	0x03973C1C STR X19, [X8]
	0x03973C20 LDP X20, X19, [X31 + 0x10]
	0x03973C24 LDR X30, [X31], #0x20
	0x03973C28 RET
	0x03973C2C MOV X1, X31
	0x03973C30 B 0x33BDD8C
	0x03973C34 STR X30, [X31 - 0x10]!
	0x03973C38 CBZ X1, 0x3973C48
	0x03973C3C LDR X0, [X1 + 0x10]
	0x03973C40 LDR X30, [X31], #0x10
	0x03973C44 RET
	0x03973C48 BL 0x1C16F20
	0x03973C4C STP X30, X21, [X31 - 0x20]!
	0x03973C50 STP X20, X19, [X31 + 0x10]
	0x03973C54 ADRP X21, 0xA6E000
	0x03973C58 LDRB W8, [X21 + 0x9FE]
	0x03973C5C MOV X19, X1
	0x03973C60 MOV X20, X0
	0x03973C64 TBNZ X8, 0x0, 0x3973C7C
	0x03973C68 ADRP X0, 0x7DA000
	0x03973C6C LDR X0, [X0 + 0xE28]
	0x03973C70 BL 0x1C16CF4
	0x03973C74 MOVZ W8, 0x1
	0x03973C78 STRB W8, [X21 + 0x9FE]
	0x03973C7C LDR X0, [X20 + 0x10]
	0x03973C80 CBZ X0, 0x3973CAC
	0x03973C84 ADRP X8, 0x7DA000
	0x03973C88 LDR X8, [X8 + 0xE28]
	0x03973C8C MOV X1, X19
	0x03973C90 LDR X2, [X8]
	0x03973C94 BL 0x2DBE4B0
	0x03973C98 LDP X20, X19, [X31 + 0x10]
	0x03973C9C ORN W8, W31, W0, 0x0
	0x03973CA0 AND W0, W8, 0x1
	0x03973CA4 LDP X30, X21, [X31], #0x20
	0x03973CA8 RET
	0x03973CAC BL 0x1C16F20
	0x03973CB0 LDRB W0, [X0 + 0x10]
	0x03973CB4 RET
	0x03973CB8 AND W8, W1, 0x1
	0x03973CBC STRB W8, [X0 + 0x10]
	0x03973CC0 RET
	0x03973CC4 LDRB W0, [X0 + 0x11]
	0x03973CC8 RET
	0x03973CCC AND W8, W1, 0x1
	0x03973CD0 STRB W8, [X0 + 0x11]
	0x03973CD4 RET
	0x03973CD8 LDR V0, [X0 + 0x14]
	0x03973CDC RET
	0x03973CE0 STR S0, [X0 + 0x14]
	0x03973CE4 RET
	0x03973CE8 SUB X31, X31, 0x40
	0x03973CEC STP X30, X23, [X31 + 0x10]
	0x03973CF0 STP X22, X21, [X31 + 0x20]
	0x03973CF4 STP X20, X19, [X31 + 0x30]
	0x03973CF8 ADRP X20, 0xA6E000
	0x03973CFC ADRP X21, 0x780000
	0x03973D00 ADRP X23, 0x780000
	0x03973D04 ADRP X22, 0x7DC000
	0x03973D08 LDRB W8, [X20 + 0x9FF]
	0x03973D0C LDR X21, [X21 + 0xB58]
	0x03973D10 LDR X23, [X23 + 0xA90]
	0x03973D14 LDR X22, [X22 + 0xFF8]
	0x03973D18 MOV X19, X0
	0x03973D1C TBNZ X8, 0x0, 0x3973D4C
	0x03973D20 ADRP X0, 0x780000
	0x03973D24 LDR X0, [X0 + 0xB58]
	0x03973D28 BL 0x1C16CF4
	0x03973D2C ADRP X0, 0x780000
	0x03973D30 LDR X0, [X0 + 0xA90]
	0x03973D34 BL 0x1C16CF4
	0x03973D38 ADRP X0, 0x7DC000
	0x03973D3C LDR X0, [X0 + 0xFF8]
	0x03973D40 BL 0x1C16CF4
	0x03973D44 MOVZ W8, 0x1
	0x03973D48 STRB W8, [X20 + 0x9FF]
	0x03973D4C LDRB W8, [X19 + 0x10]
	0x03973D50 LDR X0, [X21]
	0x03973D54 ADD X1, X31, 0xC
	0x03973D58 STRB W8, [X31 + 0xC]
	0x03973D5C BL 0x1C16E04
	0x03973D60 MOV X20, X0
	0x03973D64 LDRB W8, [X19 + 0x11]
	0x03973D68 LDR X0, [X21]
	0x03973D6C ADD X1, X31, 0x8
	0x03973D70 STRB W8, [X31 + 0x8]
	0x03973D74 BL 0x1C16E04
	0x03973D78 MOV X21, X0
	0x03973D7C LDR V0, [X19 + 0x14]
	0x03973D80 LDR X0, [X23]
	0x03973D84 ADD X1, X31, 0x4
	0x03973D88 STR S0, [X31 + 0x4]
	0x03973D8C BL 0x1C16E04
	0x03973D90 LDR X8, [X22]
	0x03973D94 MOV X3, X0
	0x03973D98 MOV X1, X20
	0x03973D9C MOV X2, X21
	0x03973DA0 MOV X0, X8
	0x03973DA4 MOV X4, X31
	0x03973DA8 BL 0x3227C18
	0x03973DAC LDP X20, X19, [X31 + 0x30]
	0x03973DB0 LDP X22, X21, [X31 + 0x20]
	0x03973DB4 LDP X30, X23, [X31 + 0x10]
	0x03973DB8 ADD X31, X31, 0x40
	0x03973DBC RET
	0x03973DC0 MOVZ W8, 0x101
	0x03973DC4 MOVZ W9, 0x3F800000
	0x03973DC8 MOV X1, X31
	0x03973DCC STRH W8, [X0 + 0x10]
	0x03973DD0 STR W9, [X0 + 0x14]
	0x03973DD4 B 0x33BDD8C
	0x03973DD8 STR X30, [X31 - 0x30]!
	0x03973DDC STP X22, X21, [X31 + 0x10]
	0x03973DE0 STP X20, X19, [X31 + 0x20]
	0x03973DE4 ADRP X21, 0xA6E000
	0x03973DE8 LDRB W8, [X21 + 0xA00]
	0x03973DEC MOV X20, X1
	0x03973DF0 MOV X19, X0
	0x03973DF4 TBNZ X8, 0x0, 0x3973E30
	0x03973DF8 ADRP X0, 0x782000
	0x03973DFC LDR X0, [X0 + 0x168]
	0x03973E00 BL 0x1C16CF4
	0x03973E04 ADRP X0, 0x787000
	0x03973E08 LDR X0, [X0 + 0x780]
	0x03973E0C BL 0x1C16CF4
	0x03973E10 ADRP X0, 0x7DD000
	0x03973E14 LDR X0, [X0]
	0x03973E18 BL 0x1C16CF4
	0x03973E1C ADRP X0, 0x780000
	0x03973E20 LDR X0, [X0 + 0x598]
	0x03973E24 BL 0x1C16CF4
	0x03973E28 MOVZ W8, 0x1
	0x03973E2C STRB W8, [X21 + 0xA00]
	0x03973E30 MOV X0, X19
	0x03973E34 MOV X1, X31
	0x03973E38 BL 0x33BDD8C
	0x03973E3C CBZ X20, 0x3973EE0
	0x03973E40 ADRP X8, 0x782000
	0x03973E44 LDR X8, [X8 + 0x168]
	0x03973E48 MOV X0, X20
	0x03973E4C LDR X1, [X8]
	0x03973E50 BL 0x21E52E4
	0x03973E54 CBZ X0, 0x3973EE0
	0x03973E58 ADRP X22, 0x780000
	0x03973E5C LDR X22, [X22 + 0x598]
	0x03973E60 MOV X1, X31
	0x03973E64 BL 0x3C16D04
	0x03973E68 STR X0, [X19 + 0x10]
	0x03973E6C MOV X21, X0
	0x03973E70 LDR X0, [X22]
	0x03973E74 LDR W8, [X0 + 0xE0]
	0x03973E78 CBNZ W8, 0x3973E80
	0x03973E7C BL 0x1C16DFC
	0x03973E80 MOV X0, X21
	0x03973E84 MOV X1, X31
	0x03973E88 MOV X2, X31
	0x03973E8C BL 0x3C3883C
	0x03973E90 TBNZ X0, 0x0, 0x3973EE4
	0x03973E94 ADRP X8, 0x7DD000
	0x03973E98 LDR X8, [X8]
	0x03973E9C ADRP X21, 0x787000
	0x03973EA0 MOV X0, X20
	0x03973EA4 LDR X1, [X8]
	0x03973EA8 LDR X21, [X21 + 0x780]
	0x03973EAC BL 0x220CCAC
	0x03973EB0 STR X0, [X19 + 0x20]
	0x03973EB4 LDR X1, [X21]
	0x03973EB8 MOV X0, X20
	0x03973EBC BL 0x21E52E4
	0x03973EC0 CBZ X0, 0x3973ECC
	0x03973EC4 MOV X1, X31
	0x03973EC8 BL 0x3C1351C
	0x03973ECC STR X0, [X19 + 0x18]
	0x03973ED0 LDP X20, X19, [X31 + 0x20]
	0x03973ED4 LDP X22, X21, [X31 + 0x10]
	0x03973ED8 LDR X30, [X31], #0x30
	0x03973EDC RET
	0x03973EE0 BL 0x1C16F20
	0x03973EE4 ADRP X0, 0x785000
	0x03973EE8 LDR X0, [X0 + 0x528]
	0x03973EEC BL 0x1C16D08
	0x03973EF0 BL 0x1C16F10
	0x03973EF4 MOV X19, X0
	0x03973EF8 ADRP X0, 0x7A9000
	0x03973EFC LDR X0, [X0 + 0xB0]
	0x03973F00 BL 0x1C16D08
	0x03973F04 MOV X20, X0
	0x03973F08 ADRP X0, 0x7DD000
	0x03973F0C LDR X0, [X0 + 0x8]
	0x03973F10 BL 0x1C16D08
	0x03973F14 MOV X2, X0
	0x03973F18 MOV X0, X19
	0x03973F1C MOV X1, X20
	0x03973F20 MOV X3, X31
	0x03973F24 BL 0x3315F7C
	0x03973F28 ADRP X0, 0x7DD000
	0x03973F2C LDR X0, [X0 + 0x10]
	0x03973F30 BL 0x1C16D08
	0x03973F34 MOV X1, X0
	0x03973F38 MOV X0, X19
	0x03973F3C BL 0x1C16DEC
	0x03973F40 STR X30, [X31 - 0x40]!
	0x03973F44 STP X24, X23, [X31 + 0x10]
	0x03973F48 STP X22, X21, [X31 + 0x20]
	0x03973F4C STP X20, X19, [X31 + 0x30]
	0x03973F50 ADRP X24, 0xA6E000
	0x03973F54 ADRP X23, 0x780000
	0x03973F58 LDRB W8, [X24 + 0xA01]
	0x03973F5C LDR X23, [X23 + 0x598]
	0x03973F60 MOV X19, X3
	0x03973F64 MOV X20, X2
	0x03973F68 MOV X22, X1
	0x03973F6C MOV X21, X0
	0x03973F70 TBNZ X8, 0x0, 0x3973F88
	0x03973F74 ADRP X0, 0x780000
	0x03973F78 LDR X0, [X0 + 0x598]
	0x03973F7C BL 0x1C16CF4
	0x03973F80 MOVZ W8, 0x1
	0x03973F84 STRB W8, [X24 + 0xA01]
	0x03973F88 MOV X0, X21
	0x03973F8C MOV X1, X31
	0x03973F90 BL 0x33BDD8C
	0x03973F94 LDR X0, [X23]
	0x03973F98 LDR W8, [X0 + 0xE0]
	0x03973F9C CBNZ W8, 0x3973FA4
	0x03973FA0 BL 0x1C16DFC
	0x03973FA4 MOV X0, X22
	0x03973FA8 MOV X1, X31
	0x03973FAC MOV X2, X31
	0x03973FB0 BL 0x3C3883C
	0x03973FB4 TBNZ X0, 0x0, 0x3973FF8
	0x03973FB8 LDR X0, [X23]
	0x03973FBC LDR W8, [X0 + 0xE0]
	0x03973FC0 CBNZ W8, 0x3973FC8
	0x03973FC4 BL 0x1C16DFC
	0x03973FC8 MOV X0, X19
	0x03973FCC MOV X1, X31
	0x03973FD0 MOV X2, X31
	0x03973FD4 BL 0x3C3883C
	0x03973FD8 TBNZ X0, 0x0, 0x3974018
	0x03973FDC STP X22, X20, [X21 + 0x10]
	0x03973FE0 STR X19, [X21 + 0x20]
	0x03973FE4 LDP X20, X19, [X31 + 0x30]
	0x03973FE8 LDP X22, X21, [X31 + 0x20]
	0x03973FEC LDP X24, X23, [X31 + 0x10]
	0x03973FF0 LDR X30, [X31], #0x40
	0x03973FF4 RET
	0x03973FF8 ADRP X0, 0x785000
	0x03973FFC LDR X0, [X0 + 0x528]
	0x03974000 BL 0x1C16D08
	0x03974004 BL 0x1C16F10
	0x03974008 MOV X19, X0
	0x0397400C ADRP X0, 0x7DC000
	0x03974010 LDR X0, [X0 + 0x18]
	0x03974014 B 0x3974034
	0x03974018 ADRP X0, 0x784000
	0x0397401C LDR X0, [X0 + 0x528]
	0x03974020 BL 0x1C16D08
	0x03974024 BL 0x1C16F10
	0x03974028 MOV X19, X0
	0x0397402C ADRP X0, 0x7AE000
	0x03974030 LDR X0, [X0 + 0x278]
	0x03974034 BL 0x1C16D08
	0x03974038 MOV X1, X0
	0x0397403C MOV X0, X19
	0x03974040 MOV X2, X31
	0x03974044 BL 0x330E100
	0x03974048 ADRP X0, 0x7DC000
	0x0397404C LDR X0, [X0 + 0x20]
	0x03974050 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move [X31+20], W2
	015 Move [X31+24], X0
	016 Move X21, 0xA6F000
	017 Move X22, 0x7DD000
	018 Move X20, 0x7DC000
	019 Move X19, 0x7DC000
	020 Move W8, [X21+2554]
	021 Move X22, [X22+3984]
	022 Move X20, [X20+2200]
	023 Move X19, [X19+2192]
	024 Move X23, X1
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {91}
	029 Move X0, 0x7DD000
	030 Move X0, [X0+1016]
	031 Call 0x1C17CF4
	032 Move X0, 0x7DC000
	033 Move X0, [X0+3768]
	034 Call 0x1C17CF4
	035 Move X0, 0x7DC000
	036 Move X0, [X0+1376]
	037 Call 0x1C17CF4
	038 Move X0, 0x7DC000
	039 Move X0, [X0+3776]
	040 Call 0x1C17CF4
	041 Move X0, 0x7DC000
	042 Move X0, [X0+2184]
	043 Call 0x1C17CF4
	044 Move X0, 0x7DC000
	045 Move X0, [X0+2192]
	046 Call 0x1C17CF4
	047 Move X0, 0x7DC000
	048 Move X0, [X0+2200]
	049 Call 0x1C17CF4
	050 Move X0, 0x781000
	051 Move X0, [X0+3584]
	052 Call 0x1C17CF4
	053 Move X0, 0x7DD000
	054 Move X0, [X0+3992]
	055 Call 0x1C17CF4
	056 Move X0, 0x7DD000
	057 Move X0, [X0+4000]
	058 Call 0x1C17CF4
	059 Move X0, 0x781000
	060 Move X0, [X0+3608]
	061 Call 0x1C17CF4
	062 Move X0, 0x782000
	063 Move X0, [X0+3672]
	064 Call 0x1C17CF4
	065 Move X0, 0x7DC000
	066 Move X0, [X0+2640]
	067 Call 0x1C17CF4
	068 Move X0, 0x7DB000
	069 Move X0, [X0+3600]
	070 Call 0x1C17CF4
	071 Move X0, 0x7DC000
	072 Move X0, [X0+2616]
	073 Call 0x1C17CF4
	074 Move X0, 0x7DB000
	075 Move X0, [X0+3568]
	076 Call 0x1C17CF4
	077 Move X0, 0x7DD000
	078 Move X0, [X0+4008]
	079 Call 0x1C17CF4
	080 Move X0, 0x7DD000
	081 Move X0, [X0+4016]
	082 Call 0x1C17CF4
	083 Move X0, 0x7DD000
	084 Move X0, [X0+4024]
	085 Call 0x1C17CF4
	086 Move X0, 0x7DD000
	087 Move X0, [X0+3984]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X21+2554], W8
	091 Move X0, [X22]
	092 Call 0x1C17F10
	093 Move X1, X31
	094 Move X29, X0
	095 Call Object..ctor, X0
	096 Move X0, [X20]
	097 Call 0x1C17F10
	098 Move X1, [X19]
	099 Move X19, X0
	100 Call HashSet`1<Object>..ctor, X0
	101 Compare X29, 0
	102 JumpIfEqual {391}
	103 Move X8, 0x7DB000
	104 Move X8, [X8+3568]
	105 Move [X29+16], X19
	106 Move X19, 0x7DC000
	107 Move X0, [X8]
	108 Move X19, [X19+2616]
	109 Call 0x1C17F10
	110 Move X1, [X19]
	111 Move X21, X0
	112 Call List`1<Object>..ctor, X0
	113 Compare X23, 0
	114 JumpIfEqual {391}
	115 Move X10, 0x7DD000
	116 Move X8, [X23]
	117 Move X10, [X10+3992]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X1, [X10]
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X23
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X23
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move [X31+32], X0
	139 Move [X31+40], X29
	140 Compare X0, 0
	141 JumpIfEqual {392}
	142 Move X23, 0x7DC000
	143 Move X23, [X23+2184]
	144 Move X20, X0
	145 Move X8, [X20]
	146 Move X10, 0x781000
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X10, [X10+3608]
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X20
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X20
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {295}
	172 Move X8, [X20]
	173 Move X10, 0x7DD000
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Move X10, [X10+4000]
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X20
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X20
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move X25, X0
	196 Compare X0, 0
	197 JumpIfEqual {386}
	198 Move X8, [X25+16]
	199 Compare X8, 0
	200 JumpIfEqual {387}
	201 Move X24, X1
	202 Compare X1, 0
	203 JumpIfEqual {384}
	204 Move X9, [X24+16]
	205 Compare X9, 0
	206 JumpIfEqual {385}
	207 Move W27, [X8+24]
	208 Move X8, 0x782000
	209 Move W28, [X9+24]
	210 Move X8, [X8+3672]
	211 Add W1, W28, W27
	212 Move X0, [X8]
	213 Call 0x1C17D6C
	214 Move X26, X0
	215 Move X0, [X25+16]
	216 Move W1, W31
	217 Move X2, X26
	218 Move W3, W31
	219 Move W4, W27
	220 Move X5, X31
	221 Call Array.Copy, X0, X1, X2, X3, X4
	222 Move X0, [X24+16]
	223 Move W1, W31
	224 Move X2, X26
	225 Move W3, W27
	226 Move W4, W28
	227 Move X5, X31
	228 Call Array.Copy, X0, X1, X2, X3, X4
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 Move W28, [X25+72]
	232 Move X8, 0x7DC000
	233 Move [X31+80], V1
	234 Move [X31+88], V0
	235 Move W29, [X25+24]
	236 Move W19, [X25+80]
	237 Move W20, [X25+84]
	238 Move W22, [X25+76]
	239 Move X8, [X8+1376]
	240 Move X0, [X8]
	241 Call 0x1C17F10
	242 Move V0, [X31+80]
	243 Move V1, [X31+96]
	244 Move X27, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CSET not yet implemented."
	247 Move [X31+48], V0
	248 Move [X31+56], V1
	249 Add X3, X31, 48
	250 Move X1, X26
	251 Move W2, W28
	252 Move W4, W29
	253 Move W5, W20
	254 Move W6, W19
	255 Move [X31], X31
	256 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	257 Compare X21, 0
	258 JumpIfEqual {383}
	259 Move X9, 0x7DB000
	260 Move W10, [X21+28]
	261 Move X8, [X21+16]
	262 Move X9, [X9+3600]
	263 Add W10, W10, 1
	264 Move X9, [X9]
	265 Move [X21+28], W10
	266 Compare X8, 0
	267 JumpIfEqual {388}
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Move W11, [X8+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Add W9, W10, 1
	272 Add X8, X8, X10
	273 Move [X21+24], W9
	274 Move [X8+32], X27
	275 Move X8, [X9+32]
	276 Move X8, [X8+192]
	277 Move X2, [X8+112]
	278 Move X0, X21
	279 Move X1, X27
	280 Call List`1<Object>.AddWithResize, X0, X1
	281 Move X29, [X31+40]
	282 Move X0, [X29+16]
	283 Compare X0, 0
	284 JumpIfEqual {389}
	285 Move X2, [X23]
	286 Move X20, [X31+32]
	287 Move X1, X25
	288 Call HashSet`1<Object>.Add, X0, X1
	289 Move X0, [X29+16]
	290 Compare X0, 0
	291 JumpIfEqual {390}
	292 Move X2, [X23]
	293 Move X1, X24
	294 Call HashSet`1<Object>.Add, X0, X1
	295 Move X25, X31
	296 Compare X20, 0
	297 JumpIfEqual {321}
	298 Move X8, [X20]
	299 Move X10, 0x781000
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Move X10, [X10+3584]
	302 Move X1, [X10]
	303 Compare X9, 0
	304 JumpIfEqual {311}
	305 Move X10, [X8+176]
	306 Add X10, X10, 8
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Subtract X9, X9, 1
	310 Add X10, X10, 16
	311 Move X0, X20
	312 Move W2, W31
	313 Call 0x1C5D788
	314 NotImplemented "Instruction LDRSW not yet implemented."
	315 Add X8, X8, X9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X1, [X0+8]
	319 Move X0, X20
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Compare X25, 0
	322 JumpIfNotEqual {393}
	323 Move X24, [X31+24]
	324 Compare X24, 0
	325 JumpIfEqual {391}
	326 Move X8, 0x7DC000
	327 Move X8, [X8+3776]
	328 Move X20, 0x7DD000
	329 Move X22, 0x7DC000
	330 Move X23, 0x7DD000
	331 Move X0, [X8]
	332 Move X19, [X24+40]
	333 Move X20, [X20+4024]
	334 Move X22, [X22+3768]
	335 Move X23, [X23+1016]
	336 Call 0x1C17F10
	337 Move X2, [X20]
	338 Move X1, X29
	339 Move X3, X31
	340 Move X20, X0
	341 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	342 Move X2, [X22]
	343 Move X0, X19
	344 Move X1, X20
	345 Call Enumerable.Where, X0, X1
	346 Move X1, [X23]
	347 Call Enumerable.ToList, X0
	348 Compare X0, 0
	349 JumpIfEqual {391}
	350 Move X8, 0x7DC000
	351 Move X8, [X8+2640]
	352 Move X1, X21
	353 Move X19, X0
	354 Move X2, [X8]
	355 Call List`1<Object>.AddRange, X0, X1
	356 Move X0, X24
	357 Move X1, X19
	358 Move X2, X31
	359 Call ProBuilderMesh.set_faces, X0, X1
	360 Move W8, [X31+20]
	361 Move TEMP, X8
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {368}
	365 Move X0, X24
	366 Move X1, X21
	367 Call MergeElements.CollapseCoincidentVertices, X0, X1
	368 Move X0, X21
	369 Move X20, [X31+192]
	370 Move X19, [X31+200]
	371 Move X22, [X31+176]
	372 Move X21, [X31+184]
	373 Move X24, [X31+160]
	374 Move X23, [X31+168]
	375 Move X26, [X31+144]
	376 Move X25, [X31+152]
	377 Move X28, [X31+128]
	378 Move X27, [X31+136]
	379 Move X29, [X31+112]
	380 Move X30, [X31+120]
	381 Add X31, X31, 208
	382 Return X0
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Move X0, X25
	394 Call 0x1C17F18
	395 Move X20, [X31+32]
	396 Move X29, [X31+40]
	397 Move X24, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X24
	400 Call 0x3EB2AD0
	401 Move X25, [X0]
	402 Call 0x3EB2AE0
	403 Move X25, X31
	404 Move X24, X0
	405 Move X8, [X31+32]
	406 Compare X8, 0
	407 JumpIfEqual {432}
	408 Move X8, [X31+32]
	409 Move X10, 0x781000
	410 Move X8, [X8]
	411 NotImplemented "Instruction LDRH not yet implemented."
	412 Move X10, [X10+3584]
	413 Move X1, [X10]
	414 Compare X9, 0
	415 JumpIfEqual {422}
	416 Move X10, [X8+176]
	417 Add X10, X10, 8
	418 NotImplemented "Instruction LDUR not yet implemented."
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Subtract X9, X9, 1
	421 Add X10, X10, 16
	422 Move X0, [X31+32]
	423 Move W2, W31
	424 Call 0x1C5D788
	425 NotImplemented "Instruction LDRSW not yet implemented."
	426 Add X8, X8, X9
	427 Add X0, X8, 312
	428 Move X8, [X0]
	429 Move X1, [X0+8]
	430 Move X0, [X31+32]
	431 NotImplemented "Instruction BLR not yet implemented."
	432 Compare X25, 0
	433 JumpIfNotEqual {436}
	434 Move X0, X24
	435 Call 0x1D2D690
	436 Move X0, X25
	437 Call 0x1C17F18
	438 Call 0x1991590

Method: UnityEngine.ProBuilder.Face Merge(UnityEngine.ProBuilder.ProBuilderMesh target, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x03974538 LDR W8, [X26 + 0x18]
	0x0397453C CMP W25, W8
	0x03974540 B.CS 0x3974C4C
	0x03974544 CBZ X23, 0x3974A64
	0x03974548 ADD X9, X26, W25, 0x2, SXTW
	0x0397454C LDRSW X9, [X9 + 0x20]
	0x03974550 LDR W10, [X23 + 0x18]
	0x03974554 CMP W9, W10
	0x03974558 B.CS 0x3974C4C
	0x0397455C CBZ X22, 0x3974A64
	0x03974560 ADD X9, X23, X9, 0x3, LSL
	0x03974564 LDR W11, [X22 + 0x1C]
	0x03974568 LDR X1, [X9 + 0x20]
	0x0397456C LDR X9, [X22 + 0x10]
	0x03974570 LDR X10, [X19]
	0x03974574 ADD W11, W11, 0x1
	0x03974578 STR W11, [X22 + 0x1C]
	0x0397457C CBZ X9, 0x3974A64
	0x03974580 LDRSW X11, [X22 + 0x18]
	0x03974584 LDR W12, [X9 + 0x18]
	0x03974588 CMP W11, W12
	0x0397458C B.CS 0x39745A4
	0x03974590 ADD W10, W11, 0x1
	0x03974594 ADD X9, X9, X11, 0x3, LSL
	0x03974598 STR W10, [X22 + 0x18]
	0x0397459C STR X1, [X9 + 0x20]
	0x039745A0 B 0x39745BC
	0x039745A4 LDR X8, [X10 + 0x20]
	0x039745A8 MOV X0, X22
	0x039745AC LDR X8, [X8 + 0xC0]
	0x039745B0 LDR X2, [X8 + 0x70]
	0x039745B4 BL 0x301BF90
	0x039745B8 LDR W8, [X26 + 0x18]
	0x039745BC ADD W27, W25, 0x1
	0x039745C0 CMP W27, W8
	0x039745C4 B.CS 0x3974C4C
	0x039745C8 ADD X9, X26, W27, 0x2, SXTW
	0x039745CC LDRSW X9, [X9 + 0x20]
	0x039745D0 LDR W10, [X23 + 0x18]
	0x039745D4 CMP W9, W10
	0x039745D8 B.CS 0x3974C4C
	0x039745DC ADD X9, X23, X9, 0x3, LSL
	0x039745E0 LDR W11, [X22 + 0x1C]
	0x039745E4 LDR X1, [X9 + 0x20]
	0x039745E8 LDR X9, [X22 + 0x10]
	0x039745EC LDR X10, [X19]
	0x039745F0 ADD W11, W11, 0x1
	0x039745F4 STR W11, [X22 + 0x1C]
	0x039745F8 CBZ X9, 0x3974A64
	0x039745FC LDRSW X11, [X22 + 0x18]
	0x03974600 LDR W12, [X9 + 0x18]
	0x03974604 CMP W11, W12
	0x03974608 B.CS 0x3974620
	0x0397460C ADD W10, W11, 0x1
	0x03974610 ADD X9, X9, X11, 0x3, LSL
	0x03974614 STR W10, [X22 + 0x18]
	0x03974618 STR X1, [X9 + 0x20]
	0x0397461C B 0x3974638
	0x03974620 LDR X8, [X10 + 0x20]
	0x03974624 MOV X0, X22
	0x03974628 LDR X8, [X8 + 0xC0]
	0x0397462C LDR X2, [X8 + 0x70]
	0x03974630 BL 0x301BF90
	0x03974634 LDR W8, [X26 + 0x18]
	0x03974638 ADD W27, W27, 0x1
	0x0397463C CMP W27, W8
	0x03974640 B.CS 0x3974C4C
	0x03974644 ADD W8, W25, 0x2
	0x03974648 ADD X8, X26, W8, 0x2, SXTW
	0x0397464C LDRSW X8, [X8 + 0x20]
	0x03974650 LDR W9, [X23 + 0x18]
	0x03974654 CMP W8, W9
	0x03974658 B.CS 0x3974C4C
	0x0397465C ADD X8, X23, X8, 0x3, LSL
	0x03974660 LDR W10, [X22 + 0x1C]
	0x03974664 LDR X1, [X8 + 0x20]
	0x03974668 LDR X8, [X22 + 0x10]
	0x0397466C LDR X9, [X19]
	0x03974670 ADD W10, W10, 0x1
	0x03974674 STR W10, [X22 + 0x1C]
	0x03974678 CBZ X8, 0x3974A64
	0x0397467C LDRSW X10, [X22 + 0x18]
	0x03974680 LDR W11, [X8 + 0x18]
	0x03974684 CMP W10, W11
	0x03974688 B.CS 0x39746A0
	0x0397468C ADD W9, W10, 0x1
	0x03974690 ADD X8, X8, X10, 0x3, LSL
	0x03974694 STR W9, [X22 + 0x18]
	0x03974698 STR X1, [X8 + 0x20]
	0x0397469C B 0x39746B4
	0x039746A0 LDR X8, [X9 + 0x20]
	0x039746A4 MOV X0, X22
	0x039746A8 LDR X8, [X8 + 0xC0]
	0x039746AC LDR X2, [X8 + 0x70]
	0x039746B0 BL 0x301BF90
	0x039746B4 LDR W9, [X26 + 0x18]
	0x039746B8 ADD W8, W27, 0x1
	0x039746BC CMP W8, W9
	0x039746C0 B.LT 0x397441C
	0x039746C4 ADD W8, W25, 0x3
	0x039746C8 B 0x3974A50
	0x039746CC LDR X0, [X25 + 0x10]
	0x039746D0 CBZ X0, 0x3974A64
	0x039746D4 MOV W1, W24
	0x039746D8 MOV X2, X31
	0x039746DC BL 0x3C191E8
	0x039746E0 CBZ X0, 0x3974A64
	0x039746E4 LDR W8, [X0 + 0x18]
	0x039746E8 MOV X26, X0
	0x039746EC CMP W8, 0x1
	0x039746F0 B.LT 0x3974A58
	0x039746F4 MOV W8, W31
	0x039746F8 ADRP X9, 0x780000
	0x039746FC LDR X9, [X9 + 0xE58]
	0x03974700 MOVZ W1, 0x6
	0x03974704 MOV W25, W8
	0x03974708 LDR X0, [X9]
	0x0397470C BL 0x1C16D6C
	0x03974710 CBZ X0, 0x3974A64
	0x03974714 LDR W8, [X0 + 0x18]
	0x03974718 MOV X27, X0
	0x0397471C CBZ W8, 0x3974C4C
	0x03974720 ADD W9, W20, W25
	0x03974724 CMP W8, 0x1
	0x03974728 STR W9, [X27 + 0x20]
	0x0397472C B.EQ 0x3974C4C
	0x03974730 ADD W9, W9, 0x1
	0x03974734 CMP W8, 0x2
	0x03974738 STR W9, [X27 + 0x24]
	0x0397473C B.LS 0x3974C4C
	0x03974740 ADD W9, W9, 0x1
	0x03974744 CMP W8, 0x3
	0x03974748 STR W9, [X27 + 0x28]
	0x0397474C B.EQ 0x3974C4C
	0x03974750 CMP W8, 0x4
	0x03974754 STR W9, [X27 + 0x2C]
	0x03974758 B.LS 0x3974C4C
	0x0397475C ADD W9, W9, 0x1
	0x03974760 CMP W8, 0x5
	0x03974764 STR W9, [X27 + 0x30]
	0x03974768 B.EQ 0x3974C4C
	0x0397476C LDR W2, [X31 + 0xAC]
	0x03974770 SUB W8, W9, 0x3
	0x03974774 MOV W0, W24
	0x03974778 MOV W1, W31
	0x0397477C MOV X3, X31
	0x03974780 STR W8, [X27 + 0x34]
	0x03974784 BL 0x3907A24
	0x03974788 MOV W29, W0
	0x0397478C ADD X8, X31, 0x60
	0x03974790 MOV X0, X31
	0x03974794 BL 0x38F6A48
	0x03974798 ADRP X8, 0x7DA000
	0x0397479C LDP V0, V1, [X31 + 0x60]
	0x039747A0 LDR X8, [X8 + 0x560]
	0x039747A4 STP V0, V1, [X31 + 0x80]
	0x039747A8 LDR X0, [X8]
	0x039747AC BL 0x1C16F10
	0x039747B0 LDP V0, V1, [X31 + 0x80]
	0x039747B4 ADD X3, X31, 0x20
	0x039747B8 MOVN W5, 0x0
	0x039747BC MOVN W6, 0x0
	0x039747C0 MOVZ W7, 0x1
	0x039747C4 MOV X1, X27
	0x039747C8 MOV W2, W29
	0x039747CC MOV W4, W31
	0x039747D0 MOV X28, X0
	0x039747D4 STP V0, V1, [X31 + 0x20]
	0x039747D8 STR X31, [X31]
	0x039747DC BL 0x39004D4
	0x039747E0 CBZ X21, 0x3974A64
	0x039747E4 ADRP X9, 0x7D9000
	0x039747E8 LDR W10, [X21 + 0x1C]
	0x039747EC LDR X8, [X21 + 0x10]
	0x039747F0 LDR X9, [X9 + 0xE10]
	0x039747F4 ADD W10, W10, 0x1
	0x039747F8 LDR X9, [X9]
	0x039747FC STR W10, [X21 + 0x1C]
	0x03974800 CBZ X8, 0x3974A64
	0x03974804 LDRSW X10, [X21 + 0x18]
	0x03974808 LDR W11, [X8 + 0x18]
	0x0397480C CMP W10, W11
	0x03974810 B.CS 0x3974828
	0x03974814 ADD W9, W10, 0x1
	0x03974818 ADD X8, X8, X10, 0x3, LSL
	0x0397481C STR W9, [X21 + 0x18]
	0x03974820 STR X28, [X8 + 0x20]
	0x03974824 B 0x3974840
	0x03974828 LDR X8, [X9 + 0x20]
	0x0397482C MOV X0, X21
	0x03974830 MOV X1, X28
	0x03974834 LDR X8, [X8 + 0xC0]
	0x03974838 LDR X2, [X8 + 0x70]
	0x0397483C BL 0x301BF90
	0x03974840 LDR W8, [X26 + 0x18]
	0x03974844 CMP W25, W8
	0x03974848 B.CS 0x3974C4C
	0x0397484C CBZ X23, 0x3974A64
	0x03974850 ADD X9, X26, W25, 0x2, SXTW
	0x03974854 LDRSW X9, [X9 + 0x20]
	0x03974858 LDR W10, [X23 + 0x18]
	0x0397485C CMP W9, W10
	0x03974860 B.CS 0x3974C4C
	0x03974864 CBZ X22, 0x3974A64
	0x03974868 ADD X9, X23, X9, 0x3, LSL
	0x0397486C LDR W11, [X22 + 0x1C]
	0x03974870 LDR X1, [X9 + 0x20]
	0x03974874 LDR X9, [X22 + 0x10]
	0x03974878 LDR X10, [X19]
	0x0397487C ADD W11, W11, 0x1
	0x03974880 STR W11, [X22 + 0x1C]
	0x03974884 CBZ X9, 0x3974A64
	0x03974888 LDRSW X11, [X22 + 0x18]
	0x0397488C LDR W12, [X9 + 0x18]
	0x03974890 CMP W11, W12
	0x03974894 B.CS 0x39748AC
	0x03974898 ADD W10, W11, 0x1
	0x0397489C ADD X9, X9, X11, 0x3, LSL
	0x039748A0 STR W10, [X22 + 0x18]
	0x039748A4 STR X1, [X9 + 0x20]
	0x039748A8 B 0x39748C4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0xA6E000
	015 Move W8, [X21+2555]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x7DC000
	023 Move X0, [X0+4032]
	024 Call 0x1C17CF4
	025 Move X0, 0x7DC000
	026 Move X0, [X0+4040]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DA000
	029 Move X0, [X0+4000]
	030 Call 0x1C17CF4
	031 Move X0, 0x782000
	032 Move X0, [X0+2504]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DB000
	035 Move X0, [X0+1008]
	036 Call 0x1C17CF4
	037 Move X0, 0x7DB000
	038 Move X0, [X0+1376]
	039 Call 0x1C17CF4
	040 Move X0, 0x7DA000
	041 Move X0, [X0+4008]
	042 Call 0x1C17CF4
	043 Move X0, 0x7DA000
	044 Move X0, [X0+3624]
	045 Call 0x1C17CF4
	046 Move X0, 0x7DC000
	047 Move X0, [X0+1656]
	048 Call 0x1C17CF4
	049 Move X0, 0x7DB000
	050 Move X0, [X0+2200]
	051 Call 0x1C17CF4
	052 Move X0, 0x7DC000
	053 Move X0, [X0+4048]
	054 Call 0x1C17CF4
	055 Move X0, 0x7DC000
	056 Move X0, [X0+4056]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+2555], W8
	060 Compare X20, 0
	061 JumpIfEqual {209}
	062 Move X8, 0x7DC000
	063 Move X8, [X8+4032]
	064 Move X0, X20
	065 Move X1, [X8]
	066 Call Enumerable.Count, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, 0x7DC000
	069 Move X8, [X8+4040]
	070 Move W22, W0
	071 Move X0, X20
	072 Move X1, [X8]
	073 Call Enumerable.First, X0
	074 Move X25, 0x7DC000
	075 Move X25, [X25+4056]
	076 Move X21, X0
	077 Move X8, [X25]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X25]
	084 Move X9, [X8+184]
	085 Move X23, [X9+8]
	086 Compare X23, 0
	087 JumpIfNotEqual {110}
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X25]
	094 Move X9, 0x7DA000
	095 Move X8, [X8+184]
	096 Move X9, [X9+4008]
	097 Move X24, [X8]
	098 Move X0, [X9]
	099 Call 0x1C17F10
	100 Move X8, 0x7DC000
	101 Move X8, [X8+4048]
	102 Move X1, X24
	103 Move X3, X31
	104 Move X23, X0
	105 Move X2, [X8]
	106 Call Func`2<Object, Object>..ctor, X0, X1, X2
	107 Move X8, [X25]
	108 Move X8, [X8+184]
	109 Move [X8+8], X23
	110 Move X8, 0x7DA000
	111 Move X8, [X8+4000]
	112 Move X0, X20
	113 Move X1, X23
	114 Move X2, [X8]
	115 Call Enumerable.SelectMany, X0, X1
	116 Move X8, 0x782000
	117 Move X8, [X8+2504]
	118 Move X1, [X8]
	119 Call Enumerable.ToArray, X0
	120 Compare X21, 0
	121 JumpIfEqual {248}
	122 Move X8, 0x7DB000
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move W24, [X21+72]
	126 Move X8, [X8+1376]
	127 Move X23, X0
	128 Move [X31+48], V1
	129 Move [X31+56], V0
	130 Move W25, [X21+24]
	131 Move X0, [X8]
	132 Move W27, [X21+80]
	133 Move W26, [X21+84]
	134 Move W28, [X21+76]
	135 Call 0x1C17F10
	136 Move V0, [X31+48]
	137 Move V1, [X31+64]
	138 Add X3, X31, 16
	139 Move X1, X23
	140 Move W2, W24
	141 Move W4, W25
	142 Move W5, W26
	143 Move W6, W27
	144 Move W7, W28
	145 Move X21, X0
	146 Move [X31+16], V0
	147 Move [X31+24], V1
	148 Move [X31], X31
	149 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	150 Compare X19, 0
	151 JumpIfEqual {248}
	152 Move X8, [X19+40]
	153 Compare X8, 0
	154 JumpIfEqual {248}
	155 Move X24, 0x7DB000
	156 Move W8, [X8+24]
	157 Move X24, [X24+1008]
	158 Subtract W8, W8, W22
	159 Move X0, [X24]
	160 Add W1, W8, 1
	161 Call 0x1C17D6C
	162 Move X8, 0x7DB000
	163 Move X8, [X8+2200]
	164 Move X22, X0
	165 Move X8, [X8]
	166 Move X0, X8
	167 Call 0x1C17F10
	168 Move X8, 0x7DC000
	169 Move X8, [X8+1656]
	170 Move X1, X20
	171 Move X23, X0
	172 Move X2, [X8]
	173 Call HashSet`1<Object>..ctor, X0, X1
	174 Move X26, [X19+40]
	175 Compare X26, 0
	176 JumpIfEqual {248}
	177 Move X8, [X26+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X29, 0x7DA000
	180 Move X29, [X29+3624]
	181 Move W25, W31
	182 Move X27, X31
	183 And X8, X8, 0
	184 Add X28, X26, 32
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare X23, 0
	187 JumpIfEqual {248}
	188 Move X20, [X28]
	189 Move X2, [X29]
	190 Move X0, X23
	191 Move X1, X20
	192 Call HashSet`1<Object>.Contains, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {204}
	197 Compare X22, 0
	198 JumpIfEqual {248}
	199 Move W8, [X22+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add X8, X22, W25
	202 Add W25, W25, 1
	203 Move [X8+32], X20
	204 Move W8, [X26+24]
	205 Add X27, X27, 1
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare X22, 0
	208 JumpIfNotEqual {213}
	209 Move X21, X31
	210 Move W25, W31
	211 Compare X22, 0
	212 JumpIfEqual {248}
	213 Move W8, [X22+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X8, X22, W25
	216 Move X0, X19
	217 Move X1, X22
	218 Move X2, X31
	219 Move [X8+32], X21
	220 Call ProBuilderMesh.set_faces, X0, X1
	221 Move X0, [X24]
	222 Move W1, 1
	223 Call 0x1C17D6C
	224 Compare X0, 0
	225 JumpIfEqual {248}
	226 Move W8, [X0+24]
	227 Move X1, X0
	228 Compare W8, 0
	229 JumpIfEqual {249}
	230 Move X0, X19
	231 Move [X1+32], X21
	232 Call MergeElements.CollapseCoincidentVertices, X0, X1
	233 Move X0, X21
	234 Move X20, [X31+160]
	235 Move X19, [X31+168]
	236 Move X22, [X31+144]
	237 Move X21, [X31+152]
	238 Move X24, [X31+128]
	239 Move X23, [X31+136]
	240 Move X26, [X31+112]
	241 Move X25, [X31+120]
	242 Move X28, [X31+96]
	243 Move X27, [X31+104]
	244 Move X29, [X31+80]
	245 Move X30, [X31+88]
	246 Add X31, X31, 176
	247 Return X0
	248 Call 0x1C17F20
	249 Call 0x1C17F28

Method: System.Void CollapseCoincidentVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0397405C BL 0x1C16DEC
	0x03974060 STR X30, [X31 - 0x20]!
	0x03974064 STP X20, X19, [X31 + 0x10]
	0x03974068 MOV X19, X1
	0x0397406C MOV X1, X31
	0x03974070 MOV X20, X0
	0x03974074 BL 0x33BDD8C
	0x03974078 STR X19, [X20 + 0x20]
	0x0397407C LDP X20, X19, [X31 + 0x10]
	0x03974080 LDR X30, [X31], #0x20
	0x03974084 RET
	0x03974088 STR X30, [X31 - 0x30]!
	0x0397408C STP X22, X21, [X31 + 0x10]
	0x03974090 STP X20, X19, [X31 + 0x20]
	0x03974094 ADRP X22, 0xA6D000
	0x03974098 LDRB W8, [X22 + 0xA02]
	0x0397409C MOV X19, X2
	0x039740A0 MOV X21, X1
	0x039740A4 MOV X20, X0
	0x039740A8 TBNZ X8, 0x0, 0x39740CC
	0x039740AC ADRP X0, 0x781000
	0x039740B0 LDR X0, [X0 + 0x168]
	0x039740B4 BL 0x1C16CF4
	0x039740B8 ADRP X0, 0x786000
	0x039740BC LDR X0, [X0 + 0x780]
	0x039740C0 BL 0x1C16CF4
	0x039740C4 MOVZ W8, 0x1
	0x039740C8 STRB W8, [X22 + 0xA02]
	0x039740CC CBZ X21, 0x3974138
	0x039740D0 ADRP X8, 0x781000
	0x039740D4 LDR X8, [X8 + 0x168]
	0x039740D8 LDR X1, [X8]
	0x039740DC MOV X0, X21
	0x039740E0 BL 0x21E52E4
	0x039740E4 CBZ X0, 0x397413C
	0x039740E8 MOV X1, X31
	0x039740EC BL 0x3C16D04
	0x039740F0 ADRP X8, 0x786000
	0x039740F4 LDR X8, [X8 + 0x780]
	0x039740F8 STR X0, [X20 + 0x10]
	0x039740FC LDR X1, [X8]
	0x03974100 MOV X0, X21
	0x03974104 BL 0x21E52E4
	0x03974108 CBZ X0, 0x3974114
	0x0397410C MOV X1, X31
	0x03974110 BL 0x3C1351C
	0x03974114 STR X0, [X20 + 0x18]
	0x03974118 MOV X0, X20
	0x0397411C MOV X1, X19
	0x03974120 BL 0x397420C
	0x03974124 MOVZ W0, 0x1
	0x03974128 LDP X20, X19, [X31 + 0x20]
	0x0397412C LDP X22, X21, [X31 + 0x10]
	0x03974130 LDR X30, [X31], #0x30
	0x03974134 RET
	0x03974138 BL 0x1C16F20
	0x0397413C BL 0x1C16F20
	0x03974140 B 0x3974154
	0x03974144 B 0x3974154
	0x03974148 B 0x3974154
	0x0397414C B 0x3974154
	0x03974150 B 0x3974154
	0x03974154 MOV X19, X0
	0x03974158 CMP W1, 0x1
	0x0397415C B.NE 0x3974200
	0x03974160 MOV X0, X19
	0x03974164 BL 0x3EB1AD0
	0x03974168 MOV X19, X0
	0x0397416C ADRP X0, 0x77F000
	0x03974170 LDR X0, [X0 + 0x7D0]
	0x03974174 BL 0x1C16D08
	0x03974178 LDR X8, [X19]
	0x0397417C LDR X1, [X8]
	0x03974180 BL 0x1C17270
	0x03974184 TBZ X0, 0x0, 0x39741D4
	0x03974188 LDR X19, [X19]
	0x0397418C BL 0x3EB1AE0
	0x03974190 CBZ X19, 0x39741F4
	0x03974194 LDR X8, [X19]
	0x03974198 MOV X0, X19
	0x0397419C LDP X9, X1, [X8 + 0x168]
	0x039741A0 BLR X9
	0x039741A4 MOV X19, X0
	0x039741A8 ADRP X0, 0x7D9000
	0x039741AC LDR X0, [X0 + 0xAD0]
	0x039741B0 BL 0x1C16D08
	0x039741B4 LDR W8, [X0 + 0xE0]
	0x039741B8 CBNZ W8, 0x39741C0
	0x039741BC BL 0x1C16DFC
	0x039741C0 MOV X0, X19
	0x039741C4 MOV X1, X31
	0x039741C8 BL 0x38FAC88
	0x039741CC MOV W0, W31
	0x039741D0 B 0x3974128
	0x039741D4 MOVZ W0, 0x8
	0x039741D8 BL 0x3EB1AF0
	0x039741DC LDR X8, [X19]
	0x039741E0 STR X8, [X0]
	0x039741E4 ADRP X1, 0x540000
	0x039741E8 ADD X1, X1, 0xE58
	0x039741EC MOV X2, X31
	0x039741F0 BL 0x3EB1B00
	0x039741F4 BL 0x1C16F20
	0x039741F8 MOV X19, X0
	0x039741FC BL 0x3EB1AE0
	0x03974200 MOV X0, X19
	0x03974204 BL 0x1D2C690
	0x03974208 BL 0x1990590
	0x0397420C SUB X31, X31, 0x110
	0x03974210 STR D8, [X31 + 0xA0]
	0x03974214 STP X29, X30, [X31 + 0xB0]
	0x03974218 STP X28, X27, [X31 + 0xC0]
	0x0397421C STP X26, X25, [X31 + 0xD0]
	0x03974220 STP X24, X23, [X31 + 0xE0]
	0x03974224 STP X22, X21, [X31 + 0xF0]
	0x03974228 STP X20, X19, [X31 + 0x100]
	0x0397422C ADRP X19, 0xA6D000
	0x03974230 LDRB W8, [X19 + 0xA03]
	0x03974234 MOV X24, X1
	0x03974238 MOV X25, X0
	0x0397423C TBNZ X8, 0x0, 0x3974308
	0x03974240 ADRP X0, 0x7DB000
	0x03974244 LDR X0, [X0 + 0x250]
	0x03974248 BL 0x1C16CF4
	0x0397424C ADRP X0, 0x7DA000
	0x03974250 LDR X0, [X0 + 0x170]
	0x03974254 BL 0x1C16CF4
	0x03974258 ADRP X0, 0x7DA000
	0x0397425C LDR X0, [X0 + 0x560]
	0x03974260 BL 0x1C16CF4
	0x03974264 ADRP X0, 0x7DB000
	0x03974268 LDR X0, [X0 + 0x270]
	0x0397426C BL 0x1C16CF4
	0x03974270 ADRP X0, 0x780000
	0x03974274 LDR X0, [X0 + 0xE58]
	0x03974278 BL 0x1C16CF4
	0x0397427C ADRP X0, 0x7D9000
	0x03974280 LDR X0, [X0 + 0xE10]
	0x03974284 BL 0x1C16CF4
	0x03974288 ADRP X0, 0x7DB000
	0x0397428C LDR X0, [X0 + 0x1C0]
	0x03974290 BL 0x1C16CF4
	0x03974294 ADRP X0, 0x7DC000
	0x03974298 LDR X0, [X0 + 0x28]
	0x0397429C BL 0x1C16CF4
	0x039742A0 ADRP X0, 0x7DA000
	0x039742A4 LDR X0, [X0 + 0xA38]
	0x039742A8 BL 0x1C16CF4
	0x039742AC ADRP X0, 0x7DB000
	0x039742B0 LDR X0, [X0 + 0x1C8]
	0x039742B4 BL 0x1C16CF4
	0x039742B8 ADRP X0, 0x7D9000
	0x039742BC LDR X0, [X0 + 0xDE8]
	0x039742C0 BL 0x1C16CF4
	0x039742C4 ADRP X0, 0x7D9000
	0x039742C8 LDR X0, [X0 + 0xDF0]
	0x039742CC BL 0x1C16CF4
	0x039742D0 ADRP X0, 0x7DC000
	0x039742D4 LDR X0, [X0 + 0x30]
	0x039742D8 BL 0x1C16CF4
	0x039742DC ADRP X0, 0x7DA000
	0x039742E0 LDR X0, [X0 + 0x418]
	0x039742E4 BL 0x1C16CF4
	0x039742E8 ADRP X0, 0x7DC000
	0x039742EC LDR X0, [X0 + 0x38]
	0x039742F0 BL 0x1C16CF4
	0x039742F4 ADRP X0, 0x7DC000
	0x039742F8 LDR X0, [X0 + 0x40]
	0x039742FC BL 0x1C16CF4
	0x03974300 MOVZ W8, 0x1
	0x03974304 STRB W8, [X19 + 0xA03]
	0x03974308 ADRP X22, 0x7D9000
	0x0397430C ADRP X21, 0x7DB000
	0x03974310 ADRP X20, 0x7D9000
	0x03974314 ADRP X19, 0x7DA000
	0x03974318 LDR X22, [X22 + 0xDE8]
	0x0397431C LDR X21, [X21 + 0x1C8]
	0x03974320 LDR X20, [X20 + 0xDF0]
	0x03974324 LDR X19, [X19 + 0xA38]
	0x03974328 CBNZ X24, 0x3974350
	0x0397432C ADRP X23, 0x7DC000
	0x03974330 LDR X23, [X23 + 0x30]
	0x03974334 LDR X0, [X23]
	0x03974338 LDR W8, [X0 + 0xE0]
	0x0397433C CBNZ W8, 0x3974348
	0x03974340 BL 0x1C16DFC
	0x03974344 LDR X0, [X23]
	0x03974348 LDR X8, [X0 + 0xB8]
	0x0397434C LDR X24, [X8]
	0x03974350 LDR X0, [X25 + 0x10]
	0x03974354 MOV X1, X31
	0x03974358 BL 0x390F2D0
	0x0397435C LDR X8, [X22]
	0x03974360 MOV X23, X0
	0x03974364 MOV X0, X8
	0x03974368 BL 0x1C16F10
	0x0397436C LDR X1, [X21]
	0x03974370 MOV X22, X0
	0x03974374 BL 0x301B7C4
	0x03974378 LDR X0, [X20]
	0x0397437C BL 0x1C16F10
	0x03974380 LDR X1, [X19]
	0x03974384 MOV X21, X0
	0x03974388 BL 0x301B7C4
	0x0397438C LDR X8, [X25 + 0x18]
	0x03974390 STR X24, [X31 + 0x10]
	0x03974394 CBZ X8, 0x397439C
	0x03974398 LDR W8, [X8 + 0x18]
	0x0397439C LDR X0, [X25 + 0x10]
	0x039743A0 CBZ X0, 0x3974A64
	0x039743A4 ADRP X19, 0x7DB000
	0x039743A8 LDR X19, [X19 + 0x1C0]
	0x039743AC MOV W20, W31
	0x039743B0 MOV W24, W31
	0x039743B4 SUB W8, W8, 0x1
	0x039743B8 STR W8, [X31 + 0xAC]
	0x039743BC STR X25, [X31 + 0x18]
	0x039743C0 MOV X1, X31
	0x039743C4 BL 0x3C0F650
	0x039743C8 CMP W24, W0
	0x039743CC B.GE 0x3974A68
	0x039743D0 LDR X0, [X25 + 0x10]
	0x039743D4 CBZ X0, 0x3974A64
	0x039743D8 MOV W1, W24
	0x039743DC MOV X2, X31
	0x039743E0 BL 0x3C1A1A4
	0x039743E4 CMP W0, 0x2
	0x039743E8 B.EQ 0x39746CC
	0x039743EC CBNZ W0, 0x3974C50
	0x039743F0 LDR X0, [X25 + 0x10]
	0x039743F4 CBZ X0, 0x3974A64
	0x039743F8 MOV W1, W24
	0x039743FC MOV X2, X31
	0x03974400 BL 0x3C191E8
	0x03974404 CBZ X0, 0x3974A64
	0x03974408 LDR W8, [X0 + 0x18]
	0x0397440C MOV X26, X0
	0x03974410 CMP W8, 0x1
	0x03974414 B.LT 0x3974A58
	0x03974418 MOV W8, W31
	0x0397441C ADRP X9, 0x780000
	0x03974420 LDR X9, [X9 + 0xE58]
	0x03974424 MOVZ W1, 0x3
	0x03974428 MOV W25, W8
	0x0397442C LDR X0, [X9]
	0x03974430 BL 0x1C16D6C
	0x03974434 CBZ X0, 0x3974A64
	0x03974438 LDR W8, [X0 + 0x18]
	0x0397443C MOV X27, X0
	0x03974440 CBZ W8, 0x3974C4C
	0x03974444 ADD W9, W20, W25
	0x03974448 CMP W8, 0x1
	0x0397444C STR W9, [X27 + 0x20]
	0x03974450 B.EQ 0x3974C4C
	0x03974454 ADD W9, W9, 0x1
	0x03974458 CMP W8, 0x2
	0x0397445C STR W9, [X27 + 0x24]
	0x03974460 B.LS 0x3974C4C
	0x03974464 LDR W2, [X31 + 0xAC]
	0x03974468 ADD W8, W9, 0x1
	0x0397446C MOV W0, W24
	0x03974470 MOV W1, W31
	0x03974474 MOV X3, X31
	0x03974478 STR W8, [X27 + 0x28]
	0x0397447C BL 0x3907A24
	0x03974480 MOV W29, W0
	0x03974484 ADD X8, X31, 0x60
	0x03974488 MOV X0, X31
	0x0397448C BL 0x38F6A48
	0x03974490 ADRP X8, 0x7DA000
	0x03974494 LDP V0, V1, [X31 + 0x60]
	0x03974498 LDR X8, [X8 + 0x560]
	0x0397449C STP V0, V1, [X31 + 0x80]
	0x039744A0 LDR X0, [X8]
	0x039744A4 BL 0x1C16F10
	0x039744A8 LDP V0, V1, [X31 + 0x80]
	0x039744AC ADD X3, X31, 0x40
	0x039744B0 MOVN W5, 0x0
	0x039744B4 MOVN W6, 0x0
	0x039744B8 MOVZ W7, 0x1
	0x039744BC MOV X1, X27
	0x039744C0 MOV W2, W29
	0x039744C4 MOV W4, W31
	0x039744C8 MOV X28, X0
	0x039744CC STP V0, V1, [X31 + 0x40]
	0x039744D0 STR X31, [X31]
	0x039744D4 BL 0x39004D4
	0x039744D8 CBZ X21, 0x3974A64
	0x039744DC ADRP X9, 0x7D9000
	0x039744E0 LDR W10, [X21 + 0x1C]
	0x039744E4 LDR X8, [X21 + 0x10]
	0x039744E8 LDR X9, [X9 + 0xE10]
	0x039744EC ADD W10, W10, 0x1
	0x039744F0 LDR X9, [X9]
	0x039744F4 STR W10, [X21 + 0x1C]
	0x039744F8 CBZ X8, 0x3974A64
	0x039744FC LDRSW X10, [X21 + 0x18]
	0x03974500 LDR W11, [X8 + 0x18]
	0x03974504 CMP W10, W11
	0x03974508 B.CS 0x3974520
	0x0397450C ADD W9, W10, 0x1
	0x03974510 ADD X8, X8, X10, 0x3, LSL
	0x03974514 STR W9, [X21 + 0x18]
	0x03974518 STR X28, [X8 + 0x20]
	0x0397451C B 0x3974538
	0x03974520 LDR X8, [X9 + 0x20]
	0x03974524 MOV X0, X21
	0x03974528 MOV X1, X28
	0x0397452C LDR X8, [X8 + 0xC0]
	0x03974530 LDR X2, [X8 + 0x70]
	0x03974534 BL 0x301BF90

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xA6E000
	015 Move W8, [X19+2556]
	016 Move X20, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x78A000
	023 Move X0, [X0+2136]
	024 Call 0x1C17CF4
	025 Move X0, 0x7AA000
	026 Move X0, [X0+2256]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DB000
	029 Move X0, [X0+3336]
	030 Call 0x1C17CF4
	031 Move X0, 0x78A000
	032 Move X0, [X0+2192]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DA000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move X0, 0x78A000
	038 Move X0, [X0+2184]
	039 Call 0x1C17CF4
	040 Move X0, 0x780000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x7DA000
	044 Move X0, [X0+3504]
	045 Call 0x1C17CF4
	046 Move X0, 0x7DA000
	047 Move X0, [X0+3512]
	048 Call 0x1C17CF4
	049 Move X0, 0x780000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+2556], W8
	054 Compare X23, 0
	055 JumpIfEqual {273}
	056 Move X19, 0x78A000
	057 Move X22, 0x78A000
	058 Move X19, [X19+2184]
	059 Move X22, [X22+2192]
	060 Move X0, X23
	061 Move X1, X31
	062 Call ProBuilderMesh.get_sharedVertexLookup, X0
	063 Move X8, [X19]
	064 Move X21, X0
	065 Move X0, X8
	066 Call 0x1C17F10
	067 Move X1, [X22]
	068 Move X22, X0
	069 Call Dictionary`2<Int32, Int32>..ctor, X0
	070 Compare X20, 0
	071 JumpIfEqual {273}
	072 Move X10, 0x7DA000
	073 Move X8, [X20]
	074 Move X10, [X10+3504]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X20
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 Move [X31+8], X23
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X20, X0
	097 Compare X0, 0
	098 JumpIfEqual {274}
	099 Move X29, 0x7DA000
	100 Move X25, 0x7DB000
	101 Move X19, 0x78A000
	102 Move X29, [X29+3200]
	103 Move X25, [X25+3336]
	104 Move X19, [X19+2136]
	105 Move X8, [X20]
	106 Move X10, 0x780000
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X10, [X10+3608]
	109 Move X1, [X10]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X20
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X20
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {214}
	132 Move X8, [X20]
	133 Move X10, 0x7DA000
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Move X10, [X10+3512]
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X22, 0
	156 JumpIfEqual {271}
	157 Move X8, 0x7AA000
	158 Move X8, [X8+2256]
	159 Move X23, X0
	160 Move X1, [X8]
	161 Move X0, X22
	162 Call Dictionary`2<Int32, Int32>.Clear, X0
	163 Compare X23, 0
	164 JumpIfEqual {272}
	165 Move X8, [X23+16]
	166 Compare X8, 0
	167 JumpIfEqual {260}
	168 Move W27, 8
	169 Move W9, [X8+24]
	170 Subtract X28, X27, 8
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare X21, 0
	174 JumpIfEqual {262}
	175 Move W1, [X8]
	176 Move X2, [X29]
	177 Move X0, X21
	178 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	179 Move X2, [X25]
	180 Move W24, W0
	181 Move X0, X22
	182 Move W1, W24
	183 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	184 Move X26, [X23+16]
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {198}
	189 Move X2, [X29]
	190 Move X0, X22
	191 Move W1, W24
	192 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	193 Compare X26, 0
	194 JumpIfEqual {267}
	195 Move W8, [X26+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move [X26], W0
	198 Compare X26, 0
	199 JumpIfEqual {264}
	200 Move W8, [X26+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W2, [X26]
	203 Move X3, [X19]
	204 Move X0, X22
	205 Move W1, W24
	206 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	207 Move X8, [X23+16]
	208 Add X27, X27, 1
	209 Compare X8, 0
	210 JumpIfNotEqual {169}
	211 Move X0, X23
	212 Move X1, X31
	213 Call Face.InvalidateCache, X0
	214 Move X19, [X31+8]
	215 Move X22, X31
	216 Compare X20, 0
	217 JumpIfEqual {241}
	218 Move X8, [X20]
	219 Move X10, 0x780000
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X10, [X10+3584]
	222 Move X1, [X10]
	223 Compare X9, 0
	224 JumpIfEqual {231}
	225 Move X10, [X8+176]
	226 Add X10, X10, 8
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Subtract X9, X9, 1
	230 Add X10, X10, 16
	231 Move X0, X20
	232 Move W2, W31
	233 Call 0x1C5D788
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Add X8, X8, X9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X20
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X22, 0
	242 JumpIfNotEqual {275}
	243 Move X0, X19
	244 Move X20, [X31+96]
	245 Move X19, [X31+104]
	246 Move X22, [X31+80]
	247 Move X21, [X31+88]
	248 Move X24, [X31+64]
	249 Move X23, [X31+72]
	250 Move X26, [X31+48]
	251 Move X25, [X31+56]
	252 Move X28, [X31+32]
	253 Move X27, [X31+40]
	254 Move X29, [X31+16]
	255 Move X30, [X31+24]
	256 Move X1, X31
	257 Add X31, X31, 112
	258 Call MeshValidation.RemoveUnusedVertices, X0, X1
	259 Return 
	260 Move X19, [X31+8]
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F28
	264 Call 0x1C17F20
	265 Move X19, [X31+8]
	266 Call 0x1C17F28
	267 Move X19, [X31+8]
	268 Call 0x1C17F20
	269 Move X19, [X31+8]
	270 Call 0x1C17F28
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 Call 0x1C17F20
	275 Move X0, X22
	276 Call 0x1C17F18
	277 Move X19, [X31+8]
	278 Move X21, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X21
	281 Call 0x3EB2AD0
	282 Move X22, [X0]
	283 Call 0x3EB2AE0
	284 Move X22, X31
	285 Move X21, X0
	286 Compare X20, 0
	287 JumpIfEqual {311}
	288 Move X8, [X20]
	289 Move X10, 0x780000
	290 NotImplemented "Instruction LDRH not yet implemented."
	291 Move X10, [X10+3584]
	292 Move X1, [X10]
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X20
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X20
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Compare X22, 0
	312 JumpIfNotEqual {315}
	313 Move X0, X21
	314 Call 0x1D2D690
	315 Move X0, X22
	316 Call 0x1C17F18
	317 Call 0x1991590

