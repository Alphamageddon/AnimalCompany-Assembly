Type: UnityEngine.ProBuilder.MeshOperations.ConnectElements

Method: UnityEngine.ProBuilder.Face[] Connect(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x039606F4 ADRP X24, 0x7EF000
	0x039606F8 B 0x396070C
	0x039606FC B 0x3960704
	0x03960700 B 0x3960710
	0x03960704 ADRP X24, 0x7EF000
	0x03960708 LDR X29, [X31 + 0x38]
	0x0396070C LDR X24, [X24 + 0x920]
	0x03960710 MOV X23, X1
	0x03960714 CMP W23, 0x1
	0x03960718 B.NE 0x3960D00
	0x0396071C BL 0x3EB1AD0
	0x03960720 LDR X21, [X0]
	0x03960724 BL 0x3EB1AE0
	0x03960728 MOV W23, W31
	0x0396072C B 0x3960620
	0x03960730 ADRP X8, 0x7EF000
	0x03960734 LDR X8, [X8 + 0x910]
	0x03960738 ADD X0, X31, 0xE0
	0x0396073C LDR X1, [X8]
	0x03960740 BL 0x2C0A83C
	0x03960744 ADRP X19, 0x7EF000
	0x03960748 LDR X19, [X19 + 0x8B8]
	0x0396074C LDR X0, [X19]
	0x03960750 LDR W8, [X0 + 0xE0]
	0x03960754 CBNZ W8, 0x3960760
	0x03960758 BL 0x1C16DFC
	0x0396075C LDR X0, [X19]
	0x03960760 LDR X8, [X0 + 0xB8]
	0x03960764 LDR X19, [X8 + 0x28]
	0x03960768 CBNZ X19, 0x39607D0
	0x0396076C LDR W8, [X0 + 0xE0]
	0x03960770 CBZ W8, 0x3960780
	0x03960774 ADRP X21, 0x7EF000
	0x03960778 LDR X21, [X21 + 0x8B8]
	0x0396077C B 0x3960790
	0x03960780 BL 0x1C16DFC
	0x03960784 ADRP X21, 0x7EF000
	0x03960788 LDR X21, [X21 + 0x8B8]
	0x0396078C LDR X0, [X21]
	0x03960790 ADRP X9, 0x7EF000
	0x03960794 LDR X8, [X0 + 0xB8]
	0x03960798 LDR X9, [X9 + 0x938]
	0x0396079C LDR X20, [X8]
	0x039607A0 LDR X0, [X9]
	0x039607A4 BL 0x1C16F10
	0x039607A8 ADRP X8, 0x7EF000
	0x039607AC LDR X8, [X8 + 0x9B0]
	0x039607B0 MOV X1, X20
	0x039607B4 MOV X3, X31
	0x039607B8 MOV X19, X0
	0x039607BC LDR X2, [X8]
	0x039607C0 BL 0x2D30578
	0x039607C4 LDR X8, [X21]
	0x039607C8 LDR X8, [X8 + 0xB8]
	0x039607CC STR X19, [X8 + 0x28]
	0x039607D0 ADRP X8, 0x7EF000
	0x039607D4 LDR X8, [X8 + 0x8F8]
	0x039607D8 MOV X0, X25
	0x039607DC MOV X1, X19
	0x039607E0 LDR X2, [X8]
	0x039607E4 BL 0x21CF224
	0x039607E8 LDR X19, [X31 + 0x28]
	0x039607EC MOV X2, X28
	0x039607F0 MOV X3, X31
	0x039607F4 MOV X4, X31
	0x039607F8 MOV X1, X19
	0x039607FC BL 0x390186C
	0x03960800 ADRP X8, 0x7EE000
	0x03960804 LDR X8, [X8 + 0x418]
	0x03960808 MOV W1, W31
	0x0396080C LDR X0, [X8]
	0x03960810 BL 0x1C16D6C
	0x03960814 MOV X1, X0
	0x03960818 MOV X0, X19
	0x0396081C MOV X2, X31
	0x03960820 BL 0x39162AC
	0x03960824 ADRP X8, 0x7EF000
	0x03960828 LDR X8, [X8 + 0x8E0]
	0x0396082C MOV X0, X27
	0x03960830 LDR X1, [X8]
	0x03960834 BL 0x2AA4E98
	0x03960838 MOV X1, X0
	0x0396083C MOV X0, X19
	0x03960840 BL 0x395C0F0
	0x03960844 CBZ X0, 0x3960CAC
	0x03960848 LDR W27, [X0 + 0x18]
	0x0396084C LDR X0, [X19 + 0x58]
	0x03960850 MOV X1, X31
	0x03960854 BL 0x3933C34
	0x03960858 MOV X1, X0
	0x0396085C MOV X0, X19
	0x03960860 MOV X2, X31
	0x03960864 BL 0x3915F7C
	0x03960868 MOV X0, X19
	0x0396086C MOV W1, W31
	0x03960870 MOV X2, X31
	0x03960874 BL 0x39197E8
	0x03960878 LDR W8, [X31 + 0x14]
	0x0396087C MOV X0, X31
	0x03960880 TBZ X8, 0x0, 0x3960B64
	0x03960884 ADRP X8, 0x7EF000
	0x03960888 LDR X8, [X8 + 0x9D0]
	0x0396088C LDR X0, [X8]
	0x03960890 BL 0x1C16F10
	0x03960894 MOV X1, X31
	0x03960898 MOV X19, X0
	0x0396089C BL 0x33BDD8C
	0x039608A0 ADRP X8, 0x794000
	0x039608A4 LDR X8, [X8 + 0xE08]
	0x039608A8 LDR X0, [X8]
	0x039608AC BL 0x1C16F10
	0x039608B0 ADRP X8, 0x79A000
	0x039608B4 LDR X8, [X8 + 0x688]
	0x039608B8 MOV X20, X0
	0x039608BC LDR X1, [X8]
	0x039608C0 BL 0x2DA9EF4
	0x039608C4 CBZ X19, 0x3960CAC
	0x039608C8 STR X20, [X19 + 0x10]
	0x039608CC CBZ X25, 0x3960CAC
	0x039608D0 LDR W8, [X25 + 0x18]
	0x039608D4 CMP W8, 0x1
	0x039608D8 B.LT 0x39609B0
	0x039608DC ADRP X28, 0x7EF000
	0x039608E0 ADRP X29, 0x7BD000
	0x039608E4 LDR X28, [X28 + 0x998]
	0x039608E8 LDR X29, [X29 + 0xF38]
	0x039608EC MOV W20, W31
	0x039608F0 LDR X2, [X28]
	0x039608F4 MOV X0, X25
	0x039608F8 MOV W1, W20
	0x039608FC BL 0x301BCCC
	0x03960900 CBZ X0, 0x3960CAC
	0x03960904 MOV W21, W31
	0x03960908 LDR X8, [X0 + 0x18]
	0x0396090C CBZ X8, 0x3960CAC
	0x03960910 LDR W8, [X8 + 0x18]
	0x03960914 CMP W21, W8
	0x03960918 B.GE 0x39609A0
	0x0396091C LDR X2, [X28]
	0x03960920 LDR X23, [X19 + 0x10]
	0x03960924 MOV X0, X25
	0x03960928 MOV W1, W20
	0x0396092C BL 0x301BCCC
	0x03960930 CBZ X0, 0x3960CAC
	0x03960934 LDR X0, [X0 + 0x18]
	0x03960938 CBZ X0, 0x3960CAC
	0x0396093C LDR X2, [X29]
	0x03960940 MOV W1, W21
	0x03960944 BL 0x2FDC41C
	0x03960948 LDR X2, [X28]
	0x0396094C MOV W24, W0
	0x03960950 MOV X0, X25
	0x03960954 MOV W1, W20
	0x03960958 BL 0x301BCCC
	0x0396095C CBZ X0, 0x3960CAC
	0x03960960 LDR X8, [X0 + 0x10]
	0x03960964 CBZ X8, 0x3960CAC
	0x03960968 CBZ X23, 0x3960CAC
	0x0396096C LDR W8, [X8 + 0x30]
	0x03960970 LDR X2, [X22]
	0x03960974 SUB W9, W24, W27
	0x03960978 MOV X0, X23
	0x0396097C ADD W1, W9, W8
	0x03960980 BL 0x2DAB03C
	0x03960984 LDR X2, [X28]
	0x03960988 MOV X0, X25
	0x0396098C MOV W1, W20
	0x03960990 ADD W21, W21, 0x1
	0x03960994 BL 0x301BCCC
	0x03960998 CBNZ X0, 0x3960908
	0x0396099C B 0x3960CAC
	0x039609A0 LDR W8, [X25 + 0x18]
	0x039609A4 ADD W20, W20, 0x1
	0x039609A8 CMP W20, W8
	0x039609AC B.LT 0x39608F0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0xA82000
	010 Move X22, 0x7EF000
	011 Move X20, 0x7F0000
	012 Move W8, [X23+2478]
	013 Move X22, [X22+2200]
	014 Move X20, [X20+1656]
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x7F0000
	022 Move X0, [X0+2208]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F0000
	025 Move X0, [X0+248]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F0000
	028 Move X0, [X0+256]
	029 Call 0x1C17CF4
	030 Move X0, 0x7F0000
	031 Move X0, [X0+264]
	032 Call 0x1C17CF4
	033 Move X0, 0x7F0000
	034 Move X0, [X0+2216]
	035 Call 0x1C17CF4
	036 Move X0, 0x7EF000
	037 Move X0, [X0+2184]
	038 Call 0x1C17CF4
	039 Move X0, 0x7F0000
	040 Move X0, [X0+1656]
	041 Call 0x1C17CF4
	042 Move X0, 0x7EF000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move X0, 0x7F0000
	046 Move X0, [X0+272]
	047 Call 0x1C17CF4
	048 Move X0, 0x7EF000
	049 Move X0, [X0+3136]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F0000
	052 Move X0, [X0+2224]
	053 Call 0x1C17CF4
	054 Move X0, 0x7F0000
	055 Move X0, [X0+2232]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X23+2478], W8
	059 Move X0, X19
	060 Move X1, X21
	061 Move X2, X31
	062 Move [X31+40], X31
	063 Move [X31+16], X31
	064 Move [X31+24], X31
	065 Move [X31], X31
	066 Move [X31+8], X31
	067 Call MeshValidation.EnsureFacesAreComposedOfContiguousTriangles, X0, X1
	068 Move X8, [X22]
	069 Move X22, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X2, [X20]
	073 Move X1, X21
	074 Move X20, X0
	075 Call HashSet`1<Object>..ctor, X0, X1
	076 Compare X22, 0
	077 JumpIfEqual {166}
	078 Move W8, [X22+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, 0x7F0000
	081 Move X8, [X8+272]
	082 Move X21, 0x7F0000
	083 Move X24, 0x7EF000
	084 Move X23, 0x7F0000
	085 Move X1, [X8]
	086 Move X21, [X21+256]
	087 Move X24, [X24+2184]
	088 Move X23, [X23+248]
	089 Add X8, X31, 0
	090 Move X0, X22
	091 Call List`1<Object>.GetEnumerator, X0
	092 Move X1, [X21]
	093 Add X0, X31, 0
	094 Call Enumerator<Object>.MoveNext, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {105}
	099 Compare X20, 0
	100 JumpIfEqual {165}
	101 Move X1, [X31+16]
	102 Move X2, [X24]
	103 Move X0, X20
	104 Call HashSet`1<Object>.Add, X0, X1
	105 Move X1, [X23]
	106 Add X0, X31, 0
	107 Call Enumerator<Object>.Dispose, X0
	108 Move X23, 0x7F0000
	109 Move X23, [X23+2232]
	110 Move X0, [X23]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X23]
	116 Move X8, [X0+184]
	117 Move X24, 0x7F0000
	118 Move X21, [X8+8]
	119 Move X24, [X24+2208]
	120 Compare X21, 0
	121 JumpIfNotEqual {143}
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X23]
	127 Move X9, 0x7F0000
	128 Move X8, [X0+184]
	129 Move X9, [X9+2216]
	130 Move X22, [X8]
	131 Move X0, [X9]
	132 Call 0x1C17F10
	133 Move X8, 0x7F0000
	134 Move X8, [X8+2224]
	135 Move X1, X22
	136 Move X3, X31
	137 Move X21, X0
	138 Move X2, [X8]
	139 Call Func`2<Object, Object>..ctor, X0, X1, X2
	140 Move X8, [X23]
	141 Move X8, [X8+184]
	142 Move [X8+8], X21
	143 Move X2, [X24]
	144 Move X0, X20
	145 Move X1, X21
	146 Call Enumerable.SelectMany, X0, X1
	147 Move X1, X0
	148 Add X2, X31, 24
	149 Add X3, X31, 40
	150 Move W4, 1
	151 Move X0, X19
	152 Move W5, W31
	153 Move X6, X20
	154 Call ConnectElements.Connect, X0, X1, X2, X3, X4, X5, X6
	155 Move X0, [X31+24]
	156 Move X30, [X31+32]
	157 Move X20, [X31+80]
	158 Move X19, [X31+88]
	159 Move X22, [X31+64]
	160 Move X21, [X31+72]
	161 Move X24, [X31+48]
	162 Move X23, [X31+56]
	163 Add X31, X31, 96
	164 Return X0
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X21, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X21
	170 Call 0x3EB2AD0
	171 Move X22, [X0]
	172 Call 0x3EB2AE0
	173 Move X1, [X23]
	174 Add X0, X31, 0
	175 Call Enumerator<Object>.Dispose, X0
	176 Compare X22, 0
	177 JumpIfEqual {108}
	178 Move X0, X22
	179 Call 0x1C17F18
	180 Move X22, X31
	181 Move X21, X0
	182 Move X1, [X23]
	183 Add X0, X31, 0
	184 Call Enumerator<Object>.Dispose, X0
	185 Compare X22, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X21
	188 Call 0x1D2D690
	189 Move X0, X22
	190 Call 0x1C17F18
	191 Call 0x1991590

Method: UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.Face[], UnityEngine.ProBuilder.Edge[]> Connect(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x03961F54 ADRP X0, 0x793000
	0x03961F58 LDR X0, [X0 + 0xE28]
	0x03961F5C BL 0x1C16CF4
	0x03961F60 ADRP X0, 0x7ED000
	0x03961F64 LDR X0, [X0 + 0xFE0]
	0x03961F68 BL 0x1C16CF4
	0x03961F6C ADRP X0, 0x7EE000
	0x03961F70 LDR X0, [X0 + 0x1D0]
	0x03961F74 BL 0x1C16CF4
	0x03961F78 ADRP X0, 0x7ED000
	0x03961F7C LDR X0, [X0 + 0xFE8]
	0x03961F80 BL 0x1C16CF4
	0x03961F84 ADRP X0, 0x7EE000
	0x03961F88 LDR X0, [X0 + 0x288]
	0x03961F8C BL 0x1C16CF4
	0x03961F90 ADRP X0, 0x7ED000
	0x03961F94 LDR X0, [X0 + 0xD38]
	0x03961F98 BL 0x1C16CF4
	0x03961F9C ADRP X0, 0x7EE000
	0x03961FA0 LDR X0, [X0 + 0x9A0]
	0x03961FA4 BL 0x1C16CF4
	0x03961FA8 ADRP X0, 0x7EE000
	0x03961FAC LDR X0, [X0 + 0xA78]
	0x03961FB0 BL 0x1C16CF4
	0x03961FB4 ADRP X0, 0x7EE000
	0x03961FB8 LDR X0, [X0 + 0xA80]
	0x03961FBC BL 0x1C16CF4
	0x03961FC0 ADRP X0, 0x7EE000
	0x03961FC4 LDR X0, [X0 + 0xA88]
	0x03961FC8 BL 0x1C16CF4
	0x03961FCC ADRP X0, 0x7EE000
	0x03961FD0 LDR X0, [X0 + 0x8B8]
	0x03961FD4 BL 0x1C16CF4
	0x03961FD8 ADRP X0, 0x7ED000
	0x03961FDC LDR X0, [X0 + 0xB08]
	0x03961FE0 BL 0x1C16CF4
	0x03961FE4 MOVZ W8, 0x1
	0x03961FE8 STRB W8, [X20 + 0x9B6]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0xA81000
	008 Move X21, 0x7EF000
	009 Move W8, [X22+2479]
	010 Move X21, [X21+2536]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x7EF000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2479], W8
	022 Add X2, X31, 8
	023 Add X3, X31, 40
	024 Move W4, 1
	025 Move W5, 1
	026 Move X0, X20
	027 Move X1, X19
	028 Move X6, X31
	029 Move [X31+40], X31
	030 Move [X31+8], X31
	031 Call ConnectElements.Connect, X0, X1, X2, X3, X4, X5, X6
	032 Move X1, [X31+8]
	033 Move X2, [X31+40]
	034 Move X3, [X21]
	035 Add X0, X31, 16
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	039 Move X0, [X31+16]
	040 Move X1, [X31+24]
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X30, [X31+32]
	046 Add X31, X31, 80
	047 Return X0

Method: System.Int32[] Connect(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x03961FEC CBZ X26, 0x3962898
	0x03961FF0 LDR W8, [X26 + 0x18]
	0x03961FF4 CMP W8, 0x3
	0x03961FF8 B.LT 0x3962868
	0x03961FFC ADRP X8, 0x7ED000
	0x03962000 LDR X8, [X8 + 0xB08]
	0x03962004 LDR X0, [X8]
	0x03962008 LDR W8, [X0 + 0xE0]
	0x0396200C CBNZ W8, 0x3962014
	0x03962010 BL 0x1C16DFC
	0x03962014 MOV X0, X19
	0x03962018 MOV X1, X31
	0x0396201C BL 0x3942528
	0x03962020 ADRP X20, 0x7ED000
	0x03962024 LDR X20, [X20 + 0x8B8]
	0x03962028 LDR W10, [X26 + 0x18]
	0x0396202C MOV X28, X0
	0x03962030 LDR X8, [X20]
	0x03962034 STR W10, [X31 + 0xC]
	0x03962038 LDR W9, [X8 + 0xE0]
	0x0396203C CBNZ W9, 0x396204C
	0x03962040 MOV X0, X8
	0x03962044 BL 0x1C16DFC
	0x03962048 LDR X8, [X20]
	0x0396204C LDR X9, [X8 + 0xB8]
	0x03962050 LDR X22, [X9 + 0x60]
	0x03962054 CBNZ X22, 0x39620AC
	0x03962058 LDR W9, [X8 + 0xE0]
	0x0396205C CBNZ W9, 0x396206C
	0x03962060 MOV X0, X8
	0x03962064 BL 0x1C16DFC
	0x03962068 LDR X8, [X20]
	0x0396206C ADRP X9, 0x7ED000
	0x03962070 LDR X8, [X8 + 0xB8]
	0x03962074 LDR X9, [X9 + 0xA68]
	0x03962078 LDR X23, [X8]
	0x0396207C LDR X0, [X9]
	0x03962080 BL 0x1C16F10
	0x03962084 ADRP X8, 0x7ED000
	0x03962088 LDR X8, [X8 + 0xA78]
	0x0396208C MOV X1, X23
	0x03962090 MOV X3, X31
	0x03962094 MOV X22, X0
	0x03962098 LDR X2, [X8]
	0x0396209C BL 0x2D2D154
	0x039620A0 LDR X8, [X20]
	0x039620A4 LDR X8, [X8 + 0xB8]
	0x039620A8 STR X22, [X8 + 0x60]
	0x039620AC ADRP X8, 0x7ED000
	0x039620B0 LDR X8, [X8 + 0xA58]
	0x039620B4 LDR W1, [X31 + 0xC]
	0x039620B8 MOV X0, X22
	0x039620BC LDR X2, [X8]
	0x039620C0 BL 0x217E7CC
	0x039620C4 LDR X8, [X20]
	0x039620C8 MOV X23, X0
	0x039620CC LDR W9, [X8 + 0xE0]
	0x039620D0 CBNZ W9, 0x39620E0
	0x039620D4 MOV X0, X8
	0x039620D8 BL 0x1C16DFC
	0x039620DC LDR X8, [X20]
	0x039620E0 LDR X9, [X8 + 0xB8]
	0x039620E4 LDR X22, [X9 + 0x68]
	0x039620E8 CBNZ X22, 0x3962140
	0x039620EC LDR W9, [X8 + 0xE0]
	0x039620F0 CBNZ W9, 0x3962100
	0x039620F4 MOV X0, X8
	0x039620F8 BL 0x1C16DFC
	0x039620FC LDR X8, [X20]
	0x03962100 ADRP X9, 0x7ED000
	0x03962104 LDR X8, [X8 + 0xB8]
	0x03962108 LDR X9, [X9 + 0xA70]
	0x0396210C LDR X24, [X8]
	0x03962110 LDR X0, [X9]
	0x03962114 BL 0x1C16F10
	0x03962118 ADRP X8, 0x7ED000
	0x0396211C LDR X8, [X8 + 0xA80]
	0x03962120 MOV X1, X24
	0x03962124 MOV X3, X31
	0x03962128 MOV X22, X0
	0x0396212C LDR X2, [X8]
	0x03962130 BL 0x2D2D154
	0x03962134 LDR X8, [X20]
	0x03962138 LDR X8, [X8 + 0xB8]
	0x0396213C STR X22, [X8 + 0x68]
	0x03962140 ADRP X25, 0x7ED000
	0x03962144 LDR X25, [X25 + 0xA50]
	0x03962148 LDR W1, [X31 + 0xC]
	0x0396214C MOV X0, X22
	0x03962150 LDR X2, [X25]
	0x03962154 BL 0x217E7CC
	0x03962158 LDR X8, [X20]
	0x0396215C MOV X24, X0
	0x03962160 LDR W9, [X8 + 0xE0]
	0x03962164 CBNZ W9, 0x3962174
	0x03962168 MOV X0, X8
	0x0396216C BL 0x1C16DFC
	0x03962170 LDR X8, [X20]
	0x03962174 LDR X9, [X8 + 0xB8]
	0x03962178 LDR X22, [X9 + 0x70]
	0x0396217C CBNZ X22, 0x39621D4
	0x03962180 LDR W9, [X8 + 0xE0]
	0x03962184 CBNZ W9, 0x3962194
	0x03962188 MOV X0, X8
	0x0396218C BL 0x1C16DFC
	0x03962190 LDR X8, [X20]
	0x03962194 ADRP X9, 0x7ED000
	0x03962198 LDR X8, [X8 + 0xB8]
	0x0396219C LDR X9, [X9 + 0xA70]
	0x039621A0 LDR X27, [X8]
	0x039621A4 LDR X0, [X9]
	0x039621A8 BL 0x1C16F10
	0x039621AC ADRP X8, 0x7ED000
	0x039621B0 LDR X8, [X8 + 0xA88]
	0x039621B4 MOV X1, X27
	0x039621B8 MOV X3, X31
	0x039621BC MOV X22, X0
	0x039621C0 LDR X2, [X8]
	0x039621C4 BL 0x2D2D154
	0x039621C8 LDR X8, [X20]
	0x039621CC LDR X8, [X8 + 0xB8]
	0x039621D0 STR X22, [X8 + 0x70]
	0x039621D4 LDR X2, [X25]
	0x039621D8 LDR W1, [X31 + 0xC]
	0x039621DC MOV X0, X22
	0x039621E0 BL 0x217E7CC
	0x039621E4 LDR X20, [X31 + 0x28]
	0x039621E8 MOV X27, X0
	0x039621EC MOV X1, X26
	0x039621F0 MOV X2, X31
	0x039621F4 MOV X0, X20
	0x039621F8 BL 0x393FA98
	0x039621FC STR X0, [X31]
	0x03962200 CBZ X19, 0x3962898
	0x03962204 LDR X1, [X19 + 0x10]
	0x03962208 MOV X0, X20
	0x0396220C MOV X2, X31
	0x03962210 STR X26, [X31 + 0x10]
	0x03962214 BL 0x39090D4
	0x03962218 CBZ X28, 0x3962898
	0x0396221C LDR W8, [X28 + 0x18]
	0x03962220 MOV V8.16B, V0.16B
	0x03962224 MOV V9.16B, V1.16B
	0x03962228 MOV V10.16B, V2.16B
	0x0396222C CMP W8, 0x1
	0x03962230 B.LT 0x39626C8
	0x03962234 ADRP X25, 0x7ED000
	0x03962238 ADRP X20, 0x7EC000
	0x0396223C ADRP X26, 0x792000
	0x03962240 LDR X25, [X25 + 0x288]
	0x03962244 LDR X20, [X20 + 0xD38]
	0x03962248 LDR X26, [X26 + 0xE10]
	0x0396224C MOV W29, W31
	0x03962250 MOV W19, W31
	0x03962254 ADRP X8, 0x7EC000
	0x03962258 LDR X8, [X8 + 0xFE8]
	0x0396225C MOV X0, X28
	0x03962260 MOV W1, W29
	0x03962264 MOV X21, X28
	0x03962268 LDR X2, [X8]
	0x0396226C BL 0x2FB9C40
	0x03962270 CBZ X23, 0x3962898
	0x03962274 LDR X2, [X25]
	0x03962278 MOV X28, X0
	0x0396227C MOV X0, X23
	0x03962280 MOV W1, W19
	0x03962284 BL 0x301BCCC
	0x03962288 MOV X22, X0
	0x0396228C LDR X0, [X31 + 0x28]
	0x03962290 CBZ X0, 0x3962898
	0x03962294 ADRP X8, 0x7ED000
	0x03962298 LDR X8, [X8 + 0x1D0]
	0x0396229C MOV W1, W28
	0x039622A0 LDR X2, [X8]
	0x039622A4 BL 0x301BCCC
	0x039622A8 CBZ X22, 0x3962898
	0x039622AC ADRP X9, 0x7ED000
	0x039622B0 LDR W10, [X22 + 0x1C]
	0x039622B4 LDR X8, [X22 + 0x10]
	0x039622B8 LDR X9, [X9 + 0x1C0]
	0x039622BC ADD W10, W10, 0x1
	0x039622C0 LDR X9, [X9]
	0x039622C4 STR W10, [X22 + 0x1C]
	0x039622C8 CBZ X8, 0x3962898
	0x039622CC LDRSW X10, [X22 + 0x18]
	0x039622D0 LDR W11, [X8 + 0x18]
	0x039622D4 MOV X1, X0
	0x039622D8 CMP W10, W11
	0x039622DC B.CS 0x39622F4
	0x039622E0 ADD W9, W10, 0x1
	0x039622E4 ADD X8, X8, X10, 0x3, LSL
	0x039622E8 STR W9, [X22 + 0x18]
	0x039622EC STR X1, [X8 + 0x20]
	0x039622F0 B 0x3962308
	0x039622F4 LDR X8, [X9 + 0x20]
	0x039622F8 MOV X0, X22
	0x039622FC LDR X8, [X8 + 0xC0]
	0x03962300 LDR X2, [X8 + 0x70]
	0x03962304 BL 0x301BF90
	0x03962308 CBZ X24, 0x3962898
	0x0396230C LDR X2, [X20]
	0x03962310 MOV X0, X24
	0x03962314 MOV W1, W19
	0x03962318 BL 0x301BCCC
	0x0396231C MOV X22, X0
	0x03962320 LDR X0, [X31 + 0x18]
	0x03962324 CBZ X0, 0x3962898
	0x03962328 ADRP X8, 0x7EB000
	0x0396232C LDR X8, [X8 + 0xC80]
	0x03962330 MOV W1, W28
	0x03962334 LDR X2, [X8]
	0x03962338 BL 0x2A0A2A8
	0x0396233C CBZ X22, 0x3962898
	0x03962340 LDR W10, [X22 + 0x1C]
	0x03962344 LDR X8, [X22 + 0x10]
	0x03962348 LDR X9, [X26]
	0x0396234C ADD W10, W10, 0x1
	0x03962350 STR W10, [X22 + 0x1C]
	0x03962354 CBZ X8, 0x3962898
	0x03962358 LDRSW X10, [X22 + 0x18]
	0x0396235C LDR W11, [X8 + 0x18]
	0x03962360 MOV W1, W0
	0x03962364 CMP W10, W11
	0x03962368 B.CS 0x3962380
	0x0396236C ADD W9, W10, 0x1
	0x03962370 ADD X8, X8, X10, 0x2, LSL
	0x03962374 STR W9, [X22 + 0x18]
	0x03962378 STR W1, [X8 + 0x20]
	0x0396237C B 0x3962394
	0x03962380 LDR X8, [X9 + 0x20]
	0x03962384 MOV X0, X22
	0x03962388 LDR X8, [X8 + 0xC0]
	0x0396238C LDR X2, [X8 + 0x70]
	0x03962390 BL 0x2FDC70C
	0x03962394 ADRP X8, 0x795000
	0x03962398 LDR X8, [X8 + 0xB68]
	0x0396239C LDR X0, [X31 + 0x10]
	0x039623A0 MOV W1, W28
	0x039623A4 LDR X2, [X8]
	0x039623A8 BL 0x2FDCA84
	0x039623AC TBZ X0, 0x0, 0x3962420
	0x039623B0 CBZ X27, 0x3962898
	0x039623B4 LDR X2, [X20]
	0x039623B8 MOV X0, X27
	0x039623BC MOV W1, W19
	0x039623C0 BL 0x301BCCC
	0x039623C4 LDR X2, [X25]
	0x039623C8 MOV X22, X0
	0x039623CC MOV X0, X23
	0x039623D0 MOV W1, W19
	0x039623D4 BL 0x301BCCC
	0x039623D8 CBZ X0, 0x3962898
	0x039623DC CBZ X22, 0x3962898
	0x039623E0 LDR W10, [X22 + 0x1C]
	0x039623E4 LDR W1, [X0 + 0x18]
	0x039623E8 LDR X8, [X22 + 0x10]
	0x039623EC LDR X9, [X26]
	0x039623F0 ADD W10, W10, 0x1
	0x039623F4 STR W10, [X22 + 0x1C]
	0x039623F8 CBZ X8, 0x3962898
	0x039623FC LDRSW X10, [X22 + 0x18]
	0x03962400 LDR W11, [X8 + 0x18]
	0x03962404 CMP W10, W11
	0x03962408 B.CS 0x3962428
	0x0396240C ADD W9, W10, 0x1
	0x03962410 ADD X8, X8, X10, 0x2, LSL
	0x03962414 STR W9, [X22 + 0x18]
	0x03962418 STR W1, [X8 + 0x20]
	0x0396241C B 0x396243C
	0x03962420 MOV X28, X21
	0x03962424 B 0x39626B8
	0x03962428 LDR X8, [X9 + 0x20]
	0x0396242C MOV X0, X22
	0x03962430 LDR X8, [X8 + 0xC0]
	0x03962434 LDR X2, [X8 + 0x70]
	0x03962438 BL 0x2FDC70C
	0x0396243C LDR X2, [X25]
	0x03962440 MOV X0, X23
	0x03962444 MOV W1, W19
	0x03962448 BL 0x301BCCC
	0x0396244C CBZ X0, 0x3962898
	0x03962450 ADRP X9, 0x7ED000
	0x03962454 LDR W10, [X0 + 0x1C]
	0x03962458 LDR X8, [X0 + 0x10]
	0x0396245C LDR X9, [X9 + 0x1C0]
	0x03962460 ADD W10, W10, 0x1
	0x03962464 LDR X9, [X9]
	0x03962468 STR W10, [X0 + 0x1C]
	0x0396246C CBZ X8, 0x3962898
	0x03962470 LDRSW X10, [X0 + 0x18]
	0x03962474 LDR W11, [X8 + 0x18]
	0x03962478 CMP W10, W11
	0x0396247C B.CS 0x3962498
	0x03962480 ADD W9, W10, 0x1
	0x03962484 STR W9, [X0 + 0x18]
	0x03962488 LDR X9, [X31]
	0x0396248C ADD X8, X8, X10, 0x3, LSL
	0x03962490 STR X9, [X8 + 0x20]
	0x03962494 B 0x39624AC
	0x03962498 LDR X8, [X9 + 0x20]
	0x0396249C LDR X1, [X31]
	0x039624A0 LDR X8, [X8 + 0xC0]
	0x039624A4 LDR X2, [X8 + 0x70]
	0x039624A8 BL 0x301BF90
	0x039624AC LDR X2, [X20]
	0x039624B0 MOV X0, X24
	0x039624B4 MOV W1, W19
	0x039624B8 BL 0x301BCCC
	0x039624BC CBZ X0, 0x3962898
	0x039624C0 LDR W10, [X0 + 0x1C]
	0x039624C4 LDR X8, [X0 + 0x10]
	0x039624C8 LDR X9, [X26]
	0x039624CC ADD W10, W10, 0x1
	0x039624D0 STR W10, [X0 + 0x1C]
	0x039624D4 CBZ X8, 0x3962898
	0x039624D8 LDRSW X10, [X0 + 0x18]
	0x039624DC LDR W11, [X8 + 0x18]
	0x039624E0 CMP W10, W11
	0x039624E4 B.CS 0x3962500
	0x039624E8 ADD W9, W10, 0x1
	0x039624EC STR W9, [X0 + 0x18]
	0x039624F0 LDR W9, [X31 + 0x8]
	0x039624F4 ADD X8, X8, X10, 0x2, LSL
	0x039624F8 STR W9, [X8 + 0x20]
	0x039624FC B 0x3962514
	0x03962500 LDR X8, [X9 + 0x20]
	0x03962504 LDR W1, [X31 + 0x8]
	0x03962508 LDR X8, [X8 + 0xC0]
	0x0396250C LDR X2, [X8 + 0x70]
	0x03962510 BL 0x2FDC70C
	0x03962514 LDR W10, [X31 + 0xC]
	0x03962518 LDR X2, [X20]
	0x0396251C ADD W8, W19, 0x1
	0x03962520 MOV X0, X27
	0x03962524 SDIV W9, W8, W10
	0x03962528 MSUB W19, W9, W10, W8
	0x0396252C MOV W1, W19
	0x03962530 BL 0x301BCCC
	0x03962534 LDR X2, [X25]
	0x03962538 MOV X22, X0
	0x0396253C MOV X0, X23
	0x03962540 MOV W1, W19
	0x03962544 BL 0x301BCCC
	0x03962548 CBZ X0, 0x3962898
	0x0396254C CBZ X22, 0x3962898
	0x03962550 LDR W10, [X22 + 0x1C]
	0x03962554 LDR W1, [X0 + 0x18]
	0x03962558 LDR X8, [X22 + 0x10]
	0x0396255C LDR X9, [X26]
	0x03962560 ADD W10, W10, 0x1
	0x03962564 STR W10, [X22 + 0x1C]
	0x03962568 CBZ X8, 0x3962898
	0x0396256C LDRSW X10, [X22 + 0x18]
	0x03962570 LDR W11, [X8 + 0x18]
	0x03962574 CMP W10, W11
	0x03962578 B.CS 0x3962590
	0x0396257C ADD W9, W10, 0x1
	0x03962580 ADD X8, X8, X10, 0x2, LSL
	0x03962584 STR W9, [X22 + 0x18]
	0x03962588 STR W1, [X8 + 0x20]
	0x0396258C B 0x39625A4
	0x03962590 LDR X8, [X9 + 0x20]
	0x03962594 MOV X0, X22
	0x03962598 LDR X8, [X8 + 0xC0]
	0x0396259C LDR X2, [X8 + 0x70]
	0x039625A0 BL 0x2FDC70C
	0x039625A4 LDR X2, [X25]
	0x039625A8 MOV X0, X23
	0x039625AC MOV W1, W19
	0x039625B0 BL 0x301BCCC
	0x039625B4 ADRP X8, 0x7ED000
	0x039625B8 LDR X8, [X8 + 0x1D0]
	0x039625BC MOV X22, X0
	0x039625C0 LDR X0, [X31 + 0x28]
	0x039625C4 MOV W1, W28
	0x039625C8 LDR X2, [X8]
	0x039625CC BL 0x301BCCC
	0x039625D0 CBZ X22, 0x3962898
	0x039625D4 ADRP X9, 0x7ED000
	0x039625D8 LDR W10, [X22 + 0x1C]
	0x039625DC LDR X8, [X22 + 0x10]
	0x039625E0 LDR X9, [X9 + 0x1C0]
	0x039625E4 ADD W10, W10, 0x1
	0x039625E8 LDR X9, [X9]
	0x039625EC STR W10, [X22 + 0x1C]
	0x039625F0 CBZ X8, 0x3962898
	0x039625F4 LDRSW X10, [X22 + 0x18]
	0x039625F8 LDR W11, [X8 + 0x18]
	0x039625FC MOV X1, X0
	0x03962600 CMP W10, W11
	0x03962604 B.CS 0x396261C
	0x03962608 ADD W9, W10, 0x1
	0x0396260C ADD X8, X8, X10, 0x3, LSL
	0x03962610 STR W9, [X22 + 0x18]
	0x03962614 STR X1, [X8 + 0x20]
	0x03962618 B 0x3962630
	0x0396261C LDR X8, [X9 + 0x20]
	0x03962620 MOV X0, X22
	0x03962624 LDR X8, [X8 + 0xC0]
	0x03962628 LDR X2, [X8 + 0x70]
	0x0396262C BL 0x301BF90
	0x03962630 LDR X2, [X20]
	0x03962634 MOV X0, X24
	0x03962638 MOV W1, W19
	0x0396263C BL 0x301BCCC
	0x03962640 ADRP X8, 0x7EB000
	0x03962644 LDR X8, [X8 + 0xC80]
	0x03962648 MOV X22, X0
	0x0396264C LDR X0, [X31 + 0x18]
	0x03962650 MOV W1, W28
	0x03962654 LDR X2, [X8]
	0x03962658 BL 0x2A0A2A8
	0x0396265C CBZ X22, 0x3962898
	0x03962660 LDR W10, [X22 + 0x1C]
	0x03962664 LDR X8, [X22 + 0x10]
	0x03962668 LDR X9, [X26]
	0x0396266C ADD W10, W10, 0x1
	0x03962670 STR W10, [X22 + 0x1C]
	0x03962674 CBZ X8, 0x3962898
	0x03962678 LDRSW X10, [X22 + 0x18]
	0x0396267C LDR W11, [X8 + 0x18]
	0x03962680 MOV W1, W0
	0x03962684 MOV X28, X21
	0x03962688 CMP W10, W11
	0x0396268C B.CS 0x39626A4
	0x03962690 ADD W9, W10, 0x1
	0x03962694 ADD X8, X8, X10, 0x2, LSL
	0x03962698 STR W9, [X22 + 0x18]
	0x0396269C STR W1, [X8 + 0x20]
	0x039626A0 B 0x39626B8
	0x039626A4 LDR X8, [X9 + 0x20]
	0x039626A8 MOV X0, X22
	0x039626AC LDR X8, [X8 + 0xC0]
	0x039626B0 LDR X2, [X8 + 0x70]
	0x039626B4 BL 0x2FDC70C
	0x039626B8 LDR W8, [X28 + 0x18]
	0x039626BC ADD W29, W29, 0x1
	0x039626C0 CMP W29, W8
	0x039626C4 B.LT 0x3962254
	0x039626C8 ADRP X8, 0x7ED000
	0x039626CC LDR X8, [X8 + 0x9A0]
	0x039626D0 LDR X0, [X8]
	0x039626D4 BL 0x1C16F10
	0x039626D8 ADRP X8, 0x7ED000
	0x039626DC LDR X8, [X8 + 0x988]
	0x039626E0 MOV X19, X0
	0x039626E4 LDR X1, [X8]
	0x039626E8 BL 0x301B7C4
	0x039626EC CBZ X23, 0x3962898
	0x039626F0 LDR W8, [X23 + 0x18]
	0x039626F4 CMP W8, 0x1
	0x039626F8 B.LT 0x396286C
	0x039626FC ADRP X26, 0x7ED000
	0x03962700 ADRP X28, 0x7EC000
	0x03962704 ADRP X29, 0x7ED000
	0x03962708 LDR X26, [X26 + 0x288]
	0x0396270C LDR X28, [X28 + 0xD38]
	0x03962710 LDR X29, [X29 + 0x978]
	0x03962714 MOV W20, W31
	0x03962718 LDR X2, [X26]
	0x0396271C MOV X0, X23
	0x03962720 MOV W1, W20
	0x03962724 BL 0x301BCCC
	0x03962728 CBZ X0, 0x3962898
	0x0396272C LDR W8, [X0 + 0x18]
	0x03962730 CMP W8, 0x3
	0x03962734 B.LT 0x3962854
	0x03962738 LDR X2, [X26]
	0x0396273C MOV X0, X23
	0x03962740 MOV W1, W20
	0x03962744 BL 0x301BCCC
	0x03962748 MOV W1, W31
	0x0396274C BL 0x394FDA4
	0x03962750 CBZ X24, 0x3962898
	0x03962754 LDR X2, [X28]
	0x03962758 MOV X21, X0
	0x0396275C MOV X0, X24
	0x03962760 MOV W1, W20
	0x03962764 BL 0x301BCCC
	0x03962768 CBZ X21, 0x3962898
	0x0396276C STR X0, [X21 + 0x20]
	0x03962770 LDR X2, [X26]
	0x03962774 MOV X0, X23
	0x03962778 MOV W1, W20
	0x0396277C BL 0x301BCCC
	0x03962780 LDR X8, [X21 + 0x10]
	0x03962784 CBZ X8, 0x3962898
	0x03962788 LDR X1, [X8 + 0x10]
	0x0396278C MOV X2, X31
	0x03962790 BL 0x39090D4
	0x03962794 FMUL S0, S8, S0
	0x03962798 FMUL S1, S9, S1
	0x0396279C FADD S0, S0, S1
	0x039627A0 FMUL S1, S10, S2
	0x039627A4 FADD S0, S1, S0
	0x039627A8 FCMP S0, 0x0
	0x039627AC B.PL 0x39627C0
	0x039627B0 LDR X0, [X21 + 0x10]
	0x039627B4 CBZ X0, 0x3962898
	0x039627B8 MOV X1, X31
	0x039627BC BL 0x3900E24
	0x039627C0 CBZ X27, 0x3962898
	0x039627C4 LDR X2, [X28]
	0x039627C8 MOV X0, X27
	0x039627CC MOV W1, W20
	0x039627D0 BL 0x301BCCC
	0x039627D4 ADRP X8, 0x7ED000
	0x039627D8 LDR X8, [X8 + 0xA60]
	0x039627DC MOV X25, X0
	0x039627E0 LDR X8, [X8]
	0x039627E4 MOV X0, X8
	0x039627E8 BL 0x1C16F10
	0x039627EC MOV X1, X31
	0x039627F0 MOV X22, X0
	0x039627F4 BL 0x33BDD8C
	0x039627F8 STP X21, X25, [X22 + 0x10]
	0x039627FC CBZ X19, 0x3962898
	0x03962800 LDR W10, [X19 + 0x1C]
	0x03962804 LDR X8, [X19 + 0x10]
	0x03962808 LDR X9, [X29]
	0x0396280C ADD W10, W10, 0x1
	0x03962810 STR W10, [X19 + 0x1C]
	0x03962814 CBZ X8, 0x3962898
	0x03962818 LDRSW X10, [X19 + 0x18]
	0x0396281C LDR W11, [X8 + 0x18]
	0x03962820 CMP W10, W11
	0x03962824 B.CS 0x396283C
	0x03962828 ADD W9, W10, 0x1
	0x0396282C ADD X8, X8, X10, 0x3, LSL
	0x03962830 STR W9, [X19 + 0x18]
	0x03962834 STR X22, [X8 + 0x20]
	0x03962838 B 0x3962854
	0x0396283C LDR X8, [X9 + 0x20]
	0x03962840 MOV X0, X19
	0x03962844 MOV X1, X22
	0x03962848 LDR X8, [X8 + 0xC0]
	0x0396284C LDR X2, [X8 + 0x70]
	0x03962850 BL 0x301BF90
	0x03962854 LDR W8, [X23 + 0x18]
	0x03962858 ADD W20, W20, 0x1
	0x0396285C CMP W20, W8
	0x03962860 B.LT 0x3962718
	0x03962864 B 0x396286C
	0x03962868 MOV X19, X31
	0x0396286C MOV X0, X19
	0x03962870 LDP X20, X19, [X31 + 0x90]
	0x03962874 LDP X22, X21, [X31 + 0x80]
	0x03962878 LDP X24, X23, [X31 + 0x70]
	0x0396287C LDP X26, X25, [X31 + 0x60]
	0x03962880 LDP X28, X27, [X31 + 0x50]
	0x03962884 LDP X29, X30, [X31 + 0x40]
	0x03962888 LDP D9, D8, [X31 + 0x30]
	0x0396288C LDR V10, [X31 + 0x20]
	0x03962890 ADD X31, X31, 0xA0
	0x03962894 RET
	0x03962898 BL 0x1C16F20
	0x0396289C SUB X31, X31, 0xA0
	0x039628A0 STR D10, [X31 + 0x20]
	0x039628A4 STP D9, D8, [X31 + 0x30]
	0x039628A8 STP X29, X30, [X31 + 0x40]
	0x039628AC STP X28, X27, [X31 + 0x50]
	0x039628B0 STP X26, X25, [X31 + 0x60]
	0x039628B4 STP X24, X23, [X31 + 0x70]
	0x039628B8 STP X22, X21, [X31 + 0x80]
	0x039628BC STP X20, X19, [X31 + 0x90]
	0x039628C0 STR X3, [X31 + 0x10]
	0x039628C4 STR W2, [X31 + 0xC]
	0x039628C8 STR W1, [X31 + 0x1C]
	0x039628CC ADRP X21, 0xA7F000
	0x039628D0 ADRP X19, 0x7EC000
	0x039628D4 LDRB W8, [X21 + 0x9B5]
	0x039628D8 LDR X19, [X19 + 0xB08]
	0x039628DC MOV X22, X4
	0x039628E0 MOV X28, X0
	0x039628E4 TBNZ X8, 0x0, 0x39629D4
	0x039628E8 ADRP X0, 0x7ED000
	0x039628EC LDR X0, [X0 + 0xA60]
	0x039628F0 BL 0x1C16CF4
	0x039628F4 ADRP X0, 0x7EB000
	0x039628F8 LDR X0, [X0 + 0xC80]
	0x039628FC BL 0x1C16CF4
	0x03962900 ADRP X0, 0x7B9000
	0x03962904 LDR X0, [X0 + 0x600]
	0x03962908 BL 0x1C16CF4
	0x0396290C ADRP X0, 0x7EC000
	0x03962910 LDR X0, [X0 + 0xE28]
	0x03962914 BL 0x1C16CF4
	0x03962918 ADRP X0, 0x7ED000
	0x0396291C LDR X0, [X0 + 0xA90]
	0x03962920 BL 0x1C16CF4
	0x03962924 ADRP X0, 0x792000
	0x03962928 LDR X0, [X0 + 0xE10]
	0x0396292C BL 0x1C16CF4
	0x03962930 ADRP X0, 0x7ED000
	0x03962934 LDR X0, [X0 + 0x978]
	0x03962938 BL 0x1C16CF4
	0x0396293C ADRP X0, 0x7ED000
	0x03962940 LDR X0, [X0 + 0x1C0]
	0x03962944 BL 0x1C16CF4
	0x03962948 ADRP X0, 0x795000
	0x0396294C LDR X0, [X0 + 0xB70]
	0x03962950 BL 0x1C16CF4
	0x03962954 ADRP X0, 0x7ED000
	0x03962958 LDR X0, [X0 + 0x988]
	0x0396295C BL 0x1C16CF4
	0x03962960 ADRP X0, 0x7ED000
	0x03962964 LDR X0, [X0 + 0x1C8]
	0x03962968 BL 0x1C16CF4
	0x0396296C ADRP X0, 0x7EB000
	0x03962970 LDR X0, [X0 + 0xE18]
	0x03962974 BL 0x1C16CF4
	0x03962978 ADRP X0, 0x7EC000
	0x0396297C LDR X0, [X0 + 0xFE0]
	0x03962980 BL 0x1C16CF4
	0x03962984 ADRP X0, 0x7ED000
	0x03962988 LDR X0, [X0 + 0x1D0]
	0x0396298C BL 0x1C16CF4
	0x03962990 ADRP X0, 0x7EC000
	0x03962994 LDR X0, [X0 + 0xFE8]
	0x03962998 BL 0x1C16CF4
	0x0396299C ADRP X0, 0x792000
	0x039629A0 LDR X0, [X0 + 0xE30]
	0x039629A4 BL 0x1C16CF4
	0x039629A8 ADRP X0, 0x7ED000
	0x039629AC LDR X0, [X0 + 0x9A0]
	0x039629B0 BL 0x1C16CF4
	0x039629B4 ADRP X0, 0x7EB000
	0x039629B8 LDR X0, [X0 + 0xDE8]
	0x039629BC BL 0x1C16CF4
	0x039629C0 ADRP X0, 0x7EC000
	0x039629C4 LDR X0, [X0 + 0xB08]
	0x039629C8 BL 0x1C16CF4
	0x039629CC MOVZ W8, 0x1
	0x039629D0 STRB W8, [X21 + 0x9B5]
	0x039629D4 LDR X0, [X19]
	0x039629D8 STR X31, [X31 + 0x28]
	0x039629DC ADRP X19, 0x7ED000
	0x039629E0 ADRP X24, 0x7EB000
	0x039629E4 ADRP X23, 0x7ED000
	0x039629E8 LDR W8, [X0 + 0xE0]
	0x039629EC LDR X19, [X19 + 0xA90]
	0x039629F0 LDR X24, [X24 + 0xDE8]
	0x039629F4 LDR X23, [X23 + 0x1C8]
	0x039629F8 CBNZ W8, 0x3962A00
	0x039629FC BL 0x1C16DFC
	0x03962A00 MOV X0, X28
	0x03962A04 MOV X1, X31
	0x03962A08 BL 0x3942528
	0x03962A0C LDR X8, [X19]
	0x03962A10 MOV X27, X0
	0x03962A14 MOVZ W1, 0x2
	0x03962A18 MOV X0, X8
	0x03962A1C BL 0x1C16D6C
	0x03962A20 LDR X8, [X24]
	0x03962A24 MOV X19, X0
	0x03962A28 MOV X0, X8
	0x03962A2C BL 0x1C16F10
	0x03962A30 LDR X1, [X23]
	0x03962A34 MOV X21, X0
	0x03962A38 BL 0x301B7C4
	0x03962A3C CBZ X19, 0x396315C
	0x03962A40 CBZ X21, 0x3962A58
	0x03962A44 LDR X8, [X19]
	0x03962A48 MOV X0, X21
	0x03962A4C LDR X1, [X8 + 0x40]
	0x03962A50 BL 0x1C16E00
	0x03962A54 CBZ X0, 0x3963164
	0x03962A58 LDR W8, [X19 + 0x18]
	0x03962A5C CBZ W8, 0x3963160
	0x03962A60 STR X21, [X19 + 0x20]
	0x03962A64 LDR X0, [X24]
	0x03962A68 BL 0x1C16F10
	0x03962A6C LDR X1, [X23]
	0x03962A70 MOV X21, X0
	0x03962A74 BL 0x301B7C4
	0x03962A78 CBZ X21, 0x3962A90
	0x03962A7C LDR X8, [X19]
	0x03962A80 MOV X0, X21
	0x03962A84 LDR X1, [X8 + 0x40]
	0x03962A88 BL 0x1C16E00
	0x03962A8C CBZ X0, 0x3963164
	0x03962A90 LDR W8, [X19 + 0x18]
	0x03962A94 CMP W8, 0x1
	0x03962A98 B.LS 0x3963160
	0x03962A9C ADRP X26, 0x7EC000
	0x03962AA0 LDR X26, [X26 + 0xE28]
	0x03962AA4 STR X21, [X19 + 0x28]
	0x03962AA8 ADRP X24, 0x792000
	0x03962AAC ADRP X23, 0x795000
	0x03962AB0 LDR X0, [X26]
	0x03962AB4 LDR X24, [X24 + 0xE30]
	0x03962AB8 LDR X23, [X23 + 0xB70]
	0x03962ABC MOVZ W1, 0x2
	0x03962AC0 BL 0x1C16D6C
	0x03962AC4 LDR X8, [X24]
	0x03962AC8 MOV X25, X0
	0x03962ACC MOV X0, X8
	0x03962AD0 BL 0x1C16F10
	0x03962AD4 LDR X1, [X23]
	0x03962AD8 MOV X21, X0
	0x03962ADC BL 0x2FDBF14
	0x03962AE0 CBZ X25, 0x396315C
	0x03962AE4 CBZ X21, 0x3962AFC
	0x03962AE8 LDR X8, [X25]
	0x03962AEC MOV X0, X21
	0x03962AF0 LDR X1, [X8 + 0x40]
	0x03962AF4 BL 0x1C16E00
	0x03962AF8 CBZ X0, 0x3963164
	0x03962AFC LDR W8, [X25 + 0x18]
	0x03962B00 CBZ W8, 0x3963160
	0x03962B04 STR X21, [X25 + 0x20]
	0x03962B08 LDR X0, [X24]
	0x03962B0C BL 0x1C16F10
	0x03962B10 LDR X1, [X23]
	0x03962B14 MOV X21, X0
	0x03962B18 BL 0x2FDBF14
	0x03962B1C CBZ X21, 0x3962B34
	0x03962B20 LDR X8, [X25]
	0x03962B24 MOV X0, X21
	0x03962B28 LDR X1, [X8 + 0x40]
	0x03962B2C BL 0x1C16E00
	0x03962B30 CBZ X0, 0x3963164
	0x03962B34 LDR W8, [X25 + 0x18]
	0x03962B38 CMP W8, 0x1
	0x03962B3C B.LS 0x3963160
	0x03962B40 STR X21, [X25 + 0x28]
	0x03962B44 LDR X0, [X26]
	0x03962B48 MOVZ W1, 0x2
	0x03962B4C BL 0x1C16D6C
	0x03962B50 LDR X8, [X24]
	0x03962B54 MOV X26, X0
	0x03962B58 MOV X0, X8
	0x03962B5C BL 0x1C16F10
	0x03962B60 LDR X1, [X23]
	0x03962B64 MOV X21, X0
	0x03962B68 BL 0x2FDBF14
	0x03962B6C CBZ X26, 0x396315C
	0x03962B70 CBZ X21, 0x3962B88
	0x03962B74 LDR X8, [X26]
	0x03962B78 MOV X0, X21
	0x03962B7C LDR X1, [X8 + 0x40]
	0x03962B80 BL 0x1C16E00
	0x03962B84 CBZ X0, 0x3963164
	0x03962B88 LDR W8, [X26 + 0x18]
	0x03962B8C CBZ W8, 0x3963160
	0x03962B90 STR X21, [X26 + 0x20]
	0x03962B94 LDR X0, [X24]
	0x03962B98 BL 0x1C16F10
	0x03962B9C LDR X1, [X23]
	0x03962BA0 MOV X21, X0
	0x03962BA4 BL 0x2FDBF14
	0x03962BA8 CBZ X21, 0x3962BC0
	0x03962BAC LDR X8, [X26]
	0x03962BB0 MOV X0, X21
	0x03962BB4 LDR X1, [X8 + 0x40]
	0x03962BB8 BL 0x1C16E00
	0x03962BBC CBZ X0, 0x3963164
	0x03962BC0 LDR W8, [X26 + 0x18]
	0x03962BC4 STR X28, [X31]
	0x03962BC8 CMP W8, 0x1
	0x03962BCC B.LS 0x3963160
	0x03962BD0 STR X21, [X26 + 0x28]
	0x03962BD4 CBZ X27, 0x396315C
	0x03962BD8 LDR W8, [X27 + 0x18]
	0x03962BDC CMP W8, 0x1
	0x03962BE0 B.LT 0x3962FA0
	0x03962BE4 ADRP X23, 0x7EC000
	0x03962BE8 LDR X23, [X23 + 0xFE8]
	0x03962BEC MOV W28, W31
	0x03962BF0 MOV W24, W31
	0x03962BF4 LDR X2, [X23]
	0x03962BF8 MOV X0, X27
	0x03962BFC MOV W1, W28
	0x03962C00 BL 0x2FB9C40
	0x03962C04 ADRP X8, 0x7B9000
	0x03962C08 LDR X8, [X8 + 0x600]
	0x03962C0C STR X0, [X31 + 0x28]
	0x03962C10 LDR X8, [X8]
	0x03962C14 LDR W9, [X8 + 0xE0]
	0x03962C18 CBNZ W9, 0x3962C24
	0x03962C1C MOV X0, X8
	0x03962C20 BL 0x1C16DFC
	0x03962C24 LDR W1, [X31 + 0x1C]
	0x03962C28 ADD X0, X31, 0x28
	0x03962C2C MOV X2, X31
	0x03962C30 BL 0x38FE204
	0x03962C34 TBZ X0, 0x0, 0x3962C7C
	0x03962C38 LDR X2, [X23]
	0x03962C3C MOV X0, X27
	0x03962C40 MOV W1, W28
	0x03962C44 BL 0x2FB9C40
	0x03962C48 ADRP X8, 0x7B9000
	0x03962C4C LDR X8, [X8 + 0x600]
	0x03962C50 STR X0, [X31 + 0x28]
	0x03962C54 LDR X8, [X8]
	0x03962C58 LDR W9, [X8 + 0xE0]
	0x03962C5C CBNZ W9, 0x3962C68
	0x03962C60 MOV X0, X8
	0x03962C64 BL 0x1C16DFC
	0x03962C68 LDR W1, [X31 + 0xC]
	0x03962C6C ADD X0, X31, 0x28
	0x03962C70 MOV X2, X31
	0x03962C74 BL 0x38FE204
	0x03962C78 TBNZ X0, 0x0, 0x396312C
	0x03962C7C LDR X2, [X23]
	0x03962C80 MOV X0, X27
	0x03962C84 MOV W1, W28
	0x03962C88 MOV X20, X23
	0x03962C8C BL 0x2FB9C40
	0x03962C90 LDR W8, [X19 + 0x18]
	0x03962C94 CMP W24, W8
	0x03962C98 B.CS 0x3963160
	0x03962C9C MOV X29, X0
	0x03962CA0 LDR X0, [X31 + 0x10]
	0x03962CA4 CBZ X0, 0x396315C
	0x03962CA8 MOV W23, W24
	0x03962CAC ADD X8, X19, X23, 0x3, LSL
	0x03962CB0 LDR X21, [X8 + 0x20]
	0x03962CB4 ADRP X8, 0x7ED000
	0x03962CB8 LDR X8, [X8 + 0x1D0]
	0x03962CBC MOV W1, W29
	0x03962CC0 LDR X2, [X8]
	0x03962CC4 BL 0x301BCCC
	0x03962CC8 CBZ X21, 0x396315C
	0x03962CCC ADRP X9, 0x7ED000
	0x03962CD0 LDR W10, [X21 + 0x1C]
	0x03962CD4 LDR X8, [X21 + 0x10]
	0x03962CD8 LDR X9, [X9 + 0x1C0]
	0x03962CDC ADD W10, W10, 0x1
	0x03962CE0 LDR X9, [X9]
	0x03962CE4 STR W10, [X21 + 0x1C]
	0x03962CE8 CBZ X8, 0x396315C
	0x03962CEC LDRSW X10, [X21 + 0x18]
	0x03962CF0 LDR W11, [X8 + 0x18]
	0x03962CF4 MOV X1, X0
	0x03962CF8 CMP W10, W11
	0x03962CFC B.CS 0x3962D14
	0x03962D00 ADD W9, W10, 0x1
	0x03962D04 ADD X8, X8, X10, 0x3, LSL
	0x03962D08 STR W9, [X21 + 0x18]
	0x03962D0C STR X1, [X8 + 0x20]
	0x03962D10 B 0x3962D28
	0x03962D14 LDR X8, [X9 + 0x20]
	0x03962D18 MOV X0, X21
	0x03962D1C LDR X8, [X8 + 0xC0]
	0x03962D20 LDR X2, [X8 + 0x70]
	0x03962D24 BL 0x301BF90
	0x03962D28 LDR W8, [X25 + 0x18]
	0x03962D2C CMP W24, W8
	0x03962D30 B.CS 0x3963160
	0x03962D34 CBZ X22, 0x396315C
	0x03962D38 ADD X8, X25, X23, 0x3, LSL
	0x03962D3C LDR X21, [X8 + 0x20]
	0x03962D40 ADRP X8, 0x7EB000
	0x03962D44 LDR X8, [X8 + 0xC80]
	0x03962D48 MOV X0, X22
	0x03962D4C MOV W1, W29
	0x03962D50 LDR X2, [X8]
	0x03962D54 BL 0x2A0A2A8
	0x03962D58 CBZ X21, 0x396315C
	0x03962D5C ADRP X9, 0x792000
	0x03962D60 LDR W10, [X21 + 0x1C]
	0x03962D64 LDR X8, [X21 + 0x10]
	0x03962D68 LDR X9, [X9 + 0xE10]
	0x03962D6C ADD W10, W10, 0x1
	0x03962D70 LDR X9, [X9]
	0x03962D74 STR W10, [X21 + 0x1C]
	0x03962D78 CBZ X8, 0x396315C
	0x03962D7C LDRSW X10, [X21 + 0x18]
	0x03962D80 LDR W11, [X8 + 0x18]
	0x03962D84 MOV W1, W0
	0x03962D88 CMP W10, W11
	0x03962D8C B.CS 0x3962DA4
	0x03962D90 ADD W9, W10, 0x1
	0x03962D94 ADD X8, X8, X10, 0x2, LSL
	0x03962D98 STR W9, [X21 + 0x18]
	0x03962D9C STR W1, [X8 + 0x20]
	0x03962DA0 B 0x3962DB8
	0x03962DA4 LDR X8, [X9 + 0x20]
	0x03962DA8 MOV X0, X21
	0x03962DAC LDR X8, [X8 + 0xC0]
	0x03962DB0 LDR X2, [X8 + 0x70]
	0x03962DB4 BL 0x2FDC70C
	0x03962DB8 LDR W8, [X31 + 0x1C]
	0x03962DBC CMP W29, W8
	0x03962DC0 B.EQ 0x3962DD8
	0x03962DC4 LDR W8, [X31 + 0xC]
	0x03962DC8 CMP W29, W8
	0x03962DCC B.EQ 0x3962DD8
	0x03962DD0 MOV X23, X20
	0x03962DD4 B 0x3962F90
	0x03962DD8 ADD W8, W24, 0x1
	0x03962DDC ADD W9, W24, 0x2
	0x03962DE0 CMP W8, 0x0
	0x03962DE4 LDR W10, [X26 + 0x18]
	0x03962DE8 CSINC W9, W9, W24, LT
	0x03962DEC AND W9, W9, 0xFFFFFFFE
	0x03962DF0 SUB W24, W8, W9
	0x03962DF4 CMP W24, W10
	0x03962DF8 B.CS 0x3963160
	0x03962DFC LDR W8, [X19 + 0x18]
	0x03962E00 CMP W24, W8
	0x03962E04 B.CS 0x3963160
	0x03962E08 ADD X9, X26, X24, 0x3, LSL
	0x03962E0C ADD X21, X19, X24, 0x3, LSL
	0x03962E10 LDR X0, [X9 + 0x20]
	0x03962E14 LDR X9, [X21 + 0x20]!
	0x03962E18 CBZ X9, 0x396315C
	0x03962E1C CBZ X0, 0x396315C
	0x03962E20 ADRP X10, 0x792000
	0x03962E24 LDR W1, [X9 + 0x18]
	0x03962E28 LDR W11, [X0 + 0x1C]
	0x03962E2C LDR X9, [X0 + 0x10]
	0x03962E30 LDR X10, [X10 + 0xE10]
	0x03962E34 ADD W11, W11, 0x1
	0x03962E38 LDR X10, [X10]
	0x03962E3C STR W11, [X0 + 0x1C]
	0x03962E40 CBZ X9, 0x396315C
	0x03962E44 LDRSW X11, [X0 + 0x18]
	0x03962E48 LDR W12, [X9 + 0x18]
	0x03962E4C CMP W11, W12
	0x03962E50 B.CS 0x3962E68
	0x03962E54 ADD W10, W11, 0x1
	0x03962E58 ADD X9, X9, X11, 0x2, LSL
	0x03962E5C STR W10, [X0 + 0x18]
	0x03962E60 STR W1, [X9 + 0x20]
	0x03962E64 B 0x3962E7C
	0x03962E68 LDR X8, [X10 + 0x20]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X28
	005 Move [X31+280], X27
	006 Move [X31+288], X26
	007 Move [X31+296], X25
	008 Move [X31+304], X24
	009 Move [X31+312], X23
	010 Move [X31+320], X22
	011 Move [X31+328], X21
	012 Move [X31+336], X20
	013 Move [X31+344], X19
	014 Move X22, 0xA80000
	015 Move X19, 0x7EE000
	016 Move W8, [X22+2480]
	017 Move X19, [X19+2544]
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {176}
	024 Move X0, 0x7EE000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0x7EE000
	028 Move X0, [X0+2552]
	029 Call 0x1C17CF4
	030 Move X0, 0x7EE000
	031 Move X0, [X0+1400]
	032 Call 0x1C17CF4
	033 Move X0, 0x7EC000
	034 Move X0, [X0+3200]
	035 Call 0x1C17CF4
	036 Move X0, 0x7EE000
	037 Move X0, [X0+1440]
	038 Call 0x1C17CF4
	039 Move X0, 0x7EE000
	040 Move X0, [X0+2296]
	041 Call 0x1C17CF4
	042 Move X0, 0x7ED000
	043 Move X0, [X0+1688]
	044 Call 0x1C17CF4
	045 Move X0, 0x7ED000
	046 Move X0, [X0+2056]
	047 Call 0x1C17CF4
	048 Move X0, 0x794000
	049 Move X0, [X0+2504]
	050 Call 0x1C17CF4
	051 Move X0, 0x7EE000
	052 Move X0, [X0+2560]
	053 Call 0x1C17CF4
	054 Move X0, 0x7EE000
	055 Move X0, [X0+2312]
	056 Call 0x1C17CF4
	057 Move X0, 0x799000
	058 Move X0, [X0+2096]
	059 Call 0x1C17CF4
	060 Move X0, 0x799000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0x7EE000
	064 Move X0, [X0+2328]
	065 Call 0x1C17CF4
	066 Move X0, 0x7EE000
	067 Move X0, [X0+2568]
	068 Call 0x1C17CF4
	069 Move X0, 0x799000
	070 Move X0, [X0+2112]
	071 Call 0x1C17CF4
	072 Move X0, 0x7EE000
	073 Move X0, [X0+2576]
	074 Call 0x1C17CF4
	075 Move X0, 0x7EE000
	076 Move X0, [X0+2352]
	077 Call 0x1C17CF4
	078 Move X0, 0x794000
	079 Move X0, [X0+2512]
	080 Call 0x1C17CF4
	081 Move X0, 0x7EE000
	082 Move X0, [X0+2360]
	083 Call 0x1C17CF4
	084 Move X0, 0x7ED000
	085 Move X0, [X0+1296]
	086 Call 0x1C17CF4
	087 Move X0, 0x794000
	088 Move X0, [X0+2520]
	089 Call 0x1C17CF4
	090 Move X0, 0x793000
	091 Move X0, [X0+3576]
	092 Call 0x1C17CF4
	093 Move X0, 0x799000
	094 Move X0, [X0+2120]
	095 Call 0x1C17CF4
	096 Move X0, 0x799000
	097 Move X0, [X0+1664]
	098 Call 0x1C17CF4
	099 Move X0, 0x793000
	100 Move X0, [X0+3584]
	101 Call 0x1C17CF4
	102 Move X0, 0x799000
	103 Move X0, [X0+1672]
	104 Call 0x1C17CF4
	105 Move X0, 0x793000
	106 Move X0, [X0+3592]
	107 Call 0x1C17CF4
	108 Move X0, 0x7EE000
	109 Move X0, [X0+2584]
	110 Call 0x1C17CF4
	111 Move X0, 0x7EE000
	112 Move X0, [X0+2592]
	113 Call 0x1C17CF4
	114 Move X0, 0x7EE000
	115 Move X0, [X0+2416]
	116 Call 0x1C17CF4
	117 Move X0, 0x7EC000
	118 Move X0, [X0+3600]
	119 Call 0x1C17CF4
	120 Move X0, 0x7EE000
	121 Move X0, [X0+2432]
	122 Call 0x1C17CF4
	123 Move X0, 0x7ED000
	124 Move X0, [X0+2616]
	125 Call 0x1C17CF4
	126 Move X0, 0x7EE000
	127 Move X0, [X0+2440]
	128 Call 0x1C17CF4
	129 Move X0, 0x7EC000
	130 Move X0, [X0+3552]
	131 Call 0x1C17CF4
	132 Move X0, 0x7EE000
	133 Move X0, [X0+2448]
	134 Call 0x1C17CF4
	135 Move X0, 0x793000
	136 Move X0, [X0+3624]
	137 Call 0x1C17CF4
	138 Move X0, 0x7BC000
	139 Move X0, [X0+3896]
	140 Call 0x1C17CF4
	141 Move X0, 0x7EE000
	142 Move X0, [X0+2456]
	143 Call 0x1C17CF4
	144 Move X0, 0x7EE000
	145 Move X0, [X0+2464]
	146 Call 0x1C17CF4
	147 Move X0, 0x7EC000
	148 Move X0, [X0+3560]
	149 Call 0x1C17CF4
	150 Move X0, 0x7EC000
	151 Move X0, [X0+3568]
	152 Call 0x1C17CF4
	153 Move X0, 0x792000
	154 Move X0, [X0+1432]
	155 Call 0x1C17CF4
	156 Move X0, 0x7EE000
	157 Move X0, [X0+2600]
	158 Call 0x1C17CF4
	159 Move X0, 0x7EE000
	160 Move X0, [X0+2608]
	161 Call 0x1C17CF4
	162 Move X0, 0x7EE000
	163 Move X0, [X0+2616]
	164 Call 0x1C17CF4
	165 Move X0, 0x7EE000
	166 Move X0, [X0+2624]
	167 Call 0x1C17CF4
	168 Move X0, 0x7EE000
	169 Move X0, [X0+2544]
	170 Call 0x1C17CF4
	171 Move X0, 0x7EE000
	172 Move X0, [X0+2232]
	173 Call 0x1C17CF4
	174 Move W8, 1
	175 Move [X22+2480], W8
	176 Move X0, [X19]
	177 NotImplemented "Instruction MOVI not yet implemented."
	178 Move [X31+224], X31
	179 Move [X31+232], X31
	180 Move [X31+240], X31
	181 Move [X31+208], X31
	182 Move [X31+176], V0
	183 Move [X31+184], V0
	184 Move [X31+144], X31
	185 Move [X31+152], X31
	186 Move [X31+160], X31
	187 Call 0x1C17F10
	188 Move X1, X31
	189 Move X19, X0
	190 Call Object..ctor, X0
	191 Compare X19, 0
	192 JumpIfEqual {859}
	193 Move X8, 0x792000
	194 Move X8, [X8+1432]
	195 Move [X19+24], X21
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X21
	202 Move X1, X31
	203 Move X2, X31
	204 Call Object.op_Equality, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {881}
	209 Compare X20, 0
	210 JumpIfEqual {888}
	211 Move X0, [X19+24]
	212 Compare X0, 0
	213 JumpIfEqual {859}
	214 Move X8, [X0+48]
	215 Compare X8, 0
	216 JumpIfEqual {859}
	217 Move X23, 0x794000
	218 Move X21, 0x7EE000
	219 Move X22, 0x7ED000
	220 Move X23, [X23+2512]
	221 Move X21, [X21+2616]
	222 Move X22, [X22+2056]
	223 Move W8, [X8+24]
	224 Move X25, 0x793000
	225 Move X26, 0x793000
	226 Move X24, 0x799000
	227 Move [X31+12], W8
	228 Move X25, [X25+3592]
	229 Move X26, [X26+3584]
	230 Move X24, [X24+1672]
	231 Move X1, X31
	232 Call ProBuilderMesh.get_sharedVertexLookup, X0
	233 Move [X19+16], X0
	234 Move X0, [X23]
	235 Call 0x1C17F10
	236 Move X2, [X21]
	237 Move X1, X19
	238 Move X3, X31
	239 Move X21, X0
	240 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	241 Move X2, [X22]
	242 Move X0, X20
	243 Move X1, X21
	244 Call Enumerable.Select, X0, X1
	245 Move X8, [X25]
	246 Move X20, X0
	247 Move X0, X8
	248 Call 0x1C17F10
	249 Move X2, [X26]
	250 Move X1, X20
	251 Move X21, X0
	252 Call HashSet`1<Int32>..ctor, X0, X1
	253 Move X0, [X25]
	254 Call 0x1C17F10
	255 Move X1, [X24]
	256 Move X20, X0
	257 Call HashSet`1<Int32>..ctor, X0
	258 Compare X21, 0
	259 JumpIfEqual {859}
	260 Move X8, 0x799000
	261 Move X8, [X8+2120]
	262 Move X24, 0x799000
	263 Move X23, 0x799000
	264 Move X27, 0x7EE000
	265 Move X25, 0x7EE000
	266 Move X22, 0x7EC000
	267 Move X29, 0x7EE000
	268 Move X24, [X24+2104]
	269 Move X23, [X23+1664]
	270 Move X27, [X27+1440]
	271 Move X25, [X25+1400]
	272 Move X22, [X22+3552]
	273 Move X29, [X29+2456]
	274 Move X1, [X8]
	275 Move X26, 0x7EE000
	276 Move X28, 0x799000
	277 Move X26, [X26+1344]
	278 Move X28, [X28+2096]
	279 Add X8, X31, 96
	280 Move X0, X21
	281 Call HashSet`1<Int32>.GetEnumerator, X0
	282 Move V0, [X31+6]
	283 Move X8, [X31+112]
	284 Move [X31+14], V0
	285 Move [X31+240], X8
	286 Move X1, [X24]
	287 Add X0, X31, 224
	288 Call Enumerator<Int32>.MoveNext, X0
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {312}
	293 Move X8, [X19+24]
	294 Compare X8, 0
	295 JumpIfEqual {863}
	296 Move X8, [X8+48]
	297 Compare X8, 0
	298 JumpIfEqual {864}
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Move W10, [X8+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Add X8, X8, X9
	303 Move X8, [X8+32]
	304 Compare X8, 0
	305 JumpIfEqual {861}
	306 Compare X20, 0
	307 JumpIfEqual {862}
	308 Move X1, [X8+16]
	309 Move X2, [X23]
	310 Move X0, X20
	311 Call HashSet`1<Int32>.UnionWith, X0, X1
	312 Move X1, [X28]
	313 Add X0, X31, 224
	314 Call Enumerator<Int32>.Dispose, X0
	315 Move X0, [X27]
	316 Call 0x1C17F10
	317 Move X1, [X25]
	318 Move X25, X0
	319 Call Dictionary`2<Object, Object>..ctor, X0
	320 Move X0, [X19+24]
	321 Compare X0, 0
	322 JumpIfEqual {859}
	323 Move X1, X31
	324 Move X2, X31
	325 Call ProBuilderMesh.GetVertices, X0, X1
	326 Move X8, 0x7EC000
	327 Move X8, [X8+3560]
	328 Move X23, X0
	329 Move X8, [X8]
	330 Move X0, X8
	331 Call 0x1C17F10
	332 Move X2, [X22]
	333 Move X1, X23
	334 Move [X31+24], X0
	335 Call List`1<Object>..ctor, X0, X1
	336 Move X8, [X19+24]
	337 Compare X8, 0
	338 JumpIfEqual {859}
	339 Move X27, [X8+40]
	340 Compare X27, 0
	341 JumpIfEqual {859}
	342 Move W8, [X27+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move W28, W31
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add X8, X27, W28
	347 Move X23, [X8+32]
	348 Compare X23, 0
	349 JumpIfEqual {859}
	350 Move X0, X23
	351 Move X1, X31
	352 Call Face.get_distinctIndexesInternal, X0
	353 Compare X0, 0
	354 JumpIfEqual {859}
	355 Move X8, [X0+24]
	356 Move X24, X0
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X21, X31
	359 And X8, X8, 0
	360 Add X22, X24, 32
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Compare X20, 0
	363 JumpIfEqual {859}
	364 Move X8, 0x793000
	365 Move W1, [X22]
	366 Move X8, [X8+3576]
	367 Move X0, X20
	368 Move X2, [X8]
	369 Call HashSet`1<Int32>.Contains, X0, X1
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {381}
	374 Move W8, [X24+24]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move W2, [X22]
	377 Move X3, [X26]
	378 Move X0, X25
	379 Move X1, X23
	380 Call ArrayUtility.AddOrAppend, X0, X1, X2
	381 Move W8, [X24+24]
	382 Add X21, X21, 1
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move W8, [X27+24]
	385 Add W28, W28, 1
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X8, 0x7EE000
	388 Move X8, [X8+2464]
	389 Move X0, [X8]
	390 Call 0x1C17F10
	391 Move X8, 0x7EE000
	392 Move X8, [X8+2440]
	393 Move X20, X0
	394 Move X1, [X8]
	395 Call List`1<Object>..ctor, X0
	396 Move X8, 0x7EC000
	397 Move X8, [X8+3568]
	398 Move X0, [X8]
	399 Call 0x1C17F10
	400 Move X8, 0x7ED000
	401 Move X8, [X8+2616]
	402 Move [X31+16], X0
	403 Move X1, [X8]
	404 Call List`1<Object>..ctor, X0
	405 Move X8, [X19+24]
	406 Compare X8, 0
	407 JumpIfEqual {859}
	408 Move X21, 0x7EE000
	409 Move X21, [X21+2232]
	410 Move X23, 0x7EE000
	411 Move X24, [X8+40]
	412 Move W22, [X31+12]
	413 Move X0, [X21]
	414 Move W9, [X0+224]
	415 Move X23, [X23+2568]
	416 Compare W9, 0
	417 JumpIfNotEqual {420}
	418 Call 0x1C17DFC
	419 Move X0, [X21]
	420 Move X8, [X0+184]
	421 Move X26, [X8+16]
	422 Compare X26, 0
	423 JumpIfNotEqual {449}
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfEqual {429}
	427 Move X21, 0x7EE000
	428 Move X21, [X21+2232]
	429 Call 0x1C17DFC
	430 Move X21, 0x7EE000
	431 Move X21, [X21+2232]
	432 Move X0, [X21]
	433 Move X9, 0x7ED000
	434 Move X8, [X0+184]
	435 Move X9, [X9+1296]
	436 Move X27, [X8]
	437 Move X0, [X9]
	438 Call 0x1C17F10
	439 Move X8, 0x7EE000
	440 Move X8, [X8+2600]
	441 Move X1, X27
	442 Move X3, X31
	443 Move X26, X0
	444 Move X2, [X8]
	445 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	446 Move X8, [X21]
	447 Move X8, [X8+184]
	448 Move [X8+16], X26
	449 Move X8, 0x7ED000
	450 Move X8, [X8+1688]
	451 Move X0, X24
	452 Move X1, X26
	453 Move X2, [X8]
	454 Call Enumerable.Select, X0, X1
	455 Move X8, 0x793000
	456 Move X8, [X8+3592]
	457 Move X26, X0
	458 Move X8, [X8]
	459 Move X0, X8
	460 Call 0x1C17F10
	461 Move X8, 0x793000
	462 Move X8, [X8+3584]
	463 Move X1, X26
	464 Move X24, X0
	465 Move X2, [X8]
	466 Call HashSet`1<Int32>..ctor, X0, X1
	467 Compare X25, 0
	468 JumpIfEqual {859}
	469 Move X8, 0x7EE000
	470 Move X8, [X8+2552]
	471 Move X0, X25
	472 Move X1, [X8]
	473 Add X8, X31, 96
	474 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	475 Move V0, [X31+96]
	476 Move V1, [X31+112]
	477 Move X8, [X31+128]
	478 Move W25, 1
	479 Move [X31+176], V0
	480 Move [X31+184], V1
	481 Move [X31+208], X8
	482 Move X1, [X23]
	483 Add X0, X31, 176
	484 Call Enumerator<Object, Object>.MoveNext, X0
	485 Move TEMP, X0
	486 And TEMP, TEMP, 1
	487 Compare TEMP, 1
	488 JumpIfNotEqual {671}
	489 Move X27, [X31+200]
	490 Compare X27, 0
	491 JumpIfEqual {866}
	492 Move W8, [X27+24]
	493 Move X26, [X31+192]
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X21, 0x7BC000
	496 Move X21, [X21+3896]
	497 Move X2, [X21]
	498 Move X0, X27
	499 Move W1, W31
	500 Call List`1<Int32>.get_Item, X0, X1
	501 Move X2, [X21]
	502 Move W28, W0
	503 Move W1, 1
	504 Move X0, X27
	505 Call List`1<Int32>.get_Item, X0, X1
	506 Move X4, [X19+16]
	507 Move W2, W0
	508 Move X3, [X31+24]
	509 Move X0, X26
	510 Move W1, W28
	511 Call ConnectElements.ConnectIndexesPerFace, X0, X1, X2, X3, X4
	512 Move X27, X0
	513 Compare X27, 0
	514 JumpIfEqual {482}
	515 Move X3, [X19+16]
	516 Move X2, [X31+24]
	517 Move X0, X26
	518 Move X1, X27
	519 Move W4, W22
	520 Call ConnectElements.ConnectIndexesPerFace, X0, X1, X2, X3, X4
	521 Move X27, X0
	522 Add W22, W22, 1
	523 Compare X27, 0
	524 JumpIfEqual {482}
	525 Compare X26, 0
	526 JumpIfEqual {906}
	527 Move W8, [X26+84]
	528 Move TEMP, X8
	529 And TEMP, TEMP, -2147483648
	530 Compare TEMP, -2147483648
	531 JumpIfNotEqual {551}
	532 Compare X24, 0
	533 JumpIfEqual {912}
	534 Move X8, 0x793000
	535 Move X8, [X8+3576]
	536 Move X2, [X8]
	537 Move X0, X24
	538 Move W1, W25
	539 Call HashSet`1<Int32>.Contains, X0, X1
	540 Move TEMP, X0
	541 And TEMP, TEMP, 1
	542 Compare TEMP, 1
	543 JumpIfNotEqual {545}
	544 Add W25, W25, 1
	545 Move X8, 0x794000
	546 Move X8, [X8+2520]
	547 Move X2, [X8]
	548 Move X0, X24
	549 Move W1, W25
	550 Call HashSet`1<Int32>.Add, X0, X1
	551 Move X8, 0x7EE000
	552 Move X8, [X8+2432]
	553 Move W23, W22
	554 Move X1, [X8]
	555 Add X8, X31, 96
	556 Move X0, X27
	557 Call List`1<Object>.GetEnumerator, X0
	558 Move V0, [X31+6]
	559 Move X8, [X31+112]
	560 Add X28, X26, 28
	561 Move [X31+9], V0
	562 Move [X31+160], X8
	563 Move X8, 0x7EE000
	564 Move X8, [X8+2328]
	565 Move X1, [X8]
	566 Add X0, X31, 144
	567 Call Enumerator<Object>.MoveNext, X0
	568 Move TEMP, X0
	569 And TEMP, TEMP, 1
	570 Compare TEMP, 1
	571 JumpIfNotEqual {614}
	572 Move X21, [X31+160]
	573 Compare X21, 0
	574 JumpIfEqual {664}
	575 Move X8, [X21+16]
	576 Compare X8, 0
	577 JumpIfEqual {665}
	578 Move X22, [X8+16]
	579 Compare X22, 0
	580 JumpIfEqual {662}
	581 Move W8, [X26+84]
	582 NotImplemented "Instruction MOVI not yet implemented."
	583 NotImplemented "Instruction CMP not yet implemented."
	584 NotImplemented "Instruction CSEL not yet implemented."
	585 Move [X22+84], W8
	586 Move V1, [X28]
	587 Move V0, [X28+16]
	588 Move [X31+64], V2
	589 Move [X31+72], V2
	590 Move [X31+96], V1
	591 Move [X31+104], V0
	592 Move [X31+32], V1
	593 Move [X31+40], V0
	594 Add X0, X31, 64
	595 Add X1, X31, 32
	596 Move X2, X31
	597 Call AutoUnwrapSettings..ctor, X0, X1
	598 Move V1, [X31+64]
	599 Move V0, [X31+80]
	600 Move [X22+44], V0
	601 Move [X22+28], V1
	602 Move X8, [X21+16]
	603 Compare X8, 0
	604 JumpIfEqual {663}
	605 Move X8, [X8+16]
	606 Compare X8, 0
	607 JumpIfEqual {661}
	608 Move W9, [X26+24]
	609 Move [X8+24], W9
	610 Move W9, [X26+76]
	611 Move [X8+76], W9
	612 Move W9, [X26+72]
	613 Move [X8+72], W9
	614 Move X28, X31
	615 Move W21, 28
	616 Move X8, 0x7EE000
	617 Move X8, [X8+2312]
	618 Move X1, [X8]
	619 Add X0, X31, 144
	620 Call Enumerator<Object>.Dispose, X0
	621 Compare X28, 0
	622 JumpIfNotEqual {907}
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Compare W21, 0
	625 JumpIfNotEqual {854}
	626 Move X0, [X31+16]
	627 Compare X0, 0
	628 JumpIfEqual {909}
	629 Move X9, 0x7EC000
	630 Move W10, [X0+28]
	631 Move X8, [X0+16]
	632 Move X9, [X9+3600]
	633 Add W10, W10, 1
	634 Move X9, [X9]
	635 Move [X0+28], W10
	636 Compare X8, 0
	637 JumpIfEqual {910}
	638 Move W22, W23
	639 NotImplemented "Instruction LDRSW not yet implemented."
	640 Move W11, [X8+24]
	641 Move X23, 0x7EE000
	642 Move X23, [X23+2568]
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Add W9, W10, 1
	645 Add X8, X8, X10
	646 Move [X0+24], W9
	647 Move [X8+32], X26
	648 Move X8, [X9+32]
	649 Move X8, [X8+192]
	650 Move X2, [X8+112]
	651 Move X1, X26
	652 Call List`1<Object>.AddWithResize, X0, X1
	653 Compare X20, 0
	654 JumpIfEqual {911}
	655 Move X8, 0x7EE000
	656 Move X8, [X8+2416]
	657 Move X2, [X8]
	658 Move X0, X20
	659 Move X1, X27
	660 Call List`1<Object>.AddRange, X0, X1
	661 Call 0x1C17F20
	662 Call 0x1C17F20
	663 Call 0x1C17F20
	664 Call 0x1C17F20
	665 Call 0x1C17F20
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Call 0x3EB2AD0
	668 Move X28, [X0]
	669 Call 0x3EB2AE0
	670 Move W21, W31
	671 Move X8, 0x7EE000
	672 Move X8, [X8+2560]
	673 Add X0, X31, 176
	674 Move X1, [X8]
	675 Call Enumerator<Object, Object>.Dispose, X0
	676 Move X27, 0x7BC000
	677 Move X21, 0x7EE000
	678 Move X27, [X27+3896]
	679 Move X21, [X21+2232]
	680 Move X23, [X31+16]
	681 Move X0, [X21]
	682 Move W8, [X0+224]
	683 Compare W8, 0
	684 JumpIfNotEqual {687}
	685 Call 0x1C17DFC
	686 Move X0, [X21]
	687 Move X8, [X0+184]
	688 Move X22, [X8+24]
	689 Compare X22, 0
	690 JumpIfNotEqual {712}
	691 Move W8, [X0+224]
	692 Compare W8, 0
	693 JumpIfNotEqual {696}
	694 Call 0x1C17DFC
	695 Move X0, [X21]
	696 Move X9, 0x7EE000
	697 Move X8, [X0+184]
	698 Move X9, [X9+2360]
	699 Move X24, [X8]
	700 Move X0, [X9]
	701 Call 0x1C17F10
	702 Move X8, 0x7EE000
	703 Move X8, [X8+2608]
	704 Move X1, X24
	705 Move X3, X31
	706 Move X22, X0
	707 Move X2, [X8]
	708 Call Func`2<Object, Object>..ctor, X0, X1, X2
	709 Move X8, [X21]
	710 Move X8, [X8+184]
	711 Move [X8+24], X22
	712 Move X8, 0x7EE000
	713 Move X8, [X8+2296]
	714 Move X0, X20
	715 Move X1, X22
	716 Move X2, [X8]
	717 Call Enumerable.Select, X0, X1
	718 Move X1, [X19+24]
	719 Move X2, [X31+24]
	720 Move X3, X31
	721 Move X4, X31
	722 Call FaceRebuildData.Apply, X0, X1, X2, X3
	723 Move X0, [X19+24]
	724 Move X1, X23
	725 Call DeleteElements.DeleteFaces, X0, X1
	726 Compare X0, 0
	727 JumpIfEqual {859}
	728 Move X8, [X19+24]
	729 Compare X8, 0
	730 JumpIfEqual {859}
	731 Move W26, [X0+24]
	732 Move X0, X8
	733 Move X1, X31
	734 Call ProBuilderMesh.get_sharedVertexLookup, X0
	735 Move [X19+16], X0
	736 Move X8, 0x793000
	737 Move X8, [X8+3592]
	738 Move X0, [X8]
	739 Call 0x1C17F10
	740 Move X8, 0x799000
	741 Move X8, [X8+1672]
	742 Move X21, X0
	743 Move X1, [X8]
	744 Call HashSet`1<Int32>..ctor, X0
	745 Compare X20, 0
	746 JumpIfEqual {859}
	747 Move W8, [X20+24]
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move W22, W31
	750 Move X2, [X29]
	751 Move X0, X20
	752 Move W1, W22
	753 Call List`1<Object>.get_Item, X0, X1
	754 Compare X0, 0
	755 JumpIfEqual {859}
	756 Move W23, W31
	757 Move X8, [X0+24]
	758 Compare X8, 0
	759 JumpIfEqual {859}
	760 Move W8, [X8+24]
	761 NotImplemented "Instruction CMP not yet implemented."
	762 Move X2, [X29]
	763 Move X24, [X19+16]
	764 Move X0, X20
	765 Move W1, W22
	766 Call List`1<Object>.get_Item, X0, X1
	767 Compare X0, 0
	768 JumpIfEqual {859}
	769 Move X0, [X0+24]
	770 Compare X0, 0
	771 JumpIfEqual {859}
	772 Move X2, [X27]
	773 Move W1, W23
	774 Call List`1<Int32>.get_Item, X0, X1
	775 Move X2, [X29]
	776 Move W25, W0
	777 Move X0, X20
	778 Move W1, W22
	779 Call List`1<Object>.get_Item, X0, X1
	780 Compare X0, 0
	781 JumpIfEqual {859}
	782 Move X8, [X0+16]
	783 Compare X8, 0
	784 JumpIfEqual {859}
	785 Compare X24, 0
	786 JumpIfEqual {859}
	787 Move X9, 0x7EC000
	788 Move W8, [X8+48]
	789 Move X9, [X9+3200]
	790 Move X0, X24
	791 Move X2, [X9]
	792 Subtract W9, W25, W26
	793 Add W1, W9, W8
	794 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	795 Compare X21, 0
	796 JumpIfEqual {859}
	797 Move X8, 0x794000
	798 Move X8, [X8+2520]
	799 Move W1, W0
	800 Move X0, X21
	801 Move X2, [X8]
	802 Call HashSet`1<Int32>.Add, X0, X1
	803 Move X2, [X29]
	804 Move X0, X20
	805 Move W1, W22
	806 Add W23, W23, 1
	807 Call List`1<Object>.get_Item, X0, X1
	808 Compare X0, 0
	809 JumpIfNotEqual {757}
	810 Move W8, [X20+24]
	811 Add W22, W22, 1
	812 NotImplemented "Instruction CMP not yet implemented."
	813 Move X0, [X19+24]
	814 Compare X0, 0
	815 JumpIfEqual {859}
	816 Move W1, W31
	817 Move X2, X31
	818 Call ProBuilderMesh.ToMesh, X0, X1
	819 Move X8, 0x794000
	820 Move X8, [X8+2512]
	821 Move X0, [X8]
	822 Call 0x1C17F10
	823 Move X8, 0x7EE000
	824 Move X8, [X8+2624]
	825 Move X1, X19
	826 Move X3, X31
	827 Move X20, X0
	828 Move X2, [X8]
	829 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	830 Move X8, 0x7ED000
	831 Move X8, [X8+2056]
	832 Move X0, X21
	833 Move X1, X20
	834 Move X2, [X8]
	835 Call Enumerable.Select, X0, X1
	836 Move X8, 0x794000
	837 Move X8, [X8+2504]
	838 Move X1, [X8]
	839 Call Enumerable.ToArray, X0
	840 Move X20, [X31+336]
	841 Move X19, [X31+344]
	842 Move X22, [X31+320]
	843 Move X21, [X31+328]
	844 Move X24, [X31+304]
	845 Move X23, [X31+312]
	846 Move X26, [X31+288]
	847 Move X25, [X31+296]
	848 Move X28, [X31+272]
	849 Move X27, [X31+280]
	850 Move X29, [X31+256]
	851 Move X30, [X31+264]
	852 Add X31, X31, 352
	853 Return X0
	854 Move X8, 0x7EE000
	855 Move X8, [X8+2560]
	856 Add X0, X31, 176
	857 Move X1, [X8]
	858 Call Enumerator<Object, Object>.Dispose, X0
	859 Call 0x1C17F20
	860 Call 0x1C17F28
	861 Call 0x1C17F20
	862 Call 0x1C17F20
	863 Call 0x1C17F20
	864 Call 0x1C17F20
	865 Call 0x1C17F28
	866 Call 0x1C17F20
	867 Move X22, X1
	868 Move X24, X0
	869 Move X28, X31
	870 Move X8, 0x7EE000
	871 Move X8, [X8+2312]
	872 Move X1, [X8]
	873 Add X0, X31, 144
	874 Call Enumerator<Object>.Dispose, X0
	875 Move X0, X24
	876 Move X1, X22
	877 Compare X28, 0
	878 JumpIfEqual {915}
	879 Move X0, X28
	880 Call 0x1C17F18
	881 Move X0, 0x797000
	882 Move X0, [X0+1320]
	883 Call 0x1C17D08
	884 Call 0x1C17F10
	885 Move X19, X0
	886 Move X0, 0x7EC000
	887 Move X0, [X0+3728]
	888 Move X0, 0x797000
	889 Move X0, [X0+1320]
	890 Call 0x1C17D08
	891 Call 0x1C17F10
	892 Move X19, X0
	893 Move X0, 0x7CA000
	894 Move X0, [X0+3600]
	895 Call 0x1C17D08
	896 Move X1, X0
	897 Move X0, X19
	898 Move X2, X31
	899 Call ArgumentNullException..ctor, X0, X1
	900 Move X0, 0x7EE000
	901 Move X0, [X0+2632]
	902 Call 0x1C17D08
	903 Move X1, X0
	904 Move X0, X19
	905 Call 0x1C17DEC
	906 Call 0x1C17F20
	907 Move X0, X28
	908 Call 0x1C17F18
	909 Call 0x1C17F20
	910 Call 0x1C17F20
	911 Call 0x1C17F20
	912 Call 0x1C17F20
	913 Move X22, X1
	914 Move X24, X0
	915 Move X27, 0x7BC000
	916 Move X21, 0x7EE000
	917 Move X27, [X27+3896]
	918 Move X21, [X21+2232]
	919 Move X23, [X31+16]
	920 NotImplemented "Instruction CMP not yet implemented."
	921 Call 0x3EB2AD0
	922 Move X22, [X0]
	923 Call 0x3EB2AE0
	924 Move X8, 0x7EE000
	925 Move X8, [X8+2560]
	926 Add X0, X31, 176
	927 Move X1, [X8]
	928 Call Enumerator<Object, Object>.Dispose, X0
	929 Compare X22, 0
	930 JumpIfEqual {681}
	931 Move X0, X22
	932 Call 0x1C17F18
	933 Move X19, X0
	934 Move X22, X31
	935 Move X19, X0
	936 Move X8, 0x7EE000
	937 Move X8, [X8+2560]
	938 Move X1, [X8]
	939 Add X0, X31, 176
	940 Call Enumerator<Object, Object>.Dispose, X0
	941 Compare X22, 0
	942 JumpIfEqual {964}
	943 Move X0, X22
	944 Call 0x1C17F18
	945 NotImplemented "Instruction CMP not yet implemented."
	946 Call 0x3EB2AD0
	947 Move X21, [X0]
	948 Call 0x3EB2AE0
	949 Move X1, [X28]
	950 Add X0, X31, 224
	951 Call Enumerator<Int32>.Dispose, X0
	952 Compare X21, 0
	953 JumpIfEqual {315}
	954 Move X0, X21
	955 Call 0x1C17F18
	956 Move X19, X0
	957 Move X21, X31
	958 Move X19, X0
	959 Move X1, [X28]
	960 Add X0, X31, 224
	961 Call Enumerator<Int32>.Dispose, X0
	962 Compare X21, 0
	963 JumpIfNotEqual {966}
	964 Move X0, X19
	965 Call 0x1D2D690
	966 Move X0, X21
	967 Call 0x1C17F18
	968 Call 0x1991590

Method: UnityEngine.ProBuilder.ActionResult Connect(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, out UnityEngine.ProBuilder.Face[] addedFaces, out UnityEngine.ProBuilder.Edge[] connections, System.Boolean returnFaces = False, System.Boolean returnEdges = False, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> faceMask = null)

Disassembly:
	0x039609B0 LDR X0, [X31 + 0x28]
	0x039609B4 MOV X1, X31
	0x039609B8 BL 0x3916198
	0x039609BC ADRP X23, 0x7EF000
	0x039609C0 LDR X23, [X23 + 0x8B8]
	0x039609C4 MOV X20, X0
	0x039609C8 LDR X8, [X23]
	0x039609CC LDR W9, [X8 + 0xE0]
	0x039609D0 CBNZ W9, 0x39609E0
	0x039609D4 MOV X0, X8
	0x039609D8 BL 0x1C16DFC
	0x039609DC LDR X8, [X23]
	0x039609E0 LDR X9, [X8 + 0xB8]
	0x039609E4 LDR X21, [X9 + 0x30]
	0x039609E8 CBNZ X21, 0x3960A40
	0x039609EC LDR W9, [X8 + 0xE0]
	0x039609F0 CBNZ W9, 0x3960A00
	0x039609F4 MOV X0, X8
	0x039609F8 BL 0x1C16DFC
	0x039609FC LDR X8, [X23]
	0x03960A00 ADRP X9, 0x7EF000
	0x03960A04 LDR X8, [X8 + 0xB8]
	0x03960A08 LDR X9, [X9 + 0x948]
	0x03960A0C LDR X22, [X8]
	0x03960A10 LDR X0, [X9]
	0x03960A14 BL 0x1C16F10
	0x03960A18 ADRP X8, 0x7EF000
	0x03960A1C LDR X8, [X8 + 0x9B8]
	0x03960A20 MOV X1, X22
	0x03960A24 MOV X3, X31
	0x03960A28 MOV X21, X0
	0x03960A2C LDR X2, [X8]
	0x03960A30 BL 0x2D30578
	0x03960A34 LDR X8, [X23]
	0x03960A38 LDR X8, [X8 + 0xB8]
	0x03960A3C STR X21, [X8 + 0x30]
	0x03960A40 ADRP X8, 0x7EF000
	0x03960A44 LDR X8, [X8 + 0x8F0]
	0x03960A48 MOV X0, X25
	0x03960A4C MOV X1, X21
	0x03960A50 LDR X2, [X8]
	0x03960A54 BL 0x21D0F68
	0x03960A58 ADRP X8, 0x7EF000
	0x03960A5C LDR X8, [X8 + 0x940]
	0x03960A60 MOV X21, X0
	0x03960A64 LDR X8, [X8]
	0x03960A68 MOV X0, X8
	0x03960A6C BL 0x1C16F10
	0x03960A70 ADRP X8, 0x7EF000
	0x03960A74 LDR X8, [X8 + 0x9C8]
	0x03960A78 MOV X1, X19
	0x03960A7C MOV X3, X31
	0x03960A80 MOV X22, X0
	0x03960A84 LDR X2, [X8]
	0x03960A88 BL 0x2D2C484
	0x03960A8C ADRP X8, 0x7EF000
	0x03960A90 LDR X8, [X8 + 0x900]
	0x03960A94 MOV X0, X21
	0x03960A98 MOV X1, X22
	0x03960A9C LDR X2, [X8]
	0x03960AA0 BL 0x21D9C14
	0x03960AA4 MOV X1, X20
	0x03960AA8 MOV X2, X31
	0x03960AAC BL 0x38FEBC8
	0x03960AB0 ADRP X8, 0x7EF000
	0x03960AB4 LDR X8, [X8 + 0x3D8]
	0x03960AB8 LDR X1, [X8]
	0x03960ABC BL 0x21C02A8
	0x03960AC0 LDR X8, [X23]
	0x03960AC4 MOV X19, X0
	0x03960AC8 LDR W9, [X8 + 0xE0]
	0x03960ACC CBNZ W9, 0x3960ADC
	0x03960AD0 MOV X0, X8
	0x03960AD4 BL 0x1C16DFC
	0x03960AD8 LDR X8, [X23]
	0x03960ADC LDR X9, [X8 + 0xB8]
	0x03960AE0 LDR X20, [X9 + 0x38]
	0x03960AE4 CBNZ X20, 0x3960B3C
	0x03960AE8 LDR W9, [X8 + 0xE0]
	0x03960AEC CBNZ W9, 0x3960AFC
	0x03960AF0 MOV X0, X8
	0x03960AF4 BL 0x1C16DFC
	0x03960AF8 LDR X8, [X23]
	0x03960AFC ADRP X9, 0x7EF000
	0x03960B00 LDR X8, [X8 + 0xB8]
	0x03960B04 LDR X9, [X9 + 0x430]
	0x03960B08 LDR X21, [X8]
	0x03960B0C LDR X0, [X9]
	0x03960B10 BL 0x1C16F10
	0x03960B14 ADRP X8, 0x7EF000
	0x03960B18 LDR X8, [X8 + 0x9C0]
	0x03960B1C MOV X1, X21
	0x03960B20 MOV X3, X31
	0x03960B24 MOV X20, X0
	0x03960B28 LDR X2, [X8]
	0x03960B2C BL 0x2D2C704
	0x03960B30 LDR X8, [X23]
	0x03960B34 LDR X8, [X8 + 0xB8]
	0x03960B38 STR X20, [X8 + 0x38]
	0x03960B3C ADRP X8, 0x7EF000
	0x03960B40 LDR X8, [X8 + 0x3E8]
	0x03960B44 MOV X0, X19
	0x03960B48 MOV X1, X20
	0x03960B4C LDR X2, [X8]
	0x03960B50 BL 0x21CCD80
	0x03960B54 ADRP X8, 0x7ED000
	0x03960B58 LDR X8, [X8 + 0xD40]
	0x03960B5C LDR X1, [X8]
	0x03960B60 BL 0x21D544C
	0x03960B64 LDR X8, [X31 + 0x20]
	0x03960B68 STR X0, [X8]
	0x03960B6C LDR W8, [X31 + 0x10]
	0x03960B70 TBZ X8, 0x0, 0x3960B90
	0x03960B74 CBZ X26, 0x3960CAC
	0x03960B78 ADRP X8, 0x7EE000
	0x03960B7C LDR X8, [X8 + 0xC38]
	0x03960B80 MOV X0, X26
	0x03960B84 LDR X1, [X8]
	0x03960B88 BL 0x301DDC4
	0x03960B8C B 0x3960B94
	0x03960B90 MOV X0, X31
	0x03960B94 LDR X8, [X31 + 0x18]
	0x03960B98 STR X0, [X8]
	0x03960B9C CBZ X25, 0x3960CAC
	0x03960BA0 ADRP X9, 0x793000
	0x03960BA4 LDR W8, [X25 + 0x18]
	0x03960BA8 LDR X9, [X9 + 0x758]
	0x03960BAC ADD X1, X31, 0x80
	0x03960BB0 CMP W8, 0x0
	0x03960BB4 LDR X0, [X9]
	0x03960BB8 CINC W8, W8, LT
	0x03960BBC SBFM W8, W8, 0x1, 0x1F
	0x03960BC0 STR W8, [X31 + 0x80]
	0x03960BC4 BL 0x1C16E04
	0x03960BC8 ADRP X8, 0x7EF000
	0x03960BCC LDR X8, [X8 + 0x9D8]
	0x03960BD0 MOV X1, X0
	0x03960BD4 MOV X2, X31
	0x03960BD8 LDR X8, [X8]
	0x03960BDC MOV X0, X8
	0x03960BE0 BL 0x321EFD0
	0x03960BE4 ADRP X8, 0x7ED000
	0x03960BE8 LDR X8, [X8 + 0x9D8]
	0x03960BEC MOV X20, X0
	0x03960BF0 LDR X8, [X8]
	0x03960BF4 MOV X0, X8
	0x03960BF8 BL 0x1C16F10
	0x03960BFC MOV W1, W31
	0x03960C00 MOV X2, X20
	0x03960C04 MOV X3, X31
	0x03960C08 MOV X19, X0
	0x03960C0C BL 0x38F6550
	0x03960C10 MOV X0, X19
	0x03960C14 LDP X20, X19, [X31 + 0x1A0]
	0x03960C18 LDP X22, X21, [X31 + 0x190]
	0x03960C1C LDP X24, X23, [X31 + 0x180]
	0x03960C20 LDP X26, X25, [X31 + 0x170]
	0x03960C24 LDP X28, X27, [X31 + 0x160]
	0x03960C28 LDP X29, X30, [X31 + 0x150]
	0x03960C2C LDP D9, D8, [X31 + 0x140]
	0x03960C30 LDR V10, [X31 + 0x130]
	0x03960C34 ADD X31, X31, 0x1B0
	0x03960C38 RET
	0x03960C3C LDR X8, [X31 + 0x20]
	0x03960C40 STR X31, [X8]
	0x03960C44 LDR X8, [X31 + 0x18]
	0x03960C48 STR X31, [X8]
	0x03960C4C ADRP X8, 0x7ED000
	0x03960C50 LDR X8, [X8 + 0x9D8]
	0x03960C54 LDR X0, [X8]
	0x03960C58 BL 0x1C16F10
	0x03960C5C ADRP X8, 0x7EF000
	0x03960C60 LDR X8, [X8 + 0x9E0]
	0x03960C64 MOV X19, X0
	0x03960C68 LDR X2, [X8]
	0x03960C6C MOVZ W1, 0x1
	0x03960C70 MOV X3, X31
	0x03960C74 BL 0x38F6550
	0x03960C78 ADRP X8, 0x7EF000
	0x03960C7C LDR X8, [X8 + 0x910]
	0x03960C80 ADD X0, X31, 0xE0
	0x03960C84 LDR X1, [X8]
	0x03960C88 BL 0x2C0A83C
	0x03960C8C B 0x3960C10
	0x03960C90 ADRP X8, 0x7EF000
	0x03960C94 LDR X8, [X8 + 0x910]
	0x03960C98 ADD X0, X31, 0xE0
	0x03960C9C LDR X1, [X8]
	0x03960CA0 BL 0x2C0A83C
	0x03960CA4 MOV X19, X31
	0x03960CA8 B 0x3960C10
	0x03960CAC BL 0x1C16F20
	0x03960CB0 BL 0x1C16F20
	0x03960CB4 BL 0x1C16F20
	0x03960CB8 BL 0x1C16F20
	0x03960CBC BL 0x1C16F20
	0x03960CC0 BL 0x1C16F20
	0x03960CC4 BL 0x1C16F20
	0x03960CC8 BL 0x1C16F20
	0x03960CCC BL 0x1C16F20
	0x03960CD0 BL 0x1C16F20
	0x03960CD4 BL 0x1C16F20
	0x03960CD8 BL 0x1C16F20
	0x03960CDC BL 0x1C16F20
	0x03960CE0 BL 0x1C16F20
	0x03960CE4 BL 0x1C16F20
	0x03960CE8 BL 0x1C16F20
	0x03960CEC BL 0x1C16F20
	0x03960CF0 BL 0x1C16F20
	0x03960CF4 BL 0x1C16F20
	0x03960CF8 BL 0x1C16F20
	0x03960CFC BL 0x1C16F20
	0x03960D00 MOV X19, X0
	0x03960D04 MOV X21, X31
	0x03960D08 ADRP X8, 0x7EF000
	0x03960D0C LDR X8, [X8 + 0x908]
	0x03960D10 LDR X1, [X8]
	0x03960D14 ADD X0, X31, 0xB0
	0x03960D18 BL 0x2BC434C
	0x03960D1C MOV X0, X19
	0x03960D20 CBZ X21, 0x3960E08
	0x03960D24 MOV X0, X21
	0x03960D28 BL 0x1C16F18
	0x03960D2C MOV X0, X21
	0x03960D30 BL 0x1C16F18
	0x03960D34 BL 0x1C16F20
	0x03960D38 BL 0x1C16F20
	0x03960D3C MOV X23, X1
	0x03960D40 MOV X19, X0
	0x03960D44 B 0x3960D08
	0x03960D48 B 0x3960E04
	0x03960D4C B 0x3960E04
	0x03960D50 B 0x3960E04
	0x03960D54 B 0x3960E04
	0x03960D58 B 0x3960E04
	0x03960D5C B 0x3960E04
	0x03960D60 B 0x3960E04
	0x03960D64 B 0x3960E04
	0x03960D68 B 0x3960E04
	0x03960D6C B 0x3960E04
	0x03960D70 B 0x3960E04
	0x03960D74 B 0x3960E04
	0x03960D78 B 0x3960E68
	0x03960D7C B 0x3960E04
	0x03960D80 B 0x3960DF4
	0x03960D84 B 0x3960E04
	0x03960D88 B 0x3960E04
	0x03960D8C B 0x3960E04
	0x03960D90 B 0x3960E04
	0x03960D94 B 0x3960E04
	0x03960D98 B 0x3960EE0
	0x03960D9C B 0x3960E04
	0x03960DA0 B 0x3960E04
	0x03960DA4 B 0x3960E04
	0x03960DA8 B 0x3960E04
	0x03960DAC B 0x3960E68
	0x03960DB0 B 0x3960E68
	0x03960DB4 B 0x3960E68
	0x03960DB8 B 0x3960E68
	0x03960DBC B 0x3960E68
	0x03960DC0 B 0x3960E68
	0x03960DC4 B 0x3960DF4
	0x03960DC8 B 0x3960EE0
	0x03960DCC B 0x3960DF4
	0x03960DD0 B 0x3960EE0
	0x03960DD4 B 0x3960E04
	0x03960DD8 B 0x3960E04
	0x03960DDC B 0x3960E04
	0x03960DE0 B 0x3960E04
	0x03960DE4 B 0x3960E04
	0x03960DE8 B 0x3960E68
	0x03960DEC B 0x3960E68
	0x03960DF0 B 0x3960E68
	0x03960DF4 ADRP X24, 0x7EF000
	0x03960DF8 LDR X29, [X31 + 0x38]
	0x03960DFC LDR X24, [X24 + 0x920]
	0x03960E00 B 0x3960EE0
	0x03960E04 MOV X23, X1
	0x03960E08 CMP W23, 0x1
	0x03960E0C B.NE 0x3960E38
	0x03960E10 BL 0x3EB1AD0
	0x03960E14 LDR X19, [X0]
	0x03960E18 BL 0x3EB1AE0
	0x03960E1C ADRP X8, 0x7EF000
	0x03960E20 LDR X8, [X8 + 0x910]
	0x03960E24 ADD X0, X31, 0xE0
	0x03960E28 LDR X1, [X8]
	0x03960E2C BL 0x2C0A83C
	0x03960E30 CBZ X19, 0x3960744
	0x03960E34 B 0x3960F10
	0x03960E38 MOV X21, X0
	0x03960E3C MOV X19, X31
	0x03960E40 B 0x3960E48
	0x03960E44 MOV X21, X0
	0x03960E48 ADRP X8, 0x7EF000
	0x03960E4C LDR X8, [X8 + 0x910]
	0x03960E50 LDR X1, [X8]
	0x03960E54 ADD X0, X31, 0xE0
	0x03960E58 BL 0x2C0A83C
	0x03960E5C CBZ X19, 0x3960F40
	0x03960E60 MOV X0, X19
	0x03960E64 BL 0x1C16F18
	0x03960E68 ADRP X24, 0x7EF000
	0x03960E6C ADRP X25, 0x7EE000
	0x03960E70 LDR X29, [X31 + 0x38]
	0x03960E74 LDR X24, [X24 + 0x920]
	0x03960E78 LDR X25, [X25 + 0xB00]
	0x03960E7C CMP W1, 0x1
	0x03960E80 B.NE 0x3960EB0
	0x03960E84 BL 0x3EB1AD0
	0x03960E88 LDR X20, [X0]
	0x03960E8C BL 0x3EB1AE0
	0x03960E90 ADRP X8, 0x7EE000
	0x03960E94 LDR X8, [X8 + 0xD98]
	0x03960E98 ADD X0, X31, 0x110
	0x03960E9C LDR X1, [X8]
	0x03960EA0 BL 0x2BC434C
	0x03960EA4 CBZ X20, 0x3960008
	0x03960EA8 MOV X0, X20
	0x03960EAC BL 0x1C16F18
	0x03960EB0 MOV X21, X0
	0x03960EB4 MOV X20, X31
	0x03960EB8 B 0x3960EC0
	0x03960EBC MOV X21, X0
	0x03960EC0 ADRP X8, 0x7EE000
	0x03960EC4 LDR X8, [X8 + 0xD98]
	0x03960EC8 LDR X1, [X8]
	0x03960ECC ADD X0, X31, 0x110
	0x03960ED0 BL 0x2BC434C
	0x03960ED4 CBZ X20, 0x3960F40
	0x03960ED8 MOV X0, X20
	0x03960EDC BL 0x1C16F18
	0x03960EE0 LDR X20, [X31 + 0x28]
	0x03960EE4 CMP W1, 0x1
	0x03960EE8 B.NE 0x3960F18
	0x03960EEC BL 0x3EB1AD0
	0x03960EF0 LDR X19, [X0]
	0x03960EF4 BL 0x3EB1AE0
	0x03960EF8 ADRP X8, 0x7EF000
	0x03960EFC LDR X8, [X8 + 0x910]
	0x03960F00 ADD X0, X31, 0xE0
	0x03960F04 LDR X1, [X8]
	0x03960F08 BL 0x2C0A83C
	0x03960F0C CBZ X19, 0x3960100
	0x03960F10 MOV X0, X19
	0x03960F14 BL 0x1C16F18
	0x03960F18 MOV X21, X0
	0x03960F1C MOV X19, X31
	0x03960F20 B 0x3960F28
	0x03960F24 MOV X21, X0
	0x03960F28 ADRP X8, 0x7EF000
	0x03960F2C LDR X8, [X8 + 0x910]
	0x03960F30 LDR X1, [X8]
	0x03960F34 ADD X0, X31, 0xE0
	0x03960F38 BL 0x2C0A83C
	0x03960F3C CBNZ X19, 0x3960F48
	0x03960F40 MOV X0, X21
	0x03960F44 BL 0x1D2C690
	0x03960F48 MOV X0, X19
	0x03960F4C BL 0x1C16F18
	0x03960F50 BL 0x1990590
	0x03960F54 SUB X31, X31, 0x50
	0x03960F58 STR X30, [X31 + 0x20]
	0x03960F5C STP X22, X21, [X31 + 0x30]
	0x03960F60 STP X20, X19, [X31 + 0x40]
	0x03960F64 ADRP X22, 0xA81000
	0x03960F68 ADRP X21, 0x7EF000
	0x03960F6C LDRB W8, [X22 + 0x9AF]
	0x03960F70 LDR X21, [X21 + 0x9E8]
	0x03960F74 MOV X19, X1
	0x03960F78 MOV X20, X0
	0x03960F7C TBNZ X8, 0x0, 0x3960F94
	0x03960F80 ADRP X0, 0x7EF000
	0x03960F84 LDR X0, [X0 + 0x9E8]
	0x03960F88 BL 0x1C16CF4
	0x03960F8C MOVZ W8, 0x1
	0x03960F90 STRB W8, [X22 + 0x9AF]
	0x03960F94 ADD X2, X31, 0x8
	0x03960F98 ADD X3, X31, 0x28
	0x03960F9C MOVZ W4, 0x1
	0x03960FA0 MOVZ W5, 0x1
	0x03960FA4 MOV X0, X20
	0x03960FA8 MOV X1, X19
	0x03960FAC MOV X6, X31
	0x03960FB0 STR X31, [X31 + 0x28]
	0x03960FB4 STR X31, [X31 + 0x8]
	0x03960FB8 BL 0x395F9B0
	0x03960FBC LDR X1, [X31 + 0x8]
	0x03960FC0 LDR X2, [X31 + 0x28]
	0x03960FC4 LDR X3, [X21]
	0x03960FC8 ADD X0, X31, 0x10
	0x03960FCC STP X31, X31, [X31 + 0x10]
	0x03960FD0 BL 0x25E6D3C
	0x03960FD4 LDP X0, X1, [X31 + 0x10]
	0x03960FD8 LDP X20, X19, [X31 + 0x40]
	0x03960FDC LDP X22, X21, [X31 + 0x30]
	0x03960FE0 LDR X30, [X31 + 0x20]
	0x03960FE4 ADD X31, X31, 0x50
	0x03960FE8 RET
	0x03960FEC SUB X31, X31, 0x160
	0x03960FF0 STP X29, X30, [X31 + 0x100]
	0x03960FF4 STP X28, X27, [X31 + 0x110]
	0x03960FF8 STP X26, X25, [X31 + 0x120]
	0x03960FFC STP X24, X23, [X31 + 0x130]
	0x03961000 STP X22, X21, [X31 + 0x140]
	0x03961004 STP X20, X19, [X31 + 0x150]
	0x03961008 ADRP X22, 0xA80000
	0x0396100C ADRP X19, 0x7EE000
	0x03961010 LDRB W8, [X22 + 0x9B0]
	0x03961014 LDR X19, [X19 + 0x9F0]
	0x03961018 MOV X20, X1
	0x0396101C MOV X21, X0
	0x03961020 TBNZ X8, 0x0, 0x3961284
	0x03961024 ADRP X0, 0x7EE000
	0x03961028 LDR X0, [X0 + 0x540]
	0x0396102C BL 0x1C16CF4
	0x03961030 ADRP X0, 0x7EE000
	0x03961034 LDR X0, [X0 + 0x9F8]
	0x03961038 BL 0x1C16CF4
	0x0396103C ADRP X0, 0x7EE000
	0x03961040 LDR X0, [X0 + 0x578]
	0x03961044 BL 0x1C16CF4
	0x03961048 ADRP X0, 0x7EC000
	0x0396104C LDR X0, [X0 + 0xC80]
	0x03961050 BL 0x1C16CF4
	0x03961054 ADRP X0, 0x7EE000
	0x03961058 LDR X0, [X0 + 0x5A0]
	0x0396105C BL 0x1C16CF4
	0x03961060 ADRP X0, 0x7EE000
	0x03961064 LDR X0, [X0 + 0x8F8]
	0x03961068 BL 0x1C16CF4
	0x0396106C ADRP X0, 0x7ED000
	0x03961070 LDR X0, [X0 + 0x698]
	0x03961074 BL 0x1C16CF4
	0x03961078 ADRP X0, 0x7ED000
	0x0396107C LDR X0, [X0 + 0x808]
	0x03961080 BL 0x1C16CF4
	0x03961084 ADRP X0, 0x794000
	0x03961088 LDR X0, [X0 + 0x9C8]
	0x0396108C BL 0x1C16CF4
	0x03961090 ADRP X0, 0x7EE000
	0x03961094 LDR X0, [X0 + 0xA00]
	0x03961098 BL 0x1C16CF4
	0x0396109C ADRP X0, 0x7EE000
	0x039610A0 LDR X0, [X0 + 0x908]
	0x039610A4 BL 0x1C16CF4
	0x039610A8 ADRP X0, 0x799000
	0x039610AC LDR X0, [X0 + 0x830]
	0x039610B0 BL 0x1C16CF4
	0x039610B4 ADRP X0, 0x799000
	0x039610B8 LDR X0, [X0 + 0x838]
	0x039610BC BL 0x1C16CF4
	0x039610C0 ADRP X0, 0x7EE000
	0x039610C4 LDR X0, [X0 + 0x918]
	0x039610C8 BL 0x1C16CF4
	0x039610CC ADRP X0, 0x7EE000
	0x039610D0 LDR X0, [X0 + 0xA08]
	0x039610D4 BL 0x1C16CF4
	0x039610D8 ADRP X0, 0x799000
	0x039610DC LDR X0, [X0 + 0x840]
	0x039610E0 BL 0x1C16CF4
	0x039610E4 ADRP X0, 0x7EE000
	0x039610E8 LDR X0, [X0 + 0xA10]
	0x039610EC BL 0x1C16CF4
	0x039610F0 ADRP X0, 0x7EE000
	0x039610F4 LDR X0, [X0 + 0x930]
	0x039610F8 BL 0x1C16CF4
	0x039610FC ADRP X0, 0x794000
	0x03961100 LDR X0, [X0 + 0x9D0]
	0x03961104 BL 0x1C16CF4
	0x03961108 ADRP X0, 0x7EE000
	0x0396110C LDR X0, [X0 + 0x938]
	0x03961110 BL 0x1C16CF4
	0x03961114 ADRP X0, 0x7ED000
	0x03961118 LDR X0, [X0 + 0x510]
	0x0396111C BL 0x1C16CF4
	0x03961120 ADRP X0, 0x794000
	0x03961124 LDR X0, [X0 + 0x9D8]
	0x03961128 BL 0x1C16CF4
	0x0396112C ADRP X0, 0x793000
	0x03961130 LDR X0, [X0 + 0xDF8]
	0x03961134 BL 0x1C16CF4
	0x03961138 ADRP X0, 0x799000
	0x0396113C LDR X0, [X0 + 0x848]
	0x03961140 BL 0x1C16CF4
	0x03961144 ADRP X0, 0x799000
	0x03961148 LDR X0, [X0 + 0x680]
	0x0396114C BL 0x1C16CF4
	0x03961150 ADRP X0, 0x793000
	0x03961154 LDR X0, [X0 + 0xE00]
	0x03961158 BL 0x1C16CF4
	0x0396115C ADRP X0, 0x799000
	0x03961160 LDR X0, [X0 + 0x688]
	0x03961164 BL 0x1C16CF4
	0x03961168 ADRP X0, 0x793000
	0x0396116C LDR X0, [X0 + 0xE08]
	0x03961170 BL 0x1C16CF4
	0x03961174 ADRP X0, 0x7EE000
	0x03961178 LDR X0, [X0 + 0xA18]
	0x0396117C BL 0x1C16CF4
	0x03961180 ADRP X0, 0x7EE000
	0x03961184 LDR X0, [X0 + 0xA20]
	0x03961188 BL 0x1C16CF4
	0x0396118C ADRP X0, 0x7EE000
	0x03961190 LDR X0, [X0 + 0x970]
	0x03961194 BL 0x1C16CF4
	0x03961198 ADRP X0, 0x7EC000
	0x0396119C LDR X0, [X0 + 0xE10]
	0x039611A0 BL 0x1C16CF4
	0x039611A4 ADRP X0, 0x7EE000
	0x039611A8 LDR X0, [X0 + 0x980]
	0x039611AC BL 0x1C16CF4
	0x039611B0 ADRP X0, 0x7ED000
	0x039611B4 LDR X0, [X0 + 0xA38]
	0x039611B8 BL 0x1C16CF4
	0x039611BC ADRP X0, 0x7EE000
	0x039611C0 LDR X0, [X0 + 0x988]
	0x039611C4 BL 0x1C16CF4
	0x039611C8 ADRP X0, 0x7EC000
	0x039611CC LDR X0, [X0 + 0xDE0]
	0x039611D0 BL 0x1C16CF4
	0x039611D4 ADRP X0, 0x7EE000
	0x039611D8 LDR X0, [X0 + 0x990]
	0x039611DC BL 0x1C16CF4
	0x039611E0 ADRP X0, 0x793000
	0x039611E4 LDR X0, [X0 + 0xE28]
	0x039611E8 BL 0x1C16CF4
	0x039611EC ADRP X0, 0x7BC000
	0x039611F0 LDR X0, [X0 + 0xF38]
	0x039611F4 BL 0x1C16CF4
	0x039611F8 ADRP X0, 0x7EE000
	0x039611FC LDR X0, [X0 + 0x998]
	0x03961200 BL 0x1C16CF4
	0x03961204 ADRP X0, 0x7EE000
	0x03961208 LDR X0, [X0 + 0x9A0]
	0x0396120C BL 0x1C16CF4
	0x03961210 ADRP X0, 0x7EC000
	0x03961214 LDR X0, [X0 + 0xDE8]
	0x03961218 BL 0x1C16CF4
	0x0396121C ADRP X0, 0x7EC000
	0x03961220 LDR X0, [X0 + 0xDF0]
	0x03961224 BL 0x1C16CF4
	0x03961228 ADRP X0, 0x792000
	0x0396122C LDR X0, [X0 + 0x598]
	0x03961230 BL 0x1C16CF4
	0x03961234 ADRP X0, 0x7EE000
	0x03961238 LDR X0, [X0 + 0xA28]
	0x0396123C BL 0x1C16CF4
	0x03961240 ADRP X0, 0x7EE000
	0x03961244 LDR X0, [X0 + 0xA30]
	0x03961248 BL 0x1C16CF4
	0x0396124C ADRP X0, 0x7EE000
	0x03961250 LDR X0, [X0 + 0xA38]
	0x03961254 BL 0x1C16CF4
	0x03961258 ADRP X0, 0x7EE000
	0x0396125C LDR X0, [X0 + 0xA40]
	0x03961260 BL 0x1C16CF4
	0x03961264 ADRP X0, 0x7EE000
	0x03961268 LDR X0, [X0 + 0x9F0]
	0x0396126C BL 0x1C16CF4
	0x03961270 ADRP X0, 0x7EE000
	0x03961274 LDR X0, [X0 + 0x8B8]
	0x03961278 BL 0x1C16CF4
	0x0396127C MOVZ W8, 0x1
	0x03961280 STRB W8, [X22 + 0x9B0]
	0x03961284 LDR X0, [X19]
	0x03961288 MOVI V0.2D, 0x0
	0x0396128C STP X31, X31, [X31 + 0xE0]
	0x03961290 STR X31, [X31 + 0xF0]
	0x03961294 STR X31, [X31 + 0xD0]
	0x03961298 STP V0, V0, [X31 + 0xB0]
	0x0396129C STP X31, X31, [X31 + 0x90]
	0x039612A0 STR X31, [X31 + 0xA0]
	0x039612A4 BL 0x1C16F10
	0x039612A8 MOV X1, X31
	0x039612AC MOV X19, X0
	0x039612B0 BL 0x33BDD8C
	0x039612B4 CBZ X19, 0x3961C5C
	0x039612B8 ADRP X8, 0x792000
	0x039612BC LDR X8, [X8 + 0x598]
	0x039612C0 STR X21, [X19 + 0x18]
	0x039612C4 LDR X0, [X8]
	0x039612C8 LDR W8, [X0 + 0xE0]
	0x039612CC CBNZ W8, 0x39612D4
	0x039612D0 BL 0x1C16DFC
	0x039612D4 MOV X0, X21
	0x039612D8 MOV X1, X31
	0x039612DC MOV X2, X31
	0x039612E0 BL 0x3C3883C
	0x039612E4 TBNZ X0, 0x0, 0x3961CB0
	0x039612E8 CBZ X20, 0x3961CD0
	0x039612EC LDR X0, [X19 + 0x18]
	0x039612F0 CBZ X0, 0x3961C5C
	0x039612F4 LDR X8, [X0 + 0x30]
	0x039612F8 CBZ X8, 0x3961C5C
	0x039612FC ADRP X23, 0x794000
	0x03961300 ADRP X21, 0x7EE000
	0x03961304 ADRP X22, 0x7ED000
	0x03961308 LDR X23, [X23 + 0x9D0]
	0x0396130C LDR X21, [X21 + 0xA38]
	0x03961310 LDR X22, [X22 + 0x808]
	0x03961314 LDR W8, [X8 + 0x18]
	0x03961318 ADRP X25, 0x793000
	0x0396131C ADRP X26, 0x793000
	0x03961320 ADRP X24, 0x799000
	0x03961324 STR W8, [X31 + 0xC]
	0x03961328 LDR X25, [X25 + 0xE08]
	0x0396132C LDR X26, [X26 + 0xE00]
	0x03961330 LDR X24, [X24 + 0x688]
	0x03961334 MOV X1, X31
	0x03961338 BL 0x3916198
	0x0396133C STR X0, [X19 + 0x10]
	0x03961340 LDR X0, [X23]
	0x03961344 BL 0x1C16F10
	0x03961348 LDR X2, [X21]
	0x0396134C MOV X1, X19
	0x03961350 MOV X3, X31
	0x03961354 MOV X21, X0
	0x03961358 BL 0x2D2CF74
	0x0396135C LDR X2, [X22]
	0x03961360 MOV X0, X20
	0x03961364 MOV X1, X21
	0x03961368 BL 0x21CD49C
	0x0396136C LDR X8, [X25]
	0x03961370 MOV X20, X0
	0x03961374 MOV X0, X8
	0x03961378 BL 0x1C16F10
	0x0396137C LDR X2, [X26]
	0x03961380 MOV X1, X20
	0x03961384 MOV X21, X0
	0x03961388 BL 0x2DA9FD8
	0x0396138C LDR X0, [X25]
	0x03961390 BL 0x1C16F10
	0x03961394 LDR X1, [X24]
	0x03961398 MOV X20, X0
	0x0396139C BL 0x2DA9EF4
	0x039613A0 CBZ X21, 0x3961C5C
	0x039613A4 ADRP X8, 0x799000
	0x039613A8 LDR X8, [X8 + 0x848]
	0x039613AC ADRP X24, 0x799000
	0x039613B0 ADRP X23, 0x799000
	0x039613B4 ADRP X27, 0x7EE000
	0x039613B8 ADRP X25, 0x7EE000
	0x039613BC ADRP X22, 0x7EC000
	0x039613C0 ADRP X29, 0x7EE000
	0x039613C4 LDR X24, [X24 + 0x838]
	0x039613C8 LDR X23, [X23 + 0x680]
	0x039613CC LDR X27, [X27 + 0x5A0]
	0x039613D0 LDR X25, [X25 + 0x578]
	0x039613D4 LDR X22, [X22 + 0xDE0]
	0x039613D8 LDR X29, [X29 + 0x998]
	0x039613DC LDR X1, [X8]
	0x039613E0 ADRP X26, 0x7EE000
	0x039613E4 ADRP X28, 0x799000
	0x039613E8 LDR X26, [X26 + 0x540]
	0x039613EC LDR X28, [X28 + 0x830]
	0x039613F0 ADD X8, X31, 0x60
	0x039613F4 MOV X0, X21
	0x039613F8 BL 0x2DAAA30
	0x039613FC LDR V0, [X31 + 0x6]
	0x03961400 LDR X8, [X31 + 0x70]
	0x03961404 STR V0, [X31 + 0xE]
	0x03961408 STR X8, [X31 + 0xF0]
	0x0396140C LDR X1, [X24]
	0x03961410 ADD X0, X31, 0xE0
	0x03961414 BL 0x2BBDA6C
	0x03961418 TBZ X0, 0x0, 0x3961460
	0x0396141C LDR X8, [X19 + 0x18]
	0x03961420 CBZ X8, 0x3961C6C
	0x03961424 LDR X8, [X8 + 0x30]
	0x03961428 CBZ X8, 0x3961C70
	0x0396142C LDRSW X9, [X31 + 0xF0]
	0x03961430 LDR W10, [X8 + 0x18]
	0x03961434 CMP W9, W10
	0x03961438 B.CS 0x3961C74
	0x0396143C ADD X8, X8, X9, 0x3, LSL
	0x03961440 LDR X8, [X8 + 0x20]
	0x03961444 CBZ X8, 0x3961C64
	0x03961448 CBZ X20, 0x3961C68
	0x0396144C LDR X1, [X8 + 0x10]
	0x03961450 LDR X2, [X23]
	0x03961454 MOV X0, X20
	0x03961458 BL 0x2DAB04C
	0x0396145C B 0x396140C
	0x03961460 LDR X1, [X28]
	0x03961464 ADD X0, X31, 0xE0
	0x03961468 BL 0x2BBDA68
	0x0396146C LDR X0, [X27]
	0x03961470 BL 0x1C16F10
	0x03961474 LDR X1, [X25]
	0x03961478 MOV X25, X0
	0x0396147C BL 0x2AA4804
	0x03961480 LDR X0, [X19 + 0x18]
	0x03961484 CBZ X0, 0x3961C5C
	0x03961488 MOV X1, X31
	0x0396148C MOV X2, X31
	0x03961490 BL 0x3912114
	0x03961494 ADRP X8, 0x7EC000
	0x03961498 LDR X8, [X8 + 0xDE8]
	0x0396149C MOV X23, X0
	0x039614A0 LDR X8, [X8]
	0x039614A4 MOV X0, X8
	0x039614A8 BL 0x1C16F10
	0x039614AC LDR X2, [X22]
	0x039614B0 MOV X1, X23
	0x039614B4 STR X0, [X31 + 0x18]
	0x039614B8 BL 0x301B8E0
	0x039614BC LDR X8, [X19 + 0x18]
	0x039614C0 CBZ X8, 0x3961C5C
	0x039614C4 LDR X27, [X8 + 0x28]
	0x039614C8 CBZ X27, 0x3961C5C
	0x039614CC LDR W8, [X27 + 0x18]
	0x039614D0 CMP W8, 0x1
	0x039614D4 B.LT 0x3961584
	0x039614D8 MOV W28, W31
	0x039614DC CMP W28, W8
	0x039614E0 B.CS 0x3961C60
	0x039614E4 ADD X8, X27, W28, 0x3, SXTW
	0x039614E8 LDR X23, [X8 + 0x20]
	0x039614EC CBZ X23, 0x3961C5C
	0x039614F0 MOV X0, X23
	0x039614F4 MOV X1, X31
	0x039614F8 BL 0x38FF530
	0x039614FC CBZ X0, 0x3961C5C
	0x03961500 LDR X8, [X0 + 0x18]
	0x03961504 MOV X24, X0
	0x03961508 CMP W8, 0x1
	0x0396150C B.LT 0x3961574
	0x03961510 MOV X21, X31
	0x03961514 AND X8, X8, 0x0
	0x03961518 ADD X22, X24, 0x20
	0x0396151C CMP X21, W8, UXTW
	0x03961520 B.CS 0x3961C60
	0x03961524 CBZ X20, 0x3961C5C
	0x03961528 ADRP X8, 0x793000
	0x0396152C LDR W1, [X22, X21, LSL #2]
	0x03961530 LDR X8, [X8 + 0xDF8]
	0x03961534 MOV X0, X20
	0x03961538 LDR X2, [X8]
	0x0396153C BL 0x2DAA59C
	0x03961540 TBZ X0, 0x0, 0x3961564
	0x03961544 LDR W8, [X24 + 0x18]
	0x03961548 CMP X21, X8
	0x0396154C B.CS 0x3961C60
	0x03961550 LDR W2, [X22, X21, LSL #2]
	0x03961554 LDR X3, [X26]
	0x03961558 MOV X0, X25
	0x0396155C MOV X1, X23
	0x03961560 BL 0x217D394
	0x03961564 LDR W8, [X24 + 0x18]
	0x03961568 ADD X21, X21, 0x1
	0x0396156C CMP X21, W8, SXTW
	0x03961570 B.LT 0x396151C
	0x03961574 LDR W8, [X27 + 0x18]
	0x03961578 ADD W28, W28, 0x1
	0x0396157C CMP W28, W8
	0x03961580 B.LT 0x39614DC
	0x03961584 ADRP X8, 0x7EE000
	0x03961588 LDR X8, [X8 + 0x9A0]
	0x0396158C LDR X0, [X8]
	0x03961590 BL 0x1C16F10
	0x03961594 ADRP X8, 0x7EE000
	0x03961598 LDR X8, [X8 + 0x988]
	0x0396159C MOV X20, X0
	0x039615A0 LDR X1, [X8]
	0x039615A4 BL 0x301B7C4
	0x039615A8 ADRP X8, 0x7EC000
	0x039615AC LDR X8, [X8 + 0xDF0]
	0x039615B0 LDR X0, [X8]
	0x039615B4 BL 0x1C16F10
	0x039615B8 ADRP X8, 0x7ED000
	0x039615BC LDR X8, [X8 + 0xA38]
	0x039615C0 STR X0, [X31 + 0x10]
	0x039615C4 LDR X1, [X8]
	0x039615C8 BL 0x301B7C4
	0x039615CC LDR X8, [X19 + 0x18]
	0x039615D0 CBZ X8, 0x3961C5C
	0x039615D4 ADRP X21, 0x7EE000
	0x039615D8 LDR X21, [X21 + 0x8B8]
	0x039615DC ADRP X23, 0x7EE000
	0x039615E0 LDR X24, [X8 + 0x28]
	0x039615E4 LDR W22, [X31 + 0xC]
	0x039615E8 LDR X0, [X21]
	0x039615EC LDR W9, [X0 + 0xE0]
	0x039615F0 LDR X23, [X23 + 0xA08]
	0x039615F4 CBNZ W9, 0x3961600
	0x039615F8 BL 0x1C16DFC
	0x039615FC LDR X0, [X21]
	0x03961600 LDR X8, [X0 + 0xB8]
	0x03961604 LDR X26, [X8 + 0x10]
	0x03961608 CBNZ X26, 0x3961670
	0x0396160C LDR W8, [X0 + 0xE0]
	0x03961610 CBZ W8, 0x3961620
	0x03961614 ADRP X21, 0x7EE000
	0x03961618 LDR X21, [X21 + 0x8B8]
	0x0396161C B 0x3961630
	0x03961620 BL 0x1C16DFC
	0x03961624 ADRP X21, 0x7EE000
	0x03961628 LDR X21, [X21 + 0x8B8]
	0x0396162C LDR X0, [X21]
	0x03961630 ADRP X9, 0x7ED000
	0x03961634 LDR X8, [X0 + 0xB8]
	0x03961638 LDR X9, [X9 + 0x510]
	0x0396163C LDR X27, [X8]
	0x03961640 LDR X0, [X9]
	0x03961644 BL 0x1C16F10
	0x03961648 ADRP X8, 0x7EE000
	0x0396164C LDR X8, [X8 + 0xA28]
	0x03961650 MOV X1, X27
	0x03961654 MOV X3, X31
	0x03961658 MOV X26, X0
	0x0396165C LDR X2, [X8]
	0x03961660 BL 0x2D30128
	0x03961664 LDR X8, [X21]
	0x03961668 LDR X8, [X8 + 0xB8]
	0x0396166C STR X26, [X8 + 0x10]
	0x03961670 ADRP X8, 0x7ED000
	0x03961674 LDR X8, [X8 + 0x698]
	0x03961678 MOV X0, X24
	0x0396167C MOV X1, X26
	0x03961680 LDR X2, [X8]
	0x03961684 BL 0x21CEC3C
	0x03961688 ADRP X8, 0x793000
	0x0396168C LDR X8, [X8 + 0xE08]
	0x03961690 MOV X26, X0
	0x03961694 LDR X8, [X8]
	0x03961698 MOV X0, X8
	0x0396169C BL 0x1C16F10
	0x039616A0 ADRP X8, 0x793000
	0x039616A4 LDR X8, [X8 + 0xE00]
	0x039616A8 MOV X1, X26
	0x039616AC MOV X24, X0
	0x039616B0 LDR X2, [X8]
	0x039616B4 BL 0x2DA9FD8
	0x039616B8 CBZ X25, 0x3961C5C
	0x039616BC ADRP X8, 0x7EE000
	0x039616C0 LDR X8, [X8 + 0x9F8]
	0x039616C4 MOV X0, X25
	0x039616C8 LDR X1, [X8]
	0x039616CC ADD X8, X31, 0x60
	0x039616D0 BL 0x2AA54BC
	0x039616D4 LDP V0, V1, [X31 + 0x60]
	0x039616D8 LDR X8, [X31 + 0x80]
	0x039616DC MOVZ W25, 0x1
	0x039616E0 STP V0, V1, [X31 + 0xB0]
	0x039616E4 STR X8, [X31 + 0xD0]
	0x039616E8 LDR X1, [X23]
	0x039616EC ADD X0, X31, 0xB0
	0x039616F0 BL 0x2C0A728
	0x039616F4 TBZ X0, 0x0, 0x39619B0
	0x039616F8 LDR X27, [X31 + 0xC8]
	0x039616FC CBZ X27, 0x3961C78
	0x03961700 LDR W8, [X27 + 0x18]
	0x03961704 LDR X26, [X31 + 0xC0]
	0x03961708 CMP W8, 0x2
	0x0396170C B.NE 0x3961760
	0x03961710 ADRP X21, 0x7BC000
	0x03961714 LDR X21, [X21 + 0xF38]
	0x03961718 LDR X2, [X21]
	0x0396171C MOV X0, X27
	0x03961720 MOV W1, W31
	0x03961724 BL 0x2FDC41C
	0x03961728 LDR X2, [X21]
	0x0396172C MOV W28, W0
	0x03961730 MOVZ W1, 0x1
	0x03961734 MOV X0, X27
	0x03961738 BL 0x2FDC41C
	0x0396173C LDR X4, [X19 + 0x10]
	0x03961740 MOV W2, W0
	0x03961744 LDR X3, [X31 + 0x18]
	0x03961748 MOV X0, X26
	0x0396174C MOV W1, W28
	0x03961750 BL 0x396289C
	0x03961754 MOV X27, X0
	0x03961758 CBZ X27, 0x39616E8
	0x0396175C B 0x3961784
	0x03961760 LDR X3, [X19 + 0x10]
	0x03961764 LDR X2, [X31 + 0x18]
	0x03961768 MOV X0, X26
	0x0396176C MOV X1, X27
	0x03961770 MOV W4, W22
	0x03961774 BL 0x3961E74
	0x03961778 MOV X27, X0
	0x0396177C ADD W22, W22, 0x1
	0x03961780 CBZ X27, 0x39616E8
	0x03961784 CBZ X26, 0x3961D18
	0x03961788 LDR W8, [X26 + 0x54]
	0x0396178C TBZ X8, 0x1F, 0x39617D0
	0x03961790 CBZ X24, 0x3961D30
	0x03961794 ADRP X8, 0x793000
	0x03961798 LDR X8, [X8 + 0xDF8]
	0x0396179C LDR X2, [X8]
	0x039617A0 MOV X0, X24
	0x039617A4 MOV W1, W25
	0x039617A8 BL 0x2DAA59C
	0x039617AC TBZ X0, 0x0, 0x39617B8
	0x039617B0 ADD W25, W25, 0x1
	0x039617B4 B 0x3961794
	0x039617B8 ADRP X8, 0x794000
	0x039617BC LDR X8, [X8 + 0x9D8]
	0x039617C0 LDR X2, [X8]
	0x039617C4 MOV X0, X24
	0x039617C8 MOV W1, W25
	0x039617CC BL 0x2DAB03C
	0x039617D0 ADRP X8, 0x7EE000
	0x039617D4 LDR X8, [X8 + 0x980]
	0x039617D8 MOV W23, W22
	0x039617DC LDR X1, [X8]
	0x039617E0 ADD X8, X31, 0x60
	0x039617E4 MOV X0, X27
	0x039617E8 BL 0x301CB58
	0x039617EC LDR V0, [X31 + 0x6]
	0x039617F0 LDR X8, [X31 + 0x70]
	0x039617F4 ADD X28, X26, 0x1C
	0x039617F8 STR V0, [X31 + 0x9]
	0x039617FC STR X8, [X31 + 0xA0]
	0x03961800 ADRP X8, 0x7EE000
	0x03961804 LDR X8, [X8 + 0x918]
	0x03961808 LDR X1, [X8]
	0x0396180C ADD X0, X31, 0x90
	0x03961810 BL 0x2BC4350
	0x03961814 TBZ X0, 0x0, 0x396189C
	0x03961818 LDR X21, [X31 + 0xA0]
	0x0396181C CBZ X21, 0x396196C
	0x03961820 LDR X8, [X21 + 0x10]
	0x03961824 CBZ X8, 0x3961974
	0x03961828 LDR X22, [X8 + 0x10]
	0x0396182C CBZ X22, 0x396195C
	0x03961830 LDR W8, [X26 + 0x54]
	0x03961834 MOVI V2.2D, 0x0
	0x03961838 CMP W8, 0x0
	0x0396183C CSEL W8, W25, W8, LT
	0x03961840 STR W8, [X22 + 0x54]
	0x03961844 LDP V1, V0, [X28]
	0x03961848 STP V2, V2, [X31 + 0x40]
	0x0396184C STP V1, V0, [X31 + 0x60]
	0x03961850 STP V1, V0, [X31 + 0x20]
	0x03961854 ADD X0, X31, 0x40
	0x03961858 ADD X1, X31, 0x20
	0x0396185C MOV X2, X31
	0x03961860 BL 0x38F69EC
	0x03961864 LDP V1, V0, [X31 + 0x40]
	0x03961868 STUR V0, [X22 + 0x2C]
	0x0396186C STUR V1, [X22 + 0x1C]
	0x03961870 LDR X8, [X21 + 0x10]
	0x03961874 CBZ X8, 0x3961964
	0x03961878 LDR X8, [X8 + 0x10]
	0x0396187C CBZ X8, 0x3961954
	0x03961880 LDR W9, [X26 + 0x18]
	0x03961884 STR W9, [X8 + 0x18]
	0x03961888 LDRB W9, [X26 + 0x4C]
	0x0396188C STRB W9, [X8 + 0x4C]
	0x03961890 LDR W9, [X26 + 0x48]
	0x03961894 STR W9, [X8 + 0x48]
	0x03961898 B 0x3961800
	0x0396189C MOV X28, X31
	0x039618A0 MOVZ W21, 0x1C
	0x039618A4 ADRP X8, 0x7EE000
	0x039618A8 LDR X8, [X8 + 0x908]
	0x039618AC LDR X1, [X8]
	0x039618B0 ADD X0, X31, 0x90
	0x039618B4 BL 0x2BC434C
	0x039618B8 CBNZ X28, 0x3961D1C
	0x039618BC CMP W21, 0x1C
	0x039618C0 B.EQ 0x39618C8
	0x039618C4 CBNZ W21, 0x3961C44
	0x039618C8 LDR X0, [X31 + 0x10]
	0x039618CC CBZ X0, 0x3961D24
	0x039618D0 ADRP X9, 0x7EC000
	0x039618D4 LDR W10, [X0 + 0x1C]
	0x039618D8 LDR X8, [X0 + 0x10]
	0x039618DC LDR X9, [X9 + 0xE10]
	0x039618E0 ADD W10, W10, 0x1
	0x039618E4 LDR X9, [X9]
	0x039618E8 STR W10, [X0 + 0x1C]
	0x039618EC CBZ X8, 0x3961D28
	0x039618F0 MOV W22, W23
	0x039618F4 LDRSW X10, [X0 + 0x18]
	0x039618F8 LDR W11, [X8 + 0x18]
	0x039618FC ADRP X23, 0x7EE000
	0x03961900 LDR X23, [X23 + 0xA08]
	0x03961904 CMP W10, W11
	0x03961908 B.CS 0x3961920
	0x0396190C ADD W9, W10, 0x1
	0x03961910 ADD X8, X8, X10, 0x3, LSL
	0x03961914 STR W9, [X0 + 0x18]
	0x03961918 STR X26, [X8 + 0x20]
	0x0396191C B 0x3961934
	0x03961920 LDR X8, [X9 + 0x20]
	0x03961924 LDR X8, [X8 + 0xC0]
	0x03961928 LDR X2, [X8 + 0x70]
	0x0396192C MOV X1, X26
	0x03961930 BL 0x301BF90
	0x03961934 CBZ X20, 0x3961D2C
	0x03961938 ADRP X8, 0x7EE000
	0x0396193C LDR X8, [X8 + 0x970]
	0x03961940 LDR X2, [X8]
	0x03961944 MOV X0, X20
	0x03961948 MOV X1, X27
	0x0396194C BL 0x301C194
	0x03961950 B 0x39616E8
	0x03961954 BL 0x1C16F20
	0x03961958 B 0x3961D34
	0x0396195C BL 0x1C16F20
	0x03961960 B 0x3961D34
	0x03961964 BL 0x1C16F20
	0x03961968 B 0x3961D34
	0x0396196C BL 0x1C16F20
	0x03961970 B 0x3961D34
	0x03961974 BL 0x1C16F20
	0x03961978 B 0x3961D34
	0x0396197C B 0x3961994
	0x03961980 B 0x3961994
	0x03961984 B 0x3961994
	0x03961988 B 0x3961994
	0x0396198C B 0x3961994
	0x03961990 B 0x3961994
	0x03961994 CMP W1, 0x1
	0x03961998 B.NE 0x3961C7C
	0x0396199C BL 0x3EB1AD0
	0x039619A0 LDR X28, [X0]
	0x039619A4 BL 0x3EB1AE0
	0x039619A8 MOV W21, W31
	0x039619AC B 0x39618A4
	0x039619B0 ADRP X8, 0x7EE000
	0x039619B4 LDR X8, [X8 + 0xA00]
	0x039619B8 ADD X0, X31, 0xB0
	0x039619BC LDR X1, [X8]
	0x039619C0 BL 0x2C0A83C
	0x039619C4 ADRP X27, 0x7BC000
	0x039619C8 ADRP X21, 0x7EE000
	0x039619CC LDR X27, [X27 + 0xF38]
	0x039619D0 LDR X21, [X21 + 0x8B8]
	0x039619D4 LDR X23, [X31 + 0x10]
	0x039619D8 LDR X0, [X21]
	0x039619DC LDR W8, [X0 + 0xE0]
	0x039619E0 CBNZ W8, 0x39619EC
	0x039619E4 BL 0x1C16DFC
	0x039619E8 LDR X0, [X21]
	0x039619EC LDR X8, [X0 + 0xB8]
	0x039619F0 LDR X22, [X8 + 0x18]
	0x039619F4 CBNZ X22, 0x3961A48
	0x039619F8 LDR W8, [X0 + 0xE0]
	0x039619FC CBNZ W8, 0x3961A08
	0x03961A00 BL 0x1C16DFC
	0x03961A04 LDR X0, [X21]
	0x03961A08 ADRP X9, 0x7EE000
	0x03961A0C LDR X8, [X0 + 0xB8]
	0x03961A10 LDR X9, [X9 + 0x938]
	0x03961A14 LDR X24, [X8]
	0x03961A18 LDR X0, [X9]
	0x03961A1C BL 0x1C16F10
	0x03961A20 ADRP X8, 0x7EE000
	0x03961A24 LDR X8, [X8 + 0xA30]
	0x03961A28 MOV X1, X24
	0x03961A2C MOV X3, X31
	0x03961A30 MOV X22, X0
	0x03961A34 LDR X2, [X8]
	0x03961A38 BL 0x2D30578
	0x03961A3C LDR X8, [X21]
	0x03961A40 LDR X8, [X8 + 0xB8]
	0x03961A44 STR X22, [X8 + 0x18]
	0x03961A48 ADRP X8, 0x7EE000
	0x03961A4C LDR X8, [X8 + 0x8F8]
	0x03961A50 MOV X0, X20
	0x03961A54 MOV X1, X22
	0x03961A58 LDR X2, [X8]
	0x03961A5C BL 0x21CF224
	0x03961A60 LDR X1, [X19 + 0x18]
	0x03961A64 LDR X2, [X31 + 0x18]
	0x03961A68 MOV X3, X31
	0x03961A6C MOV X4, X31
	0x03961A70 BL 0x390186C
	0x03961A74 LDR X0, [X19 + 0x18]
	0x03961A78 MOV X1, X23
	0x03961A7C BL 0x395C0F0
	0x03961A80 CBZ X0, 0x3961C5C
	0x03961A84 LDR X8, [X19 + 0x18]
	0x03961A88 CBZ X8, 0x3961C5C
	0x03961A8C LDR W26, [X0 + 0x18]
	0x03961A90 MOV X0, X8
	0x03961A94 MOV X1, X31
	0x03961A98 BL 0x3916198
	0x03961A9C STR X0, [X19 + 0x10]
	0x03961AA0 ADRP X8, 0x793000
	0x03961AA4 LDR X8, [X8 + 0xE08]
	0x03961AA8 LDR X0, [X8]
	0x03961AAC BL 0x1C16F10
	0x03961AB0 ADRP X8, 0x799000
	0x03961AB4 LDR X8, [X8 + 0x688]
	0x03961AB8 MOV X21, X0
	0x03961ABC LDR X1, [X8]
	0x03961AC0 BL 0x2DA9EF4
	0x03961AC4 CBZ X20, 0x3961C5C
	0x03961AC8 LDR W8, [X20 + 0x18]
	0x03961ACC CMP W8, 0x1
	0x03961AD0 B.LT 0x3961BBC
	0x03961AD4 MOV W22, W31
	0x03961AD8 LDR X2, [X29]
	0x03961ADC MOV X0, X20
	0x03961AE0 MOV W1, W22
	0x03961AE4 BL 0x301BCCC
	0x03961AE8 CBZ X0, 0x3961C5C
	0x03961AEC MOV W23, W31
	0x03961AF0 LDR X8, [X0 + 0x18]
	0x03961AF4 CBZ X8, 0x3961C5C
	0x03961AF8 LDR W8, [X8 + 0x18]
	0x03961AFC CMP W23, W8
	0x03961B00 B.GE 0x3961BAC
	0x03961B04 LDR X2, [X29]
	0x03961B08 LDR X24, [X19 + 0x10]
	0x03961B0C MOV X0, X20
	0x03961B10 MOV W1, W22
	0x03961B14 BL 0x301BCCC
	0x03961B18 CBZ X0, 0x3961C5C
	0x03961B1C LDR X0, [X0 + 0x18]
	0x03961B20 CBZ X0, 0x3961C5C
	0x03961B24 LDR X2, [X27]
	0x03961B28 MOV W1, W23
	0x03961B2C BL 0x2FDC41C
	0x03961B30 LDR X2, [X29]
	0x03961B34 MOV W25, W0
	0x03961B38 MOV X0, X20
	0x03961B3C MOV W1, W22
	0x03961B40 BL 0x301BCCC
	0x03961B44 CBZ X0, 0x3961C5C
	0x03961B48 LDR X8, [X0 + 0x10]
	0x03961B4C CBZ X8, 0x3961C5C
	0x03961B50 CBZ X24, 0x3961C5C
	0x03961B54 ADRP X9, 0x7EC000
	0x03961B58 LDR W8, [X8 + 0x30]
	0x03961B5C LDR X9, [X9 + 0xC80]
	0x03961B60 MOV X0, X24
	0x03961B64 LDR X2, [X9]
	0x03961B68 SUB W9, W25, W26
	0x03961B6C ADD W1, W9, W8
	0x03961B70 BL 0x2A0A2A8
	0x03961B74 CBZ X21, 0x3961C5C
	0x03961B78 ADRP X8, 0x794000
	0x03961B7C LDR X8, [X8 + 0x9D8]
	0x03961B80 MOV W1, W0
	0x03961B84 MOV X0, X21
	0x03961B88 LDR X2, [X8]
	0x03961B8C BL 0x2DAB03C
	0x03961B90 LDR X2, [X29]
	0x03961B94 MOV X0, X20
	0x03961B98 MOV W1, W22
	0x03961B9C ADD W23, W23, 0x1
	0x03961BA0 BL 0x301BCCC
	0x03961BA4 CBNZ X0, 0x3961AF0
	0x03961BA8 B 0x3961C5C
	0x03961BAC LDR W8, [X20 + 0x18]
	0x03961BB0 ADD W22, W22, 0x1
	0x03961BB4 CMP W22, W8
	0x03961BB8 B.LT 0x3961AD8
	0x03961BBC LDR X0, [X19 + 0x18]
	0x03961BC0 CBZ X0, 0x3961C5C
	0x03961BC4 MOV W1, W31
	0x03961BC8 MOV X2, X31
	0x03961BCC BL 0x39197E8
	0x03961BD0 ADRP X8, 0x794000
	0x03961BD4 LDR X8, [X8 + 0x9D0]
	0x03961BD8 LDR X0, [X8]
	0x03961BDC BL 0x1C16F10
	0x03961BE0 ADRP X8, 0x7EE000
	0x03961BE4 LDR X8, [X8 + 0xA40]
	0x03961BE8 MOV X1, X19
	0x03961BEC MOV X3, X31
	0x03961BF0 MOV X20, X0
	0x03961BF4 LDR X2, [X8]
	0x03961BF8 BL 0x2D2CF74
	0x03961BFC ADRP X8, 0x7ED000
	0x03961C00 LDR X8, [X8 + 0x808]
	0x03961C04 MOV X0, X21
	0x03961C08 MOV X1, X20
	0x03961C0C LDR X2, [X8]
	0x03961C10 BL 0x21CD49C
	0x03961C14 ADRP X8, 0x794000
	0x03961C18 LDR X8, [X8 + 0x9C8]
	0x03961C1C LDR X1, [X8]
	0x03961C20 BL 0x21D54D4
	0x03961C24 LDP X20, X19, [X31 + 0x150]
	0x03961C28 LDP X22, X21, [X31 + 0x140]
	0x03961C2C LDP X24, X23, [X31 + 0x130]
	0x03961C30 LDP X26, X25, [X31 + 0x120]
	0x03961C34 LDP X28, X27, [X31 + 0x110]
	0x03961C38 LDP X29, X30, [X31 + 0x100]
	0x03961C3C ADD X31, X31, 0x160
	0x03961C40 RET
	0x03961C44 ADRP X8, 0x7EE000
	0x03961C48 LDR X8, [X8 + 0xA00]
	0x03961C4C ADD X0, X31, 0xB0
	0x03961C50 LDR X1, [X8]
	0x03961C54 BL 0x2C0A83C
	0x03961C58 B 0x3961C24
	0x03961C5C BL 0x1C16F20
	0x03961C60 BL 0x1C16F28
	0x03961C64 BL 0x1C16F20
	0x03961C68 BL 0x1C16F20
	0x03961C6C BL 0x1C16F20
	0x03961C70 BL 0x1C16F20
	0x03961C74 BL 0x1C16F28
	0x03961C78 BL 0x1C16F20
	0x03961C7C MOV X22, X1
	0x03961C80 MOV X24, X0
	0x03961C84 MOV X28, X31
	0x03961C88 ADRP X8, 0x7EE000
	0x03961C8C LDR X8, [X8 + 0x908]
	0x03961C90 LDR X1, [X8]
	0x03961C94 ADD X0, X31, 0x90
	0x03961C98 BL 0x2BC434C
	0x03961C9C MOV X0, X24
	0x03961CA0 MOV X1, X22
	0x03961CA4 CBZ X28, 0x3961D90
	0x03961CA8 MOV X0, X28
	0x03961CAC BL 0x1C16F18
	0x03961CB0 ADRP X0, 0x797000
	0x03961CB4 LDR X0, [X0 + 0x528]
	0x03961CB8 BL 0x1C16D08
	0x03961CBC BL 0x1C16F10
	0x03961CC0 MOV X19, X0
	0x03961CC4 ADRP X0, 0x7EC000
	0x03961CC8 LDR X0, [X0 + 0xE90]
	0x03961CCC B 0x3961CEC
	0x03961CD0 ADRP X0, 0x797000
	0x03961CD4 LDR X0, [X0 + 0x528]
	0x03961CD8 BL 0x1C16D08
	0x03961CDC BL 0x1C16F10
	0x03961CE0 MOV X19, X0
	0x03961CE4 ADRP X0, 0x7CA000
	0x03961CE8 LDR X0, [X0 + 0xE10]
	0x03961CEC BL 0x1C16D08
	0x03961CF0 MOV X1, X0
	0x03961CF4 MOV X0, X19
	0x03961CF8 MOV X2, X31
	0x03961CFC BL 0x330E100
	0x03961D00 ADRP X0, 0x7EE000
	0x03961D04 LDR X0, [X0 + 0xA48]
	0x03961D08 BL 0x1C16D08
	0x03961D0C MOV X1, X0
	0x03961D10 MOV X0, X19
	0x03961D14 BL 0x1C16DEC
	0x03961D18 BL 0x1C16F20
	0x03961D1C MOV X0, X28
	0x03961D20 BL 0x1C16F18
	0x03961D24 BL 0x1C16F20
	0x03961D28 BL 0x1C16F20
	0x03961D2C BL 0x1C16F20
	0x03961D30 BL 0x1C16F20
	0x03961D34 MOV X22, X1
	0x03961D38 MOV X24, X0
	0x03961D3C B 0x3961C88
	0x03961D40 B 0x3961D90
	0x03961D44 B 0x3961D90
	0x03961D48 B 0x3961D90
	0x03961D4C B 0x3961D90
	0x03961D50 B 0x3961D90
	0x03961D54 B 0x3961D90
	0x03961D58 B 0x3961D90
	0x03961D5C B 0x3961D90
	0x03961D60 B 0x3961D90
	0x03961D64 B 0x3961D90
	0x03961D68 B 0x3961D90
	0x03961D6C B 0x3961D90
	0x03961D70 B 0x3961D90
	0x03961D74 B 0x3961D90
	0x03961D78 B 0x3961D90
	0x03961D7C B 0x3961D90
	0x03961D80 B 0x3961E0C
	0x03961D84 B 0x3961E0C
	0x03961D88 B 0x3961E0C
	0x03961D8C B 0x3961E0C
	0x03961D90 ADRP X27, 0x7BC000
	0x03961D94 ADRP X21, 0x7EE000
	0x03961D98 LDR X27, [X27 + 0xF38]
	0x03961D9C LDR X21, [X21 + 0x8B8]
	0x03961DA0 LDR X23, [X31 + 0x10]
	0x03961DA4 CMP W1, 0x1
	0x03961DA8 B.NE 0x3961DD8
	0x03961DAC BL 0x3EB1AD0
	0x03961DB0 LDR X22, [X0]
	0x03961DB4 BL 0x3EB1AE0
	0x03961DB8 ADRP X8, 0x7EE000
	0x03961DBC LDR X8, [X8 + 0xA00]
	0x03961DC0 ADD X0, X31, 0xB0
	0x03961DC4 LDR X1, [X8]
	0x03961DC8 BL 0x2C0A83C
	0x03961DCC CBZ X22, 0x39619D8
	0x03961DD0 MOV X0, X22
	0x03961DD4 BL 0x1C16F18
	0x03961DD8 MOV X19, X0
	0x03961DDC MOV X22, X31
	0x03961DE0 B 0x3961DE8
	0x03961DE4 MOV X19, X0
	0x03961DE8 ADRP X8, 0x7EE000
	0x03961DEC LDR X8, [X8 + 0xA00]
	0x03961DF0 LDR X1, [X8]
	0x03961DF4 ADD X0, X31, 0xB0
	0x03961DF8 BL 0x2C0A83C
	0x03961DFC CBZ X22, 0x3961E58
	0x03961E00 MOV X0, X22
	0x03961E04 BL 0x1C16F18
	0x03961E08 B 0x3961E0C
	0x03961E0C CMP W1, 0x1
	0x03961E10 B.NE 0x3961E38
	0x03961E14 BL 0x3EB1AD0
	0x03961E18 LDR X21, [X0]
	0x03961E1C BL 0x3EB1AE0
	0x03961E20 LDR X1, [X28]
	0x03961E24 ADD X0, X31, 0xE0
	0x03961E28 BL 0x2BBDA68
	0x03961E2C CBZ X21, 0x396146C
	0x03961E30 MOV X0, X21
	0x03961E34 BL 0x1C16F18
	0x03961E38 MOV X19, X0
	0x03961E3C MOV X21, X31
	0x03961E40 B 0x3961E48
	0x03961E44 MOV X19, X0
	0x03961E48 LDR X1, [X28]
	0x03961E4C ADD X0, X31, 0xE0
	0x03961E50 BL 0x2BBDA68
	0x03961E54 CBNZ X21, 0x3961E60
	0x03961E58 MOV X0, X19
	0x03961E5C BL 0x1D2C690
	0x03961E60 MOV X0, X21
	0x03961E64 BL 0x1C16F18
	0x03961E68 BL 0x1990590
	0x03961E6C MOV X1, X31
	0x03961E70 B 0x33BDD8C
	0x03961E74 SUB X31, X31, 0xA0
	0x03961E78 STR D10, [X31 + 0x20]
	0x03961E7C STP D9, D8, [X31 + 0x30]
	0x03961E80 STP X29, X30, [X31 + 0x40]
	0x03961E84 STP X28, X27, [X31 + 0x50]
	0x03961E88 STP X26, X25, [X31 + 0x60]
	0x03961E8C STP X24, X23, [X31 + 0x70]
	0x03961E90 STP X22, X21, [X31 + 0x80]
	0x03961E94 STP X20, X19, [X31 + 0x90]
	0x03961E98 ADRP X20, 0xA80000
	0x03961E9C LDRB W8, [X20 + 0x9B6]
	0x03961EA0 MOV X26, X1
	0x03961EA4 MOV X19, X0
	0x03961EA8 STR W4, [X31 + 0x8]
	0x03961EAC STR X3, [X31 + 0x18]
	0x03961EB0 STR X2, [X31 + 0x28]
	0x03961EB4 TBNZ X8, 0x0, 0x3961FEC
	0x03961EB8 ADRP X0, 0x7EE000
	0x03961EBC LDR X0, [X0 + 0xA50]
	0x03961EC0 BL 0x1C16CF4
	0x03961EC4 ADRP X0, 0x7EE000
	0x03961EC8 LDR X0, [X0 + 0xA58]
	0x03961ECC BL 0x1C16CF4
	0x03961ED0 ADRP X0, 0x7EE000
	0x03961ED4 LDR X0, [X0 + 0xA60]
	0x03961ED8 BL 0x1C16CF4
	0x03961EDC ADRP X0, 0x7EC000
	0x03961EE0 LDR X0, [X0 + 0xC80]
	0x03961EE4 BL 0x1C16CF4
	0x03961EE8 ADRP X0, 0x7EE000
	0x03961EEC LDR X0, [X0 + 0xA68]
	0x03961EF0 BL 0x1C16CF4
	0x03961EF4 ADRP X0, 0x7EE000
	0x03961EF8 LDR X0, [X0 + 0xA70]
	0x03961EFC BL 0x1C16CF4
	0x03961F00 ADRP X0, 0x793000
	0x03961F04 LDR X0, [X0 + 0xE10]
	0x03961F08 BL 0x1C16CF4
	0x03961F0C ADRP X0, 0x7EE000
	0x03961F10 LDR X0, [X0 + 0x978]
	0x03961F14 BL 0x1C16CF4
	0x03961F18 ADRP X0, 0x7EE000
	0x03961F1C LDR X0, [X0 + 0x1C0]
	0x03961F20 BL 0x1C16CF4
	0x03961F24 ADRP X0, 0x796000
	0x03961F28 LDR X0, [X0 + 0xB68]
	0x03961F2C BL 0x1C16CF4
	0x03961F30 ADRP X0, 0x7EE000
	0x03961F34 LDR X0, [X0 + 0x988]
	0x03961F38 BL 0x1C16CF4
	0x03961F3C ADRP X0, 0x7EE000
	0x03961F40 LDR X0, [X0 + 0x280]
	0x03961F44 BL 0x1C16CF4
	0x03961F48 ADRP X0, 0x7EC000
	0x03961F4C LDR X0, [X0 + 0xE18]
	0x03961F50 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+304], D10
	003 Move [X31+320], D9
	004 Move [X31+328], D8
	005 Move [X31+336], X29
	006 Move [X31+344], X30
	007 Move [X31+352], X28
	008 Move [X31+360], X27
	009 Move [X31+368], X26
	010 Move [X31+376], X25
	011 Move [X31+384], X24
	012 Move [X31+392], X23
	013 Move [X31+400], X22
	014 Move [X31+408], X21
	015 Move [X31+416], X20
	016 Move [X31+424], X19
	017 Move X20, 0xA82000
	018 Move W8, [X20+2481]
	019 Move X27, X6
	020 Move W26, W5
	021 Move W24, W4
	022 Move X19, X1
	023 Move X25, X0
	024 Move [X31+24], X2
	025 Move [X31+32], X3
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {248}
	030 Move X0, 0x7EE000
	031 Move X0, [X0+2520]
	032 Call 0x1C17CF4
	033 Move X0, 0x7F0000
	034 Move X0, [X0+2240]
	035 Call 0x1C17CF4
	036 Move X0, 0x7F0000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0x7F0000
	040 Move X0, [X0+2256]
	041 Call 0x1C17CF4
	042 Move X0, 0x7F0000
	043 Move X0, [X0+2264]
	044 Call 0x1C17CF4
	045 Move X0, 0x7F0000
	046 Move X0, [X0+2272]
	047 Call 0x1C17CF4
	048 Move X0, 0x7F0000
	049 Move X0, [X0+2280]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F0000
	052 Move X0, [X0+984]
	053 Call 0x1C17CF4
	054 Move X0, 0x7F0000
	055 Move X0, [X0+2288]
	056 Call 0x1C17CF4
	057 Move X0, 0x7F0000
	058 Move X0, [X0+2296]
	059 Call 0x1C17CF4
	060 Move X0, 0x7F0000
	061 Move X0, [X0+1000]
	062 Call 0x1C17CF4
	063 Move X0, 0x7EF000
	064 Move X0, [X0+1688]
	065 Call 0x1C17CF4
	066 Move X0, 0x7EE000
	067 Move X0, [X0+3392]
	068 Call 0x1C17CF4
	069 Move X0, 0x7F0000
	070 Move X0, [X0+2304]
	071 Call 0x1C17CF4
	072 Move X0, 0x7EF000
	073 Move X0, [X0+3480]
	074 Call 0x1C17CF4
	075 Move X0, 0x7F0000
	076 Move X0, [X0+2312]
	077 Call 0x1C17CF4
	078 Move X0, 0x7F0000
	079 Move X0, [X0+2320]
	080 Call 0x1C17CF4
	081 Move X0, 0x7EF000
	082 Move X0, [X0+3488]
	083 Call 0x1C17CF4
	084 Move X0, 0x7F0000
	085 Move X0, [X0+2328]
	086 Call 0x1C17CF4
	087 Move X0, 0x7F0000
	088 Move X0, [X0+2336]
	089 Call 0x1C17CF4
	090 Move X0, 0x7EF000
	091 Move X0, [X0+3496]
	092 Call 0x1C17CF4
	093 Move X0, 0x7F0000
	094 Move X0, [X0+2344]
	095 Call 0x1C17CF4
	096 Move X0, 0x7F0000
	097 Move X0, [X0+2352]
	098 Call 0x1C17CF4
	099 Move X0, 0x7F0000
	100 Move X0, [X0+2360]
	101 Call 0x1C17CF4
	102 Move X0, 0x7F0000
	103 Move X0, [X0+2368]
	104 Call 0x1C17CF4
	105 Move X0, 0x7EF000
	106 Move X0, [X0+1296]
	107 Call 0x1C17CF4
	108 Move X0, 0x7F0000
	109 Move X0, [X0+2376]
	110 Call 0x1C17CF4
	111 Move X0, 0x7F0000
	112 Move X0, [X0+1072]
	113 Call 0x1C17CF4
	114 Move X0, 0x796000
	115 Move X0, [X0+2520]
	116 Call 0x1C17CF4
	117 Move X0, 0x7F0000
	118 Move X0, [X0+2384]
	119 Call 0x1C17CF4
	120 Move X0, 0x795000
	121 Move X0, [X0+3576]
	122 Call 0x1C17CF4
	123 Move X0, 0x7EE000
	124 Move X0, [X0+3624]
	125 Call 0x1C17CF4
	126 Move X0, 0x795000
	127 Move X0, [X0+3584]
	128 Call 0x1C17CF4
	129 Move X0, 0x79B000
	130 Move X0, [X0+1672]
	131 Call 0x1C17CF4
	132 Move X0, 0x7F0000
	133 Move X0, [X0+2392]
	134 Call 0x1C17CF4
	135 Move X0, 0x7EE000
	136 Move X0, [X0+3280]
	137 Call 0x1C17CF4
	138 Move X0, 0x795000
	139 Move X0, [X0+3592]
	140 Call 0x1C17CF4
	141 Move X0, 0x794000
	142 Move X0, [X0+1880]
	143 Call 0x1C17CF4
	144 Move X0, 0x7F0000
	145 Move X0, [X0+2400]
	146 Call 0x1C17CF4
	147 Move X0, 0x7F0000
	148 Move X0, [X0+2408]
	149 Call 0x1C17CF4
	150 Move X0, 0x7F0000
	151 Move X0, [X0+2416]
	152 Call 0x1C17CF4
	153 Move X0, 0x7F0000
	154 Move X0, [X0+2424]
	155 Call 0x1C17CF4
	156 Move X0, 0x7EE000
	157 Move X0, [X0+3600]
	158 Call 0x1C17CF4
	159 Move X0, 0x7F0000
	160 Move X0, [X0+32]
	161 Call 0x1C17CF4
	162 Move X0, 0x7F0000
	163 Move X0, [X0+2432]
	164 Call 0x1C17CF4
	165 Move X0, 0x7EF000
	166 Move X0, [X0+3504]
	167 Call 0x1C17CF4
	168 Move X0, 0x7EF000
	169 Move X0, [X0+3128]
	170 Call 0x1C17CF4
	171 Move X0, 0x7EF000
	172 Move X0, [X0+2616]
	173 Call 0x1C17CF4
	174 Move X0, 0x7F0000
	175 Move X0, [X0+2440]
	176 Call 0x1C17CF4
	177 Move X0, 0x7EE000
	178 Move X0, [X0+3552]
	179 Call 0x1C17CF4
	180 Move X0, 0x7F0000
	181 Move X0, [X0+40]
	182 Call 0x1C17CF4
	183 Move X0, 0x7EF000
	184 Move X0, [X0+2808]
	185 Call 0x1C17CF4
	186 Move X0, 0x7F0000
	187 Move X0, [X0+2448]
	188 Call 0x1C17CF4
	189 Move X0, 0x795000
	190 Move X0, [X0+3624]
	191 Call 0x1C17CF4
	192 Move X0, 0x7BE000
	193 Move X0, [X0+3896]
	194 Call 0x1C17CF4
	195 Move X0, 0x7EF000
	196 Move X0, [X0+2816]
	197 Call 0x1C17CF4
	198 Move X0, 0x7F0000
	199 Move X0, [X0+2456]
	200 Call 0x1C17CF4
	201 Move X0, 0x7F0000
	202 Move X0, [X0+2464]
	203 Call 0x1C17CF4
	204 Move X0, 0x7EE000
	205 Move X0, [X0+3560]
	206 Call 0x1C17CF4
	207 Move X0, 0x7F0000
	208 Move X0, [X0+48]
	209 Call 0x1C17CF4
	210 Move X0, 0x7EE000
	211 Move X0, [X0+3568]
	212 Call 0x1C17CF4
	213 Move X0, 0x7EF000
	214 Move X0, [X0+1048]
	215 Call 0x1C17CF4
	216 Move X0, 0x7F0000
	217 Move X0, [X0+2472]
	218 Call 0x1C17CF4
	219 Move X0, 0x7F0000
	220 Move X0, [X0+2480]
	221 Call 0x1C17CF4
	222 Move X0, 0x7F0000
	223 Move X0, [X0+2488]
	224 Call 0x1C17CF4
	225 Move X0, 0x7F0000
	226 Move X0, [X0+2496]
	227 Call 0x1C17CF4
	228 Move X0, 0x7F0000
	229 Move X0, [X0+2504]
	230 Call 0x1C17CF4
	231 Move X0, 0x7F0000
	232 Move X0, [X0+2512]
	233 Call 0x1C17CF4
	234 Move X0, 0x7F0000
	235 Move X0, [X0+2232]
	236 Call 0x1C17CF4
	237 Move X0, 0x7EF000
	238 Move X0, [X0+2824]
	239 Call 0x1C17CF4
	240 Move X0, 0x7F0000
	241 Move X0, [X0+2520]
	242 Call 0x1C17CF4
	243 Move X0, 0x7F0000
	244 Move X0, [X0+2528]
	245 Call 0x1C17CF4
	246 Move W8, 1
	247 Move [X20+2481], W8
	248 NotImplemented "Instruction MOVI not yet implemented."
	249 Move [X31+272], X31
	250 Move [X31+280], X31
	251 Move [X31+288], X31
	252 Move [X31+312], X31
	253 Move [X31+256], X31
	254 Move [X31+208], X31
	255 Move [X31+216], X31
	256 Move [X31+176], X31
	257 Move [X31+184], X31
	258 Move [X31+224], V0
	259 Move [X31+232], V0
	260 Move [X31+192], X31
	261 Compare X25, 0
	262 JumpIfEqual {1295}
	263 Move X21, 0x7EE000
	264 Move X22, 0x7F0000
	265 Move X23, 0x7EF000
	266 Move X29, 0x7F0000
	267 Move X28, 0x7F0000
	268 Move X21, [X21+3280]
	269 Move X22, [X22+2392]
	270 Move X23, [X23+2824]
	271 Move X29, [X29+2280]
	272 Move X28, [X28+2264]
	273 Move X0, X25
	274 Move X1, X31
	275 Call ProBuilderMesh.get_sharedVertexLookup, X0
	276 Move X20, X0
	277 Move X0, X25
	278 Move X1, X31
	279 Call ProBuilderMesh.get_sharedTextureLookup, X0
	280 Move X0, X19
	281 Move X1, X20
	282 Move X2, X31
	283 Call EdgeLookup.GetEdgeLookup, X0, X1
	284 Move X8, [X21]
	285 Move X19, X0
	286 Move X0, X8
	287 Call 0x1C17F10
	288 Move X2, [X22]
	289 Move X1, X19
	290 Move X20, X0
	291 Call HashSet`1<EdgeLookup>..ctor, X0, X1
	292 Move X0, [X23]
	293 Move W8, [X0+224]
	294 Compare W8, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Move X0, X25
	298 Move W1, W31
	299 Move X2, X31
	300 Move [X31+56], X27
	301 Move [X31+16], W24
	302 Move [X31+20], W26
	303 Move [X31+40], X25
	304 Call WingedEdge.GetWingedEdges, X0, X1
	305 Move X8, [X29]
	306 Move X21, X0
	307 Move X0, X8
	308 Call 0x1C17F10
	309 Move X1, [X28]
	310 Move X19, X0
	311 Call Dictionary`2<Object, Object>..ctor, X0
	312 Compare X21, 0
	313 JumpIfEqual {1295}
	314 Move X8, 0x7EF000
	315 Move X8, [X8+3504]
	316 Move X27, 0x7EF000
	317 Move X24, 0x7F0000
	318 Move X28, 0x7F0000
	319 Move X29, 0x7F0000
	320 Move X23, 0x7F0000
	321 Move X22, 0x796000
	322 Move X27, [X27+3488]
	323 Move X24, [X24+2384]
	324 Move X28, [X28+2256]
	325 Move X29, [X29+32]
	326 Move X23, [X23+2240]
	327 Move X22, [X22+2520]
	328 Move X1, [X8]
	329 Add X8, X31, 128
	330 Move X0, X21
	331 Call List`1<Object>.GetEnumerator, X0
	332 Move V0, [X31+8]
	333 Move X8, [X31+144]
	334 Move [X31+17], V0
	335 Move [X31+288], X8
	336 Move X1, [X27]
	337 Add X0, X31, 272
	338 Call Enumerator<Object>.MoveNext, X0
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {427}
	343 Move X21, [X31+288]
	344 Compare X21, 0
	345 JumpIfEqual {1297}
	346 Compare X20, 0
	347 JumpIfEqual {1298}
	348 Move X1, [X21+16]
	349 Move X2, [X21+24]
	350 Move X3, [X24]
	351 Move X0, X20
	352 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {336}
	357 Compare X19, 0
	358 JumpIfEqual {1303}
	359 Move X1, [X21+32]
	360 Move X3, [X28]
	361 Add X2, X31, 312
	362 Move X0, X19
	363 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {385}
	368 Move X0, [X31+312]
	369 Compare X0, 0
	370 JumpIfEqual {1312}
	371 Move W10, [X0+28]
	372 Move X8, [X0+16]
	373 Move X9, [X29]
	374 Add W10, W10, 1
	375 Move [X0+28], W10
	376 Compare X8, 0
	377 JumpIfEqual {1310}
	378 NotImplemented "Instruction LDRSW not yet implemented."
	379 Move W11, [X8+24]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Add W9, W10, 1
	382 Add X8, X8, X10
	383 Move [X0+24], W9
	384 Move [X8+32], X21
	385 Move X8, 0x7F0000
	386 Move X25, [X21+32]
	387 Move X8, [X8+48]
	388 Move X0, [X8]
	389 Call 0x1C17F10
	390 Move X8, 0x7F0000
	391 Move X8, [X8+40]
	392 Move X26, X0
	393 Move X1, [X8]
	394 Call List`1<Object>..ctor, X0
	395 Compare X26, 0
	396 JumpIfEqual {1311}
	397 Move W10, [X26+28]
	398 Move X8, [X26+16]
	399 Move X9, [X29]
	400 Add W10, W10, 1
	401 Move [X26+28], W10
	402 Compare X8, 0
	403 JumpIfEqual {1309}
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Move W11, [X8+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add W9, W10, 1
	408 Add X8, X8, X10
	409 Move [X26+24], W9
	410 Move [X8+32], X21
	411 Move X8, [X9+32]
	412 Move X8, [X8+192]
	413 Move X2, [X8+112]
	414 Move X1, X21
	415 Call List`1<Object>.AddWithResize, X0, X1
	416 Move X8, [X9+32]
	417 Move X8, [X8+192]
	418 Move X2, [X8+112]
	419 Move X0, X26
	420 Move X1, X21
	421 Call List`1<Object>.AddWithResize, X0, X1
	422 Move X3, [X23]
	423 Move X0, X19
	424 Move X1, X25
	425 Move X2, X26
	426 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	427 Move X8, 0x7EF000
	428 Move X8, [X8+3480]
	429 Add X0, X31, 272
	430 Move X1, [X8]
	431 Call Enumerator<Object>.Dispose, X0
	432 Move X24, 0x7F0000
	433 Move X25, 0x7EF000
	434 Move X29, [X31+56]
	435 Move X24, [X24+2336]
	436 Call 0x3EB2954
	437 Return X0
	438 Move X8, 0x7EF000
	439 Move X8, [X8+2280]
	440 Move X0, [X8]
	441 Call 0x1C17F10
	442 Move X8, 0x7EF000
	443 Move X8, [X8+2264]
	444 Move X27, X0
	445 Move X1, [X8]
	446 Call Dictionary`2<Object, Object>..ctor, X0
	447 Compare X19, 0
	448 JumpIfEqual {1295}
	449 Move X8, 0x7EF000
	450 Move X8, [X8+2248]
	451 Move X0, X19
	452 Move X1, [X8]
	453 Add X8, X31, 128
	454 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	455 Move V0, [X31+128]
	456 Move V1, [X31+144]
	457 Move X8, [X31+160]
	458 Move [X31+224], V0
	459 Move [X31+232], V1
	460 Move [X31+256], X8
	461 Move X1, [X24]
	462 Add X0, X31, 224
	463 Call Enumerator<Object, Object>.MoveNext, X0
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfNotEqual {504}
	468 Move X20, [X31+248]
	469 Compare X20, 0
	470 JumpIfEqual {1296}
	471 Move W8, [X20+24]
	472 Move X21, [X31+240]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Compare X27, 0
	475 JumpIfEqual {1301}
	476 Move X3, [X23]
	477 Move X0, X27
	478 Move X1, X21
	479 Move X2, X20
	480 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	481 Move X2, [X25]
	482 Move X0, X20
	483 Move W1, W31
	484 Call List`1<Object>.get_Item, X0, X1
	485 Compare X0, 0
	486 JumpIfEqual {1302}
	487 Move X8, [X0+56]
	488 Compare X8, 0
	489 JumpIfEqual {461}
	490 Move X1, [X8+32]
	491 Move X3, [X28]
	492 Add X2, X31, 216
	493 Move X0, X19
	494 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	495 Move TEMP, X0
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfNotEqual {461}
	499 Move X8, [X31+216]
	500 Compare X8, 0
	501 JumpIfEqual {1315}
	502 Move W8, [X8+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X8, 0x7EF000
	505 Move X8, [X8+2320]
	506 Add X0, X31, 224
	507 Move X1, [X8]
	508 Call Enumerator<Object, Object>.Dispose, X0
	509 Move X20, [X31+40]
	510 Move X0, X20
	511 Move X1, X31
	512 Move X2, X31
	513 Call ProBuilderMesh.GetVertices, X0, X1
	514 Move X8, 0x7ED000
	515 Move X8, [X8+3560]
	516 Move X19, X0
	517 Move X8, [X8]
	518 Move X0, X8
	519 Call 0x1C17F10
	520 Move X8, 0x7ED000
	521 Move X8, [X8+3552]
	522 Move X1, X19
	523 Move X28, X0
	524 Move X2, [X8]
	525 Call List`1<Object>..ctor, X0, X1
	526 Move X8, 0x7EF000
	527 Move X8, [X8+2464]
	528 Move X0, [X8]
	529 Call 0x1C17F10
	530 Move X8, 0x7EF000
	531 Move X8, [X8+2440]
	532 Move X25, X0
	533 Move X1, [X8]
	534 Call List`1<Object>..ctor, X0
	535 Move X8, 0x7ED000
	536 Move X8, [X8+3568]
	537 Move X0, [X8]
	538 Call 0x1C17F10
	539 Move X8, 0x7EE000
	540 Move X8, [X8+2616]
	541 Move X26, X0
	542 Move X1, [X8]
	543 Call List`1<Object>..ctor, X0
	544 Move X21, 0x7EF000
	545 Move X21, [X21+2232]
	546 Move X19, [X20+40]
	547 Move X0, [X21]
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {553}
	551 Call 0x1C17DFC
	552 Move X0, [X21]
	553 Move X8, [X0+184]
	554 Move X20, [X8+32]
	555 Compare X20, 0
	556 JumpIfNotEqual {582}
	557 Move W8, [X0+224]
	558 Compare W8, 0
	559 JumpIfEqual {562}
	560 Move X23, 0x7EF000
	561 Move X23, [X23+2232]
	562 Call 0x1C17DFC
	563 Move X23, 0x7EF000
	564 Move X23, [X23+2232]
	565 Move X0, [X23]
	566 Move X9, 0x7EE000
	567 Move X8, [X0+184]
	568 Move X9, [X9+1296]
	569 Move X21, [X8]
	570 Move X0, [X9]
	571 Call 0x1C17F10
	572 Move X8, 0x7EF000
	573 Move X8, [X8+2472]
	574 Move X1, X21
	575 Move X3, X31
	576 Move X20, X0
	577 Move X2, [X8]
	578 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	579 Move X8, [X23]
	580 Move X8, [X8+184]
	581 Move [X8+32], X20
	582 Move X8, 0x7EE000
	583 Move X8, [X8+1688]
	584 Move X0, X19
	585 Move X1, X20
	586 Move X2, [X8]
	587 Call Enumerable.Select, X0, X1
	588 Move X8, 0x794000
	589 Move X8, [X8+3592]
	590 Move X19, X0
	591 Move X8, [X8]
	592 Move X0, X8
	593 Call 0x1C17F10
	594 Move X8, 0x794000
	595 Move X8, [X8+3584]
	596 Move X1, X19
	597 Move [X31+48], X0
	598 Move X2, [X8]
	599 Call HashSet`1<Int32>..ctor, X0, X1
	600 Compare X27, 0
	601 JumpIfEqual {1295}
	602 Move X8, 0x7EF000
	603 Move X8, [X8+2248]
	604 Move X0, X27
	605 Move X1, [X8]
	606 Add X8, X31, 128
	607 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	608 Move V0, [X31+128]
	609 Move V1, [X31+144]
	610 Move X8, [X31+160]
	611 Move W19, 1
	612 Move [X31+224], V0
	613 Move [X31+232], V1
	614 Move [X31+256], X8
	615 Move X1, [X24]
	616 Add X0, X31, 224
	617 Call Enumerator<Object, Object>.MoveNext, X0
	618 Move TEMP, X0
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfNotEqual {917}
	622 Move X20, [X31+248]
	623 Compare X20, 0
	624 JumpIfEqual {1299}
	625 Move X21, [X31+240]
	626 Compare X21, 0
	627 JumpIfEqual {1300}
	628 Move W23, [X20+24]
	629 Move X1, [X21+16]
	630 Move X0, X28
	631 Move X2, X31
	632 Call Math.Normal, X0, X1
	633 Move V9, V0
	634 Move V10, V1
	635 Move V8, V2
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Compare X29, 0
	638 JumpIfEqual {649}
	639 Move X8, 0x7ED000
	640 Move X8, [X8+3624]
	641 Move X2, [X8]
	642 Move X0, X29
	643 Move X1, X21
	644 Call HashSet`1<Object>.Contains, X0, X1
	645 Move TEMP, X0
	646 And TEMP, TEMP, 1
	647 Compare TEMP, 1
	648 JumpIfNotEqual {669}
	649 NotImplemented "Instruction CMP not yet implemented."
	650 NotImplemented "Instruction CMP not yet implemented."
	651 Move X8, 0x7EE000
	652 Move X8, [X8+2816]
	653 Move X2, [X8]
	654 Move X0, X20
	655 Move W1, W31
	656 Call List`1<Object>.get_Item, X0, X1
	657 Move X8, 0x7EE000
	658 Move X8, [X8+2816]
	659 Move X23, X0
	660 Move X2, [X8]
	661 Move W1, 1
	662 Move X0, X20
	663 Call List`1<Object>.get_Item, X0, X1
	664 Move X2, X0
	665 Move X0, X21
	666 Move X1, X23
	667 Move X3, X28
	668 Call ConnectElements.ConnectEdgesInFace, X0, X1, X2, X3
	669 Add X3, X31, 208
	670 Move X0, X21
	671 Move X1, X20
	672 Move X2, X28
	673 Call ConnectElements.InsertVertices, X0, X1, X2, X3
	674 Move TEMP, X0
	675 And TEMP, TEMP, 1
	676 Compare TEMP, 1
	677 JumpIfNotEqual {615}
	678 Move X20, [X31+208]
	679 Compare X20, 0
	680 JumpIfEqual {1306}
	681 Move X8, [X20+16]
	682 Compare X8, 0
	683 JumpIfEqual {1307}
	684 Move X9, [X8+16]
	685 Compare X9, 0
	686 JumpIfEqual {1304}
	687 Move X0, [X8+24]
	688 Move X1, [X9+16]
	689 Move X2, X31
	690 Call Math.Normal, X0, X1
	691 Multiply S0, S9, S0
	692 Multiply S1, S10, S1
	693 Add S0, S0, S1
	694 Multiply S1, S8, S2
	695 Add S0, S1, S0
	696 NotImplemented "Instruction FCMP not yet implemented."
	697 Move X8, [X20+16]
	698 Compare X8, 0
	699 JumpIfEqual {1313}
	700 Move X0, [X8+16]
	701 Compare X0, 0
	702 JumpIfEqual {1314}
	703 Move X1, X31
	704 Call Face.Reverse, X0
	705 Compare X25, 0
	706 JumpIfEqual {1308}
	707 Move X9, 0x7EF000
	708 Move W10, [X25+28]
	709 Move X8, [X25+16]
	710 Move X9, [X9+2424]
	711 Add W10, W10, 1
	712 Move X9, [X9]
	713 Move [X25+28], W10
	714 Compare X8, 0
	715 JumpIfEqual {1305}
	716 NotImplemented "Instruction LDRSW not yet implemented."
	717 Move W11, [X8+24]
	718 NotImplemented "Instruction CMP not yet implemented."
	719 Add W9, W10, 1
	720 Add X8, X8, X10
	721 Move [X25+24], W9
	722 Move [X8+32], X20
	723 Move X8, [X9+32]
	724 Move X8, [X8+192]
	725 Move X2, [X8+112]
	726 Move X0, X25
	727 Move X1, X20
	728 Call List`1<Object>.AddWithResize, X0, X1
	729 Move X0, X21
	730 Move X1, X20
	731 Move X2, X28
	732 Call ConnectElements.ConnectEdgesInFace, X0, X1, X2
	733 Move W8, [X21+84]
	734 Move X20, X0
	735 Move TEMP, X8
	736 And TEMP, TEMP, -2147483648
	737 Compare TEMP, -2147483648
	738 JumpIfNotEqual {757}
	739 Move X8, [X31+48]
	740 Compare X8, 0
	741 JumpIfEqual {1331}
	742 Move X8, 0x794000
	743 Move X8, [X8+3576]
	744 Move X2, [X8]
	745 Move X0, [X31+48]
	746 Move W1, W19
	747 Call HashSet`1<Int32>.Contains, X0, X1
	748 Move TEMP, X0
	749 And TEMP, TEMP, 1
	750 Compare TEMP, 1
	751 JumpIfNotEqual {753}
	752 Add W19, W19, 1
	753 Move X2, [X22]
	754 Move X0, [X31+48]
	755 Move W1, W19
	756 Call HashSet`1<Int32>.Add, X0, X1
	757 Compare X20, 0
	758 JumpIfEqual {1269}
	759 Move X8, 0x7EF000
	760 Move X8, [X8+2432]
	761 Move X1, [X8]
	762 Add X8, X31, 128
	763 Move X0, X20
	764 Call List`1<Object>.GetEnumerator, X0
	765 Move V0, [X31+8]
	766 Move X8, [X31+144]
	767 Add X23, X21, 28
	768 Move [X31+11], V0
	769 Move [X31+192], X8
	770 Move X8, 0x7EF000
	771 Move X8, [X8+2328]
	772 Move X1, [X8]
	773 Add X0, X31, 176
	774 Call Enumerator<Object>.MoveNext, X0
	775 Move TEMP, X0
	776 And TEMP, TEMP, 1
	777 Compare TEMP, 1
	778 JumpIfNotEqual {875}
	779 Move X24, [X31+192]
	780 Compare X24, 0
	781 JumpIfEqual {900}
	782 Move X8, [X24+16]
	783 Compare X8, 0
	784 JumpIfEqual {901}
	785 Compare X26, 0
	786 JumpIfEqual {897}
	787 Move X9, 0x7ED000
	788 Move X1, [X8+16]
	789 Move W10, [X26+28]
	790 Move X8, [X26+16]
	791 Move X9, [X9+3600]
	792 Add W10, W10, 1
	793 Move X9, [X9]
	794 Move [X26+28], W10
	795 Compare X8, 0
	796 JumpIfEqual {899}
	797 NotImplemented "Instruction LDRSW not yet implemented."
	798 Move W11, [X8+24]
	799 NotImplemented "Instruction CMP not yet implemented."
	800 Add W9, W10, 1
	801 Add X8, X8, X10
	802 Move [X26+24], W9
	803 Move [X8+32], X1
	804 Move X8, [X9+32]
	805 Move X8, [X8+192]
	806 Move X2, [X8+112]
	807 Move X0, X26
	808 Call List`1<Object>.AddWithResize, X0, X1
	809 Move X8, [X24+16]
	810 Compare X8, 0
	811 JumpIfEqual {895}
	812 Move X9, [X8+16]
	813 Compare X9, 0
	814 JumpIfEqual {902}
	815 Move X0, [X8+24]
	816 Move X1, [X9+16]
	817 Move X2, X31
	818 Call Math.Normal, X0, X1
	819 Multiply S0, S9, S0
	820 Multiply S1, S10, S1
	821 Add S0, S0, S1
	822 Multiply S1, S8, S2
	823 Add S0, S1, S0
	824 NotImplemented "Instruction FCMP not yet implemented."
	825 Move X8, [X24+16]
	826 Compare X8, 0
	827 JumpIfEqual {905}
	828 Move X0, [X8+16]
	829 Compare X0, 0
	830 JumpIfEqual {906}
	831 Move X1, X31
	832 Call Face.Reverse, X0
	833 Move X8, [X24+16]
	834 Compare X8, 0
	835 JumpIfEqual {898}
	836 Move X29, [X8+16]
	837 Compare X29, 0
	838 JumpIfEqual {904}
	839 Move W8, [X21+84]
	840 NotImplemented "Instruction MOVI not yet implemented."
	841 NotImplemented "Instruction CMP not yet implemented."
	842 NotImplemented "Instruction CSEL not yet implemented."
	843 Move [X29+84], W8
	844 Move V1, [X23]
	845 Move V0, [X23+16]
	846 Move [X31+96], V2
	847 Move [X31+104], V2
	848 Move [X31+128], V1
	849 Move [X31+136], V0
	850 Move [X31+64], V1
	851 Move [X31+72], V0
	852 Add X0, X31, 96
	853 Add X1, X31, 64
	854 Move X2, X31
	855 Call AutoUnwrapSettings..ctor, X0, X1
	856 Move V1, [X31+96]
	857 Move V0, [X31+112]
	858 Move [X29+44], V0
	859 Move [X29+28], V1
	860 Move X8, [X24+16]
	861 Compare X8, 0
	862 JumpIfEqual {896}
	863 Move X24, 0x7EF000
	864 Move X8, [X8+16]
	865 Move X29, [X31+56]
	866 Move X24, [X24+2336]
	867 Compare X8, 0
	868 JumpIfEqual {903}
	869 Move W9, [X21+72]
	870 Move [X8+72], W9
	871 Move W9, [X21+24]
	872 Move [X8+24], W9
	873 Move W9, [X21+76]
	874 Move [X8+76], W9
	875 Move X21, X31
	876 Move W23, 28
	877 Move X8, 0x7EF000
	878 Move X8, [X8+2312]
	879 Move X1, [X8]
	880 Add X0, X31, 176
	881 Call Enumerator<Object>.Dispose, X0
	882 Compare X21, 0
	883 JumpIfNotEqual {1328}
	884 NotImplemented "Instruction CMP not yet implemented."
	885 Compare W23, 0
	886 JumpIfNotEqual {1289}
	887 Compare X25, 0
	888 JumpIfEqual {1330}
	889 Move X8, 0x7EF000
	890 Move X8, [X8+2416]
	891 Move X2, [X8]
	892 Move X0, X25
	893 Move X1, X20
	894 Call List`1<Object>.AddRange, X0, X1
	895 Call 0x1C17F20
	896 Call 0x1C17F20
	897 Call 0x1C17F20
	898 Call 0x1C17F20
	899 Call 0x1C17F20
	900 Call 0x1C17F20
	901 Call 0x1C17F20
	902 Call 0x1C17F20
	903 Call 0x1C17F20
	904 Call 0x1C17F20
	905 Call 0x1C17F20
	906 Call 0x1C17F20
	907 Move X24, 0x7EF000
	908 Move X24, 0x7EF000
	909 Move X29, [X31+56]
	910 Move X24, [X24+2336]
	911 Move X23, X1
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Call 0x3EB2AD0
	914 Move X21, [X0]
	915 Call 0x3EB2AE0
	916 Move W23, W31
	917 Move X8, 0x7EF000
	918 Move X8, [X8+2320]
	919 Add X0, X31, 224
	920 Move X1, [X8]
	921 Call Enumerator<Object, Object>.Dispose, X0
	922 Move X19, 0x7EF000
	923 Move X19, [X19+2232]
	924 Move X0, [X19]
	925 Move W8, [X0+224]
	926 Compare W8, 0
	927 JumpIfNotEqual {930}
	928 Call 0x1C17DFC
	929 Move X0, [X19]
	930 Move X8, [X0+184]
	931 Move X19, [X8+40]
	932 Compare X19, 0
	933 JumpIfNotEqual {959}
	934 Move W8, [X0+224]
	935 Compare W8, 0
	936 JumpIfEqual {939}
	937 Move X21, 0x7EF000
	938 Move X21, [X21+2232]
	939 Call 0x1C17DFC
	940 Move X21, 0x7EF000
	941 Move X21, [X21+2232]
	942 Move X0, [X21]
	943 Move X9, 0x7EF000
	944 Move X8, [X0+184]
	945 Move X9, [X9+2360]
	946 Move X20, [X8]
	947 Move X0, [X9]
	948 Call 0x1C17F10
	949 Move X8, 0x7EF000
	950 Move X8, [X8+2480]
	951 Move X1, X20
	952 Move X3, X31
	953 Move X19, X0
	954 Move X2, [X8]
	955 Call Func`2<Object, Object>..ctor, X0, X1, X2
	956 Move X8, [X21]
	957 Move X8, [X8+184]
	958 Move [X8+40], X19
	959 Move X8, 0x7EF000
	960 Move X8, [X8+2296]
	961 Move X0, X25
	962 Move X1, X19
	963 Move X2, [X8]
	964 Call Enumerable.Select, X0, X1
	965 Move X19, [X31+40]
	966 Move X2, X28
	967 Move X3, X31
	968 Move X4, X31
	969 Move X1, X19
	970 Call FaceRebuildData.Apply, X0, X1, X2, X3
	971 Move X8, 0x7EE000
	972 Move X8, [X8+1048]
	973 Move W1, W31
	974 Move X0, [X8]
	975 Call 0x1C17D6C
	976 Move X1, X0
	977 Move X0, X19
	978 Move X2, X31
	979 Call ProBuilderMesh.set_sharedTextures, X0, X1
	980 Move X8, 0x7EF000
	981 Move X8, [X8+2272]
	982 Move X0, X27
	983 Move X1, [X8]
	984 Call Dictionary`2<Object, Object>.get_Keys, X0
	985 Move X1, X0
	986 Move X0, X19
	987 Call DeleteElements.DeleteFaces, X0, X1
	988 Compare X0, 0
	989 JumpIfEqual {1295}
	990 Move W27, [X0+24]
	991 Move X0, [X19+88]
	992 Move X1, X31
	993 Call SharedVertex.GetSharedVerticesWithPositions, X0
	994 Move X1, X0
	995 Move X0, X19
	996 Move X2, X31
	997 Call ProBuilderMesh.set_sharedVertices, X0, X1
	998 Move X0, X19
	999 Move W1, W31
	1000 Move X2, X31
	1001 Call ProBuilderMesh.ToMesh, X0, X1
	1002 Move W8, [X31+20]
	1003 Move X0, X31
	1004 Move TEMP, X8
	1005 And TEMP, TEMP, 1
	1006 Compare TEMP, 1
	1007 JumpIfNotEqual {1204}
	1008 Move X8, 0x7EF000
	1009 Move X8, [X8+2512]
	1010 Move X0, [X8]
	1011 Call 0x1C17F10
	1012 Move X1, X31
	1013 Move X19, X0
	1014 Call Object..ctor, X0
	1015 Move X8, 0x794000
	1016 Move X8, [X8+3592]
	1017 Move X0, [X8]
	1018 Call 0x1C17F10
	1019 Move X8, 0x79A000
	1020 Move X8, [X8+1672]
	1021 Move X20, X0
	1022 Move X1, [X8]
	1023 Call HashSet`1<Int32>..ctor, X0
	1024 Compare X19, 0
	1025 JumpIfEqual {1295}
	1026 Move [X19+16], X20
	1027 Compare X25, 0
	1028 JumpIfEqual {1295}
	1029 Move W8, [X25+24]
	1030 NotImplemented "Instruction CMP not yet implemented."
	1031 Move X28, 0x7EF000
	1032 Move X29, 0x7BD000
	1033 Move X28, [X28+2456]
	1034 Move X29, [X29+3896]
	1035 Move W20, W31
	1036 Move X2, [X28]
	1037 Move X0, X25
	1038 Move W1, W20
	1039 Call List`1<Object>.get_Item, X0, X1
	1040 Compare X0, 0
	1041 JumpIfEqual {1295}
	1042 Move W21, W31
	1043 Move X8, [X0+24]
	1044 Compare X8, 0
	1045 JumpIfEqual {1295}
	1046 Move W8, [X8+24]
	1047 NotImplemented "Instruction CMP not yet implemented."
	1048 Move X2, [X28]
	1049 Move X23, [X19+16]
	1050 Move X0, X25
	1051 Move W1, W20
	1052 Call List`1<Object>.get_Item, X0, X1
	1053 Compare X0, 0
	1054 JumpIfEqual {1295}
	1055 Move X0, [X0+24]
	1056 Compare X0, 0
	1057 JumpIfEqual {1295}
	1058 Move X2, [X29]
	1059 Move W1, W21
	1060 Call List`1<Int32>.get_Item, X0, X1
	1061 Move X2, [X28]
	1062 Move W24, W0
	1063 Move X0, X25
	1064 Move W1, W20
	1065 Call List`1<Object>.get_Item, X0, X1
	1066 Compare X0, 0
	1067 JumpIfEqual {1295}
	1068 Move X8, [X0+16]
	1069 Compare X8, 0
	1070 JumpIfEqual {1295}
	1071 Compare X23, 0
	1072 JumpIfEqual {1295}
	1073 Move W8, [X8+48]
	1074 Move X2, [X22]
	1075 Subtract W9, W24, W27
	1076 Move X0, X23
	1077 Add W1, W9, W8
	1078 Call HashSet`1<Int32>.Add, X0, X1
	1079 Move X2, [X28]
	1080 Move X0, X25
	1081 Move W1, W20
	1082 Add W21, W21, 1
	1083 Call List`1<Object>.get_Item, X0, X1
	1084 Compare X0, 0
	1085 JumpIfNotEqual {1043}
	1086 Move W8, [X25+24]
	1087 Add W20, W20, 1
	1088 NotImplemented "Instruction CMP not yet implemented."
	1089 Move X0, [X31+40]
	1090 Move X1, X31
	1091 Call ProBuilderMesh.get_sharedVertexLookup, X0
	1092 Move X23, 0x7EF000
	1093 Move X23, [X23+2232]
	1094 Move X20, X0
	1095 Move X8, [X23]
	1096 Move W9, [X8+224]
	1097 Compare W9, 0
	1098 JumpIfNotEqual {1102}
	1099 Move X0, X8
	1100 Call 0x1C17DFC
	1101 Move X8, [X23]
	1102 Move X9, [X8+184]
	1103 Move X21, [X9+48]
	1104 Compare X21, 0
	1105 JumpIfNotEqual {1128}
	1106 Move W9, [X8+224]
	1107 Compare W9, 0
	1108 JumpIfNotEqual {1112}
	1109 Move X0, X8
	1110 Call 0x1C17DFC
	1111 Move X8, [X23]
	1112 Move X9, 0x7EF000
	1113 Move X8, [X8+184]
	1114 Move X9, [X9+2376]
	1115 Move X22, [X8]
	1116 Move X0, [X9]
	1117 Call 0x1C17F10
	1118 Move X8, 0x7EF000
	1119 Move X8, [X8+2488]
	1120 Move X1, X22
	1121 Move X3, X31
	1122 Move X21, X0
	1123 Move X2, [X8]
	1124 Call Func`2<Object, Object>..ctor, X0, X1, X2
	1125 Move X8, [X23]
	1126 Move X8, [X8+184]
	1127 Move [X8+48], X21
	1128 Move X8, 0x7EF000
	1129 Move X8, [X8+2288]
	1130 Move X0, X25
	1131 Move X1, X21
	1132 Move X2, [X8]
	1133 Call Enumerable.SelectMany, X0, X1
	1134 Move X8, 0x7EF000
	1135 Move X8, [X8+2368]
	1136 Move X21, X0
	1137 Move X8, [X8]
	1138 Move X0, X8
	1139 Call 0x1C17F10
	1140 Move X8, 0x7EF000
	1141 Move X8, [X8+2504]
	1142 Move X1, X19
	1143 Move X3, X31
	1144 Move X22, X0
	1145 Move X2, [X8]
	1146 Call Func`2<Edge, Boolean>..ctor, X0, X1, X2
	1147 Move X8, 0x7EF000
	1148 Move X8, [X8+2304]
	1149 Move X0, X21
	1150 Move X1, X22
	1151 Move X2, [X8]
	1152 Call Enumerable.Where, X0, X1
	1153 Move X1, X20
	1154 Move X2, X31
	1155 Call EdgeLookup.GetEdgeLookup, X0, X1
	1156 Move X8, 0x7EF000
	1157 Move X8, [X8+984]
	1158 Move X1, [X8]
	1159 Call Enumerable.Distinct, X0
	1160 Move X8, [X23]
	1161 Move X19, X0
	1162 Move W9, [X8+224]
	1163 Compare W9, 0
	1164 JumpIfNotEqual {1168}
	1165 Move X0, X8
	1166 Call 0x1C17DFC
	1167 Move X8, [X23]
	1168 Move X9, [X8+184]
	1169 Move X20, [X9+56]
	1170 Compare X20, 0
	1171 JumpIfNotEqual {1194}
	1172 Move W9, [X8+224]
	1173 Compare W9, 0
	1174 JumpIfNotEqual {1178}
	1175 Move X0, X8
	1176 Call 0x1C17DFC
	1177 Move X8, [X23]
	1178 Move X9, 0x7EF000
	1179 Move X8, [X8+184]
	1180 Move X9, [X9+1072]
	1181 Move X21, [X8]
	1182 Move X0, [X9]
	1183 Call 0x1C17F10
	1184 Move X8, 0x7EF000
	1185 Move X8, [X8+2496]
	1186 Move X1, X21
	1187 Move X3, X31
	1188 Move X20, X0
	1189 Move X2, [X8]
	1190 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	1191 Move X8, [X23]
	1192 Move X8, [X8+184]
	1193 Move [X8+56], X20
	1194 Move X8, 0x7EF000
	1195 Move X8, [X8+1000]
	1196 Move X0, X19
	1197 Move X1, X20
	1198 Move X2, [X8]
	1199 Call Enumerable.Select, X0, X1
	1200 Move X8, 0x7ED000
	1201 Move X8, [X8+3392]
	1202 Move X1, [X8]
	1203 Call Enumerable.ToArray, X0
	1204 Move X8, [X31+32]
	1205 Move [X8], X0
	1206 Move W8, [X31+16]
	1207 Move TEMP, X8
	1208 And TEMP, TEMP, 1
	1209 Compare TEMP, 1
	1210 JumpIfNotEqual {1218}
	1211 Compare X26, 0
	1212 JumpIfEqual {1295}
	1213 Move X8, 0x7EE000
	1214 Move X8, [X8+3128]
	1215 Move X0, X26
	1216 Move X1, [X8]
	1217 Call List`1<Object>.ToArray, X0
	1218 Move X0, X31
	1219 Move X8, [X31+24]
	1220 Move [X8], X0
	1221 Compare X25, 0
	1222 JumpIfEqual {1295}
	1223 Move X9, 0x793000
	1224 Move W8, [X25+24]
	1225 Move X9, [X9+1880]
	1226 Add X1, X31, 128
	1227 NotImplemented "Instruction CMP not yet implemented."
	1228 Move X0, [X9]
	1229 NotImplemented "Instruction CINC not yet implemented."
	1230 NotImplemented "Instruction SBFM not yet implemented."
	1231 Move [X31+128], W8
	1232 Call 0x1C17E04
	1233 Move X8, 0x7EF000
	1234 Move X8, [X8+2520]
	1235 Move X1, X0
	1236 Move X2, X31
	1237 Move X8, [X8]
	1238 Move X0, X8
	1239 Call String.Format, X0, X1
	1240 Move X8, 0x7ED000
	1241 Move X8, [X8+2520]
	1242 Move X20, X0
	1243 Move X8, [X8]
	1244 Move X0, X8
	1245 Call 0x1C17F10
	1246 Move W1, W31
	1247 Move X2, X20
	1248 Move X3, X31
	1249 Move X19, X0
	1250 Call ActionResult..ctor, X0, X1, X2
	1251 Move X0, X19
	1252 Move X20, [X31+416]
	1253 Move X19, [X31+424]
	1254 Move X22, [X31+400]
	1255 Move X21, [X31+408]
	1256 Move X24, [X31+384]
	1257 Move X23, [X31+392]
	1258 Move X26, [X31+368]
	1259 Move X25, [X31+376]
	1260 Move X28, [X31+352]
	1261 Move X27, [X31+360]
	1262 Move X29, [X31+336]
	1263 Move X30, [X31+344]
	1264 Move D9, [X31+320]
	1265 Move D8, [X31+328]
	1266 Move V10, [X31+304]
	1267 Add X31, X31, 432
	1268 Return X0
	1269 Move X8, [X31+32]
	1270 Move [X8], X31
	1271 Move X8, [X31+24]
	1272 Move [X8], X31
	1273 Move X8, 0x7ED000
	1274 Move X8, [X8+2520]
	1275 Move X0, [X8]
	1276 Call 0x1C17F10
	1277 Move X8, 0x7EF000
	1278 Move X8, [X8+2528]
	1279 Move X19, X0
	1280 Move X2, [X8]
	1281 Move W1, 1
	1282 Move X3, X31
	1283 Call ActionResult..ctor, X0, X1, X2
	1284 Move X8, 0x7EF000
	1285 Move X8, [X8+2320]
	1286 Add X0, X31, 224
	1287 Move X1, [X8]
	1288 Call Enumerator<Object, Object>.Dispose, X0
	1289 Move X8, 0x7EF000
	1290 Move X8, [X8+2320]
	1291 Add X0, X31, 224
	1292 Move X1, [X8]
	1293 Call Enumerator<Object, Object>.Dispose, X0
	1294 Move X19, X31
	1295 Call 0x1C17F20
	1296 Call 0x1C17F20
	1297 Call 0x1C17F20
	1298 Call 0x1C17F20
	1299 Call 0x1C17F20
	1300 Call 0x1C17F20
	1301 Call 0x1C17F20
	1302 Call 0x1C17F20
	1303 Call 0x1C17F20
	1304 Call 0x1C17F20
	1305 Call 0x1C17F20
	1306 Call 0x1C17F20
	1307 Call 0x1C17F20
	1308 Call 0x1C17F20
	1309 Call 0x1C17F20
	1310 Call 0x1C17F20
	1311 Call 0x1C17F20
	1312 Call 0x1C17F20
	1313 Call 0x1C17F20
	1314 Call 0x1C17F20
	1315 Call 0x1C17F20
	1316 Move X19, X0
	1317 Move X21, X31
	1318 Move X8, 0x7EF000
	1319 Move X8, [X8+2312]
	1320 Move X1, [X8]
	1321 Add X0, X31, 176
	1322 Call Enumerator<Object>.Dispose, X0
	1323 Move X0, X19
	1324 Compare X21, 0
	1325 JumpIfEqual {1338}
	1326 Move X0, X21
	1327 Call 0x1C17F18
	1328 Move X0, X21
	1329 Call 0x1C17F18
	1330 Call 0x1C17F20
	1331 Call 0x1C17F20
	1332 Move X23, X1
	1333 Move X19, X0
	1334 Move X24, 0x7EF000
	1335 Move X29, [X31+56]
	1336 Move X24, [X24+2336]
	1337 Move X23, X1
	1338 NotImplemented "Instruction CMP not yet implemented."
	1339 Call 0x3EB2AD0
	1340 Move X19, [X0]
	1341 Call 0x3EB2AE0
	1342 Move X8, 0x7EF000
	1343 Move X8, [X8+2320]
	1344 Add X0, X31, 224
	1345 Move X1, [X8]
	1346 Call Enumerator<Object, Object>.Dispose, X0
	1347 Compare X19, 0
	1348 JumpIfEqual {922}
	1349 Move X21, X0
	1350 Move X19, X31
	1351 Move X21, X0
	1352 Move X8, 0x7EF000
	1353 Move X8, [X8+2320]
	1354 Move X1, [X8]
	1355 Add X0, X31, 224
	1356 Call Enumerator<Object, Object>.Dispose, X0
	1357 Compare X19, 0
	1358 JumpIfEqual {1415}
	1359 Move X0, X19
	1360 Call 0x1C17F18
	1361 Move X24, 0x7EF000
	1362 Move X25, 0x7EE000
	1363 Move X29, [X31+56]
	1364 Move X24, [X24+2336]
	1365 Move X25, [X25+2816]
	1366 NotImplemented "Instruction CMP not yet implemented."
	1367 Call 0x3EB2AD0
	1368 Move X20, [X0]
	1369 Call 0x3EB2AE0
	1370 Move X8, 0x7EE000
	1371 Move X8, [X8+3480]
	1372 Add X0, X31, 272
	1373 Move X1, [X8]
	1374 Call Enumerator<Object>.Dispose, X0
	1375 Compare X20, 0
	1376 JumpIfEqual {438}
	1377 Move X0, X20
	1378 Call 0x1C17F18
	1379 Move X21, X0
	1380 Move X20, X31
	1381 Move X21, X0
	1382 Move X8, 0x7EE000
	1383 Move X8, [X8+3480]
	1384 Move X1, [X8]
	1385 Add X0, X31, 272
	1386 Call Enumerator<Object>.Dispose, X0
	1387 Compare X20, 0
	1388 JumpIfEqual {1415}
	1389 Move X0, X20
	1390 Call 0x1C17F18
	1391 Move X20, [X31+40]
	1392 NotImplemented "Instruction CMP not yet implemented."
	1393 Call 0x3EB2AD0
	1394 Move X19, [X0]
	1395 Call 0x3EB2AE0
	1396 Move X8, 0x7EF000
	1397 Move X8, [X8+2320]
	1398 Add X0, X31, 224
	1399 Move X1, [X8]
	1400 Call Enumerator<Object, Object>.Dispose, X0
	1401 Compare X19, 0
	1402 JumpIfEqual {510}
	1403 Move X0, X19
	1404 Call 0x1C17F18
	1405 Move X21, X0
	1406 Move X19, X31
	1407 Move X21, X0
	1408 Move X8, 0x7EF000
	1409 Move X8, [X8+2320]
	1410 Move X1, [X8]
	1411 Add X0, X31, 224
	1412 Call Enumerator<Object, Object>.Dispose, X0
	1413 Compare X19, 0
	1414 JumpIfNotEqual {1417}
	1415 Move X0, X21
	1416 Call 0x1D2D690
	1417 Move X0, X19
	1418 Call 0x1C17F18
	1419 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.MeshOperations.ConnectFaceRebuildData> ConnectEdgesInFace(UnityEngine.ProBuilder.Face face, UnityEngine.ProBuilder.WingedEdge a, UnityEngine.ProBuilder.WingedEdge b, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices)

Disassembly:
	0x03965000 MOV X2, X31
	0x03965004 BL 0x3912114
	0x03965008 LDR X2, [X22]
	0x0396500C MOV X1, X21
	0x03965010 BL 0x217FF94
	0x03965014 LDR X8, [X23]
	0x03965018 MOV X27, X0
	0x0396501C MOV X0, X8
	0x03965020 BL 0x1C16F10
	0x03965024 LDR X1, [X24]
	0x03965028 MOV X23, X0
	0x0396502C BL 0x2A09A9C
	0x03965030 CMP W25, 0x1
	0x03965034 B.LT 0x3965080
	0x03965038 ADRP X22, 0x7E9000
	0x0396503C ADRP X26, 0x798000
	0x03965040 LDR X22, [X22 + 0xD50]
	0x03965044 LDR X26, [X26 + 0x858]
	0x03965048 MOV W24, W31
	0x0396504C LDR X2, [X22]
	0x03965050 MOV X0, X21
	0x03965054 MOV W1, W24
	0x03965058 BL 0x217F01C
	0x0396505C CBZ X23, 0x39651D4
	0x03965060 LDR X3, [X26]
	0x03965064 ADD W2, W0, 0x1
	0x03965068 MOV X0, X23
	0x0396506C MOV W1, W24
	0x03965070 BL 0x2A0A344
	0x03965074 ADD W24, W24, 0x1
	0x03965078 CMP W25, W24
	0x0396507C B.NE 0x396504C
	0x03965080 STR X27, [X31 + 0x8]
	0x03965084 CBZ X20, 0x39651D4
	0x03965088 LDR W8, [X20 + 0x18]
	0x0396508C CMP W8, 0x1
	0x03965090 B.LT 0x396513C
	0x03965094 ADRP X27, 0x7E8000
	0x03965098 LDR X27, [X27 + 0xC80]
	0x0396509C MOV W26, W31
	0x039650A0 CMP W26, W8
	0x039650A4 B.CS 0x39651D8
	0x039650A8 ADD X28, X20, W26, 0x3, SXTW
	0x039650AC LDR X8, [X28 + 0x20]!
	0x039650B0 CBZ X8, 0x39651D4
	0x039650B4 LDR X24, [X8 + 0x10]
	0x039650B8 CBZ X24, 0x39651D4
	0x039650BC LDR X8, [X24 + 0x18]
	0x039650C0 CMP W8, 0x1
	0x039650C4 B.LT 0x396510C
	0x039650C8 MOV X29, X31
	0x039650CC AND X8, X8, 0x0
	0x039650D0 ADD X22, X24, 0x20
	0x039650D4 CMP X29, W8, UXTW
	0x039650D8 B.CS 0x39651D8
	0x039650DC CBZ X23, 0x39651D4
	0x039650E0 LDR W25, [X22, X29, LSL #2]
	0x039650E4 LDR X2, [X27]
	0x039650E8 MOV X0, X23
	0x039650EC MOV W1, W25
	0x039650F0 BL 0x2A0A2A8
	0x039650F4 SUB W8, W25, W0
	0x039650F8 STR W8, [X22, X29, LSL #2]
	0x039650FC LDR W8, [X24 + 0x18]
	0x03965100 ADD X29, X29, 0x1
	0x03965104 CMP X29, W8, SXTW
	0x03965108 B.LT 0x39650D4
	0x0396510C LDR W8, [X20 + 0x18]
	0x03965110 CMP W26, W8
	0x03965114 B.CS 0x39651D8
	0x03965118 LDR X0, [X28]
	0x0396511C CBZ X0, 0x39651D4
	0x03965120 MOV X1, X24
	0x03965124 MOV X2, X31
	0x03965128 BL 0x38FFBA8
	0x0396512C LDR W8, [X20 + 0x18]
	0x03965130 ADD W26, W26, 0x1
	0x03965134 CMP W26, W8
	0x03965138 B.LT 0x39650A0
	0x0396513C ADRP X22, 0x78F000
	0x03965140 LDR X22, [X22 + 0xE18]
	0x03965144 LDR X1, [X31 + 0x8]
	0x03965148 MOV X0, X19
	0x0396514C MOV W2, W31
	0x03965150 MOV X3, X31
	0x03965154 BL 0x3916CF4
	0x03965158 MOV X0, X19
	0x0396515C MOV X1, X31
	0x03965160 BL 0x3916198
	0x03965164 MOV X1, X21
	0x03965168 MOV X2, X31
	0x0396516C BL 0x3935990
	0x03965170 MOV X1, X0
	0x03965174 MOV X0, X19
	0x03965178 MOV X2, X31
	0x0396517C BL 0x3915EF8
	0x03965180 MOV X0, X19
	0x03965184 MOV X1, X31
	0x03965188 BL 0x39162B4
	0x0396518C MOV X1, X21
	0x03965190 MOV X2, X31
	0x03965194 BL 0x3935990
	0x03965198 MOV X1, X0
	0x0396519C MOV X0, X19
	0x039651A0 MOV X2, X31
	0x039651A4 BL 0x39162AC
	0x039651A8 STR X20, [X19 + 0x28]
	0x039651AC LDR X1, [X22]
	0x039651B0 MOV X0, X21
	0x039651B4 LDP X20, X19, [X31 + 0x60]
	0x039651B8 LDP X22, X21, [X31 + 0x50]
	0x039651BC LDP X24, X23, [X31 + 0x40]
	0x039651C0 LDP X26, X25, [X31 + 0x30]
	0x039651C4 LDP X28, X27, [X31 + 0x20]
	0x039651C8 LDP X29, X30, [X31 + 0x10]
	0x039651CC ADD X31, X31, 0x70
	0x039651D0 B 0x2FDE4C8
	0x039651D4 BL 0x1C16F20
	0x039651D8 BL 0x1C16F28
	0x039651DC ADRP X0, 0x793000
	0x039651E0 LDR X0, [X0 + 0x528]
	0x039651E4 BL 0x1C16D08
	0x039651E8 BL 0x1C16F10
	0x039651EC MOV X19, X0
	0x039651F0 ADRP X0, 0x7E8000
	0x039651F4 LDR X0, [X0 + 0xE90]
	0x039651F8 B 0x3965218
	0x039651FC ADRP X0, 0x793000
	0x03965200 LDR X0, [X0 + 0x528]
	0x03965204 BL 0x1C16D08
	0x03965208 BL 0x1C16F10
	0x0396520C MOV X19, X0
	0x03965210 ADRP X0, 0x7EA000
	0x03965214 LDR X0, [X0 + 0xAE8]
	0x03965218 BL 0x1C16D08
	0x0396521C MOV X1, X0
	0x03965220 MOV X0, X19
	0x03965224 MOV X2, X31
	0x03965228 BL 0x330E100
	0x0396522C ADRP X0, 0x7EA000
	0x03965230 LDR X0, [X0 + 0xAF0]
	0x03965234 BL 0x1C16D08
	0x03965238 MOV X1, X0
	0x0396523C MOV X0, X19
	0x03965240 BL 0x1C16DEC
	0x03965244 STR X30, [X31 - 0x30]!
	0x03965248 STP X22, X21, [X31 + 0x10]
	0x0396524C STP X20, X19, [X31 + 0x20]
	0x03965250 ADRP X21, 0xA7C000
	0x03965254 ADRP X22, 0x78F000
	0x03965258 ADRP X20, 0x792000
	0x0396525C LDRB W8, [X21 + 0x9C3]
	0x03965260 LDR X22, [X22 + 0xE30]
	0x03965264 LDR X20, [X20 + 0xB70]
	0x03965268 MOV X19, X0
	0x0396526C TBNZ X8, 0x0, 0x396529C
	0x03965270 ADRP X0, 0x78F000
	0x03965274 LDR X0, [X0 + 0xE18]
	0x03965278 BL 0x1C16CF4
	0x0396527C ADRP X0, 0x792000
	0x03965280 LDR X0, [X0 + 0xB70]
	0x03965284 BL 0x1C16CF4
	0x03965288 ADRP X0, 0x78F000
	0x0396528C LDR X0, [X0 + 0xE30]
	0x03965290 BL 0x1C16CF4
	0x03965294 MOVZ W8, 0x1
	0x03965298 STRB W8, [X21 + 0x9C3]
	0x0396529C LDR X0, [X22]
	0x039652A0 BL 0x1C16F10
	0x039652A4 LDR X1, [X20]
	0x039652A8 MOV X20, X0
	0x039652AC BL 0x2FDBF14
	0x039652B0 MOV X0, X19
	0x039652B4 MOV X1, X20
	0x039652B8 MOV X2, X31
	0x039652BC BL 0x3976B28
	0x039652C0 CBZ X20, 0x39652E4
	0x039652C4 ADRP X8, 0x78F000
	0x039652C8 LDR X8, [X8 + 0xE18]
	0x039652CC MOV X0, X20
	0x039652D0 LDP X20, X19, [X31 + 0x20]
	0x039652D4 LDP X22, X21, [X31 + 0x10]
	0x039652D8 LDR X1, [X8]
	0x039652DC LDR X30, [X31], #0x30
	0x039652E0 B 0x2FDE4C8
	0x039652E4 BL 0x1C16F20
	0x039652E8 STR X30, [X31 - 0x30]!
	0x039652EC STP X22, X21, [X31 + 0x10]
	0x039652F0 STP X20, X19, [X31 + 0x20]
	0x039652F4 ADRP X21, 0xA7C000
	0x039652F8 ADRP X22, 0x78F000
	0x039652FC ADRP X20, 0x792000
	0x03965300 LDRB W8, [X21 + 0x9C4]
	0x03965304 LDR X22, [X22 + 0xE30]
	0x03965308 LDR X20, [X20 + 0xB70]
	0x0396530C MOV X19, X0
	0x03965310 TBNZ X8, 0x0, 0x3965340
	0x03965314 ADRP X0, 0x78F000
	0x03965318 LDR X0, [X0 + 0xE18]
	0x0396531C BL 0x1C16CF4
	0x03965320 ADRP X0, 0x792000
	0x03965324 LDR X0, [X0 + 0xB70]
	0x03965328 BL 0x1C16CF4
	0x0396532C ADRP X0, 0x78F000
	0x03965330 LDR X0, [X0 + 0xE30]
	0x03965334 BL 0x1C16CF4
	0x03965338 MOVZ W8, 0x1
	0x0396533C STRB W8, [X21 + 0x9C4]
	0x03965340 LDR X0, [X22]
	0x03965344 BL 0x1C16F10
	0x03965348 LDR X1, [X20]
	0x0396534C MOV X20, X0
	0x03965350 BL 0x2FDBF14
	0x03965354 MOV X0, X19
	0x03965358 MOV X1, X20
	0x0396535C MOV X2, X31
	0x03965360 BL 0x39738AC
	0x03965364 CBZ X20, 0x3965388
	0x03965368 ADRP X8, 0x78F000
	0x0396536C LDR X8, [X8 + 0xE18]
	0x03965370 MOV X0, X20
	0x03965374 LDP X20, X19, [X31 + 0x20]
	0x03965378 LDP X22, X21, [X31 + 0x10]
	0x0396537C LDR X1, [X8]
	0x03965380 LDR X30, [X31], #0x30
	0x03965384 B 0x2FDE4C8
	0x03965388 BL 0x1C16F20
	0x0396538C STR X30, [X31 - 0x20]!
	0x03965390 STP X20, X19, [X31 + 0x10]
	0x03965394 ADRP X19, 0xA7C000
	0x03965398 ADRP X20, 0x7EA000
	0x0396539C LDRB W8, [X19 + 0x9C5]
	0x039653A0 LDR X20, [X20 + 0xAE0]
	0x039653A4 TBNZ X8, 0x0, 0x39653BC
	0x039653A8 ADRP X0, 0x7EA000
	0x039653AC LDR X0, [X0 + 0xAE0]
	0x039653B0 BL 0x1C16CF4
	0x039653B4 MOVZ W8, 0x1
	0x039653B8 STRB W8, [X19 + 0x9C5]
	0x039653BC LDR X0, [X20]
	0x039653C0 BL 0x1C16F10
	0x039653C4 MOV X1, X31
	0x039653C8 MOV X19, X0
	0x039653CC BL 0x33BDD8C
	0x039653D0 LDR X8, [X20]
	0x039653D4 LDR X8, [X8 + 0xB8]
	0x039653D8 STR X19, [X8]
	0x039653DC LDP X20, X19, [X31 + 0x10]
	0x039653E0 LDR X30, [X31], #0x20
	0x039653E4 RET
	0x039653E8 MOV X1, X31
	0x039653EC B 0x33BDD8C
	0x039653F0 CBZ X1, 0x3965400
	0x039653F4 MOV X0, X1
	0x039653F8 MOV X1, X31
	0x039653FC B 0x38FF530
	0x03965400 STR X30, [X31 - 0x10]!
	0x03965404 BL 0x1C16F20
	0x03965408 STP X30, X21, [X31 - 0x20]!
	0x0396540C STP X20, X19, [X31 + 0x10]
	0x03965410 ADRP X21, 0xA7C000
	0x03965414 LDRB W8, [X21 + 0x9C6]
	0x03965418 MOV X19, X1
	0x0396541C MOV X20, X0
	0x03965420 TBNZ X8, 0x0, 0x3965444
	0x03965424 ADRP X0, 0x7E5000
	0x03965428 LDR X0, [X0 + 0x360]
	0x0396542C BL 0x1C16CF4
	0x03965430 ADRP X0, 0x7EA000
	0x03965434 LDR X0, [X0 + 0xAF8]
	0x03965438 BL 0x1C16CF4
	0x0396543C MOVZ W8, 0x1
	0x03965440 STRB W8, [X21 + 0x9C6]
	0x03965444 LDR X0, [X20 + 0x10]
	0x03965448 CBZ X0, 0x3965470
	0x0396544C ADRP X8, 0x7EA000
	0x03965450 LDR X8, [X8 + 0xAF8]
	0x03965454 MOV W1, W19
	0x03965458 LDR X2, [X8]
	0x0396545C BL 0x2FDCA34
	0x03965460 LDP X20, X19, [X31 + 0x10]
	0x03965464 UBFM W0, W0, 0x1F, 0x1F
	0x03965468 LDP X30, X21, [X31], #0x20
	0x0396546C RET
	0x03965470 BL 0x1C16F20
	0x03965474 SUB X31, X31, 0x30
	0x03965478 STP X30, X21, [X31 + 0x10]
	0x0396547C STP X20, X19, [X31 + 0x20]
	0x03965480 ADRP X21, 0xA7C000
	0x03965484 LDRB W8, [X21 + 0x9C7]
	0x03965488 MOV X19, X1
	0x0396548C MOV X20, X0
	0x03965490 TBNZ X8, 0x0, 0x39654C0
	0x03965494 ADRP X0, 0x7E5000
	0x03965498 LDR X0, [X0 + 0x358]
	0x0396549C BL 0x1C16CF4
	0x039654A0 ADRP X0, 0x7E5000
	0x039654A4 LDR X0, [X0 + 0x360]
	0x039654A8 BL 0x1C16CF4
	0x039654AC ADRP X0, 0x7E5000
	0x039654B0 LDR X0, [X0 + 0x3D0]
	0x039654B4 BL 0x1C16CF4
	0x039654B8 MOVZ W8, 0x1
	0x039654BC STRB W8, [X21 + 0x9C7]
	0x039654C0 LDR X8, [X20 + 0x18]
	0x039654C4 CBZ X8, 0x3965514
	0x039654C8 LDR W9, [X8 + 0x18]
	0x039654CC CMP W19, W9
	0x039654D0 B.CS 0x3965518
	0x039654D4 ADRP X9, 0x7E5000
	0x039654D8 LDR X9, [X9 + 0x358]
	0x039654DC UBFM X10, X19, 0x20, 0x1F
	0x039654E0 ADD X8, X8, X10, 0x1E, ASR
	0x039654E4 LDR W8, [X8 + 0x20]
	0x039654E8 LDR X3, [X9]
	0x039654EC UBFM X2, X19, 0x20, 0x3F
	0x039654F0 ADD X0, X31, 0x8
	0x039654F4 SUB W1, W19, W8
	0x039654F8 STR X31, [X31 + 0x8]
	0x039654FC BL 0x2EDEF20
	0x03965500 LDR X0, [X31 + 0x8]
	0x03965504 LDP X20, X19, [X31 + 0x20]
	0x03965508 LDP X30, X21, [X31 + 0x10]
	0x0396550C ADD X31, X31, 0x30
	0x03965510 RET
	0x03965514 BL 0x1C16F20
	0x03965518 BL 0x1C16F28
	0x0396551C STP X30, X21, [X31 - 0x20]!
	0x03965520 STP X20, X19, [X31 + 0x10]
	0x03965524 ADRP X21, 0xA7C000
	0x03965528 LDRB W8, [X21 + 0x9C8]
	0x0396552C MOV X19, X1
	0x03965530 MOV X20, X0
	0x03965534 TBNZ X8, 0x0, 0x3965558
	0x03965538 ADRP X0, 0x7E5000
	0x0396553C LDR X0, [X0 + 0x360]
	0x03965540 BL 0x1C16CF4
	0x03965544 ADRP X0, 0x7EA000
	0x03965548 LDR X0, [X0 + 0xAF8]
	0x0396554C BL 0x1C16CF4
	0x03965550 MOVZ W8, 0x1
	0x03965554 STRB W8, [X21 + 0x9C8]
	0x03965558 LDR X0, [X20 + 0x10]
	0x0396555C CBZ X0, 0x3965584
	0x03965560 ADRP X8, 0x7EA000
	0x03965564 LDR X8, [X8 + 0xAF8]
	0x03965568 MOV W1, W19
	0x0396556C LDR X2, [X8]
	0x03965570 BL 0x2FDCA34
	0x03965574 LDP X20, X19, [X31 + 0x10]
	0x03965578 UBFM W0, W0, 0x1F, 0x1F
	0x0396557C LDP X30, X21, [X31], #0x20
	0x03965580 RET
	0x03965584 BL 0x1C16F20
	0x03965588 SUB X31, X31, 0x30
	0x0396558C STP X30, X21, [X31 + 0x10]
	0x03965590 STP X20, X19, [X31 + 0x20]
	0x03965594 ADRP X21, 0xA7C000
	0x03965598 LDRB W8, [X21 + 0x9C9]
	0x0396559C MOV X19, X1
	0x039655A0 MOV X20, X0
	0x039655A4 TBNZ X8, 0x0, 0x39655D4
	0x039655A8 ADRP X0, 0x7E5000
	0x039655AC LDR X0, [X0 + 0x358]
	0x039655B0 BL 0x1C16CF4
	0x039655B4 ADRP X0, 0x7E5000
	0x039655B8 LDR X0, [X0 + 0x360]
	0x039655BC BL 0x1C16CF4
	0x039655C0 ADRP X0, 0x7E5000
	0x039655C4 LDR X0, [X0 + 0x3D0]
	0x039655C8 BL 0x1C16CF4
	0x039655CC MOVZ W8, 0x1
	0x039655D0 STRB W8, [X21 + 0x9C9]
	0x039655D4 LDR X8, [X20 + 0x18]
	0x039655D8 CBZ X8, 0x3965628
	0x039655DC LDR W9, [X8 + 0x18]
	0x039655E0 CMP W19, W9
	0x039655E4 B.CS 0x396562C
	0x039655E8 ADRP X9, 0x7E5000
	0x039655EC LDR X9, [X9 + 0x358]
	0x039655F0 UBFM X10, X19, 0x20, 0x1F
	0x039655F4 ADD X8, X8, X10, 0x1E, ASR
	0x039655F8 LDR W8, [X8 + 0x20]
	0x039655FC LDR X3, [X9]
	0x03965600 UBFM X2, X19, 0x20, 0x3F
	0x03965604 ADD X0, X31, 0x8
	0x03965608 SUB W1, W19, W8
	0x0396560C STR X31, [X31 + 0x8]
	0x03965610 BL 0x2EDEF20
	0x03965614 LDR X0, [X31 + 0x8]
	0x03965618 LDP X20, X19, [X31 + 0x20]
	0x0396561C LDP X30, X21, [X31 + 0x10]
	0x03965620 ADD X31, X31, 0x30
	0x03965624 RET
	0x03965628 BL 0x1C16F20
	0x0396562C BL 0x1C16F28
	0x03965630 STP X30, X21, [X31 - 0x20]!
	0x03965634 STP X20, X19, [X31 + 0x10]
	0x03965638 ADRP X21, 0xA7C000
	0x0396563C LDRB W8, [X21 + 0x9CA]
	0x03965640 MOV X19, X1
	0x03965644 MOV X20, X0
	0x03965648 TBNZ X8, 0x0, 0x3965660
	0x0396564C ADRP X0, 0x7E9000
	0x03965650 LDR X0, [X0 + 0x6E8]
	0x03965654 BL 0x1C16CF4
	0x03965658 MOVZ W8, 0x1
	0x0396565C STRB W8, [X21 + 0x9CA]
	0x03965660 LDR X8, [X20 + 0x10]
	0x03965664 CBZ X8, 0x3965688
	0x03965668 ADRP X9, 0x7E9000
	0x0396566C LDR X9, [X9 + 0x6E8]
	0x03965670 LDR X0, [X8 + 0x28]
	0x03965674 MOV X1, X19
	0x03965678 LDP X20, X19, [X31 + 0x10]
	0x0396567C LDR X2, [X9]
	0x03965680 LDP X30, X21, [X31], #0x20
	0x03965684 B 0x22E75A0
	0x03965688 BL 0x1C16F20
	0x0396568C SUB X31, X31, 0x70
	0x03965690 STP X29, X30, [X31 + 0x10]
	0x03965694 STP X28, X27, [X31 + 0x20]
	0x03965698 STP X26, X25, [X31 + 0x30]
	0x0396569C STP X24, X23, [X31 + 0x40]
	0x039656A0 STP X22, X21, [X31 + 0x50]
	0x039656A4 STP X20, X19, [X31 + 0x60]
	0x039656A8 ADRP X21, 0xA7C000
	0x039656AC LDRB W8, [X21 + 0x9CB]
	0x039656B0 MOV X19, X2
	0x039656B4 MOV X22, X1
	0x039656B8 MOV X20, X0
	0x039656BC TBNZ X8, 0x0, 0x39656EC
	0x039656C0 ADRP X0, 0x7E8000
	0x039656C4 LDR X0, [X0 + 0xC80]
	0x039656C8 BL 0x1C16CF4
	0x039656CC ADRP X0, 0x7B6000
	0x039656D0 LDR X0, [X0 + 0x600]
	0x039656D4 BL 0x1C16CF4
	0x039656D8 ADRP X0, 0x7E8000
	0x039656DC LDR X0, [X0 + 0xE10]
	0x039656E0 BL 0x1C16CF4
	0x039656E4 MOVZ W8, 0x1
	0x039656E8 STRB W8, [X21 + 0x9CB]
	0x039656EC STP X31, X31, [X31]
	0x039656F0 CBZ X20, 0x39658E8
	0x039656F4 MOV X0, X20
	0x039656F8 MOV X1, X31
	0x039656FC BL 0x3916198
	0x03965700 CBZ X0, 0x39658E8
	0x03965704 ADRP X24, 0x7E8000
	0x03965708 LDR X24, [X24 + 0xC80]
	0x0396570C ADRP X25, 0x7B6000
	0x03965710 MOV W1, W22
	0x03965714 MOV X21, X0
	0x03965718 LDR X2, [X24]
	0x0396571C LDR X25, [X25 + 0x600]
	0x03965720 UBFM X23, X22, 0x20, 0x3F
	0x03965724 BL 0x2A0A2A8
	0x03965728 LDR X2, [X24]
	0x0396572C MOV W22, W0
	0x03965730 MOV X0, X21
	0x03965734 MOV W1, W23
	0x03965738 BL 0x2A0A2A8
	0x0396573C LDR X8, [X25]
	0x03965740 MOV W23, W0
	0x03965744 LDR W9, [X8 + 0xE0]
	0x03965748 CBNZ W9, 0x3965754
	0x0396574C MOV X0, X8
	0x03965750 BL 0x1C16DFC
	0x03965754 ADD X0, X31, 0x8
	0x03965758 MOV W1, W22
	0x0396575C MOV W2, W23
	0x03965760 MOV X3, X31
	0x03965764 BL 0x38FDC24
	0x03965768 ADD X0, X31, 0x0
	0x0396576C MOV W1, W31
	0x03965770 MOV W2, W31
	0x03965774 MOV X3, X31
	0x03965778 BL 0x38FDC24
	0x0396577C LDR X8, [X20 + 0x28]
	0x03965780 CBZ X8, 0x39658E8
	0x03965784 ADRP X25, 0x7E8000
	0x03965788 LDR X25, [X25 + 0xE10]
	0x0396578C MOV W23, W31
	0x03965790 LDR W9, [X8 + 0x18]
	0x03965794 CMP W23, W9
	0x03965798 B.GE 0x39658EC
	0x0396579C CMP W23, W9
	0x039657A0 B.CS 0x396590C
	0x039657A4 SXTW X26, W23
	0x039657A8 ADD X8, X8, X26, 0x3, LSL
	0x039657AC LDR X0, [X8 + 0x20]
	0x039657B0 CBZ X0, 0x39658E8
	0x039657B4 MOV X1, X31
	0x039657B8 BL 0x38FFA80
	0x039657BC CBZ X0, 0x39658E8
	0x039657C0 LDR X8, [X0 + 0x18]
	0x039657C4 MOV X22, X0
	0x039657C8 CMP W8, 0x1
	0x039657CC B.LT 0x39658DC
	0x039657D0 MOV X27, X31
	0x039657D4 AND X8, X8, 0x0
	0x039657D8 ADD X28, X22, 0x20
	0x039657DC CMP X27, W8, UXTW
	0x039657E0 B.CS 0x396590C
	0x039657E4 LDR V0, [X28, X27, LSL #3]
	0x039657E8 LDR X2, [X24]
	0x039657EC LDR W29, [X31 + 0x8]
	0x039657F0 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+24], X3
	015 Move X23, 0xA7D000
	016 Move X20, 0x7EA000
	017 Move W8, [X23+2482]
	018 Move X20, [X20+2824]
	019 Move X26, X2
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {82}
	026 Move X0, 0x7EB000
	027 Move X0, [X0+2656]
	028 Call 0x1C17CF4
	029 Move X0, 0x7B7000
	030 Move X0, [X0+1536]
	031 Call 0x1C17CF4
	032 Move X0, 0x7EA000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move X0, 0x7EB000
	036 Move X0, [X0+2704]
	037 Call 0x1C17CF4
	038 Move X0, 0x790000
	039 Move X0, [X0+3600]
	040 Call 0x1C17CF4
	041 Move X0, 0x7EB000
	042 Move X0, [X0+2424]
	043 Call 0x1C17CF4
	044 Move X0, 0x7EB000
	045 Move X0, [X0+448]
	046 Call 0x1C17CF4
	047 Move X0, 0x793000
	048 Move X0, [X0+2928]
	049 Call 0x1C17CF4
	050 Move X0, 0x7EB000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move X0, 0x7EB000
	054 Move X0, [X0+456]
	055 Call 0x1C17CF4
	056 Move X0, 0x7E9000
	057 Move X0, [X0+3608]
	058 Call 0x1C17CF4
	059 Move X0, 0x7EA000
	060 Move X0, [X0+4064]
	061 Call 0x1C17CF4
	062 Move X0, 0x7EB000
	063 Move X0, [X0+464]
	064 Call 0x1C17CF4
	065 Move X0, 0x7EA000
	066 Move X0, [X0+4072]
	067 Call 0x1C17CF4
	068 Move X0, 0x790000
	069 Move X0, [X0+3632]
	070 Call 0x1C17CF4
	071 Move X0, 0x7EB000
	072 Move X0, [X0+2464]
	073 Call 0x1C17CF4
	074 Move X0, 0x7E9000
	075 Move X0, [X0+3560]
	076 Call 0x1C17CF4
	077 Move X0, 0x7EA000
	078 Move X0, [X0+2824]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X23+2482], W8
	082 Move X0, [X20]
	083 Move [X31+40], X31
	084 Move X23, 0x7EB000
	085 Move X19, 0x7E9000
	086 Move X20, 0x7EB000
	087 Move W8, [X0+224]
	088 Move X23, [X23+2704]
	089 Move X19, [X19+3560]
	090 Move X20, [X20+456]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X22
	095 Move X1, X31
	096 Call WingedEdge.SortEdgesByAdjacency, X0
	097 Move X8, [X23]
	098 Move X29, X0
	099 Move W1, 2
	100 Move X0, X8
	101 Call 0x1C17D6C
	102 Move X8, [X19]
	103 Move X22, X0
	104 Move X0, X8
	105 Call 0x1C17F10
	106 Move X1, [X20]
	107 Move X23, X0
	108 Call List`1<Object>..ctor, X0
	109 Compare X22, 0
	110 JumpIfEqual {537}
	111 Compare X23, 0
	112 JumpIfEqual {119}
	113 Move X8, [X22]
	114 Move X0, X23
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {539}
	119 Move W8, [X22+24]
	120 Compare W8, 0
	121 JumpIfEqual {538}
	122 Move [X22+32], X23
	123 Move X0, [X19]
	124 Call 0x1C17F10
	125 Move X1, [X20]
	126 Move X23, X0
	127 Call List`1<Object>..ctor, X0
	128 Compare X23, 0
	129 JumpIfEqual {136}
	130 Move X8, [X22]
	131 Move X0, X23
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {539}
	136 Move W8, [X22+24]
	137 Move [X31+8], X26
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, 0x7EA000
	140 Move X8, [X8+3624]
	141 Move [X22+40], X23
	142 Move X26, 0x790000
	143 Move X20, 0x793000
	144 Move X0, [X8]
	145 Move X26, [X26+3632]
	146 Move X20, [X20+2928]
	147 Move W1, 2
	148 Call 0x1C17D6C
	149 Move X8, [X26]
	150 Move X19, X0
	151 Move X0, X8
	152 Call 0x1C17F10
	153 Move X1, [X20]
	154 Move X23, X0
	155 Call List`1<Int32>..ctor, X0
	156 Compare X19, 0
	157 JumpIfEqual {537}
	158 Compare X23, 0
	159 JumpIfEqual {166}
	160 Move X8, [X19]
	161 Move X0, X23
	162 Move X1, [X8+64]
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {539}
	166 Move W8, [X19+24]
	167 Compare W8, 0
	168 JumpIfEqual {538}
	169 Move [X19+32], X23
	170 Move X0, [X26]
	171 Call 0x1C17F10
	172 Move X1, [X20]
	173 Move X20, X0
	174 Call List`1<Int32>..ctor, X0
	175 Compare X20, 0
	176 JumpIfEqual {183}
	177 Move X8, [X19]
	178 Move X0, X20
	179 Move X1, [X8+64]
	180 Call 0x1C17E00
	181 Compare X0, 0
	182 JumpIfEqual {539}
	183 Move W8, [X19+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X19+40], X20
	186 Compare X29, 0
	187 JumpIfEqual {537}
	188 Move W8, [X29+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X27, 0x7EA000
	191 Move X24, 0x7EB000
	192 Move X20, 0x7B7000
	193 Move X27, [X27+4072]
	194 Move X24, [X24+448]
	195 Move X20, [X20+1536]
	196 Move W23, W31
	197 Move W25, W31
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W9, [X22+24]
	200 NotImplemented "Instruction CINC not yet implemented."
	201 And W8, W8, 0xFFFFFFFE
	202 Subtract W8, W25, W8
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X8, W8
	205 Move [X31+32], X8
	206 Add X28, X22, X8
	207 Add X28, X28, 32
	208 Move X26, [X28]
	209 Move X2, [X27]
	210 Move X0, X29
	211 Move W1, W23
	212 Call List`1<Edge>.get_Item, X0, X1
	213 Move X1, X0
	214 Move X0, [X31+24]
	215 Compare X0, 0
	216 JumpIfEqual {537}
	217 Move X8, 0x7EB000
	218 Move X8, [X8+464]
	219 Move X2, [X8]
	220 Call List`1<Object>.get_Item, X0, X1
	221 Compare X26, 0
	222 JumpIfEqual {537}
	223 Move W10, [X26+28]
	224 Move X8, [X26+16]
	225 Move X9, [X24]
	226 Add W10, W10, 1
	227 Move [X26+28], W10
	228 Compare X8, 0
	229 JumpIfEqual {537}
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Move W11, [X8+24]
	232 Move X1, X0
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add W9, W10, 1
	235 Add X8, X8, X10
	236 Move [X26+24], W9
	237 Move [X8+32], X1
	238 Move X8, [X9+32]
	239 Move X0, X26
	240 Move X8, [X8+192]
	241 Move X2, [X8+112]
	242 Call List`1<Object>.AddWithResize, X0, X1
	243 Move X2, [X27]
	244 Move X0, X29
	245 Move W1, W23
	246 Call List`1<Edge>.get_Item, X0, X1
	247 Move [X31+40], X0
	248 Compare X21, 0
	249 JumpIfEqual {537}
	250 Move X0, [X20]
	251 Move X26, [X21+16]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Add X0, X31, 40
	257 Move X1, X26
	258 Move X2, X31
	259 Call Edge.Equals, X0, X1
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {286}
	264 Move X2, [X27]
	265 Move X0, X29
	266 Move W1, W23
	267 Call List`1<Edge>.get_Item, X0, X1
	268 Move X9, [X31+8]
	269 Move [X31+40], X0
	270 Compare X9, 0
	271 JumpIfEqual {537}
	272 Move X0, [X20]
	273 Move X26, [X9+16]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Add X0, X31, 40
	279 Move X1, X26
	280 Move X2, X31
	281 Call Edge.Equals, X0, X1
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfNotEqual {455}
	286 Move X2, [X27]
	287 Move X0, X29
	288 Move W1, W23
	289 Move [X31+20], W25
	290 Move X25, X24
	291 Move X20, X22
	292 Call List`1<Edge>.get_Item, X0, X1
	293 Move X8, 0x7EB000
	294 Move X8, [X8+464]
	295 Move X24, X29
	296 Move X29, [X31+24]
	297 Move X1, X0
	298 Move X2, [X8]
	299 Move X26, X27
	300 Move X0, X29
	301 Call List`1<Object>.get_Item, X0, X1
	302 Move X2, [X27]
	303 Move X26, X0
	304 Move X0, X24
	305 Move W1, W23
	306 Move X22, X24
	307 Move W24, W23
	308 Call List`1<Edge>.get_Item, X0, X1
	309 Move X8, 0x7EB000
	310 Move X8, [X8+464]
	311 Move X1, X0
	312 ShiftRight X1, 32
	313 And X1, X1, 0x7FFFFFFF
	314 Move X0, X29
	315 Move X2, [X8]
	316 Call List`1<Object>.get_Item, X0, X1
	317 Move X1, X0
	318 Move S0, 0.5
	319 Move X0, X26
	320 Move X2, X31
	321 Call Vertex.Mix, X0, X1, V0
	322 Move W8, [X19+24]
	323 Move X13, [X31+32]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move W8, [X20+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X9, [X28]
	328 Compare X9, 0
	329 JumpIfEqual {537}
	330 Add X10, X19, X13
	331 Move X26, X0
	332 Move X0, [X10+32]
	333 Compare X0, 0
	334 JumpIfEqual {537}
	335 Move X10, 0x790000
	336 Move W1, [X9+24]
	337 Move W11, [X0+28]
	338 Move X9, [X0+16]
	339 Move X10, [X10+3600]
	340 Move X29, X22
	341 Move X22, X20
	342 Move W20, [X31+20]
	343 Move X10, [X10]
	344 Add W11, W11, 1
	345 Move [X0+28], W11
	346 Compare X9, 0
	347 JumpIfEqual {537}
	348 NotImplemented "Instruction LDRSW not yet implemented."
	349 Move W12, [X9+24]
	350 Move W23, W24
	351 Move X24, X25
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Add W10, W11, 1
	354 Add X9, X9, X11
	355 Move [X0+24], W10
	356 Move [X9+32], W1
	357 Move X8, [X10+32]
	358 Move X8, [X8+192]
	359 Move X2, [X8+112]
	360 Call List`1<Int32>.AddWithResize, X0, X1
	361 Move X13, [X31+32]
	362 Move W8, [X22+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, [X28]
	365 Compare X0, 0
	366 JumpIfEqual {537}
	367 Move W10, [X0+28]
	368 Move X8, [X0+16]
	369 Move X9, [X24]
	370 Add W10, W10, 1
	371 Move [X0+28], W10
	372 Compare X8, 0
	373 JumpIfEqual {537}
	374 NotImplemented "Instruction LDRSW not yet implemented."
	375 Move W11, [X8+24]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Add W9, W10, 1
	378 Add X8, X8, X10
	379 Move [X0+24], W9
	380 Move [X8+32], X26
	381 Move X8, [X9+32]
	382 Move X1, X26
	383 Move X8, [X8+192]
	384 Move X2, [X8+112]
	385 Call List`1<Object>.AddWithResize, X0, X1
	386 Add W28, W20, 1
	387 Add W8, W20, 2
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move W10, [X19+24]
	390 NotImplemented "Instruction CSINC not yet implemented."
	391 And W8, W8, 0xFFFFFFFE
	392 Subtract W9, W28, W8
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move W8, [X22+24]
	395 Move X20, W9
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X25, X29
	398 Add X9, X19, X20
	399 Add X29, X22, X20
	400 Move X0, [X9+32]
	401 Add X29, X29, 32
	402 Move X9, [X29]
	403 Compare X9, 0
	404 JumpIfEqual {537}
	405 Compare X0, 0
	406 JumpIfEqual {537}
	407 Move X10, 0x790000
	408 Move W1, [X9+24]
	409 Move W11, [X0+28]
	410 Move X9, [X0+16]
	411 Move X10, [X10+3600]
	412 Add W11, W11, 1
	413 Move X10, [X10]
	414 Move [X0+28], W11
	415 Compare X9, 0
	416 JumpIfEqual {537}
	417 NotImplemented "Instruction LDRSW not yet implemented."
	418 Move W12, [X9+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Add W10, W11, 1
	421 Add X9, X9, X11
	422 Move [X0+24], W10
	423 Move [X9+32], W1
	424 Move X8, [X10+32]
	425 Move X8, [X8+192]
	426 Move X2, [X8+112]
	427 Call List`1<Int32>.AddWithResize, X0, X1
	428 Move W8, [X22+24]
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X0, [X29]
	431 Compare X0, 0
	432 JumpIfEqual {537}
	433 Move W10, [X0+28]
	434 Move X8, [X0+16]
	435 Move X9, [X24]
	436 Add W10, W10, 1
	437 Move [X0+28], W10
	438 Compare X8, 0
	439 JumpIfEqual {537}
	440 NotImplemented "Instruction LDRSW not yet implemented."
	441 Move W11, [X8+24]
	442 Move X20, 0x7B7000
	443 Move X20, [X20+1536]
	444 Move X29, X25
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Add W9, W10, 1
	447 Add X8, X8, X10
	448 Move [X0+24], W9
	449 Move [X8+32], X26
	450 Move X8, [X9+32]
	451 Move X1, X26
	452 Move X8, [X8+192]
	453 Move X2, [X8+112]
	454 Call List`1<Object>.AddWithResize, X0, X1
	455 Move W28, W25
	456 Move W8, [X29+24]
	457 Add W23, W23, 1
	458 Move W25, W28
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X8, 0x7EB000
	461 Move X8, [X8+2464]
	462 Move X23, X19
	463 Move X19, 0x7EB000
	464 Move X0, [X8]
	465 Move X19, [X19+2440]
	466 Call 0x1C17F10
	467 Move X1, [X19]
	468 Move X19, X0
	469 Call List`1<Object>..ctor, X0
	470 Move X8, [X22+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X25, 0x7EB000
	473 Move X26, 0x7EB000
	474 Move X25, [X25+2656]
	475 Move X26, [X26+2424]
	476 Move X24, X31
	477 And X8, X8, 0
	478 Add X27, X22, 32
	479 Add X28, X23, 32
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X0, [X27]
	482 Move W1, W31
	483 Call AppendElements.FaceWithVertices, X0, X1
	484 Compare X0, 0
	485 JumpIfEqual {519}
	486 Move W8, [X23+24]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move X21, X0
	489 Move X0, [X25]
	490 Move X29, [X28]
	491 Call 0x1C17F10
	492 Move X1, X31
	493 Move X20, X0
	494 Call Object..ctor, X0
	495 Move [X20+16], X21
	496 Move [X20+24], X29
	497 Compare X19, 0
	498 JumpIfEqual {537}
	499 Move W10, [X19+28]
	500 Move X8, [X19+16]
	501 Move X9, [X26]
	502 Add W10, W10, 1
	503 Move [X19+28], W10
	504 Compare X8, 0
	505 JumpIfEqual {537}
	506 NotImplemented "Instruction LDRSW not yet implemented."
	507 Move W11, [X8+24]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Add W9, W10, 1
	510 Add X8, X8, X10
	511 Move [X19+24], W9
	512 Move [X8+32], X20
	513 Move X8, [X9+32]
	514 Move X0, X19
	515 Move X1, X20
	516 Move X8, [X8+192]
	517 Move X2, [X8+112]
	518 Call List`1<Object>.AddWithResize, X0, X1
	519 Move W8, [X22+24]
	520 Add X24, X24, 1
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move X0, X19
	523 Move X20, [X31+128]
	524 Move X19, [X31+136]
	525 Move X22, [X31+112]
	526 Move X21, [X31+120]
	527 Move X24, [X31+96]
	528 Move X23, [X31+104]
	529 Move X26, [X31+80]
	530 Move X25, [X31+88]
	531 Move X28, [X31+64]
	532 Move X27, [X31+72]
	533 Move X29, [X31+48]
	534 Move X30, [X31+56]
	535 Add X31, X31, 144
	536 Return X0
	537 Call 0x1C17F20
	538 Call 0x1C17F28
	539 Call 0x1C17F44
	540 Move X1, X31
	541 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.MeshOperations.ConnectFaceRebuildData> ConnectEdgesInFace(UnityEngine.ProBuilder.Face face, System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> edges, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices)

Disassembly:
	0x0396469C BL 0x301BF90
	0x039646A0 B 0x39646A8
	0x039646A4 MOV W28, W25
	0x039646A8 LDR W8, [X29 + 0x18]
	0x039646AC ADD W23, W23, 0x1
	0x039646B0 MOV W25, W28
	0x039646B4 CMP W23, W8
	0x039646B8 B.LT 0x39642C4
	0x039646BC ADRP X8, 0x7EB000
	0x039646C0 LDR X8, [X8 + 0x9A0]
	0x039646C4 MOV X23, X19
	0x039646C8 ADRP X19, 0x7EB000
	0x039646CC LDR X0, [X8]
	0x039646D0 LDR X19, [X19 + 0x988]
	0x039646D4 BL 0x1C16F10
	0x039646D8 LDR X1, [X19]
	0x039646DC MOV X19, X0
	0x039646E0 BL 0x301B7C4
	0x039646E4 LDR X8, [X22 + 0x18]
	0x039646E8 CMP W8, 0x1
	0x039646EC B.LT 0x39647BC
	0x039646F0 ADRP X25, 0x7EB000
	0x039646F4 ADRP X26, 0x7EB000
	0x039646F8 LDR X25, [X25 + 0xA60]
	0x039646FC LDR X26, [X26 + 0x978]
	0x03964700 MOV X24, X31
	0x03964704 AND X8, X8, 0x0
	0x03964708 ADD X27, X22, 0x20
	0x0396470C ADD X28, X23, 0x20
	0x03964710 CMP X24, W8, UXTW
	0x03964714 B.CS 0x39647E4
	0x03964718 LDR X0, [X27, X24, LSL #3]
	0x0396471C MOV W1, W31
	0x03964720 BL 0x394FDA4
	0x03964724 CBZ X0, 0x39647AC
	0x03964728 LDR W8, [X23 + 0x18]
	0x0396472C CMP X24, X8
	0x03964730 B.CS 0x39647E4
	0x03964734 MOV X21, X0
	0x03964738 LDR X0, [X25]
	0x0396473C LDR X29, [X28, X24, LSL #3]
	0x03964740 BL 0x1C16F10
	0x03964744 MOV X1, X31
	0x03964748 MOV X20, X0
	0x0396474C BL 0x33BDD8C
	0x03964750 STP X21, X29, [X20 + 0x10]
	0x03964754 CBZ X19, 0x39647E0
	0x03964758 LDR W10, [X19 + 0x1C]
	0x0396475C LDR X8, [X19 + 0x10]
	0x03964760 LDR X9, [X26]
	0x03964764 ADD W10, W10, 0x1
	0x03964768 STR W10, [X19 + 0x1C]
	0x0396476C CBZ X8, 0x39647E0
	0x03964770 LDRSW X10, [X19 + 0x18]
	0x03964774 LDR W11, [X8 + 0x18]
	0x03964778 CMP W10, W11
	0x0396477C B.CS 0x3964794
	0x03964780 ADD W9, W10, 0x1
	0x03964784 ADD X8, X8, X10, 0x3, LSL
	0x03964788 STR W9, [X19 + 0x18]
	0x0396478C STR X20, [X8 + 0x20]
	0x03964790 B 0x39647AC
	0x03964794 LDR X8, [X9 + 0x20]
	0x03964798 MOV X0, X19
	0x0396479C MOV X1, X20
	0x039647A0 LDR X8, [X8 + 0xC0]
	0x039647A4 LDR X2, [X8 + 0x70]
	0x039647A8 BL 0x301BF90
	0x039647AC LDR W8, [X22 + 0x18]
	0x039647B0 ADD X24, X24, 0x1
	0x039647B4 CMP X24, W8, SXTW
	0x039647B8 B.LT 0x3964710
	0x039647BC MOV X0, X19
	0x039647C0 LDP X20, X19, [X31 + 0x80]
	0x039647C4 LDP X22, X21, [X31 + 0x70]
	0x039647C8 LDP X24, X23, [X31 + 0x60]
	0x039647CC LDP X26, X25, [X31 + 0x50]
	0x039647D0 LDP X28, X27, [X31 + 0x40]
	0x039647D4 LDP X29, X30, [X31 + 0x30]
	0x039647D8 ADD X31, X31, 0x90
	0x039647DC RET
	0x039647E0 BL 0x1C16F20
	0x039647E4 BL 0x1C16F28
	0x039647E8 BL 0x1C16F44
	0x039647EC MOV X1, X31
	0x039647F0 BL 0x1C16DEC
	0x039647F4 MOV X1, X31
	0x039647F8 B 0x33BDD8C
	0x039647FC STR X30, [X31 - 0x20]!
	0x03964800 STP X20, X19, [X31 + 0x10]
	0x03964804 ADRP X19, 0xA7D000
	0x03964808 ADRP X20, 0x7EB000
	0x0396480C LDRB W8, [X19 + 0x9B7]
	0x03964810 LDR X20, [X20 + 0x8B8]
	0x03964814 TBNZ X8, 0x0, 0x396482C
	0x03964818 ADRP X0, 0x7EB000
	0x0396481C LDR X0, [X0 + 0x8B8]
	0x03964820 BL 0x1C16CF4
	0x03964824 MOVZ W8, 0x1
	0x03964828 STRB W8, [X19 + 0x9B7]
	0x0396482C LDR X0, [X20]
	0x03964830 BL 0x1C16F10
	0x03964834 MOV X1, X31
	0x03964838 MOV X19, X0
	0x0396483C BL 0x33BDD8C
	0x03964840 LDR X8, [X20]
	0x03964844 LDR X8, [X8 + 0xB8]
	0x03964848 STR X19, [X8]
	0x0396484C LDP X20, X19, [X31 + 0x10]
	0x03964850 LDR X30, [X31], #0x20
	0x03964854 RET
	0x03964858 MOV X1, X31
	0x0396485C B 0x33BDD8C
	0x03964860 CBZ X1, 0x3964870
	0x03964864 MOV X0, X1
	0x03964868 MOV X1, X31
	0x0396486C B 0x38FFA80
	0x03964870 STR X30, [X31 - 0x10]!
	0x03964874 BL 0x1C16F20
	0x03964878 STR X30, [X31 - 0x10]!
	0x0396487C CBZ X1, 0x396488C
	0x03964880 LDR W0, [X1 + 0x54]
	0x03964884 LDR X30, [X31], #0x10
	0x03964888 RET
	0x0396488C BL 0x1C16F20
	0x03964890 STR X30, [X31 - 0x10]!
	0x03964894 CBZ X1, 0x39648A4
	0x03964898 LDR X0, [X1 + 0x10]
	0x0396489C LDR X30, [X31], #0x10
	0x039648A0 RET
	0x039648A4 BL 0x1C16F20
	0x039648A8 STR X30, [X31 - 0x10]!
	0x039648AC CBZ X1, 0x39648BC
	0x039648B0 LDR W0, [X1 + 0x54]
	0x039648B4 LDR X30, [X31], #0x10
	0x039648B8 RET
	0x039648BC BL 0x1C16F20
	0x039648C0 STR X30, [X31 - 0x10]!
	0x039648C4 CBZ X1, 0x39648D4
	0x039648C8 LDR X0, [X1 + 0x10]
	0x039648CC LDR X30, [X31], #0x10
	0x039648D0 RET
	0x039648D4 BL 0x1C16F20
	0x039648D8 STR X30, [X31 - 0x10]!
	0x039648DC CBZ X1, 0x39648FC
	0x039648E0 LDR X8, [X1 + 0x10]
	0x039648E4 CBZ X8, 0x39648FC
	0x039648E8 LDR X0, [X8 + 0x10]
	0x039648EC CBZ X0, 0x39648FC
	0x039648F0 MOV X1, X31
	0x039648F4 LDR X30, [X31], #0x10
	0x039648F8 B 0x38FFA80
	0x039648FC BL 0x1C16F20
	0x03964900 MOV X0, X1
	0x03964904 RET
	0x03964908 STP X30, X21, [X31 - 0x20]!
	0x0396490C STP X20, X19, [X31 + 0x10]
	0x03964910 ADRP X20, 0xA7D000
	0x03964914 ADRP X21, 0x7E9000
	0x03964918 ADRP X19, 0x7EB000
	0x0396491C LDRB W8, [X20 + 0x9B8]
	0x03964920 LDR X21, [X21 + 0xDE8]
	0x03964924 LDR X19, [X19 + 0x1C8]
	0x03964928 TBNZ X8, 0x0, 0x396494C
	0x0396492C ADRP X0, 0x7EB000
	0x03964930 LDR X0, [X0 + 0x1C8]
	0x03964934 BL 0x1C16CF4
	0x03964938 ADRP X0, 0x7E9000
	0x0396493C LDR X0, [X0 + 0xDE8]
	0x03964940 BL 0x1C16CF4
	0x03964944 MOVZ W8, 0x1
	0x03964948 STRB W8, [X20 + 0x9B8]
	0x0396494C LDR X0, [X21]
	0x03964950 BL 0x1C16F10
	0x03964954 LDR X1, [X19]
	0x03964958 MOV X19, X0
	0x0396495C BL 0x301B7C4
	0x03964960 MOV X0, X19
	0x03964964 LDP X20, X19, [X31 + 0x10]
	0x03964968 LDP X30, X21, [X31], #0x20
	0x0396496C RET
	0x03964970 STP X30, X21, [X31 - 0x20]!
	0x03964974 STP X20, X19, [X31 + 0x10]
	0x03964978 ADRP X20, 0xA7D000
	0x0396497C ADRP X21, 0x790000
	0x03964980 ADRP X19, 0x793000
	0x03964984 LDRB W8, [X20 + 0x9B9]
	0x03964988 LDR X21, [X21 + 0xE30]
	0x0396498C LDR X19, [X19 + 0xB70]
	0x03964990 TBNZ X8, 0x0, 0x39649B4
	0x03964994 ADRP X0, 0x793000
	0x03964998 LDR X0, [X0 + 0xB70]
	0x0396499C BL 0x1C16CF4
	0x039649A0 ADRP X0, 0x790000
	0x039649A4 LDR X0, [X0 + 0xE30]
	0x039649A8 BL 0x1C16CF4
	0x039649AC MOVZ W8, 0x1
	0x039649B0 STRB W8, [X20 + 0x9B9]
	0x039649B4 LDR X0, [X21]
	0x039649B8 BL 0x1C16F10
	0x039649BC LDR X1, [X19]
	0x039649C0 MOV X19, X0
	0x039649C4 BL 0x2FDBF14
	0x039649C8 MOV X0, X19
	0x039649CC LDP X20, X19, [X31 + 0x10]
	0x039649D0 LDP X30, X21, [X31], #0x20
	0x039649D4 RET
	0x039649D8 STR X30, [X31 - 0x10]!
	0x039649DC CBZ X1, 0x39649EC
	0x039649E0 LDR X0, [X1 + 0x10]
	0x039649E4 LDR X30, [X31], #0x10
	0x039649E8 RET
	0x039649EC BL 0x1C16F20
	0x039649F0 STR X30, [X31 - 0x10]!
	0x039649F4 CBZ X1, 0x3964A04
	0x039649F8 LDR X0, [X1 + 0x10]
	0x039649FC LDR X30, [X31], #0x10
	0x03964A00 RET
	0x03964A04 BL 0x1C16F20
	0x03964A08 STP X30, X21, [X31 - 0x20]!
	0x03964A0C STP X20, X19, [X31 + 0x10]
	0x03964A10 ADRP X20, 0xA7D000
	0x03964A14 ADRP X21, 0x7E9000
	0x03964A18 ADRP X19, 0x7EB000
	0x03964A1C LDRB W8, [X20 + 0x9BA]
	0x03964A20 LDR X21, [X21 + 0xDE8]
	0x03964A24 LDR X19, [X19 + 0x1C8]
	0x03964A28 TBNZ X8, 0x0, 0x3964A4C
	0x03964A2C ADRP X0, 0x7EB000
	0x03964A30 LDR X0, [X0 + 0x1C8]
	0x03964A34 BL 0x1C16CF4
	0x03964A38 ADRP X0, 0x7E9000
	0x03964A3C LDR X0, [X0 + 0xDE8]
	0x03964A40 BL 0x1C16CF4
	0x03964A44 MOVZ W8, 0x1
	0x03964A48 STRB W8, [X20 + 0x9BA]
	0x03964A4C LDR X0, [X21]
	0x03964A50 BL 0x1C16F10
	0x03964A54 LDR X1, [X19]
	0x03964A58 MOV X19, X0
	0x03964A5C BL 0x301B7C4
	0x03964A60 MOV X0, X19
	0x03964A64 LDP X20, X19, [X31 + 0x10]
	0x03964A68 LDP X30, X21, [X31], #0x20
	0x03964A6C RET
	0x03964A70 STP X30, X21, [X31 - 0x20]!
	0x03964A74 STP X20, X19, [X31 + 0x10]
	0x03964A78 ADRP X20, 0xA7D000
	0x03964A7C ADRP X21, 0x790000
	0x03964A80 ADRP X19, 0x793000
	0x03964A84 LDRB W8, [X20 + 0x9BB]
	0x03964A88 LDR X21, [X21 + 0xE30]
	0x03964A8C LDR X19, [X19 + 0xB70]
	0x03964A90 TBNZ X8, 0x0, 0x3964AB4
	0x03964A94 ADRP X0, 0x793000
	0x03964A98 LDR X0, [X0 + 0xB70]
	0x03964A9C BL 0x1C16CF4
	0x03964AA0 ADRP X0, 0x790000
	0x03964AA4 LDR X0, [X0 + 0xE30]
	0x03964AA8 BL 0x1C16CF4
	0x03964AAC MOVZ W8, 0x1
	0x03964AB0 STRB W8, [X20 + 0x9BB]
	0x03964AB4 LDR X0, [X21]
	0x03964AB8 BL 0x1C16F10
	0x03964ABC LDR X1, [X19]
	0x03964AC0 MOV X19, X0
	0x03964AC4 BL 0x2FDBF14
	0x03964AC8 MOV X0, X19
	0x03964ACC LDP X20, X19, [X31 + 0x10]
	0x03964AD0 LDP X30, X21, [X31], #0x20
	0x03964AD4 RET
	0x03964AD8 STP X30, X21, [X31 - 0x20]!
	0x03964ADC STP X20, X19, [X31 + 0x10]
	0x03964AE0 ADRP X20, 0xA7D000
	0x03964AE4 ADRP X21, 0x790000
	0x03964AE8 ADRP X19, 0x793000
	0x03964AEC LDRB W8, [X20 + 0x9BC]
	0x03964AF0 LDR X21, [X21 + 0xE30]
	0x03964AF4 LDR X19, [X19 + 0xB70]
	0x03964AF8 TBNZ X8, 0x0, 0x3964B1C
	0x03964AFC ADRP X0, 0x793000
	0x03964B00 LDR X0, [X0 + 0xB70]
	0x03964B04 BL 0x1C16CF4
	0x03964B08 ADRP X0, 0x790000
	0x03964B0C LDR X0, [X0 + 0xE30]
	0x03964B10 BL 0x1C16CF4
	0x03964B14 MOVZ W8, 0x1
	0x03964B18 STRB W8, [X20 + 0x9BC]
	0x03964B1C LDR X0, [X21]
	0x03964B20 BL 0x1C16F10
	0x03964B24 LDR X1, [X19]
	0x03964B28 MOV X19, X0
	0x03964B2C BL 0x2FDBF14
	0x03964B30 MOV X0, X19
	0x03964B34 LDP X20, X19, [X31 + 0x10]
	0x03964B38 LDP X30, X21, [X31], #0x20
	0x03964B3C RET
	0x03964B40 STP X30, X21, [X31 - 0x20]!
	0x03964B44 STP X20, X19, [X31 + 0x10]
	0x03964B48 ADRP X21, 0xA7D000
	0x03964B4C LDRB W8, [X21 + 0x9BD]
	0x03964B50 MOV W19, W1
	0x03964B54 MOV X20, X0
	0x03964B58 TBNZ X8, 0x0, 0x3964B70
	0x03964B5C ADRP X0, 0x7E9000
	0x03964B60 LDR X0, [X0 + 0xC80]
	0x03964B64 BL 0x1C16CF4
	0x03964B68 MOVZ W8, 0x1
	0x03964B6C STRB W8, [X21 + 0x9BD]
	0x03964B70 LDR X0, [X20 + 0x10]
	0x03964B74 CBZ X0, 0x3964B94
	0x03964B78 ADRP X8, 0x7E9000
	0x03964B7C LDR X8, [X8 + 0xC80]
	0x03964B80 MOV W1, W19
	0x03964B84 LDP X20, X19, [X31 + 0x10]
	0x03964B88 LDR X2, [X8]
	0x03964B8C LDP X30, X21, [X31], #0x20
	0x03964B90 B 0x2A0A2A8
	0x03964B94 BL 0x1C16F20
	0x03964B98 STR X30, [X31 - 0x10]!
	0x03964B9C LDR X8, [X0 + 0x18]
	0x03964BA0 CBZ X8, 0x3964BD4
	0x03964BA4 LDR X8, [X8 + 0x30]
	0x03964BA8 CBZ X8, 0x3964BD4
	0x03964BAC LDR W9, [X8 + 0x18]
	0x03964BB0 CMP W9, W1
	0x03964BB4 B.LS 0x3964BD8
	0x03964BB8 ADD X8, X8, W1, 0x3, SXTW
	0x03964BBC LDR X0, [X8 + 0x20]
	0x03964BC0 CBZ X0, 0x3964BD4
	0x03964BC4 MOV W1, W31
	0x03964BC8 MOV X2, X31
	0x03964BCC LDR X30, [X31], #0x10
	0x03964BD0 B 0x39282DC
	0x03964BD4 BL 0x1C16F20
	0x03964BD8 BL 0x1C16F28
	0x03964BDC STP X30, X21, [X31 - 0x20]!
	0x03964BE0 STP X20, X19, [X31 + 0x10]
	0x03964BE4 ADRP X21, 0xA7D000
	0x03964BE8 LDRB W8, [X21 + 0x9BE]
	0x03964BEC MOV X19, X1
	0x03964BF0 MOV X20, X0
	0x03964BF4 TBNZ X8, 0x0, 0x3964C0C
	0x03964BF8 ADRP X0, 0x790000
	0x03964BFC LDR X0, [X0 + 0xDF8]
	0x03964C00 BL 0x1C16CF4
	0x03964C04 MOVZ W8, 0x1
	0x03964C08 STRB W8, [X21 + 0x9BE]
	0x03964C0C LDR X0, [X20 + 0x10]
	0x03964C10 CBZ X0, 0x3964C58
	0x03964C14 ADRP X21, 0x790000
	0x03964C18 LDR X21, [X21 + 0xDF8]
	0x03964C1C MOV W1, W19
	0x03964C20 LDR X2, [X21]
	0x03964C24 BL 0x2DAA59C
	0x03964C28 TBZ X0, 0x0, 0x3964C48
	0x03964C2C LDR X0, [X20 + 0x10]
	0x03964C30 CBZ X0, 0x3964C58
	0x03964C34 LDR X2, [X21]
	0x03964C38 UBFM X1, X19, 0x20, 0x3F
	0x03964C3C LDP X20, X19, [X31 + 0x10]
	0x03964C40 LDP X30, X21, [X31], #0x20
	0x03964C44 B 0x2DAA59C
	0x03964C48 LDP X20, X19, [X31 + 0x10]
	0x03964C4C MOV W0, W31
	0x03964C50 LDP X30, X21, [X31], #0x20
	0x03964C54 RET
	0x03964C58 BL 0x1C16F20
	0x03964C5C MOV X1, X31
	0x03964C60 B 0x33BDD8C
	0x03964C64 MOV X1, X31
	0x03964C68 B 0x33BDD8C
	0x03964C6C SUB X31, X31, 0x70
	0x03964C70 STP X29, X30, [X31 + 0x10]
	0x03964C74 STP X28, X27, [X31 + 0x20]
	0x03964C78 STP X26, X25, [X31 + 0x30]
	0x03964C7C STP X24, X23, [X31 + 0x40]
	0x03964C80 STP X22, X21, [X31 + 0x50]
	0x03964C84 STP X20, X19, [X31 + 0x60]
	0x03964C88 ADRP X21, 0xA7D000
	0x03964C8C ADRP X22, 0x78F000
	0x03964C90 LDRB W8, [X21 + 0x9C2]
	0x03964C94 LDR X22, [X22 + 0x598]
	0x03964C98 MOV X20, X1
	0x03964C9C MOV X19, X0
	0x03964CA0 TBNZ X8, 0x0, 0x3964D90
	0x03964CA4 ADRP X0, 0x7EA000
	0x03964CA8 LDR X0, [X0 + 0xD50]
	0x03964CAC BL 0x1C16CF4
	0x03964CB0 ADRP X0, 0x7EB000
	0x03964CB4 LDR X0, [X0 + 0xAD0]
	0x03964CB8 BL 0x1C16CF4
	0x03964CBC ADRP X0, 0x7EB000
	0x03964CC0 LDR X0, [X0 + 0x4A8]
	0x03964CC4 BL 0x1C16CF4
	0x03964CC8 ADRP X0, 0x799000
	0x03964CCC LDR X0, [X0 + 0x858]
	0x03964CD0 BL 0x1C16CF4
	0x03964CD4 ADRP X0, 0x799000
	0x03964CD8 LDR X0, [X0 + 0x890]
	0x03964CDC BL 0x1C16CF4
	0x03964CE0 ADRP X0, 0x7E9000
	0x03964CE4 LDR X0, [X0 + 0xC80]
	0x03964CE8 BL 0x1C16CF4
	0x03964CEC ADRP X0, 0x799000
	0x03964CF0 LDR X0, [X0 + 0x888]
	0x03964CF4 BL 0x1C16CF4
	0x03964CF8 ADRP X0, 0x7BA000
	0x03964CFC LDR X0, [X0 + 0xBB8]
	0x03964D00 BL 0x1C16CF4
	0x03964D04 ADRP X0, 0x7E9000
	0x03964D08 LDR X0, [X0 + 0xFA0]
	0x03964D0C BL 0x1C16CF4
	0x03964D10 ADRP X0, 0x7EA000
	0x03964D14 LDR X0, [X0 + 0x2A8]
	0x03964D18 BL 0x1C16CF4
	0x03964D1C ADRP X0, 0x7EA000
	0x03964D20 LDR X0, [X0 + 0x3F0]
	0x03964D24 BL 0x1C16CF4
	0x03964D28 ADRP X0, 0x7E9000
	0x03964D2C LDR X0, [X0 + 0xFA8]
	0x03964D30 BL 0x1C16CF4
	0x03964D34 ADRP X0, 0x7B7000
	0x03964D38 LDR X0, [X0 + 0x7A0]
	0x03964D3C BL 0x1C16CF4
	0x03964D40 ADRP X0, 0x7B7000
	0x03964D44 LDR X0, [X0 + 0x7A8]
	0x03964D48 BL 0x1C16CF4
	0x03964D4C ADRP X0, 0x7B7000
	0x03964D50 LDR X0, [X0 + 0x790]
	0x03964D54 BL 0x1C16CF4
	0x03964D58 ADRP X0, 0x790000
	0x03964D5C LDR X0, [X0 + 0xE18]
	0x03964D60 BL 0x1C16CF4
	0x03964D64 ADRP X0, 0x78F000
	0x03964D68 LDR X0, [X0 + 0x598]
	0x03964D6C BL 0x1C16CF4
	0x03964D70 ADRP X0, 0x7EB000
	0x03964D74 LDR X0, [X0 + 0xAD8]
	0x03964D78 BL 0x1C16CF4
	0x03964D7C ADRP X0, 0x7EB000
	0x03964D80 LDR X0, [X0 + 0xAE0]
	0x03964D84 BL 0x1C16CF4
	0x03964D88 MOVZ W8, 0x1
	0x03964D8C STRB W8, [X21 + 0x9C2]
	0x03964D90 LDR X0, [X22]
	0x03964D94 LDR W8, [X0 + 0xE0]
	0x03964D98 CBNZ W8, 0x3964DA0
	0x03964D9C BL 0x1C16DFC
	0x03964DA0 MOV X0, X19
	0x03964DA4 MOV X1, X31
	0x03964DA8 MOV X2, X31
	0x03964DAC BL 0x3C3883C
	0x03964DB0 TBNZ X0, 0x0, 0x39651DC
	0x03964DB4 CBZ X20, 0x39651FC
	0x03964DB8 ADRP X10, 0x7B7000
	0x03964DBC LDR X8, [X20]
	0x03964DC0 LDR X10, [X10 + 0x7A0]
	0x03964DC4 ADRP X21, 0x7EA000
	0x03964DC8 LDRH W9, [X8 + 0x12E]
	0x03964DCC LDR X1, [X10]
	0x03964DD0 LDR X21, [X21 + 0x3F0]
	0x03964DD4 CBZ X9, 0x3964DF8
	0x03964DD8 LDR X10, [X8 + 0xB0]
	0x03964DDC ADD X10, X10, 0x8
	0x03964DE0 LDUR X11, [X10 - 0x8]
	0x03964DE4 CMP X11, X1
	0x03964DE8 B.EQ 0x3964E08
	0x03964DEC SUBS X9, X9, 0x1
	0x03964DF0 ADD X10, X10, 0x10
	0x03964DF4 B.NE 0x3964DE0
	0x03964DF8 MOV X0, X20
	0x03964DFC MOV W2, W31
	0x03964E00 BL 0x1C5C788
	0x03964E04 B 0x3964E14
	0x03964E08 LDRSW X9, [X10]
	0x03964E0C ADD X8, X8, X9, 0x4, LSL
	0x03964E10 ADD X0, X8, 0x138
	0x03964E14 LDP X8, X1, [X0]
	0x03964E18 MOV X0, X20
	0x03964E1C BLR X8
	0x03964E20 LDR X8, [X21]
	0x03964E24 MOV W1, W0
	0x03964E28 MOV X0, X8
	0x03964E2C BL 0x1C16D6C
	0x03964E30 CBZ X0, 0x39651D4
	0x03964E34 LDR W8, [X0 + 0x18]
	0x03964E38 MOV X21, X0
	0x03964E3C CMP W8, 0x1
	0x03964E40 B.LT 0x3964EEC
	0x03964E44 ADRP X23, 0x7B7000
	0x03964E48 LDR X23, [X23 + 0x7A8]
	0x03964E4C MOV X22, X31
	0x03964E50 CBZ X19, 0x39651D4
	0x03964E54 LDR X8, [X20]
	0x03964E58 LDR X24, [X19 + 0x28]
	0x03964E5C LDR X1, [X23]
	0x03964E60 LDRH W9, [X8 + 0x12E]
	0x03964E64 CBZ X9, 0x3964E88
	0x03964E68 LDR X10, [X8 + 0xB0]
	0x03964E6C ADD X10, X10, 0x8
	0x03964E70 LDUR X11, [X10 - 0x8]
	0x03964E74 CMP X11, X1
	0x03964E78 B.EQ 0x3964E98
	0x03964E7C SUBS X9, X9, 0x1
	0x03964E80 ADD X10, X10, 0x10
	0x03964E84 B.NE 0x3964E70
	0x03964E88 MOV X0, X20
	0x03964E8C MOV W2, W31
	0x03964E90 BL 0x1C5C788
	0x03964E94 B 0x3964EA4
	0x03964E98 LDRSW X9, [X10]
	0x03964E9C ADD X8, X8, X9, 0x4, LSL
	0x03964EA0 ADD X0, X8, 0x138
	0x03964EA4 LDP X8, X2, [X0]
	0x03964EA8 MOV X0, X20
	0x03964EAC MOV W1, W22
	0x03964EB0 BLR X8
	0x03964EB4 CBZ X24, 0x39651D4
	0x03964EB8 LDR W8, [X24 + 0x18]
	0x03964EBC CMP W0, W8
	0x03964EC0 B.CS 0x39651D8
	0x03964EC4 LDR W8, [X21 + 0x18]
	0x03964EC8 CMP X22, X8
	0x03964ECC B.CS 0x39651D8
	0x03964ED0 ADD X9, X24, W0, 0x3, SXTW
	0x03964ED4 LDR X9, [X9 + 0x20]
	0x03964ED8 ADD X10, X21, X22, 0x3, LSL
	0x03964EDC ADD X22, X22, 0x1
	0x03964EE0 CMP X22, W8, SXTW
	0x03964EE4 STR X9, [X10 + 0x20]
	0x03964EE8 B.LT 0x3964E50
	0x03964EEC ADRP X24, 0x7EB000
	0x03964EF0 LDR X24, [X24 + 0xAE0]
	0x03964EF4 LDR X0, [X24]
	0x03964EF8 LDR W8, [X0 + 0xE0]
	0x03964EFC CBNZ W8, 0x3964F08
	0x03964F00 BL 0x1C16DFC
	0x03964F04 LDR X0, [X24]
	0x03964F08 LDR X8, [X0 + 0xB8]
	0x03964F0C ADRP X27, 0x7E9000
	0x03964F10 ADRP X26, 0x7BA000
	0x03964F14 ADRP X25, 0x7EA000
	0x03964F18 LDR X22, [X8 + 0x8]
	0x03964F1C LDR X27, [X27 + 0xFA0]
	0x03964F20 LDR X26, [X26 + 0xBB8]
	0x03964F24 LDR X25, [X25 + 0x2A8]
	0x03964F28 CBNZ X22, 0x3964F7C
	0x03964F2C LDR W8, [X0 + 0xE0]
	0x03964F30 CBNZ W8, 0x3964F3C
	0x03964F34 BL 0x1C16DFC
	0x03964F38 LDR X0, [X24]
	0x03964F3C ADRP X9, 0x7E9000
	0x03964F40 LDR X8, [X0 + 0xB8]
	0x03964F44 LDR X9, [X9 + 0xFA8]
	0x03964F48 LDR X23, [X8]
	0x03964F4C LDR X0, [X9]
	0x03964F50 BL 0x1C16F10
	0x03964F54 ADRP X8, 0x7EB000
	0x03964F58 LDR X8, [X8 + 0xAD8]
	0x03964F5C MOV X1, X23
	0x03964F60 MOV X3, X31
	0x03964F64 MOV X22, X0
	0x03964F68 LDR X2, [X8]
	0x03964F6C BL 0x2D30578
	0x03964F70 LDR X8, [X24]
	0x03964F74 LDR X8, [X8 + 0xB8]
	0x03964F78 STR X22, [X8 + 0x8]
	0x03964F7C LDR X2, [X27]
	0x03964F80 MOV X0, X21
	0x03964F84 MOV X1, X22
	0x03964F88 BL 0x21D0FD8
	0x03964F8C LDR X1, [X26]
	0x03964F90 BL 0x21C0304
	0x03964F94 LDR X1, [X25]
	0x03964F98 BL 0x21D7880
	0x03964F9C CBZ X0, 0x39651D4
	0x03964FA0 ADRP X8, 0x7B7000
	0x03964FA4 LDR X8, [X8 + 0x790]
	0x03964FA8 MOV X21, X0
	0x03964FAC LDR X1, [X8]
	0x03964FB0 BL 0x2FDE354
	0x03964FB4 CBZ X19, 0x39651D4
	0x03964FB8 LDR X8, [X19 + 0x58]
	0x03964FBC CBZ X8, 0x39651D4
	0x03964FC0 ADRP X9, 0x7EB000
	0x03964FC4 LDR X9, [X9 + 0xAD0]
	0x03964FC8 LDR X0, [X19 + 0x28]
	0x03964FCC ADRP X22, 0x7EB000
	0x03964FD0 ADRP X23, 0x799000
	0x03964FD4 LDR X2, [X9]
	0x03964FD8 ADRP X24, 0x799000
	0x03964FDC LDR W25, [X8 + 0x18]
	0x03964FE0 LDR X22, [X22 + 0x4A8]
	0x03964FE4 LDR X23, [X23 + 0x888]
	0x03964FE8 LDR X24, [X24 + 0x890]
	0x03964FEC MOV X1, X20
	0x03964FF0 BL 0x217FCA0
	0x03964FF4 MOV X20, X0
	0x03964FF8 MOV X0, X19
	0x03964FFC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0xA7E000
	015 Move X22, 0x7EB000
	016 Move W8, [X21+2483]
	017 Move X22, [X22+2824]
	018 Move X19, X2
	019 Move X25, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {114}
	025 Move X0, 0x7EC000
	026 Move X0, [X0+2640]
	027 Call 0x1C17CF4
	028 Move X0, 0x7EC000
	029 Move X0, [X0+2648]
	030 Call 0x1C17CF4
	031 Move X0, 0x7EC000
	032 Move X0, [X0+2656]
	033 Call 0x1C17CF4
	034 Move X0, 0x7EC000
	035 Move X0, [X0+88]
	036 Call 0x1C17CF4
	037 Move X0, 0x7EC000
	038 Move X0, [X0+2664]
	039 Call 0x1C17CF4
	040 Move X0, 0x7EC000
	041 Move X0, [X0+120]
	042 Call 0x1C17CF4
	043 Move X0, 0x7EC000
	044 Move X0, [X0+2672]
	045 Call 0x1C17CF4
	046 Move X0, 0x7EC000
	047 Move X0, [X0+2712]
	048 Call 0x1C17CF4
	049 Move X0, 0x7EC000
	050 Move X0, [X0+2720]
	051 Call 0x1C17CF4
	052 Move X0, 0x7EA000
	053 Move X0, [X0+3424]
	054 Call 0x1C17CF4
	055 Move X0, 0x791000
	056 Move X0, [X0+3600]
	057 Call 0x1C17CF4
	058 Move X0, 0x7EC000
	059 Move X0, [X0+2424]
	060 Call 0x1C17CF4
	061 Move X0, 0x7EC000
	062 Move X0, [X0+448]
	063 Call 0x1C17CF4
	064 Move X0, 0x7EC000
	065 Move X0, [X0+2736]
	066 Call 0x1C17CF4
	067 Move X0, 0x7EC000
	068 Move X0, [X0+2440]
	069 Call 0x1C17CF4
	070 Move X0, 0x7EC000
	071 Move X0, [X0+640]
	072 Call 0x1C17CF4
	073 Move X0, 0x7EB000
	074 Move X0, [X0+2808]
	075 Call 0x1C17CF4
	076 Move X0, 0x7EA000
	077 Move X0, [X0+3608]
	078 Call 0x1C17CF4
	079 Move X0, 0x7EB000
	080 Move X0, [X0+4064]
	081 Call 0x1C17CF4
	082 Move X0, 0x7EC000
	083 Move X0, [X0+464]
	084 Call 0x1C17CF4
	085 Move X0, 0x7EB000
	086 Move X0, [X0+4072]
	087 Call 0x1C17CF4
	088 Move X0, 0x7EC000
	089 Move X0, [X0+648]
	090 Call 0x1C17CF4
	091 Move X0, 0x7EB000
	092 Move X0, [X0+3384]
	093 Call 0x1C17CF4
	094 Move X0, 0x7EC000
	095 Move X0, [X0+2464]
	096 Call 0x1C17CF4
	097 Move X0, 0x7EC000
	098 Move X0, [X0+2744]
	099 Call 0x1C17CF4
	100 Move X0, 0x7EC000
	101 Move X0, [X0+2752]
	102 Call 0x1C17CF4
	103 Move X0, 0x7EC000
	104 Move X0, [X0+2760]
	105 Call 0x1C17CF4
	106 Move X0, 0x7EC000
	107 Move X0, [X0+2232]
	108 Call 0x1C17CF4
	109 Move X0, 0x7EB000
	110 Move X0, [X0+2824]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X21+2483], W8
	114 Move X0, [X22]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X20
	120 Move X1, X31
	121 Call WingedEdge.SortEdgesByAdjacency, X0
	122 Compare X25, 0
	123 JumpIfEqual {641}
	124 Compare X20, 0
	125 JumpIfEqual {641}
	126 Move X23, 0x7EC000
	127 Move W22, [X25+24]
	128 Move X23, [X23+2232]
	129 Move X21, X0
	130 Move X0, X20
	131 Move X1, X31
	132 Call Face.get_distinctIndexesInternal, X0
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call Vertex.Average, X0, X1
	137 Move X8, [X23]
	138 Move [X31+16], X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {145}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X8, [X23]
	145 Move X9, [X8+184]
	146 Move X26, 0x7EC000
	147 Move X20, [X9+64]
	148 Move X26, [X26+2648]
	149 Compare X20, 0
	150 JumpIfNotEqual {173}
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {157}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X8, [X23]
	157 Move X9, 0x7EC000
	158 Move X8, [X8+184]
	159 Move X9, [X9+2664]
	160 Move X24, [X8]
	161 Move X0, [X9]
	162 Call 0x1C17F10
	163 Move X8, 0x7EC000
	164 Move X8, [X8+2744]
	165 Move X1, X24
	166 Move X3, X31
	167 Move X20, X0
	168 Move X2, [X8]
	169 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	170 Move X8, [X23]
	171 Move X8, [X8+184]
	172 Move [X8+64], X20
	173 Move X2, [X26]
	174 Move X0, X20
	175 Move W1, W22
	176 Call 0x217F7CC, X0, X1
	177 Move X8, [X23]
	178 Move X20, X0
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {185}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X8, [X23]
	185 Move X9, [X8+184]
	186 Move X27, 0x7EC000
	187 Move X24, [X9+72]
	188 Move X27, [X27+2640]
	189 Compare X24, 0
	190 JumpIfNotEqual {213}
	191 Move W9, [X8+224]
	192 Compare W9, 0
	193 JumpIfNotEqual {197}
	194 Move X0, X8
	195 Call 0x1C17DFC
	196 Move X8, [X23]
	197 Move X9, 0x7EC000
	198 Move X8, [X8+184]
	199 Move X9, [X9+2672]
	200 Move X26, [X8]
	201 Move X0, [X9]
	202 Call 0x1C17F10
	203 Move X8, 0x7EC000
	204 Move X8, [X8+2752]
	205 Move X1, X26
	206 Move X3, X31
	207 Move X24, X0
	208 Move X2, [X8]
	209 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	210 Move X8, [X23]
	211 Move X8, [X8+184]
	212 Move [X8+72], X24
	213 Move X2, [X27]
	214 Move X0, X24
	215 Move W1, W22
	216 Call 0x217F7CC, X0, X1
	217 Move X8, [X23]
	218 Move X24, X25
	219 Move [X31+24], X0
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {226}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Move X8, [X23]
	226 Move X9, [X8+184]
	227 Move X25, 0x7EC000
	228 Move X29, 0x7EA000
	229 Move X28, 0x7EC000
	230 Move X26, [X9+80]
	231 Move X25, [X25+88]
	232 Move X29, [X29+3424]
	233 Move X28, [X28+2720]
	234 Compare X26, 0
	235 JumpIfNotEqual {258}
	236 Move W9, [X8+224]
	237 Compare W9, 0
	238 JumpIfNotEqual {242}
	239 Move X0, X8
	240 Call 0x1C17DFC
	241 Move X8, [X23]
	242 Move X9, 0x7EC000
	243 Move X8, [X8+184]
	244 Move X9, [X9+120]
	245 Move X27, [X8]
	246 Move X0, [X9]
	247 Call 0x1C17F10
	248 Move X8, 0x7EC000
	249 Move X8, [X8+2760]
	250 Move X1, X27
	251 Move X3, X31
	252 Move X26, X0
	253 Move X2, [X8]
	254 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	255 Move X8, [X23]
	256 Move X8, [X8+184]
	257 Move [X8+80], X26
	258 Move X2, [X25]
	259 Move X0, X24
	260 Move X1, X26
	261 Call Enumerable.Select, X0, X1
	262 Move X8, [X29]
	263 Move X26, X0
	264 Move X0, X8
	265 Call 0x1C17F10
	266 Move X2, [X28]
	267 Move X1, X26
	268 Move X24, X0
	269 Call HashSet`1<Edge>..ctor, X0, X1
	270 Compare X21, 0
	271 JumpIfEqual {641}
	272 Move W8, [X21+24]
	273 Move X29, 0x7EC000
	274 Move X29, [X29+648]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X23, 0x7EB000
	277 Move X25, 0x7EC000
	278 Move X23, [X23+4072]
	279 Move X25, [X25+464]
	280 Move W26, W31
	281 Move W27, W31
	282 Move [X31+12], W22
	283 Move [X31], X24
	284 Compare X20, 0
	285 JumpIfEqual {641}
	286 Move X2, [X29]
	287 NotImplemented "Instruction SDIV not yet implemented."
	288 NotImplemented "Instruction MSUB not yet implemented."
	289 Move X0, X20
	290 Call List`1<Object>.get_Item, X0, X1
	291 Move X2, [X23]
	292 Move X28, X0
	293 Move X0, X21
	294 Move W1, W26
	295 Call List`1<Edge>.get_Item, X0, X1
	296 Compare X19, 0
	297 JumpIfEqual {641}
	298 Move X2, [X25]
	299 Move X1, X0
	300 Move X0, X19
	301 Call List`1<Object>.get_Item, X0, X1
	302 Compare X28, 0
	303 JumpIfEqual {641}
	304 Move X9, 0x7EC000
	305 Move W10, [X28+28]
	306 Move X8, [X28+16]
	307 Move X9, [X9+448]
	308 Add W10, W10, 1
	309 Move X9, [X9]
	310 Move [X28+28], W10
	311 Compare X8, 0
	312 JumpIfEqual {641}
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Move W11, [X8+24]
	315 Move X1, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W9, W10, 1
	318 Add X8, X8, X10
	319 Move [X28+24], W9
	320 Move [X8+32], X1
	321 Move X8, [X9+32]
	322 Move X0, X28
	323 Move X8, [X8+192]
	324 Move X2, [X8+112]
	325 Call List`1<Object>.AddWithResize, X0, X1
	326 Move X2, [X23]
	327 Move X0, X21
	328 Move W1, W26
	329 Call List`1<Edge>.get_Item, X0, X1
	330 Compare X24, 0
	331 JumpIfEqual {641}
	332 Move X8, 0x7EC000
	333 Move X8, [X8+2712]
	334 Move X1, X0
	335 Move X0, X24
	336 Move X2, [X8]
	337 Call HashSet`1<Edge>.Contains, X0, X1
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {541}
	342 Move X2, [X23]
	343 Move X0, X21
	344 Move W1, W26
	345 Call List`1<Edge>.get_Item, X0, X1
	346 Move X2, [X25]
	347 Move X1, X0
	348 Move X0, X19
	349 Call List`1<Object>.get_Item, X0, X1
	350 Move X2, [X23]
	351 Move X28, X0
	352 Move X0, X21
	353 Move W1, W26
	354 Move X24, X23
	355 Move X22, X25
	356 Move X25, X21
	357 Call List`1<Edge>.get_Item, X0, X1
	358 Move X2, [X22]
	359 Move X1, X0
	360 ShiftRight X1, 32
	361 And X1, X1, 0x7FFFFFFF
	362 Move X0, X19
	363 Move X22, X19
	364 Call List`1<Object>.get_Item, X0, X1
	365 Move X1, X0
	366 Move S0, 0.5
	367 Move X0, X28
	368 Move X2, X31
	369 Call Vertex.Mix, X0, X1, V0
	370 Move X19, [X31+24]
	371 Compare X19, 0
	372 JumpIfEqual {641}
	373 Move X8, 0x7EB000
	374 Move X8, [X8+3384]
	375 Move X28, X0
	376 Move X0, X19
	377 Move W1, W27
	378 Move X2, [X8]
	379 Call List`1<Object>.get_Item, X0, X1
	380 Move X2, [X29]
	381 Move X23, X29
	382 Move X29, X0
	383 Move X0, X20
	384 Move W1, W27
	385 Call List`1<Object>.get_Item, X0, X1
	386 Move X21, 0x791000
	387 Move X21, [X21+3600]
	388 Compare X0, 0
	389 JumpIfEqual {641}
	390 Compare X29, 0
	391 JumpIfEqual {641}
	392 Move W10, [X29+28]
	393 Move W1, [X0+24]
	394 Move X8, [X29+16]
	395 Move X9, [X21]
	396 Add W10, W10, 1
	397 Move [X29+28], W10
	398 Compare X8, 0
	399 JumpIfEqual {641}
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Move W11, [X8+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Add W9, W10, 1
	404 Add X8, X8, X10
	405 Move [X29+24], W9
	406 Move [X8+32], W1
	407 Move X8, [X9+32]
	408 Move X0, X29
	409 Move X8, [X8+192]
	410 Move X2, [X8+112]
	411 Call List`1<Int32>.AddWithResize, X0, X1
	412 Move X2, [X23]
	413 Move X0, X20
	414 Move W1, W27
	415 Move X29, X23
	416 Call List`1<Object>.get_Item, X0, X1
	417 Compare X0, 0
	418 JumpIfEqual {641}
	419 Move X9, 0x7EC000
	420 Move W10, [X0+28]
	421 Move X8, [X0+16]
	422 Move X9, [X9+448]
	423 Add W10, W10, 1
	424 Move X9, [X9]
	425 Move [X0+28], W10
	426 Compare X8, 0
	427 JumpIfEqual {641}
	428 NotImplemented "Instruction LDRSW not yet implemented."
	429 Move W11, [X8+24]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add W9, W10, 1
	432 Add X8, X8, X10
	433 Move [X0+24], W9
	434 Move [X8+32], X28
	435 Move X8, [X9+32]
	436 Move X1, X28
	437 Move X8, [X8+192]
	438 Move X2, [X8+112]
	439 Call List`1<Object>.AddWithResize, X0, X1
	440 Move X8, 0x7EB000
	441 Move X8, [X8+3384]
	442 Move X0, X19
	443 Move W1, W27
	444 Move X2, [X8]
	445 Call List`1<Object>.get_Item, X0, X1
	446 Move X2, [X29]
	447 Move X29, X0
	448 Move X0, X20
	449 Move W1, W27
	450 Call List`1<Object>.get_Item, X0, X1
	451 Compare X0, 0
	452 JumpIfEqual {641}
	453 Compare X29, 0
	454 JumpIfEqual {641}
	455 Move W10, [X29+28]
	456 Move W1, [X0+24]
	457 Move X8, [X29+16]
	458 Move X9, [X21]
	459 Add W10, W10, 1
	460 Move [X29+28], W10
	461 Compare X8, 0
	462 JumpIfEqual {641}
	463 NotImplemented "Instruction LDRSW not yet implemented."
	464 Move W11, [X8+24]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Add W9, W10, 1
	467 Add X8, X8, X10
	468 Move [X29+24], W9
	469 Move [X8+32], W1
	470 Move X8, [X9+32]
	471 Move X0, X29
	472 Move X8, [X8+192]
	473 Move X2, [X8+112]
	474 Call List`1<Int32>.AddWithResize, X0, X1
	475 Move X2, [X23]
	476 Move X0, X20
	477 Move W1, W27
	478 Move X29, X23
	479 Call List`1<Object>.get_Item, X0, X1
	480 Compare X0, 0
	481 JumpIfEqual {641}
	482 Move X9, 0x7EC000
	483 Move W10, [X0+28]
	484 Move X8, [X0+16]
	485 Move X9, [X9+448]
	486 Add W10, W10, 1
	487 Move X9, [X9]
	488 Move [X0+28], W10
	489 Compare X8, 0
	490 JumpIfEqual {641}
	491 NotImplemented "Instruction LDRSW not yet implemented."
	492 Move W11, [X8+24]
	493 Move X23, X24
	494 Move X24, [X31]
	495 Move X19, X22
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Add W9, W10, 1
	498 Move [X0+24], W9
	499 Move X9, [X31+16]
	500 Add X8, X8, X10
	501 Move [X8+32], X9
	502 Move X8, [X9+32]
	503 Move X1, [X31+16]
	504 Move X8, [X8+192]
	505 Move X2, [X8+112]
	506 Call List`1<Object>.AddWithResize, X0, X1
	507 Move W22, [X31+12]
	508 Move X2, [X29]
	509 Add W8, W27, 1
	510 Move X0, X20
	511 NotImplemented "Instruction SDIV not yet implemented."
	512 NotImplemented "Instruction MSUB not yet implemented."
	513 Move W1, W27
	514 Move X21, X25
	515 Call List`1<Object>.get_Item, X0, X1
	516 Move X25, 0x7EC000
	517 Move X25, [X25+464]
	518 Compare X0, 0
	519 JumpIfEqual {641}
	520 Move X9, 0x7EC000
	521 Move W10, [X0+28]
	522 Move X8, [X0+16]
	523 Move X9, [X9+448]
	524 Add W10, W10, 1
	525 Move X9, [X9]
	526 Move [X0+28], W10
	527 Compare X8, 0
	528 JumpIfEqual {641}
	529 NotImplemented "Instruction LDRSW not yet implemented."
	530 Move W11, [X8+24]
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Add W9, W10, 1
	533 Add X8, X8, X10
	534 Move [X0+24], W9
	535 Move [X8+32], X28
	536 Move X8, [X9+32]
	537 Move X1, X28
	538 Move X8, [X8+192]
	539 Move X2, [X8+112]
	540 Call List`1<Object>.AddWithResize, X0, X1
	541 Move W8, [X21+24]
	542 Add W26, W26, 1
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move X8, 0x7EC000
	545 Move X8, [X8+2464]
	546 Move X19, 0x7EC000
	547 Move X0, [X8]
	548 Move X19, [X19+2440]
	549 Call 0x1C17F10
	550 Move X1, [X19]
	551 Move X19, X0
	552 Call List`1<Object>..ctor, X0
	553 Compare X20, 0
	554 JumpIfEqual {641}
	555 Move W8, [X20+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move X26, 0x7EC000
	558 Move X27, 0x7EC000
	559 Move X26, [X26+2656]
	560 Move X27, [X27+2424]
	561 Move W21, W31
	562 Move X2, [X29]
	563 Move X0, X20
	564 Move W1, W21
	565 Call List`1<Object>.get_Item, X0, X1
	566 Move W1, W31
	567 Call AppendElements.FaceWithVertices, X0, X1
	568 Compare X0, 0
	569 JumpIfEqual {613}
	570 Move X23, X0
	571 Move X0, [X31+24]
	572 Compare X0, 0
	573 JumpIfEqual {641}
	574 Move X8, 0x7EB000
	575 Move X8, [X8+3384]
	576 Move W1, W21
	577 Move X2, [X8]
	578 Call List`1<Object>.get_Item, X0, X1
	579 Move X8, [X26]
	580 Move X25, X0
	581 Move X0, X8
	582 Call 0x1C17F10
	583 Move X1, X31
	584 Move X22, X0
	585 Call Object..ctor, X0
	586 Move [X22+16], X23
	587 Move [X22+24], X25
	588 Compare X19, 0
	589 JumpIfEqual {641}
	590 Move W10, [X19+28]
	591 Move X8, [X19+16]
	592 Move X9, [X27]
	593 Add W10, W10, 1
	594 Move [X19+28], W10
	595 Compare X8, 0
	596 JumpIfEqual {641}
	597 NotImplemented "Instruction LDRSW not yet implemented."
	598 Move W11, [X8+24]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Add W9, W10, 1
	601 Add X8, X8, X10
	602 Move [X19+24], W9
	603 Move [X8+32], X22
	604 Move X8, [X9+32]
	605 Move X0, X19
	606 Move X1, X22
	607 Move X8, [X8+192]
	608 Move X2, [X8+112]
	609 Call List`1<Object>.AddWithResize, X0, X1
	610 Move W8, [X20+24]
	611 Add W21, W21, 1
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Compare X19, 0
	614 JumpIfEqual {641}
	615 Move W2, [X19+24]
	616 Move W8, [X19+28]
	617 Add W8, W8, 1
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move [X19+24], W31
	620 Move [X19+28], W8
	621 Move X0, [X19+16]
	622 Move W1, W31
	623 Move X3, X31
	624 Call Array.Clear, X0, X1, X2
	625 Move X19, X31
	626 Move X0, X19
	627 Move X20, [X31+112]
	628 Move X19, [X31+120]
	629 Move X22, [X31+96]
	630 Move X21, [X31+104]
	631 Move X24, [X31+80]
	632 Move X23, [X31+88]
	633 Move X26, [X31+64]
	634 Move X25, [X31+72]
	635 Move X28, [X31+48]
	636 Move X27, [X31+56]
	637 Move X29, [X31+32]
	638 Move X30, [X31+40]
	639 Add X31, X31, 128
	640 Return X0
	641 Call 0x1C17F20

Method: System.Boolean InsertVertices(UnityEngine.ProBuilder.Face face, System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> edges, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, out UnityEngine.ProBuilder.MeshOperations.ConnectFaceRebuildData data)

Disassembly:
	0x03964170 MOV X22, X0
	0x03964174 MOV X0, X8
	0x03964178 BL 0x1C16F10
	0x0396417C LDR X1, [X20]
	0x03964180 MOV X23, X0
	0x03964184 BL 0x301B7C4
	0x03964188 CBZ X22, 0x39647E0
	0x0396418C CBZ X23, 0x39641A4
	0x03964190 LDR X8, [X22]
	0x03964194 MOV X0, X23
	0x03964198 LDR X1, [X8 + 0x40]
	0x0396419C BL 0x1C16E00
	0x039641A0 CBZ X0, 0x39647E8
	0x039641A4 LDR W8, [X22 + 0x18]
	0x039641A8 CBZ W8, 0x39647E4
	0x039641AC STR X23, [X22 + 0x20]
	0x039641B0 LDR X0, [X19]
	0x039641B4 BL 0x1C16F10
	0x039641B8 LDR X1, [X20]
	0x039641BC MOV X23, X0
	0x039641C0 BL 0x301B7C4
	0x039641C4 CBZ X23, 0x39641DC
	0x039641C8 LDR X8, [X22]
	0x039641CC MOV X0, X23
	0x039641D0 LDR X1, [X8 + 0x40]
	0x039641D4 BL 0x1C16E00
	0x039641D8 CBZ X0, 0x39647E8
	0x039641DC LDR W8, [X22 + 0x18]
	0x039641E0 STR X26, [X31 + 0x8]
	0x039641E4 CMP W8, 0x1
	0x039641E8 B.LS 0x39647E4
	0x039641EC ADRP X8, 0x7EA000
	0x039641F0 LDR X8, [X8 + 0xE28]
	0x039641F4 STR X23, [X22 + 0x28]
	0x039641F8 ADRP X26, 0x790000
	0x039641FC ADRP X20, 0x793000
	0x03964200 LDR X0, [X8]
	0x03964204 LDR X26, [X26 + 0xE30]
	0x03964208 LDR X20, [X20 + 0xB70]
	0x0396420C MOVZ W1, 0x2
	0x03964210 BL 0x1C16D6C
	0x03964214 LDR X8, [X26]
	0x03964218 MOV X19, X0
	0x0396421C MOV X0, X8
	0x03964220 BL 0x1C16F10
	0x03964224 LDR X1, [X20]
	0x03964228 MOV X23, X0
	0x0396422C BL 0x2FDBF14
	0x03964230 CBZ X19, 0x39647E0
	0x03964234 CBZ X23, 0x396424C
	0x03964238 LDR X8, [X19]
	0x0396423C MOV X0, X23
	0x03964240 LDR X1, [X8 + 0x40]
	0x03964244 BL 0x1C16E00
	0x03964248 CBZ X0, 0x39647E8
	0x0396424C LDR W8, [X19 + 0x18]
	0x03964250 CBZ W8, 0x39647E4
	0x03964254 STR X23, [X19 + 0x20]
	0x03964258 LDR X0, [X26]
	0x0396425C BL 0x1C16F10
	0x03964260 LDR X1, [X20]
	0x03964264 MOV X20, X0
	0x03964268 BL 0x2FDBF14
	0x0396426C CBZ X20, 0x3964284
	0x03964270 LDR X8, [X19]
	0x03964274 MOV X0, X20
	0x03964278 LDR X1, [X8 + 0x40]
	0x0396427C BL 0x1C16E00
	0x03964280 CBZ X0, 0x39647E8
	0x03964284 LDR W8, [X19 + 0x18]
	0x03964288 CMP W8, 0x1
	0x0396428C B.LS 0x39647E4
	0x03964290 STR X20, [X19 + 0x28]
	0x03964294 CBZ X29, 0x39647E0
	0x03964298 LDR W8, [X29 + 0x18]
	0x0396429C CMP W8, 0x1
	0x039642A0 B.LT 0x39646BC
	0x039642A4 ADRP X27, 0x7EA000
	0x039642A8 ADRP X24, 0x7EB000
	0x039642AC ADRP X20, 0x7B7000
	0x039642B0 LDR X27, [X27 + 0xFE8]
	0x039642B4 LDR X24, [X24 + 0x1C0]
	0x039642B8 LDR X20, [X20 + 0x600]
	0x039642BC MOV W23, W31
	0x039642C0 MOV W25, W31
	0x039642C4 CMP W25, 0x0
	0x039642C8 LDR W9, [X22 + 0x18]
	0x039642CC CINC W8, W25, LT
	0x039642D0 AND W8, W8, 0xFFFFFFFE
	0x039642D4 SUB W8, W25, W8
	0x039642D8 CMP W8, W9
	0x039642DC B.CS 0x39647E4
	0x039642E0 SXTW X8, W8
	0x039642E4 STR X8, [X31 + 0x20]
	0x039642E8 ADD X28, X22, X8, 0x3, LSL
	0x039642EC LDR X26, [X28 + 0x20]!
	0x039642F0 LDR X2, [X27]
	0x039642F4 MOV X0, X29
	0x039642F8 MOV W1, W23
	0x039642FC BL 0x2FB9C40
	0x03964300 MOV X1, X0
	0x03964304 LDR X0, [X31 + 0x18]
	0x03964308 CBZ X0, 0x39647E0
	0x0396430C ADRP X8, 0x7EB000
	0x03964310 LDR X8, [X8 + 0x1D0]
	0x03964314 LDR X2, [X8]
	0x03964318 BL 0x301BCCC
	0x0396431C CBZ X26, 0x39647E0
	0x03964320 LDR W10, [X26 + 0x1C]
	0x03964324 LDR X8, [X26 + 0x10]
	0x03964328 LDR X9, [X24]
	0x0396432C ADD W10, W10, 0x1
	0x03964330 STR W10, [X26 + 0x1C]
	0x03964334 CBZ X8, 0x39647E0
	0x03964338 LDRSW X10, [X26 + 0x18]
	0x0396433C LDR W11, [X8 + 0x18]
	0x03964340 MOV X1, X0
	0x03964344 CMP W10, W11
	0x03964348 B.CS 0x3964360
	0x0396434C ADD W9, W10, 0x1
	0x03964350 ADD X8, X8, X10, 0x3, LSL
	0x03964354 STR W9, [X26 + 0x18]
	0x03964358 STR X1, [X8 + 0x20]
	0x0396435C B 0x3964374
	0x03964360 LDR X8, [X9 + 0x20]
	0x03964364 MOV X0, X26
	0x03964368 LDR X8, [X8 + 0xC0]
	0x0396436C LDR X2, [X8 + 0x70]
	0x03964370 BL 0x301BF90
	0x03964374 LDR X2, [X27]
	0x03964378 MOV X0, X29
	0x0396437C MOV W1, W23
	0x03964380 BL 0x2FB9C40
	0x03964384 STR X0, [X31 + 0x28]
	0x03964388 CBZ X21, 0x39647E0
	0x0396438C LDR X0, [X20]
	0x03964390 LDR X26, [X21 + 0x10]
	0x03964394 LDR W8, [X0 + 0xE0]
	0x03964398 CBNZ W8, 0x39643A0
	0x0396439C BL 0x1C16DFC
	0x039643A0 ADD X0, X31, 0x28
	0x039643A4 MOV X1, X26
	0x039643A8 MOV X2, X31
	0x039643AC BL 0x38FDD60
	0x039643B0 TBNZ X0, 0x0, 0x39643F8
	0x039643B4 LDR X2, [X27]
	0x039643B8 MOV X0, X29
	0x039643BC MOV W1, W23
	0x039643C0 BL 0x2FB9C40
	0x039643C4 LDR X9, [X31 + 0x8]
	0x039643C8 STR X0, [X31 + 0x28]
	0x039643CC CBZ X9, 0x39647E0
	0x039643D0 LDR X0, [X20]
	0x039643D4 LDR X26, [X9 + 0x10]
	0x039643D8 LDR W8, [X0 + 0xE0]
	0x039643DC CBNZ W8, 0x39643E4
	0x039643E0 BL 0x1C16DFC
	0x039643E4 ADD X0, X31, 0x28
	0x039643E8 MOV X1, X26
	0x039643EC MOV X2, X31
	0x039643F0 BL 0x38FDD60
	0x039643F4 TBZ X0, 0x0, 0x39646A4
	0x039643F8 LDR X2, [X27]
	0x039643FC MOV X0, X29
	0x03964400 MOV W1, W23
	0x03964404 STR W25, [X31 + 0x14]
	0x03964408 MOV X25, X24
	0x0396440C MOV X20, X22
	0x03964410 BL 0x2FB9C40
	0x03964414 ADRP X8, 0x7EB000
	0x03964418 LDR X8, [X8 + 0x1D0]
	0x0396441C MOV X24, X29
	0x03964420 LDR X29, [X31 + 0x18]
	0x03964424 MOV X1, X0
	0x03964428 LDR X2, [X8]
	0x0396442C MOV X26, X27
	0x03964430 MOV X0, X29
	0x03964434 BL 0x301BCCC
	0x03964438 LDR X2, [X27]
	0x0396443C MOV X26, X0
	0x03964440 MOV X0, X24
	0x03964444 MOV W1, W23
	0x03964448 MOV X22, X24
	0x0396444C MOV W24, W23
	0x03964450 BL 0x2FB9C40
	0x03964454 ADRP X8, 0x7EB000
	0x03964458 LDR X8, [X8 + 0x1D0]
	0x0396445C UBFM X1, X0, 0x20, 0x3F
	0x03964460 MOV X0, X29
	0x03964464 LDR X2, [X8]
	0x03964468 BL 0x301BCCC
	0x0396446C MOV X1, X0
	0x03964470 FMOV S0, 0.5
	0x03964474 MOV X0, X26
	0x03964478 MOV X2, X31
	0x0396447C BL 0x3940610
	0x03964480 LDR W8, [X19 + 0x18]
	0x03964484 LDR X13, [X31 + 0x20]
	0x03964488 CMP W13, W8
	0x0396448C B.CS 0x39647E4
	0x03964490 LDR W8, [X20 + 0x18]
	0x03964494 CMP W13, W8
	0x03964498 B.CS 0x39647E4
	0x0396449C LDR X9, [X28]
	0x039644A0 CBZ X9, 0x39647E0
	0x039644A4 ADD X10, X19, X13, 0x3, LSL
	0x039644A8 MOV X26, X0
	0x039644AC LDR X0, [X10 + 0x20]
	0x039644B0 CBZ X0, 0x39647E0
	0x039644B4 ADRP X10, 0x790000
	0x039644B8 LDR W1, [X9 + 0x18]
	0x039644BC LDR W11, [X0 + 0x1C]
	0x039644C0 LDR X9, [X0 + 0x10]
	0x039644C4 LDR X10, [X10 + 0xE10]
	0x039644C8 MOV X29, X22
	0x039644CC MOV X22, X20
	0x039644D0 LDR W20, [X31 + 0x14]
	0x039644D4 LDR X10, [X10]
	0x039644D8 ADD W11, W11, 0x1
	0x039644DC STR W11, [X0 + 0x1C]
	0x039644E0 CBZ X9, 0x39647E0
	0x039644E4 LDRSW X11, [X0 + 0x18]
	0x039644E8 LDR W12, [X9 + 0x18]
	0x039644EC MOV W23, W24
	0x039644F0 MOV X24, X25
	0x039644F4 CMP W11, W12
	0x039644F8 B.CS 0x3964510
	0x039644FC ADD W10, W11, 0x1
	0x03964500 ADD X9, X9, X11, 0x2, LSL
	0x03964504 STR W10, [X0 + 0x18]
	0x03964508 STR W1, [X9 + 0x20]
	0x0396450C B 0x3964528
	0x03964510 LDR X8, [X10 + 0x20]
	0x03964514 LDR X8, [X8 + 0xC0]
	0x03964518 LDR X2, [X8 + 0x70]
	0x0396451C BL 0x2FDC70C
	0x03964520 LDR X13, [X31 + 0x20]
	0x03964524 LDR W8, [X22 + 0x18]
	0x03964528 CMP W13, W8
	0x0396452C B.CS 0x39647E4
	0x03964530 LDR X0, [X28]
	0x03964534 CBZ X0, 0x39647E0
	0x03964538 LDR W10, [X0 + 0x1C]
	0x0396453C LDR X8, [X0 + 0x10]
	0x03964540 LDR X9, [X24]
	0x03964544 ADD W10, W10, 0x1
	0x03964548 STR W10, [X0 + 0x1C]
	0x0396454C CBZ X8, 0x39647E0
	0x03964550 LDRSW X10, [X0 + 0x18]
	0x03964554 LDR W11, [X8 + 0x18]
	0x03964558 CMP W10, W11
	0x0396455C B.CS 0x3964574
	0x03964560 ADD W9, W10, 0x1
	0x03964564 ADD X8, X8, X10, 0x3, LSL
	0x03964568 STR W9, [X0 + 0x18]
	0x0396456C STR X26, [X8 + 0x20]
	0x03964570 B 0x3964588
	0x03964574 LDR X8, [X9 + 0x20]
	0x03964578 MOV X1, X26
	0x0396457C LDR X8, [X8 + 0xC0]
	0x03964580 LDR X2, [X8 + 0x70]
	0x03964584 BL 0x301BF90
	0x03964588 ADD W28, W20, 0x1
	0x0396458C ADD W8, W20, 0x2
	0x03964590 CMP W28, 0x0
	0x03964594 LDR W10, [X19 + 0x18]
	0x03964598 CSINC W8, W8, W20, LT
	0x0396459C AND W8, W8, 0xFFFFFFFE
	0x039645A0 SUB W9, W28, W8
	0x039645A4 CMP W9, W10
	0x039645A8 B.CS 0x39647E4
	0x039645AC LDR W8, [X22 + 0x18]
	0x039645B0 SXTW X20, W9
	0x039645B4 CMP W20, W8
	0x039645B8 B.CS 0x39647E4
	0x039645BC MOV X25, X29
	0x039645C0 ADD X9, X19, X20, 0x3, LSL
	0x039645C4 ADD X29, X22, X20, 0x3, LSL
	0x039645C8 LDR X0, [X9 + 0x20]
	0x039645CC LDR X9, [X29 + 0x20]!
	0x039645D0 CBZ X9, 0x39647E0
	0x039645D4 CBZ X0, 0x39647E0
	0x039645D8 ADRP X10, 0x790000
	0x039645DC LDR W1, [X9 + 0x18]
	0x039645E0 LDR W11, [X0 + 0x1C]
	0x039645E4 LDR X9, [X0 + 0x10]
	0x039645E8 LDR X10, [X10 + 0xE10]
	0x039645EC ADD W11, W11, 0x1
	0x039645F0 LDR X10, [X10]
	0x039645F4 STR W11, [X0 + 0x1C]
	0x039645F8 CBZ X9, 0x39647E0
	0x039645FC LDRSW X11, [X0 + 0x18]
	0x03964600 LDR W12, [X9 + 0x18]
	0x03964604 CMP W11, W12
	0x03964608 B.CS 0x3964620
	0x0396460C ADD W10, W11, 0x1
	0x03964610 ADD X9, X9, X11, 0x2, LSL
	0x03964614 STR W10, [X0 + 0x18]
	0x03964618 STR W1, [X9 + 0x20]
	0x0396461C B 0x3964634
	0x03964620 LDR X8, [X10 + 0x20]
	0x03964624 LDR X8, [X8 + 0xC0]
	0x03964628 LDR X2, [X8 + 0x70]
	0x0396462C BL 0x2FDC70C
	0x03964630 LDR W8, [X22 + 0x18]
	0x03964634 CMP W20, W8
	0x03964638 B.CS 0x39647E4
	0x0396463C LDR X0, [X29]
	0x03964640 CBZ X0, 0x39647E0
	0x03964644 LDR W10, [X0 + 0x1C]
	0x03964648 LDR X8, [X0 + 0x10]
	0x0396464C LDR X9, [X24]
	0x03964650 ADD W10, W10, 0x1
	0x03964654 STR W10, [X0 + 0x1C]
	0x03964658 CBZ X8, 0x39647E0
	0x0396465C LDRSW X10, [X0 + 0x18]
	0x03964660 LDR W11, [X8 + 0x18]
	0x03964664 ADRP X20, 0x7B7000
	0x03964668 LDR X20, [X20 + 0x600]
	0x0396466C MOV X29, X25
	0x03964670 CMP W10, W11
	0x03964674 B.CS 0x396468C
	0x03964678 ADD W9, W10, 0x1
	0x0396467C ADD X8, X8, X10, 0x3, LSL
	0x03964680 STR W9, [X0 + 0x18]
	0x03964684 STR X26, [X8 + 0x20]
	0x03964688 B 0x39646A8
	0x0396468C LDR X8, [X9 + 0x20]
	0x03964690 MOV X1, X26
	0x03964694 LDR X8, [X8 + 0xC0]
	0x03964698 LDR X2, [X8 + 0x70]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move [X31+8], X3
	015 Move X20, 0xA7E000
	016 Move X19, 0x7EB000
	017 Move W8, [X20+2484]
	018 Move X19, [X19+2824]
	019 Move X21, X2
	020 Move X25, X1
	021 Move X26, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {85}
	026 Move X0, 0x7EC000
	027 Move X0, [X0+2656]
	028 Call 0x1C17CF4
	029 Move X0, 0x7EC000
	030 Move X0, [X0+88]
	031 Call 0x1C17CF4
	032 Move X0, 0x7EC000
	033 Move X0, [X0+120]
	034 Call 0x1C17CF4
	035 Move X0, 0x7EC000
	036 Move X0, [X0+2712]
	037 Call 0x1C17CF4
	038 Move X0, 0x7EC000
	039 Move X0, [X0+2720]
	040 Call 0x1C17CF4
	041 Move X0, 0x7EA000
	042 Move X0, [X0+3424]
	043 Call 0x1C17CF4
	044 Move X0, 0x791000
	045 Move X0, [X0+3600]
	046 Call 0x1C17CF4
	047 Move X0, 0x7EC000
	048 Move X0, [X0+448]
	049 Call 0x1C17CF4
	050 Move X0, 0x794000
	051 Move X0, [X0+2928]
	052 Call 0x1C17CF4
	053 Move X0, 0x7EC000
	054 Move X0, [X0+456]
	055 Call 0x1C17CF4
	056 Move X0, 0x7EA000
	057 Move X0, [X0+3608]
	058 Call 0x1C17CF4
	059 Move X0, 0x7EB000
	060 Move X0, [X0+4064]
	061 Call 0x1C17CF4
	062 Move X0, 0x7EC000
	063 Move X0, [X0+464]
	064 Call 0x1C17CF4
	065 Move X0, 0x7EB000
	066 Move X0, [X0+4072]
	067 Call 0x1C17CF4
	068 Move X0, 0x791000
	069 Move X0, [X0+3632]
	070 Call 0x1C17CF4
	071 Move X0, 0x7EA000
	072 Move X0, [X0+3560]
	073 Call 0x1C17CF4
	074 Move X0, 0x7EC000
	075 Move X0, [X0+2728]
	076 Call 0x1C17CF4
	077 Move X0, 0x7EC000
	078 Move X0, [X0+2232]
	079 Call 0x1C17CF4
	080 Move X0, 0x7EB000
	081 Move X0, [X0+2824]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X20+2484], W8
	085 Move X0, [X19]
	086 Move X23, 0x7EA000
	087 Move X24, 0x7EC000
	088 Move X22, 0x791000
	089 Move X20, 0x794000
	090 Move X19, 0x7EC000
	091 Move X23, [X23+3560]
	092 Move W8, [X0+224]
	093 Move X24, [X24+456]
	094 Move X22, [X22+3632]
	095 Move X20, [X20+2928]
	096 Move X19, [X19+2232]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X26
	101 Move X1, X31
	102 Call WingedEdge.SortEdgesByAdjacency, X0
	103 Move X8, [X23]
	104 Move X23, X0
	105 Move X0, X8
	106 Call 0x1C17F10
	107 Move X1, [X24]
	108 Move X24, X0
	109 Call List`1<Object>..ctor, X0
	110 Move X0, [X22]
	111 Call 0x1C17F10
	112 Move X1, [X20]
	113 Move X22, X0
	114 Call List`1<Int32>..ctor, X0
	115 Move X0, [X19]
	116 Move [X31], X26
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X19]
	122 Move X8, [X0+184]
	123 Move X29, 0x7EC000
	124 Move X28, 0x7EA000
	125 Move X20, 0x7EC000
	126 Move X26, [X8+88]
	127 Move X29, [X29+88]
	128 Move X28, [X28+3424]
	129 Move X20, [X20+2720]
	130 Compare X26, 0
	131 JumpIfNotEqual {153}
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move X0, [X19]
	137 Move X9, 0x7EC000
	138 Move X8, [X0+184]
	139 Move X9, [X9+120]
	140 Move X27, [X8]
	141 Move X0, [X9]
	142 Call 0x1C17F10
	143 Move X8, 0x7EC000
	144 Move X8, [X8+2728]
	145 Move X1, X27
	146 Move X3, X31
	147 Move X26, X0
	148 Move X2, [X8]
	149 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	150 Move X8, [X19]
	151 Move X8, [X8+184]
	152 Move [X8+88], X26
	153 Move X2, [X29]
	154 Move X0, X25
	155 Move X1, X26
	156 Call Enumerable.Select, X0, X1
	157 Move X8, [X28]
	158 Move X26, X0
	159 Move X0, X8
	160 Call 0x1C17F10
	161 Move X2, [X20]
	162 Move X1, X26
	163 Move X25, X0
	164 Call HashSet`1<Edge>..ctor, X0, X1
	165 Compare X23, 0
	166 JumpIfEqual {362}
	167 Move W8, [X23+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X28, 0x7EB000
	170 Move X29, 0x7EC000
	171 Move X19, 0x7EC000
	172 Move X20, 0x7EC000
	173 Move X28, [X28+4072]
	174 Move X29, [X29+464]
	175 Move X19, [X19+448]
	176 Move X20, [X20+2712]
	177 Move W26, W31
	178 Move X2, [X28]
	179 Move X0, X23
	180 Move W1, W26
	181 Call List`1<Edge>.get_Item, X0, X1
	182 Compare X21, 0
	183 JumpIfEqual {362}
	184 Move X2, [X29]
	185 Move X1, X0
	186 Move X0, X21
	187 Call List`1<Object>.get_Item, X0, X1
	188 Compare X24, 0
	189 JumpIfEqual {362}
	190 Move W10, [X24+28]
	191 Move X8, [X24+16]
	192 Move X9, [X19]
	193 Add W10, W10, 1
	194 Move [X24+28], W10
	195 Compare X8, 0
	196 JumpIfEqual {362}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 Move X1, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add W9, W10, 1
	202 Add X8, X8, X10
	203 Move [X24+24], W9
	204 Move [X8+32], X1
	205 Move X8, [X9+32]
	206 Move X0, X24
	207 Move X8, [X8+192]
	208 Move X2, [X8+112]
	209 Call List`1<Object>.AddWithResize, X0, X1
	210 Move X2, [X28]
	211 Move X0, X23
	212 Move W1, W26
	213 Call List`1<Edge>.get_Item, X0, X1
	214 Compare X25, 0
	215 JumpIfEqual {362}
	216 Move X2, [X20]
	217 Move X1, X0
	218 Move X0, X25
	219 Call HashSet`1<Edge>.Contains, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {292}
	224 Compare X22, 0
	225 JumpIfEqual {362}
	226 Move X9, 0x791000
	227 Move W1, [X24+24]
	228 Move W10, [X22+28]
	229 Move X8, [X22+16]
	230 Move X9, [X9+3600]
	231 Add W10, W10, 1
	232 Move X9, [X9]
	233 Move [X22+28], W10
	234 Compare X8, 0
	235 JumpIfEqual {362}
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Move W11, [X8+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add W9, W10, 1
	240 Add X8, X8, X10
	241 Move [X22+24], W9
	242 Move [X8+32], W1
	243 Move X8, [X9+32]
	244 Move X0, X22
	245 Move X8, [X8+192]
	246 Move X2, [X8+112]
	247 Call List`1<Int32>.AddWithResize, X0, X1
	248 Move X2, [X28]
	249 Move X0, X23
	250 Move W1, W26
	251 Call List`1<Edge>.get_Item, X0, X1
	252 Move X2, [X29]
	253 Move X1, X0
	254 Move X0, X21
	255 Call List`1<Object>.get_Item, X0, X1
	256 Move X2, [X28]
	257 Move X27, X0
	258 Move X0, X23
	259 Move W1, W26
	260 Call List`1<Edge>.get_Item, X0, X1
	261 Move X2, [X29]
	262 Move X1, X0
	263 ShiftRight X1, 32
	264 And X1, X1, 0x7FFFFFFF
	265 Move X0, X21
	266 Call List`1<Object>.get_Item, X0, X1
	267 Move X1, X0
	268 Move S0, 0.5
	269 Move X0, X27
	270 Move X2, X31
	271 Call Vertex.Mix, X0, X1, V0
	272 Move W10, [X24+28]
	273 Move X8, [X24+16]
	274 Move X9, [X19]
	275 Add W10, W10, 1
	276 Move [X24+28], W10
	277 Compare X8, 0
	278 JumpIfEqual {362}
	279 NotImplemented "Instruction LDRSW not yet implemented."
	280 Move W11, [X8+24]
	281 Move X1, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Add W9, W10, 1
	284 Add X8, X8, X10
	285 Move [X24+24], W9
	286 Move [X8+32], X1
	287 Move X8, [X9+32]
	288 Move X0, X24
	289 Move X8, [X8+192]
	290 Move X2, [X8+112]
	291 Call List`1<Object>.AddWithResize, X0, X1
	292 Move W8, [X23+24]
	293 Add W26, W26, 1
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, X24
	296 Move W1, W31
	297 Call AppendElements.FaceWithVertices, X0, X1
	298 Move X21, X0
	299 Compare X0, 0
	300 JumpIfEqual {344}
	301 Move X20, [X31]
	302 Compare X20, 0
	303 JumpIfEqual {362}
	304 Move X19, [X21+16]
	305 Compare X19, 0
	306 JumpIfEqual {362}
	307 Move W8, [X20+84]
	308 NotImplemented "Instruction MOVI not yet implemented."
	309 Add X0, X31, 48
	310 Add X1, X31, 16
	311 Move [X19+84], W8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 Move X2, X31
	315 Move [X31+48], V2
	316 Move [X31+56], V2
	317 Move [X31+16], V1
	318 Move [X31+24], V0
	319 Call AutoUnwrapSettings..ctor, X0, X1
	320 Move V1, [X31+48]
	321 Move V0, [X31+64]
	322 Move [X19+44], V0
	323 Move [X19+28], V1
	324 Move X8, [X21+16]
	325 Compare X8, 0
	326 JumpIfEqual {362}
	327 Move W9, [X20+24]
	328 Move X10, 0x7EC000
	329 Move [X8+24], W9
	330 Move W9, [X20+76]
	331 Move [X8+76], W9
	332 Move W9, [X20+72]
	333 Move X10, [X10+2656]
	334 Move [X8+72], W9
	335 Move X0, [X10]
	336 Call 0x1C17F10
	337 Move X1, X31
	338 Move X20, X0
	339 Call Object..ctor, X0
	340 Move X8, [X31+8]
	341 Move [X20+16], X21
	342 Move [X20+24], X22
	343 Move [X8], X20
	344 Move X8, [X31+8]
	345 Move [X8], X31
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X20, [X31+160]
	348 Move X19, [X31+168]
	349 Move X22, [X31+144]
	350 Move X21, [X31+152]
	351 Move X24, [X31+128]
	352 Move X23, [X31+136]
	353 Move X26, [X31+112]
	354 Move X25, [X31+120]
	355 Move X28, [X31+96]
	356 Move X27, [X31+104]
	357 Move X29, [X31+80]
	358 Move X30, [X31+88]
	359 NotImplemented "Instruction CSET not yet implemented."
	360 Add X31, X31, 176
	361 Return X0
	362 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.MeshOperations.ConnectFaceRebuildData> ConnectIndexesPerFace(UnityEngine.ProBuilder.Face face, System.Int32 a, System.Int32 b, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x0396389C MOV X0, X8
	0x039638A0 BL 0x1C16DFC
	0x039638A4 LDR X8, [X23]
	0x039638A8 LDR X9, [X8 + 0xB8]
	0x039638AC ADRP X26, 0x7EC000
	0x039638B0 LDR X20, [X9 + 0x40]
	0x039638B4 LDR X26, [X26 + 0xA58]
	0x039638B8 CBNZ X20, 0x3963910
	0x039638BC LDR W9, [X8 + 0xE0]
	0x039638C0 CBNZ W9, 0x39638D0
	0x039638C4 MOV X0, X8
	0x039638C8 BL 0x1C16DFC
	0x039638CC LDR X8, [X23]
	0x039638D0 ADRP X9, 0x7EC000
	0x039638D4 LDR X8, [X8 + 0xB8]
	0x039638D8 LDR X9, [X9 + 0xA68]
	0x039638DC LDR X24, [X8]
	0x039638E0 LDR X0, [X9]
	0x039638E4 BL 0x1C16F10
	0x039638E8 ADRP X8, 0x7EC000
	0x039638EC LDR X8, [X8 + 0xAB8]
	0x039638F0 MOV X1, X24
	0x039638F4 MOV X3, X31
	0x039638F8 MOV X20, X0
	0x039638FC LDR X2, [X8]
	0x03963900 BL 0x2D2D154
	0x03963904 LDR X8, [X23]
	0x03963908 LDR X8, [X8 + 0xB8]
	0x0396390C STR X20, [X8 + 0x40]
	0x03963910 LDR X2, [X26]
	0x03963914 MOV X0, X20
	0x03963918 MOV W1, W22
	0x0396391C BL 0x217E7CC
	0x03963920 LDR X8, [X23]
	0x03963924 MOV X20, X0
	0x03963928 LDR W9, [X8 + 0xE0]
	0x0396392C CBNZ W9, 0x396393C
	0x03963930 MOV X0, X8
	0x03963934 BL 0x1C16DFC
	0x03963938 LDR X8, [X23]
	0x0396393C LDR X9, [X8 + 0xB8]
	0x03963940 ADRP X27, 0x7EC000
	0x03963944 LDR X24, [X9 + 0x48]
	0x03963948 LDR X27, [X27 + 0xA50]
	0x0396394C CBNZ X24, 0x39639A4
	0x03963950 LDR W9, [X8 + 0xE0]
	0x03963954 CBNZ W9, 0x3963964
	0x03963958 MOV X0, X8
	0x0396395C BL 0x1C16DFC
	0x03963960 LDR X8, [X23]
	0x03963964 ADRP X9, 0x7EC000
	0x03963968 LDR X8, [X8 + 0xB8]
	0x0396396C LDR X9, [X9 + 0xA70]
	0x03963970 LDR X26, [X8]
	0x03963974 LDR X0, [X9]
	0x03963978 BL 0x1C16F10
	0x0396397C ADRP X8, 0x7EC000
	0x03963980 LDR X8, [X8 + 0xAC0]
	0x03963984 MOV X1, X26
	0x03963988 MOV X3, X31
	0x0396398C MOV X24, X0
	0x03963990 LDR X2, [X8]
	0x03963994 BL 0x2D2D154
	0x03963998 LDR X8, [X23]
	0x0396399C LDR X8, [X8 + 0xB8]
	0x039639A0 STR X24, [X8 + 0x48]
	0x039639A4 LDR X2, [X27]
	0x039639A8 MOV X0, X24
	0x039639AC MOV W1, W22
	0x039639B0 BL 0x217E7CC
	0x039639B4 LDR X8, [X23]
	0x039639B8 MOV X24, X25
	0x039639BC STR X0, [X31 + 0x18]
	0x039639C0 LDR W9, [X8 + 0xE0]
	0x039639C4 CBNZ W9, 0x39639D4
	0x039639C8 MOV X0, X8
	0x039639CC BL 0x1C16DFC
	0x039639D0 LDR X8, [X23]
	0x039639D4 LDR X9, [X8 + 0xB8]
	0x039639D8 ADRP X25, 0x7EC000
	0x039639DC ADRP X29, 0x7EA000
	0x039639E0 ADRP X28, 0x7EC000
	0x039639E4 LDR X26, [X9 + 0x50]
	0x039639E8 LDR X25, [X25 + 0x58]
	0x039639EC LDR X29, [X29 + 0xD60]
	0x039639F0 LDR X28, [X28 + 0xAA0]
	0x039639F4 CBNZ X26, 0x3963A4C
	0x039639F8 LDR W9, [X8 + 0xE0]
	0x039639FC CBNZ W9, 0x3963A0C
	0x03963A00 MOV X0, X8
	0x03963A04 BL 0x1C16DFC
	0x03963A08 LDR X8, [X23]
	0x03963A0C ADRP X9, 0x7EC000
	0x03963A10 LDR X8, [X8 + 0xB8]
	0x03963A14 LDR X9, [X9 + 0x78]
	0x03963A18 LDR X27, [X8]
	0x03963A1C LDR X0, [X9]
	0x03963A20 BL 0x1C16F10
	0x03963A24 ADRP X8, 0x7EC000
	0x03963A28 LDR X8, [X8 + 0xAC8]
	0x03963A2C MOV X1, X27
	0x03963A30 MOV X3, X31
	0x03963A34 MOV X26, X0
	0x03963A38 LDR X2, [X8]
	0x03963A3C BL 0x2D2FDEC
	0x03963A40 LDR X8, [X23]
	0x03963A44 LDR X8, [X8 + 0xB8]
	0x03963A48 STR X26, [X8 + 0x50]
	0x03963A4C LDR X2, [X25]
	0x03963A50 MOV X0, X24
	0x03963A54 MOV X1, X26
	0x03963A58 BL 0x21CE948
	0x03963A5C LDR X8, [X29]
	0x03963A60 MOV X26, X0
	0x03963A64 MOV X0, X8
	0x03963A68 BL 0x1C16F10
	0x03963A6C LDR X2, [X28]
	0x03963A70 MOV X1, X26
	0x03963A74 MOV X24, X0
	0x03963A78 BL 0x2D9B0F8
	0x03963A7C CBZ X21, 0x3963FFC
	0x03963A80 LDR W8, [X21 + 0x18]
	0x03963A84 ADRP X29, 0x7EC000
	0x03963A88 LDR X29, [X29 + 0x288]
	0x03963A8C CMP W8, 0x1
	0x03963A90 B.LT 0x3963E9C
	0x03963A94 ADRP X23, 0x7EB000
	0x03963A98 ADRP X25, 0x7EC000
	0x03963A9C LDR X23, [X23 + 0xFE8]
	0x03963AA0 LDR X25, [X25 + 0x1D0]
	0x03963AA4 MOV W26, W31
	0x03963AA8 MOV W27, W31
	0x03963AAC STR W22, [X31 + 0xC]
	0x03963AB0 STR X24, [X31]
	0x03963AB4 CBZ X20, 0x3963FFC
	0x03963AB8 LDR X2, [X29]
	0x03963ABC SDIV W8, W27, W22
	0x03963AC0 MSUB W1, W8, W22, W27
	0x03963AC4 MOV X0, X20
	0x03963AC8 BL 0x301BCCC
	0x03963ACC LDR X2, [X23]
	0x03963AD0 MOV X28, X0
	0x03963AD4 MOV X0, X21
	0x03963AD8 MOV W1, W26
	0x03963ADC BL 0x2FB9C40
	0x03963AE0 CBZ X19, 0x3963FFC
	0x03963AE4 LDR X2, [X25]
	0x03963AE8 MOV X1, X0
	0x03963AEC MOV X0, X19
	0x03963AF0 BL 0x301BCCC
	0x03963AF4 CBZ X28, 0x3963FFC
	0x03963AF8 ADRP X9, 0x7EC000
	0x03963AFC LDR W10, [X28 + 0x1C]
	0x03963B00 LDR X8, [X28 + 0x10]
	0x03963B04 LDR X9, [X9 + 0x1C0]
	0x03963B08 ADD W10, W10, 0x1
	0x03963B0C LDR X9, [X9]
	0x03963B10 STR W10, [X28 + 0x1C]
	0x03963B14 CBZ X8, 0x3963FFC
	0x03963B18 LDRSW X10, [X28 + 0x18]
	0x03963B1C LDR W11, [X8 + 0x18]
	0x03963B20 MOV X1, X0
	0x03963B24 CMP W10, W11
	0x03963B28 B.CS 0x3963B40
	0x03963B2C ADD W9, W10, 0x1
	0x03963B30 ADD X8, X8, X10, 0x3, LSL
	0x03963B34 STR W9, [X28 + 0x18]
	0x03963B38 STR X1, [X8 + 0x20]
	0x03963B3C B 0x3963B54
	0x03963B40 LDR X8, [X9 + 0x20]
	0x03963B44 MOV X0, X28
	0x03963B48 LDR X8, [X8 + 0xC0]
	0x03963B4C LDR X2, [X8 + 0x70]
	0x03963B50 BL 0x301BF90
	0x03963B54 LDR X2, [X23]
	0x03963B58 MOV X0, X21
	0x03963B5C MOV W1, W26
	0x03963B60 BL 0x2FB9C40
	0x03963B64 CBZ X24, 0x3963FFC
	0x03963B68 ADRP X8, 0x7EC000
	0x03963B6C LDR X8, [X8 + 0xA98]
	0x03963B70 MOV X1, X0
	0x03963B74 MOV X0, X24
	0x03963B78 LDR X2, [X8]
	0x03963B7C BL 0x2D9B6BC
	0x03963B80 TBZ X0, 0x0, 0x3963E8C
	0x03963B84 LDR X2, [X23]
	0x03963B88 MOV X0, X21
	0x03963B8C MOV W1, W26
	0x03963B90 BL 0x2FB9C40
	0x03963B94 LDR X2, [X25]
	0x03963B98 MOV X1, X0
	0x03963B9C MOV X0, X19
	0x03963BA0 BL 0x301BCCC
	0x03963BA4 LDR X2, [X23]
	0x03963BA8 MOV X28, X0
	0x03963BAC MOV X0, X21
	0x03963BB0 MOV W1, W26
	0x03963BB4 MOV X24, X23
	0x03963BB8 MOV X22, X25
	0x03963BBC MOV X25, X21
	0x03963BC0 BL 0x2FB9C40
	0x03963BC4 LDR X2, [X22]
	0x03963BC8 UBFM X1, X0, 0x20, 0x3F
	0x03963BCC MOV X0, X19
	0x03963BD0 MOV X22, X19
	0x03963BD4 BL 0x301BCCC
	0x03963BD8 MOV X1, X0
	0x03963BDC FMOV S0, 0.5
	0x03963BE0 MOV X0, X28
	0x03963BE4 MOV X2, X31
	0x03963BE8 BL 0x3940610
	0x03963BEC LDR X19, [X31 + 0x18]
	0x03963BF0 CBZ X19, 0x3963FFC
	0x03963BF4 ADRP X8, 0x7EB000
	0x03963BF8 LDR X8, [X8 + 0xD38]
	0x03963BFC MOV X28, X0
	0x03963C00 MOV X0, X19
	0x03963C04 MOV W1, W27
	0x03963C08 LDR X2, [X8]
	0x03963C0C BL 0x301BCCC
	0x03963C10 LDR X2, [X29]
	0x03963C14 MOV X23, X29
	0x03963C18 MOV X29, X0
	0x03963C1C MOV X0, X20
	0x03963C20 MOV W1, W27
	0x03963C24 BL 0x301BCCC
	0x03963C28 ADRP X21, 0x791000
	0x03963C2C LDR X21, [X21 + 0xE10]
	0x03963C30 CBZ X0, 0x3963FFC
	0x03963C34 CBZ X29, 0x3963FFC
	0x03963C38 LDR W10, [X29 + 0x1C]
	0x03963C3C LDR W1, [X0 + 0x18]
	0x03963C40 LDR X8, [X29 + 0x10]
	0x03963C44 LDR X9, [X21]
	0x03963C48 ADD W10, W10, 0x1
	0x03963C4C STR W10, [X29 + 0x1C]
	0x03963C50 CBZ X8, 0x3963FFC
	0x03963C54 LDRSW X10, [X29 + 0x18]
	0x03963C58 LDR W11, [X8 + 0x18]
	0x03963C5C CMP W10, W11
	0x03963C60 B.CS 0x3963C78
	0x03963C64 ADD W9, W10, 0x1
	0x03963C68 ADD X8, X8, X10, 0x2, LSL
	0x03963C6C STR W9, [X29 + 0x18]
	0x03963C70 STR W1, [X8 + 0x20]
	0x03963C74 B 0x3963C8C
	0x03963C78 LDR X8, [X9 + 0x20]
	0x03963C7C MOV X0, X29
	0x03963C80 LDR X8, [X8 + 0xC0]
	0x03963C84 LDR X2, [X8 + 0x70]
	0x03963C88 BL 0x2FDC70C
	0x03963C8C LDR X2, [X23]
	0x03963C90 MOV X0, X20
	0x03963C94 MOV W1, W27
	0x03963C98 MOV X29, X23
	0x03963C9C BL 0x301BCCC
	0x03963CA0 CBZ X0, 0x3963FFC
	0x03963CA4 ADRP X9, 0x7EC000
	0x03963CA8 LDR W10, [X0 + 0x1C]
	0x03963CAC LDR X8, [X0 + 0x10]
	0x03963CB0 LDR X9, [X9 + 0x1C0]
	0x03963CB4 ADD W10, W10, 0x1
	0x03963CB8 LDR X9, [X9]
	0x03963CBC STR W10, [X0 + 0x1C]
	0x03963CC0 CBZ X8, 0x3963FFC
	0x03963CC4 LDRSW X10, [X0 + 0x18]
	0x03963CC8 LDR W11, [X8 + 0x18]
	0x03963CCC CMP W10, W11
	0x03963CD0 B.CS 0x3963CE8
	0x03963CD4 ADD W9, W10, 0x1
	0x03963CD8 ADD X8, X8, X10, 0x3, LSL
	0x03963CDC STR W9, [X0 + 0x18]
	0x03963CE0 STR X28, [X8 + 0x20]
	0x03963CE4 B 0x3963CFC
	0x03963CE8 LDR X8, [X9 + 0x20]
	0x03963CEC MOV X1, X28
	0x03963CF0 LDR X8, [X8 + 0xC0]
	0x03963CF4 LDR X2, [X8 + 0x70]
	0x03963CF8 BL 0x301BF90
	0x03963CFC ADRP X8, 0x7EB000
	0x03963D00 LDR X8, [X8 + 0xD38]
	0x03963D04 MOV X0, X19
	0x03963D08 MOV W1, W27
	0x03963D0C LDR X2, [X8]
	0x03963D10 BL 0x301BCCC
	0x03963D14 LDR X2, [X29]
	0x03963D18 MOV X29, X0
	0x03963D1C MOV X0, X20
	0x03963D20 MOV W1, W27
	0x03963D24 BL 0x301BCCC
	0x03963D28 CBZ X0, 0x3963FFC
	0x03963D2C CBZ X29, 0x3963FFC
	0x03963D30 LDR W10, [X29 + 0x1C]
	0x03963D34 LDR W1, [X0 + 0x18]
	0x03963D38 LDR X8, [X29 + 0x10]
	0x03963D3C LDR X9, [X21]
	0x03963D40 ADD W10, W10, 0x1
	0x03963D44 STR W10, [X29 + 0x1C]
	0x03963D48 CBZ X8, 0x3963FFC
	0x03963D4C LDRSW X10, [X29 + 0x18]
	0x03963D50 LDR W11, [X8 + 0x18]
	0x03963D54 CMP W10, W11
	0x03963D58 B.CS 0x3963D70
	0x03963D5C ADD W9, W10, 0x1
	0x03963D60 ADD X8, X8, X10, 0x2, LSL
	0x03963D64 STR W9, [X29 + 0x18]
	0x03963D68 STR W1, [X8 + 0x20]
	0x03963D6C B 0x3963D84
	0x03963D70 LDR X8, [X9 + 0x20]
	0x03963D74 MOV X0, X29
	0x03963D78 LDR X8, [X8 + 0xC0]
	0x03963D7C LDR X2, [X8 + 0x70]
	0x03963D80 BL 0x2FDC70C
	0x03963D84 LDR X2, [X23]
	0x03963D88 MOV X0, X20
	0x03963D8C MOV W1, W27
	0x03963D90 MOV X29, X23
	0x03963D94 BL 0x301BCCC
	0x03963D98 CBZ X0, 0x3963FFC
	0x03963D9C ADRP X9, 0x7EC000
	0x03963DA0 LDR W10, [X0 + 0x1C]
	0x03963DA4 LDR X8, [X0 + 0x10]
	0x03963DA8 LDR X9, [X9 + 0x1C0]
	0x03963DAC ADD W10, W10, 0x1
	0x03963DB0 LDR X9, [X9]
	0x03963DB4 STR W10, [X0 + 0x1C]
	0x03963DB8 CBZ X8, 0x3963FFC
	0x03963DBC LDRSW X10, [X0 + 0x18]
	0x03963DC0 LDR W11, [X8 + 0x18]
	0x03963DC4 MOV X23, X24
	0x03963DC8 LDR X24, [X31]
	0x03963DCC MOV X19, X22
	0x03963DD0 CMP W10, W11
	0x03963DD4 B.CS 0x3963DF0
	0x03963DD8 ADD W9, W10, 0x1
	0x03963DDC STR W9, [X0 + 0x18]
	0x03963DE0 LDR X9, [X31 + 0x10]
	0x03963DE4 ADD X8, X8, X10, 0x3, LSL
	0x03963DE8 STR X9, [X8 + 0x20]
	0x03963DEC B 0x3963E04
	0x03963DF0 LDR X8, [X9 + 0x20]
	0x03963DF4 LDR X1, [X31 + 0x10]
	0x03963DF8 LDR X8, [X8 + 0xC0]
	0x03963DFC LDR X2, [X8 + 0x70]
	0x03963E00 BL 0x301BF90
	0x03963E04 LDR W22, [X31 + 0xC]
	0x03963E08 LDR X2, [X29]
	0x03963E0C ADD W8, W27, 0x1
	0x03963E10 MOV X0, X20
	0x03963E14 SDIV W9, W8, W22
	0x03963E18 MSUB W27, W9, W22, W8
	0x03963E1C MOV W1, W27
	0x03963E20 MOV X21, X25
	0x03963E24 BL 0x301BCCC
	0x03963E28 ADRP X25, 0x7EC000
	0x03963E2C LDR X25, [X25 + 0x1D0]
	0x03963E30 CBZ X0, 0x3963FFC
	0x03963E34 ADRP X9, 0x7EC000
	0x03963E38 LDR W10, [X0 + 0x1C]
	0x03963E3C LDR X8, [X0 + 0x10]
	0x03963E40 LDR X9, [X9 + 0x1C0]
	0x03963E44 ADD W10, W10, 0x1
	0x03963E48 LDR X9, [X9]
	0x03963E4C STR W10, [X0 + 0x1C]
	0x03963E50 CBZ X8, 0x3963FFC
	0x03963E54 LDRSW X10, [X0 + 0x18]
	0x03963E58 LDR W11, [X8 + 0x18]
	0x03963E5C CMP W10, W11
	0x03963E60 B.CS 0x3963E78
	0x03963E64 ADD W9, W10, 0x1
	0x03963E68 ADD X8, X8, X10, 0x3, LSL
	0x03963E6C STR W9, [X0 + 0x18]
	0x03963E70 STR X28, [X8 + 0x20]
	0x03963E74 B 0x3963E8C
	0x03963E78 LDR X8, [X9 + 0x20]
	0x03963E7C MOV X1, X28
	0x03963E80 LDR X8, [X8 + 0xC0]
	0x03963E84 LDR X2, [X8 + 0x70]
	0x03963E88 BL 0x301BF90
	0x03963E8C LDR W8, [X21 + 0x18]
	0x03963E90 ADD W26, W26, 0x1
	0x03963E94 CMP W26, W8
	0x03963E98 B.LT 0x3963AB4
	0x03963E9C ADRP X8, 0x7EC000
	0x03963EA0 LDR X8, [X8 + 0x9A0]
	0x03963EA4 ADRP X19, 0x7EC000
	0x03963EA8 LDR X0, [X8]
	0x03963EAC LDR X19, [X19 + 0x988]
	0x03963EB0 BL 0x1C16F10
	0x03963EB4 LDR X1, [X19]
	0x03963EB8 MOV X19, X0
	0x03963EBC BL 0x301B7C4
	0x03963EC0 CBZ X20, 0x3963FFC
	0x03963EC4 LDR W8, [X20 + 0x18]
	0x03963EC8 CMP W8, 0x1
	0x03963ECC B.LT 0x3963FD8
	0x03963ED0 ADRP X26, 0x7EC000
	0x03963ED4 ADRP X27, 0x7EC000
	0x03963ED8 LDR X26, [X26 + 0xA60]
	0x03963EDC LDR X27, [X27 + 0x978]
	0x03963EE0 MOV W21, W31
	0x03963EE4 LDR X2, [X29]
	0x03963EE8 MOV X0, X20
	0x03963EEC MOV W1, W21
	0x03963EF0 BL 0x301BCCC
	0x03963EF4 MOV W1, W31
	0x03963EF8 BL 0x394FDA4
	0x03963EFC CBZ X0, 0x3963FAC
	0x03963F00 MOV X23, X0
	0x03963F04 LDR X0, [X31 + 0x18]
	0x03963F08 CBZ X0, 0x3963FFC
	0x03963F0C ADRP X8, 0x7EB000
	0x03963F10 LDR X8, [X8 + 0xD38]
	0x03963F14 MOV W1, W21
	0x03963F18 LDR X2, [X8]
	0x03963F1C BL 0x301BCCC
	0x03963F20 LDR X8, [X26]
	0x03963F24 MOV X25, X0
	0x03963F28 MOV X0, X8
	0x03963F2C BL 0x1C16F10
	0x03963F30 MOV X1, X31
	0x03963F34 MOV X22, X0
	0x03963F38 BL 0x33BDD8C
	0x03963F3C STP X23, X25, [X22 + 0x10]
	0x03963F40 CBZ X19, 0x3963FFC
	0x03963F44 LDR W10, [X19 + 0x1C]
	0x03963F48 LDR X8, [X19 + 0x10]
	0x03963F4C LDR X9, [X27]
	0x03963F50 ADD W10, W10, 0x1
	0x03963F54 STR W10, [X19 + 0x1C]
	0x03963F58 CBZ X8, 0x3963FFC
	0x03963F5C LDRSW X10, [X19 + 0x18]
	0x03963F60 LDR W11, [X8 + 0x18]
	0x03963F64 CMP W10, W11
	0x03963F68 B.CS 0x3963F80
	0x03963F6C ADD W9, W10, 0x1
	0x03963F70 ADD X8, X8, X10, 0x3, LSL
	0x03963F74 STR W9, [X19 + 0x18]
	0x03963F78 STR X22, [X8 + 0x20]
	0x03963F7C B 0x3963F98
	0x03963F80 LDR X8, [X9 + 0x20]
	0x03963F84 MOV X0, X19
	0x03963F88 MOV X1, X22
	0x03963F8C LDR X8, [X8 + 0xC0]
	0x03963F90 LDR X2, [X8 + 0x70]
	0x03963F94 BL 0x301BF90
	0x03963F98 LDR W8, [X20 + 0x18]
	0x03963F9C ADD W21, W21, 0x1
	0x03963FA0 CMP W21, W8
	0x03963FA4 B.LT 0x3963EE4
	0x03963FA8 B 0x3963FD8
	0x03963FAC CBZ X19, 0x3963FFC
	0x03963FB0 LDP W2, W8, [X19 + 0x18]
	0x03963FB4 ADD W8, W8, 0x1
	0x03963FB8 CMP W2, 0x1
	0x03963FBC STP W31, W8, [X19 + 0x18]
	0x03963FC0 B.LT 0x3963FD4
	0x03963FC4 LDR X0, [X19 + 0x10]
	0x03963FC8 MOV W1, W31
	0x03963FCC MOV X3, X31
	0x03963FD0 BL 0x339FA34
	0x03963FD4 MOV X19, X31
	0x03963FD8 MOV X0, X19
	0x03963FDC LDP X20, X19, [X31 + 0x70]
	0x03963FE0 LDP X22, X21, [X31 + 0x60]
	0x03963FE4 LDP X24, X23, [X31 + 0x50]
	0x03963FE8 LDP X26, X25, [X31 + 0x40]
	0x03963FEC LDP X28, X27, [X31 + 0x30]
	0x03963FF0 LDP X29, X30, [X31 + 0x20]
	0x03963FF4 ADD X31, X31, 0x80
	0x03963FF8 RET
	0x03963FFC BL 0x1C16F20
	0x03964000 SUB X31, X31, 0x90
	0x03964004 STP X29, X30, [X31 + 0x30]
	0x03964008 STP X28, X27, [X31 + 0x40]
	0x0396400C STP X26, X25, [X31 + 0x50]
	0x03964010 STP X24, X23, [X31 + 0x60]
	0x03964014 STP X22, X21, [X31 + 0x70]
	0x03964018 STP X20, X19, [X31 + 0x80]
	0x0396401C STR X3, [X31 + 0x18]
	0x03964020 ADRP X23, 0xA7D000
	0x03964024 ADRP X20, 0x7EA000
	0x03964028 LDRB W8, [X23 + 0x9B2]
	0x0396402C LDR X20, [X20 + 0xB08]
	0x03964030 MOV X26, X2
	0x03964034 MOV X21, X1
	0x03964038 MOV X22, X0
	0x0396403C TBNZ X8, 0x0, 0x3964120
	0x03964040 ADRP X0, 0x7EB000
	0x03964044 LDR X0, [X0 + 0xA60]
	0x03964048 BL 0x1C16CF4
	0x0396404C ADRP X0, 0x7B7000
	0x03964050 LDR X0, [X0 + 0x600]
	0x03964054 BL 0x1C16CF4
	0x03964058 ADRP X0, 0x7EA000
	0x0396405C LDR X0, [X0 + 0xE28]
	0x03964060 BL 0x1C16CF4
	0x03964064 ADRP X0, 0x7EB000
	0x03964068 LDR X0, [X0 + 0xA90]
	0x0396406C BL 0x1C16CF4
	0x03964070 ADRP X0, 0x790000
	0x03964074 LDR X0, [X0 + 0xE10]
	0x03964078 BL 0x1C16CF4
	0x0396407C ADRP X0, 0x7EB000
	0x03964080 LDR X0, [X0 + 0x978]
	0x03964084 BL 0x1C16CF4
	0x03964088 ADRP X0, 0x7EB000
	0x0396408C LDR X0, [X0 + 0x1C0]
	0x03964090 BL 0x1C16CF4
	0x03964094 ADRP X0, 0x793000
	0x03964098 LDR X0, [X0 + 0xB70]
	0x0396409C BL 0x1C16CF4
	0x039640A0 ADRP X0, 0x7EB000
	0x039640A4 LDR X0, [X0 + 0x988]
	0x039640A8 BL 0x1C16CF4
	0x039640AC ADRP X0, 0x7EB000
	0x039640B0 LDR X0, [X0 + 0x1C8]
	0x039640B4 BL 0x1C16CF4
	0x039640B8 ADRP X0, 0x7E9000
	0x039640BC LDR X0, [X0 + 0xE18]
	0x039640C0 BL 0x1C16CF4
	0x039640C4 ADRP X0, 0x7EA000
	0x039640C8 LDR X0, [X0 + 0xFE0]
	0x039640CC BL 0x1C16CF4
	0x039640D0 ADRP X0, 0x7EB000
	0x039640D4 LDR X0, [X0 + 0x1D0]
	0x039640D8 BL 0x1C16CF4
	0x039640DC ADRP X0, 0x7EA000
	0x039640E0 LDR X0, [X0 + 0xFE8]
	0x039640E4 BL 0x1C16CF4
	0x039640E8 ADRP X0, 0x790000
	0x039640EC LDR X0, [X0 + 0xE30]
	0x039640F0 BL 0x1C16CF4
	0x039640F4 ADRP X0, 0x7EB000
	0x039640F8 LDR X0, [X0 + 0x9A0]
	0x039640FC BL 0x1C16CF4
	0x03964100 ADRP X0, 0x7E9000
	0x03964104 LDR X0, [X0 + 0xDE8]
	0x03964108 BL 0x1C16CF4
	0x0396410C ADRP X0, 0x7EA000
	0x03964110 LDR X0, [X0 + 0xB08]
	0x03964114 BL 0x1C16CF4
	0x03964118 MOVZ W8, 0x1
	0x0396411C STRB W8, [X23 + 0x9B2]
	0x03964120 LDR X0, [X20]
	0x03964124 STR X31, [X31 + 0x28]
	0x03964128 ADRP X23, 0x7EB000
	0x0396412C ADRP X19, 0x7E9000
	0x03964130 ADRP X20, 0x7EB000
	0x03964134 LDR W8, [X0 + 0xE0]
	0x03964138 LDR X23, [X23 + 0xA90]
	0x0396413C LDR X19, [X19 + 0xDE8]
	0x03964140 LDR X20, [X20 + 0x1C8]
	0x03964144 CBNZ W8, 0x396414C
	0x03964148 BL 0x1C16DFC
	0x0396414C MOV X0, X22
	0x03964150 MOV X1, X31
	0x03964154 BL 0x3942528
	0x03964158 LDR X8, [X23]
	0x0396415C MOV X29, X0
	0x03964160 MOVZ W1, 0x2
	0x03964164 MOV X0, X8
	0x03964168 BL 0x1C16D6C
	0x0396416C LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X29
	006 Move [X31+72], X30
	007 Move [X31+80], X28
	008 Move [X31+88], X27
	009 Move [X31+96], X26
	010 Move [X31+104], X25
	011 Move [X31+112], X24
	012 Move [X31+120], X23
	013 Move [X31+128], X22
	014 Move [X31+136], X21
	015 Move [X31+144], X20
	016 Move [X31+152], X19
	017 Move [X31+16], X3
	018 Move [X31+12], W2
	019 Move [X31+28], W1
	020 Move X21, 0xA7F000
	021 Move X19, 0x7EC000
	022 Move W8, [X21+2485]
	023 Move X19, [X19+2824]
	024 Move X22, X4
	025 Move X28, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {89}
	030 Move X0, 0x7ED000
	031 Move X0, [X0+2656]
	032 Call 0x1C17CF4
	033 Move X0, 0x7EB000
	034 Move X0, [X0+3200]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B9000
	037 Move X0, [X0+1536]
	038 Call 0x1C17CF4
	039 Move X0, 0x7EC000
	040 Move X0, [X0+3624]
	041 Call 0x1C17CF4
	042 Move X0, 0x7ED000
	043 Move X0, [X0+2704]
	044 Call 0x1C17CF4
	045 Move X0, 0x792000
	046 Move X0, [X0+3600]
	047 Call 0x1C17CF4
	048 Move X0, 0x7ED000
	049 Move X0, [X0+2424]
	050 Call 0x1C17CF4
	051 Move X0, 0x7ED000
	052 Move X0, [X0+448]
	053 Call 0x1C17CF4
	054 Move X0, 0x795000
	055 Move X0, [X0+2928]
	056 Call 0x1C17CF4
	057 Move X0, 0x7ED000
	058 Move X0, [X0+2440]
	059 Call 0x1C17CF4
	060 Move X0, 0x7ED000
	061 Move X0, [X0+456]
	062 Call 0x1C17CF4
	063 Move X0, 0x7EB000
	064 Move X0, [X0+3608]
	065 Call 0x1C17CF4
	066 Move X0, 0x7EC000
	067 Move X0, [X0+4064]
	068 Call 0x1C17CF4
	069 Move X0, 0x7ED000
	070 Move X0, [X0+464]
	071 Call 0x1C17CF4
	072 Move X0, 0x7EC000
	073 Move X0, [X0+4072]
	074 Call 0x1C17CF4
	075 Move X0, 0x792000
	076 Move X0, [X0+3632]
	077 Call 0x1C17CF4
	078 Move X0, 0x7ED000
	079 Move X0, [X0+2464]
	080 Call 0x1C17CF4
	081 Move X0, 0x7EB000
	082 Move X0, [X0+3560]
	083 Call 0x1C17CF4
	084 Move X0, 0x7EC000
	085 Move X0, [X0+2824]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X21+2485], W8
	089 Move X0, [X19]
	090 Move [X31+40], X31
	091 Move X19, 0x7ED000
	092 Move X24, 0x7EB000
	093 Move X23, 0x7ED000
	094 Move W8, [X0+224]
	095 Move X19, [X19+2704]
	096 Move X24, [X24+3560]
	097 Move X23, [X23+456]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X28
	102 Move X1, X31
	103 Call WingedEdge.SortEdgesByAdjacency, X0
	104 Move X8, [X19]
	105 Move X27, X0
	106 Move W1, 2
	107 Move X0, X8
	108 Call 0x1C17D6C
	109 Move X8, [X24]
	110 Move X19, X0
	111 Move X0, X8
	112 Call 0x1C17F10
	113 Move X1, [X23]
	114 Move X21, X0
	115 Call List`1<Object>..ctor, X0
	116 Compare X19, 0
	117 JumpIfEqual {593}
	118 Compare X21, 0
	119 JumpIfEqual {126}
	120 Move X8, [X19]
	121 Move X0, X21
	122 Move X1, [X8+64]
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {595}
	126 Move W8, [X19+24]
	127 Compare W8, 0
	128 JumpIfEqual {594}
	129 Move [X19+32], X21
	130 Move X0, [X24]
	131 Call 0x1C17F10
	132 Move X1, [X23]
	133 Move X21, X0
	134 Call List`1<Object>..ctor, X0
	135 Compare X21, 0
	136 JumpIfEqual {143}
	137 Move X8, [X19]
	138 Move X0, X21
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {595}
	143 Move W8, [X19+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X26, 0x7EC000
	146 Move X26, [X26+3624]
	147 Move [X19+40], X21
	148 Move X24, 0x792000
	149 Move X23, 0x795000
	150 Move X0, [X26]
	151 Move X24, [X24+3632]
	152 Move X23, [X23+2928]
	153 Move W1, 2
	154 Call 0x1C17D6C
	155 Move X8, [X24]
	156 Move X25, X0
	157 Move X0, X8
	158 Call 0x1C17F10
	159 Move X1, [X23]
	160 Move X21, X0
	161 Call List`1<Int32>..ctor, X0
	162 Compare X25, 0
	163 JumpIfEqual {593}
	164 Compare X21, 0
	165 JumpIfEqual {172}
	166 Move X8, [X25]
	167 Move X0, X21
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {595}
	172 Move W8, [X25+24]
	173 Compare W8, 0
	174 JumpIfEqual {594}
	175 Move [X25+32], X21
	176 Move X0, [X24]
	177 Call 0x1C17F10
	178 Move X1, [X23]
	179 Move X21, X0
	180 Call List`1<Int32>..ctor, X0
	181 Compare X21, 0
	182 JumpIfEqual {189}
	183 Move X8, [X25]
	184 Move X0, X21
	185 Move X1, [X8+64]
	186 Call 0x1C17E00
	187 Compare X0, 0
	188 JumpIfEqual {595}
	189 Move W8, [X25+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X25+40], X21
	192 Move X0, [X26]
	193 Move W1, 2
	194 Call 0x1C17D6C
	195 Move X8, [X24]
	196 Move X26, X0
	197 Move X0, X8
	198 Call 0x1C17F10
	199 Move X1, [X23]
	200 Move X21, X0
	201 Call List`1<Int32>..ctor, X0
	202 Compare X26, 0
	203 JumpIfEqual {593}
	204 Compare X21, 0
	205 JumpIfEqual {212}
	206 Move X8, [X26]
	207 Move X0, X21
	208 Move X1, [X8+64]
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfEqual {595}
	212 Move W8, [X26+24]
	213 Compare W8, 0
	214 JumpIfEqual {594}
	215 Move [X26+32], X21
	216 Move X0, [X24]
	217 Call 0x1C17F10
	218 Move X1, [X23]
	219 Move X21, X0
	220 Call List`1<Int32>..ctor, X0
	221 Compare X21, 0
	222 JumpIfEqual {229}
	223 Move X8, [X26]
	224 Move X0, X21
	225 Move X1, [X8+64]
	226 Call 0x1C17E00
	227 Compare X0, 0
	228 JumpIfEqual {595}
	229 Move W8, [X26+24]
	230 Move [X31], X28
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move [X26+40], X21
	233 Compare X27, 0
	234 JumpIfEqual {593}
	235 Move W8, [X27+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X23, 0x7EC000
	238 Move X23, [X23+4072]
	239 Move W28, W31
	240 Move W24, W31
	241 Move X2, [X23]
	242 Move X0, X27
	243 Move W1, W28
	244 Call List`1<Edge>.get_Item, X0, X1
	245 Move X8, 0x7B9000
	246 Move X8, [X8+1536]
	247 Move [X31+40], X0
	248 Move X8, [X8]
	249 Move W9, [X8+224]
	250 Compare W9, 0
	251 JumpIfNotEqual {254}
	252 Move X0, X8
	253 Call 0x1C17DFC
	254 Move W1, [X31+28]
	255 Add X0, X31, 40
	256 Move X2, X31
	257 Call Edge.Contains, X0, X1
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {283}
	262 Move X2, [X23]
	263 Move X0, X27
	264 Move W1, W28
	265 Call List`1<Edge>.get_Item, X0, X1
	266 Move X8, 0x7B9000
	267 Move X8, [X8+1536]
	268 Move [X31+40], X0
	269 Move X8, [X8]
	270 Move W9, [X8+224]
	271 Compare W9, 0
	272 JumpIfNotEqual {275}
	273 Move X0, X8
	274 Call 0x1C17DFC
	275 Move W1, [X31+12]
	276 Add X0, X31, 40
	277 Move X2, X31
	278 Call Edge.Contains, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfEqual {574}
	283 Move X2, [X23]
	284 Move X0, X27
	285 Move W1, W28
	286 Move X20, X23
	287 Call List`1<Edge>.get_Item, X0, X1
	288 Move W8, [X19+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X29, X0
	291 Move X0, [X31+16]
	292 Compare X0, 0
	293 JumpIfEqual {593}
	294 Move W23, W24
	295 Add X8, X19, X23
	296 Move X21, [X8+32]
	297 Move X8, 0x7ED000
	298 Move X8, [X8+464]
	299 Move W1, W29
	300 Move X2, [X8]
	301 Call List`1<Object>.get_Item, X0, X1
	302 Compare X21, 0
	303 JumpIfEqual {593}
	304 Move X9, 0x7ED000
	305 Move W10, [X21+28]
	306 Move X8, [X21+16]
	307 Move X9, [X9+448]
	308 Add W10, W10, 1
	309 Move X9, [X9]
	310 Move [X21+28], W10
	311 Compare X8, 0
	312 JumpIfEqual {593}
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Move W11, [X8+24]
	315 Move X1, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W9, W10, 1
	318 Add X8, X8, X10
	319 Move [X21+24], W9
	320 Move [X8+32], X1
	321 Move X8, [X9+32]
	322 Move X0, X21
	323 Move X8, [X8+192]
	324 Move X2, [X8+112]
	325 Call List`1<Object>.AddWithResize, X0, X1
	326 Move W8, [X25+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Compare X22, 0
	329 JumpIfEqual {593}
	330 Add X8, X25, X23
	331 Move X21, [X8+32]
	332 Move X8, 0x7EB000
	333 Move X8, [X8+3200]
	334 Move X0, X22
	335 Move W1, W29
	336 Move X2, [X8]
	337 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	338 Compare X21, 0
	339 JumpIfEqual {593}
	340 Move X9, 0x792000
	341 Move W10, [X21+28]
	342 Move X8, [X21+16]
	343 Move X9, [X9+3600]
	344 Add W10, W10, 1
	345 Move X9, [X9]
	346 Move [X21+28], W10
	347 Compare X8, 0
	348 JumpIfEqual {593}
	349 NotImplemented "Instruction LDRSW not yet implemented."
	350 Move W11, [X8+24]
	351 Move W1, W0
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Add W9, W10, 1
	354 Add X8, X8, X10
	355 Move [X21+24], W9
	356 Move [X8+32], W1
	357 Move X8, [X9+32]
	358 Move X0, X21
	359 Move X8, [X8+192]
	360 Move X2, [X8+112]
	361 Call List`1<Int32>.AddWithResize, X0, X1
	362 Move W8, [X31+28]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move W8, [X31+12]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X23, X20
	367 Add W8, W24, 1
	368 Add W9, W24, 2
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move W10, [X26+24]
	371 NotImplemented "Instruction CSINC not yet implemented."
	372 And W9, W9, 0xFFFFFFFE
	373 Subtract W24, W8, W9
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move W8, [X19+24]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Add X9, X26, X24
	378 Add X21, X19, X24
	379 Move X0, [X9+32]
	380 Add X21, X21, 32
	381 Move X9, [X21]
	382 Compare X9, 0
	383 JumpIfEqual {593}
	384 Compare X0, 0
	385 JumpIfEqual {593}
	386 Move X10, 0x792000
	387 Move W1, [X9+24]
	388 Move W11, [X0+28]
	389 Move X9, [X0+16]
	390 Move X10, [X10+3600]
	391 Add W11, W11, 1
	392 Move X10, [X10]
	393 Move [X0+28], W11
	394 Compare X9, 0
	395 JumpIfEqual {593}
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Move W12, [X9+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Add W10, W11, 1
	400 Add X9, X9, X11
	401 Move [X0+24], W10
	402 Move [X9+32], W1
	403 Move X8, [X10+32]
	404 Move X8, [X8+192]
	405 Move X2, [X8+112]
	406 Call List`1<Int32>.AddWithResize, X0, X1
	407 Move W8, [X19+24]
	408 Move X0, [X31+16]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X8, 0x7ED000
	411 Move X21, [X21]
	412 Move X8, [X8+464]
	413 Move W1, W29
	414 Move X2, [X8]
	415 Call List`1<Object>.get_Item, X0, X1
	416 Compare X21, 0
	417 JumpIfEqual {593}
	418 Move X9, 0x7ED000
	419 Move W10, [X21+28]
	420 Move X8, [X21+16]
	421 Move X9, [X9+448]
	422 Add W10, W10, 1
	423 Move X9, [X9]
	424 Move [X21+28], W10
	425 Compare X8, 0
	426 JumpIfEqual {593}
	427 NotImplemented "Instruction LDRSW not yet implemented."
	428 Move W11, [X8+24]
	429 Move X1, X0
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add W9, W10, 1
	432 Add X8, X8, X10
	433 Move [X21+24], W9
	434 Move [X8+32], X1
	435 Move X8, [X9+32]
	436 Move X0, X21
	437 Move X8, [X8+192]
	438 Move X2, [X8+112]
	439 Call List`1<Object>.AddWithResize, X0, X1
	440 Move W8, [X25+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Add X8, X25, X24
	443 Move X21, [X8+32]
	444 Move X8, 0x7EB000
	445 Move X8, [X8+3200]
	446 Move X0, X22
	447 Move W1, W29
	448 Move X2, [X8]
	449 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	450 Compare X21, 0
	451 JumpIfEqual {593}
	452 Move X9, 0x792000
	453 Move W10, [X21+28]
	454 Move X8, [X21+16]
	455 Move X9, [X9+3600]
	456 Add W10, W10, 1
	457 Move X9, [X9]
	458 Move [X21+28], W10
	459 Compare X8, 0
	460 JumpIfEqual {593}
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Move W11, [X8+24]
	463 Move W1, W0
	464 Move X23, X20
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Add W9, W10, 1
	467 Add X8, X8, X10
	468 Move [X21+24], W9
	469 Move [X8+32], W1
	470 Move X8, [X9+32]
	471 Move X0, X21
	472 Move X8, [X8+192]
	473 Move X2, [X8+112]
	474 Call List`1<Int32>.AddWithResize, X0, X1
	475 Move W8, [X27+24]
	476 Add W28, W28, 1
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move X8, 0x7ED000
	479 Move X8, [X8+2464]
	480 Move X21, 0x7ED000
	481 Move X0, [X8]
	482 Move X21, [X21+2440]
	483 Call 0x1C17F10
	484 Move X1, [X21]
	485 Move X22, X0
	486 Call List`1<Object>..ctor, X0
	487 Move X8, [X31]
	488 Compare X8, 0
	489 JumpIfEqual {593}
	490 Move X1, [X8+16]
	491 Move X0, [X31+16]
	492 Move X2, X31
	493 Call Math.Normal, X0, X1
	494 Move X8, [X19+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move V8, V0
	497 Move V9, V1
	498 Move V10, V2
	499 Move X23, X31
	500 And X8, X8, 0
	501 Add X24, X19, 32
	502 Add X27, X25, 32
	503 Add X28, X26, 32
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X0, [X24]
	506 Move W1, W31
	507 Call AppendElements.FaceWithVertices, X0, X1
	508 Move W8, [X25+24]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move X20, X0
	511 Compare X0, 0
	512 JumpIfEqual {593}
	513 Move X8, [X27]
	514 Move [X20+32], X8
	515 Move W8, [X19+24]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X8, [X20+16]
	518 Compare X8, 0
	519 JumpIfEqual {593}
	520 Move X0, [X24]
	521 Move X1, [X8+16]
	522 Move X2, X31
	523 Call Math.Normal, X0, X1
	524 Multiply S0, S8, S0
	525 Multiply S1, S9, S1
	526 Add S0, S0, S1
	527 Multiply S1, S10, S2
	528 Add S0, S1, S0
	529 NotImplemented "Instruction FCMP not yet implemented."
	530 Move X0, [X20+16]
	531 Compare X0, 0
	532 JumpIfEqual {593}
	533 Move X1, X31
	534 Call Face.Reverse, X0
	535 Move W8, [X26+24]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move X8, 0x7EC000
	538 Move X29, [X28]
	539 Move X8, [X8+2656]
	540 Move X0, [X8]
	541 Call 0x1C17F10
	542 Move X1, X31
	543 Move X21, X0
	544 Call Object..ctor, X0
	545 Move [X21+16], X20
	546 Move [X21+24], X29
	547 Compare X22, 0
	548 JumpIfEqual {593}
	549 Move X9, 0x7EC000
	550 Move W10, [X22+28]
	551 Move X8, [X22+16]
	552 Move X9, [X9+2424]
	553 Add W10, W10, 1
	554 Move X9, [X9]
	555 Move [X22+28], W10
	556 Compare X8, 0
	557 JumpIfEqual {593}
	558 NotImplemented "Instruction LDRSW not yet implemented."
	559 Move W11, [X8+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add W9, W10, 1
	562 Add X8, X8, X10
	563 Move [X22+24], W9
	564 Move [X8+32], X21
	565 Move X8, [X9+32]
	566 Move X0, X22
	567 Move X1, X21
	568 Move X8, [X8+192]
	569 Move X2, [X8+112]
	570 Call List`1<Object>.AddWithResize, X0, X1
	571 Move W8, [X19+24]
	572 Add X23, X23, 1
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X22, X31
	575 Move X0, X22
	576 Move X20, [X31+144]
	577 Move X19, [X31+152]
	578 Move X22, [X31+128]
	579 Move X21, [X31+136]
	580 Move X24, [X31+112]
	581 Move X23, [X31+120]
	582 Move X26, [X31+96]
	583 Move X25, [X31+104]
	584 Move X28, [X31+80]
	585 Move X27, [X31+88]
	586 Move X29, [X31+64]
	587 Move X30, [X31+72]
	588 Move D9, [X31+48]
	589 Move D8, [X31+56]
	590 Move V10, [X31+32]
	591 Add X31, X31, 160
	592 Return X0
	593 Call 0x1C17F20
	594 Call 0x1C17F28
	595 Call 0x1C17F44
	596 Move X1, X31
	597 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.MeshOperations.ConnectFaceRebuildData> ConnectIndexesPerFace(UnityEngine.ProBuilder.Face face, System.Collections.Generic.List`1<System.Int32> indexes, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup, System.Int32 sharedIndexOffset)

Disassembly:
	0x03962E74 BL 0x2FDC70C
	0x03962E78 LDR W8, [X19 + 0x18]
	0x03962E7C LDR X0, [X31 + 0x10]
	0x03962E80 CMP W24, W8
	0x03962E84 B.CS 0x3963160
	0x03962E88 ADRP X8, 0x7ED000
	0x03962E8C LDR X21, [X21]
	0x03962E90 LDR X8, [X8 + 0x1D0]
	0x03962E94 MOV W1, W29
	0x03962E98 LDR X2, [X8]
	0x03962E9C BL 0x301BCCC
	0x03962EA0 CBZ X21, 0x396315C
	0x03962EA4 ADRP X9, 0x7ED000
	0x03962EA8 LDR W10, [X21 + 0x1C]
	0x03962EAC LDR X8, [X21 + 0x10]
	0x03962EB0 LDR X9, [X9 + 0x1C0]
	0x03962EB4 ADD W10, W10, 0x1
	0x03962EB8 LDR X9, [X9]
	0x03962EBC STR W10, [X21 + 0x1C]
	0x03962EC0 CBZ X8, 0x396315C
	0x03962EC4 LDRSW X10, [X21 + 0x18]
	0x03962EC8 LDR W11, [X8 + 0x18]
	0x03962ECC MOV X1, X0
	0x03962ED0 CMP W10, W11
	0x03962ED4 B.CS 0x3962EEC
	0x03962ED8 ADD W9, W10, 0x1
	0x03962EDC ADD X8, X8, X10, 0x3, LSL
	0x03962EE0 STR W9, [X21 + 0x18]
	0x03962EE4 STR X1, [X8 + 0x20]
	0x03962EE8 B 0x3962F00
	0x03962EEC LDR X8, [X9 + 0x20]
	0x03962EF0 MOV X0, X21
	0x03962EF4 LDR X8, [X8 + 0xC0]
	0x03962EF8 LDR X2, [X8 + 0x70]
	0x03962EFC BL 0x301BF90
	0x03962F00 LDR W8, [X25 + 0x18]
	0x03962F04 CMP W24, W8
	0x03962F08 B.CS 0x3963160
	0x03962F0C ADD X8, X25, X24, 0x3, LSL
	0x03962F10 LDR X21, [X8 + 0x20]
	0x03962F14 ADRP X8, 0x7EB000
	0x03962F18 LDR X8, [X8 + 0xC80]
	0x03962F1C MOV X0, X22
	0x03962F20 MOV W1, W29
	0x03962F24 LDR X2, [X8]
	0x03962F28 BL 0x2A0A2A8
	0x03962F2C CBZ X21, 0x396315C
	0x03962F30 ADRP X9, 0x792000
	0x03962F34 LDR W10, [X21 + 0x1C]
	0x03962F38 LDR X8, [X21 + 0x10]
	0x03962F3C LDR X9, [X9 + 0xE10]
	0x03962F40 ADD W10, W10, 0x1
	0x03962F44 LDR X9, [X9]
	0x03962F48 STR W10, [X21 + 0x1C]
	0x03962F4C CBZ X8, 0x396315C
	0x03962F50 LDRSW X10, [X21 + 0x18]
	0x03962F54 LDR W11, [X8 + 0x18]
	0x03962F58 MOV W1, W0
	0x03962F5C MOV X23, X20
	0x03962F60 CMP W10, W11
	0x03962F64 B.CS 0x3962F7C
	0x03962F68 ADD W9, W10, 0x1
	0x03962F6C ADD X8, X8, X10, 0x2, LSL
	0x03962F70 STR W9, [X21 + 0x18]
	0x03962F74 STR W1, [X8 + 0x20]
	0x03962F78 B 0x3962F90
	0x03962F7C LDR X8, [X9 + 0x20]
	0x03962F80 MOV X0, X21
	0x03962F84 LDR X8, [X8 + 0xC0]
	0x03962F88 LDR X2, [X8 + 0x70]
	0x03962F8C BL 0x2FDC70C
	0x03962F90 LDR W8, [X27 + 0x18]
	0x03962F94 ADD W28, W28, 0x1
	0x03962F98 CMP W28, W8
	0x03962F9C B.LT 0x3962BF4
	0x03962FA0 ADRP X8, 0x7ED000
	0x03962FA4 LDR X8, [X8 + 0x9A0]
	0x03962FA8 ADRP X21, 0x7ED000
	0x03962FAC LDR X0, [X8]
	0x03962FB0 LDR X21, [X21 + 0x988]
	0x03962FB4 BL 0x1C16F10
	0x03962FB8 LDR X1, [X21]
	0x03962FBC MOV X22, X0
	0x03962FC0 BL 0x301B7C4
	0x03962FC4 LDR X8, [X31]
	0x03962FC8 CBZ X8, 0x396315C
	0x03962FCC LDR X1, [X8 + 0x10]
	0x03962FD0 LDR X0, [X31 + 0x10]
	0x03962FD4 MOV X2, X31
	0x03962FD8 BL 0x39090D4
	0x03962FDC LDR X8, [X19 + 0x18]
	0x03962FE0 CMP W8, 0x1
	0x03962FE4 B.LT 0x3963130
	0x03962FE8 MOV V8.16B, V0.16B
	0x03962FEC MOV V9.16B, V1.16B
	0x03962FF0 MOV V10.16B, V2.16B
	0x03962FF4 MOV X23, X31
	0x03962FF8 AND X8, X8, 0x0
	0x03962FFC ADD X24, X19, 0x20
	0x03963000 ADD X27, X25, 0x20
	0x03963004 ADD X28, X26, 0x20
	0x03963008 CMP X23, W8, UXTW
	0x0396300C B.CS 0x3963160
	0x03963010 LDR X0, [X24, X23, LSL #3]
	0x03963014 MOV W1, W31
	0x03963018 BL 0x394FDA4
	0x0396301C LDR W8, [X25 + 0x18]
	0x03963020 CMP X23, X8
	0x03963024 B.CS 0x3963160
	0x03963028 MOV X20, X0
	0x0396302C CBZ X0, 0x396315C
	0x03963030 LDR X8, [X27, X23, LSL #3]
	0x03963034 STR X8, [X20 + 0x20]
	0x03963038 LDR W8, [X19 + 0x18]
	0x0396303C CMP X23, X8
	0x03963040 B.CS 0x3963160
	0x03963044 LDR X8, [X20 + 0x10]
	0x03963048 CBZ X8, 0x396315C
	0x0396304C LDR X0, [X24, X23, LSL #3]
	0x03963050 LDR X1, [X8 + 0x10]
	0x03963054 MOV X2, X31
	0x03963058 BL 0x39090D4
	0x0396305C FMUL S0, S8, S0
	0x03963060 FMUL S1, S9, S1
	0x03963064 FADD S0, S0, S1
	0x03963068 FMUL S1, S10, S2
	0x0396306C FADD S0, S1, S0
	0x03963070 FCMP S0, 0x0
	0x03963074 B.PL 0x3963088
	0x03963078 LDR X0, [X20 + 0x10]
	0x0396307C CBZ X0, 0x396315C
	0x03963080 MOV X1, X31
	0x03963084 BL 0x3900E24
	0x03963088 LDR W8, [X26 + 0x18]
	0x0396308C CMP X23, X8
	0x03963090 B.CS 0x3963160
	0x03963094 ADRP X8, 0x7EC000
	0x03963098 LDR X29, [X28, X23, LSL #3]
	0x0396309C LDR X8, [X8 + 0xA60]
	0x039630A0 LDR X0, [X8]
	0x039630A4 BL 0x1C16F10
	0x039630A8 MOV X1, X31
	0x039630AC MOV X21, X0
	0x039630B0 BL 0x33BDD8C
	0x039630B4 STP X20, X29, [X21 + 0x10]
	0x039630B8 CBZ X22, 0x396315C
	0x039630BC ADRP X9, 0x7EC000
	0x039630C0 LDR W10, [X22 + 0x1C]
	0x039630C4 LDR X8, [X22 + 0x10]
	0x039630C8 LDR X9, [X9 + 0x978]
	0x039630CC ADD W10, W10, 0x1
	0x039630D0 LDR X9, [X9]
	0x039630D4 STR W10, [X22 + 0x1C]
	0x039630D8 CBZ X8, 0x396315C
	0x039630DC LDRSW X10, [X22 + 0x18]
	0x039630E0 LDR W11, [X8 + 0x18]
	0x039630E4 CMP W10, W11
	0x039630E8 B.CS 0x3963100
	0x039630EC ADD W9, W10, 0x1
	0x039630F0 ADD X8, X8, X10, 0x3, LSL
	0x039630F4 STR W9, [X22 + 0x18]
	0x039630F8 STR X21, [X8 + 0x20]
	0x039630FC B 0x3963118
	0x03963100 LDR X8, [X9 + 0x20]
	0x03963104 MOV X0, X22
	0x03963108 MOV X1, X21
	0x0396310C LDR X8, [X8 + 0xC0]
	0x03963110 LDR X2, [X8 + 0x70]
	0x03963114 BL 0x301BF90
	0x03963118 LDR W8, [X19 + 0x18]
	0x0396311C ADD X23, X23, 0x1
	0x03963120 CMP X23, W8, SXTW
	0x03963124 B.LT 0x3963008
	0x03963128 B 0x3963130
	0x0396312C MOV X22, X31
	0x03963130 MOV X0, X22
	0x03963134 LDP X20, X19, [X31 + 0x90]
	0x03963138 LDP X22, X21, [X31 + 0x80]
	0x0396313C LDP X24, X23, [X31 + 0x70]
	0x03963140 LDP X26, X25, [X31 + 0x60]
	0x03963144 LDP X28, X27, [X31 + 0x50]
	0x03963148 LDP X29, X30, [X31 + 0x40]
	0x0396314C LDP D9, D8, [X31 + 0x30]
	0x03963150 LDR V10, [X31 + 0x20]
	0x03963154 ADD X31, X31, 0xA0
	0x03963158 RET
	0x0396315C BL 0x1C16F20
	0x03963160 BL 0x1C16F28
	0x03963164 BL 0x1C16F44
	0x03963168 MOV X1, X31
	0x0396316C BL 0x1C16DEC
	0x03963170 SUB X31, X31, 0xB0
	0x03963174 STP X29, X30, [X31 + 0x50]
	0x03963178 STP X28, X27, [X31 + 0x60]
	0x0396317C STP X26, X25, [X31 + 0x70]
	0x03963180 STP X24, X23, [X31 + 0x80]
	0x03963184 STP X22, X21, [X31 + 0x90]
	0x03963188 STP X20, X19, [X31 + 0xA0]
	0x0396318C STR X3, [X31 + 0x8]
	0x03963190 ADRP X20, 0xA7E000
	0x03963194 ADRP X19, 0x7EB000
	0x03963198 LDRB W8, [X20 + 0x9B4]
	0x0396319C LDR X19, [X19 + 0xB08]
	0x039631A0 MOV X21, X2
	0x039631A4 MOV X25, X1
	0x039631A8 MOV X26, X0
	0x039631AC TBNZ X8, 0x0, 0x396329C
	0x039631B0 ADRP X0, 0x7EC000
	0x039631B4 LDR X0, [X0 + 0xA60]
	0x039631B8 BL 0x1C16CF4
	0x039631BC ADRP X0, 0x7EC000
	0x039631C0 LDR X0, [X0 + 0x58]
	0x039631C4 BL 0x1C16CF4
	0x039631C8 ADRP X0, 0x7EC000
	0x039631CC LDR X0, [X0 + 0x78]
	0x039631D0 BL 0x1C16CF4
	0x039631D4 ADRP X0, 0x7EC000
	0x039631D8 LDR X0, [X0 + 0xA98]
	0x039631DC BL 0x1C16CF4
	0x039631E0 ADRP X0, 0x7EC000
	0x039631E4 LDR X0, [X0 + 0xAA0]
	0x039631E8 BL 0x1C16CF4
	0x039631EC ADRP X0, 0x7EA000
	0x039631F0 LDR X0, [X0 + 0xD60]
	0x039631F4 BL 0x1C16CF4
	0x039631F8 ADRP X0, 0x791000
	0x039631FC LDR X0, [X0 + 0xE10]
	0x03963200 BL 0x1C16CF4
	0x03963204 ADRP X0, 0x7EC000
	0x03963208 LDR X0, [X0 + 0x1C0]
	0x0396320C BL 0x1C16CF4
	0x03963210 ADRP X0, 0x794000
	0x03963214 LDR X0, [X0 + 0xB70]
	0x03963218 BL 0x1C16CF4
	0x0396321C ADRP X0, 0x7EC000
	0x03963220 LDR X0, [X0 + 0x1C8]
	0x03963224 BL 0x1C16CF4
	0x03963228 ADRP X0, 0x7EA000
	0x0396322C LDR X0, [X0 + 0xE18]
	0x03963230 BL 0x1C16CF4
	0x03963234 ADRP X0, 0x7EB000
	0x03963238 LDR X0, [X0 + 0xFE0]
	0x0396323C BL 0x1C16CF4
	0x03963240 ADRP X0, 0x7EC000
	0x03963244 LDR X0, [X0 + 0x1D0]
	0x03963248 BL 0x1C16CF4
	0x0396324C ADRP X0, 0x7EB000
	0x03963250 LDR X0, [X0 + 0xFE8]
	0x03963254 BL 0x1C16CF4
	0x03963258 ADRP X0, 0x791000
	0x0396325C LDR X0, [X0 + 0xE30]
	0x03963260 BL 0x1C16CF4
	0x03963264 ADRP X0, 0x7EA000
	0x03963268 LDR X0, [X0 + 0xDE8]
	0x0396326C BL 0x1C16CF4
	0x03963270 ADRP X0, 0x7EC000
	0x03963274 LDR X0, [X0 + 0xAA8]
	0x03963278 BL 0x1C16CF4
	0x0396327C ADRP X0, 0x7EC000
	0x03963280 LDR X0, [X0 + 0x8B8]
	0x03963284 BL 0x1C16CF4
	0x03963288 ADRP X0, 0x7EB000
	0x0396328C LDR X0, [X0 + 0xB08]
	0x03963290 BL 0x1C16CF4
	0x03963294 MOVZ W8, 0x1
	0x03963298 STRB W8, [X20 + 0x9B4]
	0x0396329C LDR X0, [X19]
	0x039632A0 ADRP X23, 0x7EA000
	0x039632A4 ADRP X24, 0x7EC000
	0x039632A8 ADRP X22, 0x791000
	0x039632AC ADRP X20, 0x794000
	0x039632B0 ADRP X19, 0x7EC000
	0x039632B4 LDR X23, [X23 + 0xDE8]
	0x039632B8 LDR W8, [X0 + 0xE0]
	0x039632BC LDR X24, [X24 + 0x1C8]
	0x039632C0 LDR X22, [X22 + 0xE30]
	0x039632C4 LDR X20, [X20 + 0xB70]
	0x039632C8 LDR X19, [X19 + 0x8B8]
	0x039632CC CBNZ W8, 0x39632D4
	0x039632D0 BL 0x1C16DFC
	0x039632D4 MOV X0, X26
	0x039632D8 MOV X1, X31
	0x039632DC BL 0x3942528
	0x039632E0 LDR X8, [X23]
	0x039632E4 MOV X23, X0
	0x039632E8 MOV X0, X8
	0x039632EC BL 0x1C16F10
	0x039632F0 LDR X1, [X24]
	0x039632F4 MOV X24, X0
	0x039632F8 BL 0x301B7C4
	0x039632FC LDR X0, [X22]
	0x03963300 BL 0x1C16F10
	0x03963304 LDR X1, [X20]
	0x03963308 MOV X22, X0
	0x0396330C BL 0x2FDBF14
	0x03963310 LDR X0, [X19]
	0x03963314 STR X26, [X31]
	0x03963318 LDR W8, [X0 + 0xE0]
	0x0396331C CBNZ W8, 0x3963328
	0x03963320 BL 0x1C16DFC
	0x03963324 LDR X0, [X19]
	0x03963328 LDR X8, [X0 + 0xB8]
	0x0396332C ADRP X29, 0x7EC000
	0x03963330 ADRP X28, 0x7EA000
	0x03963334 ADRP X20, 0x7EC000
	0x03963338 LDR X26, [X8 + 0x58]
	0x0396333C LDR X29, [X29 + 0x58]
	0x03963340 LDR X28, [X28 + 0xD60]
	0x03963344 LDR X20, [X20 + 0xAA0]
	0x03963348 CBNZ X26, 0x396339C
	0x0396334C LDR W8, [X0 + 0xE0]
	0x03963350 CBNZ W8, 0x396335C
	0x03963354 BL 0x1C16DFC
	0x03963358 LDR X0, [X19]
	0x0396335C ADRP X9, 0x7EC000
	0x03963360 LDR X8, [X0 + 0xB8]
	0x03963364 LDR X9, [X9 + 0x78]
	0x03963368 LDR X27, [X8]
	0x0396336C LDR X0, [X9]
	0x03963370 BL 0x1C16F10
	0x03963374 ADRP X8, 0x7EC000
	0x03963378 LDR X8, [X8 + 0xAA8]
	0x0396337C MOV X1, X27
	0x03963380 MOV X3, X31
	0x03963384 MOV X26, X0
	0x03963388 LDR X2, [X8]
	0x0396338C BL 0x2D2FDEC
	0x03963390 LDR X8, [X19]
	0x03963394 LDR X8, [X8 + 0xB8]
	0x03963398 STR X26, [X8 + 0x58]
	0x0396339C LDR X2, [X29]
	0x039633A0 MOV X0, X25
	0x039633A4 MOV X1, X26
	0x039633A8 BL 0x21CE948
	0x039633AC LDR X8, [X28]
	0x039633B0 MOV X26, X0
	0x039633B4 MOV X0, X8
	0x039633B8 BL 0x1C16F10
	0x039633BC LDR X2, [X20]
	0x039633C0 MOV X1, X26
	0x039633C4 MOV X25, X0
	0x039633C8 BL 0x2D9B0F8
	0x039633CC CBZ X23, 0x3963698
	0x039633D0 LDR W8, [X23 + 0x18]
	0x039633D4 CMP W8, 0x1
	0x039633D8 B.LT 0x39635C0
	0x039633DC ADRP X28, 0x7EB000
	0x039633E0 ADRP X29, 0x7EC000
	0x039633E4 ADRP X19, 0x7EC000
	0x039633E8 ADRP X20, 0x7EC000
	0x039633EC LDR X28, [X28 + 0xFE8]
	0x039633F0 LDR X29, [X29 + 0x1D0]
	0x039633F4 LDR X19, [X19 + 0x1C0]
	0x039633F8 LDR X20, [X20 + 0xA98]
	0x039633FC MOV W26, W31
	0x03963400 LDR X2, [X28]
	0x03963404 MOV X0, X23
	0x03963408 MOV W1, W26
	0x0396340C BL 0x2FB9C40
	0x03963410 CBZ X21, 0x3963698
	0x03963414 LDR X2, [X29]
	0x03963418 MOV X1, X0
	0x0396341C MOV X0, X21
	0x03963420 BL 0x301BCCC
	0x03963424 CBZ X24, 0x3963698
	0x03963428 LDR W10, [X24 + 0x1C]
	0x0396342C LDR X8, [X24 + 0x10]
	0x03963430 LDR X9, [X19]
	0x03963434 ADD W10, W10, 0x1
	0x03963438 STR W10, [X24 + 0x1C]
	0x0396343C CBZ X8, 0x3963698
	0x03963440 LDRSW X10, [X24 + 0x18]
	0x03963444 LDR W11, [X8 + 0x18]
	0x03963448 MOV X1, X0
	0x0396344C CMP W10, W11
	0x03963450 B.CS 0x3963468
	0x03963454 ADD W9, W10, 0x1
	0x03963458 ADD X8, X8, X10, 0x3, LSL
	0x0396345C STR W9, [X24 + 0x18]
	0x03963460 STR X1, [X8 + 0x20]
	0x03963464 B 0x396347C
	0x03963468 LDR X8, [X9 + 0x20]
	0x0396346C MOV X0, X24
	0x03963470 LDR X8, [X8 + 0xC0]
	0x03963474 LDR X2, [X8 + 0x70]
	0x03963478 BL 0x301BF90
	0x0396347C LDR X2, [X28]
	0x03963480 MOV X0, X23
	0x03963484 MOV W1, W26
	0x03963488 BL 0x2FB9C40
	0x0396348C CBZ X25, 0x3963698
	0x03963490 LDR X2, [X20]
	0x03963494 MOV X1, X0
	0x03963498 MOV X0, X25
	0x0396349C BL 0x2D9B6BC
	0x039634A0 TBZ X0, 0x0, 0x39635B0
	0x039634A4 CBZ X22, 0x3963698
	0x039634A8 ADRP X9, 0x791000
	0x039634AC LDR W1, [X24 + 0x18]
	0x039634B0 LDR W10, [X22 + 0x1C]
	0x039634B4 LDR X8, [X22 + 0x10]
	0x039634B8 LDR X9, [X9 + 0xE10]
	0x039634BC ADD W10, W10, 0x1
	0x039634C0 LDR X9, [X9]
	0x039634C4 STR W10, [X22 + 0x1C]
	0x039634C8 CBZ X8, 0x3963698
	0x039634CC LDRSW X10, [X22 + 0x18]
	0x039634D0 LDR W11, [X8 + 0x18]
	0x039634D4 CMP W10, W11
	0x039634D8 B.CS 0x39634F0
	0x039634DC ADD W9, W10, 0x1
	0x039634E0 ADD X8, X8, X10, 0x2, LSL
	0x039634E4 STR W9, [X22 + 0x18]
	0x039634E8 STR W1, [X8 + 0x20]
	0x039634EC B 0x3963504
	0x039634F0 LDR X8, [X9 + 0x20]
	0x039634F4 MOV X0, X22
	0x039634F8 LDR X8, [X8 + 0xC0]
	0x039634FC LDR X2, [X8 + 0x70]
	0x03963500 BL 0x2FDC70C
	0x03963504 LDR X2, [X28]
	0x03963508 MOV X0, X23
	0x0396350C MOV W1, W26
	0x03963510 BL 0x2FB9C40
	0x03963514 LDR X2, [X29]
	0x03963518 MOV X1, X0
	0x0396351C MOV X0, X21
	0x03963520 BL 0x301BCCC
	0x03963524 LDR X2, [X28]
	0x03963528 MOV X27, X0
	0x0396352C MOV X0, X23
	0x03963530 MOV W1, W26
	0x03963534 BL 0x2FB9C40
	0x03963538 LDR X2, [X29]
	0x0396353C UBFM X1, X0, 0x20, 0x3F
	0x03963540 MOV X0, X21
	0x03963544 BL 0x301BCCC
	0x03963548 MOV X1, X0
	0x0396354C FMOV S0, 0.5
	0x03963550 MOV X0, X27
	0x03963554 MOV X2, X31
	0x03963558 BL 0x3940610
	0x0396355C LDR W10, [X24 + 0x1C]
	0x03963560 LDR X8, [X24 + 0x10]
	0x03963564 LDR X9, [X19]
	0x03963568 ADD W10, W10, 0x1
	0x0396356C STR W10, [X24 + 0x1C]
	0x03963570 CBZ X8, 0x3963698
	0x03963574 LDRSW X10, [X24 + 0x18]
	0x03963578 LDR W11, [X8 + 0x18]
	0x0396357C MOV X1, X0
	0x03963580 CMP W10, W11
	0x03963584 B.CS 0x396359C
	0x03963588 ADD W9, W10, 0x1
	0x0396358C ADD X8, X8, X10, 0x3, LSL
	0x03963590 STR W9, [X24 + 0x18]
	0x03963594 STR X1, [X8 + 0x20]
	0x03963598 B 0x39635B0
	0x0396359C LDR X8, [X9 + 0x20]
	0x039635A0 MOV X0, X24
	0x039635A4 LDR X8, [X8 + 0xC0]
	0x039635A8 LDR X2, [X8 + 0x70]
	0x039635AC BL 0x301BF90
	0x039635B0 LDR W8, [X23 + 0x18]
	0x039635B4 ADD W26, W26, 0x1
	0x039635B8 CMP W26, W8
	0x039635BC B.LT 0x3963400
	0x039635C0 MOV X0, X24
	0x039635C4 MOV W1, W31
	0x039635C8 BL 0x394FDA4
	0x039635CC MOV X21, X0
	0x039635D0 CBZ X0, 0x3963668
	0x039635D4 LDR X20, [X31]
	0x039635D8 CBZ X20, 0x3963698
	0x039635DC LDR X19, [X21 + 0x10]
	0x039635E0 CBZ X19, 0x3963698
	0x039635E4 LDR W8, [X20 + 0x54]
	0x039635E8 MOVI V2.2D, 0x0
	0x039635EC ADD X0, X31, 0x30
	0x039635F0 ADD X1, X31, 0x10
	0x039635F4 STR W8, [X19 + 0x54]
	0x039635F8 LDUR V0, [X20 + 0x2C]
	0x039635FC LDUR V1, [X20 + 0x1C]
	0x03963600 MOV X2, X31
	0x03963604 STP V2, V2, [X31 + 0x30]
	0x03963608 STP V1, V0, [X31 + 0x10]
	0x0396360C BL 0x38F69EC
	0x03963610 LDP V1, V0, [X31 + 0x30]
	0x03963614 STUR V0, [X19 + 0x2C]
	0x03963618 STUR V1, [X19 + 0x1C]
	0x0396361C LDR X8, [X21 + 0x10]
	0x03963620 CBZ X8, 0x3963698
	0x03963624 LDR W9, [X20 + 0x18]
	0x03963628 ADRP X10, 0x7EC000
	0x0396362C STR W9, [X8 + 0x18]
	0x03963630 LDRB W9, [X20 + 0x4C]
	0x03963634 STRB W9, [X8 + 0x4C]
	0x03963638 LDR W9, [X20 + 0x48]
	0x0396363C LDR X10, [X10 + 0xA60]
	0x03963640 STR W9, [X8 + 0x48]
	0x03963644 LDR X0, [X10]
	0x03963648 BL 0x1C16F10
	0x0396364C MOV X1, X31
	0x03963650 MOV X20, X0
	0x03963654 BL 0x33BDD8C
	0x03963658 LDR X8, [X31 + 0x8]
	0x0396365C STP X21, X22, [X20 + 0x10]
	0x03963660 STR X20, [X8]
	0x03963664 B 0x3963670
	0x03963668 LDR X8, [X31 + 0x8]
	0x0396366C STR X31, [X8]
	0x03963670 CMP X21, 0x0
	0x03963674 LDP X20, X19, [X31 + 0xA0]
	0x03963678 LDP X22, X21, [X31 + 0x90]
	0x0396367C LDP X24, X23, [X31 + 0x80]
	0x03963680 LDP X26, X25, [X31 + 0x70]
	0x03963684 LDP X28, X27, [X31 + 0x60]
	0x03963688 LDP X29, X30, [X31 + 0x50]
	0x0396368C CSET W0, NE
	0x03963690 ADD X31, X31, 0xB0
	0x03963694 RET
	0x03963698 BL 0x1C16F20
	0x0396369C SUB X31, X31, 0x80
	0x039636A0 STP X29, X30, [X31 + 0x20]
	0x039636A4 STP X28, X27, [X31 + 0x30]
	0x039636A8 STP X26, X25, [X31 + 0x40]
	0x039636AC STP X24, X23, [X31 + 0x50]
	0x039636B0 STP X22, X21, [X31 + 0x60]
	0x039636B4 STP X20, X19, [X31 + 0x70]
	0x039636B8 ADRP X21, 0xA7E000
	0x039636BC ADRP X22, 0x7EB000
	0x039636C0 LDRB W8, [X21 + 0x9B3]
	0x039636C4 LDR X22, [X22 + 0xB08]
	0x039636C8 MOV X19, X2
	0x039636CC MOV X25, X1
	0x039636D0 MOV X20, X0
	0x039636D4 TBNZ X8, 0x0, 0x396383C
	0x039636D8 ADRP X0, 0x7EC000
	0x039636DC LDR X0, [X0 + 0xA50]
	0x039636E0 BL 0x1C16CF4
	0x039636E4 ADRP X0, 0x7EC000
	0x039636E8 LDR X0, [X0 + 0xA58]
	0x039636EC BL 0x1C16CF4
	0x039636F0 ADRP X0, 0x7EC000
	0x039636F4 LDR X0, [X0 + 0xA60]
	0x039636F8 BL 0x1C16CF4
	0x039636FC ADRP X0, 0x7EC000
	0x03963700 LDR X0, [X0 + 0x58]
	0x03963704 BL 0x1C16CF4
	0x03963708 ADRP X0, 0x7EC000
	0x0396370C LDR X0, [X0 + 0xA68]
	0x03963710 BL 0x1C16CF4
	0x03963714 ADRP X0, 0x7EC000
	0x03963718 LDR X0, [X0 + 0x78]
	0x0396371C BL 0x1C16CF4
	0x03963720 ADRP X0, 0x7EC000
	0x03963724 LDR X0, [X0 + 0xA70]
	0x03963728 BL 0x1C16CF4
	0x0396372C ADRP X0, 0x7EC000
	0x03963730 LDR X0, [X0 + 0xA98]
	0x03963734 BL 0x1C16CF4
	0x03963738 ADRP X0, 0x7EC000
	0x0396373C LDR X0, [X0 + 0xAA0]
	0x03963740 BL 0x1C16CF4
	0x03963744 ADRP X0, 0x7EA000
	0x03963748 LDR X0, [X0 + 0xD60]
	0x0396374C BL 0x1C16CF4
	0x03963750 ADRP X0, 0x791000
	0x03963754 LDR X0, [X0 + 0xE10]
	0x03963758 BL 0x1C16CF4
	0x0396375C ADRP X0, 0x7EC000
	0x03963760 LDR X0, [X0 + 0x978]
	0x03963764 BL 0x1C16CF4
	0x03963768 ADRP X0, 0x7EC000
	0x0396376C LDR X0, [X0 + 0x1C0]
	0x03963770 BL 0x1C16CF4
	0x03963774 ADRP X0, 0x7EC000
	0x03963778 LDR X0, [X0 + 0xAB0]
	0x0396377C BL 0x1C16CF4
	0x03963780 ADRP X0, 0x7EC000
	0x03963784 LDR X0, [X0 + 0x988]
	0x03963788 BL 0x1C16CF4
	0x0396378C ADRP X0, 0x7EC000
	0x03963790 LDR X0, [X0 + 0x280]
	0x03963794 BL 0x1C16CF4
	0x03963798 ADRP X0, 0x7EB000
	0x0396379C LDR X0, [X0 + 0xAF8]
	0x039637A0 BL 0x1C16CF4
	0x039637A4 ADRP X0, 0x7EA000
	0x039637A8 LDR X0, [X0 + 0xE18]
	0x039637AC BL 0x1C16CF4
	0x039637B0 ADRP X0, 0x7EB000
	0x039637B4 LDR X0, [X0 + 0xFE0]
	0x039637B8 BL 0x1C16CF4
	0x039637BC ADRP X0, 0x7EC000
	0x039637C0 LDR X0, [X0 + 0x1D0]
	0x039637C4 BL 0x1C16CF4
	0x039637C8 ADRP X0, 0x7EB000
	0x039637CC LDR X0, [X0 + 0xFE8]
	0x039637D0 BL 0x1C16CF4
	0x039637D4 ADRP X0, 0x7EC000
	0x039637D8 LDR X0, [X0 + 0x288]
	0x039637DC BL 0x1C16CF4
	0x039637E0 ADRP X0, 0x7EB000
	0x039637E4 LDR X0, [X0 + 0xD38]
	0x039637E8 BL 0x1C16CF4
	0x039637EC ADRP X0, 0x7EC000
	0x039637F0 LDR X0, [X0 + 0x9A0]
	0x039637F4 BL 0x1C16CF4
	0x039637F8 ADRP X0, 0x7EC000
	0x039637FC LDR X0, [X0 + 0xAB8]
	0x03963800 BL 0x1C16CF4
	0x03963804 ADRP X0, 0x7EC000
	0x03963808 LDR X0, [X0 + 0xAC0]
	0x0396380C BL 0x1C16CF4
	0x03963810 ADRP X0, 0x7EC000
	0x03963814 LDR X0, [X0 + 0xAC8]
	0x03963818 BL 0x1C16CF4
	0x0396381C ADRP X0, 0x7EC000
	0x03963820 LDR X0, [X0 + 0x8B8]
	0x03963824 BL 0x1C16CF4
	0x03963828 ADRP X0, 0x7EB000
	0x0396382C LDR X0, [X0 + 0xB08]
	0x03963830 BL 0x1C16CF4
	0x03963834 MOVZ W8, 0x1
	0x03963838 STRB W8, [X21 + 0x9B3]
	0x0396383C LDR X0, [X22]
	0x03963840 LDR W8, [X0 + 0xE0]
	0x03963844 CBNZ W8, 0x396384C
	0x03963848 BL 0x1C16DFC
	0x0396384C MOV X0, X20
	0x03963850 MOV X1, X31
	0x03963854 BL 0x3942528
	0x03963858 CBZ X25, 0x3963FFC
	0x0396385C CBZ X20, 0x3963FFC
	0x03963860 ADRP X23, 0x7EC000
	0x03963864 LDR W22, [X25 + 0x18]
	0x03963868 LDR X23, [X23 + 0x8B8]
	0x0396386C MOV X21, X0
	0x03963870 MOV X0, X20
	0x03963874 MOV X1, X31
	0x03963878 BL 0x38FF530
	0x0396387C MOV X1, X0
	0x03963880 MOV X0, X19
	0x03963884 MOV X2, X31
	0x03963888 BL 0x393FA98
	0x0396388C LDR X8, [X23]
	0x03963890 STR X0, [X31 + 0x10]
	0x03963894 LDR W9, [X8 + 0xE0]
	0x03963898 CBNZ W9, 0x39638A8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X29
	006 Move [X31+72], X30
	007 Move [X31+80], X28
	008 Move [X31+88], X27
	009 Move [X31+96], X26
	010 Move [X31+104], X25
	011 Move [X31+112], X24
	012 Move [X31+120], X23
	013 Move [X31+128], X22
	014 Move [X31+136], X21
	015 Move [X31+144], X20
	016 Move [X31+152], X19
	017 Move X20, 0xA80000
	018 Move W8, [X20+2486]
	019 Move X26, X1
	020 Move X19, X0
	021 Move [X31+8], W4
	022 Move [X31+24], X3
	023 Move [X31+40], X2
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {105}
	028 Move X0, 0x7EE000
	029 Move X0, [X0+2640]
	030 Call 0x1C17CF4
	031 Move X0, 0x7EE000
	032 Move X0, [X0+2648]
	033 Call 0x1C17CF4
	034 Move X0, 0x7EE000
	035 Move X0, [X0+2656]
	036 Call 0x1C17CF4
	037 Move X0, 0x7EC000
	038 Move X0, [X0+3200]
	039 Call 0x1C17CF4
	040 Move X0, 0x7EE000
	041 Move X0, [X0+2664]
	042 Call 0x1C17CF4
	043 Move X0, 0x7EE000
	044 Move X0, [X0+2672]
	045 Call 0x1C17CF4
	046 Move X0, 0x793000
	047 Move X0, [X0+3600]
	048 Call 0x1C17CF4
	049 Move X0, 0x7EE000
	050 Move X0, [X0+2424]
	051 Call 0x1C17CF4
	052 Move X0, 0x7EE000
	053 Move X0, [X0+448]
	054 Call 0x1C17CF4
	055 Move X0, 0x796000
	056 Move X0, [X0+2920]
	057 Call 0x1C17CF4
	058 Move X0, 0x7EE000
	059 Move X0, [X0+2440]
	060 Call 0x1C17CF4
	061 Move X0, 0x7EE000
	062 Move X0, [X0+640]
	063 Call 0x1C17CF4
	064 Move X0, 0x7EC000
	065 Move X0, [X0+3608]
	066 Call 0x1C17CF4
	067 Move X0, 0x793000
	068 Move X0, [X0+3624]
	069 Call 0x1C17CF4
	070 Move X0, 0x7ED000
	071 Move X0, [X0+4064]
	072 Call 0x1C17CF4
	073 Move X0, 0x7EE000
	074 Move X0, [X0+464]
	075 Call 0x1C17CF4
	076 Move X0, 0x7ED000
	077 Move X0, [X0+4072]
	078 Call 0x1C17CF4
	079 Move X0, 0x7EE000
	080 Move X0, [X0+648]
	081 Call 0x1C17CF4
	082 Move X0, 0x7ED000
	083 Move X0, [X0+3384]
	084 Call 0x1C17CF4
	085 Move X0, 0x7EE000
	086 Move X0, [X0+2464]
	087 Call 0x1C17CF4
	088 Move X0, 0x7EE000
	089 Move X0, [X0+2680]
	090 Call 0x1C17CF4
	091 Move X0, 0x7EE000
	092 Move X0, [X0+2688]
	093 Call 0x1C17CF4
	094 Move X0, 0x7EE000
	095 Move X0, [X0+2696]
	096 Call 0x1C17CF4
	097 Move X0, 0x7EE000
	098 Move X0, [X0+2232]
	099 Call 0x1C17CF4
	100 Move X0, 0x7ED000
	101 Move X0, [X0+2824]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+2486], W8
	105 Compare X26, 0
	106 JumpIfEqual {689}
	107 Move W8, [X26+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, 0x7ED000
	110 Move X8, [X8+2824]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X19
	117 Move X1, X31
	118 Call WingedEdge.SortEdgesByAdjacency, X0
	119 Move X20, 0x7ED000
	120 Move X20, [X20+2232]
	121 Move W10, [X26+24]
	122 Move X28, X0
	123 Move X8, [X20]
	124 Move [X31+12], W10
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, [X20]
	131 Move X9, [X8+184]
	132 Move X22, [X9+96]
	133 Compare X22, 0
	134 JumpIfNotEqual {157}
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {141}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Move X8, [X20]
	141 Move X9, 0x7ED000
	142 Move X8, [X8+184]
	143 Move X9, [X9+2664]
	144 Move X23, [X8]
	145 Move X0, [X9]
	146 Call 0x1C17F10
	147 Move X8, 0x7ED000
	148 Move X8, [X8+2680]
	149 Move X1, X23
	150 Move X3, X31
	151 Move X22, X0
	152 Move X2, [X8]
	153 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	154 Move X8, [X20]
	155 Move X8, [X8+184]
	156 Move [X8+96], X22
	157 Move X8, 0x7ED000
	158 Move X8, [X8+2648]
	159 Move W1, [X31+12]
	160 Move X0, X22
	161 Move X2, [X8]
	162 Call 0x217F7CC, X0, X1
	163 Move X8, [X20]
	164 Move X23, X0
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {171}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X8, [X20]
	171 Move X9, [X8+184]
	172 Move X22, [X9+104]
	173 Compare X22, 0
	174 JumpIfNotEqual {197}
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {181}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X8, [X20]
	181 Move X9, 0x7ED000
	182 Move X8, [X8+184]
	183 Move X9, [X9+2672]
	184 Move X24, [X8]
	185 Move X0, [X9]
	186 Call 0x1C17F10
	187 Move X8, 0x7ED000
	188 Move X8, [X8+2688]
	189 Move X1, X24
	190 Move X3, X31
	191 Move X22, X0
	192 Move X2, [X8]
	193 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	194 Move X8, [X20]
	195 Move X8, [X8+184]
	196 Move [X8+104], X22
	197 Move X25, 0x7ED000
	198 Move X25, [X25+2640]
	199 Move W1, [X31+12]
	200 Move X0, X22
	201 Move X2, [X25]
	202 Call 0x217F7CC, X0, X1
	203 Move X8, [X20]
	204 Move X24, X0
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {211}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X8, [X20]
	211 Move X9, [X8+184]
	212 Move X22, [X9+112]
	213 Compare X22, 0
	214 JumpIfNotEqual {237}
	215 Move W9, [X8+224]
	216 Compare W9, 0
	217 JumpIfNotEqual {221}
	218 Move X0, X8
	219 Call 0x1C17DFC
	220 Move X8, [X20]
	221 Move X9, 0x7ED000
	222 Move X8, [X8+184]
	223 Move X9, [X9+2672]
	224 Move X27, [X8]
	225 Move X0, [X9]
	226 Call 0x1C17F10
	227 Move X8, 0x7ED000
	228 Move X8, [X8+2696]
	229 Move X1, X27
	230 Move X3, X31
	231 Move X22, X0
	232 Move X2, [X8]
	233 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	234 Move X8, [X20]
	235 Move X8, [X8+184]
	236 Move [X8+112], X22
	237 Move X2, [X25]
	238 Move W1, [X31+12]
	239 Move X0, X22
	240 Call 0x217F7CC, X0, X1
	241 Move X20, [X31+40]
	242 Move X27, X0
	243 Move X1, X26
	244 Move X2, X31
	245 Move X0, X20
	246 Call Vertex.Average, X0, X1
	247 Move [X31], X0
	248 Compare X19, 0
	249 JumpIfEqual {689}
	250 Move X1, [X19+16]
	251 Move X0, X20
	252 Move X2, X31
	253 Move [X31+16], X26
	254 Call Math.Normal, X0, X1
	255 Compare X28, 0
	256 JumpIfEqual {689}
	257 Move W8, [X28+24]
	258 Move V8, V0
	259 Move V9, V1
	260 Move V10, V2
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X25, 0x7ED000
	263 Move X20, 0x7EC000
	264 Move X26, 0x792000
	265 Move X25, [X25+648]
	266 Move X20, [X20+3384]
	267 Move X26, [X26+3600]
	268 Move W29, W31
	269 Move W19, W31
	270 Move X8, 0x7EC000
	271 Move X8, [X8+4072]
	272 Move X0, X28
	273 Move W1, W29
	274 Move X21, X28
	275 Move X2, [X8]
	276 Call List`1<Edge>.get_Item, X0, X1
	277 Compare X23, 0
	278 JumpIfEqual {689}
	279 Move X2, [X25]
	280 Move X28, X0
	281 Move X0, X23
	282 Move W1, W19
	283 Call List`1<Object>.get_Item, X0, X1
	284 Move X22, X0
	285 Move X0, [X31+40]
	286 Compare X0, 0
	287 JumpIfEqual {689}
	288 Move X8, 0x7ED000
	289 Move X8, [X8+464]
	290 Move W1, W28
	291 Move X2, [X8]
	292 Call List`1<Object>.get_Item, X0, X1
	293 Compare X22, 0
	294 JumpIfEqual {689}
	295 Move X9, 0x7ED000
	296 Move W10, [X22+28]
	297 Move X8, [X22+16]
	298 Move X9, [X9+448]
	299 Add W10, W10, 1
	300 Move X9, [X9]
	301 Move [X22+28], W10
	302 Compare X8, 0
	303 JumpIfEqual {689}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W11, [X8+24]
	306 Move X1, X0
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Add W9, W10, 1
	309 Add X8, X8, X10
	310 Move [X22+24], W9
	311 Move [X8+32], X1
	312 Move X8, [X9+32]
	313 Move X0, X22
	314 Move X8, [X8+192]
	315 Move X2, [X8+112]
	316 Call List`1<Object>.AddWithResize, X0, X1
	317 Compare X24, 0
	318 JumpIfEqual {689}
	319 Move X2, [X20]
	320 Move X0, X24
	321 Move W1, W19
	322 Call List`1<Object>.get_Item, X0, X1
	323 Move X22, X0
	324 Move X0, [X31+24]
	325 Compare X0, 0
	326 JumpIfEqual {689}
	327 Move X8, 0x7EB000
	328 Move X8, [X8+3200]
	329 Move W1, W28
	330 Move X2, [X8]
	331 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	332 Compare X22, 0
	333 JumpIfEqual {689}
	334 Move W10, [X22+28]
	335 Move X8, [X22+16]
	336 Move X9, [X26]
	337 Add W10, W10, 1
	338 Move [X22+28], W10
	339 Compare X8, 0
	340 JumpIfEqual {689}
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Move W11, [X8+24]
	343 Move W1, W0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Add W9, W10, 1
	346 Add X8, X8, X10
	347 Move [X22+24], W9
	348 Move [X8+32], W1
	349 Move X8, [X9+32]
	350 Move X0, X22
	351 Move X8, [X8+192]
	352 Move X2, [X8+112]
	353 Call List`1<Int32>.AddWithResize, X0, X1
	354 Move X8, 0x795000
	355 Move X8, [X8+2920]
	356 Move X0, [X31+16]
	357 Move W1, W28
	358 Move X2, [X8]
	359 Call List`1<Int32>.Contains, X0, X1
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {394}
	364 Compare X27, 0
	365 JumpIfEqual {689}
	366 Move X2, [X20]
	367 Move X0, X27
	368 Move W1, W19
	369 Call List`1<Object>.get_Item, X0, X1
	370 Move X2, [X25]
	371 Move X22, X0
	372 Move X0, X23
	373 Move W1, W19
	374 Call List`1<Object>.get_Item, X0, X1
	375 Compare X0, 0
	376 JumpIfEqual {689}
	377 Compare X22, 0
	378 JumpIfEqual {689}
	379 Move W10, [X22+28]
	380 Move W1, [X0+24]
	381 Move X8, [X22+16]
	382 Move X9, [X26]
	383 Add W10, W10, 1
	384 Move [X22+28], W10
	385 Compare X8, 0
	386 JumpIfEqual {689}
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Move W11, [X8+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Add W9, W10, 1
	391 Add X8, X8, X10
	392 Move [X22+24], W9
	393 Move [X8+32], W1
	394 Move X28, X21
	395 Move X8, [X9+32]
	396 Move X0, X22
	397 Move X8, [X8+192]
	398 Move X2, [X8+112]
	399 Call List`1<Int32>.AddWithResize, X0, X1
	400 Move X2, [X25]
	401 Move X0, X23
	402 Move W1, W19
	403 Call List`1<Object>.get_Item, X0, X1
	404 Compare X0, 0
	405 JumpIfEqual {689}
	406 Move X9, 0x7ED000
	407 Move W10, [X0+28]
	408 Move X8, [X0+16]
	409 Move X9, [X9+448]
	410 Add W10, W10, 1
	411 Move X9, [X9]
	412 Move [X0+28], W10
	413 Compare X8, 0
	414 JumpIfEqual {689}
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Move W11, [X8+24]
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Add W9, W10, 1
	419 Move [X0+24], W9
	420 Move X9, [X31]
	421 Add X8, X8, X10
	422 Move [X8+32], X9
	423 Move X8, [X9+32]
	424 Move X1, [X31]
	425 Move X8, [X8+192]
	426 Move X2, [X8+112]
	427 Call List`1<Object>.AddWithResize, X0, X1
	428 Move X2, [X20]
	429 Move X0, X24
	430 Move W1, W19
	431 Call List`1<Object>.get_Item, X0, X1
	432 Compare X0, 0
	433 JumpIfEqual {689}
	434 Move W10, [X0+28]
	435 Move X8, [X0+16]
	436 Move X9, [X26]
	437 Add W10, W10, 1
	438 Move [X0+28], W10
	439 Compare X8, 0
	440 JumpIfEqual {689}
	441 NotImplemented "Instruction LDRSW not yet implemented."
	442 Move W11, [X8+24]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Add W9, W10, 1
	445 Move [X0+24], W9
	446 Move W9, [X31+8]
	447 Add X8, X8, X10
	448 Move [X8+32], W9
	449 Move X8, [X9+32]
	450 Move W1, [X31+8]
	451 Move X8, [X8+192]
	452 Move X2, [X8+112]
	453 Call List`1<Int32>.AddWithResize, X0, X1
	454 Move W10, [X31+12]
	455 Move X2, [X20]
	456 Add W8, W19, 1
	457 Move X0, X27
	458 NotImplemented "Instruction SDIV not yet implemented."
	459 NotImplemented "Instruction MSUB not yet implemented."
	460 Move W1, W19
	461 Call List`1<Object>.get_Item, X0, X1
	462 Move X2, [X25]
	463 Move X22, X0
	464 Move X0, X23
	465 Move W1, W19
	466 Call List`1<Object>.get_Item, X0, X1
	467 Compare X0, 0
	468 JumpIfEqual {689}
	469 Compare X22, 0
	470 JumpIfEqual {689}
	471 Move W10, [X22+28]
	472 Move W1, [X0+24]
	473 Move X8, [X22+16]
	474 Move X9, [X26]
	475 Add W10, W10, 1
	476 Move [X22+28], W10
	477 Compare X8, 0
	478 JumpIfEqual {689}
	479 NotImplemented "Instruction LDRSW not yet implemented."
	480 Move W11, [X8+24]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Add W9, W10, 1
	483 Add X8, X8, X10
	484 Move [X22+24], W9
	485 Move [X8+32], W1
	486 Move X8, [X9+32]
	487 Move X0, X22
	488 Move X8, [X8+192]
	489 Move X2, [X8+112]
	490 Call List`1<Int32>.AddWithResize, X0, X1
	491 Move X2, [X25]
	492 Move X0, X23
	493 Move W1, W19
	494 Call List`1<Object>.get_Item, X0, X1
	495 Move X8, 0x7ED000
	496 Move X8, [X8+464]
	497 Move X22, X0
	498 Move X0, [X31+40]
	499 Move W1, W28
	500 Move X2, [X8]
	501 Call List`1<Object>.get_Item, X0, X1
	502 Compare X22, 0
	503 JumpIfEqual {689}
	504 Move X9, 0x7ED000
	505 Move W10, [X22+28]
	506 Move X8, [X22+16]
	507 Move X9, [X9+448]
	508 Add W10, W10, 1
	509 Move X9, [X9]
	510 Move [X22+28], W10
	511 Compare X8, 0
	512 JumpIfEqual {689}
	513 NotImplemented "Instruction LDRSW not yet implemented."
	514 Move W11, [X8+24]
	515 Move X1, X0
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Add W9, W10, 1
	518 Add X8, X8, X10
	519 Move [X22+24], W9
	520 Move [X8+32], X1
	521 Move X8, [X9+32]
	522 Move X0, X22
	523 Move X8, [X8+192]
	524 Move X2, [X8+112]
	525 Call List`1<Object>.AddWithResize, X0, X1
	526 Move X2, [X20]
	527 Move X0, X24
	528 Move W1, W19
	529 Call List`1<Object>.get_Item, X0, X1
	530 Move X8, 0x7EB000
	531 Move X8, [X8+3200]
	532 Move X22, X0
	533 Move X0, [X31+24]
	534 Move W1, W28
	535 Move X2, [X8]
	536 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	537 Compare X22, 0
	538 JumpIfEqual {689}
	539 Move W10, [X22+28]
	540 Move X8, [X22+16]
	541 Move X9, [X26]
	542 Add W10, W10, 1
	543 Move [X22+28], W10
	544 Compare X8, 0
	545 JumpIfEqual {689}
	546 NotImplemented "Instruction LDRSW not yet implemented."
	547 Move W11, [X8+24]
	548 Move W1, W0
	549 Move X28, X21
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Add W9, W10, 1
	552 Add X8, X8, X10
	553 Move [X22+24], W9
	554 Move [X8+32], W1
	555 Move X8, [X9+32]
	556 Move X0, X22
	557 Move X8, [X8+192]
	558 Move X2, [X8+112]
	559 Call List`1<Int32>.AddWithResize, X0, X1
	560 Move W8, [X28+24]
	561 Add W29, W29, 1
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move X8, 0x7ED000
	564 Move X8, [X8+2464]
	565 Move X0, [X8]
	566 Call 0x1C17F10
	567 Move X8, 0x7ED000
	568 Move X8, [X8+2440]
	569 Move X19, X0
	570 Move X1, [X8]
	571 Call List`1<Object>..ctor, X0
	572 Compare X23, 0
	573 JumpIfEqual {689}
	574 Move W8, [X23+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X26, 0x7ED000
	577 Move X28, 0x7EC000
	578 Move X29, 0x7ED000
	579 Move X26, [X26+648]
	580 Move X28, [X28+3384]
	581 Move X29, [X29+2424]
	582 Move W20, W31
	583 Move X2, [X26]
	584 Move X0, X23
	585 Move W1, W20
	586 Call List`1<Object>.get_Item, X0, X1
	587 Compare X0, 0
	588 JumpIfEqual {689}
	589 Move W8, [X0+24]
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move X2, [X26]
	592 Move X0, X23
	593 Move W1, W20
	594 Call List`1<Object>.get_Item, X0, X1
	595 Move W1, W31
	596 Call AppendElements.FaceWithVertices, X0, X1
	597 Compare X24, 0
	598 JumpIfEqual {689}
	599 Move X2, [X28]
	600 Move X21, X0
	601 Move X0, X24
	602 Move W1, W20
	603 Call List`1<Object>.get_Item, X0, X1
	604 Compare X21, 0
	605 JumpIfEqual {689}
	606 Move [X21+32], X0
	607 Move X2, [X26]
	608 Move X0, X23
	609 Move W1, W20
	610 Call List`1<Object>.get_Item, X0, X1
	611 Move X8, [X21+16]
	612 Compare X8, 0
	613 JumpIfEqual {689}
	614 Move X1, [X8+16]
	615 Move X2, X31
	616 Call Math.Normal, X0, X1
	617 Multiply S0, S8, S0
	618 Multiply S1, S9, S1
	619 Add S0, S0, S1
	620 Multiply S1, S10, S2
	621 Add S0, S1, S0
	622 NotImplemented "Instruction FCMP not yet implemented."
	623 Move X0, [X21+16]
	624 Compare X0, 0
	625 JumpIfEqual {689}
	626 Move X1, X31
	627 Call Face.Reverse, X0
	628 Compare X27, 0
	629 JumpIfEqual {689}
	630 Move X2, [X28]
	631 Move X0, X27
	632 Move W1, W20
	633 Call List`1<Object>.get_Item, X0, X1
	634 Move X8, 0x7ED000
	635 Move X8, [X8+2656]
	636 Move X25, X0
	637 Move X8, [X8]
	638 Move X0, X8
	639 Call 0x1C17F10
	640 Move X1, X31
	641 Move X22, X0
	642 Call Object..ctor, X0
	643 Move [X22+16], X21
	644 Move [X22+24], X25
	645 Compare X19, 0
	646 JumpIfEqual {689}
	647 Move W10, [X19+28]
	648 Move X8, [X19+16]
	649 Move X9, [X29]
	650 Add W10, W10, 1
	651 Move [X19+28], W10
	652 Compare X8, 0
	653 JumpIfEqual {689}
	654 NotImplemented "Instruction LDRSW not yet implemented."
	655 Move W11, [X8+24]
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Add W9, W10, 1
	658 Add X8, X8, X10
	659 Move [X19+24], W9
	660 Move [X8+32], X22
	661 Move X8, [X9+32]
	662 Move X0, X19
	663 Move X1, X22
	664 Move X8, [X8+192]
	665 Move X2, [X8+112]
	666 Call List`1<Object>.AddWithResize, X0, X1
	667 Move W8, [X23+24]
	668 Add W20, W20, 1
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move X19, X31
	671 Move X0, X19
	672 Move X20, [X31+144]
	673 Move X19, [X31+152]
	674 Move X22, [X31+128]
	675 Move X21, [X31+136]
	676 Move X24, [X31+112]
	677 Move X23, [X31+120]
	678 Move X26, [X31+96]
	679 Move X25, [X31+104]
	680 Move X28, [X31+80]
	681 Move X27, [X31+88]
	682 Move X29, [X31+64]
	683 Move X30, [X31+72]
	684 Move D9, [X31+48]
	685 Move D8, [X31+56]
	686 Move V10, [X31+32]
	687 Add X31, X31, 160
	688 Return X0
	689 Call 0x1C17F20

