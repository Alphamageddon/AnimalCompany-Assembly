Type: UnityEngine.ProBuilder.MeshOperations.QuadUtility

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> ToQuads(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces, System.Boolean smoothing = True)

Disassembly:
	0x03975C98 MOV X20, X31
	0x03975C9C MOVZ W21, 0x1
	0x03975CA0 CBZ X19, 0x3975CFC
	0x03975CA4 LDR X8, [X19]
	0x03975CA8 LDR X1, [X22]
	0x03975CAC LDRH W9, [X8 + 0x12E]
	0x03975CB0 CBZ X9, 0x3975CD4
	0x03975CB4 LDR X10, [X8 + 0xB0]
	0x03975CB8 ADD X10, X10, 0x8
	0x03975CBC LDUR X11, [X10 - 0x8]
	0x03975CC0 CMP X11, X1
	0x03975CC4 B.EQ 0x3975CE4
	0x03975CC8 SUBS X9, X9, 0x1
	0x03975CCC ADD X10, X10, 0x10
	0x03975CD0 B.NE 0x3975CBC
	0x03975CD4 MOV X0, X19
	0x03975CD8 MOV W2, W31
	0x03975CDC BL 0x1C5C788
	0x03975CE0 B 0x3975CF0
	0x03975CE4 LDRSW X9, [X10]
	0x03975CE8 ADD X8, X8, X9, 0x4, LSL
	0x03975CEC ADD X0, X8, 0x138
	0x03975CF0 LDP X8, X1, [X0]
	0x03975CF4 MOV X0, X19
	0x03975CF8 BLR X8
	0x03975CFC CBNZ X20, 0x3975D60
	0x03975D00 MOV W0, W21
	0x03975D04 LDP X20, X19, [X31 + 0x60]
	0x03975D08 LDP X22, X21, [X31 + 0x50]
	0x03975D0C LDP X24, X23, [X31 + 0x40]
	0x03975D10 LDP X26, X25, [X31 + 0x30]
	0x03975D14 LDP X28, X27, [X31 + 0x20]
	0x03975D18 LDR X30, [X31 + 0x10]
	0x03975D1C ADD X31, X31, 0x70
	0x03975D20 RET
	0x03975D24 MOV X20, X31
	0x03975D28 MOV W21, W31
	0x03975D2C CBNZ X19, 0x3975CA4
	0x03975D30 B 0x3975CFC
	0x03975D34 BL 0x1C16F20
	0x03975D38 BL 0x1C16F28
	0x03975D3C BL 0x1C16F28
	0x03975D40 BL 0x1C16F28
	0x03975D44 BL 0x1C16F28
	0x03975D48 BL 0x1C16F28
	0x03975D4C BL 0x1C16F28
	0x03975D50 BL 0x1C16F20
	0x03975D54 BL 0x1C16F20
	0x03975D58 BL 0x1C16F20
	0x03975D5C BL 0x1C16F20
	0x03975D60 MOV X0, X20
	0x03975D64 BL 0x1C16F18
	0x03975D68 B 0x3975D94
	0x03975D6C B 0x3975D94
	0x03975D70 B 0x3975D94
	0x03975D74 B 0x3975D94
	0x03975D78 B 0x3975D94
	0x03975D7C B 0x3975D94
	0x03975D80 B 0x3975D94
	0x03975D84 B 0x3975D94
	0x03975D88 B 0x3975D94
	0x03975D8C B 0x3975D94
	0x03975D90 B 0x3975D94
	0x03975D94 CMP W1, 0x1
	0x03975D98 B.NE 0x3975DAC
	0x03975D9C BL 0x3EB1AD0
	0x03975DA0 LDR X20, [X0]
	0x03975DA4 BL 0x3EB1AE0
	0x03975DA8 B 0x3975D28
	0x03975DAC STR X0, [X31 + 0x18]
	0x03975DB0 MOV X20, X31
	0x03975DB4 B 0x3975DBC
	0x03975DB8 STR X0, [X31 + 0x18]
	0x03975DBC CBZ X19, 0x3975E18
	0x03975DC0 LDR X8, [X19]
	0x03975DC4 LDR X1, [X22]
	0x03975DC8 LDRH W9, [X8 + 0x12E]
	0x03975DCC CBZ X9, 0x3975DF0
	0x03975DD0 LDR X10, [X8 + 0xB0]
	0x03975DD4 ADD X10, X10, 0x8
	0x03975DD8 LDUR X11, [X10 - 0x8]
	0x03975DDC CMP X11, X1
	0x03975DE0 B.EQ 0x3975E00
	0x03975DE4 SUBS X9, X9, 0x1
	0x03975DE8 ADD X10, X10, 0x10
	0x03975DEC B.NE 0x3975DD8
	0x03975DF0 MOV X0, X19
	0x03975DF4 MOV W2, W31
	0x03975DF8 BL 0x1C5C788
	0x03975DFC B 0x3975E0C
	0x03975E00 LDRSW X9, [X10]
	0x03975E04 ADD X8, X8, X9, 0x4, LSL
	0x03975E08 ADD X0, X8, 0x138
	0x03975E0C LDP X8, X1, [X0]
	0x03975E10 MOV X0, X19
	0x03975E14 BLR X8
	0x03975E18 CBNZ X20, 0x3975E24
	0x03975E1C LDR X0, [X31 + 0x18]
	0x03975E20 BL 0x1D2C690
	0x03975E24 MOV X0, X20
	0x03975E28 BL 0x1C16F18
	0x03975E2C BL 0x1990590
	0x03975E30 SUB X31, X31, 0x50
	0x03975E34 STP X30, X25, [X31 + 0x10]
	0x03975E38 STP X24, X23, [X31 + 0x20]
	0x03975E3C STP X22, X21, [X31 + 0x30]
	0x03975E40 STP X20, X19, [X31 + 0x40]
	0x03975E44 ADRP X21, 0xA6C000
	0x03975E48 LDRB W8, [X21 + 0xA0A]
	0x03975E4C MOV X20, X1
	0x03975E50 MOV X19, X0
	0x03975E54 TBNZ X8, 0x0, 0x3975E6C
	0x03975E58 ADRP X0, 0x785000
	0x03975E5C LDR X0, [X0 + 0x4B8]
	0x03975E60 BL 0x1C16CF4
	0x03975E64 MOVZ W8, 0x1
	0x03975E68 STRB W8, [X21 + 0xA0A]
	0x03975E6C CBZ X19, 0x3975F84
	0x03975E70 CBZ X20, 0x3975F84
	0x03975E74 LDR X20, [X20 + 0x10]
	0x03975E78 CBZ X20, 0x3975F84
	0x03975E7C LDR W8, [X20 + 0x18]
	0x03975E80 CMP W8, 0x0
	0x03975E84 CSET W21, GT
	0x03975E88 CMP W8, 0x1
	0x03975E8C B.LT 0x3975F64
	0x03975E90 ADRP X22, 0x785000
	0x03975E94 LDR X19, [X19 + 0x58]
	0x03975E98 LDR X22, [X22 + 0x4B8]
	0x03975E9C MOVZ W23, 0x2
	0x03975EA0 MOVZ W24, 0xC
	0x03975EA4 SUB W11, W23, 0x2
	0x03975EA8 CMP W11, W8
	0x03975EAC B.CS 0x3975F80
	0x03975EB0 CBZ X19, 0x3975F84
	0x03975EB4 ADD X9, X20, W11, 0x2, SXTW
	0x03975EB8 LDRSW X9, [X9 + 0x20]
	0x03975EBC LDR W10, [X19 + 0x18]
	0x03975EC0 CMP W9, W10
	0x03975EC4 B.CS 0x3975F80
	0x03975EC8 ADD W12, W11, 0x1
	0x03975ECC CMP W12, W8
	0x03975ED0 B.CS 0x3975F80
	0x03975ED4 SUB W11, W23, 0x1
	0x03975ED8 ADD X11, X20, W11, 0x2, SXTW
	0x03975EDC LDRSW X11, [X11 + 0x20]
	0x03975EE0 CMP W11, W10
	0x03975EE4 B.CS 0x3975F80
	0x03975EE8 ADD W25, W12, 0x1
	0x03975EEC CMP W25, W8
	0x03975EF0 B.CS 0x3975F80
	0x03975EF4 ADD X8, X20, W23, 0x2, SXTW
	0x03975EF8 LDRSW X8, [X8 + 0x20]
	0x03975EFC CMP W8, W10
	0x03975F00 B.CS 0x3975F80
	0x03975F04 MADD X9, X9, X24, X19
	0x03975F08 MADD X10, X11, X24, X19
	0x03975F0C MADD X8, X8, X24, X19
	0x03975F10 LDP S0, S1, [X9 + 0x20]
	0x03975F14 LDR V2, [X9 + 0x28]
	0x03975F18 LDP S3, S4, [X10 + 0x20]
	0x03975F1C LDR V5, [X10 + 0x28]
	0x03975F20 LDR X9, [X8 + 0x20]
	0x03975F24 LDR V6, [X8 + 0x28]
	0x03975F28 MOV X0, X31
	0x03975F2C STR X9, [X31]
	0x03975F30 STR S6, [X31 + 0x8]
	0x03975F34 BL 0x3907F5C
	0x03975F38 LDR X8, [X22]
	0x03975F3C LDR X8, [X8 + 0xB8]
	0x03975F40 LDR V1, [X8]
	0x03975F44 FCMP S0, S1
	0x03975F48 B.LS 0x3975F64
	0x03975F4C LDR W8, [X20 + 0x18]
	0x03975F50 ADD W9, W25, 0x1
	0x03975F54 ADD W23, W23, 0x3
	0x03975F58 CMP W9, W8
	0x03975F5C CSET W21, LT
	0x03975F60 B.LT 0x3975EA4
	0x03975F64 AND W0, W21, 0x1
	0x03975F68 LDP X20, X19, [X31 + 0x40]
	0x03975F6C LDP X22, X21, [X31 + 0x30]
	0x03975F70 LDP X24, X23, [X31 + 0x20]
	0x03975F74 LDP X30, X25, [X31 + 0x10]
	0x03975F78 ADD X31, X31, 0x50
	0x03975F7C RET
	0x03975F80 BL 0x1C16F28
	0x03975F84 BL 0x1C16F20
	0x03975F88 SUB X31, X31, 0x40
	0x03975F8C STP X30, X23, [X31 + 0x10]
	0x03975F90 STP X22, X21, [X31 + 0x20]
	0x03975F94 STP X20, X19, [X31 + 0x30]
	0x03975F98 ADRP X20, 0xA6C000
	0x03975F9C LDRB W8, [X20 + 0xA0B]
	0x03975FA0 MOV X19, X1
	0x03975FA4 TBNZ X8, 0x0, 0x3975FBC
	0x03975FA8 ADRP X0, 0x7A6000
	0x03975FAC LDR X0, [X0 + 0x600]
	0x03975FB0 BL 0x1C16CF4
	0x03975FB4 MOVZ W8, 0x1
	0x03975FB8 STRB W8, [X20 + 0xA0B]
	0x03975FBC STR X31, [X31 + 0x8]
	0x03975FC0 CBZ X19, 0x39760AC
	0x03975FC4 MOV X0, X19
	0x03975FC8 MOV X1, X31
	0x03975FCC BL 0x38FFA80
	0x03975FD0 CBZ X0, 0x39760AC
	0x03975FD4 LDR W8, [X0 + 0x18]
	0x03975FD8 CBZ W8, 0x39760B0
	0x03975FDC LDR X20, [X0 + 0x20]
	0x03975FE0 ADD X3, X31, 0x8
	0x03975FE4 ADD X4, X31, 0x4
	0x03975FE8 MOV X0, X19
	0x03975FEC UBFM X2, X20, 0x20, 0x3F
	0x03975FF0 MOV X1, X20
	0x03975FF4 MOV X5, X31
	0x03975FF8 STR X20, [X31 + 0x8]
	0x03975FFC STR W20, [X31 + 0x4]
	0x03976000 BL 0x3901610
	0x03976004 MOVZ W22, 0x1
	0x03976008 TBZ X0, 0x0, 0x397607C
	0x0397600C ADRP X23, 0x7A5000
	0x03976010 LDR X23, [X23 + 0x600]
	0x03976014 LDR X0, [X23]
	0x03976018 LDR X21, [X31 + 0x8]
	0x0397601C LDR W8, [X0 + 0xE0]
	0x03976020 CBNZ W8, 0x3976028
	0x03976024 BL 0x1C16DFC
	0x03976028 MOV X0, X21
	0x0397602C MOV X1, X20
	0x03976030 MOV X2, X31
	0x03976034 BL 0x38FDF80
	0x03976038 TBZ X0, 0x0, 0x397607C
	0x0397603C MOV X0, X19
	0x03976040 MOV X1, X31
	0x03976044 BL 0x38FFA80
	0x03976048 CBZ X0, 0x39760AC
	0x0397604C LDR W8, [X0 + 0x18]
	0x03976050 CMP W22, W8
	0x03976054 B.GE 0x397607C
	0x03976058 LDR X1, [X31 + 0x8]
	0x0397605C LDR W2, [X31 + 0xC]
	0x03976060 ADD X3, X31, 0x8
	0x03976064 ADD X4, X31, 0x4
	0x03976068 MOV X0, X19
	0x0397606C MOV X5, X31
	0x03976070 ADD W22, W22, 0x1
	0x03976074 BL 0x3901610
	0x03976078 TBNZ X0, 0x0, 0x3976014
	0x0397607C MOV X0, X19
	0x03976080 MOV X1, X31
	0x03976084 BL 0x38FFA80
	0x03976088 CBZ X0, 0x39760AC
	0x0397608C LDR W8, [X0 + 0x18]
	0x03976090 LDP X20, X19, [X31 + 0x30]
	0x03976094 LDP X30, X23, [X31 + 0x10]
	0x03976098 CMP W22, W8
	0x0397609C LDP X22, X21, [X31 + 0x20]
	0x039760A0 CSET W0, NE
	0x039760A4 ADD X31, X31, 0x40
	0x039760A8 RET
	0x039760AC BL 0x1C16F20
	0x039760B0 BL 0x1C16F28
	0x039760B4 SUB X31, X31, 0x70
	0x039760B8 STP X29, X30, [X31 + 0x10]
	0x039760BC STP X28, X27, [X31 + 0x20]
	0x039760C0 STP X26, X25, [X31 + 0x30]
	0x039760C4 STP X24, X23, [X31 + 0x40]
	0x039760C8 STP X22, X21, [X31 + 0x50]
	0x039760CC STP X20, X19, [X31 + 0x60]
	0x039760D0 STR X0, [X31 + 0x8]
	0x039760D4 ADRP X20, 0xA6B000
	0x039760D8 ADRP X19, 0x7D8000
	0x039760DC LDRB W8, [X20 + 0xA0C]
	0x039760E0 LDR X19, [X19 + 0xA38]
	0x039760E4 MOV X21, X1
	0x039760E8 TBNZ X8, 0x0, 0x39761C0
	0x039760EC ADRP X0, 0x7DA000
	0x039760F0 LDR X0, [X0 + 0xB8]
	0x039760F4 BL 0x1C16CF4
	0x039760F8 ADRP X0, 0x7D8000
	0x039760FC LDR X0, [X0 + 0x560]
	0x03976100 BL 0x1C16CF4
	0x03976104 ADRP X0, 0x7DA000
	0x03976108 LDR X0, [X0 + 0xC0]
	0x0397610C BL 0x1C16CF4
	0x03976110 ADRP X0, 0x77D000
	0x03976114 LDR X0, [X0 + 0xE00]
	0x03976118 BL 0x1C16CF4
	0x0397611C ADRP X0, 0x7D7000
	0x03976120 LDR X0, [X0 + 0xDB0]
	0x03976124 BL 0x1C16CF4
	0x03976128 ADRP X0, 0x7D7000
	0x0397612C LDR X0, [X0 + 0xDB8]
	0x03976130 BL 0x1C16CF4
	0x03976134 ADRP X0, 0x77D000
	0x03976138 LDR X0, [X0 + 0xE18]
	0x0397613C BL 0x1C16CF4
	0x03976140 ADRP X0, 0x7D8000
	0x03976144 LDR X0, [X0 + 0xA50]
	0x03976148 BL 0x1C16CF4
	0x0397614C ADRP X0, 0x7D7000
	0x03976150 LDR X0, [X0 + 0xE10]
	0x03976154 BL 0x1C16CF4
	0x03976158 ADRP X0, 0x7D7000
	0x0397615C LDR X0, [X0 + 0xDD8]
	0x03976160 BL 0x1C16CF4
	0x03976164 ADRP X0, 0x7D8000
	0x03976168 LDR X0, [X0 + 0xA38]
	0x0397616C BL 0x1C16CF4
	0x03976170 ADRP X0, 0x7DA000
	0x03976174 LDR X0, [X0 + 0xC8]
	0x03976178 BL 0x1C16CF4
	0x0397617C ADRP X0, 0x7DA000
	0x03976180 LDR X0, [X0 + 0xD0]
	0x03976184 BL 0x1C16CF4
	0x03976188 ADRP X0, 0x7D7000
	0x0397618C LDR X0, [X0 + 0xDF0]
	0x03976190 BL 0x1C16CF4
	0x03976194 ADRP X0, 0x7DA000
	0x03976198 LDR X0, [X0 + 0xD8]
	0x0397619C BL 0x1C16CF4
	0x039761A0 ADRP X0, 0x7DA000
	0x039761A4 LDR X0, [X0 + 0xE0]
	0x039761A8 BL 0x1C16CF4
	0x039761AC ADRP X0, 0x7D9000
	0x039761B0 LDR X0, [X0 + 0xFE8]
	0x039761B4 BL 0x1C16CF4
	0x039761B8 MOVZ W8, 0x1
	0x039761BC STRB W8, [X20 + 0xA0C]
	0x039761C0 ADRP X8, 0x7D7000
	0x039761C4 LDR X8, [X8 + 0xDF0]
	0x039761C8 LDR X0, [X8]
	0x039761CC BL 0x1C16F10
	0x039761D0 LDR X1, [X19]
	0x039761D4 MOV X20, X0
	0x039761D8 BL 0x301B7C4
	0x039761DC CBZ X21, 0x3976664
	0x039761E0 ADRP X10, 0x7D7000
	0x039761E4 LDR X8, [X21]
	0x039761E8 LDR X10, [X10 + 0xDB0]
	0x039761EC LDRH W9, [X8 + 0x12E]
	0x039761F0 LDR X1, [X10]
	0x039761F4 CBZ X9, 0x3976218
	0x039761F8 LDR X10, [X8 + 0xB0]
	0x039761FC ADD X10, X10, 0x8
	0x03976200 LDUR X11, [X10 - 0x8]
	0x03976204 CMP X11, X1
	0x03976208 B.EQ 0x3976228
	0x0397620C SUBS X9, X9, 0x1
	0x03976210 ADD X10, X10, 0x10
	0x03976214 B.NE 0x3976200
	0x03976218 MOV X0, X21
	0x0397621C MOV W2, W31
	0x03976220 BL 0x1C5C788
	0x03976224 B 0x3976234
	0x03976228 LDRSW X9, [X10]
	0x0397622C ADD X8, X8, X9, 0x4, LSL
	0x03976230 ADD X0, X8, 0x138
	0x03976234 LDP X8, X1, [X0]
	0x03976238 MOV X0, X21
	0x0397623C BLR X8
	0x03976240 MOV X21, X0
	0x03976244 CBZ X0, 0x3976668
	0x03976248 ADRP X28, 0x7DA000
	0x0397624C ADRP X29, 0x7D9000
	0x03976250 ADRP X19, 0x7DA000
	0x03976254 LDR X28, [X28 + 0xD0]
	0x03976258 LDR X29, [X29 + 0xFE8]
	0x0397625C LDR X19, [X19 + 0xB8]
	0x03976260 LDR X8, [X21]
	0x03976264 ADRP X10, 0x77D000
	0x03976268 LDRH W9, [X8 + 0x12E]
	0x0397626C LDR X10, [X10 + 0xE18]
	0x03976270 LDR X1, [X10]
	0x03976274 CBZ X9, 0x3976298
	0x03976278 LDR X10, [X8 + 0xB0]
	0x0397627C ADD X10, X10, 0x8
	0x03976280 LDUR X11, [X10 - 0x8]
	0x03976284 CMP X11, X1
	0x03976288 B.EQ 0x39762A8
	0x0397628C SUBS X9, X9, 0x1
	0x03976290 ADD X10, X10, 0x10
	0x03976294 B.NE 0x3976280
	0x03976298 MOV X0, X21
	0x0397629C MOV W2, W31
	0x039762A0 BL 0x1C5C788
	0x039762A4 B 0x39762B4
	0x039762A8 LDRSW X9, [X10]
	0x039762AC ADD X8, X8, X9, 0x4, LSL
	0x039762B0 ADD X0, X8, 0x138
	0x039762B4 LDP X8, X1, [X0]
	0x039762B8 MOV X0, X21
	0x039762BC BLR X8
	0x039762C0 TBZ X0, 0x0, 0x397655C
	0x039762C4 LDR X8, [X21]
	0x039762C8 ADRP X10, 0x7D7000
	0x039762CC LDRH W9, [X8 + 0x12E]
	0x039762D0 LDR X10, [X10 + 0xDB8]
	0x039762D4 LDR X1, [X10]
	0x039762D8 CBZ X9, 0x39762FC
	0x039762DC LDR X10, [X8 + 0xB0]
	0x039762E0 ADD X10, X10, 0x8
	0x039762E4 LDUR X11, [X10 - 0x8]
	0x039762E8 CMP X11, X1
	0x039762EC B.EQ 0x397630C
	0x039762F0 SUBS X9, X9, 0x1
	0x039762F4 ADD X10, X10, 0x10
	0x039762F8 B.NE 0x39762E4
	0x039762FC MOV X0, X21
	0x03976300 MOV W2, W31
	0x03976304 BL 0x1C5C788
	0x03976308 B 0x3976318
	0x0397630C LDRSW X9, [X10]
	0x03976310 ADD X8, X8, X9, 0x4, LSL
	0x03976314 ADD X0, X8, 0x138
	0x03976318 LDP X8, X1, [X0]
	0x0397631C MOV X0, X21
	0x03976320 BLR X8
	0x03976324 MOV X22, X0
	0x03976328 MOV X1, X0
	0x0397632C BL 0x3975F88
	0x03976330 TBZ X0, 0x0, 0x3976260
	0x03976334 MOV X1, X22
	0x03976338 BL 0x3976764
	0x0397633C MOV X23, X0
	0x03976340 CBZ X0, 0x397665C
	0x03976344 LDR W8, [X23 + 0x18]
	0x03976348 CMP W8, 0x2
	0x0397634C B.LT 0x3976260
	0x03976350 LDR X2, [X28]
	0x03976354 MOV X0, X23
	0x03976358 MOV W1, W31
	0x0397635C BL 0x301BCCC
	0x03976360 LDR X8, [X29]
	0x03976364 MOV X24, X0
	0x03976368 LDR W9, [X8 + 0xE0]
	0x0397636C CBNZ W9, 0x397637C
	0x03976370 MOV X0, X8
	0x03976374 BL 0x1C16DFC
	0x03976378 LDR X8, [X29]
	0x0397637C LDR X9, [X8 + 0xB8]
	0x03976380 LDR X25, [X9 + 0x8]
	0x03976384 CBNZ X25, 0x39763DC
	0x03976388 LDR W9, [X8 + 0xE0]
	0x0397638C CBNZ W9, 0x397639C
	0x03976390 MOV X0, X8
	0x03976394 BL 0x1C16DFC
	0x03976398 LDR X8, [X29]
	0x0397639C LDR X8, [X8 + 0xB8]
	0x039763A0 LDR X26, [X8]
	0x039763A4 ADRP X8, 0x7DA000
	0x039763A8 LDR X8, [X8 + 0xC0]
	0x039763AC LDR X0, [X8]
	0x039763B0 BL 0x1C16F10
	0x039763B4 ADRP X8, 0x7DA000
	0x039763B8 LDR X8, [X8 + 0xD8]
	0x039763BC MOV X25, X0
	0x039763C0 LDR X2, [X8]
	0x039763C4 MOV X1, X26
	0x039763C8 MOV X3, X31
	0x039763CC BL 0x2D339F0
	0x039763D0 LDR X8, [X29]
	0x039763D4 LDR X8, [X8 + 0xB8]
	0x039763D8 STR X25, [X8 + 0x8]
	0x039763DC LDR X2, [X19]
	0x039763E0 MOV X0, X24
	0x039763E4 MOV X1, X25
	0x039763E8 BL 0x21D10B8
	0x039763EC MOV X1, X0
	0x039763F0 CBZ X22, 0x3976660
	0x039763F4 MOV X0, X22
	0x039763F8 MOV X2, X31
	0x039763FC BL 0x38FFCE8
	0x03976400 LDR W8, [X23 + 0x18]
	0x03976404 CMP W8, 0x2
	0x03976408 B.LT 0x3976260
	0x0397640C MOVZ W24, 0x1
	0x03976410 ADRP X8, 0x7D8000
	0x03976414 LDR X8, [X8 + 0x560]
	0x03976418 LDR X0, [X8]
	0x0397641C BL 0x1C16F10
	0x03976420 MOV X25, X0
	0x03976424 MOV X1, X22
	0x03976428 MOV X2, X31
	0x0397642C BL 0x3900598
	0x03976430 LDR X2, [X28]
	0x03976434 MOV X0, X23
	0x03976438 MOV W1, W24
	0x0397643C BL 0x301BCCC
	0x03976440 LDR X8, [X29]
	0x03976444 MOV X26, X0
	0x03976448 LDR W9, [X8 + 0xE0]
	0x0397644C CBNZ W9, 0x397645C
	0x03976450 MOV X0, X8
	0x03976454 BL 0x1C16DFC
	0x03976458 LDR X8, [X29]
	0x0397645C LDR X9, [X8 + 0xB8]
	0x03976460 LDR X27, [X9 + 0x10]
	0x03976464 CBNZ X27, 0x39764C4
	0x03976468 LDR W9, [X8 + 0xE0]
	0x0397646C CBNZ W9, 0x397647C
	0x03976470 MOV X0, X8
	0x03976474 BL 0x1C16DFC
	0x03976478 LDR X8, [X29]
	0x0397647C LDR X8, [X8 + 0xB8]
	0x03976480 LDR X28, [X8]
	0x03976484 ADRP X8, 0x7DA000
	0x03976488 LDR X8, [X8 + 0xC0]
	0x0397648C LDR X0, [X8]
	0x03976490 BL 0x1C16F10
	0x03976494 ADRP X8, 0x7DA000
	0x03976498 LDR X8, [X8 + 0xE0]
	0x0397649C MOV X27, X0
	0x039764A0 LDR X2, [X8]
	0x039764A4 MOV X1, X28
	0x039764A8 MOV X3, X31
	0x039764AC BL 0x2D339F0
	0x039764B0 LDR X8, [X29]
	0x039764B4 ADRP X28, 0x7DA000
	0x039764B8 LDR X8, [X8 + 0xB8]
	0x039764BC STR X27, [X8 + 0x10]
	0x039764C0 LDR X28, [X28 + 0xD0]
	0x039764C4 LDR X2, [X19]
	0x039764C8 MOV X0, X26
	0x039764CC MOV X1, X27
	0x039764D0 BL 0x21D10B8
	0x039764D4 MOV X1, X0
	0x039764D8 CBZ X25, 0x3976654
	0x039764DC MOV X0, X25
	0x039764E0 MOV X2, X31
	0x039764E4 BL 0x38FFCE8
	0x039764E8 CBZ X20, 0x3976658
	0x039764EC ADRP X9, 0x7D7000
	0x039764F0 LDR W10, [X20 + 0x1C]
	0x039764F4 LDR X8, [X20 + 0x10]
	0x039764F8 LDR X9, [X9 + 0xE10]
	0x039764FC ADD W10, W10, 0x1
	0x03976500 LDR X9, [X9]
	0x03976504 STR W10, [X20 + 0x1C]
	0x03976508 CBZ X8, 0x3976650
	0x0397650C LDRSW X10, [X20 + 0x18]
	0x03976510 LDR W11, [X8 + 0x18]
	0x03976514 CMP W10, W11
	0x03976518 B.CS 0x3976530
	0x0397651C ADD W9, W10, 0x1
	0x03976520 ADD X8, X8, X10, 0x3, LSL
	0x03976524 STR W9, [X20 + 0x18]
	0x03976528 STR X25, [X8 + 0x20]
	0x0397652C B 0x3976548
	0x03976530 LDR X8, [X9 + 0x20]
	0x03976534 LDR X8, [X8 + 0xC0]
	0x03976538 LDR X2, [X8 + 0x70]
	0x0397653C MOV X0, X20
	0x03976540 MOV X1, X25
	0x03976544 BL 0x301BF90

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D8
	003 Move [X31+80], X29
	004 Move [X31+88], X30
	005 Move [X31+96], X28
	006 Move [X31+104], X27
	007 Move [X31+112], X26
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move [X31+72], W2
	016 Move X24, 0xA6D000
	017 Move X23, 0x7DA000
	018 Move X21, 0x7DA000
	019 Move X19, 0x7DA000
	020 Move W8, [X24+2586]
	021 Move X23, [X23+2200]
	022 Move X21, [X21+2192]
	023 Move X19, [X19+2824]
	024 Move X22, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {98}
	030 Move X0, 0x7DC000
	031 Move X0, [X0+88]
	032 Call 0x1C17CF4
	033 Move X0, 0x7DC000
	034 Move X0, [X0+96]
	035 Call 0x1C17CF4
	036 Move X0, 0x7DC000
	037 Move X0, [X0+104]
	038 Call 0x1C17CF4
	039 Move X0, 0x7DC000
	040 Move X0, [X0+112]
	041 Call 0x1C17CF4
	042 Move X0, 0x7DC000
	043 Move X0, [X0+120]
	044 Call 0x1C17CF4
	045 Move X0, 0x7DA000
	046 Move X0, [X0+3480]
	047 Call 0x1C17CF4
	048 Move X0, 0x7DA000
	049 Move X0, [X0+3488]
	050 Call 0x1C17CF4
	051 Move X0, 0x7DA000
	052 Move X0, [X0+3496]
	053 Call 0x1C17CF4
	054 Move X0, 0x7DA000
	055 Move X0, [X0+2184]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D9000
	058 Move X0, [X0+3624]
	059 Call 0x1C17CF4
	060 Move X0, 0x7DA000
	061 Move X0, [X0+2192]
	062 Call 0x1C17CF4
	063 Move X0, 0x7DA000
	064 Move X0, [X0+2200]
	065 Call 0x1C17CF4
	066 Move X0, 0x77F000
	067 Move X0, [X0+3584]
	068 Call 0x1C17CF4
	069 Move X0, 0x7DC000
	070 Move X0, [X0+128]
	071 Call 0x1C17CF4
	072 Move X0, 0x7DA000
	073 Move X0, [X0+3504]
	074 Call 0x1C17CF4
	075 Move X0, 0x7DC000
	076 Move X0, [X0+136]
	077 Call 0x1C17CF4
	078 Move X0, 0x7DA000
	079 Move X0, [X0+2808]
	080 Call 0x1C17CF4
	081 Move X0, 0x7DA000
	082 Move X0, [X0+2816]
	083 Call 0x1C17CF4
	084 Move X0, 0x7DC000
	085 Move X0, [X0+144]
	086 Call 0x1C17CF4
	087 Move X0, 0x7DC000
	088 Move X0, [X0+152]
	089 Call 0x1C17CF4
	090 Move X0, 0x7DA000
	091 Move X0, [X0+3536]
	092 Call 0x1C17CF4
	093 Move X0, 0x7DA000
	094 Move X0, [X0+2824]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X24+2586], W8
	098 Move X24, 0x7DC000
	099 Move X25, 0x7DC000
	100 Move X24, [X24+120]
	101 Move X25, [X25+112]
	102 Move X0, [X23]
	103 Move [X31+32], X31
	104 Move [X31+40], X31
	105 Move [X31+48], X31
	106 Move [X31+76], W31
	107 Call 0x1C17F10
	108 Move X1, [X21]
	109 Move X21, X0
	110 Call HashSet`1<Object>..ctor, X0
	111 Move X0, [X19]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move W2, 1
	117 Move X0, X20
	118 Move X1, X22
	119 Move X3, X31
	120 Call WingedEdge.GetWingedEdges, X0, X1, X2
	121 Move X8, [X24]
	122 Move X24, X0
	123 Move X0, X8
	124 Call 0x1C17F10
	125 Move X1, [X25]
	126 Move X22, X0
	127 Call Dictionary`2<EdgeLookup, Single>..ctor, X0
	128 Compare X24, 0
	129 JumpIfEqual {510}
	130 Move W8, [X24+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, -48799744
	133 Move X19, 0x7DA000
	134 Move X27, 0x7DC000
	135 Move X28, 0x7DC000
	136 Move V8, [X8+196]
	137 Move X19, [X19+2816]
	138 Move X27, [X27+96]
	139 Move X28, [X28+88]
	140 Move W25, W31
	141 Move X2, [X19]
	142 Move X0, X24
	143 Move W1, W25
	144 Call List`1<Object>.get_Item, X0, X1
	145 Move X8, 0x7DA000
	146 Move X8, [X8+3536]
	147 Move X26, X0
	148 Move X8, [X8]
	149 Move X0, X8
	150 Call 0x1C17F10
	151 Move X1, X26
	152 Move X2, X31
	153 Move X23, X0
	154 Call WingedEdgeEnumerator..ctor, X0, X1
	155 Compare X23, 0
	156 JumpIfEqual {231}
	157 Move X0, X23
	158 Move X1, X31
	159 Call WingedEdgeEnumerator.MoveNext, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {194}
	164 Move X0, X23
	165 Move X1, X31
	166 Call WingedEdgeEnumerator.get_Current, X0
	167 Move X26, X0
	168 Compare X0, 0
	169 JumpIfEqual {229}
	170 Move X8, [X26+56]
	171 Compare X8, 0
	172 JumpIfEqual {157}
	173 Compare X22, 0
	174 JumpIfEqual {230}
	175 Move X1, [X26+16]
	176 Move X2, [X26+24]
	177 Move X3, [X27]
	178 Move X0, X22
	179 Call Dictionary`2<EdgeLookup, Single>.ContainsKey, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {157}
	184 Move X2, [X26+56]
	185 Move X0, X20
	186 Move X1, X26
	187 Move V0, V8
	188 Call QuadUtility.GetQuadScore, X0, X1, X2, V0
	189 Move X1, [X26+16]
	190 Move X2, [X26+24]
	191 Move X3, [X28]
	192 Move X0, X22
	193 Call Dictionary`2<EdgeLookup, Single>.Add, X0, X1, V0
	194 Move X26, X31
	195 Move W29, 6
	196 Compare X23, 0
	197 JumpIfEqual {221}
	198 Move X8, [X23]
	199 Move X10, 0x77F000
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Move X10, [X10+3584]
	202 Move X1, [X10]
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X23
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X23
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X26, 0
	222 JumpIfNotEqual {490}
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Compare W29, 0
	225 JumpIfNotEqual {452}
	226 Move W8, [X24+24]
	227 Add W25, W25, 1
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Call 0x1C17F20
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Call 0x3EB2AD0
	234 Move X26, [X0]
	235 Call 0x3EB2AE0
	236 Move W29, W31
	237 Compare X23, 0
	238 JumpIfNotEqual {198}
	239 Move X8, 0x7DB000
	240 Move X8, [X8+144]
	241 Move X23, 0x7DB000
	242 Move X25, 0x7D9000
	243 Move X27, 0x7D9000
	244 Move X26, 0x7D9000
	245 Move X23, [X23+136]
	246 Move X25, [X25+3504]
	247 Move X27, [X27+3488]
	248 Move X26, [X26+2184]
	249 Move X0, [X8]
	250 Move X29, 0x7DB000
	251 Move X19, 0x7D8000
	252 Move X29, [X29+104]
	253 Move X19, [X19+3624]
	254 Call 0x1C17F10
	255 Move X1, [X23]
	256 Move X23, X26
	257 Move [X31], X0
	258 Call List`1<SimpleTuple`2<Object, Object>>..ctor, X0
	259 Move X1, [X25]
	260 Add X8, X31, 8
	261 Move X0, X24
	262 Call List`1<Object>.GetEnumerator, X0
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 Move X8, [X31+24]
	265 Move [X31+2], V0
	266 Move [X31+48], X8
	267 Move X1, [X27]
	268 Add X0, X31, 32
	269 Call Enumerator<Object>.MoveNext, X0
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfNotEqual {436}
	274 Move X25, [X31+48]
	275 Compare X25, 0
	276 JumpIfEqual {488}
	277 Compare X21, 0
	278 JumpIfEqual {489}
	279 Move X1, [X25+32]
	280 Move X2, [X23]
	281 Move X0, X21
	282 Call HashSet`1<Object>.Add, X0, X1
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {267}
	287 Move X8, 0x7D9000
	288 Move X8, [X8+3536]
	289 Move X0, [X8]
	290 Call 0x1C17F10
	291 Move X24, X0
	292 Move X1, X25
	293 Move X2, X31
	294 Call WingedEdgeEnumerator..ctor, X0, X1
	295 Compare X24, 0
	296 JumpIfEqual {426}
	297 Move X26, X31
	298 Move S8, W31
	299 Move X0, X24
	300 Move X1, X31
	301 Call WingedEdgeEnumerator.MoveNext, X0
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {349}
	306 Move X0, X24
	307 Move X1, X31
	308 Call WingedEdgeEnumerator.get_Current, X0
	309 Move X27, X0
	310 Compare X0, 0
	311 JumpIfEqual {424}
	312 Move X8, [X27+56]
	313 Compare X8, 0
	314 JumpIfEqual {323}
	315 Move X1, [X8+32]
	316 Move X2, [X19]
	317 Move X0, X21
	318 Call HashSet`1<Object>.Contains, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {299}
	323 Compare X22, 0
	324 JumpIfEqual {425}
	325 Move X1, [X27+16]
	326 Move X2, [X27+24]
	327 Move X4, [X29]
	328 Add X3, X31, 76
	329 Move X0, X22
	330 Call Dictionary`2<EdgeLookup, Single>.TryGetValue, X0, X1, X2
	331 Move V0, [X31+76]
	332 NotImplemented "Instruction FCMP not yet implemented."
	333 NotImplemented "Instruction CSET not yet implemented."
	334 And W8, W0, W8
	335 Move TEMP, X8
	336 And TEMP, TEMP, 1
	337 Compare TEMP, 1
	338 JumpIfNotEqual {299}
	339 Move X28, [X25+32]
	340 Move X0, [X27+56]
	341 Move X1, X22
	342 Call QuadUtility.GetBestQuadConnection, X0, X1
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X8, [X27+56]
	345 Compare X8, 0
	346 JumpIfEqual {427}
	347 Move V8, [X31+76]
	348 Move X26, [X8+32]
	349 Move X27, X31
	350 Move W28, 12
	351 Compare X24, 0
	352 JumpIfEqual {376}
	353 Move X8, [X24]
	354 Move X10, 0x77E000
	355 NotImplemented "Instruction LDRH not yet implemented."
	356 Move X10, [X10+3584]
	357 Move X1, [X10]
	358 Compare X9, 0
	359 JumpIfEqual {366}
	360 Move X10, [X8+176]
	361 Add X10, X10, 8
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Subtract X9, X9, 1
	365 Add X10, X10, 16
	366 Move X0, X24
	367 Move W2, W31
	368 Call 0x1C5D788
	369 NotImplemented "Instruction LDRSW not yet implemented."
	370 Add X8, X8, X9
	371 Add X0, X8, 312
	372 Move X8, [X0]
	373 Move X1, [X0+8]
	374 Move X0, X24
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Compare X27, 0
	377 JumpIfNotEqual {506}
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Compare W28, 0
	380 JumpIfNotEqual {447}
	381 Move X27, 0x7D9000
	382 Move X27, [X27+3488]
	383 Compare X26, 0
	384 JumpIfEqual {267}
	385 Move X2, [X23]
	386 Move X0, X21
	387 Move X1, X26
	388 Call HashSet`1<Object>.Add, X0, X1
	389 Move X8, 0x7DB000
	390 Move X1, [X25+32]
	391 Move X8, [X8+152]
	392 Move [X31+8], X31
	393 Move [X31+16], X31
	394 Move X3, [X8]
	395 Add X0, X31, 8
	396 Move X2, X26
	397 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	398 Move X0, [X31]
	399 Compare X0, 0
	400 JumpIfEqual {508}
	401 Move X9, 0x7DB000
	402 Move X1, [X31+8]
	403 Move X2, [X31+16]
	404 Move W10, [X0+28]
	405 Move X8, [X0+16]
	406 Move X9, [X9+128]
	407 Add W10, W10, 1
	408 Move X9, [X9]
	409 Move [X0+28], W10
	410 Compare X8, 0
	411 JumpIfEqual {509}
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Move W11, [X8+24]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Add W9, W10, 1
	416 Add X8, X8, X10
	417 Move [X0+24], W9
	418 Move [X8+32], X1
	419 Move [X8+40], X2
	420 Move X8, [X9+32]
	421 Move X8, [X8+192]
	422 Move X3, [X8+112]
	423 Call List`1<SimpleTuple`2<Object, Object>>.AddWithResize, X0, X1
	424 Call 0x1C17F20
	425 Call 0x1C17F20
	426 Call 0x1C17F20
	427 Call 0x1C17F20
	428 Move X26, X31
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Call 0x3EB2AD0
	431 Move X27, [X0]
	432 Call 0x3EB2AE0
	433 Move W28, W31
	434 Compare X24, 0
	435 JumpIfNotEqual {353}
	436 Move X8, 0x7D9000
	437 Move X8, [X8+3480]
	438 Add X0, X31, 32
	439 Move X1, [X8]
	440 Call Enumerator<Object>.Dispose, X0
	441 Move X19, [X31]
	442 Move W8, [X31+72]
	443 Move X0, X20
	444 Move X1, X19
	445 And W2, W8, 1
	446 Call MergeElements.MergePairs, X0, X1, X2
	447 Move X8, 0x7D9000
	448 Move X8, [X8+3480]
	449 Add X0, X31, 32
	450 Move X1, [X8]
	451 Call Enumerator<Object>.Dispose, X0
	452 Move X20, [X31+160]
	453 Move X19, [X31+168]
	454 Move X22, [X31+144]
	455 Move X21, [X31+152]
	456 Move X24, [X31+128]
	457 Move X23, [X31+136]
	458 Move X26, [X31+112]
	459 Move X25, [X31+120]
	460 Move X28, [X31+96]
	461 Move X27, [X31+104]
	462 Move X29, [X31+80]
	463 Move X30, [X31+88]
	464 Move V8, [X31+64]
	465 Add X31, X31, 176
	466 Return X0
	467 Move X21, X1
	468 Move X22, X0
	469 Move X27, X31
	470 Compare X24, 0
	471 JumpIfEqual {499}
	472 Move X8, [X24]
	473 Move X10, 0x77E000
	474 NotImplemented "Instruction LDRH not yet implemented."
	475 Move X10, [X10+3584]
	476 Move X1, [X10]
	477 Compare X9, 0
	478 JumpIfEqual {485}
	479 Move X10, [X8+176]
	480 Add X10, X10, 8
	481 NotImplemented "Instruction LDUR not yet implemented."
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Subtract X9, X9, 1
	484 Add X10, X10, 16
	485 Move X0, X24
	486 Move W2, W31
	487 Call 0x1C5D788
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Move X0, X26
	491 Call 0x1C17F18
	492 NotImplemented "Instruction LDRSW not yet implemented."
	493 Add X8, X8, X9
	494 Add X0, X8, 312
	495 Move X8, [X0]
	496 Move X1, [X0+8]
	497 Move X0, X24
	498 NotImplemented "Instruction BLR not yet implemented."
	499 Move X19, [X31]
	500 Move X0, X22
	501 Move X1, X21
	502 Compare X27, 0
	503 JumpIfEqual {550}
	504 Move X0, X27
	505 Call 0x1C17F18
	506 Move X0, X27
	507 Call 0x1C17F18
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Move X19, X0
	512 Move X26, X31
	513 Move X21, X1
	514 Move X22, X0
	515 Compare X24, 0
	516 JumpIfNotEqual {472}
	517 Move X19, X0
	518 Compare X23, 0
	519 JumpIfEqual {543}
	520 Move X8, [X23]
	521 Move X10, 0x77E000
	522 NotImplemented "Instruction LDRH not yet implemented."
	523 Move X10, [X10+3584]
	524 Move X1, [X10]
	525 Compare X9, 0
	526 JumpIfEqual {533}
	527 Move X10, [X8+176]
	528 Add X10, X10, 8
	529 NotImplemented "Instruction LDUR not yet implemented."
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Subtract X9, X9, 1
	532 Add X10, X10, 16
	533 Move X0, X23
	534 Move W2, W31
	535 Call 0x1C5D788
	536 NotImplemented "Instruction LDRSW not yet implemented."
	537 Add X8, X8, X9
	538 Add X0, X8, 312
	539 Move X8, [X0]
	540 Move X1, [X0+8]
	541 Move X0, X23
	542 NotImplemented "Instruction BLR not yet implemented."
	543 Compare X26, 0
	544 JumpIfNotEqual {547}
	545 Move X0, X19
	546 Call 0x1D2D690
	547 Move X0, X26
	548 Call 0x1C17F18
	549 Move X19, [X31]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Call 0x3EB2AD0
	552 Move X21, [X0]
	553 Call 0x3EB2AE0
	554 Move X8, 0x7D9000
	555 Move X8, [X8+3480]
	556 Add X0, X31, 32
	557 Move X1, [X8]
	558 Call Enumerator<Object>.Dispose, X0
	559 Compare X21, 0
	560 JumpIfEqual {442}
	561 Move X0, X21
	562 Call 0x1C17F18
	563 Move X19, X0
	564 Move X21, X31
	565 Move X19, X0
	566 Move X8, 0x7D9000
	567 Move X8, [X8+3480]
	568 Move X1, [X8]
	569 Add X0, X31, 32
	570 Call Enumerator<Object>.Dispose, X0
	571 Compare X21, 0
	572 JumpIfEqual {545}
	573 Move X0, X21
	574 Call 0x1C17F18
	575 Call 0x1991590

Method: UnityEngine.ProBuilder.Face GetBestQuadConnection(UnityEngine.ProBuilder.WingedEdge wing, System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.EdgeLookup, System.Single> connections)

Disassembly:
	0x03979F90 MOV W2, W31
	0x03979F94 BL 0x1C5C788
	0x03979F98 B 0x3979FA8
	0x03979F9C LDRSW X9, [X10]
	0x03979FA0 ADD X8, X8, X9, 0x4, LSL
	0x03979FA4 ADD X0, X8, 0x138
	0x03979FA8 LDP X8, X2, [X0]
	0x03979FAC MOV X0, X19
	0x03979FB0 MOV W1, W21
	0x03979FB4 BLR X8
	0x03979FB8 LDR X1, [X23]
	0x03979FBC MOV V8.16B, V0.16B
	0x03979FC0 CMP W21, W22
	0x03979FC4 MOV V9.16B, V1.16B
	0x03979FC8 B.GE 0x397A008
	0x03979FCC LDR X8, [X19]
	0x03979FD0 LDRH W9, [X8 + 0x12E]
	0x03979FD4 CBZ X9, 0x3979FF8
	0x03979FD8 LDR X10, [X8 + 0xB0]
	0x03979FDC ADD X10, X10, 0x8
	0x03979FE0 LDUR X11, [X10 - 0x8]
	0x03979FE4 CMP X11, X1
	0x03979FE8 B.EQ 0x397A044
	0x03979FEC SUBS X9, X9, 0x1
	0x03979FF0 ADD X10, X10, 0x10
	0x03979FF4 B.NE 0x3979FE0
	0x03979FF8 MOV X0, X19
	0x03979FFC MOV W2, W31
	0x0397A000 BL 0x1C5C788
	0x0397A004 B 0x397A050
	0x0397A008 LDR X8, [X19]
	0x0397A00C LDRH W9, [X8 + 0x12E]
	0x0397A010 CBZ X9, 0x397A034
	0x0397A014 LDR X10, [X8 + 0xB0]
	0x0397A018 ADD X10, X10, 0x8
	0x0397A01C LDUR X11, [X10 - 0x8]
	0x0397A020 CMP X11, X1
	0x0397A024 B.EQ 0x397A068
	0x0397A028 SUBS X9, X9, 0x1
	0x0397A02C ADD X10, X10, 0x10
	0x0397A030 B.NE 0x397A01C
	0x0397A034 MOV X0, X19
	0x0397A038 MOV W2, W31
	0x0397A03C BL 0x1C5C788
	0x0397A040 B 0x397A074
	0x0397A044 LDRSW X9, [X10]
	0x0397A048 ADD X8, X8, X9, 0x4, LSL
	0x0397A04C ADD X0, X8, 0x138
	0x0397A050 LDP X8, X2, [X0]
	0x0397A054 ADD W21, W21, 0x1
	0x0397A058 MOV X0, X19
	0x0397A05C MOV W1, W21
	0x0397A060 BLR X8
	0x0397A064 B 0x397A088
	0x0397A068 LDRSW X9, [X10]
	0x0397A06C ADD X8, X8, X9, 0x4, LSL
	0x0397A070 ADD X0, X8, 0x138
	0x0397A074 LDP X8, X2, [X0]
	0x0397A078 MOV X0, X19
	0x0397A07C MOV W1, W31
	0x0397A080 BLR X8
	0x0397A084 ADD W21, W21, 0x1
	0x0397A088 FSUB S0, S0, S8
	0x0397A08C FADD S1, S9, S1
	0x0397A090 FMUL S0, S0, S1
	0x0397A094 CMP W21, W20
	0x0397A098 FADD S10, S10, S0
	0x0397A09C B.NE 0x3979F5C
	0x0397A0A0 FCMP S10, 0x0
	0x0397A0A4 B.EQ 0x397A0B4
	0x0397A0A8 MOVZ W8, 0x2
	0x0397A0AC CSINC W0, W8, W31, LE
	0x0397A0B0 B 0x397A0B8
	0x0397A0B4 MOV W0, W31
	0x0397A0B8 LDP X20, X19, [X31 + 0x40]
	0x0397A0BC LDP X22, X21, [X31 + 0x30]
	0x0397A0C0 LDP X30, X23, [X31 + 0x20]
	0x0397A0C4 LDP D9, D8, [X31 + 0x10]
	0x0397A0C8 LDR V10, [X31], #0x50
	0x0397A0CC RET
	0x0397A0D0 ADRP X0, 0x77E000
	0x0397A0D4 LDR X0, [X0 + 0x528]
	0x0397A0D8 BL 0x1C16D08
	0x0397A0DC BL 0x1C16F10
	0x0397A0E0 MOV X19, X0
	0x0397A0E4 ADRP X0, 0x7D3000
	0x0397A0E8 LDR X0, [X0 + 0x690]
	0x0397A0EC BL 0x1C16D08
	0x0397A0F0 MOV X1, X0
	0x0397A0F4 MOV X0, X19
	0x0397A0F8 MOV X2, X31
	0x0397A0FC BL 0x330E100
	0x0397A100 ADRP X0, 0x7D6000
	0x0397A104 LDR X0, [X0 + 0x1C8]
	0x0397A108 BL 0x1C16D08
	0x0397A10C MOV X1, X0
	0x0397A110 MOV X0, X19
	0x0397A114 BL 0x1C16DEC
	0x0397A118 STP X30, X25, [X31 - 0x40]!
	0x0397A11C STP X24, X23, [X31 + 0x10]
	0x0397A120 STP X22, X21, [X31 + 0x20]
	0x0397A124 STP X20, X19, [X31 + 0x30]
	0x0397A128 ADRP X21, 0xA67000
	0x0397A12C LDRB W8, [X21 + 0xA20]
	0x0397A130 MOV X19, X1
	0x0397A134 MOV X20, X0
	0x0397A138 TBNZ X8, 0x0, 0x397A180
	0x0397A13C ADRP X0, 0x7D5000
	0x0397A140 LDR X0, [X0 + 0x250]
	0x0397A144 BL 0x1C16CF4
	0x0397A148 ADRP X0, 0x7D4000
	0x0397A14C LDR X0, [X0 + 0x170]
	0x0397A150 BL 0x1C16CF4
	0x0397A154 ADRP X0, 0x7D5000
	0x0397A158 LDR X0, [X0 + 0x270]
	0x0397A15C BL 0x1C16CF4
	0x0397A160 ADRP X0, 0x7D6000
	0x0397A164 LDR X0, [X0 + 0x1D0]
	0x0397A168 BL 0x1C16CF4
	0x0397A16C ADRP X0, 0x7D6000
	0x0397A170 LDR X0, [X0 + 0x1B0]
	0x0397A174 BL 0x1C16CF4
	0x0397A178 MOVZ W8, 0x1
	0x0397A17C STRB W8, [X21 + 0xA20]
	0x0397A180 CBZ X20, 0x397A248
	0x0397A184 CBZ X19, 0x397A268
	0x0397A188 ADRP X23, 0x7D6000
	0x0397A18C LDR X23, [X23 + 0x1B0]
	0x0397A190 LDR X0, [X23]
	0x0397A194 LDR W8, [X0 + 0xE0]
	0x0397A198 CBNZ W8, 0x397A1A4
	0x0397A19C BL 0x1C16DFC
	0x0397A1A0 LDR X0, [X23]
	0x0397A1A4 LDR X8, [X0 + 0xB8]
	0x0397A1A8 ADRP X25, 0x7D5000
	0x0397A1AC ADRP X24, 0x7D4000
	0x0397A1B0 LDR X21, [X8 + 0x10]
	0x0397A1B4 LDR X25, [X25 + 0x250]
	0x0397A1B8 LDR X24, [X24 + 0x170]
	0x0397A1BC CBNZ X21, 0x397A210
	0x0397A1C0 LDR W8, [X0 + 0xE0]
	0x0397A1C4 CBNZ W8, 0x397A1D0
	0x0397A1C8 BL 0x1C16DFC
	0x0397A1CC LDR X0, [X23]
	0x0397A1D0 ADRP X9, 0x7D5000
	0x0397A1D4 LDR X8, [X0 + 0xB8]
	0x0397A1D8 LDR X9, [X9 + 0x270]
	0x0397A1DC LDR X22, [X8]
	0x0397A1E0 LDR X0, [X9]
	0x0397A1E4 BL 0x1C16F10
	0x0397A1E8 ADRP X8, 0x7D6000
	0x0397A1EC LDR X8, [X8 + 0x1D0]
	0x0397A1F0 MOV X1, X22
	0x0397A1F4 MOV X3, X31
	0x0397A1F8 MOV X21, X0
	0x0397A1FC LDR X2, [X8]
	0x0397A200 BL 0x2D31154

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xA69000
	011 Move X19, 0x7D6000
	012 Move W8, [X22+2587]
	013 Move X19, [X19+3536]
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x7D8000
	021 Move X0, [X0+104]
	022 Call 0x1C17CF4
	023 Move X0, 0x7D8000
	024 Move X0, [X0+400]
	025 Call 0x1C17CF4
	026 Move X0, 0x77B000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x7D6000
	030 Move X0, [X0+3536]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2587], W8
	034 Move X24, 0x7D8000
	035 Move X24, [X24+104]
	036 Move X0, [X19]
	037 Move X25, 0x7D7000
	038 Move X23, 0x77A000
	039 Move X25, [X25+400]
	040 Move X23, [X23+3584]
	041 Move [X31+12], W31
	042 Call 0x1C17F10
	043 Move X1, X20
	044 Move X2, X31
	045 Move X19, X0
	046 Call WingedEdgeEnumerator..ctor, X0, X1
	047 Move X20, X31
	048 Move S8, W31
	049 Compare X19, 0
	050 JumpIfEqual {126}
	051 Move X0, X19
	052 Move X1, X31
	053 Call WingedEdgeEnumerator.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {91}
	058 Move X0, X19
	059 Move X1, X31
	060 Call WingedEdgeEnumerator.get_Current, X0
	061 Move X22, X0
	062 Move [X31+12], W31
	063 Compare X0, 0
	064 JumpIfEqual {127}
	065 Compare X21, 0
	066 JumpIfEqual {128}
	067 Move X1, [X22+16]
	068 Move X2, [X22+24]
	069 Move X4, [X24]
	070 Add X3, X31, 12
	071 Move X0, X21
	072 Call Dictionary`2<EdgeLookup, Single>.TryGetValue, X0, X1, X2
	073 Move V0, [X31+12]
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 And W8, W0, W8
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {49}
	081 Move X1, [X22+16]
	082 Move X2, [X22+24]
	083 Move X3, [X25]
	084 Move X0, X21
	085 Call Dictionary`2<EdgeLookup, Single>.get_Item, X0, X1
	086 Move X8, [X22+56]
	087 Compare X8, 0
	088 JumpIfEqual {131}
	089 Move X20, [X8+32]
	090 Move V8, V0
	091 Move X21, X31
	092 Move X8, [X19]
	093 Move X1, [X23]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X19
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X21, 0
	114 JumpIfNotEqual {129}
	115 Move X0, X20
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X24, [X31+32]
	121 Move X23, [X31+40]
	122 Move X30, [X31+16]
	123 Move X25, [X31+24]
	124 Move V8, [X31+80]
	125 Return X0
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Move X0, X21
	130 Call 0x1C17F18
	131 Call 0x1C17F20
	132 Move X20, X31
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Call 0x3EB2AD0
	135 Move X21, [X0]
	136 Call 0x3EB2AE0
	137 Compare X19, 0
	138 JumpIfNotEqual {92}
	139 Move X20, X0
	140 Move X21, X31
	141 Move X20, X0
	142 Compare X19, 0
	143 JumpIfEqual {165}
	144 Move X8, [X19]
	145 Move X1, [X23]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X19
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X19
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Compare X21, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X20
	168 Call 0x1D2D690
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Single GetQuadScore(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.WingedEdge left, UnityEngine.ProBuilder.WingedEdge right, System.Single normalThreshold = 0.9)

Disassembly:
	0x03979908 ADRP X0, 0x7D7000
	0x0397990C LDR X0, [X0 + 0x1C0]
	0x03979910 BL 0x1C16CF4
	0x03979914 ADRP X0, 0x7D6000
	0x03979918 LDR X0, [X0 + 0x1C8]
	0x0397991C BL 0x1C16CF4
	0x03979920 ADRP X0, 0x7D6000
	0x03979924 LDR X0, [X0 + 0x1D0]
	0x03979928 BL 0x1C16CF4
	0x0397992C ADRP X0, 0x77B000
	0x03979930 LDR X0, [X0 + 0xE30]
	0x03979934 BL 0x1C16CF4
	0x03979938 ADRP X0, 0x7D4000
	0x0397993C LDR X0, [X0 + 0xDE8]
	0x03979940 BL 0x1C16CF4
	0x03979944 ADRP X0, 0x7D6000
	0x03979948 LDR X0, [X0 + 0x318]
	0x0397994C BL 0x1C16CF4
	0x03979950 MOVZ W8, 0x1
	0x03979954 STRB W8, [X21 + 0xA1F]
	0x03979958 CBZ X27, 0x3979E58
	0x0397995C LDR X25, [X27 + 0x10]
	0x03979960 CBZ X25, 0x3979E58
	0x03979964 ADRP X8, 0x7D6000
	0x03979968 LDR X8, [X8 + 0x318]
	0x0397996C ADRP X21, 0x7D7000
	0x03979970 LDRSW X23, [X25 + 0x18]
	0x03979974 LDR X0, [X8]
	0x03979978 LDR X21, [X21 + 0x1C0]
	0x0397997C BL 0x1C16F10
	0x03979980 MOVZ W8, 0x5556
	0x03979984 MOVK W8, 0x55550000
	0x03979988 LDR X2, [X21]
	0x0397998C MUL X8, X23, X8
	0x03979990 UBFM X9, X8, 0x3F, 0x3F
	0x03979994 UBFM X8, X8, 0x20, 0x3F
	0x03979998 ADD W1, W8, W9
	0x0397999C MOV X22, X0
	0x039799A0 BL 0x301B830
	0x039799A4 CMP W23, 0x1
	0x039799A8 STR X23, [X31 + 0x10]
	0x039799AC B.LT 0x3979E34
	0x039799B0 ADRP X29, 0x7D4000
	0x039799B4 ADRP X21, 0x77B000
	0x039799B8 LDR X29, [X29 + 0xC80]
	0x039799BC LDR X21, [X21 + 0xE10]
	0x039799C0 MOV W26, W31
	0x039799C4 STR X28, [X31 + 0x18]
	0x039799C8 STR X27, [X31 + 0x8]
	0x039799CC ADRP X8, 0x7D6000
	0x039799D0 LDR X8, [X8 + 0x1F0]
	0x039799D4 LDR X0, [X8]
	0x039799D8 BL 0x1C16F10
	0x039799DC MOV X1, X31
	0x039799E0 MOV X23, X0
	0x039799E4 BL 0x3901F84
	0x039799E8 ADRP X8, 0x7D5000
	0x039799EC LDR X8, [X8 + 0x560]
	0x039799F0 LDR X0, [X8]
	0x039799F4 BL 0x1C16F10
	0x039799F8 MOV X1, X27
	0x039799FC MOV X2, X31
	0x03979A00 MOV X24, X0
	0x03979A04 BL 0x3900598
	0x03979A08 CBZ X23, 0x3979E58
	0x03979A0C STR X24, [X23 + 0x10]
	0x03979A10 ADRP X8, 0x77B000
	0x03979A14 LDR X8, [X8 + 0xE58]
	0x03979A18 MOVZ W1, 0x3
	0x03979A1C LDR X0, [X8]
	0x03979A20 BL 0x1C16D6C
	0x03979A24 CBZ X0, 0x3979E58
	0x03979A28 LDR W8, [X0 + 0x18]
	0x03979A2C MOV X1, X0
	0x03979A30 CMP W8, 0x1
	0x03979A34 B.LS 0x3979E5C
	0x03979A38 CMP W8, 0x2
	0x03979A3C MOVZ W8, 0x1
	0x03979A40 STR W8, [X1 + 0x24]
	0x03979A44 B.EQ 0x3979E5C
	0x03979A48 MOVZ W8, 0x2
	0x03979A4C STR W8, [X1 + 0x28]
	0x03979A50 CBZ X24, 0x3979E58
	0x03979A54 MOV X0, X24
	0x03979A58 MOV X2, X31
	0x03979A5C BL 0x38FFBA8
	0x03979A60 ADRP X8, 0x7D4000
	0x03979A64 LDR X8, [X8 + 0xDE8]
	0x03979A68 LDR X0, [X8]
	0x03979A6C BL 0x1C16F10
	0x03979A70 ADRP X8, 0x7D6000
	0x03979A74 LDR X8, [X8 + 0x1C8]
	0x03979A78 MOV X24, X0
	0x03979A7C LDR X1, [X8]
	0x03979A80 BL 0x301B7C4
	0x03979A84 LDR W8, [X25 + 0x18]
	0x03979A88 CMP W26, W8
	0x03979A8C B.CS 0x3979E5C
	0x03979A90 CBZ X28, 0x3979E58
	0x03979A94 ADD X8, X25, W26, 0x2, SXTW
	0x03979A98 MOV X20, X29
	0x03979A9C ADD X29, X8, 0x20
	0x03979AA0 ADRP X8, 0x7D6000
	0x03979AA4 LDR W1, [X29]
	0x03979AA8 LDR X8, [X8 + 0x1D0]
	0x03979AAC MOV X0, X28
	0x03979AB0 LDR X2, [X8]
	0x03979AB4 BL 0x301BCCC
	0x03979AB8 CBZ X24, 0x3979E58
	0x03979ABC ADRP X9, 0x7D6000
	0x03979AC0 LDR W10, [X24 + 0x1C]
	0x03979AC4 LDR X8, [X24 + 0x10]
	0x03979AC8 LDR X9, [X9 + 0x1C0]
	0x03979ACC ADD W10, W10, 0x1
	0x03979AD0 LDR X9, [X9]
	0x03979AD4 STR W10, [X24 + 0x1C]
	0x03979AD8 CBZ X8, 0x3979E58
	0x03979ADC LDRSW X10, [X24 + 0x18]
	0x03979AE0 LDR W11, [X8 + 0x18]
	0x03979AE4 MOV X1, X0
	0x03979AE8 CMP W10, W11
	0x03979AEC B.CS 0x3979B04
	0x03979AF0 ADD W9, W10, 0x1
	0x03979AF4 ADD X8, X8, X10, 0x3, LSL
	0x03979AF8 STR W9, [X24 + 0x18]
	0x03979AFC STR X1, [X8 + 0x20]
	0x03979B00 B 0x3979B18
	0x03979B04 LDR X8, [X9 + 0x20]
	0x03979B08 MOV X0, X24
	0x03979B0C LDR X8, [X8 + 0xC0]
	0x03979B10 LDR X2, [X8 + 0x70]
	0x03979B14 BL 0x301BF90
	0x03979B18 LDR W8, [X25 + 0x18]
	0x03979B1C ADD W28, W26, 0x1
	0x03979B20 CMP W28, W8
	0x03979B24 B.CS 0x3979E5C
	0x03979B28 ADD X27, X25, W28, 0x2, SXTW
	0x03979B2C ADRP X8, 0x7D6000
	0x03979B30 LDR W1, [X27 + 0x20]!
	0x03979B34 LDR X8, [X8 + 0x1D0]
	0x03979B38 LDR X0, [X31 + 0x18]
	0x03979B3C LDR X2, [X8]
	0x03979B40 BL 0x301BCCC
	0x03979B44 ADRP X9, 0x7D6000
	0x03979B48 LDR W10, [X24 + 0x1C]
	0x03979B4C LDR X8, [X24 + 0x10]
	0x03979B50 LDR X9, [X9 + 0x1C0]
	0x03979B54 ADD W10, W10, 0x1
	0x03979B58 LDR X9, [X9]
	0x03979B5C STR W10, [X24 + 0x1C]
	0x03979B60 CBZ X8, 0x3979E58
	0x03979B64 LDRSW X10, [X24 + 0x18]
	0x03979B68 LDR W11, [X8 + 0x18]
	0x03979B6C MOV X1, X0
	0x03979B70 CMP W10, W11
	0x03979B74 B.CS 0x3979B8C
	0x03979B78 ADD W9, W10, 0x1
	0x03979B7C ADD X8, X8, X10, 0x3, LSL
	0x03979B80 STR W9, [X24 + 0x18]
	0x03979B84 STR X1, [X8 + 0x20]
	0x03979B88 B 0x3979BA0
	0x03979B8C LDR X8, [X9 + 0x20]
	0x03979B90 MOV X0, X24
	0x03979B94 LDR X8, [X8 + 0xC0]
	0x03979B98 LDR X2, [X8 + 0x70]
	0x03979B9C BL 0x301BF90
	0x03979BA0 LDR W8, [X25 + 0x18]
	0x03979BA4 ADD W28, W28, 0x1
	0x03979BA8 CMP W28, W8
	0x03979BAC B.CS 0x3979E5C
	0x03979BB0 ADD W8, W26, 0x2
	0x03979BB4 ADD X26, X25, W8, 0x2, SXTW
	0x03979BB8 ADRP X8, 0x7D6000
	0x03979BBC LDR W1, [X26 + 0x20]!
	0x03979BC0 LDR X8, [X8 + 0x1D0]
	0x03979BC4 LDR X0, [X31 + 0x18]
	0x03979BC8 LDR X2, [X8]
	0x03979BCC BL 0x301BCCC
	0x03979BD0 ADRP X9, 0x7D6000
	0x03979BD4 LDR W10, [X24 + 0x1C]
	0x03979BD8 LDR X8, [X24 + 0x10]
	0x03979BDC LDR X9, [X9 + 0x1C0]
	0x03979BE0 ADD W10, W10, 0x1
	0x03979BE4 LDR X9, [X9]
	0x03979BE8 STR W10, [X24 + 0x1C]
	0x03979BEC CBZ X8, 0x3979E58
	0x03979BF0 LDRSW X10, [X24 + 0x18]
	0x03979BF4 LDR W11, [X8 + 0x18]
	0x03979BF8 MOV X1, X0
	0x03979BFC CMP W10, W11
	0x03979C00 B.CS 0x3979C18
	0x03979C04 ADD W9, W10, 0x1
	0x03979C08 ADD X8, X8, X10, 0x3, LSL
	0x03979C0C STR W9, [X24 + 0x18]
	0x03979C10 STR X1, [X8 + 0x20]
	0x03979C14 B 0x3979C2C
	0x03979C18 LDR X8, [X9 + 0x20]
	0x03979C1C MOV X0, X24
	0x03979C20 LDR X8, [X8 + 0xC0]
	0x03979C24 LDR X2, [X8 + 0x70]
	0x03979C28 BL 0x301BF90
	0x03979C2C STR X24, [X23 + 0x18]
	0x03979C30 ADRP X8, 0x77B000
	0x03979C34 LDR X8, [X8 + 0xE30]
	0x03979C38 LDR X0, [X8]
	0x03979C3C BL 0x1C16F10
	0x03979C40 ADRP X8, 0x77E000
	0x03979C44 LDR X8, [X8 + 0xB70]
	0x03979C48 MOV X24, X0
	0x03979C4C LDR X1, [X8]
	0x03979C50 BL 0x2FDBF14
	0x03979C54 LDR W8, [X25 + 0x18]
	0x03979C58 SUB W28, W28, 0x2
	0x03979C5C CMP W28, W8
	0x03979C60 B.CS 0x3979E5C
	0x03979C64 CBZ X19, 0x3979E58
	0x03979C68 LDR W1, [X29]
	0x03979C6C LDR X2, [X20]
	0x03979C70 MOV X0, X19
	0x03979C74 MOV X29, X20
	0x03979C78 BL 0x2A0A2A8
	0x03979C7C CBZ X24, 0x3979E58
	0x03979C80 LDR W10, [X24 + 0x1C]
	0x03979C84 LDR X8, [X24 + 0x10]
	0x03979C88 LDR X9, [X21]
	0x03979C8C ADD W10, W10, 0x1
	0x03979C90 STR W10, [X24 + 0x1C]
	0x03979C94 CBZ X8, 0x3979E58
	0x03979C98 LDRSW X10, [X24 + 0x18]
	0x03979C9C LDR W11, [X8 + 0x18]
	0x03979CA0 MOV W1, W0
	0x03979CA4 CMP W10, W11
	0x03979CA8 B.CS 0x3979CC0
	0x03979CAC ADD W9, W10, 0x1
	0x03979CB0 ADD X8, X8, X10, 0x2, LSL
	0x03979CB4 STR W9, [X24 + 0x18]
	0x03979CB8 STR W1, [X8 + 0x20]
	0x03979CBC B 0x3979CD4
	0x03979CC0 LDR X8, [X9 + 0x20]
	0x03979CC4 MOV X0, X24
	0x03979CC8 LDR X8, [X8 + 0xC0]
	0x03979CCC LDR X2, [X8 + 0x70]
	0x03979CD0 BL 0x2FDC70C
	0x03979CD4 LDR W8, [X25 + 0x18]
	0x03979CD8 ADD W28, W28, 0x1
	0x03979CDC CMP W28, W8
	0x03979CE0 B.CS 0x3979E5C
	0x03979CE4 LDR W1, [X27]
	0x03979CE8 LDR X2, [X29]
	0x03979CEC MOV X0, X19
	0x03979CF0 BL 0x2A0A2A8
	0x03979CF4 LDR W10, [X24 + 0x1C]
	0x03979CF8 LDR X8, [X24 + 0x10]
	0x03979CFC LDR X9, [X21]
	0x03979D00 ADD W10, W10, 0x1
	0x03979D04 STR W10, [X24 + 0x1C]
	0x03979D08 CBZ X8, 0x3979E58
	0x03979D0C LDRSW X10, [X24 + 0x18]
	0x03979D10 LDR W11, [X8 + 0x18]
	0x03979D14 MOV W1, W0
	0x03979D18 CMP W10, W11
	0x03979D1C B.CS 0x3979D34
	0x03979D20 ADD W9, W10, 0x1
	0x03979D24 ADD X8, X8, X10, 0x2, LSL
	0x03979D28 STR W9, [X24 + 0x18]
	0x03979D2C STR W1, [X8 + 0x20]
	0x03979D30 B 0x3979D48
	0x03979D34 LDR X8, [X9 + 0x20]
	0x03979D38 MOV X0, X24
	0x03979D3C LDR X8, [X8 + 0xC0]
	0x03979D40 LDR X2, [X8 + 0x70]
	0x03979D44 BL 0x2FDC70C
	0x03979D48 LDR W8, [X25 + 0x18]
	0x03979D4C ADD W27, W28, 0x1
	0x03979D50 CMP W27, W8
	0x03979D54 B.CS 0x3979E5C
	0x03979D58 LDR W1, [X26]
	0x03979D5C LDR X2, [X29]
	0x03979D60 MOV X0, X19
	0x03979D64 BL 0x2A0A2A8
	0x03979D68 LDR W10, [X24 + 0x1C]
	0x03979D6C LDR X8, [X24 + 0x10]
	0x03979D70 LDR X9, [X21]
	0x03979D74 LDR X28, [X31 + 0x18]
	0x03979D78 ADD W10, W10, 0x1
	0x03979D7C STR W10, [X24 + 0x1C]
	0x03979D80 CBZ X8, 0x3979E58
	0x03979D84 LDRSW X10, [X24 + 0x18]
	0x03979D88 LDR W11, [X8 + 0x18]
	0x03979D8C MOV W1, W0
	0x03979D90 CMP W10, W11
	0x03979D94 B.CS 0x3979DAC
	0x03979D98 ADD W9, W10, 0x1
	0x03979D9C ADD X8, X8, X10, 0x2, LSL
	0x03979DA0 STR W9, [X24 + 0x18]
	0x03979DA4 STR W1, [X8 + 0x20]
	0x03979DA8 B 0x3979DC0
	0x03979DAC LDR X8, [X9 + 0x20]
	0x03979DB0 MOV X0, X24
	0x03979DB4 LDR X8, [X8 + 0xC0]
	0x03979DB8 LDR X2, [X8 + 0x70]
	0x03979DBC BL 0x2FDC70C
	0x03979DC0 STR X24, [X23 + 0x20]
	0x03979DC4 CBZ X22, 0x3979E58
	0x03979DC8 ADRP X9, 0x7D6000
	0x03979DCC LDR W10, [X22 + 0x1C]
	0x03979DD0 LDR X8, [X22 + 0x10]
	0x03979DD4 LDR X9, [X9 + 0x308]
	0x03979DD8 ADD W10, W10, 0x1
	0x03979DDC LDR X9, [X9]
	0x03979DE0 STR W10, [X22 + 0x1C]
	0x03979DE4 CBZ X8, 0x3979E58
	0x03979DE8 LDRSW X10, [X22 + 0x18]
	0x03979DEC LDR W11, [X8 + 0x18]
	0x03979DF0 CMP W10, W11
	0x03979DF4 B.CS 0x3979E0C
	0x03979DF8 ADD W9, W10, 0x1
	0x03979DFC ADD X8, X8, X10, 0x3, LSL
	0x03979E00 STR W9, [X22 + 0x18]
	0x03979E04 STR X23, [X8 + 0x20]
	0x03979E08 B 0x3979E24
	0x03979E0C LDR X8, [X9 + 0x20]
	0x03979E10 MOV X0, X22
	0x03979E14 MOV X1, X23
	0x03979E18 LDR X8, [X8 + 0xC0]
	0x03979E1C LDR X2, [X8 + 0x70]
	0x03979E20 BL 0x301BF90
	0x03979E24 ADD W26, W27, 0x1
	0x03979E28 LDP X27, X8, [X31 + 0x8]
	0x03979E2C CMP W26, W8
	0x03979E30 B.LT 0x39799CC
	0x03979E34 MOV X0, X22
	0x03979E38 LDP X20, X19, [X31 + 0x70]
	0x03979E3C LDP X22, X21, [X31 + 0x60]
	0x03979E40 LDP X24, X23, [X31 + 0x50]
	0x03979E44 LDP X26, X25, [X31 + 0x40]
	0x03979E48 LDP X28, X27, [X31 + 0x30]
	0x03979E4C LDP X29, X30, [X31 + 0x20]
	0x03979E50 ADD X31, X31, 0x80
	0x03979E54 RET
	0x03979E58 BL 0x1C16F20
	0x03979E5C BL 0x1C16F28
	0x03979E60 STP X30, X19, [X31 - 0x10]!
	0x03979E64 CBZ X0, 0x3979E94
	0x03979E68 CBZ X1, 0x3979E94
	0x03979E6C LDR X19, [X0 + 0x58]
	0x03979E70 MOV X0, X1
	0x03979E74 MOV X1, X31
	0x03979E78 BL 0x38FF530
	0x03979E7C MOV X1, X0
	0x03979E80 MOV X0, X19
	0x03979E84 MOV X2, X31
	0x03979E88 BL 0x391F1D4
	0x03979E8C LDP X30, X19, [X31], #0x10
	0x03979E90 B 0x3979E98
	0x03979E94 BL 0x1C16F20
	0x03979E98 STR D10, [X31 - 0x50]!
	0x03979E9C STP D9, D8, [X31 + 0x10]
	0x03979EA0 STP X30, X23, [X31 + 0x20]
	0x03979EA4 STP X22, X21, [X31 + 0x30]
	0x03979EA8 STP X20, X19, [X31 + 0x40]
	0x03979EAC ADRP X20, 0xA68000
	0x03979EB0 LDRB W8, [X20 + 0xA21]
	0x03979EB4 MOV X19, X0
	0x03979EB8 TBNZ X8, 0x0, 0x3979EDC
	0x03979EBC ADRP X0, 0x7D4000
	0x03979EC0 LDR X0, [X0 + 0xA90]
	0x03979EC4 BL 0x1C16CF4
	0x03979EC8 ADRP X0, 0x7D4000
	0x03979ECC LDR X0, [X0 + 0xA98]
	0x03979ED0 BL 0x1C16CF4
	0x03979ED4 MOVZ W8, 0x1
	0x03979ED8 STRB W8, [X20 + 0xA21]
	0x03979EDC CBZ X19, 0x397A0D0
	0x03979EE0 ADRP X10, 0x7D4000
	0x03979EE4 LDR X8, [X19]
	0x03979EE8 LDR X10, [X10 + 0xA90]
	0x03979EEC LDRH W9, [X8 + 0x12E]
	0x03979EF0 LDR X1, [X10]
	0x03979EF4 CBZ X9, 0x3979F18
	0x03979EF8 LDR X10, [X8 + 0xB0]
	0x03979EFC ADD X10, X10, 0x8
	0x03979F00 LDUR X11, [X10 - 0x8]
	0x03979F04 CMP X11, X1
	0x03979F08 B.EQ 0x3979F28
	0x03979F0C SUBS X9, X9, 0x1
	0x03979F10 ADD X10, X10, 0x10
	0x03979F14 B.NE 0x3979F00
	0x03979F18 MOV X0, X19
	0x03979F1C MOV W2, W31
	0x03979F20 BL 0x1C5C788
	0x03979F24 B 0x3979F34
	0x03979F28 LDRSW X9, [X10]
	0x03979F2C ADD X8, X8, X9, 0x4, LSL
	0x03979F30 ADD X0, X8, 0x138
	0x03979F34 LDP X8, X1, [X0]
	0x03979F38 MOV X0, X19
	0x03979F3C BLR X8
	0x03979F40 SUBS W22, W0, 0x1
	0x03979F44 B.LT 0x397A0B4
	0x03979F48 ADRP X23, 0x7D4000
	0x03979F4C LDR X23, [X23 + 0xA98]
	0x03979F50 MOV W20, W0
	0x03979F54 MOV W21, W31
	0x03979F58 FMOV S10, W31
	0x03979F5C LDR X8, [X19]
	0x03979F60 LDR X1, [X23]
	0x03979F64 LDRH W9, [X8 + 0x12E]
	0x03979F68 CBZ X9, 0x3979F8C
	0x03979F6C LDR X10, [X8 + 0xB0]
	0x03979F70 ADD X10, X10, 0x8
	0x03979F74 LDUR X11, [X10 - 0x8]
	0x03979F78 CMP X11, X1
	0x03979F7C B.EQ 0x3979F9C
	0x03979F80 SUBS X9, X9, 0x1
	0x03979F84 ADD X10, X10, 0x10
	0x03979F88 B.NE 0x3979F74
	0x03979F8C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X22, 0xA69000
	016 Move W8, [X22+2588]
	017 Move V8, V0
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x7D6000
	026 Move X0, [X0+2824]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2588], W8
	030 Compare X19, 0
	031 JumpIfEqual {452}
	032 Move X22, 0x7D6000
	033 Move X22, [X22+2824]
	034 Move X0, X19
	035 Move X1, X31
	036 Move X2, X31
	037 Call ProBuilderMesh.GetVertices, X0, X1
	038 Move X8, [X22]
	039 Move X19, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X20
	047 Move X2, X31
	048 Call WingedEdge.MakeQuad, X0, X1
	049 Move S9, W31
	050 Compare X0, 0
	051 JumpIfEqual {435}
	052 Move W9, [X0+24]
	053 Move X20, X0
	054 Compare W9, 0
	055 JumpIfEqual {451}
	056 Compare X19, 0
	057 JumpIfEqual {452}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W10, [X19+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X19, X8
	062 Move X8, [X8+32]
	063 Compare X8, 0
	064 JumpIfEqual {452}
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X11, X19, X11
	069 Move X11, [X11+32]
	070 Compare X11, 0
	071 JumpIfEqual {452}
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X9, X19, X9
	076 Move X9, [X9+32]
	077 Compare X9, 0
	078 JumpIfEqual {452}
	079 Move S0, [X8+16]
	080 Move S1, [X8+20]
	081 Move V2, [X8+24]
	082 Move S3, [X11+16]
	083 Move S4, [X11+20]
	084 Move V5, [X11+24]
	085 Move X8, [X9+16]
	086 Move V6, [X9+24]
	087 Move X0, X31
	088 Move [X31], X8
	089 Move [X31+8], S6
	090 Call Math.Normal, X0, X1, X2
	091 Move W10, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Move W9, [X19+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X8, X19, X8
	097 Move X8, [X8+32]
	098 Compare X8, 0
	099 JumpIfEqual {452}
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X10, X19, X10
	104 Move X10, [X10+32]
	105 Compare X10, 0
	106 JumpIfEqual {452}
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X9, X19, X11
	110 Move X9, [X9+32]
	111 Compare X9, 0
	112 JumpIfEqual {452}
	113 Move V10, V0
	114 Move V11, V1
	115 Move V12, V2
	116 Move S0, [X8+16]
	117 Move S1, [X8+20]
	118 Move V2, [X8+24]
	119 Move S3, [X10+16]
	120 Move S4, [X10+20]
	121 Move V5, [X10+24]
	122 Move X8, [X9+16]
	123 Move V6, [X9+24]
	124 Move X0, X31
	125 Move [X31], X8
	126 Move [X31+8], S6
	127 Call Math.Normal, X0, X1, X2
	128 Multiply S0, S10, S0
	129 Multiply S1, S11, S1
	130 Add S0, S0, S1
	131 Multiply S1, S12, S2
	132 Add S0, S1, S0
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 Move W9, [X20+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Move W10, [X19+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X19, X8
	140 Move X8, [X8+32]
	141 Compare X8, 0
	142 JumpIfEqual {452}
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X11, X19, X11
	146 Move X11, [X11+32]
	147 Compare X11, 0
	148 JumpIfEqual {452}
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X12, X19, X12
	153 Move X12, [X12+32]
	154 Compare X12, 0
	155 JumpIfEqual {452}
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X9, X19, X9
	160 Move X9, [X9+32]
	161 Compare X9, 0
	162 JumpIfEqual {452}
	163 Move [X31+44], S0
	164 Move V0, [X12+24]
	165 Move S9, [X12+16]
	166 Move S1, [X12+20]
	167 Move X19, 0xA60000
	168 Move S10, [X8+16]
	169 Move S14, [X8+20]
	170 Move [X31+60], S0
	171 Move V0, [X9+16]
	172 Move V15, [X8+24]
	173 Move S8, [X11+16]
	174 Move S11, [X11+20]
	175 Move V13, [X11+24]
	176 Move [X31+48], S1
	177 Move [X31+56], S0
	178 Move V1, [X9+20]
	179 Move W8, [X19+1925]
	180 Move V0, [X9+24]
	181 Move [X31+136], S0
	182 Move [X31+144], S1
	183 Compare W8, 0
	184 JumpIfNotEqual {190}
	185 Move X0, 0x77B000
	186 Move X0, [X0+1448]
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move [X19+1925], W8
	190 Move X20, 0x77B000
	191 Move X20, [X20+1448]
	192 Move [X31+24], S11
	193 Move [X31+32], S8
	194 Subtract S8, S10, S8
	195 Subtract S12, S14, S11
	196 Move X0, [X20]
	197 Subtract S11, S15, S13
	198 Move [X31+56], S13
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X8, -48816128
	204 Multiply S0, S8, S8
	205 Multiply S1, S12, S12
	206 Move V13, [X8+380]
	207 Add S0, S0, S1
	208 Multiply S1, S11, S11
	209 Add S0, S1, S0
	210 NotImplemented "Instruction FSQRT not yet implemented."
	211 NotImplemented "Instruction FCMP not yet implemented."
	212 NotImplemented "Instruction FDIV not yet implemented."
	213 Move [X31+32], S1
	214 NotImplemented "Instruction FDIV not yet implemented."
	215 Move [X31+40], S1
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 Move X21, 0xA60000
	218 Move W8, [X21+1923]
	219 Compare W8, 0
	220 JumpIfNotEqual {226}
	221 Move X0, 0x77B000
	222 Move X0, [X0+1440]
	223 Call 0x1C17CF4
	224 Move W8, 1
	225 Move [X21+1923], W8
	226 Move X8, 0x77B000
	227 Move X8, [X8+1440]
	228 Move X8, [X8]
	229 Move X8, [X8+184]
	230 Move V0, [X8]
	231 Move [X31+32], S0
	232 Move V0, [X8+4]
	233 Move [X31+40], S0
	234 Move V0, [X8+8]
	235 Move V12, V9
	236 Move W8, [X19+1925]
	237 Move V9, [X31+48]
	238 Move [X31+36], S0
	239 Compare W8, 0
	240 JumpIfNotEqual {246}
	241 Move X0, 0x77B000
	242 Move X0, [X0+1448]
	243 Call 0x1C17CF4
	244 Move W8, 1
	245 Move [X19+1925], W8
	246 Move X0, [X20]
	247 Move V0, [X31+60]
	248 Subtract S11, S12, S10
	249 Subtract S10, S9, S14
	250 Move W8, [X0+224]
	251 Subtract S8, S0, S15
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Multiply S0, S11, S11
	256 Multiply S1, S10, S10
	257 Add S0, S0, S1
	258 Multiply S1, S8, S8
	259 Move V14, [X31+52]
	260 Add S0, S1, S0
	261 NotImplemented "Instruction FSQRT not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 NotImplemented "Instruction FDIV not yet implemented."
	264 NotImplemented "Instruction FDIV not yet implemented."
	265 Move [X31+16], S1
	266 NotImplemented "Instruction FDIV not yet implemented."
	267 Move X21, 0xA60000
	268 Move W8, [X21+1923]
	269 Compare W8, 0
	270 JumpIfNotEqual {276}
	271 Move X0, 0x77B000
	272 Move X0, [X0+1440]
	273 Call 0x1C17CF4
	274 Move W8, 1
	275 Move [X21+1923], W8
	276 Move X8, 0x77B000
	277 Move X8, [X8+1440]
	278 Move X8, [X8]
	279 Move X8, [X8+184]
	280 Move S15, [X8]
	281 Move S0, [X8+4]
	282 Move V10, [X8+8]
	283 Move [X31+16], S0
	284 Move W8, [X19+1925]
	285 Compare W8, 0
	286 JumpIfNotEqual {292}
	287 Move X0, 0x77B000
	288 Move X0, [X0+1448]
	289 Call 0x1C17CF4
	290 Move W8, 1
	291 Move [X19+1925], W8
	292 Move V0, [X31+140]
	293 Move X0, [X20]
	294 Move V1, [X31+60]
	295 Subtract S11, S14, S12
	296 Subtract S8, S0, S9
	297 Move V0, [X31+136]
	298 Move W8, [X0+224]
	299 Subtract S9, S0, S1
	300 Compare W8, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Multiply S0, S11, S11
	304 Multiply S1, S8, S8
	305 Add S0, S0, S1
	306 Multiply S1, S9, S9
	307 Add S0, S1, S0
	308 NotImplemented "Instruction FSQRT not yet implemented."
	309 NotImplemented "Instruction FCMP not yet implemented."
	310 Move [X31+20], S10
	311 NotImplemented "Instruction FDIV not yet implemented."
	312 NotImplemented "Instruction FDIV not yet implemented."
	313 NotImplemented "Instruction FDIV not yet implemented."
	314 Move X21, 0xA60000
	315 Move W8, [X21+1923]
	316 Compare W8, 0
	317 JumpIfNotEqual {323}
	318 Move X0, 0x77B000
	319 Move X0, [X0+1440]
	320 Call 0x1C17CF4
	321 Move W8, 1
	322 Move [X21+1923], W8
	323 Move X8, 0x77B000
	324 Move X8, [X8+1440]
	325 Move X8, [X8]
	326 Move X8, [X8+184]
	327 Move S12, [X8]
	328 Move S8, [X8+4]
	329 Move V9, [X8+8]
	330 Move S11, [X31+24]
	331 Move S10, [X31+28]
	332 Move W8, [X19+1925]
	333 Compare W8, 0
	334 JumpIfNotEqual {340}
	335 Move X0, 0x77B000
	336 Move X0, [X0+1448]
	337 Call 0x1C17CF4
	338 Move W8, 1
	339 Move [X19+1925], W8
	340 Move S1, [X31+136]
	341 Move S0, [X31+140]
	342 Move X0, [X20]
	343 Subtract S10, S10, S14
	344 Subtract S14, S11, S0
	345 Move V0, [X31+56]
	346 Move W8, [X0+224]
	347 Subtract S11, S0, S1
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Multiply S0, S10, S10
	352 Multiply S1, S14, S14
	353 Add S0, S0, S1
	354 Multiply S1, S11, S11
	355 Add S0, S1, S0
	356 NotImplemented "Instruction FSQRT not yet implemented."
	357 NotImplemented "Instruction FCMP not yet implemented."
	358 NotImplemented "Instruction FDIV not yet implemented."
	359 NotImplemented "Instruction FDIV not yet implemented."
	360 NotImplemented "Instruction FDIV not yet implemented."
	361 Move X19, 0xA60000
	362 Move W8, [X19+1923]
	363 Compare W8, 0
	364 JumpIfNotEqual {370}
	365 Move X0, 0x77B000
	366 Move X0, [X0+1440]
	367 Call 0x1C17CF4
	368 Move W8, 1
	369 Move [X19+1923], W8
	370 Move X8, 0x77B000
	371 Move X8, [X8+1440]
	372 Move X8, [X8]
	373 Move X8, [X8+184]
	374 Move S1, [X8]
	375 Move S2, [X8+4]
	376 Move V0, [X8+8]
	377 Move S22, [X31+40]
	378 Move S26, [X31+44]
	379 Move S19, [X31+32]
	380 Move S25, [X31+36]
	381 Move S23, [X31+16]
	382 Move S27, [X31+20]
	383 Multiply S6, S15, S12
	384 Multiply S17, S12, S1
	385 Multiply S3, S19, S15
	386 Multiply S4, S22, S23
	387 Multiply S7, S23, S8
	388 Multiply S5, S25, S27
	389 Multiply S16, S27, S9
	390 Multiply S18, S19, S12
	391 Multiply S19, S19, S1
	392 Multiply S1, S15, S1
	393 Multiply S20, S8, S2
	394 Multiply S21, S22, S8
	395 Multiply S22, S22, S2
	396 Multiply S2, S23, S2
	397 Add S3, S3, S4
	398 Add S4, S6, S7
	399 Multiply S23, S9, S0
	400 Multiply S24, S25, S9
	401 Multiply S25, S25, S0
	402 Multiply S0, S27, S0
	403 Add S7, S17, S20
	404 Add S1, S1, S2
	405 Add S3, S5, S3
	406 Add S4, S16, S4
	407 Add S19, S19, S22
	408 Add S5, S23, S7
	409 Add S0, S0, S1
	410 NotImplemented "Instruction FABS not yet implemented."
	411 NotImplemented "Instruction FABS not yet implemented."
	412 Add S7, S25, S19
	413 NotImplemented "Instruction FABS not yet implemented."
	414 Add S1, S1, S3
	415 NotImplemented "Instruction FABS not yet implemented."
	416 Add S1, S1, S4
	417 Move S6, -0.25
	418 Add S18, S18, S21
	419 Add S1, S5, S1
	420 Move S17, 1
	421 Move X8, -48816128
	422 Add S16, S24, S18
	423 Multiply S1, S1, S6
	424 Move S20, 0.5
	425 Move V2, [X8+720]
	426 NotImplemented "Instruction FABS not yet implemented."
	427 Add S1, S1, S17
	428 NotImplemented "Instruction FABS not yet implemented."
	429 Multiply S3, S7, S20
	430 Add S1, S26, S1
	431 Add S1, S3, S1
	432 Multiply S0, S0, S20
	433 Add S0, S0, S1
	434 Multiply S9, S0, S2
	435 Move V0, V9
	436 Move X20, [X31+160]
	437 Move X19, [X31+168]
	438 Move X22, [X31+144]
	439 Move X21, [X31+152]
	440 Move X30, [X31+128]
	441 Move D9, [X31+112]
	442 Move D8, [X31+120]
	443 Move D11, [X31+96]
	444 Move D10, [X31+104]
	445 Move D13, [X31+80]
	446 Move D12, [X31+88]
	447 Move D15, [X31+64]
	448 Move D14, [X31+72]
	449 Add X31, X31, 176
	450 Return V0
	451 Call 0x1C17F28
	452 Call 0x1C17F20

