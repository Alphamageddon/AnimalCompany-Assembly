Type: UnityEngine.ProBuilder.MeshOperations.UVEditing

Method: System.Boolean AutoStitch(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face f1, UnityEngine.ProBuilder.Face f2, System.Int32 channel)

Disassembly:
	0x0397E364 ADD X10, X10, 0x10
	0x0397E368 B.NE 0x397E354
	0x0397E36C MOV X0, X21
	0x0397E370 MOV W2, W31
	0x0397E374 BL 0x1C5C788
	0x0397E378 B 0x397E388
	0x0397E37C LDRSW X9, [X10]
	0x0397E380 ADD X8, X8, X9, 0x4, LSL
	0x0397E384 ADD X0, X8, 0x138
	0x0397E388 LDP X8, X1, [X0]
	0x0397E38C ADRP X24, 0x775000
	0x0397E390 LDR X24, [X24 + 0xE00]
	0x0397E394 MOV X0, X21
	0x0397E398 BLR X8
	0x0397E39C MOV X21, X0
	0x0397E3A0 CBZ X0, 0x397E54C
	0x0397E3A4 ADRP X25, 0x775000
	0x0397E3A8 ADRP X26, 0x79D000
	0x0397E3AC ADRP X27, 0x77F000
	0x0397E3B0 ADRP X28, 0x79F000
	0x0397E3B4 LDR X25, [X25 + 0xE18]
	0x0397E3B8 LDR X26, [X26 + 0x7C0]
	0x0397E3BC LDR X27, [X27 + 0x870]
	0x0397E3C0 LDR X28, [X28 + 0x8B0]
	0x0397E3C4 LDR X8, [X21]
	0x0397E3C8 LDR X1, [X25]
	0x0397E3CC LDRH W9, [X8 + 0x12E]
	0x0397E3D0 CBZ X9, 0x397E3F4
	0x0397E3D4 LDR X10, [X8 + 0xB0]
	0x0397E3D8 ADD X10, X10, 0x8
	0x0397E3DC LDUR X11, [X10 - 0x8]
	0x0397E3E0 CMP X11, X1
	0x0397E3E4 B.EQ 0x397E404
	0x0397E3E8 SUBS X9, X9, 0x1
	0x0397E3EC ADD X10, X10, 0x10
	0x0397E3F0 B.NE 0x397E3DC
	0x0397E3F4 MOV X0, X21
	0x0397E3F8 MOV W2, W31
	0x0397E3FC BL 0x1C5C788
	0x0397E400 B 0x397E410
	0x0397E404 LDRSW X9, [X10]
	0x0397E408 ADD X8, X8, X9, 0x4, LSL
	0x0397E40C ADD X0, X8, 0x138
	0x0397E410 LDP X8, X1, [X0]
	0x0397E414 MOV X0, X21
	0x0397E418 BLR X8
	0x0397E41C TBZ X0, 0x0, 0x397E4B4
	0x0397E420 LDR X8, [X21]
	0x0397E424 LDR X1, [X26]
	0x0397E428 LDRH W9, [X8 + 0x12E]
	0x0397E42C CBZ X9, 0x397E450
	0x0397E430 LDR X10, [X8 + 0xB0]
	0x0397E434 ADD X10, X10, 0x8
	0x0397E438 LDUR X11, [X10 - 0x8]
	0x0397E43C CMP X11, X1
	0x0397E440 B.EQ 0x397E460
	0x0397E444 SUBS X9, X9, 0x1
	0x0397E448 ADD X10, X10, 0x10
	0x0397E44C B.NE 0x397E438
	0x0397E450 MOV X0, X21
	0x0397E454 MOV W2, W31
	0x0397E458 BL 0x1C5C788
	0x0397E45C B 0x397E46C
	0x0397E460 LDRSW X9, [X10]
	0x0397E464 ADD X8, X8, X9, 0x4, LSL
	0x0397E468 ADD X0, X8, 0x138
	0x0397E46C LDP X8, X1, [X0]
	0x0397E470 MOV X0, X21
	0x0397E474 BLR X8
	0x0397E478 LDR X3, [X27]
	0x0397E47C MOV W23, W0
	0x0397E480 ADD X2, X31, 0xC
	0x0397E484 MOV X0, X20
	0x0397E488 MOV W1, W23
	0x0397E48C BL 0x2A0BC68
	0x0397E490 TBZ X0, 0x0, 0x397E3C4
	0x0397E494 LDR X3, [X28]
	0x0397E498 ADD W29, W22, 0x1
	0x0397E49C MOV X0, X20
	0x0397E4A0 MOV W1, W23
	0x0397E4A4 MOV W2, W22
	0x0397E4A8 BL 0x2A0A330
	0x0397E4AC MOV W22, W29
	0x0397E4B0 B 0x397E3C4
	0x0397E4B4 MOV X22, X31
	0x0397E4B8 CBZ X21, 0x397E514
	0x0397E4BC LDR X8, [X21]
	0x0397E4C0 LDR X1, [X24]
	0x0397E4C4 LDRH W9, [X8 + 0x12E]
	0x0397E4C8 CBZ X9, 0x397E4EC
	0x0397E4CC LDR X10, [X8 + 0xB0]
	0x0397E4D0 ADD X10, X10, 0x8
	0x0397E4D4 LDUR X11, [X10 - 0x8]
	0x0397E4D8 CMP X11, X1
	0x0397E4DC B.EQ 0x397E4FC
	0x0397E4E0 SUBS X9, X9, 0x1
	0x0397E4E4 ADD X10, X10, 0x10
	0x0397E4E8 B.NE 0x397E4D4
	0x0397E4EC MOV X0, X21
	0x0397E4F0 MOV W2, W31
	0x0397E4F4 BL 0x1C5C788
	0x0397E4F8 B 0x397E508
	0x0397E4FC LDRSW X9, [X10]
	0x0397E500 ADD X8, X8, X9, 0x4, LSL
	0x0397E504 ADD X0, X8, 0x138
	0x0397E508 LDP X8, X1, [X0]
	0x0397E50C MOV X0, X21
	0x0397E510 BLR X8
	0x0397E514 CBNZ X22, 0x397E550
	0x0397E518 MOV X0, X19
	0x0397E51C MOV X1, X20
	0x0397E520 MOV X2, X31
	0x0397E524 BL 0x391634C
	0x0397E528 LDP X20, X19, [X31 + 0x60]
	0x0397E52C LDP X22, X21, [X31 + 0x50]
	0x0397E530 LDP X24, X23, [X31 + 0x40]
	0x0397E534 LDP X26, X25, [X31 + 0x30]
	0x0397E538 LDP X28, X27, [X31 + 0x20]
	0x0397E53C LDP X29, X30, [X31 + 0x10]
	0x0397E540 ADD X31, X31, 0x70
	0x0397E544 RET
	0x0397E548 BL 0x1C16F20
	0x0397E54C BL 0x1C16F20
	0x0397E550 MOV X0, X22
	0x0397E554 BL 0x1C16F18
	0x0397E558 B 0x397E568
	0x0397E55C B 0x397E568
	0x0397E560 B 0x397E568
	0x0397E564 B 0x397E568
	0x0397E568 CMP W1, 0x1
	0x0397E56C B.NE 0x397E580
	0x0397E570 BL 0x3EB1AD0
	0x0397E574 LDR X22, [X0]
	0x0397E578 BL 0x3EB1AE0
	0x0397E57C B 0x397E4B8
	0x0397E580 MOV X19, X0
	0x0397E584 MOV X22, X31
	0x0397E588 B 0x397E590
	0x0397E58C MOV X19, X0
	0x0397E590 CBZ X21, 0x397E5EC
	0x0397E594 LDR X8, [X21]
	0x0397E598 LDR X1, [X24]
	0x0397E59C LDRH W9, [X8 + 0x12E]
	0x0397E5A0 CBZ X9, 0x397E5C4
	0x0397E5A4 LDR X10, [X8 + 0xB0]
	0x0397E5A8 ADD X10, X10, 0x8
	0x0397E5AC LDUR X11, [X10 - 0x8]
	0x0397E5B0 CMP X11, X1
	0x0397E5B4 B.EQ 0x397E5D4
	0x0397E5B8 SUBS X9, X9, 0x1
	0x0397E5BC ADD X10, X10, 0x10
	0x0397E5C0 B.NE 0x397E5AC
	0x0397E5C4 MOV X0, X21
	0x0397E5C8 MOV W2, W31
	0x0397E5CC BL 0x1C5C788
	0x0397E5D0 B 0x397E5E0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA64000
	011 Move X24, 0x7D3000
	012 Move W8, [X21+2612]
	013 Move X24, [X24+800]
	014 Move W20, W3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x7D2000
	023 Move X0, [X0+1464]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D1000
	026 Move X0, [X0+1008]
	027 Call 0x1C17CF4
	028 Move X0, 0x7D2000
	029 Move X0, [X0+112]
	030 Call 0x1C17CF4
	031 Move X0, 0x7D3000
	032 Move X0, [X0+808]
	033 Call 0x1C17CF4
	034 Move X0, 0x7D3000
	035 Move X0, [X0+800]
	036 Call 0x1C17CF4
	037 Move X0, 0x7D1000
	038 Move X0, [X0+1424]
	039 Call 0x1C17CF4
	040 Move X0, 0x7D1000
	041 Move X0, [X0+2824]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+2612], W8
	045 Move X0, [X24]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X21, X0
	049 Call Object..ctor, X0
	050 Compare X21, 0
	051 JumpIfEqual {188}
	052 Move X24, 0x7D1000
	053 Move X24, [X24+1008]
	054 Move [X21+16], X23
	055 Move [X21+24], X22
	056 Move W1, 2
	057 Move X0, [X24]
	058 Call 0x1C17D6C
	059 Compare X0, 0
	060 JumpIfEqual {188}
	061 Move W8, [X0+24]
	062 Move X22, X0
	063 Compare W8, 0
	064 JumpIfEqual {189}
	065 Move X9, [X21+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X22+32], X9
	068 Move X8, [X21+24]
	069 Move X9, 0x7D1000
	070 Move X9, [X9+2824]
	071 Move X26, 0x7D2000
	072 Move [X22+40], X8
	073 Move X23, 0x7D3000
	074 Move X0, [X9]
	075 Move X25, 0x7D2000
	076 Move W8, [X0+224]
	077 Move X26, [X26+112]
	078 Move X23, [X23+808]
	079 Move X25, [X25+1464]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X1, X22
	085 Move W2, W31
	086 Move X3, X31
	087 Call WingedEdge.GetWingedEdges, X0, X1, X2
	088 Move X8, [X26]
	089 Move X22, X0
	090 Move X0, X8
	091 Call 0x1C17F10
	092 Move X2, [X23]
	093 Move X1, X21
	094 Move X3, X31
	095 Move X23, X0
	096 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	097 Move X2, [X25]
	098 Move X0, X22
	099 Move X1, X23
	100 Call 0x21C670C, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {178}
	103 Move X8, [X21+16]
	104 Compare X8, 0
	105 JumpIfEqual {188}
	106 Move W9, [X8+76]
	107 Move X1, [X21+24]
	108 Move X22, X0
	109 Compare W9, 0
	110 JumpIfEqual {119}
	111 Compare X1, 0
	112 JumpIfEqual {188}
	113 Move W9, 1
	114 Move TEMP, 0
	115 Not TEMP
	116 Move W10, TEMP
	117 Move [X1+76], W9
	118 Move [X8+84], W10
	119 Move TEMP, 0
	120 Not TEMP
	121 Move W9, TEMP
	122 Move [X8+84], W9
	123 Compare X1, 0
	124 JumpIfEqual {188}
	125 Move TEMP, 0
	126 Not TEMP
	127 Move W8, TEMP
	128 Move S0, W31
	129 Move S1, W31
	130 Move S2, W31
	131 Move X0, X19
	132 Move X2, X31
	133 Move [X1+84], W8
	134 Call Projection.PlanarProject, X0, X1, X2
	135 Move X8, [X22+56]
	136 Compare X8, 0
	137 JumpIfEqual {188}
	138 Move X1, [X21+24]
	139 Move X2, [X22+16]
	140 Move X3, [X8+16]
	141 Move X0, X19
	142 Move W4, W20
	143 Call UVEditing.AlignEdges, X0, X1, X2, X3, X4
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {177}
	148 Move X8, [X21+24]
	149 Compare X8, 0
	150 JumpIfEqual {188}
	151 Move W8, [X8+76]
	152 Compare W8, 0
	153 JumpIfNotEqual {176}
	154 Move X0, [X24]
	155 Move W1, 1
	156 Call 0x1C17D6C
	157 Compare X0, 0
	158 JumpIfEqual {188}
	159 Move W8, [X0+24]
	160 Move X20, X0
	161 Compare W8, 0
	162 JumpIfEqual {189}
	163 Move X8, [X21+24]
	164 Move [X20+32], X8
	165 Move X8, 0x7D1000
	166 Move X8, [X8+1424]
	167 Move X0, [X8]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X0, X19
	173 Move X1, X20
	174 Move X2, X31
	175 Call UvUnwrapping.SetAutoAndAlignUnwrapParamsToUVs, X0, X1
	176 Move W0, 1
	177 Move W0, W31
	178 Move X20, [X31+64]
	179 Move X19, [X31+72]
	180 Move X22, [X31+48]
	181 Move X21, [X31+56]
	182 Move X24, [X31+32]
	183 Move X23, [X31+40]
	184 Move X26, [X31+16]
	185 Move X25, [X31+24]
	186 Move X30, [X31+80]
	187 Return X0
	188 Call 0x1C17F20
	189 Call 0x1C17F28

Method: System.Boolean AlignEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face faceToMove, UnityEngine.ProBuilder.Edge edgeToAlignTo, UnityEngine.ProBuilder.Edge edgeToBeAligned, System.Int32 channel)

Disassembly:
	0x0397E5DC ADD X0, X8, 0x138
	0x0397E5E0 LDP X8, X1, [X0]
	0x0397E5E4 MOV X0, X21
	0x0397E5E8 BLR X8
	0x0397E5EC CBNZ X22, 0x397E5F8
	0x0397E5F0 MOV X0, X19
	0x0397E5F4 BL 0x1D2C690
	0x0397E5F8 MOV X0, X22
	0x0397E5FC BL 0x1C16F18
	0x0397E600 BL 0x1990590
	0x0397E604 STP X30, X27, [X31 - 0x50]!
	0x0397E608 STP X26, X25, [X31 + 0x10]
	0x0397E60C STP X24, X23, [X31 + 0x20]
	0x0397E610 STP X22, X21, [X31 + 0x30]
	0x0397E614 STP X20, X19, [X31 + 0x40]
	0x0397E618 ADRP X23, 0xA63000
	0x0397E61C LDRB W8, [X23 + 0xA37]
	0x0397E620 MOV W22, W3
	0x0397E624 MOV W21, W2
	0x0397E628 MOV X20, X1
	0x0397E62C MOV X19, X0
	0x0397E630 TBNZ X8, 0x0, 0x397E66C
	0x0397E634 ADRP X0, 0x7CF000
	0x0397E638 LDR X0, [X0 + 0xFF0]
	0x0397E63C BL 0x1C16CF4
	0x0397E640 ADRP X0, 0x7D0000
	0x0397E644 LDR X0, [X0 + 0xF50]
	0x0397E648 BL 0x1C16CF4
	0x0397E64C ADRP X0, 0x7D0000
	0x0397E650 LDR X0, [X0 + 0x8]
	0x0397E654 BL 0x1C16CF4
	0x0397E658 ADRP X0, 0x775000
	0x0397E65C LDR X0, [X0 + 0x598]
	0x0397E660 BL 0x1C16CF4
	0x0397E664 MOVZ W8, 0x1
	0x0397E668 STRB W8, [X23 + 0xA37]
	0x0397E66C SUB W8, W21, 0x2
	0x0397E670 CMP W8, 0x2
	0x0397E674 B.CC 0x397E700
	0x0397E678 CMP W21, 0x1
	0x0397E67C B.EQ 0x397E874
	0x0397E680 CBNZ W21, 0x397E8EC
	0x0397E684 CBZ X19, 0x397E904
	0x0397E688 STR X20, [X19 + 0x60]
	0x0397E68C TBZ X22, 0x0, 0x397E8EC
	0x0397E690 MOV X0, X19
	0x0397E694 MOV X1, X31
	0x0397E698 BL 0x3912CAC
	0x0397E69C ADRP X8, 0x775000
	0x0397E6A0 LDR X8, [X8 + 0x598]
	0x0397E6A4 MOV X21, X0
	0x0397E6A8 LDR X8, [X8]
	0x0397E6AC LDR W9, [X8 + 0xE0]
	0x0397E6B0 CBNZ W9, 0x397E6BC
	0x0397E6B4 MOV X0, X8
	0x0397E6B8 BL 0x1C16DFC
	0x0397E6BC MOV X0, X21
	0x0397E6C0 MOV X1, X31
	0x0397E6C4 MOV X2, X31
	0x0397E6C8 BL 0x3C354F8
	0x0397E6CC TBZ X0, 0x0, 0x397E8EC
	0x0397E6D0 MOV X0, X19
	0x0397E6D4 MOV X1, X31
	0x0397E6D8 BL 0x3912CAC
	0x0397E6DC CBZ X0, 0x397E904
	0x0397E6E0 MOV X1, X20
	0x0397E6E4 LDP X20, X19, [X31 + 0x40]
	0x0397E6E8 LDP X22, X21, [X31 + 0x30]
	0x0397E6EC LDP X24, X23, [X31 + 0x20]
	0x0397E6F0 LDP X26, X25, [X31 + 0x10]
	0x0397E6F4 MOV X2, X31
	0x0397E6F8 LDP X30, X27, [X31], #0x50
	0x0397E6FC B 0x3C1810C
	0x0397E700 CBZ X19, 0x397E904
	0x0397E704 MOV X0, X19
	0x0397E708 MOV X1, X31
	0x0397E70C BL 0x39120C0
	0x0397E710 CBZ X20, 0x397E904
	0x0397E714 LDR W8, [X20 + 0x18]
	0x0397E718 MOV W24, W0
	0x0397E71C CMP W0, W8
	0x0397E720 B.NE 0x397E90C
	0x0397E724 ADRP X8, 0x7D0000
	0x0397E728 LDR X8, [X8 + 0x8]
	0x0397E72C LDR X0, [X8]
	0x0397E730 BL 0x1C16F10
	0x0397E734 ADRP X8, 0x7D0000
	0x0397E738 LDR X8, [X8 + 0xF50]
	0x0397E73C MOV W1, W24
	0x0397E740 MOV X23, X0
	0x0397E744 LDR X2, [X8]
	0x0397E748 BL 0x30CE660
	0x0397E74C CMP W24, 0x1
	0x0397E750 B.LT 0x397E7E8
	0x0397E754 ADRP X27, 0x7CF000
	0x0397E758 LDR X27, [X27 + 0xFF0]
	0x0397E75C MOV X25, X31
	0x0397E760 MOV W24, W24
	0x0397E764 ADD X26, X20, 0x24
	0x0397E768 LDR W8, [X20 + 0x18]
	0x0397E76C CMP X25, X8
	0x0397E770 B.CS 0x397E908
	0x0397E774 CBZ X23, 0x397E904
	0x0397E778 LDR W10, [X23 + 0x1C]
	0x0397E77C LDP S0, S1, [X26 - 0x4]
	0x0397E780 LDR X9, [X23 + 0x10]
	0x0397E784 LDR X8, [X27]
	0x0397E788 ADD W10, W10, 0x1
	0x0397E78C STR W10, [X23 + 0x1C]
	0x0397E790 CBZ X9, 0x397E904
	0x0397E794 LDRSW X10, [X23 + 0x18]
	0x0397E798 LDR W11, [X9 + 0x18]
	0x0397E79C CMP W10, W11
	0x0397E7A0 B.CS 0x397E7BC
	0x0397E7A4 ADD W8, W10, 0x1
	0x0397E7A8 ADD X9, X9, X10, 0x4, LSL
	0x0397E7AC STR W8, [X23 + 0x18]
	0x0397E7B0 STP S0, S1, [X9 + 0x20]
	0x0397E7B4 STR X31, [X9 + 0x28]
	0x0397E7B8 B 0x397E7D8
	0x0397E7BC LDR X8, [X8 + 0x20]
	0x0397E7C0 FMOV S2, W31
	0x0397E7C4 FMOV S3, W31
	0x0397E7C8 MOV X0, X23
	0x0397E7CC LDR X8, [X8 + 0xC0]
	0x0397E7D0 LDR X1, [X8 + 0x70]
	0x0397E7D4 BL 0x30CEE24
	0x0397E7D8 ADD X25, X25, 0x1
	0x0397E7DC CMP X24, X25
	0x0397E7E0 ADD X26, X26, 0x8
	0x0397E7E4 B.NE 0x397E768
	0x0397E7E8 MOV X0, X19
	0x0397E7EC MOV W1, W21
	0x0397E7F0 MOV X2, X23
	0x0397E7F4 MOV X3, X31
	0x0397E7F8 BL 0x3917934
	0x0397E7FC TBZ X22, 0x0, 0x397E8EC
	0x0397E800 MOV X0, X19
	0x0397E804 MOV X1, X31
	0x0397E808 BL 0x3912CAC
	0x0397E80C ADRP X8, 0x775000
	0x0397E810 LDR X8, [X8 + 0x598]
	0x0397E814 MOV X20, X0
	0x0397E818 LDR X8, [X8]
	0x0397E81C LDR W9, [X8 + 0xE0]
	0x0397E820 CBNZ W9, 0x397E82C
	0x0397E824 MOV X0, X8
	0x0397E828 BL 0x1C16DFC
	0x0397E82C MOV X0, X20
	0x0397E830 MOV X1, X31
	0x0397E834 MOV X2, X31
	0x0397E838 BL 0x3C354F8
	0x0397E83C TBZ X0, 0x0, 0x397E8EC
	0x0397E840 MOV X0, X19
	0x0397E844 MOV X1, X31
	0x0397E848 BL 0x3912CAC
	0x0397E84C CBZ X0, 0x397E904
	0x0397E850 MOV W1, W21
	0x0397E854 MOV X2, X23
	0x0397E858 LDP X20, X19, [X31 + 0x40]
	0x0397E85C LDP X22, X21, [X31 + 0x30]
	0x0397E860 LDP X24, X23, [X31 + 0x20]
	0x0397E864 LDP X26, X25, [X31 + 0x10]
	0x0397E868 MOV X3, X31
	0x0397E86C LDP X30, X27, [X31], #0x50
	0x0397E870 B 0x3C18A7C
	0x0397E874 TBZ X22, 0x0, 0x397E8EC
	0x0397E878 CBZ X19, 0x397E904
	0x0397E87C MOV X0, X19
	0x0397E880 MOV X1, X31
	0x0397E884 BL 0x3912CAC
	0x0397E888 ADRP X8, 0x775000
	0x0397E88C LDR X8, [X8 + 0x598]
	0x0397E890 MOV X21, X0
	0x0397E894 LDR X8, [X8]
	0x0397E898 LDR W9, [X8 + 0xE0]
	0x0397E89C CBNZ W9, 0x397E8A8
	0x0397E8A0 MOV X0, X8
	0x0397E8A4 BL 0x1C16DFC
	0x0397E8A8 MOV X0, X21
	0x0397E8AC MOV X1, X31
	0x0397E8B0 MOV X2, X31
	0x0397E8B4 BL 0x3C354F8
	0x0397E8B8 TBZ X0, 0x0, 0x397E8EC
	0x0397E8BC MOV X0, X19
	0x0397E8C0 MOV X1, X31
	0x0397E8C4 BL 0x3912CAC
	0x0397E8C8 CBZ X0, 0x397E904
	0x0397E8CC MOV X1, X20
	0x0397E8D0 LDP X20, X19, [X31 + 0x40]
	0x0397E8D4 LDP X22, X21, [X31 + 0x30]
	0x0397E8D8 LDP X24, X23, [X31 + 0x20]
	0x0397E8DC LDP X26, X25, [X31 + 0x10]
	0x0397E8E0 MOV X2, X31
	0x0397E8E4 LDP X30, X27, [X31], #0x50
	0x0397E8E8 B 0x3C181B8
	0x0397E8EC LDP X20, X19, [X31 + 0x40]
	0x0397E8F0 LDP X22, X21, [X31 + 0x30]
	0x0397E8F4 LDP X24, X23, [X31 + 0x20]
	0x0397E8F8 LDP X26, X25, [X31 + 0x10]
	0x0397E8FC LDP X30, X27, [X31], #0x50
	0x0397E900 RET
	0x0397E904 BL 0x1C16F20
	0x0397E908 BL 0x1C16F28
	0x0397E90C ADRP X0, 0x77F000
	0x0397E910 LDR X0, [X0 + 0xF78]
	0x0397E914 BL 0x1C16D08
	0x0397E918 BL 0x1C16F10
	0x0397E91C MOV X19, X0
	0x0397E920 ADRP X0, 0x79E000
	0x0397E924 LDR X0, [X0 + 0x78]
	0x0397E928 BL 0x1C16D08
	0x0397E92C MOV X1, X0
	0x0397E930 MOV X0, X19
	0x0397E934 MOV X2, X31
	0x0397E938 BL 0x3379B6C
	0x0397E93C ADRP X0, 0x7D2000
	0x0397E940 LDR X0, [X0 + 0x340]
	0x0397E944 BL 0x1C16D08
	0x0397E948 MOV X1, X0
	0x0397E94C MOV X0, X19
	0x0397E950 BL 0x1C16DEC
	0x0397E954 SUB X31, X31, 0xA0
	0x0397E958 STP D11, D10, [X31 + 0x20]
	0x0397E95C STP D9, D8, [X31 + 0x30]
	0x0397E960 STP X29, X30, [X31 + 0x40]
	0x0397E964 STP X28, X27, [X31 + 0x50]
	0x0397E968 STP X26, X25, [X31 + 0x60]
	0x0397E96C STP X24, X23, [X31 + 0x70]
	0x0397E970 STP X22, X21, [X31 + 0x80]
	0x0397E974 STP X20, X19, [X31 + 0x90]
	0x0397E978 ADRP X20, 0xA63000
	0x0397E97C LDRB W8, [X20 + 0xA38]
	0x0397E980 MOV V8.16B, V0.16B
	0x0397E984 MOV X19, X1
	0x0397E988 MOV X22, X0
	0x0397E98C TBNZ X8, 0x0, 0x397EA40
	0x0397E990 ADRP X0, 0x77F000
	0x0397E994 LDR X0, [X0 + 0x858]
	0x0397E998 BL 0x1C16CF4
	0x0397E99C ADRP X0, 0x77F000
	0x0397E9A0 LDR X0, [X0 + 0x870]
	0x0397E9A4 BL 0x1C16CF4
	0x0397E9A8 ADRP X0, 0x7D0000
	0x0397E9AC LDR X0, [X0 + 0xD78]
	0x0397E9B0 BL 0x1C16CF4
	0x0397E9B4 ADRP X0, 0x79F000
	0x0397E9B8 LDR X0, [X0 + 0x8B0]
	0x0397E9BC BL 0x1C16CF4
	0x0397E9C0 ADRP X0, 0x7D2000
	0x0397E9C4 LDR X0, [X0 + 0x348]
	0x0397E9C8 BL 0x1C16CF4
	0x0397E9CC ADRP X0, 0x777000
	0x0397E9D0 LDR X0, [X0 + 0x9C8]
	0x0397E9D4 BL 0x1C16CF4
	0x0397E9D8 ADRP X0, 0x7D0000
	0x0397E9DC LDR X0, [X0 + 0xD58]
	0x0397E9E0 BL 0x1C16CF4
	0x0397E9E4 ADRP X0, 0x7D2000
	0x0397E9E8 LDR X0, [X0 + 0x350]
	0x0397E9EC BL 0x1C16CF4
	0x0397E9F0 ADRP X0, 0x7D0000
	0x0397E9F4 LDR X0, [X0 + 0xD60]
	0x0397E9F8 BL 0x1C16CF4
	0x0397E9FC ADRP X0, 0x7D2000
	0x0397EA00 LDR X0, [X0 + 0x358]
	0x0397EA04 BL 0x1C16CF4
	0x0397EA08 ADRP X0, 0x7D2000
	0x0397EA0C LDR X0, [X0 + 0x360]
	0x0397EA10 BL 0x1C16CF4
	0x0397EA14 ADRP X0, 0x7D2000
	0x0397EA18 LDR X0, [X0 + 0x368]
	0x0397EA1C BL 0x1C16CF4
	0x0397EA20 ADRP X0, 0x7D2000
	0x0397EA24 LDR X0, [X0 + 0x338]
	0x0397EA28 BL 0x1C16CF4
	0x0397EA2C ADRP X0, 0x7CF000
	0x0397EA30 LDR X0, [X0 + 0xA88]
	0x0397EA34 BL 0x1C16CF4
	0x0397EA38 MOVZ W8, 0x1
	0x0397EA3C STRB W8, [X20 + 0xA38]
	0x0397EA40 STR W31, [X31 + 0x1C]
	0x0397EA44 CBZ X22, 0x397EED0
	0x0397EA48 LDR X21, [X22 + 0x60]
	0x0397EA4C CBZ X21, 0x397EA68
	0x0397EA50 MOV X0, X22
	0x0397EA54 MOV X1, X31
	0x0397EA58 BL 0x39120C0
	0x0397EA5C LDR W8, [X21 + 0x18]
	0x0397EA60 CMP W0, W8
	0x0397EA64 B.EQ 0x397EA90
	0x0397EA68 ADRP X20, 0x7CF000
	0x0397EA6C LDR X20, [X20 + 0xA88]
	0x0397EA70 MOV X0, X22
	0x0397EA74 MOV X1, X31
	0x0397EA78 BL 0x39120C0
	0x0397EA7C LDR X8, [X20]
	0x0397EA80 MOV W1, W0
	0x0397EA84 MOV X0, X8
	0x0397EA88 BL 0x1C16D6C
	0x0397EA8C MOV X21, X0
	0x0397EA90 MOV X0, X22
	0x0397EA94 MOV X1, X31
	0x0397EA98 STR X22, [X31]
	0x0397EA9C BL 0x39162B4
	0x0397EAA0 CBZ X19, 0x397EED0
	0x0397EAA4 LDR X8, [X19 + 0x18]
	0x0397EAA8 MOV X9, INVALID
	0x0397EAAC MOV X22, X0
	0x0397EAB0 ADD X9, X9, X8, 0x20, LSL
	0x0397EAB4 CMP X9, 0x1
	0x0397EAB8 B.LT 0x397EE94
	0x0397EABC ADRP X29, 0x79F000
	0x0397EAC0 LDR X29, [X29 + 0x8B0]
	0x0397EAC4 MOV X27, X31
	0x0397EAC8 MOVI V9.2S, 0x3F, 0x18
	0x0397EACC MOVZ W23, 0x1
	0x0397EAD0 ADD X11, X27, 0x1
	0x0397EAD4 CMP W11, W8
	0x0397EAD8 B.GE 0x397EE7C
	0x0397EADC ADD X8, X19, X27, 0x2, LSL
	0x0397EAE0 ADD X20, X8, 0x20
	0x0397EAE4 STP X11, X23, [X31 + 0x8]
	0x0397EAE8 ADRP X8, 0x7D2000
	0x0397EAEC LDR X8, [X8 + 0x368]
	0x0397EAF0 LDR X0, [X8]
	0x0397EAF4 BL 0x1C16F10
	0x0397EAF8 MOV X1, X31
	0x0397EAFC MOV X24, X0
	0x0397EB00 BL 0x33BDD8C
	0x0397EB04 LDR W8, [X19 + 0x18]
	0x0397EB08 CMP X27, X8
	0x0397EB0C B.CS 0x397EECC
	0x0397EB10 CBZ X22, 0x397EED0
	0x0397EB14 ADRP X8, 0x77F000
	0x0397EB18 LDR W1, [X20]
	0x0397EB1C LDR X8, [X8 + 0x870]
	0x0397EB20 ADD X2, X31, 0x1C
	0x0397EB24 MOV X0, X22
	0x0397EB28 LDR X3, [X8]
	0x0397EB2C BL 0x2A0BC68
	0x0397EB30 TBNZ X0, 0x0, 0x397EB78
	0x0397EB34 LDR W8, [X19 + 0x18]
	0x0397EB38 CMP X27, X8
	0x0397EB3C B.CS 0x397EECC
	0x0397EB40 ADRP X8, 0x7D0000
	0x0397EB44 LDR W25, [X20]
	0x0397EB48 LDR X8, [X8 + 0xD78]
	0x0397EB4C MOV X0, X22
	0x0397EB50 LDR X1, [X8]
	0x0397EB54 BL 0x2A0A118
	0x0397EB58 ADRP X8, 0x77F000
	0x0397EB5C LDR X8, [X8 + 0x858]
	0x0397EB60 MOV W2, W0
	0x0397EB64 STR W0, [X31 + 0x1C]
	0x0397EB68 MOV X0, X22
	0x0397EB6C LDR X3, [X8]
	0x0397EB70 MOV W1, W25
	0x0397EB74 BL 0x2A0A344
	0x0397EB78 LDR W8, [X19 + 0x18]
	0x0397EB7C CMP W23, W8
	0x0397EB80 B.CS 0x397EECC
	0x0397EB84 CBZ X24, 0x397EED0
	0x0397EB88 ADD X8, X19, X23, 0x2, LSL
	0x0397EB8C ADD X28, X8, 0x20
	0x0397EB90 ADRP X8, 0x77F000
	0x0397EB94 LDR W1, [X28]
	0x0397EB98 LDR X8, [X8 + 0x870]
	0x0397EB9C ADD X25, X24, 0x10
	0x0397EBA0 MOV X0, X22
	0x0397EBA4 MOV X2, X25
	0x0397EBA8 LDR X3, [X8]
	0x0397EBAC BL 0x2A0BC68
	0x0397EBB0 TBNZ X0, 0x0, 0x397EBF8
	0x0397EBB4 LDR W8, [X19 + 0x18]
	0x0397EBB8 CMP W23, W8
	0x0397EBBC B.CS 0x397EECC
	0x0397EBC0 ADRP X8, 0x7D0000
	0x0397EBC4 LDR W26, [X28]
	0x0397EBC8 LDR X8, [X8 + 0xD78]
	0x0397EBCC MOV X0, X22
	0x0397EBD0 LDR X1, [X8]
	0x0397EBD4 BL 0x2A0A118
	0x0397EBD8 STR W0, [X25]
	0x0397EBDC ADRP X8, 0x77F000
	0x0397EBE0 LDR X8, [X8 + 0x858]
	0x0397EBE4 MOV W2, W0
	0x0397EBE8 MOV X0, X22
	0x0397EBEC MOV W1, W26
	0x0397EBF0 LDR X3, [X8]
	0x0397EBF4 BL 0x2A0A344
	0x0397EBF8 LDR W8, [X31 + 0x1C]
	0x0397EBFC LDR W9, [X25]
	0x0397EC00 CMP W8, W9
	0x0397EC04 B.EQ 0x397EE68
	0x0397EC08 LDR X9, [X19 + 0x18]
	0x0397EC0C CMP X27, W9, UXTW
	0x0397EC10 B.CS 0x397EECC
	0x0397EC14 CBZ X21, 0x397EED0
	0x0397EC18 LDRSW X8, [X20]
	0x0397EC1C LDR W10, [X21 + 0x18]
	0x0397EC20 CMP W8, W10
	0x0397EC24 B.CS 0x397EECC
	0x0397EC28 CMP W23, W9
	0x0397EC2C B.CS 0x397EECC
	0x0397EC30 LDRSW X9, [X28]
	0x0397EC34 CMP W9, W10
	0x0397EC38 B.CS 0x397EECC
	0x0397EC3C ADD X8, X21, X8, 0x3, LSL
	0x0397EC40 ADD X9, X21, X9, 0x3, LSL
	0x0397EC44 ADRP X10, 0xA63000
	0x0397EC48 LDRB W10, [X10 + 0x810]
	0x0397EC4C LDR V10, [X8 + 0x20]
	0x0397EC50 LDR V11, [X9 + 0x20]
	0x0397EC54 CBNZ W10, 0x397EC70
	0x0397EC58 ADRP X0, 0x775000
	0x0397EC5C LDR X0, [X0 + 0x5A8]
	0x0397EC60 BL 0x1C16CF4
	0x0397EC64 MOVZ W8, 0x1
	0x0397EC68 ADRP X9, 0xA63000
	0x0397EC6C STRB W8, [X9 + 0x810]
	0x0397EC70 ADRP X8, 0x775000
	0x0397EC74 LDR X8, [X8 + 0x5A8]
	0x0397EC78 LDR X0, [X8]
	0x0397EC7C LDR W8, [X0 + 0xE0]
	0x0397EC80 CBNZ W8, 0x397EC88
	0x0397EC84 BL 0x1C16DFC
	0x0397EC88 FSUB V0.2S, V10.2S, V11.2S
	0x00000000 INVALID
	0x0397EC90 FADDP S0, V0.2S
	0x0397EC94 FSQRT S0, S0
	0x0397EC98 FCMP S0, S8
	0x0397EC9C B.PL 0x397EE68
	0x0397ECA0 LDR X9, [X19 + 0x18]
	0x0397ECA4 CMP X27, W9, UXTW
	0x0397ECA8 B.CS 0x397EECC
	0x0397ECAC LDRSW X8, [X20]
	0x0397ECB0 LDR W10, [X21 + 0x18]
	0x0397ECB4 CMP W8, W10
	0x0397ECB8 B.CS 0x397EECC
	0x0397ECBC ADD X8, X21, X8, 0x3, LSL
	0x0397ECC0 LDR V0, [X8 + 0x20]!
	0x0397ECC4 CMP W23, W9
	0x0397ECC8 B.CS 0x397EECC
	0x0397ECCC LDRSW X9, [X28]
	0x0397ECD0 CMP W9, W10
	0x0397ECD4 B.CS 0x397EECC
	0x0397ECD8 ADD X9, X21, X9, 0x3, LSL
	0x0397ECDC LDR V1, [X9 + 0x20]
	0x0397ECE0 FADD V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x0397ECE8 STR D0, [X8]
	0x0397ECEC LDR W8, [X19 + 0x18]
	0x0397ECF0 CMP W23, W8
	0x0397ECF4 B.CS 0x397EECC
	0x0397ECF8 LDRSW X8, [X28]
	0x0397ECFC LDR W9, [X21 + 0x18]
	0x0397ED00 CMP W8, W9
	0x0397ED04 B.CS 0x397EECC
	0x0397ED08 ADD X8, X21, X8, 0x3, LSL
	0x0397ED0C STR D0, [X8 + 0x20]
	0x0397ED10 ADRP X8, 0x7D0000
	0x0397ED14 LDR X8, [X8 + 0xD60]
	0x0397ED18 LDR X0, [X8]
	0x0397ED1C BL 0x1C16F10
	0x0397ED20 ADRP X8, 0x7D2000
	0x0397ED24 LDR X8, [X8 + 0x360]
	0x0397ED28 MOV X1, X24
	0x0397ED2C MOV X3, X31
	0x0397ED30 MOV X25, X0
	0x0397ED34 LDR X2, [X8]
	0x0397ED38 BL 0x2D29AF0
	0x0397ED3C ADRP X8, 0x7D0000
	0x0397ED40 LDR X8, [X8 + 0xD58]
	0x0397ED44 MOV X0, X22
	0x0397ED48 MOV X1, X25
	0x0397ED4C LDR X2, [X8]
	0x0397ED50 BL 0x21D82A0
	0x0397ED54 ADRP X8, 0x7D2000
	0x0397ED58 LDR X8, [X8 + 0x338]
	0x0397ED5C MOV X24, X0
	0x0397ED60 LDR X8, [X8]
	0x0397ED64 LDR W9, [X8 + 0xE0]
	0x0397ED68 CBNZ W9, 0x397ED80
	0x0397ED6C MOV X0, X8
	0x0397ED70 BL 0x1C16DFC
	0x0397ED74 ADRP X8, 0x7D2000
	0x0397ED78 LDR X8, [X8 + 0x338]
	0x0397ED7C LDR X8, [X8]
	0x0397ED80 LDR X9, [X8 + 0xB8]
	0x0397ED84 LDR X25, [X9 + 0x10]
	0x0397ED88 CBNZ X25, 0x397EDF4
	0x0397ED8C LDR W9, [X8 + 0xE0]
	0x0397ED90 CBZ W9, 0x397EDA0
	0x0397ED94 ADRP X28, 0x7D2000
	0x0397ED98 LDR X28, [X28 + 0x338]
	0x0397ED9C B 0x397EDB4
	0x0397EDA0 MOV X0, X8
	0x0397EDA4 BL 0x1C16DFC
	0x0397EDA8 ADRP X28, 0x7D2000
	0x0397EDAC LDR X28, [X28 + 0x338]
	0x0397EDB0 LDR X8, [X28]
	0x0397EDB4 LDR X8, [X8 + 0xB8]
	0x0397EDB8 LDR X26, [X8]
	0x0397EDBC ADRP X8, 0x7D2000
	0x0397EDC0 LDR X8, [X8 + 0x350]
	0x0397EDC4 LDR X0, [X8]
	0x0397EDC8 BL 0x1C16F10
	0x0397EDCC ADRP X8, 0x7D2000
	0x0397EDD0 LDR X8, [X8 + 0x358]
	0x0397EDD4 MOV X1, X26
	0x0397EDD8 MOV X3, X31
	0x0397EDDC MOV X25, X0
	0x0397EDE0 LDR X2, [X8]
	0x0397EDE4 BL 0x2D29B90
	0x0397EDE8 LDR X8, [X28]
	0x0397EDEC LDR X8, [X8 + 0xB8]
	0x0397EDF0 STR X25, [X8 + 0x10]
	0x0397EDF4 ADRP X8, 0x7D2000
	0x0397EDF8 LDR X8, [X8 + 0x348]
	0x0397EDFC MOV X0, X24
	0x0397EE00 MOV X1, X25
	0x0397EE04 LDR X2, [X8]
	0x0397EE08 BL 0x21CAA10
	0x0397EE0C ADRP X8, 0x777000
	0x0397EE10 LDR X8, [X8 + 0x9C8]
	0x0397EE14 LDR X1, [X8]
	0x0397EE18 BL 0x21D54D4
	0x0397EE1C CBZ X0, 0x397EED0
	0x0397EE20 LDR X8, [X0 + 0x18]
	0x0397EE24 MOV X24, X0
	0x0397EE28 CMP W8, 0x1
	0x0397EE2C B.LT 0x397EE68
	0x0397EE30 MOV X25, X31
	0x0397EE34 AND X8, X8, 0x0
	0x0397EE38 ADD X26, X24, 0x20
	0x0397EE3C CMP X25, W8, UXTW
	0x0397EE40 B.CS 0x397EECC
	0x0397EE44 LDR W1, [X26, X25, LSL #2]
	0x0397EE48 LDR W2, [X31 + 0x1C]
	0x0397EE4C LDR X3, [X29]
	0x0397EE50 MOV X0, X22
	0x0397EE54 BL 0x2A0A330
	0x0397EE58 LDR W8, [X24 + 0x18]
	0x0397EE5C ADD X25, X25, 0x1
	0x0397EE60 CMP X25, W8, SXTW
	0x0397EE64 B.LT 0x397EE3C
	0x0397EE68 LDR X8, [X19 + 0x18]
	0x0397EE6C ADD X23, X23, 0x1
	0x0397EE70 CMP W23, W8
	0x0397EE74 B.LT 0x397EAE8
	0x0397EE78 LDP X11, X23, [X31 + 0x8]
	0x0397EE7C ADD W9, W23, 0x1
	0x0397EE80 SUB W10, W8, 0x1
	0x0397EE84 CMP X11, W10, SXTW
	0x0397EE88 SXTW X23, W9
	0x0397EE8C MOV X27, X11
	0x0397EE90 B.LT 0x397EAD0
	0x0397EE94 LDR X0, [X31]
	0x0397EE98 MOV X1, X22
	0x0397EE9C MOV X2, X31
	0x0397EEA0 BL 0x391634C
	0x0397EEA4 LDP X20, X19, [X31 + 0x90]
	0x0397EEA8 LDP X22, X21, [X31 + 0x80]
	0x0397EEAC LDP X24, X23, [X31 + 0x70]
	0x0397EEB0 LDP X26, X25, [X31 + 0x60]
	0x0397EEB4 LDP X28, X27, [X31 + 0x50]
	0x0397EEB8 LDP X29, X30, [X31 + 0x40]
	0x0397EEBC LDP D9, D8, [X31 + 0x30]
	0x0397EEC0 LDP D11, D10, [X31 + 0x20]
	0x0397EEC4 ADD X31, X31, 0xA0
	0x0397EEC8 RET
	0x0397EECC BL 0x1C16F28
	0x0397EED0 BL 0x1C16F20
	0x0397EED4 MOV X1, X31
	0x0397EED8 B 0x33BDD8C
	0x0397EEDC STP X30, X21, [X31 - 0x20]!
	0x0397EEE0 STP X20, X19, [X31 + 0x10]
	0x0397EEE4 ADRP X21, 0xA63000
	0x0397EEE8 LDRB W8, [X21 + 0xA39]
	0x0397EEEC MOV X19, X1
	0x0397EEF0 MOV X20, X0
	0x0397EEF4 TBNZ X8, 0x0, 0x397EF0C
	0x0397EEF8 ADRP X0, 0x7D2000
	0x0397EEFC LDR X0, [X0 + 0x370]
	0x0397EF00 BL 0x1C16CF4
	0x0397EF04 MOVZ W8, 0x1
	0x0397EF08 STRB W8, [X21 + 0xA39]
	0x0397EF0C CBZ X20, 0x397EFA0
	0x0397EF10 ADRP X8, 0x7D2000
	0x0397EF14 LDR X8, [X8 + 0x370]
	0x0397EF18 LDR X21, [X20 + 0x60]
	0x0397EF1C MOV X1, X19
	0x0397EF20 LDR X2, [X8]
	0x0397EF24 MOV X0, X21
	0x0397EF28 BL 0x2181260
	0x0397EF2C MOV X1, X31
	0x0397EF30 MOV X2, X31
	0x0397EF34 BL 0x390A418
	0x0397EF38 CBZ X19, 0x397EFA0
	0x0397EF3C LDR W9, [X19 + 0x18]
	0x0397EF40 CMP W9, 0x1
	0x0397EF44 B.LT 0x397EF84
	0x0397EF48 MOV W8, W31
	0x0397EF4C CMP W8, W9
	0x0397EF50 B.CS 0x397EF9C
	0x0397EF54 CBZ X21, 0x397EFA0
	0x0397EF58 ADD X9, X19, W8, 0x2, SXTW
	0x0397EF5C LDRSW X9, [X9 + 0x20]
	0x0397EF60 LDR W10, [X21 + 0x18]
	0x0397EF64 CMP W9, W10
	0x0397EF68 B.CS 0x397EF9C
	0x0397EF6C ADD X9, X21, X9, 0x3, LSL
	0x0397EF70 STP S0, S1, [X9 + 0x20]
	0x0397EF74 LDR W9, [X19 + 0x18]
	0x0397EF78 ADD W8, W8, 0x1
	0x0397EF7C CMP W8, W9
	0x0397EF80 B.LT 0x397EF4C
	0x0397EF84 MOV X0, X20
	0x0397EF88 MOV X1, X19
	0x0397EF8C LDP X20, X19, [X31 + 0x10]
	0x0397EF90 MOV X2, X31
	0x0397EF94 LDP X30, X21, [X31], #0x20
	0x0397EF98 B 0x391CF7C
	0x0397EF9C BL 0x1C16F28
	0x0397EFA0 BL 0x1C16F20
	0x0397EFA4 SUB X31, X31, 0x70
	0x0397EFA8 STP X29, X30, [X31 + 0x10]
	0x0397EFAC STP X28, X27, [X31 + 0x20]
	0x0397EFB0 STP X26, X25, [X31 + 0x30]
	0x0397EFB4 STP X24, X23, [X31 + 0x40]
	0x0397EFB8 STP X22, X21, [X31 + 0x50]
	0x0397EFBC STP X20, X19, [X31 + 0x60]
	0x0397EFC0 ADRP X19, 0xA63000
	0x0397EFC4 LDRB W8, [X19 + 0xA3B]
	0x0397EFC8 MOV X21, X1
	0x0397EFCC MOV X23, X0
	0x0397EFD0 TBNZ X8, 0x0, 0x397F030
	0x0397EFD4 ADRP X0, 0x77F000
	0x0397EFD8 LDR X0, [X0 + 0x870]
	0x0397EFDC BL 0x1C16CF4
	0x0397EFE0 ADRP X0, 0x7D0000
	0x0397EFE4 LDR X0, [X0 + 0xD78]
	0x0397EFE8 BL 0x1C16CF4
	0x0397EFEC ADRP X0, 0x79F000
	0x0397EFF0 LDR X0, [X0 + 0x8B0]
	0x0397EFF4 BL 0x1C16CF4
	0x0397EFF8 ADRP X0, 0x775000
	0x0397EFFC LDR X0, [X0 + 0xE00]
	0x0397F000 BL 0x1C16CF4
	0x0397F004 ADRP X0, 0x7CE000
	0x0397F008 LDR X0, [X0 + 0xDB0]
	0x0397F00C BL 0x1C16CF4
	0x0397F010 ADRP X0, 0x7CE000
	0x0397F014 LDR X0, [X0 + 0xDB8]
	0x0397F018 BL 0x1C16CF4
	0x0397F01C ADRP X0, 0x774000
	0x0397F020 LDR X0, [X0 + 0xE18]
	0x0397F024 BL 0x1C16CF4
	0x0397F028 MOVZ W8, 0x1
	0x0397F02C STRB W8, [X19 + 0xA3B]
	0x0397F030 STR W31, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X19, 0xA64000
	023 Move W8, [X19+2613]
	024 Move W22, W4
	025 Move X28, X3
	026 Move X27, X2
	027 Move X24, X1
	028 Move X23, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x777000
	034 Move X0, [X0+3672]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+2613], W8
	038 Move X0, X23
	039 Move W1, W22
	040 Call UVEditing.GetUVs, X0, X1
	041 Compare X23, 0
	042 JumpIfEqual {703}
	043 Move X20, 0x777000
	044 Move X20, [X20+3672]
	045 Move X21, X0
	046 Move X19, [X23+48]
	047 Move W1, 2
	048 Move X0, [X20]
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {703}
	052 Move W8, [X0+24]
	053 Move X25, X0
	054 Compare W8, 0
	055 JumpIfEqual {702}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X25+32], W27
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W8, TEMP
	061 Move [X25+36], W8
	062 Move X0, [X20]
	063 Move W1, 2
	064 Call 0x1C17D6C
	065 Compare X0, 0
	066 JumpIfEqual {703}
	067 Move W8, [X0+24]
	068 Move X20, X0
	069 Compare W8, 0
	070 JumpIfEqual {702}
	071 Move X9, X27
	072 ShiftRight X9, 32
	073 And X9, X9, 0x7FFFFFFF
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X20+32], W9
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W8, TEMP
	079 Move X0, X23
	080 Move W1, W27
	081 Move X2, X31
	082 Move [X20+36], W8
	083 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	084 Move W26, W0
	085 Move TEMP, X0
	086 And TEMP, TEMP, -2147483648
	087 Compare TEMP, -2147483648
	088 JumpIfEqual {676}
	089 Compare X19, 0
	090 JumpIfEqual {703}
	091 Move W8, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X19, W26
	094 Move X0, [X8+32]
	095 Compare X0, 0
	096 JumpIfEqual {703}
	097 Move W1, W28
	098 Move X2, X31
	099 Move X19, X28
	100 ShiftRight X19, 32
	101 And X19, X19, 0x7FFFFFFF
	102 Call SharedVertex.Contains, X0, X1
	103 Move W8, [X25+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 Invalid "Jump target not found in method."
	109 Move [X25+36], W28
	110 Move W8, [X20+24]
	111 Move [X25+36], W19
	112 Move W8, [X20+24]
	113 Move W19, W28
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X20+36], W19
	116 Compare X21, 0
	117 JumpIfEqual {703}
	118 Move W8, [X21+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, W27
	121 Add X29, X21, X9
	122 Add X29, X29, 32
	123 Move V8, [X29]
	124 NotImplemented "Instruction SBFM not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X31+128], X9
	127 Add X9, X21, X9
	128 Move V9, [X29+4]
	129 Add X9, X9, 32
	130 Move V10, [X9]
	131 Move X19, 0xA64000
	132 Move W8, [X19+2064]
	133 Move V11, [X9+4]
	134 Move [X31+112], X9
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x776000
	138 Move X0, [X0+1448]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X19+2064], W8
	142 Move X8, 0x776000
	143 Move X8, [X8+1448]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move W8, [X21+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X9, W28
	152 Add X9, X21, X9
	153 Add X9, X9, 32
	154 Move V12, [X9]
	155 NotImplemented "Instruction SBFM not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X8, X10
	158 Move [X31+56], X10
	159 Add X10, X21, X10
	160 Move V13, [X9+4]
	161 Add X10, X10, 32
	162 Move V14, [X10]
	163 Move W8, [X19+2064]
	164 Move [X31+64], X9
	165 Move V15, [X10+4]
	166 Move [X31+40], X10
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x776000
	170 Move X0, [X0+1448]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X19+2064], W8
	174 Move X8, 0x776000
	175 Move X8, [X8+1448]
	176 Move X0, [X8]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move [X31+80], X20
	182 Move [X31+88], X25
	183 Compare X24, 0
	184 JumpIfEqual {703}
	185 Move X0, X24
	186 Move X1, X31
	187 Move [X31+24], X23
	188 Move [X31+32], X29
	189 Move [X31+96], X28
	190 Move [X31+20], W26
	191 Move [X31+52], W22
	192 Move [X31+72], X24
	193 Call Face.get_distinctIndexesInternal, X0
	194 Compare X0, 0
	195 JumpIfEqual {703}
	196 Move W8, [X0+24]
	197 Move X28, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract S0, S8, S10
	200 Subtract S1, S9, S11
	201 Subtract S2, S12, S14
	202 Subtract S3, S13, S15
	203 Move X29, 0x77E000
	204 Move X29, [X29+3848]
	205 Multiply S0, S0, S0
	206 Multiply S1, S1, S1
	207 Multiply S2, S2, S2
	208 Multiply S3, S3, S3
	209 Add S0, S0, S1
	210 Add S1, S2, S3
	211 NotImplemented "Instruction FSQRT not yet implemented."
	212 NotImplemented "Instruction FSQRT not yet implemented."
	213 Move W24, W31
	214 Move X19, 0xA5C000
	215 Move W23, 1
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 Move X25, 0xA64000
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add X8, X28, W24
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move W8, [X21+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X20, X21, X26
	224 Add X20, X20, 32
	225 Move V8, [X20]
	226 Move X22, X20
	227 Add X22, X22, 4
	228 Move V9, [X22]
	229 Move W8, [X19+1935]
	230 Compare W8, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X29
	233 Call 0x1C17CF4
	234 Move [X19+1935], W23
	235 Move X8, [X29]
	236 Move W9, [X25+2632]
	237 Move X8, [X8+184]
	238 Move S11, [X8]
	239 Move S10, [X8+4]
	240 Compare W9, 0
	241 JumpIfNotEqual {247}
	242 Move X0, X29
	243 Call 0x1C17CF4
	244 Move X8, [X29]
	245 Move [X25+2632], W23
	246 Move X8, [X8+184]
	247 Move S0, [X8+8]
	248 Move S1, [X8+12]
	249 Move V2, V11
	250 Move V3, V10
	251 Move X0, X31
	252 Multiply S4, S12, S0
	253 Multiply S5, S12, S1
	254 Move V0, V8
	255 Move V1, V9
	256 Call Math.ScaleAroundPoint, X0, X1, X2
	257 Move W8, [X21+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move [X20], S0
	260 Move [X22], S1
	261 Move W8, [X28+24]
	262 Add W24, W24, 1
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W8, [X21+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X9, [X31+128]
	267 Move X29, [X31+80]
	268 Move X28, [X31+88]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X9, [X31+96]
	271 Move X27, [X31+72]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X9, [X31+56]
	274 Move W25, [X31+52]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X9, [X31+64]
	277 Move X8, [X31+32]
	278 Move V8, [X9]
	279 Move X0, X27
	280 Move X1, X31
	281 Move V10, [X8]
	282 Move X8, [X31+112]
	283 Move V11, [X8]
	284 Move X8, [X31+40]
	285 Move V9, [X8]
	286 Call Face.get_distinctIndexesInternal, X0
	287 Compare X0, 0
	288 JumpIfEqual {703}
	289 Move W9, [X0+24]
	290 Add V0, V10, V11
	291 NotImplemented "Instruction MOVI not yet implemented."
	292 NotImplemented "Instruction INVALID not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move [X31+8], V0
	295 Add V0, V8, V9
	296 NotImplemented "Instruction MOVI not yet implemented."
	297 NotImplemented "Instruction INVALID not yet implemented."
	298 Move V1, [X31+8]
	299 Move W8, W31
	300 Add V0, V1, V0
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Add X9, X0, W8
	303 NotImplemented "Instruction LDRSW not yet implemented."
	304 Move W10, [X21+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add X9, X21, X9
	307 Move V1, [X9+32]
	308 Add W8, W8, 1
	309 Add V1, V0, V1
	310 Move [X9+32], D1
	311 Move W9, [X0+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move W11, [X29+24]
	314 Compare W11, 0
	315 JumpIfEqual {702}
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Move W9, [X21+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W12, [X28+24]
	320 Compare W12, 0
	321 JumpIfEqual {702}
	322 NotImplemented "Instruction LDRSW not yet implemented."
	323 NotImplemented "Instruction CMP not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Add X8, X21, X8
	331 Add X9, X21, X10
	332 Add X10, X21, X11
	333 Add X11, X21, X12
	334 Move X19, 0xA5B000
	335 Move V0, [X8+32]
	336 Move V1, [X9+32]
	337 Move V2, [X10+32]
	338 Move V3, [X11+32]
	339 Move W8, [X19+2590]
	340 Subtract V4, V0, V1
	341 Subtract V2, V2, V3
	342 Move [X31+96], V4
	343 Move [X31+104], V2
	344 Compare W8, 0
	345 JumpIfNotEqual {353}
	346 Move X0, 0x776000
	347 Move X0, [X0+1448]
	348 Call 0x1C17CF4
	349 Move V4, [X31+96]
	350 Move V2, [X31+112]
	351 Move W8, 1
	352 Move [X19+2590], W8
	353 Move X8, 0x776000
	354 Move X8, [X8+1448]
	355 Move S8, V4.S[1]
	356 NotImplemented "Instruction INVALID not yet implemented."
	357 Multiply S1, S8, V4.S[1]
	358 Move X0, [X8]
	359 Move S9, V2.S[1]
	360 Add S10, S0, S1
	361 NotImplemented "Instruction INVALID not yet implemented."
	362 Move W8, [X0+224]
	363 Multiply S1, S9, V2.S[1]
	364 Add S11, S0, S1
	365 Compare W8, 0
	366 JumpIfNotEqual {370}
	367 Call 0x1C17DFC
	368 Move V4, [X31+96]
	369 Move V2, [X31+112]
	370 Move X8, -48840704
	371 Move V1, [X8+4072]
	372 Multiply S0, S10, S11
	373 NotImplemented "Instruction FSQRT not yet implemented."
	374 NotImplemented "Instruction FCMP not yet implemented."
	375 Move S1, W31
	376 Move X8, 0x776000
	377 Move X8, [X8+1448]
	378 NotImplemented "Instruction INVALID not yet implemented."
	379 NotImplemented "Instruction FADDP not yet implemented."
	380 NotImplemented "Instruction FDIV not yet implemented."
	381 Move X0, [X8]
	382 Move S1, 1
	383 Move S2, -1
	384 NotImplemented "Instruction FMIN not yet implemented."
	385 Move W8, [X0+224]
	386 NotImplemented "Instruction FCMP not yet implemented."
	387 NotImplemented "Instruction FCSEL not yet implemented."
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 NotImplemented "Instruction FCVT not yet implemented."
	392 Call 0x3EB2B80
	393 Move X8, -48836608
	394 Move V1, [X8+1096]
	395 Move V4, [X31+96]
	396 Move V2, [X31+112]
	397 NotImplemented "Instruction INVALID not yet implemented."
	398 Multiply S1, S0, S1
	399 Multiply S0, S4, S9
	400 Multiply S2, S8, S2
	401 Move W8, 0x43B40000
	402 Subtract S0, S0, S2
	403 Move S2, W8
	404 Subtract S2, S2, S1
	405 NotImplemented "Instruction FCMP not yet implemented."
	406 Move X0, X27
	407 Move X1, X31
	408 NotImplemented "Instruction FCSEL not yet implemented."
	409 Call Face.get_distinctIndexesInternal, X0
	410 Compare X0, 0
	411 JumpIfEqual {703}
	412 Move W8, [X0+24]
	413 Move V0, [X31+8]
	414 Move X26, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move S8, V0.S[1]
	417 Move W19, W31
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Add X8, X26, W19
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Move W8, [X21+24]
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Add X22, X21, X20
	424 Add X22, X22, 32
	425 Move V0, [X22]
	426 Move V3, V8
	427 Move V4, V9
	428 Move X0, X31
	429 Move X23, X22
	430 Add X23, X23, 4
	431 Move V1, [X23]
	432 Move V2, [X31+8]
	433 Call Math.RotateAroundPoint, X0, X1, V0
	434 Move W8, [X21+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move [X22], S0
	437 Move [X23], S1
	438 Move W8, [X26+24]
	439 Add W19, W19, 1
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Move W9, [X28+24]
	442 Compare W9, 0
	443 JumpIfEqual {702}
	444 NotImplemented "Instruction LDRSW not yet implemented."
	445 Move W10, [X21+24]
	446 Move X19, 0xA64000
	447 NotImplemented "Instruction CMP not yet implemented."
	448 NotImplemented "Instruction CMP not yet implemented."
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Add X8, X21, X8
	452 Add X9, X21, X9
	453 Move W10, [X19+2064]
	454 Move S10, [X8+32]
	455 Move S9, [X8+36]
	456 Move S12, [X9+32]
	457 Move S11, [X9+36]
	458 Compare W10, 0
	459 JumpIfNotEqual {465}
	460 Move X0, 0x776000
	461 Move X0, [X0+1448]
	462 Call 0x1C17CF4
	463 Move W8, 1
	464 Move [X19+2064], W8
	465 Move X8, 0x776000
	466 Move X8, [X8+1448]
	467 Move X0, [X8]
	468 Move W8, [X0+224]
	469 Compare W8, 0
	470 JumpIfNotEqual {472}
	471 Call 0x1C17DFC
	472 Move W9, [X29+24]
	473 Compare W9, 0
	474 JumpIfEqual {702}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W10, [X21+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 NotImplemented "Instruction CMP not yet implemented."
	479 NotImplemented "Instruction LDRSW not yet implemented."
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Add X8, X21, X8
	482 Add X9, X21, X9
	483 Subtract S0, S10, S12
	484 Subtract S1, S9, S11
	485 Move W10, [X19+2064]
	486 Move V10, [X8+32]
	487 Move V11, [X9+32]
	488 Multiply S0, S0, S0
	489 Multiply S1, S1, S1
	490 Add S0, S0, S1
	491 NotImplemented "Instruction FSQRT not yet implemented."
	492 Compare W10, 0
	493 JumpIfNotEqual {499}
	494 Move X0, 0x776000
	495 Move X0, [X0+1448]
	496 Call 0x1C17CF4
	497 Move W8, 1
	498 Move [X19+2064], W8
	499 Move X8, 0x776000
	500 Move X8, [X8+1448]
	501 NotImplemented "Instruction FABS not yet implemented."
	502 Subtract V10, V10, V11
	503 Move X0, [X8]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 Invalid "Jump target not found in method."
	507 Call 0x1C17DFC
	508 NotImplemented "Instruction INVALID not yet implemented."
	509 Move X8, -48836608
	510 NotImplemented "Instruction FADDP not yet implemented."
	511 Move V1, [X8+524]
	512 NotImplemented "Instruction FSQRT not yet implemented."
	513 NotImplemented "Instruction FABS not yet implemented."
	514 Add S9, S9, S0
	515 NotImplemented "Instruction FCMP not yet implemented."
	516 Move X0, X27
	517 Move X1, X31
	518 Call Face.get_distinctIndexesInternal, X0
	519 Compare X0, 0
	520 JumpIfEqual {703}
	521 Move W8, [X0+24]
	522 Move X26, X0
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Move W19, W31
	525 Move W20, 0x43340000
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Add X8, X26, W19
	528 NotImplemented "Instruction LDRSW not yet implemented."
	529 Move W8, [X21+24]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Add X23, X21, X22
	532 Add X23, X23, 32
	533 Move V0, [X23]
	534 Move S4, W20
	535 Move V3, V8
	536 Move X0, X31
	537 Move X24, X23
	538 Add X24, X24, 4
	539 Move V1, [X24]
	540 Move V2, [X31+8]
	541 Call Math.RotateAroundPoint, X0, X1, V0
	542 Move W8, [X21+24]
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move [X23], S0
	545 Move [X24], S1
	546 Move W8, [X26+24]
	547 Add W19, W19, 1
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move W9, [X28+24]
	550 Compare W9, 0
	551 JumpIfEqual {702}
	552 NotImplemented "Instruction LDRSW not yet implemented."
	553 Move W10, [X21+24]
	554 Move X19, 0xA64000
	555 NotImplemented "Instruction CMP not yet implemented."
	556 NotImplemented "Instruction CMP not yet implemented."
	557 NotImplemented "Instruction LDRSW not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Add X8, X21, X8
	560 Add X9, X21, X9
	561 Move W10, [X19+2064]
	562 Move S11, [X8+32]
	563 Move S10, [X8+36]
	564 Move S13, [X9+32]
	565 Move S12, [X9+36]
	566 Compare W10, 0
	567 JumpIfNotEqual {573}
	568 Move X0, 0x776000
	569 Move X0, [X0+1448]
	570 Call 0x1C17CF4
	571 Move W8, 1
	572 Move [X19+2064], W8
	573 Move X8, 0x776000
	574 Move X8, [X8+1448]
	575 Move X0, [X8]
	576 Move W8, [X0+224]
	577 Compare W8, 0
	578 JumpIfNotEqual {580}
	579 Call 0x1C17DFC
	580 Move W9, [X29+24]
	581 Compare W9, 0
	582 JumpIfEqual {702}
	583 NotImplemented "Instruction LDRSW not yet implemented."
	584 Move W10, [X21+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 NotImplemented "Instruction LDRSW not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Add X8, X21, X8
	590 Add X9, X21, X9
	591 Subtract S0, S11, S13
	592 Subtract S1, S10, S12
	593 Move W10, [X19+2064]
	594 Move V11, [X8+32]
	595 Move V12, [X9+32]
	596 Multiply S0, S0, S0
	597 Multiply S1, S1, S1
	598 Add S0, S0, S1
	599 NotImplemented "Instruction FSQRT not yet implemented."
	600 Compare W10, 0
	601 JumpIfNotEqual {607}
	602 Move X0, 0x776000
	603 Move X0, [X0+1448]
	604 Call 0x1C17CF4
	605 Move W8, 1
	606 Move [X19+2064], W8
	607 Move X8, 0x776000
	608 Move X8, [X8+1448]
	609 NotImplemented "Instruction FABS not yet implemented."
	610 Subtract V11, V11, V12
	611 Move X0, [X8]
	612 Move W8, [X0+224]
	613 Compare W8, 0
	614 Invalid "Jump target not found in method."
	615 Call 0x1C17DFC
	616 NotImplemented "Instruction INVALID not yet implemented."
	617 NotImplemented "Instruction FADDP not yet implemented."
	618 NotImplemented "Instruction FSQRT not yet implemented."
	619 NotImplemented "Instruction FABS not yet implemented."
	620 Add S0, S10, S0
	621 NotImplemented "Instruction FCMP not yet implemented."
	622 Move X0, X27
	623 Move X1, X31
	624 Call Face.get_distinctIndexesInternal, X0
	625 Compare X0, 0
	626 JumpIfEqual {703}
	627 Move W8, [X0+24]
	628 Move X26, X0
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move W19, W31
	631 Move W20, 0x43340000
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Add X8, X26, W19
	634 NotImplemented "Instruction LDRSW not yet implemented."
	635 Move W8, [X21+24]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Add X23, X21, X22
	638 Add X23, X23, 32
	639 Move V0, [X23]
	640 Move S4, W20
	641 Move V3, V8
	642 Move X0, X31
	643 Move X24, X23
	644 Add X24, X24, 4
	645 Move V1, [X24]
	646 Move V2, [X31+8]
	647 Call Math.RotateAroundPoint, X0, X1, V0
	648 Move W8, [X21+24]
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move [X23], S0
	651 Move [X24], S1
	652 Move W8, [X26+24]
	653 Add W19, W19, 1
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move X0, X27
	656 Move X1, X31
	657 Call Face.get_distinctIndexesInternal, X0
	658 Move X19, [X31+24]
	659 Move X1, X0
	660 Move X0, X19
	661 Call UVEditing.SplitUVs, X0, X1
	662 Move X0, X19
	663 Move X1, X28
	664 Move X2, X31
	665 Call ProBuilderMesh.SetTexturesCoincident, X0, X1
	666 Move X0, X19
	667 Move X1, X29
	668 Move X2, X31
	669 Call ProBuilderMesh.SetTexturesCoincident, X0, X1
	670 Move W3, 1
	671 Move X0, X19
	672 Move X1, X21
	673 Move W2, W25
	674 Call UVEditing.ApplyUVs, X0, X1, X2, X3
	675 Move W26, [X31+20]
	676 NotImplemented "Instruction ORN not yet implemented."
	677 Move X20, [X31+288]
	678 Move X19, [X31+296]
	679 Move X22, [X31+272]
	680 Move X21, [X31+280]
	681 Move X24, [X31+256]
	682 Move X23, [X31+264]
	683 Move X26, [X31+240]
	684 Move X25, [X31+248]
	685 Move X28, [X31+224]
	686 Move X27, [X31+232]
	687 Move X29, [X31+208]
	688 Move X30, [X31+216]
	689 Move D9, [X31+192]
	690 Move D8, [X31+200]
	691 Move D11, [X31+176]
	692 Move D10, [X31+184]
	693 Move D13, [X31+160]
	694 Move D12, [X31+168]
	695 Move D15, [X31+144]
	696 Move D14, [X31+152]
	697 Move W0, W8
	698 ShiftRight W0, 31
	699 And W0, W0, 0x7FFFFFFF
	700 Add X31, X31, 304
	701 Return X0
	702 Call 0x1C17F28
	703 Call 0x1C17F20

Method: UnityEngine.Vector2[] GetUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 channel)

Disassembly:
	0x0397F034 CBZ X23, 0x397F2D8
	0x0397F038 MOV X0, X23
	0x0397F03C MOV X1, X31
	0x0397F040 BL 0x39162B4
	0x0397F044 CBZ X0, 0x397F2D8
	0x0397F048 ADRP X8, 0x7CF000
	0x0397F04C LDR X8, [X8 + 0xD78]
	0x0397F050 MOV X20, X0
	0x0397F054 LDR X1, [X8]
	0x0397F058 BL 0x2A0A118
	0x0397F05C CBZ X21, 0x397F2D8
	0x0397F060 ADRP X10, 0x7CE000
	0x0397F064 LDR X8, [X21]
	0x0397F068 LDR X10, [X10 + 0xDB0]
	0x0397F06C MOV W22, W0
	0x0397F070 LDRH W9, [X8 + 0x12E]
	0x0397F074 LDR X1, [X10]
	0x0397F078 CBZ X9, 0x397F09C
	0x0397F07C LDR X10, [X8 + 0xB0]
	0x0397F080 ADD X10, X10, 0x8
	0x0397F084 LDUR X11, [X10 - 0x8]
	0x0397F088 CMP X11, X1
	0x0397F08C B.EQ 0x397F0AC
	0x0397F090 SUBS X9, X9, 0x1
	0x0397F094 ADD X10, X10, 0x10
	0x0397F098 B.NE 0x397F084
	0x0397F09C MOV X0, X21
	0x0397F0A0 MOV W2, W31
	0x0397F0A4 BL 0x1C5C788
	0x0397F0A8 B 0x397F0B8
	0x0397F0AC LDRSW X9, [X10]
	0x0397F0B0 ADD X8, X8, X9, 0x4, LSL
	0x0397F0B4 ADD X0, X8, 0x138
	0x0397F0B8 LDP X8, X1, [X0]
	0x0397F0BC MOV X0, X21
	0x0397F0C0 STR X23, [X31]
	0x0397F0C4 BLR X8
	0x0397F0C8 MOV X21, X0
	0x0397F0CC CBZ X0, 0x397F2DC
	0x0397F0D0 ADRP X26, 0x774000
	0x0397F0D4 ADRP X27, 0x7CE000
	0x0397F0D8 ADRP X28, 0x77E000
	0x0397F0DC ADRP X29, 0x79E000
	0x0397F0E0 LDR X26, [X26 + 0xE18]
	0x0397F0E4 LDR X27, [X27 + 0xDB8]
	0x0397F0E8 LDR X28, [X28 + 0x870]
	0x0397F0EC LDR X29, [X29 + 0x8B0]
	0x0397F0F0 LDR X8, [X21]
	0x0397F0F4 LDR X1, [X26]
	0x0397F0F8 LDRH W9, [X8 + 0x12E]
	0x0397F0FC CBZ X9, 0x397F120
	0x0397F100 LDR X10, [X8 + 0xB0]
	0x0397F104 ADD X10, X10, 0x8
	0x0397F108 LDUR X11, [X10 - 0x8]
	0x0397F10C CMP X11, X1
	0x0397F110 B.EQ 0x397F130
	0x0397F114 SUBS X9, X9, 0x1
	0x0397F118 ADD X10, X10, 0x10
	0x0397F11C B.NE 0x397F108
	0x0397F120 MOV X0, X21
	0x0397F124 MOV W2, W31
	0x0397F128 BL 0x1C5C788
	0x0397F12C B 0x397F13C
	0x0397F130 LDRSW X9, [X10]
	0x0397F134 ADD X8, X8, X9, 0x4, LSL
	0x0397F138 ADD X0, X8, 0x138
	0x0397F13C LDP X8, X1, [X0]
	0x0397F140 MOV X0, X21
	0x0397F144 BLR X8
	0x0397F148 TBZ X0, 0x0, 0x397F220
	0x0397F14C LDR X8, [X21]
	0x0397F150 LDR X1, [X27]
	0x0397F154 LDRH W9, [X8 + 0x12E]
	0x0397F158 CBZ X9, 0x397F17C
	0x0397F15C LDR X10, [X8 + 0xB0]
	0x0397F160 ADD X10, X10, 0x8
	0x0397F164 LDUR X11, [X10 - 0x8]
	0x0397F168 CMP X11, X1
	0x0397F16C B.EQ 0x397F18C
	0x0397F170 SUBS X9, X9, 0x1
	0x0397F174 ADD X10, X10, 0x10
	0x0397F178 B.NE 0x397F164
	0x0397F17C MOV X0, X21
	0x0397F180 MOV W2, W31
	0x0397F184 BL 0x1C5C788
	0x0397F188 B 0x397F198
	0x0397F18C LDRSW X9, [X10]
	0x0397F190 ADD X8, X8, X9, 0x4, LSL
	0x0397F194 ADD X0, X8, 0x138
	0x0397F198 LDP X8, X1, [X0]
	0x0397F19C MOV X0, X21
	0x0397F1A0 BLR X8
	0x0397F1A4 CBZ X0, 0x397F2CC
	0x0397F1A8 MOV X1, X31
	0x0397F1AC BL 0x38FF530
	0x0397F1B0 MOV X23, X0
	0x0397F1B4 CBZ X0, 0x397F2D0
	0x0397F1B8 LDR X8, [X23 + 0x18]
	0x0397F1BC CMP W8, 0x1
	0x0397F1C0 B.LT 0x397F0F0
	0x0397F1C4 MOV X25, X31
	0x0397F1C8 AND X8, X8, 0x0
	0x0397F1CC ADD X19, X23, 0x20
	0x0397F1D0 CMP X25, W8, UXTW
	0x0397F1D4 B.CS 0x397F2D4
	0x0397F1D8 LDR W24, [X19, X25, LSL #2]
	0x0397F1DC LDR X3, [X28]
	0x0397F1E0 ADD X2, X31, 0xC
	0x0397F1E4 MOV X0, X20
	0x0397F1E8 MOV W1, W24
	0x0397F1EC BL 0x2A0BC68
	0x0397F1F0 TBZ X0, 0x0, 0x397F20C
	0x0397F1F4 LDR X3, [X29]
	0x0397F1F8 MOV X0, X20
	0x0397F1FC MOV W1, W24
	0x0397F200 MOV W2, W22
	0x0397F204 BL 0x2A0A330
	0x0397F208 ADD W22, W22, 0x1
	0x0397F20C LDR W8, [X23 + 0x18]
	0x0397F210 ADD X25, X25, 0x1
	0x0397F214 CMP X25, W8, SXTW
	0x0397F218 B.LT 0x397F1D0
	0x0397F21C B 0x397F0F0
	0x0397F220 MOV X22, X31
	0x0397F224 MOVZ W23, 0x7
	0x0397F228 CBZ X21, 0x397F28C
	0x0397F22C LDR X8, [X21]
	0x0397F230 ADRP X10, 0x774000
	0x0397F234 LDRH W9, [X8 + 0x12E]
	0x0397F238 LDR X10, [X10 + 0xE00]
	0x0397F23C LDR X1, [X10]
	0x0397F240 CBZ X9, 0x397F264
	0x0397F244 LDR X10, [X8 + 0xB0]
	0x0397F248 ADD X10, X10, 0x8
	0x0397F24C LDUR X11, [X10 - 0x8]
	0x0397F250 CMP X11, X1
	0x0397F254 B.EQ 0x397F274
	0x0397F258 SUBS X9, X9, 0x1
	0x0397F25C ADD X10, X10, 0x10
	0x0397F260 B.NE 0x397F24C
	0x0397F264 MOV X0, X21
	0x0397F268 MOV W2, W31
	0x0397F26C BL 0x1C5C788
	0x0397F270 B 0x397F280

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA63000
	007 Move W8, [X21+2614]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x7D0000
	015 Move X0, [X0+1240]
	016 Call 0x1C17CF4
	017 Move X0, 0x7D0000
	018 Move X0, [X0+1208]
	019 Call 0x1C17CF4
	020 Move X0, 0x7D0000
	021 Move X0, [X0+1248]
	022 Call 0x1C17CF4
	023 Move X0, 0x7D0000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D0000
	027 Move X0, [X0+8]
	028 Call 0x1C17CF4
	029 Move X0, 0x775000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x7D2000
	033 Move X0, [X0+816]
	034 Call 0x1C17CF4
	035 Move X0, 0x7D2000
	036 Move X0, [X0+824]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2614], W8
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X19, 0
	042 JumpIfEqual {166}
	043 Move X0, X19
	044 Move X1, X31
	045 Call ProBuilderMesh.get_mesh, X0
	046 Move X8, 0x775000
	047 Move X8, [X8+1432]
	048 Move X20, X0
	049 Move X8, [X8]
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move W8, W0
	060 Move X0, X31
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {160}
	065 Move X0, X19
	066 Move X1, X31
	067 Call ProBuilderMesh.get_mesh, X0
	068 Compare X0, 0
	069 JumpIfEqual {166}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+48]
	076 Call Mesh.get_uv2, X0
	077 Return X0
	078 And W8, W20, 0xFFFFFFFE
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Compare X19, 0
	081 JumpIfEqual {166}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W1, 8
	084 Compare X19, 0
	085 JumpIfEqual {166}
	086 Move X0, [X19+96]
	087 Move W1, 16
	088 Move X0, X19
	089 Move X2, X31
	090 Call ProBuilderMesh.HasArrays, X0, X1
	091 Move W8, W0
	092 Move X0, X31
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {160}
	097 Move X8, 0x7D0000
	098 Move X8, [X8+8]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move X8, 0x7D0000
	102 Move X8, [X8+16]
	103 Move X21, X0
	104 Move X1, [X8]
	105 Call List`1<Vector4>..ctor, X0
	106 Move X0, X19
	107 Move W1, W20
	108 Move X2, X21
	109 Move X3, X31
	110 Call ProBuilderMesh.GetUVs, X0, X1, X2
	111 Move X22, 0x7D2000
	112 Move X22, [X22+824]
	113 Move X0, [X22]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X22]
	119 Move X8, [X0+184]
	120 Move X19, [X8+8]
	121 Compare X19, 0
	122 JumpIfNotEqual {144}
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X22]
	128 Move X9, 0x7D0000
	129 Move X8, [X0+184]
	130 Move X9, [X9+1248]
	131 Move X20, [X8]
	132 Move X0, [X9]
	133 Call 0x1C17F10
	134 Move X8, 0x7D2000
	135 Move X8, [X8+816]
	136 Move X1, X20
	137 Move X3, X31
	138 Move X19, X0
	139 Move X2, [X8]
	140 Call Func`2<Vector4, Vector2>..ctor, X0, X1, X2
	141 Move X8, [X22]
	142 Move X8, [X8+184]
	143 Move [X8+8], X19
	144 Move X8, 0x7D0000
	145 Move X8, [X8+1240]
	146 Move X0, X21
	147 Move X1, X19
	148 Move X2, [X8]
	149 Call Enumerable.Select, X0, X1
	150 Move X8, 0x7D0000
	151 Move X8, [X8+1208]
	152 Move X20, [X31+32]
	153 Move X19, [X31+40]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X1, [X8]
	157 Move X30, [X31+48]
	158 Call Enumerable.ToArray, X0
	159 Return X0
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return X0
	166 Call 0x1C17F20

Method: System.Void ApplyUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector2[] uvs, System.Int32 channel, System.Boolean applyToMesh = True)

Disassembly:
	0x0397F604 LDR W9, [X22 + 0x18]
	0x0397F608 CMP W8, W9
	0x0397F60C B.LT 0x397F5BC
	0x0397F610 MOVZ W3, 0x1
	0x0397F614 MOV X0, X19
	0x0397F618 MOV W2, W21
	0x0397F61C BL 0x397E604
	0x0397F620 LDR W8, [X20 + 0x18]
	0x0397F624 CMP W8, 0x1
	0x0397F628 B.LT 0x397F670
	0x0397F62C MOV X21, X31
	0x0397F630 ADD X22, X20, 0x20
	0x0397F634 MOVN W23, 0x0
	0x0397F638 CMP W21, W8
	0x0397F63C B.CS 0x397F748
	0x0397F640 LDR X0, [X22, X21, LSL #3]
	0x0397F644 CBZ X0, 0x397F74C
	0x0397F648 MOV X1, X31
	0x0397F64C STR W23, [X0 + 0x50]
	0x0397F650 BL 0x38FF530
	0x0397F654 MOV X1, X0
	0x0397F658 MOV X0, X19
	0x0397F65C BL 0x397E274
	0x0397F660 LDR W8, [X20 + 0x18]
	0x0397F664 ADD X21, X21, 0x1
	0x0397F668 CMP W21, W8
	0x0397F66C B.LT 0x397F638
	0x0397F670 LDR X0, [X24]
	0x0397F674 LDR W8, [X0 + 0xE0]
	0x0397F678 CBNZ W8, 0x397F684
	0x0397F67C BL 0x1C16DFC
	0x0397F680 LDR X0, [X24]
	0x0397F684 LDR X8, [X0 + 0xB8]
	0x0397F688 LDR X21, [X8 + 0x20]
	0x0397F68C CBNZ X21, 0x397F6E0
	0x0397F690 LDR W8, [X0 + 0xE0]
	0x0397F694 CBNZ W8, 0x397F6A0
	0x0397F698 BL 0x1C16DFC
	0x0397F69C LDR X0, [X24]
	0x0397F6A0 ADRP X9, 0x7CE000
	0x0397F6A4 LDR X8, [X0 + 0xB8]
	0x0397F6A8 LDR X9, [X9 + 0xFA8]
	0x0397F6AC LDR X22, [X8]
	0x0397F6B0 LDR X0, [X9]
	0x0397F6B4 BL 0x1C16F10
	0x0397F6B8 ADRP X8, 0x7D1000
	0x0397F6BC LDR X8, [X8 + 0x380]
	0x0397F6C0 MOV X1, X22
	0x0397F6C4 MOV X3, X31
	0x0397F6C8 MOV X21, X0
	0x0397F6CC LDR X2, [X8]
	0x0397F6D0 BL 0x2D30578
	0x0397F6D4 LDR X8, [X24]
	0x0397F6D8 LDR X8, [X8 + 0xB8]
	0x0397F6DC STR X21, [X8 + 0x20]
	0x0397F6E0 LDR X2, [X26]
	0x0397F6E4 MOV X0, X20
	0x0397F6E8 MOV X1, X21
	0x0397F6EC BL 0x21D0FD8
	0x0397F6F0 LDR X1, [X25]
	0x0397F6F4 BL 0x21D54D4
	0x0397F6F8 ADRP X8, 0xFFFFFFFFFD16B000
	0x0397F6FC LDR V0, [X8 + 0x410]
	0x0397F700 MOV X1, X0
	0x0397F704 MOV X0, X19
	0x0397F708 LDP X20, X19, [X31 + 0x60]
	0x0397F70C LDP X22, X21, [X31 + 0x50]
	0x0397F710 LDP X24, X23, [X31 + 0x40]
	0x0397F714 LDP X26, X25, [X31 + 0x30]
	0x0397F718 LDP X30, X27, [X31 + 0x20]
	0x0397F71C LDP D9, D8, [X31 + 0x10]
	0x0397F720 LDR V10, [X31], #0x70
	0x0397F724 B 0x397E954
	0x0397F728 LDP X20, X19, [X31 + 0x60]
	0x0397F72C LDP X22, X21, [X31 + 0x50]
	0x0397F730 LDP X24, X23, [X31 + 0x40]
	0x0397F734 LDP X26, X25, [X31 + 0x30]
	0x0397F738 LDP X30, X27, [X31 + 0x20]
	0x0397F73C LDP D9, D8, [X31 + 0x10]
	0x0397F740 LDR V10, [X31], #0x70
	0x0397F744 RET
	0x0397F748 BL 0x1C16F28
	0x0397F74C BL 0x1C16F20
	0x0397F750 SUB X31, X31, 0xC0
	0x0397F754 STP X29, X30, [X31 + 0x60]
	0x0397F758 STP X28, X27, [X31 + 0x70]
	0x0397F75C STP X26, X25, [X31 + 0x80]
	0x0397F760 STP X24, X23, [X31 + 0x90]
	0x0397F764 STP X22, X21, [X31 + 0xA0]
	0x0397F768 STP X20, X19, [X31 + 0xB0]
	0x0397F76C ADRP X23, 0xA62000
	0x0397F770 ADRP X21, 0x7D1000
	0x0397F774 ADRP X19, 0x7D1000
	0x0397F778 LDRB W8, [X23 + 0xA3D]
	0x0397F77C LDR X21, [X21 + 0x388]
	0x0397F780 LDR X19, [X19 + 0x390]
	0x0397F784 MOV W24, W2
	0x0397F788 MOV X22, X1
	0x0397F78C MOV X20, X0
	0x0397F790 TBNZ X8, 0x0, 0x397F880
	0x0397F794 ADRP X0, 0x7D1000
	0x0397F798 LDR X0, [X0 + 0x398]
	0x0397F79C BL 0x1C16CF4
	0x0397F7A0 ADRP X0, 0x7D1000
	0x0397F7A4 LDR X0, [X0 + 0x3A0]
	0x0397F7A8 BL 0x1C16CF4
	0x0397F7AC ADRP X0, 0x7D1000
	0x0397F7B0 LDR X0, [X0 + 0x3A8]
	0x0397F7B4 BL 0x1C16CF4
	0x0397F7B8 ADRP X0, 0x7D1000
	0x0397F7BC LDR X0, [X0 + 0x390]
	0x0397F7C0 BL 0x1C16CF4
	0x0397F7C4 ADRP X0, 0x7D1000
	0x0397F7C8 LDR X0, [X0 + 0x3B0]
	0x0397F7CC BL 0x1C16CF4
	0x0397F7D0 ADRP X0, 0x7D1000
	0x0397F7D4 LDR X0, [X0 + 0x388]
	0x0397F7D8 BL 0x1C16CF4
	0x0397F7DC ADRP X0, 0x7CE000
	0x0397F7E0 LDR X0, [X0 + 0xFA0]
	0x0397F7E4 BL 0x1C16CF4
	0x0397F7E8 ADRP X0, 0x776000
	0x0397F7EC LDR X0, [X0 + 0x9C8]
	0x0397F7F0 BL 0x1C16CF4
	0x0397F7F4 ADRP X0, 0x7D1000
	0x0397F7F8 LDR X0, [X0 + 0x3B8]
	0x0397F7FC BL 0x1C16CF4
	0x0397F800 ADRP X0, 0x7D1000
	0x0397F804 LDR X0, [X0 + 0x3C0]
	0x0397F808 BL 0x1C16CF4
	0x0397F80C ADRP X0, 0x7D1000
	0x0397F810 LDR X0, [X0 + 0x3C8]
	0x0397F814 BL 0x1C16CF4
	0x0397F818 ADRP X0, 0x7CE000
	0x0397F81C LDR X0, [X0 + 0xFA8]
	0x0397F820 BL 0x1C16CF4
	0x0397F824 ADRP X0, 0x7D1000
	0x0397F828 LDR X0, [X0 + 0x3D0]
	0x0397F82C BL 0x1C16CF4
	0x0397F830 ADRP X0, 0x7D1000
	0x0397F834 LDR X0, [X0 + 0x3D8]
	0x0397F838 BL 0x1C16CF4
	0x0397F83C ADRP X0, 0x7CE000
	0x0397F840 LDR X0, [X0 + 0xE10]
	0x0397F844 BL 0x1C16CF4
	0x0397F848 ADRP X0, 0x7CF000
	0x0397F84C LDR X0, [X0 + 0xA38]
	0x0397F850 BL 0x1C16CF4
	0x0397F854 ADRP X0, 0x7CE000
	0x0397F858 LDR X0, [X0 + 0xDF0]
	0x0397F85C BL 0x1C16CF4
	0x0397F860 ADRP X0, 0x7D1000
	0x0397F864 LDR X0, [X0 + 0x3E0]
	0x0397F868 BL 0x1C16CF4
	0x0397F86C ADRP X0, 0x7D1000
	0x0397F870 LDR X0, [X0 + 0x338]
	0x0397F874 BL 0x1C16CF4
	0x0397F878 MOVZ W8, 0x1
	0x0397F87C STRB W8, [X23 + 0xA3D]
	0x0397F880 MOVI V0.2D, 0x0
	0x0397F884 MOV X0, X20
	0x0397F888 MOV W1, W24
	0x0397F88C STR X31, [X31 + 0x50]
	0x0397F890 STP V0, V0, [X31 + 0x30]
	0x0397F894 STR W24, [X31 + 0x4]
	0x0397F898 BL 0x397E034
	0x0397F89C LDR X8, [X21]
	0x0397F8A0 MOV X21, X0
	0x0397F8A4 MOV X0, X8
	0x0397F8A8 BL 0x1C16F10
	0x0397F8AC LDR X1, [X19]
	0x0397F8B0 MOV X23, X0
	0x0397F8B4 BL 0x2A44560
	0x0397F8B8 CBZ X22, 0x397FC6C
	0x0397F8BC LDR W8, [X22 + 0x18]
	0x0397F8C0 CMP W8, 0x1
	0x0397F8C4 B.LT 0x397FA74
	0x0397F8C8 ADRP X28, 0x7D1000
	0x0397F8CC LDR X28, [X28 + 0x3A0]
	0x0397F8D0 MOV W19, W31
	0x0397F8D4 MOVN W27, 0x0
	0x0397F8D8 MOVZ W29, 0x1
	0x0397F8DC CMP W19, W8
	0x0397F8E0 B.CS 0x397FC70
	0x0397F8E4 ADD X26, X22, W19, 0x3, SXTW
	0x0397F8E8 LDR X1, [X26 + 0x20]!
	0x0397F8EC MOV X0, X20
	0x0397F8F0 MOV X2, X31
	0x0397F8F4 BL 0x390987C
	0x0397F8F8 MOV X0, X31
	0x0397F8FC BL 0x39204C0
	0x0397F900 CBZ X23, 0x397FC6C
	0x0397F904 LDR X2, [X28]
	0x0397F908 MOV W24, W0
	0x0397F90C MOV X0, X23
	0x0397F910 MOV W1, W24
	0x0397F914 BL 0x2A4500C
	0x0397F918 TBZ X0, 0x0, 0x397F98C
	0x0397F91C ADRP X8, 0x7D1000
	0x0397F920 LDR X8, [X8 + 0x3B0]
	0x0397F924 MOV X0, X23
	0x0397F928 MOV W1, W24
	0x0397F92C LDR X2, [X8]
	0x0397F930 BL 0x2A44D78
	0x0397F934 LDR W8, [X22 + 0x18]
	0x0397F938 CMP W19, W8
	0x0397F93C B.CS 0x397FC70
	0x0397F940 CBZ X0, 0x397FC6C
	0x0397F944 ADRP X9, 0x7CE000
	0x0397F948 LDR X1, [X26]
	0x0397F94C LDR W10, [X0 + 0x1C]
	0x0397F950 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xA63000
	012 Move W8, [X23+2615]
	013 Move W22, W3
	014 Move W21, W2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x7CF000
	022 Move X0, [X0+4080]
	023 Call 0x1C17CF4
	024 Move X0, 0x7D0000
	025 Move X0, [X0+3920]
	026 Call 0x1C17CF4
	027 Move X0, 0x7D0000
	028 Move X0, [X0+8]
	029 Call 0x1C17CF4
	030 Move X0, 0x775000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2615], W8
	035 Subtract W8, W21, 2
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W21, 0
	039 JumpIfNotEqual {238}
	040 Compare X19, 0
	041 JumpIfEqual {249}
	042 Move [X19+96], X20
	043 Move TEMP, X22
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {238}
	047 Move X0, X19
	048 Move X1, X31
	049 Call ProBuilderMesh.get_mesh, X0
	050 Move X8, 0x775000
	051 Move X8, [X8+1432]
	052 Move X21, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {238}
	067 Move X0, X19
	068 Move X1, X31
	069 Call ProBuilderMesh.get_mesh, X0
	070 Compare X0, 0
	071 JumpIfEqual {249}
	072 Move X1, X20
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X2, X31
	082 Move X30, [X31+80]
	083 Move X27, [X31+88]
	084 Call Mesh.set_uv, X0, X1
	085 Return 
	086 Compare X19, 0
	087 JumpIfEqual {249}
	088 Move X0, X19
	089 Move X1, X31
	090 Call ProBuilderMesh.get_vertexCount, X0
	091 Compare X20, 0
	092 JumpIfEqual {249}
	093 Move W8, [X20+24]
	094 Move W24, W0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, 0x7D0000
	097 Move X8, [X8+8]
	098 Move X0, [X8]
	099 Call 0x1C17F10
	100 Move X8, 0x7D0000
	101 Move X8, [X8+3920]
	102 Move W1, W24
	103 Move X23, X0
	104 Move X2, [X8]
	105 Call List`1<Vector4>..ctor, X0, X1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X27, 0x7CF000
	108 Move X27, [X27+4080]
	109 Move X25, X31
	110 Move W24, W24
	111 Add X26, X20, 36
	112 Move W8, [X20+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Compare X23, 0
	115 JumpIfEqual {249}
	116 Move W10, [X23+28]
	117 Move S0, [X26-4]
	118 Move S1, [X26]
	119 Move X9, [X23+16]
	120 Move X8, [X27]
	121 Add W10, W10, 1
	122 Move [X23+28], W10
	123 Compare X9, 0
	124 JumpIfEqual {249}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W11, [X9+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W8, W10, 1
	129 Add X9, X9, X10
	130 Move [X23+24], W8
	131 Move [X9+32], S0
	132 Move [X9+40], S1
	133 Move [X9+40], X31
	134 Move X8, [X8+32]
	135 Move S2, W31
	136 Move S3, W31
	137 Move X0, X23
	138 Move X8, [X8+192]
	139 Move X1, [X8+112]
	140 Call List`1<Vector4>.AddWithResize, X0, X1
	141 Add X25, X25, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add X26, X26, 8
	144 Move X0, X19
	145 Move W1, W21
	146 Move X2, X23
	147 Move X3, X31
	148 Call ProBuilderMesh.SetUVs, X0, X1, X2
	149 Move TEMP, X22
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {238}
	153 Move X0, X19
	154 Move X1, X31
	155 Call ProBuilderMesh.get_mesh, X0
	156 Move X8, 0x775000
	157 Move X8, [X8+1432]
	158 Move X20, X0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X20
	166 Move X1, X31
	167 Move X2, X31
	168 Call Object.op_Inequality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {238}
	173 Move X0, X19
	174 Move X1, X31
	175 Call ProBuilderMesh.get_mesh, X0
	176 Compare X0, 0
	177 JumpIfEqual {249}
	178 Move W1, W21
	179 Move X2, X23
	180 Move X20, [X31+64]
	181 Move X19, [X31+72]
	182 Move X22, [X31+48]
	183 Move X21, [X31+56]
	184 Move X24, [X31+32]
	185 Move X23, [X31+40]
	186 Move X26, [X31+16]
	187 Move X25, [X31+24]
	188 Move X3, X31
	189 Move X30, [X31+80]
	190 Move X27, [X31+88]
	191 Call Mesh.SetUVs, X0, X1, X2
	192 Return 
	193 Move TEMP, X22
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {238}
	197 Compare X19, 0
	198 JumpIfEqual {249}
	199 Move X0, X19
	200 Move X1, X31
	201 Call ProBuilderMesh.get_mesh, X0
	202 Move X8, 0x775000
	203 Move X8, [X8+1432]
	204 Move X21, X0
	205 Move X8, [X8]
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {211}
	209 Move X0, X8
	210 Call 0x1C17DFC
	211 Move X0, X21
	212 Move X1, X31
	213 Move X2, X31
	214 Call Object.op_Inequality, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {238}
	219 Move X0, X19
	220 Move X1, X31
	221 Call ProBuilderMesh.get_mesh, X0
	222 Compare X0, 0
	223 JumpIfEqual {249}
	224 Move X1, X20
	225 Move X20, [X31+64]
	226 Move X19, [X31+72]
	227 Move X22, [X31+48]
	228 Move X21, [X31+56]
	229 Move X24, [X31+32]
	230 Move X23, [X31+40]
	231 Move X26, [X31+16]
	232 Move X25, [X31+24]
	233 Move X2, X31
	234 Move X30, [X31+80]
	235 Move X27, [X31+88]
	236 Call Mesh.set_uv2, X0, X1
	237 Return 
	238 Move X20, [X31+64]
	239 Move X19, [X31+72]
	240 Move X22, [X31+48]
	241 Move X21, [X31+56]
	242 Move X24, [X31+32]
	243 Move X23, [X31+40]
	244 Move X26, [X31+16]
	245 Move X25, [X31+24]
	246 Move X30, [X31+80]
	247 Move X27, [X31+88]
	248 Return 
	249 Call 0x1C17F20
	250 Call 0x1C17F28
	251 Move X0, 0x77F000
	252 Move X0, [X0+3960]
	253 Call 0x1C17D08
	254 Call 0x1C17F10
	255 Move X19, X0
	256 Move X0, 0x79E000
	257 Move X0, [X0+120]
	258 Call 0x1C17D08
	259 Move X1, X0
	260 Move X0, X19
	261 Move X2, X31
	262 Call IndexOutOfRangeException..ctor, X0, X1
	263 Move X0, 0x7D2000
	264 Move X0, [X0+832]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X19
	268 Call 0x1C17DEC

Method: System.Void SewUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes, System.Single delta)

Disassembly:
	0x0397F954 LDR X9, [X9 + 0xE10]
	0x0397F958 ADD W10, W10, 0x1
	0x0397F95C LDR X9, [X9]
	0x0397F960 STR W10, [X0 + 0x1C]
	0x0397F964 CBZ X8, 0x397FC6C
	0x0397F968 LDRSW X10, [X0 + 0x18]
	0x0397F96C LDR W11, [X8 + 0x18]
	0x0397F970 CMP W10, W11
	0x0397F974 B.CS 0x397FA08
	0x0397F978 ADD W9, W10, 0x1
	0x0397F97C ADD X8, X8, X10, 0x3, LSL
	0x0397F980 STR W9, [X0 + 0x18]
	0x0397F984 STR X1, [X8 + 0x20]
	0x0397F988 B 0x397FA4C
	0x0397F98C ADRP X8, 0x7CE000
	0x0397F990 LDR X8, [X8 + 0xDF0]
	0x0397F994 LDR X0, [X8]
	0x0397F998 BL 0x1C16F10
	0x0397F99C ADRP X8, 0x7CF000
	0x0397F9A0 LDR X8, [X8 + 0xA38]
	0x0397F9A4 MOV X25, X0
	0x0397F9A8 LDR X1, [X8]
	0x0397F9AC BL 0x301B7C4
	0x0397F9B0 LDR W8, [X22 + 0x18]
	0x0397F9B4 CMP W19, W8
	0x0397F9B8 B.CS 0x397FC70
	0x0397F9BC CBZ X25, 0x397FC6C
	0x0397F9C0 ADRP X9, 0x7CE000
	0x0397F9C4 LDR X1, [X26]
	0x0397F9C8 LDR W10, [X25 + 0x1C]
	0x0397F9CC LDR X8, [X25 + 0x10]
	0x0397F9D0 LDR X9, [X9 + 0xE10]
	0x0397F9D4 ADD W10, W10, 0x1
	0x0397F9D8 LDR X9, [X9]
	0x0397F9DC STR W10, [X25 + 0x1C]
	0x0397F9E0 CBZ X8, 0x397FC6C
	0x0397F9E4 LDRSW X10, [X25 + 0x18]
	0x0397F9E8 LDR W11, [X8 + 0x18]
	0x0397F9EC CMP W10, W11
	0x0397F9F0 B.CS 0x397FA1C
	0x0397F9F4 ADD W9, W10, 0x1
	0x0397F9F8 ADD X8, X8, X10, 0x3, LSL
	0x0397F9FC STR W9, [X25 + 0x18]
	0x0397FA00 STR X1, [X8 + 0x20]
	0x0397FA04 B 0x397FA30
	0x0397FA08 LDR X8, [X9 + 0x20]
	0x0397FA0C LDR X8, [X8 + 0xC0]
	0x0397FA10 LDR X2, [X8 + 0x70]
	0x0397FA14 BL 0x301BF90
	0x0397FA18 B 0x397FA4C
	0x0397FA1C LDR X8, [X9 + 0x20]
	0x0397FA20 MOV X0, X25
	0x0397FA24 LDR X8, [X8 + 0xC0]
	0x0397FA28 LDR X2, [X8 + 0x70]
	0x0397FA2C BL 0x301BF90
	0x0397FA30 ADRP X8, 0x7D1000
	0x0397FA34 LDR X8, [X8 + 0x398]
	0x0397FA38 MOV X0, X23
	0x0397FA3C MOV W1, W24
	0x0397FA40 MOV X2, X25
	0x0397FA44 LDR X3, [X8]
	0x0397FA48 BL 0x2A44E18
	0x0397FA4C LDR X8, [X22 + 0x18]
	0x0397FA50 CMP W19, W8
	0x0397FA54 B.CS 0x397FC70
	0x0397FA58 LDR X9, [X26]
	0x0397FA5C CBZ X9, 0x397FC6C
	0x0397FA60 ADD W19, W19, 0x1
	0x0397FA64 CMP W19, W8
	0x0397FA68 STR W27, [X9 + 0x50]
	0x0397FA6C STRB W29, [X9 + 0x4C]
	0x0397FA70 B.LT 0x397F8DC
	0x0397FA74 CBZ X23, 0x397FC6C
	0x0397FA78 ADRP X8, 0x7D1000
	0x0397FA7C LDR X8, [X8 + 0x3A8]
	0x0397FA80 ADRP X27, 0x7D1000
	0x0397FA84 ADRP X28, 0x7D1000
	0x0397FA88 ADRP X26, 0x7D1000
	0x0397FA8C LDR X27, [X27 + 0x3C0]
	0x0397FA90 LDR X28, [X28 + 0x338]
	0x0397FA94 LDR X26, [X26 + 0x3E0]
	0x0397FA98 LDR X1, [X8]
	0x0397FA9C ADRP X19, 0x7CE000
	0x0397FAA0 ADRP X29, 0x776000
	0x0397FAA4 LDR X19, [X19 + 0xFA0]
	0x0397FAA8 LDR X29, [X29 + 0x9C8]
	0x0397FAAC ADD X8, X31, 0x8
	0x0397FAB0 MOV X0, X23
	0x0397FAB4 BL 0x2A45240
	0x0397FAB8 LDUR V0, [X31 + 0x8]
	0x0397FABC LDUR V1, [X31 + 0x18]
	0x0397FAC0 LDR X8, [X31 + 0x28]
	0x0397FAC4 STP V0, V1, [X31 + 0x30]
	0x0397FAC8 STR X8, [X31 + 0x50]
	0x0397FACC LDR X1, [X27]
	0x0397FAD0 ADD X0, X31, 0x30
	0x0397FAD4 BL 0x2BFE354
	0x0397FAD8 TBZ X0, 0x0, 0x397FC0C
	0x0397FADC LDR X8, [X28]
	0x0397FAE0 LDR W22, [X31 + 0x40]
	0x0397FAE4 LDR X23, [X31 + 0x48]
	0x0397FAE8 LDR W9, [X8 + 0xE0]
	0x0397FAEC CBNZ W9, 0x397FAFC
	0x0397FAF0 MOV X0, X8
	0x0397FAF4 BL 0x1C16DFC
	0x0397FAF8 LDR X8, [X28]
	0x0397FAFC LDR X9, [X8 + 0xB8]
	0x0397FB00 LDR X24, [X9 + 0x28]
	0x0397FB04 CBNZ X24, 0x397FB54
	0x0397FB08 LDR W9, [X8 + 0xE0]
	0x0397FB0C CBNZ W9, 0x397FB1C
	0x0397FB10 MOV X0, X8
	0x0397FB14 BL 0x1C16DFC
	0x0397FB18 LDR X8, [X28]
	0x0397FB1C LDR X8, [X8 + 0xB8]
	0x0397FB20 LDR X25, [X8]
	0x0397FB24 ADRP X8, 0x7CE000
	0x0397FB28 LDR X8, [X8 + 0xFA8]
	0x0397FB2C LDR X0, [X8]
	0x0397FB30 BL 0x1C16F10
	0x0397FB34 LDR X2, [X26]
	0x0397FB38 MOV X24, X0
	0x0397FB3C MOV X1, X25
	0x0397FB40 MOV X3, X31
	0x0397FB44 BL 0x2D30578
	0x0397FB48 LDR X8, [X28]
	0x0397FB4C LDR X8, [X8 + 0xB8]
	0x0397FB50 STR X24, [X8 + 0x28]
	0x0397FB54 LDR X2, [X19]
	0x0397FB58 MOV X0, X23
	0x0397FB5C MOV X1, X24
	0x0397FB60 BL 0x21D0FD8
	0x0397FB64 LDR X1, [X29]
	0x0397FB68 BL 0x21D54D4
	0x0397FB6C CBZ X20, 0x397FC74
	0x0397FB70 LDR X24, [X20 + 0x58]
	0x0397FB74 MOV X23, X0
	0x0397FB78 MOV W0, W22
	0x0397FB7C MOV X1, X31
	0x0397FB80 BL 0x392173C
	0x0397FB84 MOV X0, X24
	0x0397FB88 MOV X1, X23
	0x0397FB8C MOV X2, X31
	0x0397FB90 BL 0x391FB78
	0x0397FB94 CBZ X23, 0x397FC78
	0x0397FB98 LDR W9, [X23 + 0x18]
	0x0397FB9C CMP W9, 0x1
	0x0397FBA0 B.LT 0x397FBFC
	0x0397FBA4 MOV W8, W31
	0x0397FBA8 CMP W8, W9
	0x0397FBAC B.CS 0x397FC60
	0x0397FBB0 CBZ X0, 0x397FC5C
	0x0397FBB4 LDR W9, [X0 + 0x18]
	0x0397FBB8 SXTW X8, W8
	0x0397FBBC CMP W8, W9
	0x0397FBC0 B.CS 0x397FC68
	0x0397FBC4 CBZ X21, 0x397FC58
	0x0397FBC8 ADD X9, X23, X8, 0x2, LSL
	0x0397FBCC LDRSW X9, [X9 + 0x20]
	0x0397FBD0 LDR W10, [X21 + 0x18]
	0x0397FBD4 CMP W9, W10
	0x0397FBD8 B.CS 0x397FC64
	0x0397FBDC ADD X10, X0, X8, 0x3, LSL
	0x0397FBE0 LDR V0, [X10 + 0x20]
	0x0397FBE4 ADD X9, X21, X9, 0x3, LSL
	0x0397FBE8 ADD W8, W8, 0x1
	0x0397FBEC STR D0, [X9 + 0x20]
	0x0397FBF0 LDR W9, [X23 + 0x18]
	0x0397FBF4 CMP W8, W9
	0x0397FBF8 B.LT 0x397FBA8
	0x0397FBFC MOV X0, X20
	0x0397FC00 MOV X1, X23
	0x0397FC04 BL 0x397E274
	0x0397FC08 B 0x397FACC
	0x0397FC0C ADRP X8, 0x7D1000
	0x0397FC10 LDR X8, [X8 + 0x3B8]
	0x0397FC14 ADD X0, X31, 0x30
	0x0397FC18 LDR X1, [X8]
	0x0397FC1C BL 0x2BFE46C
	0x0397FC20 LDR W19, [X31 + 0x4]
	0x0397FC24 MOVZ W3, 0x1
	0x0397FC28 MOV X0, X20
	0x0397FC2C MOV X1, X21
	0x0397FC30 MOV W2, W19
	0x0397FC34 BL 0x397E604
	0x0397FC38 LDP X20, X19, [X31 + 0xB0]
	0x0397FC3C LDP X22, X21, [X31 + 0xA0]
	0x0397FC40 LDP X24, X23, [X31 + 0x90]
	0x0397FC44 LDP X26, X25, [X31 + 0x80]
	0x0397FC48 LDP X28, X27, [X31 + 0x70]
	0x0397FC4C LDP X29, X30, [X31 + 0x60]
	0x0397FC50 ADD X31, X31, 0xC0
	0x0397FC54 RET
	0x0397FC58 BL 0x1C16F20
	0x0397FC5C BL 0x1C16F20
	0x0397FC60 BL 0x1C16F28
	0x0397FC64 BL 0x1C16F28
	0x0397FC68 BL 0x1C16F28
	0x0397FC6C BL 0x1C16F20
	0x0397FC70 BL 0x1C16F28
	0x0397FC74 BL 0x1C16F20
	0x0397FC78 BL 0x1C16F20
	0x0397FC7C B 0x397FCB0
	0x0397FC80 B 0x397FCB0
	0x0397FC84 B 0x397FCB0
	0x0397FC88 B 0x397FCB0
	0x0397FC8C B 0x397FCB0
	0x0397FC90 B 0x397FCB0
	0x0397FC94 B 0x397FCB0
	0x0397FC98 B 0x397FCB0
	0x0397FC9C B 0x397FCB0
	0x0397FCA0 B 0x397FCB0
	0x0397FCA4 B 0x397FCB0
	0x0397FCA8 B 0x397FCB0
	0x0397FCAC B 0x397FCB0
	0x0397FCB0 LDR W19, [X31 + 0x4]
	0x0397FCB4 MOV X22, X0
	0x0397FCB8 CMP W1, 0x1
	0x0397FCBC B.NE 0x397FCF0
	0x0397FCC0 MOV X0, X22
	0x0397FCC4 BL 0x3EB1AD0
	0x0397FCC8 LDR X23, [X0]
	0x0397FCCC BL 0x3EB1AE0
	0x0397FCD0 ADRP X8, 0x7D1000
	0x0397FCD4 LDR X8, [X8 + 0x3B8]
	0x0397FCD8 ADD X0, X31, 0x30
	0x0397FCDC LDR X1, [X8]
	0x0397FCE0 BL 0x2BFE46C
	0x0397FCE4 CBZ X23, 0x397FC24
	0x0397FCE8 MOV X0, X23
	0x0397FCEC BL 0x1C16F18
	0x0397FCF0 MOV X23, X31
	0x0397FCF4 B 0x397FCFC
	0x0397FCF8 MOV X22, X0
	0x0397FCFC ADRP X8, 0x7D1000
	0x0397FD00 LDR X8, [X8 + 0x3B8]
	0x0397FD04 LDR X1, [X8]
	0x0397FD08 ADD X0, X31, 0x30
	0x0397FD0C BL 0x2BFE46C
	0x0397FD10 CBNZ X23, 0x397FD1C
	0x0397FD14 MOV X0, X22
	0x0397FD18 BL 0x1D2C690
	0x0397FD1C MOV X0, X23
	0x0397FD20 BL 0x1C16F18
	0x0397FD24 BL 0x1990590
	0x0397FD28 STR X30, [X31 - 0x10]!
	0x0397FD2C CBZ X1, 0x397FD38
	0x0397FD30 ADD X8, X1, 0x18
	0x0397FD34 B 0x397FD40
	0x0397FD38 CBZ X0, 0x397FE0C
	0x0397FD3C ADD X8, X0, 0x18
	0x0397FD40 LDR X9, [X8]
	0x0397FD44 CMP W9, 0x1
	0x0397FD48 B.LT 0x397FDF0
	0x0397FD4C FCMP S0, 0x0
	0x0397FD50 CSET W10, EQ
	0x0397FD54 FCMP S1, 0x0
	0x0397FD58 CSET W11, EQ
	0x0397FD5C MOV X8, X31
	0x0397FD60 AND X9, X9, 0x0
	0x0397FD64 AND W11, W10, W11, 0x0
	0x0397FD68 ADD X10, X1, 0x20
	0x0397FD6C CBZ X1, 0x397FD88
	0x0397FD70 LDR W12, [X1 + 0x18]
	0x0397FD74 CMP X8, X12
	0x0397FD78 B.CS 0x397FE08
	0x0397FD7C LDR W12, [X10, X8, LSL #2]
	0x0397FD80 CBNZ X0, 0x397FD90
	0x0397FD84 B 0x397FE0C
	0x0397FD88 MOV W12, W8
	0x0397FD8C CBZ X0, 0x397FE0C
	0x0397FD90 LDR W13, [X0 + 0x18]
	0x0397FD94 CMP W12, W13
	0x0397FD98 B.CS 0x397FE08
	0x0397FD9C ADD X13, X0, W12, 0x3, SXTW
	0x0397FDA0 LDR V2, [X13 + 0x20]
	0x0397FDA4 SXTW X12, W12
	0x0397FDA8 TBZ X11, 0x0, 0x397FDB8
	0x0397FDAC ADD X11, X0, X12, 0x3, LSL
	0x0397FDB0 LDR V3, [X11 + 0x24]
	0x0397FDB4 B 0x397FDD4
	0x0397FDB8 ADD X11, X0, X12, 0x3, LSL
	0x0397FDBC LDR V3, [X11 + 0x24]
	0x0397FDC0 FCMP S2, S0
	0x0397FDC4 FCSEL S2, S2, S0, MI
	0x0397FDC8 FCMP S3, S1
	0x0397FDCC B.MI 0x397FDD4
	0x0397FDD0 MOV V3.16B, V1.16B
	0x0397FDD4 ADD X8, X8, 0x1
	0x0397FDD8 MOV W11, W31
	0x0397FDDC CMP X9, X8
	0x0397FDE0 MOV V0.16B, V2.16B
	0x0397FDE4 MOV V1.16B, V3.16B
	0x0397FDE8 B.NE 0x397FD6C
	0x0397FDEC B 0x397FDF8
	0x0397FDF0 MOV V3.16B, V1.16B
	0x0397FDF4 MOV V2.16B, V0.16B
	0x0397FDF8 MOV V0.16B, V2.16B
	0x0397FDFC MOV V1.16B, V3.16B
	0x0397FE00 LDR X30, [X31], #0x10
	0x0397FE04 RET
	0x0397FE08 BL 0x1C16F28
	0x0397FE0C BL 0x1C16F20
	0x0397FE10 SUB X31, X31, 0xC0
	0x0397FE14 STP X29, X30, [X31 + 0x60]
	0x0397FE18 STP X28, X27, [X31 + 0x70]
	0x0397FE1C STP X26, X25, [X31 + 0x80]
	0x0397FE20 STP X24, X23, [X31 + 0x90]
	0x0397FE24 STP X22, X21, [X31 + 0xA0]
	0x0397FE28 STP X20, X19, [X31 + 0xB0]
	0x0397FE2C ADRP X23, 0xA62000
	0x0397FE30 ADRP X21, 0x7D1000
	0x0397FE34 ADRP X19, 0x7D1000
	0x0397FE38 LDRB W8, [X23 + 0xA3E]
	0x0397FE3C LDR X21, [X21 + 0x388]
	0x0397FE40 LDR X19, [X19 + 0x390]
	0x0397FE44 MOV W24, W2
	0x0397FE48 MOV X22, X1
	0x0397FE4C MOV X20, X0
	0x0397FE50 TBNZ X8, 0x0, 0x397FF40
	0x0397FE54 ADRP X0, 0x7D1000
	0x0397FE58 LDR X0, [X0 + 0x398]
	0x0397FE5C BL 0x1C16CF4
	0x0397FE60 ADRP X0, 0x7D1000
	0x0397FE64 LDR X0, [X0 + 0x3A0]
	0x0397FE68 BL 0x1C16CF4
	0x0397FE6C ADRP X0, 0x7D1000
	0x0397FE70 LDR X0, [X0 + 0x3A8]
	0x0397FE74 BL 0x1C16CF4
	0x0397FE78 ADRP X0, 0x7D1000
	0x0397FE7C LDR X0, [X0 + 0x390]
	0x0397FE80 BL 0x1C16CF4
	0x0397FE84 ADRP X0, 0x7D1000
	0x0397FE88 LDR X0, [X0 + 0x3B0]
	0x0397FE8C BL 0x1C16CF4
	0x0397FE90 ADRP X0, 0x7D1000
	0x0397FE94 LDR X0, [X0 + 0x388]
	0x0397FE98 BL 0x1C16CF4
	0x0397FE9C ADRP X0, 0x7CE000
	0x0397FEA0 LDR X0, [X0 + 0xFA0]
	0x0397FEA4 BL 0x1C16CF4
	0x0397FEA8 ADRP X0, 0x776000
	0x0397FEAC LDR X0, [X0 + 0x9C8]
	0x0397FEB0 BL 0x1C16CF4
	0x0397FEB4 ADRP X0, 0x7D1000
	0x0397FEB8 LDR X0, [X0 + 0x3B8]
	0x0397FEBC BL 0x1C16CF4
	0x0397FEC0 ADRP X0, 0x7D1000
	0x0397FEC4 LDR X0, [X0 + 0x3C0]
	0x0397FEC8 BL 0x1C16CF4
	0x0397FECC ADRP X0, 0x7D1000
	0x0397FED0 LDR X0, [X0 + 0x3C8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X29
	007 Move [X31+72], X30
	008 Move [X31+80], X28
	009 Move [X31+88], X27
	010 Move [X31+96], X26
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move X20, 0xA63000
	019 Move W8, [X20+2616]
	020 Move V8, V0
	021 Move X19, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {71}
	027 Move X0, 0x77F000
	028 Move X0, [X0+2136]
	029 Call 0x1C17CF4
	030 Move X0, 0x77F000
	031 Move X0, [X0+2160]
	032 Call 0x1C17CF4
	033 Move X0, 0x7D0000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0x79F000
	037 Move X0, [X0+2224]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D2000
	040 Move X0, [X0+840]
	041 Call 0x1C17CF4
	042 Move X0, 0x777000
	043 Move X0, [X0+2504]
	044 Call 0x1C17CF4
	045 Move X0, 0x7D0000
	046 Move X0, [X0+3416]
	047 Call 0x1C17CF4
	048 Move X0, 0x7D2000
	049 Move X0, [X0+848]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D0000
	052 Move X0, [X0+3424]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D2000
	055 Move X0, [X0+856]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D2000
	058 Move X0, [X0+864]
	059 Call 0x1C17CF4
	060 Move X0, 0x7D2000
	061 Move X0, [X0+872]
	062 Call 0x1C17CF4
	063 Move X0, 0x7D2000
	064 Move X0, [X0+824]
	065 Call 0x1C17CF4
	066 Move X0, 0x7CF000
	067 Move X0, [X0+2696]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2616], W8
	071 Move [X31+28], W31
	072 Compare X22, 0
	073 JumpIfEqual {367}
	074 Move X21, [X22+96]
	075 Compare X21, 0
	076 JumpIfEqual {82}
	077 Move X0, X22
	078 Move X1, X31
	079 Call ProBuilderMesh.get_vertexCount, X0
	080 Move W8, [X21+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X20, 0x7CF000
	083 Move X20, [X20+2696]
	084 Move X0, X22
	085 Move X1, X31
	086 Call ProBuilderMesh.get_vertexCount, X0
	087 Move X8, [X20]
	088 Move W1, W0
	089 Move X0, X8
	090 Call 0x1C17D6C
	091 Move X21, X0
	092 Move X0, X22
	093 Move X1, X31
	094 Move [X31], X22
	095 Call ProBuilderMesh.get_sharedTextureLookup, X0
	096 Compare X19, 0
	097 JumpIfEqual {367}
	098 Move X8, [X19+24]
	099 Move X9, INVALID
	100 Move X22, X0
	101 Add X9, X9, X8
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X29, 0x79F000
	104 Move X29, [X29+2224]
	105 Move X27, X31
	106 NotImplemented "Instruction MOVI not yet implemented."
	107 Move W23, 1
	108 Add X11, X27, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X19, X27
	111 Add X20, X8, 32
	112 Move [X31+8], X11
	113 Move [X31+16], X23
	114 Move X8, 0x7D2000
	115 Move X8, [X8+872]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X31
	119 Move X24, X0
	120 Call Object..ctor, X0
	121 Move W8, [X19+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Compare X22, 0
	124 JumpIfEqual {367}
	125 Move X8, 0x77F000
	126 Move W1, [X20]
	127 Move X8, [X8+2160]
	128 Add X2, X31, 28
	129 Move X0, X22
	130 Move X3, [X8]
	131 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {152}
	136 Move W8, [X19+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, 0x7D0000
	139 Move W25, [X20]
	140 Move X8, [X8+3448]
	141 Move X0, X22
	142 Move X1, [X8]
	143 Call Dictionary`2<Int32, Int32>.get_Count, X0
	144 Move X8, 0x77F000
	145 Move X8, [X8+2136]
	146 Move W2, W0
	147 Move [X31+28], W0
	148 Move X0, X22
	149 Move X3, [X8]
	150 Move W1, W25
	151 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	152 Move W8, [X19+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare X24, 0
	155 JumpIfEqual {367}
	156 Add X8, X19, X23
	157 Add X28, X8, 32
	158 Move X8, 0x77F000
	159 Move W1, [X28]
	160 Move X8, [X8+2160]
	161 Add X25, X24, 16
	162 Move X0, X22
	163 Move X2, X25
	164 Move X3, [X8]
	165 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {186}
	170 Move W8, [X19+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X8, 0x7D0000
	173 Move W26, [X28]
	174 Move X8, [X8+3448]
	175 Move X0, X22
	176 Move X1, [X8]
	177 Call Dictionary`2<Int32, Int32>.get_Count, X0
	178 Move [X25], W0
	179 Move X8, 0x77F000
	180 Move X8, [X8+2136]
	181 Move W2, W0
	182 Move X0, X22
	183 Move W1, W26
	184 Move X3, [X8]
	185 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	186 Move W8, [X31+28]
	187 Move W9, [X25]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X9, [X19+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Compare X21, 0
	192 JumpIfEqual {367}
	193 NotImplemented "Instruction LDRSW not yet implemented."
	194 Move W10, [X21+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X8, X21, X8
	200 Add X9, X21, X9
	201 Move X10, 0xA63000
	202 Move W10, [X10+2064]
	203 Move V10, [X8+32]
	204 Move V11, [X9+32]
	205 Compare W10, 0
	206 JumpIfNotEqual {213}
	207 Move X0, 0x775000
	208 Move X0, [X0+1448]
	209 Call 0x1C17CF4
	210 Move W8, 1
	211 Move X9, 0xA63000
	212 Move [X9+2064], W8
	213 Move X8, 0x775000
	214 Move X8, [X8+1448]
	215 Move X0, [X8]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Subtract V0, V10, V11
	221 NotImplemented "Instruction INVALID not yet implemented."
	222 NotImplemented "Instruction FADDP not yet implemented."
	223 NotImplemented "Instruction FSQRT not yet implemented."
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 Move X9, [X19+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Move W10, [X21+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X8, X21, X8
	231 Add X8, X8, 32
	232 Move V0, [X8]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Add X9, X21, X9
	237 Move V1, [X9+32]
	238 Add V0, V0, V1
	239 NotImplemented "Instruction INVALID not yet implemented."
	240 Move [X8], D0
	241 Move W8, [X19+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Move W9, [X21+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add X8, X21, X8
	247 Move [X8+32], D0
	248 Move X8, 0x7D0000
	249 Move X8, [X8+3424]
	250 Move X0, [X8]
	251 Call 0x1C17F10
	252 Move X8, 0x7D2000
	253 Move X8, [X8+864]
	254 Move X1, X24
	255 Move X3, X31
	256 Move X25, X0
	257 Move X2, [X8]
	258 Call Func`2<KeyValuePair`2<Int32, Int32>, Boolean>..ctor, X0, X1, X2
	259 Move X8, 0x7D0000
	260 Move X8, [X8+3416]
	261 Move X0, X22
	262 Move X1, X25
	263 Move X2, [X8]
	264 Call Enumerable.Where, X0, X1
	265 Move X8, 0x7D2000
	266 Move X8, [X8+824]
	267 Move X24, X0
	268 Move X8, [X8]
	269 Move W9, [X8+224]
	270 Compare W9, 0
	271 JumpIfNotEqual {277}
	272 Move X0, X8
	273 Call 0x1C17DFC
	274 Move X8, 0x7D2000
	275 Move X8, [X8+824]
	276 Move X8, [X8]
	277 Move X9, [X8+184]
	278 Move X25, [X9+16]
	279 Compare X25, 0
	280 JumpIfNotEqual {307}
	281 Move W9, [X8+224]
	282 Compare W9, 0
	283 JumpIfEqual {286}
	284 Move X28, 0x7D2000
	285 Move X28, [X28+824]
	286 Move X0, X8
	287 Call 0x1C17DFC
	288 Move X28, 0x7D2000
	289 Move X28, [X28+824]
	290 Move X8, [X28]
	291 Move X8, [X8+184]
	292 Move X26, [X8]
	293 Move X8, 0x7D2000
	294 Move X8, [X8+848]
	295 Move X0, [X8]
	296 Call 0x1C17F10
	297 Move X8, 0x7D2000
	298 Move X8, [X8+856]
	299 Move X1, X26
	300 Move X3, X31
	301 Move X25, X0
	302 Move X2, [X8]
	303 Call Func`2<KeyValuePair`2<Int32, Int32>, Int32>..ctor, X0, X1, X2
	304 Move X8, [X28]
	305 Move X8, [X8+184]
	306 Move [X8+16], X25
	307 Move X8, 0x7D2000
	308 Move X8, [X8+840]
	309 Move X0, X24
	310 Move X1, X25
	311 Move X2, [X8]
	312 Call Enumerable.Select, X0, X1
	313 Move X8, 0x777000
	314 Move X8, [X8+2504]
	315 Move X1, [X8]
	316 Call Enumerable.ToArray, X0
	317 Compare X0, 0
	318 JumpIfEqual {367}
	319 Move X8, [X0+24]
	320 Move X24, X0
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move X25, X31
	323 And X8, X8, 0
	324 Add X26, X24, 32
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W1, [X26]
	327 Move W2, [X31+28]
	328 Move X3, [X29]
	329 Move X0, X22
	330 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	331 Move W8, [X24+24]
	332 Add X25, X25, 1
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, [X19+24]
	335 Add X23, X23, 1
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move X11, [X31+8]
	338 Move X23, [X31+16]
	339 Add W9, W23, 1
	340 Subtract W10, W8, 1
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move X23, W9
	343 Move X27, X11
	344 Move X0, [X31]
	345 Move X1, X22
	346 Move X2, X31
	347 Call ProBuilderMesh.SetSharedTextures, X0, X1
	348 Move X20, [X31+144]
	349 Move X19, [X31+152]
	350 Move X22, [X31+128]
	351 Move X21, [X31+136]
	352 Move X24, [X31+112]
	353 Move X23, [X31+120]
	354 Move X26, [X31+96]
	355 Move X25, [X31+104]
	356 Move X28, [X31+80]
	357 Move X27, [X31+88]
	358 Move X29, [X31+64]
	359 Move X30, [X31+72]
	360 Move D9, [X31+48]
	361 Move D8, [X31+56]
	362 Move D11, [X31+32]
	363 Move D10, [X31+40]
	364 Add X31, X31, 160
	365 Return 
	366 Call 0x1C17F28
	367 Call 0x1C17F20

Method: System.Void CollapseUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes)

Disassembly:
	0x0397FEDC LDR X0, [X0 + 0xFA8]
	0x0397FEE0 BL 0x1C16CF4
	0x0397FEE4 ADRP X0, 0x7D1000
	0x0397FEE8 LDR X0, [X0 + 0x3D0]
	0x0397FEEC BL 0x1C16CF4
	0x0397FEF0 ADRP X0, 0x7D1000
	0x0397FEF4 LDR X0, [X0 + 0x3D8]
	0x0397FEF8 BL 0x1C16CF4
	0x0397FEFC ADRP X0, 0x7CE000
	0x0397FF00 LDR X0, [X0 + 0xE10]
	0x0397FF04 BL 0x1C16CF4
	0x0397FF08 ADRP X0, 0x7CF000
	0x0397FF0C LDR X0, [X0 + 0xA38]
	0x0397FF10 BL 0x1C16CF4
	0x0397FF14 ADRP X0, 0x7CE000
	0x0397FF18 LDR X0, [X0 + 0xDF0]
	0x0397FF1C BL 0x1C16CF4
	0x0397FF20 ADRP X0, 0x7D1000
	0x0397FF24 LDR X0, [X0 + 0x3E8]
	0x0397FF28 BL 0x1C16CF4
	0x0397FF2C ADRP X0, 0x7D1000
	0x0397FF30 LDR X0, [X0 + 0x338]
	0x0397FF34 BL 0x1C16CF4
	0x0397FF38 MOVZ W8, 0x1
	0x0397FF3C STRB W8, [X23 + 0xA3E]
	0x0397FF40 MOVI V0.2D, 0x0
	0x0397FF44 MOV X0, X20
	0x0397FF48 MOV W1, W24
	0x0397FF4C STR X31, [X31 + 0x50]
	0x0397FF50 STP V0, V0, [X31 + 0x30]
	0x0397FF54 STR W24, [X31 + 0x4]
	0x0397FF58 BL 0x397E034
	0x0397FF5C LDR X8, [X21]
	0x0397FF60 MOV X21, X0
	0x0397FF64 MOV X0, X8
	0x0397FF68 BL 0x1C16F10
	0x0397FF6C LDR X1, [X19]
	0x0397FF70 MOV X23, X0
	0x0397FF74 BL 0x2A44560
	0x0397FF78 CBZ X22, 0x3980348
	0x0397FF7C LDR W8, [X22 + 0x18]
	0x0397FF80 CMP W8, 0x1
	0x0397FF84 B.LT 0x3980134
	0x0397FF88 ADRP X28, 0x7D1000
	0x0397FF8C LDR X28, [X28 + 0x3A0]
	0x0397FF90 MOV W19, W31
	0x0397FF94 MOVN W27, 0x0
	0x0397FF98 MOVZ W29, 0x1
	0x0397FF9C CMP W19, W8
	0x0397FFA0 B.CS 0x398034C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA63000
	006 Move W8, [X21+2617]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7D2000
	014 Move X0, [X0+880]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2617], W8
	018 Compare X20, 0
	019 JumpIfEqual {58}
	020 Move X8, 0x7D2000
	021 Move X8, [X8+880]
	022 Move X21, [X20+96]
	023 Move X1, X19
	024 Move X2, [X8]
	025 Move X0, X21
	026 Call 0x2182260, X0, X1
	027 Move X1, X31
	028 Move X2, X31
	029 Call Math.Average, X0, X1
	030 Compare X19, 0
	031 JumpIfEqual {58}
	032 Move W9, [X19+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, W31
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X21, 0
	037 JumpIfEqual {58}
	038 Add X9, X19, W8
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W10, [X21+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X9, X21, X9
	043 Move [X9+32], S0
	044 Move [X9+40], S1
	045 Move W9, [X19+24]
	046 Add W8, W8, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X2, X31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call ProBuilderMesh.SetTexturesCoincident, X0, X1
	056 Return 
	057 Call 0x1C17F28
	058 Call 0x1C17F20

Method: System.Void SplitUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> indexes)

Disassembly:
	0x0397F274 LDRSW X9, [X10]
	0x0397F278 ADD X8, X8, X9, 0x4, LSL
	0x0397F27C ADD X0, X8, 0x138
	0x0397F280 LDP X8, X1, [X0]
	0x0397F284 MOV X0, X21
	0x0397F288 BLR X8
	0x0397F28C CBNZ X22, 0x397F2E0
	0x0397F290 CMP W23, 0x7
	0x0397F294 B.EQ 0x397F29C
	0x0397F298 CBNZ W23, 0x397F2AC
	0x0397F29C LDR X0, [X31]
	0x0397F2A0 MOV X1, X20
	0x0397F2A4 MOV X2, X31
	0x0397F2A8 BL 0x391634C
	0x0397F2AC LDP X20, X19, [X31 + 0x60]
	0x0397F2B0 LDP X22, X21, [X31 + 0x50]
	0x0397F2B4 LDP X24, X23, [X31 + 0x40]
	0x0397F2B8 LDP X26, X25, [X31 + 0x30]
	0x0397F2BC LDP X28, X27, [X31 + 0x20]
	0x0397F2C0 LDP X29, X30, [X31 + 0x10]
	0x0397F2C4 ADD X31, X31, 0x70
	0x0397F2C8 RET
	0x0397F2CC BL 0x1C16F20
	0x0397F2D0 BL 0x1C16F20
	0x0397F2D4 BL 0x1C16F28
	0x0397F2D8 BL 0x1C16F20
	0x0397F2DC BL 0x1C16F20
	0x0397F2E0 MOV X0, X22
	0x0397F2E4 BL 0x1C16F18
	0x0397F2E8 B 0x397F308
	0x0397F2EC B 0x397F308
	0x0397F2F0 B 0x397F308
	0x0397F2F4 B 0x397F308
	0x0397F2F8 B 0x397F308
	0x0397F2FC B 0x397F308
	0x0397F300 B 0x397F308
	0x0397F304 B 0x397F308
	0x0397F308 CMP W1, 0x1
	0x0397F30C B.NE 0x397F328
	0x0397F310 BL 0x3EB1AD0
	0x0397F314 LDR X22, [X0]
	0x0397F318 BL 0x3EB1AE0
	0x0397F31C MOV W23, W31
	0x0397F320 CBNZ X21, 0x397F22C
	0x0397F324 B 0x397F28C
	0x0397F328 MOV X19, X0
	0x0397F32C MOV X22, X31
	0x0397F330 B 0x397F338
	0x0397F334 MOV X19, X0
	0x0397F338 CBZ X21, 0x397F39C
	0x0397F33C LDR X8, [X21]
	0x0397F340 ADRP X10, 0x774000
	0x0397F344 LDRH W9, [X8 + 0x12E]
	0x0397F348 LDR X10, [X10 + 0xE00]
	0x0397F34C LDR X1, [X10]
	0x0397F350 CBZ X9, 0x397F374
	0x0397F354 LDR X10, [X8 + 0xB0]
	0x0397F358 ADD X10, X10, 0x8
	0x0397F35C LDUR X11, [X10 - 0x8]
	0x0397F360 CMP X11, X1
	0x0397F364 B.EQ 0x397F384
	0x0397F368 SUBS X9, X9, 0x1
	0x0397F36C ADD X10, X10, 0x10
	0x0397F370 B.NE 0x397F35C
	0x0397F374 MOV X0, X21
	0x0397F378 MOV W2, W31
	0x0397F37C BL 0x1C5C788
	0x0397F380 B 0x397F390
	0x0397F384 LDRSW X9, [X10]
	0x0397F388 ADD X8, X8, X9, 0x4, LSL
	0x0397F38C ADD X0, X8, 0x138
	0x0397F390 LDP X8, X1, [X0]
	0x0397F394 MOV X0, X21
	0x0397F398 BLR X8
	0x0397F39C CBNZ X22, 0x397F3A8
	0x0397F3A0 MOV X0, X19
	0x0397F3A4 BL 0x1D2C690
	0x0397F3A8 MOV X0, X22
	0x0397F3AC BL 0x1C16F18
	0x0397F3B0 BL 0x1990590
	0x0397F3B4 STR D10, [X31 - 0x70]!
	0x0397F3B8 STP D9, D8, [X31 + 0x10]
	0x0397F3BC STP X30, X27, [X31 + 0x20]
	0x0397F3C0 STP X26, X25, [X31 + 0x30]
	0x0397F3C4 STP X24, X23, [X31 + 0x40]
	0x0397F3C8 STP X22, X21, [X31 + 0x50]
	0x0397F3CC STP X20, X19, [X31 + 0x60]
	0x0397F3D0 ADRP X22, 0xA62000
	0x0397F3D4 LDRB W8, [X22 + 0xA3C]
	0x0397F3D8 MOV W21, W2
	0x0397F3DC MOV X20, X1
	0x0397F3E0 MOV X19, X0
	0x0397F3E4 TBNZ X8, 0x0, 0x397F438
	0x0397F3E8 ADRP X0, 0x7CE000
	0x0397F3EC LDR X0, [X0 + 0xFA0]
	0x0397F3F0 BL 0x1C16CF4
	0x0397F3F4 ADRP X0, 0x776000
	0x0397F3F8 LDR X0, [X0 + 0x9C8]
	0x0397F3FC BL 0x1C16CF4
	0x0397F400 ADRP X0, 0x7CE000
	0x0397F404 LDR X0, [X0 + 0xFA8]
	0x0397F408 BL 0x1C16CF4
	0x0397F40C ADRP X0, 0x7D1000
	0x0397F410 LDR X0, [X0 + 0x378]
	0x0397F414 BL 0x1C16CF4
	0x0397F418 ADRP X0, 0x7D1000
	0x0397F41C LDR X0, [X0 + 0x380]
	0x0397F420 BL 0x1C16CF4
	0x0397F424 ADRP X0, 0x7D1000
	0x0397F428 LDR X0, [X0 + 0x338]
	0x0397F42C BL 0x1C16CF4
	0x0397F430 MOVZ W8, 0x1
	0x0397F434 STRB W8, [X22 + 0xA3C]
	0x0397F438 CBZ X20, 0x397F74C
	0x0397F43C LDR W8, [X20 + 0x18]
	0x0397F440 CMP W8, 0x1
	0x0397F444 B.LT 0x397F728
	0x0397F448 ADRP X24, 0x7D1000
	0x0397F44C LDR X24, [X24 + 0x338]
	0x0397F450 LDR X0, [X24]
	0x0397F454 LDR W8, [X0 + 0xE0]
	0x0397F458 CBNZ W8, 0x397F464
	0x0397F45C BL 0x1C16DFC
	0x0397F460 LDR X0, [X24]
	0x0397F464 LDR X8, [X0 + 0xB8]
	0x0397F468 ADRP X26, 0x7CE000
	0x0397F46C ADRP X25, 0x776000
	0x0397F470 LDR X22, [X8 + 0x18]
	0x0397F474 LDR X26, [X26 + 0xFA0]
	0x0397F478 LDR X25, [X25 + 0x9C8]
	0x0397F47C CBNZ X22, 0x397F4D0
	0x0397F480 LDR W8, [X0 + 0xE0]
	0x0397F484 CBNZ W8, 0x397F490
	0x0397F488 BL 0x1C16DFC
	0x0397F48C LDR X0, [X24]
	0x0397F490 ADRP X9, 0x7CE000
	0x0397F494 LDR X8, [X0 + 0xB8]
	0x0397F498 LDR X9, [X9 + 0xFA8]
	0x0397F49C LDR X23, [X8]
	0x0397F4A0 LDR X0, [X9]
	0x0397F4A4 BL 0x1C16F10
	0x0397F4A8 ADRP X8, 0x7D1000
	0x0397F4AC LDR X8, [X8 + 0x378]
	0x0397F4B0 MOV X1, X23
	0x0397F4B4 MOV X3, X31
	0x0397F4B8 MOV X22, X0
	0x0397F4BC LDR X2, [X8]
	0x0397F4C0 BL 0x2D30578
	0x0397F4C4 LDR X8, [X24]
	0x0397F4C8 LDR X8, [X8 + 0xB8]
	0x0397F4CC STR X22, [X8 + 0x18]
	0x0397F4D0 LDR X2, [X26]
	0x0397F4D4 MOV X0, X20
	0x0397F4D8 MOV X1, X22
	0x0397F4DC BL 0x21D0FD8
	0x0397F4E0 LDR X1, [X25]
	0x0397F4E4 BL 0x21D54D4
	0x0397F4E8 ADRP X23, 0xA59000
	0x0397F4EC LDRB W8, [X23 + 0x783]
	0x0397F4F0 MOV X22, X0
	0x0397F4F4 CBNZ W8, 0x397F50C
	0x0397F4F8 ADRP X0, 0x774000
	0x0397F4FC LDR X0, [X0 + 0x5A0]
	0x0397F500 BL 0x1C16CF4
	0x0397F504 MOVZ W8, 0x1
	0x0397F508 STRB W8, [X23 + 0x783]
	0x0397F50C ADRP X8, 0x774000
	0x0397F510 LDR X8, [X8 + 0x5A0]
	0x0397F514 LDR X8, [X8]
	0x0397F518 LDR X9, [X8 + 0xB8]
	0x0397F51C LDR X8, [X20 + 0x18]
	0x0397F520 LDP S8, S9, [X9]
	0x0397F524 LDR V10, [X9 + 0x8]
	0x0397F528 CMP W8, 0x1
	0x0397F52C B.LT 0x397F570
	0x0397F530 MOV X23, X31
	0x0397F534 AND X8, X8, 0x0
	0x0397F538 ADD X27, X20, 0x20
	0x0397F53C CMP X23, W8, UXTW
	0x0397F540 B.CS 0x397F748
	0x0397F544 LDR X1, [X27, X23, LSL #3]
	0x0397F548 MOV X0, X19
	0x0397F54C MOV X2, X31
	0x0397F550 BL 0x390987C
	0x0397F554 LDR W8, [X20 + 0x18]
	0x0397F558 ADD X23, X23, 0x1
	0x0397F55C FADD S8, S8, S0
	0x0397F560 FADD S9, S9, S1
	0x0397F564 CMP X23, W8, SXTW
	0x0397F568 FADD S10, S10, S2
	0x0397F56C B.LT 0x397F53C
	0x0397F570 CBZ X19, 0x397F74C
	0x0397F574 LDR X0, [X19 + 0x58]
	0x0397F578 SCVTF S0, W8
	0x0397F57C FDIV S2, S10, S0
	0x0397F580 FDIV S1, S9, S0
	0x0397F584 FDIV S0, S8, S0
	0x0397F588 MOV X1, X22
	0x0397F58C MOV X2, X31
	0x0397F590 BL 0x391FB78
	0x0397F594 MOV X23, X0
	0x0397F598 MOV X0, X19
	0x0397F59C MOV W1, W21
	0x0397F5A0 BL 0x397E034
	0x0397F5A4 CBZ X22, 0x397F74C
	0x0397F5A8 LDR W9, [X22 + 0x18]
	0x0397F5AC MOV X1, X0
	0x0397F5B0 CMP W9, 0x1
	0x0397F5B4 B.LT 0x397F610
	0x0397F5B8 MOV W8, W31
	0x0397F5BC CMP W8, W9
	0x0397F5C0 B.CS 0x397F748
	0x0397F5C4 CBZ X23, 0x397F74C
	0x0397F5C8 LDR W9, [X23 + 0x18]
	0x0397F5CC SXTW X8, W8
	0x0397F5D0 CMP W8, W9
	0x0397F5D4 B.CS 0x397F748
	0x0397F5D8 CBZ X1, 0x397F74C
	0x0397F5DC ADD X9, X22, X8, 0x2, LSL
	0x0397F5E0 LDRSW X9, [X9 + 0x20]
	0x0397F5E4 LDR W10, [X1 + 0x18]
	0x0397F5E8 CMP W9, W10
	0x0397F5EC B.CS 0x397F748
	0x0397F5F0 ADD X10, X23, X8, 0x3, LSL
	0x0397F5F4 LDR V0, [X10 + 0x20]
	0x0397F5F8 ADD X9, X1, X9, 0x3, LSL
	0x0397F5FC ADD W8, W8, 0x1
	0x0397F600 STR D0, [X9 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xA63000
	015 Move W8, [X20+2618]
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x77F000
	023 Move X0, [X0+2160]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D0000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x79F000
	029 Move X0, [X0+2224]
	030 Call 0x1C17CF4
	031 Move X0, 0x775000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x79D000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0x79D000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0x775000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2618], W8
	045 Move [X31+12], W31
	046 Compare X19, 0
	047 JumpIfEqual {204}
	048 Move X0, X19
	049 Move X1, X31
	050 Call ProBuilderMesh.get_sharedTextureLookup, X0
	051 Compare X0, 0
	052 JumpIfEqual {204}
	053 Move X8, 0x7D0000
	054 Move X8, [X8+3448]
	055 Move X20, X0
	056 Move X1, [X8]
	057 Call Dictionary`2<Int32, Int32>.get_Count, X0
	058 Compare X21, 0
	059 JumpIfEqual {204}
	060 Move X10, 0x79D000
	061 Move X8, [X21]
	062 Move X10, [X10+1976]
	063 Move W22, W0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X21
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X24, 0x775000
	083 Move X24, [X24+3584]
	084 Move X0, X21
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X21, X0
	087 Compare X0, 0
	088 JumpIfEqual {205}
	089 Move X25, 0x775000
	090 Move X26, 0x79D000
	091 Move X27, 0x77F000
	092 Move X28, 0x79F000
	093 Move X25, [X25+3608]
	094 Move X26, [X26+1984]
	095 Move X27, [X27+2160]
	096 Move X28, [X28+2224]
	097 Move X8, [X21]
	098 Move X1, [X25]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X21
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X21
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {160}
	122 Move X8, [X21]
	123 Move X1, [X26]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X21
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X3, [X27]
	144 Move W23, W0
	145 Add X2, X31, 12
	146 Move X0, X20
	147 Move W1, W23
	148 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {97}
	153 Move X3, [X28]
	154 Add W29, W22, 1
	155 Move X0, X20
	156 Move W1, W23
	157 Move W2, W22
	158 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	159 Move W22, W29
	160 Move X22, X31
	161 Compare X21, 0
	162 JumpIfEqual {184}
	163 Move X8, [X21]
	164 Move X1, [X24]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X21
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X21
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X22, 0
	185 JumpIfNotEqual {206}
	186 Move X0, X19
	187 Move X1, X20
	188 Move X2, X31
	189 Call ProBuilderMesh.SetSharedTextures, X0, X1
	190 Move X20, [X31+96]
	191 Move X19, [X31+104]
	192 Move X22, [X31+80]
	193 Move X21, [X31+88]
	194 Move X24, [X31+64]
	195 Move X23, [X31+72]
	196 Move X26, [X31+48]
	197 Move X25, [X31+56]
	198 Move X28, [X31+32]
	199 Move X27, [X31+40]
	200 Move X29, [X31+16]
	201 Move X30, [X31+24]
	202 Add X31, X31, 112
	203 Return 
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Move X0, X22
	207 Call 0x1C17F18
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Call 0x3EB2AD0
	210 Move X22, [X0]
	211 Call 0x3EB2AE0
	212 Move X19, X0
	213 Move X22, X31
	214 Move X19, X0
	215 Compare X21, 0
	216 JumpIfEqual {238}
	217 Move X8, [X21]
	218 Move X1, [X24]
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare X9, 0
	221 JumpIfEqual {228}
	222 Move X10, [X8+176]
	223 Add X10, X10, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X9, X9, 1
	227 Add X10, X10, 16
	228 Move X0, X21
	229 Move W2, W31
	230 Call 0x1C5D788
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Add X8, X8, X9
	233 Add X0, X8, 312
	234 Move X8, [X0]
	235 Move X1, [X0+8]
	236 Move X0, X21
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X22, 0
	239 JumpIfNotEqual {242}
	240 Move X0, X19
	241 Call 0x1D2D690
	242 Move X0, X22
	243 Call 0x1C17F18
	244 Call 0x1991590

Method: System.Void SplitUVs(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0397FFA4 ADD X26, X22, W19, 0x3, SXTW
	0x0397FFA8 LDR X1, [X26 + 0x20]!
	0x0397FFAC MOV X0, X20
	0x0397FFB0 MOV X2, X31
	0x0397FFB4 BL 0x390987C
	0x0397FFB8 MOV X0, X31
	0x0397FFBC BL 0x39204C0
	0x0397FFC0 CBZ X23, 0x3980348
	0x0397FFC4 LDR X2, [X28]
	0x0397FFC8 MOV W24, W0
	0x0397FFCC MOV X0, X23
	0x0397FFD0 MOV W1, W24
	0x0397FFD4 BL 0x2A4500C
	0x0397FFD8 TBZ X0, 0x0, 0x398004C
	0x0397FFDC ADRP X8, 0x7D1000
	0x0397FFE0 LDR X8, [X8 + 0x3B0]
	0x0397FFE4 MOV X0, X23
	0x0397FFE8 MOV W1, W24
	0x0397FFEC LDR X2, [X8]
	0x0397FFF0 BL 0x2A44D78
	0x0397FFF4 LDR W8, [X22 + 0x18]
	0x0397FFF8 CMP W19, W8
	0x0397FFFC B.CS 0x398034C
	0x03980000 CBZ X0, 0x3980348
	0x03980004 ADRP X9, 0x7CD000
	0x03980008 LDR X1, [X26]
	0x0398000C LDR W10, [X0 + 0x1C]
	0x03980010 LDR X8, [X0 + 0x10]
	0x03980014 LDR X9, [X9 + 0xE10]
	0x03980018 ADD W10, W10, 0x1
	0x0398001C LDR X9, [X9]
	0x03980020 STR W10, [X0 + 0x1C]
	0x03980024 CBZ X8, 0x3980348
	0x03980028 LDRSW X10, [X0 + 0x18]
	0x0398002C LDR W11, [X8 + 0x18]
	0x03980030 CMP W10, W11
	0x03980034 B.CS 0x39800C8
	0x03980038 ADD W9, W10, 0x1
	0x0398003C ADD X8, X8, X10, 0x3, LSL
	0x03980040 STR W9, [X0 + 0x18]
	0x03980044 STR X1, [X8 + 0x20]
	0x03980048 B 0x398010C
	0x0398004C ADRP X8, 0x7CD000
	0x03980050 LDR X8, [X8 + 0xDF0]
	0x03980054 LDR X0, [X8]
	0x03980058 BL 0x1C16F10
	0x0398005C ADRP X8, 0x7CE000
	0x03980060 LDR X8, [X8 + 0xA38]
	0x03980064 MOV X25, X0
	0x03980068 LDR X1, [X8]
	0x0398006C BL 0x301B7C4
	0x03980070 LDR W8, [X22 + 0x18]
	0x03980074 CMP W19, W8
	0x03980078 B.CS 0x398034C
	0x0398007C CBZ X25, 0x3980348
	0x03980080 ADRP X9, 0x7CD000
	0x03980084 LDR X1, [X26]
	0x03980088 LDR W10, [X25 + 0x1C]
	0x0398008C LDR X8, [X25 + 0x10]
	0x03980090 LDR X9, [X9 + 0xE10]
	0x03980094 ADD W10, W10, 0x1
	0x03980098 LDR X9, [X9]
	0x0398009C STR W10, [X25 + 0x1C]
	0x039800A0 CBZ X8, 0x3980348
	0x039800A4 LDRSW X10, [X25 + 0x18]
	0x039800A8 LDR W11, [X8 + 0x18]
	0x039800AC CMP W10, W11
	0x039800B0 B.CS 0x39800DC
	0x039800B4 ADD W9, W10, 0x1
	0x039800B8 ADD X8, X8, X10, 0x3, LSL
	0x039800BC STR W9, [X25 + 0x18]
	0x039800C0 STR X1, [X8 + 0x20]
	0x039800C4 B 0x39800F0
	0x039800C8 LDR X8, [X9 + 0x20]
	0x039800CC LDR X8, [X8 + 0xC0]
	0x039800D0 LDR X2, [X8 + 0x70]
	0x039800D4 BL 0x301BF90
	0x039800D8 B 0x398010C
	0x039800DC LDR X8, [X9 + 0x20]
	0x039800E0 MOV X0, X25
	0x039800E4 LDR X8, [X8 + 0xC0]
	0x039800E8 LDR X2, [X8 + 0x70]
	0x039800EC BL 0x301BF90
	0x039800F0 ADRP X8, 0x7D0000
	0x039800F4 LDR X8, [X8 + 0x398]
	0x039800F8 MOV X0, X23
	0x039800FC MOV W1, W24
	0x03980100 MOV X2, X25
	0x03980104 LDR X3, [X8]
	0x03980108 BL 0x2A44E18
	0x0398010C LDR X8, [X22 + 0x18]
	0x03980110 CMP W19, W8
	0x03980114 B.CS 0x398034C
	0x03980118 LDR X9, [X26]
	0x0398011C CBZ X9, 0x3980348
	0x03980120 ADD W19, W19, 0x1
	0x03980124 CMP W19, W8
	0x03980128 STR W27, [X9 + 0x50]
	0x0398012C STRB W29, [X9 + 0x4C]
	0x03980130 B.LT 0x397FF9C
	0x03980134 CBZ X23, 0x3980348
	0x03980138 ADRP X8, 0x7D0000
	0x0398013C LDR X8, [X8 + 0x3A8]
	0x03980140 ADRP X27, 0x7D0000
	0x03980144 ADRP X28, 0x7D0000
	0x03980148 ADRP X26, 0x7D0000
	0x0398014C LDR X27, [X27 + 0x3C0]
	0x03980150 LDR X28, [X28 + 0x338]
	0x03980154 LDR X26, [X26 + 0x3E8]
	0x03980158 LDR X1, [X8]
	0x0398015C ADRP X19, 0x7CD000
	0x03980160 ADRP X29, 0x775000
	0x03980164 LDR X19, [X19 + 0xFA0]
	0x03980168 LDR X29, [X29 + 0x9C8]
	0x0398016C ADD X8, X31, 0x8
	0x03980170 MOV X0, X23
	0x03980174 BL 0x2A45240
	0x03980178 LDUR V0, [X31 + 0x8]
	0x0398017C LDUR V1, [X31 + 0x18]
	0x03980180 LDR X8, [X31 + 0x28]
	0x03980184 STP V0, V1, [X31 + 0x30]
	0x03980188 STR X8, [X31 + 0x50]
	0x0398018C LDR X1, [X27]
	0x03980190 ADD X0, X31, 0x30
	0x03980194 BL 0x2BFE354
	0x03980198 TBZ X0, 0x0, 0x39802E8
	0x0398019C LDR X8, [X28]
	0x039801A0 LDR W23, [X31 + 0x40]
	0x039801A4 LDR X22, [X31 + 0x48]
	0x039801A8 LDR W9, [X8 + 0xE0]
	0x039801AC CBNZ W9, 0x39801BC
	0x039801B0 MOV X0, X8
	0x039801B4 BL 0x1C16DFC
	0x039801B8 LDR X8, [X28]
	0x039801BC LDR X9, [X8 + 0xB8]
	0x039801C0 LDR X24, [X9 + 0x30]
	0x039801C4 CBNZ X24, 0x3980214
	0x039801C8 LDR W9, [X8 + 0xE0]
	0x039801CC CBNZ W9, 0x39801DC
	0x039801D0 MOV X0, X8
	0x039801D4 BL 0x1C16DFC
	0x039801D8 LDR X8, [X28]
	0x039801DC LDR X8, [X8 + 0xB8]
	0x039801E0 LDR X25, [X8]
	0x039801E4 ADRP X8, 0x7CD000
	0x039801E8 LDR X8, [X8 + 0xFA8]
	0x039801EC LDR X0, [X8]
	0x039801F0 BL 0x1C16F10
	0x039801F4 LDR X2, [X26]
	0x039801F8 MOV X24, X0
	0x039801FC MOV X1, X25
	0x03980200 MOV X3, X31
	0x03980204 BL 0x2D30578
	0x03980208 LDR X8, [X28]
	0x0398020C LDR X8, [X8 + 0xB8]
	0x03980210 STR X24, [X8 + 0x30]
	0x03980214 LDR X2, [X19]
	0x03980218 MOV X0, X22
	0x0398021C MOV X1, X24
	0x03980220 BL 0x21D0FD8
	0x03980224 LDR X1, [X29]
	0x03980228 BL 0x21D54D4
	0x0398022C CBZ X20, 0x3980350
	0x03980230 LDR X24, [X20 + 0x58]
	0x03980234 MOV X22, X0
	0x03980238 MOV W0, W23
	0x0398023C MOV X1, X31
	0x03980240 BL 0x392173C
	0x03980244 MOV X0, X24
	0x03980248 MOV X1, X22
	0x0398024C MOV X2, X31
	0x03980250 BL 0x391FB78
	0x03980254 MOV X23, X0
	0x03980258 FMOV S0, W31
	0x0398025C FMOV S1, W31
	0x03980260 MOV X1, X31
	0x03980264 BL 0x397FD28
	0x03980268 CBZ X22, 0x3980354
	0x0398026C LDR W9, [X22 + 0x18]
	0x03980270 CMP W9, 0x1
	0x03980274 B.LT 0x39802D8
	0x03980278 MOV W8, W31
	0x0398027C MOV V0.S[1], V1.S[0]
	0x03980280 CMP W8, W9
	0x03980284 B.CS 0x398033C
	0x03980288 CBZ X23, 0x3980334
	0x0398028C LDR W9, [X23 + 0x18]
	0x03980290 SXTW X8, W8
	0x03980294 CMP W8, W9
	0x03980298 B.CS 0x3980340
	0x0398029C CBZ X21, 0x3980338
	0x039802A0 ADD X9, X22, X8, 0x2, LSL
	0x039802A4 LDRSW X9, [X9 + 0x20]
	0x039802A8 LDR W10, [X21 + 0x18]
	0x039802AC CMP W9, W10
	0x039802B0 B.CS 0x3980344
	0x039802B4 ADD X10, X23, X8, 0x3, LSL
	0x039802B8 LDR V1, [X10 + 0x20]
	0x039802BC ADD X9, X21, X9, 0x3, LSL
	0x039802C0 ADD W8, W8, 0x1
	0x039802C4 FSUB V1.2S, V1.2S, V0.2S
	0x039802C8 STR D1, [X9 + 0x20]
	0x039802CC LDR W9, [X22 + 0x18]
	0x039802D0 CMP W8, W9
	0x039802D4 B.LT 0x3980280
	0x039802D8 MOV X0, X20
	0x039802DC MOV X1, X22
	0x039802E0 BL 0x397E274
	0x039802E4 B 0x398018C
	0x039802E8 ADRP X8, 0x7D0000
	0x039802EC LDR X8, [X8 + 0x3B8]
	0x039802F0 ADD X0, X31, 0x30
	0x039802F4 LDR X1, [X8]
	0x039802F8 BL 0x2BFE46C
	0x039802FC LDR W19, [X31 + 0x4]
	0x03980300 MOVZ W3, 0x1
	0x03980304 MOV X0, X20
	0x03980308 MOV X1, X21
	0x0398030C MOV W2, W19
	0x03980310 BL 0x397E604
	0x03980314 LDP X20, X19, [X31 + 0xB0]
	0x03980318 LDP X22, X21, [X31 + 0xA0]
	0x0398031C LDP X24, X23, [X31 + 0x90]
	0x03980320 LDP X26, X25, [X31 + 0x80]
	0x03980324 LDP X28, X27, [X31 + 0x70]
	0x03980328 LDP X29, X30, [X31 + 0x60]
	0x0398032C ADD X31, X31, 0xC0
	0x03980330 RET
	0x03980334 BL 0x1C16F20
	0x03980338 BL 0x1C16F20
	0x0398033C BL 0x1C16F28
	0x03980340 BL 0x1C16F28
	0x03980344 BL 0x1C16F28
	0x03980348 BL 0x1C16F20
	0x0398034C BL 0x1C16F28
	0x03980350 BL 0x1C16F20
	0x03980354 BL 0x1C16F20
	0x03980358 B 0x3980394
	0x0398035C B 0x3980394
	0x03980360 B 0x3980394
	0x03980364 B 0x3980394
	0x03980368 B 0x3980394
	0x0398036C B 0x3980394
	0x03980370 B 0x3980394
	0x03980374 B 0x3980394
	0x03980378 B 0x3980394
	0x0398037C B 0x3980394
	0x03980380 B 0x3980394
	0x03980384 B 0x3980394
	0x03980388 B 0x3980394
	0x0398038C B 0x3980394
	0x03980390 B 0x3980394
	0x03980394 LDR W19, [X31 + 0x4]
	0x03980398 MOV X22, X0
	0x0398039C CMP W1, 0x1
	0x039803A0 B.NE 0x39803D4
	0x039803A4 MOV X0, X22
	0x039803A8 BL 0x3EB1AD0
	0x039803AC LDR X23, [X0]
	0x039803B0 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xA63000
	015 Move W8, [X19+2619]
	016 Move X21, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x77F000
	023 Move X0, [X0+2160]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D0000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x79F000
	029 Move X0, [X0+2224]
	030 Call 0x1C17CF4
	031 Move X0, 0x775000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x7CE000
	035 Move X0, [X0+3504]
	036 Call 0x1C17CF4
	037 Move X0, 0x7CE000
	038 Move X0, [X0+3512]
	039 Call 0x1C17CF4
	040 Move X0, 0x774000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+2619], W8
	045 Move [X31+12], W31
	046 Compare X23, 0
	047 JumpIfEqual {227}
	048 Move X0, X23
	049 Move X1, X31
	050 Call ProBuilderMesh.get_sharedTextureLookup, X0
	051 Compare X0, 0
	052 JumpIfEqual {227}
	053 Move X8, 0x7CF000
	054 Move X8, [X8+3448]
	055 Move X20, X0
	056 Move X1, [X8]
	057 Call Dictionary`2<Int32, Int32>.get_Count, X0
	058 Compare X21, 0
	059 JumpIfEqual {227}
	060 Move X10, 0x7CE000
	061 Move X8, [X21]
	062 Move X10, [X10+3504]
	063 Move W22, W0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X1, [X10]
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X21
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X21
	083 Move [X31], X23
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X21, X0
	086 Compare X0, 0
	087 JumpIfEqual {228}
	088 Move X26, 0x774000
	089 Move X27, 0x7CE000
	090 Move X28, 0x77E000
	091 Move X29, 0x79E000
	092 Move X26, [X26+3608]
	093 Move X27, [X27+3512]
	094 Move X28, [X28+2160]
	095 Move X29, [X29+2224]
	096 Move X8, [X21]
	097 Move X1, [X26]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X21
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X21
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {174}
	121 Move X8, [X21]
	122 Move X1, [X27]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X21
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X21
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X0, 0
	143 JumpIfEqual {224}
	144 Move X1, X31
	145 Call Face.get_distinctIndexesInternal, X0
	146 Move X23, X0
	147 Compare X0, 0
	148 JumpIfEqual {225}
	149 Move X8, [X23+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X25, X31
	152 And X8, X8, 0
	153 Add X19, X23, 32
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W24, [X19]
	156 Move X3, [X28]
	157 Add X2, X31, 12
	158 Move X0, X20
	159 Move W1, W24
	160 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {171}
	165 Move X3, [X29]
	166 Move X0, X20
	167 Move W1, W24
	168 Move W2, W22
	169 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	170 Add W22, W22, 1
	171 Move W8, [X23+24]
	172 Add X25, X25, 1
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X22, X31
	175 Move W23, 7
	176 Compare X21, 0
	177 JumpIfEqual {201}
	178 Move X8, [X21]
	179 Move X10, 0x774000
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Move X10, [X10+3584]
	182 Move X1, [X10]
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X21
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X21
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Compare X22, 0
	202 JumpIfNotEqual {229}
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Compare W23, 0
	205 JumpIfNotEqual {210}
	206 Move X0, [X31]
	207 Move X1, X20
	208 Move X2, X31
	209 Call ProBuilderMesh.SetSharedTextures, X0, X1
	210 Move X20, [X31+96]
	211 Move X19, [X31+104]
	212 Move X22, [X31+80]
	213 Move X21, [X31+88]
	214 Move X24, [X31+64]
	215 Move X23, [X31+72]
	216 Move X26, [X31+48]
	217 Move X25, [X31+56]
	218 Move X28, [X31+32]
	219 Move X27, [X31+40]
	220 Move X29, [X31+16]
	221 Move X30, [X31+24]
	222 Add X31, X31, 112
	223 Return 
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Call 0x1C17F28
	227 Call 0x1C17F20
	228 Call 0x1C17F20
	229 Move X0, X22
	230 Call 0x1C17F18
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Call 0x3EB2AD0
	233 Move X22, [X0]
	234 Call 0x3EB2AE0
	235 Move W23, W31
	236 Compare X21, 0
	237 JumpIfNotEqual {178}
	238 Move X19, X0
	239 Move X22, X31
	240 Move X19, X0
	241 Compare X21, 0
	242 JumpIfEqual {266}
	243 Move X8, [X21]
	244 Move X10, 0x774000
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Move X10, [X10+3584]
	247 Move X1, [X10]
	248 Compare X9, 0
	249 JumpIfEqual {256}
	250 Move X10, [X8+176]
	251 Add X10, X10, 8
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Subtract X9, X9, 1
	255 Add X10, X10, 16
	256 Move X0, X21
	257 Move W2, W31
	258 Call 0x1C5D788
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Add X8, X8, X9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X21
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Compare X22, 0
	267 JumpIfNotEqual {270}
	268 Move X0, X19
	269 Call 0x1D2D690
	270 Move X0, X22
	271 Call 0x1C17F18
	272 Call 0x1991590

Method: System.Void ProjectFacesAuto(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces, System.Int32 channel)

Disassembly:
	0x039803B4 ADRP X8, 0x7D0000
	0x039803B8 LDR X8, [X8 + 0x3B8]
	0x039803BC ADD X0, X31, 0x30
	0x039803C0 LDR X1, [X8]
	0x039803C4 BL 0x2BFE46C
	0x039803C8 CBZ X23, 0x3980300
	0x039803CC MOV X0, X23
	0x039803D0 BL 0x1C16F18
	0x039803D4 MOV X23, X31
	0x039803D8 B 0x39803E0
	0x039803DC MOV X22, X0
	0x039803E0 ADRP X8, 0x7D0000
	0x039803E4 LDR X8, [X8 + 0x3B8]
	0x039803E8 LDR X1, [X8]
	0x039803EC ADD X0, X31, 0x30
	0x039803F0 BL 0x2BFE46C
	0x039803F4 CBNZ X23, 0x3980400
	0x039803F8 MOV X0, X22
	0x039803FC BL 0x1D2C690
	0x03980400 MOV X0, X23
	0x03980404 BL 0x1C16F18
	0x03980408 BL 0x1990590
	0x0398040C STP X30, X27, [X31 - 0x50]!
	0x03980410 STP X26, X25, [X31 + 0x10]
	0x03980414 STP X24, X23, [X31 + 0x20]
	0x03980418 STP X22, X21, [X31 + 0x30]
	0x0398041C STP X20, X19, [X31 + 0x40]
	0x03980420 ADRP X22, 0xA61000
	0x03980424 LDRB W8, [X22 + 0xA3F]
	0x03980428 MOV W19, W2
	0x0398042C MOV X21, X1
	0x03980430 MOV X20, X0
	0x03980434 TBNZ X8, 0x0, 0x398044C
	0x03980438 ADRP X0, 0x7D0000
	0x0398043C LDR X0, [X0 + 0x3F0]
	0x03980440 BL 0x1C16CF4
	0x03980444 MOVZ W8, 0x1
	0x03980448 STRB W8, [X22 + 0xA3F]
	0x0398044C CBZ X20, 0x3980580
	0x03980450 LDR X23, [X20 + 0x28]
	0x03980454 CBZ X23, 0x3980580
	0x03980458 LDR W8, [X23 + 0x18]
	0x0398045C CMP W8, 0x1
	0x03980460 B.LT 0x39804C0
	0x03980464 ADRP X25, 0x7D0000
	0x03980468 LDR X25, [X25 + 0x3F0]
	0x0398046C MOV W24, W31
	0x03980470 MOVN W26, 0x0
	0x03980474 MOVZ W27, 0x1
	0x03980478 CMP W24, W8
	0x0398047C B.CS 0x398057C
	0x03980480 ADD X8, X23, W24, 0x3, SXTW
	0x03980484 LDR X22, [X8 + 0x20]
	0x03980488 CBZ X22, 0x3980580
	0x0398048C MOV X0, X22
	0x03980490 MOV X1, X31
	0x03980494 BL 0x38FF530
	0x03980498 LDR X2, [X25]
	0x0398049C MOV X1, X21
	0x039804A0 BL 0x217E0D4
	0x039804A4 TBZ X0, 0x0, 0x39804B0
	0x039804A8 STR W26, [X22 + 0x50]
	0x039804AC STRB W27, [X22 + 0x4C]
	0x039804B0 LDR W8, [X23 + 0x18]
	0x039804B4 ADD W24, W24, 0x1
	0x039804B8 CMP W24, W8
	0x039804BC B.LT 0x3980478
	0x039804C0 MOV X0, X20
	0x039804C4 MOV X1, X21
	0x039804C8 BL 0x397E274
	0x039804CC LDR X0, [X20 + 0x58]
	0x039804D0 MOV X1, X21
	0x039804D4 MOV X2, X31
	0x039804D8 BL 0x3920EA8
	0x039804DC MOV X22, X0
	0x039804E0 MOV X0, X20
	0x039804E4 MOV W1, W19
	0x039804E8 BL 0x397E034
	0x039804EC CBZ X21, 0x3980580
	0x039804F0 LDR W9, [X21 + 0x18]
	0x039804F4 MOV X1, X0
	0x039804F8 CMP W9, 0x1
	0x039804FC B.LT 0x3980558
	0x03980500 MOV W8, W31
	0x03980504 CMP W8, W9
	0x03980508 B.CS 0x398057C
	0x0398050C CBZ X22, 0x3980580
	0x03980510 LDR W9, [X22 + 0x18]
	0x03980514 SXTW X8, W8
	0x03980518 CMP W8, W9
	0x0398051C B.CS 0x398057C
	0x03980520 CBZ X1, 0x3980580
	0x03980524 ADD X9, X21, X8, 0x2, LSL
	0x03980528 LDRSW X9, [X9 + 0x20]
	0x0398052C LDR W10, [X1 + 0x18]
	0x03980530 CMP W9, W10
	0x03980534 B.CS 0x398057C
	0x03980538 ADD X10, X22, X8, 0x3, LSL
	0x0398053C LDR V0, [X10 + 0x20]
	0x03980540 ADD X9, X1, X9, 0x3, LSL
	0x03980544 ADD W8, W8, 0x1
	0x03980548 STR D0, [X9 + 0x20]
	0x0398054C LDR W9, [X21 + 0x18]
	0x03980550 CMP W8, W9
	0x03980554 B.LT 0x3980504
	0x03980558 MOV X0, X20
	0x0398055C MOV W2, W19
	0x03980560 LDP X20, X19, [X31 + 0x40]
	0x03980564 LDP X22, X21, [X31 + 0x30]
	0x03980568 LDP X24, X23, [X31 + 0x20]
	0x0398056C LDP X26, X25, [X31 + 0x10]
	0x03980570 MOVZ W3, 0x1
	0x03980574 LDP X30, X27, [X31], #0x50
	0x03980578 B 0x397E604
	0x0398057C BL 0x1C16F28
	0x03980580 BL 0x1C16F20
	0x03980584 STP X30, X19, [X31 - 0x10]!
	0x03980588 MOV X1, X31
	0x0398058C MOV X19, X0
	0x03980590 BL 0x3909D00
	0x03980594 CBZ X19, 0x398064C
	0x03980598 LDR W8, [X19 + 0x18]
	0x0398059C UBFM X9, X8, 0x20, 0x1F
	0x039805A0 CMP X9, 0x1
	0x039805A4 B.LT 0x39805D8
	0x039805A8 MOV X9, X31
	0x039805AC SXTW X10, W8
	0x039805B0 MOV V0.S[1], V1.S[0]
	0x039805B4 ADD X11, X19, 0x20
	0x039805B8 CMP X9, X8
	0x039805BC B.CS 0x3980648
	0x039805C0 LDR V1, [X11, X9, LSL #3]
	0x039805C4 FSUB V1.2S, V1.2S, V0.2S
	0x039805C8 STR D1, [X11, X9, LSL #3]
	0x039805CC ADD X9, X9, 0x1
	0x039805D0 CMP X9, X10
	0x039805D4 B.LT 0x39805B8
	0x039805D8 MOV X0, X19
	0x039805DC MOV X1, X31
	0x039805E0 BL 0x390A08C
	0x039805E4 MOV X0, X31
	0x039805E8 BL 0x3909CF4
	0x039805EC ADRP X8, 0xFFFFFFFFFD169000
	0x039805F0 LDR V1, [X8 + 0xF28]
	0x039805F4 MOV X0, X31
	0x039805F8 BL 0x390B4D4
	0x039805FC LDR X9, [X19 + 0x18]
	0x03980600 CMP W9, 0x1
	0x03980604 B.LT 0x398063C
	0x03980608 AND X9, X9, 0x0
	0x0398060C MOV X8, X31
	0x03980610 UNIMPLEMENTED
	0x03980614 SXTW X10, W9
	0x03980618 ADD X11, X19, 0x20
	0x0398061C CMP X8, X9
	0x03980620 B.CS 0x3980648
	0x03980624 LDR V1, [X11, X8, LSL #3]
	0x00000000 INVALID
	0x0398062C STR D1, [X11, X8, LSL #3]
	0x03980630 ADD X8, X8, 0x1
	0x03980634 CMP X8, X10
	0x03980638 B.LT 0x398061C
	0x0398063C MOV X0, X19
	0x03980640 LDP X30, X19, [X31], #0x10
	0x03980644 RET
	0x03980648 BL 0x1C16F28
	0x0398064C BL 0x1C16F20
	0x03980650 STR X30, [X31 - 0x20]!
	0x03980654 STP X20, X19, [X31 + 0x10]
	0x03980658 ADRP X19, 0xA61000
	0x0398065C ADRP X20, 0x7D0000
	0x03980660 LDRB W8, [X19 + 0xA40]
	0x03980664 LDR X20, [X20 + 0x338]
	0x03980668 TBNZ X8, 0x0, 0x3980680
	0x0398066C ADRP X0, 0x7D0000
	0x03980670 LDR X0, [X0 + 0x338]
	0x03980674 BL 0x1C16CF4
	0x03980678 MOVZ W8, 0x1
	0x0398067C STRB W8, [X19 + 0xA40]
	0x03980680 LDR X0, [X20]
	0x03980684 BL 0x1C16F10
	0x03980688 MOV X1, X31
	0x0398068C MOV X19, X0
	0x03980690 BL 0x33BDD8C
	0x03980694 LDR X8, [X20]
	0x03980698 LDR X8, [X8 + 0xB8]
	0x0398069C STR X19, [X8]
	0x039806A0 LDP X20, X19, [X31 + 0x10]
	0x039806A4 LDR X30, [X31], #0x20
	0x039806A8 RET
	0x039806AC MOV X1, X31
	0x039806B0 B 0x33BDD8C
	0x039806B4 RET
	0x039806B8 STR X30, [X31 - 0x20]!
	0x039806BC STP X20, X19, [X31 + 0x10]
	0x039806C0 ADRP X20, 0xA61000
	0x039806C4 LDRB W8, [X20 + 0xA41]
	0x039806C8 MOV X19, X1
	0x039806CC TBNZ X8, 0x0, 0x39806E4
	0x039806D0 ADRP X0, 0x7CA000
	0x039806D4 LDR X0, [X0 + 0x360]
	0x039806D8 BL 0x1C16CF4
	0x039806DC MOVZ W8, 0x1
	0x039806E0 STRB W8, [X20 + 0xA41]
	0x039806E4 MOV W0, W19
	0x039806E8 LDP X20, X19, [X31 + 0x10]
	0x039806EC LDR X30, [X31], #0x20
	0x039806F0 RET
	0x039806F4 CBZ X1, 0x3980704
	0x039806F8 MOV X0, X1
	0x039806FC MOV X1, X31
	0x03980700 B 0x38FF530
	0x03980704 STR X30, [X31 - 0x10]!
	0x03980708 BL 0x1C16F20
	0x0398070C CBZ X1, 0x398071C
	0x03980710 MOV X0, X1
	0x03980714 MOV X1, X31
	0x03980718 B 0x38FF530
	0x0398071C STR X30, [X31 - 0x10]!
	0x03980720 BL 0x1C16F20
	0x03980724 CBZ X1, 0x3980734
	0x03980728 MOV X0, X1
	0x0398072C MOV X1, X31
	0x03980730 B 0x38FF530
	0x03980734 STR X30, [X31 - 0x10]!
	0x03980738 BL 0x1C16F20
	0x0398073C CBZ X1, 0x398074C
	0x03980740 MOV X0, X1
	0x03980744 MOV X1, X31
	0x03980748 B 0x38FF530
	0x0398074C STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xA62000
	015 Move W8, [X22+2620]
	016 Move W21, W2
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x7CE000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move X0, 0x776000
	027 Move X0, [X0+2504]
	028 Call 0x1C17CF4
	029 Move X0, 0x7CE000
	030 Move X0, [X0+4008]
	031 Call 0x1C17CF4
	032 Move X0, 0x7D1000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move X0, 0x7D1000
	036 Move X0, [X0+896]
	037 Call 0x1C17CF4
	038 Move X0, 0x7D1000
	039 Move X0, [X0+824]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2620], W8
	043 Compare X20, 0
	044 JumpIfEqual {257}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X24, 0x7D1000
	048 Move X24, [X24+824]
	049 Move X0, [X24]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X24]
	055 Move X8, [X0+184]
	056 Move X26, 0x7CE000
	057 Move X25, 0x776000
	058 Move X22, [X8+24]
	059 Move X26, [X26+4000]
	060 Move X25, [X25+2504]
	061 Compare X22, 0
	062 JumpIfNotEqual {84}
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X24]
	068 Move X9, 0x7CE000
	069 Move X8, [X0+184]
	070 Move X9, [X9+4008]
	071 Move X23, [X8]
	072 Move X0, [X9]
	073 Call 0x1C17F10
	074 Move X8, 0x7D1000
	075 Move X8, [X8+888]
	076 Move X1, X23
	077 Move X3, X31
	078 Move X22, X0
	079 Move X2, [X8]
	080 Call Func`2<Object, Object>..ctor, X0, X1, X2
	081 Move X8, [X24]
	082 Move X8, [X8+184]
	083 Move [X8+24], X22
	084 Move X2, [X26]
	085 Move X0, X20
	086 Move X1, X22
	087 Call Enumerable.SelectMany, X0, X1
	088 Move X1, [X25]
	089 Call Enumerable.ToArray, X0
	090 Move X23, 0xA59000
	091 Move W8, [X23+1923]
	092 Move X22, X0
	093 Compare W8, 0
	094 JumpIfNotEqual {100}
	095 Move X0, 0x774000
	096 Move X0, [X0+1440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X23+1923], W8
	100 Move X8, 0x774000
	101 Move X8, [X8+1440]
	102 Move X8, [X8]
	103 Move X9, [X8+184]
	104 Move X8, [X20+24]
	105 Move S8, [X9]
	106 Move S9, [X9+4]
	107 Move V10, [X9+8]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X23, X31
	110 And X8, X8, 0
	111 Add X27, X20, 32
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X1, [X27]
	114 Move X0, X19
	115 Move X2, X31
	116 Call Math.Normal, X0, X1
	117 Move W8, [X20+24]
	118 Add X23, X23, 1
	119 Add S8, S8, S0
	120 Add S9, S9, S1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add S10, S10, S2
	123 Compare X19, 0
	124 JumpIfEqual {257}
	125 Move X0, [X19+88]
	126 NotImplemented "Instruction SCVTF not yet implemented."
	127 NotImplemented "Instruction FDIV not yet implemented."
	128 NotImplemented "Instruction FDIV not yet implemented."
	129 NotImplemented "Instruction FDIV not yet implemented."
	130 Move X1, X22
	131 Move X2, X31
	132 Call Projection.PlanarProject, X0, X1, X2
	133 Move X23, X0
	134 Move X0, X19
	135 Move W1, W21
	136 Call UVEditing.GetUVs, X0, X1
	137 Compare X22, 0
	138 JumpIfEqual {257}
	139 Move W9, [X22+24]
	140 Move X1, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, W31
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Compare X23, 0
	145 JumpIfEqual {257}
	146 Move W9, [X23+24]
	147 Move X8, W8
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Compare X1, 0
	150 JumpIfEqual {257}
	151 Add X9, X22, X8
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W10, [X1+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X10, X23, X8
	156 Move V0, [X10+32]
	157 Add X9, X1, X9
	158 Add W8, W8, 1
	159 Move [X9+32], D0
	160 Move W9, [X22+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W3, 1
	163 Move X0, X19
	164 Move W2, W21
	165 Call UVEditing.ApplyUVs, X0, X1, X2, X3
	166 Move W8, [X20+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X21, X31
	169 Add X22, X20, 32
	170 Move TEMP, 0
	171 Not TEMP
	172 Move W23, TEMP
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, [X22]
	175 Compare X0, 0
	176 JumpIfEqual {257}
	177 Move X1, X31
	178 Move [X0+80], W23
	179 Call Face.get_distinctIndexesInternal, X0
	180 Move X1, X0
	181 Move X0, X19
	182 Call UVEditing.SplitUVs, X0, X1
	183 Move W8, [X20+24]
	184 Add X21, X21, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X0, [X24]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {192}
	190 Call 0x1C17DFC
	191 Move X0, [X24]
	192 Move X8, [X0+184]
	193 Move X21, [X8+32]
	194 Compare X21, 0
	195 JumpIfNotEqual {217}
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {201}
	199 Call 0x1C17DFC
	200 Move X0, [X24]
	201 Move X9, 0x7CE000
	202 Move X8, [X0+184]
	203 Move X9, [X9+4008]
	204 Move X22, [X8]
	205 Move X0, [X9]
	206 Call 0x1C17F10
	207 Move X8, 0x7D1000
	208 Move X8, [X8+896]
	209 Move X1, X22
	210 Move X3, X31
	211 Move X21, X0
	212 Move X2, [X8]
	213 Call Func`2<Object, Object>..ctor, X0, X1, X2
	214 Move X8, [X24]
	215 Move X8, [X8+184]
	216 Move [X8+32], X21
	217 Move X2, [X26]
	218 Move X0, X20
	219 Move X1, X21
	220 Call Enumerable.SelectMany, X0, X1
	221 Move X1, [X25]
	222 Call Enumerable.ToArray, X0
	223 Move X8, -48844800
	224 Move V0, [X8+1040]
	225 Move X1, X0
	226 Move X0, X19
	227 Move X20, [X31+96]
	228 Move X19, [X31+104]
	229 Move X22, [X31+80]
	230 Move X21, [X31+88]
	231 Move X24, [X31+64]
	232 Move X23, [X31+72]
	233 Move X26, [X31+48]
	234 Move X25, [X31+56]
	235 Move X30, [X31+32]
	236 Move X27, [X31+40]
	237 Move D9, [X31+16]
	238 Move D8, [X31+24]
	239 Move V10, [X31+112]
	240 Call UVEditing.SewUVs, X0, X1, V0
	241 Return 
	242 Move X20, [X31+96]
	243 Move X19, [X31+104]
	244 Move X22, [X31+80]
	245 Move X21, [X31+88]
	246 Move X24, [X31+64]
	247 Move X23, [X31+72]
	248 Move X26, [X31+48]
	249 Move X25, [X31+56]
	250 Move X30, [X31+32]
	251 Move X27, [X31+40]
	252 Move D9, [X31+16]
	253 Move D8, [X31+24]
	254 Move V10, [X31+112]
	255 Return 
	256 Call 0x1C17F28
	257 Call 0x1C17F20

Method: System.Void ProjectFacesBox(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces, System.Int32 channel = 0)

Disassembly:
	0x03980750 BL 0x1C16F20
	0x03980754 STR X30, [X31 - 0x10]!
	0x03980758 CBZ X1, 0x3980794
	0x0398075C LDR X8, [X1 + 0x20]
	0x03980760 LDR X9, [X0 + 0x10]
	0x03980764 CMP X8, X9
	0x03980768 B.EQ 0x3980774
	0x0398076C MOV W0, W31
	0x03980770 B 0x398078C
	0x03980774 LDR X8, [X1 + 0x38]
	0x03980778 CBZ X8, 0x398076C
	0x0398077C LDR X8, [X8 + 0x20]
	0x03980780 LDR X9, [X0 + 0x18]
	0x03980784 CMP X8, X9
	0x03980788 CSET W0, EQ
	0x0398078C LDR X30, [X31], #0x10
	0x03980790 RET
	0x03980794 BL 0x1C16F20
	0x03980798 STP X30, X21, [X31 - 0x20]!
	0x0398079C STP X20, X19, [X31 + 0x10]
	0x039807A0 ADRP X21, 0xA61000
	0x039807A4 LDRB W8, [X21 + 0xA42]
	0x039807A8 MOV X19, X1
	0x039807AC MOV X20, X0
	0x039807B0 TBNZ X8, 0x0, 0x39807C8
	0x039807B4 ADRP X0, 0x7CA000
	0x039807B8 LDR X0, [X0 + 0x3D0]
	0x039807BC BL 0x1C16CF4
	0x039807C0 MOVZ W8, 0x1
	0x039807C4 STRB W8, [X21 + 0xA42]
	0x039807C8 LDR W8, [X20 + 0x10]
	0x039807CC UBFM X9, X19, 0x20, 0x3F
	0x039807D0 LDP X20, X19, [X31 + 0x10]
	0x039807D4 CMP W8, W9
	0x039807D8 CSET W0, EQ
	0x039807DC LDP X30, X21, [X31], #0x20
	0x039807E0 RET
	0x039807E4 STP X30, X23, [X31 - 0x30]!
	0x039807E8 STP X22, X21, [X31 + 0x10]
	0x039807EC STP X20, X19, [X31 + 0x20]
	0x039807F0 ADRP X22, 0xA61000
	0x039807F4 ADRP X23, 0x773000
	0x039807F8 LDRB W8, [X22 + 0xA43]
	0x039807FC LDR X23, [X23 + 0x598]
	0x03980800 MOV W21, W2
	0x03980804 MOV X20, X1
	0x03980808 MOV X19, X0
	0x0398080C TBNZ X8, 0x0, 0x398086C
	0x03980810 ADRP X0, 0x777000
	0x03980814 LDR X0, [X0 + 0xB68]
	0x03980818 BL 0x1C16CF4
	0x0398081C ADRP X0, 0x777000
	0x03980820 LDR X0, [X0 + 0xB70]
	0x03980824 BL 0x1C16CF4
	0x03980828 ADRP X0, 0x774000
	0x0398082C LDR X0, [X0 + 0xE28]
	0x03980830 BL 0x1C16CF4
	0x03980834 ADRP X0, 0x79D000
	0x03980838 LDR X0, [X0 + 0xF38]
	0x0398083C BL 0x1C16CF4
	0x03980840 ADRP X0, 0x774000
	0x03980844 LDR X0, [X0 + 0xE30]
	0x03980848 BL 0x1C16CF4
	0x0398084C ADRP X0, 0x773000
	0x03980850 LDR X0, [X0 + 0x598]
	0x03980854 BL 0x1C16CF4
	0x03980858 ADRP X0, 0x7CE000
	0x0398085C LDR X0, [X0 + 0xF88]
	0x03980860 BL 0x1C16CF4
	0x03980864 MOVZ W8, 0x1
	0x03980868 STRB W8, [X22 + 0xA43]
	0x0398086C LDR X0, [X23]
	0x03980870 LDR W8, [X0 + 0xE0]
	0x03980874 CBNZ W8, 0x398087C
	0x03980878 BL 0x1C16DFC
	0x0398087C MOV X0, X19
	0x03980880 MOV X1, X31
	0x03980884 MOV X2, X31
	0x03980888 BL 0x3C3883C
	0x0398088C TBNZ X0, 0x0, 0x3980A8C
	0x03980890 CBZ X20, 0x3980AAC
	0x03980894 CBZ X19, 0x3980A6C
	0x03980898 MOV X0, X19
	0x0398089C MOV X1, X31
	0x039808A0 MOV X2, X31
	0x039808A4 BL 0x3912114
	0x039808A8 TBZ X21, 0x0, 0x39808D4
	0x039808AC LDR W8, [X20 + 0x18]
	0x039808B0 CBZ W8, 0x3980A88
	0x039808B4 CBZ X0, 0x3980A6C
	0x039808B8 LDRSW X8, [X20 + 0x20]
	0x039808BC LDR W9, [X0 + 0x18]
	0x039808C0 CMP W8, W9
	0x039808C4 B.CS 0x3980A88
	0x039808C8 ADD X8, X0, X8, 0x3, LSL
	0x039808CC LDR X21, [X8 + 0x20]
	0x039808D0 B 0x39808E4
	0x039808D4 MOV X1, X20
	0x039808D8 MOV X2, X31
	0x039808DC BL 0x393FA98
	0x039808E0 MOV X21, X0
	0x039808E4 MOV X0, X19
	0x039808E8 MOV X1, X20
	0x039808EC MOV X2, X31
	0x039808F0 BL 0x391CEC4
	0x039808F4 MOV X0, X19
	0x039808F8 MOV X1, X20
	0x039808FC BL 0x397E274
	0x03980900 LDR W8, [X20 + 0x18]
	0x03980904 CBZ W8, 0x3980A88
	0x03980908 LDR W1, [X20 + 0x20]
	0x0398090C ADRP X20, 0x7CE000
	0x03980910 LDR X20, [X20 + 0xF88]
	0x03980914 MOV X0, X19
	0x03980918 MOV X2, X31
	0x0398091C BL 0x391B5D8
	0x03980920 LDR X8, [X20]
	0x03980924 MOV W20, W0
	0x03980928 LDR W9, [X8 + 0xE0]
	0x0398092C CBNZ W9, 0x3980938
	0x03980930 MOV X0, X8
	0x03980934 BL 0x1C16DFC
	0x03980938 MOV X0, X19
	0x0398093C MOV W1, W20
	0x03980940 MOV X2, X21
	0x03980944 MOV X3, X31
	0x03980948 BL 0x39418C0
	0x0398094C LDR X8, [X19 + 0x30]
	0x03980950 CBZ X8, 0x3980A6C
	0x03980954 LDR W9, [X8 + 0x18]
	0x03980958 CMP W20, W9
	0x0398095C B.CS 0x3980A88
	0x03980960 ADRP X9, 0x774000
	0x03980964 LDR X9, [X9 + 0xE30]
	0x03980968 ADD X8, X8, W20, 0x3, SXTW
	0x0398096C ADRP X20, 0x777000
	0x03980970 LDR X21, [X8 + 0x20]
	0x03980974 LDR X0, [X9]
	0x03980978 LDR X20, [X20 + 0xB70]
	0x0398097C BL 0x1C16F10
	0x03980980 LDR X1, [X20]
	0x03980984 MOV X20, X0
	0x03980988 BL 0x2FDBF14
	0x0398098C MOV X0, X19
	0x03980990 MOV X1, X20
	0x03980994 BL 0x3976B28
	0x03980998 CBZ X21, 0x3980A6C
	0x0398099C MOV X0, X21
	0x039809A0 MOV X1, X31
	0x039809A4 BL 0x393492C
	0x039809A8 CMP W0, 0x1
	0x039809AC B.LT 0x3980A64
	0x039809B0 ADRP X23, 0x777000
	0x039809B4 LDR X23, [X23 + 0xB68]
	0x039809B8 MOV W22, W31
	0x039809BC MOVN W19, 0x0
	0x039809C0 MOV X0, X21
	0x039809C4 MOV W1, W22
	0x039809C8 MOV X2, X31
	0x039809CC BL 0x39282DC
	0x039809D0 CBZ X20, 0x3980A6C
	0x039809D4 LDR X2, [X23]
	0x039809D8 MOV W1, W0
	0x039809DC MOV X0, X20
	0x039809E0 BL 0x2FDCA84
	0x039809E4 TBNZ X0, 0x0, 0x39809FC
	0x039809E8 MOV X0, X21
	0x039809EC MOV W1, W22
	0x039809F0 MOV X2, X31
	0x039809F4 BL 0x39282DC
	0x039809F8 MOV W19, W0
	0x039809FC MOV X0, X21
	0x03980A00 MOV X1, X31
	0x03980A04 ADD W22, W22, 0x1
	0x03980A08 BL 0x393492C
	0x03980A0C CMP W22, W0
	0x03980A10 B.LT 0x39809C0
	0x03980A14 CBZ X20, 0x3980A6C
	0x03980A18 LDR W8, [X20 + 0x18]
	0x03980A1C CMP W8, 0x1
	0x03980A20 B.LT 0x3980A70
	0x03980A24 ADRP X23, 0x79D000
	0x03980A28 LDR X23, [X23 + 0xF38]
	0x03980A2C MOV W21, W31
	0x03980A30 MOV W22, W19
	0x03980A34 LDR X2, [X23]
	0x03980A38 MOV X0, X20
	0x03980A3C MOV W1, W21
	0x03980A40 BL 0x2FDC41C
	0x03980A44 LDR W8, [X20 + 0x18]
	0x03980A48 CMP W19, W0
	0x03980A4C CSET W9, GT
	0x03980A50 ADD W21, W21, 0x1
	0x03980A54 CMP W21, W8
	0x03980A58 SUB W22, W22, W9
	0x03980A5C B.LT 0x3980A34
	0x03980A60 B 0x3980A74
	0x03980A64 MOVN W19, 0x0
	0x03980A68 CBNZ X20, 0x3980A18
	0x03980A6C BL 0x1C16F20
	0x03980A70 MOV W22, W19
	0x03980A74 MOV W0, W22
	0x03980A78 LDP X20, X19, [X31 + 0x20]
	0x03980A7C LDP X22, X21, [X31 + 0x10]
	0x03980A80 LDP X30, X23, [X31], #0x30
	0x03980A84 RET
	0x03980A88 BL 0x1C16F28
	0x03980A8C ADRP X0, 0x778000
	0x03980A90 LDR X0, [X0 + 0x528]
	0x03980A94 BL 0x1C16D08
	0x03980A98 BL 0x1C16F10
	0x03980A9C MOV X19, X0
	0x03980AA0 ADRP X0, 0x7CD000
	0x03980AA4 LDR X0, [X0 + 0xE90]
	0x03980AA8 B 0x3980AC8
	0x03980AAC ADRP X0, 0x778000
	0x03980AB0 LDR X0, [X0 + 0x528]
	0x03980AB4 BL 0x1C16D08
	0x03980AB8 BL 0x1C16F10
	0x03980ABC MOV X19, X0
	0x03980AC0 ADRP X0, 0x7AB000
	0x03980AC4 LDR X0, [X0 + 0xE10]
	0x03980AC8 BL 0x1C16D08
	0x03980ACC MOV X1, X0
	0x03980AD0 MOV X0, X19
	0x03980AD4 MOV X2, X31
	0x03980AD8 BL 0x330E100
	0x03980ADC ADRP X0, 0x7D0000
	0x03980AE0 LDR X0, [X0 + 0x3F8]
	0x03980AE4 BL 0x1C16D08
	0x03980AE8 MOV X1, X0
	0x03980AEC MOV X0, X19
	0x03980AF0 BL 0x1C16DEC
	0x03980AF4 STR X30, [X31 - 0x30]!
	0x03980AF8 STP X22, X21, [X31 + 0x10]
	0x03980AFC STP X20, X19, [X31 + 0x20]
	0x03980B00 ADRP X21, 0xA61000
	0x03980B04 ADRP X22, 0x774000
	0x03980B08 LDRB W8, [X21 + 0xA44]
	0x03980B0C LDR X22, [X22 + 0xE58]
	0x03980B10 MOV X20, X1
	0x03980B14 MOV X19, X0
	0x03980B18 TBNZ X8, 0x0, 0x3980B30
	0x03980B1C ADRP X0, 0x774000
	0x03980B20 LDR X0, [X0 + 0xE58]
	0x03980B24 BL 0x1C16CF4
	0x03980B28 MOVZ W8, 0x1
	0x03980B2C STRB W8, [X21 + 0xA44]
	0x03980B30 LDR X0, [X22]
	0x03980B34 MOVZ W1, 0x2
	0x03980B38 BL 0x1C16D6C
	0x03980B3C CBZ X0, 0x3980B78
	0x03980B40 LDR W8, [X0 + 0x18]
	0x03980B44 MOV X1, X0
	0x03980B48 CBZ W8, 0x3980B74
	0x03980B4C CMP W8, 0x1
	0x03980B50 STR W20, [X1 + 0x20]
	0x03980B54 B.EQ 0x3980B74
	0x03980B58 UBFM X8, X20, 0x20, 0x3F
	0x03980B5C MOV X0, X19
	0x03980B60 LDP X20, X19, [X31 + 0x20]
	0x03980B64 LDP X22, X21, [X31 + 0x10]
	0x03980B68 STR W8, [X1 + 0x24]
	0x03980B6C LDR X30, [X31], #0x30
	0x03980B70 B 0x3980B7C
	0x03980B74 BL 0x1C16F28
	0x03980B78 BL 0x1C16F20
	0x03980B7C STR X30, [X31 - 0x50]!
	0x03980B80 STP X26, X25, [X31 + 0x10]
	0x03980B84 STP X24, X23, [X31 + 0x20]
	0x03980B88 STP X22, X21, [X31 + 0x30]
	0x03980B8C STP X20, X19, [X31 + 0x40]
	0x03980B90 ADRP X20, 0xA61000
	0x03980B94 ADRP X22, 0x773000
	0x03980B98 LDRB W8, [X20 + 0xA45]
	0x03980B9C LDR X22, [X22 + 0x598]
	0x03980BA0 MOV X21, X1
	0x03980BA4 MOV X19, X0
	0x03980BA8 TBNZ X8, 0x0, 0x3980C08
	0x03980BAC ADRP X0, 0x7CE000
	0x03980BB0 LDR X0, [X0 + 0xD78]
	0x03980BB4 BL 0x1C16CF4
	0x03980BB8 ADRP X0, 0x79D000
	0x03980BBC LDR X0, [X0 + 0x8B0]
	0x03980BC0 BL 0x1C16CF4
	0x03980BC4 ADRP X0, 0x773000
	0x03980BC8 LDR X0, [X0 + 0xE00]
	0x03980BCC BL 0x1C16CF4
	0x03980BD0 ADRP X0, 0x79B000
	0x03980BD4 LDR X0, [X0 + 0x7B8]
	0x03980BD8 BL 0x1C16CF4
	0x03980BDC ADRP X0, 0x79B000
	0x03980BE0 LDR X0, [X0 + 0x7C0]
	0x03980BE4 BL 0x1C16CF4
	0x03980BE8 ADRP X0, 0x773000
	0x03980BEC LDR X0, [X0 + 0xE18]
	0x03980BF0 BL 0x1C16CF4
	0x03980BF4 ADRP X0, 0x773000
	0x03980BF8 LDR X0, [X0 + 0x598]
	0x03980BFC BL 0x1C16CF4
	0x03980C00 MOVZ W8, 0x1
	0x03980C04 STRB W8, [X20 + 0xA45]
	0x03980C08 LDR X0, [X22]
	0x03980C0C LDR W8, [X0 + 0xE0]
	0x03980C10 CBNZ W8, 0x3980C18
	0x03980C14 BL 0x1C16DFC
	0x03980C18 MOV X0, X19
	0x03980C1C MOV X1, X31
	0x03980C20 MOV X2, X31
	0x03980C24 BL 0x3C3883C
	0x03980C28 TBNZ X0, 0x0, 0x3980E68
	0x03980C2C CBZ X21, 0x3980E88
	0x03980C30 CBZ X19, 0x3980E64
	0x03980C34 MOV X0, X19
	0x03980C38 MOV X1, X31
	0x03980C3C BL 0x3916198
	0x03980C40 CBZ X0, 0x3980E64
	0x03980C44 ADRP X8, 0x7CE000
	0x03980C48 LDR X8, [X8 + 0xD78]
	0x03980C4C ADRP X22, 0x79B000
	0x03980C50 MOV X20, X0
	0x03980C54 LDR X1, [X8]
	0x03980C58 LDR X22, [X22 + 0x7B8]
	0x03980C5C BL 0x2A0A118
	0x03980C60 LDR X8, [X21]
	0x03980C64 LDR X1, [X22]
	0x03980C68 MOV W22, W0
	0x03980C6C LDRH W9, [X8 + 0x12E]
	0x03980C70 CBZ X9, 0x3980C94
	0x03980C74 LDR X10, [X8 + 0xB0]
	0x03980C78 ADD X10, X10, 0x8
	0x03980C7C LDUR X11, [X10 - 0x8]
	0x03980C80 CMP X11, X1
	0x03980C84 B.EQ 0x3980CA4
	0x03980C88 SUBS X9, X9, 0x1
	0x03980C8C ADD X10, X10, 0x10
	0x03980C90 B.NE 0x3980C7C
	0x03980C94 MOV X0, X21
	0x03980C98 MOV W2, W31
	0x03980C9C BL 0x1C5C788
	0x03980CA0 B 0x3980CB0
	0x03980CA4 LDRSW X9, [X10]
	0x03980CA8 ADD X8, X8, X9, 0x4, LSL
	0x03980CAC ADD X0, X8, 0x138
	0x03980CB0 LDP X8, X1, [X0]
	0x03980CB4 ADRP X23, 0x773000
	0x03980CB8 LDR X23, [X23 + 0xE00]
	0x03980CBC MOV X0, X21
	0x03980CC0 BLR X8
	0x03980CC4 MOV X21, X0
	0x03980CC8 CBZ X0, 0x3980ED0
	0x03980CCC ADRP X24, 0x773000
	0x03980CD0 ADRP X25, 0x79B000
	0x03980CD4 ADRP X26, 0x79D000
	0x03980CD8 LDR X24, [X24 + 0xE18]
	0x03980CDC LDR X25, [X25 + 0x7C0]
	0x03980CE0 LDR X26, [X26 + 0x8B0]
	0x03980CE4 LDR X8, [X21]
	0x03980CE8 LDR X1, [X24]
	0x03980CEC LDRH W9, [X8 + 0x12E]
	0x03980CF0 CBZ X9, 0x3980D14
	0x03980CF4 LDR X10, [X8 + 0xB0]
	0x03980CF8 ADD X10, X10, 0x8
	0x03980CFC LDUR X11, [X10 - 0x8]
	0x03980D00 CMP X11, X1
	0x03980D04 B.EQ 0x3980D24
	0x03980D08 SUBS X9, X9, 0x1
	0x03980D0C ADD X10, X10, 0x10
	0x03980D10 B.NE 0x3980CFC
	0x03980D14 MOV X0, X21
	0x03980D18 MOV W2, W31
	0x03980D1C BL 0x1C5C788
	0x03980D20 B 0x3980D30
	0x03980D24 LDRSW X9, [X10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X23, 0xA62000
	015 Move X21, 0x7D1000
	016 Move X19, 0x7D1000
	017 Move W8, [X23+2621]
	018 Move X21, [X21+904]
	019 Move X19, [X19+912]
	020 Move W24, W2
	021 Move X22, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {86}
	027 Move X0, 0x7D1000
	028 Move X0, [X0+920]
	029 Call 0x1C17CF4
	030 Move X0, 0x7D1000
	031 Move X0, [X0+928]
	032 Call 0x1C17CF4
	033 Move X0, 0x7D1000
	034 Move X0, [X0+936]
	035 Call 0x1C17CF4
	036 Move X0, 0x7D1000
	037 Move X0, [X0+912]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D1000
	040 Move X0, [X0+944]
	041 Call 0x1C17CF4
	042 Move X0, 0x7D1000
	043 Move X0, [X0+904]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CE000
	046 Move X0, [X0+4000]
	047 Call 0x1C17CF4
	048 Move X0, 0x776000
	049 Move X0, [X0+2504]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D1000
	052 Move X0, [X0+952]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D1000
	055 Move X0, [X0+960]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D1000
	058 Move X0, [X0+968]
	059 Call 0x1C17CF4
	060 Move X0, 0x7CE000
	061 Move X0, [X0+4008]
	062 Call 0x1C17CF4
	063 Move X0, 0x7D1000
	064 Move X0, [X0+976]
	065 Call 0x1C17CF4
	066 Move X0, 0x7D1000
	067 Move X0, [X0+984]
	068 Call 0x1C17CF4
	069 Move X0, 0x7CE000
	070 Move X0, [X0+3600]
	071 Call 0x1C17CF4
	072 Move X0, 0x7CF000
	073 Move X0, [X0+2616]
	074 Call 0x1C17CF4
	075 Move X0, 0x7CE000
	076 Move X0, [X0+3568]
	077 Call 0x1C17CF4
	078 Move X0, 0x7D1000
	079 Move X0, [X0+992]
	080 Call 0x1C17CF4
	081 Move X0, 0x7D1000
	082 Move X0, [X0+824]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X23+2621], W8
	086 NotImplemented "Instruction MOVI not yet implemented."
	087 Move X0, X20
	088 Move W1, W24
	089 Move [X31+80], X31
	090 Move [X31+48], V0
	091 Move [X31+56], V0
	092 Move [X31+4], W24
	093 Call UVEditing.GetUVs, X0, X1
	094 Move X8, [X21]
	095 Move X21, X0
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X1, [X19]
	099 Move X23, X0
	100 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	101 Compare X22, 0
	102 JumpIfEqual {352}
	103 Move W8, [X22+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X28, 0x7D1000
	106 Move X28, [X28+928]
	107 Move W19, W31
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W27, TEMP
	111 Move W29, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X26, X22, W19
	114 Add X26, X26, 32
	115 Move X1, [X26]
	116 Move X0, X20
	117 Move X2, X31
	118 Call Math.Normal, X0, X1
	119 Move X0, X31
	120 Call Projection.VectorToProjectionAxis, X0
	121 Compare X23, 0
	122 JumpIfEqual {352}
	123 Move X2, [X28]
	124 Move W24, W0
	125 Move X0, X23
	126 Move W1, W24
	127 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {159}
	132 Move X8, 0x7D1000
	133 Move X8, [X8+944]
	134 Move X0, X23
	135 Move W1, W24
	136 Move X2, [X8]
	137 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	138 Move W8, [X22+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare X0, 0
	141 JumpIfEqual {352}
	142 Move X9, 0x7CE000
	143 Move X1, [X26]
	144 Move W10, [X0+28]
	145 Move X8, [X0+16]
	146 Move X9, [X9+3600]
	147 Add W10, W10, 1
	148 Move X9, [X9]
	149 Move [X0+28], W10
	150 Compare X8, 0
	151 JumpIfEqual {352}
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W11, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add W9, W10, 1
	156 Add X8, X8, X10
	157 Move [X0+24], W9
	158 Move [X8+32], X1
	159 Move X8, 0x7CE000
	160 Move X8, [X8+3568]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X8, 0x7CF000
	164 Move X8, [X8+2616]
	165 Move X25, X0
	166 Move X1, [X8]
	167 Call List`1<Object>..ctor, X0
	168 Move W8, [X22+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X25, 0
	171 JumpIfEqual {352}
	172 Move X9, 0x7CE000
	173 Move X1, [X26]
	174 Move W10, [X25+28]
	175 Move X8, [X25+16]
	176 Move X9, [X9+3600]
	177 Add W10, W10, 1
	178 Move X9, [X9]
	179 Move [X25+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {352}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W11, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W9, W10, 1
	186 Add X8, X8, X10
	187 Move [X25+24], W9
	188 Move [X8+32], X1
	189 Move X8, [X9+32]
	190 Move X8, [X8+192]
	191 Move X2, [X8+112]
	192 Call List`1<Object>.AddWithResize, X0, X1
	193 Move X8, [X9+32]
	194 Move X0, X25
	195 Move X8, [X8+192]
	196 Move X2, [X8+112]
	197 Call List`1<Object>.AddWithResize, X0, X1
	198 Move X8, 0x7D1000
	199 Move X8, [X8+920]
	200 Move X0, X23
	201 Move W1, W24
	202 Move X2, X25
	203 Move X3, [X8]
	204 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	205 Move X8, [X22+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X9, [X26]
	208 Compare X9, 0
	209 JumpIfEqual {352}
	210 Add W19, W19, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X9+80], W27
	213 Move [X9+76], W29
	214 Compare X23, 0
	215 JumpIfEqual {352}
	216 Move X8, 0x7D1000
	217 Move X8, [X8+936]
	218 Move X27, 0x7D1000
	219 Move X28, 0x7D1000
	220 Move X26, 0x7D1000
	221 Move X27, [X27+960]
	222 Move X28, [X28+824]
	223 Move X26, [X26+992]
	224 Move X1, [X8]
	225 Move X19, 0x7CE000
	226 Move X29, 0x776000
	227 Move X19, [X19+4000]
	228 Move X29, [X29+2504]
	229 Add X8, X31, 8
	230 Move X0, X23
	231 Call Dictionary`2<Int32Enum, Object>.GetEnumerator, X0
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Move X8, [X31+40]
	235 Move [X31+48], V0
	236 Move [X31+56], V1
	237 Move [X31+80], X8
	238 Move X1, [X27]
	239 Add X0, X31, 48
	240 Call Enumerator<Int32Enum, Object>.MoveNext, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {322}
	245 Move X8, [X28]
	246 Move W22, [X31+64]
	247 Move X23, [X31+72]
	248 Move W9, [X8+224]
	249 Compare W9, 0
	250 JumpIfNotEqual {254}
	251 Move X0, X8
	252 Call 0x1C17DFC
	253 Move X8, [X28]
	254 Move X9, [X8+184]
	255 Move X24, [X9+40]
	256 Compare X24, 0
	257 JumpIfNotEqual {278}
	258 Move W9, [X8+224]
	259 Compare W9, 0
	260 JumpIfNotEqual {264}
	261 Move X0, X8
	262 Call 0x1C17DFC
	263 Move X8, [X28]
	264 Move X8, [X8+184]
	265 Move X25, [X8]
	266 Move X8, 0x7CE000
	267 Move X8, [X8+4008]
	268 Move X0, [X8]
	269 Call 0x1C17F10
	270 Move X2, [X26]
	271 Move X24, X0
	272 Move X1, X25
	273 Move X3, X31
	274 Call Func`2<Object, Object>..ctor, X0, X1, X2
	275 Move X8, [X28]
	276 Move X8, [X8+184]
	277 Move [X8+40], X24
	278 Move X2, [X19]
	279 Move X0, X23
	280 Move X1, X24
	281 Call Enumerable.SelectMany, X0, X1
	282 Move X1, [X29]
	283 Call Enumerable.ToArray, X0
	284 Compare X20, 0
	285 JumpIfEqual {354}
	286 Move X24, [X20+88]
	287 Move X23, X0
	288 Move W0, W22
	289 Move X1, X31
	290 Call Projection.ProjectionAxisToVector, X0
	291 Move X0, X24
	292 Move X1, X23
	293 Move X2, X31
	294 Call Projection.PlanarProject, X0, X1, X2
	295 Compare X23, 0
	296 JumpIfEqual {355}
	297 Move W9, [X23+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move W8, W31
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Compare X0, 0
	302 JumpIfEqual {348}
	303 Move W9, [X0+24]
	304 Move X8, W8
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Compare X21, 0
	307 JumpIfEqual {347}
	308 Add X9, X23, X8
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Move W10, [X21+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Add X10, X0, X8
	313 Move V0, [X10+32]
	314 Add X9, X21, X9
	315 Add W8, W8, 1
	316 Move [X9+32], D0
	317 Move W9, [X23+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X20
	320 Move X1, X23
	321 Call UVEditing.SplitUVs, X0, X1
	322 Move X8, 0x7D1000
	323 Move X8, [X8+952]
	324 Add X0, X31, 48
	325 Move X1, [X8]
	326 Call Enumerator<Int32Enum, Object>.Dispose, X0
	327 Move W19, [X31+4]
	328 Move W3, 1
	329 Move X0, X20
	330 Move X1, X21
	331 Move W2, W19
	332 Call UVEditing.ApplyUVs, X0, X1, X2, X3
	333 Move X20, [X31+176]
	334 Move X19, [X31+184]
	335 Move X22, [X31+160]
	336 Move X21, [X31+168]
	337 Move X24, [X31+144]
	338 Move X23, [X31+152]
	339 Move X26, [X31+128]
	340 Move X25, [X31+136]
	341 Move X28, [X31+112]
	342 Move X27, [X31+120]
	343 Move X29, [X31+96]
	344 Move X30, [X31+104]
	345 Add X31, X31, 192
	346 Return 
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F28
	350 Call 0x1C17F28
	351 Call 0x1C17F28
	352 Call 0x1C17F20
	353 Call 0x1C17F28
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Move W19, [X31+4]
	357 Move X22, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X22
	360 Call 0x3EB2AD0
	361 Move X23, [X0]
	362 Call 0x3EB2AE0
	363 Move X8, 0x7D1000
	364 Move X8, [X8+952]
	365 Add X0, X31, 48
	366 Move X1, [X8]
	367 Call Enumerator<Int32Enum, Object>.Dispose, X0
	368 Compare X23, 0
	369 JumpIfEqual {328}
	370 Move X0, X23
	371 Call 0x1C17F18
	372 Move X23, X31
	373 Move X22, X0
	374 Move X8, 0x7D1000
	375 Move X8, [X8+952]
	376 Move X1, [X8]
	377 Add X0, X31, 48
	378 Call Enumerator<Int32Enum, Object>.Dispose, X0
	379 Compare X23, 0
	380 JumpIfNotEqual {383}
	381 Move X0, X22
	382 Call 0x1D2D690
	383 Move X0, X23
	384 Call 0x1C17F18
	385 Call 0x1991590

Method: UnityEngine.Vector2 FindMinimalUV(UnityEngine.Vector2[] uvs, System.Int32[] indices = null, System.Single xMin = 0, System.Single yMin = 0)

Disassembly:
	0x03980D28 ADD X8, X8, X9, 0x4, LSL
	0x03980D2C ADD X0, X8, 0x138
	0x03980D30 LDP X8, X1, [X0]
	0x03980D34 MOV X0, X21
	0x03980D38 BLR X8
	0x03980D3C TBZ X0, 0x0, 0x3980DB4
	0x03980D40 LDR X8, [X21]
	0x03980D44 LDR X1, [X25]
	0x03980D48 LDRH W9, [X8 + 0x12E]
	0x03980D4C CBZ X9, 0x3980D70
	0x03980D50 LDR X10, [X8 + 0xB0]
	0x03980D54 ADD X10, X10, 0x8
	0x03980D58 LDUR X11, [X10 - 0x8]
	0x03980D5C CMP X11, X1
	0x03980D60 B.EQ 0x3980D80
	0x03980D64 SUBS X9, X9, 0x1
	0x03980D68 ADD X10, X10, 0x10
	0x03980D6C B.NE 0x3980D58
	0x03980D70 MOV X0, X21
	0x03980D74 MOV W2, W31
	0x03980D78 BL 0x1C5C788
	0x03980D7C B 0x3980D8C
	0x03980D80 LDRSW X9, [X10]
	0x03980D84 ADD X8, X8, X9, 0x4, LSL
	0x03980D88 ADD X0, X8, 0x138
	0x03980D8C LDP X8, X1, [X0]
	0x03980D90 MOV X0, X21
	0x03980D94 BLR X8
	0x03980D98 MOV W1, W0
	0x03980D9C LDR X3, [X26]
	0x03980DA0 ADD W22, W22, 0x1
	0x03980DA4 MOV X0, X20
	0x03980DA8 MOV W2, W22
	0x03980DAC BL 0x2A0A330
	0x03980DB0 B 0x3980CE4
	0x03980DB4 MOV X22, X31
	0x03980DB8 MOVZ W24, 0xA
	0x03980DBC CBZ X21, 0x3980E18
	0x03980DC0 LDR X8, [X21]
	0x03980DC4 LDR X1, [X23]
	0x03980DC8 LDRH W9, [X8 + 0x12E]
	0x03980DCC CBZ X9, 0x3980DF0
	0x03980DD0 LDR X10, [X8 + 0xB0]
	0x03980DD4 ADD X10, X10, 0x8
	0x03980DD8 LDUR X11, [X10 - 0x8]
	0x03980DDC CMP X11, X1
	0x03980DE0 B.EQ 0x3980E00
	0x03980DE4 SUBS X9, X9, 0x1
	0x03980DE8 ADD X10, X10, 0x10
	0x03980DEC B.NE 0x3980DD8
	0x03980DF0 MOV X0, X21
	0x03980DF4 MOV W2, W31
	0x03980DF8 BL 0x1C5C788
	0x03980DFC B 0x3980E0C
	0x03980E00 LDRSW X9, [X10]
	0x03980E04 ADD X8, X8, X9, 0x4, LSL
	0x03980E08 ADD X0, X8, 0x138
	0x03980E0C LDP X8, X1, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {5}
	004 Add X8, X1, 24
	005 Compare X0, 0
	006 JumpIfEqual {57}
	007 Add X8, X0, 24
	008 Move X9, [X8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move X8, X31
	015 And X9, X9, 0
	016 And W11, W10, W11
	017 Add X10, X1, 32
	018 Compare X1, 0
	019 JumpIfEqual {25}
	020 Move W12, [X1+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W12, [X10]
	023 Compare X0, 0
	024 JumpIfNotEqual {28}
	025 Move W12, W8
	026 Compare X0, 0
	027 JumpIfEqual {57}
	028 Move W13, [X0+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add X13, X0, W12
	031 Move V2, [X13+32]
	032 Move X12, W12
	033 Move TEMP, X11
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {39}
	037 Add X11, X0, X12
	038 Move V3, [X11+36]
	039 Add X11, X0, X12
	040 Move V3, [X11+36]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FCSEL not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move V3, V1
	045 Add X8, X8, 1
	046 Move W11, W31
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move V0, V2
	049 Move V1, V3
	050 Move V3, V1
	051 Move V2, V0
	052 Move V0, V2
	053 Move V1, V3
	054 Move X30, [X31+16]
	055 Return X0
	056 Call 0x1C17F28
	057 Call 0x1C17F20

Method: System.Void ProjectFacesBox(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces, UnityEngine.Vector2 lowerLeftAnchor, System.Int32 channel = 0)

Disassembly:
	0x03980E10 MOV X0, X21
	0x03980E14 BLR X8
	0x03980E18 CBNZ X22, 0x3980ED4
	0x03980E1C CMP W24, 0xA
	0x03980E20 B.EQ 0x3980E28
	0x03980E24 CBNZ W24, 0x3980E4C
	0x03980E28 MOV X0, X19
	0x03980E2C MOV X1, X20
	0x03980E30 LDP X20, X19, [X31 + 0x40]
	0x03980E34 LDP X22, X21, [X31 + 0x30]
	0x03980E38 LDP X24, X23, [X31 + 0x20]
	0x03980E3C LDP X26, X25, [X31 + 0x10]
	0x03980E40 MOV X2, X31
	0x03980E44 LDR X30, [X31], #0x50
	0x03980E48 B 0x3916234
	0x03980E4C LDP X20, X19, [X31 + 0x40]
	0x03980E50 LDP X22, X21, [X31 + 0x30]
	0x03980E54 LDP X24, X23, [X31 + 0x20]
	0x03980E58 LDP X26, X25, [X31 + 0x10]
	0x03980E5C LDR X30, [X31], #0x50
	0x03980E60 RET
	0x03980E64 BL 0x1C16F20
	0x03980E68 ADRP X0, 0x778000
	0x03980E6C LDR X0, [X0 + 0x528]
	0x03980E70 BL 0x1C16D08
	0x03980E74 BL 0x1C16F10
	0x03980E78 MOV X19, X0
	0x03980E7C ADRP X0, 0x7CD000
	0x03980E80 LDR X0, [X0 + 0xE90]
	0x03980E84 B 0x3980EA4
	0x03980E88 ADRP X0, 0x778000
	0x03980E8C LDR X0, [X0 + 0x528]
	0x03980E90 BL 0x1C16D08
	0x03980E94 BL 0x1C16F10
	0x03980E98 MOV X19, X0
	0x03980E9C ADRP X0, 0x7CE000
	0x03980EA0 LDR X0, [X0 + 0x450]
	0x03980EA4 BL 0x1C16D08
	0x03980EA8 MOV X1, X0
	0x03980EAC MOV X0, X19
	0x03980EB0 MOV X2, X31
	0x03980EB4 BL 0x330E100
	0x03980EB8 ADRP X0, 0x7D0000
	0x03980EBC LDR X0, [X0 + 0x400]
	0x03980EC0 BL 0x1C16D08
	0x03980EC4 MOV X1, X0
	0x03980EC8 MOV X0, X19
	0x03980ECC BL 0x1C16DEC
	0x03980ED0 BL 0x1C16F20
	0x03980ED4 MOV X0, X22
	0x03980ED8 BL 0x1C16F18
	0x03980EDC B 0x3980EE8
	0x03980EE0 B 0x3980EE8
	0x03980EE4 B 0x3980EE8
	0x03980EE8 CMP W1, 0x1
	0x03980EEC B.NE 0x3980F08
	0x03980EF0 BL 0x3EB1AD0
	0x03980EF4 LDR X22, [X0]
	0x03980EF8 BL 0x3EB1AE0
	0x03980EFC MOV W24, W31
	0x03980F00 CBNZ X21, 0x3980DC0
	0x03980F04 B 0x3980E18
	0x03980F08 MOV X19, X0
	0x03980F0C MOV X22, X31
	0x03980F10 B 0x3980F18
	0x03980F14 MOV X19, X0
	0x03980F18 CBZ X21, 0x3980F74
	0x03980F1C LDR X8, [X21]
	0x03980F20 LDR X1, [X23]
	0x03980F24 LDRH W9, [X8 + 0x12E]
	0x03980F28 CBZ X9, 0x3980F4C
	0x03980F2C LDR X10, [X8 + 0xB0]
	0x03980F30 ADD X10, X10, 0x8
	0x03980F34 LDUR X11, [X10 - 0x8]
	0x03980F38 CMP X11, X1
	0x03980F3C B.EQ 0x3980F5C
	0x03980F40 SUBS X9, X9, 0x1
	0x03980F44 ADD X10, X10, 0x10
	0x03980F48 B.NE 0x3980F34
	0x03980F4C MOV X0, X21
	0x03980F50 MOV W2, W31
	0x03980F54 BL 0x1C5C788
	0x03980F58 B 0x3980F68
	0x03980F5C LDRSW X9, [X10]
	0x03980F60 ADD X8, X8, X9, 0x4, LSL
	0x03980F64 ADD X0, X8, 0x138
	0x03980F68 LDP X8, X1, [X0]
	0x03980F6C MOV X0, X21
	0x03980F70 BLR X8
	0x03980F74 CBNZ X22, 0x3980F80
	0x03980F78 MOV X0, X19
	0x03980F7C BL 0x1D2C690
	0x03980F80 MOV X0, X22
	0x03980F84 BL 0x1C16F18
	0x03980F88 BL 0x1990590
	0x03980F8C SUB X31, X31, 0x140
	0x03980F90 STP D15, D14, [X31 + 0xA0]
	0x03980F94 STP D13, D12, [X31 + 0xB0]
	0x03980F98 STP D11, D10, [X31 + 0xC0]
	0x03980F9C STP D9, D8, [X31 + 0xD0]
	0x03980FA0 STP X29, X30, [X31 + 0xE0]
	0x03980FA4 STP X28, X27, [X31 + 0xF0]
	0x03980FA8 STP X26, X25, [X31 + 0x100]
	0x03980FAC STP X24, X23, [X31 + 0x110]
	0x03980FB0 STP X22, X21, [X31 + 0x120]
	0x03980FB4 STP X20, X19, [X31 + 0x130]
	0x03980FB8 ADRP X20, 0xA61000
	0x03980FBC ADRP X19, 0x773000
	0x03980FC0 LDRB W8, [X20 + 0xA46]
	0x03980FC4 LDR X19, [X19 + 0x598]
	0x03980FC8 MOV V11.16B, V0.16B
	0x03980FCC MOV X21, X1
	0x03980FD0 MOV X22, X0
	0x03980FD4 TBNZ X8, 0x0, 0x3981160
	0x03980FD8 ADRP X0, 0x7D0000
	0x03980FDC LDR X0, [X0 + 0x408]
	0x03980FE0 BL 0x1C16CF4
	0x03980FE4 ADRP X0, 0x77D000
	0x03980FE8 LDR X0, [X0 + 0x858]
	0x03980FEC BL 0x1C16CF4
	0x03980FF0 ADRP X0, 0x7CE000
	0x03980FF4 LDR X0, [X0 + 0xD08]
	0x03980FF8 BL 0x1C16CF4
	0x03980FFC ADRP X0, 0x7CF000
	0x03981000 LDR X0, [X0 + 0x880]
	0x03981004 BL 0x1C16CF4
	0x03981008 ADRP X0, 0x7CF000
	0x0398100C LDR X0, [X0 + 0x410]
	0x03981010 BL 0x1C16CF4
	0x03981014 ADRP X0, 0x77C000
	0x03981018 LDR X0, [X0 + 0x890]
	0x0398101C BL 0x1C16CF4
	0x03981020 ADRP X0, 0x7CD000
	0x03981024 LDR X0, [X0 + 0xD78]
	0x03981028 BL 0x1C16CF4
	0x0398102C ADRP X0, 0x7CF000
	0x03981030 LDR X0, [X0 + 0x418]
	0x03981034 BL 0x1C16CF4
	0x03981038 ADRP X0, 0x79C000
	0x0398103C LDR X0, [X0 + 0x8B0]
	0x03981040 BL 0x1C16CF4
	0x03981044 ADRP X0, 0x7CF000
	0x03981048 LDR X0, [X0 + 0x420]
	0x0398104C BL 0x1C16CF4
	0x03981050 ADRP X0, 0x77C000
	0x03981054 LDR X0, [X0 + 0x888]
	0x03981058 BL 0x1C16CF4
	0x0398105C ADRP X0, 0x779000
	0x03981060 LDR X0, [X0 + 0x830]
	0x03981064 BL 0x1C16CF4
	0x03981068 ADRP X0, 0x7CE000
	0x0398106C LDR X0, [X0 + 0x888]
	0x03981070 BL 0x1C16CF4
	0x03981074 ADRP X0, 0x779000
	0x03981078 LDR X0, [X0 + 0x838]
	0x0398107C BL 0x1C16CF4
	0x03981080 ADRP X0, 0x7CE000
	0x03981084 LDR X0, [X0 + 0x890]
	0x03981088 BL 0x1C16CF4
	0x0398108C ADRP X0, 0x779000
	0x03981090 LDR X0, [X0 + 0x840]
	0x03981094 BL 0x1C16CF4
	0x03981098 ADRP X0, 0x7CE000
	0x0398109C LDR X0, [X0 + 0x898]
	0x039810A0 BL 0x1C16CF4
	0x039810A4 ADRP X0, 0x7CF000
	0x039810A8 LDR X0, [X0 + 0x428]
	0x039810AC BL 0x1C16CF4
	0x039810B0 ADRP X0, 0x779000
	0x039810B4 LDR X0, [X0 + 0x848]
	0x039810B8 BL 0x1C16CF4
	0x039810BC ADRP X0, 0x779000
	0x039810C0 LDR X0, [X0 + 0x850]
	0x039810C4 BL 0x1C16CF4
	0x039810C8 ADRP X0, 0x773000
	0x039810CC LDR X0, [X0 + 0xE58]
	0x039810D0 BL 0x1C16CF4
	0x039810D4 ADRP X0, 0x7CF000
	0x039810D8 LDR X0, [X0 + 0x430]
	0x039810DC BL 0x1C16CF4
	0x039810E0 ADRP X0, 0x7CF000
	0x039810E4 LDR X0, [X0 + 0x438]
	0x039810E8 BL 0x1C16CF4
	0x039810EC ADRP X0, 0x7CF000
	0x039810F0 LDR X0, [X0 + 0x440]
	0x039810F4 BL 0x1C16CF4
	0x039810F8 ADRP X0, 0x7CF000
	0x039810FC LDR X0, [X0 + 0x448]
	0x03981100 BL 0x1C16CF4
	0x03981104 ADRP X0, 0x7C9000
	0x03981108 LDR X0, [X0 + 0x360]
	0x0398110C BL 0x1C16CF4
	0x03981110 ADRP X0, 0x7C9000
	0x03981114 LDR X0, [X0 + 0x3D0]
	0x03981118 BL 0x1C16CF4
	0x0398111C ADRP X0, 0x773000
	0x03981120 LDR X0, [X0 + 0xE28]
	0x03981124 BL 0x1C16CF4
	0x03981128 ADRP X0, 0x79C000
	0x0398112C LDR X0, [X0 + 0xF38]
	0x03981130 BL 0x1C16CF4
	0x03981134 ADRP X0, 0x772000
	0x03981138 LDR X0, [X0 + 0x5A8]
	0x0398113C BL 0x1C16CF4
	0x03981140 ADRP X0, 0x772000
	0x03981144 LDR X0, [X0 + 0x598]
	0x03981148 BL 0x1C16CF4
	0x0398114C ADRP X0, 0x772000
	0x03981150 LDR X0, [X0 + 0x638]
	0x03981154 BL 0x1C16CF4
	0x03981158 MOVZ W8, 0x1
	0x0398115C STRB W8, [X20 + 0xA46]
	0x03981160 LDR X0, [X19]
	0x03981164 MOVI V0.2D, 0x0
	0x03981168 STP X31, X31, [X31 + 0x80]
	0x0398116C STR X31, [X31 + 0x90]
	0x03981170 STP V0, V0, [X31 + 0x60]
	0x03981174 LDR W8, [X0 + 0xE0]
	0x03981178 CBNZ W8, 0x3981180
	0x0398117C BL 0x1C16DFC
	0x03981180 MOV X0, X22
	0x03981184 MOV X1, X31
	0x03981188 MOV X2, X31
	0x0398118C BL 0x3C3883C
	0x03981190 TBNZ X0, 0x0, 0x39819A8
	0x03981194 CBZ X21, 0x39819C8
	0x03981198 CBZ X22, 0x39819A4
	0x0398119C MOV X0, X22
	0x039811A0 MOV X1, X31
	0x039811A4 MOV X2, X31
	0x039811A8 BL 0x3912114
	0x039811AC LDR X8, [X22 + 0x30]
	0x039811B0 MOV X20, X0
	0x039811B4 MOV X0, X22
	0x039811B8 MOV X1, X21
	0x039811BC MOV X2, X31
	0x039811C0 STR X8, [X31 + 0x38]
	0x039811C4 BL 0x391B738
	0x039811C8 CBZ X0, 0x39819A4
	0x039811CC STR X22, [X31 + 0x30]
	0x039811D0 ADRP X8, 0x772000
	0x039811D4 LDR X8, [X8 + 0x5A8]
	0x039811D8 MOV X28, X0
	0x039811DC ADRP X21, 0x7CF000
	0x039811E0 ADRP X27, 0x7CF000
	0x039811E4 LDR X0, [X8]
	0x039811E8 ADRP X25, 0x779000
	0x039811EC LDR X21, [X21 + 0x428]
	0x039811F0 LDR W29, [X28 + 0x20]
	0x039811F4 LDR W8, [X0 + 0xE0]
	0x039811F8 LDR X27, [X27 + 0x448]
	0x039811FC LDR X25, [X25 + 0x848]
	0x03981200 CBNZ W8, 0x3981208
	0x03981204 BL 0x1C16DFC
	0x03981208 ADRP X8, 0x779000
	0x0398120C LDR X8, [X8 + 0x838]
	0x03981210 ADRP X22, 0x772000
	0x03981214 ADRP X24, 0x7CF000
	0x03981218 ADRP X26, 0x77C000
	0x0398121C ADRP X19, 0x79C000
	0x03981220 ADRP X23, 0x7CF000
	0x03981224 LDR X22, [X22 + 0x638]
	0x03981228 LDR X24, [X24 + 0x430]
	0x0398122C LDR X26, [X26 + 0x858]
	0x03981230 LDR X19, [X19 + 0x8B0]
	0x03981234 LDR X23, [X23 + 0x418]
	0x03981238 MOVZ W0, 0x20
	0x0398123C MOV W1, W29
	0x03981240 MOV X2, X31
	0x03981244 STR W29, [X31 + 0x28]
	0x03981248 MOV X29, X8
	0x0398124C BL 0x337EE94
	0x03981250 LDR X8, [X21]
	0x03981254 STR W0, [X31 + 0x2C]
	0x03981258 MOV X0, X8
	0x0398125C BL 0x1C16F10
	0x03981260 MOV X1, X31
	0x03981264 MOV X21, X0
	0x03981268 BL 0x38ED688
	0x0398126C LDR X0, [X27]
	0x03981270 BL 0x1C16F10
	0x03981274 ADRP X8, 0x7CF000
	0x03981278 LDR X8, [X8 + 0x440]
	0x0398127C MOVZ W1, 0x3
	0x03981280 MOVZ W3, 0x3
	0x03981284 MOV X2, X21
	0x03981288 LDR X4, [X8]
	0x0398128C MOV X27, X0
	0x03981290 BL 0x2EA728C
	0x03981294 LDR X1, [X25]
	0x03981298 ADD X8, X31, 0x40
	0x0398129C MOV X0, X28
	0x039812A0 BL 0x2DAAA30
	0x039812A4 LDR V0, [X31 + 0x4]
	0x039812A8 LDR X8, [X31 + 0x50]
	0x039812AC LDR X25, [X31 + 0x38]
	0x039812B0 STR X27, [X31 + 0x18]
	0x039812B4 STR V0, [X31 + 0x8]
	0x039812B8 STR X8, [X31 + 0x90]
	0x039812BC LDR X1, [X29]
	0x039812C0 ADD X0, X31, 0x80
	0x039812C4 BL 0x2BBDA6C
	0x039812C8 TBZ X0, 0x0, 0x398136C
	0x039812CC CBZ X25, 0x3981954
	0x039812D0 LDRSW X21, [X31 + 0x90]
	0x039812D4 LDR W8, [X25 + 0x18]
	0x039812D8 CMP W21, W8
	0x039812DC B.CS 0x3981960
	0x039812E0 ADD X8, X25, X21, 0x3, LSL
	0x039812E4 LDR X0, [X8 + 0x20]
	0x039812E8 CBZ X0, 0x3981958
	0x039812EC MOV W1, W31
	0x039812F0 MOV X2, X31
	0x039812F4 BL 0x39282DC
	0x039812F8 CBZ X20, 0x3981948
	0x039812FC LDR W8, [X20 + 0x18]
	0x03981300 CMP W0, W8
	0x03981304 B.CS 0x398193C
	0x03981308 ADD X8, X20, W0, 0x3, SXTW
	0x0398130C LDR X8, [X8 + 0x20]
	0x03981310 CBZ X8, 0x398194C
	0x03981314 LDP S10, S8, [X8 + 0x10]
	0x03981318 LDR V9, [X8 + 0x18]
	0x0398131C LDR X0, [X22]
	0x03981320 MOVZ W1, 0x3
	0x03981324 BL 0x1C16D6C
	0x03981328 MOV X1, X0
	0x0398132C CBZ X1, 0x3981940
	0x03981330 LDR W8, [X1 + 0x18]
	0x03981334 CBZ W8, 0x398195C
	0x03981338 CMP W8, 0x1
	0x0398133C STR S10, [X1 + 0x20]
	0x03981340 B.EQ 0x3981964
	0x03981344 CMP W8, 0x2
	0x03981348 STR S8, [X1 + 0x24]
	0x0398134C B.LS 0x3981944
	0x03981350 STR S9, [X1 + 0x28]
	0x03981354 CBZ X27, 0x3981950
	0x03981358 LDR X3, [X24]
	0x0398135C MOV X0, X27
	0x03981360 MOV W2, W21
	0x03981364 BL 0x2EA72DC
	0x03981368 B 0x39812BC
	0x0398136C ADRP X8, 0x779000
	0x03981370 LDR X8, [X8 + 0x830]
	0x03981374 ADD X0, X31, 0x80
	0x03981378 LDR X1, [X8]
	0x0398137C BL 0x2BBDA68
	0x03981380 ADRP X24, 0x7CD000
	0x03981384 LDR X24, [X24 + 0xD08]
	0x03981388 LDR X0, [X22]
	0x0398138C MOVZ W1, 0x3
	0x03981390 BL 0x1C16D6C
	0x03981394 ADRP X8, 0x77C000
	0x03981398 LDR X8, [X8 + 0x888]
	0x0398139C STR X0, [X31 + 0x20]
	0x039813A0 LDR X8, [X8]
	0x039813A4 MOV X0, X8
	0x039813A8 BL 0x1C16F10
	0x039813AC ADRP X8, 0x77C000
	0x039813B0 LDR X8, [X8 + 0x890]
	0x039813B4 MOV X22, X0
	0x039813B8 LDR X1, [X8]
	0x039813BC BL 0x2A09A9C
	0x039813C0 ADRP X8, 0x7CF000
	0x039813C4 LDR X8, [X8 + 0x420]
	0x039813C8 LDR X0, [X8]
	0x039813CC BL 0x1C16F10
	0x039813D0 ADRP X8, 0x7CF000
	0x039813D4 LDR X8, [X8 + 0x410]
	0x039813D8 MOV X21, X0
	0x039813DC LDR X1, [X8]
	0x039813E0 BL 0x2A286C0
	0x039813E4 CBZ X25, 0x39819A4
	0x039813E8 ADRP X8, 0x779000
	0x039813EC LDR W27, [X25 + 0x18]
	0x039813F0 LDR X8, [X8 + 0x848]
	0x039813F4 MOV X0, X28
	0x039813F8 LDR X1, [X8]
	0x039813FC ADD X8, X31, 0x40
	0x03981400 BL 0x2DAAA30
	0x03981404 LDR V0, [X31 + 0x4]
	0x03981408 LDR X8, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X23, 0xA62000
	015 Move X21, 0x7D1000
	016 Move X19, 0x7D1000
	017 Move W8, [X23+2622]
	018 Move X21, [X21+904]
	019 Move X19, [X19+912]
	020 Move W24, W2
	021 Move X22, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {86}
	027 Move X0, 0x7D1000
	028 Move X0, [X0+920]
	029 Call 0x1C17CF4
	030 Move X0, 0x7D1000
	031 Move X0, [X0+928]
	032 Call 0x1C17CF4
	033 Move X0, 0x7D1000
	034 Move X0, [X0+936]
	035 Call 0x1C17CF4
	036 Move X0, 0x7D1000
	037 Move X0, [X0+912]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D1000
	040 Move X0, [X0+944]
	041 Call 0x1C17CF4
	042 Move X0, 0x7D1000
	043 Move X0, [X0+904]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CE000
	046 Move X0, [X0+4000]
	047 Call 0x1C17CF4
	048 Move X0, 0x776000
	049 Move X0, [X0+2504]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D1000
	052 Move X0, [X0+952]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D1000
	055 Move X0, [X0+960]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D1000
	058 Move X0, [X0+968]
	059 Call 0x1C17CF4
	060 Move X0, 0x7CE000
	061 Move X0, [X0+4008]
	062 Call 0x1C17CF4
	063 Move X0, 0x7D1000
	064 Move X0, [X0+976]
	065 Call 0x1C17CF4
	066 Move X0, 0x7D1000
	067 Move X0, [X0+984]
	068 Call 0x1C17CF4
	069 Move X0, 0x7CE000
	070 Move X0, [X0+3600]
	071 Call 0x1C17CF4
	072 Move X0, 0x7CF000
	073 Move X0, [X0+2616]
	074 Call 0x1C17CF4
	075 Move X0, 0x7CE000
	076 Move X0, [X0+3568]
	077 Call 0x1C17CF4
	078 Move X0, 0x7D1000
	079 Move X0, [X0+1000]
	080 Call 0x1C17CF4
	081 Move X0, 0x7D1000
	082 Move X0, [X0+824]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X23+2622], W8
	086 NotImplemented "Instruction MOVI not yet implemented."
	087 Move X0, X20
	088 Move W1, W24
	089 Move [X31+80], X31
	090 Move [X31+48], V0
	091 Move [X31+56], V0
	092 Move [X31+4], W24
	093 Call UVEditing.GetUVs, X0, X1
	094 Move X8, [X21]
	095 Move X21, X0
	096 Move X0, X8
	097 Call 0x1C17F10
	098 Move X1, [X19]
	099 Move X23, X0
	100 Call Dictionary`2<Int32Enum, Object>..ctor, X0
	101 Compare X22, 0
	102 JumpIfEqual {359}
	103 Move W8, [X22+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X28, 0x7D1000
	106 Move X28, [X28+928]
	107 Move W19, W31
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W27, TEMP
	111 Move W29, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X26, X22, W19
	114 Add X26, X26, 32
	115 Move X1, [X26]
	116 Move X0, X20
	117 Move X2, X31
	118 Call Math.Normal, X0, X1
	119 Move X0, X31
	120 Call Projection.VectorToProjectionAxis, X0
	121 Compare X23, 0
	122 JumpIfEqual {359}
	123 Move X2, [X28]
	124 Move W24, W0
	125 Move X0, X23
	126 Move W1, W24
	127 Call Dictionary`2<Int32Enum, Object>.ContainsKey, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {159}
	132 Move X8, 0x7D1000
	133 Move X8, [X8+944]
	134 Move X0, X23
	135 Move W1, W24
	136 Move X2, [X8]
	137 Call Dictionary`2<Int32Enum, Object>.get_Item, X0, X1
	138 Move W8, [X22+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Compare X0, 0
	141 JumpIfEqual {359}
	142 Move X9, 0x7CD000
	143 Move X1, [X26]
	144 Move W10, [X0+28]
	145 Move X8, [X0+16]
	146 Move X9, [X9+3600]
	147 Add W10, W10, 1
	148 Move X9, [X9]
	149 Move [X0+28], W10
	150 Compare X8, 0
	151 JumpIfEqual {359}
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W11, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add W9, W10, 1
	156 Add X8, X8, X10
	157 Move [X0+24], W9
	158 Move [X8+32], X1
	159 Move X8, 0x7CD000
	160 Move X8, [X8+3568]
	161 Move X0, [X8]
	162 Call 0x1C17F10
	163 Move X8, 0x7CE000
	164 Move X8, [X8+2616]
	165 Move X25, X0
	166 Move X1, [X8]
	167 Call List`1<Object>..ctor, X0
	168 Move W8, [X22+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X25, 0
	171 JumpIfEqual {359}
	172 Move X9, 0x7CD000
	173 Move X1, [X26]
	174 Move W10, [X25+28]
	175 Move X8, [X25+16]
	176 Move X9, [X9+3600]
	177 Add W10, W10, 1
	178 Move X9, [X9]
	179 Move [X25+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {359}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W11, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W9, W10, 1
	186 Add X8, X8, X10
	187 Move [X25+24], W9
	188 Move [X8+32], X1
	189 Move X8, [X9+32]
	190 Move X8, [X8+192]
	191 Move X2, [X8+112]
	192 Call List`1<Object>.AddWithResize, X0, X1
	193 Move X8, [X9+32]
	194 Move X0, X25
	195 Move X8, [X8+192]
	196 Move X2, [X8+112]
	197 Call List`1<Object>.AddWithResize, X0, X1
	198 Move X8, 0x7D0000
	199 Move X8, [X8+920]
	200 Move X0, X23
	201 Move W1, W24
	202 Move X2, X25
	203 Move X3, [X8]
	204 Call Dictionary`2<Int32Enum, Object>.Add, X0, X1, X2
	205 Move X8, [X22+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X9, [X26]
	208 Compare X9, 0
	209 JumpIfEqual {359}
	210 Add W19, W19, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move [X9+80], W27
	213 Move [X9+76], W29
	214 Compare X23, 0
	215 JumpIfEqual {359}
	216 Move X8, 0x7D0000
	217 Move X8, [X8+936]
	218 Move X27, 0x7D0000
	219 Move X28, 0x7D0000
	220 Move X26, 0x7D0000
	221 Move X27, [X27+960]
	222 Move X28, [X28+824]
	223 Move X26, [X26+1000]
	224 Move X1, [X8]
	225 Move X19, 0x7CD000
	226 Move X29, 0x775000
	227 Move X19, [X19+4000]
	228 Move X29, [X29+2504]
	229 Add X8, X31, 8
	230 Move X0, X23
	231 Call Dictionary`2<Int32Enum, Object>.GetEnumerator, X0
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Move X8, [X31+40]
	235 Move [X31+48], V0
	236 Move [X31+56], V1
	237 Move [X31+80], X8
	238 Move X1, [X27]
	239 Add X0, X31, 48
	240 Call Enumerator<Int32Enum, Object>.MoveNext, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {329}
	245 Move X8, [X28]
	246 Move W23, [X31+64]
	247 Move X22, [X31+72]
	248 Move W9, [X8+224]
	249 Compare W9, 0
	250 JumpIfNotEqual {254}
	251 Move X0, X8
	252 Call 0x1C17DFC
	253 Move X8, [X28]
	254 Move X9, [X8+184]
	255 Move X24, [X9+48]
	256 Compare X24, 0
	257 JumpIfNotEqual {278}
	258 Move W9, [X8+224]
	259 Compare W9, 0
	260 JumpIfNotEqual {264}
	261 Move X0, X8
	262 Call 0x1C17DFC
	263 Move X8, [X28]
	264 Move X8, [X8+184]
	265 Move X25, [X8]
	266 Move X8, 0x7CD000
	267 Move X8, [X8+4008]
	268 Move X0, [X8]
	269 Call 0x1C17F10
	270 Move X2, [X26]
	271 Move X24, X0
	272 Move X1, X25
	273 Move X3, X31
	274 Call Func`2<Object, Object>..ctor, X0, X1, X2
	275 Move X8, [X28]
	276 Move X8, [X8+184]
	277 Move [X8+48], X24
	278 Move X2, [X19]
	279 Move X0, X22
	280 Move X1, X24
	281 Call Enumerable.SelectMany, X0, X1
	282 Move X1, [X29]
	283 Call Enumerable.ToArray, X0
	284 Compare X20, 0
	285 JumpIfEqual {361}
	286 Move X24, [X20+88]
	287 Move X22, X0
	288 Move W0, W23
	289 Move X1, X31
	290 Call Projection.ProjectionAxisToVector, X0
	291 Move X0, X24
	292 Move X1, X22
	293 Move X2, X31
	294 Call Projection.PlanarProject, X0, X1, X2
	295 Move X23, X0
	296 Move S0, W31
	297 Move S1, W31
	298 Move X1, X31
	299 Call UVEditing.FindMinimalUV, X0, X1, V0, V1
	300 Compare X22, 0
	301 JumpIfEqual {362}
	302 Move W9, [X22+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move W8, W31
	305 Move V0.S[1], V1.S[0]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Compare X23, 0
	308 JumpIfEqual {354}
	309 Move W9, [X23+24]
	310 Move X8, W8
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Compare X21, 0
	313 JumpIfEqual {355}
	314 Add X9, X22, X8
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Move W10, [X21+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Add X10, X23, X8
	319 Move V1, [X10+32]
	320 Add X9, X21, X9
	321 Add W8, W8, 1
	322 Subtract V1, V1, V0
	323 Move [X9+32], D1
	324 Move W9, [X22+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X0, X20
	327 Move X1, X22
	328 Call UVEditing.SplitUVs, X0, X1
	329 Move X8, 0x7D0000
	330 Move X8, [X8+952]
	331 Add X0, X31, 48
	332 Move X1, [X8]
	333 Call Enumerator<Int32Enum, Object>.Dispose, X0
	334 Move W19, [X31+4]
	335 Move W3, 1
	336 Move X0, X20
	337 Move X1, X21
	338 Move W2, W19
	339 Call UVEditing.ApplyUVs, X0, X1, X2, X3
	340 Move X20, [X31+176]
	341 Move X19, [X31+184]
	342 Move X22, [X31+160]
	343 Move X21, [X31+168]
	344 Move X24, [X31+144]
	345 Move X23, [X31+152]
	346 Move X26, [X31+128]
	347 Move X25, [X31+136]
	348 Move X28, [X31+112]
	349 Move X27, [X31+120]
	350 Move X29, [X31+96]
	351 Move X30, [X31+104]
	352 Add X31, X31, 192
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F28
	357 Call 0x1C17F28
	358 Call 0x1C17F28
	359 Call 0x1C17F20
	360 Call 0x1C17F28
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Move W19, [X31+4]
	364 Move X22, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X22
	367 Call 0x3EB2AD0
	368 Move X23, [X0]
	369 Call 0x3EB2AE0
	370 Move X8, 0x7D0000
	371 Move X8, [X8+952]
	372 Add X0, X31, 48
	373 Move X1, [X8]
	374 Call Enumerator<Int32Enum, Object>.Dispose, X0
	375 Compare X23, 0
	376 JumpIfEqual {335}
	377 Move X0, X23
	378 Call 0x1C17F18
	379 Move X23, X31
	380 Move X22, X0
	381 Move X8, 0x7D0000
	382 Move X8, [X8+952]
	383 Move X1, [X8]
	384 Add X0, X31, 48
	385 Call Enumerator<Int32Enum, Object>.Dispose, X0
	386 Compare X23, 0
	387 JumpIfNotEqual {390}
	388 Move X0, X22
	389 Call 0x1D2D690
	390 Move X0, X23
	391 Call 0x1C17F18
	392 Call 0x1991590

Method: System.Void ProjectFacesSphere(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Int32[] indexes, System.Int32 channel = 0)

Disassembly:
	0x0398140C FMOV S9, 1
	0x03981410 STR V0, [X31 + 0x8]
	0x03981414 STR X8, [X31 + 0x90]
	0x03981418 LDR X1, [X29]
	0x0398141C ADD X0, X31, 0x80
	0x03981420 BL 0x2BBDA6C
	0x03981424 TBZ X0, 0x0, 0x3981728
	0x03981428 CBZ X22, 0x3981968
	0x0398142C LDRSW X28, [X31 + 0x90]
	0x03981430 LDR X2, [X24]
	0x03981434 MOV X0, X22
	0x03981438 MOV W1, W28
	0x0398143C BL 0x2A0A530
	0x03981440 TBNZ X0, 0x0, 0x3981418
	0x03981444 LDR X9, [X31 + 0x38]
	0x03981448 LDR W8, [X9 + 0x18]
	0x0398144C CMP W28, W8
	0x03981450 B.CS 0x3981A38
	0x03981454 ADD X8, X9, X28, 0x3, LSL
	0x03981458 LDR X0, [X8 + 0x20]
	0x0398145C LDR W24, [X31 + 0x2C]
	0x03981460 LDR X25, [X31 + 0x20]
	0x03981464 CBZ X0, 0x3981A28
	0x03981468 MOV W1, W31
	0x0398146C MOV X2, X31
	0x03981470 BL 0x39282DC
	0x03981474 CBZ X20, 0x3981A24
	0x03981478 LDR W8, [X20 + 0x18]
	0x0398147C CMP W0, W8
	0x03981480 B.CS 0x3981A34
	0x03981484 ADD X8, X20, W0, 0x3, SXTW
	0x03981488 LDR X8, [X8 + 0x20]
	0x0398148C CBZ X8, 0x3981A20
	0x03981490 CBZ X25, 0x3981A18
	0x03981494 LDR W9, [X25 + 0x18]
	0x03981498 CBZ W9, 0x3981A1C
	0x0398149C LDP S2, S1, [X8 + 0x10]
	0x039814A0 LDR V0, [X8 + 0x18]
	0x039814A4 CMP W9, 0x1
	0x039814A8 STR S2, [X25 + 0x20]
	0x039814AC B.EQ 0x3981A10
	0x039814B0 CMP W9, 0x2
	0x039814B4 STR S1, [X25 + 0x24]
	0x039814B8 B.LS 0x3981A30
	0x039814BC LDR X0, [X31 + 0x18]
	0x039814C0 STR S0, [X25 + 0x28]
	0x039814C4 CBZ X0, 0x3981A2C
	0x039814C8 ADRP X8, 0x7CF000
	0x039814CC LDR X8, [X8 + 0x438]
	0x039814D0 LDR X3, [X8]
	0x039814D4 MOV X1, X25
	0x039814D8 MOV V0.16B, V11.16B
	0x039814DC MOV W2, W24
	0x039814E0 BL 0x2EA82EC
	0x039814E4 LDR W8, [X31 + 0x28]
	0x039814E8 MOV X29, X0
	0x039814EC CMP W24, W8
	0x039814F0 B.GE 0x3981560
	0x039814F4 CBZ X29, 0x3981A40
	0x039814F8 LDR W8, [X29 + 0x18]
	0x039814FC CMP W24, W8
	0x03981500 B.GT 0x3981560
	0x03981504 ADRP X8, 0x7CF000
	0x03981508 LDR X8, [X8 + 0x438]
	0x0398150C LDR X3, [X8]
	0x03981510 LDP X0, X1, [X31 + 0x18]
	0x03981514 LDR W2, [X31 + 0x28]
	0x03981518 MOV V0.16B, V11.16B
	0x0398151C BL 0x2EA82EC
	0x03981520 MOV X29, X0
	0x03981524 CBZ X0, 0x3981A44
	0x03981528 ADRP X8, 0x772000
	0x0398152C LDR X8, [X8 + 0x5A8]
	0x03981530 LDR X0, [X8]
	0x03981534 LDR W8, [X0 + 0xE0]
	0x03981538 CBNZ W8, 0x3981540
	0x0398153C BL 0x1C16DFC
	0x03981540 LDR W8, [X29 + 0x18]
	0x03981544 CMP W8, 0x0
	0x03981548 CINC W9, W8, LT
	0x0398154C ADD W1, W8, W9, 0x1, ASR
	0x03981550 LDR W0, [X31 + 0x28]
	0x03981554 MOV X2, X31
	0x03981558 BL 0x337EE94
	0x0398155C MOV W24, W0
	0x03981560 ADRP X8, 0xA57000
	0x03981564 LDRB W8, [X8 + 0x783]
	0x03981568 CBNZ W8, 0x3981584
	0x0398156C ADRP X0, 0x772000
	0x03981570 LDR X0, [X0 + 0x5A0]
	0x03981574 BL 0x1C16CF4
	0x03981578 ADRP X8, 0xA57000
	0x0398157C MOVZ W9, 0x1
	0x03981580 STRB W9, [X8 + 0x783]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xA61000
	012 Move W8, [X22+2623]
	013 Move W19, W2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x7D0000
	021 Move X0, [X0+1008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2623], W8
	025 Compare X20, 0
	026 JumpIfEqual {111}
	027 Move X23, [X20+40]
	028 Compare X23, 0
	029 JumpIfEqual {111}
	030 Move W8, [X23+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X25, 0x7D0000
	033 Move X25, [X25+1008]
	034 Move W24, W31
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W26, TEMP
	038 Move W27, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X23, W24
	041 Move X22, [X8+32]
	042 Compare X22, 0
	043 JumpIfEqual {111}
	044 Move X0, X22
	045 Move X1, X31
	046 Call Face.get_distinctIndexesInternal, X0
	047 Move X2, [X25]
	048 Move X1, X21
	049 Call 0x217F0D4, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {56}
	054 Move [X22+80], W26
	055 Move [X22+76], W27
	056 Move W8, [X23+24]
	057 Add W24, W24, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X20
	060 Move X1, X21
	061 Call UVEditing.SplitUVs, X0, X1
	062 Move X0, [X20+88]
	063 Move X1, X21
	064 Move X2, X31
	065 Call Projection.SphericalProject, X0, X1
	066 Move X22, X0
	067 Move X0, X20
	068 Move W1, W19
	069 Call UVEditing.GetUVs, X0, X1
	070 Compare X21, 0
	071 JumpIfEqual {111}
	072 Move W9, [X21+24]
	073 Move X1, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W8, W31
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X22, 0
	078 JumpIfEqual {111}
	079 Move W9, [X22+24]
	080 Move X8, W8
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Compare X1, 0
	083 JumpIfEqual {111}
	084 Add X9, X21, X8
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W10, [X1+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X10, X22, X8
	089 Move V0, [X10+32]
	090 Add X9, X1, X9
	091 Add W8, W8, 1
	092 Move [X9+32], D0
	093 Move W9, [X21+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X20
	096 Move W2, W19
	097 Move X20, [X31+64]
	098 Move X19, [X31+72]
	099 Move X22, [X31+48]
	100 Move X21, [X31+56]
	101 Move X24, [X31+32]
	102 Move X23, [X31+40]
	103 Move X26, [X31+16]
	104 Move X25, [X31+24]
	105 Move W3, 1
	106 Move X30, [X31+80]
	107 Move X27, [X31+88]
	108 Call UVEditing.ApplyUVs, X0, X1, X2, X3
	109 Return 
	110 Call 0x1C17F28
	111 Call 0x1C17F20

Method: UnityEngine.Vector2[] FitUVs(UnityEngine.Vector2[] uvs)

Disassembly:
	0x03981584 CBZ X29, 0x3981A14
	0x03981588 STR W24, [X31 + 0x2C]
	0x0398158C STR S11, [X31 + 0x14]
	0x03981590 ADRP X8, 0x772000
	0x03981594 LDR X8, [X8 + 0x5A0]
	0x03981598 LDR X8, [X8]
	0x0398159C LDR X9, [X8 + 0xB8]
	0x039815A0 LDR W8, [X29 + 0x18]
	0x039815A4 LDP S11, S12, [X9 + 0x4]
	0x039815A8 LDR V10, [X9]
	0x039815AC CMP W8, 0x1
	0x039815B0 B.LT 0x39816E0
	0x039815B4 MOV W24, W31
	0x039815B8 FMOV S13, W31
	0x039815BC CMP W24, W8
	0x039815C0 B.CS 0x3981980
	0x039815C4 ADD X25, X29, W24, 0x3, SXTW
	0x039815C8 LDR X8, [X25 + 0x20]!
	0x039815CC CBZ X8, 0x398197C
	0x039815D0 LDR W28, [X8 + 0x18]
	0x039815D4 ADRP X8, 0x7CD000
	0x039815D8 LDR X8, [X8 + 0xD08]
	0x039815DC LDR X2, [X8]
	0x039815E0 MOV X0, X22
	0x039815E4 MOV W1, W28
	0x039815E8 BL 0x2A0A530
	0x039815EC TBNZ X0, 0x0, 0x39816C8
	0x039815F0 LDR W8, [X29 + 0x18]
	0x039815F4 CMP W24, W8
	0x039815F8 B.CS 0x39819A0
	0x039815FC LDR X8, [X25]
	0x03981600 CBZ X8, 0x398198C
	0x03981604 LDR X8, [X8 + 0x10]
	0x03981608 CBZ X8, 0x3981988
	0x0398160C LDR W9, [X8 + 0x18]
	0x03981610 CBZ W9, 0x3981994
	0x03981614 CMP W9, 0x1
	0x03981618 B.EQ 0x3981998
	0x0398161C CMP W9, 0x2
	0x03981620 B.LS 0x398199C
	0x03981624 LDP S14, S15, [X8 + 0x20]
	0x03981628 LDR V8, [X8 + 0x28]
	0x0398162C LDR X3, [X26]
	0x03981630 MOV X0, X22
	0x03981634 MOV W1, W28
	0x03981638 MOV W2, W27
	0x0398163C BL 0x2A0A344
	0x03981640 LDR W8, [X29 + 0x18]
	0x03981644 CMP W24, W8
	0x03981648 B.CS 0x3981984
	0x0398164C LDR X8, [X25]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Math.SmallestVector2, X0
	006 Compare X19, 0
	007 JumpIfEqual {50}
	008 Move W8, [X19+24]
	009 Move X9, X8
	010 ShiftRight X9, 32
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X9, X31
	014 Move X10, W8
	015 Move V0.S[1], V1.S[0]
	016 Add X11, X19, 32
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move V1, [X11]
	019 Subtract V1, V1, V0
	020 Move [X11], D1
	021 Add X9, X9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, X19
	024 Move X1, X31
	025 Call Math.LargestVector2, X0
	026 Move X0, X31
	027 Call Math.LargestValue, X0
	028 Move X8, -48852992
	029 Move V1, [X8+3880]
	030 Move X0, X31
	031 Call Math.MakeNonZero, V0, V1
	032 Move X9, [X19+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 And X9, X9, 0
	035 Move X8, X31
	036 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	037 Move X10, W9
	038 Add X11, X19, 32
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move V1, [X11]
	041 NotImplemented "Instruction INVALID not yet implemented."
	042 Move [X11], D1
	043 Add X8, X8, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X30, [X31+16]
	047 Move X19, [X31+24]
	048 Return X0
	049 Call 0x1C17F28
	050 Call 0x1C17F20

