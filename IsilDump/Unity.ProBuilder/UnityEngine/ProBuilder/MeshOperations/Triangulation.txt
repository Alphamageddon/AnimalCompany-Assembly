Type: UnityEngine.ProBuilder.MeshOperations.Triangulation

Method: UnityEngine.ProBuilder.Poly2Tri.TriangulationContext get_triangulationContext()

Disassembly:
	0x0397C0C0 CMP X11, X1
	0x0397C0C4 B.EQ 0x397C0E4
	0x0397C0C8 SUBS X9, X9, 0x1
	0x0397C0CC ADD X10, X10, 0x10
	0x0397C0D0 B.NE 0x397C0BC
	0x0397C0D4 MOV X0, X22
	0x0397C0D8 MOV W2, W31
	0x0397C0DC BL 0x1C5C788
	0x0397C0E0 B 0x397C0F0
	0x0397C0E4 LDRSW X9, [X10]
	0x0397C0E8 ADD X8, X8, X9, 0x4, LSL
	0x0397C0EC ADD X0, X8, 0x138
	0x0397C0F0 LDP X8, X1, [X0]
	0x0397C0F4 MOV X0, X22
	0x0397C0F8 BLR X8
	0x0397C0FC CMP X24, W0, SXTW
	0x0397C100 B.GE 0x397C194
	0x0397C104 LDR X8, [X22]
	0x0397C108 LDR X1, [X26]
	0x0397C10C LDRH W9, [X8 + 0x12E]
	0x0397C110 CBZ X9, 0x397C134
	0x0397C114 LDR X10, [X8 + 0xB0]
	0x0397C118 ADD X10, X10, 0x8
	0x0397C11C LDUR X11, [X10 - 0x8]
	0x0397C120 CMP X11, X1
	0x0397C124 B.EQ 0x397C144
	0x0397C128 SUBS X9, X9, 0x1
	0x0397C12C ADD X10, X10, 0x10
	0x0397C130 B.NE 0x397C11C
	0x0397C134 MOV X0, X22
	0x0397C138 MOV W2, W31
	0x0397C13C BL 0x1C5C788
	0x0397C140 B 0x397C150
	0x0397C144 LDRSW X9, [X10]
	0x0397C148 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA66000
	005 Move X20, 0x7D5000
	006 Move W8, [X19+2601]
	007 Move X20, [X20+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x7D2000
	013 Move X0, [X0+1592]
	014 Call 0x1C17CF4
	015 Move X0, 0x7D5000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2601], W8
	020 Move X8, [X20]
	021 Move X8, [X8+184]
	022 Move X0, [X8]
	023 Compare X0, 0
	024 JumpIfNotEqual {38}
	025 Move X8, 0x7D2000
	026 Move X8, [X8+1592]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X19, X0
	031 Call DTSweepContext..ctor, X0
	032 Move X8, [X20]
	033 Move X8, [X8+184]
	034 Move [X8], X19
	035 Move X8, [X20]
	036 Move X8, [X8+184]
	037 Move X0, [X8]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return X0

Method: System.Boolean SortAndTriangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, out System.Collections.Generic.List`1<System.Int32> indexes, System.Boolean convex = False)

Disassembly:
	0x0397C14C ADD X0, X8, 0x138
	0x0397C150 LDP X8, X2, [X0]
	0x0397C154 MOV X0, X22
	0x0397C158 MOV W1, W24
	0x0397C15C BLR X8
	0x0397C160 CBZ X0, 0x397C1BC
	0x0397C164 CBZ X23, 0x397C1BC
	0x0397C168 LDR W8, [X23 + 0x18]
	0x0397C16C CMP X24, X8
	0x0397C170 B.CS 0x397C1C0
	0x0397C174 LDR V0, [X0 + 0x10]
	0x0397C178 LDR V1, [X0 + 0x18]
	0x0397C17C NOP
	0x0397C180 MADD X8, X24, X27, X23
	0x0397C184 ADD X24, X24, 0x1
	0x0397C188 STR D0, [X8 + 0x20]
	0x0397C18C STR S1, [X8 + 0x28]
	0x0397C190 B 0x397C0A4
	0x0397C194 AND W2, W21, 0x1
	0x0397C198 AND W3, W20, 0x1
	0x0397C19C MOV X0, X23
	0x0397C1A0 MOV X1, X19
	0x0397C1A4 LDP X20, X19, [X31 + 0x40]
	0x0397C1A8 LDP X22, X21, [X31 + 0x30]
	0x0397C1AC LDP X24, X23, [X31 + 0x20]
	0x0397C1B0 LDP X26, X25, [X31 + 0x10]
	0x0397C1B4 LDP X30, X27, [X31], #0x50
	0x0397C1B8 B 0x397C1C4
	0x0397C1BC BL 0x1C16F20
	0x0397C1C0 BL 0x1C16F28
	0x0397C1C4 STP X30, X23, [X31 - 0x30]!
	0x0397C1C8 STP X22, X21, [X31 + 0x10]
	0x0397C1CC STP X20, X19, [X31 + 0x20]
	0x0397C1D0 ADRP X23, 0xA65000
	0x0397C1D4 LDRB W8, [X23 + 0xA2D]
	0x0397C1D8 MOV W20, W3
	0x0397C1DC MOV W21, W2
	0x0397C1E0 MOV X19, X1
	0x0397C1E4 MOV X22, X0
	0x0397C1E8 TBNZ X8, 0x0, 0x397C218
	0x0397C1EC ADRP X0, 0x778000
	0x0397C1F0 LDR X0, [X0 + 0xE10]
	0x0397C1F4 BL 0x1C16CF4
	0x0397C1F8 ADRP X0, 0x77B000
	0x0397C1FC LDR X0, [X0 + 0xB70]
	0x0397C200 BL 0x1C16CF4
	0x0397C204 ADRP X0, 0x778000
	0x0397C208 LDR X0, [X0 + 0xE30]
	0x0397C20C BL 0x1C16CF4
	0x0397C210 MOVZ W8, 0x1
	0x0397C214 STRB W8, [X23 + 0xA2D]
	0x0397C218 STR X31, [X19]
	0x0397C21C CBZ X22, 0x397C2A8
	0x0397C220 LDR W8, [X22 + 0x18]
	0x0397C224 CMP W8, 0x3
	0x0397C228 B.LT 0x397C2A8
	0x0397C22C B.NE 0x397C2BC
	0x0397C230 ADRP X8, 0x778000
	0x0397C234 LDR X8, [X8 + 0xE30]
	0x0397C238 LDR X0, [X8]
	0x0397C23C BL 0x1C16F10
	0x0397C240 ADRP X8, 0x77B000
	0x0397C244 LDR X8, [X8 + 0xB70]
	0x0397C248 MOV X20, X0
	0x0397C24C LDR X1, [X8]
	0x0397C250 BL 0x2FDBF14
	0x0397C254 CBZ X20, 0x397C3D8
	0x0397C258 ADRP X21, 0x778000
	0x0397C25C LDR X21, [X21 + 0xE10]
	0x0397C260 LDR W10, [X20 + 0x1C]
	0x0397C264 LDR X8, [X20 + 0x10]
	0x0397C268 LDR X9, [X21]
	0x0397C26C ADD W10, W10, 0x1
	0x0397C270 STR W10, [X20 + 0x1C]
	0x0397C274 CBZ X8, 0x397C3D8
	0x0397C278 LDRSW X10, [X20 + 0x18]
	0x0397C27C LDR W11, [X8 + 0x18]
	0x0397C280 CMP W10, W11
	0x0397C284 B.CS 0x397C2F8
	0x0397C288 ADD W11, W10, 0x1
	0x0397C28C ADD X10, X8, X10, 0x2, LSL
	0x0397C290 STR W11, [X20 + 0x18]
	0x0397C294 STR W31, [X10 + 0x20]
	0x0397C298 LDR W10, [X20 + 0x1C]
	0x0397C29C ADD W10, W10, 0x1
	0x0397C2A0 STR W10, [X20 + 0x1C]
	0x0397C2A4 B 0x397C328
	0x0397C2A8 MOV W0, W31
	0x0397C2AC LDP X20, X19, [X31 + 0x20]
	0x0397C2B0 LDP X22, X21, [X31 + 0x10]
	0x0397C2B4 LDP X30, X23, [X31], #0x30
	0x0397C2B8 RET
	0x0397C2BC MOV X0, X22
	0x0397C2C0 MOV X1, X31
	0x0397C2C4 MOV X2, X31
	0x0397C2C8 BL 0x391F1D4
	0x0397C2CC AND W2, W20, 0x1
	0x0397C2D0 MOV X1, X19
	0x0397C2D4 TBZ X21, 0x0, 0x397C2E8
	0x0397C2D8 LDP X20, X19, [X31 + 0x20]
	0x0397C2DC LDP X22, X21, [X31 + 0x10]
	0x0397C2E0 LDP X30, X23, [X31], #0x30
	0x0397C2E4 B 0x397B14C
	0x0397C2E8 LDP X20, X19, [X31 + 0x20]
	0x0397C2EC LDP X22, X21, [X31 + 0x10]
	0x0397C2F0 LDP X30, X23, [X31], #0x30
	0x0397C2F4 B 0x397B448
	0x0397C2F8 LDR X8, [X9 + 0x20]
	0x0397C2FC MOV X0, X20
	0x0397C300 MOV W1, W31
	0x0397C304 LDR X8, [X8 + 0xC0]
	0x0397C308 LDR X2, [X8 + 0x70]
	0x0397C30C BL 0x2FDC70C
	0x0397C310 LDR W10, [X20 + 0x1C]
	0x0397C314 LDR X8, [X20 + 0x10]
	0x0397C318 LDR X9, [X21]
	0x0397C31C ADD W10, W10, 0x1
	0x0397C320 STR W10, [X20 + 0x1C]
	0x0397C324 CBZ X8, 0x397C3D8
	0x0397C328 LDRSW X10, [X20 + 0x18]
	0x0397C32C LDR W11, [X8 + 0x18]
	0x0397C330 CMP W10, W11
	0x0397C334 B.CS 0x397C35C
	0x0397C338 ADD W11, W10, 0x1
	0x0397C33C ADD X10, X8, X10, 0x2, LSL
	0x0397C340 MOVZ W12, 0x1
	0x0397C344 STR W11, [X20 + 0x18]
	0x0397C348 STR W12, [X10 + 0x20]
	0x0397C34C LDR W10, [X20 + 0x1C]
	0x0397C350 ADD W10, W10, 0x1
	0x0397C354 STR W10, [X20 + 0x1C]
	0x0397C358 B 0x397C38C
	0x0397C35C LDR X8, [X9 + 0x20]
	0x0397C360 MOVZ W1, 0x1
	0x0397C364 MOV X0, X20
	0x0397C368 LDR X8, [X8 + 0xC0]
	0x0397C36C LDR X2, [X8 + 0x70]
	0x0397C370 BL 0x2FDC70C
	0x0397C374 LDR W10, [X20 + 0x1C]
	0x0397C378 LDR X8, [X20 + 0x10]
	0x0397C37C LDR X9, [X21]
	0x0397C380 ADD W10, W10, 0x1
	0x0397C384 STR W10, [X20 + 0x1C]
	0x0397C388 CBZ X8, 0x397C3D8
	0x0397C38C LDRSW X10, [X20 + 0x18]
	0x0397C390 LDR W11, [X8 + 0x18]
	0x0397C394 CMP W10, W11
	0x0397C398 B.CS 0x397C3B4
	0x0397C39C ADD W9, W10, 0x1
	0x0397C3A0 ADD X8, X8, X10, 0x2, LSL
	0x0397C3A4 MOVZ W10, 0x2
	0x0397C3A8 STR W9, [X20 + 0x18]
	0x0397C3AC STR W10, [X8 + 0x20]
	0x0397C3B0 B 0x397C3CC
	0x0397C3B4 LDR X8, [X9 + 0x20]
	0x0397C3B8 MOVZ W1, 0x2
	0x0397C3BC MOV X0, X20
	0x0397C3C0 LDR X8, [X8 + 0xC0]
	0x0397C3C4 LDR X2, [X8 + 0x70]
	0x0397C3C8 BL 0x2FDC70C
	0x0397C3CC MOVZ W0, 0x1
	0x0397C3D0 STR X20, [X19]
	0x0397C3D4 B 0x397C2AC
	0x0397C3D8 BL 0x1C16F20
	0x0397C3DC STR D10, [X31 - 0x60]!
	0x0397C3E0 STP D9, D8, [X31 + 0x10]
	0x0397C3E4 STP X30, X25, [X31 + 0x20]
	0x0397C3E8 STP X24, X23, [X31 + 0x30]
	0x0397C3EC STP X22, X21, [X31 + 0x40]
	0x0397C3F0 STP X20, X19, [X31 + 0x50]
	0x0397C3F4 ADRP X22, 0xA65000
	0x0397C3F8 LDRB W8, [X22 + 0xA2C]
	0x0397C3FC MOV X20, X2
	0x0397C400 MOV X19, X1
	0x0397C404 MOV X21, X0
	0x0397C408 TBNZ X8, 0x0, 0x397C420
	0x0397C40C ADRP X0, 0x7D4000
	0x0397C410 LDR X0, [X0 + 0x2E8]
	0x0397C414 BL 0x1C16CF4
	0x0397C418 MOVZ W8, 0x1
	0x0397C41C STRB W8, [X22 + 0xA2C]
	0x0397C420 STR X31, [X19]
	0x0397C424 CBZ X21, 0x397C4F4
	0x0397C428 LDR W8, [X21 + 0x18]
	0x0397C42C CMP W8, 0x3
	0x0397C430 B.LT 0x397C4F4
	0x0397C434 MOV X0, X21
	0x0397C438 MOV X1, X31
	0x0397C43C MOV X2, X31
	0x0397C440 BL 0x391F1FC
	0x0397C444 MOV X0, X21

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xA66000
	014 Move X23, 0x782000
	015 Move X22, 0x782000
	016 Move W8, [X24+2602]
	017 Move X23, [X23+2184]
	018 Move X22, [X22+2192]
	019 Move W20, W2
	020 Move X19, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0x782000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move X0, 0x782000
	030 Move X0, [X0+2192]
	031 Call 0x1C17CF4
	032 Move X0, 0x7D2000
	033 Move X0, [X0+3200]
	034 Call 0x1C17CF4
	035 Move X0, 0x782000
	036 Move X0, [X0+2184]
	037 Call 0x1C17CF4
	038 Move X0, 0x7D2000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0x7D2000
	042 Move X0, [X0+2712]
	043 Call 0x1C17CF4
	044 Move X0, 0x779000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move X0, 0x7A2000
	048 Move X0, [X0+3896]
	049 Call 0x1C17CF4
	050 Move X0, 0x7D5000
	051 Move X0, [X0+640]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+2602], W8
	055 Move W1, 1
	056 Move X0, X21
	057 Move X2, X31
	058 Call Projection.Sort, X0, X1
	059 Move X8, [X23]
	060 Move X23, X0
	061 Move X0, X8
	062 Call 0x1C17F10
	063 Move X1, [X22]
	064 Move X22, X0
	065 Call Dictionary`2<Int32, Int32>..ctor, X0
	066 Compare X23, 0
	067 JumpIfEqual {195}
	068 Move X25, 0x7D2000
	069 Move X26, 0x7D2000
	070 Move X27, 0x782000
	071 Move X25, [X25+2704]
	072 Move X26, [X26+2712]
	073 Move X27, [X27+2136]
	074 Move W24, W31
	075 Move X8, [X23]
	076 Move X1, [X25]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X23
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X23
	095 NotImplemented "Instruction BLR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, [X23]
	098 Move X1, [X26]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X23
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X2, [X0+8]
	116 Move X0, X23
	117 Move W1, W24
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X21, 0
	120 JumpIfEqual {195}
	121 Move X8, [X21]
	122 Move X1, [X26]
	123 Move V8, V0
	124 Move V9, V1
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 2
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 2
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 Move V0, V8
	145 Move V1, V9
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X22, 0
	148 JumpIfEqual {195}
	149 Move X3, [X27]
	150 Move W2, W0
	151 Move X0, X22
	152 Move W1, W24
	153 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	154 Add W24, W24, 1
	155 And W2, W20, 1
	156 Move X0, X23
	157 Move X1, X19
	158 Call Triangulation.Triangulate, X0, X1, X2
	159 Move W20, W0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {196}
	164 Move X23, [X19]
	165 Compare X23, 0
	166 JumpIfEqual {195}
	167 Move X24, 0x7A2000
	168 Move X25, 0x7D2000
	169 Move X26, 0x7D5000
	170 Move X24, [X24+3896]
	171 Move X25, [X25+3200]
	172 Move X26, [X26+640]
	173 Move W21, W31
	174 Move W8, [X23+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X2, [X24]
	177 Move X0, X23
	178 Move W1, W21
	179 Call List`1<Int32>.get_Item, X0, X1
	180 Compare X22, 0
	181 JumpIfEqual {195}
	182 Move X2, [X25]
	183 Move W1, W0
	184 Move X0, X22
	185 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	186 Move X3, [X26]
	187 Move W2, W0
	188 Move X0, X23
	189 Move W1, W21
	190 Call List`1<Int32>.set_Item, X0, X1, X2
	191 Move X23, [X19]
	192 Add W21, W21, 1
	193 Compare X23, 0
	194 JumpIfNotEqual {174}
	195 Call 0x1C17F20
	196 And W0, W20, 1
	197 Move X20, [X31+80]
	198 Move X19, [X31+88]
	199 Move X22, [X31+64]
	200 Move X21, [X31+72]
	201 Move X24, [X31+48]
	202 Move X23, [X31+56]
	203 Move X26, [X31+32]
	204 Move X25, [X31+40]
	205 Move X30, [X31+16]
	206 Move X27, [X31+24]
	207 Move D9, [X31+96]
	208 Move D8, [X31+104]
	209 Return X0

Method: System.Boolean TriangulateVertices(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, out System.Collections.Generic.List`1<System.Int32> triangles, System.Boolean unordered = True, System.Boolean convex = False)

Disassembly:
	0x0397CFB8 ADRP X0, 0x7D4000
	0x0397CFBC LDR X0, [X0 + 0x2E0]
	0x0397CFC0 BL 0x1C16D08
	0x0397CFC4 MOV X1, X19
	0x0397CFC8 MOV X2, X31
	0x0397CFCC BL 0x321B938
	0x0397CFD0 MOV X19, X0
	0x0397CFD4 ADRP X0, 0x7D1000
	0x0397CFD8 LDR X0, [X0 + 0xAD0]
	0x0397CFDC BL 0x1C16D08
	0x0397CFE0 LDR W8, [X0 + 0xE0]
	0x0397CFE4 CBNZ W8, 0x397CFEC
	0x0397CFE8 BL 0x1C16DFC
	0x0397CFEC MOV X0, X19
	0x0397CFF0 MOV X1, X31
	0x0397CFF4 BL 0x3906FFC
	0x0397CFF8 MOV W0, W31
	0x0397CFFC LDP X20, X19, [X31 + 0x70]
	0x0397D000 LDP X22, X21, [X31 + 0x60]
	0x0397D004 LDP X24, X23, [X31 + 0x50]
	0x0397D008 LDP X26, X25, [X31 + 0x40]
	0x0397D00C LDP X28, X27, [X31 + 0x30]
	0x0397D010 LDP X29, X30, [X31 + 0x20]
	0x0397D014 ADD X31, X31, 0x80
	0x0397D018 RET
	0x0397D01C BL 0x1C16F20
	0x0397D020 MOVZ W0, 0x8
	0x0397D024 BL 0x3EB1AF0
	0x0397D028 LDR X8, [X19]
	0x0397D02C STR X8, [X0]
	0x0397D030 ADRP X1, 0x537000
	0x0397D034 ADD X1, X1, 0xE58
	0x0397D038 MOV X2, X31
	0x0397D03C BL 0x3EB1B00
	0x0397D040 MOV X23, X0
	0x0397D044 BL 0x3EB1AE0
	0x0397D048 B 0x397D140
	0x0397D04C B 0x397D090
	0x0397D050 B 0x397D090
	0x0397D054 B 0x397D090
	0x0397D058 B 0x397D090
	0x0397D05C B 0x397D0A0
	0x0397D060 B 0x397D090
	0x0397D064 B 0x397D0A0
	0x0397D068 B 0x397D090
	0x0397D06C B 0x397D0A0
	0x0397D070 B 0x397D090
	0x0397D074 B 0x397D0A0
	0x0397D078 B 0x397D0A0
	0x0397D07C B 0x397D090
	0x0397D080 B 0x397D0A0
	0x0397D084 B 0x397D0A0
	0x0397D088 B 0x397D090
	0x0397D08C B 0x397D090
	0x0397D090 MOV X26, X19
	0x0397D094 B 0x397D0A4
	0x0397D098 B 0x397D0A0
	0x0397D09C B 0x397D0A0
	0x0397D0A0 LDR X21, [X31 + 0x10]
	0x0397D0A4 MOV X23, X0
	0x0397D0A8 LDR X20, [X31 + 0x8]
	0x0397D0AC LDR X25, [X31 + 0x18]
	0x0397D0B0 CMP W1, 0x1
	0x0397D0B4 B.NE 0x397D0D4
	0x0397D0B8 MOV X0, X23
	0x0397D0BC BL 0x3EB1AD0
	0x0397D0C0 LDR X24, [X0]
	0x0397D0C4 BL 0x3EB1AE0
	0x0397D0C8 MOV W19, W31
	0x0397D0CC CBNZ X22, 0x397CD48
	0x0397D0D0 B 0x397CDA0
	0x0397D0D4 MOV X24, X31
	0x0397D0D8 B 0x397D0E0
	0x0397D0DC MOV X23, X0
	0x0397D0E0 CBZ X22, 0x397D13C
	0x0397D0E4 LDR X8, [X22]
	0x0397D0E8 LDR X1, [X26]
	0x0397D0EC LDRH W9, [X8 + 0x12E]
	0x0397D0F0 CBZ X9, 0x397D114
	0x0397D0F4 LDR X10, [X8 + 0xB0]
	0x0397D0F8 ADD X10, X10, 0x8
	0x0397D0FC LDUR X11, [X10 - 0x8]
	0x0397D100 CMP X11, X1
	0x0397D104 B.EQ 0x397D124
	0x0397D108 SUBS X9, X9, 0x1
	0x0397D10C ADD X10, X10, 0x10
	0x0397D110 B.NE 0x397D0FC
	0x0397D114 MOV X0, X22
	0x0397D118 MOV W2, W31
	0x0397D11C BL 0x1C5C788
	0x0397D120 B 0x397D130
	0x0397D124 LDRSW X9, [X10]
	0x0397D128 ADD X8, X8, X9, 0x4, LSL
	0x0397D12C ADD X0, X8, 0x138
	0x0397D130 LDP X8, X1, [X0]
	0x0397D134 MOV X0, X22
	0x0397D138 BLR X8
	0x0397D13C CBNZ X24, 0x397D148
	0x0397D140 MOV X0, X23
	0x0397D144 BL 0x1D2C690
	0x0397D148 MOV X0, X24
	0x0397D14C BL 0x1C16F18
	0x0397D150 BL 0x1990590
	0x0397D154 MOV X1, X31
	0x0397D158 B 0x33BDD8C
	0x0397D15C MOV X1, X31
	0x0397D160 B 0x33BDD8C
	0x0397D164 STP D9, D8, [X31 - 0x30]!
	0x0397D168 STP X30, X21, [X31 + 0x10]
	0x0397D16C STP X20, X19, [X31 + 0x20]
	0x0397D170 ADRP X20, 0xA64000
	0x0397D174 ADRP X21, 0x7D0000
	0x0397D178 LDRB W8, [X20 + 0xA30]
	0x0397D17C LDR X21, [X21 + 0x800]
	0x0397D180 MOV V8.16B, V1.16B
	0x0397D184 MOV V9.16B, V0.16B
	0x0397D188 MOV X19, X0
	0x0397D18C TBNZ X8, 0x0, 0x397D1A4
	0x0397D190 ADRP X0, 0x7D0000
	0x0397D194 LDR X0, [X0 + 0x800]
	0x0397D198 BL 0x1C16CF4
	0x0397D19C MOVZ W8, 0x1
	0x0397D1A0 STRB W8, [X20 + 0xA30]
	0x0397D1A4 LDR W20, [X19 + 0x10]
	0x0397D1A8 ADD W8, W20, 0x1
	0x0397D1AC STR W8, [X19 + 0x10]
	0x0397D1B0 LDR X0, [X21]
	0x0397D1B4 BL 0x1C16F10
	0x0397D1B8 FCVT S0, S9
	0x0397D1BC FCVT S1, S8
	0x0397D1C0 MOV W1, W20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xA66000
	012 Move W8, [X23+2603]
	013 Move W20, W3
	014 Move W21, W2
	015 Move X19, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x7D3000
	022 Move X0, [X0+488]
	023 Call 0x1C17CF4
	024 Move X0, 0x7D2000
	025 Move X0, [X0+3936]
	026 Call 0x1C17CF4
	027 Move X0, 0x779000
	028 Move X0, [X0+2480]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2603], W8
	032 Compare X22, 0
	033 JumpIfEqual {139}
	034 Move X25, 0x7D2000
	035 Move X8, [X22]
	036 Move X25, [X25+488]
	037 Move X23, 0x779000
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X25]
	040 Move X23, [X23+2480]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X22
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X26, 0x7D1000
	058 Move X26, [X26+3936]
	059 Move X0, X22
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X23]
	062 Move W1, W0
	063 Move X0, X8
	064 Call 0x1C17D6C
	065 Move X23, X0
	066 Move X24, X31
	067 Move W27, 12
	068 Move X8, [X22]
	069 Move X1, [X25]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X22]
	091 Move X1, [X26]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X22
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X2, [X0+8]
	109 Move X0, X22
	110 Move W1, W24
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {139}
	114 Compare X23, 0
	115 JumpIfEqual {139}
	116 Move W8, [X23+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move V0, [X0+16]
	119 Move V1, [X0+24]
	120 NotImplemented "Instruction NOP not yet implemented."
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Add X24, X24, 1
	123 Move [X8+32], D0
	124 Move [X8+40], S1
	125 And W2, W21, 1
	126 And W3, W20, 1
	127 Move X0, X23
	128 Move X1, X19
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X22, [X31+48]
	132 Move X21, [X31+56]
	133 Move X24, [X31+32]
	134 Move X23, [X31+40]
	135 Move X26, [X31+16]
	136 Move X25, [X31+24]
	137 Move X30, [X31+80]
	138 Move X27, [X31+88]
	139 Call 0x1C17F20
	140 Call 0x1C17F28

Method: System.Boolean TriangulateVertices(UnityEngine.Vector3[] vertices, out System.Collections.Generic.List`1<System.Int32> triangles, UnityEngine.Vector3[][] holes = null)

Disassembly:
	0x0397D3DC LDR X0, [X0 + 0x590]
	0x0397D3E0 BL 0x1C16CF4
	0x0397D3E4 ADRP X0, 0x7D1000
	0x0397D3E8 LDR X0, [X0 + 0xB08]
	0x0397D3EC BL 0x1C16CF4
	0x0397D3F0 MOVZ W8, 0x1
	0x0397D3F4 STRB W8, [X21 + 0xA34]
	0x0397D3F8 LDR X0, [X24]
	0x0397D3FC BL 0x1C16F10
	0x0397D400 MOV X1, X31
	0x0397D404 MOV X21, X0
	0x0397D408 BL 0x33BDD8C
	0x0397D40C CBZ X21, 0x397D5CC
	0x0397D410 ADRP X24, 0x7D1000
	0x0397D414 LDR X24, [X24 + 0x3F0]
	0x0397D418 STP X23, X22, [X21 + 0x10]
	0x0397D41C MOVZ W1, 0x2
	0x0397D420 LDR X0, [X24]
	0x0397D424 BL 0x1C16D6C
	0x0397D428 CBZ X0, 0x397D5CC
	0x0397D42C LDR W8, [X0 + 0x18]
	0x0397D430 MOV X22, X0
	0x0397D434 CBZ W8, 0x397D5D0
	0x0397D438 LDR X9, [X21 + 0x10]
	0x0397D43C CMP W8, 0x1
	0x0397D440 STR X9, [X22 + 0x20]
	0x0397D444 B.EQ 0x397D5D0
	0x0397D448 LDR X8, [X21 + 0x18]
	0x0397D44C ADRP X9, 0x7D1000
	0x0397D450 LDR X9, [X9 + 0xB08]
	0x0397D454 ADRP X26, 0x7D2000
	0x0397D458 STR X8, [X22 + 0x28]
	0x0397D45C ADRP X23, 0x7D3000
	0x0397D460 LDR X0, [X9]
	0x0397D464 ADRP X25, 0x7D2000
	0x0397D468 LDR W8, [X0 + 0xE0]
	0x0397D46C LDR X26, [X26 + 0x70]
	0x0397D470 LDR X23, [X23 + 0x328]
	0x0397D474 LDR X25, [X25 + 0x5B8]
	0x0397D478 CBNZ W8, 0x397D480
	0x0397D47C BL 0x1C16DFC
	0x0397D480 MOV X0, X19
	0x0397D484 MOV X1, X22
	0x0397D488 MOV W2, W31
	0x0397D48C MOV X3, X31
	0x0397D490 BL 0x3942FD0
	0x0397D494 LDR X8, [X26]
	0x0397D498 MOV X22, X0
	0x0397D49C MOV X0, X8
	0x0397D4A0 BL 0x1C16F10
	0x0397D4A4 LDR X2, [X23]
	0x0397D4A8 MOV X1, X21
	0x0397D4AC MOV X3, X31
	0x0397D4B0 MOV X23, X0
	0x0397D4B4 BL 0x2D2F428
	0x0397D4B8 LDR X2, [X25]
	0x0397D4BC MOV X0, X22
	0x0397D4C0 MOV X1, X23
	0x0397D4C4 BL 0x21C570C
	0x0397D4C8 CBZ X0, 0x397D5B4
	0x0397D4CC LDR X8, [X21 + 0x10]
	0x0397D4D0 CBZ X8, 0x397D5CC
	0x0397D4D4 LDRB W9, [X8 + 0x4C]
	0x0397D4D8 LDR X1, [X21 + 0x18]
	0x0397D4DC MOV X22, X0
	0x0397D4E0 CBZ W9, 0x397D4FC
	0x0397D4E4 CBZ X1, 0x397D5CC
	0x0397D4E8 MOVZ W9, 0x1
	0x0397D4EC MOVN W10, 0x0
	0x0397D4F0 STRB W9, [X1 + 0x4C]
	0x0397D4F4 STR W10, [X8 + 0x54]
	0x0397D4F8 B 0x397D508
	0x0397D4FC MOVN W9, 0x0
	0x0397D500 STR W9, [X8 + 0x54]
	0x0397D504 CBZ X1, 0x397D5CC
	0x0397D508 MOVN W8, 0x0
	0x0397D50C FMOV S0, W31
	0x0397D510 FMOV S1, W31
	0x0397D514 FMOV S2, W31
	0x0397D518 MOV X0, X19
	0x0397D51C MOV X2, X31
	0x0397D520 STR W8, [X1 + 0x54]
	0x0397D524 BL 0x3920AD8
	0x0397D528 LDR X8, [X22 + 0x38]
	0x0397D52C CBZ X8, 0x397D5CC
	0x0397D530 LDR X1, [X21 + 0x18]
	0x0397D534 LDR X2, [X22 + 0x10]
	0x0397D538 LDR X3, [X8 + 0x10]
	0x0397D53C MOV X0, X19
	0x0397D540 MOV W4, W20
	0x0397D544 BL 0x397D5DC

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xA65000
	013 Move W8, [X22+2604]
	014 Move X20, X2
	015 Move X19, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x7D4000
	022 Move X0, [X0+744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2604], W8
	026 Move [X19], X31
	027 Compare X21, 0
	028 JumpIfEqual {76}
	029 Move W8, [X21+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Projection.FindBestPlane, X0, X1
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Move V8, V0
	039 Move V9, V1
	040 Move V10, V2
	041 Call Projection.PlanarProject, X0, X1, X2
	042 Move X21, X0
	043 Compare X20, 0
	044 JumpIfEqual {89}
	045 Move X8, 0x7D4000
	046 Move X8, [X8+744]
	047 Move W1, [X20+24]
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move W8, [X20+24]
	051 Move X22, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, X31
	054 Add X24, X22, 32
	055 Add X25, X20, 32
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X25]
	058 Compare X0, 0
	059 JumpIfEqual {104}
	060 Move W8, [X0+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X1, X31
	063 Move V0, V8
	064 Move V1, V9
	065 Move V2, V10
	066 Move X2, X31
	067 Call Projection.PlanarProject, X0, X1, X2
	068 Compare X22, 0
	069 JumpIfEqual {104}
	070 Move W8, [X22+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X24], X0
	073 Move W8, [X20+24]
	074 Add X23, X23, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X22, [X31+64]
	079 Move X21, [X31+72]
	080 Move X24, [X31+48]
	081 Move X23, [X31+56]
	082 Move X30, [X31+32]
	083 Move X25, [X31+40]
	084 Move D9, [X31+16]
	085 Move D8, [X31+24]
	086 Move W0, W31
	087 Move V10, [X31+96]
	088 Return X0
	089 Move X22, X31
	090 Move X0, X21
	091 Move X1, X22
	092 Move X2, X19
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X24, [X31+48]
	098 Move X23, [X31+56]
	099 Move X30, [X31+32]
	100 Move X25, [X31+40]
	101 Move D9, [X31+16]
	102 Move D8, [X31+24]
	103 Move V10, [X31+96]
	104 Call 0x1C17F20
	105 Call 0x1C17F28

Method: System.Boolean TriangulateVertices(UnityEngine.Vector3[] vertices, out System.Collections.Generic.List`1<System.Int32> triangles, System.Boolean unordered = True, System.Boolean convex = False)

Disassembly:
	0x0397D1C4 MOV X2, X31
	0x0397D1C8 MOV X19, X0
	0x0397D1CC BL 0x38EF0DC
	0x0397D1D0 MOV X0, X19
	0x0397D1D4 LDP X20, X19, [X31 + 0x20]
	0x0397D1D8 LDP X30, X21, [X31 + 0x10]
	0x0397D1DC LDP D9, D8, [X31], #0x30
	0x0397D1E0 RET
	0x0397D1E4 STP D9, D8, [X31 - 0x30]!
	0x0397D1E8 STP X30, X21, [X31 + 0x10]
	0x0397D1EC STP X20, X19, [X31 + 0x20]
	0x0397D1F0 ADRP X20, 0xA64000
	0x0397D1F4 ADRP X21, 0x7D0000
	0x0397D1F8 LDRB W8, [X20 + 0xA31]
	0x0397D1FC LDR X21, [X21 + 0x710]
	0x0397D200 MOV V8.16B, V1.16B
	0x0397D204 MOV V9.16B, V0.16B
	0x0397D208 MOV X19, X0
	0x0397D20C TBNZ X8, 0x0, 0x397D224
	0x0397D210 ADRP X0, 0x7D0000
	0x0397D214 LDR X0, [X0 + 0x710]
	0x0397D218 BL 0x1C16CF4
	0x0397D21C MOVZ W8, 0x1
	0x0397D220 STRB W8, [X20 + 0xA31]
	0x0397D224 LDR W20, [X19 + 0x10]
	0x0397D228 ADD W8, W20, 0x1
	0x0397D22C STR W8, [X19 + 0x10]
	0x0397D230 LDR X0, [X21]
	0x0397D234 BL 0x1C16F10
	0x0397D238 FCVT S0, S9
	0x0397D23C FCVT S1, S8
	0x0397D240 MOV W1, W20
	0x0397D244 MOV X2, X31
	0x0397D248 MOV X19, X0
	0x0397D24C BL 0x38EF0A0
	0x0397D250 MOV X0, X19
	0x0397D254 LDP X20, X19, [X31 + 0x20]
	0x0397D258 LDP X30, X21, [X31 + 0x10]
	0x0397D25C LDP D9, D8, [X31], #0x30
	0x0397D260 RET
	0x0397D264 STP D9, D8, [X31 - 0x30]!
	0x0397D268 STP X30, X21, [X31 + 0x10]
	0x0397D26C STP X20, X19, [X31 + 0x20]
	0x0397D270 ADRP X20, 0xA64000
	0x0397D274 ADRP X21, 0x7D0000
	0x0397D278 LDRB W8, [X20 + 0xA32]
	0x0397D27C LDR X21, [X21 + 0x710]
	0x0397D280 MOV V8.16B, V1.16B
	0x0397D284 MOV V9.16B, V0.16B
	0x0397D288 MOV X19, X0
	0x0397D28C TBNZ X8, 0x0, 0x397D2A4
	0x0397D290 ADRP X0, 0x7D0000
	0x0397D294 LDR X0, [X0 + 0x710]
	0x0397D298 BL 0x1C16CF4
	0x0397D29C MOVZ W8, 0x1
	0x0397D2A0 STRB W8, [X20 + 0xA32]
	0x0397D2A4 LDR W20, [X19 + 0x10]
	0x0397D2A8 ADD W8, W20, 0x1
	0x0397D2AC STR W8, [X19 + 0x10]
	0x0397D2B0 LDR X0, [X21]
	0x0397D2B4 BL 0x1C16F10
	0x0397D2B8 FCVT S0, S9
	0x0397D2BC FCVT S1, S8
	0x0397D2C0 MOV W1, W20
	0x0397D2C4 MOV X2, X31
	0x0397D2C8 MOV X19, X0
	0x0397D2CC BL 0x38EF0A0
	0x0397D2D0 MOV X0, X19
	0x0397D2D4 LDP X20, X19, [X31 + 0x20]
	0x0397D2D8 LDP X30, X21, [X31 + 0x10]
	0x0397D2DC LDP D9, D8, [X31], #0x30
	0x0397D2E0 RET
	0x0397D2E4 STP D9, D8, [X31 - 0x30]!
	0x0397D2E8 STP X30, X21, [X31 + 0x10]
	0x0397D2EC STP X20, X19, [X31 + 0x20]
	0x0397D2F0 ADRP X20, 0xA64000
	0x0397D2F4 ADRP X21, 0x7D0000
	0x0397D2F8 LDRB W8, [X20 + 0xA33]
	0x0397D2FC LDR X21, [X21 + 0x710]
	0x0397D300 MOV V8.16B, V1.16B
	0x0397D304 MOV V9.16B, V0.16B
	0x0397D308 MOV X19, X0
	0x0397D30C TBNZ X8, 0x0, 0x397D324
	0x0397D310 ADRP X0, 0x7D0000
	0x0397D314 LDR X0, [X0 + 0x710]
	0x0397D318 BL 0x1C16CF4
	0x0397D31C MOVZ W8, 0x1
	0x0397D320 STRB W8, [X20 + 0xA33]
	0x0397D324 LDR W20, [X19 + 0x10]
	0x0397D328 ADD W8, W20, 0x1
	0x0397D32C STR W8, [X19 + 0x10]
	0x0397D330 LDR X0, [X21]
	0x0397D334 BL 0x1C16F10
	0x0397D338 FCVT S0, S9
	0x0397D33C FCVT S1, S8
	0x0397D340 MOV W1, W20
	0x0397D344 MOV X2, X31
	0x0397D348 MOV X19, X0
	0x0397D34C BL 0x38EF0A0
	0x0397D350 MOV X0, X19
	0x0397D354 LDP X20, X19, [X31 + 0x20]
	0x0397D358 LDP X30, X21, [X31 + 0x10]
	0x0397D35C LDP D9, D8, [X31], #0x30
	0x0397D360 RET
	0x0397D364 STR X30, [X31 - 0x50]!
	0x0397D368 STP X26, X25, [X31 + 0x10]
	0x0397D36C STP X24, X23, [X31 + 0x20]
	0x0397D370 STP X22, X21, [X31 + 0x30]
	0x0397D374 STP X20, X19, [X31 + 0x40]
	0x0397D378 ADRP X21, 0xA64000
	0x0397D37C ADRP X24, 0x7D3000
	0x0397D380 LDRB W8, [X21 + 0xA34]
	0x0397D384 LDR X24, [X24 + 0x320]
	0x0397D388 MOV W20, W3
	0x0397D38C MOV X22, X2
	0x0397D390 MOV X23, X1
	0x0397D394 MOV X19, X0
	0x0397D398 TBNZ X8, 0x0, 0x397D3F8
	0x0397D39C ADRP X0, 0x7D2000
	0x0397D3A0 LDR X0, [X0 + 0x5B8]
	0x0397D3A4 BL 0x1C16CF4
	0x0397D3A8 ADRP X0, 0x7D1000
	0x0397D3AC LDR X0, [X0 + 0x3F0]
	0x0397D3B0 BL 0x1C16CF4
	0x0397D3B4 ADRP X0, 0x7D2000
	0x0397D3B8 LDR X0, [X0 + 0x70]
	0x0397D3BC BL 0x1C16CF4
	0x0397D3C0 ADRP X0, 0x7D3000
	0x0397D3C4 LDR X0, [X0 + 0x328]
	0x0397D3C8 BL 0x1C16CF4
	0x0397D3CC ADRP X0, 0x7D3000
	0x0397D3D0 LDR X0, [X0 + 0x320]
	0x0397D3D4 BL 0x1C16CF4
	0x0397D3D8 ADRP X0, 0x7D1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA65000
	008 Move W8, [X23+2605]
	009 Move W20, W3
	010 Move W21, W2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x778000
	018 Move X0, [X0+3600]
	019 Call 0x1C17CF4
	020 Move X0, 0x77B000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x778000
	024 Move X0, [X0+3632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2605], W8
	028 Move [X19], X31
	029 Compare X22, 0
	030 JumpIfEqual {63}
	031 Move W8, [X22+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x778000
	034 Move X8, [X8+3632]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X8, 0x77B000
	038 Move X8, [X8+2928]
	039 Move X20, X0
	040 Move X1, [X8]
	041 Call List`1<Int32>..ctor, X0
	042 Compare X20, 0
	043 JumpIfEqual {150}
	044 Move X21, 0x778000
	045 Move X21, [X21+3600]
	046 Move W10, [X20+28]
	047 Move X8, [X20+16]
	048 Move X9, [X21]
	049 Add W10, W10, 1
	050 Move [X20+28], W10
	051 Compare X8, 0
	052 JumpIfEqual {150}
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Move W11, [X8+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W11, W10, 1
	057 Add X10, X8, X10
	058 Move [X20+24], W11
	059 Move [X10+32], W31
	060 Move W10, [X20+28]
	061 Add W10, W10, 1
	062 Move [X20+28], W10
	063 Move W0, W31
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Move X0, X22
	072 Move X1, X31
	073 Move X2, X31
	074 Call Projection.PlanarProject, X0, X1
	075 And W2, W20, 1
	076 Move X1, X19
	077 Move TEMP, X21
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {89}
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Call Triangulation.SortAndTriangulate, X0, X1, X2
	088 Return X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Call Triangulation.Triangulate, X0, X1, X2
	096 Return X0
	097 Move X8, [X9+32]
	098 Move X0, X20
	099 Move W1, W31
	100 Move X8, [X8+192]
	101 Move X2, [X8+112]
	102 Call List`1<Int32>.AddWithResize, X0, X1
	103 Move W10, [X20+28]
	104 Move X8, [X20+16]
	105 Move X9, [X21]
	106 Add W10, W10, 1
	107 Move [X20+28], W10
	108 Compare X8, 0
	109 JumpIfEqual {150}
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Move W11, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add W11, W10, 1
	114 Add X10, X8, X10
	115 Move W12, 1
	116 Move [X20+24], W11
	117 Move [X10+32], W12
	118 Move W10, [X20+28]
	119 Add W10, W10, 1
	120 Move [X20+28], W10
	121 Move X8, [X9+32]
	122 Move W1, 1
	123 Move X0, X20
	124 Move X8, [X8+192]
	125 Move X2, [X8+112]
	126 Call List`1<Int32>.AddWithResize, X0, X1
	127 Move W10, [X20+28]
	128 Move X8, [X20+16]
	129 Move X9, [X21]
	130 Add W10, W10, 1
	131 Move [X20+28], W10
	132 Compare X8, 0
	133 JumpIfEqual {150}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W9, W10, 1
	138 Add X8, X8, X10
	139 Move W10, 2
	140 Move [X20+24], W9
	141 Move [X8+32], W10
	142 Move X8, [X9+32]
	143 Move W1, 2
	144 Move X0, X20
	145 Move X8, [X8+192]
	146 Move X2, [X8+112]
	147 Call List`1<Int32>.AddWithResize, X0, X1
	148 Move W0, 1
	149 Move [X19], X20
	150 Call 0x1C17F20

Method: System.Boolean Triangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, out System.Collections.Generic.List`1<System.Int32> indexes, System.Boolean convex = False)

Disassembly:
	0x0397C448 MOV X1, X31
	0x0397C44C MOV X2, X31
	0x0397C450 MOV V8.16B, V0.16B
	0x0397C454 MOV V9.16B, V1.16B
	0x0397C458 MOV V10.16B, V2.16B
	0x0397C45C BL 0x391FB78
	0x0397C460 MOV X21, X0
	0x0397C464 CBZ X20, 0x397C514
	0x0397C468 ADRP X8, 0x7D4000
	0x0397C46C LDR X8, [X8 + 0x2E8]
	0x0397C470 LDR W1, [X20 + 0x18]
	0x0397C474 LDR X0, [X8]
	0x0397C478 BL 0x1C16D6C
	0x0397C47C LDR W8, [X20 + 0x18]
	0x0397C480 MOV X22, X0
	0x0397C484 CMP W8, 0x1
	0x0397C488 B.LT 0x397C518
	0x0397C48C MOV X23, X31
	0x0397C490 ADD X24, X22, 0x20
	0x0397C494 ADD X25, X20, 0x20
	0x0397C498 CMP W23, W8
	0x0397C49C B.CS 0x397C544
	0x0397C4A0 LDR X0, [X25, X23, LSL #3]
	0x0397C4A4 CBZ X0, 0x397C540
	0x0397C4A8 LDR W8, [X0 + 0x18]
	0x0397C4AC CMP W8, 0x3
	0x0397C4B0 B.LT 0x397C4F4
	0x0397C4B4 MOV X1, X31
	0x0397C4B8 MOV V0.16B, V8.16B
	0x0397C4BC MOV V1.16B, V9.16B
	0x0397C4C0 MOV V2.16B, V10.16B
	0x0397C4C4 MOV X2, X31
	0x0397C4C8 BL 0x391FB78
	0x0397C4CC CBZ X22, 0x397C540
	0x0397C4D0 LDR W8, [X22 + 0x18]
	0x0397C4D4 CMP W23, W8
	0x0397C4D8 B.CS 0x397C544
	0x0397C4DC STR X0, [X24, X23, LSL #3]
	0x0397C4E0 LDR W8, [X20 + 0x18]
	0x0397C4E4 ADD X23, X23, 0x1
	0x0397C4E8 CMP W23, W8
	0x0397C4EC B.LT 0x397C498
	0x0397C4F0 B 0x397C518
	0x0397C4F4 LDP X20, X19, [X31 + 0x50]
	0x0397C4F8 LDP X22, X21, [X31 + 0x40]
	0x0397C4FC LDP X24, X23, [X31 + 0x30]
	0x0397C500 LDP X30, X25, [X31 + 0x20]
	0x0397C504 LDP D9, D8, [X31 + 0x10]
	0x0397C508 MOV W0, W31
	0x0397C50C LDR V10, [X31], #0x60
	0x0397C510 RET
	0x0397C514 MOV X22, X31
	0x0397C518 MOV X0, X21
	0x0397C51C MOV X1, X22
	0x0397C520 MOV X2, X19
	0x0397C524 LDP X20, X19, [X31 + 0x50]
	0x0397C528 LDP X22, X21, [X31 + 0x40]
	0x0397C52C LDP X24, X23, [X31 + 0x30]
	0x0397C530 LDP X30, X25, [X31 + 0x20]
	0x0397C534 LDP D9, D8, [X31 + 0x10]
	0x0397C538 LDR V10, [X31], #0x60
	0x0397C53C B 0x397C548
	0x0397C540 BL 0x1C16F20
	0x0397C544 BL 0x1C16F28
	0x0397C548 SUB X31, X31, 0x80
	0x0397C54C STP X29, X30, [X31 + 0x20]
	0x0397C550 STP X28, X27, [X31 + 0x30]
	0x0397C554 STP X26, X25, [X31 + 0x40]
	0x0397C558 STP X24, X23, [X31 + 0x50]
	0x0397C55C STP X22, X21, [X31 + 0x60]
	0x0397C560 STP X20, X19, [X31 + 0x70]
	0x0397C564 STR X2, [X31 + 0x10]
	0x0397C568 ADRP X21, 0xA65000
	0x0397C56C ADRP X23, 0x7D4000
	0x0397C570 ADRP X20, 0x778000
	0x0397C574 ADRP X19, 0x77B000
	0x0397C578 LDRB W8, [X21 + 0xA2F]
	0x0397C57C LDR X23, [X23 + 0x2F0]
	0x0397C580 LDR X20, [X20 + 0xE30]
	0x0397C584 LDR X19, [X19 + 0xB70]
	0x0397C588 MOV X22, X1
	0x0397C58C MOV X25, X0
	0x0397C590 TBNZ X8, 0x0, 0x397C6D4
	0x0397C594 ADRP X0, 0x7D1000
	0x0397C598 LDR X0, [X0 + 0x638]
	0x0397C59C BL 0x1C16CF4
	0x0397C5A0 ADRP X0, 0x7D4000
	0x0397C5A4 LDR X0, [X0 + 0x290]
	0x0397C5A8 BL 0x1C16CF4
	0x0397C5AC ADRP X0, 0x7D1000
	0x0397C5B0 LDR X0, [X0 + 0x7B0]
	0x0397C5B4 BL 0x1C16CF4
	0x0397C5B8 ADRP X0, 0x7D4000
	0x0397C5BC LDR X0, [X0 + 0x2A8]
	0x0397C5C0 BL 0x1C16CF4
	0x0397C5C4 ADRP X0, 0x7D4000
	0x0397C5C8 LDR X0, [X0 + 0x2F8]
	0x0397C5CC BL 0x1C16CF4
	0x0397C5D0 ADRP X0, 0x777000
	0x0397C5D4 LDR X0, [X0 + 0xE00]
	0x0397C5D8 BL 0x1C16CF4
	0x0397C5DC ADRP X0, 0x7D1000
	0x0397C5E0 LDR X0, [X0 + 0x980]
	0x0397C5E4 BL 0x1C16CF4
	0x0397C5E8 ADRP X0, 0x7D1000
	0x0397C5EC LDR X0, [X0 + 0x988]
	0x0397C5F0 BL 0x1C16CF4
	0x0397C5F4 ADRP X0, 0x777000
	0x0397C5F8 LDR X0, [X0 + 0xE18]
	0x0397C5FC BL 0x1C16CF4
	0x0397C600 ADRP X0, 0x7D4000
	0x0397C604 LDR X0, [X0 + 0x300]
	0x0397C608 BL 0x1C16CF4
	0x0397C60C ADRP X0, 0x7D3000
	0x0397C610 LDR X0, [X0 + 0x180]
	0x0397C614 BL 0x1C16CF4
	0x0397C618 ADRP X0, 0x778000
	0x0397C61C LDR X0, [X0 + 0xE10]
	0x0397C620 BL 0x1C16CF4
	0x0397C624 ADRP X0, 0x7D4000
	0x0397C628 LDR X0, [X0 + 0x2B8]
	0x0397C62C BL 0x1C16CF4
	0x0397C630 ADRP X0, 0x7D3000
	0x0397C634 LDR X0, [X0 + 0x190]
	0x0397C638 BL 0x1C16CF4
	0x0397C63C ADRP X0, 0x77B000
	0x0397C640 LDR X0, [X0 + 0xB70]
	0x0397C644 BL 0x1C16CF4
	0x0397C648 ADRP X0, 0x7D4000
	0x0397C64C LDR X0, [X0 + 0x308]
	0x0397C650 BL 0x1C16CF4
	0x0397C654 ADRP X0, 0x7A1000
	0x0397C658 LDR X0, [X0 + 0xF38]
	0x0397C65C BL 0x1C16CF4
	0x0397C660 ADRP X0, 0x778000
	0x0397C664 LDR X0, [X0 + 0xE30]
	0x0397C668 BL 0x1C16CF4
	0x0397C66C ADRP X0, 0x7D2000
	0x0397C670 LDR X0, [X0 + 0x718]
	0x0397C674 BL 0x1C16CF4
	0x0397C678 ADRP X0, 0x7D1000
	0x0397C67C LDR X0, [X0 + 0xAD0]
	0x0397C680 BL 0x1C16CF4
	0x0397C684 ADRP X0, 0x7D1000
	0x0397C688 LDR X0, [X0 + 0x9A8]
	0x0397C68C BL 0x1C16CF4
	0x0397C690 ADRP X0, 0x7D4000
	0x0397C694 LDR X0, [X0 + 0x310]
	0x0397C698 BL 0x1C16CF4
	0x0397C69C ADRP X0, 0x7D4000
	0x0397C6A0 LDR X0, [X0 + 0x318]
	0x0397C6A4 BL 0x1C16CF4
	0x0397C6A8 ADRP X0, 0x7D4000
	0x0397C6AC LDR X0, [X0 + 0x2F0]
	0x0397C6B0 BL 0x1C16CF4
	0x0397C6B4 ADRP X0, 0x7D1000
	0x0397C6B8 LDR X0, [X0 + 0xA88]
	0x0397C6BC BL 0x1C16CF4
	0x0397C6C0 ADRP X0, 0x7D4000
	0x0397C6C4 LDR X0, [X0 + 0x2D8]
	0x0397C6C8 BL 0x1C16CF4
	0x0397C6CC MOVZ W8, 0x1
	0x0397C6D0 STRB W8, [X21 + 0xA2F]
	0x0397C6D4 LDR X0, [X23]
	0x0397C6D8 BL 0x1C16F10
	0x0397C6DC MOV X1, X31
	0x0397C6E0 MOV X24, X0
	0x0397C6E4 BL 0x33BDD8C
	0x0397C6E8 LDR X0, [X20]
	0x0397C6EC BL 0x1C16F10
	0x0397C6F0 LDR X1, [X19]
	0x0397C6F4 MOV X21, X0
	0x0397C6F8 BL 0x2FDBF14
	0x0397C6FC LDR X8, [X31 + 0x10]
	0x0397C700 STR X21, [X8]
	0x0397C704 CBZ X24, 0x397D01C
	0x0397C708 ADRP X8, 0x7D2000
	0x0397C70C LDR X8, [X8 + 0x718]
	0x0397C710 ADRP X19, 0x7D3000
	0x0397C714 ADRP X23, 0x7D4000
	0x0397C718 LDR X19, [X19 + 0x190]
	0x0397C71C LDR X23, [X23 + 0x2A8]
	0x0397C720 STR W31, [X24 + 0x10]
	0x0397C724 LDR X0, [X8]
	0x0397C728 ADRP X21, 0x7D4000
	0x0397C72C ADRP X29, 0x7D4000
	0x0397C730 ADRP X20, 0x7D1000
	0x0397C734 LDR X21, [X21 + 0x310]
	0x0397C738 LDR X29, [X29 + 0x290]
	0x0397C73C LDR X20, [X20 + 0x9A8]
	0x0397C740 BL 0x1C16F10
	0x0397C744 LDR X2, [X19]
	0x0397C748 MOV X1, X25
	0x0397C74C MOV X26, X0
	0x0397C750 BL 0x30C8F74
	0x0397C754 LDR X0, [X23]
	0x0397C758 BL 0x1C16F10
	0x0397C75C LDR X2, [X21]
	0x0397C760 MOV X1, X24
	0x0397C764 MOV X3, X31
	0x0397C768 MOV X23, X0
	0x0397C76C BL 0x2D34174
	0x0397C770 LDR X2, [X29]
	0x0397C774 MOV X0, X25
	0x0397C778 MOV X1, X23
	0x0397C77C STR X25, [X31 + 0x8]
	0x0397C780 BL 0x21D00E8
	0x0397C784 LDR X8, [X20]
	0x0397C788 MOV X25, X0
	0x0397C78C MOV X0, X8
	0x0397C790 BL 0x1C16F10
	0x0397C794 MOV X1, X25
	0x0397C798 MOV X2, X31
	0x0397C79C MOV X23, X0
	0x0397C7A0 BL 0x38EE160
	0x0397C7A4 STR X26, [X31 + 0x18]
	0x0397C7A8 CBZ X22, 0x397C980
	0x0397C7AC ADRP X28, 0x7D4000
	0x0397C7B0 ADRP X19, 0x7D4000
	0x0397C7B4 ADRP X21, 0x7D3000
	0x0397C7B8 LDR X28, [X28 + 0x2F8]
	0x0397C7BC LDR X19, [X19 + 0x300]
	0x0397C7C0 LDR X21, [X21 + 0x180]
	0x0397C7C4 MOV W25, W31
	0x0397C7C8 LDR X8, [X22]
	0x0397C7CC LDR X1, [X28]
	0x0397C7D0 LDRH W9, [X8 + 0x12E]
	0x0397C7D4 CBZ X9, 0x397C7F8
	0x0397C7D8 LDR X10, [X8 + 0xB0]
	0x0397C7DC ADD X10, X10, 0x8
	0x0397C7E0 LDUR X11, [X10 - 0x8]
	0x0397C7E4 CMP X11, X1
	0x0397C7E8 B.EQ 0x397C808
	0x0397C7EC SUBS X9, X9, 0x1
	0x0397C7F0 ADD X10, X10, 0x10
	0x0397C7F4 B.NE 0x397C7E0
	0x0397C7F8 MOV X0, X22
	0x0397C7FC MOV W2, W31
	0x0397C800 BL 0x1C5C788
	0x0397C804 B 0x397C814
	0x0397C808 LDRSW X9, [X10]
	0x0397C80C ADD X8, X8, X9, 0x4, LSL
	0x0397C810 ADD X0, X8, 0x138
	0x0397C814 LDP X8, X1, [X0]
	0x0397C818 MOV X0, X22
	0x0397C81C BLR X8
	0x0397C820 CMP W25, W0
	0x0397C824 B.GE 0x397C980
	0x0397C828 LDR X8, [X22]
	0x0397C82C LDR X1, [X19]
	0x0397C830 LDRH W9, [X8 + 0x12E]
	0x0397C834 CBZ X9, 0x397C858
	0x0397C838 LDR X10, [X8 + 0xB0]
	0x0397C83C ADD X10, X10, 0x8
	0x0397C840 LDUR X11, [X10 - 0x8]
	0x0397C844 CMP X11, X1
	0x0397C848 B.EQ 0x397C868
	0x0397C84C SUBS X9, X9, 0x1
	0x0397C850 ADD X10, X10, 0x10
	0x0397C854 B.NE 0x397C840
	0x0397C858 MOV X0, X22
	0x0397C85C MOV W2, W31
	0x0397C860 BL 0x1C5C788
	0x0397C864 B 0x397C874
	0x0397C868 LDRSW X9, [X10]
	0x0397C86C ADD X8, X8, X9, 0x4, LSL
	0x0397C870 ADD X0, X8, 0x138
	0x0397C874 LDP X8, X2, [X0]
	0x0397C878 MOV X0, X22
	0x0397C87C MOV W1, W25
	0x0397C880 BLR X8
	0x0397C884 CBZ X26, 0x397D01C
	0x0397C888 LDR X2, [X21]
	0x0397C88C MOV X1, X0
	0x0397C890 MOV X0, X26
	0x0397C894 BL 0x30C9874
	0x0397C898 LDR X8, [X22]
	0x0397C89C LDR X1, [X19]
	0x0397C8A0 LDRH W9, [X8 + 0x12E]
	0x0397C8A4 CBZ X9, 0x397C8C8
	0x0397C8A8 LDR X10, [X8 + 0xB0]
	0x0397C8AC ADD X10, X10, 0x8
	0x0397C8B0 LDUR X11, [X10 - 0x8]
	0x0397C8B4 CMP X11, X1
	0x0397C8B8 B.EQ 0x397C8D8
	0x0397C8BC SUBS X9, X9, 0x1
	0x0397C8C0 ADD X10, X10, 0x10
	0x0397C8C4 B.NE 0x397C8B0
	0x0397C8C8 MOV X0, X22
	0x0397C8CC MOV W2, W31
	0x0397C8D0 BL 0x1C5C788
	0x0397C8D4 B 0x397C8E4
	0x0397C8D8 LDRSW X9, [X10]
	0x0397C8DC ADD X8, X8, X9, 0x4, LSL
	0x0397C8E0 ADD X0, X8, 0x138
	0x0397C8E4 LDP X8, X2, [X0]
	0x0397C8E8 MOV X0, X22
	0x0397C8EC MOV W1, W25
	0x0397C8F0 BLR X8
	0x0397C8F4 LDR X27, [X24 + 0x18]
	0x0397C8F8 MOV X26, X0
	0x0397C8FC CBNZ X27, 0x397C930
	0x0397C900 ADRP X8, 0x7D4000
	0x0397C904 LDR X8, [X8 + 0x2A8]
	0x0397C908 LDR X0, [X8]
	0x0397C90C BL 0x1C16F10
	0x0397C910 ADRP X8, 0x7D4000
	0x0397C914 LDR X8, [X8 + 0x318]
	0x0397C918 MOV X1, X24
	0x0397C91C MOV X3, X31
	0x0397C920 MOV X27, X0
	0x0397C924 LDR X2, [X8]
	0x0397C928 BL 0x2D34174
	0x0397C92C STR X27, [X24 + 0x18]
	0x0397C930 LDR X2, [X29]
	0x0397C934 MOV X0, X26
	0x0397C938 MOV X1, X27
	0x0397C93C BL 0x21D00E8
	0x0397C940 LDR X8, [X20]
	0x0397C944 MOV X27, X0
	0x0397C948 MOV X0, X8
	0x0397C94C BL 0x1C16F10
	0x0397C950 MOV X1, X27
	0x0397C954 MOV X2, X31
	0x0397C958 MOV X26, X0
	0x0397C95C BL 0x38EE160
	0x0397C960 CBZ X23, 0x397D01C
	0x0397C964 MOV X0, X23
	0x0397C968 MOV X1, X26
	0x0397C96C MOV X2, X31
	0x0397C970 BL 0x38EE3EC
	0x0397C974 LDR X26, [X31 + 0x18]
	0x0397C978 ADD W25, W25, 0x1
	0x0397C97C B 0x397C7C8
	0x0397C980 BL 0x397B0C0
	0x0397C984 LDR X21, [X31 + 0x10]
	0x0397C988 CBZ X0, 0x397CF38
	0x0397C98C LDR X8, [X0]
	0x0397C990 LDP X9, X1, [X8 + 0x1A8]
	0x0397C994 BLR X9
	0x0397C998 BL 0x397B0C0
	0x0397C99C CBZ X0, 0x397CF3C
	0x0397C9A0 LDR X8, [X0]
	0x0397C9A4 LDP X9, X2, [X8 + 0x188]
	0x0397C9A8 MOV X1, X23
	0x0397C9AC BLR X9
	0x0397C9B0 BL 0x397B0C0
	0x0397C9B4 CBZ X0, 0x397C9EC
	0x0397C9B8 ADRP X9, 0x7D1000
	0x0397C9BC LDR X9, [X9 + 0x638]
	0x0397C9C0 LDR X8, [X0]
	0x0397C9C4 LDR X1, [X9]
	0x0397C9C8 LDRB W10, [X8 + 0x130]
	0x0397C9CC LDRB W9, [X1 + 0x130]
	0x0397C9D0 CMP W10, W9
	0x0397C9D4 B.CC 0x397CF34
	0x0397C9D8 LDR X8, [X8 + 0xC8]
	0x0397C9DC ADD X8, X8, X9, 0x3, LSL
	0x0397C9E0 LDUR X8, [X8 - 0x8]
	0x0397C9E4 CMP X8, X1
	0x0397C9E8 B.NE 0x397CF34
	0x0397C9EC MOV X1, X31
	0x0397C9F0 BL 0x38EDD60
	0x0397C9F4 CBZ X23, 0x397D01C
	0x0397C9F8 LDR X22, [X23 + 0x28]
	0x0397C9FC CBZ X22, 0x397D01C
	0x0397CA00 ADRP X10, 0x7D1000
	0x0397CA04 LDR X8, [X22]
	0x0397CA08 LDR X10, [X10 + 0x980]
	0x0397CA0C LDRH W9, [X8 + 0x12E]
	0x0397CA10 LDR X1, [X10]
	0x0397CA14 CBZ X9, 0x397CA38
	0x0397CA18 LDR X10, [X8 + 0xB0]
	0x0397CA1C ADD X10, X10, 0x8
	0x0397CA20 LDUR X11, [X10 - 0x8]
	0x0397CA24 CMP X11, X1
	0x0397CA28 B.EQ 0x397CA48
	0x0397CA2C SUBS X9, X9, 0x1
	0x0397CA30 ADD X10, X10, 0x10
	0x0397CA34 B.NE 0x397CA20
	0x0397CA38 MOV X0, X22
	0x0397CA3C MOV W2, W31
	0x0397CA40 BL 0x1C5C788
	0x0397CA44 B 0x397CA54
	0x0397CA48 LDRSW X9, [X10]
	0x0397CA4C ADD X8, X8, X9, 0x4, LSL
	0x0397CA50 ADD X0, X8, 0x138
	0x0397CA54 LDP X8, X1, [X0]
	0x0397CA58 ADRP X19, 0x777000
	0x0397CA5C LDR X19, [X19 + 0xE00]
	0x0397CA60 MOV X0, X22
	0x0397CA64 BLR X8
	0x0397CA68 MOV X22, X0
	0x0397CA6C CBZ X0, 0x397CF40
	0x0397CA70 ADRP X27, 0x7D1000
	0x0397CA74 ADRP X20, 0x7D4000
	0x0397CA78 ADRP X28, 0x777000
	0x0397CA7C ADRP X29, 0x7D1000
	0x0397CA80 ADRP X25, 0x7D1000
	0x0397CA84 ADRP X26, 0x778000
	0x0397CA88 LDR X27, [X27 + 0xAD0]
	0x0397CA8C LDR X20, [X20 + 0x2D8]
	0x0397CA90 LDR X28, [X28 + 0xE18]
	0x0397CA94 LDR X29, [X29 + 0x988]
	0x0397CA98 LDR X25, [X25 + 0x7B0]
	0x0397CA9C LDR X26, [X26 + 0xE10]
	0x0397CAA0 LDR X8, [X22]
	0x0397CAA4 LDR X1, [X28]
	0x0397CAA8 LDRH W9, [X8 + 0x12E]
	0x0397CAAC CBZ X9, 0x397CAD0
	0x0397CAB0 LDR X10, [X8 + 0xB0]
	0x0397CAB4 ADD X10, X10, 0x8
	0x0397CAB8 LDUR X11, [X10 - 0x8]
	0x0397CABC CMP X11, X1
	0x0397CAC0 B.EQ 0x397CAE0
	0x0397CAC4 SUBS X9, X9, 0x1
	0x0397CAC8 ADD X10, X10, 0x10
	0x0397CACC B.NE 0x397CAB8
	0x0397CAD0 MOV X0, X22
	0x0397CAD4 MOV W2, W31
	0x0397CAD8 BL 0x1C5C788
	0x0397CADC B 0x397CAEC
	0x0397CAE0 LDRSW X9, [X10]
	0x0397CAE4 ADD X8, X8, X9, 0x4, LSL
	0x0397CAE8 ADD X0, X8, 0x138
	0x0397CAEC LDP X8, X1, [X0]
	0x0397CAF0 MOV X0, X22
	0x0397CAF4 BLR X8
	0x0397CAF8 TBZ X0, 0x0, 0x397CD30
	0x0397CAFC LDR X8, [X22]
	0x0397CB00 LDR X1, [X29]
	0x0397CB04 LDRH W9, [X8 + 0x12E]
	0x0397CB08 CBZ X9, 0x397CB2C
	0x0397CB0C LDR X10, [X8 + 0xB0]
	0x0397CB10 ADD X10, X10, 0x8
	0x0397CB14 LDUR X11, [X10 - 0x8]
	0x0397CB18 CMP X11, X1
	0x0397CB1C B.EQ 0x397CB3C
	0x0397CB20 SUBS X9, X9, 0x1
	0x0397CB24 ADD X10, X10, 0x10
	0x0397CB28 B.NE 0x397CB14
	0x0397CB2C MOV X0, X22
	0x0397CB30 MOV W2, W31
	0x0397CB34 BL 0x1C5C788
	0x0397CB38 B 0x397CB48
	0x0397CB3C LDRSW X9, [X10]
	0x0397CB40 ADD X8, X8, X9, 0x4, LSL
	0x0397CB44 ADD X0, X8, 0x138
	0x0397CB48 LDP X8, X1, [X0]
	0x0397CB4C MOV X0, X22
	0x0397CB50 BLR X8
	0x0397CB54 CBZ X0, 0x397CEC8
	0x0397CB58 LDR X2, [X25]
	0x0397CB5C ADD X23, X0, 0x10
	0x0397CB60 MOV X0, X23
	0x0397CB64 MOV W1, W31
	0x0397CB68 BL 0x2D1F64C
	0x0397CB6C CBZ X0, 0x397CED0
	0x0397CB70 LDR W8, [X0 + 0x28]
	0x0397CB74 TBNZ X8, 0x1F, 0x397CD04
	0x0397CB78 LDR X2, [X25]
	0x0397CB7C MOVZ W1, 0x1
	0x0397CB80 MOV X0, X23
	0x0397CB84 BL 0x2D1F64C
	0x0397CB88 CBZ X0, 0x397CED8
	0x0397CB8C LDR W8, [X0 + 0x28]
	0x0397CB90 TBNZ X8, 0x1F, 0x397CD04
	0x0397CB94 LDR X2, [X25]
	0x0397CB98 MOVZ W1, 0x2
	0x0397CB9C MOV X0, X23
	0x0397CBA0 BL 0x2D1F64C
	0x0397CBA4 CBZ X0, 0x397CEE0
	0x0397CBA8 LDR W8, [X0 + 0x28]
	0x0397CBAC TBNZ X8, 0x1F, 0x397CD04
	0x0397CBB0 LDR X24, [X21]
	0x0397CBB4 LDR X2, [X25]
	0x0397CBB8 MOV X0, X23
	0x0397CBBC MOV W1, W31
	0x0397CBC0 BL 0x2D1F64C
	0x0397CBC4 CBZ X0, 0x397CEE8
	0x0397CBC8 CBZ X24, 0x397CF20
	0x0397CBCC LDR W10, [X24 + 0x1C]
	0x0397CBD0 LDR W1, [X0 + 0x28]
	0x0397CBD4 LDR X8, [X24 + 0x10]
	0x0397CBD8 LDR X9, [X26]
	0x0397CBDC ADD W10, W10, 0x1
	0x0397CBE0 STR W10, [X24 + 0x1C]
	0x0397CBE4 CBZ X8, 0x397CF10
	0x0397CBE8 LDRSW X10, [X24 + 0x18]
	0x0397CBEC LDR W11, [X8 + 0x18]
	0x0397CBF0 CMP W10, W11
	0x0397CBF4 B.CS 0x397CC0C
	0x0397CBF8 ADD W9, W10, 0x1
	0x0397CBFC ADD X8, X8, X10, 0x2, LSL
	0x0397CC00 STR W9, [X24 + 0x18]
	0x0397CC04 STR W1, [X8 + 0x20]
	0x0397CC08 B 0x397CC20
	0x0397CC0C LDR X8, [X9 + 0x20]
	0x0397CC10 LDR X8, [X8 + 0xC0]
	0x0397CC14 LDR X2, [X8 + 0x70]
	0x0397CC18 MOV X0, X24
	0x0397CC1C BL 0x2FDC70C
	0x0397CC20 LDR X24, [X21]
	0x0397CC24 LDR X2, [X25]
	0x0397CC28 MOVZ W1, 0x1
	0x0397CC2C MOV X0, X23
	0x0397CC30 BL 0x2D1F64C
	0x0397CC34 CBZ X0, 0x397CF00
	0x0397CC38 CBZ X24, 0x397CEF8
	0x0397CC3C LDR W10, [X24 + 0x1C]
	0x0397CC40 LDR W1, [X0 + 0x28]
	0x0397CC44 LDR X8, [X24 + 0x10]
	0x0397CC48 LDR X9, [X26]
	0x0397CC4C ADD W10, W10, 0x1
	0x0397CC50 STR W10, [X24 + 0x1C]
	0x0397CC54 CBZ X8, 0x397CEF0
	0x0397CC58 LDRSW X10, [X24 + 0x18]
	0x0397CC5C LDR W11, [X8 + 0x18]
	0x0397CC60 CMP W10, W11
	0x0397CC64 B.CS 0x397CC7C
	0x0397CC68 ADD W9, W10, 0x1
	0x0397CC6C ADD X8, X8, X10, 0x2, LSL
	0x0397CC70 STR W9, [X24 + 0x18]
	0x0397CC74 STR W1, [X8 + 0x20]
	0x0397CC78 B 0x397CC90
	0x0397CC7C LDR X8, [X9 + 0x20]
	0x0397CC80 LDR X8, [X8 + 0xC0]
	0x0397CC84 LDR X2, [X8 + 0x70]
	0x0397CC88 MOV X0, X24
	0x0397CC8C BL 0x2FDC70C
	0x0397CC90 LDR X24, [X21]
	0x0397CC94 LDR X2, [X25]
	0x0397CC98 MOVZ W1, 0x2
	0x0397CC9C MOV X0, X23
	0x0397CCA0 BL 0x2D1F64C
	0x0397CCA4 CBZ X0, 0x397CF28
	0x0397CCA8 CBZ X24, 0x397CF18
	0x0397CCAC LDR W10, [X24 + 0x1C]
	0x0397CCB0 LDR W1, [X0 + 0x28]
	0x0397CCB4 LDR X8, [X24 + 0x10]
	0x0397CCB8 LDR X9, [X26]
	0x0397CCBC ADD W10, W10, 0x1
	0x0397CCC0 STR W10, [X24 + 0x1C]
	0x0397CCC4 CBZ X8, 0x397CF08
	0x0397CCC8 LDRSW X10, [X24 + 0x18]
	0x0397CCCC LDR W11, [X8 + 0x18]
	0x0397CCD0 CMP W10, W11
	0x0397CCD4 B.CS 0x397CCEC
	0x0397CCD8 ADD W9, W10, 0x1
	0x0397CCDC ADD X8, X8, X10, 0x2, LSL
	0x0397CCE0 STR W9, [X24 + 0x18]
	0x0397CCE4 STR W1, [X8 + 0x20]
	0x0397CCE8 B 0x397CAA0
	0x0397CCEC LDR X8, [X9 + 0x20]
	0x0397CCF0 LDR X8, [X8 + 0xC0]
	0x0397CCF4 LDR X2, [X8 + 0x70]
	0x0397CCF8 MOV X0, X24
	0x0397CCFC BL 0x2FDC70C
	0x0397CD00 B 0x397CAA0
	0x0397CD04 LDR X0, [X27]
	0x0397CD08 MOV X26, X19
	0x0397CD0C LDR W8, [X0 + 0xE0]
	0x0397CD10 CBNZ W8, 0x397CD18
	0x0397CD14 BL 0x1C16DFC
	0x0397CD18 LDR X0, [X20]
	0x0397CD1C MOV X1, X31
	0x0397CD20 BL 0x3906FFC
	0x0397CD24 MOV X24, X31
	0x0397CD28 MOVZ W19, 0x8
	0x0397CD2C B 0x397CD3C
	0x0397CD30 MOV X26, X19
	0x0397CD34 MOV X24, X31
	0x0397CD38 MOVZ W19, 0xD
	0x0397CD3C LDR X20, [X31 + 0x8]
	0x0397CD40 LDR X25, [X31 + 0x18]
	0x0397CD44 CBZ X22, 0x397CDA0
	0x0397CD48 LDR X8, [X22]
	0x0397CD4C LDR X1, [X26]
	0x0397CD50 LDRH W9, [X8 + 0x12E]
	0x0397CD54 CBZ X9, 0x397CD78
	0x0397CD58 LDR X10, [X8 + 0xB0]
	0x0397CD5C ADD X10, X10, 0x8
	0x0397CD60 LDUR X11, [X10 - 0x8]
	0x0397CD64 CMP X11, X1
	0x0397CD68 B.EQ 0x397CD88
	0x0397CD6C SUBS X9, X9, 0x1
	0x0397CD70 ADD X10, X10, 0x10
	0x0397CD74 B.NE 0x397CD60
	0x0397CD78 MOV X0, X22
	0x0397CD7C MOV W2, W31
	0x0397CD80 BL 0x1C5C788
	0x0397CD84 B 0x397CD94
	0x0397CD88 LDRSW X9, [X10]
	0x0397CD8C ADD X8, X8, X9, 0x4, LSL
	0x0397CD90 ADD X0, X8, 0x138
	0x0397CD94 LDP X8, X1, [X0]
	0x0397CD98 MOV X0, X22
	0x0397CD9C BLR X8
	0x0397CDA0 CBNZ X24, 0x397CF48
	0x0397CDA4 CMP W19, 0xD
	0x0397CDA8 B.EQ 0x397CDB0
	0x0397CDAC CBNZ W19, 0x397CFF8
	0x0397CDB0 ADRP X19, 0x7D1000
	0x0397CDB4 LDR X19, [X19 + 0xA88]
	0x0397CDB8 MOV X0, X20
	0x0397CDBC BL 0x3979E98
	0x0397CDC0 LDR X8, [X19]
	0x0397CDC4 MOV W20, W0
	0x0397CDC8 MOVZ W1, 0x3
	0x0397CDCC MOV X0, X8
	0x0397CDD0 BL 0x1C16D6C
	0x0397CDD4 LDR X8, [X21]
	0x0397CDD8 CBZ X8, 0x397D01C
	0x0397CDDC ADRP X19, 0x7A1000
	0x0397CDE0 LDR X19, [X19 + 0xF38]
	0x0397CDE4 MOV X22, X0
	0x0397CDE8 MOV X0, X8
	0x0397CDEC MOV W1, W31
	0x0397CDF0 LDR X2, [X19]
	0x0397CDF4 BL 0x2FDC41C
	0x0397CDF8 CBZ X25, 0x397D01C
	0x0397CDFC ADRP X21, 0x7D4000
	0x0397CE00 LDR X21, [X21 + 0x308]
	0x0397CE04 MOV W1, W0
	0x0397CE08 MOV X0, X25
	0x0397CE0C LDR X2, [X21]
	0x0397CE10 BL 0x30C9360
	0x0397CE14 CBZ X22, 0x397D01C
	0x0397CE18 LDR W8, [X22 + 0x18]
	0x0397CE1C CBZ W8, 0x397CF30
	0x0397CE20 LDR X8, [X31 + 0x10]
	0x0397CE24 STP S0, S1, [X22 + 0x20]
	0x0397CE28 LDR X0, [X8]
	0x0397CE2C CBZ X0, 0x397D01C
	0x0397CE30 LDR X2, [X19]
	0x0397CE34 MOVZ W1, 0x1
	0x0397CE38 BL 0x2FDC41C
	0x0397CE3C LDR X2, [X21]
	0x0397CE40 MOV W1, W0
	0x0397CE44 MOV X0, X25
	0x0397CE48 BL 0x30C9360
	0x0397CE4C LDR W8, [X22 + 0x18]
	0x0397CE50 CMP W8, 0x1
	0x0397CE54 B.LS 0x397CF30
	0x0397CE58 LDR X8, [X31 + 0x10]
	0x0397CE5C STP S0, S1, [X22 + 0x28]
	0x0397CE60 LDR X0, [X8]
	0x0397CE64 CBZ X0, 0x397D01C
	0x0397CE68 LDR X2, [X19]
	0x0397CE6C MOVZ W1, 0x2
	0x0397CE70 BL 0x2FDC41C
	0x0397CE74 LDR X2, [X21]
	0x0397CE78 MOV W1, W0
	0x0397CE7C MOV X0, X25
	0x0397CE80 BL 0x30C9360
	0x0397CE84 LDR W8, [X22 + 0x18]
	0x0397CE88 CMP W8, 0x2
	0x0397CE8C B.LS 0x397CF30
	0x0397CE90 MOV X0, X22
	0x0397CE94 STP S0, S1, [X22 + 0x30]
	0x0397CE98 BL 0x3979E98
	0x0397CE9C LDR X8, [X31 + 0x10]
	0x0397CEA0 CMP W0, W20
	0x0397CEA4 B.EQ 0x397CEC0
	0x0397CEA8 LDR X0, [X8]
	0x0397CEAC CBZ X0, 0x397D01C
	0x0397CEB0 ADRP X8, 0x7D4000
	0x0397CEB4 LDR X8, [X8 + 0x2B8]
	0x0397CEB8 LDR X1, [X8]
	0x0397CEBC BL 0x2FDE29C
	0x0397CEC0 MOVZ W0, 0x1
	0x0397CEC4 B 0x397CFFC
	0x0397CEC8 MOV X26, X19
	0x0397CECC BL 0x1C16F20
	0x0397CED0 MOV X26, X19
	0x0397CED4 BL 0x1C16F20
	0x0397CED8 MOV X26, X19
	0x0397CEDC BL 0x1C16F20
	0x0397CEE0 MOV X26, X19
	0x0397CEE4 BL 0x1C16F20
	0x0397CEE8 MOV X26, X19
	0x0397CEEC BL 0x1C16F20
	0x0397CEF0 MOV X26, X19
	0x0397CEF4 BL 0x1C16F20
	0x0397CEF8 MOV X26, X19
	0x0397CEFC BL 0x1C16F20
	0x0397CF00 MOV X26, X19
	0x0397CF04 BL 0x1C16F20
	0x0397CF08 MOV X26, X19
	0x0397CF0C BL 0x1C16F20
	0x0397CF10 MOV X26, X19
	0x0397CF14 BL 0x1C16F20
	0x0397CF18 MOV X26, X19
	0x0397CF1C BL 0x1C16F20
	0x0397CF20 MOV X26, X19
	0x0397CF24 BL 0x1C16F20
	0x0397CF28 MOV X26, X19
	0x0397CF2C BL 0x1C16F20
	0x0397CF30 BL 0x1C16F28
	0x0397CF34 BL 0x1C171E0
	0x0397CF38 BL 0x1C16F20
	0x0397CF3C BL 0x1C16F20
	0x0397CF40 MOV X26, X19
	0x0397CF44 BL 0x1C16F20
	0x0397CF48 MOV X0, X24
	0x0397CF4C BL 0x1C16F18
	0x0397CF50 B 0x397D0A0
	0x0397CF54 B 0x397CF64
	0x0397CF58 B 0x397D0A4
	0x0397CF5C B 0x397CF64
	0x0397CF60 B 0x397CF64
	0x0397CF64 MOV X23, X0
	0x0397CF68 CMP W1, 0x1
	0x0397CF6C B.NE 0x397D140
	0x0397CF70 MOV X0, X23
	0x0397CF74 BL 0x3EB1AD0
	0x0397CF78 MOV X19, X0
	0x0397CF7C ADRP X0, 0x777000
	0x0397CF80 LDR X0, [X0 + 0x7D0]
	0x0397CF84 BL 0x1C16D08
	0x0397CF88 LDR X8, [X19]
	0x0397CF8C LDR X1, [X8]
	0x0397CF90 BL 0x1C17270
	0x0397CF94 TBZ X0, 0x0, 0x397D020
	0x0397CF98 LDR X19, [X19]
	0x0397CF9C BL 0x3EB1AE0
	0x0397CFA0 CBZ X19, 0x397D01C
	0x0397CFA4 LDR X8, [X19]
	0x0397CFA8 MOV X0, X19
	0x0397CFAC LDP X9, X1, [X8 + 0x168]
	0x0397CFB0 BLR X9
	0x0397CFB4 MOV X19, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA66000
	014 Move X25, 0x7D5000
	015 Move X24, 0x779000
	016 Move X23, 0x77C000
	017 Move W8, [X22+2606]
	018 Move X25, [X25+648]
	019 Move X24, [X24+3632]
	020 Move X23, [X23+2928]
	021 Move W21, W2
	022 Move X19, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {108}
	028 Move X0, 0x7D2000
	029 Move X0, [X0+1592]
	030 Call 0x1C17CF4
	031 Move X0, 0x7D5000
	032 Move X0, [X0+656]
	033 Call 0x1C17CF4
	034 Move X0, 0x7D5000
	035 Move X0, [X0+664]
	036 Call 0x1C17CF4
	037 Move X0, 0x7D5000
	038 Move X0, [X0+672]
	039 Call 0x1C17CF4
	040 Move X0, 0x7D2000
	041 Move X0, [X0+1968]
	042 Call 0x1C17CF4
	043 Move X0, 0x7D5000
	044 Move X0, [X0+680]
	045 Call 0x1C17CF4
	046 Move X0, 0x7D5000
	047 Move X0, [X0+688]
	048 Call 0x1C17CF4
	049 Move X0, 0x778000
	050 Move X0, [X0+3584]
	051 Call 0x1C17CF4
	052 Move X0, 0x7D2000
	053 Move X0, [X0+2432]
	054 Call 0x1C17CF4
	055 Move X0, 0x7D2000
	056 Move X0, [X0+2440]
	057 Call 0x1C17CF4
	058 Move X0, 0x778000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x7D2000
	062 Move X0, [X0+2712]
	063 Call 0x1C17CF4
	064 Move X0, 0x779000
	065 Move X0, [X0+3600]
	066 Call 0x1C17CF4
	067 Move X0, 0x7D5000
	068 Move X0, [X0+696]
	069 Call 0x1C17CF4
	070 Move X0, 0x77C000
	071 Move X0, [X0+2928]
	072 Call 0x1C17CF4
	073 Move X0, 0x7A2000
	074 Move X0, [X0+3896]
	075 Call 0x1C17CF4
	076 Move X0, 0x779000
	077 Move X0, [X0+3632]
	078 Call 0x1C17CF4
	079 Move X0, 0x7D2000
	080 Move X0, [X0+2768]
	081 Call 0x1C17CF4
	082 Move X0, 0x7D5000
	083 Move X0, [X0+704]
	084 Call 0x1C17CF4
	085 Move X0, 0x7D2000
	086 Move X0, [X0+2472]
	087 Call 0x1C17CF4
	088 Move X0, 0x7D2000
	089 Move X0, [X0+2168]
	090 Call 0x1C17CF4
	091 Move X0, 0x7D5000
	092 Move X0, [X0+712]
	093 Call 0x1C17CF4
	094 Move X0, 0x7D5000
	095 Move X0, [X0+720]
	096 Call 0x1C17CF4
	097 Move X0, 0x7D5000
	098 Move X0, [X0+648]
	099 Call 0x1C17CF4
	100 Move X0, 0x7D2000
	101 Move X0, [X0+2696]
	102 Call 0x1C17CF4
	103 Move X0, 0x7D5000
	104 Move X0, [X0+728]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X22+2606], W8
	108 Move X0, [X25]
	109 Call 0x1C17F10
	110 Move X1, X31
	111 Move X22, X0
	112 Call Object..ctor, X0
	113 Move X0, [X24]
	114 Call 0x1C17F10
	115 Move X1, [X23]
	116 Move X23, X0
	117 Call List`1<Int32>..ctor, X0
	118 Move [X19], X23
	119 Compare X22, 0
	120 JumpIfEqual {701}
	121 Move [X22+16], W31
	122 Move TEMP, X21
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {157}
	126 Move X8, 0x7D5000
	127 Move X8, [X8+688]
	128 Move X0, [X8]
	129 Call 0x1C17F10
	130 Move X8, 0x7D5000
	131 Move X8, [X8+712]
	132 Move X1, X22
	133 Move X3, X31
	134 Move X21, X0
	135 Move X2, [X8]
	136 Call Func`2<Vector2, Object>..ctor, X0, X1, X2
	137 Move X8, 0x7D5000
	138 Move X8, [X8+664]
	139 Move X0, X20
	140 Move X1, X21
	141 Move X2, [X8]
	142 Call Enumerable.Select, X0, X1
	143 Move X8, 0x7D5000
	144 Move X8, [X8+672]
	145 Move X1, [X8]
	146 Call Enumerable.ToList, X0
	147 Move X8, 0x7D5000
	148 Move X8, [X8+704]
	149 Move X22, X0
	150 Move X8, [X8]
	151 Move X0, X8
	152 Call 0x1C17F10
	153 Move X1, X22
	154 Move X2, X31
	155 Move X21, X0
	156 Call PointSet..ctor, X0, X1
	157 Move X8, 0x7D5000
	158 Move X8, [X8+680]
	159 Move X0, [X8]
	160 Call 0x1C17F10
	161 Move X8, 0x7D5000
	162 Move X8, [X8+720]
	163 Move X1, X22
	164 Move X3, X31
	165 Move X21, X0
	166 Move X2, [X8]
	167 Call Func`2<Vector2, Object>..ctor, X0, X1, X2
	168 Move X8, 0x7D5000
	169 Move X8, [X8+656]
	170 Move X0, X20
	171 Move X1, X21
	172 Move X2, [X8]
	173 Call Enumerable.Select, X0, X1
	174 Move X8, 0x7D2000
	175 Move X8, [X8+2472]
	176 Move X22, X0
	177 Move X8, [X8]
	178 Move X0, X8
	179 Call 0x1C17F10
	180 Move X1, X22
	181 Move X2, X31
	182 Move X21, X0
	183 Call Polygon..ctor, X0, X1
	184 Call Triangulation.get_triangulationContext
	185 Compare X0, 0
	186 JumpIfEqual {640}
	187 Move X8, [X0]
	188 Move X9, [X8+424]
	189 Move X1, [X8+432]
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Call Triangulation.get_triangulationContext
	192 Compare X0, 0
	193 JumpIfEqual {641}
	194 Move X8, [X0]
	195 Move X9, [X8+392]
	196 Move X2, [X8+400]
	197 Move X1, X21
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Call Triangulation.get_triangulationContext
	200 Compare X0, 0
	201 JumpIfEqual {213}
	202 Move X9, 0x7D2000
	203 Move X9, [X9+1592]
	204 Move X8, [X0]
	205 Move X1, [X9]
	206 Move W10, [X8+304]
	207 Move W9, [X1+304]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X8, [X8+200]
	210 Add X8, X8, X9
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X1, X31
	214 Call DTSweep.Triangulate, X0
	215 Compare X21, 0
	216 JumpIfEqual {701}
	217 Move X10, 0x7D2000
	218 Move X8, [X21]
	219 Move X10, [X10+2168]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Move X1, [X10]
	222 Compare X9, 0
	223 JumpIfEqual {230}
	224 Move X10, [X8+176]
	225 Add X10, X10, 8
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Subtract X9, X9, 1
	229 Add X10, X10, 16
	230 Move W2, 2
	231 Move X0, X21
	232 Call 0x1C5D788
	233 Move W9, [X10]
	234 Add W9, W9, 2
	235 Add X8, X8, W9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X21
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X0, 0
	242 JumpIfEqual {701}
	243 Move X10, 0x7D2000
	244 Move X8, [X0]
	245 Move X10, [X10+2432]
	246 Move X21, X0
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X1, [X10]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X21
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move X21, X0
	268 Compare X0, 0
	269 JumpIfEqual {642}
	270 Move X26, 0x7D2000
	271 Move X25, 0x7D5000
	272 Move X27, 0x778000
	273 Move X28, 0x7D2000
	274 Move X29, 0x7D2000
	275 Move X24, 0x779000
	276 Move X26, [X26+2768]
	277 Move X25, [X25+728]
	278 Move X27, [X27+3608]
	279 Move X28, [X28+2440]
	280 Move X29, [X29+1968]
	281 Move X24, [X24+3600]
	282 Move X8, [X21]
	283 Move X1, [X27]
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move X0, X21
	294 Move W2, W31
	295 Call 0x1C5D788
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Add X8, X8, X9
	298 Add X0, X8, 312
	299 Move X8, [X0]
	300 Move X1, [X0+8]
	301 Move X0, X21
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {463}
	307 Move X8, [X21]
	308 Move X1, [X28]
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Compare X9, 0
	311 JumpIfEqual {318}
	312 Move X10, [X8+176]
	313 Add X10, X10, 8
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Subtract X9, X9, 1
	317 Add X10, X10, 16
	318 Move X0, X21
	319 Move W2, W31
	320 Call 0x1C5D788
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Add X8, X8, X9
	323 Add X0, X8, 312
	324 Move X8, [X0]
	325 Move X1, [X0+8]
	326 Move X0, X21
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Compare X0, 0
	329 JumpIfEqual {625}
	330 Move X2, [X29]
	331 Add X22, X0, 16
	332 Move X0, X22
	333 Move W1, W31
	334 Call 0x2D2064C, X0, X1
	335 Compare X0, 0
	336 JumpIfEqual {626}
	337 Move W8, [X0+40]
	338 Move TEMP, X8
	339 And TEMP, TEMP, -2147483648
	340 Compare TEMP, -2147483648
	341 JumpIfEqual {451}
	342 Move X2, [X29]
	343 Move W1, 1
	344 Move X0, X22
	345 Call 0x2D2064C, X0, X1
	346 Compare X0, 0
	347 JumpIfEqual {627}
	348 Move W8, [X0+40]
	349 Move TEMP, X8
	350 And TEMP, TEMP, -2147483648
	351 Compare TEMP, -2147483648
	352 JumpIfEqual {451}
	353 Move X2, [X29]
	354 Move W1, 2
	355 Move X0, X22
	356 Call 0x2D2064C, X0, X1
	357 Compare X0, 0
	358 JumpIfEqual {628}
	359 Move W8, [X0+40]
	360 Move TEMP, X8
	361 And TEMP, TEMP, -2147483648
	362 Compare TEMP, -2147483648
	363 JumpIfEqual {451}
	364 Move X23, [X19]
	365 Move X2, [X29]
	366 Move X0, X22
	367 Move W1, W31
	368 Call 0x2D2064C, X0, X1
	369 Compare X0, 0
	370 JumpIfEqual {629}
	371 Compare X23, 0
	372 JumpIfEqual {636}
	373 Move W10, [X23+28]
	374 Move W1, [X0+40]
	375 Move X8, [X23+16]
	376 Move X9, [X24]
	377 Add W10, W10, 1
	378 Move [X23+28], W10
	379 Compare X8, 0
	380 JumpIfEqual {634}
	381 NotImplemented "Instruction LDRSW not yet implemented."
	382 Move W11, [X8+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add W9, W10, 1
	385 Add X8, X8, X10
	386 Move [X23+24], W9
	387 Move [X8+32], W1
	388 Move X8, [X9+32]
	389 Move X8, [X8+192]
	390 Move X2, [X8+112]
	391 Move X0, X23
	392 Call List`1<Int32>.AddWithResize, X0, X1
	393 Move X23, [X19]
	394 Move X2, [X29]
	395 Move W1, 1
	396 Move X0, X22
	397 Call 0x2D2064C, X0, X1
	398 Compare X0, 0
	399 JumpIfEqual {632}
	400 Compare X23, 0
	401 JumpIfEqual {631}
	402 Move W10, [X23+28]
	403 Move W1, [X0+40]
	404 Move X8, [X23+16]
	405 Move X9, [X24]
	406 Add W10, W10, 1
	407 Move [X23+28], W10
	408 Compare X8, 0
	409 JumpIfEqual {630}
	410 NotImplemented "Instruction LDRSW not yet implemented."
	411 Move W11, [X8+24]
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Add W9, W10, 1
	414 Add X8, X8, X10
	415 Move [X23+24], W9
	416 Move [X8+32], W1
	417 Move X8, [X9+32]
	418 Move X8, [X8+192]
	419 Move X2, [X8+112]
	420 Move X0, X23
	421 Call List`1<Int32>.AddWithResize, X0, X1
	422 Move X23, [X19]
	423 Move X2, [X29]
	424 Move W1, 2
	425 Move X0, X22
	426 Call 0x2D2064C, X0, X1
	427 Compare X0, 0
	428 JumpIfEqual {637}
	429 Compare X23, 0
	430 JumpIfEqual {635}
	431 Move W10, [X23+28]
	432 Move W1, [X0+40]
	433 Move X8, [X23+16]
	434 Move X9, [X24]
	435 Add W10, W10, 1
	436 Move [X23+28], W10
	437 Compare X8, 0
	438 JumpIfEqual {633}
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Move W11, [X8+24]
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Add W9, W10, 1
	443 Add X8, X8, X10
	444 Move [X23+24], W9
	445 Move [X8+32], W1
	446 Move X8, [X9+32]
	447 Move X8, [X8+192]
	448 Move X2, [X8+112]
	449 Move X0, X23
	450 Call List`1<Int32>.AddWithResize, X0, X1
	451 Move X0, [X26]
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {456}
	455 Call 0x1C17DFC
	456 Move X0, [X25]
	457 Move X1, X31
	458 Call Log.Info, X0
	459 Move X22, X31
	460 Move W23, 6
	461 Compare X21, 0
	462 JumpIfNotEqual {467}
	463 Move X22, X31
	464 Move W23, 11
	465 Compare X21, 0
	466 JumpIfEqual {490}
	467 Move X8, [X21]
	468 Move X10, 0x778000
	469 NotImplemented "Instruction LDRH not yet implemented."
	470 Move X10, [X10+3584]
	471 Move X1, [X10]
	472 Compare X9, 0
	473 JumpIfEqual {480}
	474 Move X10, [X8+176]
	475 Add X10, X10, 8
	476 NotImplemented "Instruction LDUR not yet implemented."
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Subtract X9, X9, 1
	479 Add X10, X10, 16
	480 Move X0, X21
	481 Move W2, W31
	482 Call 0x1C5D788
	483 NotImplemented "Instruction LDRSW not yet implemented."
	484 Add X8, X8, X9
	485 Add X0, X8, 312
	486 Move X8, [X0]
	487 Move X1, [X0+8]
	488 Move X0, X21
	489 NotImplemented "Instruction BLR not yet implemented."
	490 Compare X22, 0
	491 JumpIfNotEqual {643}
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Compare W23, 0
	494 JumpIfNotEqual {687}
	495 Move X21, 0x7D2000
	496 Move X21, [X21+2696]
	497 Move X0, X20
	498 Call SurfaceTopology.GetWindingOrder, X0
	499 Move X8, [X21]
	500 Move W21, W0
	501 Move W1, 3
	502 Move X0, X8
	503 Call 0x1C17D6C
	504 Move X8, [X19]
	505 Compare X8, 0
	506 JumpIfEqual {701}
	507 Move X24, 0x7A2000
	508 Move X24, [X24+3896]
	509 Move X22, X0
	510 Move X0, X8
	511 Move W1, W31
	512 Move X2, [X24]
	513 Call List`1<Int32>.get_Item, X0, X1
	514 Compare X20, 0
	515 JumpIfEqual {701}
	516 Move X25, 0x7D2000
	517 Move X8, [X20]
	518 Move X25, [X25+2712]
	519 Move W23, W0
	520 NotImplemented "Instruction LDRH not yet implemented."
	521 Move X1, [X25]
	522 Compare X9, 0
	523 JumpIfEqual {530}
	524 Move X10, [X8+176]
	525 Add X10, X10, 8
	526 NotImplemented "Instruction LDUR not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Subtract X9, X9, 1
	529 Add X10, X10, 16
	530 Move X0, X20
	531 Move W2, W31
	532 Call 0x1C5D788
	533 NotImplemented "Instruction LDRSW not yet implemented."
	534 Add X8, X8, X9
	535 Add X0, X8, 312
	536 Move X8, [X0]
	537 Move X2, [X0+8]
	538 Move X0, X20
	539 Move W1, W23
	540 NotImplemented "Instruction BLR not yet implemented."
	541 Compare X22, 0
	542 JumpIfEqual {701}
	543 Move W8, [X22+24]
	544 Compare W8, 0
	545 JumpIfEqual {638}
	546 Move [X22+32], S0
	547 Move [X22+40], S1
	548 Move X0, [X19]
	549 Compare X0, 0
	550 JumpIfEqual {701}
	551 Move X2, [X24]
	552 Move W1, 1
	553 Call List`1<Int32>.get_Item, X0, X1
	554 Move X8, [X20]
	555 Move X1, [X25]
	556 Move W23, W0
	557 NotImplemented "Instruction LDRH not yet implemented."
	558 Compare X9, 0
	559 JumpIfEqual {566}
	560 Move X10, [X8+176]
	561 Add X10, X10, 8
	562 NotImplemented "Instruction LDUR not yet implemented."
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Subtract X9, X9, 1
	565 Add X10, X10, 16
	566 Move X0, X20
	567 Move W2, W31
	568 Call 0x1C5D788
	569 NotImplemented "Instruction LDRSW not yet implemented."
	570 Add X8, X8, X9
	571 Add X0, X8, 312
	572 Move X8, [X0]
	573 Move X2, [X0+8]
	574 Move X0, X20
	575 Move W1, W23
	576 NotImplemented "Instruction BLR not yet implemented."
	577 Move W8, [X22+24]
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move [X22+40], S0
	580 Move [X22+48], S1
	581 Move X0, [X19]
	582 Compare X0, 0
	583 JumpIfEqual {701}
	584 Move X2, [X24]
	585 Move W1, 2
	586 Call List`1<Int32>.get_Item, X0, X1
	587 Move X8, [X20]
	588 Move X1, [X25]
	589 Move W23, W0
	590 NotImplemented "Instruction LDRH not yet implemented."
	591 Compare X9, 0
	592 JumpIfEqual {599}
	593 Move X10, [X8+176]
	594 Add X10, X10, 8
	595 NotImplemented "Instruction LDUR not yet implemented."
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Subtract X9, X9, 1
	598 Add X10, X10, 16
	599 Move X0, X20
	600 Move W2, W31
	601 Call 0x1C5D788
	602 NotImplemented "Instruction LDRSW not yet implemented."
	603 Add X8, X8, X9
	604 Add X0, X8, 312
	605 Move X8, [X0]
	606 Move X2, [X0+8]
	607 Move X0, X20
	608 Move W1, W23
	609 NotImplemented "Instruction BLR not yet implemented."
	610 Move W8, [X22+24]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X0, X22
	613 Move [X22+48], S0
	614 Move [X22+56], S1
	615 Call SurfaceTopology.GetWindingOrder, X0
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Move X0, [X19]
	618 Compare X0, 0
	619 JumpIfEqual {701}
	620 Move X8, 0x7D5000
	621 Move X8, [X8+696]
	622 Move X1, [X8]
	623 Call List`1<Int32>.Reverse, X0
	624 Move W0, 1
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Call 0x1C17F20
	628 Call 0x1C17F20
	629 Call 0x1C17F20
	630 Call 0x1C17F20
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Call 0x1C17F20
	634 Call 0x1C17F20
	635 Call 0x1C17F20
	636 Call 0x1C17F20
	637 Call 0x1C17F20
	638 Call 0x1C17F28
	639 Call 0x1C181E0
	640 Call 0x1C17F20
	641 Call 0x1C17F20
	642 Call 0x1C17F20
	643 Move X0, X22
	644 Call 0x1C17F18
	645 Move X19, X0
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move X0, X19
	648 Call 0x3EB2AD0
	649 Move X19, X0
	650 Move X0, 0x778000
	651 Move X0, [X0+2000]
	652 Call 0x1C17D08
	653 Move X8, [X19]
	654 Move X1, [X8]
	655 Call 0x1C18270
	656 Move TEMP, X0
	657 And TEMP, TEMP, 1
	658 Compare TEMP, 1
	659 JumpIfNotEqual {702}
	660 Move X19, [X19]
	661 Call 0x3EB2AE0
	662 Compare X19, 0
	663 JumpIfEqual {701}
	664 Move X8, [X19]
	665 Move X0, X19
	666 Move X9, [X8+360]
	667 Move X1, [X8+368]
	668 NotImplemented "Instruction BLR not yet implemented."
	669 Move X19, X0
	670 Move X0, 0x7D5000
	671 Move X0, [X0+736]
	672 Call 0x1C17D08
	673 Move X1, X19
	674 Move X2, X31
	675 Call String.Concat, X0, X1
	676 Move X19, X0
	677 Move X0, 0x7D2000
	678 Move X0, [X0+2768]
	679 Call 0x1C17D08
	680 Move W8, [X0+224]
	681 Compare W8, 0
	682 JumpIfNotEqual {684}
	683 Call 0x1C17DFC
	684 Move X0, X19
	685 Move X1, X31
	686 Call Log.Info, X0
	687 Move W0, W31
	688 Move X20, [X31+80]
	689 Move X19, [X31+88]
	690 Move X22, [X31+64]
	691 Move X21, [X31+72]
	692 Move X24, [X31+48]
	693 Move X23, [X31+56]
	694 Move X26, [X31+32]
	695 Move X25, [X31+40]
	696 Move X28, [X31+16]
	697 Move X27, [X31+24]
	698 Move X29, [X31+96]
	699 Move X30, [X31+104]
	700 Return X0
	701 Call 0x1C17F20
	702 Move W0, 8
	703 Call 0x3EB2AF0
	704 Move X8, [X19]
	705 Move [X0], X8
	706 Move X1, 0x539000
	707 Add X1, X1, 3672
	708 Move X2, X31
	709 Call 0x3EB2B00
	710 Move X19, X0
	711 Call 0x3EB2AE0
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Call 0x3EB2AD0
	714 Move X22, [X0]
	715 Call 0x3EB2AE0
	716 Move W23, W31
	717 Compare X21, 0
	718 JumpIfNotEqual {467}
	719 Move X19, X0
	720 Move X22, X31
	721 Move X19, X0
	722 Compare X21, 0
	723 JumpIfEqual {747}
	724 Move X8, [X21]
	725 Move X10, 0x778000
	726 NotImplemented "Instruction LDRH not yet implemented."
	727 Move X10, [X10+3584]
	728 Move X1, [X10]
	729 Compare X9, 0
	730 JumpIfEqual {737}
	731 Move X10, [X8+176]
	732 Add X10, X10, 8
	733 NotImplemented "Instruction LDUR not yet implemented."
	734 NotImplemented "Instruction CMP not yet implemented."
	735 Subtract X9, X9, 1
	736 Add X10, X10, 16
	737 Move X0, X21
	738 Move W2, W31
	739 Call 0x1C5D788
	740 NotImplemented "Instruction LDRSW not yet implemented."
	741 Add X8, X8, X9
	742 Add X0, X8, 312
	743 Move X8, [X0]
	744 Move X1, [X0+8]
	745 Move X0, X21
	746 NotImplemented "Instruction BLR not yet implemented."
	747 Compare X22, 0
	748 JumpIfNotEqual {751}
	749 Move X0, X19
	750 Call 0x1D2D690
	751 Move X0, X22
	752 Call 0x1C17F18
	753 Call 0x1991590

Method: System.Boolean Triangulate(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Collections.Generic.IList`1<UnityEngine.Vector2>> holes, out System.Collections.Generic.List`1<System.Int32> indexes)

Disassembly:
	0x0397D548 TBZ X0, 0x0, 0x397D5B0
	0x0397D54C LDR X8, [X21 + 0x18]
	0x0397D550 CBZ X8, 0x397D5CC
	0x0397D554 LDRB W8, [X8 + 0x4C]
	0x0397D558 CBNZ W8, 0x397D5A8
	0x0397D55C LDR X0, [X24]
	0x0397D560 MOVZ W1, 0x1
	0x0397D564 BL 0x1C16D6C
	0x0397D568 CBZ X0, 0x397D5CC
	0x0397D56C LDR W8, [X0 + 0x18]
	0x0397D570 MOV X20, X0
	0x0397D574 CBZ W8, 0x397D5D0
	0x0397D578 LDR X8, [X21 + 0x18]
	0x0397D57C STR X8, [X20 + 0x20]
	0x0397D580 ADRP X8, 0x7D1000
	0x0397D584 LDR X8, [X8 + 0x590]
	0x0397D588 LDR X0, [X8]
	0x0397D58C LDR W8, [X0 + 0xE0]
	0x0397D590 CBNZ W8, 0x397D598
	0x0397D594 BL 0x1C16DFC
	0x0397D598 MOV X0, X19
	0x0397D59C MOV X1, X20
	0x0397D5A0 MOV X2, X31
	0x0397D5A4 BL 0x393AE2C
	0x0397D5A8 MOVZ W0, 0x1
	0x0397D5AC B 0x397D5B4
	0x0397D5B0 MOV W0, W31
	0x0397D5B4 LDP X20, X19, [X31 + 0x40]
	0x0397D5B8 LDP X22, X21, [X31 + 0x30]
	0x0397D5BC LDP X24, X23, [X31 + 0x20]
	0x0397D5C0 LDP X26, X25, [X31 + 0x10]
	0x0397D5C4 LDR X30, [X31], #0x50
	0x0397D5C8 RET
	0x0397D5CC BL 0x1C16F20
	0x0397D5D0 BL 0x1C16F28
	0x0397D5D4 MOV X1, X31
	0x0397D5D8 B 0x33BDD8C
	0x0397D5DC SUB X31, X31, 0x130
	0x0397D5E0 STP D15, D14, [X31 + 0x90]
	0x0397D5E4 STP D13, D12, [X31 + 0xA0]
	0x0397D5E8 STP D11, D10, [X31 + 0xB0]
	0x0397D5EC STP D9, D8, [X31 + 0xC0]
	0x0397D5F0 STP X29, X30, [X31 + 0xD0]
	0x0397D5F4 STP X28, X27, [X31 + 0xE0]
	0x0397D5F8 STP X26, X25, [X31 + 0xF0]
	0x0397D5FC STP X24, X23, [X31 + 0x100]
	0x0397D600 STP X22, X21, [X31 + 0x110]
	0x0397D604 STP X20, X19, [X31 + 0x120]
	0x0397D608 ADRP X19, 0xA64000
	0x0397D60C LDRB W8, [X19 + 0xA35]
	0x0397D610 MOV W22, W4
	0x0397D614 MOV X28, X3
	0x0397D618 MOV X27, X2
	0x0397D61C MOV X24, X1
	0x0397D620 MOV X23, X0
	0x0397D624 TBNZ X8, 0x0, 0x397D63C
	0x0397D628 ADRP X0, 0x777000
	0x0397D62C LDR X0, [X0 + 0xE58]
	0x0397D630 BL 0x1C16CF4
	0x0397D634 MOVZ W8, 0x1
	0x0397D638 STRB W8, [X19 + 0xA35]
	0x0397D63C MOV X0, X23
	0x0397D640 MOV W1, W22
	0x0397D644 BL 0x397E034
	0x0397D648 CBZ X23, 0x397E030
	0x0397D64C ADRP X20, 0x777000
	0x0397D650 LDR X20, [X20 + 0xE58]
	0x0397D654 MOV X21, X0
	0x0397D658 LDR X19, [X23 + 0x30]
	0x0397D65C MOVZ W1, 0x2
	0x0397D660 LDR X0, [X20]
	0x0397D664 BL 0x1C16D6C
	0x0397D668 CBZ X0, 0x397E030
	0x0397D66C LDR W8, [X0 + 0x18]
	0x0397D670 MOV X25, X0
	0x0397D674 CBZ W8, 0x397E02C
	0x0397D678 CMP W8, 0x1
	0x0397D67C STR W27, [X25 + 0x20]
	0x0397D680 B.EQ 0x397E02C
	0x0397D684 MOVN W8, 0x0
	0x0397D688 STR W8, [X25 + 0x24]
	0x0397D68C LDR X0, [X20]
	0x0397D690 MOVZ W1, 0x2
	0x0397D694 BL 0x1C16D6C
	0x0397D698 CBZ X0, 0x397E030
	0x0397D69C LDR W8, [X0 + 0x18]
	0x0397D6A0 MOV X20, X0
	0x0397D6A4 CBZ W8, 0x397E02C
	0x0397D6A8 UBFM X9, X27, 0x20, 0x3F
	0x0397D6AC CMP W8, 0x1
	0x0397D6B0 STR W9, [X20 + 0x20]
	0x0397D6B4 B.EQ 0x397E02C
	0x0397D6B8 MOVN W8, 0x0
	0x0397D6BC MOV X0, X23
	0x0397D6C0 MOV W1, W27
	0x0397D6C4 MOV X2, X31
	0x0397D6C8 STR W8, [X20 + 0x24]
	0x0397D6CC BL 0x391B5D8
	0x0397D6D0 MOV W26, W0
	0x0397D6D4 TBNZ X0, 0x1F, 0x397DFF4
	0x0397D6D8 CBZ X19, 0x397E030
	0x0397D6DC LDR W8, [X19 + 0x18]
	0x0397D6E0 CMP W26, W8
	0x0397D6E4 B.CS 0x397E02C
	0x0397D6E8 ADD X8, X19, W26, 0x3, UXTW
	0x0397D6EC LDR X0, [X8 + 0x20]
	0x0397D6F0 CBZ X0, 0x397E030
	0x0397D6F4 MOV W1, W28
	0x0397D6F8 MOV X2, X31
	0x0397D6FC UBFM X19, X28, 0x20, 0x3F
	0x0397D700 BL 0x3934B34
	0x0397D704 LDR W8, [X25 + 0x18]
	0x0397D708 CMP W8, 0x1
	0x0397D70C TBZ X0, 0x0, 0x397D720
	0x0397D710 B.LS 0x397E02C
	0x0397D714 STR W28, [X25 + 0x24]
	0x0397D718 LDR W8, [X20 + 0x18]
	0x0397D71C B 0x397D730
	0x0397D720 B.LS 0x397E02C
	0x0397D724 STR W19, [X25 + 0x24]
	0x0397D728 LDR W8, [X20 + 0x18]
	0x0397D72C MOV W19, W28
	0x0397D730 CMP W8, 0x1
	0x0397D734 B.LS 0x397E02C
	0x0397D738 STR W19, [X20 + 0x24]
	0x0397D73C CBZ X21, 0x397E030
	0x0397D740 LDR W8, [X21 + 0x18]
	0x0397D744 CMP W27, W8
	0x0397D748 B.CS 0x397E02C
	0x0397D74C SXTW X9, W27
	0x0397D750 ADD X29, X21, X9, 0x3, LSL
	0x0397D754 LDR V8, [X29 + 0x20]!
	0x0397D758 SBFM X9, X27, 0x20, 0x3F
	0x0397D75C CMP W9, W8
	0x0397D760 B.CS 0x397E02C
	0x0397D764 STR X9, [X31 + 0x80]
	0x0397D768 ADD X9, X21, X9, 0x3, LSL
	0x0397D76C LDR V9, [X29 + 0x4]
	0x0397D770 LDR V10, [X9 + 0x20]!
	0x0397D774 ADRP X19, 0xA64000
	0x0397D778 LDRB W8, [X19 + 0x810]
	0x0397D77C LDR V11, [X9 + 0x4]
	0x0397D780 STR X9, [X31 + 0x70]
	0x0397D784 CBNZ W8, 0x397D79C
	0x0397D788 ADRP X0, 0x776000
	0x0397D78C LDR X0, [X0 + 0x5A8]
	0x0397D790 BL 0x1C16CF4
	0x0397D794 MOVZ W8, 0x1
	0x0397D798 STRB W8, [X19 + 0x810]
	0x0397D79C ADRP X8, 0x776000
	0x0397D7A0 LDR X8, [X8 + 0x5A8]
	0x0397D7A4 LDR X0, [X8]
	0x0397D7A8 LDR W8, [X0 + 0xE0]
	0x0397D7AC CBNZ W8, 0x397D7B4
	0x0397D7B0 BL 0x1C16DFC
	0x0397D7B4 LDR W8, [X21 + 0x18]
	0x0397D7B8 CMP W28, W8
	0x0397D7BC B.CS 0x397E02C
	0x0397D7C0 SXTW X9, W28
	0x0397D7C4 ADD X9, X21, X9, 0x3, LSL
	0x0397D7C8 LDR V12, [X9 + 0x20]!
	0x0397D7CC SBFM X10, X28, 0x20, 0x3F
	0x0397D7D0 CMP W10, W8
	0x0397D7D4 B.CS 0x397E02C
	0x0397D7D8 MOV X8, X10
	0x0397D7DC STR X10, [X31 + 0x38]
	0x0397D7E0 ADD X10, X21, X10, 0x3, LSL
	0x0397D7E4 LDR V13, [X9 + 0x4]
	0x0397D7E8 LDR V14, [X10 + 0x20]!
	0x0397D7EC LDRB W8, [X19 + 0x810]
	0x0397D7F0 STR X9, [X31 + 0x40]
	0x0397D7F4 LDR V15, [X10 + 0x4]
	0x0397D7F8 STR X10, [X31 + 0x28]
	0x0397D7FC CBNZ W8, 0x397D814
	0x0397D800 ADRP X0, 0x776000
	0x0397D804 LDR X0, [X0 + 0x5A8]
	0x0397D808 BL 0x1C16CF4
	0x0397D80C MOVZ W8, 0x1
	0x0397D810 STRB W8, [X19 + 0x810]
	0x0397D814 ADRP X8, 0x776000
	0x0397D818 LDR X8, [X8 + 0x5A8]
	0x0397D81C LDR X0, [X8]
	0x0397D820 LDR W8, [X0 + 0xE0]
	0x0397D824 CBNZ W8, 0x397D82C
	0x0397D828 BL 0x1C16DFC
	0x0397D82C STP X20, X25, [X31 + 0x50]
	0x0397D830 CBZ X24, 0x397E030
	0x0397D834 MOV X0, X24
	0x0397D838 MOV X1, X31
	0x0397D83C STP X23, X29, [X31 + 0x18]
	0x0397D840 STR X28, [X31 + 0x60]
	0x0397D844 STR W26, [X31 + 0x14]
	0x0397D848 STR W22, [X31 + 0x34]
	0x0397D84C STR X24, [X31 + 0x48]
	0x0397D850 BL 0x38FF530
	0x0397D854 CBZ X0, 0x397E030
	0x0397D858 LDR W8, [X0 + 0x18]
	0x0397D85C MOV X28, X0
	0x0397D860 CMP W8, 0x1
	0x0397D864 B.LT 0x397D964
	0x0397D868 FSUB S0, S8, S10
	0x0397D86C FSUB S1, S9, S11
	0x0397D870 FSUB S2, S12, S14
	0x0397D874 FSUB S3, S13, S15
	0x0397D878 ADRP X29, 0x77E000
	0x0397D87C LDR X29, [X29 + 0xF08]
	0x0397D880 FMUL S0, S0, S0
	0x0397D884 FMUL S1, S1, S1
	0x0397D888 FMUL S2, S2, S2
	0x0397D88C FMUL S3, S3, S3
	0x0397D890 FADD S0, S0, S1
	0x0397D894 FADD S1, S2, S3
	0x0397D898 FSQRT S0, S0
	0x0397D89C FSQRT S1, S1
	0x0397D8A0 MOV W24, W31
	0x0397D8A4 ADRP X19, 0xA5C000
	0x0397D8A8 MOVZ W23, 0x1
	0x0397D8AC FDIV S12, S0, S1
	0x0397D8B0 ADRP X25, 0xA64000
	0x0397D8B4 CMP W24, W8
	0x0397D8B8 B.CS 0x397E02C
	0x0397D8BC ADD X8, X28, W24, 0x2, SXTW
	0x0397D8C0 LDRSW X26, [X8 + 0x20]
	0x0397D8C4 LDR W8, [X21 + 0x18]
	0x0397D8C8 CMP W26, W8
	0x0397D8CC B.CS 0x397E02C
	0x0397D8D0 ADD X20, X21, X26, 0x3, LSL
	0x0397D8D4 LDR V8, [X20 + 0x20]!
	0x0397D8D8 MOV X22, X20
	0x0397D8DC LDR V9, [X22 + 0x4]!
	0x0397D8E0 LDRB W8, [X19 + 0x78F]
	0x0397D8E4 CBNZ W8, 0x397D8F4
	0x0397D8E8 MOV X0, X29
	0x0397D8EC BL 0x1C16CF4
	0x0397D8F0 STRB W23, [X19 + 0x78F]
	0x0397D8F4 LDR X8, [X29]
	0x0397D8F8 LDRB W9, [X25 + 0xA48]
	0x0397D8FC LDR X8, [X8 + 0xB8]
	0x0397D900 LDP S11, S10, [X8]
	0x0397D904 CBNZ W9, 0x397D91C
	0x0397D908 MOV X0, X29
	0x0397D90C BL 0x1C16CF4
	0x0397D910 LDR X8, [X29]
	0x0397D914 STRB W23, [X25 + 0xA48]
	0x0397D918 LDR X8, [X8 + 0xB8]
	0x0397D91C LDP S0, S1, [X8 + 0x8]
	0x0397D920 MOV V2.16B, V11.16B
	0x0397D924 MOV V3.16B, V10.16B
	0x0397D928 MOV X0, X31
	0x0397D92C FMUL S4, S12, S0
	0x0397D930 FMUL S5, S12, S1
	0x0397D934 MOV V0.16B, V8.16B
	0x0397D938 MOV V1.16B, V9.16B
	0x0397D93C BL 0x3908190
	0x0397D940 LDR W8, [X21 + 0x18]
	0x0397D944 CMP W26, W8
	0x0397D948 B.CS 0x397E02C
	0x0397D94C STR S0, [X20]
	0x0397D950 STR S1, [X22]
	0x0397D954 LDR W8, [X28 + 0x18]
	0x0397D958 ADD W24, W24, 0x1
	0x0397D95C CMP W24, W8
	0x0397D960 B.LT 0x397D8B4
	0x0397D964 LDR W8, [X21 + 0x18]
	0x0397D968 CMP W27, W8
	0x0397D96C B.CS 0x397E02C
	0x0397D970 LDR X9, [X31 + 0x80]
	0x0397D974 LDP X29, X28, [X31 + 0x50]
	0x0397D978 CMP W9, W8
	0x0397D97C B.CS 0x397E02C
	0x0397D980 LDR X9, [X31 + 0x60]
	0x0397D984 LDR X27, [X31 + 0x48]
	0x0397D988 CMP W9, W8
	0x0397D98C B.CS 0x397E02C
	0x0397D990 LDR X9, [X31 + 0x38]
	0x0397D994 LDR W25, [X31 + 0x34]
	0x0397D998 CMP W9, W8
	0x0397D99C LDR X9, [X31 + 0x40]
	0x0397D9A0 B.CS 0x397E02C
	0x0397D9A4 LDR X8, [X31 + 0x20]
	0x0397D9A8 LDR V8, [X9]
	0x0397D9AC MOV X0, X27
	0x0397D9B0 MOV X1, X31
	0x0397D9B4 LDR V10, [X8]
	0x0397D9B8 LDR X8, [X31 + 0x70]
	0x0397D9BC LDR V11, [X8]
	0x0397D9C0 LDR X8, [X31 + 0x28]
	0x0397D9C4 LDR V9, [X8]
	0x0397D9C8 BL 0x38FF530
	0x0397D9CC CBZ X0, 0x397E030
	0x0397D9D0 LDR W9, [X0 + 0x18]
	0x0397D9D4 FADD V0.2S, V10.2S, V11.2S
	0x0397D9D8 MOVI V1.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x0397D9E0 CMP W9, 0x1
	0x0397D9E4 STR V0, [X31 + 0x8]
	0x0397D9E8 B.LT 0x397DA40
	0x0397D9EC FADD V0.2S, V8.2S, V9.2S
	0x0397D9F0 MOVI V1.2S, 0xBF, 0x18
	0x00000000 INVALID
	0x0397D9F8 LDR V1, [X31 + 0x8]
	0x0397D9FC MOV W8, W31
	0x0397DA00 FADD V0.2S, V1.2S, V0.2S
	0x0397DA04 CMP W8, W9
	0x0397DA08 B.CS 0x397E02C
	0x0397DA0C ADD X9, X0, W8, 0x2, SXTW
	0x0397DA10 LDRSW X9, [X9 + 0x20]
	0x0397DA14 LDR W10, [X21 + 0x18]
	0x0397DA18 CMP W9, W10
	0x0397DA1C B.CS 0x397E02C
	0x0397DA20 ADD X9, X21, X9, 0x3, LSL
	0x0397DA24 LDR V1, [X9 + 0x20]
	0x0397DA28 ADD W8, W8, 0x1
	0x0397DA2C FADD V1.2S, V0.2S, V1.2S
	0x0397DA30 STR D1, [X9 + 0x20]
	0x0397DA34 LDR W9, [X0 + 0x18]
	0x0397DA38 CMP W8, W9
	0x0397DA3C B.LT 0x397DA04
	0x0397DA40 LDR W11, [X29 + 0x18]
	0x0397DA44 CBZ W11, 0x397E02C
	0x0397DA48 LDRSW X8, [X29 + 0x20]
	0x0397DA4C LDR W9, [X21 + 0x18]
	0x0397DA50 CMP W8, W9
	0x0397DA54 B.CS 0x397E02C
	0x0397DA58 LDR W12, [X28 + 0x18]
	0x0397DA5C CBZ W12, 0x397E02C
	0x0397DA60 LDRSW X10, [X28 + 0x20]
	0x0397DA64 CMP W10, W9
	0x0397DA68 B.CS 0x397E02C
	0x0397DA6C CMP W11, 0x1
	0x0397DA70 B.LS 0x397E02C
	0x0397DA74 LDRSW X11, [X29 + 0x24]
	0x0397DA78 CMP W11, W9
	0x0397DA7C B.CS 0x397E02C
	0x0397DA80 CMP W12, 0x1
	0x0397DA84 B.LS 0x397E02C
	0x0397DA88 LDRSW X12, [X28 + 0x24]
	0x0397DA8C CMP W12, W9
	0x0397DA90 B.CS 0x397E02C
	0x0397DA94 ADD X8, X21, X8, 0x3, LSL
	0x0397DA98 ADD X9, X21, X10, 0x3, LSL
	0x0397DA9C ADD X10, X21, X11, 0x3, LSL
	0x0397DAA0 ADD X11, X21, X12, 0x3, LSL
	0x0397DAA4 ADRP X19, 0xA5B000
	0x0397DAA8 LDR V0, [X8 + 0x20]
	0x0397DAAC LDR V1, [X9 + 0x20]
	0x0397DAB0 LDR V2, [X10 + 0x20]
	0x0397DAB4 LDR V3, [X11 + 0x20]
	0x0397DAB8 LDRB W8, [X19 + 0xA1E]
	0x0397DABC FSUB V4.2S, V0.2S, V1.2S
	0x0397DAC0 FSUB V2.2S, V2.2S, V3.2S
	0x0397DAC4 STP V4, V2, [X31 + 0x60]
	0x0397DAC8 CBNZ W8, 0x397DAE4
	0x0397DACC ADRP X0, 0x776000
	0x0397DAD0 LDR X0, [X0 + 0x5A8]
	0x0397DAD4 BL 0x1C16CF4
	0x0397DAD8 LDP V4, V2, [X31 + 0x60]
	0x0397DADC MOVZ W8, 0x1
	0x0397DAE0 STRB W8, [X19 + 0xA1E]
	0x0397DAE4 ADRP X8, 0x776000
	0x0397DAE8 LDR X8, [X8 + 0x5A8]
	0x0397DAEC MOV S8, V4.S[1]
	0x00000000 INVALID
	0x0397DAF4 FMUL S1, S8, V4.S[1]
	0x0397DAF8 LDR X0, [X8]
	0x0397DAFC MOV S9, V2.S[1]
	0x0397DB00 FADD S10, S0, S1
	0x00000000 INVALID
	0x0397DB08 LDR W8, [X0 + 0xE0]
	0x0397DB0C FMUL S1, S9, V2.S[1]
	0x0397DB10 FADD S11, S0, S1
	0x0397DB14 CBNZ W8, 0x397DB20
	0x0397DB18 BL 0x1C16DFC
	0x0397DB1C LDP V4, V2, [X31 + 0x60]
	0x0397DB20 ADRP X8, 0xFFFFFFFFFD16C000
	0x0397DB24 LDR V1, [X8 + 0xFE8]
	0x0397DB28 FMUL S0, S10, S11
	0x0397DB2C FSQRT S0, S0
	0x0397DB30 FCMP S0, S1
	0x0397DB34 FMOV S1, W31
	0x0397DB38 B.MI 0x397DB90
	0x0397DB3C ADRP X8, 0x776000
	0x0397DB40 LDR X8, [X8 + 0x5A8]
	0x00000000 INVALID
	0x0397DB48 FADDP S1, V1.2S
	0x0397DB4C FDIV S0, S1, S0
	0x0397DB50 LDR X0, [X8]
	0x0397DB54 FMOV S1, 1
	0x0397DB58 FMOV S2, -1
	0x0397DB5C FMIN S1, S0, S1
	0x0397DB60 LDR W8, [X0 + 0xE0]
	0x0397DB64 FCMP S0, S2
	0x0397DB68 FCSEL S10, S1, S2, PL
	0x0397DB6C CBNZ W8, 0x397DB74
	0x0397DB70 BL 0x1C16DFC
	0x0397DB74 FCVT S0, S10
	0x0397DB78 BL 0x3EB1B80
	0x0397DB7C ADRP X8, 0xFFFFFFFFFD16D000
	0x0397DB80 LDR V1, [X8 + 0x448]
	0x0397DB84 LDP V4, V2, [X31 + 0x60]
	0x00000000 INVALID
	0x0397DB8C FMUL S1, S0, S1
	0x0397DB90 FMUL S0, S4, S9
	0x0397DB94 FMUL S2, S8, S2
	0x0397DB98 MOVZ W8, 0x43B40000
	0x0397DB9C FSUB S0, S0, S2
	0x0397DBA0 FMOV S2, W8
	0x0397DBA4 FSUB S2, S2, S1
	0x0397DBA8 FCMP S0, 0x0
	0x0397DBAC MOV X0, X27
	0x0397DBB0 MOV X1, X31
	0x0397DBB4 FCSEL S9, S2, S1, MI
	0x0397DBB8 BL 0x38FF530
	0x0397DBBC CBZ X0, 0x397E030
	0x0397DBC0 LDR W8, [X0 + 0x18]
	0x0397DBC4 LDR V0, [X31 + 0x8]
	0x0397DBC8 MOV X26, X0
	0x0397DBCC CMP W8, 0x1
	0x0397DBD0 MOV S8, V0.S[1]
	0x0397DBD4 B.LT 0x397DC40
	0x0397DBD8 MOV W19, W31
	0x0397DBDC CMP W19, W8
	0x0397DBE0 B.CS 0x397E02C
	0x0397DBE4 ADD X8, X26, W19, 0x2, SXTW
	0x0397DBE8 LDRSW X20, [X8 + 0x20]
	0x0397DBEC LDR W8, [X21 + 0x18]
	0x0397DBF0 CMP W20, W8
	0x0397DBF4 B.CS 0x397E02C
	0x0397DBF8 ADD X22, X21, X20, 0x3, LSL
	0x0397DBFC LDR V0, [X22 + 0x20]!
	0x0397DC00 MOV V3.16B, V8.16B
	0x0397DC04 MOV V4.16B, V9.16B
	0x0397DC08 MOV X0, X31
	0x0397DC0C MOV X23, X22
	0x0397DC10 LDR V1, [X23 + 0x4]!
	0x0397DC14 LDR V2, [X31 + 0x8]
	0x0397DC18 BL 0x3908120
	0x0397DC1C LDR W8, [X21 + 0x18]
	0x0397DC20 CMP W20, W8
	0x0397DC24 B.CS 0x397E02C
	0x0397DC28 STR S0, [X22]
	0x0397DC2C STR S1, [X23]
	0x0397DC30 LDR W8, [X26 + 0x18]
	0x0397DC34 ADD W19, W19, 0x1
	0x0397DC38 CMP W19, W8
	0x0397DC3C B.LT 0x397DBDC
	0x0397DC40 LDR W9, [X28 + 0x18]
	0x0397DC44 CBZ W9, 0x397E02C
	0x0397DC48 LDRSW X8, [X28 + 0x20]
	0x0397DC4C LDR W10, [X21 + 0x18]
	0x0397DC50 ADRP X19, 0xA64000
	0x0397DC54 CMP W8, W10
	0x0397DC58 B.CS 0x397E02C
	0x0397DC5C CMP W9, 0x1
	0x0397DC60 B.LS 0x397E02C
	0x0397DC64 LDRSW X9, [X28 + 0x24]
	0x0397DC68 CMP W9, W10
	0x0397DC6C B.CS 0x397E02C
	0x0397DC70 ADD X8, X21, X8, 0x3, LSL
	0x0397DC74 ADD X9, X21, X9, 0x3, LSL
	0x0397DC78 LDRB W10, [X19 + 0x810]
	0x0397DC7C LDP S10, S9, [X8 + 0x20]
	0x0397DC80 LDP S12, S11, [X9 + 0x20]
	0x0397DC84 CBNZ W10, 0x397DC9C
	0x0397DC88 ADRP X0, 0x776000
	0x0397DC8C LDR X0, [X0 + 0x5A8]
	0x0397DC90 BL 0x1C16CF4
	0x0397DC94 MOVZ W8, 0x1
	0x0397DC98 STRB W8, [X19 + 0x810]
	0x0397DC9C ADRP X8, 0x776000
	0x0397DCA0 LDR X8, [X8 + 0x5A8]
	0x0397DCA4 LDR X0, [X8]
	0x0397DCA8 LDR W8, [X0 + 0xE0]
	0x0397DCAC CBNZ W8, 0x397DCB4
	0x0397DCB0 BL 0x1C16DFC
	0x0397DCB4 LDR W9, [X29 + 0x18]
	0x0397DCB8 CBZ W9, 0x397E02C
	0x0397DCBC LDRSW X8, [X29 + 0x20]
	0x0397DCC0 LDR W10, [X21 + 0x18]
	0x0397DCC4 CMP W8, W10
	0x0397DCC8 B.CS 0x397E02C
	0x0397DCCC CMP W9, 0x1
	0x0397DCD0 B.LS 0x397E02C
	0x0397DCD4 LDRSW X9, [X29 + 0x24]
	0x0397DCD8 CMP W9, W10
	0x0397DCDC B.CS 0x397E02C
	0x0397DCE0 ADD X8, X21, X8, 0x3, LSL
	0x0397DCE4 ADD X9, X21, X9, 0x3, LSL
	0x0397DCE8 FSUB S0, S10, S12
	0x0397DCEC FSUB S1, S9, S11
	0x0397DCF0 LDRB W10, [X19 + 0x810]
	0x0397DCF4 LDR V10, [X8 + 0x20]
	0x0397DCF8 LDR V11, [X9 + 0x20]
	0x0397DCFC FMUL S0, S0, S0
	0x0397DD00 FMUL S1, S1, S1
	0x0397DD04 FADD S0, S0, S1
	0x0397DD08 FSQRT S9, S0
	0x0397DD0C CBNZ W10, 0x397DD24
	0x0397DD10 ADRP X0, 0x776000
	0x0397DD14 LDR X0, [X0 + 0x5A8]
	0x0397DD18 BL 0x1C16CF4
	0x0397DD1C MOVZ W8, 0x1
	0x0397DD20 STRB W8, [X19 + 0x810]
	0x0397DD24 ADRP X8, 0x776000
	0x0397DD28 LDR X8, [X8 + 0x5A8]
	0x0397DD2C FABS S9, S9
	0x0397DD30 FSUB V10.2S, V10.2S, V11.2S
	0x0397DD34 LDR X0, [X8]
	0x0397DD38 LDR W8, [X0 + 0xE0]
	0x0397DD3C CBNZ W8, 0x397DD44
	0x0397DD40 BL 0x1C16DFC
	0x00000000 INVALID
	0x0397DD48 ADRP X8, 0xFFFFFFFFFD16D000
	0x0397DD4C FADDP S0, V0.2S
	0x0397DD50 LDR V1, [X8 + 0x20C]
	0x0397DD54 FSQRT S0, S0
	0x0397DD58 FABS S0, S0
	0x0397DD5C FADD S9, S9, S0
	0x0397DD60 FCMP S9, S1
	0x0397DD64 B.LE 0x397DFA0
	0x0397DD68 MOV X0, X27
	0x0397DD6C MOV X1, X31
	0x0397DD70 BL 0x38FF530
	0x0397DD74 CBZ X0, 0x397E030
	0x0397DD78 LDR W8, [X0 + 0x18]
	0x0397DD7C MOV X26, X0
	0x0397DD80 CMP W8, 0x1
	0x0397DD84 B.LT 0x397DDF4
	0x0397DD88 MOV W19, W31
	0x0397DD8C MOVZ W20, 0x43340000
	0x0397DD90 CMP W19, W8
	0x0397DD94 B.CS 0x397E02C
	0x0397DD98 ADD X8, X26, W19, 0x2, SXTW
	0x0397DD9C LDRSW X22, [X8 + 0x20]
	0x0397DDA0 LDR W8, [X21 + 0x18]
	0x0397DDA4 CMP W22, W8
	0x0397DDA8 B.CS 0x397E02C
	0x0397DDAC ADD X23, X21, X22, 0x3, LSL
	0x0397DDB0 LDR V0, [X23 + 0x20]!
	0x0397DDB4 FMOV S4, W20
	0x0397DDB8 MOV V3.16B, V8.16B
	0x0397DDBC MOV X0, X31
	0x0397DDC0 MOV X24, X23
	0x0397DDC4 LDR V1, [X24 + 0x4]!
	0x0397DDC8 LDR V2, [X31 + 0x8]
	0x0397DDCC BL 0x3908120
	0x0397DDD0 LDR W8, [X21 + 0x18]
	0x0397DDD4 CMP W22, W8
	0x0397DDD8 B.CS 0x397E02C
	0x0397DDDC STR S0, [X23]
	0x0397DDE0 STR S1, [X24]
	0x0397DDE4 LDR W8, [X26 + 0x18]
	0x0397DDE8 ADD W19, W19, 0x1
	0x0397DDEC CMP W19, W8
	0x0397DDF0 B.LT 0x397DD90
	0x0397DDF4 LDR W9, [X28 + 0x18]
	0x0397DDF8 CBZ W9, 0x397E02C
	0x0397DDFC LDRSW X8, [X28 + 0x20]
	0x0397DE00 LDR W10, [X21 + 0x18]
	0x0397DE04 ADRP X19, 0xA64000
	0x0397DE08 CMP W8, W10
	0x0397DE0C B.CS 0x397E02C
	0x0397DE10 CMP W9, 0x1
	0x0397DE14 B.LS 0x397E02C
	0x0397DE18 LDRSW X9, [X28 + 0x24]
	0x0397DE1C CMP W9, W10
	0x0397DE20 B.CS 0x397E02C
	0x0397DE24 ADD X8, X21, X8, 0x3, LSL
	0x0397DE28 ADD X9, X21, X9, 0x3, LSL
	0x0397DE2C LDRB W10, [X19 + 0x810]
	0x0397DE30 LDP S11, S10, [X8 + 0x20]
	0x0397DE34 LDP S13, S12, [X9 + 0x20]
	0x0397DE38 CBNZ W10, 0x397DE50
	0x0397DE3C ADRP X0, 0x776000
	0x0397DE40 LDR X0, [X0 + 0x5A8]
	0x0397DE44 BL 0x1C16CF4
	0x0397DE48 MOVZ W8, 0x1
	0x0397DE4C STRB W8, [X19 + 0x810]
	0x0397DE50 ADRP X8, 0x776000
	0x0397DE54 LDR X8, [X8 + 0x5A8]
	0x0397DE58 LDR X0, [X8]
	0x0397DE5C LDR W8, [X0 + 0xE0]
	0x0397DE60 CBNZ W8, 0x397DE68
	0x0397DE64 BL 0x1C16DFC
	0x0397DE68 LDR W9, [X29 + 0x18]
	0x0397DE6C CBZ W9, 0x397E02C
	0x0397DE70 LDRSW X8, [X29 + 0x20]
	0x0397DE74 LDR W10, [X21 + 0x18]
	0x0397DE78 CMP W8, W10
	0x0397DE7C B.CS 0x397E02C
	0x0397DE80 CMP W9, 0x1
	0x0397DE84 B.LS 0x397E02C
	0x0397DE88 LDRSW X9, [X29 + 0x24]
	0x0397DE8C CMP W9, W10
	0x0397DE90 B.CS 0x397E02C
	0x0397DE94 ADD X8, X21, X8, 0x3, LSL
	0x0397DE98 ADD X9, X21, X9, 0x3, LSL
	0x0397DE9C FSUB S0, S11, S13
	0x0397DEA0 FSUB S1, S10, S12
	0x0397DEA4 LDRB W10, [X19 + 0x810]
	0x0397DEA8 LDR V11, [X8 + 0x20]
	0x0397DEAC LDR V12, [X9 + 0x20]
	0x0397DEB0 FMUL S0, S0, S0
	0x0397DEB4 FMUL S1, S1, S1
	0x0397DEB8 FADD S0, S0, S1
	0x0397DEBC FSQRT S10, S0
	0x0397DEC0 CBNZ W10, 0x397DED8
	0x0397DEC4 ADRP X0, 0x776000
	0x0397DEC8 LDR X0, [X0 + 0x5A8]
	0x0397DECC BL 0x1C16CF4
	0x0397DED0 MOVZ W8, 0x1
	0x0397DED4 STRB W8, [X19 + 0x810]
	0x0397DED8 ADRP X8, 0x776000
	0x0397DEDC LDR X8, [X8 + 0x5A8]
	0x0397DEE0 FABS S10, S10
	0x0397DEE4 FSUB V11.2S, V11.2S, V12.2S
	0x0397DEE8 LDR X0, [X8]
	0x0397DEEC LDR W8, [X0 + 0xE0]
	0x0397DEF0 CBNZ W8, 0x397DEF8
	0x0397DEF4 BL 0x1C16DFC
	0x00000000 INVALID
	0x0397DEFC FADDP S0, V0.2S
	0x0397DF00 FSQRT S0, S0
	0x0397DF04 FABS S0, S0
	0x0397DF08 FADD S0, S10, S0
	0x0397DF0C FCMP S0, S9
	0x0397DF10 B.MI 0x397DFA0
	0x0397DF14 MOV X0, X27
	0x0397DF18 MOV X1, X31
	0x0397DF1C BL 0x38FF530
	0x0397DF20 CBZ X0, 0x397E030
	0x0397DF24 LDR W8, [X0 + 0x18]
	0x0397DF28 MOV X26, X0
	0x0397DF2C CMP W8, 0x1
	0x0397DF30 B.LT 0x397DFA0
	0x0397DF34 MOV W19, W31
	0x0397DF38 MOVZ W20, 0x43340000
	0x0397DF3C CMP W19, W8
	0x0397DF40 B.CS 0x397E02C
	0x0397DF44 ADD X8, X26, W19, 0x2, SXTW
	0x0397DF48 LDRSW X22, [X8 + 0x20]
	0x0397DF4C LDR W8, [X21 + 0x18]
	0x0397DF50 CMP W22, W8
	0x0397DF54 B.CS 0x397E02C
	0x0397DF58 ADD X23, X21, X22, 0x3, LSL
	0x0397DF5C LDR V0, [X23 + 0x20]!
	0x0397DF60 FMOV S4, W20
	0x0397DF64 MOV V3.16B, V8.16B
	0x0397DF68 MOV X0, X31
	0x0397DF6C MOV X24, X23
	0x0397DF70 LDR V1, [X24 + 0x4]!
	0x0397DF74 LDR V2, [X31 + 0x8]
	0x0397DF78 BL 0x3908120
	0x0397DF7C LDR W8, [X21 + 0x18]
	0x0397DF80 CMP W22, W8
	0x0397DF84 B.CS 0x397E02C
	0x0397DF88 STR S0, [X23]
	0x0397DF8C STR S1, [X24]
	0x0397DF90 LDR W8, [X26 + 0x18]
	0x0397DF94 ADD W19, W19, 0x1
	0x0397DF98 CMP W19, W8
	0x0397DF9C B.LT 0x397DF3C
	0x0397DFA0 MOV X0, X27
	0x0397DFA4 MOV X1, X31
	0x0397DFA8 BL 0x38FF530
	0x0397DFAC LDR X19, [X31 + 0x18]
	0x0397DFB0 MOV X1, X0
	0x0397DFB4 MOV X0, X19
	0x0397DFB8 BL 0x397E274
	0x0397DFBC MOV X0, X19
	0x0397DFC0 MOV X1, X28
	0x0397DFC4 MOV X2, X31
	0x0397DFC8 BL 0x391CF7C
	0x0397DFCC MOV X0, X19
	0x0397DFD0 MOV X1, X29
	0x0397DFD4 MOV X2, X31
	0x0397DFD8 BL 0x391CF7C
	0x0397DFDC MOVZ W3, 0x1
	0x0397DFE0 MOV X0, X19
	0x0397DFE4 MOV X1, X21
	0x0397DFE8 MOV W2, W25
	0x0397DFEC BL 0x397E604
	0x0397DFF0 LDR W26, [X31 + 0x14]
	0x0397DFF4 ORN W8, W31, W26, 0x0
	0x0397DFF8 LDP X20, X19, [X31 + 0x120]
	0x0397DFFC LDP X22, X21, [X31 + 0x110]
	0x0397E000 LDP X24, X23, [X31 + 0x100]
	0x0397E004 LDP X26, X25, [X31 + 0xF0]
	0x0397E008 LDP X28, X27, [X31 + 0xE0]
	0x0397E00C LDP X29, X30, [X31 + 0xD0]
	0x0397E010 LDP D9, D8, [X31 + 0xC0]
	0x0397E014 LDP D11, D10, [X31 + 0xB0]
	0x0397E018 LDP D13, D12, [X31 + 0xA0]
	0x0397E01C LDP D15, D14, [X31 + 0x90]
	0x0397E020 UBFM W0, W8, 0x1F, 0x1F
	0x0397E024 ADD X31, X31, 0x130
	0x0397E028 RET
	0x0397E02C BL 0x1C16F28
	0x0397E030 BL 0x1C16F20
	0x0397E034 STR X30, [X31 - 0x30]!
	0x0397E038 STP X22, X21, [X31 + 0x10]
	0x0397E03C STP X20, X19, [X31 + 0x20]
	0x0397E040 ADRP X21, 0xA63000
	0x0397E044 LDRB W8, [X21 + 0xA36]
	0x0397E048 MOV W20, W1
	0x0397E04C MOV X19, X0
	0x0397E050 TBNZ X8, 0x0, 0x397E0BC
	0x0397E054 ADRP X0, 0x7D0000
	0x0397E058 LDR X0, [X0 + 0x4D8]
	0x0397E05C BL 0x1C16CF4
	0x0397E060 ADRP X0, 0x7D0000
	0x0397E064 LDR X0, [X0 + 0x4B8]
	0x0397E068 BL 0x1C16CF4
	0x0397E06C ADRP X0, 0x7D0000
	0x0397E070 LDR X0, [X0 + 0x4E0]
	0x0397E074 BL 0x1C16CF4
	0x0397E078 ADRP X0, 0x7D0000
	0x0397E07C LDR X0, [X0 + 0x10]
	0x0397E080 BL 0x1C16CF4
	0x0397E084 ADRP X0, 0x7D0000
	0x0397E088 LDR X0, [X0 + 0x8]
	0x0397E08C BL 0x1C16CF4
	0x0397E090 ADRP X0, 0x775000
	0x0397E094 LDR X0, [X0 + 0x598]
	0x0397E098 BL 0x1C16CF4
	0x0397E09C ADRP X0, 0x7D2000
	0x0397E0A0 LDR X0, [X0 + 0x330]
	0x0397E0A4 BL 0x1C16CF4
	0x0397E0A8 ADRP X0, 0x7D2000
	0x0397E0AC LDR X0, [X0 + 0x338]
	0x0397E0B0 BL 0x1C16CF4
	0x0397E0B4 MOVZ W8, 0x1
	0x0397E0B8 STRB W8, [X21 + 0xA36]
	0x0397E0BC CMP W20, 0x1
	0x0397E0C0 B.NE 0x397E134
	0x0397E0C4 CBZ X19, 0x397E270
	0x0397E0C8 MOV X0, X19
	0x0397E0CC MOV X1, X31
	0x0397E0D0 BL 0x3912CAC
	0x0397E0D4 ADRP X8, 0x775000
	0x0397E0D8 LDR X8, [X8 + 0x598]
	0x0397E0DC MOV X20, X0
	0x0397E0E0 LDR X8, [X8]
	0x0397E0E4 LDR W9, [X8 + 0xE0]
	0x0397E0E8 CBNZ W9, 0x397E0F4
	0x0397E0EC MOV X0, X8
	0x0397E0F0 BL 0x1C16DFC
	0x0397E0F4 MOV X0, X20
	0x0397E0F8 MOV X1, X31
	0x0397E0FC MOV X2, X31
	0x0397E100 BL 0x3C3883C
	0x0397E104 MOV W8, W0
	0x0397E108 MOV X0, X31
	0x0397E10C TBNZ X8, 0x0, 0x397E260
	0x0397E110 MOV X0, X19
	0x0397E114 MOV X1, X31
	0x0397E118 BL 0x3912CAC
	0x0397E11C CBZ X0, 0x397E270
	0x0397E120 LDP X20, X19, [X31 + 0x20]
	0x0397E124 LDP X22, X21, [X31 + 0x10]
	0x0397E128 MOV X1, X31
	0x0397E12C LDR X30, [X31], #0x30
	0x0397E130 B 0x3C1816C
	0x0397E134 AND W8, W20, 0xFFFFFFFE
	0x0397E138 CMP W8, 0x2
	0x0397E13C B.NE 0x397E154
	0x0397E140 CBZ X19, 0x397E270
	0x0397E144 CMP W20, 0x2
	0x0397E148 B.NE 0x397E160
	0x0397E14C MOVZ W1, 0x8
	0x0397E150 B 0x397E164

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+16], X2
	015 Move X21, 0xA65000
	016 Move X23, 0x7D4000
	017 Move X20, 0x778000
	018 Move X19, 0x77B000
	019 Move W8, [X21+2607]
	020 Move X23, [X23+752]
	021 Move X20, [X20+3632]
	022 Move X19, [X19+2928]
	023 Move X22, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {109}
	029 Move X0, 0x7D1000
	030 Move X0, [X0+1592]
	031 Call 0x1C17CF4
	032 Move X0, 0x7D4000
	033 Move X0, [X0+656]
	034 Call 0x1C17CF4
	035 Move X0, 0x7D1000
	036 Move X0, [X0+1968]
	037 Call 0x1C17CF4
	038 Move X0, 0x7D4000
	039 Move X0, [X0+680]
	040 Call 0x1C17CF4
	041 Move X0, 0x7D4000
	042 Move X0, [X0+760]
	043 Call 0x1C17CF4
	044 Move X0, 0x777000
	045 Move X0, [X0+3584]
	046 Call 0x1C17CF4
	047 Move X0, 0x7D1000
	048 Move X0, [X0+2432]
	049 Call 0x1C17CF4
	050 Move X0, 0x7D1000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move X0, 0x777000
	054 Move X0, [X0+3608]
	055 Call 0x1C17CF4
	056 Move X0, 0x7D4000
	057 Move X0, [X0+768]
	058 Call 0x1C17CF4
	059 Move X0, 0x7D3000
	060 Move X0, [X0+384]
	061 Call 0x1C17CF4
	062 Move X0, 0x778000
	063 Move X0, [X0+3600]
	064 Call 0x1C17CF4
	065 Move X0, 0x7D4000
	066 Move X0, [X0+696]
	067 Call 0x1C17CF4
	068 Move X0, 0x7D3000
	069 Move X0, [X0+400]
	070 Call 0x1C17CF4
	071 Move X0, 0x77B000
	072 Move X0, [X0+2928]
	073 Call 0x1C17CF4
	074 Move X0, 0x7D4000
	075 Move X0, [X0+776]
	076 Call 0x1C17CF4
	077 Move X0, 0x7A1000
	078 Move X0, [X0+3896]
	079 Call 0x1C17CF4
	080 Move X0, 0x778000
	081 Move X0, [X0+3632]
	082 Call 0x1C17CF4
	083 Move X0, 0x7D2000
	084 Move X0, [X0+1816]
	085 Call 0x1C17CF4
	086 Move X0, 0x7D1000
	087 Move X0, [X0+2768]
	088 Call 0x1C17CF4
	089 Move X0, 0x7D1000
	090 Move X0, [X0+2472]
	091 Call 0x1C17CF4
	092 Move X0, 0x7D4000
	093 Move X0, [X0+784]
	094 Call 0x1C17CF4
	095 Move X0, 0x7D4000
	096 Move X0, [X0+792]
	097 Call 0x1C17CF4
	098 Move X0, 0x7D4000
	099 Move X0, [X0+752]
	100 Call 0x1C17CF4
	101 Move X0, 0x7D1000
	102 Move X0, [X0+2696]
	103 Call 0x1C17CF4
	104 Move X0, 0x7D4000
	105 Move X0, [X0+728]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X21+2607], W8
	109 Move X0, [X23]
	110 Call 0x1C17F10
	111 Move X1, X31
	112 Move X24, X0
	113 Call Object..ctor, X0
	114 Move X0, [X20]
	115 Call 0x1C17F10
	116 Move X1, [X19]
	117 Move X21, X0
	118 Call List`1<Int32>..ctor, X0
	119 Move X8, [X31+16]
	120 Move [X8], X21
	121 Compare X24, 0
	122 JumpIfEqual {737}
	123 Move X8, 0x7D2000
	124 Move X8, [X8+1816]
	125 Move X19, 0x7D3000
	126 Move X23, 0x7D4000
	127 Move X19, [X19+400]
	128 Move X23, [X23+680]
	129 Move [X24+16], W31
	130 Move X0, [X8]
	131 Move X21, 0x7D4000
	132 Move X29, 0x7D4000
	133 Move X20, 0x7D1000
	134 Move X21, [X21+784]
	135 Move X29, [X29+656]
	136 Move X20, [X20+2472]
	137 Call 0x1C17F10
	138 Move X2, [X19]
	139 Move X1, X25
	140 Move X26, X0
	141 Call List`1<Vector2>..ctor, X0, X1
	142 Move X0, [X23]
	143 Call 0x1C17F10
	144 Move X2, [X21]
	145 Move X1, X24
	146 Move X3, X31
	147 Move X23, X0
	148 Call Func`2<Vector2, Object>..ctor, X0, X1, X2
	149 Move X2, [X29]
	150 Move X0, X25
	151 Move X1, X23
	152 Move [X31+8], X25
	153 Call Enumerable.Select, X0, X1
	154 Move X8, [X20]
	155 Move X25, X0
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X1, X25
	159 Move X2, X31
	160 Move X23, X0
	161 Call Polygon..ctor, X0, X1
	162 Move [X31+24], X26
	163 Compare X22, 0
	164 JumpIfEqual {280}
	165 Move X28, 0x7D4000
	166 Move X19, 0x7D4000
	167 Move X21, 0x7D3000
	168 Move X28, [X28+760]
	169 Move X19, [X19+768]
	170 Move X21, [X21+384]
	171 Move W25, W31
	172 Move X8, [X22]
	173 Move X1, [X28]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X22
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X22
	192 NotImplemented "Instruction BLR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, [X22]
	195 Move X1, [X19]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X22
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X2, [X0+8]
	213 Move X0, X22
	214 Move W1, W25
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Compare X26, 0
	217 JumpIfEqual {737}
	218 Move X2, [X21]
	219 Move X1, X0
	220 Move X0, X26
	221 Call List`1<Vector2>.AddRange, X0, X1
	222 Move X8, [X22]
	223 Move X1, [X19]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X22
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X2, [X0+8]
	241 Move X0, X22
	242 Move W1, W25
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X27, [X24+24]
	245 Move X26, X0
	246 Compare X27, 0
	247 JumpIfNotEqual {260}
	248 Move X8, 0x7D4000
	249 Move X8, [X8+680]
	250 Move X0, [X8]
	251 Call 0x1C17F10
	252 Move X8, 0x7D4000
	253 Move X8, [X8+792]
	254 Move X1, X24
	255 Move X3, X31
	256 Move X27, X0
	257 Move X2, [X8]
	258 Call Func`2<Vector2, Object>..ctor, X0, X1, X2
	259 Move [X24+24], X27
	260 Move X2, [X29]
	261 Move X0, X26
	262 Move X1, X27
	263 Call Enumerable.Select, X0, X1
	264 Move X8, [X20]
	265 Move X27, X0
	266 Move X0, X8
	267 Call 0x1C17F10
	268 Move X1, X27
	269 Move X2, X31
	270 Move X26, X0
	271 Call Polygon..ctor, X0, X1
	272 Compare X23, 0
	273 JumpIfEqual {737}
	274 Move X0, X23
	275 Move X1, X26
	276 Move X2, X31
	277 Call Polygon.AddHole, X0, X1
	278 Move X26, [X31+24]
	279 Add W25, W25, 1
	280 Call Triangulation.get_triangulationContext
	281 Move X21, [X31+16]
	282 Compare X0, 0
	283 JumpIfEqual {674}
	284 Move X8, [X0]
	285 Move X9, [X8+424]
	286 Move X1, [X8+432]
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Call Triangulation.get_triangulationContext
	289 Compare X0, 0
	290 JumpIfEqual {675}
	291 Move X8, [X0]
	292 Move X9, [X8+392]
	293 Move X2, [X8+400]
	294 Move X1, X23
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Call Triangulation.get_triangulationContext
	297 Compare X0, 0
	298 JumpIfEqual {310}
	299 Move X9, 0x7D1000
	300 Move X9, [X9+1592]
	301 Move X8, [X0]
	302 Move X1, [X9]
	303 Move W10, [X8+304]
	304 Move W9, [X1+304]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X8, [X8+200]
	307 Add X8, X8, X9
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X1, X31
	311 Call DTSweep.Triangulate, X0
	312 Compare X23, 0
	313 JumpIfEqual {737}
	314 Move X22, [X23+40]
	315 Compare X22, 0
	316 JumpIfEqual {737}
	317 Move X10, 0x7D1000
	318 Move X8, [X22]
	319 Move X10, [X10+2432]
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Move X1, [X10]
	322 Compare X9, 0
	323 JumpIfEqual {330}
	324 Move X10, [X8+176]
	325 Add X10, X10, 8
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Subtract X9, X9, 1
	329 Add X10, X10, 16
	330 Move X0, X22
	331 Move W2, W31
	332 Call 0x1C5D788
	333 NotImplemented "Instruction LDRSW not yet implemented."
	334 Add X8, X8, X9
	335 Add X0, X8, 312
	336 Move X8, [X0]
	337 Move X1, [X0+8]
	338 Move X19, 0x777000
	339 Move X19, [X19+3584]
	340 Move X0, X22
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Move X22, X0
	343 Compare X0, 0
	344 JumpIfEqual {676}
	345 Move X27, 0x7D1000
	346 Move X20, 0x7D4000
	347 Move X28, 0x777000
	348 Move X29, 0x7D1000
	349 Move X25, 0x7D1000
	350 Move X26, 0x778000
	351 Move X27, [X27+2768]
	352 Move X20, [X20+728]
	353 Move X28, [X28+3608]
	354 Move X29, [X29+2440]
	355 Move X25, [X25+1968]
	356 Move X26, [X26+3600]
	357 Move X8, [X22]
	358 Move X1, [X28]
	359 NotImplemented "Instruction LDRH not yet implemented."
	360 Compare X9, 0
	361 JumpIfEqual {368}
	362 Move X10, [X8+176]
	363 Add X10, X10, 8
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Subtract X9, X9, 1
	367 Add X10, X10, 16
	368 Move X0, X22
	369 Move W2, W31
	370 Call 0x1C5D788
	371 NotImplemented "Instruction LDRSW not yet implemented."
	372 Add X8, X8, X9
	373 Add X0, X8, 312
	374 Move X8, [X0]
	375 Move X1, [X0+8]
	376 Move X0, X22
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {537}
	382 Move X8, [X22]
	383 Move X1, [X29]
	384 NotImplemented "Instruction LDRH not yet implemented."
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move X0, X22
	394 Move W2, W31
	395 Call 0x1C5D788
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Add X8, X8, X9
	398 Add X0, X8, 312
	399 Move X8, [X0]
	400 Move X1, [X0+8]
	401 Move X0, X22
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Compare X0, 0
	404 JumpIfEqual {646}
	405 Move X2, [X25]
	406 Add X23, X0, 16
	407 Move X0, X23
	408 Move W1, W31
	409 Call 0x2D2064C, X0, X1
	410 Compare X0, 0
	411 JumpIfEqual {648}
	412 Move W8, [X0+40]
	413 Move TEMP, X8
	414 And TEMP, TEMP, -2147483648
	415 Compare TEMP, -2147483648
	416 JumpIfEqual {526}
	417 Move X2, [X25]
	418 Move W1, 1
	419 Move X0, X23
	420 Call 0x2D2064C, X0, X1
	421 Compare X0, 0
	422 JumpIfEqual {650}
	423 Move W8, [X0+40]
	424 Move TEMP, X8
	425 And TEMP, TEMP, -2147483648
	426 Compare TEMP, -2147483648
	427 JumpIfEqual {526}
	428 Move X2, [X25]
	429 Move W1, 2
	430 Move X0, X23
	431 Call 0x2D2064C, X0, X1
	432 Compare X0, 0
	433 JumpIfEqual {652}
	434 Move W8, [X0+40]
	435 Move TEMP, X8
	436 And TEMP, TEMP, -2147483648
	437 Compare TEMP, -2147483648
	438 JumpIfEqual {526}
	439 Move X24, [X21]
	440 Move X2, [X25]
	441 Move X0, X23
	442 Move W1, W31
	443 Call 0x2D2064C, X0, X1
	444 Compare X0, 0
	445 JumpIfEqual {654}
	446 Compare X24, 0
	447 JumpIfEqual {668}
	448 Move W10, [X24+28]
	449 Move W1, [X0+40]
	450 Move X8, [X24+16]
	451 Move X9, [X26]
	452 Add W10, W10, 1
	453 Move [X24+28], W10
	454 Compare X8, 0
	455 JumpIfEqual {664}
	456 NotImplemented "Instruction LDRSW not yet implemented."
	457 Move W11, [X8+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Add W9, W10, 1
	460 Add X8, X8, X10
	461 Move [X24+24], W9
	462 Move [X8+32], W1
	463 Move X8, [X9+32]
	464 Move X8, [X8+192]
	465 Move X2, [X8+112]
	466 Move X0, X24
	467 Call List`1<Int32>.AddWithResize, X0, X1
	468 Move X24, [X21]
	469 Move X2, [X25]
	470 Move W1, 1
	471 Move X0, X23
	472 Call 0x2D2064C, X0, X1
	473 Compare X0, 0
	474 JumpIfEqual {660}
	475 Compare X24, 0
	476 JumpIfEqual {658}
	477 Move W10, [X24+28]
	478 Move W1, [X0+40]
	479 Move X8, [X24+16]
	480 Move X9, [X26]
	481 Add W10, W10, 1
	482 Move [X24+28], W10
	483 Compare X8, 0
	484 JumpIfEqual {656}
	485 NotImplemented "Instruction LDRSW not yet implemented."
	486 Move W11, [X8+24]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Add W9, W10, 1
	489 Add X8, X8, X10
	490 Move [X24+24], W9
	491 Move [X8+32], W1
	492 Move X8, [X9+32]
	493 Move X8, [X8+192]
	494 Move X2, [X8+112]
	495 Move X0, X24
	496 Call List`1<Int32>.AddWithResize, X0, X1
	497 Move X24, [X21]
	498 Move X2, [X25]
	499 Move W1, 2
	500 Move X0, X23
	501 Call 0x2D2064C, X0, X1
	502 Compare X0, 0
	503 JumpIfEqual {670}
	504 Compare X24, 0
	505 JumpIfEqual {666}
	506 Move W10, [X24+28]
	507 Move W1, [X0+40]
	508 Move X8, [X24+16]
	509 Move X9, [X26]
	510 Add W10, W10, 1
	511 Move [X24+28], W10
	512 Compare X8, 0
	513 JumpIfEqual {662}
	514 NotImplemented "Instruction LDRSW not yet implemented."
	515 Move W11, [X8+24]
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Add W9, W10, 1
	518 Add X8, X8, X10
	519 Move [X24+24], W9
	520 Move [X8+32], W1
	521 Move X8, [X9+32]
	522 Move X8, [X8+192]
	523 Move X2, [X8+112]
	524 Move X0, X24
	525 Call List`1<Int32>.AddWithResize, X0, X1
	526 Move X0, [X27]
	527 Move X26, X19
	528 Move W8, [X0+224]
	529 Compare W8, 0
	530 JumpIfNotEqual {532}
	531 Call 0x1C17DFC
	532 Move X0, [X20]
	533 Move X1, X31
	534 Call Log.Info, X0
	535 Move X24, X31
	536 Move W19, 8
	537 Move X26, X19
	538 Move X24, X31
	539 Move W19, 13
	540 Move X20, [X31+8]
	541 Move X25, [X31+24]
	542 Compare X22, 0
	543 JumpIfEqual {565}
	544 Move X8, [X22]
	545 Move X1, [X26]
	546 NotImplemented "Instruction LDRH not yet implemented."
	547 Compare X9, 0
	548 JumpIfEqual {555}
	549 Move X10, [X8+176]
	550 Add X10, X10, 8
	551 NotImplemented "Instruction LDUR not yet implemented."
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Subtract X9, X9, 1
	554 Add X10, X10, 16
	555 Move X0, X22
	556 Move W2, W31
	557 Call 0x1C5D788
	558 NotImplemented "Instruction LDRSW not yet implemented."
	559 Add X8, X8, X9
	560 Add X0, X8, 312
	561 Move X8, [X0]
	562 Move X1, [X0+8]
	563 Move X0, X22
	564 NotImplemented "Instruction BLR not yet implemented."
	565 Compare X24, 0
	566 JumpIfNotEqual {678}
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Compare W19, 0
	569 JumpIfNotEqual {722}
	570 Move X19, 0x7D1000
	571 Move X19, [X19+2696]
	572 Move X0, X20
	573 Call SurfaceTopology.GetWindingOrder, X0
	574 Move X8, [X19]
	575 Move W20, W0
	576 Move W1, 3
	577 Move X0, X8
	578 Call 0x1C17D6C
	579 Move X8, [X21]
	580 Compare X8, 0
	581 JumpIfEqual {737}
	582 Move X19, 0x7A1000
	583 Move X19, [X19+3896]
	584 Move X22, X0
	585 Move X0, X8
	586 Move W1, W31
	587 Move X2, [X19]
	588 Call List`1<Int32>.get_Item, X0, X1
	589 Compare X25, 0
	590 JumpIfEqual {737}
	591 Move X21, 0x7D4000
	592 Move X21, [X21+776]
	593 Move W1, W0
	594 Move X0, X25
	595 Move X2, [X21]
	596 Call List`1<Vector2>.get_Item, X0, X1
	597 Compare X22, 0
	598 JumpIfEqual {737}
	599 Move W8, [X22+24]
	600 Compare W8, 0
	601 JumpIfEqual {672}
	602 Move X8, [X31+16]
	603 Move [X22+32], S0
	604 Move [X22+40], S1
	605 Move X0, [X8]
	606 Compare X0, 0
	607 JumpIfEqual {737}
	608 Move X2, [X19]
	609 Move W1, 1
	610 Call List`1<Int32>.get_Item, X0, X1
	611 Move X2, [X21]
	612 Move W1, W0
	613 Move X0, X25
	614 Call List`1<Vector2>.get_Item, X0, X1
	615 Move W8, [X22+24]
	616 NotImplemented "Instruction CMP not yet implemented."
	617 Move X8, [X31+16]
	618 Move [X22+40], S0
	619 Move [X22+48], S1
	620 Move X0, [X8]
	621 Compare X0, 0
	622 JumpIfEqual {737}
	623 Move X2, [X19]
	624 Move W1, 2
	625 Call List`1<Int32>.get_Item, X0, X1
	626 Move X2, [X21]
	627 Move W1, W0
	628 Move X0, X25
	629 Call List`1<Vector2>.get_Item, X0, X1
	630 Move W8, [X22+24]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X0, X22
	633 Move [X22+48], S0
	634 Move [X22+56], S1
	635 Call SurfaceTopology.GetWindingOrder, X0
	636 Move X8, [X31+16]
	637 NotImplemented "Instruction CMP not yet implemented."
	638 Move X0, [X8]
	639 Compare X0, 0
	640 JumpIfEqual {737}
	641 Move X8, 0x7D4000
	642 Move X8, [X8+696]
	643 Move X1, [X8]
	644 Call List`1<Int32>.Reverse, X0
	645 Move W0, 1
	646 Move X26, X19
	647 Call 0x1C17F20
	648 Move X26, X19
	649 Call 0x1C17F20
	650 Move X26, X19
	651 Call 0x1C17F20
	652 Move X26, X19
	653 Call 0x1C17F20
	654 Move X26, X19
	655 Call 0x1C17F20
	656 Move X26, X19
	657 Call 0x1C17F20
	658 Move X26, X19
	659 Call 0x1C17F20
	660 Move X26, X19
	661 Call 0x1C17F20
	662 Move X26, X19
	663 Call 0x1C17F20
	664 Move X26, X19
	665 Call 0x1C17F20
	666 Move X26, X19
	667 Call 0x1C17F20
	668 Move X26, X19
	669 Call 0x1C17F20
	670 Move X26, X19
	671 Call 0x1C17F20
	672 Call 0x1C17F28
	673 Call 0x1C181E0
	674 Call 0x1C17F20
	675 Call 0x1C17F20
	676 Move X26, X19
	677 Call 0x1C17F20
	678 Move X0, X24
	679 Call 0x1C17F18
	680 Move X23, X0
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move X0, X23
	683 Call 0x3EB2AD0
	684 Move X19, X0
	685 Move X0, 0x777000
	686 Move X0, [X0+2000]
	687 Call 0x1C17D08
	688 Move X8, [X19]
	689 Move X1, [X8]
	690 Call 0x1C18270
	691 Move TEMP, X0
	692 And TEMP, TEMP, 1
	693 Compare TEMP, 1
	694 JumpIfNotEqual {738}
	695 Move X19, [X19]
	696 Call 0x3EB2AE0
	697 Compare X19, 0
	698 JumpIfEqual {737}
	699 Move X8, [X19]
	700 Move X0, X19
	701 Move X9, [X8+360]
	702 Move X1, [X8+368]
	703 NotImplemented "Instruction BLR not yet implemented."
	704 Move X19, X0
	705 Move X0, 0x7D4000
	706 Move X0, [X0+736]
	707 Call 0x1C17D08
	708 Move X1, X19
	709 Move X2, X31
	710 Call String.Concat, X0, X1
	711 Move X19, X0
	712 Move X0, 0x7D1000
	713 Move X0, [X0+2768]
	714 Call 0x1C17D08
	715 Move W8, [X0+224]
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move X0, X19
	720 Move X1, X31
	721 Call Log.Info, X0
	722 Move W0, W31
	723 Move X20, [X31+112]
	724 Move X19, [X31+120]
	725 Move X22, [X31+96]
	726 Move X21, [X31+104]
	727 Move X24, [X31+80]
	728 Move X23, [X31+88]
	729 Move X26, [X31+64]
	730 Move X25, [X31+72]
	731 Move X28, [X31+48]
	732 Move X27, [X31+56]
	733 Move X29, [X31+32]
	734 Move X30, [X31+40]
	735 Add X31, X31, 128
	736 Return X0
	737 Call 0x1C17F20
	738 Move W0, 8
	739 Call 0x3EB2AF0
	740 Move X8, [X19]
	741 Move [X0], X8
	742 Move X1, 0x537000
	743 Add X1, X1, 3672
	744 Move X2, X31
	745 Call 0x3EB2B00
	746 Move X23, X0
	747 Call 0x3EB2AE0
	748 Move X26, X19
	749 Move X21, [X31+16]
	750 Move X23, X0
	751 Move X20, [X31+8]
	752 Move X25, [X31+24]
	753 NotImplemented "Instruction CMP not yet implemented."
	754 Move X0, X23
	755 Call 0x3EB2AD0
	756 Move X24, [X0]
	757 Call 0x3EB2AE0
	758 Move W19, W31
	759 Compare X22, 0
	760 JumpIfNotEqual {544}
	761 Move X24, X31
	762 Move X23, X0
	763 Compare X22, 0
	764 JumpIfEqual {786}
	765 Move X8, [X22]
	766 Move X1, [X26]
	767 NotImplemented "Instruction LDRH not yet implemented."
	768 Compare X9, 0
	769 JumpIfEqual {776}
	770 Move X10, [X8+176]
	771 Add X10, X10, 8
	772 NotImplemented "Instruction LDUR not yet implemented."
	773 NotImplemented "Instruction CMP not yet implemented."
	774 Subtract X9, X9, 1
	775 Add X10, X10, 16
	776 Move X0, X22
	777 Move W2, W31
	778 Call 0x1C5D788
	779 NotImplemented "Instruction LDRSW not yet implemented."
	780 Add X8, X8, X9
	781 Add X0, X8, 312
	782 Move X8, [X0]
	783 Move X1, [X0+8]
	784 Move X0, X22
	785 NotImplemented "Instruction BLR not yet implemented."
	786 Compare X24, 0
	787 JumpIfNotEqual {790}
	788 Move X0, X23
	789 Call 0x1D2D690
	790 Move X0, X24
	791 Call 0x1C17F18
	792 Call 0x1991590

