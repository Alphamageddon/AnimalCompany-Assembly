Type: UnityEngine.ProBuilder.MeshOperations.SurfaceTopology

Method: UnityEngine.ProBuilder.Face[] ToTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0397A2C4 LDRB W8, [X21 + 0xA22]
	0x0397A2C8 LDR X22, [X22 + 0x598]
	0x0397A2CC MOV X19, X1
	0x0397A2D0 MOV X20, X0
	0x0397A2D4 TBNZ X8, 0x0, 0x397A2F8
	0x0397A2D8 ADRP X0, 0x7D6000
	0x0397A2DC LDR X0, [X0 + 0x1E0]
	0x0397A2E0 BL 0x1C16CF4
	0x0397A2E4 ADRP X0, 0x779000
	0x0397A2E8 LDR X0, [X0 + 0x598]
	0x0397A2EC BL 0x1C16CF4
	0x0397A2F0 MOVZ W8, 0x1
	0x0397A2F4 STRB W8, [X21 + 0xA22]
	0x0397A2F8 LDR X0, [X22]
	0x0397A2FC LDR W8, [X0 + 0xE0]
	0x0397A300 CBNZ W8, 0x397A308
	0x0397A304 BL 0x1C16DFC
	0x0397A308 MOV X0, X20
	0x0397A30C MOV X1, X31
	0x0397A310 MOV X2, X31
	0x0397A314 BL 0x3C3883C
	0x0397A318 TBNZ X0, 0x0, 0x397A5B8
	0x0397A31C CBZ X19, 0x397A5D8
	0x0397A320 LDR X20, [X19 + 0x10]
	0x0397A324 CBZ X20, 0x397A5B4
	0x0397A328 LDR W8, [X20 + 0x18]
	0x0397A32C CMP W8, 0x6
	0x0397A330 B.NE 0x397A4D8
	0x0397A334 ADRP X8, 0x7D6000
	0x0397A338 LDR X8, [X8 + 0x1E0]
	0x0397A33C MOVZ W0, 0x1
	0x0397A340 MOVZ W1, 0x6
	0x0397A344 LDR X2, [X8]
	0x0397A348 BL 0x217E744
	0x0397A34C LDR X8, [X20 + 0x18]
	0x0397A350 SUB W10, W8, 0x1
	0x0397A354 CMP W10, 0x1
	0x0397A358 B.LT 0x397A418
	0x0397A35C AND X9, X8, 0x0
	0x0397A360 MOV X16, X31
	0x0397A364 SXTW X10, W10
	0x0397A368 ADD X11, X20, 0x24
	0x0397A36C ADD X12, X0, 0x24
	0x0397A370 SXTW X13, W9
	0x0397A374 SUB X14, X9, 0x1
	0x0397A378 MOVZ W15, 0x1
	0x0397A37C ADD X17, X16, 0x1
	0x0397A380 CMP X17, X13
	0x0397A384 B.GE 0x397A3FC
	0x0397A388 CMP X16, X9
	0x0397A38C B.CS 0x397A5B0
	0x0397A390 ADD X2, X20, X16, 0x2, LSL
	0x0397A394 ADD X3, X0, X16, 0x2, LSL
	0x0397A398 MOV X1, X31
	0x0397A39C ADD X2, X2, 0x20
	0x0397A3A0 ADD X3, X3, 0x20
	0x0397A3A4 CMP X14, X1
	0x0397A3A8 B.EQ 0x397A5B0
	0x0397A3AC LDR W4, [X2]
	0x0397A3B0 LDR W5, [X11, X1, LSL #2]
	0x0397A3B4 CMP W4, W5
	0x0397A3B8 B.NE 0x397A3F0
	0x0397A3BC CBZ X0, 0x397A5B4
	0x0397A3C0 LDR W4, [X0 + 0x18]
	0x0397A3C4 CMP X16, X4
	0x0397A3C8 B.CS 0x397A5B0
	0x0397A3CC LDR W5, [X3]
	0x0397A3D0 ADD X6, X15, X1
	0x0397A3D4 CMP X6, X4
	0x0397A3D8 ADD W5, W5, 0x1
	0x0397A3DC STR W5, [X3]
	0x0397A3E0 B.CS 0x397A5B0
	0x0397A3E4 LDR W4, [X12, X1, LSL #2]
	0x0397A3E8 ADD W4, W4, 0x1
	0x0397A3EC STR W4, [X12, X1, LSL #2]
	0x0397A3F0 ADD X1, X1, 0x1
	0x0397A3F4 CMP X14, X1
	0x0397A3F8 B.NE 0x397A3A4
	0x0397A3FC ADD X15, X15, 0x1
	0x0397A400 SUB X14, X14, 0x1
	0x0397A404 ADD X11, X11, 0x4
	0x0397A408 CMP X17, X10
	0x0397A40C ADD X12, X12, 0x4
	0x0397A410 MOV X16, X17
	0x0397A414 B.LT 0x397A37C
	0x0397A418 CBZ X0, 0x397A5B4
	0x0397A41C LDR W9, [X0 + 0x18]
	0x0397A420 CBZ W9, 0x397A5B0
	0x0397A424 CMP W9, 0x1
	0x0397A428 B.EQ 0x397A5B0
	0x0397A42C CMP W9, 0x2
	0x0397A430 B.LS 0x397A5B0
	0x0397A434 LDP W12, W11, [X0 + 0x20]
	0x0397A438 LDR W10, [X0 + 0x28]
	0x0397A43C ADD W13, W11, W12
	0x0397A440 ADD W13, W13, W10
	0x0397A444 CMP W13, 0x5
	0x0397A448 B.NE 0x397A4D8
	0x0397A44C CMP W9, 0x3
	0x0397A450 B.LS 0x397A5B0
	0x0397A454 CMP W9, 0x4
	0x0397A458 B.EQ 0x397A5B0
	0x0397A45C CMP W9, 0x5
	0x0397A460 B.LS 0x397A5B0
	0x0397A464 LDP W9, W13, [X0 + 0x2C]
	0x0397A468 LDR W14, [X0 + 0x34]
	0x0397A46C ADD W15, W13, W9
	0x0397A470 ADD W14, W15, W14
	0x0397A474 CMP W14, 0x5
	0x0397A478 B.NE 0x397A4D8
	0x0397A47C CMP W11, 0x1
	0x0397A480 MOVZ W14, 0x1
	0x0397A484 CINC X14, X14, NE
	0x0397A488 CMP W12, 0x1
	0x0397A48C CSEL X14, X31, X14, EQ
	0x0397A490 CMP W14, W8
	0x0397A494 B.CS 0x397A5B0
	0x0397A498 CMP W13, 0x1
	0x0397A49C MOVZ W13, 0x4
	0x0397A4A0 CINC X13, X13, NE
	0x0397A4A4 CMP W9, 0x1
	0x0397A4A8 MOVZ W9, 0x3
	0x0397A4AC CSEL X9, X9, X13, EQ
	0x0397A4B0 CMP W9, W8
	0x0397A4B4 B.CS 0x397A5B0
	0x0397A4B8 ADD X13, X20, X14, 0x2, LSL
	0x0397A4BC ADD X14, X20, X9, 0x2, LSL
	0x0397A4C0 LDR W9, [X13 + 0x20]
	0x0397A4C4 LDR W13, [X14 + 0x20]
	0x0397A4C8 CMP W12, 0x2
	0x0397A4CC B.NE 0x397A4EC
	0x0397A4D0 ADD X11, X20, 0x20
	0x0397A4D4 B 0x397A518
	0x0397A4D8 MOV W0, W31
	0x0397A4DC LDP X20, X19, [X31 + 0x20]
	0x0397A4E0 LDP X22, X21, [X31 + 0x10]
	0x0397A4E4 LDR X30, [X31], #0x30
	0x0397A4E8 RET
	0x0397A4EC CMP W11, 0x2
	0x0397A4F0 B.NE 0x397A504
	0x0397A4F4 CMP W8, 0x1
	0x0397A4F8 B.LS 0x397A5B0
	0x0397A4FC ADD X11, X20, 0x24
	0x0397A500 B 0x397A518
	0x0397A504 CMP W10, 0x2
	0x0397A508 B.NE 0x397A5A8
	0x0397A50C CMP W8, 0x2
	0x0397A510 B.LS 0x397A5B0
	0x0397A514 ADD X11, X20, 0x28
	0x0397A518 LDR W10, [X11]
	0x0397A51C STR W13, [X11]
	0x0397A520 LDR W11, [X0 + 0x2C]
	0x0397A524 CMP W11, 0x2
	0x0397A528 B.NE 0x397A540
	0x0397A52C CMP W8, 0x3
	0x0397A530 B.LS 0x397A5B0
	0x0397A534 LDR W11, [X20 + 0x2C]
	0x0397A538 CMP W11, W10
	0x0397A53C B.NE 0x397A588
	0x0397A540 LDR W11, [X0 + 0x30]
	0x0397A544 CMP W11, 0x2
	0x0397A548 B.NE 0x397A560
	0x0397A54C CMP W8, 0x4
	0x0397A550 B.LS 0x397A5B0
	0x0397A554 LDR W11, [X20 + 0x30]
	0x0397A558 CMP W11, W10
	0x0397A55C B.NE 0x397A590
	0x0397A560 LDR W11, [X0 + 0x34]
	0x0397A564 CMP W11, 0x2
	0x0397A568 B.NE 0x397A594
	0x0397A56C CMP W8, 0x5
	0x0397A570 B.LS 0x397A5B0
	0x0397A574 LDR W8, [X20 + 0x34]
	0x0397A578 CMP W8, W10
	0x0397A57C B.EQ 0x397A594
	0x0397A580 STR W9, [X20 + 0x34]
	0x0397A584 B 0x397A594
	0x0397A588 STR W9, [X20 + 0x2C]
	0x0397A58C B 0x397A594
	0x0397A590 STR W9, [X20 + 0x30]
	0x0397A594 MOV X0, X19
	0x0397A598 MOV X1, X31
	0x0397A59C BL 0x38FFC64
	0x0397A5A0 MOVZ W0, 0x1
	0x0397A5A4 B 0x397A4DC
	0x0397A5A8 MOVN W10, 0x0
	0x0397A5AC B 0x397A520
	0x0397A5B0 BL 0x1C16F28
	0x0397A5B4 BL 0x1C16F20
	0x0397A5B8 ADRP X0, 0x77E000
	0x0397A5BC LDR X0, [X0 + 0x528]
	0x0397A5C0 BL 0x1C16D08
	0x0397A5C4 BL 0x1C16F10
	0x0397A5C8 MOV X19, X0
	0x0397A5CC ADRP X0, 0x7D3000
	0x0397A5D0 LDR X0, [X0 + 0xE90]
	0x0397A5D4 B 0x397A5F4
	0x0397A5D8 ADRP X0, 0x77E000
	0x0397A5DC LDR X0, [X0 + 0x528]
	0x0397A5E0 BL 0x1C16D08
	0x0397A5E4 BL 0x1C16F10
	0x0397A5E8 MOV X19, X0
	0x0397A5EC ADRP X0, 0x7D4000
	0x0397A5F0 LDR X0, [X0 + 0x600]
	0x0397A5F4 BL 0x1C16D08
	0x0397A5F8 MOV X1, X0
	0x0397A5FC MOV X0, X19
	0x0397A600 MOV X2, X31
	0x0397A604 BL 0x330E100
	0x0397A608 ADRP X0, 0x7D6000
	0x0397A60C LDR X0, [X0 + 0x1E8]
	0x0397A610 BL 0x1C16D08
	0x0397A614 MOV X1, X0
	0x0397A618 MOV X0, X19
	0x0397A61C BL 0x1C16DEC
	0x0397A620 SUB X31, X31, 0xC0
	0x0397A624 STP X29, X30, [X31 + 0x60]
	0x0397A628 STP X28, X27, [X31 + 0x70]
	0x0397A62C STP X26, X25, [X31 + 0x80]
	0x0397A630 STP X24, X23, [X31 + 0x90]
	0x0397A634 STP X22, X21, [X31 + 0xA0]
	0x0397A638 STP X20, X19, [X31 + 0xB0]
	0x0397A63C ADRP X22, 0xA67000
	0x0397A640 ADRP X21, 0x7D4000
	0x0397A644 LDRB W8, [X22 + 0xA23]
	0x0397A648 LDR X21, [X21 + 0xB08]
	0x0397A64C MOV X19, X1
	0x0397A650 MOV X20, X0
	0x0397A654 TBNZ X8, 0x0, 0x397A75C
	0x0397A658 ADRP X0, 0x7D3000
	0x0397A65C LDR X0, [X0 + 0x9D8]
	0x0397A660 BL 0x1C16CF4
	0x0397A664 ADRP X0, 0x7D6000
	0x0397A668 LDR X0, [X0 + 0x1F0]
	0x0397A66C BL 0x1C16CF4
	0x0397A670 ADRP X0, 0x7D6000
	0x0397A674 LDR X0, [X0 + 0x1F8]
	0x0397A678 BL 0x1C16CF4
	0x0397A67C ADRP X0, 0x7D6000
	0x0397A680 LDR X0, [X0 + 0x200]
	0x0397A684 BL 0x1C16CF4
	0x0397A688 ADRP X0, 0x7D6000
	0x0397A68C LDR X0, [X0 + 0x208]
	0x0397A690 BL 0x1C16CF4
	0x0397A694 ADRP X0, 0x7D6000
	0x0397A698 LDR X0, [X0 + 0x210]
	0x0397A69C BL 0x1C16CF4
	0x0397A6A0 ADRP X0, 0x7D6000
	0x0397A6A4 LDR X0, [X0 + 0x218]
	0x0397A6A8 BL 0x1C16CF4
	0x0397A6AC ADRP X0, 0x7D6000
	0x0397A6B0 LDR X0, [X0 + 0x220]
	0x0397A6B4 BL 0x1C16CF4
	0x0397A6B8 ADRP X0, 0x7D3000
	0x0397A6BC LDR X0, [X0 + 0xE28]
	0x0397A6C0 BL 0x1C16CF4
	0x0397A6C4 ADRP X0, 0x7D5000
	0x0397A6C8 LDR X0, [X0 + 0x670]
	0x0397A6CC BL 0x1C16CF4
	0x0397A6D0 ADRP X0, 0x7D4000
	0x0397A6D4 LDR X0, [X0 + 0x890]
	0x0397A6D8 BL 0x1C16CF4
	0x0397A6DC ADRP X0, 0x7D4000
	0x0397A6E0 LDR X0, [X0 + 0x898]
	0x0397A6E4 BL 0x1C16CF4
	0x0397A6E8 ADRP X0, 0x779000
	0x0397A6EC LDR X0, [X0 + 0x758]
	0x0397A6F0 BL 0x1C16CF4
	0x0397A6F4 ADRP X0, 0x7D6000
	0x0397A6F8 LDR X0, [X0 + 0x228]
	0x0397A6FC BL 0x1C16CF4
	0x0397A700 ADRP X0, 0x7D6000
	0x0397A704 LDR X0, [X0 + 0x230]
	0x0397A708 BL 0x1C16CF4
	0x0397A70C ADRP X0, 0x7D4000
	0x0397A710 LDR X0, [X0 + 0xAF8]
	0x0397A714 BL 0x1C16CF4
	0x0397A718 ADRP X0, 0x7D4000
	0x0397A71C LDR X0, [X0 + 0xB00]
	0x0397A720 BL 0x1C16CF4
	0x0397A724 ADRP X0, 0x7D4000
	0x0397A728 LDR X0, [X0 + 0xB08]
	0x0397A72C BL 0x1C16CF4
	0x0397A730 ADRP X0, 0x7D6000
	0x0397A734 LDR X0, [X0 + 0x238]
	0x0397A738 BL 0x1C16CF4
	0x0397A73C ADRP X0, 0x7D6000
	0x0397A740 LDR X0, [X0 + 0x240]
	0x0397A744 BL 0x1C16CF4
	0x0397A748 ADRP X0, 0x7D6000
	0x0397A74C LDR X0, [X0 + 0x248]
	0x0397A750 BL 0x1C16CF4
	0x0397A754 MOVZ W8, 0x1
	0x0397A758 STRB W8, [X22 + 0xA23]
	0x0397A75C LDR X0, [X21]
	0x0397A760 MOVI V0.2D, 0x0
	0x0397A764 STR X31, [X31 + 0x50]
	0x0397A768 STP V0, V0, [X31 + 0x30]
	0x0397A76C ADRP X22, 0x7D4000
	0x0397A770 ADRP X21, 0x7D4000
	0x0397A774 LDR W8, [X0 + 0xE0]
	0x0397A778 LDR X22, [X22 + 0x898]
	0x0397A77C LDR X21, [X21 + 0x890]
	0x0397A780 CBNZ W8, 0x397A788
	0x0397A784 BL 0x1C16DFC
	0x0397A788 MOV X0, X20
	0x0397A78C MOV X1, X19
	0x0397A790 MOV W2, W31
	0x0397A794 MOV X3, X31
	0x0397A798 BL 0x3942FD0
	0x0397A79C LDR X8, [X22]
	0x0397A7A0 MOV X19, X0
	0x0397A7A4 MOV X0, X8
	0x0397A7A8 BL 0x1C16F10
	0x0397A7AC LDR X1, [X21]
	0x0397A7B0 MOV X20, X0
	0x0397A7B4 BL 0x2DBDE08
	0x0397A7B8 CBZ X19, 0x397AAB8
	0x0397A7BC LDR W8, [X19 + 0x18]
	0x0397A7C0 CMP W8, 0x1
	0x0397A7C4 B.LT 0x397A9F8
	0x0397A7C8 ADRP X26, 0x7D4000
	0x0397A7CC ADRP X27, 0x7D3000
	0x0397A7D0 ADRP X23, 0x7D6000
	0x0397A7D4 ADRP X28, 0x7D6000
	0x0397A7D8 LDR X26, [X26 + 0xB00]
	0x0397A7DC LDR X27, [X27 + 0xE28]
	0x0397A7E0 LDR X23, [X23 + 0x1F0]
	0x0397A7E4 LDR X28, [X28 + 0x218]
	0x0397A7E8 MOV W21, W31
	0x0397A7EC MOV W25, W31
	0x0397A7F0 MOVN W29, 0x0
	0x0397A7F4 LDR X2, [X26]
	0x0397A7F8 MOV X0, X19
	0x0397A7FC MOV W1, W21
	0x0397A800 BL 0x301BCCC
	0x0397A804 CBZ X0, 0x397AAB8
	0x0397A808 CBZ X20, 0x397AAB8
	0x0397A80C LDR X1, [X0 + 0x20]
	0x0397A810 LDR X2, [X27]
	0x0397A814 MOV X0, X20
	0x0397A818 BL 0x2DBE4B0
	0x0397A81C TBNZ X0, 0x0, 0x397A96C
	0x0397A820 ADRP X8, 0x7D6000
	0x0397A824 LDR X8, [X8 + 0x208]
	0x0397A828 LDR X0, [X8]
	0x0397A82C BL 0x1C16F10
	0x0397A830 ADRP X8, 0x7D6000
	0x0397A834 LDR X8, [X8 + 0x1F8]
	0x0397A838 MOV X22, X0
	0x0397A83C LDR X1, [X8]
	0x0397A840 BL 0x2A88E9C
	0x0397A844 LDR X2, [X26]
	0x0397A848 MOV X0, X19
	0x0397A84C MOV W1, W21
	0x0397A850 BL 0x301BCCC
	0x0397A854 MOVZ W1, 0x1
	0x0397A858 MOV X2, X22
	0x0397A85C BL 0x397AB34
	0x0397A860 CBZ X22, 0x397AAB8
	0x0397A864 LDR X1, [X23]
	0x0397A868 ADD X8, X31, 0x8
	0x0397A86C MOV X0, X22
	0x0397A870 BL 0x2A89B38

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xA68000
	013 Move X22, 0x77A000
	014 Move W8, [X21+2590]
	015 Move X22, [X22+1432]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {69}
	022 Move X0, 0x7D6000
	023 Move X0, [X0+1256]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D5000
	026 Move X0, [X0+992]
	027 Call 0x1C17CF4
	028 Move X0, 0x7D6000
	029 Move X0, [X0+1288]
	030 Call 0x1C17CF4
	031 Move X0, 0x77A000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x7D4000
	035 Move X0, [X0+3504]
	036 Call 0x1C17CF4
	037 Move X0, 0x7D4000
	038 Move X0, [X0+3512]
	039 Call 0x1C17CF4
	040 Move X0, 0x77A000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x7D6000
	044 Move X0, [X0+1720]
	045 Call 0x1C17CF4
	046 Move X0, 0x7D4000
	047 Move X0, [X0+3552]
	048 Call 0x1C17CF4
	049 Move X0, 0x7D6000
	050 Move X0, [X0+784]
	051 Call 0x1C17CF4
	052 Move X0, 0x7D4000
	053 Move X0, [X0+3560]
	054 Call 0x1C17CF4
	055 Move X0, 0x7D6000
	056 Move X0, [X0+792]
	057 Call 0x1C17CF4
	058 Move X0, 0x77A000
	059 Move X0, [X0+1432]
	060 Call 0x1C17CF4
	061 Move X0, 0x7D7000
	062 Move X0, [X0+424]
	063 Call 0x1C17CF4
	064 Move X0, 0x7D7000
	065 Move X0, [X0+432]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+2590], W8
	069 Move X0, [X22]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {319}
	082 Compare X20, 0
	083 JumpIfEqual {326}
	084 Compare X19, 0
	085 JumpIfEqual {344}
	086 Move X21, 0x7D4000
	087 Move X22, 0x7D4000
	088 Move X23, 0x7D6000
	089 Move X25, 0x7D6000
	090 Move X26, 0x7D4000
	091 Move X21, [X21+3560]
	092 Move X22, [X22+3552]
	093 Move X23, [X23+792]
	094 Move X25, [X25+784]
	095 Move X26, [X26+3504]
	096 Move X0, X19
	097 Move X1, X31
	098 Move X2, X31
	099 Call ProBuilderMesh.GetVertices, X0, X1
	100 Move X8, [X21]
	101 Move X21, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X2, [X22]
	105 Move X1, X21
	106 Move X22, X0
	107 Call List`1<Object>..ctor, X0, X1
	108 Move X0, X19
	109 Move X1, X31
	110 Call ProBuilderMesh.get_sharedVertexLookup, X0
	111 Move X8, [X23]
	112 Move X24, X0
	113 Move X0, X8
	114 Call 0x1C17F10
	115 Move X1, [X25]
	116 Move X21, X0
	117 Call List`1<Object>..ctor, X0
	118 Move X8, [X20]
	119 Move X1, [X26]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare X9, 0
	122 JumpIfEqual {129}
	123 Move X10, [X8+176]
	124 Add X10, X10, 8
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Subtract X9, X9, 1
	128 Add X10, X10, 16
	129 Move X0, X20
	130 Move W2, W31
	131 Call 0x1C5D788
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Add X8, X8, X9
	134 Add X0, X8, 312
	135 Move X8, [X0]
	136 Move X1, [X0+8]
	137 Move X25, 0x77A000
	138 Move X25, [X25+3584]
	139 Move X0, X20
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X23, X0
	142 Compare X0, 0
	143 JumpIfEqual {345}
	144 Move X26, 0x77A000
	145 Move X27, 0x7D4000
	146 Move X28, 0x7D6000
	147 Move X26, [X26+3608]
	148 Move X27, [X27+3512]
	149 Move X28, [X28+1720]
	150 Move X8, [X23]
	151 Move X1, [X26]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X23
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X1, [X0+8]
	169 Move X0, X23
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {205}
	175 Move X8, [X23]
	176 Move X1, [X27]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X23
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X23
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X1, X22
	197 Move X2, X24
	198 Call SurfaceTopology.BreakFaceIntoTris, X0, X1, X2
	199 Move X1, X0
	200 Compare X21, 0
	201 JumpIfEqual {318}
	202 Move X2, [X28]
	203 Move X0, X21
	204 Call List`1<Object>.AddRange, X0, X1
	205 Move X24, X31
	206 Move W26, 10
	207 Compare X23, 0
	208 JumpIfEqual {230}
	209 Move X8, [X23]
	210 Move X1, [X25]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X23
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X23
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X24, 0
	231 JumpIfNotEqual {346}
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Compare W26, 0
	234 JumpIfNotEqual {306}
	235 Move X23, 0x7D7000
	236 Move X23, [X23+432]
	237 Move X0, X21
	238 Move X1, X19
	239 Move X2, X22
	240 Move X3, X31
	241 Move X4, X31
	242 Call FaceRebuildData.Apply, X0, X1, X2, X3
	243 Move X0, X19
	244 Move X1, X20
	245 Move X2, X31
	246 Call DeleteElements.DeleteFaces, X0, X1
	247 Move X0, X19
	248 Move W1, W31
	249 Move X2, X31
	250 Call ProBuilderMesh.ToMesh, X0, X1
	251 Move X8, [X23]
	252 Move W9, [X8+224]
	253 Compare W9, 0
	254 JumpIfNotEqual {258}
	255 Move X0, X8
	256 Call 0x1C17DFC
	257 Move X8, [X23]
	258 Move X9, [X8+184]
	259 Move X24, 0x7D6000
	260 Move X22, 0x7D5000
	261 Move X19, [X9+8]
	262 Move X24, [X24+1256]
	263 Move X22, [X22+992]
	264 Compare X19, 0
	265 JumpIfNotEqual {288}
	266 Move W9, [X8+224]
	267 Compare W9, 0
	268 JumpIfNotEqual {272}
	269 Move X0, X8
	270 Call 0x1C17DFC
	271 Move X8, [X23]
	272 Move X9, 0x7D6000
	273 Move X8, [X8+184]
	274 Move X9, [X9+1288]
	275 Move X20, [X8]
	276 Move X0, [X9]
	277 Call 0x1C17F10
	278 Move X8, 0x7D7000
	279 Move X8, [X8+424]
	280 Move X1, X20
	281 Move X3, X31
	282 Move X19, X0
	283 Move X2, [X8]
	284 Call Func`2<Object, Object>..ctor, X0, X1, X2
	285 Move X8, [X23]
	286 Move X8, [X8+184]
	287 Move [X8+8], X19
	288 Move X2, [X24]
	289 Move X0, X21
	290 Move X1, X19
	291 Call Enumerable.Select, X0, X1
	292 Move X1, [X22]
	293 Move X20, [X31+80]
	294 Move X19, [X31+88]
	295 Move X22, [X31+64]
	296 Move X21, [X31+72]
	297 Move X24, [X31+48]
	298 Move X23, [X31+56]
	299 Move X26, [X31+32]
	300 Move X25, [X31+40]
	301 Move X28, [X31+16]
	302 Move X27, [X31+24]
	303 Move X30, [X31+96]
	304 Call Enumerable.ToArray, X0
	305 Return X0
	306 Move X20, [X31+80]
	307 Move X19, [X31+88]
	308 Move X22, [X31+64]
	309 Move X21, [X31+72]
	310 Move X24, [X31+48]
	311 Move X23, [X31+56]
	312 Move X26, [X31+32]
	313 Move X25, [X31+40]
	314 Move X28, [X31+16]
	315 Move X27, [X31+24]
	316 Move X30, [X31+96]
	317 Return X0
	318 Call 0x1C17F20
	319 Move X0, 0x77F000
	320 Move X0, [X0+1320]
	321 Call 0x1C17D08
	322 Call 0x1C17F10
	323 Move X19, X0
	324 Move X0, 0x7D4000
	325 Move X0, [X0+3728]
	326 Move X0, 0x77F000
	327 Move X0, [X0+1320]
	328 Call 0x1C17D08
	329 Call 0x1C17F10
	330 Move X19, X0
	331 Move X0, 0x7D5000
	332 Move X0, [X0+1600]
	333 Call 0x1C17D08
	334 Move X1, X0
	335 Move X0, X19
	336 Move X2, X31
	337 Call ArgumentNullException..ctor, X0, X1
	338 Move X0, 0x7D7000
	339 Move X0, [X0+440]
	340 Call 0x1C17D08
	341 Move X1, X0
	342 Move X0, X19
	343 Call 0x1C17DEC
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Move X0, X24
	347 Call 0x1C17F18
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Call 0x3EB2AD0
	350 Move X24, [X0]
	351 Call 0x3EB2AE0
	352 Move W26, W31
	353 Compare X23, 0
	354 JumpIfNotEqual {209}
	355 Move X19, X0
	356 Move X24, X31
	357 Move X19, X0
	358 Compare X23, 0
	359 JumpIfEqual {381}
	360 Move X8, [X23]
	361 Move X1, [X25]
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Compare X9, 0
	364 JumpIfEqual {371}
	365 Move X10, [X8+176]
	366 Add X10, X10, 8
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Subtract X9, X9, 1
	370 Add X10, X10, 16
	371 Move X0, X23
	372 Move W2, W31
	373 Call 0x1C5D788
	374 NotImplemented "Instruction LDRSW not yet implemented."
	375 Add X8, X8, X9
	376 Add X0, X8, 312
	377 Move X8, [X0]
	378 Move X1, [X0+8]
	379 Move X0, X23
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Compare X24, 0
	382 JumpIfNotEqual {385}
	383 Move X0, X19
	384 Call 0x1D2D690
	385 Move X0, X24
	386 Call 0x1C17F18
	387 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.FaceRebuildData> BreakFaceIntoTris(UnityEngine.ProBuilder.Face face, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x0397A874 LDUR V0, [X31 + 0x8]
	0x0397A878 LDUR V1, [X31 + 0x18]
	0x0397A87C LDR X8, [X31 + 0x28]
	0x0397A880 MOV W24, W31
	0x0397A884 STP V0, V1, [X31 + 0x30]
	0x0397A888 STR X8, [X31 + 0x50]
	0x0397A88C LDR X1, [X28]
	0x0397A890 ADD X0, X31, 0x30
	0x0397A894 BL 0x2C05EE8
	0x0397A898 TBZ X0, 0x0, 0x397A8B0
	0x0397A89C LDRB W8, [X31 + 0x48]
	0x0397A8A0 CMP W8, 0x0
	0x0397A8A4 CSNEG W8, W29, W29, EQ
	0x0397A8A8 ADD W24, W8, W24
	0x0397A8AC B 0x397A88C
	0x0397A8B0 ADRP X8, 0x7D6000
	0x0397A8B4 LDR X8, [X8 + 0x210]
	0x0397A8B8 ADD X0, X31, 0x30
	0x0397A8BC LDR X1, [X8]
	0x0397A8C0 BL 0x2C06004
	0x0397A8C4 LDR X1, [X23]
	0x0397A8C8 ADD X8, X31, 0x8
	0x0397A8CC MOV X0, X22
	0x0397A8D0 BL 0x2A89B38
	0x0397A8D4 LDUR V0, [X31 + 0x8]
	0x0397A8D8 LDUR V1, [X31 + 0x18]
	0x0397A8DC LDR X8, [X31 + 0x28]
	0x0397A8E0 STP V0, V1, [X31 + 0x30]
	0x0397A8E4 STR X8, [X31 + 0x50]
	0x0397A8E8 LDR X1, [X28]
	0x0397A8EC ADD X0, X31, 0x30
	0x0397A8F0 BL 0x2C05EE8
	0x0397A8F4 TBZ X0, 0x0, 0x397A92C
	0x0397A8F8 LDRB W8, [X31 + 0x48]
	0x0397A8FC CMP W24, 0x1
	0x0397A900 CSET W9, LT
	0x0397A904 CMP W8, 0x0
	0x0397A908 CSET W8, NE
	0x0397A90C EOR W8, W9, W8, 0x0
	0x0397A910 TBNZ X8, 0x0, 0x397A8E8
	0x0397A914 LDR X0, [X31 + 0x40]
	0x0397A918 ADD W25, W25, 0x1
	0x0397A91C CBZ X0, 0x397A980
	0x0397A920 MOV X1, X31
	0x0397A924 BL 0x3900E24
	0x0397A928 B 0x397A8E8
	0x0397A92C ADRP X8, 0x7D6000
	0x0397A930 LDR X8, [X8 + 0x210]
	0x0397A934 ADD X0, X31, 0x30
	0x0397A938 LDR X1, [X8]
	0x0397A93C BL 0x2C06004
	0x0397A940 ADRP X8, 0x7D6000
	0x0397A944 LDR X8, [X8 + 0x200]
	0x0397A948 MOV X0, X22
	0x0397A94C LDR X1, [X8]
	0x0397A950 BL 0x2A89534
	0x0397A954 ADRP X8, 0x7D5000
	0x0397A958 LDR X8, [X8 + 0x670]
	0x0397A95C MOV X1, X0
	0x0397A960 MOV X0, X20
	0x0397A964 LDR X2, [X8]
	0x0397A968 BL 0x2DBEF40
	0x0397A96C LDR W8, [X19 + 0x18]
	0x0397A970 ADD W21, W21, 0x1
	0x0397A974 CMP W21, W8
	0x0397A978 B.LT 0x397A7F4
	0x0397A97C B 0x397A9FC
	0x0397A980 BL 0x1C16F20
	0x0397A984 B 0x397AADC
	0x0397A988 B 0x397A990
	0x0397A98C B 0x397A990
	0x0397A990 CMP W1, 0x1
	0x0397A994 B.NE 0x397AABC
	0x0397A998 BL 0x3EB1AD0
	0x0397A99C LDR X24, [X0]
	0x0397A9A0 BL 0x3EB1AE0
	0x0397A9A4 ADRP X8, 0x7D6000
	0x0397A9A8 LDR X8, [X8 + 0x210]
	0x0397A9AC ADD X0, X31, 0x30
	0x0397A9B0 LDR X1, [X8]
	0x0397A9B4 BL 0x2C06004
	0x0397A9B8 CBZ X24, 0x397A940
	0x0397A9BC B 0x397AAC8
	0x0397A9C0 CMP W1, 0x1
	0x0397A9C4 B.NE 0x397AAD0
	0x0397A9C8 BL 0x3EB1AD0
	0x0397A9CC LDR X8, [X0]
	0x0397A9D0 STR X8, [X31]
	0x0397A9D4 BL 0x3EB1AE0
	0x0397A9D8 ADRP X8, 0x7D6000
	0x0397A9DC LDR X8, [X8 + 0x210]
	0x0397A9E0 ADD X0, X31, 0x30
	0x0397A9E4 LDR X1, [X8]
	0x0397A9E8 BL 0x2C06004
	0x0397A9EC LDR X0, [X31]
	0x0397A9F0 CBZ X0, 0x397A8C4
	0x0397A9F4 BL 0x1C16F18
	0x0397A9F8 MOV W25, W31
	0x0397A9FC ADRP X19, 0x7D3000
	0x0397AA00 LDR X19, [X19 + 0x9D8]
	0x0397AA04 CMP W25, 0x1
	0x0397AA08 B.LT 0x397AA20
	0x0397AA0C B.NE 0x397AA40
	0x0397AA10 ADRP X8, 0x7D6000
	0x0397AA14 LDR X8, [X8 + 0x240]
	0x0397AA18 LDR X20, [X8]
	0x0397AA1C B 0x397AA78
	0x0397AA20 LDR X0, [X19]
	0x0397AA24 BL 0x1C16F10
	0x0397AA28 ADRP X8, 0x7D6000
	0x0397AA2C LDR X8, [X8 + 0x248]
	0x0397AA30 MOV X19, X0
	0x0397AA34 MOVZ W1, 0x3
	0x0397AA38 LDR X2, [X8]
	0x0397AA3C B 0x397AA8C
	0x0397AA40 ADRP X8, 0x779000
	0x0397AA44 LDR X8, [X8 + 0x758]
	0x0397AA48 ADD X1, X31, 0x8
	0x0397AA4C STR W25, [X31 + 0x8]
	0x0397AA50 LDR X0, [X8]
	0x0397AA54 BL 0x1C16E04
	0x0397AA58 ADRP X8, 0x7D6000
	0x0397AA5C LDR X8, [X8 + 0x238]
	0x0397AA60 MOV X1, X0
	0x0397AA64 MOV X2, X31
	0x0397AA68 LDR X8, [X8]
	0x0397AA6C MOV X0, X8
	0x0397AA70 BL 0x321EFD0
	0x0397AA74 MOV X20, X0
	0x0397AA78 LDR X0, [X19]
	0x0397AA7C BL 0x1C16F10
	0x0397AA80 MOV X19, X0
	0x0397AA84 MOV W1, W31
	0x0397AA88 MOV X2, X20
	0x0397AA8C MOV X3, X31
	0x0397AA90 BL 0x38F6550
	0x0397AA94 MOV X0, X19
	0x0397AA98 LDP X20, X19, [X31 + 0xB0]
	0x0397AA9C LDP X22, X21, [X31 + 0xA0]
	0x0397AAA0 LDP X24, X23, [X31 + 0x90]
	0x0397AAA4 LDP X26, X25, [X31 + 0x80]
	0x0397AAA8 LDP X28, X27, [X31 + 0x70]
	0x0397AAAC LDP X29, X30, [X31 + 0x60]
	0x0397AAB0 ADD X31, X31, 0xC0
	0x0397AAB4 RET
	0x0397AAB8 BL 0x1C16F20
	0x0397AABC MOV X19, X0
	0x0397AAC0 MOV X24, X31
	0x0397AAC4 B 0x397AB08
	0x0397AAC8 MOV X0, X24
	0x0397AACC BL 0x1C16F18
	0x0397AAD0 MOV X19, X0
	0x0397AAD4 MOV X20, X31
	0x0397AAD8 B 0x397AAE4
	0x0397AADC LDR X20, [X31]
	0x0397AAE0 MOV X19, X0
	0x0397AAE4 ADRP X8, 0x7D6000
	0x0397AAE8 LDR X8, [X8 + 0x210]
	0x0397AAEC LDR X1, [X8]
	0x0397AAF0 ADD X0, X31, 0x30
	0x0397AAF4 BL 0x2C06004
	0x0397AAF8 CBZ X20, 0x397AB20
	0x0397AAFC MOV X0, X20
	0x0397AB00 BL 0x1C16F18
	0x0397AB04 MOV X19, X0
	0x0397AB08 ADRP X8, 0x7D6000
	0x0397AB0C LDR X8, [X8 + 0x210]
	0x0397AB10 LDR X1, [X8]
	0x0397AB14 ADD X0, X31, 0x30
	0x0397AB18 BL 0x2C06004
	0x0397AB1C CBNZ X24, 0x397AB28
	0x0397AB20 MOV X0, X19
	0x0397AB24 BL 0x1D2C690
	0x0397AB28 MOV X0, X24
	0x0397AB2C BL 0x1C16F18
	0x0397AB30 BL 0x1990590
	0x0397AB34 STP X30, X25, [X31 - 0x40]!
	0x0397AB38 STP X24, X23, [X31 + 0x10]
	0x0397AB3C STP X22, X21, [X31 + 0x20]
	0x0397AB40 STP X20, X19, [X31 + 0x30]
	0x0397AB44 ADRP X22, 0xA67000
	0x0397AB48 LDRB W8, [X22 + 0xA24]
	0x0397AB4C MOV X19, X2
	0x0397AB50 MOV W20, W1
	0x0397AB54 MOV X21, X0
	0x0397AB58 TBNZ X8, 0x0, 0x397AB7C
	0x0397AB5C ADRP X0, 0x7D6000
	0x0397AB60 LDR X0, [X0 + 0x250]
	0x0397AB64 BL 0x1C16CF4
	0x0397AB68 ADRP X0, 0x7D6000
	0x0397AB6C LDR X0, [X0 + 0x258]
	0x0397AB70 BL 0x1C16CF4
	0x0397AB74 MOVZ W8, 0x1
	0x0397AB78 STRB W8, [X22 + 0xA24]
	0x0397AB7C CBZ X21, 0x397AC1C
	0x0397AB80 CBZ X19, 0x397AC1C
	0x0397AB84 ADRP X8, 0x7D6000
	0x0397AB88 LDR X8, [X8 + 0x250]
	0x0397AB8C LDR X1, [X21 + 0x20]
	0x0397AB90 ADRP X25, 0x7D6000
	0x0397AB94 AND W2, W20, 0x1
	0x0397AB98 LDR X3, [X8]
	0x0397AB9C LDR X25, [X25 + 0x258]
	0x0397ABA0 MOV X0, X19
	0x0397ABA4 BL 0x2A89740
	0x0397ABA8 MOV X22, X21
	0x0397ABAC CBZ X22, 0x397AC1C
	0x0397ABB0 LDR X23, [X22 + 0x38]
	0x0397ABB4 CBZ X23, 0x397ABFC
	0x0397ABB8 LDR X1, [X23 + 0x20]
	0x0397ABBC LDR X2, [X25]
	0x0397ABC0 MOV X0, X19
	0x0397ABC4 BL 0x2A89948
	0x0397ABC8 TBNZ X0, 0x0, 0x397ABFC
	0x0397ABCC MOV X0, X22
	0x0397ABD0 BL 0x397AC20
	0x0397ABD4 MOV X24, X0
	0x0397ABD8 MOV X0, X23
	0x0397ABDC BL 0x397AC20
	0x0397ABE0 CMP W24, W0
	0x0397ABE4 CSET W8, EQ
	0x0397ABE8 EOR W8, W8, W20, 0x0
	0x0397ABEC AND W1, W8, 0x1
	0x0397ABF0 MOV X0, X23
	0x0397ABF4 MOV X2, X19
	0x0397ABF8 BL 0x397AB34
	0x0397ABFC LDR X22, [X22 + 0x28]
	0x0397AC00 CMP X22, X21
	0x0397AC04 B.NE 0x397ABAC
	0x0397AC08 LDP X20, X19, [X31 + 0x30]
	0x0397AC0C LDP X22, X21, [X31 + 0x20]
	0x0397AC10 LDP X24, X23, [X31 + 0x10]
	0x0397AC14 LDP X30, X25, [X31], #0x40
	0x0397AC18 RET
	0x0397AC1C BL 0x1C16F20
	0x0397AC20 STR X30, [X31 - 0x20]!
	0x0397AC24 STP X20, X19, [X31 + 0x10]
	0x0397AC28 ADRP X20, 0xA67000
	0x0397AC2C LDRB W8, [X20 + 0xA26]
	0x0397AC30 MOV X19, X0
	0x0397AC34 TBNZ X8, 0x0, 0x397AC4C
	0x0397AC38 ADRP X0, 0x7A1000
	0x0397AC3C LDR X0, [X0 + 0x600]
	0x0397AC40 BL 0x1C16CF4
	0x0397AC44 MOVZ W8, 0x1
	0x0397AC48 STRB W8, [X20 + 0xA26]
	0x0397AC4C CBZ X19, 0x397AD78
	0x0397AC50 LDR X8, [X19 + 0x20]
	0x0397AC54 CBZ X8, 0x397AD78
	0x0397AC58 LDR X8, [X8 + 0x10]
	0x0397AC5C CBZ X8, 0x397AD78
	0x0397AC60 LDR W9, [X8 + 0x18]
	0x0397AC64 CMP W9, 0x1
	0x0397AC68 B.LT 0x397AD1C
	0x0397AC6C LDP W10, W11, [X19 + 0x10]
	0x0397AC70 MOV W13, W31
	0x0397AC74 CMP W13, W9
	0x0397AC78 B.CS 0x397AD74
	0x0397AC7C ADD W14, W13, 0x1
	0x0397AC80 CMP W14, W9
	0x0397AC84 B.CS 0x397AD74
	0x0397AC88 ADD W12, W14, 0x1
	0x0397AC8C CMP W12, W9
	0x0397AC90 B.CS 0x397AD74
	0x0397AC94 ADD X15, X8, W13, 0x2, SXTW
	0x0397AC98 ADD W13, W13, 0x2
	0x0397AC9C ADD X16, X8, W14, 0x2, SXTW
	0x0397ACA0 LDR W14, [X15 + 0x20]
	0x0397ACA4 ADD X13, X8, W13, 0x2, SXTW
	0x0397ACA8 LDR W15, [X16 + 0x20]
	0x0397ACAC LDR W13, [X13 + 0x20]
	0x0397ACB0 CMP W14, W10
	0x0397ACB4 B.NE 0x397ACC0
	0x0397ACB8 CMP W15, W11
	0x0397ACBC B.EQ 0x397AD44
	0x0397ACC0 CMP W14, W11
	0x0397ACC4 B.NE 0x397ACD0
	0x0397ACC8 CMP W15, W10
	0x0397ACCC B.EQ 0x397AD50
	0x0397ACD0 CMP W15, W10
	0x0397ACD4 B.NE 0x397ACE0
	0x0397ACD8 CMP W13, W11
	0x0397ACDC B.EQ 0x397AD44
	0x0397ACE0 CMP W15, W11
	0x0397ACE4 B.NE 0x397ACF0
	0x0397ACE8 CMP W13, W10
	0x0397ACEC B.EQ 0x397AD50
	0x0397ACF0 CMP W14, W11
	0x0397ACF4 B.NE 0x397AD00
	0x0397ACF8 CMP W13, W10
	0x0397ACFC B.EQ 0x397AD44
	0x0397AD00 CMP W14, W10
	0x0397AD04 B.NE 0x397AD10
	0x0397AD08 CMP W13, W11
	0x0397AD0C B.EQ 0x397AD50
	0x0397AD10 ADD W13, W12, 0x1
	0x0397AD14 CMP W13, W9
	0x0397AD18 B.LT 0x397AC74
	0x0397AD1C ADRP X19, 0x7A1000
	0x0397AD20 LDR X19, [X19 + 0x600]
	0x0397AD24 LDR X0, [X19]
	0x0397AD28 LDR W8, [X0 + 0xE0]
	0x0397AD2C CBNZ W8, 0x397AD38
	0x0397AD30 BL 0x1C16DFC
	0x0397AD34 LDR X0, [X19]
	0x0397AD38 LDR X8, [X0 + 0xB8]
	0x0397AD3C LDR X8, [X8]
	0x0397AD40 B 0x397AD48
	0x0397AD44 LDR X8, [X19 + 0x18]
	0x0397AD48 STR X8, [X31 + 0x8]
	0x0397AD4C B 0x397AD64
	0x0397AD50 LDP W2, W1, [X19 + 0x18]
	0x0397AD54 ADD X0, X31, 0x8
	0x0397AD58 MOV X3, X31
	0x0397AD5C STR X31, [X31 + 0x8]
	0x0397AD60 BL 0x38FDC24
	0x0397AD64 LDR X0, [X31 + 0x8]
	0x0397AD68 LDP X20, X19, [X31 + 0x10]
	0x0397AD6C LDR X30, [X31], #0x20
	0x0397AD70 RET
	0x0397AD74 BL 0x1C16F28
	0x0397AD78 BL 0x1C16F20
	0x0397AD7C STP X30, X21, [X31 - 0x20]!
	0x0397AD80 STP X20, X19, [X31 + 0x10]
	0x0397AD84 ADRP X20, 0xA67000
	0x0397AD88 LDRB W8, [X20 + 0xA25]
	0x0397AD8C MOV X19, X0
	0x0397AD90 TBNZ X8, 0x0, 0x397ADCC
	0x0397AD94 ADRP X0, 0x7D3000
	0x0397AD98 LDR X0, [X0 + 0x9D8]
	0x0397AD9C BL 0x1C16CF4
	0x0397ADA0 ADRP X0, 0x7D6000
	0x0397ADA4 LDR X0, [X0 + 0x260]
	0x0397ADA8 BL 0x1C16CF4
	0x0397ADAC ADRP X0, 0x7D6000
	0x0397ADB0 LDR X0, [X0 + 0x268]
	0x0397ADB4 BL 0x1C16CF4
	0x0397ADB8 ADRP X0, 0x7D6000
	0x0397ADBC LDR X0, [X0 + 0x270]
	0x0397ADC0 BL 0x1C16CF4
	0x0397ADC4 MOVZ W8, 0x1
	0x0397ADC8 STRB W8, [X20 + 0xA25]
	0x0397ADCC ADRP X21, 0x7D3000
	0x0397ADD0 LDR X21, [X21 + 0x9D8]
	0x0397ADD4 CBZ X19, 0x397AE34
	0x0397ADD8 LDR X8, [X19 + 0x38]
	0x0397ADDC CBZ X8, 0x397AE34
	0x0397ADE0 MOV X0, X19
	0x0397ADE4 BL 0x397AC20
	0x0397ADE8 LDR X8, [X19 + 0x38]
	0x0397ADEC MOV X20, X0
	0x0397ADF0 MOV X0, X8
	0x0397ADF4 BL 0x397AC20
	0x0397ADF8 CMP W20, W0
	0x0397ADFC B.NE 0x397AE54
	0x0397AE00 LDR X8, [X19 + 0x38]
	0x0397AE04 CBZ X8, 0x397AE88
	0x0397AE08 LDR X0, [X8 + 0x20]
	0x0397AE0C CBZ X0, 0x397AE88
	0x0397AE10 MOV X1, X31
	0x0397AE14 BL 0x3900E24
	0x0397AE18 LDR X0, [X21]
	0x0397AE1C BL 0x1C16F10
	0x0397AE20 ADRP X8, 0x7D6000
	0x0397AE24 LDR X8, [X8 + 0x260]
	0x0397AE28 MOV X19, X0
	0x0397AE2C MOV W1, W31
	0x0397AE30 B 0x397AE6C
	0x0397AE34 LDR X0, [X21]
	0x0397AE38 ADRP X19, 0x7D6000
	0x0397AE3C LDR X19, [X19 + 0x268]
	0x0397AE40 BL 0x1C16F10
	0x0397AE44 LDR X2, [X19]
	0x0397AE48 MOV X19, X0
	0x0397AE4C MOVZ W1, 0x1
	0x0397AE50 B 0x397AE70
	0x0397AE54 LDR X0, [X21]
	0x0397AE58 BL 0x1C16F10
	0x0397AE5C ADRP X8, 0x7D6000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0xA68000
	015 Move W8, [X21+2591]
	016 Move X19, X2
	017 Move X28, X1
	018 Move X27, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {67}
	023 Move X0, 0x7D4000
	024 Move X0, [X0+3200]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D6000
	027 Move X0, [X0+496]
	028 Call 0x1C17CF4
	029 Move X0, 0x7D5000
	030 Move X0, [X0+1376]
	031 Call 0x1C17CF4
	032 Move X0, 0x77B000
	033 Move X0, [X0+3672]
	034 Call 0x1C17CF4
	035 Move X0, 0x77B000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x7D6000
	039 Move X0, [X0+776]
	040 Call 0x1C17CF4
	041 Move X0, 0x7D6000
	042 Move X0, [X0+448]
	043 Call 0x1C17CF4
	044 Move X0, 0x77E000
	045 Move X0, [X0+2928]
	046 Call 0x1C17CF4
	047 Move X0, 0x7D7000
	048 Move X0, [X0+448]
	049 Call 0x1C17CF4
	050 Move X0, 0x7D6000
	051 Move X0, [X0+456]
	052 Call 0x1C17CF4
	053 Move X0, 0x7D6000
	054 Move X0, [X0+464]
	055 Call 0x1C17CF4
	056 Move X0, 0x77B000
	057 Move X0, [X0+3632]
	058 Call 0x1C17CF4
	059 Move X0, 0x7D4000
	060 Move X0, [X0+3560]
	061 Call 0x1C17CF4
	062 Move X0, 0x7D6000
	063 Move X0, [X0+792]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+2591], W8
	067 Compare X27, 0
	068 JumpIfEqual {393}
	069 Move X25, [X27+16]
	070 Compare X25, 0
	071 JumpIfEqual {393}
	072 Move X8, 0x7D6000
	073 Move X8, [X8+792]
	074 Move X21, 0x7D7000
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Move X0, [X8]
	077 Move X21, [X21+448]
	078 Call 0x1C17F10
	079 Move W8, 0x5556
	080 NotImplemented "Instruction MOVK not yet implemented."
	081 Move X2, [X21]
	082 Multiply X8, X23, X8
	083 Move X9, X8
	084 ShiftRight X9, 63
	085 And X9, X9, 0x7FFFFFFF
	086 Move X8, X8
	087 ShiftRight X8, 32
	088 And X8, X8, 0x7FFFFFFF
	089 Add W1, W8, W9
	090 Move X22, X0
	091 Call List`1<Object>..ctor, X0, X1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X31+16], X23
	094 Move X29, 0x7D4000
	095 Move X21, 0x77B000
	096 Move X29, [X29+3200]
	097 Move X21, [X21+3600]
	098 Move W26, W31
	099 Move [X31+24], X28
	100 Move [X31+8], X27
	101 Move X8, 0x7D6000
	102 Move X8, [X8+496]
	103 Move X0, [X8]
	104 Call 0x1C17F10
	105 Move X1, X31
	106 Move X23, X0
	107 Call FaceRebuildData..ctor, X0
	108 Move X8, 0x7D5000
	109 Move X8, [X8+1376]
	110 Move X0, [X8]
	111 Call 0x1C17F10
	112 Move X1, X27
	113 Move X2, X31
	114 Move X24, X0
	115 Call Face..ctor, X0, X1
	116 Compare X23, 0
	117 JumpIfEqual {393}
	118 Move [X23+16], X24
	119 Move X8, 0x77B000
	120 Move X8, [X8+3672]
	121 Move W1, 3
	122 Move X0, [X8]
	123 Call 0x1C17D6C
	124 Compare X0, 0
	125 JumpIfEqual {393}
	126 Move W8, [X0+24]
	127 Move X1, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W8, 1
	131 Move [X1+36], W8
	132 Move W8, 2
	133 Move [X1+40], W8
	134 Compare X24, 0
	135 JumpIfEqual {393}
	136 Move X0, X24
	137 Move X2, X31
	138 Call Face.set_indexesInternal, X0, X1
	139 Move X8, 0x7D4000
	140 Move X8, [X8+3560]
	141 Move X0, [X8]
	142 Call 0x1C17F10
	143 Move X8, 0x7D6000
	144 Move X8, [X8+456]
	145 Move X24, X0
	146 Move X1, [X8]
	147 Call List`1<Object>..ctor, X0
	148 Move W8, [X25+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Compare X28, 0
	151 JumpIfEqual {393}
	152 Add X8, X25, W26
	153 Move X20, X29
	154 Add X29, X8, 32
	155 Move X8, 0x7D6000
	156 Move W1, [X29]
	157 Move X8, [X8+464]
	158 Move X0, X28
	159 Move X2, [X8]
	160 Call List`1<Object>.get_Item, X0, X1
	161 Compare X24, 0
	162 JumpIfEqual {393}
	163 Move X9, 0x7D6000
	164 Move W10, [X24+28]
	165 Move X8, [X24+16]
	166 Move X9, [X9+448]
	167 Add W10, W10, 1
	168 Move X9, [X9]
	169 Move [X24+28], W10
	170 Compare X8, 0
	171 JumpIfEqual {393}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W11, [X8+24]
	174 Move X1, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add W9, W10, 1
	177 Add X8, X8, X10
	178 Move [X24+24], W9
	179 Move [X8+32], X1
	180 Move X8, [X9+32]
	181 Move X0, X24
	182 Move X8, [X8+192]
	183 Move X2, [X8+112]
	184 Call List`1<Object>.AddWithResize, X0, X1
	185 Move W8, [X25+24]
	186 Add W28, W26, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add X27, X25, W28
	189 Move X8, 0x7D6000
	190 Add X27, X27, 32
	191 Move W1, [X27]
	192 Move X8, [X8+464]
	193 Move X0, [X31+24]
	194 Move X2, [X8]
	195 Call List`1<Object>.get_Item, X0, X1
	196 Move X9, 0x7D6000
	197 Move W10, [X24+28]
	198 Move X8, [X24+16]
	199 Move X9, [X9+448]
	200 Add W10, W10, 1
	201 Move X9, [X9]
	202 Move [X24+28], W10
	203 Compare X8, 0
	204 JumpIfEqual {393}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move W11, [X8+24]
	207 Move X1, X0
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add W9, W10, 1
	210 Add X8, X8, X10
	211 Move [X24+24], W9
	212 Move [X8+32], X1
	213 Move X8, [X9+32]
	214 Move X0, X24
	215 Move X8, [X8+192]
	216 Move X2, [X8+112]
	217 Call List`1<Object>.AddWithResize, X0, X1
	218 Move W8, [X25+24]
	219 Add W28, W28, 1
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W8, W26, 2
	222 Add X26, X25, W8
	223 Move X8, 0x7D6000
	224 Add X26, X26, 32
	225 Move W1, [X26]
	226 Move X8, [X8+464]
	227 Move X0, [X31+24]
	228 Move X2, [X8]
	229 Call List`1<Object>.get_Item, X0, X1
	230 Move X9, 0x7D6000
	231 Move W10, [X24+28]
	232 Move X8, [X24+16]
	233 Move X9, [X9+448]
	234 Add W10, W10, 1
	235 Move X9, [X9]
	236 Move [X24+28], W10
	237 Compare X8, 0
	238 JumpIfEqual {393}
	239 NotImplemented "Instruction LDRSW not yet implemented."
	240 Move W11, [X8+24]
	241 Move X1, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Add W9, W10, 1
	244 Add X8, X8, X10
	245 Move [X24+24], W9
	246 Move [X8+32], X1
	247 Move X8, [X9+32]
	248 Move X0, X24
	249 Move X8, [X8+192]
	250 Move X2, [X8+112]
	251 Call List`1<Object>.AddWithResize, X0, X1
	252 Move [X23+24], X24
	253 Move X8, 0x77B000
	254 Move X8, [X8+3632]
	255 Move X0, [X8]
	256 Call 0x1C17F10
	257 Move X8, 0x77E000
	258 Move X8, [X8+2928]
	259 Move X24, X0
	260 Move X1, [X8]
	261 Call List`1<Int32>..ctor, X0
	262 Move W8, [X25+24]
	263 Subtract W28, W28, 2
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Compare X19, 0
	266 JumpIfEqual {393}
	267 Move W1, [X29]
	268 Move X2, [X20]
	269 Move X0, X19
	270 Move X29, X20
	271 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	272 Compare X24, 0
	273 JumpIfEqual {393}
	274 Move W10, [X24+28]
	275 Move X8, [X24+16]
	276 Move X9, [X21]
	277 Add W10, W10, 1
	278 Move [X24+28], W10
	279 Compare X8, 0
	280 JumpIfEqual {393}
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Move W11, [X8+24]
	283 Move W1, W0
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W9, W10, 1
	286 Add X8, X8, X10
	287 Move [X24+24], W9
	288 Move [X8+32], W1
	289 Move X8, [X9+32]
	290 Move X0, X24
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<Int32>.AddWithResize, X0, X1
	294 Move W8, [X25+24]
	295 Add W28, W28, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move W1, [X27]
	298 Move X2, [X29]
	299 Move X0, X19
	300 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	301 Move W10, [X24+28]
	302 Move X8, [X24+16]
	303 Move X9, [X21]
	304 Add W10, W10, 1
	305 Move [X24+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {393}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 Move W1, W0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Add W9, W10, 1
	313 Add X8, X8, X10
	314 Move [X24+24], W9
	315 Move [X8+32], W1
	316 Move X8, [X9+32]
	317 Move X0, X24
	318 Move X8, [X8+192]
	319 Move X2, [X8+112]
	320 Call List`1<Int32>.AddWithResize, X0, X1
	321 Move W8, [X25+24]
	322 Add W27, W28, 1
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move W1, [X26]
	325 Move X2, [X29]
	326 Move X0, X19
	327 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	328 Move W10, [X24+28]
	329 Move X8, [X24+16]
	330 Move X9, [X21]
	331 Move X28, [X31+24]
	332 Add W10, W10, 1
	333 Move [X24+28], W10
	334 Compare X8, 0
	335 JumpIfEqual {393}
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W11, [X8+24]
	338 Move W1, W0
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add W9, W10, 1
	341 Add X8, X8, X10
	342 Move [X24+24], W9
	343 Move [X8+32], W1
	344 Move X8, [X9+32]
	345 Move X0, X24
	346 Move X8, [X8+192]
	347 Move X2, [X8+112]
	348 Call List`1<Int32>.AddWithResize, X0, X1
	349 Move [X23+32], X24
	350 Compare X22, 0
	351 JumpIfEqual {393}
	352 Move X9, 0x7D6000
	353 Move W10, [X22+28]
	354 Move X8, [X22+16]
	355 Move X9, [X9+776]
	356 Add W10, W10, 1
	357 Move X9, [X9]
	358 Move [X22+28], W10
	359 Compare X8, 0
	360 JumpIfEqual {393}
	361 NotImplemented "Instruction LDRSW not yet implemented."
	362 Move W11, [X8+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Add W9, W10, 1
	365 Add X8, X8, X10
	366 Move [X22+24], W9
	367 Move [X8+32], X23
	368 Move X8, [X9+32]
	369 Move X0, X22
	370 Move X1, X23
	371 Move X8, [X8+192]
	372 Move X2, [X8+112]
	373 Call List`1<Object>.AddWithResize, X0, X1
	374 Add W26, W27, 1
	375 Move X27, [X31+8]
	376 Move X8, [X31+16]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X0, X22
	379 Move X20, [X31+112]
	380 Move X19, [X31+120]
	381 Move X22, [X31+96]
	382 Move X21, [X31+104]
	383 Move X24, [X31+80]
	384 Move X23, [X31+88]
	385 Move X26, [X31+64]
	386 Move X25, [X31+72]
	387 Move X28, [X31+48]
	388 Move X27, [X31+56]
	389 Move X29, [X31+32]
	390 Move X30, [X31+40]
	391 Add X31, X31, 128
	392 Return X0
	393 Call 0x1C17F20
	394 Call 0x1C17F28

Method: UnityEngine.ProBuilder.WindingOrder GetWindingOrder(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x0397AE60 LDR X8, [X8 + 0x270]
	0x0397AE64 MOV X19, X0
	0x0397AE68 MOVZ W1, 0x3
	0x0397AE6C LDR X2, [X8]
	0x0397AE70 MOV X3, X31
	0x0397AE74 BL 0x38F6550
	0x0397AE78 MOV X0, X19
	0x0397AE7C LDP X20, X19, [X31 + 0x10]
	0x0397AE80 LDP X30, X21, [X31], #0x20
	0x0397AE84 RET
	0x0397AE88 BL 0x1C16F20
	0x0397AE8C STR X30, [X31 - 0x50]!
	0x0397AE90 STP X26, X25, [X31 + 0x10]
	0x0397AE94 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Compare X1, 0
	006 JumpIfEqual {17}
	007 Move X19, [X0+88]
	008 Move X0, X1
	009 Move X1, X31
	010 Call Face.get_distinctIndexesInternal, X0
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call Projection.PlanarProject, X0, X1
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call 0x1C17F20

Method: UnityEngine.ProBuilder.WindingOrder GetWindingOrder(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x0397B118 BL 0x1C16F10
	0x0397B11C MOV X1, X31
	0x0397B120 MOV X19, X0
	0x0397B124 BL 0x38EDC88
	0x0397B128 LDR X8, [X20]
	0x0397B12C LDR X8, [X8 + 0xB8]
	0x0397B130 STR X19, [X8]
	0x0397B134 LDR X8, [X20]
	0x0397B138 LDR X8, [X8 + 0xB8]
	0x0397B13C LDR X0, [X8]
	0x0397B140 LDP X20, X19, [X31 + 0x10]
	0x0397B144 LDR X30, [X31], #0x20
	0x0397B148 RET
	0x0397B14C STP D9, D8, [X31 - 0x60]!
	0x0397B150 STP X30, X27, [X31 + 0x10]
	0x0397B154 STP X26, X25, [X31 + 0x20]
	0x0397B158 STP X24, X23, [X31 + 0x30]
	0x0397B15C STP X22, X21, [X31 + 0x40]
	0x0397B160 STP X20, X19, [X31 + 0x50]
	0x0397B164 ADRP X24, 0xA66000
	0x0397B168 ADRP X23, 0x782000
	0x0397B16C ADRP X22, 0x782000
	0x0397B170 LDRB W8, [X24 + 0xA2A]
	0x0397B174 LDR X23, [X23 + 0x888]
	0x0397B178 LDR X22, [X22 + 0x890]
	0x0397B17C MOV W20, W2
	0x0397B180 MOV X19, X1
	0x0397B184 MOV X21, X0
	0x0397B188 TBNZ X8, 0x0, 0x397B200
	0x0397B18C ADRP X0, 0x782000
	0x0397B190 LDR X0, [X0 + 0x858]
	0x0397B194 BL 0x1C16CF4
	0x0397B198 ADRP X0, 0x782000
	0x0397B19C LDR X0, [X0 + 0x890]
	0x0397B1A0 BL 0x1C16CF4
	0x0397B1A4 ADRP X0, 0x7D2000
	0x0397B1A8 LDR X0, [X0 + 0xC80]
	0x0397B1AC BL 0x1C16CF4
	0x0397B1B0 ADRP X0, 0x782000
	0x0397B1B4 LDR X0, [X0 + 0x888]
	0x0397B1B8 BL 0x1C16CF4
	0x0397B1BC ADRP X0, 0x7D2000
	0x0397B1C0 LDR X0, [X0 + 0xA90]
	0x0397B1C4 BL 0x1C16CF4
	0x0397B1C8 ADRP X0, 0x7D2000
	0x0397B1CC LDR X0, [X0 + 0xA98]
	0x0397B1D0 BL 0x1C16CF4
	0x0397B1D4 ADRP X0, 0x779000
	0x0397B1D8 LDR X0, [X0 + 0xE28]
	0x0397B1DC BL 0x1C16CF4
	0x0397B1E0 ADRP X0, 0x7A2000
	0x0397B1E4 LDR X0, [X0 + 0xF38]
	0x0397B1E8 BL 0x1C16CF4
	0x0397B1EC ADRP X0, 0x7D5000
	0x0397B1F0 LDR X0, [X0 + 0x280]
	0x0397B1F4 BL 0x1C16CF4
	0x0397B1F8 MOVZ W8, 0x1
	0x0397B1FC STRB W8, [X24 + 0xA2A]
	0x0397B200 MOVZ W1, 0x1
	0x0397B204 MOV X0, X21
	0x0397B208 MOV X2, X31
	0x0397B20C BL 0x3921264
	0x0397B210 LDR X8, [X23]
	0x0397B214 MOV X23, X0
	0x0397B218 MOV X0, X8
	0x0397B21C BL 0x1C16F10
	0x0397B220 LDR X1, [X22]
	0x0397B224 MOV X22, X0
	0x0397B228 BL 0x2A09A9C
	0x0397B22C CBZ X23, 0x397B424
	0x0397B230 ADRP X25, 0x7D2000
	0x0397B234 ADRP X26, 0x7D2000
	0x0397B238 ADRP X27, 0x782000
	0x0397B23C LDR X25, [X25 + 0xA90]
	0x0397B240 LDR X26, [X26 + 0xA98]
	0x0397B244 LDR X27, [X27 + 0x858]
	0x0397B248 MOV W24, W31
	0x0397B24C LDR X8, [X23]
	0x0397B250 LDR X1, [X25]
	0x0397B254 LDRH W9, [X8 + 0x12E]
	0x0397B258 CBZ X9, 0x397B27C
	0x0397B25C LDR X10, [X8 + 0xB0]
	0x0397B260 ADD X10, X10, 0x8
	0x0397B264 LDUR X11, [X10 - 0x8]
	0x0397B268 CMP X11, X1
	0x0397B26C B.EQ 0x397B28C
	0x0397B270 SUBS X9, X9, 0x1
	0x0397B274 ADD X10, X10, 0x10
	0x0397B278 B.NE 0x397B264
	0x0397B27C MOV X0, X23
	0x0397B280 MOV W2, W31
	0x0397B284 BL 0x1C5C788
	0x0397B288 B 0x397B298
	0x0397B28C LDRSW X9, [X10]
	0x0397B290 ADD X8, X8, X9, 0x4, LSL
	0x0397B294 ADD X0, X8, 0x138
	0x0397B298 LDP X8, X1, [X0]
	0x0397B29C MOV X0, X23
	0x0397B2A0 BLR X8
	0x0397B2A4 CMP W24, W0
	0x0397B2A8 B.GE 0x397B398
	0x0397B2AC LDR X8, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xA67000
	010 Move W8, [X21+2592]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x7D5000
	018 Move X0, [X0+592]
	019 Call 0x1C17CF4
	020 Move X0, 0x7D4000
	021 Move X0, [X0+368]
	022 Call 0x1C17CF4
	023 Move X0, 0x7D5000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D6000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x7D6000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2592], W8
	034 Compare X20, 0
	035 JumpIfEqual {94}
	036 Compare X19, 0
	037 JumpIfEqual {101}
	038 Move X23, 0x7D6000
	039 Move X23, [X23+432]
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X25, 0x7D5000
	048 Move X24, 0x7D4000
	049 Move X21, [X8+16]
	050 Move X25, [X25+592]
	051 Move X24, [X24+368]
	052 Compare X21, 0
	053 JumpIfNotEqual {75}
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X23]
	059 Move X9, 0x7D5000
	060 Move X8, [X0+184]
	061 Move X9, [X9+624]
	062 Move X22, [X8]
	063 Move X0, [X9]
	064 Call 0x1C17F10
	065 Move X8, 0x7D6000
	066 Move X8, [X8+464]
	067 Move X1, X22
	068 Move X3, X31
	069 Move X21, X0
	070 Move X2, [X8]
	071 Call Func`2<Object, Vector3>..ctor, X0, X1, X2
	072 Move X8, [X23]
	073 Move X8, [X8+184]
	074 Move [X8+16], X21
	075 Move X2, [X25]
	076 Move X0, X20
	077 Move X1, X21
	078 Call Enumerable.Select, X0, X1
	079 Move X1, [X24]
	080 Call Enumerable.ToArray, X0
	081 Move X1, X19
	082 Move X2, X31
	083 Call Projection.PlanarProject, X0, X1
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Call SurfaceTopology.GetWindingOrder, X0
	093 Return X0
	094 Move X0, 0x77E000
	095 Move X0, [X0+1320]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0x7D4000
	100 Move X0, [X0+1104]
	101 Move X0, 0x77E000
	102 Move X0, [X0+1320]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x7B1000
	107 Move X0, [X0+3600]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentNullException..ctor, X0, X1
	113 Move X0, 0x7D6000
	114 Move X0, [X0+472]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.WindingOrder GetWindingOrder(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)

Disassembly:
	0x0397AE98 STP X22, X21, [X31 + 0x30]
	0x0397AE9C STP X20, X19, [X31 + 0x40]
	0x0397AEA0 ADRP X22, 0xA67000
	0x0397AEA4 LDRB W8, [X22 + 0xA27]
	0x0397AEA8 MOV X21, X2
	0x0397AEAC MOV X19, X1
	0x0397AEB0 MOV X20, X0
	0x0397AEB4 TBNZ X8, 0x0, 0x397AEF0
	0x0397AEB8 ADRP X0, 0x7A1000
	0x0397AEBC LDR X0, [X0 + 0x600]
	0x0397AEC0 BL 0x1C16CF4
	0x0397AEC4 ADRP X0, 0x7D5000
	0x0397AEC8 LDR X0, [X0 + 0x5C8]
	0x0397AECC BL 0x1C16CF4
	0x0397AED0 ADRP X0, 0x7D5000
	0x0397AED4 LDR X0, [X0 + 0xBE8]
	0x0397AED8 BL 0x1C16CF4
	0x0397AEDC ADRP X0, 0x7D5000
	0x0397AEE0 LDR X0, [X0 + 0xBF0]
	0x0397AEE4 BL 0x1C16CF4
	0x0397AEE8 MOVZ W8, 0x1
	0x0397AEEC STRB W8, [X22 + 0xA27]
	0x0397AEF0 STR X31, [X31 + 0x8]
	0x0397AEF4 CBZ X20, 0x397B024
	0x0397AEF8 ADRP X22, 0x7D5000
	0x0397AEFC LDR X22, [X22 + 0x5C8]
	0x0397AF00 MOV X0, X20
	0x0397AF04 MOV X1, X31
	0x0397AF08 BL 0x38FFA80
	0x0397AF0C MOV X1, X21
	0x0397AF10 MOV X2, X31
	0x0397AF14 BL 0x38FEBC8
	0x0397AF18 LDR X1, [X22]
	0x0397AF1C BL 0x21D7788
	0x0397AF20 CBZ X19, 0x397B024
	0x0397AF24 MOV X20, X0
	0x0397AF28 MOV X0, X19
	0x0397AF2C MOV X1, X31
	0x0397AF30 BL 0x38FFA80
	0x0397AF34 MOV X1, X21
	0x0397AF38 MOV X2, X31
	0x0397AF3C BL 0x38FEBC8
	0x0397AF40 LDR X1, [X22]
	0x0397AF44 BL 0x21D7788
	0x0397AF48 CBZ X20, 0x397B024
	0x0397AF4C LDR W8, [X20 + 0x18]
	0x0397AF50 CMP W8, 0x1
	0x0397AF54 B.LT 0x397B00C
	0x0397AF58 ADRP X25, 0x7D5000
	0x0397AF5C ADRP X26, 0x7A1000
	0x0397AF60 LDR X25, [X25 + 0xBF0]
	0x0397AF64 LDR X26, [X26 + 0x600]
	0x0397AF68 MOV X21, X0
	0x0397AF6C MOV W22, W31
	0x0397AF70 LDR X2, [X25]
	0x0397AF74 MOV X0, X20
	0x0397AF78 MOV W1, W22
	0x0397AF7C BL 0x2FBC6B0
	0x0397AF80 STR X1, [X31 + 0x8]
	0x0397AF84 CBZ X21, 0x397B024
	0x0397AF88 LDR W8, [X21 + 0x18]
	0x0397AF8C CMP W8, 0x1
	0x0397AF90 B.LT 0x397AFE0
	0x0397AF94 MOV W23, W31
	0x0397AF98 LDR X2, [X25]
	0x0397AF9C MOV X0, X21
	0x0397AFA0 MOV W1, W23
	0x0397AFA4 BL 0x2FBC6B0
	0x0397AFA8 LDR X0, [X26]
	0x0397AFAC MOV X24, X1
	0x0397AFB0 LDR W8, [X0 + 0xE0]
	0x0397AFB4 CBNZ W8, 0x397AFBC
	0x0397AFB8 BL 0x1C16DFC
	0x0397AFBC ADD X0, X31, 0x8
	0x0397AFC0 MOV X1, X24
	0x0397AFC4 MOV X2, X31
	0x0397AFC8 BL 0x38FDD60
	0x0397AFCC TBNZ X0, 0x0, 0x397AFF4
	0x0397AFD0 LDR W8, [X21 + 0x18]
	0x0397AFD4 ADD W23, W23, 0x1
	0x0397AFD8 CMP W23, W8
	0x0397AFDC B.LT 0x397AF98
	0x0397AFE0 LDR W8, [X20 + 0x18]
	0x0397AFE4 ADD W22, W22, 0x1
	0x0397AFE8 CMP W22, W8
	0x0397AFEC B.LT 0x397AF70
	0x0397AFF0 B 0x397B00C
	0x0397AFF4 LDR W8, [X31 + 0x8]
	0x0397AFF8 CMP W8, W24
	0x0397AFFC B.NE 0x397B00C
	0x0397B000 MOV X0, X19
	0x0397B004 MOV X1, X31
	0x0397B008 BL 0x3900E24
	0x0397B00C LDP X20, X19, [X31 + 0x40]
	0x0397B010 LDP X22, X21, [X31 + 0x30]
	0x0397B014 LDP X24, X23, [X31 + 0x20]
	0x0397B018 LDP X26, X25, [X31 + 0x10]
	0x0397B01C LDR X30, [X31], #0x50
	0x0397B020 RET
	0x0397B024 BL 0x1C16F20
	0x0397B028 STR X30, [X31 - 0x20]!
	0x0397B02C STP X20, X19, [X31 + 0x10]
	0x0397B030 ADRP X19, 0xA66000
	0x0397B034 ADRP X20, 0x7D5000
	0x0397B038 LDRB W8, [X19 + 0xA28]
	0x0397B03C LDR X20, [X20 + 0x1B0]
	0x0397B040 TBNZ X8, 0x0, 0x397B058
	0x0397B044 ADRP X0, 0x7D5000
	0x0397B048 LDR X0, [X0 + 0x1B0]
	0x0397B04C BL 0x1C16CF4
	0x0397B050 MOVZ W8, 0x1
	0x0397B054 STRB W8, [X19 + 0xA28]
	0x0397B058 LDR X0, [X20]
	0x0397B05C BL 0x1C16F10
	0x0397B060 MOV X1, X31
	0x0397B064 MOV X19, X0
	0x0397B068 BL 0x33BDD8C
	0x0397B06C LDR X8, [X20]
	0x0397B070 LDR X8, [X8 + 0xB8]
	0x0397B074 STR X19, [X8]
	0x0397B078 LDP X20, X19, [X31 + 0x10]
	0x0397B07C LDR X30, [X31], #0x20
	0x0397B080 RET
	0x0397B084 MOV X1, X31
	0x0397B088 B 0x33BDD8C
	0x0397B08C STR X30, [X31 - 0x10]!
	0x0397B090 CBZ X1, 0x397B0A0
	0x0397B094 LDR X0, [X1 + 0x10]
	0x0397B098 LDR X30, [X31], #0x10
	0x0397B09C RET
	0x0397B0A0 BL 0x1C16F20
	0x0397B0A4 STR X30, [X31 - 0x10]!
	0x0397B0A8 CBZ X1, 0x397B0BC
	0x0397B0AC LDP S0, S1, [X1 + 0x10]
	0x0397B0B0 LDR V2, [X1 + 0x18]
	0x0397B0B4 LDR X30, [X31], #0x10
	0x0397B0B8 RET
	0x0397B0BC BL 0x1C16F20
	0x0397B0C0 STR X30, [X31 - 0x20]!
	0x0397B0C4 STP X20, X19, [X31 + 0x10]
	0x0397B0C8 ADRP X19, 0xA66000
	0x0397B0CC ADRP X20, 0x7D5000
	0x0397B0D0 LDRB W8, [X19 + 0xA29]
	0x0397B0D4 LDR X20, [X20 + 0x278]
	0x0397B0D8 TBNZ X8, 0x0, 0x397B0FC
	0x0397B0DC ADRP X0, 0x7D2000
	0x0397B0E0 LDR X0, [X0 + 0x638]
	0x0397B0E4 BL 0x1C16CF4
	0x0397B0E8 ADRP X0, 0x7D5000
	0x0397B0EC LDR X0, [X0 + 0x278]
	0x0397B0F0 BL 0x1C16CF4
	0x0397B0F4 MOVZ W8, 0x1
	0x0397B0F8 STRB W8, [X19 + 0xA29]
	0x0397B0FC LDR X8, [X20]
	0x0397B100 LDR X8, [X8 + 0xB8]
	0x0397B104 LDR X0, [X8]
	0x0397B108 CBNZ X0, 0x397B140
	0x0397B10C ADRP X8, 0x7D2000
	0x0397B110 LDR X8, [X8 + 0x638]
	0x0397B114 LDR X0, [X8]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA68000
	011 Move W8, [X20+2593]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7D4000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x7D4000
	021 Move X0, [X0+2712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2593], W8
	025 Compare X19, 0
	026 JumpIfEqual {145}
	027 Move X10, 0x7D4000
	028 Move X8, [X19]
	029 Move X10, [X10+2704]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X19
	041 Move W2, W31
	042 Call 0x1C5D788
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Subtract W22, W0, 1
	051 Move X23, 0x7D4000
	052 Move X23, [X23+2712]
	053 Move W20, W0
	054 Move W21, W31
	055 Move S10, W31
	056 Move X8, [X19]
	057 Move X1, [X23]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X2, [X0+8]
	075 Move X0, X19
	076 Move W1, W21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X1, [X23]
	079 Move V8, V0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move V9, V1
	082 Move X8, [X19]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 Move X8, [X19]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X19
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X2, [X0+8]
	113 Add W21, W21, 1
	114 Move X0, X19
	115 Move W1, W21
	116 NotImplemented "Instruction BLR not yet implemented."
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X2, [X0+8]
	122 Move X0, X19
	123 Move W1, W31
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Add W21, W21, 1
	126 Subtract S0, S0, S8
	127 Add S1, S9, S1
	128 Multiply S0, S0, S1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add S10, S10, S0
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move W8, 2
	133 NotImplemented "Instruction CSINC not yet implemented."
	134 Move W0, W31
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X30, [X31+32]
	140 Move X23, [X31+40]
	141 Move D9, [X31+16]
	142 Move D8, [X31+24]
	143 Move V10, [X31+80]
	144 Return X0
	145 Move X0, 0x77E000
	146 Move X0, [X0+1320]
	147 Call 0x1C17D08
	148 Call 0x1C17F10
	149 Move X19, X0
	150 Move X0, 0x7D3000
	151 Move X0, [X0+1680]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X19
	155 Move X2, X31
	156 Call ArgumentNullException..ctor, X0, X1
	157 Move X0, 0x7D6000
	158 Move X0, [X0+456]
	159 Call 0x1C17D08
	160 Move X1, X0
	161 Move X0, X19
	162 Call 0x1C17DEC

Method: System.Boolean FlipEdge(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x0397B2B0 LDR X1, [X26]
	0x0397B2B4 LDRH W9, [X8 + 0x12E]
	0x0397B2B8 CBZ X9, 0x397B2DC
	0x0397B2BC LDR X10, [X8 + 0xB0]
	0x0397B2C0 ADD X10, X10, 0x8
	0x0397B2C4 LDUR X11, [X10 - 0x8]
	0x0397B2C8 CMP X11, X1
	0x0397B2CC B.EQ 0x397B2EC
	0x0397B2D0 SUBS X9, X9, 0x1
	0x0397B2D4 ADD X10, X10, 0x10
	0x0397B2D8 B.NE 0x397B2C4
	0x0397B2DC MOV X0, X23
	0x0397B2E0 MOV W2, W31
	0x0397B2E4 BL 0x1C5C788
	0x0397B2E8 B 0x397B2F8
	0x0397B2EC LDRSW X9, [X10]
	0x0397B2F0 ADD X8, X8, X9, 0x4, LSL
	0x0397B2F4 ADD X0, X8, 0x138
	0x0397B2F8 LDP X8, X2, [X0]
	0x0397B2FC MOV X0, X23
	0x0397B300 MOV W1, W24
	0x0397B304 BLR X8
	0x0397B308 CBZ X21, 0x397B424
	0x0397B30C LDR X8, [X21]
	0x0397B310 LDR X1, [X26]
	0x0397B314 MOV V8.16B, V0.16B
	0x0397B318 MOV V9.16B, V1.16B
	0x0397B31C LDRH W9, [X8 + 0x12E]
	0x0397B320 CBZ X9, 0x397B344
	0x0397B324 LDR X10, [X8 + 0xB0]
	0x0397B328 ADD X10, X10, 0x8
	0x0397B32C LDUR X11, [X10 - 0x8]
	0x0397B330 CMP X11, X1
	0x0397B334 B.EQ 0x397B354
	0x0397B338 SUBS X9, X9, 0x1
	0x0397B33C ADD X10, X10, 0x10
	0x0397B340 B.NE 0x397B32C
	0x0397B344 MOVZ W2, 0x2
	0x0397B348 MOV X0, X21
	0x0397B34C BL 0x1C5C788
	0x0397B350 B 0x397B364
	0x0397B354 LDR W9, [X10]
	0x0397B358 ADD W9, W9, 0x2
	0x0397B35C ADD X8, X8, W9, 0x4, SXTW
	0x0397B360 ADD X0, X8, 0x138
	0x0397B364 LDP X8, X1, [X0]
	0x0397B368 MOV X0, X21
	0x0397B36C MOV V0.16B, V8.16B
	0x0397B370 MOV V1.16B, V9.16B
	0x0397B374 BLR X8
	0x0397B378 CBZ X22, 0x397B424
	0x0397B37C LDR X3, [X27]
	0x0397B380 MOV W2, W0
	0x0397B384 MOV X0, X22
	0x0397B388 MOV W1, W24
	0x0397B38C BL 0x2A0A344
	0x0397B390 ADD W24, W24, 0x1
	0x0397B394 B 0x397B24C
	0x0397B398 AND W2, W20, 0x1
	0x0397B39C MOV X0, X23
	0x0397B3A0 MOV X1, X19
	0x0397B3A4 BL 0x397B448
	0x0397B3A8 MOV W20, W0
	0x0397B3AC TBZ X0, 0x0, 0x397B428
	0x0397B3B0 LDR X23, [X19]
	0x0397B3B4 CBZ X23, 0x397B424
	0x0397B3B8 ADRP X24, 0x7A2000
	0x0397B3BC ADRP X25, 0x7D2000
	0x0397B3C0 ADRP X26, 0x7D5000
	0x0397B3C4 LDR X24, [X24 + 0xF38]
	0x0397B3C8 LDR X25, [X25 + 0xC80]
	0x0397B3CC LDR X26, [X26 + 0x280]
	0x0397B3D0 MOV W21, W31
	0x0397B3D4 LDR W8, [X23 + 0x18]
	0x0397B3D8 CMP W21, W8
	0x0397B3DC B.GE 0x397B428
	0x0397B3E0 LDR X2, [X24]
	0x0397B3E4 MOV X0, X23
	0x0397B3E8 MOV W1, W21
	0x0397B3EC BL 0x2FDC41C
	0x0397B3F0 CBZ X22, 0x397B424
	0x0397B3F4 LDR X2, [X25]
	0x0397B3F8 MOV W1, W0
	0x0397B3FC MOV X0, X22
	0x0397B400 BL 0x2A0A2A8
	0x0397B404 LDR X3, [X26]
	0x0397B408 MOV W2, W0
	0x0397B40C MOV X0, X23
	0x0397B410 MOV W1, W21
	0x0397B414 BL 0x2FDC470
	0x0397B418 LDR X23, [X19]
	0x0397B41C ADD W21, W21, 0x1
	0x0397B420 CBNZ X23, 0x397B3D4
	0x0397B424 BL 0x1C16F20
	0x0397B428 AND W0, W20, 0x1
	0x0397B42C LDP X20, X19, [X31 + 0x50]
	0x0397B430 LDP X22, X21, [X31 + 0x40]
	0x0397B434 LDP X24, X23, [X31 + 0x30]
	0x0397B438 LDP X26, X25, [X31 + 0x20]
	0x0397B43C LDP X30, X27, [X31 + 0x10]
	0x0397B440 LDP D9, D8, [X31], #0x60
	0x0397B444 RET
	0x0397B448 STP X29, X30, [X31 - 0x60]!
	0x0397B44C STP X28, X27, [X31 + 0x10]
	0x0397B450 STP X26, X25, [X31 + 0x20]
	0x0397B454 STP X24, X23, [X31 + 0x30]
	0x0397B458 STP X22, X21, [X31 + 0x40]
	0x0397B45C STP X20, X19, [X31 + 0x50]
	0x0397B460 ADRP X22, 0xA66000
	0x0397B464 ADRP X25, 0x7D5000
	0x0397B468 ADRP X24, 0x779000
	0x0397B46C ADRP X23, 0x77C000
	0x0397B470 LDRB W8, [X22 + 0xA2E]
	0x0397B474 LDR X25, [X25 + 0x288]
	0x0397B478 LDR X24, [X24 + 0xE30]
	0x0397B47C LDR X23, [X23 + 0xB70]
	0x0397B480 MOV W21, W2
	0x0397B484 MOV X19, X1
	0x0397B488 MOV X20, X0
	0x0397B48C TBNZ X8, 0x0, 0x397B5D0
	0x0397B490 ADRP X0, 0x7D2000
	0x0397B494 LDR X0, [X0 + 0x638]
	0x0397B498 BL 0x1C16CF4
	0x0397B49C ADRP X0, 0x7D5000
	0x0397B4A0 LDR X0, [X0 + 0x290]
	0x0397B4A4 BL 0x1C16CF4
	0x0397B4A8 ADRP X0, 0x7D5000
	0x0397B4AC LDR X0, [X0 + 0x298]
	0x0397B4B0 BL 0x1C16CF4
	0x0397B4B4 ADRP X0, 0x7D5000
	0x0397B4B8 LDR X0, [X0 + 0x2A0]
	0x0397B4BC BL 0x1C16CF4
	0x0397B4C0 ADRP X0, 0x7D2000
	0x0397B4C4 LDR X0, [X0 + 0x7B0]
	0x0397B4C8 BL 0x1C16CF4
	0x0397B4CC ADRP X0, 0x7D5000
	0x0397B4D0 LDR X0, [X0 + 0x2A8]
	0x0397B4D4 BL 0x1C16CF4
	0x0397B4D8 ADRP X0, 0x7D5000
	0x0397B4DC LDR X0, [X0 + 0x2B0]
	0x0397B4E0 BL 0x1C16CF4
	0x0397B4E4 ADRP X0, 0x778000
	0x0397B4E8 LDR X0, [X0 + 0xE00]
	0x0397B4EC BL 0x1C16CF4
	0x0397B4F0 ADRP X0, 0x7D2000
	0x0397B4F4 LDR X0, [X0 + 0x980]
	0x0397B4F8 BL 0x1C16CF4
	0x0397B4FC ADRP X0, 0x7D2000
	0x0397B500 LDR X0, [X0 + 0x988]
	0x0397B504 BL 0x1C16CF4
	0x0397B508 ADRP X0, 0x778000
	0x0397B50C LDR X0, [X0 + 0xE18]
	0x0397B510 BL 0x1C16CF4
	0x0397B514 ADRP X0, 0x7D2000
	0x0397B518 LDR X0, [X0 + 0xA98]
	0x0397B51C BL 0x1C16CF4
	0x0397B520 ADRP X0, 0x779000
	0x0397B524 LDR X0, [X0 + 0xE10]
	0x0397B528 BL 0x1C16CF4
	0x0397B52C ADRP X0, 0x7D5000
	0x0397B530 LDR X0, [X0 + 0x2B8]
	0x0397B534 BL 0x1C16CF4
	0x0397B538 ADRP X0, 0x77C000
	0x0397B53C LDR X0, [X0 + 0xB70]
	0x0397B540 BL 0x1C16CF4
	0x0397B544 ADRP X0, 0x7A2000
	0x0397B548 LDR X0, [X0 + 0xF38]
	0x0397B54C BL 0x1C16CF4
	0x0397B550 ADRP X0, 0x779000
	0x0397B554 LDR X0, [X0 + 0xE30]
	0x0397B558 BL 0x1C16CF4
	0x0397B55C ADRP X0, 0x7D2000
	0x0397B560 LDR X0, [X0 + 0xAD0]
	0x0397B564 BL 0x1C16CF4
	0x0397B568 ADRP X0, 0x7D5000
	0x0397B56C LDR X0, [X0 + 0x2C0]
	0x0397B570 BL 0x1C16CF4
	0x0397B574 ADRP X0, 0x7D2000
	0x0397B578 LDR X0, [X0 + 0x9A8]
	0x0397B57C BL 0x1C16CF4
	0x0397B580 ADRP X0, 0x7D2000
	0x0397B584 LDR X0, [X0 + 0x878]
	0x0397B588 BL 0x1C16CF4
	0x0397B58C ADRP X0, 0x7D5000
	0x0397B590 LDR X0, [X0 + 0x2C8]
	0x0397B594 BL 0x1C16CF4
	0x0397B598 ADRP X0, 0x7D5000
	0x0397B59C LDR X0, [X0 + 0x2D0]
	0x0397B5A0 BL 0x1C16CF4
	0x0397B5A4 ADRP X0, 0x7D5000
	0x0397B5A8 LDR X0, [X0 + 0x288]
	0x0397B5AC BL 0x1C16CF4
	0x0397B5B0 ADRP X0, 0x7D2000
	0x0397B5B4 LDR X0, [X0 + 0xA88]
	0x0397B5B8 BL 0x1C16CF4
	0x0397B5BC ADRP X0, 0x7D5000
	0x0397B5C0 LDR X0, [X0 + 0x2D8]
	0x0397B5C4 BL 0x1C16CF4
	0x0397B5C8 MOVZ W8, 0x1
	0x0397B5CC STRB W8, [X22 + 0xA2E]
	0x0397B5D0 LDR X0, [X25]
	0x0397B5D4 BL 0x1C16F10
	0x0397B5D8 MOV X1, X31
	0x0397B5DC MOV X22, X0
	0x0397B5E0 BL 0x33BDD8C
	0x0397B5E4 LDR X0, [X24]
	0x0397B5E8 BL 0x1C16F10
	0x0397B5EC LDR X1, [X23]
	0x0397B5F0 MOV X23, X0
	0x0397B5F4 BL 0x2FDBF14
	0x0397B5F8 STR X23, [X19]
	0x0397B5FC CBZ X22, 0x397BE8C
	0x0397B600 STR W31, [X22 + 0x10]
	0x0397B604 TBZ X21, 0x0, 0x397B688
	0x0397B608 ADRP X8, 0x7D5000
	0x0397B60C LDR X8, [X8 + 0x2B0]
	0x0397B610 LDR X0, [X8]
	0x0397B614 BL 0x1C16F10
	0x0397B618 ADRP X8, 0x7D5000
	0x0397B61C LDR X8, [X8 + 0x2C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA67000
	007 Move X22, 0x779000
	008 Move W8, [X21+2594]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7D6000
	017 Move X0, [X0+480]
	018 Call 0x1C17CF4
	019 Move X0, 0x779000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2594], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {176}
	037 Compare X19, 0
	038 JumpIfEqual {183}
	039 Move X20, [X19+16]
	040 Compare X20, 0
	041 JumpIfEqual {175}
	042 Move W8, [X20+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x7D6000
	045 Move X8, [X8+480]
	046 Move W0, 1
	047 Move W1, 6
	048 Move X2, [X8]
	049 Call ArrayUtility.Fill, X0, X1
	050 Move X8, [X20+24]
	051 Subtract W10, W8, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 And X9, X8, 0
	054 Move X16, X31
	055 Move X10, W10
	056 Add X11, X20, 36
	057 Add X12, X0, 36
	058 Move X13, W9
	059 Subtract X14, X9, 1
	060 Move W15, 1
	061 Add X17, X16, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X2, X20, X16
	065 Add X3, X0, X16
	066 Move X1, X31
	067 Add X2, X2, 32
	068 Add X3, X3, 32
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W4, [X2]
	071 Move W5, [X11]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {175}
	075 Move W4, [X0+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W5, [X3]
	078 Add X6, X15, X1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add W5, W5, 1
	081 Move [X3], W5
	082 Move W4, [X12]
	083 Add W4, W4, 1
	084 Move [X12], W4
	085 Add X1, X1, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X15, X15, 1
	088 Subtract X14, X14, 1
	089 Add X11, X11, 4
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X12, X12, 4
	092 Move X16, X17
	093 Compare X0, 0
	094 JumpIfEqual {175}
	095 Move W9, [X0+24]
	096 Compare W9, 0
	097 JumpIfEqual {174}
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W12, [X0+32]
	101 Move W11, [X0+36]
	102 Move W10, [X0+40]
	103 Add W13, W11, W12
	104 Add W13, W13, W10
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W9, [X0+44]
	110 Move W13, [X0+48]
	111 Move W14, [X0+52]
	112 Add W15, W13, W9
	113 Add W14, W15, W14
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W14, 1
	117 NotImplemented "Instruction CINC not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W13, 4
	123 NotImplemented "Instruction CINC not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W9, 3
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X13, X20, X14
	129 Add X14, X20, X9
	130 Move W9, [X13+32]
	131 Move W13, [X14+32]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X11, X20, 32
	134 Move W0, W31
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+48]
	140 Return X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add X11, X20, 36
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X11, X20, 40
	147 Move W10, [X11]
	148 Move [X11], W13
	149 Move W11, [X0+44]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W11, [X20+44]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W11, [X0+48]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move W11, [X20+48]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W11, [X0+52]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X20+52]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move [X20+52], W9
	165 Move [X20+44], W9
	166 Move [X20+48], W9
	167 Move X0, X19
	168 Move X1, X31
	169 Call Face.InvalidateCache, X0
	170 Move W0, 1
	171 Move TEMP, 0
	172 Not TEMP
	173 Move W10, TEMP
	174 Call 0x1C17F28
	175 Call 0x1C17F20
	176 Move X0, 0x77E000
	177 Move X0, [X0+1320]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X19, X0
	181 Move X0, 0x7D3000
	182 Move X0, [X0+3728]
	183 Move X0, 0x77E000
	184 Move X0, [X0+1320]
	185 Call 0x1C17D08
	186 Call 0x1C17F10
	187 Move X19, X0
	188 Move X0, 0x7D4000
	189 Move X0, [X0+1536]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Move X2, X31
	194 Call ArgumentNullException..ctor, X0, X1
	195 Move X0, 0x7D6000
	196 Move X0, [X0+488]
	197 Call 0x1C17D08
	198 Move X1, X0
	199 Move X0, X19
	200 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.ActionResult ConformNormals(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0397B620 MOV X1, X22
	0x0397B624 MOV X3, X31
	0x0397B628 MOV X21, X0
	0x0397B62C LDR X2, [X8]
	0x0397B630 BL 0x2D34174
	0x0397B634 ADRP X8, 0x7D5000
	0x0397B638 LDR X8, [X8 + 0x298]
	0x0397B63C MOV X0, X20
	0x0397B640 MOV X1, X21
	0x0397B644 LDR X2, [X8]
	0x0397B648 BL 0x21D00E8
	0x0397B64C ADRP X8, 0x7D5000
	0x0397B650 LDR X8, [X8 + 0x2A0]
	0x0397B654 LDR X1, [X8]
	0x0397B658 BL 0x21D79F4
	0x0397B65C ADRP X8, 0x7D5000
	0x0397B660 LDR X8, [X8 + 0x2C0]
	0x0397B664 MOV X22, X0
	0x0397B668 LDR X8, [X8]
	0x0397B66C MOV X0, X8
	0x0397B670 BL 0x1C16F10
	0x0397B674 MOV X1, X22
	0x0397B678 MOV X2, X31
	0x0397B67C MOV X21, X0
	0x0397B680 BL 0x38F4BFC
	0x0397B684 B 0x397B6F4
	0x0397B688 ADRP X8, 0x7D5000
	0x0397B68C LDR X8, [X8 + 0x2A8]
	0x0397B690 LDR X0, [X8]
	0x0397B694 BL 0x1C16F10
	0x0397B698 ADRP X8, 0x7D5000
	0x0397B69C LDR X8, [X8 + 0x2D0]
	0x0397B6A0 MOV X1, X22
	0x0397B6A4 MOV X3, X31
	0x0397B6A8 MOV X21, X0
	0x0397B6AC LDR X2, [X8]
	0x0397B6B0 BL 0x2D34174
	0x0397B6B4 ADRP X8, 0x7D5000
	0x0397B6B8 LDR X8, [X8 + 0x290]
	0x0397B6BC MOV X0, X20
	0x0397B6C0 MOV X1, X21
	0x0397B6C4 LDR X2, [X8]
	0x0397B6C8 BL 0x21D00E8
	0x0397B6CC ADRP X8, 0x7D2000
	0x0397B6D0 LDR X8, [X8 + 0x9A8]
	0x0397B6D4 MOV X22, X0
	0x0397B6D8 LDR X8, [X8]
	0x0397B6DC MOV X0, X8
	0x0397B6E0 BL 0x1C16F10
	0x0397B6E4 MOV X1, X22
	0x0397B6E8 MOV X2, X31
	0x0397B6EC MOV X21, X0
	0x0397B6F0 BL 0x38EE160
	0x0397B6F4 BL 0x397B0C0
	0x0397B6F8 CBZ X0, 0x397BDB0
	0x0397B6FC LDR X8, [X0]
	0x0397B700 LDP X9, X1, [X8 + 0x1A8]
	0x0397B704 BLR X9
	0x0397B708 BL 0x397B0C0
	0x0397B70C CBZ X0, 0x397BDB4
	0x0397B710 LDR X8, [X0]
	0x0397B714 LDP X9, X2, [X8 + 0x188]
	0x0397B718 MOV X1, X21
	0x0397B71C BLR X9
	0x0397B720 BL 0x397B0C0
	0x0397B724 CBZ X0, 0x397B75C
	0x0397B728 ADRP X9, 0x7D2000
	0x0397B72C LDR X9, [X9 + 0x638]
	0x0397B730 LDR X8, [X0]
	0x0397B734 LDR X1, [X9]
	0x0397B738 LDRB W10, [X8 + 0x130]
	0x0397B73C LDRB W9, [X1 + 0x130]
	0x0397B740 CMP W10, W9
	0x0397B744 B.CC 0x397BDAC
	0x0397B748 LDR X8, [X8 + 0xC8]
	0x0397B74C ADD X8, X8, X9, 0x3, LSL
	0x0397B750 LDUR X8, [X8 - 0x8]
	0x0397B754 CMP X8, X1
	0x0397B758 B.NE 0x397BDAC
	0x0397B75C MOV X1, X31
	0x0397B760 BL 0x38EDD60
	0x0397B764 CBZ X21, 0x397BE8C
	0x0397B768 ADRP X10, 0x7D2000
	0x0397B76C LDR X8, [X21]
	0x0397B770 LDR X10, [X10 + 0x878]
	0x0397B774 LDRH W9, [X8 + 0x12E]
	0x0397B778 LDR X1, [X10]
	0x0397B77C CBZ X9, 0x397B7A0
	0x0397B780 LDR X10, [X8 + 0xB0]
	0x0397B784 ADD X10, X10, 0x8
	0x0397B788 LDUR X11, [X10 - 0x8]
	0x0397B78C CMP X11, X1
	0x0397B790 B.EQ 0x397B7B0
	0x0397B794 SUBS X9, X9, 0x1
	0x0397B798 ADD X10, X10, 0x10
	0x0397B79C B.NE 0x397B788
	0x0397B7A0 MOVZ W2, 0x2
	0x0397B7A4 MOV X0, X21
	0x0397B7A8 BL 0x1C5C788
	0x0397B7AC B 0x397B7C0
	0x0397B7B0 LDR W9, [X10]
	0x0397B7B4 ADD W9, W9, 0x2
	0x0397B7B8 ADD X8, X8, W9, 0x4, SXTW
	0x0397B7BC ADD X0, X8, 0x138
	0x0397B7C0 LDP X8, X1, [X0]
	0x0397B7C4 MOV X0, X21
	0x0397B7C8 BLR X8
	0x0397B7CC CBZ X0, 0x397BE8C
	0x0397B7D0 ADRP X10, 0x7D2000
	0x0397B7D4 LDR X8, [X0]
	0x0397B7D8 LDR X10, [X10 + 0x980]
	0x0397B7DC MOV X21, X0
	0x0397B7E0 LDRH W9, [X8 + 0x12E]
	0x0397B7E4 LDR X1, [X10]
	0x0397B7E8 CBZ X9, 0x397B80C
	0x0397B7EC LDR X10, [X8 + 0xB0]
	0x0397B7F0 ADD X10, X10, 0x8
	0x0397B7F4 LDUR X11, [X10 - 0x8]
	0x0397B7F8 CMP X11, X1
	0x0397B7FC B.EQ 0x397B81C
	0x0397B800 SUBS X9, X9, 0x1
	0x0397B804 ADD X10, X10, 0x10
	0x0397B808 B.NE 0x397B7F4
	0x0397B80C MOV X0, X21
	0x0397B810 MOV W2, W31
	0x0397B814 BL 0x1C5C788
	0x0397B818 B 0x397B828
	0x0397B81C LDRSW X9, [X10]
	0x0397B820 ADD X8, X8, X9, 0x4, LSL
	0x0397B824 ADD X0, X8, 0x138
	0x0397B828 LDP X8, X1, [X0]
	0x0397B82C MOV X0, X21
	0x0397B830 BLR X8
	0x0397B834 MOV X21, X0
	0x0397B838 CBZ X0, 0x397BDB8
	0x0397B83C ADRP X26, 0x7D2000
	0x0397B840 ADRP X25, 0x7D5000
	0x0397B844 ADRP X27, 0x778000
	0x0397B848 ADRP X28, 0x7D2000
	0x0397B84C ADRP X29, 0x7D2000
	0x0397B850 ADRP X24, 0x779000
	0x0397B854 LDR X26, [X26 + 0xAD0]
	0x0397B858 LDR X25, [X25 + 0x2D8]
	0x0397B85C LDR X27, [X27 + 0xE18]
	0x0397B860 LDR X28, [X28 + 0x988]
	0x0397B864 LDR X29, [X29 + 0x7B0]
	0x0397B868 LDR X24, [X24 + 0xE10]
	0x0397B86C LDR X8, [X21]
	0x0397B870 LDR X1, [X27]
	0x0397B874 LDRH W9, [X8 + 0x12E]
	0x0397B878 CBZ X9, 0x397B89C
	0x0397B87C LDR X10, [X8 + 0xB0]
	0x0397B880 ADD X10, X10, 0x8
	0x0397B884 LDUR X11, [X10 - 0x8]
	0x0397B888 CMP X11, X1
	0x0397B88C B.EQ 0x397B8AC
	0x0397B890 SUBS X9, X9, 0x1
	0x0397B894 ADD X10, X10, 0x10
	0x0397B898 B.NE 0x397B884
	0x0397B89C MOV X0, X21
	0x0397B8A0 MOV W2, W31
	0x0397B8A4 BL 0x1C5C788
	0x0397B8A8 B 0x397B8B8
	0x0397B8AC LDRSW X9, [X10]
	0x0397B8B0 ADD X8, X8, X9, 0x4, LSL
	0x0397B8B4 ADD X0, X8, 0x138
	0x0397B8B8 LDP X8, X1, [X0]
	0x0397B8BC MOV X0, X21
	0x0397B8C0 BLR X8
	0x0397B8C4 TBZ X0, 0x0, 0x397BAFC
	0x0397B8C8 LDR X8, [X21]
	0x0397B8CC LDR X1, [X28]
	0x0397B8D0 LDRH W9, [X8 + 0x12E]
	0x0397B8D4 CBZ X9, 0x397B8F8
	0x0397B8D8 LDR X10, [X8 + 0xB0]
	0x0397B8DC ADD X10, X10, 0x8
	0x0397B8E0 LDUR X11, [X10 - 0x8]
	0x0397B8E4 CMP X11, X1
	0x0397B8E8 B.EQ 0x397B908
	0x0397B8EC SUBS X9, X9, 0x1
	0x0397B8F0 ADD X10, X10, 0x10
	0x0397B8F4 B.NE 0x397B8E0
	0x0397B8F8 MOV X0, X21
	0x0397B8FC MOV W2, W31
	0x0397B900 BL 0x1C5C788
	0x0397B904 B 0x397B914
	0x0397B908 LDRSW X9, [X10]
	0x0397B90C ADD X8, X8, X9, 0x4, LSL
	0x0397B910 ADD X0, X8, 0x138
	0x0397B914 LDP X8, X1, [X0]
	0x0397B918 MOV X0, X21
	0x0397B91C BLR X8
	0x0397B920 CBZ X0, 0x397BD74
	0x0397B924 LDR X2, [X29]
	0x0397B928 ADD X22, X0, 0x10
	0x0397B92C MOV X0, X22
	0x0397B930 MOV W1, W31
	0x0397B934 BL 0x2D1F64C
	0x0397B938 CBZ X0, 0x397BD78
	0x0397B93C LDR W8, [X0 + 0x28]
	0x0397B940 TBNZ X8, 0x1F, 0x397BAD0
	0x0397B944 LDR X2, [X29]
	0x0397B948 MOVZ W1, 0x1
	0x0397B94C MOV X0, X22
	0x0397B950 BL 0x2D1F64C
	0x0397B954 CBZ X0, 0x397BD7C
	0x0397B958 LDR W8, [X0 + 0x28]
	0x0397B95C TBNZ X8, 0x1F, 0x397BAD0
	0x0397B960 LDR X2, [X29]
	0x0397B964 MOVZ W1, 0x2
	0x0397B968 MOV X0, X22
	0x0397B96C BL 0x2D1F64C
	0x0397B970 CBZ X0, 0x397BD80
	0x0397B974 LDR W8, [X0 + 0x28]
	0x0397B978 TBNZ X8, 0x1F, 0x397BAD0
	0x0397B97C LDR X23, [X19]
	0x0397B980 LDR X2, [X29]
	0x0397B984 MOV X0, X22
	0x0397B988 MOV W1, W31
	0x0397B98C BL 0x2D1F64C
	0x0397B990 CBZ X0, 0x397BD84
	0x0397B994 CBZ X23, 0x397BDA0
	0x0397B998 LDR W10, [X23 + 0x1C]
	0x0397B99C LDR W1, [X0 + 0x28]
	0x0397B9A0 LDR X8, [X23 + 0x10]
	0x0397B9A4 LDR X9, [X24]
	0x0397B9A8 ADD W10, W10, 0x1
	0x0397B9AC STR W10, [X23 + 0x1C]
	0x0397B9B0 CBZ X8, 0x397BD98
	0x0397B9B4 LDRSW X10, [X23 + 0x18]
	0x0397B9B8 LDR W11, [X8 + 0x18]
	0x0397B9BC CMP W10, W11
	0x0397B9C0 B.CS 0x397B9D8
	0x0397B9C4 ADD W9, W10, 0x1
	0x0397B9C8 ADD X8, X8, X10, 0x2, LSL
	0x0397B9CC STR W9, [X23 + 0x18]
	0x0397B9D0 STR W1, [X8 + 0x20]
	0x0397B9D4 B 0x397B9EC
	0x0397B9D8 LDR X8, [X9 + 0x20]
	0x0397B9DC LDR X8, [X8 + 0xC0]
	0x0397B9E0 LDR X2, [X8 + 0x70]
	0x0397B9E4 MOV X0, X23
	0x0397B9E8 BL 0x2FDC70C
	0x0397B9EC LDR X23, [X19]
	0x0397B9F0 LDR X2, [X29]
	0x0397B9F4 MOVZ W1, 0x1
	0x0397B9F8 MOV X0, X22
	0x0397B9FC BL 0x2D1F64C
	0x0397BA00 CBZ X0, 0x397BD90
	0x0397BA04 CBZ X23, 0x397BD8C
	0x0397BA08 LDR W10, [X23 + 0x1C]
	0x0397BA0C LDR W1, [X0 + 0x28]
	0x0397BA10 LDR X8, [X23 + 0x10]
	0x0397BA14 LDR X9, [X24]
	0x0397BA18 ADD W10, W10, 0x1
	0x0397BA1C STR W10, [X23 + 0x1C]
	0x0397BA20 CBZ X8, 0x397BD88
	0x0397BA24 LDRSW X10, [X23 + 0x18]
	0x0397BA28 LDR W11, [X8 + 0x18]
	0x0397BA2C CMP W10, W11
	0x0397BA30 B.CS 0x397BA48
	0x0397BA34 ADD W9, W10, 0x1
	0x0397BA38 ADD X8, X8, X10, 0x2, LSL
	0x0397BA3C STR W9, [X23 + 0x18]
	0x0397BA40 STR W1, [X8 + 0x20]
	0x0397BA44 B 0x397BA5C
	0x0397BA48 LDR X8, [X9 + 0x20]
	0x0397BA4C LDR X8, [X8 + 0xC0]
	0x0397BA50 LDR X2, [X8 + 0x70]
	0x0397BA54 MOV X0, X23
	0x0397BA58 BL 0x2FDC70C
	0x0397BA5C LDR X23, [X19]
	0x0397BA60 LDR X2, [X29]
	0x0397BA64 MOVZ W1, 0x2
	0x0397BA68 MOV X0, X22
	0x0397BA6C BL 0x2D1F64C
	0x0397BA70 CBZ X0, 0x397BDA4
	0x0397BA74 CBZ X23, 0x397BD9C
	0x0397BA78 LDR W10, [X23 + 0x1C]
	0x0397BA7C LDR W1, [X0 + 0x28]
	0x0397BA80 LDR X8, [X23 + 0x10]
	0x0397BA84 LDR X9, [X24]
	0x0397BA88 ADD W10, W10, 0x1
	0x0397BA8C STR W10, [X23 + 0x1C]
	0x0397BA90 CBZ X8, 0x397BD94
	0x0397BA94 LDRSW X10, [X23 + 0x18]
	0x0397BA98 LDR W11, [X8 + 0x18]
	0x0397BA9C CMP W10, W11
	0x0397BAA0 B.CS 0x397BAB8
	0x0397BAA4 ADD W9, W10, 0x1
	0x0397BAA8 ADD X8, X8, X10, 0x2, LSL
	0x0397BAAC STR W9, [X23 + 0x18]
	0x0397BAB0 STR W1, [X8 + 0x20]
	0x0397BAB4 B 0x397B86C
	0x0397BAB8 LDR X8, [X9 + 0x20]
	0x0397BABC LDR X8, [X8 + 0xC0]
	0x0397BAC0 LDR X2, [X8 + 0x70]
	0x0397BAC4 MOV X0, X23
	0x0397BAC8 BL 0x2FDC70C
	0x0397BACC B 0x397B86C
	0x0397BAD0 LDR X0, [X26]
	0x0397BAD4 LDR W8, [X0 + 0xE0]
	0x0397BAD8 CBNZ W8, 0x397BAE0
	0x0397BADC BL 0x1C16DFC
	0x0397BAE0 LDR X0, [X25]
	0x0397BAE4 MOV X1, X31
	0x0397BAE8 BL 0x3906FFC
	0x0397BAEC MOV X22, X31
	0x0397BAF0 MOVZ W23, 0x6
	0x0397BAF4 CBNZ X21, 0x397BB08
	0x0397BAF8 B 0x397BB68
	0x0397BAFC MOV X22, X31
	0x0397BB00 MOVZ W23, 0xB
	0x0397BB04 CBZ X21, 0x397BB68
	0x0397BB08 LDR X8, [X21]
	0x0397BB0C ADRP X10, 0x778000
	0x0397BB10 LDRH W9, [X8 + 0x12E]
	0x0397BB14 LDR X10, [X10 + 0xE00]
	0x0397BB18 LDR X1, [X10]
	0x0397BB1C CBZ X9, 0x397BB40
	0x0397BB20 LDR X10, [X8 + 0xB0]
	0x0397BB24 ADD X10, X10, 0x8
	0x0397BB28 LDUR X11, [X10 - 0x8]
	0x0397BB2C CMP X11, X1
	0x0397BB30 B.EQ 0x397BB50

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X22, 0xA67000
	015 Move X21, 0x7D4000
	016 Move W8, [X22+2595]
	017 Move X21, [X21+2824]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {89}
	024 Move X0, 0x7D3000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0x7D6000
	028 Move X0, [X0+496]
	029 Call 0x1C17CF4
	030 Move X0, 0x7D6000
	031 Move X0, [X0+504]
	032 Call 0x1C17CF4
	033 Move X0, 0x7D6000
	034 Move X0, [X0+512]
	035 Call 0x1C17CF4
	036 Move X0, 0x7D6000
	037 Move X0, [X0+520]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D6000
	040 Move X0, [X0+528]
	041 Call 0x1C17CF4
	042 Move X0, 0x7D6000
	043 Move X0, [X0+536]
	044 Call 0x1C17CF4
	045 Move X0, 0x7D6000
	046 Move X0, [X0+544]
	047 Call 0x1C17CF4
	048 Move X0, 0x7D3000
	049 Move X0, [X0+3624]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D5000
	052 Move X0, [X0+1648]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D4000
	055 Move X0, [X0+2192]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D4000
	058 Move X0, [X0+2200]
	059 Call 0x1C17CF4
	060 Move X0, 0x779000
	061 Move X0, [X0+1880]
	062 Call 0x1C17CF4
	063 Move X0, 0x7D6000
	064 Move X0, [X0+552]
	065 Call 0x1C17CF4
	066 Move X0, 0x7D6000
	067 Move X0, [X0+560]
	068 Call 0x1C17CF4
	069 Move X0, 0x7D4000
	070 Move X0, [X0+2808]
	071 Call 0x1C17CF4
	072 Move X0, 0x7D4000
	073 Move X0, [X0+2816]
	074 Call 0x1C17CF4
	075 Move X0, 0x7D4000
	076 Move X0, [X0+2824]
	077 Call 0x1C17CF4
	078 Move X0, 0x7D6000
	079 Move X0, [X0+568]
	080 Call 0x1C17CF4
	081 Move X0, 0x7D6000
	082 Move X0, [X0+576]
	083 Call 0x1C17CF4
	084 Move X0, 0x7D6000
	085 Move X0, [X0+584]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X22+2595], W8
	089 Move X0, [X21]
	090 NotImplemented "Instruction MOVI not yet implemented."
	091 Move [X31+80], X31
	092 Move [X31+48], V0
	093 Move [X31+56], V0
	094 Move X22, 0x7D4000
	095 Move X21, 0x7D4000
	096 Move W8, [X0+224]
	097 Move X22, [X22+2200]
	098 Move X21, [X21+2192]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X19
	104 Move W2, W31
	105 Move X3, X31
	106 Call WingedEdge.GetWingedEdges, X0, X1, X2
	107 Move X8, [X22]
	108 Move X19, X0
	109 Move X0, X8
	110 Call 0x1C17F10
	111 Move X1, [X21]
	112 Move X20, X0
	113 Call HashSet`1<Object>..ctor, X0
	114 Compare X19, 0
	115 JumpIfEqual {320}
	116 Move W8, [X19+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X26, 0x7D4000
	119 Move X27, 0x7D3000
	120 Move X23, 0x7D6000
	121 Move X28, 0x7D6000
	122 Move X26, [X26+2816]
	123 Move X27, [X27+3624]
	124 Move X23, [X23+496]
	125 Move X28, [X28+536]
	126 Move W21, W31
	127 Move W25, W31
	128 Move TEMP, 0
	129 Not TEMP
	130 Move W29, TEMP
	131 Move X2, [X26]
	132 Move X0, X19
	133 Move W1, W21
	134 Call List`1<Object>.get_Item, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {320}
	137 Compare X20, 0
	138 JumpIfEqual {320}
	139 Move X1, [X0+32]
	140 Move X2, [X27]
	141 Move X0, X20
	142 Call HashSet`1<Object>.Contains, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {241}
	147 Move X8, 0x7D6000
	148 Move X8, [X8+520]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0x7D6000
	152 Move X8, [X8+504]
	153 Move X22, X0
	154 Move X1, [X8]
	155 Call Dictionary`2<Object, Boolean>..ctor, X0
	156 Move X2, [X26]
	157 Move X0, X19
	158 Move W1, W21
	159 Call List`1<Object>.get_Item, X0, X1
	160 Move W1, 1
	161 Move X2, X22
	162 Call SurfaceTopology.GetWindingFlags, X0, X1, X2
	163 Compare X22, 0
	164 JumpIfEqual {320}
	165 Move X1, [X23]
	166 Add X8, X31, 8
	167 Move X0, X22
	168 Call Dictionary`2<Object, Boolean>.GetEnumerator, X0
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 Move X8, [X31+40]
	172 Move W24, W31
	173 Move [X31+48], V0
	174 Move [X31+56], V1
	175 Move [X31+80], X8
	176 Move X1, [X28]
	177 Add X0, X31, 48
	178 Call Enumerator<Object, Boolean>.MoveNext, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {187}
	183 Move W8, [X31+72]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CSNEG not yet implemented."
	186 Add W24, W8, W24
	187 Move X8, 0x7D6000
	188 Move X8, [X8+528]
	189 Add X0, X31, 48
	190 Move X1, [X8]
	191 Call Enumerator<Object, Boolean>.Dispose, X0
	192 Move X1, [X23]
	193 Add X8, X31, 8
	194 Move X0, X22
	195 Call Dictionary`2<Object, Boolean>.GetEnumerator, X0
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 Move X8, [X31+40]
	199 Move [X31+48], V0
	200 Move [X31+56], V1
	201 Move [X31+80], X8
	202 Move X1, [X28]
	203 Add X0, X31, 48
	204 Call Enumerator<Object, Boolean>.MoveNext, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {225}
	209 Move W8, [X31+72]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CSET not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction CSET not yet implemented."
	214 Xor W8, W9, W8
	215 Move TEMP, X8
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {202}
	219 Move X0, [X31+64]
	220 Add W25, W25, 1
	221 Compare X0, 0
	222 JumpIfEqual {244}
	223 Move X1, X31
	224 Call Face.Reverse, X0
	225 Move X8, 0x7D6000
	226 Move X8, [X8+528]
	227 Add X0, X31, 48
	228 Move X1, [X8]
	229 Call Enumerator<Object, Boolean>.Dispose, X0
	230 Move X8, 0x7D6000
	231 Move X8, [X8+512]
	232 Move X0, X22
	233 Move X1, [X8]
	234 Call Dictionary`2<Object, Boolean>.get_Keys, X0
	235 Move X8, 0x7D5000
	236 Move X8, [X8+1648]
	237 Move X1, X0
	238 Move X0, X20
	239 Move X2, [X8]
	240 Call HashSet`1<Object>.UnionWith, X0, X1
	241 Move W8, [X19+24]
	242 Add W21, W21, 1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Call 0x1C17F20
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Call 0x3EB2AD0
	247 Move X24, [X0]
	248 Call 0x3EB2AE0
	249 Move X8, 0x7D6000
	250 Move X8, [X8+528]
	251 Add X0, X31, 48
	252 Move X1, [X8]
	253 Call Enumerator<Object, Boolean>.Dispose, X0
	254 Compare X24, 0
	255 JumpIfEqual {230}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Call 0x3EB2AD0
	258 Move X8, [X0]
	259 Move [X31], X8
	260 Call 0x3EB2AE0
	261 Move X8, 0x7D6000
	262 Move X8, [X8+528]
	263 Add X0, X31, 48
	264 Move X1, [X8]
	265 Call Enumerator<Object, Boolean>.Dispose, X0
	266 Move X0, [X31]
	267 Compare X0, 0
	268 JumpIfEqual {192}
	269 Call 0x1C17F18
	270 Move W25, W31
	271 Move X19, 0x7D3000
	272 Move X19, [X19+2520]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, 0x7D6000
	275 Move X8, [X8+576]
	276 Move X20, [X8]
	277 Move X0, [X19]
	278 Call 0x1C17F10
	279 Move X8, 0x7D6000
	280 Move X8, [X8+584]
	281 Move X19, X0
	282 Move W1, 3
	283 Move X2, [X8]
	284 Move X8, 0x779000
	285 Move X8, [X8+1880]
	286 Add X1, X31, 8
	287 Move [X31+8], W25
	288 Move X0, [X8]
	289 Call 0x1C17E04
	290 Move X8, 0x7D6000
	291 Move X8, [X8+568]
	292 Move X1, X0
	293 Move X2, X31
	294 Move X8, [X8]
	295 Move X0, X8
	296 Call String.Format, X0, X1
	297 Move X20, X0
	298 Move X0, [X19]
	299 Call 0x1C17F10
	300 Move X19, X0
	301 Move W1, W31
	302 Move X2, X20
	303 Move X3, X31
	304 Call ActionResult..ctor, X0, X1, X2
	305 Move X0, X19
	306 Move X20, [X31+176]
	307 Move X19, [X31+184]
	308 Move X22, [X31+160]
	309 Move X21, [X31+168]
	310 Move X24, [X31+144]
	311 Move X23, [X31+152]
	312 Move X26, [X31+128]
	313 Move X25, [X31+136]
	314 Move X28, [X31+112]
	315 Move X27, [X31+120]
	316 Move X29, [X31+96]
	317 Move X30, [X31+104]
	318 Add X31, X31, 192
	319 Return X0
	320 Call 0x1C17F20
	321 Move X19, X0
	322 Move X24, X31
	323 Move X0, X24
	324 Call 0x1C17F18
	325 Move X19, X0
	326 Move X20, X31
	327 Move X20, [X31]
	328 Move X19, X0
	329 Move X8, 0x7D6000
	330 Move X8, [X8+528]
	331 Move X1, [X8]
	332 Add X0, X31, 48
	333 Call Enumerator<Object, Boolean>.Dispose, X0
	334 Compare X20, 0
	335 JumpIfEqual {346}
	336 Move X0, X20
	337 Call 0x1C17F18
	338 Move X19, X0
	339 Move X8, 0x7D6000
	340 Move X8, [X8+528]
	341 Move X1, [X8]
	342 Add X0, X31, 48
	343 Call Enumerator<Object, Boolean>.Dispose, X0
	344 Compare X24, 0
	345 JumpIfNotEqual {348}
	346 Move X0, X19
	347 Call 0x1D2D690
	348 Move X0, X24
	349 Call 0x1C17F18
	350 Call 0x1991590

Method: System.Void GetWindingFlags(UnityEngine.ProBuilder.WingedEdge edge, System.Boolean flag, System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.Face, System.Boolean> flags)

Disassembly:
	0x0397BB34 SUBS X9, X9, 0x1
	0x0397BB38 ADD X10, X10, 0x10
	0x0397BB3C B.NE 0x397BB28
	0x0397BB40 MOV X0, X21
	0x0397BB44 MOV W2, W31
	0x0397BB48 BL 0x1C5C788
	0x0397BB4C B 0x397BB5C
	0x0397BB50 LDRSW X9, [X10]
	0x0397BB54 ADD X8, X8, X9, 0x4, LSL
	0x0397BB58 ADD X0, X8, 0x138
	0x0397BB5C LDP X8, X1, [X0]
	0x0397BB60 MOV X0, X21
	0x0397BB64 BLR X8
	0x0397BB68 CBNZ X22, 0x397BDBC
	0x0397BB6C CMP W23, 0xB
	0x0397BB70 B.EQ 0x397BB78
	0x0397BB74 CBNZ W23, 0x397BE6C
	0x0397BB78 ADRP X21, 0x7D2000
	0x0397BB7C LDR X21, [X21 + 0xA88]
	0x0397BB80 MOV X0, X20
	0x0397BB84 BL 0x3979E98
	0x0397BB88 LDR X8, [X21]
	0x0397BB8C MOV W21, W0
	0x0397BB90 MOVZ W1, 0x3
	0x0397BB94 MOV X0, X8
	0x0397BB98 BL 0x1C16D6C
	0x0397BB9C LDR X8, [X19]
	0x0397BBA0 CBZ X8, 0x397BE8C
	0x0397BBA4 ADRP X24, 0x7A2000
	0x0397BBA8 LDR X24, [X24 + 0xF38]
	0x0397BBAC MOV X22, X0
	0x0397BBB0 MOV X0, X8
	0x0397BBB4 MOV W1, W31
	0x0397BBB8 LDR X2, [X24]
	0x0397BBBC BL 0x2FDC41C
	0x0397BBC0 CBZ X20, 0x397BE8C
	0x0397BBC4 ADRP X25, 0x7D2000
	0x0397BBC8 LDR X8, [X20]
	0x0397BBCC LDR X25, [X25 + 0xA98]
	0x0397BBD0 MOV W23, W0
	0x0397BBD4 LDRH W9, [X8 + 0x12E]
	0x0397BBD8 LDR X1, [X25]
	0x0397BBDC CBZ X9, 0x397BC00
	0x0397BBE0 LDR X10, [X8 + 0xB0]
	0x0397BBE4 ADD X10, X10, 0x8
	0x0397BBE8 LDUR X11, [X10 - 0x8]
	0x0397BBEC CMP X11, X1
	0x0397BBF0 B.EQ 0x397BC10
	0x0397BBF4 SUBS X9, X9, 0x1
	0x0397BBF8 ADD X10, X10, 0x10
	0x0397BBFC B.NE 0x397BBE8
	0x0397BC00 MOV X0, X20
	0x0397BC04 MOV W2, W31
	0x0397BC08 BL 0x1C5C788
	0x0397BC0C B 0x397BC1C
	0x0397BC10 LDRSW X9, [X10]
	0x0397BC14 ADD X8, X8, X9, 0x4, LSL
	0x0397BC18 ADD X0, X8, 0x138
	0x0397BC1C LDP X8, X2, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xA67000
	010 Move W8, [X22+2596]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7D6000
	019 Move X0, [X0+592]
	020 Call 0x1C17CF4
	021 Move X0, 0x7D6000
	022 Move X0, [X0+600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2596], W8
	026 Compare X21, 0
	027 JumpIfEqual {76}
	028 Compare X19, 0
	029 JumpIfEqual {76}
	030 Move X8, 0x7D6000
	031 Move X8, [X8+592]
	032 Move X1, [X21+32]
	033 Move X25, 0x7D6000
	034 And W2, W20, 1
	035 Move X3, [X8]
	036 Move X25, [X25+600]
	037 Move X0, X19
	038 Call Dictionary`2<Object, Boolean>.Add, X0, X1, X2
	039 Move X22, X21
	040 Compare X22, 0
	041 JumpIfEqual {76}
	042 Move X23, [X22+56]
	043 Compare X23, 0
	044 JumpIfEqual {65}
	045 Move X1, [X23+32]
	046 Move X2, [X25]
	047 Move X0, X19
	048 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {65}
	053 Move X0, X22
	054 Call SurfaceTopology.GetCommonEdgeInWindingOrder, X0
	055 Move X24, X0
	056 Move X0, X23
	057 Call SurfaceTopology.GetCommonEdgeInWindingOrder, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 Xor W8, W8, W20
	061 And W1, W8, 1
	062 Move X0, X23
	063 Move X2, X19
	064 Call SurfaceTopology.GetWindingFlags, X0, X1, X2
	065 Move X22, [X22+40]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Return 
	076 Call 0x1C17F20

Method: UnityEngine.ProBuilder.ActionResult ConformOppositeNormal(UnityEngine.ProBuilder.WingedEdge source)

Disassembly:
	0x0397BD7C BL 0x1C16F20
	0x0397BD80 BL 0x1C16F20
	0x0397BD84 BL 0x1C16F20
	0x0397BD88 BL 0x1C16F20
	0x0397BD8C BL 0x1C16F20
	0x0397BD90 BL 0x1C16F20
	0x0397BD94 BL 0x1C16F20
	0x0397BD98 BL 0x1C16F20
	0x0397BD9C BL 0x1C16F20
	0x0397BDA0 BL 0x1C16F20
	0x0397BDA4 BL 0x1C16F20
	0x0397BDA8 BL 0x1C16F28
	0x0397BDAC BL 0x1C171E0
	0x0397BDB0 BL 0x1C16F20
	0x0397BDB4 BL 0x1C16F20
	0x0397BDB8 BL 0x1C16F20
	0x0397BDBC MOV X0, X22
	0x0397BDC0 BL 0x1C16F18
	0x0397BDC4 B 0x397BF0C
	0x0397BDC8 B 0x397BDD8
	0x0397BDCC B 0x397BF0C
	0x0397BDD0 B 0x397BDD8
	0x0397BDD4 B 0x397BDD8
	0x0397BDD8 MOV X19, X0
	0x0397BDDC CMP W1, 0x1
	0x0397BDE0 B.NE 0x397BFA4
	0x0397BDE4 MOV X0, X19
	0x0397BDE8 BL 0x3EB1AD0
	0x0397BDEC MOV X19, X0
	0x0397BDF0 ADRP X0, 0x778000
	0x0397BDF4 LDR X0, [X0 + 0x7D0]
	0x0397BDF8 BL 0x1C16D08
	0x0397BDFC LDR X8, [X19]
	0x0397BE00 LDR X1, [X8]
	0x0397BE04 BL 0x1C17270
	0x0397BE08 TBZ X0, 0x0, 0x397BE90
	0x0397BE0C LDR X19, [X19]
	0x0397BE10 BL 0x3EB1AE0
	0x0397BE14 CBZ X19, 0x397BE8C
	0x0397BE18 LDR X8, [X19]
	0x0397BE1C MOV X0, X19
	0x0397BE20 LDP X9, X1, [X8 + 0x168]
	0x0397BE24 BLR X9
	0x0397BE28 MOV X19, X0
	0x0397BE2C ADRP X0, 0x7D5000
	0x0397BE30 LDR X0, [X0 + 0x2E0]
	0x0397BE34 BL 0x1C16D08
	0x0397BE38 MOV X1, X19
	0x0397BE3C MOV X2, X31
	0x0397BE40 BL 0x321B938
	0x0397BE44 MOV X19, X0
	0x0397BE48 ADRP X0, 0x7D2000
	0x0397BE4C LDR X0, [X0 + 0xAD0]
	0x0397BE50 BL 0x1C16D08
	0x0397BE54 LDR W8, [X0 + 0xE0]
	0x0397BE58 CBNZ W8, 0x397BE60
	0x0397BE5C BL 0x1C16DFC
	0x0397BE60 MOV X0, X19
	0x0397BE64 MOV X1, X31
	0x0397BE68 BL 0x3906FFC
	0x0397BE6C MOV W0, W31
	0x0397BE70 LDP X20, X19, [X31 + 0x50]
	0x0397BE74 LDP X22, X21, [X31 + 0x40]
	0x0397BE78 LDP X24, X23, [X31 + 0x30]
	0x0397BE7C LDP X26, X25, [X31 + 0x20]
	0x0397BE80 LDP X28, X27, [X31 + 0x10]
	0x0397BE84 LDP X29, X30, [X31], #0x60
	0x0397BE88 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA67000
	006 Move W8, [X20+2597]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x7D3000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move X0, 0x7D6000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move X0, 0x7D6000
	019 Move X0, [X0+616]
	020 Call 0x1C17CF4
	021 Move X0, 0x7D6000
	022 Move X0, [X0+624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2597], W8
	026 Move X21, 0x7D3000
	027 Move X21, [X21+2520]
	028 Compare X19, 0
	029 JumpIfEqual {54}
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfEqual {54}
	033 Move X0, X19
	034 Call SurfaceTopology.GetCommonEdgeInWindingOrder, X0
	035 Move X8, [X19+56]
	036 Move X20, X0
	037 Move X0, X8
	038 Call SurfaceTopology.GetCommonEdgeInWindingOrder, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X19+56]
	041 Compare X8, 0
	042 JumpIfEqual {76}
	043 Move X0, [X8+32]
	044 Compare X0, 0
	045 JumpIfEqual {76}
	046 Move X1, X31
	047 Call Face.Reverse, X0
	048 Move X0, [X21]
	049 Call 0x1C17F10
	050 Move X8, 0x7D6000
	051 Move X8, [X8+608]
	052 Move X19, X0
	053 Move W1, W31
	054 Move X0, [X21]
	055 Move X19, 0x7D6000
	056 Move X19, [X19+616]
	057 Call 0x1C17F10
	058 Move X2, [X19]
	059 Move X19, X0
	060 Move W1, 1
	061 Move X0, [X21]
	062 Call 0x1C17F10
	063 Move X8, 0x7D6000
	064 Move X8, [X8+624]
	065 Move X19, X0
	066 Move W1, 3
	067 Move X2, [X8]
	068 Move X3, X31
	069 Call ActionResult..ctor, X0, X1, X2
	070 Move X0, X19
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return X0
	076 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge GetCommonEdgeInWindingOrder(UnityEngine.ProBuilder.WingedEdge wing)

Disassembly:
	0x0397BC20 MOV X0, X20
	0x0397BC24 MOV W1, W23
	0x0397BC28 BLR X8
	0x0397BC2C CBZ X22, 0x397BE8C
	0x0397BC30 LDR W8, [X22 + 0x18]
	0x0397BC34 CBZ W8, 0x397BDA8
	0x0397BC38 STP S0, S1, [X22 + 0x20]
	0x0397BC3C LDR X0, [X19]
	0x0397BC40 CBZ X0, 0x397BE8C
	0x0397BC44 LDR X2, [X24]
	0x0397BC48 MOVZ W1, 0x1
	0x0397BC4C BL 0x2FDC41C
	0x0397BC50 LDR X8, [X20]
	0x0397BC54 LDR X1, [X25]
	0x0397BC58 MOV W23, W0
	0x0397BC5C LDRH W9, [X8 + 0x12E]
	0x0397BC60 CBZ X9, 0x397BC84
	0x0397BC64 LDR X10, [X8 + 0xB0]
	0x0397BC68 ADD X10, X10, 0x8
	0x0397BC6C LDUR X11, [X10 - 0x8]
	0x0397BC70 CMP X11, X1
	0x0397BC74 B.EQ 0x397BC94
	0x0397BC78 SUBS X9, X9, 0x1
	0x0397BC7C ADD X10, X10, 0x10
	0x0397BC80 B.NE 0x397BC6C
	0x0397BC84 MOV X0, X20
	0x0397BC88 MOV W2, W31
	0x0397BC8C BL 0x1C5C788
	0x0397BC90 B 0x397BCA0
	0x0397BC94 LDRSW X9, [X10]
	0x0397BC98 ADD X8, X8, X9, 0x4, LSL
	0x0397BC9C ADD X0, X8, 0x138
	0x0397BCA0 LDP X8, X2, [X0]
	0x0397BCA4 MOV X0, X20
	0x0397BCA8 MOV W1, W23
	0x0397BCAC BLR X8
	0x0397BCB0 LDR W8, [X22 + 0x18]
	0x0397BCB4 CMP W8, 0x1
	0x0397BCB8 B.LS 0x397BDA8
	0x0397BCBC STP S0, S1, [X22 + 0x28]
	0x0397BCC0 LDR X0, [X19]
	0x0397BCC4 CBZ X0, 0x397BE8C
	0x0397BCC8 LDR X2, [X24]
	0x0397BCCC MOVZ W1, 0x2
	0x0397BCD0 BL 0x2FDC41C
	0x0397BCD4 LDR X8, [X20]
	0x0397BCD8 LDR X1, [X25]
	0x0397BCDC MOV W23, W0
	0x0397BCE0 LDRH W9, [X8 + 0x12E]
	0x0397BCE4 CBZ X9, 0x397BD08
	0x0397BCE8 LDR X10, [X8 + 0xB0]
	0x0397BCEC ADD X10, X10, 0x8
	0x0397BCF0 LDUR X11, [X10 - 0x8]
	0x0397BCF4 CMP X11, X1
	0x0397BCF8 B.EQ 0x397BD18
	0x0397BCFC SUBS X9, X9, 0x1
	0x0397BD00 ADD X10, X10, 0x10
	0x0397BD04 B.NE 0x397BCF0
	0x0397BD08 MOV X0, X20
	0x0397BD0C MOV W2, W31
	0x0397BD10 BL 0x1C5C788
	0x0397BD14 B 0x397BD24
	0x0397BD18 LDRSW X9, [X10]
	0x0397BD1C ADD X8, X8, X9, 0x4, LSL
	0x0397BD20 ADD X0, X8, 0x138
	0x0397BD24 LDP X8, X2, [X0]
	0x0397BD28 MOV X0, X20
	0x0397BD2C MOV W1, W23
	0x0397BD30 BLR X8
	0x0397BD34 LDR W8, [X22 + 0x18]
	0x0397BD38 CMP W8, 0x2
	0x0397BD3C B.LS 0x397BDA8
	0x0397BD40 MOV X0, X22
	0x0397BD44 STP S0, S1, [X22 + 0x30]
	0x0397BD48 BL 0x3979E98
	0x0397BD4C CMP W0, W21
	0x0397BD50 B.EQ 0x397BD6C
	0x0397BD54 LDR X0, [X19]
	0x0397BD58 CBZ X0, 0x397BE8C
	0x0397BD5C ADRP X8, 0x7D5000
	0x0397BD60 LDR X8, [X8 + 0x2B8]
	0x0397BD64 LDR X1, [X8]
	0x0397BD68 BL 0x2FDE29C
	0x0397BD6C MOVZ W0, 0x1
	0x0397BD70 B 0x397BE70
	0x0397BD74 BL 0x1C16F20
	0x0397BD78 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA67000
	005 Move W8, [X20+2598]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7A1000
	012 Move X0, [X0+1536]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2598], W8
	016 Compare X19, 0
	017 JumpIfEqual {79}
	018 Move X8, [X19+32]
	019 Compare X8, 0
	020 JumpIfEqual {79}
	021 Move X8, [X8+16]
	022 Compare X8, 0
	023 JumpIfEqual {79}
	024 Move W9, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W10, [X19+16]
	027 Move W11, [X19+20]
	028 Move W13, W31
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add W14, W13, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add W12, W14, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X15, X8, W13
	035 Add W13, W13, 2
	036 Add X16, X8, W14
	037 Move W14, [X15+32]
	038 Add X13, X8, W13
	039 Move W15, [X16+32]
	040 Move W13, [X13+32]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W13, W12, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X19, 0x7A1000
	056 Move X19, [X19+1536]
	057 Move X0, [X19]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X19]
	063 Move X8, [X0+184]
	064 Move X8, [X8]
	065 Move X8, [X19+24]
	066 Move [X31+8], X8
	067 Move W2, [X19+24]
	068 Move W1, [X19+28]
	069 Add X0, X31, 8
	070 Move X3, X31
	071 Move [X31+8], X31
	072 Call Edge..ctor, X0, X1, X2
	073 Move X0, [X31+8]
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

Method: System.Void MatchNormal(UnityEngine.ProBuilder.Face source, UnityEngine.ProBuilder.Face target, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x0397BE8C BL 0x1C16F20
	0x0397BE90 MOVZ W0, 0x8
	0x0397BE94 BL 0x3EB1AF0
	0x0397BE98 LDR X8, [X19]
	0x0397BE9C STR X8, [X0]
	0x0397BEA0 ADRP X1, 0x539000
	0x0397BEA4 ADD X1, X1, 0xE58
	0x0397BEA8 MOV X2, X31
	0x0397BEAC BL 0x3EB1B00
	0x0397BEB0 MOV X19, X0
	0x0397BEB4 BL 0x3EB1AE0
	0x0397BEB8 B 0x397BFA4
	0x0397BEBC B 0x397BF0C
	0x0397BEC0 B 0x397BF0C
	0x0397BEC4 B 0x397BF0C
	0x0397BEC8 B 0x397BF0C
	0x0397BECC B 0x397BF0C
	0x0397BED0 B 0x397BF0C
	0x0397BED4 B 0x397BF0C
	0x0397BED8 B 0x397BF0C
	0x0397BEDC B 0x397BF0C
	0x0397BEE0 B 0x397BF0C
	0x0397BEE4 B 0x397BF0C
	0x0397BEE8 B 0x397BF0C
	0x0397BEEC B 0x397BF0C
	0x0397BEF0 B 0x397BF0C
	0x0397BEF4 B 0x397BF0C
	0x0397BEF8 B 0x397BF0C
	0x0397BEFC B 0x397BF0C
	0x0397BF00 B 0x397BF0C
	0x0397BF04 B 0x397BF0C
	0x0397BF08 B 0x397BF0C
	0x0397BF0C CMP W1, 0x1
	0x0397BF10 B.NE 0x397BF2C
	0x0397BF14 BL 0x3EB1AD0
	0x0397BF18 LDR X22, [X0]
	0x0397BF1C BL 0x3EB1AE0
	0x0397BF20 MOV W23, W31
	0x0397BF24 CBNZ X21, 0x397BB08
	0x0397BF28 B 0x397BB68
	0x0397BF2C MOV X19, X0
	0x0397BF30 MOV X22, X31
	0x0397BF34 B 0x397BF3C
	0x0397BF38 MOV X19, X0
	0x0397BF3C CBZ X21, 0x397BFA0
	0x0397BF40 LDR X8, [X21]
	0x0397BF44 ADRP X10, 0x778000
	0x0397BF48 LDRH W9, [X8 + 0x12E]
	0x0397BF4C LDR X10, [X10 + 0xE00]
	0x0397BF50 LDR X1, [X10]
	0x0397BF54 CBZ X9, 0x397BF78
	0x0397BF58 LDR X10, [X8 + 0xB0]
	0x0397BF5C ADD X10, X10, 0x8
	0x0397BF60 LDUR X11, [X10 - 0x8]
	0x0397BF64 CMP X11, X1
	0x0397BF68 B.EQ 0x397BF88
	0x0397BF6C SUBS X9, X9, 0x1
	0x0397BF70 ADD X10, X10, 0x10
	0x0397BF74 B.NE 0x397BF60
	0x0397BF78 MOV X0, X21
	0x0397BF7C MOV W2, W31
	0x0397BF80 BL 0x1C5C788
	0x0397BF84 B 0x397BF94
	0x0397BF88 LDRSW X9, [X10]
	0x0397BF8C ADD X8, X8, X9, 0x4, LSL
	0x0397BF90 ADD X0, X8, 0x138
	0x0397BF94 LDP X8, X1, [X0]
	0x0397BF98 MOV X0, X21
	0x0397BF9C BLR X8
	0x0397BFA0 CBNZ X22, 0x397BFAC
	0x0397BFA4 MOV X0, X19
	0x0397BFA8 BL 0x1D2C690
	0x0397BFAC MOV X0, X22
	0x0397BFB0 BL 0x1C16F18
	0x0397BFB4 BL 0x1990590
	0x0397BFB8 STP X30, X27, [X31 - 0x50]!
	0x0397BFBC STP X26, X25, [X31 + 0x10]
	0x0397BFC0 STP X24, X23, [X31 + 0x20]
	0x0397BFC4 STP X22, X21, [X31 + 0x30]
	0x0397BFC8 STP X20, X19, [X31 + 0x40]
	0x0397BFCC ADRP X23, 0xA66000
	0x0397BFD0 LDRB W8, [X23 + 0xA2B]
	0x0397BFD4 MOV W20, W3
	0x0397BFD8 MOV W21, W2
	0x0397BFDC MOV X19, X1
	0x0397BFE0 MOV X22, X0
	0x0397BFE4 TBNZ X8, 0x0, 0x397C014
	0x0397BFE8 ADRP X0, 0x7D3000
	0x0397BFEC LDR X0, [X0 + 0x1E8]
	0x0397BFF0 BL 0x1C16CF4
	0x0397BFF4 ADRP X0, 0x7D2000
	0x0397BFF8 LDR X0, [X0 + 0xF60]
	0x0397BFFC BL 0x1C16CF4
	0x0397C000 ADRP X0, 0x779000
	0x0397C004 LDR X0, [X0 + 0x9B0]
	0x0397C008 BL 0x1C16CF4
	0x0397C00C MOVZ W8, 0x1
	0x0397C010 STRB W8, [X23 + 0xA2B]
	0x0397C014 CBZ X22, 0x397C1BC
	0x0397C018 ADRP X25, 0x7D2000
	0x0397C01C LDR X8, [X22]
	0x0397C020 LDR X25, [X25 + 0x1E8]
	0x0397C024 ADRP X23, 0x779000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xA67000
	011 Move W8, [X22+2599]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x7A1000
	020 Move X0, [X0+1536]
	021 Call 0x1C17CF4
	022 Move X0, 0x7D5000
	023 Move X0, [X0+1480]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D5000
	026 Move X0, [X0+3048]
	027 Call 0x1C17CF4
	028 Move X0, 0x7D5000
	029 Move X0, [X0+3056]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2599], W8
	033 Move [X31+8], X31
	034 Compare X20, 0
	035 JumpIfEqual {116}
	036 Move X22, 0x7D5000
	037 Move X22, [X22+1480]
	038 Move X0, X20
	039 Move X1, X31
	040 Call Face.get_edgesInternal, X0
	041 Move X1, X21
	042 Move X2, X31
	043 Call EdgeLookup.GetEdgeLookup, X0, X1
	044 Move X1, [X22]
	045 Call Enumerable.ToList, X0
	046 Compare X19, 0
	047 JumpIfEqual {116}
	048 Move X20, X0
	049 Move X0, X19
	050 Move X1, X31
	051 Call Face.get_edgesInternal, X0
	052 Move X1, X21
	053 Move X2, X31
	054 Call EdgeLookup.GetEdgeLookup, X0, X1
	055 Move X1, [X22]
	056 Call Enumerable.ToList, X0
	057 Compare X20, 0
	058 JumpIfEqual {116}
	059 Move W8, [X20+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X25, 0x7D5000
	062 Move X26, 0x7A1000
	063 Move X25, [X25+3056]
	064 Move X26, [X26+1536]
	065 Move X21, X0
	066 Move W22, W31
	067 Move X2, [X25]
	068 Move X0, X20
	069 Move W1, W22
	070 Call List`1<EdgeLookup>.get_Item, X0, X1
	071 Move [X31+8], X1
	072 Compare X21, 0
	073 JumpIfEqual {116}
	074 Move W8, [X21+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W23, W31
	077 Move X2, [X25]
	078 Move X0, X21
	079 Move W1, W23
	080 Call List`1<EdgeLookup>.get_Item, X0, X1
	081 Move X0, [X26]
	082 Move X24, X1
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Add X0, X31, 8
	088 Move X1, X24
	089 Move X2, X31
	090 Call Edge.Equals, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {101}
	095 Move W8, [X21+24]
	096 Add W23, W23, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X20+24]
	099 Add W22, W22, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W8, [X31+8]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X19
	104 Move X1, X31
	105 Call Face.Reverse, X0
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move X30, [X31+80]
	115 Return 
	116 Call 0x1C17F20

