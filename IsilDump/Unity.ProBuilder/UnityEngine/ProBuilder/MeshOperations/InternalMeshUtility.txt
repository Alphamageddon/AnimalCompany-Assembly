Type: UnityEngine.ProBuilder.MeshOperations.InternalMeshUtility

Method: UnityEngine.Vector3 AverageNormalWithIndexes(UnityEngine.ProBuilder.SharedVertex shared, System.Int32[] all, System.Collections.Generic.IList`1<UnityEngine.Vector3> norm)

Disassembly:
	0x0396F998 B 0x396F9C8
	0x0396F99C B 0x396F9C8
	0x0396F9A0 B 0x396F9C8
	0x0396F9A4 B 0x396F9C8
	0x0396F9A8 B 0x396F9C8
	0x0396F9AC B 0x396F9C8
	0x0396F9B0 B 0x396F9C8
	0x0396F9B4 B 0x396F9C8
	0x0396F9B8 B 0x396F9C8
	0x0396F9BC B 0x396F9C8
	0x0396F9C0 B 0x396F9C8
	0x0396F9C4 B 0x396F9C8
	0x0396F9C8 CMP W1, 0x1
	0x0396F9CC B.NE 0x396F9FC
	0x0396F9D0 BL 0x3EB1AD0
	0x0396F9D4 LDR X20, [X0]
	0x0396F9D8 BL 0x3EB1AE0
	0x0396F9DC ADRP X8, 0x7DF000
	0x0396F9E0 LDR X8, [X8 + 0xD98]
	0x0396F9E4 ADD X0, X31, 0x40
	0x0396F9E8 LDR X1, [X8]
	0x0396F9EC BL 0x2BC434C
	0x0396F9F0 CBZ X20, 0x396F914
	0x0396F9F4 MOV X0, X20
	0x0396F9F8 BL 0x1C16F18
	0x0396F9FC MOV X19, X0
	0x0396FA00 MOV X20, X31
	0x0396FA04 B 0x396FA0C
	0x0396FA08 MOV X19, X0
	0x0396FA0C ADRP X8, 0x7DF000
	0x0396FA10 LDR X8, [X8 + 0xD98]
	0x0396FA14 LDR X1, [X8]
	0x0396FA18 ADD X0, X31, 0x40
	0x0396FA1C BL 0x2BC434C
	0x0396FA20 CBNZ X20, 0x396FA2C
	0x0396FA24 MOV X0, X19
	0x0396FA28 BL 0x1D2C690
	0x0396FA2C MOV X0, X20
	0x0396FA30 BL 0x1C16F18
	0x0396FA34 BL 0x1990590
	0x0396FA38 SUB X31, X31, 0xB0
	0x0396FA3C STP X29, X30, [X31 + 0x50]
	0x0396FA40 STP X28, X27, [X31 + 0x60]
	0x0396FA44 STP X26, X25, [X31 + 0x70]
	0x0396FA48 STP X24, X23, [X31 + 0x80]
	0x0396FA4C STP X22, X21, [X31 + 0x90]
	0x0396FA50 STP X20, X19, [X31 + 0xA0]
	0x0396FA54 ADRP X25, 0xA72000
	0x0396FA58 ADRP X24, 0x7E0000
	0x0396FA5C ADRP X19, 0x7E0000
	0x0396FA60 ADRP X23, 0x7DE000
	0x0396FA64 ADRP X21, 0x7DE000
	0x0396FA68 LDRB W8, [X25 + 0x9F2]
	0x0396FA6C LDR X24, [X24 + 0xEC0]
	0x0396FA70 LDR X19, [X19 + 0xEC8]
	0x0396FA74 LDR X23, [X23 + 0xCD0]
	0x0396FA78 LDR X21, [X21 + 0xCC8]
	0x0396FA7C MOV X20, X1
	0x0396FA80 MOV X22, X0
	0x0396FA84 TBNZ X8, 0x0, 0x396FB2C
	0x0396FA88 ADRP X0, 0x7E0000
	0x0396FA8C LDR X0, [X0 + 0xED0]
	0x0396FA90 BL 0x1C16CF4
	0x0396FA94 ADRP X0, 0x7E0000
	0x0396FA98 LDR X0, [X0 + 0xED8]
	0x0396FA9C BL 0x1C16CF4
	0x0396FAA0 ADRP X0, 0x7E0000
	0x0396FAA4 LDR X0, [X0 + 0xEE0]
	0x0396FAA8 BL 0x1C16CF4
	0x0396FAAC ADRP X0, 0x7E0000
	0x0396FAB0 LDR X0, [X0 + 0xEC8]
	0x0396FAB4 BL 0x1C16CF4
	0x0396FAB8 ADRP X0, 0x7DE000
	0x0396FABC LDR X0, [X0 + 0xC80]
	0x0396FAC0 BL 0x1C16CF4
	0x0396FAC4 ADRP X0, 0x7E0000
	0x0396FAC8 LDR X0, [X0 + 0xEC0]
	0x0396FACC BL 0x1C16CF4
	0x0396FAD0 ADRP X0, 0x7E0000
	0x0396FAD4 LDR X0, [X0 + 0xDD8]
	0x0396FAD8 BL 0x1C16CF4
	0x0396FADC ADRP X0, 0x7E0000
	0x0396FAE0 LDR X0, [X0 + 0xDF8]
	0x0396FAE4 BL 0x1C16CF4
	0x0396FAE8 ADRP X0, 0x7E0000
	0x0396FAEC LDR X0, [X0 + 0xE20]
	0x0396FAF0 BL 0x1C16CF4
	0x0396FAF4 ADRP X0, 0x7DE000
	0x0396FAF8 LDR X0, [X0 + 0xCC0]
	0x0396FAFC BL 0x1C16CF4
	0x0396FB00 ADRP X0, 0x7E0000
	0x0396FB04 LDR X0, [X0 + 0xE38]
	0x0396FB08 BL 0x1C16CF4
	0x0396FB0C ADRP X0, 0x7DE000
	0x0396FB10 LDR X0, [X0 + 0xCC8]
	0x0396FB14 BL 0x1C16CF4
	0x0396FB18 ADRP X0, 0x7DE000
	0x0396FB1C LDR X0, [X0 + 0xCD0]
	0x0396FB20 BL 0x1C16CF4
	0x0396FB24 MOVZ W8, 0x1
	0x0396FB28 STRB W8, [X25 + 0x9F2]

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xA73000
	013 Move W8, [X22+2549]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x7DF000
	022 Move X0, [X0+3968]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2549], W8
	026 Move X22, 0xA6A000
	027 Move W8, [X22+1923]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x785000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1923], W8
	035 Compare X20, 0
	036 JumpIfEqual {116}
	037 Move X8, 0x785000
	038 Move X8, [X8+1440]
	039 Move X8, [X8]
	040 Move X9, [X8+184]
	041 Move X8, [X20+24]
	042 Move S9, [X9+4]
	043 Move S8, [X9+8]
	044 Move V10, [X9]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X25, 0x7DF000
	047 Move X25, [X25+3968]
	048 Move W23, W31
	049 Move X24, X31
	050 And X8, X8, 0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X21, 0
	053 JumpIfEqual {116}
	054 Add X8, X20, X24
	055 Add X22, X8, 32
	056 Move W1, [X22]
	057 Move X0, X21
	058 Move X2, X31
	059 Call SharedVertex.Contains, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {95}
	064 Move W8, [X20+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {116}
	068 Move X8, [X19]
	069 Move W22, [X22]
	070 Move X1, [X25]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X19
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X19
	089 Move W1, W22
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Add S10, S10, S0
	092 Add S9, S9, S1
	093 Add S8, S8, S2
	094 Add W23, W23, 1
	095 Move W8, [X20+24]
	096 Add X24, X24, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W23, W31
	099 NotImplemented "Instruction SCVTF not yet implemented."
	100 NotImplemented "Instruction FDIV not yet implemented."
	101 NotImplemented "Instruction FDIV not yet implemented."
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X30, [X31+32]
	110 Move X25, [X31+40]
	111 Move D9, [X31+16]
	112 Move D8, [X31+24]
	113 Move V10, [X31+96]
	114 Return X0
	115 Call 0x1C17F28
	116 Call 0x1C17F20

Method: UnityEngine.ProBuilder.ProBuilderMesh CreateMeshWithTransform(UnityEngine.Transform t, System.Boolean preserveFaces)

Disassembly:
	0x03970EA0 MOV X21, X0
	0x03970EA4 MOV X0, X22
	0x03970EA8 MOV X1, X31
	0x03970EAC BL 0x3C3F58C
	0x03970EB0 CBZ X21, 0x3970F4C
	0x03970EB4 MOV X0, X21
	0x03970EB8 MOV X1, X31
	0x03970EBC BL 0x3C3F62C
	0x03970EC0 MOV X0, X20
	0x03970EC4 MOV X1, X31
	0x03970EC8 BL 0x3C356F8
	0x03970ECC MOV X21, X0
	0x03970ED0 MOV X0, X22
	0x03970ED4 MOV X1, X31
	0x03970ED8 BL 0x3C3F830
	0x03970EDC CBZ X21, 0x3970F4C
	0x03970EE0 MOV X0, X21
	0x03970EE4 MOV X1, X31
	0x03970EE8 BL 0x3C3F8B8
	0x03970EEC MOV X0, X20
	0x03970EF0 MOV X1, X31
	0x03970EF4 BL 0x3C356F8
	0x03970EF8 MOV X20, X0
	0x03970EFC MOV X0, X22
	0x03970F00 MOV X1, X31
	0x03970F04 BL 0x3C3FBAC
	0x03970F08 CBZ X20, 0x3970F4C
	0x03970F0C MOV X0, X20
	0x03970F10 MOV X1, X31
	0x03970F14 BL 0x3C3FC4C
	0x03970F18 MOV X0, X19
	0x03970F1C MOV X1, X31
	0x03970F20 BL 0x3970F50
	0x03970F24 MOV X0, X19
	0x03970F28 LDP X20, X19, [X31 + 0x110]
	0x03970F2C LDP X22, X21, [X31 + 0x100]
	0x03970F30 LDP X24, X23, [X31 + 0xF0]
	0x03970F34 LDP X26, X25, [X31 + 0xE0]
	0x03970F38 LDP X28, X27, [X31 + 0xD0]
	0x03970F3C LDP X29, X30, [X31 + 0xC0]
	0x03970F40 ADD X31, X31, 0x120
	0x03970F44 RET
	0x03970F48 BL 0x1C16F28
	0x03970F4C BL 0x1C16F20
	0x03970F50 SUB X31, X31, 0x80
	0x03970F54 STP D13, D12, [X31 + 0x20]
	0x03970F58 STP D11, D10, [X31 + 0x30]
	0x03970F5C STP D9, D8, [X31 + 0x40]
	0x03970F60 STR X30, [X31 + 0x50]
	0x03970F64 STP X22, X21, [X31 + 0x60]
	0x03970F68 STP X20, X19, [X31 + 0x70]
	0x03970F6C ADRP X21, 0xA71000
	0x03970F70 ADRP X22, 0x783000
	0x03970F74 LDRB W8, [X21 + 0xA06]
	0x03970F78 LDR X22, [X22 + 0x598]
	0x03970F7C MOV X20, X1
	0x03970F80 MOV X19, X0
	0x03970F84 TBNZ X8, 0x0, 0x3970FA8
	0x03970F88 ADRP X0, 0x783000
	0x03970F8C LDR X0, [X0 + 0x598]
	0x03970F90 BL 0x1C16CF4
	0x03970F94 ADRP X0, 0x7DE000
	0x03970F98 LDR X0, [X0 + 0xF88]
	0x03970F9C BL 0x1C16CF4
	0x03970FA0 MOVZ W8, 0x1
	0x03970FA4 STRB W8, [X21 + 0xA06]
	0x03970FA8 LDR X0, [X22]
	0x03970FAC LDR W8, [X0 + 0xE0]
	0x03970FB0 CBNZ W8, 0x3970FB8
	0x03970FB4 BL 0x1C16DFC
	0x03970FB8 MOV X0, X19
	0x03970FBC MOV X1, X31
	0x03970FC0 MOV X2, X31
	0x03970FC4 BL 0x3C3883C
	0x03970FC8 TBNZ X0, 0x0, 0x39711E0
	0x03970FCC ADRP X21, 0xA68000
	0x03970FD0 LDRB W8, [X21 + 0x783]
	0x03970FD4 CBZ W8, 0x3970FE0
	0x03970FD8 CBNZ X20, 0x3970FF8
	0x03970FDC B 0x397109C
	0x03970FE0 ADRP X0, 0x783000
	0x03970FE4 LDR X0, [X0 + 0x5A0]
	0x03970FE8 BL 0x1C16CF4
	0x03970FEC MOVZ W8, 0x1
	0x03970FF0 STRB W8, [X21 + 0x783]
	0x03970FF4 CBZ X20, 0x397109C
	0x03970FF8 LDR X8, [X20 + 0x18]
	0x03970FFC CBZ X8, 0x397109C
	0x03971000 CBZ X19, 0x39711D8
	0x03971004 LDR X9, [X19 + 0x58]
	0x03971008 CBZ X9, 0x39711B8
	0x0397100C LDR W10, [X9 + 0x18]
	0x03971010 CMP W10, 0x3
	0x03971014 B.LT 0x39711B8
	0x03971018 ADRP X11, 0x782000
	0x0397101C LDR X11, [X11 + 0x5A0]
	0x03971020 CMP W8, 0x1
	0x03971024 LDR X11, [X11]
	0x03971028 LDR X11, [X11 + 0xB8]
	0x0397102C LDR V8, [X11]
	0x03971030 LDR V9, [X11 + 0x8]
	0x03971034 B.LT 0x3971070
	0x03971038 MOV W11, W31
	0x0397103C MOVZ W12, 0xC
	0x03971040 ADD X13, X20, W11, 0x2, SXTW
	0x03971044 LDRSW X13, [X13 + 0x20]
	0x03971048 CMP W13, W10
	0x0397104C B.CS 0x39711DC
	0x03971050 MADD X13, X13, X12, X9
	0x03971054 LDR V0, [X13 + 0x20]
	0x03971058 LDR V1, [X13 + 0x28]
	0x0397105C ADD W11, W11, 0x1
	0x03971060 CMP W8, W11
	0x03971064 FADD V8.2S, V8.2S, V0.2S
	0x03971068 FADD S9, S9, S1
	0x0397106C B.NE 0x3971040
	0x03971070 MOV X0, X19
	0x03971074 MOV X1, X31
	0x03971078 BL 0x3C32E90
	0x0397107C CBZ X0, 0x39711D8
	0x03971080 LDR V0, [X20 + 0x18]
	0x03971084 SCVTF S0, S0
	0x03971088 FDIV S2, S9, S0
	0x0397108C UNIMPLEMENTED
	0x00000000 INVALID
	0x03971094 MOV S1, V0.S[1]
	0x03971098 B 0x39710DC
	0x0397109C CBZ X19, 0x39711D8
	0x039710A0 MOV X0, X19
	0x039710A4 MOV X1, X31
	0x039710A8 BL 0x3C32E90
	0x039710AC MOV X20, X0
	0x039710B0 MOV X0, X19
	0x039710B4 MOV X1, X31
	0x039710B8 BL 0x3912CAC
	0x039710BC CBZ X0, 0x39711D8
	0x039710C0 ADD X8, X31, 0x8
	0x039710C4 MOV X1, X31
	0x039710C8 BL 0x3C17768
	0x039710CC CBZ X20, 0x39711D8
	0x039710D0 LDP S0, S1, [X31 + 0x8]
	0x039710D4 LDR V2, [X31 + 0x10]
	0x039710D8 MOV X0, X20
	0x039710DC MOV X1, X31
	0x039710E0 BL 0x3C3DE4C
	0x039710E4 MOV X0, X19
	0x039710E8 MOV X1, X31
	0x039710EC MOV V8.16B, V0.16B
	0x039710F0 MOV V9.16B, V1.16B
	0x039710F4 MOV V10.16B, V2.16B
	0x039710F8 BL 0x3C32E90
	0x039710FC CBZ X0, 0x39711D8
	0x03971100 MOV X1, X31
	0x03971104 BL 0x3C3F58C
	0x03971108 MOV X0, X19
	0x0397110C MOV X1, X31
	0x03971110 MOV V11.16B, V0.16B
	0x03971114 MOV V12.16B, V1.16B
	0x03971118 MOV V13.16B, V2.16B
	0x0397111C BL 0x3C32E90
	0x03971120 CBZ X0, 0x39711D8
	0x03971124 MOV V0.16B, V8.16B
	0x03971128 MOV V1.16B, V9.16B
	0x0397112C MOV V2.16B, V10.16B
	0x03971130 MOV X1, X31
	0x03971134 BL 0x3C3F62C
	0x03971138 MOV X0, X19
	0x0397113C MOV W1, W31
	0x03971140 MOV X2, X31
	0x03971144 BL 0x39197E8
	0x03971148 MOV X0, X19
	0x0397114C MOV X1, X31
	0x03971150 BL 0x3912CAC
	0x03971154 CBZ X0, 0x39711D8
	0x03971158 ADRP X20, 0x7DD000
	0x0397115C LDR X20, [X20 + 0xF88]
	0x03971160 MOV X1, X31
	0x03971164 FSUB S8, S11, S8
	0x03971168 FSUB S9, S12, S9
	0x0397116C FSUB S10, S13, S10
	0x03971170 BL 0x3C18F3C
	0x03971174 LDR X8, [X20]
	0x03971178 MOV X20, X0
	0x0397117C LDR W9, [X8 + 0xE0]
	0x03971180 CBNZ W9, 0x397118C
	0x03971184 MOV X0, X8
	0x03971188 BL 0x1C16DFC
	0x0397118C MOV X0, X19
	0x03971190 MOV X1, X20
	0x03971194 MOV V0.16B, V8.16B
	0x03971198 MOV V1.16B, V9.16B
	0x0397119C MOV V2.16B, V10.16B
	0x039711A0 MOV X2, X31
	0x039711A4 BL 0x3940A74
	0x039711A8 MOVZ W1, 0x1F
	0x039711AC MOV X0, X19
	0x039711B0 MOV X2, X31
	0x039711B4 BL 0x3919D94
	0x039711B8 LDP X20, X19, [X31 + 0x70]
	0x039711BC LDP X22, X21, [X31 + 0x60]
	0x039711C0 LDR X30, [X31 + 0x50]
	0x039711C4 LDP D9, D8, [X31 + 0x40]
	0x039711C8 LDP D11, D10, [X31 + 0x30]
	0x039711CC LDP D13, D12, [X31 + 0x20]
	0x039711D0 ADD X31, X31, 0x80
	0x039711D4 RET
	0x039711D8 BL 0x1C16F20
	0x039711DC BL 0x1C16F28
	0x039711E0 ADRP X0, 0x787000
	0x039711E4 LDR X0, [X0 + 0x528]
	0x039711E8 BL 0x1C16D08
	0x039711EC BL 0x1C16F10
	0x039711F0 MOV X19, X0
	0x039711F4 ADRP X0, 0x7DC000
	0x039711F8 LDR X0, [X0 + 0xE90]
	0x039711FC BL 0x1C16D08
	0x03971200 MOV X1, X0
	0x03971204 MOV X0, X19
	0x03971208 MOV X2, X31
	0x0397120C BL 0x330E100
	0x03971210 ADRP X0, 0x7DE000
	0x03971214 LDR X0, [X0 + 0xF48]
	0x03971218 BL 0x1C16D08
	0x0397121C MOV X1, X0
	0x03971220 MOV X0, X19
	0x03971224 BL 0x1C16DEC
	0x03971228 SUB X31, X31, 0x130
	0x0397122C STP X29, X30, [X31 + 0xD0]
	0x03971230 STP X28, X27, [X31 + 0xE0]
	0x03971234 STP X26, X25, [X31 + 0xF0]
	0x03971238 STP X24, X23, [X31 + 0x100]
	0x0397123C STP X22, X21, [X31 + 0x110]
	0x03971240 STP X20, X19, [X31 + 0x120]
	0x03971244 ADRP X19, 0xA70000
	0x03971248 LDRB W8, [X19 + 0x9F7]
	0x0397124C MOV W25, W1
	0x03971250 MOV X24, X0
	0x03971254 TBNZ X8, 0x0, 0x3971440
	0x03971258 ADRP X0, 0x7C4000
	0x0397125C LDR X0, [X0 + 0x5B0]
	0x03971260 BL 0x1C16CF4
	0x03971264 ADRP X0, 0x7DD000
	0x03971268 LDR X0, [X0 + 0x560]
	0x0397126C BL 0x1C16CF4
	0x03971270 ADRP X0, 0x7DE000
	0x03971274 LDR X0, [X0 + 0xEF0]
	0x03971278 BL 0x1C16CF4
	0x0397127C ADRP X0, 0x7DE000
	0x03971280 LDR X0, [X0 + 0xEF8]
	0x03971284 BL 0x1C16CF4
	0x03971288 ADRP X0, 0x7DE000
	0x0397128C LDR X0, [X0 + 0xF00]
	0x03971290 BL 0x1C16CF4
	0x03971294 ADRP X0, 0x789000
	0x03971298 LDR X0, [X0 + 0x6F8]
	0x0397129C BL 0x1C16CF4
	0x039712A0 ADRP X0, 0x784000
	0x039712A4 LDR X0, [X0 + 0x168]
	0x039712A8 BL 0x1C16CF4
	0x039712AC ADRP X0, 0x789000
	0x039712B0 LDR X0, [X0 + 0x780]
	0x039712B4 BL 0x1C16CF4
	0x039712B8 ADRP X0, 0x783000
	0x039712BC LDR X0, [X0 + 0xE58]
	0x039712C0 BL 0x1C16CF4
	0x039712C4 ADRP X0, 0x7DC000
	0x039712C8 LDR X0, [X0 + 0xC10]
	0x039712CC BL 0x1C16CF4
	0x039712D0 ADRP X0, 0x7DC000
	0x039712D4 LDR X0, [X0 + 0xE10]
	0x039712D8 BL 0x1C16CF4
	0x039712DC ADRP X0, 0x786000
	0x039712E0 LDR X0, [X0 + 0x3B8]
	0x039712E4 BL 0x1C16CF4
	0x039712E8 ADRP X0, 0x7DD000
	0x039712EC LDR X0, [X0 + 0x720]
	0x039712F0 BL 0x1C16CF4
	0x039712F4 ADRP X0, 0x7DD000
	0x039712F8 LDR X0, [X0 + 0xC38]
	0x039712FC BL 0x1C16CF4
	0x03971300 ADRP X0, 0x7AF000
	0x03971304 LDR X0, [X0 + 0x710]
	0x03971308 BL 0x1C16CF4
	0x0397130C ADRP X0, 0x7AF000
	0x03971310 LDR X0, [X0 + 0x6C0]
	0x03971314 BL 0x1C16CF4
	0x03971318 ADRP X0, 0x7AE000
	0x0397131C LDR X0, [X0 + 0x5B0]
	0x03971320 BL 0x1C16CF4
	0x03971324 ADRP X0, 0x7DE000
	0x03971328 LDR X0, [X0 + 0x190]
	0x0397132C BL 0x1C16CF4
	0x03971330 ADRP X0, 0x7DE000
	0x03971334 LDR X0, [X0 + 0xF08]
	0x03971338 BL 0x1C16CF4
	0x0397133C ADRP X0, 0x7DD000
	0x03971340 LDR X0, [X0 + 0xA38]
	0x03971344 BL 0x1C16CF4
	0x03971348 ADRP X0, 0x7DE000
	0x0397134C LDR X0, [X0 + 0x198]
	0x03971350 BL 0x1C16CF4
	0x03971354 ADRP X0, 0x7AE000
	0x03971358 LDR X0, [X0 + 0x5B8]
	0x0397135C BL 0x1C16CF4
	0x03971360 ADRP X0, 0x7DE000
	0x03971364 LDR X0, [X0 + 0x1A0]
	0x03971368 BL 0x1C16CF4
	0x0397136C ADRP X0, 0x7DC000
	0x03971370 LDR X0, [X0 + 0xC08]
	0x03971374 BL 0x1C16CF4
	0x03971378 ADRP X0, 0x7DD000
	0x0397137C LDR X0, [X0 + 0xC40]
	0x03971380 BL 0x1C16CF4
	0x03971384 ADRP X0, 0x7DD000
	0x03971388 LDR X0, [X0 + 0xC48]
	0x0397138C BL 0x1C16CF4
	0x03971390 ADRP X0, 0x7DC000
	0x03971394 LDR X0, [X0 + 0xC00]
	0x03971398 BL 0x1C16CF4
	0x0397139C ADRP X0, 0x786000
	0x039713A0 LDR X0, [X0 + 0x3C0]
	0x039713A4 BL 0x1C16CF4
	0x039713A8 ADRP X0, 0x7DD000
	0x039713AC LDR X0, [X0 + 0x718]
	0x039713B0 BL 0x1C16CF4
	0x039713B4 ADRP X0, 0x7DC000
	0x039713B8 LDR X0, [X0 + 0xDF0]
	0x039713BC BL 0x1C16CF4
	0x039713C0 ADRP X0, 0x7DC000
	0x039713C4 LDR X0, [X0 + 0xAD0]
	0x039713C8 BL 0x1C16CF4
	0x039713CC ADRP X0, 0x7DE000
	0x039713D0 LDR X0, [X0 + 0xF10]
	0x039713D4 BL 0x1C16CF4
	0x039713D8 ADRP X0, 0x7DE000
	0x039713DC LDR X0, [X0 + 0xF18]
	0x039713E0 BL 0x1C16CF4
	0x039713E4 ADRP X0, 0x7DE000
	0x039713E8 LDR X0, [X0 + 0xF20]
	0x039713EC BL 0x1C16CF4
	0x039713F0 ADRP X0, 0x782000
	0x039713F4 LDR X0, [X0 + 0x598]
	0x039713F8 BL 0x1C16CF4
	0x039713FC ADRP X0, 0x7DE000
	0x03971400 LDR X0, [X0 + 0xF50]
	0x03971404 BL 0x1C16CF4
	0x03971408 ADRP X0, 0x7DE000
	0x0397140C LDR X0, [X0 + 0xF58]
	0x03971410 BL 0x1C16CF4
	0x03971414 ADRP X0, 0x7DE000
	0x03971418 LDR X0, [X0 + 0xF60]
	0x0397141C BL 0x1C16CF4
	0x03971420 ADRP X0, 0x7DE000
	0x03971424 LDR X0, [X0 + 0xF40]
	0x03971428 BL 0x1C16CF4
	0x0397142C ADRP X0, 0x7DE000
	0x03971430 LDR X0, [X0 + 0xF68]
	0x03971434 BL 0x1C16CF4
	0x03971438 MOVZ W8, 0x1
	0x0397143C STRB W8, [X19 + 0x9F7]
	0x03971440 CBZ X24, 0x397236C
	0x03971444 MOV X0, X24
	0x03971448 MOV X1, X31
	0x0397144C BL 0x3C32ECC
	0x03971450 CBZ X0, 0x397236C
	0x03971454 ADRP X8, 0x784000
	0x03971458 LDR X8, [X8 + 0x168]
	0x0397145C ADRP X22, 0x782000
	0x03971460 LDR X1, [X8]
	0x03971464 LDR X22, [X22 + 0x598]
	0x03971468 BL 0x21E52E4
	0x0397146C LDR X8, [X22]
	0x03971470 MOV X19, X0
	0x03971474 LDR W9, [X8 + 0xE0]
	0x03971478 CBNZ W9, 0x3971484
	0x0397147C MOV X0, X8
	0x03971480 BL 0x1C16DFC
	0x03971484 MOV X0, X19
	0x03971488 MOV X1, X31
	0x0397148C MOV X2, X31
	0x03971490 BL 0x3C3883C
	0x03971494 TBNZ X0, 0x0, 0x39714D4
	0x03971498 CBZ X19, 0x397236C
	0x0397149C MOV X0, X19
	0x039714A0 MOV X1, X31
	0x039714A4 BL 0x3C16D04
	0x039714A8 LDR X8, [X22]
	0x039714AC MOV X20, X0
	0x039714B0 LDR W9, [X8 + 0xE0]
	0x039714B4 CBNZ W9, 0x39714C0
	0x039714B8 MOV X0, X8
	0x039714BC BL 0x1C16DFC
	0x039714C0 MOV X0, X20
	0x039714C4 MOV X1, X31
	0x039714C8 MOV X2, X31
	0x039714CC BL 0x3C3883C
	0x039714D0 TBZ X0, 0x0, 0x3971528
	0x039714D4 ADRP X19, 0x7DE000
	0x039714D8 ADRP X20, 0x7DC000
	0x039714DC LDR X19, [X19 + 0xF68]
	0x039714E0 LDR X20, [X20 + 0xAD0]
	0x039714E4 MOV X0, X24
	0x039714E8 MOV X1, X31
	0x039714EC BL 0x3C389D4
	0x039714F0 LDR X1, [X19]
	0x039714F4 MOV X2, X31
	0x039714F8 BL 0x321B938
	0x039714FC LDR X8, [X20]
	0x03971500 MOV X19, X0
	0x03971504 LDR W9, [X8 + 0xE0]
	0x03971508 CBNZ W9, 0x3971514
	0x0397150C MOV X0, X8
	0x03971510 BL 0x1C16DFC
	0x03971514 MOV X0, X19
	0x03971518 MOV X1, X31
	0x0397151C BL 0x38FAC88
	0x03971520 MOV W0, W31
	0x03971524 B 0x397234C
	0x03971528 MOV X0, X19
	0x0397152C MOV X1, X31
	0x03971530 BL 0x3C16D04
	0x03971534 CBZ X0, 0x397236C
	0x03971538 MOV X1, X31
	0x0397153C MOV X26, X0
	0x03971540 BL 0x3C17618
	0x03971544 MOV W27, W0
	0x03971548 MOV X0, X24
	0x0397154C MOV X1, X31
	0x03971550 BL 0x3C32ECC
	0x03971554 ADRP X23, 0x7DE000
	0x03971558 LDR X23, [X23 + 0xF40]
	0x0397155C MOV X19, X0
	0x03971560 LDR X8, [X23]
	0x03971564 LDR W9, [X8 + 0xE0]
	0x03971568 CBNZ W9, 0x3971578
	0x0397156C MOV X0, X8
	0x03971570 BL 0x1C16DFC
	0x03971574 LDR X8, [X23]
	0x03971578 LDR X9, [X8 + 0xB8]
	0x0397157C LDR X20, [X9 + 0x20]
	0x03971580 CBNZ X20, 0x39715D8
	0x03971584 LDR W9, [X8 + 0xE0]
	0x03971588 CBNZ W9, 0x3971598
	0x0397158C MOV X0, X8
	0x03971590 BL 0x1C16DFC
	0x03971594 LDR X8, [X23]
	0x03971598 ADRP X9, 0x7DE000
	0x0397159C LDR X8, [X8 + 0xB8]
	0x039715A0 LDR X9, [X9 + 0xEF8]
	0x039715A4 LDR X21, [X8]
	0x039715A8 LDR X0, [X9]
	0x039715AC BL 0x1C16F10
	0x039715B0 ADRP X8, 0x7DE000
	0x039715B4 LDR X8, [X8 + 0xF50]
	0x039715B8 MOV X1, X21
	0x039715BC MOV X3, X31
	0x039715C0 MOV X20, X0
	0x039715C4 LDR X2, [X8]
	0x039715C8 BL 0x2D30578
	0x039715CC LDR X8, [X23]
	0x039715D0 LDR X8, [X8 + 0xB8]
	0x039715D4 STR X20, [X8 + 0x20]
	0x039715D8 ADRP X8, 0x7DE000
	0x039715DC LDR X8, [X8 + 0xF20]
	0x039715E0 MOV X0, X19
	0x039715E4 MOV X1, X20
	0x039715E8 LDR X2, [X8]
	0x039715EC BL 0x221B348
	0x039715F0 MOV X28, X0
	0x039715F4 MOV X0, X24
	0x039715F8 MOV X1, X31
	0x039715FC BL 0x3C32ECC
	0x03971600 LDR X8, [X23]
	0x03971604 MOV X19, X0
	0x03971608 LDR W9, [X8 + 0xE0]
	0x0397160C CBNZ W9, 0x397161C
	0x03971610 MOV X0, X8
	0x03971614 BL 0x1C16DFC
	0x03971618 LDR X8, [X23]
	0x0397161C LDR X9, [X8 + 0xB8]
	0x03971620 LDR X20, [X9 + 0x28]
	0x03971624 CBNZ X20, 0x397167C
	0x03971628 LDR W9, [X8 + 0xE0]
	0x0397162C CBNZ W9, 0x397163C
	0x03971630 MOV X0, X8
	0x03971634 BL 0x1C16DFC
	0x03971638 LDR X8, [X23]
	0x0397163C ADRP X9, 0x7DE000
	0x03971640 LDR X8, [X8 + 0xB8]
	0x03971644 LDR X9, [X9 + 0xEF0]
	0x03971648 LDR X21, [X8]
	0x0397164C LDR X0, [X9]
	0x03971650 BL 0x1C16F10
	0x03971654 ADRP X8, 0x7DE000
	0x03971658 LDR X8, [X8 + 0xF58]
	0x0397165C MOV X1, X21
	0x03971660 MOV X3, X31
	0x03971664 MOV X20, X0
	0x03971668 LDR X2, [X8]
	0x0397166C BL 0x2D30578
	0x03971670 LDR X8, [X23]
	0x03971674 LDR X8, [X8 + 0xB8]
	0x03971678 STR X20, [X8 + 0x28]
	0x0397167C ADRP X8, 0x7DE000
	0x03971680 LDR X8, [X8 + 0xF10]
	0x03971684 MOV X0, X19
	0x03971688 MOV X1, X20
	0x0397168C LDR X2, [X8]
	0x03971690 BL 0x221B348
	0x03971694 STR X0, [X31 + 0x50]
	0x03971698 MOV X0, X24
	0x0397169C MOV X1, X31
	0x039716A0 BL 0x3C32ECC
	0x039716A4 LDR X8, [X23]
	0x039716A8 MOV X19, X0
	0x039716AC LDR W9, [X8 + 0xE0]
	0x039716B0 CBNZ W9, 0x39716C0
	0x039716B4 MOV X0, X8
	0x039716B8 BL 0x1C16DFC
	0x039716BC LDR X8, [X23]
	0x039716C0 LDR X9, [X8 + 0xB8]
	0x039716C4 LDR X20, [X9 + 0x30]
	0x039716C8 CBNZ X20, 0x3971720
	0x039716CC LDR W9, [X8 + 0xE0]
	0x039716D0 CBNZ W9, 0x39716E0
	0x039716D4 MOV X0, X8
	0x039716D8 BL 0x1C16DFC
	0x039716DC LDR X8, [X23]
	0x039716E0 ADRP X9, 0x7DE000
	0x039716E4 LDR X8, [X8 + 0xB8]
	0x039716E8 LDR X9, [X9 + 0xF00]
	0x039716EC LDR X21, [X8]
	0x039716F0 LDR X0, [X9]
	0x039716F4 BL 0x1C16F10
	0x039716F8 ADRP X8, 0x7DE000
	0x039716FC LDR X8, [X8 + 0xF60]
	0x03971700 MOV X1, X21
	0x03971704 MOV X3, X31
	0x03971708 MOV X20, X0
	0x0397170C LDR X2, [X8]
	0x03971710 BL 0x2D30578
	0x03971714 LDR X8, [X23]
	0x03971718 LDR X8, [X8 + 0xB8]
	0x0397171C STR X20, [X8 + 0x30]
	0x03971720 ADRP X8, 0x7DE000
	0x03971724 LDR X8, [X8 + 0xF18]
	0x03971728 MOV X0, X19
	0x0397172C MOV X1, X20
	0x03971730 LDR X2, [X8]
	0x03971734 BL 0x221B348
	0x03971738 STR X0, [X31 + 0x48]
	0x0397173C TBZ X25, 0x0, 0x39717F8
	0x03971740 MOV X0, X26
	0x03971744 MOV X1, X31
	0x03971748 BL 0x3C17EBC
	0x0397174C ADRP X8, 0x786000
	0x03971750 LDR X8, [X8 + 0x3C0]
	0x03971754 MOV X19, X0
	0x03971758 LDR X8, [X8]
	0x0397175C MOV X0, X8
	0x03971760 BL 0x1C16F10
	0x03971764 ADRP X8, 0x7DE000
	0x03971768 LDR X8, [X8 + 0x1A0]
	0x0397176C MOV X1, X19
	0x03971770 STR X0, [X31 + 0x68]
	0x03971774 LDR X2, [X8]
	0x03971778 BL 0x30CBA98
	0x0397177C MOV X0, X26
	0x03971780 MOV X1, X31
	0x03971784 BL 0x3C18218
	0x03971788 ADRP X8, 0x7DC000
	0x0397178C LDR X8, [X8 + 0xC00]
	0x03971790 MOV X19, X0
	0x03971794 LDR X8, [X8]
	0x03971798 MOV X0, X8
	0x0397179C BL 0x1C16F10
	0x039717A0 ADRP X8, 0x7DE000
	0x039717A4 LDR X8, [X8 + 0x198]
	0x039717A8 MOV X1, X19
	0x039717AC STR X0, [X31 + 0x60]
	0x039717B0 LDR X2, [X8]
	0x039717B4 BL 0x2F6CD14
	0x039717B8 MOV X0, X26
	0x039717BC MOV X1, X31
	0x039717C0 BL 0x3C180C0
	0x039717C4 ADRP X8, 0x7DD000
	0x039717C8 LDR X8, [X8 + 0x718]
	0x039717CC MOV X19, X0
	0x039717D0 LDR X8, [X8]
	0x039717D4 MOV X0, X8
	0x039717D8 BL 0x1C16F10
	0x039717DC ADRP X8, 0x7DE000
	0x039717E0 LDR X8, [X8 + 0x190]
	0x039717E4 MOV X1, X19
	0x039717E8 STR X0, [X31 + 0x58]
	0x039717EC LDR X2, [X8]
	0x039717F0 BL 0x30C8F74
	0x039717F4 B 0x3971864
	0x039717F8 ADRP X8, 0x786000
	0x039717FC LDR X8, [X8 + 0x3C0]
	0x03971800 LDR X0, [X8]
	0x03971804 BL 0x1C16F10
	0x03971808 ADRP X8, 0x7AE000
	0x0397180C LDR X8, [X8 + 0x5B8]
	0x03971810 STR X0, [X31 + 0x68]
	0x03971814 LDR X1, [X8]
	0x03971818 BL 0x30CB97C
	0x0397181C ADRP X8, 0x7DC000
	0x03971820 LDR X8, [X8 + 0xC00]
	0x03971824 LDR X0, [X8]
	0x03971828 BL 0x1C16F10
	0x0397182C ADRP X8, 0x7DC000
	0x03971830 LDR X8, [X8 + 0xC08]
	0x03971834 STR X0, [X31 + 0x60]
	0x03971838 LDR X1, [X8]
	0x0397183C BL 0x2F6CBF8
	0x03971840 ADRP X8, 0x7DD000
	0x03971844 LDR X8, [X8 + 0x718]
	0x03971848 LDR X0, [X8]
	0x0397184C BL 0x1C16F10
	0x03971850 ADRP X8, 0x7DE000
	0x03971854 LDR X8, [X8 + 0xF08]
	0x03971858 STR X0, [X31 + 0x58]
	0x0397185C LDR X1, [X8]
	0x03971860 BL 0x30C8E58
	0x03971864 ADRP X8, 0x7DC000
	0x03971868 LDR X8, [X8 + 0xDF0]
	0x0397186C LDR X0, [X8]
	0x03971870 BL 0x1C16F10
	0x03971874 ADRP X8, 0x7DD000
	0x03971878 LDR X8, [X8 + 0xA38]
	0x0397187C MOV X29, X0
	0x03971880 LDR X1, [X8]
	0x03971884 BL 0x301B7C4
	0x03971888 MOV X0, X24
	0x0397188C MOV X1, X31
	0x03971890 BL 0x3C32ECC
	0x03971894 CBZ X0, 0x397236C
	0x03971898 ADRP X8, 0x789000
	0x0397189C LDR X8, [X8 + 0x780]
	0x039718A0 LDR X1, [X8]
	0x039718A4 BL 0x21E52E4
	0x039718A8 LDR X8, [X22]
	0x039718AC MOV X19, X0
	0x039718B0 LDR W9, [X8 + 0xE0]
	0x039718B4 CBNZ W9, 0x39718C0
	0x039718B8 MOV X0, X8
	0x039718BC BL 0x1C16DFC
	0x039718C0 MOV X0, X19
	0x039718C4 MOV X1, X31
	0x039718C8 MOV X2, X31
	0x039718CC BL 0x3C3883C
	0x039718D0 TBZ X0, 0x0, 0x39718F8
	0x039718D4 MOV X0, X24
	0x039718D8 MOV X1, X31
	0x039718DC BL 0x3C32ECC
	0x039718E0 CBZ X0, 0x397236C
	0x039718E4 ADRP X8, 0x789000
	0x039718E8 LDR X8, [X8 + 0x6F8]
	0x039718EC LDR X1, [X8]
	0x039718F0 BL 0x21E51FC
	0x039718F4 MOV X19, X0
	0x039718F8 CBZ X19, 0x397236C
	0x039718FC MOV X0, X19
	0x03971900 MOV X1, X31
	0x03971904 STR X24, [X31 + 0x18]
	0x03971908 BL 0x3C1351C
	0x0397190C CBZ X0, 0x397236C
	0x03971910 LDR X19, [X0 + 0x18]
	0x03971914 MOV X0, X26
	0x03971918 MOV X1, X31
	0x0397191C BL 0x3C0F650
	0x03971920 CMP W0, 0x1
	0x03971924 B.LT 0x39722B0
	0x03971928 AND W9, W25, 0x1
	0x0397192C SUB W8, W19, 0x1
	0x03971930 STP W9, W8, [X31 + 0x3C]
	0x03971934 ADRP X22, 0x7DD000
	0x03971938 ADRP X19, 0x7C4000
	0x0397193C LDR X22, [X22 + 0xC48]
	0x03971940 LDR X19, [X19 + 0x5B0]
	0x03971944 MOV W20, W31
	0x03971948 STR W25, [X31 + 0x2C]
	0x0397194C STR X26, [X31 + 0x20]
	0x03971950 STR W27, [X31 + 0x38]
	0x03971954 STR X28, [X31 + 0x30]
	0x03971958 MOV X0, X26
	0x0397195C MOV W1, W20
	0x03971960 MOV X2, X31
	0x03971964 STR W20, [X31 + 0x44]
	0x03971968 BL 0x3C19138
	0x0397196C CBZ X0, 0x397236C
	0x03971970 LDR W8, [X0 + 0x18]
	0x03971974 MOV X20, X0
	0x03971978 CMP W8, 0x1
	0x0397197C B.LT 0x3972290
	0x03971980 MOV W26, W31
	0x03971984 TBZ X25, 0x0, 0x3971BA0
	0x03971988 CBZ X29, 0x397236C
	0x0397198C LDR W10, [X29 + 0x18]
	0x03971990 SXTW X8, W26
	0x03971994 ADD X9, X20, 0x20
	0x03971998 ADD X28, X8, 0x1
	0x0397199C ADD W24, W26, 0x2
	0x039719A0 ADD X27, X9, W26, 0x2, SXTW
	0x039719A4 ADD X25, X9, X28, 0x2, LSL
	0x039719A8 CMP W10, 0x1
	0x039719AC ADD X23, X9, W24, 0x2, SXTW
	0x039719B0 B.LT 0x3971A70
	0x039719B4 MOV W21, W31
	0x039719B8 LDR X2, [X22]
	0x039719BC MOV X0, X29
	0x039719C0 MOV W1, W21
	0x039719C4 BL 0x301BCCC
	0x039719C8 CBZ X0, 0x397236C
	0x039719CC MOV X1, X31
	0x039719D0 BL 0x38FF530
	0x039719D4 LDR W8, [X20 + 0x18]
	0x039719D8 CMP W26, W8
	0x039719DC B.CS 0x3972370
	0x039719E0 LDR W1, [X27]
	0x039719E4 LDR X2, [X19]
	0x039719E8 BL 0x21BA3B8
	0x039719EC TBNZ X0, 0x0, 0x3971A74
	0x039719F0 LDR X2, [X22]
	0x039719F4 MOV X0, X29
	0x039719F8 MOV W1, W21
	0x039719FC BL 0x301BCCC
	0x03971A00 CBZ X0, 0x397236C
	0x03971A04 MOV X1, X31
	0x03971A08 BL 0x38FF530
	0x03971A0C LDR W8, [X20 + 0x18]
	0x03971A10 CMP W28, W8
	0x03971A14 B.CS 0x3972370
	0x03971A18 LDR W1, [X25]
	0x03971A1C LDR X2, [X19]
	0x03971A20 BL 0x21BA3B8
	0x03971A24 TBNZ X0, 0x0, 0x3971A74
	0x03971A28 LDR X2, [X22]
	0x03971A2C MOV X0, X29
	0x03971A30 MOV W1, W21
	0x03971A34 BL 0x301BCCC
	0x03971A38 CBZ X0, 0x397236C
	0x03971A3C MOV X1, X31
	0x03971A40 BL 0x38FF530
	0x03971A44 LDR W8, [X20 + 0x18]
	0x03971A48 CMP W24, W8
	0x03971A4C B.CS 0x3972370
	0x03971A50 LDR W1, [X23]
	0x03971A54 LDR X2, [X19]
	0x03971A58 BL 0x21BA3B8
	0x03971A5C TBNZ X0, 0x0, 0x3971A74
	0x03971A60 LDR W8, [X29 + 0x18]
	0x03971A64 ADD W21, W21, 0x1
	0x03971A68 CMP W21, W8
	0x03971A6C B.LT 0x39719B8
	0x03971A70 MOVN W21, 0x0
	0x03971A74 LDR W9, [X31 + 0x3C]
	0x03971A78 ORN W8, W31, W21, 0x0
	0x03971A7C ANDS W31, W9, W8, 0x1F
	0x03971A80 B.EQ 0x3972134
	0x03971A84 LDR X2, [X22]
	0x03971A88 MOV X0, X29
	0x03971A8C MOV W1, W21
	0x03971A90 BL 0x301BCCC
	0x03971A94 CBZ X0, 0x397236C
	0x03971A98 LDR X8, [X0 + 0x10]
	0x03971A9C CBZ X8, 0x397236C
	0x03971AA0 LDR X19, [X8 + 0x18]
	0x03971AA4 ADRP X8, 0x783000
	0x03971AA8 LDR X8, [X8 + 0xE58]
	0x03971AAC ADD W1, W19, 0x3
	0x03971AB0 LDR X0, [X8]
	0x03971AB4 BL 0x1C16D6C
	0x03971AB8 LDR X2, [X22]
	0x03971ABC MOV X22, X0
	0x03971AC0 MOV X0, X29
	0x03971AC4 MOV W1, W21
	0x03971AC8 BL 0x301BCCC
	0x03971ACC CBZ X0, 0x397236C
	0x03971AD0 LDR X0, [X0 + 0x10]
	0x03971AD4 MOV W1, W31
	0x03971AD8 MOV X2, X22
	0x03971ADC MOV W3, W31
	0x03971AE0 MOV W4, W19
	0x03971AE4 MOV X5, X31
	0x03971AE8 BL 0x339FCE8
	0x03971AEC LDR W8, [X20 + 0x18]
	0x03971AF0 CMP W26, W8
	0x03971AF4 B.CS 0x3972370
	0x03971AF8 CBZ X22, 0x397236C
	0x03971AFC LDR W9, [X22 + 0x18]
	0x03971B00 CMP W19, W9
	0x03971B04 B.CS 0x3972370
	0x03971B08 LDR W10, [X27]
	0x03971B0C UBFM X11, X19, 0x20, 0x1F
	0x03971B10 ADD X11, X22, X11, 0x1E, ASR
	0x03971B14 CMP W28, W8
	0x03971B18 STR W10, [X11 + 0x20]
	0x03971B1C B.CS 0x3972370
	0x03971B20 LDR W27, [X31 + 0x38]
	0x03971B24 LDR X28, [X31 + 0x30]
	0x03971B28 ADD W10, W19, 0x1
	0x03971B2C CMP W10, W9
	0x03971B30 B.CS 0x3972370
	0x03971B34 LDR W11, [X25]
	0x03971B38 ADD X10, X22, W10, 0x2, SXTW
	0x03971B3C CMP W24, W8
	0x03971B40 STR W11, [X10 + 0x20]
	0x03971B44 B.CS 0x3972370
	0x03971B48 LDR W25, [X31 + 0x2C]
	0x03971B4C ADD W8, W19, 0x2
	0x03971B50 CMP W8, W9
	0x03971B54 B.CS 0x3972370
	0x03971B58 LDR W9, [X23]
	0x03971B5C ADD X8, X22, W8, 0x2, SXTW
	0x03971B60 MOV X0, X29
	0x03971B64 MOV W1, W21
	0x03971B68 STR W9, [X8 + 0x20]
	0x03971B6C ADRP X8, 0x7DD000
	0x03971B70 LDR X8, [X8 + 0xC48]
	0x03971B74 LDR X2, [X8]
	0x03971B78 BL 0x301BCCC
	0x03971B7C ADRP X19, 0x7C4000
	0x03971B80 LDR X19, [X19 + 0x5B0]
	0x03971B84 CBZ X0, 0x397236C
	0x03971B88 MOV X1, X22
	0x03971B8C MOV X2, X31
	0x03971B90 BL 0x38FFBA8
	0x03971B94 ADRP X22, 0x7DD000
	0x03971B98 LDR X22, [X22 + 0xC48]
	0x03971B9C B 0x3972280
	0x03971BA0 LDR X0, [X31 + 0x68]
	0x03971BA4 CMP W26, W8
	0x03971BA8 MOVZ W12, 0xC
	0x03971BAC B.CS 0x3972370
	0x03971BB0 ADD X21, X20, W26, 0x2, SXTW
	0x03971BB4 LDRSW X8, [X21 + 0x20]!
	0x03971BB8 CBZ X28, 0x397236C
	0x03971BBC LDR W9, [X28 + 0x18]
	0x03971BC0 CMP W8, W9
	0x03971BC4 B.CS 0x3972370
	0x03971BC8 CBZ X0, 0x397236C
	0x03971BCC MADD X8, X8, X12, X28
	0x03971BD0 ADRP X9, 0x786000
	0x03971BD4 LDR W10, [X0 + 0x1C]
	0x03971BD8 LDP S0, S1, [X8 + 0x20]
	0x03971BDC LDR V2, [X8 + 0x28]
	0x03971BE0 LDR X8, [X0 + 0x10]
	0x03971BE4 LDR X9, [X9 + 0x3B8]
	0x03971BE8 ADD W10, W10, 0x1
	0x03971BEC LDR X9, [X9]
	0x03971BF0 STR W10, [X0 + 0x1C]
	0x03971BF4 CBZ X8, 0x397236C
	0x03971BF8 LDRSW X10, [X0 + 0x18]
	0x03971BFC LDR W11, [X8 + 0x18]
	0x03971C00 CMP W10, W11
	0x03971C04 B.CS 0x3971C20
	0x03971C08 ADD W9, W10, 0x1
	0x03971C0C MADD X8, X10, X12, X8
	0x03971C10 STR W9, [X0 + 0x18]
	0x03971C14 STP S0, S1, [X8 + 0x20]
	0x03971C18 STR S2, [X8 + 0x28]
	0x03971C1C B 0x3971C3C
	0x03971C20 LDR X8, [X9 + 0x20]
	0x03971C24 LDR X0, [X31 + 0x68]
	0x03971C28 LDR X8, [X8 + 0xC0]
	0x03971C2C LDR X1, [X8 + 0x70]
	0x03971C30 BL 0x30CC1B4
	0x03971C34 LDR X0, [X31 + 0x68]
	0x03971C38 MOVZ W12, 0xC
	0x03971C3C LDR W8, [X20 + 0x18]
	0x03971C40 ADD W19, W26, 0x1
	0x03971C44 CMP W19, W8
	0x03971C48 B.CS 0x3972370
	0x03971C4C ADD X23, X20, W19, 0x2, SXTW
	0x03971C50 LDRSW X8, [X23 + 0x20]!
	0x03971C54 LDR W9, [X28 + 0x18]
	0x03971C58 CMP W8, W9
	0x03971C5C B.CS 0x3972370
	0x03971C60 MADD X8, X8, X12, X28
	0x03971C64 ADRP X10, 0x786000
	0x03971C68 LDR W9, [X0 + 0x1C]
	0x03971C6C LDP S0, S1, [X8 + 0x20]
	0x03971C70 LDR V2, [X8 + 0x28]
	0x03971C74 LDR X8, [X0 + 0x10]
	0x03971C78 LDR X10, [X10 + 0x3B8]
	0x03971C7C ADD W9, W9, 0x1
	0x03971C80 LDR X10, [X10]
	0x03971C84 STR W9, [X0 + 0x1C]
	0x03971C88 CBZ X8, 0x397236C
	0x03971C8C LDRSW X9, [X0 + 0x18]
	0x03971C90 LDR W11, [X8 + 0x18]
	0x03971C94 CMP W9, W11
	0x03971C98 B.CS 0x3971CB4
	0x03971C9C ADD W10, W9, 0x1
	0x03971CA0 MADD X8, X9, X12, X8
	0x03971CA4 STR W10, [X0 + 0x18]
	0x03971CA8 STP S0, S1, [X8 + 0x20]
	0x03971CAC STR S2, [X8 + 0x28]
	0x03971CB0 B 0x3971CD0
	0x03971CB4 LDR X8, [X10 + 0x20]
	0x03971CB8 LDR X0, [X31 + 0x68]
	0x03971CBC LDR X8, [X8 + 0xC0]
	0x03971CC0 LDR X1, [X8 + 0x70]
	0x03971CC4 BL 0x30CC1B4
	0x03971CC8 LDR X0, [X31 + 0x68]
	0x03971CCC MOVZ W12, 0xC
	0x03971CD0 LDR W8, [X20 + 0x18]
	0x03971CD4 ADD W22, W26, 0x2
	0x03971CD8 CMP W22, W8
	0x03971CDC B.CS 0x3972370
	0x03971CE0 ADD X24, X20, W22, 0x2, SXTW
	0x03971CE4 LDRSW X8, [X24 + 0x20]!
	0x03971CE8 LDR W9, [X28 + 0x18]
	0x03971CEC CMP W8, W9
	0x03971CF0 B.CS 0x3972370
	0x03971CF4 MADD X8, X8, X12, X28
	0x03971CF8 ADRP X10, 0x786000
	0x03971CFC LDR W9, [X0 + 0x1C]
	0x03971D00 LDP S0, S1, [X8 + 0x20]
	0x03971D04 LDR V2, [X8 + 0x28]
	0x03971D08 LDR X8, [X0 + 0x10]
	0x03971D0C LDR X10, [X10 + 0x3B8]
	0x03971D10 ADD W9, W9, 0x1
	0x03971D14 LDR X10, [X10]
	0x03971D18 STR W9, [X0 + 0x1C]
	0x03971D1C CBZ X8, 0x397236C
	0x03971D20 LDRSW X9, [X0 + 0x18]
	0x03971D24 LDR W11, [X8 + 0x18]
	0x03971D28 CMP W9, W11
	0x03971D2C B.CS 0x3971D48
	0x03971D30 ADD W10, W9, 0x1
	0x03971D34 MADD X8, X9, X12, X8
	0x03971D38 STR W10, [X0 + 0x18]
	0x03971D3C STP S0, S1, [X8 + 0x20]
	0x03971D40 STR S2, [X8 + 0x28]
	0x03971D44 B 0x3971D58
	0x03971D48 LDR X8, [X10 + 0x20]
	0x03971D4C LDR X8, [X8 + 0xC0]
	0x03971D50 LDR X1, [X8 + 0x70]
	0x03971D54 BL 0x30CC1B4
	0x03971D58 LDR X12, [X31 + 0x50]
	0x03971D5C LDR X0, [X31 + 0x60]
	0x03971D60 CBZ X12, 0x3971D98
	0x03971D64 LDR W8, [X12 + 0x18]
	0x03971D68 CMP W27, W8
	0x03971D6C B.NE 0x3971D98
	0x03971D70 LDR W8, [X20 + 0x18]
	0x03971D74 CMP W26, W8
	0x03971D78 B.CS 0x3972370
	0x03971D7C LDRSW X8, [X21]
	0x03971D80 CMP W8, W27
	0x03971D84 B.CS 0x3972370
	0x03971D88 ADD X8, X12, X8, 0x4, LSL
	0x03971D8C LDP S0, S1, [X8 + 0x20]
	0x03971D90 LDP S2, S3, [X8 + 0x28]
	0x03971D94 B 0x3971DA8
	0x03971D98 FMOV S0, 1
	0x03971D9C FMOV S1, 1
	0x03971DA0 FMOV S2, 1
	0x03971DA4 FMOV S3, 1
	0x03971DA8 CBZ X0, 0x397236C
	0x03971DAC ADRP X8, 0x7DC000
	0x03971DB0 LDR W10, [X0 + 0x1C]
	0x03971DB4 LDR X9, [X0 + 0x10]
	0x03971DB8 LDR X8, [X8 + 0xC10]
	0x03971DBC ADD W10, W10, 0x1
	0x03971DC0 LDR X8, [X8]
	0x03971DC4 STR W10, [X0 + 0x1C]
	0x03971DC8 CBZ X9, 0x397236C
	0x03971DCC LDRSW X10, [X0 + 0x18]
	0x03971DD0 LDR W11, [X9 + 0x18]
	0x03971DD4 CMP W10, W11
	0x03971DD8 B.CS 0x3971DF8
	0x03971DDC ADD W8, W10, 0x1
	0x03971DE0 ADD X9, X9, X10, 0x4, LSL
	0x03971DE4 STR W8, [X0 + 0x18]
	0x03971DE8 STP S0, S1, [X9 + 0x20]
	0x03971DEC STP S2, S3, [X9 + 0x28]
	0x03971DF0 CBNZ X12, 0x3971E18
	0x03971DF4 B 0x3971E4C
	0x03971DF8 LDR X8, [X8 + 0x20]
	0x03971DFC LDR X0, [X31 + 0x60]
	0x03971E00 LDR X8, [X8 + 0xC0]
	0x03971E04 LDR X1, [X8 + 0x70]
	0x03971E08 BL 0x2F6D428
	0x03971E0C LDR X0, [X31 + 0x60]
	0x03971E10 LDR X12, [X31 + 0x50]
	0x03971E14 CBZ X12, 0x3971E4C
	0x03971E18 LDR W8, [X12 + 0x18]
	0x03971E1C CMP W27, W8
	0x03971E20 B.NE 0x3971E4C
	0x03971E24 LDR W8, [X20 + 0x18]
	0x03971E28 CMP W19, W8
	0x03971E2C B.CS 0x3972370
	0x03971E30 LDRSW X8, [X23]
	0x03971E34 CMP W8, W27
	0x03971E38 B.CS 0x3972370
	0x03971E3C ADD X8, X12, X8, 0x4, LSL
	0x03971E40 LDP S0, S1, [X8 + 0x20]
	0x03971E44 LDP S2, S3, [X8 + 0x28]
	0x03971E48 B 0x3971E5C
	0x03971E4C FMOV S0, 1
	0x03971E50 FMOV S1, 1
	0x03971E54 FMOV S2, 1
	0x03971E58 FMOV S3, 1
	0x03971E5C CBZ X0, 0x397236C
	0x03971E60 ADRP X8, 0x7DC000
	0x03971E64 LDR W10, [X0 + 0x1C]
	0x03971E68 LDR X9, [X0 + 0x10]
	0x03971E6C LDR X8, [X8 + 0xC10]
	0x03971E70 ADD W10, W10, 0x1
	0x03971E74 LDR X8, [X8]
	0x03971E78 STR W10, [X0 + 0x1C]
	0x03971E7C CBZ X9, 0x397236C
	0x03971E80 LDRSW X10, [X0 + 0x18]
	0x03971E84 LDR W11, [X9 + 0x18]
	0x03971E88 CMP W10, W11
	0x03971E8C B.CS 0x3971EAC
	0x03971E90 ADD W8, W10, 0x1
	0x03971E94 ADD X9, X9, X10, 0x4, LSL
	0x03971E98 STR W8, [X0 + 0x18]
	0x03971E9C STP S0, S1, [X9 + 0x20]
	0x03971EA0 STP S2, S3, [X9 + 0x28]
	0x03971EA4 CBNZ X12, 0x3971ECC
	0x03971EA8 B 0x3971F00
	0x03971EAC LDR X8, [X8 + 0x20]
	0x03971EB0 LDR X0, [X31 + 0x60]
	0x03971EB4 LDR X8, [X8 + 0xC0]
	0x03971EB8 LDR X1, [X8 + 0x70]
	0x03971EBC BL 0x2F6D428
	0x03971EC0 LDR X0, [X31 + 0x60]
	0x03971EC4 LDR X12, [X31 + 0x50]
	0x03971EC8 CBZ X12, 0x3971F00
	0x03971ECC LDR W8, [X12 + 0x18]
	0x03971ED0 CMP W27, W8
	0x03971ED4 B.NE 0x3971F00
	0x03971ED8 LDR W8, [X20 + 0x18]
	0x03971EDC CMP W22, W8
	0x03971EE0 B.CS 0x3972370
	0x03971EE4 LDRSW X8, [X24]
	0x03971EE8 CMP W8, W27
	0x03971EEC B.CS 0x3972370
	0x03971EF0 ADD X8, X12, X8, 0x4, LSL
	0x03971EF4 LDP S0, S1, [X8 + 0x20]
	0x03971EF8 LDP S2, S3, [X8 + 0x28]
	0x03971EFC B 0x3971F10
	0x03971F00 FMOV S0, 1
	0x03971F04 FMOV S1, 1
	0x03971F08 FMOV S2, 1
	0x03971F0C FMOV S3, 1
	0x03971F10 CBZ X0, 0x397236C
	0x03971F14 ADRP X8, 0x7DC000
	0x03971F18 LDR W10, [X0 + 0x1C]
	0x03971F1C LDR X9, [X0 + 0x10]
	0x03971F20 LDR X8, [X8 + 0xC10]
	0x03971F24 ADD W10, W10, 0x1
	0x03971F28 LDR X8, [X8]
	0x03971F2C STR W10, [X0 + 0x1C]
	0x03971F30 CBZ X9, 0x397236C
	0x03971F34 LDRSW X10, [X0 + 0x18]
	0x03971F38 LDR W11, [X9 + 0x18]
	0x03971F3C CMP W10, W11
	0x03971F40 B.CS 0x3971F5C
	0x03971F44 ADD W8, W10, 0x1
	0x03971F48 ADD X9, X9, X10, 0x4, LSL
	0x03971F4C STR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X19, 0xA72000
	015 Move W8, [X19+2550]
	016 Move W25, W1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {138}
	022 Move X0, 0x78B000
	023 Move X0, [X0+2872]
	024 Call 0x1C17CF4
	025 Move X0, 0x7C6000
	026 Move X0, [X0+1456]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DF000
	029 Move X0, [X0+1376]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E0000
	032 Move X0, [X0+3824]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E0000
	035 Move X0, [X0+3832]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E0000
	038 Move X0, [X0+3840]
	039 Call 0x1C17CF4
	040 Move X0, 0x7DF000
	041 Move X0, [X0+1352]
	042 Call 0x1C17CF4
	043 Move X0, 0x786000
	044 Move X0, [X0+360]
	045 Call 0x1C17CF4
	046 Move X0, 0x785000
	047 Move X0, [X0+3672]
	048 Call 0x1C17CF4
	049 Move X0, 0x7DE000
	050 Move X0, [X0+3088]
	051 Call 0x1C17CF4
	052 Move X0, 0x7DE000
	053 Move X0, [X0+3600]
	054 Call 0x1C17CF4
	055 Move X0, 0x788000
	056 Move X0, [X0+952]
	057 Call 0x1C17CF4
	058 Move X0, 0x7DF000
	059 Move X0, [X0+1824]
	060 Call 0x1C17CF4
	061 Move X0, 0x7DF000
	062 Move X0, [X0+3128]
	063 Call 0x1C17CF4
	064 Move X0, 0x7B1000
	065 Move X0, [X0+1728]
	066 Call 0x1C17CF4
	067 Move X0, 0x7B0000
	068 Move X0, [X0+1456]
	069 Call 0x1C17CF4
	070 Move X0, 0x7E0000
	071 Move X0, [X0+400]
	072 Call 0x1C17CF4
	073 Move X0, 0x7E0000
	074 Move X0, [X0+3848]
	075 Call 0x1C17CF4
	076 Move X0, 0x7DF000
	077 Move X0, [X0+2616]
	078 Call 0x1C17CF4
	079 Move X0, 0x7E0000
	080 Move X0, [X0+408]
	081 Call 0x1C17CF4
	082 Move X0, 0x7B0000
	083 Move X0, [X0+1464]
	084 Call 0x1C17CF4
	085 Move X0, 0x7E0000
	086 Move X0, [X0+416]
	087 Call 0x1C17CF4
	088 Move X0, 0x7DE000
	089 Move X0, [X0+3080]
	090 Call 0x1C17CF4
	091 Move X0, 0x7DF000
	092 Move X0, [X0+3136]
	093 Call 0x1C17CF4
	094 Move X0, 0x7DF000
	095 Move X0, [X0+3144]
	096 Call 0x1C17CF4
	097 Move X0, 0x7DE000
	098 Move X0, [X0+3072]
	099 Call 0x1C17CF4
	100 Move X0, 0x787000
	101 Move X0, [X0+960]
	102 Call 0x1C17CF4
	103 Move X0, 0x7DE000
	104 Move X0, [X0+1816]
	105 Call 0x1C17CF4
	106 Move X0, 0x7DD000
	107 Move X0, [X0+3568]
	108 Call 0x1C17CF4
	109 Move X0, 0x7DF000
	110 Move X0, [X0+3856]
	111 Call 0x1C17CF4
	112 Move X0, 0x7DF000
	113 Move X0, [X0+3864]
	114 Call 0x1C17CF4
	115 Move X0, 0x7DF000
	116 Move X0, [X0+3872]
	117 Call 0x1C17CF4
	118 Move X0, 0x783000
	119 Move X0, [X0+3448]
	120 Call 0x1C17CF4
	121 Move X0, 0x783000
	122 Move X0, [X0+1432]
	123 Call 0x1C17CF4
	124 Move X0, 0x7DF000
	125 Move X0, [X0+3880]
	126 Call 0x1C17CF4
	127 Move X0, 0x7DF000
	128 Move X0, [X0+3888]
	129 Call 0x1C17CF4
	130 Move X0, 0x7DF000
	131 Move X0, [X0+3896]
	132 Call 0x1C17CF4
	133 Move X0, 0x7DF000
	134 Move X0, [X0+3904]
	135 Call 0x1C17CF4
	136 Move W8, 1
	137 Move [X19+2550], W8
	138 Compare X24, 0
	139 JumpIfEqual {1133}
	140 Move X8, 0x78A000
	141 Move X8, [X8+2872]
	142 Move X0, X24
	143 Move X1, [X8]
	144 Call 0x21A4894, X0
	145 Compare X0, 0
	146 JumpIfEqual {1133}
	147 Move X22, 0x7DF000
	148 Move X22, [X22+3904]
	149 Move X1, X31
	150 Call MeshFilter.get_sharedMesh, X0
	151 Move X26, X0
	152 Move X0, X24
	153 Move X1, X31
	154 Call Component.get_gameObject, X0
	155 Move X8, [X22]
	156 Move X19, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {163}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X8, [X22]
	163 Move X9, [X8+184]
	164 Move X23, 0x7DF000
	165 Move X20, [X9+8]
	166 Move X23, [X23+3872]
	167 Compare X20, 0
	168 JumpIfNotEqual {191}
	169 Move W9, [X8+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {175}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X8, [X22]
	175 Move X9, 0x7DF000
	176 Move X8, [X8+184]
	177 Move X9, [X9+3832]
	178 Move X21, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X8, 0x7DF000
	182 Move X8, [X8+3880]
	183 Move X1, X21
	184 Move X3, X31
	185 Move X20, X0
	186 Move X2, [X8]
	187 Call Func`2<Object, Object>..ctor, X0, X1, X2
	188 Move X8, [X22]
	189 Move X8, [X8+184]
	190 Move [X8+8], X20
	191 Move X2, [X23]
	192 Move X0, X19
	193 Move X1, X20
	194 Call 0x221C348, X0, X1
	195 Move [X31+40], X0
	196 Move X0, X24
	197 Move X1, X31
	198 Call Component.get_gameObject, X0
	199 Move X8, [X22]
	200 Move X19, X0
	201 Move W9, [X8+224]
	202 Compare W9, 0
	203 JumpIfNotEqual {207}
	204 Move X0, X8
	205 Call 0x1C17DFC
	206 Move X8, [X22]
	207 Move X9, [X8+184]
	208 Move X23, 0x7DF000
	209 Move X20, [X9+16]
	210 Move X23, [X23+3856]
	211 Compare X20, 0
	212 JumpIfNotEqual {235}
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfNotEqual {219}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Move X8, [X22]
	219 Move X9, 0x7DF000
	220 Move X8, [X8+184]
	221 Move X9, [X9+3824]
	222 Move X21, [X8]
	223 Move X0, [X9]
	224 Call 0x1C17F10
	225 Move X8, 0x7DF000
	226 Move X8, [X8+3888]
	227 Move X1, X21
	228 Move X3, X31
	229 Move X20, X0
	230 Move X2, [X8]
	231 Call Func`2<Object, Object>..ctor, X0, X1, X2
	232 Move X8, [X22]
	233 Move X8, [X8+184]
	234 Move [X8+16], X20
	235 Move X2, [X23]
	236 Move X0, X19
	237 Move X1, X20
	238 Call 0x221C348, X0, X1
	239 Move [X31+48], X0
	240 Move X0, X24
	241 Move X1, X31
	242 Call Component.get_gameObject, X0
	243 Move X8, [X22]
	244 Move X19, X0
	245 Move W9, [X8+224]
	246 Compare W9, 0
	247 JumpIfNotEqual {251}
	248 Move X0, X8
	249 Call 0x1C17DFC
	250 Move X8, [X22]
	251 Move X9, [X8+184]
	252 Move X23, 0x7DF000
	253 Move X20, [X9+24]
	254 Move X23, [X23+3864]
	255 Compare X20, 0
	256 JumpIfNotEqual {279}
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {263}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move X8, [X22]
	263 Move X9, 0x7DF000
	264 Move X8, [X8+184]
	265 Move X9, [X9+3840]
	266 Move X21, [X8]
	267 Move X0, [X9]
	268 Call 0x1C17F10
	269 Move X8, 0x7DF000
	270 Move X8, [X8+3896]
	271 Move X1, X21
	272 Move X3, X31
	273 Move X20, X0
	274 Move X2, [X8]
	275 Call Func`2<Object, Object>..ctor, X0, X1, X2
	276 Move X8, [X22]
	277 Move X8, [X8+184]
	278 Move [X8+24], X20
	279 Move X2, [X23]
	280 Move X0, X19
	281 Move X1, X20
	282 Call 0x221C348, X0, X1
	283 Move [X31+64], X0
	284 Move TEMP, X25
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {335}
	288 Compare X26, 0
	289 JumpIfEqual {1133}
	290 Move X0, X26
	291 Move X1, X31
	292 Call Mesh.get_vertices, X0
	293 Move X8, 0x787000
	294 Move X8, [X8+960]
	295 Move X19, X0
	296 Move X8, [X8]
	297 Move X0, X8
	298 Call 0x1C17F10
	299 Move X8, 0x7DF000
	300 Move X8, [X8+416]
	301 Move X1, X19
	302 Move [X31+88], X0
	303 Move X2, [X8]
	304 Call List`1<Vector3>..ctor, X0, X1
	305 Move X0, X26
	306 Move X1, X31
	307 Call Mesh.get_colors, X0
	308 Move X8, 0x7DD000
	309 Move X8, [X8+3072]
	310 Move X19, X0
	311 Move X8, [X8]
	312 Move X0, X8
	313 Call 0x1C17F10
	314 Move X8, 0x7DF000
	315 Move X8, [X8+408]
	316 Move X1, X19
	317 Move [X31+80], X0
	318 Move X2, [X8]
	319 Call List`1<Color>..ctor, X0, X1
	320 Move X0, X26
	321 Move X1, X31
	322 Call Mesh.get_uv, X0
	323 Move X8, 0x7DE000
	324 Move X8, [X8+1816]
	325 Move X19, X0
	326 Move X8, [X8]
	327 Move X0, X8
	328 Call 0x1C17F10
	329 Move X8, 0x7DF000
	330 Move X8, [X8+400]
	331 Move X1, X19
	332 Move [X31+72], X0
	333 Move X2, [X8]
	334 Call List`1<Vector2>..ctor, X0, X1
	335 Move X8, 0x787000
	336 Move X8, [X8+960]
	337 Move X0, [X8]
	338 Call 0x1C17F10
	339 Move X8, 0x7AF000
	340 Move X8, [X8+1464]
	341 Move [X31+88], X0
	342 Move X1, [X8]
	343 Call List`1<Vector3>..ctor, X0
	344 Move X8, 0x7DD000
	345 Move X8, [X8+3072]
	346 Move X0, [X8]
	347 Call 0x1C17F10
	348 Move X8, 0x7DD000
	349 Move X8, [X8+3080]
	350 Move [X31+80], X0
	351 Move X1, [X8]
	352 Call List`1<Color>..ctor, X0
	353 Move X8, 0x7DE000
	354 Move X8, [X8+1816]
	355 Move X0, [X8]
	356 Call 0x1C17F10
	357 Move X8, 0x7DF000
	358 Move X8, [X8+3848]
	359 Move [X31+72], X0
	360 Move X1, [X8]
	361 Call List`1<Vector2>..ctor, X0
	362 Move [X31+16], X24
	363 Move X8, 0x7DD000
	364 Move X8, [X8+3568]
	365 Move X19, 0x7DE000
	366 Move X0, [X8]
	367 Move X19, [X19+2616]
	368 Call 0x1C17F10
	369 Move X1, [X19]
	370 Move X28, X0
	371 Call List`1<Object>..ctor, X0
	372 Compare X26, 0
	373 JumpIfEqual {1133}
	374 Move X0, X26
	375 Move X1, X31
	376 Call Mesh.get_subMeshCount, X0
	377 Move X24, [X31+40]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X20, 0x7DE000
	380 Move X29, 0x7C5000
	381 Move X20, [X20+3144]
	382 Move X29, [X29+1456]
	383 Move W19, W31
	384 And W8, W25, 1
	385 Move [X31+32], W25
	386 Move [X31+36], W8
	387 Move [X31+24], X26
	388 Move X0, X26
	389 Move W1, W19
	390 Move X2, X31
	391 Move [X31+60], W19
	392 Call Mesh.GetTriangles, X0, X1
	393 Compare X0, 0
	394 JumpIfEqual {1133}
	395 Move W8, [X0+24]
	396 Move X19, X0
	397 Move X26, [X31+48]
	398 Move X0, [X31+88]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move W27, W31
	401 Move TEMP, X25
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {546}
	405 Compare X28, 0
	406 JumpIfEqual {1133}
	407 Move W9, [X28+24]
	408 Add X8, X19, 32
	409 Add W25, W27, 1
	410 Add W23, W27, 2
	411 Add X26, X8, W27
	412 Add X24, X8, W25
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Add X22, X8, W23
	415 Move W21, W31
	416 Move X2, [X20]
	417 Move X0, X28
	418 Move W1, W21
	419 Call List`1<Object>.get_Item, X0, X1
	420 Compare X0, 0
	421 JumpIfEqual {1133}
	422 Move X1, X31
	423 Call Face.get_distinctIndexesInternal, X0
	424 Move W8, [X19+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move W1, [X26]
	427 Move X2, [X29]
	428 Call Enumerable.Contains, X0, X1
	429 Move TEMP, X0
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfEqual {473}
	433 Move X2, [X20]
	434 Move X0, X28
	435 Move W1, W21
	436 Call List`1<Object>.get_Item, X0, X1
	437 Compare X0, 0
	438 JumpIfEqual {1133}
	439 Move X1, X31
	440 Call Face.get_distinctIndexesInternal, X0
	441 Move W8, [X19+24]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move W1, [X24]
	444 Move X2, [X29]
	445 Call Enumerable.Contains, X0, X1
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {473}
	450 Move X2, [X20]
	451 Move X0, X28
	452 Move W1, W21
	453 Call List`1<Object>.get_Item, X0, X1
	454 Compare X0, 0
	455 JumpIfEqual {1133}
	456 Move X1, X31
	457 Call Face.get_distinctIndexesInternal, X0
	458 Move W8, [X19+24]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move W1, [X22]
	461 Move X2, [X29]
	462 Call Enumerable.Contains, X0, X1
	463 Move TEMP, X0
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {473}
	467 Move W8, [X28+24]
	468 Add W21, W21, 1
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move TEMP, 0
	471 Not TEMP
	472 Move W21, TEMP
	473 Move W9, [X31+36]
	474 NotImplemented "Instruction ORN not yet implemented."
	475 And W31, W9, W8
	476 Move X2, [X20]
	477 Move X0, X28
	478 Move W1, W21
	479 Call List`1<Object>.get_Item, X0, X1
	480 Compare X0, 0
	481 JumpIfEqual {1133}
	482 Move X8, [X0+16]
	483 Compare X8, 0
	484 JumpIfEqual {1133}
	485 Move X29, [X8+24]
	486 Move X8, 0x784000
	487 Move X8, [X8+3672]
	488 Add W1, W29, 3
	489 Move X0, [X8]
	490 Call 0x1C17D6C
	491 Move X2, [X20]
	492 Move X20, X0
	493 Move X0, X28
	494 Move W1, W21
	495 Call List`1<Object>.get_Item, X0, X1
	496 Compare X0, 0
	497 JumpIfEqual {1133}
	498 Move X0, [X0+16]
	499 Move W1, W31
	500 Move X2, X20
	501 Move W3, W31
	502 Move W4, W29
	503 Move X5, X31
	504 Call Array.Copy, X0, X1, X2, X3, X4
	505 Move W8, [X19+24]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Compare X20, 0
	508 JumpIfEqual {1133}
	509 Move W9, [X20+24]
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move W10, [X26]
	512 Move X11, X29
	513 ShiftRight X11, 32
	514 And X11, X11, 0x7FFFFFFF
	515 Add X11, X20, X11
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move [X11+32], W10
	518 Move W25, [X31+32]
	519 Move X26, [X31+48]
	520 Add W10, W29, 1
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move W11, [X24]
	523 Add X10, X20, W10
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move [X10+32], W11
	526 Move X24, [X31+40]
	527 Add W8, W29, 2
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move W9, [X22]
	530 Add X8, X20, W8
	531 Move X0, X28
	532 Move W1, W21
	533 Move [X8+32], W9
	534 Move X8, 0x7DE000
	535 Move X8, [X8+3144]
	536 Move X2, [X8]
	537 Call List`1<Object>.get_Item, X0, X1
	538 Move X29, 0x7C5000
	539 Move X29, [X29+1456]
	540 Compare X0, 0
	541 JumpIfEqual {1133}
	542 Move X1, X20
	543 Move X2, X31
	544 Call Face.set_indexesInternal, X0, X1
	545 Move X0, [X31+88]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Add X21, X19, W27
	548 NotImplemented "Instruction LDRSW not yet implemented."
	549 Compare X24, 0
	550 JumpIfEqual {1133}
	551 Move W9, [X24+24]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Compare X0, 0
	554 JumpIfEqual {1133}
	555 Move W9, 12
	556 NotImplemented "Instruction MADD not yet implemented."
	557 Move X9, 0x787000
	558 Move W10, [X0+28]
	559 Move S0, [X8+32]
	560 Move S1, [X8+36]
	561 Move V2, [X8+40]
	562 Move X8, [X0+16]
	563 Move X9, [X9+952]
	564 Add W10, W10, 1
	565 Move X9, [X9]
	566 Move [X0+28], W10
	567 Compare X8, 0
	568 JumpIfEqual {1133}
	569 NotImplemented "Instruction LDRSW not yet implemented."
	570 Move W11, [X8+24]
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move W11, 12
	573 Add W9, W10, 1
	574 NotImplemented "Instruction MADD not yet implemented."
	575 Move [X0+24], W9
	576 Move [X8+32], S0
	577 Move [X8+40], S1
	578 Move [X8+40], S2
	579 Move X8, [X9+32]
	580 Move X0, [X31+88]
	581 Move X8, [X8+192]
	582 Move X1, [X8+112]
	583 Call List`1<Vector3>.AddWithResize, X0, X1
	584 Move X0, [X31+88]
	585 Move W8, [X19+24]
	586 Add W20, W27, 1
	587 NotImplemented "Instruction CMP not yet implemented."
	588 Add X23, X19, W20
	589 NotImplemented "Instruction LDRSW not yet implemented."
	590 Move W9, [X24+24]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Move W9, 12
	593 NotImplemented "Instruction MADD not yet implemented."
	594 Move X10, 0x787000
	595 Move W9, [X0+28]
	596 Move S0, [X8+32]
	597 Move S1, [X8+36]
	598 Move V2, [X8+40]
	599 Move X8, [X0+16]
	600 Move X10, [X10+952]
	601 Add W9, W9, 1
	602 Move X10, [X10]
	603 Move [X0+28], W9
	604 Compare X8, 0
	605 JumpIfEqual {1133}
	606 NotImplemented "Instruction LDRSW not yet implemented."
	607 Move W11, [X8+24]
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move W11, 12
	610 Add W10, W9, 1
	611 NotImplemented "Instruction MADD not yet implemented."
	612 Move [X0+24], W10
	613 Move [X8+32], S0
	614 Move [X8+40], S1
	615 Move [X8+40], S2
	616 Move X8, [X10+32]
	617 Move X0, [X31+88]
	618 Move X8, [X8+192]
	619 Move X1, [X8+112]
	620 Call List`1<Vector3>.AddWithResize, X0, X1
	621 Move X0, [X31+88]
	622 Move W8, [X19+24]
	623 Add W29, W27, 2
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Add X22, X19, W29
	626 NotImplemented "Instruction LDRSW not yet implemented."
	627 Move W9, [X24+24]
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move W9, 12
	630 NotImplemented "Instruction MADD not yet implemented."
	631 Move X10, 0x787000
	632 Move W9, [X0+28]
	633 Move S0, [X8+32]
	634 Move S1, [X8+36]
	635 Move V2, [X8+40]
	636 Move X8, [X0+16]
	637 Move X10, [X10+952]
	638 Add W9, W9, 1
	639 Move X10, [X10]
	640 Move [X0+28], W9
	641 Compare X8, 0
	642 JumpIfEqual {1133}
	643 NotImplemented "Instruction LDRSW not yet implemented."
	644 Move W11, [X8+24]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Move W11, 12
	647 Add W10, W9, 1
	648 NotImplemented "Instruction MADD not yet implemented."
	649 Move [X0+24], W10
	650 Move [X8+32], S0
	651 Move [X8+40], S1
	652 Move [X8+40], S2
	653 Move X8, [X10+32]
	654 Move X8, [X8+192]
	655 Move X1, [X8+112]
	656 Call List`1<Vector3>.AddWithResize, X0, X1
	657 Move X0, [X31+80]
	658 Compare X26, 0
	659 JumpIfEqual {672}
	660 Move W8, [X19+24]
	661 NotImplemented "Instruction CMP not yet implemented."
	662 NotImplemented "Instruction LDRSW not yet implemented."
	663 Move W9, [X26+24]
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Add X8, X26, X8
	666 Move S0, [X8+32]
	667 Move S1, [X8+36]
	668 Move S2, [X8+40]
	669 Move S3, [X8+44]
	670 Compare X0, 0
	671 JumpIfNotEqual {678}
	672 Move S0, 1
	673 Move S1, 1
	674 Move S2, 1
	675 Move S3, 1
	676 Compare X0, 0
	677 JumpIfEqual {1133}
	678 Move X8, 0x7DD000
	679 Move W10, [X0+28]
	680 Move X9, [X0+16]
	681 Move X8, [X8+3088]
	682 Add W10, W10, 1
	683 Move X8, [X8]
	684 Move [X0+28], W10
	685 Compare X9, 0
	686 JumpIfEqual {1133}
	687 NotImplemented "Instruction LDRSW not yet implemented."
	688 Move W11, [X9+24]
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Add W8, W10, 1
	691 Add X9, X9, X10
	692 Move [X0+24], W8
	693 Move [X9+32], S0
	694 Move [X9+40], S1
	695 Move [X9+40], S2
	696 Move [X9+48], S3
	697 Compare X26, 0
	698 JumpIfEqual {717}
	699 Move W8, [X19+24]
	700 NotImplemented "Instruction CMP not yet implemented."
	701 NotImplemented "Instruction LDRSW not yet implemented."
	702 Move W9, [X26+24]
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Add X8, X26, X8
	705 Move S0, [X8+32]
	706 Move S1, [X8+36]
	707 Move S2, [X8+40]
	708 Move S3, [X8+44]
	709 Move X8, [X8+32]
	710 Move X0, [X31+80]
	711 Move X8, [X8+192]
	712 Move X1, [X8+112]
	713 Call List`1<Color>.AddWithResize, X0, X1
	714 Move X0, [X31+80]
	715 Compare X26, 0
	716 JumpIfNotEqual {699}
	717 Move S0, 1
	718 Move S1, 1
	719 Move S2, 1
	720 Move S3, 1
	721 Move X9, 0x7DD000
	722 Move W10, [X0+28]
	723 Move X8, [X0+16]
	724 Move X9, [X9+3088]
	725 Add W10, W10, 1
	726 Move X9, [X9]
	727 Move [X0+28], W10
	728 Compare X8, 0
	729 JumpIfEqual {1133}
	730 NotImplemented "Instruction LDRSW not yet implemented."
	731 Move W11, [X8+24]
	732 NotImplemented "Instruction CMP not yet implemented."
	733 Add W9, W10, 1
	734 Add X8, X8, X10
	735 Move [X0+24], W9
	736 Move [X8+32], S0
	737 Move [X8+40], S1
	738 Move [X8+40], S2
	739 Move [X8+48], S3
	740 Compare X26, 0
	741 JumpIfEqual {760}
	742 Move W8, [X19+24]
	743 NotImplemented "Instruction CMP not yet implemented."
	744 NotImplemented "Instruction LDRSW not yet implemented."
	745 Move W9, [X26+24]
	746 NotImplemented "Instruction CMP not yet implemented."
	747 Add X8, X26, X8
	748 Move S0, [X8+32]
	749 Move S1, [X8+36]
	750 Move S2, [X8+40]
	751 Move S3, [X8+44]
	752 Move X8, [X9+32]
	753 Move X0, [X31+80]
	754 Move X8, [X8+192]
	755 Move X1, [X8+112]
	756 Call List`1<Color>.AddWithResize, X0, X1
	757 Move X0, [X31+80]
	758 Compare X26, 0
	759 JumpIfNotEqual {742}
	760 Move S0, 1
	761 Move S1, 1
	762 Move S2, 1
	763 Move S3, 1
	764 Move X9, 0x7DD000
	765 Move W10, [X0+28]
	766 Move X8, [X0+16]
	767 Move X9, [X9+3088]
	768 Add W10, W10, 1
	769 Move X9, [X9]
	770 Move [X0+28], W10
	771 Compare X8, 0
	772 JumpIfEqual {1133}
	773 NotImplemented "Instruction LDRSW not yet implemented."
	774 Move W11, [X8+24]
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Add W9, W10, 1
	777 Add X8, X8, X10
	778 Move [X0+24], W9
	779 Move [X8+32], S0
	780 Move [X8+40], S1
	781 Move [X8+40], S2
	782 Move [X8+48], S3
	783 Move X8, [X9+32]
	784 Move X8, [X8+192]
	785 Move X1, [X8+112]
	786 Call List`1<Color>.AddWithResize, X0, X1
	787 Move W8, [X19+24]
	788 Move X12, [X31+64]
	789 Move X0, [X31+72]
	790 NotImplemented "Instruction CMP not yet implemented."
	791 Compare X12, 0
	792 JumpIfEqual {1133}
	793 NotImplemented "Instruction LDRSW not yet implemented."
	794 Move W9, [X12+24]
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Compare X0, 0
	797 JumpIfEqual {1133}
	798 Add X8, X12, X8
	799 Move X9, 0x7DE000
	800 Move W10, [X0+28]
	801 Move S0, [X8+32]
	802 Move S1, [X8+36]
	803 Move X8, [X0+16]
	804 Move X9, [X9+1824]
	805 Add W10, W10, 1
	806 Move X9, [X9]
	807 Move [X0+28], W10
	808 Compare X8, 0
	809 JumpIfEqual {1133}
	810 NotImplemented "Instruction LDRSW not yet implemented."
	811 Move W11, [X8+24]
	812 NotImplemented "Instruction CMP not yet implemented."
	813 Add W9, W10, 1
	814 Add X8, X8, X10
	815 Move [X0+24], W9
	816 Move [X8+32], S0
	817 Move [X8+40], S1
	818 Move X8, [X9+32]
	819 Move X0, [X31+72]
	820 Move X8, [X8+192]
	821 Move X1, [X8+112]
	822 Call List`1<Vector2>.AddWithResize, X0, X1
	823 Move X12, [X31+64]
	824 Move X0, [X31+72]
	825 Move W8, [X19+24]
	826 NotImplemented "Instruction CMP not yet implemented."
	827 NotImplemented "Instruction LDRSW not yet implemented."
	828 Move W9, [X12+24]
	829 NotImplemented "Instruction CMP not yet implemented."
	830 Add X8, X12, X8
	831 Move X9, 0x7DE000
	832 Move W10, [X0+28]
	833 Move S0, [X8+32]
	834 Move S1, [X8+36]
	835 Move X8, [X0+16]
	836 Move X9, [X9+1824]
	837 Add W10, W10, 1
	838 Move X9, [X9]
	839 Move [X0+28], W10
	840 Compare X8, 0
	841 JumpIfEqual {1133}
	842 NotImplemented "Instruction LDRSW not yet implemented."
	843 Move W11, [X8+24]
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Add W9, W10, 1
	846 Add X8, X8, X10
	847 Move [X0+24], W9
	848 Move [X8+32], S0
	849 Move [X8+40], S1
	850 Move X8, [X9+32]
	851 Move X0, [X31+72]
	852 Move X8, [X8+192]
	853 Move X1, [X8+112]
	854 Call List`1<Vector2>.AddWithResize, X0, X1
	855 Move X12, [X31+64]
	856 Move X0, [X31+72]
	857 Move W8, [X19+24]
	858 NotImplemented "Instruction CMP not yet implemented."
	859 NotImplemented "Instruction LDRSW not yet implemented."
	860 Move W9, [X12+24]
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Add X8, X12, X8
	863 Move X9, 0x7DE000
	864 Move W10, [X0+28]
	865 Move S0, [X8+32]
	866 Move S1, [X8+36]
	867 Move X8, [X0+16]
	868 Move X9, [X9+1824]
	869 Add W10, W10, 1
	870 Move X9, [X9]
	871 Move [X0+28], W10
	872 Compare X8, 0
	873 JumpIfEqual {1133}
	874 NotImplemented "Instruction LDRSW not yet implemented."
	875 Move W11, [X8+24]
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Add W9, W10, 1
	878 Add X8, X8, X10
	879 Move [X0+24], W9
	880 Move [X8+32], S0
	881 Move [X8+40], S1
	882 Move X8, [X9+32]
	883 Move X8, [X8+192]
	884 Move X1, [X8+112]
	885 Call List`1<Vector2>.AddWithResize, X0, X1
	886 Move X8, 0x784000
	887 Move X8, [X8+3672]
	888 Move W1, 3
	889 Move X0, [X8]
	890 Call 0x1C17D6C
	891 Compare X0, 0
	892 JumpIfEqual {1133}
	893 Move W8, [X0+24]
	894 Move X21, X0
	895 Compare W8, 0
	896 JumpIfEqual {1132}
	897 NotImplemented "Instruction CMP not yet implemented."
	898 Move [X21+32], W27
	899 NotImplemented "Instruction CMP not yet implemented."
	900 Move [X21+36], W20
	901 Move X8, 0x784000
	902 Move X8, [X8+3672]
	903 Move W1, 3
	904 Move X0, [X8]
	905 Call 0x1C17D6C
	906 Move W8, [X19+24]
	907 NotImplemented "Instruction CMP not yet implemented."
	908 Move X21, X0
	909 Compare X0, 0
	910 JumpIfEqual {1133}
	911 Move W9, [X21+24]
	912 Compare W9, 0
	913 JumpIfEqual {1132}
	914 Move W10, [X26]
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move [X21+32], W10
	917 Move W25, [X31+32]
	918 Move X26, [X31+48]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Move W10, [X24]
	921 NotImplemented "Instruction CMP not yet implemented."
	922 Move [X21+36], W10
	923 Move X24, [X31+40]
	924 NotImplemented "Instruction CMP not yet implemented."
	925 Move W29, [X22]
	926 Add X8, X31, 128
	927 Move X0, X31
	928 Move [X21+40], W29
	929 Call AutoUnwrapSettings.get_tile
	930 Move X8, 0x7DE000
	931 Move V0, [X31+128]
	932 Move V1, [X31+144]
	933 Move X8, [X8+1376]
	934 Move [X31+160], V0
	935 Move [X31+168], V1
	936 Move X0, [X8]
	937 Call 0x1C17F10
	938 Move V0, [X31+160]
	939 Move V1, [X31+176]
	940 Move W2, [X31+60]
	941 Add X3, X31, 96
	942 Move TEMP, 0
	943 Not TEMP
	944 Move W5, TEMP
	945 Move TEMP, 0
	946 Not TEMP
	947 Move W6, TEMP
	948 Move W7, 1
	949 Move X1, X21
	950 Move W4, W31
	951 Move X20, X0
	952 Move [X31+96], V0
	953 Move [X31+104], V1
	954 Move [X31], X31
	955 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	956 Compare X28, 0
	957 JumpIfEqual {1133}
	958 Move X9, 0x7DD000
	959 Move W10, [X28+28]
	960 Move X8, [X28+16]
	961 Move X9, [X9+3600]
	962 Add W10, W10, 1
	963 Move X9, [X9]
	964 Move [X28+28], W10
	965 Compare X8, 0
	966 JumpIfEqual {1133}
	967 NotImplemented "Instruction LDRSW not yet implemented."
	968 Move W11, [X8+24]
	969 NotImplemented "Instruction CMP not yet implemented."
	970 Add W9, W10, 1
	971 Add X8, X8, X10
	972 Move [X28+24], W9
	973 Move [X8+32], X20
	974 Move X8, [X9+32]
	975 Move X0, X28
	976 Move X1, X20
	977 Move X8, [X8+192]
	978 Move X2, [X8+112]
	979 Call List`1<Object>.AddWithResize, X0, X1
	980 Move X29, 0x7C5000
	981 Move X0, [X31+88]
	982 Move X29, [X29+1456]
	983 Move X20, 0x7DE000
	984 Move X20, [X20+3144]
	985 Move W8, [X19+24]
	986 Add W27, W27, 3
	987 NotImplemented "Instruction CMP not yet implemented."
	988 Move X26, [X31+24]
	989 Move W19, [X31+60]
	990 Move X1, X31
	991 Move X0, X26
	992 Add W19, W19, 1
	993 Call Mesh.get_subMeshCount, X0
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Move X19, 0x783000
	996 Move X20, 0x783000
	997 Move X19, [X19+1432]
	998 Move X20, [X20+3448]
	999 Move X22, [X31+16]
	1000 Move X1, X31
	1001 Move X0, X22
	1002 Call Component.get_gameObject, X0
	1003 Move X8, [X19]
	1004 Move X19, X0
	1005 Move W9, [X8+224]
	1006 Compare W9, 0
	1007 JumpIfNotEqual {1010}
	1008 Move X0, X8
	1009 Call 0x1C17DFC
	1010 Move X1, [X20]
	1011 Move X0, X19
	1012 Call 0x222E35C, X0
	1013 Compare X0, 0
	1014 JumpIfEqual {1133}
	1015 Move X8, 0x785000
	1016 Move X8, [X8+360]
	1017 Move X20, X0
	1018 Move X1, [X8]
	1019 Call 0x21E62E4, X0
	1020 Compare X0, 0
	1021 JumpIfEqual {1133}
	1022 Move X19, 0x7DE000
	1023 Move X19, [X19+1352]
	1024 Move X1, X31
	1025 Move X2, X31
	1026 Call MeshFilter.set_sharedMesh, X0, X1
	1027 Move X1, [X19]
	1028 Move X0, X20
	1029 Call 0x21E61FC, X0
	1030 Move X19, X0
	1031 Move X0, [X31+88]
	1032 Compare X0, 0
	1033 JumpIfEqual {1133}
	1034 Move X8, 0x7AF000
	1035 Move X8, [X8+1456]
	1036 Move X1, [X8]
	1037 Call List`1<Vector3>.ToArray, X0
	1038 Compare X28, 0
	1039 JumpIfEqual {1133}
	1040 Move X8, 0x7DE000
	1041 Move X8, [X8+3128]
	1042 Move X21, X0
	1043 Move X0, X28
	1044 Move X1, [X8]
	1045 Call List`1<Object>.ToArray, X0
	1046 Compare X19, 0
	1047 JumpIfEqual {1133}
	1048 Move X2, X0
	1049 Move X0, X19
	1050 Move X1, X21
	1051 Move X3, X31
	1052 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	1053 Move X0, [X31+80]
	1054 Compare X0, 0
	1055 JumpIfEqual {1133}
	1056 Move X8, 0x7B0000
	1057 Move X8, [X8+1728]
	1058 Move X1, [X8]
	1059 Call List`1<Color>.ToArray, X0
	1060 Move X1, [X31+72]
	1061 Move [X19+136], X0
	1062 Move X0, X19
	1063 Move X2, X31
	1064 Call ProBuilderMesh.set_textures, X0, X1
	1065 Move X0, X19
	1066 Move X1, X31
	1067 Call Component.get_gameObject, X0
	1068 Move X21, X0
	1069 Move X0, X22
	1070 Move X1, X31
	1071 Call Object.get_name, X0
	1072 Compare X21, 0
	1073 JumpIfEqual {1133}
	1074 Move X1, X0
	1075 Move X0, X21
	1076 Move X2, X31
	1077 Call Object.set_name, X0, X1
	1078 Move X0, X20
	1079 Move X1, X31
	1080 Call GameObject.get_transform, X0
	1081 Move X21, X0
	1082 Move X0, X22
	1083 Move X1, X31
	1084 Call Transform.get_position, X0
	1085 Compare X21, 0
	1086 JumpIfEqual {1133}
	1087 Move X0, X21
	1088 Move X1, X31
	1089 Call Transform.set_position, X0, X1
	1090 Move X0, X20
	1091 Move X1, X31
	1092 Call GameObject.get_transform, X0
	1093 Move X21, X0
	1094 Move X0, X22
	1095 Move X1, X31
	1096 Call Transform.get_localRotation, X0
	1097 Compare X21, 0
	1098 JumpIfEqual {1133}
	1099 Move X0, X21
	1100 Move X1, X31
	1101 Call Transform.set_localRotation, X0, X1
	1102 Move X0, X20
	1103 Move X1, X31
	1104 Call GameObject.get_transform, X0
	1105 Move X20, X0
	1106 Move X0, X22
	1107 Move X1, X31
	1108 Call Transform.get_localScale, X0
	1109 Compare X20, 0
	1110 JumpIfEqual {1133}
	1111 Move X0, X20
	1112 Move X1, X31
	1113 Call Transform.set_localScale, X0, X1
	1114 Move X0, X19
	1115 Move X1, X31
	1116 Call MeshTransform.CenterPivot, X0, X1
	1117 Move X0, X19
	1118 Move X20, [X31+272]
	1119 Move X19, [X31+280]
	1120 Move X22, [X31+256]
	1121 Move X21, [X31+264]
	1122 Move X24, [X31+240]
	1123 Move X23, [X31+248]
	1124 Move X26, [X31+224]
	1125 Move X25, [X31+232]
	1126 Move X28, [X31+208]
	1127 Move X27, [X31+216]
	1128 Move X29, [X31+192]
	1129 Move X30, [X31+200]
	1130 Add X31, X31, 288
	1131 Return X0
	1132 Call 0x1C17F28
	1133 Call 0x1C17F20

Method: System.Boolean ResetPbObjectWithMeshFilter(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Boolean preserveFaces)

Disassembly:
	0x03972228 ADRP X22, 0x7DC000
	0x0397222C LDR X9, [X9]
	0x03972230 STR W10, [X29 + 0x1C]
	0x03972234 LDR X22, [X22 + 0xC48]
	0x03972238 CBZ X8, 0x397236C
	0x0397223C LDRSW X10, [X29 + 0x18]
	0x03972240 LDR W11, [X8 + 0x18]
	0x03972244 CMP W10, W11
	0x03972248 B.CS 0x3972260
	0x0397224C ADD W9, W10, 0x1
	0x03972250 ADD X8, X8, X10, 0x3, LSL
	0x03972254 STR W9, [X29 + 0x18]
	0x03972258 STR X19, [X8 + 0x20]
	0x0397225C B 0x3972278
	0x03972260 LDR X8, [X9 + 0x20]
	0x03972264 MOV X0, X29
	0x03972268 MOV X1, X19
	0x0397226C LDR X8, [X8 + 0xC0]
	0x03972270 LDR X2, [X8 + 0x70]
	0x03972274 BL 0x301BF90
	0x03972278 ADRP X19, 0x7C3000
	0x0397227C LDR X19, [X19 + 0x5B0]
	0x03972280 LDR W8, [X20 + 0x18]
	0x03972284 ADD W26, W26, 0x3
	0x03972288 CMP W26, W8
	0x0397228C B.LT 0x3971984
	0x03972290 LDR X26, [X31 + 0x20]
	0x03972294 LDR W20, [X31 + 0x44]
	0x03972298 MOV X1, X31
	0x0397229C MOV X0, X26
	0x039722A0 ADD W20, W20, 0x1
	0x039722A4 BL 0x3C0F650
	0x039722A8 CMP W20, W0
	0x039722AC B.LT 0x3971958
	0x039722B0 LDR X0, [X31 + 0x68]
	0x039722B4 CBZ X0, 0x397236C
	0x039722B8 ADRP X19, 0x7AD000
	0x039722BC LDR X19, [X19 + 0x5B0]
	0x039722C0 LDR X1, [X19]
	0x039722C4 BL 0x30CE118
	0x039722C8 LDR X20, [X31 + 0x18]
	0x039722CC STR X0, [X20 + 0x58]
	0x039722D0 LDR X0, [X31 + 0x58]
	0x039722D4 CBZ X0, 0x397236C
	0x039722D8 ADRP X8, 0x7AE000
	0x039722DC LDR X8, [X8 + 0x710]
	0x039722E0 LDR X1, [X8]
	0x039722E4 BL 0x30CB4BC
	0x039722E8 STR X0, [X20 + 0x60]
	0x039722EC CBZ X29, 0x397236C
	0x039722F0 ADRP X8, 0x7DC000
	0x039722F4 LDR X8, [X8 + 0xC38]
	0x039722F8 MOV X0, X29
	0x039722FC LDR X1, [X8]
	0x03972300 BL 0x301DDC4
	0x03972304 STR X0, [X20 + 0x28]
	0x03972308 LDR X1, [X19]
	0x0397230C LDR X0, [X31 + 0x68]
	0x03972310 BL 0x30CE118
	0x03972314 MOV X1, X31
	0x03972318 BL 0x3933C34
	0x0397231C MOV X1, X0
	0x03972320 MOV X0, X20
	0x03972324 MOV X2, X31
	0x03972328 BL 0x3915EF8
	0x0397232C LDR X0, [X31 + 0x60]
	0x03972330 CBZ X0, 0x397236C
	0x03972334 ADRP X8, 0x7AE000
	0x03972338 LDR X8, [X8 + 0x6C0]
	0x0397233C LDR X1, [X8]
	0x03972340 BL 0x2F6F36C
	0x03972344 STR X0, [X20 + 0x88]
	0x03972348 MOVZ W0, 0x1
	0x0397234C LDP X20, X19, [X31 + 0x120]
	0x03972350 LDP X22, X21, [X31 + 0x110]
	0x03972354 LDP X24, X23, [X31 + 0x100]
	0x03972358 LDP X26, X25, [X31 + 0xF0]
	0x0397235C LDP X28, X27, [X31 + 0xE0]
	0x03972360 LDP X29, X30, [X31 + 0xD0]
	0x03972364 ADD X31, X31, 0x130
	0x03972368 RET
	0x0397236C BL 0x1C16F20
	0x03972370 BL 0x1C16F28
	0x03972374 STP X29, X30, [X31 - 0x60]!
	0x03972378 STP X28, X27, [X31 + 0x10]
	0x0397237C STP X26, X25, [X31 + 0x20]
	0x03972380 STP X24, X23, [X31 + 0x30]
	0x03972384 STP X22, X21, [X31 + 0x40]
	0x03972388 STP X20, X19, [X31 + 0x50]
	0x0397238C ADRP X20, 0xA6F000
	0x03972390 LDRB W8, [X20 + 0x9F8]
	0x03972394 MOV X19, X0
	0x03972398 TBNZ X8, 0x0, 0x3972428
	0x0397239C ADRP X0, 0x7DD000
	0x039723A0 LDR X0, [X0 + 0xF70]
	0x039723A4 BL 0x1C16CF4
	0x039723A8 ADRP X0, 0x7DD000
	0x039723AC LDR X0, [X0 + 0xF78]
	0x039723B0 BL 0x1C16CF4
	0x039723B4 ADRP X0, 0x783000
	0x039723B8 LDR X0, [X0 + 0x9B8]
	0x039723BC BL 0x1C16CF4
	0x039723C0 ADRP X0, 0x7DB000
	0x039723C4 LDR X0, [X0 + 0xAA0]
	0x039723C8 BL 0x1C16CF4
	0x039723CC ADRP X0, 0x7DD000
	0x039723D0 LDR X0, [X0 + 0xF80]
	0x039723D4 BL 0x1C16CF4
	0x039723D8 ADRP X0, 0x781000
	0x039723DC LDR X0, [X0 + 0xE00]
	0x039723E0 BL 0x1C16CF4
	0x039723E4 ADRP X0, 0x7A9000
	0x039723E8 LDR X0, [X0 + 0x7B8]
	0x039723EC BL 0x1C16CF4
	0x039723F0 ADRP X0, 0x7A9000
	0x039723F4 LDR X0, [X0 + 0x7C0]
	0x039723F8 BL 0x1C16CF4
	0x039723FC ADRP X0, 0x781000
	0x03972400 LDR X0, [X0 + 0xE18]
	0x03972404 BL 0x1C16CF4
	0x03972408 ADRP X0, 0x7DD000
	0x0397240C LDR X0, [X0 + 0xF88]
	0x03972410 BL 0x1C16CF4
	0x03972414 ADRP X0, 0x7DD000
	0x03972418 LDR X0, [X0 + 0xF40]
	0x0397241C BL 0x1C16CF4
	0x03972420 MOVZ W8, 0x1
	0x03972424 STRB W8, [X20 + 0x9F8]
	0x03972428 CBZ X19, 0x3972828
	0x0397242C MOV X0, X19
	0x03972430 MOV X1, X31
	0x03972434 BL 0x3912AD8
	0x03972438 CBZ X0, 0x3972828
	0x0397243C MOV X1, X31
	0x03972440 BL 0x3C1351C
	0x03972444 CBZ X0, 0x3972828
	0x03972448 ADRP X8, 0x783000
	0x0397244C LDR X8, [X8 + 0x9B8]
	0x03972450 LDR W22, [X0 + 0x18]
	0x03972454 MOV X20, X0
	0x03972458 LDR X0, [X8]
	0x0397245C MOV W1, W22
	0x03972460 BL 0x1C16D6C
	0x03972464 LDR X23, [X19 + 0x28]
	0x03972468 CBZ X23, 0x3972828
	0x0397246C LDR W8, [X23 + 0x18]
	0x03972470 MOV X21, X0
	0x03972474 CMP W8, 0x1
	0x03972478 B.LT 0x39724D8
	0x0397247C MOV W24, W31
	0x03972480 SUB W22, W22, 0x1
	0x03972484 MOVZ W25, 0x1
	0x03972488 CMP W24, W8
	0x0397248C B.CS 0x397282C
	0x03972490 ADD X8, X23, W24, 0x3, SXTW
	0x03972494 LDR X8, [X8 + 0x20]
	0x03972498 CBZ X8, 0x3972828
	0x0397249C LDR W0, [X8 + 0x48]
	0x039724A0 MOV W1, W31
	0x039724A4 MOV W2, W22
	0x039724A8 MOV X3, X31
	0x039724AC BL 0x3907A24
	0x039724B0 CBZ X21, 0x3972828
	0x039724B4 LDR W8, [X21 + 0x18]
	0x039724B8 CMP W0, W8
	0x039724BC B.CS 0x397282C
	0x039724C0 ADD X8, X21, W0, SXTW
	0x039724C4 STRB W25, [X8 + 0x20]
	0x039724C8 LDR W8, [X23 + 0x18]
	0x039724CC ADD W24, W24, 0x1
	0x039724D0 CMP W24, W8
	0x039724D4 B.LT 0x3972488
	0x039724D8 ADRP X24, 0x7DD000
	0x039724DC LDR X24, [X24 + 0xF40]
	0x039724E0 LDR X0, [X24]
	0x039724E4 LDR W8, [X0 + 0xE0]
	0x039724E8 CBNZ W8, 0x39724F4
	0x039724EC BL 0x1C16DFC
	0x039724F0 LDR X0, [X24]
	0x039724F4 LDR X8, [X0 + 0xB8]
	0x039724F8 ADRP X26, 0x7DD000
	0x039724FC ADRP X25, 0x7DB000
	0x03972500 LDR X22, [X8 + 0x38]
	0x03972504 LDR X26, [X26 + 0xF70]
	0x03972508 LDR X25, [X25 + 0xAA0]
	0x0397250C CBNZ X22, 0x3972560
	0x03972510 LDR W8, [X0 + 0xE0]
	0x03972514 CBNZ W8, 0x3972520
	0x03972518 BL 0x1C16DFC
	0x0397251C LDR X0, [X24]
	0x03972520 ADRP X9, 0x7DD000
	0x03972524 LDR X8, [X0 + 0xB8]
	0x03972528 LDR X9, [X9 + 0xF80]
	0x0397252C LDR X23, [X8]
	0x03972530 LDR X0, [X9]
	0x03972534 BL 0x1C16F10
	0x03972538 ADRP X8, 0x7DD000
	0x0397253C LDR X8, [X8 + 0xF88]
	0x03972540 MOV X1, X23
	0x03972544 MOV X3, X31
	0x03972548 MOV X22, X0
	0x0397254C LDR X2, [X8]
	0x03972550 BL 0x2D2B448
	0x03972554 LDR X8, [X24]
	0x03972558 LDR X8, [X8 + 0xB8]
	0x0397255C STR X22, [X8 + 0x38]
	0x03972560 LDR X2, [X26]
	0x03972564 MOV X0, X21
	0x03972568 MOV X1, X22
	0x0397256C BL 0x217D970
	0x03972570 LDR X1, [X25]
	0x03972574 MOV X21, X0
	0x03972578 BL 0x21B23E0
	0x0397257C TBZ X0, 0x0, 0x39727B8
	0x03972580 LDR X25, [X19 + 0x28]
	0x03972584 CBZ X25, 0x3972828
	0x03972588 LDR W8, [X25 + 0x18]
	0x0397258C CMP W8, 0x1
	0x03972590 B.LT 0x39727D4
	0x03972594 ADRP X27, 0x7A9000
	0x03972598 ADRP X28, 0x781000
	0x0397259C ADRP X29, 0x7A9000
	0x039725A0 LDR X27, [X27 + 0x7B8]
	0x039725A4 LDR X28, [X28 + 0xE18]
	0x039725A8 LDR X29, [X29 + 0x7C0]
	0x039725AC MOV W26, W31
	0x039725B0 CMP W26, W8
	0x039725B4 B.CS 0x397282C
	0x039725B8 ADD X8, X25, W26, 0x3, SXTW
	0x039725BC LDR X23, [X8 + 0x20]
	0x039725C0 CBZ X23, 0x3972828
	0x039725C4 CBZ X21, 0x3972828
	0x039725C8 LDR X8, [X21]
	0x039725CC LDR W24, [X23 + 0x48]
	0x039725D0 LDR X1, [X27]
	0x039725D4 LDRH W9, [X8 + 0x12E]
	0x039725D8 CBZ X9, 0x39725FC
	0x039725DC LDR X10, [X8 + 0xB0]
	0x039725E0 ADD X10, X10, 0x8
	0x039725E4 LDUR X11, [X10 - 0x8]
	0x039725E8 CMP X11, X1
	0x039725EC B.EQ 0x397260C
	0x039725F0 SUBS X9, X9, 0x1
	0x039725F4 ADD X10, X10, 0x10
	0x039725F8 B.NE 0x39725E4
	0x039725FC MOV X0, X21
	0x03972600 MOV W2, W31
	0x03972604 BL 0x1C5C788
	0x03972608 B 0x3972618
	0x0397260C LDRSW X9, [X10]
	0x03972610 ADD X8, X8, X9, 0x4, LSL
	0x03972614 ADD X0, X8, 0x138
	0x03972618 LDP X8, X1, [X0]
	0x0397261C MOV X0, X21
	0x03972620 BLR X8
	0x03972624 MOV X22, X0
	0x03972628 CBZ X0, 0x3972788
	0x0397262C LDR X8, [X22]
	0x03972630 LDR X1, [X28]
	0x03972634 LDRH W9, [X8 + 0x12E]
	0x03972638 CBZ X9, 0x397265C
	0x0397263C LDR X10, [X8 + 0xB0]
	0x03972640 ADD X10, X10, 0x8
	0x03972644 LDUR X11, [X10 - 0x8]
	0x03972648 CMP X11, X1
	0x0397264C B.EQ 0x397266C
	0x03972650 SUBS X9, X9, 0x1
	0x03972654 ADD X10, X10, 0x10
	0x03972658 B.NE 0x3972644
	0x0397265C MOV X0, X22
	0x03972660 MOV W2, W31
	0x03972664 BL 0x1C5C788
	0x03972668 B 0x3972678
	0x0397266C LDRSW X9, [X10]
	0x03972670 ADD X8, X8, X9, 0x4, LSL
	0x03972674 ADD X0, X8, 0x138
	0x03972678 LDP X8, X1, [X0]
	0x0397267C MOV X0, X22
	0x03972680 BLR X8
	0x03972684 TBZ X0, 0x0, 0x39726F8
	0x03972688 LDR X8, [X22]
	0x0397268C LDR X1, [X29]
	0x03972690 LDRH W9, [X8 + 0x12E]
	0x03972694 CBZ X9, 0x39726B8
	0x03972698 LDR X10, [X8 + 0xB0]
	0x0397269C ADD X10, X10, 0x8
	0x039726A0 LDUR X11, [X10 - 0x8]
	0x039726A4 CMP X11, X1
	0x039726A8 B.EQ 0x39726C8
	0x039726AC SUBS X9, X9, 0x1
	0x039726B0 ADD X10, X10, 0x10
	0x039726B4 B.NE 0x39726A0
	0x039726B8 MOV X0, X22
	0x039726BC MOV W2, W31
	0x039726C0 BL 0x1C5C788
	0x039726C4 B 0x39726D4
	0x039726C8 LDRSW X9, [X10]
	0x039726CC ADD X8, X8, X9, 0x4, LSL
	0x039726D0 ADD X0, X8, 0x138
	0x039726D4 LDP X8, X1, [X0]
	0x039726D8 MOV X0, X22
	0x039726DC BLR X8
	0x039726E0 CMP W24, W0
	0x039726E4 B.LE 0x397262C
	0x039726E8 LDR W8, [X23 + 0x48]
	0x039726EC SUB W8, W8, 0x1
	0x039726F0 STR W8, [X23 + 0x48]
	0x039726F4 B 0x397262C
	0x039726F8 MOV X23, X31
	0x039726FC MOVZ W24, 0xA
	0x03972700 CBZ X22, 0x3972764
	0x03972704 LDR X8, [X22]
	0x03972708 ADRP X10, 0x781000
	0x0397270C LDRH W9, [X8 + 0x12E]
	0x03972710 LDR X10, [X10 + 0xE00]
	0x03972714 LDR X1, [X10]
	0x03972718 CBZ X9, 0x397273C
	0x0397271C LDR X10, [X8 + 0xB0]
	0x03972720 ADD X10, X10, 0x8
	0x03972724 LDUR X11, [X10 - 0x8]
	0x03972728 CMP X11, X1
	0x0397272C B.EQ 0x397274C
	0x03972730 SUBS X9, X9, 0x1
	0x03972734 ADD X10, X10, 0x10
	0x03972738 B.NE 0x3972724
	0x0397273C MOV X0, X22
	0x03972740 MOV W2, W31
	0x03972744 BL 0x1C5C788
	0x03972748 B 0x3972758
	0x0397274C LDRSW X9, [X10]
	0x03972750 ADD X8, X8, X9, 0x4, LSL
	0x03972754 ADD X0, X8, 0x138
	0x03972758 LDP X8, X1, [X0]
	0x0397275C MOV X0, X22
	0x03972760 BLR X8
	0x03972764 CBNZ X23, 0x3972830
	0x03972768 CMP W24, 0xA
	0x0397276C B.EQ 0x3972774
	0x03972770 CBNZ W24, 0x39727B8
	0x03972774 LDR W8, [X25 + 0x18]
	0x03972778 ADD W26, W26, 0x1
	0x0397277C CMP W26, W8
	0x03972780 B.LT 0x39725B0
	0x03972784 B 0x39727D4
	0x03972788 BL 0x1C16F20
	0x0397278C B 0x3972844
	0x03972790 B 0x3972798
	0x03972794 B 0x3972798
	0x03972798 CMP W1, 0x1
	0x0397279C B.NE 0x3972838
	0x039727A0 BL 0x3EB1AD0
	0x039727A4 LDR X23, [X0]
	0x039727A8 BL 0x3EB1AE0
	0x039727AC MOV W24, W31
	0x039727B0 CBNZ X22, 0x3972704
	0x039727B4 B 0x3972764
	0x039727B8 LDP X20, X19, [X31 + 0x50]
	0x039727BC LDP X22, X21, [X31 + 0x40]
	0x039727C0 LDP X24, X23, [X31 + 0x30]
	0x039727C4 LDP X26, X25, [X31 + 0x20]
	0x039727C8 LDP X28, X27, [X31 + 0x10]
	0x039727CC LDP X29, X30, [X31], #0x60
	0x039727D0 RET
	0x039727D4 MOV X0, X19
	0x039727D8 MOV X1, X31
	0x039727DC BL 0x3912AD8
	0x039727E0 ADRP X8, 0x7DD000
	0x039727E4 LDR X8, [X8 + 0xF78]
	0x039727E8 MOV X19, X0
	0x039727EC MOV X0, X20
	0x039727F0 MOV X1, X21
	0x039727F4 LDR X2, [X8]
	0x039727F8 BL 0x217FCA0
	0x039727FC CBZ X19, 0x3972828
	0x03972800 MOV X1, X0
	0x03972804 MOV X0, X19
	0x03972808 LDP X20, X19, [X31 + 0x50]
	0x0397280C LDP X22, X21, [X31 + 0x40]
	0x03972810 LDP X24, X23, [X31 + 0x30]
	0x03972814 LDP X26, X25, [X31 + 0x20]
	0x03972818 LDP X28, X27, [X31 + 0x10]
	0x0397281C MOV X2, X31
	0x03972820 LDP X29, X30, [X31], #0x60
	0x03972824 B 0x3C13558
	0x03972828 BL 0x1C16F20
	0x0397282C BL 0x1C16F28
	0x03972830 MOV X0, X23
	0x03972834 BL 0x1C16F18
	0x03972838 MOV X19, X0
	0x0397283C MOV X23, X31
	0x03972840 B 0x3972848
	0x03972844 MOV X19, X0
	0x03972848 CBZ X22, 0x39728AC
	0x0397284C LDR X8, [X22]
	0x03972850 ADRP X10, 0x781000
	0x03972854 LDRH W9, [X8 + 0x12E]
	0x03972858 LDR X10, [X10 + 0xE00]
	0x0397285C LDR X1, [X10]
	0x03972860 CBZ X9, 0x3972884
	0x03972864 LDR X10, [X8 + 0xB0]
	0x03972868 ADD X10, X10, 0x8
	0x0397286C LDUR X11, [X10 - 0x8]
	0x03972870 CMP X11, X1
	0x03972874 B.EQ 0x3972894
	0x03972878 SUBS X9, X9, 0x1
	0x0397287C ADD X10, X10, 0x10
	0x03972880 B.NE 0x397286C
	0x03972884 MOV X0, X22
	0x03972888 MOV W2, W31
	0x0397288C BL 0x1C5C788
	0x03972890 B 0x39728A0
	0x03972894 LDRSW X9, [X10]
	0x03972898 ADD X8, X8, X9, 0x4, LSL
	0x0397289C ADD X0, X8, 0x138
	0x039728A0 LDP X8, X1, [X0]
	0x039728A4 MOV X0, X22
	0x039728A8 BLR X8
	0x039728AC CBNZ X23, 0x39728B8
	0x039728B0 MOV X0, X19
	0x039728B4 BL 0x1D2C690
	0x039728B8 MOV X0, X23
	0x039728BC BL 0x1C16F18
	0x039728C0 BL 0x1990590
	0x039728C4 STR X30, [X31 - 0x20]!
	0x039728C8 STP X20, X19, [X31 + 0x10]
	0x039728CC ADRP X19, 0xA6F000
	0x039728D0 ADRP X20, 0x7DD000
	0x039728D4 LDRB W8, [X19 + 0x9F9]
	0x039728D8 LDR X20, [X20 + 0xF40]
	0x039728DC TBNZ X8, 0x0, 0x39728F4
	0x039728E0 ADRP X0, 0x7DD000
	0x039728E4 LDR X0, [X0 + 0xF40]
	0x039728E8 BL 0x1C16CF4
	0x039728EC MOVZ W8, 0x1
	0x039728F0 STRB W8, [X19 + 0x9F9]
	0x039728F4 LDR X0, [X20]
	0x039728F8 BL 0x1C16F10
	0x039728FC MOV X1, X31
	0x03972900 MOV X19, X0
	0x03972904 BL 0x33BDD8C
	0x03972908 LDR X8, [X20]
	0x0397290C LDR X8, [X8 + 0xB8]
	0x03972910 STR X19, [X8]
	0x03972914 LDP X20, X19, [X31 + 0x10]
	0x03972918 LDR X30, [X31], #0x20
	0x0397291C RET
	0x03972920 MOV X1, X31
	0x03972924 B 0x33BDD8C
	0x03972928 CBZ X1, 0x3972938
	0x0397292C MOV X0, X1
	0x03972930 MOV X1, X31
	0x03972934 B 0x3C17EBC
	0x03972938 STR X30, [X31 - 0x10]!
	0x0397293C BL 0x1C16F20
	0x03972940 CBZ X1, 0x3972950
	0x03972944 MOV X0, X1
	0x03972948 MOV X1, X31
	0x0397294C B 0x3C18218
	0x03972950 STR X30, [X31 - 0x10]!
	0x03972954 BL 0x1C16F20
	0x03972958 CBZ X1, 0x3972968
	0x0397295C MOV X0, X1
	0x03972960 MOV X1, X31
	0x03972964 B 0x3C180C0
	0x03972968 STR X30, [X31 - 0x10]!
	0x0397296C BL 0x1C16F20
	0x03972970 CBZ X1, 0x3972980
	0x03972974 MOV X0, X1
	0x03972978 MOV X1, X31
	0x0397297C B 0x3C17EBC
	0x03972980 STR X30, [X31 - 0x10]!
	0x03972984 BL 0x1C16F20
	0x03972988 CBZ X1, 0x3972998
	0x0397298C MOV X0, X1
	0x03972990 MOV X1, X31
	0x03972994 B 0x3C18218
	0x03972998 STR X30, [X31 - 0x10]!
	0x0397299C BL 0x1C16F20
	0x039729A0 CBZ X1, 0x39729B0
	0x039729A4 MOV X0, X1
	0x039729A8 MOV X1, X31
	0x039729AC B 0x3C180C0
	0x039729B0 STR X30, [X31 - 0x10]!
	0x039729B4 BL 0x1C16F20
	0x039729B8 ORN W8, W31, W1, 0x0
	0x039729BC AND W0, W8, 0x1
	0x039729C0 RET
	0x039729C4 SUB X31, X31, 0xD0
	0x039729C8 STP X29, X30, [X31 + 0x70]
	0x039729CC STP X28, X27, [X31 + 0x80]
	0x039729D0 STP X26, X25, [X31 + 0x90]
	0x039729D4 STP X24, X23, [X31 + 0xA0]
	0x039729D8 STP X22, X21, [X31 + 0xB0]
	0x039729DC STP X20, X19, [X31 + 0xC0]
	0x039729E0 STR W2, [X31 + 0x14]
	0x039729E4 STR X0, [X31 + 0x18]
	0x039729E8 ADRP X21, 0xA6F000
	0x039729EC ADRP X22, 0x7DD000
	0x039729F0 ADRP X20, 0x7DC000
	0x039729F4 ADRP X19, 0x7DC000
	0x039729F8 LDRB W8, [X21 + 0x9FA]
	0x039729FC LDR X22, [X22 + 0xF90]
	0x03972A00 LDR X20, [X20 + 0x898]
	0x03972A04 LDR X19, [X19 + 0x890]
	0x03972A08 MOV X23, X1
	0x03972A0C TBNZ X8, 0x0, 0x3972B08
	0x03972A10 ADRP X0, 0x7DD000
	0x03972A14 LDR X0, [X0 + 0x3F8]
	0x03972A18 BL 0x1C16CF4
	0x03972A1C ADRP X0, 0x7DC000
	0x03972A20 LDR X0, [X0 + 0xEB8]
	0x03972A24 BL 0x1C16CF4
	0x03972A28 ADRP X0, 0x7DC000
	0x03972A2C LDR X0, [X0 + 0x560]
	0x03972A30 BL 0x1C16CF4
	0x03972A34 ADRP X0, 0x7DC000
	0x03972A38 LDR X0, [X0 + 0xEC0]
	0x03972A3C BL 0x1C16CF4
	0x03972A40 ADRP X0, 0x7DC000
	0x03972A44 LDR X0, [X0 + 0x888]
	0x03972A48 BL 0x1C16CF4
	0x03972A4C ADRP X0, 0x7DC000
	0x03972A50 LDR X0, [X0 + 0x890]
	0x03972A54 BL 0x1C16CF4
	0x03972A58 ADRP X0, 0x7DC000
	0x03972A5C LDR X0, [X0 + 0x898]
	0x03972A60 BL 0x1C16CF4
	0x03972A64 ADRP X0, 0x781000
	0x03972A68 LDR X0, [X0 + 0xE00]
	0x03972A6C BL 0x1C16CF4
	0x03972A70 ADRP X0, 0x7DD000
	0x03972A74 LDR X0, [X0 + 0xF98]
	0x03972A78 BL 0x1C16CF4
	0x03972A7C ADRP X0, 0x7DD000
	0x03972A80 LDR X0, [X0 + 0xFA0]
	0x03972A84 BL 0x1C16CF4
	0x03972A88 ADRP X0, 0x781000
	0x03972A8C LDR X0, [X0 + 0xE18]
	0x03972A90 BL 0x1C16CF4
	0x03972A94 ADRP X0, 0x782000
	0x03972A98 LDR X0, [X0 + 0xE58]
	0x03972A9C BL 0x1C16CF4
	0x03972AA0 ADRP X0, 0x7DC000
	0x03972AA4 LDR X0, [X0 + 0xA50]
	0x03972AA8 BL 0x1C16CF4
	0x03972AAC ADRP X0, 0x7DB000
	0x03972AB0 LDR X0, [X0 + 0xE10]
	0x03972AB4 BL 0x1C16CF4
	0x03972AB8 ADRP X0, 0x7DC000
	0x03972ABC LDR X0, [X0 + 0xA38]
	0x03972AC0 BL 0x1C16CF4
	0x03972AC4 ADRP X0, 0x7DB000
	0x03972AC8 LDR X0, [X0 + 0xDF0]
	0x03972ACC BL 0x1C16CF4
	0x03972AD0 ADRP X0, 0x7DD000
	0x03972AD4 LDR X0, [X0 + 0xFA8]
	0x03972AD8 BL 0x1C16CF4
	0x03972ADC ADRP X0, 0x7DD000
	0x03972AE0 LDR X0, [X0 + 0xFB0]
	0x03972AE4 BL 0x1C16CF4
	0x03972AE8 ADRP X0, 0x7DD000
	0x03972AEC LDR X0, [X0 + 0xFB8]
	0x03972AF0 BL 0x1C16CF4
	0x03972AF4 ADRP X0, 0x7DD000
	0x03972AF8 LDR X0, [X0 + 0xF90]
	0x03972AFC BL 0x1C16CF4
	0x03972B00 MOVZ W8, 0x1
	0x03972B04 STRB W8, [X21 + 0x9FA]
	0x03972B08 LDR X0, [X22]
	0x03972B0C BL 0x1C16F10
	0x03972B10 MOV X1, X31
	0x03972B14 MOV X29, X0
	0x03972B18 BL 0x33BDD8C
	0x03972B1C LDR X0, [X20]
	0x03972B20 BL 0x1C16F10
	0x03972B24 LDR X1, [X19]
	0x03972B28 MOV X19, X0
	0x03972B2C BL 0x2DBDE08
	0x03972B30 CBZ X29, 0x3972F54
	0x03972B34 ADRP X8, 0x7DB000
	0x03972B38 LDR X8, [X8 + 0xDF0]
	0x03972B3C STR X19, [X29 + 0x10]
	0x03972B40 ADRP X19, 0x7DC000
	0x03972B44 LDR X0, [X8]
	0x03972B48 LDR X19, [X19 + 0xA38]
	0x03972B4C BL 0x1C16F10
	0x03972B50 LDR X1, [X19]
	0x03972B54 MOV X21, X0
	0x03972B58 BL 0x301B7C4
	0x03972B5C CBZ X23, 0x3972F54
	0x03972B60 ADRP X10, 0x7DD000
	0x03972B64 LDR X8, [X23]
	0x03972B68 LDR X10, [X10 + 0xF98]
	0x03972B6C LDRH W9, [X8 + 0x12E]
	0x03972B70 LDR X1, [X10]
	0x03972B74 CBZ X9, 0x3972B98
	0x03972B78 LDR X10, [X8 + 0xB0]
	0x03972B7C ADD X10, X10, 0x8
	0x03972B80 LDUR X11, [X10 - 0x8]
	0x03972B84 CMP X11, X1
	0x03972B88 B.EQ 0x3972BA8
	0x03972B8C SUBS X9, X9, 0x1
	0x03972B90 ADD X10, X10, 0x10
	0x03972B94 B.NE 0x3972B80
	0x03972B98 MOV X0, X23
	0x03972B9C MOV W2, W31
	0x03972BA0 BL 0x1C5C788
	0x03972BA4 B 0x3972BB4
	0x03972BA8 LDRSW X9, [X10]
	0x03972BAC ADD X8, X8, X9, 0x4, LSL
	0x03972BB0 ADD X0, X8, 0x138
	0x03972BB4 LDP X8, X1, [X0]
	0x03972BB8 MOV X0, X23
	0x03972BBC BLR X8
	0x03972BC0 STP X0, X29, [X31 + 0x20]
	0x03972BC4 CBZ X0, 0x3972F58
	0x03972BC8 ADRP X23, 0x7DC000
	0x03972BCC LDR X23, [X23 + 0x888]
	0x03972BD0 MOV X20, X0
	0x03972BD4 LDR X8, [X20]
	0x03972BD8 ADRP X10, 0x781000
	0x03972BDC LDRH W9, [X8 + 0x12E]
	0x03972BE0 LDR X10, [X10 + 0xE18]
	0x03972BE4 LDR X1, [X10]
	0x03972BE8 CBZ X9, 0x3972C0C
	0x03972BEC LDR X10, [X8 + 0xB0]
	0x03972BF0 ADD X10, X10, 0x8
	0x03972BF4 LDUR X11, [X10 - 0x8]
	0x03972BF8 CMP X11, X1
	0x03972BFC B.EQ 0x3972C1C
	0x03972C00 SUBS X9, X9, 0x1
	0x03972C04 ADD X10, X10, 0x10
	0x03972C08 B.NE 0x3972BF4
	0x03972C0C MOV X0, X20
	0x03972C10 MOV W2, W31
	0x03972C14 BL 0x1C5C788
	0x03972C18 B 0x3972C28
	0x03972C1C LDRSW X9, [X10]
	0x03972C20 ADD X8, X8, X9, 0x4, LSL
	0x03972C24 ADD X0, X8, 0x138
	0x03972C28 LDP X8, X1, [X0]
	0x03972C2C MOV X0, X20
	0x03972C30 BLR X8
	0x03972C34 TBZ X0, 0x0, 0x3972E04
	0x03972C38 LDR X8, [X20]
	0x03972C3C ADRP X10, 0x7DD000
	0x03972C40 LDRH W9, [X8 + 0x12E]
	0x03972C44 LDR X10, [X10 + 0xFA0]
	0x03972C48 LDR X1, [X10]
	0x03972C4C CBZ X9, 0x3972C70
	0x03972C50 LDR X10, [X8 + 0xB0]
	0x03972C54 ADD X10, X10, 0x8
	0x03972C58 LDUR X11, [X10 - 0x8]
	0x03972C5C CMP X11, X1
	0x03972C60 B.EQ 0x3972C80
	0x03972C64 SUBS X9, X9, 0x1
	0x03972C68 ADD X10, X10, 0x10
	0x03972C6C B.NE 0x3972C58
	0x03972C70 MOV X0, X20
	0x03972C74 MOV W2, W31
	0x03972C78 BL 0x1C5C788
	0x03972C7C B 0x3972C8C
	0x03972C80 LDRSW X9, [X10]
	0x03972C84 ADD X8, X8, X9, 0x4, LSL
	0x03972C88 ADD X0, X8, 0x138
	0x03972C8C LDP X8, X1, [X0]
	0x03972C90 MOV X0, X20
	0x03972C94 BLR X8
	0x03972C98 MOV X25, X0
	0x03972C9C CBZ X0, 0x3972F40
	0x03972CA0 LDR X8, [X25 + 0x10]
	0x03972CA4 CBZ X8, 0x3972F44
	0x03972CA8 MOV X24, X1
	0x03972CAC CBZ X1, 0x3972F38
	0x03972CB0 LDR X9, [X24 + 0x10]
	0x03972CB4 CBZ X9, 0x3972F3C
	0x03972CB8 LDR W27, [X8 + 0x18]
	0x03972CBC ADRP X8, 0x782000
	0x03972CC0 LDR W28, [X9 + 0x18]
	0x03972CC4 LDR X8, [X8 + 0xE58]
	0x03972CC8 ADD W1, W28, W27
	0x03972CCC LDR X0, [X8]
	0x03972CD0 BL 0x1C16D6C
	0x03972CD4 MOV X26, X0
	0x03972CD8 LDR X0, [X25 + 0x10]
	0x03972CDC MOV W1, W31
	0x03972CE0 MOV X2, X26
	0x03972CE4 MOV W3, W31
	0x03972CE8 MOV W4, W27
	0x03972CEC MOV X5, X31
	0x03972CF0 BL 0x339FCE8
	0x03972CF4 LDR X0, [X24 + 0x10]
	0x03972CF8 MOV W1, W31
	0x03972CFC MOV X2, X26
	0x03972D00 MOV W3, W27
	0x03972D04 MOV W4, W28
	0x03972D08 MOV X5, X31
	0x03972D0C BL 0x339FCE8
	0x03972D10 LDUR V0, [X25 + 0x2C]
	0x03972D14 LDUR V1, [X25 + 0x1C]
	0x03972D18 LDR W28, [X25 + 0x48]
	0x03972D1C ADRP X8, 0x7DC000
	0x03972D20 STP V1, V0, [X31 + 0x50]
	0x03972D24 LDR W29, [X25 + 0x18]
	0x03972D28 LDP W19, W20, [X25 + 0x50]
	0x03972D2C LDRB W22, [X25 + 0x4C]
	0x03972D30 LDR X8, [X8 + 0x560]
	0x03972D34 LDR X0, [X8]
	0x03972D38 BL 0x1C16F10
	0x03972D3C LDP V0, V1, [X31 + 0x50]
	0x03972D40 MOV X27, X0
	0x03972D44 CMP W22, 0x0
	0x03972D48 CSET W7, NE
	0x03972D4C STP V0, V1, [X31 + 0x30]
	0x03972D50 ADD X3, X31, 0x30
	0x03972D54 MOV X1, X26
	0x03972D58 MOV W2, W28
	0x03972D5C MOV W4, W29
	0x03972D60 MOV W5, W20
	0x03972D64 MOV W6, W19
	0x03972D68 STR X31, [X31]
	0x03972D6C BL 0x39004D4
	0x03972D70 CBZ X21, 0x3972F34
	0x03972D74 ADRP X9, 0x7DB000
	0x03972D78 LDR W10, [X21 + 0x1C]
	0x03972D7C LDR X8, [X21 + 0x10]
	0x03972D80 LDR X9, [X9 + 0xE10]
	0x03972D84 ADD W10, W10, 0x1
	0x03972D88 LDR X9, [X9]
	0x03972D8C STR W10, [X21 + 0x1C]
	0x03972D90 CBZ X8, 0x3972F48
	0x03972D94 LDRSW X10, [X21 + 0x18]
	0x03972D98 LDR W11, [X8 + 0x18]
	0x03972D9C CMP W10, W11
	0x03972DA0 B.CS 0x3972DB8
	0x03972DA4 ADD W9, W10, 0x1
	0x03972DA8 ADD X8, X8, X10, 0x3, LSL
	0x03972DAC STR W9, [X21 + 0x18]
	0x03972DB0 STR X27, [X8 + 0x20]
	0x03972DB4 B 0x3972DD0
	0x03972DB8 LDR X8, [X9 + 0x20]
	0x03972DBC LDR X8, [X8 + 0xC0]
	0x03972DC0 LDR X2, [X8 + 0x70]
	0x03972DC4 MOV X0, X21
	0x03972DC8 MOV X1, X27
	0x03972DCC BL 0x301BF90
	0x03972DD0 LDR X29, [X31 + 0x28]
	0x03972DD4 LDR X0, [X29 + 0x10]
	0x03972DD8 CBZ X0, 0x3972F4C
	0x03972DDC LDR X2, [X23]
	0x03972DE0 LDR X20, [X31 + 0x20]
	0x03972DE4 MOV X1, X25
	0x03972DE8 BL 0x2DBEF30
	0x03972DEC LDR X0, [X29 + 0x10]
	0x03972DF0 CBZ X0, 0x3972F50
	0x03972DF4 LDR X2, [X23]
	0x03972DF8 MOV X1, X24
	0x03972DFC BL 0x2DBEF30
	0x03972E00 B 0x3972BD4
	0x03972E04 MOV X25, X31
	0x03972E08 CBZ X20, 0x3972E6C
	0x03972E0C LDR X8, [X20]
	0x03972E10 ADRP X10, 0x781000
	0x03972E14 LDRH W9, [X8 + 0x12E]
	0x03972E18 LDR X10, [X10 + 0xE00]
	0x03972E1C LDR X1, [X10]
	0x03972E20 CBZ X9, 0x3972E44
	0x03972E24 LDR X10, [X8 + 0xB0]
	0x03972E28 ADD X10, X10, 0x8
	0x03972E2C LDUR X11, [X10 - 0x8]
	0x03972E30 CMP X11, X1
	0x03972E34 B.EQ 0x3972E54
	0x03972E38 SUBS X9, X9, 0x1
	0x03972E3C ADD X10, X10, 0x10
	0x03972E40 B.NE 0x3972E2C
	0x03972E44 MOV X0, X20
	0x03972E48 MOV W2, W31
	0x03972E4C BL 0x1C5C788
	0x03972E50 B 0x3972E60
	0x03972E54 LDRSW X9, [X10]
	0x03972E58 ADD X8, X8, X9, 0x4, LSL
	0x03972E5C ADD X0, X8, 0x138
	0x03972E60 LDP X8, X1, [X0]
	0x03972E64 MOV X0, X20
	0x03972E68 BLR X8
	0x03972E6C CBNZ X25, 0x3972F5C
	0x03972E70 LDR X24, [X31 + 0x18]
	0x03972E74 CBZ X24, 0x3972F54
	0x03972E78 ADRP X8, 0x7DC000
	0x03972E7C LDR X8, [X8 + 0xEC0]
	0x03972E80 ADRP X20, 0x7DD000
	0x03972E84 ADRP X22, 0x7DC000
	0x03972E88 ADRP X23, 0x7DD000
	0x03972E8C LDR X0, [X8]
	0x03972E90 LDR X19, [X24 + 0x28]
	0x03972E94 LDR X20, [X20 + 0xFB8]
	0x03972E98 LDR X22, [X22 + 0xEB8]
	0x03972E9C LDR X23, [X23 + 0x3F8]
	0x03972EA0 BL 0x1C16F10
	0x03972EA4 LDR X2, [X20]
	0x03972EA8 MOV X1, X29
	0x03972EAC MOV X3, X31
	0x03972EB0 MOV X20, X0
	0x03972EB4 BL 0x2D2F428
	0x03972EB8 LDR X2, [X22]
	0x03972EBC MOV X0, X19
	0x03972EC0 MOV X1, X20
	0x03972EC4 BL 0x21DA490
	0x03972EC8 LDR X1, [X23]
	0x03972ECC BL 0x21D79F4
	0x03972ED0 CBZ X0, 0x3972F54
	0x03972ED4 ADRP X8, 0x7DC000
	0x03972ED8 LDR X8, [X8 + 0xA50]
	0x03972EDC MOV X1, X21
	0x03972EE0 MOV X19, X0
	0x03972EE4 LDR X2, [X8]
	0x03972EE8 BL 0x301C194
	0x03972EEC MOV X0, X24
	0x03972EF0 MOV X1, X19
	0x03972EF4 MOV X2, X31
	0x03972EF8 BL 0x39159C8
	0x03972EFC LDR W8, [X31 + 0x14]
	0x03972F00 TBZ X8, 0x0, 0x3972F10
	0x03972F04 MOV X0, X24
	0x03972F08 MOV X1, X21
	0x03972F0C BL 0x397305C
	0x03972F10 MOV X0, X21
	0x03972F14 LDP X20, X19, [X31 + 0xC0]
	0x03972F18 LDP X22, X21, [X31 + 0xB0]
	0x03972F1C LDP X24, X23, [X31 + 0xA0]
	0x03972F20 LDP X26, X25, [X31 + 0x90]
	0x03972F24 LDP X28, X27, [X31 + 0x80]
	0x03972F28 LDP X29, X30, [X31 + 0x70]
	0x03972F2C ADD X31, X31, 0xD0
	0x03972F30 RET
	0x03972F34 BL 0x1C16F20
	0x03972F38 BL 0x1C16F20
	0x03972F3C BL 0x1C16F20
	0x03972F40 BL 0x1C16F20
	0x03972F44 BL 0x1C16F20
	0x03972F48 BL 0x1C16F20
	0x03972F4C BL 0x1C16F20
	0x03972F50 BL 0x1C16F20
	0x03972F54 BL 0x1C16F20
	0x03972F58 BL 0x1C16F20
	0x03972F5C MOV X0, X25
	0x03972F60 BL 0x1C16F18
	0x03972F64 B 0x3972FA0
	0x03972F68 B 0x3972FA0
	0x03972F6C B 0x3972FA4
	0x03972F70 B 0x3972FA0
	0x03972F74 B 0x3972FA0
	0x03972F78 B 0x3972FA0
	0x03972F7C B 0x3972FA0
	0x03972F80 B 0x3972FA0
	0x03972F84 B 0x3972FA0
	0x03972F88 B 0x3972FA4
	0x03972F8C B 0x3972FA4
	0x03972F90 B 0x3972FA4
	0x03972F94 B 0x3972FA4
	0x03972F98 B 0x3972FA4
	0x03972F9C B 0x3972FA0
	0x03972FA0 LDP X20, X29, [X31 + 0x20]
	0x03972FA4 MOV X24, X0
	0x03972FA8 CMP W1, 0x1
	0x03972FAC B.NE 0x3972FC4
	0x03972FB0 MOV X0, X24
	0x03972FB4 BL 0x3EB1AD0
	0x03972FB8 LDR X25, [X0]
	0x03972FBC BL 0x3EB1AE0
	0x03972FC0 B 0x3972E08
	0x03972FC4 MOV X25, X31
	0x03972FC8 B 0x3972FD0
	0x03972FCC MOV X24, X0
	0x03972FD0 LDR X8, [X31 + 0x20]
	0x03972FD4 CBZ X8, 0x397303C
	0x03972FD8 LDR X8, [X31 + 0x20]
	0x03972FDC ADRP X10, 0x781000
	0x03972FE0 LDR X8, [X8]
	0x03972FE4 LDRH W9, [X8 + 0x12E]
	0x03972FE8 LDR X10, [X10 + 0xE00]
	0x03972FEC LDR X1, [X10]
	0x03972FF0 CBZ X9, 0x3973014
	0x03972FF4 LDR X10, [X8 + 0xB0]
	0x03972FF8 ADD X10, X10, 0x8
	0x03972FFC LDUR X11, [X10 - 0x8]
	0x03973000 CMP X11, X1
	0x03973004 B.EQ 0x3973024
	0x03973008 SUBS X9, X9, 0x1
	0x0397300C ADD X10, X10, 0x10
	0x03973010 B.NE 0x3972FFC
	0x03973014 LDR X0, [X31 + 0x20]
	0x03973018 MOV W2, W31
	0x0397301C BL 0x1C5C788
	0x03973020 B 0x3973030
	0x03973024 LDRSW X9, [X10]
	0x03973028 ADD X8, X8, X9, 0x4, LSL
	0x0397302C ADD X0, X8, 0x138
	0x03973030 LDP X8, X1, [X0]
	0x03973034 LDR X0, [X31 + 0x20]
	0x03973038 BLR X8
	0x0397303C CBNZ X25, 0x3973048
	0x03973040 MOV X0, X24
	0x03973044 BL 0x1D2C690
	0x03973048 MOV X0, X25
	0x0397304C BL 0x1C16F18
	0x03973050 BL 0x1990590
	0x03973054 MOV X1, X31
	0x03973058 B 0x33BDD8C
	0x0397305C SUB X31, X31, 0x70
	0x03973060 STP X29, X30, [X31 + 0x10]
	0x03973064 STP X28, X27, [X31 + 0x20]
	0x03973068 STP X26, X25, [X31 + 0x30]
	0x0397306C STP X24, X23, [X31 + 0x40]
	0x03973070 STP X22, X21, [X31 + 0x50]
	0x03973074 STP X20, X19, [X31 + 0x60]
	0x03973078 ADRP X19, 0xA6E000
	0x0397307C LDRB W8, [X19 + 0x9FC]
	0x03973080 MOV X20, X1
	0x03973084 MOV X23, X0
	0x03973088 TBNZ X8, 0x0, 0x397310C
	0x0397308C ADRP X0, 0x78A000
	0x03973090 LDR X0, [X0 + 0x858]
	0x03973094 BL 0x1C16CF4
	0x03973098 ADRP X0, 0x7AA000
	0x0397309C LDR X0, [X0 + 0x8D0]
	0x039730A0 BL 0x1C16CF4
	0x039730A4 ADRP X0, 0x7DB000
	0x039730A8 LDR X0, [X0 + 0xD08]
	0x039730AC BL 0x1C16CF4
	0x039730B0 ADRP X0, 0x78A000
	0x039730B4 LDR X0, [X0 + 0x890]
	0x039730B8 BL 0x1C16CF4
	0x039730BC ADRP X0, 0x7DA000
	0x039730C0 LDR X0, [X0 + 0xC80]
	0x039730C4 BL 0x1C16CF4
	0x039730C8 ADRP X0, 0x78A000
	0x039730CC LDR X0, [X0 + 0x888]
	0x039730D0 BL 0x1C16CF4
	0x039730D4 ADRP X0, 0x780000
	0x039730D8 LDR X0, [X0 + 0xE00]
	0x039730DC BL 0x1C16CF4
	0x039730E0 ADRP X0, 0x7DA000
	0x039730E4 LDR X0, [X0 + 0xDB0]
	0x039730E8 BL 0x1C16CF4
	0x039730EC ADRP X0, 0x7DA000
	0x039730F0 LDR X0, [X0 + 0xDB8]
	0x039730F4 BL 0x1C16CF4
	0x039730F8 ADRP X0, 0x780000
	0x039730FC LDR X0, [X0 + 0xE18]
	0x03973100 BL 0x1C16CF4
	0x03973104 MOVZ W8, 0x1
	0x03973108 STRB W8, [X19 + 0x9FC]
	0x0397310C CBZ X23, 0x3973440
	0x03973110 ADRP X19, 0x78A000
	0x03973114 ADRP X22, 0x78A000
	0x03973118 LDR X19, [X19 + 0x888]
	0x0397311C LDR X22, [X22 + 0x890]
	0x03973120 MOV X0, X23
	0x03973124 MOV X1, X31
	0x03973128 BL 0x3916198
	0x0397312C LDR X8, [X19]
	0x03973130 MOV X21, X0
	0x03973134 MOV X0, X8
	0x03973138 BL 0x1C16F10
	0x0397313C LDR X1, [X22]
	0x03973140 MOV X22, X0
	0x03973144 BL 0x2A09A9C
	0x03973148 CBZ X20, 0x3973440
	0x0397314C ADRP X10, 0x7DA000
	0x03973150 LDR X8, [X20]
	0x03973154 LDR X10, [X10 + 0xDB0]
	0x03973158 LDRH W9, [X8 + 0x12E]
	0x0397315C LDR X1, [X10]
	0x03973160 CBZ X9, 0x3973184
	0x03973164 LDR X10, [X8 + 0xB0]
	0x03973168 ADD X10, X10, 0x8
	0x0397316C LDUR X11, [X10 - 0x8]
	0x03973170 CMP X11, X1
	0x03973174 B.EQ 0x3973194
	0x03973178 SUBS X9, X9, 0x1
	0x0397317C ADD X10, X10, 0x10
	0x03973180 B.NE 0x397316C
	0x03973184 MOV X0, X20
	0x03973188 MOV W2, W31
	0x0397318C BL 0x1C5C788
	0x03973190 B 0x39731A0
	0x03973194 LDRSW X9, [X10]
	0x03973198 ADD X8, X8, X9, 0x4, LSL
	0x0397319C ADD X0, X8, 0x138
	0x039731A0 LDP X8, X1, [X0]
	0x039731A4 MOV X0, X20
	0x039731A8 STR X23, [X31 + 0x8]
	0x039731AC BLR X8
	0x039731B0 MOV X20, X0
	0x039731B4 CBZ X0, 0x3973444
	0x039731B8 ADRP X29, 0x7DA000
	0x039731BC ADRP X25, 0x7DB000
	0x039731C0 ADRP X19, 0x78A000
	0x039731C4 LDR X29, [X29 + 0xC80]
	0x039731C8 LDR X25, [X25 + 0xD08]
	0x039731CC LDR X19, [X19 + 0x858]
	0x039731D0 LDR X8, [X20]
	0x039731D4 ADRP X10, 0x780000
	0x039731D8 LDRH W9, [X8 + 0x12E]
	0x039731DC LDR X10, [X10 + 0xE18]
	0x039731E0 LDR X1, [X10]
	0x039731E4 CBZ X9, 0x3973208
	0x039731E8 LDR X10, [X8 + 0xB0]
	0x039731EC ADD X10, X10, 0x8
	0x039731F0 LDUR X11, [X10 - 0x8]
	0x039731F4 CMP X11, X1
	0x039731F8 B.EQ 0x3973218
	0x039731FC SUBS X9, X9, 0x1
	0x03973200 ADD X10, X10, 0x10
	0x03973204 B.NE 0x39731F0
	0x03973208 MOV X0, X20
	0x0397320C MOV W2, W31
	0x03973210 BL 0x1C5C788
	0x03973214 B 0x3973224
	0x03973218 LDRSW X9, [X10]
	0x0397321C ADD X8, X8, X9, 0x4, LSL
	0x03973220 ADD X0, X8, 0x138
	0x03973224 LDP X8, X1, [X0]
	0x03973228 MOV X0, X20
	0x0397322C BLR X8
	0x03973230 TBZ X0, 0x0, 0x3973374
	0x03973234 LDR X8, [X20]
	0x03973238 ADRP X10, 0x7DA000
	0x0397323C LDRH W9, [X8 + 0x12E]
	0x03973240 LDR X10, [X10 + 0xDB8]
	0x03973244 LDR X1, [X10]
	0x03973248 CBZ X9, 0x397326C
	0x0397324C LDR X10, [X8 + 0xB0]
	0x03973250 ADD X10, X10, 0x8
	0x03973254 LDUR X11, [X10 - 0x8]
	0x03973258 CMP X11, X1
	0x0397325C B.EQ 0x397327C
	0x03973260 SUBS X9, X9, 0x1
	0x03973264 ADD X10, X10, 0x10
	0x03973268 B.NE 0x3973254
	0x0397326C MOV X0, X20
	0x03973270 MOV W2, W31
	0x03973274 BL 0x1C5C788
	0x03973278 B 0x3973288
	0x0397327C LDRSW X9, [X10]
	0x03973280 ADD X8, X8, X9, 0x4, LSL
	0x03973284 ADD X0, X8, 0x138
	0x03973288 LDP X8, X1, [X0]
	0x0397328C MOV X0, X20
	0x03973290 BLR X8
	0x03973294 CBZ X22, 0x3973438
	0x03973298 ADRP X8, 0x7AA000
	0x0397329C LDR X8, [X8 + 0x8D0]
	0x039732A0 MOV X23, X0
	0x039732A4 LDR X1, [X8]
	0x039732A8 MOV X0, X22
	0x039732AC BL 0x2A0A4C4
	0x039732B0 CBZ X23, 0x397343C
	0x039732B4 LDR X8, [X23 + 0x10]
	0x039732B8 CBZ X8, 0x397340C
	0x039732BC MOVZ W27, 0x8
	0x039732C0 LDR W9, [X8 + 0x18]
	0x039732C4 SUB X28, X27, 0x8
	0x039732C8 CMP X28, W9, SXTW
	0x039732CC B.GE 0x3973364
	0x039732D0 CMP X28, X9
	0x039732D4 B.CS 0x3973418
	0x039732D8 CBZ X21, 0x3973414
	0x039732DC LDR W1, [X8, X27, LSL #2]
	0x039732E0 LDR X2, [X29]
	0x039732E4 MOV X0, X21
	0x039732E8 BL 0x2A0A2A8
	0x039732EC LDR X2, [X25]
	0x039732F0 MOV W24, W0
	0x039732F4 MOV X0, X22
	0x039732F8 MOV W1, W24
	0x039732FC BL 0x2A0A530
	0x03973300 LDR X26, [X23 + 0x10]
	0x03973304 TBZ X0, 0x0, 0x3973330
	0x03973308 LDR X2, [X29]
	0x0397330C MOV X0, X22
	0x03973310 MOV W1, W24
	0x03973314 BL 0x2A0A2A8
	0x03973318 CBZ X26, 0x3973428
	0x0397331C LDR W8, [X26 + 0x18]
	0x03973320 CMP X28, X8
	0x03973324 B.CS 0x3973420
	0x03973328 STR W0, [X26, X27, LSL #2]
	0x0397332C B 0x3973354
	0x03973330 CBZ X26, 0x397341C
	0x03973334 LDR W8, [X26 + 0x18]
	0x03973338 CMP X28, X8
	0x0397333C B.CS 0x3973430
	0x03973340 LDR W2, [X26, X27, LSL #2]
	0x03973344 LDR X3, [X19]
	0x03973348 MOV X0, X22
	0x0397334C MOV W1, W24
	0x03973350 BL 0x2A0A344
	0x03973354 LDR X8, [X23 + 0x10]
	0x03973358 ADD X27, X27, 0x1
	0x0397335C CBNZ X8, 0x39732C0
	0x03973360 B 0x397340C
	0x03973364 MOV X0, X23
	0x03973368 MOV X1, X31
	0x0397336C BL 0x38FFC64
	0x03973370 B 0x39731D0

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X19, 0xA70000
	015 Move W8, [X19+2551]
	016 Move W25, W1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {144}
	022 Move X0, 0x7C4000
	023 Move X0, [X0+1456]
	024 Call 0x1C17CF4
	025 Move X0, 0x7DD000
	026 Move X0, [X0+1376]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DE000
	029 Move X0, [X0+3824]
	030 Call 0x1C17CF4
	031 Move X0, 0x7DE000
	032 Move X0, [X0+3832]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DE000
	035 Move X0, [X0+3840]
	036 Call 0x1C17CF4
	037 Move X0, 0x789000
	038 Move X0, [X0+1784]
	039 Call 0x1C17CF4
	040 Move X0, 0x784000
	041 Move X0, [X0+360]
	042 Call 0x1C17CF4
	043 Move X0, 0x789000
	044 Move X0, [X0+1920]
	045 Call 0x1C17CF4
	046 Move X0, 0x783000
	047 Move X0, [X0+3672]
	048 Call 0x1C17CF4
	049 Move X0, 0x7DC000
	050 Move X0, [X0+3088]
	051 Call 0x1C17CF4
	052 Move X0, 0x7DC000
	053 Move X0, [X0+3600]
	054 Call 0x1C17CF4
	055 Move X0, 0x786000
	056 Move X0, [X0+952]
	057 Call 0x1C17CF4
	058 Move X0, 0x7DD000
	059 Move X0, [X0+1824]
	060 Call 0x1C17CF4
	061 Move X0, 0x7DD000
	062 Move X0, [X0+3128]
	063 Call 0x1C17CF4
	064 Move X0, 0x7AF000
	065 Move X0, [X0+1808]
	066 Call 0x1C17CF4
	067 Move X0, 0x7AF000
	068 Move X0, [X0+1728]
	069 Call 0x1C17CF4
	070 Move X0, 0x7AE000
	071 Move X0, [X0+1456]
	072 Call 0x1C17CF4
	073 Move X0, 0x7DE000
	074 Move X0, [X0+400]
	075 Call 0x1C17CF4
	076 Move X0, 0x7DE000
	077 Move X0, [X0+3848]
	078 Call 0x1C17CF4
	079 Move X0, 0x7DD000
	080 Move X0, [X0+2616]
	081 Call 0x1C17CF4
	082 Move X0, 0x7DE000
	083 Move X0, [X0+408]
	084 Call 0x1C17CF4
	085 Move X0, 0x7AE000
	086 Move X0, [X0+1464]
	087 Call 0x1C17CF4
	088 Move X0, 0x7DE000
	089 Move X0, [X0+416]
	090 Call 0x1C17CF4
	091 Move X0, 0x7DC000
	092 Move X0, [X0+3080]
	093 Call 0x1C17CF4
	094 Move X0, 0x7DD000
	095 Move X0, [X0+3136]
	096 Call 0x1C17CF4
	097 Move X0, 0x7DD000
	098 Move X0, [X0+3144]
	099 Call 0x1C17CF4
	100 Move X0, 0x7DC000
	101 Move X0, [X0+3072]
	102 Call 0x1C17CF4
	103 Move X0, 0x786000
	104 Move X0, [X0+960]
	105 Call 0x1C17CF4
	106 Move X0, 0x7DD000
	107 Move X0, [X0+1816]
	108 Call 0x1C17CF4
	109 Move X0, 0x7DC000
	110 Move X0, [X0+3568]
	111 Call 0x1C17CF4
	112 Move X0, 0x7DC000
	113 Move X0, [X0+2768]
	114 Call 0x1C17CF4
	115 Move X0, 0x7DE000
	116 Move X0, [X0+3856]
	117 Call 0x1C17CF4
	118 Move X0, 0x7DE000
	119 Move X0, [X0+3864]
	120 Call 0x1C17CF4
	121 Move X0, 0x7DE000
	122 Move X0, [X0+3872]
	123 Call 0x1C17CF4
	124 Move X0, 0x782000
	125 Move X0, [X0+1432]
	126 Call 0x1C17CF4
	127 Move X0, 0x7DE000
	128 Move X0, [X0+3920]
	129 Call 0x1C17CF4
	130 Move X0, 0x7DE000
	131 Move X0, [X0+3928]
	132 Call 0x1C17CF4
	133 Move X0, 0x7DE000
	134 Move X0, [X0+3936]
	135 Call 0x1C17CF4
	136 Move X0, 0x7DE000
	137 Move X0, [X0+3904]
	138 Call 0x1C17CF4
	139 Move X0, 0x7DE000
	140 Move X0, [X0+3944]
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X19+2551], W8
	144 Compare X24, 0
	145 JumpIfEqual {1174}
	146 Move X0, X24
	147 Move X1, X31
	148 Call Component.get_gameObject, X0
	149 Compare X0, 0
	150 JumpIfEqual {1174}
	151 Move X8, 0x784000
	152 Move X8, [X8+360]
	153 Move X22, 0x782000
	154 Move X1, [X8]
	155 Move X22, [X22+1432]
	156 Call 0x21E62E4, X0
	157 Move X8, [X22]
	158 Move X19, X0
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X0, X19
	165 Move X1, X31
	166 Move X2, X31
	167 Call Object.op_Equality, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {192}
	172 Compare X19, 0
	173 JumpIfEqual {1174}
	174 Move X0, X19
	175 Move X1, X31
	176 Call MeshFilter.get_sharedMesh, X0
	177 Move X8, [X22]
	178 Move X20, X0
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X0, X20
	185 Move X1, X31
	186 Move X2, X31
	187 Call Object.op_Equality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {213}
	192 Move X19, 0x7DE000
	193 Move X20, 0x7DC000
	194 Move X19, [X19+3944]
	195 Move X20, [X20+2768]
	196 Move X0, X24
	197 Move X1, X31
	198 Call Object.get_name, X0
	199 Move X1, [X19]
	200 Move X2, X31
	201 Call String.Concat, X0, X1
	202 Move X8, [X20]
	203 Move X19, X0
	204 Move W9, [X8+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {209}
	207 Move X0, X8
	208 Call 0x1C17DFC
	209 Move X0, X19
	210 Move X1, X31
	211 Call Log.Error, X0
	212 Move W0, W31
	213 Move X0, X19
	214 Move X1, X31
	215 Call MeshFilter.get_sharedMesh, X0
	216 Compare X0, 0
	217 JumpIfEqual {1174}
	218 Move X1, X31
	219 Move X26, X0
	220 Call Mesh.get_vertexCount, X0
	221 Move W27, W0
	222 Move X0, X24
	223 Move X1, X31
	224 Call Component.get_gameObject, X0
	225 Move X23, 0x7DE000
	226 Move X23, [X23+3904]
	227 Move X19, X0
	228 Move X8, [X23]
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X8, [X23]
	235 Move X9, [X8+184]
	236 Move X20, [X9+32]
	237 Compare X20, 0
	238 JumpIfNotEqual {261}
	239 Move W9, [X8+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X8
	243 Call 0x1C17DFC
	244 Move X8, [X23]
	245 Move X9, 0x7DE000
	246 Move X8, [X8+184]
	247 Move X9, [X9+3832]
	248 Move X21, [X8]
	249 Move X0, [X9]
	250 Call 0x1C17F10
	251 Move X8, 0x7DE000
	252 Move X8, [X8+3920]
	253 Move X1, X21
	254 Move X3, X31
	255 Move X20, X0
	256 Move X2, [X8]
	257 Call Func`2<Object, Object>..ctor, X0, X1, X2
	258 Move X8, [X23]
	259 Move X8, [X8+184]
	260 Move [X8+32], X20
	261 Move X8, 0x7DE000
	262 Move X8, [X8+3872]
	263 Move X0, X19
	264 Move X1, X20
	265 Move X2, [X8]
	266 Call 0x221C348, X0, X1
	267 Move X28, X0
	268 Move X0, X24
	269 Move X1, X31
	270 Call Component.get_gameObject, X0
	271 Move X8, [X23]
	272 Move X19, X0
	273 Move W9, [X8+224]
	274 Compare W9, 0
	275 JumpIfNotEqual {279}
	276 Move X0, X8
	277 Call 0x1C17DFC
	278 Move X8, [X23]
	279 Move X9, [X8+184]
	280 Move X20, [X9+40]
	281 Compare X20, 0
	282 JumpIfNotEqual {305}
	283 Move W9, [X8+224]
	284 Compare W9, 0
	285 JumpIfNotEqual {289}
	286 Move X0, X8
	287 Call 0x1C17DFC
	288 Move X8, [X23]
	289 Move X9, 0x7DE000
	290 Move X8, [X8+184]
	291 Move X9, [X9+3824]
	292 Move X21, [X8]
	293 Move X0, [X9]
	294 Call 0x1C17F10
	295 Move X8, 0x7DE000
	296 Move X8, [X8+3928]
	297 Move X1, X21
	298 Move X3, X31
	299 Move X20, X0
	300 Move X2, [X8]
	301 Call Func`2<Object, Object>..ctor, X0, X1, X2
	302 Move X8, [X23]
	303 Move X8, [X8+184]
	304 Move [X8+40], X20
	305 Move X8, 0x7DE000
	306 Move X8, [X8+3856]
	307 Move X0, X19
	308 Move X1, X20
	309 Move X2, [X8]
	310 Call 0x221C348, X0, X1
	311 Move [X31+80], X0
	312 Move X0, X24
	313 Move X1, X31
	314 Call Component.get_gameObject, X0
	315 Move X8, [X23]
	316 Move X19, X0
	317 Move W9, [X8+224]
	318 Compare W9, 0
	319 JumpIfNotEqual {323}
	320 Move X0, X8
	321 Call 0x1C17DFC
	322 Move X8, [X23]
	323 Move X9, [X8+184]
	324 Move X20, [X9+48]
	325 Compare X20, 0
	326 JumpIfNotEqual {349}
	327 Move W9, [X8+224]
	328 Compare W9, 0
	329 JumpIfNotEqual {333}
	330 Move X0, X8
	331 Call 0x1C17DFC
	332 Move X8, [X23]
	333 Move X9, 0x7DE000
	334 Move X8, [X8+184]
	335 Move X9, [X9+3840]
	336 Move X21, [X8]
	337 Move X0, [X9]
	338 Call 0x1C17F10
	339 Move X8, 0x7DE000
	340 Move X8, [X8+3936]
	341 Move X1, X21
	342 Move X3, X31
	343 Move X20, X0
	344 Move X2, [X8]
	345 Call Func`2<Object, Object>..ctor, X0, X1, X2
	346 Move X8, [X23]
	347 Move X8, [X8+184]
	348 Move [X8+48], X20
	349 Move X8, 0x7DE000
	350 Move X8, [X8+3864]
	351 Move X0, X19
	352 Move X1, X20
	353 Move X2, [X8]
	354 Call 0x221C348, X0, X1
	355 Move [X31+72], X0
	356 Move TEMP, X25
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {405}
	360 Move X0, X26
	361 Move X1, X31
	362 Call Mesh.get_vertices, X0
	363 Move X8, 0x786000
	364 Move X8, [X8+960]
	365 Move X19, X0
	366 Move X8, [X8]
	367 Move X0, X8
	368 Call 0x1C17F10
	369 Move X8, 0x7DE000
	370 Move X8, [X8+416]
	371 Move X1, X19
	372 Move [X31+104], X0
	373 Move X2, [X8]
	374 Call List`1<Vector3>..ctor, X0, X1
	375 Move X0, X26
	376 Move X1, X31
	377 Call Mesh.get_colors, X0
	378 Move X8, 0x7DC000
	379 Move X8, [X8+3072]
	380 Move X19, X0
	381 Move X8, [X8]
	382 Move X0, X8
	383 Call 0x1C17F10
	384 Move X8, 0x7DE000
	385 Move X8, [X8+408]
	386 Move X1, X19
	387 Move [X31+96], X0
	388 Move X2, [X8]
	389 Call List`1<Color>..ctor, X0, X1
	390 Move X0, X26
	391 Move X1, X31
	392 Call Mesh.get_uv, X0
	393 Move X8, 0x7DD000
	394 Move X8, [X8+1816]
	395 Move X19, X0
	396 Move X8, [X8]
	397 Move X0, X8
	398 Call 0x1C17F10
	399 Move X8, 0x7DE000
	400 Move X8, [X8+400]
	401 Move X1, X19
	402 Move [X31+88], X0
	403 Move X2, [X8]
	404 Call List`1<Vector2>..ctor, X0, X1
	405 Move X8, 0x786000
	406 Move X8, [X8+960]
	407 Move X0, [X8]
	408 Call 0x1C17F10
	409 Move X8, 0x7AE000
	410 Move X8, [X8+1464]
	411 Move [X31+104], X0
	412 Move X1, [X8]
	413 Call List`1<Vector3>..ctor, X0
	414 Move X8, 0x7DC000
	415 Move X8, [X8+3072]
	416 Move X0, [X8]
	417 Call 0x1C17F10
	418 Move X8, 0x7DC000
	419 Move X8, [X8+3080]
	420 Move [X31+96], X0
	421 Move X1, [X8]
	422 Call List`1<Color>..ctor, X0
	423 Move X8, 0x7DD000
	424 Move X8, [X8+1816]
	425 Move X0, [X8]
	426 Call 0x1C17F10
	427 Move X8, 0x7DE000
	428 Move X8, [X8+3848]
	429 Move [X31+88], X0
	430 Move X1, [X8]
	431 Call List`1<Vector2>..ctor, X0
	432 Move X8, 0x7DC000
	433 Move X8, [X8+3568]
	434 Move X0, [X8]
	435 Call 0x1C17F10
	436 Move X8, 0x7DD000
	437 Move X8, [X8+2616]
	438 Move X29, X0
	439 Move X1, [X8]
	440 Call List`1<Object>..ctor, X0
	441 Move X0, X24
	442 Move X1, X31
	443 Call Component.get_gameObject, X0
	444 Compare X0, 0
	445 JumpIfEqual {1174}
	446 Move X8, 0x789000
	447 Move X8, [X8+1920]
	448 Move X1, [X8]
	449 Call 0x21E62E4, X0
	450 Move X8, [X22]
	451 Move X19, X0
	452 Move W9, [X8+224]
	453 Compare W9, 0
	454 JumpIfNotEqual {457}
	455 Move X0, X8
	456 Call 0x1C17DFC
	457 Move X0, X19
	458 Move X1, X31
	459 Move X2, X31
	460 Call Object.op_Equality, X0, X1
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfNotEqual {475}
	465 Move X0, X24
	466 Move X1, X31
	467 Call Component.get_gameObject, X0
	468 Compare X0, 0
	469 JumpIfEqual {1174}
	470 Move X8, 0x789000
	471 Move X8, [X8+1784]
	472 Move X1, [X8]
	473 Call 0x21E61FC, X0
	474 Move X19, X0
	475 Compare X19, 0
	476 JumpIfEqual {1174}
	477 Move X0, X19
	478 Move X1, X31
	479 Move [X31+24], X24
	480 Call Renderer.get_sharedMaterials, X0
	481 Compare X0, 0
	482 JumpIfEqual {1174}
	483 Move X19, [X0+24]
	484 Move X0, X26
	485 Move X1, X31
	486 Call Mesh.get_subMeshCount, X0
	487 NotImplemented "Instruction CMP not yet implemented."
	488 And W9, W25, 1
	489 Subtract W8, W19, 1
	490 Move [X31+60], W9
	491 Move [X31+64], W8
	492 Move X22, 0x7DD000
	493 Move X19, 0x7C4000
	494 Move X22, [X22+3144]
	495 Move X19, [X19+1456]
	496 Move W20, W31
	497 Move [X31+44], W25
	498 Move [X31+32], X26
	499 Move [X31+56], W27
	500 Move [X31+48], X28
	501 Move X0, X26
	502 Move W1, W20
	503 Move X2, X31
	504 Move [X31+68], W20
	505 Call Mesh.GetTriangles, X0, X1
	506 Compare X0, 0
	507 JumpIfEqual {1174}
	508 Move W8, [X0+24]
	509 Move X20, X0
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move W26, W31
	512 Move TEMP, X25
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {659}
	516 Compare X29, 0
	517 JumpIfEqual {1174}
	518 Move W10, [X29+24]
	519 Move X8, W26
	520 Add X9, X20, 32
	521 Add X28, X8, 1
	522 Add W24, W26, 2
	523 Add X27, X9, W26
	524 Add X25, X9, X28
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Add X23, X9, W24
	527 Move W21, W31
	528 Move X2, [X22]
	529 Move X0, X29
	530 Move W1, W21
	531 Call List`1<Object>.get_Item, X0, X1
	532 Compare X0, 0
	533 JumpIfEqual {1174}
	534 Move X1, X31
	535 Call Face.get_distinctIndexesInternal, X0
	536 Move W8, [X20+24]
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move W1, [X27]
	539 Move X2, [X19]
	540 Call Enumerable.Contains, X0, X1
	541 Move TEMP, X0
	542 And TEMP, TEMP, 1
	543 Compare TEMP, 1
	544 JumpIfEqual {585}
	545 Move X2, [X22]
	546 Move X0, X29
	547 Move W1, W21
	548 Call List`1<Object>.get_Item, X0, X1
	549 Compare X0, 0
	550 JumpIfEqual {1174}
	551 Move X1, X31
	552 Call Face.get_distinctIndexesInternal, X0
	553 Move W8, [X20+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move W1, [X25]
	556 Move X2, [X19]
	557 Call Enumerable.Contains, X0, X1
	558 Move TEMP, X0
	559 And TEMP, TEMP, 1
	560 Compare TEMP, 1
	561 JumpIfEqual {585}
	562 Move X2, [X22]
	563 Move X0, X29
	564 Move W1, W21
	565 Call List`1<Object>.get_Item, X0, X1
	566 Compare X0, 0
	567 JumpIfEqual {1174}
	568 Move X1, X31
	569 Call Face.get_distinctIndexesInternal, X0
	570 Move W8, [X20+24]
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move W1, [X23]
	573 Move X2, [X19]
	574 Call Enumerable.Contains, X0, X1
	575 Move TEMP, X0
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfEqual {585}
	579 Move W8, [X29+24]
	580 Add W21, W21, 1
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move TEMP, 0
	583 Not TEMP
	584 Move W21, TEMP
	585 Move W9, [X31+60]
	586 NotImplemented "Instruction ORN not yet implemented."
	587 And W31, W9, W8
	588 Move X2, [X22]
	589 Move X0, X29
	590 Move W1, W21
	591 Call List`1<Object>.get_Item, X0, X1
	592 Compare X0, 0
	593 JumpIfEqual {1174}
	594 Move X8, [X0+16]
	595 Compare X8, 0
	596 JumpIfEqual {1174}
	597 Move X19, [X8+24]
	598 Move X8, 0x783000
	599 Move X8, [X8+3672]
	600 Add W1, W19, 3
	601 Move X0, [X8]
	602 Call 0x1C17D6C
	603 Move X2, [X22]
	604 Move X22, X0
	605 Move X0, X29
	606 Move W1, W21
	607 Call List`1<Object>.get_Item, X0, X1
	608 Compare X0, 0
	609 JumpIfEqual {1174}
	610 Move X0, [X0+16]
	611 Move W1, W31
	612 Move X2, X22
	613 Move W3, W31
	614 Move W4, W19
	615 Move X5, X31
	616 Call Array.Copy, X0, X1, X2, X3, X4
	617 Move W8, [X20+24]
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Compare X22, 0
	620 JumpIfEqual {1174}
	621 Move W9, [X22+24]
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Move W10, [X27]
	624 Move X11, X19
	625 ShiftRight X11, 32
	626 And X11, X11, 0x7FFFFFFF
	627 Add X11, X22, X11
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move [X11+32], W10
	630 Move W27, [X31+56]
	631 Move X28, [X31+48]
	632 Add W10, W19, 1
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Move W11, [X25]
	635 Add X10, X22, W10
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move [X10+32], W11
	638 Move W25, [X31+44]
	639 Add W8, W19, 2
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move W9, [X23]
	642 Add X8, X22, W8
	643 Move X0, X29
	644 Move W1, W21
	645 Move [X8+32], W9
	646 Move X8, 0x7DD000
	647 Move X8, [X8+3144]
	648 Move X2, [X8]
	649 Call List`1<Object>.get_Item, X0, X1
	650 Move X19, 0x7C4000
	651 Move X19, [X19+1456]
	652 Compare X0, 0
	653 JumpIfEqual {1174}
	654 Move X1, X22
	655 Move X2, X31
	656 Call Face.set_indexesInternal, X0, X1
	657 Move X22, 0x7DD000
	658 Move X22, [X22+3144]
	659 Move X0, [X31+104]
	660 NotImplemented "Instruction CMP not yet implemented."
	661 Move W12, 12
	662 Add X21, X20, W26
	663 NotImplemented "Instruction LDRSW not yet implemented."
	664 Compare X28, 0
	665 JumpIfEqual {1174}
	666 Move W9, [X28+24]
	667 NotImplemented "Instruction CMP not yet implemented."
	668 Compare X0, 0
	669 JumpIfEqual {1174}
	670 NotImplemented "Instruction MADD not yet implemented."
	671 Move X9, 0x786000
	672 Move W10, [X0+28]
	673 Move S0, [X8+32]
	674 Move S1, [X8+36]
	675 Move V2, [X8+40]
	676 Move X8, [X0+16]
	677 Move X9, [X9+952]
	678 Add W10, W10, 1
	679 Move X9, [X9]
	680 Move [X0+28], W10
	681 Compare X8, 0
	682 JumpIfEqual {1174}
	683 NotImplemented "Instruction LDRSW not yet implemented."
	684 Move W11, [X8+24]
	685 NotImplemented "Instruction CMP not yet implemented."
	686 Add W9, W10, 1
	687 NotImplemented "Instruction MADD not yet implemented."
	688 Move [X0+24], W9
	689 Move [X8+32], S0
	690 Move [X8+40], S1
	691 Move [X8+40], S2
	692 Move X8, [X9+32]
	693 Move X0, [X31+104]
	694 Move X8, [X8+192]
	695 Move X1, [X8+112]
	696 Call List`1<Vector3>.AddWithResize, X0, X1
	697 Move X0, [X31+104]
	698 Move W12, 12
	699 Move W8, [X20+24]
	700 Add W19, W26, 1
	701 NotImplemented "Instruction CMP not yet implemented."
	702 Add X23, X20, W19
	703 NotImplemented "Instruction LDRSW not yet implemented."
	704 Move W9, [X28+24]
	705 NotImplemented "Instruction CMP not yet implemented."
	706 NotImplemented "Instruction MADD not yet implemented."
	707 Move X10, 0x786000
	708 Move W9, [X0+28]
	709 Move S0, [X8+32]
	710 Move S1, [X8+36]
	711 Move V2, [X8+40]
	712 Move X8, [X0+16]
	713 Move X10, [X10+952]
	714 Add W9, W9, 1
	715 Move X10, [X10]
	716 Move [X0+28], W9
	717 Compare X8, 0
	718 JumpIfEqual {1174}
	719 NotImplemented "Instruction LDRSW not yet implemented."
	720 Move W11, [X8+24]
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Add W10, W9, 1
	723 NotImplemented "Instruction MADD not yet implemented."
	724 Move [X0+24], W10
	725 Move [X8+32], S0
	726 Move [X8+40], S1
	727 Move [X8+40], S2
	728 Move X8, [X10+32]
	729 Move X0, [X31+104]
	730 Move X8, [X8+192]
	731 Move X1, [X8+112]
	732 Call List`1<Vector3>.AddWithResize, X0, X1
	733 Move X0, [X31+104]
	734 Move W12, 12
	735 Move W8, [X20+24]
	736 Add W22, W26, 2
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Add X24, X20, W22
	739 NotImplemented "Instruction LDRSW not yet implemented."
	740 Move W9, [X28+24]
	741 NotImplemented "Instruction CMP not yet implemented."
	742 NotImplemented "Instruction MADD not yet implemented."
	743 Move X10, 0x786000
	744 Move W9, [X0+28]
	745 Move S0, [X8+32]
	746 Move S1, [X8+36]
	747 Move V2, [X8+40]
	748 Move X8, [X0+16]
	749 Move X10, [X10+952]
	750 Add W9, W9, 1
	751 Move X10, [X10]
	752 Move [X0+28], W9
	753 Compare X8, 0
	754 JumpIfEqual {1174}
	755 NotImplemented "Instruction LDRSW not yet implemented."
	756 Move W11, [X8+24]
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Add W10, W9, 1
	759 NotImplemented "Instruction MADD not yet implemented."
	760 Move [X0+24], W10
	761 Move [X8+32], S0
	762 Move [X8+40], S1
	763 Move [X8+40], S2
	764 Move X8, [X10+32]
	765 Move X8, [X8+192]
	766 Move X1, [X8+112]
	767 Call List`1<Vector3>.AddWithResize, X0, X1
	768 Move X12, [X31+80]
	769 Move X0, [X31+96]
	770 Compare X12, 0
	771 JumpIfEqual {783}
	772 Move W8, [X12+24]
	773 NotImplemented "Instruction CMP not yet implemented."
	774 Move W8, [X20+24]
	775 NotImplemented "Instruction CMP not yet implemented."
	776 NotImplemented "Instruction LDRSW not yet implemented."
	777 NotImplemented "Instruction CMP not yet implemented."
	778 Add X8, X12, X8
	779 Move S0, [X8+32]
	780 Move S1, [X8+36]
	781 Move S2, [X8+40]
	782 Move S3, [X8+44]
	783 Move S0, 1
	784 Move S1, 1
	785 Move S2, 1
	786 Move S3, 1
	787 Compare X0, 0
	788 JumpIfEqual {1174}
	789 Move X8, 0x7DC000
	790 Move W10, [X0+28]
	791 Move X9, [X0+16]
	792 Move X8, [X8+3088]
	793 Add W10, W10, 1
	794 Move X8, [X8]
	795 Move [X0+28], W10
	796 Compare X9, 0
	797 JumpIfEqual {1174}
	798 NotImplemented "Instruction LDRSW not yet implemented."
	799 Move W11, [X9+24]
	800 NotImplemented "Instruction CMP not yet implemented."
	801 Add W8, W10, 1
	802 Add X9, X9, X10
	803 Move [X0+24], W8
	804 Move [X9+32], S0
	805 Move [X9+40], S1
	806 Move [X9+40], S2
	807 Move [X9+48], S3
	808 Compare X12, 0
	809 JumpIfNotEqual {819}
	810 Move X8, [X8+32]
	811 Move X0, [X31+96]
	812 Move X8, [X8+192]
	813 Move X1, [X8+112]
	814 Call List`1<Color>.AddWithResize, X0, X1
	815 Move X0, [X31+96]
	816 Move X12, [X31+80]
	817 Compare X12, 0
	818 JumpIfEqual {830}
	819 Move W8, [X12+24]
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Move W8, [X20+24]
	822 NotImplemented "Instruction CMP not yet implemented."
	823 NotImplemented "Instruction LDRSW not yet implemented."
	824 NotImplemented "Instruction CMP not yet implemented."
	825 Add X8, X12, X8
	826 Move S0, [X8+32]
	827 Move S1, [X8+36]
	828 Move S2, [X8+40]
	829 Move S3, [X8+44]
	830 Move S0, 1
	831 Move S1, 1
	832 Move S2, 1
	833 Move S3, 1
	834 Compare X0, 0
	835 JumpIfEqual {1174}
	836 Move X8, 0x7DC000
	837 Move W10, [X0+28]
	838 Move X9, [X0+16]
	839 Move X8, [X8+3088]
	840 Add W10, W10, 1
	841 Move X8, [X8]
	842 Move [X0+28], W10
	843 Compare X9, 0
	844 JumpIfEqual {1174}
	845 NotImplemented "Instruction LDRSW not yet implemented."
	846 Move W11, [X9+24]
	847 NotImplemented "Instruction CMP not yet implemented."
	848 Add W8, W10, 1
	849 Add X9, X9, X10
	850 Move [X0+24], W8
	851 Move [X9+32], S0
	852 Move [X9+40], S1
	853 Move [X9+40], S2
	854 Move [X9+48], S3
	855 Compare X12, 0
	856 JumpIfNotEqual {866}
	857 Move X8, [X8+32]
	858 Move X0, [X31+96]
	859 Move X8, [X8+192]
	860 Move X1, [X8+112]
	861 Call List`1<Color>.AddWithResize, X0, X1
	862 Move X0, [X31+96]
	863 Move X12, [X31+80]
	864 Compare X12, 0
	865 JumpIfEqual {877}
	866 Move W8, [X12+24]
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move W8, [X20+24]
	869 NotImplemented "Instruction CMP not yet implemented."
	870 NotImplemented "Instruction LDRSW not yet implemented."
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Add X8, X12, X8
	873 Move S0, [X8+32]
	874 Move S1, [X8+36]
	875 Move S2, [X8+40]
	876 Move S3, [X8+44]
	877 Move S0, 1
	878 Move S1, 1
	879 Move S2, 1
	880 Move S3, 1
	881 Compare X0, 0
	882 JumpIfEqual {1174}
	883 Move X8, 0x7DC000
	884 Move W10, [X0+28]
	885 Move X9, [X0+16]
	886 Move X8, [X8+3088]
	887 Add W10, W10, 1
	888 Move X8, [X8]
	889 Move [X0+28], W10
	890 Compare X9, 0
	891 JumpIfEqual {1174}
	892 NotImplemented "Instruction LDRSW not yet implemented."
	893 Move W11, [X9+24]
	894 NotImplemented "Instruction CMP not yet implemented."
	895 Add W8, W10, 1
	896 Add X9, X9, X10
	897 Move [X0+24], W8
	898 Move [X9+32], S0
	899 Move [X9+40], S1
	900 Move [X9+40], S2
	901 Move [X9+48], S3
	902 Move X8, [X8+32]
	903 Move X8, [X8+192]
	904 Move X1, [X8+112]
	905 Call List`1<Color>.AddWithResize, X0, X1
	906 Move W8, [X20+24]
	907 Move X12, [X31+72]
	908 Move X0, [X31+88]
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Compare X12, 0
	911 JumpIfEqual {1174}
	912 NotImplemented "Instruction LDRSW not yet implemented."
	913 Move W9, [X12+24]
	914 NotImplemented "Instruction CMP not yet implemented."
	915 Compare X0, 0
	916 JumpIfEqual {1174}
	917 Add X8, X12, X8
	918 Move X9, 0x7DD000
	919 Move W10, [X0+28]
	920 Move S0, [X8+32]
	921 Move S1, [X8+36]
	922 Move X8, [X0+16]
	923 Move X9, [X9+1824]
	924 Add W10, W10, 1
	925 Move X9, [X9]
	926 Move [X0+28], W10
	927 Compare X8, 0
	928 JumpIfEqual {1174}
	929 NotImplemented "Instruction LDRSW not yet implemented."
	930 Move W11, [X8+24]
	931 NotImplemented "Instruction CMP not yet implemented."
	932 Add W9, W10, 1
	933 Add X8, X8, X10
	934 Move [X0+24], W9
	935 Move [X8+32], S0
	936 Move [X8+40], S1
	937 Move X8, [X9+32]
	938 Move X8, [X8+192]
	939 Move X1, [X8+112]
	940 Call List`1<Vector2>.AddWithResize, X0, X1
	941 Move X0, [X31+88]
	942 Move X12, [X31+72]
	943 Move W8, [X20+24]
	944 NotImplemented "Instruction CMP not yet implemented."
	945 NotImplemented "Instruction LDRSW not yet implemented."
	946 Move W9, [X12+24]
	947 NotImplemented "Instruction CMP not yet implemented."
	948 Add X8, X12, X8
	949 Move X9, 0x7DC000
	950 Move W10, [X0+28]
	951 Move S0, [X8+32]
	952 Move S1, [X8+36]
	953 Move X8, [X0+16]
	954 Move X9, [X9+1824]
	955 Add W10, W10, 1
	956 Move X9, [X9]
	957 Move [X0+28], W10
	958 Compare X8, 0
	959 JumpIfEqual {1174}
	960 NotImplemented "Instruction LDRSW not yet implemented."
	961 Move W11, [X8+24]
	962 NotImplemented "Instruction CMP not yet implemented."
	963 Add W9, W10, 1
	964 Add X8, X8, X10
	965 Move [X0+24], W9
	966 Move [X8+32], S0
	967 Move [X8+40], S1
	968 Move X8, [X9+32]
	969 Move X8, [X8+192]
	970 Move X1, [X8+112]
	971 Call List`1<Vector2>.AddWithResize, X0, X1
	972 Move X0, [X31+88]
	973 Move X12, [X31+72]
	974 Move W8, [X20+24]
	975 NotImplemented "Instruction CMP not yet implemented."
	976 NotImplemented "Instruction LDRSW not yet implemented."
	977 Move W9, [X12+24]
	978 NotImplemented "Instruction CMP not yet implemented."
	979 Add X8, X12, X8
	980 Move X9, 0x7DC000
	981 Move W10, [X0+28]
	982 Move S0, [X8+32]
	983 Move S1, [X8+36]
	984 Move X8, [X0+16]
	985 Move X9, [X9+1824]
	986 Add W10, W10, 1
	987 Move X9, [X9]
	988 Move [X0+28], W10
	989 Compare X8, 0
	990 JumpIfEqual {1174}
	991 NotImplemented "Instruction LDRSW not yet implemented."
	992 Move W11, [X8+24]
	993 NotImplemented "Instruction CMP not yet implemented."
	994 Add W9, W10, 1
	995 Add X8, X8, X10
	996 Move [X0+24], W9
	997 Move [X8+32], S0
	998 Move [X8+40], S1
	999 Move X8, [X9+32]
	1000 Move X8, [X8+192]
	1001 Move X1, [X8+112]
	1002 Call List`1<Vector2>.AddWithResize, X0, X1
	1003 Move X8, 0x782000
	1004 Move X8, [X8+3672]
	1005 Move W1, 3
	1006 Move X0, [X8]
	1007 Call 0x1C17D6C
	1008 Compare X0, 0
	1009 JumpIfEqual {1174}
	1010 Move W8, [X0+24]
	1011 Move X21, X0
	1012 Compare W8, 0
	1013 JumpIfEqual {1175}
	1014 NotImplemented "Instruction CMP not yet implemented."
	1015 Move [X21+32], W26
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 Move [X21+36], W19
	1018 Move X8, 0x782000
	1019 Move X8, [X8+3672]
	1020 Move W1, 3
	1021 Move X0, [X8]
	1022 Call 0x1C17D6C
	1023 Move W8, [X20+24]
	1024 NotImplemented "Instruction CMP not yet implemented."
	1025 Move X21, X0
	1026 Compare X0, 0
	1027 JumpIfEqual {1174}
	1028 Move W9, [X21+24]
	1029 Compare W9, 0
	1030 JumpIfEqual {1175}
	1031 Move W10, [X27]
	1032 NotImplemented "Instruction CMP not yet implemented."
	1033 Move [X21+32], W10
	1034 Move W27, [X31+56]
	1035 Move X28, [X31+48]
	1036 NotImplemented "Instruction CMP not yet implemented."
	1037 Move W10, [X25]
	1038 NotImplemented "Instruction CMP not yet implemented."
	1039 Move [X21+36], W10
	1040 Move W25, [X31+44]
	1041 NotImplemented "Instruction CMP not yet implemented."
	1042 Move W22, [X23]
	1043 Move W2, [X31+64]
	1044 Move W0, [X31+68]
	1045 Move W1, W31
	1046 Move X3, X31
	1047 Move [X21+40], W22
	1048 Call Math.Clamp, X0, X1, X2
	1049 Move W22, W0
	1050 Add X8, X31, 144
	1051 Move X0, X31
	1052 Call AutoUnwrapSettings.get_tile
	1053 Move X8, 0x7DC000
	1054 Move V0, [X31+144]
	1055 Move V1, [X31+160]
	1056 Move X8, [X8+1376]
	1057 Move [X31+176], V0
	1058 Move [X31+184], V1
	1059 Move X0, [X8]
	1060 Call 0x1C17F10
	1061 Move V0, [X31+176]
	1062 Move V1, [X31+192]
	1063 Add X3, X31, 112
	1064 Move TEMP, 0
	1065 Not TEMP
	1066 Move W5, TEMP
	1067 Move TEMP, 0
	1068 Not TEMP
	1069 Move W6, TEMP
	1070 Move W7, 1
	1071 Move X1, X21
	1072 Move W2, W22
	1073 Move W4, W31
	1074 Move X19, X0
	1075 Move [X31+112], V0
	1076 Move [X31+120], V1
	1077 Move [X31], X31
	1078 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	1079 Compare X29, 0
	1080 JumpIfEqual {1174}
	1081 Move W10, [X29+28]
	1082 Move X9, 0x7DB000
	1083 Move X8, [X29+16]
	1084 Move X9, [X9+3600]
	1085 Add W10, W10, 1
	1086 Move X22, 0x7DC000
	1087 Move X9, [X9]
	1088 Move [X29+28], W10
	1089 Move X22, [X22+3144]
	1090 Compare X8, 0
	1091 JumpIfEqual {1174}
	1092 NotImplemented "Instruction LDRSW not yet implemented."
	1093 Move W11, [X8+24]
	1094 NotImplemented "Instruction CMP not yet implemented."
	1095 Add W9, W10, 1
	1096 Add X8, X8, X10
	1097 Move [X29+24], W9
	1098 Move [X8+32], X19
	1099 Move X8, [X9+32]
	1100 Move X0, X29
	1101 Move X1, X19
	1102 Move X8, [X8+192]
	1103 Move X2, [X8+112]
	1104 Call List`1<Object>.AddWithResize, X0, X1
	1105 Move X19, 0x7C3000
	1106 Move X19, [X19+1456]
	1107 Move W8, [X20+24]
	1108 Add W26, W26, 3
	1109 NotImplemented "Instruction CMP not yet implemented."
	1110 Move X26, [X31+32]
	1111 Move W20, [X31+68]
	1112 Move X1, X31
	1113 Move X0, X26
	1114 Add W20, W20, 1
	1115 Call Mesh.get_subMeshCount, X0
	1116 NotImplemented "Instruction CMP not yet implemented."
	1117 Move X0, [X31+104]
	1118 Compare X0, 0
	1119 JumpIfEqual {1174}
	1120 Move X19, 0x7AD000
	1121 Move X19, [X19+1456]
	1122 Move X1, [X19]
	1123 Call List`1<Vector3>.ToArray, X0
	1124 Move X20, [X31+24]
	1125 Move [X20+88], X0
	1126 Move X0, [X31+88]
	1127 Compare X0, 0
	1128 JumpIfEqual {1174}
	1129 Move X8, 0x7AE000
	1130 Move X8, [X8+1808]
	1131 Move X1, [X8]
	1132 Call List`1<Vector2>.ToArray, X0
	1133 Move [X20+96], X0
	1134 Compare X29, 0
	1135 JumpIfEqual {1174}
	1136 Move X8, 0x7DC000
	1137 Move X8, [X8+3128]
	1138 Move X0, X29
	1139 Move X1, [X8]
	1140 Call List`1<Object>.ToArray, X0
	1141 Move [X20+40], X0
	1142 Move X1, [X19]
	1143 Move X0, [X31+104]
	1144 Call List`1<Vector3>.ToArray, X0
	1145 Move X1, X31
	1146 Call SharedVertex.GetSharedVerticesWithPositions, X0
	1147 Move X1, X0
	1148 Move X0, X20
	1149 Move X2, X31
	1150 Call ProBuilderMesh.set_sharedVerticesInternal, X0, X1
	1151 Move X0, [X31+96]
	1152 Compare X0, 0
	1153 JumpIfEqual {1174}
	1154 Move X8, 0x7AE000
	1155 Move X8, [X8+1728]
	1156 Move X1, [X8]
	1157 Call List`1<Color>.ToArray, X0
	1158 Move [X20+136], X0
	1159 Move W0, 1
	1160 Move X20, [X31+288]
	1161 Move X19, [X31+296]
	1162 Move X22, [X31+272]
	1163 Move X21, [X31+280]
	1164 Move X24, [X31+256]
	1165 Move X23, [X31+264]
	1166 Move X26, [X31+240]
	1167 Move X25, [X31+248]
	1168 Move X28, [X31+224]
	1169 Move X27, [X31+232]
	1170 Move X29, [X31+208]
	1171 Move X30, [X31+216]
	1172 Add X31, X31, 304
	1173 Return X0
	1174 Call 0x1C17F20
	1175 Call 0x1C17F28

Method: System.Void FilterUnusedSubmeshIndexes(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03973374 LDR X19, [X31 + 0x8]
	0x03973378 MOV X22, X31
	0x0397337C CBZ X20, 0x39733E0
	0x03973380 LDR X8, [X20]
	0x03973384 ADRP X10, 0x780000
	0x03973388 LDRH W9, [X8 + 0x12E]
	0x0397338C LDR X10, [X10 + 0xE00]
	0x03973390 LDR X1, [X10]
	0x03973394 CBZ X9, 0x39733B8
	0x03973398 LDR X10, [X8 + 0xB0]
	0x0397339C ADD X10, X10, 0x8
	0x039733A0 LDUR X11, [X10 - 0x8]
	0x039733A4 CMP X11, X1
	0x039733A8 B.EQ 0x39733C8
	0x039733AC SUBS X9, X9, 0x1
	0x039733B0 ADD X10, X10, 0x10
	0x039733B4 B.NE 0x39733A0
	0x039733B8 MOV X0, X20
	0x039733BC MOV W2, W31
	0x039733C0 BL 0x1C5C788
	0x039733C4 B 0x39733D4
	0x039733C8 LDRSW X9, [X10]
	0x039733CC ADD X8, X8, X9, 0x4, LSL
	0x039733D0 ADD X0, X8, 0x138
	0x039733D4 LDP X8, X1, [X0]
	0x039733D8 MOV X0, X20
	0x039733DC BLR X8
	0x039733E0 CBNZ X22, 0x3973448
	0x039733E4 MOV X0, X19
	0x039733E8 LDP X20, X19, [X31 + 0x60]
	0x039733EC LDP X22, X21, [X31 + 0x50]
	0x039733F0 LDP X24, X23, [X31 + 0x40]
	0x039733F4 LDP X26, X25, [X31 + 0x30]
	0x039733F8 LDP X28, X27, [X31 + 0x20]
	0x039733FC LDP X29, X30, [X31 + 0x10]
	0x03973400 MOV X1, X31
	0x03973404 ADD X31, X31, 0x70
	0x03973408 B 0x39738AC
	0x0397340C LDR X19, [X31 + 0x8]
	0x03973410 BL 0x1C16F20
	0x03973414 BL 0x1C16F20
	0x03973418 BL 0x1C16F28
	0x0397341C BL 0x1C16F20
	0x03973420 LDR X19, [X31 + 0x8]
	0x03973424 BL 0x1C16F28
	0x03973428 LDR X19, [X31 + 0x8]
	0x0397342C BL 0x1C16F20
	0x03973430 LDR X19, [X31 + 0x8]
	0x03973434 BL 0x1C16F28
	0x03973438 BL 0x1C16F20
	0x0397343C BL 0x1C16F20
	0x03973440 BL 0x1C16F20
	0x03973444 BL 0x1C16F20
	0x03973448 MOV X0, X22
	0x0397344C BL 0x1C16F18
	0x03973450 B 0x397348C
	0x03973454 B 0x397348C
	0x03973458 B 0x397348C
	0x0397345C B 0x397348C
	0x03973460 B 0x397348C
	0x03973464 B 0x397348C
	0x03973468 B 0x397348C
	0x0397346C B 0x3973490
	0x03973470 B 0x397348C
	0x03973474 B 0x397348C
	0x03973478 B 0x397348C
	0x0397347C B 0x3973490
	0x03973480 B 0x397348C
	0x03973484 B 0x397348C
	0x03973488 B 0x3973490
	0x0397348C LDR X19, [X31 + 0x8]
	0x03973490 MOV X21, X0
	0x03973494 CMP W1, 0x1
	0x03973498 B.NE 0x39734B0
	0x0397349C MOV X0, X21
	0x039734A0 BL 0x3EB1AD0
	0x039734A4 LDR X22, [X0]
	0x039734A8 BL 0x3EB1AE0
	0x039734AC B 0x397337C
	0x039734B0 MOV X22, X31
	0x039734B4 B 0x39734BC
	0x039734B8 MOV X21, X0
	0x039734BC CBZ X20, 0x3973520
	0x039734C0 LDR X8, [X20]
	0x039734C4 ADRP X10, 0x780000
	0x039734C8 LDRH W9, [X8 + 0x12E]
	0x039734CC LDR X10, [X10 + 0xE00]
	0x039734D0 LDR X1, [X10]
	0x039734D4 CBZ X9, 0x39734F8
	0x039734D8 LDR X10, [X8 + 0xB0]
	0x039734DC ADD X10, X10, 0x8
	0x039734E0 LDUR X11, [X10 - 0x8]
	0x039734E4 CMP X11, X1
	0x039734E8 B.EQ 0x3973508
	0x039734EC SUBS X9, X9, 0x1
	0x039734F0 ADD X10, X10, 0x10
	0x039734F4 B.NE 0x39734E0
	0x039734F8 MOV X0, X20
	0x039734FC MOV W2, W31
	0x03973500 BL 0x1C5C788
	0x03973504 B 0x3973514
	0x03973508 LDRSW X9, [X10]
	0x0397350C ADD X8, X8, X9, 0x4, LSL
	0x03973510 ADD X0, X8, 0x138
	0x03973514 LDP X8, X1, [X0]
	0x03973518 MOV X0, X20
	0x0397351C BLR X8
	0x03973520 CBNZ X22, 0x397352C
	0x03973524 MOV X0, X21
	0x03973528 BL 0x1D2C690
	0x0397352C MOV X0, X22
	0x03973530 BL 0x1C16F18
	0x03973534 BL 0x1990590
	0x03973538 SUB X31, X31, 0xB0
	0x0397353C STP X29, X30, [X31 + 0x50]
	0x03973540 STP X28, X27, [X31 + 0x60]
	0x03973544 STP X26, X25, [X31 + 0x70]
	0x03973548 STP X24, X23, [X31 + 0x80]
	0x0397354C STP X22, X21, [X31 + 0x90]
	0x03973550 STP X20, X19, [X31 + 0xA0]
	0x03973554 ADRP X21, 0xA6E000
	0x03973558 LDRB W8, [X21 + 0x9FB]
	0x0397355C MOV X20, X1
	0x03973560 MOV X19, X0
	0x03973564 TBNZ X8, 0x0, 0x3973600
	0x03973568 ADRP X0, 0x7DC000
	0x0397356C LDR X0, [X0 + 0xFC0]
	0x03973570 BL 0x1C16CF4
	0x03973574 ADRP X0, 0x7DC000
	0x03973578 LDR X0, [X0 + 0xFC8]
	0x0397357C BL 0x1C16CF4
	0x03973580 ADRP X0, 0x7DA000
	0x03973584 LDR X0, [X0 + 0xFA0]
	0x03973588 BL 0x1C16CF4
	0x0397358C ADRP X0, 0x782000
	0x03973590 LDR X0, [X0 + 0x9C8]
	0x03973594 BL 0x1C16CF4
	0x03973598 ADRP X0, 0x7DB000
	0x0397359C LDR X0, [X0 + 0x3F0]
	0x039735A0 BL 0x1C16CF4
	0x039735A4 ADRP X0, 0x7DB000
	0x039735A8 LDR X0, [X0 + 0x560]
	0x039735AC BL 0x1C16CF4
	0x039735B0 ADRP X0, 0x7DA000
	0x039735B4 LDR X0, [X0 + 0xFA8]
	0x039735B8 BL 0x1C16CF4
	0x039735BC ADRP X0, 0x7DA000
	0x039735C0 LDR X0, [X0 + 0xE28]
	0x039735C4 BL 0x1C16CF4
	0x039735C8 ADRP X0, 0x7DC000
	0x039735CC LDR X0, [X0 + 0x678]
	0x039735D0 BL 0x1C16CF4
	0x039735D4 ADRP X0, 0x7DB000
	0x039735D8 LDR X0, [X0 + 0x898]
	0x039735DC BL 0x1C16CF4
	0x039735E0 ADRP X0, 0x7DC000
	0x039735E4 LDR X0, [X0 + 0xFD0]
	0x039735E8 BL 0x1C16CF4
	0x039735EC ADRP X0, 0x7DC000
	0x039735F0 LDR X0, [X0 + 0xFD8]
	0x039735F4 BL 0x1C16CF4
	0x039735F8 MOVZ W8, 0x1
	0x039735FC STRB W8, [X21 + 0x9FB]
	0x03973600 CBZ X20, 0x3973824
	0x03973604 ADRP X8, 0x7DC000
	0x03973608 LDR X8, [X8 + 0xFC0]
	0x0397360C MOV X0, X20
	0x03973610 LDR X1, [X8]
	0x03973614 BL 0x21BD4C4
	0x03973618 CMP W0, 0x1
	0x0397361C B.LT 0x3973824
	0x03973620 ADRP X8, 0x7DC000
	0x03973624 LDR X8, [X8 + 0xFC8]
	0x03973628 MOV W22, W0
	0x0397362C MOV X0, X20
	0x03973630 LDR X1, [X8]
	0x03973634 BL 0x21C2FD4
	0x03973638 ADRP X25, 0x7DC000
	0x0397363C LDR X25, [X25 + 0xFD8]
	0x03973640 MOV X21, X0
	0x03973644 LDR X8, [X25]
	0x03973648 LDR W9, [X8 + 0xE0]
	0x0397364C CBNZ W9, 0x397365C
	0x03973650 MOV X0, X8
	0x03973654 BL 0x1C16DFC
	0x03973658 LDR X8, [X25]
	0x0397365C LDR X9, [X8 + 0xB8]
	0x03973660 LDR X23, [X9 + 0x8]
	0x03973664 CBNZ X23, 0x39736BC
	0x03973668 LDR W9, [X8 + 0xE0]
	0x0397366C CBNZ W9, 0x397367C
	0x03973670 MOV X0, X8
	0x03973674 BL 0x1C16DFC
	0x03973678 LDR X8, [X25]
	0x0397367C ADRP X9, 0x7DA000
	0x03973680 LDR X8, [X8 + 0xB8]
	0x03973684 LDR X9, [X9 + 0xFA8]
	0x03973688 LDR X24, [X8]
	0x0397368C LDR X0, [X9]
	0x03973690 BL 0x1C16F10
	0x03973694 ADRP X8, 0x7DC000
	0x03973698 LDR X8, [X8 + 0xFD0]
	0x0397369C MOV X1, X24
	0x039736A0 MOV X3, X31
	0x039736A4 MOV X23, X0
	0x039736A8 LDR X2, [X8]
	0x039736AC BL 0x2D30578
	0x039736B0 LDR X8, [X25]
	0x039736B4 LDR X8, [X8 + 0xB8]
	0x039736B8 STR X23, [X8 + 0x8]
	0x039736BC ADRP X8, 0x7DA000
	0x039736C0 LDR X8, [X8 + 0xFA0]
	0x039736C4 MOV X0, X20
	0x039736C8 MOV X1, X23
	0x039736CC LDR X2, [X8]
	0x039736D0 BL 0x21D0FD8
	0x039736D4 ADRP X8, 0x782000
	0x039736D8 LDR X8, [X8 + 0x9C8]
	0x039736DC LDR X1, [X8]
	0x039736E0 BL 0x21D54D4
	0x039736E4 CBZ X21, 0x39738A4
	0x039736E8 ADRP X8, 0x7DB000
	0x039736EC LDUR V0, [X21 + 0x2C]
	0x039736F0 LDUR V1, [X21 + 0x1C]
	0x039736F4 LDR W24, [X21 + 0x48]
	0x039736F8 LDR X8, [X8 + 0x560]
	0x039736FC MOV X23, X0
	0x03973700 STP V1, V0, [X31 + 0x30]
	0x03973704 LDR W25, [X21 + 0x18]
	0x03973708 LDR X0, [X8]
	0x0397370C LDP W27, W26, [X21 + 0x50]
	0x03973710 LDRB W28, [X21 + 0x4C]
	0x03973714 BL 0x1C16F10
	0x03973718 LDP V0, V1, [X31 + 0x30]
	0x0397371C ADD X3, X31, 0x10
	0x03973720 MOV X1, X23
	0x03973724 MOV W2, W24
	0x03973728 MOV W4, W25
	0x0397372C MOV W5, W26
	0x03973730 MOV W6, W27
	0x03973734 MOV W7, W28
	0x03973738 MOV X21, X0
	0x0397373C STP V0, V1, [X31 + 0x10]
	0x03973740 STR X31, [X31]
	0x03973744 BL 0x39004D4
	0x03973748 CBZ X19, 0x39738A4
	0x0397374C LDR X8, [X19 + 0x28]
	0x03973750 CBZ X8, 0x39738A4
	0x03973754 ADRP X24, 0x7DB000
	0x03973758 LDR W8, [X8 + 0x18]
	0x0397375C LDR X24, [X24 + 0x3F0]
	0x03973760 SUB W8, W8, W22
	0x03973764 LDR X0, [X24]
	0x03973768 ADD W1, W8, 0x1
	0x0397376C BL 0x1C16D6C
	0x03973770 ADRP X8, 0x7DB000
	0x03973774 LDR X8, [X8 + 0x898]
	0x03973778 MOV X22, X0
	0x0397377C LDR X8, [X8]
	0x03973780 MOV X0, X8
	0x03973784 BL 0x1C16F10
	0x03973788 ADRP X8, 0x7DC000
	0x0397378C LDR X8, [X8 + 0x678]
	0x03973790 MOV X1, X20
	0x03973794 MOV X23, X0
	0x03973798 LDR X2, [X8]
	0x0397379C BL 0x2DBDEEC
	0x039737A0 LDR X26, [X19 + 0x28]
	0x039737A4 CBZ X26, 0x39738A4
	0x039737A8 LDR X8, [X26 + 0x18]
	0x039737AC CMP W8, 0x1
	0x039737B0 B.LT 0x397382C
	0x039737B4 ADRP X29, 0x7DA000
	0x039737B8 LDR X29, [X29 + 0xE28]
	0x039737BC MOV W25, W31
	0x039737C0 MOV X27, X31
	0x039737C4 AND X8, X8, 0x0
	0x039737C8 ADD X28, X26, 0x20
	0x039737CC CMP X27, W8, UXTW
	0x039737D0 B.CS 0x39738A8
	0x039737D4 CBZ X23, 0x39738A4
	0x039737D8 LDR X20, [X28, X27, LSL #3]
	0x039737DC LDR X2, [X29]
	0x039737E0 MOV X0, X23
	0x039737E4 MOV X1, X20
	0x039737E8 BL 0x2DBE4B0
	0x039737EC TBNZ X0, 0x0, 0x397380C
	0x039737F0 CBZ X22, 0x39738A4
	0x039737F4 LDR W8, [X22 + 0x18]
	0x039737F8 CMP W25, W8
	0x039737FC B.CS 0x39738A8
	0x03973800 ADD X8, X22, W25, 0x3, SXTW
	0x03973804 ADD W25, W25, 0x1
	0x03973808 STR X20, [X8 + 0x20]
	0x0397380C LDR W8, [X26 + 0x18]
	0x03973810 ADD X27, X27, 0x1
	0x03973814 CMP X27, W8, SXTW
	0x03973818 B.LT 0x39737CC
	0x0397381C CBNZ X22, 0x3973834
	0x03973820 B 0x39738A4
	0x03973824 MOV X21, X31
	0x03973828 B 0x3973880
	0x0397382C MOV W25, W31
	0x03973830 CBZ X22, 0x39738A4
	0x03973834 LDR W8, [X22 + 0x18]
	0x03973838 CMP W25, W8
	0x0397383C B.CS 0x39738A8
	0x03973840 ADD X8, X22, W25, 0x3, SXTW
	0x03973844 MOV X0, X19
	0x03973848 MOV X1, X22
	0x0397384C MOV X2, X31
	0x03973850 STR X21, [X8 + 0x20]
	0x03973854 BL 0x39159C8
	0x03973858 LDR X0, [X24]
	0x0397385C MOVZ W1, 0x1
	0x03973860 BL 0x1C16D6C
	0x03973864 CBZ X0, 0x39738A4
	0x03973868 LDR W8, [X0 + 0x18]
	0x0397386C MOV X1, X0
	0x03973870 CBZ W8, 0x39738A8
	0x03973874 MOV X0, X19
	0x03973878 STR X21, [X1 + 0x20]
	0x0397387C BL 0x397305C
	0x03973880 MOV X0, X21
	0x03973884 LDP X20, X19, [X31 + 0xA0]
	0x03973888 LDP X22, X21, [X31 + 0x90]
	0x0397388C LDP X24, X23, [X31 + 0x80]
	0x03973890 LDP X26, X25, [X31 + 0x70]
	0x03973894 LDP X28, X27, [X31 + 0x60]
	0x03973898 LDP X29, X30, [X31 + 0x50]
	0x0397389C ADD X31, X31, 0xB0
	0x039738A0 RET
	0x039738A4 BL 0x1C16F20
	0x039738A8 BL 0x1C16F28
	0x039738AC STP X30, X27, [X31 - 0x50]!
	0x039738B0 STP X26, X25, [X31 + 0x10]
	0x039738B4 STP X24, X23, [X31 + 0x20]
	0x039738B8 STP X22, X21, [X31 + 0x30]
	0x039738BC STP X20, X19, [X31 + 0x40]
	0x039738C0 ADRP X21, 0xA6E000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xA6F000
	014 Move W8, [X20+2552]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x7DD000
	021 Move X0, [X0+3952]
	022 Call 0x1C17CF4
	023 Move X0, 0x7DD000
	024 Move X0, [X0+3960]
	025 Call 0x1C17CF4
	026 Move X0, 0x783000
	027 Move X0, [X0+2488]
	028 Call 0x1C17CF4
	029 Move X0, 0x7DB000
	030 Move X0, [X0+2720]
	031 Call 0x1C17CF4
	032 Move X0, 0x7DD000
	033 Move X0, [X0+3968]
	034 Call 0x1C17CF4
	035 Move X0, 0x781000
	036 Move X0, [X0+3584]
	037 Call 0x1C17CF4
	038 Move X0, 0x7A9000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0x7A9000
	042 Move X0, [X0+1984]
	043 Call 0x1C17CF4
	044 Move X0, 0x781000
	045 Move X0, [X0+3608]
	046 Call 0x1C17CF4
	047 Move X0, 0x7DD000
	048 Move X0, [X0+3976]
	049 Call 0x1C17CF4
	050 Move X0, 0x7DD000
	051 Move X0, [X0+3904]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2552], W8
	055 Compare X19, 0
	056 JumpIfEqual {328}
	057 Move X0, X19
	058 Move X1, X31
	059 Call ProBuilderMesh.get_renderer, X0
	060 Compare X0, 0
	061 JumpIfEqual {328}
	062 Move X1, X31
	063 Call Renderer.get_sharedMaterials, X0
	064 Compare X0, 0
	065 JumpIfEqual {328}
	066 Move X8, 0x783000
	067 Move X8, [X8+2488]
	068 Move W22, [X0+24]
	069 Move X20, X0
	070 Move X0, [X8]
	071 Move W1, W22
	072 Call 0x1C17D6C
	073 Move X23, [X19+40]
	074 Compare X23, 0
	075 JumpIfEqual {328}
	076 Move W8, [X23+24]
	077 Move X21, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W24, W31
	080 Subtract W22, W22, 1
	081 Move W25, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X23, W24
	084 Move X8, [X8+32]
	085 Compare X8, 0
	086 JumpIfEqual {328}
	087 Move W0, [X8+72]
	088 Move W1, W31
	089 Move W2, W22
	090 Move X3, X31
	091 Call Math.Clamp, X0, X1, X2
	092 Compare X21, 0
	093 JumpIfEqual {328}
	094 Move W8, [X21+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X8, X21, W0
	097 Move [X8+32], W25
	098 Move W8, [X23+24]
	099 Add W24, W24, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X24, 0x7DD000
	102 Move X24, [X24+3904]
	103 Move X0, [X24]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X24]
	109 Move X8, [X0+184]
	110 Move X26, 0x7DD000
	111 Move X25, 0x7DB000
	112 Move X22, [X8+56]
	113 Move X26, [X26+3952]
	114 Move X25, [X25+2720]
	115 Compare X22, 0
	116 JumpIfNotEqual {138}
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {122}
	120 Call 0x1C17DFC
	121 Move X0, [X24]
	122 Move X9, 0x7DD000
	123 Move X8, [X0+184]
	124 Move X9, [X9+3968]
	125 Move X23, [X8]
	126 Move X0, [X9]
	127 Call 0x1C17F10
	128 Move X8, 0x7DD000
	129 Move X8, [X8+3976]
	130 Move X1, X23
	131 Move X3, X31
	132 Move X22, X0
	133 Move X2, [X8]
	134 Call Func`2<Boolean, Boolean>..ctor, X0, X1, X2
	135 Move X8, [X24]
	136 Move X8, [X8+184]
	137 Move [X8+56], X22
	138 Move X2, [X26]
	139 Move X0, X21
	140 Move X1, X22
	141 Call 0x217E970, X0, X1
	142 Move X1, [X25]
	143 Move X21, X0
	144 Call Enumerable.Any, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {286}
	149 Move X25, [X19+40]
	150 Compare X25, 0
	151 JumpIfEqual {328}
	152 Move W8, [X25+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X27, 0x7A9000
	155 Move X28, 0x781000
	156 Move X29, 0x7A9000
	157 Move X27, [X27+1976]
	158 Move X28, [X28+3608]
	159 Move X29, [X29+1984]
	160 Move W26, W31
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X8, X25, W26
	163 Move X23, [X8+32]
	164 Compare X23, 0
	165 JumpIfEqual {328}
	166 Compare X21, 0
	167 JumpIfEqual {328}
	168 Move X8, [X21]
	169 Move W24, [X23+72]
	170 Move X1, [X27]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X21
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X21
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X22, X0
	191 Compare X0, 0
	192 JumpIfEqual {278}
	193 Move X8, [X22]
	194 Move X1, [X28]
	195 NotImplemented "Instruction LDRH not yet implemented."
	196 Compare X9, 0
	197 JumpIfEqual {204}
	198 Move X10, [X8+176]
	199 Add X10, X10, 8
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Subtract X9, X9, 1
	203 Add X10, X10, 16
	204 Move X0, X22
	205 Move W2, W31
	206 Call 0x1C5D788
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Add X8, X8, X9
	209 Add X0, X8, 312
	210 Move X8, [X0]
	211 Move X1, [X0+8]
	212 Move X0, X22
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfNotEqual {243}
	218 Move X8, [X22]
	219 Move X1, [X29]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move X0, X22
	230 Move W2, W31
	231 Call 0x1C5D788
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Add X8, X8, X9
	234 Add X0, X8, 312
	235 Move X8, [X0]
	236 Move X1, [X0+8]
	237 Move X0, X22
	238 NotImplemented "Instruction BLR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move W8, [X23+72]
	241 Subtract W8, W8, 1
	242 Move [X23+72], W8
	243 Move X23, X31
	244 Move W24, 10
	245 Compare X22, 0
	246 JumpIfEqual {270}
	247 Move X8, [X22]
	248 Move X10, 0x781000
	249 NotImplemented "Instruction LDRH not yet implemented."
	250 Move X10, [X10+3584]
	251 Move X1, [X10]
	252 Compare X9, 0
	253 JumpIfEqual {260}
	254 Move X10, [X8+176]
	255 Add X10, X10, 8
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Subtract X9, X9, 1
	259 Add X10, X10, 16
	260 Move X0, X22
	261 Move W2, W31
	262 Call 0x1C5D788
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Add X8, X8, X9
	265 Add X0, X8, 312
	266 Move X8, [X0]
	267 Move X1, [X0+8]
	268 Move X0, X22
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Compare X23, 0
	271 JumpIfNotEqual {330}
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Compare W24, 0
	274 JumpIfNotEqual {286}
	275 Move W8, [X25+24]
	276 Add W26, W26, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Call 0x1C17F20
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Call 0x3EB2AD0
	281 Move X23, [X0]
	282 Call 0x3EB2AE0
	283 Move W24, W31
	284 Compare X22, 0
	285 JumpIfNotEqual {247}
	286 Move X20, [X31+80]
	287 Move X19, [X31+88]
	288 Move X22, [X31+64]
	289 Move X21, [X31+72]
	290 Move X24, [X31+48]
	291 Move X23, [X31+56]
	292 Move X26, [X31+32]
	293 Move X25, [X31+40]
	294 Move X28, [X31+16]
	295 Move X27, [X31+24]
	296 Move X29, [X31+96]
	297 Move X30, [X31+104]
	298 Return 
	299 Move X0, X19
	300 Move X1, X31
	301 Call ProBuilderMesh.get_renderer, X0
	302 Move X8, 0x7DD000
	303 Move X8, [X8+3960]
	304 Move X19, X0
	305 Move X0, X20
	306 Move X1, X21
	307 Move X2, [X8]
	308 Call 0x2180CA0, X0, X1
	309 Compare X19, 0
	310 JumpIfEqual {328}
	311 Move X1, X0
	312 Move X0, X19
	313 Move X20, [X31+80]
	314 Move X19, [X31+88]
	315 Move X22, [X31+64]
	316 Move X21, [X31+72]
	317 Move X24, [X31+48]
	318 Move X23, [X31+56]
	319 Move X26, [X31+32]
	320 Move X25, [X31+40]
	321 Move X28, [X31+16]
	322 Move X27, [X31+24]
	323 Move X2, X31
	324 Move X29, [X31+96]
	325 Move X30, [X31+104]
	326 Call Renderer.set_sharedMaterials, X0, X1
	327 Return 
	328 Call 0x1C17F20
	329 Call 0x1C17F28
	330 Move X0, X23
	331 Call 0x1C17F18
	332 Move X19, X0
	333 Move X23, X31
	334 Move X19, X0
	335 Compare X22, 0
	336 JumpIfEqual {360}
	337 Move X8, [X22]
	338 Move X10, 0x781000
	339 NotImplemented "Instruction LDRH not yet implemented."
	340 Move X10, [X10+3584]
	341 Move X1, [X10]
	342 Compare X9, 0
	343 JumpIfEqual {350}
	344 Move X10, [X8+176]
	345 Add X10, X10, 8
	346 NotImplemented "Instruction LDUR not yet implemented."
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Subtract X9, X9, 1
	349 Add X10, X10, 16
	350 Move X0, X22
	351 Move W2, W31
	352 Call 0x1C5D788
	353 NotImplemented "Instruction LDRSW not yet implemented."
	354 Add X8, X8, X9
	355 Add X0, X8, 312
	356 Move X8, [X0]
	357 Move X1, [X0+8]
	358 Move X0, X22
	359 NotImplemented "Instruction BLR not yet implemented."
	360 Compare X23, 0
	361 JumpIfNotEqual {364}
	362 Move X0, X19
	363 Call 0x1D2D690
	364 Move X0, X23
	365 Call 0x1C17F18
	366 Call 0x1991590

