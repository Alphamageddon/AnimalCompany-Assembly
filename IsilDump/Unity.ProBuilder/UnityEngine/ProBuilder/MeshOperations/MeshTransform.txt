Type: UnityEngine.ProBuilder.MeshOperations.MeshTransform

Method: System.Void SetPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.PivotLocation pivotLocation)

Disassembly:
	0x03976658 BL 0x1C16F20
	0x0397665C BL 0x1C16F20
	0x03976660 BL 0x1C16F20
	0x03976664 BL 0x1C16F20
	0x03976668 BL 0x1C16F20
	0x0397666C MOV X0, X23
	0x03976670 BL 0x1C16F18
	0x03976674 B 0x39766BC
	0x03976678 B 0x39766BC
	0x0397667C B 0x39766BC
	0x03976680 B 0x39766BC
	0x03976684 B 0x39766BC
	0x03976688 B 0x39766BC
	0x0397668C B 0x39766BC
	0x03976690 B 0x39766BC
	0x03976694 B 0x39766BC
	0x03976698 B 0x39766BC
	0x0397669C B 0x39766BC
	0x039766A0 B 0x39766BC
	0x039766A4 B 0x39766BC
	0x039766A8 B 0x39766BC
	0x039766AC B 0x39766BC
	0x039766B0 B 0x39766BC
	0x039766B4 B 0x39766BC
	0x039766B8 B 0x39766BC
	0x039766BC MOV X22, X0
	0x039766C0 CMP W1, 0x1
	0x039766C4 B.NE 0x39766DC
	0x039766C8 MOV X0, X22
	0x039766CC BL 0x3EB1AD0
	0x039766D0 LDR X23, [X0]
	0x039766D4 BL 0x3EB1AE0
	0x039766D8 B 0x3976560
	0x039766DC MOV X23, X31
	0x039766E0 B 0x39766E8
	0x039766E4 MOV X22, X0
	0x039766E8 CBZ X21, 0x397674C
	0x039766EC LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D13
	003 Move [X31+40], D12
	004 Move [X31+48], D11
	005 Move [X31+56], D10
	006 Move [X31+64], D9
	007 Move [X31+72], D8
	008 Move [X31+80], X30
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move W20, W1
	012 Add X8, X31, 8
	013 Move X1, X31
	014 Move X19, X0
	015 Call MeshUtility.GetBounds, X0
	016 Compare X19, 0
	017 JumpIfEqual {51}
	018 Move S8, [X31+8]
	019 Move S9, [X31+12]
	020 Move S10, [X31+16]
	021 Move S11, [X31+20]
	022 Move S12, [X31+24]
	023 Move S13, [X31+28]
	024 Move X0, X19
	025 Move X1, X31
	026 Call Component.get_transform, X0
	027 Compare X0, 0
	028 JumpIfEqual {51}
	029 Subtract S0, S10, S13
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract S1, S9, S12
	032 Subtract S3, S8, S11
	033 NotImplemented "Instruction FCSEL not yet implemented."
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 NotImplemented "Instruction FCSEL not yet implemented."
	036 Move X1, X31
	037 Call Transform.TransformPoint, X0, X1
	038 Move X0, X19
	039 Call MeshTransform.SetPivot, X0, X1
	040 Move X20, [X31+96]
	041 Move X19, [X31+104]
	042 Move X30, [X31+80]
	043 Move D9, [X31+64]
	044 Move D8, [X31+72]
	045 Move D11, [X31+48]
	046 Move D10, [X31+56]
	047 Move D13, [X31+32]
	048 Move D12, [X31+40]
	049 Add X31, X31, 112
	050 Return 
	051 Call 0x1C17F20

Method: System.Void CenterPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes)

Disassembly:
	0x03971F50 STP S0, S1, [X9 + 0x20]
	0x03971F54 STP S2, S3, [X9 + 0x28]
	0x03971F58 B 0x3971F6C
	0x03971F5C LDR X8, [X8 + 0x20]
	0x03971F60 LDR X8, [X8 + 0xC0]
	0x03971F64 LDR X1, [X8 + 0x70]
	0x03971F68 BL 0x2F6D428
	0x03971F6C LDR W8, [X20 + 0x18]
	0x03971F70 LDR X12, [X31 + 0x48]
	0x03971F74 LDR X0, [X31 + 0x58]
	0x03971F78 CMP W26, W8
	0x03971F7C B.CS 0x3972370
	0x03971F80 CBZ X12, 0x397236C
	0x03971F84 LDRSW X8, [X21]
	0x03971F88 LDR W9, [X12 + 0x18]
	0x03971F8C CMP W8, W9
	0x03971F90 B.CS 0x3972370
	0x03971F94 CBZ X0, 0x397236C
	0x03971F98 ADD X8, X12, X8, 0x3, LSL
	0x03971F9C ADRP X9, 0x7DD000
	0x03971FA0 LDR W10, [X0 + 0x1C]
	0x03971FA4 LDP S0, S1, [X8 + 0x20]
	0x03971FA8 LDR X8, [X0 + 0x10]
	0x03971FAC LDR X9, [X9 + 0x720]
	0x03971FB0 ADD W10, W10, 0x1
	0x03971FB4 LDR X9, [X9]
	0x03971FB8 STR W10, [X0 + 0x1C]
	0x03971FBC CBZ X8, 0x397236C
	0x03971FC0 LDRSW X10, [X0 + 0x18]
	0x03971FC4 LDR W11, [X8 + 0x18]
	0x03971FC8 CMP W10, W11
	0x03971FCC B.CS 0x3971FE4
	0x03971FD0 ADD W9, W10, 0x1
	0x03971FD4 ADD X8, X8, X10, 0x3, LSL
	0x03971FD8 STR W9, [X0 + 0x18]
	0x03971FDC STP S0, S1, [X8 + 0x20]
	0x03971FE0 B 0x3971FFC
	0x03971FE4 LDR X8, [X9 + 0x20]
	0x03971FE8 LDR X8, [X8 + 0xC0]
	0x03971FEC LDR X1, [X8 + 0x70]
	0x03971FF0 BL 0x30C9664
	0x03971FF4 LDR X0, [X31 + 0x58]
	0x03971FF8 LDR X12, [X31 + 0x48]
	0x03971FFC LDR W8, [X20 + 0x18]
	0x03972000 CMP W19, W8
	0x03972004 B.CS 0x3972370
	0x03972008 LDRSW X8, [X23]
	0x0397200C LDR W9, [X12 + 0x18]
	0x03972010 CMP W8, W9
	0x03972014 B.CS 0x3972370
	0x03972018 ADD X8, X12, X8, 0x3, LSL
	0x0397201C ADRP X9, 0x7DC000
	0x03972020 LDR W10, [X0 + 0x1C]
	0x03972024 LDP S0, S1, [X8 + 0x20]
	0x03972028 LDR X8, [X0 + 0x10]
	0x0397202C LDR X9, [X9 + 0x720]
	0x03972030 ADD W10, W10, 0x1
	0x03972034 LDR X9, [X9]
	0x03972038 STR W10, [X0 + 0x1C]
	0x0397203C CBZ X8, 0x397236C
	0x03972040 LDRSW X10, [X0 + 0x18]
	0x03972044 LDR W11, [X8 + 0x18]
	0x03972048 CMP W10, W11
	0x0397204C B.CS 0x3972064
	0x03972050 ADD W9, W10, 0x1
	0x03972054 ADD X8, X8, X10, 0x3, LSL
	0x03972058 STR W9, [X0 + 0x18]
	0x0397205C STP S0, S1, [X8 + 0x20]
	0x03972060 B 0x397207C
	0x03972064 LDR X8, [X9 + 0x20]
	0x03972068 LDR X8, [X8 + 0xC0]
	0x0397206C LDR X1, [X8 + 0x70]
	0x03972070 BL 0x30C9664
	0x03972074 LDR X0, [X31 + 0x58]
	0x03972078 LDR X12, [X31 + 0x48]
	0x0397207C LDR W8, [X20 + 0x18]
	0x03972080 CMP W22, W8
	0x03972084 B.CS 0x3972370
	0x03972088 LDRSW X8, [X24]
	0x0397208C LDR W9, [X12 + 0x18]
	0x03972090 CMP W8, W9
	0x03972094 B.CS 0x3972370
	0x03972098 ADD X8, X12, X8, 0x3, LSL
	0x0397209C ADRP X9, 0x7DC000
	0x039720A0 LDR W10, [X0 + 0x1C]
	0x039720A4 LDP S0, S1, [X8 + 0x20]
	0x039720A8 LDR X8, [X0 + 0x10]
	0x039720AC LDR X9, [X9 + 0x720]
	0x039720B0 ADD W10, W10, 0x1
	0x039720B4 LDR X9, [X9]
	0x039720B8 STR W10, [X0 + 0x1C]
	0x039720BC CBZ X8, 0x397236C
	0x039720C0 LDRSW X10, [X0 + 0x18]
	0x039720C4 LDR W11, [X8 + 0x18]
	0x039720C8 CMP W10, W11
	0x039720CC B.CS 0x39720E4
	0x039720D0 ADD W9, W10, 0x1
	0x039720D4 ADD X8, X8, X10, 0x3, LSL
	0x039720D8 STR W9, [X0 + 0x18]
	0x039720DC STP S0, S1, [X8 + 0x20]
	0x039720E0 B 0x39720F4
	0x039720E4 LDR X8, [X9 + 0x20]
	0x039720E8 LDR X8, [X8 + 0xC0]
	0x039720EC LDR X1, [X8 + 0x70]
	0x039720F0 BL 0x30C9664
	0x039720F4 ADRP X8, 0x782000
	0x039720F8 LDR X8, [X8 + 0xE58]
	0x039720FC MOVZ W1, 0x3
	0x03972100 LDR X0, [X8]
	0x03972104 BL 0x1C16D6C
	0x03972108 CBZ X0, 0x397236C
	0x0397210C LDR W8, [X0 + 0x18]
	0x03972110 MOV X21, X0
	0x03972114 CBZ W8, 0x3972370
	0x03972118 CMP W8, 0x1
	0x0397211C STR W26, [X21 + 0x20]
	0x03972120 B.EQ 0x3972370
	0x03972124 CMP W8, 0x2
	0x03972128 STR W19, [X21 + 0x24]
	0x0397212C B.HI 0x39721A4
	0x03972130 B 0x3972370
	0x03972134 ADRP X8, 0x782000
	0x03972138 LDR X8, [X8 + 0xE58]
	0x0397213C MOVZ W1, 0x3
	0x03972140 LDR X0, [X8]
	0x03972144 BL 0x1C16D6C
	0x03972148 LDR W8, [X20 + 0x18]
	0x0397214C CMP W26, W8
	0x03972150 B.CS 0x3972370
	0x03972154 MOV X21, X0
	0x03972158 CBZ X0, 0x397236C
	0x0397215C LDR W9, [X21 + 0x18]
	0x03972160 CBZ W9, 0x3972370
	0x03972164 LDR W10, [X27]
	0x03972168 CMP W28, W8
	0x0397216C STR W10, [X21 + 0x20]
	0x03972170 B.CS 0x3972370
	0x03972174 LDR W27, [X31 + 0x38]
	0x03972178 LDR X28, [X31 + 0x30]
	0x0397217C CMP W9, 0x1
	0x03972180 B.LS 0x3972370
	0x03972184 LDR W10, [X25]
	0x03972188 CMP W24, W8
	0x0397218C STR W10, [X21 + 0x24]
	0x03972190 B.CS 0x3972370
	0x03972194 LDR W25, [X31 + 0x2C]
	0x03972198 CMP W9, 0x2
	0x0397219C B.LS 0x3972370
	0x039721A0 LDR W22, [X23]
	0x039721A4 LDP W2, W0, [X31 + 0x40]
	0x039721A8 MOV W1, W31
	0x039721AC MOV X3, X31
	0x039721B0 STR W22, [X21 + 0x28]
	0x039721B4 BL 0x3907A24
	0x039721B8 MOV W22, W0
	0x039721BC ADD X8, X31, 0x90
	0x039721C0 MOV X0, X31
	0x039721C4 BL 0x38F6A48
	0x039721C8 ADRP X8, 0x7DC000
	0x039721CC LDP V0, V1, [X31 + 0x90]
	0x039721D0 LDR X8, [X8 + 0x560]
	0x039721D4 STP V0, V1, [X31 + 0xB0]
	0x039721D8 LDR X0, [X8]
	0x039721DC BL 0x1C16F10
	0x039721E0 LDP V0, V1, [X31 + 0xB0]
	0x039721E4 ADD X3, X31, 0x70
	0x039721E8 MOVN W5, 0x0
	0x039721EC MOVN W6, 0x0
	0x039721F0 MOVZ W7, 0x1
	0x039721F4 MOV X1, X21
	0x039721F8 MOV W2, W22
	0x039721FC MOV W4, W31
	0x03972200 MOV X19, X0
	0x03972204 STP V0, V1, [X31 + 0x70]
	0x03972208 STR X31, [X31]
	0x0397220C BL 0x39004D4
	0x03972210 CBZ X29, 0x397236C
	0x03972214 LDR W10, [X29 + 0x1C]
	0x03972218 ADRP X9, 0x7DB000
	0x0397221C LDR X8, [X29 + 0x10]
	0x03972220 LDR X9, [X9 + 0xE10]
	0x03972224 ADD W10, W10, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D13
	003 Move [X31+40], D12
	004 Move [X31+48], D11
	005 Move [X31+56], D10
	006 Move [X31+64], D9
	007 Move [X31+72], D8
	008 Move [X31+80], X30
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X21, 0xA71000
	014 Move X22, 0x783000
	015 Move W8, [X21+2566]
	016 Move X22, [X22+1432]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x783000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x7DE000
	027 Move X0, [X0+3976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2566], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {191}
	044 Move X21, 0xA68000
	045 Move W8, [X21+1923]
	046 Compare W8, 0
	047 JumpIfEqual {50}
	048 Compare X20, 0
	049 JumpIfNotEqual {57}
	050 Move X0, 0x783000
	051 Move X0, [X0+1440]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+1923], W8
	055 Compare X20, 0
	056 JumpIfEqual {97}
	057 Move X8, [X20+24]
	058 Compare X8, 0
	059 JumpIfEqual {97}
	060 Compare X19, 0
	061 JumpIfEqual {189}
	062 Move X9, [X19+88]
	063 Compare X9, 0
	064 JumpIfEqual {176}
	065 Move W10, [X9+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X11, 0x782000
	068 Move X11, [X11+1440]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X11, [X11]
	071 Move X11, [X11+184]
	072 Move V8, [X11]
	073 Move V9, [X11+8]
	074 Move W11, W31
	075 Move W12, 12
	076 Add X13, X20, W11
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction MADD not yet implemented."
	080 Move V0, [X13+32]
	081 Move V1, [X13+40]
	082 Add W11, W11, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add V8, V8, V0
	085 Add S9, S9, S1
	086 Move X0, X19
	087 Move X1, X31
	088 Call Component.get_transform, X0
	089 Compare X0, 0
	090 JumpIfEqual {189}
	091 Move V0, [X20+24]
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	095 NotImplemented "Instruction INVALID not yet implemented."
	096 Move S1, V0.S[1]
	097 Compare X19, 0
	098 JumpIfEqual {189}
	099 Move X0, X19
	100 Move X1, X31
	101 Call Component.get_transform, X0
	102 Move X20, X0
	103 Move X0, X19
	104 Move X1, X31
	105 Call ProBuilderMesh.get_mesh, X0
	106 Compare X0, 0
	107 JumpIfEqual {189}
	108 Add X8, X31, 8
	109 Move X1, X31
	110 Call Mesh.get_bounds, X0
	111 Compare X20, 0
	112 JumpIfEqual {189}
	113 Move S0, [X31+8]
	114 Move S1, [X31+12]
	115 Move V2, [X31+16]
	116 Move X0, X20
	117 Move X1, X31
	118 Call Transform.TransformPoint, X0, X1
	119 Move X0, X19
	120 Move X1, X31
	121 Move V8, V0
	122 Move V9, V1
	123 Move V10, V2
	124 Call Component.get_transform, X0
	125 Compare X0, 0
	126 JumpIfEqual {189}
	127 Move X1, X31
	128 Call Transform.get_position, X0
	129 Move X0, X19
	130 Move X1, X31
	131 Move V11, V0
	132 Move V12, V1
	133 Move V13, V2
	134 Call Component.get_transform, X0
	135 Compare X0, 0
	136 JumpIfEqual {189}
	137 Move V0, V8
	138 Move V1, V9
	139 Move V2, V10
	140 Move X1, X31
	141 Call Transform.set_position, X0, X1
	142 Move X0, X19
	143 Move W1, W31
	144 Move X2, X31
	145 Call ProBuilderMesh.ToMesh, X0, X1
	146 Move X0, X19
	147 Move X1, X31
	148 Call ProBuilderMesh.get_mesh, X0
	149 Compare X0, 0
	150 JumpIfEqual {189}
	151 Move X20, 0x7DD000
	152 Move X20, [X20+3976]
	153 Move X1, X31
	154 Subtract S8, S11, S8
	155 Subtract S9, S12, S9
	156 Subtract S10, S13, S10
	157 Call Mesh.get_triangles, X0
	158 Move X8, [X20]
	159 Move X20, X0
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X19
	166 Move X1, X20
	167 Move V0, V8
	168 Move V1, V9
	169 Move V2, V10
	170 Move X2, X31
	171 Call VertexPositioning.TranslateVerticesInWorldSpace, X0, X1, X2
	172 Move W1, 31
	173 Move X0, X19
	174 Move X2, X31
	175 Call ProBuilderMesh.Refresh, X0, X1
	176 Move X20, [X31+112]
	177 Move X19, [X31+120]
	178 Move X22, [X31+96]
	179 Move X21, [X31+104]
	180 Move X30, [X31+80]
	181 Move D9, [X31+64]
	182 Move D8, [X31+72]
	183 Move D11, [X31+48]
	184 Move D10, [X31+56]
	185 Move D13, [X31+32]
	186 Move D12, [X31+40]
	187 Add X31, X31, 128
	188 Return 
	189 Call 0x1C17F20
	190 Call 0x1C17F28
	191 Move X0, 0x787000
	192 Move X0, [X0+1320]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X19, X0
	196 Move X0, 0x7DC000
	197 Move X0, [X0+3728]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X19
	201 Move X2, X31
	202 Call ArgumentNullException..ctor, X0, X1
	203 Move X0, 0x7DE000
	204 Move X0, [X0+3912]
	205 Call 0x1C17D08
	206 Move X1, X0
	207 Move X0, X19
	208 Call 0x1C17DEC

Method: System.Void SetPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 worldPosition)

Disassembly:
	0x039766F0 ADRP X10, 0x77D000
	0x039766F4 LDRH W9, [X8 + 0x12E]
	0x039766F8 LDR X10, [X10 + 0xE00]
	0x039766FC LDR X1, [X10]
	0x03976700 CBZ X9, 0x3976724
	0x03976704 LDR X10, [X8 + 0xB0]
	0x03976708 ADD X10, X10, 0x8
	0x0397670C LDUR X11, [X10 - 0x8]
	0x03976710 CMP X11, X1
	0x03976714 B.EQ 0x3976734
	0x03976718 SUBS X9, X9, 0x1
	0x0397671C ADD X10, X10, 0x10
	0x03976720 B.NE 0x397670C
	0x03976724 MOV X0, X21
	0x03976728 MOV W2, W31
	0x0397672C BL 0x1C5C788
	0x03976730 B 0x3976740
	0x03976734 LDRSW X9, [X10]
	0x03976738 ADD X8, X8, X9, 0x4, LSL
	0x0397673C ADD X0, X8, 0x138
	0x03976740 LDP X8, X1, [X0]
	0x03976744 MOV X0, X21
	0x03976748 BLR X8
	0x0397674C CBNZ X23, 0x3976758
	0x03976750 MOV X0, X22
	0x03976754 BL 0x1D2C690
	0x03976758 MOV X0, X23
	0x0397675C BL 0x1C16F18
	0x03976760 BL 0x1990590
	0x03976764 SUB X31, X31, 0x70
	0x03976768 STP X29, X30, [X31 + 0x10]
	0x0397676C STP X28, X27, [X31 + 0x20]
	0x03976770 STP X26, X25, [X31 + 0x30]
	0x03976774 STP X24, X23, [X31 + 0x40]
	0x03976778 STP X22, X21, [X31 + 0x50]
	0x0397677C STP X20, X19, [X31 + 0x60]
	0x03976780 ADRP X21, 0xA6B000
	0x03976784 ADRP X22, 0x7DA000
	0x03976788 ADRP X19, 0x7DA000
	0x0397678C LDRB W8, [X21 + 0xA0D]
	0x03976790 LDR X22, [X22 + 0xE8]
	0x03976794 LDR X19, [X19 + 0xF0]
	0x03976798 MOV X20, X1
	0x0397679C TBNZ X8, 0x0, 0x3976838
	0x039767A0 ADRP X0, 0x7DA000
	0x039767A4 LDR X0, [X0 + 0xF8]
	0x039767A8 BL 0x1C16CF4
	0x039767AC ADRP X0, 0x7DA000
	0x039767B0 LDR X0, [X0 + 0x100]
	0x039767B4 BL 0x1C16CF4
	0x039767B8 ADRP X0, 0x7DA000
	0x039767BC LDR X0, [X0 + 0x108]
	0x039767C0 BL 0x1C16CF4
	0x039767C4 ADRP X0, 0x7DA000
	0x039767C8 LDR X0, [X0 + 0x110]
	0x039767CC BL 0x1C16CF4
	0x039767D0 ADRP X0, 0x7DA000
	0x039767D4 LDR X0, [X0 + 0x118]
	0x039767D8 BL 0x1C16CF4
	0x039767DC ADRP X0, 0x7DA000
	0x039767E0 LDR X0, [X0 + 0xF0]
	0x039767E4 BL 0x1C16CF4
	0x039767E8 ADRP X0, 0x7DA000
	0x039767EC LDR X0, [X0 + 0xC8]
	0x039767F0 BL 0x1C16CF4
	0x039767F4 ADRP X0, 0x7DA000
	0x039767F8 LDR X0, [X0 + 0xD0]
	0x039767FC BL 0x1C16CF4
	0x03976800 ADRP X0, 0x7DA000
	0x03976804 LDR X0, [X0 + 0xE8]
	0x03976808 BL 0x1C16CF4
	0x0397680C ADRP X0, 0x7DA000
	0x03976810 LDR X0, [X0 + 0x120]
	0x03976814 BL 0x1C16CF4
	0x03976818 ADRP X0, 0x7DA000
	0x0397681C LDR X0, [X0 + 0x128]
	0x03976820 BL 0x1C16CF4
	0x03976824 ADRP X0, 0x7DA000
	0x03976828 LDR X0, [X0 + 0x130]
	0x0397682C BL 0x1C16CF4
	0x03976830 MOVZ W8, 0x1
	0x03976834 STRB W8, [X21 + 0xA0D]
	0x03976838 LDR X0, [X22]
	0x0397683C BL 0x1C16F10
	0x03976840 LDR X1, [X19]
	0x03976844 MOV X19, X0
	0x03976848 BL 0x301B7C4
	0x0397684C CBZ X20, 0x3976B18
	0x03976850 LDR X24, [X20 + 0x10]
	0x03976854 CBZ X24, 0x3976B18
	0x03976858 LDR W8, [X24 + 0x18]
	0x0397685C CMP W8, 0x1
	0x03976860 B.LT 0x3976AF4
	0x03976864 ADRP X27, 0x7DA000
	0x03976868 ADRP X29, 0x7DA000
	0x0397686C ADRP X26, 0x7DA000
	0x03976870 LDR X27, [X27 + 0xD0]
	0x03976874 LDR X29, [X29 + 0x128]
	0x03976878 LDR X26, [X26 + 0xF8]
	0x0397687C MOV W25, W31
	0x03976880 ADRP X8, 0x7DA000

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xA6C000
	012 Move X21, 0x77E000
	013 Move W8, [X20+2567]
	014 Move X21, [X21+1432]
	015 Move V10, V2
	016 Move V9, V1
	017 Move V8, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x77E000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D9000
	027 Move X0, [X0+3976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2567], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {106}
	044 Compare X19, 0
	045 JumpIfEqual {105}
	046 Move X0, X19
	047 Move X1, X31
	048 Call Component.get_transform, X0
	049 Compare X0, 0
	050 JumpIfEqual {105}
	051 Move X1, X31
	052 Move X20, X0
	053 Call Transform.get_position, X0
	054 Move V11, V0
	055 Move V12, V1
	056 Move V13, V2
	057 Move X0, X20
	058 Move V0, V8
	059 Move V1, V9
	060 Move V2, V10
	061 Move X1, X31
	062 Call Transform.set_position, X0, X1
	063 Move X0, X19
	064 Move W1, W31
	065 Move X2, X31
	066 Call ProBuilderMesh.ToMesh, X0, X1
	067 Move X0, X19
	068 Move X1, X31
	069 Call ProBuilderMesh.get_mesh, X0
	070 Compare X0, 0
	071 JumpIfEqual {105}
	072 Move X20, 0x7D9000
	073 Move X20, [X20+3976]
	074 Move X1, X31
	075 Call Mesh.get_triangles, X0
	076 Move X8, [X20]
	077 Move X20, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Subtract S2, S13, S10
	084 Subtract S1, S12, S9
	085 Subtract S0, S11, S8
	086 Move X0, X19
	087 Move X1, X20
	088 Move X2, X31
	089 Call VertexPositioning.TranslateVerticesInWorldSpace, X0, X1, X2
	090 Move X0, X19
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X30, [X31+48]
	094 Move X21, [X31+56]
	095 Move D9, [X31+32]
	096 Move D8, [X31+40]
	097 Move D11, [X31+16]
	098 Move D10, [X31+24]
	099 Move W1, 31
	100 Move X2, X31
	101 Move D13, [X31+80]
	102 Move D12, [X31+88]
	103 Call ProBuilderMesh.Refresh, X0, X1
	104 Return 
	105 Call 0x1C17F20
	106 Move X0, 0x783000
	107 Move X0, [X0+1320]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0x7D8000
	112 Move X0, [X0+3728]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentNullException..ctor, X0, X1
	118 Move X0, 0x7DB000
	119 Move X0, [X0+168]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC

Method: System.Void FreezeScaleTransform(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03976884 LDR X8, [X8 + 0x130]
	0x03976888 LDR X0, [X8]
	0x0397688C BL 0x1C16F10
	0x03976890 MOV X1, X31
	0x03976894 MOV X20, X0
	0x03976898 BL 0x33BDD8C
	0x0397689C LDR W10, [X24 + 0x18]
	0x039768A0 CMP W25, W10
	0x039768A4 B.CS 0x3976B1C
	0x039768A8 ADD W8, W25, 0x1
	0x039768AC CMP W8, W10
	0x039768B0 B.CS 0x3976B1C
	0x039768B4 ADD W9, W25, 0x2
	0x039768B8 CMP W9, W10
	0x039768BC B.CS 0x3976B1C
	0x039768C0 ADD X10, X24, W25, 0x2, SXTW
	0x039768C4 ADD X11, X24, 0x20
	0x039768C8 LDR W1, [X10 + 0x20]
	0x039768CC LDR W2, [X11, W8, SXTW]
	0x039768D0 LDR W3, [X11, W9, SXTW]
	0x039768D4 ADD X0, X31, 0x0
	0x039768D8 MOV X4, X31
	0x039768DC STR W31, [X31 + 0x8]
	0x039768E0 STR X31, [X31]
	0x039768E4 BL 0x393A4FC
	0x039768E8 CBZ X20, 0x3976B18
	0x039768EC LDR X8, [X31]
	0x039768F0 LDR W9, [X31 + 0x8]
	0x039768F4 MOV X28, X20
	0x039768F8 STR X8, [X28 + 0x10]!
	0x039768FC STR W9, [X28 + 0x8]
	0x03976900 CBZ X19, 0x3976B18
	0x03976904 LDR W8, [X19 + 0x18]
	0x03976908 CMP W8, 0x1
	0x0397690C B.LT 0x397697C
	0x03976910 MOV W21, W31
	0x03976914 LDR X2, [X27]
	0x03976918 MOV X0, X19
	0x0397691C MOV W1, W21
	0x03976920 BL 0x301BCCC
	0x03976924 LDR X23, [X20 + 0x20]
	0x03976928 MOV X22, X0
	0x0397692C CBNZ X23, 0x3976958
	0x03976930 ADRP X8, 0x7DA000
	0x03976934 LDR X8, [X8 + 0x100]
	0x03976938 LDR X0, [X8]
	0x0397693C BL 0x1C16F10
	0x03976940 LDR X2, [X29]
	0x03976944 MOV X1, X20
	0x03976948 MOV X3, X31
	0x0397694C MOV X23, X0
	0x03976950 BL 0x2D3394C
	0x03976954 STR X23, [X20 + 0x20]
	0x03976958 LDR X2, [X26]
	0x0397695C MOV X0, X22
	0x03976960 MOV X1, X23
	0x03976964 BL 0x21B39DC
	0x03976968 TBNZ X0, 0x0, 0x3976A6C
	0x0397696C LDR W8, [X19 + 0x18]
	0x03976970 ADD W21, W21, 0x1
	0x03976974 CMP W21, W8
	0x03976978 B.LT 0x3976914
	0x0397697C ADRP X8, 0x7DA000
	0x03976980 LDR X8, [X8 + 0x120]
	0x03976984 LDR X0, [X8]
	0x03976988 BL 0x1C16F10
	0x0397698C ADRP X8, 0x7DA000
	0x03976990 LDR X8, [X8 + 0x118]
	0x03976994 MOV X21, X0
	0x03976998 LDR X1, [X8]
	0x0397699C BL 0x3089EF8
	0x039769A0 CBZ X21, 0x3976B18
	0x039769A4 ADRP X9, 0x7DA000
	0x039769A8 LDR X1, [X28]
	0x039769AC LDR W2, [X20 + 0x18]
	0x039769B0 LDR W10, [X21 + 0x1C]
	0x039769B4 LDR X8, [X21 + 0x10]
	0x039769B8 LDR X9, [X9 + 0x108]
	0x039769BC ADD W10, W10, 0x1
	0x039769C0 LDR X9, [X9]
	0x039769C4 STR W10, [X21 + 0x1C]
	0x039769C8 CBZ X8, 0x3976B18
	0x039769CC LDRSW X10, [X21 + 0x18]
	0x039769D0 LDR W11, [X8 + 0x18]
	0x039769D4 CMP W10, W11
	0x039769D8 B.CS 0x39769F8
	0x039769DC MOVZ W11, 0xC
	0x039769E0 ADD W9, W10, 0x1

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA6C000
	009 Move X21, 0x77E000
	010 Move W8, [X20+2568]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x77E000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2568], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {85}
	035 Compare X19, 0
	036 JumpIfEqual {84}
	037 Move X20, [X19+88]
	038 Compare X20, 0
	039 JumpIfEqual {84}
	040 Move X8, [X20+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X21, X31
	043 And X8, X8, 0
	044 Add X22, X20, 40
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move V9, [X22]
	048 Move X0, X19
	049 Move X1, X31
	050 Call Component.get_transform, X0
	051 Compare X0, 0
	052 JumpIfEqual {84}
	053 Move X1, X31
	054 Call Transform.get_localScale, X0
	055 Move W8, [X20+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move V0.S[1], V1.S[0]
	058 Multiply S2, S9, S2
	059 Add X21, X21, 1
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 Move [X22], S2
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X22-8], D0
	064 Add X22, X22, 12
	065 Move X0, X19
	066 Move X1, X31
	067 Call Component.get_transform, X0
	068 Compare X0, 0
	069 JumpIfEqual {84}
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+16]
	075 Move S0, 1
	076 Move S1, 1
	077 Move S2, 1
	078 Move X1, X31
	079 Move D9, [X31+64]
	080 Move D8, [X31+72]
	081 Call Transform.set_localScale, X0, X1
	082 Return 
	083 Call 0x1C17F28
	084 Call 0x1C17F20
	085 Move X0, 0x783000
	086 Move X0, [X0+1320]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X19, X0
	090 Move X0, 0x7D8000
	091 Move X0, [X0+3728]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call ArgumentNullException..ctor, X0, X1
	097 Move X0, 0x7DB000
	098 Move X0, [X0+176]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X19
	102 Call 0x1C17DEC

