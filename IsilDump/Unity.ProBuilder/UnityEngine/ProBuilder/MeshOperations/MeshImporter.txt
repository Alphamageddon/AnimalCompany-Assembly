Type: UnityEngine.ProBuilder.MeshOperations.MeshImporter

Method: System.Void .ctor(UnityEngine.GameObject gameObject)

Disassembly:
	0x03974DD8 ADRP X0, 0x7DA000
	0x03974DDC LDR X0, [X0 + 0xDD0]
	0x03974DE0 BL 0x1C16CF4
	0x03974DE4 ADRP X0, 0x7DA000
	0x03974DE8 LDR X0, [X0 + 0xB08]
	0x03974DEC BL 0x1C16CF4
	0x03974DF0 MOVZ W8, 0x1
	0x03974DF4 STRB W8, [X24 + 0xA1A]
	0x03974DF8 ADRP X24, 0x7DC000
	0x03974DFC ADRP X25, 0x7DC000
	0x03974E00 LDR X24, [X24 + 0x78]
	0x03974E04 LDR X25, [X25 + 0x70]
	0x03974E08 LDR X0, [X23]
	0x03974E0C STP X31, X31, [X31 + 0x20]
	0x03974E10 STR X31, [X31 + 0x30]
	0x03974E14 STR W31, [X31 + 0x4C]
	0x03974E18 BL 0x1C16F10
	0x03974E1C LDR X1, [X21]
	0x03974E20 MOV X21, X0
	0x03974E24 BL 0x2DBDE08
	0x03974E28 LDR X0, [X19]
	0x03974E2C LDR W8, [X0 + 0xE0]
	0x03974E30 CBNZ W8, 0x3974E38
	0x03974E34 BL 0x1C16DFC
	0x03974E38 MOVZ W2, 0x1
	0x03974E3C MOV X0, X20
	0x03974E40 MOV X1, X22
	0x03974E44 MOV X3, X31
	0x03974E48 BL 0x3942FD0
	0x03974E4C LDR X8, [X24]
	0x03974E50 MOV X24, X0
	0x03974E54 MOV X0, X8
	0x03974E58 BL 0x1C16F10
	0x03974E5C LDR X1, [X25]
	0x03974E60 MOV X22, X0
	0x03974E64 BL 0x29E1D80
	0x03974E68 CBZ X24, 0x397541C
	0x03974E6C LDR W8, [X24 + 0x18]
	0x03974E70 CMP W8, 0x1
	0x03974E74 B.LT 0x3975028
	0x03974E78 ADRP X8, 0xFFFFFFFFFD176000
	0x03974E7C ADRP X19, 0x7DA000
	0x03974E80 ADRP X27, 0x7DC000
	0x03974E84 ADRP X28, 0x7DC000
	0x03974E88 LDR V8, [X8 + 0xC4]
	0x03974E8C LDR X19, [X19 + 0xB00]
	0x03974E90 LDR X27, [X27 + 0x60]
	0x03974E94 LDR X28, [X28 + 0x58]
	0x03974E98 MOV W25, W31
	0x03974E9C LDR X2, [X19]
	0x03974EA0 MOV X0, X24
	0x03974EA4 MOV W1, W25
	0x03974EA8 BL 0x301BCCC
	0x03974EAC ADRP X8, 0x7DA000
	0x03974EB0 LDR X8, [X8 + 0xDD0]
	0x03974EB4 MOV X26, X0
	0x03974EB8 LDR X8, [X8]
	0x03974EBC MOV X0, X8
	0x03974EC0 BL 0x1C16F10
	0x03974EC4 MOV X1, X26
	0x03974EC8 MOV X2, X31
	0x03974ECC MOV X23, X0
	0x03974ED0 BL 0x3943870
	0x03974ED4 CBZ X23, 0x3974FE4
	0x03974ED8 MOV X0, X23
	0x03974EDC MOV X1, X31
	0x03974EE0 BL 0x3943898
	0x03974EE4 TBZ X0, 0x0, 0x3974F44
	0x03974EE8 MOV X0, X23
	0x03974EEC MOV X1, X31
	0x03974EF0 BL 0x39438DC
	0x03974EF4 MOV X26, X0
	0x03974EF8 CBZ X0, 0x3974FD4
	0x03974EFC LDR X8, [X26 + 0x38]
	0x03974F00 CBZ X8, 0x3974ED8
	0x03974F04 CBZ X22, 0x3974FDC
	0x03974F08 LDP X1, X2, [X26 + 0x10]
	0x03974F0C LDR X3, [X27]
	0x03974F10 MOV X0, X22
	0x03974F14 BL 0x29E2854
	0x03974F18 TBNZ X0, 0x0, 0x3974ED8
	0x03974F1C LDR X2, [X26 + 0x38]
	0x03974F20 MOV X0, X20
	0x03974F24 MOV X1, X26
	0x03974F28 MOV V0.16B, V8.16B
	0x03974F2C BL 0x3978908
	0x03974F30 LDP X1, X2, [X26 + 0x10]
	0x03974F34 LDR X3, [X28]
	0x03974F38 MOV X0, X22
	0x03974F3C BL 0x29E2648

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA6E000
	007 Move W8, [X21+2560]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x782000
	015 Move X0, [X0+360]
	016 Call 0x1C17CF4
	017 Move X0, 0x787000
	018 Move X0, [X0+1920]
	019 Call 0x1C17CF4
	020 Move X0, 0x7DD000
	021 Move X0, [X0]
	022 Call 0x1C17CF4
	023 Move X0, 0x780000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2560], W8
	028 Move X0, X19
	029 Move X1, X31
	030 Call Object..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {81}
	033 Move X8, 0x782000
	034 Move X8, [X8+360]
	035 Move X0, X20
	036 Move X1, [X8]
	037 Call 0x21E62E4, X0
	038 Compare X0, 0
	039 JumpIfEqual {81}
	040 Move X22, 0x780000
	041 Move X22, [X22+1432]
	042 Move X1, X31
	043 Call MeshFilter.get_sharedMesh, X0
	044 Move [X19+16], X0
	045 Move X21, X0
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {82}
	059 Move X8, 0x7DD000
	060 Move X8, [X8]
	061 Move X21, 0x787000
	062 Move X0, X20
	063 Move X1, [X8]
	064 Move X21, [X21+1920]
	065 Call 0x220DCAC, X0
	066 Move [X19+32], X0
	067 Move X1, [X21]
	068 Move X0, X20
	069 Call 0x21E62E4, X0
	070 Compare X0, 0
	071 JumpIfEqual {74}
	072 Move X1, X31
	073 Call Renderer.get_sharedMaterials, X0
	074 Move [X19+24], X0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Call 0x1C17F20
	082 Move X0, 0x785000
	083 Move X0, [X0+1320]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0x7A9000
	088 Move X0, [X0+176]
	089 Call 0x1C17D08
	090 Move X20, X0
	091 Move X0, 0x7DD000
	092 Move X0, [X0+8]
	093 Call 0x1C17D08
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, X20
	097 Move X3, X31
	098 Call ArgumentNullException..ctor, X0, X1, X2
	099 Move X0, 0x7DD000
	100 Move X0, [X0+16]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: System.Void .ctor(UnityEngine.Mesh sourceMesh, UnityEngine.Material[] sourceMaterials, UnityEngine.ProBuilder.ProBuilderMesh destination)

Disassembly:
	0x03974F40 B 0x3974ED8
	0x03974F44 MOV X26, X31
	0x03974F48 MOVZ W29, 0x6
	0x03974F4C CBZ X23, 0x3974FB0
	0x03974F50 LDR X8, [X23]
	0x03974F54 ADRP X10, 0x77F000
	0x03974F58 LDRH W9, [X8 + 0x12E]
	0x03974F5C LDR X10, [X10 + 0xE00]
	0x03974F60 LDR X1, [X10]
	0x03974F64 CBZ X9, 0x3974F88
	0x03974F68 LDR X10, [X8 + 0xB0]
	0x03974F6C ADD X10, X10, 0x8
	0x03974F70 LDUR X11, [X10 - 0x8]
	0x03974F74 CMP X11, X1
	0x03974F78 B.EQ 0x3974F98
	0x03974F7C SUBS X9, X9, 0x1
	0x03974F80 ADD X10, X10, 0x10
	0x03974F84 B.NE 0x3974F70
	0x03974F88 MOV X0, X23
	0x03974F8C MOV W2, W31
	0x03974F90 BL 0x1C5C788
	0x03974F94 B 0x3974FA4
	0x03974F98 LDRSW X9, [X10]
	0x03974F9C ADD X8, X8, X9, 0x4, LSL
	0x03974FA0 ADD X0, X8, 0x138
	0x03974FA4 LDP X8, X1, [X0]
	0x03974FA8 MOV X0, X23
	0x03974FAC BLR X8
	0x03974FB0 CBNZ X26, 0x39753D4
	0x03974FB4 CMP W29, 0x6
	0x03974FB8 B.EQ 0x3974FC0
	0x03974FBC CBNZ W29, 0x3975350
	0x03974FC0 LDR W8, [X24 + 0x18]
	0x03974FC4 ADD W25, W25, 0x1
	0x03974FC8 CMP W25, W8
	0x03974FCC B.LT 0x3974E9C
	0x03974FD0 B 0x3975028
	0x03974FD4 BL 0x1C16F20
	0x03974FD8 B 0x397542C
	0x03974FDC BL 0x1C16F20
	0x03974FE0 B 0x397542C
	0x03974FE4 BL 0x1C16F20
	0x03974FE8 B 0x397542C
	0x03974FEC B 0x3975008
	0x03974FF0 B 0x3975008
	0x03974FF4 B 0x3975008
	0x03974FF8 B 0x3975008
	0x03974FFC B 0x3975008
	0x03975000 B 0x3975008
	0x03975004 B 0x3975008
	0x03975008 CMP W1, 0x1
	0x0397500C B.NE 0x3975420
	0x03975010 BL 0x3EB1AD0
	0x03975014 LDR X26, [X0]
	0x03975018 BL 0x3EB1AE0
	0x0397501C MOV W29, W31
	0x03975020 CBNZ X23, 0x3974F50
	0x03975024 B 0x3974FB0
	0x03975028 ADRP X8, 0x7DB000
	0x0397502C LDR X8, [X8 + 0x90]
	0x03975030 ADRP X23, 0x7DB000
	0x03975034 ADRP X25, 0x7D9000
	0x03975038 ADRP X27, 0x7D9000
	0x0397503C ADRP X26, 0x7D9000
	0x03975040 LDR X23, [X23 + 0x88]
	0x03975044 LDR X25, [X25 + 0xDB0]
	0x03975048 LDR X27, [X27 + 0xDA0]
	0x0397504C LDR X26, [X26 + 0x888]
	0x03975050 LDR X0, [X8]
	0x03975054 ADRP X29, 0x7DB000
	0x03975058 ADRP X19, 0x7D8000
	0x0397505C LDR X29, [X29 + 0x68]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xA6E000
	009 Move X23, 0x780000
	010 Move W8, [X24+2561]
	011 Move X23, [X23+1432]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x780000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2561], W8
	025 Move X0, X21
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X22
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {65}
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {72}
	054 Move [X21+16], X22
	055 Move [X21+24], X20
	056 Move [X21+32], X19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Return 
	065 Move X0, 0x785000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x7DC000
	071 Move X0, [X0+24]
	072 Move X0, 0x784000
	073 Move X0, [X0+1320]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x7AE000
	078 Move X0, [X0+632]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Move X2, X31
	083 Call ArgumentNullException..ctor, X0, X1
	084 Move X0, 0x7DC000
	085 Move X0, [X0+32]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Call 0x1C17DEC

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh destination)

Disassembly:
	0x03975060 LDR X19, [X19 + 0xE28]
	0x03975064 BL 0x1C16F10
	0x03975068 LDR X1, [X23]
	0x0397506C MOV X23, X26
	0x03975070 STR X0, [X31]
	0x03975074 BL 0x2F32EB4
	0x03975078 LDR X1, [X25]
	0x0397507C ADD X8, X31, 0x8
	0x03975080 MOV X0, X24
	0x03975084 BL 0x301CB58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+32], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean Import(UnityEngine.GameObject go, UnityEngine.ProBuilder.MeshOperations.MeshImportSettings importSettings = null)

Disassembly:
	0x03975088 LDUR V0, [X31 + 0x8]
	0x0397508C LDR X8, [X31 + 0x18]
	0x03975090 STR V0, [X31 + 0x2]
	0x03975094 STR X8, [X31 + 0x30]
	0x03975098 LDR X1, [X27]
	0x0397509C ADD X0, X31, 0x20
	0x039750A0 BL 0x2BC4350
	0x039750A4 TBZ X0, 0x0, 0x397530C
	0x039750A8 LDR X25, [X31 + 0x30]
	0x039750AC CBZ X25, 0x39753CC
	0x039750B0 CBZ X21, 0x39753D0
	0x039750B4 LDR X1, [X25 + 0x20]
	0x039750B8 LDR X2, [X23]
	0x039750BC MOV X0, X21
	0x039750C0 BL 0x2DBEF30
	0x039750C4 TBZ X0, 0x0, 0x3975098
	0x039750C8 ADRP X8, 0x7D9000
	0x039750CC LDR X8, [X8 + 0xDD0]
	0x039750D0 LDR X0, [X8]
	0x039750D4 BL 0x1C16F10
	0x039750D8 MOV X24, X0
	0x039750DC MOV X1, X25
	0x039750E0 MOV X2, X31
	0x039750E4 BL 0x3943870
	0x039750E8 CBZ X24, 0x39752B8
	0x039750EC MOV X26, X31
	0x039750F0 FMOV S8, W31
	0x039750F4 MOV X0, X24
	0x039750F8 MOV X1, X31
	0x039750FC BL 0x3943898
	0x03975100 TBZ X0, 0x0, 0x397518C
	0x03975104 MOV X0, X24
	0x03975108 MOV X1, X31
	0x0397510C BL 0x39438DC
	0x03975110 MOV X27, X0
	0x03975114 CBZ X0, 0x39752A8
	0x03975118 LDR X8, [X27 + 0x38]
	0x0397511C CBZ X8, 0x3975134
	0x03975120 LDR X1, [X8 + 0x20]
	0x03975124 LDR X2, [X19]
	0x03975128 MOV X0, X21
	0x0397512C BL 0x2DBE4B0
	0x03975130 TBNZ X0, 0x0, 0x39750F4
	0x03975134 CBZ X22, 0x39752B0
	0x03975138 LDP X1, X2, [X27 + 0x10]
	0x0397513C LDR X4, [X29]
	0x03975140 ADD X3, X31, 0x4C
	0x03975144 MOV X0, X22
	0x03975148 BL 0x29E40D8
	0x0397514C LDR V0, [X31 + 0x4C]
	0x03975150 FCMP S0, S8
	0x03975154 CSET W8, GT
	0x03975158 AND W8, W0, W8, 0x0
	0x0397515C TBZ X8, 0x0, 0x39750F4
	0x03975160 LDR X28, [X25 + 0x20]
	0x03975164 LDR X0, [X27 + 0x38]
	0x03975168 MOV X1, X22
	0x0397516C BL 0x3978F90
	0x03975170 CMP X28, X0
	0x03975174 B.NE 0x39750F4
	0x03975178 LDR X8, [X27 + 0x38]
	0x0397517C CBZ X8, 0x39752C0
	0x03975180 LDR V8, [X31 + 0x4C]
	0x03975184 LDR X26, [X8 + 0x20]
	0x03975188 B 0x39750F4
	0x0397518C MOV X27, X31
	0x03975190 MOVZ W28, 0xC
	0x03975194 CBZ X24, 0x39751F8
	0x03975198 LDR X8, [X24]
	0x0397519C ADRP X10, 0x77E000
	0x039751A0 LDRH W9, [X8 + 0x12E]
	0x039751A4 LDR X10, [X10 + 0xE00]
	0x039751A8 LDR X1, [X10]
	0x039751AC CBZ X9, 0x39751D0
	0x039751B0 LDR X10, [X8 + 0xB0]
	0x039751B4 ADD X10, X10, 0x8
	0x039751B8 LDUR X11, [X10 - 0x8]
	0x039751BC CMP X11, X1
	0x039751C0 B.EQ 0x39751E0
	0x039751C4 SUBS X9, X9, 0x1
	0x039751C8 ADD X10, X10, 0x10
	0x039751CC B.NE 0x39751B8
	0x039751D0 MOV X0, X24
	0x039751D4 MOV W2, W31
	0x039751D8 BL 0x1C5C788
	0x039751DC B 0x39751EC
	0x039751E0 LDRSW X9, [X10]
	0x039751E4 ADD X8, X8, X9, 0x4, LSL
	0x039751E8 ADD X0, X8, 0x138
	0x039751EC LDP X8, X1, [X0]
	0x039751F0 MOV X0, X24
	0x039751F4 BLR X8
	0x039751F8 CBNZ X27, 0x397540C
	0x039751FC CMP W28, 0xC
	0x03975200 B.EQ 0x3975208
	0x03975204 CBNZ W28, 0x397533C
	0x03975208 ADRP X27, 0x7D9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA6D000
	007 Move W8, [X22+2562]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x781000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move X0, 0x786000
	019 Move X0, [X0+1920]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2562], W8
	023 Compare X21, 0
	024 JumpIfEqual {55}
	025 Move X8, 0x781000
	026 Move X8, [X8+360]
	027 Move X1, [X8]
	028 Move X0, X21
	029 Call 0x21E62E4, X0
	030 Compare X0, 0
	031 JumpIfEqual {56}
	032 Move X1, X31
	033 Call MeshFilter.get_sharedMesh, X0
	034 Move X8, 0x786000
	035 Move X8, [X8+1920]
	036 Move [X20+16], X0
	037 Move X1, [X8]
	038 Move X0, X21
	039 Call 0x21E62E4, X0
	040 Compare X0, 0
	041 JumpIfEqual {44}
	042 Move X1, X31
	043 Call Renderer.get_sharedMaterials, X0
	044 Move [X20+24], X0
	045 Move X0, X20
	046 Move X1, X19
	047 Call MeshImporter.Import, X0, X1
	048 Move W0, 1
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C17F20
	057 Move X19, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X19
	060 Call 0x3EB2AD0
	061 Move X19, X0
	062 Move X0, 0x77F000
	063 Move X0, [X0+2000]
	064 Call 0x1C17D08
	065 Move X8, [X19]
	066 Move X1, [X8]
	067 Call 0x1C18270
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {93}
	072 Move X19, [X19]
	073 Call 0x3EB2AE0
	074 Compare X19, 0
	075 JumpIfEqual {101}
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X9, [X8+360]
	079 Move X1, [X8+368]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X19, X0
	082 Move X0, 0x7D9000
	083 Move X0, [X0+2768]
	084 Call 0x1C17D08
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X1, X31
	091 Call Log.Error, X0
	092 Move W0, W31
	093 Move W0, 8
	094 Call 0x3EB2AF0
	095 Move X8, [X19]
	096 Move [X0], X8
	097 Move X1, 0x540000
	098 Add X1, X1, 3672
	099 Move X2, X31
	100 Call 0x3EB2B00
	101 Call 0x1C17F20
	102 Move X19, X0
	103 Call 0x3EB2AE0
	104 Move X0, X19
	105 Call 0x1D2D690
	106 Call 0x1991590

Method: System.Void Import(UnityEngine.ProBuilder.MeshOperations.MeshImportSettings importSettings = null)

Disassembly:
	0x0397520C LDR X27, [X27 + 0xDA0]
	0x03975210 CBZ X26, 0x3975098
	0x03975214 LDR X2, [X23]
	0x03975218 MOV X0, X21
	0x0397521C MOV X1, X26
	0x03975220 BL 0x2DBEF30
	0x03975224 ADRP X8, 0x7DB000
	0x03975228 LDR X1, [X25 + 0x20]
	0x0397522C LDR X8, [X8 + 0x98]
	0x03975230 STP X31, X31, [X31 + 0x8]
	0x03975234 LDR X3, [X8]
	0x03975238 ADD X0, X31, 0x8
	0x0397523C MOV X2, X26
	0x03975240 BL 0x25E6D3C
	0x03975244 LDR X0, [X31]
	0x03975248 CBZ X0, 0x3975414
	0x0397524C ADRP X9, 0x7DB000
	0x03975250 LDP X1, X2, [X31 + 0x8]
	0x03975254 LDR W10, [X0 + 0x1C]
	0x03975258 LDR X8, [X0 + 0x10]
	0x0397525C LDR X9, [X9 + 0x80]
	0x03975260 ADD W10, W10, 0x1
	0x03975264 LDR X9, [X9]
	0x03975268 STR W10, [X0 + 0x1C]
	0x0397526C CBZ X8, 0x3975418
	0x03975270 LDRSW X10, [X0 + 0x18]
	0x03975274 LDR W11, [X8 + 0x18]
	0x03975278 CMP W10, W11
	0x0397527C B.CS 0x3975294
	0x03975280 ADD W9, W10, 0x1
	0x03975284 ADD X8, X8, X10, 0x4, LSL
	0x03975288 STR W9, [X0 + 0x18]
	0x0397528C STP X1, X2, [X8 + 0x20]
	0x03975290 B 0x3975098
	0x03975294 LDR X8, [X9 + 0x20]
	0x03975298 LDR X8, [X8 + 0xC0]
	0x0397529C LDR X3, [X8 + 0x70]
	0x039752A0 BL 0x2F336C0
	0x039752A4 B 0x3975098
	0x039752A8 BL 0x1C16F20
	0x039752AC B 0x397542C
	0x039752B0 BL 0x1C16F20
	0x039752B4 B 0x397542C
	0x039752B8 BL 0x1C16F20
	0x039752BC B 0x397542C
	0x039752C0 BL 0x1C16F20
	0x039752C4 B 0x397542C
	0x039752C8 B 0x39752EC
	0x039752CC B 0x39752D8
	0x039752D0 B 0x39752EC
	0x039752D4 B 0x39752EC
	0x039752D8 MOV X26, X31
	0x039752DC B 0x39752EC
	0x039752E0 B 0x39752EC
	0x039752E4 B 0x39752EC
	0x039752E8 B 0x39752EC
	0x039752EC CMP W1, 0x1
	0x039752F0 B.NE 0x3975374
	0x039752F4 BL 0x3EB1AD0
	0x039752F8 LDR X27, [X0]
	0x039752FC BL 0x3EB1AE0
	0x03975300 MOV W28, W31
	0x03975304 CBNZ X24, 0x3975198
	0x03975308 B 0x39751F8
	0x0397530C ADRP X8, 0x7D9000
	0x03975310 LDR X8, [X8 + 0xD98]
	0x03975314 ADD X0, X31, 0x20
	0x03975318 LDR X1, [X8]
	0x0397531C BL 0x2BC434C
	0x03975320 LDR X19, [X31]
	0x03975324 LDR W8, [X31 + 0x48]
	0x03975328 MOV X0, X20
	0x0397532C MOV X1, X19
	0x03975330 AND W2, W8, 0x1
	0x03975334 BL 0x39729C4
	0x03975338 B 0x3975350
	0x0397533C ADRP X8, 0x7D9000
	0x03975340 LDR X8, [X8 + 0xD98]
	0x03975344 ADD X0, X31, 0x20
	0x03975348 LDR X1, [X8]
	0x0397534C BL 0x2BC434C
	0x03975350 LDP X20, X19, [X31 + 0xA0]
	0x03975354 LDP X22, X21, [X31 + 0x90]
	0x03975358 LDP X24, X23, [X31 + 0x80]
	0x0397535C LDP X26, X25, [X31 + 0x70]
	0x03975360 LDP X28, X27, [X31 + 0x60]
	0x03975364 LDP X29, X30, [X31 + 0x50]
	0x03975368 LDR V8, [X31 + 0x40]
	0x0397536C ADD X31, X31, 0xB0
	0x03975370 RET
	0x03975374 MOV X21, X1
	0x03975378 MOV X22, X0
	0x0397537C MOV X27, X31
	0x03975380 CBZ X24, 0x39753F4
	0x03975384 LDR X8, [X24]
	0x03975388 ADRP X10, 0x77E000
	0x0397538C LDRH W9, [X8 + 0x12E]
	0x03975390 LDR X10, [X10 + 0xE00]
	0x03975394 LDR X1, [X10]
	0x03975398 CBZ X9, 0x39753BC
	0x0397539C LDR X10, [X8 + 0xB0]
	0x039753A0 ADD X10, X10, 0x8
	0x039753A4 LDUR X11, [X10 - 0x8]
	0x039753A8 CMP X11, X1
	0x039753AC B.EQ 0x39753DC
	0x039753B0 SUBS X9, X9, 0x1
	0x039753B4 ADD X10, X10, 0x10
	0x039753B8 B.NE 0x39753A4
	0x039753BC MOV X0, X24
	0x039753C0 MOV W2, W31
	0x039753C4 BL 0x1C5C788
	0x039753C8 B 0x39753E8
	0x039753CC BL 0x1C16F20
	0x039753D0 BL 0x1C16F20
	0x039753D4 MOV X0, X26
	0x039753D8 BL 0x1C16F18
	0x039753DC LDRSW X9, [X10]
	0x039753E0 ADD X8, X8, X9, 0x4, LSL
	0x039753E4 ADD X0, X8, 0x138
	0x039753E8 LDP X8, X1, [X0]
	0x039753EC MOV X0, X24
	0x039753F0 BLR X8
	0x039753F4 LDR X19, [X31]
	0x039753F8 MOV X0, X22
	0x039753FC MOV X1, X21
	0x03975400 CBZ X27, 0x39754E0
	0x03975404 MOV X0, X27
	0x03975408 BL 0x1C16F18
	0x0397540C MOV X0, X27
	0x03975410 BL 0x1C16F18
	0x03975414 BL 0x1C16F20
	0x03975418 BL 0x1C16F20
	0x0397541C BL 0x1C16F20
	0x03975420 MOV X19, X0
	0x03975424 MOV X26, X31
	0x03975428 B 0x3975440
	0x0397542C MOV X21, X1
	0x03975430 MOV X22, X0
	0x03975434 CBNZ X24, 0x3975384
	0x03975438 B 0x39753F4
	0x0397543C MOV X19, X0
	0x03975440 CBZ X23, 0x39754A4
	0x03975444 LDR X8, [X23]
	0x03975448 ADRP X10, 0x77E000
	0x0397544C LDRH W9, [X8 + 0x12E]
	0x03975450 LDR X10, [X10 + 0xE00]
	0x03975454 LDR X1, [X10]
	0x03975458 CBZ X9, 0x397547C
	0x0397545C LDR X10, [X8 + 0xB0]
	0x03975460 ADD X10, X10, 0x8
	0x03975464 LDUR X11, [X10 - 0x8]
	0x03975468 CMP X11, X1
	0x0397546C B.EQ 0x397548C
	0x03975470 SUBS X9, X9, 0x1
	0x03975474 ADD X10, X10, 0x10
	0x03975478 B.NE 0x3975464
	0x0397547C MOV X0, X23
	0x03975480 MOV W2, W31
	0x03975484 BL 0x1C5C788
	0x03975488 B 0x3975498
	0x0397548C LDRSW X9, [X10]
	0x03975490 ADD X8, X8, X9, 0x4, LSL
	0x03975494 ADD X0, X8, 0x138
	0x03975498 LDP X8, X1, [X0]
	0x0397549C MOV X0, X23
	0x039754A0 BLR X8
	0x039754A4 CBNZ X26, 0x39754B0
	0x039754A8 MOV X0, X19
	0x039754AC BL 0x1D2C690
	0x039754B0 MOV X0, X26
	0x039754B4 BL 0x1C16F18
	0x039754B8 B 0x39754DC
	0x039754BC B 0x39754DC
	0x039754C0 B 0x39754DC
	0x039754C4 B 0x39754DC
	0x039754C8 B 0x39754DC
	0x039754CC B 0x39754DC
	0x039754D0 B 0x39754DC
	0x039754D4 B 0x39754DC
	0x039754D8 B 0x39754DC
	0x039754DC LDR X19, [X31]
	0x039754E0 CMP W1, 0x1
	0x039754E4 B.NE 0x3975514
	0x039754E8 BL 0x3EB1AD0
	0x039754EC LDR X21, [X0]
	0x039754F0 BL 0x3EB1AE0
	0x039754F4 ADRP X8, 0x7D9000
	0x039754F8 LDR X8, [X8 + 0xD98]
	0x039754FC ADD X0, X31, 0x20
	0x03975500 LDR X1, [X8]
	0x03975504 BL 0x2BC434C
	0x03975508 CBZ X21, 0x3975324
	0x0397550C MOV X0, X21
	0x03975510 BL 0x1C16F18
	0x03975514 MOV X19, X0
	0x03975518 MOV X21, X31
	0x0397551C B 0x3975524
	0x03975520 MOV X19, X0
	0x03975524 ADRP X8, 0x7D9000
	0x03975528 LDR X8, [X8 + 0xD98]
	0x0397552C LDR X1, [X8]
	0x03975530 ADD X0, X31, 0x20
	0x03975534 BL 0x2BC434C
	0x03975538 CBZ X21, 0x39754A8
	0x0397553C MOV X0, X21
	0x03975540 BL 0x1C16F18
	0x03975544 BL 0x1990590
	0x03975548 STR X30, [X31 - 0x30]!
	0x0397554C STP X22, X21, [X31 + 0x10]
	0x03975550 STP X20, X19, [X31 + 0x20]
	0x03975554 ADRP X19, 0xA6C000
	0x03975558 ADRP X21, 0x7DB000
	0x0397555C ADRP X20, 0x7DB000
	0x03975560 LDRB W8, [X19 + 0xA04]
	0x03975564 LDR X21, [X21 + 0xA0]
	0x03975568 LDR X20, [X20 + 0x30]
	0x0397556C TBNZ X8, 0x0, 0x3975590
	0x03975570 ADRP X0, 0x7DB000
	0x03975574 LDR X0, [X0 + 0xA0]
	0x03975578 BL 0x1C16CF4
	0x0397557C ADRP X0, 0x7DB000
	0x03975580 LDR X0, [X0 + 0x30]
	0x03975584 BL 0x1C16CF4
	0x03975588 MOVZ W8, 0x1
	0x0397558C STRB W8, [X19 + 0xA04]
	0x03975590 LDR X0, [X21]
	0x03975594 BL 0x1C16F10
	0x03975598 MOVZ W21, 0x101
	0x0397559C MOVZ W22, 0x3F800000
	0x039755A0 MOV X1, X31
	0x039755A4 MOV X19, X0
	0x039755A8 STRH W21, [X0 + 0x10]
	0x039755AC STR W22, [X0 + 0x14]
	0x039755B0 BL 0x33BDD8C
	0x039755B4 STRH W21, [X19 + 0x10]
	0x039755B8 STR W22, [X19 + 0x14]
	0x039755BC LDR X8, [X20]
	0x039755C0 LDP X22, X21, [X31 + 0x10]
	0x039755C4 LDR X8, [X8 + 0xB8]
	0x039755C8 STR X19, [X8]
	0x039755CC LDP X20, X19, [X31 + 0x20]
	0x039755D0 LDR X30, [X31], #0x30
	0x039755D4 RET
	0x039755D8 STR X30, [X31 - 0x20]!
	0x039755DC STP X20, X19, [X31 + 0x10]
	0x039755E0 ADRP X19, 0xA6C000
	0x039755E4 ADRP X20, 0x7DB000
	0x039755E8 LDRB W8, [X19 + 0xA05]
	0x039755EC LDR X20, [X20 + 0x40]
	0x039755F0 TBNZ X8, 0x0, 0x3975608
	0x039755F4 ADRP X0, 0x7DB000
	0x039755F8 LDR X0, [X0 + 0x40]
	0x039755FC BL 0x1C16CF4
	0x03975600 MOVZ W8, 0x1
	0x03975604 STRB W8, [X19 + 0xA05]
	0x03975608 LDR X0, [X20]
	0x0397560C BL 0x1C16F10
	0x03975610 MOV X1, X31
	0x03975614 MOV X19, X0
	0x03975618 BL 0x33BDD8C
	0x0397561C LDR X8, [X20]
	0x03975620 LDR X8, [X8 + 0xB8]
	0x03975624 STR X19, [X8]
	0x03975628 LDP X20, X19, [X31 + 0x10]
	0x0397562C LDR X30, [X31], #0x20
	0x03975630 RET
	0x03975634 MOV X1, X31
	0x03975638 B 0x33BDD8C
	0x0397563C STR X30, [X31 - 0x10]!
	0x03975640 CBZ X1, 0x3975654
	0x03975644 LDP S0, S1, [X1 + 0x2C]
	0x03975648 LDR V2, [X1 + 0x34]
	0x0397564C LDR X30, [X31], #0x10
	0x03975650 RET
	0x03975654 BL 0x1C16F20
	0x03975658 SUB X31, X31, 0x70
	0x0397565C STP D13, D12, [X31 + 0x20]
	0x03975660 STP D11, D10, [X31 + 0x30]
	0x03975664 STP D9, D8, [X31 + 0x40]
	0x03975668 STR X30, [X31 + 0x50]
	0x0397566C STP X20, X19, [X31 + 0x60]
	0x03975670 MOV W20, W1
	0x03975674 ADD X8, X31, 0x8
	0x03975678 MOV X1, X31
	0x0397567C MOV X19, X0
	0x03975680 BL 0x3912BE4
	0x03975684 CBZ X19, 0x39756EC
	0x03975688 LDP S8, S9, [X31 + 0x8]
	0x0397568C LDP S10, S11, [X31 + 0x10]
	0x03975690 LDP S12, S13, [X31 + 0x18]
	0x03975694 MOV X0, X19
	0x03975698 MOV X1, X31
	0x0397569C BL 0x3C32E90
	0x039756A0 CBZ X0, 0x39756EC
	0x039756A4 FSUB S0, S10, S13
	0x039756A8 CMP W20, 0x0
	0x039756AC FSUB S1, S9, S12
	0x039756B0 FSUB S3, S8, S11
	0x039756B4 FCSEL S2, S10, S0, EQ
	0x039756B8 FCSEL S1, S9, S1, EQ
	0x039756BC FCSEL S0, S8, S3, EQ
	0x039756C0 MOV X1, X31
	0x039756C4 BL 0x3C3DE4C
	0x039756C8 MOV X0, X19
	0x039756CC BL 0x39756F0
	0x039756D0 LDP X20, X19, [X31 + 0x60]
	0x039756D4 LDR X30, [X31 + 0x50]
	0x039756D8 LDP D9, D8, [X31 + 0x40]
	0x039756DC LDP D11, D10, [X31 + 0x30]
	0x039756E0 LDP D13, D12, [X31 + 0x20]
	0x039756E4 ADD X31, X31, 0x70
	0x039756E8 RET
	0x039756EC BL 0x1C16F20
	0x039756F0 STP D13, D12, [X31 - 0x50]!
	0x039756F4 STP D11, D10, [X31 + 0x10]
	0x039756F8 STP D9, D8, [X31 + 0x20]
	0x039756FC STP X30, X21, [X31 + 0x30]
	0x03975700 STP X20, X19, [X31 + 0x40]
	0x03975704 ADRP X20, 0xA6C000
	0x03975708 ADRP X21, 0x77E000
	0x0397570C LDRB W8, [X20 + 0xA07]
	0x03975710 LDR X21, [X21 + 0x598]
	0x03975714 MOV V10.16B, V2.16B
	0x03975718 MOV V9.16B, V1.16B
	0x0397571C MOV V8.16B, V0.16B
	0x03975720 MOV X19, X0
	0x03975724 TBNZ X8, 0x0, 0x3975748
	0x03975728 ADRP X0, 0x77E000
	0x0397572C LDR X0, [X0 + 0x598]
	0x03975730 BL 0x1C16CF4
	0x03975734 ADRP X0, 0x7D9000
	0x03975738 LDR X0, [X0 + 0xF88]
	0x0397573C BL 0x1C16CF4
	0x03975740 MOVZ W8, 0x1
	0x03975744 STRB W8, [X20 + 0xA07]
	0x03975748 LDR X0, [X21]
	0x0397574C LDR W8, [X0 + 0xE0]
	0x03975750 CBNZ W8, 0x3975758
	0x03975754 BL 0x1C16DFC
	0x03975758 MOV X0, X19
	0x0397575C MOV X1, X31
	0x03975760 MOV X2, X31
	0x03975764 BL 0x3C3883C
	0x03975768 TBNZ X0, 0x0, 0x397583C
	0x0397576C CBZ X19, 0x3975838
	0x03975770 MOV X0, X19
	0x03975774 MOV X1, X31
	0x03975778 BL 0x3C32E90
	0x0397577C CBZ X0, 0x3975838
	0x03975780 MOV X1, X31
	0x03975784 MOV X20, X0
	0x03975788 BL 0x3C3F58C
	0x0397578C MOV V11.16B, V0.16B
	0x03975790 MOV V12.16B, V1.16B
	0x03975794 MOV V13.16B, V2.16B
	0x03975798 MOV X0, X20
	0x0397579C MOV V0.16B, V8.16B
	0x039757A0 MOV V1.16B, V9.16B
	0x039757A4 MOV V2.16B, V10.16B
	0x039757A8 MOV X1, X31
	0x039757AC BL 0x3C3F62C
	0x039757B0 MOV X0, X19
	0x039757B4 MOV W1, W31
	0x039757B8 MOV X2, X31
	0x039757BC BL 0x39197E8
	0x039757C0 MOV X0, X19
	0x039757C4 MOV X1, X31
	0x039757C8 BL 0x3912CAC
	0x039757CC CBZ X0, 0x3975838
	0x039757D0 ADRP X20, 0x7D9000
	0x039757D4 LDR X20, [X20 + 0xF88]
	0x039757D8 MOV X1, X31
	0x039757DC BL 0x3C18F3C
	0x039757E0 LDR X8, [X20]
	0x039757E4 MOV X20, X0
	0x039757E8 LDR W9, [X8 + 0xE0]
	0x039757EC CBNZ W9, 0x39757F8
	0x039757F0 MOV X0, X8
	0x039757F4 BL 0x1C16DFC
	0x039757F8 FSUB S2, S13, S10
	0x039757FC FSUB S1, S12, S9
	0x03975800 FSUB S0, S11, S8
	0x03975804 MOV X0, X19
	0x03975808 MOV X1, X20
	0x0397580C MOV X2, X31
	0x03975810 BL 0x3940A74
	0x03975814 MOV X0, X19
	0x03975818 LDP X20, X19, [X31 + 0x40]
	0x0397581C LDP X30, X21, [X31 + 0x30]
	0x03975820 LDP D9, D8, [X31 + 0x20]
	0x03975824 LDP D11, D10, [X31 + 0x10]
	0x03975828 MOVZ W1, 0x1F
	0x0397582C MOV X2, X31
	0x03975830 LDP D13, D12, [X31], #0x50
	0x03975834 B 0x3919D94
	0x03975838 BL 0x1C16F20
	0x0397583C ADRP X0, 0x783000
	0x03975840 LDR X0, [X0 + 0x528]
	0x03975844 BL 0x1C16D08
	0x03975848 BL 0x1C16F10
	0x0397584C MOV X19, X0
	0x03975850 ADRP X0, 0x7D8000
	0x03975854 LDR X0, [X0 + 0xE90]
	0x03975858 BL 0x1C16D08
	0x0397585C MOV X1, X0
	0x03975860 MOV X0, X19
	0x03975864 MOV X2, X31
	0x03975868 BL 0x330E100
	0x0397586C ADRP X0, 0x7DB000
	0x03975870 LDR X0, [X0 + 0xA8]
	0x03975874 BL 0x1C16D08
	0x03975878 MOV X1, X0
	0x0397587C MOV X0, X19
	0x03975880 BL 0x1C16DEC
	0x03975884 STP D9, D8, [X31 - 0x40]!
	0x03975888 STR X30, [X31 + 0x10]
	0x0397588C STP X22, X21, [X31 + 0x20]
	0x03975890 STP X20, X19, [X31 + 0x30]
	0x03975894 ADRP X20, 0xA6C000
	0x03975898 ADRP X21, 0x77E000
	0x0397589C LDRB W8, [X20 + 0xA08]
	0x039758A0 LDR X21, [X21 + 0x598]
	0x039758A4 MOV X19, X0
	0x039758A8 TBNZ X8, 0x0, 0x39758C0
	0x039758AC ADRP X0, 0x77E000
	0x039758B0 LDR X0, [X0 + 0x598]
	0x039758B4 BL 0x1C16CF4
	0x039758B8 MOVZ W8, 0x1
	0x039758BC STRB W8, [X20 + 0xA08]
	0x039758C0 LDR X0, [X21]
	0x039758C4 LDR W8, [X0 + 0xE0]
	0x039758C8 CBNZ W8, 0x39758D0
	0x039758CC BL 0x1C16DFC
	0x039758D0 MOV X0, X19
	0x039758D4 MOV X1, X31
	0x039758D8 MOV X2, X31
	0x039758DC BL 0x3C3883C
	0x039758E0 TBNZ X0, 0x0, 0x397599C
	0x039758E4 CBZ X19, 0x3975998
	0x039758E8 LDR X20, [X19 + 0x58]
	0x039758EC CBZ X20, 0x3975998
	0x039758F0 LDR X8, [X20 + 0x18]
	0x039758F4 CMP W8, 0x1
	0x039758F8 B.LT 0x3975960
	0x039758FC MOV X21, X31
	0x03975900 AND X8, X8, 0x0
	0x03975904 ADD X22, X20, 0x28
	0x03975908 CMP X21, W8, UXTW
	0x0397590C B.CS 0x3975994
	0x03975910 LDUR V8, [X22 - 0x8]
	0x03975914 LDR V9, [X22]
	0x03975918 MOV X0, X19
	0x0397591C MOV X1, X31
	0x03975920 BL 0x3C32E90
	0x03975924 CBZ X0, 0x3975998
	0x03975928 MOV X1, X31
	0x0397592C BL 0x3C3FBAC
	0x03975930 LDR W8, [X20 + 0x18]
	0x03975934 CMP X21, X8
	0x03975938 B.CS 0x3975994
	0x0397593C MOV V0.S[1], V1.S[0]
	0x03975940 FMUL S2, S9, S2
	0x03975944 ADD X21, X21, 0x1
	0x00000000 INVALID
	0x0397594C STR S2, [X22]
	0x03975950 CMP X21, W8, SXTW
	0x03975954 STUR D0, [X22 - 0x8]
	0x03975958 ADD X22, X22, 0xC
	0x0397595C B.LT 0x3975908
	0x03975960 MOV X0, X19
	0x03975964 MOV X1, X31
	0x03975968 BL 0x3C32E90
	0x0397596C CBZ X0, 0x3975998
	0x03975970 LDP X20, X19, [X31 + 0x30]
	0x03975974 LDP X22, X21, [X31 + 0x20]
	0x03975978 LDR X30, [X31 + 0x10]
	0x0397597C FMOV S0, 1
	0x03975980 FMOV S1, 1
	0x03975984 FMOV S2, 1
	0x03975988 MOV X1, X31
	0x0397598C LDP D9, D8, [X31], #0x40
	0x03975990 B 0x3C3FC4C
	0x03975994 BL 0x1C16F28
	0x03975998 BL 0x1C16F20
	0x0397599C ADRP X0, 0x783000
	0x039759A0 LDR X0, [X0 + 0x528]
	0x039759A4 BL 0x1C16D08
	0x039759A8 BL 0x1C16F10
	0x039759AC MOV X19, X0
	0x039759B0 ADRP X0, 0x7D8000
	0x039759B4 LDR X0, [X0 + 0xE90]
	0x039759B8 BL 0x1C16D08
	0x039759BC MOV X1, X0
	0x039759C0 MOV X0, X19
	0x039759C4 MOV X2, X31
	0x039759C8 BL 0x330E100
	0x039759CC ADRP X0, 0x7DB000
	0x039759D0 LDR X0, [X0 + 0xB0]
	0x039759D4 BL 0x1C16D08
	0x039759D8 MOV X1, X0
	0x039759DC MOV X0, X19
	0x039759E0 BL 0x1C16DEC
	0x039759E4 STR X30, [X31 - 0x10]!
	0x039759E8 CBZ X0, 0x39759F8
	0x039759EC LDR X1, [X0 + 0x28]
	0x039759F0 LDR X30, [X31], #0x10
	0x039759F4 B 0x39759FC
	0x039759F8 BL 0x1C16F20
	0x039759FC SUB X31, X31, 0x70
	0x03975A00 STR X30, [X31 + 0x10]
	0x03975A04 STP X28, X27, [X31 + 0x20]
	0x03975A08 STP X26, X25, [X31 + 0x30]
	0x03975A0C STP X24, X23, [X31 + 0x40]
	0x03975A10 STP X22, X21, [X31 + 0x50]
	0x03975A14 STP X20, X19, [X31 + 0x60]
	0x03975A18 ADRP X21, 0xA6C000
	0x03975A1C LDRB W8, [X21 + 0xA09]
	0x03975A20 MOV X19, X1
	0x03975A24 MOV X20, X0
	0x03975A28 TBNZ X8, 0x0, 0x3975A70
	0x03975A2C ADRP X0, 0x77E000
	0x03975A30 LDR X0, [X0 + 0xE00]
	0x03975A34 BL 0x1C16CF4
	0x03975A38 ADRP X0, 0x7D8000
	0x03975A3C LDR X0, [X0 + 0xDB0]
	0x03975A40 BL 0x1C16CF4
	0x03975A44 ADRP X0, 0x7D8000
	0x03975A48 LDR X0, [X0 + 0xDB8]
	0x03975A4C BL 0x1C16CF4
	0x03975A50 ADRP X0, 0x77E000
	0x03975A54 LDR X0, [X0 + 0xE18]
	0x03975A58 BL 0x1C16CF4
	0x03975A5C ADRP X0, 0x785000
	0x03975A60 LDR X0, [X0 + 0x4B8]
	0x03975A64 BL 0x1C16CF4
	0x03975A68 MOVZ W8, 0x1
	0x03975A6C STRB W8, [X21 + 0xA09]
	0x03975A70 CBZ X20, 0x3975D58
	0x03975A74 CBZ X19, 0x3975D58
	0x03975A78 ADRP X10, 0x7D8000
	0x03975A7C LDR X8, [X19]
	0x03975A80 LDR X10, [X10 + 0xDB0]
	0x03975A84 LDR X20, [X20 + 0x58]
	0x03975A88 LDRH W9, [X8 + 0x12E]
	0x03975A8C LDR X1, [X10]
	0x03975A90 CBZ X9, 0x3975AB4
	0x03975A94 LDR X10, [X8 + 0xB0]
	0x03975A98 ADD X10, X10, 0x8
	0x03975A9C LDUR X11, [X10 - 0x8]
	0x03975AA0 CMP X11, X1
	0x03975AA4 B.EQ 0x3975AC4
	0x03975AA8 SUBS X9, X9, 0x1
	0x03975AAC ADD X10, X10, 0x10
	0x03975AB0 B.NE 0x3975A9C
	0x03975AB4 MOV X0, X19
	0x03975AB8 MOV W2, W31
	0x03975ABC BL 0x1C5C788
	0x03975AC0 B 0x3975AD0
	0x03975AC4 LDRSW X9, [X10]
	0x03975AC8 ADD X8, X8, X9, 0x4, LSL
	0x03975ACC ADD X0, X8, 0x138
	0x03975AD0 LDP X8, X1, [X0]
	0x03975AD4 ADRP X22, 0x77E000
	0x03975AD8 LDR X22, [X22 + 0xE00]
	0x03975ADC MOV X0, X19
	0x03975AE0 BLR X8
	0x03975AE4 MOV X19, X0
	0x03975AE8 CBZ X0, 0x3975D5C
	0x03975AEC ADRP X21, 0x77E000
	0x03975AF0 ADRP X23, 0x7D8000
	0x03975AF4 ADRP X25, 0x785000
	0x03975AF8 LDR X21, [X21 + 0xE18]
	0x03975AFC LDR X23, [X23 + 0xDB8]
	0x03975B00 LDR X25, [X25 + 0x4B8]
	0x03975B04 MOVZ W24, 0xC
	0x03975B08 LDR X8, [X19]
	0x03975B0C LDR X1, [X21]
	0x03975B10 LDRH W9, [X8 + 0x12E]
	0x03975B14 CBZ X9, 0x3975B38
	0x03975B18 LDR X10, [X8 + 0xB0]
	0x03975B1C ADD X10, X10, 0x8
	0x03975B20 LDUR X11, [X10 - 0x8]
	0x03975B24 CMP X11, X1
	0x03975B28 B.EQ 0x3975B48
	0x03975B2C SUBS X9, X9, 0x1
	0x03975B30 ADD X10, X10, 0x10
	0x03975B34 B.NE 0x3975B20
	0x03975B38 MOV X0, X19
	0x03975B3C MOV W2, W31
	0x03975B40 BL 0x1C5C788
	0x03975B44 B 0x3975B54
	0x03975B48 LDRSW X9, [X10]
	0x03975B4C ADD X8, X8, X9, 0x4, LSL
	0x03975B50 ADD X0, X8, 0x138
	0x03975B54 LDP X8, X1, [X0]
	0x03975B58 MOV X0, X19
	0x03975B5C BLR X8
	0x03975B60 TBZ X0, 0x0, 0x3975D24
	0x03975B64 LDR X8, [X19]
	0x03975B68 LDR X1, [X23]
	0x03975B6C LDRH W9, [X8 + 0x12E]
	0x03975B70 CBZ X9, 0x3975B94
	0x03975B74 LDR X10, [X8 + 0xB0]
	0x03975B78 ADD X10, X10, 0x8
	0x03975B7C LDUR X11, [X10 - 0x8]
	0x03975B80 CMP X11, X1
	0x03975B84 B.EQ 0x3975BA4
	0x03975B88 SUBS X9, X9, 0x1
	0x03975B8C ADD X10, X10, 0x10
	0x03975B90 B.NE 0x3975B7C
	0x03975B94 MOV X0, X19
	0x03975B98 MOV W2, W31
	0x03975B9C BL 0x1C5C788
	0x03975BA0 B 0x3975BB0
	0x03975BA4 LDRSW X9, [X10]
	0x03975BA8 ADD X8, X8, X9, 0x4, LSL
	0x03975BAC ADD X0, X8, 0x138
	0x03975BB0 LDP X8, X1, [X0]
	0x03975BB4 MOV X0, X19
	0x03975BB8 BLR X8
	0x03975BBC CBZ X0, 0x3975D50
	0x03975BC0 LDR X26, [X0 + 0x10]
	0x03975BC4 CBZ X26, 0x3975D54
	0x03975BC8 LDR W8, [X26 + 0x18]
	0x03975BCC CMP W8, 0x1
	0x03975BD0 B.LT 0x3975B08
	0x03975BD4 MOVZ W27, 0x2
	0x03975BD8 SUB W11, W27, 0x2
	0x03975BDC CMP W11, W8
	0x03975BE0 B.CS 0x3975D4C
	0x03975BE4 CBZ X20, 0x3975D34
	0x03975BE8 ADD X9, X26, W11, 0x2, SXTW
	0x03975BEC LDRSW X9, [X9 + 0x20]
	0x03975BF0 LDR W10, [X20 + 0x18]
	0x03975BF4 CMP W9, W10
	0x03975BF8 B.CS 0x3975D48
	0x03975BFC ADD W12, W11, 0x1
	0x03975C00 CMP W12, W8
	0x03975C04 B.CS 0x3975D44
	0x03975C08 SUB W11, W27, 0x1
	0x03975C0C ADD X11, X26, W11, 0x2, SXTW
	0x03975C10 LDRSW X11, [X11 + 0x20]
	0x03975C14 CMP W11, W10
	0x03975C18 B.CS 0x3975D40
	0x03975C1C ADD W28, W12, 0x1
	0x03975C20 CMP W28, W8
	0x03975C24 B.CS 0x3975D3C
	0x03975C28 ADD X8, X26, W27, 0x2, SXTW
	0x03975C2C LDRSW X8, [X8 + 0x20]
	0x03975C30 CMP W8, W10
	0x03975C34 B.CS 0x3975D38
	0x03975C38 MADD X9, X9, X24, X20
	0x03975C3C MADD X10, X11, X24, X20
	0x03975C40 MADD X8, X8, X24, X20
	0x03975C44 LDP S0, S1, [X9 + 0x20]
	0x03975C48 LDR V2, [X9 + 0x28]
	0x03975C4C LDP S3, S4, [X10 + 0x20]
	0x03975C50 LDR V5, [X10 + 0x28]
	0x03975C54 LDR X9, [X8 + 0x20]
	0x03975C58 LDR V6, [X8 + 0x28]
	0x03975C5C MOV X0, X31
	0x03975C60 STR S6, [X31 + 0x8]
	0x03975C64 STR X9, [X31]
	0x03975C68 BL 0x3907F5C
	0x03975C6C LDR X8, [X25]
	0x03975C70 LDR X8, [X8 + 0xB8]
	0x03975C74 LDR V1, [X8]
	0x03975C78 FCMP S0, S1
	0x03975C7C B.LS 0x3975C98
	0x03975C80 LDR W8, [X26 + 0x18]
	0x03975C84 ADD W9, W28, 0x1
	0x03975C88 ADD W27, W27, 0x3
	0x03975C8C CMP W9, W8
	0x03975C90 B.LT 0x3975BD8
	0x03975C94 B 0x3975B08

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+160], D8
	003 Move [X31+176], X29
	004 Move [X31+184], X30
	005 Move [X31+192], X28
	006 Move [X31+200], X27
	007 Move [X31+208], X26
	008 Move [X31+216], X25
	009 Move [X31+224], X24
	010 Move [X31+232], X23
	011 Move [X31+240], X22
	012 Move [X31+248], X21
	013 Move [X31+256], X20
	014 Move [X31+264], X19
	015 Move X19, 0xA6D000
	016 Move W8, [X19+2563]
	017 Move X24, X1
	018 Move X25, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0x7DB000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x7DA000
	027 Move X0, [X0+368]
	028 Call 0x1C17CF4
	029 Move X0, 0x7DA000
	030 Move X0, [X0+1376]
	031 Call 0x1C17CF4
	032 Move X0, 0x7DB000
	033 Move X0, [X0+624]
	034 Call 0x1C17CF4
	035 Move X0, 0x780000
	036 Move X0, [X0+3672]
	037 Call 0x1C17CF4
	038 Move X0, 0x7D9000
	039 Move X0, [X0+3600]
	040 Call 0x1C17CF4
	041 Move X0, 0x7DB000
	042 Move X0, [X0+448]
	043 Call 0x1C17CF4
	044 Move X0, 0x7DC000
	045 Move X0, [X0+40]
	046 Call 0x1C17CF4
	047 Move X0, 0x7DA000
	048 Move X0, [X0+2616]
	049 Call 0x1C17CF4
	050 Move X0, 0x7DB000
	051 Move X0, [X0+456]
	052 Call 0x1C17CF4
	053 Move X0, 0x7D9000
	054 Move X0, [X0+3560]
	055 Call 0x1C17CF4
	056 Move X0, 0x7D9000
	057 Move X0, [X0+3568]
	058 Call 0x1C17CF4
	059 Move X0, 0x7DC000
	060 Move X0, [X0+48]
	061 Call 0x1C17CF4
	062 Move X0, 0x7DA000
	063 Move X0, [X0+1048]
	064 Call 0x1C17CF4
	065 Move X0, 0x7DC000
	066 Move X0, [X0+56]
	067 Call 0x1C17CF4
	068 Move X0, 0x7DC000
	069 Move X0, [X0+64]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+2563], W8
	073 Move X22, 0x7D9000
	074 Move X21, 0x7DB000
	075 Move X20, 0x7D9000
	076 Move X19, 0x7DA000
	077 Move X22, [X22+3560]
	078 Move X21, [X21+456]
	079 Move X20, [X20+3568]
	080 Move X19, [X19+2616]
	081 Compare X24, 0
	082 JumpIfNotEqual {93}
	083 Move X23, 0x7DC000
	084 Move X23, [X23+48]
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X23]
	091 Move X8, [X0+184]
	092 Move X24, [X8]
	093 Move X0, [X25+16]
	094 Move X1, X31
	095 Call MeshUtility.GetVertices, X0
	096 Move X8, [X22]
	097 Move X23, X0
	098 Move X0, X8
	099 Call 0x1C17F10
	100 Move X1, [X21]
	101 Move X22, X0
	102 Call List`1<Object>..ctor, X0
	103 Move X0, [X20]
	104 Call 0x1C17F10
	105 Move X1, [X19]
	106 Move X21, X0
	107 Call List`1<Object>..ctor, X0
	108 Move X8, [X25+24]
	109 Move [X31+16], X24
	110 Compare X8, 0
	111 JumpIfEqual {113}
	112 Move W8, [X8+24]
	113 Move X0, [X25+16]
	114 Compare X0, 0
	115 JumpIfEqual {544}
	116 Move X19, 0x7DB000
	117 Move X19, [X19+448]
	118 Move W20, W31
	119 Move W24, W31
	120 Subtract W8, W8, 1
	121 Move [X31+172], W8
	122 Move [X31+24], X25
	123 Move X1, X31
	124 Call Mesh.get_subMeshCount, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, [X25+16]
	127 Compare X0, 0
	128 JumpIfEqual {544}
	129 Move W1, W24
	130 Move X2, X31
	131 Call Mesh.GetTopology, X0, X1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare W0, 0
	134 JumpIfNotEqual {688}
	135 Move X0, [X25+16]
	136 Compare X0, 0
	137 JumpIfEqual {544}
	138 Move W1, W24
	139 Move X2, X31
	140 Call Mesh.GetIndices, X0, X1
	141 Compare X0, 0
	142 JumpIfEqual {544}
	143 Move W8, [X0+24]
	144 Move X26, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W8, W31
	147 Move X9, 0x780000
	148 Move X9, [X9+3672]
	149 Move W1, 3
	150 Move W25, W8
	151 Move X0, [X9]
	152 Call 0x1C17D6C
	153 Compare X0, 0
	154 JumpIfEqual {544}
	155 Move W8, [X0+24]
	156 Move X27, X0
	157 Compare W8, 0
	158 JumpIfEqual {687}
	159 Add W9, W20, W25
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X27+32], W9
	162 Add W9, W9, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move [X27+36], W9
	165 Move W2, [X31+172]
	166 Add W8, W9, 1
	167 Move W0, W24
	168 Move W1, W31
	169 Move X3, X31
	170 Move [X27+40], W8
	171 Call Math.Clamp, X0, X1, X2
	172 Move W29, W0
	173 Add X8, X31, 96
	174 Move X0, X31
	175 Call AutoUnwrapSettings.get_tile
	176 Move X8, 0x7DA000
	177 Move V0, [X31+96]
	178 Move V1, [X31+112]
	179 Move X8, [X8+1376]
	180 Move [X31+128], V0
	181 Move [X31+136], V1
	182 Move X0, [X8]
	183 Call 0x1C17F10
	184 Move V0, [X31+128]
	185 Move V1, [X31+144]
	186 Add X3, X31, 64
	187 Move TEMP, 0
	188 Not TEMP
	189 Move W5, TEMP
	190 Move TEMP, 0
	191 Not TEMP
	192 Move W6, TEMP
	193 Move W7, 1
	194 Move X1, X27
	195 Move W2, W29
	196 Move W4, W31
	197 Move X28, X0
	198 Move [X31+64], V0
	199 Move [X31+72], V1
	200 Move [X31], X31
	201 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	202 Compare X21, 0
	203 JumpIfEqual {544}
	204 Move X9, 0x7D9000
	205 Move W10, [X21+28]
	206 Move X8, [X21+16]
	207 Move X9, [X9+3600]
	208 Add W10, W10, 1
	209 Move X9, [X9]
	210 Move [X21+28], W10
	211 Compare X8, 0
	212 JumpIfEqual {544}
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Move W11, [X8+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add W9, W10, 1
	217 Add X8, X8, X10
	218 Move [X21+24], W9
	219 Move [X8+32], X28
	220 Move X8, [X9+32]
	221 Move X0, X21
	222 Move X1, X28
	223 Move X8, [X8+192]
	224 Move X2, [X8+112]
	225 Call List`1<Object>.AddWithResize, X0, X1
	226 Move W8, [X26+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Compare X23, 0
	229 JumpIfEqual {544}
	230 Add X9, X26, W25
	231 NotImplemented "Instruction LDRSW not yet implemented."
	232 Move W10, [X23+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare X22, 0
	235 JumpIfEqual {544}
	236 Add X9, X23, X9
	237 Move W11, [X22+28]
	238 Move X1, [X9+32]
	239 Move X9, [X22+16]
	240 Move X10, [X19]
	241 Add W11, W11, 1
	242 Move [X22+28], W11
	243 Compare X9, 0
	244 JumpIfEqual {544}
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Move W12, [X9+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add W10, W11, 1
	249 Add X9, X9, X11
	250 Move [X22+24], W10
	251 Move [X9+32], X1
	252 Move X8, [X10+32]
	253 Move X0, X22
	254 Move X8, [X8+192]
	255 Move X2, [X8+112]
	256 Call List`1<Object>.AddWithResize, X0, X1
	257 Move W8, [X26+24]
	258 Add W27, W25, 1
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Add X9, X26, W27
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Move W10, [X23+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add X9, X23, X9
	265 Move W11, [X22+28]
	266 Move X1, [X9+32]
	267 Move X9, [X22+16]
	268 Move X10, [X19]
	269 Add W11, W11, 1
	270 Move [X22+28], W11
	271 Compare X9, 0
	272 JumpIfEqual {544}
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Move W12, [X9+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add W10, W11, 1
	277 Add X9, X9, X11
	278 Move [X22+24], W10
	279 Move [X9+32], X1
	280 Move X8, [X10+32]
	281 Move X0, X22
	282 Move X8, [X8+192]
	283 Move X2, [X8+112]
	284 Call List`1<Object>.AddWithResize, X0, X1
	285 Move W8, [X26+24]
	286 Add W27, W27, 1
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W8, W25, 2
	289 Add X8, X26, W8
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Move W9, [X23+24]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Add X8, X23, X8
	294 Move W10, [X22+28]
	295 Move X1, [X8+32]
	296 Move X8, [X22+16]
	297 Move X9, [X19]
	298 Add W10, W10, 1
	299 Move [X22+28], W10
	300 Compare X8, 0
	301 JumpIfEqual {544}
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Move W11, [X8+24]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Add W9, W10, 1
	306 Add X8, X8, X10
	307 Move [X22+24], W9
	308 Move [X8+32], X1
	309 Move X8, [X9+32]
	310 Move X0, X22
	311 Move X8, [X8+192]
	312 Move X2, [X8+112]
	313 Call List`1<Object>.AddWithResize, X0, X1
	314 Move W9, [X26+24]
	315 Add W8, W27, 1
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add W8, W25, 3
	318 Move X0, [X25+16]
	319 Compare X0, 0
	320 JumpIfEqual {544}
	321 Move W1, W24
	322 Move X2, X31
	323 Call Mesh.GetIndices, X0, X1
	324 Compare X0, 0
	325 JumpIfEqual {544}
	326 Move W8, [X0+24]
	327 Move X26, X0
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move W8, W31
	330 Move X9, 0x780000
	331 Move X9, [X9+3672]
	332 Move W1, 6
	333 Move W25, W8
	334 Move X0, [X9]
	335 Call 0x1C17D6C
	336 Compare X0, 0
	337 JumpIfEqual {544}
	338 Move W8, [X0+24]
	339 Move X27, X0
	340 Compare W8, 0
	341 JumpIfEqual {687}
	342 Add W9, W20, W25
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move [X27+32], W9
	345 Add W9, W9, 1
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X27+36], W9
	348 Add W9, W9, 1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move [X27+40], W9
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move [X27+44], W9
	353 Add W9, W9, 1
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X27+48], W9
	356 Move W2, [X31+172]
	357 Subtract W8, W9, 3
	358 Move W0, W24
	359 Move W1, W31
	360 Move X3, X31
	361 Move [X27+52], W8
	362 Call Math.Clamp, X0, X1, X2
	363 Move W29, W0
	364 Add X8, X31, 96
	365 Move X0, X31
	366 Call AutoUnwrapSettings.get_tile
	367 Move X8, 0x7DA000
	368 Move V0, [X31+96]
	369 Move V1, [X31+112]
	370 Move X8, [X8+1376]
	371 Move [X31+128], V0
	372 Move [X31+136], V1
	373 Move X0, [X8]
	374 Call 0x1C17F10
	375 Move V0, [X31+128]
	376 Move V1, [X31+144]
	377 Add X3, X31, 32
	378 Move TEMP, 0
	379 Not TEMP
	380 Move W5, TEMP
	381 Move TEMP, 0
	382 Not TEMP
	383 Move W6, TEMP
	384 Move W7, 1
	385 Move X1, X27
	386 Move W2, W29
	387 Move W4, W31
	388 Move X28, X0
	389 Move [X31+32], V0
	390 Move [X31+40], V1
	391 Move [X31], X31
	392 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	393 Compare X21, 0
	394 JumpIfEqual {544}
	395 Move X9, 0x7D9000
	396 Move W10, [X21+28]
	397 Move X8, [X21+16]
	398 Move X9, [X9+3600]
	399 Add W10, W10, 1
	400 Move X9, [X9]
	401 Move [X21+28], W10
	402 Compare X8, 0
	403 JumpIfEqual {544}
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Move W11, [X8+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add W9, W10, 1
	408 Add X8, X8, X10
	409 Move [X21+24], W9
	410 Move [X8+32], X28
	411 Move X8, [X9+32]
	412 Move X0, X21
	413 Move X1, X28
	414 Move X8, [X8+192]
	415 Move X2, [X8+112]
	416 Call List`1<Object>.AddWithResize, X0, X1
	417 Move W8, [X26+24]
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Compare X23, 0
	420 JumpIfEqual {544}
	421 Add X9, X26, W25
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Move W10, [X23+24]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Compare X22, 0
	426 JumpIfEqual {544}
	427 Add X9, X23, X9
	428 Move W11, [X22+28]
	429 Move X1, [X9+32]
	430 Move X9, [X22+16]
	431 Move X10, [X19]
	432 Add W11, W11, 1
	433 Move [X22+28], W11
	434 Compare X9, 0
	435 JumpIfEqual {544}
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Move W12, [X9+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Add W10, W11, 1
	440 Add X9, X9, X11
	441 Move [X22+24], W10
	442 Move [X9+32], X1
	443 Move X8, [X10+32]
	444 Move X0, X22
	445 Move X8, [X8+192]
	446 Move X2, [X8+112]
	447 Call List`1<Object>.AddWithResize, X0, X1
	448 Move W8, [X26+24]
	449 Add W27, W25, 1
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Add X9, X26, W27
	452 NotImplemented "Instruction LDRSW not yet implemented."
	453 Move W10, [X23+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Add X9, X23, X9
	456 Move W11, [X22+28]
	457 Move X1, [X9+32]
	458 Move X9, [X22+16]
	459 Move X10, [X19]
	460 Add W11, W11, 1
	461 Move [X22+28], W11
	462 Compare X9, 0
	463 JumpIfEqual {544}
	464 NotImplemented "Instruction LDRSW not yet implemented."
	465 Move W12, [X9+24]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Add W10, W11, 1
	468 Add X9, X9, X11
	469 Move [X22+24], W10
	470 Move [X9+32], X1
	471 Move X8, [X10+32]
	472 Move X0, X22
	473 Move X8, [X8+192]
	474 Move X2, [X8+112]
	475 Call List`1<Object>.AddWithResize, X0, X1
	476 Move W8, [X26+24]
	477 Add W27, W27, 1
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Add W9, W25, 2
	480 Add X9, X26, W9
	481 NotImplemented "Instruction LDRSW not yet implemented."
	482 Move W10, [X23+24]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Add X9, X23, X9
	485 Move W11, [X22+28]
	486 Move X1, [X9+32]
	487 Move X9, [X22+16]
	488 Move X10, [X19]
	489 Add W11, W11, 1
	490 Move [X22+28], W11
	491 Compare X9, 0
	492 JumpIfEqual {544}
	493 NotImplemented "Instruction LDRSW not yet implemented."
	494 Move W12, [X9+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Add W10, W11, 1
	497 Add X9, X9, X11
	498 Move [X22+24], W10
	499 Move [X9+32], X1
	500 Move X8, [X10+32]
	501 Move X0, X22
	502 Move X8, [X8+192]
	503 Move X2, [X8+112]
	504 Call List`1<Object>.AddWithResize, X0, X1
	505 Move W8, [X26+24]
	506 Add W27, W27, 1
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Add W8, W25, 3
	509 Add X8, X26, W8
	510 NotImplemented "Instruction LDRSW not yet implemented."
	511 Move W9, [X23+24]
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Add X8, X23, X8
	514 Move W10, [X22+28]
	515 Move X1, [X8+32]
	516 Move X8, [X22+16]
	517 Move X9, [X19]
	518 Add W10, W10, 1
	519 Move [X22+28], W10
	520 Compare X8, 0
	521 JumpIfEqual {544}
	522 NotImplemented "Instruction LDRSW not yet implemented."
	523 Move W11, [X8+24]
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Add W9, W10, 1
	526 Add X8, X8, X10
	527 Move [X22+24], W9
	528 Move [X8+32], X1
	529 Move X8, [X9+32]
	530 Move X0, X22
	531 Move X8, [X8+192]
	532 Move X2, [X8+112]
	533 Call List`1<Object>.AddWithResize, X0, X1
	534 Move W9, [X26+24]
	535 Add W8, W27, 1
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Add W8, W25, 4
	538 Move X25, [X31+24]
	539 Add W20, W20, W8
	540 Move X0, [X25+16]
	541 Add W24, W24, 1
	542 Compare X0, 0
	543 JumpIfNotEqual {123}
	544 Call 0x1C17F20
	545 Compare X22, 0
	546 JumpIfEqual {544}
	547 Move X8, 0x7DC000
	548 Move X8, [X8+40]
	549 Move X0, X22
	550 Move X1, [X8]
	551 Call List`1<Object>.ToArray, X0
	552 Move [X25+40], X0
	553 Move X24, 0x7DC000
	554 Move X8, [X25+32]
	555 Move X19, [X31+16]
	556 Move X24, [X24+64]
	557 Compare X8, 0
	558 JumpIfEqual {544}
	559 Move X0, X8
	560 Move X1, X31
	561 Call ProBuilderMesh.Clear, X0
	562 Move X0, [X25+32]
	563 Compare X0, 0
	564 JumpIfEqual {544}
	565 Move X1, [X25+40]
	566 Move W2, W31
	567 Move X3, X31
	568 Call ProBuilderMesh.SetVertices, X0, X1, X2
	569 Move X0, [X25+32]
	570 Compare X0, 0
	571 JumpIfEqual {544}
	572 Move X1, X21
	573 Move X2, X31
	574 Call ProBuilderMesh.set_faces, X0, X1
	575 Move X21, [X25+32]
	576 Compare X21, 0
	577 JumpIfEqual {544}
	578 Move X0, [X21+88]
	579 Move X1, X31
	580 Call SharedVertex.GetSharedVerticesWithPositions, X0
	581 Move X1, X0
	582 Move X0, X21
	583 Move X2, X31
	584 Call ProBuilderMesh.set_sharedVertices, X0, X1
	585 Move X8, 0x7DA000
	586 Move X21, [X25+32]
	587 Move X8, [X8+1048]
	588 Move W1, W31
	589 Move X0, [X8]
	590 Call 0x1C17D6C
	591 Compare X21, 0
	592 JumpIfEqual {544}
	593 Move X1, X0
	594 Move X0, X21
	595 Move X2, X31
	596 Call ProBuilderMesh.set_sharedTextures, X0, X1
	597 Compare X19, 0
	598 JumpIfEqual {544}
	599 Move W8, [X19+16]
	600 Compare W8, 0
	601 JumpIfEqual {610}
	602 Move X0, [X25+32]
	603 Compare X0, 0
	604 JumpIfEqual {544}
	605 Move W8, [X19+17]
	606 Move X1, [X0+40]
	607 NotImplemented "Instruction CMP not yet implemented."
	608 NotImplemented "Instruction CSET not yet implemented."
	609 Call QuadUtility.ToQuads, X0, X1, X2
	610 Move W8, [X19+17]
	611 Compare W8, 0
	612 JumpIfEqual {672}
	613 Move X21, [X25+32]
	614 Compare X21, 0
	615 JumpIfEqual {544}
	616 Move X0, [X24]
	617 Move X22, [X21+40]
	618 Move V8, [X19+20]
	619 Move X20, [X25+40]
	620 Move W8, [X0+224]
	621 Compare W8, 0
	622 JumpIfNotEqual {625}
	623 Call 0x1C17DFC
	624 Move X0, [X24]
	625 Move X19, 0x7DA000
	626 Move X19, [X19+368]
	627 Move X8, [X0+184]
	628 Move X23, [X8+8]
	629 Compare X23, 0
	630 JumpIfNotEqual {653}
	631 Move W8, [X0+224]
	632 Compare W8, 0
	633 JumpIfNotEqual {636}
	634 Call 0x1C17DFC
	635 Move X0, [X24]
	636 Move X9, 0x7DB000
	637 Move X8, [X0+184]
	638 Move X9, [X9+624]
	639 Move X26, X24
	640 Move X24, [X8]
	641 Move X0, [X9]
	642 Call 0x1C17F10
	643 Move X8, 0x7DC000
	644 Move X8, [X8+56]
	645 Move X1, X24
	646 Move X3, X31
	647 Move X23, X0
	648 Move X2, [X8]
	649 Call Func`2<Object, Vector3>..ctor, X0, X1, X2
	650 Move X8, [X26]
	651 Move X8, [X8+184]
	652 Move [X8+8], X23
	653 Move X8, 0x7DB000
	654 Move X8, [X8+592]
	655 Move X0, X20
	656 Move X1, X23
	657 Move X2, [X8]
	658 Call Enumerable.Select, X0, X1
	659 Move X1, [X19]
	660 Call Enumerable.ToArray, X0
	661 Move X2, X0
	662 Move X0, X21
	663 Move X1, X22
	664 Move V0, V8
	665 Move X3, X31
	666 Call Smoothing.ApplySmoothingGroups, X0, X1, V0, X2
	667 Move X0, [X25+32]
	668 Compare X0, 0
	669 JumpIfEqual {544}
	670 Move X1, [X0+40]
	671 Call MergeElements.CollapseCoincidentVertices, X0, X1
	672 Move X20, [X31+256]
	673 Move X19, [X31+264]
	674 Move X22, [X31+240]
	675 Move X21, [X31+248]
	676 Move X24, [X31+224]
	677 Move X23, [X31+232]
	678 Move X26, [X31+208]
	679 Move X25, [X31+216]
	680 Move X28, [X31+192]
	681 Move X27, [X31+200]
	682 Move X29, [X31+176]
	683 Move X30, [X31+184]
	684 Move V8, [X31+160]
	685 Add X31, X31, 272
	686 Return 
	687 Call 0x1C17F28
	688 Move X0, 0x77F000
	689 Move X0, [X0+2880]
	690 Call 0x1C17D08
	691 Call 0x1C17F10
	692 Move X19, X0
	693 Move X0, 0x7DC000
	694 Move X0, [X0+72]
	695 Call 0x1C17D08
	696 Move X1, X0
	697 Move X0, X19
	698 Move X2, X31
	699 Call NotSupportedException..ctor, X0, X1
	700 Move X0, 0x7DC000
	701 Move X0, [X0+80]
	702 Call 0x1C17D08
	703 Move X1, X0
	704 Move X0, X19
	705 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03976548 LDR W8, [X23 + 0x18]
	0x0397654C ADD W24, W24, 0x1
	0x03976550 CMP W24, W8
	0x03976554 B.LT 0x3976410
	0x03976558 B 0x3976260
	0x0397655C MOV X23, X31
	0x03976560 CBZ X21, 0x39765C4
	0x03976564 LDR X8, [X21]
	0x03976568 ADRP X10, 0x77D000
	0x0397656C LDRH W9, [X8 + 0x12E]
	0x03976570 LDR X10, [X10 + 0xE00]
	0x03976574 LDR X1, [X10]
	0x03976578 CBZ X9, 0x397659C
	0x0397657C LDR X10, [X8 + 0xB0]
	0x03976580 ADD X10, X10, 0x8
	0x03976584 LDUR X11, [X10 - 0x8]
	0x03976588 CMP X11, X1
	0x0397658C B.EQ 0x39765AC
	0x03976590 SUBS X9, X9, 0x1
	0x03976594 ADD X10, X10, 0x10
	0x03976598 B.NE 0x3976584
	0x0397659C MOV X0, X21
	0x039765A0 MOV W2, W31
	0x039765A4 BL 0x1C5C788
	0x039765A8 B 0x39765B8
	0x039765AC LDRSW X9, [X10]
	0x039765B0 ADD X8, X8, X9, 0x4, LSL
	0x039765B4 ADD X0, X8, 0x138
	0x039765B8 LDP X8, X1, [X0]
	0x039765BC MOV X0, X21
	0x039765C0 BLR X8
	0x039765C4 CBNZ X23, 0x397666C
	0x039765C8 LDR X21, [X31 + 0x8]
	0x039765CC CBZ X21, 0x3976664
	0x039765D0 ADRP X8, 0x7D7000
	0x039765D4 LDR X22, [X21 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA6C000
	007 Move X21, 0x7DB000
	008 Move X20, 0x7DB000
	009 Move W8, [X19+2564]
	010 Move X21, [X21+160]
	011 Move X20, [X20+48]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7DB000
	017 Move X0, [X0+160]
	018 Call 0x1C17CF4
	019 Move X0, 0x7DB000
	020 Move X0, [X0+48]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+2564], W8
	024 Move X0, [X21]
	025 Call 0x1C17F10
	026 Move W21, 257
	027 Move W22, 0x3F800000
	028 Move X1, X31
	029 Move X19, X0
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move [X0+20], W22
	032 Call Object..ctor, X0
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X19+20], W22
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

