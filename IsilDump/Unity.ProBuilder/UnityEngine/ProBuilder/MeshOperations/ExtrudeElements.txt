Type: UnityEngine.ProBuilder.MeshOperations.ExtrudeElements

Method: UnityEngine.ProBuilder.Face[] Extrude(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, UnityEngine.ProBuilder.ExtrudeMethod method, System.Single distance)

Disassembly:
	0x0396C210 STR X0, [X31 + 0x30]
	0x0396C214 LDR X1, [X8]
	0x0396C218 BL 0x301B7C4
	0x0396C21C ADRP X19, 0x791000
	0x0396C220 LDR X19, [X19 + 0x888]

ISIL:
	001 Compare W2, 0
	002 Invalid "Jump target not found in method."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Call ExtrudeElements.ExtrudeAsGroups, X0, X1, X2, V0
	006 Return X0

Method: UnityEngine.ProBuilder.Edge[] Extrude(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, System.Single distance, System.Boolean extrudeAsGroup, System.Boolean enableManifoldExtrude)

Disassembly:
	0x0396E8BC B 0x396E8E8
	0x0396E8C0 B 0x396E8E8
	0x0396E8C4 B 0x396E8E8
	0x0396E8C8 B 0x396E8E8
	0x0396E8CC B 0x396E8E8
	0x0396E8D0 B 0x396E8E8
	0x0396E8D4 B 0x396E8E8
	0x0396E8D8 B 0x396E8E8
	0x0396E8DC B 0x396E8E8
	0x0396E8E0 B 0x396E8E8
	0x0396E8E4 B 0x396E8E8
	0x0396E8E8 MOV X24, X0
	0x0396E8EC CMP W1, 0x1
	0x0396E8F0 B.NE 0x396E910
	0x0396E8F4 MOV X0, X24
	0x0396E8F8 BL 0x3EB1AD0
	0x0396E8FC LDR X23, [X0]
	0x0396E900 BL 0x3EB1AE0
	0x0396E904 MOV W24, W31
	0x0396E908 CBNZ X20, 0x396DD38
	0x0396E90C B 0x396DD98
	0x0396E910 MOV X23, X31
	0x0396E914 B 0x396E91C
	0x0396E918 MOV X24, X0
	0x0396E91C CBZ X20, 0x396E980
	0x0396E920 LDR X8, [X20]
	0x0396E924 ADRP X10, 0x785000
	0x0396E928 LDRH W9, [X8 + 0x12E]
	0x0396E92C LDR X10, [X10 + 0xE00]
	0x0396E930 LDR X1, [X10]
	0x0396E934 CBZ X9, 0x396E958
	0x0396E938 LDR X10, [X8 + 0xB0]
	0x0396E93C ADD X10, X10, 0x8
	0x0396E940 LDUR X11, [X10 - 0x8]
	0x0396E944 CMP X11, X1
	0x0396E948 B.EQ 0x396E968
	0x0396E94C SUBS X9, X9, 0x1
	0x0396E950 ADD X10, X10, 0x10
	0x0396E954 B.NE 0x396E940
	0x0396E958 MOV X0, X20
	0x0396E95C MOV W2, W31
	0x0396E960 BL 0x1C5C788
	0x0396E964 B 0x396E974
	0x0396E968 LDRSW X9, [X10]
	0x0396E96C ADD X8, X8, X9, 0x4, LSL
	0x0396E970 ADD X0, X8, 0x138
	0x0396E974 LDP X8, X1, [X0]
	0x0396E978 MOV X0, X20
	0x0396E97C BLR X8
	0x0396E980 CBNZ X23, 0x396E98C
	0x0396E984 MOV X0, X24
	0x0396E988 BL 0x1D2C690
	0x0396E98C MOV X0, X23
	0x0396E990 BL 0x1C16F18
	0x0396E994 BL 0x1990590
	0x0396E998 STR D10, [X31 - 0x60]!
	0x0396E99C STP D9, D8, [X31 + 0x10]
	0x0396E9A0 STP X30, X25, [X31 + 0x20]
	0x0396E9A4 STP X24, X23, [X31 + 0x30]
	0x0396E9A8 STP X22, X21, [X31 + 0x40]
	0x0396E9AC STP X20, X19, [X31 + 0x50]
	0x0396E9B0 ADRP X22, 0xA73000
	0x0396E9B4 LDRB W8, [X22 + 0x9F5]
	0x0396E9B8 MOV X19, X2
	0x0396E9BC MOV X20, X1
	0x0396E9C0 MOV X21, X0
	0x0396E9C4 TBNZ X8, 0x0, 0x396E9DC
	0x0396E9C8 ADRP X0, 0x7DF000
	0x0396E9CC LDR X0, [X0 + 0xF80]
	0x0396E9D0 BL 0x1C16CF4
	0x0396E9D4 MOVZ W8, 0x1
	0x0396E9D8 STRB W8, [X22 + 0x9F5]
	0x0396E9DC ADRP X22, 0xA6A000
	0x0396E9E0 LDRB W8, [X22 + 0x783]
	0x0396E9E4 CBNZ W8, 0x396E9FC
	0x0396E9E8 ADRP X0, 0x785000
	0x0396E9EC LDR X0, [X0 + 0x5A0]
	0x0396E9F0 BL 0x1C16CF4
	0x0396E9F4 MOVZ W8, 0x1
	0x0396E9F8 STRB W8, [X22 + 0x783]
	0x0396E9FC CBZ X20, 0x396EB28
	0x0396EA00 ADRP X8, 0x785000
	0x0396EA04 LDR X8, [X8 + 0x5A0]
	0x0396EA08 LDR X8, [X8]
	0x0396EA0C LDR X9, [X8 + 0xB8]
	0x0396EA10 LDR X8, [X20 + 0x18]
	0x0396EA14 LDP S9, S8, [X9 + 0x4]
	0x0396EA18 LDR V10, [X9]
	0x0396EA1C CMP W8, 0x1
	0x0396EA20 B.LT 0x396EAF4
	0x0396EA24 ADRP X25, 0x7DF000
	0x0396EA28 LDR X25, [X25 + 0xF80]
	0x0396EA2C MOV W23, W31
	0x0396EA30 MOV X24, X31
	0x0396EA34 AND X8, X8, 0x0
	0x0396EA38 CMP X24, W8, UXTW
	0x0396EA3C B.CS 0x396EB24
	0x0396EA40 CBZ X21, 0x396EB28
	0x0396EA44 ADD X8, X20, X24, 0x2, LSL
	0x0396EA48 ADD X22, X8, 0x20
	0x0396EA4C LDR W1, [X22]
	0x0396EA50 MOV X0, X21
	0x0396EA54 MOV X2, X31
	0x0396EA58 BL 0x3934B34
	0x0396EA5C TBZ X0, 0x0, 0x396EAE0
	0x0396EA60 LDR W8, [X20 + 0x18]
	0x0396EA64 CMP X24, X8
	0x0396EA68 B.CS 0x396EB24
	0x0396EA6C CBZ X19, 0x396EB28
	0x0396EA70 LDR X8, [X19]
	0x0396EA74 LDR W22, [X22]
	0x0396EA78 LDR X1, [X25]
	0x0396EA7C LDRH W9, [X8 + 0x12E]
	0x0396EA80 CBZ X9, 0x396EAA4
	0x0396EA84 LDR X10, [X8 + 0xB0]
	0x0396EA88 ADD X10, X10, 0x8
	0x0396EA8C LDUR X11, [X10 - 0x8]
	0x0396EA90 CMP X11, X1
	0x0396EA94 B.EQ 0x396EAB4
	0x0396EA98 SUBS X9, X9, 0x1
	0x0396EA9C ADD X10, X10, 0x10
	0x0396EAA0 B.NE 0x396EA8C
	0x0396EAA4 MOV X0, X19
	0x0396EAA8 MOV W2, W31
	0x0396EAAC BL 0x1C5C788
	0x0396EAB0 B 0x396EAC0
	0x0396EAB4 LDRSW X9, [X10]
	0x0396EAB8 ADD X8, X8, X9, 0x4, LSL
	0x0396EABC ADD X0, X8, 0x138
	0x0396EAC0 LDP X8, X2, [X0]
	0x0396EAC4 MOV X0, X19
	0x0396EAC8 MOV W1, W22
	0x0396EACC BLR X8
	0x0396EAD0 FADD S10, S10, S0
	0x0396EAD4 FADD S9, S9, S1
	0x0396EAD8 FADD S8, S8, S2
	0x0396EADC ADD W23, W23, 0x1
	0x0396EAE0 LDR W8, [X20 + 0x18]
	0x0396EAE4 ADD X24, X24, 0x1
	0x0396EAE8 CMP X24, W8, SXTW
	0x0396EAEC B.LT 0x396EA38
	0x0396EAF0 B 0x396EAF8
	0x0396EAF4 MOV W23, W31
	0x0396EAF8 SCVTF S2, W23
	0x0396EAFC FDIV S0, S10, S2
	0x0396EB00 FDIV S1, S9, S2
	0x0396EB04 FDIV S2, S8, S2
	0x0396EB08 LDP X20, X19, [X31 + 0x50]
	0x0396EB0C LDP X22, X21, [X31 + 0x40]
	0x0396EB10 LDP X24, X23, [X31 + 0x30]
	0x0396EB14 LDP X30, X25, [X31 + 0x20]
	0x0396EB18 LDP D9, D8, [X31 + 0x10]
	0x0396EB1C LDR V10, [X31], #0x60
	0x0396EB20 RET
	0x0396EB24 BL 0x1C16F28
	0x0396EB28 BL 0x1C16F20
	0x0396EB2C MOVZ W2, 0x1
	0x0396EB30 B 0x396EB34
	0x0396EB34 SUB X31, X31, 0x90
	0x0396EB38 STP X29, X30, [X31 + 0x30]
	0x0396EB3C STP X28, X27, [X31 + 0x40]
	0x0396EB40 STP X26, X25, [X31 + 0x50]
	0x0396EB44 STP X24, X23, [X31 + 0x60]
	0x0396EB48 STP X22, X21, [X31 + 0x70]
	0x0396EB4C STP X20, X19, [X31 + 0x80]
	0x0396EB50 STR X1, [X31 + 0x10]
	0x0396EB54 ADRP X20, 0xA73000
	0x0396EB58 ADRP X19, 0x785000
	0x0396EB5C LDRB W8, [X20 + 0x9EE]
	0x0396EB60 LDR X19, [X19 + 0x598]
	0x0396EB64 MOV W21, W2
	0x0396EB68 MOV X24, X0
	0x0396EB6C TBNZ X8, 0x0, 0x396ECEC
	0x0396EB70 ADRP X0, 0x78F000
	0x0396EB74 LDR X0, [X0 + 0x858]
	0x0396EB78 BL 0x1C16CF4
	0x0396EB7C ADRP X0, 0x78F000
	0x0396EB80 LDR X0, [X0 + 0x870]
	0x0396EB84 BL 0x1C16CF4
	0x0396EB88 ADRP X0, 0x78F000
	0x0396EB8C LDR X0, [X0 + 0x890]
	0x0396EB90 BL 0x1C16CF4
	0x0396EB94 ADRP X0, 0x7DF000
	0x0396EB98 LDR X0, [X0 + 0xC80]
	0x0396EB9C BL 0x1C16CF4
	0x0396EBA0 ADRP X0, 0x78F000
	0x0396EBA4 LDR X0, [X0 + 0x888]
	0x0396EBA8 BL 0x1C16CF4
	0x0396EBAC ADRP X0, 0x7E1000
	0x0396EBB0 LDR X0, [X0 + 0x4E8]
	0x0396EBB4 BL 0x1C16CF4
	0x0396EBB8 ADRP X0, 0x787000
	0x0396EBBC LDR X0, [X0 + 0x9C8]
	0x0396EBC0 BL 0x1C16CF4
	0x0396EBC4 ADRP X0, 0x7E1000
	0x0396EBC8 LDR X0, [X0 + 0x3F8]
	0x0396EBCC BL 0x1C16CF4
	0x0396EBD0 ADRP X0, 0x7E1000
	0x0396EBD4 LDR X0, [X0 + 0x1F0]
	0x0396EBD8 BL 0x1C16CF4
	0x0396EBDC ADRP X0, 0x7E0000
	0x0396EBE0 LDR X0, [X0 + 0x560]
	0x0396EBE4 BL 0x1C16CF4
	0x0396EBE8 ADRP X0, 0x7E1000
	0x0396EBEC LDR X0, [X0 + 0x508]
	0x0396EBF0 BL 0x1C16CF4
	0x0396EBF4 ADRP X0, 0x785000
	0x0396EBF8 LDR X0, [X0 + 0xE00]
	0x0396EBFC BL 0x1C16CF4
	0x0396EC00 ADRP X0, 0x7DF000
	0x0396EC04 LDR X0, [X0 + 0xDB0]
	0x0396EC08 BL 0x1C16CF4
	0x0396EC0C ADRP X0, 0x7DF000
	0x0396EC10 LDR X0, [X0 + 0xDB8]
	0x0396EC14 BL 0x1C16CF4
	0x0396EC18 ADRP X0, 0x785000
	0x0396EC1C LDR X0, [X0 + 0xE18]
	0x0396EC20 BL 0x1C16CF4
	0x0396EC24 ADRP X0, 0x786000
	0x0396EC28 LDR X0, [X0 + 0xE58]
	0x0396EC2C BL 0x1C16CF4
	0x0396EC30 ADRP X0, 0x786000
	0x0396EC34 LDR X0, [X0 + 0xE10]
	0x0396EC38 BL 0x1C16CF4
	0x0396EC3C ADRP X0, 0x7E1000
	0x0396EC40 LDR X0, [X0 + 0x308]
	0x0396EC44 BL 0x1C16CF4
	0x0396EC48 ADRP X0, 0x7E1000
	0x0396EC4C LDR X0, [X0 + 0x1C0]
	0x0396EC50 BL 0x1C16CF4
	0x0396EC54 ADRP X0, 0x789000
	0x0396EC58 LDR X0, [X0 + 0xB70]
	0x0396EC5C BL 0x1C16CF4
	0x0396EC60 ADRP X0, 0x7DF000
	0x0396EC64 LDR X0, [X0 + 0xDE0]
	0x0396EC68 BL 0x1C16CF4
	0x0396EC6C ADRP X0, 0x7E1000
	0x0396EC70 LDR X0, [X0 + 0x1C8]
	0x0396EC74 BL 0x1C16CF4
	0x0396EC78 ADRP X0, 0x7E1000
	0x0396EC7C LDR X0, [X0 + 0x310]
	0x0396EC80 BL 0x1C16CF4
	0x0396EC84 ADRP X0, 0x7DF000
	0x0396EC88 LDR X0, [X0 + 0xE18]
	0x0396EC8C BL 0x1C16CF4
	0x0396EC90 ADRP X0, 0x7E1000
	0x0396EC94 LDR X0, [X0 + 0x1D0]
	0x0396EC98 BL 0x1C16CF4
	0x0396EC9C ADRP X0, 0x786000
	0x0396ECA0 LDR X0, [X0 + 0xE30]
	0x0396ECA4 BL 0x1C16CF4
	0x0396ECA8 ADRP X0, 0x7DF000
	0x0396ECAC LDR X0, [X0 + 0xDE8]
	0x0396ECB0 BL 0x1C16CF4
	0x0396ECB4 ADRP X0, 0x7E1000
	0x0396ECB8 LDR X0, [X0 + 0x318]
	0x0396ECBC BL 0x1C16CF4
	0x0396ECC0 ADRP X0, 0x785000
	0x0396ECC4 LDR X0, [X0 + 0x598]
	0x0396ECC8 BL 0x1C16CF4
	0x0396ECCC ADRP X0, 0x7E1000
	0x0396ECD0 LDR X0, [X0 + 0xE98]
	0x0396ECD4 BL 0x1C16CF4
	0x0396ECD8 ADRP X0, 0x7E1000
	0x0396ECDC LDR X0, [X0 + 0xD98]
	0x0396ECE0 BL 0x1C16CF4
	0x0396ECE4 MOVZ W8, 0x1
	0x0396ECE8 STRB W8, [X20 + 0x9EE]
	0x0396ECEC LDR X0, [X19]
	0x0396ECF0 STR W31, [X31 + 0x2C]
	0x0396ECF4 LDR W8, [X0 + 0xE0]
	0x0396ECF8 CBNZ W8, 0x396ED00
	0x0396ECFC BL 0x1C16DFC
	0x0396ED00 MOV X0, X24
	0x0396ED04 MOV X1, X31
	0x0396ED08 MOV X2, X31
	0x0396ED0C BL 0x3C3883C
	0x0396ED10 LDR X8, [X31 + 0x10]
	0x0396ED14 TBNZ X0, 0x0, 0x396F440
	0x0396ED18 CBZ X8, 0x396F460
	0x0396ED1C STR W21, [X31 + 0x4]
	0x0396ED20 CBZ X24, 0x396F43C
	0x0396ED24 ADRP X20, 0x7DF000
	0x0396ED28 ADRP X19, 0x7DF000
	0x0396ED2C LDR X20, [X20 + 0xDE8]
	0x0396ED30 LDR X19, [X19 + 0xDE0]
	0x0396ED34 MOV X0, X24
	0x0396ED38 MOV X1, X31
	0x0396ED3C MOV X2, X31
	0x0396ED40 BL 0x3912114
	0x0396ED44 LDR X8, [X20]
	0x0396ED48 MOV X21, X0
	0x0396ED4C MOV X0, X8
	0x0396ED50 BL 0x1C16F10
	0x0396ED54 LDR X2, [X19]
	0x0396ED58 MOV X1, X21
	0x0396ED5C MOV X23, X0
	0x0396ED60 BL 0x301B8E0
	0x0396ED64 LDR X8, [X24 + 0x30]
	0x0396ED68 CBZ X8, 0x396F43C
	0x0396ED6C ADRP X20, 0x7E1000
	0x0396ED70 ADRP X21, 0x7E1000
	0x0396ED74 ADRP X22, 0x7DF000
	0x0396ED78 LDR W19, [X8 + 0x18]
	0x0396ED7C LDR X20, [X20 + 0x318]
	0x0396ED80 LDR X21, [X21 + 0x310]
	0x0396ED84 LDR X22, [X22 + 0xDB0]
	0x0396ED88 MOV X0, X24
	0x0396ED8C MOV X1, X31
	0x0396ED90 STR X24, [X31 + 0x8]
	0x0396ED94 BL 0x3916198
	0x0396ED98 LDR X8, [X20]
	0x0396ED9C MOV X25, X0
	0x0396EDA0 MOV X0, X8
	0x0396EDA4 BL 0x1C16F10
	0x0396EDA8 LDR X1, [X21]
	0x0396EDAC MOV X24, X0
	0x0396EDB0 BL 0x301B7C4
	0x0396EDB4 LDR X20, [X31 + 0x10]
	0x0396EDB8 LDR X1, [X22]
	0x0396EDBC LDR X8, [X20]
	0x0396EDC0 LDRH W9, [X8 + 0x12E]
	0x0396EDC4 CBZ X9, 0x396EDE8
	0x0396EDC8 LDR X10, [X8 + 0xB0]
	0x0396EDCC ADD X10, X10, 0x8
	0x0396EDD0 LDUR X11, [X10 - 0x8]
	0x0396EDD4 CMP X11, X1
	0x0396EDD8 B.EQ 0x396EDF8
	0x0396EDDC SUBS X9, X9, 0x1
	0x0396EDE0 ADD X10, X10, 0x10
	0x0396EDE4 B.NE 0x396EDD0
	0x0396EDE8 MOV X0, X20
	0x0396EDEC MOV W2, W31
	0x0396EDF0 BL 0x1C5C788
	0x0396EDF4 B 0x396EE04
	0x0396EDF8 LDRSW X9, [X10]
	0x0396EDFC ADD X8, X8, X9, 0x4, LSL
	0x0396EE00 ADD X0, X8, 0x138
	0x0396EE04 LDP X8, X1, [X0]
	0x0396EE08 MOV X0, X20
	0x0396EE0C BLR X8
	0x0396EE10 STP X0, X24, [X31 + 0x18]
	0x0396EE14 CBZ X0, 0x396F4A8
	0x0396EE18 ADRP X20, 0x78F000
	0x0396EE1C LDR X20, [X20 + 0x870]
	0x0396EE20 MOV X22, X0
	0x0396EE24 LDR X8, [X22]
	0x0396EE28 ADRP X10, 0x785000
	0x0396EE2C LDRH W9, [X8 + 0x12E]
	0x0396EE30 LDR X10, [X10 + 0xE18]
	0x0396EE34 LDR X1, [X10]
	0x0396EE38 CBZ X9, 0x396EE5C
	0x0396EE3C LDR X10, [X8 + 0xB0]
	0x0396EE40 ADD X10, X10, 0x8
	0x0396EE44 LDUR X11, [X10 - 0x8]
	0x0396EE48 CMP X11, X1
	0x0396EE4C B.EQ 0x396EE6C
	0x0396EE50 SUBS X9, X9, 0x1
	0x0396EE54 ADD X10, X10, 0x10
	0x0396EE58 B.NE 0x396EE44
	0x0396EE5C MOV X0, X22
	0x0396EE60 MOV W2, W31
	0x0396EE64 BL 0x1C5C788
	0x0396EE68 B 0x396EE78
	0x0396EE6C LDRSW X9, [X10]
	0x0396EE70 ADD X8, X8, X9, 0x4, LSL
	0x0396EE74 ADD X0, X8, 0x138
	0x0396EE78 LDP X8, X1, [X0]
	0x0396EE7C MOV X0, X22
	0x0396EE80 BLR X8
	0x0396EE84 TBZ X0, 0x0, 0x396F244
	0x0396EE88 LDR X8, [X22]
	0x0396EE8C ADRP X10, 0x7DF000
	0x0396EE90 LDRH W9, [X8 + 0x12E]
	0x0396EE94 LDR X10, [X10 + 0xDB8]
	0x0396EE98 LDR X1, [X10]
	0x0396EE9C CBZ X9, 0x396EEC0
	0x0396EEA0 LDR X10, [X8 + 0xB0]
	0x0396EEA4 ADD X10, X10, 0x8
	0x0396EEA8 LDUR X11, [X10 - 0x8]
	0x0396EEAC CMP X11, X1
	0x0396EEB0 B.EQ 0x396EED0
	0x0396EEB4 SUBS X9, X9, 0x1
	0x0396EEB8 ADD X10, X10, 0x10
	0x0396EEBC B.NE 0x396EEA8
	0x0396EEC0 MOV X0, X22
	0x0396EEC4 MOV W2, W31
	0x0396EEC8 BL 0x1C5C788
	0x0396EECC B 0x396EEDC
	0x0396EED0 LDRSW X9, [X10]
	0x0396EED4 ADD X8, X8, X9, 0x4, LSL
	0x0396EED8 ADD X0, X8, 0x138
	0x0396EEDC LDP X8, X1, [X0]
	0x0396EEE0 MOV X0, X22
	0x0396EEE4 BLR X8
	0x0396EEE8 ADRP X8, 0x7E1000
	0x0396EEEC LDR X8, [X8 + 0x1F0]
	0x0396EEF0 MOV X27, X0
	0x0396EEF4 LDR X0, [X8]
	0x0396EEF8 BL 0x1C16F10
	0x0396EEFC MOV X26, X0
	0x0396EF00 MOV X1, X31
	0x0396EF04 BL 0x3901F84
	0x0396EF08 ADRP X8, 0x7DF000
	0x0396EF0C LDR X8, [X8 + 0xDE8]
	0x0396EF10 LDR X0, [X8]
	0x0396EF14 BL 0x1C16F10
	0x0396EF18 ADRP X8, 0x7E1000
	0x0396EF1C LDR X8, [X8 + 0x1C8]
	0x0396EF20 MOV X21, X0
	0x0396EF24 LDR X1, [X8]
	0x0396EF28 BL 0x301B7C4
	0x0396EF2C CBZ X26, 0x396F428
	0x0396EF30 STR X21, [X26 + 0x18]
	0x0396EF34 ADRP X8, 0x786000
	0x0396EF38 LDR X8, [X8 + 0xE30]
	0x0396EF3C LDR X0, [X8]
	0x0396EF40 BL 0x1C16F10
	0x0396EF44 ADRP X8, 0x789000
	0x0396EF48 LDR X8, [X8 + 0xB70]
	0x0396EF4C MOV X21, X0
	0x0396EF50 LDR X1, [X8]
	0x0396EF54 BL 0x2FDBF14
	0x0396EF58 STR X21, [X26 + 0x20]
	0x0396EF5C ADRP X8, 0x7E0000
	0x0396EF60 LDR X8, [X8 + 0x560]
	0x0396EF64 LDR X0, [X8]
	0x0396EF68 BL 0x1C16F10
	0x0396EF6C MOV X21, X0
	0x0396EF70 MOV X1, X27
	0x0396EF74 MOV X2, X31
	0x0396EF78 BL 0x3900598
	0x0396EF7C STR X21, [X26 + 0x10]
	0x0396EF80 ADRP X8, 0x78F000
	0x0396EF84 LDR X8, [X8 + 0x888]
	0x0396EF88 LDR X0, [X8]
	0x0396EF8C BL 0x1C16F10
	0x0396EF90 ADRP X8, 0x78F000
	0x0396EF94 LDR X8, [X8 + 0x890]
	0x0396EF98 MOV X28, X0
	0x0396EF9C LDR X1, [X8]
	0x0396EFA0 BL 0x2A09A9C
	0x0396EFA4 CBZ X27, 0x396F42C
	0x0396EFA8 LDR X8, [X27 + 0x10]
	0x0396EFAC CBZ X8, 0x396F424
	0x0396EFB0 ADRP X9, 0x786000
	0x0396EFB4 LDR X9, [X9 + 0xE58]
	0x0396EFB8 LDR W1, [X8 + 0x18]
	0x0396EFBC LDR X0, [X9]
	0x0396EFC0 BL 0x1C16D6C
	0x0396EFC4 LDR X8, [X27 + 0x10]
	0x0396EFC8 CBZ X8, 0x396F3C4
	0x0396EFCC MOV X29, X0
	0x0396EFD0 MOVZ W22, 0x8
	0x0396EFD4 LDR W9, [X8 + 0x18]
	0x0396EFD8 SUB X24, X22, 0x8
	0x0396EFDC CMP X24, W9, SXTW
	0x0396EFE0 B.GE 0x396F1B0
	0x0396EFE4 CMP X24, X9
	0x0396EFE8 B.CS 0x396F3D0
	0x0396EFEC CBZ X28, 0x396F3CC
	0x0396EFF0 LDR W1, [X8, X22, LSL #2]
	0x0396EFF4 LDR X3, [X20]
	0x0396EFF8 ADD X2, X31, 0x2C
	0x0396EFFC MOV X0, X28
	0x0396F000 BL 0x2A0BC68
	0x0396F004 TBZ X0, 0x0, 0x396F024
	0x0396F008 CBZ X29, 0x396F3EC
	0x0396F00C LDR W8, [X29 + 0x18]
	0x0396F010 CMP X24, X8
	0x0396F014 B.CS 0x396F3F8
	0x0396F018 LDR W8, [X31 + 0x2C]
	0x0396F01C STR W8, [X29, X22, LSL #2]
	0x0396F020 B 0x396F1A0
	0x0396F024 LDR X8, [X26 + 0x18]
	0x0396F028 CBZ X8, 0x396F40C
	0x0396F02C LDR W8, [X8 + 0x18]
	0x0396F030 STR W8, [X31 + 0x2C]
	0x0396F034 CBZ X29, 0x396F41C
	0x0396F038 LDR W9, [X29 + 0x18]
	0x0396F03C CMP X24, X9
	0x0396F040 B.CS 0x396F420
	0x0396F044 STR W8, [X29, X22, LSL #2]
	0x0396F048 LDR X8, [X27 + 0x10]
	0x0396F04C CBZ X8, 0x396F3FC
	0x0396F050 LDR W9, [X8 + 0x18]
	0x0396F054 CMP X24, X9
	0x0396F058 B.CS 0x396F400
	0x0396F05C LDR W1, [X8, X22, LSL #2]
	0x0396F060 ADRP X8, 0x78E000
	0x0396F064 LDR W2, [X31 + 0x2C]
	0x0396F068 LDR X8, [X8 + 0x858]
	0x0396F06C LDR X3, [X8]
	0x0396F070 MOV X0, X28
	0x0396F074 BL 0x2A0A344
	0x0396F078 LDR X8, [X27 + 0x10]
	0x0396F07C CBZ X8, 0x396F3DC
	0x0396F080 LDR W9, [X8 + 0x18]
	0x0396F084 CMP X24, X9
	0x0396F088 B.CS 0x396F3E8
	0x0396F08C CBZ X23, 0x396F3F4
	0x0396F090 LDR W1, [X8, X22, LSL #2]
	0x0396F094 ADRP X8, 0x7E0000
	0x0396F098 LDR X21, [X26 + 0x18]
	0x0396F09C LDR X8, [X8 + 0x1D0]
	0x0396F0A0 LDR X2, [X8]
	0x0396F0A4 MOV X0, X23
	0x0396F0A8 BL 0x301BCCC
	0x0396F0AC MOV X1, X0
	0x0396F0B0 CBZ X21, 0x396F410
	0x0396F0B4 ADRP X9, 0x7E0000
	0x0396F0B8 LDR W10, [X21 + 0x1C]
	0x0396F0BC LDR X8, [X21 + 0x10]
	0x0396F0C0 LDR X9, [X9 + 0x1C0]
	0x0396F0C4 ADD W10, W10, 0x1
	0x0396F0C8 LDR X9, [X9]
	0x0396F0CC STR W10, [X21 + 0x1C]
	0x0396F0D0 CBZ X8, 0x396F418
	0x0396F0D4 LDRSW X10, [X21 + 0x18]
	0x0396F0D8 LDR W11, [X8 + 0x18]
	0x0396F0DC CMP W10, W11
	0x0396F0E0 B.CS 0x396F0F8
	0x0396F0E4 ADD W9, W10, 0x1
	0x0396F0E8 ADD X8, X8, X10, 0x3, LSL
	0x0396F0EC STR W9, [X21 + 0x18]
	0x0396F0F0 STR X1, [X8 + 0x20]
	0x0396F0F4 B 0x396F10C
	0x0396F0F8 LDR X8, [X9 + 0x20]
	0x0396F0FC LDR X8, [X8 + 0xC0]
	0x0396F100 LDR X2, [X8 + 0x70]
	0x0396F104 MOV X0, X21
	0x0396F108 BL 0x301BF90
	0x0396F10C LDR X8, [X27 + 0x10]
	0x0396F110 CBZ X8, 0x396F3D4
	0x0396F114 LDR W9, [X8 + 0x18]
	0x0396F118 CMP X24, X9
	0x0396F11C B.CS 0x396F3F0
	0x0396F120 CBZ X25, 0x396F414
	0x0396F124 LDR W1, [X8, X22, LSL #2]
	0x0396F128 ADRP X8, 0x7DE000
	0x0396F12C LDR X21, [X26 + 0x20]
	0x0396F130 LDR X8, [X8 + 0xC80]
	0x0396F134 LDR X2, [X8]
	0x0396F138 MOV X0, X25
	0x0396F13C BL 0x2A0A2A8
	0x0396F140 CBZ X21, 0x396F3E4
	0x0396F144 ADRP X9, 0x785000
	0x0396F148 LDR W10, [X21 + 0x1C]
	0x0396F14C LDR X8, [X21 + 0x10]
	0x0396F150 LDR X9, [X9 + 0xE10]
	0x0396F154 ADD W10, W10, 0x1
	0x0396F158 LDR X9, [X9]
	0x0396F15C STR W10, [X21 + 0x1C]
	0x0396F160 CBZ X8, 0x396F408
	0x0396F164 LDRSW X10, [X21 + 0x18]
	0x0396F168 LDR W11, [X8 + 0x18]
	0x0396F16C ADD W1, W0, W19
	0x0396F170 CMP W10, W11
	0x0396F174 B.CS 0x396F18C
	0x0396F178 ADD W9, W10, 0x1
	0x0396F17C ADD X8, X8, X10, 0x2, LSL
	0x0396F180 STR W9, [X21 + 0x18]
	0x0396F184 STR W1, [X8 + 0x20]
	0x0396F188 B 0x396F1A0
	0x0396F18C LDR X8, [X9 + 0x20]
	0x0396F190 LDR X8, [X8 + 0xC0]
	0x0396F194 LDR X2, [X8 + 0x70]
	0x0396F198 MOV X0, X21
	0x0396F19C BL 0x2FDC70C
	0x0396F1A0 LDR X8, [X27 + 0x10]
	0x0396F1A4 ADD X22, X22, 0x1
	0x0396F1A8 CBNZ X8, 0x396EFD4
	0x0396F1AC B 0x396F3C4
	0x0396F1B0 ADRP X8, 0x786000
	0x0396F1B4 LDR X21, [X26 + 0x10]
	0x0396F1B8 LDR X8, [X8 + 0x9C8]
	0x0396F1BC LDR X1, [X8]
	0x0396F1C0 LDP X22, X24, [X31 + 0x18]
	0x0396F1C4 MOV X0, X29
	0x0396F1C8 BL 0x21D54D4
	0x0396F1CC MOV X1, X0
	0x0396F1D0 CBZ X21, 0x396F434
	0x0396F1D4 MOV X0, X21
	0x0396F1D8 MOV X2, X31
	0x0396F1DC BL 0x38FFBA8
	0x0396F1E0 CBZ X24, 0x396F430
	0x0396F1E4 ADRP X9, 0x7E0000
	0x0396F1E8 LDR W10, [X24 + 0x1C]
	0x0396F1EC LDR X8, [X24 + 0x10]
	0x0396F1F0 LDR X9, [X9 + 0x308]
	0x0396F1F4 ADD W10, W10, 0x1
	0x0396F1F8 LDR X9, [X9]
	0x0396F1FC STR W10, [X24 + 0x1C]
	0x0396F200 CBZ X8, 0x396F438
	0x0396F204 LDRSW X10, [X24 + 0x18]
	0x0396F208 LDR W11, [X8 + 0x18]
	0x0396F20C CMP W10, W11
	0x0396F210 B.CS 0x396F228
	0x0396F214 ADD W9, W10, 0x1
	0x0396F218 ADD X8, X8, X10, 0x3, LSL
	0x0396F21C STR W9, [X24 + 0x18]
	0x0396F220 STR X26, [X8 + 0x20]
	0x0396F224 B 0x396EE24
	0x0396F228 LDR X8, [X9 + 0x20]
	0x0396F22C LDR X8, [X8 + 0xC0]
	0x0396F230 LDR X2, [X8 + 0x70]
	0x0396F234 MOV X0, X24
	0x0396F238 MOV X1, X26
	0x0396F23C BL 0x301BF90
	0x0396F240 B 0x396EE24
	0x0396F244 MOV X26, X31
	0x0396F248 MOVZ W19, 0xE
	0x0396F24C LDR X20, [X31 + 0x8]
	0x0396F250 CBZ X22, 0x396F2B4
	0x0396F254 LDR X8, [X22]
	0x0396F258 ADRP X10, 0x784000
	0x0396F25C LDRH W9, [X8 + 0x12E]
	0x0396F260 LDR X10, [X10 + 0xE00]
	0x0396F264 LDR X1, [X10]
	0x0396F268 CBZ X9, 0x396F28C
	0x0396F26C LDR X10, [X8 + 0xB0]
	0x0396F270 ADD X10, X10, 0x8
	0x0396F274 LDUR X11, [X10 - 0x8]
	0x0396F278 CMP X11, X1
	0x0396F27C B.EQ 0x396F29C
	0x0396F280 SUBS X9, X9, 0x1
	0x0396F284 ADD X10, X10, 0x10
	0x0396F288 B.NE 0x396F274
	0x0396F28C MOV X0, X22
	0x0396F290 MOV W2, W31
	0x0396F294 BL 0x1C5C788
	0x0396F298 B 0x396F2A8
	0x0396F29C LDRSW X9, [X10]
	0x0396F2A0 ADD X8, X8, X9, 0x4, LSL
	0x0396F2A4 ADD X0, X8, 0x138
	0x0396F2A8 LDP X8, X1, [X0]
	0x0396F2AC MOV X0, X22
	0x0396F2B0 BLR X8
	0x0396F2B4 CBNZ X26, 0x396F4AC
	0x0396F2B8 CMP W19, 0xE
	0x0396F2BC B.EQ 0x396F2C4
	0x0396F2C0 CBNZ W19, 0x396F3A4
	0x0396F2C4 ADRP X21, 0x7E0000
	0x0396F2C8 LDR X21, [X21 + 0xD98]
	0x0396F2CC MOV X0, X24
	0x0396F2D0 MOV X1, X20
	0x0396F2D4 MOV X2, X23
	0x0396F2D8 MOV X3, X31
	0x0396F2DC MOV X4, X31
	0x0396F2E0 BL 0x390186C
	0x0396F2E4 LDR W8, [X31 + 0x4]
	0x0396F2E8 TBZ X8, 0x0, 0x396F2FC
	0x0396F2EC LDR X1, [X31 + 0x10]
	0x0396F2F0 MOV X0, X20
	0x0396F2F4 MOV X2, X31
	0x0396F2F8 BL 0x395C0F0
	0x0396F2FC MOV X0, X20
	0x0396F300 MOV W1, W31
	0x0396F304 MOV X2, X31
	0x0396F308 BL 0x39197E8
	0x0396F30C LDR X0, [X21]
	0x0396F310 LDR W8, [X0 + 0xE0]
	0x0396F314 CBNZ W8, 0x396F320
	0x0396F318 BL 0x1C16DFC
	0x0396F31C LDR X0, [X21]
	0x0396F320 LDR X8, [X0 + 0xB8]
	0x0396F324 ADRP X23, 0x7E0000
	0x0396F328 ADRP X22, 0x7E0000
	0x0396F32C LDR X19, [X8 + 0x8]
	0x0396F330 LDR X23, [X23 + 0x4E8]
	0x0396F334 LDR X22, [X22 + 0x3F8]
	0x0396F338 CBNZ X19, 0x396F38C
	0x0396F33C LDR W8, [X0 + 0xE0]
	0x0396F340 CBNZ W8, 0x396F34C
	0x0396F344 BL 0x1C16DFC
	0x0396F348 LDR X0, [X21]
	0x0396F34C ADRP X9, 0x7E0000
	0x0396F350 LDR X8, [X0 + 0xB8]
	0x0396F354 LDR X9, [X9 + 0x508]
	0x0396F358 LDR X20, [X8]
	0x0396F35C LDR X0, [X9]
	0x0396F360 BL 0x1C16F10
	0x0396F364 ADRP X8, 0x7E0000
	0x0396F368 LDR X8, [X8 + 0xE98]
	0x0396F36C MOV X1, X20
	0x0396F370 MOV X3, X31
	0x0396F374 MOV X19, X0
	0x0396F378 LDR X2, [X8]
	0x0396F37C BL 0x2D30578
	0x0396F380 LDR X8, [X21]
	0x0396F384 LDR X8, [X8 + 0xB8]
	0x0396F388 STR X19, [X8 + 0x8]
	0x0396F38C LDR X2, [X23]
	0x0396F390 MOV X0, X24
	0x0396F394 MOV X1, X19
	0x0396F398 BL 0x21CF224
	0x0396F39C LDR X1, [X22]
	0x0396F3A0 BL 0x21D79F4
	0x0396F3A4 LDP X20, X19, [X31 + 0x80]
	0x0396F3A8 LDP X22, X21, [X31 + 0x70]
	0x0396F3AC LDP X24, X23, [X31 + 0x60]
	0x0396F3B0 LDP X26, X25, [X31 + 0x50]
	0x0396F3B4 LDP X28, X27, [X31 + 0x40]
	0x0396F3B8 LDP X29, X30, [X31 + 0x30]
	0x0396F3BC ADD X31, X31, 0x90
	0x0396F3C0 RET
	0x0396F3C4 LDP X22, X24, [X31 + 0x18]
	0x0396F3C8 BL 0x1C16F20
	0x0396F3CC BL 0x1C16F20
	0x0396F3D0 BL 0x1C16F28
	0x0396F3D4 LDP X22, X24, [X31 + 0x18]
	0x0396F3D8 BL 0x1C16F20
	0x0396F3DC LDP X22, X24, [X31 + 0x18]
	0x0396F3E0 BL 0x1C16F20
	0x0396F3E4 BL 0x1C16F20
	0x0396F3E8 BL 0x1C16F28
	0x0396F3EC BL 0x1C16F20
	0x0396F3F0 BL 0x1C16F28
	0x0396F3F4 BL 0x1C16F20
	0x0396F3F8 BL 0x1C16F28
	0x0396F3FC BL 0x1C16F20
	0x0396F400 LDP X22, X24, [X31 + 0x18]
	0x0396F404 BL 0x1C16F28
	0x0396F408 BL 0x1C16F20
	0x0396F40C BL 0x1C16F20
	0x0396F410 BL 0x1C16F20
	0x0396F414 BL 0x1C16F20
	0x0396F418 BL 0x1C16F20
	0x0396F41C BL 0x1C16F20
	0x0396F420 BL 0x1C16F28
	0x0396F424 BL 0x1C16F20
	0x0396F428 BL 0x1C16F20
	0x0396F42C BL 0x1C16F20
	0x0396F430 BL 0x1C16F20
	0x0396F434 BL 0x1C16F20
	0x0396F438 BL 0x1C16F20
	0x0396F43C BL 0x1C16F20
	0x0396F440 ADRP X0, 0x789000
	0x0396F444 LDR X0, [X0 + 0x528]
	0x0396F448 BL 0x1C16D08
	0x0396F44C BL 0x1C16F10
	0x0396F450 MOV X19, X0
	0x0396F454 ADRP X0, 0x7DE000
	0x0396F458 LDR X0, [X0 + 0xE90]
	0x0396F45C B 0x396F47C
	0x0396F460 ADRP X0, 0x789000
	0x0396F464 LDR X0, [X0 + 0x528]
	0x0396F468 BL 0x1C16D08
	0x0396F46C BL 0x1C16F10
	0x0396F470 MOV X19, X0
	0x0396F474 ADRP X0, 0x7DF000
	0x0396F478 LDR X0, [X0 + 0x640]
	0x0396F47C BL 0x1C16D08
	0x0396F480 MOV X1, X0
	0x0396F484 MOV X0, X19
	0x0396F488 MOV X2, X31
	0x0396F48C BL 0x330E100
	0x0396F490 ADRP X0, 0x7E0000
	0x0396F494 LDR X0, [X0 + 0xEA0]
	0x0396F498 BL 0x1C16D08
	0x0396F49C MOV X1, X0
	0x0396F4A0 MOV X0, X19
	0x0396F4A4 BL 0x1C16DEC
	0x0396F4A8 BL 0x1C16F20
	0x0396F4AC MOV X0, X26
	0x0396F4B0 BL 0x1C16F18
	0x0396F4B4 B 0x396F538
	0x0396F4B8 B 0x396F53C
	0x0396F4BC B 0x396F538
	0x0396F4C0 B 0x396F538
	0x0396F4C4 B 0x396F538
	0x0396F4C8 B 0x396F538
	0x0396F4CC B 0x396F538
	0x0396F4D0 B 0x396F53C
	0x0396F4D4 B 0x396F53C
	0x0396F4D8 B 0x396F538
	0x0396F4DC B 0x396F53C
	0x0396F4E0 B 0x396F53C
	0x0396F4E4 B 0x396F53C
	0x0396F4E8 B 0x396F53C
	0x0396F4EC B 0x396F53C
	0x0396F4F0 B 0x396F53C
	0x0396F4F4 B 0x396F538
	0x0396F4F8 B 0x396F538
	0x0396F4FC B 0x396F538
	0x0396F500 B 0x396F538
	0x0396F504 B 0x396F53C
	0x0396F508 B 0x396F538
	0x0396F50C B 0x396F53C
	0x0396F510 B 0x396F53C
	0x0396F514 B 0x396F538
	0x0396F518 B 0x396F538
	0x0396F51C B 0x396F538
	0x0396F520 B 0x396F538
	0x0396F524 B 0x396F538
	0x0396F528 B 0x396F538
	0x0396F52C B 0x396F538
	0x0396F530 B 0x396F538
	0x0396F534 B 0x396F53C
	0x0396F538 LDP X22, X24, [X31 + 0x18]
	0x0396F53C MOV X25, X0
	0x0396F540 CMP W1, 0x1
	0x0396F544 B.NE 0x396F560
	0x0396F548 MOV X0, X25
	0x0396F54C BL 0x3EB1AD0
	0x0396F550 LDR X26, [X0]
	0x0396F554 BL 0x3EB1AE0
	0x0396F558 MOV W19, W31
	0x0396F55C B 0x396F24C
	0x0396F560 MOV X26, X31
	0x0396F564 B 0x396F56C
	0x0396F568 MOV X25, X0
	0x0396F56C LDR X8, [X31 + 0x18]
	0x0396F570 CBZ X8, 0x396F5D8
	0x0396F574 LDR X8, [X31 + 0x18]
	0x0396F578 ADRP X10, 0x784000
	0x0396F57C LDR X8, [X8]
	0x0396F580 LDRH W9, [X8 + 0x12E]
	0x0396F584 LDR X10, [X10 + 0xE00]
	0x0396F588 LDR X1, [X10]
	0x0396F58C CBZ X9, 0x396F5B0
	0x0396F590 LDR X10, [X8 + 0xB0]
	0x0396F594 ADD X10, X10, 0x8
	0x0396F598 LDUR X11, [X10 - 0x8]
	0x0396F59C CMP X11, X1
	0x0396F5A0 B.EQ 0x396F5C0
	0x0396F5A4 SUBS X9, X9, 0x1
	0x0396F5A8 ADD X10, X10, 0x10
	0x0396F5AC B.NE 0x396F598
	0x0396F5B0 LDR X0, [X31 + 0x18]
	0x0396F5B4 MOV W2, W31
	0x0396F5B8 BL 0x1C5C788
	0x0396F5BC B 0x396F5CC
	0x0396F5C0 LDRSW X9, [X10]
	0x0396F5C4 ADD X8, X8, X9, 0x4, LSL
	0x0396F5C8 ADD X0, X8, 0x138
	0x0396F5CC LDP X8, X1, [X0]
	0x0396F5D0 LDR X0, [X31 + 0x18]
	0x0396F5D4 BLR X8
	0x0396F5D8 CBNZ X26, 0x396F5E4
	0x0396F5DC MOV X0, X25
	0x0396F5E0 BL 0x1D2C690
	0x0396F5E4 MOV X0, X26
	0x0396F5E8 BL 0x1C16F18
	0x0396F5EC BL 0x1990590
	0x0396F5F0 SUB X31, X31, 0xC0
	0x0396F5F4 STP X29, X30, [X31 + 0x60]
	0x0396F5F8 STP X28, X27, [X31 + 0x70]
	0x0396F5FC STP X26, X25, [X31 + 0x80]
	0x0396F600 STP X24, X23, [X31 + 0x90]
	0x0396F604 STP X22, X21, [X31 + 0xA0]
	0x0396F608 STP X20, X19, [X31 + 0xB0]
	0x0396F60C ADRP X20, 0xA72000
	0x0396F610 ADRP X22, 0x7E0000
	0x0396F614 ADRP X19, 0x7E0000
	0x0396F618 LDRB W8, [X20 + 0x9F1]
	0x0396F61C LDR X22, [X22 + 0xEA8]
	0x0396F620 LDR X19, [X19 + 0xEB0]
	0x0396F624 MOV X21, X0
	0x0396F628 TBNZ X8, 0x0, 0x396F6E8
	0x0396F62C ADRP X0, 0x7E0000
	0x0396F630 LDR X0, [X0 + 0x328]
	0x0396F634 BL 0x1C16CF4
	0x0396F638 ADRP X0, 0x7DF000
	0x0396F63C LDR X0, [X0 + 0xD98]
	0x0396F640 BL 0x1C16CF4
	0x0396F644 ADRP X0, 0x7E0000
	0x0396F648 LDR X0, [X0 + 0xDD8]
	0x0396F64C BL 0x1C16CF4
	0x0396F650 ADRP X0, 0x7DF000
	0x0396F654 LDR X0, [X0 + 0xDA0]
	0x0396F658 BL 0x1C16CF4
	0x0396F65C ADRP X0, 0x7E0000
	0x0396F660 LDR X0, [X0 + 0xDF8]
	0x0396F664 BL 0x1C16CF4
	0x0396F668 ADRP X0, 0x7DF000
	0x0396F66C LDR X0, [X0 + 0xDA8]
	0x0396F670 BL 0x1C16CF4
	0x0396F674 ADRP X0, 0x7E0000
	0x0396F678 LDR X0, [X0 + 0xE20]
	0x0396F67C BL 0x1C16CF4
	0x0396F680 ADRP X0, 0x7DF000
	0x0396F684 LDR X0, [X0 + 0x888]
	0x0396F688 BL 0x1C16CF4
	0x0396F68C ADRP X0, 0x7E0000
	0x0396F690 LDR X0, [X0 + 0xE38]
	0x0396F694 BL 0x1C16CF4
	0x0396F698 ADRP X0, 0x7DF000
	0x0396F69C LDR X0, [X0 + 0x890]
	0x0396F6A0 BL 0x1C16CF4
	0x0396F6A4 ADRP X0, 0x7DF000
	0x0396F6A8 LDR X0, [X0 + 0x898]
	0x0396F6AC BL 0x1C16CF4
	0x0396F6B0 ADRP X0, 0x7E0000
	0x0396F6B4 LDR X0, [X0 + 0xEB8]
	0x0396F6B8 BL 0x1C16CF4
	0x0396F6BC ADRP X0, 0x7DF000
	0x0396F6C0 LDR X0, [X0 + 0xDB0]
	0x0396F6C4 BL 0x1C16CF4
	0x0396F6C8 ADRP X0, 0x7E0000
	0x0396F6CC LDR X0, [X0 + 0xEB0]
	0x0396F6D0 BL 0x1C16CF4
	0x0396F6D4 ADRP X0, 0x7E0000
	0x0396F6D8 LDR X0, [X0 + 0xEA8]
	0x0396F6DC BL 0x1C16CF4
	0x0396F6E0 MOVZ W8, 0x1
	0x0396F6E4 STRB W8, [X20 + 0x9F1]
	0x0396F6E8 STP X31, X31, [X31 + 0x40]
	0x0396F6EC STR X31, [X31 + 0x50]
	0x0396F6F0 ADRP X8, 0x7DF000
	0x0396F6F4 LDR X8, [X8 + 0x898]
	0x0396F6F8 STP X31, X31, [X31 + 0x20]
	0x0396F6FC STR X31, [X31 + 0x30]
	0x0396F700 LDR X0, [X8]
	0x0396F704 BL 0x1C16F10
	0x0396F708 ADRP X8, 0x7DF000
	0x0396F70C LDR X8, [X8 + 0x890]
	0x0396F710 MOV X20, X0
	0x0396F714 LDR X1, [X8]
	0x0396F718 BL 0x2DBDE08
	0x0396F71C LDR X0, [X22]
	0x0396F720 BL 0x1C16F10
	0x0396F724 LDR X1, [X19]
	0x0396F728 MOV X19, X0
	0x0396F72C BL 0x301B7C4
	0x0396F730 CBZ X21, 0x396F988
	0x0396F734 ADRP X8, 0x7DF000
	0x0396F738 LDR X8, [X8 + 0xDB0]
	0x0396F73C ADRP X27, 0x7DF000
	0x0396F740 ADRP X28, 0x7DF000
	0x0396F744 ADRP X29, 0x7E0000
	0x0396F748 ADRP X23, 0x7E0000
	0x0396F74C ADRP X24, 0x7E0000
	0x0396F750 LDR X27, [X27 + 0xDA0]
	0x0396F754 LDR X28, [X28 + 0x888]
	0x0396F758 LDR X29, [X29 + 0x328]
	0x0396F75C LDR X23, [X23 + 0xE38]
	0x0396F760 LDR X24, [X24 + 0xDF8]
	0x0396F764 LDR X1, [X8]
	0x0396F768 ADRP X25, 0x7E0000
	0x0396F76C LDR X25, [X25 + 0xEB8]
	0x0396F770 ADD X8, X31, 0x8
	0x0396F774 MOV X0, X21
	0x0396F778 BL 0x301CB58
	0x0396F77C LDUR V0, [X31 + 0x8]
	0x0396F780 LDR X8, [X31 + 0x18]
	0x0396F784 STR V0, [X31 + 0x4]
	0x0396F788 STR X8, [X31 + 0x50]
	0x0396F78C LDR X1, [X27]
	0x0396F790 ADD X0, X31, 0x40
	0x0396F794 BL 0x2BC4350
	0x0396F798 TBZ X0, 0x0, 0x396F900
	0x0396F79C LDR X22, [X31 + 0x50]
	0x0396F7A0 CBZ X22, 0x396F938
	0x0396F7A4 CBZ X20, 0x396F93C
	0x0396F7A8 LDR X1, [X22 + 0x20]
	0x0396F7AC LDR X2, [X28]
	0x0396F7B0 MOV X0, X20
	0x0396F7B4 BL 0x2DBEF30
	0x0396F7B8 TBZ X0, 0x0, 0x396F78C
	0x0396F7BC ADRP X8, 0x7DF000
	0x0396F7C0 LDR X8, [X8 + 0x898]
	0x0396F7C4 LDR X0, [X8]
	0x0396F7C8 BL 0x1C16F10
	0x0396F7CC ADRP X8, 0x7DF000
	0x0396F7D0 LDR X8, [X8 + 0x890]
	0x0396F7D4 MOV X21, X0
	0x0396F7D8 LDR X1, [X8]
	0x0396F7DC BL 0x2DBDE08
	0x0396F7E0 CBZ X21, 0x396F97C
	0x0396F7E4 LDR X1, [X22 + 0x20]
	0x0396F7E8 LDR X2, [X28]
	0x0396F7EC MOV X0, X21
	0x0396F7F0 BL 0x2DBEF30
	0x0396F7F4 LDR X0, [X29]
	0x0396F7F8 LDR W8, [X0 + 0xE0]
	0x0396F7FC CBNZ W8, 0x396F804
	0x0396F800 BL 0x1C16DFC
	0x0396F804 MOV X0, X22
	0x0396F808 MOV X1, X21
	0x0396F80C MOV X2, X31
	0x0396F810 BL 0x39695F4
	0x0396F814 LDR X1, [X23]
	0x0396F818 ADD X8, X31, 0x8
	0x0396F81C MOV X0, X21
	0x0396F820 BL 0x2DBE924
	0x0396F824 LDUR V0, [X31 + 0x8]
	0x0396F828 LDR X8, [X31 + 0x18]
	0x0396F82C STR V0, [X31 + 0x2]
	0x0396F830 STR X8, [X31 + 0x30]
	0x0396F834 LDR X1, [X24]
	0x0396F838 ADD X0, X31, 0x20
	0x0396F83C BL 0x2BC3C64
	0x0396F840 TBZ X0, 0x0, 0x396F858
	0x0396F844 LDR X1, [X31 + 0x30]
	0x0396F848 LDR X2, [X28]
	0x0396F84C MOV X0, X20
	0x0396F850 BL 0x2DBEF30
	0x0396F854 B 0x396F834
	0x0396F858 MOV X22, X31
	0x0396F85C MOVZ W26, 0x6
	0x0396F860 ADRP X8, 0x7E0000
	0x0396F864 LDR X8, [X8 + 0xDD8]
	0x0396F868 LDR X1, [X8]
	0x0396F86C ADD X0, X31, 0x20
	0x0396F870 BL 0x2BC3C60
	0x0396F874 CBNZ X22, 0x396F974
	0x0396F878 CMP W26, 0x6
	0x0396F87C B.EQ 0x396F884
	0x0396F880 CBNZ W26, 0x396F900
	0x0396F884 CBZ X19, 0x396F980
	0x0396F888 LDR W10, [X19 + 0x1C]
	0x0396F88C LDR X8, [X19 + 0x10]
	0x0396F890 LDR X9, [X25]
	0x0396F894 ADD W10, W10, 0x1
	0x0396F898 STR W10, [X19 + 0x1C]
	0x0396F89C CBZ X8, 0x396F984
	0x0396F8A0 LDRSW X10, [X19 + 0x18]
	0x0396F8A4 LDR W11, [X8 + 0x18]
	0x0396F8A8 CMP W10, W11
	0x0396F8AC B.CS 0x396F8C4
	0x0396F8B0 ADD W9, W10, 0x1
	0x0396F8B4 ADD X8, X8, X10, 0x3, LSL
	0x0396F8B8 STR W9, [X19 + 0x18]
	0x0396F8BC STR X21, [X8 + 0x20]
	0x0396F8C0 B 0x396F78C
	0x0396F8C4 LDR X8, [X9 + 0x20]
	0x0396F8C8 LDR X8, [X8 + 0xC0]
	0x0396F8CC LDR X2, [X8 + 0x70]
	0x0396F8D0 MOV X0, X19
	0x0396F8D4 MOV X1, X21
	0x0396F8D8 BL 0x301BF90
	0x0396F8DC B 0x396F78C
	0x0396F8E0 B 0x396F8E4
	0x0396F8E4 CMP W1, 0x1
	0x0396F8E8 B.NE 0x396F940
	0x0396F8EC BL 0x3EB1AD0
	0x0396F8F0 LDR X22, [X0]
	0x0396F8F4 BL 0x3EB1AE0
	0x0396F8F8 MOV W26, W31
	0x0396F8FC B 0x396F860
	0x0396F900 ADRP X8, 0x7DF000
	0x0396F904 LDR X8, [X8 + 0xD98]
	0x0396F908 ADD X0, X31, 0x40
	0x0396F90C LDR X1, [X8]
	0x0396F910 BL 0x2BC434C
	0x0396F914 MOV X0, X19
	0x0396F918 LDP X20, X19, [X31 + 0xB0]
	0x0396F91C LDP X22, X21, [X31 + 0xA0]
	0x0396F920 LDP X24, X23, [X31 + 0x90]
	0x0396F924 LDP X26, X25, [X31 + 0x80]
	0x0396F928 LDP X28, X27, [X31 + 0x70]
	0x0396F92C LDP X29, X30, [X31 + 0x60]
	0x0396F930 ADD X31, X31, 0xC0
	0x0396F934 RET
	0x0396F938 BL 0x1C16F20
	0x0396F93C BL 0x1C16F20
	0x0396F940 MOV X20, X1
	0x0396F944 MOV X21, X0
	0x0396F948 MOV X22, X31
	0x0396F94C ADRP X8, 0x7E0000
	0x0396F950 LDR X8, [X8 + 0xDD8]
	0x0396F954 LDR X1, [X8]
	0x0396F958 ADD X0, X31, 0x20
	0x0396F95C BL 0x2BC3C60
	0x0396F960 MOV X0, X21
	0x0396F964 MOV X1, X20
	0x0396F968 CBZ X22, 0x396F9C8
	0x0396F96C MOV X0, X22
	0x0396F970 BL 0x1C16F18
	0x0396F974 MOV X0, X22
	0x0396F978 BL 0x1C16F18
	0x0396F97C BL 0x1C16F20
	0x0396F980 BL 0x1C16F20
	0x0396F984 BL 0x1C16F20
	0x0396F988 BL 0x1C16F20
	0x0396F98C MOV X20, X1
	0x0396F990 MOV X21, X0
	0x0396F994 B 0x396F94C

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+320], D13
	003 Move [X31+328], D12
	004 Move [X31+336], D11
	005 Move [X31+344], D10
	006 Move [X31+352], D9
	007 Move [X31+360], D8
	008 Move [X31+368], X29
	009 Move [X31+376], X30
	010 Move [X31+384], X28
	011 Move [X31+392], X27
	012 Move [X31+400], X26
	013 Move [X31+408], X25
	014 Move [X31+416], X24
	015 Move [X31+424], X23
	016 Move [X31+432], X22
	017 Move [X31+440], X21
	018 Move [X31+448], X20
	019 Move [X31+456], X19
	020 Move [X31+76], W2
	021 Move [X31+96], D0
	022 Move X21, 0xA74000
	023 Move X22, 0x786000
	024 Move W8, [X21+2541]
	025 Move X22, [X22+1432]
	026 Move W23, W3
	027 Move X20, X1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {101}
	033 Move X0, 0x78B000
	034 Move X0, [X0+320]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E1000
	037 Move X0, [X0+1376]
	038 Call 0x1C17CF4
	039 Move X0, 0x786000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E0000
	043 Move X0, [X0+3208]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E0000
	046 Move X0, [X0+3216]
	047 Call 0x1C17CF4
	048 Move X0, 0x786000
	049 Move X0, [X0+3608]
	050 Call 0x1C17CF4
	051 Move X0, 0x787000
	052 Move X0, [X0+3672]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E0000
	055 Move X0, [X0+3600]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E0000
	058 Move X0, [X0+3432]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E2000
	061 Move X0, [X0+2816]
	062 Call 0x1C17CF4
	063 Move X0, 0x7E1000
	064 Move X0, [X0+2616]
	065 Call 0x1C17CF4
	066 Move X0, 0x7E0000
	067 Move X0, [X0+3440]
	068 Call 0x1C17CF4
	069 Move X0, 0x7E1000
	070 Move X0, [X0+4064]
	071 Call 0x1C17CF4
	072 Move X0, 0x7E1000
	073 Move X0, [X0+3144]
	074 Call 0x1C17CF4
	075 Move X0, 0x7E1000
	076 Move X0, [X0+4072]
	077 Call 0x1C17CF4
	078 Move X0, 0x7E0000
	079 Move X0, [X0+3448]
	080 Call 0x1C17CF4
	081 Move X0, 0x7E0000
	082 Move X0, [X0+3568]
	083 Call 0x1C17CF4
	084 Move X0, 0x786000
	085 Move X0, [X0+1432]
	086 Call 0x1C17CF4
	087 Move X0, 0x7E2000
	088 Move X0, [X0+832]
	089 Call 0x1C17CF4
	090 Move X0, 0x7E0000
	091 Move X0, [X0+2696]
	092 Call 0x1C17CF4
	093 Move X0, 0x788000
	094 Move X0, [X0+2480]
	095 Call 0x1C17CF4
	096 Move X0, 0x7E1000
	097 Move X0, [X0+72]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+2541], W8
	101 Move X0, [X22]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Move X2, X31
	109 Call Object.op_Equality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {1053}
	114 Compare X20, 0
	115 JumpIfEqual {1060}
	116 Compare X19, 0
	117 JumpIfEqual {1047}
	118 Move X9, 0x7E0000
	119 Move X25, 0x7E0000
	120 Move X9, [X9+3448]
	121 Move X25, [X25+3440]
	122 Move X8, [X19+48]
	123 Move X21, 0x7E0000
	124 Move X0, [X9]
	125 Move X22, 0x7E1000
	126 Move [X31+64], X8
	127 Move X24, 0x7E0000
	128 Move X21, [X21+3568]
	129 Move X22, [X22+2616]
	130 Move X24, [X24+3208]
	131 Call 0x1C17F10
	132 Move X1, [X25]
	133 Move [X31+200], X0
	134 Call List`1<Edge>..ctor, X0
	135 Move X0, [X21]
	136 Call 0x1C17F10
	137 Move X1, [X22]
	138 Move [X31+192], X0
	139 Call List`1<Object>..ctor, X0
	140 Move X8, [X20]
	141 Move X1, [X24]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X20
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X20, X0
	162 Compare X0, 0
	163 JumpIfEqual {1078}
	164 Move X26, 0x786000
	165 Move X27, 0x7E0000
	166 Move X26, [X26+3608]
	167 Move X27, [X27+3216]
	168 Xor W29, W23, 1
	169 Move X8, [X20]
	170 Move X1, [X26]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X20
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X20
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {306}
	194 Move X8, [X20]
	195 Move X1, [X27]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X20
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X20
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X25, [X19+40]
	216 Compare X25, 0
	217 JumpIfEqual {1048}
	218 Move W8, [X25+24]
	219 Move X24, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W22, W31
	222 Move X23, X31
	223 Move W21, W31
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X25, W22
	226 Move X28, [X8+32]
	227 Compare X28, 0
	228 JumpIfEqual {1045}
	229 Move X0, X28
	230 Move X1, X31
	231 Call Face.get_edgesInternal, X0
	232 Move X1, X0
	233 Move X0, X19
	234 Move X2, X24
	235 Move X3, X31
	236 Call EdgeUtility.IndexOf, X0, X1, X2
	237 Move TEMP, X0
	238 And TEMP, TEMP, -2147483648
	239 Compare TEMP, -2147483648
	240 JumpIfEqual {243}
	241 Add W21, W21, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X28, X23
	244 Move W8, [X25+24]
	245 Add W22, W22, 1
	246 Move X23, X28
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X28, X31
	249 Move W21, W31
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X21, [X31+192]
	252 Move X0, [X31+200]
	253 NotImplemented "Instruction CSET not yet implemented."
	254 And W8, W8, W29
	255 Move TEMP, X8
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {169}
	259 Compare X0, 0
	260 JumpIfEqual {1051}
	261 Move X9, 0x7E0000
	262 Move W10, [X0+28]
	263 Move X8, [X0+16]
	264 Move X9, [X9+3432]
	265 Add W10, W10, 1
	266 Move X9, [X9]
	267 Move [X0+28], W10
	268 Compare X8, 0
	269 JumpIfEqual {1049}
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Move W11, [X8+24]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Add W9, W10, 1
	274 Add X8, X8, X10
	275 Move [X0+24], W9
	276 Move [X8+32], X24
	277 Move X8, [X9+32]
	278 Move X8, [X8+192]
	279 Move X2, [X8+112]
	280 Move X1, X24
	281 Call List`1<Edge>.AddWithResize, X0, X1
	282 Compare X21, 0
	283 JumpIfEqual {1052}
	284 Move X9, 0x7E0000
	285 Move W10, [X21+28]
	286 Move X8, [X21+16]
	287 Move X9, [X9+3600]
	288 Add W10, W10, 1
	289 Move X9, [X9]
	290 Move [X21+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {1050}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 Add X8, X8, X10
	298 Move [X21+24], W9
	299 Move [X8+32], X28
	300 Move X8, [X9+32]
	301 Move X8, [X8+192]
	302 Move X2, [X8+112]
	303 Move X0, X21
	304 Move X1, X28
	305 Call List`1<Object>.AddWithResize, X0, X1
	306 Move X23, X31
	307 Move W24, 15
	308 Compare X20, 0
	309 JumpIfEqual {333}
	310 Move X8, [X20]
	311 Move X10, 0x786000
	312 NotImplemented "Instruction LDRH not yet implemented."
	313 Move X10, [X10+3584]
	314 Move X1, [X10]
	315 Compare X9, 0
	316 JumpIfEqual {323}
	317 Move X10, [X8+176]
	318 Add X10, X10, 8
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Subtract X9, X9, 1
	322 Add X10, X10, 16
	323 Move X0, X20
	324 Move W2, W31
	325 Call 0x1C5D788
	326 NotImplemented "Instruction LDRSW not yet implemented."
	327 Add X8, X8, X9
	328 Add X0, X8, 312
	329 Move X8, [X0]
	330 Move X1, [X0+8]
	331 Move X0, X20
	332 NotImplemented "Instruction BLR not yet implemented."
	333 Compare X23, 0
	334 JumpIfNotEqual {1079}
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Compare W24, 0
	337 JumpIfNotEqual {1023}
	338 Move X23, [X31+200]
	339 Compare X23, 0
	340 JumpIfEqual {1047}
	341 Move W8, [X23+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X27, [X19+88]
	344 Move W1, 64
	345 Move X0, X19
	346 Move X2, X31
	347 Call ProBuilderMesh.HasArrays, X0, X1
	348 Move TEMP, X0
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfEqual {356}
	352 Move W1, 4
	353 Move X0, X19
	354 Move X2, X31
	355 Call ProBuilderMesh.Refresh, X0, X1
	356 Move X0, X19
	357 Move X1, X31
	358 Call ProBuilderMesh.get_normals, X0
	359 Move X25, 0x787000
	360 Move W8, [X23+24]
	361 Move X25, [X25+3672]
	362 Move X28, X0
	363 Move W1, W8
	364 ShiftRight W1, 31
	365 And W1, W1, 0x3FFFFFFF
	366 Move X0, [X25]
	367 Call 0x1C17D6C
	368 Move W8, [X23+24]
	369 Move X29, X0
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move X21, 0x7E1000
	372 Move X21, [X21+4072]
	373 Move W22, W31
	374 Move W20, W31
	375 Move X2, [X21]
	376 Move X0, X23
	377 Move W1, W20
	378 Call List`1<Edge>.get_Item, X0, X1
	379 Compare X29, 0
	380 JumpIfEqual {1047}
	381 Move W8, [X29+24]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add X8, X29, W22
	384 Move [X8+32], W0
	385 Move X2, [X21]
	386 Move X0, X23
	387 Move W1, W20
	388 Call List`1<Edge>.get_Item, X0, X1
	389 Move W9, [X29+24]
	390 Add W8, W22, 1
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Add W9, W22, 1
	393 Move X10, X0
	394 ShiftRight X10, 32
	395 And X10, X10, 0x7FFFFFFF
	396 Add X9, X29, W9
	397 Move [X9+32], W10
	398 Move W9, [X23+24]
	399 Add W20, W20, 1
	400 Add W22, W8, 1
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X21, 0x7E0000
	403 Move X21, [X21+3448]
	404 Move X0, [X21]
	405 Call 0x1C17F10
	406 Move X20, 0x7E0000
	407 Move X20, [X20+3440]
	408 Move X24, X0
	409 Move X1, [X20]
	410 Call List`1<Edge>..ctor, X0
	411 Move X0, [X21]
	412 Call 0x1C17F10
	413 Move X1, [X20]
	414 Move X26, X0
	415 Call List`1<Edge>..ctor, X0
	416 Move W1, 32
	417 Move X0, X19
	418 Move X2, X31
	419 Call ProBuilderMesh.HasArrays, X0, X1
	420 Move W8, [X23+24]
	421 Move [X31+60], W0
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move V0, [X31+6]
	424 Move X8, -48771072
	425 Move V11, [X8+380]
	426 Move W22, W31
	427 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	428 Move [X31+32], X27
	429 Move [X31+40], X26
	430 Move [X31+48], X28
	431 Move [X31+24], X29
	432 Move X8, 0x7E1000
	433 Move X8, [X8+4072]
	434 Move X0, X23
	435 Move W1, W22
	436 Move X2, [X8]
	437 Call List`1<Edge>.get_Item, X0, X1
	438 Move X23, X0
	439 Move X0, [X31+192]
	440 Compare X0, 0
	441 JumpIfEqual {1047}
	442 Move X8, 0x7E1000
	443 Move X8, [X8+3144]
	444 Move W1, W22
	445 Move X20, X23
	446 ShiftRight X20, 32
	447 And X20, X20, 0x7FFFFFFF
	448 Move X2, [X8]
	449 Call List`1<Object>.get_Item, X0, X1
	450 Move W8, [X31+76]
	451 Move X21, X0
	452 Move TEMP, X8
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {485}
	456 Move X0, X19
	457 Move W1, W23
	458 Move X2, X31
	459 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	460 Move X9, [X31+64]
	461 Compare X9, 0
	462 JumpIfEqual {1047}
	463 Move W8, [X9+24]
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Add X8, X9, W0
	466 Move X0, [X8+32]
	467 Move X1, X29
	468 Move X2, X28
	469 Call InternalMeshUtility.AverageNormalWithIndexes, X0, X1, X2
	470 Move X0, X19
	471 Move W1, W20
	472 Move X2, X31
	473 Move [X31+160], D0
	474 Move [X31+144], D1
	475 Move V9, V2
	476 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	477 Move X9, [X31+64]
	478 Move W8, [X9+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Add X8, X9, W0
	481 Move X0, [X8+32]
	482 Move X1, X29
	483 Move X2, X28
	484 Call InternalMeshUtility.AverageNormalWithIndexes, X0, X1, X2
	485 Move X0, X19
	486 Move X1, X21
	487 Move X2, X31
	488 Call Math.Normal, X0, X1
	489 Move X0, X19
	490 Move X1, X21
	491 Move X2, X31
	492 Move [X31+160], D0
	493 Move [X31+144], D1
	494 Move V9, V2
	495 Call Math.Normal, X0, X1
	496 Move X0, X19
	497 Move W1, W23
	498 Move X2, X31
	499 Move [X31+128], D0
	500 Move [X31+112], D1
	501 Move V8, V2
	502 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	503 Move [X31+188], W0
	504 Move X0, X19
	505 Move W1, W20
	506 Move X2, X31
	507 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	508 Move X8, 0x787000
	509 Move X8, [X8+2480]
	510 Move W20, W0
	511 Move W1, 4
	512 Move X8, [X8]
	513 Move X0, X8
	514 Call 0x1C17D6C
	515 Move W12, 12
	516 Move X28, 0xA6A000
	517 Compare X27, 0
	518 JumpIfEqual {1047}
	519 Move W8, [X27+24]
	520 Move V3, [X31+144]
	521 Move V2, [X31+160]
	522 Move [X31+88], X21
	523 Move [X31+84], W20
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Move X21, W23
	526 NotImplemented "Instruction MADD not yet implemented."
	527 Add X8, X8, 32
	528 Move V0, [X8]
	529 Move X29, X0
	530 Move X9, X8
	531 Add X9, X9, 8
	532 Move V1, [X9]
	533 Compare X0, 0
	534 JumpIfEqual {1047}
	535 Move W10, [X29+24]
	536 Compare W10, 0
	537 JumpIfEqual {1046}
	538 Move [X29+32], D0
	539 Move [X29+40], S1
	540 Move W11, [X27+24]
	541 NotImplemented "Instruction SBFM not yet implemented."
	542 NotImplemented "Instruction CMP not yet implemented."
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Move [X31+80], W22
	545 NotImplemented "Instruction MADD not yet implemented."
	546 Move X26, X25
	547 Add X25, X10, 32
	548 Add X22, X10, 40
	549 Move V0, [X25]
	550 Move V1, [X22]
	551 Move [X29+44], D0
	552 Move [X29+52], S1
	553 Move W10, [X27+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move V12, [X8]
	556 Move W8, [X28+1925]
	557 Move V13, [X9]
	558 Compare W8, 0
	559 JumpIfNotEqual {567}
	560 Move X0, 0x785000
	561 Move X0, [X0+1448]
	562 Call 0x1C17CF4
	563 Move V3, [X31+144]
	564 Move V2, [X31+160]
	565 Move W8, 1
	566 Move [X28+1925], W8
	567 Move X8, 0x785000
	568 Move X8, [X8+1448]
	569 Move X0, [X8]
	570 Move W8, [X0+224]
	571 Compare W8, 0
	572 JumpIfNotEqual {576}
	573 Call 0x1C17DFC
	574 Move V3, [X31+144]
	575 Move V2, [X31+160]
	576 Multiply S0, S2, S2
	577 Multiply S1, S3, S3
	578 Add S0, S0, S1
	579 Multiply S1, S9, S9
	580 Add S0, S1, S0
	581 NotImplemented "Instruction FSQRT not yet implemented."
	582 NotImplemented "Instruction FCMP not yet implemented."
	583 Move V2.S[1], V3.S[0]
	584 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	585 NotImplemented "Instruction INVALID not yet implemented."
	586 NotImplemented "Instruction FDIV not yet implemented."
	587 Move X8, 0xA6A000
	588 Move W8, [X8+1923]
	589 Compare W8, 0
	590 JumpIfNotEqual {597}
	591 Move X0, 0x785000
	592 Move X0, [X0+1440]
	593 Call 0x1C17CF4
	594 Move W8, 1
	595 Move X9, 0xA6A000
	596 Move [X9+1923], W8
	597 Move X8, 0x785000
	598 Move X8, [X8+1440]
	599 Move X8, [X8]
	600 Move X8, [X8+184]
	601 Move V0, [X8]
	602 Move V1, [X8+8]
	603 Move W8, [X29+24]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move V2, [X31+6]
	606 NotImplemented "Instruction INVALID not yet implemented."
	607 Add V0, V12, V0
	608 Move [X29+56], D0
	609 Multiply S1, S1, S2
	610 Add S1, S13, S1
	611 Move [X29+64], S1
	612 Move W8, [X27+24]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move V9, [X25]
	615 Move W8, [X28+1925]
	616 Move V12, [X22]
	617 Move V3, [X31+112]
	618 Move V2, [X31+128]
	619 Compare W8, 0
	620 JumpIfNotEqual {628}
	621 Move X0, 0x785000
	622 Move X0, [X0+1448]
	623 Call 0x1C17CF4
	624 Move V3, [X31+112]
	625 Move V2, [X31+128]
	626 Move W8, 1
	627 Move [X28+1925], W8
	628 Move X8, 0x785000
	629 Move X8, [X8+1448]
	630 Move X28, X26
	631 Move X0, [X8]
	632 Move W8, [X0+224]
	633 Compare W8, 0
	634 JumpIfNotEqual {638}
	635 Call 0x1C17DFC
	636 Move V3, [X31+112]
	637 Move V2, [X31+128]
	638 Multiply S0, S2, S2
	639 Multiply S1, S3, S3
	640 Add S0, S0, S1
	641 Multiply S1, S8, S8
	642 Add S0, S1, S0
	643 NotImplemented "Instruction FSQRT not yet implemented."
	644 NotImplemented "Instruction FCMP not yet implemented."
	645 Move V2.S[1], V3.S[0]
	646 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	647 NotImplemented "Instruction INVALID not yet implemented."
	648 NotImplemented "Instruction FDIV not yet implemented."
	649 Move X8, 0xA6A000
	650 Move W8, [X8+1923]
	651 Compare W8, 0
	652 JumpIfNotEqual {659}
	653 Move X0, 0x785000
	654 Move X0, [X0+1440]
	655 Call 0x1C17CF4
	656 Move W8, 1
	657 Move X9, 0xA6A000
	658 Move [X9+1923], W8
	659 Move X8, 0x785000
	660 Move X8, [X8+1440]
	661 Move X8, [X8]
	662 Move X8, [X8+184]
	663 Move V0, [X8]
	664 Move V1, [X8+8]
	665 Move W8, [X29+24]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move V2, [X31+6]
	668 Move W8, [X31+60]
	669 NotImplemented "Instruction INVALID not yet implemented."
	670 Add V0, V9, V0
	671 Multiply S1, S1, S2
	672 Add S1, S12, S1
	673 Move [X29+68], D0
	674 Move [X29+76], S1
	675 Move TEMP, X8
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfNotEqual {726}
	679 Move X8, 0x78A000
	680 Move X8, [X8+320]
	681 Move W1, 4
	682 Move X0, [X8]
	683 Call 0x1C17D6C
	684 Move X9, [X19+136]
	685 Compare X9, 0
	686 JumpIfEqual {1047}
	687 Move W8, [X9+24]
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Move X26, X0
	690 Compare X0, 0
	691 JumpIfEqual {1047}
	692 Move W8, [X26+24]
	693 Compare W8, 0
	694 JumpIfEqual {1046}
	695 Add X9, X9, X21
	696 Move V0, [X9+2]
	697 Move [X26+2], V0
	698 Move X9, [X19+136]
	699 Compare X9, 0
	700 JumpIfEqual {1047}
	701 Move W10, [X9+24]
	702 NotImplemented "Instruction CMP not yet implemented."
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Add X9, X9, X20
	705 Move V0, [X9+2]
	706 Move [X26+3], V0
	707 Move X9, [X19+136]
	708 Compare X9, 0
	709 JumpIfEqual {1047}
	710 Move W10, [X9+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Add X9, X9, X21
	714 Move V0, [X9+2]
	715 Move [X26+4], V0
	716 Move X9, [X19+136]
	717 Compare X9, 0
	718 JumpIfEqual {1047}
	719 Move W10, [X9+24]
	720 Move X21, [X31+88]
	721 NotImplemented "Instruction CMP not yet implemented."
	722 NotImplemented "Instruction CMP not yet implemented."
	723 Add X8, X9, X20
	724 Move V0, [X8+2]
	725 Move [X26+5], V0
	726 Move X21, [X31+88]
	727 Move X26, X31
	728 Move X8, 0x7DF000
	729 Move X8, [X8+2696]
	730 Move W1, 4
	731 Move X0, [X8]
	732 Call 0x1C17D6C
	733 Move X20, 0x7E0000
	734 Move X20, [X20+72]
	735 Move X23, X0
	736 Move W1, 4
	737 Move X8, [X20]
	738 Move X0, X8
	739 Call 0x1C17D6C
	740 Move X8, [X20]
	741 Move X27, X0
	742 Move W1, 4
	743 Move X0, X8
	744 Call 0x1C17D6C
	745 Move X8, [X28]
	746 Move X22, X0
	747 Move W1, 6
	748 Move X0, X8
	749 Call 0x1C17D6C
	750 Move X8, 0x7E1000
	751 Move X8, [X8+832]
	752 Move X2, X31
	753 Move X25, X0
	754 Move X1, [X8]
	755 Call RuntimeHelpers.InitializeArray, X0, X1
	756 Compare X21, 0
	757 JumpIfEqual {1047}
	758 Move W21, [X21+72]
	759 Add X8, X31, 256
	760 Move X0, X31
	761 Call AutoUnwrapSettings.get_tile
	762 Move X8, 0x7E0000
	763 Move V0, [X31+256]
	764 Move V1, [X31+272]
	765 Move X8, [X8+1376]
	766 Move [X31+288], V0
	767 Move [X31+296], V1
	768 Move X0, [X8]
	769 Call 0x1C17F10
	770 Move V0, [X31+288]
	771 Move V1, [X31+304]
	772 Add X3, X31, 224
	773 Move TEMP, 0
	774 Not TEMP
	775 Move W5, TEMP
	776 Move TEMP, 0
	777 Not TEMP
	778 Move W6, TEMP
	779 Move X1, X25
	780 Move W2, W21
	781 Move W4, W31
	782 Move W7, W31
	783 Move X20, X0
	784 Move [X31+224], V0
	785 Move [X31+232], V1
	786 Move [X31], X31
	787 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	788 Move X0, [X28]
	789 Move W1, 4
	790 Call 0x1C17D6C
	791 Compare X0, 0
	792 JumpIfEqual {1047}
	793 Move X25, X28
	794 Move W8, [X0+24]
	795 Move X28, [X31+48]
	796 Move W21, [X31+84]
	797 Move X7, X0
	798 Move TEMP, 0
	799 Not TEMP
	800 Move W9, TEMP
	801 Compare W8, 0
	802 JumpIfEqual {1046}
	803 Move W10, [X31+188]
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Move [X7+32], W10
	806 NotImplemented "Instruction CMP not yet implemented."
	807 Move [X7+36], W21
	808 NotImplemented "Instruction CMP not yet implemented."
	809 Move [X7+40], W9
	810 Move X0, X19
	811 Move X1, X29
	812 Move X2, X26
	813 Move X3, X23
	814 Move X4, X27
	815 Move X5, X22
	816 Move X6, X20
	817 Move [X7+44], W9
	818 Move [X31], X31
	819 Call AppendElements.AppendFace, X0, X1, X2, X3, X4, X5, X6, X7
	820 Compare X0, 0
	821 JumpIfEqual {1047}
	822 Move X8, [X0+16]
	823 Move X27, [X31+32]
	824 Move X26, [X31+40]
	825 Move X29, [X31+24]
	826 Move W22, [X31+80]
	827 Move X23, X0
	828 Compare X8, 0
	829 JumpIfEqual {1047}
	830 Move W9, [X8+24]
	831 NotImplemented "Instruction CMP not yet implemented."
	832 NotImplemented "Instruction CMP not yet implemented."
	833 Move W1, [X8+44]
	834 Move W2, [X8+48]
	835 Add X0, X31, 256
	836 Move X3, X31
	837 Move [X31+256], X31
	838 Call Edge..ctor, X0, X1, X2
	839 Compare X26, 0
	840 JumpIfEqual {1047}
	841 Move X9, 0x7DF000
	842 Move X1, [X31+256]
	843 Move W10, [X26+28]
	844 Move X8, [X26+16]
	845 Move X9, [X9+3432]
	846 Add W10, W10, 1
	847 Move X9, [X9]
	848 Move [X26+28], W10
	849 Compare X8, 0
	850 JumpIfEqual {1047}
	851 NotImplemented "Instruction LDRSW not yet implemented."
	852 Move W11, [X8+24]
	853 NotImplemented "Instruction CMP not yet implemented."
	854 Add W9, W10, 1
	855 Add X8, X8, X10
	856 Move [X26+24], W9
	857 Move [X8+32], X1
	858 Move X8, [X9+32]
	859 Move X0, X26
	860 Move X8, [X8+192]
	861 Move X2, [X8+112]
	862 Call List`1<Edge>.AddWithResize, X0, X1
	863 Move X8, [X23+16]
	864 Compare X8, 0
	865 JumpIfEqual {1047}
	866 Move W9, [X8+24]
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Move W2, [X8+44]
	869 Move W1, [X31+188]
	870 Add X0, X31, 216
	871 Move X3, X31
	872 Move [X31+216], X31
	873 Call Edge..ctor, X0, X1, X2
	874 Compare X24, 0
	875 JumpIfEqual {1047}
	876 Move X9, 0x7DF000
	877 Move X1, [X31+216]
	878 Move W10, [X24+28]
	879 Move X8, [X24+16]
	880 Move X9, [X9+3432]
	881 Add W10, W10, 1
	882 Move X9, [X9]
	883 Move [X24+28], W10
	884 Compare X8, 0
	885 JumpIfEqual {1047}
	886 NotImplemented "Instruction LDRSW not yet implemented."
	887 Move W11, [X8+24]
	888 NotImplemented "Instruction CMP not yet implemented."
	889 Add W9, W10, 1
	890 Add X8, X8, X10
	891 Move [X24+24], W9
	892 Move [X8+32], X1
	893 Move X8, [X9+32]
	894 Move X0, X24
	895 Move X8, [X8+192]
	896 Move X2, [X8+112]
	897 Call List`1<Edge>.AddWithResize, X0, X1
	898 Move X8, [X23+16]
	899 Compare X8, 0
	900 JumpIfEqual {1047}
	901 Move W9, [X8+24]
	902 Move X23, [X31+200]
	903 NotImplemented "Instruction CMP not yet implemented."
	904 Move W2, [X8+48]
	905 Add X0, X31, 208
	906 Move W1, W21
	907 Move X3, X31
	908 Move [X31+208], X31
	909 Call Edge..ctor, X0, X1, X2
	910 Move X9, 0x7DF000
	911 Move X1, [X31+208]
	912 Move W10, [X24+28]
	913 Move X8, [X24+16]
	914 Move X9, [X9+3432]
	915 Add W10, W10, 1
	916 Move X9, [X9]
	917 Move [X24+28], W10
	918 Compare X8, 0
	919 JumpIfEqual {1047}
	920 NotImplemented "Instruction LDRSW not yet implemented."
	921 Move W11, [X8+24]
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Add W9, W10, 1
	924 Add X8, X8, X10
	925 Move [X24+24], W9
	926 Move [X8+32], X1
	927 Move X8, [X9+32]
	928 Move X0, X24
	929 Move X8, [X8+192]
	930 Move X2, [X8+112]
	931 Call List`1<Edge>.AddWithResize, X0, X1
	932 Move W8, [X23+24]
	933 Add W22, W22, 1
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move W8, [X31+76]
	936 Move TEMP, X8
	937 And TEMP, TEMP, 1
	938 Compare TEMP, 1
	939 JumpIfNotEqual {998}
	940 Compare X24, 0
	941 JumpIfEqual {1047}
	942 Move W8, [X24+24]
	943 NotImplemented "Instruction CMP not yet implemented."
	944 Move X23, 0x7E0000
	945 Move X23, [X23+4072]
	946 Move W20, W31
	947 Move X2, [X23]
	948 Move X0, X24
	949 Move W1, W20
	950 Call List`1<Edge>.get_Item, X0, X1
	951 Move W8, [X24+24]
	952 NotImplemented "Instruction CMP not yet implemented."
	953 Move X22, X0
	954 Move W21, W31
	955 NotImplemented "Instruction CMP not yet implemented."
	956 Move X2, [X23]
	957 Move X0, X24
	958 Move W1, W21
	959 Call List`1<Edge>.get_Item, X0, X1
	960 NotImplemented "Instruction CMP not yet implemented."
	961 Move W8, [X24+24]
	962 Add W21, W21, 1
	963 NotImplemented "Instruction CMP not yet implemented."
	964 Move X0, [X25]
	965 Move W1, 2
	966 Call 0x1C17D6C
	967 Move X2, [X23]
	968 Move X22, X0
	969 Move X0, X24
	970 Move W1, W21
	971 Call List`1<Edge>.get_Item, X0, X1
	972 Compare X22, 0
	973 JumpIfEqual {1047}
	974 Move W8, [X22+24]
	975 Compare W8, 0
	976 JumpIfEqual {1046}
	977 Move X8, X0
	978 ShiftRight X8, 32
	979 And X8, X8, 0x7FFFFFFF
	980 Move [X22+32], W8
	981 Move X2, [X23]
	982 Move X0, X24
	983 Move W1, W20
	984 Call List`1<Edge>.get_Item, X0, X1
	985 Move W8, [X22+24]
	986 NotImplemented "Instruction CMP not yet implemented."
	987 Move X8, X0
	988 ShiftRight X8, 32
	989 And X8, X8, 0x7FFFFFFF
	990 Move X0, X19
	991 Move X1, X22
	992 Move X2, X31
	993 Move [X22+36], W8
	994 Call ProBuilderMesh.SetVerticesCoincident, X0, X1
	995 Move W8, [X24+24]
	996 Add W20, W20, 1
	997 NotImplemented "Instruction CMP not yet implemented."
	998 Move X19, [X19+40]
	999 Compare X19, 0
	1000 JumpIfEqual {1047}
	1001 Move W8, [X19+24]
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Move W20, W31
	1004 NotImplemented "Instruction CMP not yet implemented."
	1005 Add X8, X19, W20
	1006 Move X0, [X8+32]
	1007 Compare X0, 0
	1008 JumpIfEqual {1047}
	1009 Move X1, X31
	1010 Call Face.InvalidateCache, X0
	1011 Move W8, [X19+24]
	1012 Add W20, W20, 1
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Compare X26, 0
	1015 JumpIfEqual {1047}
	1016 Move X8, 0x7E1000
	1017 Move X8, [X8+2816]
	1018 Move X0, X26
	1019 Move X1, [X8]
	1020 Call List`1<Edge>.ToArray, X0
	1021 Move X2, X0
	1022 Move X2, X31
	1023 Move X20, [X31+448]
	1024 Move X19, [X31+456]
	1025 Move X22, [X31+432]
	1026 Move X21, [X31+440]
	1027 Move X24, [X31+416]
	1028 Move X23, [X31+424]
	1029 Move X26, [X31+400]
	1030 Move X25, [X31+408]
	1031 Move X28, [X31+384]
	1032 Move X27, [X31+392]
	1033 Move X29, [X31+368]
	1034 Move X30, [X31+376]
	1035 Move D9, [X31+352]
	1036 Move D8, [X31+360]
	1037 Move D11, [X31+336]
	1038 Move D10, [X31+344]
	1039 Move D13, [X31+320]
	1040 Move D12, [X31+328]
	1041 Move X0, X2
	1042 Add X31, X31, 464
	1043 Return X0
	1044 Call 0x1C17F28
	1045 Call 0x1C17F20
	1046 Call 0x1C17F28
	1047 Call 0x1C17F20
	1048 Call 0x1C17F20
	1049 Call 0x1C17F20
	1050 Call 0x1C17F20
	1051 Call 0x1C17F20
	1052 Call 0x1C17F20
	1053 Move X0, 0x78A000
	1054 Move X0, [X0+1320]
	1055 Call 0x1C17D08
	1056 Call 0x1C17F10
	1057 Move X19, X0
	1058 Move X0, 0x7DF000
	1059 Move X0, [X0+3728]
	1060 Move X0, 0x78A000
	1061 Move X0, [X0+1320]
	1062 Call 0x1C17D08
	1063 Call 0x1C17F10
	1064 Move X19, X0
	1065 Move X0, 0x7E0000
	1066 Move X0, [X0+1616]
	1067 Call 0x1C17D08
	1068 Move X1, X0
	1069 Move X0, X19
	1070 Move X2, X31
	1071 Call ArgumentNullException..ctor, X0, X1
	1072 Move X0, 0x7E1000
	1073 Move X0, [X0+3728]
	1074 Call 0x1C17D08
	1075 Move X1, X0
	1076 Move X0, X19
	1077 Call 0x1C17DEC
	1078 Call 0x1C17F20
	1079 Move X0, X23
	1080 Call 0x1C17F18
	1081 Move X24, X0
	1082 NotImplemented "Instruction CMP not yet implemented."
	1083 Move X0, X24
	1084 Call 0x3EB2AD0
	1085 Move X23, [X0]
	1086 Call 0x3EB2AE0
	1087 Move W24, W31
	1088 Compare X20, 0
	1089 JumpIfNotEqual {310}
	1090 Move X23, X31
	1091 Move X24, X0
	1092 Compare X20, 0
	1093 JumpIfEqual {1117}
	1094 Move X8, [X20]
	1095 Move X10, 0x785000
	1096 NotImplemented "Instruction LDRH not yet implemented."
	1097 Move X10, [X10+3584]
	1098 Move X1, [X10]
	1099 Compare X9, 0
	1100 JumpIfEqual {1107}
	1101 Move X10, [X8+176]
	1102 Add X10, X10, 8
	1103 NotImplemented "Instruction LDUR not yet implemented."
	1104 NotImplemented "Instruction CMP not yet implemented."
	1105 Subtract X9, X9, 1
	1106 Add X10, X10, 16
	1107 Move X0, X20
	1108 Move W2, W31
	1109 Call 0x1C5D788
	1110 NotImplemented "Instruction LDRSW not yet implemented."
	1111 Add X8, X8, X9
	1112 Add X0, X8, 312
	1113 Move X8, [X0]
	1114 Move X1, [X0+8]
	1115 Move X0, X20
	1116 NotImplemented "Instruction BLR not yet implemented."
	1117 Compare X23, 0
	1118 JumpIfNotEqual {1121}
	1119 Move X0, X24
	1120 Call 0x1D2D690
	1121 Move X0, X23
	1122 Call 0x1C17F18
	1123 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> DetachFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0396FB2C LDR X0, [X24]
	0x0396FB30 STP X31, X31, [X31 + 0x30]

ISIL:
	001 Move W2, 1

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> DetachFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Boolean deleteSourceFaces)

Disassembly:
	0x0396FB34 STR X31, [X31 + 0x40]
	0x0396FB38 STP X31, X31, [X31 + 0x20]
	0x0396FB3C BL 0x1C16F10
	0x0396FB40 LDR X1, [X19]
	0x0396FB44 MOV X19, X0
	0x0396FB48 BL 0x29DED30
	0x0396FB4C LDR X0, [X23]
	0x0396FB50 BL 0x1C16F10
	0x0396FB54 LDR X1, [X21]
	0x0396FB58 MOV X21, X0
	0x0396FB5C BL 0x2D9FF10
	0x0396FB60 CBZ X22, 0x396FD14
	0x0396FB64 ADRP X8, 0x7E0000
	0x0396FB68 LDR X8, [X8 + 0xE38]
	0x0396FB6C ADRP X29, 0x7DE000
	0x0396FB70 LDR X29, [X29 + 0xC80]
	0x0396FB74 MOV X0, X22
	0x0396FB78 LDR X1, [X8]
	0x0396FB7C ADD X8, X31, 0x8
	0x0396FB80 BL 0x2DBE924
	0x0396FB84 LDUR V0, [X31 + 0x8]
	0x0396FB88 LDR X8, [X31 + 0x18]
	0x0396FB8C STR V0, [X31 + 0x3]
	0x0396FB90 STR X8, [X31 + 0x40]
	0x0396FB94 ADRP X8, 0x7E0000
	0x0396FB98 LDR X8, [X8 + 0xDF8]
	0x0396FB9C LDR X1, [X8]
	0x0396FBA0 ADD X0, X31, 0x30
	0x0396FBA4 BL 0x2BC3C64
	0x0396FBA8 TBZ X0, 0x0, 0x396FCC0
	0x0396FBAC LDR X22, [X31 + 0x40]
	0x0396FBB0 CBZ X22, 0x396FD0C
	0x0396FBB4 MOV X0, X22
	0x0396FBB8 MOV X1, X31
	0x0396FBBC BL 0x38FFA80
	0x0396FBC0 MOV X23, X0
	0x0396FBC4 CBZ X0, 0x396FD10
	0x0396FBC8 LDR X8, [X23 + 0x18]
	0x0396FBCC CMP W8, 0x1
	0x0396FBD0 B.LT 0x396FB94
	0x0396FBD4 MOV X28, X31
	0x0396FBD8 AND X8, X8, 0x0
	0x0396FBDC ADD X27, X23, 0x20
	0x0396FBE0 CMP X28, W8, UXTW
	0x0396FBE4 B.CS 0x396FD00
	0x0396FBE8 CBZ X20, 0x396FCFC
	0x0396FBEC ADD X8, X27, X28, 0x3, LSL
	0x0396FBF0 LDP W24, W25, [X8]
	0x0396FBF4 LDR X2, [X29]
	0x0396FBF8 MOV X0, X20
	0x0396FBFC MOV W1, W24
	0x0396FC00 BL 0x2A0A2A8
	0x0396FC04 LDR X2, [X29]
	0x0396FC08 MOV W26, W0
	0x0396FC0C MOV X0, X20
	0x0396FC10 MOV W1, W25
	0x0396FC14 BL 0x2A0A2A8
	0x0396FC18 MOV W2, W0
	0x0396FC1C ADD X0, X31, 0x20
	0x0396FC20 MOV W1, W26
	0x0396FC24 MOV W3, W24
	0x0396FC28 MOV W4, W25
	0x0396FC2C MOV X5, X31
	0x0396FC30 BL 0x38FE740
	0x0396FC34 CBZ X21, 0x396FCF8
	0x0396FC38 ADRP X8, 0x7DE000
	0x0396FC3C LDP X1, X2, [X31 + 0x20]
	0x0396FC40 LDR X8, [X8 + 0xCC0]
	0x0396FC44 LDR X3, [X8]
	0x0396FC48 MOV X0, X21
	0x0396FC4C BL 0x2DA1088
	0x0396FC50 LDP X1, X2, [X31 + 0x20]
	0x0396FC54 TBZ X0, 0x0, 0x396FC78
	0x0396FC58 CBZ X19, 0x396FD04
	0x0396FC5C ADRP X8, 0x7E0000
	0x0396FC60 LDR X8, [X8 + 0xED0]
	0x0396FC64 LDR X4, [X8]
	0x0396FC68 MOV X0, X19
	0x0396FC6C MOV X3, X22
	0x0396FC70 BL 0x29DF5F8
	0x0396FC74 B 0x396FCAC
	0x0396FC78 CBZ X19, 0x396FD08
	0x0396FC7C ADRP X8, 0x7E0000
	0x0396FC80 LDR X8, [X8 + 0xED8]
	0x0396FC84 LDR X3, [X8]
	0x0396FC88 MOV X0, X19
	0x0396FC8C BL 0x29DF804
	0x0396FC90 TBZ X0, 0x0, 0x396FCAC
	0x0396FC94 ADRP X8, 0x7E0000
	0x0396FC98 LDP X1, X2, [X31 + 0x20]
	0x0396FC9C LDR X8, [X8 + 0xEE0]
	0x0396FCA0 LDR X3, [X8]
	0x0396FCA4 MOV X0, X19
	0x0396FCA8 BL 0x29E09F0
	0x0396FCAC LDR W8, [X23 + 0x18]
	0x0396FCB0 ADD X28, X28, 0x1
	0x0396FCB4 CMP X28, W8, SXTW
	0x0396FCB8 B.LT 0x396FBE0
	0x0396FCBC B 0x396FB94
	0x0396FCC0 ADRP X8, 0x7E0000
	0x0396FCC4 LDR X8, [X8 + 0xDD8]
	0x0396FCC8 ADD X0, X31, 0x30
	0x0396FCCC LDR X1, [X8]
	0x0396FCD0 BL 0x2BC3C60
	0x0396FCD4 MOV X0, X19
	0x0396FCD8 LDP X20, X19, [X31 + 0xA0]
	0x0396FCDC LDP X22, X21, [X31 + 0x90]
	0x0396FCE0 LDP X24, X23, [X31 + 0x80]
	0x0396FCE4 LDP X26, X25, [X31 + 0x70]
	0x0396FCE8 LDP X28, X27, [X31 + 0x60]
	0x0396FCEC LDP X29, X30, [X31 + 0x50]
	0x0396FCF0 ADD X31, X31, 0xB0
	0x0396FCF4 RET
	0x0396FCF8 BL 0x1C16F20
	0x0396FCFC BL 0x1C16F20
	0x0396FD00 BL 0x1C16F28
	0x0396FD04 BL 0x1C16F20
	0x0396FD08 BL 0x1C16F20
	0x0396FD0C BL 0x1C16F20
	0x0396FD10 BL 0x1C16F20
	0x0396FD14 BL 0x1C16F20
	0x0396FD18 B 0x396FD54
	0x0396FD1C B 0x396FD54
	0x0396FD20 B 0x396FD54
	0x0396FD24 B 0x396FD54
	0x0396FD28 B 0x396FD54
	0x0396FD2C B 0x396FD54
	0x0396FD30 B 0x396FD54
	0x0396FD34 B 0x396FD54
	0x0396FD38 B 0x396FD54
	0x0396FD3C B 0x396FD54
	0x0396FD40 B 0x396FD54
	0x0396FD44 B 0x396FD54
	0x0396FD48 B 0x396FD54
	0x0396FD4C B 0x396FD54
	0x0396FD50 B 0x396FD54
	0x0396FD54 MOV X20, X0
	0x0396FD58 CMP W1, 0x1
	0x0396FD5C B.NE 0x396FD90
	0x0396FD60 MOV X0, X20
	0x0396FD64 BL 0x3EB1AD0
	0x0396FD68 LDR X21, [X0]
	0x0396FD6C BL 0x3EB1AE0
	0x0396FD70 ADRP X8, 0x7E0000
	0x0396FD74 LDR X8, [X8 + 0xDD8]
	0x0396FD78 ADD X0, X31, 0x30
	0x0396FD7C LDR X1, [X8]
	0x0396FD80 BL 0x2BC3C60
	0x0396FD84 CBZ X21, 0x396FCD4
	0x0396FD88 MOV X0, X21
	0x0396FD8C BL 0x1C16F18
	0x0396FD90 MOV X21, X31
	0x0396FD94 B 0x396FD9C
	0x0396FD98 MOV X20, X0
	0x0396FD9C ADRP X8, 0x7E0000
	0x0396FDA0 LDR X8, [X8 + 0xDD8]
	0x0396FDA4 LDR X1, [X8]
	0x0396FDA8 ADD X0, X31, 0x30
	0x0396FDAC BL 0x2BC3C60
	0x0396FDB0 CBNZ X21, 0x396FDBC
	0x0396FDB4 MOV X0, X20
	0x0396FDB8 BL 0x1D2C690
	0x0396FDBC MOV X0, X21
	0x0396FDC0 BL 0x1C16F18
	0x0396FDC4 BL 0x1990590
	0x0396FDC8 STR X30, [X31 - 0x20]!
	0x0396FDCC STP X20, X19, [X31 + 0x10]
	0x0396FDD0 ADRP X19, 0xA72000
	0x0396FDD4 ADRP X20, 0x7E0000
	0x0396FDD8 LDRB W8, [X19 + 0x9F3]
	0x0396FDDC LDR X20, [X20 + 0xD98]
	0x0396FDE0 TBNZ X8, 0x0, 0x396FDF8
	0x0396FDE4 ADRP X0, 0x7E0000
	0x0396FDE8 LDR X0, [X0 + 0xD98]
	0x0396FDEC BL 0x1C16CF4
	0x0396FDF0 MOVZ W8, 0x1
	0x0396FDF4 STRB W8, [X19 + 0x9F3]
	0x0396FDF8 LDR X0, [X20]
	0x0396FDFC BL 0x1C16F10
	0x0396FE00 MOV X1, X31
	0x0396FE04 MOV X19, X0
	0x0396FE08 BL 0x33BDD8C
	0x0396FE0C LDR X8, [X20]
	0x0396FE10 LDR X8, [X8 + 0xB8]
	0x0396FE14 STR X19, [X8]
	0x0396FE18 LDP X20, X19, [X31 + 0x10]
	0x0396FE1C LDR X30, [X31], #0x20
	0x0396FE20 RET
	0x0396FE24 MOV X1, X31
	0x0396FE28 B 0x33BDD8C
	0x0396FE2C STR X30, [X31 - 0x10]!
	0x0396FE30 CBZ X1, 0x396FE40
	0x0396FE34 LDR X0, [X1 + 0x10]
	0x0396FE38 LDR X30, [X31], #0x10
	0x0396FE3C RET
	0x0396FE40 BL 0x1C16F20
	0x0396FE44 STR X30, [X31 - 0x20]!
	0x0396FE48 STP X20, X19, [X31 + 0x10]
	0x0396FE4C ADRP X20, 0xA72000
	0x0396FE50 LDRB W8, [X20 + 0x9F4]
	0x0396FE54 MOV X19, X1
	0x0396FE58 TBNZ X8, 0x0, 0x396FE70
	0x0396FE5C ADRP X0, 0x7E0000
	0x0396FE60 LDR X0, [X0 + 0xEE8]
	0x0396FE64 BL 0x1C16CF4
	0x0396FE68 MOVZ W8, 0x1
	0x0396FE6C STRB W8, [X20 + 0x9F4]
	0x0396FE70 CBZ X19, 0x396FE9C
	0x0396FE74 MOV X0, X19
	0x0396FE78 MOV X1, X31
	0x0396FE7C BL 0x3900240
	0x0396FE80 CBZ X0, 0x396FE9C
	0x0396FE84 ADRP X8, 0x7E0000
	0x0396FE88 LDR X8, [X8 + 0xEE8]
	0x0396FE8C LDP X20, X19, [X31 + 0x10]
	0x0396FE90 LDR X1, [X8]
	0x0396FE94 LDR X30, [X31], #0x20
	0x0396FE98 B 0x2532FF0
	0x0396FE9C BL 0x1C16F20
	0x0396FEA0 SUB X31, X31, 0x120
	0x0396FEA4 STP X29, X30, [X31 + 0xC0]
	0x0396FEA8 STP X28, X27, [X31 + 0xD0]
	0x0396FEAC STP X26, X25, [X31 + 0xE0]
	0x0396FEB0 STP X24, X23, [X31 + 0xF0]
	0x0396FEB4 STP X22, X21, [X31 + 0x100]
	0x0396FEB8 STP X20, X19, [X31 + 0x110]
	0x0396FEBC ADRP X19, 0xA72000
	0x0396FEC0 LDRB W8, [X19 + 0x9F6]
	0x0396FEC4 MOV W25, W1
	0x0396FEC8 MOV X24, X0
	0x0396FECC TBNZ X8, 0x0, 0x39700A0
	0x0396FED0 ADRP X0, 0x78B000
	0x0396FED4 LDR X0, [X0 + 0xB38]
	0x0396FED8 BL 0x1C16CF4
	0x0396FEDC ADRP X0, 0x7C6000
	0x0396FEE0 LDR X0, [X0 + 0x5B0]
	0x0396FEE4 BL 0x1C16CF4
	0x0396FEE8 ADRP X0, 0x7DF000
	0x0396FEEC LDR X0, [X0 + 0x560]
	0x0396FEF0 BL 0x1C16CF4
	0x0396FEF4 ADRP X0, 0x7E0000
	0x0396FEF8 LDR X0, [X0 + 0xEF0]
	0x0396FEFC BL 0x1C16CF4
	0x0396FF00 ADRP X0, 0x7E0000
	0x0396FF04 LDR X0, [X0 + 0xEF8]
	0x0396FF08 BL 0x1C16CF4
	0x0396FF0C ADRP X0, 0x7E0000
	0x0396FF10 LDR X0, [X0 + 0xF00]
	0x0396FF14 BL 0x1C16CF4
	0x0396FF18 ADRP X0, 0x7DF000
	0x0396FF1C LDR X0, [X0 + 0x548]
	0x0396FF20 BL 0x1C16CF4
	0x0396FF24 ADRP X0, 0x786000
	0x0396FF28 LDR X0, [X0 + 0x168]
	0x0396FF2C BL 0x1C16CF4
	0x0396FF30 ADRP X0, 0x785000
	0x0396FF34 LDR X0, [X0 + 0xE58]
	0x0396FF38 BL 0x1C16CF4
	0x0396FF3C ADRP X0, 0x7DE000
	0x0396FF40 LDR X0, [X0 + 0xC10]
	0x0396FF44 BL 0x1C16CF4
	0x0396FF48 ADRP X0, 0x7DE000
	0x0396FF4C LDR X0, [X0 + 0xE10]
	0x0396FF50 BL 0x1C16CF4
	0x0396FF54 ADRP X0, 0x788000
	0x0396FF58 LDR X0, [X0 + 0x3B8]
	0x0396FF5C BL 0x1C16CF4
	0x0396FF60 ADRP X0, 0x7DF000
	0x0396FF64 LDR X0, [X0 + 0x720]
	0x0396FF68 BL 0x1C16CF4
	0x0396FF6C ADRP X0, 0x7DF000
	0x0396FF70 LDR X0, [X0 + 0xC38]
	0x0396FF74 BL 0x1C16CF4
	0x0396FF78 ADRP X0, 0x7B1000
	0x0396FF7C LDR X0, [X0 + 0x6C0]
	0x0396FF80 BL 0x1C16CF4
	0x0396FF84 ADRP X0, 0x7B0000
	0x0396FF88 LDR X0, [X0 + 0x5B0]
	0x0396FF8C BL 0x1C16CF4
	0x0396FF90 ADRP X0, 0x7E0000
	0x0396FF94 LDR X0, [X0 + 0x190]
	0x0396FF98 BL 0x1C16CF4
	0x0396FF9C ADRP X0, 0x7E0000
	0x0396FFA0 LDR X0, [X0 + 0xF08]
	0x0396FFA4 BL 0x1C16CF4
	0x0396FFA8 ADRP X0, 0x7DF000
	0x0396FFAC LDR X0, [X0 + 0xA38]
	0x0396FFB0 BL 0x1C16CF4
	0x0396FFB4 ADRP X0, 0x7E0000
	0x0396FFB8 LDR X0, [X0 + 0x198]
	0x0396FFBC BL 0x1C16CF4
	0x0396FFC0 ADRP X0, 0x7B0000
	0x0396FFC4 LDR X0, [X0 + 0x5B8]
	0x0396FFC8 BL 0x1C16CF4
	0x0396FFCC ADRP X0, 0x7E0000
	0x0396FFD0 LDR X0, [X0 + 0x1A0]
	0x0396FFD4 BL 0x1C16CF4
	0x0396FFD8 ADRP X0, 0x7DE000
	0x0396FFDC LDR X0, [X0 + 0xC08]
	0x0396FFE0 BL 0x1C16CF4
	0x0396FFE4 ADRP X0, 0x7DF000
	0x0396FFE8 LDR X0, [X0 + 0xC40]
	0x0396FFEC BL 0x1C16CF4
	0x0396FFF0 ADRP X0, 0x7DF000
	0x0396FFF4 LDR X0, [X0 + 0xC48]
	0x0396FFF8 BL 0x1C16CF4
	0x0396FFFC ADRP X0, 0x7DE000
	0x03970000 LDR X0, [X0 + 0xC00]
	0x03970004 BL 0x1C16CF4
	0x03970008 ADRP X0, 0x787000
	0x0397000C LDR X0, [X0 + 0x3C0]
	0x03970010 BL 0x1C16CF4
	0x03970014 ADRP X0, 0x7DE000
	0x03970018 LDR X0, [X0 + 0x718]
	0x0397001C BL 0x1C16CF4
	0x03970020 ADRP X0, 0x7DD000
	0x03970024 LDR X0, [X0 + 0xDF0]
	0x03970028 BL 0x1C16CF4
	0x0397002C ADRP X0, 0x7DF000
	0x03970030 LDR X0, [X0 + 0xF10]
	0x03970034 BL 0x1C16CF4
	0x03970038 ADRP X0, 0x7DF000
	0x0397003C LDR X0, [X0 + 0xF18]
	0x03970040 BL 0x1C16CF4
	0x03970044 ADRP X0, 0x7DF000
	0x03970048 LDR X0, [X0 + 0xF20]
	0x0397004C BL 0x1C16CF4
	0x03970050 ADRP X0, 0x783000
	0x03970054 LDR X0, [X0 + 0xD78]
	0x03970058 BL 0x1C16CF4
	0x0397005C ADRP X0, 0x783000
	0x03970060 LDR X0, [X0 + 0x598]
	0x03970064 BL 0x1C16CF4
	0x03970068 ADRP X0, 0x7DF000
	0x0397006C LDR X0, [X0 + 0xF28]
	0x03970070 BL 0x1C16CF4
	0x03970074 ADRP X0, 0x7DF000
	0x03970078 LDR X0, [X0 + 0xF30]
	0x0397007C BL 0x1C16CF4
	0x03970080 ADRP X0, 0x7DF000
	0x03970084 LDR X0, [X0 + 0xF38]
	0x03970088 BL 0x1C16CF4
	0x0397008C ADRP X0, 0x7DF000
	0x03970090 LDR X0, [X0 + 0xF40]
	0x03970094 BL 0x1C16CF4
	0x03970098 MOVZ W8, 0x1
	0x0397009C STRB W8, [X19 + 0x9F6]
	0x039700A0 CBZ X24, 0x3970F4C
	0x039700A4 ADRP X8, 0x78A000
	0x039700A8 LDR X8, [X8 + 0xB38]
	0x039700AC MOV X0, X24
	0x039700B0 LDR X1, [X8]
	0x039700B4 BL 0x21A3894
	0x039700B8 CBZ X0, 0x3970F4C
	0x039700BC ADRP X22, 0x7DF000
	0x039700C0 LDR X22, [X22 + 0xF40]
	0x039700C4 MOV X1, X31
	0x039700C8 BL 0x3C16D04
	0x039700CC MOV X26, X0
	0x039700D0 MOV X0, X24
	0x039700D4 MOV X1, X31
	0x039700D8 BL 0x3C32ECC
	0x039700DC LDR X8, [X22]
	0x039700E0 MOV X19, X0
	0x039700E4 LDR W9, [X8 + 0xE0]
	0x039700E8 CBNZ W9, 0x39700F8
	0x039700EC MOV X0, X8
	0x039700F0 BL 0x1C16DFC
	0x039700F4 LDR X8, [X22]
	0x039700F8 LDR X9, [X8 + 0xB8]
	0x039700FC ADRP X23, 0x7DF000
	0x03970100 LDR X20, [X9 + 0x8]
	0x03970104 LDR X23, [X23 + 0xF20]
	0x03970108 CBNZ X20, 0x3970160
	0x0397010C LDR W9, [X8 + 0xE0]
	0x03970110 CBNZ W9, 0x3970120
	0x03970114 MOV X0, X8
	0x03970118 BL 0x1C16DFC
	0x0397011C LDR X8, [X22]
	0x03970120 ADRP X9, 0x7DF000
	0x03970124 LDR X8, [X8 + 0xB8]
	0x03970128 LDR X9, [X9 + 0xEF8]
	0x0397012C LDR X21, [X8]
	0x03970130 LDR X0, [X9]
	0x03970134 BL 0x1C16F10
	0x03970138 ADRP X8, 0x7DF000
	0x0397013C LDR X8, [X8 + 0xF28]
	0x03970140 MOV X1, X21
	0x03970144 MOV X3, X31
	0x03970148 MOV X20, X0
	0x0397014C LDR X2, [X8]
	0x03970150 BL 0x2D30578
	0x03970154 LDR X8, [X22]
	0x03970158 LDR X8, [X8 + 0xB8]
	0x0397015C STR X20, [X8 + 0x8]
	0x03970160 LDR X2, [X23]
	0x03970164 MOV X0, X19
	0x03970168 MOV X1, X20
	0x0397016C BL 0x221B348
	0x03970170 STR X0, [X31 + 0x28]
	0x03970174 MOV X0, X24
	0x03970178 MOV X1, X31
	0x0397017C BL 0x3C32ECC
	0x03970180 LDR X8, [X22]
	0x03970184 MOV X19, X0
	0x03970188 LDR W9, [X8 + 0xE0]
	0x0397018C CBNZ W9, 0x397019C
	0x03970190 MOV X0, X8
	0x03970194 BL 0x1C16DFC
	0x03970198 LDR X8, [X22]
	0x0397019C LDR X9, [X8 + 0xB8]
	0x039701A0 ADRP X23, 0x7DF000
	0x039701A4 LDR X20, [X9 + 0x10]
	0x039701A8 LDR X23, [X23 + 0xF10]
	0x039701AC CBNZ X20, 0x3970204
	0x039701B0 LDR W9, [X8 + 0xE0]
	0x039701B4 CBNZ W9, 0x39701C4
	0x039701B8 MOV X0, X8
	0x039701BC BL 0x1C16DFC
	0x039701C0 LDR X8, [X22]
	0x039701C4 ADRP X9, 0x7DF000
	0x039701C8 LDR X8, [X8 + 0xB8]
	0x039701CC LDR X9, [X9 + 0xEF0]
	0x039701D0 LDR X21, [X8]
	0x039701D4 LDR X0, [X9]
	0x039701D8 BL 0x1C16F10
	0x039701DC ADRP X8, 0x7DF000
	0x039701E0 LDR X8, [X8 + 0xF30]
	0x039701E4 MOV X1, X21
	0x039701E8 MOV X3, X31
	0x039701EC MOV X20, X0
	0x039701F0 LDR X2, [X8]
	0x039701F4 BL 0x2D30578
	0x039701F8 LDR X8, [X22]
	0x039701FC LDR X8, [X8 + 0xB8]
	0x03970200 STR X20, [X8 + 0x10]
	0x03970204 LDR X2, [X23]
	0x03970208 MOV X0, X19
	0x0397020C MOV X1, X20
	0x03970210 BL 0x221B348
	0x03970214 STR X0, [X31 + 0x30]
	0x03970218 MOV X0, X24
	0x0397021C MOV X1, X31
	0x03970220 BL 0x3C32ECC
	0x03970224 LDR X8, [X22]
	0x03970228 MOV X19, X0
	0x0397022C LDR W9, [X8 + 0xE0]
	0x03970230 CBNZ W9, 0x3970240
	0x03970234 MOV X0, X8
	0x03970238 BL 0x1C16DFC
	0x0397023C LDR X8, [X22]
	0x03970240 LDR X9, [X8 + 0xB8]
	0x03970244 ADRP X23, 0x7DF000
	0x03970248 LDR X20, [X9 + 0x18]
	0x0397024C LDR X23, [X23 + 0xF18]
	0x03970250 CBNZ X20, 0x39702A8
	0x03970254 LDR W9, [X8 + 0xE0]
	0x03970258 CBNZ W9, 0x3970268
	0x0397025C MOV X0, X8
	0x03970260 BL 0x1C16DFC
	0x03970264 LDR X8, [X22]
	0x03970268 ADRP X9, 0x7DF000
	0x0397026C LDR X8, [X8 + 0xB8]
	0x03970270 LDR X9, [X9 + 0xF00]
	0x03970274 LDR X21, [X8]
	0x03970278 LDR X0, [X9]
	0x0397027C BL 0x1C16F10
	0x03970280 ADRP X8, 0x7DF000
	0x03970284 LDR X8, [X8 + 0xF38]
	0x03970288 MOV X1, X21
	0x0397028C MOV X3, X31
	0x03970290 MOV X20, X0
	0x03970294 LDR X2, [X8]
	0x03970298 BL 0x2D30578
	0x0397029C LDR X8, [X22]
	0x039702A0 LDR X8, [X8 + 0xB8]
	0x039702A4 STR X20, [X8 + 0x18]
	0x039702A8 LDR X2, [X23]
	0x039702AC MOV X0, X19
	0x039702B0 MOV X1, X20
	0x039702B4 BL 0x221B348
	0x039702B8 STR X0, [X31 + 0x40]
	0x039702BC TBZ X25, 0x0, 0x397037C
	0x039702C0 CBZ X26, 0x3970F4C
	0x039702C4 MOV X0, X26
	0x039702C8 MOV X1, X31
	0x039702CC BL 0x3C17EBC
	0x039702D0 ADRP X8, 0x787000
	0x039702D4 LDR X8, [X8 + 0x3C0]
	0x039702D8 MOV X19, X0
	0x039702DC LDR X8, [X8]
	0x039702E0 MOV X0, X8
	0x039702E4 BL 0x1C16F10
	0x039702E8 ADRP X8, 0x7DF000
	0x039702EC LDR X8, [X8 + 0x1A0]
	0x039702F0 MOV X1, X19
	0x039702F4 STR X0, [X31 + 0x58]
	0x039702F8 LDR X2, [X8]
	0x039702FC BL 0x30CBA98
	0x03970300 MOV X0, X26
	0x03970304 MOV X1, X31
	0x03970308 BL 0x3C18218
	0x0397030C ADRP X8, 0x7DD000
	0x03970310 LDR X8, [X8 + 0xC00]
	0x03970314 MOV X19, X0
	0x03970318 LDR X8, [X8]
	0x0397031C MOV X0, X8
	0x03970320 BL 0x1C16F10
	0x03970324 ADRP X8, 0x7DF000
	0x03970328 LDR X8, [X8 + 0x198]
	0x0397032C MOV X1, X19
	0x03970330 STR X0, [X31 + 0x50]
	0x03970334 LDR X2, [X8]
	0x03970338 BL 0x2F6CD14
	0x0397033C MOV X0, X26
	0x03970340 MOV X1, X31
	0x03970344 BL 0x3C180C0
	0x03970348 ADRP X8, 0x7DE000
	0x0397034C LDR X8, [X8 + 0x718]
	0x03970350 MOV X19, X0
	0x03970354 LDR X8, [X8]
	0x03970358 MOV X0, X8
	0x0397035C BL 0x1C16F10
	0x03970360 ADRP X8, 0x7DF000
	0x03970364 LDR X8, [X8 + 0x190]
	0x03970368 MOV X1, X19
	0x0397036C STR X0, [X31 + 0x48]
	0x03970370 LDR X2, [X8]
	0x03970374 BL 0x30C8F74
	0x03970378 B 0x39703E8
	0x0397037C ADRP X8, 0x787000
	0x03970380 LDR X8, [X8 + 0x3C0]
	0x03970384 LDR X0, [X8]
	0x03970388 BL 0x1C16F10
	0x0397038C ADRP X8, 0x7AF000
	0x03970390 LDR X8, [X8 + 0x5B8]
	0x03970394 STR X0, [X31 + 0x58]
	0x03970398 LDR X1, [X8]
	0x0397039C BL 0x30CB97C
	0x039703A0 ADRP X8, 0x7DD000
	0x039703A4 LDR X8, [X8 + 0xC00]
	0x039703A8 LDR X0, [X8]
	0x039703AC BL 0x1C16F10
	0x039703B0 ADRP X8, 0x7DD000
	0x039703B4 LDR X8, [X8 + 0xC08]
	0x039703B8 STR X0, [X31 + 0x50]
	0x039703BC LDR X1, [X8]
	0x039703C0 BL 0x2F6CBF8
	0x039703C4 ADRP X8, 0x7DE000
	0x039703C8 LDR X8, [X8 + 0x718]
	0x039703CC LDR X0, [X8]
	0x039703D0 BL 0x1C16F10
	0x039703D4 ADRP X8, 0x7DF000
	0x039703D8 LDR X8, [X8 + 0xF08]
	0x039703DC STR X0, [X31 + 0x48]
	0x039703E0 LDR X1, [X8]
	0x039703E4 BL 0x30C8E58
	0x039703E8 STR X24, [X31 + 0x10]
	0x039703EC ADRP X8, 0x7DD000
	0x039703F0 LDR X8, [X8 + 0xDF0]
	0x039703F4 ADRP X19, 0x7DE000
	0x039703F8 LDR X0, [X8]
	0x039703FC LDR X19, [X19 + 0xA38]
	0x03970400 BL 0x1C16F10
	0x03970404 LDR X1, [X19]
	0x03970408 MOV X28, X0
	0x0397040C BL 0x301B7C4
	0x03970410 CBZ X26, 0x3970F4C
	0x03970414 MOV X0, X26
	0x03970418 MOV X1, X31
	0x0397041C BL 0x3C0F650
	0x03970420 LDR X24, [X31 + 0x28]
	0x03970424 CMP W0, 0x1
	0x03970428 B.LT 0x3970D68
	0x0397042C ADRP X20, 0x7DE000
	0x03970430 ADRP X29, 0x7C5000
	0x03970434 LDR X20, [X20 + 0xC48]
	0x03970438 LDR X29, [X29 + 0x5B0]
	0x0397043C MOV W19, W31
	0x03970440 AND W8, W25, 0x1
	0x03970444 STP W25, W8, [X31 + 0x20]
	0x03970448 STR X26, [X31 + 0x18]
	0x0397044C MOV X0, X26
	0x03970450 MOV W1, W19
	0x03970454 MOV X2, X31
	0x03970458 STR W19, [X31 + 0x3C]
	0x0397045C BL 0x3C19138
	0x03970460 CBZ X0, 0x3970F4C
	0x03970464 LDR W8, [X0 + 0x18]
	0x03970468 MOV X19, X0
	0x0397046C LDR X26, [X31 + 0x30]
	0x03970470 LDR X0, [X31 + 0x58]
	0x03970474 CMP W8, 0x1
	0x03970478 B.LT 0x3970D48
	0x0397047C MOV W27, W31
	0x03970480 TBZ X25, 0x0, 0x3970694
	0x03970484 CBZ X28, 0x3970F4C
	0x03970488 LDR W9, [X28 + 0x18]
	0x0397048C ADD X8, X19, 0x20
	0x03970490 ADD W25, W27, 0x1
	0x03970494 ADD W23, W27, 0x2
	0x03970498 ADD X26, X8, W27, 0x2, SXTW
	0x0397049C ADD X24, X8, W25, 0x2, SXTW
	0x039704A0 CMP W9, 0x1
	0x039704A4 ADD X22, X8, W23, 0x2, SXTW
	0x039704A8 B.LT 0x3970568
	0x039704AC MOV W21, W31
	0x039704B0 LDR X2, [X20]
	0x039704B4 MOV X0, X28
	0x039704B8 MOV W1, W21
	0x039704BC BL 0x301BCCC
	0x039704C0 CBZ X0, 0x3970F4C
	0x039704C4 MOV X1, X31
	0x039704C8 BL 0x38FF530
	0x039704CC LDR W8, [X19 + 0x18]
	0x039704D0 CMP W27, W8
	0x039704D4 B.CS 0x3970F48
	0x039704D8 LDR W1, [X26]
	0x039704DC LDR X2, [X29]
	0x039704E0 BL 0x21BA3B8
	0x039704E4 TBNZ X0, 0x0, 0x397056C
	0x039704E8 LDR X2, [X20]
	0x039704EC MOV X0, X28
	0x039704F0 MOV W1, W21
	0x039704F4 BL 0x301BCCC
	0x039704F8 CBZ X0, 0x3970F4C
	0x039704FC MOV X1, X31
	0x03970500 BL 0x38FF530
	0x03970504 LDR W8, [X19 + 0x18]
	0x03970508 CMP W25, W8
	0x0397050C B.CS 0x3970F48
	0x03970510 LDR W1, [X24]
	0x03970514 LDR X2, [X29]
	0x03970518 BL 0x21BA3B8
	0x0397051C TBNZ X0, 0x0, 0x397056C
	0x03970520 LDR X2, [X20]
	0x03970524 MOV X0, X28
	0x03970528 MOV W1, W21
	0x0397052C BL 0x301BCCC
	0x03970530 CBZ X0, 0x3970F4C
	0x03970534 MOV X1, X31
	0x03970538 BL 0x38FF530
	0x0397053C LDR W8, [X19 + 0x18]
	0x03970540 CMP W23, W8
	0x03970544 B.CS 0x3970F48
	0x03970548 LDR W1, [X22]
	0x0397054C LDR X2, [X29]
	0x03970550 BL 0x21BA3B8
	0x03970554 TBNZ X0, 0x0, 0x397056C
	0x03970558 LDR W8, [X28 + 0x18]
	0x0397055C ADD W21, W21, 0x1
	0x03970560 CMP W21, W8
	0x03970564 B.LT 0x39704B0
	0x03970568 MOVN W21, 0x0
	0x0397056C LDR W9, [X31 + 0x24]
	0x03970570 ORN W8, W31, W21, 0x0
	0x03970574 ANDS W31, W9, W8, 0x1F
	0x03970578 B.EQ 0x3970BFC
	0x0397057C LDR X2, [X20]
	0x03970580 MOV X0, X28
	0x03970584 MOV W1, W21
	0x03970588 BL 0x301BCCC
	0x0397058C CBZ X0, 0x3970F4C
	0x03970590 LDR X8, [X0 + 0x10]
	0x03970594 CBZ X8, 0x3970F4C
	0x03970598 LDR X29, [X8 + 0x18]
	0x0397059C ADRP X8, 0x784000
	0x039705A0 LDR X8, [X8 + 0xE58]
	0x039705A4 ADD W1, W29, 0x3
	0x039705A8 LDR X0, [X8]
	0x039705AC BL 0x1C16D6C
	0x039705B0 LDR X2, [X20]
	0x039705B4 MOV X20, X0
	0x039705B8 MOV X0, X28
	0x039705BC MOV W1, W21
	0x039705C0 BL 0x301BCCC
	0x039705C4 CBZ X0, 0x3970F4C
	0x039705C8 LDR X0, [X0 + 0x10]
	0x039705CC MOV W1, W31
	0x039705D0 MOV X2, X20
	0x039705D4 MOV W3, W31
	0x039705D8 MOV W4, W29
	0x039705DC MOV X5, X31
	0x039705E0 BL 0x339FCE8
	0x039705E4 LDR W8, [X19 + 0x18]
	0x039705E8 CMP W27, W8
	0x039705EC B.CS 0x3970F48

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+16], X1
	015 Move X20, 0xA73000
	016 Move X19, 0x785000
	017 Move W8, [X20+2542]
	018 Move X19, [X19+1432]
	019 Move W21, W2
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {120}
	025 Move X0, 0x78F000
	026 Move X0, [X0+2136]
	027 Call 0x1C17CF4
	028 Move X0, 0x78F000
	029 Move X0, [X0+2160]
	030 Call 0x1C17CF4
	031 Move X0, 0x78F000
	032 Move X0, [X0+2192]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DF000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move X0, 0x78F000
	038 Move X0, [X0+2184]
	039 Call 0x1C17CF4
	040 Move X0, 0x7E1000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Move X0, 0x787000
	044 Move X0, [X0+2504]
	045 Call 0x1C17CF4
	046 Move X0, 0x7E1000
	047 Move X0, [X0+1016]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E1000
	050 Move X0, [X0+496]
	051 Call 0x1C17CF4
	052 Move X0, 0x7E0000
	053 Move X0, [X0+1376]
	054 Call 0x1C17CF4
	055 Move X0, 0x7E1000
	056 Move X0, [X0+1288]
	057 Call 0x1C17CF4
	058 Move X0, 0x785000
	059 Move X0, [X0+3584]
	060 Call 0x1C17CF4
	061 Move X0, 0x7DF000
	062 Move X0, [X0+3504]
	063 Call 0x1C17CF4
	064 Move X0, 0x7DF000
	065 Move X0, [X0+3512]
	066 Call 0x1C17CF4
	067 Move X0, 0x785000
	068 Move X0, [X0+3608]
	069 Call 0x1C17CF4
	070 Move X0, 0x786000
	071 Move X0, [X0+3672]
	072 Call 0x1C17CF4
	073 Move X0, 0x786000
	074 Move X0, [X0+3600]
	075 Call 0x1C17CF4
	076 Move X0, 0x7E1000
	077 Move X0, [X0+776]
	078 Call 0x1C17CF4
	079 Move X0, 0x7E1000
	080 Move X0, [X0+448]
	081 Call 0x1C17CF4
	082 Move X0, 0x789000
	083 Move X0, [X0+2928]
	084 Call 0x1C17CF4
	085 Move X0, 0x7DF000
	086 Move X0, [X0+3552]
	087 Call 0x1C17CF4
	088 Move X0, 0x7E1000
	089 Move X0, [X0+456]
	090 Call 0x1C17CF4
	091 Move X0, 0x7E1000
	092 Move X0, [X0+784]
	093 Call 0x1C17CF4
	094 Move X0, 0x7DF000
	095 Move X0, [X0+3608]
	096 Call 0x1C17CF4
	097 Move X0, 0x7E1000
	098 Move X0, [X0+464]
	099 Call 0x1C17CF4
	100 Move X0, 0x786000
	101 Move X0, [X0+3632]
	102 Call 0x1C17CF4
	103 Move X0, 0x7DF000
	104 Move X0, [X0+3560]
	105 Call 0x1C17CF4
	106 Move X0, 0x7E1000
	107 Move X0, [X0+792]
	108 Call 0x1C17CF4
	109 Move X0, 0x785000
	110 Move X0, [X0+1432]
	111 Call 0x1C17CF4
	112 Move X0, 0x7E1000
	113 Move X0, [X0+3736]
	114 Call 0x1C17CF4
	115 Move X0, 0x7E1000
	116 Move X0, [X0+3480]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X20+2542], W8
	120 Move X0, [X19]
	121 Move [X31+44], W31
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X24
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move X8, [X31+16]
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {624}
	135 Compare X8, 0
	136 JumpIfEqual {631}
	137 Move [X31+4], W21
	138 Compare X24, 0
	139 JumpIfEqual {623}
	140 Move X20, 0x7DF000
	141 Move X19, 0x7DF000
	142 Move X20, [X20+3560]
	143 Move X19, [X19+3552]
	144 Move X0, X24
	145 Move X1, X31
	146 Move X2, X31
	147 Call ProBuilderMesh.GetVertices, X0, X1
	148 Move X8, [X20]
	149 Move X21, X0
	150 Move X0, X8
	151 Call 0x1C17F10
	152 Move X2, [X19]
	153 Move X1, X21
	154 Move X23, X0
	155 Call List`1<Object>..ctor, X0, X1
	156 Move X8, [X24+48]
	157 Compare X8, 0
	158 JumpIfEqual {623}
	159 Move X20, 0x7E1000
	160 Move X21, 0x7E1000
	161 Move X22, 0x7DF000
	162 Move W19, [X8+24]
	163 Move X20, [X20+792]
	164 Move X21, [X21+784]
	165 Move X22, [X22+3504]
	166 Move X0, X24
	167 Move X1, X31
	168 Move [X31+8], X24
	169 Call ProBuilderMesh.get_sharedVertexLookup, X0
	170 Move X8, [X20]
	171 Move X25, X0
	172 Move X0, X8
	173 Call 0x1C17F10
	174 Move X1, [X21]
	175 Move X24, X0
	176 Call List`1<Object>..ctor, X0
	177 Move X20, [X31+16]
	178 Move X1, [X22]
	179 Move X8, [X20]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, X20
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X20
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move [X31+24], X0
	200 Move [X31+32], X24
	201 Compare X0, 0
	202 JumpIfEqual {649}
	203 Move X20, 0x78F000
	204 Move X20, [X20+2160]
	205 Move X22, X0
	206 Move X8, [X22]
	207 Move X10, 0x785000
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X10, [X10+3608]
	210 Move X1, [X10]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X22
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X22
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {480}
	233 Move X8, [X22]
	234 Move X10, 0x7DF000
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Move X10, [X10+3512]
	237 Move X1, [X10]
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X22
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X1, [X0+8]
	254 Move X0, X22
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Move X8, 0x7E1000
	257 Move X8, [X8+496]
	258 Move X27, X0
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X26, X0
	262 Move X1, X31
	263 Call FaceRebuildData..ctor, X0
	264 Move X8, 0x7DF000
	265 Move X8, [X8+3560]
	266 Move X0, [X8]
	267 Call 0x1C17F10
	268 Move X8, 0x7E1000
	269 Move X8, [X8+456]
	270 Move X21, X0
	271 Move X1, [X8]
	272 Call List`1<Object>..ctor, X0
	273 Compare X26, 0
	274 JumpIfEqual {618}
	275 Move [X26+24], X21
	276 Move X8, 0x786000
	277 Move X8, [X8+3632]
	278 Move X0, [X8]
	279 Call 0x1C17F10
	280 Move X8, 0x789000
	281 Move X8, [X8+2928]
	282 Move X21, X0
	283 Move X1, [X8]
	284 Call List`1<Int32>..ctor, X0
	285 Move [X26+32], X21
	286 Move X8, 0x7E0000
	287 Move X8, [X8+1376]
	288 Move X0, [X8]
	289 Call 0x1C17F10
	290 Move X21, X0
	291 Move X1, X27
	292 Move X2, X31
	293 Call Face..ctor, X0, X1
	294 Move [X26+16], X21
	295 Move X8, 0x78F000
	296 Move X8, [X8+2184]
	297 Move X0, [X8]
	298 Call 0x1C17F10
	299 Move X8, 0x78F000
	300 Move X8, [X8+2192]
	301 Move X28, X0
	302 Move X1, [X8]
	303 Call Dictionary`2<Int32, Int32>..ctor, X0
	304 Compare X27, 0
	305 JumpIfEqual {619}
	306 Move X8, [X27+16]
	307 Compare X8, 0
	308 JumpIfEqual {617}
	309 Move X9, 0x786000
	310 Move X9, [X9+3672]
	311 Move W1, [X8+24]
	312 Move X0, [X9]
	313 Call 0x1C17D6C
	314 Move X8, [X27+16]
	315 Compare X8, 0
	316 JumpIfEqual {589}
	317 Move X29, X0
	318 Move W22, 8
	319 Move W9, [X8+24]
	320 Subtract X24, X22, 8
	321 NotImplemented "Instruction CMP not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Compare X28, 0
	324 JumpIfEqual {592}
	325 Move W1, [X8]
	326 Move X3, [X20]
	327 Add X2, X31, 44
	328 Move X0, X28
	329 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {340}
	334 Compare X29, 0
	335 JumpIfEqual {602}
	336 Move W8, [X29+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move W8, [X31+44]
	339 Move [X29], W8
	340 Move X8, [X26+24]
	341 Compare X8, 0
	342 JumpIfEqual {611}
	343 Move W8, [X8+24]
	344 Move [X31+44], W8
	345 Compare X29, 0
	346 JumpIfEqual {615}
	347 Move W9, [X29+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X29], W8
	350 Move X8, [X27+16]
	351 Compare X8, 0
	352 JumpIfEqual {606}
	353 Move W9, [X8+24]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move W1, [X8]
	356 Move X8, 0x78E000
	357 Move W2, [X31+44]
	358 Move X8, [X8+2136]
	359 Move X3, [X8]
	360 Move X0, X28
	361 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	362 Move X8, [X27+16]
	363 Compare X8, 0
	364 JumpIfEqual {597}
	365 Move W9, [X8+24]
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Compare X23, 0
	368 JumpIfEqual {604}
	369 Move W1, [X8]
	370 Move X8, 0x7E0000
	371 Move X21, [X26+24]
	372 Move X8, [X8+464]
	373 Move X2, [X8]
	374 Move X0, X23
	375 Call List`1<Object>.get_Item, X0, X1
	376 Move X1, X0
	377 Compare X21, 0
	378 JumpIfEqual {612}
	379 Move X9, 0x7E0000
	380 Move W10, [X21+28]
	381 Move X8, [X21+16]
	382 Move X9, [X9+448]
	383 Add W10, W10, 1
	384 Move X9, [X9]
	385 Move [X21+28], W10
	386 Compare X8, 0
	387 JumpIfEqual {614}
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Move W11, [X8+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Add W9, W10, 1
	392 Add X8, X8, X10
	393 Move [X21+24], W9
	394 Move [X8+32], X1
	395 Move X8, [X9+32]
	396 Move X8, [X8+192]
	397 Move X2, [X8+112]
	398 Move X0, X21
	399 Call List`1<Object>.AddWithResize, X0, X1
	400 Move X8, [X27+16]
	401 Compare X8, 0
	402 JumpIfEqual {594}
	403 Move W9, [X8+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Compare X25, 0
	406 JumpIfEqual {613}
	407 Move W1, [X8]
	408 Move X8, 0x7DE000
	409 Move X21, [X26+32]
	410 Move X8, [X8+3200]
	411 Move X2, [X8]
	412 Move X0, X25
	413 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	414 Compare X21, 0
	415 JumpIfEqual {600}
	416 Move X9, 0x785000
	417 Move W10, [X21+28]
	418 Move X8, [X21+16]
	419 Move X9, [X9+3600]
	420 Add W10, W10, 1
	421 Move X9, [X9]
	422 Move [X21+28], W10
	423 Compare X8, 0
	424 JumpIfEqual {610}
	425 NotImplemented "Instruction LDRSW not yet implemented."
	426 Move W11, [X8+24]
	427 Add W1, W0, W19
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Add W9, W10, 1
	430 Add X8, X8, X10
	431 Move [X21+24], W9
	432 Move [X8+32], W1
	433 Move X8, [X9+32]
	434 Move X8, [X8+192]
	435 Move X2, [X8+112]
	436 Move X0, X21
	437 Call List`1<Int32>.AddWithResize, X0, X1
	438 Move X8, [X27+16]
	439 Add X22, X22, 1
	440 Compare X8, 0
	441 JumpIfNotEqual {319}
	442 Move X8, 0x786000
	443 Move X21, [X26+16]
	444 Move X8, [X8+2504]
	445 Move X1, [X8]
	446 Move X22, [X31+24]
	447 Move X24, [X31+32]
	448 Move X0, X29
	449 Call Enumerable.ToArray, X0
	450 Move X1, X0
	451 Compare X21, 0
	452 JumpIfEqual {621}
	453 Move X0, X21
	454 Move X2, X31
	455 Call Face.set_indexesInternal, X0, X1
	456 Compare X24, 0
	457 JumpIfEqual {620}
	458 Move X9, 0x7E0000
	459 Move W10, [X24+28]
	460 Move X8, [X24+16]
	461 Move X9, [X9+776]
	462 Add W10, W10, 1
	463 Move X9, [X9]
	464 Move [X24+28], W10
	465 Compare X8, 0
	466 JumpIfEqual {622}
	467 NotImplemented "Instruction LDRSW not yet implemented."
	468 Move W11, [X8+24]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Add W9, W10, 1
	471 Add X8, X8, X10
	472 Move [X24+24], W9
	473 Move [X8+32], X26
	474 Move X8, [X9+32]
	475 Move X8, [X8+192]
	476 Move X2, [X8+112]
	477 Move X0, X24
	478 Move X1, X26
	479 Call List`1<Object>.AddWithResize, X0, X1
	480 Move X26, X31
	481 Move W19, 14
	482 Move X20, [X31+8]
	483 Compare X22, 0
	484 JumpIfEqual {508}
	485 Move X8, [X22]
	486 Move X10, 0x784000
	487 NotImplemented "Instruction LDRH not yet implemented."
	488 Move X10, [X10+3584]
	489 Move X1, [X10]
	490 Compare X9, 0
	491 JumpIfEqual {498}
	492 Move X10, [X8+176]
	493 Add X10, X10, 8
	494 NotImplemented "Instruction LDUR not yet implemented."
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Subtract X9, X9, 1
	497 Add X10, X10, 16
	498 Move X0, X22
	499 Move W2, W31
	500 Call 0x1C5D788
	501 NotImplemented "Instruction LDRSW not yet implemented."
	502 Add X8, X8, X9
	503 Add X0, X8, 312
	504 Move X8, [X0]
	505 Move X1, [X0+8]
	506 Move X0, X22
	507 NotImplemented "Instruction BLR not yet implemented."
	508 Compare X26, 0
	509 JumpIfNotEqual {650}
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Compare W19, 0
	512 JumpIfNotEqual {575}
	513 Move X21, 0x7E0000
	514 Move X21, [X21+3480]
	515 Move X0, X24
	516 Move X1, X20
	517 Move X2, X23
	518 Move X3, X31
	519 Move X4, X31
	520 Call FaceRebuildData.Apply, X0, X1, X2, X3
	521 Move W8, [X31+4]
	522 Move TEMP, X8
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfNotEqual {530}
	526 Move X1, [X31+16]
	527 Move X0, X20
	528 Move X2, X31
	529 Call DeleteElements.DeleteFaces, X0, X1
	530 Move X0, X20
	531 Move W1, W31
	532 Move X2, X31
	533 Call ProBuilderMesh.ToMesh, X0, X1
	534 Move X0, [X21]
	535 Move W8, [X0+224]
	536 Compare W8, 0
	537 JumpIfNotEqual {540}
	538 Call 0x1C17DFC
	539 Move X0, [X21]
	540 Move X8, [X0+184]
	541 Move X23, 0x7E0000
	542 Move X22, 0x7E0000
	543 Move X19, [X8+8]
	544 Move X23, [X23+1256]
	545 Move X22, [X22+1016]
	546 Compare X19, 0
	547 JumpIfNotEqual {569}
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {553}
	551 Call 0x1C17DFC
	552 Move X0, [X21]
	553 Move X9, 0x7E0000
	554 Move X8, [X0+184]
	555 Move X9, [X9+1288]
	556 Move X20, [X8]
	557 Move X0, [X9]
	558 Call 0x1C17F10
	559 Move X8, 0x7E0000
	560 Move X8, [X8+3736]
	561 Move X1, X20
	562 Move X3, X31
	563 Move X19, X0
	564 Move X2, [X8]
	565 Call Func`2<Object, Object>..ctor, X0, X1, X2
	566 Move X8, [X21]
	567 Move X8, [X8+184]
	568 Move [X8+8], X19
	569 Move X2, [X23]
	570 Move X0, X24
	571 Move X1, X19
	572 Call Enumerable.Select, X0, X1
	573 Move X1, [X22]
	574 Call Enumerable.ToList, X0
	575 Move X20, [X31+128]
	576 Move X19, [X31+136]
	577 Move X22, [X31+112]
	578 Move X21, [X31+120]
	579 Move X24, [X31+96]
	580 Move X23, [X31+104]
	581 Move X26, [X31+80]
	582 Move X25, [X31+88]
	583 Move X28, [X31+64]
	584 Move X27, [X31+72]
	585 Move X29, [X31+48]
	586 Move X30, [X31+56]
	587 Add X31, X31, 144
	588 Return X0
	589 Move X22, [X31+24]
	590 Move X24, [X31+32]
	591 Call 0x1C17F20
	592 Call 0x1C17F20
	593 Call 0x1C17F28
	594 Move X22, [X31+24]
	595 Move X24, [X31+32]
	596 Call 0x1C17F20
	597 Move X22, [X31+24]
	598 Move X24, [X31+32]
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F28
	602 Call 0x1C17F20
	603 Call 0x1C17F28
	604 Call 0x1C17F20
	605 Call 0x1C17F28
	606 Call 0x1C17F20
	607 Move X22, [X31+24]
	608 Move X24, [X31+32]
	609 Call 0x1C17F28
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F28
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F20
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Move X0, 0x789000
	625 Move X0, [X0+1320]
	626 Call 0x1C17D08
	627 Call 0x1C17F10
	628 Move X19, X0
	629 Move X0, 0x7DE000
	630 Move X0, [X0+3728]
	631 Move X0, 0x789000
	632 Move X0, [X0+1320]
	633 Call 0x1C17D08
	634 Call 0x1C17F10
	635 Move X19, X0
	636 Move X0, 0x7DF000
	637 Move X0, [X0+1600]
	638 Call 0x1C17D08
	639 Move X1, X0
	640 Move X0, X19
	641 Move X2, X31
	642 Call ArgumentNullException..ctor, X0, X1
	643 Move X0, 0x7E0000
	644 Move X0, [X0+3744]
	645 Call 0x1C17D08
	646 Move X1, X0
	647 Move X0, X19
	648 Call 0x1C17DEC
	649 Call 0x1C17F20
	650 Move X0, X26
	651 Call 0x1C17F18
	652 Move X22, [X31+24]
	653 Move X24, [X31+32]
	654 Move X25, X0
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Move X0, X25
	657 Call 0x3EB2AD0
	658 Move X26, [X0]
	659 Call 0x3EB2AE0
	660 Move W19, W31
	661 Move X26, X31
	662 Move X25, X0
	663 Move X8, [X31+24]
	664 Compare X8, 0
	665 JumpIfEqual {690}
	666 Move X8, [X31+24]
	667 Move X10, 0x784000
	668 Move X8, [X8]
	669 NotImplemented "Instruction LDRH not yet implemented."
	670 Move X10, [X10+3584]
	671 Move X1, [X10]
	672 Compare X9, 0
	673 JumpIfEqual {680}
	674 Move X10, [X8+176]
	675 Add X10, X10, 8
	676 NotImplemented "Instruction LDUR not yet implemented."
	677 NotImplemented "Instruction CMP not yet implemented."
	678 Subtract X9, X9, 1
	679 Add X10, X10, 16
	680 Move X0, [X31+24]
	681 Move W2, W31
	682 Call 0x1C5D788
	683 NotImplemented "Instruction LDRSW not yet implemented."
	684 Add X8, X8, X9
	685 Add X0, X8, 312
	686 Move X8, [X0]
	687 Move X1, [X0+8]
	688 Move X0, [X31+24]
	689 NotImplemented "Instruction BLR not yet implemented."
	690 Compare X26, 0
	691 JumpIfNotEqual {694}
	692 Move X0, X25
	693 Call 0x1D2D690
	694 Move X0, X26
	695 Call 0x1C17F18
	696 Call 0x1991590

Method: UnityEngine.ProBuilder.Face[] ExtrudePerFace(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Single distance)

Disassembly:
	0x0396C224 LDR X0, [X19]
	0x0396C228 BL 0x1C16F10
	0x0396C22C ADRP X23, 0x791000
	0x0396C230 LDR X23, [X23 + 0x890]
	0x0396C234 STR X0, [X31 + 0x78]
	0x0396C238 LDR X1, [X23]
	0x0396C23C BL 0x2A09A9C
	0x0396C240 LDR X0, [X19]
	0x0396C244 BL 0x1C16F10
	0x0396C248 LDR X1, [X23]
	0x0396C24C STR X0, [X31 + 0x70]
	0x0396C250 BL 0x2A09A9C
	0x0396C254 LDR X0, [X19]
	0x0396C258 BL 0x1C16F10
	0x0396C25C LDR X1, [X23]
	0x0396C260 STR X0, [X31 + 0x28]
	0x0396C264 BL 0x2A09A9C
	0x0396C268 ADRP X8, 0x7E3000
	0x0396C26C LDR X8, [X8 + 0xDD0]
	0x0396C270 LDR X0, [X8]
	0x0396C274 BL 0x1C16F10
	0x0396C278 ADRP X8, 0x7E3000
	0x0396C27C LDR X8, [X8 + 0xDC0]
	0x0396C280 MOV X26, X0
	0x0396C284 LDR X1, [X8]
	0x0396C288 BL 0x29F403C
	0x0396C28C ADRP X8, 0x7E2000
	0x0396C290 LDR X8, [X8 + 0xB08]
	0x0396C294 LDR X0, [X8]
	0x0396C298 LDR W8, [X0 + 0xE0]
	0x0396C29C CBNZ W8, 0x396C2A4
	0x0396C2A0 BL 0x1C16DFC
	0x0396C2A4 MOVZ W2, 0x1
	0x0396C2A8 MOV X0, X24
	0x0396C2AC MOV X1, X20
	0x0396C2B0 MOV X3, X31
	0x0396C2B4 STR X24, [X31 + 0x20]
	0x0396C2B8 BL 0x3942FD0
	0x0396C2BC BL 0x396F5F0
	0x0396C2C0 CBZ X0, 0x396D714
	0x0396C2C4 ADRP X8, 0x7E3000
	0x0396C2C8 LDR X8, [X8 + 0xE58]
	0x0396C2CC LDR X1, [X8]
	0x0396C2D0 ADD X8, X31, 0x80
	0x0396C2D4 BL 0x301CB58
	0x0396C2D8 LDR V0, [X31 + 0x8]
	0x0396C2DC LDR X8, [X31 + 0x90]
	0x0396C2E0 STR W31, [X31 + 0x18]
	0x0396C2E4 STR X29, [X31 + 0x38]
	0x0396C2E8 STR V0, [X31 + 0x21]
	0x0396C2EC STR X8, [X31 + 0x220]
	0x0396C2F0 ADRP X8, 0x7E3000
	0x0396C2F4 LDR X8, [X8 + 0xE08]
	0x0396C2F8 LDR X1, [X8]
	0x0396C2FC ADD X0, X31, 0x210
	0x0396C300 BL 0x2BC4350
	0x0396C304 TBZ X0, 0x0, 0x396D108
	0x0396C308 LDR X0, [X31 + 0x220]
	0x0396C30C MOV X1, X21
	0x0396C310 STR X0, [X31 + 0x40]
	0x0396C314 BL 0x396FA38
	0x0396C318 MOV X19, X0
	0x0396C31C LDR X0, [X31 + 0x70]
	0x0396C320 CBZ X0, 0x396D6E8
	0x0396C324 ADRP X8, 0x7B1000
	0x0396C328 LDR X8, [X8 + 0x8D0]
	0x0396C32C LDR X1, [X8]
	0x0396C330 BL 0x2A0A4C4
	0x0396C334 LDR X0, [X31 + 0x78]
	0x0396C338 CBZ X0, 0x396D6EC
	0x0396C33C ADRP X8, 0x7B1000
	0x0396C340 LDR X8, [X8 + 0x8D0]
	0x0396C344 LDR X1, [X8]
	0x0396C348 BL 0x2A0A4C4
	0x0396C34C CBZ X19, 0x396D6E4
	0x0396C350 ADRP X8, 0x7E3000
	0x0396C354 LDR X8, [X8 + 0xDB0]
	0x0396C358 LDR X1, [X8]
	0x0396C35C ADD X8, X31, 0x80
	0x0396C360 MOV X0, X19
	0x0396C364 BL 0x29DFA64
	0x0396C368 LDP V0, V1, [X31 + 0x80]
	0x0396C36C LDR V2, [X31 + 0xA]
	0x0396C370 LDR W8, [X31 + 0x18]
	0x0396C374 STP V0, V1, [X31 + 0x1E0]
	0x0396C378 STR V2, [X31 + 0x20]
	0x0396C37C STR W8, [X31 + 0x50]
	0x0396C380 ADRP X8, 0x7E3000
	0x0396C384 LDR X8, [X8 + 0xE10]
	0x0396C388 LDR X1, [X8]
	0x0396C38C ADD X0, X31, 0x1E0
	0x0396C390 BL 0x2BEBEFC
	0x0396C394 TBZ X0, 0x0, 0x396CA24
	0x0396C398 CBZ X29, 0x396CE78
	0x0396C39C MOV X8, X29
	0x0396C3A0 LDR W27, [X8 + 0x18]
	0x0396C3A4 ADRP X8, 0x7E2000
	0x0396C3A8 LDR X29, [X31 + 0x1F0]
	0x0396C3AC LDR X20, [X31 + 0x200]
	0x0396C3B0 LDR X8, [X8 + 0xD08]
	0x0396C3B4 LDR X2, [X8]
	0x0396C3B8 LDR X0, [X31 + 0x78]
	0x0396C3BC MOV W1, W29
	0x0396C3C0 BL 0x2A0A530
	0x0396C3C4 TBNZ X0, 0x0, 0x396C4C8
	0x0396C3C8 CBZ X21, 0x396CF10
	0x0396C3CC ADRP X8, 0x7E1000
	0x0396C3D0 LDR X8, [X8 + 0xC80]
	0x0396C3D4 LDR X2, [X8]
	0x0396C3D8 MOV X0, X21
	0x0396C3DC MOV W1, W29
	0x0396C3E0 BL 0x2A0A2A8
	0x0396C3E4 ADRP X8, 0x791000
	0x0396C3E8 LDR X8, [X8 + 0x858]
	0x0396C3EC MOV W2, W0
	0x0396C3F0 LDR X3, [X8]
	0x0396C3F4 LDR X0, [X31 + 0x78]
	0x0396C3F8 MOV W1, W29
	0x0396C3FC BL 0x2A0A344
	0x0396C400 ADRP X8, 0x7E1000
	0x0396C404 LDR X8, [X8 + 0xC80]
	0x0396C408 LDR X2, [X8]
	0x0396C40C MOVN W8, 0x0
	0x0396C410 STR W8, [X31 + 0x1DC]
	0x0396C414 MOV X0, X21
	0x0396C418 MOV W1, W29
	0x0396C41C BL 0x2A0A2A8
	0x0396C420 MOV W1, W0
	0x0396C424 ADRP X8, 0x791000
	0x0396C428 LDR X8, [X8 + 0x870]
	0x0396C42C LDR X3, [X8]
	0x0396C430 LDR X0, [X31 + 0x70]
	0x0396C434 ADD X2, X31, 0x1DC
	0x0396C438 BL 0x2A0BC68
	0x0396C43C TBZ X0, 0x0, 0x396C460
	0x0396C440 ADRP X8, 0x7B1000
	0x0396C444 LDR W2, [X31 + 0x1DC]
	0x0396C448 LDR X8, [X8 + 0x8B0]
	0x0396C44C LDR X3, [X8]
	0x0396C450 MOV X0, X21
	0x0396C454 MOV W1, W29
	0x0396C458 BL 0x2A0A330
	0x0396C45C B 0x396C4C8
	0x0396C460 ADRP X8, 0x7E1000
	0x0396C464 LDR X8, [X8 + 0xC80]
	0x0396C468 LDR W9, [X31 + 0x50]
	0x0396C46C LDR X2, [X8]
	0x0396C470 LDR W8, [X31 + 0x1C]
	0x0396C474 ADD W19, W9, 0x1
	0x0396C478 ADD W8, W9, W8
	0x0396C47C STR W8, [X31 + 0x1DC]
	0x0396C480 MOV X0, X21
	0x0396C484 MOV W1, W29
	0x0396C488 BL 0x2A0A2A8
	0x0396C48C MOV W1, W0
	0x0396C490 ADRP X8, 0x791000
	0x0396C494 LDR W2, [X31 + 0x1DC]
	0x0396C498 LDR X8, [X8 + 0x858]
	0x0396C49C LDR X3, [X8]
	0x0396C4A0 LDR X0, [X31 + 0x70]
	0x0396C4A4 BL 0x2A0A344
	0x0396C4A8 ADRP X8, 0x7B1000
	0x0396C4AC LDR W2, [X31 + 0x1DC]
	0x0396C4B0 LDR X8, [X8 + 0x8B0]
	0x0396C4B4 LDR X3, [X8]
	0x0396C4B8 MOV X0, X21
	0x0396C4BC MOV W1, W29
	0x0396C4C0 BL 0x2A0A330
	0x0396C4C4 STR W19, [X31 + 0x50]
	0x0396C4C8 ADRP X8, 0x7E2000
	0x0396C4CC LDR X8, [X8 + 0xD08]
	0x0396C4D0 UBFM X23, X29, 0x20, 0x3F
	0x0396C4D4 LDR X2, [X8]
	0x0396C4D8 LDR X0, [X31 + 0x78]
	0x0396C4DC MOV W1, W23
	0x0396C4E0 BL 0x2A0A530
	0x0396C4E4 TBNZ X0, 0x0, 0x396C5E8
	0x0396C4E8 CBZ X21, 0x396CF18
	0x0396C4EC ADRP X8, 0x7E1000
	0x0396C4F0 LDR X8, [X8 + 0xC80]
	0x0396C4F4 LDR X2, [X8]
	0x0396C4F8 MOV X0, X21
	0x0396C4FC MOV W1, W23
	0x0396C500 BL 0x2A0A2A8
	0x0396C504 ADRP X8, 0x791000
	0x0396C508 LDR X8, [X8 + 0x858]
	0x0396C50C MOV W2, W0
	0x0396C510 LDR X3, [X8]
	0x0396C514 LDR X0, [X31 + 0x78]
	0x0396C518 MOV W1, W23
	0x0396C51C BL 0x2A0A344
	0x0396C520 ADRP X8, 0x7E1000
	0x0396C524 LDR X8, [X8 + 0xC80]
	0x0396C528 LDR X2, [X8]
	0x0396C52C MOVN W8, 0x0
	0x0396C530 STR W8, [X31 + 0x1D8]
	0x0396C534 MOV X0, X21
	0x0396C538 MOV W1, W23
	0x0396C53C BL 0x2A0A2A8
	0x0396C540 MOV W1, W0
	0x0396C544 ADRP X8, 0x791000
	0x0396C548 LDR X8, [X8 + 0x870]
	0x0396C54C LDR X3, [X8]
	0x0396C550 LDR X0, [X31 + 0x70]
	0x0396C554 ADD X2, X31, 0x1D8
	0x0396C558 BL 0x2A0BC68
	0x0396C55C TBZ X0, 0x0, 0x396C580
	0x0396C560 ADRP X8, 0x7B1000
	0x0396C564 LDR W2, [X31 + 0x1D8]
	0x0396C568 LDR X8, [X8 + 0x8B0]
	0x0396C56C LDR X3, [X8]
	0x0396C570 MOV X0, X21
	0x0396C574 MOV W1, W23
	0x0396C578 BL 0x2A0A330
	0x0396C57C B 0x396C5E8
	0x0396C580 ADRP X8, 0x7E1000
	0x0396C584 LDR X8, [X8 + 0xC80]
	0x0396C588 LDR W9, [X31 + 0x50]
	0x0396C58C LDR X2, [X8]
	0x0396C590 LDR W8, [X31 + 0x1C]
	0x0396C594 ADD W19, W9, 0x1
	0x0396C598 ADD W8, W9, W8
	0x0396C59C STR W8, [X31 + 0x1D8]
	0x0396C5A0 MOV X0, X21
	0x0396C5A4 MOV W1, W23
	0x0396C5A8 BL 0x2A0A2A8
	0x0396C5AC MOV W1, W0
	0x0396C5B0 ADRP X8, 0x791000
	0x0396C5B4 LDR W2, [X31 + 0x1D8]
	0x0396C5B8 LDR X8, [X8 + 0x858]
	0x0396C5BC LDR X3, [X8]
	0x0396C5C0 LDR X0, [X31 + 0x70]
	0x0396C5C4 BL 0x2A0A344
	0x0396C5C8 ADRP X8, 0x7B1000
	0x0396C5CC LDR W2, [X31 + 0x1D8]
	0x0396C5D0 LDR X8, [X8 + 0x8B0]
	0x0396C5D4 LDR X3, [X8]
	0x0396C5D8 MOV X0, X21
	0x0396C5DC MOV W1, W23
	0x0396C5E0 BL 0x2A0A330
	0x0396C5E4 STR W19, [X31 + 0x50]
	0x0396C5E8 ADRP X8, 0x7E1000
	0x0396C5EC LDR X8, [X8 + 0xC80]
	0x0396C5F0 LDR X2, [X8]
	0x0396C5F4 LDR X0, [X31 + 0x78]
	0x0396C5F8 MOV W1, W29
	0x0396C5FC BL 0x2A0A2A8
	0x0396C600 CBZ X21, 0x396CE80
	0x0396C604 ADRP X8, 0x791000
	0x0396C608 LDR X8, [X8 + 0x858]
	0x0396C60C MOV W2, W0
	0x0396C610 LDR X3, [X8]
	0x0396C614 MOV X0, X21
	0x0396C618 MOV W1, W27
	0x0396C61C BL 0x2A0A344
	0x0396C620 ADRP X8, 0x7E1000
	0x0396C624 LDR X8, [X8 + 0xC80]
	0x0396C628 LDR X2, [X8]
	0x0396C62C LDR X0, [X31 + 0x78]
	0x0396C630 MOV W1, W23
	0x0396C634 BL 0x2A0A2A8
	0x0396C638 ADRP X8, 0x791000
	0x0396C63C LDR X8, [X8 + 0x858]
	0x0396C640 ADD W19, W27, 0x1
	0x0396C644 MOV W2, W0
	0x0396C648 LDR X3, [X8]
	0x0396C64C MOV X0, X21
	0x0396C650 MOV W1, W19
	0x0396C654 BL 0x2A0A344
	0x0396C658 ADRP X8, 0x7E1000
	0x0396C65C LDR X8, [X8 + 0xC80]
	0x0396C660 LDR X2, [X8]
	0x0396C664 MOV X0, X21
	0x0396C668 MOV W1, W29
	0x0396C66C BL 0x2A0A2A8
	0x0396C670 ADRP X8, 0x791000
	0x0396C674 LDR X8, [X8 + 0x858]
	0x0396C678 ADD W25, W27, 0x2
	0x0396C67C MOV W2, W0
	0x0396C680 LDR X3, [X8]
	0x0396C684 MOV X0, X21
	0x0396C688 MOV W1, W25
	0x0396C68C BL 0x2A0A344
	0x0396C690 STR X20, [X31 + 0x60]
	0x0396C694 ADRP X8, 0x7E1000
	0x0396C698 LDR X8, [X8 + 0xC80]
	0x0396C69C LDR X2, [X8]
	0x0396C6A0 MOV X0, X21
	0x0396C6A4 MOV W1, W23
	0x0396C6A8 BL 0x2A0A2A8
	0x0396C6AC ADRP X8, 0x791000
	0x0396C6B0 LDR X8, [X8 + 0x858]
	0x0396C6B4 ADD W24, W27, 0x3
	0x0396C6B8 MOV W2, W0
	0x0396C6BC LDR X3, [X8]
	0x0396C6C0 MOV X0, X21
	0x0396C6C4 MOV W1, W24
	0x0396C6C8 BL 0x2A0A344
	0x0396C6CC LDR X28, [X31 + 0x28]
	0x0396C6D0 CBZ X28, 0x396CEDC
	0x0396C6D4 ADRP X20, 0x791000
	0x0396C6D8 LDR X20, [X20 + 0x858]
	0x0396C6DC LDR X3, [X20]
	0x0396C6E0 MOV X0, X28
	0x0396C6E4 MOV W1, W25
	0x0396C6E8 MOV W2, W29
	0x0396C6EC BL 0x2A0A344
	0x0396C6F0 LDR X3, [X20]
	0x0396C6F4 MOV X0, X28
	0x0396C6F8 MOV W1, W24
	0x0396C6FC MOV W2, W23
	0x0396C700 BL 0x2A0A344
	0x0396C704 ADRP X8, 0x7E3000
	0x0396C708 LDR X8, [X8 + 0x1D0]
	0x0396C70C LDR X2, [X8]
	0x0396C710 LDR X0, [X31 + 0x38]
	0x0396C714 MOV W1, W29
	0x0396C718 BL 0x301BCCC
	0x0396C71C ADRP X8, 0x7E2000
	0x0396C720 LDR X8, [X8 + 0x20]
	0x0396C724 MOV X28, X0
	0x0396C728 LDR X0, [X8]
	0x0396C72C BL 0x1C16F10
	0x0396C730 MOV X29, X0
	0x0396C734 MOV X1, X28
	0x0396C738 MOV X2, X31
	0x0396C73C BL 0x393DFBC
	0x0396C740 LDR X0, [X31 + 0x38]
	0x0396C744 ADRP X9, 0x7E3000
	0x0396C748 LDR W10, [X0 + 0x1C]
	0x0396C74C LDR X8, [X0 + 0x10]
	0x0396C750 LDR X9, [X9 + 0x1C0]
	0x0396C754 ADD W10, W10, 0x1
	0x0396C758 LDR X9, [X9]
	0x0396C75C STR W10, [X0 + 0x1C]
	0x0396C760 CBZ X8, 0x396CEA4
	0x0396C764 LDRSW X10, [X0 + 0x18]
	0x0396C768 LDR W11, [X8 + 0x18]
	0x0396C76C CMP W10, W11
	0x0396C770 B.CS 0x396C788
	0x0396C774 ADD W9, W10, 0x1
	0x0396C778 ADD X8, X8, X10, 0x3, LSL
	0x0396C77C STR W9, [X0 + 0x18]
	0x0396C780 STR X29, [X8 + 0x20]
	0x0396C784 B 0x396C79C
	0x0396C788 LDR X8, [X9 + 0x20]
	0x0396C78C LDR X8, [X8 + 0xC0]
	0x0396C790 LDR X2, [X8 + 0x70]
	0x0396C794 MOV X1, X29
	0x0396C798 BL 0x301BF90
	0x0396C79C ADRP X8, 0x7E3000
	0x0396C7A0 LDR X8, [X8 + 0x1D0]
	0x0396C7A4 LDR X2, [X8]
	0x0396C7A8 LDR X29, [X31 + 0x38]
	0x0396C7AC MOV W1, W23
	0x0396C7B0 MOV X0, X29
	0x0396C7B4 BL 0x301BCCC
	0x0396C7B8 ADRP X8, 0x7E2000
	0x0396C7BC LDR X8, [X8 + 0x20]
	0x0396C7C0 MOV X28, X0
	0x0396C7C4 LDR X0, [X8]
	0x0396C7C8 BL 0x1C16F10
	0x0396C7CC MOV X23, X0
	0x0396C7D0 MOV X1, X28
	0x0396C7D4 MOV X2, X31
	0x0396C7D8 BL 0x393DFBC
	0x0396C7DC ADRP X9, 0x7E3000
	0x0396C7E0 LDR W8, [X29 + 0x1C]
	0x0396C7E4 LDR X10, [X29 + 0x10]
	0x0396C7E8 LDR X9, [X9 + 0x1C0]
	0x0396C7EC ADD W8, W8, 0x1
	0x0396C7F0 LDR X9, [X9]
	0x0396C7F4 STR W8, [X29 + 0x1C]
	0x0396C7F8 CBZ X10, 0x396CEF0
	0x0396C7FC LDRSW X11, [X29 + 0x18]
	0x0396C800 LDR W12, [X10 + 0x18]
	0x0396C804 CMP W11, W12
	0x0396C808 B.CS 0x396C820
	0x0396C80C ADD W9, W11, 0x1
	0x0396C810 ADD X10, X10, X11, 0x3, LSL
	0x0396C814 STR W9, [X29 + 0x18]
	0x0396C818 STR X23, [X10 + 0x20]
	0x0396C81C B 0x396C83C
	0x0396C820 LDR X8, [X9 + 0x20]
	0x0396C824 LDR X8, [X8 + 0xC0]
	0x0396C828 LDR X2, [X8 + 0x70]
	0x0396C82C MOV X0, X29
	0x0396C830 MOV X1, X23
	0x0396C834 BL 0x301BF90
	0x0396C838 LDP W9, W8, [X29 + 0x18]
	0x0396C83C ADRP X10, 0x7E3000
	0x0396C840 LDR X11, [X29 + 0x10]
	0x0396C844 LDR X10, [X10 + 0x1C0]
	0x0396C848 ADD W8, W8, 0x1
	0x0396C84C LDR X10, [X10]
	0x0396C850 STR W8, [X29 + 0x1C]
	0x0396C854 CBZ X11, 0x396CEC4
	0x0396C858 LDR W12, [X11 + 0x18]
	0x0396C85C CMP W9, W12
	0x0396C860 B.CS 0x396C878
	0x0396C864 ADD W10, W9, 0x1
	0x0396C868 ADD X9, X11, W9, 0x3, SXTW
	0x0396C86C STR W10, [X29 + 0x18]
	0x0396C870 STR X31, [X9 + 0x20]
	0x0396C874 B 0x396C894
	0x0396C878 LDR X8, [X10 + 0x20]
	0x0396C87C LDR X8, [X8 + 0xC0]
	0x0396C880 LDR X2, [X8 + 0x70]
	0x0396C884 MOV X0, X29
	0x0396C888 MOV X1, X31
	0x0396C88C BL 0x301BF90
	0x0396C890 LDP W10, W8, [X29 + 0x18]
	0x0396C894 ADRP X11, 0x7E3000
	0x0396C898 LDR X9, [X29 + 0x10]
	0x0396C89C LDR X11, [X11 + 0x1C0]
	0x0396C8A0 ADD W8, W8, 0x1
	0x0396C8A4 LDR X11, [X11]
	0x0396C8A8 STR W8, [X29 + 0x1C]
	0x0396C8AC CBZ X9, 0x396CECC
	0x0396C8B0 LDR W8, [X9 + 0x18]
	0x0396C8B4 CMP W10, W8
	0x0396C8B8 B.CS 0x396C8D0
	0x0396C8BC ADD W8, W10, 0x1
	0x0396C8C0 ADD X9, X9, W10, 0x3, SXTW
	0x0396C8C4 STR W8, [X29 + 0x18]
	0x0396C8C8 STR X31, [X9 + 0x20]
	0x0396C8CC B 0x396C8E8
	0x0396C8D0 LDR X8, [X11 + 0x20]
	0x0396C8D4 LDR X8, [X8 + 0xC0]
	0x0396C8D8 LDR X2, [X8 + 0x70]
	0x0396C8DC MOV X0, X29
	0x0396C8E0 MOV X1, X31
	0x0396C8E4 BL 0x301BF90
	0x0396C8E8 ADRP X8, 0x788000
	0x0396C8EC LDR X8, [X8 + 0xE58]
	0x0396C8F0 LDR X0, [X8]
	0x0396C8F4 MOVZ W1, 0x6
	0x0396C8F8 BL 0x1C16D6C
	0x0396C8FC MOV X23, X0
	0x0396C900 CBZ X0, 0x396CEB4
	0x0396C904 LDR W8, [X23 + 0x18]
	0x0396C908 CBZ W8, 0x396CEAC
	0x0396C90C CMP W8, 0x1
	0x0396C910 STR W27, [X23 + 0x20]
	0x0396C914 B.EQ 0x396CE9C
	0x0396C918 CMP W8, 0x2
	0x0396C91C STR W19, [X23 + 0x24]
	0x0396C920 B.LS 0x396CF00
	0x0396C924 CMP W8, 0x3
	0x0396C928 STR W25, [X23 + 0x28]
	0x0396C92C B.EQ 0x396CEBC
	0x0396C930 CMP W8, 0x4
	0x0396C934 STR W19, [X23 + 0x2C]
	0x0396C938 B.LS 0x396CE8C
	0x0396C93C CMP W8, 0x5
	0x0396C940 STR W24, [X23 + 0x30]
	0x0396C944 B.EQ 0x396CED4
	0x0396C948 LDR X8, [X31 + 0x60]
	0x0396C94C STR W25, [X23 + 0x34]
	0x0396C950 CBZ X8, 0x396CEF8
	0x0396C954 LDR W20, [X8 + 0x48]
	0x0396C958 LDUR V0, [X8 + 0x2C]
	0x0396C95C LDUR V1, [X8 + 0x1C]
	0x0396C960 MOVI V2.2D, 0x0
	0x0396C964 STP V2, V2, [X31 + 0x100]
	0x0396C968 STP V1, V0, [X31 + 0x80]
	0x0396C96C STP V1, V0, [X31 + 0xE0]
	0x0396C970 ADD X0, X31, 0x100
	0x0396C974 ADD X1, X31, 0xE0
	0x0396C978 MOV X2, X31
	0x0396C97C BL 0x38F69EC
	0x0396C980 ADRP X8, 0x7E2000
	0x0396C984 LDR X8, [X8 + 0x560]
	0x0396C988 LDR X0, [X8]
	0x0396C98C BL 0x1C16F10
	0x0396C990 LDP V0, V1, [X31 + 0x100]
	0x0396C994 MOV X19, X0
	0x0396C998 STP V0, V1, [X31 + 0xC0]
	0x0396C99C ADD X3, X31, 0xC0
	0x0396C9A0 MOVN W5, 0x0
	0x0396C9A4 MOVN W6, 0x0
	0x0396C9A8 MOV X1, X23
	0x0396C9AC MOV W2, W20
	0x0396C9B0 MOV W4, W31
	0x0396C9B4 MOV W7, W31
	0x0396C9B8 STR X31, [X31]
	0x0396C9BC BL 0x39004D4
	0x0396C9C0 LDR X0, [X31 + 0x30]
	0x0396C9C4 CBZ X0, 0x396CE94
	0x0396C9C8 ADRP X9, 0x7E1000
	0x0396C9CC LDR W10, [X0 + 0x1C]
	0x0396C9D0 LDR X8, [X0 + 0x10]
	0x0396C9D4 LDR X9, [X9 + 0xE10]
	0x0396C9D8 ADD W10, W10, 0x1
	0x0396C9DC LDR X9, [X9]
	0x0396C9E0 STR W10, [X0 + 0x1C]
	0x0396C9E4 CBZ X8, 0x396CEE8
	0x0396C9E8 LDRSW X10, [X0 + 0x18]
	0x0396C9EC LDR W11, [X8 + 0x18]
	0x0396C9F0 CMP W10, W11
	0x0396C9F4 B.CS 0x396CA0C
	0x0396C9F8 ADD W9, W10, 0x1
	0x0396C9FC ADD X8, X8, X10, 0x3, LSL
	0x0396CA00 STR W9, [X0 + 0x18]
	0x0396CA04 STR X19, [X8 + 0x20]
	0x0396CA08 B 0x396C380
	0x0396CA0C LDR X8, [X9 + 0x20]
	0x0396CA10 LDR X8, [X8 + 0xC0]
	0x0396CA14 LDR X2, [X8 + 0x70]
	0x0396CA18 MOV X1, X19
	0x0396CA1C BL 0x301BF90
	0x0396CA20 B 0x396C380
	0x0396CA24 MOV X19, X31
	0x0396CA28 MOVZ W20, 0xC
	0x0396CA2C LDR W8, [X31 + 0x50]
	0x0396CA30 STR W8, [X31 + 0x18]
	0x0396CA34 ADRP X8, 0x7E3000
	0x0396CA38 LDR X8, [X8 + 0xDE0]
	0x0396CA3C LDR X1, [X8]
	0x0396CA40 ADD X0, X31, 0x1E0
	0x0396CA44 BL 0x2BEC024
	0x0396CA48 CBNZ X19, 0x396D6F0
	0x0396CA4C CMP W20, 0xC
	0x0396CA50 B.EQ 0x396CA58
	0x0396CA54 CBNZ W20, 0x396D620
	0x0396CA58 LDR X0, [X31 + 0x40]
	0x0396CA5C CBZ X0, 0x396D6F8
	0x0396CA60 ADRP X8, 0x7E3000
	0x0396CA64 LDR X8, [X8 + 0xE38]
	0x0396CA68 LDR X1, [X8]
	0x0396CA6C ADD X8, X31, 0x80
	0x0396CA70 BL 0x2DBE924
	0x0396CA74 LDR V0, [X31 + 0x8]
	0x0396CA78 LDR X8, [X31 + 0x90]
	0x0396CA7C STR V0, [X31 + 0x1C]
	0x0396CA80 STR X8, [X31 + 0x1D0]
	0x0396CA84 ADRP X8, 0x7E3000
	0x0396CA88 LDR X8, [X8 + 0xDF8]
	0x0396CA8C LDR X1, [X8]
	0x0396CA90 ADD X0, X31, 0x1C0
	0x0396CA94 BL 0x2BC3C64
	0x0396CA98 TBZ X0, 0x0, 0x396CDE8
	0x0396CA9C LDR X20, [X31 + 0x1D0]
	0x0396CAA0 CBZ X20, 0x396CF08
	0x0396CAA4 MOVN W8, 0x0
	0x0396CAA8 STR W8, [X20 + 0x54]
	0x0396CAAC LDR X0, [X31 + 0x20]
	0x0396CAB0 MOV X1, X20
	0x0396CAB4 MOV X2, X31
	0x0396CAB8 BL 0x390987C
	0x0396CABC STP V1, V0, [X31 + 0x40]
	0x0396CAC0 MOV V0.S[1], V1.S[0]
	0x0396CAC4 MOV V9.16B, V2.16B
	0x0396CAC8 STR V0, [X31 + 0x6]
	0x0396CACC MOVZ W25, 0x8
	0x0396CAD0 MOV X0, X20
	0x0396CAD4 MOV X1, X31
	0x0396CAD8 BL 0x38FF530
	0x0396CADC CBZ X0, 0x396CE08
	0x0396CAE0 LDRSW X8, [X0 + 0x18]
	0x0396CAE4 SUB X24, X25, 0x8
	0x0396CAE8 CMP X24, X8
	0x0396CAEC B.GE 0x396CA84
	0x0396CAF0 MOV X0, X20
	0x0396CAF4 MOV X1, X31
	0x0396CAF8 BL 0x38FF530
	0x0396CAFC CBZ X0, 0x396CE20
	0x0396CB00 LDR W8, [X0 + 0x18]
	0x0396CB04 CMP X24, X8
	0x0396CB08 B.CS 0x396CE10
	0x0396CB0C ADRP X8, 0x7E2000
	0x0396CB10 LDR W19, [X0, X25, LSL #2]
	0x0396CB14 LDR X8, [X8 + 0xD08]
	0x0396CB18 LDR X2, [X8]
	0x0396CB1C LDR X0, [X31 + 0x78]
	0x0396CB20 MOV W1, W19
	0x0396CB24 BL 0x2A0A530
	0x0396CB28 TBZ X0, 0x0, 0x396CB34
	0x0396CB2C CBNZ X21, 0x396CBB0
	0x0396CB30 B 0x396CE50
	0x0396CB34 CBZ X21, 0x396CE40
	0x0396CB38 ADRP X8, 0x7E1000
	0x0396CB3C LDR X8, [X8 + 0xC80]
	0x0396CB40 LDR X2, [X8]
	0x0396CB44 MOV X0, X21
	0x0396CB48 MOV W1, W19
	0x0396CB4C BL 0x2A0A2A8
	0x0396CB50 MOV W1, W0
	0x0396CB54 ADRP X8, 0x7E2000
	0x0396CB58 LDR X8, [X8 + 0xD08]
	0x0396CB5C LDR X2, [X8]
	0x0396CB60 LDR X0, [X31 + 0x70]
	0x0396CB64 BL 0x2A0A530
	0x0396CB68 TBZ X0, 0x0, 0x396CBB0
	0x0396CB6C ADRP X23, 0x7E1000
	0x0396CB70 LDR X23, [X23 + 0xC80]
	0x0396CB74 LDR X2, [X23]
	0x0396CB78 MOV X0, X21
	0x0396CB7C MOV W1, W19
	0x0396CB80 BL 0x2A0A2A8
	0x0396CB84 MOV W1, W0
	0x0396CB88 LDR X2, [X23]
	0x0396CB8C LDR X0, [X31 + 0x70]
	0x0396CB90 BL 0x2A0A2A8
	0x0396CB94 ADRP X8, 0x7B1000
	0x0396CB98 LDR X8, [X8 + 0x8B0]
	0x0396CB9C MOV W2, W0
	0x0396CBA0 LDR X3, [X8]
	0x0396CBA4 MOV X0, X21
	0x0396CBA8 MOV W1, W19
	0x0396CBAC BL 0x2A0A330
	0x0396CBB0 ADRP X8, 0x7E1000
	0x0396CBB4 LDR X8, [X8 + 0xC80]
	0x0396CBB8 LDR X2, [X8]
	0x0396CBBC MOV X0, X21
	0x0396CBC0 MOV W1, W19
	0x0396CBC4 BL 0x2A0A2A8
	0x0396CBC8 MOV W23, W0
	0x0396CBCC CBZ X22, 0x396CC3C
	0x0396CBD0 MOV X0, X20
	0x0396CBD4 MOV X1, X31
	0x0396CBD8 BL 0x38FF530
	0x0396CBDC CBZ X0, 0x396CE30
	0x0396CBE0 LDR W8, [X0 + 0x18]
	0x0396CBE4 CMP X24, X8
	0x0396CBE8 B.CS 0x396CE28
	0x0396CBEC ADRP X8, 0x7E2000
	0x0396CBF0 LDR W1, [X0, X25, LSL #2]
	0x0396CBF4 LDR X8, [X8 + 0xD08]
	0x0396CBF8 LDR X2, [X8]
	0x0396CBFC MOV X0, X22
	0x0396CC00 BL 0x2A0A530
	0x0396CC04 TBZ X0, 0x0, 0x396CC3C
	0x0396CC08 MOV X0, X20
	0x0396CC0C MOV X1, X31
	0x0396CC10 BL 0x38FF530
	0x0396CC14 CBZ X0, 0x396CE70
	0x0396CC18 LDR W8, [X0 + 0x18]
	0x0396CC1C CMP X24, X8
	0x0396CC20 B.CS 0x396CE68
	0x0396CC24 ADRP X8, 0x7B1000
	0x0396CC28 LDR W1, [X0, X25, LSL #2]
	0x0396CC2C LDR X8, [X8 + 0x8A8]
	0x0396CC30 LDR X2, [X8]
	0x0396CC34 MOV X0, X22
	0x0396CC38 BL 0x2A0B690
	0x0396CC3C CBZ X26, 0x396CE18
	0x0396CC40 ADRP X8, 0x7E3000
	0x0396CC44 LDR X8, [X8 + 0xDB8]
	0x0396CC48 LDR X3, [X8]
	0x0396CC4C ADD X2, X31, 0x1A0
	0x0396CC50 MOV X0, X26
	0x0396CC54 MOV W1, W23
	0x0396CC58 BL 0x29F64C4
	0x0396CC5C TBZ X0, 0x0, 0x396CCC8
	0x0396CC60 LDR V0, [X31 + 0x1A0]
	0x0396CC64 LDR V1, [X31 + 0x1A8]
	0x0396CC68 LDR V2, [X31 + 0x6]
	0x0396CC6C LDR X0, [X31 + 0x1B8]
	0x0396CC70 FADD S1, S9, S1
	0x0396CC74 FADD V0.2S, V2.2S, V0.2S
	0x0396CC78 STR D0, [X31 + 0x1A0]
	0x0396CC7C STR S1, [X31 + 0x1A8]
	0x0396CC80 CBZ X0, 0x396CE48
	0x0396CC84 ADRP X9, 0x788000
	0x0396CC88 LDR W10, [X0 + 0x1C]
	0x0396CC8C LDR X8, [X0 + 0x10]
	0x0396CC90 LDR X9, [X9 + 0xE10]
	0x0396CC94 ADD W10, W10, 0x1
	0x0396CC98 LDR X9, [X9]
	0x0396CC9C STR W10, [X0 + 0x1C]
	0x0396CCA0 CBZ X8, 0x396CE38
	0x0396CCA4 LDRSW X10, [X0 + 0x18]
	0x0396CCA8 LDR W11, [X8 + 0x18]
	0x0396CCAC CMP W10, W11
	0x0396CCB0 B.CS 0x396CD34
	0x0396CCB4 ADD W9, W10, 0x1
	0x0396CCB8 ADD X8, X8, X10, 0x2, LSL
	0x0396CCBC STR W9, [X0 + 0x18]
	0x0396CCC0 STR W19, [X8 + 0x20]
	0x0396CCC4 B 0x396CD48
	0x0396CCC8 ADRP X8, 0x788000
	0x0396CCCC LDR X8, [X8 + 0xE30]
	0x0396CCD0 LDR X0, [X8]
	0x0396CCD4 BL 0x1C16F10
	0x0396CCD8 ADRP X8, 0x78B000
	0x0396CCDC LDR X8, [X8 + 0xB70]
	0x0396CCE0 MOV X24, X0
	0x0396CCE4 LDR X1, [X8]
	0x0396CCE8 BL 0x2FDBF14
	0x0396CCEC CBZ X24, 0x396CE60
	0x0396CCF0 ADRP X9, 0x788000
	0x0396CCF4 LDR W10, [X24 + 0x1C]
	0x0396CCF8 LDR X8, [X24 + 0x10]
	0x0396CCFC LDR X9, [X9 + 0xE10]
	0x0396CD00 ADD W10, W10, 0x1
	0x0396CD04 LDR X9, [X9]
	0x0396CD08 STR W10, [X24 + 0x1C]
	0x0396CD0C CBZ X8, 0x396CE58
	0x0396CD10 LDRSW X10, [X24 + 0x18]
	0x0396CD14 LDR W11, [X8 + 0x18]
	0x0396CD18 CMP W10, W11
	0x0396CD1C B.CS 0x396CD70
	0x0396CD20 ADD W9, W10, 0x1
	0x0396CD24 ADD X8, X8, X10, 0x2, LSL
	0x0396CD28 STR W9, [X24 + 0x18]
	0x0396CD2C STR W19, [X8 + 0x20]
	0x0396CD30 B 0x396CD88
	0x0396CD34 LDR X8, [X9 + 0x20]
	0x0396CD38 LDR X8, [X8 + 0xC0]
	0x0396CD3C LDR X2, [X8 + 0x70]
	0x0396CD40 MOV W1, W19
	0x0396CD44 BL 0x2FDC70C
	0x0396CD48 ADRP X8, 0x7E3000
	0x0396CD4C LDP V0, V1, [X31 + 0x1A0]
	0x0396CD50 LDR X8, [X8 + 0xDC8]
	0x0396CD54 STP V0, V1, [X31 + 0x230]
	0x0396CD58 LDR X3, [X8]
	0x0396CD5C ADD X2, X31, 0x230
	0x0396CD60 MOV X0, X26
	0x0396CD64 MOV W1, W23
	0x0396CD68 BL 0x29F4950
	0x0396CD6C B 0x396CDE0
	0x0396CD70 LDR X8, [X9 + 0x20]
	0x0396CD74 LDR X8, [X8 + 0xC0]
	0x0396CD78 LDR X2, [X8 + 0x70]
	0x0396CD7C MOV X0, X24
	0x0396CD80 MOV W1, W19
	0x0396CD84 BL 0x2FDC70C
	0x0396CD88 ADRP X8, 0x7E3000
	0x0396CD8C LDR X8, [X8 + 0xE68]
	0x0396CD90 MOVI V0.2D, 0x0

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+272], D11
	003 Move [X31+280], D10
	004 Move [X31+288], D9
	005 Move [X31+296], D8
	006 Move [X31+304], X29
	007 Move [X31+312], X30
	008 Move [X31+320], X28
	009 Move [X31+328], X27
	010 Move [X31+336], X26
	011 Move [X31+344], X25
	012 Move [X31+352], X24
	013 Move [X31+360], X23
	014 Move [X31+368], X22
	015 Move [X31+376], X21
	016 Move [X31+384], X20
	017 Move [X31+392], X19
	018 Move X20, 0xA76000
	019 Move X21, 0x7E3000
	020 Move W8, [X20+2543]
	021 Move X21, [X21+1008]
	022 Move V8, V0
	023 Move X19, X1
	024 Move X24, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {100}
	029 Move X0, 0x792000
	030 Move X0, [X0+2136]
	031 Call 0x1C17CF4
	032 Move X0, 0x7B2000
	033 Move X0, [X0+2256]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E3000
	036 Move X0, [X0+3336]
	037 Call 0x1C17CF4
	038 Move X0, 0x7B2000
	039 Move X0, [X0+2216]
	040 Call 0x1C17CF4
	041 Move X0, 0x792000
	042 Move X0, [X0+2192]
	043 Call 0x1C17CF4
	044 Move X0, 0x7E2000
	045 Move X0, [X0+3200]
	046 Call 0x1C17CF4
	047 Move X0, 0x7B2000
	048 Move X0, [X0+2224]
	049 Call 0x1C17CF4
	050 Move X0, 0x792000
	051 Move X0, [X0+2184]
	052 Call 0x1C17CF4
	053 Move X0, 0x7E4000
	054 Move X0, [X0+3464]
	055 Call 0x1C17CF4
	056 Move X0, 0x7E3000
	057 Move X0, [X0+1288]
	058 Call 0x1C17CF4
	059 Move X0, 0x7E3000
	060 Move X0, [X0+992]
	061 Call 0x1C17CF4
	062 Move X0, 0x7E3000
	063 Move X0, [X0+1008]
	064 Call 0x1C17CF4
	065 Move X0, 0x7E3000
	066 Move X0, [X0+1376]
	067 Call 0x1C17CF4
	068 Move X0, 0x7E3000
	069 Move X0, [X0+1296]
	070 Call 0x1C17CF4
	071 Move X0, 0x789000
	072 Move X0, [X0+3672]
	073 Call 0x1C17CF4
	074 Move X0, 0x7E4000
	075 Move X0, [X0+448]
	076 Call 0x1C17CF4
	077 Move X0, 0x7E2000
	078 Move X0, [X0+3552]
	079 Call 0x1C17CF4
	080 Move X0, 0x7E2000
	081 Move X0, [X0+3608]
	082 Call 0x1C17CF4
	083 Move X0, 0x7E4000
	084 Move X0, [X0+464]
	085 Call 0x1C17CF4
	086 Move X0, 0x7E2000
	087 Move X0, [X0+3560]
	088 Call 0x1C17CF4
	089 Move X0, 0x7E4000
	090 Move X0, [X0+3472]
	091 Call 0x1C17CF4
	092 Move X0, 0x7E4000
	093 Move X0, [X0+3480]
	094 Call 0x1C17CF4
	095 Move X0, 0x7E3000
	096 Move X0, [X0+32]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X20+2543], W8
	100 Move X1, [X21]
	101 Move X20, 0x7E4000
	102 Move X20, [X20+3464]
	103 Move X0, X19
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfNotEqual {112}
	107 Move X8, 0x7E3000
	108 Move X8, [X8+992]
	109 Move X0, X19
	110 Move X1, [X8]
	111 Call Enumerable.ToArray, X0
	112 Move X1, [X20]
	113 Move [X31+32], X0
	114 Call Enumerable.Any, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {771}
	119 Compare X24, 0
	120 JumpIfEqual {791}
	121 Move X0, X24
	122 Move X1, X31
	123 Move X2, X31
	124 Call ProBuilderMesh.GetVertices, X0, X1
	125 Move X8, 0x7E2000
	126 Move X8, [X8+3560]
	127 Move X19, X0
	128 Move X8, [X8]
	129 Move X0, X8
	130 Call 0x1C17F10
	131 Move X8, 0x7E2000
	132 Move X8, [X8+3552]
	133 Move X1, X19
	134 Move X23, X0
	135 Move X2, [X8]
	136 Call List`1<Object>..ctor, X0, X1
	137 Move X8, [X24+48]
	138 Compare X8, 0
	139 JumpIfEqual {791}
	140 Move W8, [X8+24]
	141 Move X0, X24
	142 Move X1, X31
	143 Move [X31+84], W8
	144 Call ProBuilderMesh.get_sharedVertexLookup, X0
	145 Move X25, X0
	146 Move X0, X24
	147 Move X1, X31
	148 Call ProBuilderMesh.get_sharedTextureLookup, X0
	149 Move X8, 0x792000
	150 Move X8, [X8+2184]
	151 Move X26, X0
	152 Move X8, [X8]
	153 Move X0, X8
	154 Call 0x1C17F10
	155 Move X8, 0x792000
	156 Move X8, [X8+2192]
	157 Move X27, X0
	158 Move X1, [X8]
	159 Call Dictionary`2<Int32, Int32>..ctor, X0
	160 Move X20, 0x7E4000
	161 Move X20, [X20+3480]
	162 Move X0, [X20]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X20]
	168 Move X8, [X0+184]
	169 Move X19, [X8+16]
	170 Compare X19, 0
	171 JumpIfNotEqual {193}
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X20]
	177 Move X9, 0x7E3000
	178 Move X8, [X0+184]
	179 Move X9, [X9+1296]
	180 Move X21, [X8]
	181 Move X0, [X9]
	182 Call 0x1C17F10
	183 Move X8, 0x7E4000
	184 Move X8, [X8+3472]
	185 Move X1, X21
	186 Move X3, X31
	187 Move X19, X0
	188 Move X2, [X8]
	189 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	190 Move X8, [X20]
	191 Move X8, [X8+184]
	192 Move [X8+16], X19
	193 Move X8, 0x7E3000
	194 Move X8, [X8+1288]
	195 Move X20, [X31+32]
	196 Move X1, X19
	197 Move X2, [X8]
	198 Move X0, X20
	199 Call Enumerable.Sum, X0, X1
	200 Move X8, 0x7E3000
	201 Move X8, [X8+1008]
	202 Move W1, W0
	203 Move X8, [X8]
	204 Move X0, X8
	205 Call 0x1C17D6C
	206 Compare X20, 0
	207 JumpIfEqual {791}
	208 Move W8, [X20+24]
	209 Move X28, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move [X31+40], W31
	212 Move [X31+116], W31
	213 Move X29, 0x7E3000
	214 Move X29, [X29+3336]
	215 Move W9, W31
	216 Move [X31+56], X26
	217 Move [X31+64], X28
	218 Move [X31+24], X24
	219 Move [X31+48], X27
	220 Move [X31+72], X25
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add X8, X20, W9
	223 Move X21, [X8+32]
	224 Move [X31+44], W9
	225 Compare X21, 0
	226 JumpIfEqual {791}
	227 Move TEMP, 0
	228 Not TEMP
	229 Move W8, TEMP
	230 Move X0, X24
	231 Move X1, X21
	232 Move X2, X31
	233 Move [X21+24], W31
	234 Move [X21+84], W8
	235 Call Math.Normal, X0, X1
	236 Move X0, X21
	237 Move X1, X31
	238 Move V10, V0
	239 Move V11, V1
	240 Move V9, V2
	241 Call Face.get_edgesInternal, X0
	242 Compare X27, 0
	243 JumpIfEqual {791}
	244 Move X8, 0x7B2000
	245 Move X8, [X8+2256]
	246 Move X19, X0
	247 Move X0, X27
	248 Move X1, [X8]
	249 Call Dictionary`2<Int32, Int32>.Clear, X0
	250 Compare X19, 0
	251 JumpIfEqual {791}
	252 Move X8, [X19+24]
	253 Multiply S10, S10, S8
	254 Multiply S11, S11, S8
	255 Multiply S9, S9, S8
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move W9, [X31+40]
	258 Add X11, X21, 28
	259 Move X10, X31
	260 And X8, X8, 0
	261 Move W9, W9
	262 Move [X31+96], X9
	263 Move [X31+104], X11
	264 Add X9, X19, 36
	265 Move [X31+88], X19
	266 Move [X31+136], X21
	267 Compare X23, 0
	268 JumpIfEqual {791}
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move W22, [X9-4]
	271 Move W21, [X9]
	272 Move X2, [X29]
	273 Move W28, [X23+24]
	274 Move X0, X27
	275 Move W1, W22
	276 Move [X31+120], X9
	277 Move [X31+128], X10
	278 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {300}
	283 Move X2, [X29]
	284 Move X0, X27
	285 Move W1, W21
	286 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	287 Move X24, 0x7E2000
	288 Move X24, [X24+3200]
	289 Move TEMP, X0
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfNotEqual {334}
	293 Move X2, [X24]
	294 Move X0, X27
	295 Move W1, W22
	296 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	297 Compare X25, 0
	298 JumpIfEqual {791}
	299 Move W2, W0
	300 Move X24, 0x7E2000
	301 Move X24, [X24+3200]
	302 Compare X25, 0
	303 JumpIfEqual {791}
	304 Move X2, [X24]
	305 Move X0, X25
	306 Move W1, W22
	307 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	308 Move X8, 0x792000
	309 Move X8, [X8+2136]
	310 Move W2, W0
	311 Move X0, X27
	312 Move W1, W22
	313 Move X3, [X8]
	314 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	315 Move X8, 0x7B2000
	316 Move X8, [X8+2224]
	317 Move W9, [X31+116]
	318 Move X0, X25
	319 Move W1, W22
	320 Move X3, [X8]
	321 Move W8, [X31+84]
	322 Add W19, W9, 1
	323 Add W2, W9, W8
	324 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	325 Move X2, [X29]
	326 Move X0, X27
	327 Move W1, W21
	328 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	329 Move W26, W19
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {337}
	334 Move W26, [X31+116]
	335 Compare X25, 0
	336 JumpIfEqual {791}
	337 Move X2, [X24]
	338 Move X0, X25
	339 Move W1, W21
	340 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	341 Move X8, 0x792000
	342 Move X8, [X8+2136]
	343 Move W2, W0
	344 Move X0, X27
	345 Move W1, W21
	346 Move X3, [X8]
	347 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	348 Move X8, 0x7B2000
	349 Move X8, [X8+2224]
	350 Move X0, X25
	351 Move W1, W21
	352 Add W19, W26, 1
	353 Move X3, [X8]
	354 Move W8, [X31+84]
	355 Add W2, W26, W8
	356 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	357 Move X2, [X24]
	358 Move X0, X27
	359 Move W1, W22
	360 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	361 Move W2, W0
	362 Move [X31+116], W19
	363 Move X26, 0x792000
	364 Move X26, [X26+2136]
	365 Move X0, X25
	366 Move W1, W28
	367 Move X3, [X26]
	368 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	369 Move X2, [X24]
	370 Move X0, X27
	371 Move W1, W21
	372 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	373 Move X3, [X26]
	374 Add W29, W28, 1
	375 Move W2, W0
	376 Move X0, X25
	377 Move W1, W29
	378 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	379 Move X2, [X24]
	380 Move X0, X25
	381 Move W1, W22
	382 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	383 Move X3, [X26]
	384 Add W19, W28, 2
	385 Move W2, W0
	386 Move X0, X25
	387 Move W1, W19
	388 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	389 Move X2, [X24]
	390 Move X0, X25
	391 Move W1, W21
	392 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	393 Move X3, [X26]
	394 Add W27, W28, 3
	395 Move W2, W0
	396 Move X0, X25
	397 Move W1, W27
	398 Move W20, W28
	399 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	400 Move X26, 0x7E4000
	401 Move X26, [X26+464]
	402 Move X0, X23
	403 Move W1, W22
	404 Move X2, [X26]
	405 Call List`1<Object>.get_Item, X0, X1
	406 Move X28, 0x7E3000
	407 Move X28, [X28+32]
	408 Move X25, X0
	409 Move X8, [X28]
	410 Move X0, X8
	411 Call 0x1C17F10
	412 Move X1, X25
	413 Move X2, X31
	414 Move X24, X0
	415 Call Vertex..ctor, X0, X1
	416 Move X2, [X26]
	417 Move X0, X23
	418 Move W1, W21
	419 Call List`1<Object>.get_Item, X0, X1
	420 Move X8, [X28]
	421 Move X26, X0
	422 Move X0, X8
	423 Call 0x1C17F10
	424 Move X1, X26
	425 Move X2, X31
	426 Move X25, X0
	427 Call Vertex..ctor, X0, X1
	428 Compare X24, 0
	429 JumpIfEqual {791}
	430 Move S0, [X24+16]
	431 Move S1, [X24+20]
	432 Move V2, [X24+24]
	433 Move X0, X24
	434 Move X1, X31
	435 Add S0, S10, S0
	436 Add S1, S11, S1
	437 Add S2, S9, S2
	438 Call Vertex.set_position, X0, X1
	439 Compare X25, 0
	440 JumpIfEqual {791}
	441 Move S0, [X25+16]
	442 Move S1, [X25+20]
	443 Move V2, [X25+24]
	444 Move X0, X25
	445 Move X1, X31
	446 Add S0, S10, S0
	447 Add S1, S11, S1
	448 Add S2, S9, S2
	449 Call Vertex.set_position, X0, X1
	450 Move X8, 0x7E4000
	451 Move X8, [X8+464]
	452 Move X0, X23
	453 Move W1, W22
	454 Move X2, [X8]
	455 Call List`1<Object>.get_Item, X0, X1
	456 Move X8, 0x7E3000
	457 Move X8, [X8+32]
	458 Move X26, X0
	459 Move X8, [X8]
	460 Move X0, X8
	461 Call 0x1C17F10
	462 Move X1, X26
	463 Move X2, X31
	464 Move X22, X0
	465 Call Vertex..ctor, X0, X1
	466 Move X26, 0x7E4000
	467 Move W10, [X23+28]
	468 Move X8, [X23+16]
	469 Move X26, [X26+448]
	470 Add W10, W10, 1
	471 Move X9, [X26]
	472 Move [X23+28], W10
	473 Compare X8, 0
	474 JumpIfEqual {791}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W11, [X8+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Add W9, W10, 1
	479 Add X8, X8, X10
	480 Move [X23+24], W9
	481 Move [X8+32], X22
	482 Move X8, [X9+32]
	483 Move X0, X23
	484 Move X1, X22
	485 Move X8, [X8+192]
	486 Move X2, [X8+112]
	487 Call List`1<Object>.AddWithResize, X0, X1
	488 Move X8, 0x7E4000
	489 Move X8, [X8+464]
	490 Move X0, X23
	491 Move W1, W21
	492 Move X2, [X8]
	493 Call List`1<Object>.get_Item, X0, X1
	494 Move X8, 0x7E3000
	495 Move X8, [X8+32]
	496 Move X22, X0
	497 Move X8, [X8]
	498 Move X0, X8
	499 Call 0x1C17F10
	500 Move X1, X22
	501 Move X2, X31
	502 Move X21, X0
	503 Call Vertex..ctor, X0, X1
	504 Move W8, [X23+28]
	505 Move X10, [X23+16]
	506 Move X9, [X26]
	507 Add W8, W8, 1
	508 Move [X23+28], W8
	509 Compare X10, 0
	510 JumpIfEqual {791}
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Move W12, [X10+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Add W9, W11, 1
	515 Add X10, X10, X11
	516 Move [X23+24], W9
	517 Move [X10+32], X21
	518 Move X8, [X9+32]
	519 Move X0, X23
	520 Move X1, X21
	521 Move X8, [X8+192]
	522 Move X2, [X8+112]
	523 Call List`1<Object>.AddWithResize, X0, X1
	524 Move W9, [X23+24]
	525 Move W8, [X23+28]
	526 Move X11, [X23+16]
	527 Move X10, [X26]
	528 Add W8, W8, 1
	529 Move [X23+28], W8
	530 Compare X11, 0
	531 JumpIfEqual {791}
	532 Move W12, [X11+24]
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Add W10, W9, 1
	535 Add X9, X11, W9
	536 Move [X23+24], W10
	537 Move [X9+32], X24
	538 Move X8, [X10+32]
	539 Move X0, X23
	540 Move X1, X24
	541 Move X8, [X8+192]
	542 Move X2, [X8+112]
	543 Call List`1<Object>.AddWithResize, X0, X1
	544 Move W10, [X23+24]
	545 Move W8, [X23+28]
	546 Move X9, [X23+16]
	547 Move X11, [X26]
	548 Add W8, W8, 1
	549 Move [X23+28], W8
	550 Compare X9, 0
	551 JumpIfEqual {791}
	552 Move W8, [X9+24]
	553 NotImplemented "Instruction CMP not yet implemented."
	554 Add W8, W10, 1
	555 Add X9, X9, W10
	556 Move [X23+24], W8
	557 Move [X9+32], X25
	558 Move X8, [X11+32]
	559 Move X0, X23
	560 Move X1, X25
	561 Move X8, [X8+192]
	562 Move X2, [X8+112]
	563 Call List`1<Object>.AddWithResize, X0, X1
	564 Move X8, 0x789000
	565 Move X8, [X8+3672]
	566 Move W1, 6
	567 Move X0, [X8]
	568 Call 0x1C17D6C
	569 Move X25, [X31+72]
	570 Compare X0, 0
	571 JumpIfEqual {791}
	572 Move W8, [X0+24]
	573 Move X21, X0
	574 Compare W8, 0
	575 JumpIfEqual {792}
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Move [X21+32], W20
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move [X21+36], W29
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move [X21+40], W19
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move [X21+44], W29
	584 NotImplemented "Instruction CMP not yet implemented."
	585 Move [X21+48], W27
	586 Move X8, [X31+104]
	587 Move [X21+52], W19
	588 Move X19, [X31+136]
	589 NotImplemented "Instruction MOVI not yet implemented."
	590 Move V0, [X8]
	591 Move V1, [X8+16]
	592 Add X0, X31, 208
	593 Move W22, [X19+72]
	594 Add X1, X31, 176
	595 Move X2, X31
	596 Move [X31+208], V2
	597 Move [X31+216], V2
	598 Move [X31+240], V0
	599 Move [X31+248], V1
	600 Move [X31+176], V0
	601 Move [X31+184], V1
	602 Call AutoUnwrapSettings..ctor, X0, X1
	603 Move X8, 0x7E3000
	604 Move W24, [X19+24]
	605 Move X8, [X8+1376]
	606 Move X0, [X8]
	607 Call 0x1C17F10
	608 Move V0, [X31+208]
	609 Move V1, [X31+224]
	610 Add X3, X31, 144
	611 Move TEMP, 0
	612 Not TEMP
	613 Move W5, TEMP
	614 Move TEMP, 0
	615 Not TEMP
	616 Move W6, TEMP
	617 Move X1, X21
	618 Move W2, W22
	619 Move W4, W24
	620 Move W7, W31
	621 Move X19, X0
	622 Move [X31+144], V0
	623 Move [X31+152], V1
	624 Move [X31], X31
	625 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	626 Move X28, [X31+64]
	627 Compare X28, 0
	628 JumpIfEqual {791}
	629 Move X8, [X31+96]
	630 Move X10, [X31+128]
	631 Move W9, [X28+24]
	632 Add X8, X8, X10
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Add X8, X28, W8
	635 Move [X8+32], X19
	636 Move X8, [X31+88]
	637 Move X9, [X31+120]
	638 Move X29, 0x7E3000
	639 Move X27, [X31+48]
	640 Move X26, [X31+56]
	641 Move W8, [X8+24]
	642 Move X29, [X29+3336]
	643 Move X21, [X31+136]
	644 Add X10, X10, 1
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Add X9, X9, 8
	647 Move W8, [X31+40]
	648 Move X24, [X31+24]
	649 Add W8, W8, W10
	650 Move [X31+40], W8
	651 Move X0, X21
	652 Move X1, X31
	653 Call Face.get_distinctIndexesInternal, X0
	654 Compare X0, 0
	655 JumpIfEqual {791}
	656 Move W19, 8
	657 NotImplemented "Instruction LDRSW not yet implemented."
	658 Subtract X20, X19, 8
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move X0, X21
	661 Move X1, X31
	662 Call Face.get_distinctIndexesInternal, X0
	663 Compare X0, 0
	664 JumpIfEqual {791}
	665 Move W8, [X0+24]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Compare X23, 0
	668 JumpIfEqual {791}
	669 Move X8, 0x7E4000
	670 Move W1, [X0]
	671 Move X8, [X8+464]
	672 Move X0, X23
	673 Move X2, [X8]
	674 Call List`1<Object>.get_Item, X0, X1
	675 Compare X0, 0
	676 JumpIfEqual {791}
	677 Move S0, [X0+16]
	678 Move S1, [X0+20]
	679 Move V2, [X0+24]
	680 Move X1, X31
	681 Add S0, S10, S0
	682 Add S1, S11, S1
	683 Add S2, S9, S2
	684 Call Vertex.set_position, X0, X1
	685 Compare X26, 0
	686 JumpIfEqual {715}
	687 Move X0, X21
	688 Move X1, X31
	689 Call Face.get_distinctIndexesInternal, X0
	690 Compare X0, 0
	691 JumpIfEqual {791}
	692 Move W8, [X0+24]
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Move W1, [X0]
	695 Move X2, [X29]
	696 Move X0, X26
	697 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	698 Move TEMP, X0
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfNotEqual {715}
	702 Move X0, X21
	703 Move X1, X31
	704 Call Face.get_distinctIndexesInternal, X0
	705 Compare X0, 0
	706 JumpIfEqual {791}
	707 Move W8, [X0+24]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move X8, 0x7B2000
	710 Move W1, [X0]
	711 Move X8, [X8+2216]
	712 Move X0, X26
	713 Move X2, [X8]
	714 Call Dictionary`2<Int32, Int32>.Remove, X0, X1
	715 Move X0, X21
	716 Move X1, X31
	717 Call Face.get_distinctIndexesInternal, X0
	718 Add X19, X19, 1
	719 Compare X0, 0
	720 JumpIfNotEqual {657}
	721 Move X20, [X31+32]
	722 Move W9, [X31+44]
	723 Move W8, [X20+24]
	724 Add W9, W9, 1
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Move X0, X24
	727 Move X1, X23
	728 Move W2, W31
	729 Move X3, X31
	730 Call ProBuilderMesh.SetVertices, X0, X1, X2
	731 Move X0, X24
	732 Move X1, X31
	733 Call ProBuilderMesh.get_faceCount, X0
	734 Compare X28, 0
	735 JumpIfEqual {791}
	736 Move X8, 0x7E3000
	737 Move W21, [X28+24]
	738 Move X8, [X8+1008]
	739 Move W19, W0
	740 Add W1, W19, W21
	741 Move X0, [X8]
	742 Call 0x1C17D6C
	743 Move X8, [X24+40]
	744 Move X22, X0
	745 Move W1, W31
	746 Move X2, X22
	747 Move X0, X8
	748 Move W3, W31
	749 Move W4, W19
	750 Move X5, X31
	751 Call Array.Copy, X0, X1, X2, X3, X4
	752 Move X0, X28
	753 Move W1, W31
	754 Move X2, X22
	755 Move W3, W19
	756 Move W4, W21
	757 Move X5, X31
	758 Call Array.Copy, X0, X1, X2, X3, X4
	759 Move X0, X24
	760 Move X1, X22
	761 Move X2, X31
	762 Call ProBuilderMesh.set_faces, X0, X1
	763 Move X0, X24
	764 Move X1, X25
	765 Move X2, X31
	766 Call ProBuilderMesh.SetSharedVertices, X0, X1
	767 Move X0, X24
	768 Move X1, X26
	769 Move X2, X31
	770 Call ProBuilderMesh.SetSharedTextures, X0, X1
	771 Move X28, X31
	772 Move X0, X28
	773 Move X20, [X31+384]
	774 Move X19, [X31+392]
	775 Move X22, [X31+368]
	776 Move X21, [X31+376]
	777 Move X24, [X31+352]
	778 Move X23, [X31+360]
	779 Move X26, [X31+336]
	780 Move X25, [X31+344]
	781 Move X28, [X31+320]
	782 Move X27, [X31+328]
	783 Move X29, [X31+304]
	784 Move X30, [X31+312]
	785 Move D9, [X31+288]
	786 Move D8, [X31+296]
	787 Move D11, [X31+272]
	788 Move D10, [X31+280]
	789 Add X31, X31, 400
	790 Return X0
	791 Call 0x1C17F20
	792 Call 0x1C17F28

Method: UnityEngine.ProBuilder.Face[] ExtrudeAsGroups(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Boolean compensateAngleVertexDistance, System.Single distance)

Disassembly:
	0x0396CD94 STP V0, V0, [X31 + 0x80]
	0x0396CD98 LDR X2, [X8]
	0x0396CD9C LDP V1, V0, [X31 + 0x40]
	0x0396CDA0 ADD X0, X31, 0x80
	0x0396CDA4 MOV V2.16B, V9.16B
	0x0396CDA8 MOV V5.16B, V9.16B
	0x0396CDAC MOV V3.16B, V0.16B
	0x0396CDB0 MOV V4.16B, V1.16B
	0x0396CDB4 MOV X1, X24
	0x0396CDB8 BL 0x25E7A20
	0x0396CDBC ADRP X8, 0x7E3000
	0x0396CDC0 LDP V0, V1, [X31 + 0x80]
	0x0396CDC4 LDR X8, [X8 + 0xDA0]
	0x0396CDC8 STP V0, V1, [X31 + 0x250]
	0x0396CDCC LDR X3, [X8]
	0x0396CDD0 ADD X2, X31, 0x250
	0x0396CDD4 MOV X0, X26
	0x0396CDD8 MOV W1, W23
	0x0396CDDC BL 0x29F4988
	0x0396CDE0 ADD X25, X25, 0x1
	0x0396CDE4 B 0x396CAD0
	0x0396CDE8 MOV X19, X31
	0x0396CDEC ADRP X8, 0x7E3000
	0x0396CDF0 LDR X8, [X8 + 0xDD8]
	0x0396CDF4 LDR X1, [X8]
	0x0396CDF8 ADD X0, X31, 0x1C0
	0x0396CDFC BL 0x2BC3C60
	0x0396CE00 CBZ X19, 0x396C2F0
	0x0396CE04 B 0x396D6FC
	0x0396CE08 BL 0x1C16F20
	0x0396CE0C B 0x396D730
	0x0396CE10 BL 0x1C16F28
	0x0396CE14 B 0x396D730
	0x0396CE18 BL 0x1C16F20
	0x0396CE1C B 0x396D730
	0x0396CE20 BL 0x1C16F20
	0x0396CE24 B 0x396D730
	0x0396CE28 BL 0x1C16F28
	0x0396CE2C B 0x396D730
	0x0396CE30 BL 0x1C16F20
	0x0396CE34 B 0x396D730
	0x0396CE38 BL 0x1C16F20
	0x0396CE3C B 0x396D730
	0x0396CE40 BL 0x1C16F20
	0x0396CE44 B 0x396D730
	0x0396CE48 BL 0x1C16F20
	0x0396CE4C B 0x396D730
	0x0396CE50 BL 0x1C16F20
	0x0396CE54 B 0x396D730
	0x0396CE58 BL 0x1C16F20
	0x0396CE5C B 0x396D730
	0x0396CE60 BL 0x1C16F20
	0x0396CE64 B 0x396D730
	0x0396CE68 BL 0x1C16F28
	0x0396CE6C B 0x396D730
	0x0396CE70 BL 0x1C16F20
	0x0396CE74 B 0x396D730
	0x0396CE78 BL 0x1C16F20
	0x0396CE7C B 0x396D730
	0x0396CE80 LDR X29, [X31 + 0x38]
	0x0396CE84 BL 0x1C16F20
	0x0396CE88 B 0x396D730
	0x0396CE8C BL 0x1C16F28
	0x0396CE90 B 0x396D730
	0x0396CE94 BL 0x1C16F20
	0x0396CE98 B 0x396D730
	0x0396CE9C BL 0x1C16F28
	0x0396CEA0 B 0x396D730
	0x0396CEA4 BL 0x1C16F20
	0x0396CEA8 B 0x396D730
	0x0396CEAC BL 0x1C16F28
	0x0396CEB0 B 0x396D730
	0x0396CEB4 BL 0x1C16F20
	0x0396CEB8 B 0x396D730
	0x0396CEBC BL 0x1C16F28
	0x0396CEC0 B 0x396D730
	0x0396CEC4 BL 0x1C16F20
	0x0396CEC8 B 0x396D730
	0x0396CECC BL 0x1C16F20
	0x0396CED0 B 0x396D730
	0x0396CED4 BL 0x1C16F28
	0x0396CED8 B 0x396D730
	0x0396CEDC LDR X29, [X31 + 0x38]
	0x0396CEE0 BL 0x1C16F20
	0x0396CEE4 B 0x396D730
	0x0396CEE8 BL 0x1C16F20
	0x0396CEEC B 0x396D730
	0x0396CEF0 BL 0x1C16F20
	0x0396CEF4 B 0x396D730
	0x0396CEF8 BL 0x1C16F20
	0x0396CEFC B 0x396D730
	0x0396CF00 BL 0x1C16F28
	0x0396CF04 B 0x396D730
	0x0396CF08 BL 0x1C16F20
	0x0396CF0C B 0x396D730
	0x0396CF10 BL 0x1C16F20
	0x0396CF14 B 0x396D730
	0x0396CF18 BL 0x1C16F20
	0x0396CF1C B 0x396D730
	0x0396CF20 B 0x396CF38
	0x0396CF24 B 0x396CF38
	0x0396CF28 B 0x396CF38
	0x0396CF2C B 0x396D010
	0x0396CF30 B 0x396CF38
	0x0396CF34 B 0x396CF38
	0x0396CF38 LDR X29, [X31 + 0x38]
	0x0396CF3C MOV X23, X1
	0x0396CF40 MOV X20, X0
	0x0396CF44 STR W19, [X31 + 0x50]
	0x0396CF48 B 0x396D01C
	0x0396CF4C B 0x396D010
	0x0396CF50 B 0x396D014
	0x0396CF54 B 0x396D014
	0x0396CF58 B 0x396D010
	0x0396CF5C B 0x396D010
	0x0396CF60 B 0x396D010
	0x0396CF64 B 0x396D010
	0x0396CF68 B 0x396D014
	0x0396CF6C B 0x396D010
	0x0396CF70 B 0x396D010
	0x0396CF74 B 0x396D0B0
	0x0396CF78 B 0x396D0B0
	0x0396CF7C B 0x396D0B0
	0x0396CF80 B 0x396D014
	0x0396CF84 B 0x396D010
	0x0396CF88 B 0x396D014
	0x0396CF8C B 0x396D014
	0x0396CF90 B 0x396D014
	0x0396CF94 B 0x396D014
	0x0396CF98 B 0x396D014
	0x0396CF9C B 0x396D014
	0x0396CFA0 B 0x396D014
	0x0396CFA4 B 0x396D014
	0x0396CFA8 B 0x396D014
	0x0396CFAC B 0x396D010
	0x0396CFB0 B 0x396D014
	0x0396CFB4 B 0x396D014
	0x0396CFB8 B 0x396D010
	0x0396CFBC B 0x396D010
	0x0396CFC0 B 0x396D014
	0x0396CFC4 B 0x396D010
	0x0396CFC8 B 0x396D010
	0x0396CFCC B 0x396D014
	0x0396CFD0 LDR W8, [X31 + 0x18]
	0x0396CFD4 MOV X23, X1
	0x0396CFD8 MOV X20, X0
	0x0396CFDC STR W8, [X31 + 0x50]
	0x0396CFE0 B 0x396D01C
	0x0396CFE4 B 0x396D010
	0x0396CFE8 B 0x396D010
	0x0396CFEC B 0x396D014
	0x0396CFF0 B 0x396D014
	0x0396CFF4 B 0x396D014
	0x0396CFF8 B 0x396D014
	0x0396CFFC B 0x396D010
	0x0396D000 B 0x396D010
	0x0396D004 B 0x396D010
	0x0396D008 B 0x396D010
	0x0396D00C B 0x396D014
	0x0396D010 LDR X29, [X31 + 0x38]
	0x0396D014 MOV X23, X1
	0x0396D018 MOV X20, X0
	0x0396D01C CMP W23, 0x1
	0x0396D020 B.NE 0x396D6A4
	0x0396D024 MOV X0, X20
	0x0396D028 BL 0x3EB1AD0
	0x0396D02C LDR X19, [X0]
	0x0396D030 BL 0x3EB1AE0
	0x0396D034 MOV W20, W31
	0x0396D038 B 0x396CA2C
	0x0396D03C B 0x396D0B0
	0x0396D040 B 0x396D0B0
	0x0396D044 B 0x396D0B0
	0x0396D048 B 0x396D0B0
	0x0396D04C B 0x396D0B0
	0x0396D050 B 0x396D0B0
	0x0396D054 B 0x396D0B0
	0x0396D058 B 0x396D0B0
	0x0396D05C B 0x396D0B0
	0x0396D060 B 0x396D0B0
	0x0396D064 B 0x396D0B0
	0x0396D068 B 0x396D0B0
	0x0396D06C B 0x396D0B0
	0x0396D070 B 0x396D0B0
	0x0396D074 B 0x396D0B0
	0x0396D078 B 0x396D0B0
	0x0396D07C B 0x396D0B0
	0x0396D080 B 0x396D0B0
	0x0396D084 B 0x396D0B0
	0x0396D088 B 0x396D0B0
	0x0396D08C B 0x396D0B0
	0x0396D090 B 0x396D0B0
	0x0396D094 B 0x396D0B0
	0x0396D098 B 0x396D0B0
	0x0396D09C B 0x396D0B0
	0x0396D0A0 B 0x396D0B0
	0x0396D0A4 B 0x396D0B0
	0x0396D0A8 B 0x396D0B0
	0x0396D0AC B 0x396D0B0
	0x0396D0B0 MOV X23, X1
	0x0396D0B4 MOV X20, X0
	0x0396D0B8 CMP W23, 0x1
	0x0396D0BC B.NE 0x396D650
	0x0396D0C0 MOV X0, X20
	0x0396D0C4 BL 0x3EB1AD0
	0x0396D0C8 LDR X19, [X0]
	0x0396D0CC BL 0x3EB1AE0
	0x0396D0D0 B 0x396CDEC
	0x0396D0D4 MOV X0, X31
	0x0396D0D8 ADD X31, X31, 0x270
	0x0396D0DC LDP X20, X19, [X31 + 0x90]
	0x0396D0E0 LDP X22, X21, [X31 + 0x80]
	0x0396D0E4 LDP X24, X23, [X31 + 0x70]
	0x0396D0E8 LDP X26, X25, [X31 + 0x60]
	0x0396D0EC LDP X28, X27, [X31 + 0x50]
	0x0396D0F0 LDP X29, X30, [X31 + 0x40]
	0x0396D0F4 LDP D9, D8, [X31 + 0x30]
	0x0396D0F8 LDP D11, D10, [X31 + 0x20]
	0x0396D0FC LDP D13, D12, [X31 + 0x10]
	0x0396D100 LDP D15, D14, [X31], #0xA0
	0x0396D104 RET
	0x0396D108 ADRP X8, 0x7E2000
	0x0396D10C LDR X8, [X8 + 0xDF0]
	0x0396D110 ADD X0, X31, 0x210
	0x0396D114 LDR X1, [X8]
	0x0396D118 BL 0x2BC434C
	0x0396D11C CBZ X26, 0x396D714
	0x0396D120 ADRP X8, 0x7E2000
	0x0396D124 LDR X8, [X8 + 0xDA8]
	0x0396D128 MOV X0, X26
	0x0396D12C LDR X1, [X8]
	0x0396D130 ADD X8, X31, 0x80
	0x0396D134 BL 0x29F4E88
	0x0396D138 LDP V0, V1, [X31 + 0x80]
	0x0396D13C ADRP X24, 0x7E2000
	0x0396D140 ADRP X20, 0x786000
	0x0396D144 ADRP X10, 0xFFFFFFFFFD17D000
	0x0396D148 ADRP X29, 0x7B1000
	0x0396D14C ADRP X26, 0x7B1000
	0x0396D150 LDP V2, V3, [X31 + 0xA0]
	0x0396D154 LDR X24, [X24 + 0xE00]
	0x0396D158 LDR X20, [X20 + 0x5A8]
	0x0396D15C LDR X29, [X29 + 0xB50]
	0x0396D160 LDR X26, [X26 + 0xB28]
	0x0396D164 STP V0, V1, [X31 + 0x160]
	0x0396D168 LDR V0, [X10 + 0x448]
	0x0396D16C ADRP X9, 0xFFFFFFFFFD17C000
	0x0396D170 ADRP X11, 0xFFFFFFFFFD17D000
	0x0396D174 LDR V4, [X9 + 0xFE8]
	0x0396D178 STR S0, [X31 + 0x60]
	0x0396D17C LDR V0, [X11 + 0x104]
	0x0396D180 ADRP X8, 0xFFFFFFFFFD17D000
	0x0396D184 STR S4, [X31 + 0x78]
	0x0396D188 STP V2, V3, [X31 + 0x180]
	0x0396D18C STR S0, [X31 + 0x70]
	0x0396D190 ADRP X25, 0x7B1000
	0x0396D194 LDR V12, [X8 + 0x17C]
	0x0396D198 LDR X25, [X25 + 0xB18]
	0x0396D19C ADRP X27, 0xA6B000
	0x0396D1A0 MOVZ W28, 0x1
	0x0396D1A4 LDR X1, [X24]
	0x0396D1A8 ADD X0, X31, 0x160
	0x0396D1AC BL 0x2BEF764
	0x0396D1B0 TBZ X0, 0x0, 0x396D444
	0x0396D1B4 LDR X19, [X31 + 0x190]
	0x0396D1B8 CBZ X19, 0x396D708
	0x0396D1BC LDR V10, [X31 + 0x188]
	0x0396D1C0 LDR V8, [X31 + 0x18C]
	0x0396D1C4 LDR V14, [X31 + 0x184]
	0x0396D1C8 LDR V9, [X31 + 0x180]
	0x0396D1CC LDR V11, [X31 + 0x17C]
	0x0396D1D0 LDR V13, [X31 + 0x178]
	0x0396D1D4 LDRB W8, [X27 + 0x785]
	0x0396D1D8 LDR V15, [X19 + 0x18]
	0x0396D1DC CBNZ W8, 0x396D1EC
	0x0396D1E0 MOV X0, X20
	0x0396D1E4 BL 0x1C16CF4
	0x0396D1E8 STRB W28, [X27 + 0x785]
	0x0396D1EC LDR X0, [X20]
	0x0396D1F0 LDR W8, [X0 + 0xE0]
	0x0396D1F4 CBNZ W8, 0x396D1FC
	0x0396D1F8 BL 0x1C16DFC
	0x0396D1FC SCVTF S2, S15
	0x0396D200 FDIV S0, S13, S2
	0x0396D204 FDIV S1, S11, S2
	0x0396D208 FDIV S2, S9, S2
	0x0396D20C FMUL S3, S0, S0
	0x0396D210 FMUL S4, S1, S1
	0x0396D214 FADD S3, S3, S4
	0x0396D218 FMUL S4, S2, S2
	0x0396D21C FADD S3, S4, S3
	0x0396D220 FSQRT S3, S3
	0x0396D224 FCMP S3, S12
	0x0396D228 B.LE 0x396D23C
	0x0396D22C FDIV S11, S0, S3
	0x0396D230 FDIV S13, S1, S3
	0x0396D234 FDIV S15, S2, S3
	0x0396D238 B 0x396D274
	0x0396D23C ADRP X8, 0xA6B000
	0x0396D240 LDRB W8, [X8 + 0x783]
	0x0396D244 CBNZ W8, 0x396D25C
	0x0396D248 ADRP X0, 0x786000
	0x0396D24C LDR X0, [X0 + 0x5A0]
	0x0396D250 BL 0x1C16CF4
	0x0396D254 ADRP X8, 0xA6B000
	0x0396D258 STRB W28, [X8 + 0x783]
	0x0396D25C ADRP X8, 0x786000
	0x0396D260 LDR X8, [X8 + 0x5A0]
	0x0396D264 LDR X8, [X8]
	0x0396D268 LDR X8, [X8 + 0xB8]
	0x0396D26C LDP S11, S13, [X8]
	0x0396D270 LDR V15, [X8 + 0x8]
	0x0396D274 LDR W8, [X31 + 0x14]
	0x0396D278 FMOV S9, 1
	0x0396D27C TBZ X8, 0x0, 0x396D350
	0x0396D280 ADRP X8, 0xA6B000
	0x0396D284 LDRB W8, [X8 + 0xA24]
	0x0396D288 CBNZ W8, 0x396D29C
	0x0396D28C MOV X0, X20
	0x0396D290 BL 0x1C16CF4
	0x0396D294 ADRP X8, 0xA6B000
	0x0396D298 STRB W28, [X8 + 0xA24]
	0x0396D29C LDR X0, [X20]
	0x0396D2A0 LDR W8, [X0 + 0xE0]
	0x0396D2A4 CBNZ W8, 0x396D2AC
	0x0396D2A8 BL 0x1C16DFC
	0x0396D2AC FMUL S0, S11, S11
	0x0396D2B0 FMUL S1, S13, S13
	0x0396D2B4 FMUL S3, S14, S14
	0x0396D2B8 FMUL S4, S10, S10
	0x0396D2BC FMUL S2, S15, S15
	0x0396D2C0 FMUL S5, S8, S8
	0x0396D2C4 FADD S0, S0, S1
	0x0396D2C8 FADD S1, S3, S4
	0x0396D2CC FADD S0, S2, S0
	0x0396D2D0 FADD S1, S5, S1
	0x0396D2D4 FMUL S0, S1, S0
	0x0396D2D8 LDR V1, [X31 + 0x78]
	0x0396D2DC FSQRT S0, S0
	0x0396D2E0 FCMP S0, S1
	0x0396D2E4 FMOV S1, W31
	0x0396D2E8 B.MI 0x396D33C
	0x0396D2EC LDR X0, [X20]
	0x0396D2F0 FMUL S1, S14, S11
	0x0396D2F4 FMUL S2, S10, S13
	0x0396D2F8 FADD S1, S1, S2
	0x0396D2FC FMUL S2, S8, S15
	0x0396D300 FADD S1, S2, S1
	0x0396D304 LDR W8, [X0 + 0xE0]
	0x0396D308 FDIV S0, S1, S0
	0x0396D30C FMOV S1, 1
	0x0396D310 FMOV S2, -1
	0x0396D314 FMIN S1, S0, S1
	0x0396D318 FCMP S0, S2
	0x0396D31C FCSEL S8, S1, S2, PL
	0x0396D320 CBNZ W8, 0x396D328
	0x0396D324 BL 0x1C16DFC
	0x0396D328 FCVT S0, S8
	0x0396D32C BL 0x3EB1B80
	0x0396D330 LDR V1, [X31 + 0x60]
	0x00000000 INVALID
	0x0396D338 FMUL S1, S0, S1
	0x0396D33C LDR V0, [X31 + 0x70]
	0x0396D340 FMUL S0, S1, S0
	0x0396D344 MOV X0, X31
	0x0396D348 BL 0x3908F08
	0x0396D34C MOV V9.16B, V0.16B
	0x0396D350 LDR X1, [X29]
	0x0396D354 ADD X8, X31, 0x80
	0x0396D358 MOV X0, X19
	0x0396D35C BL 0x2FDD2BC
	0x0396D360 LDR V0, [X31 + 0x10]
	0x0396D364 LDR V1, [X31 + 0x8]
	0x0396D368 LDR X8, [X31 + 0x90]
	0x0396D36C FMUL S0, S9, S0
	0x0396D370 FMUL S8, S11, S0
	0x0396D374 FMUL S9, S13, S0
	0x0396D378 FMUL S10, S15, S0
	0x0396D37C STR V1, [X31 + 0x14]
	0x0396D380 STR X8, [X31 + 0x150]
	0x0396D384 LDR X1, [X26]
	0x0396D388 ADD X0, X31, 0x140
	0x0396D38C BL 0x2BBDDA0
	0x0396D390 TBZ X0, 0x0, 0x396D3D4
	0x0396D394 LDR X0, [X31 + 0x38]
	0x0396D398 CBZ X0, 0x396D3FC
	0x0396D39C ADRP X8, 0x7E2000
	0x0396D3A0 LDR W1, [X31 + 0x150]
	0x0396D3A4 LDR X8, [X8 + 0x1D0]
	0x0396D3A8 LDR X2, [X8]
	0x0396D3AC BL 0x301BCCC
	0x0396D3B0 CBZ X0, 0x396D404
	0x0396D3B4 LDP S0, S1, [X0 + 0x10]
	0x0396D3B8 LDR V2, [X0 + 0x18]
	0x0396D3BC FADD S0, S8, S0
	0x0396D3C0 FADD S1, S9, S1
	0x0396D3C4 FADD S2, S10, S2
	0x0396D3C8 MOV X1, X31
	0x0396D3CC BL 0x393D8A8
	0x0396D3D0 B 0x396D384
	0x0396D3D4 MOV X23, X31
	0x0396D3D8 MOVZ W19, 0x16
	0x0396D3DC LDR X1, [X25]
	0x0396D3E0 ADD X0, X31, 0x140
	0x0396D3E4 BL 0x2BBDD9C
	0x0396D3E8 CBNZ X23, 0x396D70C
	0x0396D3EC CMP W19, 0x16
	0x0396D3F0 B.EQ 0x396D1A4
	0x0396D3F4 CBZ W19, 0x396D1A4
	0x0396D3F8 B 0x396D638
	0x0396D3FC BL 0x1C16F20
	0x0396D400 B 0x396D730
	0x0396D404 BL 0x1C16F20
	0x0396D408 B 0x396D730
	0x0396D40C B 0x396D41C
	0x0396D410 B 0x396D41C
	0x0396D414 B 0x396D41C
	0x0396D418 B 0x396D41C
	0x0396D41C MOV X19, X1
	0x0396D420 CMP W19, 0x1
	0x0396D424 STR X0, [X31 + 0x50]
	0x0396D428 B.NE 0x396D6C8
	0x0396D42C LDR X0, [X31 + 0x50]
	0x0396D430 BL 0x3EB1AD0
	0x0396D434 LDR X23, [X0]
	0x0396D438 BL 0x3EB1AE0
	0x0396D43C MOV W19, W31
	0x0396D440 B 0x396D3DC
	0x0396D444 ADRP X8, 0x7E2000
	0x0396D448 LDR X8, [X8 + 0xDE8]
	0x0396D44C ADD X0, X31, 0x160
	0x0396D450 LDR X1, [X8]
	0x0396D454 BL 0x2BEF8A0
	0x0396D458 LDP X27, X0, [X31 + 0x20]
	0x0396D45C LDR X26, [X31 + 0x38]
	0x0396D460 CBZ X0, 0x396D714
	0x0396D464 ADRP X8, 0x7E2000
	0x0396D468 LDR X8, [X8 + 0x880]
	0x0396D46C LDR X1, [X8]
	0x0396D470 ADD X8, X31, 0x80
	0x0396D474 BL 0x2A0A71C
	0x0396D478 LDP V0, V1, [X31 + 0x80]
	0x0396D47C ADRP X24, 0x7E2000
	0x0396D480 LDR X24, [X24 + 0x890]
	0x0396D484 ADRP X25, 0x7E2000
	0x0396D488 STP V0, V1, [X31 + 0x120]
	0x0396D48C LDR X25, [X25 + 0xE60]
	0x0396D490 LDR X1, [X24]
	0x0396D494 ADD X0, X31, 0x120
	0x0396D498 BL 0x2BF39B0
	0x0396D49C TBZ X0, 0x0, 0x396D4FC
	0x0396D4A0 CBZ X26, 0x396D704
	0x0396D4A4 ADRP X8, 0x7E2000
	0x0396D4A8 LDR X19, [X31 + 0x130]
	0x0396D4AC LDR X8, [X8 + 0x1D0]
	0x0396D4B0 UBFM X1, X19, 0x20, 0x3F
	0x0396D4B4 LDR X2, [X8]
	0x0396D4B8 MOV X0, X26
	0x0396D4BC BL 0x301BCCC
	0x0396D4C0 ADRP X8, 0x7E1000
	0x0396D4C4 LDR X8, [X8 + 0x20]
	0x0396D4C8 MOV X23, X0
	0x0396D4CC LDR X0, [X8]
	0x0396D4D0 BL 0x1C16F10
	0x0396D4D4 MOV X20, X0
	0x0396D4D8 MOV X1, X23
	0x0396D4DC MOV X2, X31
	0x0396D4E0 BL 0x393DFBC
	0x0396D4E4 LDR X3, [X25]
	0x0396D4E8 MOV X0, X26
	0x0396D4EC MOV W1, W19
	0x0396D4F0 MOV X2, X20
	0x0396D4F4 BL 0x301BD20
	0x0396D4F8 B 0x396D490
	0x0396D4FC ADRP X8, 0x7E2000
	0x0396D500 LDR X8, [X8 + 0x888]
	0x0396D504 ADD X0, X31, 0x120
	0x0396D508 LDR X1, [X8]
	0x0396D50C BL 0x2BF3AB0
	0x0396D510 MOV X0, X27
	0x0396D514 MOV X1, X26
	0x0396D518 MOV W2, W31
	0x0396D51C MOV X3, X31
	0x0396D520 BL 0x3916CF4
	0x0396D524 MOV X0, X27
	0x0396D528 MOV X1, X31
	0x0396D52C BL 0x39140C8
	0x0396D530 LDR X8, [X31 + 0x30]
	0x0396D534 CBZ X8, 0x396D714
	0x0396D538 ADRP X9, 0x7E1000
	0x0396D53C LDR W8, [X8 + 0x18]
	0x0396D540 LDR X9, [X9 + 0x3F0]
	0x0396D544 MOV W23, W0
	0x0396D548 ADD W24, W8, W23
	0x0396D54C LDR X0, [X9]
	0x0396D550 MOV W1, W24
	0x0396D554 BL 0x1C16D6C
	0x0396D558 LDR X8, [X27 + 0x28]
	0x0396D55C MOV X19, X0
	0x0396D560 MOV W1, W31
	0x0396D564 MOV X2, X19
	0x0396D568 MOV X0, X8
	0x0396D56C MOV W3, W31
	0x0396D570 MOV W4, W23
	0x0396D574 MOV X5, X31
	0x0396D578 BL 0x339FCE8
	0x0396D57C CMP W23, W24
	0x0396D580 B.GE 0x396D5D8
	0x0396D584 ADRP X26, 0x7E1000
	0x0396D588 LDR X26, [X26 + 0xC48]
	0x0396D58C SXTW X8, W24
	0x0396D590 ADD X9, X19, W23, 0x3, SXTW
	0x0396D594 MOV X20, X31
	0x0396D598 MOV W24, W23
	0x0396D59C ADD X25, X9, 0x20
	0x0396D5A0 SUB X23, X8, W23, SXTW
	0x0396D5A4 LDR X2, [X26]
	0x0396D5A8 LDR X0, [X31 + 0x30]
	0x0396D5AC MOV W1, W20
	0x0396D5B0 BL 0x301BCCC
	0x0396D5B4 CBZ X19, 0x396D714
	0x0396D5B8 LDR W8, [X19 + 0x18]
	0x0396D5BC ADD X9, X24, X20
	0x0396D5C0 CMP W9, W8
	0x0396D5C4 B.CS 0x396D718
	0x0396D5C8 STR X0, [X25, X20, LSL #3]
	0x0396D5CC ADD X20, X20, 0x1
	0x0396D5D0 CMP X23, X20
	0x0396D5D4 B.NE 0x396D5A4
	0x0396D5D8 MOV X0, X27
	0x0396D5DC MOV X1, X19
	0x0396D5E0 MOV X2, X31
	0x0396D5E4 BL 0x39159C8
	0x0396D5E8 MOV X0, X27
	0x0396D5EC MOV X1, X21
	0x0396D5F0 MOV X2, X31
	0x0396D5F4 BL 0x3916234
	0x0396D5F8 MOV X0, X27
	0x0396D5FC MOV X1, X22
	0x0396D600 MOV X2, X31
	0x0396D604 BL 0x391634C
	0x0396D608 ADRP X8, 0x7E1000
	0x0396D60C LDR X8, [X8 + 0xC38]
	0x0396D610 LDR X0, [X31 + 0x30]
	0x0396D614 LDR X1, [X8]
	0x0396D618 BL 0x301DDC4
	0x0396D61C B 0x396D0D8
	0x0396D620 ADRP X8, 0x7E2000
	0x0396D624 LDR X8, [X8 + 0xDF0]
	0x0396D628 ADD X0, X31, 0x210
	0x0396D62C LDR X1, [X8]
	0x0396D630 BL 0x2BC434C
	0x0396D634 B 0x396D64C
	0x0396D638 ADRP X8, 0x7E2000
	0x0396D63C LDR X8, [X8 + 0xDE8]
	0x0396D640 ADD X0, X31, 0x160
	0x0396D644 LDR X1, [X8]
	0x0396D648 BL 0x2BEF8A0
	0x0396D64C B 0x396D0D8
	0x0396D650 MOV X19, X31
	0x0396D654 ADRP X8, 0x7E2000
	0x0396D658 LDR X8, [X8 + 0xDD8]
	0x0396D65C LDR X1, [X8]
	0x0396D660 ADD X0, X31, 0x1C0
	0x0396D664 BL 0x2BC3C60
	0x0396D668 CBNZ X19, 0x396D728
	0x0396D66C CMP W23, 0x1
	0x0396D670 B.NE 0x396D71C
	0x0396D674 MOV X0, X20
	0x0396D678 BL 0x3EB1AD0
	0x0396D67C LDR X19, [X0]
	0x0396D680 BL 0x3EB1AE0
	0x0396D684 ADRP X8, 0x7E2000
	0x0396D688 LDR X8, [X8 + 0xDF0]
	0x0396D68C ADD X0, X31, 0x210
	0x0396D690 LDR X1, [X8]
	0x0396D694 BL 0x2BC434C
	0x0396D698 CBZ X19, 0x396D11C
	0x0396D69C MOV X0, X19
	0x0396D6A0 BL 0x1C16F18
	0x0396D6A4 MOV X19, X31
	0x0396D6A8 ADRP X8, 0x7E2000
	0x0396D6AC LDR X8, [X8 + 0xDE0]
	0x0396D6B0 LDR X1, [X8]
	0x0396D6B4 ADD X0, X31, 0x1E0
	0x0396D6B8 BL 0x2BEC024
	0x0396D6BC CBZ X19, 0x396D66C
	0x0396D6C0 MOV X0, X19
	0x0396D6C4 BL 0x1C16F18
	0x0396D6C8 MOV X23, X31
	0x0396D6CC LDR X1, [X25]
	0x0396D6D0 ADD X0, X31, 0x140
	0x0396D6D4 BL 0x2BBDD9C
	0x0396D6D8 CBZ X23, 0x396D7AC
	0x0396D6DC MOV X0, X23
	0x0396D6E0 BL 0x1C16F18
	0x0396D6E4 BL 0x1C16F20
	0x0396D6E8 BL 0x1C16F20
	0x0396D6EC BL 0x1C16F20
	0x0396D6F0 MOV X0, X19
	0x0396D6F4 BL 0x1C16F18
	0x0396D6F8 BL 0x1C16F20
	0x0396D6FC MOV X0, X19
	0x0396D700 BL 0x1C16F18
	0x0396D704 BL 0x1C16F20
	0x0396D708 BL 0x1C16F20
	0x0396D70C MOV X0, X23
	0x0396D710 BL 0x1C16F18
	0x0396D714 BL 0x1C16F20
	0x0396D718 BL 0x1C16F28
	0x0396D71C STR X20, [X31 + 0x50]
	0x0396D720 MOV X19, X31
	0x0396D724 B 0x396D740
	0x0396D728 MOV X0, X19
	0x0396D72C BL 0x1C16F18
	0x0396D730 MOV X19, X1
	0x0396D734 STR X0, [X31 + 0x50]
	0x0396D738 B 0x396D6CC
	0x0396D73C STR X0, [X31 + 0x50]
	0x0396D740 ADRP X8, 0x7E2000
	0x0396D744 LDR X8, [X8 + 0xDF0]
	0x0396D748 LDR X1, [X8]
	0x0396D74C ADD X0, X31, 0x210
	0x0396D750 BL 0x2BC434C
	0x0396D754 CBNZ X19, 0x396D760
	0x0396D758 LDR X0, [X31 + 0x50]
	0x0396D75C BL 0x1D2C690
	0x0396D760 MOV X0, X19
	0x0396D764 BL 0x1C16F18
	0x0396D768 MOV X23, X1
	0x0396D76C MOV X20, X0
	0x0396D770 B 0x396D6A8
	0x0396D774 MOV X23, X1
	0x0396D778 MOV X20, X0
	0x0396D77C B 0x396D654
	0x0396D780 B 0x396D7A4
	0x0396D784 B 0x396D7A4
	0x0396D788 B 0x396D7A4
	0x0396D78C B 0x396D7A4
	0x0396D790 B 0x396D7A4
	0x0396D794 B 0x396D7A4
	0x0396D798 B 0x396D7A4
	0x0396D79C B 0x396D84C
	0x0396D7A0 B 0x396D84C
	0x0396D7A4 MOV X19, X1
	0x0396D7A8 STR X0, [X31 + 0x50]
	0x0396D7AC CMP W19, 0x1
	0x0396D7B0 B.NE 0x396D7E0
	0x0396D7B4 LDR X0, [X31 + 0x50]
	0x0396D7B8 BL 0x3EB1AD0
	0x0396D7BC LDR X19, [X0]
	0x0396D7C0 BL 0x3EB1AE0
	0x0396D7C4 ADRP X8, 0x7E2000
	0x0396D7C8 LDR X8, [X8 + 0xDE8]
	0x0396D7CC ADD X0, X31, 0x160
	0x0396D7D0 LDR X1, [X8]
	0x0396D7D4 BL 0x2BEF8A0
	0x0396D7D8 CBZ X19, 0x396D458
	0x0396D7DC B 0x396D69C
	0x0396D7E0 MOV X19, X31
	0x0396D7E4 B 0x396D7EC
	0x0396D7E8 STR X0, [X31 + 0x50]
	0x0396D7EC ADRP X8, 0x7E2000
	0x0396D7F0 LDR X8, [X8 + 0xDE8]
	0x0396D7F4 LDR X1, [X8]
	0x0396D7F8 ADD X0, X31, 0x160
	0x0396D7FC BL 0x2BEF8A0
	0x0396D800 CBZ X19, 0x396D758
	0x0396D804 MOV X0, X19
	0x0396D808 BL 0x1C16F18
	0x0396D80C B 0x396D84C
	0x0396D810 B 0x396D840
	0x0396D814 B 0x396D840
	0x0396D818 B 0x396D840
	0x0396D81C B 0x396D840
	0x0396D820 B 0x396D840
	0x0396D824 B 0x396D840
	0x0396D828 B 0x396D840
	0x0396D82C B 0x396D840
	0x0396D830 B 0x396D840
	0x0396D834 B 0x396D840
	0x0396D838 B 0x396D840
	0x0396D83C B 0x396D840
	0x0396D840 MOV X23, X1
	0x0396D844 MOV X20, X0
	0x0396D848 B 0x396D66C
	0x0396D84C CMP W1, 0x1
	0x0396D850 STR X0, [X31 + 0x50]
	0x0396D854 B.NE 0x396D88C
	0x0396D858 LDR X0, [X31 + 0x50]
	0x0396D85C BL 0x3EB1AD0
	0x0396D860 LDR X19, [X0]
	0x0396D864 BL 0x3EB1AE0
	0x0396D868 ADRP X8, 0x7E2000
	0x0396D86C LDR X8, [X8 + 0x888]
	0x0396D870 ADD X0, X31, 0x120
	0x0396D874 LDR X1, [X8]
	0x0396D878 BL 0x2BF3AB0
	0x0396D87C LDR X27, [X31 + 0x20]
	0x0396D880 LDR X26, [X31 + 0x38]
	0x0396D884 CBZ X19, 0x396D510
	0x0396D888 B 0x396D69C
	0x0396D88C MOV X19, X31
	0x0396D890 B 0x396D898
	0x0396D894 STR X0, [X31 + 0x50]
	0x0396D898 ADRP X8, 0x7E2000
	0x0396D89C LDR X8, [X8 + 0x888]
	0x0396D8A0 LDR X1, [X8]
	0x0396D8A4 ADD X0, X31, 0x120
	0x0396D8A8 BL 0x2BF3AB0
	0x0396D8AC CBZ X19, 0x396D758
	0x0396D8B0 MOV X0, X19
	0x0396D8B4 BL 0x1C16F18
	0x0396D8B8 BL 0x1990590
	0x0396D8BC SUB X31, X31, 0x1D0
	0x0396D8C0 STP D13, D12, [X31 + 0x140]
	0x0396D8C4 STP D11, D10, [X31 + 0x150]
	0x0396D8C8 STP D9, D8, [X31 + 0x160]
	0x0396D8CC STP X29, X30, [X31 + 0x170]
	0x0396D8D0 STP X28, X27, [X31 + 0x180]
	0x0396D8D4 STP X26, X25, [X31 + 0x190]
	0x0396D8D8 STP X24, X23, [X31 + 0x1A0]
	0x0396D8DC STP X22, X21, [X31 + 0x1B0]
	0x0396D8E0 STP X20, X19, [X31 + 0x1C0]
	0x0396D8E4 STR W2, [X31 + 0x4C]
	0x0396D8E8 STR D0, [X31 + 0x60]
	0x0396D8EC ADRP X21, 0xA74000
	0x0396D8F0 ADRP X22, 0x786000
	0x0396D8F4 LDRB W8, [X21 + 0x9ED]
	0x0396D8F8 LDR X22, [X22 + 0x598]
	0x0396D8FC MOV W23, W3
	0x0396D900 MOV X20, X1
	0x0396D904 MOV X19, X0
	0x0396D908 TBNZ X8, 0x0, 0x396DA1C
	0x0396D90C ADRP X0, 0x78B000
	0x0396D910 LDR X0, [X0 + 0x140]
	0x0396D914 BL 0x1C16CF4
	0x0396D918 ADRP X0, 0x7E1000
	0x0396D91C LDR X0, [X0 + 0x560]
	0x0396D920 BL 0x1C16CF4
	0x0396D924 ADRP X0, 0x786000
	0x0396D928 LDR X0, [X0 + 0xE00]
	0x0396D92C BL 0x1C16CF4
	0x0396D930 ADRP X0, 0x7E0000
	0x0396D934 LDR X0, [X0 + 0xC88]
	0x0396D938 BL 0x1C16CF4
	0x0396D93C ADRP X0, 0x7E0000
	0x0396D940 LDR X0, [X0 + 0xC90]
	0x0396D944 BL 0x1C16CF4
	0x0396D948 ADRP X0, 0x786000
	0x0396D94C LDR X0, [X0 + 0xE18]
	0x0396D950 BL 0x1C16CF4
	0x0396D954 ADRP X0, 0x787000
	0x0396D958 LDR X0, [X0 + 0xE58]
	0x0396D95C BL 0x1C16CF4
	0x0396D960 ADRP X0, 0x7E0000
	0x0396D964 LDR X0, [X0 + 0xE10]
	0x0396D968 BL 0x1C16CF4
	0x0396D96C ADRP X0, 0x7E0000
	0x0396D970 LDR X0, [X0 + 0xD68]
	0x0396D974 BL 0x1C16CF4
	0x0396D978 ADRP X0, 0x7E2000
	0x0396D97C LDR X0, [X0 + 0xB00]
	0x0396D980 BL 0x1C16CF4
	0x0396D984 ADRP X0, 0x7E1000
	0x0396D988 LDR X0, [X0 + 0xA38]
	0x0396D98C BL 0x1C16CF4
	0x0396D990 ADRP X0, 0x7E0000
	0x0396D994 LDR X0, [X0 + 0xD70]
	0x0396D998 BL 0x1C16CF4
	0x0396D99C ADRP X0, 0x7E1000
	0x0396D9A0 LDR X0, [X0 + 0xFE0]
	0x0396D9A4 BL 0x1C16CF4
	0x0396D9A8 ADRP X0, 0x7E1000
	0x0396D9AC LDR X0, [X0 + 0xC48]
	0x0396D9B0 BL 0x1C16CF4
	0x0396D9B4 ADRP X0, 0x7E1000
	0x0396D9B8 LDR X0, [X0 + 0xFE8]
	0x0396D9BC BL 0x1C16CF4
	0x0396D9C0 ADRP X0, 0x7E0000
	0x0396D9C4 LDR X0, [X0 + 0xD78]
	0x0396D9C8 BL 0x1C16CF4
	0x0396D9CC ADRP X0, 0x7E0000
	0x0396D9D0 LDR X0, [X0 + 0xDF0]
	0x0396D9D4 BL 0x1C16CF4
	0x0396D9D8 ADRP X0, 0x786000
	0x0396D9DC LDR X0, [X0 + 0x598]
	0x0396D9E0 BL 0x1C16CF4
	0x0396D9E4 ADRP X0, 0x7E2000
	0x0396D9E8 LDR X0, [X0 + 0x340]
	0x0396D9EC BL 0x1C16CF4
	0x0396D9F0 ADRP X0, 0x7E0000
	0x0396D9F4 LDR X0, [X0 + 0xA88]
	0x0396D9F8 BL 0x1C16CF4
	0x0396D9FC ADRP X0, 0x788000
	0x0396DA00 LDR X0, [X0 + 0x9B0]
	0x0396DA04 BL 0x1C16CF4
	0x0396DA08 ADRP X0, 0x7E1000
	0x0396DA0C LDR X0, [X0 + 0x48]
	0x0396DA10 BL 0x1C16CF4
	0x0396DA14 MOVZ W8, 0x1
	0x0396DA18 STRB W8, [X21 + 0x9ED]
	0x0396DA1C LDR X0, [X22]
	0x0396DA20 LDR W8, [X0 + 0xE0]
	0x0396DA24 CBNZ W8, 0x396DA2C
	0x0396DA28 BL 0x1C16DFC
	0x0396DA2C MOV X0, X19
	0x0396DA30 MOV X1, X31
	0x0396DA34 MOV X2, X31
	0x0396DA38 BL 0x3C3883C
	0x0396DA3C TBNZ X0, 0x0, 0x396E848
	0x0396DA40 CBZ X20, 0x396E868
	0x0396DA44 CBZ X19, 0x396E830
	0x0396DA48 ADRP X9, 0x7E0000
	0x0396DA4C ADRP X25, 0x7E0000
	0x0396DA50 LDR X9, [X9 + 0xD78]
	0x0396DA54 LDR X25, [X25 + 0xD70]
	0x0396DA58 LDR X8, [X19 + 0x30]
	0x0396DA5C ADRP X21, 0x7E0000
	0x0396DA60 LDR X0, [X9]
	0x0396DA64 ADRP X22, 0x7E1000
	0x0396DA68 STR X8, [X31 + 0x40]
	0x0396DA6C ADRP X24, 0x7E0000
	0x0396DA70 LDR X21, [X21 + 0xDF0]
	0x0396DA74 LDR X22, [X22 + 0xA38]
	0x0396DA78 LDR X24, [X24 + 0xC88]
	0x0396DA7C BL 0x1C16F10
	0x0396DA80 LDR X1, [X25]
	0x0396DA84 STR X0, [X31 + 0xC8]
	0x0396DA88 BL 0x2FB9738
	0x0396DA8C LDR X0, [X21]
	0x0396DA90 BL 0x1C16F10
	0x0396DA94 LDR X1, [X22]
	0x0396DA98 STR X0, [X31 + 0xC0]
	0x0396DA9C BL 0x301B7C4
	0x0396DAA0 LDR X8, [X20]
	0x0396DAA4 LDR X1, [X24]
	0x0396DAA8 LDRH W9, [X8 + 0x12E]
	0x0396DAAC CBZ X9, 0x396DAD0
	0x0396DAB0 LDR X10, [X8 + 0xB0]
	0x0396DAB4 ADD X10, X10, 0x8
	0x0396DAB8 LDUR X11, [X10 - 0x8]
	0x0396DABC CMP X11, X1
	0x0396DAC0 B.EQ 0x396DAE0
	0x0396DAC4 SUBS X9, X9, 0x1
	0x0396DAC8 ADD X10, X10, 0x10
	0x0396DACC B.NE 0x396DAB8
	0x0396DAD0 MOV X0, X20
	0x0396DAD4 MOV W2, W31
	0x0396DAD8 BL 0x1C5C788
	0x0396DADC B 0x396DAEC
	0x0396DAE0 LDRSW X9, [X10]
	0x0396DAE4 ADD X8, X8, X9, 0x4, LSL
	0x0396DAE8 ADD X0, X8, 0x138
	0x0396DAEC LDP X8, X1, [X0]
	0x0396DAF0 MOV X0, X20
	0x0396DAF4 BLR X8
	0x0396DAF8 MOV X20, X0
	0x0396DAFC CBZ X0, 0x396E8B0
	0x0396DB00 ADRP X26, 0x786000
	0x0396DB04 ADRP X27, 0x7E0000
	0x0396DB08 LDR X26, [X26 + 0xE18]
	0x0396DB0C LDR X27, [X27 + 0xC90]
	0x0396DB10 EOR W29, W23, 0x1
	0x0396DB14 LDR X8, [X20]
	0x0396DB18 LDR X1, [X26]
	0x0396DB1C LDRH W9, [X8 + 0x12E]
	0x0396DB20 CBZ X9, 0x396DB44
	0x0396DB24 LDR X10, [X8 + 0xB0]
	0x0396DB28 ADD X10, X10, 0x8
	0x0396DB2C LDUR X11, [X10 - 0x8]
	0x0396DB30 CMP X11, X1
	0x0396DB34 B.EQ 0x396DB54
	0x0396DB38 SUBS X9, X9, 0x1
	0x0396DB3C ADD X10, X10, 0x10
	0x0396DB40 B.NE 0x396DB2C
	0x0396DB44 MOV X0, X20
	0x0396DB48 MOV W2, W31
	0x0396DB4C BL 0x1C5C788
	0x0396DB50 B 0x396DB60
	0x0396DB54 LDRSW X9, [X10]
	0x0396DB58 ADD X8, X8, X9, 0x4, LSL
	0x0396DB5C ADD X0, X8, 0x138
	0x0396DB60 LDP X8, X1, [X0]
	0x0396DB64 MOV X0, X20
	0x0396DB68 BLR X8
	0x0396DB6C TBZ X0, 0x0, 0x396DD2C
	0x0396DB70 LDR X8, [X20]
	0x0396DB74 LDR X1, [X27]
	0x0396DB78 LDRH W9, [X8 + 0x12E]
	0x0396DB7C CBZ X9, 0x396DBA0
	0x0396DB80 LDR X10, [X8 + 0xB0]
	0x0396DB84 ADD X10, X10, 0x8
	0x0396DB88 LDUR X11, [X10 - 0x8]
	0x0396DB8C CMP X11, X1
	0x0396DB90 B.EQ 0x396DBB0
	0x0396DB94 SUBS X9, X9, 0x1
	0x0396DB98 ADD X10, X10, 0x10
	0x0396DB9C B.NE 0x396DB88
	0x0396DBA0 MOV X0, X20
	0x0396DBA4 MOV W2, W31
	0x0396DBA8 BL 0x1C5C788
	0x0396DBAC B 0x396DBBC
	0x0396DBB0 LDRSW X9, [X10]
	0x0396DBB4 ADD X8, X8, X9, 0x4, LSL
	0x0396DBB8 ADD X0, X8, 0x138
	0x0396DBBC LDP X8, X1, [X0]
	0x0396DBC0 MOV X0, X20
	0x0396DBC4 BLR X8
	0x0396DBC8 LDR X25, [X19 + 0x28]
	0x0396DBCC CBZ X25, 0x396E834
	0x0396DBD0 LDR W8, [X25 + 0x18]
	0x0396DBD4 MOV X24, X0
	0x0396DBD8 CMP W8, 0x1
	0x0396DBDC B.LT 0x396DC50
	0x0396DBE0 MOV W22, W31
	0x0396DBE4 MOV X23, X31
	0x0396DBE8 MOV W21, W31
	0x0396DBEC CMP W22, W8
	0x0396DBF0 B.CS 0x396E824
	0x0396DBF4 ADD X8, X25, W22, 0x3, SXTW
	0x0396DBF8 LDR X28, [X8 + 0x20]
	0x0396DBFC CBZ X28, 0x396E828
	0x0396DC00 MOV X0, X28
	0x0396DC04 MOV X1, X31
	0x0396DC08 BL 0x38FFA80
	0x0396DC0C MOV X1, X0
	0x0396DC10 MOV X0, X19
	0x0396DC14 MOV X2, X24
	0x0396DC18 MOV X3, X31
	0x0396DC1C BL 0x38FF694
	0x0396DC20 TBNZ X0, 0x1F, 0x396DC34
	0x0396DC24 ADD W21, W21, 0x1
	0x0396DC28 CMP W21, 0x1
	0x0396DC2C B.LE 0x396DC38
	0x0396DC30 B 0x396DC58
	0x0396DC34 MOV X28, X23
	0x0396DC38 LDR W8, [X25 + 0x18]
	0x0396DC3C ADD W22, W22, 0x1
	0x0396DC40 MOV X23, X28
	0x0396DC44 CMP W22, W8
	0x0396DC48 B.LT 0x396DBEC
	0x0396DC4C B 0x396DC58
	0x0396DC50 MOV X28, X31
	0x0396DC54 MOV W21, W31
	0x0396DC58 CMP W21, 0x1
	0x0396DC5C LDP X21, X0, [X31 + 0xC0]
	0x0396DC60 CSET W8, GT
	0x0396DC64 AND W8, W8, W29, 0x0
	0x0396DC68 TBNZ X8, 0x0, 0x396DB14
	0x0396DC6C CBZ X0, 0x396E840
	0x0396DC70 ADRP X9, 0x7E0000
	0x0396DC74 LDR W10, [X0 + 0x1C]
	0x0396DC78 LDR X8, [X0 + 0x10]
	0x0396DC7C LDR X9, [X9 + 0xD68]
	0x0396DC80 ADD W10, W10, 0x1
	0x0396DC84 LDR X9, [X9]
	0x0396DC88 STR W10, [X0 + 0x1C]
	0x0396DC8C CBZ X8, 0x396E838
	0x0396DC90 LDRSW X10, [X0 + 0x18]
	0x0396DC94 LDR W11, [X8 + 0x18]
	0x0396DC98 CMP W10, W11
	0x0396DC9C B.CS 0x396DCB4
	0x0396DCA0 ADD W9, W10, 0x1
	0x0396DCA4 ADD X8, X8, X10, 0x3, LSL
	0x0396DCA8 STR W9, [X0 + 0x18]
	0x0396DCAC STR X24, [X8 + 0x20]
	0x0396DCB0 B 0x396DCC8
	0x0396DCB4 LDR X8, [X9 + 0x20]
	0x0396DCB8 LDR X8, [X8 + 0xC0]
	0x0396DCBC LDR X2, [X8 + 0x70]
	0x0396DCC0 MOV X1, X24
	0x0396DCC4 BL 0x2FB9F30
	0x0396DCC8 CBZ X21, 0x396E844
	0x0396DCCC ADRP X9, 0x7E0000
	0x0396DCD0 LDR W10, [X21 + 0x1C]
	0x0396DCD4 LDR X8, [X21 + 0x10]
	0x0396DCD8 LDR X9, [X9 + 0xE10]
	0x0396DCDC ADD W10, W10, 0x1
	0x0396DCE0 LDR X9, [X9]
	0x0396DCE4 STR W10, [X21 + 0x1C]
	0x0396DCE8 CBZ X8, 0x396E83C
	0x0396DCEC LDRSW X10, [X21 + 0x18]
	0x0396DCF0 LDR W11, [X8 + 0x18]
	0x0396DCF4 CMP W10, W11
	0x0396DCF8 B.CS 0x396DD10
	0x0396DCFC ADD W9, W10, 0x1
	0x0396DD00 ADD X8, X8, X10, 0x3, LSL
	0x0396DD04 STR W9, [X21 + 0x18]
	0x0396DD08 STR X28, [X8 + 0x20]
	0x0396DD0C B 0x396DB14
	0x0396DD10 LDR X8, [X9 + 0x20]
	0x0396DD14 LDR X8, [X8 + 0xC0]
	0x0396DD18 LDR X2, [X8 + 0x70]
	0x0396DD1C MOV X0, X21
	0x0396DD20 MOV X1, X28
	0x0396DD24 BL 0x301BF90
	0x0396DD28 B 0x396DB14
	0x0396DD2C MOV X23, X31
	0x0396DD30 MOVZ W24, 0xF
	0x0396DD34 CBZ X20, 0x396DD98
	0x0396DD38 LDR X8, [X20]
	0x0396DD3C ADRP X10, 0x786000
	0x0396DD40 LDRH W9, [X8 + 0x12E]
	0x0396DD44 LDR X10, [X10 + 0xE00]
	0x0396DD48 LDR X1, [X10]
	0x0396DD4C CBZ X9, 0x396DD70
	0x0396DD50 LDR X10, [X8 + 0xB0]
	0x0396DD54 ADD X10, X10, 0x8
	0x0396DD58 LDUR X11, [X10 - 0x8]
	0x0396DD5C CMP X11, X1
	0x0396DD60 B.EQ 0x396DD80
	0x0396DD64 SUBS X9, X9, 0x1
	0x0396DD68 ADD X10, X10, 0x10
	0x0396DD6C B.NE 0x396DD58
	0x0396DD70 MOV X0, X20
	0x0396DD74 MOV W2, W31
	0x0396DD78 BL 0x1C5C788
	0x0396DD7C B 0x396DD8C
	0x0396DD80 LDRSW X9, [X10]
	0x0396DD84 ADD X8, X8, X9, 0x4, LSL
	0x0396DD88 ADD X0, X8, 0x138
	0x0396DD8C LDP X8, X1, [X0]
	0x0396DD90 MOV X0, X20
	0x0396DD94 BLR X8
	0x0396DD98 CBNZ X23, 0x396E8B4
	0x0396DD9C CMP W24, 0xF
	0x0396DDA0 B.EQ 0x396DDA8
	0x0396DDA4 CBNZ W24, 0x396E7F4
	0x0396DDA8 LDR X23, [X31 + 0xC8]
	0x0396DDAC CBZ X23, 0x396E830
	0x0396DDB0 LDR W8, [X23 + 0x18]
	0x0396DDB4 CMP W8, 0x0
	0x0396DDB8 B.LE 0x396E7F0
	0x0396DDBC LDR X27, [X19 + 0x58]
	0x0396DDC0 MOVZ W1, 0x40
	0x0396DDC4 MOV X0, X19
	0x0396DDC8 MOV X2, X31
	0x0396DDCC BL 0x39112BC
	0x0396DDD0 TBNZ X0, 0x0, 0x396DDE4
	0x0396DDD4 MOVZ W1, 0x4
	0x0396DDD8 MOV X0, X19
	0x0396DDDC MOV X2, X31
	0x0396DDE0 BL 0x3919D94
	0x0396DDE4 MOV X0, X19
	0x0396DDE8 MOV X1, X31
	0x0396DDEC BL 0x39170FC
	0x0396DDF0 ADRP X25, 0x787000
	0x0396DDF4 LDR W8, [X23 + 0x18]
	0x0396DDF8 LDR X25, [X25 + 0xE58]
	0x0396DDFC MOV X28, X0
	0x0396DE00 UBFM W1, W8, 0x1F, 0x1E
	0x0396DE04 LDR X0, [X25]
	0x0396DE08 BL 0x1C16D6C
	0x0396DE0C LDR W8, [X23 + 0x18]
	0x0396DE10 MOV X29, X0
	0x0396DE14 CMP W8, 0x1
	0x0396DE18 B.LT 0x396DE98
	0x0396DE1C ADRP X21, 0x7E1000
	0x0396DE20 LDR X21, [X21 + 0xFE8]
	0x0396DE24 MOV W22, W31
	0x0396DE28 MOV W20, W31
	0x0396DE2C LDR X2, [X21]
	0x0396DE30 MOV X0, X23
	0x0396DE34 MOV W1, W20
	0x0396DE38 BL 0x2FB9C40
	0x0396DE3C CBZ X29, 0x396E830
	0x0396DE40 LDR W8, [X29 + 0x18]
	0x0396DE44 CMP W22, W8
	0x0396DE48 B.CS 0x396E82C
	0x0396DE4C ADD X8, X29, W22, 0x2, SXTW
	0x0396DE50 STR W0, [X8 + 0x20]
	0x0396DE54 LDR X2, [X21]
	0x0396DE58 MOV X0, X23
	0x0396DE5C MOV W1, W20
	0x0396DE60 BL 0x2FB9C40
	0x0396DE64 LDR W9, [X29 + 0x18]
	0x0396DE68 ADD W8, W22, 0x1
	0x0396DE6C CMP W8, W9
	0x0396DE70 B.CS 0x396E82C
	0x0396DE74 ADD W9, W22, 0x1
	0x0396DE78 UBFM X10, X0, 0x20, 0x3F
	0x0396DE7C ADD X9, X29, W9, 0x2, SXTW
	0x0396DE80 STR W10, [X9 + 0x20]
	0x0396DE84 LDR W9, [X23 + 0x18]
	0x0396DE88 ADD W20, W20, 0x1
	0x0396DE8C ADD W22, W8, 0x1
	0x0396DE90 CMP W20, W9
	0x0396DE94 B.LT 0x396DE2C
	0x0396DE98 ADRP X21, 0x7E0000
	0x0396DE9C LDR X21, [X21 + 0xD78]
	0x0396DEA0 LDR X0, [X21]
	0x0396DEA4 BL 0x1C16F10
	0x0396DEA8 ADRP X20, 0x7E0000
	0x0396DEAC LDR X20, [X20 + 0xD70]
	0x0396DEB0 MOV X24, X0
	0x0396DEB4 LDR X1, [X20]
	0x0396DEB8 BL 0x2FB9738
	0x0396DEBC LDR X0, [X21]
	0x0396DEC0 BL 0x1C16F10
	0x0396DEC4 LDR X1, [X20]
	0x0396DEC8 MOV X26, X0
	0x0396DECC BL 0x2FB9738
	0x0396DED0 MOVZ W1, 0x20
	0x0396DED4 MOV X0, X19
	0x0396DED8 MOV X2, X31
	0x0396DEDC BL 0x39112BC
	0x0396DEE0 LDR W8, [X23 + 0x18]
	0x0396DEE4 STR W0, [X31 + 0x3C]
	0x0396DEE8 CMP W8, 0x1
	0x0396DEEC B.LT 0x396E698
	0x0396DEF0 LDR V0, [X31 + 0x6]
	0x0396DEF4 ADRP X8, 0xFFFFFFFFFD17D000
	0x0396DEF8 LDR V11, [X8 + 0x17C]
	0x0396DEFC MOV W22, W31
	0x0396DF00 UNIMPLEMENTED
	0x0396DF04 STP X27, X26, [X31 + 0x20]
	0x0396DF08 STR X28, [X31 + 0x30]
	0x0396DF0C STR X29, [X31 + 0x18]
	0x0396DF10 ADRP X8, 0x7E1000
	0x0396DF14 LDR X8, [X8 + 0xFE8]
	0x0396DF18 MOV X0, X23
	0x0396DF1C MOV W1, W22
	0x0396DF20 LDR X2, [X8]
	0x0396DF24 BL 0x2FB9C40
	0x0396DF28 MOV X23, X0
	0x0396DF2C LDR X0, [X31 + 0xC0]
	0x0396DF30 CBZ X0, 0x396E830
	0x0396DF34 ADRP X8, 0x7E1000
	0x0396DF38 LDR X8, [X8 + 0xC48]
	0x0396DF3C MOV W1, W22
	0x0396DF40 UBFM X20, X23, 0x20, 0x3F
	0x0396DF44 LDR X2, [X8]
	0x0396DF48 BL 0x301BCCC
	0x0396DF4C LDR W8, [X31 + 0x4C]
	0x0396DF50 MOV X21, X0
	0x0396DF54 TBZ X8, 0x0, 0x396DFD4
	0x0396DF58 MOV X0, X19
	0x0396DF5C MOV W1, W23
	0x0396DF60 MOV X2, X31
	0x0396DF64 BL 0x391B5D8
	0x0396DF68 LDR X9, [X31 + 0x40]
	0x0396DF6C CBZ X9, 0x396E830
	0x0396DF70 LDR W8, [X9 + 0x18]
	0x0396DF74 CMP W0, W8
	0x0396DF78 B.CS 0x396E82C
	0x0396DF7C ADD X8, X9, W0, 0x3, SXTW
	0x0396DF80 LDR X0, [X8 + 0x20]
	0x0396DF84 MOV X1, X29
	0x0396DF88 MOV X2, X28
	0x0396DF8C BL 0x396E998
	0x0396DF90 MOV X0, X19
	0x0396DF94 MOV W1, W20
	0x0396DF98 MOV X2, X31
	0x0396DF9C STR D0, [X31 + 0xA0]
	0x0396DFA0 STR D1, [X31 + 0x90]
	0x0396DFA4 MOV V9.16B, V2.16B
	0x0396DFA8 BL 0x391B5D8
	0x0396DFAC LDR X9, [X31 + 0x40]
	0x0396DFB0 LDR W8, [X9 + 0x18]
	0x0396DFB4 CMP W0, W8
	0x0396DFB8 B.CS 0x396E82C
	0x0396DFBC ADD X8, X9, W0, 0x3, SXTW
	0x0396DFC0 LDR X0, [X8 + 0x20]
	0x0396DFC4 MOV X1, X29
	0x0396DFC8 MOV X2, X28
	0x0396DFCC BL 0x396E998
	0x0396DFD0 B 0x396E000
	0x0396DFD4 MOV X0, X19
	0x0396DFD8 MOV X1, X21
	0x0396DFDC MOV X2, X31
	0x0396DFE0 BL 0x390987C
	0x0396DFE4 MOV X0, X19
	0x0396DFE8 MOV X1, X21
	0x0396DFEC MOV X2, X31
	0x0396DFF0 STR D0, [X31 + 0xA0]
	0x0396DFF4 STR D1, [X31 + 0x90]
	0x0396DFF8 MOV V9.16B, V2.16B
	0x0396DFFC BL 0x390987C
	0x0396E000 MOV X0, X19
	0x0396E004 MOV W1, W23
	0x0396E008 MOV X2, X31
	0x0396E00C STR D0, [X31 + 0x80]
	0x0396E010 STR D1, [X31 + 0x70]
	0x0396E014 MOV V8.16B, V2.16B
	0x0396E018 BL 0x391B5D8
	0x0396E01C STR W0, [X31 + 0xBC]
	0x0396E020 MOV X0, X19
	0x0396E024 MOV W1, W20
	0x0396E028 MOV X2, X31
	0x0396E02C BL 0x391B5D8
	0x0396E030 ADRP X8, 0x787000
	0x0396E034 LDR X8, [X8 + 0x9B0]
	0x0396E038 MOV W20, W0
	0x0396E03C MOVZ W1, 0x4
	0x0396E040 LDR X8, [X8]
	0x0396E044 MOV X0, X8
	0x0396E048 BL 0x1C16D6C
	0x0396E04C MOVZ W12, 0xC
	0x0396E050 ADRP X28, 0xA6A000
	0x0396E054 CBZ X27, 0x396E830
	0x0396E058 LDR W8, [X27 + 0x18]
	0x0396E05C LDP V3, V2, [X31 + 0x90]
	0x0396E060 STR X21, [X31 + 0x58]
	0x0396E064 STR W20, [X31 + 0x54]
	0x0396E068 CMP W23, W8
	0x0396E06C B.CS 0x396E82C
	0x0396E070 SXTW X21, W23
	0x0396E074 MADD X8, X21, X12, X27
	0x0396E078 LDR V0, [X8 + 0x20]!
	0x0396E07C MOV X29, X0
	0x0396E080 MOV X9, X8
	0x0396E084 LDR V1, [X9 + 0x8]!
	0x0396E088 CBZ X0, 0x396E830
	0x0396E08C LDR W10, [X29 + 0x18]
	0x0396E090 CBZ W10, 0x396E82C
	0x0396E094 STR D0, [X29 + 0x20]
	0x0396E098 STR S1, [X29 + 0x28]
	0x0396E09C LDR W11, [X27 + 0x18]
	0x0396E0A0 SBFM X20, X23, 0x20, 0x3F
	0x0396E0A4 CMP W20, W11
	0x0396E0A8 B.CS 0x396E82C
	0x0396E0AC CMP W10, 0x1
	0x0396E0B0 STR W22, [X31 + 0x50]
	0x0396E0B4 B.LS 0x396E82C
	0x0396E0B8 MADD X10, X20, X12, X27
	0x0396E0BC MOV X26, X25
	0x0396E0C0 ADD X25, X10, 0x20
	0x0396E0C4 ADD X22, X10, 0x28
	0x0396E0C8 LDR V0, [X25]
	0x0396E0CC LDR V1, [X22]
	0x0396E0D0 STUR D0, [X29 + 0x2C]
	0x0396E0D4 STR S1, [X29 + 0x34]
	0x0396E0D8 LDR W10, [X27 + 0x18]
	0x0396E0DC CMP W23, W10
	0x0396E0E0 B.CS 0x396E82C
	0x0396E0E4 LDR V12, [X8]
	0x0396E0E8 LDRB W8, [X28 + 0x785]
	0x0396E0EC LDR V13, [X9]
	0x0396E0F0 CBNZ W8, 0x396E10C
	0x0396E0F4 ADRP X0, 0x785000
	0x0396E0F8 LDR X0, [X0 + 0x5A8]
	0x0396E0FC BL 0x1C16CF4
	0x0396E100 LDP V3, V2, [X31 + 0x90]
	0x0396E104 MOVZ W8, 0x1
	0x0396E108 STRB W8, [X28 + 0x785]
	0x0396E10C ADRP X8, 0x785000
	0x0396E110 LDR X8, [X8 + 0x5A8]
	0x0396E114 LDR X0, [X8]
	0x0396E118 LDR W8, [X0 + 0xE0]
	0x0396E11C CBNZ W8, 0x396E128
	0x0396E120 BL 0x1C16DFC
	0x0396E124 LDP V3, V2, [X31 + 0x90]
	0x0396E128 FMUL S0, S2, S2
	0x0396E12C FMUL S1, S3, S3
	0x0396E130 FADD S0, S0, S1
	0x0396E134 FMUL S1, S9, S9
	0x0396E138 FADD S0, S1, S0
	0x0396E13C FSQRT S1, S0
	0x0396E140 FCMP S1, S11
	0x0396E144 B.LE 0x396E15C
	0x0396E148 MOV V2.S[1], V3.S[0]
	0x0396E14C UNIMPLEMENTED
	0x00000000 INVALID
	0x0396E154 FDIV S1, S9, S1
	0x0396E158 B 0x396E198
	0x0396E15C ADRP X8, 0xA6A000
	0x0396E160 LDRB W8, [X8 + 0x783]
	0x0396E164 CBNZ W8, 0x396E180
	0x0396E168 ADRP X0, 0x785000
	0x0396E16C LDR X0, [X0 + 0x5A0]
	0x0396E170 BL 0x1C16CF4
	0x0396E174 MOVZ W8, 0x1
	0x0396E178 ADRP X9, 0xA6A000
	0x0396E17C STRB W8, [X9 + 0x783]
	0x0396E180 ADRP X8, 0x785000
	0x0396E184 LDR X8, [X8 + 0x5A0]
	0x0396E188 LDR X8, [X8]
	0x0396E18C LDR X8, [X8 + 0xB8]
	0x0396E190 LDR V0, [X8]
	0x0396E194 LDR V1, [X8 + 0x8]
	0x0396E198 LDR W8, [X29 + 0x18]
	0x0396E19C CMP W8, 0x2
	0x0396E1A0 B.LS 0x396E82C
	0x0396E1A4 LDR V2, [X31 + 0x6]
	0x00000000 INVALID
	0x0396E1AC FADD V0.2S, V12.2S, V0.2S
	0x0396E1B0 STR D0, [X29 + 0x38]
	0x0396E1B4 FMUL S1, S1, S2
	0x0396E1B8 FADD S1, S13, S1
	0x0396E1BC STR S1, [X29 + 0x40]
	0x0396E1C0 LDR W8, [X27 + 0x18]
	0x0396E1C4 CMP W20, W8
	0x0396E1C8 B.CS 0x396E82C
	0x0396E1CC LDR V9, [X25]
	0x0396E1D0 LDRB W8, [X28 + 0x785]
	0x0396E1D4 LDR V12, [X22]
	0x0396E1D8 LDP V3, V2, [X31 + 0x70]
	0x0396E1DC CBNZ W8, 0x396E1F8
	0x0396E1E0 ADRP X0, 0x785000
	0x0396E1E4 LDR X0, [X0 + 0x5A8]
	0x0396E1E8 BL 0x1C16CF4
	0x0396E1EC LDP V3, V2, [X31 + 0x70]
	0x0396E1F0 MOVZ W8, 0x1
	0x0396E1F4 STRB W8, [X28 + 0x785]
	0x0396E1F8 ADRP X8, 0x785000
	0x0396E1FC LDR X8, [X8 + 0x5A8]
	0x0396E200 MOV X28, X26
	0x0396E204 LDR X0, [X8]
	0x0396E208 LDR W8, [X0 + 0xE0]
	0x0396E20C CBNZ W8, 0x396E218
	0x0396E210 BL 0x1C16DFC
	0x0396E214 LDP V3, V2, [X31 + 0x70]
	0x0396E218 FMUL S0, S2, S2
	0x0396E21C FMUL S1, S3, S3
	0x0396E220 FADD S0, S0, S1
	0x0396E224 FMUL S1, S8, S8
	0x0396E228 FADD S0, S1, S0
	0x0396E22C FSQRT S1, S0
	0x0396E230 FCMP S1, S11
	0x0396E234 B.LE 0x396E24C
	0x0396E238 MOV V2.S[1], V3.S[0]
	0x0396E23C UNIMPLEMENTED
	0x00000000 INVALID
	0x0396E244 FDIV S1, S8, S1
	0x0396E248 B 0x396E288
	0x0396E24C ADRP X8, 0xA6A000
	0x0396E250 LDRB W8, [X8 + 0x783]
	0x0396E254 CBNZ W8, 0x396E270
	0x0396E258 ADRP X0, 0x785000
	0x0396E25C LDR X0, [X0 + 0x5A0]
	0x0396E260 BL 0x1C16CF4
	0x0396E264 MOVZ W8, 0x1
	0x0396E268 ADRP X9, 0xA6A000
	0x0396E26C STRB W8, [X9 + 0x783]
	0x0396E270 ADRP X8, 0x785000
	0x0396E274 LDR X8, [X8 + 0x5A0]
	0x0396E278 LDR X8, [X8]
	0x0396E27C LDR X8, [X8 + 0xB8]
	0x0396E280 LDR V0, [X8]
	0x0396E284 LDR V1, [X8 + 0x8]
	0x0396E288 LDR W8, [X29 + 0x18]
	0x0396E28C CMP W8, 0x3
	0x0396E290 B.LS 0x396E82C
	0x0396E294 LDR V2, [X31 + 0x6]
	0x0396E298 LDR W8, [X31 + 0x3C]
	0x00000000 INVALID
	0x0396E2A0 FADD V0.2S, V9.2S, V0.2S
	0x0396E2A4 FMUL S1, S1, S2
	0x0396E2A8 FADD S1, S12, S1
	0x0396E2AC STUR D0, [X29 + 0x44]
	0x0396E2B0 STR S1, [X29 + 0x4C]
	0x0396E2B4 TBZ X8, 0x0, 0x396E37C
	0x0396E2B8 ADRP X8, 0x78A000
	0x0396E2BC LDR X8, [X8 + 0x140]
	0x0396E2C0 MOVZ W1, 0x4
	0x0396E2C4 LDR X0, [X8]
	0x0396E2C8 BL 0x1C16D6C
	0x0396E2CC LDR X9, [X19 + 0x88]
	0x0396E2D0 CBZ X9, 0x396E830
	0x0396E2D4 LDR W8, [X9 + 0x18]
	0x0396E2D8 CMP W23, W8
	0x0396E2DC B.CS 0x396E82C
	0x0396E2E0 MOV X26, X0
	0x0396E2E4 CBZ X0, 0x396E830
	0x0396E2E8 LDR W8, [X26 + 0x18]
	0x0396E2EC CBZ W8, 0x396E82C
	0x0396E2F0 ADD X9, X9, X21, 0x4, LSL
	0x0396E2F4 LDR V0, [X9 + 0x2]
	0x0396E2F8 STR V0, [X26 + 0x2]
	0x0396E2FC LDR X9, [X19 + 0x88]
	0x0396E300 CBZ X9, 0x396E830
	0x0396E304 LDR W10, [X9 + 0x18]
	0x0396E308 CMP W20, W10
	0x0396E30C B.CS 0x396E82C
	0x0396E310 CMP W8, 0x1
	0x0396E314 B.LS 0x396E82C
	0x0396E318 ADD X9, X9, X20, 0x4, LSL
	0x0396E31C LDR V0, [X9 + 0x2]
	0x0396E320 STR V0, [X26 + 0x3]
	0x0396E324 LDR X9, [X19 + 0x88]
	0x0396E328 CBZ X9, 0x396E830
	0x0396E32C LDR W10, [X9 + 0x18]
	0x0396E330 CMP W23, W10
	0x0396E334 B.CS 0x396E82C
	0x0396E338 CMP W8, 0x2
	0x0396E33C B.LS 0x396E82C
	0x0396E340 ADD X9, X9, X21, 0x4, LSL
	0x0396E344 LDR V0, [X9 + 0x2]
	0x0396E348 STR V0, [X26 + 0x4]
	0x0396E34C LDR X9, [X19 + 0x88]
	0x0396E350 CBZ X9, 0x396E830
	0x0396E354 LDR W10, [X9 + 0x18]
	0x0396E358 LDR X21, [X31 + 0x58]
	0x0396E35C CMP W20, W10
	0x0396E360 B.CS 0x396E82C
	0x0396E364 CMP W8, 0x3
	0x0396E368 B.LS 0x396E82C
	0x0396E36C ADD X8, X9, X20, 0x4, LSL
	0x0396E370 LDR V0, [X8 + 0x2]
	0x0396E374 STR V0, [X26 + 0x5]
	0x0396E378 B 0x396E384
	0x0396E37C LDR X21, [X31 + 0x58]
	0x0396E380 MOV X26, X31
	0x0396E384 ADRP X8, 0x7DF000
	0x0396E388 LDR X8, [X8 + 0xA88]
	0x0396E38C MOVZ W1, 0x4
	0x0396E390 LDR X0, [X8]
	0x0396E394 BL 0x1C16D6C
	0x0396E398 ADRP X20, 0x7E0000
	0x0396E39C LDR X20, [X20 + 0x48]
	0x0396E3A0 MOV X23, X0
	0x0396E3A4 MOVZ W1, 0x4
	0x0396E3A8 LDR X8, [X20]
	0x0396E3AC MOV X0, X8
	0x0396E3B0 BL 0x1C16D6C
	0x0396E3B4 LDR X8, [X20]
	0x0396E3B8 MOV X27, X0
	0x0396E3BC MOVZ W1, 0x4
	0x0396E3C0 MOV X0, X8
	0x0396E3C4 BL 0x1C16D6C
	0x0396E3C8 LDR X8, [X28]
	0x0396E3CC MOV X22, X0
	0x0396E3D0 MOVZ W1, 0x6
	0x0396E3D4 MOV X0, X8
	0x0396E3D8 BL 0x1C16D6C
	0x0396E3DC ADRP X8, 0x7E1000
	0x0396E3E0 LDR X8, [X8 + 0x340]
	0x0396E3E4 MOV X2, X31
	0x0396E3E8 MOV X25, X0
	0x0396E3EC LDR X1, [X8]
	0x0396E3F0 BL 0x32C5BD8
	0x0396E3F4 CBZ X21, 0x396E830
	0x0396E3F8 LDR W21, [X21 + 0x48]
	0x0396E3FC ADD X8, X31, 0x100
	0x0396E400 MOV X0, X31
	0x0396E404 BL 0x38F6A48
	0x0396E408 ADRP X8, 0x7E0000
	0x0396E40C LDP V0, V1, [X31 + 0x100]
	0x0396E410 LDR X8, [X8 + 0x560]
	0x0396E414 STP V0, V1, [X31 + 0x120]
	0x0396E418 LDR X0, [X8]
	0x0396E41C BL 0x1C16F10
	0x0396E420 LDP V0, V1, [X31 + 0x120]
	0x0396E424 ADD X3, X31, 0xE0
	0x0396E428 MOVN W5, 0x0
	0x0396E42C MOVN W6, 0x0
	0x0396E430 MOV X1, X25
	0x0396E434 MOV W2, W21
	0x0396E438 MOV W4, W31
	0x0396E43C MOV W7, W31
	0x0396E440 MOV X20, X0
	0x0396E444 STP V0, V1, [X31 + 0xE0]
	0x0396E448 STR X31, [X31]
	0x0396E44C BL 0x39004D4
	0x0396E450 LDR X0, [X28]
	0x0396E454 MOVZ W1, 0x4
	0x0396E458 BL 0x1C16D6C
	0x0396E45C CBZ X0, 0x396E830
	0x0396E460 MOV X25, X28
	0x0396E464 LDR W8, [X0 + 0x18]
	0x0396E468 LDR X28, [X31 + 0x30]
	0x0396E46C LDR W21, [X31 + 0x54]
	0x0396E470 MOV X7, X0
	0x0396E474 MOVN W9, 0x0
	0x0396E478 CBZ W8, 0x396E82C
	0x0396E47C LDR W10, [X31 + 0xBC]
	0x0396E480 CMP W8, 0x1
	0x0396E484 STR W10, [X7 + 0x20]
	0x0396E488 B.EQ 0x396E82C
	0x0396E48C CMP W8, 0x2
	0x0396E490 STR W21, [X7 + 0x24]
	0x0396E494 B.LS 0x396E82C
	0x0396E498 CMP W8, 0x3
	0x0396E49C STR W9, [X7 + 0x28]
	0x0396E4A0 B.EQ 0x396E82C
	0x0396E4A4 MOV X0, X19
	0x0396E4A8 MOV X1, X29
	0x0396E4AC MOV X2, X26
	0x0396E4B0 MOV X3, X23
	0x0396E4B4 MOV X4, X27
	0x0396E4B8 MOV X5, X22
	0x0396E4BC MOV X6, X20
	0x0396E4C0 STR W9, [X7 + 0x2C]
	0x0396E4C4 STR X31, [X31]
	0x0396E4C8 BL 0x394EA28
	0x0396E4CC CBZ X0, 0x396E830
	0x0396E4D0 LDR X8, [X0 + 0x10]
	0x0396E4D4 LDP X27, X26, [X31 + 0x20]
	0x0396E4D8 LDR X29, [X31 + 0x18]
	0x0396E4DC LDR W22, [X31 + 0x50]
	0x0396E4E0 MOV X23, X0
	0x0396E4E4 CBZ X8, 0x396E830
	0x0396E4E8 LDR W9, [X8 + 0x18]
	0x0396E4EC CMP W9, 0x3
	0x0396E4F0 B.LS 0x396E82C
	0x0396E4F4 CMP W9, 0x4
	0x0396E4F8 B.EQ 0x396E82C
	0x0396E4FC LDP W1, W2, [X8 + 0x2C]
	0x0396E500 ADD X0, X31, 0x100
	0x0396E504 MOV X3, X31
	0x0396E508 STR X31, [X31 + 0x100]
	0x0396E50C BL 0x38FDC24
	0x0396E510 CBZ X26, 0x396E830
	0x0396E514 ADRP X9, 0x7DF000
	0x0396E518 LDR X1, [X31 + 0x100]
	0x0396E51C LDR W10, [X26 + 0x1C]
	0x0396E520 LDR X8, [X26 + 0x10]
	0x0396E524 LDR X9, [X9 + 0xD68]
	0x0396E528 ADD W10, W10, 0x1
	0x0396E52C LDR X9, [X9]
	0x0396E530 STR W10, [X26 + 0x1C]
	0x0396E534 CBZ X8, 0x396E830
	0x0396E538 LDRSW X10, [X26 + 0x18]
	0x0396E53C LDR W11, [X8 + 0x18]
	0x0396E540 CMP W10, W11
	0x0396E544 B.CS 0x396E55C
	0x0396E548 ADD W9, W10, 0x1
	0x0396E54C ADD X8, X8, X10, 0x3, LSL
	0x0396E550 STR W9, [X26 + 0x18]
	0x0396E554 STR X1, [X8 + 0x20]
	0x0396E558 B 0x396E570
	0x0396E55C LDR X8, [X9 + 0x20]
	0x0396E560 MOV X0, X26
	0x0396E564 LDR X8, [X8 + 0xC0]
	0x0396E568 LDR X2, [X8 + 0x70]
	0x0396E56C BL 0x2FB9F30
	0x0396E570 LDR X8, [X23 + 0x10]
	0x0396E574 CBZ X8, 0x396E830
	0x0396E578 LDR W9, [X8 + 0x18]
	0x0396E57C CMP W9, 0x3
	0x0396E580 B.LS 0x396E82C
	0x0396E584 LDR W2, [X8 + 0x2C]
	0x0396E588 LDR W1, [X31 + 0xBC]
	0x0396E58C ADD X0, X31, 0xD8
	0x0396E590 MOV X3, X31
	0x0396E594 STR X31, [X31 + 0xD8]
	0x0396E598 BL 0x38FDC24
	0x0396E59C CBZ X24, 0x396E830
	0x0396E5A0 ADRP X9, 0x7DF000
	0x0396E5A4 LDR X1, [X31 + 0xD8]
	0x0396E5A8 LDR W10, [X24 + 0x1C]
	0x0396E5AC LDR X8, [X24 + 0x10]
	0x0396E5B0 LDR X9, [X9 + 0xD68]
	0x0396E5B4 ADD W10, W10, 0x1
	0x0396E5B8 LDR X9, [X9]
	0x0396E5BC STR W10, [X24 + 0x1C]
	0x0396E5C0 CBZ X8, 0x396E830
	0x0396E5C4 LDRSW X10, [X24 + 0x18]
	0x0396E5C8 LDR W11, [X8 + 0x18]
	0x0396E5CC CMP W10, W11
	0x0396E5D0 B.CS 0x396E5E8
	0x0396E5D4 ADD W9, W10, 0x1
	0x0396E5D8 ADD X8, X8, X10, 0x3, LSL
	0x0396E5DC STR W9, [X24 + 0x18]
	0x0396E5E0 STR X1, [X8 + 0x20]
	0x0396E5E4 B 0x396E5FC
	0x0396E5E8 LDR X8, [X9 + 0x20]
	0x0396E5EC MOV X0, X24
	0x0396E5F0 LDR X8, [X8 + 0xC0]
	0x0396E5F4 LDR X2, [X8 + 0x70]
	0x0396E5F8 BL 0x2FB9F30
	0x0396E5FC LDR X8, [X23 + 0x10]
	0x0396E600 CBZ X8, 0x396E830
	0x0396E604 LDR W9, [X8 + 0x18]
	0x0396E608 LDR X23, [X31 + 0xC8]
	0x0396E60C CMP W9, 0x4
	0x0396E610 B.LS 0x396E82C
	0x0396E614 LDR W2, [X8 + 0x30]
	0x0396E618 ADD X0, X31, 0xD0
	0x0396E61C MOV W1, W21
	0x0396E620 MOV X3, X31
	0x0396E624 STR X31, [X31 + 0xD0]
	0x0396E628 BL 0x38FDC24
	0x0396E62C ADRP X9, 0x7DF000
	0x0396E630 LDR X1, [X31 + 0xD0]
	0x0396E634 LDR W10, [X24 + 0x1C]
	0x0396E638 LDR X8, [X24 + 0x10]
	0x0396E63C LDR X9, [X9 + 0xD68]
	0x0396E640 ADD W10, W10, 0x1
	0x0396E644 LDR X9, [X9]
	0x0396E648 STR W10, [X24 + 0x1C]
	0x0396E64C CBZ X8, 0x396E830
	0x0396E650 LDRSW X10, [X24 + 0x18]
	0x0396E654 LDR W11, [X8 + 0x18]
	0x0396E658 CMP W10, W11
	0x0396E65C B.CS 0x396E674
	0x0396E660 ADD W9, W10, 0x1
	0x0396E664 ADD X8, X8, X10, 0x3, LSL
	0x0396E668 STR W9, [X24 + 0x18]
	0x0396E66C STR X1, [X8 + 0x20]
	0x0396E670 B 0x396E688
	0x0396E674 LDR X8, [X9 + 0x20]
	0x0396E678 MOV X0, X24
	0x0396E67C LDR X8, [X8 + 0xC0]
	0x0396E680 LDR X2, [X8 + 0x70]
	0x0396E684 BL 0x2FB9F30
	0x0396E688 LDR W8, [X23 + 0x18]
	0x0396E68C ADD W22, W22, 0x1
	0x0396E690 CMP W22, W8
	0x0396E694 B.LT 0x396DF10
	0x0396E698 LDR W8, [X31 + 0x4C]
	0x0396E69C TBZ X8, 0x0, 0x396E78C
	0x0396E6A0 CBZ X24, 0x396E830
	0x0396E6A4 LDR W8, [X24 + 0x18]
	0x0396E6A8 CMP W8, 0x1
	0x0396E6AC B.LT 0x396E78C
	0x0396E6B0 ADRP X23, 0x7E0000
	0x0396E6B4 LDR X23, [X23 + 0xFE8]
	0x0396E6B8 MOV W20, W31
	0x0396E6BC LDR X2, [X23]
	0x0396E6C0 MOV X0, X24
	0x0396E6C4 MOV W1, W20
	0x0396E6C8 BL 0x2FB9C40
	0x0396E6CC LDR W8, [X24 + 0x18]
	0x0396E6D0 CMP W8, 0x1
	0x0396E6D4 B.LT 0x396E77C
	0x0396E6D8 MOV X22, X0
	0x0396E6DC MOV W21, W31
	0x0396E6E0 CMP W20, W21
	0x0396E6E4 B.EQ 0x396E704
	0x0396E6E8 LDR X2, [X23]
	0x0396E6EC MOV X0, X24
	0x0396E6F0 MOV W1, W21
	0x0396E6F4 BL 0x2FB9C40
	0x0396E6F8 CMP W0, W22
	0x0396E6FC B.EQ 0x396E714
	0x0396E700 LDR W8, [X24 + 0x18]
	0x0396E704 ADD W21, W21, 0x1
	0x0396E708 CMP W21, W8
	0x0396E70C B.LT 0x396E6E0
	0x0396E710 B 0x396E77C
	0x0396E714 LDR X0, [X25]
	0x0396E718 MOVZ W1, 0x2
	0x0396E71C BL 0x1C16D6C
	0x0396E720 LDR X2, [X23]
	0x0396E724 MOV X22, X0
	0x0396E728 MOV X0, X24
	0x0396E72C MOV W1, W21
	0x0396E730 BL 0x2FB9C40
	0x0396E734 CBZ X22, 0x396E830
	0x0396E738 LDR W8, [X22 + 0x18]
	0x0396E73C CBZ W8, 0x396E82C
	0x0396E740 UBFM X8, X0, 0x20, 0x3F
	0x0396E744 STR W8, [X22 + 0x20]
	0x0396E748 LDR X2, [X23]
	0x0396E74C MOV X0, X24
	0x0396E750 MOV W1, W20
	0x0396E754 BL 0x2FB9C40
	0x0396E758 LDR W8, [X22 + 0x18]
	0x0396E75C CMP W8, 0x1
	0x0396E760 B.LS 0x396E82C
	0x0396E764 UBFM X8, X0, 0x20, 0x3F
	0x0396E768 MOV X0, X19
	0x0396E76C MOV X1, X22
	0x0396E770 MOV X2, X31
	0x0396E774 STR W8, [X22 + 0x24]
	0x0396E778 BL 0x391CEC4
	0x0396E77C LDR W8, [X24 + 0x18]
	0x0396E780 ADD W20, W20, 0x1
	0x0396E784 CMP W20, W8
	0x0396E788 B.LT 0x396E6BC
	0x0396E78C LDR X19, [X19 + 0x28]
	0x0396E790 CBZ X19, 0x396E830
	0x0396E794 LDR W8, [X19 + 0x18]
	0x0396E798 CMP W8, 0x1
	0x0396E79C B.LT 0x396E7D0
	0x0396E7A0 MOV W20, W31
	0x0396E7A4 CMP W20, W8
	0x0396E7A8 B.CS 0x396E82C
	0x0396E7AC ADD X8, X19, W20, 0x3, SXTW
	0x0396E7B0 LDR X0, [X8 + 0x20]
	0x0396E7B4 CBZ X0, 0x396E830
	0x0396E7B8 MOV X1, X31
	0x0396E7BC BL 0x38FFC64
	0x0396E7C0 LDR W8, [X19 + 0x18]
	0x0396E7C4 ADD W20, W20, 0x1
	0x0396E7C8 CMP W20, W8
	0x0396E7CC B.LT 0x396E7A4
	0x0396E7D0 CBZ X26, 0x396E830
	0x0396E7D4 ADRP X8, 0x7E1000
	0x0396E7D8 LDR X8, [X8 + 0xB00]
	0x0396E7DC MOV X0, X26
	0x0396E7E0 LDR X1, [X8]
	0x0396E7E4 BL 0x2FBBCF0
	0x0396E7E8 MOV X2, X0
	0x0396E7EC B 0x396E7F4
	0x0396E7F0 MOV X2, X31
	0x0396E7F4 LDP X20, X19, [X31 + 0x1C0]
	0x0396E7F8 LDP X22, X21, [X31 + 0x1B0]
	0x0396E7FC LDP X24, X23, [X31 + 0x1A0]
	0x0396E800 LDP X26, X25, [X31 + 0x190]
	0x0396E804 LDP X28, X27, [X31 + 0x180]
	0x0396E808 LDP X29, X30, [X31 + 0x170]
	0x0396E80C LDP D9, D8, [X31 + 0x160]
	0x0396E810 LDP D11, D10, [X31 + 0x150]
	0x0396E814 LDP D13, D12, [X31 + 0x140]
	0x0396E818 MOV X0, X2
	0x0396E81C ADD X31, X31, 0x1D0
	0x0396E820 RET
	0x0396E824 BL 0x1C16F28
	0x0396E828 BL 0x1C16F20
	0x0396E82C BL 0x1C16F28
	0x0396E830 BL 0x1C16F20
	0x0396E834 BL 0x1C16F20
	0x0396E838 BL 0x1C16F20
	0x0396E83C BL 0x1C16F20
	0x0396E840 BL 0x1C16F20
	0x0396E844 BL 0x1C16F20
	0x0396E848 ADRP X0, 0x78A000
	0x0396E84C LDR X0, [X0 + 0x528]
	0x0396E850 BL 0x1C16D08
	0x0396E854 BL 0x1C16F10
	0x0396E858 MOV X19, X0
	0x0396E85C ADRP X0, 0x7DF000
	0x0396E860 LDR X0, [X0 + 0xE90]
	0x0396E864 B 0x396E884
	0x0396E868 ADRP X0, 0x78A000
	0x0396E86C LDR X0, [X0 + 0x528]
	0x0396E870 BL 0x1C16D08
	0x0396E874 BL 0x1C16F10
	0x0396E878 MOV X19, X0
	0x0396E87C ADRP X0, 0x7E0000
	0x0396E880 LDR X0, [X0 + 0x650]
	0x0396E884 BL 0x1C16D08
	0x0396E888 MOV X1, X0
	0x0396E88C MOV X0, X19
	0x0396E890 MOV X2, X31
	0x0396E894 BL 0x330E100
	0x0396E898 ADRP X0, 0x7E1000
	0x0396E89C LDR X0, [X0 + 0xE90]
	0x0396E8A0 BL 0x1C16D08
	0x0396E8A4 MOV X1, X0
	0x0396E8A8 MOV X0, X19
	0x0396E8AC BL 0x1C16DEC
	0x0396E8B0 BL 0x1C16F20
	0x0396E8B4 MOV X0, X23
	0x0396E8B8 BL 0x1C16F18

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 624
	022 Move X19, 0xA76000
	023 Move W8, [X19+2544]
	024 Move X20, X1
	025 Move X24, X0
	026 Move [X31+16], S0
	027 Move [X31+20], W2
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {244}
	032 Move X0, 0x7E4000
	033 Move X0, [X0+3488]
	034 Call 0x1C17CF4
	035 Move X0, 0x792000
	036 Move X0, [X0+2136]
	037 Call 0x1C17CF4
	038 Move X0, 0x7B2000
	039 Move X0, [X0+2256]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E3000
	042 Move X0, [X0+3336]
	043 Call 0x1C17CF4
	044 Move X0, 0x7E4000
	045 Move X0, [X0+3496]
	046 Call 0x1C17CF4
	047 Move X0, 0x7E4000
	048 Move X0, [X0+3504]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E4000
	051 Move X0, [X0+2176]
	052 Call 0x1C17CF4
	053 Move X0, 0x7B2000
	054 Move X0, [X0+2216]
	055 Call 0x1C17CF4
	056 Move X0, 0x792000
	057 Move X0, [X0+2160]
	058 Call 0x1C17CF4
	059 Move X0, 0x7E4000
	060 Move X0, [X0+3512]
	061 Call 0x1C17CF4
	062 Move X0, 0x7E4000
	063 Move X0, [X0+3520]
	064 Call 0x1C17CF4
	065 Move X0, 0x792000
	066 Move X0, [X0+2192]
	067 Call 0x1C17CF4
	068 Move X0, 0x7E2000
	069 Move X0, [X0+3200]
	070 Call 0x1C17CF4
	071 Move X0, 0x7E4000
	072 Move X0, [X0+3528]
	073 Call 0x1C17CF4
	074 Move X0, 0x7B2000
	075 Move X0, [X0+2224]
	076 Call 0x1C17CF4
	077 Move X0, 0x7E4000
	078 Move X0, [X0+3536]
	079 Call 0x1C17CF4
	080 Move X0, 0x792000
	081 Move X0, [X0+2184]
	082 Call 0x1C17CF4
	083 Move X0, 0x7E4000
	084 Move X0, [X0+3464]
	085 Call 0x1C17CF4
	086 Move X0, 0x7B3000
	087 Move X0, [X0+2840]
	088 Call 0x1C17CF4
	089 Move X0, 0x7E4000
	090 Move X0, [X0+3544]
	091 Call 0x1C17CF4
	092 Move X0, 0x7E4000
	093 Move X0, [X0+3552]
	094 Call 0x1C17CF4
	095 Move X0, 0x7E4000
	096 Move X0, [X0+3560]
	097 Call 0x1C17CF4
	098 Move X0, 0x7E4000
	099 Move X0, [X0+2184]
	100 Call 0x1C17CF4
	101 Move X0, 0x7E4000
	102 Move X0, [X0+3568]
	103 Call 0x1C17CF4
	104 Move X0, 0x7E4000
	105 Move X0, [X0+3576]
	106 Call 0x1C17CF4
	107 Move X0, 0x7B3000
	108 Move X0, [X0+2856]
	109 Call 0x1C17CF4
	110 Move X0, 0x7E4000
	111 Move X0, [X0+3584]
	112 Call 0x1C17CF4
	113 Move X0, 0x7E4000
	114 Move X0, [X0+2192]
	115 Call 0x1C17CF4
	116 Move X0, 0x7E4000
	117 Move X0, [X0+3592]
	118 Call 0x1C17CF4
	119 Move X0, 0x7E4000
	120 Move X0, [X0+3600]
	121 Call 0x1C17CF4
	122 Move X0, 0x7E4000
	123 Move X0, [X0+3608]
	124 Call 0x1C17CF4
	125 Move X0, 0x7E4000
	126 Move X0, [X0+3616]
	127 Call 0x1C17CF4
	128 Move X0, 0x7E4000
	129 Move X0, [X0+3624]
	130 Call 0x1C17CF4
	131 Move X0, 0x7B3000
	132 Move X0, [X0+2872]
	133 Call 0x1C17CF4
	134 Move X0, 0x7E4000
	135 Move X0, [X0+3632]
	136 Call 0x1C17CF4
	137 Move X0, 0x7E4000
	138 Move X0, [X0+2200]
	139 Call 0x1C17CF4
	140 Move X0, 0x7E3000
	141 Move X0, [X0+1008]
	142 Call 0x1C17CF4
	143 Move X0, 0x7E3000
	144 Move X0, [X0+1376]
	145 Call 0x1C17CF4
	146 Move X0, 0x7E4000
	147 Move X0, [X0+3640]
	148 Call 0x1C17CF4
	149 Move X0, 0x789000
	150 Move X0, [X0+3672]
	151 Call 0x1C17CF4
	152 Move X0, 0x7DF000
	153 Move X0, [X0+864]
	154 Call 0x1C17CF4
	155 Move X0, 0x7E4000
	156 Move X0, [X0+3648]
	157 Call 0x1C17CF4
	158 Move X0, 0x7E4000
	159 Move X0, [X0+3656]
	160 Call 0x1C17CF4
	161 Move X0, 0x7E4000
	162 Move X0, [X0+3664]
	163 Call 0x1C17CF4
	164 Move X0, 0x7DF000
	165 Move X0, [X0+976]
	166 Call 0x1C17CF4
	167 Move X0, 0x789000
	168 Move X0, [X0+3600]
	169 Call 0x1C17CF4
	170 Move X0, 0x7E1000
	171 Move X0, [X0+3600]
	172 Call 0x1C17CF4
	173 Move X0, 0x7E3000
	174 Move X0, [X0+448]
	175 Call 0x1C17CF4
	176 Move X0, 0x7E3000
	177 Move X0, [X0+3672]
	178 Call 0x1C17CF4
	179 Move X0, 0x7B2000
	180 Move X0, [X0+2896]
	181 Call 0x1C17CF4
	182 Move X0, 0x7E2000
	183 Move X0, [X0+3128]
	184 Call 0x1C17CF4
	185 Move X0, 0x78B000
	186 Move X0, [X0+2928]
	187 Call 0x1C17CF4
	188 Move X0, 0x7E2000
	189 Move X0, [X0+2616]
	190 Call 0x1C17CF4
	191 Move X0, 0x7E1000
	192 Move X0, [X0+3552]
	193 Call 0x1C17CF4
	194 Move X0, 0x7E2000
	195 Move X0, [X0+3136]
	196 Call 0x1C17CF4
	197 Move X0, 0x7E1000
	198 Move X0, [X0+3608]
	199 Call 0x1C17CF4
	200 Move X0, 0x788000
	201 Move X0, [X0+3624]
	202 Call 0x1C17CF4
	203 Move X0, 0x7E2000
	204 Move X0, [X0+3144]
	205 Call 0x1C17CF4
	206 Move X0, 0x7E3000
	207 Move X0, [X0+464]
	208 Call 0x1C17CF4
	209 Move X0, 0x7E3000
	210 Move X0, [X0+3680]
	211 Call 0x1C17CF4
	212 Move X0, 0x788000
	213 Move X0, [X0+3632]
	214 Call 0x1C17CF4
	215 Move X0, 0x7E1000
	216 Move X0, [X0+3560]
	217 Call 0x1C17CF4
	218 Move X0, 0x7E1000
	219 Move X0, [X0+3568]
	220 Call 0x1C17CF4
	221 Move X0, 0x7E3000
	222 Move X0, [X0+3688]
	223 Call 0x1C17CF4
	224 Move X0, 0x7E3000
	225 Move X0, [X0+3696]
	226 Call 0x1C17CF4
	227 Move X0, 0x7E3000
	228 Move X0, [X0+3704]
	229 Call 0x1C17CF4
	230 Move X0, 0x7E3000
	231 Move X0, [X0+3712]
	232 Call 0x1C17CF4
	233 Move X0, 0x7E3000
	234 Move X0, [X0+3720]
	235 Call 0x1C17CF4
	236 Move X0, 0x7E2000
	237 Move X0, [X0+32]
	238 Call 0x1C17CF4
	239 Move X0, 0x7E2000
	240 Move X0, [X0+2824]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X19+2544], W8
	244 NotImplemented "Instruction MOVI not yet implemented."
	245 Move [X31+536], X31
	246 Move [X31+528], X31
	247 Move [X31+544], X31
	248 Move [X31+464], X31
	249 Move [X31+472], X31
	250 Move [X31+448], X31
	251 Move [X31+456], X31
	252 Move [X31+320], X31
	253 Move [X31+328], X31
	254 Move [X31+336], X31
	255 Move [X31+496], V0
	256 Move [X31+504], V0
	257 Move [X31+30], V0
	258 Move [X31+416], V0
	259 Move [X31+424], V0
	260 Move [X31+384], V0
	261 Move [X31+392], V0
	262 Move [X31+352], V0
	263 Move [X31+360], V0
	264 Move [X31+288], V0
	265 Move [X31+296], V0
	266 Compare X20, 0
	267 JumpIfEqual {1207}
	268 Move X8, 0x7E3000
	269 Move X8, [X8+3464]
	270 Move X0, X20
	271 Move X1, [X8]
	272 Call Enumerable.Any, X0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {1207}
	277 Compare X24, 0
	278 JumpIfEqual {1638}
	279 Move X0, X24
	280 Move X1, X31
	281 Move X2, X31
	282 Call ProBuilderMesh.GetVertices, X0, X1
	283 Move X8, 0x7E1000
	284 Move X8, [X8+3560]
	285 Move X19, X0
	286 Move X8, [X8]
	287 Move X0, X8
	288 Call 0x1C17F10
	289 Move X8, 0x7E1000
	290 Move X8, [X8+3552]
	291 Move X1, X19
	292 Move X29, X0
	293 Move X2, [X8]
	294 Call List`1<Object>..ctor, X0, X1
	295 Move X8, [X24+48]
	296 Compare X8, 0
	297 JumpIfEqual {1638}
	298 Move W8, [X8+24]
	299 Move X0, X24
	300 Move X1, X31
	301 Move [X31+28], W8
	302 Call ProBuilderMesh.get_sharedVertexLookup, X0
	303 Move X21, X0
	304 Move X0, X24
	305 Move X1, X31
	306 Call ProBuilderMesh.get_sharedTextureLookup, X0
	307 Move X8, 0x7E1000
	308 Move X8, [X8+3568]
	309 Move X22, X0
	310 Move X8, [X8]
	311 Move X0, X8
	312 Call 0x1C17F10
	313 Move X8, 0x7E2000
	314 Move X8, [X8+2616]
	315 Move [X31+48], X0
	316 Move X1, [X8]
	317 Call List`1<Object>..ctor, X0
	318 Move X19, 0x791000
	319 Move X19, [X19+2184]
	320 Move X0, [X19]
	321 Call 0x1C17F10
	322 Move X23, 0x791000
	323 Move X23, [X23+2192]
	324 Move [X31+120], X0
	325 Move X1, [X23]
	326 Call Dictionary`2<Int32, Int32>..ctor, X0
	327 Move X0, [X19]
	328 Call 0x1C17F10
	329 Move X1, [X23]
	330 Move [X31+112], X0
	331 Call Dictionary`2<Int32, Int32>..ctor, X0
	332 Move X0, [X19]
	333 Call 0x1C17F10
	334 Move X1, [X23]
	335 Move [X31+40], X0
	336 Call Dictionary`2<Int32, Int32>..ctor, X0
	337 Move X8, 0x7E3000
	338 Move X8, [X8+3536]
	339 Move X0, [X8]
	340 Call 0x1C17F10
	341 Move X8, 0x7E3000
	342 Move X8, [X8+3520]
	343 Move X26, X0
	344 Move X1, [X8]
	345 Call Dictionary`2<Int32, SimpleTuple`3<Vector3, Vector3, Object>>..ctor, X0
	346 Move X8, 0x7E2000
	347 Move X8, [X8+2824]
	348 Move X0, [X8]
	349 Move W8, [X0+224]
	350 Compare W8, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 Move W2, 1
	354 Move X0, X24
	355 Move X1, X20
	356 Move X3, X31
	357 Move [X31+32], X24
	358 Call WingedEdge.GetWingedEdges, X0, X1, X2
	359 Call ExtrudeElements.GetFaceGroups, X0
	360 Compare X0, 0
	361 JumpIfEqual {1638}
	362 Move X8, 0x7E3000
	363 Move X8, [X8+3672]
	364 Move X1, [X8]
	365 Add X8, X31, 128
	366 Call List`1<Object>.GetEnumerator, X0
	367 Move V0, [X31+8]
	368 Move X8, [X31+144]
	369 Move [X31+24], W31
	370 Move [X31+56], X29
	371 Move [X31+33], V0
	372 Move [X31+544], X8
	373 Move X8, 0x7E3000
	374 Move X8, [X8+3592]
	375 Move X1, [X8]
	376 Add X0, X31, 528
	377 Call Enumerator<Object>.MoveNext, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {1230}
	382 Move X0, [X31+544]
	383 Move X1, X21
	384 Move [X31+64], X0
	385 Call ExtrudeElements.GetPerimeterEdges, X0, X1
	386 Move X19, X0
	387 Move X0, [X31+112]
	388 Compare X0, 0
	389 JumpIfEqual {1627}
	390 Move X8, 0x7B1000
	391 Move X8, [X8+2256]
	392 Move X1, [X8]
	393 Call Dictionary`2<Int32, Int32>.Clear, X0
	394 Move X0, [X31+120]
	395 Compare X0, 0
	396 JumpIfEqual {1628}
	397 Move X8, 0x7B1000
	398 Move X8, [X8+2256]
	399 Move X1, [X8]
	400 Call Dictionary`2<Int32, Int32>.Clear, X0
	401 Compare X19, 0
	402 JumpIfEqual {1626}
	403 Move X8, 0x7E3000
	404 Move X8, [X8+3504]
	405 Move X1, [X8]
	406 Add X8, X31, 128
	407 Move X0, X19
	408 Call Dictionary`2<EdgeLookup, Object>.GetEnumerator, X0
	409 Move V0, [X31+128]
	410 Move V1, [X31+144]
	411 Move V2, [X31+10]
	412 Move W8, [X31+24]
	413 Move [X31+480], V0
	414 Move [X31+488], V1
	415 Move [X31+32], V2
	416 Move [X31+80], W8
	417 Move X8, 0x7E3000
	418 Move X8, [X8+3600]
	419 Move X1, [X8]
	420 Add X0, X31, 480
	421 Call Enumerator<EdgeLookup, Object>.MoveNext, X0
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {870}
	426 Compare X29, 0
	427 JumpIfEqual {1161}
	428 Move X8, X29
	429 Move W27, [X8+24]
	430 Move X8, 0x7E2000
	431 Move X29, [X31+496]
	432 Move X20, [X31+512]
	433 Move X8, [X8+3336]
	434 Move X2, [X8]
	435 Move X0, [X31+120]
	436 Move W1, W29
	437 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	438 Move TEMP, X0
	439 And TEMP, TEMP, 1
	440 Compare TEMP, 1
	441 JumpIfEqual {511}
	442 Compare X21, 0
	443 JumpIfEqual {1181}
	444 Move X8, 0x7E1000
	445 Move X8, [X8+3200]
	446 Move X2, [X8]
	447 Move X0, X21
	448 Move W1, W29
	449 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	450 Move X8, 0x791000
	451 Move X8, [X8+2136]
	452 Move W2, W0
	453 Move X3, [X8]
	454 Move X0, [X31+120]
	455 Move W1, W29
	456 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	457 Move X8, 0x7E1000
	458 Move X8, [X8+3200]
	459 Move X2, [X8]
	460 Move TEMP, 0
	461 Not TEMP
	462 Move W8, TEMP
	463 Move [X31+476], W8
	464 Move X0, X21
	465 Move W1, W29
	466 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	467 Move W1, W0
	468 Move X8, 0x791000
	469 Move X8, [X8+2160]
	470 Move X3, [X8]
	471 Move X0, [X31+112]
	472 Add X2, X31, 476
	473 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	474 Move TEMP, X0
	475 And TEMP, TEMP, 1
	476 Compare TEMP, 1
	477 JumpIfNotEqual {485}
	478 Move X8, 0x7B1000
	479 Move W2, [X31+476]
	480 Move X8, [X8+2224]
	481 Move X3, [X8]
	482 Move X0, X21
	483 Move W1, W29
	484 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	485 Move X8, 0x7E1000
	486 Move X8, [X8+3200]
	487 Move W9, [X31+80]
	488 Move X2, [X8]
	489 Move W8, [X31+28]
	490 Add W19, W9, 1
	491 Add W8, W9, W8
	492 Move [X31+476], W8
	493 Move X0, X21
	494 Move W1, W29
	495 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	496 Move W1, W0
	497 Move X8, 0x791000
	498 Move W2, [X31+476]
	499 Move X8, [X8+2136]
	500 Move X3, [X8]
	501 Move X0, [X31+112]
	502 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	503 Move X8, 0x7B1000
	504 Move W2, [X31+476]
	505 Move X8, [X8+2224]
	506 Move X3, [X8]
	507 Move X0, X21
	508 Move W1, W29
	509 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	510 Move [X31+80], W19
	511 Move X8, 0x7E2000
	512 Move X8, [X8+3336]
	513 Move X23, X29
	514 ShiftRight X23, 32
	515 And X23, X23, 0x7FFFFFFF
	516 Move X2, [X8]
	517 Move X0, [X31+120]
	518 Move W1, W23
	519 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	520 Move TEMP, X0
	521 And TEMP, TEMP, 1
	522 Compare TEMP, 1
	523 JumpIfEqual {593}
	524 Compare X21, 0
	525 JumpIfEqual {1182}
	526 Move X8, 0x7E1000
	527 Move X8, [X8+3200]
	528 Move X2, [X8]
	529 Move X0, X21
	530 Move W1, W23
	531 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	532 Move X8, 0x791000
	533 Move X8, [X8+2136]
	534 Move W2, W0
	535 Move X3, [X8]
	536 Move X0, [X31+120]
	537 Move W1, W23
	538 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	539 Move X8, 0x7E1000
	540 Move X8, [X8+3200]
	541 Move X2, [X8]
	542 Move TEMP, 0
	543 Not TEMP
	544 Move W8, TEMP
	545 Move [X31+472], W8
	546 Move X0, X21
	547 Move W1, W23
	548 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	549 Move W1, W0
	550 Move X8, 0x791000
	551 Move X8, [X8+2160]
	552 Move X3, [X8]
	553 Move X0, [X31+112]
	554 Add X2, X31, 472
	555 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	556 Move TEMP, X0
	557 And TEMP, TEMP, 1
	558 Compare TEMP, 1
	559 JumpIfNotEqual {567}
	560 Move X8, 0x7B1000
	561 Move W2, [X31+472]
	562 Move X8, [X8+2224]
	563 Move X3, [X8]
	564 Move X0, X21
	565 Move W1, W23
	566 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	567 Move X8, 0x7E1000
	568 Move X8, [X8+3200]
	569 Move W9, [X31+80]
	570 Move X2, [X8]
	571 Move W8, [X31+28]
	572 Add W19, W9, 1
	573 Add W8, W9, W8
	574 Move [X31+472], W8
	575 Move X0, X21
	576 Move W1, W23
	577 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	578 Move W1, W0
	579 Move X8, 0x791000
	580 Move W2, [X31+472]
	581 Move X8, [X8+2136]
	582 Move X3, [X8]
	583 Move X0, [X31+112]
	584 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	585 Move X8, 0x7B1000
	586 Move W2, [X31+472]
	587 Move X8, [X8+2224]
	588 Move X3, [X8]
	589 Move X0, X21
	590 Move W1, W23
	591 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	592 Move [X31+80], W19
	593 Move X8, 0x7E1000
	594 Move X8, [X8+3200]
	595 Move X2, [X8]
	596 Move X0, [X31+120]
	597 Move W1, W29
	598 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	599 Compare X21, 0
	600 JumpIfEqual {1162}
	601 Move X8, 0x791000
	602 Move X8, [X8+2136]
	603 Move W2, W0
	604 Move X3, [X8]
	605 Move X0, X21
	606 Move W1, W27
	607 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	608 Move X8, 0x7E1000
	609 Move X8, [X8+3200]
	610 Move X2, [X8]
	611 Move X0, [X31+120]
	612 Move W1, W23
	613 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	614 Move X8, 0x791000
	615 Move X8, [X8+2136]
	616 Add W19, W27, 1
	617 Move W2, W0
	618 Move X3, [X8]
	619 Move X0, X21
	620 Move W1, W19
	621 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	622 Move X8, 0x7E1000
	623 Move X8, [X8+3200]
	624 Move X2, [X8]
	625 Move X0, X21
	626 Move W1, W29
	627 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	628 Move X8, 0x791000
	629 Move X8, [X8+2136]
	630 Add W25, W27, 2
	631 Move W2, W0
	632 Move X3, [X8]
	633 Move X0, X21
	634 Move W1, W25
	635 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	636 Move [X31+96], X20
	637 Move X8, 0x7E1000
	638 Move X8, [X8+3200]
	639 Move X2, [X8]
	640 Move X0, X21
	641 Move W1, W23
	642 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	643 Move X8, 0x791000
	644 Move X8, [X8+2136]
	645 Add W24, W27, 3
	646 Move W2, W0
	647 Move X3, [X8]
	648 Move X0, X21
	649 Move W1, W24
	650 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	651 Move X28, [X31+40]
	652 Compare X28, 0
	653 JumpIfEqual {1174}
	654 Move X20, 0x791000
	655 Move X20, [X20+2136]
	656 Move X3, [X20]
	657 Move X0, X28
	658 Move W1, W25
	659 Move W2, W29
	660 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	661 Move X3, [X20]
	662 Move X0, X28
	663 Move W1, W24
	664 Move W2, W23
	665 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	666 Move X8, 0x7E3000
	667 Move X8, [X8+464]
	668 Move X2, [X8]
	669 Move X0, [X31+56]
	670 Move W1, W29
	671 Call List`1<Object>.get_Item, X0, X1
	672 Move X8, 0x7E2000
	673 Move X8, [X8+32]
	674 Move X28, X0
	675 Move X0, [X8]
	676 Call 0x1C17F10
	677 Move X29, X0
	678 Move X1, X28
	679 Move X2, X31
	680 Call Vertex..ctor, X0, X1
	681 Move X0, [X31+56]
	682 Move X9, 0x7E3000
	683 Move W10, [X0+28]
	684 Move X8, [X0+16]
	685 Move X9, [X9+448]
	686 Add W10, W10, 1
	687 Move X9, [X9]
	688 Move [X0+28], W10
	689 Compare X8, 0
	690 JumpIfEqual {1167}
	691 NotImplemented "Instruction LDRSW not yet implemented."
	692 Move W11, [X8+24]
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Add W9, W10, 1
	695 Add X8, X8, X10
	696 Move [X0+24], W9
	697 Move [X8+32], X29
	698 Move X8, [X9+32]
	699 Move X8, [X8+192]
	700 Move X2, [X8+112]
	701 Move X1, X29
	702 Call List`1<Object>.AddWithResize, X0, X1
	703 Move X8, 0x7E3000
	704 Move X8, [X8+464]
	705 Move X2, [X8]
	706 Move X29, [X31+56]
	707 Move W1, W23
	708 Move X0, X29
	709 Call List`1<Object>.get_Item, X0, X1
	710 Move X8, 0x7E2000
	711 Move X8, [X8+32]
	712 Move X28, X0
	713 Move X0, [X8]
	714 Call 0x1C17F10
	715 Move X23, X0
	716 Move X1, X28
	717 Move X2, X31
	718 Call Vertex..ctor, X0, X1
	719 Move X9, 0x7E3000
	720 Move W8, [X29+28]
	721 Move X10, [X29+16]
	722 Move X9, [X9+448]
	723 Add W8, W8, 1
	724 Move X9, [X9]
	725 Move [X29+28], W8
	726 Compare X10, 0
	727 JumpIfEqual {1177}
	728 NotImplemented "Instruction LDRSW not yet implemented."
	729 Move W12, [X10+24]
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Add W9, W11, 1
	732 Add X10, X10, X11
	733 Move [X29+24], W9
	734 Move [X10+32], X23
	735 Move X8, [X9+32]
	736 Move X8, [X8+192]
	737 Move X2, [X8+112]
	738 Move X0, X29
	739 Move X1, X23
	740 Call List`1<Object>.AddWithResize, X0, X1
	741 Move W9, [X29+24]
	742 Move W8, [X29+28]
	743 Move X10, 0x7E3000
	744 Move X11, [X29+16]
	745 Move X10, [X10+448]
	746 Add W8, W8, 1
	747 Move X10, [X10]
	748 Move [X29+28], W8
	749 Compare X11, 0
	750 JumpIfEqual {1171}
	751 Move W12, [X11+24]
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Add W10, W9, 1
	754 Add X9, X11, W9
	755 Move [X29+24], W10
	756 Move [X9+32], X31
	757 Move X8, [X10+32]
	758 Move X8, [X8+192]
	759 Move X2, [X8+112]
	760 Move X0, X29
	761 Move X1, X31
	762 Call List`1<Object>.AddWithResize, X0, X1
	763 Move W10, [X29+24]
	764 Move W8, [X29+28]
	765 Move X11, 0x7E3000
	766 Move X9, [X29+16]
	767 Move X11, [X11+448]
	768 Add W8, W8, 1
	769 Move X11, [X11]
	770 Move [X29+28], W8
	771 Compare X9, 0
	772 JumpIfEqual {1172}
	773 Move W8, [X9+24]
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Add W8, W10, 1
	776 Add X9, X9, W10
	777 Move [X29+24], W8
	778 Move [X9+32], X31
	779 Move X8, [X11+32]
	780 Move X8, [X8+192]
	781 Move X2, [X8+112]
	782 Move X0, X29
	783 Move X1, X31
	784 Call List`1<Object>.AddWithResize, X0, X1
	785 Move X8, 0x788000
	786 Move X8, [X8+3672]
	787 Move X0, [X8]
	788 Move W1, 6
	789 Call 0x1C17D6C
	790 Move X23, X0
	791 Compare X0, 0
	792 JumpIfEqual {1169}
	793 Move W8, [X23+24]
	794 Compare W8, 0
	795 JumpIfEqual {1168}
	796 NotImplemented "Instruction CMP not yet implemented."
	797 Move [X23+32], W27
	798 NotImplemented "Instruction CMP not yet implemented."
	799 Move [X23+36], W19
	800 NotImplemented "Instruction CMP not yet implemented."
	801 Move [X23+40], W25
	802 NotImplemented "Instruction CMP not yet implemented."
	803 Move [X23+44], W19
	804 NotImplemented "Instruction CMP not yet implemented."
	805 Move [X23+48], W24
	806 Move X8, [X31+96]
	807 Move [X23+52], W25
	808 Compare X8, 0
	809 JumpIfEqual {1178}
	810 Move W20, [X8+72]
	811 NotImplemented "Instruction LDUR not yet implemented."
	812 NotImplemented "Instruction LDUR not yet implemented."
	813 NotImplemented "Instruction MOVI not yet implemented."
	814 Move [X31+256], V2
	815 Move [X31+264], V2
	816 Move [X31+128], V1
	817 Move [X31+136], V0
	818 Move [X31+224], V1
	819 Move [X31+232], V0
	820 Add X0, X31, 256
	821 Add X1, X31, 224
	822 Move X2, X31
	823 Call AutoUnwrapSettings..ctor, X0, X1
	824 Move X8, 0x7E2000
	825 Move X8, [X8+1376]
	826 Move X0, [X8]
	827 Call 0x1C17F10
	828 Move V0, [X31+256]
	829 Move V1, [X31+272]
	830 Move X19, X0
	831 Move [X31+192], V0
	832 Move [X31+200], V1
	833 Add X3, X31, 192
	834 Move TEMP, 0
	835 Not TEMP
	836 Move W5, TEMP
	837 Move TEMP, 0
	838 Not TEMP
	839 Move W6, TEMP
	840 Move X1, X23
	841 Move W2, W20
	842 Move W4, W31
	843 Move W7, W31
	844 Move [X31], X31
	845 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	846 Move X0, [X31+48]
	847 Compare X0, 0
	848 JumpIfEqual {1165}
	849 Move X9, 0x7E1000
	850 Move W10, [X0+28]
	851 Move X8, [X0+16]
	852 Move X9, [X9+3600]
	853 Add W10, W10, 1
	854 Move X9, [X9]
	855 Move [X0+28], W10
	856 Compare X8, 0
	857 JumpIfEqual {1176}
	858 NotImplemented "Instruction LDRSW not yet implemented."
	859 Move W11, [X8+24]
	860 NotImplemented "Instruction CMP not yet implemented."
	861 Add W9, W10, 1
	862 Add X8, X8, X10
	863 Move [X0+24], W9
	864 Move [X8+32], X19
	865 Move X8, [X9+32]
	866 Move X8, [X8+192]
	867 Move X2, [X8+112]
	868 Move X1, X19
	869 Call List`1<Object>.AddWithResize, X0, X1
	870 Move X19, X31
	871 Move W20, 12
	872 Move W8, [X31+80]
	873 Move [X31+24], W8
	874 Move X8, 0x7E3000
	875 Move X8, [X8+3552]
	876 Move X1, [X8]
	877 Add X0, X31, 480
	878 Call Enumerator<EdgeLookup, Object>.Dispose, X0
	879 Compare X19, 0
	880 JumpIfNotEqual {1629}
	881 NotImplemented "Instruction CMP not yet implemented."
	882 Compare W20, 0
	883 JumpIfNotEqual {1576}
	884 Move X0, [X31+64]
	885 Compare X0, 0
	886 JumpIfEqual {1631}
	887 Move X8, 0x7E3000
	888 Move X8, [X8+3640]
	889 Move X1, [X8]
	890 Add X8, X31, 128
	891 Call HashSet`1<Object>.GetEnumerator, X0
	892 Move V0, [X31+8]
	893 Move X8, [X31+144]
	894 Move [X31+28], V0
	895 Move [X31+464], X8
	896 Move X8, 0x7E3000
	897 Move X8, [X8+3576]
	898 Move X1, [X8]
	899 Add X0, X31, 448
	900 Call Enumerator<Object>.MoveNext, X0
	901 Move TEMP, X0
	902 And TEMP, TEMP, 1
	903 Compare TEMP, 1
	904 JumpIfNotEqual {1139}
	905 Move X20, [X31+464]
	906 Compare X20, 0
	907 JumpIfEqual {1180}
	908 Move TEMP, 0
	909 Not TEMP
	910 Move W8, TEMP
	911 Move [X20+84], W8
	912 Move X0, [X31+32]
	913 Move X1, X20
	914 Move X2, X31
	915 Call Math.Normal, X0, X1
	916 Move [X31+64], V1
	917 Move [X31+72], V0
	918 Move V0.S[1], V1.S[0]
	919 Move V9, V2
	920 Move [X31+6], V0
	921 Move W25, 8
	922 Move X0, X20
	923 Move X1, X31
	924 Call Face.get_distinctIndexesInternal, X0
	925 Compare X0, 0
	926 JumpIfEqual {1147}
	927 NotImplemented "Instruction LDRSW not yet implemented."
	928 Subtract X24, X25, 8
	929 NotImplemented "Instruction CMP not yet implemented."
	930 Move X0, X20
	931 Move X1, X31
	932 Call Face.get_distinctIndexesInternal, X0
	933 Compare X0, 0
	934 JumpIfEqual {1150}
	935 Move W8, [X0+24]
	936 NotImplemented "Instruction CMP not yet implemented."
	937 Move X8, 0x7E2000
	938 Move W19, [X0]
	939 Move X8, [X8+3336]
	940 Move X2, [X8]
	941 Move X0, [X31+120]
	942 Move W1, W19
	943 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	944 Move TEMP, X0
	945 And TEMP, TEMP, 1
	946 Compare TEMP, 1
	947 JumpIfNotEqual {950}
	948 Compare X21, 0
	949 JumpIfNotEqual {985}
	950 Compare X21, 0
	951 JumpIfEqual {1154}
	952 Move X8, 0x7E1000
	953 Move X8, [X8+3200]
	954 Move X2, [X8]
	955 Move X0, X21
	956 Move W1, W19
	957 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	958 Move W1, W0
	959 Move X8, 0x7E2000
	960 Move X8, [X8+3336]
	961 Move X2, [X8]
	962 Move X0, [X31+112]
	963 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	964 Move TEMP, X0
	965 And TEMP, TEMP, 1
	966 Compare TEMP, 1
	967 JumpIfNotEqual {985}
	968 Move X23, 0x7E1000
	969 Move X23, [X23+3200]
	970 Move X2, [X23]
	971 Move X0, X21
	972 Move W1, W19
	973 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	974 Move W1, W0
	975 Move X2, [X23]
	976 Move X0, [X31+112]
	977 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	978 Move X8, 0x7B1000
	979 Move X8, [X8+2224]
	980 Move W2, W0
	981 Move X3, [X8]
	982 Move X0, X21
	983 Move W1, W19
	984 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	985 Move X8, 0x7E1000
	986 Move X8, [X8+3200]
	987 Move X2, [X8]
	988 Move X0, X21
	989 Move W1, W19
	990 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	991 Move W23, W0
	992 Compare X22, 0
	993 JumpIfEqual {1024}
	994 Move X0, X20
	995 Move X1, X31
	996 Call Face.get_distinctIndexesInternal, X0
	997 Compare X0, 0
	998 JumpIfEqual {1152}
	999 Move W8, [X0+24]
	1000 NotImplemented "Instruction CMP not yet implemented."
	1001 Move X8, 0x7E2000
	1002 Move W1, [X0]
	1003 Move X8, [X8+3336]
	1004 Move X2, [X8]
	1005 Move X0, X22
	1006 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	1007 Move TEMP, X0
	1008 And TEMP, TEMP, 1
	1009 Compare TEMP, 1
	1010 JumpIfNotEqual {1024}
	1011 Move X0, X20
	1012 Move X1, X31
	1013 Call Face.get_distinctIndexesInternal, X0
	1014 Compare X0, 0
	1015 JumpIfEqual {1160}
	1016 Move W8, [X0+24]
	1017 NotImplemented "Instruction CMP not yet implemented."
	1018 Move X8, 0x7B1000
	1019 Move W1, [X0]
	1020 Move X8, [X8+2216]
	1021 Move X2, [X8]
	1022 Move X0, X22
	1023 Call Dictionary`2<Int32, Int32>.Remove, X0, X1
	1024 Compare X26, 0
	1025 JumpIfEqual {1149}
	1026 Move X8, 0x7E3000
	1027 Move X8, [X8+3512]
	1028 Move X3, [X8]
	1029 Add X2, X31, 416
	1030 Move X0, X26
	1031 Move W1, W23
	1032 Call Dictionary`2<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.TryGetValue, X0, X1, X2
	1033 Move TEMP, X0
	1034 And TEMP, TEMP, 1
	1035 Compare TEMP, 1
	1036 JumpIfNotEqual {1063}
	1037 Move V0, [X31+416]
	1038 Move V1, [X31+424]
	1039 Move V2, [X31+6]
	1040 Move X0, [X31+440]
	1041 Add S1, S9, S1
	1042 Add V0, V2, V0
	1043 Move [X31+416], D0
	1044 Move [X31+424], S1
	1045 Compare X0, 0
	1046 JumpIfEqual {1155}
	1047 Move X9, 0x788000
	1048 Move W10, [X0+28]
	1049 Move X8, [X0+16]
	1050 Move X9, [X9+3600]
	1051 Add W10, W10, 1
	1052 Move X9, [X9]
	1053 Move [X0+28], W10
	1054 Compare X8, 0
	1055 JumpIfEqual {1153}
	1056 NotImplemented "Instruction LDRSW not yet implemented."
	1057 Move W11, [X8+24]
	1058 NotImplemented "Instruction CMP not yet implemented."
	1059 Add W9, W10, 1
	1060 Add X8, X8, X10
	1061 Move [X0+24], W9
	1062 Move [X8+32], W19
	1063 Move X8, 0x788000
	1064 Move X8, [X8+3632]
	1065 Move X0, [X8]
	1066 Call 0x1C17F10
	1067 Move X8, 0x78B000
	1068 Move X8, [X8+2928]
	1069 Move X24, X0
	1070 Move X1, [X8]
	1071 Call List`1<Int32>..ctor, X0
	1072 Compare X24, 0
	1073 JumpIfEqual {1158}
	1074 Move X9, 0x788000
	1075 Move W10, [X24+28]
	1076 Move X8, [X24+16]
	1077 Move X9, [X9+3600]
	1078 Add W10, W10, 1
	1079 Move X9, [X9]
	1080 Move [X24+28], W10
	1081 Compare X8, 0
	1082 JumpIfEqual {1157}
	1083 NotImplemented "Instruction LDRSW not yet implemented."
	1084 Move W11, [X8+24]
	1085 NotImplemented "Instruction CMP not yet implemented."
	1086 Add W9, W10, 1
	1087 Add X8, X8, X10
	1088 Move [X24+24], W9
	1089 Move [X8+32], W19
	1090 Move X8, [X9+32]
	1091 Move X8, [X8+192]
	1092 Move X2, [X8+112]
	1093 Move W1, W19
	1094 Call List`1<Int32>.AddWithResize, X0, X1
	1095 Move X8, 0x7E3000
	1096 Move V0, [X31+416]
	1097 Move V1, [X31+432]
	1098 Move X8, [X8+3528]
	1099 Move [X31+560], V0
	1100 Move [X31+568], V1
	1101 Move X3, [X8]
	1102 Add X2, X31, 560
	1103 Move X0, X26
	1104 Move W1, W23
	1105 Call Dictionary`2<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.set_Item, X0, X1, X2
	1106 Move X8, [X9+32]
	1107 Move X8, [X8+192]
	1108 Move X2, [X8+112]
	1109 Move X0, X24
	1110 Move W1, W19
	1111 Call List`1<Int32>.AddWithResize, X0, X1
	1112 Move X8, 0x7E3000
	1113 Move X8, [X8+3688]
	1114 NotImplemented "Instruction MOVI not yet implemented."
	1115 Move [X31+128], V0
	1116 Move [X31+136], V0
	1117 Move X2, [X8]
	1118 Move V1, [X31+64]
	1119 Move V0, [X31+80]
	1120 Add X0, X31, 128
	1121 Move V2, V9
	1122 Move V5, V9
	1123 Move V3, V0
	1124 Move V4, V1
	1125 Move X1, X24
	1126 Call 0x25E8A20, X0, X1, X2, X3
	1127 Move X8, 0x7E3000
	1128 Move V0, [X31+128]
	1129 Move V1, [X31+144]
	1130 Move X8, [X8+3488]
	1131 Move [X31+592], V0
	1132 Move [X31+600], V1
	1133 Move X3, [X8]
	1134 Add X2, X31, 592
	1135 Move X0, X26
	1136 Move W1, W23
	1137 Call Dictionary`2<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.Add, X0, X1, X2
	1138 Add X25, X25, 1
	1139 Move X19, X31
	1140 Move X8, 0x7E3000
	1141 Move X8, [X8+3544]
	1142 Move X1, [X8]
	1143 Add X0, X31, 448
	1144 Call Enumerator<Object>.Dispose, X0
	1145 Compare X19, 0
	1146 JumpIfEqual {373}
	1147 Call 0x1C17F20
	1148 Call 0x1C17F28
	1149 Call 0x1C17F20
	1150 Call 0x1C17F20
	1151 Call 0x1C17F28
	1152 Call 0x1C17F20
	1153 Call 0x1C17F20
	1154 Call 0x1C17F20
	1155 Call 0x1C17F20
	1156 Call 0x1C17F20
	1157 Call 0x1C17F20
	1158 Call 0x1C17F20
	1159 Call 0x1C17F28
	1160 Call 0x1C17F20
	1161 Call 0x1C17F20
	1162 Move X29, [X31+56]
	1163 Call 0x1C17F20
	1164 Call 0x1C17F28
	1165 Call 0x1C17F20
	1166 Call 0x1C17F28
	1167 Call 0x1C17F20
	1168 Call 0x1C17F28
	1169 Call 0x1C17F20
	1170 Call 0x1C17F28
	1171 Call 0x1C17F20
	1172 Call 0x1C17F20
	1173 Call 0x1C17F28
	1174 Move X29, [X31+56]
	1175 Call 0x1C17F20
	1176 Call 0x1C17F20
	1177 Call 0x1C17F20
	1178 Call 0x1C17F20
	1179 Call 0x1C17F28
	1180 Call 0x1C17F20
	1181 Call 0x1C17F20
	1182 Call 0x1C17F20
	1183 Move X29, [X31+56]
	1184 Move X23, X1
	1185 Move X20, X0
	1186 Move [X31+80], W19
	1187 Move W8, [X31+24]
	1188 Move X23, X1
	1189 Move X20, X0
	1190 Move [X31+80], W8
	1191 Move X29, [X31+56]
	1192 Move X23, X1
	1193 Move X20, X0
	1194 NotImplemented "Instruction CMP not yet implemented."
	1195 Move X0, X20
	1196 Call 0x3EB2AD0
	1197 Move X19, [X0]
	1198 Call 0x3EB2AE0
	1199 Move W20, W31
	1200 Move X23, X1
	1201 Move X20, X0
	1202 NotImplemented "Instruction CMP not yet implemented."
	1203 Move X0, X20
	1204 Call 0x3EB2AD0
	1205 Move X19, [X0]
	1206 Call 0x3EB2AE0
	1207 Move X0, X31
	1208 Add X31, X31, 624
	1209 Move X20, [X31+144]
	1210 Move X19, [X31+152]
	1211 Move X22, [X31+128]
	1212 Move X21, [X31+136]
	1213 Move X24, [X31+112]
	1214 Move X23, [X31+120]
	1215 Move X26, [X31+96]
	1216 Move X25, [X31+104]
	1217 Move X28, [X31+80]
	1218 Move X27, [X31+88]
	1219 Move X29, [X31+64]
	1220 Move X30, [X31+72]
	1221 Move D9, [X31+48]
	1222 Move D8, [X31+56]
	1223 Move D11, [X31+32]
	1224 Move D10, [X31+40]
	1225 Move D13, [X31+16]
	1226 Move D12, [X31+24]
	1227 Move D15, [X31+160]
	1228 Move D14, [X31+168]
	1229 Return X0
	1230 Move X8, 0x7E2000
	1231 Move X8, [X8+3568]
	1232 Add X0, X31, 528
	1233 Move X1, [X8]
	1234 Call Enumerator<Object>.Dispose, X0
	1235 Compare X26, 0
	1236 JumpIfEqual {1638}
	1237 Move X8, 0x7E2000
	1238 Move X8, [X8+3496]
	1239 Move X0, X26
	1240 Move X1, [X8]
	1241 Add X8, X31, 128
	1242 Call Dictionary`2<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.GetEnumerator, X0
	1243 Move V0, [X31+128]
	1244 Move V1, [X31+144]
	1245 Move X24, 0x7E2000
	1246 Move X20, 0x786000
	1247 Move X10, -48771072
	1248 Move X29, 0x7B1000
	1249 Move X26, 0x7B1000
	1250 Move V2, [X31+160]
	1251 Move V3, [X31+176]
	1252 Move X24, [X24+3584]
	1253 Move X20, [X20+1448]
	1254 Move X29, [X29+2896]
	1255 Move X26, [X26+2856]
	1256 Move [X31+352], V0
	1257 Move [X31+360], V1
	1258 Move V0, [X10+1096]
	1259 Move X9, -48775168
	1260 Move X11, -48771072
	1261 Move V4, [X9+4072]
	1262 Move [X31+96], S0
	1263 Move V0, [X11+260]
	1264 Move X8, -48771072
	1265 Move [X31+120], S4
	1266 Move [X31+384], V2
	1267 Move [X31+392], V3
	1268 Move [X31+112], S0
	1269 Move X25, 0x7B1000
	1270 Move V12, [X8+380]
	1271 Move X25, [X25+2840]
	1272 Move X27, 0xA6B000
	1273 Move W28, 1
	1274 Move X1, [X24]
	1275 Add X0, X31, 352
	1276 Call Enumerator<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.MoveNext, X0
	1277 Move TEMP, X0
	1278 And TEMP, TEMP, 1
	1279 Compare TEMP, 1
	1280 JumpIfNotEqual {1450}
	1281 Move X19, [X31+400]
	1282 Compare X19, 0
	1283 JumpIfEqual {1635}
	1284 Move V10, [X31+392]
	1285 Move V8, [X31+396]
	1286 Move V14, [X31+388]
	1287 Move V9, [X31+384]
	1288 Move V11, [X31+380]
	1289 Move V13, [X31+376]
	1290 Move W8, [X27+1925]
	1291 Move V15, [X19+24]
	1292 Compare W8, 0
	1293 JumpIfNotEqual {1297}
	1294 Move X0, X20
	1295 Call 0x1C17CF4
	1296 Move [X27+1925], W28
	1297 Move X0, [X20]
	1298 Move W8, [X0+224]
	1299 Compare W8, 0
	1300 JumpIfNotEqual {1302}
	1301 Call 0x1C17DFC
	1302 NotImplemented "Instruction SCVTF not yet implemented."
	1303 NotImplemented "Instruction FDIV not yet implemented."
	1304 NotImplemented "Instruction FDIV not yet implemented."
	1305 NotImplemented "Instruction FDIV not yet implemented."
	1306 Multiply S3, S0, S0
	1307 Multiply S4, S1, S1
	1308 Add S3, S3, S4
	1309 Multiply S4, S2, S2
	1310 Add S3, S4, S3
	1311 NotImplemented "Instruction FSQRT not yet implemented."
	1312 NotImplemented "Instruction FCMP not yet implemented."
	1313 NotImplemented "Instruction FDIV not yet implemented."
	1314 NotImplemented "Instruction FDIV not yet implemented."
	1315 NotImplemented "Instruction FDIV not yet implemented."
	1316 Move X8, 0xA6B000
	1317 Move W8, [X8+1923]
	1318 Compare W8, 0
	1319 JumpIfNotEqual {1325}
	1320 Move X0, 0x786000
	1321 Move X0, [X0+1440]
	1322 Call 0x1C17CF4
	1323 Move X8, 0xA6B000
	1324 Move [X8+1923], W28
	1325 Move X8, 0x786000
	1326 Move X8, [X8+1440]
	1327 Move X8, [X8]
	1328 Move X8, [X8+184]
	1329 Move S11, [X8]
	1330 Move S13, [X8+4]
	1331 Move V15, [X8+8]
	1332 Move W8, [X31+20]
	1333 Move S9, 1
	1334 Move TEMP, X8
	1335 And TEMP, TEMP, 1
	1336 Compare TEMP, 1
	1337 JumpIfNotEqual {1392}
	1338 Move X8, 0xA6B000
	1339 Move W8, [X8+2596]
	1340 Compare W8, 0
	1341 JumpIfNotEqual {1346}
	1342 Move X0, X20
	1343 Call 0x1C17CF4
	1344 Move X8, 0xA6B000
	1345 Move [X8+2596], W28
	1346 Move X0, [X20]
	1347 Move W8, [X0+224]
	1348 Compare W8, 0
	1349 JumpIfNotEqual {1351}
	1350 Call 0x1C17DFC
	1351 Multiply S0, S11, S11
	1352 Multiply S1, S13, S13
	1353 Multiply S3, S14, S14
	1354 Multiply S4, S10, S10
	1355 Multiply S2, S15, S15
	1356 Multiply S5, S8, S8
	1357 Add S0, S0, S1
	1358 Add S1, S3, S4
	1359 Add S0, S2, S0
	1360 Add S1, S5, S1
	1361 Multiply S0, S1, S0
	1362 Move V1, [X31+120]
	1363 NotImplemented "Instruction FSQRT not yet implemented."
	1364 NotImplemented "Instruction FCMP not yet implemented."
	1365 Move S1, W31
	1366 Move X0, [X20]
	1367 Multiply S1, S14, S11
	1368 Multiply S2, S10, S13
	1369 Add S1, S1, S2
	1370 Multiply S2, S8, S15
	1371 Add S1, S2, S1
	1372 Move W8, [X0+224]
	1373 NotImplemented "Instruction FDIV not yet implemented."
	1374 Move S1, 1
	1375 Move S2, -1
	1376 NotImplemented "Instruction FMIN not yet implemented."
	1377 NotImplemented "Instruction FCMP not yet implemented."
	1378 NotImplemented "Instruction FCSEL not yet implemented."
	1379 Compare W8, 0
	1380 JumpIfNotEqual {1382}
	1381 Call 0x1C17DFC
	1382 NotImplemented "Instruction FCVT not yet implemented."
	1383 Call 0x3EB2B80
	1384 Move V1, [X31+96]
	1385 NotImplemented "Instruction INVALID not yet implemented."
	1386 Multiply S1, S0, S1
	1387 Move V0, [X31+112]
	1388 Multiply S0, S1, S0
	1389 Move X0, X31
	1390 Call Math.Secant, V0
	1391 Move V9, V0
	1392 Move X1, [X29]
	1393 Add X8, X31, 128
	1394 Move X0, X19
	1395 Call List`1<Int32>.GetEnumerator, X0
	1396 Move V0, [X31+16]
	1397 Move V1, [X31+8]
	1398 Move X8, [X31+144]
	1399 Multiply S0, S9, S0
	1400 Multiply S8, S11, S0
	1401 Multiply S9, S13, S0
	1402 Multiply S10, S15, S0
	1403 Move [X31+20], V1
	1404 Move [X31+336], X8
	1405 Move X1, [X26]
	1406 Add X0, X31, 320
	1407 Call Enumerator<Int32>.MoveNext, X0
	1408 Move TEMP, X0
	1409 And TEMP, TEMP, 1
	1410 Compare TEMP, 1
	1411 JumpIfNotEqual {1430}
	1412 Move X0, [X31+56]
	1413 Compare X0, 0
	1414 JumpIfEqual {1440}
	1415 Move X8, 0x7E2000
	1416 Move W1, [X31+336]
	1417 Move X8, [X8+464]
	1418 Move X2, [X8]
	1419 Call List`1<Object>.get_Item, X0, X1
	1420 Compare X0, 0
	1421 JumpIfEqual {1441}
	1422 Move S0, [X0+16]
	1423 Move S1, [X0+20]
	1424 Move V2, [X0+24]
	1425 Add S0, S8, S0
	1426 Add S1, S9, S1
	1427 Add S2, S10, S2
	1428 Move X1, X31
	1429 Call Vertex.set_position, X0, X1
	1430 Move X23, X31
	1431 Move W19, 22
	1432 Move X1, [X25]
	1433 Add X0, X31, 320
	1434 Call Enumerator<Int32>.Dispose, X0
	1435 Compare X23, 0
	1436 JumpIfNotEqual {1636}
	1437 NotImplemented "Instruction CMP not yet implemented."
	1438 Compare W19, 0
	1439 JumpIfEqual {1274}
	1440 Call 0x1C17F20
	1441 Call 0x1C17F20
	1442 Move X19, X1
	1443 NotImplemented "Instruction CMP not yet implemented."
	1444 Move [X31+80], X0
	1445 Move X0, [X31+80]
	1446 Call 0x3EB2AD0
	1447 Move X23, [X0]
	1448 Call 0x3EB2AE0
	1449 Move W19, W31
	1450 Move X8, 0x7E2000
	1451 Move X8, [X8+3560]
	1452 Add X0, X31, 352
	1453 Move X1, [X8]
	1454 Call Enumerator<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.Dispose, X0
	1455 Move X27, [X31+32]
	1456 Move X0, [X31+40]
	1457 Move X26, [X31+56]
	1458 Compare X0, 0
	1459 JumpIfEqual {1638}
	1460 Move X8, 0x7E2000
	1461 Move X8, [X8+2176]
	1462 Move X1, [X8]
	1463 Add X8, X31, 128
	1464 Call Dictionary`2<Int32, Int32>.GetEnumerator, X0
	1465 Move V0, [X31+128]
	1466 Move V1, [X31+144]
	1467 Move X24, 0x7E2000
	1468 Move X24, [X24+2192]
	1469 Move X25, 0x7E2000
	1470 Move [X31+288], V0
	1471 Move [X31+296], V1
	1472 Move X25, [X25+3680]
	1473 Move X1, [X24]
	1474 Add X0, X31, 288
	1475 Call Enumerator<Int32, Int32>.MoveNext, X0
	1476 Move TEMP, X0
	1477 And TEMP, TEMP, 1
	1478 Compare TEMP, 1
	1479 JumpIfNotEqual {1505}
	1480 Compare X26, 0
	1481 JumpIfEqual {1634}
	1482 Move X8, 0x7E2000
	1483 Move X19, [X31+304]
	1484 Move X8, [X8+464]
	1485 Move X1, X19
	1486 ShiftRight X1, 32
	1487 And X1, X1, 0x7FFFFFFF
	1488 Move X2, [X8]
	1489 Move X0, X26
	1490 Call List`1<Object>.get_Item, X0, X1
	1491 Move X8, 0x7E1000
	1492 Move X8, [X8+32]
	1493 Move X23, X0
	1494 Move X0, [X8]
	1495 Call 0x1C17F10
	1496 Move X20, X0
	1497 Move X1, X23
	1498 Move X2, X31
	1499 Call Vertex..ctor, X0, X1
	1500 Move X3, [X25]
	1501 Move X0, X26
	1502 Move W1, W19
	1503 Move X2, X20
	1504 Call List`1<Object>.set_Item, X0, X1, X2
	1505 Move X8, 0x7E2000
	1506 Move X8, [X8+2184]
	1507 Add X0, X31, 288
	1508 Move X1, [X8]
	1509 Call Enumerator<Int32, Int32>.Dispose, X0
	1510 Move X0, X27
	1511 Move X1, X26
	1512 Move W2, W31
	1513 Move X3, X31
	1514 Call ProBuilderMesh.SetVertices, X0, X1, X2
	1515 Move X0, X27
	1516 Move X1, X31
	1517 Call ProBuilderMesh.get_faceCount, X0
	1518 Move X8, [X31+48]
	1519 Compare X8, 0
	1520 JumpIfEqual {1638}
	1521 Move X9, 0x7E1000
	1522 Move W8, [X8+24]
	1523 Move X9, [X9+1008]
	1524 Move W23, W0
	1525 Add W24, W8, W23
	1526 Move X0, [X9]
	1527 Move W1, W24
	1528 Call 0x1C17D6C
	1529 Move X8, [X27+40]
	1530 Move X19, X0
	1531 Move W1, W31
	1532 Move X2, X19
	1533 Move X0, X8
	1534 Move W3, W31
	1535 Move W4, W23
	1536 Move X5, X31
	1537 Call Array.Copy, X0, X1, X2, X3, X4
	1538 NotImplemented "Instruction CMP not yet implemented."
	1539 Move X26, 0x7E1000
	1540 Move X26, [X26+3144]
	1541 Move X8, W24
	1542 Add X9, X19, W23
	1543 Move X20, X31
	1544 Move W24, W23
	1545 Add X25, X9, 32
	1546 Subtract X23, X8, W23
	1547 Move X2, [X26]
	1548 Move X0, [X31+48]
	1549 Move W1, W20
	1550 Call List`1<Object>.get_Item, X0, X1
	1551 Compare X19, 0
	1552 JumpIfEqual {1638}
	1553 Move W8, [X19+24]
	1554 Add X9, X24, X20
	1555 NotImplemented "Instruction CMP not yet implemented."
	1556 Move [X25], X0
	1557 Add X20, X20, 1
	1558 NotImplemented "Instruction CMP not yet implemented."
	1559 Move X0, X27
	1560 Move X1, X19
	1561 Move X2, X31
	1562 Call ProBuilderMesh.set_faces, X0, X1
	1563 Move X0, X27
	1564 Move X1, X21
	1565 Move X2, X31
	1566 Call ProBuilderMesh.SetSharedVertices, X0, X1
	1567 Move X0, X27
	1568 Move X1, X22
	1569 Move X2, X31
	1570 Call ProBuilderMesh.SetSharedTextures, X0, X1
	1571 Move X8, 0x7E1000
	1572 Move X8, [X8+3128]
	1573 Move X0, [X31+48]
	1574 Move X1, [X8]
	1575 Call List`1<Object>.ToArray, X0
	1576 Move X8, 0x7E2000
	1577 Move X8, [X8+3568]
	1578 Add X0, X31, 528
	1579 Move X1, [X8]
	1580 Call Enumerator<Object>.Dispose, X0
	1581 Move X8, 0x7E2000
	1582 Move X8, [X8+3560]
	1583 Add X0, X31, 352
	1584 Move X1, [X8]
	1585 Call Enumerator<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.Dispose, X0
	1586 Move X19, X31
	1587 Move X8, 0x7E2000
	1588 Move X8, [X8+3544]
	1589 Move X1, [X8]
	1590 Add X0, X31, 448
	1591 Call Enumerator<Object>.Dispose, X0
	1592 Compare X19, 0
	1593 JumpIfNotEqual {1642}
	1594 NotImplemented "Instruction CMP not yet implemented."
	1595 Move X0, X20
	1596 Call 0x3EB2AD0
	1597 Move X19, [X0]
	1598 Call 0x3EB2AE0
	1599 Move X8, 0x7E2000
	1600 Move X8, [X8+3568]
	1601 Add X0, X31, 528
	1602 Move X1, [X8]
	1603 Call Enumerator<Object>.Dispose, X0
	1604 Compare X19, 0
	1605 JumpIfEqual {1235}
	1606 Move X0, X19
	1607 Call 0x1C17F18
	1608 Move X19, X31
	1609 Move X8, 0x7E2000
	1610 Move X8, [X8+3552]
	1611 Move X1, [X8]
	1612 Add X0, X31, 480
	1613 Call Enumerator<EdgeLookup, Object>.Dispose, X0
	1614 Compare X19, 0
	1615 JumpIfEqual {1594}
	1616 Move X0, X19
	1617 Call 0x1C17F18
	1618 Move X23, X31
	1619 Move X1, [X25]
	1620 Add X0, X31, 320
	1621 Call Enumerator<Int32>.Dispose, X0
	1622 Compare X23, 0
	1623 JumpIfEqual {1664}
	1624 Move X0, X23
	1625 Call 0x1C17F18
	1626 Call 0x1C17F20
	1627 Call 0x1C17F20
	1628 Call 0x1C17F20
	1629 Move X0, X19
	1630 Call 0x1C17F18
	1631 Call 0x1C17F20
	1632 Move X0, X19
	1633 Call 0x1C17F18
	1634 Call 0x1C17F20
	1635 Call 0x1C17F20
	1636 Move X0, X23
	1637 Call 0x1C17F18
	1638 Call 0x1C17F20
	1639 Call 0x1C17F28
	1640 Move [X31+80], X20
	1641 Move X19, X31
	1642 Move X0, X19
	1643 Call 0x1C17F18
	1644 Move X19, X1
	1645 Move [X31+80], X0
	1646 Move [X31+80], X0
	1647 Move X8, 0x7E2000
	1648 Move X8, [X8+3568]
	1649 Move X1, [X8]
	1650 Add X0, X31, 528
	1651 Call Enumerator<Object>.Dispose, X0
	1652 Compare X19, 0
	1653 JumpIfNotEqual {1656}
	1654 Move X0, [X31+80]
	1655 Call 0x1D2D690
	1656 Move X0, X19
	1657 Call 0x1C17F18
	1658 Move X23, X1
	1659 Move X20, X0
	1660 Move X23, X1
	1661 Move X20, X0
	1662 Move X19, X1
	1663 Move [X31+80], X0
	1664 NotImplemented "Instruction CMP not yet implemented."
	1665 Move X0, [X31+80]
	1666 Call 0x3EB2AD0
	1667 Move X19, [X0]
	1668 Call 0x3EB2AE0
	1669 Move X8, 0x7E2000
	1670 Move X8, [X8+3560]
	1671 Add X0, X31, 352
	1672 Move X1, [X8]
	1673 Call Enumerator<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.Dispose, X0
	1674 Compare X19, 0
	1675 JumpIfEqual {1455}
	1676 Move X19, X31
	1677 Move [X31+80], X0
	1678 Move X8, 0x7E2000
	1679 Move X8, [X8+3560]
	1680 Move X1, [X8]
	1681 Add X0, X31, 352
	1682 Call Enumerator<Int32, SimpleTuple`3<Vector3, Vector3, Object>>.Dispose, X0
	1683 Compare X19, 0
	1684 JumpIfEqual {1654}
	1685 Move X0, X19
	1686 Call 0x1C17F18
	1687 Move X23, X1
	1688 Move X20, X0
	1689 NotImplemented "Instruction CMP not yet implemented."
	1690 Move [X31+80], X0
	1691 Move X0, [X31+80]
	1692 Call 0x3EB2AD0
	1693 Move X19, [X0]
	1694 Call 0x3EB2AE0
	1695 Move X8, 0x7E2000
	1696 Move X8, [X8+2184]
	1697 Add X0, X31, 288
	1698 Move X1, [X8]
	1699 Call Enumerator<Int32, Int32>.Dispose, X0
	1700 Move X27, [X31+32]
	1701 Move X26, [X31+56]
	1702 Compare X19, 0
	1703 JumpIfEqual {1510}
	1704 Move X19, X31
	1705 Move [X31+80], X0
	1706 Move X8, 0x7E2000
	1707 Move X8, [X8+2184]
	1708 Move X1, [X8]
	1709 Add X0, X31, 288
	1710 Call Enumerator<Int32, Int32>.Dispose, X0
	1711 Compare X19, 0
	1712 JumpIfEqual {1654}
	1713 Move X0, X19
	1714 Call 0x1C17F18
	1715 Call 0x1991590

Method: System.Collections.Generic.List`1<System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face>> GetFaceGroups(System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> wings)

Disassembly:
	0x039705F0 CBZ X20, 0x3970F4C
	0x039705F4 LDR W9, [X20 + 0x18]
	0x039705F8 CMP W29, W9
	0x039705FC B.CS 0x3970F48
	0x03970600 LDR W10, [X26]
	0x03970604 UBFM X11, X29, 0x20, 0x1F
	0x03970608 ADD X11, X20, X11, 0x1E, ASR
	0x0397060C CMP W25, W8
	0x03970610 STR W10, [X11 + 0x20]
	0x03970614 B.CS 0x3970F48
	0x03970618 LDR W25, [X31 + 0x20]
	0x0397061C LDR X26, [X31 + 0x30]
	0x03970620 ADD W10, W29, 0x1
	0x03970624 CMP W10, W9
	0x03970628 B.CS 0x3970F48
	0x0397062C LDR W11, [X24]
	0x03970630 ADD X10, X20, W10, 0x2, SXTW
	0x03970634 CMP W23, W8
	0x03970638 STR W11, [X10 + 0x20]
	0x0397063C B.CS 0x3970F48
	0x03970640 LDR X24, [X31 + 0x28]
	0x03970644 ADD W8, W29, 0x2
	0x03970648 CMP W8, W9
	0x0397064C B.CS 0x3970F48
	0x03970650 LDR W9, [X22]
	0x03970654 ADD X8, X20, W8, 0x2, SXTW
	0x03970658 MOV X0, X28
	0x0397065C MOV W1, W21
	0x03970660 STR W9, [X8 + 0x20]
	0x03970664 ADRP X8, 0x7DE000
	0x03970668 LDR X8, [X8 + 0xC48]
	0x0397066C LDR X2, [X8]
	0x03970670 BL 0x301BCCC
	0x03970674 ADRP X29, 0x7C5000
	0x03970678 LDR X29, [X29 + 0x5B0]
	0x0397067C CBZ X0, 0x3970F4C
	0x03970680 MOV X1, X20
	0x03970684 MOV X2, X31
	0x03970688 BL 0x38FFBA8
	0x0397068C LDR X0, [X31 + 0x58]
	0x03970690 B 0x3970D30
	0x03970694 CMP W27, W8
	0x03970698 B.CS 0x3970F48
	0x0397069C ADD X21, X19, W27, 0x2, SXTW
	0x039706A0 LDRSW X8, [X21 + 0x20]!
	0x039706A4 CBZ X24, 0x3970F4C
	0x039706A8 LDR W9, [X24 + 0x18]
	0x039706AC CMP W8, W9
	0x039706B0 B.CS 0x3970F48
	0x039706B4 CBZ X0, 0x3970F4C
	0x039706B8 MOVZ W9, 0xC
	0x039706BC MADD X8, X8, X9, X24
	0x039706C0 ADRP X9, 0x787000
	0x039706C4 LDR W10, [X0 + 0x1C]
	0x039706C8 LDP S0, S1, [X8 + 0x20]
	0x039706CC LDR V2, [X8 + 0x28]
	0x039706D0 LDR X8, [X0 + 0x10]
	0x039706D4 LDR X9, [X9 + 0x3B8]
	0x039706D8 ADD W10, W10, 0x1
	0x039706DC LDR X9, [X9]
	0x039706E0 STR W10, [X0 + 0x1C]
	0x039706E4 CBZ X8, 0x3970F4C
	0x039706E8 LDRSW X10, [X0 + 0x18]
	0x039706EC LDR W11, [X8 + 0x18]
	0x039706F0 CMP W10, W11
	0x039706F4 B.CS 0x3970714
	0x039706F8 MOVZ W11, 0xC
	0x039706FC ADD W9, W10, 0x1
	0x03970700 MADD X8, X10, X11, X8
	0x03970704 STR W9, [X0 + 0x18]
	0x03970708 STP S0, S1, [X8 + 0x20]
	0x0397070C STR S2, [X8 + 0x28]
	0x03970710 B 0x397072C
	0x03970714 LDR X8, [X9 + 0x20]
	0x03970718 LDR X0, [X31 + 0x58]
	0x0397071C LDR X8, [X8 + 0xC0]
	0x03970720 LDR X1, [X8 + 0x70]
	0x03970724 BL 0x30CC1B4
	0x03970728 LDR X0, [X31 + 0x58]
	0x0397072C LDR W8, [X19 + 0x18]
	0x03970730 ADD W20, W27, 0x1
	0x03970734 CMP W20, W8
	0x03970738 B.CS 0x3970F48
	0x0397073C ADD X23, X19, W20, 0x2, SXTW
	0x03970740 LDRSW X8, [X23 + 0x20]!
	0x03970744 LDR W9, [X24 + 0x18]
	0x03970748 CMP W8, W9
	0x0397074C B.CS 0x3970F48
	0x03970750 MOVZ W9, 0xC
	0x03970754 MADD X8, X8, X9, X24
	0x03970758 ADRP X10, 0x787000
	0x0397075C LDR W9, [X0 + 0x1C]
	0x03970760 LDP S0, S1, [X8 + 0x20]
	0x03970764 LDR V2, [X8 + 0x28]
	0x03970768 LDR X8, [X0 + 0x10]
	0x0397076C LDR X10, [X10 + 0x3B8]
	0x03970770 ADD W9, W9, 0x1
	0x03970774 LDR X10, [X10]
	0x03970778 STR W9, [X0 + 0x1C]
	0x0397077C CBZ X8, 0x3970F4C
	0x03970780 LDRSW X9, [X0 + 0x18]
	0x03970784 LDR W11, [X8 + 0x18]
	0x03970788 CMP W9, W11
	0x0397078C B.CS 0x39707AC
	0x03970790 MOVZ W11, 0xC
	0x03970794 ADD W10, W9, 0x1
	0x03970798 MADD X8, X9, X11, X8
	0x0397079C STR W10, [X0 + 0x18]
	0x039707A0 STP S0, S1, [X8 + 0x20]
	0x039707A4 STR S2, [X8 + 0x28]
	0x039707A8 B 0x39707C4
	0x039707AC LDR X8, [X10 + 0x20]
	0x039707B0 LDR X0, [X31 + 0x58]
	0x039707B4 LDR X8, [X8 + 0xC0]
	0x039707B8 LDR X1, [X8 + 0x70]
	0x039707BC BL 0x30CC1B4
	0x039707C0 LDR X0, [X31 + 0x58]
	0x039707C4 LDR W8, [X19 + 0x18]
	0x039707C8 ADD W29, W27, 0x2
	0x039707CC CMP W29, W8
	0x039707D0 B.CS 0x3970F48
	0x039707D4 ADD X22, X19, W29, 0x2, SXTW
	0x039707D8 LDRSW X8, [X22 + 0x20]!
	0x039707DC LDR W9, [X24 + 0x18]
	0x039707E0 CMP W8, W9
	0x039707E4 B.CS 0x3970F48
	0x039707E8 MOVZ W9, 0xC
	0x039707EC MADD X8, X8, X9, X24
	0x039707F0 ADRP X10, 0x787000
	0x039707F4 LDR W9, [X0 + 0x1C]
	0x039707F8 LDP S0, S1, [X8 + 0x20]
	0x039707FC LDR V2, [X8 + 0x28]
	0x03970800 LDR X8, [X0 + 0x10]
	0x03970804 LDR X10, [X10 + 0x3B8]
	0x03970808 ADD W9, W9, 0x1
	0x0397080C LDR X10, [X10]
	0x03970810 STR W9, [X0 + 0x1C]
	0x03970814 CBZ X8, 0x3970F4C
	0x03970818 LDRSW X9, [X0 + 0x18]
	0x0397081C LDR W11, [X8 + 0x18]
	0x03970820 CMP W9, W11
	0x03970824 B.CS 0x3970844
	0x03970828 MOVZ W11, 0xC
	0x0397082C ADD W10, W9, 0x1
	0x03970830 MADD X8, X9, X11, X8
	0x03970834 STR W10, [X0 + 0x18]
	0x03970838 STP S0, S1, [X8 + 0x20]
	0x0397083C STR S2, [X8 + 0x28]
	0x03970840 B 0x3970854
	0x03970844 LDR X8, [X10 + 0x20]
	0x03970848 LDR X8, [X8 + 0xC0]
	0x0397084C LDR X1, [X8 + 0x70]
	0x03970850 BL 0x30CC1B4
	0x03970854 LDR X0, [X31 + 0x50]
	0x03970858 CBZ X26, 0x397088C
	0x0397085C LDR W8, [X19 + 0x18]
	0x03970860 CMP W27, W8
	0x03970864 B.CS 0x3970F48
	0x03970868 LDRSW X8, [X21]
	0x0397086C LDR W9, [X26 + 0x18]
	0x03970870 CMP W8, W9
	0x03970874 B.CS 0x3970F48
	0x03970878 ADD X8, X26, X8, 0x4, LSL
	0x0397087C LDP S0, S1, [X8 + 0x20]
	0x03970880 LDP S2, S3, [X8 + 0x28]
	0x03970884 CBNZ X0, 0x39708A0
	0x03970888 B 0x3970F4C
	0x0397088C FMOV S0, 1
	0x03970890 FMOV S1, 1
	0x03970894 FMOV S2, 1
	0x03970898 FMOV S3, 1
	0x0397089C CBZ X0, 0x3970F4C
	0x039708A0 ADRP X8, 0x7DD000
	0x039708A4 LDR W10, [X0 + 0x1C]
	0x039708A8 LDR X9, [X0 + 0x10]
	0x039708AC LDR X8, [X8 + 0xC10]
	0x039708B0 ADD W10, W10, 0x1
	0x039708B4 LDR X8, [X8]
	0x039708B8 STR W10, [X0 + 0x1C]
	0x039708BC CBZ X9, 0x3970F4C
	0x039708C0 LDRSW X10, [X0 + 0x18]
	0x039708C4 LDR W11, [X9 + 0x18]
	0x039708C8 CMP W10, W11
	0x039708CC B.CS 0x3970914
	0x039708D0 ADD W8, W10, 0x1
	0x039708D4 ADD X9, X9, X10, 0x4, LSL
	0x039708D8 STR W8, [X0 + 0x18]
	0x039708DC STP S0, S1, [X9 + 0x20]
	0x039708E0 STP S2, S3, [X9 + 0x28]
	0x039708E4 CBZ X26, 0x3970930
	0x039708E8 LDR W8, [X19 + 0x18]
	0x039708EC CMP W20, W8
	0x039708F0 B.CS 0x3970F48
	0x039708F4 LDRSW X8, [X23]
	0x039708F8 LDR W9, [X26 + 0x18]
	0x039708FC CMP W8, W9
	0x03970900 B.CS 0x3970F48
	0x03970904 ADD X8, X26, X8, 0x4, LSL
	0x03970908 LDP S0, S1, [X8 + 0x20]
	0x0397090C LDP S2, S3, [X8 + 0x28]
	0x03970910 B 0x3970940
	0x03970914 LDR X8, [X8 + 0x20]
	0x03970918 LDR X0, [X31 + 0x50]
	0x0397091C LDR X8, [X8 + 0xC0]
	0x03970920 LDR X1, [X8 + 0x70]
	0x03970924 BL 0x2F6D428
	0x03970928 LDR X0, [X31 + 0x50]
	0x0397092C CBNZ X26, 0x39708E8
	0x03970930 FMOV S0, 1
	0x03970934 FMOV S1, 1
	0x03970938 FMOV S2, 1
	0x0397093C FMOV S3, 1
	0x03970940 ADRP X9, 0x7DD000
	0x03970944 LDR W10, [X0 + 0x1C]
	0x03970948 LDR X8, [X0 + 0x10]
	0x0397094C LDR X9, [X9 + 0xC10]
	0x03970950 ADD W10, W10, 0x1
	0x03970954 LDR X9, [X9]
	0x03970958 STR W10, [X0 + 0x1C]
	0x0397095C CBZ X8, 0x3970F4C
	0x03970960 LDRSW X10, [X0 + 0x18]
	0x03970964 LDR W11, [X8 + 0x18]
	0x03970968 CMP W10, W11
	0x0397096C B.CS 0x39709B4
	0x03970970 ADD W9, W10, 0x1
	0x03970974 ADD X8, X8, X10, 0x4, LSL
	0x03970978 STR W9, [X0 + 0x18]
	0x0397097C STP S0, S1, [X8 + 0x20]
	0x03970980 STP S2, S3, [X8 + 0x28]
	0x03970984 CBZ X26, 0x39709D0
	0x03970988 LDR W8, [X19 + 0x18]
	0x0397098C CMP W29, W8
	0x03970990 B.CS 0x3970F48
	0x03970994 LDRSW X8, [X22]
	0x03970998 LDR W9, [X26 + 0x18]
	0x0397099C CMP W8, W9
	0x039709A0 B.CS 0x3970F48
	0x039709A4 ADD X8, X26, X8, 0x4, LSL
	0x039709A8 LDP S0, S1, [X8 + 0x20]
	0x039709AC LDP S2, S3, [X8 + 0x28]
	0x039709B0 B 0x39709E0
	0x039709B4 LDR X8, [X9 + 0x20]
	0x039709B8 LDR X0, [X31 + 0x50]
	0x039709BC LDR X8, [X8 + 0xC0]
	0x039709C0 LDR X1, [X8 + 0x70]
	0x039709C4 BL 0x2F6D428
	0x039709C8 LDR X0, [X31 + 0x50]
	0x039709CC CBNZ X26, 0x3970988
	0x039709D0 FMOV S0, 1
	0x039709D4 FMOV S1, 1
	0x039709D8 FMOV S2, 1
	0x039709DC FMOV S3, 1
	0x039709E0 ADRP X9, 0x7DD000
	0x039709E4 LDR W10, [X0 + 0x1C]
	0x039709E8 LDR X8, [X0 + 0x10]
	0x039709EC LDR X9, [X9 + 0xC10]
	0x039709F0 ADD W10, W10, 0x1
	0x039709F4 LDR X9, [X9]
	0x039709F8 STR W10, [X0 + 0x1C]
	0x039709FC CBZ X8, 0x3970F4C
	0x03970A00 LDRSW X10, [X0 + 0x18]
	0x03970A04 LDR W11, [X8 + 0x18]
	0x03970A08 CMP W10, W11
	0x03970A0C B.CS 0x3970A28
	0x03970A10 ADD W9, W10, 0x1
	0x03970A14 ADD X8, X8, X10, 0x4, LSL
	0x03970A18 STR W9, [X0 + 0x18]
	0x03970A1C STP S0, S1, [X8 + 0x20]
	0x03970A20 STP S2, S3, [X8 + 0x28]
	0x03970A24 B 0x3970A38
	0x03970A28 LDR X8, [X9 + 0x20]
	0x03970A2C LDR X8, [X8 + 0xC0]
	0x03970A30 LDR X1, [X8 + 0x70]
	0x03970A34 BL 0x2F6D428

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0xA72000
	015 Move X22, 0x7E0000
	016 Move X19, 0x7E0000
	017 Move W8, [X20+2545]
	018 Move X22, [X22+3752]
	019 Move X19, [X19+3760]
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {72}
	025 Move X0, 0x7E0000
	026 Move X0, [X0+808]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DF000
	029 Move X0, [X0+3480]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E0000
	032 Move X0, [X0+3544]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DF000
	035 Move X0, [X0+3488]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E0000
	038 Move X0, [X0+3576]
	039 Call 0x1C17CF4
	040 Move X0, 0x7DF000
	041 Move X0, [X0+3496]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E0000
	044 Move X0, [X0+3616]
	045 Call 0x1C17CF4
	046 Move X0, 0x7DF000
	047 Move X0, [X0+2184]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E0000
	050 Move X0, [X0+3640]
	051 Call 0x1C17CF4
	052 Move X0, 0x7DF000
	053 Move X0, [X0+2192]
	054 Call 0x1C17CF4
	055 Move X0, 0x7DF000
	056 Move X0, [X0+2200]
	057 Call 0x1C17CF4
	058 Move X0, 0x7E0000
	059 Move X0, [X0+3768]
	060 Call 0x1C17CF4
	061 Move X0, 0x7DF000
	062 Move X0, [X0+3504]
	063 Call 0x1C17CF4
	064 Move X0, 0x7E0000
	065 Move X0, [X0+3760]
	066 Call 0x1C17CF4
	067 Move X0, 0x7E0000
	068 Move X0, [X0+3752]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+2545], W8
	072 Move [X31+64], X31
	073 Move [X31+72], X31
	074 Move [X31+80], X31
	075 Move X8, 0x7DF000
	076 Move X8, [X8+2200]
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+48], X31
	080 Move X0, [X8]
	081 Call 0x1C17F10
	082 Move X8, 0x7DF000
	083 Move X8, [X8+2192]
	084 Move X20, X0
	085 Move X1, [X8]
	086 Call HashSet`1<Object>..ctor, X0
	087 Move X0, [X22]
	088 Call 0x1C17F10
	089 Move X1, [X19]
	090 Move X19, X0
	091 Call List`1<Object>..ctor, X0
	092 Compare X21, 0
	093 JumpIfEqual {259}
	094 Move X8, 0x7DF000
	095 Move X8, [X8+3504]
	096 Move X27, 0x7DF000
	097 Move X28, 0x7DF000
	098 Move X29, 0x7E0000
	099 Move X23, 0x7E0000
	100 Move X24, 0x7E0000
	101 Move X27, [X27+3488]
	102 Move X28, [X28+2184]
	103 Move X29, [X29+808]
	104 Move X23, [X23+3640]
	105 Move X24, [X24+3576]
	106 Move X1, [X8]
	107 Move X25, 0x7E0000
	108 Move X25, [X25+3768]
	109 Add X8, X31, 8
	110 Move X0, X21
	111 Call List`1<Object>.GetEnumerator, X0
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 Move X8, [X31+24]
	114 Move [X31+4], V0
	115 Move [X31+80], X8
	116 Move X1, [X27]
	117 Add X0, X31, 64
	118 Call Enumerator<Object>.MoveNext, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {218}
	123 Move X22, [X31+80]
	124 Compare X22, 0
	125 JumpIfEqual {238}
	126 Compare X20, 0
	127 JumpIfEqual {239}
	128 Move X1, [X22+32]
	129 Move X2, [X28]
	130 Move X0, X20
	131 Call HashSet`1<Object>.Add, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {116}
	136 Move X8, 0x7DF000
	137 Move X8, [X8+2200]
	138 Move X0, [X8]
	139 Call 0x1C17F10
	140 Move X8, 0x7DF000
	141 Move X8, [X8+2192]
	142 Move X21, X0
	143 Move X1, [X8]
	144 Call HashSet`1<Object>..ctor, X0
	145 Compare X21, 0
	146 JumpIfEqual {256}
	147 Move X1, [X22+32]
	148 Move X2, [X28]
	149 Move X0, X21
	150 Call HashSet`1<Object>.Add, X0, X1
	151 Move X0, [X29]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X22
	157 Move X1, X21
	158 Move X2, X31
	159 Call ElementSelection.Flood, X0, X1
	160 Move X1, [X23]
	161 Add X8, X31, 8
	162 Move X0, X21
	163 Call HashSet`1<Object>.GetEnumerator, X0
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 Move X8, [X31+24]
	166 Move [X31+2], V0
	167 Move [X31+48], X8
	168 Move X1, [X24]
	169 Add X0, X31, 32
	170 Call Enumerator<Object>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {179}
	175 Move X1, [X31+48]
	176 Move X2, [X28]
	177 Move X0, X20
	178 Call HashSet`1<Object>.Add, X0, X1
	179 Move X22, X31
	180 Move W26, 6
	181 Move X8, 0x7E0000
	182 Move X8, [X8+3544]
	183 Move X1, [X8]
	184 Add X0, X31, 32
	185 Call Enumerator<Object>.Dispose, X0
	186 Compare X22, 0
	187 JumpIfNotEqual {254}
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Compare W26, 0
	190 JumpIfNotEqual {218}
	191 Compare X19, 0
	192 JumpIfEqual {257}
	193 Move W10, [X19+28]
	194 Move X8, [X19+16]
	195 Move X9, [X25]
	196 Add W10, W10, 1
	197 Move [X19+28], W10
	198 Compare X8, 0
	199 JumpIfEqual {258}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W11, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add W9, W10, 1
	204 Add X8, X8, X10
	205 Move [X19+24], W9
	206 Move [X8+32], X21
	207 Move X8, [X9+32]
	208 Move X8, [X8+192]
	209 Move X2, [X8+112]
	210 Move X0, X19
	211 Move X1, X21
	212 Call List`1<Object>.AddWithResize, X0, X1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Call 0x3EB2AD0
	215 Move X22, [X0]
	216 Call 0x3EB2AE0
	217 Move W26, W31
	218 Move X8, 0x7DF000
	219 Move X8, [X8+3480]
	220 Add X0, X31, 64
	221 Move X1, [X8]
	222 Call Enumerator<Object>.Dispose, X0
	223 Move X0, X19
	224 Move X20, [X31+176]
	225 Move X19, [X31+184]
	226 Move X22, [X31+160]
	227 Move X21, [X31+168]
	228 Move X24, [X31+144]
	229 Move X23, [X31+152]
	230 Move X26, [X31+128]
	231 Move X25, [X31+136]
	232 Move X28, [X31+112]
	233 Move X27, [X31+120]
	234 Move X29, [X31+96]
	235 Move X30, [X31+104]
	236 Add X31, X31, 192
	237 Return X0
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Move X20, X1
	241 Move X21, X0
	242 Move X22, X31
	243 Move X8, 0x7E0000
	244 Move X8, [X8+3544]
	245 Move X1, [X8]
	246 Add X0, X31, 32
	247 Call Enumerator<Object>.Dispose, X0
	248 Move X0, X21
	249 Move X1, X20
	250 Compare X22, 0
	251 JumpIfEqual {262}
	252 Move X0, X22
	253 Call 0x1C17F18
	254 Move X0, X22
	255 Call 0x1C17F18
	256 Call 0x1C17F20
	257 Call 0x1C17F20
	258 Call 0x1C17F20
	259 Call 0x1C17F20
	260 Move X20, X1
	261 Move X21, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Call 0x3EB2AD0
	264 Move X20, [X0]
	265 Call 0x3EB2AE0
	266 Move X8, 0x7DF000
	267 Move X8, [X8+3480]
	268 Add X0, X31, 64
	269 Move X1, [X8]
	270 Call Enumerator<Object>.Dispose, X0
	271 Compare X20, 0
	272 JumpIfEqual {223}
	273 Move X0, X20
	274 Call 0x1C17F18
	275 Move X19, X0
	276 Move X20, X31
	277 Move X19, X0
	278 Move X8, 0x7DF000
	279 Move X8, [X8+3480]
	280 Move X1, [X8]
	281 Add X0, X31, 64
	282 Call Enumerator<Object>.Dispose, X0
	283 Compare X20, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X19
	286 Call 0x1D2D690
	287 Move X0, X20
	288 Call 0x1C17F18
	289 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.EdgeLookup, UnityEngine.ProBuilder.Face> GetPerimeterEdges(System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> lookup)

Disassembly:
	0x03970A38 LDR W8, [X19 + 0x18]
	0x03970A3C LDP X12, X0, [X31 + 0x40]
	0x03970A40 CMP W27, W8
	0x03970A44 B.CS 0x3970F48
	0x03970A48 CBZ X12, 0x3970F4C
	0x03970A4C LDRSW X8, [X21]
	0x03970A50 LDR W9, [X12 + 0x18]
	0x03970A54 CMP W8, W9
	0x03970A58 B.CS 0x3970F48
	0x03970A5C CBZ X0, 0x3970F4C
	0x03970A60 ADD X8, X12, X8, 0x3, LSL
	0x03970A64 ADRP X9, 0x7DE000
	0x03970A68 LDR W10, [X0 + 0x1C]
	0x03970A6C LDP S0, S1, [X8 + 0x20]
	0x03970A70 LDR X8, [X0 + 0x10]
	0x03970A74 LDR X9, [X9 + 0x720]
	0x03970A78 ADD W10, W10, 0x1
	0x03970A7C LDR X9, [X9]
	0x03970A80 STR W10, [X0 + 0x1C]
	0x03970A84 CBZ X8, 0x3970F4C
	0x03970A88 LDRSW X10, [X0 + 0x18]
	0x03970A8C LDR W11, [X8 + 0x18]
	0x03970A90 CMP W10, W11
	0x03970A94 B.CS 0x3970AAC
	0x03970A98 ADD W9, W10, 0x1
	0x03970A9C ADD X8, X8, X10, 0x3, LSL
	0x03970AA0 STR W9, [X0 + 0x18]
	0x03970AA4 STP S0, S1, [X8 + 0x20]
	0x03970AA8 B 0x3970AC4
	0x03970AAC LDR X8, [X9 + 0x20]
	0x03970AB0 LDR X0, [X31 + 0x48]
	0x03970AB4 LDR X8, [X8 + 0xC0]
	0x03970AB8 LDR X1, [X8 + 0x70]
	0x03970ABC BL 0x30C9664
	0x03970AC0 LDP X12, X0, [X31 + 0x40]
	0x03970AC4 LDR W8, [X19 + 0x18]
	0x03970AC8 CMP W20, W8
	0x03970ACC B.CS 0x3970F48
	0x03970AD0 LDRSW X8, [X23]
	0x03970AD4 LDR W9, [X12 + 0x18]
	0x03970AD8 CMP W8, W9
	0x03970ADC B.CS 0x3970F48
	0x03970AE0 ADD X8, X12, X8, 0x3, LSL
	0x03970AE4 ADRP X9, 0x7DE000
	0x03970AE8 LDR W10, [X0 + 0x1C]
	0x03970AEC LDP S0, S1, [X8 + 0x20]
	0x03970AF0 LDR X8, [X0 + 0x10]
	0x03970AF4 LDR X9, [X9 + 0x720]
	0x03970AF8 ADD W10, W10, 0x1
	0x03970AFC LDR X9, [X9]
	0x03970B00 STR W10, [X0 + 0x1C]
	0x03970B04 CBZ X8, 0x3970F4C
	0x03970B08 LDRSW X10, [X0 + 0x18]
	0x03970B0C LDR W11, [X8 + 0x18]
	0x03970B10 CMP W10, W11
	0x03970B14 B.CS 0x3970B2C
	0x03970B18 ADD W9, W10, 0x1
	0x03970B1C ADD X8, X8, X10, 0x3, LSL
	0x03970B20 STR W9, [X0 + 0x18]
	0x03970B24 STP S0, S1, [X8 + 0x20]
	0x03970B28 B 0x3970B44
	0x03970B2C LDR X8, [X9 + 0x20]
	0x03970B30 LDR X0, [X31 + 0x48]
	0x03970B34 LDR X8, [X8 + 0xC0]
	0x03970B38 LDR X1, [X8 + 0x70]
	0x03970B3C BL 0x30C9664
	0x03970B40 LDP X12, X0, [X31 + 0x40]
	0x03970B44 LDR W8, [X19 + 0x18]
	0x03970B48 CMP W29, W8
	0x03970B4C B.CS 0x3970F48
	0x03970B50 LDRSW X8, [X22]
	0x03970B54 LDR W9, [X12 + 0x18]
	0x03970B58 CMP W8, W9
	0x03970B5C B.CS 0x3970F48
	0x03970B60 ADD X8, X12, X8, 0x3, LSL
	0x03970B64 ADRP X9, 0x7DE000
	0x03970B68 LDR W10, [X0 + 0x1C]
	0x03970B6C LDP S0, S1, [X8 + 0x20]
	0x03970B70 LDR X8, [X0 + 0x10]
	0x03970B74 LDR X9, [X9 + 0x720]
	0x03970B78 ADD W10, W10, 0x1
	0x03970B7C LDR X9, [X9]
	0x03970B80 STR W10, [X0 + 0x1C]
	0x03970B84 CBZ X8, 0x3970F4C
	0x03970B88 LDRSW X10, [X0 + 0x18]
	0x03970B8C LDR W11, [X8 + 0x18]
	0x03970B90 CMP W10, W11
	0x03970B94 B.CS 0x3970BAC
	0x03970B98 ADD W9, W10, 0x1
	0x03970B9C ADD X8, X8, X10, 0x3, LSL
	0x03970BA0 STR W9, [X0 + 0x18]
	0x03970BA4 STP S0, S1, [X8 + 0x20]
	0x03970BA8 B 0x3970BBC
	0x03970BAC LDR X8, [X9 + 0x20]
	0x03970BB0 LDR X8, [X8 + 0xC0]
	0x03970BB4 LDR X1, [X8 + 0x70]
	0x03970BB8 BL 0x30C9664
	0x03970BBC ADRP X8, 0x784000
	0x03970BC0 LDR X8, [X8 + 0xE58]
	0x03970BC4 MOVZ W1, 0x3
	0x03970BC8 LDR X0, [X8]
	0x03970BCC BL 0x1C16D6C
	0x03970BD0 CBZ X0, 0x3970F4C
	0x03970BD4 LDR W8, [X0 + 0x18]
	0x03970BD8 MOV X21, X0
	0x03970BDC CBZ W8, 0x3970F48
	0x03970BE0 CMP W8, 0x1
	0x03970BE4 STR W27, [X21 + 0x20]
	0x03970BE8 B.EQ 0x3970F48
	0x03970BEC CMP W8, 0x2
	0x03970BF0 STR W20, [X21 + 0x24]
	0x03970BF4 B.HI 0x3970C6C
	0x03970BF8 B 0x3970F48
	0x03970BFC ADRP X8, 0x784000
	0x03970C00 LDR X8, [X8 + 0xE58]
	0x03970C04 MOVZ W1, 0x3
	0x03970C08 LDR X0, [X8]
	0x03970C0C BL 0x1C16D6C
	0x03970C10 LDR W8, [X19 + 0x18]
	0x03970C14 CMP W27, W8
	0x03970C18 B.CS 0x3970F48
	0x03970C1C MOV X21, X0
	0x03970C20 CBZ X0, 0x3970F4C
	0x03970C24 LDR W9, [X21 + 0x18]
	0x03970C28 CBZ W9, 0x3970F48
	0x03970C2C LDR W10, [X26]
	0x03970C30 CMP W25, W8
	0x03970C34 STR W10, [X21 + 0x20]
	0x03970C38 B.CS 0x3970F48
	0x03970C3C LDR W25, [X31 + 0x20]
	0x03970C40 LDR X26, [X31 + 0x30]
	0x03970C44 CMP W9, 0x1
	0x03970C48 B.LS 0x3970F48
	0x03970C4C LDR W10, [X24]
	0x03970C50 CMP W23, W8
	0x03970C54 STR W10, [X21 + 0x24]
	0x03970C58 B.CS 0x3970F48
	0x03970C5C LDR X24, [X31 + 0x28]
	0x03970C60 CMP W9, 0x2
	0x03970C64 B.LS 0x3970F48
	0x03970C68 LDR W29, [X22]
	0x03970C6C ADD X8, X31, 0x80
	0x03970C70 MOV X0, X31
	0x03970C74 STR W29, [X21 + 0x28]
	0x03970C78 BL 0x38F6A48
	0x03970C7C ADRP X8, 0x7DE000
	0x03970C80 LDP V0, V1, [X31 + 0x80]
	0x03970C84 LDR X8, [X8 + 0x560]
	0x03970C88 STP V0, V1, [X31 + 0xA0]
	0x03970C8C LDR X0, [X8]
	0x03970C90 BL 0x1C16F10
	0x03970C94 LDP V0, V1, [X31 + 0xA0]
	0x03970C98 LDR W2, [X31 + 0x3C]
	0x03970C9C ADD X3, X31, 0x60
	0x03970CA0 MOVN W5, 0x0
	0x03970CA4 MOVN W6, 0x0
	0x03970CA8 MOVZ W7, 0x1
	0x03970CAC MOV X1, X21
	0x03970CB0 MOV W4, W31
	0x03970CB4 MOV X20, X0
	0x03970CB8 STP V0, V1, [X31 + 0x60]
	0x03970CBC STR X31, [X31]
	0x03970CC0 BL 0x39004D4
	0x03970CC4 CBZ X28, 0x3970F4C
	0x03970CC8 ADRP X9, 0x7DD000
	0x03970CCC LDR W10, [X28 + 0x1C]
	0x03970CD0 LDR X8, [X28 + 0x10]
	0x03970CD4 LDR X9, [X9 + 0xE10]
	0x03970CD8 ADD W10, W10, 0x1
	0x03970CDC LDR X9, [X9]
	0x03970CE0 STR W10, [X28 + 0x1C]
	0x03970CE4 CBZ X8, 0x3970F4C
	0x03970CE8 LDRSW X10, [X28 + 0x18]
	0x03970CEC LDR W11, [X8 + 0x18]
	0x03970CF0 CMP W10, W11
	0x03970CF4 B.CS 0x3970D0C
	0x03970CF8 ADD W9, W10, 0x1
	0x03970CFC ADD X8, X8, X10, 0x3, LSL
	0x03970D00 STR W9, [X28 + 0x18]
	0x03970D04 STR X20, [X8 + 0x20]
	0x03970D08 B 0x3970D24
	0x03970D0C LDR X8, [X9 + 0x20]
	0x03970D10 MOV X0, X28
	0x03970D14 MOV X1, X20
	0x03970D18 LDR X8, [X8 + 0xC0]
	0x03970D1C LDR X2, [X8 + 0x70]
	0x03970D20 BL 0x301BF90
	0x03970D24 ADRP X29, 0x7C5000
	0x03970D28 LDR X0, [X31 + 0x58]
	0x03970D2C LDR X29, [X29 + 0x5B0]
	0x03970D30 ADRP X20, 0x7DE000
	0x03970D34 LDR X20, [X20 + 0xC48]
	0x03970D38 LDR W8, [X19 + 0x18]
	0x03970D3C ADD W27, W27, 0x3
	0x03970D40 CMP W27, W8
	0x03970D44 B.LT 0x3970480
	0x03970D48 LDR X26, [X31 + 0x18]
	0x03970D4C LDR W19, [X31 + 0x3C]
	0x03970D50 MOV X1, X31
	0x03970D54 MOV X0, X26
	0x03970D58 ADD W19, W19, 0x1
	0x03970D5C BL 0x3C0F650
	0x03970D60 CMP W19, W0
	0x03970D64 B.LT 0x397044C
	0x03970D68 ADRP X19, 0x783000
	0x03970D6C ADRP X20, 0x783000
	0x03970D70 LDR X19, [X19 + 0x598]
	0x03970D74 LDR X20, [X20 + 0xD78]
	0x03970D78 LDR X22, [X31 + 0x10]
	0x03970D7C MOV X1, X31
	0x03970D80 MOV X0, X22
	0x03970D84 BL 0x3C32ECC
	0x03970D88 LDR X8, [X19]
	0x03970D8C MOV X19, X0
	0x03970D90 LDR W9, [X8 + 0xE0]
	0x03970D94 CBNZ W9, 0x3970DA0
	0x03970D98 MOV X0, X8
	0x03970D9C BL 0x1C16DFC
	0x03970DA0 LDR X1, [X20]
	0x03970DA4 MOV X0, X19
	0x03970DA8 BL 0x222D35C
	0x03970DAC CBZ X0, 0x3970F4C
	0x03970DB0 ADRP X8, 0x785000
	0x03970DB4 LDR X8, [X8 + 0x168]
	0x03970DB8 MOV X20, X0
	0x03970DBC LDR X1, [X8]
	0x03970DC0 BL 0x21E52E4
	0x03970DC4 CBZ X0, 0x3970F4C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X25, 0xA72000
	015 Move X24, 0x7E0000
	016 Move X19, 0x7E0000
	017 Move X23, 0x7DE000
	018 Move X21, 0x7DE000
	019 Move W8, [X25+2546]
	020 Move X24, [X24+3776]
	021 Move X19, [X19+3784]
	022 Move X23, [X23+3280]
	023 Move X21, [X21+3272]
	024 Move X20, X1
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {71}
	030 Move X0, 0x7E0000
	031 Move X0, [X0+3792]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E0000
	034 Move X0, [X0+3800]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E0000
	037 Move X0, [X0+3808]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E0000
	040 Move X0, [X0+3784]
	041 Call 0x1C17CF4
	042 Move X0, 0x7DE000
	043 Move X0, [X0+3200]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E0000
	046 Move X0, [X0+3776]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E0000
	049 Move X0, [X0+3544]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E0000
	052 Move X0, [X0+3576]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E0000
	055 Move X0, [X0+3616]
	056 Call 0x1C17CF4
	057 Move X0, 0x7DE000
	058 Move X0, [X0+3264]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E0000
	061 Move X0, [X0+3640]
	062 Call 0x1C17CF4
	063 Move X0, 0x7DE000
	064 Move X0, [X0+3272]
	065 Call 0x1C17CF4
	066 Move X0, 0x7DE000
	067 Move X0, [X0+3280]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X25+2546], W8
	071 Move X0, [X24]
	072 Move [X31+48], X31
	073 Move [X31+56], X31
	074 Move [X31+64], X31
	075 Move [X31+32], X31
	076 Move [X31+40], X31
	077 Call 0x1C17F10
	078 Move X1, [X19]
	079 Move X19, X0
	080 Call Dictionary`2<EdgeLookup, Object>..ctor, X0
	081 Move X0, [X23]
	082 Call 0x1C17F10
	083 Move X1, [X21]
	084 Move X21, X0
	085 Call HashSet`1<EdgeLookup>..ctor, X0
	086 Compare X22, 0
	087 JumpIfEqual {216}
	088 Move X8, 0x7E0000
	089 Move X8, [X8+3640]
	090 Move X29, 0x7DE000
	091 Move X29, [X29+3200]
	092 Move X0, X22
	093 Move X1, [X8]
	094 Add X8, X31, 8
	095 Call HashSet`1<Object>.GetEnumerator, X0
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 Move X8, [X31+24]
	098 Move [X31+3], V0
	099 Move [X31+64], X8
	100 Move X8, 0x7E0000
	101 Move X8, [X8+3576]
	102 Move X1, [X8]
	103 Add X0, X31, 48
	104 Call Enumerator<Object>.MoveNext, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {189}
	109 Move X22, [X31+64]
	110 Compare X22, 0
	111 JumpIfEqual {214}
	112 Move X0, X22
	113 Move X1, X31
	114 Call Face.get_edgesInternal, X0
	115 Move X23, X0
	116 Compare X0, 0
	117 JumpIfEqual {215}
	118 Move X8, [X23+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X28, X31
	121 And X8, X8, 0
	122 Add X27, X23, 32
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Compare X20, 0
	125 JumpIfEqual {210}
	126 Add X8, X27, X28
	127 Move W24, [X8]
	128 Move W25, [X8+4]
	129 Move X2, [X29]
	130 Move X0, X20
	131 Move W1, W24
	132 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	133 Move X2, [X29]
	134 Move W26, W0
	135 Move X0, X20
	136 Move W1, W25
	137 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	138 Move W2, W0
	139 Add X0, X31, 32
	140 Move W1, W26
	141 Move W3, W24
	142 Move W4, W25
	143 Move X5, X31
	144 Call EdgeLookup..ctor, X0, X1, X2, X3, X4
	145 Compare X21, 0
	146 JumpIfEqual {209}
	147 Move X8, 0x7DE000
	148 Move X1, [X31+32]
	149 Move X2, [X31+40]
	150 Move X8, [X8+3264]
	151 Move X3, [X8]
	152 Move X0, X21
	153 Call HashSet`1<EdgeLookup>.Add, X0, X1
	154 Move X1, [X31+32]
	155 Move X2, [X31+40]
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {168}
	160 Compare X19, 0
	161 JumpIfEqual {212}
	162 Move X8, 0x7E0000
	163 Move X8, [X8+3792]
	164 Move X4, [X8]
	165 Move X0, X19
	166 Move X3, X22
	167 Call Dictionary`2<EdgeLookup, Object>.Add, X0, X1, X2
	168 Compare X19, 0
	169 JumpIfEqual {213}
	170 Move X8, 0x7E0000
	171 Move X8, [X8+3800]
	172 Move X3, [X8]
	173 Move X0, X19
	174 Call Dictionary`2<EdgeLookup, Object>.ContainsKey, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {186}
	179 Move X8, 0x7E0000
	180 Move X1, [X31+32]
	181 Move X2, [X31+40]
	182 Move X8, [X8+3808]
	183 Move X3, [X8]
	184 Move X0, X19
	185 Call Dictionary`2<EdgeLookup, Object>.Remove, X0, X1
	186 Move W8, [X23+24]
	187 Add X28, X28, 1
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, 0x7E0000
	190 Move X8, [X8+3544]
	191 Add X0, X31, 48
	192 Move X1, [X8]
	193 Call Enumerator<Object>.Dispose, X0
	194 Move X0, X19
	195 Move X20, [X31+160]
	196 Move X19, [X31+168]
	197 Move X22, [X31+144]
	198 Move X21, [X31+152]
	199 Move X24, [X31+128]
	200 Move X23, [X31+136]
	201 Move X26, [X31+112]
	202 Move X25, [X31+120]
	203 Move X28, [X31+96]
	204 Move X27, [X31+104]
	205 Move X29, [X31+80]
	206 Move X30, [X31+88]
	207 Add X31, X31, 176
	208 Return X0
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F28
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X20, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X20
	220 Call 0x3EB2AD0
	221 Move X21, [X0]
	222 Call 0x3EB2AE0
	223 Move X8, 0x7E0000
	224 Move X8, [X8+3544]
	225 Add X0, X31, 48
	226 Move X1, [X8]
	227 Call Enumerator<Object>.Dispose, X0
	228 Compare X21, 0
	229 JumpIfEqual {194}
	230 Move X0, X21
	231 Call 0x1C17F18
	232 Move X21, X31
	233 Move X20, X0
	234 Move X8, 0x7E0000
	235 Move X8, [X8+3544]
	236 Move X1, [X8]
	237 Add X0, X31, 48
	238 Call Enumerator<Object>.Dispose, X0
	239 Compare X21, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X20
	242 Call 0x1D2D690
	243 Move X0, X21
	244 Call 0x1C17F18
	245 Call 0x1991590

