Type: UnityEngine.ProBuilder.MeshOperations.Bevel

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> BevelEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Edge> edges, System.Single amount)

Disassembly:
	0x03959DB0 ADD X0, X8, 0x138
	0x03959DB4 LDP X8, X1, [X0]
	0x03959DB8 MOV X0, X26
	0x03959DBC BLR X8
	0x03959DC0 MOV X26, X0
	0x03959DC4 CBZ X0, 0x3959F68
	0x03959DC8 LDR X8, [X26]
	0x03959DCC LDR X1, [X25]
	0x03959DD0 LDRH W9, [X8 + 0x12E]
	0x03959DD4 CBZ X9, 0x3959DF8
	0x03959DD8 LDR X10, [X8 + 0xB0]
	0x03959DDC ADD X10, X10, 0x8
	0x03959DE0 LDUR X11, [X10 - 0x8]
	0x03959DE4 CMP X11, X1
	0x03959DE8 B.EQ 0x3959E08
	0x03959DEC SUBS X9, X9, 0x1
	0x03959DF0 ADD X10, X10, 0x10
	0x03959DF4 B.NE 0x3959DE0
	0x03959DF8 MOV X0, X26
	0x03959DFC MOV W2, W31
	0x03959E00 BL 0x1C5C788
	0x03959E04 B 0x3959E14
	0x03959E08 LDRSW X9, [X10]
	0x03959E0C ADD X8, X8, X9, 0x4, LSL
	0x03959E10 ADD X0, X8, 0x138
	0x03959E14 LDP X8, X1, [X0]
	0x03959E18 MOV X0, X26
	0x03959E1C BLR X8
	0x03959E20 TBZ X0, 0x0, 0x3959ED8
	0x03959E24 LDR X8, [X26]
	0x03959E28 LDR X1, [X24]
	0x03959E2C LDRH W9, [X8 + 0x12E]
	0x03959E30 CBZ X9, 0x3959E54
	0x03959E34 LDR X10, [X8 + 0xB0]
	0x03959E38 ADD X10, X10, 0x8
	0x03959E3C LDUR X11, [X10 - 0x8]
	0x03959E40 CMP X11, X1
	0x03959E44 B.EQ 0x3959E64
	0x03959E48 SUBS X9, X9, 0x1
	0x03959E4C ADD X10, X10, 0x10
	0x03959E50 B.NE 0x3959E3C
	0x03959E54 MOV X0, X26
	0x03959E58 MOV W2, W31
	0x03959E5C BL 0x1C5C788
	0x03959E60 B 0x3959E70
	0x03959E64 LDRSW X9, [X10]
	0x03959E68 ADD X8, X8, X9, 0x4, LSL
	0x03959E6C ADD X0, X8, 0x138
	0x03959E70 LDP X8, X1, [X0]
	0x03959E74 MOV X0, X26
	0x03959E78 BLR X8
	0x03959E7C MOV X29, X0
	0x03959E80 CBZ X0, 0x3959F58
	0x03959E84 CBZ X19, 0x3959F60
	0x03959E88 LDR X1, [X29 + 0x20]
	0x03959E8C LDR X2, [X20]
	0x03959E90 MOV X0, X19
	0x03959E94 BL 0x2DBEF30
	0x03959E98 TBZ X0, 0x0, 0x3959DC8
	0x03959E9C ADRP X8, 0x7F6000
	0x03959EA0 LDR X22, [X29 + 0x20]
	0x03959EA4 LDR W2, [X27 + 0x10]
	0x03959EA8 LDR X8, [X8 + 0x6D8]
	0x03959EAC STP X31, X31, [X31 + 0x90]
	0x03959EB0 LDR X3, [X8]
	0x03959EB4 ADD X0, X31, 0x90
	0x03959EB8 MOV X1, X29
	0x03959EBC BL 0x25E6C34
	0x03959EC0 LDP X2, X3, [X31 + 0x90]
	0x03959EC4 LDR X4, [X28]
	0x03959EC8 LDR X0, [X31 + 0x48]
	0x03959ECC MOV X1, X22
	0x03959ED0 BL 0x217D220
	0x03959ED4 B 0x3959DC8
	0x03959ED8 MOV X27, X31
	0x03959EDC MOVZ W19, 0x13
	0x03959EE0 CBZ X26, 0x3959F44
	0x03959EE4 LDR X8, [X26]
	0x03959EE8 ADRP X10, 0x79A000
	0x03959EEC LDRH W9, [X8 + 0x12E]
	0x03959EF0 LDR X10, [X10 + 0xE00]
	0x03959EF4 LDR X1, [X10]
	0x03959EF8 CBZ X9, 0x3959F1C
	0x03959EFC LDR X10, [X8 + 0xB0]
	0x03959F00 ADD X10, X10, 0x8
	0x03959F04 LDUR X11, [X10 - 0x8]
	0x03959F08 CMP X11, X1
	0x03959F0C B.EQ 0x3959F2C
	0x03959F10 SUBS X9, X9, 0x1
	0x03959F14 ADD X10, X10, 0x10
	0x03959F18 B.NE 0x3959F04
	0x03959F1C MOV X0, X26
	0x03959F20 MOV W2, W31
	0x03959F24 BL 0x1C5C788
	0x03959F28 B 0x3959F38
	0x03959F2C LDRSW X9, [X10]
	0x03959F30 ADD X8, X8, X9, 0x4, LSL
	0x03959F34 ADD X0, X8, 0x138
	0x03959F38 LDP X8, X1, [X0]
	0x03959F3C MOV X0, X26
	0x03959F40 BLR X8
	0x03959F44 CBNZ X27, 0x395AF54
	0x03959F48 CMP W19, 0x13
	0x03959F4C B.EQ 0x3959CA8
	0x03959F50 CBZ W19, 0x3959CA8
	0x03959F54 B 0x395AD60
	0x03959F58 BL 0x1C16F20
	0x03959F5C B 0x395AFFC
	0x03959F60 BL 0x1C16F20
	0x03959F64 B 0x395AFFC
	0x03959F68 BL 0x1C16F20
	0x03959F6C B 0x395AFFC
	0x03959F70 B 0x3959F88
	0x03959F74 B 0x3959F88
	0x03959F78 B 0x3959F88
	0x03959F7C B 0x3959F88
	0x03959F80 B 0x3959F88
	0x03959F84 B 0x3959F88
	0x03959F88 MOV X19, X1
	0x03959F8C CMP W19, 0x1
	0x03959F90 B.NE 0x395AE90
	0x03959F94 BL 0x3EB1AD0
	0x03959F98 LDR X27, [X0]
	0x03959F9C BL 0x3EB1AE0
	0x03959FA0 MOV W19, W31
	0x03959FA4 CBNZ X26, 0x3959EE4
	0x03959FA8 B 0x3959F44
	0x03959FAC ADRP X8, 0x7F6000
	0x03959FB0 LDR X8, [X8 + 0x5F8]
	0x03959FB4 ADD X0, X31, 0x1D0
	0x03959FB8 LDR X1, [X8]
	0x03959FBC BL 0x2BBB624
	0x03959FC0 MOV V8.16B, V11.16B
	0x03959FC4 CBNZ W22, 0x395ADA4
	0x03959FC8 B 0x3959964
	0x03959FCC ADRP X8, 0x7A1000
	0x03959FD0 LDR X8, [X8 + 0x830]
	0x03959FD4 ADD X0, X31, 0x190
	0x03959FD8 LDR X1, [X8]
	0x03959FDC BL 0x2BBDA68
	0x03959FE0 LDR X0, [X31 + 0x48]
	0x03959FE4 CBZ X0, 0x395AF5C
	0x03959FE8 ADRP X8, 0x7F6000
	0x03959FEC LDR X8, [X8 + 0x560]
	0x03959FF0 LDR X1, [X8]
	0x03959FF4 ADD X8, X31, 0x90
	0x03959FF8 BL 0x2AA54BC
	0x03959FFC LDP V0, V1, [X31 + 0x90]
	0x0395A000 LDR X8, [X31 + 0xB0]
	0x0395A004 ADRP X22, 0x7F5000
	0x0395A008 ADRP X29, 0x7F5000
	0x0395A00C ADRP X24, 0x7F5000
	0x0395A010 ADRP X26, 0x7F5000
	0x0395A014 ADRP X27, 0x7F5000
	0x0395A018 ADRP X28, 0x7F5000
	0x0395A01C LDR X22, [X22 + 0x628]
	0x0395A020 LDR X29, [X29 + 0x308]
	0x0395A024 LDR X24, [X24 + 0x568]
	0x0395A028 LDR X26, [X26 + 0x600]
	0x0395A02C LDR X27, [X27 + 0x6E0]
	0x0395A030 LDR X28, [X28 + 0x550]
	0x0395A034 STP V0, V1, [X31 + 0x160]
	0x0395A038 STR X8, [X31 + 0x180]
	0x0395A03C ADRP X20, 0x7F5000
	0x0395A040 LDR X20, [X20 + 0x5F0]
	0x0395A044 LDR X1, [X22]
	0x0395A048 ADD X0, X31, 0x160
	0x0395A04C BL 0x2C0A728
	0x0395A050 TBZ X0, 0x0, 0x395A1B8
	0x0395A054 LDR X1, [X31 + 0x178]
	0x0395A058 ADD X2, X31, 0x158
	0x0395A05C MOV X0, X23
	0x0395A060 MOV V0.16B, V8.16B
	0x0395A064 MOV X3, X31
	0x0395A068 BL 0x3981C80
	0x0395A06C MOV X19, X0
	0x0395A070 CBZ X0, 0x395A044
	0x0395A074 LDR X0, [X31 + 0x28]
	0x0395A078 CBZ X0, 0x395AF68
	0x0395A07C LDR W10, [X0 + 0x1C]
	0x0395A080 LDR X8, [X0 + 0x10]
	0x0395A084 LDR X9, [X29]
	0x0395A088 ADD W10, W10, 0x1
	0x0395A08C STR W10, [X0 + 0x1C]
	0x0395A090 CBZ X8, 0x395AF6C
	0x0395A094 LDRSW X10, [X0 + 0x18]
	0x0395A098 LDR W11, [X8 + 0x18]
	0x0395A09C CMP W10, W11
	0x0395A0A0 B.CS 0x395A0B8
	0x0395A0A4 ADD W9, W10, 0x1
	0x0395A0A8 ADD X8, X8, X10, 0x3, LSL
	0x0395A0AC STR W9, [X0 + 0x18]
	0x0395A0B0 STR X19, [X8 + 0x20]
	0x0395A0B4 B 0x395A0CC
	0x0395A0B8 LDR X8, [X9 + 0x20]
	0x0395A0BC LDR X8, [X8 + 0xC0]
	0x0395A0C0 LDR X2, [X8 + 0x70]
	0x0395A0C4 MOV X1, X19
	0x0395A0C8 BL 0x301BF90
	0x0395A0CC LDR X0, [X31 + 0x158]
	0x0395A0D0 CBZ X0, 0x395AF64
	0x0395A0D4 LDR X1, [X24]
	0x0395A0D8 ADD X8, X31, 0x90
	0x0395A0DC BL 0x2A13AB4
	0x0395A0E0 LDP V0, V1, [X31 + 0x90]
	0x0395A0E4 LDR X8, [X31 + 0xB0]
	0x0395A0E8 STP V0, V1, [X31 + 0x130]
	0x0395A0EC STR X8, [X31 + 0x150]
	0x0395A0F0 LDR X1, [X26]
	0x0395A0F4 ADD X0, X31, 0x130
	0x0395A0F8 BL 0x2BF5330
	0x0395A0FC TBZ X0, 0x0, 0x395A130
	0x0395A100 LDP X25, X2, [X31 + 0x140]
	0x0395A104 LDR X3, [X27]
	0x0395A108 STP X31, X31, [X31 + 0x90]
	0x0395A10C ADD X0, X31, 0x90
	0x0395A110 MOV X1, X19
	0x0395A114 BL 0x25E6D3C
	0x0395A118 LDP X2, X3, [X31 + 0x90]
	0x0395A11C LDR X4, [X28]
	0x0395A120 LDR X0, [X31 + 0x40]
	0x0395A124 MOV W1, W25
	0x0395A128 BL 0x217CF44
	0x0395A12C B 0x395A0F0
	0x0395A130 MOV X25, X31
	0x0395A134 MOVZ W19, 0x18
	0x0395A138 LDR X1, [X20]
	0x0395A13C ADD X0, X31, 0x130
	0x0395A140 BL 0x2BF5448
	0x0395A144 CBNZ X25, 0x395AF70
	0x0395A148 CMP W19, 0x18
	0x0395A14C B.EQ 0x395A044
	0x0395A150 CBZ W19, 0x395A044
	0x0395A154 B 0x395AD78
	0x0395A158 B 0x395A15C
	0x0395A15C MOV X19, X1
	0x0395A160 CMP W19, 0x1
	0x0395A164 STR X0, [X31 + 0x10]
	0x0395A168 B.NE 0x395AF30
	0x0395A16C LDR X0, [X31 + 0x10]
	0x0395A170 BL 0x3EB1AD0
	0x0395A174 LDR X25, [X0]
	0x0395A178 BL 0x3EB1AE0
	0x0395A17C MOV W19, W31
	0x0395A180 B 0x395A138
	0x0395A184 ADRP X8, 0x7F3000
	0x0395A188 LDR X8, [X8 + 0xAD0]
	0x0395A18C LDR X0, [X8]
	0x0395A190 LDR W8, [X0 + 0xE0]
	0x0395A194 CBNZ W8, 0x395A19C
	0x0395A198 BL 0x1C16DFC
	0x0395A19C ADRP X8, 0x7F5000
	0x0395A1A0 LDR X8, [X8 + 0x758]
	0x0395A1A4 LDR X0, [X8]
	0x0395A1A8 MOV X1, X31
	0x0395A1AC BL 0x3906FFC
	0x0395A1B0 MOV X0, X31
	0x0395A1B4 B 0x395ADA4
	0x0395A1B8 ADRP X8, 0x7F5000
	0x0395A1BC LDR X8, [X8 + 0x5E0]
	0x0395A1C0 ADD X0, X31, 0x160
	0x0395A1C4 LDR X1, [X8]
	0x0395A1C8 BL 0x2C0A83C
	0x0395A1CC LDP X19, X0, [X31 + 0x20]
	0x0395A1D0 MOV X2, X23
	0x0395A1D4 MOV X3, X31
	0x0395A1D8 MOV X4, X31
	0x0395A1DC MOV X1, X19
	0x0395A1E0 BL 0x390186C
	0x0395A1E4 ADRP X8, 0x7F5000
	0x0395A1E8 LDR X8, [X8 + 0x598]
	0x0395A1EC LDR X0, [X31 + 0x48]
	0x0395A1F0 LDR X1, [X8]
	0x0395A1F4 BL 0x2AA4E98
	0x0395A1F8 MOV X1, X0
	0x0395A1FC MOV X0, X19
	0x0395A200 BL 0x395C0F0
	0x0395A204 CBZ X0, 0x395AF5C
	0x0395A208 ADRP X8, 0x7F4000
	0x0395A20C LDR X20, [X0 + 0x18]
	0x0395A210 LDR X8, [X8 + 0x418]
	0x0395A214 MOV W1, W31
	0x0395A218 LDR X0, [X8]
	0x0395A21C BL 0x1C16D6C
	0x0395A220 MOV X1, X0
	0x0395A224 MOV X0, X19
	0x0395A228 MOV X2, X31
	0x0395A22C BL 0x39162AC
	0x0395A230 LDR X0, [X19 + 0x58]
	0x0395A234 MOV X1, X31
	0x0395A238 BL 0x3933C34
	0x0395A23C MOV X1, X0
	0x0395A240 MOV X0, X19
	0x0395A244 MOV X2, X31
	0x0395A248 BL 0x3915F7C
	0x0395A24C LDR X8, [X19 + 0x30]
	0x0395A250 LDR X9, [X31 + 0x30]
	0x0395A254 MOV X0, X19
	0x0395A258 MOV X1, X31
	0x0395A25C STR X8, [X9 + 0x18]
	0x0395A260 BL 0x3916198
	0x0395A264 ADRP X8, 0x7F5000
	0x0395A268 LDR X8, [X8 + 0x230]
	0x0395A26C MOV X25, X0
	0x0395A270 LDR X8, [X8]
	0x0395A274 MOV X0, X8
	0x0395A278 BL 0x1C16F10
	0x0395A27C ADRP X8, 0x7F5000
	0x0395A280 LDR X8, [X8 + 0x220]
	0x0395A284 STR X0, [X31 + 0x48]
	0x0395A288 LDR X1, [X8]
	0x0395A28C BL 0x301B7C4
	0x0395A290 LDR X0, [X31 + 0x40]
	0x0395A294 CBZ X0, 0x395AF5C
	0x0395A298 ADRP X8, 0x7F5000
	0x0395A29C LDR X8, [X8 + 0x570]
	0x0395A2A0 LDR X1, [X8]
	0x0395A2A4 ADD X8, X31, 0x90
	0x0395A2A8 BL 0x2A13AB4
	0x0395A2AC LDP V0, V1, [X31 + 0x90]
	0x0395A2B0 LDR X8, [X31 + 0xB0]
	0x0395A2B4 ADRP X23, 0x7F5000
	0x0395A2B8 ADRP X26, 0x7F5000
	0x0395A2BC ADRP X28, 0x7F5000
	0x0395A2C0 ADRP X27, 0x7C3000
	0x0395A2C4 ADRP X29, 0x7F3000
	0x0395A2C8 LDR X23, [X23 + 0x620]
	0x0395A2CC LDR X26, [X26 + 0x5C0]
	0x0395A2D0 LDR X28, [X28 + 0x608]
	0x0395A2D4 LDR X27, [X27 + 0xF38]
	0x0395A2D8 LDR X29, [X29 + 0xC80]
	0x0395A2DC STP V0, V1, [X31 + 0x100]
	0x0395A2E0 STR X8, [X31 + 0x120]
	0x0395A2E4 LDR X1, [X23]
	0x0395A2E8 ADD X0, X31, 0x100
	0x0395A2EC BL 0x2BF5330
	0x0395A2F0 TBZ X0, 0x0, 0x395A570
	0x0395A2F4 ADRP X8, 0x7F5000
	0x0395A2F8 LDR X8, [X8 + 0x750]
	0x0395A2FC LDR X24, [X31 + 0x118]
	0x0395A300 LDR X8, [X8]
	0x0395A304 LDR W9, [X8 + 0xE0]
	0x0395A308 CBNZ W9, 0x395A320
	0x0395A30C MOV X0, X8
	0x0395A310 BL 0x1C16DFC
	0x0395A314 ADRP X8, 0x7F5000
	0x0395A318 LDR X8, [X8 + 0x750]
	0x0395A31C LDR X8, [X8]
	0x0395A320 LDR X9, [X8 + 0xB8]
	0x0395A324 LDR X19, [X9 + 0x10]
	0x0395A328 CBNZ X19, 0x395A390
	0x0395A32C LDR W9, [X8 + 0xE0]
	0x0395A330 CBNZ W9, 0x395A348
	0x0395A334 MOV X0, X8
	0x0395A338 BL 0x1C16DFC
	0x0395A33C ADRP X8, 0x7F5000
	0x0395A340 LDR X8, [X8 + 0x750]
	0x0395A344 LDR X8, [X8]
	0x0395A348 LDR X8, [X8 + 0xB8]
	0x0395A34C LDR X22, [X8]
	0x0395A350 ADRP X8, 0x7F5000
	0x0395A354 LDR X8, [X8 + 0x660]
	0x0395A358 LDR X0, [X8]
	0x0395A35C BL 0x1C16F10
	0x0395A360 ADRP X8, 0x7F5000
	0x0395A364 LDR X8, [X8 + 0x718]
	0x0395A368 MOV X19, X0
	0x0395A36C LDR X2, [X8]
	0x0395A370 MOV X1, X22
	0x0395A374 MOV X3, X31
	0x0395A378 BL 0x2D2ACC4
	0x0395A37C ADRP X8, 0x7F5000
	0x0395A380 LDR X8, [X8 + 0x750]
	0x0395A384 LDR X8, [X8]
	0x0395A388 LDR X8, [X8 + 0xB8]
	0x0395A38C STR X19, [X8 + 0x10]
	0x0395A390 LDR X2, [X26]
	0x0395A394 MOV X0, X24
	0x0395A398 MOV X1, X19
	0x0395A39C BL 0x21D4930
	0x0395A3A0 CMP W0, 0x3
	0x0395A3A4 B.LT 0x395A2E4
	0x0395A3A8 ADRP X8, 0x79A000
	0x0395A3AC LDR X8, [X8 + 0xE08]
	0x0395A3B0 LDR X0, [X8]
	0x0395A3B4 BL 0x1C16F10
	0x0395A3B8 ADRP X8, 0x7A0000
	0x0395A3BC LDR X8, [X8 + 0x688]
	0x0395A3C0 MOV X19, X0
	0x0395A3C4 LDR X1, [X8]
	0x0395A3C8 BL 0x2DA9EF4
	0x0395A3CC CBZ X24, 0x395AF78
	0x0395A3D0 ADRP X8, 0x7F5000
	0x0395A3D4 LDR X8, [X8 + 0x6C8]
	0x0395A3D8 LDR X1, [X8]
	0x0395A3DC ADD X8, X31, 0x90
	0x0395A3E0 MOV X0, X24
	0x0395A3E4 BL 0x2F342D8
	0x0395A3E8 LDP V0, V1, [X31 + 0x90]
	0x0395A3EC STP V0, V1, [X31 + 0xE0]
	0x0395A3F0 LDR X1, [X28]
	0x0395A3F4 ADD X0, X31, 0xE0
	0x0395A3F8 BL 0x2BB2758
	0x0395A3FC TBZ X0, 0x0, 0x395A474
	0x0395A400 LDR X8, [X31 + 0xF0]
	0x0395A404 CBZ X8, 0x395A51C
	0x0395A408 LDR X24, [X31 + 0xF8]
	0x0395A40C CBZ X24, 0x395A524
	0x0395A410 LDR W9, [X24 + 0x18]
	0x0395A414 CMP W9, 0x1
	0x0395A418 B.LT 0x395A3F0
	0x0395A41C LDR W8, [X8 + 0x30]
	0x0395A420 MOV W26, W31
	0x0395A424 SUB W22, W8, W20
	0x0395A428 LDR X2, [X27]
	0x0395A42C MOV X0, X24
	0x0395A430 MOV W1, W26
	0x0395A434 BL 0x2FDC41C
	0x0395A438 CBZ X25, 0x395A50C
	0x0395A43C LDR X2, [X29]
	0x0395A440 ADD W1, W22, W0
	0x0395A444 MOV X0, X25
	0x0395A448 BL 0x2A0A2A8
	0x0395A44C MOV W1, W0
	0x0395A450 CBZ X19, 0x395A514
	0x0395A454 LDR X2, [X21]
	0x0395A458 MOV X0, X19
	0x0395A45C BL 0x2DAB03C
	0x0395A460 LDR W8, [X24 + 0x18]
	0x0395A464 ADD W26, W26, 0x1
	0x0395A468 CMP W26, W8
	0x0395A46C B.LT 0x395A428
	0x0395A470 B 0x395A3F0
	0x0395A474 MOV X26, X31
	0x0395A478 MOVZ W22, 0x24
	0x0395A47C ADRP X8, 0x7F5000
	0x0395A480 LDR X8, [X8 + 0x5D8]
	0x0395A484 LDR X1, [X8]
	0x0395A488 ADD X0, X31, 0xE0
	0x0395A48C BL 0x2BB2754
	0x0395A490 CBNZ X26, 0x395AF7C
	0x0395A494 CMP W22, 0x24
	0x0395A498 B.EQ 0x395A4A0
	0x0395A49C CBNZ W22, 0x395AD90
	0x0395A4A0 LDR X0, [X31 + 0x48]
	0x0395A4A4 CBZ X0, 0x395AF88
	0x0395A4A8 LDR W10, [X0 + 0x1C]
	0x0395A4AC ADRP X9, 0x7F5000
	0x0395A4B0 LDR X8, [X0 + 0x10]
	0x0395A4B4 LDR X9, [X9 + 0x208]
	0x0395A4B8 ADD W10, W10, 0x1
	0x0395A4BC ADRP X26, 0x7F5000
	0x0395A4C0 LDR X9, [X9]
	0x0395A4C4 STR W10, [X0 + 0x1C]
	0x0395A4C8 LDR X26, [X26 + 0x5C0]
	0x0395A4CC CBZ X8, 0x395AF84
	0x0395A4D0 LDRSW X10, [X0 + 0x18]
	0x0395A4D4 LDR W11, [X8 + 0x18]
	0x0395A4D8 CMP W10, W11
	0x0395A4DC B.CS 0x395A4F4
	0x0395A4E0 ADD W9, W10, 0x1
	0x0395A4E4 ADD X8, X8, X10, 0x3, LSL
	0x0395A4E8 STR W9, [X0 + 0x18]
	0x0395A4EC STR X19, [X8 + 0x20]
	0x0395A4F0 B 0x395A2E4
	0x0395A4F4 LDR X8, [X9 + 0x20]
	0x0395A4F8 LDR X8, [X8 + 0xC0]
	0x0395A4FC LDR X2, [X8 + 0x70]
	0x0395A500 MOV X1, X19
	0x0395A504 BL 0x301BF90
	0x0395A508 B 0x395A2E4
	0x0395A50C BL 0x1C16F20
	0x0395A510 B 0x395B004
	0x0395A514 BL 0x1C16F20
	0x0395A518 B 0x395B004
	0x0395A51C BL 0x1C16F20
	0x0395A520 B 0x395B004
	0x0395A524 BL 0x1C16F20
	0x0395A528 B 0x395B004
	0x0395A52C B 0x395A548
	0x0395A530 B 0x395A548
	0x0395A534 B 0x395A548
	0x0395A538 B 0x395A548
	0x0395A53C B 0x395A548
	0x0395A540 B 0x395A548
	0x0395A544 B 0x395A548
	0x0395A548 MOV X24, X1
	0x0395A54C MOV X22, X0
	0x0395A550 CMP W24, 0x1
	0x0395A554 B.NE 0x395ADD4
	0x0395A558 MOV X0, X22
	0x0395A55C BL 0x3EB1AD0
	0x0395A560 LDR X26, [X0]
	0x0395A564 BL 0x3EB1AE0
	0x0395A568 MOV W22, W31
	0x0395A56C B 0x395A47C
	0x0395A570 ADRP X8, 0x7F5000
	0x0395A574 LDR X8, [X8 + 0x5D0]
	0x0395A578 ADD X0, X31, 0x100
	0x0395A57C LDR X1, [X8]
	0x0395A580 BL 0x2BF5448
	0x0395A584 ADRP X21, 0x7F5000
	0x0395A588 ADRP X24, 0x7F5000
	0x0395A58C LDR X20, [X31 + 0x20]
	0x0395A590 LDR X21, [X21 + 0x310]
	0x0395A594 LDR X24, [X24 + 0x750]
	0x0395A598 LDR X0, [X24]
	0x0395A59C LDR W8, [X0 + 0xE0]
	0x0395A5A0 CBNZ W8, 0x395A5AC
	0x0395A5A4 BL 0x1C16DFC
	0x0395A5A8 LDR X0, [X24]
	0x0395A5AC LDR X8, [X0 + 0xB8]
	0x0395A5B0 LDR X19, [X8 + 0x18]
	0x0395A5B4 CBNZ X19, 0x395A608
	0x0395A5B8 LDR W8, [X0 + 0xE0]
	0x0395A5BC CBNZ W8, 0x395A5C8
	0x0395A5C0 BL 0x1C16DFC
	0x0395A5C4 LDR X0, [X24]
	0x0395A5C8 ADRP X9, 0x7F5000
	0x0395A5CC LDR X8, [X0 + 0xB8]
	0x0395A5D0 LDR X9, [X9 + 0x508]
	0x0395A5D4 LDR X22, [X8]
	0x0395A5D8 LDR X0, [X9]
	0x0395A5DC BL 0x1C16F10
	0x0395A5E0 ADRP X8, 0x7F5000
	0x0395A5E4 LDR X8, [X8 + 0x700]
	0x0395A5E8 MOV X1, X22
	0x0395A5EC MOV X3, X31
	0x0395A5F0 MOV X19, X0
	0x0395A5F4 LDR X2, [X8]
	0x0395A5F8 BL 0x2D30578
	0x0395A5FC LDR X8, [X24]
	0x0395A600 LDR X8, [X8 + 0xB8]
	0x0395A604 STR X19, [X8 + 0x18]
	0x0395A608 ADRP X8, 0x7F5000
	0x0395A60C LDR X8, [X8 + 0x4E8]
	0x0395A610 LDR X0, [X31 + 0x28]
	0x0395A614 MOV X1, X19
	0x0395A618 LDR X2, [X8]
	0x0395A61C BL 0x21CF224
	0x0395A620 ADRP X8, 0x7F4000
	0x0395A624 LDR X8, [X8 + 0xB08]
	0x0395A628 MOV X19, X0
	0x0395A62C LDR X8, [X8]
	0x0395A630 LDR W9, [X8 + 0xE0]
	0x0395A634 CBNZ W9, 0x395A640
	0x0395A638 MOV X0, X8
	0x0395A63C BL 0x1C16DFC
	0x0395A640 MOV X0, X20
	0x0395A644 MOV X1, X19
	0x0395A648 MOV W2, W31
	0x0395A64C MOV X3, X31
	0x0395A650 BL 0x3942FD0
	0x0395A654 MOV X26, X0
	0x0395A658 MOV X0, X20
	0x0395A65C MOV X1, X31
	0x0395A660 MOV X2, X31
	0x0395A664 BL 0x3912114
	0x0395A668 ADRP X8, 0x7F3000
	0x0395A66C LDR X8, [X8 + 0xDE8]
	0x0395A670 MOV X19, X0
	0x0395A674 LDR X8, [X8]
	0x0395A678 MOV X0, X8
	0x0395A67C BL 0x1C16F10
	0x0395A680 ADRP X8, 0x7F3000
	0x0395A684 LDR X8, [X8 + 0xDE0]
	0x0395A688 MOV X1, X19
	0x0395A68C MOV X25, X0
	0x0395A690 LDR X2, [X8]
	0x0395A694 BL 0x301B8E0
	0x0395A698 ADRP X8, 0x7F5000
	0x0395A69C LDR X8, [X8 + 0x318]
	0x0395A6A0 LDR X0, [X8]
	0x0395A6A4 BL 0x1C16F10
	0x0395A6A8 LDR X1, [X21]
	0x0395A6AC MOV X24, X0
	0x0395A6B0 BL 0x301B7C4
	0x0395A6B4 LDR X0, [X31 + 0x48]
	0x0395A6B8 CBZ X0, 0x395AF5C
	0x0395A6BC ADRP X8, 0x7F5000
	0x0395A6C0 LDR X8, [X8 + 0x6C0]
	0x0395A6C4 LDR X1, [X8]
	0x0395A6C8 ADD X8, X31, 0x90
	0x0395A6CC BL 0x301CB58
	0x0395A6D0 LDR V0, [X31 + 0x9]
	0x0395A6D4 LDR X8, [X31 + 0xA0]
	0x0395A6D8 ADRP X20, 0x7F5000
	0x0395A6DC ADRP X21, 0x79B000
	0x0395A6E0 ADRP X27, 0x7F5000
	0x0395A6E4 ADRP X28, 0x7F4000
	0x0395A6E8 ADRP X29, 0x7F4000
	0x0395A6EC LDR X20, [X20 + 0x610]
	0x0395A6F0 LDR X21, [X21 + 0x9D0]
	0x0395A6F4 LDR X27, [X27 + 0x720]
	0x0395A6F8 LDR X28, [X28 + 0x808]
	0x0395A6FC LDR X29, [X29 + 0x2A8]
	0x0395A700 STR V0, [X31 + 0xC]
	0x0395A704 STR X8, [X31 + 0xD0]
	0x0395A708 LDR X1, [X20]
	0x0395A70C ADD X0, X31, 0xC0
	0x0395A710 BL 0x2BC4350
	0x0395A714 TBZ X0, 0x0, 0x395A908
	0x0395A718 LDR X19, [X31 + 0xD0]
	0x0395A71C CBZ X19, 0x395AF60
	0x0395A720 LDR W8, [X19 + 0x20]
	0x0395A724 CMP W8, 0x3
	0x0395A728 B.LT 0x395A708
	0x0395A72C B.NE 0x395A80C
	0x0395A730 LDR X8, [X31 + 0x30]
	0x0395A734 LDR X23, [X8 + 0x20]
	0x0395A738 CBNZ X23, 0x395A760
	0x0395A73C LDR X0, [X21]
	0x0395A740 BL 0x1C16F10
	0x0395A744 LDR X22, [X31 + 0x30]
	0x0395A748 LDR X2, [X27]
	0x0395A74C MOV X23, X0
	0x0395A750 MOV X1, X22
	0x0395A754 MOV X3, X31
	0x0395A758 BL 0x2D2CF74
	0x0395A75C STR X23, [X22 + 0x20]
	0x0395A760 LDR X2, [X28]
	0x0395A764 MOV X0, X19
	0x0395A768 MOV X1, X23
	0x0395A76C BL 0x21CD49C
	0x0395A770 LDR X1, [X29]
	0x0395A774 BL 0x21D7880
	0x0395A778 MOV X1, X0
	0x0395A77C LDR X0, [X31 + 0x20]
	0x0395A780 MOV X2, X31
	0x0395A784 BL 0x3912114
	0x0395A788 ADRP X8, 0x7F3000
	0x0395A78C LDR X8, [X8 + 0xDE8]
	0x0395A790 MOV X22, X0
	0x0395A794 LDR X0, [X8]
	0x0395A798 BL 0x1C16F10
	0x0395A79C ADRP X8, 0x7F3000
	0x0395A7A0 LDR X8, [X8 + 0xDE0]
	0x0395A7A4 MOV X19, X0
	0x0395A7A8 LDR X2, [X8]
	0x0395A7AC MOV X1, X22
	0x0395A7B0 BL 0x301B8E0
	0x0395A7B4 MOVZ W1, 0x1
	0x0395A7B8 MOV X0, X19
	0x0395A7BC BL 0x394FDA4
	0x0395A7C0 MOV X1, X0
	0x0395A7C4 CBZ X24, 0x395AFD4
	0x0395A7C8 ADRP X9, 0x7F5000
	0x0395A7CC LDR W10, [X24 + 0x1C]
	0x0395A7D0 LDR X8, [X24 + 0x10]
	0x0395A7D4 LDR X9, [X9 + 0x308]
	0x0395A7D8 ADD W10, W10, 0x1
	0x0395A7DC LDR X9, [X9]
	0x0395A7E0 STR W10, [X24 + 0x1C]
	0x0395A7E4 CBZ X8, 0x395AFD8
	0x0395A7E8 LDRSW X10, [X24 + 0x18]
	0x0395A7EC LDR W11, [X8 + 0x18]
	0x0395A7F0 CMP W10, W11
	0x0395A7F4 B.CS 0x395A8F0
	0x0395A7F8 ADD W9, W10, 0x1
	0x0395A7FC ADD X8, X8, X10, 0x3, LSL
	0x0395A800 STR W9, [X24 + 0x18]
	0x0395A804 STR X1, [X8 + 0x20]
	0x0395A808 B 0x395A708
	0x0395A80C ADRP X8, 0x7F4000
	0x0395A810 LDR X8, [X8 + 0xB08]
	0x0395A814 LDR X0, [X8]
	0x0395A818 LDR W8, [X0 + 0xE0]
	0x0395A81C CBNZ W8, 0x395A824
	0x0395A820 BL 0x1C16DFC
	0x0395A824 MOV X0, X26
	0x0395A828 MOV X1, X19
	0x0395A82C MOV X2, X31
	0x0395A830 BL 0x3942BEC
	0x0395A834 MOV X19, X0
	0x0395A838 CBZ X0, 0x395A708
	0x0395A83C LDR X8, [X31 + 0x30]
	0x0395A840 LDR X23, [X8 + 0x28]
	0x0395A844 CBNZ X23, 0x395A874
	0x0395A848 LDR X0, [X21]
	0x0395A84C BL 0x1C16F10
	0x0395A850 LDR X22, [X31 + 0x30]
	0x0395A854 ADRP X8, 0x7F5000
	0x0395A858 LDR X8, [X8 + 0x728]
	0x0395A85C MOV X23, X0
	0x0395A860 LDR X2, [X8]
	0x0395A864 MOV X1, X22
	0x0395A868 MOV X3, X31
	0x0395A86C BL 0x2D2CF74
	0x0395A870 STR X23, [X22 + 0x28]
	0x0395A874 LDR X2, [X28]
	0x0395A878 MOV X0, X19
	0x0395A87C MOV X1, X23
	0x0395A880 BL 0x21CD49C
	0x0395A884 LDR X1, [X29]
	0x0395A888 BL 0x21D7880
	0x0395A88C MOV X1, X0
	0x0395A890 LDR X0, [X31 + 0x20]
	0x0395A894 MOV X2, X31
	0x0395A898 BL 0x3912114
	0x0395A89C ADRP X8, 0x7F3000
	0x0395A8A0 LDR X8, [X8 + 0xDE8]
	0x0395A8A4 MOV X19, X0
	0x0395A8A8 LDR X0, [X8]
	0x0395A8AC BL 0x1C16F10
	0x0395A8B0 ADRP X8, 0x7F3000
	0x0395A8B4 LDR X8, [X8 + 0xDE0]
	0x0395A8B8 MOV X22, X0
	0x0395A8BC LDR X2, [X8]
	0x0395A8C0 MOV X1, X19
	0x0395A8C4 BL 0x301B8E0
	0x0395A8C8 MOV X0, X22
	0x0395A8CC BL 0x3951E78
	0x0395A8D0 MOV X1, X0
	0x0395A8D4 CBZ X24, 0x395AFDC
	0x0395A8D8 ADRP X8, 0x7F5000
	0x0395A8DC LDR X8, [X8 + 0x6B8]
	0x0395A8E0 LDR X2, [X8]
	0x0395A8E4 MOV X0, X24
	0x0395A8E8 BL 0x301C194
	0x0395A8EC B 0x395A708
	0x0395A8F0 LDR X8, [X9 + 0x20]
	0x0395A8F4 LDR X8, [X8 + 0xC0]
	0x0395A8F8 LDR X2, [X8 + 0x70]
	0x0395A8FC MOV X0, X24
	0x0395A900 BL 0x301BF90
	0x0395A904 B 0x395A708
	0x0395A908 ADRP X8, 0x7F5000
	0x0395A90C LDR X8, [X8 + 0x5E8]
	0x0395A910 ADD X0, X31, 0xC0
	0x0395A914 LDR X1, [X8]
	0x0395A918 BL 0x2BC434C
	0x0395A91C LDR X20, [X31 + 0x20]
	0x0395A920 MOV X0, X24
	0x0395A924 MOV X2, X25
	0x0395A928 MOV X3, X31
	0x0395A92C MOV X1, X20
	0x0395A930 MOV X4, X31
	0x0395A934 BL 0x390186C
	0x0395A938 LDR X0, [X20 + 0x58]
	0x0395A93C MOV X1, X31
	0x0395A940 BL 0x3933C34
	0x0395A944 MOV X1, X0
	0x0395A948 MOV X0, X20
	0x0395A94C MOV X2, X31
	0x0395A950 BL 0x3915F7C
	0x0395A954 ADRP X23, 0x7F5000
	0x0395A958 LDR X23, [X23 + 0x750]
	0x0395A95C LDR X0, [X23]
	0x0395A960 LDR W8, [X0 + 0xE0]
	0x0395A964 CBNZ W8, 0x395A970
	0x0395A968 BL 0x1C16DFC
	0x0395A96C LDR X0, [X23]
	0x0395A970 LDR X8, [X0 + 0xB8]
	0x0395A974 LDR X19, [X8 + 0x20]
	0x0395A978 CBNZ X19, 0x395A9CC
	0x0395A97C LDR W8, [X0 + 0xE0]
	0x0395A980 CBNZ W8, 0x395A98C
	0x0395A984 BL 0x1C16DFC
	0x0395A988 LDR X0, [X23]
	0x0395A98C ADRP X9, 0x7F5000
	0x0395A990 LDR X8, [X0 + 0xB8]
	0x0395A994 LDR X9, [X9 + 0x508]
	0x0395A998 LDR X21, [X8]
	0x0395A99C LDR X0, [X9]
	0x0395A9A0 BL 0x1C16F10
	0x0395A9A4 ADRP X8, 0x7F5000
	0x0395A9A8 LDR X8, [X8 + 0x708]
	0x0395A9AC MOV X1, X21
	0x0395A9B0 MOV X3, X31
	0x0395A9B4 MOV X19, X0
	0x0395A9B8 LDR X2, [X8]
	0x0395A9BC BL 0x2D30578
	0x0395A9C0 LDR X8, [X23]
	0x0395A9C4 LDR X8, [X8 + 0xB8]
	0x0395A9C8 STR X19, [X8 + 0x20]
	0x0395A9CC ADRP X8, 0x7F5000
	0x0395A9D0 LDR X8, [X8 + 0x4E8]
	0x0395A9D4 MOV X0, X24
	0x0395A9D8 MOV X1, X19
	0x0395A9DC LDR X2, [X8]
	0x0395A9E0 BL 0x21CF224
	0x0395A9E4 ADRP X8, 0x7F4000
	0x0395A9E8 LDR X8, [X8 + 0x898]
	0x0395A9EC MOV X19, X0
	0x0395A9F0 LDR X8, [X8]
	0x0395A9F4 MOV X0, X8
	0x0395A9F8 BL 0x1C16F10
	0x0395A9FC ADRP X8, 0x7F5000
	0x0395AA00 LDR X8, [X8 + 0x678]
	0x0395AA04 MOV X1, X19
	0x0395AA08 MOV X21, X0
	0x0395AA0C LDR X2, [X8]
	0x0395AA10 BL 0x2DBDEEC
	0x0395AA14 CBZ X21, 0x395AF5C
	0x0395AA18 ADRP X8, 0x7F5000
	0x0395AA1C LDR X8, [X8 + 0x670]
	0x0395AA20 LDR X1, [X31 + 0x18]
	0x0395AA24 MOV X0, X21
	0x0395AA28 LDR X2, [X8]
	0x0395AA2C BL 0x2DBEF40
	0x0395AA30 LDR X0, [X31 + 0x28]
	0x0395AA34 CBZ X0, 0x395AF5C
	0x0395AA38 ADRP X8, 0x7F5000
	0x0395AA3C LDR X8, [X8 + 0x6B8]
	0x0395AA40 MOV X1, X24
	0x0395AA44 LDR X2, [X8]
	0x0395AA48 BL 0x301C194
	0x0395AA4C LDR X0, [X23]
	0x0395AA50 LDR W8, [X0 + 0xE0]
	0x0395AA54 CBNZ W8, 0x395AA60
	0x0395AA58 BL 0x1C16DFC
	0x0395AA5C LDR X0, [X23]
	0x0395AA60 LDR X8, [X0 + 0xB8]
	0x0395AA64 LDR X19, [X8 + 0x28]
	0x0395AA68 CBNZ X19, 0x395AABC
	0x0395AA6C LDR W8, [X0 + 0xE0]
	0x0395AA70 CBNZ W8, 0x395AA7C
	0x0395AA74 BL 0x1C16DFC
	0x0395AA78 LDR X0, [X23]
	0x0395AA7C ADRP X9, 0x7F5000
	0x0395AA80 LDR X8, [X0 + 0xB8]
	0x0395AA84 LDR X9, [X9 + 0x508]
	0x0395AA88 LDR X22, [X8]
	0x0395AA8C LDR X0, [X9]
	0x0395AA90 BL 0x1C16F10
	0x0395AA94 ADRP X8, 0x7F5000
	0x0395AA98 LDR X8, [X8 + 0x710]
	0x0395AA9C MOV X1, X22
	0x0395AAA0 MOV X3, X31
	0x0395AAA4 MOV X19, X0
	0x0395AAA8 LDR X2, [X8]
	0x0395AAAC BL 0x2D30578
	0x0395AAB0 LDR X8, [X23]
	0x0395AAB4 LDR X8, [X8 + 0xB8]
	0x0395AAB8 STR X19, [X8 + 0x28]
	0x0395AABC ADRP X8, 0x7F5000
	0x0395AAC0 LDR X8, [X8 + 0x4E8]
	0x0395AAC4 LDR X0, [X31 + 0x28]
	0x0395AAC8 MOV X1, X19
	0x0395AACC LDR X2, [X8]
	0x0395AAD0 BL 0x21CF224
	0x0395AAD4 ADRP X8, 0x7F4000
	0x0395AAD8 LDR X8, [X8 + 0xB08]
	0x0395AADC MOV X19, X0
	0x0395AAE0 LDR X8, [X8]
	0x0395AAE4 LDR W9, [X8 + 0xE0]
	0x0395AAE8 CBNZ W9, 0x395AAF4
	0x0395AAEC MOV X0, X8
	0x0395AAF0 BL 0x1C16DFC
	0x0395AAF4 MOV X0, X20
	0x0395AAF8 MOV X1, X19
	0x0395AAFC MOV W2, W31
	0x0395AB00 MOV X3, X31
	0x0395AB04 BL 0x3942FD0
	0x0395AB08 CBZ X0, 0x395AF5C
	0x0395AB0C LDR W8, [X0 + 0x18]
	0x0395AB10 MOV X20, X0
	0x0395AB14 CMP W8, 0x1
	0x0395AB18 B.LT 0x395AD48
	0x0395AB1C ADRP X22, 0x7F4000
	0x0395AB20 ADRP X25, 0x7F3000
	0x0395AB24 ADRP X26, 0x7F5000
	0x0395AB28 ADRP X27, 0x7F4000
	0x0395AB2C LDR X22, [X22 + 0xB00]
	0x0395AB30 LDR X25, [X25 + 0xE28]
	0x0395AB34 LDR X26, [X26 + 0x668]
	0x0395AB38 LDR X27, [X27 + 0xDD0]
	0x0395AB3C MOV W23, W31
	0x0395AB40 LDR W8, [X21 + 0x20]
	0x0395AB44 CMP W8, 0x0
	0x0395AB48 B.LE 0x395AD48
	0x0395AB4C LDR X2, [X22]
	0x0395AB50 MOV X0, X20
	0x0395AB54 MOV W1, W23
	0x0395AB58 BL 0x301BCCC
	0x0395AB5C CBZ X0, 0x395AF5C
	0x0395AB60 LDR X1, [X0 + 0x20]
	0x0395AB64 LDR X2, [X25]
	0x0395AB68 MOV X19, X0
	0x0395AB6C MOV X0, X21
	0x0395AB70 BL 0x2DBE4B0
	0x0395AB74 TBZ X0, 0x0, 0x395ACC0
	0x0395AB78 LDR X1, [X19 + 0x20]
	0x0395AB7C LDR X2, [X26]
	0x0395AB80 MOV X0, X21
	0x0395AB84 BL 0x2DBE67C
	0x0395AB88 LDR X0, [X27]
	0x0395AB8C BL 0x1C16F10
	0x0395AB90 MOV X1, X19
	0x0395AB94 MOV X2, X31
	0x0395AB98 MOV X24, X0
	0x0395AB9C BL 0x3943870
	0x0395ABA0 CBZ X24, 0x395ACDC
	0x0395ABA4 MOV X0, X24
	0x0395ABA8 MOV X1, X31
	0x0395ABAC BL 0x3943898
	0x0395ABB0 TBZ X0, 0x0, 0x395AC44
	0x0395ABB4 MOV X0, X24
	0x0395ABB8 MOV X1, X31
	0x0395ABBC BL 0x39438DC
	0x0395ABC0 MOV X19, X0
	0x0395ABC4 CBZ X0, 0x395ACD4
	0x0395ABC8 LDR X8, [X19 + 0x38]
	0x0395ABCC CBZ X8, 0x395ABA4
	0x0395ABD0 LDR X1, [X8 + 0x20]
	0x0395ABD4 LDR X2, [X25]
	0x0395ABD8 MOV X0, X21
	0x0395ABDC BL 0x2DBE4B0
	0x0395ABE0 TBNZ X0, 0x0, 0x395ABA4
	0x0395ABE4 LDR X8, [X19 + 0x38]
	0x0395ABE8 CBZ X8, 0x395ACE4
	0x0395ABEC LDR X8, [X8 + 0x20]
	0x0395ABF0 CBZ X8, 0x395ACEC
	0x0395ABF4 LDR X28, [X19 + 0x20]
	0x0395ABF8 CBZ X28, 0x395ACF4
	0x0395ABFC LDR W9, [X8 + 0x48]
	0x0395AC00 MOVI V2.2D, 0x0
	0x0395AC04 STR W9, [X28 + 0x48]
	0x0395AC08 LDUR V0, [X8 + 0x2C]
	0x0395AC0C LDUR V1, [X8 + 0x1C]
	0x0395AC10 STP V2, V2, [X31 + 0x70]
	0x0395AC14 STP V1, V0, [X31 + 0x90]
	0x0395AC18 STP V1, V0, [X31 + 0x50]
	0x0395AC1C ADD X0, X31, 0x70
	0x0395AC20 ADD X1, X31, 0x50
	0x0395AC24 MOV X2, X31
	0x0395AC28 BL 0x38F69EC
	0x0395AC2C LDP V1, V0, [X31 + 0x70]
	0x0395AC30 STUR V0, [X28 + 0x2C]
	0x0395AC34 STUR V1, [X28 + 0x1C]
	0x0395AC38 LDR X0, [X19 + 0x38]
	0x0395AC3C MOV X1, X31
	0x0395AC40 BL 0x397AD7C
	0x0395AC44 MOV X19, X31
	0x0395AC48 MOVZ W28, 0x31
	0x0395AC4C CBZ X24, 0x395ACB0
	0x0395AC50 LDR X8, [X24]
	0x0395AC54 ADRP X10, 0x799000
	0x0395AC58 LDRH W9, [X8 + 0x12E]
	0x0395AC5C LDR X10, [X10 + 0xE00]
	0x0395AC60 LDR X1, [X10]
	0x0395AC64 CBZ X9, 0x395AC88
	0x0395AC68 LDR X10, [X8 + 0xB0]
	0x0395AC6C ADD X10, X10, 0x8
	0x0395AC70 LDUR X11, [X10 - 0x8]
	0x0395AC74 CMP X11, X1
	0x0395AC78 B.EQ 0x395AC98
	0x0395AC7C SUBS X9, X9, 0x1
	0x0395AC80 ADD X10, X10, 0x10
	0x0395AC84 B.NE 0x395AC70
	0x0395AC88 MOV X0, X24
	0x0395AC8C MOV W2, W31
	0x0395AC90 BL 0x1C5C788
	0x0395AC94 B 0x395ACA4
	0x0395AC98 LDRSW X9, [X10]
	0x0395AC9C ADD X8, X8, X9, 0x4, LSL
	0x0395ACA0 ADD X0, X8, 0x138
	0x0395ACA4 LDP X8, X1, [X0]
	0x0395ACA8 MOV X0, X24
	0x0395ACAC BLR X8
	0x0395ACB0 CBNZ X19, 0x395B39C
	0x0395ACB4 CMP W28, 0x31
	0x0395ACB8 B.EQ 0x395ACC0
	0x0395ACBC CBNZ W28, 0x395ADA4
	0x0395ACC0 LDR W8, [X20 + 0x18]
	0x0395ACC4 ADD W23, W23, 0x1
	0x0395ACC8 CMP W23, W8
	0x0395ACCC B.LT 0x395AB40
	0x0395ACD0 B 0x395AD48
	0x0395ACD4 BL 0x1C16F20
	0x0395ACD8 B 0x395B004
	0x0395ACDC BL 0x1C16F20
	0x0395ACE0 B 0x395B00C
	0x0395ACE4 BL 0x1C16F20
	0x0395ACE8 B 0x395B004
	0x0395ACEC BL 0x1C16F20
	0x0395ACF0 B 0x395B004
	0x0395ACF4 BL 0x1C16F20
	0x0395ACF8 B 0x395B004
	0x0395ACFC B 0x395AD20
	0x0395AD00 B 0x395AD20
	0x0395AD04 B 0x395AD20
	0x0395AD08 B 0x395AD20
	0x0395AD0C B 0x395AD20
	0x0395AD10 B 0x395AD20
	0x0395AD14 B 0x395AD20
	0x0395AD18 B 0x395AD20
	0x0395AD1C B 0x395AD20
	0x0395AD20 CMP W1, 0x1
	0x0395AD24 STR X0, [X31 + 0x10]
	0x0395AD28 B.NE 0x395B004
	0x0395AD2C LDR X0, [X31 + 0x10]
	0x0395AD30 BL 0x3EB1AD0
	0x0395AD34 LDR X19, [X0]
	0x0395AD38 BL 0x3EB1AE0
	0x0395AD3C MOV W28, W31
	0x0395AD40 CBNZ X24, 0x395AC50
	0x0395AD44 B 0x395ACB0
	0x0395AD48 LDR X0, [X31 + 0x20]
	0x0395AD4C MOV W1, W31
	0x0395AD50 MOV X2, X31
	0x0395AD54 BL 0x39197E8
	0x0395AD58 LDR X0, [X31 + 0x18]
	0x0395AD5C B 0x395ADA4
	0x0395AD60 ADRP X8, 0x7A0000
	0x0395AD64 LDR X8, [X8 + 0x830]
	0x0395AD68 ADD X0, X31, 0x190
	0x0395AD6C LDR X1, [X8]
	0x0395AD70 BL 0x2BBDA68
	0x0395AD74 B 0x395ADA4
	0x0395AD78 ADRP X8, 0x7F5000
	0x0395AD7C LDR X8, [X8 + 0x5E0]
	0x0395AD80 ADD X0, X31, 0x160
	0x0395AD84 LDR X1, [X8]
	0x0395AD88 BL 0x2C0A83C
	0x0395AD8C B 0x395ADA4
	0x0395AD90 ADRP X8, 0x7F5000
	0x0395AD94 LDR X8, [X8 + 0x5D0]
	0x0395AD98 ADD X0, X31, 0x100
	0x0395AD9C LDR X1, [X8]
	0x0395ADA0 BL 0x2BF5448
	0x0395ADA4 ADD X31, X31, 0x1F0
	0x0395ADA8 LDP X20, X19, [X31 + 0x90]
	0x0395ADAC LDP X22, X21, [X31 + 0x80]
	0x0395ADB0 LDP X24, X23, [X31 + 0x70]
	0x0395ADB4 LDP X26, X25, [X31 + 0x60]
	0x0395ADB8 LDP X28, X27, [X31 + 0x50]
	0x0395ADBC LDP X29, X30, [X31 + 0x40]
	0x0395ADC0 LDP D9, D8, [X31 + 0x30]
	0x0395ADC4 LDP D11, D10, [X31 + 0x20]
	0x0395ADC8 LDP D13, D12, [X31 + 0x10]
	0x0395ADCC LDP D15, D14, [X31], #0xA0
	0x0395ADD0 RET
	0x0395ADD4 MOV X26, X31
	0x0395ADD8 ADRP X8, 0x7F5000
	0x0395ADDC LDR X8, [X8 + 0x5D8]
	0x0395ADE0 LDR X1, [X8]
	0x0395ADE4 ADD X0, X31, 0xE0
	0x0395ADE8 BL 0x2BB2754
	0x0395ADEC ADRP X21, 0x7F5000
	0x0395ADF0 LDR X20, [X31 + 0x20]
	0x0395ADF4 LDR X21, [X21 + 0x310]
	0x0395ADF8 CBNZ X26, 0x395AFFC
	0x0395ADFC CMP W24, 0x1
	0x0395AE00 ADRP X24, 0x7F5000
	0x0395AE04 LDR X24, [X24 + 0x750]
	0x0395AE08 B.NE 0x395AFF0
	0x0395AE0C MOV X0, X22
	0x0395AE10 BL 0x3EB1AD0
	0x0395AE14 LDR X19, [X0]
	0x0395AE18 BL 0x3EB1AE0
	0x0395AE1C ADRP X8, 0x7F5000
	0x0395AE20 LDR X8, [X8 + 0x5D0]
	0x0395AE24 ADD X0, X31, 0x100
	0x0395AE28 LDR X1, [X8]
	0x0395AE2C BL 0x2BF5448
	0x0395AE30 CBZ X19, 0x395A598
	0x0395AE34 B 0x395B39C
	0x0395AE38 MOV X19, X1
	0x0395AE3C MOV X26, X31
	0x0395AE40 ADRP X8, 0x7F4000
	0x0395AE44 LDR X8, [X8 + 0xD98]
	0x0395AE48 LDR X1, [X8]
	0x0395AE4C ADD X0, X31, 0x1B0
	0x0395AE50 BL 0x2BC434C
	0x0395AE54 MOV X1, X19
	0x0395AE58 CBZ X26, 0x395B36C
	0x0395AE5C MOV X0, X26
	0x0395AE60 BL 0x1C16F18
	0x0395AE64 MOV X20, X1
	0x0395AE68 MOV X19, X31
	0x0395AE6C ADRP X8, 0x7F4000
	0x0395AE70 LDR X8, [X8 + 0xD98]
	0x0395AE74 LDR X1, [X8]
	0x0395AE78 ADD X0, X31, 0x1B0
	0x0395AE7C BL 0x2BC434C
	0x0395AE80 MOV X1, X20
	0x0395AE84 CBZ X19, 0x395B36C
	0x0395AE88 MOV X0, X19
	0x0395AE8C BL 0x1C16F18
	0x0395AE90 STR X0, [X31 + 0x10]
	0x0395AE94 MOV X27, X31
	0x0395AE98 CBZ X26, 0x395AF24
	0x0395AE9C LDR X8, [X26]
	0x0395AEA0 ADRP X10, 0x799000
	0x0395AEA4 LDRH W9, [X8 + 0x12E]
	0x0395AEA8 LDR X10, [X10 + 0xE00]
	0x0395AEAC LDR X1, [X10]
	0x0395AEB0 CBZ X9, 0x395AED4
	0x0395AEB4 LDR X10, [X8 + 0xB0]
	0x0395AEB8 ADD X10, X10, 0x8
	0x0395AEBC LDUR X11, [X10 - 0x8]
	0x0395AEC0 CMP X11, X1
	0x0395AEC4 B.EQ 0x395AF0C
	0x0395AEC8 SUBS X9, X9, 0x1
	0x0395AECC ADD X10, X10, 0x10
	0x0395AED0 B.NE 0x395AEBC
	0x0395AED4 MOV X0, X26
	0x0395AED8 MOV W2, W31
	0x0395AEDC BL 0x1C5C788
	0x0395AEE0 B 0x395AF18
	0x0395AEE4 BL 0x1C16F20
	0x0395AEE8 BL 0x1C16F20
	0x0395AEEC BL 0x1C16F20
	0x0395AEF0 BL 0x1C16F20
	0x0395AEF4 MOV X0, X26
	0x0395AEF8 BL 0x1C16F18
	0x0395AEFC MOV X0, X19
	0x0395AF00 BL 0x1C16F18
	0x0395AF04 BL 0x1C16F20
	0x0395AF08 BL 0x1C16F20
	0x0395AF0C LDRSW X9, [X10]
	0x0395AF10 ADD X8, X8, X9, 0x4, LSL
	0x0395AF14 ADD X0, X8, 0x138
	0x0395AF18 LDP X8, X1, [X0]
	0x0395AF1C MOV X0, X26
	0x0395AF20 BLR X8
	0x0395AF24 CBZ X27, 0x395B2B4
	0x0395AF28 MOV X0, X27
	0x0395AF2C BL 0x1C16F18
	0x0395AF30 MOV X25, X31
	0x0395AF34 LDR X1, [X20]
	0x0395AF38 ADD X0, X31, 0x130
	0x0395AF3C BL 0x2BF5448
	0x0395AF40 CBZ X25, 0x395B228
	0x0395AF44 MOV X0, X25
	0x0395AF48 BL 0x1C16F18
	0x0395AF4C BL 0x1C16F20
	0x0395AF50 BL 0x1C16F20
	0x0395AF54 MOV X0, X27
	0x0395AF58 BL 0x1C16F18
	0x0395AF5C BL 0x1C16F20
	0x0395AF60 BL 0x1C16F20
	0x0395AF64 BL 0x1C16F20
	0x0395AF68 BL 0x1C16F20
	0x0395AF6C BL 0x1C16F20
	0x0395AF70 MOV X0, X25
	0x0395AF74 BL 0x1C16F18
	0x0395AF78 BL 0x1C16F20
	0x0395AF7C MOV X0, X26
	0x0395AF80 BL 0x1C16F18
	0x0395AF84 BL 0x1C16F20
	0x0395AF88 BL 0x1C16F20
	0x0395AF8C ADRP X0, 0x79E000
	0x0395AF90 LDR X0, [X0 + 0x528]
	0x0395AF94 BL 0x1C16D08
	0x0395AF98 BL 0x1C16F10
	0x0395AF9C MOV X19, X0
	0x0395AFA0 ADRP X0, 0x7F3000
	0x0395AFA4 LDR X0, [X0 + 0xE90]
	0x0395AFA8 BL 0x1C16D08
	0x0395AFAC MOV X1, X0
	0x0395AFB0 MOV X0, X19
	0x0395AFB4 MOV X2, X31
	0x0395AFB8 BL 0x330E100
	0x0395AFBC ADRP X0, 0x7F5000
	0x0395AFC0 LDR X0, [X0 + 0x768]
	0x0395AFC4 BL 0x1C16D08
	0x0395AFC8 MOV X1, X0
	0x0395AFCC MOV X0, X19
	0x0395AFD0 BL 0x1C16DEC
	0x0395AFD4 BL 0x1C16F20
	0x0395AFD8 BL 0x1C16F20
	0x0395AFDC BL 0x1C16F20
	0x0395AFE0 BL 0x1C16F20
	0x0395AFE4 BL 0x1C16F20
	0x0395AFE8 BL 0x1C16F20
	0x0395AFEC BL 0x1C16F20
	0x0395AFF0 STR X22, [X31 + 0x10]
	0x0395AFF4 MOV X19, X31
	0x0395AFF8 B 0x395B084
	0x0395AFFC MOV X0, X26
	0x0395B000 BL 0x1C16F18
	0x0395B004 MOV X19, X31
	0x0395B008 B 0x395B010
	0x0395B00C STR X0, [X31 + 0x10]
	0x0395B010 CBZ X24, 0x395B074
	0x0395B014 LDR X8, [X24]
	0x0395B018 ADRP X10, 0x798000
	0x0395B01C LDRH W9, [X8 + 0x12E]
	0x0395B020 LDR X10, [X10 + 0xE00]
	0x0395B024 LDR X1, [X10]
	0x0395B028 CBZ X9, 0x395B04C
	0x0395B02C LDR X10, [X8 + 0xB0]
	0x0395B030 ADD X10, X10, 0x8
	0x0395B034 LDUR X11, [X10 - 0x8]
	0x0395B038 CMP X11, X1
	0x0395B03C B.EQ 0x395B05C
	0x0395B040 SUBS X9, X9, 0x1
	0x0395B044 ADD X10, X10, 0x10
	0x0395B048 B.NE 0x395B034
	0x0395B04C MOV X0, X24
	0x0395B050 MOV W2, W31
	0x0395B054 BL 0x1C5C788
	0x0395B058 B 0x395B068
	0x0395B05C LDRSW X9, [X10]
	0x0395B060 ADD X8, X8, X9, 0x4, LSL
	0x0395B064 ADD X0, X8, 0x138
	0x0395B068 LDP X8, X1, [X0]
	0x0395B06C MOV X0, X24
	0x0395B070 BLR X8
	0x0395B074 CBZ X19, 0x395B3CC
	0x0395B078 MOV X0, X19
	0x0395B07C BL 0x1C16F18
	0x0395B080 STR X0, [X31 + 0x10]
	0x0395B084 ADRP X8, 0x7F4000
	0x0395B088 LDR X8, [X8 + 0x5D0]
	0x0395B08C LDR X1, [X8]
	0x0395B090 ADD X0, X31, 0x100
	0x0395B094 BL 0x2BF5448
	0x0395B098 CBZ X19, 0x395B3CC
	0x0395B09C MOV X0, X19
	0x0395B0A0 BL 0x1C16F18
	0x0395B0A4 MOV X19, X1
	0x0395B0A8 STR X0, [X31 + 0x10]
	0x0395B0AC B 0x395AF34
	0x0395B0B0 MOV X19, X1
	0x0395B0B4 STR X0, [X31 + 0x10]
	0x0395B0B8 CBNZ X26, 0x395AE9C
	0x0395B0BC B 0x395AF24
	0x0395B0C0 MOV X20, X1
	0x0395B0C4 MOV X22, X0
	0x0395B0C8 B 0x395AE6C
	0x0395B0CC MOV X19, X1
	0x0395B0D0 MOV X22, X0
	0x0395B0D4 B 0x395AE40
	0x0395B0D8 MOV X24, X1
	0x0395B0DC MOV X22, X0
	0x0395B0E0 B 0x395ADD8
	0x0395B0E4 B 0x395B3E0
	0x0395B0E8 B 0x395B3E0
	0x0395B0EC B 0x395B3E0
	0x0395B0F0 B 0x395B3E0
	0x0395B0F4 B 0x395B3E0
	0x0395B0F8 B 0x395B3E0
	0x0395B0FC B 0x395B3E0
	0x0395B100 B 0x395B3E0
	0x0395B104 B 0x395B3E0
	0x0395B108 B 0x395B3E0
	0x0395B10C B 0x395B3E0
	0x0395B110 B 0x395B1B4
	0x0395B114 B 0x395B3E0
	0x0395B118 B 0x395B1B4
	0x0395B11C B 0x395B19C
	0x0395B120 B 0x395B3E0
	0x0395B124 B 0x395B1B4
	0x0395B128 B 0x395B1B4
	0x0395B12C B 0x395B1B4
	0x0395B130 B 0x395B1B4
	0x0395B134 B 0x395B1B4
	0x0395B138 B 0x395B19C
	0x0395B13C B 0x395B1B4
	0x0395B140 B 0x395B1B4
	0x0395B144 B 0x395B1B4
	0x0395B148 B 0x395B1B4
	0x0395B14C B 0x395B1B4
	0x0395B150 B 0x395B1B4
	0x0395B154 B 0x395B19C
	0x0395B158 B 0x395B1B4
	0x0395B15C B 0x395B220
	0x0395B160 B 0x395B19C
	0x0395B164 B 0x395B19C
	0x0395B168 B 0x395B19C
	0x0395B16C B 0x395B19C
	0x0395B170 B 0x395B1B4
	0x0395B174 B 0x395B1B4
	0x0395B178 B 0x395B19C
	0x0395B17C B 0x395B220
	0x0395B180 B 0x395B220
	0x0395B184 B 0x395B220
	0x0395B188 B 0x395B220
	0x0395B18C B 0x395B19C
	0x0395B190 B 0x395B19C
	0x0395B194 B 0x395B19C
	0x0395B198 B 0x395B1B4
	0x0395B19C ADRP X21, 0x7F4000
	0x0395B1A0 LDR X20, [X31 + 0x20]
	0x0395B1A4 LDR X21, [X21 + 0x310]
	0x0395B1A8 MOV X24, X1
	0x0395B1AC MOV X22, X0
	0x0395B1B0 B 0x395ADFC
	0x0395B1B4 CMP W1, 0x1
	0x0395B1B8 STR X0, [X31 + 0x10]
	0x0395B1BC B.NE 0x395B1EC
	0x0395B1C0 LDR X0, [X31 + 0x10]
	0x0395B1C4 BL 0x3EB1AD0
	0x0395B1C8 LDR X19, [X0]
	0x0395B1CC BL 0x3EB1AE0
	0x0395B1D0 ADRP X8, 0x7F4000
	0x0395B1D4 LDR X8, [X8 + 0x5E8]
	0x0395B1D8 ADD X0, X31, 0xC0
	0x0395B1DC LDR X1, [X8]
	0x0395B1E0 BL 0x2BC434C
	0x0395B1E4 CBZ X19, 0x395A91C
	0x0395B1E8 B 0x395B39C
	0x0395B1EC MOV X19, X31
	0x0395B1F0 B 0x395B1F8
	0x0395B1F4 STR X0, [X31 + 0x10]
	0x0395B1F8 ADRP X8, 0x7F4000
	0x0395B1FC LDR X8, [X8 + 0x5E8]
	0x0395B200 LDR X1, [X8]
	0x0395B204 ADD X0, X31, 0xC0
	0x0395B208 BL 0x2BC434C
	0x0395B20C CBZ X19, 0x395B3CC
	0x0395B210 MOV X0, X19
	0x0395B214 BL 0x1C16F18
	0x0395B218 B 0x395B220
	0x0395B21C B 0x395B220
	0x0395B220 MOV X19, X1
	0x0395B224 STR X0, [X31 + 0x10]
	0x0395B228 CMP W19, 0x1
	0x0395B22C B.NE 0x395B25C
	0x0395B230 LDR X0, [X31 + 0x10]
	0x0395B234 BL 0x3EB1AD0
	0x0395B238 LDR X19, [X0]
	0x0395B23C BL 0x3EB1AE0
	0x0395B240 ADRP X8, 0x7F4000
	0x0395B244 LDR X8, [X8 + 0x5E0]
	0x0395B248 ADD X0, X31, 0x160
	0x0395B24C LDR X1, [X8]
	0x0395B250 BL 0x2C0A83C
	0x0395B254 CBZ X19, 0x395A1CC
	0x0395B258 B 0x395B39C
	0x0395B25C MOV X19, X31
	0x0395B260 B 0x395B268
	0x0395B264 STR X0, [X31 + 0x10]
	0x0395B268 ADRP X8, 0x7F4000
	0x0395B26C LDR X8, [X8 + 0x5E0]
	0x0395B270 LDR X1, [X8]
	0x0395B274 ADD X0, X31, 0x160
	0x0395B278 BL 0x2C0A83C
	0x0395B27C CBZ X19, 0x395B3CC
	0x0395B280 MOV X0, X19
	0x0395B284 BL 0x1C16F18
	0x0395B288 B 0x395B2AC
	0x0395B28C B 0x395B2AC
	0x0395B290 B 0x395B2AC
	0x0395B294 B 0x395B2AC
	0x0395B298 B 0x395B2AC
	0x0395B29C B 0x395B2AC
	0x0395B2A0 B 0x395B2AC
	0x0395B2A4 B 0x395B2AC
	0x0395B2A8 B 0x395B2AC
	0x0395B2AC MOV X19, X1
	0x0395B2B0 STR X0, [X31 + 0x10]
	0x0395B2B4 CMP W19, 0x1
	0x0395B2B8 B.NE 0x395B2E8
	0x0395B2BC LDR X0, [X31 + 0x10]
	0x0395B2C0 BL 0x3EB1AD0
	0x0395B2C4 LDR X19, [X0]
	0x0395B2C8 BL 0x3EB1AE0
	0x0395B2CC ADRP X8, 0x79F000
	0x0395B2D0 LDR X8, [X8 + 0x830]
	0x0395B2D4 ADD X0, X31, 0x190
	0x0395B2D8 LDR X1, [X8]
	0x0395B2DC BL 0x2BBDA68
	0x0395B2E0 CBZ X19, 0x3959FE0
	0x0395B2E4 B 0x395B39C
	0x0395B2E8 MOV X19, X31
	0x0395B2EC B 0x395B2F4
	0x0395B2F0 STR X0, [X31 + 0x10]
	0x0395B2F4 ADRP X8, 0x79F000
	0x0395B2F8 LDR X8, [X8 + 0x830]
	0x0395B2FC LDR X1, [X8]
	0x0395B300 ADD X0, X31, 0x190
	0x0395B304 BL 0x2BBDA68
	0x0395B308 CBZ X19, 0x395B3CC
	0x0395B30C MOV X0, X19
	0x0395B310 BL 0x1C16F18
	0x0395B314 B 0x395B364
	0x0395B318 B 0x395B364
	0x0395B31C B 0x395B364
	0x0395B320 B 0x395B364
	0x0395B324 B 0x395B364
	0x0395B328 B 0x395B364
	0x0395B32C B 0x395B364
	0x0395B330 B 0x395B364
	0x0395B334 B 0x395B364
	0x0395B338 B 0x395B364
	0x0395B33C B 0x395B364
	0x0395B340 B 0x395B364
	0x0395B344 B 0x395B3E0
	0x0395B348 B 0x395B3E0
	0x0395B34C B 0x395B3E0
	0x0395B350 B 0x395B364
	0x0395B354 B 0x395B364
	0x0395B358 MOV X22, X0
	0x0395B35C MOV V8.16B, V9.16B
	0x0395B360 B 0x395B36C
	0x0395B364 MOV X22, X0
	0x0395B368 MOV V8.16B, V11.16B
	0x0395B36C CMP W1, 0x1
	0x0395B370 B.NE 0x395B3A4
	0x0395B374 MOV X0, X22
	0x0395B378 BL 0x3EB1AD0
	0x0395B37C LDR X19, [X0]
	0x0395B380 BL 0x3EB1AE0
	0x0395B384 ADRP X8, 0x7F4000
	0x0395B388 LDR X8, [X8 + 0x5F8]
	0x0395B38C ADD X0, X31, 0x1D0
	0x0395B390 LDR X1, [X8]
	0x0395B394 BL 0x2BBB624
	0x0395B398 CBZ X19, 0x3959964
	0x0395B39C MOV X0, X19
	0x0395B3A0 BL 0x1C16F18
	0x0395B3A4 STR X22, [X31 + 0x10]
	0x0395B3A8 MOV X19, X31
	0x0395B3AC B 0x395B3B4
	0x0395B3B0 STR X0, [X31 + 0x10]
	0x0395B3B4 ADRP X8, 0x7F4000
	0x0395B3B8 LDR X8, [X8 + 0x5F8]
	0x0395B3BC LDR X1, [X8]
	0x0395B3C0 ADD X0, X31, 0x1D0
	0x0395B3C4 BL 0x2BBB624
	0x0395B3C8 CBNZ X19, 0x395B3D4
	0x0395B3CC LDR X0, [X31 + 0x10]
	0x0395B3D0 BL 0x1D2C690
	0x0395B3D4 MOV X0, X19
	0x0395B3D8 BL 0x1C16F18
	0x0395B3DC B 0x395B3E0
	0x0395B3E0 CMP W1, 0x1
	0x0395B3E4 STR X0, [X31 + 0x10]
	0x0395B3E8 B.NE 0x395B41C
	0x0395B3EC LDR X0, [X31 + 0x10]
	0x0395B3F0 BL 0x3EB1AD0
	0x0395B3F4 LDR X19, [X0]
	0x0395B3F8 BL 0x3EB1AE0
	0x0395B3FC ADRP X8, 0x7F4000
	0x0395B400 LDR X8, [X8 + 0x5F8]
	0x0395B404 ADD X0, X31, 0x1D0
	0x0395B408 LDR X1, [X8]
	0x0395B40C BL 0x2BBB624
	0x0395B410 LDR X29, [X31 + 0x18]
	0x0395B414 CBZ X19, 0x3959B70
	0x0395B418 B 0x395B39C
	0x0395B41C MOV X19, X31
	0x0395B420 B 0x395B428
	0x0395B424 STR X0, [X31 + 0x10]
	0x0395B428 ADRP X8, 0x7F4000
	0x0395B42C LDR X8, [X8 + 0x5F8]
	0x0395B430 LDR X1, [X8]
	0x0395B434 ADD X0, X31, 0x1D0
	0x0395B438 BL 0x2BBB624
	0x0395B43C CBZ X19, 0x395B3CC
	0x0395B440 MOV X0, X19
	0x0395B444 BL 0x1C16F18
	0x0395B448 BL 0x1990590
	0x0395B44C MOV X1, X31
	0x0395B450 B 0x33BDD8C
	0x0395B454 MOV X1, X31
	0x0395B458 B 0x33BDD8C
	0x0395B45C SUB X31, X31, 0x50
	0x0395B460 STR D8, [X31 + 0x10]
	0x0395B464 STR X30, [X31 + 0x18]
	0x0395B468 STP X24, X23, [X31 + 0x20]
	0x0395B46C STP X22, X21, [X31 + 0x30]
	0x0395B470 STP X20, X19, [X31 + 0x40]
	0x0395B474 ADRP X21, 0xA86000
	0x0395B478 LDRB W8, [X21 + 0x9A2]
	0x0395B47C MOV V8.16B, V0.16B
	0x0395B480 MOV X20, X1
	0x0395B484 MOV X19, X0
	0x0395B488 TBNZ X8, 0x0, 0x395B4B8
	0x0395B48C ADRP X0, 0x7F4000
	0x0395B490 LDR X0, [X0 + 0x558]
	0x0395B494 BL 0x1C16CF4
	0x0395B498 ADRP X0, 0x7C0000
	0x0395B49C LDR X0, [X0 + 0x600]
	0x0395B4A0 BL 0x1C16CF4
	0x0395B4A4 ADRP X0, 0x7F2000
	0x0395B4A8 LDR X0, [X0 + 0xF60]
	0x0395B4AC BL 0x1C16CF4
	0x0395B4B0 MOVZ W8, 0x1
	0x0395B4B4 STRB W8, [X21 + 0x9A2]
	0x0395B4B8 CBZ X20, 0x395B85C
	0x0395B4BC LDR X8, [X20 + 0x20]
	0x0395B4C0 CBZ X8, 0x395B85C
	0x0395B4C4 ADRP X9, 0x7F4000
	0x0395B4C8 LDR X9, [X9 + 0x558]
	0x0395B4CC MOVZ W10, 0x1
	0x0395B4D0 MOVN W11, 0x0
	0x0395B4D4 STRB W10, [X8 + 0x4C]
	0x0395B4D8 STR W11, [X8 + 0x54]
	0x0395B4DC LDR X0, [X9]
	0x0395B4E0 ADRP X22, 0x7C0000
	0x0395B4E4 LDR W21, [X20 + 0x18]
	0x0395B4E8 LDR W8, [X0 + 0xE0]
	0x0395B4EC LDR X22, [X22 + 0x600]
	0x0395B4F0 CBNZ W8, 0x395B4F8
	0x0395B4F4 BL 0x1C16DFC
	0x0395B4F8 MOV X0, X20
	0x0395B4FC MOV W1, W21
	0x0395B500 BL 0x395C1F0
	0x0395B504 STR X0, [X31 + 0x8]
	0x0395B508 LDR W1, [X20 + 0x1C]
	0x0395B50C MOV X0, X20
	0x0395B510 BL 0x395C1F0
	0x0395B514 LDR X8, [X22]
	0x0395B518 STR X0, [X31]
	0x0395B51C LDR W9, [X8 + 0xE0]
	0x0395B520 CBNZ W9, 0x395B52C
	0x0395B524 MOV X0, X8
	0x0395B528 BL 0x1C16DFC
	0x0395B52C ADD X0, X31, 0x8
	0x0395B530 MOV X1, X31
	0x0395B534 BL 0x38FDC2C
	0x0395B538 TBZ X0, 0x0, 0x395B840
	0x0395B53C LDR X0, [X22]
	0x0395B540 LDR W8, [X0 + 0xE0]
	0x0395B544 CBNZ W8, 0x395B54C
	0x0395B548 BL 0x1C16DFC
	0x0395B54C ADD X0, X31, 0x0
	0x0395B550 MOV X1, X31
	0x0395B554 BL 0x38FDC2C
	0x0395B558 TBZ X0, 0x0, 0x395B840
	0x0395B55C CBZ X19, 0x395B85C
	0x0395B560 ADRP X24, 0x7F2000
	0x0395B564 LDR X8, [X19]
	0x0395B568 LDR W21, [X31 + 0x8]
	0x0395B56C LDR X24, [X24 + 0xF60]
	0x0395B570 LDRH W9, [X8 + 0x12E]
	0x0395B574 LDR X1, [X24]
	0x0395B578 CBZ X9, 0x395B59C
	0x0395B57C LDR X10, [X8 + 0xB0]
	0x0395B580 ADD X10, X10, 0x8
	0x0395B584 LDUR X11, [X10 - 0x8]
	0x0395B588 CMP X11, X1
	0x0395B58C B.EQ 0x395B5AC
	0x0395B590 SUBS X9, X9, 0x1
	0x0395B594 ADD X10, X10, 0x10
	0x0395B598 B.NE 0x395B584
	0x0395B59C MOV X0, X19
	0x0395B5A0 MOV W2, W31
	0x0395B5A4 BL 0x1C5C788
	0x0395B5A8 B 0x395B5B8
	0x0395B5AC LDRSW X9, [X10]
	0x0395B5B0 ADD X8, X8, X9, 0x4, LSL
	0x0395B5B4 ADD X0, X8, 0x138
	0x0395B5B8 LDP X8, X2, [X0]
	0x0395B5BC MOV X0, X19
	0x0395B5C0 MOV W1, W21
	0x0395B5C4 BLR X8
	0x0395B5C8 LDR X8, [X19]
	0x0395B5CC LDR W22, [X31 + 0xC]
	0x0395B5D0 LDR X1, [X24]
	0x0395B5D4 MOV X21, X0
	0x0395B5D8 LDRH W9, [X8 + 0x12E]
	0x0395B5DC CBZ X9, 0x395B600
	0x0395B5E0 LDR X10, [X8 + 0xB0]
	0x0395B5E4 ADD X10, X10, 0x8
	0x0395B5E8 LDUR X11, [X10 - 0x8]
	0x0395B5EC CMP X11, X1
	0x0395B5F0 B.EQ 0x395B610
	0x0395B5F4 SUBS X9, X9, 0x1
	0x0395B5F8 ADD X10, X10, 0x10
	0x0395B5FC B.NE 0x395B5E8
	0x0395B600 MOV X0, X19
	0x0395B604 MOV W2, W31
	0x0395B608 BL 0x1C5C788
	0x0395B60C B 0x395B61C
	0x0395B610 LDRSW X9, [X10]
	0x0395B614 ADD X8, X8, X9, 0x4, LSL
	0x0395B618 ADD X0, X8, 0x138
	0x0395B61C LDP X8, X2, [X0]
	0x0395B620 MOV X0, X19
	0x0395B624 MOV W1, W22
	0x0395B628 BLR X8
	0x0395B62C MOV X1, X0
	0x0395B630 MOV X0, X21
	0x0395B634 MOV X2, X31
	0x0395B638 BL 0x393E2C8
	0x0395B63C CBZ X0, 0x395B85C
	0x0395B640 MOV X1, X31
	0x0395B644 MOV X21, X0
	0x0395B648 BL 0x393E5B8
	0x0395B64C LDR X8, [X19]
	0x0395B650 LDR W22, [X31]
	0x0395B654 LDR X1, [X24]
	0x0395B658 LDRH W9, [X8 + 0x12E]
	0x0395B65C CBZ X9, 0x395B680
	0x0395B660 LDR X10, [X8 + 0xB0]
	0x0395B664 ADD X10, X10, 0x8
	0x0395B668 LDUR X11, [X10 - 0x8]
	0x0395B66C CMP X11, X1
	0x0395B670 B.EQ 0x395B690
	0x0395B674 SUBS X9, X9, 0x1
	0x0395B678 ADD X10, X10, 0x10
	0x0395B67C B.NE 0x395B668
	0x0395B680 MOV X0, X19
	0x0395B684 MOV W2, W31
	0x0395B688 BL 0x1C5C788
	0x0395B68C B 0x395B69C
	0x0395B690 LDRSW X9, [X10]
	0x0395B694 ADD X8, X8, X9, 0x4, LSL
	0x0395B698 ADD X0, X8, 0x138
	0x0395B69C LDP X8, X2, [X0]
	0x0395B6A0 MOV X0, X19
	0x0395B6A4 MOV W1, W22
	0x0395B6A8 BLR X8
	0x0395B6AC LDR X8, [X19]
	0x0395B6B0 LDR W23, [X31 + 0x4]
	0x0395B6B4 LDR X1, [X24]
	0x0395B6B8 MOV X22, X0
	0x0395B6BC LDRH W9, [X8 + 0x12E]
	0x0395B6C0 CBZ X9, 0x395B6E4
	0x0395B6C4 LDR X10, [X8 + 0xB0]
	0x0395B6C8 ADD X10, X10, 0x8
	0x0395B6CC LDUR X11, [X10 - 0x8]
	0x0395B6D0 CMP X11, X1
	0x0395B6D4 B.EQ 0x395B6F4
	0x0395B6D8 SUBS X9, X9, 0x1
	0x0395B6DC ADD X10, X10, 0x10
	0x0395B6E0 B.NE 0x395B6CC
	0x0395B6E4 MOV X0, X19
	0x0395B6E8 MOV W2, W31
	0x0395B6EC BL 0x1C5C788
	0x0395B6F0 B 0x395B700
	0x0395B6F4 LDRSW X9, [X10]
	0x0395B6F8 ADD X8, X8, X9, 0x4, LSL
	0x0395B6FC ADD X0, X8, 0x138
	0x0395B700 LDP X8, X2, [X0]
	0x0395B704 MOV X0, X19
	0x0395B708 MOV W1, W23
	0x0395B70C BLR X8
	0x0395B710 MOV X1, X0
	0x0395B714 MOV X0, X22
	0x0395B718 MOV X2, X31
	0x0395B71C BL 0x393E2C8
	0x0395B720 CBZ X0, 0x395B85C
	0x0395B724 MOV X1, X31
	0x0395B728 MOV X22, X0
	0x0395B72C BL 0x393E5B8
	0x0395B730 LDR X8, [X19]
	0x0395B734 LDR W23, [X20 + 0x10]
	0x0395B738 LDR X1, [X24]
	0x0395B73C LDRH W9, [X8 + 0x12E]
	0x0395B740 CBZ X9, 0x395B764
	0x0395B744 LDR X10, [X8 + 0xB0]
	0x0395B748 ADD X10, X10, 0x8
	0x0395B74C LDUR X11, [X10 - 0x8]
	0x0395B750 CMP X11, X1
	0x0395B754 B.EQ 0x395B774
	0x0395B758 SUBS X9, X9, 0x1
	0x0395B75C ADD X10, X10, 0x10
	0x0395B760 B.NE 0x395B74C
	0x0395B764 MOV X0, X19
	0x0395B768 MOV W2, W31
	0x0395B76C BL 0x1C5C788
	0x0395B770 B 0x395B780
	0x0395B774 LDRSW X9, [X10]
	0x0395B778 ADD X8, X8, X9, 0x4, LSL
	0x0395B77C ADD X0, X8, 0x138
	0x0395B780 LDP X8, X2, [X0]
	0x0395B784 MOV X0, X19
	0x0395B788 MOV W1, W23
	0x0395B78C BLR X8
	0x0395B790 MOV X23, X0
	0x0395B794 MOV X0, X21
	0x0395B798 MOV V0.16B, V8.16B
	0x0395B79C MOV X1, X31
	0x0395B7A0 BL 0x393E438
	0x0395B7A4 CBZ X23, 0x395B85C
	0x0395B7A8 MOV X1, X0
	0x0395B7AC MOV X0, X23
	0x0395B7B0 MOV X2, X31
	0x0395B7B4 BL 0x393E1D4
	0x0395B7B8 LDR X8, [X19]
	0x0395B7BC LDR W20, [X20 + 0x14]
	0x0395B7C0 LDR X1, [X24]
	0x0395B7C4 LDRH W9, [X8 + 0x12E]
	0x0395B7C8 CBZ X9, 0x395B7EC
	0x0395B7CC LDR X10, [X8 + 0xB0]
	0x0395B7D0 ADD X10, X10, 0x8
	0x0395B7D4 LDUR X11, [X10 - 0x8]
	0x0395B7D8 CMP X11, X1
	0x0395B7DC B.EQ 0x395B7FC
	0x0395B7E0 SUBS X9, X9, 0x1
	0x0395B7E4 ADD X10, X10, 0x10
	0x0395B7E8 B.NE 0x395B7D4
	0x0395B7EC MOV X0, X19
	0x0395B7F0 MOV W2, W31
	0x0395B7F4 BL 0x1C5C788
	0x0395B7F8 B 0x395B808
	0x0395B7FC LDRSW X9, [X10]
	0x0395B800 ADD X8, X8, X9, 0x4, LSL
	0x0395B804 ADD X0, X8, 0x138
	0x0395B808 LDP X8, X2, [X0]
	0x0395B80C MOV X0, X19
	0x0395B810 MOV W1, W20
	0x0395B814 BLR X8
	0x0395B818 MOV X19, X0
	0x0395B81C MOV X0, X22
	0x0395B820 MOV V0.16B, V8.16B
	0x0395B824 MOV X1, X31
	0x0395B828 BL 0x393E438
	0x0395B82C CBZ X19, 0x395B85C
	0x0395B830 MOV X1, X0
	0x0395B834 MOV X0, X19
	0x0395B838 MOV X2, X31
	0x0395B83C BL 0x393E1D4
	0x0395B840 LDP X20, X19, [X31 + 0x40]
	0x0395B844 LDP X22, X21, [X31 + 0x30]
	0x0395B848 LDP X24, X23, [X31 + 0x20]
	0x0395B84C LDR X30, [X31 + 0x18]
	0x0395B850 LDR V8, [X31 + 0x10]
	0x0395B854 ADD X31, X31, 0x50
	0x0395B858 RET
	0x0395B85C BL 0x1C16F20
	0x0395B860 SUB X31, X31, 0x120
	0x0395B864 STP D13, D12, [X31 + 0x90]
	0x0395B868 STP D11, D10, [X31 + 0xA0]
	0x0395B86C STP D9, D8, [X31 + 0xB0]
	0x0395B870 STP X29, X30, [X31 + 0xC0]
	0x0395B874 STP X28, X27, [X31 + 0xD0]
	0x0395B878 STP X26, X25, [X31 + 0xE0]
	0x0395B87C STP X24, X23, [X31 + 0xF0]
	0x0395B880 STP X22, X21, [X31 + 0x100]
	0x0395B884 STP X20, X19, [X31 + 0x110]
	0x0395B888 ADRP X21, 0xA86000
	0x0395B88C ADRP X22, 0x7F4000
	0x0395B890 ADRP X20, 0x7F4000
	0x0395B894 ADRP X19, 0x7F4000
	0x0395B898 LDRB W8, [X21 + 0x9A1]
	0x0395B89C LDR X22, [X22 + 0x318]
	0x0395B8A0 LDR X20, [X20 + 0x310]
	0x0395B8A4 LDR X19, [X19 + 0x1F0]
	0x0395B8A8 MOV X29, X3
	0x0395B8AC MOV X25, X2
	0x0395B8B0 MOV X23, X1
	0x0395B8B4 MOV X24, X0
	0x0395B8B8 TBNZ X8, 0x0, 0x395B99C
	0x0395B8BC ADRP X0, 0x7F4000
	0x0395B8C0 LDR X0, [X0 + 0x550]
	0x0395B8C4 BL 0x1C16CF4
	0x0395B8C8 ADRP X0, 0x7F2000
	0x0395B8CC LDR X0, [X0 + 0xDA8]
	0x0395B8D0 BL 0x1C16CF4
	0x0395B8D4 ADRP X0, 0x7F4000
	0x0395B8D8 LDR X0, [X0 + 0x558]
	0x0395B8DC BL 0x1C16CF4
	0x0395B8E0 ADRP X0, 0x7F4000
	0x0395B8E4 LDR X0, [X0 + 0x1F0]
	0x0395B8E8 BL 0x1C16CF4
	0x0395B8EC ADRP X0, 0x7F3000
	0x0395B8F0 LDR X0, [X0 + 0x560]
	0x0395B8F4 BL 0x1C16CF4
	0x0395B8F8 ADRP X0, 0x7F2000
	0x0395B8FC LDR X0, [X0 + 0xF60]
	0x0395B900 BL 0x1C16CF4
	0x0395B904 ADRP X0, 0x799000
	0x0395B908 LDR X0, [X0 + 0xE58]
	0x0395B90C BL 0x1C16CF4
	0x0395B910 ADRP X0, 0x799000
	0x0395B914 LDR X0, [X0 + 0xE10]
	0x0395B918 BL 0x1C16CF4
	0x0395B91C ADRP X0, 0x7F4000
	0x0395B920 LDR X0, [X0 + 0x308]
	0x0395B924 BL 0x1C16CF4
	0x0395B928 ADRP X0, 0x7F4000
	0x0395B92C LDR X0, [X0 + 0x1C0]
	0x0395B930 BL 0x1C16CF4
	0x0395B934 ADRP X0, 0x79C000
	0x0395B938 LDR X0, [X0 + 0xB70]
	0x0395B93C BL 0x1C16CF4
	0x0395B940 ADRP X0, 0x7F4000
	0x0395B944 LDR X0, [X0 + 0x1C8]
	0x0395B948 BL 0x1C16CF4
	0x0395B94C ADRP X0, 0x7F4000
	0x0395B950 LDR X0, [X0 + 0x310]
	0x0395B954 BL 0x1C16CF4
	0x0395B958 ADRP X0, 0x799000
	0x0395B95C LDR X0, [X0 + 0xE30]
	0x0395B960 BL 0x1C16CF4
	0x0395B964 ADRP X0, 0x7F2000
	0x0395B968 LDR X0, [X0 + 0xDE8]
	0x0395B96C BL 0x1C16CF4
	0x0395B970 ADRP X0, 0x7F4000
	0x0395B974 LDR X0, [X0 + 0x318]
	0x0395B978 BL 0x1C16CF4
	0x0395B97C ADRP X0, 0x7F4000
	0x0395B980 LDR X0, [X0 + 0x6E0]
	0x0395B984 BL 0x1C16CF4
	0x0395B988 ADRP X0, 0x7F4000
	0x0395B98C LDR X0, [X0 + 0x340]
	0x0395B990 BL 0x1C16CF4
	0x0395B994 MOVZ W8, 0x1
	0x0395B998 STRB W8, [X21 + 0x9A1]
	0x0395B99C LDR X0, [X22]
	0x0395B9A0 BL 0x1C16F10
	0x0395B9A4 LDR X1, [X20]
	0x0395B9A8 MOV X20, X0
	0x0395B9AC BL 0x301B7C4
	0x0395B9B0 LDR X0, [X19]
	0x0395B9B4 BL 0x1C16F10
	0x0395B9B8 MOV X1, X31
	0x0395B9BC MOV X21, X0
	0x0395B9C0 BL 0x3901F84
	0x0395B9C4 CBZ X23, 0x395C0E4
	0x0395B9C8 CBZ X25, 0x395C0E4
	0x0395B9CC ADRP X8, 0x7F2000
	0x0395B9D0 LDR X8, [X8 + 0xDE8]
	0x0395B9D4 LDP X26, X9, [X23 + 0x10]
	0x0395B9D8 ADRP X19, 0x7F4000
	0x0395B9DC LDP X27, X28, [X25 + 0x10]
	0x0395B9E0 LDR X0, [X8]
	0x0395B9E4 STR X9, [X31 + 0x18]
	0x0395B9E8 LDR X19, [X19 + 0x1C8]
	0x0395B9EC BL 0x1C16F10
	0x0395B9F0 LDR X1, [X19]
	0x0395B9F4 MOV X25, X0
	0x0395B9F8 BL 0x301B7C4
	0x0395B9FC CBZ X24, 0x395C0E4
	0x0395BA00 ADRP X19, 0x7F2000
	0x0395BA04 LDR X8, [X24]
	0x0395BA08 LDR X19, [X19 + 0xF60]
	0x0395BA0C LDRH W9, [X8 + 0x12E]
	0x0395BA10 LDR X1, [X19]
	0x0395BA14 CBZ X9, 0x395BA38
	0x0395BA18 LDR X10, [X8 + 0xB0]
	0x0395BA1C ADD X10, X10, 0x8
	0x0395BA20 LDUR X11, [X10 - 0x8]
	0x0395BA24 CMP X11, X1
	0x0395BA28 B.EQ 0x395BA48
	0x0395BA2C SUBS X9, X9, 0x1
	0x0395BA30 ADD X10, X10, 0x10
	0x0395BA34 B.NE 0x395BA20
	0x0395BA38 MOV X0, X24
	0x0395BA3C MOV W2, W31
	0x0395BA40 BL 0x1C5C788
	0x0395BA44 B 0x395BA54
	0x0395BA48 LDRSW X9, [X10]
	0x0395BA4C ADD X8, X8, X9, 0x4, LSL
	0x0395BA50 ADD X0, X8, 0x138
	0x0395BA54 LDP X8, X2, [X0]
	0x0395BA58 MOV X0, X24
	0x0395BA5C MOV W1, W26
	0x0395BA60 STR X29, [X31 + 0x10]
	0x0395BA64 BLR X8
	0x0395BA68 CBZ X25, 0x395C0E4
	0x0395BA6C ADRP X29, 0x7F4000
	0x0395BA70 LDR X29, [X29 + 0x1C0]
	0x0395BA74 LDR W10, [X25 + 0x1C]
	0x0395BA78 LDR X8, [X25 + 0x10]
	0x0395BA7C LDR X9, [X29]
	0x0395BA80 ADD W10, W10, 0x1
	0x0395BA84 STR W10, [X25 + 0x1C]
	0x0395BA88 CBZ X8, 0x395C0E4
	0x0395BA8C LDRSW X10, [X25 + 0x18]
	0x0395BA90 LDR W11, [X8 + 0x18]
	0x0395BA94 MOV X1, X0
	0x0395BA98 CMP W10, W11
	0x0395BA9C B.CS 0x395BAB4
	0x0395BAA0 ADD W9, W10, 0x1
	0x0395BAA4 ADD X8, X8, X10, 0x3, LSL
	0x0395BAA8 STR W9, [X25 + 0x18]
	0x0395BAAC STR X1, [X8 + 0x20]
	0x0395BAB0 B 0x395BAC8
	0x0395BAB4 LDR X8, [X9 + 0x20]
	0x0395BAB8 MOV X0, X25
	0x0395BABC LDR X8, [X8 + 0xC0]
	0x0395BAC0 LDR X2, [X8 + 0x70]
	0x0395BAC4 BL 0x301BF90
	0x0395BAC8 LDR X8, [X24]
	0x0395BACC LDR X1, [X19]
	0x0395BAD0 UBFM X26, X26, 0x20, 0x3F
	0x0395BAD4 LDRH W9, [X8 + 0x12E]
	0x0395BAD8 CBZ X9, 0x395BAFC
	0x0395BADC LDR X10, [X8 + 0xB0]
	0x0395BAE0 ADD X10, X10, 0x8
	0x0395BAE4 LDUR X11, [X10 - 0x8]
	0x0395BAE8 CMP X11, X1
	0x0395BAEC B.EQ 0x395BB0C
	0x0395BAF0 SUBS X9, X9, 0x1
	0x0395BAF4 ADD X10, X10, 0x10
	0x0395BAF8 B.NE 0x395BAE4
	0x0395BAFC MOV X0, X24
	0x0395BB00 MOV W2, W31
	0x0395BB04 BL 0x1C5C788
	0x0395BB08 B 0x395BB18
	0x0395BB0C LDRSW X9, [X10]
	0x0395BB10 ADD X8, X8, X9, 0x4, LSL
	0x0395BB14 ADD X0, X8, 0x138
	0x0395BB18 LDP X8, X2, [X0]
	0x0395BB1C MOV X0, X24
	0x0395BB20 MOV W1, W26
	0x0395BB24 BLR X8
	0x0395BB28 LDR W10, [X25 + 0x1C]
	0x0395BB2C LDR X8, [X25 + 0x10]
	0x0395BB30 LDR X9, [X29]
	0x0395BB34 ADD W10, W10, 0x1
	0x0395BB38 STR W10, [X25 + 0x1C]
	0x0395BB3C CBZ X8, 0x395C0E4
	0x0395BB40 LDRSW X10, [X25 + 0x18]
	0x0395BB44 LDR W11, [X8 + 0x18]
	0x0395BB48 MOV X1, X0
	0x0395BB4C CMP W10, W11
	0x0395BB50 B.CS 0x395BB68
	0x0395BB54 ADD W9, W10, 0x1
	0x0395BB58 ADD X8, X8, X10, 0x3, LSL
	0x0395BB5C STR W9, [X25 + 0x18]
	0x0395BB60 STR X1, [X8 + 0x20]
	0x0395BB64 B 0x395BB7C
	0x0395BB68 LDR X8, [X9 + 0x20]
	0x0395BB6C MOV X0, X25
	0x0395BB70 LDR X8, [X8 + 0xC0]
	0x0395BB74 LDR X2, [X8 + 0x70]
	0x0395BB78 BL 0x301BF90
	0x0395BB7C LDR X8, [X24]
	0x0395BB80 LDR X10, [X31 + 0x18]
	0x0395BB84 LDR X1, [X19]
	0x0395BB88 UBFM X22, X27, 0x20, 0x3F
	0x0395BB8C LDRH W9, [X8 + 0x12E]
	0x0395BB90 CMP W10, W28
	0x0395BB94 CSEL W26, W27, W22, EQ
	0x0395BB98 CBZ X9, 0x395BBBC
	0x0395BB9C LDR X10, [X8 + 0xB0]
	0x0395BBA0 ADD X10, X10, 0x8
	0x0395BBA4 LDUR X11, [X10 - 0x8]
	0x0395BBA8 CMP X11, X1
	0x0395BBAC B.EQ 0x395BBCC
	0x0395BBB0 SUBS X9, X9, 0x1
	0x0395BBB4 ADD X10, X10, 0x10
	0x0395BBB8 B.NE 0x395BBA4
	0x0395BBBC MOV X0, X24
	0x0395BBC0 MOV W2, W31
	0x0395BBC4 BL 0x1C5C788
	0x0395BBC8 B 0x395BBD8
	0x0395BBCC LDRSW X9, [X10]
	0x0395BBD0 ADD X8, X8, X9, 0x4, LSL
	0x0395BBD4 ADD X0, X8, 0x138
	0x0395BBD8 LDP X8, X2, [X0]
	0x0395BBDC MOV X0, X24
	0x0395BBE0 MOV W1, W26
	0x0395BBE4 BLR X8
	0x0395BBE8 LDR W10, [X25 + 0x1C]
	0x0395BBEC LDR X8, [X25 + 0x10]
	0x0395BBF0 LDR X9, [X29]
	0x0395BBF4 ADD W10, W10, 0x1
	0x0395BBF8 STR W10, [X25 + 0x1C]
	0x0395BBFC CBZ X8, 0x395C0E4
	0x0395BC00 LDRSW X10, [X25 + 0x18]
	0x0395BC04 LDR W11, [X8 + 0x18]
	0x0395BC08 MOV X1, X0
	0x0395BC0C CMP W10, W11
	0x0395BC10 B.CS 0x395BC28
	0x0395BC14 ADD W9, W10, 0x1
	0x0395BC18 ADD X8, X8, X10, 0x3, LSL
	0x0395BC1C STR W9, [X25 + 0x18]
	0x0395BC20 STR X1, [X8 + 0x20]
	0x0395BC24 B 0x395BC3C
	0x0395BC28 LDR X8, [X9 + 0x20]
	0x0395BC2C MOV X0, X25
	0x0395BC30 LDR X8, [X8 + 0xC0]
	0x0395BC34 LDR X2, [X8 + 0x70]
	0x0395BC38 BL 0x301BF90
	0x0395BC3C LDR X8, [X24]
	0x0395BC40 LDR X10, [X31 + 0x18]
	0x0395BC44 LDR X1, [X19]
	0x0395BC48 LDRH W9, [X8 + 0x12E]
	0x0395BC4C CMP W10, W28
	0x0395BC50 CSEL W26, W22, W27, EQ
	0x0395BC54 CBZ X9, 0x395BC78
	0x0395BC58 LDR X10, [X8 + 0xB0]
	0x0395BC5C ADD X10, X10, 0x8
	0x0395BC60 LDUR X11, [X10 - 0x8]
	0x0395BC64 CMP X11, X1
	0x0395BC68 B.EQ 0x395BC88
	0x0395BC6C SUBS X9, X9, 0x1
	0x0395BC70 ADD X10, X10, 0x10
	0x0395BC74 B.NE 0x395BC60
	0x0395BC78 MOV X0, X24
	0x0395BC7C MOV W2, W31
	0x0395BC80 BL 0x1C5C788
	0x0395BC84 B 0x395BC94
	0x0395BC88 LDRSW X9, [X10]
	0x0395BC8C ADD X8, X8, X9, 0x4, LSL
	0x0395BC90 ADD X0, X8, 0x138
	0x0395BC94 LDP X8, X2, [X0]
	0x0395BC98 MOV X0, X24
	0x0395BC9C MOV W1, W26
	0x0395BCA0 BLR X8
	0x0395BCA4 LDR W10, [X25 + 0x1C]
	0x0395BCA8 LDR X8, [X25 + 0x10]
	0x0395BCAC LDR X9, [X29]
	0x0395BCB0 ADD W10, W10, 0x1
	0x0395BCB4 STR W10, [X25 + 0x1C]
	0x0395BCB8 CBZ X8, 0x395C0E4
	0x0395BCBC LDRSW X10, [X25 + 0x18]
	0x0395BCC0 LDR W11, [X8 + 0x18]
	0x0395BCC4 LDR X28, [X31 + 0x10]
	0x0395BCC8 MOV X1, X0
	0x0395BCCC CMP W10, W11
	0x0395BCD0 B.CS 0x395BCE8
	0x0395BCD4 ADD W9, W10, 0x1
	0x0395BCD8 ADD X8, X8, X10, 0x3, LSL
	0x0395BCDC STR W9, [X25 + 0x18]
	0x0395BCE0 STR X1, [X8 + 0x20]
	0x0395BCE4 B 0x395BCFC
	0x0395BCE8 LDR X8, [X9 + 0x20]
	0x0395BCEC MOV X0, X25
	0x0395BCF0 LDR X8, [X8 + 0xC0]
	0x0395BCF4 LDR X2, [X8 + 0x70]
	0x0395BCF8 BL 0x301BF90
	0x0395BCFC CBZ X21, 0x395C0E4
	0x0395BD00 STR X25, [X21 + 0x18]
	0x0395BD04 LDR X8, [X23 + 0x20]
	0x0395BD08 CBZ X8, 0x395C0E4
	0x0395BD0C LDR X1, [X8 + 0x10]
	0x0395BD10 ADRP X25, 0x7F4000
	0x0395BD14 ADRP X22, 0x799000
	0x0395BD18 ADRP X19, 0x7F4000
	0x0395BD1C LDR X25, [X25 + 0x558]
	0x0395BD20 LDR X22, [X22 + 0xE58]
	0x0395BD24 LDR X19, [X19 + 0x340]
	0x0395BD28 MOV X0, X24
	0x0395BD2C MOV X2, X31
	0x0395BD30 BL 0x39090D4
	0x0395BD34 LDR X0, [X25]
	0x0395BD38 LDR X24, [X21 + 0x18]
	0x0395BD3C MOV V8.16B, V0.16B
	0x0395BD40 MOV V9.16B, V1.16B
	0x0395BD44 LDR W8, [X0 + 0xE0]
	0x0395BD48 MOV V10.16B, V2.16B
	0x0395BD4C CBNZ W8, 0x395BD58
	0x0395BD50 BL 0x1C16DFC
	0x0395BD54 LDR X0, [X25]
	0x0395BD58 LDR X8, [X0 + 0xB8]
	0x0395BD5C MOV X0, X24
	0x0395BD60 MOV X2, X31
	0x0395BD64 LDR X1, [X8]
	0x0395BD68 BL 0x39090D4
	0x0395BD6C LDR X0, [X22]
	0x0395BD70 MOVZ W1, 0x6
	0x0395BD74 MOV V11.16B, V0.16B
	0x0395BD78 MOV V12.16B, V1.16B
	0x0395BD7C MOV V13.16B, V2.16B
	0x0395BD80 BL 0x1C16D6C
	0x0395BD84 LDR X1, [X19]
	0x0395BD88 MOV X2, X31
	0x0395BD8C MOV X24, X0
	0x0395BD90 BL 0x32C5BD8
	0x0395BD94 FMUL S0, S8, S11
	0x0395BD98 FMUL S1, S9, S12
	0x0395BD9C FADD S0, S0, S1
	0x0395BDA0 FMUL S1, S10, S13
	0x0395BDA4 FADD S0, S1, S0
	0x0395BDA8 FCMP S0, 0x0
	0x0395BDAC B.PL 0x395BDC4
	0x0395BDB0 ADRP X8, 0x7F2000
	0x0395BDB4 LDR X8, [X8 + 0xDA8]
	0x0395BDB8 MOV X0, X24
	0x0395BDBC LDR X1, [X8]
	0x0395BDC0 BL 0x2146668
	0x0395BDC4 LDR X8, [X23 + 0x20]
	0x0395BDC8 CBZ X8, 0x395C0E4
	0x0395BDCC ADRP X19, 0x7F3000
	0x0395BDD0 LDR W23, [X8 + 0x48]
	0x0395BDD4 LDR X19, [X19 + 0x560]
	0x0395BDD8 ADD X8, X31, 0x50
	0x0395BDDC MOV X0, X31
	0x0395BDE0 BL 0x38F6A48
	0x0395BDE4 LDP V0, V1, [X31 + 0x50]
	0x0395BDE8 LDR X0, [X19]
	0x0395BDEC STP V0, V1, [X31 + 0x70]
	0x0395BDF0 BL 0x1C16F10
	0x0395BDF4 LDP V0, V1, [X31 + 0x70]
	0x0395BDF8 ADD X3, X31, 0x30
	0x0395BDFC MOVN W4, 0x0
	0x0395BE00 MOVN W5, 0x0
	0x0395BE04 MOVN W6, 0x0
	0x0395BE08 MOV X1, X24
	0x0395BE0C MOV W2, W23
	0x0395BE10 MOV W7, W31
	0x0395BE14 MOV X25, X0
	0x0395BE18 STP V0, V1, [X31 + 0x30]
	0x0395BE1C STR X31, [X31]
	0x0395BE20 BL 0x39004D4
	0x0395BE24 STR X25, [X21 + 0x10]
	0x0395BE28 CBZ X20, 0x395C0E4
	0x0395BE2C ADRP X9, 0x7F4000
	0x0395BE30 LDR X9, [X9 + 0x308]
	0x0395BE34 LDR W10, [X20 + 0x1C]
	0x0395BE38 LDR X8, [X20 + 0x10]
	0x0395BE3C LDR X9, [X9]
	0x0395BE40 ADD W10, W10, 0x1
	0x0395BE44 STR W10, [X20 + 0x1C]
	0x0395BE48 CBZ X8, 0x395C0E4
	0x0395BE4C LDRSW X10, [X20 + 0x18]
	0x0395BE50 LDR W11, [X8 + 0x18]
	0x0395BE54 ADRP X27, 0x799000
	0x0395BE58 ADRP X25, 0x79C000
	0x0395BE5C LDR X27, [X27 + 0xE30]
	0x0395BE60 LDR X25, [X25 + 0xB70]
	0x0395BE64 CMP W10, W11
	0x0395BE68 B.CS 0x395BE80
	0x0395BE6C ADD W9, W10, 0x1
	0x0395BE70 ADD X8, X8, X10, 0x3, LSL
	0x0395BE74 STR W9, [X20 + 0x18]
	0x0395BE78 STR X21, [X8 + 0x20]
	0x0395BE7C B 0x395BE98
	0x0395BE80 LDR X8, [X9 + 0x20]
	0x0395BE84 MOV X0, X20
	0x0395BE88 MOV X1, X21
	0x0395BE8C LDR X8, [X8 + 0xC0]
	0x0395BE90 LDR X2, [X8 + 0x70]
	0x0395BE94 BL 0x301BF90
	0x0395BE98 LDR X0, [X27]
	0x0395BE9C BL 0x1C16F10
	0x0395BEA0 LDR X1, [X25]
	0x0395BEA4 MOV X23, X0
	0x0395BEA8 BL 0x2FDBF14
	0x0395BEAC CBZ X23, 0x395C0E4
	0x0395BEB0 ADRP X24, 0x799000
	0x0395BEB4 LDR X24, [X24 + 0xE10]
	0x0395BEB8 LDR W10, [X23 + 0x1C]
	0x0395BEBC LDR X8, [X23 + 0x10]
	0x0395BEC0 LDR X9, [X24]
	0x0395BEC4 ADD W10, W10, 0x1
	0x0395BEC8 STR W10, [X23 + 0x1C]
	0x0395BECC CBZ X8, 0x395C0E4
	0x0395BED0 LDRSW X10, [X23 + 0x18]
	0x0395BED4 LDR W11, [X8 + 0x18]
	0x0395BED8 CMP W10, W11
	0x0395BEDC B.CS 0x395BF00
	0x0395BEE0 ADD W11, W10, 0x1
	0x0395BEE4 ADD X10, X8, X10, 0x2, LSL
	0x0395BEE8 STR W11, [X23 + 0x18]
	0x0395BEEC STR W31, [X10 + 0x20]
	0x0395BEF0 LDR W10, [X23 + 0x1C]
	0x0395BEF4 ADD W10, W10, 0x1
	0x0395BEF8 STR W10, [X23 + 0x1C]
	0x0395BEFC B 0x395BF30
	0x0395BF00 LDR X8, [X9 + 0x20]
	0x0395BF04 MOV X0, X23
	0x0395BF08 MOV W1, W31
	0x0395BF0C LDR X8, [X8 + 0xC0]
	0x0395BF10 LDR X2, [X8 + 0x70]
	0x0395BF14 BL 0x2FDC70C
	0x0395BF18 LDR W10, [X23 + 0x1C]
	0x0395BF1C LDR X8, [X23 + 0x10]
	0x0395BF20 LDR X9, [X24]
	0x0395BF24 ADD W10, W10, 0x1
	0x0395BF28 STR W10, [X23 + 0x1C]
	0x0395BF2C CBZ X8, 0x395C0E4
	0x0395BF30 LDRSW X10, [X23 + 0x18]
	0x0395BF34 LDR W11, [X8 + 0x18]
	0x0395BF38 ADRP X26, 0x7F4000
	0x0395BF3C ADRP X19, 0x7F4000
	0x0395BF40 LDR X26, [X26 + 0x6E0]
	0x0395BF44 LDR X19, [X19 + 0x550]
	0x0395BF48 CMP W10, W11
	0x0395BF4C B.CS 0x395BF68
	0x0395BF50 ADD W9, W10, 0x1
	0x0395BF54 ADD X8, X8, X10, 0x2, LSL
	0x0395BF58 MOVZ W10, 0x2
	0x0395BF5C STR W9, [X23 + 0x18]
	0x0395BF60 STR W10, [X8 + 0x20]
	0x0395BF64 B 0x395BF80
	0x0395BF68 LDR X8, [X9 + 0x20]
	0x0395BF6C MOVZ W1, 0x2
	0x0395BF70 MOV X0, X23
	0x0395BF74 LDR X8, [X8 + 0xC0]
	0x0395BF78 LDR X2, [X8 + 0x70]
	0x0395BF7C BL 0x2FDC70C
	0x0395BF80 LDR X3, [X26]
	0x0395BF84 ADD X0, X31, 0x50
	0x0395BF88 MOV X1, X21
	0x0395BF8C MOV X2, X23
	0x0395BF90 STP X31, X31, [X31 + 0x50]
	0x0395BF94 BL 0x25E6D3C
	0x0395BF98 LDP X2, X3, [X31 + 0x50]
	0x0395BF9C LDR X4, [X19]
	0x0395BFA0 MOV X0, X28
	0x0395BFA4 LDR X1, [X31 + 0x18]
	0x0395BFA8 BL 0x217CF44
	0x0395BFAC LDR X0, [X27]
	0x0395BFB0 BL 0x1C16F10
	0x0395BFB4 LDR X1, [X25]
	0x0395BFB8 MOV X23, X0
	0x0395BFBC BL 0x2FDBF14
	0x0395BFC0 CBZ X23, 0x395C0E4
	0x0395BFC4 LDR W10, [X23 + 0x1C]
	0x0395BFC8 LDR X8, [X23 + 0x10]
	0x0395BFCC LDR X9, [X24]
	0x0395BFD0 ADD W10, W10, 0x1
	0x0395BFD4 STR W10, [X23 + 0x1C]
	0x0395BFD8 CBZ X8, 0x395C0E4
	0x0395BFDC LDRSW X10, [X23 + 0x18]
	0x0395BFE0 LDR W11, [X8 + 0x18]
	0x0395BFE4 CMP W10, W11
	0x0395BFE8 B.CS 0x395C010
	0x0395BFEC ADD W11, W10, 0x1
	0x0395BFF0 ADD X10, X8, X10, 0x2, LSL
	0x0395BFF4 MOVZ W12, 0x1
	0x0395BFF8 STR W11, [X23 + 0x18]
	0x0395BFFC STR W12, [X10 + 0x20]
	0x0395C000 LDR W10, [X23 + 0x1C]
	0x0395C004 ADD W10, W10, 0x1
	0x0395C008 STR W10, [X23 + 0x1C]
	0x0395C00C B 0x395C040
	0x0395C010 LDR X8, [X9 + 0x20]
	0x0395C014 MOVZ W1, 0x1
	0x0395C018 MOV X0, X23
	0x0395C01C LDR X8, [X8 + 0xC0]
	0x0395C020 LDR X2, [X8 + 0x70]
	0x0395C024 BL 0x2FDC70C
	0x0395C028 LDR W10, [X23 + 0x1C]
	0x0395C02C LDR X8, [X23 + 0x10]
	0x0395C030 LDR X9, [X24]
	0x0395C034 ADD W10, W10, 0x1
	0x0395C038 STR W10, [X23 + 0x1C]
	0x0395C03C CBZ X8, 0x395C0E4
	0x0395C040 LDRSW X10, [X23 + 0x18]
	0x0395C044 LDR W11, [X8 + 0x18]
	0x0395C048 CMP W10, W11
	0x0395C04C B.CS 0x395C068
	0x0395C050 ADD W9, W10, 0x1
	0x0395C054 ADD X8, X8, X10, 0x2, LSL
	0x0395C058 MOVZ W10, 0x3
	0x0395C05C STR W9, [X23 + 0x18]
	0x0395C060 STR W10, [X8 + 0x20]
	0x0395C064 B 0x395C080
	0x0395C068 LDR X8, [X9 + 0x20]
	0x0395C06C MOVZ W1, 0x3
	0x0395C070 MOV X0, X23
	0x0395C074 LDR X8, [X8 + 0xC0]
	0x0395C078 LDR X2, [X8 + 0x70]
	0x0395C07C BL 0x2FDC70C
	0x0395C080 LDR X3, [X26]
	0x0395C084 LDR X8, [X31 + 0x18]
	0x0395C088 ADD X0, X31, 0x20
	0x0395C08C MOV X1, X21
	0x0395C090 MOV X2, X23
	0x0395C094 UBFM X22, X8, 0x20, 0x3F
	0x0395C098 STP X31, X31, [X31 + 0x20]
	0x0395C09C BL 0x25E6D3C
	0x0395C0A0 LDP X2, X3, [X31 + 0x20]
	0x0395C0A4 LDR X4, [X19]
	0x0395C0A8 MOV X0, X28
	0x0395C0AC MOV W1, W22
	0x0395C0B0 BL 0x217CF44
	0x0395C0B4 MOV X0, X20
	0x0395C0B8 LDP X20, X19, [X31 + 0x110]
	0x0395C0BC LDP X22, X21, [X31 + 0x100]
	0x0395C0C0 LDP X24, X23, [X31 + 0xF0]
	0x0395C0C4 LDP X26, X25, [X31 + 0xE0]
	0x0395C0C8 LDP X28, X27, [X31 + 0xD0]
	0x0395C0CC LDP X29, X30, [X31 + 0xC0]
	0x0395C0D0 LDP D9, D8, [X31 + 0xB0]
	0x0395C0D4 LDP D11, D10, [X31 + 0xA0]
	0x0395C0D8 LDP D13, D12, [X31 + 0x90]
	0x0395C0DC ADD X31, X31, 0x120
	0x0395C0E0 RET
	0x0395C0E4 BL 0x1C16F20
	0x0395C0E8 MOV X1, X31
	0x0395C0EC B 0x33BDD8C
	0x0395C0F0 STR X30, [X31 - 0x40]!
	0x0395C0F4 STP X24, X23, [X31 + 0x10]
	0x0395C0F8 STP X22, X21, [X31 + 0x20]
	0x0395C0FC STP X20, X19, [X31 + 0x30]
	0x0395C100 ADRP X21, 0xA85000
	0x0395C104 ADRP X22, 0x7F3000
	0x0395C108 LDRB W8, [X21 + 0x9C1]
	0x0395C10C LDR X22, [X22 + 0x770]
	0x0395C110 MOV X20, X1
	0x0395C114 MOV X19, X0
	0x0395C118 TBNZ X8, 0x0, 0x395C160
	0x0395C11C ADRP X0, 0x7F2000
	0x0395C120 LDR X0, [X0 + 0x698]
	0x0395C124 BL 0x1C16CF4
	0x0395C128 ADRP X0, 0x7F2000
	0x0395C12C LDR X0, [X0 + 0x2A8]
	0x0395C130 BL 0x1C16CF4
	0x0395C134 ADRP X0, 0x7F2000
	0x0395C138 LDR X0, [X0 + 0x510]
	0x0395C13C BL 0x1C16CF4
	0x0395C140 ADRP X0, 0x7F3000
	0x0395C144 LDR X0, [X0 + 0x778]
	0x0395C148 BL 0x1C16CF4
	0x0395C14C ADRP X0, 0x7F3000
	0x0395C150 LDR X0, [X0 + 0x770]
	0x0395C154 BL 0x1C16CF4
	0x0395C158 MOVZ W8, 0x1
	0x0395C15C STRB W8, [X21 + 0x9C1]
	0x0395C160 LDR X0, [X22]
	0x0395C164 BL 0x1C16F10
	0x0395C168 MOV X1, X31
	0x0395C16C MOV X21, X0
	0x0395C170 BL 0x33BDD8C
	0x0395C174 CBZ X21, 0x395C1EC
	0x0395C178 ADRP X8, 0x7F2000
	0x0395C17C LDR X8, [X8 + 0x510]
	0x0395C180 STR X19, [X21 + 0x10]
	0x0395C184 ADRP X22, 0x7F3000
	0x0395C188 ADRP X23, 0x7F2000
	0x0395C18C LDR X0, [X8]
	0x0395C190 ADRP X24, 0x7F2000
	0x0395C194 LDR X22, [X22 + 0x778]
	0x0395C198 LDR X23, [X23 + 0x698]
	0x0395C19C LDR X24, [X24 + 0x2A8]
	0x0395C1A0 BL 0x1C16F10
	0x0395C1A4 LDR X2, [X22]
	0x0395C1A8 MOV X1, X21
	0x0395C1AC MOV X3, X31
	0x0395C1B0 MOV X22, X0
	0x0395C1B4 BL 0x2D30128
	0x0395C1B8 LDR X2, [X23]
	0x0395C1BC MOV X0, X20
	0x0395C1C0 MOV X1, X22
	0x0395C1C4 BL 0x21CEC3C
	0x0395C1C8 LDR X1, [X24]
	0x0395C1CC BL 0x21D7880
	0x0395C1D0 MOV X1, X0
	0x0395C1D4 MOV X0, X19
	0x0395C1D8 LDP X20, X19, [X31 + 0x30]
	0x0395C1DC LDP X22, X21, [X31 + 0x20]
	0x0395C1E0 LDP X24, X23, [X31 + 0x10]
	0x0395C1E4 LDR X30, [X31], #0x40
	0x0395C1E8 B 0x3964C6C
	0x0395C1EC BL 0x1C16F20
	0x0395C1F0 SUB X31, X31, 0x30
	0x0395C1F4 STP X30, X21, [X31 + 0x10]
	0x0395C1F8 STP X20, X19, [X31 + 0x20]
	0x0395C1FC ADRP X21, 0xA85000
	0x0395C200 LDRB W8, [X21 + 0x9A3]
	0x0395C204 MOV W19, W1
	0x0395C208 MOV X20, X0
	0x0395C20C TBNZ X8, 0x0, 0x395C224
	0x0395C210 ADRP X0, 0x7BF000
	0x0395C214 LDR X0, [X0 + 0x600]
	0x0395C218 BL 0x1C16CF4
	0x0395C21C MOVZ W8, 0x1
	0x0395C220 STRB W8, [X21 + 0x9A3]
	0x0395C224 CBZ X20, 0x395C2D4
	0x0395C228 LDR X8, [X20 + 0x30]
	0x0395C22C CBZ X8, 0x395C2D4
	0x0395C230 LDP X2, X9, [X8 + 0x10]
	0x0395C234 CMP W9, W19
	0x0395C238 B.NE 0x395C24C
	0x0395C23C UBFM X1, X2, 0x20, 0x3F
	0x0395C240 ADD X0, X31, 0x8
	0x0395C244 STR X31, [X31 + 0x8]
	0x0395C248 B 0x395C26C
	0x0395C24C UBFM X8, X9, 0x20, 0x3F
	0x0395C250 CMP W8, W19
	0x0395C254 B.NE 0x395C288
	0x0395C258 UBFM X8, X2, 0x20, 0x3F
	0x0395C25C STR X31, [X31 + 0x8]
	0x0395C260 ADD X0, X31, 0x8
	0x0395C264 MOV W1, W2
	0x0395C268 MOV W2, W8
	0x0395C26C MOV X3, X31
	0x0395C270 BL 0x38FDC24
	0x0395C274 LDR X0, [X31 + 0x8]
	0x0395C278 LDP X20, X19, [X31 + 0x20]
	0x0395C27C LDP X30, X21, [X31 + 0x10]
	0x0395C280 ADD X31, X31, 0x30
	0x0395C284 RET
	0x0395C288 LDR X8, [X20 + 0x28]
	0x0395C28C CBZ X8, 0x395C2D4
	0x0395C290 LDP X2, X9, [X8 + 0x10]
	0x0395C294 CMP W9, W19
	0x0395C298 B.EQ 0x395C23C
	0x0395C29C UBFM X8, X9, 0x20, 0x3F
	0x0395C2A0 CMP W8, W19
	0x0395C2A4 B.EQ 0x395C258
	0x0395C2A8 ADRP X19, 0x7BF000
	0x0395C2AC LDR X19, [X19 + 0x600]
	0x0395C2B0 LDR X0, [X19]
	0x0395C2B4 LDR W8, [X0 + 0xE0]
	0x0395C2B8 CBNZ W8, 0x395C2C4
	0x0395C2BC BL 0x1C16DFC
	0x0395C2C0 LDR X0, [X19]
	0x0395C2C4 LDR X8, [X0 + 0xB8]
	0x0395C2C8 LDR X8, [X8]
	0x0395C2CC STR X8, [X31 + 0x8]
	0x0395C2D0 B 0x395C274
	0x0395C2D4 BL 0x1C16F20
	0x0395C2D8 STR X30, [X31 - 0x20]!
	0x0395C2DC STP X20, X19, [X31 + 0x10]
	0x0395C2E0 ADRP X19, 0xA85000
	0x0395C2E4 ADRP X20, 0x798000
	0x0395C2E8 LDRB W8, [X19 + 0x9A4]
	0x0395C2EC LDR X20, [X20 + 0xE58]
	0x0395C2F0 TBNZ X8, 0x0, 0x395C314
	0x0395C2F4 ADRP X0, 0x7F3000
	0x0395C2F8 LDR X0, [X0 + 0x558]
	0x0395C2FC BL 0x1C16CF4
	0x0395C300 ADRP X0, 0x798000
	0x0395C304 LDR X0, [X0 + 0xE58]
	0x0395C308 BL 0x1C16CF4
	0x0395C30C MOVZ W8, 0x1
	0x0395C310 STRB W8, [X19 + 0x9A4]
	0x0395C314 LDR X0, [X20]
	0x0395C318 MOVZ W1, 0x3
	0x0395C31C BL 0x1C16D6C
	0x0395C320 CBZ X0, 0x395C368
	0x0395C324 LDR W8, [X0 + 0x18]
	0x0395C328 CBZ W8, 0x395C364
	0x0395C32C MOVZ W9, 0x2
	0x0395C330 CMP W8, 0x1
	0x0395C334 STR W9, [X0 + 0x20]
	0x0395C338 B.EQ 0x395C364
	0x0395C33C ADRP X8, 0x7F3000
	0x0395C340 LDR X8, [X8 + 0x558]
	0x0395C344 MOVZ W9, 0x1
	0x0395C348 STR W9, [X0 + 0x24]
	0x0395C34C LDP X20, X19, [X31 + 0x10]
	0x0395C350 LDR X8, [X8]
	0x0395C354 LDR X8, [X8 + 0xB8]
	0x0395C358 STR X0, [X8]
	0x0395C35C LDR X30, [X31], #0x20
	0x0395C360 RET
	0x0395C364 BL 0x1C16F28
	0x0395C368 BL 0x1C16F20
	0x0395C36C STR X30, [X31 - 0x20]!
	0x0395C370 STP X20, X19, [X31 + 0x10]
	0x0395C374 ADRP X19, 0xA85000
	0x0395C378 ADRP X20, 0x7F3000
	0x0395C37C LDRB W8, [X19 + 0x9A5]
	0x0395C380 LDR X20, [X20 + 0x750]
	0x0395C384 TBNZ X8, 0x0, 0x395C39C
	0x0395C388 ADRP X0, 0x7F3000
	0x0395C38C LDR X0, [X0 + 0x750]
	0x0395C390 BL 0x1C16CF4
	0x0395C394 MOVZ W8, 0x1
	0x0395C398 STRB W8, [X19 + 0x9A5]
	0x0395C39C LDR X0, [X20]
	0x0395C3A0 BL 0x1C16F10
	0x0395C3A4 MOV X1, X31
	0x0395C3A8 MOV X19, X0
	0x0395C3AC BL 0x33BDD8C
	0x0395C3B0 LDR X8, [X20]
	0x0395C3B4 LDR X8, [X8 + 0xB8]
	0x0395C3B8 STR X19, [X8]
	0x0395C3BC LDP X20, X19, [X31 + 0x10]
	0x0395C3C0 LDR X30, [X31], #0x20
	0x0395C3C4 RET
	0x0395C3C8 MOV X1, X31
	0x0395C3CC B 0x33BDD8C
	0x0395C3D0 STR X30, [X31 - 0x10]!
	0x0395C3D4 CBZ X1, 0x395C3E4
	0x0395C3D8 LDR X0, [X1 + 0x10]
	0x0395C3DC LDR X30, [X31], #0x10
	0x0395C3E0 RET
	0x0395C3E4 BL 0x1C16F20
	0x0395C3E8 STR X30, [X31 - 0x20]!
	0x0395C3EC STP X20, X19, [X31 + 0x10]
	0x0395C3F0 ADRP X20, 0xA85000
	0x0395C3F4 LDRB W8, [X20 + 0x9A6]
	0x0395C3F8 MOV X19, X2
	0x0395C3FC TBNZ X8, 0x0, 0x395C420
	0x0395C400 ADRP X0, 0x798000
	0x0395C404 LDR X0, [X0 + 0xE28]
	0x0395C408 BL 0x1C16CF4
	0x0395C40C ADRP X0, 0x7F3000
	0x0395C410 LDR X0, [X0 + 0x6F0]
	0x0395C414 BL 0x1C16CF4
	0x0395C418 MOVZ W8, 0x1
	0x0395C41C STRB W8, [X20 + 0x9A6]
	0x0395C420 CBZ X19, 0x395C434
	0x0395C424 LDR W0, [X19 + 0x18]
	0x0395C428 LDP X20, X19, [X31 + 0x10]
	0x0395C42C LDR X30, [X31], #0x20
	0x0395C430 RET
	0x0395C434 BL 0x1C16F20
	0x0395C438 STR X30, [X31 - 0x10]!
	0x0395C43C CBZ X1, 0x395C44C
	0x0395C440 LDR X0, [X1 + 0x10]
	0x0395C444 LDR X30, [X31], #0x10
	0x0395C448 RET

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 496
	022 Move X22, 0xA89000
	023 Move X21, 0x7F7000
	024 Move X19, 0x79B000
	025 Move W8, [X22+2464]
	026 Move X21, [X21+1336]
	027 Move X19, [X19+1432]
	028 Move V9, V0
	029 Move X20, X1
	030 Move X27, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {388}
	035 Move X0, 0x7F7000
	036 Move X0, [X0+1344]
	037 Call 0x1C17CF4
	038 Move X0, 0x7F7000
	039 Move X0, [X0+1352]
	040 Call 0x1C17CF4
	041 Move X0, 0x7F7000
	042 Move X0, [X0+1360]
	043 Call 0x1C17CF4
	044 Move X0, 0x7F7000
	045 Move X0, [X0+1368]
	046 Call 0x1C17CF4
	047 Move X0, 0x7F7000
	048 Move X0, [X0+1376]
	049 Call 0x1C17CF4
	050 Move X0, 0x7F7000
	051 Move X0, [X0+1384]
	052 Call 0x1C17CF4
	053 Move X0, 0x7F7000
	054 Move X0, [X0+1392]
	055 Call 0x1C17CF4
	056 Move X0, 0x7F7000
	057 Move X0, [X0+1400]
	058 Call 0x1C17CF4
	059 Move X0, 0x7F7000
	060 Move X0, [X0+1408]
	061 Call 0x1C17CF4
	062 Move X0, 0x7F7000
	063 Move X0, [X0+1416]
	064 Call 0x1C17CF4
	065 Move X0, 0x7F7000
	066 Move X0, [X0+1424]
	067 Call 0x1C17CF4
	068 Move X0, 0x7F5000
	069 Move X0, [X0+3200]
	070 Call 0x1C17CF4
	071 Move X0, 0x7F7000
	072 Move X0, [X0+1432]
	073 Call 0x1C17CF4
	074 Move X0, 0x7F7000
	075 Move X0, [X0+1440]
	076 Call 0x1C17CF4
	077 Move X0, 0x7F7000
	078 Move X0, [X0+1448]
	079 Call 0x1C17CF4
	080 Move X0, 0x7F7000
	081 Move X0, [X0+1456]
	082 Call 0x1C17CF4
	083 Move X0, 0x7F7000
	084 Move X0, [X0+984]
	085 Call 0x1C17CF4
	086 Move X0, 0x7F7000
	087 Move X0, [X0+1464]
	088 Call 0x1C17CF4
	089 Move X0, 0x7F7000
	090 Move X0, [X0+1256]
	091 Call 0x1C17CF4
	092 Move X0, 0x7F6000
	093 Move X0, [X0+2056]
	094 Call 0x1C17CF4
	095 Move X0, 0x7F7000
	096 Move X0, [X0+1472]
	097 Call 0x1C17CF4
	098 Move X0, 0x7F7000
	099 Move X0, [X0+1480]
	100 Call 0x1C17CF4
	101 Move X0, 0x7F6000
	102 Move X0, [X0+680]
	103 Call 0x1C17CF4
	104 Move X0, 0x7F7000
	105 Move X0, [X0+104]
	106 Call 0x1C17CF4
	107 Move X0, 0x7F6000
	108 Move X0, [X0+3480]
	109 Call 0x1C17CF4
	110 Move X0, 0x7F7000
	111 Move X0, [X0+1488]
	112 Call 0x1C17CF4
	113 Move X0, 0x7F7000
	114 Move X0, [X0+1496]
	115 Call 0x1C17CF4
	116 Move X0, 0x7F7000
	117 Move X0, [X0+1504]
	118 Call 0x1C17CF4
	119 Move X0, 0x7A2000
	120 Move X0, [X0+2096]
	121 Call 0x1C17CF4
	122 Move X0, 0x7F7000
	123 Move X0, [X0+1512]
	124 Call 0x1C17CF4
	125 Move X0, 0x7F7000
	126 Move X0, [X0+1520]
	127 Call 0x1C17CF4
	128 Move X0, 0x7F7000
	129 Move X0, [X0+1528]
	130 Call 0x1C17CF4
	131 Move X0, 0x7A2000
	132 Move X0, [X0+2104]
	133 Call 0x1C17CF4
	134 Move X0, 0x7F6000
	135 Move X0, [X0+3488]
	136 Call 0x1C17CF4
	137 Move X0, 0x7F7000
	138 Move X0, [X0+1536]
	139 Call 0x1C17CF4
	140 Move X0, 0x7F7000
	141 Move X0, [X0+1544]
	142 Call 0x1C17CF4
	143 Move X0, 0x7F7000
	144 Move X0, [X0+1552]
	145 Call 0x1C17CF4
	146 Move X0, 0x7F7000
	147 Move X0, [X0+1560]
	148 Call 0x1C17CF4
	149 Move X0, 0x7F7000
	150 Move X0, [X0+1568]
	151 Call 0x1C17CF4
	152 Move X0, 0x7F7000
	153 Move X0, [X0+1576]
	154 Call 0x1C17CF4
	155 Move X0, 0x7F7000
	156 Move X0, [X0+1584]
	157 Call 0x1C17CF4
	158 Move X0, 0x7F6000
	159 Move X0, [X0+3496]
	160 Call 0x1C17CF4
	161 Move X0, 0x7A2000
	162 Move X0, [X0+2112]
	163 Call 0x1C17CF4
	164 Move X0, 0x7F6000
	165 Move X0, [X0+1592]
	166 Call 0x1C17CF4
	167 Move X0, 0x7F6000
	168 Move X0, [X0+1600]
	169 Call 0x1C17CF4
	170 Move X0, 0x7F6000
	171 Move X0, [X0+1608]
	172 Call 0x1C17CF4
	173 Move X0, 0x7F6000
	174 Move X0, [X0+1616]
	175 Call 0x1C17CF4
	176 Move X0, 0x7F6000
	177 Move X0, [X0+1624]
	178 Call 0x1C17CF4
	179 Move X0, 0x79C000
	180 Move X0, [X0+2512]
	181 Call 0x1C17CF4
	182 Move X0, 0x7F6000
	183 Move X0, [X0+1288]
	184 Call 0x1C17CF4
	185 Move X0, 0x7F6000
	186 Move X0, [X0+112]
	187 Call 0x1C17CF4
	188 Move X0, 0x7F6000
	189 Move X0, [X0+1632]
	190 Call 0x1C17CF4
	191 Move X0, 0x79C000
	192 Move X0, [X0+2520]
	193 Call 0x1C17CF4
	194 Move X0, 0x7F5000
	195 Move X0, [X0+2184]
	196 Call 0x1C17CF4
	197 Move X0, 0x7F4000
	198 Move X0, [X0+3624]
	199 Call 0x1C17CF4
	200 Move X0, 0x7A1000
	201 Move X0, [X0+2120]
	202 Call 0x1C17CF4
	203 Move X0, 0x7F6000
	204 Move X0, [X0+1640]
	205 Call 0x1C17CF4
	206 Move X0, 0x7F6000
	207 Move X0, [X0+1648]
	208 Call 0x1C17CF4
	209 Move X0, 0x7A1000
	210 Move X0, [X0+1672]
	211 Call 0x1C17CF4
	212 Move X0, 0x7F5000
	213 Move X0, [X0+2192]
	214 Call 0x1C17CF4
	215 Move X0, 0x7F6000
	216 Move X0, [X0+1656]
	217 Call 0x1C17CF4
	218 Move X0, 0x7F6000
	219 Move X0, [X0+1664]
	220 Call 0x1C17CF4
	221 Move X0, 0x7A1000
	222 Move X0, [X0+2128]
	223 Call 0x1C17CF4
	224 Move X0, 0x79B000
	225 Move X0, [X0+3592]
	226 Call 0x1C17CF4
	227 Move X0, 0x7F5000
	228 Move X0, [X0+2200]
	229 Call 0x1C17CF4
	230 Move X0, 0x79A000
	231 Move X0, [X0+3584]
	232 Call 0x1C17CF4
	233 Move X0, 0x7F6000
	234 Move X0, [X0+1672]
	235 Call 0x1C17CF4
	236 Move X0, 0x7F6000
	237 Move X0, [X0+1680]
	238 Call 0x1C17CF4
	239 Move X0, 0x79A000
	240 Move X0, [X0+3608]
	241 Call 0x1C17CF4
	242 Move X0, 0x7F6000
	243 Move X0, [X0+1688]
	244 Call 0x1C17CF4
	245 Move X0, 0x7F6000
	246 Move X0, [X0+1696]
	247 Call 0x1C17CF4
	248 Move X0, 0x7F6000
	249 Move X0, [X0+1704]
	250 Call 0x1C17CF4
	251 Move X0, 0x7F6000
	252 Move X0, [X0+1712]
	253 Call 0x1C17CF4
	254 Move X0, 0x7F6000
	255 Move X0, [X0+1720]
	256 Call 0x1C17CF4
	257 Move X0, 0x7F6000
	258 Move X0, [X0+776]
	259 Call 0x1C17CF4
	260 Move X0, 0x7F6000
	261 Move X0, [X0+520]
	262 Call 0x1C17CF4
	263 Move X0, 0x7F6000
	264 Move X0, [X0+1728]
	265 Call 0x1C17CF4
	266 Move X0, 0x7F6000
	267 Move X0, [X0+1736]
	268 Call 0x1C17CF4
	269 Move X0, 0x7F6000
	270 Move X0, [X0+1744]
	271 Call 0x1C17CF4
	272 Move X0, 0x7F5000
	273 Move X0, [X0+3504]
	274 Call 0x1C17CF4
	275 Move X0, 0x7F6000
	276 Move X0, [X0+544]
	277 Call 0x1C17CF4
	278 Move X0, 0x7F4000
	279 Move X0, [X0+3544]
	280 Call 0x1C17CF4
	281 Move X0, 0x7F4000
	282 Move X0, [X0+3552]
	283 Call 0x1C17CF4
	284 Move X0, 0x7F6000
	285 Move X0, [X0+784]
	286 Call 0x1C17CF4
	287 Move X0, 0x7F5000
	288 Move X0, [X0+2808]
	289 Call 0x1C17CF4
	290 Move X0, 0x79B000
	291 Move X0, [X0+3624]
	292 Call 0x1C17CF4
	293 Move X0, 0x7F6000
	294 Move X0, [X0+464]
	295 Call 0x1C17CF4
	296 Move X0, 0x7C4000
	297 Move X0, [X0+3896]
	298 Call 0x1C17CF4
	299 Move X0, 0x7F5000
	300 Move X0, [X0+2816]
	301 Call 0x1C17CF4
	302 Move X0, 0x7F6000
	303 Move X0, [X0+560]
	304 Call 0x1C17CF4
	305 Move X0, 0x7F4000
	306 Move X0, [X0+3560]
	307 Call 0x1C17CF4
	308 Move X0, 0x7F6000
	309 Move X0, [X0+792]
	310 Call 0x1C17CF4
	311 Move X0, 0x7F4000
	312 Move X0, [X0+3568]
	313 Call 0x1C17CF4
	314 Move X0, 0x7F4000
	315 Move X0, [X0+2768]
	316 Call 0x1C17CF4
	317 Move X0, 0x79A000
	318 Move X0, [X0+1432]
	319 Call 0x1C17CF4
	320 Move X0, 0x7F5000
	321 Move X0, [X0+1048]
	322 Call 0x1C17CF4
	323 Move X0, 0x7F6000
	324 Move X0, [X0+1752]
	325 Call 0x1C17CF4
	326 Move X0, 0x7F6000
	327 Move X0, [X0+1760]
	328 Call 0x1C17CF4
	329 Move X0, 0x7F6000
	330 Move X0, [X0+1768]
	331 Call 0x1C17CF4
	332 Move X0, 0x7F6000
	333 Move X0, [X0+1776]
	334 Call 0x1C17CF4
	335 Move X0, 0x7F6000
	336 Move X0, [X0+1784]
	337 Call 0x1C17CF4
	338 Move X0, 0x7F6000
	339 Move X0, [X0+1792]
	340 Call 0x1C17CF4
	341 Move X0, 0x7F6000
	342 Move X0, [X0+1800]
	343 Call 0x1C17CF4
	344 Move X0, 0x7F6000
	345 Move X0, [X0+1808]
	346 Call 0x1C17CF4
	347 Move X0, 0x7F6000
	348 Move X0, [X0+1816]
	349 Call 0x1C17CF4
	350 Move X0, 0x7F6000
	351 Move X0, [X0+1824]
	352 Call 0x1C17CF4
	353 Move X0, 0x7F6000
	354 Move X0, [X0+1832]
	355 Call 0x1C17CF4
	356 Move X0, 0x7F6000
	357 Move X0, [X0+1336]
	358 Call 0x1C17CF4
	359 Move X0, 0x7F6000
	360 Move X0, [X0+1840]
	361 Call 0x1C17CF4
	362 Move X0, 0x7F6000
	363 Move X0, [X0+1848]
	364 Call 0x1C17CF4
	365 Move X0, 0x7F6000
	366 Move X0, [X0+1856]
	367 Call 0x1C17CF4
	368 Move X0, 0x7F6000
	369 Move X0, [X0+1864]
	370 Call 0x1C17CF4
	371 Move X0, 0x7F6000
	372 Move X0, [X0+1872]
	373 Call 0x1C17CF4
	374 Move X0, 0x7F5000
	375 Move X0, [X0+3536]
	376 Call 0x1C17CF4
	377 Move X0, 0x7F5000
	378 Move X0, [X0+2824]
	379 Call 0x1C17CF4
	380 Move X0, 0x7F6000
	381 Move X0, [X0+1880]
	382 Call 0x1C17CF4
	383 Move X0, 0x7F6000
	384 Move X0, [X0+1888]
	385 Call 0x1C17CF4
	386 Move W8, 1
	387 Move [X22+2464], W8
	388 Move X0, [X21]
	389 NotImplemented "Instruction MOVI not yet implemented."
	390 Move [X31+432], X31
	391 Move [X31+440], X31
	392 Move [X31+448], X31
	393 Move [X31+400], X31
	394 Move [X31+408], X31
	395 Move [X31+416], X31
	396 Move [X31+384], X31
	397 Move [X31+336], X31
	398 Move [X31+344], X31
	399 Move [X31+288], X31
	400 Move [X31+464], V0
	401 Move [X31+472], V0
	402 Move [X31+352], V0
	403 Move [X31+360], V0
	404 Move [X31+304], V0
	405 Move [X31+312], V0
	406 Move [X31+256], V0
	407 Move [X31+264], V0
	408 Move [X31+224], V0
	409 Move [X31+232], V0
	410 Move [X31+192], X31
	411 Move [X31+200], X31
	412 Move [X31+208], X31
	413 Call 0x1C17F10
	414 Move X1, X31
	415 Move X21, X0
	416 Call Object..ctor, X0
	417 Move X0, [X19]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, X27
	423 Move X1, X31
	424 Move X2, X31
	425 Call Object.op_Equality, X0, X1
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfEqual {2276}
	430 Move [X31+48], X21
	431 Compare X27, 0
	432 JumpIfEqual {2264}
	433 Move X22, 0x7F4000
	434 Move X23, 0x7F4000
	435 Move X25, 0x7F6000
	436 Move X26, 0x7F6000
	437 Move X28, 0x7F5000
	438 Move X21, 0x7F6000
	439 Move X29, 0x7F6000
	440 Move X24, 0x7F6000
	441 Move X22, [X22+3560]
	442 Move X23, [X23+3552]
	443 Move X25, [X25+984]
	444 Move X26, [X26+1480]
	445 Move X28, [X28+2824]
	446 Move X21, [X21+792]
	447 Move X29, [X29+784]
	448 Move X24, [X24+1440]
	449 Move X0, X27
	450 Move X1, X31
	451 Call ProBuilderMesh.get_sharedVertexLookup, X0
	452 Move X19, X0
	453 Move X0, X27
	454 Move X1, X31
	455 Move X2, X31
	456 Call ProBuilderMesh.GetVertices, X0, X1
	457 Move X8, [X22]
	458 Move X22, X0
	459 Move X0, X8
	460 Call 0x1C17F10
	461 Move X2, [X23]
	462 Move X1, X22
	463 Move X23, X0
	464 Call List`1<Object>..ctor, X0, X1
	465 Move X0, X20
	466 Move X1, X19
	467 Move X2, X31
	468 Call EdgeLookup.GetEdgeLookup, X0, X1
	469 Move X1, [X25]
	470 Call Enumerable.Distinct, X0
	471 Move X1, [X26]
	472 Call Enumerable.ToList, X0
	473 Move X8, [X28]
	474 Move X26, X0
	475 Move W9, [X8+224]
	476 Compare W9, 0
	477 JumpIfNotEqual {480}
	478 Move X0, X8
	479 Call 0x1C17DFC
	480 Move X0, X27
	481 Move W1, W31
	482 Move X2, X31
	483 Call WingedEdge.GetWingedEdges, X0, X1
	484 Move X8, [X21]
	485 Move X25, X0
	486 Move X0, X8
	487 Call 0x1C17F10
	488 Move X1, [X29]
	489 Move [X31+40], X0
	490 Call List`1<Object>..ctor, X0
	491 Move X0, [X24]
	492 Call 0x1C17F10
	493 Move X8, 0x7F6000
	494 Move X8, [X8+1400]
	495 Move X19, X0
	496 Move X1, [X8]
	497 Call Dictionary`2<Object, Object>..ctor, X0
	498 Move X8, [X31+48]
	499 Compare X8, 0
	500 JumpIfEqual {2264}
	501 Move [X31+32], X27
	502 Move X21, 0x79B000
	503 Move X21, [X21+3592]
	504 Move [X8+16], X19
	505 Move X22, 0x7A1000
	506 Move X19, 0x7F6000
	507 Move X0, [X21]
	508 Move X20, 0x7F6000
	509 Move X22, [X22+1672]
	510 Move X19, [X19+1456]
	511 Move X20, [X20+1408]
	512 Call 0x1C17F10
	513 Move X1, [X22]
	514 Move [X31+24], X0
	515 Call HashSet`1<Int32>..ctor, X0
	516 Move X0, [X19]
	517 Call 0x1C17F10
	518 Move X1, [X20]
	519 Move [X31+64], X0
	520 Call Dictionary`2<Int32, Object>..ctor, X0
	521 Move X0, X25
	522 Move X1, X31
	523 Move [X31+56], X25
	524 Call WingedEdge.GetSpokes, X0
	525 Move X8, [X21]
	526 Move [X31+72], X0
	527 Move X0, X8
	528 Call 0x1C17F10
	529 Move X1, [X22]
	530 Move X29, X0
	531 Call HashSet`1<Int32>..ctor, X0
	532 Compare X26, 0
	533 JumpIfEqual {2264}
	534 Move X8, 0x7F6000
	535 Move X8, [X8+1744]
	536 Move X21, 0x79C000
	537 Move X20, 0x7F5000
	538 Move X21, [X21+2520]
	539 Move X20, [X20+3488]
	540 Move X1, [X8]
	541 Move X25, 0x7F6000
	542 Move X25, [X25+464]
	543 Add X8, X31, 144
	544 Move X0, X26
	545 Move [X31+16], X26
	546 Call List`1<EdgeLookup>.GetEnumerator, X0
	547 Move V0, [X31+144]
	548 Move V1, [X31+160]
	549 Move X27, 0x79A000
	550 Move X8, -48693248
	551 Move X27, [X27+1448]
	552 Move V10, [X8+3952]
	553 Move X28, 0xA7F000
	554 Move [X31+464], V0
	555 Move [X31+472], V1
	556 Move W24, 1
	557 Move V11, V9
	558 Move X8, 0x7F6000
	559 Move X8, [X8+1560]
	560 Move X1, [X8]
	561 Add X0, X31, 464
	562 Call Enumerator<EdgeLookup>.MoveNext, X0
	563 Move TEMP, X0
	564 And TEMP, TEMP, 1
	565 Compare TEMP, 1
	566 JumpIfNotEqual {787}
	567 Compare X29, 0
	568 JumpIfEqual {2231}
	569 Move X19, [X31+488]
	570 Move X2, [X21]
	571 Move X0, X29
	572 Move W1, W19
	573 Call HashSet`1<Int32>.Add, X0, X1
	574 Move TEMP, X0
	575 And TEMP, TEMP, 1
	576 Compare TEMP, 1
	577 JumpIfNotEqual {664}
	578 Move X0, [X31+72]
	579 Compare X0, 0
	580 JumpIfEqual {2233}
	581 Move X8, 0x7F6000
	582 Move X8, [X8+1424]
	583 Move X2, [X8]
	584 Move W1, W19
	585 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	586 Compare X0, 0
	587 JumpIfEqual {2234}
	588 Move X8, 0x7F5000
	589 Move X8, [X8+3504]
	590 Move X1, [X8]
	591 Add X8, X31, 144
	592 Call List`1<Object>.GetEnumerator, X0
	593 Move V0, [X31+9]
	594 Move X8, [X31+160]
	595 Move V8, V11
	596 Move [X31+27], V0
	597 Move [X31+448], X8
	598 Move X1, [X20]
	599 Add X0, X31, 432
	600 Call Enumerator<Object>.MoveNext, X0
	601 Move TEMP, X0
	602 And TEMP, TEMP, 1
	603 Compare TEMP, 1
	604 JumpIfNotEqual {651}
	605 Move X8, [X31+448]
	606 Compare X8, 0
	607 JumpIfEqual {763}
	608 Compare X23, 0
	609 JumpIfEqual {764}
	610 Move X26, [X8+16]
	611 Move X2, [X25]
	612 Move X0, X23
	613 Move W1, W26
	614 Call List`1<Object>.get_Item, X0, X1
	615 Compare X0, 0
	616 JumpIfEqual {761}
	617 Move V12, [X0+16]
	618 NotImplemented "Instruction LDUR not yet implemented."
	619 Move X2, [X25]
	620 Move X1, X26
	621 ShiftRight X1, 32
	622 And X1, X1, 0x7FFFFFFF
	623 Move X0, X23
	624 Call List`1<Object>.get_Item, X0, X1
	625 Compare X0, 0
	626 JumpIfEqual {762}
	627 Move V14, [X0+16]
	628 Move W8, [X28+2140]
	629 NotImplemented "Instruction LDUR not yet implemented."
	630 Compare W8, 0
	631 JumpIfNotEqual {635}
	632 Move X0, X27
	633 Call 0x1C17CF4
	634 Move [X28+2140], W24
	635 Move X0, [X27]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Subtract S0, S12, S14
	641 Subtract V1, V13, V15
	642 Multiply S0, S0, S0
	643 NotImplemented "Instruction INVALID not yet implemented."
	644 Add S0, S0, S1
	645 Move S1, V1.S[1]
	646 Add S0, S1, S0
	647 NotImplemented "Instruction FSQRT not yet implemented."
	648 Add S0, S0, S10
	649 NotImplemented "Instruction FCMP not yet implemented."
	650 NotImplemented "Instruction FCSEL not yet implemented."
	651 Move X26, X31
	652 Move W22, 7
	653 Move X8, 0x7F5000
	654 Move X8, [X8+3480]
	655 Move V11, V8
	656 Move X1, [X8]
	657 Add X0, X31, 432
	658 Call Enumerator<Object>.Dispose, X0
	659 Compare X26, 0
	660 JumpIfNotEqual {2235}
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Compare W22, 0
	663 JumpIfNotEqual {1211}
	664 Move X2, [X21]
	665 Move X19, X19
	666 ShiftRight X19, 32
	667 And X19, X19, 0x7FFFFFFF
	668 Move X0, X29
	669 Move W1, W19
	670 Call HashSet`1<Int32>.Add, X0, X1
	671 Move TEMP, X0
	672 And TEMP, TEMP, 1
	673 Compare TEMP, 1
	674 JumpIfNotEqual {558}
	675 Move X0, [X31+72]
	676 Compare X0, 0
	677 JumpIfEqual {2240}
	678 Move X8, 0x7F6000
	679 Move X8, [X8+1424]
	680 Move X2, [X8]
	681 Move W1, W19
	682 Call Dictionary`2<Int32, Object>.get_Item, X0, X1
	683 Compare X0, 0
	684 JumpIfEqual {2239}
	685 Move X8, 0x7F5000
	686 Move X8, [X8+3504]
	687 Move X1, [X8]
	688 Add X8, X31, 144
	689 Call List`1<Object>.GetEnumerator, X0
	690 Move V0, [X31+9]
	691 Move X8, [X31+160]
	692 Move V8, V11
	693 Move [X31+27], V0
	694 Move [X31+448], X8
	695 Move X1, [X20]
	696 Add X0, X31, 432
	697 Call Enumerator<Object>.MoveNext, X0
	698 Move TEMP, X0
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfNotEqual {748}
	702 Move X8, [X31+448]
	703 Compare X8, 0
	704 JumpIfEqual {767}
	705 Compare X23, 0
	706 JumpIfEqual {768}
	707 Move X19, [X8+16]
	708 Move X2, [X25]
	709 Move X0, X23
	710 Move W1, W19
	711 Call List`1<Object>.get_Item, X0, X1
	712 Compare X0, 0
	713 JumpIfEqual {765}
	714 Move V12, [X0+16]
	715 NotImplemented "Instruction LDUR not yet implemented."
	716 Move X2, [X25]
	717 Move X1, X19
	718 ShiftRight X1, 32
	719 And X1, X1, 0x7FFFFFFF
	720 Move X0, X23
	721 Call List`1<Object>.get_Item, X0, X1
	722 Compare X0, 0
	723 JumpIfEqual {766}
	724 Move V14, [X0+16]
	725 Move W8, [X28+2140]
	726 NotImplemented "Instruction LDUR not yet implemented."
	727 Compare W8, 0
	728 JumpIfNotEqual {732}
	729 Move X0, X27
	730 Call 0x1C17CF4
	731 Move [X28+2140], W24
	732 Move X0, [X27]
	733 Move W8, [X0+224]
	734 Compare W8, 0
	735 JumpIfNotEqual {737}
	736 Call 0x1C17DFC
	737 Subtract S0, S12, S14
	738 Subtract V1, V13, V15
	739 Multiply S0, S0, S0
	740 NotImplemented "Instruction INVALID not yet implemented."
	741 Add S0, S0, S1
	742 Move S1, V1.S[1]
	743 Add S0, S1, S0
	744 NotImplemented "Instruction FSQRT not yet implemented."
	745 Add S0, S0, S10
	746 NotImplemented "Instruction FCMP not yet implemented."
	747 NotImplemented "Instruction FCSEL not yet implemented."
	748 Move X19, X31
	749 Move W22, 5
	750 Move X8, 0x7F5000
	751 Move X8, [X8+3480]
	752 Move V11, V8
	753 Move X1, [X8]
	754 Add X0, X31, 432
	755 Call Enumerator<Object>.Dispose, X0
	756 Compare X19, 0
	757 JumpIfNotEqual {2237}
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Compare W22, 0
	760 JumpIfEqual {558}
	761 Call 0x1C17F20
	762 Call 0x1C17F20
	763 Call 0x1C17F20
	764 Call 0x1C17F20
	765 Call 0x1C17F20
	766 Call 0x1C17F20
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Move X22, X0
	770 Move V8, V11
	771 Move X22, X0
	772 Move V8, V11
	773 Move X22, X0
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move X0, X22
	776 Call 0x3EB2AD0
	777 Move X19, [X0]
	778 Call 0x3EB2AE0
	779 Move W22, W31
	780 Move X22, X0
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move X0, X22
	783 Call 0x3EB2AD0
	784 Move X26, [X0]
	785 Call 0x3EB2AE0
	786 Move W22, W31
	787 Move X8, 0x7F6000
	788 Move X8, [X8+1528]
	789 Add X0, X31, 464
	790 Move X1, [X8]
	791 Call Enumerator<EdgeLookup>.Dispose, X0
	792 Move V8, V11
	793 Move X8, -48689152
	794 Move V0, [X8+1040]
	795 NotImplemented "Instruction FCMP not yet implemented."
	796 Move X8, 0x7F4000
	797 Move X8, [X8+2768]
	798 Move X0, [X8]
	799 Move W8, [X0+224]
	800 Compare W8, 0
	801 JumpIfNotEqual {803}
	802 Call 0x1C17DFC
	803 Move X8, 0x7F6000
	804 Move X8, [X8+1888]
	805 Move X8, 0x7F6000
	806 Move X8, [X8+1744]
	807 Move X0, [X31+16]
	808 Move X1, [X8]
	809 Add X8, X31, 144
	810 Call List`1<EdgeLookup>.GetEnumerator, X0
	811 Move V0, [X31+144]
	812 Move V1, [X31+160]
	813 Move X24, 0x7F6000
	814 Move X25, 0x7F6000
	815 Move X26, 0x7F6000
	816 Move X27, 0x7F6000
	817 Move X28, 0x7F6000
	818 Move X24, [X24+1848]
	819 Move X25, [X25+1840]
	820 Move X26, [X26+1464]
	821 Move X27, [X27+1344]
	822 Move X28, [X28+1368]
	823 Move X29, [X31+24]
	824 Move W20, W31
	825 Move [X31+464], V0
	826 Move [X31+472], V1
	827 Move X8, 0x7F6000
	828 Move X8, [X8+1560]
	829 Move X1, [X8]
	830 Add X0, X31, 464
	831 Call Enumerator<EdgeLookup>.MoveNext, X0
	832 Move TEMP, X0
	833 And TEMP, TEMP, 1
	834 Compare TEMP, 1
	835 JumpIfNotEqual {930}
	836 Move X0, [X24]
	837 Call 0x1C17F10
	838 Move X19, X0
	839 Move X1, X31
	840 Call Object..ctor, X0
	841 Compare X19, 0
	842 JumpIfEqual {2232}
	843 Move V0, [X31+30]
	844 Move X8, 0x7F6000
	845 Move [X19+1], V0
	846 Move X8, [X8+112]
	847 Move X0, [X8]
	848 Call 0x1C17F10
	849 Move X2, [X25]
	850 Move X22, X0
	851 Move X1, X19
	852 Move X3, X31
	853 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	854 Move X2, [X26]
	855 Move X0, [X31+56]
	856 Move X1, X22
	857 Call 0x21C670C, X0, X1
	858 Move X19, X0
	859 Compare X0, 0
	860 JumpIfEqual {827}
	861 Move X8, [X19+56]
	862 Compare X8, 0
	863 JumpIfEqual {827}
	864 Move X22, [X31+48]
	865 Move X1, [X19+32]
	866 Move W2, [X19+24]
	867 Move X3, [X27]
	868 Move X0, [X22+16]
	869 Add W20, W20, 1
	870 Call ArrayUtility.AddOrAppend, X0, X1, X2
	871 Move X0, [X22+16]
	872 Move X1, [X19+32]
	873 Move W2, [X19+28]
	874 Move X3, [X27]
	875 Call ArrayUtility.AddOrAppend, X0, X1, X2
	876 Move X8, [X19+56]
	877 Compare X8, 0
	878 JumpIfEqual {2300}
	879 Move X9, [X31+48]
	880 Move X1, [X8+32]
	881 Move W2, [X19+24]
	882 Move X3, [X27]
	883 Move X0, [X9+16]
	884 Call ArrayUtility.AddOrAppend, X0, X1, X2
	885 Move X8, [X19+56]
	886 Compare X8, 0
	887 JumpIfEqual {2298}
	888 Move X9, [X31+48]
	889 Move X1, [X8+32]
	890 Move W2, [X19+28]
	891 Move X3, [X27]
	892 Move X0, [X9+16]
	893 Call ArrayUtility.AddOrAppend, X0, X1, X2
	894 Compare X29, 0
	895 JumpIfEqual {2297}
	896 Move W1, [X19+24]
	897 Move X2, [X21]
	898 Move X0, X29
	899 Call HashSet`1<Int32>.Add, X0, X1
	900 Move W1, [X19+28]
	901 Move X2, [X21]
	902 Move X0, X29
	903 Call HashSet`1<Int32>.Add, X0, X1
	904 Move X0, [X28]
	905 Move W8, [X0+224]
	906 Compare W8, 0
	907 JumpIfNotEqual {909}
	908 Call 0x1C17DFC
	909 Move X0, X23
	910 Move X1, X19
	911 Move V0, V8
	912 Call Bevel.SlideEdge, X0, X1, V0
	913 Move X1, [X19+56]
	914 Move X0, X23
	915 Move V0, V8
	916 Call Bevel.SlideEdge, X0, X1, V0
	917 Move X2, [X19+56]
	918 Move X3, [X31+64]
	919 Move X0, X23
	920 Move X1, X19
	921 Call Bevel.GetBridgeFaces, X0, X1, X2, X3
	922 Move X1, X0
	923 Move X0, [X31+40]
	924 Compare X0, 0
	925 JumpIfEqual {2299}
	926 Move X8, 0x7F6000
	927 Move X8, [X8+1720]
	928 Move X2, [X8]
	929 Call List`1<Object>.AddRange, X0, X1
	930 Move X8, 0x7F6000
	931 Move X8, [X8+1528]
	932 Add X0, X31, 464
	933 Move X1, [X8]
	934 Call Enumerator<EdgeLookup>.Dispose, X0
	935 NotImplemented "Instruction CMP not yet implemented."
	936 Move X20, 0x7F6000
	937 Move X20, [X20+1872]
	938 Move X0, [X20]
	939 Move W8, [X0+224]
	940 Compare W8, 0
	941 JumpIfNotEqual {944}
	942 Call 0x1C17DFC
	943 Move X0, [X20]
	944 Move X8, [X0+184]
	945 Move X19, [X8+8]
	946 Compare X19, 0
	947 JumpIfNotEqual {969}
	948 Move W8, [X0+224]
	949 Compare W8, 0
	950 JumpIfNotEqual {953}
	951 Call 0x1C17DFC
	952 Move X0, [X20]
	953 Move X9, 0x7F6000
	954 Move X8, [X0+184]
	955 Move X9, [X9+1288]
	956 Move X22, [X8]
	957 Move X0, [X9]
	958 Call 0x1C17F10
	959 Move X8, 0x7F6000
	960 Move X8, [X8+1784]
	961 Move X1, X22
	962 Move X3, X31
	963 Move X19, X0
	964 Move X2, [X8]
	965 Call Func`2<Object, Object>..ctor, X0, X1, X2
	966 Move X8, [X20]
	967 Move X8, [X8+184]
	968 Move [X8+8], X19
	969 Move X8, 0x7F6000
	970 Move X8, [X8+1256]
	971 Move X0, [X31+40]
	972 Move X1, X19
	973 Move X2, [X8]
	974 Call Enumerable.Select, X0, X1
	975 Move X8, 0x7F4000
	976 Move X8, [X8+3568]
	977 Move X19, X0
	978 Move X8, [X8]
	979 Move X0, X8
	980 Call 0x1C17F10
	981 Move X8, 0x7F4000
	982 Move X8, [X8+3544]
	983 Move X1, X19
	984 Move [X31+24], X0
	985 Move X2, [X8]
	986 Call List`1<Object>..ctor, X0, X1
	987 Move X8, 0x7F6000
	988 Move X8, [X8+1448]
	989 Move X0, [X8]
	990 Call 0x1C17F10
	991 Move X8, 0x7F6000
	992 Move X8, [X8+1416]
	993 Move [X31+72], X0
	994 Move X1, [X8]
	995 Call Dictionary`2<Object, Object>..ctor, X0
	996 Compare X29, 0
	997 JumpIfEqual {2264}
	998 Move X8, 0x7A1000
	999 Move X8, [X8+2120]
	1000 Move X0, X29
	1001 Move X1, [X8]
	1002 Add X8, X31, 144
	1003 Call HashSet`1<Int32>.GetEnumerator, X0
	1004 Move V0, [X31+9]
	1005 Move X8, [X31+160]
	1006 Move X25, 0x79A000
	1007 Move X24, 0x7F6000
	1008 Move X20, 0x7F5000
	1009 Move X25, [X25+3608]
	1010 Move X24, [X24+1680]
	1011 Move X20, [X20+2184]
	1012 Move [X31+25], V0
	1013 Move [X31+416], X8
	1014 Move X28, 0x7F6000
	1015 Move X28, [X28+1352]
	1016 Move X8, 0x7A1000
	1017 Move X8, [X8+2104]
	1018 Move X1, [X8]
	1019 Add X0, X31, 400
	1020 Call Enumerator<Int32>.MoveNext, X0
	1021 Move TEMP, X0
	1022 And TEMP, TEMP, 1
	1023 Compare TEMP, 1
	1024 JumpIfNotEqual {1219}
	1025 Move X8, 0x7F6000
	1026 Move X8, [X8+1864]
	1027 Move X0, [X8]
	1028 Call 0x1C17F10
	1029 Move X27, X0
	1030 Move X1, X31
	1031 Call Object..ctor, X0
	1032 Compare X27, 0
	1033 JumpIfEqual {2260}
	1034 Move X8, [X31+48]
	1035 Move [X27+24], X8
	1036 Move W8, [X31+416]
	1037 Move [X27+16], W8
	1038 Move X8, 0x7F6000
	1039 Move X8, [X8+112]
	1040 Move X0, [X8]
	1041 Call 0x1C17F10
	1042 Move X8, 0x7F6000
	1043 Move X8, [X8+1856]
	1044 Move X19, X0
	1045 Move X2, [X8]
	1046 Move X1, X27
	1047 Move X3, X31
	1048 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	1049 Move X8, 0x7F6000
	1050 Move X8, [X8+104]
	1051 Move X2, [X8]
	1052 Move X0, [X31+56]
	1053 Move X1, X19
	1054 Call Enumerable.Where, X0, X1
	1055 Move X8, 0x7F5000
	1056 Move X8, [X8+2200]
	1057 Move X26, X0
	1058 Move X0, [X8]
	1059 Call 0x1C17F10
	1060 Move X8, 0x7F5000
	1061 Move X8, [X8+2192]
	1062 Move X19, X0
	1063 Move X1, [X8]
	1064 Call HashSet`1<Object>..ctor, X0
	1065 Compare X26, 0
	1066 JumpIfEqual {2261}
	1067 Move X8, [X26]
	1068 Move X10, 0x7F6000
	1069 NotImplemented "Instruction LDRH not yet implemented."
	1070 Move X10, [X10+1672]
	1071 Move X1, [X10]
	1072 Compare X9, 0
	1073 JumpIfEqual {1080}
	1074 Move X10, [X8+176]
	1075 Add X10, X10, 8
	1076 NotImplemented "Instruction LDUR not yet implemented."
	1077 NotImplemented "Instruction CMP not yet implemented."
	1078 Subtract X9, X9, 1
	1079 Add X10, X10, 16
	1080 Move X0, X26
	1081 Move W2, W31
	1082 Call 0x1C5D788
	1083 NotImplemented "Instruction LDRSW not yet implemented."
	1084 Add X8, X8, X9
	1085 Add X0, X8, 312
	1086 Move X8, [X0]
	1087 Move X1, [X0+8]
	1088 Move X0, X26
	1089 NotImplemented "Instruction BLR not yet implemented."
	1090 Move X26, X0
	1091 Compare X0, 0
	1092 JumpIfEqual {1202}
	1093 Move X8, [X26]
	1094 Move X1, [X25]
	1095 NotImplemented "Instruction LDRH not yet implemented."
	1096 Compare X9, 0
	1097 JumpIfEqual {1104}
	1098 Move X10, [X8+176]
	1099 Add X10, X10, 8
	1100 NotImplemented "Instruction LDUR not yet implemented."
	1101 NotImplemented "Instruction CMP not yet implemented."
	1102 Subtract X9, X9, 1
	1103 Add X10, X10, 16
	1104 Move X0, X26
	1105 Move W2, W31
	1106 Call 0x1C5D788
	1107 NotImplemented "Instruction LDRSW not yet implemented."
	1108 Add X8, X8, X9
	1109 Add X0, X8, 312
	1110 Move X8, [X0]
	1111 Move X1, [X0+8]
	1112 Move X0, X26
	1113 NotImplemented "Instruction BLR not yet implemented."
	1114 Move TEMP, X0
	1115 And TEMP, TEMP, 1
	1116 Compare TEMP, 1
	1117 JumpIfNotEqual {1168}
	1118 Move X8, [X26]
	1119 Move X1, [X24]
	1120 NotImplemented "Instruction LDRH not yet implemented."
	1121 Compare X9, 0
	1122 JumpIfEqual {1129}
	1123 Move X10, [X8+176]
	1124 Add X10, X10, 8
	1125 NotImplemented "Instruction LDUR not yet implemented."
	1126 NotImplemented "Instruction CMP not yet implemented."
	1127 Subtract X9, X9, 1
	1128 Add X10, X10, 16
	1129 Move X0, X26
	1130 Move W2, W31
	1131 Call 0x1C5D788
	1132 NotImplemented "Instruction LDRSW not yet implemented."
	1133 Add X8, X8, X9
	1134 Add X0, X8, 312
	1135 Move X8, [X0]
	1136 Move X1, [X0+8]
	1137 Move X0, X26
	1138 NotImplemented "Instruction BLR not yet implemented."
	1139 Move X29, X0
	1140 Compare X0, 0
	1141 JumpIfEqual {1200}
	1142 Compare X19, 0
	1143 JumpIfEqual {1201}
	1144 Move X1, [X29+32]
	1145 Move X2, [X20]
	1146 Move X0, X19
	1147 Call HashSet`1<Object>.Add, X0, X1
	1148 Move TEMP, X0
	1149 And TEMP, TEMP, 1
	1150 Compare TEMP, 1
	1151 JumpIfNotEqual {1093}
	1152 Move X8, 0x7F6000
	1153 Move X22, [X29+32]
	1154 Move W2, [X27+16]
	1155 Move X8, [X8+1752]
	1156 Move [X31+144], X31
	1157 Move [X31+152], X31
	1158 Move X3, [X8]
	1159 Add X0, X31, 144
	1160 Move X1, X29
	1161 Call SimpleTuple`2<Object, Int32>..ctor, X0, X1, X2
	1162 Move X2, [X31+144]
	1163 Move X3, [X31+152]
	1164 Move X4, [X28]
	1165 Move X0, [X31+72]
	1166 Move X1, X22
	1167 Call ArrayUtility.AddOrAppend, X0, X1, X2
	1168 Move X27, X31
	1169 Move W19, 19
	1170 Compare X26, 0
	1171 JumpIfEqual {1195}
	1172 Move X8, [X26]
	1173 Move X10, 0x79A000
	1174 NotImplemented "Instruction LDRH not yet implemented."
	1175 Move X10, [X10+3584]
	1176 Move X1, [X10]
	1177 Compare X9, 0
	1178 JumpIfEqual {1185}
	1179 Move X10, [X8+176]
	1180 Add X10, X10, 8
	1181 NotImplemented "Instruction LDUR not yet implemented."
	1182 NotImplemented "Instruction CMP not yet implemented."
	1183 Subtract X9, X9, 1
	1184 Add X10, X10, 16
	1185 Move X0, X26
	1186 Move W2, W31
	1187 Call 0x1C5D788
	1188 NotImplemented "Instruction LDRSW not yet implemented."
	1189 Add X8, X8, X9
	1190 Add X0, X8, 312
	1191 Move X8, [X0]
	1192 Move X1, [X0+8]
	1193 Move X0, X26
	1194 NotImplemented "Instruction BLR not yet implemented."
	1195 Compare X27, 0
	1196 JumpIfNotEqual {2262}
	1197 NotImplemented "Instruction CMP not yet implemented."
	1198 Compare W19, 0
	1199 JumpIfEqual {1016}
	1200 Call 0x1C17F20
	1201 Call 0x1C17F20
	1202 Call 0x1C17F20
	1203 Move X19, X1
	1204 NotImplemented "Instruction CMP not yet implemented."
	1205 Call 0x3EB2AD0
	1206 Move X27, [X0]
	1207 Call 0x3EB2AE0
	1208 Move W19, W31
	1209 Compare X26, 0
	1210 JumpIfNotEqual {1172}
	1211 Move X8, 0x7F6000
	1212 Move X8, [X8+1528]
	1213 Add X0, X31, 464
	1214 Move X1, [X8]
	1215 Call Enumerator<EdgeLookup>.Dispose, X0
	1216 Move V8, V11
	1217 Compare W22, 0
	1218 JumpIfNotEqual {2140}
	1219 Move X8, 0x7A1000
	1220 Move X8, [X8+2096]
	1221 Add X0, X31, 400
	1222 Move X1, [X8]
	1223 Call Enumerator<Int32>.Dispose, X0
	1224 Move X0, [X31+72]
	1225 Compare X0, 0
	1226 JumpIfEqual {2264}
	1227 Move X8, 0x7F6000
	1228 Move X8, [X8+1376]
	1229 Move X1, [X8]
	1230 Add X8, X31, 144
	1231 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	1232 Move V0, [X31+144]
	1233 Move V1, [X31+160]
	1234 Move X8, [X31+176]
	1235 Move X22, 0x7F5000
	1236 Move X29, 0x7F5000
	1237 Move X24, 0x7F5000
	1238 Move X26, 0x7F5000
	1239 Move X27, 0x7F5000
	1240 Move X28, 0x7F5000
	1241 Move X22, [X22+1576]
	1242 Move X29, [X29+776]
	1243 Move X24, [X24+1384]
	1244 Move X26, [X26+1536]
	1245 Move X27, [X27+1760]
	1246 Move X28, [X28+1360]
	1247 Move [X31+352], V0
	1248 Move [X31+360], V1
	1249 Move [X31+384], X8
	1250 Move X20, 0x7F5000
	1251 Move X20, [X20+1520]
	1252 Move X1, [X22]
	1253 Add X0, X31, 352
	1254 Call Enumerator<Object, Object>.MoveNext, X0
	1255 Move TEMP, X0
	1256 And TEMP, TEMP, 1
	1257 Compare TEMP, 1
	1258 JumpIfNotEqual {1354}
	1259 Move X1, [X31+376]
	1260 Add X2, X31, 344
	1261 Move X0, X23
	1262 Move V0, V8
	1263 Move X3, X31
	1264 Call VertexEditing.ExplodeVertex, X0, X1, V0, X2
	1265 Move X19, X0
	1266 Compare X0, 0
	1267 JumpIfEqual {1252}
	1268 Move X0, [X31+40]
	1269 Compare X0, 0
	1270 JumpIfEqual {2267}
	1271 Move W10, [X0+28]
	1272 Move X8, [X0+16]
	1273 Move X9, [X29]
	1274 Add W10, W10, 1
	1275 Move [X0+28], W10
	1276 Compare X8, 0
	1277 JumpIfEqual {2268}
	1278 NotImplemented "Instruction LDRSW not yet implemented."
	1279 Move W11, [X8+24]
	1280 NotImplemented "Instruction CMP not yet implemented."
	1281 Add W9, W10, 1
	1282 Add X8, X8, X10
	1283 Move [X0+24], W9
	1284 Move [X8+32], X19
	1285 Move X8, [X9+32]
	1286 Move X8, [X8+192]
	1287 Move X2, [X8+112]
	1288 Move X1, X19
	1289 Call List`1<Object>.AddWithResize, X0, X1
	1290 Move X0, [X31+344]
	1291 Compare X0, 0
	1292 JumpIfEqual {2266}
	1293 Move X1, [X24]
	1294 Add X8, X31, 144
	1295 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	1296 Move V0, [X31+144]
	1297 Move V1, [X31+160]
	1298 Move X8, [X31+176]
	1299 Move [X31+304], V0
	1300 Move [X31+312], V1
	1301 Move [X31+336], X8
	1302 Move X1, [X26]
	1303 Add X0, X31, 304
	1304 Call Enumerator<Int32, Object>.MoveNext, X0
	1305 Move TEMP, X0
	1306 And TEMP, TEMP, 1
	1307 Compare TEMP, 1
	1308 JumpIfNotEqual {1323}
	1309 Move X25, [X31+320]
	1310 Move X2, [X31+328]
	1311 Move X3, [X27]
	1312 Move [X31+144], X31
	1313 Move [X31+152], X31
	1314 Add X0, X31, 144
	1315 Move X1, X19
	1316 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	1317 Move X2, [X31+144]
	1318 Move X3, [X31+152]
	1319 Move X4, [X28]
	1320 Move X0, [X31+64]
	1321 Move W1, W25
	1322 Call 0x217DF44, X0, X1, X2
	1323 Move X25, X31
	1324 Move W19, 24
	1325 Move X1, [X20]
	1326 Add X0, X31, 304
	1327 Call Enumerator<Int32, Object>.Dispose, X0
	1328 Compare X25, 0
	1329 JumpIfNotEqual {2269}
	1330 NotImplemented "Instruction CMP not yet implemented."
	1331 Compare W19, 0
	1332 JumpIfEqual {1252}
	1333 Move X19, X1
	1334 NotImplemented "Instruction CMP not yet implemented."
	1335 Move [X31+16], X0
	1336 Move X0, [X31+16]
	1337 Call 0x3EB2AD0
	1338 Move X25, [X0]
	1339 Call 0x3EB2AE0
	1340 Move W19, W31
	1341 Move X8, 0x7F3000
	1342 Move X8, [X8+2768]
	1343 Move X0, [X8]
	1344 Move W8, [X0+224]
	1345 Compare W8, 0
	1346 JumpIfNotEqual {1348}
	1347 Call 0x1C17DFC
	1348 Move X8, 0x7F5000
	1349 Move X8, [X8+1880]
	1350 Move X0, [X8]
	1351 Move X1, X31
	1352 Call Log.Info, X0
	1353 Move X0, X31
	1354 Move X8, 0x7F5000
	1355 Move X8, [X8+1504]
	1356 Add X0, X31, 352
	1357 Move X1, [X8]
	1358 Call Enumerator<Object, Object>.Dispose, X0
	1359 Move X19, [X31+32]
	1360 Move X0, [X31+40]
	1361 Move X2, X23
	1362 Move X3, X31
	1363 Move X4, X31
	1364 Move X1, X19
	1365 Call FaceRebuildData.Apply, X0, X1, X2, X3
	1366 Move X8, 0x7F5000
	1367 Move X8, [X8+1432]
	1368 Move X0, [X31+72]
	1369 Move X1, [X8]
	1370 Call Dictionary`2<Object, Object>.get_Keys, X0
	1371 Move X1, X0
	1372 Move X0, X19
	1373 Call DeleteElements.DeleteFaces, X0, X1
	1374 Compare X0, 0
	1375 JumpIfEqual {2264}
	1376 Move X8, 0x7F4000
	1377 Move X20, [X0+24]
	1378 Move X8, [X8+1048]
	1379 Move W1, W31
	1380 Move X0, [X8]
	1381 Call 0x1C17D6C
	1382 Move X1, X0
	1383 Move X0, X19
	1384 Move X2, X31
	1385 Call ProBuilderMesh.set_sharedTextures, X0, X1
	1386 Move X0, [X19+88]
	1387 Move X1, X31
	1388 Call SharedVertex.GetSharedVerticesWithPositions, X0
	1389 Move X1, X0
	1390 Move X0, X19
	1391 Move X2, X31
	1392 Call ProBuilderMesh.set_sharedVertices, X0, X1
	1393 Move X8, [X19+48]
	1394 Move X9, [X31+48]
	1395 Move X0, X19
	1396 Move X1, X31
	1397 Move [X9+24], X8
	1398 Call ProBuilderMesh.get_sharedVertexLookup, X0
	1399 Move X8, 0x7F5000
	1400 Move X8, [X8+560]
	1401 Move X25, X0
	1402 Move X8, [X8]
	1403 Move X0, X8
	1404 Call 0x1C17F10
	1405 Move X8, 0x7F5000
	1406 Move X8, [X8+544]
	1407 Move [X31+72], X0
	1408 Move X1, [X8]
	1409 Call List`1<Object>..ctor, X0
	1410 Move X0, [X31+64]
	1411 Compare X0, 0
	1412 JumpIfEqual {2264}
	1413 Move X8, 0x7F5000
	1414 Move X8, [X8+1392]
	1415 Move X1, [X8]
	1416 Add X8, X31, 144
	1417 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	1418 Move V0, [X31+144]
	1419 Move V1, [X31+160]
	1420 Move X8, [X31+176]
	1421 Move X23, 0x7F5000
	1422 Move X26, 0x7F5000
	1423 Move X28, 0x7F5000
	1424 Move X27, 0x7C3000
	1425 Move X29, 0x7F3000
	1426 Move X23, [X23+1568]
	1427 Move X26, [X26+1472]
	1428 Move X28, [X28+1544]
	1429 Move X27, [X27+3896]
	1430 Move X29, [X29+3200]
	1431 Move [X31+256], V0
	1432 Move [X31+264], V1
	1433 Move [X31+288], X8
	1434 Move X1, [X23]
	1435 Add X0, X31, 256
	1436 Call Enumerator<Int32, Object>.MoveNext, X0
	1437 Move TEMP, X0
	1438 And TEMP, TEMP, 1
	1439 Compare TEMP, 1
	1440 JumpIfNotEqual {1596}
	1441 Move X8, 0x7F5000
	1442 Move X8, [X8+1872]
	1443 Move X24, [X31+280]
	1444 Move X8, [X8]
	1445 Move W9, [X8+224]
	1446 Compare W9, 0
	1447 JumpIfNotEqual {1453}
	1448 Move X0, X8
	1449 Call 0x1C17DFC
	1450 Move X8, 0x7F5000
	1451 Move X8, [X8+1872]
	1452 Move X8, [X8]
	1453 Move X9, [X8+184]
	1454 Move X19, [X9+16]
	1455 Compare X19, 0
	1456 JumpIfNotEqual {1483}
	1457 Move W9, [X8+224]
	1458 Compare W9, 0
	1459 JumpIfNotEqual {1465}
	1460 Move X0, X8
	1461 Call 0x1C17DFC
	1462 Move X8, 0x7F5000
	1463 Move X8, [X8+1872]
	1464 Move X8, [X8]
	1465 Move X8, [X8+184]
	1466 Move X22, [X8]
	1467 Move X8, 0x7F5000
	1468 Move X8, [X8+1632]
	1469 Move X0, [X8]
	1470 Call 0x1C17F10
	1471 Move X8, 0x7F5000
	1472 Move X8, [X8+1816]
	1473 Move X19, X0
	1474 Move X2, [X8]
	1475 Move X1, X22
	1476 Move X3, X31
	1477 Call Func`2<SimpleTuple`2<Object, Object>, Int32>..ctor, X0, X1, X2
	1478 Move X8, 0x7F5000
	1479 Move X8, [X8+1872]
	1480 Move X8, [X8]
	1481 Move X8, [X8+184]
	1482 Move [X8+16], X19
	1483 Move X2, [X26]
	1484 Move X0, X24
	1485 Move X1, X19
	1486 Call 0x21D5930, X0, X1
	1487 NotImplemented "Instruction CMP not yet implemented."
	1488 Move X8, 0x79A000
	1489 Move X8, [X8+3592]
	1490 Move X0, [X8]
	1491 Call 0x1C17F10
	1492 Move X8, 0x7A0000
	1493 Move X8, [X8+1672]
	1494 Move X19, X0
	1495 Move X1, [X8]
	1496 Call HashSet`1<Int32>..ctor, X0
	1497 Compare X24, 0
	1498 JumpIfEqual {2271}
	1499 Move X8, 0x7F5000
	1500 Move X8, [X8+1736]
	1501 Move X1, [X8]
	1502 Add X8, X31, 144
	1503 Move X0, X24
	1504 Call List`1<SimpleTuple`2<Object, Object>>.GetEnumerator, X0
	1505 Move V0, [X31+144]
	1506 Move V1, [X31+160]
	1507 Move [X31+224], V0
	1508 Move [X31+232], V1
	1509 Move X1, [X28]
	1510 Add X0, X31, 224
	1511 Call Enumerator<SimpleTuple`2<Object, Object>>.MoveNext, X0
	1512 Move TEMP, X0
	1513 And TEMP, TEMP, 1
	1514 Compare TEMP, 1
	1515 JumpIfNotEqual {1546}
	1516 Move X8, [X31+240]
	1517 Compare X8, 0
	1518 JumpIfEqual {1586}
	1519 Move X24, [X31+248]
	1520 Compare X24, 0
	1521 JumpIfEqual {1587}
	1522 Move W9, [X24+24]
	1523 NotImplemented "Instruction CMP not yet implemented."
	1524 Move W8, [X8+48]
	1525 Move W26, W31
	1526 Subtract W22, W8, W20
	1527 Move X2, [X27]
	1528 Move X0, X24
	1529 Move W1, W26
	1530 Call List`1<Int32>.get_Item, X0, X1
	1531 Compare X25, 0
	1532 JumpIfEqual {1584}
	1533 Move X2, [X29]
	1534 Add W1, W22, W0
	1535 Move X0, X25
	1536 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1537 Move W1, W0
	1538 Compare X19, 0
	1539 JumpIfEqual {1585}
	1540 Move X2, [X21]
	1541 Move X0, X19
	1542 Call HashSet`1<Int32>.Add, X0, X1
	1543 Move W8, [X24+24]
	1544 Add W26, W26, 1
	1545 NotImplemented "Instruction CMP not yet implemented."
	1546 Move X26, X31
	1547 Move W22, 36
	1548 Move X8, 0x7F5000
	1549 Move X8, [X8+1496]
	1550 Move X1, [X8]
	1551 Add X0, X31, 224
	1552 Call Enumerator<SimpleTuple`2<Object, Object>>.Dispose, X0
	1553 Compare X26, 0
	1554 JumpIfNotEqual {2272}
	1555 NotImplemented "Instruction CMP not yet implemented."
	1556 Compare W22, 0
	1557 JumpIfNotEqual {2135}
	1558 Move X0, [X31+72]
	1559 Compare X0, 0
	1560 JumpIfEqual {2275}
	1561 Move W10, [X0+28]
	1562 Move X9, 0x7F5000
	1563 Move X8, [X0+16]
	1564 Move X9, [X9+520]
	1565 Add W10, W10, 1
	1566 Move X26, 0x7F5000
	1567 Move X9, [X9]
	1568 Move [X0+28], W10
	1569 Move X26, [X26+1472]
	1570 Compare X8, 0
	1571 JumpIfEqual {2274}
	1572 NotImplemented "Instruction LDRSW not yet implemented."
	1573 Move W11, [X8+24]
	1574 NotImplemented "Instruction CMP not yet implemented."
	1575 Add W9, W10, 1
	1576 Add X8, X8, X10
	1577 Move [X0+24], W9
	1578 Move [X8+32], X19
	1579 Move X8, [X9+32]
	1580 Move X8, [X8+192]
	1581 Move X2, [X8+112]
	1582 Move X1, X19
	1583 Call List`1<Object>.AddWithResize, X0, X1
	1584 Call 0x1C17F20
	1585 Call 0x1C17F20
	1586 Call 0x1C17F20
	1587 Call 0x1C17F20
	1588 Move X24, X1
	1589 Move X22, X0
	1590 NotImplemented "Instruction CMP not yet implemented."
	1591 Move X0, X22
	1592 Call 0x3EB2AD0
	1593 Move X26, [X0]
	1594 Call 0x3EB2AE0
	1595 Move W22, W31
	1596 Move X8, 0x7F5000
	1597 Move X8, [X8+1488]
	1598 Add X0, X31, 256
	1599 Move X1, [X8]
	1600 Call Enumerator<Int32, Object>.Dispose, X0
	1601 Move X21, 0x7F5000
	1602 Move X24, 0x7F5000
	1603 Move X20, [X31+32]
	1604 Move X21, [X21+784]
	1605 Move X24, [X24+1872]
	1606 Move X0, [X24]
	1607 Move W8, [X0+224]
	1608 Compare W8, 0
	1609 JumpIfNotEqual {1612}
	1610 Call 0x1C17DFC
	1611 Move X0, [X24]
	1612 Move X8, [X0+184]
	1613 Move X19, [X8+24]
	1614 Compare X19, 0
	1615 JumpIfNotEqual {1637}
	1616 Move W8, [X0+224]
	1617 Compare W8, 0
	1618 JumpIfNotEqual {1621}
	1619 Call 0x1C17DFC
	1620 Move X0, [X24]
	1621 Move X9, 0x7F5000
	1622 Move X8, [X0+184]
	1623 Move X9, [X9+1288]
	1624 Move X22, [X8]
	1625 Move X0, [X9]
	1626 Call 0x1C17F10
	1627 Move X8, 0x7F5000
	1628 Move X8, [X8+1792]
	1629 Move X1, X22
	1630 Move X3, X31
	1631 Move X19, X0
	1632 Move X2, [X8]
	1633 Call Func`2<Object, Object>..ctor, X0, X1, X2
	1634 Move X8, [X24]
	1635 Move X8, [X8+184]
	1636 Move [X8+24], X19
	1637 Move X8, 0x7F5000
	1638 Move X8, [X8+1256]
	1639 Move X0, [X31+40]
	1640 Move X1, X19
	1641 Move X2, [X8]
	1642 Call Enumerable.Select, X0, X1
	1643 Move X8, 0x7F4000
	1644 Move X8, [X8+2824]
	1645 Move X19, X0
	1646 Move X8, [X8]
	1647 Move W9, [X8+224]
	1648 Compare W9, 0
	1649 JumpIfNotEqual {1652}
	1650 Move X0, X8
	1651 Call 0x1C17DFC
	1652 Move X0, X20
	1653 Move X1, X19
	1654 Move W2, W31
	1655 Move X3, X31
	1656 Call WingedEdge.GetWingedEdges, X0, X1, X2
	1657 Move X26, X0
	1658 Move X0, X20
	1659 Move X1, X31
	1660 Move X2, X31
	1661 Call ProBuilderMesh.GetVertices, X0, X1
	1662 Move X8, 0x7F3000
	1663 Move X8, [X8+3560]
	1664 Move X19, X0
	1665 Move X8, [X8]
	1666 Move X0, X8
	1667 Call 0x1C17F10
	1668 Move X8, 0x7F3000
	1669 Move X8, [X8+3552]
	1670 Move X1, X19
	1671 Move X25, X0
	1672 Move X2, [X8]
	1673 Call List`1<Object>..ctor, X0, X1
	1674 Move X8, 0x7F5000
	1675 Move X8, [X8+792]
	1676 Move X0, [X8]
	1677 Call 0x1C17F10
	1678 Move X1, [X21]
	1679 Move X24, X0
	1680 Call List`1<Object>..ctor, X0
	1681 Move X0, [X31+72]
	1682 Compare X0, 0
	1683 JumpIfEqual {2264}
	1684 Move X8, 0x7F5000
	1685 Move X8, [X8+1728]
	1686 Move X1, [X8]
	1687 Add X8, X31, 144
	1688 Call List`1<Object>.GetEnumerator, X0
	1689 Move V0, [X31+9]
	1690 Move X8, [X31+160]
	1691 Move X20, 0x7F5000
	1692 Move X21, 0x79B000
	1693 Move X27, 0x7F5000
	1694 Move X28, 0x7F4000
	1695 Move X29, 0x7F4000
	1696 Move X20, [X20+1552]
	1697 Move X21, [X21+2512]
	1698 Move X27, [X27+1824]
	1699 Move X28, [X28+2056]
	1700 Move X29, [X29+680]
	1701 Move [X31+12], V0
	1702 Move [X31+208], X8
	1703 Move X1, [X20]
	1704 Add X0, X31, 192
	1705 Call Enumerator<Object>.MoveNext, X0
	1706 Move TEMP, X0
	1707 And TEMP, TEMP, 1
	1708 Compare TEMP, 1
	1709 JumpIfNotEqual {1836}
	1710 Move X19, [X31+208]
	1711 Compare X19, 0
	1712 JumpIfEqual {2265}
	1713 Move W8, [X19+32]
	1714 NotImplemented "Instruction CMP not yet implemented."
	1715 Move X8, [X31+48]
	1716 Move X23, [X8+32]
	1717 Compare X23, 0
	1718 JumpIfNotEqual {1728}
	1719 Move X0, [X21]
	1720 Call 0x1C17F10
	1721 Move X22, [X31+48]
	1722 Move X2, [X27]
	1723 Move X23, X0
	1724 Move X1, X22
	1725 Move X3, X31
	1726 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	1727 Move [X22+32], X23
	1728 Move X2, [X28]
	1729 Move X0, X19
	1730 Move X1, X23
	1731 Call Enumerable.Select, X0, X1
	1732 Move X1, [X29]
	1733 Call Enumerable.ToList, X0
	1734 Move X1, X0
	1735 Move X0, [X31+32]
	1736 Move X2, X31
	1737 Call ProBuilderMesh.GetVertices, X0, X1
	1738 Move X8, 0x7F3000
	1739 Move X8, [X8+3560]
	1740 Move X22, X0
	1741 Move X0, [X8]
	1742 Call 0x1C17F10
	1743 Move X8, 0x7F3000
	1744 Move X8, [X8+3552]
	1745 Move X19, X0
	1746 Move X2, [X8]
	1747 Move X1, X22
	1748 Call List`1<Object>..ctor, X0, X1
	1749 Move W1, 1
	1750 Move X0, X19
	1751 Call AppendElements.FaceWithVertices, X0, X1
	1752 Move X1, X0
	1753 Compare X24, 0
	1754 JumpIfEqual {2294}
	1755 Move X9, 0x7F5000
	1756 Move W10, [X24+28]
	1757 Move X8, [X24+16]
	1758 Move X9, [X9+776]
	1759 Add W10, W10, 1
	1760 Move X9, [X9]
	1761 Move [X24+28], W10
	1762 Compare X8, 0
	1763 JumpIfEqual {2295}
	1764 NotImplemented "Instruction LDRSW not yet implemented."
	1765 Move W11, [X8+24]
	1766 NotImplemented "Instruction CMP not yet implemented."
	1767 Add W9, W10, 1
	1768 Add X8, X8, X10
	1769 Move [X24+24], W9
	1770 Move [X8+32], X1
	1771 Move X8, 0x7F4000
	1772 Move X8, [X8+2824]
	1773 Move X0, [X8]
	1774 Move W8, [X0+224]
	1775 Compare W8, 0
	1776 JumpIfNotEqual {1778}
	1777 Call 0x1C17DFC
	1778 Move X0, X26
	1779 Move X1, X19
	1780 Move X2, X31
	1781 Call WingedEdge.SortCommonIndexesByAdjacency, X0, X1
	1782 Move X19, X0
	1783 Compare X0, 0
	1784 JumpIfEqual {1703}
	1785 Move X8, [X31+48]
	1786 Move X23, [X8+40]
	1787 Compare X23, 0
	1788 JumpIfNotEqual {1800}
	1789 Move X0, [X21]
	1790 Call 0x1C17F10
	1791 Move X22, [X31+48]
	1792 Move X8, 0x7F5000
	1793 Move X8, [X8+1832]
	1794 Move X23, X0
	1795 Move X2, [X8]
	1796 Move X1, X22
	1797 Move X3, X31
	1798 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	1799 Move [X22+40], X23
	1800 Move X2, [X28]
	1801 Move X0, X19
	1802 Move X1, X23
	1803 Call Enumerable.Select, X0, X1
	1804 Move X1, [X29]
	1805 Call Enumerable.ToList, X0
	1806 Move X1, X0
	1807 Move X0, [X31+32]
	1808 Move X2, X31
	1809 Call ProBuilderMesh.GetVertices, X0, X1
	1810 Move X8, 0x7F3000
	1811 Move X8, [X8+3560]
	1812 Move X19, X0
	1813 Move X0, [X8]
	1814 Call 0x1C17F10
	1815 Move X8, 0x7F3000
	1816 Move X8, [X8+3552]
	1817 Move X22, X0
	1818 Move X2, [X8]
	1819 Move X1, X19
	1820 Call List`1<Object>..ctor, X0, X1
	1821 Move X0, X22
	1822 Call AppendElements.TentCapWithVertices, X0
	1823 Move X1, X0
	1824 Compare X24, 0
	1825 JumpIfEqual {2296}
	1826 Move X8, 0x7F5000
	1827 Move X8, [X8+1720]
	1828 Move X2, [X8]
	1829 Move X0, X24
	1830 Call List`1<Object>.AddRange, X0, X1
	1831 Move X8, [X9+32]
	1832 Move X8, [X8+192]
	1833 Move X2, [X8+112]
	1834 Move X0, X24
	1835 Call List`1<Object>.AddWithResize, X0, X1
	1836 Move X8, 0x7F5000
	1837 Move X8, [X8+1512]
	1838 Add X0, X31, 192
	1839 Move X1, [X8]
	1840 Call Enumerator<Object>.Dispose, X0
	1841 Move X20, [X31+32]
	1842 Move X0, X24
	1843 Move X2, X25
	1844 Move X3, X31
	1845 Move X1, X20
	1846 Move X4, X31
	1847 Call FaceRebuildData.Apply, X0, X1, X2, X3
	1848 Move X0, [X20+88]
	1849 Move X1, X31
	1850 Call SharedVertex.GetSharedVerticesWithPositions, X0
	1851 Move X1, X0
	1852 Move X0, X20
	1853 Move X2, X31
	1854 Call ProBuilderMesh.set_sharedVertices, X0, X1
	1855 Move X23, 0x7F5000
	1856 Move X23, [X23+1872]
	1857 Move X0, [X23]
	1858 Move W8, [X0+224]
	1859 Compare W8, 0
	1860 JumpIfNotEqual {1863}
	1861 Call 0x1C17DFC
	1862 Move X0, [X23]
	1863 Move X8, [X0+184]
	1864 Move X19, [X8+32]
	1865 Compare X19, 0
	1866 JumpIfNotEqual {1888}
	1867 Move W8, [X0+224]
	1868 Compare W8, 0
	1869 JumpIfNotEqual {1872}
	1870 Call 0x1C17DFC
	1871 Move X0, [X23]
	1872 Move X9, 0x7F5000
	1873 Move X8, [X0+184]
	1874 Move X9, [X9+1288]
	1875 Move X21, [X8]
	1876 Move X0, [X9]
	1877 Call 0x1C17F10
	1878 Move X8, 0x7F5000
	1879 Move X8, [X8+1800]
	1880 Move X1, X21
	1881 Move X3, X31
	1882 Move X19, X0
	1883 Move X2, [X8]
	1884 Call Func`2<Object, Object>..ctor, X0, X1, X2
	1885 Move X8, [X23]
	1886 Move X8, [X8+184]
	1887 Move [X8+32], X19
	1888 Move X8, 0x7F5000
	1889 Move X8, [X8+1256]
	1890 Move X0, X24
	1891 Move X1, X19
	1892 Move X2, [X8]
	1893 Call Enumerable.Select, X0, X1
	1894 Move X8, 0x7F4000
	1895 Move X8, [X8+2200]
	1896 Move X19, X0
	1897 Move X8, [X8]
	1898 Move X0, X8
	1899 Call 0x1C17F10
	1900 Move X8, 0x7F5000
	1901 Move X8, [X8+1656]
	1902 Move X1, X19
	1903 Move X21, X0
	1904 Move X2, [X8]
	1905 Call HashSet`1<Object>..ctor, X0, X1
	1906 Compare X21, 0
	1907 JumpIfEqual {2264}
	1908 Move X8, 0x7F5000
	1909 Move X8, [X8+1648]
	1910 Move X1, [X31+24]
	1911 Move X0, X21
	1912 Move X2, [X8]
	1913 Call HashSet`1<Object>.UnionWith, X0, X1
	1914 Move X0, [X31+40]
	1915 Compare X0, 0
	1916 JumpIfEqual {2264}
	1917 Move X8, 0x7F5000
	1918 Move X8, [X8+1720]
	1919 Move X1, X24
	1920 Move X2, [X8]
	1921 Call List`1<Object>.AddRange, X0, X1
	1922 Move X0, [X23]
	1923 Move W8, [X0+224]
	1924 Compare W8, 0
	1925 JumpIfNotEqual {1928}
	1926 Call 0x1C17DFC
	1927 Move X0, [X23]
	1928 Move X8, [X0+184]
	1929 Move X19, [X8+40]
	1930 Compare X19, 0
	1931 JumpIfNotEqual {1953}
	1932 Move W8, [X0+224]
	1933 Compare W8, 0
	1934 JumpIfNotEqual {1937}
	1935 Call 0x1C17DFC
	1936 Move X0, [X23]
	1937 Move X9, 0x7F5000
	1938 Move X8, [X0+184]
	1939 Move X9, [X9+1288]
	1940 Move X22, [X8]
	1941 Move X0, [X9]
	1942 Call 0x1C17F10
	1943 Move X8, 0x7F5000
	1944 Move X8, [X8+1808]
	1945 Move X1, X22
	1946 Move X3, X31
	1947 Move X19, X0
	1948 Move X2, [X8]
	1949 Call Func`2<Object, Object>..ctor, X0, X1, X2
	1950 Move X8, [X23]
	1951 Move X8, [X8+184]
	1952 Move [X8+40], X19
	1953 Move X8, 0x7F5000
	1954 Move X8, [X8+1256]
	1955 Move X0, [X31+40]
	1956 Move X1, X19
	1957 Move X2, [X8]
	1958 Call Enumerable.Select, X0, X1
	1959 Move X8, 0x7F4000
	1960 Move X8, [X8+2824]
	1961 Move X19, X0
	1962 Move X8, [X8]
	1963 Move W9, [X8+224]
	1964 Compare W9, 0
	1965 JumpIfNotEqual {1968}
	1966 Move X0, X8
	1967 Call 0x1C17DFC
	1968 Move X0, X20
	1969 Move X1, X19
	1970 Move W2, W31
	1971 Move X3, X31
	1972 Call WingedEdge.GetWingedEdges, X0, X1, X2
	1973 Compare X0, 0
	1974 JumpIfEqual {2264}
	1975 Move W8, [X0+24]
	1976 Move X20, X0
	1977 NotImplemented "Instruction CMP not yet implemented."
	1978 Move X22, 0x7F4000
	1979 Move X25, 0x7F3000
	1980 Move X26, 0x7F5000
	1981 Move X27, 0x7F4000
	1982 Move X22, [X22+2816]
	1983 Move X25, [X25+3624]
	1984 Move X26, [X26+1640]
	1985 Move X27, [X27+3536]
	1986 Move W23, W31
	1987 Move W8, [X21+32]
	1988 NotImplemented "Instruction CMP not yet implemented."
	1989 Move X2, [X22]
	1990 Move X0, X20
	1991 Move W1, W23
	1992 Call List`1<Object>.get_Item, X0, X1
	1993 Compare X0, 0
	1994 JumpIfEqual {2264}
	1995 Move X1, [X0+32]
	1996 Move X2, [X25]
	1997 Move X19, X0
	1998 Move X0, X21
	1999 Call HashSet`1<Object>.Contains, X0, X1
	2000 Move TEMP, X0
	2001 And TEMP, TEMP, 1
	2002 Compare TEMP, 1
	2003 JumpIfNotEqual {2103}
	2004 Move X1, [X19+32]
	2005 Move X2, [X26]
	2006 Move X0, X21
	2007 Call HashSet`1<Object>.Remove, X0, X1
	2008 Move X0, [X27]
	2009 Call 0x1C17F10
	2010 Move X1, X19
	2011 Move X2, X31
	2012 Move X24, X0
	2013 Call WingedEdgeEnumerator..ctor, X0, X1
	2014 Compare X24, 0
	2015 JumpIfEqual {2107}
	2016 Move X0, X24
	2017 Move X1, X31
	2018 Call WingedEdgeEnumerator.MoveNext, X0
	2019 Move TEMP, X0
	2020 And TEMP, TEMP, 1
	2021 Compare TEMP, 1
	2022 JumpIfNotEqual {2071}
	2023 Move X0, X24
	2024 Move X1, X31
	2025 Call WingedEdgeEnumerator.get_Current, X0
	2026 Move X19, X0
	2027 Compare X0, 0
	2028 JumpIfEqual {2106}
	2029 Move X8, [X19+56]
	2030 Compare X8, 0
	2031 JumpIfEqual {2016}
	2032 Move X1, [X8+32]
	2033 Move X2, [X25]
	2034 Move X0, X21
	2035 Call HashSet`1<Object>.Contains, X0, X1
	2036 Move TEMP, X0
	2037 And TEMP, TEMP, 1
	2038 Compare TEMP, 1
	2039 JumpIfEqual {2016}
	2040 Move X8, [X19+56]
	2041 Compare X8, 0
	2042 JumpIfEqual {2108}
	2043 Move X8, [X8+32]
	2044 Compare X8, 0
	2045 JumpIfEqual {2109}
	2046 Move X28, [X19+32]
	2047 Compare X28, 0
	2048 JumpIfEqual {2110}
	2049 Move W9, [X8+72]
	2050 NotImplemented "Instruction MOVI not yet implemented."
	2051 Move [X28+72], W9
	2052 NotImplemented "Instruction LDUR not yet implemented."
	2053 NotImplemented "Instruction LDUR not yet implemented."
	2054 Move [X31+112], V2
	2055 Move [X31+120], V2
	2056 Move [X31+144], V1
	2057 Move [X31+152], V0
	2058 Move [X31+80], V1
	2059 Move [X31+88], V0
	2060 Add X0, X31, 112
	2061 Add X1, X31, 80
	2062 Move X2, X31
	2063 Call AutoUnwrapSettings..ctor, X0, X1
	2064 Move V1, [X31+112]
	2065 Move V0, [X31+128]
	2066 Move [X28+44], V0
	2067 Move [X28+28], V1
	2068 Move X0, [X19+56]
	2069 Move X1, X31
	2070 Call SurfaceTopology.ConformOppositeNormal, X0
	2071 Move X19, X31
	2072 Move W28, 49
	2073 Compare X24, 0
	2074 JumpIfEqual {2098}
	2075 Move X8, [X24]
	2076 Move X10, 0x799000
	2077 NotImplemented "Instruction LDRH not yet implemented."
	2078 Move X10, [X10+3584]
	2079 Move X1, [X10]
	2080 Compare X9, 0
	2081 JumpIfEqual {2088}
	2082 Move X10, [X8+176]
	2083 Add X10, X10, 8
	2084 NotImplemented "Instruction LDUR not yet implemented."
	2085 NotImplemented "Instruction CMP not yet implemented."
	2086 Subtract X9, X9, 1
	2087 Add X10, X10, 16
	2088 Move X0, X24
	2089 Move W2, W31
	2090 Call 0x1C5D788
	2091 NotImplemented "Instruction LDRSW not yet implemented."
	2092 Add X8, X8, X9
	2093 Add X0, X8, 312
	2094 Move X8, [X0]
	2095 Move X1, [X0+8]
	2096 Move X0, X24
	2097 NotImplemented "Instruction BLR not yet implemented."
	2098 Compare X19, 0
	2099 JumpIfNotEqual {2453}
	2100 NotImplemented "Instruction CMP not yet implemented."
	2101 Compare W28, 0
	2102 JumpIfNotEqual {2140}
	2103 Move W8, [X20+24]
	2104 Add W23, W23, 1
	2105 NotImplemented "Instruction CMP not yet implemented."
	2106 Call 0x1C17F20
	2107 Call 0x1C17F20
	2108 Call 0x1C17F20
	2109 Call 0x1C17F20
	2110 Call 0x1C17F20
	2111 NotImplemented "Instruction CMP not yet implemented."
	2112 Move [X31+16], X0
	2113 Move X0, [X31+16]
	2114 Call 0x3EB2AD0
	2115 Move X19, [X0]
	2116 Call 0x3EB2AE0
	2117 Move W28, W31
	2118 Compare X24, 0
	2119 JumpIfNotEqual {2075}
	2120 Move X0, [X31+32]
	2121 Move W1, W31
	2122 Move X2, X31
	2123 Call ProBuilderMesh.ToMesh, X0, X1
	2124 Move X0, [X31+24]
	2125 Move X8, 0x7A0000
	2126 Move X8, [X8+2096]
	2127 Add X0, X31, 400
	2128 Move X1, [X8]
	2129 Call Enumerator<Int32>.Dispose, X0
	2130 Move X8, 0x7F5000
	2131 Move X8, [X8+1504]
	2132 Add X0, X31, 352
	2133 Move X1, [X8]
	2134 Call Enumerator<Object, Object>.Dispose, X0
	2135 Move X8, 0x7F5000
	2136 Move X8, [X8+1488]
	2137 Add X0, X31, 256
	2138 Move X1, [X8]
	2139 Call Enumerator<Int32, Object>.Dispose, X0
	2140 Add X31, X31, 496
	2141 Move X20, [X31+144]
	2142 Move X19, [X31+152]
	2143 Move X22, [X31+128]
	2144 Move X21, [X31+136]
	2145 Move X24, [X31+112]
	2146 Move X23, [X31+120]
	2147 Move X26, [X31+96]
	2148 Move X25, [X31+104]
	2149 Move X28, [X31+80]
	2150 Move X27, [X31+88]
	2151 Move X29, [X31+64]
	2152 Move X30, [X31+72]
	2153 Move D9, [X31+48]
	2154 Move D8, [X31+56]
	2155 Move D11, [X31+32]
	2156 Move D10, [X31+40]
	2157 Move D13, [X31+16]
	2158 Move D12, [X31+24]
	2159 Move D15, [X31+160]
	2160 Move D14, [X31+168]
	2161 Return X0
	2162 Move X26, X31
	2163 Move X8, 0x7F5000
	2164 Move X8, [X8+1496]
	2165 Move X1, [X8]
	2166 Add X0, X31, 224
	2167 Call Enumerator<SimpleTuple`2<Object, Object>>.Dispose, X0
	2168 Move X21, 0x7F5000
	2169 Move X20, [X31+32]
	2170 Move X21, [X21+784]
	2171 Compare X26, 0
	2172 JumpIfNotEqual {2303}
	2173 NotImplemented "Instruction CMP not yet implemented."
	2174 Move X24, 0x7F5000
	2175 Move X24, [X24+1872]
	2176 Move X0, X22
	2177 Call 0x3EB2AD0
	2178 Move X19, [X0]
	2179 Call 0x3EB2AE0
	2180 Move X8, 0x7F5000
	2181 Move X8, [X8+1488]
	2182 Add X0, X31, 256
	2183 Move X1, [X8]
	2184 Call Enumerator<Int32, Object>.Dispose, X0
	2185 Compare X19, 0
	2186 JumpIfEqual {1606}
	2187 Move X19, X1
	2188 Move X26, X31
	2189 Move X8, 0x7F4000
	2190 Move X8, [X8+3480]
	2191 Move X1, [X8]
	2192 Add X0, X31, 432
	2193 Call Enumerator<Object>.Dispose, X0
	2194 Move X1, X19
	2195 Compare X26, 0
	2196 JumpIfEqual {2441}
	2197 Move X0, X26
	2198 Call 0x1C17F18
	2199 Move X20, X1
	2200 Move X19, X31
	2201 Move X8, 0x7F4000
	2202 Move X8, [X8+3480]
	2203 Move X1, [X8]
	2204 Add X0, X31, 432
	2205 Call Enumerator<Object>.Dispose, X0
	2206 Move X1, X20
	2207 Compare X19, 0
	2208 JumpIfEqual {2441}
	2209 Move X0, X19
	2210 Call 0x1C17F18
	2211 Move [X31+16], X0
	2212 Move X27, X31
	2213 Compare X26, 0
	2214 JumpIfEqual {2248}
	2215 Move X8, [X26]
	2216 Move X10, 0x799000
	2217 NotImplemented "Instruction LDRH not yet implemented."
	2218 Move X10, [X10+3584]
	2219 Move X1, [X10]
	2220 Compare X9, 0
	2221 JumpIfEqual {2228}
	2222 Move X10, [X8+176]
	2223 Add X10, X10, 8
	2224 NotImplemented "Instruction LDUR not yet implemented."
	2225 NotImplemented "Instruction CMP not yet implemented."
	2226 Subtract X9, X9, 1
	2227 Add X10, X10, 16
	2228 Move X0, X26
	2229 Move W2, W31
	2230 Call 0x1C5D788
	2231 Call 0x1C17F20
	2232 Call 0x1C17F20
	2233 Call 0x1C17F20
	2234 Call 0x1C17F20
	2235 Move X0, X26
	2236 Call 0x1C17F18
	2237 Move X0, X19
	2238 Call 0x1C17F18
	2239 Call 0x1C17F20
	2240 Call 0x1C17F20
	2241 NotImplemented "Instruction LDRSW not yet implemented."
	2242 Add X8, X8, X9
	2243 Add X0, X8, 312
	2244 Move X8, [X0]
	2245 Move X1, [X0+8]
	2246 Move X0, X26
	2247 NotImplemented "Instruction BLR not yet implemented."
	2248 Compare X27, 0
	2249 JumpIfEqual {2414}
	2250 Move X0, X27
	2251 Call 0x1C17F18
	2252 Move X25, X31
	2253 Move X1, [X20]
	2254 Add X0, X31, 304
	2255 Call Enumerator<Int32, Object>.Dispose, X0
	2256 Compare X25, 0
	2257 JumpIfEqual {2389}
	2258 Move X0, X25
	2259 Call 0x1C17F18
	2260 Call 0x1C17F20
	2261 Call 0x1C17F20
	2262 Move X0, X27
	2263 Call 0x1C17F18
	2264 Call 0x1C17F20
	2265 Call 0x1C17F20
	2266 Call 0x1C17F20
	2267 Call 0x1C17F20
	2268 Call 0x1C17F20
	2269 Move X0, X25
	2270 Call 0x1C17F18
	2271 Call 0x1C17F20
	2272 Move X0, X26
	2273 Call 0x1C17F18
	2274 Call 0x1C17F20
	2275 Call 0x1C17F20
	2276 Move X0, 0x79E000
	2277 Move X0, [X0+1320]
	2278 Call 0x1C17D08
	2279 Call 0x1C17F10
	2280 Move X19, X0
	2281 Move X0, 0x7F3000
	2282 Move X0, [X0+3728]
	2283 Call 0x1C17D08
	2284 Move X1, X0
	2285 Move X0, X19
	2286 Move X2, X31
	2287 Call ArgumentNullException..ctor, X0, X1
	2288 Move X0, 0x7F5000
	2289 Move X0, [X0+1896]
	2290 Call 0x1C17D08
	2291 Move X1, X0
	2292 Move X0, X19
	2293 Call 0x1C17DEC
	2294 Call 0x1C17F20
	2295 Call 0x1C17F20
	2296 Call 0x1C17F20
	2297 Call 0x1C17F20
	2298 Call 0x1C17F20
	2299 Call 0x1C17F20
	2300 Call 0x1C17F20
	2301 Move [X31+16], X22
	2302 Move X19, X31
	2303 Move X0, X26
	2304 Call 0x1C17F18
	2305 Move X19, X31
	2306 Move [X31+16], X0
	2307 Compare X24, 0
	2308 JumpIfEqual {2332}
	2309 Move X8, [X24]
	2310 Move X10, 0x798000
	2311 NotImplemented "Instruction LDRH not yet implemented."
	2312 Move X10, [X10+3584]
	2313 Move X1, [X10]
	2314 Compare X9, 0
	2315 JumpIfEqual {2322}
	2316 Move X10, [X8+176]
	2317 Add X10, X10, 8
	2318 NotImplemented "Instruction LDUR not yet implemented."
	2319 NotImplemented "Instruction CMP not yet implemented."
	2320 Subtract X9, X9, 1
	2321 Add X10, X10, 16
	2322 Move X0, X24
	2323 Move W2, W31
	2324 Call 0x1C5D788
	2325 NotImplemented "Instruction LDRSW not yet implemented."
	2326 Add X8, X8, X9
	2327 Add X0, X8, 312
	2328 Move X8, [X0]
	2329 Move X1, [X0+8]
	2330 Move X0, X24
	2331 NotImplemented "Instruction BLR not yet implemented."
	2332 Compare X19, 0
	2333 JumpIfEqual {2465}
	2334 Move X0, X19
	2335 Call 0x1C17F18
	2336 Move [X31+16], X0
	2337 Move X8, 0x7F4000
	2338 Move X8, [X8+1488]
	2339 Move X1, [X8]
	2340 Add X0, X31, 256
	2341 Call Enumerator<Int32, Object>.Dispose, X0
	2342 Compare X19, 0
	2343 JumpIfEqual {2465}
	2344 Move X0, X19
	2345 Call 0x1C17F18
	2346 Move X19, X1
	2347 Move [X31+16], X0
	2348 Move X19, X1
	2349 Move [X31+16], X0
	2350 Compare X26, 0
	2351 JumpIfNotEqual {2215}
	2352 Move X20, X1
	2353 Move X22, X0
	2354 Move X19, X1
	2355 Move X22, X0
	2356 Move X24, X1
	2357 Move X22, X0
	2358 Move X21, 0x7F4000
	2359 Move X20, [X31+32]
	2360 Move X21, [X21+784]
	2361 Move X24, X1
	2362 Move X22, X0
	2363 NotImplemented "Instruction CMP not yet implemented."
	2364 Move [X31+16], X0
	2365 Move X0, [X31+16]
	2366 Call 0x3EB2AD0
	2367 Move X19, [X0]
	2368 Call 0x3EB2AE0
	2369 Move X8, 0x7F4000
	2370 Move X8, [X8+1512]
	2371 Add X0, X31, 192
	2372 Move X1, [X8]
	2373 Call Enumerator<Object>.Dispose, X0
	2374 Compare X19, 0
	2375 JumpIfEqual {1841}
	2376 Move X19, X31
	2377 Move [X31+16], X0
	2378 Move X8, 0x7F4000
	2379 Move X8, [X8+1512]
	2380 Move X1, [X8]
	2381 Add X0, X31, 192
	2382 Call Enumerator<Object>.Dispose, X0
	2383 Compare X19, 0
	2384 JumpIfEqual {2465}
	2385 Move X0, X19
	2386 Call 0x1C17F18
	2387 Move X19, X1
	2388 Move [X31+16], X0
	2389 NotImplemented "Instruction CMP not yet implemented."
	2390 Move X0, [X31+16]
	2391 Call 0x3EB2AD0
	2392 Move X19, [X0]
	2393 Call 0x3EB2AE0
	2394 Move X8, 0x7F4000
	2395 Move X8, [X8+1504]
	2396 Add X0, X31, 352
	2397 Move X1, [X8]
	2398 Call Enumerator<Object, Object>.Dispose, X0
	2399 Compare X19, 0
	2400 JumpIfEqual {1359}
	2401 Move X19, X31
	2402 Move [X31+16], X0
	2403 Move X8, 0x7F4000
	2404 Move X8, [X8+1504]
	2405 Move X1, [X8]
	2406 Add X0, X31, 352
	2407 Call Enumerator<Object, Object>.Dispose, X0
	2408 Compare X19, 0
	2409 JumpIfEqual {2465}
	2410 Move X0, X19
	2411 Call 0x1C17F18
	2412 Move X19, X1
	2413 Move [X31+16], X0
	2414 NotImplemented "Instruction CMP not yet implemented."
	2415 Move X0, [X31+16]
	2416 Call 0x3EB2AD0
	2417 Move X19, [X0]
	2418 Call 0x3EB2AE0
	2419 Move X8, 0x79F000
	2420 Move X8, [X8+2096]
	2421 Add X0, X31, 400
	2422 Move X1, [X8]
	2423 Call Enumerator<Int32>.Dispose, X0
	2424 Compare X19, 0
	2425 JumpIfEqual {1224}
	2426 Move X19, X31
	2427 Move [X31+16], X0
	2428 Move X8, 0x79F000
	2429 Move X8, [X8+2096]
	2430 Move X1, [X8]
	2431 Add X0, X31, 400
	2432 Call Enumerator<Int32>.Dispose, X0
	2433 Compare X19, 0
	2434 JumpIfEqual {2465}
	2435 Move X0, X19
	2436 Call 0x1C17F18
	2437 Move X22, X0
	2438 Move V8, V9
	2439 Move X22, X0
	2440 Move V8, V11
	2441 NotImplemented "Instruction CMP not yet implemented."
	2442 Move X0, X22
	2443 Call 0x3EB2AD0
	2444 Move X19, [X0]
	2445 Call 0x3EB2AE0
	2446 Move X8, 0x7F4000
	2447 Move X8, [X8+1528]
	2448 Add X0, X31, 464
	2449 Move X1, [X8]
	2450 Call Enumerator<EdgeLookup>.Dispose, X0
	2451 Compare X19, 0
	2452 JumpIfEqual {793}
	2453 Move X0, X19
	2454 Call 0x1C17F18
	2455 Move [X31+16], X22
	2456 Move X19, X31
	2457 Move [X31+16], X0
	2458 Move X8, 0x7F4000
	2459 Move X8, [X8+1528]
	2460 Move X1, [X8]
	2461 Add X0, X31, 464
	2462 Call Enumerator<EdgeLookup>.Dispose, X0
	2463 Compare X19, 0
	2464 JumpIfNotEqual {2467}
	2465 Move X0, [X31+16]
	2466 Call 0x1D2D690
	2467 Move X0, X19
	2468 Call 0x1C17F18
	2469 NotImplemented "Instruction CMP not yet implemented."
	2470 Move [X31+16], X0
	2471 Move X0, [X31+16]
	2472 Call 0x3EB2AD0
	2473 Move X19, [X0]
	2474 Call 0x3EB2AE0
	2475 Move X8, 0x7F4000
	2476 Move X8, [X8+1528]
	2477 Add X0, X31, 464
	2478 Move X1, [X8]
	2479 Call Enumerator<EdgeLookup>.Dispose, X0
	2480 Move X29, [X31+24]
	2481 Compare X19, 0
	2482 JumpIfEqual {935}
	2483 Move X19, X31
	2484 Move [X31+16], X0
	2485 Move X8, 0x7F4000
	2486 Move X8, [X8+1528]
	2487 Move X1, [X8]
	2488 Add X0, X31, 464
	2489 Call Enumerator<EdgeLookup>.Dispose, X0
	2490 Compare X19, 0
	2491 JumpIfEqual {2465}
	2492 Move X0, X19
	2493 Call 0x1C17F18
	2494 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.FaceRebuildData> GetBridgeFaces(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, UnityEngine.ProBuilder.WingedEdge left, UnityEngine.ProBuilder.WingedEdge right, System.Collections.Generic.Dictionary`2<System.Int32, System.Collections.Generic.List`1<UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.FaceRebuildData, System.Collections.Generic.List`1<System.Int32>>>> holes)

Disassembly:
	0x0395C860 LDR X1, [X8]
	0x0395C864 BL 0x301B7C4
	0x0395C868 ADD X2, X31, 0x78
	0x0395C86C ADD X3, X31, 0x70
	0x0395C870 ADD X4, X31, 0x68
	0x0395C874 ADD X5, X31, 0x60
	0x0395C878 ADD X6, X31, 0x58
	0x0395C87C ADD X7, X31, 0x50
	0x0395C880 MOV X0, X21
	0x0395C884 MOV W1, W31
	0x0395C888 STR X22, [X31 + 0x50]
	0x0395C88C STR X31, [X31]
	0x0395C890 BL 0x395D6AC
	0x0395C894 MOVZ W4, 0xFFFF
	0x0395C898 MOV X0, X19
	0x0395C89C MOV X1, X23
	0x0395C8A0 MOV X2, X24
	0x0395C8A4 MOV X3, X25
	0x0395C8A8 BL 0x395E418
	0x0395C8AC ADRP X8, 0x7F3000
	0x0395C8B0 LDR X8, [X8 + 0x7A0]
	0x0395C8B4 MOV X19, X0
	0x0395C8B8 MOV X0, X21
	0x0395C8BC LDR X1, [X8]
	0x0395C8C0 BL 0x21C7404
	0x0395C8C4 CBZ X0, 0x395CA58
	0x0395C8C8 MOV X1, X31
	0x0395C8CC BL 0x3C32E90
	0x0395C8D0 CBZ X0, 0x395CA58
	0x0395C8D4 MOV X1, X31
	0x0395C8D8 BL 0x3C3F58C
	0x0395C8DC CBZ X19, 0x395CA58
	0x0395C8E0 ADRP X8, 0x7F3000
	0x0395C8E4 LDR X8, [X8 + 0x7C0]
	0x0395C8E8 MOV X0, X19
	0x0395C8EC MOV V8.16B, V0.16B
	0x0395C8F0 MOV V9.16B, V1.16B
	0x0395C8F4 LDR X1, [X8]
	0x0395C8F8 ADD X8, X31, 0x18
	0x0395C8FC MOV V10.16B, V2.16B
	0x0395C900 BL 0x301CB58
	0x0395C904 LDUR V0, [X31 + 0x18]
	0x0395C908 LDR X8, [X31 + 0x28]
	0x0395C90C ADRP X24, 0x7F3000
	0x0395C910 ADRP X25, 0x79E000
	0x0395C914 LDR X24, [X24 + 0x7B0]
	0x0395C918 LDR X25, [X25 + 0xA88]
	0x0395C91C STR V0, [X31 + 0x3]
	0x0395C920 STR X8, [X31 + 0x40]
	0x0395C924 ADRP X26, 0x7F2000
	0x0395C928 LDR X26, [X26 + 0x590]
	0x0395C92C LDR X1, [X24]
	0x0395C930 ADD X0, X31, 0x30
	0x0395C934 BL 0x2BC4350
	0x0395C938 TBZ X0, 0x0, 0x395C9C8
	0x0395C93C LDR X21, [X31 + 0x40]
	0x0395C940 CBZ X21, 0x395CA08
	0x0395C944 MOV X0, X21
	0x0395C948 MOV X1, X31
	0x0395C94C BL 0x3912AD8
	0x0395C950 CBZ X22, 0x395CA0C
	0x0395C954 LDR X1, [X25]
	0x0395C958 MOV X23, X0
	0x0395C95C MOV X0, X22
	0x0395C960 BL 0x301DDC4
	0x0395C964 MOV X1, X0
	0x0395C968 CBZ X23, 0x395CA04
	0x0395C96C MOV X0, X23
	0x0395C970 MOV X2, X31
	0x0395C974 BL 0x3C13558
	0x0395C978 MOV X0, X21
	0x0395C97C MOV X1, X31
	0x0395C980 BL 0x3972374
	0x0395C984 MOV X0, X21
	0x0395C988 MOV V0.16B, V8.16B
	0x0395C98C MOV V1.16B, V9.16B
	0x0395C990 MOV V2.16B, V10.16B
	0x0395C994 MOV X1, X31
	0x0395C998 BL 0x39756F0
	0x0395C99C LDR X0, [X26]
	0x0395C9A0 LDR W8, [X0 + 0xE0]
	0x0395C9A4 CBNZ W8, 0x395C9AC
	0x0395C9A8 BL 0x1C16DFC
	0x0395C9AC MOV X0, X21
	0x0395C9B0 MOV X1, X20
	0x0395C9B4 MOV X2, X31
	0x0395C9B8 BL 0x393AE2C
	0x0395C9BC B 0x395C92C
	0x0395C9C0 MOV X19, X31
	0x0395C9C4 B 0x395C9DC
	0x0395C9C8 ADRP X8, 0x7F3000
	0x0395C9CC LDR X8, [X8 + 0x7A8]
	0x0395C9D0 ADD X0, X31, 0x30
	0x0395C9D4 LDR X1, [X8]
	0x0395C9D8 BL 0x2BC434C
	0x0395C9DC MOV X0, X19
	0x0395C9E0 LDP X20, X19, [X31 + 0xD0]
	0x0395C9E4 LDP X22, X21, [X31 + 0xC0]
	0x0395C9E8 LDP X24, X23, [X31 + 0xB0]
	0x0395C9EC LDP X26, X25, [X31 + 0xA0]
	0x0395C9F0 LDR X30, [X31 + 0x98]
	0x0395C9F4 LDP D9, D8, [X31 + 0x88]
	0x0395C9F8 LDR V10, [X31 + 0x80]
	0x0395C9FC ADD X31, X31, 0xE0
	0x0395CA00 RET
	0x0395CA04 BL 0x1C16F20
	0x0395CA08 BL 0x1C16F20
	0x0395CA0C BL 0x1C16F20
	0x0395CA10 ADRP X0, 0x79C000
	0x0395CA14 LDR X0, [X0 + 0x528]
	0x0395CA18 BL 0x1C16D08
	0x0395CA1C BL 0x1C16F10
	0x0395CA20 MOV X19, X0
	0x0395CA24 ADRP X0, 0x7F3000
	0x0395CA28 LDR X0, [X0 + 0x7D8]
	0x0395CA2C BL 0x1C16D08
	0x0395CA30 MOV X1, X0
	0x0395CA34 MOV X0, X19
	0x0395CA38 MOV X2, X31
	0x0395CA3C BL 0x330E100
	0x0395CA40 ADRP X0, 0x7F3000
	0x0395CA44 LDR X0, [X0 + 0x7E0]
	0x0395CA48 BL 0x1C16D08
	0x0395CA4C MOV X1, X0
	0x0395CA50 MOV X0, X19
	0x0395CA54 BL 0x1C16DEC
	0x0395CA58 BL 0x1C16F20
	0x0395CA5C B 0x395CA7C
	0x0395CA60 B 0x395CA7C
	0x0395CA64 B 0x395CA7C
	0x0395CA68 B 0x395CA7C
	0x0395CA6C B 0x395CA7C
	0x0395CA70 B 0x395CA7C
	0x0395CA74 B 0x395CA7C
	0x0395CA78 B 0x395CA7C
	0x0395CA7C MOV X20, X0
	0x0395CA80 CMP W1, 0x1
	0x0395CA84 B.NE 0x395CAB8
	0x0395CA88 MOV X0, X20
	0x0395CA8C BL 0x3EB1AD0
	0x0395CA90 LDR X21, [X0]
	0x0395CA94 BL 0x3EB1AE0
	0x0395CA98 ADRP X8, 0x7F3000
	0x0395CA9C LDR X8, [X8 + 0x7A8]
	0x0395CAA0 ADD X0, X31, 0x30
	0x0395CAA4 LDR X1, [X8]
	0x0395CAA8 BL 0x2BC434C
	0x0395CAAC CBZ X21, 0x395C9DC
	0x0395CAB0 MOV X0, X21
	0x0395CAB4 BL 0x1C16F18
	0x0395CAB8 MOV X21, X31
	0x0395CABC B 0x395CAC4
	0x0395CAC0 MOV X20, X0
	0x0395CAC4 ADRP X8, 0x7F3000
	0x0395CAC8 LDR X8, [X8 + 0x7A8]
	0x0395CACC LDR X1, [X8]
	0x0395CAD0 ADD X0, X31, 0x30
	0x0395CAD4 BL 0x2BC434C
	0x0395CAD8 CBNZ X21, 0x395CAE4
	0x0395CADC MOV X0, X20
	0x0395CAE0 BL 0x1D2C690
	0x0395CAE4 MOV X0, X21
	0x0395CAE8 BL 0x1C16F18
	0x0395CAEC BL 0x1990590
	0x0395CAF0 SUB X31, X31, 0x120
	0x0395CAF4 STP X29, X30, [X31 + 0xC0]
	0x0395CAF8 STP X28, X27, [X31 + 0xD0]
	0x0395CAFC STP X26, X25, [X31 + 0xE0]
	0x0395CB00 STP X24, X23, [X31 + 0xF0]
	0x0395CB04 STP X22, X21, [X31 + 0x100]
	0x0395CB08 STP X20, X19, [X31 + 0x110]
	0x0395CB0C ADRP X20, 0xA85000
	0x0395CB10 LDRB W8, [X20 + 0x9A8]
	0x0395CB14 MOV X19, X1
	0x0395CB18 MOV X29, X0
	0x0395CB1C TBNZ X8, 0x0, 0x395CC84
	0x0395CB20 ADRP X0, 0x7F3000
	0x0395CB24 LDR X0, [X0 + 0x790]
	0x0395CB28 BL 0x1C16CF4
	0x0395CB2C ADRP X0, 0x7F3000
	0x0395CB30 LDR X0, [X0 + 0x7E8]
	0x0395CB34 BL 0x1C16CF4
	0x0395CB38 ADRP X0, 0x7F3000
	0x0395CB3C LDR X0, [X0 + 0x798]
	0x0395CB40 BL 0x1C16CF4
	0x0395CB44 ADRP X0, 0x7F3000
	0x0395CB48 LDR X0, [X0 + 0x7A8]
	0x0395CB4C BL 0x1C16CF4
	0x0395CB50 ADRP X0, 0x7F3000
	0x0395CB54 LDR X0, [X0 + 0x7B0]
	0x0395CB58 BL 0x1C16CF4
	0x0395CB5C ADRP X0, 0x7F3000
	0x0395CB60 LDR X0, [X0 + 0x7B8]
	0x0395CB64 BL 0x1C16CF4
	0x0395CB68 ADRP X0, 0x797000
	0x0395CB6C LDR X0, [X0 + 0xE00]
	0x0395CB70 BL 0x1C16CF4
	0x0395CB74 ADRP X0, 0x7F2000
	0x0395CB78 LDR X0, [X0 + 0x7D8]
	0x0395CB7C BL 0x1C16CF4
	0x0395CB80 ADRP X0, 0x7F2000
	0x0395CB84 LDR X0, [X0 + 0x7E0]
	0x0395CB88 BL 0x1C16CF4
	0x0395CB8C ADRP X0, 0x797000
	0x0395CB90 LDR X0, [X0 + 0xE18]
	0x0395CB94 BL 0x1C16CF4
	0x0395CB98 ADRP X0, 0x7F3000
	0x0395CB9C LDR X0, [X0 + 0x7F0]
	0x0395CBA0 BL 0x1C16CF4
	0x0395CBA4 ADRP X0, 0x7F3000
	0x0395CBA8 LDR X0, [X0 + 0x7C0]
	0x0395CBAC BL 0x1C16CF4
	0x0395CBB0 ADRP X0, 0x79E000
	0x0395CBB4 LDR X0, [X0 + 0xA88]
	0x0395CBB8 BL 0x1C16CF4
	0x0395CBBC ADRP X0, 0x7F3000
	0x0395CBC0 LDR X0, [X0 + 0x7F8]
	0x0395CBC4 BL 0x1C16CF4
	0x0395CBC8 ADRP X0, 0x7F3000
	0x0395CBCC LDR X0, [X0 + 0x800]
	0x0395CBD0 BL 0x1C16CF4
	0x0395CBD4 ADRP X0, 0x7F1000
	0x0395CBD8 LDR X0, [X0 + 0xDD8]
	0x0395CBDC BL 0x1C16CF4
	0x0395CBE0 ADRP X0, 0x7F2000
	0x0395CBE4 LDR X0, [X0 + 0xA38]
	0x0395CBE8 BL 0x1C16CF4
	0x0395CBEC ADRP X0, 0x7F1000
	0x0395CBF0 LDR X0, [X0 + 0xDE0]
	0x0395CBF4 BL 0x1C16CF4
	0x0395CBF8 ADRP X0, 0x7F3000
	0x0395CBFC LDR X0, [X0 + 0x808]
	0x0395CC00 BL 0x1C16CF4
	0x0395CC04 ADRP X0, 0x7F3000
	0x0395CC08 LDR X0, [X0 + 0x810]
	0x0395CC0C BL 0x1C16CF4
	0x0395CC10 ADRP X0, 0x7F3000
	0x0395CC14 LDR X0, [X0 + 0x818]
	0x0395CC18 BL 0x1C16CF4
	0x0395CC1C ADRP X0, 0x7F3000
	0x0395CC20 LDR X0, [X0 + 0x820]
	0x0395CC24 BL 0x1C16CF4
	0x0395CC28 ADRP X0, 0x79E000
	0x0395CC2C LDR X0, [X0 + 0xAC8]
	0x0395CC30 BL 0x1C16CF4
	0x0395CC34 ADRP X0, 0x7F3000
	0x0395CC38 LDR X0, [X0 + 0x7D0]
	0x0395CC3C BL 0x1C16CF4
	0x0395CC40 ADRP X0, 0x7F3000
	0x0395CC44 LDR X0, [X0 + 0x828]
	0x0395CC48 BL 0x1C16CF4
	0x0395CC4C ADRP X0, 0x7F1000
	0x0395CC50 LDR X0, [X0 + 0xDE8]
	0x0395CC54 BL 0x1C16CF4
	0x0395CC58 ADRP X0, 0x7F1000
	0x0395CC5C LDR X0, [X0 + 0xDF0]
	0x0395CC60 BL 0x1C16CF4
	0x0395CC64 ADRP X0, 0x797000
	0x0395CC68 LDR X0, [X0 + 0x598]
	0x0395CC6C BL 0x1C16CF4
	0x0395CC70 ADRP X0, 0x7F2000
	0x0395CC74 LDR X0, [X0 + 0x590]
	0x0395CC78 BL 0x1C16CF4
	0x0395CC7C MOVZ W8, 0x1
	0x0395CC80 STRB W8, [X20 + 0x9A8]
	0x0395CC84 STP X31, X31, [X31 + 0xB0]
	0x0395CC88 STR X31, [X31 + 0xA8]
	0x0395CC8C STP X31, X31, [X31 + 0x90]
	0x0395CC90 STR W31, [X31 + 0x8C]
	0x0395CC94 STP X31, X31, [X31 + 0x70]
	0x0395CC98 STR X31, [X31 + 0x80]
	0x0395CC9C CBZ X29, 0x395D4D4
	0x0395CCA0 ADRP X26, 0x797000
	0x0395CCA4 LDR X26, [X26 + 0x598]
	0x0395CCA8 LDR X0, [X26]
	0x0395CCAC LDR W8, [X0 + 0xE0]
	0x0395CCB0 CBNZ W8, 0x395CCB8
	0x0395CCB4 BL 0x1C16DFC
	0x0395CCB8 MOV X0, X19
	0x0395CCBC MOV X1, X31
	0x0395CCC0 MOV X2, X31
	0x0395CCC4 BL 0x3C3883C
	0x0395CCC8 TBNZ X0, 0x0, 0x395D4F4
	0x0395CCCC ADRP X8, 0x7F3000
	0x0395CCD0 LDR X8, [X8 + 0x790]
	0x0395CCD4 MOV X0, X29
	0x0395CCD8 LDR X1, [X8]
	0x0395CCDC BL 0x21B2678
	0x0395CCE0 TBZ X0, 0x0, 0x395CEEC
	0x0395CCE4 ADRP X8, 0x7F3000
	0x0395CCE8 LDR X8, [X8 + 0x798]
	0x0395CCEC MOV X0, X29
	0x0395CCF0 LDR X1, [X8]
	0x0395CCF4 BL 0x21BD4C4
	0x0395CCF8 CMP W0, 0x2
	0x0395CCFC B.LT 0x395CEEC
	0x0395CD00 ADRP X8, 0x7F3000
	0x0395CD04 LDR X8, [X8 + 0x7E8]
	0x0395CD08 MOV X0, X29
	0x0395CD0C MOV X1, X19
	0x0395CD10 LDR X2, [X8]
	0x0395CD14 BL 0x21BA5B0
	0x0395CD18 TBZ X0, 0x0, 0x395CEEC
	0x0395CD1C CBZ X19, 0x395D53C
	0x0395CD20 MOV X0, X19
	0x0395CD24 MOV X1, X31
	0x0395CD28 MOV X2, X31
	0x0395CD2C BL 0x3912114
	0x0395CD30 ADRP X8, 0x7F1000
	0x0395CD34 LDR X8, [X8 + 0xDE8]
	0x0395CD38 MOV X20, X0
	0x0395CD3C LDR X8, [X8]
	0x0395CD40 MOV X0, X8
	0x0395CD44 BL 0x1C16F10
	0x0395CD48 ADRP X8, 0x7F1000
	0x0395CD4C LDR X8, [X8 + 0xDE0]
	0x0395CD50 MOV X1, X20
	0x0395CD54 MOV X23, X0
	0x0395CD58 LDR X2, [X8]
	0x0395CD5C BL 0x301B8E0
	0x0395CD60 STR X23, [X31 + 0xB8]
	0x0395CD64 ADRP X8, 0x7F1000
	0x0395CD68 LDR X8, [X8 + 0xDF0]
	0x0395CD6C LDR X20, [X19 + 0x28]
	0x0395CD70 LDR X0, [X8]
	0x0395CD74 BL 0x1C16F10
	0x0395CD78 ADRP X8, 0x7F1000
	0x0395CD7C LDR X8, [X8 + 0xDD8]
	0x0395CD80 MOV X1, X20
	0x0395CD84 MOV X24, X0
	0x0395CD88 LDR X2, [X8]
	0x0395CD8C BL 0x301B8E0
	0x0395CD90 MOV X0, X19
	0x0395CD94 MOV X1, X31
	0x0395CD98 STR X24, [X31 + 0xB0]
	0x0395CD9C BL 0x3915F00
	0x0395CDA0 ADRP X21, 0x7F3000
	0x0395CDA4 LDR X21, [X21 + 0x7D0]
	0x0395CDA8 MOV X20, X0
	0x0395CDAC LDR X8, [X21]
	0x0395CDB0 MOV X0, X8
	0x0395CDB4 BL 0x1C16F10
	0x0395CDB8 ADRP X22, 0x7F3000
	0x0395CDBC LDR X22, [X22 + 0x808]
	0x0395CDC0 MOV X1, X20
	0x0395CDC4 MOV X25, X0
	0x0395CDC8 LDR X2, [X22]
	0x0395CDCC BL 0x301B8E0
	0x0395CDD0 STR X25, [X31 + 0xA8]
	0x0395CDD4 LDR X0, [X21]
	0x0395CDD8 LDR X20, [X19 + 0x48]
	0x0395CDDC BL 0x1C16F10
	0x0395CDE0 LDR X2, [X22]
	0x0395CDE4 MOV X1, X20
	0x0395CDE8 MOV X21, X0
	0x0395CDEC BL 0x301B8E0
	0x0395CDF0 MOV X0, X19
	0x0395CDF4 MOV X1, X31
	0x0395CDF8 STR X21, [X31 + 0x50]
	0x0395CDFC STR X21, [X31 + 0xA0]
	0x0395CE00 BL 0x39120C0
	0x0395CE04 MOV W27, W0
	0x0395CE08 MOV X0, X19
	0x0395CE0C MOV X1, X31
	0x0395CE10 BL 0x3912AD8
	0x0395CE14 CBZ X0, 0x395D53C
	0x0395CE18 MOV X1, X31
	0x0395CE1C BL 0x3C1351C
	0x0395CE20 ADRP X8, 0x79E000
	0x0395CE24 LDR X8, [X8 + 0xAC8]
	0x0395CE28 MOV X20, X0
	0x0395CE2C LDR X8, [X8]
	0x0395CE30 MOV X0, X8
	0x0395CE34 BL 0x1C16F10
	0x0395CE38 ADRP X8, 0x7F3000
	0x0395CE3C LDR X8, [X8 + 0x810]
	0x0395CE40 MOV X1, X20
	0x0395CE44 MOV X21, X0
	0x0395CE48 LDR X2, [X8]
	0x0395CE4C BL 0x301B8E0
	0x0395CE50 MOV X0, X19
	0x0395CE54 MOV X1, X31
	0x0395CE58 STR X21, [X31 + 0x20]
	0x0395CE5C STR X21, [X31 + 0x98]
	0x0395CE60 BL 0x3C32E90
	0x0395CE64 ADRP X20, 0x7F3000
	0x0395CE68 LDR X20, [X20 + 0x828]
	0x0395CE6C STR X0, [X31 + 0x28]
	0x0395CE70 LDR X8, [X20]
	0x0395CE74 MOV X0, X8
	0x0395CE78 BL 0x1C16F10
	0x0395CE7C ADRP X21, 0x7F3000
	0x0395CE80 LDR X21, [X21 + 0x800]
	0x0395CE84 MOV X28, X0
	0x0395CE88 LDR X1, [X21]
	0x0395CE8C BL 0x301B7C4
	0x0395CE90 LDR X0, [X20]
	0x0395CE94 BL 0x1C16F10
	0x0395CE98 LDR X1, [X21]
	0x0395CE9C MOV X20, X0
	0x0395CEA0 BL 0x301B7C4
	0x0395CEA4 ADRP X10, 0x7F2000
	0x0395CEA8 LDR X8, [X29]
	0x0395CEAC LDR X10, [X10 + 0x7D8]
	0x0395CEB0 LDRH W9, [X8 + 0x12E]
	0x0395CEB4 LDR X1, [X10]
	0x0395CEB8 CBZ X9, 0x395CEDC
	0x0395CEBC LDR X10, [X8 + 0xB0]
	0x0395CEC0 ADD X10, X10, 0x8
	0x0395CEC4 LDUR X11, [X10 - 0x8]
	0x0395CEC8 CMP X11, X1
	0x0395CECC B.EQ 0x395CF14
	0x0395CED0 SUBS X9, X9, 0x1
	0x0395CED4 ADD X10, X10, 0x10
	0x0395CED8 B.NE 0x395CEC4
	0x0395CEDC MOV X0, X29
	0x0395CEE0 MOV W2, W31
	0x0395CEE4 BL 0x1C5C788
	0x0395CEE8 B 0x395CF20
	0x0395CEEC MOV X29, X31
	0x0395CEF0 MOV X0, X29
	0x0395CEF4 LDP X20, X19, [X31 + 0x110]
	0x0395CEF8 LDP X22, X21, [X31 + 0x100]
	0x0395CEFC LDP X24, X23, [X31 + 0xF0]
	0x0395CF00 LDP X26, X25, [X31 + 0xE0]
	0x0395CF04 LDP X28, X27, [X31 + 0xD0]
	0x0395CF08 LDP X29, X30, [X31 + 0xC0]
	0x0395CF0C ADD X31, X31, 0x120
	0x0395CF10 RET
	0x0395CF14 LDRSW X9, [X10]
	0x0395CF18 ADD X8, X8, X9, 0x4, LSL
	0x0395CF1C ADD X0, X8, 0x138
	0x0395CF20 LDP X8, X1, [X0]
	0x0395CF24 MOV X0, X29
	0x0395CF28 STP X25, X24, [X31 + 0x38]
	0x0395CF2C STR X23, [X31 + 0x48]
	0x0395CF30 BLR X8
	0x0395CF34 MOV X29, X0
	0x0395CF38 STR W27, [X31 + 0x34]
	0x0395CF3C CBZ X0, 0x395D540
	0x0395CF40 ADRP X21, 0x797000
	0x0395CF44 ADRP X22, 0x7F2000
	0x0395CF48 ADRP X24, 0x7F3000
	0x0395CF4C LDR X21, [X21 + 0xE18]
	0x0395CF50 LDR X22, [X22 + 0x7E0]
	0x0395CF54 LDR X24, [X24 + 0x7F0]
	0x0395CF58 MOVZ W23, 0xFFFE
	0x0395CF5C MOV W25, W27
	0x0395CF60 LDR X8, [X29]
	0x0395CF64 LDR X1, [X21]
	0x0395CF68 LDRH W9, [X8 + 0x12E]
	0x0395CF6C CBZ X9, 0x395CF90
	0x0395CF70 LDR X10, [X8 + 0xB0]
	0x0395CF74 ADD X10, X10, 0x8
	0x0395CF78 LDUR X11, [X10 - 0x8]
	0x0395CF7C CMP X11, X1
	0x0395CF80 B.EQ 0x395CFA0
	0x0395CF84 SUBS X9, X9, 0x1
	0x0395CF88 ADD X10, X10, 0x10
	0x0395CF8C B.NE 0x395CF78
	0x0395CF90 MOV X0, X29
	0x0395CF94 MOV W2, W31
	0x0395CF98 BL 0x1C5C788
	0x0395CF9C B 0x395CFAC
	0x0395CFA0 LDRSW X9, [X10]
	0x0395CFA4 ADD X8, X8, X9, 0x4, LSL
	0x0395CFA8 ADD X0, X8, 0x138
	0x0395CFAC LDP X8, X1, [X0]
	0x0395CFB0 MOV X0, X29
	0x0395CFB4 BLR X8
	0x0395CFB8 TBZ X0, 0x0, 0x395D120
	0x0395CFBC LDR X8, [X29]
	0x0395CFC0 LDR X1, [X22]
	0x0395CFC4 LDRH W9, [X8 + 0x12E]
	0x0395CFC8 CBZ X9, 0x395CFEC
	0x0395CFCC LDR X10, [X8 + 0xB0]
	0x0395CFD0 ADD X10, X10, 0x8
	0x0395CFD4 LDUR X11, [X10 - 0x8]
	0x0395CFD8 CMP X11, X1
	0x0395CFDC B.EQ 0x395CFFC
	0x0395CFE0 SUBS X9, X9, 0x1
	0x0395CFE4 ADD X10, X10, 0x10
	0x0395CFE8 B.NE 0x395CFD4
	0x0395CFEC MOV X0, X29
	0x0395CFF0 MOV W2, W31
	0x0395CFF4 BL 0x1C5C788
	0x0395CFF8 B 0x395D008
	0x0395CFFC LDRSW X9, [X10]
	0x0395D000 ADD X8, X8, X9, 0x4, LSL
	0x0395D004 ADD X0, X8, 0x138
	0x0395D008 LDP X8, X1, [X0]
	0x0395D00C MOV X0, X29
	0x0395D010 BLR X8
	0x0395D014 MOV X27, X0
	0x0395D018 LDR X0, [X26]
	0x0395D01C LDR W8, [X0 + 0xE0]
	0x0395D020 CBNZ W8, 0x395D028
	0x0395D024 BL 0x1C16DFC
	0x0395D028 MOV X0, X27
	0x0395D02C MOV X1, X19
	0x0395D030 MOV X2, X31
	0x0395D034 BL 0x3C354F8
	0x0395D038 TBZ X0, 0x0, 0x395CF60
	0x0395D03C CBZ X27, 0x395D4C4
	0x0395D040 MOV X0, X27
	0x0395D044 MOV X1, X31
	0x0395D048 BL 0x39120C0
	0x0395D04C ADD W8, W0, W25
	0x0395D050 CMP W8, W23
	0x0395D054 B.LE 0x395D0B4
	0x0395D058 CBZ X20, 0x395D4C8
	0x0395D05C LDR W10, [X20 + 0x1C]
	0x0395D060 LDR X8, [X20 + 0x10]
	0x0395D064 LDR X9, [X24]
	0x0395D068 ADD W10, W10, 0x1
	0x0395D06C STR W10, [X20 + 0x1C]
	0x0395D070 CBZ X8, 0x395D4CC
	0x0395D074 LDRSW X10, [X20 + 0x18]
	0x0395D078 LDR W11, [X8 + 0x18]
	0x0395D07C CMP W10, W11
	0x0395D080 B.CS 0x395D098
	0x0395D084 ADD W9, W10, 0x1
	0x0395D088 ADD X8, X8, X10, 0x3, LSL
	0x0395D08C STR W9, [X20 + 0x18]
	0x0395D090 STR X27, [X8 + 0x20]
	0x0395D094 B 0x395CF60
	0x0395D098 LDR X8, [X9 + 0x20]
	0x0395D09C LDR X8, [X8 + 0xC0]
	0x0395D0A0 LDR X2, [X8 + 0x70]
	0x0395D0A4 MOV X0, X20
	0x0395D0A8 MOV X1, X27
	0x0395D0AC BL 0x301BF90
	0x0395D0B0 B 0x395CF60
	0x0395D0B4 MOV X0, X27
	0x0395D0B8 MOV X1, X31
	0x0395D0BC BL 0x39120C0
	0x0395D0C0 CBZ X28, 0x395D550
	0x0395D0C4 LDR W10, [X28 + 0x1C]
	0x0395D0C8 LDR X8, [X28 + 0x10]
	0x0395D0CC LDR X9, [X24]
	0x0395D0D0 ADD W10, W10, 0x1
	0x0395D0D4 STR W10, [X28 + 0x1C]
	0x0395D0D8 CBZ X8, 0x395D54C
	0x0395D0DC LDRSW X10, [X28 + 0x18]
	0x0395D0E0 LDR W11, [X8 + 0x18]
	0x0395D0E4 ADD W25, W0, W25

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+144], D13
	003 Move [X31+152], D12
	004 Move [X31+160], D11
	005 Move [X31+168], D10
	006 Move [X31+176], D9
	007 Move [X31+184], D8
	008 Move [X31+192], X29
	009 Move [X31+200], X30
	010 Move [X31+208], X28
	011 Move [X31+216], X27
	012 Move [X31+224], X26
	013 Move [X31+232], X25
	014 Move [X31+240], X24
	015 Move [X31+248], X23
	016 Move [X31+256], X22
	017 Move [X31+264], X21
	018 Move [X31+272], X20
	019 Move [X31+280], X19
	020 Move X21, 0xA86000
	021 Move X22, 0x7F4000
	022 Move X20, 0x7F4000
	023 Move X19, 0x7F4000
	024 Move W8, [X21+2465]
	025 Move X22, [X22+792]
	026 Move X20, [X20+784]
	027 Move X19, [X19+496]
	028 Move X29, X3
	029 Move X25, X2
	030 Move X23, X1
	031 Move X24, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {92}
	036 Move X0, 0x7F4000
	037 Move X0, [X0+1360]
	038 Call 0x1C17CF4
	039 Move X0, 0x7F2000
	040 Move X0, [X0+3496]
	041 Call 0x1C17CF4
	042 Move X0, 0x7F4000
	043 Move X0, [X0+1368]
	044 Call 0x1C17CF4
	045 Move X0, 0x7F4000
	046 Move X0, [X0+496]
	047 Call 0x1C17CF4
	048 Move X0, 0x7F3000
	049 Move X0, [X0+1376]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F2000
	052 Move X0, [X0+3936]
	053 Call 0x1C17CF4
	054 Move X0, 0x799000
	055 Move X0, [X0+3672]
	056 Call 0x1C17CF4
	057 Move X0, 0x799000
	058 Move X0, [X0+3600]
	059 Call 0x1C17CF4
	060 Move X0, 0x7F4000
	061 Move X0, [X0+776]
	062 Call 0x1C17CF4
	063 Move X0, 0x7F4000
	064 Move X0, [X0+448]
	065 Call 0x1C17CF4
	066 Move X0, 0x79C000
	067 Move X0, [X0+2928]
	068 Call 0x1C17CF4
	069 Move X0, 0x7F4000
	070 Move X0, [X0+456]
	071 Call 0x1C17CF4
	072 Move X0, 0x7F4000
	073 Move X0, [X0+784]
	074 Call 0x1C17CF4
	075 Move X0, 0x799000
	076 Move X0, [X0+3632]
	077 Call 0x1C17CF4
	078 Move X0, 0x7F2000
	079 Move X0, [X0+3560]
	080 Call 0x1C17CF4
	081 Move X0, 0x7F4000
	082 Move X0, [X0+792]
	083 Call 0x1C17CF4
	084 Move X0, 0x7F4000
	085 Move X0, [X0+1760]
	086 Call 0x1C17CF4
	087 Move X0, 0x7F4000
	088 Move X0, [X0+832]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+2465], W8
	092 Move X0, [X22]
	093 Call 0x1C17F10
	094 Move X1, [X20]
	095 Move X20, X0
	096 Call List`1<Object>..ctor, X0
	097 Move X0, [X19]
	098 Call 0x1C17F10
	099 Move X1, X31
	100 Move X21, X0
	101 Call FaceRebuildData..ctor, X0
	102 Compare X23, 0
	103 JumpIfEqual {586}
	104 Compare X25, 0
	105 JumpIfEqual {586}
	106 Move X8, 0x7F2000
	107 Move X8, [X8+3560]
	108 Move X26, [X23+16]
	109 Move X9, [X23+24]
	110 Move X19, 0x7F4000
	111 Move X27, [X25+16]
	112 Move X28, [X25+24]
	113 Move X0, [X8]
	114 Move [X31+24], X9
	115 Move X19, [X19+456]
	116 Call 0x1C17F10
	117 Move X1, [X19]
	118 Move X25, X0
	119 Call List`1<Object>..ctor, X0
	120 Compare X24, 0
	121 JumpIfEqual {586}
	122 Move X19, 0x7F2000
	123 Move X8, [X24]
	124 Move X19, [X19+3936]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X19]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X24
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X2, [X0+8]
	143 Move X0, X24
	144 Move W1, W26
	145 Move [X31+16], X29
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X25, 0
	148 JumpIfEqual {586}
	149 Move X29, 0x7F4000
	150 Move X29, [X29+448]
	151 Move W10, [X25+28]
	152 Move X8, [X25+16]
	153 Move X9, [X29]
	154 Add W10, W10, 1
	155 Move [X25+28], W10
	156 Compare X8, 0
	157 JumpIfEqual {586}
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Move W11, [X8+24]
	160 Move X1, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X25+24], W9
	165 Move [X8+32], X1
	166 Move X8, [X9+32]
	167 Move X0, X25
	168 Move X8, [X8+192]
	169 Move X2, [X8+112]
	170 Call List`1<Object>.AddWithResize, X0, X1
	171 Move X8, [X24]
	172 Move X1, [X19]
	173 Move X26, X26
	174 ShiftRight X26, 32
	175 And X26, X26, 0x7FFFFFFF
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X24
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X2, [X0+8]
	193 Move X0, X24
	194 Move W1, W26
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move W10, [X25+28]
	197 Move X8, [X25+16]
	198 Move X9, [X29]
	199 Add W10, W10, 1
	200 Move [X25+28], W10
	201 Compare X8, 0
	202 JumpIfEqual {586}
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Move W11, [X8+24]
	205 Move X1, X0
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W9, W10, 1
	208 Add X8, X8, X10
	209 Move [X25+24], W9
	210 Move [X8+32], X1
	211 Move X8, [X9+32]
	212 Move X0, X25
	213 Move X8, [X8+192]
	214 Move X2, [X8+112]
	215 Call List`1<Object>.AddWithResize, X0, X1
	216 Move X8, [X24]
	217 Move X10, [X31+24]
	218 Move X1, [X19]
	219 Move X22, X27
	220 ShiftRight X22, 32
	221 And X22, X22, 0x7FFFFFFF
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSEL not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X24
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X2, [X0+8]
	241 Move X0, X24
	242 Move W1, W26
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move W10, [X25+28]
	245 Move X8, [X25+16]
	246 Move X9, [X29]
	247 Add W10, W10, 1
	248 Move [X25+28], W10
	249 Compare X8, 0
	250 JumpIfEqual {586}
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Move W11, [X8+24]
	253 Move X1, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add W9, W10, 1
	256 Add X8, X8, X10
	257 Move [X25+24], W9
	258 Move [X8+32], X1
	259 Move X8, [X9+32]
	260 Move X0, X25
	261 Move X8, [X8+192]
	262 Move X2, [X8+112]
	263 Call List`1<Object>.AddWithResize, X0, X1
	264 Move X8, [X24]
	265 Move X10, [X31+24]
	266 Move X1, [X19]
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 NotImplemented "Instruction CSEL not yet implemented."
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move X0, X24
	279 Move W2, W31
	280 Call 0x1C5D788
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Add X8, X8, X9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X2, [X0+8]
	286 Move X0, X24
	287 Move W1, W26
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move W10, [X25+28]
	290 Move X8, [X25+16]
	291 Move X9, [X29]
	292 Add W10, W10, 1
	293 Move [X25+28], W10
	294 Compare X8, 0
	295 JumpIfEqual {586}
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Move W11, [X8+24]
	298 Move X28, [X31+16]
	299 Move X1, X0
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W9, W10, 1
	302 Add X8, X8, X10
	303 Move [X25+24], W9
	304 Move [X8+32], X1
	305 Move X8, [X9+32]
	306 Move X0, X25
	307 Move X8, [X8+192]
	308 Move X2, [X8+112]
	309 Call List`1<Object>.AddWithResize, X0, X1
	310 Compare X21, 0
	311 JumpIfEqual {586}
	312 Move [X21+24], X25
	313 Move X8, [X23+32]
	314 Compare X8, 0
	315 JumpIfEqual {586}
	316 Move X1, [X8+16]
	317 Move X25, 0x7F4000
	318 Move X22, 0x799000
	319 Move X19, 0x7F4000
	320 Move X25, [X25+1368]
	321 Move X22, [X22+3672]
	322 Move X19, [X19+832]
	323 Move X0, X24
	324 Move X2, X31
	325 Call Math.Normal, X0, X1
	326 Move X0, [X25]
	327 Move X24, [X21+24]
	328 Move V8, V0
	329 Move V9, V1
	330 Move W8, [X0+224]
	331 Move V10, V2
	332 Compare W8, 0
	333 JumpIfNotEqual {336}
	334 Call 0x1C17DFC
	335 Move X0, [X25]
	336 Move X8, [X0+184]
	337 Move X0, X24
	338 Move X2, X31
	339 Move X1, [X8]
	340 Call Math.Normal, X0, X1
	341 Move X0, [X22]
	342 Move W1, 6
	343 Move V11, V0
	344 Move V12, V1
	345 Move V13, V2
	346 Call 0x1C17D6C
	347 Move X1, [X19]
	348 Move X2, X31
	349 Move X24, X0
	350 Call RuntimeHelpers.InitializeArray, X0, X1
	351 Multiply S0, S8, S11
	352 Multiply S1, S9, S12
	353 Add S0, S0, S1
	354 Multiply S1, S10, S13
	355 Add S0, S1, S0
	356 NotImplemented "Instruction FCMP not yet implemented."
	357 Move X8, 0x7F2000
	358 Move X8, [X8+3496]
	359 Move X0, X24
	360 Move X1, [X8]
	361 Call Array.Reverse, X0
	362 Move X8, [X23+32]
	363 Compare X8, 0
	364 JumpIfEqual {586}
	365 Move X19, 0x7F3000
	366 Move W23, [X8+72]
	367 Move X19, [X19+1376]
	368 Add X8, X31, 80
	369 Move X0, X31
	370 Call AutoUnwrapSettings.get_tile
	371 Move V0, [X31+80]
	372 Move V1, [X31+96]
	373 Move X0, [X19]
	374 Move [X31+112], V0
	375 Move [X31+120], V1
	376 Call 0x1C17F10
	377 Move V0, [X31+112]
	378 Move V1, [X31+128]
	379 Add X3, X31, 48
	380 Move TEMP, 0
	381 Not TEMP
	382 Move W4, TEMP
	383 Move TEMP, 0
	384 Not TEMP
	385 Move W5, TEMP
	386 Move TEMP, 0
	387 Not TEMP
	388 Move W6, TEMP
	389 Move X1, X24
	390 Move W2, W23
	391 Move W7, W31
	392 Move X25, X0
	393 Move [X31+48], V0
	394 Move [X31+56], V1
	395 Move [X31], X31
	396 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	397 Move [X21+16], X25
	398 Compare X20, 0
	399 JumpIfEqual {586}
	400 Move X9, 0x7F4000
	401 Move X9, [X9+776]
	402 Move W10, [X20+28]
	403 Move X8, [X20+16]
	404 Move X9, [X9]
	405 Add W10, W10, 1
	406 Move [X20+28], W10
	407 Compare X8, 0
	408 JumpIfEqual {586}
	409 NotImplemented "Instruction LDRSW not yet implemented."
	410 Move W11, [X8+24]
	411 Move X27, 0x799000
	412 Move X25, 0x79C000
	413 Move X27, [X27+3632]
	414 Move X25, [X25+2928]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add W9, W10, 1
	417 Add X8, X8, X10
	418 Move [X20+24], W9
	419 Move [X8+32], X21
	420 Move X8, [X9+32]
	421 Move X0, X20
	422 Move X1, X21
	423 Move X8, [X8+192]
	424 Move X2, [X8+112]
	425 Call List`1<Object>.AddWithResize, X0, X1
	426 Move X0, [X27]
	427 Call 0x1C17F10
	428 Move X1, [X25]
	429 Move X23, X0
	430 Call List`1<Int32>..ctor, X0
	431 Compare X23, 0
	432 JumpIfEqual {586}
	433 Move X24, 0x799000
	434 Move X24, [X24+3600]
	435 Move W10, [X23+28]
	436 Move X8, [X23+16]
	437 Move X9, [X24]
	438 Add W10, W10, 1
	439 Move [X23+28], W10
	440 Compare X8, 0
	441 JumpIfEqual {586}
	442 NotImplemented "Instruction LDRSW not yet implemented."
	443 Move W11, [X8+24]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Add W11, W10, 1
	446 Add X10, X8, X10
	447 Move [X23+24], W11
	448 Move [X10+32], W31
	449 Move W10, [X23+28]
	450 Add W10, W10, 1
	451 Move [X23+28], W10
	452 Move X8, [X9+32]
	453 Move X0, X23
	454 Move W1, W31
	455 Move X8, [X8+192]
	456 Move X2, [X8+112]
	457 Call List`1<Int32>.AddWithResize, X0, X1
	458 Move W10, [X23+28]
	459 Move X8, [X23+16]
	460 Move X9, [X24]
	461 Add W10, W10, 1
	462 Move [X23+28], W10
	463 Compare X8, 0
	464 JumpIfEqual {586}
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Move W11, [X8+24]
	467 Move X26, 0x7F4000
	468 Move X19, 0x7F4000
	469 Move X26, [X26+1760]
	470 Move X19, [X19+1360]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Add W9, W10, 1
	473 Add X8, X8, X10
	474 Move W10, 2
	475 Move [X23+24], W9
	476 Move [X8+32], W10
	477 Move X8, [X9+32]
	478 Move W1, 2
	479 Move X0, X23
	480 Move X8, [X8+192]
	481 Move X2, [X8+112]
	482 Call List`1<Int32>.AddWithResize, X0, X1
	483 Move X3, [X26]
	484 Add X0, X31, 80
	485 Move X1, X21
	486 Move X2, X23
	487 Move [X31+80], X31
	488 Move [X31+88], X31
	489 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	490 Move X2, [X31+80]
	491 Move X3, [X31+88]
	492 Move X4, [X19]
	493 Move X0, X28
	494 Move X1, [X31+24]
	495 Call 0x217DF44, X0, X1, X2
	496 Move X0, [X27]
	497 Call 0x1C17F10
	498 Move X1, [X25]
	499 Move X23, X0
	500 Call List`1<Int32>..ctor, X0
	501 Compare X23, 0
	502 JumpIfEqual {586}
	503 Move W10, [X23+28]
	504 Move X8, [X23+16]
	505 Move X9, [X24]
	506 Add W10, W10, 1
	507 Move [X23+28], W10
	508 Compare X8, 0
	509 JumpIfEqual {586}
	510 NotImplemented "Instruction LDRSW not yet implemented."
	511 Move W11, [X8+24]
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Add W11, W10, 1
	514 Add X10, X8, X10
	515 Move W12, 1
	516 Move [X23+24], W11
	517 Move [X10+32], W12
	518 Move W10, [X23+28]
	519 Add W10, W10, 1
	520 Move [X23+28], W10
	521 Move X8, [X9+32]
	522 Move W1, 1
	523 Move X0, X23
	524 Move X8, [X8+192]
	525 Move X2, [X8+112]
	526 Call List`1<Int32>.AddWithResize, X0, X1
	527 Move W10, [X23+28]
	528 Move X8, [X23+16]
	529 Move X9, [X24]
	530 Add W10, W10, 1
	531 Move [X23+28], W10
	532 Compare X8, 0
	533 JumpIfEqual {586}
	534 NotImplemented "Instruction LDRSW not yet implemented."
	535 Move W11, [X8+24]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Add W9, W10, 1
	538 Add X8, X8, X10
	539 Move W10, 3
	540 Move [X23+24], W9
	541 Move [X8+32], W10
	542 Move X8, [X9+32]
	543 Move W1, 3
	544 Move X0, X23
	545 Move X8, [X8+192]
	546 Move X2, [X8+112]
	547 Call List`1<Int32>.AddWithResize, X0, X1
	548 Move X3, [X26]
	549 Move X8, [X31+24]
	550 Add X0, X31, 32
	551 Move X1, X21
	552 Move X2, X23
	553 Move X22, X8
	554 ShiftRight X22, 32
	555 And X22, X22, 0x7FFFFFFF
	556 Move [X31+32], X31
	557 Move [X31+40], X31
	558 Call SimpleTuple`2<Object, Object>..ctor, X0, X1, X2
	559 Move X2, [X31+32]
	560 Move X3, [X31+40]
	561 Move X4, [X19]
	562 Move X0, X28
	563 Move W1, W22
	564 Call 0x217DF44, X0, X1, X2
	565 Move X0, X20
	566 Move X20, [X31+272]
	567 Move X19, [X31+280]
	568 Move X22, [X31+256]
	569 Move X21, [X31+264]
	570 Move X24, [X31+240]
	571 Move X23, [X31+248]
	572 Move X26, [X31+224]
	573 Move X25, [X31+232]
	574 Move X28, [X31+208]
	575 Move X27, [X31+216]
	576 Move X29, [X31+192]
	577 Move X30, [X31+200]
	578 Move D9, [X31+176]
	579 Move D8, [X31+184]
	580 Move D11, [X31+160]
	581 Move D10, [X31+168]
	582 Move D13, [X31+144]
	583 Move D12, [X31+152]
	584 Add X31, X31, 288
	585 Return X0
	586 Call 0x1C17F20

Method: System.Void SlideEdge(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, UnityEngine.ProBuilder.WingedEdge we, System.Single amount)

Disassembly:
	0x0395C45C LDR X30, [X31], #0x10
	0x0395C460 RET
	0x0395C464 BL 0x1C16F20
	0x0395C468 STR X30, [X31 - 0x10]!
	0x0395C46C CBZ X1, 0x395C47C
	0x0395C470 LDR X0, [X1 + 0x10]
	0x0395C474 LDR X30, [X31], #0x10
	0x0395C478 RET
	0x0395C47C BL 0x1C16F20
	0x0395C480 STR X30, [X31 - 0x10]!
	0x0395C484 LDR X8, [X0 + 0x18]
	0x0395C488 CBZ X8, 0x395C4B4
	0x0395C48C LDR W9, [X8 + 0x18]
	0x0395C490 CMP W9, W1
	0x0395C494 B.LS 0x395C4B8
	0x0395C498 ADD X8, X8, W1, 0x3, SXTW
	0x0395C49C LDR X0, [X8 + 0x20]
	0x0395C4A0 CBZ X0, 0x395C4B4
	0x0395C4A4 MOV W1, W31
	0x0395C4A8 MOV X2, X31
	0x0395C4AC LDR X30, [X31], #0x10
	0x0395C4B0 B 0x39282DC
	0x0395C4B4 BL 0x1C16F20
	0x0395C4B8 BL 0x1C16F28
	0x0395C4BC STR X30, [X31 - 0x10]!
	0x0395C4C0 LDR X8, [X0 + 0x18]
	0x0395C4C4 CBZ X8, 0x395C4F0
	0x0395C4C8 LDR W9, [X8 + 0x18]
	0x0395C4CC CMP W9, W1
	0x0395C4D0 B.LS 0x395C4F4
	0x0395C4D4 ADD X8, X8, W1, 0x3, SXTW
	0x0395C4D8 LDR X0, [X8 + 0x20]
	0x0395C4DC CBZ X0, 0x395C4F0
	0x0395C4E0 MOV W1, W31
	0x0395C4E4 MOV X2, X31
	0x0395C4E8 LDR X30, [X31], #0x10
	0x0395C4EC B 0x39282DC
	0x0395C4F0 BL 0x1C16F20
	0x0395C4F4 BL 0x1C16F28
	0x0395C4F8 SUB X31, X31, 0x20
	0x0395C4FC STR X30, [X31 + 0x10]
	0x0395C500 CBZ X1, 0x395C52C
	0x0395C504 LDR V0, [X1 + 0x1]
	0x0395C508 MOV X3, X31
	0x0395C50C STR V0, [X31]
	0x0395C510 LDP X1, X2, [X0 + 0x10]
	0x0395C514 ADD X0, X31, 0x0
	0x0395C518 BL 0x38FE758
	0x0395C51C LDR X30, [X31 + 0x10]
	0x0395C520 AND W0, W0, 0x1
	0x0395C524 ADD X31, X31, 0x20
	0x0395C528 RET
	0x0395C52C BL 0x1C16F20
	0x0395C530 SUB X31, X31, 0x30
	0x0395C534 STP X30, X21, [X31 + 0x10]
	0x0395C538 STP X20, X19, [X31 + 0x20]
	0x0395C53C ADRP X21, 0xA85000
	0x0395C540 LDRB W8, [X21 + 0x9A7]
	0x0395C544 MOV X20, X1
	0x0395C548 MOV X19, X0
	0x0395C54C TBNZ X8, 0x0, 0x395C588
	0x0395C550 ADRP X0, 0x7F3000
	0x0395C554 LDR X0, [X0 + 0x780]
	0x0395C558 BL 0x1C16CF4
	0x0395C55C ADRP X0, 0x7F3000
	0x0395C560 LDR X0, [X0 + 0x788]
	0x0395C564 BL 0x1C16CF4
	0x0395C568 ADRP X0, 0x7BF000
	0x0395C56C LDR X0, [X0 + 0x600]
	0x0395C570 BL 0x1C16CF4
	0x0395C574 ADRP X0, 0x79B000
	0x0395C578 LDR X0, [X0 + 0xB68]
	0x0395C57C BL 0x1C16CF4
	0x0395C580 MOVZ W8, 0x1
	0x0395C584 STRB W8, [X21 + 0x9A7]
	0x0395C588 CBZ X20, 0x395C650
	0x0395C58C ADRP X8, 0x7BF000
	0x0395C590 LDR X8, [X8 + 0x600]
	0x0395C594 LDR X9, [X20 + 0x18]
	0x0395C598 LDR X0, [X8]
	0x0395C59C STR X9, [X31 + 0x8]
	0x0395C5A0 LDR W21, [X19 + 0x10]
	0x0395C5A4 LDR W8, [X0 + 0xE0]
	0x0395C5A8 CBNZ W8, 0x395C5B0
	0x0395C5AC BL 0x1C16DFC
	0x0395C5B0 ADD X0, X31, 0x8
	0x0395C5B4 MOV W1, W21
	0x0395C5B8 MOV X2, X31
	0x0395C5BC BL 0x38FE204
	0x0395C5C0 TBZ X0, 0x0, 0x395C630
	0x0395C5C4 LDR X8, [X19 + 0x18]
	0x0395C5C8 CBZ X8, 0x395C650
	0x0395C5CC LDR X0, [X8 + 0x10]
	0x0395C5D0 CBZ X0, 0x395C650
	0x0395C5D4 ADRP X8, 0x7F3000
	0x0395C5D8 LDR X1, [X20 + 0x20]
	0x0395C5DC LDR X8, [X8 + 0x780]
	0x0395C5E0 LDR X2, [X8]
	0x0395C5E4 BL 0x2AA528C
	0x0395C5E8 TBZ X0, 0x0, 0x395C638
	0x0395C5EC LDR X8, [X19 + 0x18]
	0x0395C5F0 CBZ X8, 0x395C650
	0x0395C5F4 LDR X0, [X8 + 0x10]
	0x0395C5F8 CBZ X0, 0x395C650
	0x0395C5FC ADRP X8, 0x7F3000
	0x0395C600 LDR X1, [X20 + 0x20]
	0x0395C604 LDR X8, [X8 + 0x788]
	0x0395C608 LDR X2, [X8]
	0x0395C60C BL 0x2AA5018
	0x0395C610 CBZ X0, 0x395C650
	0x0395C614 ADRP X8, 0x79B000
	0x0395C618 LDR W1, [X19 + 0x10]
	0x0395C61C LDR X8, [X8 + 0xB68]
	0x0395C620 LDR X2, [X8]
	0x0395C624 BL 0x2FDCA84
	0x0395C628 EOR W8, W0, 0x1
	0x0395C62C B 0x395C63C
	0x0395C630 MOV W8, W31
	0x0395C634 B 0x395C63C
	0x0395C638 MOVZ W8, 0x1
	0x0395C63C LDP X20, X19, [X31 + 0x20]
	0x0395C640 LDP X30, X21, [X31 + 0x10]
	0x0395C644 AND W0, W8, 0x1
	0x0395C648 ADD X31, X31, 0x30
	0x0395C64C RET
	0x0395C650 BL 0x1C16F20
	0x0395C654 B 0x395C658
	0x0395C658 SUB X31, X31, 0xE0
	0x0395C65C STR D10, [X31 + 0x80]
	0x0395C660 STP D9, D8, [X31 + 0x88]
	0x0395C664 STR X30, [X31 + 0x98]
	0x0395C668 STP X26, X25, [X31 + 0xA0]
	0x0395C66C STP X24, X23, [X31 + 0xB0]
	0x0395C670 STP X22, X21, [X31 + 0xC0]
	0x0395C674 STP X20, X19, [X31 + 0xD0]
	0x0395C678 ADRP X19, 0xA85000
	0x0395C67C LDRB W8, [X19 + 0x9A9]
	0x0395C680 MOV X21, X0
	0x0395C684 TBNZ X8, 0x0, 0x395C75C
	0x0395C688 ADRP X0, 0x7F3000
	0x0395C68C LDR X0, [X0 + 0x790]
	0x0395C690 BL 0x1C16CF4
	0x0395C694 ADRP X0, 0x7F3000
	0x0395C698 LDR X0, [X0 + 0x798]
	0x0395C69C BL 0x1C16CF4
	0x0395C6A0 ADRP X0, 0x7F3000
	0x0395C6A4 LDR X0, [X0 + 0x7A0]
	0x0395C6A8 BL 0x1C16CF4
	0x0395C6AC ADRP X0, 0x7F3000
	0x0395C6B0 LDR X0, [X0 + 0x7A8]
	0x0395C6B4 BL 0x1C16CF4
	0x0395C6B8 ADRP X0, 0x7F3000
	0x0395C6BC LDR X0, [X0 + 0x7B0]
	0x0395C6C0 BL 0x1C16CF4
	0x0395C6C4 ADRP X0, 0x7F3000
	0x0395C6C8 LDR X0, [X0 + 0x7B8]
	0x0395C6CC BL 0x1C16CF4
	0x0395C6D0 ADRP X0, 0x7F3000
	0x0395C6D4 LDR X0, [X0 + 0x7C0]
	0x0395C6D8 BL 0x1C16CF4
	0x0395C6DC ADRP X0, 0x79E000
	0x0395C6E0 LDR X0, [X0 + 0xA88]
	0x0395C6E4 BL 0x1C16CF4
	0x0395C6E8 ADRP X0, 0x79E000
	0x0395C6EC LDR X0, [X0 + 0xAA0]
	0x0395C6F0 BL 0x1C16CF4
	0x0395C6F4 ADRP X0, 0x7F2000
	0x0395C6F8 LDR X0, [X0 + 0xA38]
	0x0395C6FC BL 0x1C16CF4
	0x0395C700 ADRP X0, 0x7F3000
	0x0395C704 LDR X0, [X0 + 0x1C8]
	0x0395C708 BL 0x1C16CF4
	0x0395C70C ADRP X0, 0x7F3000
	0x0395C710 LDR X0, [X0 + 0x7C8]
	0x0395C714 BL 0x1C16CF4
	0x0395C718 ADRP X0, 0x79E000
	0x0395C71C LDR X0, [X0 + 0xAC8]
	0x0395C720 BL 0x1C16CF4
	0x0395C724 ADRP X0, 0x7F3000
	0x0395C728 LDR X0, [X0 + 0x7D0]
	0x0395C72C BL 0x1C16CF4
	0x0395C730 ADRP X0, 0x7F1000
	0x0395C734 LDR X0, [X0 + 0xDE8]
	0x0395C738 BL 0x1C16CF4
	0x0395C73C ADRP X0, 0x7F1000
	0x0395C740 LDR X0, [X0 + 0xDF0]
	0x0395C744 BL 0x1C16CF4
	0x0395C748 ADRP X0, 0x7F2000
	0x0395C74C LDR X0, [X0 + 0x590]
	0x0395C750 BL 0x1C16CF4
	0x0395C754 MOVZ W8, 0x1
	0x0395C758 STRB W8, [X19 + 0x9A9]
	0x0395C75C STP X31, X31, [X31 + 0x30]
	0x0395C760 STR X31, [X31 + 0x40]
	0x0395C764 CBZ X21, 0x395CA10
	0x0395C768 ADRP X8, 0x7F3000
	0x0395C76C LDR X8, [X8 + 0x790]
	0x0395C770 MOV X0, X21
	0x0395C774 LDR X1, [X8]
	0x0395C778 BL 0x21B2678
	0x0395C77C TBZ X0, 0x0, 0x395C9C0
	0x0395C780 ADRP X8, 0x7F3000
	0x0395C784 LDR X8, [X8 + 0x798]
	0x0395C788 MOV X0, X21
	0x0395C78C LDR X1, [X8]
	0x0395C790 BL 0x21BD4C4
	0x0395C794 CMP W0, 0x2
	0x0395C798 B.LT 0x395C9C0
	0x0395C79C ADRP X8, 0x7F1000
	0x0395C7A0 LDR X8, [X8 + 0xDE8]
	0x0395C7A4 LDR X0, [X8]
	0x0395C7A8 BL 0x1C16F10
	0x0395C7AC ADRP X8, 0x7F3000
	0x0395C7B0 LDR X8, [X8 + 0x1C8]
	0x0395C7B4 MOV X19, X0
	0x0395C7B8 LDR X1, [X8]
	0x0395C7BC BL 0x301B7C4
	0x0395C7C0 ADRP X20, 0x7F1000
	0x0395C7C4 LDR X20, [X20 + 0xDF0]
	0x0395C7C8 STR X19, [X31 + 0x78]
	0x0395C7CC LDR X0, [X20]
	0x0395C7D0 BL 0x1C16F10
	0x0395C7D4 ADRP X22, 0x7F2000
	0x0395C7D8 LDR X22, [X22 + 0xA38]
	0x0395C7DC MOV X23, X0
	0x0395C7E0 LDR X1, [X22]
	0x0395C7E4 BL 0x301B7C4
	0x0395C7E8 LDR X0, [X20]
	0x0395C7EC STR X23, [X31 + 0x70]
	0x0395C7F0 BL 0x1C16F10
	0x0395C7F4 LDR X1, [X22]
	0x0395C7F8 MOV X20, X0
	0x0395C7FC BL 0x301B7C4
	0x0395C800 ADRP X22, 0x7F3000
	0x0395C804 LDR X22, [X22 + 0x7D0]
	0x0395C808 STR X20, [X31 + 0x68]
	0x0395C80C LDR X0, [X22]
	0x0395C810 BL 0x1C16F10
	0x0395C814 ADRP X25, 0x7F3000
	0x0395C818 LDR X25, [X25 + 0x7C8]
	0x0395C81C MOV X24, X0
	0x0395C820 LDR X1, [X25]
	0x0395C824 BL 0x301B7C4
	0x0395C828 LDR X0, [X22]
	0x0395C82C STR X24, [X31 + 0x60]
	0x0395C830 BL 0x1C16F10
	0x0395C834 LDR X1, [X25]
	0x0395C838 MOV X25, X0
	0x0395C83C BL 0x301B7C4
	0x0395C840 ADRP X8, 0x79E000
	0x0395C844 LDR X8, [X8 + 0xAC8]
	0x0395C848 STR X25, [X31 + 0x58]
	0x0395C84C LDR X0, [X8]
	0x0395C850 BL 0x1C16F10
	0x0395C854 ADRP X8, 0x79E000
	0x0395C858 LDR X8, [X8 + 0xAA0]
	0x0395C85C MOV X22, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA86000
	011 Move W8, [X21+2466]
	012 Move V8, V0
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x7F4000
	020 Move X0, [X0+1368]
	021 Call 0x1C17CF4
	022 Move X0, 0x7C0000
	023 Move X0, [X0+1536]
	024 Call 0x1C17CF4
	025 Move X0, 0x7F2000
	026 Move X0, [X0+3936]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2466], W8
	030 Compare X20, 0
	031 JumpIfEqual {278}
	032 Move X8, [X20+32]
	033 Compare X8, 0
	034 JumpIfEqual {278}
	035 Move X9, 0x7F4000
	036 Move X9, [X9+1368]
	037 Move W10, 1
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W11, TEMP
	041 Move [X8+76], W10
	042 Move [X8+84], W11
	043 Move X0, [X9]
	044 Move X22, 0x7C0000
	045 Move W21, [X20+24]
	046 Move W8, [X0+224]
	047 Move X22, [X22+1536]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move W1, W21
	053 Call Bevel.GetLeadingEdge, X0, X1
	054 Move [X31+8], X0
	055 Move W1, [X20+28]
	056 Move X0, X20
	057 Call Bevel.GetLeadingEdge, X0, X1
	058 Move X8, [X22]
	059 Move [X31], X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Add X0, X31, 8
	066 Move X1, X31
	067 Call Edge.IsValid, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {268}
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X0, X31, 0
	078 Move X1, X31
	079 Call Edge.IsValid, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {268}
	084 Compare X19, 0
	085 JumpIfEqual {278}
	086 Move X24, 0x7F2000
	087 Move X8, [X19]
	088 Move W21, [X31+8]
	089 Move X24, [X24+3936]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X24]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 Move X0, X19
	109 Move W1, W21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, [X19]
	112 Move W22, [X31+12]
	113 Move X1, [X24]
	114 Move X21, X0
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X19
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X2, [X0+8]
	132 Move X0, X19
	133 Move W1, W22
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X1, X0
	136 Move X0, X21
	137 Move X2, X31
	138 Call Vertex.op_Subtraction, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {278}
	141 Move X1, X31
	142 Move X21, X0
	143 Call Vertex.Normalize, X0
	144 Move X8, [X19]
	145 Move W22, [X31]
	146 Move X1, [X24]
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X19
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X2, [X0+8]
	164 Move X0, X19
	165 Move W1, W22
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X19]
	168 Move W23, [X31+4]
	169 Move X1, [X24]
	170 Move X22, X0
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X19
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X2, [X0+8]
	188 Move X0, X19
	189 Move W1, W23
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move X1, X0
	192 Move X0, X22
	193 Move X2, X31
	194 Call Vertex.op_Subtraction, X0, X1
	195 Compare X0, 0
	196 JumpIfEqual {278}
	197 Move X1, X31
	198 Move X22, X0
	199 Call Vertex.Normalize, X0
	200 Move X8, [X19]
	201 Move W23, [X20+16]
	202 Move X1, [X24]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X2, [X0+8]
	220 Move X0, X19
	221 Move W1, W23
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X23, X0
	224 Move X0, X21
	225 Move V0, V8
	226 Move X1, X31
	227 Call Vertex.op_Multiply, X0, V0
	228 Compare X23, 0
	229 JumpIfEqual {278}
	230 Move X1, X0
	231 Move X0, X23
	232 Move X2, X31
	233 Call Vertex.Add, X0, X1
	234 Move X8, [X19]
	235 Move W20, [X20+20]
	236 Move X1, [X24]
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move X0, X19
	247 Move W2, W31
	248 Call 0x1C5D788
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X2, [X0+8]
	254 Move X0, X19
	255 Move W1, W20
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X19, X0
	258 Move X0, X22
	259 Move V0, V8
	260 Move X1, X31
	261 Call Vertex.op_Multiply, X0, V0
	262 Compare X19, 0
	263 JumpIfEqual {278}
	264 Move X1, X0
	265 Move X0, X19
	266 Move X2, X31
	267 Call Vertex.Add, X0, X1
	268 Move X20, [X31+64]
	269 Move X19, [X31+72]
	270 Move X22, [X31+48]
	271 Move X21, [X31+56]
	272 Move X24, [X31+32]
	273 Move X23, [X31+40]
	274 Move X30, [X31+24]
	275 Move V8, [X31+16]
	276 Add X31, X31, 80
	277 Return 
	278 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge GetLeadingEdge(UnityEngine.ProBuilder.WingedEdge wing, System.Int32 common)

Disassembly:
	0x0395D1F0 LDR X1, [X31 + 0x48]
	0x0395D1F4 MOV X0, X19
	0x0395D1F8 MOV W2, W31
	0x0395D1FC MOV X3, X31
	0x0395D200 BL 0x3916CF4
	0x0395D204 LDR X1, [X31 + 0x40]
	0x0395D208 MOV X0, X19
	0x0395D20C MOV X2, X31
	0x0395D210 BL 0x39159C8
	0x0395D214 LDR X1, [X31 + 0x38]
	0x0395D218 MOV X0, X19
	0x0395D21C MOV X2, X31
	0x0395D220 BL 0x3915F7C
	0x0395D224 LDR X0, [X31 + 0x50]
	0x0395D228 CBZ X0, 0x395D244
	0x0395D22C ADRP X8, 0x7F2000
	0x0395D230 LDR X8, [X8 + 0x7F8]
	0x0395D234 LDR X1, [X8]
	0x0395D238 BL 0x301DDC4
	0x0395D23C MOV X1, X0
	0x0395D240 B 0x395D248
	0x0395D244 MOV X1, X31
	0x0395D248 LDR X22, [X31 + 0x20]
	0x0395D24C MOV X0, X19
	0x0395D250 MOV X2, X31
	0x0395D254 BL 0x39162AC
	0x0395D258 MOV X0, X19
	0x0395D25C MOV X1, X31
	0x0395D260 BL 0x3912AD8
	0x0395D264 CBZ X22, 0x395D53C
	0x0395D268 ADRP X8, 0x79D000
	0x0395D26C LDR X8, [X8 + 0xA88]
	0x0395D270 MOV X21, X0
	0x0395D274 MOV X0, X22
	0x0395D278 LDR X1, [X8]
	0x0395D27C BL 0x301DDC4
	0x0395D280 CBZ X21, 0x395D53C
	0x0395D284 MOV X1, X0
	0x0395D288 MOV X0, X21
	0x0395D28C MOV X2, X31
	0x0395D290 BL 0x3C13558
	0x0395D294 MOV X0, X19
	0x0395D298 MOV W1, W31
	0x0395D29C MOV X2, X31
	0x0395D2A0 BL 0x39197E8
	0x0395D2A4 MOVZ W1, 0x1F
	0x0395D2A8 MOV X0, X19
	0x0395D2AC MOV X2, X31
	0x0395D2B0 BL 0x3919D94
	0x0395D2B4 ADRP X8, 0x7F1000
	0x0395D2B8 LDR X8, [X8 + 0x590]
	0x0395D2BC LDR X0, [X8]
	0x0395D2C0 LDR W8, [X0 + 0xE0]
	0x0395D2C4 CBNZ W8, 0x395D2CC
	0x0395D2C8 BL 0x1C16DFC
	0x0395D2CC MOV X0, X19
	0x0395D2D0 MOV X1, X27
	0x0395D2D4 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA85000
	007 Move W8, [X21+2467]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7BF000
	015 Move X0, [X0+1536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2467], W8
	019 Compare X20, 0
	020 JumpIfEqual {73}
	021 Move X8, [X20+48]
	022 Compare X8, 0
	023 JumpIfEqual {73}
	024 Move X2, [X8+16]
	025 Move X9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X1, X2
	028 ShiftRight X1, 32
	029 And X1, X1, 0x7FFFFFFF
	030 Add X0, X31, 8
	031 Move [X31+8], X31
	032 Move X8, X9
	033 ShiftRight X8, 32
	034 And X8, X8, 0x7FFFFFFF
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, X2
	037 ShiftRight X8, 32
	038 And X8, X8, 0x7FFFFFFF
	039 Move [X31+8], X31
	040 Add X0, X31, 8
	041 Move W1, W2
	042 Move W2, W8
	043 Move X3, X31
	044 Call Edge..ctor, X0, X1, X2
	045 Move X0, [X31+8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Move X8, [X20+40]
	053 Compare X8, 0
	054 JumpIfEqual {73}
	055 Move X2, [X8+16]
	056 Move X9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, X9
	059 ShiftRight X8, 32
	060 And X8, X8, 0x7FFFFFFF
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X19, 0x7BF000
	063 Move X19, [X19+1536]
	064 Move X0, [X19]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X19]
	070 Move X8, [X0+184]
	071 Move X8, [X8]
	072 Move [X31+8], X8
	073 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0395D2D8 BL 0x393AE2C
	0x0395D2DC ADD X1, X31, 0x8C
	0x0395D2E0 MOV X0, X19
	0x0395D2E4 MOV X2, X31
	0x0395D2E8 BL 0x3977F1C
	0x0395D2EC ADRP X8, 0x7F2000
	0x0395D2F0 LDR X8, [X8 + 0x828]
	0x0395D2F4 LDR X0, [X8]
	0x0395D2F8 BL 0x1C16F10
	0x0395D2FC ADRP X8, 0x7F2000
	0x0395D300 LDR X8, [X8 + 0x800]
	0x0395D304 MOV X29, X0
	0x0395D308 LDR X1, [X8]
	0x0395D30C BL 0x301B7C4
	0x0395D310 CBZ X29, 0x395D53C
	0x0395D314 ADRP X21, 0x7F2000
	0x0395D318 LDR X21, [X21 + 0x7F0]
	0x0395D31C LDR W10, [X29 + 0x1C]
	0x0395D320 LDR X8, [X29 + 0x10]
	0x0395D324 LDR X9, [X21]
	0x0395D328 ADD W10, W10, 0x1
	0x0395D32C STR W10, [X29 + 0x1C]
	0x0395D330 CBZ X8, 0x395D53C
	0x0395D334 LDRSW X10, [X29 + 0x18]
	0x0395D338 LDR W11, [X8 + 0x18]
	0x0395D33C CMP W10, W11
	0x0395D340 B.CS 0x395D358
	0x0395D344 ADD W9, W10, 0x1
	0x0395D348 ADD X8, X8, X10, 0x3, LSL
	0x0395D34C STR W9, [X29 + 0x18]
	0x0395D350 STR X19, [X8 + 0x20]
	0x0395D354 B 0x395D370
	0x0395D358 LDR X8, [X9 + 0x20]
	0x0395D35C MOV X0, X29
	0x0395D360 MOV X1, X19
	0x0395D364 LDR X8, [X8 + 0xC0]
	0x0395D368 LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA85000
	005 Move X20, 0x798000
	006 Move W8, [X19+2468]
	007 Move X20, [X20+3672]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x7F3000
	013 Move X0, [X0+1368]
	014 Call 0x1C17CF4
	015 Move X0, 0x798000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2468], W8
	020 Move X0, [X20]
	021 Move W1, 3
	022 Call 0x1C17D6C
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move W8, [X0+24]
	026 Compare W8, 0
	027 JumpIfEqual {42}
	028 Move W9, 2
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X0+32], W9
	031 Move X8, 0x7F3000
	032 Move X8, [X8+1368]
	033 Move W9, 1
	034 Move [X0+36], W9
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F28
	043 Call 0x1C17F20

