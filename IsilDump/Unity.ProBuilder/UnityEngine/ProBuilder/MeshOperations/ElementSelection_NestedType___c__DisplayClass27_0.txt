Type: UnityEngine.ProBuilder.MeshOperations.ElementSelection/<>c__DisplayClass27_0

Method: System.Void .ctor()

Disassembly:
	0x0396C150 STR V0, [X31 + 0x1E]
	0x0396C154 STP V0, V0, [X31 + 0x1A0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <FindHoles>b__1(UnityEngine.ProBuilder.WingedEdge w)

Disassembly:
	0x0396C158 STP V0, V0, [X31 + 0x180]
	0x0396C15C STP V0, V0, [X31 + 0x160]
	0x0396C160 STP V0, V0, [X31 + 0x120]
	0x0396C164 CBZ X20, 0x396D0D4
	0x0396C168 ADRP X8, 0x7E3000
	0x0396C16C LDR X8, [X8 + 0xD88]
	0x0396C170 MOV X0, X20
	0x0396C174 LDR X1, [X8]
	0x0396C178 BL 0x21B2678
	0x0396C17C TBZ X0, 0x0, 0x396D0D4
	0x0396C180 CBZ X24, 0x396D714
	0x0396C184 MOV X0, X24
	0x0396C188 MOV X1, X31
	0x0396C18C MOV X2, X31
	0x0396C190 BL 0x3912114
	0x0396C194 ADRP X8, 0x7E1000
	0x0396C198 LDR X8, [X8 + 0xDE8]
	0x0396C19C MOV X19, X0
	0x0396C1A0 LDR X8, [X8]
	0x0396C1A4 MOV X0, X8
	0x0396C1A8 BL 0x1C16F10
	0x0396C1AC ADRP X8, 0x7E1000
	0x0396C1B0 LDR X8, [X8 + 0xDE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA76000
	006 Move W8, [X21+2539]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x789000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2539], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {33}
	023 Move X8, 0x789000
	024 Move X8, [X8+3576]
	025 Move W1, [X19+24]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call HashSet`1<Int32>.Contains, X0, X1
	032 Return X0
	033 Call 0x1C17F20

Method: System.Boolean <FindHoles>b__2(UnityEngine.ProBuilder.WingedEdge w)

Disassembly:
	0x0396C1B4 MOV X1, X19
	0x0396C1B8 MOV X29, X0
	0x0396C1BC LDR X2, [X8]
	0x0396C1C0 BL 0x301B8E0
	0x0396C1C4 LDR X8, [X24 + 0x30]
	0x0396C1C8 CBZ X8, 0x396D714
	0x0396C1CC LDR W8, [X8 + 0x18]
	0x0396C1D0 MOV X0, X24
	0x0396C1D4 MOV X1, X31
	0x0396C1D8 STR W8, [X31 + 0x1C]
	0x0396C1DC BL 0x3916198
	0x0396C1E0 MOV X21, X0
	0x0396C1E4 MOV X0, X24
	0x0396C1E8 MOV X1, X31
	0x0396C1EC BL 0x39162B4
	0x0396C1F0 ADRP X8, 0x7E1000
	0x0396C1F4 LDR X8, [X8 + 0xDF0]
	0x0396C1F8 MOV X22, X0
	0x0396C1FC LDR X8, [X8]
	0x0396C200 MOV X0, X8
	0x0396C204 BL 0x1C16F10
	0x0396C208 ADRP X8, 0x7E2000
	0x0396C20C LDR X8, [X8 + 0xA38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA76000
	006 Move W8, [X21+2540]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x789000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2540], W8
	018 Compare X19, 0
	019 JumpIfEqual {33}
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {33}
	023 Move X8, 0x789000
	024 Move X8, [X8+3576]
	025 Move W1, [X19+28]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, [X8]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call HashSet`1<Int32>.Contains, X0, X1
	032 Return X0
	033 Call 0x1C17F20

