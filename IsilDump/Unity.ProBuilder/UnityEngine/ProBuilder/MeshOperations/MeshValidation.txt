Type: UnityEngine.ProBuilder.MeshOperations.MeshValidation

Method: System.Boolean ContainsDegenerateTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x039769E4 MADD X8, X10, X11, X8
	0x039769E8 STR W9, [X21 + 0x18]
	0x039769EC STR X1, [X8 + 0x20]
	0x039769F0 STR W2, [X8 + 0x28]
	0x039769F4 B 0x3976A0C
	0x039769F8 LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {6}
	004 Move X1, [X0+40]
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Boolean ContainsDegenerateTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x039769FC MOV X0, X21
	0x03976A00 LDR X8, [X8 + 0xC0]
	0x03976A04 LDR X3, [X8 + 0x70]
	0x03976A08 BL 0x308A728
	0x03976A0C ADRP X9, 0x7DA000
	0x03976A10 LDR W10, [X19 + 0x1C]
	0x03976A14 LDR X8, [X19 + 0x10]
	0x03976A18 LDR X9, [X9 + 0x110]
	0x03976A1C ADD W10, W10, 0x1
	0x03976A20 LDR X9, [X9]
	0x03976A24 STR W10, [X19 + 0x1C]
	0x03976A28 CBZ X8, 0x3976B18
	0x03976A2C LDRSW X10, [X19 + 0x18]
	0x03976A30 LDR W11, [X8 + 0x18]
	0x03976A34 CMP W10, W11
	0x03976A38 B.CS 0x3976A50
	0x03976A3C ADD W9, W10, 0x1
	0x03976A40 ADD X8, X8, X10, 0x3, LSL
	0x03976A44 STR W9, [X19 + 0x18]
	0x03976A48 STR X21, [X8 + 0x20]
	0x03976A4C B 0x3976AE4
	0x03976A50 LDR X8, [X9 + 0x20]
	0x03976A54 MOV X0, X19
	0x03976A58 MOV X1, X21
	0x03976A5C LDR X8, [X8 + 0xC0]
	0x03976A60 LDR X2, [X8 + 0x70]
	0x03976A64 BL 0x301BF90
	0x03976A68 B 0x3976AE4
	0x03976A6C LDR X2, [X27]
	0x03976A70 MOV X0, X19
	0x03976A74 MOV W1, W21
	0x03976A78 BL 0x301BCCC
	0x03976A7C CBZ X0, 0x3976B18
	0x03976A80 ADRP X9, 0x7DA000
	0x03976A84 LDR X1, [X28]
	0x03976A88 LDR W2, [X20 + 0x18]
	0x03976A8C LDR W10, [X0 + 0x1C]
	0x03976A90 LDR X8, [X0 + 0x10]
	0x03976A94 LDR X9, [X9 + 0x108]
	0x03976A98 ADD W10, W10, 0x1
	0x03976A9C LDR X9, [X9]
	0x03976AA0 STR W10, [X0 + 0x1C]
	0x03976AA4 CBZ X8, 0x3976B18
	0x03976AA8 LDRSW X10, [X0 + 0x18]
	0x03976AAC LDR W11, [X8 + 0x18]
	0x03976AB0 CMP W10, W11
	0x03976AB4 B.CS 0x3976AD4
	0x03976AB8 MOVZ W11, 0xC
	0x03976ABC ADD W9, W10, 0x1
	0x03976AC0 MADD X8, X10, X11, X8
	0x03976AC4 STR W9, [X0 + 0x18]
	0x03976AC8 STR X1, [X8 + 0x20]
	0x03976ACC STR W2, [X8 + 0x28]
	0x03976AD0 B 0x3976AE4
	0x03976AD4 LDR X8, [X9 + 0x20]
	0x03976AD8 LDR X8, [X8 + 0xC0]
	0x03976ADC LDR X3, [X8 + 0x70]
	0x03976AE0 BL 0x308A728
	0x03976AE4 LDR W8, [X24 + 0x18]
	0x03976AE8 ADD W25, W25, 0x3
	0x03976AEC CMP W25, W8
	0x03976AF0 B.LT 0x3976880
	0x03976AF4 MOV X0, X19
	0x03976AF8 LDP X20, X19, [X31 + 0x60]
	0x03976AFC LDP X22, X21, [X31 + 0x50]
	0x03976B00 LDP X24, X23, [X31 + 0x40]
	0x03976B04 LDP X26, X25, [X31 + 0x30]
	0x03976B08 LDP X28, X27, [X31 + 0x20]
	0x03976B0C LDP X29, X30, [X31 + 0x10]
	0x03976B10 ADD X31, X31, 0x70
	0x03976B14 RET
	0x03976B18 BL 0x1C16F20
	0x03976B1C BL 0x1C16F28
	0x03976B20 MOV X1, X31
	0x03976B24 B 0x33BDD8C
	0x03976B28 SUB X31, X31, 0xD0
	0x03976B2C STP X29, X30, [X31 + 0x70]
	0x03976B30 STP X28, X27, [X31 + 0x80]
	0x03976B34 STP X26, X25, [X31 + 0x90]
	0x03976B38 STP X24, X23, [X31 + 0xA0]
	0x03976B3C STP X22, X21, [X31 + 0xB0]
	0x03976B40 STP X20, X19, [X31 + 0xC0]
	0x03976B44 ADRP X20, 0xA6B000
	0x03976B48 ADRP X19, 0x77D000
	0x03976B4C LDRB W8, [X20 + 0xA0E]
	0x03976B50 LDR X19, [X19 + 0x598]
	0x03976B54 MOV X21, X1
	0x03976B58 MOV X25, X0
	0x03976B5C TBNZ X8, 0x0, 0x3976C40
	0x03976B60 ADRP X0, 0x787000
	0x03976B64 LDR X0, [X0 + 0x858]
	0x03976B68 BL 0x1C16CF4
	0x03976B6C ADRP X0, 0x7A7000
	0x03976B70 LDR X0, [X0 + 0x8D0]
	0x03976B74 BL 0x1C16CF4
	0x03976B78 ADRP X0, 0x7D8000
	0x03976B7C LDR X0, [X0 + 0xD08]
	0x03976B80 BL 0x1C16CF4
	0x03976B84 ADRP X0, 0x787000
	0x03976B88 LDR X0, [X0 + 0x870]
	0x03976B8C BL 0x1C16CF4
	0x03976B90 ADRP X0, 0x7DA000
	0x03976B94 LDR X0, [X0 + 0x138]
	0x03976B98 BL 0x1C16CF4
	0x03976B9C ADRP X0, 0x7D8000
	0x03976BA0 LDR X0, [X0 + 0xD78]
	0x03976BA4 BL 0x1C16CF4
	0x03976BA8 ADRP X0, 0x7D7000
	0x03976BAC LDR X0, [X0 + 0xC80]
	0x03976BB0 BL 0x1C16CF4
	0x03976BB4 ADRP X0, 0x787000
	0x03976BB8 LDR X0, [X0 + 0x888]
	0x03976BBC BL 0x1C16CF4
	0x03976BC0 ADRP X0, 0x77E000
	0x03976BC4 LDR X0, [X0 + 0xE10]
	0x03976BC8 BL 0x1C16CF4
	0x03976BCC ADRP X0, 0x7D7000
	0x03976BD0 LDR X0, [X0 + 0xE10]
	0x03976BD4 BL 0x1C16CF4
	0x03976BD8 ADRP X0, 0x77E000
	0x03976BDC LDR X0, [X0 + 0xE18]
	0x03976BE0 BL 0x1C16CF4
	0x03976BE4 ADRP X0, 0x781000
	0x03976BE8 LDR X0, [X0 + 0xB70]
	0x03976BEC BL 0x1C16CF4
	0x03976BF0 ADRP X0, 0x7DA000
	0x03976BF4 LDR X0, [X0 + 0x140]
	0x03976BF8 BL 0x1C16CF4
	0x03976BFC ADRP X0, 0x77E000
	0x03976C00 LDR X0, [X0 + 0xE28]
	0x03976C04 BL 0x1C16CF4
	0x03976C08 ADRP X0, 0x77E000
	0x03976C0C LDR X0, [X0 + 0xE30]
	0x03976C10 BL 0x1C16CF4
	0x03976C14 ADRP X0, 0x7D7000
	0x03976C18 LDR X0, [X0 + 0xDF0]
	0x03976C1C BL 0x1C16CF4
	0x03976C20 ADRP X0, 0x784000
	0x03976C24 LDR X0, [X0 + 0x4B8]
	0x03976C28 BL 0x1C16CF4
	0x03976C2C ADRP X0, 0x77D000
	0x03976C30 LDR X0, [X0 + 0x598]
	0x03976C34 BL 0x1C16CF4
	0x03976C38 MOVZ W8, 0x1
	0x03976C3C STRB W8, [X20 + 0xA0E]
	0x03976C40 LDR X0, [X19]
	0x03976C44 STR W31, [X31 + 0x6C]
	0x03976C48 LDR W8, [X0 + 0xE0]
	0x03976C4C CBNZ W8, 0x3976C54
	0x03976C50 BL 0x1C16DFC
	0x03976C54 MOV X0, X25
	0x03976C58 MOV X1, X31
	0x03976C5C MOV X2, X31
	0x03976C60 BL 0x3C3883C
	0x03976C64 TBNZ X0, 0x0, 0x3977454
	0x03976C68 CBZ X25, 0x3977450
	0x03976C6C MOV X0, X25
	0x03976C70 MOV X1, X31
	0x03976C74 BL 0x3916198
	0x03976C78 MOV X23, X0
	0x03976C7C MOV X0, X25
	0x03976C80 MOV X1, X31
	0x03976C84 BL 0x39162B4
	0x03976C88 CBZ X23, 0x3977450
	0x03976C8C STR X21, [X31 + 0x18]
	0x03976C90 ADRP X22, 0x7D8000
	0x03976C94 LDR X22, [X22 + 0xD78]
	0x03976C98 ADRP X21, 0x787000
	0x03976C9C ADRP X20, 0x7DA000
	0x03976CA0 LDR X24, [X25 + 0x58]
	0x03976CA4 LDR X1, [X22]
	0x03976CA8 LDR X21, [X21 + 0x888]
	0x03976CAC LDR X20, [X20 + 0x138]
	0x03976CB0 MOV X26, X0
	0x03976CB4 MOV X0, X23
	0x03976CB8 BL 0x2A0A118
	0x03976CBC LDR X8, [X21]
	0x03976CC0 MOV W19, W0
	0x03976CC4 MOV X0, X8
	0x03976CC8 BL 0x1C16F10
	0x03976CCC LDR X2, [X20]
	0x03976CD0 MOV W1, W19
	0x03976CD4 STR X0, [X31 + 0x50]
	0x03976CD8 BL 0x2A09AB4
	0x03976CDC CBZ X26, 0x3977450
	0x03976CE0 STR X23, [X31 + 0x60]
	0x03976CE4 LDR X1, [X22]
	0x03976CE8 ADRP X22, 0x7D7000
	0x03976CEC ADRP X23, 0x7DA000
	0x03976CF0 LDR X22, [X22 + 0xDF0]
	0x03976CF4 LDR X23, [X23 + 0x140]
	0x03976CF8 MOV X0, X26
	0x03976CFC STR X26, [X31 + 0x48]
	0x03976D00 BL 0x2A0A118
	0x03976D04 LDR X8, [X21]
	0x03976D08 MOV W19, W0
	0x03976D0C MOV X0, X8
	0x03976D10 BL 0x1C16F10
	0x03976D14 LDR X2, [X20]
	0x03976D18 MOV W1, W19
	0x03976D1C MOV X26, X0
	0x03976D20 BL 0x2A09AB4
	0x03976D24 MOV X0, X25
	0x03976D28 MOV X1, X31
	0x03976D2C BL 0x39140C8
	0x03976D30 LDR X8, [X22]
	0x03976D34 MOV W19, W0
	0x03976D38 MOV X0, X8
	0x03976D3C BL 0x1C16F10
	0x03976D40 LDR X2, [X23]
	0x03976D44 MOV W1, W19
	0x03976D48 STR X0, [X31 + 0x20]
	0x03976D4C BL 0x301B830
	0x03976D50 LDR X0, [X21]
	0x03976D54 BL 0x1C16F10
	0x03976D58 LDR X2, [X20]
	0x03976D5C MOVZ W1, 0x8
	0x03976D60 MOV X19, X0
	0x03976D64 BL 0x2A09AB4
	0x03976D68 LDR X9, [X25 + 0x28]
	0x03976D6C STR X25, [X31 + 0x10]
	0x03976D70 CBZ X9, 0x3977450
	0x03976D74 LDR W8, [X9 + 0x18]
	0x03976D78 MOV X20, X26
	0x03976D7C CMP W8, 0x1
	0x03976D80 B.LT 0x39773E8
	0x03976D84 ADRP X26, 0x784000
	0x03976D88 LDR X26, [X26 + 0x4B8]
	0x03976D8C MOV W10, W31
	0x03976D90 STR X20, [X31 + 0x58]
	0x03976D94 STR X19, [X31 + 0x40]
	0x03976D98 STR X9, [X31 + 0x28]
	0x03976D9C CMP W10, W8
	0x03976DA0 B.CS 0x397744C
	0x03976DA4 CBZ X19, 0x3977450
	0x03976DA8 ADD X8, X9, W10, 0x3, SXTW
	0x03976DAC STR W10, [X31 + 0x3C]
	0x03976DB0 LDR X21, [X8 + 0x20]
	0x03976DB4 ADRP X8, 0x7A7000
	0x03976DB8 LDR X8, [X8 + 0x8D0]
	0x03976DBC MOV X0, X19
	0x03976DC0 LDR X1, [X8]
	0x03976DC4 BL 0x2A0A4C4
	0x03976DC8 ADRP X8, 0x77E000
	0x03976DCC LDR X8, [X8 + 0xE30]
	0x03976DD0 LDR X0, [X8]
	0x03976DD4 BL 0x1C16F10
	0x03976DD8 ADRP X8, 0x781000
	0x03976DDC LDR X8, [X8 + 0xB70]
	0x03976DE0 MOV X28, X0
	0x03976DE4 LDR X1, [X8]
	0x03976DE8 BL 0x2FDBF14
	0x03976DEC CBZ X21, 0x3977450
	0x03976DF0 LDR X23, [X21 + 0x10]
	0x03976DF4 STR X21, [X31 + 0x30]
	0x03976DF8 CBZ X23, 0x3977450
	0x03976DFC LDR W8, [X23 + 0x18]
	0x03976E00 CMP W8, 0x1
	0x03976E04 B.LT 0x3977330
	0x03976E08 MOV W21, W31
	0x03976E0C CMP W21, W8
	0x03976E10 B.CS 0x397744C
	0x03976E14 ADD X19, X23, W21, 0x2, SXTW
	0x03976E18 LDRSW X10, [X19 + 0x20]!
	0x03976E1C CBZ X24, 0x3977450
	0x03976E20 LDR W9, [X24 + 0x18]
	0x03976E24 CMP W10, W9
	0x03976E28 B.CS 0x397744C
	0x03976E2C ADD W20, W21, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X21, 0xA6C000
	014 Move W8, [X21+2569]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x77E000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x7D8000
	025 Move X0, [X0+3504]
	026 Call 0x1C17CF4
	027 Move X0, 0x7D8000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0x77E000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x785000
	034 Move X0, [X0+1208]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2569], W8
	038 Compare X20, 0
	039 JumpIfEqual {228}
	040 Compare X19, 0
	041 JumpIfEqual {228}
	042 Move X10, 0x7D8000
	043 Move X8, [X19]
	044 Move X10, [X10+3504]
	045 Move X20, [X20+88]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X22, 0x77E000
	065 Move X22, [X22+3584]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X19, X0
	069 Compare X0, 0
	070 JumpIfEqual {229}
	071 Move X21, 0x77E000
	072 Move X23, 0x7D8000
	073 Move X25, 0x785000
	074 Move X21, [X21+3608]
	075 Move X23, [X23+3512]
	076 Move X25, [X25+1208]
	077 Move W24, 12
	078 Move X8, [X19]
	079 Move X1, [X21]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X19
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X19
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {215}
	103 Move X8, [X19]
	104 Move X1, [X23]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X19
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X19
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {226}
	126 Move X26, [X0+16]
	127 Compare X26, 0
	128 JumpIfEqual {227}
	129 Move W8, [X26+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W27, 2
	132 Subtract W11, W27, 2
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Compare X20, 0
	135 JumpIfEqual {219}
	136 Add X9, X26, W11
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Move W10, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add W12, W11, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract W11, W27, 1
	143 Add X11, X26, W11
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add W28, W12, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add X8, X26, W27
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction MADD not yet implemented."
	152 NotImplemented "Instruction MADD not yet implemented."
	153 NotImplemented "Instruction MADD not yet implemented."
	154 Move S0, [X9+32]
	155 Move S1, [X9+36]
	156 Move V2, [X9+40]
	157 Move S3, [X10+32]
	158 Move S4, [X10+36]
	159 Move V5, [X10+40]
	160 Move X9, [X8+32]
	161 Move V6, [X8+40]
	162 Move X0, X31
	163 Move [X31+8], S6
	164 Move [X31], X9
	165 Call Math.TriangleArea, X0, X1, X2
	166 Move X8, [X25]
	167 Move X8, [X8+184]
	168 Move V1, [X8]
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 Move W8, [X26+24]
	171 Add W9, W28, 1
	172 Add W27, W27, 3
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X20, X31
	175 Move W21, 1
	176 Compare X19, 0
	177 JumpIfEqual {199}
	178 Move X8, [X19]
	179 Move X1, [X22]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move X0, X19
	190 Move W2, W31
	191 Call 0x1C5D788
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X19
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X20, 0
	200 JumpIfNotEqual {230}
	201 Move W0, W21
	202 Move X20, [X31+96]
	203 Move X19, [X31+104]
	204 Move X22, [X31+80]
	205 Move X21, [X31+88]
	206 Move X24, [X31+64]
	207 Move X23, [X31+72]
	208 Move X26, [X31+48]
	209 Move X25, [X31+56]
	210 Move X28, [X31+32]
	211 Move X27, [X31+40]
	212 Move X30, [X31+16]
	213 Add X31, X31, 112
	214 Return X0
	215 Move X20, X31
	216 Move W21, W31
	217 Compare X19, 0
	218 JumpIfNotEqual {178}
	219 Call 0x1C17F20
	220 Call 0x1C17F28
	221 Call 0x1C17F28
	222 Call 0x1C17F28
	223 Call 0x1C17F28
	224 Call 0x1C17F28
	225 Call 0x1C17F28
	226 Call 0x1C17F20
	227 Call 0x1C17F20
	228 Call 0x1C17F20
	229 Call 0x1C17F20
	230 Move X0, X20
	231 Call 0x1C17F18
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Call 0x3EB2AD0
	234 Move X20, [X0]
	235 Call 0x3EB2AE0
	236 Move [X31+24], X0
	237 Move X20, X31
	238 Move [X31+24], X0
	239 Compare X19, 0
	240 JumpIfEqual {262}
	241 Move X8, [X19]
	242 Move X1, [X22]
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Compare X9, 0
	245 JumpIfEqual {252}
	246 Move X10, [X8+176]
	247 Add X10, X10, 8
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X9, X9, 1
	251 Add X10, X10, 16
	252 Move X0, X19
	253 Move W2, W31
	254 Call 0x1C5D788
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Add X8, X8, X9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X1, [X0+8]
	260 Move X0, X19
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Compare X20, 0
	263 JumpIfNotEqual {266}
	264 Move X0, [X31+24]
	265 Call 0x1D2D690
	266 Move X0, X20
	267 Call 0x1C17F18
	268 Call 0x1991590

Method: System.Boolean ContainsDegenerateTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03976E30 CMP W20, W8
	0x03976E34 B.CS 0x397744C
	0x03976E38 MOVZ W11, 0xC
	0x03976E3C MADD X10, X10, X11, X24
	0x03976E40 ADD X22, X23, W20, 0x2, SXTW
	0x03976E44 LDP S0, S1, [X10 + 0x20]
	0x03976E48 LDR V2, [X10 + 0x28]
	0x03976E4C LDRSW X10, [X22 + 0x20]!
	0x03976E50 CMP W10, W9
	0x03976E54 B.CS 0x397744C
	0x03976E58 ADD W25, W21, 0x2
	0x03976E5C CMP W25, W8
	0x03976E60 B.CS 0x397744C
	0x03976E64 MADD X8, X10, X11, X24
	0x03976E68 ADD X27, X23, W25, 0x2, SXTW
	0x03976E6C LDP S3, S4, [X8 + 0x20]
	0x03976E70 LDR V5, [X8 + 0x28]
	0x03976E74 LDRSW X8, [X27 + 0x20]!
	0x03976E78 CMP W8, W9
	0x03976E7C B.CS 0x397744C
	0x03976E80 MADD X8, X8, X11, X24
	0x03976E84 LDR X9, [X8 + 0x20]
	0x03976E88 LDR V6, [X8 + 0x28]
	0x03976E8C MOV X0, X31
	0x03976E90 STR X9, [X31]
	0x03976E94 STR S6, [X31 + 0x8]
	0x03976E98 BL 0x3907F5C
	0x03976E9C LDR X8, [X26]
	0x03976EA0 LDR X8, [X8 + 0xB8]
	0x03976EA4 LDR V1, [X8]
	0x03976EA8 FCMP S0, S1
	0x03976EAC B.LE 0x3977320
	0x03976EB0 LDR W8, [X23 + 0x18]
	0x03976EB4 CMP W21, W8
	0x03976EB8 B.CS 0x397744C
	0x03976EBC CMP W20, W8
	0x03976EC0 B.CS 0x397744C
	0x03976EC4 CMP W25, W8
	0x03976EC8 B.CS 0x397744C
	0x03976ECC LDR W29, [X27]
	0x03976ED0 ADRP X27, 0x7D7000
	0x03976ED4 LDR W20, [X19]
	0x03976ED8 LDR W19, [X22]
	0x03976EDC LDR X27, [X27 + 0xC80]
	0x03976EE0 LDR X25, [X31 + 0x60]
	0x03976EE4 MOV W1, W20
	0x03976EE8 LDR X2, [X27]
	0x03976EEC MOV X0, X25
	0x03976EF0 BL 0x2A0A2A8
	0x03976EF4 LDR X2, [X27]
	0x03976EF8 MOV W22, W0
	0x03976EFC MOV X0, X25
	0x03976F00 MOV W1, W19
	0x03976F04 BL 0x2A0A2A8
	0x03976F08 LDR X2, [X27]
	0x03976F0C MOV W27, W0
	0x03976F10 MOV X0, X25
	0x03976F14 MOV W1, W29
	0x03976F18 BL 0x2A0A2A8
	0x03976F1C CMP W27, W0
	0x03976F20 B.EQ 0x3977320
	0x03976F24 CMP W22, W27
	0x03976F28 B.EQ 0x3977320
	0x03976F2C MOV W25, W0
	0x03976F30 CMP W22, W0
	0x03976F34 B.EQ 0x3977320
	0x03976F38 ADRP X8, 0x787000
	0x03976F3C LDR X8, [X8 + 0x870]
	0x03976F40 LDR X26, [X31 + 0x40]
	0x03976F44 ADD X2, X31, 0x6C
	0x03976F48 MOV W1, W22
	0x03976F4C LDR X3, [X8]
	0x03976F50 MOV X0, X26
	0x03976F54 BL 0x2A0BC68
	0x03976F58 TBZ X0, 0x0, 0x3976F64
	0x03976F5C LDR W20, [X31 + 0x6C]
	0x03976F60 B 0x3976F80
	0x03976F64 ADRP X8, 0x787000
	0x03976F68 LDR X8, [X8 + 0x858]
	0x03976F6C MOV X0, X26
	0x03976F70 MOV W1, W22
	0x03976F74 MOV W2, W20
	0x03976F78 LDR X3, [X8]
	0x03976F7C BL 0x2A0A344
	0x03976F80 ADRP X8, 0x787000
	0x03976F84 LDR X8, [X8 + 0x870]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA6C000
	011 Move W8, [X21+2570]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x785000
	019 Move X0, [X0+1208]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2570], W8
	023 Compare X19, 0
	024 JumpIfEqual {94}
	025 Compare X20, 0
	026 JumpIfEqual {94}
	027 Move X20, [X20+16]
	028 Compare X20, 0
	029 JumpIfEqual {94}
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X22, 0x785000
	035 Move X19, [X19+88]
	036 Move X22, [X22+1208]
	037 Move W23, 2
	038 Move W24, 12
	039 Subtract W11, W23, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare X19, 0
	042 JumpIfEqual {94}
	043 Add X9, X20, W11
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W10, [X19+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add W12, W11, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract W11, W23, 1
	050 Add X11, X20, W11
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W25, W12, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X20, W23
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction MADD not yet implemented."
	059 NotImplemented "Instruction MADD not yet implemented."
	060 NotImplemented "Instruction MADD not yet implemented."
	061 Move S0, [X9+32]
	062 Move S1, [X9+36]
	063 Move V2, [X9+40]
	064 Move S3, [X10+32]
	065 Move S4, [X10+36]
	066 Move V5, [X10+40]
	067 Move X9, [X8+32]
	068 Move V6, [X8+40]
	069 Move X0, X31
	070 Move [X31], X9
	071 Move [X31+8], S6
	072 Call Math.TriangleArea, X0, X1, X2
	073 Move X8, [X22]
	074 Move X8, [X8+184]
	075 Move V1, [X8]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move W8, [X20+24]
	078 Add W9, W25, 1
	079 Add W23, W23, 3
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 And W0, W21, 1
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X30, [X31+16]
	090 Move X25, [X31+24]
	091 Add X31, X31, 80
	092 Return X0
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: System.Boolean ContainsNonContiguousTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03976F88 ADD X2, X31, 0x6C
	0x03976F8C MOV X0, X26
	0x03976F90 MOV W1, W27
	0x03976F94 LDR X3, [X8]
	0x03976F98 BL 0x2A0BC68
	0x03976F9C TBZ X0, 0x0, 0x3976FA8
	0x03976FA0 LDR W19, [X31 + 0x6C]
	0x03976FA4 B 0x3976FC4
	0x03976FA8 ADRP X8, 0x787000
	0x03976FAC LDR X8, [X8 + 0x858]
	0x03976FB0 MOV X0, X26
	0x03976FB4 MOV W1, W27
	0x03976FB8 MOV W2, W19
	0x03976FBC LDR X3, [X8]
	0x03976FC0 BL 0x2A0A344
	0x03976FC4 ADRP X8, 0x787000
	0x03976FC8 LDR X8, [X8 + 0x870]
	0x03976FCC ADD X2, X31, 0x6C
	0x03976FD0 MOV X0, X26
	0x03976FD4 MOV W1, W25
	0x03976FD8 LDR X3, [X8]
	0x03976FDC BL 0x2A0BC68
	0x03976FE0 TBZ X0, 0x0, 0x3976FEC
	0x03976FE4 LDR W29, [X31 + 0x6C]
	0x03976FE8 B 0x3977008
	0x03976FEC ADRP X8, 0x787000
	0x03976FF0 LDR X8, [X8 + 0x858]
	0x03976FF4 MOV X0, X26
	0x03976FF8 MOV W1, W25
	0x03976FFC MOV W2, W29
	0x03977000 LDR X3, [X8]
	0x03977004 BL 0x2A0A344
	0x03977008 CBZ X28, 0x3977450
	0x0397700C ADRP X9, 0x77D000
	0x03977010 LDR W10, [X28 + 0x1C]
	0x03977014 LDR X8, [X28 + 0x10]
	0x03977018 LDR X9, [X9 + 0xE10]
	0x0397701C ADD W10, W10, 0x1
	0x03977020 LDR X9, [X9]
	0x03977024 STR W10, [X28 + 0x1C]
	0x03977028 CBZ X8, 0x3977450
	0x0397702C LDRSW X10, [X28 + 0x18]
	0x03977030 LDR W11, [X8 + 0x18]
	0x03977034 CMP W10, W11
	0x03977038 B.CS 0x397705C
	0x0397703C ADD W11, W10, 0x1
	0x03977040 ADD X10, X8, X10, 0x2, LSL
	0x03977044 STR W11, [X28 + 0x18]
	0x03977048 STR W20, [X10 + 0x20]
	0x0397704C LDR W10, [X28 + 0x1C]
	0x03977050 ADD W10, W10, 0x1
	0x03977054 STR W10, [X28 + 0x1C]
	0x03977058 B 0x3977094
	0x0397705C LDR X8, [X9 + 0x20]
	0x03977060 MOV X0, X28
	0x03977064 MOV W1, W20
	0x03977068 LDR X8, [X8 + 0xC0]
	0x0397706C LDR X2, [X8 + 0x70]
	0x03977070 BL 0x2FDC70C
	0x03977074 ADRP X9, 0x77D000
	0x03977078 LDR W10, [X28 + 0x1C]
	0x0397707C LDR X8, [X28 + 0x10]
	0x03977080 LDR X9, [X9 + 0xE10]
	0x03977084 ADD W10, W10, 0x1
	0x03977088 LDR X9, [X9]
	0x0397708C STR W10, [X28 + 0x1C]
	0x03977090 CBZ X8, 0x3977450
	0x03977094 LDRSW X10, [X28 + 0x18]
	0x03977098 LDR W11, [X8 + 0x18]
	0x0397709C CMP W10, W11
	0x039770A0 B.CS 0x39770C4
	0x039770A4 ADD W11, W10, 0x1
	0x039770A8 ADD X10, X8, X10, 0x2, LSL
	0x039770AC STR W11, [X28 + 0x18]
	0x039770B0 STR W19, [X10 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA6C000
	009 Move W8, [X20+2571]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7A6000
	016 Move X0, [X0+1536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2571], W8
	020 Move [X31+8], X31
	021 Compare X19, 0
	022 JumpIfEqual {99}
	023 Move X0, X19
	024 Move X1, X31
	025 Call Face.get_edgesInternal, X0
	026 Compare X0, 0
	027 JumpIfEqual {99}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {100}
	031 Move X20, [X0+32]
	032 Add X3, X31, 8
	033 Add X4, X31, 4
	034 Move X0, X19
	035 Move X2, X20
	036 ShiftRight X2, 32
	037 And X2, X2, 0x7FFFFFFF
	038 Move X1, X20
	039 Move X5, X31
	040 Move [X31+8], X20
	041 Move [X31+4], W20
	042 Call Face.TryGetNextEdge, X0, X1, X2, X3, X4
	043 Move W22, 1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {83}
	048 Move X23, 0x7A5000
	049 Move X23, [X23+1536]
	050 Move X0, [X23]
	051 Move X21, [X31+8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X20
	058 Move X2, X31
	059 Call Edge.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {83}
	064 Move X0, X19
	065 Move X1, X31
	066 Call Face.get_edgesInternal, X0
	067 Compare X0, 0
	068 JumpIfEqual {99}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X1, [X31+8]
	072 Move W2, [X31+12]
	073 Add X3, X31, 8
	074 Add X4, X31, 4
	075 Move X0, X19
	076 Move X5, X31
	077 Add W22, W22, 1
	078 Call Face.TryGetNextEdge, X0, X1, X2, X3, X4
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {50}
	083 Move X0, X19
	084 Move X1, X31
	085 Call Face.get_edgesInternal, X0
	086 Compare X0, 0
	087 JumpIfEqual {99}
	088 Move W8, [X0+24]
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X30, [X31+16]
	092 Move X23, [X31+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Add X31, X31, 64
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> EnsureFacesAreComposedOfContiguousTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x039770B4 LDR W10, [X28 + 0x1C]
	0x039770B8 ADD W10, W10, 0x1
	0x039770BC STR W10, [X28 + 0x1C]
	0x039770C0 B 0x39770FC
	0x039770C4 LDR X8, [X9 + 0x20]
	0x039770C8 MOV X0, X28
	0x039770CC MOV W1, W19
	0x039770D0 LDR X8, [X8 + 0xC0]
	0x039770D4 LDR X2, [X8 + 0x70]
	0x039770D8 BL 0x2FDC70C
	0x039770DC ADRP X9, 0x77D000
	0x039770E0 LDR W10, [X28 + 0x1C]
	0x039770E4 LDR X8, [X28 + 0x10]
	0x039770E8 LDR X9, [X9 + 0xE10]
	0x039770EC ADD W10, W10, 0x1
	0x039770F0 LDR X9, [X9]
	0x039770F4 STR W10, [X28 + 0x1C]
	0x039770F8 CBZ X8, 0x3977450
	0x039770FC LDRSW X10, [X28 + 0x18]
	0x03977100 LDR W11, [X8 + 0x18]
	0x03977104 CMP W10, W11
	0x03977108 B.CS 0x3977120
	0x0397710C ADD W9, W10, 0x1
	0x03977110 ADD X8, X8, X10, 0x2, LSL
	0x03977114 STR W9, [X28 + 0x18]
	0x03977118 STR W29, [X8 + 0x20]
	0x0397711C B 0x3977138
	0x03977120 LDR X8, [X9 + 0x20]
	0x03977124 MOV X0, X28
	0x03977128 MOV W1, W29
	0x0397712C LDR X8, [X8 + 0xC0]
	0x03977130 LDR X2, [X8 + 0x70]
	0x03977134 BL 0x2FDC70C
	0x03977138 LDR X26, [X31 + 0x50]
	0x0397713C CBZ X26, 0x3977450
	0x03977140 ADRP X8, 0x7D7000
	0x03977144 LDR X8, [X8 + 0xD08]
	0x03977148 MOV X0, X26
	0x0397714C MOV W1, W20
	0x03977150 LDR X2, [X8]
	0x03977154 BL 0x2A0A530
	0x03977158 TBNZ X0, 0x0, 0x3977178
	0x0397715C ADRP X8, 0x786000
	0x03977160 LDR X8, [X8 + 0x858]
	0x03977164 MOV X0, X26
	0x03977168 MOV W1, W20
	0x0397716C MOV W2, W22
	0x03977170 LDR X3, [X8]
	0x03977174 BL 0x2A0A344
	0x03977178 ADRP X8, 0x7D7000
	0x0397717C LDR X8, [X8 + 0xD08]
	0x03977180 MOV X0, X26
	0x03977184 MOV W1, W19
	0x03977188 LDR X2, [X8]
	0x0397718C BL 0x2A0A530
	0x03977190 TBNZ X0, 0x0, 0x39771B0
	0x03977194 ADRP X8, 0x786000
	0x03977198 LDR X8, [X8 + 0x858]
	0x0397719C MOV X0, X26
	0x039771A0 MOV W1, W19
	0x039771A4 MOV W2, W27
	0x039771A8 LDR X3, [X8]
	0x039771AC BL 0x2A0A344
	0x039771B0 ADRP X27, 0x7D7000
	0x039771B4 LDR X27, [X27 + 0xD08]
	0x039771B8 MOV X0, X26
	0x039771BC MOV W1, W29
	0x039771C0 LDR X2, [X27]
	0x039771C4 BL 0x2A0A530
	0x039771C8 LDR X22, [X31 + 0x48]
	0x039771CC TBNZ X0, 0x0, 0x39771EC
	0x039771D0 ADRP X8, 0x786000
	0x039771D4 LDR X8, [X8 + 0x858]
	0x039771D8 LDR X0, [X31 + 0x50]
	0x039771DC MOV W1, W29
	0x039771E0 MOV W2, W25
	0x039771E4 LDR X3, [X8]
	0x039771E8 BL 0x2A0A344
	0x039771EC LDR X2, [X27]
	0x039771F0 MOV X0, X22
	0x039771F4 MOV W1, W20
	0x039771F8 BL 0x2A0A530
	0x039771FC ADRP X26, 0x783000
	0x03977200 LDR X25, [X31 + 0x58]
	0x03977204 LDR X26, [X26 + 0x4B8]
	0x03977208 TBZ X0, 0x0, 0x3977258
	0x0397720C CBZ X25, 0x3977450
	0x03977210 LDR X2, [X27]
	0x03977214 MOV X0, X25
	0x03977218 MOV W1, W20
	0x0397721C BL 0x2A0A530
	0x03977220 TBNZ X0, 0x0, 0x3977258
	0x03977224 ADRP X8, 0x7D6000
	0x03977228 LDR X8, [X8 + 0xC80]
	0x0397722C MOV X0, X22
	0x03977230 MOV W1, W20
	0x03977234 LDR X2, [X8]
	0x03977238 BL 0x2A0A2A8
	0x0397723C ADRP X8, 0x786000
	0x03977240 LDR X8, [X8 + 0x858]
	0x03977244 MOV W2, W0
	0x03977248 MOV X0, X25
	0x0397724C MOV W1, W20
	0x03977250 LDR X3, [X8]
	0x03977254 BL 0x2A0A344
	0x03977258 LDR X2, [X27]
	0x0397725C MOV X0, X22
	0x03977260 MOV W1, W19
	0x03977264 BL 0x2A0A530
	0x03977268 TBZ X0, 0x0, 0x39772B8
	0x0397726C CBZ X25, 0x3977450
	0x03977270 LDR X2, [X27]
	0x03977274 MOV X0, X25
	0x03977278 MOV W1, W19
	0x0397727C BL 0x2A0A530
	0x03977280 TBNZ X0, 0x0, 0x39772B8
	0x03977284 ADRP X8, 0x7D6000
	0x03977288 LDR X8, [X8 + 0xC80]
	0x0397728C MOV X0, X22
	0x03977290 MOV W1, W19
	0x03977294 LDR X2, [X8]
	0x03977298 BL 0x2A0A2A8
	0x0397729C ADRP X8, 0x786000
	0x039772A0 LDR X8, [X8 + 0x858]
	0x039772A4 MOV W2, W0
	0x039772A8 MOV X0, X25
	0x039772AC MOV W1, W19
	0x039772B0 LDR X3, [X8]
	0x039772B4 BL 0x2A0A344
	0x039772B8 LDR X2, [X27]
	0x039772BC MOV X0, X22
	0x039772C0 MOV W1, W29
	0x039772C4 BL 0x2A0A530
	0x039772C8 TBZ X0, 0x0, 0x3977320
	0x039772CC LDR X0, [X31 + 0x58]
	0x039772D0 CBZ X0, 0x3977450
	0x039772D4 ADRP X8, 0x7D7000
	0x039772D8 LDR X8, [X8 + 0xD08]
	0x039772DC MOV W1, W29
	0x039772E0 LDR X2, [X8]
	0x039772E4 BL 0x2A0A530
	0x039772E8 TBNZ X0, 0x0, 0x3977320
	0x039772EC ADRP X8, 0x7D6000
	0x039772F0 LDR X8, [X8 + 0xC80]
	0x039772F4 LDR X0, [X31 + 0x48]
	0x039772F8 MOV W1, W29
	0x039772FC LDR X2, [X8]
	0x03977300 BL 0x2A0A2A8
	0x03977304 ADRP X8, 0x786000
	0x03977308 LDR X8, [X8 + 0x858]
	0x0397730C MOV W2, W0
	0x03977310 LDR X0, [X31 + 0x58]
	0x03977314 MOV W1, W29
	0x03977318 LDR X3, [X8]
	0x0397731C BL 0x2A0A344
	0x03977320 LDR W8, [X23 + 0x18]
	0x03977324 ADD W21, W21, 0x3
	0x03977328 CMP W21, W8
	0x0397732C B.LT 0x3976E0C
	0x03977330 CBZ X28, 0x3977450
	0x03977334 LDR W8, [X28 + 0x18]
	0x03977338 LDR X20, [X31 + 0x58]
	0x0397733C LDR X19, [X31 + 0x30]
	0x03977340 CMP W8, 0x1
	0x03977344 B.LT 0x39773CC
	0x03977348 ADRP X8, 0x77D000
	0x0397734C LDR X8, [X8 + 0xE18]
	0x03977350 MOV X0, X28
	0x03977354 LDR X1, [X8]
	0x03977358 BL 0x2FDE4C8
	0x0397735C MOV X1, X0
	0x03977360 MOV X0, X19
	0x03977364 MOV X2, X31
	0x03977368 BL 0x38FFBA8
	0x0397736C LDR X0, [X31 + 0x20]
	0x03977370 CBZ X0, 0x3977450
	0x03977374 ADRP X9, 0x7D6000
	0x03977378 LDR W10, [X0 + 0x1C]
	0x0397737C LDR X8, [X0 + 0x10]
	0x03977380 LDR X9, [X9 + 0xE10]
	0x03977384 ADD W10, W10, 0x1
	0x03977388 LDR X9, [X9]
	0x0397738C STR W10, [X0 + 0x1C]
	0x03977390 CBZ X8, 0x3977450
	0x03977394 LDRSW X10, [X0 + 0x18]
	0x03977398 LDR W11, [X8 + 0x18]
	0x0397739C CMP W10, W11
	0x039773A0 B.CS 0x39773B8
	0x039773A4 ADD W9, W10, 0x1
	0x039773A8 ADD X8, X8, X10, 0x3, LSL
	0x039773AC STR W9, [X0 + 0x18]
	0x039773B0 STR X19, [X8 + 0x20]
	0x039773B4 B 0x39773CC
	0x039773B8 LDR X8, [X9 + 0x20]
	0x039773BC MOV X1, X19
	0x039773C0 LDR X8, [X8 + 0xC0]
	0x039773C4 LDR X2, [X8 + 0x70]
	0x039773C8 BL 0x301BF90
	0x039773CC LDR X9, [X31 + 0x28]
	0x039773D0 LDR W10, [X31 + 0x3C]
	0x039773D4 LDR X19, [X31 + 0x40]
	0x039773D8 LDR W8, [X9 + 0x18]
	0x039773DC ADD W10, W10, 0x1
	0x039773E0 CMP W10, W8
	0x039773E4 B.LT 0x3976D9C
	0x039773E8 LDR X19, [X31 + 0x10]
	0x039773EC LDR X1, [X31 + 0x20]
	0x039773F0 MOV X2, X31
	0x039773F4 MOV X0, X19
	0x039773F8 BL 0x39159C8
	0x039773FC LDR X1, [X31 + 0x50]
	0x03977400 MOV X0, X19
	0x03977404 MOV X2, X31
	0x03977408 BL 0x3916234
	0x0397740C MOV X0, X19
	0x03977410 MOV X1, X20
	0x03977414 MOV X2, X31
	0x03977418 BL 0x391634C
	0x0397741C LDR X1, [X31 + 0x18]
	0x03977420 MOV X0, X19
	0x03977424 BL 0x39738AC
	0x03977428 LDP X20, X19, [X31 + 0xC0]
	0x0397742C LDP X22, X21, [X31 + 0xB0]
	0x03977430 LDP X24, X23, [X31 + 0xA0]
	0x03977434 LDP X26, X25, [X31 + 0x90]
	0x03977438 LDP X28, X27, [X31 + 0x80]
	0x0397743C LDP X29, X30, [X31 + 0x70]
	0x03977440 AND W0, W0, 0x1
	0x03977444 ADD X31, X31, 0xD0
	0x03977448 RET
	0x0397744C BL 0x1C16F28
	0x03977450 BL 0x1C16F20
	0x03977454 ADRP X0, 0x781000
	0x03977458 LDR X0, [X0 + 0x528]
	0x0397745C BL 0x1C16D08
	0x03977460 BL 0x1C16F10
	0x03977464 MOV X19, X0
	0x03977468 ADRP X0, 0x7D6000
	0x0397746C LDR X0, [X0 + 0xE90]
	0x03977470 BL 0x1C16D08
	0x03977474 MOV X1, X0
	0x03977478 MOV X0, X19
	0x0397747C MOV X2, X31
	0x03977480 BL 0x330E100
	0x03977484 ADRP X0, 0x7D9000
	0x03977488 LDR X0, [X0 + 0x148]
	0x0397748C BL 0x1C16D08
	0x03977490 MOV X1, X0
	0x03977494 MOV X0, X19
	0x03977498 BL 0x1C16DEC
	0x0397749C STP X29, X30, [X31 - 0x60]!
	0x039774A0 STP X28, X27, [X31 + 0x10]
	0x039774A4 STP X26, X25, [X31 + 0x20]
	0x039774A8 STP X24, X23, [X31 + 0x30]
	0x039774AC STP X22, X21, [X31 + 0x40]
	0x039774B0 STP X20, X19, [X31 + 0x50]
	0x039774B4 ADRP X22, 0xA6A000
	0x039774B8 ADRP X23, 0x77D000
	0x039774BC ADRP X19, 0x780000
	0x039774C0 LDRB W8, [X22 + 0xA10]
	0x039774C4 LDR X23, [X23 + 0xE30]
	0x039774C8 LDR X19, [X19 + 0xB70]
	0x039774CC MOV X21, X1
	0x039774D0 MOV X20, X0
	0x039774D4 TBNZ X8, 0x0, 0x3977558
	0x039774D8 ADRP X0, 0x7D7000
	0x039774DC LDR X0, [X0 + 0xD50]
	0x039774E0 BL 0x1C16CF4
	0x039774E4 ADRP X0, 0x77C000
	0x039774E8 LDR X0, [X0 + 0xE00]
	0x039774EC BL 0x1C16CF4
	0x039774F0 ADRP X0, 0x7A4000
	0x039774F4 LDR X0, [X0 + 0x7B8]
	0x039774F8 BL 0x1C16CF4
	0x039774FC ADRP X0, 0x7A4000
	0x03977500 LDR X0, [X0 + 0x7C0]
	0x03977504 BL 0x1C16CF4
	0x03977508 ADRP X0, 0x77C000
	0x0397750C LDR X0, [X0 + 0xE18]
	0x03977510 BL 0x1C16CF4
	0x03977514 ADRP X0, 0x77D000
	0x03977518 LDR X0, [X0 + 0xE10]
	0x0397751C BL 0x1C16CF4
	0x03977520 ADRP X0, 0x780000
	0x03977524 LDR X0, [X0 + 0xB70]
	0x03977528 BL 0x1C16CF4
	0x0397752C ADRP X0, 0x77D000
	0x03977530 LDR X0, [X0 + 0xE28]
	0x03977534 BL 0x1C16CF4
	0x03977538 ADRP X0, 0x7A6000
	0x0397753C LDR X0, [X0 + 0xF38]
	0x03977540 BL 0x1C16CF4
	0x03977544 ADRP X0, 0x77D000
	0x03977548 LDR X0, [X0 + 0xE30]
	0x0397754C BL 0x1C16CF4
	0x03977550 MOVZ W8, 0x1
	0x03977554 STRB W8, [X22 + 0xA10]
	0x03977558 LDR X0, [X23]
	0x0397755C BL 0x1C16F10
	0x03977560 LDR X1, [X19]
	0x03977564 MOV X19, X0
	0x03977568 BL 0x2FDBF14
	0x0397756C CBZ X21, 0x39777E8
	0x03977570 CBZ X20, 0x39777E8
	0x03977574 ADRP X10, 0x7A4000
	0x03977578 LDR X8, [X20]
	0x0397757C LDR X10, [X10 + 0x7B8]
	0x03977580 LDR W25, [X21 + 0x18]
	0x03977584 LDRH W9, [X8 + 0x12E]
	0x03977588 LDR X1, [X10]
	0x0397758C CBZ X9, 0x39775B0
	0x03977590 LDR X10, [X8 + 0xB0]
	0x03977594 ADD X10, X10, 0x8
	0x03977598 LDUR X11, [X10 - 0x8]
	0x0397759C CMP X11, X1
	0x039775A0 B.EQ 0x39775C0
	0x039775A4 SUBS X9, X9, 0x1
	0x039775A8 ADD X10, X10, 0x10
	0x039775AC B.NE 0x3977598
	0x039775B0 MOV X0, X20
	0x039775B4 MOV W2, W31
	0x039775B8 BL 0x1C5C788
	0x039775BC B 0x39775CC
	0x039775C0 LDRSW X9, [X10]
	0x039775C4 ADD X8, X8, X9, 0x4, LSL
	0x039775C8 ADD X0, X8, 0x138
	0x039775CC LDP X8, X1, [X0]
	0x039775D0 MOV X0, X20
	0x039775D4 BLR X8
	0x039775D8 MOV X20, X0
	0x039775DC CBZ X0, 0x39777EC
	0x039775E0 ADRP X26, 0x77C000
	0x039775E4 ADRP X27, 0x7A4000
	0x039775E8 ADRP X28, 0x7D7000
	0x039775EC ADRP X29, 0x7A6000
	0x039775F0 ADRP X24, 0x77D000
	0x039775F4 LDR X26, [X26 + 0xE18]
	0x039775F8 LDR X27, [X27 + 0x7C0]
	0x039775FC LDR X28, [X28 + 0xD50]
	0x03977600 LDR X29, [X29 + 0xF38]
	0x03977604 LDR X24, [X24 + 0xE10]
	0x03977608 LDR X8, [X20]
	0x0397760C LDR X1, [X26]
	0x03977610 LDRH W9, [X8 + 0x12E]
	0x03977614 CBZ X9, 0x3977638
	0x03977618 LDR X10, [X8 + 0xB0]
	0x0397761C ADD X10, X10, 0x8
	0x03977620 LDUR X11, [X10 - 0x8]
	0x03977624 CMP X11, X1
	0x03977628 B.EQ 0x3977648
	0x0397762C SUBS X9, X9, 0x1
	0x03977630 ADD X10, X10, 0x10
	0x03977634 B.NE 0x3977620
	0x03977638 MOV X0, X20
	0x0397763C MOV W2, W31
	0x03977640 BL 0x1C5C788
	0x03977644 B 0x3977654
	0x03977648 LDRSW X9, [X10]
	0x0397764C ADD X8, X8, X9, 0x4, LSL
	0x03977650 ADD X0, X8, 0x138
	0x03977654 LDP X8, X1, [X0]
	0x03977658 MOV X0, X20
	0x0397765C BLR X8
	0x03977660 TBZ X0, 0x0, 0x3977754
	0x03977664 LDR X8, [X20]
	0x03977668 LDR X1, [X27]
	0x0397766C LDRH W9, [X8 + 0x12E]
	0x03977670 CBZ X9, 0x3977694
	0x03977674 LDR X10, [X8 + 0xB0]
	0x03977678 ADD X10, X10, 0x8
	0x0397767C LDUR X11, [X10 - 0x8]
	0x03977680 CMP X11, X1
	0x03977684 B.EQ 0x39776A4
	0x03977688 SUBS X9, X9, 0x1
	0x0397768C ADD X10, X10, 0x10
	0x03977690 B.NE 0x397767C
	0x03977694 MOV X0, X20
	0x03977698 MOV W2, W31
	0x0397769C BL 0x1C5C788
	0x039776A0 B 0x39776B0
	0x039776A4 LDRSW X9, [X10]
	0x039776A8 ADD X8, X8, X9, 0x4, LSL
	0x039776AC ADD X0, X8, 0x138
	0x039776B0 LDP X8, X1, [X0]
	0x039776B4 MOV X0, X20
	0x039776B8 BLR X8
	0x039776BC LDR X2, [X28]
	0x039776C0 MOV W22, W0
	0x039776C4 MOV X0, X21
	0x039776C8 MOV W1, W22
	0x039776CC BL 0x217F01C
	0x039776D0 ADDS W23, W0, 0x1
	0x039776D4 B.MI 0x39776F8
	0x039776D8 CMP W23, W25
	0x039776DC B.GE 0x39776F8
	0x039776E0 LDR X2, [X29]
	0x039776E4 MOV X0, X21
	0x039776E8 MOV W1, W23
	0x039776EC BL 0x2FDC41C
	0x039776F0 CMP W0, W22
	0x039776F4 B.EQ 0x3977608
	0x039776F8 CBZ X19, 0x39777E0
	0x039776FC LDR W10, [X19 + 0x1C]
	0x03977700 LDR X8, [X19 + 0x10]
	0x03977704 LDR X9, [X24]
	0x03977708 ADD W10, W10, 0x1
	0x0397770C STR W10, [X19 + 0x1C]
	0x03977710 CBZ X8, 0x39777E4
	0x03977714 LDRSW X10, [X19 + 0x18]
	0x03977718 LDR W11, [X8 + 0x18]
	0x0397771C SUB W1, W22, W23
	0x03977720 CMP W10, W11
	0x03977724 B.CS 0x397773C
	0x03977728 ADD W9, W10, 0x1
	0x0397772C ADD X8, X8, X10, 0x2, LSL
	0x03977730 STR W9, [X19 + 0x18]
	0x03977734 STR W1, [X8 + 0x20]
	0x03977738 B 0x3977608
	0x0397773C LDR X8, [X9 + 0x20]
	0x03977740 LDR X8, [X8 + 0xC0]
	0x03977744 LDR X2, [X8 + 0x70]
	0x03977748 MOV X0, X19
	0x0397774C BL 0x2FDC70C
	0x03977750 B 0x3977608
	0x03977754 MOV X21, X31
	0x03977758 CBZ X20, 0x39777BC
	0x0397775C LDR X8, [X20]
	0x03977760 ADRP X10, 0x77C000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X0
	015 Move X20, 0xA6B000
	016 Move X19, 0x7D8000
	017 Move W8, [X20+2572]
	018 Move X19, [X19+2616]
	019 Move X21, X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {77}
	024 Move X0, 0x7DA000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move X0, 0x7D8000
	028 Move X0, [X0+1376]
	029 Call 0x1C17CF4
	030 Move X0, 0x7DA000
	031 Move X0, [X0+192]
	032 Call 0x1C17CF4
	033 Move X0, 0x77D000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x7D7000
	037 Move X0, [X0+3504]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D7000
	040 Move X0, [X0+3512]
	041 Call 0x1C17CF4
	042 Move X0, 0x77D000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0x7D8000
	046 Move X0, [X0+2640]
	047 Call 0x1C17CF4
	048 Move X0, 0x7D7000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D7000
	052 Move X0, [X0+3544]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D8000
	055 Move X0, [X0+2616]
	056 Call 0x1C17CF4
	057 Move X0, 0x7DA000
	058 Move X0, [X0+200]
	059 Call 0x1C17CF4
	060 Move X0, 0x7DA000
	061 Move X0, [X0+208]
	062 Call 0x1C17CF4
	063 Move X0, 0x7D7000
	064 Move X0, [X0+3568]
	065 Call 0x1C17CF4
	066 Move X0, 0x7DA000
	067 Move X0, [X0+216]
	068 Call 0x1C17CF4
	069 Move X0, 0x7DA000
	070 Move X0, [X0+224]
	071 Call 0x1C17CF4
	072 Move X0, 0x7D9000
	073 Move X0, [X0+4072]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+2572], W8
	077 Move X8, 0x7D7000
	078 Move X8, [X8+3568]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X1, [X19]
	082 Move X20, X0
	083 Call List`1<Object>..ctor, X0
	084 Compare X21, 0
	085 JumpIfEqual {393}
	086 Move X10, 0x7D7000
	087 Move X8, [X21]
	088 Move X10, [X10+3504]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X10]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X21
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X21, X0
	110 Compare X0, 0
	111 JumpIfEqual {394}
	112 Move X28, 0x7DA000
	113 Move X29, 0x7D9000
	114 Move X19, 0x7DA000
	115 Move X28, [X28+208]
	116 Move X29, [X29+4072]
	117 Move X19, [X19+184]
	118 Move X8, [X21]
	119 Move X10, 0x77D000
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X10, [X10+3608]
	122 Move X1, [X10]
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X21
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X1, [X0+8]
	139 Move X0, X21
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {318}
	145 Move X8, [X21]
	146 Move X10, 0x7D7000
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X10, [X10+3512]
	149 Move X1, [X10]
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X21
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X21
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X22, X0
	169 Move X1, X0
	170 Call MeshValidation.ContainsNonContiguousTriangles, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {118}
	175 Move X1, X22
	176 Call MeshValidation.CollectFaceGroups, X0, X1
	177 Move X23, X0
	178 Compare X0, 0
	179 JumpIfEqual {391}
	180 Move W8, [X23+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X2, [X28]
	183 Move X0, X23
	184 Move W1, W31
	185 Call List`1<Object>.get_Item, X0, X1
	186 Move X8, [X29]
	187 Move X24, X0
	188 Move W9, [X8+224]
	189 Compare W9, 0
	190 JumpIfNotEqual {194}
	191 Move X0, X8
	192 Call 0x1C17DFC
	193 Move X8, [X29]
	194 Move X9, [X8+184]
	195 Move X25, [X9+8]
	196 Compare X25, 0
	197 JumpIfNotEqual {220}
	198 Move W9, [X8+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {204}
	201 Move X0, X8
	202 Call 0x1C17DFC
	203 Move X8, [X29]
	204 Move X8, [X8+184]
	205 Move X26, [X8]
	206 Move X8, 0x7DA000
	207 Move X8, [X8+192]
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X8, 0x7DA000
	211 Move X8, [X8+216]
	212 Move X25, X0
	213 Move X2, [X8]
	214 Move X1, X26
	215 Move X3, X31
	216 Call Func`2<Triangle, Object>..ctor, X0, X1, X2
	217 Move X8, [X29]
	218 Move X8, [X8+184]
	219 Move [X8+8], X25
	220 Move X2, [X19]
	221 Move X0, X24
	222 Move X1, X25
	223 Call Enumerable.SelectMany, X0, X1
	224 Move X1, X0
	225 Compare X22, 0
	226 JumpIfEqual {392}
	227 Move X0, X22
	228 Move X2, X31
	229 Call Face.SetIndexes, X0, X1
	230 Move W8, [X23+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W24, 1
	233 Move X8, 0x7D8000
	234 Move X8, [X8+1376]
	235 Move X0, [X8]
	236 Call 0x1C17F10
	237 Move X25, X0
	238 Move X1, X22
	239 Move X2, X31
	240 Call Face..ctor, X0, X1
	241 Move X2, [X28]
	242 Move X0, X23
	243 Move W1, W24
	244 Call List`1<Object>.get_Item, X0, X1
	245 Move X8, [X29]
	246 Move X26, X0
	247 Move W9, [X8+224]
	248 Compare W9, 0
	249 JumpIfNotEqual {253}
	250 Move X0, X8
	251 Call 0x1C17DFC
	252 Move X8, [X29]
	253 Move X9, [X8+184]
	254 Move X27, [X9+16]
	255 Compare X27, 0
	256 JumpIfNotEqual {281}
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {263}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 Move X8, [X29]
	263 Move X8, [X8+184]
	264 Move X28, [X8]
	265 Move X8, 0x7DA000
	266 Move X8, [X8+192]
	267 Move X0, [X8]
	268 Call 0x1C17F10
	269 Move X8, 0x7DA000
	270 Move X8, [X8+224]
	271 Move X27, X0
	272 Move X2, [X8]
	273 Move X1, X28
	274 Move X3, X31
	275 Call Func`2<Triangle, Object>..ctor, X0, X1, X2
	276 Move X8, [X29]
	277 Move X28, 0x7DA000
	278 Move X8, [X8+184]
	279 Move [X8+16], X27
	280 Move X28, [X28+208]
	281 Move X2, [X19]
	282 Move X0, X26
	283 Move X1, X27
	284 Call Enumerable.SelectMany, X0, X1
	285 Move X1, X0
	286 Compare X25, 0
	287 JumpIfEqual {389}
	288 Move X0, X25
	289 Move X2, X31
	290 Call Face.SetIndexes, X0, X1
	291 Compare X20, 0
	292 JumpIfEqual {390}
	293 Move X9, 0x7D7000
	294 Move W10, [X20+28]
	295 Move X8, [X20+16]
	296 Move X9, [X9+3600]
	297 Add W10, W10, 1
	298 Move X9, [X9]
	299 Move [X20+28], W10
	300 Compare X8, 0
	301 JumpIfEqual {388}
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Move W11, [X8+24]
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Add W9, W10, 1
	306 Add X8, X8, X10
	307 Move [X20+24], W9
	308 Move [X8+32], X25
	309 Move X8, [X9+32]
	310 Move X8, [X8+192]
	311 Move X2, [X8+112]
	312 Move X0, X20
	313 Move X1, X25
	314 Call List`1<Object>.AddWithResize, X0, X1
	315 Move W8, [X23+24]
	316 Add W24, W24, 1
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X23, X31
	319 Compare X21, 0
	320 JumpIfEqual {344}
	321 Move X8, [X21]
	322 Move X10, 0x77D000
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Move X10, [X10+3584]
	325 Move X1, [X10]
	326 Compare X9, 0
	327 JumpIfEqual {334}
	328 Move X10, [X8+176]
	329 Add X10, X10, 8
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Subtract X9, X9, 1
	333 Add X10, X10, 16
	334 Move X0, X21
	335 Move W2, W31
	336 Call 0x1C5D788
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Add X8, X8, X9
	339 Add X0, X8, 312
	340 Move X8, [X0]
	341 Move X1, [X0+8]
	342 Move X0, X21
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Compare X23, 0
	345 JumpIfNotEqual {395}
	346 Move X21, [X31+8]
	347 Compare X21, 0
	348 JumpIfEqual {393}
	349 Move X8, 0x7D7000
	350 Move X22, [X21+40]
	351 Move X8, [X8+3568]
	352 Move X19, 0x7D7000
	353 Move X0, [X8]
	354 Move X19, [X19+3544]
	355 Call 0x1C17F10
	356 Move X2, [X19]
	357 Move X1, X22
	358 Move X19, X21
	359 Move X21, X0
	360 Call List`1<Object>..ctor, X0, X1
	361 Compare X21, 0
	362 JumpIfEqual {393}
	363 Move X8, 0x7D8000
	364 Move X8, [X8+2640]
	365 Move X0, X21
	366 Move X1, X20
	367 Move X2, [X8]
	368 Call List`1<Object>.AddRange, X0, X1
	369 Move X0, X19
	370 Move X1, X21
	371 Move X2, X31
	372 Call ProBuilderMesh.set_faces, X0, X1
	373 Move X0, X20
	374 Move X20, [X31+96]
	375 Move X19, [X31+104]
	376 Move X22, [X31+80]
	377 Move X21, [X31+88]
	378 Move X24, [X31+64]
	379 Move X23, [X31+72]
	380 Move X26, [X31+48]
	381 Move X25, [X31+56]
	382 Move X28, [X31+32]
	383 Move X27, [X31+40]
	384 Move X29, [X31+16]
	385 Move X30, [X31+24]
	386 Add X31, X31, 112
	387 Return X0
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Move X0, X23
	396 Call 0x1C17F18
	397 Move X22, X0
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move X0, X22
	400 Call 0x3EB2AD0
	401 Move X23, [X0]
	402 Call 0x3EB2AE0
	403 Move X23, X31
	404 Move X22, X0
	405 Compare X21, 0
	406 JumpIfEqual {430}
	407 Move X8, [X21]
	408 Move X10, 0x77D000
	409 NotImplemented "Instruction LDRH not yet implemented."
	410 Move X10, [X10+3584]
	411 Move X1, [X10]
	412 Compare X9, 0
	413 JumpIfEqual {420}
	414 Move X10, [X8+176]
	415 Add X10, X10, 8
	416 NotImplemented "Instruction LDUR not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Subtract X9, X9, 1
	419 Add X10, X10, 16
	420 Move X0, X21
	421 Move W2, W31
	422 Call 0x1C5D788
	423 NotImplemented "Instruction LDRSW not yet implemented."
	424 Add X8, X8, X9
	425 Add X0, X8, 312
	426 Move X8, [X0]
	427 Move X1, [X0+8]
	428 Move X0, X21
	429 NotImplemented "Instruction BLR not yet implemented."
	430 Compare X23, 0
	431 JumpIfNotEqual {434}
	432 Move X0, X22
	433 Call 0x1D2D690
	434 Move X0, X23
	435 Call 0x1C17F18
	436 Call 0x1991590

Method: System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.ProBuilder.Triangle>> CollectFaceGroups(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03977764 LDRH W9, [X8 + 0x12E]
	0x03977768 LDR X10, [X10 + 0xE00]
	0x0397776C LDR X1, [X10]
	0x03977770 CBZ X9, 0x3977794
	0x03977774 LDR X10, [X8 + 0xB0]
	0x03977778 ADD X10, X10, 0x8
	0x0397777C LDUR X11, [X10 - 0x8]
	0x03977780 CMP X11, X1
	0x03977784 B.EQ 0x39777A4
	0x03977788 SUBS X9, X9, 0x1
	0x0397778C ADD X10, X10, 0x10
	0x03977790 B.NE 0x397777C
	0x03977794 MOV X0, X20
	0x03977798 MOV W2, W31
	0x0397779C BL 0x1C5C788
	0x039777A0 B 0x39777B0
	0x039777A4 LDRSW X9, [X10]
	0x039777A8 ADD X8, X8, X9, 0x4, LSL
	0x039777AC ADD X0, X8, 0x138
	0x039777B0 LDP X8, X1, [X0]
	0x039777B4 MOV X0, X20
	0x039777B8 BLR X8
	0x039777BC CBNZ X21, 0x39777F0
	0x039777C0 MOV X0, X19
	0x039777C4 LDP X20, X19, [X31 + 0x50]
	0x039777C8 LDP X22, X21, [X31 + 0x40]
	0x039777CC LDP X24, X23, [X31 + 0x30]
	0x039777D0 LDP X26, X25, [X31 + 0x20]
	0x039777D4 LDP X28, X27, [X31 + 0x10]
	0x039777D8 LDP X29, X30, [X31], #0x60
	0x039777DC RET
	0x039777E0 BL 0x1C16F20
	0x039777E4 BL 0x1C16F20
	0x039777E8 BL 0x1C16F20
	0x039777EC BL 0x1C16F20
	0x039777F0 MOV X0, X21
	0x039777F4 BL 0x1C16F18
	0x039777F8 B 0x3977810
	0x039777FC B 0x3977810
	0x03977800 B 0x3977810
	0x03977804 B 0x3977810
	0x03977808 B 0x3977810
	0x0397780C B 0x3977810
	0x03977810 CMP W1, 0x1
	0x03977814 B.NE 0x3977828
	0x03977818 BL 0x3EB1AD0
	0x0397781C LDR X21, [X0]
	0x03977820 BL 0x3EB1AE0
	0x03977824 B 0x3977758
	0x03977828 MOV X19, X0
	0x0397782C MOV X21, X31
	0x03977830 B 0x3977838
	0x03977834 MOV X19, X0
	0x03977838 CBZ X20, 0x397789C
	0x0397783C LDR X8, [X20]
	0x03977840 ADRP X10, 0x77C000
	0x03977844 LDRH W9, [X8 + 0x12E]
	0x03977848 LDR X10, [X10 + 0xE00]
	0x0397784C LDR X1, [X10]
	0x03977850 CBZ X9, 0x3977874
	0x03977854 LDR X10, [X8 + 0xB0]
	0x03977858 ADD X10, X10, 0x8
	0x0397785C LDUR X11, [X10 - 0x8]
	0x03977860 CMP X11, X1
	0x03977864 B.EQ 0x3977884
	0x03977868 SUBS X9, X9, 0x1
	0x0397786C ADD X10, X10, 0x10
	0x03977870 B.NE 0x397785C
	0x03977874 MOV X0, X20
	0x03977878 MOV W2, W31
	0x0397787C BL 0x1C5C788
	0x03977880 B 0x3977890
	0x03977884 LDRSW X9, [X10]
	0x03977888 ADD X8, X8, X9, 0x4, LSL
	0x0397788C ADD X0, X8, 0x138
	0x03977890 LDP X8, X1, [X0]
	0x03977894 MOV X0, X20
	0x03977898 BLR X8
	0x0397789C CBNZ X21, 0x39778A8
	0x039778A0 MOV X0, X19
	0x039778A4 BL 0x1D2C690
	0x039778A8 MOV X0, X21
	0x039778AC BL 0x1C16F18
	0x039778B0 BL 0x1990590
	0x039778B4 SUB X31, X31, 0x70
	0x039778B8 STP X29, X30, [X31 + 0x10]
	0x039778BC STP X28, X27, [X31 + 0x20]
	0x039778C0 STP X26, X25, [X31 + 0x30]
	0x039778C4 STP X24, X23, [X31 + 0x40]
	0x039778C8 STP X22, X21, [X31 + 0x50]
	0x039778CC STP X20, X19, [X31 + 0x60]
	0x039778D0 ADRP X22, 0xA6A000
	0x039778D4 ADRP X23, 0x7D6000
	0x039778D8 ADRP X19, 0x7D6000
	0x039778DC LDRB W8, [X22 + 0xA11]
	0x039778E0 LDR X23, [X23 + 0xD78]
	0x039778E4 LDR X19, [X19 + 0xD70]
	0x039778E8 MOV X21, X1
	0x039778EC MOV X20, X0
	0x039778F0 TBNZ X8, 0x0, 0x3977974
	0x039778F4 ADRP X0, 0x7D7000
	0x039778F8 LDR X0, [X0 + 0xD50]
	0x039778FC BL 0x1C16CF4
	0x03977900 ADRP X0, 0x77C000
	0x03977904 LDR X0, [X0 + 0xE00]
	0x03977908 BL 0x1C16CF4
	0x0397790C ADRP X0, 0x7D6000
	0x03977910 LDR X0, [X0 + 0xC88]
	0x03977914 BL 0x1C16CF4
	0x03977918 ADRP X0, 0x7D6000
	0x0397791C LDR X0, [X0 + 0xC90]
	0x03977920 BL 0x1C16CF4
	0x03977924 ADRP X0, 0x77C000
	0x03977928 LDR X0, [X0 + 0xE18]
	0x0397792C BL 0x1C16CF4
	0x03977930 ADRP X0, 0x7D6000
	0x03977934 LDR X0, [X0 + 0xD68]
	0x03977938 BL 0x1C16CF4
	0x0397793C ADRP X0, 0x7D6000
	0x03977940 LDR X0, [X0 + 0xD70]
	0x03977944 BL 0x1C16CF4
	0x03977948 ADRP X0, 0x77D000
	0x0397794C LDR X0, [X0 + 0xE28]
	0x03977950 BL 0x1C16CF4
	0x03977954 ADRP X0, 0x7A6000
	0x03977958 LDR X0, [X0 + 0xF38]
	0x0397795C BL 0x1C16CF4
	0x03977960 ADRP X0, 0x7D6000
	0x03977964 LDR X0, [X0 + 0xD78]
	0x03977968 BL 0x1C16CF4
	0x0397796C MOVZ W8, 0x1
	0x03977970 STRB W8, [X22 + 0xA11]
	0x03977974 LDR X0, [X23]
	0x03977978 BL 0x1C16F10
	0x0397797C LDR X1, [X19]
	0x03977980 MOV X19, X0
	0x03977984 BL 0x2FB9738
	0x03977988 CBZ X21, 0x3977C6C
	0x0397798C CBZ X20, 0x3977C6C
	0x03977990 ADRP X10, 0x7D6000
	0x03977994 LDR X8, [X20]
	0x03977998 LDR X10, [X10 + 0xC88]
	0x0397799C LDR W27, [X21 + 0x18]
	0x039779A0 LDRH W9, [X8 + 0x12E]
	0x039779A4 LDR X1, [X10]
	0x039779A8 CBZ X9, 0x39779CC
	0x039779AC LDR X10, [X8 + 0xB0]
	0x039779B0 ADD X10, X10, 0x8
	0x039779B4 LDUR X11, [X10 - 0x8]
	0x039779B8 CMP X11, X1
	0x039779BC B.EQ 0x39779DC
	0x039779C0 SUBS X9, X9, 0x1
	0x039779C4 ADD X10, X10, 0x10
	0x039779C8 B.NE 0x39779B4
	0x039779CC MOV X0, X20
	0x039779D0 MOV W2, W31
	0x039779D4 BL 0x1C5C788
	0x039779D8 B 0x39779E8
	0x039779DC LDRSW X9, [X10]
	0x039779E0 ADD X8, X8, X9, 0x4, LSL
	0x039779E4 ADD X0, X8, 0x138
	0x039779E8 LDP X8, X1, [X0]
	0x039779EC MOV X0, X20
	0x039779F0 BLR X8
	0x039779F4 MOV X20, X0
	0x039779F8 CBZ X0, 0x3977C70
	0x039779FC ADRP X28, 0x77C000
	0x03977A00 ADRP X29, 0x7D6000
	0x03977A04 ADRP X26, 0x7D7000
	0x03977A08 LDR X28, [X28 + 0xE18]
	0x03977A0C LDR X29, [X29 + 0xC90]
	0x03977A10 LDR X26, [X26 + 0xD50]
	0x03977A14 LDR X8, [X20]
	0x03977A18 LDR X1, [X28]
	0x03977A1C LDRH W9, [X8 + 0x12E]
	0x03977A20 CBZ X9, 0x3977A44
	0x03977A24 LDR X10, [X8 + 0xB0]
	0x03977A28 ADD X10, X10, 0x8
	0x03977A2C LDUR X11, [X10 - 0x8]
	0x03977A30 CMP X11, X1
	0x03977A34 B.EQ 0x3977A54
	0x03977A38 SUBS X9, X9, 0x1
	0x03977A3C ADD X10, X10, 0x10
	0x03977A40 B.NE 0x3977A2C
	0x03977A44 MOV X0, X20
	0x03977A48 MOV W2, W31
	0x03977A4C BL 0x1C5C788
	0x03977A50 B 0x3977A60
	0x03977A54 LDRSW X9, [X10]
	0x03977A58 ADD X8, X8, X9, 0x4, LSL
	0x03977A5C ADD X0, X8, 0x138
	0x03977A60 LDP X8, X1, [X0]
	0x03977A64 MOV X0, X20
	0x03977A68 BLR X8
	0x03977A6C TBZ X0, 0x0, 0x3977BD4
	0x03977A70 LDR X8, [X20]
	0x03977A74 LDR X1, [X29]
	0x03977A78 LDRH W9, [X8 + 0x12E]
	0x03977A7C CBZ X9, 0x3977AA0
	0x03977A80 LDR X10, [X8 + 0xB0]
	0x03977A84 ADD X10, X10, 0x8
	0x03977A88 LDUR X11, [X10 - 0x8]
	0x03977A8C CMP X11, X1
	0x03977A90 B.EQ 0x3977AB0
	0x03977A94 SUBS X9, X9, 0x1
	0x03977A98 ADD X10, X10, 0x10
	0x03977A9C B.NE 0x3977A88
	0x03977AA0 MOV X0, X20
	0x03977AA4 MOV W2, W31
	0x03977AA8 BL 0x1C5C788
	0x03977AAC B 0x3977ABC
	0x03977AB0 LDRSW X9, [X10]
	0x03977AB4 ADD X8, X8, X9, 0x4, LSL
	0x03977AB8 ADD X0, X8, 0x138
	0x03977ABC LDP X8, X1, [X0]
	0x03977AC0 MOV X0, X20
	0x03977AC4 BLR X8
	0x03977AC8 LDR X2, [X26]
	0x03977ACC MOV X22, X0
	0x03977AD0 MOV X0, X21
	0x03977AD4 MOV W1, W22
	0x03977AD8 BL 0x217F01C
	0x03977ADC LDR X2, [X26]
	0x03977AE0 MOV W24, W0
	0x03977AE4 UBFM X23, X22, 0x20, 0x3F
	0x03977AE8 MOV X0, X21
	0x03977AEC MOV W1, W23
	0x03977AF0 BL 0x217F01C
	0x03977AF4 MOV W25, W0
	0x03977AF8 ADD W24, W24, 0x1
	0x03977AFC TBNZ X24, 0x1F, 0x3977B28
	0x03977B00 CMP W24, W27
	0x03977B04 B.GE 0x3977B28
	0x03977B08 ADRP X8, 0x7A6000
	0x03977B0C LDR X8, [X8 + 0xF38]
	0x03977B10 LDR X2, [X8]
	0x03977B14 MOV X0, X21
	0x03977B18 MOV W1, W24
	0x03977B1C BL 0x2FDC41C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA6B000
	015 Move X22, 0x7DA000
	016 Move X19, 0x7DA000
	017 Move W8, [X21+2573]
	018 Move X22, [X22+232]
	019 Move X19, [X19+240]
	020 Move X20, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {63}
	025 Move X0, 0x7DA000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DA000
	029 Move X0, [X0+256]
	030 Call 0x1C17CF4
	031 Move X0, 0x7DA000
	032 Move X0, [X0+264]
	033 Call 0x1C17CF4
	034 Move X0, 0x7DA000
	035 Move X0, [X0+272]
	036 Call 0x1C17CF4
	037 Move X0, 0x7DA000
	038 Move X0, [X0+280]
	039 Call 0x1C17CF4
	040 Move X0, 0x7DA000
	041 Move X0, [X0+240]
	042 Call 0x1C17CF4
	043 Move X0, 0x7DA000
	044 Move X0, [X0+200]
	045 Call 0x1C17CF4
	046 Move X0, 0x7DA000
	047 Move X0, [X0+208]
	048 Call 0x1C17CF4
	049 Move X0, 0x7DA000
	050 Move X0, [X0+232]
	051 Call 0x1C17CF4
	052 Move X0, 0x7DA000
	053 Move X0, [X0+288]
	054 Call 0x1C17CF4
	055 Move X0, 0x7DA000
	056 Move X0, [X0+296]
	057 Call 0x1C17CF4
	058 Move X0, 0x7DA000
	059 Move X0, [X0+304]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+2573], W8
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X1, [X19]
	066 Move X19, X0
	067 Call List`1<Object>..ctor, X0
	068 Compare X20, 0
	069 JumpIfEqual {252}
	070 Move X24, [X20+16]
	071 Compare X24, 0
	072 JumpIfEqual {252}
	073 Move W8, [X24+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X27, 0x7DA000
	076 Move X29, 0x7DA000
	077 Move X26, 0x7DA000
	078 Move X27, [X27+208]
	079 Move X29, [X29+296]
	080 Move X26, [X26+248]
	081 Move W25, W31
	082 Move X8, 0x7DA000
	083 Move X8, [X8+304]
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X1, X31
	087 Move X20, X0
	088 Call Object..ctor, X0
	089 Move W10, [X24+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W8, W25, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W9, W25, 2
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X10, X24, W25
	096 Add X11, X24, 32
	097 Move W1, [X10+32]
	098 Move W2, [X11]
	099 Move W3, [X11]
	100 Add X0, X31, 0
	101 Move X4, X31
	102 Move [X31+8], W31
	103 Move [X31], X31
	104 Call Triangle..ctor, X0, X1, X2, X3
	105 Compare X20, 0
	106 JumpIfEqual {252}
	107 Move X8, [X31]
	108 Move W9, [X31+8]
	109 Move X28, X20
	110 Move [X28+16], X8
	111 Move [X28+8], W9
	112 Compare X19, 0
	113 JumpIfEqual {252}
	114 Move W8, [X19+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W21, W31
	117 Move X2, [X27]
	118 Move X0, X19
	119 Move W1, W21
	120 Call List`1<Object>.get_Item, X0, X1
	121 Move X23, [X20+32]
	122 Move X22, X0
	123 Compare X23, 0
	124 JumpIfNotEqual {135}
	125 Move X8, 0x7DA000
	126 Move X8, [X8+256]
	127 Move X0, [X8]
	128 Call 0x1C17F10
	129 Move X2, [X29]
	130 Move X1, X20
	131 Move X3, X31
	132 Move X23, X0
	133 Call Func`2<Triangle, Boolean>..ctor, X0, X1, X2
	134 Move [X20+32], X23
	135 Move X2, [X26]
	136 Move X0, X22
	137 Move X1, X23
	138 Call Enumerable.Any, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {204}
	143 Move W8, [X19+24]
	144 Add W21, W21, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, 0x7DA000
	147 Move X8, [X8+288]
	148 Move X0, [X8]
	149 Call 0x1C17F10
	150 Move X8, 0x7DA000
	151 Move X8, [X8+280]
	152 Move X21, X0
	153 Move X1, [X8]
	154 Call List`1<Triangle>..ctor, X0
	155 Compare X21, 0
	156 JumpIfEqual {252}
	157 Move X9, 0x7DA000
	158 Move X1, [X28]
	159 Move W2, [X20+24]
	160 Move W10, [X21+28]
	161 Move X8, [X21+16]
	162 Move X9, [X9+264]
	163 Add W10, W10, 1
	164 Move X9, [X9]
	165 Move [X21+28], W10
	166 Compare X8, 0
	167 JumpIfEqual {252}
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Move W11, [X8+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W11, 12
	172 Add W9, W10, 1
	173 NotImplemented "Instruction MADD not yet implemented."
	174 Move [X21+24], W9
	175 Move [X8+32], X1
	176 Move [X8+40], W2
	177 Move X8, [X9+32]
	178 Move X0, X21
	179 Move X8, [X8+192]
	180 Move X3, [X8+112]
	181 Call List`1<Triangle>.AddWithResize, X0, X1
	182 Move X9, 0x7DA000
	183 Move W10, [X19+28]
	184 Move X8, [X19+16]
	185 Move X9, [X9+272]
	186 Add W10, W10, 1
	187 Move X9, [X9]
	188 Move [X19+28], W10
	189 Compare X8, 0
	190 JumpIfEqual {252}
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Move W11, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W9, W10, 1
	195 Add X8, X8, X10
	196 Move [X19+24], W9
	197 Move [X8+32], X21
	198 Move X8, [X9+32]
	199 Move X0, X19
	200 Move X1, X21
	201 Move X8, [X8+192]
	202 Move X2, [X8+112]
	203 Call List`1<Object>.AddWithResize, X0, X1
	204 Move X2, [X27]
	205 Move X0, X19
	206 Move W1, W21
	207 Call List`1<Object>.get_Item, X0, X1
	208 Compare X0, 0
	209 JumpIfEqual {252}
	210 Move X9, 0x7DA000
	211 Move X1, [X28]
	212 Move W2, [X20+24]
	213 Move W10, [X0+28]
	214 Move X8, [X0+16]
	215 Move X9, [X9+264]
	216 Add W10, W10, 1
	217 Move X9, [X9]
	218 Move [X0+28], W10
	219 Compare X8, 0
	220 JumpIfEqual {252}
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Move W11, [X8+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W11, 12
	225 Add W9, W10, 1
	226 NotImplemented "Instruction MADD not yet implemented."
	227 Move [X0+24], W9
	228 Move [X8+32], X1
	229 Move [X8+40], W2
	230 Move X8, [X9+32]
	231 Move X8, [X8+192]
	232 Move X3, [X8+112]
	233 Call List`1<Triangle>.AddWithResize, X0, X1
	234 Move W8, [X24+24]
	235 Add W25, W25, 3
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X0, X19
	238 Move X20, [X31+96]
	239 Move X19, [X31+104]
	240 Move X22, [X31+80]
	241 Move X21, [X31+88]
	242 Move X24, [X31+64]
	243 Move X23, [X31+72]
	244 Move X26, [X31+48]
	245 Move X25, [X31+56]
	246 Move X28, [X31+32]
	247 Move X27, [X31+40]
	248 Move X29, [X31+16]
	249 Move X30, [X31+24]
	250 Add X31, X31, 112
	251 Return X0
	252 Call 0x1C17F20
	253 Call 0x1C17F28

Method: System.Boolean RemoveDegenerateTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<System.Int32> removed = null)

Disassembly:
	0x03977B28 ADD W25, W25, 0x1
	0x03977B2C TBNZ X25, 0x1F, 0x3977B58
	0x03977B30 CMP W25, W27
	0x03977B34 B.GE 0x3977B58
	0x03977B38 ADRP X8, 0x7A6000
	0x03977B3C LDR X8, [X8 + 0xF38]
	0x03977B40 LDR X2, [X8]
	0x03977B44 MOV X0, X21
	0x03977B48 MOV W1, W25
	0x03977B4C BL 0x2FDC41C
	0x03977B50 CMP W0, W23
	0x03977B54 B.EQ 0x3977A14
	0x03977B58 SUB W1, W22, W24
	0x03977B5C STR X31, [X31 + 0x8]
	0x03977B60 SUB W2, W23, W25
	0x03977B64 ADD X0, X31, 0x8
	0x03977B68 MOV X3, X31
	0x03977B6C BL 0x38FDC24
	0x03977B70 CBZ X19, 0x3977C64
	0x03977B74 ADRP X9, 0x7D6000
	0x03977B78 LDR X1, [X31 + 0x8]
	0x03977B7C LDR W10, [X19 + 0x1C]
	0x03977B80 LDR X8, [X19 + 0x10]
	0x03977B84 LDR X9, [X9 + 0xD68]
	0x03977B88 ADD W10, W10, 0x1
	0x03977B8C LDR X9, [X9]
	0x03977B90 STR W10, [X19 + 0x1C]
	0x03977B94 CBZ X8, 0x3977C68
	0x03977B98 LDRSW X10, [X19 + 0x18]
	0x03977B9C LDR W11, [X8 + 0x18]
	0x03977BA0 CMP W10, W11
	0x03977BA4 B.CS 0x3977BBC
	0x03977BA8 ADD W9, W10, 0x1
	0x03977BAC ADD X8, X8, X10, 0x3, LSL
	0x03977BB0 STR W9, [X19 + 0x18]
	0x03977BB4 STR X1, [X8 + 0x20]
	0x03977BB8 B 0x3977A14
	0x03977BBC LDR X8, [X9 + 0x20]
	0x03977BC0 LDR X8, [X8 + 0xC0]
	0x03977BC4 LDR X2, [X8 + 0x70]
	0x03977BC8 MOV X0, X19
	0x03977BCC BL 0x2FB9F30
	0x03977BD0 B 0x3977A14
	0x03977BD4 MOV X21, X31
	0x03977BD8 CBZ X20, 0x3977C3C
	0x03977BDC LDR X8, [X20]
	0x03977BE0 ADRP X10, 0x77C000
	0x03977BE4 LDRH W9, [X8 + 0x12E]
	0x03977BE8 LDR X10, [X10 + 0xE00]
	0x03977BEC LDR X1, [X10]
	0x03977BF0 CBZ X9, 0x3977C14
	0x03977BF4 LDR X10, [X8 + 0xB0]
	0x03977BF8 ADD X10, X10, 0x8
	0x03977BFC LDUR X11, [X10 - 0x8]
	0x03977C00 CMP X11, X1
	0x03977C04 B.EQ 0x3977C24
	0x03977C08 SUBS X9, X9, 0x1
	0x03977C0C ADD X10, X10, 0x10
	0x03977C10 B.NE 0x3977BFC
	0x03977C14 MOV X0, X20
	0x03977C18 MOV W2, W31
	0x03977C1C BL 0x1C5C788
	0x03977C20 B 0x3977C30
	0x03977C24 LDRSW X9, [X10]
	0x03977C28 ADD X8, X8, X9, 0x4, LSL
	0x03977C2C ADD X0, X8, 0x138
	0x03977C30 LDP X8, X1, [X0]
	0x03977C34 MOV X0, X20
	0x03977C38 BLR X8
	0x03977C3C CBNZ X21, 0x3977C74
	0x03977C40 MOV X0, X19
	0x03977C44 LDP X20, X19, [X31 + 0x60]
	0x03977C48 LDP X22, X21, [X31 + 0x50]
	0x03977C4C LDP X24, X23, [X31 + 0x40]
	0x03977C50 LDP X26, X25, [X31 + 0x30]
	0x03977C54 LDP X28, X27, [X31 + 0x20]
	0x03977C58 LDP X29, X30, [X31 + 0x10]
	0x03977C5C ADD X31, X31, 0x70
	0x03977C60 RET
	0x03977C64 BL 0x1C16F20
	0x03977C68 BL 0x1C16F20
	0x03977C6C BL 0x1C16F20
	0x03977C70 BL 0x1C16F20
	0x03977C74 MOV X0, X21
	0x03977C78 BL 0x1C16F18
	0x03977C7C B 0x3977C9C
	0x03977C80 B 0x3977C9C
	0x03977C84 B 0x3977C9C
	0x03977C88 B 0x3977C9C
	0x03977C8C B 0x3977C9C
	0x03977C90 B 0x3977C9C
	0x03977C94 B 0x3977C9C
	0x03977C98 B 0x3977C9C
	0x03977C9C CMP W1, 0x1
	0x03977CA0 B.NE 0x3977CB4
	0x03977CA4 BL 0x3EB1AD0
	0x03977CA8 LDR X21, [X0]
	0x03977CAC BL 0x3EB1AE0
	0x03977CB0 B 0x3977BD8
	0x03977CB4 MOV X19, X0
	0x03977CB8 MOV X21, X31
	0x03977CBC B 0x3977CC4
	0x03977CC0 MOV X19, X0
	0x03977CC4 CBZ X20, 0x3977D28
	0x03977CC8 LDR X8, [X20]
	0x03977CCC ADRP X10, 0x77C000
	0x03977CD0 LDRH W9, [X8 + 0x12E]
	0x03977CD4 LDR X10, [X10 + 0xE00]
	0x03977CD8 LDR X1, [X10]
	0x03977CDC CBZ X9, 0x3977D00
	0x03977CE0 LDR X10, [X8 + 0xB0]
	0x03977CE4 ADD X10, X10, 0x8
	0x03977CE8 LDUR X11, [X10 - 0x8]
	0x03977CEC CMP X11, X1
	0x03977CF0 B.EQ 0x3977D10
	0x03977CF4 SUBS X9, X9, 0x1
	0x03977CF8 ADD X10, X10, 0x10
	0x03977CFC B.NE 0x3977CE8
	0x03977D00 MOV X0, X20
	0x03977D04 MOV W2, W31
	0x03977D08 BL 0x1C5C788
	0x03977D0C B 0x3977D1C
	0x03977D10 LDRSW X9, [X10]
	0x03977D14 ADD X8, X8, X9, 0x4, LSL
	0x03977D18 ADD X0, X8, 0x138
	0x03977D1C LDP X8, X1, [X0]
	0x03977D20 MOV X0, X20
	0x03977D24 BLR X8
	0x03977D28 CBNZ X21, 0x3977D34
	0x03977D2C MOV X0, X19
	0x03977D30 BL 0x1D2C690
	0x03977D34 MOV X0, X21
	0x03977D38 BL 0x1C16F18
	0x03977D3C BL 0x1990590
	0x03977D40 STP X30, X25, [X31 - 0x40]!
	0x03977D44 STP X24, X23, [X31 + 0x10]
	0x03977D48 STP X22, X21, [X31 + 0x20]
	0x03977D4C STP X20, X19, [X31 + 0x30]
	0x03977D50 ADRP X24, 0xA6A000
	0x03977D54 ADRP X25, 0x7D9000
	0x03977D58 LDRB W8, [X24 + 0xA12]
	0x03977D5C LDR X25, [X25 + 0x150]
	0x03977D60 MOV X22, X4
	0x03977D64 MOV X19, X3
	0x03977D68 MOV X20, X2
	0x03977D6C MOV X21, X1
	0x03977D70 MOV X23, X0
	0x03977D74 TBNZ X8, 0x0, 0x3977DEC
	0x03977D78 ADRP X0, 0x7D7000
	0x03977D7C LDR X0, [X0 + 0x3E0]
	0x03977D80 BL 0x1C16CF4
	0x03977D84 ADRP X0, 0x7D7000
	0x03977D88 LDR X0, [X0 + 0x2A8]
	0x03977D8C BL 0x1C16CF4
	0x03977D90 ADRP X0, 0x7D7000
	0x03977D94 LDR X0, [X0 + 0xEB8]
	0x03977D98 BL 0x1C16CF4
	0x03977D9C ADRP X0, 0x7D7000
	0x03977DA0 LDR X0, [X0 + 0xEC0]
	0x03977DA4 BL 0x1C16CF4
	0x03977DA8 ADRP X0, 0x7A4000
	0x03977DAC LDR X0, [X0 + 0x790]
	0x03977DB0 BL 0x1C16CF4
	0x03977DB4 ADRP X0, 0x77D000
	0x03977DB8 LDR X0, [X0 + 0xE18]
	0x03977DBC BL 0x1C16CF4
	0x03977DC0 ADRP X0, 0x7D8000
	0x03977DC4 LDR X0, [X0 + 0xB00]
	0x03977DC8 BL 0x1C16CF4
	0x03977DCC ADRP X0, 0x7D9000
	0x03977DD0 LDR X0, [X0 + 0x158]
	0x03977DD4 BL 0x1C16CF4
	0x03977DD8 ADRP X0, 0x7D9000
	0x03977DDC LDR X0, [X0 + 0x150]
	0x03977DE0 BL 0x1C16CF4
	0x03977DE4 MOVZ W8, 0x1
	0x03977DE8 STRB W8, [X24 + 0xA12]
	0x03977DEC LDR X0, [X25]
	0x03977DF0 BL 0x1C16F10
	0x03977DF4 MOV X1, X31
	0x03977DF8 MOV X24, X0
	0x03977DFC BL 0x33BDD8C
	0x03977E00 CBZ X24, 0x3977F10
	0x03977E04 ADRP X8, 0x7D7000
	0x03977E08 LDR X8, [X8 + 0x2A8]
	0x03977E0C STR X23, [X24 + 0x10]
	0x03977E10 MOV X0, X22
	0x03977E14 LDR X1, [X8]
	0x03977E18 BL 0x21D7880
	0x03977E1C CBZ X0, 0x3977F10
	0x03977E20 ADRP X8, 0x7A4000
	0x03977E24 LDR X8, [X8 + 0x790]
	0x03977E28 MOV X22, X0
	0x03977E2C LDR X1, [X8]
	0x03977E30 BL 0x2FDE354
	0x03977E34 LDR X23, [X21]
	0x03977E38 CBZ X23, 0x3977E9C
	0x03977E3C LDR X8, [X23 + 0x18]
	0x03977E40 CBZ X8, 0x3977E9C
	0x03977E44 ADRP X8, 0x7D7000
	0x03977E48 LDR X8, [X8 + 0xEC0]
	0x03977E4C LDR X0, [X8]
	0x03977E50 BL 0x1C16F10
	0x03977E54 ADRP X8, 0x7D9000
	0x03977E58 LDR X8, [X8 + 0x158]
	0x03977E5C MOV X1, X24
	0x03977E60 MOV X3, X31
	0x03977E64 MOV X25, X0
	0x03977E68 LDR X2, [X8]
	0x03977E6C BL 0x2D2F428
	0x03977E70 ADRP X8, 0x7D7000
	0x03977E74 LDR X8, [X8 + 0xEB8]
	0x03977E78 MOV X0, X23
	0x03977E7C MOV X1, X25
	0x03977E80 LDR X2, [X8]
	0x03977E84 BL 0x21DA490
	0x03977E88 ADRP X8, 0x7D7000
	0x03977E8C LDR X8, [X8 + 0x3E0]
	0x03977E90 LDR X1, [X8]
	0x03977E94 BL 0x21D577C
	0x03977E98 STR X0, [X21]
	0x03977E9C LDR X0, [X20]
	0x03977EA0 CBZ X0, 0x3977ECC
	0x03977EA4 LDR X8, [X0 + 0x18]
	0x03977EA8 CBZ X8, 0x3977ECC
	0x03977EAC MOV X1, X22
	0x03977EB0 BL 0x39778B4
	0x03977EB4 CBZ X0, 0x3977F10
	0x03977EB8 ADRP X8, 0x7D8000
	0x03977EBC LDR X8, [X8 + 0xB00]
	0x03977EC0 LDR X1, [X8]
	0x03977EC4 BL 0x2FBBCF0
	0x03977EC8 STR X0, [X20]
	0x03977ECC LDR X0, [X19]
	0x03977ED0 CBZ X0, 0x3977EFC
	0x03977ED4 LDR X8, [X0 + 0x18]
	0x03977ED8 CBZ X8, 0x3977EFC
	0x03977EDC MOV X1, X22
	0x03977EE0 BL 0x397749C
	0x03977EE4 CBZ X0, 0x3977F10
	0x03977EE8 ADRP X8, 0x77D000
	0x03977EEC LDR X8, [X8 + 0xE18]
	0x03977EF0 LDR X1, [X8]
	0x03977EF4 BL 0x2FDE4C8
	0x03977EF8 STR X0, [X19]
	0x03977EFC LDP X20, X19, [X31 + 0x30]
	0x03977F00 LDP X22, X21, [X31 + 0x20]
	0x03977F04 LDP X24, X23, [X31 + 0x10]
	0x03977F08 LDP X30, X25, [X31], #0x40
	0x03977F0C RET
	0x03977F10 BL 0x1C16F20
	0x03977F14 MOV X1, X31
	0x03977F18 B 0x33BDD8C
	0x03977F1C SUB X31, X31, 0x40
	0x03977F20 STP X30, X21, [X31 + 0x20]
	0x03977F24 STP X20, X19, [X31 + 0x30]
	0x03977F28 ADRP X21, 0xA6A000
	0x03977F2C LDRB W8, [X21 + 0xA13]
	0x03977F30 MOV X19, X1
	0x03977F34 MOV X20, X0
	0x03977F38 TBNZ X8, 0x0, 0x3977F68
	0x03977F3C ADRP X0, 0x780000
	0x03977F40 LDR X0, [X0 + 0xB70]
	0x03977F44 BL 0x1C16CF4
	0x03977F48 ADRP X0, 0x77D000
	0x03977F4C LDR X0, [X0 + 0xE28]
	0x03977F50 BL 0x1C16CF4
	0x03977F54 ADRP X0, 0x77D000
	0x03977F58 LDR X0, [X0 + 0xE30]
	0x03977F5C BL 0x1C16CF4
	0x03977F60 MOVZ W8, 0x1
	0x03977F64 STRB W8, [X21 + 0xA13]
	0x03977F68 MOV X0, X20
	0x03977F6C STR W31, [X19]
	0x03977F70 BL 0x39759E4
	0x03977F74 TBZ X0, 0x0, 0x3978030
	0x03977F78 CBZ X20, 0x397804C
	0x03977F7C MOV X0, X20
	0x03977F80 MOV X1, X31
	0x03977F84 BL 0x391D6A4
	0x03977F88 LDR X8, [X20 + 0xD8]
	0x03977F8C ADRP X9, 0x77D000
	0x03977F90 STP X8, X0, [X31 + 0x10]
	0x03977F94 LDR X8, [X20 + 0xE0]
	0x03977F98 LDR X9, [X9 + 0xE30]
	0x03977F9C STR X8, [X31 + 0x8]
	0x03977FA0 LDR X0, [X9]
	0x03977FA4 BL 0x1C16F10
	0x03977FA8 ADRP X8, 0x780000
	0x03977FAC LDR X8, [X8 + 0xB70]
	0x03977FB0 MOV X21, X0
	0x03977FB4 LDR X1, [X8]
	0x03977FB8 BL 0x2FDBF14
	0x03977FBC MOV X0, X20
	0x03977FC0 MOV X1, X21
	0x03977FC4 BL 0x3976B28
	0x03977FC8 TBZ X0, 0x0, 0x3978030
	0x03977FCC LDR X0, [X20 + 0x58]
	0x03977FD0 MOV X1, X31
	0x03977FD4 BL 0x3933C34
	0x03977FD8 MOV X1, X0
	0x03977FDC MOV X0, X20
	0x03977FE0 MOV X2, X31
	0x03977FE4 BL 0x3915F7C
	0x03977FE8 ADD X1, X31, 0x18
	0x03977FEC ADD X2, X31, 0x10
	0x03977FF0 ADD X3, X31, 0x8
	0x03977FF4 MOV X0, X20
	0x03977FF8 MOV X4, X21
	0x03977FFC BL 0x3977D40
	0x03978000 LDR X1, [X31 + 0x18]
	0x03978004 MOV X0, X20
	0x03978008 MOV X2, X31
	0x0397800C BL 0x391D6A8
	0x03978010 LDR X9, [X31 + 0x10]
	0x03978014 LDR X8, [X31 + 0x8]
	0x03978018 STP X9, X8, [X20 + 0xD8]
	0x0397801C CBZ X21, 0x397804C
	0x03978020 LDR W8, [X21 + 0x18]
	0x03978024 MOV W0, W31
	0x03978028 STR W8, [X19]
	0x0397802C B 0x397803C
	0x03978030 MOV X0, X20
	0x03978034 BL 0x3978050
	0x03978038 MOVZ W0, 0x1
	0x0397803C LDP X20, X19, [X31 + 0x30]
	0x03978040 LDP X30, X21, [X31 + 0x20]
	0x03978044 ADD X31, X31, 0x40
	0x03978048 RET
	0x0397804C BL 0x1C16F20
	0x03978050 SUB X31, X31, 0x70
	0x03978054 STP X30, X25, [X31 + 0x30]
	0x03978058 STP X24, X23, [X31 + 0x40]
	0x0397805C STP X22, X21, [X31 + 0x50]
	0x03978060 STP X20, X19, [X31 + 0x60]
	0x03978064 ADRP X19, 0xA69000
	0x03978068 LDRB W8, [X19 + 0xA17]
	0x0397806C MOV X20, X0
	0x03978070 TBNZ X8, 0x0, 0x39780B8
	0x03978074 ADRP X0, 0x7D8000
	0x03978078 LDR X0, [X0 + 0x160]
	0x0397807C BL 0x1C16CF4
	0x03978080 ADRP X0, 0x7D8000
	0x03978084 LDR X0, [X0 + 0x168]
	0x03978088 BL 0x1C16CF4
	0x0397808C ADRP X0, 0x7D8000
	0x03978090 LDR X0, [X0 + 0x170]
	0x03978094 BL 0x1C16CF4
	0x03978098 ADRP X0, 0x7D8000
	0x0397809C LDR X0, [X0 + 0x178]
	0x039780A0 BL 0x1C16CF4
	0x039780A4 ADRP X0, 0x7D8000
	0x039780A8 LDR X0, [X0 + 0x180]
	0x039780AC BL 0x1C16CF4
	0x039780B0 MOVZ W8, 0x1
	0x039780B4 STRB W8, [X19 + 0xA17]
	0x039780B8 CBZ X20, 0x397824C
	0x039780BC ADRP X23, 0x7D8000
	0x039780C0 ADRP X24, 0x7D8000
	0x039780C4 ADRP X25, 0x7D8000
	0x039780C8 ADRP X22, 0x7D8000
	0x039780CC ADRP X21, 0x7D8000
	0x039780D0 LDR X23, [X23 + 0x170]
	0x039780D4 LDR X24, [X24 + 0x160]
	0x039780D8 LDR X25, [X25 + 0x178]
	0x039780DC LDR X22, [X22 + 0x168]
	0x039780E0 LDR X21, [X21 + 0x180]
	0x039780E4 MOV X0, X20
	0x039780E8 MOV X1, X31
	0x039780EC BL 0x39120C0
	0x039780F0 LDR X9, [X20 + 0x80]
	0x039780F4 LDR X8, [X20 + 0x88]
	0x039780F8 LDR X3, [X23]
	0x039780FC MOV W19, W0
	0x03978100 ADD X0, X31, 0x28
	0x03978104 STP X8, X9, [X31 + 0x20]
	0x03978108 LDR X9, [X20 + 0x78]
	0x0397810C LDR X8, [X20 + 0x60]
	0x03978110 FMOV S0, W31
	0x03978114 FMOV S1, W31
	0x03978118 FMOV S2, W31
	0x0397811C STP X8, X9, [X31 + 0x10]
	0x03978120 LDR X9, [X20 + 0x68]
	0x03978124 LDR X8, [X20 + 0x70]
	0x03978128 MOVZ W2, 0x1
	0x0397812C MOV W1, W19
	0x03978130 STP X8, X9, [X31]
	0x03978134 BL 0x221D148
	0x03978138 LDR X3, [X24]
	0x0397813C ADD X0, X31, 0x20
	0x03978140 FMOV S0, W31
	0x03978144 FMOV S1, W31
	0x03978148 FMOV S2, W31
	0x0397814C FMOV S3, W31
	0x03978150 MOVZ W2, 0x1
	0x03978154 MOV W1, W19
	0x03978158 BL 0x221CF9C
	0x0397815C LDR X3, [X25]
	0x03978160 ADD X0, X31, 0x18
	0x03978164 FMOV S0, W31
	0x03978168 FMOV S1, W31
	0x0397816C FMOV S2, W31
	0x03978170 FMOV S3, W31
	0x03978174 MOVZ W2, 0x1
	0x03978178 MOV W1, W19
	0x0397817C BL 0x221D228
	0x03978180 LDR X3, [X23]
	0x03978184 ADD X0, X31, 0x28
	0x03978188 FMOV S0, W31
	0x0397818C FMOV S1, W31
	0x03978190 FMOV S2, W31
	0x03978194 MOVZ W2, 0x1
	0x03978198 MOV W1, W19
	0x0397819C BL 0x221D148
	0x039781A0 LDR X3, [X22]
	0x039781A4 ADD X0, X31, 0x10
	0x039781A8 FMOV S0, W31
	0x039781AC FMOV S1, W31
	0x039781B0 MOVZ W2, 0x1
	0x039781B4 MOV W1, W19
	0x039781B8 BL 0x221D07C
	0x039781BC LDR X3, [X21]
	0x039781C0 ADD X0, X31, 0x8
	0x039781C4 FMOV S0, W31
	0x039781C8 FMOV S1, W31
	0x039781CC FMOV S2, W31
	0x039781D0 FMOV S3, W31
	0x039781D4 MOVZ W2, 0x1
	0x039781D8 MOV W1, W19
	0x039781DC BL 0x221D488
	0x039781E0 LDR X3, [X21]
	0x039781E4 ADD X0, X31, 0x0
	0x039781E8 FMOV S0, W31
	0x039781EC FMOV S1, W31
	0x039781F0 FMOV S2, W31
	0x039781F4 FMOV S3, W31
	0x039781F8 MOVZ W2, 0x1
	0x039781FC MOV W1, W19
	0x03978200 BL 0x221D488
	0x03978204 LDR X0, [X31 + 0x28]
	0x03978208 BL 0x3978410
	0x0397820C LDR X0, [X31 + 0x18]
	0x03978210 BL 0x39785DC
	0x03978214 LDR X0, [X31 + 0x28]
	0x03978218 BL 0x3978410
	0x0397821C LDR X0, [X31 + 0x10]
	0x03978220 BL 0x3978250
	0x03978224 LDR X0, [X31 + 0x8]
	0x03978228 BL 0x39785DC
	0x0397822C LDR X0, [X31]
	0x03978230 BL 0x39785DC
	0x03978234 LDP X20, X19, [X31 + 0x60]
	0x03978238 LDP X22, X21, [X31 + 0x50]
	0x0397823C LDP X24, X23, [X31 + 0x40]
	0x03978240 LDP X30, X25, [X31 + 0x30]
	0x03978244 ADD X31, X31, 0x70
	0x03978248 RET
	0x0397824C BL 0x1C16F20
	0x03978250 STP D9, D8, [X31 - 0x40]!
	0x03978254 STR X30, [X31 + 0x10]
	0x03978258 STP X22, X21, [X31 + 0x20]
	0x0397825C STP X20, X19, [X31 + 0x30]
	0x03978260 ADRP X20, 0xA69000
	0x03978264 LDRB W8, [X20 + 0xA14]
	0x03978268 MOV X19, X0
	0x0397826C TBNZ X8, 0x0, 0x3978290
	0x03978270 ADRP X0, 0x7D5000
	0x03978274 LDR X0, [X0 + 0xA90]
	0x03978278 BL 0x1C16CF4
	0x0397827C ADRP X0, 0x7D5000
	0x03978280 LDR X0, [X0 + 0xA98]
	0x03978284 BL 0x1C16CF4
	0x03978288 MOVZ W8, 0x1
	0x0397828C STRB W8, [X20 + 0xA14]
	0x03978290 CBZ X19, 0x39783F8
	0x03978294 ADRP X10, 0x7D5000
	0x03978298 LDR X8, [X19]
	0x0397829C LDR X10, [X10 + 0xA90]
	0x039782A0 LDRH W9, [X8 + 0x12E]
	0x039782A4 LDR X1, [X10]
	0x039782A8 CBZ X9, 0x39782CC
	0x039782AC LDR X10, [X8 + 0xB0]
	0x039782B0 ADD X10, X10, 0x8
	0x039782B4 LDUR X11, [X10 - 0x8]
	0x039782B8 CMP X11, X1
	0x039782BC B.EQ 0x39782DC
	0x039782C0 SUBS X9, X9, 0x1
	0x039782C4 ADD X10, X10, 0x10
	0x039782C8 B.NE 0x39782B4
	0x039782CC MOV X0, X19
	0x039782D0 MOV W2, W31
	0x039782D4 BL 0x1C5C788
	0x039782D8 B 0x39782E8
	0x039782DC LDRSW X9, [X10]
	0x039782E0 ADD X8, X8, X9, 0x4, LSL
	0x039782E4 ADD X0, X8, 0x138
	0x039782E8 LDP X8, X1, [X0]
	0x039782EC MOV X0, X19
	0x039782F0 BLR X8
	0x039782F4 CMP W0, 0x1
	0x039782F8 B.LT 0x39783F8
	0x039782FC CBZ X19, 0x397840C
	0x03978300 ADRP X22, 0x7D5000
	0x03978304 LDR X22, [X22 + 0xA98]
	0x03978308 MOV W20, W0
	0x0397830C MOV W21, W31
	0x03978310 LDR X8, [X19]
	0x03978314 LDR X1, [X22]
	0x03978318 LDRH W9, [X8 + 0x12E]
	0x0397831C CBZ X9, 0x3978340
	0x03978320 LDR X10, [X8 + 0xB0]
	0x03978324 ADD X10, X10, 0x8
	0x03978328 LDUR X11, [X10 - 0x8]
	0x0397832C CMP X11, X1
	0x03978330 B.EQ 0x3978350
	0x03978334 SUBS X9, X9, 0x1
	0x03978338 ADD X10, X10, 0x10
	0x0397833C B.NE 0x3978328
	0x03978340 MOV X0, X19
	0x03978344 MOV W2, W31
	0x03978348 BL 0x1C5C788
	0x0397834C B 0x397835C
	0x03978350 LDRSW X9, [X10]
	0x03978354 ADD X8, X8, X9, 0x4, LSL
	0x03978358 ADD X0, X8, 0x138
	0x0397835C LDP X8, X2, [X0]
	0x03978360 MOV X0, X19
	0x03978364 MOV W1, W21
	0x03978368 BLR X8
	0x0397836C FMOV S2, W31
	0x03978370 FMOV S3, W31
	0x03978374 MOV X0, X31
	0x03978378 BL 0x390B514
	0x0397837C LDR X8, [X19]
	0x03978380 LDR X1, [X22]
	0x03978384 MOV V8.16B, V0.16B
	0x03978388 MOV V9.16B, V1.16B
	0x0397838C LDRH W9, [X8 + 0x12E]
	0x03978390 CBZ X9, 0x39783B4
	0x03978394 LDR X10, [X8 + 0xB0]
	0x03978398 ADD X10, X10, 0x8
	0x0397839C LDUR X11, [X10 - 0x8]
	0x039783A0 CMP X11, X1
	0x039783A4 B.EQ 0x39783C4
	0x039783A8 SUBS X9, X9, 0x1
	0x039783AC ADD X10, X10, 0x10
	0x039783B0 B.NE 0x397839C
	0x039783B4 MOVZ W2, 0x1
	0x039783B8 MOV X0, X19
	0x039783BC BL 0x1C5C788
	0x039783C0 B 0x39783D4
	0x039783C4 LDR W9, [X10]
	0x039783C8 ADD W9, W9, 0x1
	0x039783CC ADD X8, X8, W9, 0x4, SXTW
	0x039783D0 ADD X0, X8, 0x138
	0x039783D4 LDP X8, X2, [X0]
	0x039783D8 MOV X0, X19
	0x039783DC MOV W1, W21
	0x039783E0 MOV V0.16B, V8.16B
	0x039783E4 MOV V1.16B, V9.16B
	0x039783E8 BLR X8
	0x039783EC ADD W21, W21, 0x1
	0x039783F0 CMP W21, W20
	0x039783F4 B.NE 0x3978310
	0x039783F8 LDP X20, X19, [X31 + 0x30]
	0x039783FC LDP X22, X21, [X31 + 0x20]
	0x03978400 LDR X30, [X31 + 0x10]
	0x03978404 LDP D9, D8, [X31], #0x40
	0x03978408 RET
	0x0397840C BL 0x1C16F20
	0x03978410 STR D10, [X31 - 0x40]!
	0x03978414 STP D9, D8, [X31 + 0x8]
	0x03978418 STR X30, [X31 + 0x18]
	0x0397841C STP X22, X21, [X31 + 0x20]
	0x03978420 STP X20, X19, [X31 + 0x30]
	0x03978424 ADRP X20, 0xA69000
	0x03978428 LDRB W8, [X20 + 0xA15]
	0x0397842C MOV X19, X0
	0x03978430 TBNZ X8, 0x0, 0x3978454
	0x03978434 ADRP X0, 0x7D5000
	0x03978438 LDR X0, [X0 + 0xF78]
	0x0397843C BL 0x1C16CF4
	0x03978440 ADRP X0, 0x7D5000
	0x03978444 LDR X0, [X0 + 0xF80]
	0x03978448 BL 0x1C16CF4
	0x0397844C MOVZ W8, 0x1
	0x03978450 STRB W8, [X20 + 0xA15]
	0x03978454 CBZ X19, 0x39785C0
	0x03978458 ADRP X10, 0x7D5000
	0x0397845C LDR X8, [X19]
	0x03978460 LDR X10, [X10 + 0xF78]
	0x03978464 LDRH W9, [X8 + 0x12E]
	0x03978468 LDR X1, [X10]
	0x0397846C CBZ X9, 0x3978490
	0x03978470 LDR X10, [X8 + 0xB0]
	0x03978474 ADD X10, X10, 0x8
	0x03978478 LDUR X11, [X10 - 0x8]
	0x0397847C CMP X11, X1
	0x03978480 B.EQ 0x39784A0
	0x03978484 SUBS X9, X9, 0x1
	0x03978488 ADD X10, X10, 0x10
	0x0397848C B.NE 0x3978478
	0x03978490 MOV X0, X19
	0x03978494 MOV W2, W31
	0x03978498 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0xA6B000
	015 Move X19, 0x77D000
	016 Move W8, [X20+2574]
	017 Move X19, [X19+1432]
	018 Move X21, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {80}
	024 Move X0, 0x787000
	025 Move X0, [X0+2136]
	026 Call 0x1C17CF4
	027 Move X0, 0x7A7000
	028 Move X0, [X0+2256]
	029 Call 0x1C17CF4
	030 Move X0, 0x7D8000
	031 Move X0, [X0+3336]
	032 Call 0x1C17CF4
	033 Move X0, 0x787000
	034 Move X0, [X0+2160]
	035 Call 0x1C17CF4
	036 Move X0, 0x7DA000
	037 Move X0, [X0+312]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D8000
	040 Move X0, [X0+3448]
	041 Call 0x1C17CF4
	042 Move X0, 0x7D7000
	043 Move X0, [X0+3200]
	044 Call 0x1C17CF4
	045 Move X0, 0x787000
	046 Move X0, [X0+2184]
	047 Call 0x1C17CF4
	048 Move X0, 0x77E000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D7000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move X0, 0x77E000
	055 Move X0, [X0+3608]
	056 Call 0x1C17CF4
	057 Move X0, 0x781000
	058 Move X0, [X0+2928]
	059 Call 0x1C17CF4
	060 Move X0, 0x7DA000
	061 Move X0, [X0+320]
	062 Call 0x1C17CF4
	063 Move X0, 0x77E000
	064 Move X0, [X0+3624]
	065 Call 0x1C17CF4
	066 Move X0, 0x77E000
	067 Move X0, [X0+3632]
	068 Call 0x1C17CF4
	069 Move X0, 0x7D7000
	070 Move X0, [X0+3568]
	071 Call 0x1C17CF4
	072 Move X0, 0x784000
	073 Move X0, [X0+1208]
	074 Call 0x1C17CF4
	075 Move X0, 0x77D000
	076 Move X0, [X0+1432]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X20+2574], W8
	080 Move X0, [X19]
	081 Move [X31+108], W31
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X25
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {634}
	094 Compare X25, 0
	095 JumpIfEqual {633}
	096 Move X0, X25
	097 Move X1, X31
	098 Call ProBuilderMesh.get_sharedVertexLookup, X0
	099 Move X23, X0
	100 Move X0, X25
	101 Move X1, X31
	102 Call ProBuilderMesh.get_sharedTextureLookup, X0
	103 Compare X23, 0
	104 JumpIfEqual {633}
	105 Move [X31+24], X21
	106 Move X22, 0x7D8000
	107 Move X22, [X22+3448]
	108 Move X21, 0x787000
	109 Move X20, 0x7DA000
	110 Move X24, [X25+88]
	111 Move X1, [X22]
	112 Move X21, [X21+2184]
	113 Move X20, [X20+312]
	114 Move X26, X0
	115 Move X0, X23
	116 Call Dictionary`2<Int32, Int32>.get_Count, X0
	117 Move X8, [X21]
	118 Move W19, W0
	119 Move X0, X8
	120 Call 0x1C17F10
	121 Move X2, [X20]
	122 Move W1, W19
	123 Move [X31+80], X0
	124 Call Dictionary`2<Int32, Int32>..ctor, X0, X1
	125 Compare X26, 0
	126 JumpIfEqual {633}
	127 Move [X31+96], X23
	128 Move X1, [X22]
	129 Move X22, 0x7D7000
	130 Move X23, 0x7DA000
	131 Move X22, [X22+3568]
	132 Move X23, [X23+320]
	133 Move X0, X26
	134 Move [X31+72], X26
	135 Call Dictionary`2<Int32, Int32>.get_Count, X0
	136 Move X8, [X21]
	137 Move W19, W0
	138 Move X0, X8
	139 Call 0x1C17F10
	140 Move X2, [X20]
	141 Move W1, W19
	142 Move X26, X0
	143 Call Dictionary`2<Int32, Int32>..ctor, X0, X1
	144 Move X0, X25
	145 Move X1, X31
	146 Call ProBuilderMesh.get_faceCount, X0
	147 Move X8, [X22]
	148 Move W19, W0
	149 Move X0, X8
	150 Call 0x1C17F10
	151 Move X2, [X23]
	152 Move W1, W19
	153 Move [X31+32], X0
	154 Call List`1<Object>..ctor, X0, X1
	155 Move X0, [X21]
	156 Call 0x1C17F10
	157 Move X2, [X20]
	158 Move W1, 8
	159 Move X19, X0
	160 Call Dictionary`2<Int32, Int32>..ctor, X0, X1
	161 Move X9, [X25+40]
	162 Move [X31+16], X25
	163 Compare X9, 0
	164 JumpIfEqual {633}
	165 Move W8, [X9+24]
	166 Move X20, X26
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X26, 0x784000
	169 Move X26, [X26+1208]
	170 Move W10, W31
	171 Move [X31+88], X20
	172 Move [X31+64], X19
	173 Move [X31+40], X9
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Compare X19, 0
	176 JumpIfEqual {633}
	177 Add X8, X9, W10
	178 Move [X31+60], W10
	179 Move X21, [X8+32]
	180 Move X8, 0x7A7000
	181 Move X8, [X8+2256]
	182 Move X0, X19
	183 Move X1, [X8]
	184 Call Dictionary`2<Int32, Int32>.Clear, X0
	185 Move X8, 0x77E000
	186 Move X8, [X8+3632]
	187 Move X0, [X8]
	188 Call 0x1C17F10
	189 Move X8, 0x781000
	190 Move X8, [X8+2928]
	191 Move X28, X0
	192 Move X1, [X8]
	193 Call List`1<Int32>..ctor, X0
	194 Compare X21, 0
	195 JumpIfEqual {633}
	196 Move X23, [X21+16]
	197 Move [X31+48], X21
	198 Compare X23, 0
	199 JumpIfEqual {633}
	200 Move W8, [X23+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W21, W31
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add X19, X23, W21
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Compare X24, 0
	207 JumpIfEqual {633}
	208 Move W9, [X24+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add W20, W21, 1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W11, 12
	213 NotImplemented "Instruction MADD not yet implemented."
	214 Add X22, X23, W20
	215 Move S0, [X10+32]
	216 Move S1, [X10+36]
	217 Move V2, [X10+40]
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add W25, W21, 2
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction MADD not yet implemented."
	223 Add X27, X23, W25
	224 Move S3, [X8+32]
	225 Move S4, [X8+36]
	226 Move V5, [X8+40]
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction MADD not yet implemented."
	230 Move X9, [X8+32]
	231 Move V6, [X8+40]
	232 Move X0, X31
	233 Move [X31], X9
	234 Move [X31+8], S6
	235 Call Math.TriangleArea, X0, X1, X2
	236 Move X8, [X26]
	237 Move X8, [X8+184]
	238 Move V1, [X8]
	239 NotImplemented "Instruction FCMP not yet implemented."
	240 Move W8, [X23+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W29, [X27]
	245 Move X27, 0x7D7000
	246 Move W20, [X19]
	247 Move W19, [X22]
	248 Move X27, [X27+3200]
	249 Move X25, [X31+96]
	250 Move W1, W20
	251 Move X2, [X27]
	252 Move X0, X25
	253 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	254 Move X2, [X27]
	255 Move W22, W0
	256 Move X0, X25
	257 Move W1, W19
	258 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	259 Move X2, [X27]
	260 Move W27, W0
	261 Move X0, X25
	262 Move W1, W29
	263 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W25, W0
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X8, 0x787000
	269 Move X8, [X8+2160]
	270 Move X26, [X31+64]
	271 Add X2, X31, 108
	272 Move W1, W22
	273 Move X3, [X8]
	274 Move X0, X26
	275 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfNotEqual {281}
	280 Move W20, [X31+108]
	281 Move X8, 0x787000
	282 Move X8, [X8+2136]
	283 Move X0, X26
	284 Move W1, W22
	285 Move W2, W20
	286 Move X3, [X8]
	287 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	288 Move X8, 0x787000
	289 Move X8, [X8+2160]
	290 Add X2, X31, 108
	291 Move X0, X26
	292 Move W1, W27
	293 Move X3, [X8]
	294 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {300}
	299 Move W19, [X31+108]
	300 Move X8, 0x787000
	301 Move X8, [X8+2136]
	302 Move X0, X26
	303 Move W1, W27
	304 Move W2, W19
	305 Move X3, [X8]
	306 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	307 Move X8, 0x787000
	308 Move X8, [X8+2160]
	309 Add X2, X31, 108
	310 Move X0, X26
	311 Move W1, W25
	312 Move X3, [X8]
	313 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfNotEqual {319}
	318 Move W29, [X31+108]
	319 Move X8, 0x787000
	320 Move X8, [X8+2136]
	321 Move X0, X26
	322 Move W1, W25
	323 Move W2, W29
	324 Move X3, [X8]
	325 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	326 Compare X28, 0
	327 JumpIfEqual {633}
	328 Move X9, 0x77D000
	329 Move W10, [X28+28]
	330 Move X8, [X28+16]
	331 Move X9, [X9+3600]
	332 Add W10, W10, 1
	333 Move X9, [X9]
	334 Move [X28+28], W10
	335 Compare X8, 0
	336 JumpIfEqual {633}
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Move W11, [X8+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add W11, W10, 1
	341 Add X10, X8, X10
	342 Move [X28+24], W11
	343 Move [X10+32], W20
	344 Move W10, [X28+28]
	345 Add W10, W10, 1
	346 Move [X28+28], W10
	347 Move X8, [X9+32]
	348 Move X0, X28
	349 Move W1, W20
	350 Move X8, [X8+192]
	351 Move X2, [X8+112]
	352 Call List`1<Int32>.AddWithResize, X0, X1
	353 Move X9, 0x77D000
	354 Move W10, [X28+28]
	355 Move X8, [X28+16]
	356 Move X9, [X9+3600]
	357 Add W10, W10, 1
	358 Move X9, [X9]
	359 Move [X28+28], W10
	360 Compare X8, 0
	361 JumpIfEqual {633}
	362 NotImplemented "Instruction LDRSW not yet implemented."
	363 Move W11, [X8+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Add W11, W10, 1
	366 Add X10, X8, X10
	367 Move [X28+24], W11
	368 Move [X10+32], W19
	369 Move W10, [X28+28]
	370 Add W10, W10, 1
	371 Move [X28+28], W10
	372 Move X8, [X9+32]
	373 Move X0, X28
	374 Move W1, W19
	375 Move X8, [X8+192]
	376 Move X2, [X8+112]
	377 Call List`1<Int32>.AddWithResize, X0, X1
	378 Move X9, 0x77D000
	379 Move W10, [X28+28]
	380 Move X8, [X28+16]
	381 Move X9, [X9+3600]
	382 Add W10, W10, 1
	383 Move X9, [X9]
	384 Move [X28+28], W10
	385 Compare X8, 0
	386 JumpIfEqual {633}
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Move W11, [X8+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Add W9, W10, 1
	391 Add X8, X8, X10
	392 Move [X28+24], W9
	393 Move [X8+32], W29
	394 Move X8, [X9+32]
	395 Move X0, X28
	396 Move W1, W29
	397 Move X8, [X8+192]
	398 Move X2, [X8+112]
	399 Call List`1<Int32>.AddWithResize, X0, X1
	400 Move X26, [X31+80]
	401 Compare X26, 0
	402 JumpIfEqual {633}
	403 Move X8, 0x7D7000
	404 Move X8, [X8+3336]
	405 Move X0, X26
	406 Move W1, W20
	407 Move X2, [X8]
	408 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	409 Move TEMP, X0
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfEqual {420}
	413 Move X8, 0x786000
	414 Move X8, [X8+2136]
	415 Move X0, X26
	416 Move W1, W20
	417 Move W2, W22
	418 Move X3, [X8]
	419 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	420 Move X8, 0x7D7000
	421 Move X8, [X8+3336]
	422 Move X0, X26
	423 Move W1, W19
	424 Move X2, [X8]
	425 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfEqual {437}
	430 Move X8, 0x786000
	431 Move X8, [X8+2136]
	432 Move X0, X26
	433 Move W1, W19
	434 Move W2, W27
	435 Move X3, [X8]
	436 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	437 Move X27, 0x7D7000
	438 Move X27, [X27+3336]
	439 Move X0, X26
	440 Move W1, W29
	441 Move X2, [X27]
	442 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	443 Move X22, [X31+72]
	444 Move TEMP, X0
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfEqual {455}
	448 Move X8, 0x786000
	449 Move X8, [X8+2136]
	450 Move X0, [X31+80]
	451 Move W1, W29
	452 Move W2, W25
	453 Move X3, [X8]
	454 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	455 Move X2, [X27]
	456 Move X0, X22
	457 Move W1, W20
	458 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	459 Move X26, 0x783000
	460 Move X25, [X31+88]
	461 Move X26, [X26+1208]
	462 Move TEMP, X0
	463 And TEMP, TEMP, 1
	464 Compare TEMP, 1
	465 JumpIfNotEqual {489}
	466 Compare X25, 0
	467 JumpIfEqual {633}
	468 Move X2, [X27]
	469 Move X0, X25
	470 Move W1, W20
	471 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	472 Move TEMP, X0
	473 And TEMP, TEMP, 1
	474 Compare TEMP, 1
	475 JumpIfEqual {489}
	476 Move X8, 0x7D6000
	477 Move X8, [X8+3200]
	478 Move X0, X22
	479 Move W1, W20
	480 Move X2, [X8]
	481 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	482 Move X8, 0x786000
	483 Move X8, [X8+2136]
	484 Move W2, W0
	485 Move X0, X25
	486 Move W1, W20
	487 Move X3, [X8]
	488 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	489 Move X2, [X27]
	490 Move X0, X22
	491 Move W1, W19
	492 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	493 Move TEMP, X0
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfNotEqual {520}
	497 Compare X25, 0
	498 JumpIfEqual {633}
	499 Move X2, [X27]
	500 Move X0, X25
	501 Move W1, W19
	502 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	503 Move TEMP, X0
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfEqual {520}
	507 Move X8, 0x7D6000
	508 Move X8, [X8+3200]
	509 Move X0, X22
	510 Move W1, W19
	511 Move X2, [X8]
	512 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	513 Move X8, 0x786000
	514 Move X8, [X8+2136]
	515 Move W2, W0
	516 Move X0, X25
	517 Move W1, W19
	518 Move X3, [X8]
	519 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	520 Move X2, [X27]
	521 Move X0, X22
	522 Move W1, W29
	523 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	524 Move TEMP, X0
	525 And TEMP, TEMP, 1
	526 Compare TEMP, 1
	527 JumpIfNotEqual {553}
	528 Move X0, [X31+88]
	529 Compare X0, 0
	530 JumpIfEqual {633}
	531 Move X8, 0x7D7000
	532 Move X8, [X8+3336]
	533 Move W1, W29
	534 Move X2, [X8]
	535 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	536 Move TEMP, X0
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfEqual {553}
	540 Move X8, 0x7D6000
	541 Move X8, [X8+3200]
	542 Move X0, [X31+72]
	543 Move W1, W29
	544 Move X2, [X8]
	545 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	546 Move X8, 0x786000
	547 Move X8, [X8+2136]
	548 Move W2, W0
	549 Move X0, [X31+88]
	550 Move W1, W29
	551 Move X3, [X8]
	552 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	553 Move W8, [X23+24]
	554 Add W21, W21, 3
	555 NotImplemented "Instruction CMP not yet implemented."
	556 Compare X28, 0
	557 JumpIfEqual {633}
	558 Move W8, [X28+24]
	559 Move X20, [X31+88]
	560 Move X19, [X31+48]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X8, 0x77D000
	563 Move X8, [X8+3608]
	564 Move X0, X28
	565 Move X1, [X8]
	566 Call List`1<Int32>.ToArray, X0
	567 Move X1, X0
	568 Move X0, X19
	569 Move X2, X31
	570 Call Face.set_indexesInternal, X0, X1
	571 Move X0, [X31+32]
	572 Compare X0, 0
	573 JumpIfEqual {633}
	574 Move X9, 0x7D6000
	575 Move W10, [X0+28]
	576 Move X8, [X0+16]
	577 Move X9, [X9+3600]
	578 Add W10, W10, 1
	579 Move X9, [X9]
	580 Move [X0+28], W10
	581 Compare X8, 0
	582 JumpIfEqual {633}
	583 NotImplemented "Instruction LDRSW not yet implemented."
	584 Move W11, [X8+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Add W9, W10, 1
	587 Add X8, X8, X10
	588 Move [X0+24], W9
	589 Move [X8+32], X19
	590 Move X8, [X9+32]
	591 Move X1, X19
	592 Move X8, [X8+192]
	593 Move X2, [X8+112]
	594 Call List`1<Object>.AddWithResize, X0, X1
	595 Move X9, [X31+40]
	596 Move W10, [X31+60]
	597 Move X19, [X31+64]
	598 Move W8, [X9+24]
	599 Add W10, W10, 1
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Move X19, [X31+16]
	602 Move X1, [X31+32]
	603 Move X2, X31
	604 Move X0, X19
	605 Call ProBuilderMesh.set_faces, X0, X1
	606 Move X1, [X31+80]
	607 Move X0, X19
	608 Move X2, X31
	609 Call ProBuilderMesh.SetSharedVertices, X0, X1
	610 Move X0, X19
	611 Move X1, X20
	612 Move X2, X31
	613 Call ProBuilderMesh.SetSharedTextures, X0, X1
	614 Move X1, [X31+24]
	615 Move X0, X19
	616 Call MeshValidation.RemoveUnusedVertices, X0, X1
	617 Move X20, [X31+192]
	618 Move X19, [X31+200]
	619 Move X22, [X31+176]
	620 Move X21, [X31+184]
	621 Move X24, [X31+160]
	622 Move X23, [X31+168]
	623 Move X26, [X31+144]
	624 Move X25, [X31+152]
	625 Move X28, [X31+128]
	626 Move X27, [X31+136]
	627 Move X29, [X31+112]
	628 Move X30, [X31+120]
	629 And W0, W0, 1
	630 Add X31, X31, 208
	631 Return X0
	632 Call 0x1C17F28
	633 Call 0x1C17F20
	634 Move X0, 0x781000
	635 Move X0, [X0+1320]
	636 Call 0x1C17D08
	637 Call 0x1C17F10
	638 Move X19, X0
	639 Move X0, 0x7D6000
	640 Move X0, [X0+3728]
	641 Call 0x1C17D08
	642 Move X1, X0
	643 Move X0, X19
	644 Move X2, X31
	645 Call ArgumentNullException..ctor, X0, X1
	646 Move X0, 0x7D9000
	647 Move X0, [X0+328]
	648 Call 0x1C17D08
	649 Move X1, X0
	650 Move X0, X19
	651 Call 0x1C17DEC

Method: System.Boolean RemoveUnusedVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<System.Int32> removed = null)

Disassembly:
	0x039748AC LDR X8, [X10 + 0x20]
	0x039748B0 MOV X0, X22
	0x039748B4 LDR X8, [X8 + 0xC0]
	0x039748B8 LDR X2, [X8 + 0x70]
	0x039748BC BL 0x301BF90
	0x039748C0 LDR W8, [X26 + 0x18]
	0x039748C4 ADD W27, W25, 0x1
	0x039748C8 CMP W27, W8
	0x039748CC B.CS 0x3974C4C
	0x039748D0 ADD X9, X26, W27, 0x2, SXTW
	0x039748D4 LDRSW X9, [X9 + 0x20]
	0x039748D8 LDR W10, [X23 + 0x18]
	0x039748DC CMP W9, W10
	0x039748E0 B.CS 0x3974C4C
	0x039748E4 ADD X9, X23, X9, 0x3, LSL
	0x039748E8 LDR W11, [X22 + 0x1C]
	0x039748EC LDR X1, [X9 + 0x20]
	0x039748F0 LDR X9, [X22 + 0x10]
	0x039748F4 LDR X10, [X19]
	0x039748F8 ADD W11, W11, 0x1
	0x039748FC STR W11, [X22 + 0x1C]
	0x03974900 CBZ X9, 0x3974A64
	0x03974904 LDRSW X11, [X22 + 0x18]
	0x03974908 LDR W12, [X9 + 0x18]
	0x0397490C CMP W11, W12
	0x03974910 B.CS 0x3974928
	0x03974914 ADD W10, W11, 0x1
	0x03974918 ADD X9, X9, X11, 0x3, LSL
	0x0397491C STR W10, [X22 + 0x18]
	0x03974920 STR X1, [X9 + 0x20]
	0x03974924 B 0x3974940
	0x03974928 LDR X8, [X10 + 0x20]
	0x0397492C MOV X0, X22
	0x03974930 LDR X8, [X8 + 0xC0]
	0x03974934 LDR X2, [X8 + 0x70]
	0x03974938 BL 0x301BF90
	0x0397493C LDR W8, [X26 + 0x18]
	0x03974940 ADD W27, W27, 0x1
	0x03974944 CMP W27, W8
	0x03974948 B.CS 0x3974C4C
	0x0397494C ADD W9, W25, 0x2
	0x03974950 ADD X9, X26, W9, 0x2, SXTW
	0x03974954 LDRSW X9, [X9 + 0x20]
	0x03974958 LDR W10, [X23 + 0x18]
	0x0397495C CMP W9, W10
	0x03974960 B.CS 0x3974C4C
	0x03974964 ADD X9, X23, X9, 0x3, LSL
	0x03974968 LDR W11, [X22 + 0x1C]
	0x0397496C LDR X1, [X9 + 0x20]
	0x03974970 LDR X9, [X22 + 0x10]
	0x03974974 LDR X10, [X19]
	0x03974978 ADD W11, W11, 0x1
	0x0397497C STR W11, [X22 + 0x1C]
	0x03974980 CBZ X9, 0x3974A64
	0x03974984 LDRSW X11, [X22 + 0x18]
	0x03974988 LDR W12, [X9 + 0x18]
	0x0397498C CMP W11, W12
	0x03974990 B.CS 0x39749A8
	0x03974994 ADD W10, W11, 0x1
	0x03974998 ADD X9, X9, X11, 0x3, LSL
	0x0397499C STR W10, [X22 + 0x18]
	0x039749A0 STR X1, [X9 + 0x20]
	0x039749A4 B 0x39749C0
	0x039749A8 LDR X8, [X10 + 0x20]
	0x039749AC MOV X0, X22
	0x039749B0 LDR X8, [X8 + 0xC0]
	0x039749B4 LDR X2, [X8 + 0x70]
	0x039749B8 BL 0x301BF90
	0x039749BC LDR W8, [X26 + 0x18]
	0x039749C0 ADD W27, W27, 0x1
	0x039749C4 CMP W27, W8
	0x039749C8 B.CS 0x3974C4C
	0x039749CC ADD W8, W25, 0x3
	0x039749D0 ADD X8, X26, W8, 0x2, SXTW
	0x039749D4 LDRSW X8, [X8 + 0x20]
	0x039749D8 LDR W9, [X23 + 0x18]
	0x039749DC CMP W8, W9
	0x039749E0 B.CS 0x3974C4C
	0x039749E4 ADD X8, X23, X8, 0x3, LSL
	0x039749E8 LDR W10, [X22 + 0x1C]
	0x039749EC LDR X1, [X8 + 0x20]
	0x039749F0 LDR X8, [X22 + 0x10]
	0x039749F4 LDR X9, [X19]
	0x039749F8 ADD W10, W10, 0x1
	0x039749FC STR W10, [X22 + 0x1C]
	0x03974A00 CBZ X8, 0x3974A64
	0x03974A04 LDRSW X10, [X22 + 0x18]
	0x03974A08 LDR W11, [X8 + 0x18]
	0x03974A0C CMP W10, W11
	0x03974A10 B.CS 0x3974A28
	0x03974A14 ADD W9, W10, 0x1
	0x03974A18 ADD X8, X8, X10, 0x3, LSL
	0x03974A1C STR W9, [X22 + 0x18]
	0x03974A20 STR X1, [X8 + 0x20]
	0x03974A24 B 0x3974A3C
	0x03974A28 LDR X8, [X9 + 0x20]
	0x03974A2C MOV X0, X22
	0x03974A30 LDR X8, [X8 + 0xC0]
	0x03974A34 LDR X2, [X8 + 0x70]
	0x03974A38 BL 0x301BF90
	0x03974A3C LDR W9, [X26 + 0x18]
	0x03974A40 ADD W8, W27, 0x1
	0x03974A44 CMP W8, W9
	0x03974A48 B.LT 0x39746F8
	0x03974A4C ADD W8, W25, 0x4
	0x03974A50 LDR X25, [X31 + 0x18]
	0x03974A54 ADD W20, W20, W8
	0x03974A58 LDR X0, [X25 + 0x10]
	0x03974A5C ADD W24, W24, 0x1
	0x03974A60 CBNZ X0, 0x39743C0
	0x03974A64 BL 0x1C16F20
	0x03974A68 CBZ X22, 0x3974A64
	0x03974A6C ADRP X8, 0x7DC000
	0x03974A70 LDR X8, [X8 + 0x28]
	0x03974A74 MOV X0, X22
	0x03974A78 LDR X1, [X8]
	0x03974A7C BL 0x301DDC4
	0x03974A80 STR X0, [X25 + 0x28]
	0x03974A84 ADRP X24, 0x7DC000
	0x03974A88 LDR X8, [X25 + 0x20]
	0x03974A8C LDR X19, [X31 + 0x10]
	0x03974A90 LDR X24, [X24 + 0x40]
	0x03974A94 CBZ X8, 0x3974A64
	0x03974A98 MOV X0, X8
	0x03974A9C MOV X1, X31
	0x03974AA0 BL 0x3916FC0
	0x03974AA4 LDR X0, [X25 + 0x20]
	0x03974AA8 CBZ X0, 0x3974A64
	0x03974AAC LDR X1, [X25 + 0x28]
	0x03974AB0 MOV W2, W31
	0x03974AB4 MOV X3, X31
	0x03974AB8 BL 0x3916CF4
	0x03974ABC LDR X0, [X25 + 0x20]
	0x03974AC0 CBZ X0, 0x3974A64
	0x03974AC4 MOV X1, X21
	0x03974AC8 MOV X2, X31
	0x03974ACC BL 0x39159C8
	0x03974AD0 LDR X21, [X25 + 0x20]
	0x03974AD4 CBZ X21, 0x3974A64
	0x03974AD8 LDR X0, [X21 + 0x58]
	0x03974ADC MOV X1, X31
	0x03974AE0 BL 0x3933C34
	0x03974AE4 MOV X1, X0
	0x03974AE8 MOV X0, X21
	0x03974AEC MOV X2, X31
	0x03974AF0 BL 0x3915F7C
	0x03974AF4 ADRP X8, 0x7DA000
	0x03974AF8 LDR X21, [X25 + 0x20]
	0x03974AFC LDR X8, [X8 + 0x418]
	0x03974B00 MOV W1, W31
	0x03974B04 LDR X0, [X8]
	0x03974B08 BL 0x1C16D6C
	0x03974B0C CBZ X21, 0x3974A64
	0x03974B10 MOV X1, X0
	0x03974B14 MOV X0, X21
	0x03974B18 MOV X2, X31
	0x03974B1C BL 0x39162AC
	0x03974B20 CBZ X19, 0x3974A64
	0x03974B24 LDRB W8, [X19 + 0x10]
	0x03974B28 CBZ W8, 0x3974B48
	0x03974B2C LDR X0, [X25 + 0x20]
	0x03974B30 CBZ X0, 0x3974A64
	0x03974B34 LDRB W8, [X19 + 0x11]
	0x03974B38 LDR X1, [X0 + 0x28]
	0x03974B3C CMP W8, 0x0
	0x03974B40 CSET W2, EQ
	0x03974B44 BL 0x3974C98
	0x03974B48 LDRB W8, [X19 + 0x11]
	0x03974B4C CBZ W8, 0x3974C28
	0x03974B50 LDR X21, [X25 + 0x20]
	0x03974B54 CBZ X21, 0x3974A64
	0x03974B58 LDR X0, [X24]
	0x03974B5C LDR X22, [X21 + 0x28]
	0x03974B60 LDR V8, [X19 + 0x14]
	0x03974B64 LDR X20, [X25 + 0x28]
	0x03974B68 LDR W8, [X0 + 0xE0]
	0x03974B6C CBNZ W8, 0x3974B78
	0x03974B70 BL 0x1C16DFC
	0x03974B74 LDR X0, [X24]
	0x03974B78 ADRP X19, 0x7DA000
	0x03974B7C LDR X19, [X19 + 0x170]
	0x03974B80 LDR X8, [X0 + 0xB8]
	0x03974B84 LDR X23, [X8 + 0x8]
	0x03974B88 CBNZ X23, 0x3974BE0
	0x03974B8C LDR W8, [X0 + 0xE0]
	0x03974B90 CBNZ W8, 0x3974B9C
	0x03974B94 BL 0x1C16DFC
	0x03974B98 LDR X0, [X24]
	0x03974B9C ADRP X9, 0x7DB000
	0x03974BA0 LDR X8, [X0 + 0xB8]
	0x03974BA4 LDR X9, [X9 + 0x270]
	0x03974BA8 MOV X26, X24
	0x03974BAC LDR X24, [X8]
	0x03974BB0 LDR X0, [X9]
	0x03974BB4 BL 0x1C16F10
	0x03974BB8 ADRP X8, 0x7DC000
	0x03974BBC LDR X8, [X8 + 0x38]
	0x03974BC0 MOV X1, X24
	0x03974BC4 MOV X3, X31
	0x03974BC8 MOV X23, X0
	0x03974BCC LDR X2, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xA6E000
	012 Move X22, 0x780000
	013 Move W8, [X21+2575]
	014 Move X22, [X22+1432]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x7DA000
	022 Move X0, [X0+4000]
	023 Call 0x1C17CF4
	024 Move X0, 0x7DA000
	025 Move X0, [X0+4008]
	026 Call 0x1C17CF4
	027 Move X0, 0x781000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x781000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x781000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move X0, 0x781000
	037 Move X0, [X0+3600]
	038 Call 0x1C17CF4
	039 Move X0, 0x787000
	040 Move X0, [X0+2136]
	041 Call 0x1C17CF4
	042 Move X0, 0x784000
	043 Move X0, [X0+2928]
	044 Call 0x1C17CF4
	045 Move X0, 0x781000
	046 Move X0, [X0+3624]
	047 Call 0x1C17CF4
	048 Move X0, 0x781000
	049 Move X0, [X0+3632]
	050 Call 0x1C17CF4
	051 Move X0, 0x780000
	052 Move X0, [X0+1432]
	053 Call 0x1C17CF4
	054 Move X0, 0x7DC000
	055 Move X0, [X0+4064]
	056 Call 0x1C17CF4
	057 Move X0, 0x7DC000
	058 Move X0, [X0+4072]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+2575], W8
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {213}
	075 Compare X20, 0
	076 JumpIfEqual {83}
	077 Move W8, [X20+28]
	078 Add W8, W8, 1
	079 Move [X20+24], W31
	080 Move [X20+28], W8
	081 Compare X19, 0
	082 JumpIfNotEqual {94}
	083 Move X8, 0x781000
	084 Move X8, [X8+3632]
	085 Move X0, [X8]
	086 Call 0x1C17F10
	087 Move X8, 0x784000
	088 Move X8, [X8+2928]
	089 Move X20, X0
	090 Move X1, [X8]
	091 Call List`1<Int32>..ctor, X0
	092 Compare X19, 0
	093 JumpIfEqual {192}
	094 Move X24, 0x7DC000
	095 Move X24, [X24+4072]
	096 Move X21, [X19+40]
	097 Move X0, [X24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X24]
	103 Move X8, [X0+184]
	104 Move X27, 0x7DA000
	105 Move X26, 0x781000
	106 Move X25, 0x781000
	107 Move X22, [X8+24]
	108 Move X27, [X27+4000]
	109 Move X26, [X26+3592]
	110 Move X25, [X25+3584]
	111 Compare X22, 0
	112 JumpIfNotEqual {134}
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {118}
	116 Call 0x1C17DFC
	117 Move X0, [X24]
	118 Move X9, 0x7DA000
	119 Move X8, [X0+184]
	120 Move X9, [X9+4008]
	121 Move X23, [X8]
	122 Move X0, [X9]
	123 Call 0x1C17F10
	124 Move X8, 0x7DC000
	125 Move X8, [X8+4064]
	126 Move X1, X23
	127 Move X3, X31
	128 Move X22, X0
	129 Move X2, [X8]
	130 Call Func`2<Object, Object>..ctor, X0, X1, X2
	131 Move X8, [X24]
	132 Move X8, [X8+184]
	133 Move [X8+24], X22
	134 Move X2, [X27]
	135 Move X0, X21
	136 Move X1, X22
	137 Call Enumerable.SelectMany, X0, X1
	138 Move X8, [X26]
	139 Move X22, X0
	140 Move X0, X8
	141 Call 0x1C17F10
	142 Move X2, [X25]
	143 Move X1, X22
	144 Move X21, X0
	145 Call HashSet`1<Int32>..ctor, X0, X1
	146 Move X8, [X19+88]
	147 Compare X8, 0
	148 JumpIfEqual {192}
	149 Move X23, 0x781000
	150 Move X24, 0x781000
	151 Move X23, [X23+3576]
	152 Move X24, [X24+3600]
	153 Move W22, W31
	154 Move W8, [X8+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Compare X21, 0
	157 JumpIfEqual {192}
	158 Move X2, [X23]
	159 Move X0, X21
	160 Move W1, W22
	161 Call HashSet`1<Int32>.Contains, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {188}
	166 Compare X20, 0
	167 JumpIfEqual {192}
	168 Move W10, [X20+28]
	169 Move X8, [X20+16]
	170 Move X9, [X24]
	171 Add W10, W10, 1
	172 Move [X20+28], W10
	173 Compare X8, 0
	174 JumpIfEqual {192}
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Move W11, [X8+24]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add W9, W10, 1
	179 Add X8, X8, X10
	180 Move [X20+24], W9
	181 Move [X8+32], W22
	182 Move X8, [X9+32]
	183 Move X0, X20
	184 Move W1, W22
	185 Move X8, [X8+192]
	186 Move X2, [X8+112]
	187 Call List`1<Int32>.AddWithResize, X0, X1
	188 Move X8, [X19+88]
	189 Add W22, W22, 1
	190 Compare X8, 0
	191 JumpIfNotEqual {154}
	192 Call 0x1C17F20
	193 Move X0, X19
	194 Move X1, X20
	195 Move X2, X31
	196 Call DeleteElements.DeleteVertices, X0, X1
	197 Compare X20, 0
	198 JumpIfEqual {192}
	199 Move W8, [X20+24]
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X26, [X31+16]
	207 Move X25, [X31+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 NotImplemented "Instruction CSET not yet implemented."
	210 Move X30, [X31+80]
	211 Move X27, [X31+88]
	212 Return X0
	213 Move X0, 0x785000
	214 Move X0, [X0+1320]
	215 Call 0x1C17D08
	216 Call 0x1C17F10
	217 Move X19, X0
	218 Move X0, 0x7DA000
	219 Move X0, [X0+3728]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X19
	223 Move X2, X31
	224 Call ArgumentNullException..ctor, X0, X1
	225 Move X0, 0x7DC000
	226 Move X0, [X0+4080]
	227 Call 0x1C17D08
	228 Move X1, X0
	229 Move X0, X19
	230 Call 0x1C17DEC

Method: System.Collections.Generic.List`1<System.Int32> RebuildIndexes(System.Collections.Generic.IEnumerable`1<System.Int32> indices, System.Collections.Generic.List`1<System.Int32> removed)

Disassembly:
	0x0397849C B 0x39784AC
	0x039784A0 LDRSW X9, [X10]
	0x039784A4 ADD X8, X8, X9, 0x4, LSL
	0x039784A8 ADD X0, X8, 0x138
	0x039784AC LDP X8, X1, [X0]
	0x039784B0 MOV X0, X19
	0x039784B4 BLR X8
	0x039784B8 CMP W0, 0x1
	0x039784BC B.LT 0x39785C0
	0x039784C0 CBZ X19, 0x39785D8
	0x039784C4 ADRP X22, 0x7D5000
	0x039784C8 LDR X22, [X22 + 0xF80]
	0x039784CC MOV W20, W0
	0x039784D0 MOV W21, W31
	0x039784D4 LDR X8, [X19]
	0x039784D8 LDR X1, [X22]
	0x039784DC LDRH W9, [X8 + 0x12E]
	0x039784E0 CBZ X9, 0x3978504
	0x039784E4 LDR X10, [X8 + 0xB0]
	0x039784E8 ADD X10, X10, 0x8
	0x039784EC LDUR X11, [X10 - 0x8]
	0x039784F0 CMP X11, X1
	0x039784F4 B.EQ 0x3978514
	0x039784F8 SUBS X9, X9, 0x1
	0x039784FC ADD X10, X10, 0x10
	0x03978500 B.NE 0x39784EC
	0x03978504 MOV X0, X19
	0x03978508 MOV W2, W31
	0x0397850C BL 0x1C5C788
	0x03978510 B 0x3978520
	0x03978514 LDRSW X9, [X10]
	0x03978518 ADD X8, X8, X9, 0x4, LSL
	0x0397851C ADD X0, X8, 0x138
	0x03978520 LDP X8, X2, [X0]
	0x03978524 MOV X0, X19
	0x03978528 MOV W1, W21
	0x0397852C BLR X8
	0x03978530 FMOV S3, W31
	0x03978534 MOV X0, X31
	0x03978538 BL 0x390B514
	0x0397853C LDR X8, [X19]
	0x03978540 LDR X1, [X22]
	0x03978544 MOV V8.16B, V0.16B
	0x03978548 MOV V9.16B, V1.16B
	0x0397854C LDRH W9, [X8 + 0x12E]
	0x03978550 MOV V10.16B, V2.16B
	0x03978554 CBZ X9, 0x3978578
	0x03978558 LDR X10, [X8 + 0xB0]
	0x0397855C ADD X10, X10, 0x8
	0x03978560 LDUR X11, [X10 - 0x8]
	0x03978564 CMP X11, X1
	0x03978568 B.EQ 0x3978588
	0x0397856C SUBS X9, X9, 0x1
	0x03978570 ADD X10, X10, 0x10
	0x03978574 B.NE 0x3978560
	0x03978578 MOVZ W2, 0x1
	0x0397857C MOV X0, X19
	0x03978580 BL 0x1C5C788
	0x03978584 B 0x3978598
	0x03978588 LDR W9, [X10]
	0x0397858C ADD W9, W9, 0x1
	0x03978590 ADD X8, X8, W9, 0x4, SXTW
	0x03978594 ADD X0, X8, 0x138
	0x03978598 LDP X8, X2, [X0]
	0x0397859C MOV X0, X19
	0x039785A0 MOV W1, W21
	0x039785A4 MOV V0.16B, V8.16B
	0x039785A8 MOV V1.16B, V9.16B
	0x039785AC MOV V2.16B, V10.16B
	0x039785B0 BLR X8
	0x039785B4 ADD W21, W21, 0x1
	0x039785B8 CMP W21, W20
	0x039785BC B.NE 0x39784D4
	0x039785C0 LDP X20, X19, [X31 + 0x30]
	0x039785C4 LDP X22, X21, [X31 + 0x20]
	0x039785C8 LDR X30, [X31 + 0x18]
	0x039785CC LDP D9, D8, [X31 + 0x8]
	0x039785D0 LDR V10, [X31], #0x40
	0x039785D4 RET
	0x039785D8 BL 0x1C16F20
	0x039785DC STP D11, D10, [X31 - 0x50]!
	0x039785E0 STP D9, D8, [X31 + 0x10]
	0x039785E4 STR X30, [X31 + 0x20]
	0x039785E8 STP X22, X21, [X31 + 0x30]
	0x039785EC STP X20, X19, [X31 + 0x40]
	0x039785F0 ADRP X20, 0xA69000
	0x039785F4 LDRB W8, [X20 + 0xA16]
	0x039785F8 MOV X19, X0
	0x039785FC TBNZ X8, 0x0, 0x3978620
	0x03978600 ADRP X0, 0x7D5000
	0x03978604 LDR X0, [X0 + 0xF90]
	0x03978608 BL 0x1C16CF4
	0x0397860C ADRP X0, 0x7D5000
	0x03978610 LDR X0, [X0 + 0xAB0]
	0x03978614 BL 0x1C16CF4
	0x03978618 MOVZ W8, 0x1
	0x0397861C STRB W8, [X20 + 0xA16]
	0x03978620 CBZ X19, 0x3978790
	0x03978624 ADRP X10, 0x7D5000
	0x03978628 LDR X8, [X19]
	0x0397862C LDR X10, [X10 + 0xF90]
	0x03978630 LDRH W9, [X8 + 0x12E]
	0x03978634 LDR X1, [X10]
	0x03978638 CBZ X9, 0x397865C
	0x0397863C LDR X10, [X8 + 0xB0]
	0x03978640 ADD X10, X10, 0x8
	0x03978644 LDUR X11, [X10 - 0x8]
	0x03978648 CMP X11, X1
	0x0397864C B.EQ 0x397866C
	0x03978650 SUBS X9, X9, 0x1
	0x03978654 ADD X10, X10, 0x10
	0x03978658 B.NE 0x3978644
	0x0397865C MOV X0, X19
	0x03978660 MOV W2, W31
	0x03978664 BL 0x1C5C788
	0x03978668 B 0x3978678
	0x0397866C LDRSW X9, [X10]
	0x03978670 ADD X8, X8, X9, 0x4, LSL
	0x03978674 ADD X0, X8, 0x138
	0x03978678 LDP X8, X1, [X0]
	0x0397867C MOV X0, X19
	0x03978680 BLR X8
	0x03978684 CMP W0, 0x1
	0x03978688 B.LT 0x3978790
	0x0397868C CBZ X19, 0x39787A8
	0x03978690 ADRP X22, 0x7D5000
	0x03978694 LDR X22, [X22 + 0xAB0]
	0x03978698 MOV W20, W0
	0x0397869C MOV W21, W31
	0x039786A0 LDR X8, [X19]
	0x039786A4 LDR X1, [X22]
	0x039786A8 LDRH W9, [X8 + 0x12E]
	0x039786AC CBZ X9, 0x39786D0
	0x039786B0 LDR X10, [X8 + 0xB0]
	0x039786B4 ADD X10, X10, 0x8
	0x039786B8 LDUR X11, [X10 - 0x8]
	0x039786BC CMP X11, X1
	0x039786C0 B.EQ 0x39786E0
	0x039786C4 SUBS X9, X9, 0x1
	0x039786C8 ADD X10, X10, 0x10
	0x039786CC B.NE 0x39786B8
	0x039786D0 MOV X0, X19
	0x039786D4 MOV W2, W31
	0x039786D8 BL 0x1C5C788
	0x039786DC B 0x39786EC
	0x039786E0 LDRSW X9, [X10]
	0x039786E4 ADD X8, X8, X9, 0x4, LSL
	0x039786E8 ADD X0, X8, 0x138
	0x039786EC LDP X8, X2, [X0]
	0x039786F0 MOV X0, X19
	0x039786F4 MOV W1, W21
	0x039786F8 BLR X8
	0x039786FC MOV X0, X31
	0x03978700 BL 0x390B514
	0x03978704 LDR X8, [X19]
	0x03978708 LDR X1, [X22]
	0x0397870C MOV V8.16B, V0.16B
	0x03978710 MOV V9.16B, V1.16B
	0x03978714 LDRH W9, [X8 + 0x12E]
	0x03978718 MOV V10.16B, V2.16B
	0x0397871C MOV V11.16B, V3.16B
	0x03978720 CBZ X9, 0x3978744
	0x03978724 LDR X10, [X8 + 0xB0]
	0x03978728 ADD X10, X10, 0x8
	0x0397872C LDUR X11, [X10 - 0x8]
	0x03978730 CMP X11, X1
	0x03978734 B.EQ 0x3978754
	0x03978738 SUBS X9, X9, 0x1
	0x0397873C ADD X10, X10, 0x10
	0x03978740 B.NE 0x397872C
	0x03978744 MOVZ W2, 0x1
	0x03978748 MOV X0, X19
	0x0397874C BL 0x1C5C788
	0x03978750 B 0x3978764
	0x03978754 LDR W9, [X10]
	0x03978758 ADD W9, W9, 0x1
	0x0397875C ADD X8, X8, W9, 0x4, SXTW
	0x03978760 ADD X0, X8, 0x138
	0x03978764 LDP X8, X2, [X0]
	0x03978768 MOV X0, X19
	0x0397876C MOV W1, W21
	0x03978770 MOV V0.16B, V8.16B
	0x03978774 MOV V1.16B, V9.16B
	0x03978778 MOV V2.16B, V10.16B
	0x0397877C MOV V3.16B, V11.16B
	0x03978780 BLR X8
	0x03978784 ADD W21, W21, 0x1
	0x03978788 CMP W21, W20
	0x0397878C B.NE 0x39786A0
	0x03978790 LDP X20, X19, [X31 + 0x40]
	0x03978794 LDP X22, X21, [X31 + 0x30]
	0x03978798 LDR X30, [X31 + 0x20]
	0x0397879C LDP D9, D8, [X31 + 0x10]
	0x039787A0 LDP D11, D10, [X31], #0x50
	0x039787A4 RET
	0x039787A8 BL 0x1C16F20
	0x039787AC STR X30, [X31 - 0x20]!
	0x039787B0 STP X20, X19, [X31 + 0x10]
	0x039787B4 ADRP X19, 0xA69000
	0x039787B8 ADRP X20, 0x7D7000
	0x039787BC LDRB W8, [X19 + 0xA18]
	0x039787C0 LDR X20, [X20 + 0xFE8]
	0x039787C4 TBNZ X8, 0x0, 0x39787DC
	0x039787C8 ADRP X0, 0x7D7000
	0x039787CC LDR X0, [X0 + 0xFE8]
	0x039787D0 BL 0x1C16CF4
	0x039787D4 MOVZ W8, 0x1
	0x039787D8 STRB W8, [X19 + 0xA18]
	0x039787DC LDR X0, [X20]
	0x039787E0 BL 0x1C16F10
	0x039787E4 MOV X1, X31
	0x039787E8 MOV X19, X0
	0x039787EC BL 0x33BDD8C
	0x039787F0 LDR X8, [X20]
	0x039787F4 LDR X8, [X8 + 0xB8]
	0x039787F8 STR X19, [X8]
	0x039787FC LDP X20, X19, [X31 + 0x10]
	0x03978800 LDR X30, [X31], #0x20
	0x03978804 RET
	0x03978808 MOV X1, X31
	0x0397880C B 0x33BDD8C
	0x03978810 SUB X31, X31, 0x20
	0x03978814 STR X30, [X31 + 0x10]
	0x03978818 STR X1, [X31]
	0x0397881C ADD X0, X31, 0x0
	0x03978820 MOV X1, X31
	0x03978824 STR W2, [X31 + 0x8]
	0x03978828 BL 0x393A474
	0x0397882C LDR X30, [X31 + 0x10]
	0x03978830 ADD X31, X31, 0x20
	0x03978834 RET
	0x03978838 SUB X31, X31, 0x20
	0x0397883C STR X30, [X31 + 0x10]
	0x03978840 STR X1, [X31]
	0x03978844 ADD X0, X31, 0x0
	0x03978848 MOV X1, X31
	0x0397884C STR W2, [X31 + 0x8]
	0x03978850 BL 0x393A474
	0x03978854 LDR X30, [X31 + 0x10]
	0x03978858 ADD X31, X31, 0x20
	0x0397885C RET
	0x03978860 CBZ X1, 0x3978870
	0x03978864 MOV X0, X1
	0x03978868 MOV X1, X31
	0x0397886C B 0x38FFC6C
	0x03978870 STR X30, [X31 - 0x10]!
	0x03978874 BL 0x1C16F20
	0x03978878 STP X30, X21, [X31 - 0x20]!
	0x0397887C STP X20, X19, [X31 + 0x10]
	0x03978880 ADRP X21, 0xA69000
	0x03978884 LDRB W8, [X21 + 0xA19]
	0x03978888 MOV X19, X1
	0x0397888C MOV X20, X0
	0x03978890 TBNZ X8, 0x0, 0x39788A8
	0x03978894 ADRP X0, 0x7D8000
	0x03978898 LDR X0, [X0 + 0x188]
	0x0397889C BL 0x1C16CF4
	0x039788A0 MOVZ W8, 0x1
	0x039788A4 STRB W8, [X21 + 0xA19]
	0x039788A8 LDR X8, [X20 + 0x10]
	0x039788AC CBZ X8, 0x39788D0
	0x039788B0 ADRP X9, 0x7D8000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA6A000
	014 Move X23, 0x77D000
	015 Move X19, 0x780000
	016 Move W8, [X22+2576]
	017 Move X23, [X23+3632]
	018 Move X19, [X19+2928]
	019 Move X21, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x7D7000
	026 Move X0, [X0+3408]
	027 Call 0x1C17CF4
	028 Move X0, 0x77C000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A4000
	032 Move X0, [X0+1976]
	033 Call 0x1C17CF4
	034 Move X0, 0x7A4000
	035 Move X0, [X0+1984]
	036 Call 0x1C17CF4
	037 Move X0, 0x77C000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x77D000
	041 Move X0, [X0+3600]
	042 Call 0x1C17CF4
	043 Move X0, 0x780000
	044 Move X0, [X0+2928]
	045 Call 0x1C17CF4
	046 Move X0, 0x77D000
	047 Move X0, [X0+3624]
	048 Call 0x1C17CF4
	049 Move X0, 0x7A6000
	050 Move X0, [X0+3896]
	051 Call 0x1C17CF4
	052 Move X0, 0x77D000
	053 Move X0, [X0+3632]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+2576], W8
	057 Move X0, [X23]
	058 Call 0x1C17F10
	059 Move X1, [X19]
	060 Move X19, X0
	061 Call List`1<Int32>..ctor, X0
	062 Compare X21, 0
	063 JumpIfEqual {227}
	064 Compare X20, 0
	065 JumpIfEqual {227}
	066 Move X10, 0x7A4000
	067 Move X8, [X20]
	068 Move X10, [X10+1976]
	069 Move W25, [X21+24]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X20
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X20
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X20, X0
	091 Compare X0, 0
	092 JumpIfEqual {228}
	093 Move X26, 0x77C000
	094 Move X27, 0x7A4000
	095 Move X28, 0x7D7000
	096 Move X29, 0x7A6000
	097 Move X24, 0x77D000
	098 Move X26, [X26+3608]
	099 Move X27, [X27+1984]
	100 Move X28, [X28+3408]
	101 Move X29, [X29+3896]
	102 Move X24, [X24+3600]
	103 Move X8, [X20]
	104 Move X1, [X26]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {183}
	128 Move X8, [X20]
	129 Move X1, [X27]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X20
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X2, [X28]
	150 Move W22, W0
	151 Move X0, X21
	152 Move W1, W22
	153 Call 0x218001C, X0, X1
	154 Add W23, W0, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X2, [X29]
	157 Move X0, X21
	158 Move W1, W23
	159 Call List`1<Int32>.get_Item, X0, X1
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Compare X19, 0
	162 JumpIfEqual {225}
	163 Move W10, [X19+28]
	164 Move X8, [X19+16]
	165 Move X9, [X24]
	166 Add W10, W10, 1
	167 Move [X19+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {226}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 Subtract W1, W22, W23
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W9, W10, 1
	175 Add X8, X8, X10
	176 Move [X19+24], W9
	177 Move [X8+32], W1
	178 Move X8, [X9+32]
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Move X0, X19
	182 Call List`1<Int32>.AddWithResize, X0, X1
	183 Move X21, X31
	184 Compare X20, 0
	185 JumpIfEqual {209}
	186 Move X8, [X20]
	187 Move X10, 0x77C000
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Move X10, [X10+3584]
	190 Move X1, [X10]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X20
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X20
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X21, 0
	210 JumpIfNotEqual {229}
	211 Move X0, X19
	212 Move X20, [X31+80]
	213 Move X19, [X31+88]
	214 Move X22, [X31+64]
	215 Move X21, [X31+72]
	216 Move X24, [X31+48]
	217 Move X23, [X31+56]
	218 Move X26, [X31+32]
	219 Move X25, [X31+40]
	220 Move X28, [X31+16]
	221 Move X27, [X31+24]
	222 Move X29, [X31+96]
	223 Move X30, [X31+104]
	224 Return X0
	225 Call 0x1C17F20
	226 Call 0x1C17F20
	227 Call 0x1C17F20
	228 Call 0x1C17F20
	229 Move X0, X21
	230 Call 0x1C17F18
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Call 0x3EB2AD0
	233 Move X21, [X0]
	234 Call 0x3EB2AE0
	235 Move X19, X0
	236 Move X21, X31
	237 Move X19, X0
	238 Compare X20, 0
	239 JumpIfEqual {263}
	240 Move X8, [X20]
	241 Move X10, 0x77C000
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Move X10, [X10+3584]
	244 Move X1, [X10]
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move X0, X20
	254 Move W2, W31
	255 Call 0x1C5D788
	256 NotImplemented "Instruction LDRSW not yet implemented."
	257 Add X8, X8, X9
	258 Add X0, X8, 312
	259 Move X8, [X0]
	260 Move X1, [X0+8]
	261 Move X0, X20
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Compare X21, 0
	264 JumpIfNotEqual {267}
	265 Move X0, X19
	266 Call 0x1D2D690
	267 Move X0, X21
	268 Call 0x1C17F18
	269 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> RebuildEdges(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, System.Collections.Generic.List`1<System.Int32> removed)

Disassembly:
	0x039788B4 LDR X9, [X9 + 0x188]
	0x039788B8 LDR X0, [X8 + 0x28]
	0x039788BC MOV X1, X19
	0x039788C0 LDP X20, X19, [X31 + 0x10]
	0x039788C4 LDR X2, [X9]
	0x039788C8 LDP X30, X21, [X31], #0x20
	0x039788CC B 0x21BA5B0
	0x039788D0 BL 0x1C16F20
	0x039788D4 SUB X31, X31, 0x20
	0x039788D8 STR X30, [X31 + 0x10]
	0x039788DC STR X1, [X31]
	0x039788E0 STR W2, [X31 + 0x8]
	0x039788E4 LDR X1, [X0 + 0x10]
	0x039788E8 LDR W2, [X0 + 0x18]
	0x039788EC ADD X0, X31, 0x0
	0x039788F0 MOV X3, X31
	0x039788F4 BL 0x393A5F4
	0x039788F8 LDR X30, [X31 + 0x10]
	0x039788FC AND W0, W0, 0x1
	0x03978900 ADD X31, X31, 0x20
	0x03978904 RET
	0x03978908 SUB X31, X31, 0xB0
	0x0397890C STP D15, D14, [X31 + 0x40]
	0x03978910 STP D13, D12, [X31 + 0x50]
	0x03978914 STP D11, D10, [X31 + 0x60]
	0x03978918 STP D9, D8, [X31 + 0x70]
	0x0397891C STR X30, [X31 + 0x80]
	0x03978920 STP X22, X21, [X31 + 0x90]
	0x03978924 STP X20, X19, [X31 + 0xA0]
	0x03978928 ADRP X22, 0xA69000
	0x0397892C LDRB W8, [X22 + 0xA1C]
	0x03978930 MOV V8.16B, V0.16B
	0x03978934 MOV X20, X2
	0x03978938 MOV X21, X1
	0x0397893C MOV X19, X0
	0x03978940 TBNZ X8, 0x0, 0x3978958
	0x03978944 ADRP X0, 0x7D6000
	0x03978948 LDR X0, [X0 + 0xB08]
	0x0397894C BL 0x1C16CF4
	0x03978950 MOVZ W8, 0x1
	0x03978954 STRB W8, [X22 + 0xA1C]
	0x03978958 CBZ X19, 0x3978F8C
	0x0397895C ADRP X22, 0x7D6000
	0x03978960 LDR X22, [X22 + 0xB08]
	0x03978964 MOV X0, X19
	0x03978968 MOV X1, X31
	0x0397896C MOV X2, X31
	0x03978970 BL 0x3912114
	0x03978974 LDR X8, [X22]
	0x03978978 MOV X19, X0
	0x0397897C LDR W9, [X8 + 0xE0]
	0x03978980 CBNZ W9, 0x397898C
	0x03978984 MOV X0, X8
	0x03978988 BL 0x1C16DFC
	0x0397898C MOV X0, X21
	0x03978990 MOV X1, X20
	0x03978994 MOV X2, X31
	0x03978998 BL 0x3942088
	0x0397899C FMOV S9, W31
	0x039789A0 CBZ X0, 0x3978F60
	0x039789A4 LDR W9, [X0 + 0x18]
	0x039789A8 MOV X20, X0
	0x039789AC CBZ W9, 0x3978F88
	0x039789B0 CBZ X19, 0x3978F8C
	0x039789B4 LDRSW X8, [X20 + 0x20]
	0x039789B8 LDR W10, [X19 + 0x18]
	0x039789BC CMP W8, W10
	0x039789C0 B.CS 0x3978F88
	0x039789C4 ADD X8, X19, X8, 0x3, LSL
	0x039789C8 LDR X8, [X8 + 0x20]
	0x039789CC CBZ X8, 0x3978F8C
	0x039789D0 CMP W9, 0x1
	0x039789D4 B.LS 0x3978F88
	0x039789D8 LDRSW X11, [X20 + 0x24]
	0x039789DC CMP W11, W10
	0x039789E0 B.CS 0x3978F88
	0x039789E4 ADD X11, X19, X11, 0x3, LSL
	0x039789E8 LDR X11, [X11 + 0x20]
	0x039789EC CBZ X11, 0x3978F8C
	0x039789F0 CMP W9, 0x2
	0x039789F4 B.LS 0x3978F88
	0x039789F8 LDRSW X9, [X20 + 0x28]
	0x039789FC CMP W9, W10
	0x03978A00 B.CS 0x3978F88
	0x03978A04 ADD X9, X19, X9, 0x3, LSL
	0x03978A08 LDR X9, [X9 + 0x20]
	0x03978A0C CBZ X9, 0x3978F8C
	0x03978A10 LDP S0, S1, [X8 + 0x10]
	0x03978A14 LDR V2, [X8 + 0x18]
	0x03978A18 LDP S3, S4, [X11 + 0x10]
	0x03978A1C LDR V5, [X11 + 0x18]
	0x03978A20 LDR X8, [X9 + 0x10]
	0x03978A24 LDR V6, [X9 + 0x18]
	0x03978A28 MOV X0, X31
	0x03978A2C STR X8, [X31]
	0x03978A30 STR S6, [X31 + 0x8]
	0x03978A34 BL 0x3908F20
	0x03978A38 LDR W10, [X20 + 0x18]
	0x03978A3C CMP W10, 0x2
	0x03978A40 B.LS 0x3978F88
	0x03978A44 LDRSW X8, [X20 + 0x28]
	0x03978A48 LDR W9, [X19 + 0x18]
	0x03978A4C CMP W8, W9
	0x03978A50 B.CS 0x3978F88
	0x03978A54 ADD X8, X19, X8, 0x3, LSL
	0x03978A58 LDR X8, [X8 + 0x20]
	0x03978A5C CBZ X8, 0x3978F8C
	0x03978A60 CMP W10, 0x3
	0x03978A64 B.LS 0x3978F88
	0x03978A68 LDRSW X10, [X20 + 0x2C]
	0x03978A6C CMP W10, W9
	0x03978A70 B.CS 0x3978F88
	0x03978A74 ADD X10, X19, X10, 0x3, LSL
	0x03978A78 LDR X10, [X10 + 0x20]
	0x03978A7C CBZ X10, 0x3978F8C
	0x03978A80 LDRSW X11, [X20 + 0x20]
	0x03978A84 CMP W11, W9
	0x03978A88 B.CS 0x3978F88
	0x03978A8C ADD X9, X19, X11, 0x3, LSL
	0x03978A90 LDR X9, [X9 + 0x20]
	0x03978A94 CBZ X9, 0x3978F8C
	0x03978A98 MOV V10.16B, V0.16B
	0x03978A9C MOV V11.16B, V1.16B
	0x03978AA0 MOV V12.16B, V2.16B
	0x03978AA4 LDP S0, S1, [X8 + 0x10]
	0x03978AA8 LDR V2, [X8 + 0x18]
	0x03978AAC LDP S3, S4, [X10 + 0x10]
	0x03978AB0 LDR V5, [X10 + 0x18]
	0x03978AB4 LDR X8, [X9 + 0x10]
	0x03978AB8 LDR V6, [X9 + 0x18]
	0x03978ABC MOV X0, X31
	0x03978AC0 STR X8, [X31]
	0x03978AC4 STR S6, [X31 + 0x8]
	0x03978AC8 BL 0x3908F20
	0x03978ACC FMUL S0, S10, S0
	0x03978AD0 FMUL S1, S11, S1
	0x03978AD4 FADD S0, S0, S1
	0x03978AD8 FMUL S1, S12, S2
	0x03978ADC FADD S0, S1, S0
	0x03978AE0 FCMP S0, S8
	0x03978AE4 B.MI 0x3978F60
	0x03978AE8 LDR W9, [X20 + 0x18]
	0x03978AEC CMP W9, 0x1
	0x03978AF0 B.LS 0x3978F88
	0x03978AF4 LDRSW X8, [X20 + 0x24]
	0x03978AF8 LDR W10, [X19 + 0x18]
	0x03978AFC CMP W8, W10
	0x03978B00 B.CS 0x3978F88
	0x03978B04 ADD X8, X19, X8, 0x3, LSL
	0x03978B08 LDR X8, [X8 + 0x20]
	0x03978B0C CBZ X8, 0x3978F8C
	0x03978B10 LDRSW X11, [X20 + 0x20]
	0x03978B14 CMP W11, W10
	0x03978B18 B.CS 0x3978F88
	0x03978B1C ADD X11, X19, X11, 0x3, LSL
	0x03978B20 LDR X11, [X11 + 0x20]
	0x03978B24 CBZ X11, 0x3978F8C
	0x03978B28 CMP W9, 0x2
	0x03978B2C B.LS 0x3978F88
	0x03978B30 LDRSW X12, [X20 + 0x28]
	0x03978B34 CMP W12, W10
	0x03978B38 B.CS 0x3978F88
	0x03978B3C ADD X12, X19, X12, 0x3, LSL
	0x03978B40 LDR X12, [X12 + 0x20]
	0x03978B44 CBZ X12, 0x3978F8C
	0x03978B48 CMP W9, 0x3
	0x03978B4C B.LS 0x3978F88
	0x03978B50 LDRSW X9, [X20 + 0x2C]
	0x03978B54 CMP W9, W10
	0x03978B58 B.CS 0x3978F88
	0x03978B5C ADD X9, X19, X9, 0x3, LSL
	0x03978B60 LDR X9, [X9 + 0x20]
	0x03978B64 CBZ X9, 0x3978F8C
	0x03978B68 STR S0, [X31 + 0x2C]
	0x03978B6C LDR V0, [X12 + 0x18]
	0x03978B70 LDP S9, S1, [X12 + 0x10]
	0x03978B74 ADRP X19, 0xA60000
	0x03978B78 LDP S10, S14, [X8 + 0x10]
	0x03978B7C STR S0, [X31 + 0x3C]
	0x03978B80 LDR V0, [X9 + 0x10]
	0x03978B84 LDR V15, [X8 + 0x18]
	0x03978B88 LDP S8, S11, [X11 + 0x10]
	0x03978B8C LDR V13, [X11 + 0x18]
	0x03978B90 STP S1, S0, [X31 + 0x30]
	0x03978B94 LDR V1, [X9 + 0x14]
	0x03978B98 LDRB W8, [X19 + 0x785]
	0x03978B9C LDR V0, [X9 + 0x18]
	0x03978BA0 STP S0, S1, [X31 + 0x88]
	0x03978BA4 CBNZ W8, 0x3978BBC
	0x03978BA8 ADRP X0, 0x77B000
	0x03978BAC LDR X0, [X0 + 0x5A8]
	0x03978BB0 BL 0x1C16CF4
	0x03978BB4 MOVZ W8, 0x1
	0x03978BB8 STRB W8, [X19 + 0x785]
	0x03978BBC ADRP X20, 0x77B000
	0x03978BC0 LDR X20, [X20 + 0x5A8]
	0x03978BC4 STP S11, S8, [X31 + 0x18]
	0x03978BC8 FSUB S8, S10, S8
	0x03978BCC FSUB S12, S14, S11
	0x03978BD0 LDR X0, [X20]
	0x03978BD4 FSUB S11, S15, S13
	0x03978BD8 STR S13, [X31 + 0x38]
	0x03978BDC LDR W8, [X0 + 0xE0]
	0x03978BE0 CBNZ W8, 0x3978BE8
	0x03978BE4 BL 0x1C16DFC
	0x03978BE8 ADRP X8, 0xFFFFFFFFFD172000
	0x03978BEC FMUL S0, S8, S8
	0x03978BF0 FMUL S1, S12, S12
	0x03978BF4 LDR V13, [X8 + 0x17C]
	0x03978BF8 FADD S0, S0, S1
	0x03978BFC FMUL S1, S11, S11
	0x03978C00 FADD S0, S1, S0
	0x03978C04 FSQRT S0, S0
	0x03978C08 FCMP S0, S13
	0x03978C0C B.LE 0x3978C28
	0x03978C10 FDIV S1, S8, S0
	0x03978C14 STR S1, [X31 + 0x20]
	0x03978C18 FDIV S1, S12, S0
	0x03978C1C STR S1, [X31 + 0x28]
	0x03978C20 FDIV S0, S11, S0
	0x03978C24 B 0x3978C6C
	0x03978C28 ADRP X21, 0xA60000
	0x03978C2C LDRB W8, [X21 + 0x783]
	0x03978C30 CBNZ W8, 0x3978C48
	0x03978C34 ADRP X0, 0x77B000
	0x03978C38 LDR X0, [X0 + 0x5A0]
	0x03978C3C BL 0x1C16CF4
	0x03978C40 MOVZ W8, 0x1
	0x03978C44 STRB W8, [X21 + 0x783]
	0x03978C48 ADRP X8, 0x77B000
	0x03978C4C LDR X8, [X8 + 0x5A0]
	0x03978C50 LDR X8, [X8]
	0x03978C54 LDR X8, [X8 + 0xB8]
	0x03978C58 LDR V0, [X8]
	0x03978C5C STR S0, [X31 + 0x20]
	0x03978C60 LDR V0, [X8 + 0x4]
	0x03978C64 STR S0, [X31 + 0x28]
	0x03978C68 LDR V0, [X8 + 0x8]
	0x03978C6C MOV V12.16B, V9.16B
	0x03978C70 LDRB W8, [X19 + 0x785]
	0x03978C74 LDR V9, [X31 + 0x30]
	0x03978C78 STR S0, [X31 + 0x24]
	0x03978C7C CBNZ W8, 0x3978C94
	0x03978C80 ADRP X0, 0x77B000
	0x03978C84 LDR X0, [X0 + 0x5A8]
	0x03978C88 BL 0x1C16CF4
	0x03978C8C MOVZ W8, 0x1
	0x03978C90 STRB W8, [X19 + 0x785]
	0x03978C94 LDR X0, [X20]
	0x03978C98 LDR V0, [X31 + 0x3C]
	0x03978C9C FSUB S11, S12, S10
	0x03978CA0 FSUB S10, S9, S14
	0x03978CA4 LDR W8, [X0 + 0xE0]
	0x03978CA8 FSUB S8, S0, S15
	0x03978CAC CBNZ W8, 0x3978CB4
	0x03978CB0 BL 0x1C16DFC
	0x03978CB4 FMUL S0, S11, S11
	0x03978CB8 FMUL S1, S10, S10
	0x03978CBC FADD S0, S0, S1
	0x03978CC0 FMUL S1, S8, S8
	0x03978CC4 LDR V14, [X31 + 0x34]
	0x03978CC8 FADD S0, S1, S0
	0x03978CCC FSQRT S0, S0
	0x03978CD0 FCMP S0, S13
	0x03978CD4 B.LE 0x3978CEC
	0x03978CD8 FDIV S1, S10, S0
	0x03978CDC FDIV S15, S11, S0
	0x03978CE0 STR S1, [X31 + 0x10]
	0x03978CE4 FDIV S10, S8, S0
	0x03978CE8 B 0x3978D28
	0x03978CEC ADRP X21, 0xA60000
	0x03978CF0 LDRB W8, [X21 + 0x783]
	0x03978CF4 CBNZ W8, 0x3978D0C
	0x03978CF8 ADRP X0, 0x77B000
	0x03978CFC LDR X0, [X0 + 0x5A0]
	0x03978D00 BL 0x1C16CF4
	0x03978D04 MOVZ W8, 0x1
	0x03978D08 STRB W8, [X21 + 0x783]
	0x03978D0C ADRP X8, 0x77B000
	0x03978D10 LDR X8, [X8 + 0x5A0]
	0x03978D14 LDR X8, [X8]
	0x03978D18 LDR X8, [X8 + 0xB8]
	0x03978D1C LDP S15, S0, [X8]
	0x03978D20 LDR V10, [X8 + 0x8]
	0x03978D24 STR S0, [X31 + 0x10]
	0x03978D28 LDRB W8, [X19 + 0x785]
	0x03978D2C CBNZ W8, 0x3978D44
	0x03978D30 ADRP X0, 0x77B000
	0x03978D34 LDR X0, [X0 + 0x5A8]
	0x03978D38 BL 0x1C16CF4
	0x03978D3C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xA6A000
	015 Move X23, 0x7D6000
	016 Move X19, 0x7D6000
	017 Move W8, [X22+2577]
	018 Move X23, [X23+3448]
	019 Move X19, [X19+3440]
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0x7D7000
	027 Move X0, [X0+3408]
	028 Call 0x1C17CF4
	029 Move X0, 0x77C000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0x7D6000
	033 Move X0, [X0+3208]
	034 Call 0x1C17CF4
	035 Move X0, 0x7D6000
	036 Move X0, [X0+3216]
	037 Call 0x1C17CF4
	038 Move X0, 0x77C000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x7D6000
	042 Move X0, [X0+3432]
	043 Call 0x1C17CF4
	044 Move X0, 0x7D6000
	045 Move X0, [X0+3440]
	046 Call 0x1C17CF4
	047 Move X0, 0x77D000
	048 Move X0, [X0+3624]
	049 Call 0x1C17CF4
	050 Move X0, 0x7A6000
	051 Move X0, [X0+3896]
	052 Call 0x1C17CF4
	053 Move X0, 0x7D6000
	054 Move X0, [X0+3448]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X22+2577], W8
	058 Move X0, [X23]
	059 Call 0x1C17F10
	060 Move X1, [X19]
	061 Move X19, X0
	062 Call List`1<Edge>..ctor, X0
	063 Compare X21, 0
	064 JumpIfEqual {261}
	065 Compare X20, 0
	066 JumpIfEqual {261}
	067 Move X10, 0x7D6000
	068 Move X8, [X20]
	069 Move X10, [X10+3208]
	070 Move W27, [X21+24]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X20, X0
	092 Compare X0, 0
	093 JumpIfEqual {262}
	094 Move X28, 0x77C000
	095 Move X29, 0x7D6000
	096 Move X26, 0x7D7000
	097 Move X28, [X28+3608]
	098 Move X29, [X29+3216]
	099 Move X26, [X26+3408]
	100 Move X8, [X20]
	101 Move X1, [X28]
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X10, [X8+176]
	106 Add X10, X10, 8
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Subtract X9, X9, 1
	110 Add X10, X10, 16
	111 Move X0, X20
	112 Move W2, W31
	113 Call 0x1C5D788
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X20
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {216}
	125 Move X8, [X20]
	126 Move X1, [X29]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X20
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X1, [X0+8]
	144 Move X0, X20
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X2, [X26]
	147 Move X22, X0
	148 Move X0, X21
	149 Move W1, W22
	150 Call 0x218001C, X0, X1
	151 Move X2, [X26]
	152 Move W24, W0
	153 Move X23, X22
	154 ShiftRight X23, 32
	155 And X23, X23, 0x7FFFFFFF
	156 Move X0, X21
	157 Move W1, W23
	158 Call 0x218001C, X0, X1
	159 Move W25, W0
	160 Add W24, W24, 1
	161 Move TEMP, X24
	162 And TEMP, TEMP, -2147483648
	163 Compare TEMP, -2147483648
	164 JumpIfEqual {173}
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, 0x7A6000
	167 Move X8, [X8+3896]
	168 Move X2, [X8]
	169 Move X0, X21
	170 Move W1, W24
	171 Call List`1<Int32>.get_Item, X0, X1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W25, W25, 1
	174 Move TEMP, X25
	175 And TEMP, TEMP, -2147483648
	176 Compare TEMP, -2147483648
	177 JumpIfEqual {186}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, 0x7A6000
	180 Move X8, [X8+3896]
	181 Move X2, [X8]
	182 Move X0, X21
	183 Move W1, W25
	184 Call List`1<Int32>.get_Item, X0, X1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract W1, W22, W24
	187 Move [X31+8], X31
	188 Subtract W2, W23, W25
	189 Add X0, X31, 8
	190 Move X3, X31
	191 Call Edge..ctor, X0, X1, X2
	192 Compare X19, 0
	193 JumpIfEqual {259}
	194 Move X9, 0x7D6000
	195 Move X1, [X31+8]
	196 Move W10, [X19+28]
	197 Move X8, [X19+16]
	198 Move X9, [X9+3432]
	199 Add W10, W10, 1
	200 Move X9, [X9]
	201 Move [X19+28], W10
	202 Compare X8, 0
	203 JumpIfEqual {260}
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Move W11, [X8+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W9, W10, 1
	208 Add X8, X8, X10
	209 Move [X19+24], W9
	210 Move [X8+32], X1
	211 Move X8, [X9+32]
	212 Move X8, [X8+192]
	213 Move X2, [X8+112]
	214 Move X0, X19
	215 Call List`1<Edge>.AddWithResize, X0, X1
	216 Move X21, X31
	217 Compare X20, 0
	218 JumpIfEqual {242}
	219 Move X8, [X20]
	220 Move X10, 0x77C000
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Move X10, [X10+3584]
	223 Move X1, [X10]
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move X0, X20
	233 Move W2, W31
	234 Call 0x1C5D788
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Add X8, X8, X9
	237 Add X0, X8, 312
	238 Move X8, [X0]
	239 Move X1, [X0+8]
	240 Move X0, X20
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Compare X21, 0
	243 JumpIfNotEqual {263}
	244 Move X0, X19
	245 Move X20, [X31+96]
	246 Move X19, [X31+104]
	247 Move X22, [X31+80]
	248 Move X21, [X31+88]
	249 Move X24, [X31+64]
	250 Move X23, [X31+72]
	251 Move X26, [X31+48]
	252 Move X25, [X31+56]
	253 Move X28, [X31+32]
	254 Move X27, [X31+40]
	255 Move X29, [X31+16]
	256 Move X30, [X31+24]
	257 Add X31, X31, 112
	258 Return X0
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Move X0, X21
	264 Call 0x1C17F18
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Call 0x3EB2AD0
	267 Move X21, [X0]
	268 Call 0x3EB2AE0
	269 Move X19, X0
	270 Move X21, X31
	271 Move X19, X0
	272 Compare X20, 0
	273 JumpIfEqual {297}
	274 Move X8, [X20]
	275 Move X10, 0x77C000
	276 NotImplemented "Instruction LDRH not yet implemented."
	277 Move X10, [X10+3584]
	278 Move X1, [X10]
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X20
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X20
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Compare X21, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X19
	300 Call 0x1D2D690
	301 Move X0, X21
	302 Call 0x1C17F18
	303 Call 0x1991590

Method: System.Void RebuildSelectionIndexes(UnityEngine.ProBuilder.ProBuilderMesh mesh, ref UnityEngine.ProBuilder.Face[] faces, ref UnityEngine.ProBuilder.Edge[] edges, ref System.Int32[] indices, System.Collections.Generic.IEnumerable`1<System.Int32> removed)

Disassembly:
	0x03978D40 STRB W8, [X19 + 0x785]
	0x03978D44 LDR V0, [X31 + 0x8C]
	0x03978D48 LDR X0, [X20]
	0x03978D4C LDR V1, [X31 + 0x3C]
	0x03978D50 FSUB S11, S14, S12
	0x03978D54 FSUB S8, S0, S9
	0x03978D58 LDR V0, [X31 + 0x88]
	0x03978D5C LDR W8, [X0 + 0xE0]
	0x03978D60 FSUB S9, S0, S1
	0x03978D64 CBNZ W8, 0x3978D6C
	0x03978D68 BL 0x1C16DFC
	0x03978D6C FMUL S0, S11, S11
	0x03978D70 FMUL S1, S8, S8
	0x03978D74 FADD S0, S0, S1
	0x03978D78 FMUL S1, S9, S9
	0x03978D7C FADD S0, S1, S0
	0x03978D80 FSQRT S0, S0
	0x03978D84 FCMP S0, S13
	0x03978D88 STR S10, [X31 + 0x14]
	0x03978D8C B.LE 0x3978DA0
	0x03978D90 FDIV S12, S11, S0
	0x03978D94 FDIV S8, S8, S0
	0x03978D98 FDIV S9, S9, S0
	0x03978D9C B 0x3978DD8
	0x03978DA0 ADRP X21, 0xA60000
	0x03978DA4 LDRB W8, [X21 + 0x783]
	0x03978DA8 CBNZ W8, 0x3978DC0
	0x03978DAC ADRP X0, 0x77B000
	0x03978DB0 LDR X0, [X0 + 0x5A0]
	0x03978DB4 BL 0x1C16CF4
	0x03978DB8 MOVZ W8, 0x1
	0x03978DBC STRB W8, [X21 + 0x783]
	0x03978DC0 ADRP X8, 0x77B000
	0x03978DC4 LDR X8, [X8 + 0x5A0]
	0x03978DC8 LDR X8, [X8]
	0x03978DCC LDR X8, [X8 + 0xB8]
	0x03978DD0 LDP S12, S8, [X8]
	0x03978DD4 LDR V9, [X8 + 0x8]
	0x03978DD8 LDP S11, S10, [X31 + 0x18]
	0x03978DDC LDRB W8, [X19 + 0x785]
	0x03978DE0 CBNZ W8, 0x3978DF8
	0x03978DE4 ADRP X0, 0x77B000
	0x03978DE8 LDR X0, [X0 + 0x5A8]
	0x03978DEC BL 0x1C16CF4
	0x03978DF0 MOVZ W8, 0x1
	0x03978DF4 STRB W8, [X19 + 0x785]
	0x03978DF8 LDP S1, S0, [X31 + 0x88]
	0x03978DFC LDR X0, [X20]
	0x03978E00 FSUB S10, S10, S14
	0x03978E04 FSUB S14, S11, S0
	0x03978E08 LDR V0, [X31 + 0x38]
	0x03978E0C LDR W8, [X0 + 0xE0]
	0x03978E10 FSUB S11, S0, S1
	0x03978E14 CBNZ W8, 0x3978E1C
	0x03978E18 BL 0x1C16DFC
	0x03978E1C FMUL S0, S10, S10
	0x03978E20 FMUL S1, S14, S14
	0x03978E24 FADD S0, S0, S1
	0x03978E28 FMUL S1, S11, S11
	0x03978E2C FADD S0, S1, S0
	0x03978E30 FSQRT S0, S0
	0x03978E34 FCMP S0, S13
	0x03978E38 B.LE 0x3978E4C
	0x03978E3C FDIV S1, S10, S0
	0x03978E40 FDIV S2, S14, S0
	0x03978E44 FDIV S0, S11, S0
	0x03978E48 B 0x3978E84
	0x03978E4C ADRP X19, 0xA60000
	0x03978E50 LDRB W8, [X19 + 0x783]
	0x03978E54 CBNZ W8, 0x3978E6C
	0x03978E58 ADRP X0, 0x77B000
	0x03978E5C LDR X0, [X0 + 0x5A0]
	0x03978E60 BL 0x1C16CF4
	0x03978E64 MOVZ W8, 0x1
	0x03978E68 STRB W8, [X19 + 0x783]
	0x03978E6C ADRP X8, 0x77B000
	0x03978E70 LDR X8, [X8 + 0x5A0]
	0x03978E74 LDR X8, [X8]
	0x03978E78 LDR X8, [X8 + 0xB8]
	0x03978E7C LDP S1, S2, [X8]
	0x03978E80 LDR V0, [X8 + 0x8]
	0x03978E84 LDP S22, S26, [X31 + 0x28]
	0x03978E88 LDP S19, S25, [X31 + 0x20]
	0x03978E8C LDP S23, S27, [X31 + 0x10]
	0x03978E90 FMUL S6, S15, S12
	0x03978E94 FMUL S17, S12, S1
	0x03978E98 FMUL S3, S19, S15
	0x03978E9C FMUL S4, S22, S23
	0x03978EA0 FMUL S7, S23, S8
	0x03978EA4 FMUL S5, S25, S27
	0x03978EA8 FMUL S16, S27, S9
	0x03978EAC FMUL S18, S19, S12
	0x03978EB0 FMUL S19, S19, S1
	0x03978EB4 FMUL S1, S15, S1
	0x03978EB8 FMUL S20, S8, S2
	0x03978EBC FMUL S21, S22, S8
	0x03978EC0 FMUL S22, S22, S2
	0x03978EC4 FMUL S2, S23, S2
	0x03978EC8 FADD S3, S3, S4
	0x03978ECC FADD S4, S6, S7
	0x03978ED0 FMUL S23, S9, S0
	0x03978ED4 FMUL S24, S25, S9
	0x03978ED8 FMUL S25, S25, S0
	0x03978EDC FMUL S0, S27, S0
	0x03978EE0 FADD S7, S17, S20
	0x03978EE4 FADD S1, S1, S2
	0x03978EE8 FADD S3, S5, S3
	0x03978EEC FADD S4, S16, S4
	0x03978EF0 FADD S19, S19, S22
	0x03978EF4 FADD S5, S23, S7
	0x03978EF8 FADD S0, S0, S1
	0x03978EFC FABS S1, S3
	0x03978F00 FABS S3, S4
	0x03978F04 FADD S7, S25, S19
	0x03978F08 FABS S4, S5
	0x03978F0C FADD S1, S1, S3
	0x03978F10 FABS S5, S7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xA6A000
	010 Move X25, 0x7D9000
	011 Move W8, [X24+2578]
	012 Move X25, [X25+336]
	013 Move X22, X4
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x7D7000
	023 Move X0, [X0+992]
	024 Call 0x1C17CF4
	025 Move X0, 0x7D7000
	026 Move X0, [X0+680]
	027 Call 0x1C17CF4
	028 Move X0, 0x7D7000
	029 Move X0, [X0+3768]
	030 Call 0x1C17CF4
	031 Move X0, 0x7D7000
	032 Move X0, [X0+3776]
	033 Call 0x1C17CF4
	034 Move X0, 0x7A4000
	035 Move X0, [X0+1936]
	036 Call 0x1C17CF4
	037 Move X0, 0x77D000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x7D8000
	041 Move X0, [X0+2816]
	042 Call 0x1C17CF4
	043 Move X0, 0x7D9000
	044 Move X0, [X0+344]
	045 Call 0x1C17CF4
	046 Move X0, 0x7D9000
	047 Move X0, [X0+336]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X24+2578], W8
	051 Move X0, [X25]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X24, X0
	055 Call Object..ctor, X0
	056 Compare X24, 0
	057 JumpIfEqual {138}
	058 Move X8, 0x7D7000
	059 Move X8, [X8+680]
	060 Move [X24+16], X23
	061 Move X0, X22
	062 Move X1, [X8]
	063 Call Enumerable.ToList, X0
	064 Compare X0, 0
	065 JumpIfEqual {138}
	066 Move X8, 0x7A4000
	067 Move X8, [X8+1936]
	068 Move X22, X0
	069 Move X1, [X8]
	070 Call List`1<Int32>.Sort, X0
	071 Move X23, [X21]
	072 Compare X23, 0
	073 JumpIfEqual {99}
	074 Move X8, [X23+24]
	075 Compare X8, 0
	076 JumpIfEqual {99}
	077 Move X8, 0x7D7000
	078 Move X8, [X8+3776]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X8, 0x7D9000
	082 Move X8, [X8+344]
	083 Move X1, X24
	084 Move X3, X31
	085 Move X25, X0
	086 Move X2, [X8]
	087 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	088 Move X8, 0x7D7000
	089 Move X8, [X8+3768]
	090 Move X0, X23
	091 Move X1, X25
	092 Move X2, [X8]
	093 Call Enumerable.Where, X0, X1
	094 Move X8, 0x7D7000
	095 Move X8, [X8+992]
	096 Move X1, [X8]
	097 Call Enumerable.ToArray, X0
	098 Move [X21], X0
	099 Move X0, [X20]
	100 Compare X0, 0
	101 JumpIfEqual {114}
	102 Move X8, [X0+24]
	103 Compare X8, 0
	104 JumpIfEqual {114}
	105 Move X1, X22
	106 Call MeshValidation.RebuildEdges, X0, X1
	107 Compare X0, 0
	108 JumpIfEqual {138}
	109 Move X8, 0x7D8000
	110 Move X8, [X8+2816]
	111 Move X1, [X8]
	112 Call List`1<Edge>.ToArray, X0
	113 Move [X20], X0
	114 Move X0, [X19]
	115 Compare X0, 0
	116 JumpIfEqual {129}
	117 Move X8, [X0+24]
	118 Compare X8, 0
	119 JumpIfEqual {129}
	120 Move X1, X22
	121 Call MeshValidation.RebuildIndexes, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {138}
	124 Move X8, 0x77D000
	125 Move X8, [X8+3608]
	126 Move X1, [X8]
	127 Call List`1<Int32>.ToArray, X0
	128 Move [X19], X0
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 Return 
	138 Call 0x1C17F20

Method: System.Boolean EnsureMeshIsValid(UnityEngine.ProBuilder.ProBuilderMesh mesh, out System.Int32 removedVertices)

Disassembly:
	0x03978F1C FADD S18, S18, S21
	0x03978F20 FADD S1, S5, S1
	0x03978F24 FMOV S17, 1
	0x03978F28 ADRP X8, 0xFFFFFFFFFD172000
	0x03978F2C FADD S16, S24, S18
	0x03978F30 FMUL S1, S1, S6
	0x03978F34 FMOV S20, 0.5
	0x03978F38 LDR V2, [X8 + 0x2D0]
	0x03978F3C FABS S7, S16
	0x03978F40 FADD S1, S1, S17
	0x03978F44 FABS S0, S0
	0x03978F48 FMUL S3, S7, S20
	0x03978F4C FADD S1, S26, S1
	0x03978F50 FADD S1, S3, S1
	0x03978F54 FMUL S0, S0, S20
	0x03978F58 FADD S0, S0, S1
	0x03978F5C FMUL S9, S0, S2
	0x03978F60 MOV V0.16B, V9.16B
	0x03978F64 LDP X20, X19, [X31 + 0xA0]
	0x03978F68 LDP X22, X21, [X31 + 0x90]
	0x03978F6C LDR X30, [X31 + 0x80]
	0x03978F70 LDP D9, D8, [X31 + 0x70]
	0x03978F74 LDP D11, D10, [X31 + 0x60]
	0x03978F78 LDP D13, D12, [X31 + 0x50]
	0x03978F7C LDP D15, D14, [X31 + 0x40]
	0x03978F80 ADD X31, X31, 0xB0
	0x03978F84 RET
	0x03978F88 BL 0x1C16F28
	0x03978F8C BL 0x1C16F20
	0x03978F90 STR D8, [X31 - 0x50]!
	0x03978F94 STP X30, X25, [X31 + 0x10]
	0x03978F98 STP X24, X23, [X31 + 0x20]
	0x03978F9C STP X22, X21, [X31 + 0x30]
	0x03978FA0 STP X20, X19, [X31 + 0x40]
	0x03978FA4 ADRP X22, 0xA69000
	0x03978FA8 ADRP X19, 0x7D6000
	0x03978FAC LDRB W8, [X22 + 0xA1B]
	0x03978FB0 LDR X19, [X19 + 0xDD0]
	0x03978FB4 MOV X21, X1
	0x03978FB8 MOV X20, X0
	0x03978FBC TBNZ X8, 0x0, 0x3978FF8
	0x03978FC0 ADRP X0, 0x7D8000
	0x03978FC4 LDR X0, [X0 + 0x68]
	0x03978FC8 BL 0x1C16CF4
	0x03978FCC ADRP X0, 0x7D8000
	0x03978FD0 LDR X0, [X0 + 0x190]
	0x03978FD4 BL 0x1C16CF4
	0x03978FD8 ADRP X0, 0x77B000
	0x03978FDC LDR X0, [X0 + 0xE00]
	0x03978FE0 BL 0x1C16CF4
	0x03978FE4 ADRP X0, 0x7D6000
	0x03978FE8 LDR X0, [X0 + 0xDD0]
	0x03978FEC BL 0x1C16CF4
	0x03978FF0 MOVZ W8, 0x1
	0x03978FF4 STRB W8, [X22 + 0xA1B]
	0x03978FF8 ADRP X24, 0x7D8000
	0x03978FFC LDR X24, [X24 + 0x68]
	0x03979000 LDR X0, [X19]
	0x03979004 ADRP X25, 0x7D7000
	0x03979008 ADRP X23, 0x77A000
	0x0397900C LDR X25, [X25 + 0x190]
	0x03979010 LDR X23, [X23 + 0xE00]
	0x03979014 STR W31, [X31 + 0xC]
	0x03979018 BL 0x1C16F10
	0x0397901C MOV X1, X20
	0x03979020 MOV X2, X31
	0x03979024 MOV X19, X0
	0x03979028 BL 0x3943870
	0x0397902C MOV X20, X31
	0x03979030 FMOV S8, W31
	0x03979034 CBZ X19, 0x397912C
	0x03979038 MOV X0, X19
	0x0397903C MOV X1, X31
	0x03979040 BL 0x3943898
	0x03979044 TBZ X0, 0x0, 0x39790B0
	0x03979048 MOV X0, X19
	0x0397904C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xA6A000
	007 Move W8, [X21+2579]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x780000
	015 Move X0, [X0+2928]
	016 Call 0x1C17CF4
	017 Move X0, 0x77D000
	018 Move X0, [X0+3624]
	019 Call 0x1C17CF4
	020 Move X0, 0x77D000
	021 Move X0, [X0+3632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2579], W8
	025 Move X0, X20
	026 Move [X19], W31
	027 Call MeshValidation.ContainsDegenerateTriangles, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {84}
	032 Compare X20, 0
	033 JumpIfEqual {93}
	034 Move X0, X20
	035 Move X1, X31
	036 Call ProBuilderMesh.get_selectedFacesInternal, X0
	037 Move X8, [X20+216]
	038 Move X9, 0x77D000
	039 Move [X31+16], X8
	040 Move [X31+24], X0
	041 Move X8, [X20+224]
	042 Move X9, [X9+3632]
	043 Move [X31+8], X8
	044 Move X0, [X9]
	045 Call 0x1C17F10
	046 Move X8, 0x780000
	047 Move X8, [X8+2928]
	048 Move X21, X0
	049 Move X1, [X8]
	050 Call List`1<Int32>..ctor, X0
	051 Move X0, X20
	052 Move X1, X21
	053 Call MeshValidation.RemoveDegenerateTriangles, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {84}
	058 Move X0, [X20+88]
	059 Move X1, X31
	060 Call SharedVertex.GetSharedVerticesWithPositions, X0
	061 Move X1, X0
	062 Move X0, X20
	063 Move X2, X31
	064 Call ProBuilderMesh.set_sharedVertices, X0, X1
	065 Add X1, X31, 24
	066 Add X2, X31, 16
	067 Add X3, X31, 8
	068 Move X0, X20
	069 Move X4, X21
	070 Call MeshValidation.RebuildSelectionIndexes, X0, X1, X2, X3, X4
	071 Move X1, [X31+24]
	072 Move X0, X20
	073 Move X2, X31
	074 Call ProBuilderMesh.set_selectedFacesInternal, X0, X1
	075 Move X9, [X31+16]
	076 Move X8, [X31+8]
	077 Move [X20+216], X9
	078 Move [X20+224], X8
	079 Compare X21, 0
	080 JumpIfEqual {93}
	081 Move W8, [X21+24]
	082 Move W0, W31
	083 Move [X19], W8
	084 Move X0, X20
	085 Call MeshValidation.EnsureValidAttributes, X0
	086 Move W0, 1
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Add X31, X31, 64
	092 Return X0
	093 Call 0x1C17F20

Method: System.Void EnsureRealNumbers(System.Collections.Generic.IList`1<UnityEngine.Vector2> attribute)

Disassembly:
	0x03979250 LDR X1, [X19 + 0x28]
	0x03979254 ADRP X20, 0x7D4000
	0x03979258 ADRP X21, 0x7D7000
	0x0397925C ADRP X22, 0x7D7000
	0x03979260 LDR X20, [X20 + 0x9D8]
	0x03979264 LDR X21, [X21 + 0x1A0]
	0x03979268 LDR X22, [X22 + 0x198]
	0x0397926C MOV X0, X19
	0x03979270 MOV X2, X31
	0x03979274 BL 0x395F6F4
	0x03979278 LDR X8, [X20]
	0x0397927C MOV X19, X0
	0x03979280 MOV X0, X8
	0x03979284 BL 0x1C16F10
	0x03979288 CMP X19, 0x0
	0x0397928C CSEL X8, X21, X22, EQ
	0x03979290 LDR X2, [X8]
	0x03979294 CSET W1, EQ
	0x03979298 MOV X3, X31
	0x0397929C MOV X20, X0
	0x039792A0 BL 0x38F6550
	0x039792A4 MOV X0, X20
	0x039792A8 LDP X20, X19, [X31 + 0x20]
	0x039792AC LDP X22, X21, [X31 + 0x10]
	0x039792B0 LDR X30, [X31], #0x30
	0x039792B4 RET
	0x039792B8 BL 0x1C16F20
	0x039792BC MOV X2, X31
	0x039792C0 B 0x395F6F4
	0x039792C4 STR X30, [X31 - 0x60]!
	0x039792C8 STP X28, X27, [X31 + 0x10]
	0x039792CC STP X26, X25, [X31 + 0x20]
	0x039792D0 STP X24, X23, [X31 + 0x30]
	0x039792D4 STP X22, X21, [X31 + 0x40]
	0x039792D8 STP X20, X19, [X31 + 0x50]
	0x039792DC ADRP X21, 0xA68000
	0x039792E0 ADRP X22, 0x77A000
	0x039792E4 LDRB W8, [X21 + 0xA1E]
	0x039792E8 LDR X22, [X22 + 0x598]
	0x039792EC MOV X20, X1
	0x039792F0 MOV X19, X0
	0x039792F4 TBNZ X8, 0x0, 0x39793B4
	0x039792F8 ADRP X0, 0x7D6000
	0x039792FC LDR X0, [X0 + 0x4E8]
	0x03979300 BL 0x1C16CF4
	0x03979304 ADRP X0, 0x7D5000
	0x03979308 LDR X0, [X0 + 0x3E0]
	0x0397930C BL 0x1C16CF4
	0x03979310 ADRP X0, 0x7D6000
	0x03979314 LDR X0, [X0 + 0x508]
	0x03979318 BL 0x1C16CF4
	0x0397931C ADRP X0, 0x77A000
	0x03979320 LDR X0, [X0 + 0xE00]
	0x03979324 BL 0x1C16CF4
	0x03979328 ADRP X0, 0x7D4000
	0x0397932C LDR X0, [X0 + 0xDB0]
	0x03979330 BL 0x1C16CF4
	0x03979334 ADRP X0, 0x7D4000
	0x03979338 LDR X0, [X0 + 0xDB8]
	0x0397933C BL 0x1C16CF4
	0x03979340 ADRP X0, 0x77A000
	0x03979344 LDR X0, [X0 + 0xE18]
	0x03979348 BL 0x1C16CF4
	0x0397934C ADRP X0, 0x7D6000
	0x03979350 LDR X0, [X0 + 0x6B8]
	0x03979354 BL 0x1C16CF4
	0x03979358 ADRP X0, 0x7D4000
	0x0397935C LDR X0, [X0 + 0xDE0]
	0x03979360 BL 0x1C16CF4
	0x03979364 ADRP X0, 0x7D6000
	0x03979368 LDR X0, [X0 + 0x310]
	0x0397936C BL 0x1C16CF4
	0x03979370 ADRP X0, 0x7D4000
	0x03979374 LDR X0, [X0 + 0xDE8]
	0x03979378 BL 0x1C16CF4
	0x0397937C ADRP X0, 0x7D6000
	0x03979380 LDR X0, [X0 + 0x318]
	0x03979384 BL 0x1C16CF4
	0x03979388 ADRP X0, 0x77A000
	0x0397938C LDR X0, [X0 + 0x598]
	0x03979390 BL 0x1C16CF4
	0x03979394 ADRP X0, 0x7D7000
	0x03979398 LDR X0, [X0 + 0x1A8]
	0x0397939C BL 0x1C16CF4
	0x039793A0 ADRP X0, 0x7D7000
	0x039793A4 LDR X0, [X0 + 0x1B0]
	0x039793A8 BL 0x1C16CF4
	0x039793AC MOVZ W8, 0x1
	0x039793B0 STRB W8, [X21 + 0xA1E]
	0x039793B4 LDR X0, [X22]
	0x039793B8 LDR W8, [X0 + 0xE0]
	0x039793BC CBNZ W8, 0x39793C4
	0x039793C0 BL 0x1C16DFC
	0x039793C4 MOV X0, X19
	0x039793C8 MOV X1, X31
	0x039793CC MOV X2, X31
	0x039793D0 BL 0x3C3883C
	0x039793D4 TBNZ X0, 0x0, 0x3979744
	0x039793D8 CBZ X20, 0x3979764
	0x039793DC CBZ X19, 0x39797AC
	0x039793E0 ADRP X21, 0x7D4000
	0x039793E4 ADRP X22, 0x7D4000
	0x039793E8 ADRP X23, 0x7D6000
	0x039793EC ADRP X25, 0x7D6000
	0x039793F0 ADRP X26, 0x7D4000
	0x039793F4 LDR X21, [X21 + 0xDE8]
	0x039793F8 LDR X22, [X22 + 0xDE0]
	0x039793FC LDR X23, [X23 + 0x318]
	0x03979400 LDR X25, [X25 + 0x310]
	0x03979404 LDR X26, [X26 + 0xDB0]
	0x03979408 MOV X0, X19
	0x0397940C MOV X1, X31

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA69000
	009 Move W8, [X20+2580]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x7D5000
	016 Move X0, [X0+2704]
	017 Call 0x1C17CF4
	018 Move X0, 0x7D5000
	019 Move X0, [X0+2712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2580], W8
	023 Compare X19, 0
	024 JumpIfEqual {110}
	025 Move X10, 0x7D5000
	026 Move X8, [X19]
	027 Move X10, [X10+2704]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X10]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X19
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X19, 0
	050 JumpIfEqual {118}
	051 Move X22, 0x7D5000
	052 Move X22, [X22+2712]
	053 Move W20, W0
	054 Move W21, W31
	055 Move X8, [X19]
	056 Move X1, [X22]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X19
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X2, [X0+8]
	074 Move X0, X19
	075 Move W1, W21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move S2, W31
	078 Move S3, W31
	079 Move X0, X31
	080 Call Math.FixNaN, X0
	081 Move X8, [X19]
	082 Move X1, [X22]
	083 Move V8, V0
	084 Move V9, V1
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 1
	095 Move X0, X19
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 1
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X19
	104 Move W1, W21
	105 Move V0, V8
	106 Move V1, V9
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Add W21, W21, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Move D9, [X31+64]
	116 Move D8, [X31+72]
	117 Return 
	118 Call 0x1C17F20

Method: System.Void EnsureRealNumbers(System.Collections.Generic.IList`1<UnityEngine.Vector3> attribute)

Disassembly:
	0x03979410 MOV X2, X31
	0x03979414 BL 0x3912114
	0x03979418 LDR X8, [X21]
	0x0397941C MOV X21, X0
	0x03979420 MOV X0, X8
	0x03979424 BL 0x1C16F10
	0x03979428 LDR X2, [X22]
	0x0397942C MOV X1, X21
	0x03979430 MOV X22, X0
	0x03979434 BL 0x301B8E0
	0x03979438 MOV X0, X19
	0x0397943C MOV X1, X31
	0x03979440 BL 0x3916198
	0x03979444 LDR X8, [X23]
	0x03979448 MOV X24, X0
	0x0397944C MOV X0, X8
	0x03979450 BL 0x1C16F10
	0x03979454 LDR X1, [X25]
	0x03979458 MOV X21, X0
	0x0397945C BL 0x301B7C4
	0x03979460 LDR X8, [X20]
	0x03979464 LDR X1, [X26]
	0x03979468 LDRH W9, [X8 + 0x12E]
	0x0397946C CBZ X9, 0x3979490
	0x03979470 LDR X10, [X8 + 0xB0]
	0x03979474 ADD X10, X10, 0x8
	0x03979478 LDUR X11, [X10 - 0x8]
	0x0397947C CMP X11, X1
	0x03979480 B.EQ 0x39794A0
	0x03979484 SUBS X9, X9, 0x1
	0x03979488 ADD X10, X10, 0x10
	0x0397948C B.NE 0x3979478
	0x03979490 MOV X0, X20
	0x03979494 MOV W2, W31
	0x03979498 BL 0x1C5C788
	0x0397949C B 0x39794AC
	0x039794A0 LDRSW X9, [X10]
	0x039794A4 ADD X8, X8, X9, 0x4, LSL
	0x039794A8 ADD X0, X8, 0x138
	0x039794AC LDP X8, X1, [X0]
	0x039794B0 ADRP X25, 0x77A000
	0x039794B4 LDR X25, [X25 + 0xE00]
	0x039794B8 MOV X0, X20
	0x039794BC BLR X8
	0x039794C0 MOV X23, X0
	0x039794C4 CBZ X0, 0x39797B0
	0x039794C8 ADRP X26, 0x77A000
	0x039794CC ADRP X27, 0x7D4000
	0x039794D0 ADRP X28, 0x7D6000
	0x039794D4 LDR X26, [X26 + 0xE18]
	0x039794D8 LDR X27, [X27 + 0xDB8]
	0x039794DC LDR X28, [X28 + 0x6B8]
	0x039794E0 LDR X8, [X23]
	0x039794E4 LDR X1, [X26]
	0x039794E8 LDRH W9, [X8 + 0x12E]
	0x039794EC CBZ X9, 0x3979510
	0x039794F0 LDR X10, [X8 + 0xB0]
	0x039794F4 ADD X10, X10, 0x8
	0x039794F8 LDUR X11, [X10 - 0x8]
	0x039794FC CMP X11, X1
	0x03979500 B.EQ 0x3979520
	0x03979504 SUBS X9, X9, 0x1
	0x03979508 ADD X10, X10, 0x10
	0x0397950C B.NE 0x39794F8
	0x03979510 MOV X0, X23
	0x03979514 MOV W2, W31
	0x03979518 BL 0x1C5C788
	0x0397951C B 0x397952C
	0x03979520 LDRSW X9, [X10]
	0x03979524 ADD X8, X8, X9, 0x4, LSL
	0x03979528 ADD X0, X8, 0x138
	0x0397952C LDP X8, X1, [X0]
	0x03979530 MOV X0, X23
	0x03979534 BLR X8
	0x03979538 TBZ X0, 0x0, 0x39795B8
	0x0397953C LDR X8, [X23]
	0x03979540 LDR X1, [X27]
	0x03979544 LDRH W9, [X8 + 0x12E]
	0x03979548 CBZ X9, 0x397956C
	0x0397954C LDR X10, [X8 + 0xB0]
	0x03979550 ADD X10, X10, 0x8
	0x03979554 LDUR X11, [X10 - 0x8]
	0x03979558 CMP X11, X1
	0x0397955C B.EQ 0x397957C
	0x03979560 SUBS X9, X9, 0x1
	0x03979564 ADD X10, X10, 0x10
	0x03979568 B.NE 0x3979554
	0x0397956C MOV X0, X23
	0x03979570 MOV W2, W31
	0x03979574 BL 0x1C5C788
	0x03979578 B 0x3979588
	0x0397957C LDRSW X9, [X10]
	0x03979580 ADD X8, X8, X9, 0x4, LSL
	0x03979584 ADD X0, X8, 0x138
	0x03979588 LDP X8, X1, [X0]
	0x0397958C MOV X0, X23
	0x03979590 BLR X8
	0x03979594 MOV X1, X22
	0x03979598 MOV X2, X24
	0x0397959C BL 0x3979874
	0x039795A0 MOV X1, X0
	0x039795A4 CBZ X21, 0x3979740
	0x039795A8 LDR X2, [X28]
	0x039795AC MOV X0, X21
	0x039795B0 BL 0x301C194
	0x039795B4 B 0x39794E0
	0x039795B8 MOV X24, X31
	0x039795BC MOVZ W26, 0xA
	0x039795C0 CBZ X23, 0x397961C
	0x039795C4 LDR X8, [X23]
	0x039795C8 LDR X1, [X25]
	0x039795CC LDRH W9, [X8 + 0x12E]
	0x039795D0 CBZ X9, 0x39795F4
	0x039795D4 LDR X10, [X8 + 0xB0]
	0x039795D8 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA69000
	010 Move W8, [X20+2581]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7D5000
	017 Move X0, [X0+3960]
	018 Call 0x1C17CF4
	019 Move X0, 0x7D5000
	020 Move X0, [X0+3968]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2581], W8
	024 Compare X19, 0
	025 JumpIfEqual {112}
	026 Move X10, 0x7D5000
	027 Move X8, [X19]
	028 Move X10, [X10+3960]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move X1, [X10]
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X19
	040 Move W2, W31
	041 Call 0x1C5D788
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare X19, 0
	051 JumpIfEqual {121}
	052 Move X22, 0x7D5000
	053 Move X22, [X22+3968]
	054 Move W20, W0
	055 Move W21, W31
	056 Move X8, [X19]
	057 Move X1, [X22]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X2, [X0+8]
	075 Move X0, X19
	076 Move W1, W21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move S3, W31
	079 Move X0, X31
	080 Call Math.FixNaN, X0
	081 Move X8, [X19]
	082 Move X1, [X22]
	083 Move V8, V0
	084 Move V9, V1
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move V10, V2
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 1
	096 Move X0, X19
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 1
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X19
	105 Move W1, W21
	106 Move V0, V8
	107 Move V1, V9
	108 Move V2, V10
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Add W21, W21, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+24]
	117 Move D9, [X31+8]
	118 Move D8, [X31+16]
	119 Move V10, [X31+64]
	120 Return 
	121 Call 0x1C17F20

Method: System.Void EnsureRealNumbers(System.Collections.Generic.IList`1<UnityEngine.Vector4> attribute)

Disassembly:
	0x039795DC LDUR X11, [X10 - 0x8]
	0x039795E0 CMP X11, X1
	0x039795E4 B.EQ 0x3979604
	0x039795E8 SUBS X9, X9, 0x1
	0x039795EC ADD X10, X10, 0x10
	0x039795F0 B.NE 0x39795DC
	0x039795F4 MOV X0, X23
	0x039795F8 MOV W2, W31
	0x039795FC BL 0x1C5C788
	0x03979600 B 0x3979610
	0x03979604 LDRSW X9, [X10]
	0x03979608 ADD X8, X8, X9, 0x4, LSL
	0x0397960C ADD X0, X8, 0x138
	0x03979610 LDP X8, X1, [X0]
	0x03979614 MOV X0, X23
	0x03979618 BLR X8
	0x0397961C CBNZ X24, 0x39797B4
	0x03979620 CMP W26, 0xA
	0x03979624 B.EQ 0x397962C
	0x03979628 CBNZ W26, 0x3979724
	0x0397962C ADRP X23, 0x7D7000
	0x03979630 LDR X23, [X23 + 0x1B0]
	0x03979634 MOV X0, X21
	0x03979638 MOV X1, X19
	0x0397963C MOV X2, X22
	0x03979640 MOV X3, X31
	0x03979644 MOV X4, X31
	0x03979648 BL 0x390186C
	0x0397964C MOV X0, X19
	0x03979650 MOV X1, X20
	0x03979654 MOV X2, X31
	0x03979658 BL 0x395C0F0
	0x0397965C MOV X0, X19
	0x03979660 MOV W1, W31
	0x03979664 MOV X2, X31
	0x03979668 BL 0x39197E8
	0x0397966C LDR X8, [X23]
	0x03979670 LDR W9, [X8 + 0xE0]
	0x03979674 CBNZ W9, 0x3979684
	0x03979678 MOV X0, X8
	0x0397967C BL 0x1C16DFC
	0x03979680 LDR X8, [X23]
	0x03979684 LDR X9, [X8 + 0xB8]
	0x03979688 ADRP X24, 0x7D6000
	0x0397968C ADRP X22, 0x7D5000
	0x03979690 LDR X19, [X9 + 0x8]
	0x03979694 LDR X24, [X24 + 0x4E8]
	0x03979698 LDR X22, [X22 + 0x3E0]
	0x0397969C CBNZ X19, 0x39796F4
	0x039796A0 LDR W9, [X8 + 0xE0]
	0x039796A4 CBNZ W9, 0x39796B4
	0x039796A8 MOV X0, X8
	0x039796AC BL 0x1C16DFC
	0x039796B0 LDR X8, [X23]
	0x039796B4 ADRP X9, 0x7D6000
	0x039796B8 LDR X8, [X8 + 0xB8]
	0x039796BC LDR X9, [X9 + 0x508]
	0x039796C0 LDR X20, [X8]
	0x039796C4 LDR X0, [X9]
	0x039796C8 BL 0x1C16F10
	0x039796CC ADRP X8, 0x7D7000
	0x039796D0 LDR X8, [X8 + 0x1A8]
	0x039796D4 MOV X1, X20
	0x039796D8 MOV X3, X31
	0x039796DC MOV X19, X0
	0x039796E0 LDR X2, [X8]
	0x039796E4 BL 0x2D30578
	0x039796E8 LDR X8, [X23]
	0x039796EC LDR X8, [X8 + 0xB8]
	0x039796F0 STR X19, [X8 + 0x8]
	0x039796F4 LDR X2, [X24]
	0x039796F8 MOV X0, X21
	0x039796FC MOV X1, X19
	0x03979700 BL 0x21CF224
	0x03979704 LDR X1, [X22]
	0x03979708 LDP X20, X19, [X31 + 0x50]
	0x0397970C LDP X22, X21, [X31 + 0x40]
	0x03979710 LDP X24, X23, [X31 + 0x30]
	0x03979714 LDP X26, X25, [X31 + 0x20]
	0x03979718 LDP X28, X27, [X31 + 0x10]
	0x0397971C LDR X30, [X31], #0x60
	0x03979720 B 0x21D577C
	0x03979724 LDP X20, X19, [X31 + 0x50]
	0x03979728 LDP X22, X21, [X31 + 0x40]
	0x0397972C LDP X24, X23, [X31 + 0x30]
	0x03979730 LDP X26, X25, [X31 + 0x20]
	0x03979734 LDP X28, X27, [X31 + 0x10]
	0x03979738 LDR X30, [X31], #0x60
	0x0397973C RET
	0x03979740 BL 0x1C16F20
	0x03979744 ADRP X0, 0x77F000
	0x03979748 LDR X0, [X0 + 0x528]
	0x0397974C BL 0x1C16D08
	0x03979750 BL 0x1C16F10
	0x03979754 MOV X19, X0
	0x03979758 ADRP X0, 0x7D4000
	0x0397975C LDR X0, [X0 + 0xE90]
	0x03979760 B 0x3979780
	0x03979764 ADRP X0, 0x77F000
	0x03979768 LDR X0, [X0 + 0x528]
	0x0397976C BL 0x1C16D08
	0x03979770 BL 0x1C16F10
	0x03979774 MOV X19, X0
	0x03979778 ADRP X0, 0x7D5000
	0x0397977C LDR X0, [X0 + 0x640]
	0x03979780 BL 0x1C16D08
	0x03979784 MOV X1, X0
	0x03979788 MOV X0, X19
	0x0397978C MOV X2, X31
	0x03979790 BL 0x330E100
	0x03979794 ADRP X0, 0x7D7000
	0x03979798 LDR X0, [X0 + 0x1B8]
	0x0397979C BL 0x1C16D08
	0x039797A0 MOV X1, X0
	0x039797A4 MOV X0, X19
	0x039797A8 BL 0x1C16DEC

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA69000
	011 Move W8, [X20+2582]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7D5000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0x7D5000
	021 Move X0, [X0+2736]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2582], W8
	025 Compare X19, 0
	026 JumpIfEqual {114}
	027 Move X10, 0x7D5000
	028 Move X8, [X19]
	029 Move X10, [X10+3984]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move X0, X19
	041 Move W2, W31
	042 Call 0x1C5D788
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare X19, 0
	052 JumpIfEqual {124}
	053 Move X22, 0x7D5000
	054 Move X22, [X22+2736]
	055 Move W20, W0
	056 Move W21, W31
	057 Move X8, [X19]
	058 Move X1, [X22]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X19
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X2, [X0+8]
	076 Move X0, X19
	077 Move W1, W21
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X0, X31
	080 Call Math.FixNaN, X0
	081 Move X8, [X19]
	082 Move X1, [X22]
	083 Move V8, V0
	084 Move V9, V1
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move V10, V2
	087 Move V11, V3
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X19
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X19
	106 Move W1, W21
	107 Move V0, V8
	108 Move V1, V9
	109 Move V2, V10
	110 Move V3, V11
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Add W21, W21, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X30, [X31+32]
	119 Move D9, [X31+16]
	120 Move D8, [X31+24]
	121 Move D11, [X31+80]
	122 Move D10, [X31+88]
	123 Return 
	124 Call 0x1C17F20

Method: System.Void EnsureArraySize(ref T[] attribute, System.Int32 expectedVertexCount, UnityEngine.ProBuilder.MeshOperations.MeshValidation/AttributeValidationStrategy strategy = 1, T fill = null)

Disassembly:
	0x0221DF9C MOV X0, X21
	0x0221DFA0 BL 0x1D2C690
	0x0221DFA4 MOV X0, X20
	0x0221DFA8 BL 0x1C16F18
	0x0221DFAC BL 0x1990590
	0x0221DFB0 STP X30, X19, [X31 - 0x10]!
	0x0221DFB4 LDR X8, [X0 + 0x38]
	0x0221DFB8 CBNZ X8, 0x221DFC8
	0x0221DFBC MOV X19, X0
	0x0221DFC0 BL 0x1C5C6E0
	0x0221DFC4 LDR X8, [X19 + 0x38]
	0x0221DFC8 LDR X0, [X8]
	0x0221DFCC LDP X30, X19, [X31], #0x10
	0x0221DFD0 B 0x22537A0
	0x0221DFD4 STR X30, [X31 - 0x40]!
	0x0221DFD8 STP X24, X23, [X31 + 0x10]
	0x0221DFDC STP X22, X21, [X31 + 0x20]
	0x0221DFE0 STP X20, X19, [X31 + 0x30]
	0x0221DFE4 LDR X8, [X5 + 0x38]
	0x0221DFE8 MOV X22, X5
	0x0221DFEC MOV W19, W4
	0x0221DFF0 MOV X20, X3
	0x0221DFF4 MOV X21, X2
	0x0221DFF8 MOV X23, X1
	0x0221DFFC MOV X24, X0
	0x0221E000 CBNZ X8, 0x221E020
	0x0221E004 ADRP X0, 0x1EFE000
	0x0221E008 LDR X0, [X0 + 0xD8]
	0x0221E00C BL 0x1C16CF4
	0x0221E010 LDR X8, [X22 + 0x38]
	0x0221E014 CBNZ X8, 0x221E020
	0x0221E018 MOV X0, X22
	0x0221E01C BL 0x1C5C6E0
	0x0221E020 ADRP X8, 0x1EFE000
	0x0221E024 LDR X8, [X8 + 0xD8]
	0x0221E028 LDR X0, [X8]
	0x0221E02C LDR W8, [X0 + 0xE0]
	0x0221E030 CBNZ W8, 0x221E038
	0x0221E034 BL 0x1C16DFC
	0x0221E038 LDR X8, [X22 + 0x38]
	0x0221E03C MOV X0, X24
	0x0221E040 MOV X1, X23
	0x0221E044 MOV X3, X21
	0x0221E048 LDR X7, [X8 + 0x8]
	0x0221E04C MOV X4, X20
	0x0221E050 MOV W6, W19
	0x0221E054 LDP X20, X19, [X31 + 0x30]
	0x0221E058 LDP X22, X21, [X31 + 0x20]
	0x0221E05C LDP X24, X23, [X31 + 0x10]
	0x0221E060 MOV W2, W31
	0x0221E064 MOV W5, W31
	0x0221E068 LDR X30, [X31], #0x40
	0x0221E06C B 0x221E2E4
	0x0221E070 STR X30, [X31 - 0x40]!
	0x0221E074 STP X24, X23, [X31 + 0x10]
	0x0221E078 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X3+56]
	012 Move X21, X3
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move W22, W2
	018 Move W19, W1
	019 Move X20, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X21
	023 Call 0x1C5D6E0
	024 Move X23, [X20]
	025 Compare X23, 0
	026 JumpIfEqual {53}
	027 Move W8, [X23+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X20], X31
	031 Move X8, [X21+56]
	032 Move X0, X20
	033 Move W1, W19
	034 Move X2, [X8+8]
	035 Call Array.Resize, X0, X1
	036 Move W8, [X23+24]
	037 Subtract W8, W8, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 Move X10, [X20]
	041 Compare X10, 0
	042 JumpIfEqual {64}
	043 Move W11, [X10+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W8, W8, 1
	046 Add X10, X10, X9
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X9, X9, 16
	049 Move [X10+32], S11
	050 Move [X10+40], S10
	051 Move [X10+40], S9
	052 Move [X10+48], S8
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Move X22, [X31+48]
	056 Move X21, [X31+56]
	057 Move X30, [X31+32]
	058 Move X23, [X31+40]
	059 Move D9, [X31+16]
	060 Move D8, [X31+24]
	061 Move D11, [X31+80]
	062 Move D10, [X31+88]
	063 Return 
	064 Call 0x1C17F20
	065 Call 0x1C17F28

Method: System.Void EnsureListSize(ref System.Collections.Generic.List`1<T> attribute, System.Int32 expectedVertexCount, UnityEngine.ProBuilder.MeshOperations.MeshValidation/AttributeValidationStrategy strategy = 1, T fill = null)

Disassembly:
	0x0221E488 MOV X21, X4
	0x0221E48C MOV X22, X3
	0x0221E490 MOV W23, W2
	0x0221E494 MOV X24, X1
	0x0221E498 MOV X26, X0
	0x0221E49C CBNZ X8, 0x221E4B0
	0x0221E4A0 MOV X0, X7
	0x0221E4A4 MOV X25, X7
	0x0221E4A8 BL 0x1C5C6E0
	0x0221E4AC LDR X8, [X25 + 0x38]
	0x0221E4B0 LDR X7, [X8 + 0x8]
	0x0221E4B4 MOV X0, X26
	0x0221E4B8 MOV X1, X24
	0x0221E4BC MOV W2, W23
	0x0221E4C0 MOV X3, X22
	0x0221E4C4 MOV X4, X21
	0x0221E4C8 MOV W5, W20
	0x0221E4CC MOV W6, W19
	0x0221E4D0 LDP X20, X19, [X31 + 0x40]
	0x0221E4D4 LDP X22, X21, [X31 + 0x30]
	0x0221E4D8 LDP X24, X23, [X31 + 0x20]
	0x0221E4DC LDP X26, X25, [X31 + 0x10]
	0x0221E4E0 LDR X30, [X31], #0x50
	0x0221E4E4 B 0x23FC98C
	0x0221E4E8 STR X30, [X31 - 0x50]!
	0x0221E4EC STP X26, X25, [X31 + 0x10]
	0x0221E4F0 STP X24, X23, [X31 + 0x20]
	0x0221E4F4 STP X22, X21, [X31 + 0x30]
	0x0221E4F8 STP X20, X19, [X31 + 0x40]
	0x0221E4FC LDR X8, [X7 + 0x38]
	0x0221E500 MOV W19, W6
	0x0221E504 MOV W20, W5
	0x0221E508 MOV X21, X4
	0x0221E50C MOV X22, X3
	0x0221E510 MOV W23, W2
	0x0221E514 MOV X24, X1
	0x0221E518 MOV X26, X0
	0x0221E51C CBNZ X8, 0x221E530
	0x0221E520 MOV X0, X7
	0x0221E524 MOV X25, X7
	0x0221E528 BL 0x1C5C6E0
	0x0221E52C LDR X8, [X25 + 0x38]
	0x0221E530 LDR X7, [X8 + 0x8]
	0x0221E534 MOV X0, X26
	0x0221E538 MOV X1, X24
	0x0221E53C MOV W2, W23
	0x0221E540 MOV X3, X22
	0x0221E544 MOV X4, X21
	0x0221E548 MOV W5, W20
	0x0221E54C MOV W6, W19
	0x0221E550 LDP X20, X19, [X31 + 0x40]
	0x0221E554 LDP X22, X21, [X31 + 0x30]
	0x0221E558 LDP X24, X23, [X31 + 0x20]
	0x0221E55C LDP X26, X25, [X31 + 0x10]
	0x0221E560 LDR X30, [X31], #0x50
	0x0221E564 B 0x23FE684
	0x0221E568 SUB X31, X31, 0x100
	0x0221E56C STR X29, [X31 + 0xB0]
	0x0221E570 STP X30, X25, [X31 + 0xC0]
	0x0221E574 STP X24, X23, [X31 + 0xD0]
	0x0221E578 STP X22, X21, [X31 + 0xE0]
	0x0221E57C STP X20, X19, [X31 + 0xF0]
	0x0221E580 STRB W4, [X31 + 0xB8]
	0x0221E584 LDR X8, [X5 + 0x38]
	0x0221E588 MOV X19, X5
	0x0221E58C MOV X20, X3
	0x0221E590 MOV W22, W2
	0x0221E594 MOV X21, X0
	0x0221E598 CBNZ X8, 0x221E5A4
	0x0221E59C MOV X0, X19
	0x0221E5A0 BL 0x1C5C6E0
	0x0221E5A4 SUBS W22, W22, 0x1
	0x0221E5A8 B.MI 0x221E640
	0x0221E5AC MOV W24, W31
	0x0221E5B0 MOVZ W23, 0x48
	0x0221E5B4 ADD W8, W24, W22
	0x0221E5B8 SBFM W25, W8, 0x1, 0x1F
	0x0221E5BC SMADDL X1, X25, X23, X21
	0x0221E5C0 ADD X0, X31, 0x68
	0x0221E5C4 MOVZ W2, 0x48
	0x0221E5C8 STR W31, [X31 + 0xBC]
	0x0221E5CC BL 0x3EB1AC0
	0x0221E5D0 LDR V0, [X20]
	0x0221E5D4 LDR X8, [X20 + 0x10]
	0x0221E5D8 ADD X0, X31, 0x20
	0x0221E5DC ADD X1, X31, 0x68
	0x0221E5E0 MOVZ W2, 0x48
	0x0221E5E4 STR V0, [X31]
	0x0221E5E8 STR X8, [X31 + 0x10]
	0x0221E5EC BL 0x3EB1AC0
	0x0221E5F0 LDR X8, [X19 + 0x38]
	0x0221E5F4 ADD X0, X31, 0xB8
	0x0221E5F8 ADD X1, X31, 0x20
	0x0221E5FC ADD X2, X31, 0x0
	0x0221E600 LDR X4, [X8 + 0x38]
	0x0221E604 ADD X3, X31, 0xBC
	0x0221E608 BL 0x3ABBDAC
	0x0221E60C LDR V0, [X31 + 0xBC]
	0x0221E610 FCMP S0, 0x0
	0x0221E614 B.EQ 0x221E648
	0x0221E618 B.HI 0x221E62C
	0x0221E61C CMP W25, W22
	0x0221E620 ADD W24, W25, 0x1
	0x0221E624 B.LT 0x221E5B4
	0x0221E628 B 0x221E640
	0x0221E62C SUB W22, W25, 0x1
	0x0221E630 CMP W24, W25
	0x0221E634 MOVN W0, 0x0
	0x0221E638 B.LT 0x221E5B4
	0x0221E63C B 0x221E64C
	0x0221E640 MOVN W0, 0x0
	0x0221E644 B 0x221E64C
	0x0221E648 MOV W0, W25
	0x0221E64C LDP X20, X19, [X31 + 0xF0]
	0x0221E650 LDP X22, X21, [X31 + 0xE0]
	0x0221E654 LDP X24, X23, [X31 + 0xD0]
	0x0221E658 LDP X30, X25, [X31 + 0xC0]
	0x0221E65C LDR X29, [X31 + 0xB0]
	0x0221E660 ADD X31, X31, 0x100
	0x0221E664 RET
	0x0221E668 STP X29, X30, [X31 - 0x60]!
	0x0221E66C STP X28, X27, [X31 + 0x10]
	0x0221E670 STP X26, X25, [X31 + 0x20]
	0x0221E674 STP X24, X23, [X31 + 0x30]
	0x0221E678 STP X22, X21, [X31 + 0x40]
	0x0221E67C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X3+56]
	013 Move X19, X3
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move W21, W2
	019 Move W22, W1
	020 Move X20, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, [X20]
	026 Compare X8, 0
	027 JumpIfEqual {129}
	028 Move W23, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X20], X31
	032 Move X8, [X19+56]
	033 Move X0, [X8+8]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Call 0x1C17F10
	041 Move X8, [X19+56]
	042 Move W1, W22
	043 Move X21, X0
	044 Move X2, [X8+24]
	045 Call List`1<Vector4>..ctor, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W23, W31
	050 Move X0, [X20]
	051 Compare X0, 0
	052 JumpIfEqual {127}
	053 Move X8, [X19+56]
	054 Move W1, W23
	055 Move X2, [X8+32]
	056 Call List`1<Vector4>.get_Item, X0, X1
	057 Compare X21, 0
	058 JumpIfEqual {127}
	059 Move X8, [X19+56]
	060 Move W10, [X21+28]
	061 Move X9, [X21+16]
	062 Move X8, [X8+48]
	063 Add W10, W10, 1
	064 Move [X21+28], W10
	065 Compare X9, 0
	066 JumpIfEqual {127}
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W11, [X9+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add W8, W10, 1
	071 Add X9, X9, X10
	072 Move [X21+24], W8
	073 Move [X9+32], S0
	074 Move [X9+40], S1
	075 Move [X9+40], S2
	076 Move [X9+48], S3
	077 Move X8, [X8+32]
	078 Move X0, X21
	079 Move X8, [X8+192]
	080 Move X1, [X8+112]
	081 Call List`1<Vector4>.AddWithResize, X0, X1
	082 Add W23, W23, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X21, 0
	085 JumpIfEqual {127}
	086 Move W8, [X21+24]
	087 Subtract W9, W8, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X10, [X19+56]
	090 Move W11, [X21+28]
	091 Move X9, [X21+16]
	092 Move X10, [X10+48]
	093 Add W11, W11, 1
	094 Move [X21+28], W11
	095 Compare X9, 0
	096 JumpIfEqual {127}
	097 Subtract W11, W22, W8
	098 Add W22, W11, 1
	099 Move W11, [X9+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add W10, W8, 1
	102 Add X8, X9, W8
	103 Move [X21+24], W10
	104 Move [X8+32], S11
	105 Move [X8+40], S10
	106 Move [X8+40], S9
	107 Move [X8+48], S8
	108 Move X8, [X10+32]
	109 Move X0, X21
	110 Move V0, V11
	111 Move V1, V10
	112 Move X8, [X8+192]
	113 Move V2, V9
	114 Move V3, V8
	115 Move X1, [X8+112]
	116 Call List`1<Vector4>.AddWithResize, X0, X1
	117 Subtract W22, W22, 1
	118 Move X10, [X19+56]
	119 Move W8, [X21+24]
	120 Move W11, [X21+28]
	121 Move X9, [X21+16]
	122 Move X10, [X10+48]
	123 Add W11, W11, 1
	124 Move [X21+28], W11
	125 Compare X9, 0
	126 JumpIfNotEqual {99}
	127 Call 0x1C17F20
	128 Move [X20], X21
	129 Move X20, [X31+80]
	130 Move X19, [X31+88]
	131 Move X22, [X31+64]
	132 Move X21, [X31+72]
	133 Move X24, [X31+48]
	134 Move X23, [X31+56]
	135 Move X30, [X31+32]
	136 Move D9, [X31+16]
	137 Move D8, [X31+24]
	138 Move D11, [X31+96]
	139 Move D10, [X31+104]
	140 Return 

Method: System.Void EnsureValidAttributes(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03979050 BL 0x39438DC
	0x03979054 MOV X22, X0
	0x03979058 STR W31, [X31 + 0xC]
	0x0397905C CBZ X0, 0x3979130
	0x03979060 CBZ X21, 0x3979134
	0x03979064 LDP X1, X2, [X22 + 0x10]
	0x03979068 LDR X4, [X24]
	0x0397906C ADD X3, X31, 0xC
	0x03979070 MOV X0, X21
	0x03979074 BL 0x29E40D8
	0x03979078 LDR V0, [X31 + 0xC]
	0x0397907C FCMP S0, S8
	0x03979080 CSET W8, GT
	0x03979084 AND W8, W0, W8, 0x0
	0x03979088 TBZ X8, 0x0, 0x3979034
	0x0397908C LDP X1, X2, [X22 + 0x10]
	0x03979090 LDR X3, [X25]
	0x03979094 MOV X0, X21
	0x03979098 BL 0x29E259C
	0x0397909C LDR X8, [X22 + 0x38]
	0x039790A0 CBZ X8, 0x3979140
	0x039790A4 LDR X20, [X8 + 0x20]
	0x039790A8 MOV V8.16B, V0.16B
	0x039790AC B 0x3979034
	0x039790B0 MOV X21, X31
	0x039790B4 LDR X8, [X19]
	0x039790B8 LDR X1, [X23]
	0x039790BC LDRH W9, [X8 + 0x12E]
	0x039790C0 CBZ X9, 0x39790E4
	0x039790C4 LDR X10, [X8 + 0xB0]
	0x039790C8 ADD X10, X10, 0x8
	0x039790CC LDUR X11, [X10 - 0x8]
	0x039790D0 CMP X11, X1
	0x039790D4 B.EQ 0x39790F4
	0x039790D8 SUBS X9, X9, 0x1
	0x039790DC ADD X10, X10, 0x10
	0x039790E0 B.NE 0x39790CC
	0x039790E4 MOV X0, X19
	0x039790E8 MOV W2, W31
	0x039790EC BL 0x1C5C788
	0x039790F0 B 0x3979100
	0x039790F4 LDRSW X9, [X10]
	0x039790F8 ADD X8, X8, X9, 0x4, LSL
	0x039790FC ADD X0, X8, 0x138
	0x03979100 LDP X8, X1, [X0]
	0x03979104 MOV X0, X19
	0x03979108 BLR X8
	0x0397910C CBNZ X21, 0x3979138
	0x03979110 MOV X0, X20
	0x03979114 LDP X20, X19, [X31 + 0x40]
	0x03979118 LDP X22, X21, [X31 + 0x30]
	0x0397911C LDP X24, X23, [X31 + 0x20]
	0x03979120 LDP X30, X25, [X31 + 0x10]
	0x03979124 LDR V8, [X31], #0x50
	0x03979128 RET
	0x0397912C BL 0x1C16F20
	0x03979130 BL 0x1C16F20
	0x03979134 BL 0x1C16F20
	0x03979138 MOV X0, X21
	0x0397913C BL 0x1C16F18
	0x03979140 BL 0x1C16F20
	0x03979144 B 0x3979164
	0x03979148 B 0x3979164
	0x0397914C B 0x3979160
	0x03979150 B 0x3979164
	0x03979154 B 0x3979164
	0x03979158 B 0x3979164
	0x0397915C B 0x3979164
	0x03979160 MOV X20, X31
	0x03979164 CMP W1, 0x1
	0x03979168 B.NE 0x3979180
	0x0397916C BL 0x3EB1AD0
	0x03979170 LDR X21, [X0]
	0x03979174 BL 0x3EB1AE0
	0x03979178 CBNZ X19, 0x39790B4
	0x0397917C B 0x397910C
	0x03979180 MOV X20, X0
	0x03979184 MOV X21, X31
	0x03979188 B 0x3979190
	0x0397918C MOV X20, X0
	0x03979190 CBZ X19, 0x39791EC
	0x03979194 LDR X8, [X19]
	0x03979198 LDR X1, [X23]
	0x0397919C LDRH W9, [X8 + 0x12E]
	0x039791A0 CBZ X9, 0x39791C4
	0x039791A4 LDR X10, [X8 + 0xB0]
	0x039791A8 ADD X10, X10, 0x8
	0x039791AC LDUR X11, [X10 - 0x8]
	0x039791B0 CMP X11, X1
	0x039791B4 B.EQ 0x39791D4
	0x039791B8 SUBS X9, X9, 0x1
	0x039791BC ADD X10, X10, 0x10
	0x039791C0 B.NE 0x39791AC
	0x039791C4 MOV X0, X19
	0x039791C8 MOV W2, W31
	0x039791CC BL 0x1C5C788
	0x039791D0 B 0x39791E0
	0x039791D4 LDRSW X9, [X10]
	0x039791D8 ADD X8, X8, X9, 0x4, LSL
	0x039791DC ADD X0, X8, 0x138
	0x039791E0 LDP X8, X1, [X0]
	0x039791E4 MOV X0, X19
	0x039791E8 BLR X8
	0x039791EC CBNZ X21, 0x39791F8
	0x039791F0 MOV X0, X20
	0x039791F4 BL 0x1D2C690
	0x039791F8 MOV X0, X21
	0x039791FC BL 0x1C16F18
	0x03979200 BL 0x1990590
	0x03979204 STR X30, [X31 - 0x30]!
	0x03979208 STP X22, X21, [X31 + 0x10]
	0x0397920C STP X20, X19, [X31 + 0x20]
	0x03979210 ADRP X20, 0xA68000
	0x03979214 LDRB W8, [X20 + 0xA1D]
	0x03979218 MOV X19, X0
	0x0397921C TBNZ X8, 0x0, 0x397924C
	0x03979220 ADRP X0, 0x7D4000
	0x03979224 LDR X0, [X0 + 0x9D8]
	0x03979228 BL 0x1C16CF4
	0x0397922C ADRP X0, 0x7D7000
	0x03979230 LDR X0, [X0 + 0x198]
	0x03979234 BL 0x1C16CF4
	0x03979238 ADRP X0, 0x7D7000
	0x0397923C LDR X0, [X0 + 0x1A0]
	0x03979240 BL 0x1C16CF4
	0x03979244 MOVZ W8, 0x1
	0x03979248 STRB W8, [X20 + 0xA1D]
	0x0397924C CBZ X19, 0x39792B8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X19, 0xA69000
	011 Move W8, [X19+2583]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x7D8000
	018 Move X0, [X0+352]
	019 Call 0x1C17CF4
	020 Move X0, 0x7D8000
	021 Move X0, [X0+360]
	022 Call 0x1C17CF4
	023 Move X0, 0x7D8000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move X0, 0x7D8000
	027 Move X0, [X0+376]
	028 Call 0x1C17CF4
	029 Move X0, 0x7D8000
	030 Move X0, [X0+384]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2583], W8
	034 Compare X20, 0
	035 JumpIfEqual {143}
	036 Move X23, 0x7D8000
	037 Move X24, 0x7D8000
	038 Move X25, 0x7D8000
	039 Move X22, 0x7D8000
	040 Move X21, 0x7D8000
	041 Move X23, [X23+368]
	042 Move X24, [X24+352]
	043 Move X25, [X25+376]
	044 Move X22, [X22+360]
	045 Move X21, [X21+384]
	046 Move X0, X20
	047 Move X1, X31
	048 Call ProBuilderMesh.get_vertexCount, X0
	049 Move X9, [X20+128]
	050 Move X8, [X20+136]
	051 Move X3, [X23]
	052 Move W19, W0
	053 Add X0, X31, 40
	054 Move [X31+32], X8
	055 Move [X31+40], X9
	056 Move X9, [X20+120]
	057 Move X8, [X20+96]
	058 Move S0, W31
	059 Move S1, W31
	060 Move S2, W31
	061 Move [X31+16], X8
	062 Move [X31+24], X9
	063 Move X9, [X20+104]
	064 Move X8, [X20+112]
	065 Move W2, 1
	066 Move W1, W19
	067 Move [X31], X8
	068 Move [X31+8], X9
	069 Call MeshValidation.EnsureArraySize, X0, X1, X2, X3
	070 Move X3, [X24]
	071 Add X0, X31, 32
	072 Move S0, W31
	073 Move S1, W31
	074 Move S2, W31
	075 Move S3, W31
	076 Move W2, 1
	077 Move W1, W19
	078 Call 0x221DF9C, X0, X1, X2, X3
	079 Move X3, [X25]
	080 Add X0, X31, 24
	081 Move S0, W31
	082 Move S1, W31
	083 Move S2, W31
	084 Move S3, W31
	085 Move W2, 1
	086 Move W1, W19
	087 Call MeshValidation.EnsureArraySize, X0, X1, X2, X3
	088 Move X3, [X23]
	089 Add X0, X31, 40
	090 Move S0, W31
	091 Move S1, W31
	092 Move S2, W31
	093 Move W2, 1
	094 Move W1, W19
	095 Call MeshValidation.EnsureArraySize, X0, X1, X2, X3
	096 Move X3, [X22]
	097 Add X0, X31, 16
	098 Move S0, W31
	099 Move S1, W31
	100 Move W2, 1
	101 Move W1, W19
	102 Call MeshValidation.EnsureArraySize, X0, X1, X2, X3
	103 Move X3, [X21]
	104 Add X0, X31, 8
	105 Move S0, W31
	106 Move S1, W31
	107 Move S2, W31
	108 Move S3, W31
	109 Move W2, 1
	110 Move W1, W19
	111 Call 0x221E488, X0, X1, X2, X3
	112 Move X3, [X21]
	113 Add X0, X31, 0
	114 Move S0, W31
	115 Move S1, W31
	116 Move S2, W31
	117 Move S3, W31
	118 Move W2, 1
	119 Move W1, W19
	120 Call 0x221E488, X0, X1, X2, X3
	121 Move X0, [X31+40]
	122 Call MeshValidation.EnsureRealNumbers, X0
	123 Move X0, [X31+24]
	124 Call MeshValidation.EnsureRealNumbers, X0
	125 Move X0, [X31+40]
	126 Call MeshValidation.EnsureRealNumbers, X0
	127 Move X0, [X31+16]
	128 Call MeshValidation.EnsureRealNumbers, X0
	129 Move X0, [X31+8]
	130 Call MeshValidation.EnsureRealNumbers, X0
	131 Move X0, [X31]
	132 Call MeshValidation.EnsureRealNumbers, X0
	133 Move X20, [X31+96]
	134 Move X19, [X31+104]
	135 Move X22, [X31+80]
	136 Move X21, [X31+88]
	137 Move X24, [X31+64]
	138 Move X23, [X31+72]
	139 Move X30, [X31+48]
	140 Move X25, [X31+56]
	141 Add X31, X31, 112
	142 Return 
	143 Call 0x1C17F20

