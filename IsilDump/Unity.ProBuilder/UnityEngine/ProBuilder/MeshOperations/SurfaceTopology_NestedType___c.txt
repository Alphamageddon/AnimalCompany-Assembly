Type: UnityEngine.ProBuilder.MeshOperations.SurfaceTopology/<>c

Method: System.Void .cctor()

Disassembly:
	0x0397C028 LDRH W9, [X8 + 0x12E]
	0x0397C02C LDR X1, [X25]
	0x0397C030 LDR X23, [X23 + 0x9B0]
	0x0397C034 CBZ X9, 0x397C058
	0x0397C038 LDR X10, [X8 + 0xB0]
	0x0397C03C ADD X10, X10, 0x8
	0x0397C040 LDUR X11, [X10 - 0x8]
	0x0397C044 CMP X11, X1
	0x0397C048 B.EQ 0x397C068
	0x0397C04C SUBS X9, X9, 0x1
	0x0397C050 ADD X10, X10, 0x10
	0x0397C054 B.NE 0x397C040
	0x0397C058 MOV X0, X22
	0x0397C05C MOV W2, W31
	0x0397C060 BL 0x1C5C788
	0x0397C064 B 0x397C074
	0x0397C068 LDRSW X9, [X10]
	0x0397C06C ADD X8, X8, X9, 0x4, LSL
	0x0397C070 ADD X0, X8, 0x138
	0x0397C074 LDP X8, X1, [X0]
	0x0397C078 ADRP X26, 0x7D1000
	0x0397C07C LDR X26, [X26 + 0xF60]
	0x0397C080 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA66000
	005 Move X20, 0x7D5000
	006 Move W8, [X19+2600]
	007 Move X20, [X20+432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7D5000
	013 Move X0, [X0+432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2600], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x0397C084 BLR X8
	0x0397C088 LDR X8, [X23]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: UnityEngine.ProBuilder.Face <ToTriangles>b__0_0(UnityEngine.ProBuilder.FaceRebuildData x)

Disassembly:
	0x0397C08C MOV W1, W0
	0x0397C090 MOV X0, X8
	0x0397C094 BL 0x1C16D6C
	0x0397C098 MOV X23, X0
	0x0397C09C MOV X24, X31
	0x0397C0A0 MOVZ W27, 0xC

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+16]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: UnityEngine.Vector3 <GetWindingOrder>b__3_0(UnityEngine.ProBuilder.Vertex x)

Disassembly:
	0x0397C0A4 LDR X8, [X22]
	0x0397C0A8 LDR X1, [X25]
	0x0397C0AC LDRH W9, [X8 + 0x12E]
	0x0397C0B0 CBZ X9, 0x397C0D4
	0x0397C0B4 LDR X10, [X8 + 0xB0]
	0x0397C0B8 ADD X10, X10, 0x8
	0x0397C0BC LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {9}
	004 Move S0, [X1+16]
	005 Move S1, [X1+20]
	006 Move V2, [X1+24]
	007 Move X30, [X31+16]
	008 Return X0
	009 Call 0x1C17F20

