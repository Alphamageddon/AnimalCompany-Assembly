Type: UnityEngine.ProBuilder.MeshOperations.VertexEditing

Method: System.Int32 MergeVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes, System.Boolean collapseToFirst = False)

Disassembly:
	0x039817E4 MOV W1, W31
	0x039817E8 MOV X2, X31
	0x039817EC BL 0x39282DC
	0x039817F0 CBZ X28, 0x3981970
	0x039817F4 LDR W8, [X28 + 0x18]
	0x039817F8 CMP W27, W8
	0x039817FC B.CS 0x3981978
	0x03981800 ADD X8, X28, W27, 0x2, SXTW
	0x03981804 MOV W25, W31
	0x03981808 UBFM X26, X26, 0x20, 0x3F
	0x0398180C ADD W29, W27, 0x1
	0x03981810 STR W0, [X8 + 0x20]
	0x03981814 MOV X0, X22
	0x03981818 MOV X1, X31
	0x0398181C BL 0x393492C
	0x03981820 CMP W25, W0
	0x03981824 B.GE 0x39818A4
	0x03981828 MOV X0, X22
	0x0398182C MOV W1, W25
	0x03981830 MOV X2, X31
	0x03981834 BL 0x39282DC
	0x03981838 MOV W1, W0
	0x0398183C CBZ X24, 0x3981920
	0x03981840 LDR X3, [X19]
	0x03981844 MOV X0, X24
	0x03981848 MOV W2, W26
	0x0398184C BL 0x2A0A330
	0x03981850 MOV X0, X22
	0x03981854 MOV W1, W25
	0x03981858 MOV X2, X31
	0x0398185C BL 0x39282DC
	0x03981860 CBZ X20, 0x3981924
	0x03981864 LDR W8, [X20 + 0x18]
	0x03981868 CMP W0, W8
	0x0398186C B.CS 0x398192C
	0x03981870 CBZ X21, 0x3981928
	0x03981874 ADD X8, X20, W0, 0x3, SXTW
	0x03981878 LDR X27, [X8 + 0x20]
	0x0398187C LDR X2, [X23]
	0x03981880 MOV X0, X21
	0x03981884 MOV W1, W26
	0x03981888 BL 0x2A28EE8
	0x0398188C CBZ X27, 0x398191C
	0x03981890 MOV X0, X27
	0x03981894 MOV X1, X31
	0x03981898 BL 0x393D8A8
	0x0398189C ADD W25, W25, 0x1
	0x039818A0 B 0x3981814
	0x039818A4 MOV W27, W29
	0x039818A8 B 0x39817A4
	0x039818AC ADRP X8, 0x7CE000
	0x039818B0 LDR X8, [X8 + 0x888]
	0x039818B4 ADD X0, X31, 0x60
	0x039818B8 LDR X1, [X8]
	0x039818BC BL 0x2BF3AB0
	0x039818C0 LDR X19, [X31 + 0x30]
	0x039818C4 MOV X1, X24
	0x039818C8 MOV X2, X31
	0x039818CC MOV X0, X19
	0x039818D0 BL 0x3916234
	0x039818D4 MOV X0, X19
	0x039818D8 MOV X1, X20
	0x039818DC MOV W2, W31
	0x039818E0 MOV X3, X31
	0x039818E4 BL 0x3916CF4
	0x039818E8 MOV X0, X28
	0x039818EC LDP X20, X19, [X31 + 0x130]
	0x039818F0 LDP X22, X21, [X31 + 0x120]
	0x039818F4 LDP X24, X23, [X31 + 0x110]
	0x039818F8 LDP X26, X25, [X31 + 0x100]
	0x039818FC LDP X28, X27, [X31 + 0xF0]
	0x03981900 LDP X29, X30, [X31 + 0xE0]
	0x03981904 LDP D9, D8, [X31 + 0xD0]
	0x03981908 LDP D11, D10, [X31 + 0xC0]
	0x0398190C LDP D13, D12, [X31 + 0xB0]
	0x03981910 LDP D15, D14, [X31 + 0xA0]
	0x03981914 ADD X31, X31, 0x140
	0x03981918 RET
	0x0398191C BL 0x1C16F20
	0x03981920 BL 0x1C16F20
	0x03981924 BL 0x1C16F20
	0x03981928 BL 0x1C16F20
	0x0398192C BL 0x1C16F28
	0x03981930 BL 0x1C16F20
	0x03981934 BL 0x1C16F28
	0x03981938 BL 0x1C16F20
	0x0398193C BL 0x1C16F28
	0x03981940 BL 0x1C16F20
	0x03981944 BL 0x1C16F28
	0x03981948 BL 0x1C16F20
	0x0398194C BL 0x1C16F20
	0x03981950 BL 0x1C16F20
	0x03981954 BL 0x1C16F20
	0x03981958 BL 0x1C16F20
	0x0398195C BL 0x1C16F28
	0x03981960 BL 0x1C16F28
	0x03981964 BL 0x1C16F28
	0x03981968 BL 0x1C16F20
	0x0398196C BL 0x1C16F20
	0x03981970 BL 0x1C16F20
	0x03981974 BL 0x1C16F28
	0x03981978 BL 0x1C16F28
	0x0398197C BL 0x1C16F20
	0x03981980 BL 0x1C16F28
	0x03981984 BL 0x1C16F28
	0x03981988 BL 0x1C16F20
	0x0398198C BL 0x1C16F20
	0x03981990 BL 0x1C16F20
	0x03981994 BL 0x1C16F28
	0x03981998 BL 0x1C16F28
	0x0398199C BL 0x1C16F28
	0x039819A0 BL 0x1C16F28
	0x039819A4 BL 0x1C16F20
	0x039819A8 ADRP X0, 0x777000
	0x039819AC LDR X0, [X0 + 0x528]
	0x039819B0 BL 0x1C16D08
	0x039819B4 BL 0x1C16F10
	0x039819B8 MOV X19, X0
	0x039819BC ADRP X0, 0x7CC000
	0x039819C0 LDR X0, [X0 + 0xE90]
	0x039819C4 B 0x39819E4
	0x039819C8 ADRP X0, 0x777000
	0x039819CC LDR X0, [X0 + 0x528]
	0x039819D0 BL 0x1C16D08
	0x039819D4 BL 0x1C16F10
	0x039819D8 MOV X19, X0
	0x039819DC ADRP X0, 0x7AA000
	0x039819E0 LDR X0, [X0 + 0xE10]
	0x039819E4 BL 0x1C16D08
	0x039819E8 MOV X1, X0
	0x039819EC MOV X0, X19
	0x039819F0 MOV X2, X31
	0x039819F4 BL 0x330E100
	0x039819F8 ADRP X0, 0x7CF000
	0x039819FC LDR X0, [X0 + 0x450]
	0x03981A00 BL 0x1C16D08
	0x03981A04 MOV X1, X0
	0x03981A08 MOV X0, X19
	0x03981A0C BL 0x1C16DEC
	0x03981A10 BL 0x1C16F28
	0x03981A14 BL 0x1C16F20
	0x03981A18 BL 0x1C16F20
	0x03981A1C BL 0x1C16F28
	0x03981A20 BL 0x1C16F20
	0x03981A24 BL 0x1C16F20
	0x03981A28 BL 0x1C16F20
	0x03981A2C BL 0x1C16F20
	0x03981A30 BL 0x1C16F28
	0x03981A34 BL 0x1C16F28
	0x03981A38 BL 0x1C16F28
	0x03981A3C BL 0x1C16F20
	0x03981A40 BL 0x1C16F20
	0x03981A44 BL 0x1C16F20
	0x03981A48 B 0x3981B7C
	0x03981A4C B 0x3981B7C
	0x03981A50 B 0x3981B7C
	0x03981A54 B 0x3981B7C
	0x03981A58 B 0x3981B7C
	0x03981A5C B 0x3981B7C
	0x03981A60 B 0x3981B7C
	0x03981A64 B 0x3981B7C
	0x03981A68 B 0x3981B7C
	0x03981A6C B 0x3981B7C
	0x03981A70 B 0x3981B7C
	0x03981A74 B 0x3981B7C
	0x03981A78 B 0x3981B7C
	0x03981A7C B 0x3981B7C
	0x03981A80 B 0x3981B7C
	0x03981A84 B 0x3981B7C
	0x03981A88 B 0x3981B7C
	0x03981A8C B 0x3981B7C
	0x03981A90 B 0x3981B7C
	0x03981A94 B 0x3981B7C
	0x03981A98 B 0x3981B7C
	0x03981A9C B 0x3981B7C
	0x03981AA0 B 0x3981B7C
	0x03981AA4 B 0x3981B7C
	0x03981AA8 B 0x3981B7C
	0x03981AAC B 0x3981B7C
	0x03981AB0 B 0x3981C0C
	0x03981AB4 B 0x3981C0C
	0x03981AB8 B 0x3981C0C
	0x03981ABC B 0x3981B7C
	0x03981AC0 B 0x3981B7C
	0x03981AC4 B 0x3981B00
	0x03981AC8 B 0x3981B04
	0x03981ACC B 0x3981B04
	0x03981AD0 B 0x3981B00
	0x03981AD4 B 0x3981B00
	0x03981AD8 B 0x3981B00
	0x03981ADC B 0x3981B00
	0x03981AE0 B 0x3981B04
	0x03981AE4 B 0x3981C0C
	0x03981AE8 B 0x3981B7C
	0x03981AEC B 0x3981B04
	0x03981AF0 B 0x3981B7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA61000
	008 Move X23, 0x773000
	009 Move W8, [X22+2627]
	010 Move X23, [X23+1432]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x777000
	019 Move X0, [X0+2920]
	020 Call 0x1C17CF4
	021 Move X0, 0x777000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0x774000
	025 Move X0, [X0+3624]
	026 Call 0x1C17CF4
	027 Move X0, 0x79D000
	028 Move X0, [X0+3896]
	029 Call 0x1C17CF4
	030 Move X0, 0x774000
	031 Move X0, [X0+3632]
	032 Call 0x1C17CF4
	033 Move X0, 0x773000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x7CE000
	037 Move X0, [X0+3976]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+2627], W8
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {197}
	054 Compare X20, 0
	055 JumpIfEqual {204}
	056 Compare X19, 0
	057 JumpIfEqual {186}
	058 Move X0, X19
	059 Move X1, X31
	060 Move X2, X31
	061 Call ProBuilderMesh.GetVertices, X0, X1
	062 Move TEMP, X21
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {76}
	066 Move W8, [X20+24]
	067 Compare W8, 0
	068 JumpIfEqual {196}
	069 Compare X0, 0
	070 JumpIfEqual {186}
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Move W9, [X0+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X0, X8
	075 Move X21, [X8+32]
	076 Move X1, X20
	077 Move X2, X31
	078 Call Vertex.Average, X0, X1
	079 Move X21, X0
	080 Move X0, X19
	081 Move X1, X20
	082 Move X2, X31
	083 Call ProBuilderMesh.SetVerticesCoincident, X0, X1
	084 Move X0, X19
	085 Move X1, X20
	086 Call UVEditing.SplitUVs, X0, X1
	087 Move W8, [X20+24]
	088 Compare W8, 0
	089 JumpIfEqual {196}
	090 Move W1, [X20+32]
	091 Move X20, 0x7CE000
	092 Move X20, [X20+3976]
	093 Move X0, X19
	094 Move X2, X31
	095 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	096 Move X8, [X20]
	097 Move W20, W0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X19
	104 Move W1, W20
	105 Move X2, X21
	106 Move X3, X31
	107 Call VertexPositioning.SetSharedVertexValues, X0, X1, X2
	108 Move X8, [X19+48]
	109 Compare X8, 0
	110 JumpIfEqual {186}
	111 Move W9, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, 0x774000
	114 Move X9, [X9+3632]
	115 Add X8, X8, W20
	116 Move X20, 0x777000
	117 Move X21, [X8+32]
	118 Move X0, [X9]
	119 Move X20, [X20+2928]
	120 Call 0x1C17F10
	121 Move X1, [X20]
	122 Move X20, X0
	123 Call List`1<Int32>..ctor, X0
	124 Move X0, X19
	125 Move X1, X20
	126 Call MeshValidation.RemoveDegenerateTriangles, X0, X1
	127 Compare X21, 0
	128 JumpIfEqual {186}
	129 Move X0, X21
	130 Move X1, X31
	131 Call SharedVertex.get_Count, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X23, 0x777000
	134 Move X23, [X23+2920]
	135 Move W22, W31
	136 Move TEMP, 0
	137 Not TEMP
	138 Move W19, TEMP
	139 Move X0, X21
	140 Move W1, W22
	141 Move X2, X31
	142 Call SharedVertex.get_Item, X0, X1
	143 Compare X20, 0
	144 JumpIfEqual {186}
	145 Move X2, [X23]
	146 Move W1, W0
	147 Move X0, X20
	148 Call List`1<Int32>.Contains, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {158}
	153 Move X0, X21
	154 Move W1, W22
	155 Move X2, X31
	156 Call SharedVertex.get_Item, X0, X1
	157 Move W19, W0
	158 Move X0, X21
	159 Move X1, X31
	160 Add W22, W22, 1
	161 Call SharedVertex.get_Count, X0
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare X20, 0
	164 JumpIfEqual {186}
	165 Move W8, [X20+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X23, 0x79D000
	168 Move X23, [X23+3896]
	169 Move W21, W31
	170 Move W22, W19
	171 Move X2, [X23]
	172 Move X0, X20
	173 Move W1, W21
	174 Call List`1<Int32>.get_Item, X0, X1
	175 Move W8, [X20+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSET not yet implemented."
	178 Add W21, W21, 1
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract W22, W22, W9
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W19, TEMP
	184 Compare X20, 0
	185 JumpIfNotEqual {165}
	186 Call 0x1C17F20
	187 Move W22, W19
	188 Move W0, W22
	189 Move X20, [X31+32]
	190 Move X19, [X31+40]
	191 Move X22, [X31+16]
	192 Move X21, [X31+24]
	193 Move X30, [X31+48]
	194 Move X23, [X31+56]
	195 Return X0
	196 Call 0x1C17F28
	197 Move X0, 0x778000
	198 Move X0, [X0+1320]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Move X0, 0x7CD000
	203 Move X0, [X0+3728]
	204 Move X0, 0x778000
	205 Move X0, [X0+1320]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X19, X0
	209 Move X0, 0x7AB000
	210 Move X0, [X0+3600]
	211 Call 0x1C17D08
	212 Move X1, X0
	213 Move X0, X19
	214 Move X2, X31
	215 Call ArgumentNullException..ctor, X0, X1
	216 Move X0, 0x7D0000
	217 Move X0, [X0+1016]
	218 Call 0x1C17D08
	219 Move X1, X0
	220 Move X0, X19
	221 Call 0x1C17DEC

Method: System.Void SplitVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge edge)

Disassembly:
	0x03981AF4 B 0x3981C0C
	0x03981AF8 B 0x3981B00
	0x03981AFC B 0x3981B00
	0x03981B00 LDR X25, [X31 + 0x38]
	0x03981B04 MOV X27, X0
	0x03981B08 ADRP X24, 0x7CD000
	0x03981B0C LDR X24, [X24 + 0xD08]
	0x03981B10 CMP W1, 0x1
	0x03981B14 B.NE 0x3981B44
	0x03981B18 MOV X0, X27
	0x03981B1C BL 0x3EB1AD0
	0x03981B20 LDR X21, [X0]
	0x03981B24 BL 0x3EB1AE0
	0x03981B28 ADRP X8, 0x779000
	0x03981B2C LDR X8, [X8 + 0x830]
	0x03981B30 ADD X0, X31, 0x80
	0x03981B34 LDR X1, [X8]
	0x03981B38 BL 0x2BBDA68
	0x03981B3C CBZ X21, 0x3981388
	0x03981B40 B 0x3981C40
	0x03981B44 MOV X21, X31
	0x03981B48 B 0x3981B50
	0x03981B4C MOV X27, X0
	0x03981B50 ADRP X8, 0x779000
	0x03981B54 LDR X8, [X8 + 0x830]
	0x03981B58 LDR X1, [X8]
	0x03981B5C ADD X0, X31, 0x80
	0x03981B60 BL 0x2BBDA68
	0x03981B64 CBZ X21, 0x3981C6C
	0x03981B68 MOV X0, X21
	0x03981B6C BL 0x1C16F18
	0x03981B70 B 0x3981B7C
	0x03981B74 B 0x3981B7C
	0x03981B78 B 0x3981B7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA61000
	007 Move X22, 0x774000
	008 Move W8, [X21+2628]
	009 Move X22, [X22+3672]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x774000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2628], W8
	021 Move X0, [X22]
	022 Move W1, 2
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {43}
	026 Move W8, [X0+24]
	027 Move X1, X0
	028 Compare W8, 0
	029 JumpIfEqual {42}
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X1+32], W20
	032 Move X8, X20
	033 ShiftRight X8, 32
	034 And X8, X8, 0x7FFFFFFF
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move [X1+36], W8
	041 Move X30, [X31+48]
	042 Call 0x1C17F28
	043 Call 0x1C17F20

Method: System.Void SplitVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> vertices)

Disassembly:
	0x03981B7C MOV X27, X0
	0x03981B80 CMP W1, 0x1
	0x03981B84 B.NE 0x3981BB8
	0x03981B88 MOV X0, X27
	0x03981B8C BL 0x3EB1AD0
	0x03981B90 LDR X24, [X0]
	0x03981B94 BL 0x3EB1AE0
	0x03981B98 ADRP X8, 0x779000
	0x03981B9C LDR X8, [X8 + 0x830]
	0x03981BA0 ADD X0, X31, 0x80
	0x03981BA4 LDR X1, [X8]
	0x03981BA8 BL 0x2BBDA68
	0x03981BAC CBZ X24, 0x398173C
	0x03981BB0 MOV X0, X24
	0x03981BB4 BL 0x1C16F18
	0x03981BB8 MOV X24, X31
	0x03981BBC B 0x3981BC4
	0x03981BC0 MOV X27, X0
	0x03981BC4 ADRP X8, 0x779000
	0x03981BC8 LDR X8, [X8 + 0x830]
	0x03981BCC LDR X1, [X8]
	0x03981BD0 ADD X0, X31, 0x80
	0x03981BD4 BL 0x2BBDA68
	0x03981BD8 CBZ X24, 0x3981C6C
	0x03981BDC MOV X0, X24
	0x03981BE0 BL 0x1C16F18
	0x03981BE4 B 0x3981C0C
	0x03981BE8 B 0x3981C0C
	0x03981BEC B 0x3981C0C
	0x03981BF0 B 0x3981C0C
	0x03981BF4 B 0x3981C0C
	0x03981BF8 B 0x3981C0C
	0x03981BFC B 0x3981C0C
	0x03981C00 B 0x3981C0C
	0x03981C04 B 0x3981C0C
	0x03981C08 B 0x3981C0C
	0x03981C0C MOV X27, X0
	0x03981C10 CMP W1, 0x1
	0x03981C14 B.NE 0x3981C48
	0x03981C18 MOV X0, X27
	0x03981C1C BL 0x3EB1AD0
	0x03981C20 LDR X21, [X0]
	0x03981C24 BL 0x3EB1AE0
	0x03981C28 ADRP X8, 0x7CE000
	0x03981C2C LDR X8, [X8 + 0x888]
	0x03981C30 ADD X0, X31, 0x60
	0x03981C34 LDR X1, [X8]
	0x03981C38 BL 0x2BF3AB0
	0x03981C3C CBZ X21, 0x39818C0
	0x03981C40 MOV X0, X21
	0x03981C44 BL 0x1C16F18
	0x03981C48 MOV X21, X31
	0x03981C4C B 0x3981C54
	0x03981C50 MOV X27, X0
	0x03981C54 ADRP X8, 0x7CE000
	0x03981C58 LDR X8, [X8 + 0x888]
	0x03981C5C LDR X1, [X8]
	0x03981C60 ADD X0, X31, 0x60
	0x03981C64 BL 0x2BF3AB0
	0x03981C68 CBNZ X21, 0x3981C74
	0x03981C6C MOV X0, X27
	0x03981C70 BL 0x1D2C690
	0x03981C74 MOV X0, X21
	0x03981C78 BL 0x1C16F18
	0x03981C7C BL 0x1990590
	0x03981C80 SUB X31, X31, 0xA0
	0x03981C84 STP D11, D10, [X31 + 0x20]
	0x03981C88 STP D9, D8, [X31 + 0x30]
	0x03981C8C STP X29, X30, [X31 + 0x40]
	0x03981C90 STP X28, X27, [X31 + 0x50]
	0x03981C94 STP X26, X25, [X31 + 0x60]
	0x03981C98 STP X24, X23, [X31 + 0x70]
	0x03981C9C STP X22, X21, [X31 + 0x80]
	0x03981CA0 STP X20, X19, [X31 + 0x90]
	0x03981CA4 STR X2, [X31 + 0x10]
	0x03981CA8 ADRP X21, 0xA60000
	0x03981CAC ADRP X19, 0x7CF000
	0x03981CB0 LDRB W8, [X21 + 0xA47]
	0x03981CB4 LDR X19, [X19 + 0x458]
	0x03981CB8 MOV V8.16B, V0.16B
	0x03981CBC MOV X24, X1
	0x03981CC0 MOV X20, X0
	0x03981CC4 TBNZ X8, 0x0, 0x3981E14
	0x03981CC8 ADRP X0, 0x7CF000
	0x03981CCC LDR X0, [X0 + 0x460]
	0x03981CD0 BL 0x1C16CF4
	0x03981CD4 ADRP X0, 0x77C000
	0x03981CD8 LDR X0, [X0 + 0x858]
	0x03981CDC BL 0x1C16CF4
	0x03981CE0 ADRP X0, 0x7CD000
	0x03981CE4 LDR X0, [X0 + 0xD08]
	0x03981CE8 BL 0x1C16CF4
	0x03981CEC ADRP X0, 0x77C000
	0x03981CF0 LDR X0, [X0 + 0x890]
	0x03981CF4 BL 0x1C16CF4
	0x03981CF8 ADRP X0, 0x79C000
	0x03981CFC LDR X0, [X0 + 0x898]
	0x03981D00 BL 0x1C16CF4
	0x03981D04 ADRP X0, 0x7CC000
	0x03981D08 LDR X0, [X0 + 0xC80]
	0x03981D0C BL 0x1C16CF4
	0x03981D10 ADRP X0, 0x79C000
	0x03981D14 LDR X0, [X0 + 0x8A0]
	0x03981D18 BL 0x1C16CF4
	0x03981D1C ADRP X0, 0x77C000
	0x03981D20 LDR X0, [X0 + 0x888]
	0x03981D24 BL 0x1C16CF4
	0x03981D28 ADRP X0, 0x7CF000
	0x03981D2C LDR X0, [X0 + 0x458]
	0x03981D30 BL 0x1C16CF4
	0x03981D34 ADRP X0, 0x7CE000
	0x03981D38 LDR X0, [X0 + 0x1F0]
	0x03981D3C BL 0x1C16CF4
	0x03981D40 ADRP X0, 0x7CD000
	0x03981D44 LDR X0, [X0 + 0x560]
	0x03981D48 BL 0x1C16CF4
	0x03981D4C ADRP X0, 0x772000
	0x03981D50 LDR X0, [X0 + 0xE00]
	0x03981D54 BL 0x1C16CF4
	0x03981D58 ADRP X0, 0x7CF000
	0x03981D5C LDR X0, [X0 + 0x468]
	0x03981D60 BL 0x1C16CF4
	0x03981D64 ADRP X0, 0x7CF000
	0x03981D68 LDR X0, [X0 + 0x470]
	0x03981D6C BL 0x1C16CF4
	0x03981D70 ADRP X0, 0x772000
	0x03981D74 LDR X0, [X0 + 0xE18]
	0x03981D78 BL 0x1C16CF4
	0x03981D7C ADRP X0, 0x7CC000
	0x03981D80 LDR X0, [X0 + 0xF60]
	0x03981D84 BL 0x1C16CF4
	0x03981D88 ADRP X0, 0x7CE000
	0x03981D8C LDR X0, [X0 + 0x1C0]
	0x03981D90 BL 0x1C16CF4
	0x03981D94 ADRP X0, 0x7CF000
	0x03981D98 LDR X0, [X0 + 0x2B8]
	0x03981D9C BL 0x1C16CF4
	0x03981DA0 ADRP X0, 0x773000
	0x03981DA4 LDR X0, [X0 + 0xE18]
	0x03981DA8 BL 0x1C16CF4
	0x03981DAC ADRP X0, 0x7CE000
	0x03981DB0 LDR X0, [X0 + 0x1C8]
	0x03981DB4 BL 0x1C16CF4
	0x03981DB8 ADRP X0, 0x7CC000
	0x03981DBC LDR X0, [X0 + 0xE18]
	0x03981DC0 BL 0x1C16CF4
	0x03981DC4 ADRP X0, 0x7CD000
	0x03981DC8 LDR X0, [X0 + 0xFE0]
	0x03981DCC BL 0x1C16CF4
	0x03981DD0 ADRP X0, 0x7CD000
	0x03981DD4 LDR X0, [X0 + 0xFE8]
	0x03981DD8 BL 0x1C16CF4
	0x03981DDC ADRP X0, 0x7CC000
	0x03981DE0 LDR X0, [X0 + 0xDE8]
	0x03981DE4 BL 0x1C16CF4
	0x03981DE8 ADRP X0, 0x7CF000
	0x03981DEC LDR X0, [X0 + 0x478]
	0x03981DF0 BL 0x1C16CF4
	0x03981DF4 ADRP X0, 0x7CF000
	0x03981DF8 LDR X0, [X0 + 0x480]
	0x03981DFC BL 0x1C16CF4
	0x03981E00 ADRP X0, 0x7CD000
	0x03981E04 LDR X0, [X0 + 0xB08]
	0x03981E08 BL 0x1C16CF4
	0x03981E0C MOVZ W8, 0x1
	0x03981E10 STRB W8, [X21 + 0xA47]
	0x03981E14 LDR X1, [X19]
	0x03981E18 MOV X0, X24
	0x03981E1C STR X31, [X31 + 0x18]
	0x03981E20 BL 0x21C4928
	0x03981E24 CBZ X0, 0x398272C
	0x03981E28 ADRP X8, 0x7CD000
	0x03981E2C LDR X8, [X8 + 0xB08]
	0x03981E30 ADRP X21, 0x79C000
	0x03981E34 ADRP X19, 0x79C000
	0x03981E38 LDR X25, [X0 + 0x20]
	0x03981E3C LDR X8, [X8]
	0x03981E40 LDR W9, [X8 + 0xE0]
	0x03981E44 LDR X21, [X21 + 0x8A0]
	0x03981E48 LDR X19, [X19 + 0x898]
	0x03981E4C CBNZ W9, 0x3981E58
	0x03981E50 MOV X0, X8
	0x03981E54 BL 0x1C16DFC
	0x03981E58 MOV X0, X25
	0x03981E5C MOV X1, X31
	0x03981E60 BL 0x3942528
	0x03981E64 LDR X8, [X21]
	0x03981E68 MOV X22, X0
	0x03981E6C MOV X0, X8
	0x03981E70 BL 0x1C16F10
	0x03981E74 LDR X1, [X19]
	0x03981E78 MOV X23, X0
	0x03981E7C BL 0x2A12DD4
	0x03981E80 LDR X8, [X31 + 0x10]
	0x03981E84 STR X23, [X8]
	0x03981E88 CBZ X25, 0x398272C
	0x03981E8C LDR X1, [X25 + 0x10]
	0x03981E90 ADRP X19, 0x77C000
	0x03981E94 ADRP X21, 0x77C000
	0x03981E98 LDR X19, [X19 + 0x888]
	0x03981E9C LDR X21, [X21 + 0x890]
	0x03981EA0 MOV X0, X20
	0x03981EA4 MOV X2, X31
	0x03981EA8 BL 0x39090D4
	0x03981EAC LDR X0, [X19]
	0x03981EB0 MOV V9.16B, V0.16B
	0x03981EB4 MOV V10.16B, V1.16B
	0x03981EB8 MOV V11.16B, V2.16B
	0x03981EBC BL 0x1C16F10
	0x03981EC0 LDR X1, [X21]
	0x03981EC4 MOV X23, X0
	0x03981EC8 BL 0x2A09A9C
	0x03981ECC CBZ X24, 0x398272C
	0x03981ED0 ADRP X10, 0x7CF000
	0x03981ED4 LDR X8, [X24]
	0x03981ED8 LDR X10, [X10 + 0x468]
	0x03981EDC LDRH W9, [X8 + 0x12E]
	0x03981EE0 LDR X1, [X10]
	0x03981EE4 CBZ X9, 0x3981F08
	0x03981EE8 LDR X10, [X8 + 0xB0]
	0x03981EEC ADD X10, X10, 0x8
	0x03981EF0 LDUR X11, [X10 - 0x8]
	0x03981EF4 CMP X11, X1
	0x03981EF8 B.EQ 0x3981F18
	0x03981EFC SUBS X9, X9, 0x1
	0x03981F00 ADD X10, X10, 0x10
	0x03981F04 B.NE 0x3981EF0
	0x03981F08 MOV X0, X24
	0x03981F0C MOV W2, W31
	0x03981F10 BL 0x1C5C788
	0x03981F14 B 0x3981F24
	0x03981F18 LDRSW X9, [X10]
	0x03981F1C ADD X8, X8, X9, 0x4, LSL
	0x03981F20 ADD X0, X8, 0x138
	0x03981F24 STR X25, [X31 + 0x8]
	0x03981F28 LDP X8, X1, [X0]
	0x03981F2C ADRP X19, 0x772000
	0x03981F30 LDR X19, [X19 + 0xE00]
	0x03981F34 MOV X0, X24
	0x03981F38 BLR X8
	0x03981F3C MOV X24, X0
	0x03981F40 CBZ X0, 0x398273C
	0x03981F44 ADRP X21, 0x772000
	0x03981F48 ADRP X25, 0x7CF000
	0x03981F4C ADRP X26, 0x77C000
	0x03981F50 LDR X21, [X21 + 0xE18]
	0x03981F54 LDR X25, [X25 + 0x470]
	0x03981F58 LDR X26, [X26 + 0x858]
	0x03981F5C LDR X8, [X24]
	0x03981F60 LDR X1, [X21]
	0x03981F64 LDRH W9, [X8 + 0x12E]
	0x03981F68 CBZ X9, 0x3981F8C
	0x03981F6C LDR X10, [X8 + 0xB0]
	0x03981F70 ADD X10, X10, 0x8
	0x03981F74 LDUR X11, [X10 - 0x8]
	0x03981F78 CMP X11, X1
	0x03981F7C B.EQ 0x3981F9C
	0x03981F80 SUBS X9, X9, 0x1
	0x03981F84 ADD X10, X10, 0x10
	0x03981F88 B.NE 0x3981F74

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA61000
	011 Move X22, 0x773000
	012 Move W8, [X20+2629]
	013 Move X22, [X22+1432]
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x7CE000
	021 Move X0, [X0+3448]
	022 Call 0x1C17CF4
	023 Move X0, 0x79D000
	024 Move X0, [X0+2224]
	025 Call 0x1C17CF4
	026 Move X0, 0x773000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x79B000
	030 Move X0, [X0+1976]
	031 Call 0x1C17CF4
	032 Move X0, 0x79B000
	033 Move X0, [X0+1984]
	034 Call 0x1C17CF4
	035 Move X0, 0x773000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0x773000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+2629], W8
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {212}
	056 Compare X21, 0
	057 JumpIfEqual {219}
	058 Compare X19, 0
	059 JumpIfEqual {211}
	060 Move X0, X19
	061 Move X1, X31
	062 Call ProBuilderMesh.get_sharedVertexLookup, X0
	063 Compare X0, 0
	064 JumpIfEqual {211}
	065 Move X8, 0x7CE000
	066 Move X8, [X8+3448]
	067 Move X22, 0x79B000
	068 Move X20, X0
	069 Move X1, [X8]
	070 Move X22, [X22+1976]
	071 Call Dictionary`2<Int32, Int32>.get_Count, X0
	072 Move X8, [X21]
	073 Move X1, [X22]
	074 Move W22, W0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X21
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X23, 0x773000
	093 Move X23, [X23+3584]
	094 Move X0, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X21, X0
	097 Compare X0, 0
	098 JumpIfEqual {237}
	099 Move X24, 0x773000
	100 Move X25, 0x79B000
	101 Move X26, 0x79D000
	102 Move X24, [X24+3608]
	103 Move X25, [X25+1984]
	104 Move X26, [X26+2224]
	105 Move X8, [X21]
	106 Move X1, [X24]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X21
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {157}
	130 Move X8, [X21]
	131 Move X1, [X25]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X21
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X21
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move W1, W0
	152 Move X3, [X26]
	153 Add W22, W22, 1
	154 Move X0, X20
	155 Move W2, W22
	156 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	157 Move X22, X31
	158 Move W24, 10
	159 Compare X21, 0
	160 JumpIfEqual {182}
	161 Move X8, [X21]
	162 Move X1, [X23]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X21
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X1, [X0+8]
	180 Move X0, X21
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Compare X22, 0
	183 JumpIfNotEqual {238}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare W24, 0
	186 JumpIfNotEqual {201}
	187 Move X0, X19
	188 Move X1, X20
	189 Move X20, [X31+64]
	190 Move X19, [X31+72]
	191 Move X22, [X31+48]
	192 Move X21, [X31+56]
	193 Move X24, [X31+32]
	194 Move X23, [X31+40]
	195 Move X26, [X31+16]
	196 Move X25, [X31+24]
	197 Move X2, X31
	198 Move X30, [X31+80]
	199 Call ProBuilderMesh.SetSharedVertices, X0, X1
	200 Return 
	201 Move X20, [X31+64]
	202 Move X19, [X31+72]
	203 Move X22, [X31+48]
	204 Move X21, [X31+56]
	205 Move X24, [X31+32]
	206 Move X23, [X31+40]
	207 Move X26, [X31+16]
	208 Move X25, [X31+24]
	209 Move X30, [X31+80]
	210 Return 
	211 Call 0x1C17F20
	212 Move X0, 0x778000
	213 Move X0, [X0+1320]
	214 Call 0x1C17D08
	215 Call 0x1C17F10
	216 Move X19, X0
	217 Move X0, 0x7CD000
	218 Move X0, [X0+3728]
	219 Move X0, 0x778000
	220 Move X0, [X0+1320]
	221 Call 0x1C17D08
	222 Call 0x1C17F10
	223 Move X19, X0
	224 Move X0, 0x7CE000
	225 Move X0, [X0+1104]
	226 Call 0x1C17D08
	227 Move X1, X0
	228 Move X0, X19
	229 Move X2, X31
	230 Call ArgumentNullException..ctor, X0, X1
	231 Move X0, 0x7D0000
	232 Move X0, [X0+1024]
	233 Call 0x1C17D08
	234 Move X1, X0
	235 Move X0, X19
	236 Call 0x1C17DEC
	237 Call 0x1C17F20
	238 Move X0, X22
	239 Call 0x1C17F18
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Call 0x3EB2AD0
	242 Move X22, [X0]
	243 Call 0x3EB2AE0
	244 Move W24, W31
	245 Compare X21, 0
	246 JumpIfNotEqual {161}
	247 Move X19, X0
	248 Move X22, X31
	249 Move X19, X0
	250 Compare X21, 0
	251 JumpIfEqual {273}
	252 Move X8, [X21]
	253 Move X1, [X23]
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X21
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X21
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Compare X22, 0
	274 JumpIfNotEqual {277}
	275 Move X0, X19
	276 Call 0x1D2D690
	277 Move X0, X22
	278 Call 0x1C17F18
	279 Call 0x1991590

Method: System.Int32[] WeldVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> indexes, System.Single neighborRadius)

Disassembly:
	0x03981F8C MOV X0, X24
	0x03981F90 MOV W2, W31
	0x03981F94 BL 0x1C5C788
	0x03981F98 B 0x3981FA8
	0x03981F9C LDRSW X9, [X10]
	0x03981FA0 ADD X8, X8, X9, 0x4, LSL
	0x03981FA4 ADD X0, X8, 0x138
	0x03981FA8 LDP X8, X1, [X0]
	0x03981FAC MOV X0, X24
	0x03981FB0 BLR X8
	0x03981FB4 TBZ X0, 0x0, 0x3982054
	0x03981FB8 LDR X8, [X24]
	0x03981FBC LDR X1, [X25]
	0x03981FC0 LDRH W9, [X8 + 0x12E]
	0x03981FC4 CBZ X9, 0x3981FE8
	0x03981FC8 LDR X10, [X8 + 0xB0]
	0x03981FCC ADD X10, X10, 0x8
	0x03981FD0 LDUR X11, [X10 - 0x8]
	0x03981FD4 CMP X11, X1
	0x03981FD8 B.EQ 0x3981FF8
	0x03981FDC SUBS X9, X9, 0x1
	0x03981FE0 ADD X10, X10, 0x10
	0x03981FE4 B.NE 0x3981FD0
	0x03981FE8 MOV X0, X24
	0x03981FEC MOV W2, W31
	0x03981FF0 BL 0x1C5C788
	0x03981FF4 B 0x3982004
	0x03981FF8 LDRSW X9, [X10]
	0x03981FFC ADD X8, X8, X9, 0x4, LSL
	0x03982000 ADD X0, X8, 0x138
	0x03982004 LDP X8, X1, [X0]
	0x03982008 MOV X0, X24
	0x0398200C BLR X8
	0x03982010 CBZ X0, 0x3982730
	0x03982014 LDR W8, [X0 + 0x18]
	0x03982018 MOV X2, X1
	0x0398201C LDR X1, [X0 + 0x10]
	0x03982020 CMP W2, W8
	0x03982024 B.NE 0x398203C
	0x03982028 CBZ X23, 0x3982738
	0x0398202C LDR X3, [X26]
	0x03982030 MOV X0, X23
	0x03982034 BL 0x2A0A344
	0x03982038 B 0x3981F5C
	0x0398203C CBZ X23, 0x3982734
	0x03982040 LDR X3, [X26]
	0x03982044 UBFM X1, X1, 0x20, 0x3F
	0x03982048 MOV X0, X23
	0x0398204C BL 0x2A0A344
	0x03982050 B 0x3981F5C
	0x03982054 MOV X25, X31
	0x03982058 MOVZ W21, 0x5
	0x0398205C CBZ X24, 0x39820B8
	0x03982060 LDR X8, [X24]
	0x03982064 LDR X1, [X19]
	0x03982068 LDRH W9, [X8 + 0x12E]
	0x0398206C CBZ X9, 0x3982090
	0x03982070 LDR X10, [X8 + 0xB0]
	0x03982074 ADD X10, X10, 0x8
	0x03982078 LDUR X11, [X10 - 0x8]
	0x0398207C CMP X11, X1
	0x03982080 B.EQ 0x39820A0
	0x03982084 SUBS X9, X9, 0x1
	0x03982088 ADD X10, X10, 0x10
	0x0398208C B.NE 0x3982078
	0x03982090 MOV X0, X24
	0x03982094 MOV W2, W31
	0x03982098 BL 0x1C5C788
	0x0398209C B 0x39820AC
	0x039820A0 LDRSW X9, [X10]
	0x039820A4 ADD X8, X8, X9, 0x4, LSL
	0x039820A8 ADD X0, X8, 0x138
	0x039820AC LDP X8, X1, [X0]
	0x039820B0 MOV X0, X24
	0x039820B4 BLR X8
	0x039820B8 CBNZ X25, 0x3982740
	0x039820BC CMP W21, 0x5
	0x039820C0 B.EQ 0x39820C8
	0x039820C4 CBNZ W21, 0x3982700
	0x039820C8 CBZ X22, 0x398272C
	0x039820CC ADRP X8, 0x7CB000
	0x039820D0 LDR X8, [X8 + 0xDE8]
	0x039820D4 ADRP X21, 0x7CD000
	0x039820D8 LDR W19, [X22 + 0x18]
	0x039820DC LDR X0, [X8]
	0x039820E0 LDR X21, [X21 + 0x1C8]
	0x039820E4 BL 0x1C16F10
	0x039820E8 LDR X1, [X21]
	0x039820EC MOV X24, X0
	0x039820F0 BL 0x301B7C4
	0x039820F4 CMP W19, 0x1
	0x039820F8 B.LT 0x398261C
	0x039820FC ADRP X21, 0x7CC000
	0x03982100 ADRP X28, 0x7CC000
	0x03982104 ADRP X29, 0x7CB000
	0x03982108 LDR X21, [X21 + 0xFE8]
	0x0398210C LDR X28, [X28 + 0xD08]
	0x03982110 LDR X29, [X29 + 0xF60]
	0x03982114 MOV W25, W31
	0x03982118 LDR X2, [X21]
	0x0398211C MOV X0, X22
	0x03982120 MOV W1, W25
	0x03982124 BL 0x2FB9C40
	0x03982128 CBZ X23, 0x398272C
	0x0398212C LDR X2, [X28]
	0x03982130 UBFM X26, X0, 0x20, 0x3F
	0x03982134 MOV X0, X23
	0x03982138 MOV W1, W26
	0x0398213C BL 0x2A0A530
	0x03982140 TBZ X0, 0x0, 0x398219C
	0x03982144 LDR X2, [X21]
	0x03982148 MOV X0, X22
	0x0398214C MOV W1, W25
	0x03982150 BL 0x2FB9C40
	0x03982154 CBZ X20, 0x398272C
	0x03982158 LDR X8, [X20]
	0x0398215C LDR X1, [X29]
	0x03982160 MOV X27, X0
	0x03982164 LDRH W9, [X8 + 0x12E]
	0x03982168 CBZ X9, 0x398218C
	0x0398216C LDR X10, [X8 + 0xB0]
	0x03982170 ADD X10, X10, 0x8
	0x03982174 LDUR X11, [X10 - 0x8]
	0x03982178 CMP X11, X1
	0x0398217C B.EQ 0x39821E0
	0x03982180 SUBS X9, X9, 0x1
	0x03982184 ADD X10, X10, 0x10
	0x03982188 B.NE 0x3982174
	0x0398218C MOV X0, X20
	0x03982190 MOV W2, W31
	0x03982194 BL 0x1C5C788
	0x03982198 B 0x39821EC
	0x0398219C CBZ X20, 0x398272C
	0x039821A0 LDR X8, [X20]
	0x039821A4 LDR X1, [X29]
	0x039821A8 LDRH W9, [X8 + 0x12E]
	0x039821AC CBZ X9, 0x39821D0
	0x039821B0 LDR X10, [X8 + 0xB0]
	0x039821B4 ADD X10, X10, 0x8
	0x039821B8 LDUR X11, [X10 - 0x8]
	0x039821BC CMP X11, X1
	0x039821C0 B.EQ 0x3982254
	0x039821C4 SUBS X9, X9, 0x1
	0x039821C8 ADD X10, X10, 0x10
	0x039821CC B.NE 0x39821B8
	0x039821D0 MOV X0, X20
	0x039821D4 MOV W2, W31
	0x039821D8 BL 0x1C5C788
	0x039821DC B 0x3982260
	0x039821E0 LDRSW X9, [X10]
	0x039821E4 ADD X8, X8, X9, 0x4, LSL
	0x039821E8 ADD X0, X8, 0x138
	0x039821EC LDP X8, X2, [X0]
	0x039821F0 MOV X0, X20
	0x039821F4 MOV W1, W27
	0x039821F8 BLR X8
	0x039821FC LDR X2, [X21]
	0x03982200 MOV X27, X0
	0x03982204 MOV X0, X22
	0x03982208 MOV W1, W25
	0x0398220C BL 0x2FB9C40
	0x03982210 LDR X8, [X20]
	0x03982214 LDR X1, [X29]
	0x03982218 MOV X28, X0
	0x0398221C LDRH W9, [X8 + 0x12E]
	0x03982220 CBZ X9, 0x3982244
	0x03982224 LDR X10, [X8 + 0xB0]
	0x03982228 ADD X10, X10, 0x8
	0x0398222C LDUR X11, [X10 - 0x8]
	0x03982230 CMP X11, X1
	0x03982234 B.EQ 0x39822C8
	0x03982238 SUBS X9, X9, 0x1
	0x0398223C ADD X10, X10, 0x10
	0x03982240 B.NE 0x398222C
	0x03982244 MOV X0, X20
	0x03982248 MOV W2, W31
	0x0398224C BL 0x1C5C788
	0x03982250 B 0x39822D4
	0x03982254 LDRSW X9, [X10]
	0x03982258 ADD X8, X8, X9, 0x4, LSL
	0x0398225C ADD X0, X8, 0x138
	0x03982260 LDP X8, X2, [X0]
	0x03982264 MOV X0, X20
	0x03982268 MOV W1, W26
	0x0398226C BLR X8
	0x03982270 CBZ X24, 0x398272C
	0x03982274 ADRP X9, 0x7CD000
	0x03982278 LDR W10, [X24 + 0x1C]
	0x0398227C LDR X8, [X24 + 0x10]
	0x03982280 LDR X9, [X9 + 0x1C0]
	0x03982284 ADD W10, W10, 0x1
	0x03982288 LDR X9, [X9]
	0x0398228C STR W10, [X24 + 0x1C]
	0x03982290 CBZ X8, 0x398272C
	0x03982294 LDRSW X10, [X24 + 0x18]
	0x03982298 LDR W11, [X8 + 0x18]
	0x0398229C MOV X1, X0
	0x039822A0 CMP W10, W11
	0x039822A4 B.CS 0x39822BC
	0x039822A8 ADD W9, W10, 0x1
	0x039822AC ADD X8, X8, X10, 0x3, LSL
	0x039822B0 STR W9, [X24 + 0x18]
	0x039822B4 STR X1, [X8 + 0x20]
	0x039822B8 B 0x3982610
	0x039822BC LDR X8, [X9 + 0x20]
	0x039822C0 MOV X0, X24
	0x039822C4 B 0x3982604
	0x039822C8 LDRSW X9, [X10]
	0x039822CC ADD X8, X8, X9, 0x4, LSL
	0x039822D0 ADD X0, X8, 0x138
	0x039822D4 LDP X8, X2, [X0]
	0x039822D8 UBFM X1, X28, 0x20, 0x3F
	0x039822DC MOV X0, X20
	0x039822E0 BLR X8
	0x039822E4 LDR X2, [X21]
	0x039822E8 ADD W8, W25, 0x1
	0x039822EC CMP W8, W19
	0x039822F0 MOV X29, X0
	0x039822F4 CSINC W1, W31, W25, EQ
	0x039822F8 MOV X0, X22
	0x039822FC BL 0x2FB9C40
	0x03982300 LDR X8, [X20]
	0x03982304 ADRP X10, 0x7CB000
	0x03982308 MOV X28, X0
	0x0398230C LDRH W9, [X8 + 0x12E]
	0x03982310 LDR X10, [X10 + 0xF60]
	0x03982314 LDR X1, [X10]
	0x03982318 CBZ X9, 0x398233C
	0x0398231C LDR X10, [X8 + 0xB0]
	0x03982320 ADD X10, X10, 0x8
	0x03982324 LDUR X11, [X10 - 0x8]
	0x03982328 CMP X11, X1
	0x0398232C B.EQ 0x398234C
	0x03982330 SUBS X9, X9, 0x1
	0x03982334 ADD X10, X10, 0x10
	0x03982338 B.NE 0x3982324
	0x0398233C MOV X0, X20
	0x03982340 MOV W2, W31
	0x03982344 BL 0x1C5C788
	0x03982348 B 0x3982358
	0x0398234C LDRSW X9, [X10]
	0x03982350 ADD X8, X8, X9, 0x4, LSL
	0x03982354 ADD X0, X8, 0x138
	0x03982358 LDP X8, X2, [X0]
	0x0398235C UBFM X1, X28, 0x20, 0x3F
	0x03982360 MOV X0, X20
	0x03982364 BLR X8
	0x03982368 MOV X21, X0
	0x0398236C MOV X0, X27
	0x03982370 MOV X1, X29
	0x03982374 MOV X2, X31
	0x03982378 BL 0x393E2C8
	0x0398237C MOV X28, X0
	0x03982380 MOV X0, X21
	0x03982384 MOV X1, X29
	0x03982388 MOV X2, X31
	0x0398238C BL 0x393E2C8
	0x03982390 CBZ X28, 0x398272C
	0x03982394 MOV X27, X0
	0x03982398 MOV X0, X28
	0x0398239C MOV X1, X31
	0x039823A0 BL 0x393E5B8
	0x039823A4 ADRP X29, 0x7CB000
	0x039823A8 LDR X29, [X29 + 0xF60]
	0x039823AC CBZ X27, 0x398272C
	0x039823B0 MOV X0, X27
	0x039823B4 MOV X1, X31
	0x039823B8 BL 0x393E5B8
	0x039823BC LDR X8, [X20]
	0x039823C0 LDR X1, [X29]
	0x039823C4 LDRH W9, [X8 + 0x12E]
	0x039823C8 CBZ X9, 0x39823EC
	0x039823CC LDR X10, [X8 + 0xB0]
	0x039823D0 ADD X10, X10, 0x8
	0x039823D4 LDUR X11, [X10 - 0x8]
	0x039823D8 CMP X11, X1
	0x039823DC B.EQ 0x39823FC
	0x039823E0 SUBS X9, X9, 0x1
	0x039823E4 ADD X10, X10, 0x10
	0x039823E8 B.NE 0x39823D4
	0x039823EC MOV X0, X20
	0x039823F0 MOV W2, W31
	0x039823F4 BL 0x1C5C788
	0x039823F8 B 0x3982408
	0x039823FC LDRSW X9, [X10]
	0x03982400 ADD X8, X8, X9, 0x4, LSL
	0x03982404 ADD X0, X8, 0x138
	0x03982408 LDP X8, X2, [X0]
	0x0398240C MOV X0, X20
	0x03982410 MOV W1, W26
	0x03982414 BLR X8
	0x03982418 MOV X21, X0
	0x0398241C MOV X0, X28
	0x03982420 MOV V0.16B, V8.16B
	0x03982424 MOV X1, X31
	0x03982428 BL 0x393E438
	0x0398242C MOV X1, X0
	0x03982430 MOV X0, X21
	0x03982434 MOV X2, X31
	0x03982438 BL 0x393E158
	0x0398243C LDR X8, [X20]
	0x03982440 LDR X1, [X29]
	0x03982444 MOV X28, X0
	0x03982448 LDRH W9, [X8 + 0x12E]
	0x0398244C CBZ X9, 0x3982470
	0x03982450 LDR X10, [X8 + 0xB0]
	0x03982454 ADD X10, X10, 0x8
	0x03982458 LDUR X11, [X10 - 0x8]
	0x0398245C CMP X11, X1
	0x03982460 B.EQ 0x3982480
	0x03982464 SUBS X9, X9, 0x1
	0x03982468 ADD X10, X10, 0x10
	0x0398246C B.NE 0x3982458
	0x03982470 MOV X0, X20
	0x03982474 MOV W2, W31
	0x03982478 BL 0x1C5C788
	0x0398247C B 0x398248C
	0x03982480 LDRSW X9, [X10]
	0x03982484 ADD X8, X8, X9, 0x4, LSL
	0x03982488 ADD X0, X8, 0x138
	0x0398248C LDP X8, X2, [X0]
	0x03982490 MOV X0, X20
	0x03982494 MOV W1, W26
	0x03982498 BLR X8
	0x0398249C MOV X21, X0
	0x039824A0 MOV X0, X27
	0x039824A4 MOV V0.16B, V8.16B
	0x039824A8 MOV X1, X31
	0x039824AC BL 0x393E438
	0x039824B0 MOV X1, X0
	0x039824B4 MOV X0, X21
	0x039824B8 MOV X2, X31
	0x039824BC BL 0x393E158
	0x039824C0 LDR X8, [X31 + 0x10]
	0x039824C4 MOV X27, X0
	0x039824C8 MOV X0, X23
	0x039824CC MOV W1, W26
	0x039824D0 LDR X29, [X8]
	0x039824D4 ADRP X8, 0x7CB000
	0x039824D8 LDR X8, [X8 + 0xC80]
	0x039824DC LDR X2, [X8]
	0x039824E0 BL 0x2A0A2A8
	0x039824E4 CBZ X24, 0x398272C
	0x039824E8 ADRP X8, 0x7CE000
	0x039824EC LDR W2, [X24 + 0x18]
	0x039824F0 LDR X8, [X8 + 0x460]
	0x039824F4 MOV W1, W0
	0x039824F8 MOV X0, X29
	0x039824FC LDR X3, [X8]
	0x03982500 BL 0x217D0B8
	0x03982504 ADRP X9, 0x7CD000
	0x03982508 LDR W10, [X24 + 0x1C]
	0x0398250C LDR X8, [X24 + 0x10]
	0x03982510 LDR X9, [X9 + 0x1C0]
	0x03982514 ADD W10, W10, 0x1
	0x03982518 LDR X9, [X9]
	0x0398251C STR W10, [X24 + 0x1C]
	0x03982520 CBZ X8, 0x398272C
	0x03982524 LDRSW X10, [X24 + 0x18]
	0x03982528 LDR W11, [X8 + 0x18]
	0x0398252C ADRP X29, 0x7CB000
	0x03982530 LDR X29, [X29 + 0xF60]
	0x03982534 CMP W10, W11
	0x03982538 B.CS 0x3982550
	0x0398253C ADD W9, W10, 0x1
	0x03982540 ADD X8, X8, X10, 0x3, LSL
	0x03982544 STR W9, [X24 + 0x18]
	0x03982548 STR X28, [X8 + 0x20]
	0x0398254C B 0x3982568
	0x03982550 LDR X8, [X9 + 0x20]
	0x03982554 MOV X0, X24
	0x03982558 MOV X1, X28
	0x0398255C LDR X8, [X8 + 0xC0]
	0x03982560 LDR X2, [X8 + 0x70]
	0x03982564 BL 0x301BF90
	0x03982568 LDR X8, [X31 + 0x10]
	0x0398256C MOV X0, X23
	0x03982570 MOV W1, W26
	0x03982574 LDR X21, [X8]
	0x03982578 ADRP X8, 0x7CB000
	0x0398257C LDR X8, [X8 + 0xC80]
	0x03982580 LDR X2, [X8]
	0x03982584 BL 0x2A0A2A8
	0x03982588 ADRP X8, 0x7CE000
	0x0398258C LDR W2, [X24 + 0x18]
	0x03982590 LDR X8, [X8 + 0x460]
	0x03982594 MOV W1, W0
	0x03982598 MOV X0, X21
	0x0398259C LDR X3, [X8]
	0x039825A0 BL 0x217D0B8
	0x039825A4 LDR W10, [X24 + 0x1C]
	0x039825A8 ADRP X9, 0x7CD000
	0x039825AC LDR X8, [X24 + 0x10]
	0x039825B0 LDR X9, [X9 + 0x1C0]
	0x039825B4 ADD W10, W10, 0x1
	0x039825B8 ADRP X28, 0x7CC000
	0x039825BC LDR X9, [X9]
	0x039825C0 STR W10, [X24 + 0x1C]
	0x039825C4 LDR X28, [X28 + 0xD08]
	0x039825C8 CBZ X8, 0x398272C
	0x039825CC LDRSW X10, [X24 + 0x18]
	0x039825D0 LDR W11, [X8 + 0x18]
	0x039825D4 ADRP X21, 0x7CC000
	0x039825D8 LDR X21, [X21 + 0xFE8]
	0x039825DC CMP W10, W11
	0x039825E0 B.CS 0x39825F8
	0x039825E4 ADD W9, W10, 0x1
	0x039825E8 ADD X8, X8, X10, 0x3, LSL
	0x039825EC STR W9, [X24 + 0x18]
	0x039825F0 STR X27, [X8 + 0x20]
	0x039825F4 B 0x3982610
	0x039825F8 LDR X8, [X9 + 0x20]
	0x039825FC MOV X0, X24
	0x03982600 MOV X1, X27
	0x03982604 LDR X8, [X8 + 0xC0]
	0x03982608 LDR X2, [X8 + 0x70]
	0x0398260C BL 0x301BF90
	0x03982610 ADD W25, W25, 0x1
	0x03982614 CMP W25, W19
	0x03982618 B.NE 0x3982118
	0x0398261C ADD X1, X31, 0x18
	0x03982620 MOV X0, X24
	0x03982624 MOV W2, W31
	0x03982628 MOV W3, W31
	0x0398262C BL 0x397BFB8
	0x03982630 TBZ X0, 0x0, 0x39826C8
	0x03982634 ADRP X8, 0x7CD000
	0x03982638 LDR X8, [X8 + 0x1F0]
	0x0398263C LDR X0, [X8]
	0x03982640 BL 0x1C16F10
	0x03982644 MOV X1, X31
	0x03982648 MOV X25, X0
	0x0398264C BL 0x3901F84
	0x03982650 CBZ X25, 0x398272C
	0x03982654 STR X24, [X25 + 0x18]
	0x03982658 ADRP X8, 0x7CC000
	0x0398265C LDR X8, [X8 + 0x560]
	0x03982660 LDR X0, [X8]
	0x03982664 BL 0x1C16F10
	0x03982668 LDR X1, [X31 + 0x8]
	0x0398266C MOV X2, X31
	0x03982670 MOV X19, X0
	0x03982674 BL 0x3900598
	0x03982678 STR X19, [X25 + 0x10]
	0x0398267C LDR X19, [X31 + 0x18]
	0x03982680 MOV X0, X24
	0x03982684 MOV X2, X31
	0x03982688 MOV X1, X19
	0x0398268C BL 0x39090D4
	0x03982690 FMUL S0, S9, S0
	0x03982694 FMUL S1, S10, S1
	0x03982698 FADD S0, S0, S1
	0x0398269C FMUL S1, S11, S2
	0x039826A0 FADD S0, S1, S0
	0x039826A4 FCMP S0, 0x0
	0x039826A8 B.PL 0x39826D0
	0x039826AC CBZ X19, 0x398272C
	0x039826B0 ADRP X8, 0x7CE000
	0x039826B4 LDR X8, [X8 + 0x2B8]
	0x039826B8 MOV X0, X19
	0x039826BC LDR X1, [X8]
	0x039826C0 BL 0x2FDE29C
	0x039826C4 B 0x39826D4
	0x039826C8 MOV X25, X31
	0x039826CC B 0x3982700
	0x039826D0 CBZ X19, 0x398272C
	0x039826D4 ADRP X8, 0x772000
	0x039826D8 LDR X20, [X25 + 0x10]
	0x039826DC LDR X8, [X8 + 0xE18]
	0x039826E0 MOV X0, X19
	0x039826E4 LDR X1, [X8]
	0x039826E8 BL 0x2FDE4C8
	0x039826EC CBZ X20, 0x398272C
	0x039826F0 MOV X1, X0
	0x039826F4 MOV X0, X20
	0x039826F8 MOV X2, X31
	0x039826FC BL 0x38FFBA8
	0x03982700 MOV X0, X25
	0x03982704 LDP X20, X19, [X31 + 0x90]
	0x03982708 LDP X22, X21, [X31 + 0x80]
	0x0398270C LDP X24, X23, [X31 + 0x70]
	0x03982710 LDP X26, X25, [X31 + 0x60]
	0x03982714 LDP X28, X27, [X31 + 0x50]
	0x03982718 LDP X29, X30, [X31 + 0x40]
	0x0398271C LDP D9, D8, [X31 + 0x30]
	0x03982720 LDP D11, D10, [X31 + 0x20]
	0x03982724 ADD X31, X31, 0xA0
	0x03982728 RET
	0x0398272C BL 0x1C16F20
	0x03982730 BL 0x1C16F20
	0x03982734 BL 0x1C16F20
	0x03982738 BL 0x1C16F20
	0x0398273C BL 0x1C16F20
	0x03982740 MOV X0, X25
	0x03982744 BL 0x1C16F18
	0x03982748 B 0x3982764
	0x0398274C B 0x3982764
	0x03982750 B 0x3982764
	0x03982754 B 0x3982764
	0x03982758 B 0x3982764
	0x0398275C B 0x3982764
	0x03982760 B 0x3982764
	0x03982764 MOV X26, X0
	0x03982768 CMP W1, 0x1
	0x0398276C B.NE 0x398278C
	0x03982770 MOV X0, X26
	0x03982774 BL 0x3EB1AD0
	0x03982778 LDR X25, [X0]
	0x0398277C BL 0x3EB1AE0
	0x03982780 MOV W21, W31
	0x03982784 CBNZ X24, 0x3982060
	0x03982788 B 0x39820B8
	0x0398278C MOV X25, X31
	0x03982790 B 0x3982798
	0x03982794 MOV X26, X0
	0x03982798 CBZ X24, 0x39827F4
	0x0398279C LDR X8, [X24]
	0x039827A0 LDR X1, [X19]
	0x039827A4 LDRH W9, [X8 + 0x12E]
	0x039827A8 CBZ X9, 0x39827CC
	0x039827AC LDR X10, [X8 + 0xB0]
	0x039827B0 ADD X10, X10, 0x8
	0x039827B4 LDUR X11, [X10 - 0x8]
	0x039827B8 CMP X11, X1
	0x039827BC B.EQ 0x39827DC
	0x039827C0 SUBS X9, X9, 0x1
	0x039827C4 ADD X10, X10, 0x10
	0x039827C8 B.NE 0x39827B4
	0x039827CC MOV X0, X24
	0x039827D0 MOV W2, W31
	0x039827D4 BL 0x1C5C788
	0x039827D8 B 0x39827E8
	0x039827DC LDRSW X9, [X10]
	0x039827E0 ADD X8, X8, X9, 0x4, LSL
	0x039827E4 ADD X0, X8, 0x138
	0x039827E8 LDP X8, X1, [X0]
	0x039827EC MOV X0, X24
	0x039827F0 BLR X8
	0x039827F4 CBNZ X25, 0x3982800
	0x039827F8 MOV X0, X26
	0x039827FC BL 0x1D2C690
	0x03982800 MOV X0, X25
	0x03982804 BL 0x1C16F18
	0x03982808 BL 0x1990590
	0x0398280C STR X30, [X31 - 0x10]!
	0x03982810 CMP W1, W2
	0x03982814 MOV X8, X0
	0x03982818 B.NE 0x3982830
	0x0398281C UBFM X2, X8, 0x20, 0x3F
	0x03982820 STR X31, [X31 + 0x8]
	0x03982824 ADD X0, X31, 0x8
	0x03982828 MOV W1, W8
	0x0398282C B 0x3982840
	0x03982830 UBFM X1, X8, 0x20, 0x3F
	0x03982834 ADD X0, X31, 0x8
	0x03982838 MOV W2, W8
	0x0398283C STR X31, [X31 + 0x8]
	0x03982840 MOV X3, X31
	0x03982844 BL 0x38FDC24
	0x03982848 LDR X0, [X31 + 0x8]
	0x0398284C LDR X30, [X31], #0x10
	0x03982850 RET
	0x03982854 STP X30, X23, [X31 - 0x30]!
	0x03982858 STP X22, X21, [X31 + 0x10]
	0x0398285C STP X20, X19, [X31 + 0x20]
	0x03982860 ADRP X23, 0xA5F000
	0x03982864 ADRP X22, 0x771000
	0x03982868 ADRP X20, 0x7CE000
	0x0398286C ADRP X21, 0x7CE000
	0x03982870 MOV X19, X8
	0x03982874 LDRB W8, [X23 + 0xA49]
	0x03982878 LDR X22, [X22 + 0x618]
	0x0398287C LDR X20, [X20 + 0x488]
	0x03982880 LDR X21, [X21 + 0x490]
	0x03982884 TBNZ X8, 0x0, 0x39828B4
	0x03982888 ADRP X0, 0x771000
	0x0398288C LDR X0, [X0 + 0x618]
	0x03982890 BL 0x1C16CF4
	0x03982894 ADRP X0, 0x7CE000
	0x03982898 LDR X0, [X0 + 0x488]
	0x0398289C BL 0x1C16CF4
	0x039828A0 ADRP X0, 0x7CE000
	0x039828A4 LDR X0, [X0 + 0x490]
	0x039828A8 BL 0x1C16CF4
	0x039828AC MOVZ W8, 0x1
	0x039828B0 STRB W8, [X23 + 0xA49]
	0x039828B4 LDR X0, [X22]
	0x039828B8 MOVZ W1, 0xCD
	0x039828BC BL 0x1C16D6C
	0x039828C0 LDR X1, [X20]
	0x039828C4 MOV X2, X31
	0x039828C8 MOV X20, X0
	0x039828CC BL 0x32C5BD8
	0x039828D0 LDR X0, [X22]
	0x039828D4 MOVZ W1, 0xD5
	0x039828D8 BL 0x1C16D6C
	0x039828DC LDR X1, [X21]
	0x039828E0 MOV X2, X31
	0x039828E4 MOV X21, X0
	0x039828E8 BL 0x32C5BD8
	0x039828EC ADRP X8, 0xFFFFFFFFFD16B000
	0x039828F0 LDR V0, [X8 + 0x5C0]
	0x039828F4 STP X20, X21, [X19]
	0x039828F8 STRB W31, [X19 + 0x18]
	0x039828FC STUR W31, [X19 + 0x19]
	0x03982900 STR D0, [X19 + 0x10]
	0x03982904 STR W31, [X19 + 0x1C]
	0x03982908 LDP X20, X19, [X31 + 0x20]
	0x0398290C LDP X22, X21, [X31 + 0x10]
	0x03982910 LDP X30, X23, [X31], #0x30
	0x03982914 RET
	0x03982918 MOV X1, X31
	0x0398291C B 0x33BDD8C
	0x03982920 MOV X1, X31
	0x03982924 B 0x33A51F0
	0x03982928 MOV X1, X31
	0x0398292C B 0x33A51F0
	0x03982930 STP X30, X23, [X31 - 0x30]!
	0x03982934 STP X22, X21, [X31 + 0x10]
	0x03982938 STP X20, X19, [X31 + 0x20]
	0x0398293C ADRP X23, 0xA5F000
	0x03982940 ADRP X22, 0x771000
	0x03982944 ADRP X20, 0x7CE000
	0x03982948 ADRP X21, 0x7CE000
	0x0398294C MOV X19, X8
	0x03982950 LDRB W8, [X23 + 0xA4B]
	0x03982954 LDR X22, [X22 + 0x618]
	0x03982958 LDR X20, [X20 + 0x498]
	0x0398295C LDR X21, [X21 + 0x4A0]
	0x03982960 TBNZ X8, 0x0, 0x3982990
	0x03982964 ADRP X0, 0x771000
	0x03982968 LDR X0, [X0 + 0x618]
	0x0398296C BL 0x1C16CF4
	0x03982970 ADRP X0, 0x7CE000
	0x03982974 LDR X0, [X0 + 0x498]
	0x03982978 BL 0x1C16CF4
	0x0398297C ADRP X0, 0x7CE000
	0x03982980 LDR X0, [X0 + 0x4A0]
	0x03982984 BL 0x1C16CF4
	0x03982988 MOVZ W8, 0x1
	0x0398298C STRB W8, [X23 + 0xA4B]
	0x03982990 LDR X0, [X22]
	0x03982994 MOVZ W1, 0x4935
	0x03982998 BL 0x1C16D6C
	0x0398299C LDR X1, [X20]
	0x039829A0 MOV X2, X31
	0x039829A4 MOV X20, X0
	0x039829A8 BL 0x32C5BD8
	0x039829AC LDR X0, [X22]
	0x039829B0 MOVZ W1, 0x4EA4
	0x039829B4 BL 0x1C16D6C
	0x039829B8 LDR X1, [X21]
	0x039829BC MOV X2, X31
	0x039829C0 MOV X21, X0
	0x039829C4 BL 0x32C5BD8
	0x039829C8 ADRP X8, 0xFFFFFFFFFD16B000
	0x039829CC LDR V0, [X8 + 0x400]
	0x039829D0 STP X20, X21, [X19]
	0x039829D4 STRB W31, [X19 + 0x18]
	0x039829D8 STUR W31, [X19 + 0x19]
	0x039829DC STR D0, [X19 + 0x10]
	0x039829E0 STR W31, [X19 + 0x1C]
	0x039829E4 LDP X20, X19, [X31 + 0x20]
	0x039829E8 LDP X22, X21, [X31 + 0x10]
	0x039829EC LDP X30, X23, [X31], #0x30
	0x039829F0 RET
	0x039829F4 MOV X1, X31
	0x039829F8 B 0x33BDD8C
	0x039829FC LDR V0, [X0 + 0x3C]
	0x03982A00 RET
	0x03982A04 MOVZ W8, 0x43340000
	0x03982A08 MOVZ W9, 0x43B40000
	0x03982A0C FMOV S1, W8
	0x03982A10 FADD S0, S0, S1
	0x03982A14 FMOV S1, W9
	0x03982A18 FDIV S2, S0, S1
	0x03982A1C FRINTM S2, S2
	0x03982A20 FMUL S1, S2, S1
	0x03982A24 MOVZ W8, 0xC3340000
	0x03982A28 FSUB S0, S0, S1
	0x03982A2C FMOV S1, W8
	0x03982A30 FADD S0, S0, S1
	0x03982A34 STR S0, [X0 + 0x3C]
	0x03982A38 RET
	0x03982A3C MOVZ W8, 0x43340000
	0x03982A40 MOVZ W9, 0x43B40000
	0x03982A44 FMOV S1, W8
	0x03982A48 FADD S0, S0, S1
	0x03982A4C FMOV S1, W9
	0x03982A50 FDIV S2, S0, S1
	0x03982A54 FRINTM S2, S2
	0x03982A58 FMUL S1, S2, S1
	0x03982A5C MOVZ W8, 0xC3340000
	0x03982A60 FSUB S0, S0, S1
	0x03982A64 FMOV S1, W8
	0x03982A68 FADD S0, S0, S1
	0x03982A6C RET
	0x03982A70 LDR V0, [X0 + 0x40]
	0x03982A74 RET
	0x03982A78 MOVZ W8, 0x43340000
	0x03982A7C MOVZ W9, 0x43B40000
	0x03982A80 FMOV S1, W8
	0x03982A84 FADD S0, S0, S1
	0x03982A88 FMOV S1, W9
	0x03982A8C FDIV S2, S0, S1
	0x03982A90 FRINTM S2, S2
	0x03982A94 FMUL S1, S2, S1
	0x03982A98 MOVZ W8, 0xC3340000
	0x03982A9C FSUB S0, S0, S1
	0x03982AA0 FMOV S1, W8
	0x03982AA4 FADD S0, S0, S1
	0x03982AA8 STR S0, [X0 + 0x40]
	0x03982AAC RET
	0x03982AB0 LDR V0, [X0 + 0x44]
	0x03982AB4 RET
	0x03982AB8 MOVZ W8, 0x43340000
	0x03982ABC MOVZ W9, 0x43B40000
	0x03982AC0 FMOV S1, W8
	0x03982AC4 FADD S0, S0, S1
	0x03982AC8 FMOV S1, W9
	0x03982ACC FDIV S2, S0, S1
	0x03982AD0 FRINTM S2, S2
	0x03982AD4 FMUL S1, S2, S1
	0x03982AD8 MOVZ W8, 0xC3340000
	0x03982ADC FSUB S0, S0, S1
	0x03982AE0 FMOV S1, W8
	0x03982AE4 FADD S0, S0, S1
	0x03982AE8 STR S0, [X0 + 0x44]
	0x03982AEC RET
	0x03982AF0 LDR V0, [X0 + 0x20]
	0x03982AF4 RET
	0x03982AF8 ADRP X8, 0xFFFFFFFFFD168000
	0x03982AFC LDR V1, [X8 + 0x18C]
	0x03982B00 FCMP S0, 0x0
	0x03982B04 FMIN S0, S0, S1
	0x03982B08 FMOV S1, W31
	0x03982B0C FCSEL S0, S0, S1, PL
	0x03982B10 STR S0, [X0 + 0x20]
	0x03982B14 RET
	0x03982B18 LDR W0, [X0 + 0x24]
	0x03982B1C RET
	0x03982B20 STR W1, [X0 + 0x24]
	0x03982B24 RET
	0x03982B28 STR D10, [X31 - 0x40]!
	0x03982B2C STP D9, D8, [X31 + 0x10]
	0x03982B30 STP X30, X21, [X31 + 0x20]
	0x03982B34 STP X20, X19, [X31 + 0x30]
	0x03982B38 ADRP X21, 0xA5F000
	0x03982B3C ADRP X20, 0x771000
	0x03982B40 LDRB W8, [X21 + 0xA4D]
	0x03982B44 LDR X20, [X20 + 0x598]
	0x03982B48 MOV X19, X0
	0x03982B4C TBNZ X8, 0x0, 0x3982B64
	0x03982B50 ADRP X0, 0x771000
	0x03982B54 LDR X0, [X0 + 0x598]
	0x03982B58 BL 0x1C16CF4
	0x03982B5C MOVZ W8, 0x1
	0x03982B60 STRB W8, [X21 + 0xA4D]
	0x03982B64 LDR X0, [X20]
	0x03982B68 LDR X20, [X19 + 0x28]
	0x03982B6C LDR W8, [X0 + 0xE0]
	0x03982B70 CBNZ W8, 0x3982B78
	0x03982B74 BL 0x1C16DFC
	0x03982B78 MOV X0, X20
	0x03982B7C MOV X1, X31
	0x03982B80 MOV X2, X31
	0x03982B84 BL 0x3C354F8
	0x03982B88 TBZ X0, 0x0, 0x3982BC4
	0x03982B8C LDR X0, [X19 + 0x28]
	0x03982B90 CBZ X0, 0x3982C30
	0x03982B94 MOV X1, X31
	0x03982B98 BL 0x3C3F58C
	0x03982B9C LDR X0, [X19 + 0x28]
	0x03982BA0 CBZ X0, 0x3982C30
	0x03982BA4 MOV V8.16B, V0.16B
	0x03982BA8 MOV V9.16B, V1.16B
	0x03982BAC MOV V10.16B, V2.16B
	0x03982BB0 LDP S1, S2, [X19 + 0x34]
	0x03982BB4 LDR V0, [X19 + 0x30]
	0x03982BB8 MOV X1, X31
	0x03982BBC BL 0x3C40610
	0x03982BC0 B 0x3982C10
	0x03982BC4 MOV X0, X19
	0x03982BC8 MOV X1, X31
	0x03982BCC BL 0x3C32E90
	0x03982BD0 CBZ X0, 0x3982C30
	0x03982BD4 MOV X1, X31
	0x03982BD8 BL 0x3C3F58C
	0x03982BDC MOV X0, X19
	0x03982BE0 MOV X1, X31
	0x03982BE4 MOV V8.16B, V0.16B
	0x03982BE8 MOV V9.16B, V1.16B
	0x03982BEC MOV V10.16B, V2.16B
	0x03982BF0 BL 0x3C32E90
	0x03982BF4 CBZ X0, 0x3982C30
	0x03982BF8 MOV X1, X31
	0x03982BFC BL 0x3C3FA04
	0x03982C00 LDR V3, [X19 + 0x20]
	0x03982C04 FMUL S0, S0, S3
	0x03982C08 FMUL S1, S1, S3
	0x03982C0C FMUL S2, S2, S3
	0x03982C10 FADD S0, S8, S0
	0x03982C14 FADD S1, S9, S1
	0x03982C18 LDP X20, X19, [X31 + 0x30]
	0x03982C1C LDP X30, X21, [X31 + 0x20]
	0x03982C20 LDP D9, D8, [X31 + 0x10]
	0x03982C24 FADD S2, S10, S2
	0x03982C28 LDR V10, [X31], #0x40
	0x03982C2C RET
	0x03982C30 BL 0x1C16F20
	0x03982C34 LDR X0, [X0 + 0x28]
	0x03982C38 RET
	0x03982C3C STR X1, [X0 + 0x28]
	0x03982C40 RET
	0x03982C44 LDP S0, S1, [X0 + 0x30]
	0x03982C48 LDR V2, [X0 + 0x38]
	0x03982C4C RET
	0x03982C50 STP S0, S1, [X0 + 0x30]
	0x03982C54 STR S2, [X0 + 0x38]
	0x03982C58 RET
	0x03982C5C SUB X31, X31, 0xF0
	0x03982C60 STP D15, D14, [X31 + 0x80]
	0x03982C64 STP D13, D12, [X31 + 0x90]
	0x03982C68 STP D11, D10, [X31 + 0xA0]
	0x03982C6C STP D9, D8, [X31 + 0xB0]
	0x03982C70 STP X30, X23, [X31 + 0xC0]
	0x03982C74 STP X22, X21, [X31 + 0xD0]
	0x03982C78 STP X20, X19, [X31 + 0xE0]
	0x03982C7C MOV X20, X1

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X20, 0xA61000
	023 Move X19, 0x773000
	024 Move W8, [X20+2630]
	025 Move X19, [X19+1432]
	026 Move V11, V0
	027 Move X21, X1
	028 Move X22, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {131}
	033 Move X0, 0x7D0000
	034 Move X0, [X0+1032]
	035 Call 0x1C17CF4
	036 Move X0, 0x77D000
	037 Move X0, [X0+2136]
	038 Call 0x1C17CF4
	039 Move X0, 0x7CE000
	040 Move X0, [X0+3336]
	041 Call 0x1C17CF4
	042 Move X0, 0x7CF000
	043 Move X0, [X0+2176]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CF000
	046 Move X0, [X0+1040]
	047 Call 0x1C17CF4
	048 Move X0, 0x77C000
	049 Move X0, [X0+2192]
	050 Call 0x1C17CF4
	051 Move X0, 0x7CD000
	052 Move X0, [X0+3448]
	053 Call 0x1C17CF4
	054 Move X0, 0x7CF000
	055 Move X0, [X0+1048]
	056 Call 0x1C17CF4
	057 Move X0, 0x79C000
	058 Move X0, [X0+2224]
	059 Call 0x1C17CF4
	060 Move X0, 0x7CF000
	061 Move X0, [X0+1056]
	062 Call 0x1C17CF4
	063 Move X0, 0x77C000
	064 Move X0, [X0+2184]
	065 Call 0x1C17CF4
	066 Move X0, 0x779000
	067 Move X0, [X0+2096]
	068 Call 0x1C17CF4
	069 Move X0, 0x7CE000
	070 Move X0, [X0+2184]
	071 Call 0x1C17CF4
	072 Move X0, 0x779000
	073 Move X0, [X0+2104]
	074 Call 0x1C17CF4
	075 Move X0, 0x7CE000
	076 Move X0, [X0+2192]
	077 Call 0x1C17CF4
	078 Move X0, 0x779000
	079 Move X0, [X0+2112]
	080 Call 0x1C17CF4
	081 Move X0, 0x7CE000
	082 Move X0, [X0+2200]
	083 Call 0x1C17CF4
	084 Move X0, 0x7CF000
	085 Move X0, [X0+1064]
	086 Call 0x1C17CF4
	087 Move X0, 0x779000
	088 Move X0, [X0+2120]
	089 Call 0x1C17CF4
	090 Move X0, 0x779000
	091 Move X0, [X0+2128]
	092 Call 0x1C17CF4
	093 Move X0, 0x773000
	094 Move X0, [X0+3672]
	095 Call 0x1C17CF4
	096 Move X0, 0x7CF000
	097 Move X0, [X0+1072]
	098 Call 0x1C17CF4
	099 Move X0, 0x7CF000
	100 Move X0, [X0+1080]
	101 Call 0x1C17CF4
	102 Move X0, 0x7CF000
	103 Move X0, [X0+1088]
	104 Call 0x1C17CF4
	105 Move X0, 0x7CF000
	106 Move X0, [X0+1096]
	107 Call 0x1C17CF4
	108 Move X0, 0x7C9000
	109 Move X0, [X0+864]
	110 Call 0x1C17CF4
	111 Move X0, 0x7C9000
	112 Move X0, [X0+976]
	113 Call 0x1C17CF4
	114 Move X0, 0x773000
	115 Move X0, [X0+3624]
	116 Call 0x1C17CF4
	117 Move X0, 0x79C000
	118 Move X0, [X0+3896]
	119 Call 0x1C17CF4
	120 Move X0, 0x772000
	121 Move X0, [X0+1448]
	122 Call 0x1C17CF4
	123 Move X0, 0x772000
	124 Move X0, [X0+1432]
	125 Call 0x1C17CF4
	126 Move X0, 0x772000
	127 Move X0, [X0+1592]
	128 Call 0x1C17CF4
	129 Move W8, 1
	130 Move [X20+2630], W8
	131 Move X0, [X19]
	132 NotImplemented "Instruction MOVI not yet implemented."
	133 Move [X31+128], X31
	134 Move [X31+136], X31
	135 Move [X31+144], X31
	136 Move [X31+96], V0
	137 Move [X31+104], V0
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X22
	143 Move X1, X31
	144 Move X2, X31
	145 Call Object.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {716}
	150 Compare X21, 0
	151 JumpIfEqual {723}
	152 Compare X22, 0
	153 JumpIfEqual {715}
	154 Move X0, X22
	155 Move X1, X31
	156 Move X2, X31
	157 Call ProBuilderMesh.GetVertices, X0, X1
	158 Move X8, [X22+48]
	159 Move X20, X0
	160 Move X0, X22
	161 Move X1, X21
	162 Move X2, X31
	163 Move [X31+56], X8
	164 Call ProBuilderMesh.GetSharedVertexHandles, X0, X1
	165 Compare X0, 0
	166 JumpIfEqual {715}
	167 Move [X31+48], X22
	168 Move X8, 0x772000
	169 Move X8, [X8+1448]
	170 Move X28, X0
	171 Move X21, 0x7CF000
	172 Move X27, 0x7CF000
	173 Move X0, [X8]
	174 Move X25, 0x779000
	175 Move X21, [X21+1064]
	176 Move W29, [X28+32]
	177 Move W8, [X0+224]
	178 Move X27, [X27+1096]
	179 Move X25, [X25+2120]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X8, 0x779000
	184 Move X8, [X8+2104]
	185 Move X22, 0x772000
	186 Move X24, 0x7CF000
	187 Move X26, 0x77C000
	188 Move X19, 0x79C000
	189 Move X23, 0x7CF000
	190 Move X22, [X22+1592]
	191 Move X24, [X24+1072]
	192 Move X26, [X26+2136]
	193 Move X19, [X19+2224]
	194 Move X23, [X23+1048]
	195 Move W0, 32
	196 Move W1, W29
	197 Move X2, X31
	198 Move [X31+40], W29
	199 Move X29, X8
	200 Call Math.Min, X0, X1
	201 Move X8, [X21]
	202 Move [X31+44], W0
	203 Move X0, X8
	204 Call 0x1C17F10
	205 Move X1, X31
	206 Move X21, X0
	207 Call FloatMath..ctor, X0
	208 Move X0, [X27]
	209 Call 0x1C17F10
	210 Move X8, 0x7CF000
	211 Move X8, [X8+1088]
	212 Move W1, 3
	213 Move W3, 3
	214 Move X2, X21
	215 Move X4, [X8]
	216 Move X27, X0
	217 Call 0x2EA828C, X0, X1, X2, X3
	218 Move X1, [X25]
	219 Add X8, X31, 64
	220 Move X0, X28
	221 Call HashSet`1<Int32>.GetEnumerator, X0
	222 Move V0, [X31+4]
	223 Move X8, [X31+80]
	224 Move X25, [X31+56]
	225 Move [X31+24], X27
	226 Move [X31+8], V0
	227 Move [X31+144], X8
	228 Move X1, [X29]
	229 Add X0, X31, 128
	230 Call Enumerator<Int32>.MoveNext, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {278}
	235 Compare X25, 0
	236 JumpIfEqual {695}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W8, [X25+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X8, X25, X21
	241 Move X0, [X8+32]
	242 Compare X0, 0
	243 JumpIfEqual {696}
	244 Move W1, W31
	245 Move X2, X31
	246 Call SharedVertex.get_Item, X0, X1
	247 Compare X20, 0
	248 JumpIfEqual {692}
	249 Move W8, [X20+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X8, X20, W0
	252 Move X8, [X8+32]
	253 Compare X8, 0
	254 JumpIfEqual {693}
	255 Move S10, [X8+16]
	256 Move S8, [X8+20]
	257 Move V9, [X8+24]
	258 Move X0, [X22]
	259 Move W1, 3
	260 Call 0x1C17D6C
	261 Move X1, X0
	262 Compare X1, 0
	263 JumpIfEqual {690}
	264 Move W8, [X1+24]
	265 Compare W8, 0
	266 JumpIfEqual {697}
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move [X1+32], S10
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move [X1+36], S8
	271 Move [X1+40], S9
	272 Compare X27, 0
	273 JumpIfEqual {694}
	274 Move X3, [X24]
	275 Move X0, X27
	276 Move W2, W21
	277 Call 0x2EA82DC, X0, X1, X2
	278 Move X8, 0x779000
	279 Move X8, [X8+2096]
	280 Add X0, X31, 128
	281 Move X1, [X8]
	282 Call Enumerator<Int32>.Dispose, X0
	283 Move X24, 0x7CD000
	284 Move X24, [X24+3336]
	285 Move X0, [X22]
	286 Move W1, 3
	287 Call 0x1C17D6C
	288 Move X8, 0x77C000
	289 Move X8, [X8+2184]
	290 Move [X31+32], X0
	291 Move X8, [X8]
	292 Move X0, X8
	293 Call 0x1C17F10
	294 Move X8, 0x77C000
	295 Move X8, [X8+2192]
	296 Move X22, X0
	297 Move X1, [X8]
	298 Call Dictionary`2<Int32, Int32>..ctor, X0
	299 Move X8, 0x7CF000
	300 Move X8, [X8+1056]
	301 Move X0, [X8]
	302 Call 0x1C17F10
	303 Move X8, 0x7CF000
	304 Move X8, [X8+1040]
	305 Move X21, X0
	306 Move X1, [X8]
	307 Call Dictionary`2<Int32, Vector3>..ctor, X0
	308 Compare X25, 0
	309 JumpIfEqual {715}
	310 Move X8, 0x779000
	311 Move W27, [X25+24]
	312 Move X8, [X8+2120]
	313 Move X0, X28
	314 Move X1, [X8]
	315 Add X8, X31, 64
	316 Call HashSet`1<Int32>.GetEnumerator, X0
	317 Move V0, [X31+4]
	318 Move X8, [X31+80]
	319 Move S9, 1
	320 Move [X31+8], V0
	321 Move [X31+144], X8
	322 Move X1, [X29]
	323 Add X0, X31, 128
	324 Call Enumerator<Int32>.MoveNext, X0
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {536}
	329 Compare X22, 0
	330 JumpIfEqual {700}
	331 NotImplemented "Instruction LDRSW not yet implemented."
	332 Move X2, [X24]
	333 Move X0, X22
	334 Move W1, W28
	335 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {322}
	340 Move X9, [X31+56]
	341 Move W8, [X9+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Add X8, X9, X28
	344 Move X0, [X8+32]
	345 Move W24, [X31+44]
	346 Move X25, [X31+32]
	347 Compare X0, 0
	348 JumpIfEqual {747}
	349 Move W1, W31
	350 Move X2, X31
	351 Call SharedVertex.get_Item, X0, X1
	352 Compare X20, 0
	353 JumpIfEqual {746}
	354 Move W8, [X20+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add X8, X20, W0
	357 Move X8, [X8+32]
	358 Compare X8, 0
	359 JumpIfEqual {745}
	360 Compare X25, 0
	361 JumpIfEqual {743}
	362 Move W9, [X25+24]
	363 Compare W9, 0
	364 JumpIfEqual {744}
	365 Move S2, [X8+16]
	366 Move S1, [X8+20]
	367 Move V0, [X8+24]
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move [X25+32], S2
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move [X25+36], S1
	372 Move X0, [X31+24]
	373 Move [X25+40], S0
	374 Compare X0, 0
	375 JumpIfEqual {748}
	376 Move X8, 0x7CF000
	377 Move X8, [X8+1080]
	378 Move X3, [X8]
	379 Move X1, X25
	380 Move V0, V11
	381 Move W2, W24
	382 Call 0x2EA92EC, X0, X1, X2, X3
	383 Move W8, [X31+40]
	384 Move X29, X0
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Compare X29, 0
	387 JumpIfEqual {753}
	388 Move W8, [X29+24]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Move X8, 0x7CF000
	391 Move X8, [X8+1080]
	392 Move X3, [X8]
	393 Move X0, [X31+24]
	394 Move X1, [X31+32]
	395 Move W2, [X31+40]
	396 Move V0, V11
	397 Call 0x2EA92EC, X0, X1, X2, X3
	398 Move X29, X0
	399 Compare X0, 0
	400 JumpIfEqual {754}
	401 Move X8, 0x772000
	402 Move X8, [X8+1448]
	403 Move X0, [X8]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move W8, [X29+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 NotImplemented "Instruction CINC not yet implemented."
	411 Add W1, W8, W9
	412 Move W0, [X31+40]
	413 Move X2, X31
	414 Call Math.Min, X0, X1
	415 Move W24, W0
	416 Move X8, 0xA57000
	417 Move W8, [X8+1923]
	418 Compare W8, 0
	419 JumpIfNotEqual {426}
	420 Move X0, 0x772000
	421 Move X0, [X0+1440]
	422 Call 0x1C17CF4
	423 Move X8, 0xA57000
	424 Move W9, 1
	425 Move [X8+1923], W9
	426 Compare X29, 0
	427 JumpIfEqual {742}
	428 Move [X31+44], W24
	429 Move [X31+20], S11
	430 Move X8, 0x772000
	431 Move X8, [X8+1440]
	432 Move X8, [X8]
	433 Move X9, [X8+184]
	434 Move W8, [X29+24]
	435 Move S11, [X9+4]
	436 Move S12, [X9+8]
	437 Move V10, [X9]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Move W24, W31
	440 Move S13, W31
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Add X25, X29, W24
	443 Add X25, X25, 32
	444 Move X8, [X25]
	445 Compare X8, 0
	446 JumpIfEqual {705}
	447 Move W28, [X8+24]
	448 Move X8, 0x7CD000
	449 Move X8, [X8+3336]
	450 Move X2, [X8]
	451 Move X0, X22
	452 Move W1, W28
	453 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	454 Move TEMP, X0
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {513}
	458 Move W8, [X29+24]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X8, [X25]
	461 Compare X8, 0
	462 JumpIfEqual {709}
	463 Move X8, [X8+16]
	464 Compare X8, 0
	465 JumpIfEqual {708}
	466 Move W9, [X8+24]
	467 Compare W9, 0
	468 JumpIfEqual {711}
	469 NotImplemented "Instruction CMP not yet implemented."
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move S14, [X8+32]
	472 Move S15, [X8+36]
	473 Move V8, [X8+40]
	474 Move X3, [X26]
	475 Move X0, X22
	476 Move W1, W28
	477 Move W2, W27
	478 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	479 Move W8, [X29+24]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Move X8, [X25]
	482 Compare X8, 0
	483 JumpIfEqual {710}
	484 Move X9, [X8+32]
	485 Add S10, S10, S14
	486 Add S11, S11, S15
	487 Add S12, S12, S8
	488 Add S13, S13, S9
	489 Compare X9, 0
	490 JumpIfEqual {513}
	491 Move W28, W31
	492 Move X0, [X8+32]
	493 Compare X0, 0
	494 JumpIfEqual {686}
	495 Move W8, [X0+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move X8, 0x79C000
	498 Move X8, [X8+3896]
	499 Move X2, [X8]
	500 Move W1, W28
	501 Call List`1<Int32>.get_Item, X0, X1
	502 Move W1, W0
	503 Move X3, [X26]
	504 Move X0, X22
	505 Move W2, W27
	506 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	507 Move W8, [X29+24]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X8, [X25]
	510 Add W28, W28, 1
	511 Compare X8, 0
	512 JumpIfNotEqual {492}
	513 Move W8, [X29+24]
	514 Add W24, W24, 1
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Compare X21, 0
	517 JumpIfNotEqual {521}
	518 Move S13, W31
	519 Compare X21, 0
	520 JumpIfEqual {752}
	521 Move X8, 0x7CF000
	522 Move X8, [X8+1032]
	523 NotImplemented "Instruction FDIV not yet implemented."
	524 NotImplemented "Instruction FDIV not yet implemented."
	525 NotImplemented "Instruction FDIV not yet implemented."
	526 Move X2, [X8]
	527 Move X0, X21
	528 Move W1, W27
	529 Call Dictionary`2<Int32, Vector3>.Add, X0, X1, X2
	530 Move X29, 0x779000
	531 Move X24, 0x7CD000
	532 Move X29, [X29+2104]
	533 Move X24, [X24+3336]
	534 Move V11, [X31+20]
	535 Add W27, W27, 1
	536 Move X8, 0x779000
	537 Move X8, [X8+2096]
	538 Add X0, X31, 128
	539 Move X1, [X8]
	540 Call Enumerator<Int32>.Dispose, X0
	541 Compare X22, 0
	542 JumpIfEqual {715}
	543 Move X8, 0x7CD000
	544 Move X8, [X8+3448]
	545 Move X0, X22
	546 Move X1, [X8]
	547 Call Dictionary`2<Int32, Int32>.get_Count, X0
	548 Move X8, 0x773000
	549 Move X8, [X8+3672]
	550 Move W1, W0
	551 Move X8, [X8]
	552 Move X0, X8
	553 Call 0x1C17D6C
	554 Move X28, X0
	555 Move X0, [X31+48]
	556 Move X1, X31
	557 Call ProBuilderMesh.get_sharedVertexLookup, X0
	558 Move X8, 0x7CE000
	559 Move X8, [X8+2176]
	560 Move X24, X0
	561 Move X0, X22
	562 Move X1, [X8]
	563 Add X8, X31, 64
	564 Call Dictionary`2<Int32, Int32>.GetEnumerator, X0
	565 Move V0, [X31+64]
	566 Move V1, [X31+80]
	567 Move W27, W31
	568 Move [X31+96], V0
	569 Move [X31+104], V1
	570 Move X8, 0x7CE000
	571 Move X8, [X8+2192]
	572 Move X1, [X8]
	573 Add X0, X31, 96
	574 Call Enumerator<Int32, Int32>.MoveNext, X0
	575 Move TEMP, X0
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfNotEqual {643}
	579 Move X9, [X31+56]
	580 Move X26, [X31+112]
	581 Move W8, [X9+24]
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move X8, X26
	584 ShiftRight X8, 32
	585 And X8, X8, 0x7FFFFFFF
	586 Add X8, X9, X8
	587 Move X22, [X8+32]
	588 Compare X22, 0
	589 JumpIfEqual {701}
	590 Move X0, X22
	591 Move W1, W31
	592 Move X2, X31
	593 Call SharedVertex.get_Item, X0, X1
	594 Compare X28, 0
	595 JumpIfEqual {702}
	596 Move W8, [X28+24]
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Add X8, X28, W27
	599 Move W25, W31
	600 Move X26, X26
	601 ShiftRight X26, 32
	602 And X26, X26, 0x7FFFFFFF
	603 Add W29, W27, 1
	604 Move [X8+32], W0
	605 Move X0, X22
	606 Move X1, X31
	607 Call SharedVertex.get_Count, X0
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move X0, X22
	610 Move W1, W25
	611 Move X2, X31
	612 Call SharedVertex.get_Item, X0, X1
	613 Move W1, W0
	614 Compare X24, 0
	615 JumpIfEqual {682}
	616 Move X3, [X19]
	617 Move X0, X24
	618 Move W2, W26
	619 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	620 Move X0, X22
	621 Move W1, W25
	622 Move X2, X31
	623 Call SharedVertex.get_Item, X0, X1
	624 Compare X20, 0
	625 JumpIfEqual {683}
	626 Move W8, [X20+24]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Compare X21, 0
	629 JumpIfEqual {684}
	630 Add X8, X20, W0
	631 Move X27, [X8+32]
	632 Move X2, [X23]
	633 Move X0, X21
	634 Move W1, W26
	635 Call Dictionary`2<Int32, Vector3>.get_Item, X0, X1
	636 Compare X27, 0
	637 JumpIfEqual {681}
	638 Move X0, X27
	639 Move X1, X31
	640 Call Vertex.set_position, X0, X1
	641 Add W25, W25, 1
	642 Move W27, W29
	643 Move X8, 0x7CE000
	644 Move X8, [X8+2184]
	645 Add X0, X31, 96
	646 Move X1, [X8]
	647 Call Enumerator<Int32, Int32>.Dispose, X0
	648 Move X19, [X31+48]
	649 Move X1, X24
	650 Move X2, X31
	651 Move X0, X19
	652 Call ProBuilderMesh.SetSharedVertices, X0, X1
	653 Move X0, X19
	654 Move X1, X20
	655 Move W2, W31
	656 Move X3, X31
	657 Call ProBuilderMesh.SetVertices, X0, X1, X2
	658 Move X0, X28
	659 Move X20, [X31+304]
	660 Move X19, [X31+312]
	661 Move X22, [X31+288]
	662 Move X21, [X31+296]
	663 Move X24, [X31+272]
	664 Move X23, [X31+280]
	665 Move X26, [X31+256]
	666 Move X25, [X31+264]
	667 Move X28, [X31+240]
	668 Move X27, [X31+248]
	669 Move X29, [X31+224]
	670 Move X30, [X31+232]
	671 Move D9, [X31+208]
	672 Move D8, [X31+216]
	673 Move D11, [X31+192]
	674 Move D10, [X31+200]
	675 Move D13, [X31+176]
	676 Move D12, [X31+184]
	677 Move D15, [X31+160]
	678 Move D14, [X31+168]
	679 Add X31, X31, 320
	680 Return X0
	681 Call 0x1C17F20
	682 Call 0x1C17F20
	683 Call 0x1C17F20
	684 Call 0x1C17F20
	685 Call 0x1C17F28
	686 Call 0x1C17F20
	687 Call 0x1C17F28
	688 Call 0x1C17F20
	689 Call 0x1C17F28
	690 Call 0x1C17F20
	691 Call 0x1C17F28
	692 Call 0x1C17F20
	693 Call 0x1C17F20
	694 Call 0x1C17F20
	695 Call 0x1C17F20
	696 Call 0x1C17F20
	697 Call 0x1C17F28
	698 Call 0x1C17F28
	699 Call 0x1C17F28
	700 Call 0x1C17F20
	701 Call 0x1C17F20
	702 Call 0x1C17F20
	703 Call 0x1C17F28
	704 Call 0x1C17F28
	705 Call 0x1C17F20
	706 Call 0x1C17F28
	707 Call 0x1C17F28
	708 Call 0x1C17F20
	709 Call 0x1C17F20
	710 Call 0x1C17F20
	711 Call 0x1C17F28
	712 Call 0x1C17F28
	713 Call 0x1C17F28
	714 Call 0x1C17F28
	715 Call 0x1C17F20
	716 Move X0, 0x777000
	717 Move X0, [X0+1320]
	718 Call 0x1C17D08
	719 Call 0x1C17F10
	720 Move X19, X0
	721 Move X0, 0x7CC000
	722 Move X0, [X0+3728]
	723 Move X0, 0x777000
	724 Move X0, [X0+1320]
	725 Call 0x1C17D08
	726 Call 0x1C17F10
	727 Move X19, X0
	728 Move X0, 0x7AA000
	729 Move X0, [X0+3600]
	730 Call 0x1C17D08
	731 Move X1, X0
	732 Move X0, X19
	733 Move X2, X31
	734 Call ArgumentNullException..ctor, X0, X1
	735 Move X0, 0x7CF000
	736 Move X0, [X0+1104]
	737 Call 0x1C17D08
	738 Move X1, X0
	739 Move X0, X19
	740 Call 0x1C17DEC
	741 Call 0x1C17F28
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F28
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F28
	750 Call 0x1C17F28
	751 Call 0x1C17F28
	752 Call 0x1C17F20
	753 Call 0x1C17F20
	754 Call 0x1C17F20
	755 Move X25, [X31+56]
	756 Move X27, X0
	757 Move X24, 0x7CD000
	758 Move X24, [X24+3336]
	759 NotImplemented "Instruction CMP not yet implemented."
	760 Move X0, X27
	761 Call 0x3EB2AD0
	762 Move X21, [X0]
	763 Call 0x3EB2AE0
	764 Move X8, 0x779000
	765 Move X8, [X8+2096]
	766 Add X0, X31, 128
	767 Move X1, [X8]
	768 Call Enumerator<Int32>.Dispose, X0
	769 Compare X21, 0
	770 JumpIfEqual {285}
	771 Move X21, X31
	772 Move X27, X0
	773 Move X8, 0x779000
	774 Move X8, [X8+2096]
	775 Move X1, [X8]
	776 Add X0, X31, 128
	777 Call Enumerator<Int32>.Dispose, X0
	778 Compare X21, 0
	779 JumpIfEqual {832}
	780 Move X0, X21
	781 Call 0x1C17F18
	782 Move X27, X0
	783 NotImplemented "Instruction CMP not yet implemented."
	784 Move X0, X27
	785 Call 0x3EB2AD0
	786 Move X24, [X0]
	787 Call 0x3EB2AE0
	788 Move X8, 0x779000
	789 Move X8, [X8+2096]
	790 Add X0, X31, 128
	791 Move X1, [X8]
	792 Call Enumerator<Int32>.Dispose, X0
	793 Compare X24, 0
	794 JumpIfEqual {541}
	795 Move X0, X24
	796 Call 0x1C17F18
	797 Move X24, X31
	798 Move X27, X0
	799 Move X8, 0x779000
	800 Move X8, [X8+2096]
	801 Move X1, [X8]
	802 Add X0, X31, 128
	803 Call Enumerator<Int32>.Dispose, X0
	804 Compare X24, 0
	805 JumpIfEqual {832}
	806 Move X0, X24
	807 Call 0x1C17F18
	808 Move X27, X0
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Move X0, X27
	811 Call 0x3EB2AD0
	812 Move X21, [X0]
	813 Call 0x3EB2AE0
	814 Move X8, 0x7CE000
	815 Move X8, [X8+2184]
	816 Add X0, X31, 96
	817 Move X1, [X8]
	818 Call Enumerator<Int32, Int32>.Dispose, X0
	819 Compare X21, 0
	820 JumpIfEqual {648}
	821 Move X0, X21
	822 Call 0x1C17F18
	823 Move X21, X31
	824 Move X27, X0
	825 Move X8, 0x7CE000
	826 Move X8, [X8+2184]
	827 Move X1, [X8]
	828 Add X0, X31, 96
	829 Call Enumerator<Int32, Int32>.Dispose, X0
	830 Compare X21, 0
	831 JumpIfNotEqual {834}
	832 Move X0, X27
	833 Call 0x1D2D690
	834 Move X0, X21
	835 Call 0x1C17F18
	836 Call 0x1991590

Method: UnityEngine.ProBuilder.FaceRebuildData ExplodeVertex(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.WingedEdge, System.Int32>> edgeAndCommonIndex, System.Single distance, out System.Collections.Generic.Dictionary`2<System.Int32, System.Collections.Generic.List`1<System.Int32>> appendedVertices)

Disassembly:
	0x03982C80 MOV X19, X0
	0x03982C84 BL 0x3982B28
	0x03982C88 ADD X8, X31, 0x58
	0x03982C8C MOV X0, X19
	0x03982C90 MOV X1, X20
	0x03982C94 BL 0x3983134
	0x03982C98 LDR V0, [X31 + 0x60]
	0x03982C9C LDR V3, [X31 + 0x64]
	0x03982CA0 LDP S13, S14, [X31 + 0x58]
	0x03982CA4 MOV X0, X19
	0x03982CA8 STR S0, [X31 + 0x54]
	0x03982CAC LDR V0, [X31 + 0x68]
	0x03982CB0 MOV X1, X31
	0x03982CB4 STP S0, S3, [X31 + 0x44]
	0x03982CB8 LDR V0, [X31 + 0x6C]
	0x03982CBC LDR V3, [X31 + 0x70]
	0x03982CC0 STR S0, [X31 + 0x40]
	0x03982CC4 LDR V0, [X31 + 0x74]
	0x03982CC8 STP S0, S3, [X31 + 0x1C]
	0x03982CCC LDR V0, [X31 + 0x78]
	0x03982CD0 STR S0, [X31 + 0x18]
	0x03982CD4 BL 0x3C32E90
	0x03982CD8 CBZ X0, 0x3983130
	0x03982CDC MOV X1, X31
	0x03982CE0 BL 0x3C3F58C
	0x03982CE4 MOV X0, X19
	0x03982CE8 MOV V8.16B, V0.16B
	0x03982CEC MOV V9.16B, V1.16B
	0x03982CF0 MOV V10.16B, V2.16B
	0x03982CF4 BL 0x3982B28
	0x03982CF8 ADRP X21, 0xA56000
	0x03982CFC LDRB W8, [X21 + 0x784]
	0x03982D00 MOV V11.16B, V0.16B
	0x03982D04 MOV V15.16B, V1.16B
	0x03982D08 MOV V12.16B, V2.16B
	0x03982D0C CBNZ W8, 0x3982D24
	0x03982D10 ADRP X0, 0x771000
	0x03982D14 LDR X0, [X0 + 0x5A8]
	0x03982D18 BL 0x1C16CF4
	0x03982D1C MOVZ W8, 0x1
	0x03982D20 STRB W8, [X21 + 0x784]
	0x03982D24 ADRP X20, 0x771000
	0x03982D28 LDR X20, [X20 + 0x5A8]
	0x03982D2C FSUB S11, S8, S11
	0x03982D30 FSUB S15, S9, S15
	0x03982D34 FSUB S8, S10, S12
	0x03982D38 LDR X0, [X20]
	0x03982D3C LDR W8, [X0 + 0xE0]
	0x03982D40 CBNZ W8, 0x3982D48
	0x03982D44 BL 0x1C16DFC
	0x03982D48 FMUL S0, S11, S11
	0x03982D4C FMUL S1, S15, S15
	0x03982D50 FADD S0, S0, S1
	0x03982D54 FMUL S1, S8, S8
	0x03982D58 FADD S0, S1, S0
	0x03982D5C FSQRT S0, S0
	0x03982D60 FCMP S0, 0x0
	0x03982D64 B.NE 0x3982D8C
	0x03982D68 MOV X0, X19
	0x03982D6C MOV X1, X31
	0x03982D70 BL 0x3C32E90
	0x03982D74 CBZ X0, 0x3983130
	0x03982D78 MOV X1, X31
	0x03982D7C BL 0x3C3FA04
	0x03982D80 FNEG S11, S0
	0x03982D84 FNEG S15, S1
	0x03982D88 FNEG S8, S2
	0x03982D8C ADRP X22, 0xA56000
	0x03982D90 LDRB W8, [X22 + 0xE39]
	0x03982D94 CBNZ W8, 0x3982DAC
	0x03982D98 ADRP X0, 0x778000
	0x03982D9C LDR X0, [X0 + 0x4B8]
	0x03982DA0 BL 0x1C16CF4
	0x03982DA4 MOVZ W8, 0x1
	0x03982DA8 STRB W8, [X22 + 0xE39]
	0x03982DAC ADRP X23, 0x778000
	0x03982DB0 LDR X23, [X23 + 0x4B8]
	0x03982DB4 FMUL S0, S13, S13
	0x03982DB8 FMUL S1, S14, S14
	0x03982DBC FADD S0, S0, S1
	0x03982DC0 LDR X8, [X23]
	0x03982DC4 LDR V1, [X31 + 0x54]
	0x03982DC8 STR S11, [X31 + 0x50]
	0x03982DCC MOV V9.16B, V11.16B
	0x03982DD0 LDR X8, [X8 + 0xB8]
	0x03982DD4 FMUL S1, S1, S1
	0x03982DD8 FADD S0, S1, S0
	0x03982DDC MOV V10.16B, V15.16B
	0x03982DE0 LDR V2, [X8]
	0x03982DE4 MOV V11.16B, V8.16B
	0x03982DE8 FCMP S0, S2
	0x03982DEC B.MI 0x3982E2C
	0x03982DF0 LDP S5, S4, [X31 + 0x50]
	0x03982DF4 FMUL S2, S14, S15
	0x03982DF8 FMUL S1, S13, S5
	0x03982DFC FMUL S3, S4, S8
	0x03982E00 FADD S1, S1, S2
	0x03982E04 FADD S1, S3, S1
	0x03982E08 FMUL S2, S13, S1
	0x03982E0C FMUL S3, S14, S1
	0x03982E10 FMUL S1, S4, S1
	0x03982E14 FDIV S2, S2, S0
	0x03982E18 FDIV S3, S3, S0
	0x03982E1C FDIV S0, S1, S0
	0x03982E20 FSUB S9, S5, S2
	0x03982E24 FSUB S10, S15, S3
	0x03982E28 FSUB S11, S8, S0
	0x03982E2C LDRB W8, [X21 + 0x784]
	0x03982E30 STR S15, [X31 + 0x4C]
	0x03982E34 CBNZ W8, 0x3982E4C
	0x03982E38 ADRP X0, 0x771000
	0x03982E3C LDR X0, [X0 + 0x5A8]
	0x03982E40 BL 0x1C16CF4
	0x03982E44 MOVZ W8, 0x1
	0x03982E48 STRB W8, [X21 + 0x784]
	0x03982E4C LDR X0, [X20]
	0x03982E50 MOV V15.16B, V14.16B
	0x03982E54 STR S13, [X31 + 0x3C]
	0x03982E58 LDR W8, [X0 + 0xE0]
	0x03982E5C CBNZ W8, 0x3982E64
	0x03982E60 BL 0x1C16DFC
	0x03982E64 FMUL S0, S9, S9
	0x03982E68 FMUL S1, S10, S10
	0x03982E6C ADRP X8, 0xFFFFFFFFFD167000
	0x03982E70 FADD S1, S0, S1
	0x03982E74 LDR V0, [X8 + 0xF28]
	0x03982E78 FMUL S2, S11, S11
	0x03982E7C FADD S1, S1, S2
	0x03982E80 FSQRT S1, S1
	0x03982E84 FCMP S1, S0
	0x03982E88 B.PL 0x3982F3C
	0x03982E8C LDP S2, S1, [X31 + 0x44]
	0x03982E90 LDR V3, [X31 + 0x40]
	0x03982E94 LDRB W8, [X22 + 0xE39]
	0x03982E98 FMUL S1, S1, S0
	0x03982E9C FMUL S2, S2, S0
	0x03982EA0 FMUL S0, S3, S0
	0x03982EA4 LDR V3, [X31 + 0x3C]
	0x03982EA8 FADD S13, S15, S2
	0x03982EAC FADD S14, S3, S1
	0x03982EB0 LDR V1, [X31 + 0x54]
	0x03982EB4 FADD S12, S1, S0
	0x03982EB8 CBNZ W8, 0x3982ED0
	0x03982EBC ADRP X0, 0x778000
	0x03982EC0 LDR X0, [X0 + 0x4B8]
	0x03982EC4 BL 0x1C16CF4
	0x03982EC8 MOVZ W8, 0x1
	0x03982ECC STRB W8, [X22 + 0xE39]
	0x03982ED0 LDR X8, [X23]
	0x03982ED4 FMUL S0, S14, S14
	0x03982ED8 FMUL S1, S13, S13
	0x03982EDC LDP S10, S9, [X31 + 0x4C]
	0x03982EE0 LDR X8, [X8 + 0xB8]
	0x03982EE4 FADD S0, S0, S1
	0x03982EE8 FMUL S1, S12, S12
	0x03982EEC FADD S0, S1, S0
	0x03982EF0 LDR V2, [X8]
	0x03982EF4 MOV V11.16B, V8.16B
	0x03982EF8 FCMP S0, S2
	0x03982EFC B.MI 0x3982F3C
	0x03982F00 LDP S5, S4, [X31 + 0x4C]
	0x03982F04 FMUL S3, S12, S8
	0x03982F08 FMUL S1, S14, S4
	0x03982F0C FMUL S2, S13, S5
	0x03982F10 FADD S1, S1, S2
	0x03982F14 FADD S1, S3, S1
	0x03982F18 FMUL S2, S14, S1
	0x03982F1C FMUL S3, S13, S1
	0x03982F20 FMUL S1, S12, S1
	0x03982F24 FDIV S2, S2, S0
	0x03982F28 FDIV S3, S3, S0
	0x03982F2C FDIV S0, S1, S0
	0x03982F30 FSUB S9, S4, S2
	0x03982F34 FSUB S10, S5, S3
	0x03982F38 FSUB S11, S8, S0
	0x03982F3C ADRP X21, 0xA56000
	0x03982F40 LDRB W8, [X21 + 0x785]
	0x03982F44 CBNZ W8, 0x3982F5C
	0x03982F48 ADRP X0, 0x771000
	0x03982F4C LDR X0, [X0 + 0x5A8]
	0x03982F50 BL 0x1C16CF4
	0x03982F54 MOVZ W8, 0x1
	0x03982F58 STRB W8, [X21 + 0x785]
	0x03982F5C LDR X0, [X20]
	0x03982F60 MOV V13.16B, V15.16B
	0x03982F64 LDR W8, [X0 + 0xE0]
	0x03982F68 CBNZ W8, 0x3982F70
	0x03982F6C BL 0x1C16DFC
	0x03982F70 FMUL S0, S9, S9
	0x03982F74 FMUL S1, S10, S10
	0x03982F78 ADRP X8, 0xFFFFFFFFFD168000
	0x03982F7C FADD S0, S0, S1
	0x03982F80 LDR V1, [X8 + 0x17C]
	0x03982F84 FMUL S2, S11, S11
	0x03982F88 LDR V12, [X31 + 0x3C]
	0x03982F8C LDR V15, [X31 + 0x4C]
	0x03982F90 FADD S0, S2, S0
	0x03982F94 FSQRT S0, S0
	0x03982F98 FCMP S0, S1
	0x03982F9C B.LE 0x3982FB0
	0x03982FA0 FDIV S9, S9, S0
	0x03982FA4 FDIV S10, S10, S0
	0x03982FA8 FDIV S11, S11, S0
	0x03982FAC B 0x3982FE8
	0x03982FB0 ADRP X20, 0xA56000
	0x03982FB4 LDRB W8, [X20 + 0x783]
	0x03982FB8 CBNZ W8, 0x3982FD0
	0x03982FBC ADRP X0, 0x771000
	0x03982FC0 LDR X0, [X0 + 0x5A0]
	0x03982FC4 BL 0x1C16CF4
	0x03982FC8 MOVZ W8, 0x1
	0x03982FCC STRB W8, [X20 + 0x783]
	0x03982FD0 ADRP X8, 0x771000
	0x03982FD4 LDR X8, [X8 + 0x5A0]
	0x03982FD8 LDR X8, [X8]
	0x03982FDC LDR X8, [X8 + 0xB8]
	0x03982FE0 LDP S9, S10, [X8]
	0x03982FE4 LDR V11, [X8 + 0x8]
	0x03982FE8 LDR V14, [X31 + 0x54]
	0x03982FEC LDP S1, S0, [X31 + 0x1C]
	0x03982FF0 LDR V2, [X31 + 0x18]
	0x03982FF4 MOV V3.16B, V9.16B
	0x03982FF8 MOV V4.16B, V10.16B
	0x03982FFC MOV V5.16B, V11.16B
	0x03983000 MOV X0, X31
	0x03983004 STP S12, S13, [X31]
	0x03983008 STR S14, [X31 + 0x8]
	0x0398300C BL 0x1DD4D78
	0x03983010 MOV V1.16B, V12.16B
	0x03983014 MOV V2.16B, V13.16B
	0x03983018 MOV V3.16B, V14.16B
	0x0398301C MOV X0, X31
	0x03983020 STR V0, [X31 + 0x2]
	0x03983024 BL 0x3C2A758
	0x03983028 LDP S5, S4, [X31 + 0x44]
	0x0398302C LDR V6, [X31 + 0x40]
	0x03983030 MOV X0, X31
	0x03983034 BL 0x3C2A9FC
	0x03983038 LDR V3, [X31 + 0x50]
	0x0398303C STP S1, S2, [X31 + 0x4]
	0x03983040 STR S0, [X31]
	0x03983044 MOV V0.16B, V9.16B
	0x03983048 MOV V1.16B, V10.16B
	0x0398304C MOV V2.16B, V11.16B
	0x03983050 MOV V4.16B, V15.16B
	0x03983054 MOV V5.16B, V8.16B
	0x03983058 MOV X0, X31
	0x0398305C BL 0x1DD4D78
	0x03983060 LDR V2, [X31 + 0x2]
	0x03983064 MOVZ W8, 0x43340000
	0x03983068 MOVZ W9, 0x43B40000
	0x0398306C UNIMPLEMENTED
	0x03983070 MOV V2.S[1], V0.S[0]
	0x03983074 UNIMPLEMENTED
	0x03983078 FADD V0.2S, V2.2S, V0.2S
	0x00000000 INVALID
	0x03983080 UNIMPLEMENTED
	0x03983084 MOVZ W10, 0xC3340000
	0x00000000 INVALID
	0x0398308C FSUB V0.2S, V0.2S, V1.2S
	0x03983090 UNIMPLEMENTED
	0x03983094 FADD V0.2S, V0.2S, V1.2S
	0x03983098 MOV X0, X19
	0x0398309C MOV X1, X31
	0x039830A0 STUR D0, [X19 + 0x3C]
	0x039830A4 BL 0x3C32E90
	0x039830A8 CBZ X0, 0x3983130
	0x039830AC MOV X1, X31
	0x039830B0 BL 0x3C3DEB4
	0x039830B4 MOV X0, X31
	0x039830B8 BL 0x3C2A60C
	0x039830BC ADRP X8, 0xFFFFFFFFFD167000
	0x039830C0 LDR V3, [X8 + 0x448]
	0x039830C4 MOV X0, X31
	0x039830C8 FMUL S0, S0, S3
	0x039830CC FMUL S1, S1, S3
	0x039830D0 FMUL S2, S2, S3
	0x039830D4 BL 0x3C2AB94
	0x039830D8 MOVZ W8, 0x43340000
	0x039830DC MOVZ W9, 0x43B40000
	0x039830E0 FMOV S0, W8
	0x039830E4 FADD S0, S2, S0
	0x039830E8 FMOV S1, W9
	0x039830EC FDIV S2, S0, S1
	0x039830F0 FRINTM S2, S2
	0x039830F4 FMUL S1, S2, S1
	0x039830F8 MOVZ W8, 0xC3340000
	0x039830FC FSUB S0, S0, S1
	0x03983100 FMOV S1, W8
	0x03983104 FADD S0, S0, S1
	0x03983108 STR S0, [X19 + 0x44]
	0x0398310C LDP X20, X19, [X31 + 0xE0]
	0x03983110 LDP X22, X21, [X31 + 0xD0]
	0x03983114 LDP X30, X23, [X31 + 0xC0]
	0x03983118 LDP D9, D8, [X31 + 0xB0]
	0x0398311C LDP D11, D10, [X31 + 0xA0]
	0x03983120 LDP D13, D12, [X31 + 0x90]
	0x03983124 LDP D15, D14, [X31 + 0x80]
	0x03983128 ADD X31, X31, 0xF0
	0x0398312C RET
	0x03983130 BL 0x1C16F20
	0x03983134 STP D15, D14, [X31 - 0x80]!
	0x03983138 STP D13, D12, [X31 + 0x10]
	0x0398313C STP D11, D10, [X31 + 0x20]
	0x03983140 STP D9, D8, [X31 + 0x30]
	0x03983144 STP X29, X30, [X31 + 0x40]
	0x03983148 STP X24, X23, [X31 + 0x50]
	0x0398314C STP X22, X21, [X31 + 0x60]
	0x03983150 STP X20, X19, [X31 + 0x70]
	0x03983154 SUB X31, X31, 0x320
	0x03983158 MOV V10.16B, V0.16B
	0x0398315C MOV X21, X1
	0x03983160 MOVI V0.2D, 0x0
	0x03983164 MOV X1, X31
	0x03983168 MOV V8.16B, V2.16B
	0x0398316C MOV V9.16B, V1.16B
	0x03983170 MOV X22, X0
	0x03983174 MOV X19, X8
	0x03983178 STP V0, V0, [X31 + 0x300]
	0x0398317C STP V0, V0, [X31 + 0x2E0]
	0x03983180 STP V0, V0, [X31 + 0x2C0]
	0x03983184 STP V0, V0, [X31 + 0x2A0]
	0x03983188 BL 0x3C32E90
	0x0398318C CBZ X21, 0x3983964
	0x03983190 MOV X20, X0
	0x03983194 MOV X0, X21
	0x03983198 MOV X1, X31
	0x0398319C BL 0x3C32E90
	0x039831A0 CBZ X20, 0x3983964
	0x039831A4 MOV X1, X0
	0x039831A8 MOV X0, X20
	0x039831AC MOV X2, X31
	0x039831B0 BL 0x3C40F48
	0x039831B4 ADRP X20, 0x770000
	0x039831B8 LDR X20, [X20 + 0x5A0]
	0x039831BC TBZ X0, 0x0, 0x3983264
	0x039831C0 ADRP X21, 0xA55000
	0x039831C4 LDRB W8, [X21 + 0x786]
	0x039831C8 CBNZ W8, 0x39831E0
	0x039831CC ADRP X0, 0x770000
	0x039831D0 LDR X0, [X0 + 0x5A0]
	0x039831D4 BL 0x1C16CF4
	0x039831D8 MOVZ W8, 0x1
	0x039831DC STRB W8, [X21 + 0x786]
	0x039831E0 LDR X8, [X20]
	0x039831E4 ADRP X21, 0xA55000
	0x039831E8 LDRB W9, [X21 + 0xB70]
	0x039831EC LDR X8, [X8 + 0xB8]
	0x039831F0 LDR V9, [X8 + 0x18]
	0x039831F4 LDR V8, [X8 + 0x20]
	0x039831F8 CBNZ W9, 0x3983214
	0x039831FC MOV X0, X20
	0x03983200 BL 0x1C16CF4
	0x03983204 LDR X8, [X20]
	0x03983208 MOVZ W9, 0x1
	0x0398320C STRB W9, [X21 + 0xB70]
	0x03983210 LDR X8, [X8 + 0xB8]
	0x03983214 ADRP X21, 0xA55000
	0x03983218 LDUR V10, [X8 + 0x3C]
	0x0398321C LDRB W9, [X21 + 0xA1F]
	0x03983220 LDR V11, [X8 + 0x44]
	0x03983224 CBNZ W9, 0x3983240
	0x03983228 MOV X0, X20
	0x0398322C BL 0x1C16CF4
	0x03983230 LDR X8, [X20]
	0x03983234 MOVZ W9, 0x1
	0x03983238 STRB W9, [X21 + 0xA1F]
	0x0398323C LDR X8, [X8 + 0xB8]
	0x03983240 LDR V0, [X8 + 0x48]
	0x03983244 LDR V1, [X8 + 0x50]
	0x03983248 STR D9, [X19]
	0x0398324C STR S8, [X19 + 0x8]
	0x03983250 STUR D10, [X19 + 0xC]
	0x03983254 STR S11, [X19 + 0x14]
	0x03983258 STR D0, [X19 + 0x18]
	0x0398325C STR S1, [X19 + 0x20]
	0x03983260 B 0x398393C
	0x03983264 ADD X8, X31, 0x260
	0x03983268 MOV X0, X21
	0x0398326C MOV X1, X31
	0x03983270 BL 0x3C04170
	0x03983274 LDP V0, V1, [X31 + 0x260]
	0x03983278 LDP V2, V3, [X31 + 0x280]
	0x0398327C ADRP X23, 0xFFFFFFFFFD167000
	0x03983280 STP V0, V1, [X31 + 0x2E0]
	0x03983284 STP V2, V3, [X31 + 0x300]
	0x03983288 LDR W8, [X22 + 0x24]
	0x0398328C ADRP X22, 0x770000
	0x03983290 LDR X22, [X22 + 0x5A8]
	0x03983294 CMP W8, 0x1
	0x03983298 B.NE 0x3983378
	0x0398329C MOV X0, X31
	0x039832A0 BL 0x3C047F8
	0x039832A4 CBZ X0, 0x3983964
	0x039832A8 MOV X1, X31
	0x039832AC BL 0x3C32E90
	0x039832B0 CBZ X0, 0x3983964
	0x039832B4 MOV X1, X31
	0x039832B8 BL 0x3C3F988
	0x039832BC MOV V11.16B, V0.16B
	0x039832C0 MOV V12.16B, V1.16B
	0x039832C4 MOV V13.16B, V2.16B
	0x039832C8 ADD X8, X31, 0x220
	0x039832CC FMOV S0, 1
	0x039832D0 FMOV S1, 1
	0x039832D4 FMOV S2, -1
	0x039832D8 MOV X0, X31
	0x039832DC BL 0x3C28318
	0x039832E0 LDP V0, V1, [X31 + 0x220]
	0x039832E4 LDP V2, V3, [X31 + 0x240]
	0x039832E8 MOV X0, X21
	0x039832EC MOV X1, X31
	0x039832F0 STP V0, V1, [X31 + 0x260]
	0x039832F4 STP V2, V3, [X31 + 0x280]
	0x039832F8 BL 0x3C32E90
	0x039832FC CBZ X0, 0x3983964
	0x03983300 MOV X1, X31
	0x03983304 BL 0x3C3F58C
	0x03983308 ADD X8, X31, 0x220
	0x0398330C MOV V3.16B, V10.16B
	0x03983310 MOV V4.16B, V9.16B
	0x03983314 MOV V5.16B, V8.16B
	0x03983318 MOV X0, X31
	0x0398331C STP S12, S13, [X31 + 0x4]
	0x03983320 STR S11, [X31]
	0x03983324 BL 0x3C275AC
	0x03983328 LDP V0, V1, [X31 + 0x220]
	0x0398332C LDP V2, V3, [X31 + 0x240]
	0x03983330 ADD X8, X31, 0x220
	0x03983334 ADD X0, X31, 0x2A0
	0x03983338 MOV X1, X31
	0x0398333C STP V0, V1, [X31 + 0x2A0]
	0x03983340 STP V2, V3, [X31 + 0x2C0]
	0x03983344 BL 0x3C271CC
	0x03983348 LDP V0, V1, [X31 + 0x220]
	0x0398334C LDP V2, V3, [X31 + 0x240]
	0x03983350 ADD X8, X31, 0x220
	0x03983354 ADD X0, X31, 0x1E0
	0x03983358 STP V0, V1, [X31 + 0x1A0]
	0x0398335C LDP V0, V1, [X31 + 0x260]
	0x03983360 STP V2, V3, [X31 + 0x1C0]
	0x03983364 LDP V2, V3, [X31 + 0x280]
	0x03983368 ADD X1, X31, 0x1A0
	0x0398336C STP V0, V1, [X31 + 0x1E0]
	0x03983370 STP V2, V3, [X31 + 0x200]
	0x03983374 B 0x39835A4
	0x03983378 MOV X0, X21
	0x0398337C MOV X1, X31
	0x03983380 BL 0x3C03928
	0x03983384 TBNZ X0, 0x0, 0x39835DC
	0x03983388 MOV X0, X21
	0x0398338C MOV X1, X31
	0x03983390 BL 0x3C32E90
	0x03983394 CBZ X0, 0x3983964
	0x03983398 MOV X1, X31
	0x0398339C BL 0x3C3F58C
	0x039833A0 ADRP X8, 0xFFFFFFFFFD166000
	0x039833A4 FSUB S0, S0, S10
	0x039833A8 FSUB S1, S1, S9
	0x039833AC LDR V3, [X8 + 0xF20]
	0x039833B0 FSUB S2, S2, S8
	0x039833B4 FMUL S0, S0, S0
	0x039833B8 FMUL S1, S1, S1
	0x039833BC FADD S0, S0, S1
	0x039833C0 FMUL S1, S2, S2
	0x039833C4 FADD S0, S1, S0
	0x039833C8 FCMP S0, S3
	0x039833CC B.MI 0x39835DC
	0x039833D0 MOV X0, X21
	0x039833D4 MOV X1, X31
	0x039833D8 BL 0x3C32E90
	0x039833DC CBZ X0, 0x3983964
	0x039833E0 MOV X1, X31
	0x039833E4 BL 0x3C3F58C
	0x039833E8 ADRP X24, 0xA55000
	0x039833EC LDRB W8, [X24 + 0x785]
	0x039833F0 MOV V11.16B, V0.16B
	0x039833F4 MOV V12.16B, V1.16B
	0x039833F8 MOV V13.16B, V2.16B
	0x039833FC CBNZ W8, 0x3983414
	0x03983400 ADRP X0, 0x770000
	0x03983404 LDR X0, [X0 + 0x5A8]
	0x03983408 BL 0x1C16CF4
	0x0398340C MOVZ W8, 0x1
	0x03983410 STRB W8, [X24 + 0x785]
	0x03983414 LDR X0, [X22]
	0x03983418 FSUB S10, S10, S11
	0x0398341C FSUB S9, S9, S12
	0x03983420 FSUB S8, S8, S13
	0x03983424 LDR W8, [X0 + 0xE0]
	0x03983428 CBNZ W8, 0x3983430
	0x0398342C BL 0x1C16DFC
	0x03983430 FMUL S0, S10, S10
	0x03983434 FMUL S1, S9, S9
	0x03983438 LDR V3, [X23 + 0x17C]
	0x0398343C FADD S0, S0, S1
	0x03983440 FMUL S1, S8, S8
	0x03983444 FADD S0, S1, S0
	0x03983448 FSQRT S2, S0
	0x0398344C FCMP S2, S3
	0x03983450 B.LE 0x3983464
	0x03983454 FDIV S0, S10, S2
	0x03983458 FDIV S1, S9, S2
	0x0398345C FDIV S2, S8, S2
	0x03983460 B 0x3983494
	0x03983464 ADRP X24, 0xA55000
	0x03983468 LDRB W8, [X24 + 0x783]
	0x0398346C CBNZ W8, 0x3983484
	0x03983470 ADRP X0, 0x770000
	0x03983474 LDR X0, [X0 + 0x5A0]
	0x03983478 BL 0x1C16CF4
	0x0398347C MOVZ W8, 0x1
	0x03983480 STRB W8, [X24 + 0x783]
	0x03983484 LDR X8, [X20]
	0x03983488 LDR X8, [X8 + 0xB8]
	0x0398348C LDP S0, S1, [X8]
	0x03983490 LDR V2, [X8 + 0x8]
	0x03983494 MOV X0, X31
	0x03983498 BL 0x3C2A8C4
	0x0398349C MOV V8.16B, V0.16B
	0x039834A0 MOV V9.16B, V1.16B
	0x039834A4 MOV V10.16B, V2.16B
	0x039834A8 ADD X8, X31, 0x220
	0x039834AC FMOV S0, 1
	0x039834B0 FMOV S1, 1
	0x039834B4 FMOV S2, -1
	0x039834B8 MOV X0, X31
	0x039834BC MOV V11.16B, V3.16B
	0x039834C0 BL 0x3C28318
	0x039834C4 LDP V0, V1, [X31 + 0x220]
	0x039834C8 LDP V2, V3, [X31 + 0x240]
	0x039834CC MOV X0, X21
	0x039834D0 MOV X1, X31
	0x039834D4 STP V0, V1, [X31 + 0x260]
	0x039834D8 STP V2, V3, [X31 + 0x280]
	0x039834DC BL 0x3C32E90
	0x039834E0 CBZ X0, 0x3983964
	0x039834E4 MOV X1, X31
	0x039834E8 BL 0x3C3F58C
	0x039834EC ADRP X21, 0xA55000
	0x039834F0 LDRB W8, [X21 + 0x85B]
	0x039834F4 MOV V12.16B, V0.16B
	0x039834F8 MOV V13.16B, V1.16B
	0x039834FC MOV V14.16B, V2.16B
	0x03983500 CBNZ W8, 0x3983518
	0x03983504 ADRP X0, 0x770000
	0x03983508 LDR X0, [X0 + 0x5A0]
	0x0398350C BL 0x1C16CF4
	0x03983510 MOVZ W8, 0x1
	0x03983514 STRB W8, [X21 + 0x85B]
	0x03983518 LDR X8, [X20]
	0x0398351C MOV V1.16B, V13.16B
	0x03983520 MOV V2.16B, V14.16B
	0x03983524 MOV V3.16B, V8.16B
	0x03983528 LDR X8, [X8 + 0xB8]
	0x0398352C MOV V4.16B, V9.16B
	0x03983530 MOV V5.16B, V10.16B
	0x03983534 MOV V6.16B, V11.16B
	0x03983538 LDR V0, [X8 + 0x14]
	0x0398353C LDUR X9, [X8 + 0xC]
	0x03983540 ADD X8, X31, 0x220
	0x03983544 MOV X0, X31
	0x03983548 STR S0, [X31 + 0x8]
	0x0398354C MOV V0.16B, V12.16B
	0x03983550 STR X9, [X31]
	0x03983554 BL 0x3C26FA8
	0x03983558 LDP V0, V1, [X31 + 0x220]
	0x0398355C LDP V2, V3, [X31 + 0x240]
	0x03983560 ADD X8, X31, 0x220
	0x03983564 ADD X0, X31, 0x2A0
	0x03983568 MOV X1, X31
	0x0398356C STP V0, V1, [X31 + 0x2A0]
	0x03983570 STP V2, V3, [X31 + 0x2C0]
	0x03983574 BL 0x3C271CC
	0x03983578 LDP V0, V1, [X31 + 0x220]
	0x0398357C LDP V2, V3, [X31 + 0x240]
	0x03983580 ADD X8, X31, 0x220
	0x03983584 ADD X0, X31, 0x160
	0x03983588 STP V0, V1, [X31 + 0x120]
	0x0398358C LDP V0, V1, [X31 + 0x260]
	0x03983590 STP V2, V3, [X31 + 0x140]
	0x03983594 LDP V2, V3, [X31 + 0x280]
	0x03983598 ADD X1, X31, 0x120
	0x0398359C STP V0, V1, [X31 + 0x160]
	0x039835A0 STP V2, V3, [X31 + 0x180]
	0x039835A4 MOV X2, X31
	0x039835A8 BL 0x3C27F74
	0x039835AC LDP V0, V1, [X31 + 0x220]
	0x039835B0 LDP V2, V3, [X31 + 0x240]
	0x039835B4 ADD X8, X31, 0x220
	0x039835B8 ADD X0, X31, 0x2E0
	0x039835BC MOV X1, X31
	0x039835C0 STP V0, V1, [X31 + 0x2E0]
	0x039835C4 STP V2, V3, [X31 + 0x300]
	0x039835C8 BL 0x3C271CC
	0x039835CC LDP V0, V1, [X31 + 0x220]
	0x039835D0 LDP V2, V3, [X31 + 0x240]
	0x039835D4 STP V0, V1, [X31 + 0x2E0]
	0x039835D8 STP V2, V3, [X31 + 0x300]
	0x039835DC ADRP X21, 0xA55000
	0x039835E0 LDP V0, V1, [X31 + 0x2E0]
	0x039835E4 LDP V2, V3, [X31 + 0x300]
	0x039835E8 LDRB W8, [X21 + 0x786]
	0x039835EC STP V0, V1, [X31 + 0x260]
	0x039835F0 STP V2, V3, [X31 + 0x280]
	0x039835F4 CBNZ W8, 0x398360C
	0x039835F8 ADRP X0, 0x770000
	0x039835FC LDR X0, [X0 + 0x5A0]
	0x03983600 BL 0x1C16CF4
	0x03983604 MOVZ W8, 0x1
	0x03983608 STRB W8, [X21 + 0x786]
	0x0398360C LDR X8, [X20]
	0x03983610 LDP V3, V4, [X31 + 0x260]
	0x03983614 LDP V5, V6, [X31 + 0x280]
	0x03983618 ADD X0, X31, 0xE0
	0x0398361C LDR X8, [X8 + 0xB8]
	0x03983620 MOV X1, X31
	0x03983624 LDP S0, S1, [X8 + 0x18]
	0x03983628 LDR V2, [X8 + 0x20]
	0x0398362C STP V3, V4, [X31 + 0xE0]
	0x03983630 FMOV S3, W31
	0x03983634 STP V5, V6, [X31 + 0x100]
	0x03983638 BL 0x3C2806C
	0x0398363C ADRP X21, 0xA55000
	0x03983640 LDRB W8, [X21 + 0xE59]
	0x03983644 MOV V8.16B, V0.16B
	0x03983648 MOV V9.16B, V1.16B
	0x0398364C MOV V10.16B, V2.16B
	0x03983650 MOV V11.16B, V3.16B
	0x03983654 CBNZ W8, 0x398366C
	0x03983658 ADRP X0, 0x770000
	0x0398365C LDR X0, [X0 + 0x5A8]
	0x03983660 BL 0x1C16CF4
	0x03983664 MOVZ W8, 0x1
	0x03983668 STRB W8, [X21 + 0xE59]
	0x0398366C LDR X0, [X22]
	0x03983670 LDR W8, [X0 + 0xE0]
	0x03983674 CBNZ W8, 0x398367C
	0x03983678 BL 0x1C16DFC
	0x0398367C FMUL S2, S8, S8
	0x03983680 FMUL S3, S9, S9
	0x03983684 FMUL S1, S10, S10
	0x03983688 FADD S2, S2, S3
	0x0398368C LDR V15, [X23 + 0x17C]
	0x03983690 FMUL S0, S11, S11
	0x03983694 FADD S1, S1, S2
	0x03983698 FADD S0, S0, S1
	0x0398369C FSQRT S0, S0
	0x039836A0 FCMP S0, S15
	0x039836A4 B.LE 0x39836BC
	0x039836A8 FDIV S2, S8, S0
	0x039836AC FDIV S1, S9, S0
	0x039836B0 STP S1, S2, [X31 + 0x18]
	0x039836B4 FDIV S0, S10, S0
	0x039836B8 B 0x39836FC
	0x039836BC ADRP X23, 0xA55000
	0x039836C0 LDRB W8, [X23 + 0xE5A]
	0x039836C4 CBNZ W8, 0x39836DC
	0x039836C8 ADRP X0, 0x777000
	0x039836CC LDR X0, [X0 + 0x9A0]
	0x039836D0 BL 0x1C16CF4
	0x039836D4 MOVZ W8, 0x1
	0x039836D8 STRB W8, [X23 + 0xE5A]
	0x039836DC ADRP X8, 0x777000
	0x039836E0 LDR X8, [X8 + 0x9A0]
	0x039836E4 LDR X8, [X8]
	0x039836E8 LDR X8, [X8 + 0xB8]
	0x039836EC LDR V1, [X8]
	0x039836F0 LDR V0, [X8 + 0x4]
	0x039836F4 STP S0, S1, [X31 + 0x18]
	0x039836F8 LDR V0, [X8 + 0x8]
	0x039836FC ADRP X23, 0xA55000
	0x03983700 STR S0, [X31 + 0x14]
	0x03983704 LDP V0, V1, [X31 + 0x2E0]
	0x03983708 LDP V2, V3, [X31 + 0x300]
	0x0398370C LDRB W8, [X23 + 0xB70]
	0x03983710 STP V0, V1, [X31 + 0x220]
	0x03983714 STP V2, V3, [X31 + 0x240]
	0x03983718 CBNZ W8, 0x3983730
	0x0398371C ADRP X0, 0x770000
	0x03983720 LDR X0, [X0 + 0x5A0]
	0x03983724 BL 0x1C16CF4
	0x03983728 MOVZ W8, 0x1
	0x0398372C STRB W8, [X23 + 0xB70]
	0x03983730 LDR X8, [X20]
	0x03983734 LDP V3, V4, [X31 + 0x220]
	0x03983738 LDP V5, V6, [X31 + 0x240]
	0x0398373C ADD X0, X31, 0xA0
	0x03983740 LDR X8, [X8 + 0xB8]
	0x03983744 MOV X1, X31
	0x03983748 LDP S0, S1, [X8 + 0x3C]
	0x0398374C LDR V2, [X8 + 0x44]
	0x03983750 STP V3, V4, [X31 + 0xA0]
	0x03983754 FMOV S3, W31
	0x03983758 STP V5, V6, [X31 + 0xC0]
	0x0398375C BL 0x3C2806C
	0x03983760 LDRB W8, [X21 + 0xE59]
	0x03983764 MOV V8.16B, V0.16B
	0x03983768 MOV V9.16B, V1.16B
	0x0398376C MOV V10.16B, V2.16B
	0x03983770 MOV V11.16B, V3.16B
	0x03983774 CBNZ W8, 0x398378C
	0x03983778 ADRP X0, 0x770000
	0x0398377C LDR X0, [X0 + 0x5A8]
	0x03983780 BL 0x1C16CF4
	0x03983784 MOVZ W8, 0x1
	0x03983788 STRB W8, [X21 + 0xE59]
	0x0398378C LDR X0, [X22]
	0x03983790 LDR W8, [X0 + 0xE0]
	0x03983794 CBNZ W8, 0x398379C
	0x03983798 BL 0x1C16DFC
	0x0398379C FMUL S2, S8, S8
	0x039837A0 FMUL S3, S9, S9
	0x039837A4 FMUL S1, S10, S10
	0x039837A8 FADD S2, S2, S3
	0x039837AC FMUL S0, S11, S11
	0x039837B0 FADD S1, S1, S2
	0x039837B4 FADD S0, S0, S1
	0x039837B8 FSQRT S0, S0
	0x039837BC FCMP S0, S15
	0x039837C0 B.LE 0x39837D4
	0x039837C4 FDIV S12, S8, S0
	0x039837C8 FDIV S13, S9, S0
	0x039837CC FDIV S14, S10, S0
	0x039837D0 B 0x398380C
	0x039837D4 ADRP X23, 0xA55000
	0x039837D8 LDRB W8, [X23 + 0xE5A]
	0x039837DC CBNZ W8, 0x39837F4
	0x039837E0 ADRP X0, 0x777000
	0x039837E4 LDR X0, [X0 + 0x9A0]
	0x039837E8 BL 0x1C16CF4
	0x039837EC MOVZ W8, 0x1
	0x039837F0 STRB W8, [X23 + 0xE5A]
	0x039837F4 ADRP X8, 0x777000
	0x039837F8 LDR X8, [X8 + 0x9A0]
	0x039837FC LDR X8, [X8]
	0x03983800 LDR X8, [X8 + 0xB8]
	0x03983804 LDP S12, S13, [X8]
	0x03983808 LDR V14, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X29
	007 Move [X31+72], X30
	008 Move [X31+80], X28
	009 Move [X31+88], X27
	010 Move [X31+96], X26
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move [X31+16], X2
	019 Move X21, 0xA60000
	020 Move X19, 0x7CF000
	021 Move W8, [X21+2631]
	022 Move X19, [X19+1112]
	023 Move V8, V0
	024 Move X24, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {113}
	030 Move X0, 0x7CF000
	031 Move X0, [X0+1120]
	032 Call 0x1C17CF4
	033 Move X0, 0x77C000
	034 Move X0, [X0+2136]
	035 Call 0x1C17CF4
	036 Move X0, 0x7CD000
	037 Move X0, [X0+3336]
	038 Call 0x1C17CF4
	039 Move X0, 0x77C000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0x79C000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CC000
	046 Move X0, [X0+3200]
	047 Call 0x1C17CF4
	048 Move X0, 0x79C000
	049 Move X0, [X0+2208]
	050 Call 0x1C17CF4
	051 Move X0, 0x77C000
	052 Move X0, [X0+2184]
	053 Call 0x1C17CF4
	054 Move X0, 0x7CF000
	055 Move X0, [X0+1112]
	056 Call 0x1C17CF4
	057 Move X0, 0x7CE000
	058 Move X0, [X0+496]
	059 Call 0x1C17CF4
	060 Move X0, 0x7CD000
	061 Move X0, [X0+1376]
	062 Call 0x1C17CF4
	063 Move X0, 0x772000
	064 Move X0, [X0+3584]
	065 Call 0x1C17CF4
	066 Move X0, 0x7CF000
	067 Move X0, [X0+1128]
	068 Call 0x1C17CF4
	069 Move X0, 0x7CF000
	070 Move X0, [X0+1136]
	071 Call 0x1C17CF4
	072 Move X0, 0x772000
	073 Move X0, [X0+3608]
	074 Call 0x1C17CF4
	075 Move X0, 0x7CC000
	076 Move X0, [X0+3936]
	077 Call 0x1C17CF4
	078 Move X0, 0x7CE000
	079 Move X0, [X0+448]
	080 Call 0x1C17CF4
	081 Move X0, 0x7CF000
	082 Move X0, [X0+696]
	083 Call 0x1C17CF4
	084 Move X0, 0x773000
	085 Move X0, [X0+3608]
	086 Call 0x1C17CF4
	087 Move X0, 0x7CE000
	088 Move X0, [X0+456]
	089 Call 0x1C17CF4
	090 Move X0, 0x7CC000
	091 Move X0, [X0+3608]
	092 Call 0x1C17CF4
	093 Move X0, 0x7CD000
	094 Move X0, [X0+4064]
	095 Call 0x1C17CF4
	096 Move X0, 0x7CD000
	097 Move X0, [X0+4072]
	098 Call 0x1C17CF4
	099 Move X0, 0x7CC000
	100 Move X0, [X0+3560]
	101 Call 0x1C17CF4
	102 Move X0, 0x7CF000
	103 Move X0, [X0+1144]
	104 Call 0x1C17CF4
	105 Move X0, 0x7CF000
	106 Move X0, [X0+1152]
	107 Call 0x1C17CF4
	108 Move X0, 0x7CD000
	109 Move X0, [X0+2824]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X21+2631], W8
	113 Move X1, [X19]
	114 Move X0, X24
	115 Move [X31+24], X31
	116 Call 0x21C5928, X0
	117 Compare X0, 0
	118 JumpIfEqual {720}
	119 Move X8, 0x7CD000
	120 Move X8, [X8+2824]
	121 Move X21, 0x79C000
	122 Move X19, 0x79C000
	123 Move X25, [X0+32]
	124 Move X8, [X8]
	125 Move W9, [X8+224]
	126 Move X21, [X21+2208]
	127 Move X19, [X19+2200]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move X0, X25
	133 Move X1, X31
	134 Call WingedEdge.SortEdgesByAdjacency, X0
	135 Move X8, [X21]
	136 Move X22, X0
	137 Move X0, X8
	138 Call 0x1C17F10
	139 Move X1, [X19]
	140 Move X23, X0
	141 Call Dictionary`2<Int32, Object>..ctor, X0
	142 Move X8, [X31+16]
	143 Move [X8], X23
	144 Compare X25, 0
	145 JumpIfEqual {720}
	146 Move X1, [X25+16]
	147 Move X19, 0x77C000
	148 Move X21, 0x77C000
	149 Move X19, [X19+2184]
	150 Move X21, [X21+2192]
	151 Move X0, X20
	152 Move X2, X31
	153 Call Math.Normal, X0, X1
	154 Move X0, [X19]
	155 Move V9, V0
	156 Move V10, V1
	157 Move V11, V2
	158 Call 0x1C17F10
	159 Move X1, [X21]
	160 Move X23, X0
	161 Call Dictionary`2<Int32, Int32>..ctor, X0
	162 Compare X24, 0
	163 JumpIfEqual {720}
	164 Move X10, 0x7CF000
	165 Move X8, [X24]
	166 Move X10, [X10+1128]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X24
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move [X31+8], X25
	184 Move X8, [X0]
	185 Move X1, [X0+8]
	186 Move X19, 0x772000
	187 Move X19, [X19+3584]
	188 Move X0, X24
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X24, X0
	191 Compare X0, 0
	192 JumpIfEqual {724}
	193 Move X21, 0x772000
	194 Move X25, 0x7CF000
	195 Move X26, 0x77C000
	196 Move X21, [X21+3608]
	197 Move X25, [X25+1136]
	198 Move X26, [X26+2136]
	199 Move X8, [X24]
	200 Move X1, [X21]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X24
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X24
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {264}
	224 Move X8, [X24]
	225 Move X1, [X25]
	226 NotImplemented "Instruction LDRH not yet implemented."
	227 Compare X9, 0
	228 JumpIfEqual {235}
	229 Move X10, [X8+176]
	230 Add X10, X10, 8
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Subtract X9, X9, 1
	234 Add X10, X10, 16
	235 Move X0, X24
	236 Move W2, W31
	237 Call 0x1C5D788
	238 NotImplemented "Instruction LDRSW not yet implemented."
	239 Add X8, X8, X9
	240 Add X0, X8, 312
	241 Move X8, [X0]
	242 Move X1, [X0+8]
	243 Move X0, X24
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Compare X0, 0
	246 JumpIfEqual {721}
	247 Move W8, [X0+24]
	248 Move X2, X1
	249 Move X1, [X0+16]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Compare X23, 0
	252 JumpIfEqual {723}
	253 Move X3, [X26]
	254 Move X0, X23
	255 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	256 Compare X23, 0
	257 JumpIfEqual {722}
	258 Move X3, [X26]
	259 Move X1, X1
	260 ShiftRight X1, 32
	261 And X1, X1, 0x7FFFFFFF
	262 Move X0, X23
	263 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	264 Move X25, X31
	265 Move W21, 5
	266 Compare X24, 0
	267 JumpIfEqual {289}
	268 Move X8, [X24]
	269 Move X1, [X19]
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X24
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X24
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Compare X25, 0
	290 JumpIfNotEqual {725}
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Compare W21, 0
	293 JumpIfNotEqual {701}
	294 Compare X22, 0
	295 JumpIfEqual {720}
	296 Move X8, 0x7CB000
	297 Move X8, [X8+3560]
	298 Move X21, 0x7CD000
	299 Move W19, [X22+24]
	300 Move X0, [X8]
	301 Move X21, [X21+456]
	302 Call 0x1C17F10
	303 Move X1, [X21]
	304 Move X24, X0
	305 Call List`1<Object>..ctor, X0
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X21, 0x7CC000
	308 Move X28, 0x7CC000
	309 Move X29, 0x7CB000
	310 Move X21, [X21+4072]
	311 Move X28, [X28+3336]
	312 Move X29, [X29+3936]
	313 Move W25, W31
	314 Move X2, [X21]
	315 Move X0, X22
	316 Move W1, W25
	317 Call List`1<Edge>.get_Item, X0, X1
	318 Compare X23, 0
	319 JumpIfEqual {720}
	320 Move X2, [X28]
	321 Move X26, X0
	322 ShiftRight X26, 32
	323 And X26, X26, 0x7FFFFFFF
	324 Move X0, X23
	325 Move W1, W26
	326 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {352}
	331 Move X2, [X21]
	332 Move X0, X22
	333 Move W1, W25
	334 Call List`1<Edge>.get_Item, X0, X1
	335 Compare X20, 0
	336 JumpIfEqual {720}
	337 Move X8, [X20]
	338 Move X1, [X29]
	339 Move X27, X0
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move X0, X20
	350 Move W2, W31
	351 Call 0x1C5D788
	352 Compare X20, 0
	353 JumpIfEqual {720}
	354 Move X8, [X20]
	355 Move X1, [X29]
	356 NotImplemented "Instruction LDRH not yet implemented."
	357 Compare X9, 0
	358 JumpIfEqual {365}
	359 Move X10, [X8+176]
	360 Add X10, X10, 8
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Subtract X9, X9, 1
	364 Add X10, X10, 16
	365 Move X0, X20
	366 Move W2, W31
	367 Call 0x1C5D788
	368 NotImplemented "Instruction LDRSW not yet implemented."
	369 Add X8, X8, X9
	370 Add X0, X8, 312
	371 Move X8, [X0]
	372 Move X2, [X0+8]
	373 Move X0, X20
	374 Move W1, W27
	375 NotImplemented "Instruction BLR not yet implemented."
	376 Move X2, [X21]
	377 Move X27, X0
	378 Move X0, X22
	379 Move W1, W25
	380 Call List`1<Edge>.get_Item, X0, X1
	381 Move X8, [X20]
	382 Move X1, [X29]
	383 Move X28, X0
	384 NotImplemented "Instruction LDRH not yet implemented."
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move X0, X20
	394 Move W2, W31
	395 Call 0x1C5D788
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Add X8, X8, X9
	398 Add X0, X8, 312
	399 Move X8, [X0]
	400 Move X2, [X0+8]
	401 Move X0, X20
	402 Move W1, W26
	403 NotImplemented "Instruction BLR not yet implemented."
	404 Compare X24, 0
	405 JumpIfEqual {720}
	406 Move X9, 0x7CD000
	407 Move W10, [X24+28]
	408 Move X8, [X24+16]
	409 Move X9, [X9+448]
	410 Add W10, W10, 1
	411 Move X9, [X9]
	412 Move [X24+28], W10
	413 Compare X8, 0
	414 JumpIfEqual {720}
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Move W11, [X8+24]
	417 Move X1, X0
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Add W9, W10, 1
	420 Add X8, X8, X10
	421 Move [X24+24], W9
	422 Move [X8+32], X1
	423 Move X8, [X9+32]
	424 Move X0, X24
	425 NotImplemented "Instruction LDRSW not yet implemented."
	426 Add X8, X8, X9
	427 Add X0, X8, 312
	428 Move X8, [X0]
	429 Move X2, [X0+8]
	430 Move X1, X28
	431 ShiftRight X1, 32
	432 And X1, X1, 0x7FFFFFFF
	433 Move X0, X20
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Move X2, [X21]
	436 Add W8, W25, 1
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move X29, X0
	439 NotImplemented "Instruction CSINC not yet implemented."
	440 Move X0, X22
	441 Call List`1<Edge>.get_Item, X0, X1
	442 Move X8, [X20]
	443 Move X10, 0x7CB000
	444 Move X28, X0
	445 NotImplemented "Instruction LDRH not yet implemented."
	446 Move X10, [X10+3936]
	447 Move X1, [X10]
	448 Compare X9, 0
	449 JumpIfEqual {456}
	450 Move X10, [X8+176]
	451 Add X10, X10, 8
	452 NotImplemented "Instruction LDUR not yet implemented."
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Subtract X9, X9, 1
	455 Add X10, X10, 16
	456 Move X0, X20
	457 Move W2, W31
	458 Call 0x1C5D788
	459 NotImplemented "Instruction LDRSW not yet implemented."
	460 Add X8, X8, X9
	461 Add X0, X8, 312
	462 Move X8, [X0]
	463 Move X2, [X0+8]
	464 Move X1, X28
	465 ShiftRight X1, 32
	466 And X1, X1, 0x7FFFFFFF
	467 Move X0, X20
	468 NotImplemented "Instruction BLR not yet implemented."
	469 Move X21, X0
	470 Move X0, X27
	471 Move X1, X29
	472 Move X2, X31
	473 Call Vertex.op_Subtraction, X0, X1
	474 Move X28, X0
	475 Move X0, X21
	476 Move X1, X29
	477 Move X2, X31
	478 Call Vertex.op_Subtraction, X0, X1
	479 Compare X28, 0
	480 JumpIfEqual {720}
	481 Move X27, X0
	482 Move X0, X28
	483 Move X1, X31
	484 Call Vertex.Normalize, X0
	485 Move X29, 0x7CB000
	486 Move X29, [X29+3936]
	487 Compare X27, 0
	488 JumpIfEqual {720}
	489 Move X0, X27
	490 Move X1, X31
	491 Call Vertex.Normalize, X0
	492 Move X8, [X20]
	493 Move X1, [X29]
	494 NotImplemented "Instruction LDRH not yet implemented."
	495 Compare X9, 0
	496 JumpIfEqual {503}
	497 Move X10, [X8+176]
	498 Add X10, X10, 8
	499 NotImplemented "Instruction LDUR not yet implemented."
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Subtract X9, X9, 1
	502 Add X10, X10, 16
	503 Move X0, X20
	504 Move W2, W31
	505 Call 0x1C5D788
	506 NotImplemented "Instruction LDRSW not yet implemented."
	507 Add X8, X8, X9
	508 Add X0, X8, 312
	509 Move X8, [X0]
	510 Move X2, [X0+8]
	511 Move X0, X20
	512 Move W1, W26
	513 NotImplemented "Instruction BLR not yet implemented."
	514 Move X21, X0
	515 Move X0, X28
	516 Move V0, V8
	517 Move X1, X31
	518 Call Vertex.op_Multiply, X0, V0
	519 Move X1, X0
	520 Move X0, X21
	521 Move X2, X31
	522 Call Vertex.op_Addition, X0, X1
	523 Move X8, [X20]
	524 Move X1, [X29]
	525 Move X28, X0
	526 NotImplemented "Instruction LDRH not yet implemented."
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move X0, X20
	536 Move W2, W31
	537 Call 0x1C5D788
	538 NotImplemented "Instruction LDRSW not yet implemented."
	539 Add X8, X8, X9
	540 Add X0, X8, 312
	541 Move X8, [X0]
	542 Move X2, [X0+8]
	543 Move X0, X20
	544 Move W1, W26
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Move X21, X0
	547 Move X0, X27
	548 Move V0, V8
	549 Move X1, X31
	550 Call Vertex.op_Multiply, X0, V0
	551 Move X1, X0
	552 Move X0, X21
	553 Move X2, X31
	554 Call Vertex.op_Addition, X0, X1
	555 Move X8, [X31+16]
	556 Move X27, X0
	557 Move X0, X23
	558 Move W1, W26
	559 Move X29, [X8]
	560 Move X8, 0x7CB000
	561 Move X8, [X8+3200]
	562 Move X2, [X8]
	563 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	564 Compare X24, 0
	565 JumpIfEqual {720}
	566 Move X8, 0x7CE000
	567 Move W2, [X24+24]
	568 Move X8, [X8+1120]
	569 Move W1, W0
	570 Move X0, X29
	571 Move X3, [X8]
	572 Call ArrayUtility.AddOrAppend, X0, X1, X2
	573 Move X9, 0x7CD000
	574 Move W10, [X24+28]
	575 Move X8, [X24+16]
	576 Move X9, [X9+448]
	577 Add W10, W10, 1
	578 Move X9, [X9]
	579 Move [X24+28], W10
	580 Compare X8, 0
	581 JumpIfEqual {720}
	582 NotImplemented "Instruction LDRSW not yet implemented."
	583 Move W11, [X8+24]
	584 Move X29, 0x7CB000
	585 Move X29, [X29+3936]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add W9, W10, 1
	588 Add X8, X8, X10
	589 Move [X24+24], W9
	590 Move [X8+32], X28
	591 Move X8, [X9+32]
	592 Move X0, X24
	593 Move X1, X28
	594 Move X8, [X8+192]
	595 Move X2, [X8+112]
	596 Call List`1<Object>.AddWithResize, X0, X1
	597 Move X8, [X31+16]
	598 Move X0, X23
	599 Move W1, W26
	600 Move X21, [X8]
	601 Move X8, 0x7CB000
	602 Move X8, [X8+3200]
	603 Move X2, [X8]
	604 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	605 Move X8, 0x7CE000
	606 Move W2, [X24+24]
	607 Move X8, [X8+1120]
	608 Move W1, W0
	609 Move X0, X21
	610 Move X3, [X8]
	611 Call ArrayUtility.AddOrAppend, X0, X1, X2
	612 Move W10, [X24+28]
	613 Move X9, 0x7CD000
	614 Move X8, [X24+16]
	615 Move X9, [X9+448]
	616 Add W10, W10, 1
	617 Move X28, 0x7CC000
	618 Move X9, [X9]
	619 Move [X24+28], W10
	620 Move X28, [X28+3336]
	621 Compare X8, 0
	622 JumpIfEqual {720}
	623 NotImplemented "Instruction LDRSW not yet implemented."
	624 Move W11, [X8+24]
	625 Move X21, 0x7CC000
	626 Move X21, [X21+4072]
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Add W9, W10, 1
	629 Add X8, X8, X10
	630 Move [X24+24], W9
	631 Move [X8+32], X27
	632 Move X8, [X9+32]
	633 Move X0, X24
	634 Move X1, X27
	635 Move X8, [X8+192]
	636 Move X2, [X8+112]
	637 Call List`1<Object>.AddWithResize, X0, X1
	638 Add W25, W25, 1
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Add X1, X31, 24
	641 Move X0, X24
	642 Move W2, W31
	643 Move W3, W31
	644 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	645 Move TEMP, X0
	646 And TEMP, TEMP, 1
	647 Compare TEMP, 1
	648 JumpIfNotEqual {686}
	649 Move X8, 0x7CD000
	650 Move X8, [X8+496]
	651 Move X0, [X8]
	652 Call 0x1C17F10
	653 Move X1, X31
	654 Move X25, X0
	655 Call FaceRebuildData..ctor, X0
	656 Compare X25, 0
	657 JumpIfEqual {720}
	658 Move [X25+24], X24
	659 Move X8, 0x7CC000
	660 Move X8, [X8+1376]
	661 Move X0, [X8]
	662 Call 0x1C17F10
	663 Move X1, [X31+8]
	664 Move X2, X31
	665 Move X19, X0
	666 Call Face..ctor, X0, X1
	667 Move [X25+16], X19
	668 Move X19, [X31+24]
	669 Move X0, X24
	670 Move X2, X31
	671 Move X1, X19
	672 Call Math.Normal, X0, X1
	673 Multiply S0, S9, S0
	674 Multiply S1, S10, S1
	675 Add S0, S0, S1
	676 Multiply S1, S11, S2
	677 Add S0, S1, S0
	678 NotImplemented "Instruction FCMP not yet implemented."
	679 Compare X19, 0
	680 JumpIfEqual {720}
	681 Move X8, 0x7CE000
	682 Move X8, [X8+696]
	683 Move X0, X19
	684 Move X1, [X8]
	685 Call List`1<Int32>.Reverse, X0
	686 Move X25, X31
	687 Compare X19, 0
	688 JumpIfEqual {720}
	689 Move X8, 0x772000
	690 Move X20, [X25+16]
	691 Move X8, [X8+3608]
	692 Move X0, X19
	693 Move X1, [X8]
	694 Call List`1<Int32>.ToArray, X0
	695 Compare X20, 0
	696 JumpIfEqual {720}
	697 Move X1, X0
	698 Move X0, X20
	699 Move X2, X31
	700 Call Face.set_indexesInternal, X0, X1
	701 Move X0, X25
	702 Move X20, [X31+144]
	703 Move X19, [X31+152]
	704 Move X22, [X31+128]
	705 Move X21, [X31+136]
	706 Move X24, [X31+112]
	707 Move X23, [X31+120]
	708 Move X26, [X31+96]
	709 Move X25, [X31+104]
	710 Move X28, [X31+80]
	711 Move X27, [X31+88]
	712 Move X29, [X31+64]
	713 Move X30, [X31+72]
	714 Move D9, [X31+48]
	715 Move D8, [X31+56]
	716 Move D11, [X31+32]
	717 Move D10, [X31+40]
	718 Add X31, X31, 160
	719 Return X0
	720 Call 0x1C17F20
	721 Call 0x1C17F20
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Call 0x1C17F20
	725 Move X0, X25
	726 Call 0x1C17F18
	727 Move X26, X0
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move X0, X26
	730 Call 0x3EB2AD0
	731 Move X25, [X0]
	732 Call 0x3EB2AE0
	733 Move W21, W31
	734 Compare X24, 0
	735 JumpIfNotEqual {268}
	736 Move X25, X31
	737 Move X26, X0
	738 Compare X24, 0
	739 JumpIfEqual {761}
	740 Move X8, [X24]
	741 Move X1, [X19]
	742 NotImplemented "Instruction LDRH not yet implemented."
	743 Compare X9, 0
	744 JumpIfEqual {751}
	745 Move X10, [X8+176]
	746 Add X10, X10, 8
	747 NotImplemented "Instruction LDUR not yet implemented."
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Subtract X9, X9, 1
	750 Add X10, X10, 16
	751 Move X0, X24
	752 Move W2, W31
	753 Call 0x1C5D788
	754 NotImplemented "Instruction LDRSW not yet implemented."
	755 Add X8, X8, X9
	756 Add X0, X8, 312
	757 Move X8, [X0]
	758 Move X1, [X0+8]
	759 Move X0, X24
	760 NotImplemented "Instruction BLR not yet implemented."
	761 Compare X25, 0
	762 JumpIfNotEqual {765}
	763 Move X0, X26
	764 Call 0x1D2D690
	765 Move X0, X25
	766 Call 0x1C17F18
	767 Call 0x1991590

Method: UnityEngine.ProBuilder.Edge AlignEdgeWithDirection(UnityEngine.ProBuilder.EdgeLookup edge, System.Int32 commonIndex)

Disassembly:
	0x0398380C ADRP X23, 0xA55000
	0x03983810 LDP V0, V1, [X31 + 0x2E0]
	0x03983814 LDP V2, V3, [X31 + 0x300]
	0x03983818 LDRB W8, [X23 + 0xA1F]
	0x0398381C STP V0, V1, [X31 + 0x60]
	0x03983820 STP V2, V3, [X31 + 0x80]
	0x03983824 CBNZ W8, 0x398383C
	0x03983828 ADRP X0, 0x770000
	0x0398382C LDR X0, [X0 + 0x5A0]
	0x03983830 BL 0x1C16CF4
	0x03983834 MOVZ W8, 0x1
	0x03983838 STRB W8, [X23 + 0xA1F]
	0x0398383C LDR X8, [X20]
	0x03983840 LDP V3, V4, [X31 + 0x60]
	0x03983844 LDP V5, V6, [X31 + 0x80]
	0x03983848 ADD X0, X31, 0x20
	0x0398384C LDR X8, [X8 + 0xB8]
	0x03983850 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X8, X0
	004 Move X2, X8
	005 ShiftRight X2, 32
	006 And X2, X2, 0x7FFFFFFF
	007 Move [X31+8], X31
	008 Add X0, X31, 8
	009 Move W1, W8
	010 Move X1, X8
	011 ShiftRight X1, 32
	012 And X1, X1, 0x7FFFFFFF
	013 Add X0, X31, 8
	014 Move W2, W8
	015 Move [X31+8], X31
	016 Move X3, X31
	017 Call Edge..ctor, X0, X1, X2
	018 Move X0, [X31+8]
	019 Move X30, [X31+16]
	020 Return X0

