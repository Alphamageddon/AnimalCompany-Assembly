Type: UnityEngine.ProBuilder.MeshOperations.DeleteElements

Method: System.Void DeleteVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> distinctIndexes)

Disassembly:
	0x039571FC LDR X0, [X21]
	0x03957200 LDR W8, [X0 + 0xE0]
	0x03957204 CBNZ W8, 0x3957210
	0x03957208 BL 0x1C16DFC
	0x0395720C LDR X0, [X21]
	0x03957210 LDR X8, [X0 + 0xB8]
	0x03957214 ADRP X23, 0x7F8000
	0x03957218 ADRP X22, 0x7F7000
	0x0395721C LDR X20, [X8 + 0x20]
	0x03957220 LDR X23, [X23 + 0x4E8]
	0x03957224 LDR X22, [X22 + 0x3E0]
	0x03957228 CBNZ X20, 0x395727C
	0x0395722C LDR W8, [X0 + 0xE0]
	0x03957230 CBNZ W8, 0x395723C
	0x03957234 BL 0x1C16DFC
	0x03957238 LDR X0, [X21]
	0x0395723C ADRP X9, 0x7F8000
	0x03957240 LDR X8, [X0 + 0xB8]
	0x03957244 LDR X9, [X9 + 0x508]
	0x03957248 LDR X19, [X8]
	0x0395724C LDR X0, [X9]
	0x03957250 BL 0x1C16F10
	0x03957254 ADRP X8, 0x7F8000
	0x03957258 LDR X8, [X8 + 0x518]
	0x0395725C MOV X1, X19
	0x03957260 MOV X3, X31
	0x03957264 MOV X20, X0
	0x03957268 LDR X2, [X8]
	0x0395726C BL 0x2D30578
	0x03957270 LDR X8, [X21]
	0x03957274 LDR X8, [X8 + 0xB8]
	0x03957278 STR X20, [X8 + 0x20]
	0x0395727C LDR X2, [X23]
	0x03957280 LDR X23, [X31 + 0x30]
	0x03957284 MOV X1, X20
	0x03957288 MOV X0, X23
	0x0395728C BL 0x21CF224
	0x03957290 LDR X1, [X22]
	0x03957294 BL 0x21D577C
	0x03957298 CBZ X23, 0x3957394
	0x0395729C ADRP X8, 0x7F8000
	0x039572A0 LDR X8, [X8 + 0x510]
	0x039572A4 ADRP X21, 0x7F8000
	0x039572A8 ADRP X19, 0x7F8000
	0x039572AC MOV X22, X0
	0x039572B0 LDR X1, [X8]
	0x039572B4 LDR X21, [X21 + 0x4F8]
	0x039572B8 LDR X19, [X19 + 0x4F0]
	0x039572BC ADD X8, X31, 0xA0
	0x039572C0 MOV X0, X23
	0x039572C4 BL 0x301CB58
	0x039572C8 LDR V0, [X31 + 0xA]
	0x039572CC LDR X8, [X31 + 0xB0]
	0x039572D0 STR V0, [X31 + 0xC]
	0x039572D4 STR X8, [X31 + 0xD0]
	0x039572D8 LDR X1, [X21]
	0x039572DC ADD X0, X31, 0xC0
	0x039572E0 BL 0x2BC4350
	0x039572E4 TBZ X0, 0x0, 0x3957350
	0x039572E8 LDR X8, [X31 + 0xD0]
	0x039572EC CBZ X8, 0x3957398
	0x039572F0 LDR X20, [X8 + 0x10]
	0x039572F4 LDR X1, [X31 + 0x40]
	0x039572F8 MOV X0, X24
	0x039572FC MOV X2, X31
	0x03957300 BL 0x390987C
	0x03957304 MOV V9.16B, V0.16B
	0x03957308 MOV V10.16B, V1.16B
	0x0395730C MOV V8.16B, V2.16B
	0x03957310 MOV X0, X24
	0x03957314 MOV X1, X20
	0x03957318 MOV X2, X31
	0x0395731C BL 0x390987C
	0x03957320 FMUL S0, S9, S0
	0x03957324 FMUL S1, S10, S1
	0x03957328 FADD S0, S0, S1
	0x0395732C FMUL S1, S8, S2
	0x03957330 FADD S0, S1, S0
	0x03957334 FCMP S0, 0x0
	0x03957338 B.PL 0x39572D8
	0x0395733C CBZ X20, 0x395739C
	0x03957340 MOV X0, X20
	0x03957344 MOV X1, X31
	0x03957348 BL 0x3900E24
	0x0395734C B 0x39572D8
	0x03957350 LDR X1, [X19]
	0x03957354 ADD X0, X31, 0xC0
	0x03957358 BL 0x2BC434C
	0x0395735C LDR X1, [X31 + 0x40]
	0x03957360 MOV X0, X24
	0x03957364 BL 0x39543A8
	0x03957368 MOV X0, X22
	0x0395736C LDP X20, X19, [X31 + 0x150]
	0x03957370 LDP X22, X21, [X31 + 0x140]
	0x03957374 LDP X24, X23, [X31 + 0x130]
	0x03957378 LDP X26, X25, [X31 + 0x120]
	0x0395737C LDP X28, X27, [X31 + 0x110]
	0x03957380 LDP X29, X30, [X31 + 0x100]
	0x03957384 LDP D9, D8, [X31 + 0xF0]
	0x03957388 LDR V10, [X31 + 0xE0]
	0x0395738C ADD X31, X31, 0x160
	0x03957390 RET
	0x03957394 BL 0x1C16F20
	0x03957398 BL 0x1C16F20
	0x0395739C BL 0x1C16F20
	0x039573A0 ADRP X0, 0x7A1000
	0x039573A4 LDR X0, [X0 + 0x528]
	0x039573A8 BL 0x1C16D08
	0x039573AC BL 0x1C16F10
	0x039573B0 MOV X19, X0
	0x039573B4 ADRP X0, 0x7F6000
	0x039573B8 LDR X0, [X0 + 0xE90]
	0x039573BC B 0x39573DC
	0x039573C0 ADRP X0, 0x7A1000
	0x039573C4 LDR X0, [X0 + 0x528]
	0x039573C8 BL 0x1C16D08
	0x039573CC BL 0x1C16F10
	0x039573D0 MOV X19, X0
	0x039573D4 ADRP X0, 0x7F7000
	0x039573D8 LDR X0, [X0 + 0x600]
	0x039573DC BL 0x1C16D08
	0x039573E0 MOV X1, X0
	0x039573E4 MOV X0, X19
	0x039573E8 MOV X2, X31
	0x039573EC BL 0x330E100
	0x039573F0 ADRP X0, 0x7F8000
	0x039573F4 LDR X0, [X0 + 0x520]
	0x039573F8 BL 0x1C16D08
	0x039573FC MOV X1, X0
	0x03957400 MOV X0, X19
	0x03957404 BL 0x1C16DEC
	0x03957408 B 0x39574A8
	0x0395740C B 0x39574B8
	0x03957410 CMP W1, 0x1
	0x03957414 MOV X20, X0
	0x03957418 B.NE 0x3957508
	0x0395741C MOV X0, X20
	0x03957420 BL 0x3EB1AD0
	0x03957424 MOV X19, X0
	0x03957428 ADRP X0, 0x7A2000
	0x0395742C LDR X0, [X0 + 0xCC0]
	0x03957430 BL 0x1C16D08
	0x03957434 LDR X8, [X19]
	0x03957438 LDR X1, [X8]
	0x0395743C BL 0x1C17270
	0x03957440 TBZ X0, 0x0, 0x395747C
	0x03957444 BL 0x3EB1AE0
	0x03957448 ADRP X0, 0x79C000
	0x0395744C LDR X0, [X0 + 0xA28]
	0x03957450 BL 0x1C16D08
	0x03957454 LDR W8, [X0 + 0xE0]
	0x03957458 CBNZ W8, 0x3957460
	0x0395745C BL 0x1C16DFC
	0x03957460 ADRP X0, 0x7F8000
	0x03957464 LDR X0, [X0 + 0x390]
	0x03957468 BL 0x1C16D08
	0x0395746C MOV X1, X31
	0x03957470 BL 0x3C06048
	0x03957474 MOV X22, X31
	0x03957478 B 0x3957368
	0x0395747C MOVZ W0, 0x8
	0x03957480 BL 0x3EB1AF0
	0x03957484 LDR X8, [X19]
	0x03957488 STR X8, [X0]
	0x0395748C ADRP X1, 0x55D000
	0x03957490 ADD X1, X1, 0xE58
	0x03957494 MOV X2, X31
	0x03957498 BL 0x3EB1B00
	0x0395749C MOV X20, X0
	0x039574A0 BL 0x3EB1AE0
	0x039574A4 B 0x3957508
	0x039574A8 LDR X24, [X31 + 0x18]
	0x039574AC B 0x39574B8
	0x039574B0 B 0x39574B8
	0x039574B4 B 0x39574B8
	0x039574B8 MOV X20, X0
	0x039574BC CMP W1, 0x1
	0x039574C0 B.NE 0x39574EC
	0x039574C4 MOV X0, X20
	0x039574C8 BL 0x3EB1AD0
	0x039574CC LDR X21, [X0]
	0x039574D0 BL 0x3EB1AE0
	0x039574D4 LDR X1, [X19]
	0x039574D8 ADD X0, X31, 0xC0
	0x039574DC BL 0x2BC434C
	0x039574E0 CBZ X21, 0x395735C
	0x039574E4 MOV X0, X21
	0x039574E8 BL 0x1C16F18
	0x039574EC MOV X21, X31
	0x039574F0 B 0x39574F8
	0x039574F4 MOV X20, X0
	0x039574F8 LDR X1, [X19]
	0x039574FC ADD X0, X31, 0xC0
	0x03957500 BL 0x2BC434C
	0x03957504 CBNZ X21, 0x3957510
	0x03957508 MOV X0, X20
	0x0395750C BL 0x1D2C690
	0x03957510 MOV X0, X21
	0x03957514 BL 0x1C16F18
	0x03957518 BL 0x1990590
	0x0395751C SUB X31, X31, 0x1C0
	0x03957520 STP D15, D14, [X31 + 0x120]
	0x03957524 STP D13, D12, [X31 + 0x130]
	0x03957528 STP D11, D10, [X31 + 0x140]
	0x0395752C STP D9, D8, [X31 + 0x150]
	0x03957530 STP X29, X30, [X31 + 0x160]
	0x03957534 STP X28, X27, [X31 + 0x170]
	0x03957538 STP X26, X25, [X31 + 0x180]
	0x0395753C STP X24, X23, [X31 + 0x190]
	0x03957540 STP X22, X21, [X31 + 0x1A0]
	0x03957544 STP X20, X19, [X31 + 0x1B0]
	0x03957548 ADRP X20, 0xA8A000
	0x0395754C ADRP X19, 0x79C000
	0x03957550 LDRB W8, [X20 + 0x99C]
	0x03957554 LDR X19, [X19 + 0x598]
	0x03957558 MOV V14.16B, V2.16B
	0x0395755C MOV V8.16B, V1.16B
	0x03957560 MOV V10.16B, V0.16B
	0x03957564 MOV X21, X1
	0x03957568 MOV X25, X0
	0x0395756C TBNZ X8, 0x0, 0x3957794
	0x03957570 ADRP X0, 0x7F8000
	0x03957574 LDR X0, [X0 + 0x3A0]
	0x03957578 BL 0x1C16CF4
	0x0395757C ADRP X0, 0x7F8000
	0x03957580 LDR X0, [X0 + 0x3A8]
	0x03957584 BL 0x1C16CF4
	0x03957588 ADRP X0, 0x7A6000
	0x0395758C LDR X0, [X0 + 0x858]
	0x03957590 BL 0x1C16CF4
	0x03957594 ADRP X0, 0x7F8000
	0x03957598 LDR X0, [X0 + 0x3B0]
	0x0395759C BL 0x1C16CF4
	0x039575A0 ADRP X0, 0x7A6000
	0x039575A4 LDR X0, [X0 + 0x870]
	0x039575A8 BL 0x1C16CF4
	0x039575AC ADRP X0, 0x7F8000
	0x039575B0 LDR X0, [X0 + 0x3B8]
	0x039575B4 BL 0x1C16CF4
	0x039575B8 ADRP X0, 0x7F7000
	0x039575BC LDR X0, [X0 + 0xD78]
	0x039575C0 BL 0x1C16CF4
	0x039575C4 ADRP X0, 0x7F6000
	0x039575C8 LDR X0, [X0 + 0xC80]
	0x039575CC BL 0x1C16CF4
	0x039575D0 ADRP X0, 0x7F8000
	0x039575D4 LDR X0, [X0 + 0x3C0]
	0x039575D8 BL 0x1C16CF4
	0x039575DC ADRP X0, 0x7F8000
	0x039575E0 LDR X0, [X0 + 0x3C8]
	0x039575E4 BL 0x1C16CF4
	0x039575E8 ADRP X0, 0x7F8000
	0x039575EC LDR X0, [X0 + 0x3D0]
	0x039575F0 BL 0x1C16CF4
	0x039575F4 ADRP X0, 0x7C4000
	0x039575F8 LDR X0, [X0 + 0x600]
	0x039575FC BL 0x1C16CF4
	0x03957600 ADRP X0, 0x7F8000
	0x03957604 LDR X0, [X0 + 0x328]
	0x03957608 BL 0x1C16CF4
	0x0395760C ADRP X0, 0x7C7000
	0x03957610 LDR X0, [X0 + 0xBB8]
	0x03957614 BL 0x1C16CF4
	0x03957618 ADRP X0, 0x7F8000
	0x0395761C LDR X0, [X0 + 0x3F0]
	0x03957620 BL 0x1C16CF4
	0x03957624 ADRP X0, 0x7F8000
	0x03957628 LDR X0, [X0 + 0x3F8]
	0x0395762C BL 0x1C16CF4
	0x03957630 ADRP X0, 0x7F7000
	0x03957634 LDR X0, [X0 + 0x2A8]
	0x03957638 BL 0x1C16CF4
	0x0395763C ADRP X0, 0x7F8000
	0x03957640 LDR X0, [X0 + 0x400]
	0x03957644 BL 0x1C16CF4
	0x03957648 ADRP X0, 0x7F8000
	0x0395764C LDR X0, [X0 + 0x418]
	0x03957650 BL 0x1C16CF4
	0x03957654 ADRP X0, 0x7F8000
	0x03957658 LDR X0, [X0 + 0x428]
	0x0395765C BL 0x1C16CF4
	0x03957660 ADRP X0, 0x7F8000
	0x03957664 LDR X0, [X0 + 0x1F0]
	0x03957668 BL 0x1C16CF4
	0x0395766C ADRP X0, 0x7F7000
	0x03957670 LDR X0, [X0 + 0x560]
	0x03957674 BL 0x1C16CF4
	0x03957678 ADRP X0, 0x79D000
	0x0395767C LDR X0, [X0 + 0xE58]
	0x03957680 BL 0x1C16CF4
	0x03957684 ADRP X0, 0x7F7000
	0x03957688 LDR X0, [X0 + 0x688]
	0x0395768C BL 0x1C16CF4
	0x03957690 ADRP X0, 0x7F6000
	0x03957694 LDR X0, [X0 + 0xE08]
	0x03957698 BL 0x1C16CF4
	0x0395769C ADRP X0, 0x79D000
	0x039576A0 LDR X0, [X0 + 0xE10]
	0x039576A4 BL 0x1C16CF4
	0x039576A8 ADRP X0, 0x7F8000
	0x039576AC LDR X0, [X0 + 0x1C0]
	0x039576B0 BL 0x1C16CF4
	0x039576B4 ADRP X0, 0x7F8000
	0x039576B8 LDR X0, [X0 + 0x440]
	0x039576BC BL 0x1C16CF4
	0x039576C0 ADRP X0, 0x7A0000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xA8B000
	012 Move X23, 0x7F9000
	013 Move X22, 0x79D000
	014 Move W8, [X20+2495]
	015 Move X23, [X23+1184]
	016 Move X22, [X22+1432]
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {76}
	023 Move X0, 0x7F8000
	024 Move X0, [X0+3408]
	025 Call 0x1C17CF4
	026 Move X0, 0x7F9000
	027 Move X0, [X0+1192]
	028 Call 0x1C17CF4
	029 Move X0, 0x7F7000
	030 Move X0, [X0+2720]
	031 Call 0x1C17CF4
	032 Move X0, 0x7F9000
	033 Move X0, [X0+1200]
	034 Call 0x1C17CF4
	035 Move X0, 0x7F8000
	036 Move X0, [X0+3416]
	037 Call 0x1C17CF4
	038 Move X0, 0x7F8000
	039 Move X0, [X0+3424]
	040 Call 0x1C17CF4
	041 Move X0, 0x7F9000
	042 Move X0, [X0+1208]
	043 Call 0x1C17CF4
	044 Move X0, 0x79E000
	045 Move X0, [X0+3672]
	046 Call 0x1C17CF4
	047 Move X0, 0x7C5000
	048 Move X0, [X0+1936]
	049 Call 0x1C17CF4
	050 Move X0, 0x7C5000
	051 Move X0, [X0+1944]
	052 Call 0x1C17CF4
	053 Move X0, 0x79E000
	054 Move X0, [X0+3632]
	055 Call 0x1C17CF4
	056 Move X0, 0x79D000
	057 Move X0, [X0+1432]
	058 Call 0x1C17CF4
	059 Move X0, 0x7F9000
	060 Move X0, [X0+1216]
	061 Call 0x1C17CF4
	062 Move X0, 0x7F9000
	063 Move X0, [X0+1224]
	064 Call 0x1C17CF4
	065 Move X0, 0x7F9000
	066 Move X0, [X0+1232]
	067 Call 0x1C17CF4
	068 Move X0, 0x7F9000
	069 Move X0, [X0+1240]
	070 Call 0x1C17CF4
	071 Move X0, 0x7F9000
	072 Move X0, [X0+1184]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2495], W8
	076 Move X0, [X23]
	077 Call 0x1C17F10
	078 Move X1, X31
	079 Move X20, X0
	080 Call Object..ctor, X0
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {316}
	094 Compare X21, 0
	095 JumpIfEqual {303}
	096 Move X8, 0x7F7000
	097 Move X8, [X8+2720]
	098 Move X0, X21
	099 Move X1, [X8]
	100 Call Enumerable.Any, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {303}
	105 Compare X19, 0
	106 JumpIfEqual {315}
	107 Move X0, X19
	108 Move X1, X31
	109 Move X2, X31
	110 Call ProBuilderMesh.GetVertices, X0, X1
	111 Compare X0, 0
	112 JumpIfEqual {315}
	113 Move X8, 0x79E000
	114 Move X22, [X0+24]
	115 Move X8, [X8+3672]
	116 Move X23, X0
	117 Move W1, W22
	118 Move X0, [X8]
	119 Call 0x1C17D6C
	120 Compare X20, 0
	121 JumpIfEqual {315}
	122 Move [X20+24], X0
	123 Move X8, 0x79E000
	124 Move X8, [X8+3632]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0x7C5000
	128 Move X8, [X8+1944]
	129 Move X1, X21
	130 Move X24, X0
	131 Move X2, [X8]
	132 Call List`1<Int32>..ctor, X0, X1
	133 Move [X20+16], X24
	134 Compare X24, 0
	135 JumpIfEqual {315}
	136 Move X8, 0x7C5000
	137 Move X8, [X8+1936]
	138 Move X0, X24
	139 Move X1, [X8]
	140 Call List`1<Int32>.Sort, X0
	141 Move X8, 0x7F9000
	142 Move X1, [X20+16]
	143 Move X8, [X8+1192]
	144 Move X0, X23
	145 Move X2, [X8]
	146 Call 0x2180F94, X0, X1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X21, X0
	149 Move X24, 0x7F8000
	150 Move X24, [X24+3408]
	151 Move X23, X31
	152 And X22, X22, 0
	153 Move X0, [X20+16]
	154 Move X25, [X20+24]
	155 Move X2, [X24]
	156 Move W1, W23
	157 Call 0x218001C, X0, X1
	158 Compare X25, 0
	159 JumpIfEqual {315}
	160 Move W8, [X25+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X9, X25, X23
	163 Add X23, X23, 1
	164 Add W8, W0, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move [X9+32], W8
	167 Move X22, [X19+40]
	168 Compare X22, 0
	169 JumpIfEqual {315}
	170 Move W8, [X22+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move W23, W31
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X8, X22, W23
	175 Move X0, [X8+32]
	176 Compare X0, 0
	177 JumpIfEqual {315}
	178 Move X8, [X0+16]
	179 Compare X8, 0
	180 JumpIfEqual {315}
	181 Move W9, [X8+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X10, [X20+24]
	184 Move W11, W31
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add X12, X8, W11
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Compare X10, 0
	189 JumpIfEqual {315}
	190 Move W14, [X10+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X14, X10, X13
	193 Move W14, [X14+32]
	194 Add W11, W11, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract W13, W13, W14
	197 Move [X12], W13
	198 Move X1, X31
	199 Call Face.InvalidateCache, X0
	200 Move W8, [X22+24]
	201 Add W23, W23, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X19
	204 Move X1, X31
	205 Call ProBuilderMesh.get_sharedVertexLookup, X0
	206 Move X24, 0x7F8000
	207 Move X24, [X24+3424]
	208 Move X22, X0
	209 Move X8, [X24]
	210 Move X0, X8
	211 Call 0x1C17F10
	212 Move X8, 0x7F9000
	213 Move X8, [X8+1216]
	214 Move X1, X20
	215 Move X3, X31
	216 Move X23, X0
	217 Move X2, [X8]
	218 Call Func`2<KeyValuePair`2<Int32, Int32>, Boolean>..ctor, X0, X1, X2
	219 Move X25, 0x7F8000
	220 Move X25, [X25+3416]
	221 Move X0, X22
	222 Move X1, X23
	223 Move X2, [X25]
	224 Call Enumerable.Where, X0, X1
	225 Move X26, 0x7F9000
	226 Move X26, [X26+1208]
	227 Move X22, X0
	228 Move X8, [X26]
	229 Move X0, X8
	230 Call 0x1C17F10
	231 Move X8, 0x7F9000
	232 Move X8, [X8+1224]
	233 Move X1, X20
	234 Move X3, X31
	235 Move X23, X0
	236 Move X2, [X8]
	237 Call Func`2<KeyValuePair`2<Int32, Int32>, KeyValuePair`2<Int32, Int32>>..ctor, X0, X1, X2
	238 Move X27, 0x7F9000
	239 Move X27, [X27+1200]
	240 Move X0, X22
	241 Move X1, X23
	242 Move X2, [X27]
	243 Call Enumerable.Select, X0, X1
	244 Move X22, X0
	245 Move X0, X19
	246 Move X1, X31
	247 Call ProBuilderMesh.get_sharedTextureLookup, X0
	248 Move X8, [X24]
	249 Move X23, X0
	250 Move X0, X8
	251 Call 0x1C17F10
	252 Move X8, 0x7F9000
	253 Move X8, [X8+1232]
	254 Move X1, X20
	255 Move X3, X31
	256 Move X24, X0
	257 Move X2, [X8]
	258 Call Func`2<KeyValuePair`2<Int32, Int32>, Boolean>..ctor, X0, X1, X2
	259 Move X2, [X25]
	260 Move X0, X23
	261 Move X1, X24
	262 Call Enumerable.Where, X0, X1
	263 Move X8, [X26]
	264 Move X23, X0
	265 Move X0, X8
	266 Call 0x1C17F10
	267 Move X8, 0x7F9000
	268 Move X8, [X8+1240]
	269 Move X1, X20
	270 Move X3, X31
	271 Move X24, X0
	272 Move X2, [X8]
	273 Call Func`2<KeyValuePair`2<Int32, Int32>, KeyValuePair`2<Int32, Int32>>..ctor, X0, X1, X2
	274 Move X2, [X27]
	275 Move X0, X23
	276 Move X1, X24
	277 Call Enumerable.Select, X0, X1
	278 Move X20, X0
	279 Move X0, X19
	280 Move X1, X21
	281 Move W2, W31
	282 Move X3, X31
	283 Call ProBuilderMesh.SetVertices, X0, X1, X2
	284 Move X0, X19
	285 Move X1, X22
	286 Move X2, X31
	287 Call ProBuilderMesh.SetSharedVertices, X0, X1
	288 Move X0, X19
	289 Move X1, X20
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X22, [X31+48]
	293 Move X21, [X31+56]
	294 Move X24, [X31+32]
	295 Move X23, [X31+40]
	296 Move X26, [X31+16]
	297 Move X25, [X31+24]
	298 Move X2, X31
	299 Move X30, [X31+80]
	300 Move X27, [X31+88]
	301 Call ProBuilderMesh.SetSharedTextures, X0, X1
	302 Return 
	303 Move X20, [X31+64]
	304 Move X19, [X31+72]
	305 Move X22, [X31+48]
	306 Move X21, [X31+56]
	307 Move X24, [X31+32]
	308 Move X23, [X31+40]
	309 Move X26, [X31+16]
	310 Move X25, [X31+24]
	311 Move X30, [X31+80]
	312 Move X27, [X31+88]
	313 Return 
	314 Call 0x1C17F28
	315 Call 0x1C17F20
	316 Move X0, 0x7A2000
	317 Move X0, [X0+1320]
	318 Call 0x1C17D08
	319 Call 0x1C17F10
	320 Move X19, X0
	321 Move X0, 0x7F7000
	322 Move X0, [X0+3728]
	323 Call 0x1C17D08
	324 Move X1, X0
	325 Move X0, X19
	326 Move X2, X31
	327 Call ArgumentNullException..ctor, X0, X1
	328 Move X0, 0x7F9000
	329 Move X0, [X0+1248]
	330 Call 0x1C17D08
	331 Move X1, X0
	332 Move X0, X19
	333 Call 0x1C17DEC

Method: System.Int32[] DeleteFace(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x039553A8 MOV W1, W28
	0x039553AC BL 0x2A0BC68
	0x039553B0 TBZ X0, 0x0, 0x3955414
	0x039553B4 CBZ X25, 0x3955948
	0x039553B8 ADRP X9, 0x79F000
	0x039553BC LDR W1, [X31 + 0x120]
	0x039553C0 LDR W10, [X25 + 0x1C]
	0x039553C4 LDR X8, [X25 + 0x10]
	0x039553C8 LDR X9, [X9 + 0xE10]
	0x039553CC ADD W10, W10, 0x1
	0x039553D0 LDR X9, [X9]
	0x039553D4 STR W10, [X25 + 0x1C]
	0x039553D8 CBZ X8, 0x3955950
	0x039553DC LDRSW X10, [X25 + 0x18]
	0x039553E0 LDR W11, [X8 + 0x18]
	0x039553E4 CMP W10, W11
	0x039553E8 B.CS 0x3955400
	0x039553EC ADD W9, W10, 0x1
	0x039553F0 ADD X8, X8, X10, 0x2, LSL
	0x039553F4 STR W9, [X25 + 0x18]
	0x039553F8 STR W1, [X8 + 0x20]
	0x039553FC B 0x3955414
	0x03955400 LDR X8, [X9 + 0x20]
	0x03955404 LDR X8, [X8 + 0xC0]
	0x03955408 LDR X2, [X8 + 0x70]
	0x0395540C MOV X0, X25
	0x03955410 BL 0x2FDC70C
	0x03955414 CBZ X22, 0x39558F0
	0x03955418 ADRP X8, 0x7A8000
	0x0395541C LDR X8, [X8 + 0x870]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA8D000
	007 Move X22, 0x7FA000
	008 Move W8, [X21+2496]
	009 Move X22, [X22+1008]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7FA000
	017 Move X0, [X0+1008]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2496], W8
	021 Move X0, [X22]
	022 Move W1, 1
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move W8, [X0+24]
	027 Move X1, X0
	028 Compare W8, 0
	029 JumpIfEqual {40}
	030 Move [X1+32], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call DeleteElements.DeleteFaces, X0, X1
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Int32[] DeleteFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x0395D0F0 ADD W9, W10, 0x1
	0x0395D0F4 ADD X8, X8, X10, 0x3, LSL
	0x0395D0F8 STR W9, [X28 + 0x18]
	0x0395D0FC STR X27, [X8 + 0x20]
	0x0395D100 B 0x395CF60
	0x0395D104 LDR X8, [X9 + 0x20]
	0x0395D108 LDR X8, [X8 + 0xC0]
	0x0395D10C LDR X2, [X8 + 0x70]
	0x0395D110 MOV X0, X28
	0x0395D114 MOV X1, X27
	0x0395D118 BL 0x301BF90
	0x0395D11C B 0x395CF60
	0x0395D120 MOV X27, X31
	0x0395D124 MOVZ W21, 0xE
	0x0395D128 CBZ X29, 0x395D18C
	0x0395D12C ADRP X10, 0x796000
	0x0395D130 LDR X8, [X29]
	0x0395D134 LDR X10, [X10 + 0xE00]
	0x0395D138 LDRH W9, [X8 + 0x12E]
	0x0395D13C LDR X1, [X10]
	0x0395D140 CBZ X9, 0x395D164
	0x0395D144 LDR X10, [X8 + 0xB0]
	0x0395D148 ADD X10, X10, 0x8
	0x0395D14C LDUR X11, [X10 - 0x8]
	0x0395D150 CMP X11, X1
	0x0395D154 B.EQ 0x395D174
	0x0395D158 SUBS X9, X9, 0x1
	0x0395D15C ADD X10, X10, 0x10
	0x0395D160 B.NE 0x395D14C
	0x0395D164 MOV X0, X29
	0x0395D168 MOV W2, W31
	0x0395D16C BL 0x1C5C788
	0x0395D170 B 0x395D180
	0x0395D174 LDRSW X9, [X10]
	0x0395D178 ADD X8, X8, X9, 0x4, LSL
	0x0395D17C ADD X0, X8, 0x138
	0x0395D180 LDP X8, X1, [X0]
	0x0395D184 MOV X0, X29
	0x0395D188 BLR X8
	0x0395D18C CBNZ X27, 0x395D544
	0x0395D190 CMP W21, 0xE
	0x0395D194 B.EQ 0x395D19C
	0x0395D198 CBNZ W21, 0x395CEF0
	0x0395D19C ADRP X8, 0x7F0000
	0x0395D1A0 LDR X8, [X8 + 0xDF0]
	0x0395D1A4 LDR X0, [X8]
	0x0395D1A8 BL 0x1C16F10
	0x0395D1AC ADRP X8, 0x7F1000
	0x0395D1B0 LDR X8, [X8 + 0xA38]
	0x0395D1B4 MOV X27, X0
	0x0395D1B8 LDR X1, [X8]
	0x0395D1BC BL 0x301B7C4
	0x0395D1C0 LDR X8, [X31 + 0x28]
	0x0395D1C4 LDR W1, [X31 + 0x34]
	0x0395D1C8 ADD X2, X31, 0xB8
	0x0395D1CC ADD X3, X31, 0xB0
	0x0395D1D0 ADD X4, X31, 0x90
	0x0395D1D4 ADD X5, X31, 0xA8
	0x0395D1D8 ADD X6, X31, 0xA0
	0x0395D1DC ADD X7, X31, 0x98
	0x0395D1E0 MOV X0, X28
	0x0395D1E4 STR X27, [X31 + 0x90]
	0x0395D1E8 STR X8, [X31]
	0x0395D1EC BL 0x395D6AC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA85000
	009 Move X22, 0x7F3000
	010 Move W8, [X21+2497]
	011 Move X22, [X22+1904]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x7F2000
	019 Move X0, [X0+1688]
	020 Call 0x1C17CF4
	021 Move X0, 0x7F2000
	022 Move X0, [X0+680]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F2000
	025 Move X0, [X0+1296]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F3000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move X0, 0x7F3000
	031 Move X0, [X0+1904]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2497], W8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X21, X0
	039 Call Object..ctor, X0
	040 Compare X21, 0
	041 JumpIfEqual {75}
	042 Move X8, 0x7F2000
	043 Move X8, [X8+1296]
	044 Move [X21+16], X19
	045 Move X22, 0x7F3000
	046 Move X23, 0x7F2000
	047 Move X0, [X8]
	048 Move X24, 0x7F2000
	049 Move X22, [X22+1912]
	050 Move X23, [X23+1688]
	051 Move X24, [X24+680]
	052 Call 0x1C17F10
	053 Move X2, [X22]
	054 Move X1, X21
	055 Move X3, X31
	056 Move X22, X0
	057 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	058 Move X2, [X23]
	059 Move X0, X20
	060 Move X1, X22
	061 Call Enumerable.Select, X0, X1
	062 Move X1, [X24]
	063 Call Enumerable.ToList, X0
	064 Move X1, X0
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call DeleteElements.DeleteFaces, X0, X1
	074 Return X0
	075 Call 0x1C17F20

Method: System.Int32[] DeleteFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<System.Int32> faceIndexes)

Disassembly:
	0x03965C6C ADRP X0, 0x78E000
	0x03965C70 LDR X0, [X0 + 0xE00]
	0x03965C74 BL 0x1C16CF4
	0x03965C78 ADRP X0, 0x7E8000
	0x03965C7C LDR X0, [X0 + 0xC90]
	0x03965C80 BL 0x1C16CF4
	0x03965C84 ADRP X0, 0x78E000
	0x03965C88 LDR X0, [X0 + 0xE18]
	0x03965C8C BL 0x1C16CF4
	0x03965C90 ADRP X0, 0x7E8000
	0x03965C94 LDR X0, [X0 + 0xD68]
	0x03965C98 BL 0x1C16CF4
	0x03965C9C ADRP X0, 0x7EA000
	0x03965CA0 LDR X0, [X0 + 0xB00]
	0x03965CA4 BL 0x1C16CF4
	0x03965CA8 ADRP X0, 0x7E8000
	0x03965CAC LDR X0, [X0 + 0xD70]
	0x03965CB0 BL 0x1C16CF4
	0x03965CB4 ADRP X0, 0x7E8000
	0x03965CB8 LDR X0, [X0 + 0xD78]
	0x03965CBC BL 0x1C16CF4
	0x03965CC0 ADRP X0, 0x7EA000
	0x03965CC4 LDR X0, [X0 + 0xB08]
	0x03965CC8 BL 0x1C16CF4
	0x03965CCC MOVZ W8, 0x1
	0x03965CD0 STRB W8, [X19 + 0x9CE]
	0x03965CD4 STP X31, X31, [X31 + 0x10]
	0x03965CD8 CBZ X23, 0x39661A8
	0x03965CDC ADRP X19, 0x7E8000
	0x03965CE0 ADRP X21, 0x7E8000
	0x03965CE4 ADRP X24, 0x78F000
	0x03965CE8 ADRP X25, 0x795000
	0x03965CEC LDR X19, [X19 + 0xD78]
	0x03965CF0 LDR X21, [X21 + 0xD70]
	0x03965CF4 LDR X24, [X24 + 0xE08]
	0x03965CF8 LDR X25, [X25 + 0x688]
	0x03965CFC MOV X0, X23
	0x03965D00 MOV X1, X31
	0x03965D04 BL 0x3916198
	0x03965D08 LDR X8, [X19]
	0x03965D0C MOV X20, X0
	0x03965D10 MOV X0, X8
	0x03965D14 BL 0x1C16F10
	0x03965D18 LDR X1, [X21]
	0x03965D1C MOV X19, X0
	0x03965D20 BL 0x2FB9738
	0x03965D24 LDR X0, [X24]
	0x03965D28 BL 0x1C16F10
	0x03965D2C LDR X1, [X25]
	0x03965D30 MOV X21, X0
	0x03965D34 BL 0x2DA9EF4
	0x03965D38 CBZ X22, 0x39661A8
	0x03965D3C LDR X8, [X22 + 0x18]
	0x03965D40 ADRP X27, 0x7E8000
	0x03965D44 LDR X27, [X27 + 0xC80]
	0x03965D48 CMP W8, 0x1
	0x03965D4C B.LT 0x3965DA4
	0x03965D50 ADRP X25, 0x790000
	0x03965D54 LDR X25, [X25 + 0x9D8]
	0x03965D58 MOV X24, X31
	0x03965D5C AND X8, X8, 0x0
	0x03965D60 ADD X26, X22, 0x20
	0x03965D64 CMP X24, W8, UXTW
	0x03965D68 B.CS 0x39661AC
	0x03965D6C CBZ X20, 0x39661A8
	0x03965D70 LDR W1, [X26, X24, LSL #2]
	0x03965D74 LDR X2, [X27]
	0x03965D78 MOV X0, X20
	0x03965D7C BL 0x2A0A2A8
	0x03965D80 CBZ X21, 0x39661A8
	0x03965D84 LDR X2, [X25]
	0x03965D88 MOV W1, W0
	0x03965D8C MOV X0, X21
	0x03965D90 BL 0x2DAB03C
	0x03965D94 LDR W8, [X22 + 0x18]
	0x03965D98 ADD X24, X24, 0x1
	0x03965D9C CMP X24, W8, SXTW
	0x03965DA0 B.LT 0x3965D64
	0x03965DA4 ADRP X8, 0x7E8000
	0x03965DA8 LDR X8, [X8 + 0xD60]
	0x03965DAC ADRP X22, 0x7E8000
	0x03965DB0 ADRP X24, 0x7B6000
	0x03965DB4 LDR X0, [X8]
	0x03965DB8 LDR X22, [X22 + 0xD58]
	0x03965DBC LDR X24, [X24 + 0x600]
	0x03965DC0 BL 0x1C16F10
	0x03965DC4 LDR X1, [X22]
	0x03965DC8 MOV X22, X0
	0x03965DCC BL 0x2D9B014
	0x03965DD0 LDR X0, [X24]
	0x03965DD4 LDR W8, [X0 + 0xE0]
	0x03965DD8 CBNZ W8, 0x3965DE0
	0x03965DDC BL 0x1C16DFC
	0x03965DE0 ADD X0, X31, 0x18
	0x03965DE4 MOV W1, W31
	0x03965DE8 MOV W2, W31
	0x03965DEC MOV X3, X31
	0x03965DF0 BL 0x38FDC24
	0x03965DF4 LDR X9, [X23 + 0x28]
	0x03965DF8 CBZ X9, 0x39661A8
	0x03965DFC LDR W8, [X9 + 0x18]
	0x03965E00 CMP W8, 0x1
	0x03965E04 B.LT 0x396616C
	0x03965E08 ADRP X29, 0x78E000
	0x03965E0C ADRP X28, 0x78F000
	0x03965E10 LDR X29, [X29 + 0xE18]
	0x03965E14 LDR X28, [X28 + 0xDF8]
	0x03965E18 MOV W10, W31
	0x03965E1C STR X9, [X31]
	0x03965E20 CMP W10, W8
	0x03965E24 B.CS 0x39661AC
	0x03965E28 ADD X8, X9, W10, 0x3, SXTW
	0x03965E2C LDR X0, [X8 + 0x20]
	0x03965E30 CBZ X0, 0x39661A8
	0x03965E34 MOV X1, X31
	0x03965E38 STR W10, [X31 + 0xC]
	0x03965E3C BL 0x3900240
	0x03965E40 CBZ X0, 0x39661A8
	0x03965E44 ADRP X8, 0x7EA000
	0x03965E48 LDR X8, [X8 + 0xB08]
	0x03965E4C LDR X1, [X8]
	0x03965E50 BL 0x2533250
	0x03965E54 MOV X23, X0
	0x03965E58 CBZ X0, 0x396610C
	0x03965E5C LDR X8, [X23]
	0x03965E60 LDR X1, [X29]
	0x03965E64 LDRH W9, [X8 + 0x12E]
	0x03965E68 CBZ X9, 0x3965E8C
	0x03965E6C LDR X10, [X8 + 0xB0]
	0x03965E70 ADD X10, X10, 0x8
	0x03965E74 LDUR X11, [X10 - 0x8]
	0x03965E78 CMP X11, X1
	0x03965E7C B.EQ 0x3965E9C
	0x03965E80 SUBS X9, X9, 0x1
	0x03965E84 ADD X10, X10, 0x10
	0x03965E88 B.NE 0x3965E74
	0x03965E8C MOV X0, X23
	0x03965E90 MOV W2, W31
	0x03965E94 BL 0x1C5C788
	0x03965E98 B 0x3965EA8
	0x03965E9C LDRSW X9, [X10]
	0x03965EA0 ADD X8, X8, X9, 0x4, LSL
	0x03965EA4 ADD X0, X8, 0x138
	0x03965EA8 LDP X8, X1, [X0]
	0x03965EAC MOV X0, X23
	0x03965EB0 BLR X8
	0x03965EB4 TBZ X0, 0x0, 0x3966044
	0x03965EB8 LDR X8, [X23]
	0x03965EBC ADRP X10, 0x7E8000
	0x03965EC0 LDRH W9, [X8 + 0x12E]
	0x03965EC4 LDR X10, [X10 + 0xC90]
	0x03965EC8 LDR X1, [X10]
	0x03965ECC CBZ X9, 0x3965EF0
	0x03965ED0 LDR X10, [X8 + 0xB0]
	0x03965ED4 ADD X10, X10, 0x8
	0x03965ED8 LDUR X11, [X10 - 0x8]
	0x03965EDC CMP X11, X1
	0x03965EE0 B.EQ 0x3965F00
	0x03965EE4 SUBS X9, X9, 0x1
	0x03965EE8 ADD X10, X10, 0x10
	0x03965EEC B.NE 0x3965ED8
	0x03965EF0 MOV X0, X23
	0x03965EF4 MOV W2, W31
	0x03965EF8 BL 0x1C5C788
	0x03965EFC B 0x3965F0C
	0x03965F00 LDRSW X9, [X10]
	0x03965F04 ADD X8, X8, X9, 0x4, LSL
	0x03965F08 ADD X0, X8, 0x138
	0x03965F0C LDP X8, X1, [X0]
	0x03965F10 MOV X0, X23
	0x03965F14 BLR X8
	0x03965F18 CBZ X20, 0x39660DC
	0x03965F1C LDR X2, [X27]
	0x03965F20 MOV X24, X0
	0x03965F24 MOV X0, X20
	0x03965F28 MOV W1, W24
	0x03965F2C BL 0x2A0A2A8
	0x03965F30 LDR X2, [X27]
	0x03965F34 MOV W25, W0
	0x03965F38 UBFM X1, X24, 0x20, 0x3F
	0x03965F3C MOV X0, X20
	0x03965F40 BL 0x2A0A2A8
	0x03965F44 ADRP X8, 0x7B6000
	0x03965F48 LDR X8, [X8 + 0x600]
	0x03965F4C MOV W26, W0
	0x03965F50 LDR X0, [X8]
	0x03965F54 LDR W8, [X0 + 0xE0]
	0x03965F58 CBNZ W8, 0x3965F60
	0x03965F5C BL 0x1C16DFC
	0x03965F60 ADD X0, X31, 0x10
	0x03965F64 MOV W1, W25
	0x03965F68 MOV W2, W26
	0x03965F6C MOV X3, X31
	0x03965F70 BL 0x38FDC24
	0x03965F74 CBZ X21, 0x39660E4
	0x03965F78 LDR W1, [X31 + 0x10]
	0x03965F7C LDR X2, [X28]
	0x03965F80 MOV X0, X21
	0x03965F84 BL 0x2DAA59C
	0x03965F88 TBZ X0, 0x0, 0x3965FD4
	0x03965F8C CBZ X19, 0x39660FC
	0x03965F90 ADRP X9, 0x7E8000
	0x03965F94 LDR W10, [X19 + 0x1C]
	0x03965F98 LDR X8, [X19 + 0x10]
	0x03965F9C LDR X9, [X9 + 0xD68]
	0x03965FA0 ADD W10, W10, 0x1
	0x03965FA4 LDR X9, [X9]
	0x03965FA8 STR W10, [X19 + 0x1C]
	0x03965FAC CBZ X8, 0x39660EC
	0x03965FB0 LDRSW X10, [X19 + 0x18]
	0x03965FB4 LDR W11, [X8 + 0x18]
	0x03965FB8 CMP W10, W11
	0x03965FBC B.CS 0x396600C
	0x03965FC0 ADD W9, W10, 0x1
	0x03965FC4 ADD X8, X8, X10, 0x3, LSL
	0x03965FC8 STR W9, [X19 + 0x18]
	0x03965FCC STR X24, [X8 + 0x20]
	0x03965FD0 B 0x3966024
	0x03965FD4 LDR W1, [X31 + 0x14]
	0x03965FD8 LDR X2, [X28]
	0x03965FDC MOV X0, X21
	0x03965FE0 BL 0x2DAA59C
	0x03965FE4 TBZ X0, 0x0, 0x3965E5C
	0x03965FE8 CBZ X22, 0x3966104
	0x03965FEC ADRP X8, 0x7EA000
	0x03965FF0 LDR X1, [X31 + 0x18]
	0x03965FF4 LDR X8, [X8 + 0xA98]
	0x03965FF8 LDR X2, [X8]
	0x03965FFC MOV X0, X22
	0x03966000 BL 0x2D9B6BC
	0x03966004 TBNZ X0, 0x0, 0x3965E5C
	0x03966008 B 0x3965F8C
	0x0396600C LDR X8, [X9 + 0x20]
	0x03966010 LDR X8, [X8 + 0xC0]
	0x03966014 LDR X2, [X8 + 0x70]
	0x03966018 MOV X0, X19
	0x0396601C MOV X1, X24
	0x03966020 BL 0x2FB9F30
	0x03966024 CBZ X22, 0x39660F4
	0x03966028 ADRP X8, 0x7E7000
	0x0396602C LDR X1, [X31 + 0x10]
	0x03966030 LDR X8, [X8 + 0xD48]
	0x03966034 LDR X2, [X8]
	0x03966038 MOV X0, X22
	0x0396603C BL 0x2D9C138
	0x03966040 B 0x3965E5C
	0x03966044 MOV X24, X31
	0x03966048 MOVZ W25, 0x9
	0x0396604C CBZ X23, 0x39660B0
	0x03966050 LDR X8, [X23]
	0x03966054 ADRP X10, 0x78D000
	0x03966058 LDRH W9, [X8 + 0x12E]
	0x0396605C LDR X10, [X10 + 0xE00]
	0x03966060 LDR X1, [X10]
	0x03966064 CBZ X9, 0x3966088
	0x03966068 LDR X10, [X8 + 0xB0]
	0x0396606C ADD X10, X10, 0x8
	0x03966070 LDUR X11, [X10 - 0x8]
	0x03966074 CMP X11, X1
	0x03966078 B.EQ 0x3966098
	0x0396607C SUBS X9, X9, 0x1
	0x03966080 ADD X10, X10, 0x10
	0x03966084 B.NE 0x3966070
	0x03966088 MOV X0, X23
	0x0396608C MOV W2, W31
	0x03966090 BL 0x1C5C788
	0x03966094 B 0x39660A4
	0x03966098 LDRSW X9, [X10]
	0x0396609C ADD X8, X8, X9, 0x4, LSL
	0x039660A0 ADD X0, X8, 0x138
	0x039660A4 LDP X8, X1, [X0]
	0x039660A8 MOV X0, X23
	0x039660AC BLR X8
	0x039660B0 CBNZ X24, 0x39661B0
	0x039660B4 CMP W25, 0x9
	0x039660B8 B.EQ 0x39660C0
	0x039660BC CBNZ W25, 0x3966188
	0x039660C0 LDR X9, [X31]
	0x039660C4 LDR W10, [X31 + 0xC]
	0x039660C8 LDR W8, [X9 + 0x18]
	0x039660CC ADD W10, W10, 0x1
	0x039660D0 CMP W10, W8
	0x039660D4 B.LT 0x3965E20
	0x039660D8 B 0x396616C
	0x039660DC BL 0x1C16F20
	0x039660E0 B 0x39661C4
	0x039660E4 BL 0x1C16F20
	0x039660E8 B 0x39661C4
	0x039660EC BL 0x1C16F20
	0x039660F0 B 0x39661C4
	0x039660F4 BL 0x1C16F20
	0x039660F8 B 0x39661C4
	0x039660FC BL 0x1C16F20
	0x03966100 B 0x39661C4
	0x03966104 BL 0x1C16F20
	0x03966108 B 0x39661C4
	0x0396610C BL 0x1C16F20
	0x03966110 B 0x39661C4
	0x03966114 B 0x396614C
	0x03966118 B 0x396614C
	0x0396611C B 0x396614C
	0x03966120 B 0x396614C
	0x03966124 B 0x396614C
	0x03966128 B 0x396614C
	0x0396612C B 0x396614C
	0x03966130 B 0x396614C
	0x03966134 B 0x396614C
	0x03966138 B 0x396614C
	0x0396613C B 0x396614C
	0x03966140 B 0x396614C
	0x03966144 B 0x396614C
	0x03966148 B 0x396614C
	0x0396614C CMP W1, 0x1
	0x03966150 B.NE 0x39661B8
	0x03966154 BL 0x3EB1AD0
	0x03966158 LDR X24, [X0]
	0x0396615C BL 0x3EB1AE0
	0x03966160 MOV W25, W31
	0x03966164 CBNZ X23, 0x3966050
	0x03966168 B 0x39660B0
	0x0396616C CBZ X19, 0x39661A8
	0x03966170 ADRP X8, 0x7E9000
	0x03966174 LDR X8, [X8 + 0xB00]
	0x03966178 MOV X0, X19
	0x0396617C LDR X1, [X8]
	0x03966180 BL 0x2FBBCF0
	0x03966184 B 0x3966188
	0x03966188 LDP X20, X19, [X31 + 0x70]
	0x0396618C LDP X22, X21, [X31 + 0x60]
	0x03966190 LDP X24, X23, [X31 + 0x50]
	0x03966194 LDP X26, X25, [X31 + 0x40]
	0x03966198 LDP X28, X27, [X31 + 0x30]
	0x0396619C LDP X29, X30, [X31 + 0x20]
	0x039661A0 ADD X31, X31, 0x80
	0x039661A4 RET
	0x039661A8 BL 0x1C16F20
	0x039661AC BL 0x1C16F28
	0x039661B0 MOV X0, X24
	0x039661B4 BL 0x1C16F18
	0x039661B8 MOV X19, X0
	0x039661BC MOV X24, X31
	0x039661C0 B 0x39661C8
	0x039661C4 MOV X19, X0
	0x039661C8 CBZ X23, 0x396622C
	0x039661CC LDR X8, [X23]
	0x039661D0 ADRP X10, 0x78D000
	0x039661D4 LDRH W9, [X8 + 0x12E]
	0x039661D8 LDR X10, [X10 + 0xE00]
	0x039661DC LDR X1, [X10]
	0x039661E0 CBZ X9, 0x3966204
	0x039661E4 LDR X10, [X8 + 0xB0]
	0x039661E8 ADD X10, X10, 0x8
	0x039661EC LDUR X11, [X10 - 0x8]
	0x039661F0 CMP X11, X1
	0x039661F4 B.EQ 0x3966214
	0x039661F8 SUBS X9, X9, 0x1
	0x039661FC ADD X10, X10, 0x10
	0x03966200 B.NE 0x39661EC
	0x03966204 MOV X0, X23
	0x03966208 MOV W2, W31
	0x0396620C BL 0x1C5C788
	0x03966210 B 0x3966220
	0x03966214 LDRSW X9, [X10]
	0x03966218 ADD X8, X8, X9, 0x4, LSL
	0x0396621C ADD X0, X8, 0x138
	0x03966220 LDP X8, X1, [X0]
	0x03966224 MOV X0, X23
	0x03966228 BLR X8
	0x0396622C CBNZ X24, 0x3966238
	0x03966230 MOV X0, X19
	0x03966234 BL 0x1D2C690
	0x03966238 MOV X0, X24
	0x0396623C BL 0x1C16F18
	0x03966240 BL 0x1990590

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA7D000
	015 Move X22, 0x78F000
	016 Move W8, [X21+2498]
	017 Move X22, [X22+1432]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {83}
	024 Move X0, 0x7EA000
	025 Move X0, [X0+3408]
	026 Call 0x1C17CF4
	027 Move X0, 0x7EB000
	028 Move X0, [X0+2768]
	029 Call 0x1C17CF4
	030 Move X0, 0x7EB000
	031 Move X0, [X0+1192]
	032 Call 0x1C17CF4
	033 Move X0, 0x799000
	034 Move X0, [X0+2136]
	035 Call 0x1C17CF4
	036 Move X0, 0x799000
	037 Move X0, [X0+2192]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E9000
	040 Move X0, [X0+3200]
	041 Call 0x1C17CF4
	042 Move X0, 0x799000
	043 Move X0, [X0+2184]
	044 Call 0x1C17CF4
	045 Move X0, 0x7BA000
	046 Move X0, [X0+3000]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E9000
	049 Move X0, [X0+4000]
	050 Call 0x1C17CF4
	051 Move X0, 0x7EA000
	052 Move X0, [X0+680]
	053 Call 0x1C17CF4
	054 Move X0, 0x7EA000
	055 Move X0, [X0+1008]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E9000
	058 Move X0, [X0+4008]
	059 Call 0x1C17CF4
	060 Move X0, 0x7B7000
	061 Move X0, [X0+1952]
	062 Call 0x1C17CF4
	063 Move X0, 0x7B7000
	064 Move X0, [X0+1960]
	065 Call 0x1C17CF4
	066 Move X0, 0x7B7000
	067 Move X0, [X0+1936]
	068 Call 0x1C17CF4
	069 Move X0, 0x790000
	070 Move X0, [X0+3608]
	071 Call 0x1C17CF4
	072 Move X0, 0x78F000
	073 Move X0, [X0+1432]
	074 Call 0x1C17CF4
	075 Move X0, 0x7EB000
	076 Move X0, [X0+2776]
	077 Call 0x1C17CF4
	078 Move X0, 0x7EB000
	079 Move X0, [X0+2784]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+2498], W8
	083 Move X0, [X22]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X19
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Equality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {371}
	096 Compare X20, 0
	097 JumpIfEqual {378}
	098 Move X10, 0x7B7000
	099 Move X8, [X20]
	100 Move X10, [X10+1952]
	101 Move X21, 0x7EA000
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X10]
	104 Move X21, [X21+1008]
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X20
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X8, [X21]
	124 Move W1, W0
	125 Move X0, X8
	126 Call 0x1C17D6C
	127 Compare X0, 0
	128 JumpIfEqual {369}
	129 Move W8, [X0+24]
	130 Move X21, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X23, 0x7B7000
	133 Move X23, [X23+1960]
	134 Move X22, X31
	135 Compare X19, 0
	136 JumpIfEqual {369}
	137 Move X8, [X20]
	138 Move X24, [X19+40]
	139 Move X1, [X23]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move X0, X20
	150 Move W2, W31
	151 Call 0x1C5D788
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X2, [X0+8]
	157 Move X0, X20
	158 Move W1, W22
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X24, 0
	161 JumpIfEqual {369}
	162 Move W8, [X24+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W8, [X21+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X9, X24, W0
	167 Move X9, [X9+32]
	168 Add X10, X21, X22
	169 Add X22, X22, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X10+32], X9
	172 Move X24, 0x7EB000
	173 Move X24, [X24+2784]
	174 Move X0, [X24]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X24]
	180 Move X8, [X0+184]
	181 Move X27, 0x7E9000
	182 Move X26, 0x7BA000
	183 Move X25, 0x7EA000
	184 Move X22, [X8+8]
	185 Move X27, [X27+4000]
	186 Move X26, [X26+3000]
	187 Move X25, [X25+680]
	188 Compare X22, 0
	189 JumpIfNotEqual {211}
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X24]
	195 Move X9, 0x7E9000
	196 Move X8, [X0+184]
	197 Move X9, [X9+4008]
	198 Move X23, [X8]
	199 Move X0, [X9]
	200 Call 0x1C17F10
	201 Move X8, 0x7EB000
	202 Move X8, [X8+2776]
	203 Move X1, X23
	204 Move X3, X31
	205 Move X22, X0
	206 Move X2, [X8]
	207 Call Func`2<Object, Object>..ctor, X0, X1, X2
	208 Move X8, [X24]
	209 Move X8, [X8+184]
	210 Move [X8+8], X22
	211 Move X2, [X27]
	212 Move X0, X21
	213 Move X1, X22
	214 Call Enumerable.SelectMany, X0, X1
	215 Move X1, [X26]
	216 Call Enumerable.Distinct, X0
	217 Move X1, [X25]
	218 Call Enumerable.ToList, X0
	219 Compare X0, 0
	220 JumpIfEqual {369}
	221 Move X8, 0x7B7000
	222 Move X8, [X8+1936]
	223 Move X21, X0
	224 Move X1, [X8]
	225 Call List`1<Int32>.Sort, X0
	226 Compare X19, 0
	227 JumpIfEqual {369}
	228 Move X8, [X19+88]
	229 Compare X8, 0
	230 JumpIfEqual {369}
	231 Move X9, 0x7EB000
	232 Move X9, [X9+2768]
	233 Move X0, [X19+40]
	234 Move X22, 0x7EB000
	235 Move X23, 0x799000
	236 Move X2, [X9]
	237 Move X24, 0x799000
	238 Move W25, [X8+24]
	239 Move X22, [X22+1192]
	240 Move X23, [X23+2184]
	241 Move X24, [X24+2192]
	242 Move X1, X20
	243 Call 0x2180CA0, X0, X1
	244 Move X20, X0
	245 Move X0, X19
	246 Move X1, X31
	247 Move X2, X31
	248 Call ProBuilderMesh.GetVertices, X0, X1
	249 Move X2, [X22]
	250 Move X1, X21
	251 Call 0x2180F94, X0, X1
	252 Move X8, [X23]
	253 Move X27, X0
	254 Move X0, X8
	255 Call 0x1C17F10
	256 Move X1, [X24]
	257 Move X23, X0
	258 Call Dictionary`2<Int32, Int32>..ctor, X0
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X22, 0x7E9000
	261 Move X26, 0x798000
	262 Move X22, [X22+3408]
	263 Move X26, [X26+2136]
	264 Move W24, W31
	265 Move X2, [X22]
	266 Move X0, X21
	267 Move W1, W24
	268 Call 0x218001C, X0, X1
	269 Compare X23, 0
	270 JumpIfEqual {369}
	271 Move X3, [X26]
	272 Add W2, W0, 1
	273 Move X0, X23
	274 Move W1, W24
	275 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	276 Add W24, W24, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move [X31+8], X27
	279 Compare X20, 0
	280 JumpIfEqual {369}
	281 Move W8, [X20+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X27, 0x7E8000
	284 Move X27, [X27+3200]
	285 Move W26, W31
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Add X28, X20, W26
	288 Add X28, X28, 32
	289 Move X8, [X28]
	290 Compare X8, 0
	291 JumpIfEqual {369}
	292 Move X24, [X8+16]
	293 Compare X24, 0
	294 JumpIfEqual {369}
	295 Move X8, [X24+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X29, X31
	298 And X8, X8, 0
	299 Add X22, X24, 32
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Compare X23, 0
	302 JumpIfEqual {369}
	303 Move W25, [X22]
	304 Move X2, [X27]
	305 Move X0, X23
	306 Move W1, W25
	307 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	308 Subtract W8, W25, W0
	309 Move [X22], W8
	310 Move W8, [X24+24]
	311 Add X29, X29, 1
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move W8, [X20+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move X0, [X28]
	316 Compare X0, 0
	317 JumpIfEqual {369}
	318 Move X1, X24
	319 Move X2, X31
	320 Call Face.set_indexesInternal, X0, X1
	321 Move W8, [X20+24]
	322 Add W26, W26, 1
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X22, 0x78F000
	325 Move X22, [X22+3608]
	326 Move X1, [X31+8]
	327 Move X0, X19
	328 Move W2, W31
	329 Move X3, X31
	330 Call ProBuilderMesh.SetVertices, X0, X1, X2
	331 Move X0, X19
	332 Move X1, X31
	333 Call ProBuilderMesh.get_sharedVertexLookup, X0
	334 Move X1, X21
	335 Move X2, X31
	336 Call SharedVertex.SortedRemoveAndShift, X0, X1
	337 Move X1, X0
	338 Move X0, X19
	339 Move X2, X31
	340 Call ProBuilderMesh.set_sharedVerticesInternal, X0, X1
	341 Move X0, X19
	342 Move X1, X31
	343 Call ProBuilderMesh.get_sharedTextureLookup, X0
	344 Move X1, X21
	345 Move X2, X31
	346 Call SharedVertex.SortedRemoveAndShift, X0, X1
	347 Move X1, X0
	348 Move X0, X19
	349 Move X2, X31
	350 Call ProBuilderMesh.set_sharedTextures, X0, X1
	351 Move [X19+40], X20
	352 Move X1, [X22]
	353 Move X0, X21
	354 Move X20, [X31+96]
	355 Move X19, [X31+104]
	356 Move X22, [X31+80]
	357 Move X21, [X31+88]
	358 Move X24, [X31+64]
	359 Move X23, [X31+72]
	360 Move X26, [X31+48]
	361 Move X25, [X31+56]
	362 Move X28, [X31+32]
	363 Move X27, [X31+40]
	364 Move X29, [X31+16]
	365 Move X30, [X31+24]
	366 Add X31, X31, 112
	367 Call List`1<Int32>.ToArray, X0
	368 Return X0
	369 Call 0x1C17F20
	370 Call 0x1C17F28
	371 Move X0, 0x793000
	372 Move X0, [X0+1320]
	373 Call 0x1C17D08
	374 Call 0x1C17F10
	375 Move X19, X0
	376 Move X0, 0x7E8000
	377 Move X0, [X0+3728]
	378 Move X0, 0x793000
	379 Move X0, [X0+1320]
	380 Call 0x1C17D08
	381 Call 0x1C17F10
	382 Move X19, X0
	383 Move X0, 0x7EA000
	384 Move X0, [X0+2792]
	385 Call 0x1C17D08
	386 Move X1, X0
	387 Move X0, X19
	388 Move X2, X31
	389 Call ArgumentNullException..ctor, X0, X1
	390 Move X0, 0x7EA000
	391 Move X0, [X0+2800]
	392 Call 0x1C17D08
	393 Move X1, X0
	394 Move X0, X19
	395 Call 0x1C17DEC

Method: System.Int32[] RemoveDegenerateTriangles(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03966244 SUB X31, X31, 0x70
	0x03966248 STP X29, X30, [X31 + 0x10]
	0x0396624C STP X28, X27, [X31 + 0x20]
	0x03966250 STP X26, X25, [X31 + 0x30]
	0x03966254 STP X24, X23, [X31 + 0x40]
	0x03966258 STP X22, X21, [X31 + 0x50]
	0x0396625C STP X20, X19, [X31 + 0x60]
	0x03966260 ADRP X22, 0xA7B000
	0x03966264 ADRP X21, 0x78D000
	0x03966268 LDRB W8, [X22 + 0x9CF]
	0x0396626C LDR X21, [X21 + 0x598]
	0x03966270 MOV X20, X1
	0x03966274 MOV X19, X0
	0x03966278 TBNZ X8, 0x0, 0x3966398
	0x0396627C ADRP X0, 0x7E9000
	0x03966280 LDR X0, [X0 + 0xB10]
	0x03966284 BL 0x1C16CF4
	0x03966288 ADRP X0, 0x7E9000
	0x0396628C LDR X0, [X0 + 0xB18]
	0x03966290 BL 0x1C16CF4
	0x03966294 ADRP X0, 0x7E9000
	0x03966298 LDR X0, [X0 + 0xB20]
	0x0396629C BL 0x1C16CF4
	0x039662A0 ADRP X0, 0x7E7000
	0x039662A4 LDR X0, [X0 + 0xC80]
	0x039662A8 BL 0x1C16CF4
	0x039662AC ADRP X0, 0x7E9000
	0x039662B0 LDR X0, [X0 + 0xB28]
	0x039662B4 BL 0x1C16CF4
	0x039662B8 ADRP X0, 0x7B5000
	0x039662BC LDR X0, [X0 + 0x600]
	0x039662C0 BL 0x1C16CF4
	0x039662C4 ADRP X0, 0x7E9000
	0x039662C8 LDR X0, [X0 + 0x8A0]
	0x039662CC BL 0x1C16CF4
	0x039662D0 ADRP X0, 0x7E9000
	0x039662D4 LDR X0, [X0 + 0xB30]
	0x039662D8 BL 0x1C16CF4
	0x039662DC ADRP X0, 0x7E9000
	0x039662E0 LDR X0, [X0 + 0x60]
	0x039662E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA7C000
	007 Move X22, 0x78F000
	008 Move X20, 0x792000
	009 Move W8, [X21+2499]
	010 Move X22, [X22+3632]
	011 Move X20, [X20+2928]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x78F000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X0, 0x792000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x78F000
	024 Move X0, [X0+3632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2499], W8
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Int32>..ctor, X0
	033 Move X0, X19
	034 Move X1, X20
	035 Move X2, X31
	036 Call MeshValidation.RemoveDegenerateTriangles, X0, X1
	037 Compare X20, 0
	038 JumpIfEqual {50}
	039 Move X8, 0x78F000
	040 Move X8, [X8+3608]
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, [X8]
	047 Move X30, [X31+48]
	048 Call List`1<Int32>.ToArray, X0
	049 Return X0
	050 Call 0x1C17F20

Method: System.Int32[] RemoveUnusedVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x039662E8 ADRP X0, 0x7E9000
	0x039662EC LDR X0, [X0 + 0xB38]
	0x039662F0 BL 0x1C16CF4
	0x039662F4 ADRP X0, 0x7E9000
	0x039662F8 LDR X0, [X0 + 0x8A8]
	0x039662FC BL 0x1C16CF4
	0x03966300 ADRP X0, 0x7E9000
	0x03966304 LDR X0, [X0 + 0xB40]
	0x03966308 BL 0x1C16CF4
	0x0396630C ADRP X0, 0x7E9000
	0x03966310 LDR X0, [X0 + 0xB48]
	0x03966314 BL 0x1C16CF4
	0x03966318 ADRP X0, 0x7E7000
	0x0396631C LDR X0, [X0 + 0xD68]
	0x03966320 BL 0x1C16CF4
	0x03966324 ADRP X0, 0x7E7000
	0x03966328 LDR X0, [X0 + 0xD70]
	0x0396632C BL 0x1C16CF4
	0x03966330 ADRP X0, 0x7E8000
	0x03966334 LDR X0, [X0 + 0xFE0]
	0x03966338 BL 0x1C16CF4
	0x0396633C ADRP X0, 0x7E8000
	0x03966340 LDR X0, [X0 + 0xFE8]
	0x03966344 BL 0x1C16CF4
	0x03966348 ADRP X0, 0x7E7000
	0x0396634C LDR X0, [X0 + 0xD78]
	0x03966350 BL 0x1C16CF4
	0x03966354 ADRP X0, 0x78D000
	0x03966358 LDR X0, [X0 + 0x598]
	0x0396635C BL 0x1C16CF4
	0x03966360 ADRP X0, 0x7E9000
	0x03966364 LDR X0, [X0 + 0xB50]
	0x03966368 BL 0x1C16CF4
	0x0396636C ADRP X0, 0x7E9000
	0x03966370 LDR X0, [X0 + 0xB58]
	0x03966374 BL 0x1C16CF4
	0x03966378 ADRP X0, 0x7E9000
	0x0396637C LDR X0, [X0 + 0xB60]
	0x03966380 BL 0x1C16CF4
	0x03966384 ADRP X0, 0x7E9000
	0x03966388 LDR X0, [X0 + 0xB68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA7C000
	007 Move X22, 0x78F000
	008 Move X20, 0x792000
	009 Move W8, [X21+2500]
	010 Move X22, [X22+3632]
	011 Move X20, [X20+2928]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x78F000
	018 Move X0, [X0+3608]
	019 Call 0x1C17CF4
	020 Move X0, 0x792000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x78F000
	024 Move X0, [X0+3632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2500], W8
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Int32>..ctor, X0
	033 Move X0, X19
	034 Move X1, X20
	035 Move X2, X31
	036 Call MeshValidation.RemoveUnusedVertices, X0, X1
	037 Compare X20, 0
	038 JumpIfEqual {50}
	039 Move X8, 0x78F000
	040 Move X8, [X8+3608]
	041 Move X0, X20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, [X8]
	047 Move X30, [X31+48]
	048 Call List`1<Int32>.ToArray, X0
	049 Return X0
	050 Call 0x1C17F20

