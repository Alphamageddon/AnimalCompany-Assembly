Type: UnityEngine.ProBuilder.MeshOperations.ElementSelection

Method: System.Void GetNeighborFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge edge, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> neighborFaces)

Disassembly:
	0x0396668C CMP W26, W22
	0x03966690 B.NE 0x39664D4
	0x03966694 ADRP X23, 0x7E9000
	0x03966698 LDR X23, [X23 + 0xB68]
	0x0396669C LDR X0, [X23]
	0x039666A0 LDR W8, [X0 + 0xE0]
	0x039666A4 CBNZ W8, 0x39666B0
	0x039666A8 BL 0x1C16DFC
	0x039666AC LDR X0, [X23]
	0x039666B0 LDR X8, [X0 + 0xB8]
	0x039666B4 ADRP X22, 0x7E9000
	0x039666B8 LDR X20, [X8 + 0x10]
	0x039666BC LDR X22, [X22 + 0xB38]
	0x039666C0 CBNZ X20, 0x3966714
	0x039666C4 LDR W8, [X0 + 0xE0]
	0x039666C8 CBNZ W8, 0x39666D4
	0x039666CC BL 0x1C16DFC
	0x039666D0 LDR X0, [X23]
	0x039666D4 ADRP X9, 0x7E9000
	0x039666D8 LDR X8, [X0 + 0xB8]
	0x039666DC LDR X9, [X9 + 0xB40]
	0x039666E0 LDR X21, [X8]
	0x039666E4 LDR X0, [X9]
	0x039666E8 BL 0x1C16F10
	0x039666EC ADRP X8, 0x7E9000
	0x039666F0 LDR X8, [X8 + 0xB58]
	0x039666F4 MOV X1, X21
	0x039666F8 MOV X3, X31
	0x039666FC MOV X20, X0
	0x03966700 LDR X2, [X8]
	0x03966704 BL 0x2D29550
	0x03966708 LDR X8, [X23]
	0x0396670C LDR X8, [X8 + 0xB8]
	0x03966710 STR X20, [X8 + 0x10]
	0x03966714 LDR X2, [X22]
	0x03966718 MOV X0, X19
	0x0396671C MOV X1, X20
	0x03966720 BL 0x21D7FCC
	0x03966724 LDR X8, [X23]
	0x03966728 MOV X19, X0
	0x0396672C LDR W9, [X8 + 0xE0]
	0x03966730 CBNZ W9, 0x3966740
	0x03966734 MOV X0, X8
	0x03966738 BL 0x1C16DFC
	0x0396673C LDR X8, [X23]
	0x03966740 LDR X9, [X8 + 0xB8]
	0x03966744 ADRP X22, 0x7E9000
	0x03966748 LDR X20, [X9 + 0x18]
	0x0396674C LDR X22, [X22 + 0xB30]
	0x03966750 CBNZ X20, 0x39667A8
	0x03966754 LDR W9, [X8 + 0xE0]
	0x03966758 CBNZ W9, 0x3966768
	0x0396675C MOV X0, X8
	0x03966760 BL 0x1C16DFC
	0x03966764 LDR X8, [X23]
	0x03966768 ADRP X9, 0x7E9000
	0x0396676C LDR X8, [X8 + 0xB8]
	0x03966770 LDR X9, [X9 + 0xB48]
	0x03966774 LDR X21, [X8]
	0x03966778 LDR X0, [X9]
	0x0396677C BL 0x1C16F10
	0x03966780 ADRP X8, 0x7E9000
	0x03966784 LDR X8, [X8 + 0xB60]
	0x03966788 MOV X1, X21
	0x0396678C MOV X3, X31
	0x03966790 MOV X20, X0
	0x03966794 LDR X2, [X8]
	0x03966798 BL 0x2D295F0
	0x0396679C LDR X8, [X23]
	0x039667A0 LDR X8, [X8 + 0xB8]
	0x039667A4 STR X20, [X8 + 0x18]
	0x039667A8 LDR X2, [X22]
	0x039667AC MOV X0, X19
	0x039667B0 MOV X1, X20
	0x039667B4 BL 0x21CA134
	0x039667B8 LDP X20, X19, [X31 + 0x60]
	0x039667BC LDP X22, X21, [X31 + 0x50]
	0x039667C0 LDP X24, X23, [X31 + 0x40]
	0x039667C4 LDP X26, X25, [X31 + 0x30]
	0x039667C8 LDP X28, X27, [X31 + 0x20]
	0x039667CC LDP X29, X30, [X31 + 0x10]
	0x039667D0 ADD X31, X31, 0x70
	0x039667D4 RET
	0x039667D8 BL 0x1C16F20
	0x039667DC ADRP X0, 0x792000
	0x039667E0 LDR X0, [X0 + 0x528]
	0x039667E4 BL 0x1C16D08
	0x039667E8 BL 0x1C16F10
	0x039667EC MOV X19, X0
	0x039667F0 ADRP X0, 0x7E7000
	0x039667F4 LDR X0, [X0 + 0xE90]
	0x039667F8 B 0x3966818
	0x039667FC ADRP X0, 0x792000
	0x03966800 LDR X0, [X0 + 0x528]
	0x03966804 BL 0x1C16D08
	0x03966808 BL 0x1C16F10
	0x0396680C MOV X19, X0
	0x03966810 ADRP X0, 0x7E8000
	0x03966814 LDR X0, [X0 + 0x640]
	0x03966818 BL 0x1C16D08
	0x0396681C MOV X1, X0
	0x03966820 MOV X0, X19
	0x03966824 MOV X2, X31
	0x03966828 BL 0x330E100
	0x0396682C ADRP X0, 0x7E9000
	0x03966830 LDR X0, [X0 + 0xB70]
	0x03966834 BL 0x1C16D08
	0x03966838 MOV X1, X0
	0x0396683C MOV X0, X19
	0x03966840 BL 0x1C16DEC
	0x03966844 STR X30, [X31 - 0x50]!
	0x03966848 STP X26, X25, [X31 + 0x10]
	0x0396684C STP X24, X23, [X31 + 0x20]
	0x03966850 STP X22, X21, [X31 + 0x30]
	0x03966854 STP X20, X19, [X31 + 0x40]
	0x03966858 ADRP X19, 0xA7B000
	0x0396685C LDRB W8, [X19 + 0x9D0]
	0x03966860 MOV X20, X1
	0x03966864 MOV X21, X0
	0x03966868 TBNZ X8, 0x0, 0x39668E0
	0x0396686C ADRP X0, 0x7E7000
	0x03966870 LDR X0, [X0 + 0xD40]
	0x03966874 BL 0x1C16CF4
	0x03966878 ADRP X0, 0x7E7000
	0x0396687C LDR X0, [X0 + 0xD08]
	0x03966880 BL 0x1C16CF4
	0x03966884 ADRP X0, 0x78E000
	0x03966888 LDR X0, [X0 + 0xE58]
	0x0396688C BL 0x1C16CF4
	0x03966890 ADRP X0, 0x78E000
	0x03966894 LDR X0, [X0 + 0xE10]
	0x03966898 BL 0x1C16CF4
	0x0396689C ADRP X0, 0x78E000
	0x039668A0 LDR X0, [X0 + 0xE18]
	0x039668A4 BL 0x1C16CF4
	0x039668A8 ADRP X0, 0x791000
	0x039668AC LDR X0, [X0 + 0xB70]
	0x039668B0 BL 0x1C16CF4
	0x039668B4 ADRP X0, 0x78E000
	0x039668B8 LDR X0, [X0 + 0xE28]
	0x039668BC BL 0x1C16CF4
	0x039668C0 ADRP X0, 0x78E000
	0x039668C4 LDR X0, [X0 + 0xE30]
	0x039668C8 BL 0x1C16CF4
	0x039668CC ADRP X0, 0x7E9000
	0x039668D0 LDR X0, [X0 + 0xB78]
	0x039668D4 BL 0x1C16CF4
	0x039668D8 MOVZ W8, 0x1
	0x039668DC STRB W8, [X19 + 0x9D0]
	0x039668E0 ADRP X22, 0x7E7000
	0x039668E4 LDR X22, [X22 + 0xD40]
	0x039668E8 CBZ X20, 0x3966934
	0x039668EC ADRP X10, 0x7E7000
	0x039668F0 LDR X8, [X20]
	0x039668F4 LDR X10, [X10 + 0xD08]
	0x039668F8 LDRH W9, [X8 + 0x12E]
	0x039668FC LDR X1, [X10]
	0x03966900 CBZ X9, 0x3966924
	0x03966904 LDR X10, [X8 + 0xB0]
	0x03966908 ADD X10, X10, 0x8
	0x0396690C LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA7C000
	015 Move W8, [X21+2507]
	016 Move X19, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x7E8000
	024 Move X0, [X0+3200]
	025 Call 0x1C17CF4
	026 Move X0, 0x7B6000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E8000
	030 Move X0, [X0+3600]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2507], W8
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Compare X20, 0
	037 JumpIfEqual {162}
	038 Move X0, X20
	039 Move X1, X31
	040 Call ProBuilderMesh.get_sharedVertexLookup, X0
	041 Compare X0, 0
	042 JumpIfEqual {162}
	043 Move X24, 0x7E8000
	044 Move X24, [X24+3200]
	045 Move X25, 0x7B6000
	046 Move W1, W22
	047 Move X21, X0
	048 Move X2, [X24]
	049 Move X25, [X25+1536]
	050 Move X23, X22
	051 ShiftRight X23, 32
	052 And X23, X23, 0x7FFFFFFF
	053 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	054 Move X2, [X24]
	055 Move W22, W0
	056 Move X0, X21
	057 Move W1, W23
	058 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	059 Move X8, [X25]
	060 Move W23, W0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Add X0, X31, 8
	067 Move W1, W22
	068 Move W2, W23
	069 Move X3, X31
	070 Call Edge..ctor, X0, X1, X2
	071 Add X0, X31, 0
	072 Move W1, W31
	073 Move W2, W31
	074 Move X3, X31
	075 Call Edge..ctor, X0, X1, X2
	076 Move X8, [X20+40]
	077 Compare X8, 0
	078 JumpIfEqual {162}
	079 Move X25, 0x7E8000
	080 Move X25, [X25+3600]
	081 Move W23, W31
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X26, W23
	086 Add X8, X8, X26
	087 Move X0, [X8+32]
	088 Compare X0, 0
	089 JumpIfEqual {162}
	090 Move X1, X31
	091 Call Face.get_edgesInternal, X0
	092 Compare X0, 0
	093 JumpIfEqual {162}
	094 Move X8, [X0+24]
	095 Move X22, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X27, X31
	098 And X8, X8, 0
	099 Add X28, X22, 32
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move V0, [X28]
	102 Move X2, [X24]
	103 Move W29, [X31+8]
	104 Move X0, X21
	105 Move W1, S0
	106 Move [X31], D0
	107 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move W1, [X31+4]
	110 Move X2, [X24]
	111 Move W29, [X31+12]
	112 Move X0, X21
	113 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W1, [X31+4]
	116 Move W29, [X31+8]
	117 Move X2, [X24]
	118 Move X0, X21
	119 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W1, [X31]
	122 Move X2, [X24]
	123 Move W29, [X31+12]
	124 Move X0, X21
	125 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, [X22+24]
	128 Add X27, X27, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X20+40]
	131 Compare X8, 0
	132 JumpIfEqual {162}
	133 Move W9, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Compare X19, 0
	136 JumpIfEqual {162}
	137 Add X8, X8, X26
	138 Move W10, [X19+28]
	139 Move X1, [X8+32]
	140 Move X8, [X19+16]
	141 Move X9, [X25]
	142 Add W10, W10, 1
	143 Move [X19+28], W10
	144 Compare X8, 0
	145 JumpIfEqual {162}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Move W11, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add W9, W10, 1
	150 Add X8, X8, X10
	151 Move [X19+24], W9
	152 Move [X8+32], X1
	153 Move X8, [X9+32]
	154 Move X0, X19
	155 Move X8, [X8+192]
	156 Move X2, [X8+112]
	157 Call List`1<Object>.AddWithResize, X0, X1
	158 Move X8, [X20+40]
	159 Add W23, W23, 1
	160 Compare X8, 0
	161 JumpIfNotEqual {82}
	162 Call 0x1C17F20
	163 Move X20, [X31+96]
	164 Move X19, [X31+104]
	165 Move X22, [X31+80]
	166 Move X21, [X31+88]
	167 Move X24, [X31+64]
	168 Move X23, [X31+72]
	169 Move X26, [X31+48]
	170 Move X25, [X31+56]
	171 Move X28, [X31+32]
	172 Move X27, [X31+40]
	173 Move X29, [X31+16]
	174 Move X30, [X31+24]
	175 Add X31, X31, 112
	176 Return 
	177 Call 0x1C17F28

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.SimpleTuple`2<UnityEngine.ProBuilder.Face, UnityEngine.ProBuilder.Edge>> GetNeighborFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge edge)

Disassembly:
	0x039544E8 ADRP X0, 0x7FB000
	0x039544EC LDR X0, [X0 + 0x3A0]
	0x039544F0 BL 0x1C16CF4
	0x039544F4 ADRP X0, 0x7FB000
	0x039544F8 LDR X0, [X0 + 0x3A8]
	0x039544FC BL 0x1C16CF4
	0x03954500 ADRP X0, 0x7A9000
	0x03954504 LDR X0, [X0 + 0x858]
	0x03954508 BL 0x1C16CF4
	0x0395450C ADRP X0, 0x7FB000
	0x03954510 LDR X0, [X0 + 0x3B0]
	0x03954514 BL 0x1C16CF4
	0x03954518 ADRP X0, 0x7A9000
	0x0395451C LDR X0, [X0 + 0x870]
	0x03954520 BL 0x1C16CF4
	0x03954524 ADRP X0, 0x7FB000
	0x03954528 LDR X0, [X0 + 0x3B8]
	0x0395452C BL 0x1C16CF4
	0x03954530 ADRP X0, 0x7FA000
	0x03954534 LDR X0, [X0 + 0xD78]
	0x03954538 BL 0x1C16CF4
	0x0395453C ADRP X0, 0x7F9000
	0x03954540 LDR X0, [X0 + 0xC80]
	0x03954544 BL 0x1C16CF4
	0x03954548 ADRP X0, 0x7FB000
	0x0395454C LDR X0, [X0 + 0x3C0]
	0x03954550 BL 0x1C16CF4
	0x03954554 ADRP X0, 0x7FB000
	0x03954558 LDR X0, [X0 + 0x3C8]
	0x0395455C BL 0x1C16CF4
	0x03954560 ADRP X0, 0x7FB000
	0x03954564 LDR X0, [X0 + 0x3D0]
	0x03954568 BL 0x1C16CF4
	0x0395456C ADRP X0, 0x7C7000
	0x03954570 LDR X0, [X0 + 0x600]
	0x03954574 BL 0x1C16CF4
	0x03954578 ADRP X0, 0x7FB000
	0x0395457C LDR X0, [X0 + 0x328]
	0x03954580 BL 0x1C16CF4
	0x03954584 ADRP X0, 0x7FB000
	0x03954588 LDR X0, [X0 + 0x3D8]
	0x0395458C BL 0x1C16CF4
	0x03954590 ADRP X0, 0x7FB000
	0x03954594 LDR X0, [X0 + 0x3E0]
	0x03954598 BL 0x1C16CF4
	0x0395459C ADRP X0, 0x7CA000
	0x039545A0 LDR X0, [X0 + 0xBB8]
	0x039545A4 BL 0x1C16CF4
	0x039545A8 ADRP X0, 0x7FB000
	0x039545AC LDR X0, [X0 + 0x3E8]
	0x039545B0 BL 0x1C16CF4
	0x039545B4 ADRP X0, 0x7FB000
	0x039545B8 LDR X0, [X0 + 0x60]
	0x039545BC BL 0x1C16CF4
	0x039545C0 ADRP X0, 0x7FB000
	0x039545C4 LDR X0, [X0 + 0x3F0]
	0x039545C8 BL 0x1C16CF4
	0x039545CC ADRP X0, 0x7FB000
	0x039545D0 LDR X0, [X0 + 0x3F8]
	0x039545D4 BL 0x1C16CF4
	0x039545D8 ADRP X0, 0x7FA000
	0x039545DC LDR X0, [X0 + 0x2A8]
	0x039545E0 BL 0x1C16CF4
	0x039545E4 ADRP X0, 0x7FB000
	0x039545E8 LDR X0, [X0 + 0x400]
	0x039545EC BL 0x1C16CF4
	0x039545F0 ADRP X0, 0x7FB000
	0x039545F4 LDR X0, [X0 + 0x408]
	0x039545F8 BL 0x1C16CF4
	0x039545FC ADRP X0, 0x7FB000
	0x03954600 LDR X0, [X0 + 0x410]
	0x03954604 BL 0x1C16CF4
	0x03954608 ADRP X0, 0x7FB000
	0x0395460C LDR X0, [X0 + 0x418]
	0x03954610 BL 0x1C16CF4
	0x03954614 ADRP X0, 0x7FB000
	0x03954618 LDR X0, [X0 + 0x420]
	0x0395461C BL 0x1C16CF4
	0x03954620 ADRP X0, 0x7FB000
	0x03954624 LDR X0, [X0 + 0x428]
	0x03954628 BL 0x1C16CF4
	0x0395462C ADRP X0, 0x7FB000
	0x03954630 LDR X0, [X0 + 0x1F0]
	0x03954634 BL 0x1C16CF4
	0x03954638 ADRP X0, 0x7FA000
	0x0395463C LDR X0, [X0 + 0x560]
	0x03954640 BL 0x1C16CF4
	0x03954644 ADRP X0, 0x7FB000
	0x03954648 LDR X0, [X0 + 0x430]
	0x0395464C BL 0x1C16CF4
	0x03954650 ADRP X0, 0x7A0000
	0x03954654 LDR X0, [X0 + 0xE58]
	0x03954658 BL 0x1C16CF4
	0x0395465C ADRP X0, 0x7FA000
	0x03954660 LDR X0, [X0 + 0x688]
	0x03954664 BL 0x1C16CF4
	0x03954668 ADRP X0, 0x7F9000
	0x0395466C LDR X0, [X0 + 0xE08]
	0x03954670 BL 0x1C16CF4
	0x03954674 ADRP X0, 0x7A0000
	0x03954678 LDR X0, [X0 + 0xE10]
	0x0395467C BL 0x1C16CF4
	0x03954680 ADRP X0, 0x7FB000
	0x03954684 LDR X0, [X0 + 0x438]
	0x03954688 BL 0x1C16CF4
	0x0395468C ADRP X0, 0x7FB000
	0x03954690 LDR X0, [X0 + 0x1C0]
	0x03954694 BL 0x1C16CF4
	0x03954698 ADRP X0, 0x7FB000
	0x0395469C LDR X0, [X0 + 0x440]
	0x039546A0 BL 0x1C16CF4
	0x039546A4 ADRP X0, 0x7FB000
	0x039546A8 LDR X0, [X0 + 0x448]
	0x039546AC BL 0x1C16CF4
	0x039546B0 ADRP X0, 0x7FB000
	0x039546B4 LDR X0, [X0 + 0x450]
	0x039546B8 BL 0x1C16CF4
	0x039546BC ADRP X0, 0x7FB000
	0x039546C0 LDR X0, [X0 + 0x458]
	0x039546C4 BL 0x1C16CF4
	0x039546C8 ADRP X0, 0x7FB000
	0x039546CC LDR X0, [X0 + 0x380]
	0x039546D0 BL 0x1C16CF4
	0x039546D4 ADRP X0, 0x7FB000
	0x039546D8 LDR X0, [X0 + 0x460]
	0x039546DC BL 0x1C16CF4
	0x039546E0 ADRP X0, 0x7A3000
	0x039546E4 LDR X0, [X0 + 0xB70]
	0x039546E8 BL 0x1C16CF4
	0x039546EC ADRP X0, 0x7FB000
	0x039546F0 LDR X0, [X0 + 0x468]
	0x039546F4 BL 0x1C16CF4
	0x039546F8 ADRP X0, 0x7F9000
	0x039546FC LDR X0, [X0 + 0xDE0]
	0x03954700 BL 0x1C16CF4
	0x03954704 ADRP X0, 0x7FB000
	0x03954708 LDR X0, [X0 + 0x1C8]
	0x0395470C BL 0x1C16CF4
	0x03954710 ADRP X0, 0x7FB000
	0x03954714 LDR X0, [X0 + 0x470]
	0x03954718 BL 0x1C16CF4
	0x0395471C ADRP X0, 0x7FA000
	0x03954720 LDR X0, [X0 + 0xC40]
	0x03954724 BL 0x1C16CF4
	0x03954728 ADRP X0, 0x7F9000
	0x0395472C LDR X0, [X0 + 0xE18]
	0x03954730 BL 0x1C16CF4
	0x03954734 ADRP X0, 0x7A0000
	0x03954738 LDR X0, [X0 + 0xE28]
	0x0395473C BL 0x1C16CF4
	0x03954740 ADRP X0, 0x7FA000
	0x03954744 LDR X0, [X0 + 0xFE0]
	0x03954748 BL 0x1C16CF4
	0x0395474C ADRP X0, 0x7FA000
	0x03954750 LDR X0, [X0 + 0xC48]
	0x03954754 BL 0x1C16CF4
	0x03954758 ADRP X0, 0x7FB000
	0x0395475C LDR X0, [X0 + 0x1D0]
	0x03954760 BL 0x1C16CF4
	0x03954764 ADRP X0, 0x7FA000
	0x03954768 LDR X0, [X0 + 0xFE8]
	0x0395476C BL 0x1C16CF4
	0x03954770 ADRP X0, 0x7C9000
	0x03954774 LDR X0, [X0 + 0xF38]
	0x03954778 BL 0x1C16CF4
	0x0395477C ADRP X0, 0x7FB000
	0x03954780 LDR X0, [X0 + 0x478]
	0x03954784 BL 0x1C16CF4
	0x03954788 ADRP X0, 0x7A0000
	0x0395478C LDR X0, [X0 + 0xE30]
	0x03954790 BL 0x1C16CF4
	0x03954794 ADRP X0, 0x7FB000
	0x03954798 LDR X0, [X0 + 0x480]
	0x0395479C BL 0x1C16CF4
	0x039547A0 ADRP X0, 0x7F9000
	0x039547A4 LDR X0, [X0 + 0xDE8]
	0x039547A8 BL 0x1C16CF4
	0x039547AC ADRP X0, 0x7F9000
	0x039547B0 LDR X0, [X0 + 0xAD0]
	0x039547B4 BL 0x1C16CF4
	0x039547B8 ADRP X0, 0x79F000
	0x039547BC LDR X0, [X0 + 0x598]
	0x039547C0 BL 0x1C16CF4
	0x039547C4 ADRP X0, 0x7FB000
	0x039547C8 LDR X0, [X0 + 0x338]
	0x039547CC BL 0x1C16CF4
	0x039547D0 ADRP X0, 0x7FB000
	0x039547D4 LDR X0, [X0 + 0x488]
	0x039547D8 BL 0x1C16CF4
	0x039547DC ADRP X0, 0x7FB000
	0x039547E0 LDR X0, [X0 + 0x398]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X23, 0xA8E000
	015 Move X21, 0x7FC000
	016 Move X20, 0x7FC000
	017 Move W8, [X23+2508]
	018 Move X21, [X21+856]
	019 Move X20, [X20+864]
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0x7FA000
	027 Move X0, [X0+3200]
	028 Call 0x1C17CF4
	029 Move X0, 0x7C8000
	030 Move X0, [X0+1536]
	031 Call 0x1C17CF4
	032 Move X0, 0x7FC000
	033 Move X0, [X0+872]
	034 Call 0x1C17CF4
	035 Move X0, 0x7FC000
	036 Move X0, [X0+864]
	037 Call 0x1C17CF4
	038 Move X0, 0x7FC000
	039 Move X0, [X0+856]
	040 Call 0x1C17CF4
	041 Move X0, 0x7FA000
	042 Move X0, [X0+3328]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+2508], W8
	046 Move X0, [X21]
	047 Move [X31+16], X31
	048 Move [X31+24], X31
	049 Call 0x1C17F10
	050 Move X1, [X20]
	051 Move X20, X0
	052 Call List`1<SimpleTuple`2<Object, Edge>>..ctor, X0
	053 Compare X19, 0
	054 JumpIfEqual {193}
	055 Move X0, X19
	056 Move X1, X31
	057 Call ProBuilderMesh.get_sharedVertexLookup, X0
	058 Compare X0, 0
	059 JumpIfEqual {193}
	060 Move X24, 0x7FA000
	061 Move X24, [X24+3200]
	062 Move X25, 0x7C8000
	063 Move W1, W22
	064 Move X21, X0
	065 Move X2, [X24]
	066 Move X25, [X25+1536]
	067 Move X23, X22
	068 ShiftRight X23, 32
	069 And X23, X23, 0x7FFFFFFF
	070 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	071 Move X2, [X24]
	072 Move W22, W0
	073 Move X0, X21
	074 Move W1, W23
	075 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	076 Move X8, [X25]
	077 Move W23, W0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Add X0, X31, 24
	084 Move W1, W22
	085 Move W2, W23
	086 Move X3, X31
	087 Call Edge..ctor, X0, X1, X2
	088 Add X0, X31, 16
	089 Move W1, W31
	090 Move W2, W31
	091 Move X3, X31
	092 Call Edge..ctor, X0, X1, X2
	093 Move X8, [X19+40]
	094 Compare X8, 0
	095 JumpIfEqual {193}
	096 Move X26, 0x7FC000
	097 Move X26, [X26+872]
	098 Move W23, W31
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X27, W23
	103 Add X8, X8, X27
	104 Move X0, [X8+32]
	105 Compare X0, 0
	106 JumpIfEqual {193}
	107 Move X1, X31
	108 Call Face.get_edgesInternal, X0
	109 Compare X0, 0
	110 JumpIfEqual {193}
	111 Move X8, [X0+24]
	112 Move X22, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X29, X31
	115 And X8, X8, 0
	116 Add X28, X22, 32
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move V0, [X28]
	119 Move X2, [X24]
	120 Move W25, [X31+24]
	121 Move X0, X21
	122 Move W1, S0
	123 Move [X31+16], D0
	124 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W1, [X31+20]
	127 Move X2, [X24]
	128 Move W25, [X31+28]
	129 Move X0, X21
	130 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W1, [X31+20]
	133 Move W25, [X31+24]
	134 Move X2, [X24]
	135 Move X0, X21
	136 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W1, [X31+16]
	139 Move X2, [X24]
	140 Move W25, [X31+28]
	141 Move X0, X21
	142 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W8, [X22+24]
	145 Add X29, X29, 1
	146 Add X28, X28, 8
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X19+40]
	149 Compare X8, 0
	150 JumpIfEqual {193}
	151 Move W9, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W9, [X22+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X8, X8, X27
	156 Move X1, [X8+32]
	157 Move X8, 0x7FA000
	158 Move X2, [X28]
	159 Move X8, [X8+3328]
	160 Add X0, X31, 0
	161 Move [X31], X31
	162 Move [X31+8], X31
	163 Move X3, [X8]
	164 Call SimpleTuple`2<Object, Edge>..ctor, X0, X1, X2
	165 Compare X20, 0
	166 JumpIfEqual {193}
	167 Move W10, [X20+28]
	168 Move X1, [X31]
	169 Move X2, [X31+8]
	170 Move X8, [X20+16]
	171 Move X9, [X26]
	172 Add W10, W10, 1
	173 Move [X20+28], W10
	174 Compare X8, 0
	175 JumpIfEqual {193}
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Move W11, [X8+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W9, W10, 1
	180 Add X8, X8, X10
	181 Move [X20+24], W9
	182 Move [X8+32], X1
	183 Move [X8+40], X2
	184 Move X8, [X9+32]
	185 Move X0, X20
	186 Move X8, [X8+192]
	187 Move X3, [X8+112]
	188 Call List`1<SimpleTuple`2<Object, Edge>>.AddWithResize, X0, X1
	189 Move X8, [X19+40]
	190 Add W23, W23, 1
	191 Compare X8, 0
	192 JumpIfNotEqual {99}
	193 Call 0x1C17F20
	194 Move X0, X20
	195 Move X20, [X31+112]
	196 Move X19, [X31+120]
	197 Move X22, [X31+96]
	198 Move X21, [X31+104]
	199 Move X24, [X31+80]
	200 Move X23, [X31+88]
	201 Move X26, [X31+64]
	202 Move X25, [X31+72]
	203 Move X28, [X31+48]
	204 Move X27, [X31+56]
	205 Move X29, [X31+32]
	206 Move X30, [X31+40]
	207 Add X31, X31, 128
	208 Return X0
	209 Call 0x1C17F28

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> GetNeighborFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes)

Disassembly:
	0x03966910 CMP X11, X1
	0x03966914 B.EQ 0x396693C
	0x03966918 SUBS X9, X9, 0x1
	0x0396691C ADD X10, X10, 0x10
	0x03966920 B.NE 0x396690C
	0x03966924 MOV X0, X20
	0x03966928 MOV W2, W31
	0x0396692C BL 0x1C5C788
	0x03966930 B 0x3966948
	0x03966934 MOV W19, W31
	0x03966938 B 0x3966958
	0x0396693C LDRSW X9, [X10]
	0x03966940 ADD X8, X8, X9, 0x4, LSL
	0x03966944 ADD X0, X8, 0x138
	0x03966948 LDP X8, X1, [X0]
	0x0396694C MOV X0, X20
	0x03966950 BLR X8
	0x03966954 MOV W19, W0
	0x03966958 MOV X0, X21
	0x0396695C MOV X1, X20
	0x03966960 MOV X2, X31
	0x03966964 BL 0x38FF0C0
	0x03966968 LDR X1, [X22]
	0x0396696C BL 0x21D544C
	0x03966970 CBZ X0, 0x3966BC4
	0x03966974 ADRP X24, 0x78E000
	0x03966978 LDR X24, [X24 + 0xE58]
	0x0396697C MOV X21, X0
	0x03966980 LDR W1, [X21 + 0x18]
	0x03966984 LDR X0, [X24]
	0x03966988 BL 0x1C16D6C
	0x0396698C LDR X8, [X21 + 0x18]
	0x03966990 MOV X20, X0
	0x03966994 SUB W9, W8, 0x1
	0x03966998 CMP W9, 0x1
	0x0396699C B.LT 0x3966A88
	0x039669A0 AND X8, X8, 0x0
	0x039669A4 MOV X15, X31
	0x039669A8 SXTW X9, W9
	0x039669AC ADD X10, X20, 0x24
	0x039669B0 ADD X11, X21, 0x2C
	0x039669B4 SXTW X12, W8
	0x039669B8 SUB X13, X8, 0x1
	0x039669BC MOVZ W14, 0x1
	0x039669C0 ADD X16, X15, 0x1
	0x039669C4 CMP X16, X12
	0x039669C8 B.GE 0x3966A6C
	0x039669CC CMP X15, X8
	0x039669D0 B.CS 0x3966BC0
	0x039669D4 ADD X1, X21, X15, 0x3, LSL
	0x039669D8 ADD X2, X20, X15, 0x2, LSL
	0x039669DC MOV X17, X31
	0x039669E0 ADD X0, X1, 0x20
	0x039669E4 ADD X1, X1, 0x24
	0x039669E8 ADD X2, X2, 0x20
	0x039669EC MOV X3, X11
	0x039669F0 CMP X13, X17
	0x039669F4 B.EQ 0x3966BC0
	0x039669F8 LDR W6, [X0]
	0x039669FC LDUR W4, [X3 - 0x4]
	0x03966A00 CMP W6, W4
	0x03966A04 B.EQ 0x3966A28
	0x03966A08 LDR W5, [X3]
	0x03966A0C CMP W6, W5
	0x03966A10 B.EQ 0x3966A28
	0x03966A14 LDR W6, [X1]
	0x03966A18 CMP W6, W4
	0x03966A1C B.EQ 0x3966A28
	0x03966A20 CMP W6, W5
	0x03966A24 B.NE 0x3966A5C
	0x03966A28 CBZ X20, 0x3966BC4
	0x03966A2C LDR W4, [X20 + 0x18]
	0x03966A30 CMP X15, X4
	0x03966A34 B.CS 0x3966BC0
	0x03966A38 LDR W5, [X2]
	0x03966A3C ADD X6, X14, X17
	0x03966A40 CMP X6, X4
	0x03966A44 ADD W5, W5, 0x1
	0x03966A48 STR W5, [X2]
	0x03966A4C B.CS 0x3966BC0
	0x03966A50 LDR W4, [X10, X17, LSL #2]
	0x03966A54 ADD W4, W4, 0x1
	0x03966A58 STR W4, [X10, X17, LSL #2]
	0x03966A5C ADD X17, X17, 0x1
	0x03966A60 CMP X13, X17
	0x03966A64 ADD X3, X3, 0x8
	0x03966A68 B.NE 0x39669F0
	0x03966A6C ADD X14, X14, 0x1
	0x03966A70 SUB X13, X13, 0x1
	0x03966A74 ADD X10, X10, 0x4
	0x03966A78 CMP X16, X9
	0x03966A7C ADD X11, X11, 0x8
	0x03966A80 MOV X15, X16
	0x03966A84 B.LT 0x39669C0
	0x03966A88 ADRP X8, 0x7E9000
	0x03966A8C LDR X8, [X8 + 0xB78]
	0x03966A90 ADRP X21, 0x78E000
	0x03966A94 ADRP X23, 0x791000
	0x03966A98 MOV X0, X20
	0x03966A9C LDR X1, [X8]
	0x03966AA0 LDR X21, [X21 + 0xE30]
	0x03966AA4 LDR X23, [X23 + 0xB70]
	0x03966AA8 BL 0x22165BC
	0x03966AAC LDR X8, [X21]
	0x03966AB0 MOV W22, W0
	0x03966AB4 MOV X0, X8
	0x03966AB8 BL 0x1C16F10
	0x03966ABC LDR X1, [X23]
	0x03966AC0 MOV X21, X0
	0x03966AC4 BL 0x2FDBF14
	0x03966AC8 CBZ X20, 0x3966BC4
	0x03966ACC LDR X8, [X20 + 0x18]
	0x03966AD0 CMP W8, 0x1
	0x03966AD4 B.LT 0x3966B68
	0x03966AD8 ADRP X25, 0x78E000
	0x03966ADC LDR X25, [X25 + 0xE10]
	0x03966AE0 MOV X23, X31
	0x03966AE4 AND X8, X8, 0x0
	0x03966AE8 ADD X26, X20, 0x20
	0x03966AEC CMP X23, W8, UXTW
	0x03966AF0 B.CS 0x3966BC0
	0x03966AF4 LDR W8, [X26, X23, LSL #2]
	0x03966AF8 CMP W8, W22
	0x03966AFC B.GT 0x3966B58
	0x03966B00 CBZ X21, 0x3966BC4
	0x03966B04 LDR W10, [X21 + 0x1C]
	0x03966B08 LDR X8, [X21 + 0x10]
	0x03966B0C LDR X9, [X25]
	0x03966B10 ADD W10, W10, 0x1
	0x03966B14 STR W10, [X21 + 0x1C]
	0x03966B18 CBZ X8, 0x3966BC4
	0x03966B1C LDRSW X10, [X21 + 0x18]
	0x03966B20 LDR W11, [X8 + 0x18]
	0x03966B24 CMP W10, W11
	0x03966B28 B.CS 0x3966B40
	0x03966B2C ADD W9, W10, 0x1
	0x03966B30 ADD X8, X8, X10, 0x2, LSL
	0x03966B34 STR W9, [X21 + 0x18]
	0x03966B38 STR W23, [X8 + 0x20]
	0x03966B3C B 0x3966B58
	0x03966B40 LDR X8, [X9 + 0x20]
	0x03966B44 MOV X0, X21
	0x03966B48 MOV W1, W23
	0x03966B4C LDR X8, [X8 + 0xC0]
	0x03966B50 LDR X2, [X8 + 0x70]
	0x03966B54 BL 0x2FDC70C
	0x03966B58 LDR W8, [X20 + 0x18]
	0x03966B5C ADD X23, X23, 0x1
	0x03966B60 CMP X23, W8, SXTW
	0x03966B64 B.LT 0x3966AEC
	0x03966B68 CBZ X21, 0x3966BC4
	0x03966B6C LDR W8, [X21 + 0x18]
	0x03966B70 CMP W8, W19
	0x03966B74 B.NE 0x3966B98
	0x03966B78 LDR X0, [X24]
	0x03966B7C LDP X20, X19, [X31 + 0x40]
	0x03966B80 LDP X22, X21, [X31 + 0x30]
	0x03966B84 LDP X24, X23, [X31 + 0x20]
	0x03966B88 LDP X26, X25, [X31 + 0x10]
	0x03966B8C MOV W1, W31
	0x03966B90 LDR X30, [X31], #0x50
	0x03966B94 B 0x1C16D6C
	0x03966B98 ADRP X8, 0x78E000
	0x03966B9C LDR X8, [X8 + 0xE18]
	0x03966BA0 MOV X0, X21
	0x03966BA4 LDP X20, X19, [X31 + 0x40]
	0x03966BA8 LDP X22, X21, [X31 + 0x30]
	0x03966BAC LDR X1, [X8]
	0x03966BB0 LDP X24, X23, [X31 + 0x20]
	0x03966BB4 LDP X26, X25, [X31 + 0x10]
	0x03966BB8 LDR X30, [X31], #0x50
	0x03966BBC B 0x2FDE4C8
	0x03966BC0 BL 0x1C16F28

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xA7C000
	014 Move W8, [X20+2509]
	015 Move X23, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x7E8000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0x790000
	025 Move X0, [X0+2520]
	026 Call 0x1C17CF4
	027 Move X0, 0x78F000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x795000
	031 Move X0, [X0+1672]
	032 Call 0x1C17CF4
	033 Move X0, 0x78F000
	034 Move X0, [X0+3592]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E8000
	037 Move X0, [X0+3600]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E9000
	040 Move X0, [X0+2616]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E8000
	043 Move X0, [X0+3568]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2509], W8
	047 Compare X19, 0
	048 JumpIfEqual {177}
	049 Move X20, 0x7E8000
	050 Move X21, 0x7E9000
	051 Move X22, 0x78F000
	052 Move X24, 0x795000
	053 Move X20, [X20+3568]
	054 Move X21, [X21+2616]
	055 Move X22, [X22+3592]
	056 Move X24, [X24+1672]
	057 Move X0, X19
	058 Move X1, X31
	059 Call ProBuilderMesh.get_sharedVertexLookup, X0
	060 Move X8, [X20]
	061 Move X20, X0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Move X1, [X21]
	065 Move X21, X0
	066 Call List`1<Object>..ctor, X0
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move X1, [X24]
	070 Move X22, X0
	071 Call HashSet`1<Int32>..ctor, X0
	072 Compare X23, 0
	073 JumpIfEqual {177}
	074 Move X8, [X23+24]
	075 Move X24, 0x7E8000
	076 Move X24, [X24+3200]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X26, 0x790000
	079 Move X26, [X26+2520]
	080 Move X25, X31
	081 And X8, X8, 0
	082 Add X27, X23, 32
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X20, 0
	085 JumpIfEqual {177}
	086 Move W1, [X27]
	087 Move X2, [X24]
	088 Move X0, X20
	089 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	090 Compare X22, 0
	091 JumpIfEqual {177}
	092 Move X2, [X26]
	093 Move W1, W0
	094 Move X0, X22
	095 Call HashSet`1<Int32>.Add, X0, X1
	096 Move W8, [X23+24]
	097 Add X25, X25, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X19+40]
	100 Compare X8, 0
	101 JumpIfEqual {177}
	102 Move X26, 0x78F000
	103 Move X26, [X26+3576]
	104 Move W25, W31
	105 Move W9, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X28, W25
	109 Add X8, X8, X28
	110 Move X0, [X8+32]
	111 Compare X0, 0
	112 JumpIfEqual {177}
	113 Move X1, X31
	114 Call Face.get_distinctIndexesInternal, X0
	115 Compare X0, 0
	116 JumpIfEqual {177}
	117 Move X8, [X0+24]
	118 Move X23, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X29, X31
	121 And X8, X8, 0
	122 Add X27, X23, 32
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Compare X20, 0
	125 JumpIfEqual {177}
	126 Move W1, [X27]
	127 Move X2, [X24]
	128 Move X0, X20
	129 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	130 Compare X22, 0
	131 JumpIfEqual {177}
	132 Move X2, [X26]
	133 Move W1, W0
	134 Move X0, X22
	135 Call HashSet`1<Int32>.Contains, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Move W8, [X23+24]
	141 Add X29, X29, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X8, [X19+40]
	144 Compare X8, 0
	145 JumpIfEqual {177}
	146 Move W9, [X8+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Compare X21, 0
	149 JumpIfEqual {177}
	150 Add X8, X8, X28
	151 Move X9, 0x7E8000
	152 Move W10, [X21+28]
	153 Move X1, [X8+32]
	154 Move X8, [X21+16]
	155 Move X9, [X9+3600]
	156 Add W10, W10, 1
	157 Move X9, [X9]
	158 Move [X21+28], W10
	159 Compare X8, 0
	160 JumpIfEqual {177}
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W11, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add W9, W10, 1
	165 Add X8, X8, X10
	166 Move [X21+24], W9
	167 Move [X8+32], X1
	168 Move X8, [X9+32]
	169 Move X0, X21
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Object>.AddWithResize, X0, X1
	173 Move X8, [X19+40]
	174 Add W25, W25, 1
	175 Compare X8, 0
	176 JumpIfNotEqual {105}
	177 Call 0x1C17F20
	178 Move X0, X21
	179 Move X20, [X31+80]
	180 Move X19, [X31+88]
	181 Move X22, [X31+64]
	182 Move X21, [X31+72]
	183 Move X24, [X31+48]
	184 Move X23, [X31+56]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X28, [X31+16]
	188 Move X27, [X31+24]
	189 Move X29, [X31+96]
	190 Move X30, [X31+104]
	191 Return X0
	192 Call 0x1C17F28

Method: UnityEngine.ProBuilder.Edge[] GetConnectedEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes)

Disassembly:
	0x03966BC4 BL 0x1C16F20
	0x03966BC8 SUB X31, X31, 0x70
	0x03966BCC STP X29, X30, [X31 + 0x10]
	0x03966BD0 STP X28, X27, [X31 + 0x20]
	0x03966BD4 STP X26, X25, [X31 + 0x30]
	0x03966BD8 STP X24, X23, [X31 + 0x40]
	0x03966BDC STP X22, X21, [X31 + 0x50]
	0x03966BE0 STP X20, X19, [X31 + 0x60]
	0x03966BE4 ADRP X21, 0xA7B000
	0x03966BE8 LDRB W8, [X21 + 0x9D1]
	0x03966BEC MOV X20, X1
	0x03966BF0 MOV X19, X0
	0x03966BF4 TBNZ X8, 0x0, 0x3966D08
	0x03966BF8 ADRP X0, 0x7E9000
	0x03966BFC LDR X0, [X0 + 0xB80]
	0x03966C00 BL 0x1C16CF4
	0x03966C04 ADRP X0, 0x7E9000
	0x03966C08 LDR X0, [X0 + 0xB88]
	0x03966C0C BL 0x1C16CF4
	0x03966C10 ADRP X0, 0x7E9000
	0x03966C14 LDR X0, [X0 + 0xB90]
	0x03966C18 BL 0x1C16CF4
	0x03966C1C ADRP X0, 0x7E9000
	0x03966C20 LDR X0, [X0 + 0xB98]
	0x03966C24 BL 0x1C16CF4
	0x03966C28 ADRP X0, 0x7E7000
	0x03966C2C LDR X0, [X0 + 0xC80]
	0x03966C30 BL 0x1C16CF4
	0x03966C34 ADRP X0, 0x7E9000
	0x03966C38 LDR X0, [X0 + 0xBA0]
	0x03966C3C BL 0x1C16CF4
	0x03966C40 ADRP X0, 0x7B5000
	0x03966C44 LDR X0, [X0 + 0x600]
	0x03966C48 BL 0x1C16CF4
	0x03966C4C ADRP X0, 0x7E9000
	0x03966C50 LDR X0, [X0 + 0xBA8]
	0x03966C54 BL 0x1C16CF4
	0x03966C58 ADRP X0, 0x7E9000
	0x03966C5C LDR X0, [X0 + 0xBB0]
	0x03966C60 BL 0x1C16CF4
	0x03966C64 ADRP X0, 0x7E9000
	0x03966C68 LDR X0, [X0 + 0xBB8]
	0x03966C6C BL 0x1C16CF4
	0x03966C70 ADRP X0, 0x7E9000
	0x03966C74 LDR X0, [X0 + 0xBC0]
	0x03966C78 BL 0x1C16CF4
	0x03966C7C ADRP X0, 0x7E9000
	0x03966C80 LDR X0, [X0 + 0xBC8]
	0x03966C84 BL 0x1C16CF4
	0x03966C88 ADRP X0, 0x78D000
	0x03966C8C LDR X0, [X0 + 0xE00]
	0x03966C90 BL 0x1C16CF4
	0x03966C94 ADRP X0, 0x7E7000
	0x03966C98 LDR X0, [X0 + 0xDB0]
	0x03966C9C BL 0x1C16CF4
	0x03966CA0 ADRP X0, 0x7E7000
	0x03966CA4 LDR X0, [X0 + 0xDB8]
	0x03966CA8 BL 0x1C16CF4
	0x03966CAC ADRP X0, 0x78D000
	0x03966CB0 LDR X0, [X0 + 0xE18]
	0x03966CB4 BL 0x1C16CF4
	0x03966CB8 ADRP X0, 0x7E7000
	0x03966CBC LDR X0, [X0 + 0xE10]
	0x03966CC0 BL 0x1C16CF4
	0x03966CC4 ADRP X0, 0x7E8000
	0x03966CC8 LDR X0, [X0 + 0xA38]
	0x03966CCC BL 0x1C16CF4
	0x03966CD0 ADRP X0, 0x7E7000
	0x03966CD4 LDR X0, [X0 + 0xDF0]
	0x03966CD8 BL 0x1C16CF4
	0x03966CDC ADRP X0, 0x7E9000
	0x03966CE0 LDR X0, [X0 + 0xBD0]
	0x03966CE4 BL 0x1C16CF4
	0x03966CE8 ADRP X0, 0x7E9000
	0x03966CEC LDR X0, [X0 + 0xBD8]
	0x03966CF0 BL 0x1C16CF4
	0x03966CF4 ADRP X0, 0x7E9000
	0x03966CF8 LDR X0, [X0 + 0xB68]
	0x03966CFC BL 0x1C16CF4
	0x03966D00 MOVZ W8, 0x1
	0x03966D04 STRB W8, [X21 + 0x9D1]
	0x03966D08 STR X31, [X31 + 0x8]
	0x03966D0C CBZ X19, 0x3967260
	0x03966D10 ADRP X21, 0x7E9000
	0x03966D14 ADRP X22, 0x7E9000
	0x03966D18 LDR X21, [X21 + 0xBA0]
	0x03966D1C LDR X22, [X22 + 0xB90]
	0x03966D20 MOV X0, X19
	0x03966D24 MOV X1, X31
	0x03966D28 BL 0x3916198
	0x03966D2C LDR X8, [X21]
	0x03966D30 MOV X21, X0
	0x03966D34 MOV X0, X8
	0x03966D38 BL 0x1C16F10
	0x03966D3C LDR X1, [X22]
	0x03966D40 MOV X19, X0
	0x03966D44 BL 0x29DBC20
	0x03966D48 CBZ X20, 0x3967260
	0x03966D4C ADRP X10, 0x7E7000
	0x03966D50 LDR X8, [X20]
	0x03966D54 LDR X10, [X10 + 0xDB0]
	0x03966D58 LDRH W9, [X8 + 0x12E]
	0x03966D5C LDR X1, [X10]
	0x03966D60 CBZ X9, 0x3966D84
	0x03966D64 LDR X10, [X8 + 0xB0]
	0x03966D68 ADD X10, X10, 0x8
	0x03966D6C LDUR X11, [X10 - 0x8]
	0x03966D70 CMP X11, X1
	0x03966D74 B.EQ 0x3966D94
	0x03966D78 SUBS X9, X9, 0x1
	0x03966D7C ADD X10, X10, 0x10
	0x03966D80 B.NE 0x3966D6C
	0x03966D84 MOV X0, X20
	0x03966D88 MOV W2, W31
	0x03966D8C BL 0x1C5C788
	0x03966D90 B 0x3966DA0
	0x03966D94 LDRSW X9, [X10]
	0x03966D98 ADD X8, X8, X9, 0x4, LSL
	0x03966D9C ADD X0, X8, 0x138
	0x03966DA0 LDP X8, X1, [X0]
	0x03966DA4 MOV X0, X20
	0x03966DA8 BLR X8
	0x03966DAC STR X0, [X31]
	0x03966DB0 CBZ X0, 0x3967264
	0x03966DB4 ADRP X29, 0x7E7000
	0x03966DB8 ADRP X28, 0x7E9000
	0x03966DBC ADRP X20, 0x7E7000
	0x03966DC0 LDR X29, [X29 + 0xC80]
	0x03966DC4 LDR X28, [X28 + 0xB88]
	0x03966DC8 LDR X20, [X20 + 0xE10]
	0x03966DCC LDR X22, [X31]
	0x03966DD0 ADRP X10, 0x78D000
	0x03966DD4 LDR X8, [X22]
	0x03966DD8 LDRH W9, [X8 + 0x12E]
	0x03966DDC LDR X10, [X10 + 0xE18]
	0x03966DE0 LDR X1, [X10]
	0x03966DE4 CBZ X9, 0x3966E08
	0x03966DE8 LDR X10, [X8 + 0xB0]
	0x03966DEC ADD X10, X10, 0x8
	0x03966DF0 LDUR X11, [X10 - 0x8]
	0x03966DF4 CMP X11, X1
	0x03966DF8 B.EQ 0x3966E18
	0x03966DFC SUBS X9, X9, 0x1
	0x03966E00 ADD X10, X10, 0x10
	0x03966E04 B.NE 0x3966DF0
	0x03966E08 MOV X0, X22
	0x03966E0C MOV W2, W31
	0x03966E10 BL 0x1C5C788
	0x03966E14 B 0x3966E24
	0x03966E18 LDRSW X9, [X10]
	0x03966E1C ADD X8, X8, X9, 0x4, LSL
	0x03966E20 ADD X0, X8, 0x138
	0x03966E24 LDP X8, X1, [X0]
	0x03966E28 MOV X0, X22
	0x03966E2C BLR X8
	0x03966E30 TBZ X0, 0x0, 0x3967068
	0x03966E34 LDR X8, [X22]
	0x03966E38 ADRP X10, 0x7E7000
	0x03966E3C LDRH W9, [X8 + 0x12E]
	0x03966E40 LDR X10, [X10 + 0xDB8]
	0x03966E44 LDR X1, [X10]
	0x03966E48 CBZ X9, 0x3966E6C
	0x03966E4C LDR X10, [X8 + 0xB0]
	0x03966E50 ADD X10, X10, 0x8
	0x03966E54 LDUR X11, [X10 - 0x8]
	0x03966E58 CMP X11, X1
	0x03966E5C B.EQ 0x3966E80
	0x03966E60 SUBS X9, X9, 0x1
	0x03966E64 ADD X10, X10, 0x10
	0x03966E68 B.NE 0x3966E54
	0x03966E6C MOV X0, X22
	0x03966E70 MOV W2, W31
	0x03966E74 BL 0x1C5C788
	0x03966E78 LDR X22, [X31]
	0x03966E7C B 0x3966E8C
	0x03966E80 LDRSW X9, [X10]
	0x03966E84 ADD X8, X8, X9, 0x4, LSL
	0x03966E88 ADD X0, X8, 0x138
	0x03966E8C LDP X8, X1, [X0]
	0x03966E90 MOV X0, X22
	0x03966E94 BLR X8
	0x03966E98 MOV X22, X0
	0x03966E9C CBZ X0, 0x3967258
	0x03966EA0 MOV X0, X22
	0x03966EA4 MOV X1, X31
	0x03966EA8 BL 0x38FFA80
	0x03966EAC MOV X23, X0
	0x03966EB0 CBZ X0, 0x396725C
	0x03966EB4 LDR X8, [X23 + 0x18]
	0x03966EB8 CMP W8, 0x1
	0x03966EBC B.LT 0x3966DCC
	0x03966EC0 MOV X27, X31
	0x03966EC4 AND X8, X8, 0x0
	0x03966EC8 ADD X26, X23, 0x20
	0x03966ECC CMP X27, W8, UXTW
	0x03966ED0 B.CS 0x396723C
	0x03966ED4 CBZ X21, 0x3967244
	0x03966ED8 LDR X25, [X26, X27, LSL #3]
	0x03966EDC LDR X2, [X29]
	0x03966EE0 MOV X0, X21
	0x03966EE4 MOV W1, W25
	0x03966EE8 BL 0x2A0A2A8
	0x03966EEC LDR X2, [X29]
	0x03966EF0 MOV W24, W0
	0x03966EF4 UBFM X1, X25, 0x20, 0x3F
	0x03966EF8 MOV X0, X21
	0x03966EFC BL 0x2A0A2A8
	0x03966F00 ADRP X8, 0x7B5000
	0x03966F04 LDR X8, [X8 + 0x600]
	0x03966F08 MOV W25, W0
	0x03966F0C LDR X0, [X8]
	0x03966F10 LDR W8, [X0 + 0xE0]
	0x03966F14 CBNZ W8, 0x3966F1C
	0x03966F18 BL 0x1C16DFC
	0x03966F1C ADD X0, X31, 0x8
	0x03966F20 MOV W1, W24
	0x03966F24 MOV W2, W25
	0x03966F28 MOV X3, X31
	0x03966F2C BL 0x38FDC24
	0x03966F30 CBZ X19, 0x3967240
	0x03966F34 LDR X1, [X31 + 0x8]
	0x03966F38 LDR X2, [X28]
	0x03966F3C MOV X0, X19
	0x03966F40 BL 0x29DC6C8
	0x03966F44 LDR X24, [X31 + 0x8]
	0x03966F48 TBZ X0, 0x0, 0x3966FA4
	0x03966F4C ADRP X8, 0x7E9000
	0x03966F50 LDR X8, [X8 + 0xB98]
	0x03966F54 LDR X2, [X8]
	0x03966F58 MOV X0, X19
	0x03966F5C MOV X1, X24
	0x03966F60 BL 0x29DC434
	0x03966F64 CBZ X0, 0x3967250
	0x03966F68 LDR W10, [X0 + 0x1C]
	0x03966F6C LDR X8, [X0 + 0x10]
	0x03966F70 LDR X9, [X20]
	0x03966F74 ADD W10, W10, 0x1
	0x03966F78 STR W10, [X0 + 0x1C]
	0x03966F7C CBZ X8, 0x396724C
	0x03966F80 LDRSW X10, [X0 + 0x18]
	0x03966F84 LDR W11, [X8 + 0x18]
	0x03966F88 CMP W10, W11
	0x03966F8C B.CS 0x3967008
	0x03966F90 ADD W9, W10, 0x1
	0x03966F94 ADD X8, X8, X10, 0x3, LSL
	0x03966F98 STR W9, [X0 + 0x18]
	0x03966F9C STR X22, [X8 + 0x20]
	0x03966FA0 B 0x3967054
	0x03966FA4 ADRP X8, 0x7E7000
	0x03966FA8 LDR X8, [X8 + 0xDF0]
	0x03966FAC LDR X0, [X8]
	0x03966FB0 BL 0x1C16F10
	0x03966FB4 ADRP X8, 0x7E8000
	0x03966FB8 LDR X8, [X8 + 0xA38]
	0x03966FBC MOV X25, X0
	0x03966FC0 LDR X1, [X8]
	0x03966FC4 BL 0x301B7C4
	0x03966FC8 CBZ X25, 0x3967248
	0x03966FCC LDR W10, [X25 + 0x1C]
	0x03966FD0 LDR X8, [X25 + 0x10]
	0x03966FD4 LDR X9, [X20]
	0x03966FD8 ADD W10, W10, 0x1
	0x03966FDC STR W10, [X25 + 0x1C]
	0x03966FE0 CBZ X8, 0x3967254
	0x03966FE4 LDRSW X10, [X25 + 0x18]
	0x03966FE8 LDR W11, [X8 + 0x18]
	0x03966FEC CMP W10, W11
	0x03966FF0 B.CS 0x3967020
	0x03966FF4 ADD W9, W10, 0x1
	0x03966FF8 ADD X8, X8, X10, 0x3, LSL
	0x03966FFC STR W9, [X25 + 0x18]
	0x03967000 STR X22, [X8 + 0x20]
	0x03967004 B 0x3967038
	0x03967008 LDR X8, [X9 + 0x20]
	0x0396700C LDR X8, [X8 + 0xC0]
	0x03967010 LDR X2, [X8 + 0x70]
	0x03967014 MOV X1, X22
	0x03967018 BL 0x301BF90
	0x0396701C B 0x3967054
	0x03967020 LDR X8, [X9 + 0x20]
	0x03967024 LDR X8, [X8 + 0xC0]
	0x03967028 LDR X2, [X8 + 0x70]
	0x0396702C MOV X0, X25
	0x03967030 MOV X1, X22
	0x03967034 BL 0x301BF90
	0x03967038 ADRP X8, 0x7E8000
	0x0396703C LDR X8, [X8 + 0xB80]
	0x03967040 LDR X3, [X8]
	0x03967044 MOV X0, X19
	0x03967048 MOV X1, X24
	0x0396704C MOV X2, X25
	0x03967050 BL 0x29DC4D4
	0x03967054 LDR W8, [X23 + 0x18]
	0x03967058 ADD X27, X27, 0x1
	0x0396705C CMP X27, W8, SXTW
	0x03967060 B.LT 0x3966ECC
	0x03967064 B 0x3966DCC
	0x03967068 MOV X22, X31
	0x0396706C LDR X8, [X31]
	0x03967070 CBZ X8, 0x39670DC
	0x03967074 LDR X8, [X8]
	0x03967078 ADRP X10, 0x78C000
	0x0396707C LDRH W9, [X8 + 0x12E]
	0x03967080 LDR X10, [X10 + 0xE00]
	0x03967084 LDR X1, [X10]
	0x03967088 CBZ X9, 0x39670AC
	0x0396708C LDR X10, [X8 + 0xB0]
	0x03967090 ADD X10, X10, 0x8
	0x03967094 LDUR X11, [X10 - 0x8]
	0x03967098 CMP X11, X1
	0x0396709C B.EQ 0x39670C0
	0x039670A0 SUBS X9, X9, 0x1
	0x039670A4 ADD X10, X10, 0x10
	0x039670A8 B.NE 0x3967094
	0x039670AC LDR X20, [X31]
	0x039670B0 MOV W2, W31
	0x039670B4 MOV X0, X20
	0x039670B8 BL 0x1C5C788
	0x039670BC B 0x39670D0
	0x039670C0 LDRSW X9, [X10]
	0x039670C4 LDR X20, [X31]
	0x039670C8 ADD X8, X8, X9, 0x4, LSL
	0x039670CC ADD X0, X8, 0x138
	0x039670D0 LDP X8, X1, [X0]
	0x039670D4 MOV X0, X20
	0x039670D8 BLR X8
	0x039670DC CBNZ X22, 0x3967268
	0x039670E0 ADRP X22, 0x7E8000
	0x039670E4 LDR X22, [X22 + 0xB68]
	0x039670E8 LDR X8, [X22]
	0x039670EC LDR W9, [X8 + 0xE0]
	0x039670F0 CBNZ W9, 0x3967100
	0x039670F4 MOV X0, X8
	0x039670F8 BL 0x1C16DFC
	0x039670FC LDR X8, [X22]
	0x03967100 LDR X9, [X8 + 0xB8]
	0x03967104 ADRP X23, 0x7E8000
	0x03967108 LDR X20, [X9 + 0x20]
	0x0396710C LDR X23, [X23 + 0xBB8]
	0x03967110 CBNZ X20, 0x3967168
	0x03967114 LDR W9, [X8 + 0xE0]
	0x03967118 CBNZ W9, 0x3967128
	0x0396711C MOV X0, X8
	0x03967120 BL 0x1C16DFC
	0x03967124 LDR X8, [X22]
	0x03967128 ADRP X9, 0x7E8000
	0x0396712C LDR X8, [X8 + 0xB8]
	0x03967130 LDR X9, [X9 + 0xBC8]
	0x03967134 LDR X21, [X8]
	0x03967138 LDR X0, [X9]
	0x0396713C BL 0x1C16F10
	0x03967140 ADRP X8, 0x7E8000
	0x03967144 LDR X8, [X8 + 0xBD0]
	0x03967148 MOV X1, X21
	0x0396714C MOV X3, X31
	0x03967150 MOV X20, X0
	0x03967154 LDR X2, [X8]
	0x03967158 BL 0x2D29550
	0x0396715C LDR X8, [X22]
	0x03967160 LDR X8, [X8 + 0xB8]
	0x03967164 STR X20, [X8 + 0x20]
	0x03967168 LDR X2, [X23]
	0x0396716C MOV X0, X19
	0x03967170 MOV X1, X20
	0x03967174 BL 0x21D7FCC
	0x03967178 LDR X8, [X22]
	0x0396717C MOV X19, X0
	0x03967180 LDR W9, [X8 + 0xE0]
	0x03967184 CBNZ W9, 0x3967194
	0x03967188 MOV X0, X8
	0x0396718C BL 0x1C16DFC
	0x03967190 LDR X8, [X22]
	0x03967194 LDR X9, [X8 + 0xB8]
	0x03967198 ADRP X24, 0x7E8000
	0x0396719C ADRP X23, 0x7E8000
	0x039671A0 LDR X20, [X9 + 0x28]
	0x039671A4 LDR X24, [X24 + 0xBB0]
	0x039671A8 LDR X23, [X23 + 0xBA8]
	0x039671AC CBNZ X20, 0x3967204
	0x039671B0 LDR W9, [X8 + 0xE0]
	0x039671B4 CBNZ W9, 0x39671C4
	0x039671B8 MOV X0, X8
	0x039671BC BL 0x1C16DFC
	0x039671C0 LDR X8, [X22]
	0x039671C4 ADRP X9, 0x7E8000
	0x039671C8 LDR X8, [X8 + 0xB8]
	0x039671CC LDR X9, [X9 + 0xBC0]
	0x039671D0 LDR X21, [X8]
	0x039671D4 LDR X0, [X9]
	0x039671D8 BL 0x1C16F10
	0x039671DC ADRP X8, 0x7E8000
	0x039671E0 LDR X8, [X8 + 0xBD8]
	0x039671E4 MOV X1, X21
	0x039671E8 MOV X3, X31
	0x039671EC MOV X20, X0
	0x039671F0 LDR X2, [X8]
	0x039671F4 BL 0x2D29870
	0x039671F8 LDR X8, [X22]
	0x039671FC LDR X8, [X8 + 0xB8]
	0x03967200 STR X20, [X8 + 0x28]
	0x03967204 LDR X2, [X24]
	0x03967208 MOV X0, X19
	0x0396720C MOV X1, X20
	0x03967210 BL 0x21CA428
	0x03967214 LDR X1, [X23]
	0x03967218 BL 0x21C0360
	0x0396721C LDP X20, X19, [X31 + 0x60]
	0x03967220 LDP X22, X21, [X31 + 0x50]
	0x03967224 LDP X24, X23, [X31 + 0x40]
	0x03967228 LDP X26, X25, [X31 + 0x30]
	0x0396722C LDP X28, X27, [X31 + 0x20]
	0x03967230 LDP X29, X30, [X31 + 0x10]
	0x03967234 ADD X31, X31, 0x70
	0x03967238 RET
	0x0396723C BL 0x1C16F28
	0x03967240 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xA7C000
	015 Move W8, [X19+2510]
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0x7E8000
	023 Move X0, [X0+3200]
	024 Call 0x1C17CF4
	025 Move X0, 0x7B6000
	026 Move X0, [X0+1536]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E8000
	029 Move X0, [X0+3400]
	030 Call 0x1C17CF4
	031 Move X0, 0x790000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0x7EA000
	035 Move X0, [X0+2712]
	036 Call 0x1C17CF4
	037 Move X0, 0x78F000
	038 Move X0, [X0+3576]
	039 Call 0x1C17CF4
	040 Move X0, 0x795000
	041 Move X0, [X0+1672]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E8000
	044 Move X0, [X0+3416]
	045 Call 0x1C17CF4
	046 Move X0, 0x78F000
	047 Move X0, [X0+3592]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E8000
	050 Move X0, [X0+3424]
	051 Call 0x1C17CF4
	052 Move X0, 0x78E000
	053 Move X0, [X0+3584]
	054 Call 0x1C17CF4
	055 Move X0, 0x7E8000
	056 Move X0, [X0+3216]
	057 Call 0x1C17CF4
	058 Move X0, 0x78E000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x7E8000
	062 Move X0, [X0+3432]
	063 Call 0x1C17CF4
	064 Move X0, 0x7EA000
	065 Move X0, [X0+2816]
	066 Call 0x1C17CF4
	067 Move X0, 0x7E8000
	068 Move X0, [X0+3440]
	069 Call 0x1C17CF4
	070 Move X0, 0x7E8000
	071 Move X0, [X0+3448]
	072 Call 0x1C17CF4
	073 Move X0, 0x7EA000
	074 Move X0, [X0+2824]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X19+2510], W8
	078 Move [X31+16], X31
	079 Move [X31+24], X31
	080 Compare X23, 0
	081 JumpIfEqual {390}
	082 Move X19, 0x7E8000
	083 Move X21, 0x7E8000
	084 Move X24, 0x78F000
	085 Move X25, 0x795000
	086 Move X19, [X19+3448]
	087 Move X21, [X21+3440]
	088 Move X24, [X24+3592]
	089 Move X25, [X25+1672]
	090 Move X0, X23
	091 Move X1, X31
	092 Call ProBuilderMesh.get_sharedVertexLookup, X0
	093 Move X8, [X19]
	094 Move X20, X0
	095 Move X0, X8
	096 Call 0x1C17F10
	097 Move X1, [X21]
	098 Move X19, X0
	099 Call List`1<Edge>..ctor, X0
	100 Move X0, [X24]
	101 Call 0x1C17F10
	102 Move X1, [X25]
	103 Move X21, X0
	104 Call HashSet`1<Int32>..ctor, X0
	105 Compare X22, 0
	106 JumpIfEqual {390}
	107 Move X8, [X22+24]
	108 Move X27, 0x7E8000
	109 Move X27, [X27+3200]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X25, 0x790000
	112 Move X25, [X25+2520]
	113 Move X24, X31
	114 And X8, X8, 0
	115 Add X26, X22, 32
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Compare X20, 0
	118 JumpIfEqual {390}
	119 Move W1, [X26]
	120 Move X2, [X27]
	121 Move X0, X20
	122 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	123 Compare X21, 0
	124 JumpIfEqual {390}
	125 Move X2, [X25]
	126 Move W1, W0
	127 Move X0, X21
	128 Call HashSet`1<Int32>.Add, X0, X1
	129 Move W8, [X22+24]
	130 Add X24, X24, 1
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0x7E8000
	133 Move X8, [X8+3424]
	134 Move X22, 0x7E8000
	135 Move X24, 0x7B6000
	136 Move X0, [X8]
	137 Move X22, [X22+3416]
	138 Move X24, [X24+1536]
	139 Call 0x1C17F10
	140 Move X1, [X22]
	141 Move X22, X0
	142 Call HashSet`1<Edge>..ctor, X0
	143 Move X0, [X24]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Add X0, X31, 24
	149 Move W1, W31
	150 Move W2, W31
	151 Move X3, X31
	152 Call Edge..ctor, X0, X1, X2
	153 Move X9, [X23+40]
	154 Compare X9, 0
	155 JumpIfEqual {390}
	156 Move W8, [X9+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X29, 0x78E000
	159 Move X28, 0x78F000
	160 Move X29, [X29+3608]
	161 Move X28, [X28+3576]
	162 Move W10, W31
	163 Move [X31], X9
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X8, X9, W10
	166 Move X0, [X8+32]
	167 Compare X0, 0
	168 JumpIfEqual {390}
	169 Move X1, X31
	170 Move [X31+12], W10
	171 Call Face.get_edges, X0
	172 Compare X0, 0
	173 JumpIfEqual {390}
	174 Move X8, 0x7EA000
	175 Move X8, [X8+2824]
	176 Move X1, [X8]
	177 Call ReadOnlyCollection`1<Edge>.GetEnumerator, X0
	178 Move X23, X0
	179 Compare X0, 0
	180 JumpIfEqual {361}
	181 Move X8, [X23]
	182 Move X1, [X29]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X23
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X23
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {318}
	206 Move X8, [X23]
	207 Move X10, 0x7E8000
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X10, [X10+3216]
	210 Move X1, [X10]
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move X0, X23
	220 Move W2, W31
	221 Call 0x1C5D788
	222 NotImplemented "Instruction LDRSW not yet implemented."
	223 Add X8, X8, X9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X23
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X20, 0
	230 JumpIfEqual {355}
	231 Move X2, [X27]
	232 Move X24, X0
	233 Move X0, X20
	234 Move W1, W24
	235 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	236 Move X2, [X27]
	237 Move W25, W0
	238 Move X1, X24
	239 ShiftRight X1, 32
	240 And X1, X1, 0x7FFFFFFF
	241 Move X0, X20
	242 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	243 Move X8, 0x7B6000
	244 Move X8, [X8+1536]
	245 Move W26, W0
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Add X0, X31, 16
	252 Move W1, W25
	253 Move W2, W26
	254 Move X3, X31
	255 Call Edge..ctor, X0, X1, X2
	256 Compare X21, 0
	257 JumpIfEqual {356}
	258 Move W1, [X31+16]
	259 Move X2, [X28]
	260 Move X0, X21
	261 Call HashSet`1<Int32>.Contains, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {284}
	266 Compare X19, 0
	267 JumpIfEqual {359}
	268 Move X9, 0x7E8000
	269 Move W10, [X19+28]
	270 Move X8, [X19+16]
	271 Move X9, [X9+3432]
	272 Add W10, W10, 1
	273 Move X9, [X9]
	274 Move [X19+28], W10
	275 Compare X8, 0
	276 JumpIfEqual {357}
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Move W11, [X8+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Add W9, W10, 1
	281 Add X8, X8, X10
	282 Move [X19+24], W9
	283 Move [X8+32], X24
	284 Move W1, [X31+20]
	285 Move X2, [X28]
	286 Move X0, X21
	287 Call HashSet`1<Int32>.Contains, X0, X1
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {181}
	292 Compare X22, 0
	293 JumpIfEqual {360}
	294 Move X8, 0x7EA000
	295 Move X1, [X31+24]
	296 Move X8, [X8+2712]
	297 Move X2, [X8]
	298 Move X0, X22
	299 Call HashSet`1<Edge>.Contains, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfEqual {181}
	304 Move X8, [X9+32]
	305 Move X8, [X8+192]
	306 Move X2, [X8+112]
	307 Move X0, X19
	308 Move X1, X24
	309 Call List`1<Edge>.AddWithResize, X0, X1
	310 Compare X22, 0
	311 JumpIfEqual {358}
	312 Move X8, 0x7E7000
	313 Move X1, [X31+16]
	314 Move X8, [X8+3400]
	315 Move X2, [X8]
	316 Move X0, X22
	317 Call HashSet`1<Edge>.Add, X0, X1
	318 Move X24, X31
	319 Move W25, 9
	320 Compare X23, 0
	321 JumpIfEqual {345}
	322 Move X8, [X23]
	323 Move X10, 0x78D000
	324 NotImplemented "Instruction LDRH not yet implemented."
	325 Move X10, [X10+3584]
	326 Move X1, [X10]
	327 Compare X9, 0
	328 JumpIfEqual {335}
	329 Move X10, [X8+176]
	330 Add X10, X10, 8
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Subtract X9, X9, 1
	334 Add X10, X10, 16
	335 Move X0, X23
	336 Move W2, W31
	337 Call 0x1C5D788
	338 NotImplemented "Instruction LDRSW not yet implemented."
	339 Add X8, X8, X9
	340 Add X0, X8, 312
	341 Move X8, [X0]
	342 Move X1, [X0+8]
	343 Move X0, X23
	344 NotImplemented "Instruction BLR not yet implemented."
	345 Compare X24, 0
	346 JumpIfNotEqual {392}
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Compare W25, 0
	349 JumpIfNotEqual {376}
	350 Move X9, [X31]
	351 Move W10, [X31+12]
	352 Move W8, [X9+24]
	353 Add W10, W10, 1
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Call 0x3EB2AD0
	364 Move X24, [X0]
	365 Call 0x3EB2AE0
	366 Move W25, W31
	367 Compare X23, 0
	368 JumpIfNotEqual {322}
	369 Compare X19, 0
	370 JumpIfEqual {390}
	371 Move X8, 0x7E9000
	372 Move X8, [X8+2816]
	373 Move X0, X19
	374 Move X1, [X8]
	375 Call List`1<Edge>.ToArray, X0
	376 Move X20, [X31+112]
	377 Move X19, [X31+120]
	378 Move X22, [X31+96]
	379 Move X21, [X31+104]
	380 Move X24, [X31+80]
	381 Move X23, [X31+88]
	382 Move X26, [X31+64]
	383 Move X25, [X31+72]
	384 Move X28, [X31+48]
	385 Move X27, [X31+56]
	386 Move X29, [X31+32]
	387 Move X30, [X31+40]
	388 Add X31, X31, 128
	389 Return X0
	390 Call 0x1C17F20
	391 Call 0x1C17F28
	392 Move X0, X24
	393 Call 0x1C17F18
	394 Move X19, X0
	395 Move X24, X31
	396 Move X19, X0
	397 Compare X23, 0
	398 JumpIfEqual {422}
	399 Move X8, [X23]
	400 Move X10, 0x78D000
	401 NotImplemented "Instruction LDRH not yet implemented."
	402 Move X10, [X10+3584]
	403 Move X1, [X10]
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move X0, X23
	413 Move W2, W31
	414 Call 0x1C5D788
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Add X8, X8, X9
	417 Add X0, X8, 312
	418 Move X8, [X0]
	419 Move X1, [X0+8]
	420 Move X0, X23
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X24, 0
	423 JumpIfNotEqual {426}
	424 Move X0, X19
	425 Call 0x1D2D690
	426 Move X0, X24
	427 Call 0x1C17F18
	428 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> GetPerimeterEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x03967244 BL 0x1C16F20
	0x03967248 BL 0x1C16F20
	0x0396724C BL 0x1C16F20
	0x03967250 BL 0x1C16F20
	0x03967254 BL 0x1C16F20
	0x03967258 BL 0x1C16F20
	0x0396725C BL 0x1C16F20
	0x03967260 BL 0x1C16F20
	0x03967264 BL 0x1C16F20
	0x03967268 MOV X0, X22
	0x0396726C BL 0x1C16F18
	0x03967270 B 0x39672B4
	0x03967274 B 0x39672B4
	0x03967278 B 0x39672B4
	0x0396727C B 0x39672B4
	0x03967280 B 0x39672B4
	0x03967284 B 0x39672B4
	0x03967288 B 0x39672B4
	0x0396728C B 0x39672B4
	0x03967290 B 0x39672B4
	0x03967294 B 0x39672B4
	0x03967298 B 0x39672B4
	0x0396729C B 0x39672B4
	0x039672A0 B 0x39672B4
	0x039672A4 B 0x39672B4
	0x039672A8 B 0x39672B4
	0x039672AC B 0x39672B4
	0x039672B0 B 0x39672B4
	0x039672B4 MOV X21, X0
	0x039672B8 CMP W1, 0x1
	0x039672BC B.NE 0x39672D4
	0x039672C0 MOV X0, X21
	0x039672C4 BL 0x3EB1AD0
	0x039672C8 LDR X22, [X0]
	0x039672CC BL 0x3EB1AE0
	0x039672D0 B 0x396706C
	0x039672D4 MOV X22, X31
	0x039672D8 B 0x39672E0
	0x039672DC MOV X21, X0
	0x039672E0 LDR X8, [X31]
	0x039672E4 CBZ X8, 0x396734C
	0x039672E8 LDR X8, [X31]
	0x039672EC ADRP X10, 0x78C000
	0x039672F0 LDR X8, [X8]
	0x039672F4 LDRH W9, [X8 + 0x12E]
	0x039672F8 LDR X10, [X10 + 0xE00]
	0x039672FC LDR X1, [X10]
	0x03967300 CBZ X9, 0x3967324
	0x03967304 LDR X10, [X8 + 0xB0]
	0x03967308 ADD X10, X10, 0x8
	0x0396730C LDUR X11, [X10 - 0x8]
	0x03967310 CMP X11, X1
	0x03967314 B.EQ 0x3967334
	0x03967318 SUBS X9, X9, 0x1
	0x0396731C ADD X10, X10, 0x10
	0x03967320 B.NE 0x396730C
	0x03967324 LDR X0, [X31]
	0x03967328 MOV W2, W31
	0x0396732C BL 0x1C5C788
	0x03967330 B 0x3967340
	0x03967334 LDRSW X9, [X10]
	0x03967338 ADD X8, X8, X9, 0x4, LSL
	0x0396733C ADD X0, X8, 0x138
	0x03967340 LDP X8, X1, [X0]
	0x03967344 LDR X0, [X31]
	0x03967348 BLR X8
	0x0396734C CBNZ X22, 0x3967358
	0x03967350 MOV X0, X21
	0x03967354 BL 0x1D2C690
	0x03967358 MOV X0, X22
	0x0396735C BL 0x1C16F18
	0x03967360 BL 0x1990590
	0x03967364 SUB X31, X31, 0x80
	0x03967368 STP X29, X30, [X31 + 0x20]
	0x0396736C STP X28, X27, [X31 + 0x30]
	0x03967370 STP X26, X25, [X31 + 0x40]
	0x03967374 STP X24, X23, [X31 + 0x50]
	0x03967378 STP X22, X21, [X31 + 0x60]
	0x0396737C STP X20, X19, [X31 + 0x70]
	0x03967380 ADRP X19, 0xA7A000
	0x03967384 LDRB W8, [X19 + 0x9D2]
	0x03967388 MOV X21, X1
	0x0396738C MOV X22, X0
	0x03967390 STR X2, [X31 + 0x18]
	0x03967394 TBNZ X8, 0x0, 0x39673F4
	0x03967398 ADRP X0, 0x78D000
	0x0396739C LDR X0, [X0 + 0xE58]
	0x039673A0 BL 0x1C16CF4
	0x039673A4 ADRP X0, 0x78D000
	0x039673A8 LDR X0, [X0 + 0xE10]
	0x039673AC BL 0x1C16CF4
	0x039673B0 ADRP X0, 0x78D000
	0x039673B4 LDR X0, [X0 + 0xE18]
	0x039673B8 BL 0x1C16CF4
	0x039673BC ADRP X0, 0x790000
	0x039673C0 LDR X0, [X0 + 0xB70]
	0x039673C4 BL 0x1C16CF4
	0x039673C8 ADRP X0, 0x78D000
	0x039673CC LDR X0, [X0 + 0xE28]
	0x039673D0 BL 0x1C16CF4
	0x039673D4 ADRP X0, 0x78D000
	0x039673D8 LDR X0, [X0 + 0xE30]
	0x039673DC BL 0x1C16CF4
	0x039673E0 ADRP X0, 0x7E8000
	0x039673E4 LDR X0, [X0 + 0xB78]
	0x039673E8 BL 0x1C16CF4
	0x039673EC MOVZ W8, 0x1
	0x039673F0 STRB W8, [X19 + 0x9D2]
	0x039673F4 CBZ X21, 0x39676AC
	0x039673F8 CBZ X22, 0x39676AC
	0x039673FC ADRP X20, 0x78D000
	0x03967400 LDR X20, [X20 + 0xE58]
	0x03967404 LDR X26, [X21 + 0x18]
	0x03967408 LDR X0, [X20]
	0x0396740C MOV W1, W26
	0x03967410 AND X27, X26, 0x0
	0x03967414 BL 0x1C16D6C
	0x03967418 CMP W26, 0x1
	0x0396741C MOV X23, X0
	0x03967420 B.LT 0x396746C
	0x03967424 MOV X19, X31
	0x03967428 ADD X24, X21, 0x20
	0x0396742C ADD X25, X23, 0x20
	0x03967430 LDR W8, [X21 + 0x18]
	0x03967434 CMP X19, X8
	0x03967438 B.CS 0x39676A8
	0x0396743C LDR W1, [X24, X19, LSL #2]
	0x03967440 MOV X0, X22
	0x03967444 MOV X2, X31
	0x03967448 BL 0x391B5D8
	0x0396744C CBZ X23, 0x39676AC
	0x03967450 LDR W8, [X23 + 0x18]
	0x03967454 CMP X19, X8
	0x03967458 B.CS 0x39676A8
	0x0396745C STR W0, [X25, X19, LSL #2]
	0x03967460 ADD X19, X19, 0x1
	0x03967464 CMP X27, X19
	0x03967468 B.NE 0x3967430
	0x0396746C LDR X0, [X20]
	0x03967470 LDR W1, [X21 + 0x18]
	0x03967474 STP X27, X26, [X31]
	0x03967478 BL 0x1C16D6C
	0x0396747C LDR X8, [X21 + 0x18]
	0x03967480 MOV X22, X0
	0x03967484 SUB W9, W8, 0x1
	0x03967488 CMP W9, 0x1
	0x0396748C B.LT 0x396755C
	0x03967490 MOV X29, X31
	0x03967494 ADD X26, X23, 0x24
	0x03967498 ADD X27, X22, 0x24
	0x0396749C MOVZ W28, 0x1
	0x039674A0 ADD X10, X29, 0x1
	0x039674A4 CMP X10, W8, SXTW
	0x039674A8 B.GE 0x3967540
	0x039674AC STR X10, [X31 + 0x10]
	0x039674B0 CBZ X23, 0x39676AC
	0x039674B4 ADD X8, X23, X29, 0x2, LSL
	0x039674B8 ADD X9, X22, X29, 0x2, LSL
	0x039674BC MOV X19, X31
	0x039674C0 ADD X25, X8, 0x20
	0x039674C4 ADD X24, X9, 0x20
	0x039674C8 LDR W8, [X23 + 0x18]
	0x039674CC CMP X29, X8
	0x039674D0 B.CS 0x39676A8
	0x039674D4 ADD X20, X28, X19
	0x039674D8 CMP X20, X8
	0x039674DC B.CS 0x39676A8
	0x039674E0 LDR W1, [X25]
	0x039674E4 LDR W2, [X26, X19, LSL #2]
	0x039674E8 LDR X0, [X31 + 0x18]
	0x039674EC MOV X3, X31
	0x039674F0 BL 0x38FF624
	0x039674F4 TBZ X0, 0x0, 0x3967528
	0x039674F8 CBZ X22, 0x39676AC
	0x039674FC LDR W8, [X22 + 0x18]
	0x03967500 CMP X29, X8
	0x03967504 B.CS 0x39676A8
	0x03967508 LDR W9, [X24]
	0x0396750C CMP X20, X8
	0x03967510 ADD W9, W9, 0x1
	0x03967514 STR W9, [X24]
	0x03967518 B.CS 0x39676A8
	0x0396751C LDR W8, [X27, X19, LSL #2]
	0x03967520 ADD W8, W8, 0x1
	0x03967524 STR W8, [X27, X19, LSL #2]
	0x03967528 LDR X8, [X21 + 0x18]
	0x0396752C ADD X19, X19, 0x1
	0x03967530 ADD W9, W28, W19
	0x03967534 CMP W9, W8
	0x03967538 B.LT 0x39674C8
	0x0396753C LDR X10, [X31 + 0x10]
	0x03967540 SUB W9, W8, 0x1
	0x03967544 ADD X28, X28, 0x1
	0x03967548 ADD X26, X26, 0x4
	0x0396754C CMP X10, W9, SXTW
	0x03967550 ADD X27, X27, 0x4
	0x03967554 MOV X29, X10
	0x03967558 B.LT 0x39674A0
	0x0396755C ADRP X8, 0x7E8000
	0x03967560 LDR X8, [X8 + 0xB78]
	0x03967564 ADRP X19, 0x78D000
	0x03967568 ADRP X20, 0x790000
	0x0396756C MOV X0, X22
	0x03967570 LDR X1, [X8]
	0x03967574 LDR X19, [X19 + 0xE30]
	0x03967578 LDR X20, [X20 + 0xB70]
	0x0396757C BL 0x22165BC
	0x03967580 LDR X8, [X19]
	0x03967584 MOV W21, W0
	0x03967588 MOV X0, X8
	0x0396758C BL 0x1C16F10
	0x03967590 LDR X1, [X20]
	0x03967594 MOV X20, X0
	0x03967598 BL 0x2FDBF14
	0x0396759C LDP X26, X25, [X31]
	0x039675A0 CMP W25, 0x1
	0x039675A4 B.LT 0x3967638
	0x039675A8 CBZ X22, 0x39676AC
	0x039675AC ADRP X24, 0x78D000
	0x039675B0 LDR X24, [X24 + 0xE10]
	0x039675B4 MOV X23, X31
	0x039675B8 ADD X19, X22, 0x20
	0x039675BC LDR W8, [X22 + 0x18]
	0x039675C0 CMP X23, X8
	0x039675C4 B.CS 0x39676A8
	0x039675C8 LDR W8, [X19, X23, LSL #2]
	0x039675CC CMP W8, W21
	0x039675D0 B.GT 0x396762C
	0x039675D4 CBZ X20, 0x39676AC
	0x039675D8 LDR W10, [X20 + 0x1C]
	0x039675DC LDR X8, [X20 + 0x10]
	0x039675E0 LDR X9, [X24]
	0x039675E4 ADD W10, W10, 0x1
	0x039675E8 STR W10, [X20 + 0x1C]
	0x039675EC CBZ X8, 0x39676AC
	0x039675F0 LDRSW X10, [X20 + 0x18]
	0x039675F4 LDR W11, [X8 + 0x18]
	0x039675F8 CMP W10, W11
	0x039675FC B.CS 0x3967614
	0x03967600 ADD W9, W10, 0x1
	0x03967604 ADD X8, X8, X10, 0x2, LSL
	0x03967608 STR W9, [X20 + 0x18]
	0x0396760C STR W23, [X8 + 0x20]
	0x03967610 B 0x396762C
	0x03967614 LDR X8, [X9 + 0x20]
	0x03967618 MOV X0, X20
	0x0396761C MOV W1, W23
	0x03967620 LDR X8, [X8 + 0xC0]
	0x03967624 LDR X2, [X8 + 0x70]
	0x03967628 BL 0x2FDC70C
	0x0396762C ADD X23, X23, 0x1
	0x03967630 CMP X26, X23
	0x03967634 B.NE 0x39675BC
	0x03967638 CBZ X20, 0x39676AC
	0x0396763C LDR W8, [X20 + 0x18]
	0x03967640 CMP W8, W25
	0x03967644 ADRP X8, 0x78D000
	0x03967648 LDR X8, [X8 + 0xE58]
	0x0396764C B.GE 0x3967680
	0x03967650 ADRP X8, 0x78D000
	0x03967654 LDR X8, [X8 + 0xE18]
	0x03967658 MOV X0, X20
	0x0396765C LDP X20, X19, [X31 + 0x70]
	0x03967660 LDP X22, X21, [X31 + 0x60]
	0x03967664 LDR X1, [X8]
	0x03967668 LDP X24, X23, [X31 + 0x50]
	0x0396766C LDP X26, X25, [X31 + 0x40]
	0x03967670 LDP X28, X27, [X31 + 0x30]
	0x03967674 LDP X29, X30, [X31 + 0x20]
	0x03967678 ADD X31, X31, 0x80
	0x0396767C B 0x2FDE4C8
	0x03967680 LDR X0, [X8]
	0x03967684 LDP X20, X19, [X31 + 0x70]
	0x03967688 LDP X22, X21, [X31 + 0x60]
	0x0396768C LDP X24, X23, [X31 + 0x50]
	0x03967690 LDP X26, X25, [X31 + 0x40]
	0x03967694 LDP X28, X27, [X31 + 0x30]
	0x03967698 LDP X29, X30, [X31 + 0x20]
	0x0396769C MOV W1, W31
	0x039676A0 ADD X31, X31, 0x80
	0x039676A4 B 0x1C16D6C
	0x039676A8 BL 0x1C16F28
	0x039676AC BL 0x1C16F20
	0x039676B0 STR X30, [X31 - 0x10]!
	0x039676B4 CBZ X0, 0x3967724
	0x039676B8 LDR X8, [X0 + 0x28]
	0x039676BC MOVZ W11, 0x1
	0x039676C0 CMP X8, X0
	0x039676C4 CSET W9, EQ
	0x039676C8 B.EQ 0x3967714
	0x039676CC LDR X10, [X0 + 0x30]
	0x039676D0 CMP X8, X10
	0x039676D4 B.EQ 0x3967714
	0x039676D8 MOV W11, W31
	0x039676DC CBZ X8, 0x3967730
	0x039676E0 LDR X8, [X8 + 0x28]
	0x039676E4 CMP X8, X10
	0x039676E8 B.EQ 0x3967724
	0x039676EC CBZ X10, 0x3967730
	0x039676F0 CMP X8, X0
	0x039676F4 ADD W11, W11, 0x1
	0x039676F8 CSET W9, EQ
	0x039676FC B.EQ 0x396770C
	0x03967700 LDR X10, [X10 + 0x30]
	0x03967704 CMP X8, X10
	0x03967708 B.NE 0x39676DC
	0x0396770C ANDS W31, W11, 0x1
	0x03967710 CSET W11, EQ
	0x03967714 ORR W9, W11, W9, 0x0
	0x03967718 CMP W9, 0x0
	0x0396771C CSEL X0, X31, X8, NE
	0x03967720 B 0x3967728
	0x03967724 MOV X0, X31
	0x03967728 LDR X30, [X31], #0x10
	0x0396772C RET
	0x03967730 BL 0x1C16F20
	0x03967734 SUB X31, X31, 0x70
	0x03967738 STP X29, X30, [X31 + 0x10]
	0x0396773C STP X28, X27, [X31 + 0x20]
	0x03967740 STP X26, X25, [X31 + 0x30]
	0x03967744 STP X24, X23, [X31 + 0x40]
	0x03967748 STP X22, X21, [X31 + 0x50]
	0x0396774C STP X20, X19, [X31 + 0x60]
	0x03967750 ADRP X22, 0xA7A000
	0x03967754 ADRP X21, 0x7E7000
	0x03967758 LDRB W8, [X22 + 0x9D3]
	0x0396775C LDR X21, [X21 + 0xB08]
	0x03967760 MOV X19, X1
	0x03967764 MOV X20, X0
	0x03967768 TBNZ X8, 0x0, 0x3967870
	0x0396776C ADRP X0, 0x7E8000
	0x03967770 LDR X0, [X0 + 0xB0]
	0x03967774 BL 0x1C16CF4
	0x03967778 ADRP X0, 0x7E8000
	0x0396777C LDR X0, [X0 + 0xBE0]
	0x03967780 BL 0x1C16CF4
	0x03967784 ADRP X0, 0x7E8000
	0x03967788 LDR X0, [X0 + 0xC0]
	0x0396778C BL 0x1C16CF4
	0x03967790 ADRP X0, 0x7E8000
	0x03967794 LDR X0, [X0 + 0xD8]
	0x03967798 BL 0x1C16CF4
	0x0396779C ADRP X0, 0x7E8000
	0x039677A0 LDR X0, [X0 + 0xD0]
	0x039677A4 BL 0x1C16CF4
	0x039677A8 ADRP X0, 0x7E8000
	0x039677AC LDR X0, [X0 + 0x328]
	0x039677B0 BL 0x1C16CF4
	0x039677B4 ADRP X0, 0x7E8000
	0x039677B8 LDR X0, [X0 + 0x3D8]
	0x039677BC BL 0x1C16CF4
	0x039677C0 ADRP X0, 0x7E8000
	0x039677C4 LDR X0, [X0 + 0x3E8]
	0x039677C8 BL 0x1C16CF4
	0x039677CC ADRP X0, 0x7E8000
	0x039677D0 LDR X0, [X0 + 0x5C8]
	0x039677D4 BL 0x1C16CF4
	0x039677D8 ADRP X0, 0x7E8000
	0x039677DC LDR X0, [X0 + 0x430]
	0x039677E0 BL 0x1C16CF4
	0x039677E4 ADRP X0, 0x7E6000
	0x039677E8 LDR X0, [X0 + 0xCC0]
	0x039677EC BL 0x1C16CF4
	0x039677F0 ADRP X0, 0x7E8000
	0x039677F4 LDR X0, [X0 + 0x950]
	0x039677F8 BL 0x1C16CF4
	0x039677FC ADRP X0, 0x7E6000
	0x03967800 LDR X0, [X0 + 0xCC8]
	0x03967804 BL 0x1C16CF4
	0x03967808 ADRP X0, 0x7E6000
	0x0396780C LDR X0, [X0 + 0xCD0]
	0x03967810 BL 0x1C16CF4
	0x03967814 ADRP X0, 0x7E7000
	0x03967818 LDR X0, [X0 + 0xAF8]
	0x0396781C BL 0x1C16CF4
	0x03967820 ADRP X0, 0x7E8000
	0x03967824 LDR X0, [X0 + 0xBE8]
	0x03967828 BL 0x1C16CF4
	0x0396782C ADRP X0, 0x7E8000
	0x03967830 LDR X0, [X0 + 0xBF0]
	0x03967834 BL 0x1C16CF4
	0x03967838 ADRP X0, 0x7E7000
	0x0396783C LDR X0, [X0 + 0xB00]
	0x03967840 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xA7B000
	015 Move X21, 0x78D000
	016 Move W8, [X22+2511]
	017 Move X21, [X21+1432]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {95}
	024 Move X0, 0x7E9000
	025 Move X0, [X0+2832]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E9000
	028 Move X0, [X0+2840]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E9000
	031 Move X0, [X0+2848]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E7000
	034 Move X0, [X0+3200]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E9000
	037 Move X0, [X0+2856]
	038 Call 0x1C17CF4
	039 Move X0, 0x7B5000
	040 Move X0, [X0+1536]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E9000
	043 Move X0, [X0+2208]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E9000
	046 Move X0, [X0+2864]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E9000
	049 Move X0, [X0+96]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E9000
	052 Move X0, [X0+2872]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E9000
	055 Move X0, [X0+2216]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E9000
	058 Move X0, [X0+2880]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E9000
	061 Move X0, [X0+2888]
	062 Call 0x1C17CF4
	063 Move X0, 0x7E7000
	064 Move X0, [X0+3432]
	065 Call 0x1C17CF4
	066 Move X0, 0x7E7000
	067 Move X0, [X0+3440]
	068 Call 0x1C17CF4
	069 Move X0, 0x7E8000
	070 Move X0, [X0+4064]
	071 Call 0x1C17CF4
	072 Move X0, 0x7E8000
	073 Move X0, [X0+4072]
	074 Call 0x1C17CF4
	075 Move X0, 0x7E7000
	076 Move X0, [X0+3448]
	077 Call 0x1C17CF4
	078 Move X0, 0x78D000
	079 Move X0, [X0+1432]
	080 Call 0x1C17CF4
	081 Move X0, 0x7E9000
	082 Move X0, [X0+2896]
	083 Call 0x1C17CF4
	084 Move X0, 0x7E9000
	085 Move X0, [X0+2904]
	086 Call 0x1C17CF4
	087 Move X0, 0x7E9000
	088 Move X0, [X0+2912]
	089 Call 0x1C17CF4
	090 Move X0, 0x7E9000
	091 Move X0, [X0+2920]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X22+2511], W8
	095 Move X0, [X21]
	096 Move [X31], X31
	097 Move [X31+8], X31
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X19
	103 Move X1, X31
	104 Move X2, X31
	105 Call Object.op_Equality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {396}
	110 Compare X20, 0
	111 JumpIfEqual {403}
	112 Move X25, 0x7E9000
	113 Move X25, [X25+2920]
	114 Move X0, [X25]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X25]
	120 Move X8, [X0+184]
	121 Move X24, 0x7E9000
	122 Move X23, 0x7E9000
	123 Move X21, [X8+8]
	124 Move X24, [X24+2208]
	125 Move X23, [X23+96]
	126 Compare X21, 0
	127 JumpIfNotEqual {149}
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X25]
	133 Move X9, 0x7E9000
	134 Move X8, [X0+184]
	135 Move X9, [X9+2216]
	136 Move X22, [X8]
	137 Move X0, [X9]
	138 Call 0x1C17F10
	139 Move X8, 0x7E9000
	140 Move X8, [X8+2896]
	141 Move X1, X22
	142 Move X3, X31
	143 Move X21, X0
	144 Move X2, [X8]
	145 Call Func`2<Object, Object>..ctor, X0, X1, X2
	146 Move X8, [X25]
	147 Move X8, [X8+184]
	148 Move [X8+8], X21
	149 Move X2, [X24]
	150 Move X0, X20
	151 Move X1, X21
	152 Call Enumerable.SelectMany, X0, X1
	153 Move X1, [X23]
	154 Call Enumerable.ToList, X0
	155 Compare X19, 0
	156 JumpIfEqual {395}
	157 Move X20, X0
	158 Move X0, X19
	159 Move X1, X31
	160 Call ProBuilderMesh.get_sharedVertexLookup, X0
	161 Compare X20, 0
	162 JumpIfEqual {395}
	163 Move X8, 0x7E9000
	164 Move X8, [X8+2856]
	165 Move X21, X0
	166 Move X19, 0x7E9000
	167 Move W26, [X20+24]
	168 Move X0, [X8]
	169 Move X19, [X19+2848]
	170 Call 0x1C17F10
	171 Move X1, [X19]
	172 Move X19, X0
	173 Call Dictionary`2<Edge, Object>..ctor, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X27, 0x7E8000
	176 Move X28, 0x7E7000
	177 Move X25, 0x7E9000
	178 Move X29, 0x7E7000
	179 Move X27, [X27+4072]
	180 Move X28, [X28+3200]
	181 Move X25, [X25+2840]
	182 Move X29, [X29+3432]
	183 Move W22, W31
	184 Move X2, [X27]
	185 Move X0, X20
	186 Move W1, W22
	187 Call List`1<Edge>.get_Item, X0, X1
	188 Compare X21, 0
	189 JumpIfEqual {395}
	190 Move X2, [X28]
	191 Move X1, X0
	192 Move X0, X21
	193 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	194 Move X2, [X27]
	195 Move W23, W0
	196 Move X0, X20
	197 Move W1, W22
	198 Call List`1<Edge>.get_Item, X0, X1
	199 Move X2, [X28]
	200 Move X1, X0
	201 ShiftRight X1, 32
	202 And X1, X1, 0x7FFFFFFF
	203 Move X0, X21
	204 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	205 Move X8, 0x7B5000
	206 Move X8, [X8+1536]
	207 Move W24, W0
	208 Move X8, [X8]
	209 Move W9, [X8+224]
	210 Compare W9, 0
	211 JumpIfNotEqual {214}
	212 Move X0, X8
	213 Call 0x1C17DFC
	214 Add X0, X31, 0
	215 Move W1, W23
	216 Move W2, W24
	217 Move X3, X31
	218 Call Edge..ctor, X0, X1, X2
	219 Compare X19, 0
	220 JumpIfEqual {395}
	221 Move X1, [X31]
	222 Move X3, [X25]
	223 Add X2, X31, 8
	224 Move X0, X19
	225 Call Dictionary`2<Edge, Object>.TryGetValue, X0, X1, X2
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {252}
	230 Move X2, [X27]
	231 Move X23, [X31+8]
	232 Move X0, X20
	233 Move W1, W22
	234 Call List`1<Edge>.get_Item, X0, X1
	235 Compare X23, 0
	236 JumpIfEqual {395}
	237 Move W10, [X23+28]
	238 Move X8, [X23+16]
	239 Move X9, [X29]
	240 Add W10, W10, 1
	241 Move [X23+28], W10
	242 Compare X8, 0
	243 JumpIfEqual {395}
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Move W11, [X8+24]
	246 Move X1, X0
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add W9, W10, 1
	249 Add X8, X8, X10
	250 Move [X23+24], W9
	251 Move [X8+32], X1
	252 Move X8, 0x7E7000
	253 Move X23, [X31]
	254 Move X8, [X8+3448]
	255 Move X0, [X8]
	256 Call 0x1C17F10
	257 Move X8, 0x7E7000
	258 Move X8, [X8+3440]
	259 Move X24, X0
	260 Move X1, [X8]
	261 Call List`1<Edge>..ctor, X0
	262 Move X2, [X27]
	263 Move X0, X20
	264 Move W1, W22
	265 Call List`1<Edge>.get_Item, X0, X1
	266 Compare X24, 0
	267 JumpIfEqual {395}
	268 Move W10, [X24+28]
	269 Move X8, [X24+16]
	270 Move X9, [X29]
	271 Add W10, W10, 1
	272 Move [X24+28], W10
	273 Compare X8, 0
	274 JumpIfEqual {395}
	275 NotImplemented "Instruction LDRSW not yet implemented."
	276 Move W11, [X8+24]
	277 Move X1, X0
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Add W9, W10, 1
	280 Add X8, X8, X10
	281 Move [X24+24], W9
	282 Move [X8+32], X1
	283 Move X8, [X9+32]
	284 Move X0, X23
	285 Move X8, [X8+192]
	286 Move X2, [X8+112]
	287 Call List`1<Edge>.AddWithResize, X0, X1
	288 Move X8, [X9+32]
	289 Move X0, X24
	290 Move X8, [X8+192]
	291 Move X2, [X8+112]
	292 Call List`1<Edge>.AddWithResize, X0, X1
	293 Move X8, 0x7E9000
	294 Move X8, [X8+2832]
	295 Move X0, X19
	296 Move X1, X23
	297 Move X2, X24
	298 Move X3, [X8]
	299 Call Dictionary`2<Edge, Object>.Add, X0, X1, X2
	300 Add W22, W22, 1
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X23, 0x7E9000
	303 Move X23, [X23+2920]
	304 Move X0, [X23]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {310}
	308 Call 0x1C17DFC
	309 Move X0, [X23]
	310 Move X8, [X0+184]
	311 Move X22, 0x7E9000
	312 Move X20, [X8+16]
	313 Move X22, [X22+2872]
	314 Compare X20, 0
	315 JumpIfNotEqual {337}
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {321}
	319 Call 0x1C17DFC
	320 Move X0, [X23]
	321 Move X9, 0x7E9000
	322 Move X8, [X0+184]
	323 Move X9, [X9+2880]
	324 Move X21, [X8]
	325 Move X0, [X9]
	326 Call 0x1C17F10
	327 Move X8, 0x7E9000
	328 Move X8, [X8+2904]
	329 Move X1, X21
	330 Move X3, X31
	331 Move X20, X0
	332 Move X2, [X8]
	333 Call Func`2<KeyValuePair`2<Edge, Object>, Boolean>..ctor, X0, X1, X2
	334 Move X8, [X23]
	335 Move X8, [X8+184]
	336 Move [X8+16], X20
	337 Move X2, [X22]
	338 Move X0, X19
	339 Move X1, X20
	340 Call 0x21D8FCC, X0, X1
	341 Move X8, [X23]
	342 Move X19, X0
	343 Move W9, [X8+224]
	344 Compare W9, 0
	345 JumpIfNotEqual {349}
	346 Move X0, X8
	347 Call 0x1C17DFC
	348 Move X8, [X23]
	349 Move X9, [X8+184]
	350 Move X22, 0x7E9000
	351 Move X20, [X9+24]
	352 Move X22, [X22+2864]
	353 Compare X20, 0
	354 JumpIfNotEqual {377}
	355 Move W9, [X8+224]
	356 Compare W9, 0
	357 JumpIfNotEqual {361}
	358 Move X0, X8
	359 Call 0x1C17DFC
	360 Move X8, [X23]
	361 Move X9, 0x7E9000
	362 Move X8, [X8+184]
	363 Move X9, [X9+2888]
	364 Move X21, [X8]
	365 Move X0, [X9]
	366 Call 0x1C17F10
	367 Move X8, 0x7E9000
	368 Move X8, [X8+2912]
	369 Move X1, X21
	370 Move X3, X31
	371 Move X20, X0
	372 Move X2, [X8]
	373 Call Func`2<KeyValuePair`2<Edge, Object>, Edge>..ctor, X0, X1, X2
	374 Move X8, [X23]
	375 Move X8, [X8+184]
	376 Move [X8+24], X20
	377 Move X2, [X22]
	378 Move X0, X19
	379 Move X1, X20
	380 Call 0x21CB134, X0, X1
	381 Move X20, [X31+96]
	382 Move X19, [X31+104]
	383 Move X22, [X31+80]
	384 Move X21, [X31+88]
	385 Move X24, [X31+64]
	386 Move X23, [X31+72]
	387 Move X26, [X31+48]
	388 Move X25, [X31+56]
	389 Move X28, [X31+32]
	390 Move X27, [X31+40]
	391 Move X29, [X31+16]
	392 Move X30, [X31+24]
	393 Add X31, X31, 112
	394 Return X0
	395 Call 0x1C17F20
	396 Move X0, 0x792000
	397 Move X0, [X0+1320]
	398 Call 0x1C17D08
	399 Call 0x1C17F10
	400 Move X19, X0
	401 Move X0, 0x7E7000
	402 Move X0, [X0+3728]
	403 Move X0, 0x792000
	404 Move X0, [X0+1320]
	405 Call 0x1C17D08
	406 Call 0x1C17F10
	407 Move X19, X0
	408 Move X0, 0x7E8000
	409 Move X0, [X0+1600]
	410 Call 0x1C17D08
	411 Move X1, X0
	412 Move X0, X19
	413 Move X2, X31
	414 Call ArgumentNullException..ctor, X0, X1
	415 Move X0, 0x7E9000
	416 Move X0, [X0+2928]
	417 Call 0x1C17D08
	418 Move X1, X0
	419 Move X0, X19
	420 Call 0x1C17DEC

Method: System.Int32[] GetPerimeterEdges(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x03967844 ADRP X0, 0x7E8000
	0x03967848 LDR X0, [X0 + 0xBF8]
	0x0396784C BL 0x1C16CF4
	0x03967850 ADRP X0, 0x7E8000
	0x03967854 LDR X0, [X0 + 0xB68]
	0x03967858 BL 0x1C16CF4
	0x0396785C ADRP X0, 0x7E7000
	0x03967860 LDR X0, [X0 + 0xB08]
	0x03967864 BL 0x1C16CF4
	0x03967868 MOVZ W8, 0x1
	0x0396786C STRB W8, [X22 + 0x9D3]
	0x03967870 LDR X0, [X21]
	0x03967874 STR X31, [X31 + 0x8]
	0x03967878 LDR W8, [X0 + 0xE0]
	0x0396787C CBNZ W8, 0x3967884
	0x03967880 BL 0x1C16DFC
	0x03967884 MOV X0, X20
	0x03967888 MOV W1, W31
	0x0396788C MOV X2, X31
	0x03967890 BL 0x3942EDC
	0x03967894 CBZ X20, 0x3967BB8
	0x03967898 ADRP X22, 0x7E8000
	0x0396789C ADRP X23, 0x7E8000
	0x039678A0 ADRP X24, 0x7E8000
	0x039678A4 ADRP X25, 0x7E8000
	0x039678A8 LDR X22, [X22 + 0x5C8]
	0x039678AC LDR X23, [X23 + 0x3D8]
	0x039678B0 LDR X24, [X24 + 0xD0]
	0x039678B4 LDR X25, [X25 + 0xD8]
	0x039678B8 MOV X21, X0
	0x039678BC MOV X0, X20
	0x039678C0 MOV X1, X31
	0x039678C4 BL 0x3916198
	0x039678C8 MOV X1, X0
	0x039678CC MOV X0, X19
	0x039678D0 MOV X2, X31
	0x039678D4 BL 0x38FEBC8
	0x039678D8 LDR X1, [X22]
	0x039678DC BL 0x21D7788
	0x039678E0 LDR X1, [X23]
	0x039678E4 BL 0x21C02A8
	0x039678E8 LDR X1, [X22]
	0x039678EC BL 0x21D7788
	0x039678F0 LDR X8, [X24]
	0x039678F4 MOV X19, X0
	0x039678F8 MOV X0, X8
	0x039678FC BL 0x1C16F10
	0x03967900 LDR X1, [X25]
	0x03967904 MOV X20, X0
	0x03967908 BL 0x29DBC20
	0x0396790C CBZ X21, 0x3967BB8
	0x03967910 LDR W8, [X21 + 0x18]
	0x03967914 CMP W8, 0x1
	0x03967918 B.LT 0x39679B0
	0x0396791C ADRP X24, 0x7E7000
	0x03967920 ADRP X25, 0x7E8000
	0x03967924 ADRP X26, 0x7E8000
	0x03967928 LDR X24, [X24 + 0xB00]
	0x0396792C LDR X25, [X25 + 0xBE0]
	0x03967930 LDR X26, [X26 + 0xB0]
	0x03967934 MOV W22, W31
	0x03967938 LDR X2, [X24]
	0x0396793C MOV X0, X21
	0x03967940 MOV W1, W22
	0x03967944 BL 0x301BCCC
	0x03967948 CBZ X0, 0x3967BB8
	0x0396794C CBZ X20, 0x3967BB8
	0x03967950 LDR X1, [X0 + 0x18]
	0x03967954 LDR X2, [X25]
	0x03967958 MOV X0, X20
	0x0396795C BL 0x29DC6C8
	0x03967960 TBNZ X0, 0x0, 0x39679A0
	0x03967964 LDR X2, [X24]
	0x03967968 MOV X0, X21
	0x0396796C MOV W1, W22
	0x03967970 BL 0x301BCCC
	0x03967974 CBZ X0, 0x3967BB8
	0x03967978 LDR X2, [X24]
	0x0396797C LDR X23, [X0 + 0x18]
	0x03967980 MOV X0, X21
	0x03967984 MOV W1, W22
	0x03967988 BL 0x301BCCC
	0x0396798C LDR X3, [X26]
	0x03967990 MOV X2, X0
	0x03967994 MOV X0, X20
	0x03967998 MOV X1, X23
	0x0396799C BL 0x29DC4D4
	0x039679A0 LDR W8, [X21 + 0x18]
	0x039679A4 ADD W22, W22, 0x1
	0x039679A8 CMP W22, W8
	0x039679AC B.LT 0x3967938
	0x039679B0 ADRP X8, 0x7E6000
	0x039679B4 LDR X8, [X8 + 0xCD0]
	0x039679B8 ADRP X21, 0x7E6000
	0x039679BC LDR X0, [X8]
	0x039679C0 LDR X21, [X21 + 0xCC8]
	0x039679C4 BL 0x1C16F10
	0x039679C8 LDR X1, [X21]
	0x039679CC MOV X21, X0
	0x039679D0 BL 0x2D9FF10
	0x039679D4 CBZ X19, 0x3967BB8
	0x039679D8 LDR W24, [X19 + 0x18]
	0x039679DC CMP W24, 0x1
	0x039679E0 B.LT 0x3967B08
	0x039679E4 ADRP X25, 0x7E8000
	0x039679E8 ADRP X26, 0x7E8000
	0x039679EC ADRP X27, 0x7E8000
	0x039679F0 ADRP X28, 0x7E6000
	0x039679F4 ADRP X29, 0x7E8000
	0x039679F8 LDR X25, [X25 + 0xBF0]
	0x039679FC LDR X26, [X26 + 0xC0]
	0x03967A00 LDR X27, [X27 + 0x950]
	0x03967A04 LDR X28, [X28 + 0xCC0]
	0x03967A08 LDR X29, [X29 + 0x328]
	0x03967A0C MOV W22, W31
	0x03967A10 LDR X2, [X25]
	0x03967A14 MOV X0, X19
	0x03967A18 MOV W1, W22
	0x03967A1C BL 0x2FBC6B0
	0x03967A20 CBZ X20, 0x3967BB8
	0x03967A24 LDR X3, [X26]
	0x03967A28 ADD X2, X31, 0x8
	0x03967A2C MOV X0, X20
	0x03967A30 BL 0x29DDFCC
	0x03967A34 TBZ X0, 0x0, 0x3967A58
	0x03967A38 LDR X8, [X31 + 0x8]
	0x03967A3C CBZ X8, 0x3967BB8
	0x03967A40 CBZ X21, 0x3967BB8
	0x03967A44 LDP X1, X2, [X8 + 0x10]
	0x03967A48 LDR X3, [X27]
	0x03967A4C MOV X0, X21
	0x03967A50 BL 0x2DA05B8
	0x03967A54 TBZ X0, 0x0, 0x3967A68
	0x03967A58 ADD W22, W22, 0x1
	0x03967A5C CMP W22, W24
	0x03967A60 B.NE 0x3967A10
	0x03967A64 B 0x3967B08
	0x03967A68 LDR X23, [X31 + 0x8]
	0x03967A6C CBZ X23, 0x3967BB8
	0x03967A70 LDP X1, X2, [X23 + 0x10]
	0x03967A74 LDR X3, [X28]
	0x03967A78 MOV X0, X21
	0x03967A7C BL 0x2DA1088
	0x03967A80 TBZ X0, 0x0, 0x3967AB0
	0x03967A84 LDR X0, [X29]
	0x03967A88 LDR W8, [X0 + 0xE0]
	0x03967A8C CBNZ W8, 0x3967A94
	0x03967A90 BL 0x1C16DFC
	0x03967A94 MOV X0, X23
	0x03967A98 BL 0x39676B0
	0x03967A9C CBZ X0, 0x3967AB0
	0x03967AA0 LDR X8, [X0 + 0x38]
	0x03967AA4 CMP X8, 0x0
	0x03967AA8 CSEL X23, X0, X8, EQ
	0x03967AAC B 0x3967A70
	0x03967AB0 LDR X8, [X31 + 0x8]
	0x03967AB4 CBZ X8, 0x3967BB8
	0x03967AB8 LDR X0, [X29]
	0x03967ABC LDR X23, [X8 + 0x38]
	0x03967AC0 LDR W9, [X0 + 0xE0]
	0x03967AC4 CBNZ W9, 0x3967ACC
	0x03967AC8 BL 0x1C16DFC
	0x03967ACC MOV X0, X23
	0x03967AD0 BL 0x39676B0
	0x03967AD4 CBZ X0, 0x3967A58
	0x03967AD8 LDR X8, [X0 + 0x38]
	0x03967ADC LDR X3, [X28]
	0x03967AE0 CMP X8, 0x0
	0x03967AE4 CSEL X23, X0, X8, EQ
	0x03967AE8 LDP X1, X2, [X23 + 0x10]
	0x03967AEC MOV X0, X21
	0x03967AF0 BL 0x2DA1088
	0x03967AF4 TBZ X0, 0x0, 0x3967A58
	0x03967AF8 LDR X0, [X29]
	0x03967AFC LDR W8, [X0 + 0xE0]
	0x03967B00 CBNZ W8, 0x3967ACC
	0x03967B04 B 0x3967AC8
	0x03967B08 ADRP X22, 0x7E8000
	0x03967B0C LDR X22, [X22 + 0xB68]
	0x03967B10 LDR X0, [X22]
	0x03967B14 LDR W8, [X0 + 0xE0]
	0x03967B18 CBNZ W8, 0x3967B24
	0x03967B1C BL 0x1C16DFC
	0x03967B20 LDR X0, [X22]
	0x03967B24 LDR X8, [X0 + 0xB8]
	0x03967B28 ADRP X23, 0x7E8000
	0x03967B2C LDR X19, [X8 + 0x30]
	0x03967B30 LDR X23, [X23 + 0x3E8]
	0x03967B34 CBNZ X19, 0x3967B88
	0x03967B38 LDR W8, [X0 + 0xE0]
	0x03967B3C CBNZ W8, 0x3967B48
	0x03967B40 BL 0x1C16DFC
	0x03967B44 LDR X0, [X22]
	0x03967B48 ADRP X9, 0x7E8000
	0x03967B4C LDR X8, [X0 + 0xB8]
	0x03967B50 LDR X9, [X9 + 0x430]
	0x03967B54 LDR X20, [X8]
	0x03967B58 LDR X0, [X9]
	0x03967B5C BL 0x1C16F10
	0x03967B60 ADRP X8, 0x7E8000
	0x03967B64 LDR X8, [X8 + 0xBF8]
	0x03967B68 MOV X1, X20
	0x03967B6C MOV X3, X31
	0x03967B70 MOV X19, X0
	0x03967B74 LDR X2, [X8]
	0x03967B78 BL 0x2D2C704
	0x03967B7C LDR X8, [X22]
	0x03967B80 LDR X8, [X8 + 0xB8]
	0x03967B84 STR X19, [X8 + 0x30]
	0x03967B88 LDR X2, [X23]
	0x03967B8C MOV X0, X21
	0x03967B90 MOV X1, X19
	0x03967B94 BL 0x21CCD80
	0x03967B98 LDP X20, X19, [X31 + 0x60]
	0x03967B9C LDP X22, X21, [X31 + 0x50]
	0x03967BA0 LDP X24, X23, [X31 + 0x40]
	0x03967BA4 LDP X26, X25, [X31 + 0x30]
	0x03967BA8 LDP X28, X27, [X31 + 0x20]
	0x03967BAC LDP X29, X30, [X31 + 0x10]
	0x03967BB0 ADD X31, X31, 0x70
	0x03967BB4 RET
	0x03967BB8 BL 0x1C16F20
	0x03967BBC SUB X31, X31, 0x70
	0x03967BC0 STP X29, X30, [X31 + 0x10]
	0x03967BC4 STP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xA7B000
	011 Move W8, [X19+2512]
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x7E7000
	019 Move X0, [X0+3392]
	020 Call 0x1C17CF4
	021 Move X0, 0x7E7000
	022 Move X0, [X0+3336]
	023 Call 0x1C17CF4
	024 Move X0, 0x78E000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move X0, 0x78E000
	028 Move X0, [X0+3600]
	029 Call 0x1C17CF4
	030 Move X0, 0x78E000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x791000
	034 Move X0, [X0+2928]
	035 Call 0x1C17CF4
	036 Move X0, 0x78E000
	037 Move X0, [X0+3624]
	038 Call 0x1C17CF4
	039 Move X0, 0x78E000
	040 Move X0, [X0+3632]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E9000
	043 Move X0, [X0+2936]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+2512], W8
	047 Move X22, 0x7E7000
	048 Move X22, [X22+3392]
	049 Compare X20, 0
	050 JumpIfEqual {67}
	051 Move X10, 0x7E7000
	052 Move X8, [X20]
	053 Move X10, [X10+3336]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 Move W19, W31
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move W19, W0
	076 Move X0, X21
	077 Move X1, X20
	078 Move X2, X31
	079 Call EdgeUtility.GetSharedVertexHandleEdges, X0, X1
	080 Move X1, [X22]
	081 Call Enumerable.ToArray, X0
	082 Compare X0, 0
	083 JumpIfEqual {228}
	084 Move X24, 0x78E000
	085 Move X24, [X24+3672]
	086 Move X21, X0
	087 Move W1, [X21+24]
	088 Move X0, [X24]
	089 Call 0x1C17D6C
	090 Move X8, [X21+24]
	091 Move X20, X0
	092 Subtract W9, W8, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 And X8, X8, 0
	095 Move X15, X31
	096 Move X9, W9
	097 Add X10, X20, 36
	098 Add X11, X21, 44
	099 Move X12, W8
	100 Subtract X13, X8, 1
	101 Move W14, 1
	102 Add X16, X15, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X1, X21, X15
	106 Add X2, X20, X15
	107 Move X17, X31
	108 Add X0, X1, 32
	109 Add X1, X1, 36
	110 Add X2, X2, 32
	111 Move X3, X11
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W6, [X0]
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W5, [X3]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move W6, [X1]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Compare X20, 0
	122 JumpIfEqual {228}
	123 Move W4, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W5, [X2]
	126 Add X6, X14, X17
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W5, W5, 1
	129 Move [X2], W5
	130 Move W4, [X10]
	131 Add W4, W4, 1
	132 Move [X10], W4
	133 Add X17, X17, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X3, X3, 8
	136 Add X14, X14, 1
	137 Subtract X13, X13, 1
	138 Add X10, X10, 4
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X11, X11, 8
	141 Move X15, X16
	142 Move X8, 0x7E9000
	143 Move X8, [X8+2936]
	144 Move X21, 0x78E000
	145 Move X23, 0x791000
	146 Move X0, X20
	147 Move X1, [X8]
	148 Move X21, [X21+3632]
	149 Move X23, [X23+2928]
	150 Call 0x22175BC, X0
	151 Move X8, [X21]
	152 Move W22, W0
	153 Move X0, X8
	154 Call 0x1C17F10
	155 Move X1, [X23]
	156 Move X21, X0
	157 Call List`1<Int32>..ctor, X0
	158 Compare X20, 0
	159 JumpIfEqual {228}
	160 Move X8, [X20+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X25, 0x78E000
	163 Move X25, [X25+3600]
	164 Move X23, X31
	165 And X8, X8, 0
	166 Add X26, X20, 32
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W8, [X26]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X21, 0
	171 JumpIfEqual {228}
	172 Move W10, [X21+28]
	173 Move X8, [X21+16]
	174 Move X9, [X25]
	175 Add W10, W10, 1
	176 Move [X21+28], W10
	177 Compare X8, 0
	178 JumpIfEqual {228}
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Move W11, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add W9, W10, 1
	183 Add X8, X8, X10
	184 Move [X21+24], W9
	185 Move [X8+32], W23
	186 Move X8, [X9+32]
	187 Move X0, X21
	188 Move W1, W23
	189 Move X8, [X8+192]
	190 Move X2, [X8+112]
	191 Call List`1<Int32>.AddWithResize, X0, X1
	192 Move W8, [X20+24]
	193 Add X23, X23, 1
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Compare X21, 0
	196 JumpIfEqual {228}
	197 Move W8, [X21+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, [X24]
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X26, [X31+16]
	207 Move X25, [X31+24]
	208 Move W1, W31
	209 Move X30, [X31+80]
	210 Call 0x1C17D6C
	211 Return X0
	212 Move X8, 0x78E000
	213 Move X8, [X8+3608]
	214 Move X0, X21
	215 Move X20, [X31+64]
	216 Move X19, [X31+72]
	217 Move X22, [X31+48]
	218 Move X21, [X31+56]
	219 Move X1, [X8]
	220 Move X24, [X31+32]
	221 Move X23, [X31+40]
	222 Move X26, [X31+16]
	223 Move X25, [X31+24]
	224 Move X30, [X31+80]
	225 Call List`1<Int32>.ToArray, X0
	226 Return X0
	227 Call 0x1C17F28
	228 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> GetPerimeterFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x03967BC8 STP X26, X25, [X31 + 0x30]
	0x03967BCC STP X24, X23, [X31 + 0x40]
	0x03967BD0 STP X22, X21, [X31 + 0x50]
	0x03967BD4 STP X20, X19, [X31 + 0x60]
	0x03967BD8 ADRP X22, 0xA7A000
	0x03967BDC ADRP X21, 0x7E7000
	0x03967BE0 LDRB W8, [X22 + 0x9D4]
	0x03967BE4 LDR X21, [X21 + 0xB08]
	0x03967BE8 MOV X19, X1
	0x03967BEC MOV X20, X0
	0x03967BF0 TBNZ X8, 0x0, 0x3967CF8
	0x03967BF4 ADRP X0, 0x7E8000
	0x03967BF8 LDR X0, [X0 + 0xB0]
	0x03967BFC BL 0x1C16CF4
	0x03967C00 ADRP X0, 0x7E8000
	0x03967C04 LDR X0, [X0 + 0xBE0]
	0x03967C08 BL 0x1C16CF4
	0x03967C0C ADRP X0, 0x7E8000
	0x03967C10 LDR X0, [X0 + 0xC0]
	0x03967C14 BL 0x1C16CF4
	0x03967C18 ADRP X0, 0x7E8000
	0x03967C1C LDR X0, [X0 + 0xD8]
	0x03967C20 BL 0x1C16CF4
	0x03967C24 ADRP X0, 0x7E8000
	0x03967C28 LDR X0, [X0 + 0xD0]
	0x03967C2C BL 0x1C16CF4
	0x03967C30 ADRP X0, 0x7E8000
	0x03967C34 LDR X0, [X0 + 0x328]
	0x03967C38 BL 0x1C16CF4
	0x03967C3C ADRP X0, 0x7E8000
	0x03967C40 LDR X0, [X0 + 0x3D8]
	0x03967C44 BL 0x1C16CF4
	0x03967C48 ADRP X0, 0x7E8000
	0x03967C4C LDR X0, [X0 + 0x3E8]
	0x03967C50 BL 0x1C16CF4
	0x03967C54 ADRP X0, 0x7E8000
	0x03967C58 LDR X0, [X0 + 0x5C8]
	0x03967C5C BL 0x1C16CF4
	0x03967C60 ADRP X0, 0x7E8000
	0x03967C64 LDR X0, [X0 + 0x430]
	0x03967C68 BL 0x1C16CF4
	0x03967C6C ADRP X0, 0x7E6000
	0x03967C70 LDR X0, [X0 + 0xCC0]
	0x03967C74 BL 0x1C16CF4
	0x03967C78 ADRP X0, 0x7E8000
	0x03967C7C LDR X0, [X0 + 0x950]
	0x03967C80 BL 0x1C16CF4
	0x03967C84 ADRP X0, 0x7E6000
	0x03967C88 LDR X0, [X0 + 0xCC8]
	0x03967C8C BL 0x1C16CF4
	0x03967C90 ADRP X0, 0x7E6000
	0x03967C94 LDR X0, [X0 + 0xCD0]
	0x03967C98 BL 0x1C16CF4
	0x03967C9C ADRP X0, 0x7E7000
	0x03967CA0 LDR X0, [X0 + 0xAF8]
	0x03967CA4 BL 0x1C16CF4
	0x03967CA8 ADRP X0, 0x7E8000
	0x03967CAC LDR X0, [X0 + 0xBE8]
	0x03967CB0 BL 0x1C16CF4
	0x03967CB4 ADRP X0, 0x7E8000
	0x03967CB8 LDR X0, [X0 + 0xBF0]
	0x03967CBC BL 0x1C16CF4
	0x03967CC0 ADRP X0, 0x7E7000
	0x03967CC4 LDR X0, [X0 + 0xB00]
	0x03967CC8 BL 0x1C16CF4
	0x03967CCC ADRP X0, 0x7E8000
	0x03967CD0 LDR X0, [X0 + 0xC00]
	0x03967CD4 BL 0x1C16CF4
	0x03967CD8 ADRP X0, 0x7E8000
	0x03967CDC LDR X0, [X0 + 0xB68]
	0x03967CE0 BL 0x1C16CF4
	0x03967CE4 ADRP X0, 0x7E7000
	0x03967CE8 LDR X0, [X0 + 0xB08]
	0x03967CEC BL 0x1C16CF4
	0x03967CF0 MOVZ W8, 0x1
	0x03967CF4 STRB W8, [X22 + 0x9D4]
	0x03967CF8 LDR X0, [X21]
	0x03967CFC STR X31, [X31 + 0x8]
	0x03967D00 LDR W8, [X0 + 0xE0]
	0x03967D04 CBNZ W8, 0x3967D0C
	0x03967D08 BL 0x1C16DFC
	0x03967D0C MOV X0, X20
	0x03967D10 MOV W1, W31
	0x03967D14 MOV X2, X31
	0x03967D18 BL 0x3942EDC
	0x03967D1C CBZ X20, 0x3968058
	0x03967D20 ADRP X22, 0x7E8000
	0x03967D24 ADRP X23, 0x7E8000
	0x03967D28 ADRP X24, 0x7E8000
	0x03967D2C ADRP X25, 0x7E8000
	0x03967D30 LDR X22, [X22 + 0x5C8]
	0x03967D34 LDR X23, [X23 + 0x3D8]
	0x03967D38 LDR X24, [X24 + 0xD0]
	0x03967D3C LDR X25, [X25 + 0xD8]
	0x03967D40 MOV X21, X0
	0x03967D44 MOV X0, X20
	0x03967D48 MOV X1, X31
	0x03967D4C BL 0x3916198
	0x03967D50 MOV X1, X0
	0x03967D54 MOV X0, X19
	0x03967D58 MOV X2, X31
	0x03967D5C BL 0x38FEBC8
	0x03967D60 LDR X1, [X22]
	0x03967D64 BL 0x21D7788
	0x03967D68 LDR X1, [X23]
	0x03967D6C BL 0x21C02A8
	0x03967D70 LDR X1, [X22]
	0x03967D74 BL 0x21D7788
	0x03967D78 LDR X8, [X24]
	0x03967D7C MOV X19, X0
	0x03967D80 MOV X0, X8
	0x03967D84 BL 0x1C16F10
	0x03967D88 LDR X1, [X25]
	0x03967D8C MOV X20, X0
	0x03967D90 BL 0x29DBC20
	0x03967D94 CBZ X21, 0x3968058
	0x03967D98 LDR W8, [X21 + 0x18]
	0x03967D9C CMP W8, 0x1
	0x03967DA0 B.LT 0x3967E38
	0x03967DA4 ADRP X24, 0x7E7000
	0x03967DA8 ADRP X25, 0x7E8000
	0x03967DAC ADRP X26, 0x7E8000
	0x03967DB0 LDR X24, [X24 + 0xB00]
	0x03967DB4 LDR X25, [X25 + 0xBE0]
	0x03967DB8 LDR X26, [X26 + 0xB0]
	0x03967DBC MOV W22, W31
	0x03967DC0 LDR X2, [X24]
	0x03967DC4 MOV X0, X21
	0x03967DC8 MOV W1, W22
	0x03967DCC BL 0x301BCCC
	0x03967DD0 CBZ X0, 0x3968058
	0x03967DD4 CBZ X20, 0x3968058
	0x03967DD8 LDR X1, [X0 + 0x18]
	0x03967DDC LDR X2, [X25]
	0x03967DE0 MOV X0, X20
	0x03967DE4 BL 0x29DC6C8
	0x03967DE8 TBNZ X0, 0x0, 0x3967E28
	0x03967DEC LDR X2, [X24]
	0x03967DF0 MOV X0, X21
	0x03967DF4 MOV W1, W22
	0x03967DF8 BL 0x301BCCC
	0x03967DFC CBZ X0, 0x3968058
	0x03967E00 LDR X2, [X24]
	0x03967E04 LDR X23, [X0 + 0x18]
	0x03967E08 MOV X0, X21
	0x03967E0C MOV W1, W22
	0x03967E10 BL 0x301BCCC
	0x03967E14 LDR X3, [X26]
	0x03967E18 MOV X2, X0
	0x03967E1C MOV X0, X20
	0x03967E20 MOV X1, X23
	0x03967E24 BL 0x29DC4D4
	0x03967E28 LDR W8, [X21 + 0x18]
	0x03967E2C ADD W22, W22, 0x1
	0x03967E30 CMP W22, W8
	0x03967E34 B.LT 0x3967DC0
	0x03967E38 ADRP X8, 0x7E6000
	0x03967E3C LDR X8, [X8 + 0xCD0]
	0x03967E40 ADRP X21, 0x7E6000
	0x03967E44 LDR X0, [X8]
	0x03967E48 LDR X21, [X21 + 0xCC8]
	0x03967E4C BL 0x1C16F10
	0x03967E50 LDR X1, [X21]
	0x03967E54 MOV X21, X0
	0x03967E58 BL 0x2D9FF10
	0x03967E5C CBZ X19, 0x3968058
	0x03967E60 LDR W25, [X19 + 0x18]
	0x03967E64 CMP W25, 0x1
	0x03967E68 B.LT 0x3967FA8
	0x03967E6C ADRP X26, 0x7E8000
	0x03967E70 ADRP X27, 0x7E8000
	0x03967E74 ADRP X28, 0x7E8000
	0x03967E78 ADRP X29, 0x7E8000
	0x03967E7C LDR X26, [X26 + 0xBF0]
	0x03967E80 LDR X27, [X27 + 0xC0]
	0x03967E84 LDR X28, [X28 + 0x950]
	0x03967E88 LDR X29, [X29 + 0x328]
	0x03967E8C MOV W22, W31
	0x03967E90 LDR X2, [X26]
	0x03967E94 MOV X0, X19
	0x03967E98 MOV W1, W22
	0x03967E9C BL 0x2FBC6B0
	0x03967EA0 CBZ X20, 0x3968058
	0x03967EA4 LDR X3, [X27]
	0x03967EA8 ADD X2, X31, 0x8
	0x03967EAC MOV X0, X20
	0x03967EB0 BL 0x29DDFCC
	0x03967EB4 TBZ X0, 0x0, 0x3967F9C
	0x03967EB8 LDR X23, [X31 + 0x8]
	0x03967EBC CBZ X23, 0x3968058
	0x03967EC0 CBZ X21, 0x3968058
	0x03967EC4 LDP X1, X2, [X23 + 0x10]
	0x03967EC8 LDR X3, [X28]
	0x03967ECC MOV X0, X21
	0x03967ED0 BL 0x2DA05B8
	0x03967ED4 TBNZ X0, 0x0, 0x3967EF0
	0x03967ED8 ADRP X8, 0x7E6000
	0x03967EDC LDP X1, X2, [X23 + 0x10]
	0x03967EE0 LDR X8, [X8 + 0xCC0]
	0x03967EE4 MOV X0, X21
	0x03967EE8 LDR X3, [X8]
	0x03967EEC BL 0x2DA1088
	0x03967EF0 LDR X0, [X29]
	0x03967EF4 LDR W8, [X0 + 0xE0]
	0x03967EF8 CBNZ W8, 0x3967F00
	0x03967EFC BL 0x1C16DFC
	0x03967F00 MOV X0, X23
	0x03967F04 BL 0x39676B0
	0x03967F08 CBZ X0, 0x3967F44
	0x03967F0C LDR X8, [X0 + 0x38]
	0x03967F10 MOV X24, X0
	0x03967F14 CBZ X8, 0x3967F44
	0x03967F18 LDP X1, X2, [X24 + 0x10]
	0x03967F1C LDR X3, [X28]
	0x03967F20 MOV X0, X21
	0x03967F24 BL 0x2DA05B8
	0x03967F28 TBNZ X0, 0x0, 0x3967F44
	0x03967F2C ADRP X8, 0x7E6000
	0x03967F30 LDP X1, X2, [X24 + 0x10]
	0x03967F34 LDR X8, [X8 + 0xCC0]
	0x03967F38 MOV X0, X21
	0x03967F3C LDR X3, [X8]
	0x03967F40 BL 0x2DA1088
	0x03967F44 LDR X0, [X29]
	0x03967F48 LDR X23, [X23 + 0x38]
	0x03967F4C LDR W8, [X0 + 0xE0]
	0x03967F50 CBNZ W8, 0x3967F58
	0x03967F54 BL 0x1C16DFC
	0x03967F58 MOV X0, X23
	0x03967F5C BL 0x39676B0
	0x03967F60 CBZ X0, 0x3967F9C
	0x03967F64 LDR X8, [X0 + 0x38]
	0x03967F68 MOV X23, X0
	0x03967F6C CBZ X8, 0x3967F9C
	0x03967F70 LDP X1, X2, [X23 + 0x10]
	0x03967F74 LDR X3, [X28]
	0x03967F78 MOV X0, X21
	0x03967F7C BL 0x2DA05B8
	0x03967F80 TBNZ X0, 0x0, 0x3967F9C
	0x03967F84 ADRP X8, 0x7E6000
	0x03967F88 LDP X1, X2, [X23 + 0x10]
	0x03967F8C LDR X8, [X8 + 0xCC0]
	0x03967F90 MOV X0, X21
	0x03967F94 LDR X3, [X8]
	0x03967F98 BL 0x2DA1088
	0x03967F9C ADD W22, W22, 0x1
	0x03967FA0 CMP W25, W22
	0x03967FA4 B.NE 0x3967E90
	0x03967FA8 ADRP X22, 0x7E8000
	0x03967FAC LDR X22, [X22 + 0xB68]
	0x03967FB0 LDR X0, [X22]
	0x03967FB4 LDR W8, [X0 + 0xE0]
	0x03967FB8 CBNZ W8, 0x3967FC4
	0x03967FBC BL 0x1C16DFC
	0x03967FC0 LDR X0, [X22]
	0x03967FC4 LDR X8, [X0 + 0xB8]
	0x03967FC8 ADRP X23, 0x7E8000
	0x03967FCC LDR X19, [X8 + 0x38]
	0x03967FD0 LDR X23, [X23 + 0x3E8]
	0x03967FD4 CBNZ X19, 0x3968028
	0x03967FD8 LDR W8, [X0 + 0xE0]
	0x03967FDC CBNZ W8, 0x3967FE8
	0x03967FE0 BL 0x1C16DFC
	0x03967FE4 LDR X0, [X22]
	0x03967FE8 ADRP X9, 0x7E8000
	0x03967FEC LDR X8, [X0 + 0xB8]
	0x03967FF0 LDR X9, [X9 + 0x430]
	0x03967FF4 LDR X20, [X8]
	0x03967FF8 LDR X0, [X9]
	0x03967FFC BL 0x1C16F10
	0x03968000 ADRP X8, 0x7E7000
	0x03968004 LDR X8, [X8 + 0xC00]
	0x03968008 MOV X1, X20
	0x0396800C MOV X3, X31
	0x03968010 MOV X19, X0
	0x03968014 LDR X2, [X8]
	0x03968018 BL 0x2D2C704
	0x0396801C LDR X8, [X22]
	0x03968020 LDR X8, [X8 + 0xB8]
	0x03968024 STR X19, [X8 + 0x38]
	0x03968028 LDR X2, [X23]
	0x0396802C MOV X0, X21
	0x03968030 MOV X1, X19
	0x03968034 BL 0x21CCD80
	0x03968038 LDP X20, X19, [X31 + 0x60]
	0x0396803C LDP X22, X21, [X31 + 0x50]
	0x03968040 LDP X24, X23, [X31 + 0x40]
	0x03968044 LDP X26, X25, [X31 + 0x30]
	0x03968048 LDP X28, X27, [X31 + 0x20]
	0x0396804C LDP X29, X30, [X31 + 0x10]
	0x03968050 ADD X31, X31, 0x70
	0x03968054 RET
	0x03968058 BL 0x1C16F20
	0x0396805C STR X30, [X31 - 0x60]!
	0x03968060 STP X28, X27, [X31 + 0x10]
	0x03968064 STP X26, X25, [X31 + 0x20]
	0x03968068 STP X24, X23, [X31 + 0x30]
	0x0396806C STP X22, X21, [X31 + 0x40]
	0x03968070 STP X20, X19, [X31 + 0x50]
	0x03968074 ADRP X21, 0xA79000
	0x03968078 ADRP X23, 0x7E6000
	0x0396807C LDRB W8, [X21 + 0x9D5]
	0x03968080 LDR X23, [X23 + 0xB08]
	0x03968084 MOV X19, X2
	0x03968088 MOV X20, X1
	0x0396808C MOV X22, X0
	0x03968090 TBNZ X8, 0x0, 0x3968138
	0x03968094 ADRP X0, 0x7E7000
	0x03968098 LDR X0, [X0 + 0x328]
	0x0396809C BL 0x1C16CF4
	0x039680A0 ADRP X0, 0x7E7000
	0x039680A4 LDR X0, [X0 + 0x3E8]
	0x039680A8 BL 0x1C16CF4
	0x039680AC ADRP X0, 0x7E5000
	0x039680B0 LDR X0, [X0 + 0xD40]
	0x039680B4 BL 0x1C16CF4
	0x039680B8 ADRP X0, 0x7E7000
	0x039680BC LDR X0, [X0 + 0x430]
	0x039680C0 BL 0x1C16CF4
	0x039680C4 ADRP X0, 0x7E7000
	0x039680C8 LDR X0, [X0 + 0x950]
	0x039680CC BL 0x1C16CF4
	0x039680D0 ADRP X0, 0x7E5000
	0x039680D4 LDR X0, [X0 + 0xCC8]
	0x039680D8 BL 0x1C16CF4
	0x039680DC ADRP X0, 0x7E7000
	0x039680E0 LDR X0, [X0 + 0x958]
	0x039680E4 BL 0x1C16CF4
	0x039680E8 ADRP X0, 0x7E5000
	0x039680EC LDR X0, [X0 + 0xCD0]
	0x039680F0 BL 0x1C16CF4
	0x039680F4 ADRP X0, 0x7E6000
	0x039680F8 LDR X0, [X0 + 0xAF8]
	0x039680FC BL 0x1C16CF4
	0x03968100 ADRP X0, 0x7E6000
	0x03968104 LDR X0, [X0 + 0xB00]
	0x03968108 BL 0x1C16CF4
	0x0396810C ADRP X0, 0x7E7000
	0x03968110 LDR X0, [X0 + 0xC08]
	0x03968114 BL 0x1C16CF4
	0x03968118 ADRP X0, 0x7E7000
	0x0396811C LDR X0, [X0 + 0xB68]
	0x03968120 BL 0x1C16CF4
	0x03968124 ADRP X0, 0x7E6000
	0x03968128 LDR X0, [X0 + 0xB08]
	0x0396812C BL 0x1C16CF4
	0x03968130 MOVZ W8, 0x1
	0x03968134 STRB W8, [X21 + 0x9D5]
	0x03968138 LDR X0, [X23]
	0x0396813C LDR W8, [X0 + 0xE0]
	0x03968140 CBNZ W8, 0x3968148
	0x03968144 BL 0x1C16DFC
	0x03968148 MOV X0, X22
	0x0396814C MOV W1, W31
	0x03968150 MOV X2, X31
	0x03968154 BL 0x3942EDC
	0x03968158 CBZ X22, 0x39683C8
	0x0396815C ADRP X23, 0x7E5000
	0x03968160 ADRP X24, 0x7E7000
	0x03968164 ADRP X25, 0x7E5000
	0x03968168 LDR X23, [X23 + 0xCD0]
	0x0396816C LDR X24, [X24 + 0x958]
	0x03968170 LDR X25, [X25 + 0xCC8]
	0x03968174 MOV X21, X0
	0x03968178 MOV X0, X22
	0x0396817C MOV X1, X31
	0x03968180 BL 0x3916198
	0x03968184 MOV X1, X0
	0x03968188 MOV X0, X20
	0x0396818C MOV X2, X31
	0x03968190 BL 0x38FEBC8
	0x03968194 LDR X8, [X23]
	0x03968198 MOV X20, X0
	0x0396819C MOV X0, X8
	0x039681A0 BL 0x1C16F10
	0x039681A4 LDR X2, [X24]
	0x039681A8 MOV X1, X20
	0x039681AC MOV X22, X0
	0x039681B0 BL 0x2D9FFF4
	0x039681B4 LDR X0, [X23]
	0x039681B8 BL 0x1C16F10
	0x039681BC LDR X1, [X25]
	0x039681C0 MOV X20, X0
	0x039681C4 BL 0x2D9FF10
	0x039681C8 CBZ X21, 0x39683C8
	0x039681CC LDR W8, [X21 + 0x18]
	0x039681D0 CMP W8, 0x1
	0x039681D4 B.LT 0x3968300
	0x039681D8 ADRP X26, 0x7E6000
	0x039681DC ADRP X27, 0x7E7000
	0x039681E0 ADRP X28, 0x7E7000
	0x039681E4 LDR X26, [X26 + 0xB00]
	0x039681E8 LDR X27, [X27 + 0x950]
	0x039681EC LDR X28, [X28 + 0x328]
	0x039681F0 MOV W23, W31
	0x039681F4 LDR X2, [X26]
	0x039681F8 MOV X0, X21
	0x039681FC MOV W1, W23
	0x03968200 BL 0x301BCCC
	0x03968204 CBZ X0, 0x39683C8
	0x03968208 CBZ X20, 0x39683C8
	0x0396820C LDP X1, X2, [X0 + 0x10]
	0x03968210 LDR X3, [X27]
	0x03968214 MOV X0, X20
	0x03968218 BL 0x2DA05B8
	0x0396821C TBNZ X0, 0x0, 0x39682F0
	0x03968220 LDR X2, [X26]
	0x03968224 MOV X0, X21
	0x03968228 MOV W1, W23
	0x0396822C BL 0x301BCCC
	0x03968230 CBZ X0, 0x39683C8
	0x03968234 CBZ X22, 0x39683C8
	0x03968238 LDP X1, X2, [X0 + 0x10]
	0x0396823C LDR X3, [X27]
	0x03968240 MOV X0, X22
	0x03968244 BL 0x2DA05B8
	0x03968248 TBZ X0, 0x0, 0x39682F0
	0x0396824C LDR X2, [X26]
	0x03968250 MOV X0, X21
	0x03968254 MOV W1, W23
	0x03968258 BL 0x301BCCC
	0x0396825C LDR X2, [X26]
	0x03968260 MOV X24, X0
	0x03968264 MOV X0, X21
	0x03968268 MOV W1, W23
	0x0396826C BL 0x301BCCC
	0x03968270 CBZ X0, 0x39683C8
	0x03968274 LDR X8, [X28]
	0x03968278 LDR W25, [X0 + 0x1C]
	0x0396827C LDR W9, [X8 + 0xE0]
	0x03968280 CBNZ W9, 0x396828C
	0x03968284 MOV X0, X8
	0x03968288 BL 0x1C16DFC
	0x0396828C MOV X0, X24
	0x03968290 MOV W1, W25
	0x03968294 MOV X2, X20
	0x03968298 BL 0x39683CC
	0x0396829C TBNZ X0, 0x0, 0x39682F0
	0x039682A0 LDR X2, [X26]
	0x039682A4 MOV X0, X21
	0x039682A8 MOV W1, W23
	0x039682AC BL 0x301BCCC
	0x039682B0 LDR X2, [X26]
	0x039682B4 MOV X24, X0
	0x039682B8 MOV X0, X21
	0x039682BC MOV W1, W23
	0x039682C0 BL 0x301BCCC
	0x039682C4 CBZ X0, 0x39683C8
	0x039682C8 LDR X8, [X28]
	0x039682CC LDR W25, [X0 + 0x18]
	0x039682D0 LDR W9, [X8 + 0xE0]
	0x039682D4 CBNZ W9, 0x39682E0
	0x039682D8 MOV X0, X8
	0x039682DC BL 0x1C16DFC
	0x039682E0 MOV X0, X24
	0x039682E4 MOV W1, W25
	0x039682E8 MOV X2, X20
	0x039682EC BL 0x39683CC
	0x039682F0 LDR W8, [X21 + 0x18]
	0x039682F4 ADD W23, W23, 0x1
	0x039682F8 CMP W23, W8
	0x039682FC B.LT 0x39681F4
	0x03968300 ADRP X23, 0x7E7000
	0x03968304 LDR X23, [X23 + 0xB68]
	0x03968308 LDR X0, [X23]
	0x0396830C LDR W8, [X0 + 0xE0]
	0x03968310 CBNZ W8, 0x396831C
	0x03968314 BL 0x1C16DFC
	0x03968318 LDR X0, [X23]
	0x0396831C LDR X8, [X0 + 0xB8]
	0x03968320 ADRP X25, 0x7E7000
	0x03968324 ADRP X24, 0x7E5000
	0x03968328 LDR X21, [X8 + 0x40]
	0x0396832C LDR X25, [X25 + 0x3E8]
	0x03968330 LDR X24, [X24 + 0xD40]
	0x03968334 CBNZ X21, 0x3968388
	0x03968338 LDR W8, [X0 + 0xE0]
	0x0396833C CBNZ W8, 0x3968348
	0x03968340 BL 0x1C16DFC
	0x03968344 LDR X0, [X23]
	0x03968348 ADRP X9, 0x7E7000
	0x0396834C LDR X8, [X0 + 0xB8]
	0x03968350 LDR X9, [X9 + 0x430]
	0x03968354 LDR X22, [X8]
	0x03968358 LDR X0, [X9]
	0x0396835C BL 0x1C16F10
	0x03968360 ADRP X8, 0x7E7000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA7B000
	015 Move W8, [X21+2513]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {90}
	022 Move X0, 0x7E9000
	023 Move X0, [X0+2944]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E9000
	026 Move X0, [X0+2952]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E9000
	029 Move X0, [X0+2960]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E9000
	032 Move X0, [X0+2968]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E7000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E9000
	038 Move X0, [X0+2976]
	039 Call 0x1C17CF4
	040 Move X0, 0x7B5000
	041 Move X0, [X0+1536]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E9000
	044 Move X0, [X0+2984]
	045 Call 0x1C17CF4
	046 Move X0, 0x7E9000
	047 Move X0, [X0+2992]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E9000
	050 Move X0, [X0+3000]
	051 Call 0x1C17CF4
	052 Move X0, 0x7E9000
	053 Move X0, [X0+3008]
	054 Call 0x1C17CF4
	055 Move X0, 0x7E9000
	056 Move X0, [X0+3016]
	057 Call 0x1C17CF4
	058 Move X0, 0x78D000
	059 Move X0, [X0+3584]
	060 Call 0x1C17CF4
	061 Move X0, 0x7E7000
	062 Move X0, [X0+3504]
	063 Call 0x1C17CF4
	064 Move X0, 0x7E7000
	065 Move X0, [X0+3512]
	066 Call 0x1C17CF4
	067 Move X0, 0x78D000
	068 Move X0, [X0+3608]
	069 Call 0x1C17CF4
	070 Move X0, 0x7E7000
	071 Move X0, [X0+3600]
	072 Call 0x1C17CF4
	073 Move X0, 0x7E8000
	074 Move X0, [X0+2616]
	075 Call 0x1C17CF4
	076 Move X0, 0x7E7000
	077 Move X0, [X0+3568]
	078 Call 0x1C17CF4
	079 Move X0, 0x7E9000
	080 Move X0, [X0+3024]
	081 Call 0x1C17CF4
	082 Move X0, 0x7E9000
	083 Move X0, [X0+3032]
	084 Call 0x1C17CF4
	085 Move X0, 0x7E9000
	086 Move X0, [X0+2920]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+2513], W8
	090 Move [X31+8], X31
	091 Compare X19, 0
	092 JumpIfEqual {453}
	093 Move X21, 0x7E9000
	094 Move X22, 0x7E9000
	095 Move X21, [X21+2976]
	096 Move X22, [X22+2960]
	097 Move X0, X19
	098 Move X1, X31
	099 Call ProBuilderMesh.get_sharedVertexLookup, X0
	100 Move X8, [X21]
	101 Move X21, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X1, [X22]
	105 Move X19, X0
	106 Call Dictionary`2<Edge, Object>..ctor, X0
	107 Compare X20, 0
	108 JumpIfEqual {453}
	109 Move X10, 0x7E7000
	110 Move X8, [X20]
	111 Move X10, [X10+3504]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Move X1, [X10]
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X20
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move [X31], X0
	133 Compare X0, 0
	134 JumpIfEqual {454}
	135 Move X29, 0x7E7000
	136 Move X28, 0x7E9000
	137 Move X20, 0x7E7000
	138 Move X29, [X29+3200]
	139 Move X28, [X28+2952]
	140 Move X20, [X20+3600]
	141 Move X22, [X31]
	142 Move X10, 0x78D000
	143 Move X8, [X22]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X10, [X10+3608]
	146 Move X1, [X10]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X22
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X22
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {314}
	169 Move X8, [X22]
	170 Move X10, 0x7E7000
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Move X10, [X10+3512]
	173 Move X1, [X10]
	174 Compare X9, 0
	175 JumpIfEqual {182}
	176 Move X10, [X8+176]
	177 Add X10, X10, 8
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X9, X9, 1
	181 Add X10, X10, 16
	182 Move X0, X22
	183 Move W2, W31
	184 Call 0x1C5D788
	185 Move X22, [X31]
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X22
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X22, X0
	194 Compare X0, 0
	195 JumpIfEqual {451}
	196 Move X0, X22
	197 Move X1, X31
	198 Call Face.get_edgesInternal, X0
	199 Move X23, X0
	200 Compare X0, 0
	201 JumpIfEqual {452}
	202 Move X8, [X23+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X27, X31
	205 And X8, X8, 0
	206 Add X26, X23, 32
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Compare X21, 0
	209 JumpIfEqual {446}
	210 Move X25, [X26]
	211 Move X2, [X29]
	212 Move X0, X21
	213 Move W1, W25
	214 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	215 Move X2, [X29]
	216 Move W24, W0
	217 Move X1, X25
	218 ShiftRight X1, 32
	219 And X1, X1, 0x7FFFFFFF
	220 Move X0, X21
	221 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	222 Move X8, 0x7B5000
	223 Move X8, [X8+1536]
	224 Move W25, W0
	225 Move X0, [X8]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Add X0, X31, 8
	231 Move W1, W24
	232 Move W2, W25
	233 Move X3, X31
	234 Call Edge..ctor, X0, X1, X2
	235 Compare X19, 0
	236 JumpIfEqual {445}
	237 Move X1, [X31+8]
	238 Move X2, [X28]
	239 Move X0, X19
	240 Call Dictionary`2<Edge, Object>.ContainsKey, X0, X1
	241 Move X24, [X31+8]
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {268}
	246 Move X8, 0x7E9000
	247 Move X8, [X8+2968]
	248 Move X2, [X8]
	249 Move X0, X19
	250 Move X1, X24
	251 Call Dictionary`2<Edge, Object>.get_Item, X0, X1
	252 Compare X0, 0
	253 JumpIfEqual {449}
	254 Move W10, [X0+28]
	255 Move X8, [X0+16]
	256 Move X9, [X20]
	257 Add W10, W10, 1
	258 Move [X0+28], W10
	259 Compare X8, 0
	260 JumpIfEqual {448}
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Move W11, [X8+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W9, W10, 1
	265 Add X8, X8, X10
	266 Move [X0+24], W9
	267 Move [X8+32], X22
	268 Move X8, 0x7E7000
	269 Move X8, [X8+3568]
	270 Move X0, [X8]
	271 Call 0x1C17F10
	272 Move X8, 0x7E8000
	273 Move X8, [X8+2616]
	274 Move X25, X0
	275 Move X1, [X8]
	276 Call List`1<Object>..ctor, X0
	277 Compare X25, 0
	278 JumpIfEqual {447}
	279 Move W10, [X25+28]
	280 Move X8, [X25+16]
	281 Move X9, [X20]
	282 Add W10, W10, 1
	283 Move [X25+28], W10
	284 Compare X8, 0
	285 JumpIfEqual {450}
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Move W11, [X8+24]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add W9, W10, 1
	290 Add X8, X8, X10
	291 Move [X25+24], W9
	292 Move [X8+32], X22
	293 Move X8, [X9+32]
	294 Move X8, [X8+192]
	295 Move X2, [X8+112]
	296 Move X1, X22
	297 Call List`1<Object>.AddWithResize, X0, X1
	298 Move X8, [X9+32]
	299 Move X8, [X8+192]
	300 Move X2, [X8+112]
	301 Move X0, X25
	302 Move X1, X22
	303 Call List`1<Object>.AddWithResize, X0, X1
	304 Move X8, 0x7E8000
	305 Move X8, [X8+2944]
	306 Move X3, [X8]
	307 Move X0, X19
	308 Move X1, X24
	309 Move X2, X25
	310 Call Dictionary`2<Edge, Object>.Add, X0, X1, X2
	311 Move W8, [X23+24]
	312 Add X27, X27, 1
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X22, X31
	315 Move X8, [X31]
	316 Compare X8, 0
	317 JumpIfEqual {343}
	318 Move X8, [X8]
	319 Move X10, 0x78C000
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Move X10, [X10+3584]
	322 Move X1, [X10]
	323 Compare X9, 0
	324 JumpIfEqual {331}
	325 Move X10, [X8+176]
	326 Add X10, X10, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X9, X9, 1
	330 Add X10, X10, 16
	331 Move X20, [X31]
	332 Move W2, W31
	333 Move X0, X20
	334 Call 0x1C5D788
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Move X20, [X31]
	337 Add X8, X8, X9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X20
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Compare X22, 0
	344 JumpIfNotEqual {455}
	345 Move X22, 0x7E8000
	346 Move X22, [X22+2920]
	347 Move X8, [X22]
	348 Move W9, [X8+224]
	349 Compare W9, 0
	350 JumpIfNotEqual {354}
	351 Move X0, X8
	352 Call 0x1C17DFC
	353 Move X8, [X22]
	354 Move X9, [X8+184]
	355 Move X23, 0x7E8000
	356 Move X20, [X9+32]
	357 Move X23, [X23+3000]
	358 Compare X20, 0
	359 JumpIfNotEqual {382}
	360 Move W9, [X8+224]
	361 Compare W9, 0
	362 JumpIfNotEqual {366}
	363 Move X0, X8
	364 Call 0x1C17DFC
	365 Move X8, [X22]
	366 Move X9, 0x7E8000
	367 Move X8, [X8+184]
	368 Move X9, [X9+3016]
	369 Move X21, [X8]
	370 Move X0, [X9]
	371 Call 0x1C17F10
	372 Move X8, 0x7E8000
	373 Move X8, [X8+3024]
	374 Move X1, X21
	375 Move X3, X31
	376 Move X20, X0
	377 Move X2, [X8]
	378 Call Func`2<KeyValuePair`2<Edge, Object>, Boolean>..ctor, X0, X1, X2
	379 Move X8, [X22]
	380 Move X8, [X8+184]
	381 Move [X8+32], X20
	382 Move X2, [X23]
	383 Move X0, X19
	384 Move X1, X20
	385 Call 0x21D8FCC, X0, X1
	386 Move X8, [X22]
	387 Move X19, X0
	388 Move W9, [X8+224]
	389 Compare W9, 0
	390 JumpIfNotEqual {394}
	391 Move X0, X8
	392 Call 0x1C17DFC
	393 Move X8, [X22]
	394 Move X9, [X8+184]
	395 Move X24, 0x7E8000
	396 Move X23, 0x7E8000
	397 Move X20, [X9+40]
	398 Move X24, [X24+2992]
	399 Move X23, [X23+2984]
	400 Compare X20, 0
	401 JumpIfNotEqual {424}
	402 Move W9, [X8+224]
	403 Compare W9, 0
	404 JumpIfNotEqual {408}
	405 Move X0, X8
	406 Call 0x1C17DFC
	407 Move X8, [X22]
	408 Move X9, 0x7E8000
	409 Move X8, [X8+184]
	410 Move X9, [X9+3008]
	411 Move X21, [X8]
	412 Move X0, [X9]
	413 Call 0x1C17F10
	414 Move X8, 0x7E8000
	415 Move X8, [X8+3032]
	416 Move X1, X21
	417 Move X3, X31
	418 Move X20, X0
	419 Move X2, [X8]
	420 Call Func`2<KeyValuePair`2<Edge, Object>, Object>..ctor, X0, X1, X2
	421 Move X8, [X22]
	422 Move X8, [X8+184]
	423 Move [X8+40], X20
	424 Move X2, [X24]
	425 Move X0, X19
	426 Move X1, X20
	427 Call Enumerable.Select, X0, X1
	428 Move X1, [X23]
	429 Call Enumerable.Distinct, X0
	430 Move X20, [X31+96]
	431 Move X19, [X31+104]
	432 Move X22, [X31+80]
	433 Move X21, [X31+88]
	434 Move X24, [X31+64]
	435 Move X23, [X31+72]
	436 Move X26, [X31+48]
	437 Move X25, [X31+56]
	438 Move X28, [X31+32]
	439 Move X27, [X31+40]
	440 Move X29, [X31+16]
	441 Move X30, [X31+24]
	442 Add X31, X31, 112
	443 Return X0
	444 Call 0x1C17F28
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Move X0, X22
	456 Call 0x1C17F18
	457 Move X21, X0
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move X0, X21
	460 Call 0x3EB2AD0
	461 Move X22, [X0]
	462 Call 0x3EB2AE0
	463 Move X22, X31
	464 Move X21, X0
	465 Move X8, [X31]
	466 Compare X8, 0
	467 JumpIfEqual {492}
	468 Move X8, [X31]
	469 Move X10, 0x78C000
	470 Move X8, [X8]
	471 NotImplemented "Instruction LDRH not yet implemented."
	472 Move X10, [X10+3584]
	473 Move X1, [X10]
	474 Compare X9, 0
	475 JumpIfEqual {482}
	476 Move X10, [X8+176]
	477 Add X10, X10, 8
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Subtract X9, X9, 1
	481 Add X10, X10, 16
	482 Move X0, [X31]
	483 Move W2, W31
	484 Call 0x1C5D788
	485 NotImplemented "Instruction LDRSW not yet implemented."
	486 Add X8, X8, X9
	487 Add X0, X8, 312
	488 Move X8, [X0]
	489 Move X1, [X0+8]
	490 Move X0, [X31]
	491 NotImplemented "Instruction BLR not yet implemented."
	492 Compare X22, 0
	493 JumpIfNotEqual {496}
	494 Move X0, X21
	495 Call 0x1D2D690
	496 Move X0, X22
	497 Call 0x1C17F18
	498 Call 0x1991590

Method: System.Int32[] GetPerimeterVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes, UnityEngine.ProBuilder.Edge[] universal_edges_all)

Disassembly:
	0x03968364 LDR X8, [X8 + 0xC08]
	0x03968368 MOV X1, X22
	0x0396836C MOV X3, X31
	0x03968370 MOV X21, X0
	0x03968374 LDR X2, [X8]
	0x03968378 BL 0x2D2C704
	0x0396837C LDR X8, [X23]
	0x03968380 LDR X8, [X8 + 0xB8]
	0x03968384 STR X21, [X8 + 0x40]
	0x03968388 LDR X2, [X25]
	0x0396838C MOV X0, X20
	0x03968390 MOV X1, X21
	0x03968394 BL 0x21CCD80
	0x03968398 LDR X1, [X24]
	0x0396839C BL 0x21D544C
	0x039683A0 MOV X8, X0
	0x039683A4 STR X8, [X19]
	0x039683A8 LDP X20, X19, [X31 + 0x50]
	0x039683AC LDP X22, X21, [X31 + 0x40]
	0x039683B0 LDP X24, X23, [X31 + 0x30]
	0x039683B4 LDP X26, X25, [X31 + 0x20]
	0x039683B8 LDP X28, X27, [X31 + 0x10]
	0x039683BC MOVZ W0, 0x1
	0x039683C0 LDR X30, [X31], #0x60
	0x039683C4 RET
	0x039683C8 BL 0x1C16F20
	0x039683CC STP X29, X30, [X31 - 0x60]!
	0x039683D0 STP X28, X27, [X31 + 0x10]
	0x039683D4 STP X26, X25, [X31 + 0x20]
	0x039683D8 STP X24, X23, [X31 + 0x30]
	0x039683DC STP X22, X21, [X31 + 0x40]
	0x039683E0 STP X20, X19, [X31 + 0x50]
	0x039683E4 ADRP X22, 0xA79000
	0x039683E8 LDRB W8, [X22 + 0x9D7]
	0x039683EC MOV X19, X2
	0x039683F0 MOV W20, W1
	0x039683F4 MOV X21, X0
	0x039683F8 TBNZ X8, 0x0, 0x396847C
	0x039683FC ADRP X0, 0x7E7000
	0x03968400 LDR X0, [X0 + 0xC10]
	0x03968404 BL 0x1C16CF4
	0x03968408 ADRP X0, 0x7E7000
	0x0396840C LDR X0, [X0 + 0x328]
	0x03968410 BL 0x1C16CF4
	0x03968414 ADRP X0, 0x7E7000
	0x03968418 LDR X0, [X0 + 0xC18]
	0x0396841C BL 0x1C16CF4
	0x03968420 ADRP X0, 0x7E7000
	0x03968424 LDR X0, [X0 + 0x78]
	0x03968428 BL 0x1C16CF4
	0x0396842C ADRP X0, 0x7E5000
	0x03968430 LDR X0, [X0 + 0xCC0]
	0x03968434 BL 0x1C16CF4
	0x03968438 ADRP X0, 0x7E7000
	0x0396843C LDR X0, [X0 + 0x950]
	0x03968440 BL 0x1C16CF4
	0x03968444 ADRP X0, 0x7E6000
	0x03968448 LDR X0, [X0 + 0xAF8]
	0x0396844C BL 0x1C16CF4
	0x03968450 ADRP X0, 0x7E6000
	0x03968454 LDR X0, [X0 + 0xB00]
	0x03968458 BL 0x1C16CF4
	0x0396845C ADRP X0, 0x7E7000
	0x03968460 LDR X0, [X0 + 0xC20]
	0x03968464 BL 0x1C16CF4
	0x03968468 ADRP X0, 0x7E7000
	0x0396846C LDR X0, [X0 + 0xB68]
	0x03968470 BL 0x1C16CF4
	0x03968474 MOVZ W8, 0x1
	0x03968478 STRB W8, [X22 + 0x9D7]
	0x0396847C ADRP X23, 0x7E5000
	0x03968480 ADRP X25, 0x7E7000
	0x03968484 ADRP X26, 0x7E7000
	0x03968488 ADRP X29, 0x7E7000
	0x0396848C ADRP X27, 0x7E7000
	0x03968490 ADRP X28, 0x7E6000
	0x03968494 ADRP X24, 0x7E7000
	0x03968498 LDR X23, [X23 + 0xCC0]
	0x0396849C LDR X25, [X25 + 0x328]
	0x039684A0 LDR X26, [X26 + 0xB68]
	0x039684A4 LDR X29, [X29 + 0xC10]
	0x039684A8 LDR X27, [X27 + 0xC18]
	0x039684AC LDR X28, [X28 + 0xB00]
	0x039684B0 LDR X24, [X24 + 0x950]
	0x039684B4 CBZ X21, 0x39685F0
	0x039684B8 CBZ X19, 0x39685F0
	0x039684BC LDP X1, X2, [X21 + 0x10]
	0x039684C0 LDR X3, [X23]
	0x039684C4 MOV X0, X19
	0x039684C8 BL 0x2DA1088
	0x039684CC LDR X0, [X25]
	0x039684D0 LDR W8, [X0 + 0xE0]
	0x039684D4 CBNZ W8, 0x39684DC
	0x039684D8 BL 0x1C16DFC
	0x039684DC MOVZ W2, 0x1
	0x039684E0 MOV X0, X21
	0x039684E4 MOV W1, W20
	0x039684E8 BL 0x3968C64
	0x039684EC LDR X8, [X26]
	0x039684F0 MOV X21, X0
	0x039684F4 LDR W9, [X8 + 0xE0]
	0x039684F8 CBNZ W9, 0x3968508
	0x039684FC MOV X0, X8
	0x03968500 BL 0x1C16DFC
	0x03968504 LDR X8, [X26]
	0x03968508 LDR X9, [X8 + 0xB8]
	0x0396850C LDR X22, [X9 + 0x50]
	0x03968510 CBNZ X22, 0x3968570
	0x03968514 LDR W9, [X8 + 0xE0]
	0x03968518 CBNZ W9, 0x3968528
	0x0396851C MOV X0, X8
	0x03968520 BL 0x1C16DFC
	0x03968524 LDR X8, [X26]
	0x03968528 LDR X8, [X8 + 0xB8]
	0x0396852C LDR X23, [X8]
	0x03968530 ADRP X8, 0x7E7000
	0x03968534 LDR X8, [X8 + 0x78]
	0x03968538 LDR X0, [X8]
	0x0396853C BL 0x1C16F10
	0x03968540 ADRP X8, 0x7E7000
	0x03968544 LDR X8, [X8 + 0xC20]
	0x03968548 MOV X1, X23
	0x0396854C MOV X3, X31
	0x03968550 MOV X22, X0
	0x03968554 LDR X2, [X8]
	0x03968558 BL 0x2D2FDEC
	0x0396855C LDR X8, [X26]
	0x03968560 ADRP X23, 0x7E5000
	0x03968564 LDR X8, [X8 + 0xB8]
	0x03968568 STR X22, [X8 + 0x50]
	0x0396856C LDR X23, [X23 + 0xCC0]
	0x03968570 LDR X2, [X29]
	0x03968574 MOV X0, X21
	0x03968578 MOV X1, X22
	0x0396857C BL 0x217E4D8
	0x03968580 LDR X1, [X27]
	0x03968584 BL 0x21D79F4
	0x03968588 CBZ X0, 0x39685F0
	0x0396858C LDR W22, [X0 + 0x18]
	0x03968590 CMP W22, 0x4
	0x03968594 B.NE 0x39685CC
	0x03968598 LDR X2, [X28]
	0x0396859C MOVZ W1, 0x2
	0x039685A0 BL 0x301BCCC
	0x039685A4 CBZ X0, 0x39685F0
	0x039685A8 LDP X1, X2, [X0 + 0x10]
	0x039685AC LDR X3, [X24]
	0x039685B0 MOV X21, X0
	0x039685B4 MOV X0, X19
	0x039685B8 UBFM X8, X2, 0x20, 0x3F
	0x039685BC CMP W20, W2
	0x039685C0 CSEL W20, W8, W2, EQ
	0x039685C4 BL 0x2DA05B8
	0x039685C8 TBZ X0, 0x0, 0x39684B4
	0x039685CC CMP W22, 0x4
	0x039685D0 LDP X20, X19, [X31 + 0x50]
	0x039685D4 LDP X22, X21, [X31 + 0x40]
	0x039685D8 LDP X24, X23, [X31 + 0x30]
	0x039685DC LDP X26, X25, [X31 + 0x20]
	0x039685E0 LDP X28, X27, [X31 + 0x10]
	0x039685E4 CSET W0, EQ
	0x039685E8 LDP X29, X30, [X31], #0x60
	0x039685EC RET
	0x039685F0 BL 0x1C16F20
	0x039685F4 STR X30, [X31 - 0x60]!
	0x039685F8 STP X28, X27, [X31 + 0x10]
	0x039685FC STP X26, X25, [X31 + 0x20]
	0x03968600 STP X24, X23, [X31 + 0x30]
	0x03968604 STP X22, X21, [X31 + 0x40]
	0x03968608 STP X20, X19, [X31 + 0x50]
	0x0396860C ADRP X21, 0xA79000
	0x03968610 ADRP X23, 0x7E6000
	0x03968614 LDRB W8, [X21 + 0x9D6]
	0x03968618 LDR X23, [X23 + 0xB08]
	0x0396861C MOV X19, X2
	0x03968620 MOV X20, X1
	0x03968624 MOV X22, X0
	0x03968628 TBNZ X8, 0x0, 0x39686D0
	0x0396862C ADRP X0, 0x7E7000
	0x03968630 LDR X0, [X0 + 0x328]
	0x03968634 BL 0x1C16CF4
	0x03968638 ADRP X0, 0x7E7000
	0x0396863C LDR X0, [X0 + 0x3E8]
	0x03968640 BL 0x1C16CF4
	0x03968644 ADRP X0, 0x7E5000
	0x03968648 LDR X0, [X0 + 0xD40]
	0x0396864C BL 0x1C16CF4
	0x03968650 ADRP X0, 0x7E7000
	0x03968654 LDR X0, [X0 + 0x430]
	0x03968658 BL 0x1C16CF4
	0x0396865C ADRP X0, 0x7E7000
	0x03968660 LDR X0, [X0 + 0x950]
	0x03968664 BL 0x1C16CF4
	0x03968668 ADRP X0, 0x7E5000
	0x0396866C LDR X0, [X0 + 0xCC8]
	0x03968670 BL 0x1C16CF4
	0x03968674 ADRP X0, 0x7E7000
	0x03968678 LDR X0, [X0 + 0x958]
	0x0396867C BL 0x1C16CF4
	0x03968680 ADRP X0, 0x7E5000
	0x03968684 LDR X0, [X0 + 0xCD0]
	0x03968688 BL 0x1C16CF4
	0x0396868C ADRP X0, 0x7E6000
	0x03968690 LDR X0, [X0 + 0xAF8]
	0x03968694 BL 0x1C16CF4
	0x03968698 ADRP X0, 0x7E6000
	0x0396869C LDR X0, [X0 + 0xB00]
	0x039686A0 BL 0x1C16CF4
	0x039686A4 ADRP X0, 0x7E7000
	0x039686A8 LDR X0, [X0 + 0xC28]
	0x039686AC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xA7A000
	015 Move W8, [X19+2514]
	016 Move X21, X1
	017 Move X22, X0
	018 Move [X31+24], X2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x78D000
	024 Move X0, [X0+3672]
	025 Call 0x1C17CF4
	026 Move X0, 0x78D000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move X0, 0x78D000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0x790000
	033 Move X0, [X0+2928]
	034 Call 0x1C17CF4
	035 Move X0, 0x78D000
	036 Move X0, [X0+3624]
	037 Call 0x1C17CF4
	038 Move X0, 0x78D000
	039 Move X0, [X0+3632]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E8000
	042 Move X0, [X0+2936]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+2514], W8
	046 Compare X21, 0
	047 JumpIfEqual {229}
	048 Compare X22, 0
	049 JumpIfEqual {229}
	050 Move X20, 0x78D000
	051 Move X20, [X20+3672]
	052 Move X26, [X21+24]
	053 Move X0, [X20]
	054 Move W1, W26
	055 And X27, X26, 0
	056 Call 0x1C17D6C
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X23, X0
	059 Move X19, X31
	060 Add X24, X21, 32
	061 Add X25, X23, 32
	062 Move W8, [X21+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W1, [X24]
	065 Move X0, X22
	066 Move X2, X31
	067 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	068 Compare X23, 0
	069 JumpIfEqual {229}
	070 Move W8, [X23+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X25], W0
	073 Add X19, X19, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X20]
	076 Move W1, [X21+24]
	077 Move [X31], X27
	078 Move [X31+8], X26
	079 Call 0x1C17D6C
	080 Move X8, [X21+24]
	081 Move X22, X0
	082 Subtract W9, W8, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X29, X31
	085 Add X26, X23, 36
	086 Add X27, X22, 36
	087 Move W28, 1
	088 Add X10, X29, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X31+16], X10
	091 Compare X23, 0
	092 JumpIfEqual {229}
	093 Add X8, X23, X29
	094 Add X9, X22, X29
	095 Move X19, X31
	096 Add X25, X8, 32
	097 Add X24, X9, 32
	098 Move W8, [X23+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X20, X28, X19
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W1, [X25]
	103 Move W2, [X26]
	104 Move X0, [X31+24]
	105 Move X3, X31
	106 Call EdgeUtility.Contains, X0, X1, X2
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {122}
	111 Compare X22, 0
	112 JumpIfEqual {229}
	113 Move W8, [X22+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W9, [X24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add W9, W9, 1
	118 Move [X24], W9
	119 Move W8, [X27]
	120 Add W8, W8, 1
	121 Move [X27], W8
	122 Move X8, [X21+24]
	123 Add X19, X19, 1
	124 Add W9, W28, W19
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X10, [X31+16]
	127 Subtract W9, W8, 1
	128 Add X28, X28, 1
	129 Add X26, X26, 4
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add X27, X27, 4
	132 Move X29, X10
	133 Move X8, 0x7E8000
	134 Move X8, [X8+2936]
	135 Move X19, 0x78D000
	136 Move X20, 0x790000
	137 Move X0, X22
	138 Move X1, [X8]
	139 Move X19, [X19+3632]
	140 Move X20, [X20+2928]
	141 Call 0x22175BC, X0
	142 Move X8, [X19]
	143 Move W21, W0
	144 Move X0, X8
	145 Call 0x1C17F10
	146 Move X1, [X20]
	147 Move X20, X0
	148 Call List`1<Int32>..ctor, X0
	149 Move X26, [X31]
	150 Move X25, [X31+8]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Compare X22, 0
	153 JumpIfEqual {229}
	154 Move X24, 0x78D000
	155 Move X24, [X24+3600]
	156 Move X23, X31
	157 Add X19, X22, 32
	158 Move W8, [X22+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W8, [X19]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Compare X20, 0
	163 JumpIfEqual {229}
	164 Move W10, [X20+28]
	165 Move X8, [X20+16]
	166 Move X9, [X24]
	167 Add W10, W10, 1
	168 Move [X20+28], W10
	169 Compare X8, 0
	170 JumpIfEqual {229}
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Move W11, [X8+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W9, W10, 1
	175 Add X8, X8, X10
	176 Move [X20+24], W9
	177 Move [X8+32], W23
	178 Move X8, [X9+32]
	179 Move X0, X20
	180 Move W1, W23
	181 Move X8, [X8+192]
	182 Move X2, [X8+112]
	183 Call List`1<Int32>.AddWithResize, X0, X1
	184 Add X23, X23, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Compare X20, 0
	187 JumpIfEqual {229}
	188 Move W8, [X20+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, 0x78D000
	191 Move X8, [X8+3672]
	192 Move X8, 0x78D000
	193 Move X8, [X8+3608]
	194 Move X0, X20
	195 Move X20, [X31+112]
	196 Move X19, [X31+120]
	197 Move X22, [X31+96]
	198 Move X21, [X31+104]
	199 Move X1, [X8]
	200 Move X24, [X31+80]
	201 Move X23, [X31+88]
	202 Move X26, [X31+64]
	203 Move X25, [X31+72]
	204 Move X28, [X31+48]
	205 Move X27, [X31+56]
	206 Move X29, [X31+32]
	207 Move X30, [X31+40]
	208 Add X31, X31, 128
	209 Call List`1<Int32>.ToArray, X0
	210 Return X0
	211 Move X0, [X8]
	212 Move X20, [X31+112]
	213 Move X19, [X31+120]
	214 Move X22, [X31+96]
	215 Move X21, [X31+104]
	216 Move X24, [X31+80]
	217 Move X23, [X31+88]
	218 Move X26, [X31+64]
	219 Move X25, [X31+72]
	220 Move X28, [X31+48]
	221 Move X27, [X31+56]
	222 Move X29, [X31+32]
	223 Move X30, [X31+40]
	224 Move W1, W31
	225 Add X31, X31, 128
	226 Call 0x1C17D6C
	227 Return X0
	228 Call 0x1C17F28
	229 Call 0x1C17F20

Method: UnityEngine.ProBuilder.WingedEdge EdgeRingNext(UnityEngine.ProBuilder.WingedEdge edge)

Disassembly:
	0x039686B0 ADRP X0, 0x7E7000
	0x039686B4 LDR X0, [X0 + 0xB68]
	0x039686B8 BL 0x1C16CF4
	0x039686BC ADRP X0, 0x7E6000
	0x039686C0 LDR X0, [X0 + 0xB08]
	0x039686C4 BL 0x1C16CF4
	0x039686C8 MOVZ W8, 0x1
	0x039686CC STRB W8, [X21 + 0x9D6]
	0x039686D0 LDR X0, [X23]
	0x039686D4 LDR W8, [X0 + 0xE0]
	0x039686D8 CBNZ W8, 0x39686E0
	0x039686DC BL 0x1C16DFC
	0x039686E0 MOV X0, X22
	0x039686E4 MOV W1, W31
	0x039686E8 MOV X2, X31
	0x039686EC BL 0x3942EDC
	0x039686F0 CBZ X22, 0x39688E0
	0x039686F4 ADRP X23, 0x7E5000
	0x039686F8 ADRP X24, 0x7E7000
	0x039686FC ADRP X25, 0x7E5000
	0x03968700 LDR X23, [X23 + 0xCD0]
	0x03968704 LDR X24, [X24 + 0x958]
	0x03968708 LDR X25, [X25 + 0xCC8]
	0x0396870C MOV X21, X0
	0x03968710 MOV X0, X22
	0x03968714 MOV X1, X31
	0x03968718 BL 0x3916198
	0x0396871C MOV X1, X0
	0x03968720 MOV X0, X20
	0x03968724 MOV X2, X31
	0x03968728 BL 0x38FEBC8
	0x0396872C LDR X8, [X23]
	0x03968730 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {27}
	004 Move X8, [X0+40]
	005 Move W11, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X10, [X0+48]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W11, W31
	011 Compare X8, 0
	012 JumpIfEqual {30}
	013 Move X8, [X8+40]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare X10, 0
	016 JumpIfEqual {30}
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add W11, W11, 1
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move X10, [X10+48]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 And W31, W11, 1
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Or W9, W11, W9
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move X0, X31
	028 Move X30, [X31+16]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> GetEdgeRing(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x03968734 MOV X0, X8
	0x03968738 BL 0x1C16F10
	0x0396873C LDR X2, [X24]
	0x03968740 MOV X1, X20
	0x03968744 MOV X22, X0
	0x03968748 BL 0x2D9FFF4
	0x0396874C LDR X0, [X23]
	0x03968750 BL 0x1C16F10
	0x03968754 LDR X1, [X25]
	0x03968758 MOV X20, X0
	0x0396875C BL 0x2D9FF10
	0x03968760 CBZ X21, 0x39688E0
	0x03968764 LDR W8, [X21 + 0x18]
	0x03968768 CMP W8, 0x1
	0x0396876C B.LT 0x3968818
	0x03968770 ADRP X26, 0x7E6000
	0x03968774 ADRP X27, 0x7E7000
	0x03968778 ADRP X28, 0x7E7000
	0x0396877C LDR X26, [X26 + 0xB00]
	0x03968780 LDR X27, [X27 + 0x950]
	0x03968784 LDR X28, [X28 + 0x328]
	0x03968788 MOV W23, W31
	0x0396878C LDR X2, [X26]
	0x03968790 MOV X0, X21
	0x03968794 MOV W1, W23
	0x03968798 BL 0x301BCCC
	0x0396879C CBZ X0, 0x39688E0
	0x039687A0 CBZ X22, 0x39688E0
	0x039687A4 LDP X1, X2, [X0 + 0x10]
	0x039687A8 LDR X3, [X27]
	0x039687AC MOV X0, X22
	0x039687B0 BL 0x2DA05B8
	0x039687B4 TBZ X0, 0x0, 0x3968808
	0x039687B8 LDR X2, [X26]
	0x039687BC MOV X0, X21
	0x039687C0 MOV W1, W23
	0x039687C4 BL 0x301BCCC
	0x039687C8 LDR X2, [X26]
	0x039687CC MOV X24, X0
	0x039687D0 MOV X0, X21
	0x039687D4 MOV W1, W23
	0x039687D8 BL 0x301BCCC
	0x039687DC CBZ X0, 0x39688E0
	0x039687E0 LDR X8, [X28]
	0x039687E4 LDR X25, [X0 + 0x18]
	0x039687E8 LDR W9, [X8 + 0xE0]
	0x039687EC CBNZ W9, 0x39687F8
	0x039687F0 MOV X0, X8
	0x039687F4 BL 0x1C16DFC
	0x039687F8 MOV X0, X24
	0x039687FC MOV X1, X25
	0x03968800 MOV X2, X20
	0x03968804 BL 0x39688E4
	0x03968808 LDR W8, [X21 + 0x18]
	0x0396880C ADD W23, W23, 0x1
	0x03968810 CMP W23, W8
	0x03968814 B.LT 0x396878C
	0x03968818 ADRP X23, 0x7E7000
	0x0396881C LDR X23, [X23 + 0xB68]
	0x03968820 LDR X0, [X23]
	0x03968824 LDR W8, [X0 + 0xE0]
	0x03968828 CBNZ W8, 0x3968834
	0x0396882C BL 0x1C16DFC
	0x03968830 LDR X0, [X23]
	0x03968834 LDR X8, [X0 + 0xB8]
	0x03968838 ADRP X25, 0x7E7000
	0x0396883C ADRP X24, 0x7E5000
	0x03968840 LDR X21, [X8 + 0x48]
	0x03968844 LDR X25, [X25 + 0x3E8]
	0x03968848 LDR X24, [X24 + 0xD40]
	0x0396884C CBNZ X21, 0x39688A0
	0x03968850 LDR W8, [X0 + 0xE0]
	0x03968854 CBNZ W8, 0x3968860
	0x03968858 BL 0x1C16DFC
	0x0396885C LDR X0, [X23]
	0x03968860 ADRP X9, 0x7E7000
	0x03968864 LDR X8, [X0 + 0xB8]
	0x03968868 LDR X9, [X9 + 0x430]
	0x0396886C LDR X22, [X8]
	0x03968870 LDR X0, [X9]
	0x03968874 BL 0x1C16F10
	0x03968878 ADRP X8, 0x7E7000
	0x0396887C LDR X8, [X8 + 0xC28]
	0x03968880 MOV X1, X22
	0x03968884 MOV X3, X31
	0x03968888 MOV X21, X0
	0x0396888C LDR X2, [X8]
	0x03968890 BL 0x2D2C704
	0x03968894 LDR X8, [X23]
	0x03968898 LDR X8, [X8 + 0xB8]
	0x0396889C STR X21, [X8 + 0x48]
	0x039688A0 LDR X2, [X25]
	0x039688A4 MOV X0, X20
	0x039688A8 MOV X1, X21
	0x039688AC BL 0x21CCD80
	0x039688B0 LDR X1, [X24]
	0x039688B4 BL 0x21D544C
	0x039688B8 MOV X8, X0
	0x039688BC STR X8, [X19]
	0x039688C0 LDP X20, X19, [X31 + 0x50]
	0x039688C4 LDP X22, X21, [X31 + 0x40]
	0x039688C8 LDP X24, X23, [X31 + 0x30]
	0x039688CC LDP X26, X25, [X31 + 0x20]
	0x039688D0 LDP X28, X27, [X31 + 0x10]
	0x039688D4 MOVZ W0, 0x1
	0x039688D8 LDR X30, [X31], #0x60
	0x039688DC RET
	0x039688E0 BL 0x1C16F20
	0x039688E4 STP X29, X30, [X31 - 0x60]!
	0x039688E8 STP X28, X27, [X31 + 0x10]
	0x039688EC STP X26, X25, [X31 + 0x20]
	0x039688F0 STP X24, X23, [X31 + 0x30]
	0x039688F4 STP X22, X21, [X31 + 0x40]
	0x039688F8 STP X20, X19, [X31 + 0x50]
	0x039688FC ADRP X22, 0xA79000
	0x03968900 LDRB W8, [X22 + 0x9D8]
	0x03968904 MOV X19, X2
	0x03968908 MOV X21, X1
	0x0396890C MOV X20, X0
	0x03968910 TBNZ X8, 0x0, 0x39689A0
	0x03968914 ADRP X0, 0x7E7000
	0x03968918 LDR X0, [X0 + 0xC10]
	0x0396891C BL 0x1C16CF4
	0x03968920 ADRP X0, 0x7E7000
	0x03968924 LDR X0, [X0 + 0x328]
	0x03968928 BL 0x1C16CF4
	0x0396892C ADRP X0, 0x7E7000
	0x03968930 LDR X0, [X0 + 0xC18]
	0x03968934 BL 0x1C16CF4
	0x03968938 ADRP X0, 0x7E7000
	0x0396893C LDR X0, [X0 + 0x78]
	0x03968940 BL 0x1C16CF4
	0x03968944 ADRP X0, 0x7E5000
	0x03968948 LDR X0, [X0 + 0xCC0]
	0x0396894C BL 0x1C16CF4
	0x03968950 ADRP X0, 0x7E7000
	0x03968954 LDR X0, [X0 + 0x950]
	0x03968958 BL 0x1C16CF4
	0x0396895C ADRP X0, 0x7E6000
	0x03968960 LDR X0, [X0 + 0xAF8]
	0x03968964 BL 0x1C16CF4
	0x03968968 ADRP X0, 0x7E6000
	0x0396896C LDR X0, [X0 + 0xB00]
	0x03968970 BL 0x1C16CF4
	0x03968974 ADRP X0, 0x7E7000
	0x03968978 LDR X0, [X0 + 0xC30]
	0x0396897C BL 0x1C16CF4
	0x03968980 ADRP X0, 0x7E7000
	0x03968984 LDR X0, [X0 + 0xC38]
	0x03968988 BL 0x1C16CF4
	0x0396898C ADRP X0, 0x7E7000
	0x03968990 LDR X0, [X0 + 0xB68]
	0x03968994 BL 0x1C16CF4
	0x03968998 MOVZ W8, 0x1
	0x0396899C STRB W8, [X22 + 0x9D8]
	0x039689A0 CBZ X20, 0x3968C60
	0x039689A4 CBZ X19, 0x3968C60
	0x039689A8 ADRP X25, 0x7E7000
	0x039689AC LDR X25, [X25 + 0x950]
	0x039689B0 LDP X1, X2, [X20 + 0x10]
	0x039689B4 ADRP X29, 0x7E7000
	0x039689B8 MOV X0, X19
	0x039689BC LDR X3, [X25]
	0x039689C0 LDR X29, [X29 + 0x328]
	0x039689C4 BL 0x2DA05B8
	0x039689C8 TBNZ X0, 0x0, 0x39689E4
	0x039689CC ADRP X8, 0x7E5000
	0x039689D0 LDP X1, X2, [X20 + 0x10]
	0x039689D4 LDR X8, [X8 + 0xCC0]
	0x039689D8 MOV X0, X19
	0x039689DC LDR X3, [X8]
	0x039689E0 BL 0x2DA1088
	0x039689E4 LDR X0, [X29]
	0x039689E8 ADRP X26, 0x7E7000
	0x039689EC LDR W8, [X0 + 0xE0]
	0x039689F0 LDR X26, [X26 + 0xB68]
	0x039689F4 CBNZ W8, 0x39689FC
	0x039689F8 BL 0x1C16DFC
	0x039689FC MOVZ W2, 0x1
	0x03968A00 MOV X0, X20
	0x03968A04 MOV W1, W21
	0x03968A08 BL 0x3968C64
	0x03968A0C LDR X8, [X26]
	0x03968A10 MOV X23, X0
	0x03968A14 LDR W9, [X8 + 0xE0]
	0x03968A18 CBNZ W9, 0x3968A28
	0x03968A1C MOV X0, X8
	0x03968A20 BL 0x1C16DFC
	0x03968A24 LDR X8, [X26]
	0x03968A28 LDR X9, [X8 + 0xB8]
	0x03968A2C ADRP X28, 0x7E7000
	0x03968A30 ADRP X27, 0x7E7000
	0x03968A34 UBFM X22, X21, 0x20, 0x3F
	0x03968A38 LDR X24, [X9 + 0x58]
	0x03968A3C LDR X28, [X28 + 0xC10]
	0x03968A40 LDR X27, [X27 + 0xC18]
	0x03968A44 CBNZ X24, 0x3968A9C
	0x03968A48 LDR W9, [X8 + 0xE0]
	0x03968A4C CBNZ W9, 0x3968A5C
	0x03968A50 MOV X0, X8
	0x03968A54 BL 0x1C16DFC
	0x03968A58 LDR X8, [X26]
	0x03968A5C ADRP X9, 0x7E7000
	0x03968A60 LDR X8, [X8 + 0xB8]
	0x03968A64 LDR X9, [X9 + 0x78]
	0x03968A68 LDR X21, [X8]
	0x03968A6C LDR X0, [X9]
	0x03968A70 BL 0x1C16F10
	0x03968A74 ADRP X8, 0x7E7000
	0x03968A78 LDR X8, [X8 + 0xC30]
	0x03968A7C MOV X1, X21
	0x03968A80 MOV X3, X31
	0x03968A84 MOV X24, X0
	0x03968A88 LDR X2, [X8]
	0x03968A8C BL 0x2D2FDEC
	0x03968A90 LDR X8, [X26]
	0x03968A94 LDR X8, [X8 + 0xB8]
	0x03968A98 STR X24, [X8 + 0x58]
	0x03968A9C LDR X2, [X28]
	0x03968AA0 MOV X0, X23
	0x03968AA4 MOV X1, X24
	0x03968AA8 BL 0x217E4D8
	0x03968AAC LDR X1, [X27]
	0x03968AB0 BL 0x21D79F4
	0x03968AB4 LDR X8, [X29]
	0x03968AB8 MOV X21, X0
	0x03968ABC LDR W9, [X8 + 0xE0]
	0x03968AC0 CBNZ W9, 0x3968ACC
	0x03968AC4 MOV X0, X8
	0x03968AC8 BL 0x1C16DFC
	0x03968ACC MOVZ W2, 0x1
	0x03968AD0 MOV X0, X20
	0x03968AD4 MOV W1, W22
	0x03968AD8 BL 0x3968C64
	0x03968ADC LDR X8, [X26]
	0x03968AE0 MOV X20, X0
	0x03968AE4 LDR W9, [X8 + 0xE0]
	0x03968AE8 CBNZ W9, 0x3968AF8
	0x03968AEC MOV X0, X8
	0x03968AF0 BL 0x1C16DFC
	0x03968AF4 LDR X8, [X26]
	0x03968AF8 LDR X9, [X8 + 0xB8]
	0x03968AFC LDR X22, [X9 + 0x60]
	0x03968B00 CBNZ X22, 0x3968B58
	0x03968B04 LDR W9, [X8 + 0xE0]
	0x03968B08 CBNZ W9, 0x3968B18
	0x03968B0C MOV X0, X8
	0x03968B10 BL 0x1C16DFC
	0x03968B14 LDR X8, [X26]
	0x03968B18 ADRP X9, 0x7E7000
	0x03968B1C LDR X8, [X8 + 0xB8]
	0x03968B20 LDR X9, [X9 + 0x78]
	0x03968B24 LDR X23, [X8]
	0x03968B28 LDR X0, [X9]
	0x03968B2C BL 0x1C16F10
	0x03968B30 ADRP X8, 0x7E7000
	0x03968B34 LDR X8, [X8 + 0xC38]
	0x03968B38 MOV X1, X23
	0x03968B3C MOV X3, X31
	0x03968B40 MOV X22, X0
	0x03968B44 LDR X2, [X8]
	0x03968B48 BL 0x2D2FDEC
	0x03968B4C LDR X8, [X26]
	0x03968B50 LDR X8, [X8 + 0xB8]
	0x03968B54 STR X22, [X8 + 0x60]
	0x03968B58 LDR X2, [X28]
	0x03968B5C MOV X0, X20
	0x03968B60 MOV X1, X22
	0x03968B64 BL 0x217E4D8
	0x03968B68 LDR X1, [X27]
	0x03968B6C BL 0x21D79F4
	0x03968B70 CBZ X21, 0x3968C60
	0x03968B74 LDR W8, [X21 + 0x18]
	0x03968B78 MOV X20, X0
	0x03968B7C CMP W8, 0x4
	0x03968B80 B.NE 0x3968BD0
	0x03968B84 ADRP X8, 0x7E6000
	0x03968B88 LDR X8, [X8 + 0xB00]
	0x03968B8C MOVZ W1, 0x2
	0x03968B90 MOV X0, X21
	0x03968B94 LDR X2, [X8]
	0x03968B98 BL 0x301BCCC
	0x03968B9C CBZ X0, 0x3968C60
	0x03968BA0 LDP X1, X2, [X0 + 0x10]
	0x03968BA4 LDR X3, [X25]
	0x03968BA8 MOV X21, X0
	0x03968BAC MOV X0, X19
	0x03968BB0 BL 0x2DA05B8
	0x03968BB4 TBNZ X0, 0x0, 0x3968BD0
	0x03968BB8 ADRP X8, 0x7E5000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xA7A000
	015 Move X21, 0x7E7000
	016 Move W8, [X22+2515]
	017 Move X21, [X21+2824]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {89}
	024 Move X0, 0x7E8000
	025 Move X0, [X0+176]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E8000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E8000
	031 Move X0, [X0+192]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E8000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E8000
	037 Move X0, [X0+208]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E8000
	040 Move X0, [X0+808]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E8000
	043 Move X0, [X0+984]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E8000
	046 Move X0, [X0+1000]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E8000
	049 Move X0, [X0+1480]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E8000
	052 Move X0, [X0+1072]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E6000
	055 Move X0, [X0+3264]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E8000
	058 Move X0, [X0+2384]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E6000
	061 Move X0, [X0+3272]
	062 Call 0x1C17CF4
	063 Move X0, 0x7E6000
	064 Move X0, [X0+3280]
	065 Call 0x1C17CF4
	066 Move X0, 0x7E7000
	067 Move X0, [X0+2808]
	068 Call 0x1C17CF4
	069 Move X0, 0x7E8000
	070 Move X0, [X0+3048]
	071 Call 0x1C17CF4
	072 Move X0, 0x7E8000
	073 Move X0, [X0+3056]
	074 Call 0x1C17CF4
	075 Move X0, 0x7E7000
	076 Move X0, [X0+2816]
	077 Call 0x1C17CF4
	078 Move X0, 0x7E8000
	079 Move X0, [X0+3064]
	080 Call 0x1C17CF4
	081 Move X0, 0x7E8000
	082 Move X0, [X0+2920]
	083 Call 0x1C17CF4
	084 Move X0, 0x7E7000
	085 Move X0, [X0+2824]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X22+2515], W8
	089 Move X0, [X21]
	090 Move [X31+8], X31
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move W1, W31
	097 Move X2, X31
	098 Call WingedEdge.GetWingedEdges, X0, X1
	099 Compare X20, 0
	100 JumpIfEqual {336}
	101 Move X22, 0x7E8000
	102 Move X23, 0x7E8000
	103 Move X24, 0x7E8000
	104 Move X25, 0x7E8000
	105 Move X22, [X22+1480]
	106 Move X23, [X23+984]
	107 Move X24, [X24+208]
	108 Move X25, [X25+216]
	109 Move X21, X0
	110 Move X0, X20
	111 Move X1, X31
	112 Call ProBuilderMesh.get_sharedVertexLookup, X0
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call EdgeLookup.GetEdgeLookup, X0, X1
	117 Move X1, [X22]
	118 Call Enumerable.ToList, X0
	119 Move X1, [X23]
	120 Call Enumerable.Distinct, X0
	121 Move X1, [X22]
	122 Call Enumerable.ToList, X0
	123 Move X8, [X24]
	124 Move X19, X0
	125 Move X0, X8
	126 Call 0x1C17F10
	127 Move X1, [X25]
	128 Move X20, X0
	129 Call Dictionary`2<Edge, Object>..ctor, X0
	130 Compare X21, 0
	131 JumpIfEqual {336}
	132 Move W8, [X21+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X24, 0x7E7000
	135 Move X25, 0x7E8000
	136 Move X26, 0x7E8000
	137 Move X24, [X24+2816]
	138 Move X25, [X25+3040]
	139 Move X26, [X26+176]
	140 Move W22, W31
	141 Move X2, [X24]
	142 Move X0, X21
	143 Move W1, W22
	144 Call List`1<Object>.get_Item, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {336}
	147 Compare X20, 0
	148 JumpIfEqual {336}
	149 Move X1, [X0+24]
	150 Move X2, [X25]
	151 Move X0, X20
	152 Call Dictionary`2<Edge, Object>.ContainsKey, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {173}
	157 Move X2, [X24]
	158 Move X0, X21
	159 Move W1, W22
	160 Call List`1<Object>.get_Item, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {336}
	163 Move X2, [X24]
	164 Move X23, [X0+24]
	165 Move X0, X21
	166 Move W1, W22
	167 Call List`1<Object>.get_Item, X0, X1
	168 Move X3, [X26]
	169 Move X2, X0
	170 Move X0, X20
	171 Move X1, X23
	172 Call Dictionary`2<Edge, Object>.Add, X0, X1, X2
	173 Move W8, [X21+24]
	174 Add W22, W22, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, 0x7E6000
	177 Move X8, [X8+3280]
	178 Move X21, 0x7E6000
	179 Move X0, [X8]
	180 Move X21, [X21+3272]
	181 Call 0x1C17F10
	182 Move X1, [X21]
	183 Move X21, X0
	184 Call HashSet`1<EdgeLookup>..ctor, X0
	185 Compare X19, 0
	186 JumpIfEqual {336}
	187 Move W24, [X19+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X25, 0x7E8000
	190 Move X26, 0x7E8000
	191 Move X27, 0x7E8000
	192 Move X28, 0x7E6000
	193 Move X29, 0x7E8000
	194 Move X25, [X25+3056]
	195 Move X26, [X26+192]
	196 Move X27, [X27+2384]
	197 Move X28, [X28+3264]
	198 Move X29, [X29+808]
	199 Move W22, W31
	200 Move X2, [X25]
	201 Move X0, X19
	202 Move W1, W22
	203 Call List`1<EdgeLookup>.get_Item, X0, X1
	204 Compare X20, 0
	205 JumpIfEqual {336}
	206 Move X3, [X26]
	207 Add X2, X31, 8
	208 Move X0, X20
	209 Call Dictionary`2<Edge, Object>.TryGetValue, X0, X1, X2
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {228}
	214 Move X8, [X31+8]
	215 Compare X8, 0
	216 JumpIfEqual {336}
	217 Compare X21, 0
	218 JumpIfEqual {336}
	219 Move X1, [X8+16]
	220 Move X2, [X8+24]
	221 Move X3, [X27]
	222 Move X0, X21
	223 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {230}
	228 Add W22, W22, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X23, [X31+8]
	231 Compare X23, 0
	232 JumpIfEqual {336}
	233 Move X1, [X23+16]
	234 Move X2, [X23+24]
	235 Move X3, [X28]
	236 Move X0, X21
	237 Call HashSet`1<EdgeLookup>.Add, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {254}
	242 Move X0, [X29]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move X0, X23
	248 Call ElementSelection.EdgeRingNext, X0
	249 Compare X0, 0
	250 JumpIfEqual {254}
	251 Move X8, [X0+56]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 NotImplemented "Instruction CSEL not yet implemented."
	254 Move X8, [X31+8]
	255 Compare X8, 0
	256 JumpIfEqual {336}
	257 Move X0, [X29]
	258 Move X23, [X8+56]
	259 Move W9, [X0+224]
	260 Compare W9, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X0, X23
	264 Call ElementSelection.EdgeRingNext, X0
	265 Compare X0, 0
	266 JumpIfEqual {228}
	267 Move X8, [X0+56]
	268 Move X3, [X28]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CSEL not yet implemented."
	271 Move X1, [X23+16]
	272 Move X2, [X23+24]
	273 Move X0, X21
	274 Call HashSet`1<EdgeLookup>.Add, X0, X1
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {228}
	279 Move X0, [X29]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {263}
	283 Move X22, 0x7E8000
	284 Move X22, [X22+2920]
	285 Move X0, [X22]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {291}
	289 Call 0x1C17DFC
	290 Move X0, [X22]
	291 Move X8, [X0+184]
	292 Move X23, 0x7E8000
	293 Move X19, [X8+48]
	294 Move X23, [X23+1000]
	295 Compare X19, 0
	296 JumpIfNotEqual {318}
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {302}
	300 Call 0x1C17DFC
	301 Move X0, [X22]
	302 Move X9, 0x7E8000
	303 Move X8, [X0+184]
	304 Move X9, [X9+1072]
	305 Move X20, [X8]
	306 Move X0, [X9]
	307 Call 0x1C17F10
	308 Move X8, 0x7E8000
	309 Move X8, [X8+3064]
	310 Move X1, X20
	311 Move X3, X31
	312 Move X19, X0
	313 Move X2, [X8]
	314 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	315 Move X8, [X22]
	316 Move X8, [X8+184]
	317 Move [X8+48], X19
	318 Move X2, [X23]
	319 Move X0, X21
	320 Move X1, X19
	321 Call Enumerable.Select, X0, X1
	322 Move X20, [X31+96]
	323 Move X19, [X31+104]
	324 Move X22, [X31+80]
	325 Move X21, [X31+88]
	326 Move X24, [X31+64]
	327 Move X23, [X31+72]
	328 Move X26, [X31+48]
	329 Move X25, [X31+56]
	330 Move X28, [X31+32]
	331 Move X27, [X31+40]
	332 Move X29, [X31+16]
	333 Move X30, [X31+24]
	334 Add X31, X31, 112
	335 Return X0
	336 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> GetEdgeRingIterative(UnityEngine.ProBuilder.ProBuilderMesh pb, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x03968BBC LDP X1, X2, [X21 + 0x10]
	0x03968BC0 LDR X8, [X8 + 0xCC0]
	0x03968BC4 MOV X0, X19
	0x03968BC8 LDR X3, [X8]
	0x03968BCC BL 0x2DA1088
	0x03968BD0 CBZ X20, 0x3968C60
	0x03968BD4 LDR W8, [X20 + 0x18]
	0x03968BD8 CMP W8, 0x4
	0x03968BDC B.NE 0x3968C14
	0x03968BE0 ADRP X8, 0x7E6000
	0x03968BE4 LDR X8, [X8 + 0xB00]
	0x03968BE8 MOVZ W1, 0x2
	0x03968BEC MOV X0, X20
	0x03968BF0 LDR X2, [X8]
	0x03968BF4 BL 0x301BCCC
	0x03968BF8 CBZ X0, 0x3968C60
	0x03968BFC LDP X1, X2, [X0 + 0x10]
	0x03968C00 LDR X3, [X25]
	0x03968C04 MOV X20, X0
	0x03968C08 MOV X0, X19
	0x03968C0C BL 0x2DA05B8
	0x03968C10 TBZ X0, 0x0, 0x3968C30
	0x03968C14 LDP X20, X19, [X31 + 0x50]
	0x03968C18 LDP X22, X21, [X31 + 0x40]
	0x03968C1C LDP X24, X23, [X31 + 0x30]
	0x03968C20 LDP X26, X25, [X31 + 0x20]
	0x03968C24 LDP X28, X27, [X31 + 0x10]
	0x03968C28 LDP X29, X30, [X31], #0x60
	0x03968C2C RET
	0x03968C30 ADRP X8, 0x7E5000
	0x03968C34 LDP X1, X2, [X20 + 0x10]
	0x03968C38 LDR X8, [X8 + 0xCC0]
	0x03968C3C MOV X0, X19
	0x03968C40 LDP X20, X19, [X31 + 0x50]
	0x03968C44 LDP X22, X21, [X31 + 0x40]
	0x03968C48 LDR X3, [X8]
	0x03968C4C LDP X24, X23, [X31 + 0x30]
	0x03968C50 LDP X26, X25, [X31 + 0x20]
	0x03968C54 LDP X28, X27, [X31 + 0x10]
	0x03968C58 LDP X29, X30, [X31], #0x60
	0x03968C5C B 0x2DA1088
	0x03968C60 BL 0x1C16F20
	0x03968C64 SUB X31, X31, 0x70
	0x03968C68 STP X29, X30, [X31 + 0x10]
	0x03968C6C STP X28, X27, [X31 + 0x20]
	0x03968C70 STP X26, X25, [X31 + 0x30]
	0x03968C74 STP X24, X23, [X31 + 0x40]
	0x03968C78 STP X22, X21, [X31 + 0x50]
	0x03968C7C STP X20, X19, [X31 + 0x60]
	0x03968C80 ADRP X21, 0xA79000
	0x03968C84 ADRP X24, 0x7E7000
	0x03968C88 ADRP X23, 0x7E7000
	0x03968C8C LDRB W8, [X21 + 0x9DA]
	0x03968C90 LDR X24, [X24 + 0x30]
	0x03968C94 LDR X23, [X23 + 0x28]
	0x03968C98 MOV W22, W2
	0x03968C9C MOV W19, W1
	0x03968CA0 MOV X20, X0
	0x03968CA4 TBNZ X8, 0x0, 0x3968D10
	0x03968CA8 ADRP X0, 0x7B3000
	0x03968CAC LDR X0, [X0 + 0x600]
	0x03968CB0 BL 0x1C16CF4
	0x03968CB4 ADRP X0, 0x7E7000
	0x03968CB8 LDR X0, [X0 + 0x328]
	0x03968CBC BL 0x1C16CF4
	0x03968CC0 ADRP X0, 0x7E7000
	0x03968CC4 LDR X0, [X0 + 0xC40]
	0x03968CC8 BL 0x1C16CF4
	0x03968CCC ADRP X0, 0x7E7000
	0x03968CD0 LDR X0, [X0 + 0x20]
	0x03968CD4 BL 0x1C16CF4
	0x03968CD8 ADRP X0, 0x7E7000
	0x03968CDC LDR X0, [X0 + 0xC48]
	0x03968CE0 BL 0x1C16CF4
	0x03968CE4 ADRP X0, 0x7E7000
	0x03968CE8 LDR X0, [X0 + 0xC50]
	0x03968CEC BL 0x1C16CF4
	0x03968CF0 ADRP X0, 0x7E7000
	0x03968CF4 LDR X0, [X0 + 0x28]
	0x03968CF8 BL 0x1C16CF4
	0x03968CFC ADRP X0, 0x7E7000
	0x03968D00 LDR X0, [X0 + 0x30]
	0x03968D04 BL 0x1C16CF4
	0x03968D08 MOVZ W8, 0x1
	0x03968D0C STRB W8, [X21 + 0x9DA]
	0x03968D10 LDR X0, [X24]
	0x03968D14 STR X31, [X31 + 0x8]
	0x03968D18 BL 0x1C16F10
	0x03968D1C LDR X1, [X23]
	0x03968D20 MOV X21, X0
	0x03968D24 BL 0x301B7C4
	0x03968D28 CBZ X21, 0x3968F6C
	0x03968D2C ADRP X29, 0x7E7000
	0x03968D30 ADRP X25, 0x7E7000
	0x03968D34 ADRP X26, 0x7E7000
	0x03968D38 ADRP X27, 0x7B3000
	0x03968D3C LDR X29, [X29 + 0xC48]
	0x03968D40 LDR X25, [X25 + 0x20]
	0x03968D44 LDR X26, [X26 + 0x328]
	0x03968D48 LDR X27, [X27 + 0x600]
	0x03968D4C MOV W28, W31
	0x03968D50 MOV X23, X20
	0x03968D54 LDR X2, [X29]
	0x03968D58 MOV X0, X21
	0x03968D5C MOV X1, X23
	0x03968D60 BL 0x301C318
	0x03968D64 TBNZ X0, 0x0, 0x3968F48
	0x03968D68 LDR W10, [X21 + 0x1C]
	0x03968D6C LDR X8, [X21 + 0x10]
	0x03968D70 LDR X9, [X25]
	0x03968D74 ADD W10, W10, 0x1
	0x03968D78 STR W10, [X21 + 0x1C]
	0x03968D7C CBZ X8, 0x3968F6C
	0x03968D80 LDRSW X10, [X21 + 0x18]
	0x03968D84 LDR W11, [X8 + 0x18]
	0x03968D88 CMP W10, W11
	0x03968D8C B.CS 0x3968DA4
	0x03968D90 ADD W9, W10, 0x1
	0x03968D94 ADD X8, X8, X10, 0x3, LSL
	0x03968D98 STR W9, [X21 + 0x18]
	0x03968D9C STR X23, [X8 + 0x20]
	0x03968DA0 B 0x3968DBC
	0x03968DA4 LDR X8, [X9 + 0x20]
	0x03968DA8 MOV X0, X21
	0x03968DAC MOV X1, X23
	0x03968DB0 LDR X8, [X8 + 0xC0]
	0x03968DB4 LDR X2, [X8 + 0x70]
	0x03968DB8 BL 0x301BF90
	0x03968DBC LDR X0, [X26]
	0x03968DC0 LDR W8, [X0 + 0xE0]
	0x03968DC4 CBNZ W8, 0x3968DCC
	0x03968DC8 BL 0x1C16DFC
	0x03968DCC AND W2, W28, 0x1
	0x03968DD0 MOV X0, X23
	0x03968DD4 MOV W1, W19
	0x03968DD8 BL 0x3968F70
	0x03968DDC CBZ X0, 0x3968E20
	0x03968DE0 LDR X8, [X0 + 0x18]
	0x03968DE4 MOV X23, X0
	0x03968DE8 STR X8, [X31 + 0x8]
	0x03968DEC CBZ X20, 0x3968F6C
	0x03968DF0 LDR X0, [X27]
	0x03968DF4 LDR X24, [X20 + 0x18]
	0x03968DF8 LDR W8, [X0 + 0xE0]
	0x03968DFC CBNZ W8, 0x3968E04
	0x03968E00 BL 0x1C16DFC
	0x03968E04 ADD X0, X31, 0x8
	0x03968E08 MOV X1, X24
	0x03968E0C MOV X2, X31
	0x03968E10 EOR W28, W28, 0x1
	0x03968E14 BL 0x38FDD60
	0x03968E18 TBZ X0, 0x0, 0x3968D54
	0x03968E1C B 0x3968F48
	0x03968E20 TBZ X22, 0x0, 0x3968F10
	0x03968E24 CBZ X20, 0x3968F6C
	0x03968E28 ADRP X8, 0x7E7000
	0x03968E2C LDR X23, [X20 + 0x38]
	0x03968E30 LDR X8, [X8 + 0x30]
	0x03968E34 LDR X0, [X8]
	0x03968E38 BL 0x1C16F10
	0x03968E3C ADRP X8, 0x7E7000
	0x03968E40 LDR X8, [X8 + 0x28]
	0x03968E44 MOV X22, X0
	0x03968E48 LDR X1, [X8]
	0x03968E4C BL 0x301B7C4
	0x03968E50 CBZ X23, 0x3968F18
	0x03968E54 MOV W28, W31
	0x03968E58 LDR X8, [X23 + 0x18]
	0x03968E5C LDR X0, [X27]
	0x03968E60 STR X8, [X31 + 0x8]
	0x03968E64 LDR W8, [X0 + 0xE0]
	0x03968E68 LDR X24, [X20 + 0x18]
	0x03968E6C CBNZ W8, 0x3968E74
	0x03968E70 BL 0x1C16DFC
	0x03968E74 ADD X0, X31, 0x8
	0x03968E78 MOV X1, X24
	0x03968E7C MOV X2, X31
	0x03968E80 BL 0x38FDD60
	0x03968E84 TBNZ X0, 0x0, 0x3968F18
	0x03968E88 CBZ X22, 0x3968F6C
	0x03968E8C LDR W10, [X22 + 0x1C]
	0x03968E90 LDR X8, [X22 + 0x10]
	0x03968E94 LDR X9, [X25]
	0x03968E98 ADD W10, W10, 0x1
	0x03968E9C STR W10, [X22 + 0x1C]
	0x03968EA0 CBZ X8, 0x3968F6C
	0x03968EA4 LDRSW X10, [X22 + 0x18]
	0x03968EA8 LDR W11, [X8 + 0x18]
	0x03968EAC CMP W10, W11
	0x03968EB0 B.CS 0x3968EC8
	0x03968EB4 ADD W9, W10, 0x1
	0x03968EB8 ADD X8, X8, X10, 0x3, LSL
	0x03968EBC STR W9, [X22 + 0x18]
	0x03968EC0 STR X23, [X8 + 0x20]
	0x03968EC4 B 0x3968EE0
	0x03968EC8 LDR X8, [X9 + 0x20]
	0x03968ECC MOV X0, X22
	0x03968ED0 MOV X1, X23
	0x03968ED4 LDR X8, [X8 + 0xC0]
	0x03968ED8 LDR X2, [X8 + 0x70]
	0x03968EDC BL 0x301BF90
	0x03968EE0 LDR X0, [X26]
	0x03968EE4 LDR W8, [X0 + 0xE0]
	0x03968EE8 CBNZ W8, 0x3968EF0
	0x03968EEC BL 0x1C16DFC
	0x03968EF0 AND W2, W28, 0x1
	0x03968EF4 MOV X0, X23
	0x03968EF8 MOV W1, W19
	0x03968EFC BL 0x3968F70
	0x03968F00 MOV X23, X0
	0x03968F04 EOR W28, W28, 0x1
	0x03968F08 CBNZ X0, 0x3968E58
	0x03968F0C B 0x3968F1C
	0x03968F10 MOV X21, X31
	0x03968F14 B 0x3968F48
	0x03968F18 CBZ X22, 0x3968F6C
	0x03968F1C ADRP X8, 0x7E7000
	0x03968F20 LDR X8, [X8 + 0xC50]
	0x03968F24 MOV X0, X22
	0x03968F28 LDR X1, [X8]
	0x03968F2C BL 0x301DB98
	0x03968F30 ADRP X8, 0x7E7000
	0x03968F34 LDR X8, [X8 + 0xC40]
	0x03968F38 MOV X0, X21
	0x03968F3C MOV X1, X22
	0x03968F40 LDR X2, [X8]
	0x03968F44 BL 0x301C194
	0x03968F48 MOV X0, X21
	0x03968F4C LDP X20, X19, [X31 + 0x60]
	0x03968F50 LDP X22, X21, [X31 + 0x50]
	0x03968F54 LDP X24, X23, [X31 + 0x40]
	0x03968F58 LDP X26, X25, [X31 + 0x30]
	0x03968F5C LDP X28, X27, [X31 + 0x20]
	0x03968F60 LDP X29, X30, [X31 + 0x10]
	0x03968F64 ADD X31, X31, 0x70
	0x03968F68 RET
	0x03968F6C BL 0x1C16F20
	0x03968F70 STR X30, [X31 - 0x30]!
	0x03968F74 STP X22, X21, [X31 + 0x10]
	0x03968F78 STP X20, X19, [X31 + 0x20]
	0x03968F7C ADRP X22, 0xA79000
	0x03968F80 LDRB W8, [X22 + 0x9D9]
	0x03968F84 MOV W21, W2
	0x03968F88 MOV W20, W1
	0x03968F8C MOV X19, X0
	0x03968F90 TBNZ X8, 0x0, 0x3968FA8
	0x03968F94 ADRP X0, 0x7B3000
	0x03968F98 LDR X0, [X0 + 0x600]
	0x03968F9C BL 0x1C16CF4
	0x03968FA0 MOVZ W8, 0x1
	0x03968FA4 STRB W8, [X22 + 0x9D9]
	0x03968FA8 CBZ X19, 0x396904C
	0x03968FAC TBZ X21, 0x0, 0x3968FB8
	0x03968FB0 ADD X21, X19, 0x38
	0x03968FB4 B 0x3969038
	0x03968FB8 MOV X21, X19
	0x03968FBC LDR X8, [X21 + 0x28]!
	0x03968FC0 CBZ X8, 0x396904C
	0x03968FC4 ADRP X22, 0x7B3000
	0x03968FC8 LDR X8, [X8 + 0x18]
	0x03968FCC LDR X22, [X22 + 0x600]
	0x03968FD0 STR X8, [X31 + 0x8]
	0x03968FD4 LDR X0, [X22]
	0x03968FD8 LDR W8, [X0 + 0xE0]
	0x03968FDC CBNZ W8, 0x3968FE4
	0x03968FE0 BL 0x1C16DFC
	0x03968FE4 ADD X0, X31, 0x8
	0x03968FE8 MOV W1, W20
	0x03968FEC MOV X2, X31
	0x03968FF0 BL 0x38FE204
	0x03968FF4 TBNZ X0, 0x0, 0x3969038
	0x03968FF8 LDR X8, [X19 + 0x30]!
	0x03968FFC CBZ X8, 0x396904C
	0x03969000 LDR X8, [X8 + 0x18]
	0x03969004 LDR X0, [X22]
	0x03969008 STR X8, [X31 + 0x8]
	0x0396900C LDR W8, [X0 + 0xE0]
	0x03969010 CBNZ W8, 0x3969018
	0x03969014 BL 0x1C16DFC
	0x03969018 ADD X0, X31, 0x8
	0x0396901C MOV W1, W20
	0x03969020 MOV X2, X31
	0x03969024 BL 0x38FE204
	0x03969028 MOV W8, W0
	0x0396902C MOV X0, X31
	0x03969030 MOV X21, X19
	0x03969034 TBZ X8, 0x0, 0x396903C
	0x03969038 LDR X0, [X21]
	0x0396903C LDP X20, X19, [X31 + 0x20]
	0x03969040 LDP X22, X21, [X31 + 0x10]
	0x03969044 LDR X30, [X31], #0x30
	0x03969048 RET
	0x0396904C BL 0x1C16F20
	0x03969050 SUB X31, X31, 0xB0
	0x03969054 STP D15, D14, [X31 + 0x10]
	0x03969058 STP D13, D12, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xA7A000
	015 Move X21, 0x7E7000
	016 Move W8, [X22+2516]
	017 Move X21, [X21+2824]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {89}
	024 Move X0, 0x7E8000
	025 Move X0, [X0+176]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E8000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E8000
	031 Move X0, [X0+192]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E8000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E8000
	037 Move X0, [X0+208]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E8000
	040 Move X0, [X0+808]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E8000
	043 Move X0, [X0+984]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E8000
	046 Move X0, [X0+1000]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E8000
	049 Move X0, [X0+1480]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E8000
	052 Move X0, [X0+1072]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E6000
	055 Move X0, [X0+3264]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E8000
	058 Move X0, [X0+2384]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E6000
	061 Move X0, [X0+3272]
	062 Call 0x1C17CF4
	063 Move X0, 0x7E6000
	064 Move X0, [X0+3280]
	065 Call 0x1C17CF4
	066 Move X0, 0x7E7000
	067 Move X0, [X0+2808]
	068 Call 0x1C17CF4
	069 Move X0, 0x7E8000
	070 Move X0, [X0+3048]
	071 Call 0x1C17CF4
	072 Move X0, 0x7E8000
	073 Move X0, [X0+3056]
	074 Call 0x1C17CF4
	075 Move X0, 0x7E7000
	076 Move X0, [X0+2816]
	077 Call 0x1C17CF4
	078 Move X0, 0x7E8000
	079 Move X0, [X0+3072]
	080 Call 0x1C17CF4
	081 Move X0, 0x7E8000
	082 Move X0, [X0+2920]
	083 Call 0x1C17CF4
	084 Move X0, 0x7E7000
	085 Move X0, [X0+2824]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X22+2516], W8
	089 Move X0, [X21]
	090 Move [X31+8], X31
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move W1, W31
	097 Move X2, X31
	098 Call WingedEdge.GetWingedEdges, X0, X1
	099 Compare X20, 0
	100 JumpIfEqual {347}
	101 Move X22, 0x7E8000
	102 Move X23, 0x7E8000
	103 Move X24, 0x7E8000
	104 Move X25, 0x7E8000
	105 Move X22, [X22+1480]
	106 Move X23, [X23+984]
	107 Move X24, [X24+208]
	108 Move X25, [X25+216]
	109 Move X21, X0
	110 Move X0, X20
	111 Move X1, X31
	112 Call ProBuilderMesh.get_sharedVertexLookup, X0
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call EdgeLookup.GetEdgeLookup, X0, X1
	117 Move X1, [X22]
	118 Call Enumerable.ToList, X0
	119 Move X1, [X23]
	120 Call Enumerable.Distinct, X0
	121 Move X1, [X22]
	122 Call Enumerable.ToList, X0
	123 Move X8, [X24]
	124 Move X19, X0
	125 Move X0, X8
	126 Call 0x1C17F10
	127 Move X1, [X25]
	128 Move X20, X0
	129 Call Dictionary`2<Edge, Object>..ctor, X0
	130 Compare X21, 0
	131 JumpIfEqual {347}
	132 Move W8, [X21+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X24, 0x7E7000
	135 Move X25, 0x7E8000
	136 Move X26, 0x7E8000
	137 Move X24, [X24+2816]
	138 Move X25, [X25+3040]
	139 Move X26, [X26+176]
	140 Move W22, W31
	141 Move X2, [X24]
	142 Move X0, X21
	143 Move W1, W22
	144 Call List`1<Object>.get_Item, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {347}
	147 Compare X20, 0
	148 JumpIfEqual {347}
	149 Move X1, [X0+24]
	150 Move X2, [X25]
	151 Move X0, X20
	152 Call Dictionary`2<Edge, Object>.ContainsKey, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {173}
	157 Move X2, [X24]
	158 Move X0, X21
	159 Move W1, W22
	160 Call List`1<Object>.get_Item, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {347}
	163 Move X2, [X24]
	164 Move X23, [X0+24]
	165 Move X0, X21
	166 Move W1, W22
	167 Call List`1<Object>.get_Item, X0, X1
	168 Move X3, [X26]
	169 Move X2, X0
	170 Move X0, X20
	171 Move X1, X23
	172 Call Dictionary`2<Edge, Object>.Add, X0, X1, X2
	173 Move W8, [X21+24]
	174 Add W22, W22, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X8, 0x7E6000
	177 Move X8, [X8+3280]
	178 Move X21, 0x7E6000
	179 Move X0, [X8]
	180 Move X21, [X21+3272]
	181 Call 0x1C17F10
	182 Move X1, [X21]
	183 Move X21, X0
	184 Call HashSet`1<EdgeLookup>..ctor, X0
	185 Compare X19, 0
	186 JumpIfEqual {347}
	187 Move W25, [X19+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X26, 0x7E8000
	190 Move X27, 0x7E8000
	191 Move X28, 0x7E8000
	192 Move X29, 0x7E8000
	193 Move X26, [X26+3056]
	194 Move X27, [X27+192]
	195 Move X28, [X28+2384]
	196 Move X29, [X29+808]
	197 Move W22, W31
	198 Move X2, [X26]
	199 Move X0, X19
	200 Move W1, W22
	201 Call List`1<EdgeLookup>.get_Item, X0, X1
	202 Compare X20, 0
	203 JumpIfEqual {347}
	204 Move X3, [X27]
	205 Add X2, X31, 8
	206 Move X0, X20
	207 Call Dictionary`2<Edge, Object>.TryGetValue, X0, X1, X2
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {292}
	212 Move X23, [X31+8]
	213 Compare X23, 0
	214 JumpIfEqual {347}
	215 Compare X21, 0
	216 JumpIfEqual {347}
	217 Move X1, [X23+16]
	218 Move X2, [X23+24]
	219 Move X3, [X28]
	220 Move X0, X21
	221 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfEqual {233}
	226 Move X8, 0x7E6000
	227 Move X1, [X23+16]
	228 Move X2, [X23+24]
	229 Move X8, [X8+3264]
	230 Move X0, X21
	231 Move X3, [X8]
	232 Call HashSet`1<EdgeLookup>.Add, X0, X1
	233 Move X0, [X29]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X23
	239 Call ElementSelection.EdgeRingNext, X0
	240 Compare X0, 0
	241 JumpIfEqual {262}
	242 Move X8, [X0+56]
	243 Move X24, X0
	244 Compare X8, 0
	245 JumpIfEqual {262}
	246 Move X1, [X24+16]
	247 Move X2, [X24+24]
	248 Move X3, [X28]
	249 Move X0, X21
	250 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {262}
	255 Move X8, 0x7E6000
	256 Move X1, [X24+16]
	257 Move X2, [X24+24]
	258 Move X8, [X8+3264]
	259 Move X0, X21
	260 Move X3, [X8]
	261 Call HashSet`1<EdgeLookup>.Add, X0, X1
	262 Move X0, [X29]
	263 Move X23, [X23+56]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X23
	269 Call ElementSelection.EdgeRingNext, X0
	270 Compare X0, 0
	271 JumpIfEqual {292}
	272 Move X8, [X0+56]
	273 Move X23, X0
	274 Compare X8, 0
	275 JumpIfEqual {292}
	276 Move X1, [X23+16]
	277 Move X2, [X23+24]
	278 Move X3, [X28]
	279 Move X0, X21
	280 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {292}
	285 Move X8, 0x7E6000
	286 Move X1, [X23+16]
	287 Move X2, [X23+24]
	288 Move X8, [X8+3264]
	289 Move X0, X21
	290 Move X3, [X8]
	291 Call HashSet`1<EdgeLookup>.Add, X0, X1
	292 Add W22, W22, 1
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X22, 0x7E8000
	295 Move X22, [X22+2920]
	296 Move X0, [X22]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {302}
	300 Call 0x1C17DFC
	301 Move X0, [X22]
	302 Move X8, [X0+184]
	303 Move X23, 0x7E8000
	304 Move X19, [X8+56]
	305 Move X23, [X23+1000]
	306 Compare X19, 0
	307 JumpIfNotEqual {329}
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {313}
	311 Call 0x1C17DFC
	312 Move X0, [X22]
	313 Move X9, 0x7E8000
	314 Move X8, [X0+184]
	315 Move X9, [X9+1072]
	316 Move X20, [X8]
	317 Move X0, [X9]
	318 Call 0x1C17F10
	319 Move X8, 0x7E7000
	320 Move X8, [X8+3072]
	321 Move X1, X20
	322 Move X3, X31
	323 Move X19, X0
	324 Move X2, [X8]
	325 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	326 Move X8, [X22]
	327 Move X8, [X8+184]
	328 Move [X8+56], X19
	329 Move X2, [X23]
	330 Move X0, X21
	331 Move X1, X19
	332 Call Enumerable.Select, X0, X1
	333 Move X20, [X31+96]
	334 Move X19, [X31+104]
	335 Move X22, [X31+80]
	336 Move X21, [X31+88]
	337 Move X24, [X31+64]
	338 Move X23, [X31+72]
	339 Move X26, [X31+48]
	340 Move X25, [X31+56]
	341 Move X28, [X31+32]
	342 Move X27, [X31+40]
	343 Move X29, [X31+16]
	344 Move X30, [X31+24]
	345 Add X31, X31, 112
	346 Return X0
	347 Call 0x1C17F20

Method: System.Boolean GetEdgeLoop(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, out UnityEngine.ProBuilder.Edge[] loop)

Disassembly:
	0x0396905C STP D11, D10, [X31 + 0x30]
	0x03969060 STP D9, D8, [X31 + 0x40]
	0x03969064 STP X29, X30, [X31 + 0x50]
	0x03969068 STP X28, X27, [X31 + 0x60]
	0x0396906C STP X26, X25, [X31 + 0x70]
	0x03969070 STP X24, X23, [X31 + 0x80]
	0x03969074 STP X22, X21, [X31 + 0x90]
	0x03969078 STP X20, X19, [X31 + 0xA0]
	0x0396907C ADRP X21, 0xA78000
	0x03969080 ADRP X20, 0x7E5000
	0x03969084 LDRB W8, [X21 + 0x9DB]
	0x03969088 LDR X20, [X20 + 0xB08]
	0x0396908C MOV V8.16B, V0.16B
	0x03969090 MOV X22, X1
	0x03969094 MOV X19, X0
	0x03969098 TBNZ X8, 0x0, 0x396911C
	0x0396909C ADRP X0, 0x7E5000
	0x039690A0 LDR X0, [X0 + 0x888]
	0x039690A4 BL 0x1C16CF4
	0x039690A8 ADRP X0, 0x7E4000
	0x039690AC LDR X0, [X0 + 0xE28]
	0x039690B0 BL 0x1C16CF4
	0x039690B4 ADRP X0, 0x7E5000
	0x039690B8 LDR X0, [X0 + 0x890]
	0x039690BC BL 0x1C16CF4
	0x039690C0 ADRP X0, 0x7E6000
	0x039690C4 LDR X0, [X0 + 0x678]
	0x039690C8 BL 0x1C16CF4
	0x039690CC ADRP X0, 0x7E5000
	0x039690D0 LDR X0, [X0 + 0x898]
	0x039690D4 BL 0x1C16CF4
	0x039690D8 ADRP X0, 0x78A000
	0x039690DC LDR X0, [X0 + 0xE00]
	0x039690E0 BL 0x1C16CF4
	0x039690E4 ADRP X0, 0x7E5000
	0x039690E8 LDR X0, [X0 + 0xAF8]
	0x039690EC BL 0x1C16CF4
	0x039690F0 ADRP X0, 0x7E5000
	0x039690F4 LDR X0, [X0 + 0xB00]
	0x039690F8 BL 0x1C16CF4
	0x039690FC ADRP X0, 0x7E5000
	0x03969100 LDR X0, [X0 + 0xDD0]
	0x03969104 BL 0x1C16CF4
	0x03969108 ADRP X0, 0x7E5000
	0x0396910C LDR X0, [X0 + 0xB08]
	0x03969110 BL 0x1C16CF4
	0x03969114 MOVZ W8, 0x1
	0x03969118 STRB W8, [X21 + 0x9DB]
	0x0396911C LDR X0, [X20]
	0x03969120 ADRP X25, 0x7E5000
	0x03969124 ADRP X21, 0x7E6000
	0x03969128 ADRP X24, 0x7E5000
	0x0396912C LDR W8, [X0 + 0xE0]
	0x03969130 LDR X25, [X25 + 0x898]
	0x03969134 LDR X21, [X21 + 0x678]
	0x03969138 LDR X24, [X24 + 0x890]
	0x0396913C CBNZ W8, 0x3969144
	0x03969140 BL 0x1C16DFC
	0x03969144 MOVZ W1, 0x1
	0x03969148 MOV X0, X19
	0x0396914C MOV X2, X31
	0x03969150 MOVZ W23, 0x1
	0x03969154 BL 0x3942EDC
	0x03969158 LDR X8, [X25]
	0x0396915C MOV X20, X0
	0x03969160 MOV X0, X8
	0x03969164 BL 0x1C16F10
	0x03969168 LDR X2, [X21]
	0x0396916C MOV X1, X22
	0x03969170 MOV X21, X0
	0x03969174 BL 0x2DBDEEC
	0x03969178 LDR X0, [X25]
	0x0396917C BL 0x1C16F10
	0x03969180 LDR X1, [X24]
	0x03969184 MOV X22, X0
	0x03969188 BL 0x2DBDE08
	0x0396918C ADRP X24, 0xA6F000
	0x03969190 LDRB W8, [X24 + 0x783]
	0x03969194 CBNZ W8, 0x39691A8
	0x03969198 ADRP X0, 0x78A000
	0x0396919C LDR X0, [X0 + 0x5A0]
	0x039691A0 BL 0x1C16CF4
	0x039691A4 STRB W23, [X24 + 0x783]
	0x039691A8 CBZ X20, 0x396955C
	0x039691AC LDR W8, [X20 + 0x18]
	0x039691B0 CMP W8, 0x1
	0x039691B4 B.LT 0x3969528
	0x039691B8 ADRP X25, 0x7E5000
	0x039691BC ADRP X29, 0x7E4000
	0x039691C0 ADRP X8, 0x78A000
	0x039691C4 LDR X25, [X25 + 0xB00]
	0x039691C8 LDR X29, [X29 + 0xE28]
	0x039691CC LDR X8, [X8 + 0x5A0]
	0x039691D0 ADRP X27, 0x7E5000
	0x039691D4 ADRP X24, 0x78A000
	0x039691D8 ADRP X9, 0xFFFFFFFFFD180000
	0x039691DC LDR X8, [X8]
	0x039691E0 LDR X27, [X27 + 0x888]
	0x039691E4 LDR V15, [X9 + 0xFE8]
	0x039691E8 MOV W23, W31
	0x039691EC LDR X8, [X8 + 0xB8]
	0x039691F0 LDR X24, [X24 + 0x5A8]
	0x039691F4 ADRP X28, 0xA6F000
	0x039691F8 LDP S0, S10, [X8]
	0x039691FC LDR V11, [X8 + 0x8]
	0x03969200 ADRP X8, 0xFFFFFFFFFD181000
	0x03969204 STR S0, [X31 + 0xC]
	0x03969208 LDR V0, [X8 + 0x448]
	0x0396920C STR S0, [X31 + 0x8]
	0x03969210 LDR X2, [X25]
	0x03969214 MOV X0, X20
	0x03969218 MOV W1, W23
	0x0396921C BL 0x301BCCC
	0x03969220 CBZ X0, 0x396955C
	0x03969224 CBZ X21, 0x396955C
	0x03969228 LDR X1, [X0 + 0x20]
	0x0396922C LDR X2, [X29]
	0x03969230 MOV X0, X21
	0x03969234 BL 0x2DBE4B0
	0x03969238 TBZ X0, 0x0, 0x3969490
	0x0396923C FCMP S8, 0x0
	0x03969240 B.LE 0x3969274
	0x03969244 LDR X2, [X25]
	0x03969248 MOV X0, X20
	0x0396924C MOV W1, W23
	0x03969250 BL 0x301BCCC
	0x03969254 CBZ X0, 0x396955C
	0x03969258 LDR X1, [X0 + 0x20]
	0x0396925C MOV X0, X19
	0x03969260 MOV X2, X31
	0x03969264 BL 0x390987C
	0x03969268 MOV V10.16B, V1.16B
	0x0396926C MOV V11.16B, V2.16B
	0x03969270 STR S0, [X31 + 0xC]
	0x03969274 LDR X2, [X25]
	0x03969278 MOV X0, X20
	0x0396927C MOV W1, W23
	0x03969280 BL 0x301BCCC
	0x03969284 ADRP X8, 0x7E5000
	0x03969288 LDR X8, [X8 + 0xDD0]
	0x0396928C MOV X26, X0
	0x03969290 LDR X8, [X8]
	0x03969294 MOV X0, X8
	0x03969298 BL 0x1C16F10
	0x0396929C MOV X1, X26
	0x039692A0 MOV X2, X31
	0x039692A4 MOV X25, X0
	0x039692A8 BL 0x3943870
	0x039692AC CBZ X25, 0x39694D4
	0x039692B0 LDR V0, [X31 + 0xC]
	0x039692B4 FMUL S1, S10, S10
	0x039692B8 FMUL S0, S0, S0
	0x039692BC FADD S0, S1, S0
	0x039692C0 FMUL S1, S11, S11
	0x039692C4 FADD S9, S1, S0
	0x039692C8 MOV X0, X25
	0x039692CC MOV X1, X31
	0x039692D0 BL 0x3943898
	0x039692D4 TBZ X0, 0x0, 0x396941C
	0x039692D8 MOV X0, X25
	0x039692DC MOV X1, X31
	0x039692E0 BL 0x39438DC
	0x039692E4 MOV X26, X0
	0x039692E8 CBZ X0, 0x39694A4
	0x039692EC LDR X8, [X26 + 0x38]
	0x039692F0 CBZ X8, 0x39692C8
	0x039692F4 LDR X1, [X8 + 0x20]
	0x039692F8 LDR X2, [X29]
	0x039692FC MOV X0, X21
	0x03969300 BL 0x2DBE4B0
	0x03969304 TBNZ X0, 0x0, 0x39692C8
	0x03969308 LDR X8, [X26 + 0x38]
	0x0396930C FCMP S8, 0x0
	0x03969310 B.LE 0x3969400
	0x03969314 CBZ X8, 0x39694B4
	0x03969318 LDR X1, [X8 + 0x20]
	0x0396931C MOV X0, X19
	0x03969320 MOV X2, X31
	0x03969324 BL 0x390987C
	0x03969328 LDRB W8, [X28 + 0xA24]
	0x0396932C MOV V13.16B, V0.16B
	0x03969330 MOV V14.16B, V1.16B
	0x03969334 MOV V12.16B, V2.16B
	0x03969338 CBNZ W8, 0x396934C
	0x0396933C MOV X0, X24
	0x03969340 BL 0x1C16CF4
	0x03969344 MOVZ W8, 0x1
	0x03969348 STRB W8, [X28 + 0xA24]
	0x0396934C LDR X0, [X24]
	0x03969350 LDR W8, [X0 + 0xE0]
	0x03969354 CBNZ W8, 0x396935C
	0x03969358 BL 0x1C16DFC
	0x0396935C FMUL S0, S13, S13
	0x03969360 FMUL S1, S14, S14
	0x03969364 FADD S0, S0, S1
	0x03969368 FMUL S1, S12, S12
	0x0396936C FADD S0, S1, S0
	0x03969370 FMUL S0, S9, S0
	0x03969374 FSQRT S0, S0
	0x03969378 FCMP S0, S15
	0x0396937C FMOV S1, W31
	0x03969380 B.MI 0x39693D8
	0x03969384 LDR V1, [X31 + 0xC]
	0x03969388 LDR X0, [X24]
	0x0396938C FMUL S2, S10, S14
	0x03969390 FMUL S1, S1, S13
	0x03969394 FADD S1, S1, S2
	0x03969398 FMUL S2, S11, S12
	0x0396939C FADD S1, S2, S1
	0x039693A0 LDR W8, [X0 + 0xE0]
	0x039693A4 FDIV S0, S1, S0
	0x039693A8 FMOV S1, 1
	0x039693AC FMOV S2, -1
	0x039693B0 FMIN S1, S0, S1
	0x039693B4 FCMP S0, S2
	0x039693B8 FCSEL S12, S1, S2, PL
	0x039693BC CBNZ W8, 0x39693C4
	0x039693C0 BL 0x1C16DFC
	0x039693C4 FCVT S0, S12
	0x039693C8 BL 0x3EB1B80

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xA79000
	013 Move X23, 0x7E6000
	014 Move W8, [X21+2517]
	015 Move X23, [X23+2824]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0x7E7000
	024 Move X0, [X0+808]
	025 Call 0x1C17CF4
	026 Move X0, 0x7E7000
	027 Move X0, [X0+1000]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E5000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move X0, 0x7E7000
	033 Move X0, [X0+1072]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E7000
	036 Move X0, [X0+2384]
	037 Call 0x1C17CF4
	038 Move X0, 0x7E5000
	039 Move X0, [X0+3272]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E7000
	042 Move X0, [X0+2392]
	043 Call 0x1C17CF4
	044 Move X0, 0x7E5000
	045 Move X0, [X0+3280]
	046 Call 0x1C17CF4
	047 Move X0, 0x7E6000
	048 Move X0, [X0+2808]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E6000
	051 Move X0, [X0+2816]
	052 Call 0x1C17CF4
	053 Move X0, 0x7E7000
	054 Move X0, [X0+3080]
	055 Call 0x1C17CF4
	056 Move X0, 0x7E7000
	057 Move X0, [X0+2920]
	058 Call 0x1C17CF4
	059 Move X0, 0x7E6000
	060 Move X0, [X0+2824]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2517], W8
	064 Move X0, [X23]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X22
	070 Move W1, W31
	071 Move X2, X31
	072 Call WingedEdge.GetWingedEdges, X0, X1
	073 Compare X22, 0
	074 JumpIfEqual {256}
	075 Move X23, 0x7E5000
	076 Move X24, 0x7E7000
	077 Move X25, 0x7E5000
	078 Move X23, [X23+3280]
	079 Move X24, [X24+2392]
	080 Move X25, [X25+3272]
	081 Move X21, X0
	082 Move X0, X22
	083 Move X1, X31
	084 Call ProBuilderMesh.get_sharedVertexLookup, X0
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X31
	088 Call EdgeLookup.GetEdgeLookup, X0, X1
	089 Move X8, [X23]
	090 Move X20, X0
	091 Move X0, X8
	092 Call 0x1C17F10
	093 Move X2, [X24]
	094 Move X1, X20
	095 Move X22, X0
	096 Call HashSet`1<EdgeLookup>..ctor, X0, X1
	097 Move X0, [X23]
	098 Call 0x1C17F10
	099 Move X1, [X25]
	100 Move X20, X0
	101 Call HashSet`1<EdgeLookup>..ctor, X0
	102 Compare X21, 0
	103 JumpIfEqual {256}
	104 Move W8, [X21+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X26, 0x7E6000
	107 Move X27, 0x7E7000
	108 Move X28, 0x7E7000
	109 Move X26, [X26+2816]
	110 Move X27, [X27+2384]
	111 Move X28, [X28+808]
	112 Move W23, W31
	113 Move X2, [X26]
	114 Move X0, X21
	115 Move W1, W23
	116 Call List`1<Object>.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {256}
	119 Compare X20, 0
	120 JumpIfEqual {256}
	121 Move X1, [X0+16]
	122 Move X2, [X0+24]
	123 Move X3, [X27]
	124 Move X0, X20
	125 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {195}
	130 Move X2, [X26]
	131 Move X0, X21
	132 Move W1, W23
	133 Call List`1<Object>.get_Item, X0, X1
	134 Compare X0, 0
	135 JumpIfEqual {256}
	136 Compare X22, 0
	137 JumpIfEqual {256}
	138 Move X1, [X0+16]
	139 Move X2, [X0+24]
	140 Move X3, [X27]
	141 Move X0, X22
	142 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {195}
	147 Move X2, [X26]
	148 Move X0, X21
	149 Move W1, W23
	150 Call List`1<Object>.get_Item, X0, X1
	151 Move X2, [X26]
	152 Move X24, X0
	153 Move X0, X21
	154 Move W1, W23
	155 Call List`1<Object>.get_Item, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {256}
	158 Move X8, [X28]
	159 Move W25, [X0+28]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X24
	166 Move W1, W25
	167 Move X2, X20
	168 Call ElementSelection.GetEdgeLoopInternal, X0, X1, X2
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {195}
	173 Move X2, [X26]
	174 Move X0, X21
	175 Move W1, W23
	176 Call List`1<Object>.get_Item, X0, X1
	177 Move X2, [X26]
	178 Move X24, X0
	179 Move X0, X21
	180 Move W1, W23
	181 Call List`1<Object>.get_Item, X0, X1
	182 Compare X0, 0
	183 JumpIfEqual {256}
	184 Move X8, [X28]
	185 Move W25, [X0+24]
	186 Move W9, [X8+224]
	187 Compare W9, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Move X0, X24
	192 Move W1, W25
	193 Move X2, X20
	194 Call ElementSelection.GetEdgeLoopInternal, X0, X1, X2
	195 Move W8, [X21+24]
	196 Add W23, W23, 1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X23, 0x7E7000
	199 Move X23, [X23+2920]
	200 Move X0, [X23]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X23]
	206 Move X8, [X0+184]
	207 Move X25, 0x7E7000
	208 Move X24, 0x7E5000
	209 Move X21, [X8+64]
	210 Move X25, [X25+1000]
	211 Move X24, [X24+3392]
	212 Compare X21, 0
	213 JumpIfNotEqual {235}
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X23]
	219 Move X9, 0x7E7000
	220 Move X8, [X0+184]
	221 Move X9, [X9+1072]
	222 Move X22, [X8]
	223 Move X0, [X9]
	224 Call 0x1C17F10
	225 Move X8, 0x7E7000
	226 Move X8, [X8+3080]
	227 Move X1, X22
	228 Move X3, X31
	229 Move X21, X0
	230 Move X2, [X8]
	231 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	232 Move X8, [X23]
	233 Move X8, [X8+184]
	234 Move [X8+64], X21
	235 Move X2, [X25]
	236 Move X0, X20
	237 Move X1, X21
	238 Call Enumerable.Select, X0, X1
	239 Move X1, [X24]
	240 Call Enumerable.ToArray, X0
	241 Move X8, X0
	242 Move [X19], X8
	243 Move X20, [X31+80]
	244 Move X19, [X31+88]
	245 Move X22, [X31+64]
	246 Move X21, [X31+72]
	247 Move X24, [X31+48]
	248 Move X23, [X31+56]
	249 Move X26, [X31+32]
	250 Move X25, [X31+40]
	251 Move X28, [X31+16]
	252 Move X27, [X31+24]
	253 Move W0, 1
	254 Move X30, [X31+96]
	255 Return X0
	256 Call 0x1C17F20

Method: System.Boolean GetEdgeLoopIterative(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, out UnityEngine.ProBuilder.Edge[] loop)

Disassembly:
	0x039695F4 STR X30, [X31 - 0x30]!
	0x039695F8 STP X22, X21, [X31 + 0x10]
	0x039695FC STP X20, X19, [X31 + 0x20]
	0x03969600 ADRP X22, 0xA78000
	0x03969604 ADRP X21, 0x7E6000
	0x03969608 LDRB W8, [X22 + 0x9DC]
	0x0396960C LDR X21, [X21 + 0x328]
	0x03969610 MOV X19, X1
	0x03969614 MOV X20, X0
	0x03969618 TBNZ X8, 0x0, 0x3969630
	0x0396961C ADRP X0, 0x7E6000
	0x03969620 LDR X0, [X0 + 0x328]
	0x03969624 BL 0x1C16CF4
	0x03969628 MOVZ W8, 0x1
	0x0396962C STRB W8, [X22 + 0x9DC]
	0x03969630 LDR X0, [X21]
	0x03969634 LDR W8, [X0 + 0xE0]
	0x03969638 CBNZ W8, 0x3969644
	0x0396963C BL 0x1C16DFC
	0x03969640 LDR X0, [X21]
	0x03969644 LDR X8, [X0 + 0xB8]
	0x03969648 MOV X1, X20
	0x0396964C MOV X2, X19
	0x03969650 LDP X20, X19, [X31 + 0x20]
	0x03969654 LDP S0, S1, [X8]
	0x03969658 LDR V2, [X8 + 0x8]
	0x0396965C LDP X22, X21, [X31 + 0x10]
	0x03969660 FMOV S3, -1
	0x03969664 MOV X0, X31
	0x03969668 LDR X30, [X31], #0x30
	0x0396966C B 0x3969670
	0x03969670 SUB X31, X31, 0xB0
	0x03969674 STP D15, D14, [X31 + 0x10]
	0x03969678 STP D13, D12, [X31 + 0x20]
	0x0396967C STP D11, D10, [X31 + 0x30]
	0x03969680 STP D9, D8, [X31 + 0x40]
	0x03969684 STP X29, X30, [X31 + 0x50]
	0x03969688 STP X28, X27, [X31 + 0x60]
	0x0396968C STP X26, X25, [X31 + 0x70]
	0x03969690 STP X24, X23, [X31 + 0x80]
	0x03969694 STP X22, X21, [X31 + 0x90]
	0x03969698 STP X20, X19, [X31 + 0xA0]
	0x0396969C ADRP X22, 0xA78000
	0x039696A0 LDRB W8, [X22 + 0x9DD]
	0x039696A4 MOV X19, X2
	0x039696A8 MOV V8.16B, V3.16B
	0x039696AC MOV V10.16B, V2.16B
	0x039696B0 MOV V11.16B, V1.16B
	0x039696B4 MOV V15.16B, V0.16B
	0x039696B8 MOV X20, X1
	0x039696BC MOV X21, X0
	0x039696C0 TBNZ X8, 0x0, 0x39696F0
	0x039696C4 ADRP X0, 0x7E6000
	0x039696C8 LDR X0, [X0 + 0x328]
	0x039696CC BL 0x1C16CF4
	0x039696D0 ADRP X0, 0x7E5000
	0x039696D4 LDR X0, [X0 + 0x888]
	0x039696D8 BL 0x1C16CF4
	0x039696DC ADRP X0, 0x7E4000
	0x039696E0 LDR X0, [X0 + 0xE28]
	0x039696E4 BL 0x1C16CF4
	0x039696E8 MOVZ W8, 0x1
	0x039696EC STRB W8, [X22 + 0x9DD]
	0x039696F0 ADRP X24, 0x7E4000
	0x039696F4 ADRP X25, 0x7E5000
	0x039696F8 ADRP X26, 0x7E6000
	0x039696FC FMUL S0, S15, S15
	0x03969700 FMUL S1, S11, S11
	0x03969704 ADRP X22, 0x78A000
	0x03969708 ADRP X8, 0xFFFFFFFFFD180000
	0x0396970C ADRP X9, 0xFFFFFFFFFD181000
	0x03969710 LDR X24, [X24 + 0xE28]
	0x03969714 LDR X25, [X25 + 0x888]
	0x03969718 LDR X26, [X26 + 0x328]
	0x0396971C LDR X22, [X22 + 0x5A8]
	0x03969720 FADD S0, S0, S1
	0x03969724 LDR V9, [X8 + 0xFE8]
	0x03969728 LDR V1, [X9 + 0x448]
	0x0396972C FMUL S2, S10, S10
	0x03969730 ADRP X27, 0xA6F000
	0x03969734 FADD S0, S2, S0
	0x03969738 MOVZ W28, 0x1
	0x0396973C MOV X29, X20
	0x03969740 STP S1, S8, [X31 + 0x4]
	0x03969744 STR S0, [X31 + 0xC]
	0x03969748 CBZ X29, 0x3969914
	0x0396974C LDR X23, [X29 + 0x38]
	0x03969750 CBZ X23, 0x39698D8
	0x03969754 CBZ X19, 0x3969914
	0x03969758 LDR X1, [X23 + 0x20]
	0x0396975C LDR X2, [X24]
	0x03969760 MOV X0, X19
	0x03969764 BL 0x2DBE4B0
	0x03969768 TBNZ X0, 0x0, 0x39698D8
	0x0396976C LDR X1, [X23 + 0x20]
	0x03969770 FCMP S8, 0x0
	0x03969774 B.LE 0x3969898
	0x03969778 MOV X0, X21
	0x0396977C MOV X2, X31
	0x03969780 BL 0x390987C
	0x03969784 LDRB W8, [X27 + 0xA24]
	0x03969788 MOV V12.16B, V0.16B
	0x0396978C MOV V13.16B, V1.16B
	0x03969790 MOV V14.16B, V2.16B
	0x03969794 CBNZ W8, 0x39697A4
	0x03969798 MOV X0, X22
	0x0396979C BL 0x1C16CF4
	0x039697A0 STRB W28, [X27 + 0xA24]
	0x039697A4 LDR X0, [X22]
	0x039697A8 LDR W8, [X0 + 0xE0]
	0x039697AC CBNZ W8, 0x39697B4
	0x039697B0 BL 0x1C16DFC
	0x039697B4 FMUL S0, S12, S12
	0x039697B8 FMUL S1, S13, S13
	0x039697BC FADD S0, S0, S1
	0x039697C0 FMUL S1, S14, S14
	0x039697C4 FADD S0, S1, S0
	0x039697C8 LDR V1, [X31 + 0xC]
	0x039697CC FMUL S0, S1, S0
	0x039697D0 FSQRT S0, S0
	0x039697D4 FCMP S0, S9
	0x039697D8 FMOV S1, W31
	0x039697DC B.MI 0x3969854
	0x039697E0 LDR X0, [X22]
	0x039697E4 FMUL S1, S15, S12
	0x039697E8 FMUL S2, S11, S13
	0x039697EC FADD S1, S1, S2
	0x039697F0 FMUL S2, S10, S14
	0x039697F4 FADD S1, S2, S1
	0x039697F8 LDR W8, [X0 + 0xE0]
	0x039697FC FDIV S0, S1, S0
	0x03969800 FMOV S1, 1
	0x03969804 FMOV S2, -1
	0x03969808 FMIN S1, S0, S1
	0x0396980C FCMP S0, S2
	0x03969810 MOV V8.16B, V9.16B
	0x03969814 MOV V9.16B, V15.16B
	0x03969818 MOV V15.16B, V11.16B
	0x0396981C MOV V11.16B, V10.16B
	0x03969820 FCSEL S10, S1, S2, PL
	0x03969824 CBNZ W8, 0x396982C
	0x03969828 BL 0x1C16DFC
	0x0396982C FCVT S0, S10
	0x03969830 BL 0x3EB1B80
	0x03969834 LDR V1, [X31 + 0x4]
	0x03969838 MOV V10.16B, V11.16B
	0x0396983C MOV V11.16B, V15.16B
	0x03969840 MOV V15.16B, V9.16B
	0x03969844 MOV V9.16B, V8.16B
	0x03969848 LDR V8, [X31 + 0x8]
	0x00000000 INVALID
	0x03969850 FMUL S1, S0, S1
	0x03969854 FCMP S1, S8
	0x03969858 B.PL 0x39698D8
	0x0396985C LDR X1, [X23 + 0x20]
	0x03969860 LDR X2, [X25]
	0x03969864 MOV X0, X19
	0x03969868 BL 0x2DBEF30
	0x0396986C TBZ X0, 0x0, 0x39698D8
	0x03969870 LDR X0, [X26]
	0x03969874 LDR W8, [X0 + 0xE0]
	0x03969878 CBNZ W8, 0x3969880
	0x0396987C BL 0x1C16DFC
	0x03969880 MOV X0, X21
	0x03969884 MOV X1, X23
	0x03969888 MOV V0.16B, V12.16B
	0x0396988C MOV V1.16B, V13.16B
	0x03969890 MOV V2.16B, V14.16B
	0x03969894 B 0x39698CC
	0x03969898 LDR X2, [X25]
	0x0396989C MOV X0, X19
	0x039698A0 BL 0x2DBEF30
	0x039698A4 TBZ X0, 0x0, 0x39698D8
	0x039698A8 LDR X0, [X26]
	0x039698AC LDR W8, [X0 + 0xE0]
	0x039698B0 CBNZ W8, 0x39698B8
	0x039698B4 BL 0x1C16DFC
	0x039698B8 MOV X0, X21
	0x039698BC MOV X1, X23
	0x039698C0 MOV V0.16B, V15.16B
	0x039698C4 MOV V1.16B, V11.16B
	0x039698C8 MOV V2.16B, V10.16B
	0x039698CC MOV V3.16B, V8.16B
	0x039698D0 MOV X2, X19
	0x039698D4 BL 0x3969670
	0x039698D8 LDR X29, [X29 + 0x28]
	0x039698DC CMP X29, X20
	0x039698E0 B.NE 0x3969748

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xA79000
	013 Move X23, 0x7E6000
	014 Move W8, [X21+2518]
	015 Move X23, [X23+2824]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {64}
	023 Move X0, 0x7E7000
	024 Move X0, [X0+808]
	025 Call 0x1C17CF4
	026 Move X0, 0x7E7000
	027 Move X0, [X0+1000]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E5000
	030 Move X0, [X0+3392]
	031 Call 0x1C17CF4
	032 Move X0, 0x7E7000
	033 Move X0, [X0+1072]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E7000
	036 Move X0, [X0+2384]
	037 Call 0x1C17CF4
	038 Move X0, 0x7E5000
	039 Move X0, [X0+3272]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E7000
	042 Move X0, [X0+2392]
	043 Call 0x1C17CF4
	044 Move X0, 0x7E5000
	045 Move X0, [X0+3280]
	046 Call 0x1C17CF4
	047 Move X0, 0x7E6000
	048 Move X0, [X0+2808]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E6000
	051 Move X0, [X0+2816]
	052 Call 0x1C17CF4
	053 Move X0, 0x7E7000
	054 Move X0, [X0+3112]
	055 Call 0x1C17CF4
	056 Move X0, 0x7E7000
	057 Move X0, [X0+2920]
	058 Call 0x1C17CF4
	059 Move X0, 0x7E6000
	060 Move X0, [X0+2824]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2518], W8
	064 Move X0, [X23]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X22
	070 Move W1, W31
	071 Move X2, X31
	072 Call WingedEdge.GetWingedEdges, X0, X1
	073 Compare X22, 0
	074 JumpIfEqual {213}
	075 Move X23, 0x7E5000
	076 Move X24, 0x7E7000
	077 Move X25, 0x7E5000
	078 Move X23, [X23+3280]
	079 Move X24, [X24+2392]
	080 Move X25, [X25+3272]
	081 Move X21, X0
	082 Move X0, X22
	083 Move X1, X31
	084 Call ProBuilderMesh.get_sharedVertexLookup, X0
	085 Move X1, X0
	086 Move X0, X20
	087 Move X2, X31
	088 Call EdgeLookup.GetEdgeLookup, X0, X1
	089 Move X8, [X23]
	090 Move X20, X0
	091 Move X0, X8
	092 Call 0x1C17F10
	093 Move X2, [X24]
	094 Move X1, X20
	095 Move X22, X0
	096 Call HashSet`1<EdgeLookup>..ctor, X0, X1
	097 Move X0, [X23]
	098 Call 0x1C17F10
	099 Move X1, [X25]
	100 Move X20, X0
	101 Call HashSet`1<EdgeLookup>..ctor, X0
	102 Compare X21, 0
	103 JumpIfEqual {213}
	104 Move W8, [X21+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X26, 0x7E6000
	107 Move X27, 0x7E7000
	108 Move X28, 0x7E7000
	109 Move X26, [X26+2816]
	110 Move X27, [X27+2384]
	111 Move X28, [X28+808]
	112 Move W23, W31
	113 Move X2, [X26]
	114 Move X0, X21
	115 Move W1, W23
	116 Call List`1<Object>.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {213}
	119 Compare X22, 0
	120 JumpIfEqual {213}
	121 Move X1, [X0+16]
	122 Move X2, [X0+24]
	123 Move X3, [X27]
	124 Move X0, X22
	125 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {152}
	130 Move X2, [X26]
	131 Move X0, X21
	132 Move W1, W23
	133 Call List`1<Object>.get_Item, X0, X1
	134 Move X2, [X26]
	135 Move X24, X0
	136 Move X0, X21
	137 Move W1, W23
	138 Call List`1<Object>.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {213}
	141 Move X8, [X28]
	142 Move X25, [X0+24]
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X0, X24
	149 Move X1, X25
	150 Move X2, X20
	151 Call ElementSelection.GetEdgeLoopInternalIterative, X0, X1, X2
	152 Move W8, [X21+24]
	153 Add W23, W23, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X23, 0x7E7000
	156 Move X23, [X23+2920]
	157 Move X0, [X23]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1C17DFC
	162 Move X0, [X23]
	163 Move X8, [X0+184]
	164 Move X25, 0x7E7000
	165 Move X24, 0x7E5000
	166 Move X21, [X8+72]
	167 Move X25, [X25+1000]
	168 Move X24, [X24+3392]
	169 Compare X21, 0
	170 JumpIfNotEqual {192}
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X23]
	176 Move X9, 0x7E7000
	177 Move X8, [X0+184]
	178 Move X9, [X9+1072]
	179 Move X22, [X8]
	180 Move X0, [X9]
	181 Call 0x1C17F10
	182 Move X8, 0x7E7000
	183 Move X8, [X8+3112]
	184 Move X1, X22
	185 Move X3, X31
	186 Move X21, X0
	187 Move X2, [X8]
	188 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	189 Move X8, [X23]
	190 Move X8, [X8+184]
	191 Move [X8+72], X21
	192 Move X2, [X25]
	193 Move X0, X20
	194 Move X1, X21
	195 Call Enumerable.Select, X0, X1
	196 Move X1, [X24]
	197 Call Enumerable.ToArray, X0
	198 Move X8, X0
	199 Move [X19], X8
	200 Move X20, [X31+80]
	201 Move X19, [X31+88]
	202 Move X22, [X31+64]
	203 Move X21, [X31+72]
	204 Move X24, [X31+48]
	205 Move X23, [X31+56]
	206 Move X26, [X31+32]
	207 Move X25, [X31+40]
	208 Move X28, [X31+16]
	209 Move X27, [X31+24]
	210 Move W0, 1
	211 Move X30, [X31+96]
	212 Return X0
	213 Call 0x1C17F20

Method: System.Boolean GetEdgeLoopInternal(UnityEngine.ProBuilder.WingedEdge start, System.Int32 startIndex, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.EdgeLookup> used)

Disassembly:
	0x039693CC LDR V1, [X31 + 0x8]
	0x00000000 INVALID
	0x039693D4 FMUL S1, S0, S1
	0x039693D8 FCMP S1, S8
	0x039693DC B.PL 0x39692C8
	0x039693E0 LDR X8, [X26 + 0x38]
	0x039693E4 CBZ X8, 0x39694CC
	0x039693E8 CBZ X22, 0x39694C4
	0x039693EC LDR X1, [X8 + 0x20]
	0x039693F0 LDR X2, [X27]
	0x039693F4 MOV X0, X22
	0x039693F8 BL 0x2DBEF30
	0x039693FC B 0x39692C8
	0x03969400 CBZ X8, 0x39694BC
	0x03969404 CBZ X22, 0x39694AC
	0x03969408 LDR X1, [X8 + 0x20]
	0x0396940C LDR X2, [X27]
	0x03969410 MOV X0, X22
	0x03969414 BL 0x2DBEF30
	0x03969418 B 0x39692C8
	0x0396941C MOV X26, X31
	0x03969420 CBZ X25, 0x3969484
	0x03969424 LDR X8, [X25]
	0x03969428 ADRP X10, 0x78A000
	0x0396942C LDRH W9, [X8 + 0x12E]
	0x03969430 LDR X10, [X10 + 0xE00]
	0x03969434 LDR X1, [X10]
	0x03969438 CBZ X9, 0x396945C
	0x0396943C LDR X10, [X8 + 0xB0]
	0x03969440 ADD X10, X10, 0x8
	0x03969444 LDUR X11, [X10 - 0x8]
	0x03969448 CMP X11, X1
	0x0396944C B.EQ 0x396946C
	0x03969450 SUBS X9, X9, 0x1
	0x03969454 ADD X10, X10, 0x10
	0x03969458 B.NE 0x3969444
	0x0396945C MOV X0, X25
	0x03969460 MOV W2, W31
	0x03969464 BL 0x1C5C788
	0x03969468 B 0x3969478
	0x0396946C LDRSW X9, [X10]
	0x03969470 ADD X8, X8, X9, 0x4, LSL
	0x03969474 ADD X0, X8, 0x138
	0x03969478 LDP X8, X1, [X0]
	0x0396947C MOV X0, X25
	0x03969480 BLR X8
	0x03969484 ADRP X25, 0x7E5000
	0x03969488 LDR X25, [X25 + 0xB00]
	0x0396948C CBNZ X26, 0x3969560
	0x03969490 LDR W8, [X20 + 0x18]
	0x03969494 ADD W23, W23, 0x1
	0x03969498 CMP W23, W8
	0x0396949C B.LT 0x3969210
	0x039694A0 B 0x3969528
	0x039694A4 BL 0x1C16F20
	0x039694A8 B 0x3969574
	0x039694AC BL 0x1C16F20
	0x039694B0 B 0x3969574
	0x039694B4 BL 0x1C16F20
	0x039694B8 B 0x3969574
	0x039694BC BL 0x1C16F20
	0x039694C0 B 0x3969574
	0x039694C4 BL 0x1C16F20
	0x039694C8 B 0x3969574
	0x039694CC BL 0x1C16F20
	0x039694D0 B 0x3969574
	0x039694D4 BL 0x1C16F20
	0x039694D8 B 0x3969574
	0x039694DC B 0x3969510
	0x039694E0 B 0x3969510
	0x039694E4 B 0x3969510
	0x039694E8 B 0x3969510
	0x039694EC B 0x3969510
	0x039694F0 B 0x3969510
	0x039694F4 B 0x3969510
	0x039694F8 B 0x3969510
	0x039694FC B 0x3969510
	0x03969500 B 0x3969510
	0x03969504 B 0x3969510
	0x03969508 B 0x3969510
	0x0396950C B 0x3969510
	0x03969510 CMP W1, 0x1
	0x03969514 B.NE 0x3969568
	0x03969518 BL 0x3EB1AD0
	0x0396951C LDR X26, [X0]
	0x03969520 BL 0x3EB1AE0
	0x03969524 B 0x3969420
	0x03969528 MOV X0, X22
	0x0396952C LDP X20, X19, [X31 + 0xA0]
	0x03969530 LDP X22, X21, [X31 + 0x90]
	0x03969534 LDP X24, X23, [X31 + 0x80]
	0x03969538 LDP X26, X25, [X31 + 0x70]
	0x0396953C LDP X28, X27, [X31 + 0x60]
	0x03969540 LDP X29, X30, [X31 + 0x50]
	0x03969544 LDP D9, D8, [X31 + 0x40]
	0x03969548 LDP D11, D10, [X31 + 0x30]
	0x0396954C LDP D13, D12, [X31 + 0x20]
	0x03969550 LDP D15, D14, [X31 + 0x10]
	0x03969554 ADD X31, X31, 0xB0
	0x03969558 RET
	0x0396955C BL 0x1C16F20
	0x03969560 MOV X0, X26
	0x03969564 BL 0x1C16F18
	0x03969568 MOV X19, X0
	0x0396956C MOV X26, X31
	0x03969570 B 0x3969578
	0x03969574 MOV X19, X0
	0x03969578 CBZ X25, 0x39695DC
	0x0396957C LDR X8, [X25]
	0x03969580 ADRP X10, 0x78A000
	0x03969584 LDRH W9, [X8 + 0x12E]
	0x03969588 LDR X10, [X10 + 0xE00]
	0x0396958C LDR X1, [X10]
	0x03969590 CBZ X9, 0x39695B4
	0x03969594 LDR X10, [X8 + 0xB0]
	0x03969598 ADD X10, X10, 0x8
	0x0396959C LDUR X11, [X10 - 0x8]
	0x039695A0 CMP X11, X1
	0x039695A4 B.EQ 0x39695C4
	0x039695A8 SUBS X9, X9, 0x1
	0x039695AC ADD X10, X10, 0x10
	0x039695B0 B.NE 0x396959C
	0x039695B4 MOV X0, X25
	0x039695B8 MOV W2, W31
	0x039695BC BL 0x1C5C788
	0x039695C0 B 0x39695D0
	0x039695C4 LDRSW X9, [X10]
	0x039695C8 ADD X8, X8, X9, 0x4, LSL
	0x039695CC ADD X0, X8, 0x138
	0x039695D0 LDP X8, X1, [X0]
	0x039695D4 MOV X0, X25
	0x039695D8 BLR X8
	0x039695DC CBNZ X26, 0x39695E8
	0x039695E0 MOV X0, X19
	0x039695E4 BL 0x1D2C690
	0x039695E8 MOV X0, X26
	0x039695EC BL 0x1C16F18
	0x039695F0 BL 0x1990590

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA79000
	014 Move W8, [X22+2519]
	015 Move X19, X2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x7E7000
	023 Move X0, [X0+3088]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E7000
	026 Move X0, [X0+808]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E7000
	029 Move X0, [X0+3096]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E7000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E5000
	035 Move X0, [X0+3264]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E7000
	038 Move X0, [X0+2384]
	039 Call 0x1C17CF4
	040 Move X0, 0x7E6000
	041 Move X0, [X0+2808]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E6000
	044 Move X0, [X0+2816]
	045 Call 0x1C17CF4
	046 Move X0, 0x7E7000
	047 Move X0, [X0+3104]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E7000
	050 Move X0, [X0+2920]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+2519], W8
	054 Move X23, 0x7E5000
	055 Move X25, 0x7E7000
	056 Move X26, 0x7E7000
	057 Move X29, 0x7E7000
	058 Move X27, 0x7E7000
	059 Move X28, 0x7E6000
	060 Move X24, 0x7E7000
	061 Move X23, [X23+3264]
	062 Move X25, [X25+808]
	063 Move X26, [X26+2920]
	064 Move X29, [X29+3088]
	065 Move X27, [X27+3096]
	066 Move X28, [X28+2816]
	067 Move X24, [X24+2384]
	068 Compare X21, 0
	069 JumpIfEqual {167}
	070 Compare X19, 0
	071 JumpIfEqual {167}
	072 Move X1, [X21+16]
	073 Move X2, [X21+24]
	074 Move X3, [X23]
	075 Move X0, X19
	076 Call HashSet`1<EdgeLookup>.Add, X0, X1
	077 Move X0, [X25]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move W2, 1
	083 Move X0, X21
	084 Move W1, W20
	085 Call ElementSelection.GetSpokes, X0, X1, X2
	086 Move X8, [X26]
	087 Move X21, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X26]
	094 Move X9, [X8+184]
	095 Move X22, [X9+80]
	096 Compare X22, 0
	097 JumpIfNotEqual {122}
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {104}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X8, [X26]
	104 Move X8, [X8+184]
	105 Move X23, [X8]
	106 Move X8, 0x7E7000
	107 Move X8, [X8+120]
	108 Move X0, [X8]
	109 Call 0x1C17F10
	110 Move X8, 0x7E7000
	111 Move X8, [X8+3104]
	112 Move X1, X23
	113 Move X3, X31
	114 Move X22, X0
	115 Move X2, [X8]
	116 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	117 Move X8, [X26]
	118 Move X23, 0x7E5000
	119 Move X8, [X8+184]
	120 Move [X8+80], X22
	121 Move X23, [X23+3264]
	122 Move X2, [X29]
	123 Move X0, X21
	124 Move X1, X22
	125 Call 0x217F4D8, X0, X1
	126 Move X1, [X27]
	127 Call Enumerable.ToList, X0
	128 Compare X0, 0
	129 JumpIfEqual {167}
	130 Move W22, [X0+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X2, [X28]
	133 Move W1, 2
	134 Call List`1<Object>.get_Item, X0, X1
	135 Compare X0, 0
	136 JumpIfEqual {167}
	137 Move X1, [X0+16]
	138 Move X2, [X0+24]
	139 Move X3, [X24]
	140 Move X21, X0
	141 Move X0, X19
	142 Move X8, X2
	143 ShiftRight X8, 32
	144 And X8, X8, 0x7FFFFFFF
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSEL not yet implemented."
	147 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {68}
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X20, [X31+80]
	154 Move X19, [X31+88]
	155 Move X22, [X31+64]
	156 Move X21, [X31+72]
	157 Move X24, [X31+48]
	158 Move X23, [X31+56]
	159 Move X26, [X31+32]
	160 Move X25, [X31+40]
	161 Move X28, [X31+16]
	162 Move X27, [X31+24]
	163 NotImplemented "Instruction CSET not yet implemented."
	164 Move X29, [X31+96]
	165 Move X30, [X31+104]
	166 Return X0
	167 Call 0x1C17F20

Method: System.Void GetEdgeLoopInternalIterative(UnityEngine.ProBuilder.WingedEdge start, UnityEngine.ProBuilder.Edge edge, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.EdgeLookup> used)

Disassembly:
	0x039698E4 LDP X20, X19, [X31 + 0xA0]
	0x039698E8 LDP X22, X21, [X31 + 0x90]
	0x039698EC LDP X24, X23, [X31 + 0x80]
	0x039698F0 LDP X26, X25, [X31 + 0x70]
	0x039698F4 LDP X28, X27, [X31 + 0x60]
	0x039698F8 LDP X29, X30, [X31 + 0x50]
	0x039698FC LDP D9, D8, [X31 + 0x40]
	0x03969900 LDP D11, D10, [X31 + 0x30]
	0x03969904 LDP D13, D12, [X31 + 0x20]
	0x03969908 LDP D15, D14, [X31 + 0x10]
	0x0396990C ADD X31, X31, 0xB0
	0x03969910 RET
	0x03969914 BL 0x1C16F20
	0x03969918 STP D11, D10, [X31 - 0x80]!
	0x0396991C STP D9, D8, [X31 + 0x10]
	0x03969920 STR X30, [X31 + 0x20]
	0x03969924 STP X28, X27, [X31 + 0x30]
	0x03969928 STP X26, X25, [X31 + 0x40]
	0x0396992C STP X24, X23, [X31 + 0x50]
	0x03969930 STP X22, X21, [X31 + 0x60]
	0x03969934 STP X20, X19, [X31 + 0x70]
	0x03969938 ADRP X21, 0xA78000
	0x0396993C ADRP X20, 0x7E5000
	0x03969940 LDRB W8, [X21 + 0x9DE]
	0x03969944 LDR X20, [X20 + 0xB08]
	0x03969948 MOV V8.16B, V0.16B
	0x0396994C MOV X22, X1
	0x03969950 MOV X19, X0
	0x03969954 TBNZ X8, 0x0, 0x39699CC
	0x03969958 ADRP X0, 0x7E6000
	0x0396995C LDR X0, [X0 + 0x328]
	0x03969960 BL 0x1C16CF4
	0x03969964 ADRP X0, 0x7E5000
	0x03969968 LDR X0, [X0 + 0x888]
	0x0396996C BL 0x1C16CF4
	0x03969970 ADRP X0, 0x7E4000
	0x03969974 LDR X0, [X0 + 0xE28]
	0x03969978 BL 0x1C16CF4
	0x0396997C ADRP X0, 0x7E5000
	0x03969980 LDR X0, [X0 + 0x890]
	0x03969984 BL 0x1C16CF4
	0x03969988 ADRP X0, 0x7E6000
	0x0396998C LDR X0, [X0 + 0x678]
	0x03969990 BL 0x1C16CF4
	0x03969994 ADRP X0, 0x7E5000
	0x03969998 LDR X0, [X0 + 0x898]
	0x0396999C BL 0x1C16CF4
	0x039699A0 ADRP X0, 0x7E5000
	0x039699A4 LDR X0, [X0 + 0xAF8]
	0x039699A8 BL 0x1C16CF4
	0x039699AC ADRP X0, 0x7E5000
	0x039699B0 LDR X0, [X0 + 0xB00]
	0x039699B4 BL 0x1C16CF4
	0x039699B8 ADRP X0, 0x7E5000
	0x039699BC LDR X0, [X0 + 0xB08]
	0x039699C0 BL 0x1C16CF4
	0x039699C4 MOVZ W8, 0x1
	0x039699C8 STRB W8, [X21 + 0x9DE]
	0x039699CC LDR X0, [X20]
	0x039699D0 ADRP X24, 0x7E5000
	0x039699D4 ADRP X21, 0x7E6000
	0x039699D8 ADRP X23, 0x7E5000
	0x039699DC LDR W8, [X0 + 0xE0]
	0x039699E0 LDR X24, [X24 + 0x898]
	0x039699E4 LDR X21, [X21 + 0x678]
	0x039699E8 LDR X23, [X23 + 0x890]
	0x039699EC CBNZ W8, 0x39699F4
	0x039699F0 BL 0x1C16DFC
	0x039699F4 MOVZ W1, 0x1
	0x039699F8 MOV X0, X19
	0x039699FC MOV X2, X31
	0x03969A00 BL 0x3942EDC
	0x03969A04 LDR X8, [X24]
	0x03969A08 MOV X20, X0
	0x03969A0C MOV X0, X8
	0x03969A10 BL 0x1C16F10
	0x03969A14 LDR X2, [X21]
	0x03969A18 MOV X1, X22
	0x03969A1C MOV X21, X0
	0x03969A20 BL 0x2DBDEEC
	0x03969A24 LDR X0, [X24]
	0x03969A28 BL 0x1C16F10
	0x03969A2C LDR X1, [X23]
	0x03969A30 MOV X22, X0
	0x03969A34 BL 0x2DBDE08
	0x03969A38 CBZ X20, 0x3969BC0
	0x03969A3C LDR W8, [X20 + 0x18]
	0x03969A40 CMP W8, 0x1
	0x03969A44 B.LT 0x3969B98
	0x03969A48 ADRP X25, 0x7E5000
	0x03969A4C ADRP X26, 0x7E4000
	0x03969A50 ADRP X27, 0x7E5000
	0x03969A54 ADRP X28, 0x7E6000
	0x03969A58 LDR X25, [X25 + 0xB00]
	0x03969A5C LDR X26, [X26 + 0xE28]
	0x03969A60 LDR X27, [X27 + 0x888]
	0x03969A64 LDR X28, [X28 + 0x328]
	0x03969A68 MOV W23, W31
	0x03969A6C LDR X2, [X25]
	0x03969A70 MOV X0, X20
	0x03969A74 MOV W1, W23
	0x03969A78 BL 0x301BCCC
	0x03969A7C CBZ X0, 0x3969BC0
	0x03969A80 CBZ X22, 0x3969BC0
	0x03969A84 LDR X1, [X0 + 0x20]
	0x03969A88 LDR X2, [X26]
	0x03969A8C MOV X0, X22
	0x03969A90 BL 0x2DBE4B0
	0x03969A94 TBNZ X0, 0x0, 0x3969B88
	0x03969A98 LDR X2, [X25]
	0x03969A9C MOV X0, X20
	0x03969AA0 MOV W1, W23
	0x03969AA4 BL 0x301BCCC
	0x03969AA8 CBZ X0, 0x3969BC0
	0x03969AAC CBZ X21, 0x3969BC0
	0x03969AB0 LDR X1, [X0 + 0x20]
	0x03969AB4 LDR X2, [X26]
	0x03969AB8 MOV X0, X21
	0x03969ABC BL 0x2DBE4B0
	0x03969AC0 TBZ X0, 0x0, 0x3969B88
	0x03969AC4 LDR X2, [X25]
	0x03969AC8 MOV X0, X20
	0x03969ACC MOV W1, W23
	0x03969AD0 BL 0x301BCCC
	0x03969AD4 CBZ X0, 0x3969BC0
	0x03969AD8 LDR X1, [X0 + 0x20]
	0x03969ADC LDR X2, [X27]
	0x03969AE0 MOV X0, X22
	0x03969AE4 BL 0x2DBEF30
	0x03969AE8 LDR X2, [X25]
	0x03969AEC MOV X0, X20
	0x03969AF0 MOV W1, W23
	0x03969AF4 BL 0x301BCCC
	0x03969AF8 FCMP S8, 0x0
	0x03969AFC MOV X24, X0
	0x03969B00 B.LE 0x3969B3C
	0x03969B04 LDR X2, [X25]
	0x03969B08 MOV X0, X20
	0x03969B0C MOV W1, W23
	0x03969B10 BL 0x301BCCC
	0x03969B14 CBZ X0, 0x3969BC0
	0x03969B18 LDR X1, [X0 + 0x20]
	0x03969B1C MOV X0, X19
	0x03969B20 MOV X2, X31
	0x03969B24 BL 0x390987C
	0x03969B28 LDR X0, [X28]
	0x03969B2C MOV V9.16B, V0.16B
	0x03969B30 MOV V10.16B, V1.16B
	0x03969B34 MOV V11.16B, V2.16B
	0x03969B38 B 0x3969B5C
	0x03969B3C LDR X0, [X28]
	0x03969B40 LDR W8, [X0 + 0xE0]
	0x03969B44 CBNZ W8, 0x3969B50
	0x03969B48 BL 0x1C16DFC
	0x03969B4C LDR X0, [X28]
	0x03969B50 LDR X8, [X0 + 0xB8]
	0x03969B54 LDP S9, S10, [X8]
	0x03969B58 LDR V11, [X8 + 0x8]
	0x03969B5C LDR W8, [X0 + 0xE0]
	0x03969B60 CBNZ W8, 0x3969B68
	0x03969B64 BL 0x1C16DFC
	0x03969B68 MOV X0, X19
	0x03969B6C MOV X1, X24
	0x03969B70 MOV V0.16B, V9.16B
	0x03969B74 MOV V1.16B, V10.16B
	0x03969B78 MOV V2.16B, V11.16B
	0x03969B7C MOV V3.16B, V8.16B
	0x03969B80 MOV X2, X22
	0x03969B84 BL 0x3969670
	0x03969B88 LDR W8, [X20 + 0x18]
	0x03969B8C ADD W23, W23, 0x1
	0x03969B90 CMP W23, W8
	0x03969B94 B.LT 0x3969A6C
	0x03969B98 MOV X0, X22
	0x03969B9C LDP X20, X19, [X31 + 0x70]
	0x03969BA0 LDP X22, X21, [X31 + 0x60]
	0x03969BA4 LDP X24, X23, [X31 + 0x50]
	0x03969BA8 LDP X26, X25, [X31 + 0x40]
	0x03969BAC LDP X28, X27, [X31 + 0x30]
	0x03969BB0 LDR X30, [X31 + 0x20]
	0x03969BB4 LDP D9, D8, [X31 + 0x10]
	0x03969BB8 LDP D11, D10, [X31], #0x80
	0x03969BBC RET
	0x03969BC0 BL 0x1C16F20
	0x03969BC4 STP X30, X27, [X31 - 0x50]!
	0x03969BC8 STP X26, X25, [X31 + 0x10]
	0x03969BCC STP X24, X23, [X31 + 0x20]
	0x03969BD0 STP X22, X21, [X31 + 0x30]
	0x03969BD4 STP X20, X19, [X31 + 0x40]
	0x03969BD8 ADRP X22, 0xA78000
	0x03969BDC ADRP X23, 0x78A000
	0x03969BE0 LDRB W8, [X22 + 0x9DF]
	0x03969BE4 LDR X23, [X23 + 0x598]
	0x03969BE8 MOV W20, W2
	0x03969BEC MOV X19, X1
	0x03969BF0 MOV X21, X0
	0x03969BF4 TBNZ X8, 0x0, 0x3969C48
	0x03969BF8 ADRP X0, 0x7E6000
	0x03969BFC LDR X0, [X0 + 0x328]
	0x03969C00 BL 0x1C16CF4
	0x03969C04 ADRP X0, 0x7E6000
	0x03969C08 LDR X0, [X0 + 0x670]
	0x03969C0C BL 0x1C16CF4
	0x03969C10 ADRP X0, 0x7E5000
	0x03969C14 LDR X0, [X0 + 0x890]
	0x03969C18 BL 0x1C16CF4
	0x03969C1C ADRP X0, 0x7E5000
	0x03969C20 LDR X0, [X0 + 0x898]
	0x03969C24 BL 0x1C16CF4
	0x03969C28 ADRP X0, 0x78A000
	0x03969C2C LDR X0, [X0 + 0x598]
	0x03969C30 BL 0x1C16CF4
	0x03969C34 ADRP X0, 0x7E5000
	0x03969C38 LDR X0, [X0 + 0xB08]
	0x03969C3C BL 0x1C16CF4
	0x03969C40 MOVZ W8, 0x1
	0x03969C44 STRB W8, [X22 + 0x9DF]
	0x03969C48 LDR X0, [X23]
	0x03969C4C LDR W8, [X0 + 0xE0]
	0x03969C50 CBNZ W8, 0x3969C58
	0x03969C54 BL 0x1C16DFC
	0x03969C58 MOV X0, X21
	0x03969C5C MOV X1, X31
	0x03969C60 MOV X2, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA79000
	014 Move W8, [X22+2520]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0x7E7000
	023 Move X0, [X0+3088]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E7000
	026 Move X0, [X0+808]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E7000
	029 Move X0, [X0+3096]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E7000
	032 Move X0, [X0+120]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E5000
	035 Move X0, [X0+3264]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E7000
	038 Move X0, [X0+2384]
	039 Call 0x1C17CF4
	040 Move X0, 0x7E6000
	041 Move X0, [X0+2808]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E6000
	044 Move X0, [X0+2816]
	045 Call 0x1C17CF4
	046 Move X0, 0x7E7000
	047 Move X0, [X0+3120]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E7000
	050 Move X0, [X0+3128]
	051 Call 0x1C17CF4
	052 Move X0, 0x7E7000
	053 Move X0, [X0+2920]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+2520], W8
	057 Compare X20, 0
	058 JumpIfEqual {275}
	059 Compare X19, 0
	060 JumpIfEqual {275}
	061 Move X25, 0x7E7000
	062 Move X25, [X25+2384]
	063 Move X1, [X20+16]
	064 Move X2, [X20+24]
	065 Move X29, 0x7E7000
	066 Move X0, X19
	067 Move X3, [X25]
	068 Move X29, [X29+808]
	069 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {81}
	074 Move X8, 0x7E5000
	075 Move X1, [X20+16]
	076 Move X2, [X20+24]
	077 Move X8, [X8+3264]
	078 Move X0, X19
	079 Move X3, [X8]
	080 Call HashSet`1<EdgeLookup>.Add, X0, X1
	081 Move X0, [X29]
	082 Move X26, 0x7E7000
	083 Move W8, [X0+224]
	084 Move X26, [X26+2920]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move W2, 1
	089 Move X0, X20
	090 Move W1, W21
	091 Call ElementSelection.GetSpokes, X0, X1, X2
	092 Move X8, [X26]
	093 Move X23, X0
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {100}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move X8, [X26]
	100 Move X9, [X8+184]
	101 Move X28, 0x7E7000
	102 Move X27, 0x7E7000
	103 Move X22, X21
	104 ShiftRight X22, 32
	105 And X22, X22, 0x7FFFFFFF
	106 Move X24, [X9+88]
	107 Move X28, [X28+3088]
	108 Move X27, [X27+3096]
	109 Compare X24, 0
	110 JumpIfNotEqual {133}
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {117}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, [X26]
	117 Move X9, 0x7E7000
	118 Move X8, [X8+184]
	119 Move X9, [X9+120]
	120 Move X21, [X8]
	121 Move X0, [X9]
	122 Call 0x1C17F10
	123 Move X8, 0x7E7000
	124 Move X8, [X8+3120]
	125 Move X1, X21
	126 Move X3, X31
	127 Move X24, X0
	128 Move X2, [X8]
	129 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	130 Move X8, [X26]
	131 Move X8, [X8+184]
	132 Move [X8+88], X24
	133 Move X2, [X28]
	134 Move X0, X23
	135 Move X1, X24
	136 Call 0x217F4D8, X0, X1
	137 Move X1, [X27]
	138 Call Enumerable.ToList, X0
	139 Move X8, [X29]
	140 Move X21, X0
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move W2, 1
	147 Move X0, X20
	148 Move W1, W22
	149 Call ElementSelection.GetSpokes, X0, X1, X2
	150 Move X8, [X26]
	151 Move X20, X0
	152 Move W9, [X8+224]
	153 Compare W9, 0
	154 JumpIfNotEqual {158}
	155 Move X0, X8
	156 Call 0x1C17DFC
	157 Move X8, [X26]
	158 Move X9, [X8+184]
	159 Move X22, [X9+96]
	160 Compare X22, 0
	161 JumpIfNotEqual {184}
	162 Move W9, [X8+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {168}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move X8, [X26]
	168 Move X9, 0x7E7000
	169 Move X8, [X8+184]
	170 Move X9, [X9+120]
	171 Move X23, [X8]
	172 Move X0, [X9]
	173 Call 0x1C17F10
	174 Move X8, 0x7E7000
	175 Move X8, [X8+3128]
	176 Move X1, X23
	177 Move X3, X31
	178 Move X22, X0
	179 Move X2, [X8]
	180 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	181 Move X8, [X26]
	182 Move X8, [X8+184]
	183 Move [X8+96], X22
	184 Move X2, [X28]
	185 Move X0, X20
	186 Move X1, X22
	187 Call 0x217F4D8, X0, X1
	188 Move X1, [X27]
	189 Call Enumerable.ToList, X0
	190 Compare X21, 0
	191 JumpIfEqual {275}
	192 Move W8, [X21+24]
	193 Move X20, X0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, 0x7E6000
	196 Move X8, [X8+2816]
	197 Move W1, 2
	198 Move X0, X21
	199 Move X2, [X8]
	200 Call List`1<Object>.get_Item, X0, X1
	201 Compare X0, 0
	202 JumpIfEqual {275}
	203 Move X1, [X0+16]
	204 Move X2, [X0+24]
	205 Move X3, [X25]
	206 Move X21, X0
	207 Move X0, X19
	208 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {220}
	213 Move X8, 0x7E5000
	214 Move X1, [X21+16]
	215 Move X2, [X21+24]
	216 Move X8, [X8+3264]
	217 Move X0, X19
	218 Move X3, [X8]
	219 Call HashSet`1<EdgeLookup>.Add, X0, X1
	220 Compare X20, 0
	221 JumpIfEqual {275}
	222 Move W8, [X20+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X8, 0x7E6000
	225 Move X8, [X8+2816]
	226 Move W1, 2
	227 Move X0, X20
	228 Move X2, [X8]
	229 Call List`1<Object>.get_Item, X0, X1
	230 Compare X0, 0
	231 JumpIfEqual {275}
	232 Move X1, [X0+16]
	233 Move X2, [X0+24]
	234 Move X3, [X25]
	235 Move X20, X0
	236 Move X0, X19
	237 Call HashSet`1<EdgeLookup>.Contains, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {255}
	242 Move X20, [X31+80]
	243 Move X19, [X31+88]
	244 Move X22, [X31+64]
	245 Move X21, [X31+72]
	246 Move X24, [X31+48]
	247 Move X23, [X31+56]
	248 Move X26, [X31+32]
	249 Move X25, [X31+40]
	250 Move X28, [X31+16]
	251 Move X27, [X31+24]
	252 Move X29, [X31+96]
	253 Move X30, [X31+104]
	254 Return 
	255 Move X8, 0x7E5000
	256 Move X1, [X20+16]
	257 Move X2, [X20+24]
	258 Move X8, [X8+3264]
	259 Move X0, X19
	260 Move X20, [X31+80]
	261 Move X19, [X31+88]
	262 Move X22, [X31+64]
	263 Move X21, [X31+72]
	264 Move X3, [X8]
	265 Move X24, [X31+48]
	266 Move X23, [X31+56]
	267 Move X26, [X31+32]
	268 Move X25, [X31+40]
	269 Move X28, [X31+16]
	270 Move X27, [X31+24]
	271 Move X29, [X31+96]
	272 Move X30, [X31+104]
	273 Call HashSet`1<EdgeLookup>.Add, X0, X1
	274 Return 
	275 Call 0x1C17F20

Method: UnityEngine.ProBuilder.WingedEdge NextSpoke(UnityEngine.ProBuilder.WingedEdge wing, System.Int32 pivot, System.Boolean opp)

Disassembly:
	0x03969F70 CBNZ X8, 0x3969F24
	0x03969F74 ADD W22, W22, 0x1
	0x03969F78 CMP W22, 0x2
	0x03969F7C B.NE 0x3969F04
	0x03969F80 MOV X0, X19
	0x03969F84 LDP X20, X19, [X31 + 0x30]
	0x03969F88 LDP X22, X21, [X31 + 0x20]
	0x03969F8C LDP X24, X23, [X31 + 0x10]
	0x03969F90 LDR X30, [X31], #0x40
	0x03969F94 RET
	0x03969F98 BL 0x1C16F20
	0x03969F9C STR X30, [X31 - 0x50]!
	0x03969FA0 STP X26, X25, [X31 + 0x10]
	0x03969FA4 STP X24, X23, [X31 + 0x20]
	0x03969FA8 STP X22, X21, [X31 + 0x30]
	0x03969FAC STP X20, X19, [X31 + 0x40]
	0x03969FB0 ADRP X20, 0xA78000
	0x03969FB4 ADRP X22, 0x78A000
	0x03969FB8 LDRB W8, [X20 + 0x9E0]
	0x03969FBC LDR X22, [X22 + 0x598]
	0x03969FC0 MOV X19, X1
	0x03969FC4 MOV X21, X0
	0x03969FC8 TBNZ X8, 0x0, 0x396A01C
	0x03969FCC ADRP X0, 0x7E6000
	0x03969FD0 LDR X0, [X0 + 0x328]
	0x03969FD4 BL 0x1C16CF4
	0x03969FD8 ADRP X0, 0x7E6000
	0x03969FDC LDR X0, [X0 + 0x670]
	0x03969FE0 BL 0x1C16CF4
	0x03969FE4 ADRP X0, 0x7E5000
	0x03969FE8 LDR X0, [X0 + 0x890]
	0x03969FEC BL 0x1C16CF4
	0x03969FF0 ADRP X0, 0x7E5000
	0x03969FF4 LDR X0, [X0 + 0x898]
	0x03969FF8 BL 0x1C16CF4
	0x03969FFC ADRP X0, 0x78A000
	0x0396A000 LDR X0, [X0 + 0x598]
	0x0396A004 BL 0x1C16CF4
	0x0396A008 ADRP X0, 0x7E4000
	0x0396A00C LDR X0, [X0 + 0xB08]
	0x0396A010 BL 0x1C16CF4
	0x0396A014 MOVZ W8, 0x1
	0x0396A018 STRB W8, [X20 + 0x9E0]
	0x0396A01C LDR X0, [X22]
	0x0396A020 LDR W8, [X0 + 0xE0]
	0x0396A024 CBNZ W8, 0x396A02C
	0x0396A028 BL 0x1C16DFC
	0x0396A02C MOV X0, X21
	0x0396A030 MOV X1, X31
	0x0396A034 MOV X2, X31
	0x0396A038 BL 0x3C3883C
	0x0396A03C TBNZ X0, 0x0, 0x396A150
	0x0396A040 CBZ X19, 0x396A170
	0x0396A044 ADRP X8, 0x7E4000
	0x0396A048 LDR X8, [X8 + 0x898]
	0x0396A04C ADRP X20, 0x7E4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA79000
	007 Move W8, [X22+2521]
	008 Move W21, W2
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7B3000
	016 Move X0, [X0+1536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2521], W8
	020 Compare X19, 0
	021 JumpIfEqual {78}
	022 Move TEMP, X21
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {27}
	026 Add X21, X19, 56
	027 Move X21, X19
	028 Add X21, X21, 40
	029 Move X8, [X21]
	030 Compare X8, 0
	031 JumpIfEqual {78}
	032 Move X22, 0x7B3000
	033 Move X8, [X8+24]
	034 Move X22, [X22+1536]
	035 Move [X31+8], X8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X0, X31, 8
	042 Move W1, W20
	043 Move X2, X31
	044 Call Edge.Contains, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {71}
	049 Add X19, X19, 48
	050 Move X8, [X19]
	051 Compare X8, 0
	052 JumpIfEqual {78}
	053 Move X8, [X8+24]
	054 Move X0, [X22]
	055 Move [X31+8], X8
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Add X0, X31, 8
	061 Move W1, W20
	062 Move X2, X31
	063 Call Edge.Contains, X0, X1
	064 Move W8, W0
	065 Move X0, X31
	066 Move X21, X19
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {72}
	071 Move X0, [X21]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> GetSpokes(UnityEngine.ProBuilder.WingedEdge wing, System.Int32 sharedIndex, System.Boolean allowHoles = False)

Disassembly:
	0x03969C64 BL 0x3C3883C
	0x03969C68 TBNZ X0, 0x0, 0x3969D60
	0x03969C6C CBZ X19, 0x3969D80
	0x03969C70 ADRP X8, 0x7E5000
	0x03969C74 LDR X8, [X8 + 0x898]
	0x03969C78 ADRP X22, 0x7E5000
	0x03969C7C ADRP X23, 0x7E5000
	0x03969C80 LDR X0, [X8]
	0x03969C84 LDR X22, [X22 + 0x890]
	0x03969C88 LDR X23, [X23 + 0xB08]
	0x03969C8C BL 0x1C16F10
	0x03969C90 LDR X1, [X22]
	0x03969C94 MOV X22, X0
	0x03969C98 BL 0x2DBDE08
	0x03969C9C LDR X0, [X23]
	0x03969CA0 LDR W8, [X0 + 0xE0]
	0x03969CA4 CBNZ W8, 0x3969CAC
	0x03969CA8 BL 0x1C16DFC
	0x03969CAC MOV X0, X21
	0x03969CB0 MOV W1, W31
	0x03969CB4 MOV X2, X31
	0x03969CB8 BL 0x3942EDC
	0x03969CBC LDR X8, [X19 + 0x18]
	0x03969CC0 CMP W8, 0x1
	0x03969CC4 B.LT 0x3969D3C
	0x03969CC8 ADRP X25, 0x7E6000
	0x03969CCC ADRP X26, 0x7E6000
	0x03969CD0 LDR X25, [X25 + 0x328]
	0x03969CD4 LDR X26, [X26 + 0x670]
	0x03969CD8 MOV X21, X0
	0x03969CDC MOV X24, X31
	0x03969CE0 AND X8, X8, 0x0
	0x03969CE4 ADD X27, X19, 0x20
	0x03969CE8 AND W20, W20, 0x1
	0x03969CEC CMP X24, W8, UXTW
	0x03969CF0 B.CS 0x3969D58
	0x03969CF4 LDR X0, [X25]
	0x03969CF8 LDR X23, [X27, X24, LSL #3]
	0x03969CFC LDR W8, [X0 + 0xE0]
	0x03969D00 CBNZ W8, 0x3969D08
	0x03969D04 BL 0x1C16DFC
	0x03969D08 MOV X0, X21
	0x03969D0C MOV X1, X23
	0x03969D10 MOV W2, W20
	0x03969D14 BL 0x3969DC8
	0x03969D18 CBZ X22, 0x3969D5C
	0x03969D1C LDR X2, [X26]
	0x03969D20 MOV X1, X0
	0x03969D24 MOV X0, X22
	0x03969D28 BL 0x2DBEF40
	0x03969D2C LDR W8, [X19 + 0x18]
	0x03969D30 ADD X24, X24, 0x1
	0x03969D34 CMP X24, W8, SXTW
	0x03969D38 B.LT 0x3969CEC
	0x03969D3C MOV X0, X22
	0x03969D40 LDP X20, X19, [X31 + 0x40]
	0x03969D44 LDP X22, X21, [X31 + 0x30]
	0x03969D48 LDP X24, X23, [X31 + 0x20]
	0x03969D4C LDP X26, X25, [X31 + 0x10]
	0x03969D50 LDP X30, X27, [X31], #0x50
	0x03969D54 RET
	0x03969D58 BL 0x1C16F28
	0x03969D5C BL 0x1C16F20
	0x03969D60 ADRP X0, 0x78F000
	0x03969D64 LDR X0, [X0 + 0x528]
	0x03969D68 BL 0x1C16D08
	0x03969D6C BL 0x1C16F10
	0x03969D70 MOV X19, X0
	0x03969D74 ADRP X0, 0x7E4000
	0x03969D78 LDR X0, [X0 + 0xE90]
	0x03969D7C B 0x3969D9C
	0x03969D80 ADRP X0, 0x78F000
	0x03969D84 LDR X0, [X0 + 0x528]
	0x03969D88 BL 0x1C16D08
	0x03969D8C BL 0x1C16F10
	0x03969D90 MOV X19, X0
	0x03969D94 ADRP X0, 0x7E5000
	0x03969D98 LDR X0, [X0 + 0x640]
	0x03969D9C BL 0x1C16D08
	0x03969DA0 MOV X1, X0
	0x03969DA4 MOV X0, X19
	0x03969DA8 MOV X2, X31
	0x03969DAC BL 0x330E100
	0x03969DB0 ADRP X0, 0x7E6000
	0x03969DB4 LDR X0, [X0 + 0xC58]
	0x03969DB8 BL 0x1C16D08
	0x03969DBC MOV X1, X0
	0x03969DC0 MOV X0, X19
	0x03969DC4 BL 0x1C16DEC
	0x03969DC8 STR X30, [X31 - 0x40]!
	0x03969DCC STP X24, X23, [X31 + 0x10]
	0x03969DD0 STP X22, X21, [X31 + 0x20]
	0x03969DD4 STP X20, X19, [X31 + 0x30]
	0x03969DD8 ADRP X22, 0xA78000
	0x03969DDC ADRP X23, 0x7E6000
	0x03969DE0 LDRB W8, [X22 + 0x9E1]
	0x03969DE4 LDR X23, [X23 + 0xC60]
	0x03969DE8 MOV W20, W2
	0x03969DEC MOV X19, X1
	0x03969DF0 MOV X21, X0
	0x03969DF4 TBNZ X8, 0x0, 0x3969E54
	0x03969DF8 ADRP X0, 0x7E6000
	0x03969DFC LDR X0, [X0 + 0x5B8]
	0x03969E00 BL 0x1C16CF4
	0x03969E04 ADRP X0, 0x7E6000
	0x03969E08 LDR X0, [X0 + 0x70]
	0x03969E0C BL 0x1C16CF4
	0x03969E10 ADRP X0, 0x7E5000
	0x03969E14 LDR X0, [X0 + 0x888]
	0x03969E18 BL 0x1C16CF4
	0x03969E1C ADRP X0, 0x7E5000
	0x03969E20 LDR X0, [X0 + 0x890]
	0x03969E24 BL 0x1C16CF4
	0x03969E28 ADRP X0, 0x7E5000
	0x03969E2C LDR X0, [X0 + 0x898]
	0x03969E30 BL 0x1C16CF4
	0x03969E34 ADRP X0, 0x7E6000
	0x03969E38 LDR X0, [X0 + 0xC68]
	0x03969E3C BL 0x1C16CF4
	0x03969E40 ADRP X0, 0x7E6000
	0x03969E44 LDR X0, [X0 + 0xC60]
	0x03969E48 BL 0x1C16CF4
	0x03969E4C MOVZ W8, 0x1
	0x03969E50 STRB W8, [X22 + 0x9E1]
	0x03969E54 LDR X0, [X23]
	0x03969E58 BL 0x1C16F10
	0x03969E5C MOV X1, X31
	0x03969E60 MOV X22, X0
	0x03969E64 BL 0x396B124
	0x03969E68 CBZ X22, 0x3969F98
	0x03969E6C ADRP X8, 0x7E5000
	0x03969E70 LDR X8, [X8 + 0x898]
	0x03969E74 STR X19, [X22 + 0x10]
	0x03969E78 ADRP X19, 0x7E5000
	0x03969E7C LDR X0, [X8]
	0x03969E80 LDR X19, [X19 + 0x890]
	0x03969E84 BL 0x1C16F10
	0x03969E88 LDR X1, [X19]
	0x03969E8C MOV X19, X0
	0x03969E90 BL 0x2DBDE08
	0x03969E94 LDR X8, [X22 + 0x10]
	0x03969E98 CBZ X8, 0x3969F80
	0x03969E9C ADRP X8, 0x7E6000
	0x03969EA0 LDR X8, [X8 + 0x70]
	0x03969EA4 ADRP X23, 0x7E6000
	0x03969EA8 ADRP X24, 0x7E6000
	0x03969EAC LDR X0, [X8]
	0x03969EB0 LDR X23, [X23 + 0xC68]
	0x03969EB4 LDR X24, [X24 + 0x5B8]
	0x03969EB8 BL 0x1C16F10
	0x03969EBC LDR X2, [X23]
	0x03969EC0 MOV X1, X22
	0x03969EC4 MOV X3, X31
	0x03969EC8 MOV X23, X0
	0x03969ECC BL 0x2D2F428
	0x03969ED0 LDR X2, [X24]
	0x03969ED4 MOV X0, X21
	0x03969ED8 MOV X1, X23
	0x03969EDC BL 0x21C570C
	0x03969EE0 CBZ X0, 0x3969F80
	0x03969EE4 MOV X21, X0
	0x03969EE8 TBZ X20, 0x0, 0x3969EF8
	0x03969EEC LDR X21, [X0 + 0x28]
	0x03969EF0 CBNZ X21, 0x3969EF8
	0x03969EF4 LDR X21, [X0 + 0x30]
	0x03969EF8 ADRP X23, 0x7E5000
	0x03969EFC LDR X23, [X23 + 0x888]
	0x03969F00 MOV W22, W31
	0x03969F04 CMP W22, 0x1
	0x03969F08 MOV X20, X21
	0x03969F0C B.NE 0x3969F24
	0x03969F10 CBZ X21, 0x3969F98
	0x03969F14 LDR X20, [X21 + 0x38]
	0x03969F18 CBZ X20, 0x3969F80
	0x03969F1C LDR X8, [X20 + 0x20]
	0x03969F20 CBZ X8, 0x3969F80
	0x03969F24 CBZ X20, 0x3969F98
	0x03969F28 CBZ X19, 0x3969F98
	0x03969F2C LDR X1, [X20 + 0x20]
	0x03969F30 LDR X2, [X23]
	0x03969F34 MOV X0, X19
	0x03969F38 BL 0x2DBEF30
	0x03969F3C TBZ X0, 0x0, 0x3969F74
	0x03969F40 MOV X0, X20
	0x03969F44 MOV X1, X31
	0x03969F48 BL 0x3941E60
	0x03969F4C CMP W0, 0x4
	0x03969F50 B.NE 0x3969F74
	0x03969F54 LDR X8, [X20 + 0x28]
	0x03969F58 CBZ X8, 0x3969F98
	0x03969F5C LDR X8, [X8 + 0x28]
	0x03969F60 CBZ X8, 0x3969F98
	0x03969F64 LDR X20, [X8 + 0x38]
	0x03969F68 CBZ X20, 0x3969F74
	0x03969F6C LDR X8, [X20 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA79000
	015 Move X24, 0x7E7000
	016 Move X23, 0x7E7000
	017 Move W8, [X21+2522]
	018 Move X24, [X24+48]
	019 Move X23, [X23+40]
	020 Move W22, W2
	021 Move W19, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {53}
	027 Move X0, 0x7B3000
	028 Move X0, [X0+1536]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E7000
	031 Move X0, [X0+808]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E7000
	034 Move X0, [X0+3136]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E7000
	037 Move X0, [X0+32]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E7000
	040 Move X0, [X0+3144]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E7000
	043 Move X0, [X0+3152]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E7000
	046 Move X0, [X0+40]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E7000
	049 Move X0, [X0+48]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+2522], W8
	053 Move X0, [X24]
	054 Move [X31+8], X31
	055 Call 0x1C17F10
	056 Move X1, [X23]
	057 Move X21, X0
	058 Call List`1<Object>..ctor, X0
	059 Compare X21, 0
	060 JumpIfEqual {229}
	061 Move X29, 0x7E7000
	062 Move X25, 0x7E7000
	063 Move X26, 0x7E7000
	064 Move X27, 0x7B3000
	065 Move X29, [X29+3144]
	066 Move X25, [X25+32]
	067 Move X26, [X26+808]
	068 Move X27, [X27+1536]
	069 Move W28, W31
	070 Move X23, X20
	071 Move X2, [X29]
	072 Move X0, X21
	073 Move X1, X23
	074 Call List`1<Object>.Contains, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {214}
	079 Move W10, [X21+28]
	080 Move X8, [X21+16]
	081 Move X9, [X25]
	082 Add W10, W10, 1
	083 Move [X21+28], W10
	084 Compare X8, 0
	085 JumpIfEqual {229}
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move W11, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W9, W10, 1
	090 Add X8, X8, X10
	091 Move [X21+24], W9
	092 Move [X8+32], X23
	093 Move X8, [X9+32]
	094 Move X0, X21
	095 Move X1, X23
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Object>.AddWithResize, X0, X1
	099 Move X0, [X26]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 And W2, W28, 1
	105 Move X0, X23
	106 Move W1, W19
	107 Call ElementSelection.NextSpoke, X0, X1, X2
	108 Compare X0, 0
	109 JumpIfEqual {130}
	110 Move X8, [X0+24]
	111 Move X23, X0
	112 Move [X31+8], X8
	113 Compare X20, 0
	114 JumpIfEqual {229}
	115 Move X0, [X27]
	116 Move X24, [X20+24]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Add X0, X31, 8
	122 Move X1, X24
	123 Move X2, X31
	124 Xor W28, W28, 1
	125 Call Edge.Equals, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {71}
	130 Move TEMP, X22
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {200}
	134 Compare X20, 0
	135 JumpIfEqual {229}
	136 Move X8, 0x7E7000
	137 Move X23, [X20+56]
	138 Move X8, [X8+48]
	139 Move X0, [X8]
	140 Call 0x1C17F10
	141 Move X8, 0x7E7000
	142 Move X8, [X8+40]
	143 Move X22, X0
	144 Move X1, [X8]
	145 Call List`1<Object>..ctor, X0
	146 Compare X23, 0
	147 JumpIfEqual {201}
	148 Move W28, W31
	149 Move X8, [X23+24]
	150 Move X0, [X27]
	151 Move [X31+8], X8
	152 Move W8, [X0+224]
	153 Move X24, [X20+24]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Add X0, X31, 8
	158 Move X1, X24
	159 Move X2, X31
	160 Call Edge.Equals, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {201}
	165 Compare X22, 0
	166 JumpIfEqual {229}
	167 Move W10, [X22+28]
	168 Move X8, [X22+16]
	169 Move X9, [X25]
	170 Add W10, W10, 1
	171 Move [X22+28], W10
	172 Compare X8, 0
	173 JumpIfEqual {229}
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 Move W11, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add W9, W10, 1
	178 Add X8, X8, X10
	179 Move [X22+24], W9
	180 Move [X8+32], X23
	181 Move X8, [X9+32]
	182 Move X0, X22
	183 Move X1, X23
	184 Move X8, [X8+192]
	185 Move X2, [X8+112]
	186 Call List`1<Object>.AddWithResize, X0, X1
	187 Move X0, [X26]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 And W2, W28, 1
	193 Move X0, X23
	194 Move W1, W19
	195 Call ElementSelection.NextSpoke, X0, X1, X2
	196 Move X23, X0
	197 Xor W28, W28, 1
	198 Compare X0, 0
	199 JumpIfNotEqual {149}
	200 Move X21, X31
	201 Compare X22, 0
	202 JumpIfEqual {229}
	203 Move X8, 0x7E7000
	204 Move X8, [X8+3152]
	205 Move X0, X22
	206 Move X1, [X8]
	207 Call List`1<Object>.Reverse, X0
	208 Move X8, 0x7E7000
	209 Move X8, [X8+3136]
	210 Move X0, X21
	211 Move X1, X22
	212 Move X2, [X8]
	213 Call List`1<Object>.AddRange, X0, X1
	214 Move X0, X21
	215 Move X20, [X31+96]
	216 Move X19, [X31+104]
	217 Move X22, [X31+80]
	218 Move X21, [X31+88]
	219 Move X24, [X31+64]
	220 Move X23, [X31+72]
	221 Move X26, [X31+48]
	222 Move X25, [X31+56]
	223 Move X28, [X31+32]
	224 Move X27, [X31+40]
	225 Move X29, [X31+16]
	226 Move X30, [X31+24]
	227 Add X31, X31, 112
	228 Return X0
	229 Call 0x1C17F20

Method: System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> GrowSelection(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Single maxAngleDiff = -1)

Disassembly:
	0x0396A050 ADRP X22, 0x7E4000
	0x0396A054 LDR X0, [X8]
	0x0396A058 LDR X20, [X20 + 0x890]
	0x0396A05C LDR X22, [X22 + 0xB08]
	0x0396A060 BL 0x1C16F10
	0x0396A064 LDR X1, [X20]
	0x0396A068 MOV X20, X0
	0x0396A06C BL 0x2DBDE08
	0x0396A070 LDR X0, [X22]
	0x0396A074 LDR W8, [X0 + 0xE0]
	0x0396A078 CBNZ W8, 0x396A080
	0x0396A07C BL 0x1C16DFC
	0x0396A080 MOV X0, X21
	0x0396A084 MOV W1, W31
	0x0396A088 MOV X2, X31
	0x0396A08C BL 0x3942EDC
	0x0396A090 LDR X8, [X19 + 0x18]
	0x0396A094 CMP W8, 0x1
	0x0396A098 B.LT 0x396A12C
	0x0396A09C ADRP X24, 0x7E5000
	0x0396A0A0 ADRP X25, 0x7E5000
	0x0396A0A4 LDR X24, [X24 + 0x328]
	0x0396A0A8 LDR X25, [X25 + 0x670]
	0x0396A0AC MOV X21, X0
	0x0396A0B0 MOV X23, X31
	0x0396A0B4 AND X8, X8, 0x0
	0x0396A0B8 ADD X26, X19, 0x20
	0x0396A0BC CMP X23, W8, UXTW
	0x0396A0C0 B.CS 0x396A148
	0x0396A0C4 LDR X0, [X24]
	0x0396A0C8 LDR X22, [X26, X23, LSL #3]
	0x0396A0CC LDR W8, [X0 + 0xE0]
	0x0396A0D0 CBNZ W8, 0x396A0D8
	0x0396A0D4 BL 0x1C16DFC
	0x0396A0D8 MOVZ W2, 0x1
	0x0396A0DC MOV X0, X21
	0x0396A0E0 MOV X1, X22
	0x0396A0E4 BL 0x3969DC8
	0x0396A0E8 CBZ X20, 0x396A14C
	0x0396A0EC LDR X2, [X25]
	0x0396A0F0 MOV X1, X0
	0x0396A0F4 MOV X0, X20
	0x0396A0F8 BL 0x2DBEF40
	0x0396A0FC MOV X0, X21
	0x0396A100 MOV X1, X22
	0x0396A104 MOV W2, W31
	0x0396A108 BL 0x3969DC8
	0x0396A10C LDR X2, [X25]
	0x0396A110 MOV X1, X0
	0x0396A114 MOV X0, X20
	0x0396A118 BL 0x2DBEF40
	0x0396A11C LDR W8, [X19 + 0x18]
	0x0396A120 ADD X23, X23, 0x1
	0x0396A124 CMP X23, W8, SXTW
	0x0396A128 B.LT 0x396A0BC
	0x0396A12C MOV X0, X20
	0x0396A130 LDP X20, X19, [X31 + 0x40]
	0x0396A134 LDP X22, X21, [X31 + 0x30]
	0x0396A138 LDP X24, X23, [X31 + 0x20]
	0x0396A13C LDP X26, X25, [X31 + 0x10]
	0x0396A140 LDR X30, [X31], #0x50
	0x0396A144 RET
	0x0396A148 BL 0x1C16F28
	0x0396A14C BL 0x1C16F20
	0x0396A150 ADRP X0, 0x78E000
	0x0396A154 LDR X0, [X0 + 0x528]
	0x0396A158 BL 0x1C16D08
	0x0396A15C BL 0x1C16F10
	0x0396A160 MOV X19, X0
	0x0396A164 ADRP X0, 0x7E3000
	0x0396A168 LDR X0, [X0 + 0xE90]
	0x0396A16C B 0x396A18C
	0x0396A170 ADRP X0, 0x78E000
	0x0396A174 LDR X0, [X0 + 0x528]
	0x0396A178 BL 0x1C16D08
	0x0396A17C BL 0x1C16F10
	0x0396A180 MOV X19, X0
	0x0396A184 ADRP X0, 0x7E4000
	0x0396A188 LDR X0, [X0 + 0x640]
	0x0396A18C BL 0x1C16D08
	0x0396A190 MOV X1, X0
	0x0396A194 MOV X0, X19
	0x0396A198 MOV X2, X31
	0x0396A19C BL 0x330E100
	0x0396A1A0 ADRP X0, 0x7E5000
	0x0396A1A4 LDR X0, [X0 + 0xC70]
	0x0396A1A8 BL 0x1C16D08
	0x0396A1AC MOV X1, X0
	0x0396A1B0 MOV X0, X19
	0x0396A1B4 BL 0x1C16DEC
	0x0396A1B8 SUB X31, X31, 0xA0
	0x0396A1BC STP X29, X30, [X31 + 0x40]
	0x0396A1C0 STP X28, X27, [X31 + 0x50]
	0x0396A1C4 STP X26, X25, [X31 + 0x60]
	0x0396A1C8 STP X24, X23, [X31 + 0x70]
	0x0396A1CC STP X22, X21, [X31 + 0x80]
	0x0396A1D0 STP X20, X19, [X31 + 0x90]
	0x0396A1D4 ADRP X21, 0xA77000
	0x0396A1D8 LDRB W8, [X21 + 0x9E2]
	0x0396A1DC MOV X19, X1
	0x0396A1E0 MOV X20, X0
	0x0396A1E4 TBNZ X8, 0x0, 0x396A298
	0x0396A1E8 ADRP X0, 0x7E5000
	0x0396A1EC LDR X0, [X0 + 0x328]
	0x0396A1F0 BL 0x1C16CF4
	0x0396A1F4 ADRP X0, 0x7E5000
	0x0396A1F8 LDR X0, [X0 + 0x58]
	0x0396A1FC BL 0x1C16CF4
	0x0396A200 ADRP X0, 0x7E5000
	0x0396A204 LDR X0, [X0 + 0x60]
	0x0396A208 BL 0x1C16CF4
	0x0396A20C ADRP X0, 0x7E5000
	0x0396A210 LDR X0, [X0 + 0xC78]
	0x0396A214 BL 0x1C16CF4
	0x0396A218 ADRP X0, 0x7E5000
	0x0396A21C LDR X0, [X0 + 0xC80]
	0x0396A220 BL 0x1C16CF4
	0x0396A224 ADRP X0, 0x7E5000
	0x0396A228 LDR X0, [X0 + 0xC88]
	0x0396A22C BL 0x1C16CF4
	0x0396A230 ADRP X0, 0x7E5000
	0x0396A234 LDR X0, [X0 + 0x78]
	0x0396A238 BL 0x1C16CF4
	0x0396A23C ADRP X0, 0x7E5000
	0x0396A240 LDR X0, [X0 + 0xC90]
	0x0396A244 BL 0x1C16CF4
	0x0396A248 ADRP X0, 0x7E5000
	0x0396A24C LDR X0, [X0 + 0xC98]
	0x0396A250 BL 0x1C16CF4
	0x0396A254 ADRP X0, 0x7E5000
	0x0396A258 LDR X0, [X0 + 0xCA0]
	0x0396A25C BL 0x1C16CF4
	0x0396A260 ADRP X0, 0x7E5000
	0x0396A264 LDR X0, [X0 + 0xCA8]
	0x0396A268 BL 0x1C16CF4
	0x0396A26C ADRP X0, 0x7E5000
	0x0396A270 LDR X0, [X0 + 0xCB0]
	0x0396A274 BL 0x1C16CF4
	0x0396A278 ADRP X0, 0x7E5000
	0x0396A27C LDR X0, [X0 + 0xB68]
	0x0396A280 BL 0x1C16CF4
	0x0396A284 ADRP X0, 0x7E4000
	0x0396A288 LDR X0, [X0 + 0xB08]
	0x0396A28C BL 0x1C16CF4
	0x0396A290 MOVZ W8, 0x1
	0x0396A294 STRB W8, [X21 + 0x9E2]
	0x0396A298 STP X31, X31, [X31 + 0x20]
	0x0396A29C STR X31, [X31 + 0x30]
	0x0396A2A0 CBZ X20, 0x396A4C4
	0x0396A2A4 ADRP X21, 0x7E5000
	0x0396A2A8 ADRP X23, 0x7E5000
	0x0396A2AC ADRP X24, 0x7E4000
	0x0396A2B0 ADRP X22, 0x7E5000
	0x0396A2B4 LDR X21, [X21 + 0xCA8]
	0x0396A2B8 LDR X23, [X23 + 0xCA0]
	0x0396A2BC LDR X24, [X24 + 0xB08]
	0x0396A2C0 LDR X22, [X22 + 0x328]
	0x0396A2C4 MOV X0, X20
	0x0396A2C8 MOV X1, X19
	0x0396A2CC MOV X2, X31
	0x0396A2D0 BL 0x391B738
	0x0396A2D4 LDR X8, [X21]
	0x0396A2D8 MOV X21, X0
	0x0396A2DC MOV X0, X8
	0x0396A2E0 BL 0x1C16F10
	0x0396A2E4 LDR X1, [X23]
	0x0396A2E8 MOV X19, X0
	0x0396A2EC BL 0x301B7C4
	0x0396A2F0 LDR X0, [X24]
	0x0396A2F4 LDR W8, [X0 + 0xE0]
	0x0396A2F8 CBNZ W8, 0x396A300
	0x0396A2FC BL 0x1C16DFC
	0x0396A300 MOV X0, X20
	0x0396A304 MOV W1, W31
	0x0396A308 MOV X2, X31
	0x0396A30C BL 0x3942EDC
	0x0396A310 LDR X8, [X22]
	0x0396A314 MOV X20, X0
	0x0396A318 LDR W9, [X8 + 0xE0]
	0x0396A31C CBNZ W9, 0x396A328
	0x0396A320 MOV X0, X8
	0x0396A324 BL 0x1C16DFC
	0x0396A328 MOV X0, X20
	0x0396A32C MOV X1, X21
	0x0396A330 BL 0x396A554
	0x0396A334 CBZ X0, 0x396A4C4
	0x0396A338 ADRP X8, 0x7E5000
	0x0396A33C LDR X8, [X8 + 0xC98]
	0x0396A340 ADRP X24, 0x7E5000
	0x0396A344 ADRP X25, 0x7E5000
	0x0396A348 ADRP X26, 0x7E5000
	0x0396A34C ADRP X27, 0x7E5000
	0x0396A350 ADRP X28, 0x7E5000
	0x0396A354 LDR X24, [X24 + 0xC80]
	0x0396A358 LDR X25, [X25 + 0xB68]
	0x0396A35C LDR X26, [X26 + 0x78]
	0x0396A360 LDR X27, [X27 + 0xCB0]
	0x0396A364 LDR X28, [X28 + 0x58]
	0x0396A368 LDR X1, [X8]
	0x0396A36C ADRP X29, 0x7E5000
	0x0396A370 ADRP X23, 0x7E5000
	0x0396A374 LDR X29, [X29 + 0x60]
	0x0396A378 LDR X23, [X23 + 0xC90]
	0x0396A37C ADD X8, X31, 0x8
	0x0396A380 BL 0x301CB58
	0x0396A384 LDUR V0, [X31 + 0x8]
	0x0396A388 LDR X8, [X31 + 0x18]
	0x0396A38C STR V0, [X31 + 0x2]
	0x0396A390 STR X8, [X31 + 0x30]
	0x0396A394 LDR X1, [X24]
	0x0396A398 ADD X0, X31, 0x20
	0x0396A39C BL 0x2BC4350
	0x0396A3A0 TBZ X0, 0x0, 0x396A484
	0x0396A3A4 LDR X8, [X25]
	0x0396A3A8 LDR X20, [X31 + 0x30]
	0x0396A3AC LDR W9, [X8 + 0xE0]
	0x0396A3B0 CBNZ W9, 0x396A3C0
	0x0396A3B4 MOV X0, X8
	0x0396A3B8 BL 0x1C16DFC
	0x0396A3BC LDR X8, [X25]
	0x0396A3C0 LDR X9, [X8 + 0xB8]
	0x0396A3C4 LDR X21, [X9 + 0x68]
	0x0396A3C8 CBNZ X21, 0x396A410
	0x0396A3CC LDR W9, [X8 + 0xE0]
	0x0396A3D0 CBNZ W9, 0x396A3E0
	0x0396A3D4 MOV X0, X8
	0x0396A3D8 BL 0x1C16DFC
	0x0396A3DC LDR X8, [X25]
	0x0396A3E0 LDR X8, [X8 + 0xB8]
	0x0396A3E4 LDR X0, [X26]
	0x0396A3E8 LDR X22, [X8]
	0x0396A3EC BL 0x1C16F10
	0x0396A3F0 LDR X2, [X27]
	0x0396A3F4 MOV X21, X0
	0x0396A3F8 MOV X1, X22
	0x0396A3FC MOV X3, X31
	0x0396A400 BL 0x2D2FDEC
	0x0396A404 LDR X8, [X25]
	0x0396A408 LDR X8, [X8 + 0xB8]
	0x0396A40C STR X21, [X8 + 0x68]
	0x0396A410 LDR X2, [X28]
	0x0396A414 MOV X0, X20
	0x0396A418 MOV X1, X21
	0x0396A41C BL 0x21CE948
	0x0396A420 LDR X1, [X29]
	0x0396A424 BL 0x21D770C
	0x0396A428 MOV X1, X0
	0x0396A42C CBZ X19, 0x396A4BC
	0x0396A430 LDR W10, [X19 + 0x1C]
	0x0396A434 LDR X8, [X19 + 0x10]
	0x0396A438 LDR X9, [X23]
	0x0396A43C ADD W10, W10, 0x1
	0x0396A440 STR W10, [X19 + 0x1C]
	0x0396A444 CBZ X8, 0x396A4C0
	0x0396A448 LDRSW X10, [X19 + 0x18]
	0x0396A44C LDR W11, [X8 + 0x18]
	0x0396A450 CMP W10, W11
	0x0396A454 B.CS 0x396A46C
	0x0396A458 ADD W9, W10, 0x1
	0x0396A45C ADD X8, X8, X10, 0x3, LSL
	0x0396A460 STR W9, [X19 + 0x18]
	0x0396A464 STR X1, [X8 + 0x20]
	0x0396A468 B 0x396A394
	0x0396A46C LDR X8, [X9 + 0x20]
	0x0396A470 LDR X8, [X8 + 0xC0]
	0x0396A474 LDR X2, [X8 + 0x70]
	0x0396A478 MOV X0, X19
	0x0396A47C BL 0x301BF90
	0x0396A480 B 0x396A394
	0x0396A484 ADRP X8, 0x7E5000
	0x0396A488 LDR X8, [X8 + 0xC78]
	0x0396A48C ADD X0, X31, 0x20
	0x0396A490 LDR X1, [X8]
	0x0396A494 BL 0x2BC434C
	0x0396A498 MOV X0, X19
	0x0396A49C LDP X20, X19, [X31 + 0x90]
	0x0396A4A0 LDP X22, X21, [X31 + 0x80]
	0x0396A4A4 LDP X24, X23, [X31 + 0x70]
	0x0396A4A8 LDP X26, X25, [X31 + 0x60]
	0x0396A4AC LDP X28, X27, [X31 + 0x50]
	0x0396A4B0 LDP X29, X30, [X31 + 0x40]
	0x0396A4B4 ADD X31, X31, 0xA0
	0x0396A4B8 RET
	0x0396A4BC BL 0x1C16F20
	0x0396A4C0 BL 0x1C16F20
	0x0396A4C4 BL 0x1C16F20
	0x0396A4C8 B 0x396A4E0
	0x0396A4CC B 0x396A4E0
	0x0396A4D0 B 0x396A4E0
	0x0396A4D4 B 0x396A4E0
	0x0396A4D8 B 0x396A4E0
	0x0396A4DC B 0x396A4E0
	0x0396A4E0 MOV X20, X0
	0x0396A4E4 CMP W1, 0x1
	0x0396A4E8 B.NE 0x396A51C
	0x0396A4EC MOV X0, X20
	0x0396A4F0 BL 0x3EB1AD0
	0x0396A4F4 LDR X21, [X0]
	0x0396A4F8 BL 0x3EB1AE0
	0x0396A4FC ADRP X8, 0x7E5000
	0x0396A500 LDR X8, [X8 + 0xC78]
	0x0396A504 ADD X0, X31, 0x20
	0x0396A508 LDR X1, [X8]
	0x0396A50C BL 0x2BC434C
	0x0396A510 CBZ X21, 0x396A498
	0x0396A514 MOV X0, X21
	0x0396A518 BL 0x1C16F18
	0x0396A51C MOV X21, X31
	0x0396A520 B 0x396A528
	0x0396A524 MOV X20, X0
	0x0396A528 ADRP X8, 0x7E5000
	0x0396A52C LDR X8, [X8 + 0xC78]
	0x0396A530 LDR X1, [X8]
	0x0396A534 ADD X0, X31, 0x20
	0x0396A538 BL 0x2BC434C
	0x0396A53C CBNZ X21, 0x396A548
	0x0396A540 MOV X0, X20
	0x0396A544 BL 0x1D2C690
	0x0396A548 MOV X0, X21
	0x0396A54C BL 0x1C16F18
	0x0396A550 BL 0x1990590
	0x0396A554 SUB X31, X31, 0xB0
	0x0396A558 STP X29, X30, [X31 + 0x50]
	0x0396A55C STP X28, X27, [X31 + 0x60]
	0x0396A560 STP X26, X25, [X31 + 0x70]
	0x0396A564 STP X24, X23, [X31 + 0x80]
	0x0396A568 STP X22, X21, [X31 + 0x90]
	0x0396A56C STP X20, X19, [X31 + 0xA0]
	0x0396A570 ADRP X19, 0xA77000
	0x0396A574 ADRP X20, 0x7E5000
	0x0396A578 LDRB W8, [X19 + 0x9E3]
	0x0396A57C LDR X20, [X20 + 0xCB8]
	0x0396A580 MOV X21, X1
	0x0396A584 MOV X22, X0
	0x0396A588 TBNZ X8, 0x0, 0x396A72C
	0x0396A58C ADRP X0, 0x7E5000
	0x0396A590 LDR X0, [X0 + 0xCC0]
	0x0396A594 BL 0x1C16CF4
	0x0396A598 ADRP X0, 0x7E5000
	0x0396A59C LDR X0, [X0 + 0x328]
	0x0396A5A0 BL 0x1C16CF4
	0x0396A5A4 ADRP X0, 0x7E5000
	0x0396A5A8 LDR X0, [X0 + 0xCC8]
	0x0396A5AC BL 0x1C16CF4
	0x0396A5B0 ADRP X0, 0x7E5000
	0x0396A5B4 LDR X0, [X0 + 0x70]
	0x0396A5B8 BL 0x1C16CF4
	0x0396A5BC ADRP X0, 0x7E5000
	0x0396A5C0 LDR X0, [X0 + 0xCD0]
	0x0396A5C4 BL 0x1C16CF4
	0x0396A5C8 ADRP X0, 0x78A000
	0x0396A5CC LDR X0, [X0 + 0xDF8]
	0x0396A5D0 BL 0x1C16CF4
	0x0396A5D4 ADRP X0, 0x7E5000
	0x0396A5D8 LDR X0, [X0 + 0xCD8]
	0x0396A5DC BL 0x1C16CF4
	0x0396A5E0 ADRP X0, 0x7E5000
	0x0396A5E4 LDR X0, [X0 + 0xCE0]
	0x0396A5E8 BL 0x1C16CF4
	0x0396A5EC ADRP X0, 0x7E5000
	0x0396A5F0 LDR X0, [X0 + 0xCE8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X21, 0xA78000
	023 Move X20, 0x7E5000
	024 Move W8, [X21+2523]
	025 Move X20, [X20+2824]
	026 Move V8, V0
	027 Move X22, X1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {65}
	033 Move X0, 0x7E5000
	034 Move X0, [X0+2184]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E4000
	037 Move X0, [X0+3624]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E5000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E6000
	043 Move X0, [X0+1656]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E5000
	046 Move X0, [X0+2200]
	047 Call 0x1C17CF4
	048 Move X0, 0x78A000
	049 Move X0, [X0+3584]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E5000
	052 Move X0, [X0+2808]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E5000
	055 Move X0, [X0+2816]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E5000
	058 Move X0, [X0+3536]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E5000
	061 Move X0, [X0+2824]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X21+2523], W8
	065 Move X0, [X20]
	066 Move X25, 0x7E5000
	067 Move X21, 0x7E6000
	068 Move X24, 0x7E5000
	069 Move W8, [X0+224]
	070 Move X25, [X25+2200]
	071 Move X21, [X21+1656]
	072 Move X24, [X24+2192]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move W1, 1
	077 Move X0, X19
	078 Move X2, X31
	079 Move W23, 1
	080 Call WingedEdge.GetWingedEdges, X0, X1
	081 Move X8, [X25]
	082 Move X20, X0
	083 Move X0, X8
	084 Call 0x1C17F10
	085 Move X2, [X21]
	086 Move X1, X22
	087 Move X21, X0
	088 Call HashSet`1<Object>..ctor, X0, X1
	089 Move X0, [X25]
	090 Call 0x1C17F10
	091 Move X1, [X24]
	092 Move X22, X0
	093 Call HashSet`1<Object>..ctor, X0
	094 Move X24, 0xA6F000
	095 Move W8, [X24+1923]
	096 Compare W8, 0
	097 JumpIfNotEqual {102}
	098 Move X0, 0x78A000
	099 Move X0, [X0+1440]
	100 Call 0x1C17CF4
	101 Move [X24+1923], W23
	102 Compare X20, 0
	103 JumpIfEqual {344}
	104 Move W8, [X20+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X25, 0x7E5000
	107 Move X29, 0x7E4000
	108 Move X8, 0x78A000
	109 Move X25, [X25+2816]
	110 Move X29, [X29+3624]
	111 Move X8, [X8+1440]
	112 Move X27, 0x7E5000
	113 Move X24, 0x78A000
	114 Move X9, -48758784
	115 Move X8, [X8]
	116 Move X27, [X27+2184]
	117 Move V15, [X9+4072]
	118 Move W23, W31
	119 Move X8, [X8+184]
	120 Move X24, [X24+1448]
	121 Move X28, 0xA6F000
	122 Move S0, [X8]
	123 Move S10, [X8+4]
	124 Move V11, [X8+8]
	125 Move X8, -48754688
	126 Move [X31+12], S0
	127 Move V0, [X8+1096]
	128 Move [X31+8], S0
	129 Move X2, [X25]
	130 Move X0, X20
	131 Move W1, W23
	132 Call List`1<Object>.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {344}
	135 Compare X21, 0
	136 JumpIfEqual {344}
	137 Move X1, [X0+32]
	138 Move X2, [X29]
	139 Move X0, X21
	140 Call HashSet`1<Object>.Contains, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {307}
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 Move X2, [X25]
	147 Move X0, X20
	148 Move W1, W23
	149 Call List`1<Object>.get_Item, X0, X1
	150 Compare X0, 0
	151 JumpIfEqual {344}
	152 Move X1, [X0+32]
	153 Move X0, X19
	154 Move X2, X31
	155 Call Math.Normal, X0, X1
	156 Move V10, V1
	157 Move V11, V2
	158 Move [X31+12], S0
	159 Move X2, [X25]
	160 Move X0, X20
	161 Move W1, W23
	162 Call List`1<Object>.get_Item, X0, X1
	163 Move X8, 0x7E5000
	164 Move X8, [X8+3536]
	165 Move X26, X0
	166 Move X8, [X8]
	167 Move X0, X8
	168 Call 0x1C17F10
	169 Move X1, X26
	170 Move X2, X31
	171 Move X25, X0
	172 Call WingedEdgeEnumerator..ctor, X0, X1
	173 Compare X25, 0
	174 JumpIfEqual {316}
	175 Move V0, [X31+12]
	176 Multiply S1, S10, S10
	177 Multiply S0, S0, S0
	178 Add S0, S1, S0
	179 Multiply S1, S11, S11
	180 Add S9, S1, S0
	181 Move X0, X25
	182 Move X1, X31
	183 Call WingedEdgeEnumerator.MoveNext, X0
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {277}
	188 Move X0, X25
	189 Move X1, X31
	190 Call WingedEdgeEnumerator.get_Current, X0
	191 Move X26, X0
	192 Compare X0, 0
	193 JumpIfEqual {310}
	194 Move X8, [X26+56]
	195 Compare X8, 0
	196 JumpIfEqual {181}
	197 Move X1, [X8+32]
	198 Move X2, [X29]
	199 Move X0, X21
	200 Call HashSet`1<Object>.Contains, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfEqual {181}
	205 Move X8, [X26+56]
	206 NotImplemented "Instruction FCMP not yet implemented."
	207 Compare X8, 0
	208 JumpIfEqual {312}
	209 Move X1, [X8+32]
	210 Move X0, X19
	211 Move X2, X31
	212 Call Math.Normal, X0, X1
	213 Move W8, [X28+2596]
	214 Move V13, V0
	215 Move V14, V1
	216 Move V12, V2
	217 Compare W8, 0
	218 JumpIfNotEqual {223}
	219 Move X0, X24
	220 Call 0x1C17CF4
	221 Move W8, 1
	222 Move [X28+2596], W8
	223 Move X0, [X24]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Multiply S0, S13, S13
	229 Multiply S1, S14, S14
	230 Add S0, S0, S1
	231 Multiply S1, S12, S12
	232 Add S0, S1, S0
	233 Multiply S0, S9, S0
	234 NotImplemented "Instruction FSQRT not yet implemented."
	235 NotImplemented "Instruction FCMP not yet implemented."
	236 Move S1, W31
	237 Move V1, [X31+12]
	238 Move X0, [X24]
	239 Multiply S2, S10, S14
	240 Multiply S1, S1, S13
	241 Add S1, S1, S2
	242 Multiply S2, S11, S12
	243 Add S1, S2, S1
	244 Move W8, [X0+224]
	245 NotImplemented "Instruction FDIV not yet implemented."
	246 Move S1, 1
	247 Move S2, -1
	248 NotImplemented "Instruction FMIN not yet implemented."
	249 NotImplemented "Instruction FCMP not yet implemented."
	250 NotImplemented "Instruction FCSEL not yet implemented."
	251 Compare W8, 0
	252 JumpIfNotEqual {254}
	253 Call 0x1C17DFC
	254 NotImplemented "Instruction FCVT not yet implemented."
	255 Call 0x3EB2B80
	256 Move V1, [X31+8]
	257 NotImplemented "Instruction INVALID not yet implemented."
	258 Multiply S1, S0, S1
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 Move X8, [X26+56]
	261 Compare X8, 0
	262 JumpIfEqual {315}
	263 Compare X22, 0
	264 JumpIfEqual {314}
	265 Move X1, [X8+32]
	266 Move X2, [X27]
	267 Move X0, X22
	268 Call HashSet`1<Object>.Add, X0, X1
	269 Compare X8, 0
	270 JumpIfEqual {313}
	271 Compare X22, 0
	272 JumpIfEqual {311}
	273 Move X1, [X8+32]
	274 Move X2, [X27]
	275 Move X0, X22
	276 Call HashSet`1<Object>.Add, X0, X1
	277 Move X26, X31
	278 Compare X25, 0
	279 JumpIfEqual {303}
	280 Move X8, [X25]
	281 Move X10, 0x78A000
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Move X10, [X10+3584]
	284 Move X1, [X10]
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move X0, X25
	294 Move W2, W31
	295 Call 0x1C5D788
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Add X8, X8, X9
	298 Add X0, X8, 312
	299 Move X8, [X0]
	300 Move X1, [X0+8]
	301 Move X0, X25
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move X25, 0x7E5000
	304 Move X25, [X25+2816]
	305 Compare X26, 0
	306 JumpIfNotEqual {345}
	307 Move W8, [X20+24]
	308 Add W23, W23, 1
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Call 0x1C17F20
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Call 0x3EB2AD0
	319 Move X26, [X0]
	320 Call 0x3EB2AE0
	321 Move X0, X22
	322 Move X20, [X31+160]
	323 Move X19, [X31+168]
	324 Move X22, [X31+144]
	325 Move X21, [X31+152]
	326 Move X24, [X31+128]
	327 Move X23, [X31+136]
	328 Move X26, [X31+112]
	329 Move X25, [X31+120]
	330 Move X28, [X31+96]
	331 Move X27, [X31+104]
	332 Move X29, [X31+80]
	333 Move X30, [X31+88]
	334 Move D9, [X31+64]
	335 Move D8, [X31+72]
	336 Move D11, [X31+48]
	337 Move D10, [X31+56]
	338 Move D13, [X31+32]
	339 Move D12, [X31+40]
	340 Move D15, [X31+16]
	341 Move D14, [X31+24]
	342 Add X31, X31, 176
	343 Return X0
	344 Call 0x1C17F20
	345 Move X0, X26
	346 Call 0x1C17F18
	347 Move X19, X0
	348 Move X26, X31
	349 Move X19, X0
	350 Compare X25, 0
	351 JumpIfEqual {375}
	352 Move X8, [X25]
	353 Move X10, 0x78A000
	354 NotImplemented "Instruction LDRH not yet implemented."
	355 Move X10, [X10+3584]
	356 Move X1, [X10]
	357 Compare X9, 0
	358 JumpIfEqual {365}
	359 Move X10, [X8+176]
	360 Add X10, X10, 8
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Subtract X9, X9, 1
	364 Add X10, X10, 16
	365 Move X0, X25
	366 Move W2, W31
	367 Call 0x1C5D788
	368 NotImplemented "Instruction LDRSW not yet implemented."
	369 Add X8, X8, X9
	370 Add X0, X8, 312
	371 Move X8, [X0]
	372 Move X1, [X0+8]
	373 Move X0, X25
	374 NotImplemented "Instruction BLR not yet implemented."
	375 Compare X26, 0
	376 JumpIfNotEqual {379}
	377 Move X0, X19
	378 Call 0x1D2D690
	379 Move X0, X26
	380 Call 0x1C17F18
	381 Call 0x1991590

Method: System.Void Flood(UnityEngine.ProBuilder.WingedEdge wing, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> selection)

Disassembly:
	0x0396A5F4 BL 0x1C16CF4
	0x0396A5F8 ADRP X0, 0x78A000
	0x0396A5FC LDR X0, [X0 + 0xE58]
	0x0396A600 BL 0x1C16CF4
	0x0396A604 ADRP X0, 0x7E5000
	0x0396A608 LDR X0, [X0 + 0xCF0]
	0x0396A60C BL 0x1C16CF4
	0x0396A610 ADRP X0, 0x7E5000
	0x0396A614 LDR X0, [X0 + 0xCF8]
	0x0396A618 BL 0x1C16CF4
	0x0396A61C ADRP X0, 0x7E5000
	0x0396A620 LDR X0, [X0 + 0x20]
	0x0396A624 BL 0x1C16CF4
	0x0396A628 ADRP X0, 0x7E5000
	0x0396A62C LDR X0, [X0 + 0xD00]
	0x0396A630 BL 0x1C16CF4
	0x0396A634 ADRP X0, 0x7E5000
	0x0396A638 LDR X0, [X0 + 0xD08]
	0x0396A63C BL 0x1C16CF4
	0x0396A640 ADRP X0, 0x7E5000
	0x0396A644 LDR X0, [X0 + 0xD10]
	0x0396A648 BL 0x1C16CF4
	0x0396A64C ADRP X0, 0x7E5000
	0x0396A650 LDR X0, [X0 + 0xD18]
	0x0396A654 BL 0x1C16CF4
	0x0396A658 ADRP X0, 0x7E5000
	0x0396A65C LDR X0, [X0 + 0xD20]
	0x0396A660 BL 0x1C16CF4
	0x0396A664 ADRP X0, 0x7E5000
	0x0396A668 LDR X0, [X0 + 0x28]
	0x0396A66C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA78000
	007 Move X21, 0x7E6000
	008 Move W8, [X22+2524]
	009 Move X21, [X21+808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7E6000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2524], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X1, X20
	029 Move X2, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move S0, [X8]
	033 Move S1, [X8+4]
	034 Move V2, [X8+8]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move S3, -1
	038 Move X0, X31
	039 Move X30, [X31+48]

Method: System.Void Flood(UnityEngine.ProBuilder.ProBuilderMesh pb, UnityEngine.ProBuilder.WingedEdge wing, UnityEngine.Vector3 wingNrm, System.Single maxAngle, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> selection)

Disassembly:
	0x0396A670 ADRP X0, 0x7E4000
	0x0396A674 LDR X0, [X0 + 0xAF8]
	0x0396A678 BL 0x1C16CF4
	0x0396A67C ADRP X0, 0x7E5000
	0x0396A680 LDR X0, [X0 + 0xD28]
	0x0396A684 BL 0x1C16CF4
	0x0396A688 ADRP X0, 0x7E5000
	0x0396A68C LDR X0, [X0 + 0xD30]
	0x0396A690 BL 0x1C16CF4
	0x0396A694 ADRP X0, 0x7E4000
	0x0396A698 LDR X0, [X0 + 0xB00]
	0x0396A69C BL 0x1C16CF4
	0x0396A6A0 ADRP X0, 0x7E5000
	0x0396A6A4 LDR X0, [X0 + 0xD38]
	0x0396A6A8 BL 0x1C16CF4
	0x0396A6AC ADRP X0, 0x7E5000
	0x0396A6B0 LDR X0, [X0 + 0xD40]
	0x0396A6B4 BL 0x1C16CF4
	0x0396A6B8 ADRP X0, 0x7E5000
	0x0396A6BC LDR X0, [X0 + 0x30]
	0x0396A6C0 BL 0x1C16CF4
	0x0396A6C4 ADRP X0, 0x7E5000
	0x0396A6C8 LDR X0, [X0 + 0xD48]
	0x0396A6CC BL 0x1C16CF4
	0x0396A6D0 ADRP X0, 0x7E5000
	0x0396A6D4 LDR X0, [X0 + 0xD50]
	0x0396A6D8 BL 0x1C16CF4
	0x0396A6DC ADRP X0, 0x7E5000
	0x0396A6E0 LDR X0, [X0 + 0xD58]
	0x0396A6E4 BL 0x1C16CF4
	0x0396A6E8 ADRP X0, 0x7E5000
	0x0396A6EC LDR X0, [X0 + 0xD60]
	0x0396A6F0 BL 0x1C16CF4
	0x0396A6F4 ADRP X0, 0x7E5000
	0x0396A6F8 LDR X0, [X0 + 0xD68]
	0x0396A6FC BL 0x1C16CF4
	0x0396A700 ADRP X0, 0x7E5000
	0x0396A704 LDR X0, [X0 + 0xD70]
	0x0396A708 BL 0x1C16CF4
	0x0396A70C ADRP X0, 0x7E5000
	0x0396A710 LDR X0, [X0 + 0xCB8]
	0x0396A714 BL 0x1C16CF4
	0x0396A718 ADRP X0, 0x7E5000
	0x0396A71C LDR X0, [X0 + 0xB68]
	0x0396A720 BL 0x1C16CF4
	0x0396A724 MOVZ W8, 0x1
	0x0396A728 STRB W8, [X19 + 0x9E3]
	0x0396A72C LDR X0, [X20]
	0x0396A730 BL 0x1C16F10
	0x0396A734 MOV X1, X31
	0x0396A738 MOV X19, X0
	0x0396A73C BL 0x396B150
	0x0396A740 CBZ X19, 0x396AD8C
	0x0396A744 ADRP X8, 0x7E5000
	0x0396A748 LDR X8, [X8 + 0xCE8]
	0x0396A74C STR X21, [X19 + 0x10]
	0x0396A750 STR X19, [X31 + 0x28]
	0x0396A754 ADRP X19, 0x7E5000
	0x0396A758 LDR X0, [X8]
	0x0396A75C ADRP X20, 0x7E5000
	0x0396A760 ADRP X21, 0x7E5000
	0x0396A764 LDR X19, [X19 + 0xCE0]
	0x0396A768 LDR X20, [X20 + 0xD38]
	0x0396A76C LDR X21, [X21 + 0xD18]
	0x0396A770 BL 0x1C16F10
	0x0396A774 LDR X1, [X19]
	0x0396A778 STR X0, [X31 + 0x8]
	0x0396A77C BL 0x2DBDE08
	0x0396A780 LDR X0, [X20]
	0x0396A784 BL 0x1C16F10
	0x0396A788 LDR X1, [X21]
	0x0396A78C STR X0, [X31 + 0x20]
	0x0396A790 BL 0x301B7C4
	0x0396A794 CBZ X22, 0x396AD8C
	0x0396A798 LDR W8, [X22 + 0x18]
	0x0396A79C LDR X20, [X31 + 0x28]
	0x0396A7A0 CMP W8, 0x1
	0x0396A7A4 B.LT 0x396AD68
	0x0396A7A8 ADRP X8, 0x7E4000
	0x0396A7AC ADRP X23, 0x7E5000
	0x0396A7B0 LDR X8, [X8 + 0xB00]
	0x0396A7B4 LDR X23, [X23 + 0xD30]
	0x0396A7B8 MOV W1, W31
	0x0396A7BC STR X22, [X31 + 0x10]
	0x0396A7C0 LDR X2, [X8]
	0x0396A7C4 MOV X0, X22
	0x0396A7C8 STR W1, [X31 + 0x1C]
	0x0396A7CC BL 0x301BCCC
	0x0396A7D0 CBZ X0, 0x396AD8C
	0x0396A7D4 LDR X8, [X0 + 0x38]
	0x0396A7D8 MOV X25, X0
	0x0396A7DC CBNZ X8, 0x396AD48
	0x0396A7E0 LDR X0, [X31 + 0x8]
	0x0396A7E4 CBZ X0, 0x396AD8C
	0x0396A7E8 ADRP X8, 0x7E5000
	0x0396A7EC LDR X8, [X8 + 0xCD8]
	0x0396A7F0 MOV X1, X25
	0x0396A7F4 LDR X2, [X8]
	0x0396A7F8 BL 0x2DBE4B0
	0x0396A7FC TBNZ X0, 0x0, 0x396AD48
	0x0396A800 LDR X0, [X20 + 0x10]
	0x0396A804 CBZ X0, 0x396AD8C
	0x0396A808 ADRP X8, 0x78A000
	0x0396A80C LDR W1, [X25 + 0x18]
	0x0396A810 LDR X8, [X8 + 0xDF8]
	0x0396A814 LDR X2, [X8]
	0x0396A818 BL 0x2DAA59C
	0x0396A81C TBNZ X0, 0x0, 0x396A840
	0x0396A820 LDR X0, [X20 + 0x10]
	0x0396A824 CBZ X0, 0x396AD8C
	0x0396A828 ADRP X8, 0x78A000
	0x0396A82C LDR W1, [X25 + 0x1C]
	0x0396A830 LDR X8, [X8 + 0xDF8]
	0x0396A834 LDR X2, [X8]
	0x0396A838 BL 0x2DAA59C
	0x0396A83C TBZ X0, 0x0, 0x396AD48
	0x0396A840 ADRP X8, 0x7E5000
	0x0396A844 LDR X8, [X8 + 0x30]
	0x0396A848 LDR X0, [X8]
	0x0396A84C BL 0x1C16F10
	0x0396A850 ADRP X8, 0x7E5000
	0x0396A854 LDR X8, [X8 + 0x28]
	0x0396A858 MOV X24, X0
	0x0396A85C LDR X1, [X8]
	0x0396A860 BL 0x301B7C4
	0x0396A864 ADRP X22, 0x7E5000
	0x0396A868 ADRP X28, 0x7E5000
	0x0396A86C LDR W26, [X25 + 0x18]
	0x0396A870 LDR X21, [X31 + 0x8]
	0x0396A874 LDR X22, [X22 + 0xCD0]
	0x0396A878 LDR X28, [X28 + 0x20]
	0x0396A87C MOVZ W19, 0x801
	0x0396A880 MOV X27, X25
	0x0396A884 CBZ X27, 0x396A934
	0x0396A888 SUBS W19, W19, 0x1
	0x0396A88C B.EQ 0x396A934
	0x0396A890 LDR X2, [X22]
	0x0396A894 MOV X0, X21
	0x0396A898 MOV X1, X27
	0x0396A89C BL 0x2DBEF30
	0x0396A8A0 CBZ X24, 0x396AD8C
	0x0396A8A4 LDR W10, [X24 + 0x1C]
	0x0396A8A8 LDR X8, [X24 + 0x10]
	0x0396A8AC LDR X9, [X28]
	0x0396A8B0 ADD W10, W10, 0x1
	0x0396A8B4 STR W10, [X24 + 0x1C]
	0x0396A8B8 CBZ X8, 0x396AD8C
	0x0396A8BC LDRSW X10, [X24 + 0x18]
	0x0396A8C0 LDR W11, [X8 + 0x18]
	0x0396A8C4 CMP W10, W11
	0x0396A8C8 B.CS 0x396A8E0
	0x0396A8CC ADD W9, W10, 0x1
	0x0396A8D0 ADD X8, X8, X10, 0x3, LSL
	0x0396A8D4 STR W9, [X24 + 0x18]
	0x0396A8D8 STR X27, [X8 + 0x20]
	0x0396A8DC B 0x396A8F8
	0x0396A8E0 LDR X8, [X9 + 0x20]
	0x0396A8E4 MOV X0, X24
	0x0396A8E8 MOV X1, X27
	0x0396A8EC LDR X8, [X8 + 0xC0]
	0x0396A8F0 LDR X2, [X8 + 0x70]
	0x0396A8F4 BL 0x301BF90
	0x0396A8F8 ADRP X8, 0x7E5000
	0x0396A8FC LDR X8, [X8 + 0x328]
	0x0396A900 LDR X0, [X8]
	0x0396A904 LDP W9, W8, [X27 + 0x18]
	0x0396A908 LDR W10, [X0 + 0xE0]
	0x0396A90C CMP W26, W9
	0x0396A910 CSEL W26, W8, W9, EQ
	0x0396A914 CBNZ W10, 0x396A91C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X22, 0xA78000
	023 Move W8, [X22+2525]
	024 Move X19, X2
	025 Move V8, V3
	026 Move V10, V2
	027 Move V11, V1
	028 Move V15, V0
	029 Move X20, X1
	030 Move X21, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Move X0, 0x7E6000
	036 Move X0, [X0+808]
	037 Call 0x1C17CF4
	038 Move X0, 0x7E5000
	039 Move X0, [X0+2184]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E4000
	042 Move X0, [X0+3624]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+2525], W8
	046 Move X24, 0x7E4000
	047 Move X25, 0x7E5000
	048 Move X26, 0x7E6000
	049 Multiply S0, S15, S15
	050 Multiply S1, S11, S11
	051 Move X22, 0x78A000
	052 Move X8, -48758784
	053 Move X9, -48754688
	054 Move X24, [X24+3624]
	055 Move X25, [X25+2184]
	056 Move X26, [X26+808]
	057 Move X22, [X22+1448]
	058 Add S0, S0, S1
	059 Move V9, [X8+4072]
	060 Move V1, [X9+1096]
	061 Multiply S2, S10, S10
	062 Move X27, 0xA6F000
	063 Add S0, S2, S0
	064 Move W28, 1
	065 Move X29, X20
	066 Move [X31+4], S1
	067 Move [X31+12], S8
	068 Move [X31+12], S0
	069 Compare X29, 0
	070 JumpIfEqual {206}
	071 Move X23, [X29+56]
	072 Compare X23, 0
	073 JumpIfEqual {182}
	074 Compare X19, 0
	075 JumpIfEqual {206}
	076 Move X1, [X23+32]
	077 Move X2, [X24]
	078 Move X0, X19
	079 Call HashSet`1<Object>.Contains, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {182}
	084 Move X1, [X23+32]
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move X0, X21
	087 Move X2, X31
	088 Call Math.Normal, X0, X1
	089 Move W8, [X27+2596]
	090 Move V12, V0
	091 Move V13, V1
	092 Move V14, V2
	093 Compare W8, 0
	094 JumpIfNotEqual {98}
	095 Move X0, X22
	096 Call 0x1C17CF4
	097 Move [X27+2596], W28
	098 Move X0, [X22]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Multiply S0, S12, S12
	104 Multiply S1, S13, S13
	105 Add S0, S0, S1
	106 Multiply S1, S14, S14
	107 Add S0, S1, S0
	108 Move V1, [X31+12]
	109 Multiply S0, S1, S0
	110 NotImplemented "Instruction FSQRT not yet implemented."
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Move S1, W31
	113 Move X0, [X22]
	114 Multiply S1, S15, S12
	115 Multiply S2, S11, S13
	116 Add S1, S1, S2
	117 Multiply S2, S10, S14
	118 Add S1, S2, S1
	119 Move W8, [X0+224]
	120 NotImplemented "Instruction FDIV not yet implemented."
	121 Move S1, 1
	122 Move S2, -1
	123 NotImplemented "Instruction FMIN not yet implemented."
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move V8, V9
	126 Move V9, V15
	127 Move V15, V11
	128 Move V11, V10
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 NotImplemented "Instruction FCVT not yet implemented."
	134 Call 0x3EB2B80
	135 Move V1, [X31+4]
	136 Move V10, V11
	137 Move V11, V15
	138 Move V15, V9
	139 Move V9, V8
	140 Move V8, [X31+8]
	141 NotImplemented "Instruction INVALID not yet implemented."
	142 Multiply S1, S0, S1
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move X1, [X23+32]
	145 Move X2, [X25]
	146 Move X0, X19
	147 Call HashSet`1<Object>.Add, X0, X1
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {182}
	152 Move X0, [X26]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X23
	159 Move V0, V12
	160 Move V1, V13
	161 Move V2, V14
	162 Move X2, [X25]
	163 Move X0, X19
	164 Call HashSet`1<Object>.Add, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {182}
	169 Move X0, [X26]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X21
	175 Move X1, X23
	176 Move V0, V15
	177 Move V1, V11
	178 Move V2, V10
	179 Move V3, V8
	180 Move X2, X19
	181 Call ElementSelection.Flood, X0, X1, X2, V0, X3
	182 Move X29, [X29+40]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X20, [X31+160]
	185 Move X19, [X31+168]
	186 Move X22, [X31+144]
	187 Move X21, [X31+152]
	188 Move X24, [X31+128]
	189 Move X23, [X31+136]
	190 Move X26, [X31+112]
	191 Move X25, [X31+120]
	192 Move X28, [X31+96]
	193 Move X27, [X31+104]
	194 Move X29, [X31+80]
	195 Move X30, [X31+88]
	196 Move D9, [X31+64]
	197 Move D8, [X31+72]
	198 Move D11, [X31+48]
	199 Move D10, [X31+56]
	200 Move D13, [X31+32]
	201 Move D12, [X31+40]
	202 Move D15, [X31+16]
	203 Move D14, [X31+24]
	204 Add X31, X31, 176
	205 Return 
	206 Call 0x1C17F20

Method: System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> FloodSelection(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces, System.Single maxAngleDiff)

Disassembly:
	0x0396A918 BL 0x1C16DFC
	0x0396A91C MOV X0, X27
	0x0396A920 MOV W1, W26
	0x0396A924 BL 0x396AD94
	0x0396A928 MOV X27, X0
	0x0396A92C CMP X0, X25
	0x0396A930 B.NE 0x396A884
	0x0396A934 ADRP X8, 0x7E5000
	0x0396A938 LDR X8, [X8 + 0xD40]
	0x0396A93C LDR X0, [X8]
	0x0396A940 BL 0x1C16F10
	0x0396A944 ADRP X8, 0x7E5000
	0x0396A948 LDR X8, [X8 + 0xD20]
	0x0396A94C MOV X25, X0
	0x0396A950 LDR X1, [X8]
	0x0396A954 BL 0x2F2AD1C
	0x0396A958 ADRP X27, 0x7E4000
	0x0396A95C LDR X27, [X27 + 0xB00]
	0x0396A960 CBZ X24, 0x396AD8C
	0x0396A964 LDR W8, [X24 + 0x18]
	0x0396A968 ADRP X28, 0x7E5000
	0x0396A96C LDR X28, [X28 + 0xD48]
	0x0396A970 CMP W8, 0x1
	0x0396A974 B.LT 0x396AA54
	0x0396A978 MOV W26, W31
	0x0396A97C LDR X2, [X27]
	0x0396A980 MOV X0, X24
	0x0396A984 MOV W1, W26
	0x0396A988 BL 0x301BCCC
	0x0396A98C MOV X21, X0
	0x0396A990 MOV W19, W26
	0x0396A994 CMP W19, 0x0
	0x0396A998 B.LE 0x396AA44
	0x0396A99C CBZ X21, 0x396AD8C
	0x0396A9A0 LDR X2, [X27]
	0x0396A9A4 LDR X22, [X21 + 0x18]
	0x0396A9A8 SUB W19, W19, 0x1
	0x0396A9AC MOV X0, X24
	0x0396A9B0 MOV W1, W19
	0x0396A9B4 BL 0x301BCCC
	0x0396A9B8 CBZ X0, 0x396AD8C
	0x0396A9BC LDR W8, [X0 + 0x18]
	0x0396A9C0 UBFM X9, X22, 0x20, 0x3F
	0x0396A9C4 CMP W9, W8
	0x0396A9C8 B.NE 0x396A994
	0x0396A9CC LDR X3, [X28]
	0x0396A9D0 ADD X0, X31, 0x48
	0x0396A9D4 MOV W1, W19
	0x0396A9D8 MOV W2, W26
	0x0396A9DC STR X31, [X31 + 0x48]
	0x0396A9E0 BL 0x25E69F8
	0x0396A9E4 CBZ X25, 0x396AD8C
	0x0396A9E8 ADRP X9, 0x7E5000
	0x0396A9EC LDR X1, [X31 + 0x48]
	0x0396A9F0 LDR W10, [X25 + 0x1C]
	0x0396A9F4 LDR X8, [X25 + 0x10]
	0x0396A9F8 LDR X9, [X9 + 0xCF8]
	0x0396A9FC ADD W10, W10, 0x1
	0x0396AA00 LDR X9, [X9]
	0x0396AA04 STR W10, [X25 + 0x1C]
	0x0396AA08 CBZ X8, 0x396AD8C
	0x0396AA0C LDRSW X10, [X25 + 0x18]
	0x0396AA10 LDR W11, [X8 + 0x18]
	0x0396AA14 CMP W10, W11
	0x0396AA18 B.CS 0x396AA30
	0x0396AA1C ADD W9, W10, 0x1
	0x0396AA20 ADD X8, X8, X10, 0x3, LSL
	0x0396AA24 STR W9, [X25 + 0x18]
	0x0396AA28 STR X1, [X8 + 0x20]
	0x0396AA2C B 0x396AA44
	0x0396AA30 LDR X8, [X9 + 0x20]
	0x0396AA34 MOV X0, X25
	0x0396AA38 LDR X8, [X8 + 0xC0]
	0x0396AA3C LDR X2, [X8 + 0x70]
	0x0396AA40 BL 0x2F2B514
	0x0396AA44 LDR W8, [X24 + 0x18]
	0x0396AA48 ADD W26, W26, 0x1
	0x0396AA4C CMP W26, W8
	0x0396AA50 B.LT 0x396A97C
	0x0396AA54 CBZ X25, 0x396AD8C
	0x0396AA58 ADRP X22, 0x7E5000
	0x0396AA5C LDR X22, [X22 + 0xB68]
	0x0396AA60 LDR W9, [X25 + 0x18]
	0x0396AA64 LDR X0, [X22]
	0x0396AA68 STR W9, [X31 + 0x34]
	0x0396AA6C LDR W8, [X0 + 0xE0]
	0x0396AA70 CBNZ W8, 0x396AA7C
	0x0396AA74 BL 0x1C16DFC
	0x0396AA78 LDR X0, [X22]
	0x0396AA7C LDR X8, [X0 + 0xB8]
	0x0396AA80 LDR X19, [X8 + 0x70]
	0x0396AA84 CBNZ X19, 0x396AAD8
	0x0396AA88 LDR W8, [X0 + 0xE0]
	0x0396AA8C CBNZ W8, 0x396AA98
	0x0396AA90 BL 0x1C16DFC
	0x0396AA94 LDR X0, [X22]
	0x0396AA98 LDR X8, [X0 + 0xB8]
	0x0396AA9C LDR X21, [X8]
	0x0396AAA0 ADRP X8, 0x7E5000
	0x0396AAA4 LDR X8, [X8 + 0xCC0]
	0x0396AAA8 LDR X0, [X8]
	0x0396AAAC BL 0x1C16F10
	0x0396AAB0 ADRP X8, 0x7E5000
	0x0396AAB4 LDR X8, [X8 + 0xD60]
	0x0396AAB8 MOV X1, X21
	0x0396AABC MOV X3, X31
	0x0396AAC0 MOV X19, X0
	0x0396AAC4 LDR X2, [X8]
	0x0396AAC8 BL 0x2956CF8
	0x0396AACC LDR X8, [X22]
	0x0396AAD0 LDR X8, [X8 + 0xB8]
	0x0396AAD4 STR X19, [X8 + 0x70]
	0x0396AAD8 ADRP X8, 0x7E5000
	0x0396AADC LDR X8, [X8 + 0xD10]
	0x0396AAE0 MOV X0, X25
	0x0396AAE4 MOV X1, X19
	0x0396AAE8 LDR X2, [X8]
	0x0396AAEC BL 0x2F2D240
	0x0396AAF0 ADRP X8, 0x78A000
	0x0396AAF4 LDR X8, [X8 + 0xE58]
	0x0396AAF8 LDR W19, [X31 + 0x34]
	0x0396AAFC LDR X0, [X8]
	0x0396AB00 MOV W1, W19
	0x0396AB04 BL 0x1C16D6C
	0x0396AB08 SUBS W8, W19, 0x1
	0x0396AB0C B.MI 0x396AD48
	0x0396AB10 LDR W9, [X31 + 0x34]
	0x0396AB14 MOV X27, X0
	0x0396AB18 MOV W28, W8
	0x0396AB1C ADD X26, X0, 0x20
	0x0396AB20 SUB W19, W9, 0x2
	0x0396AB24 LDR X2, [X23]
	0x0396AB28 MOV X0, X25
	0x0396AB2C MOV W1, W28
	0x0396AB30 BL 0x2F2B224
	0x0396AB34 LDR X2, [X23]
	0x0396AB38 MOV X21, X0
	0x0396AB3C MOV X0, X25
	0x0396AB40 MOV W1, W28
	0x0396AB44 BL 0x2F2B224
	0x0396AB48 CBZ X27, 0x396AD8C
	0x0396AB4C LDR W8, [X27 + 0x18]
	0x0396AB50 CMP X28, X8
	0x0396AB54 B.CS 0x396AD90
	0x0396AB58 MOV W9, W19
	0x0396AB5C ADD X8, X27, X28, 0x2, LSL
	0x0396AB60 STR X9, [X31 + 0x40]
	0x0396AB64 ADRP X10, 0x7E5000
	0x0396AB68 LDR W8, [X8 + 0x20]
	0x0396AB6C LDR X10, [X10 + 0xD00]
	0x0396AB70 UBFM X9, X0, 0x20, 0x3F
	0x0396AB74 MOV X0, X24
	0x0396AB78 ADD W8, W8, W21
	0x0396AB7C LDR X3, [X10]
	0x0396AB80 SUB W8, W9, W8
	0x0396AB84 ADD W19, W8, 0x1
	0x0396AB88 MOV W1, W21
	0x0396AB8C MOV W2, W19
	0x0396AB90 BL 0x301CC30
	0x0396AB94 ADRP X8, 0x7E5000
	0x0396AB98 LDR X8, [X8 + 0xD08]
	0x0396AB9C MOV X29, X0
	0x0396ABA0 MOV X0, X24
	0x0396ABA4 MOV W1, W21
	0x0396ABA8 LDR X3, [X8]
	0x0396ABAC MOV W2, W19
	0x0396ABB0 BL 0x301DAD8
	0x0396ABB4 SUBS X8, X28, 0x1
	0x0396ABB8 STR X8, [X31 + 0x38]
	0x0396ABBC B.LT 0x396AC20
	0x0396ABC0 LDR X21, [X31 + 0x40]

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0xA78000
	017 Move X20, 0x7E5000
	018 Move W8, [X21+2526]
	019 Move X20, [X20+2824]
	020 Move V8, V0
	021 Move X22, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {56}
	027 Move X0, 0x7E6000
	028 Move X0, [X0+808]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E5000
	031 Move X0, [X0+2184]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E4000
	034 Move X0, [X0+3624]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E5000
	037 Move X0, [X0+2192]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E6000
	040 Move X0, [X0+1656]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E5000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E5000
	046 Move X0, [X0+2808]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E5000
	049 Move X0, [X0+2816]
	050 Call 0x1C17CF4
	051 Move X0, 0x7E5000
	052 Move X0, [X0+2824]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+2526], W8
	056 Move X0, [X20]
	057 Move X24, 0x7E5000
	058 Move X21, 0x7E6000
	059 Move X23, 0x7E5000
	060 Move W8, [X0+224]
	061 Move X24, [X24+2200]
	062 Move X21, [X21+1656]
	063 Move X23, [X23+2192]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call WingedEdge.GetWingedEdges, X0, X1
	071 Move X8, [X24]
	072 Move X20, X0
	073 Move X0, X8
	074 Call 0x1C17F10
	075 Move X2, [X21]
	076 Move X1, X22
	077 Move X21, X0
	078 Call HashSet`1<Object>..ctor, X0, X1
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X1, [X23]
	082 Move X22, X0
	083 Call HashSet`1<Object>..ctor, X0
	084 Compare X20, 0
	085 JumpIfEqual {201}
	086 Move W8, [X20+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X25, 0x7E5000
	089 Move X26, 0x7E4000
	090 Move X27, 0x7E5000
	091 Move X28, 0x7E6000
	092 Move X25, [X25+2816]
	093 Move X26, [X26+3624]
	094 Move X27, [X27+2184]
	095 Move X28, [X28+808]
	096 Move W23, W31
	097 Move X2, [X25]
	098 Move X0, X20
	099 Move W1, W23
	100 Call List`1<Object>.get_Item, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {201}
	103 Compare X22, 0
	104 JumpIfEqual {201}
	105 Move X1, [X0+32]
	106 Move X2, [X26]
	107 Move X0, X22
	108 Call HashSet`1<Object>.Contains, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {181}
	113 Move X2, [X25]
	114 Move X0, X20
	115 Move W1, W23
	116 Call List`1<Object>.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {201}
	119 Compare X21, 0
	120 JumpIfEqual {201}
	121 Move X1, [X0+32]
	122 Move X2, [X26]
	123 Move X0, X21
	124 Call HashSet`1<Object>.Contains, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {181}
	129 Move X2, [X25]
	130 Move X0, X20
	131 Move W1, W23
	132 Call List`1<Object>.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {201}
	135 Move X1, [X0+32]
	136 Move X2, [X27]
	137 Move X0, X22
	138 Call HashSet`1<Object>.Add, X0, X1
	139 Move X2, [X25]
	140 Move X0, X20
	141 Move W1, W23
	142 Call List`1<Object>.get_Item, X0, X1
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move X24, X0
	145 Move X2, [X25]
	146 Move X0, X20
	147 Move W1, W23
	148 Call List`1<Object>.get_Item, X0, X1
	149 Compare X0, 0
	150 JumpIfEqual {201}
	151 Move X1, [X0+32]
	152 Move X0, X19
	153 Move X2, X31
	154 Call Math.Normal, X0, X1
	155 Move X0, [X28]
	156 Move V9, V0
	157 Move V10, V1
	158 Move V11, V2
	159 Move X0, [X28]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {165}
	163 Call 0x1C17DFC
	164 Move X0, [X28]
	165 Move X8, [X0+184]
	166 Move S9, [X8]
	167 Move S10, [X8+4]
	168 Move V11, [X8+8]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X19
	174 Move X1, X24
	175 Move V0, V9
	176 Move V1, V10
	177 Move V2, V11
	178 Move V3, V8
	179 Move X2, X22
	180 Call ElementSelection.Flood, X0, X1, X2, V0, X3
	181 Move W8, [X20+24]
	182 Add W23, W23, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X0, X22
	185 Move X20, [X31+112]
	186 Move X19, [X31+120]
	187 Move X22, [X31+96]
	188 Move X21, [X31+104]
	189 Move X24, [X31+80]
	190 Move X23, [X31+88]
	191 Move X26, [X31+64]
	192 Move X25, [X31+72]
	193 Move X28, [X31+48]
	194 Move X27, [X31+56]
	195 Move X30, [X31+32]
	196 Move D9, [X31+16]
	197 Move D8, [X31+24]
	198 Move D11, [X31+128]
	199 Move D10, [X31+136]
	200 Return X0
	201 Call 0x1C17F20

Method: System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> GetFaceLoop(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces, System.Boolean ring = False)

Disassembly:
	0x0396ABC4 MOV W22, W28
	0x0396ABC8 LDR X2, [X23]
	0x0396ABCC MOV X0, X25
	0x0396ABD0 MOV W1, W21
	0x0396ABD4 BL 0x2F2B224
	0x0396ABD8 LDR X2, [X23]
	0x0396ABDC UBFM X20, X0, 0x20, 0x3F
	0x0396ABE0 MOV X0, X25
	0x0396ABE4 MOV W1, W28
	0x0396ABE8 BL 0x2F2B224
	0x0396ABEC UBFM X8, X0, 0x20, 0x3F
	0x0396ABF0 CMP W20, W8
	0x0396ABF4 B.LE 0x396AC10
	0x0396ABF8 LDR W8, [X27 + 0x18]
	0x0396ABFC CMP X21, X8
	0x0396AC00 B.CS 0x396AD90
	0x0396AC04 LDR W8, [X26, X21, LSL #2]
	0x0396AC08 ADD W8, W8, W19
	0x0396AC0C STR W8, [X26, X21, LSL #2]
	0x0396AC10 SUB W22, W22, 0x1
	0x0396AC14 CMP W22, 0x0
	0x0396AC18 SUB X21, X21, 0x1
	0x0396AC1C B.GT 0x396ABC8
	0x0396AC20 LDR W8, [X31 + 0x34]
	0x0396AC24 LDR X20, [X31 + 0x28]
	0x0396AC28 CMP W8, 0x2
	0x0396AC2C B.LT 0x396ACD8
	0x0396AC30 LDR X19, [X20 + 0x18]
	0x0396AC34 CBNZ X19, 0x396AC68
	0x0396AC38 ADRP X8, 0x7E5000
	0x0396AC3C LDR X8, [X8 + 0x70]
	0x0396AC40 LDR X0, [X8]
	0x0396AC44 BL 0x1C16F10
	0x0396AC48 ADRP X8, 0x7E5000
	0x0396AC4C LDR X8, [X8 + 0xD68]
	0x0396AC50 MOV X1, X20
	0x0396AC54 MOV X3, X31
	0x0396AC58 MOV X19, X0
	0x0396AC5C LDR X2, [X8]
	0x0396AC60 BL 0x2D2F428
	0x0396AC64 STR X19, [X20 + 0x18]
	0x0396AC68 ADRP X8, 0x7E5000
	0x0396AC6C LDR X8, [X8 + 0xCC8]
	0x0396AC70 MOV X0, X29
	0x0396AC74 MOV X1, X19
	0x0396AC78 LDR X2, [X8]
	0x0396AC7C BL 0x21B36AC
	0x0396AC80 TBNZ X0, 0x0, 0x396ACD8
	0x0396AC84 LDR X19, [X20 + 0x20]
	0x0396AC88 CBNZ X19, 0x396ACBC
	0x0396AC8C ADRP X8, 0x7E5000
	0x0396AC90 LDR X8, [X8 + 0x70]
	0x0396AC94 LDR X0, [X8]
	0x0396AC98 BL 0x1C16F10
	0x0396AC9C ADRP X8, 0x7E5000
	0x0396ACA0 LDR X8, [X8 + 0xD70]
	0x0396ACA4 MOV X1, X20
	0x0396ACA8 MOV X3, X31
	0x0396ACAC MOV X19, X0
	0x0396ACB0 LDR X2, [X8]
	0x0396ACB4 BL 0x2D2F428
	0x0396ACB8 STR X19, [X20 + 0x20]
	0x0396ACBC ADRP X8, 0x7E5000
	0x0396ACC0 LDR X8, [X8 + 0xCC8]
	0x0396ACC4 MOV X0, X29
	0x0396ACC8 MOV X1, X19
	0x0396ACCC LDR X2, [X8]
	0x0396ACD0 BL 0x21B36AC
	0x0396ACD4 TBZ X0, 0x0, 0x396AD38
	0x0396ACD8 LDR X0, [X31 + 0x20]
	0x0396ACDC CBZ X0, 0x396AD8C
	0x0396ACE0 ADRP X9, 0x7E5000
	0x0396ACE4 LDR W10, [X0 + 0x1C]
	0x0396ACE8 LDR X8, [X0 + 0x10]
	0x0396ACEC LDR X9, [X9 + 0xCF0]
	0x0396ACF0 ADD W10, W10, 0x1
	0x0396ACF4 LDR X9, [X9]
	0x0396ACF8 STR W10, [X0 + 0x1C]
	0x0396ACFC CBZ X8, 0x396AD8C
	0x0396AD00 LDRSW X10, [X0 + 0x18]
	0x0396AD04 LDR W11, [X8 + 0x18]
	0x0396AD08 CMP W10, W11
	0x0396AD0C B.CS 0x396AD24
	0x0396AD10 ADD W9, W10, 0x1
	0x0396AD14 ADD X8, X8, X10, 0x3, LSL
	0x0396AD18 STR W9, [X0 + 0x18]
	0x0396AD1C STR X29, [X8 + 0x20]
	0x0396AD20 B 0x396AD38
	0x0396AD24 LDR X8, [X9 + 0x20]
	0x0396AD28 MOV X1, X29
	0x0396AD2C LDR X8, [X8 + 0xC0]
	0x0396AD30 LDR X2, [X8 + 0x70]
	0x0396AD34 BL 0x301BF90
	0x0396AD38 CMP X28, 0x0
	0x0396AD3C LDP X28, X8, [X31 + 0x38]
	0x0396AD40 SUB W19, W8, 0x1
	0x0396AD44 B.GT 0x396AB24
	0x0396AD48 LDR X22, [X31 + 0x10]
	0x0396AD4C LDR W1, [X31 + 0x1C]
	0x0396AD50 LDR W8, [X22 + 0x18]
	0x0396AD54 ADD W1, W1, 0x1
	0x0396AD58 CMP W1, W8
	0x0396AD5C ADRP X8, 0x7E4000
	0x0396AD60 LDR X8, [X8 + 0xB00]
	0x0396AD64 B.LT 0x396A7C0
	0x0396AD68 LDR X0, [X31 + 0x20]
	0x0396AD6C LDP X20, X19, [X31 + 0xA0]
	0x0396AD70 LDP X22, X21, [X31 + 0x90]
	0x0396AD74 LDP X24, X23, [X31 + 0x80]
	0x0396AD78 LDP X26, X25, [X31 + 0x70]
	0x0396AD7C LDP X28, X27, [X31 + 0x60]
	0x0396AD80 LDP X29, X30, [X31 + 0x50]
	0x0396AD84 ADD X31, X31, 0xB0
	0x0396AD88 RET
	0x0396AD8C BL 0x1C16F20
	0x0396AD90 BL 0x1C16F28
	0x0396AD94 STP X30, X21, [X31 - 0x20]!
	0x0396AD98 STP X20, X19, [X31 + 0x10]
	0x0396AD9C CBZ X0, 0x396AE10
	0x0396ADA0 MOV X2, X31
	0x0396ADA4 MOV W19, W1
	0x0396ADA8 MOV X20, X0
	0x0396ADAC BL 0x394245C
	0x0396ADB0 MOV X1, X31
	0x0396ADB4 CBZ X0, 0x396AE00
	0x0396ADB8 CMP X0, X20
	0x0396ADBC B.EQ 0x396AE00
	0x0396ADC0 MOVZ W21, 0x801
	0x0396ADC4 SUBS W21, W21, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xA78000
	012 Move X23, 0x78A000
	013 Move W8, [X22+2527]
	014 Move X23, [X23+1432]
	015 Move W20, W2
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x7E6000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E6000
	026 Move X0, [X0+1648]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E5000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E5000
	032 Move X0, [X0+2200]
	033 Call 0x1C17CF4
	034 Move X0, 0x78A000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E5000
	038 Move X0, [X0+2824]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2527], W8
	042 Move X0, [X23]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {122}
	055 Compare X19, 0
	056 JumpIfEqual {129}
	057 Move X8, 0x7E5000
	058 Move X8, [X8+2200]
	059 Move X22, 0x7E5000
	060 Move X23, 0x7E5000
	061 Move X0, [X8]
	062 Move X22, [X22+2192]
	063 Move X23, [X23+2824]
	064 Call 0x1C17F10
	065 Move X1, [X22]
	066 Move X22, X0
	067 Call HashSet`1<Object>..ctor, X0
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move W1, W31
	075 Move X2, X31
	076 Call WingedEdge.GetWingedEdges, X0, X1
	077 Move X8, [X19+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X25, 0x7E6000
	080 Move X26, 0x7E6000
	081 Move X25, [X25+808]
	082 Move X26, [X26+1648]
	083 Move X21, X0
	084 Move X24, X31
	085 And X8, X8, 0
	086 Add X27, X19, 32
	087 And W20, W20, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X25]
	090 Move X23, [X27]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X23
	097 Move W2, W20
	098 Call ElementSelection.GetFaceLoop, X0, X1, X2
	099 Compare X22, 0
	100 JumpIfEqual {121}
	101 Move X2, [X26]
	102 Move X1, X0
	103 Move X0, X22
	104 Call HashSet`1<Object>.UnionWith, X0, X1
	105 Move W8, [X19+24]
	106 Add X24, X24, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X22
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X24, [X31+32]
	114 Move X23, [X31+40]
	115 Move X26, [X31+16]
	116 Move X25, [X31+24]
	117 Move X30, [X31+80]
	118 Move X27, [X31+88]
	119 Return X0
	120 Call 0x1C17F28
	121 Call 0x1C17F20
	122 Move X0, 0x78F000
	123 Move X0, [X0+1320]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X19, X0
	127 Move X0, 0x7E4000
	128 Move X0, [X0+3728]
	129 Move X0, 0x78F000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0x7E5000
	135 Move X0, [X0+1600]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentNullException..ctor, X0, X1
	141 Move X0, 0x7E6000
	142 Move X0, [X0+3160]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

Method: System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> GetFaceRingAndLoop(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces)

Disassembly:
	0x0396AF9C ADRP X20, 0xA77000
	0x0396AFA0 LDRB W8, [X20 + 0x9E8]
	0x0396AFA4 MOV X19, X2
	0x0396AFA8 TBNZ X8, 0x0, 0x396AFCC
	0x0396AFAC ADRP X0, 0x7E5000
	0x0396AFB0 LDR X0, [X0 + 0xD80]
	0x0396AFB4 BL 0x1C16CF4
	0x0396AFB8 ADRP X0, 0x7E4000
	0x0396AFBC LDR X0, [X0 + 0xC40]
	0x0396AFC0 BL 0x1C16CF4
	0x0396AFC4 MOVZ W8, 0x1
	0x0396AFC8 STRB W8, [X20 + 0x9E8]
	0x0396AFCC CBZ X19, 0x396AFE8
	0x0396AFD0 LDR W8, [X19 + 0x18]
	0x0396AFD4 LDP X20, X19, [X31 + 0x10]
	0x0396AFD8 CMP W8, 0x2
	0x0396AFDC CSET W0, LT
	0x0396AFE0 LDR X30, [X31], #0x20
	0x0396AFE4 RET
	0x0396AFE8 BL 0x1C16F20
	0x0396AFEC STR X30, [X31 - 0x20]!
	0x0396AFF0 STP X20, X19, [X31 + 0x10]
	0x0396AFF4 ADRP X20, 0xA77000
	0x0396AFF8 LDRB W8, [X20 + 0x9E9]
	0x0396AFFC MOV X19, X2
	0x0396B000 TBNZ X8, 0x0, 0x396B024
	0x0396B004 ADRP X0, 0x7E4000
	0x0396B008 LDR X0, [X0 + 0xD80]
	0x0396B00C BL 0x1C16CF4
	0x0396B010 ADRP X0, 0x7E3000
	0x0396B014 LDR X0, [X0 + 0xC48]
	0x0396B018 BL 0x1C16CF4
	0x0396B01C MOVZ W8, 0x1
	0x0396B020 STRB W8, [X20 + 0x9E9]
	0x0396B024 CBZ X19, 0x396B048
	0x0396B028 ADRP X8, 0x7E3000
	0x0396B02C LDR X8, [X8 + 0xC48]
	0x0396B030 MOV X0, X19
	0x0396B034 LDP X20, X19, [X31 + 0x10]
	0x0396B038 MOV W1, W31
	0x0396B03C LDR X2, [X8]
	0x0396B040 LDR X30, [X31], #0x20
	0x0396B044 B 0x301BCCC
	0x0396B048 BL 0x1C16F20
	0x0396B04C MOV X0, X1
	0x0396B050 RET
	0x0396B054 MOV X0, X1
	0x0396B058 RET
	0x0396B05C MOV X0, X1
	0x0396B060 RET
	0x0396B064 MOV X0, X1
	0x0396B068 RET
	0x0396B06C STR X30, [X31 - 0x10]!
	0x0396B070 CBZ X1, 0x396B080
	0x0396B074 LDR X0, [X1 + 0x18]
	0x0396B078 LDR X30, [X31], #0x10
	0x0396B07C RET
	0x0396B080 BL 0x1C16F20
	0x0396B084 STR X30, [X31 - 0x10]!
	0x0396B088 CBZ X1, 0x396B098
	0x0396B08C LDR X0, [X1 + 0x18]
	0x0396B090 LDR X30, [X31], #0x10
	0x0396B094 RET
	0x0396B098 BL 0x1C16F20
	0x0396B09C STR X30, [X31 - 0x10]!
	0x0396B0A0 CBZ X1, 0x396B0B0
	0x0396B0A4 LDR X0, [X1 + 0x18]
	0x0396B0A8 LDR X30, [X31], #0x10
	0x0396B0AC RET
	0x0396B0B0 BL 0x1C16F20
	0x0396B0B4 STR X30, [X31 - 0x10]!
	0x0396B0B8 CBZ X1, 0x396B0C8
	0x0396B0BC LDR X0, [X1 + 0x10]
	0x0396B0C0 LDR X30, [X31], #0x10
	0x0396B0C4 RET
	0x0396B0C8 BL 0x1C16F20
	0x0396B0CC SUB X31, X31, 0x30
	0x0396B0D0 STP X30, X21, [X31 + 0x10]
	0x0396B0D4 STP X20, X19, [X31 + 0x20]
	0x0396B0D8 ADRP X21, 0xA76000
	0x0396B0DC LDRB W8, [X21 + 0x9EA]
	0x0396B0E0 MOV X19, X2
	0x0396B0E4 MOV X20, X1
	0x0396B0E8 TBNZ X8, 0x0, 0x396B100
	0x0396B0EC ADRP X0, 0x7E4000
	0x0396B0F0 LDR X0, [X0 + 0xD50]
	0x0396B0F4 BL 0x1C16CF4
	0x0396B0F8 MOVZ W8, 0x1
	0x0396B0FC STRB W8, [X21 + 0x9EA]
	0x0396B100 ADD X0, X31, 0xC
	0x0396B104 MOV W1, W19
	0x0396B108 MOV X2, X31
	0x0396B10C STR W20, [X31 + 0xC]
	0x0396B110 BL 0x337B634
	0x0396B114 LDP X20, X19, [X31 + 0x20]
	0x0396B118 LDP X30, X21, [X31 + 0x10]
	0x0396B11C ADD X31, X31, 0x30
	0x0396B120 RET
	0x0396B124 MOV X1, X31
	0x0396B128 B 0x33BDD8C
	0x0396B12C STR X30, [X31 - 0x10]!
	0x0396B130 CBZ X1, 0x396B14C
	0x0396B134 LDR X8, [X1 + 0x20]
	0x0396B138 LDR X9, [X0 + 0x10]
	0x0396B13C CMP X8, X9
	0x0396B140 CSET W0, EQ
	0x0396B144 LDR X30, [X31], #0x10
	0x0396B148 RET
	0x0396B14C BL 0x1C16F20
	0x0396B150 MOV X1, X31
	0x0396B154 B 0x33BDD8C
	0x0396B158 STP X30, X21, [X31 - 0x20]!
	0x0396B15C STP X20, X19, [X31 + 0x10]
	0x0396B160 ADRP X21, 0xA76000
	0x0396B164 LDRB W8, [X21 + 0x9EB]
	0x0396B168 MOV X19, X1
	0x0396B16C MOV X20, X0
	0x0396B170 TBNZ X8, 0x0, 0x396B188
	0x0396B174 ADRP X0, 0x789000
	0x0396B178 LDR X0, [X0 + 0xDF8]
	0x0396B17C BL 0x1C16CF4
	0x0396B180 MOVZ W8, 0x1
	0x0396B184 STRB W8, [X21 + 0x9EB]
	0x0396B188 CBZ X19, 0x396B1B0
	0x0396B18C LDR X0, [X20 + 0x10]
	0x0396B190 CBZ X0, 0x396B1B0
	0x0396B194 ADRP X8, 0x789000
	0x0396B198 LDR X8, [X8 + 0xDF8]
	0x0396B19C LDR W1, [X19 + 0x18]
	0x0396B1A0 LDP X20, X19, [X31 + 0x10]
	0x0396B1A4 LDR X2, [X8]
	0x0396B1A8 LDP X30, X21, [X31], #0x20
	0x0396B1AC B 0x2DAA59C
	0x0396B1B0 BL 0x1C16F20
	0x0396B1B4 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA78000
	011 Move X22, 0x78A000
	012 Move W8, [X20+2528]
	013 Move X22, [X22+1432]
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7E6000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0x7E6000
	024 Move X0, [X0+1648]
	025 Call 0x1C17CF4
	026 Move X0, 0x7E5000
	027 Move X0, [X0+2192]
	028 Call 0x1C17CF4
	029 Move X0, 0x7E5000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move X0, 0x78A000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x7E4000
	036 Move X0, [X0+2824]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2528], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {126}
	053 Compare X19, 0
	054 JumpIfEqual {133}
	055 Move X8, 0x7E4000
	056 Move X8, [X8+2200]
	057 Move X20, 0x7E4000
	058 Move X22, 0x7E4000
	059 Move X0, [X8]
	060 Move X20, [X20+2192]
	061 Move X22, [X22+2824]
	062 Call 0x1C17F10
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call HashSet`1<Object>..ctor, X0
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move W1, W31
	073 Move X2, X31
	074 Call WingedEdge.GetWingedEdges, X0, X1
	075 Move X8, [X19+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X24, 0x7E5000
	078 Move X25, 0x7E5000
	079 Move X24, [X24+808]
	080 Move X25, [X25+1648]
	081 Move X21, X0
	082 Move X23, X31
	083 And X8, X8, 0
	084 Add X26, X19, 32
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, [X24]
	087 Move X22, [X26]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move W2, 1
	093 Move X0, X21
	094 Move X1, X22
	095 Call ElementSelection.GetFaceLoop, X0, X1, X2
	096 Compare X20, 0
	097 JumpIfEqual {125}
	098 Move X2, [X25]
	099 Move X1, X0
	100 Move X0, X20
	101 Call HashSet`1<Object>.UnionWith, X0, X1
	102 Move X0, X21
	103 Move X1, X22
	104 Move W2, W31
	105 Call ElementSelection.GetFaceLoop, X0, X1, X2
	106 Move X2, [X25]
	107 Move X1, X0
	108 Move X0, X20
	109 Call HashSet`1<Object>.UnionWith, X0, X1
	110 Move W8, [X19+24]
	111 Add X23, X23, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X20
	114 Move X20, [X31+64]
	115 Move X19, [X31+72]
	116 Move X22, [X31+48]
	117 Move X21, [X31+56]
	118 Move X24, [X31+32]
	119 Move X23, [X31+40]
	120 Move X26, [X31+16]
	121 Move X25, [X31+24]
	122 Move X30, [X31+80]
	123 Return X0
	124 Call 0x1C17F28
	125 Call 0x1C17F20
	126 Move X0, 0x78E000
	127 Move X0, [X0+1320]
	128 Call 0x1C17D08
	129 Call 0x1C17F10
	130 Move X19, X0
	131 Move X0, 0x7E3000
	132 Move X0, [X0+3728]
	133 Move X0, 0x78E000
	134 Move X0, [X0+1320]
	135 Call 0x1C17D08
	136 Call 0x1C17F10
	137 Move X19, X0
	138 Move X0, 0x7E4000
	139 Move X0, [X0+1600]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call ArgumentNullException..ctor, X0, X1
	145 Move X0, 0x7E5000
	146 Move X0, [X0+3184]
	147 Call 0x1C17D08
	148 Move X1, X0
	149 Move X0, X19
	150 Call 0x1C17DEC

Method: System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> GetFaceLoop(System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> wings, UnityEngine.ProBuilder.Face face, System.Boolean ring)

Disassembly:
	0x0396ADC8 B.EQ 0x396ADFC
	0x0396ADCC LDR X8, [X0 + 0x38]
	0x0396ADD0 MOV X1, X0
	0x0396ADD4 CBZ X8, 0x396AE00
	0x0396ADD8 MOV X0, X8
	0x0396ADDC MOV W1, W19
	0x0396ADE0 MOV X2, X31
	0x0396ADE4 BL 0x394245C
	0x0396ADE8 MOV X1, X31
	0x0396ADEC CBZ X0, 0x396AE00
	0x0396ADF0 CMP X0, X20
	0x0396ADF4 B.NE 0x396ADC4
	0x0396ADF8 B 0x396AE00
	0x0396ADFC MOV X1, X31
	0x0396AE00 LDP X20, X19, [X31 + 0x10]
	0x0396AE04 MOV X0, X1
	0x0396AE08 LDP X30, X21, [X31], #0x20
	0x0396AE0C RET
	0x0396AE10 BL 0x1C16F20
	0x0396AE14 STR X30, [X31 - 0x20]!
	0x0396AE18 STP X20, X19, [X31 + 0x10]
	0x0396AE1C ADRP X19, 0xA77000
	0x0396AE20 ADRP X20, 0x7E5000
	0x0396AE24 LDRB W8, [X19 + 0x9E4]
	0x0396AE28 LDR X20, [X20 + 0x328]
	0x0396AE2C TBNZ X8, 0x0, 0x396AE44
	0x0396AE30 ADRP X0, 0x7E5000
	0x0396AE34 LDR X0, [X0 + 0x328]
	0x0396AE38 BL 0x1C16CF4
	0x0396AE3C MOVZ W8, 0x1
	0x0396AE40 STRB W8, [X19 + 0x9E4]
	0x0396AE44 LDR X8, [X20]
	0x0396AE48 LDP X20, X19, [X31 + 0x10]
	0x0396AE4C LDR X8, [X8 + 0xB8]
	0x0396AE50 STR X31, [X8]
	0x0396AE54 STR W31, [X8 + 0x8]
	0x0396AE58 LDR X30, [X31], #0x20
	0x0396AE5C RET
	0x0396AE60 STR X30, [X31 - 0x20]!
	0x0396AE64 STP X20, X19, [X31 + 0x10]
	0x0396AE68 ADRP X19, 0xA77000
	0x0396AE6C ADRP X20, 0x7E5000
	0x0396AE70 LDRB W8, [X19 + 0x9E5]
	0x0396AE74 LDR X20, [X20 + 0xB68]
	0x0396AE78 TBNZ X8, 0x0, 0x396AE90
	0x0396AE7C ADRP X0, 0x7E5000
	0x0396AE80 LDR X0, [X0 + 0xB68]
	0x0396AE84 BL 0x1C16CF4
	0x0396AE88 MOVZ W8, 0x1
	0x0396AE8C STRB W8, [X19 + 0x9E5]
	0x0396AE90 LDR X0, [X20]
	0x0396AE94 BL 0x1C16F10
	0x0396AE98 MOV X1, X31
	0x0396AE9C MOV X19, X0
	0x0396AEA0 BL 0x33BDD8C
	0x0396AEA4 LDR X8, [X20]
	0x0396AEA8 LDR X8, [X8 + 0xB8]
	0x0396AEAC STR X19, [X8]
	0x0396AEB0 LDP X20, X19, [X31 + 0x10]
	0x0396AEB4 LDR X30, [X31], #0x20
	0x0396AEB8 RET
	0x0396AEBC MOV X1, X31
	0x0396AEC0 B 0x33BDD8C
	0x0396AEC4 CBZ X1, 0x396AED4
	0x0396AEC8 MOV X0, X1
	0x0396AECC MOV X1, X31
	0x0396AED0 B 0x38FFA80
	0x0396AED4 STR X30, [X31 - 0x10]!
	0x0396AED8 BL 0x1C16F20
	0x0396AEDC STR X30, [X31 - 0x20]!
	0x0396AEE0 STP X20, X19, [X31 + 0x10]
	0x0396AEE4 ADRP X20, 0xA77000
	0x0396AEE8 LDRB W8, [X20 + 0x9E6]
	0x0396AEEC MOV X19, X2
	0x0396AEF0 TBNZ X8, 0x0, 0x396AF14
	0x0396AEF4 ADRP X0, 0x7E5000
	0x0396AEF8 LDR X0, [X0 + 0xD78]
	0x0396AEFC BL 0x1C16CF4
	0x0396AF00 ADRP X0, 0x7E4000
	0x0396AF04 LDR X0, [X0 + 0xFE0]
	0x0396AF08 BL 0x1C16CF4
	0x0396AF0C MOVZ W8, 0x1
	0x0396AF10 STRB W8, [X20 + 0x9E6]
	0x0396AF14 CBZ X19, 0x396AF30
	0x0396AF18 LDR W8, [X19 + 0x18]
	0x0396AF1C LDP X20, X19, [X31 + 0x10]
	0x0396AF20 CMP W8, 0x2
	0x0396AF24 CSET W0, LT
	0x0396AF28 LDR X30, [X31], #0x20
	0x0396AF2C RET
	0x0396AF30 BL 0x1C16F20
	0x0396AF34 STR X30, [X31 - 0x20]!
	0x0396AF38 STP X20, X19, [X31 + 0x10]
	0x0396AF3C ADRP X20, 0xA77000
	0x0396AF40 LDRB W8, [X20 + 0x9E7]
	0x0396AF44 MOV X19, X2
	0x0396AF48 TBNZ X8, 0x0, 0x396AF6C
	0x0396AF4C ADRP X0, 0x7E5000
	0x0396AF50 LDR X0, [X0 + 0xD78]
	0x0396AF54 BL 0x1C16CF4
	0x0396AF58 ADRP X0, 0x7E4000
	0x0396AF5C LDR X0, [X0 + 0xFE8]
	0x0396AF60 BL 0x1C16CF4
	0x0396AF64 MOVZ W8, 0x1
	0x0396AF68 STRB W8, [X20 + 0x9E7]
	0x0396AF6C CBZ X19, 0x396AF90
	0x0396AF70 ADRP X8, 0x7E4000
	0x0396AF74 LDR X8, [X8 + 0xFE8]
	0x0396AF78 MOV X0, X19
	0x0396AF7C LDP X20, X19, [X31 + 0x10]
	0x0396AF80 MOV W1, W31
	0x0396AF84 LDR X2, [X8]
	0x0396AF88 LDR X30, [X31], #0x20
	0x0396AF8C B 0x2FB9C40
	0x0396AF90 BL 0x1C16F20
	0x0396AF94 STR X30, [X31 - 0x20]!
	0x0396AF98 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xA78000
	009 Move X23, 0x7E6000
	010 Move W8, [X22+2529]
	011 Move X23, [X23+3168]
	012 Move W20, W2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x7E6000
	020 Move X0, [X0+1464]
	021 Call 0x1C17CF4
	022 Move X0, 0x7E6000
	023 Move X0, [X0+112]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E5000
	026 Move X0, [X0+2184]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E5000
	029 Move X0, [X0+2192]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E5000
	032 Move X0, [X0+2200]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E6000
	035 Move X0, [X0+3176]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E6000
	038 Move X0, [X0+3168]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2529], W8
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X1, X31
	045 Move X22, X0
	046 Call <>c__DisplayClass25_0..ctor, X0
	047 Compare X22, 0
	048 JumpIfEqual {142}
	049 Move X8, 0x7E5000
	050 Move X8, [X8+2200]
	051 Move [X22+16], X19
	052 Move X19, 0x7E5000
	053 Move X0, [X8]
	054 Move X19, [X19+2192]
	055 Call 0x1C17F10
	056 Move X1, [X19]
	057 Move X19, X0
	058 Call HashSet`1<Object>..ctor, X0
	059 Move X8, [X22+16]
	060 Compare X8, 0
	061 JumpIfEqual {133}
	062 Move X8, 0x7E6000
	063 Move X8, [X8+112]
	064 Move X23, 0x7E6000
	065 Move X24, 0x7E6000
	066 Move X0, [X8]
	067 Move X23, [X23+3176]
	068 Move X24, [X24+1464]
	069 Call 0x1C17F10
	070 Move X2, [X23]
	071 Move X1, X22
	072 Move X3, X31
	073 Move X23, X0
	074 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	075 Move X2, [X24]
	076 Move X0, X21
	077 Move X1, X23
	078 Call 0x21C670C, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {133}
	081 Move X21, X0
	082 Move TEMP, X20
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {90}
	086 Move X21, [X0+40]
	087 Compare X21, 0
	088 JumpIfNotEqual {90}
	089 Move X21, [X0+48]
	090 Move X23, 0x7E5000
	091 Move X23, [X23+2184]
	092 Move W22, W31
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X20, X21
	095 Compare X21, 0
	096 JumpIfEqual {142}
	097 Move X20, [X21+56]
	098 Compare X20, 0
	099 JumpIfEqual {133}
	100 Move X8, [X20+32]
	101 Compare X8, 0
	102 JumpIfEqual {133}
	103 Compare X20, 0
	104 JumpIfEqual {142}
	105 Compare X19, 0
	106 JumpIfEqual {142}
	107 Move X1, [X20+32]
	108 Move X2, [X23]
	109 Move X0, X19
	110 Call HashSet`1<Object>.Add, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {131}
	115 Move X0, X20
	116 Move X1, X31
	117 Call WingedEdge.Count, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X20+40]
	120 Compare X8, 0
	121 JumpIfEqual {142}
	122 Move X8, [X8+40]
	123 Compare X8, 0
	124 JumpIfEqual {142}
	125 Move X20, [X8+56]
	126 Compare X20, 0
	127 JumpIfEqual {131}
	128 Move X8, [X20+32]
	129 Compare X8, 0
	130 JumpIfNotEqual {103}
	131 Add W22, W22, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X19
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Return X0
	142 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge>> FindHoles(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> indexes)

Disassembly:
	0x0396B1B8 STP X20, X19, [X31 + 0x10]
	0x0396B1BC ADRP X21, 0xA76000
	0x0396B1C0 LDRB W8, [X21 + 0x9EC]
	0x0396B1C4 MOV X19, X1
	0x0396B1C8 MOV X20, X0
	0x0396B1CC TBNZ X8, 0x0, 0x396B1E4
	0x0396B1D0 ADRP X0, 0x789000
	0x0396B1D4 LDR X0, [X0 + 0xDF8]
	0x0396B1D8 BL 0x1C16CF4
	0x0396B1DC MOVZ W8, 0x1
	0x0396B1E0 STRB W8, [X21 + 0x9EC]
	0x0396B1E4 CBZ X19, 0x396B20C
	0x0396B1E8 LDR X0, [X20 + 0x10]
	0x0396B1EC CBZ X0, 0x396B20C
	0x0396B1F0 ADRP X8, 0x789000
	0x0396B1F4 LDR X8, [X8 + 0xDF8]
	0x0396B1F8 LDR W1, [X19 + 0x1C]
	0x0396B1FC LDP X20, X19, [X31 + 0x10]
	0x0396B200 LDR X2, [X8]
	0x0396B204 LDP X30, X21, [X31], #0x20
	0x0396B208 B 0x2DAA59C
	0x0396B20C BL 0x1C16F20
	0x0396B210 CBZ W2, 0x396B220
	0x0396B214 CMP W2, 0x2
	0x0396B218 CSET W2, EQ
	0x0396B21C B 0x396BD94
	0x0396B220 B 0x396B224
	0x0396B224 SUB X31, X31, 0x190
	0x0396B228 STP D11, D10, [X31 + 0x110]
	0x0396B22C STP D9, D8, [X31 + 0x120]
	0x0396B230 STP X29, X30, [X31 + 0x130]
	0x0396B234 STP X28, X27, [X31 + 0x140]
	0x0396B238 STP X26, X25, [X31 + 0x150]
	0x0396B23C STP X24, X23, [X31 + 0x160]
	0x0396B240 STP X22, X21, [X31 + 0x170]
	0x0396B244 STP X20, X19, [X31 + 0x180]
	0x0396B248 ADRP X20, 0xA76000
	0x0396B24C ADRP X21, 0x7E3000
	0x0396B250 LDRB W8, [X20 + 0x9EF]
	0x0396B254 LDR X21, [X21 + 0x3F0]
	0x0396B258 MOV V8.16B, V0.16B
	0x0396B25C MOV X19, X1
	0x0396B260 MOV X24, X0
	0x0396B264 TBNZ X8, 0x0, 0x396B384
	0x0396B268 ADRP X0, 0x792000
	0x0396B26C LDR X0, [X0 + 0x858]
	0x0396B270 BL 0x1C16CF4
	0x0396B274 ADRP X0, 0x7B2000
	0x0396B278 LDR X0, [X0 + 0x8D0]
	0x0396B27C BL 0x1C16CF4
	0x0396B280 ADRP X0, 0x7E3000
	0x0396B284 LDR X0, [X0 + 0xD08]
	0x0396B288 BL 0x1C16CF4
	0x0396B28C ADRP X0, 0x7B2000
	0x0396B290 LDR X0, [X0 + 0x8A8]
	0x0396B294 BL 0x1C16CF4
	0x0396B298 ADRP X0, 0x792000
	0x0396B29C LDR X0, [X0 + 0x890]
	0x0396B2A0 BL 0x1C16CF4
	0x0396B2A4 ADRP X0, 0x7E2000
	0x0396B2A8 LDR X0, [X0 + 0xC80]
	0x0396B2AC BL 0x1C16CF4
	0x0396B2B0 ADRP X0, 0x7B2000
	0x0396B2B4 LDR X0, [X0 + 0x8B0]
	0x0396B2B8 BL 0x1C16CF4
	0x0396B2BC ADRP X0, 0x792000
	0x0396B2C0 LDR X0, [X0 + 0x888]
	0x0396B2C4 BL 0x1C16CF4
	0x0396B2C8 ADRP X0, 0x7E4000
	0x0396B2CC LDR X0, [X0 + 0xD88]
	0x0396B2D0 BL 0x1C16CF4
	0x0396B2D4 ADRP X0, 0x7E3000
	0x0396B2D8 LDR X0, [X0 + 0x508]
	0x0396B2DC BL 0x1C16CF4
	0x0396B2E0 ADRP X0, 0x7E3000
	0x0396B2E4 LDR X0, [X0 + 0x3E0]
	0x0396B2E8 BL 0x1C16CF4
	0x0396B2EC ADRP X0, 0x7E3000
	0x0396B2F0 LDR X0, [X0 + 0x3F0]
	0x0396B2F4 BL 0x1C16CF4
	0x0396B2F8 ADRP X0, 0x7E3000
	0x0396B2FC LDR X0, [X0 + 0x560]
	0x0396B300 BL 0x1C16CF4
	0x0396B304 ADRP X0, 0x7E3000
	0x0396B308 LDR X0, [X0 + 0x510]
	0x0396B30C BL 0x1C16CF4
	0x0396B310 ADRP X0, 0x789000
	0x0396B314 LDR X0, [X0 + 0xE58]
	0x0396B318 BL 0x1C16CF4
	0x0396B31C ADRP X0, 0x7E4000
	0x0396B320 LDR X0, [X0 + 0x1C0]
	0x0396B324 BL 0x1C16CF4
	0x0396B328 ADRP X0, 0x7E2000
	0x0396B32C LDR X0, [X0 + 0xDE0]
	0x0396B330 BL 0x1C16CF4
	0x0396B334 ADRP X0, 0x7E2000
	0x0396B338 LDR X0, [X0 + 0xE18]
	0x0396B33C BL 0x1C16CF4
	0x0396B340 ADRP X0, 0x7E4000
	0x0396B344 LDR X0, [X0 + 0x1D0]
	0x0396B348 BL 0x1C16CF4
	0x0396B34C ADRP X0, 0x7E2000
	0x0396B350 LDR X0, [X0 + 0xDE8]
	0x0396B354 BL 0x1C16CF4
	0x0396B358 ADRP X0, 0x7E4000
	0x0396B35C LDR X0, [X0 + 0xD90]
	0x0396B360 BL 0x1C16CF4
	0x0396B364 ADRP X0, 0x7E4000
	0x0396B368 LDR X0, [X0 + 0xD98]
	0x0396B36C BL 0x1C16CF4
	0x0396B370 ADRP X0, 0x7E3000
	0x0396B374 LDR X0, [X0 + 0x20]
	0x0396B378 BL 0x1C16CF4
	0x0396B37C MOVZ W8, 0x1
	0x0396B380 STRB W8, [X20 + 0x9EF]
	0x0396B384 LDR X1, [X21]
	0x0396B388 ADRP X20, 0x7E4000
	0x0396B38C LDR X20, [X20 + 0xD88]
	0x0396B390 MOV X0, X19
	0x0396B394 BL 0x1C16E00
	0x0396B398 CBNZ X0, 0x396B3B0
	0x0396B39C ADRP X8, 0x7E3000
	0x0396B3A0 LDR X8, [X8 + 0x3E0]
	0x0396B3A4 MOV X0, X19
	0x0396B3A8 LDR X1, [X8]
	0x0396B3AC BL 0x21D577C
	0x0396B3B0 LDR X1, [X20]
	0x0396B3B4 STR X0, [X31 + 0x20]
	0x0396B3B8 BL 0x21B2678
	0x0396B3BC TBZ X0, 0x0, 0x396BD5C
	0x0396B3C0 CBZ X24, 0x396BD8C
	0x0396B3C4 MOV X0, X24
	0x0396B3C8 MOV X1, X31
	0x0396B3CC MOV X2, X31
	0x0396B3D0 BL 0x3912114
	0x0396B3D4 ADRP X8, 0x7E2000
	0x0396B3D8 LDR X8, [X8 + 0xDE8]
	0x0396B3DC MOV X19, X0
	0x0396B3E0 LDR X8, [X8]
	0x0396B3E4 MOV X0, X8
	0x0396B3E8 BL 0x1C16F10
	0x0396B3EC ADRP X8, 0x7E2000
	0x0396B3F0 LDR X8, [X8 + 0xDE0]
	0x0396B3F4 MOV X1, X19
	0x0396B3F8 MOV X23, X0
	0x0396B3FC LDR X2, [X8]
	0x0396B400 BL 0x301B8E0
	0x0396B404 LDR X8, [X24 + 0x30]
	0x0396B408 CBZ X8, 0x396BD8C
	0x0396B40C LDR W8, [X8 + 0x18]
	0x0396B410 MOV X0, X24
	0x0396B414 MOV X1, X31
	0x0396B418 STR W8, [X31 + 0x54]
	0x0396B41C BL 0x3916198
	0x0396B420 MOV X25, X0
	0x0396B424 MOV X0, X24
	0x0396B428 MOV X1, X31
	0x0396B42C BL 0x39162B4
	0x0396B430 ADRP X8, 0x792000
	0x0396B434 LDR X8, [X8 + 0x888]
	0x0396B438 MOV X26, X0
	0x0396B43C LDR X8, [X8]
	0x0396B440 MOV X0, X8
	0x0396B444 BL 0x1C16F10
	0x0396B448 ADRP X8, 0x792000
	0x0396B44C LDR X8, [X8 + 0x890]
	0x0396B450 MOV X27, X0
	0x0396B454 LDR X1, [X8]
	0x0396B458 BL 0x2A09A9C
	0x0396B45C ADRP X20, 0x7E4000
	0x0396B460 LDR X20, [X20 + 0xD98]
	0x0396B464 LDR X0, [X20]
	0x0396B468 LDR W8, [X0 + 0xE0]
	0x0396B46C CBNZ W8, 0x396B478
	0x0396B470 BL 0x1C16DFC
	0x0396B474 LDR X0, [X20]
	0x0396B478 LDR X8, [X0 + 0xB8]
	0x0396B47C LDR X19, [X8 + 0x10]
	0x0396B480 CBNZ X19, 0x396B4D4
	0x0396B484 LDR W8, [X0 + 0xE0]
	0x0396B488 CBNZ W8, 0x396B494
	0x0396B48C BL 0x1C16DFC
	0x0396B490 LDR X0, [X20]
	0x0396B494 ADRP X9, 0x7E3000
	0x0396B498 LDR X8, [X0 + 0xB8]
	0x0396B49C LDR X9, [X9 + 0x510]
	0x0396B4A0 LDR X21, [X8]
	0x0396B4A4 LDR X0, [X9]
	0x0396B4A8 BL 0x1C16F10
	0x0396B4AC ADRP X8, 0x7E4000
	0x0396B4B0 LDR X8, [X8 + 0xD90]
	0x0396B4B4 MOV X1, X21
	0x0396B4B8 MOV X3, X31
	0x0396B4BC MOV X19, X0
	0x0396B4C0 LDR X2, [X8]
	0x0396B4C4 BL 0x2D30128
	0x0396B4C8 LDR X8, [X20]
	0x0396B4CC LDR X8, [X8 + 0xB8]
	0x0396B4D0 STR X19, [X8 + 0x10]
	0x0396B4D4 ADRP X8, 0x7E3000
	0x0396B4D8 LDR X8, [X8 + 0x508]
	0x0396B4DC LDR X20, [X31 + 0x20]
	0x0396B4E0 MOV X1, X19
	0x0396B4E4 LDR X2, [X8]
	0x0396B4E8 MOV X0, X20
	0x0396B4EC BL 0x21D49C0
	0x0396B4F0 ADRP X8, 0x7E3000
	0x0396B4F4 LDR X8, [X8 + 0x3F0]
	0x0396B4F8 MOV W1, W0
	0x0396B4FC LDR X8, [X8]
	0x0396B500 MOV X0, X8
	0x0396B504 BL 0x1C16D6C
	0x0396B508 CBZ X20, 0x396BD8C
	0x0396B50C LDR W8, [X20 + 0x18]
	0x0396B510 MOV X28, X0
	0x0396B514 CMP W8, 0x1
	0x0396B518 B.LT 0x396BCA8
	0x0396B51C STR W31, [X31 + 0x28]
	0x0396B520 STR W31, [X31 + 0x74]
	0x0396B524 ADRP X29, 0x7E3000
	0x0396B528 LDR X29, [X29 + 0xD08]
	0x0396B52C MOV W9, W31
	0x0396B530 STP X26, X28, [X31 + 0x38]
	0x0396B534 STR X24, [X31 + 0x18]
	0x0396B538 STR X27, [X31 + 0x30]
	0x0396B53C STR X25, [X31 + 0x48]
	0x0396B540 CMP W9, W8
	0x0396B544 B.CS 0x396BD90
	0x0396B548 ADD X8, X20, W9, 0x3, SXTW
	0x0396B54C LDR X21, [X8 + 0x20]
	0x0396B550 STR W9, [X31 + 0x2C]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0xA77000
	015 Move W8, [X21+2530]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x7E5000
	023 Move X0, [X0+808]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E5000
	026 Move X0, [X0+88]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E5000
	029 Move X0, [X0+96]
	030 Call 0x1C17CF4
	031 Move X0, 0x7E5000
	032 Move X0, [X0+3192]
	033 Call 0x1C17CF4
	034 Move X0, 0x7E5000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move X0, 0x7E5000
	038 Move X0, [X0+3208]
	039 Call 0x1C17CF4
	040 Move X0, 0x7E5000
	041 Move X0, [X0+120]
	042 Call 0x1C17CF4
	043 Move X0, 0x7E5000
	044 Move X0, [X0+3216]
	045 Call 0x1C17CF4
	046 Move X0, 0x7E5000
	047 Move X0, [X0+3224]
	048 Call 0x1C17CF4
	049 Move X0, 0x7E5000
	050 Move X0, [X0+3232]
	051 Call 0x1C17CF4
	052 Move X0, 0x7E5000
	053 Move X0, [X0+3240]
	054 Call 0x1C17CF4
	055 Move X0, 0x7E5000
	056 Move X0, [X0+3248]
	057 Call 0x1C17CF4
	058 Move X0, 0x7E5000
	059 Move X0, [X0+2920]
	060 Call 0x1C17CF4
	061 Move X0, 0x7E4000
	062 Move X0, [X0+2824]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+2530], W8
	066 Move [X31+32], X31
	067 Move [X31+40], X31
	068 Move [X31+48], X31
	069 Compare X20, 0
	070 JumpIfEqual {221}
	071 Move X21, 0x7E5000
	072 Move X23, 0x7E5000
	073 Move X24, 0x7E4000
	074 Move X22, 0x7E5000
	075 Move X21, [X21+3240]
	076 Move X23, [X23+3232]
	077 Move X24, [X24+2824]
	078 Move X22, [X22+808]
	079 Move X0, X20
	080 Move X1, X19
	081 Move X2, X31
	082 Call ProBuilderMesh.GetSharedVertexHandles, X0, X1
	083 Move X8, [X21]
	084 Move X21, X0
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X1, [X23]
	088 Move X19, X0
	089 Call List`1<Object>..ctor, X0
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move W1, W31
	097 Move X2, X31
	098 Call WingedEdge.GetWingedEdges, X0, X1
	099 Move X8, [X22]
	100 Move X20, X0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X21
	108 Call ElementSelection.FindHoles, X0, X1
	109 Compare X0, 0
	110 JumpIfEqual {221}
	111 Move X8, 0x7E5000
	112 Move X8, [X8+3224]
	113 Move X24, 0x7E5000
	114 Move X25, 0x7E5000
	115 Move X26, 0x7E5000
	116 Move X27, 0x7E5000
	117 Move X28, 0x7E5000
	118 Move X24, [X24+3200]
	119 Move X25, [X25+2920]
	120 Move X26, [X26+120]
	121 Move X27, [X27+3248]
	122 Move X28, [X28+88]
	123 Move X1, [X8]
	124 Move X29, 0x7E5000
	125 Move X23, 0x7E5000
	126 Move X29, [X29+96]
	127 Move X23, [X23+3216]
	128 Add X8, X31, 8
	129 Call List`1<Object>.GetEnumerator, X0
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move X8, [X31+24]
	132 Move [X31+2], V0
	133 Move [X31+48], X8
	134 Move X1, [X24]
	135 Add X0, X31, 32
	136 Call Enumerator<Object>.MoveNext, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {199}
	141 Move X8, [X25]
	142 Move X20, [X31+48]
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {149}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X8, [X25]
	149 Move X9, [X8+184]
	150 Move X21, [X9+104]
	151 Compare X21, 0
	152 JumpIfNotEqual {171}
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {159}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move X8, [X25]
	159 Move X8, [X8+184]
	160 Move X0, [X26]
	161 Move X22, [X8]
	162 Call 0x1C17F10
	163 Move X2, [X27]
	164 Move X21, X0
	165 Move X1, X22
	166 Move X3, X31
	167 Call Func`2<Object, Edge>..ctor, X0, X1, X2
	168 Move X8, [X25]
	169 Move X8, [X8+184]
	170 Move [X8+104], X21
	171 Move X2, [X28]
	172 Move X0, X20
	173 Move X1, X21
	174 Call Enumerable.Select, X0, X1
	175 Move X1, [X29]
	176 Call Enumerable.ToList, X0
	177 Move X1, X0
	178 Compare X19, 0
	179 JumpIfEqual {219}
	180 Move W10, [X19+28]
	181 Move X8, [X19+16]
	182 Move X9, [X23]
	183 Add W10, W10, 1
	184 Move [X19+28], W10
	185 Compare X8, 0
	186 JumpIfEqual {220}
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Move W11, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W9, W10, 1
	191 Add X8, X8, X10
	192 Move [X19+24], W9
	193 Move [X8+32], X1
	194 Move X8, [X9+32]
	195 Move X8, [X8+192]
	196 Move X2, [X8+112]
	197 Move X0, X19
	198 Call List`1<Object>.AddWithResize, X0, X1
	199 Move X8, 0x7E5000
	200 Move X8, [X8+3192]
	201 Add X0, X31, 32
	202 Move X1, [X8]
	203 Call Enumerator<Object>.Dispose, X0
	204 Move X0, X19
	205 Move X20, [X31+144]
	206 Move X19, [X31+152]
	207 Move X22, [X31+128]
	208 Move X21, [X31+136]
	209 Move X24, [X31+112]
	210 Move X23, [X31+120]
	211 Move X26, [X31+96]
	212 Move X25, [X31+104]
	213 Move X28, [X31+80]
	214 Move X27, [X31+88]
	215 Move X29, [X31+64]
	216 Move X30, [X31+72]
	217 Add X31, X31, 160
	218 Return X0
	219 Call 0x1C17F20
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Move X20, X0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X20
	225 Call 0x3EB2AD0
	226 Move X21, [X0]
	227 Call 0x3EB2AE0
	228 Move X8, 0x7E5000
	229 Move X8, [X8+3192]
	230 Add X0, X31, 32
	231 Move X1, [X8]
	232 Call Enumerator<Object>.Dispose, X0
	233 Compare X21, 0
	234 JumpIfEqual {204}
	235 Move X0, X21
	236 Call 0x1C17F18
	237 Move X21, X31
	238 Move X20, X0
	239 Move X8, 0x7E5000
	240 Move X8, [X8+3192]
	241 Move X1, [X8]
	242 Add X0, X31, 32
	243 Call Enumerator<Object>.Dispose, X0
	244 Compare X21, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X20
	247 Call 0x1D2D690
	248 Move X0, X21
	249 Call 0x1C17F18
	250 Call 0x1991590

Method: System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge>> FindHoles(System.Collections.Generic.List`1<UnityEngine.ProBuilder.WingedEdge> wings, System.Collections.Generic.HashSet`1<System.Int32> common)

Disassembly:
	0x0396B554 CBZ X21, 0x396BD8C
	0x0396B558 MOVN W8, 0x0
	0x0396B55C MOV X0, X24
	0x0396B560 MOV X1, X21
	0x0396B564 MOV X2, X31
	0x0396B568 STR W31, [X21 + 0x18]
	0x0396B56C STR W8, [X21 + 0x54]
	0x0396B570 BL 0x390987C
	0x0396B574 MOV X0, X21
	0x0396B578 MOV X1, X31
	0x0396B57C MOV V10.16B, V0.16B
	0x0396B580 MOV V11.16B, V1.16B
	0x0396B584 MOV V9.16B, V2.16B
	0x0396B588 BL 0x38FFA80
	0x0396B58C CBZ X27, 0x396BD8C
	0x0396B590 ADRP X8, 0x7B2000
	0x0396B594 LDR X8, [X8 + 0x8D0]
	0x0396B598 MOV X19, X0
	0x0396B59C MOV X0, X27
	0x0396B5A0 LDR X1, [X8]
	0x0396B5A4 BL 0x2A0A4C4
	0x0396B5A8 CBZ X19, 0x396BD8C
	0x0396B5AC LDR X8, [X19 + 0x18]
	0x0396B5B0 FMUL S10, S10, S8
	0x0396B5B4 FMUL S11, S11, S8
	0x0396B5B8 FMUL S9, S9, S8
	0x0396B5BC CMP W8, 0x1
	0x0396B5C0 B.LT 0x396BB94
	0x0396B5C4 LDR W9, [X31 + 0x28]
	0x0396B5C8 ADD X11, X21, 0x1C
	0x0396B5CC MOV X10, X31
	0x0396B5D0 AND X8, X8, 0x0
	0x0396B5D4 MOV W9, W9
	0x0396B5D8 STP X9, X11, [X31 + 0x60]
	0x0396B5DC ADD X9, X19, 0x24
	0x0396B5E0 STR X19, [X31 + 0x58]
	0x0396B5E4 STR X21, [X31 + 0x88]
	0x0396B5E8 CBZ X23, 0x396BD8C
	0x0396B5EC CMP X10, W8, UXTW
	0x0396B5F0 B.CS 0x396BD90
	0x0396B5F4 LDP W22, W21, [X9 - 0x4]
	0x0396B5F8 LDR X2, [X29]
	0x0396B5FC LDR W28, [X23 + 0x18]
	0x0396B600 MOV X0, X27
	0x0396B604 MOV W1, W22
	0x0396B608 STP X9, X10, [X31 + 0x78]
	0x0396B60C BL 0x2A0A530
	0x0396B610 TBZ X0, 0x0, 0x396B64C
	0x0396B614 LDR X2, [X29]
	0x0396B618 MOV X0, X27
	0x0396B61C MOV W1, W21
	0x0396B620 BL 0x2A0A530
	0x0396B624 ADRP X24, 0x7E2000
	0x0396B628 LDR X24, [X24 + 0xC80]
	0x0396B62C TBZ X0, 0x0, 0x396B6C8
	0x0396B630 LDR X2, [X24]
	0x0396B634 MOV X0, X27
	0x0396B638 MOV W1, W22
	0x0396B63C BL 0x2A0A2A8
	0x0396B640 CBZ X25, 0x396BD8C
	0x0396B644 MOV W2, W0
	0x0396B648 B 0x396B738
	0x0396B64C ADRP X24, 0x7E2000
	0x0396B650 LDR X24, [X24 + 0xC80]
	0x0396B654 CBZ X25, 0x396BD8C
	0x0396B658 LDR X2, [X24]
	0x0396B65C MOV X0, X25
	0x0396B660 MOV W1, W22
	0x0396B664 BL 0x2A0A2A8
	0x0396B668 ADRP X8, 0x792000
	0x0396B66C LDR X8, [X8 + 0x858]
	0x0396B670 MOV W2, W0
	0x0396B674 MOV X0, X27
	0x0396B678 MOV W1, W22
	0x0396B67C LDR X3, [X8]
	0x0396B680 BL 0x2A0A344
	0x0396B684 ADRP X8, 0x7B2000
	0x0396B688 LDR X8, [X8 + 0x8B0]
	0x0396B68C LDR W9, [X31 + 0x74]
	0x0396B690 MOV X0, X25
	0x0396B694 MOV W1, W22
	0x0396B698 LDR X3, [X8]
	0x0396B69C LDR W8, [X31 + 0x54]
	0x0396B6A0 ADD W19, W9, 0x1
	0x0396B6A4 ADD W2, W9, W8
	0x0396B6A8 BL 0x2A0A330
	0x0396B6AC LDR X2, [X29]
	0x0396B6B0 MOV X0, X27
	0x0396B6B4 MOV W1, W21
	0x0396B6B8 BL 0x2A0A530
	0x0396B6BC MOV W26, W19
	0x0396B6C0 TBZ X0, 0x0, 0x396B6D0
	0x0396B6C4 B 0x396B720
	0x0396B6C8 LDR W26, [X31 + 0x74]
	0x0396B6CC CBZ X25, 0x396BD8C
	0x0396B6D0 LDR X2, [X24]
	0x0396B6D4 MOV X0, X25
	0x0396B6D8 MOV W1, W21
	0x0396B6DC BL 0x2A0A2A8
	0x0396B6E0 ADRP X8, 0x792000
	0x0396B6E4 LDR X8, [X8 + 0x858]
	0x0396B6E8 MOV W2, W0
	0x0396B6EC MOV X0, X27
	0x0396B6F0 MOV W1, W21
	0x0396B6F4 LDR X3, [X8]
	0x0396B6F8 BL 0x2A0A344
	0x0396B6FC ADRP X8, 0x7B2000
	0x0396B700 LDR X8, [X8 + 0x8B0]
	0x0396B704 MOV X0, X25
	0x0396B708 MOV W1, W21
	0x0396B70C ADD W19, W26, 0x1
	0x0396B710 LDR X3, [X8]
	0x0396B714 LDR W8, [X31 + 0x54]
	0x0396B718 ADD W2, W26, W8
	0x0396B71C BL 0x2A0A330
	0x0396B720 LDR X2, [X24]
	0x0396B724 MOV X0, X27
	0x0396B728 MOV W1, W22
	0x0396B72C BL 0x2A0A2A8
	0x0396B730 MOV W2, W0
	0x0396B734 STR W19, [X31 + 0x74]
	0x0396B738 ADRP X26, 0x792000
	0x0396B73C LDR X26, [X26 + 0x858]
	0x0396B740 MOV X0, X25
	0x0396B744 MOV W1, W28
	0x0396B748 LDR X3, [X26]
	0x0396B74C BL 0x2A0A344
	0x0396B750 LDR X2, [X24]
	0x0396B754 MOV X0, X27
	0x0396B758 MOV W1, W21
	0x0396B75C BL 0x2A0A2A8
	0x0396B760 LDR X3, [X26]
	0x0396B764 ADD W29, W28, 0x1
	0x0396B768 MOV W2, W0
	0x0396B76C MOV X0, X25
	0x0396B770 MOV W1, W29
	0x0396B774 BL 0x2A0A344
	0x0396B778 LDR X2, [X24]
	0x0396B77C MOV X0, X25
	0x0396B780 MOV W1, W22
	0x0396B784 BL 0x2A0A2A8
	0x0396B788 LDR X3, [X26]
	0x0396B78C ADD W19, W28, 0x2
	0x0396B790 MOV W2, W0
	0x0396B794 MOV X0, X25
	0x0396B798 MOV W1, W19
	0x0396B79C BL 0x2A0A344
	0x0396B7A0 LDR X2, [X24]
	0x0396B7A4 MOV X0, X25
	0x0396B7A8 MOV W1, W21
	0x0396B7AC BL 0x2A0A2A8
	0x0396B7B0 LDR X3, [X26]
	0x0396B7B4 ADD W27, W28, 0x3
	0x0396B7B8 MOV W2, W0
	0x0396B7BC MOV X0, X25
	0x0396B7C0 MOV W1, W27
	0x0396B7C4 MOV W20, W28
	0x0396B7C8 BL 0x2A0A344
	0x0396B7CC ADRP X26, 0x7E4000
	0x0396B7D0 LDR X26, [X26 + 0x1D0]
	0x0396B7D4 MOV X0, X23
	0x0396B7D8 MOV W1, W22
	0x0396B7DC LDR X2, [X26]
	0x0396B7E0 BL 0x301BCCC
	0x0396B7E4 ADRP X28, 0x7E3000
	0x0396B7E8 LDR X28, [X28 + 0x20]
	0x0396B7EC MOV X25, X0
	0x0396B7F0 LDR X8, [X28]
	0x0396B7F4 MOV X0, X8
	0x0396B7F8 BL 0x1C16F10
	0x0396B7FC MOV X1, X25
	0x0396B800 MOV X2, X31
	0x0396B804 MOV X24, X0
	0x0396B808 BL 0x393DFBC
	0x0396B80C LDR X2, [X26]
	0x0396B810 MOV X0, X23
	0x0396B814 MOV W1, W21
	0x0396B818 BL 0x301BCCC
	0x0396B81C LDR X8, [X28]
	0x0396B820 MOV X26, X0
	0x0396B824 MOV X0, X8
	0x0396B828 BL 0x1C16F10
	0x0396B82C MOV X1, X26
	0x0396B830 MOV X2, X31
	0x0396B834 MOV X25, X0
	0x0396B838 BL 0x393DFBC
	0x0396B83C CBZ X24, 0x396BD8C
	0x0396B840 LDP S0, S1, [X24 + 0x10]
	0x0396B844 LDR V2, [X24 + 0x18]
	0x0396B848 MOV X0, X24
	0x0396B84C MOV X1, X31
	0x0396B850 FADD S0, S10, S0
	0x0396B854 FADD S1, S11, S1
	0x0396B858 FADD S2, S9, S2
	0x0396B85C BL 0x393D8A8
	0x0396B860 CBZ X25, 0x396BD8C
	0x0396B864 LDP S0, S1, [X25 + 0x10]
	0x0396B868 LDR V2, [X25 + 0x18]
	0x0396B86C MOV X0, X25
	0x0396B870 MOV X1, X31
	0x0396B874 FADD S0, S10, S0
	0x0396B878 FADD S1, S11, S1
	0x0396B87C FADD S2, S9, S2
	0x0396B880 BL 0x393D8A8
	0x0396B884 ADRP X8, 0x7E4000
	0x0396B888 LDR X8, [X8 + 0x1D0]
	0x0396B88C MOV X0, X23
	0x0396B890 MOV W1, W22
	0x0396B894 LDR X2, [X8]
	0x0396B898 BL 0x301BCCC
	0x0396B89C ADRP X8, 0x7E3000
	0x0396B8A0 LDR X8, [X8 + 0x20]
	0x0396B8A4 MOV X26, X0
	0x0396B8A8 LDR X8, [X8]
	0x0396B8AC MOV X0, X8
	0x0396B8B0 BL 0x1C16F10
	0x0396B8B4 MOV X1, X26
	0x0396B8B8 MOV X2, X31
	0x0396B8BC MOV X22, X0
	0x0396B8C0 BL 0x393DFBC
	0x0396B8C4 ADRP X26, 0x7E4000
	0x0396B8C8 LDR W10, [X23 + 0x1C]
	0x0396B8CC LDR X8, [X23 + 0x10]
	0x0396B8D0 LDR X26, [X26 + 0x1C0]
	0x0396B8D4 ADD W10, W10, 0x1
	0x0396B8D8 LDR X9, [X26]
	0x0396B8DC STR W10, [X23 + 0x1C]
	0x0396B8E0 CBZ X8, 0x396BD8C
	0x0396B8E4 LDRSW X10, [X23 + 0x18]
	0x0396B8E8 LDR W11, [X8 + 0x18]
	0x0396B8EC CMP W10, W11
	0x0396B8F0 B.CS 0x396B908
	0x0396B8F4 ADD W9, W10, 0x1
	0x0396B8F8 ADD X8, X8, X10, 0x3, LSL
	0x0396B8FC STR W9, [X23 + 0x18]
	0x0396B900 STR X22, [X8 + 0x20]
	0x0396B904 B 0x396B920
	0x0396B908 LDR X8, [X9 + 0x20]
	0x0396B90C MOV X0, X23
	0x0396B910 MOV X1, X22
	0x0396B914 LDR X8, [X8 + 0xC0]
	0x0396B918 LDR X2, [X8 + 0x70]
	0x0396B91C BL 0x301BF90
	0x0396B920 ADRP X8, 0x7E4000
	0x0396B924 LDR X8, [X8 + 0x1D0]
	0x0396B928 MOV X0, X23
	0x0396B92C MOV W1, W21
	0x0396B930 LDR X2, [X8]
	0x0396B934 BL 0x301BCCC
	0x0396B938 ADRP X8, 0x7E3000
	0x0396B93C LDR X8, [X8 + 0x20]
	0x0396B940 MOV X22, X0
	0x0396B944 LDR X8, [X8]
	0x0396B948 MOV X0, X8
	0x0396B94C BL 0x1C16F10
	0x0396B950 MOV X1, X22
	0x0396B954 MOV X2, X31
	0x0396B958 MOV X21, X0
	0x0396B95C BL 0x393DFBC
	0x0396B960 LDR W8, [X23 + 0x1C]
	0x0396B964 LDR X10, [X23 + 0x10]
	0x0396B968 LDR X9, [X26]
	0x0396B96C ADD W8, W8, 0x1
	0x0396B970 STR W8, [X23 + 0x1C]
	0x0396B974 CBZ X10, 0x396BD8C
	0x0396B978 LDRSW X11, [X23 + 0x18]
	0x0396B97C LDR W12, [X10 + 0x18]
	0x0396B980 CMP W11, W12
	0x0396B984 B.CS 0x396B99C
	0x0396B988 ADD W9, W11, 0x1
	0x0396B98C ADD X10, X10, X11, 0x3, LSL
	0x0396B990 STR W9, [X23 + 0x18]
	0x0396B994 STR X21, [X10 + 0x20]
	0x0396B998 B 0x396B9B8
	0x0396B99C LDR X8, [X9 + 0x20]
	0x0396B9A0 MOV X0, X23
	0x0396B9A4 MOV X1, X21
	0x0396B9A8 LDR X8, [X8 + 0xC0]
	0x0396B9AC LDR X2, [X8 + 0x70]
	0x0396B9B0 BL 0x301BF90
	0x0396B9B4 LDP W9, W8, [X23 + 0x18]
	0x0396B9B8 LDR X11, [X23 + 0x10]
	0x0396B9BC LDR X10, [X26]
	0x0396B9C0 ADD W8, W8, 0x1
	0x0396B9C4 STR W8, [X23 + 0x1C]
	0x0396B9C8 CBZ X11, 0x396BD8C
	0x0396B9CC LDR W12, [X11 + 0x18]
	0x0396B9D0 CMP W9, W12
	0x0396B9D4 B.CS 0x396B9EC
	0x0396B9D8 ADD W10, W9, 0x1
	0x0396B9DC ADD X9, X11, W9, 0x3, SXTW
	0x0396B9E0 STR W10, [X23 + 0x18]
	0x0396B9E4 STR X24, [X9 + 0x20]
	0x0396B9E8 B 0x396BA08
	0x0396B9EC LDR X8, [X10 + 0x20]
	0x0396B9F0 MOV X0, X23
	0x0396B9F4 MOV X1, X24
	0x0396B9F8 LDR X8, [X8 + 0xC0]
	0x0396B9FC LDR X2, [X8 + 0x70]
	0x0396BA00 BL 0x301BF90
	0x0396BA04 LDP W10, W8, [X23 + 0x18]
	0x0396BA08 LDR X9, [X23 + 0x10]
	0x0396BA0C LDR X11, [X26]
	0x0396BA10 ADD W8, W8, 0x1
	0x0396BA14 STR W8, [X23 + 0x1C]
	0x0396BA18 CBZ X9, 0x396BD8C
	0x0396BA1C LDR W8, [X9 + 0x18]
	0x0396BA20 CMP W10, W8
	0x0396BA24 B.CS 0x396BA3C
	0x0396BA28 ADD W8, W10, 0x1
	0x0396BA2C ADD X9, X9, W10, 0x3, SXTW
	0x0396BA30 STR W8, [X23 + 0x18]
	0x0396BA34 STR X25, [X9 + 0x20]
	0x0396BA38 B 0x396BA54
	0x0396BA3C LDR X8, [X11 + 0x20]
	0x0396BA40 MOV X0, X23
	0x0396BA44 MOV X1, X25
	0x0396BA48 LDR X8, [X8 + 0xC0]
	0x0396BA4C LDR X2, [X8 + 0x70]
	0x0396BA50 BL 0x301BF90
	0x0396BA54 ADRP X8, 0x789000
	0x0396BA58 LDR X8, [X8 + 0xE58]
	0x0396BA5C MOVZ W1, 0x6
	0x0396BA60 LDR X0, [X8]
	0x0396BA64 BL 0x1C16D6C
	0x0396BA68 LDR X25, [X31 + 0x48]
	0x0396BA6C CBZ X0, 0x396BD8C
	0x0396BA70 LDR W8, [X0 + 0x18]
	0x0396BA74 MOV X21, X0
	0x0396BA78 CBZ W8, 0x396BD90
	0x0396BA7C CMP W8, 0x1
	0x0396BA80 STR W20, [X21 + 0x20]
	0x0396BA84 B.EQ 0x396BD90
	0x0396BA88 CMP W8, 0x2
	0x0396BA8C STR W29, [X21 + 0x24]
	0x0396BA90 B.LS 0x396BD90
	0x0396BA94 CMP W8, 0x3
	0x0396BA98 STR W19, [X21 + 0x28]
	0x0396BA9C B.EQ 0x396BD90
	0x0396BAA0 CMP W8, 0x4
	0x0396BAA4 STR W29, [X21 + 0x2C]
	0x0396BAA8 B.LS 0x396BD90
	0x0396BAAC CMP W8, 0x5
	0x0396BAB0 STR W27, [X21 + 0x30]
	0x0396BAB4 B.EQ 0x396BD90
	0x0396BAB8 LDR X8, [X31 + 0x68]
	0x0396BABC STR W19, [X21 + 0x34]
	0x0396BAC0 LDR X19, [X31 + 0x88]
	0x0396BAC4 MOVI V2.2D, 0x0
	0x0396BAC8 LDP V0, V1, [X8]
	0x0396BACC ADD X0, X31, 0xD0
	0x0396BAD0 LDR W22, [X19 + 0x48]
	0x0396BAD4 ADD X1, X31, 0xB0
	0x0396BAD8 MOV X2, X31
	0x0396BADC STP V2, V2, [X31 + 0xD0]
	0x0396BAE0 STP V0, V1, [X31 + 0xF0]
	0x0396BAE4 STP V0, V1, [X31 + 0xB0]
	0x0396BAE8 BL 0x38F69EC
	0x0396BAEC ADRP X8, 0x7E3000
	0x0396BAF0 LDR W24, [X19 + 0x18]
	0x0396BAF4 LDR X8, [X8 + 0x560]
	0x0396BAF8 LDR X0, [X8]
	0x0396BAFC BL 0x1C16F10
	0x0396BB00 LDP V0, V1, [X31 + 0xD0]
	0x0396BB04 ADD X3, X31, 0x90
	0x0396BB08 MOVN W5, 0x0
	0x0396BB0C MOVN W6, 0x0
	0x0396BB10 MOV X1, X21
	0x0396BB14 MOV W2, W22
	0x0396BB18 MOV W4, W24
	0x0396BB1C MOV W7, W31
	0x0396BB20 MOV X19, X0
	0x0396BB24 STP V0, V1, [X31 + 0x90]
	0x0396BB28 STR X31, [X31]
	0x0396BB2C BL 0x39004D4
	0x0396BB30 LDR X28, [X31 + 0x40]
	0x0396BB34 CBZ X28, 0x396BD8C
	0x0396BB38 LDR X8, [X31 + 0x60]
	0x0396BB3C LDR X10, [X31 + 0x80]
	0x0396BB40 LDR W9, [X28 + 0x18]
	0x0396BB44 ADD X8, X8, X10
	0x0396BB48 CMP W8, W9
	0x0396BB4C B.CS 0x396BD90
	0x0396BB50 ADD X8, X28, W8, 0x3, SXTW
	0x0396BB54 STR X19, [X8 + 0x20]
	0x0396BB58 LDR X8, [X31 + 0x58]
	0x0396BB5C LDR X9, [X31 + 0x78]
	0x0396BB60 ADRP X29, 0x7E3000
	0x0396BB64 LDP X27, X26, [X31 + 0x30]
	0x0396BB68 LDR W8, [X8 + 0x18]
	0x0396BB6C LDR X29, [X29 + 0xD08]
	0x0396BB70 LDR X21, [X31 + 0x88]
	0x0396BB74 ADD X10, X10, 0x1
	0x0396BB78 CMP X10, W8, SXTW
	0x0396BB7C ADD X9, X9, 0x8
	0x0396BB80 B.LT 0x396B5E8
	0x0396BB84 LDR W8, [X31 + 0x28]
	0x0396BB88 LDR X24, [X31 + 0x18]
	0x0396BB8C ADD W8, W8, W10
	0x0396BB90 STR W8, [X31 + 0x28]
	0x0396BB94 MOV X0, X21
	0x0396BB98 MOV X1, X31
	0x0396BB9C BL 0x38FF530
	0x0396BBA0 CBZ X0, 0x396BD8C
	0x0396BBA4 MOVZ W19, 0x8
	0x0396BBA8 LDRSW X8, [X0 + 0x18]
	0x0396BBAC SUB X20, X19, 0x8
	0x0396BBB0 CMP X20, X8
	0x0396BBB4 B.GE 0x396BC90
	0x0396BBB8 MOV X0, X21
	0x0396BBBC MOV X1, X31
	0x0396BBC0 BL 0x38FF530
	0x0396BBC4 CBZ X0, 0x396BD8C
	0x0396BBC8 LDR W8, [X0 + 0x18]
	0x0396BBCC CMP X20, X8
	0x0396BBD0 B.CS 0x396BD90
	0x0396BBD4 CBZ X23, 0x396BD8C
	0x0396BBD8 ADRP X8, 0x7E4000
	0x0396BBDC LDR W1, [X0, X19, LSL #2]
	0x0396BBE0 LDR X8, [X8 + 0x1D0]
	0x0396BBE4 MOV X0, X23
	0x0396BBE8 LDR X2, [X8]
	0x0396BBEC BL 0x301BCCC
	0x0396BBF0 CBZ X0, 0x396BD8C
	0x0396BBF4 LDP S0, S1, [X0 + 0x10]
	0x0396BBF8 LDR V2, [X0 + 0x18]
	0x0396BBFC MOV X1, X31
	0x0396BC00 FADD S0, S10, S0
	0x0396BC04 FADD S1, S11, S1
	0x0396BC08 FADD S2, S9, S2
	0x0396BC0C BL 0x393D8A8
	0x0396BC10 CBZ X26, 0x396BC78
	0x0396BC14 MOV X0, X21
	0x0396BC18 MOV X1, X31
	0x0396BC1C BL 0x38FF530
	0x0396BC20 CBZ X0, 0x396BD8C
	0x0396BC24 LDR W8, [X0 + 0x18]
	0x0396BC28 CMP X20, X8
	0x0396BC2C B.CS 0x396BD90
	0x0396BC30 LDR W1, [X0, X19, LSL #2]
	0x0396BC34 LDR X2, [X29]
	0x0396BC38 MOV X0, X26
	0x0396BC3C BL 0x2A0A530
	0x0396BC40 TBZ X0, 0x0, 0x396BC78
	0x0396BC44 MOV X0, X21
	0x0396BC48 MOV X1, X31
	0x0396BC4C BL 0x38FF530
	0x0396BC50 CBZ X0, 0x396BD8C
	0x0396BC54 LDR W8, [X0 + 0x18]
	0x0396BC58 CMP X20, X8
	0x0396BC5C B.CS 0x396BD90
	0x0396BC60 ADRP X8, 0x7B2000
	0x0396BC64 LDR W1, [X0, X19, LSL #2]
	0x0396BC68 LDR X8, [X8 + 0x8A8]
	0x0396BC6C MOV X0, X26
	0x0396BC70 LDR X2, [X8]
	0x0396BC74 BL 0x2A0B690
	0x0396BC78 MOV X0, X21
	0x0396BC7C MOV X1, X31
	0x0396BC80 BL 0x38FF530
	0x0396BC84 ADD X19, X19, 0x1
	0x0396BC88 CBNZ X0, 0x396BBA8
	0x0396BC8C B 0x396BD8C
	0x0396BC90 LDR X20, [X31 + 0x20]
	0x0396BC94 LDR W9, [X31 + 0x2C]
	0x0396BC98 LDR W8, [X20 + 0x18]
	0x0396BC9C ADD W9, W9, 0x1
	0x0396BCA0 CMP W9, W8
	0x0396BCA4 B.LT 0x396B540
	0x0396BCA8 MOV X0, X24
	0x0396BCAC MOV X1, X23
	0x0396BCB0 MOV W2, W31
	0x0396BCB4 MOV X3, X31
	0x0396BCB8 BL 0x3916CF4
	0x0396BCBC MOV X0, X24
	0x0396BCC0 MOV X1, X31
	0x0396BCC4 BL 0x39140C8
	0x0396BCC8 CBZ X28, 0x396BD8C
	0x0396BCCC ADRP X8, 0x7E3000
	0x0396BCD0 LDR W21, [X28 + 0x18]
	0x0396BCD4 LDR X8, [X8 + 0x3F0]
	0x0396BCD8 MOV W19, W0
	0x0396BCDC ADD W1, W19, W21
	0x0396BCE0 LDR X0, [X8]
	0x0396BCE4 BL 0x1C16D6C
	0x0396BCE8 LDR X8, [X24 + 0x28]
	0x0396BCEC MOV X22, X0
	0x0396BCF0 MOV W1, W31
	0x0396BCF4 MOV X2, X22
	0x0396BCF8 MOV X0, X8
	0x0396BCFC MOV W3, W31
	0x0396BD00 MOV W4, W19
	0x0396BD04 MOV X5, X31
	0x0396BD08 BL 0x339FCE8
	0x0396BD0C MOV X0, X28
	0x0396BD10 MOV W1, W31
	0x0396BD14 MOV X2, X22
	0x0396BD18 MOV W3, W19
	0x0396BD1C MOV W4, W21
	0x0396BD20 MOV X5, X31
	0x0396BD24 BL 0x339FCE8
	0x0396BD28 MOV X0, X24
	0x0396BD2C MOV X1, X22
	0x0396BD30 MOV X2, X31
	0x0396BD34 BL 0x39159C8
	0x0396BD38 MOV X0, X24
	0x0396BD3C MOV X1, X25
	0x0396BD40 MOV X2, X31
	0x0396BD44 BL 0x3916234
	0x0396BD48 MOV X0, X24
	0x0396BD4C MOV X1, X26
	0x0396BD50 MOV X2, X31
	0x0396BD54 BL 0x391634C
	0x0396BD58 B 0x396BD60
	0x0396BD5C MOV X28, X31
	0x0396BD60 MOV X0, X28
	0x0396BD64 LDP X20, X19, [X31 + 0x180]
	0x0396BD68 LDP X22, X21, [X31 + 0x170]
	0x0396BD6C LDP X24, X23, [X31 + 0x160]
	0x0396BD70 LDP X26, X25, [X31 + 0x150]
	0x0396BD74 LDP X28, X27, [X31 + 0x140]
	0x0396BD78 LDP X29, X30, [X31 + 0x130]
	0x0396BD7C LDP D9, D8, [X31 + 0x120]
	0x0396BD80 LDP D11, D10, [X31 + 0x110]
	0x0396BD84 ADD X31, X31, 0x190
	0x0396BD88 RET
	0x0396BD8C BL 0x1C16F20
	0x0396BD90 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xA77000
	015 Move X20, 0x7E5000
	016 Move W8, [X19+2531]
	017 Move X20, [X20+3256]
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {128}
	024 Move X0, 0x7E5000
	025 Move X0, [X0+3264]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E5000
	028 Move X0, [X0+808]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E5000
	031 Move X0, [X0+3272]
	032 Call 0x1C17CF4
	033 Move X0, 0x7E5000
	034 Move X0, [X0+112]
	035 Call 0x1C17CF4
	036 Move X0, 0x7E5000
	037 Move X0, [X0+3280]
	038 Call 0x1C17CF4
	039 Move X0, 0x78A000
	040 Move X0, [X0+3576]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E5000
	043 Move X0, [X0+3288]
	044 Call 0x1C17CF4
	045 Move X0, 0x7E5000
	046 Move X0, [X0+3296]
	047 Call 0x1C17CF4
	048 Move X0, 0x7E5000
	049 Move X0, [X0+3304]
	050 Call 0x1C17CF4
	051 Move X0, 0x78A000
	052 Move X0, [X0+3672]
	053 Call 0x1C17CF4
	054 Move X0, 0x7E5000
	055 Move X0, [X0+3312]
	056 Call 0x1C17CF4
	057 Move X0, 0x7E5000
	058 Move X0, [X0+3320]
	059 Call 0x1C17CF4
	060 Move X0, 0x7E5000
	061 Move X0, [X0+32]
	062 Call 0x1C17CF4
	063 Move X0, 0x7E5000
	064 Move X0, [X0+3328]
	065 Call 0x1C17CF4
	066 Move X0, 0x7E5000
	067 Move X0, [X0+3336]
	068 Call 0x1C17CF4
	069 Move X0, 0x7E5000
	070 Move X0, [X0+3344]
	071 Call 0x1C17CF4
	072 Move X0, 0x7E5000
	073 Move X0, [X0+3352]
	074 Call 0x1C17CF4
	075 Move X0, 0x7E5000
	076 Move X0, [X0+3360]
	077 Call 0x1C17CF4
	078 Move X0, 0x7E5000
	079 Move X0, [X0+40]
	080 Call 0x1C17CF4
	081 Move X0, 0x7E4000
	082 Move X0, [X0+2808]
	083 Call 0x1C17CF4
	084 Move X0, 0x7E5000
	085 Move X0, [X0+3368]
	086 Call 0x1C17CF4
	087 Move X0, 0x7E5000
	088 Move X0, [X0+3376]
	089 Call 0x1C17CF4
	090 Move X0, 0x7E4000
	091 Move X0, [X0+2816]
	092 Call 0x1C17CF4
	093 Move X0, 0x7E5000
	094 Move X0, [X0+3384]
	095 Call 0x1C17CF4
	096 Move X0, 0x7E5000
	097 Move X0, [X0+3392]
	098 Call 0x1C17CF4
	099 Move X0, 0x7E5000
	100 Move X0, [X0+48]
	101 Call 0x1C17CF4
	102 Move X0, 0x7E5000
	103 Move X0, [X0+3400]
	104 Call 0x1C17CF4
	105 Move X0, 0x7E5000
	106 Move X0, [X0+3408]
	107 Call 0x1C17CF4
	108 Move X0, 0x7E5000
	109 Move X0, [X0+3416]
	110 Call 0x1C17CF4
	111 Move X0, 0x7E5000
	112 Move X0, [X0+3424]
	113 Call 0x1C17CF4
	114 Move X0, 0x7E5000
	115 Move X0, [X0+3432]
	116 Call 0x1C17CF4
	117 Move X0, 0x7E5000
	118 Move X0, [X0+3440]
	119 Call 0x1C17CF4
	120 Move X0, 0x7E5000
	121 Move X0, [X0+3256]
	122 Call 0x1C17CF4
	123 Move X0, 0x7E5000
	124 Move X0, [X0+2920]
	125 Call 0x1C17CF4
	126 Move W8, 1
	127 Move [X19+2531], W8
	128 Move X0, [X20]
	129 Call 0x1C17F10
	130 Move X1, X31
	131 Move X19, X0
	132 Call <>c__DisplayClass27_0..ctor, X0
	133 Compare X19, 0
	134 JumpIfEqual {570}
	135 Move X8, 0x7E5000
	136 Move X8, [X8+3304]
	137 Move [X19+16], X21
	138 Move [X31+40], X19
	139 Move X19, 0x7E5000
	140 Move X0, [X8]
	141 Move X20, 0x7E5000
	142 Move X21, 0x7E5000
	143 Move X19, [X19+3296]
	144 Move X20, [X20+3384]
	145 Move X21, [X21+3352]
	146 Call 0x1C17F10
	147 Move X1, [X19]
	148 Move [X31+8], X0
	149 Call HashSet`1<Object>..ctor, X0
	150 Move X0, [X20]
	151 Call 0x1C17F10
	152 Move X1, [X21]
	153 Move [X31+32], X0
	154 Call List`1<Object>..ctor, X0
	155 Compare X22, 0
	156 JumpIfEqual {570}
	157 Move W8, [X22+24]
	158 Move X20, [X31+40]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X8, 0x7E4000
	161 Move X23, 0x7E5000
	162 Move X8, [X8+2816]
	163 Move X23, [X23+3376]
	164 Move W1, W31
	165 Move [X31+16], X22
	166 Move X2, [X8]
	167 Move X0, X22
	168 Move [X31+28], W1
	169 Call List`1<Object>.get_Item, X0, X1
	170 Compare X0, 0
	171 JumpIfEqual {570}
	172 Move X8, [X0+56]
	173 Move X25, X0
	174 Compare X8, 0
	175 JumpIfNotEqual {548}
	176 Move X0, [X31+8]
	177 Compare X0, 0
	178 JumpIfEqual {570}
	179 Move X8, 0x7E5000
	180 Move X8, [X8+3288]
	181 Move X1, X25
	182 Move X2, [X8]
	183 Call HashSet`1<Object>.Contains, X0, X1
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfEqual {548}
	188 Move X0, [X20+16]
	189 Compare X0, 0
	190 JumpIfEqual {570}
	191 Move X8, 0x78A000
	192 Move W1, [X25+24]
	193 Move X8, [X8+3576]
	194 Move X2, [X8]
	195 Call HashSet`1<Int32>.Contains, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {212}
	200 Move X0, [X20+16]
	201 Compare X0, 0
	202 JumpIfEqual {570}
	203 Move X8, 0x78A000
	204 Move W1, [X25+28]
	205 Move X8, [X8+3576]
	206 Move X2, [X8]
	207 Call HashSet`1<Int32>.Contains, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {548}
	212 Move X8, 0x7E5000
	213 Move X8, [X8+48]
	214 Move X0, [X8]
	215 Call 0x1C17F10
	216 Move X8, 0x7E5000
	217 Move X8, [X8+40]
	218 Move X24, X0
	219 Move X1, [X8]
	220 Call List`1<Object>..ctor, X0
	221 Move X22, 0x7E5000
	222 Move X28, 0x7E5000
	223 Move W26, [X25+24]
	224 Move X21, [X31+8]
	225 Move X22, [X22+3280]
	226 Move X28, [X28+32]
	227 Move W19, 2049
	228 Move X27, X25
	229 Compare X27, 0
	230 JumpIfEqual {274}
	231 Subtract W19, W19, 1
	232 Move X2, [X22]
	233 Move X0, X21
	234 Move X1, X27
	235 Call HashSet`1<Object>.Add, X0, X1
	236 Compare X24, 0
	237 JumpIfEqual {570}
	238 Move W10, [X24+28]
	239 Move X8, [X24+16]
	240 Move X9, [X28]
	241 Add W10, W10, 1
	242 Move [X24+28], W10
	243 Compare X8, 0
	244 JumpIfEqual {570}
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Move W11, [X8+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add W9, W10, 1
	249 Add X8, X8, X10
	250 Move [X24+24], W9
	251 Move [X8+32], X27
	252 Move X8, [X9+32]
	253 Move X0, X24
	254 Move X1, X27
	255 Move X8, [X8+192]
	256 Move X2, [X8+112]
	257 Call List`1<Object>.AddWithResize, X0, X1
	258 Move X8, 0x7E5000
	259 Move X8, [X8+808]
	260 Move X0, [X8]
	261 Move W9, [X27+24]
	262 Move W8, [X27+28]
	263 Move W10, [X0+224]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CSEL not yet implemented."
	266 Compare W10, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X27
	270 Move W1, W26
	271 Call ElementSelection.FindNextEdgeInHole, X0, X1
	272 Move X27, X0
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, 0x7E5000
	275 Move X8, [X8+3392]
	276 Move X0, [X8]
	277 Call 0x1C17F10
	278 Move X8, 0x7E5000
	279 Move X8, [X8+3360]
	280 Move X25, X0
	281 Move X1, [X8]
	282 Call List`1<SimpleTuple`2<Int32, Int32>>..ctor, X0
	283 Move X27, 0x7E4000
	284 Move X27, [X27+2816]
	285 Compare X24, 0
	286 JumpIfEqual {570}
	287 Move W8, [X24+24]
	288 Move X28, 0x7E5000
	289 Move X28, [X28+3400]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move W26, W31
	292 Move X2, [X27]
	293 Move X0, X24
	294 Move W1, W26
	295 Call List`1<Object>.get_Item, X0, X1
	296 Move X21, X0
	297 Move W19, W26
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Compare X21, 0
	300 JumpIfEqual {570}
	301 Move X2, [X27]
	302 Move X22, [X21+24]
	303 Subtract W19, W19, 1
	304 Move X0, X24
	305 Move W1, W19
	306 Call List`1<Object>.get_Item, X0, X1
	307 Compare X0, 0
	308 JumpIfEqual {570}
	309 Move W8, [X0+24]
	310 Move X9, X22
	311 ShiftRight X9, 32
	312 And X9, X9, 0x7FFFFFFF
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X3, [X28]
	315 Add X0, X31, 72
	316 Move W1, W19
	317 Move W2, W26
	318 Move [X31+72], X31
	319 Call 0x25E79F8, X0, X1, X2
	320 Compare X25, 0
	321 JumpIfEqual {570}
	322 Move X9, 0x7E5000
	323 Move X1, [X31+72]
	324 Move W10, [X25+28]
	325 Move X8, [X25+16]
	326 Move X9, [X9+3320]
	327 Add W10, W10, 1
	328 Move X9, [X9]
	329 Move [X25+28], W10
	330 Compare X8, 0
	331 JumpIfEqual {570}
	332 NotImplemented "Instruction LDRSW not yet implemented."
	333 Move W11, [X8+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add W9, W10, 1
	336 Add X8, X8, X10
	337 Move [X25+24], W9
	338 Move [X8+32], X1
	339 Move X8, [X9+32]
	340 Move X0, X25
	341 Move X8, [X8+192]
	342 Move X2, [X8+112]
	343 Call List`1<SimpleTuple`2<Int32, Int32>>.AddWithResize, X0, X1
	344 Move W8, [X24+24]
	345 Add W26, W26, 1
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Compare X25, 0
	348 JumpIfEqual {570}
	349 Move X22, 0x7E5000
	350 Move X22, [X22+2920]
	351 Move W9, [X25+24]
	352 Move X0, [X22]
	353 Move [X31+52], W9
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {359}
	357 Call 0x1C17DFC
	358 Move X0, [X22]
	359 Move X8, [X0+184]
	360 Move X19, [X8+112]
	361 Compare X19, 0
	362 JumpIfNotEqual {384}
	363 Move W8, [X0+224]
	364 Compare W8, 0
	365 JumpIfNotEqual {368}
	366 Call 0x1C17DFC
	367 Move X0, [X22]
	368 Move X8, [X0+184]
	369 Move X21, [X8]
	370 Move X8, 0x7E5000
	371 Move X8, [X8+3264]
	372 Move X0, [X8]
	373 Call 0x1C17F10
	374 Move X8, 0x7E5000
	375 Move X8, [X8+3424]
	376 Move X1, X21
	377 Move X3, X31
	378 Move X19, X0
	379 Move X2, [X8]
	380 Call Comparison`1<SimpleTuple`2<Int32, Int32>>..ctor, X0, X1, X2
	381 Move X8, [X22]
	382 Move X8, [X8+184]
	383 Move [X8+112], X19
	384 Move X8, 0x7E5000
	385 Move X8, [X8+3344]
	386 Move X0, X25
	387 Move X1, X19
	388 Move X2, [X8]
	389 Call List`1<SimpleTuple`2<Int32, Int32>>.Sort, X0, X1
	390 Move X8, 0x78A000
	391 Move X8, [X8+3672]
	392 Move W19, [X31+52]
	393 Move X0, [X8]
	394 Move W1, W19
	395 Call 0x1C17D6C
	396 Subtract W8, W19, 1
	397 Move W9, [X31+52]
	398 Move X27, X0
	399 Move W28, W8
	400 Add X26, X0, 32
	401 Subtract W19, W9, 2
	402 Move X2, [X23]
	403 Move X0, X25
	404 Move W1, W28
	405 Call List`1<SimpleTuple`2<Int32, Int32>>.get_Item, X0, X1
	406 Move X2, [X23]
	407 Move X21, X0
	408 Move X0, X25
	409 Move W1, W28
	410 Call List`1<SimpleTuple`2<Int32, Int32>>.get_Item, X0, X1
	411 Compare X27, 0
	412 JumpIfEqual {570}
	413 Move W8, [X27+24]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move W9, W19
	416 Add X8, X27, X28
	417 Move [X31+64], X9
	418 Move X10, 0x7E5000
	419 Move W8, [X8+32]
	420 Move X10, [X10+3328]
	421 Move X9, X0
	422 ShiftRight X9, 32
	423 And X9, X9, 0x7FFFFFFF
	424 Move X0, X24
	425 Add W8, W8, W21
	426 Move X3, [X10]
	427 Subtract W8, W9, W8
	428 Add W19, W8, 1
	429 Move W1, W21
	430 Move W2, W19
	431 Call List`1<Object>.GetRange, X0, X1, X2
	432 Move X8, 0x7E5000
	433 Move X8, [X8+3336]
	434 Move X29, X0
	435 Move X0, X24
	436 Move W1, W21
	437 Move X3, [X8]
	438 Move W2, W19
	439 Call List`1<Object>.RemoveRange, X0, X1, X2
	440 Subtract X8, X28, 1
	441 Move [X31+56], X8
	442 Move X21, [X31+64]
	443 Move W22, W28
	444 Move X2, [X23]
	445 Move X0, X25
	446 Move W1, W21
	447 Call List`1<SimpleTuple`2<Int32, Int32>>.get_Item, X0, X1
	448 Move X2, [X23]
	449 Move X20, X0
	450 ShiftRight X20, 32
	451 And X20, X20, 0x7FFFFFFF
	452 Move X0, X25
	453 Move W1, W28
	454 Call List`1<SimpleTuple`2<Int32, Int32>>.get_Item, X0, X1
	455 Move X8, X0
	456 ShiftRight X8, 32
	457 And X8, X8, 0x7FFFFFFF
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W8, [X27+24]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move W8, [X26]
	462 Add W8, W8, W19
	463 Move [X26], W8
	464 Subtract W22, W22, 1
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X21, X21, 1
	467 Move W8, [X31+52]
	468 Move X20, [X31+40]
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move X19, [X20+24]
	471 Compare X19, 0
	472 JumpIfNotEqual {485}
	473 Move X8, 0x7E5000
	474 Move X8, [X8+112]
	475 Move X0, [X8]
	476 Call 0x1C17F10
	477 Move X8, 0x7E5000
	478 Move X8, [X8+3432]
	479 Move X1, X20
	480 Move X3, X31
	481 Move X19, X0
	482 Move X2, [X8]
	483 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	484 Move [X20+24], X19
	485 Move X8, 0x7E5000
	486 Move X8, [X8+3272]
	487 Move X0, X29
	488 Move X1, X19
	489 Move X2, [X8]
	490 Call Enumerable.Any, X0, X1
	491 Move TEMP, X0
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfEqual {520}
	495 Move X19, [X20+32]
	496 Compare X19, 0
	497 JumpIfNotEqual {510}
	498 Move X8, 0x7E5000
	499 Move X8, [X8+112]
	500 Move X0, [X8]
	501 Call 0x1C17F10
	502 Move X8, 0x7E5000
	503 Move X8, [X8+3440]
	504 Move X1, X20
	505 Move X3, X31
	506 Move X19, X0
	507 Move X2, [X8]
	508 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	509 Move [X20+32], X19
	510 Move X8, 0x7E5000
	511 Move X8, [X8+3272]
	512 Move X0, X29
	513 Move X1, X19
	514 Move X2, [X8]
	515 Call Enumerable.Any, X0, X1
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfNotEqual {544}
	520 Move X0, [X31+32]
	521 Compare X0, 0
	522 JumpIfEqual {570}
	523 Move X9, 0x7E5000
	524 Move W10, [X0+28]
	525 Move X8, [X0+16]
	526 Move X9, [X9+3312]
	527 Add W10, W10, 1
	528 Move X9, [X9]
	529 Move [X0+28], W10
	530 Compare X8, 0
	531 JumpIfEqual {570}
	532 NotImplemented "Instruction LDRSW not yet implemented."
	533 Move W11, [X8+24]
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Add W9, W10, 1
	536 Add X8, X8, X10
	537 Move [X0+24], W9
	538 Move [X8+32], X29
	539 Move X8, [X9+32]
	540 Move X1, X29
	541 Move X8, [X8+192]
	542 Move X2, [X8+112]
	543 Call List`1<Object>.AddWithResize, X0, X1
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X28, [X31+56]
	546 Move X8, [X31+64]
	547 Subtract W19, W8, 1
	548 Move X22, [X31+16]
	549 Move W1, [X31+28]
	550 Move W8, [X22+24]
	551 Add W1, W1, 1
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move X8, 0x7E4000
	554 Move X8, [X8+2816]
	555 Move X0, [X31+32]
	556 Move X20, [X31+160]
	557 Move X19, [X31+168]
	558 Move X22, [X31+144]
	559 Move X21, [X31+152]
	560 Move X24, [X31+128]
	561 Move X23, [X31+136]
	562 Move X26, [X31+112]
	563 Move X25, [X31+120]
	564 Move X28, [X31+96]
	565 Move X27, [X31+104]
	566 Move X29, [X31+80]
	567 Move X30, [X31+88]
	568 Add X31, X31, 176
	569 Return X0
	570 Call 0x1C17F20
	571 Call 0x1C17F28

Method: UnityEngine.ProBuilder.WingedEdge FindNextEdgeInHole(UnityEngine.ProBuilder.WingedEdge wing, System.Int32 common)

Disassembly:
	0x0396BD94 STP D15, D14, [X31 - 0xA0]!
	0x0396BD98 STP D13, D12, [X31 + 0x10]
	0x0396BD9C STP D11, D10, [X31 + 0x20]
	0x0396BDA0 STP D9, D8, [X31 + 0x30]
	0x0396BDA4 STP X29, X30, [X31 + 0x40]
	0x0396BDA8 STP X28, X27, [X31 + 0x50]
	0x0396BDAC STP X26, X25, [X31 + 0x60]
	0x0396BDB0 STP X24, X23, [X31 + 0x70]
	0x0396BDB4 STP X22, X21, [X31 + 0x80]
	0x0396BDB8 STP X20, X19, [X31 + 0x90]
	0x0396BDBC SUB X31, X31, 0x270
	0x0396BDC0 ADRP X19, 0xA76000
	0x0396BDC4 LDRB W8, [X19 + 0x9F0]
	0x0396BDC8 MOV X20, X1
	0x0396BDCC MOV X24, X0
	0x0396BDD0 STR S0, [X31 + 0x10]
	0x0396BDD4 STR W2, [X31 + 0x14]
	0x0396BDD8 TBNZ X8, 0x0, 0x396C12C
	0x0396BDDC ADRP X0, 0x7E4000
	0x0396BDE0 LDR X0, [X0 + 0xDA0]
	0x0396BDE4 BL 0x1C16CF4
	0x0396BDE8 ADRP X0, 0x792000
	0x0396BDEC LDR X0, [X0 + 0x858]
	0x0396BDF0 BL 0x1C16CF4
	0x0396BDF4 ADRP X0, 0x7B2000
	0x0396BDF8 LDR X0, [X0 + 0x8D0]
	0x0396BDFC BL 0x1C16CF4
	0x0396BE00 ADRP X0, 0x7E3000
	0x0396BE04 LDR X0, [X0 + 0xD08]
	0x0396BE08 BL 0x1C16CF4
	0x0396BE0C ADRP X0, 0x7E4000
	0x0396BE10 LDR X0, [X0 + 0xDA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {36}
	007 Move X2, X31
	008 Move W19, W1
	009 Move X20, X0
	010 Call WingedEdge.GetAdjacentEdgeWithCommonIndex, X0, X1
	011 Move X1, X31
	012 Compare X0, 0
	013 JumpIfEqual {30}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W21, 2049
	016 Subtract W21, W21, 1
	017 Move X8, [X0+56]
	018 Move X1, X0
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X0, X8
	022 Move W1, W19
	023 Move X2, X31
	024 Call WingedEdge.GetAdjacentEdgeWithCommonIndex, X0, X1
	025 Move X1, X31
	026 Compare X0, 0
	027 JumpIfEqual {30}
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X1, X31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X1
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0396BE14 BL 0x1C16CF4
	0x0396BE18 ADRP X0, 0x7E4000
	0x0396BE1C LDR X0, [X0 + 0xDB0]
	0x0396BE20 BL 0x1C16CF4
	0x0396BE24 ADRP X0, 0x7E4000
	0x0396BE28 LDR X0, [X0 + 0x880]
	0x0396BE2C BL 0x1C16CF4
	0x0396BE30 ADRP X0, 0x7B2000
	0x0396BE34 LDR X0, [X0 + 0x8A8]
	0x0396BE38 BL 0x1C16CF4
	0x0396BE3C ADRP X0, 0x792000
	0x0396BE40 LDR X0, [X0 + 0x870]
	0x0396BE44 BL 0x1C16CF4
	0x0396BE48 ADRP X0, 0x7E4000
	0x0396BE4C LDR X0, [X0 + 0xDB8]
	0x0396BE50 BL 0x1C16CF4
	0x0396BE54 ADRP X0, 0x7E4000
	0x0396BE58 LDR X0, [X0 + 0xDC0]
	0x0396BE5C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA77000
	005 Move X20, 0x7E5000
	006 Move W8, [X19+2532]
	007 Move X20, [X20+808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7E5000
	013 Move X0, [X0+808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2532], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move [X8+8], W31
	023 Move X30, [X31+32]
	024 Return 

