Type: UnityEngine.ProBuilder.MeshOperations.ElementSelection/<>c

Method: System.Void .cctor()

Disassembly:
	0x0396BE60 ADRP X0, 0x792000
	0x0396BE64 LDR X0, [X0 + 0x890]
	0x0396BE68 BL 0x1C16CF4
	0x0396BE6C ADRP X0, 0x7E2000
	0x0396BE70 LDR X0, [X0 + 0xC80]
	0x0396BE74 BL 0x1C16CF4
	0x0396BE78 ADRP X0, 0x7E4000
	0x0396BE7C LDR X0, [X0 + 0xDC8]
	0x0396BE80 BL 0x1C16CF4
	0x0396BE84 ADRP X0, 0x7B2000
	0x0396BE88 LDR X0, [X0 + 0x8B0]
	0x0396BE8C BL 0x1C16CF4
	0x0396BE90 ADRP X0, 0x7E4000
	0x0396BE94 LDR X0, [X0 + 0xDD0]
	0x0396BE98 BL 0x1C16CF4
	0x0396BE9C ADRP X0, 0x792000
	0x0396BEA0 LDR X0, [X0 + 0x888]
	0x0396BEA4 BL 0x1C16CF4
	0x0396BEA8 ADRP X0, 0x7E4000
	0x0396BEAC LDR X0, [X0 + 0xD88]
	0x0396BEB0 BL 0x1C16CF4
	0x0396BEB4 ADRP X0, 0x7B3000
	0x0396BEB8 LDR X0, [X0 + 0xB18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA77000
	005 Move X20, 0x7E5000
	006 Move W8, [X19+2533]
	007 Move X20, [X20+2920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7E5000
	013 Move X0, [X0+2920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2533], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x0396BEBC BL 0x1C16CF4
	0x0396BEC0 ADRP X0, 0x7E4000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> <GetPerimeterEdges>b__5_0(UnityEngine.ProBuilder.Face x)

Disassembly:
	0x0396BEC4 LDR X0, [X0 + 0xDD8]
	0x0396BEC8 BL 0x1C16CF4
	0x0396BECC ADRP X0, 0x7E4000
	0x0396BED0 LDR X0, [X0 + 0xDE0]
	0x0396BED4 BL 0x1C16CF4
	0x0396BED8 ADRP X0, 0x7E4000

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call Face.get_edgesInternal, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Boolean <GetPerimeterEdges>b__5_1(System.Collections.Generic.KeyValuePair`2<UnityEngine.ProBuilder.Edge, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge>> x)

Disassembly:
	0x0396BEDC LDR X0, [X0 + 0xDE8]
	0x0396BEE0 BL 0x1C16CF4
	0x0396BEE4 ADRP X0, 0x7E4000
	0x0396BEE8 LDR X0, [X0 + 0x888]
	0x0396BEEC BL 0x1C16CF4
	0x0396BEF0 ADRP X0, 0x7E4000
	0x0396BEF4 LDR X0, [X0 + 0xDF0]
	0x0396BEF8 BL 0x1C16CF4
	0x0396BEFC ADRP X0, 0x7E4000
	0x0396BF00 LDR X0, [X0 + 0xDF8]
	0x0396BF04 BL 0x1C16CF4
	0x0396BF08 ADRP X0, 0x7B3000
	0x0396BF0C LDR X0, [X0 + 0xB28]
	0x0396BF10 BL 0x1C16CF4
	0x0396BF14 ADRP X0, 0x7E4000
	0x0396BF18 LDR X0, [X0 + 0xE00]
	0x0396BF1C BL 0x1C16CF4
	0x0396BF20 ADRP X0, 0x7E4000
	0x0396BF24 LDR X0, [X0 + 0x890]
	0x0396BF28 BL 0x1C16CF4
	0x0396BF2C ADRP X0, 0x7E4000
	0x0396BF30 LDR X0, [X0 + 0xE08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA77000
	005 Move W8, [X20+2534]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7E5000
	012 Move X0, [X0+3448]
	013 Call 0x1C17CF4
	014 Move X0, 0x7E4000
	015 Move X0, [X0+4064]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2534], W8
	019 Compare X19, 0
	020 JumpIfEqual {28}
	021 Move W8, [X19+24]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+32]
	027 Return X0
	028 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge <GetPerimeterEdges>b__5_2(System.Collections.Generic.KeyValuePair`2<UnityEngine.ProBuilder.Edge, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge>> x)

Disassembly:
	0x0396BF34 BL 0x1C16CF4
	0x0396BF38 ADRP X0, 0x7E4000
	0x0396BF3C LDR X0, [X0 + 0xE10]
	0x0396BF40 BL 0x1C16CF4
	0x0396BF44 ADRP X0, 0x7E4000
	0x0396BF48 LDR X0, [X0 + 0xE18]
	0x0396BF4C BL 0x1C16CF4
	0x0396BF50 ADRP X0, 0x7E4000
	0x0396BF54 LDR X0, [X0 + 0xE20]
	0x0396BF58 BL 0x1C16CF4
	0x0396BF5C ADRP X0, 0x7E4000
	0x0396BF60 LDR X0, [X0 + 0xE28]
	0x0396BF64 BL 0x1C16CF4
	0x0396BF68 ADRP X0, 0x7B3000
	0x0396BF6C LDR X0, [X0 + 0xB38]
	0x0396BF70 BL 0x1C16CF4
	0x0396BF74 ADRP X0, 0x7E4000
	0x0396BF78 LDR X0, [X0 + 0xE30]
	0x0396BF7C BL 0x1C16CF4
	0x0396BF80 ADRP X0, 0x7E4000
	0x0396BF84 LDR X0, [X0 + 0x898]
	0x0396BF88 BL 0x1C16CF4
	0x0396BF8C ADRP X0, 0x7E3000
	0x0396BF90 LDR X0, [X0 + 0x3F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA77000
	005 Move W8, [X20+2535]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7E5000
	012 Move X0, [X0+3448]
	013 Call 0x1C17CF4
	014 Move X0, 0x7E4000
	015 Move X0, [X0+4072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2535], W8
	019 Compare X19, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x7E4000
	022 Move X8, [X8+4072]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W1, W31
	027 Move X2, [X8]
	028 Move X30, [X31+32]
	029 Call List`1<Edge>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean <GetPerimeterFaces>b__7_0(System.Collections.Generic.KeyValuePair`2<UnityEngine.ProBuilder.Edge, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face>> x)

Disassembly:
	0x0396BF94 BL 0x1C16CF4
	0x0396BF98 ADRP X0, 0x7E3000
	0x0396BF9C LDR X0, [X0 + 0x560]
	0x0396BFA0 BL 0x1C16CF4
	0x0396BFA4 ADRP X0, 0x7E4000
	0x0396BFA8 LDR X0, [X0 + 0xE38]
	0x0396BFAC BL 0x1C16CF4
	0x0396BFB0 ADRP X0, 0x789000
	0x0396BFB4 LDR X0, [X0 + 0xE58]
	0x0396BFB8 BL 0x1C16CF4
	0x0396BFBC ADRP X0, 0x7DF000
	0x0396BFC0 LDR X0, [X0 + 0x360]
	0x0396BFC4 BL 0x1C16CF4
	0x0396BFC8 ADRP X0, 0x7E4000
	0x0396BFCC LDR X0, [X0 + 0xE40]
	0x0396BFD0 BL 0x1C16CF4
	0x0396BFD4 ADRP X0, 0x7E4000
	0x0396BFD8 LDR X0, [X0 + 0xE48]
	0x0396BFDC BL 0x1C16CF4
	0x0396BFE0 ADRP X0, 0x7E4000
	0x0396BFE4 LDR X0, [X0 + 0xE50]
	0x0396BFE8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA77000
	005 Move W8, [X20+2536]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7E5000
	012 Move X0, [X0+3456]
	013 Call 0x1C17CF4
	014 Move X0, 0x7E4000
	015 Move X0, [X0+3136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2536], W8
	019 Compare X19, 0
	020 JumpIfEqual {28}
	021 Move W8, [X19+24]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X30, [X31+32]
	027 Return X0
	028 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Face <GetPerimeterFaces>b__7_1(System.Collections.Generic.KeyValuePair`2<UnityEngine.ProBuilder.Edge, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face>> x)

Disassembly:
	0x0396BFEC ADRP X0, 0x7DF000
	0x0396BFF0 LDR X0, [X0 + 0x3D0]
	0x0396BFF4 BL 0x1C16CF4
	0x0396BFF8 ADRP X0, 0x789000
	0x0396BFFC LDR X0, [X0 + 0xE10]
	0x0396C000 BL 0x1C16CF4
	0x0396C004 ADRP X0, 0x7E1000
	0x0396C008 LDR X0, [X0 + 0xE10]
	0x0396C00C BL 0x1C16CF4
	0x0396C010 ADRP X0, 0x7E3000
	0x0396C014 LDR X0, [X0 + 0x1C0]
	0x0396C018 BL 0x1C16CF4
	0x0396C01C ADRP X0, 0x7E3000
	0x0396C020 LDR X0, [X0 + 0xE58]
	0x0396C024 BL 0x1C16CF4
	0x0396C028 ADRP X0, 0x7B2000
	0x0396C02C LDR X0, [X0 + 0xB50]
	0x0396C030 BL 0x1C16CF4
	0x0396C034 ADRP X0, 0x7E2000
	0x0396C038 LDR X0, [X0 + 0xC38]
	0x0396C03C BL 0x1C16CF4
	0x0396C040 ADRP X0, 0x78B000
	0x0396C044 LDR X0, [X0 + 0xB70]
	0x0396C048 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA77000
	005 Move W8, [X20+2537]
	006 Move X19, X2
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7E4000
	012 Move X0, [X0+3456]
	013 Call 0x1C17CF4
	014 Move X0, 0x7E3000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2537], W8
	019 Compare X19, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x7E3000
	022 Move X8, [X8+3144]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W1, W31
	027 Move X2, [X8]
	028 Move X30, [X31+32]
	029 Call List`1<Object>.get_Item, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge <GetEdgeRing>b__10_0(UnityEngine.ProBuilder.EdgeLookup x)

Disassembly:
	0x0396C04C ADRP X0, 0x7E2000
	0x0396C050 LDR X0, [X0 + 0xA38]

ISIL:
	001 Move X0, X1
	002 Return X0

Method: UnityEngine.ProBuilder.Edge <GetEdgeRingIterative>b__11_0(UnityEngine.ProBuilder.EdgeLookup x)

Disassembly:
	0x0396C054 BL 0x1C16CF4
	0x0396C058 ADRP X0, 0x7E1000

ISIL:
	001 Move X0, X1
	002 Return X0

Method: UnityEngine.ProBuilder.Edge <GetEdgeLoop>b__12_0(UnityEngine.ProBuilder.EdgeLookup x)

Disassembly:
	0x0396C05C LDR X0, [X0 + 0xDE0]
	0x0396C060 BL 0x1C16CF4

ISIL:
	001 Move X0, X1
	002 Return X0

Method: UnityEngine.ProBuilder.Edge <GetEdgeLoopIterative>b__13_0(UnityEngine.ProBuilder.EdgeLookup x)

Disassembly:
	0x0396C064 ADRP X0, 0x7E2000
	0x0396C068 LDR X0, [X0 + 0xC40]

ISIL:
	001 Move X0, X1
	002 Return X0

Method: UnityEngine.ProBuilder.Edge <GetEdgeLoopInternal>b__14_0(UnityEngine.ProBuilder.WingedEdge x)

Disassembly:
	0x0396C06C BL 0x1C16CF4
	0x0396C070 ADRP X0, 0x7E1000
	0x0396C074 LDR X0, [X0 + 0xE18]
	0x0396C078 BL 0x1C16CF4
	0x0396C07C ADRP X0, 0x788000
	0x0396C080 LDR X0, [X0 + 0xE28]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge <GetEdgeLoopInternalIterative>b__15_0(UnityEngine.ProBuilder.WingedEdge x)

Disassembly:
	0x0396C084 BL 0x1C16CF4
	0x0396C088 ADRP X0, 0x7E2000
	0x0396C08C LDR X0, [X0 + 0xC48]
	0x0396C090 BL 0x1C16CF4
	0x0396C094 ADRP X0, 0x7E3000
	0x0396C098 LDR X0, [X0 + 0x1D0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge <GetEdgeLoopInternalIterative>b__15_1(UnityEngine.ProBuilder.WingedEdge x)

Disassembly:
	0x0396C09C BL 0x1C16CF4
	0x0396C0A0 ADRP X0, 0x7E3000
	0x0396C0A4 LDR X0, [X0 + 0xE60]
	0x0396C0A8 BL 0x1C16CF4
	0x0396C0AC ADRP X0, 0x788000
	0x0396C0B0 LDR X0, [X0 + 0xE30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Edge <FindHoles>b__26_0(UnityEngine.ProBuilder.WingedEdge x)

Disassembly:
	0x0396C0B4 BL 0x1C16CF4
	0x0396C0B8 ADRP X0, 0x7E1000
	0x0396C0BC LDR X0, [X0 + 0xDE8]
	0x0396C0C0 BL 0x1C16CF4
	0x0396C0C4 ADRP X0, 0x7E1000
	0x0396C0C8 LDR X0, [X0 + 0xDF0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+16]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Int32 <FindHoles>b__27_0(UnityEngine.ProBuilder.SimpleTuple`2<System.Int32, System.Int32> x, UnityEngine.ProBuilder.SimpleTuple`2<System.Int32, System.Int32> y)

Disassembly:
	0x0396C0CC BL 0x1C16CF4
	0x0396C0D0 ADRP X0, 0x7E3000
	0x0396C0D4 LDR X0, [X0 + 0xE68]
	0x0396C0D8 BL 0x1C16CF4
	0x0396C0DC ADRP X0, 0x7E3000
	0x0396C0E0 LDR X0, [X0 + 0xE70]
	0x0396C0E4 BL 0x1C16CF4
	0x0396C0E8 ADRP X0, 0x7E3000
	0x0396C0EC LDR X0, [X0 + 0xE78]
	0x0396C0F0 BL 0x1C16CF4
	0x0396C0F4 ADRP X0, 0x7E3000
	0x0396C0F8 LDR X0, [X0 + 0xE80]
	0x0396C0FC BL 0x1C16CF4
	0x0396C100 ADRP X0, 0x7E3000
	0x0396C104 LDR X0, [X0 + 0xE88]
	0x0396C108 BL 0x1C16CF4
	0x0396C10C ADRP X0, 0x7E2000
	0x0396C110 LDR X0, [X0 + 0x20]
	0x0396C114 BL 0x1C16CF4
	0x0396C118 ADRP X0, 0x7E2000
	0x0396C11C LDR X0, [X0 + 0xB08]
	0x0396C120 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA76000
	007 Move W8, [X21+2538]
	008 Move X19, X2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7E4000
	015 Move X0, [X0+3408]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2538], W8
	019 Add X0, X31, 12
	020 Move W1, W19
	021 Move X2, X31
	022 Move [X31+12], W20
	023 Call Int32.CompareTo, X0, X1
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Move X21, [X31+24]
	028 Add X31, X31, 48
	029 Return X0

