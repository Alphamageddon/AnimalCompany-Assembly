Type: UnityEngine.ProBuilder.MeshOperations.CombineMeshes

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.ProBuilderMesh> Combine(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.ProBuilderMesh> meshes)

Disassembly:
	0x0395D654 LDUR X11, [X10 - 0x8]

ISIL:
No ISIL was generated
Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.ProBuilderMesh> Combine(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.ProBuilderMesh> meshes, UnityEngine.ProBuilder.ProBuilderMesh meshTarget)

Disassembly:
	0x0395DAF0 MOV X0, X29
	0x0395DAF4 BL 0x301BF90
	0x0395DAF8 ADD X22, X22, 0x1
	0x0395DAFC CMP X20, X22
	0x0395DB00 B.NE 0x395D99C
	0x0395DB04 CBZ X24, 0x395E25C
	0x0395DB08 LDR X8, [X24 + 0x18]
	0x0395DB0C LDP X27, X20, [X31 + 0x18]
	0x0395DB10 CMP W8, 0x1
	0x0395DB14 B.LT 0x395DD50
	0x0395DB18 MOV X21, X31
	0x0395DB1C SUB W19, W25, 0x1
	0x0395DB20 AND X8, X8, 0x0
	0x0395DB24 ADD X22, X24, 0x20
	0x0395DB28 CMP X21, W8, UXTW
	0x0395DB2C B.CS 0x395E1A0
	0x0395DB30 ADRP X8, 0x7F1000
	0x0395DB34 LDR X29, [X22, X21, LSL #3]
	0x0395DB38 LDR X8, [X8 + 0x560]
	0x0395DB3C LDR X0, [X8]
	0x0395DB40 BL 0x1C16F10
	0x0395DB44 MOV X28, X0
	0x0395DB48 MOV X1, X29
	0x0395DB4C MOV X2, X31
	0x0395DB50 BL 0x3900598
	0x0395DB54 CBZ X28, 0x395E194
	0x0395DB58 MOV X0, X28
	0x0395DB5C MOV W1, W26
	0x0395DB60 MOV X2, X31
	0x0395DB64 BL 0x3900D2C
	0x0395DB68 LDRB W8, [X28 + 0x4C]
	0x0395DB6C CBNZ W8, 0x395DBE0
	0x0395DB70 LDRB W8, [X28 + 0x1C]
	0x0395DB74 CBNZ W8, 0x395DBE0
	0x0395DB78 MOVZ W8, 0x1
	0x0395DB7C STRB W8, [X28 + 0x4C]
	0x0395DB80 LDR X0, [X20]
	0x0395DB84 CBZ X0, 0x395E228
	0x0395DB88 ADRP X9, 0x7F0000
	0x0395DB8C LDR W10, [X0 + 0x1C]
	0x0395DB90 LDR X8, [X0 + 0x10]
	0x0395DB94 LDR X9, [X9 + 0xE10]
	0x0395DB98 ADD W10, W10, 0x1
	0x0395DB9C LDR X9, [X9]
	0x0395DBA0 STR W10, [X0 + 0x1C]
	0x0395DBA4 CBZ X8, 0x395E224
	0x0395DBA8 LDRSW X10, [X0 + 0x18]
	0x0395DBAC LDR W11, [X8 + 0x18]
	0x0395DBB0 CMP W10, W11
	0x0395DBB4 B.CS 0x395DBCC
	0x0395DBB8 ADD W9, W10, 0x1
	0x0395DBBC ADD X8, X8, X10, 0x3, LSL
	0x0395DBC0 STR W9, [X0 + 0x18]
	0x0395DBC4 STR X28, [X8 + 0x20]
	0x0395DBC8 B 0x395DBE0
	0x0395DBCC LDR X8, [X9 + 0x20]
	0x0395DBD0 LDR X8, [X8 + 0xC0]
	0x0395DBD4 LDR X2, [X8 + 0x70]
	0x0395DBD8 MOV X1, X28
	0x0395DBDC BL 0x301BF90
	0x0395DBE0 CMP W25, 0x0
	0x0395DBE4 B.LE 0x395DC18
	0x0395DBE8 CBZ X29, 0x395E1B4
	0x0395DBEC LDR W0, [X29 + 0x48]
	0x0395DBF0 MOV W1, W31
	0x0395DBF4 MOV W2, W19
	0x0395DBF8 MOV X3, X31
	0x0395DBFC BL 0x3907A24
	0x0395DC00 LDR W8, [X23 + 0x18]
	0x0395DC04 CMP W0, W8
	0x0395DC08 B.CS 0x395E1B8
	0x0395DC0C ADD X8, X23, W0, 0x3, SXTW
	0x0395DC10 LDR X29, [X8 + 0x20]
	0x0395DC14 B 0x395DC1C
	0x0395DC18 MOV X29, X31
	0x0395DC1C LDR X0, [X27]
	0x0395DC20 CBZ X0, 0x395E198
	0x0395DC24 ADRP X8, 0x7F2000
	0x0395DC28 LDR X8, [X8 + 0x858]
	0x0395DC2C LDR X2, [X8]
	0x0395DC30 MOV X1, X29
	0x0395DC34 BL 0x301CD00
	0x0395DC38 TBNZ X0, 0x1F, 0x395DC44
	0x0395DC3C STR W0, [X28 + 0x48]
	0x0395DC40 B 0x395DCDC
	0x0395DC44 ADRP X8, 0x796000
	0x0395DC48 LDR X8, [X8 + 0x598]
	0x0395DC4C LDR X0, [X8]
	0x0395DC50 LDR W8, [X0 + 0xE0]
	0x0395DC54 CBNZ W8, 0x395DC5C
	0x0395DC58 BL 0x1C16DFC
	0x0395DC5C MOV X0, X29
	0x0395DC60 MOV X1, X31
	0x0395DC64 MOV X2, X31
	0x0395DC68 BL 0x3C3883C
	0x0395DC6C TBZ X0, 0x0, 0x395DC78
	0x0395DC70 STR W31, [X28 + 0x48]
	0x0395DC74 B 0x395DCDC
	0x0395DC78 LDR X0, [X27]
	0x0395DC7C CBZ X0, 0x395E220
	0x0395DC80 LDRSW X8, [X0 + 0x18]
	0x0395DC84 ADRP X10, 0x79D000
	0x0395DC88 STR W8, [X28 + 0x48]
	0x0395DC8C LDR W11, [X0 + 0x1C]
	0x0395DC90 LDR X9, [X0 + 0x10]
	0x0395DC94 LDR X10, [X10 + 0xA70]
	0x0395DC98 ADD W11, W11, 0x1
	0x0395DC9C LDR X10, [X10]
	0x0395DCA0 STR W11, [X0 + 0x1C]
	0x0395DCA4 CBZ X9, 0x395E21C
	0x0395DCA8 LDR W11, [X9 + 0x18]
	0x0395DCAC CMP W8, W11
	0x0395DCB0 B.CS 0x395DCC8
	0x0395DCB4 ADD W10, W8, 0x1
	0x0395DCB8 ADD X8, X9, X8, 0x3, LSL
	0x0395DCBC STR W10, [X0 + 0x18]
	0x0395DCC0 STR X29, [X8 + 0x20]
	0x0395DCC4 B 0x395DCDC
	0x0395DCC8 LDR X8, [X10 + 0x20]
	0x0395DCCC LDR X8, [X8 + 0xC0]
	0x0395DCD0 LDR X2, [X8 + 0x70]
	0x0395DCD4 MOV X1, X29
	0x0395DCD8 BL 0x301BF90
	0x0395DCDC LDR X8, [X31 + 0x40]
	0x0395DCE0 LDR X0, [X8]
	0x0395DCE4 CBZ X0, 0x395E190
	0x0395DCE8 ADRP X9, 0x7F0000
	0x0395DCEC LDR W10, [X0 + 0x1C]
	0x0395DCF0 LDR X8, [X0 + 0x10]
	0x0395DCF4 LDR X9, [X9 + 0xE10]
	0x0395DCF8 ADD W10, W10, 0x1
	0x0395DCFC LDR X9, [X9]
	0x0395DD00 STR W10, [X0 + 0x1C]
	0x0395DD04 CBZ X8, 0x395E19C
	0x0395DD08 LDRSW X10, [X0 + 0x18]
	0x0395DD0C LDR W11, [X8 + 0x18]
	0x0395DD10 CMP W10, W11
	0x0395DD14 B.CS 0x395DD2C
	0x0395DD18 ADD W9, W10, 0x1
	0x0395DD1C ADD X8, X8, X10, 0x3, LSL
	0x0395DD20 STR W9, [X0 + 0x18]
	0x0395DD24 STR X28, [X8 + 0x20]
	0x0395DD28 B 0x395DD40
	0x0395DD2C LDR X8, [X9 + 0x20]
	0x0395DD30 LDR X8, [X8 + 0xC0]
	0x0395DD34 LDR X2, [X8 + 0x70]
	0x0395DD38 MOV X1, X28
	0x0395DD3C BL 0x301BF90
	0x0395DD40 LDR W8, [X24 + 0x18]
	0x0395DD44 ADD X21, X21, 0x1
	0x0395DD48 CMP X21, W8, SXTW
	0x0395DD4C B.LT 0x395DB28
	0x0395DD50 LDR X19, [X31 + 0x28]
	0x0395DD54 CBZ X19, 0x395E260
	0x0395DD58 LDR X8, [X19]
	0x0395DD5C ADRP X10, 0x7F2000
	0x0395DD60 ADRP X20, 0x796000
	0x0395DD64 ADRP X22, 0x7F1000
	0x0395DD68 LDRH W9, [X8 + 0x12E]
	0x0395DD6C LDR X10, [X10 + 0x840]
	0x0395DD70 LDP X24, X25, [X31 + 0x8]
	0x0395DD74 LDR X1, [X10]
	0x0395DD78 LDR X20, [X20 + 0xE18]
	0x0395DD7C LDR X22, [X22 + 0x420]
	0x0395DD80 CBZ X9, 0x395DDA4
	0x0395DD84 LDR X10, [X8 + 0xB0]
	0x0395DD88 ADD X10, X10, 0x8
	0x0395DD8C LDUR X11, [X10 - 0x8]
	0x0395DD90 CMP X11, X1
	0x0395DD94 B.EQ 0x395DDB4
	0x0395DD98 SUBS X9, X9, 0x1
	0x0395DD9C ADD X10, X10, 0x10
	0x0395DDA0 B.NE 0x395DD8C
	0x0395DDA4 MOV X0, X19
	0x0395DDA8 MOV W2, W31
	0x0395DDAC BL 0x1C5C788
	0x0395DDB0 B 0x395DDC0
	0x0395DDB4 LDRSW X9, [X10]
	0x0395DDB8 ADD X8, X8, X9, 0x4, LSL
	0x0395DDBC ADD X0, X8, 0x138
	0x0395DDC0 LDP X8, X1, [X0]
	0x0395DDC4 MOV X0, X19
	0x0395DDC8 BLR X8
	0x0395DDCC MOV X29, X0
	0x0395DDD0 CBZ X0, 0x395E0A0
	0x0395DDD4 LDR X8, [X29]
	0x0395DDD8 LDR X1, [X20]
	0x0395DDDC LDRH W9, [X8 + 0x12E]
	0x0395DDE0 CBZ X9, 0x395DE04
	0x0395DDE4 LDR X10, [X8 + 0xB0]
	0x0395DDE8 ADD X10, X10, 0x8
	0x0395DDEC LDUR X11, [X10 - 0x8]
	0x0395DDF0 CMP X11, X1
	0x0395DDF4 B.EQ 0x395DE14
	0x0395DDF8 SUBS X9, X9, 0x1
	0x0395DDFC ADD X10, X10, 0x10
	0x0395DE00 B.NE 0x395DDEC
	0x0395DE04 MOV X0, X29
	0x0395DE08 MOV W2, W31
	0x0395DE0C BL 0x1C5C788
	0x0395DE10 B 0x395DE20
	0x0395DE14 LDRSW X9, [X10]
	0x0395DE18 ADD X8, X8, X9, 0x4, LSL
	0x0395DE1C ADD X0, X8, 0x138
	0x0395DE20 LDP X8, X1, [X0]
	0x0395DE24 MOV X0, X29
	0x0395DE28 BLR X8
	0x0395DE2C TBZ X0, 0x0, 0x395DF24
	0x0395DE30 LDR X8, [X29]
	0x0395DE34 ADRP X10, 0x7F2000
	0x0395DE38 LDRH W9, [X8 + 0x12E]
	0x0395DE3C LDR X10, [X10 + 0x848]
	0x0395DE40 LDR X1, [X10]
	0x0395DE44 CBZ X9, 0x395DE68
	0x0395DE48 LDR X10, [X8 + 0xB0]
	0x0395DE4C ADD X10, X10, 0x8
	0x0395DE50 LDUR X11, [X10 - 0x8]
	0x0395DE54 CMP X11, X1
	0x0395DE58 B.EQ 0x395DE78
	0x0395DE5C SUBS X9, X9, 0x1
	0x0395DE60 ADD X10, X10, 0x10
	0x0395DE64 B.NE 0x395DE50
	0x0395DE68 MOV X0, X29
	0x0395DE6C MOV W2, W31
	0x0395DE70 BL 0x1C5C788
	0x0395DE74 B 0x395DE84
	0x0395DE78 LDRSW X9, [X10]
	0x0395DE7C ADD X8, X8, X9, 0x4, LSL
	0x0395DE80 ADD X0, X8, 0x138
	0x0395DE84 LDP X8, X1, [X0]
	0x0395DE88 MOV X0, X29
	0x0395DE8C BLR X8
	0x0395DE90 MOV X21, X0
	0x0395DE94 LDR X0, [X22]
	0x0395DE98 BL 0x1C16F10
	0x0395DE9C MOV X19, X0
	0x0395DEA0 MOV X1, X21
	0x0395DEA4 MOV X2, X31
	0x0395DEA8 BL 0x3934860
	0x0395DEAC CBZ X19, 0x395E090
	0x0395DEB0 MOV X0, X19
	0x0395DEB4 MOV W1, W26
	0x0395DEB8 MOV X2, X31
	0x0395DEBC BL 0x3935074
	0x0395DEC0 LDR X0, [X24]
	0x0395DEC4 CBZ X0, 0x395E098
	0x0395DEC8 ADRP X9, 0x7F2000
	0x0395DECC LDR W10, [X0 + 0x1C]
	0x0395DED0 LDR X8, [X0 + 0x10]
	0x0395DED4 LDR X9, [X9 + 0x850]
	0x0395DED8 ADD W10, W10, 0x1
	0x0395DEDC LDR X9, [X9]
	0x0395DEE0 STR W10, [X0 + 0x1C]
	0x0395DEE4 CBZ X8, 0x395E088
	0x0395DEE8 LDRSW X10, [X0 + 0x18]
	0x0395DEEC LDR W11, [X8 + 0x18]
	0x0395DEF0 CMP W10, W11
	0x0395DEF4 B.CS 0x395DF0C
	0x0395DEF8 ADD W9, W10, 0x1
	0x0395DEFC ADD X8, X8, X10, 0x3, LSL
	0x0395DF00 STR W9, [X0 + 0x18]
	0x0395DF04 STR X19, [X8 + 0x20]
	0x0395DF08 B 0x395DDD4
	0x0395DF0C LDR X8, [X9 + 0x20]
	0x0395DF10 LDR X8, [X8 + 0xC0]
	0x0395DF14 LDR X2, [X8 + 0x70]
	0x0395DF18 MOV X1, X19
	0x0395DF1C BL 0x301BF90
	0x0395DF20 B 0x395DDD4
	0x0395DF24 MOV X19, X31
	0x0395DF28 MOVZ W20, 0x12
	0x0395DF2C CBZ X29, 0x395DF90
	0x0395DF30 LDR X8, [X29]
	0x0395DF34 ADRP X10, 0x796000
	0x0395DF38 LDRH W9, [X8 + 0x12E]
	0x0395DF3C LDR X10, [X10 + 0xE00]
	0x0395DF40 LDR X1, [X10]
	0x0395DF44 CBZ X9, 0x395DF68
	0x0395DF48 LDR X10, [X8 + 0xB0]
	0x0395DF4C ADD X10, X10, 0x8
	0x0395DF50 LDUR X11, [X10 - 0x8]
	0x0395DF54 CMP X11, X1
	0x0395DF58 B.EQ 0x395DF78
	0x0395DF5C SUBS X9, X9, 0x1
	0x0395DF60 ADD X10, X10, 0x10
	0x0395DF64 B.NE 0x395DF50
	0x0395DF68 MOV X0, X29
	0x0395DF6C MOV W2, W31
	0x0395DF70 BL 0x1C5C788
	0x0395DF74 B 0x395DF84
	0x0395DF78 LDRSW X9, [X10]
	0x0395DF7C ADD X8, X8, X9, 0x4, LSL
	0x0395DF80 ADD X0, X8, 0x138
	0x0395DF84 LDP X8, X1, [X0]
	0x0395DF88 MOV X0, X29
	0x0395DF8C BLR X8
	0x0395DF90 CBNZ X19, 0x395E264
	0x0395DF94 CMP W20, 0x12
	0x0395DF98 B.EQ 0x395DFA0
	0x0395DF9C CBNZ W20, 0x395E0F4
	0x0395DFA0 LDR X9, [X31 + 0x50]
	0x0395DFA4 CBZ X9, 0x395E26C
	0x0395DFA8 LDR X8, [X9 + 0x18]
	0x0395DFAC CMP W8, 0x1
	0x0395DFB0 B.LT 0x395E074
	0x0395DFB4 MOV X20, X31
	0x0395DFB8 AND X8, X8, 0x0
	0x0395DFBC ADD X22, X9, 0x20
	0x0395DFC0 CMP X20, W8, UXTW
	0x0395DFC4 B.CS 0x395E1B0
	0x0395DFC8 ADRP X8, 0x7F1000
	0x0395DFCC LDR X21, [X22, X20, LSL #3]
	0x0395DFD0 LDR X8, [X8 + 0x420]
	0x0395DFD4 LDR X0, [X8]
	0x0395DFD8 BL 0x1C16F10
	0x0395DFDC MOV X19, X0
	0x0395DFE0 MOV X1, X21
	0x0395DFE4 MOV X2, X31
	0x0395DFE8 BL 0x3934860
	0x0395DFEC CBZ X19, 0x395E1AC
	0x0395DFF0 MOV X0, X19
	0x0395DFF4 MOV W1, W26
	0x0395DFF8 MOV X2, X31
	0x0395DFFC BL 0x3935074
	0x0395E000 LDR X0, [X25]
	0x0395E004 CBZ X0, 0x395E1A8
	0x0395E008 ADRP X9, 0x7F1000
	0x0395E00C LDR W10, [X0 + 0x1C]
	0x0395E010 LDR X8, [X0 + 0x10]
	0x0395E014 LDR X9, [X9 + 0x850]
	0x0395E018 ADD W10, W10, 0x1
	0x0395E01C LDR X9, [X9]
	0x0395E020 STR W10, [X0 + 0x1C]
	0x0395E024 CBZ X8, 0x395E1A4
	0x0395E028 LDRSW X10, [X0 + 0x18]
	0x0395E02C LDR W11, [X8 + 0x18]
	0x0395E030 CMP W10, W11
	0x0395E034 B.CS 0x395E04C
	0x0395E038 ADD W9, W10, 0x1
	0x0395E03C ADD X8, X8, X10, 0x3, LSL
	0x0395E040 STR W9, [X0 + 0x18]
	0x0395E044 STR X19, [X8 + 0x20]
	0x0395E048 B 0x395E060
	0x0395E04C LDR X8, [X9 + 0x20]
	0x0395E050 LDR X8, [X8 + 0xC0]
	0x0395E054 LDR X2, [X8 + 0x70]
	0x0395E058 MOV X1, X19
	0x0395E05C BL 0x301BF90
	0x0395E060 LDR X8, [X31 + 0x50]
	0x0395E064 ADD X20, X20, 0x1
	0x0395E068 LDR W8, [X8 + 0x18]
	0x0395E06C CMP X20, W8, SXTW
	0x0395E070 B.LT 0x395DFC0
	0x0395E074 LDR W8, [X31 + 0x34]
	0x0395E078 ADRP X10, 0x795000
	0x0395E07C LDR X10, [X10 + 0xE18]
	0x0395E080 ADD W26, W8, W26
	0x0395E084 B 0x395D83C
	0x0395E088 BL 0x1C16F20
	0x0395E08C B 0x395E284
	0x0395E090 BL 0x1C16F20
	0x0395E094 B 0x395E284
	0x0395E098 BL 0x1C16F20
	0x0395E09C B 0x395E284
	0x0395E0A0 BL 0x1C16F20
	0x0395E0A4 B 0x395E284
	0x0395E0A8 LDR X25, [X31 + 0x10]
	0x0395E0AC B 0x395E0C8
	0x0395E0B0 B 0x395E0C8
	0x0395E0B4 B 0x395E0C8
	0x0395E0B8 B 0x395E0C8
	0x0395E0BC B 0x395E0C8
	0x0395E0C0 B 0x395E0C8
	0x0395E0C4 B 0x395E0C8
	0x0395E0C8 MOV X23, X1
	0x0395E0CC MOV X20, X0
	0x0395E0D0 CMP W23, 0x1
	0x0395E0D4 B.NE 0x395E1CC
	0x0395E0D8 MOV X0, X20
	0x0395E0DC BL 0x3EB1AD0
	0x0395E0E0 LDR X19, [X0]
	0x0395E0E4 BL 0x3EB1AE0
	0x0395E0E8 MOV W20, W31
	0x0395E0EC CBNZ X29, 0x395DF30
	0x0395E0F0 B 0x395DF90
	0x0395E0F4 MOV X19, X31
	0x0395E0F8 LDR X8, [X31 + 0x38]
	0x0395E0FC CBZ X8, 0x395E168
	0x0395E100 LDR X8, [X8]
	0x0395E104 ADRP X10, 0x795000
	0x0395E108 LDRH W9, [X8 + 0x12E]
	0x0395E10C LDR X10, [X10 + 0xE00]
	0x0395E110 LDR X1, [X10]
	0x0395E114 CBZ X9, 0x395E138
	0x0395E118 LDR X10, [X8 + 0xB0]
	0x0395E11C ADD X10, X10, 0x8
	0x0395E120 LDUR X11, [X10 - 0x8]
	0x0395E124 CMP X11, X1
	0x0395E128 B.EQ 0x395E14C
	0x0395E12C SUBS X9, X9, 0x1
	0x0395E130 ADD X10, X10, 0x10
	0x0395E134 B.NE 0x395E120
	0x0395E138 LDR X20, [X31 + 0x38]
	0x0395E13C MOV W2, W31
	0x0395E140 MOV X0, X20
	0x0395E144 BL 0x1C5C788
	0x0395E148 B 0x395E15C
	0x0395E14C LDRSW X9, [X10]
	0x0395E150 LDR X20, [X31 + 0x38]
	0x0395E154 ADD X8, X8, X9, 0x4, LSL
	0x0395E158 ADD X0, X8, 0x138
	0x0395E15C LDP X8, X1, [X0]
	0x0395E160 MOV X0, X20
	0x0395E164 BLR X8
	0x0395E168 CBNZ X19, 0x395E27C
	0x0395E16C LDP X20, X19, [X31 + 0xB0]
	0x0395E170 LDP X22, X21, [X31 + 0xA0]
	0x0395E174 LDP X24, X23, [X31 + 0x90]
	0x0395E178 LDP X26, X25, [X31 + 0x80]
	0x0395E17C LDP X28, X27, [X31 + 0x70]
	0x0395E180 LDP X29, X30, [X31 + 0x60]
	0x0395E184 ADD X31, X31, 0xC0
	0x0395E188 RET
	0x0395E18C BL 0x1C16F28
	0x0395E190 BL 0x1C16F20
	0x0395E194 BL 0x1C16F20
	0x0395E198 BL 0x1C16F20
	0x0395E19C BL 0x1C16F20
	0x0395E1A0 BL 0x1C16F28
	0x0395E1A4 BL 0x1C16F20
	0x0395E1A8 BL 0x1C16F20
	0x0395E1AC BL 0x1C16F20
	0x0395E1B0 BL 0x1C16F28
	0x0395E1B4 BL 0x1C16F20
	0x0395E1B8 BL 0x1C16F28
	0x0395E1BC BL 0x1C16F20
	0x0395E1C0 BL 0x1C16F20
	0x0395E1C4 BL 0x1C16F20
	0x0395E1C8 BL 0x1C16F20
	0x0395E1CC MOV X19, X31
	0x0395E1D0 CBZ X29, 0x395E244
	0x0395E1D4 LDR X8, [X29]
	0x0395E1D8 ADRP X10, 0x795000
	0x0395E1DC LDRH W9, [X8 + 0x12E]
	0x0395E1E0 LDR X10, [X10 + 0xE00]
	0x0395E1E4 LDR X1, [X10]
	0x0395E1E8 CBZ X9, 0x395E20C
	0x0395E1EC LDR X10, [X8 + 0xB0]
	0x0395E1F0 ADD X10, X10, 0x8
	0x0395E1F4 LDUR X11, [X10 - 0x8]
	0x0395E1F8 CMP X11, X1
	0x0395E1FC B.EQ 0x395E22C
	0x0395E200 SUBS X9, X9, 0x1
	0x0395E204 ADD X10, X10, 0x10
	0x0395E208 B.NE 0x395E1F4
	0x0395E20C MOV X0, X29
	0x0395E210 MOV W2, W31
	0x0395E214 BL 0x1C5C788
	0x0395E218 B 0x395E238
	0x0395E21C BL 0x1C16F20
	0x0395E220 BL 0x1C16F20
	0x0395E224 BL 0x1C16F20
	0x0395E228 BL 0x1C16F20
	0x0395E22C LDRSW X9, [X10]
	0x0395E230 ADD X8, X8, X9, 0x4, LSL
	0x0395E234 ADD X0, X8, 0x138
	0x0395E238 LDP X8, X1, [X0]
	0x0395E23C MOV X0, X29
	0x0395E240 BLR X8
	0x0395E244 CBZ X19, 0x395E36C
	0x0395E248 MOV X0, X19
	0x0395E24C BL 0x1C16F18
	0x0395E250 BL 0x1C16F20
	0x0395E254 BL 0x1C16F20
	0x0395E258 BL 0x1C16F20
	0x0395E25C BL 0x1C16F20
	0x0395E260 BL 0x1C16F20
	0x0395E264 MOV X0, X19
	0x0395E268 BL 0x1C16F18
	0x0395E26C BL 0x1C16F20
	0x0395E270 BL 0x1C16F20
	0x0395E274 BL 0x1C16F20
	0x0395E278 BL 0x1C16F20
	0x0395E27C MOV X0, X19
	0x0395E280 BL 0x1C16F18
	0x0395E284 MOV X23, X1
	0x0395E288 MOV X20, X0
	0x0395E28C CBNZ X29, 0x395E1D4
	0x0395E290 B 0x395E244
	0x0395E294 B 0x395E364
	0x0395E298 B 0x395E364
	0x0395E29C B 0x395E364
	0x0395E2A0 B 0x395E364
	0x0395E2A4 B 0x395E364
	0x0395E2A8 B 0x395E364
	0x0395E2AC B 0x395E364
	0x0395E2B0 B 0x395E364
	0x0395E2B4 B 0x395E364
	0x0395E2B8 B 0x395E364
	0x0395E2BC B 0x395E364
	0x0395E2C0 B 0x395E364
	0x0395E2C4 B 0x395E364
	0x0395E2C8 B 0x395E364
	0x0395E2CC B 0x395E364
	0x0395E2D0 B 0x395E364
	0x0395E2D4 B 0x395E364
	0x0395E2D8 B 0x395E364
	0x0395E2DC B 0x395E364
	0x0395E2E0 B 0x395E364
	0x0395E2E4 B 0x395E364
	0x0395E2E8 B 0x395E364
	0x0395E2EC B 0x395E364
	0x0395E2F0 B 0x395E364
	0x0395E2F4 B 0x395E364
	0x0395E2F8 B 0x395E364
	0x0395E2FC B 0x395E364
	0x0395E300 B 0x395E364
	0x0395E304 B 0x395E364
	0x0395E308 B 0x395E364
	0x0395E30C B 0x395E364
	0x0395E310 B 0x395E364
	0x0395E314 B 0x395E364
	0x0395E318 B 0x395E364
	0x0395E31C B 0x395E364
	0x0395E320 B 0x395E364
	0x0395E324 B 0x395E364
	0x0395E328 B 0x395E364
	0x0395E32C B 0x395E364
	0x0395E330 B 0x395E364
	0x0395E334 B 0x395E364
	0x0395E338 B 0x395E364
	0x0395E33C B 0x395E364
	0x0395E340 B 0x395E364
	0x0395E344 B 0x395E364
	0x0395E348 B 0x395E364
	0x0395E34C B 0x395E364
	0x0395E350 B 0x395E364
	0x0395E354 B 0x395E364
	0x0395E358 B 0x395E364
	0x0395E35C B 0x395E364
	0x0395E360 B 0x395E364
	0x0395E364 MOV X23, X1
	0x0395E368 MOV X20, X0
	0x0395E36C CMP W23, 0x1
	0x0395E370 B.NE 0x395E388
	0x0395E374 MOV X0, X20
	0x0395E378 BL 0x3EB1AD0
	0x0395E37C LDR X19, [X0]
	0x0395E380 BL 0x3EB1AE0
	0x0395E384 B 0x395E0F8
	0x0395E388 MOV X19, X31
	0x0395E38C B 0x395E394
	0x0395E390 MOV X20, X0
	0x0395E394 LDR X8, [X31 + 0x38]
	0x0395E398 CBZ X8, 0x395E400
	0x0395E39C LDR X8, [X31 + 0x38]
	0x0395E3A0 ADRP X10, 0x795000
	0x0395E3A4 LDR X8, [X8]
	0x0395E3A8 LDRH W9, [X8 + 0x12E]
	0x0395E3AC LDR X10, [X10 + 0xE00]
	0x0395E3B0 LDR X1, [X10]
	0x0395E3B4 CBZ X9, 0x395E3D8
	0x0395E3B8 LDR X10, [X8 + 0xB0]
	0x0395E3BC ADD X10, X10, 0x8
	0x0395E3C0 LDUR X11, [X10 - 0x8]
	0x0395E3C4 CMP X11, X1
	0x0395E3C8 B.EQ 0x395E3E8
	0x0395E3CC SUBS X9, X9, 0x1
	0x0395E3D0 ADD X10, X10, 0x10
	0x0395E3D4 B.NE 0x395E3C0
	0x0395E3D8 LDR X0, [X31 + 0x38]
	0x0395E3DC MOV W2, W31
	0x0395E3E0 BL 0x1C5C788
	0x0395E3E4 B 0x395E3F4
	0x0395E3E8 LDRSW X9, [X10]
	0x0395E3EC ADD X8, X8, X9, 0x4, LSL
	0x0395E3F0 ADD X0, X8, 0x138
	0x0395E3F4 LDP X8, X1, [X0]
	0x0395E3F8 LDR X0, [X31 + 0x38]
	0x0395E3FC BLR X8
	0x0395E400 CBNZ X19, 0x395E40C
	0x0395E404 MOV X0, X20
	0x0395E408 BL 0x1D2C690
	0x0395E40C MOV X0, X19
	0x0395E410 BL 0x1C16F18
	0x0395E414 BL 0x1990590
	0x0395E418 SUB X31, X31, 0xA0
	0x0395E41C STP X29, X30, [X31 + 0x40]
	0x0395E420 STP X28, X27, [X31 + 0x50]
	0x0395E424 STP X26, X25, [X31 + 0x60]
	0x0395E428 STP X24, X23, [X31 + 0x70]
	0x0395E42C STP X22, X21, [X31 + 0x80]
	0x0395E430 STP X20, X19, [X31 + 0x90]
	0x0395E434 ADRP X19, 0xA83000
	0x0395E438 LDRB W8, [X19 + 0x9AC]
	0x0395E43C MOV W28, W4
	0x0395E440 MOV X23, X3
	0x0395E444 MOV X22, X2
	0x0395E448 MOV X26, X1
	0x0395E44C MOV X27, X0
	0x0395E450 TBNZ X8, 0x0, 0x395E5DC
	0x0395E454 ADRP X0, 0x79F000
	0x0395E458 LDR X0, [X0 + 0x858]
	0x0395E45C BL 0x1C16CF4
	0x0395E460 ADRP X0, 0x7BF000
	0x0395E464 LDR X0, [X0 + 0x8D0]
	0x0395E468 BL 0x1C16CF4
	0x0395E46C ADRP X0, 0x79F000
	0x0395E470 LDR X0, [X0 + 0x890]
	0x0395E474 BL 0x1C16CF4
	0x0395E478 ADRP X0, 0x79F000
	0x0395E47C LDR X0, [X0 + 0x888]
	0x0395E480 BL 0x1C16CF4
	0x0395E484 ADRP X0, 0x7F1000
	0x0395E488 LDR X0, [X0 + 0x860]
	0x0395E48C BL 0x1C16CF4
	0x0395E490 ADRP X0, 0x7F0000
	0x0395E494 LDR X0, [X0 + 0x510]
	0x0395E498 BL 0x1C16CF4
	0x0395E49C ADRP X0, 0x7F0000
	0x0395E4A0 LDR X0, [X0 + 0x1E8]
	0x0395E4A4 BL 0x1C16CF4
	0x0395E4A8 ADRP X0, 0x795000
	0x0395E4AC LDR X0, [X0 + 0xE00]
	0x0395E4B0 BL 0x1C16CF4
	0x0395E4B4 ADRP X0, 0x7EF000
	0x0395E4B8 LDR X0, [X0 + 0xDB0]
	0x0395E4BC BL 0x1C16CF4
	0x0395E4C0 ADRP X0, 0x7BD000
	0x0395E4C4 LDR X0, [X0 + 0x7C0]
	0x0395E4C8 BL 0x1C16CF4
	0x0395E4CC ADRP X0, 0x7EF000
	0x0395E4D0 LDR X0, [X0 + 0xDB8]
	0x0395E4D4 BL 0x1C16CF4
	0x0395E4D8 ADRP X0, 0x795000
	0x0395E4DC LDR X0, [X0 + 0xE18]
	0x0395E4E0 BL 0x1C16CF4
	0x0395E4E4 ADRP X0, 0x7EF000
	0x0395E4E8 LDR X0, [X0 + 0xF60]
	0x0395E4EC BL 0x1C16CF4
	0x0395E4F0 ADRP X0, 0x7EF000
	0x0395E4F4 LDR X0, [X0 + 0xE10]
	0x0395E4F8 BL 0x1C16CF4
	0x0395E4FC ADRP X0, 0x7F1000
	0x0395E500 LDR X0, [X0 + 0x1C0]
	0x0395E504 BL 0x1C16CF4
	0x0395E508 ADRP X0, 0x7F1000
	0x0395E50C LDR X0, [X0 + 0x7F0]
	0x0395E510 BL 0x1C16CF4
	0x0395E514 ADRP X0, 0x7F1000
	0x0395E518 LDR X0, [X0 + 0x868]
	0x0395E51C BL 0x1C16CF4
	0x0395E520 ADRP X0, 0x7F0000
	0x0395E524 LDR X0, [X0 + 0xA40]
	0x0395E528 BL 0x1C16CF4
	0x0395E52C ADRP X0, 0x7F1000
	0x0395E530 LDR X0, [X0 + 0x800]
	0x0395E534 BL 0x1C16CF4
	0x0395E538 ADRP X0, 0x7F0000
	0x0395E53C LDR X0, [X0 + 0xA38]
	0x0395E540 BL 0x1C16CF4
	0x0395E544 ADRP X0, 0x7F1000
	0x0395E548 LDR X0, [X0 + 0x1C8]
	0x0395E54C BL 0x1C16CF4
	0x0395E550 ADRP X0, 0x7EF000
	0x0395E554 LDR X0, [X0 + 0xE18]
	0x0395E558 BL 0x1C16CF4
	0x0395E55C ADRP X0, 0x7F1000
	0x0395E560 LDR X0, [X0 + 0x828]
	0x0395E564 BL 0x1C16CF4
	0x0395E568 ADRP X0, 0x7EF000
	0x0395E56C LDR X0, [X0 + 0xDE8]
	0x0395E570 BL 0x1C16CF4
	0x0395E574 ADRP X0, 0x7EF000
	0x0395E578 LDR X0, [X0 + 0xDF0]
	0x0395E57C BL 0x1C16CF4
	0x0395E580 ADRP X0, 0x79C000
	0x0395E584 LDR X0, [X0 + 0x7A0]
	0x0395E588 BL 0x1C16CF4
	0x0395E58C ADRP X0, 0x795000
	0x0395E590 LDR X0, [X0 + 0x5A8]
	0x0395E594 BL 0x1C16CF4
	0x0395E598 ADRP X0, 0x7F0000
	0x0395E59C LDR X0, [X0 + 0x528]
	0x0395E5A0 BL 0x1C16CF4
	0x0395E5A4 ADRP X0, 0x7F0000
	0x0395E5A8 LDR X0, [X0 + 0x5F8]
	0x0395E5AC BL 0x1C16CF4
	0x0395E5B0 ADRP X0, 0x7F0000
	0x0395E5B4 LDR X0, [X0 + 0xC60]
	0x0395E5B8 BL 0x1C16CF4
	0x0395E5BC ADRP X0, 0x7F1000
	0x0395E5C0 LDR X0, [X0 + 0x870]
	0x0395E5C4 BL 0x1C16CF4
	0x0395E5C8 ADRP X0, 0x7F1000
	0x0395E5CC LDR X0, [X0 + 0x878]
	0x0395E5D0 BL 0x1C16CF4
	0x0395E5D4 MOVZ W8, 0x1
	0x0395E5D8 STRB W8, [X19 + 0x9AC]
	0x0395E5DC CBZ X27, 0x395F00C
	0x0395E5E0 ADRP X10, 0x7F0000
	0x0395E5E4 LDR X8, [X27]
	0x0395E5E8 LDR X10, [X10 + 0x1E8]
	0x0395E5EC ADRP X19, 0x795000
	0x0395E5F0 LDRH W9, [X8 + 0x12E]
	0x0395E5F4 LDR X1, [X10]
	0x0395E5F8 LDR X19, [X19 + 0x5A8]
	0x0395E5FC CBZ X9, 0x395E620
	0x0395E600 LDR X10, [X8 + 0xB0]
	0x0395E604 ADD X10, X10, 0x8
	0x0395E608 LDUR X11, [X10 - 0x8]
	0x0395E60C CMP X11, X1
	0x0395E610 B.EQ 0x395E630
	0x0395E614 SUBS X9, X9, 0x1
	0x0395E618 ADD X10, X10, 0x10
	0x0395E61C B.NE 0x395E608
	0x0395E620 MOV X0, X27
	0x0395E624 MOV W2, W31
	0x0395E628 BL 0x1C5C788
	0x0395E62C B 0x395E63C
	0x0395E630 LDRSW X9, [X10]
	0x0395E634 ADD X8, X8, X9, 0x4, LSL
	0x0395E638 ADD X0, X8, 0x138
	0x0395E63C LDP X8, X1, [X0]
	0x0395E640 ADRP X24, 0x7F1000
	0x0395E644 LDR X24, [X24 + 0x878]
	0x0395E648 MOV X0, X27
	0x0395E64C BLR X8
	0x0395E650 LDR X8, [X19]
	0x0395E654 MOV W19, W0
	0x0395E658 LDR W9, [X8 + 0xE0]
	0x0395E65C CBNZ W9, 0x395E668
	0x0395E660 MOV X0, X8
	0x0395E664 BL 0x1C16DFC
	0x0395E668 UDIV W1, W19, W28
	0x0395E66C MOVZ W0, 0x1
	0x0395E670 MOV X2, X31
	0x0395E674 BL 0x337EE48
	0x0395E678 LDR X8, [X24]
	0x0395E67C MOV W19, W0
	0x0395E680 LDR W9, [X8 + 0xE0]
	0x0395E684 CBNZ W9, 0x395E694
	0x0395E688 MOV X0, X8
	0x0395E68C BL 0x1C16DFC
	0x0395E690 LDR X8, [X24]
	0x0395E694 LDR X9, [X8 + 0xB8]
	0x0395E698 ADRP X25, 0x7F1000
	0x0395E69C LDR X20, [X9 + 0x8]
	0x0395E6A0 LDR X25, [X25 + 0x860]
	0x0395E6A4 CBNZ X20, 0x395E6FC
	0x0395E6A8 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X20, 0xA85000
	015 Move W8, [X20+2472]
	016 Move X19, X1
	017 Move X29, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {111}
	022 Move X0, 0x7F3000
	023 Move X0, [X0+1936]
	024 Call 0x1C17CF4
	025 Move X0, 0x7F3000
	026 Move X0, [X0+2024]
	027 Call 0x1C17CF4
	028 Move X0, 0x7F3000
	029 Move X0, [X0+1944]
	030 Call 0x1C17CF4
	031 Move X0, 0x7F3000
	032 Move X0, [X0+1960]
	033 Call 0x1C17CF4
	034 Move X0, 0x7F3000
	035 Move X0, [X0+1968]
	036 Call 0x1C17CF4
	037 Move X0, 0x7F3000
	038 Move X0, [X0+1976]
	039 Call 0x1C17CF4
	040 Move X0, 0x797000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x7F2000
	044 Move X0, [X0+2008]
	045 Call 0x1C17CF4
	046 Move X0, 0x7F2000
	047 Move X0, [X0+2016]
	048 Call 0x1C17CF4
	049 Move X0, 0x797000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0x7F3000
	053 Move X0, [X0+2032]
	054 Call 0x1C17CF4
	055 Move X0, 0x7F3000
	056 Move X0, [X0+1984]
	057 Call 0x1C17CF4
	058 Move X0, 0x79E000
	059 Move X0, [X0+2696]
	060 Call 0x1C17CF4
	061 Move X0, 0x7F3000
	062 Move X0, [X0+2040]
	063 Call 0x1C17CF4
	064 Move X0, 0x7F3000
	065 Move X0, [X0+2048]
	066 Call 0x1C17CF4
	067 Move X0, 0x7F1000
	068 Move X0, [X0+3544]
	069 Call 0x1C17CF4
	070 Move X0, 0x7F2000
	071 Move X0, [X0+2616]
	072 Call 0x1C17CF4
	073 Move X0, 0x7F1000
	074 Move X0, [X0+3552]
	075 Call 0x1C17CF4
	076 Move X0, 0x7F3000
	077 Move X0, [X0+2056]
	078 Call 0x1C17CF4
	079 Move X0, 0x7F3000
	080 Move X0, [X0+2064]
	081 Call 0x1C17CF4
	082 Move X0, 0x7F3000
	083 Move X0, [X0+2072]
	084 Call 0x1C17CF4
	085 Move X0, 0x7F3000
	086 Move X0, [X0+2080]
	087 Call 0x1C17CF4
	088 Move X0, 0x79E000
	089 Move X0, [X0+2760]
	090 Call 0x1C17CF4
	091 Move X0, 0x7F3000
	092 Move X0, [X0+2000]
	093 Call 0x1C17CF4
	094 Move X0, 0x7F3000
	095 Move X0, [X0+2088]
	096 Call 0x1C17CF4
	097 Move X0, 0x7F1000
	098 Move X0, [X0+3560]
	099 Call 0x1C17CF4
	100 Move X0, 0x7F1000
	101 Move X0, [X0+3568]
	102 Call 0x1C17CF4
	103 Move X0, 0x797000
	104 Move X0, [X0+1432]
	105 Call 0x1C17CF4
	106 Move X0, 0x7F2000
	107 Move X0, [X0+1424]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X20+2472], W8
	111 Move [X31+176], X31
	112 Move [X31+184], X31
	113 Move [X31+168], X31
	114 Move [X31+144], X31
	115 Move [X31+152], X31
	116 Move [X31+140], W31
	117 Move [X31+112], X31
	118 Move [X31+120], X31
	119 Move [X31+128], X31
	120 Compare X29, 0
	121 JumpIfEqual {670}
	122 Move X26, 0x797000
	123 Move X26, [X26+1432]
	124 Move X0, [X26]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X19
	130 Move X1, X31
	131 Move X2, X31
	132 Call Object.op_Equality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {677}
	137 Move X8, 0x7F3000
	138 Move X8, [X8+1936]
	139 Move X0, X29
	140 Move X1, [X8]
	141 Call Enumerable.Any, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {278}
	146 Move X8, 0x7F3000
	147 Move X8, [X8+1944]
	148 Move X0, X29
	149 Move X1, [X8]
	150 Call Enumerable.Count, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, 0x7F3000
	153 Move X8, [X8+2024]
	154 Move X0, X29
	155 Move X1, X19
	156 Move X2, [X8]
	157 Call Enumerable.Contains, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {278}
	162 Compare X19, 0
	163 JumpIfEqual {695}
	164 Move X0, X19
	165 Move X1, X31
	166 Move X2, X31
	167 Call ProBuilderMesh.GetVertices, X0, X1
	168 Move X8, 0x7F1000
	169 Move X8, [X8+3560]
	170 Move X20, X0
	171 Move X8, [X8]
	172 Move X0, X8
	173 Call 0x1C17F10
	174 Move X8, 0x7F1000
	175 Move X8, [X8+3552]
	176 Move X1, X20
	177 Move X23, X0
	178 Move X2, [X8]
	179 Call List`1<Object>..ctor, X0, X1
	180 Move [X31+184], X23
	181 Move X8, 0x7F1000
	182 Move X8, [X8+3568]
	183 Move X20, [X19+40]
	184 Move X0, [X8]
	185 Call 0x1C17F10
	186 Move X8, 0x7F1000
	187 Move X8, [X8+3544]
	188 Move X1, X20
	189 Move X24, X0
	190 Move X2, [X8]
	191 Call List`1<Object>..ctor, X0, X1
	192 Move X0, X19
	193 Move X1, X31
	194 Move [X31+176], X24
	195 Call ProBuilderMesh.get_sharedVertices, X0
	196 Move X21, 0x7F3000
	197 Move X21, [X21+2000]
	198 Move X20, X0
	199 Move X8, [X21]
	200 Move X0, X8
	201 Call 0x1C17F10
	202 Move X22, 0x7F3000
	203 Move X22, [X22+2056]
	204 Move X1, X20
	205 Move X25, X0
	206 Move X2, [X22]
	207 Call List`1<Object>..ctor, X0, X1
	208 Move [X31+168], X25
	209 Move X0, [X21]
	210 Move X20, [X19+72]
	211 Call 0x1C17F10
	212 Move X2, [X22]
	213 Move X1, X20
	214 Move X21, X0
	215 Call List`1<Object>..ctor, X0, X1
	216 Move X0, X19
	217 Move X1, X31
	218 Move [X31+80], X21
	219 Move [X31+160], X21
	220 Call ProBuilderMesh.get_vertexCount, X0
	221 Move W27, W0
	222 Move X0, X19
	223 Move X1, X31
	224 Call ProBuilderMesh.get_renderer, X0
	225 Compare X0, 0
	226 JumpIfEqual {695}
	227 Move X1, X31
	228 Call Renderer.get_sharedMaterials, X0
	229 Move X8, 0x79E000
	230 Move X8, [X8+2760]
	231 Move X20, X0
	232 Move X8, [X8]
	233 Move X0, X8
	234 Call 0x1C17F10
	235 Move X8, 0x7F3000
	236 Move X8, [X8+2064]
	237 Move X1, X20
	238 Move X21, X0
	239 Move X2, [X8]
	240 Call List`1<Object>..ctor, X0, X1
	241 Move X0, X19
	242 Move X1, X31
	243 Move [X31+32], X21
	244 Move [X31+152], X21
	245 Call Component.get_transform, X0
	246 Move X20, 0x7F3000
	247 Move X20, [X20+2088]
	248 Move [X31+40], X0
	249 Move X8, [X20]
	250 Move X0, X8
	251 Call 0x1C17F10
	252 Move X21, 0x7F3000
	253 Move X21, [X21+2048]
	254 Move X28, X0
	255 Move X1, [X21]
	256 Call List`1<Object>..ctor, X0
	257 Move X0, [X20]
	258 Call 0x1C17F10
	259 Move X1, [X21]
	260 Move X20, X0
	261 Call List`1<Object>..ctor, X0
	262 Move X10, 0x7F2000
	263 Move X8, [X29]
	264 Move X10, [X10+2008]
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X1, [X10]
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X29
	276 Move W2, W31
	277 Call 0x1C5D788
	278 Move X29, X31
	279 Move X0, X29
	280 Move X20, [X31+272]
	281 Move X19, [X31+280]
	282 Move X22, [X31+256]
	283 Move X21, [X31+264]
	284 Move X24, [X31+240]
	285 Move X23, [X31+248]
	286 Move X26, [X31+224]
	287 Move X25, [X31+232]
	288 Move X28, [X31+208]
	289 Move X27, [X31+216]
	290 Move X29, [X31+192]
	291 Move X30, [X31+200]
	292 Add X31, X31, 288
	293 Return X0
	294 NotImplemented "Instruction LDRSW not yet implemented."
	295 Add X8, X8, X9
	296 Add X0, X8, 312
	297 Move X8, [X0]
	298 Move X1, [X0+8]
	299 Move X0, X29
	300 Move [X31+56], X25
	301 Move [X31+64], X24
	302 Move [X31+72], X23
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X29, X0
	305 Move [X31+52], W27
	306 Compare X0, 0
	307 JumpIfEqual {696}
	308 Move X21, 0x797000
	309 Move X22, 0x7F2000
	310 Move X24, 0x7F3000
	311 Move X21, [X21+3608]
	312 Move X22, [X22+2016]
	313 Move X24, [X24+2032]
	314 Move W23, 0xFFFE
	315 Move W25, W27
	316 Move X8, [X29]
	317 Move X1, [X21]
	318 NotImplemented "Instruction LDRH not yet implemented."
	319 Compare X9, 0
	320 JumpIfEqual {327}
	321 Move X10, [X8+176]
	322 Add X10, X10, 8
	323 NotImplemented "Instruction LDUR not yet implemented."
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Subtract X9, X9, 1
	326 Add X10, X10, 16
	327 Move X0, X29
	328 Move W2, W31
	329 Call 0x1C5D788
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Add X8, X8, X9
	332 Add X0, X8, 312
	333 Move X8, [X0]
	334 Move X1, [X0+8]
	335 Move X0, X29
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {431}
	341 Move X8, [X29]
	342 Move X1, [X22]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Compare X9, 0
	345 JumpIfEqual {352}
	346 Move X10, [X8+176]
	347 Add X10, X10, 8
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Subtract X9, X9, 1
	351 Add X10, X10, 16
	352 Move X0, X29
	353 Move W2, W31
	354 Call 0x1C5D788
	355 NotImplemented "Instruction LDRSW not yet implemented."
	356 Add X8, X8, X9
	357 Add X0, X8, 312
	358 Move X8, [X0]
	359 Move X1, [X0+8]
	360 Move X0, X29
	361 NotImplemented "Instruction BLR not yet implemented."
	362 Move X27, X0
	363 Move X0, [X26]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move X0, X27
	369 Move X1, X19
	370 Move X2, X31
	371 Call Object.op_Inequality, X0, X1
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {316}
	376 Compare X27, 0
	377 JumpIfEqual {666}
	378 Move X0, X27
	379 Move X1, X31
	380 Call ProBuilderMesh.get_vertexCount, X0
	381 Add W8, W0, W25
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Compare X20, 0
	384 JumpIfEqual {667}
	385 Move W10, [X20+28]
	386 Move X8, [X20+16]
	387 Move X9, [X24]
	388 Add W10, W10, 1
	389 Move [X20+28], W10
	390 Compare X8, 0
	391 JumpIfEqual {668}
	392 NotImplemented "Instruction LDRSW not yet implemented."
	393 Move W11, [X8+24]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Add W9, W10, 1
	396 Add X8, X8, X10
	397 Move [X20+24], W9
	398 Move [X8+32], X27
	399 Move X8, [X9+32]
	400 Move X8, [X8+192]
	401 Move X2, [X8+112]
	402 Move X0, X20
	403 Move X1, X27
	404 Call List`1<Object>.AddWithResize, X0, X1
	405 Move X0, X27
	406 Move X1, X31
	407 Call ProBuilderMesh.get_vertexCount, X0
	408 Compare X28, 0
	409 JumpIfEqual {700}
	410 Move W10, [X28+28]
	411 Move X8, [X28+16]
	412 Move X9, [X24]
	413 Add W10, W10, 1
	414 Move [X28+28], W10
	415 Compare X8, 0
	416 JumpIfEqual {699}
	417 NotImplemented "Instruction LDRSW not yet implemented."
	418 Move W11, [X8+24]
	419 Add W25, W0, W25
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Add W9, W10, 1
	422 Add X8, X8, X10
	423 Move [X28+24], W9
	424 Move [X8+32], X27
	425 Move X8, [X9+32]
	426 Move X8, [X8+192]
	427 Move X2, [X8+112]
	428 Move X0, X28
	429 Move X1, X27
	430 Call List`1<Object>.AddWithResize, X0, X1
	431 Move X27, X31
	432 Move W21, 14
	433 Compare X29, 0
	434 JumpIfEqual {458}
	435 Move X10, 0x796000
	436 Move X8, [X29]
	437 Move X10, [X10+3584]
	438 NotImplemented "Instruction LDRH not yet implemented."
	439 Move X1, [X10]
	440 Compare X9, 0
	441 JumpIfEqual {448}
	442 Move X10, [X8+176]
	443 Add X10, X10, 8
	444 NotImplemented "Instruction LDUR not yet implemented."
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Subtract X9, X9, 1
	447 Add X10, X10, 16
	448 Move X0, X29
	449 Move W2, W31
	450 Call 0x1C5D788
	451 NotImplemented "Instruction LDRSW not yet implemented."
	452 Add X8, X8, X9
	453 Add X0, X8, 312
	454 Move X8, [X0]
	455 Move X1, [X0+8]
	456 Move X0, X29
	457 NotImplemented "Instruction BLR not yet implemented."
	458 Compare X27, 0
	459 JumpIfNotEqual {697}
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Compare W21, 0
	462 JumpIfNotEqual {279}
	463 Move X8, 0x7F0000
	464 Move X8, [X8+3568]
	465 Move X0, [X8]
	466 Call 0x1C17F10
	467 Move X8, 0x7F1000
	468 Move X8, [X8+2616]
	469 Move X27, X0
	470 Move X1, [X8]
	471 Call List`1<Object>..ctor, X0
	472 Move X8, [X31+40]
	473 Move W1, [X31+52]
	474 Add X2, X31, 184
	475 Add X3, X31, 176
	476 Add X4, X31, 144
	477 Add X5, X31, 168
	478 Add X6, X31, 160
	479 Add X7, X31, 152
	480 Move X0, X28
	481 Move [X31+144], X27
	482 Move [X31], X8
	483 Call CombineMeshes.AccumulateMeshesInfo, X0, X1, X2, X3, X4, X5, X6, X7, X8
	484 Move X1, [X31+72]
	485 Move X0, X19
	486 Move W2, W31
	487 Move X3, X31
	488 Call ProBuilderMesh.SetVertices, X0, X1, X2
	489 Move X1, [X31+64]
	490 Move X0, X19
	491 Move X2, X31
	492 Call ProBuilderMesh.set_faces, X0, X1
	493 Move X1, [X31+56]
	494 Move X0, X19
	495 Move X2, X31
	496 Call ProBuilderMesh.set_sharedVertices, X0, X1
	497 Move X0, [X31+80]
	498 Compare X0, 0
	499 JumpIfEqual {505}
	500 Move X8, 0x7F2000
	501 Move X8, [X8+2040]
	502 Move X1, [X8]
	503 Call List`1<Object>.ToArray, X0
	504 Move X1, X0
	505 Move X1, X31
	506 Move X22, [X31+32]
	507 Move X0, X19
	508 Move X2, X31
	509 Call ProBuilderMesh.set_sharedTextures, X0, X1
	510 Move X0, X19
	511 Move X1, X31
	512 Call ProBuilderMesh.get_renderer, X0
	513 Compare X22, 0
	514 JumpIfEqual {695}
	515 Move X8, 0x79D000
	516 Move X8, [X8+2696]
	517 Move X21, X0
	518 Move X0, X22
	519 Move X1, [X8]
	520 Call List`1<Object>.ToArray, X0
	521 Compare X21, 0
	522 JumpIfEqual {695}
	523 Move X1, X0
	524 Move X0, X21
	525 Move X2, X31
	526 Call Renderer.set_sharedMaterials, X0, X1
	527 Move X0, X19
	528 Move W1, W31
	529 Move X2, X31
	530 Call ProBuilderMesh.ToMesh, X0, X1
	531 Move W1, 31
	532 Move X0, X19
	533 Move X2, X31
	534 Call ProBuilderMesh.Refresh, X0, X1
	535 Move X8, 0x7F1000
	536 Move X8, [X8+1424]
	537 Move X0, [X8]
	538 Move W8, [X0+224]
	539 Compare W8, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Move X0, X19
	543 Move X1, X27
	544 Move X2, X31
	545 Call UvUnwrapping.SetAutoAndAlignUnwrapParamsToUVs, X0, X1
	546 Add X1, X31, 140
	547 Move X0, X19
	548 Move X2, X31
	549 Call MeshValidation.EnsureMeshIsValid, X0, X1
	550 Move X8, 0x7F2000
	551 Move X8, [X8+2088]
	552 Move X0, [X8]
	553 Call 0x1C17F10
	554 Move X8, 0x7F2000
	555 Move X8, [X8+2048]
	556 Move X29, X0
	557 Move X1, [X8]
	558 Call List`1<Object>..ctor, X0
	559 Compare X29, 0
	560 JumpIfEqual {695}
	561 Move X21, 0x7F2000
	562 Move X21, [X21+2032]
	563 Move W10, [X29+28]
	564 Move X8, [X29+16]
	565 Move X9, [X21]
	566 Add W10, W10, 1
	567 Move [X29+28], W10
	568 Compare X8, 0
	569 JumpIfEqual {695}
	570 NotImplemented "Instruction LDRSW not yet implemented."
	571 Move W11, [X8+24]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Add W9, W10, 1
	574 Add X8, X8, X10
	575 Move [X29+24], W9
	576 Move [X8+32], X19
	577 Move X8, [X9+32]
	578 Move X0, X29
	579 Move X1, X19
	580 Move X8, [X8+192]
	581 Move X2, [X8+112]
	582 Call List`1<Object>.AddWithResize, X0, X1
	583 Compare X20, 0
	584 JumpIfEqual {695}
	585 Move W8, [X20+24]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 NotImplemented "Instruction CMP not yet implemented."
	588 Move X8, 0x7F2000
	589 Move X8, [X8+2080]
	590 Move X0, X20
	591 Move W1, W31
	592 Move X2, [X8]
	593 Call List`1<Object>.get_Item, X0, X1
	594 Move W10, [X29+28]
	595 Move X8, [X29+16]
	596 Move X9, [X21]
	597 Add W10, W10, 1
	598 Move [X29+28], W10
	599 Compare X8, 0
	600 JumpIfEqual {695}
	601 NotImplemented "Instruction LDRSW not yet implemented."
	602 Move W11, [X8+24]
	603 Move X1, X0
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Add W9, W10, 1
	606 Add X8, X8, X10
	607 Move [X29+24], W9
	608 Move [X8+32], X1
	609 Move X0, X20
	610 Call CombineMeshes.CombineToNewMeshes, X0
	611 Compare X0, 0
	612 JumpIfEqual {695}
	613 Move X8, 0x7F2000
	614 Move X8, [X8+1984]
	615 Move X1, [X8]
	616 Add X8, X31, 88
	617 Call List`1<Object>.GetEnumerator, X0
	618 NotImplemented "Instruction LDUR not yet implemented."
	619 Move X8, [X31+104]
	620 Move X22, 0x7F2000
	621 Move [X31+7], V0
	622 Move [X31+128], X8
	623 Move X22, [X22+1968]
	624 Move X1, [X22]
	625 Add X0, X31, 112
	626 Call Enumerator<Object>.MoveNext, X0
	627 Move TEMP, X0
	628 And TEMP, TEMP, 1
	629 Compare TEMP, 1
	630 JumpIfNotEqual {656}
	631 Move X19, [X31+128]
	632 Add X1, X31, 140
	633 Move X0, X19
	634 Move X2, X31
	635 Call MeshValidation.EnsureMeshIsValid, X0, X1
	636 Move W10, [X29+28]
	637 Move X8, [X29+16]
	638 Move X9, [X21]
	639 Add W10, W10, 1
	640 Move [X29+28], W10
	641 Compare X8, 0
	642 JumpIfEqual {669}
	643 NotImplemented "Instruction LDRSW not yet implemented."
	644 Move W11, [X8+24]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Add W9, W10, 1
	647 Add X8, X8, X10
	648 Move [X29+24], W9
	649 Move [X8+32], X19
	650 Move X8, [X9+32]
	651 Move X8, [X8+192]
	652 Move X2, [X8+112]
	653 Move X0, X29
	654 Move X1, X19
	655 Call List`1<Object>.AddWithResize, X0, X1
	656 Move X8, 0x7F2000
	657 Move X8, [X8+1960]
	658 Add X0, X31, 112
	659 Move X1, [X8]
	660 Call Enumerator<Object>.Dispose, X0
	661 Move X8, [X9+32]
	662 Move X0, X29
	663 Move X8, [X8+192]
	664 Move X2, [X8+112]
	665 Call List`1<Object>.AddWithResize, X0, X1
	666 Call 0x1C17F20
	667 Call 0x1C17F20
	668 Call 0x1C17F20
	669 Call 0x1C17F20
	670 Move X0, 0x79B000
	671 Move X0, [X0+1320]
	672 Call 0x1C17D08
	673 Call 0x1C17F10
	674 Move X19, X0
	675 Move X0, 0x7F2000
	676 Move X0, [X0+2008]
	677 Move X0, 0x79B000
	678 Move X0, [X0+1320]
	679 Call 0x1C17D08
	680 Call 0x1C17F10
	681 Move X19, X0
	682 Move X0, 0x7F2000
	683 Move X0, [X0+2096]
	684 Call 0x1C17D08
	685 Move X1, X0
	686 Move X0, X19
	687 Move X2, X31
	688 Call ArgumentNullException..ctor, X0, X1
	689 Move X0, 0x7F2000
	690 Move X0, [X0+2104]
	691 Call 0x1C17D08
	692 Move X1, X0
	693 Move X0, X19
	694 Call 0x1C17DEC
	695 Call 0x1C17F20
	696 Call 0x1C17F20
	697 Move X0, X27
	698 Call 0x1C17F18
	699 Call 0x1C17F20
	700 Call 0x1C17F20
	701 Move X22, X0
	702 NotImplemented "Instruction CMP not yet implemented."
	703 Move X0, X22
	704 Call 0x3EB2AD0
	705 Move X19, [X0]
	706 Call 0x3EB2AE0
	707 Move X8, 0x7F2000
	708 Move X8, [X8+1960]
	709 Add X0, X31, 112
	710 Move X1, [X8]
	711 Call Enumerator<Object>.Dispose, X0
	712 Compare X19, 0
	713 JumpIfNotEqual {716}
	714 Move W8, [X20+24]
	715 Move X19, X31
	716 Move X0, X19
	717 Call 0x1C17F18
	718 Move X22, X0
	719 Move X8, 0x7F2000
	720 Move X8, [X8+1960]
	721 Move X1, [X8]
	722 Add X0, X31, 112
	723 Call Enumerator<Object>.Dispose, X0
	724 Compare X19, 0
	725 JumpIfEqual {766}
	726 Move X0, X19
	727 Call 0x1C17F18
	728 Move X22, X0
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move X0, X22
	731 Call 0x3EB2AD0
	732 Move X27, [X0]
	733 Call 0x3EB2AE0
	734 Move W21, W31
	735 Compare X29, 0
	736 JumpIfNotEqual {435}
	737 Move X27, X31
	738 Move X22, X0
	739 Compare X29, 0
	740 JumpIfEqual {764}
	741 Move X10, 0x796000
	742 Move X8, [X29]
	743 Move X10, [X10+3584]
	744 NotImplemented "Instruction LDRH not yet implemented."
	745 Move X1, [X10]
	746 Compare X9, 0
	747 JumpIfEqual {754}
	748 Move X10, [X8+176]
	749 Add X10, X10, 8
	750 NotImplemented "Instruction LDUR not yet implemented."
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Subtract X9, X9, 1
	753 Add X10, X10, 16
	754 Move X0, X29
	755 Move W2, W31
	756 Call 0x1C5D788
	757 NotImplemented "Instruction LDRSW not yet implemented."
	758 Add X8, X8, X9
	759 Add X0, X8, 312
	760 Move X8, [X0]
	761 Move X1, [X0+8]
	762 Move X0, X29
	763 NotImplemented "Instruction BLR not yet implemented."
	764 Compare X27, 0
	765 JumpIfNotEqual {768}
	766 Move X0, X22
	767 Call 0x1D2D690
	768 Move X0, X27
	769 Call 0x1C17F18
	770 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.ProBuilderMesh> CombineToNewMeshes(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.ProBuilderMesh> meshes)

Disassembly:
	0x0395D658 CMP X11, X1
	0x0395D65C B.EQ 0x395D67C
	0x0395D660 SUBS X9, X9, 0x1
	0x0395D664 ADD X10, X10, 0x10
	0x0395D668 B.NE 0x395D654
	0x0395D66C MOV X0, X29
	0x0395D670 MOV W2, W31
	0x0395D674 BL 0x1C5C788
	0x0395D678 B 0x395D688
	0x0395D67C LDRSW X9, [X10]
	0x0395D680 ADD X8, X8, X9, 0x4, LSL
	0x0395D684 ADD X0, X8, 0x138
	0x0395D688 LDP X8, X1, [X0]
	0x0395D68C MOV X0, X29
	0x0395D690 BLR X8
	0x0395D694 CBNZ X27, 0x395D6A0
	0x0395D698 MOV X0, X22
	0x0395D69C BL 0x1D2C690
	0x0395D6A0 MOV X0, X27
	0x0395D6A4 BL 0x1C16F18
	0x0395D6A8 BL 0x1990590
	0x0395D6AC SUB X31, X31, 0xC0
	0x0395D6B0 STP X29, X30, [X31 + 0x60]
	0x0395D6B4 STP X28, X27, [X31 + 0x70]
	0x0395D6B8 STP X26, X25, [X31 + 0x80]
	0x0395D6BC STP X24, X23, [X31 + 0x90]
	0x0395D6C0 STP X22, X21, [X31 + 0xA0]
	0x0395D6C4 STP X20, X19, [X31 + 0xB0]
	0x0395D6C8 ADRP X20, 0xA84000
	0x0395D6CC LDRB W8, [X20 + 0x9AA]
	0x0395D6D0 MOV X27, X7
	0x0395D6D4 MOV X25, X6
	0x0395D6D8 MOV X24, X5
	0x0395D6DC MOV W26, W1
	0x0395D6E0 MOV X19, X0
	0x0395D6E4 STR X4, [X31 + 0x20]
	0x0395D6E8 STP X3, X2, [X31 + 0x40]
	0x0395D6EC TBNZ X8, 0x0, 0x395D7B8
	0x0395D6F0 ADRP X0, 0x7F1000
	0x0395D6F4 LDR X0, [X0 + 0x560]
	0x0395D6F8 BL 0x1C16CF4
	0x0395D6FC ADRP X0, 0x796000
	0x0395D700 LDR X0, [X0 + 0xE00]
	0x0395D704 BL 0x1C16CF4
	0x0395D708 ADRP X0, 0x7F1000
	0x0395D70C LDR X0, [X0 + 0x7D8]
	0x0395D710 BL 0x1C16CF4
	0x0395D714 ADRP X0, 0x7F2000
	0x0395D718 LDR X0, [X0 + 0x840]
	0x0395D71C BL 0x1C16CF4
	0x0395D720 ADRP X0, 0x7F1000
	0x0395D724 LDR X0, [X0 + 0x7E0]
	0x0395D728 BL 0x1C16CF4
	0x0395D72C ADRP X0, 0x7F2000
	0x0395D730 LDR X0, [X0 + 0x848]
	0x0395D734 BL 0x1C16CF4
	0x0395D738 ADRP X0, 0x796000
	0x0395D73C LDR X0, [X0 + 0xE18]
	0x0395D740 BL 0x1C16CF4
	0x0395D744 ADRP X0, 0x79D000
	0x0395D748 LDR X0, [X0 + 0xA70]
	0x0395D74C BL 0x1C16CF4
	0x0395D750 ADRP X0, 0x7F0000
	0x0395D754 LDR X0, [X0 + 0xE10]
	0x0395D758 BL 0x1C16CF4
	0x0395D75C ADRP X0, 0x7F2000
	0x0395D760 LDR X0, [X0 + 0x1C0]
	0x0395D764 BL 0x1C16CF4
	0x0395D768 ADRP X0, 0x7F2000
	0x0395D76C LDR X0, [X0 + 0x850]
	0x0395D770 BL 0x1C16CF4
	0x0395D774 ADRP X0, 0x7F2000
	0x0395D778 LDR X0, [X0 + 0x858]
	0x0395D77C BL 0x1C16CF4
	0x0395D780 ADRP X0, 0x7F0000
	0x0395D784 LDR X0, [X0 + 0xF40]
	0x0395D788 BL 0x1C16CF4
	0x0395D78C ADRP X0, 0x796000
	0x0395D790 LDR X0, [X0 + 0x598]
	0x0395D794 BL 0x1C16CF4
	0x0395D798 ADRP X0, 0x7F1000
	0x0395D79C LDR X0, [X0 + 0x420]
	0x0395D7A0 BL 0x1C16CF4
	0x0395D7A4 ADRP X0, 0x7F1000
	0x0395D7A8 LDR X0, [X0 + 0xE78]
	0x0395D7AC BL 0x1C16CF4
	0x0395D7B0 MOVZ W8, 0x1
	0x0395D7B4 STRB W8, [X20 + 0x9AA]
	0x0395D7B8 CBZ X19, 0x395E274
	0x0395D7BC ADRP X10, 0x7F1000
	0x0395D7C0 LDR X8, [X19]
	0x0395D7C4 LDR X10, [X10 + 0x7D8]
	0x0395D7C8 LDRH W9, [X8 + 0x12E]
	0x0395D7CC LDR X1, [X10]
	0x0395D7D0 CBZ X9, 0x395D7F4
	0x0395D7D4 LDR X10, [X8 + 0xB0]
	0x0395D7D8 ADD X10, X10, 0x8
	0x0395D7DC LDUR X11, [X10 - 0x8]
	0x0395D7E0 CMP X11, X1
	0x0395D7E4 B.EQ 0x395D804
	0x0395D7E8 SUBS X9, X9, 0x1
	0x0395D7EC ADD X10, X10, 0x10
	0x0395D7F0 B.NE 0x395D7DC
	0x0395D7F4 MOV X0, X19
	0x0395D7F8 MOV W2, W31
	0x0395D7FC BL 0x1C5C788
	0x0395D800 B 0x395D810
	0x0395D804 LDRSW X9, [X10]
	0x0395D808 ADD X8, X8, X9, 0x4, LSL
	0x0395D80C ADD X0, X8, 0x138
	0x0395D810 LDP X8, X1, [X0]
	0x0395D814 MOV X0, X19
	0x0395D818 BLR X8
	0x0395D81C STR X0, [X31 + 0x38]
	0x0395D820 CBZ X0, 0x395E278
	0x0395D824 LDR X8, [X31 + 0xC0]
	0x0395D828 ADRP X10, 0x796000
	0x0395D82C STR X8, [X31 + 0x58]
	0x0395D830 LDR X10, [X10 + 0xE18]
	0x0395D834 STP X25, X27, [X31 + 0x10]
	0x0395D838 STR X24, [X31 + 0x8]
	0x0395D83C LDR X8, [X31 + 0x38]
	0x0395D840 LDR X1, [X10]
	0x0395D844 LDR X8, [X8]
	0x0395D848 LDRH W9, [X8 + 0x12E]
	0x0395D84C CBZ X9, 0x395D870
	0x0395D850 LDR X10, [X8 + 0xB0]
	0x0395D854 ADD X10, X10, 0x8
	0x0395D858 LDUR X11, [X10 - 0x8]
	0x0395D85C CMP X11, X1
	0x0395D860 B.EQ 0x395D880
	0x0395D864 SUBS X9, X9, 0x1
	0x0395D868 ADD X10, X10, 0x10
	0x0395D86C B.NE 0x395D858
	0x0395D870 LDR X0, [X31 + 0x38]
	0x0395D874 MOV W2, W31
	0x0395D878 BL 0x1C5C788
	0x0395D87C B 0x395D88C
	0x0395D880 LDRSW X9, [X10]
	0x0395D884 ADD X8, X8, X9, 0x4, LSL
	0x0395D888 ADD X0, X8, 0x138
	0x0395D88C LDP X8, X1, [X0]
	0x0395D890 LDR X0, [X31 + 0x38]
	0x0395D894 BLR X8
	0x0395D898 TBZ X0, 0x0, 0x395E0F4
	0x0395D89C LDR X8, [X31 + 0x38]
	0x0395D8A0 ADRP X10, 0x7F1000
	0x0395D8A4 LDR X8, [X8]
	0x0395D8A8 LDRH W9, [X8 + 0x12E]
	0x0395D8AC LDR X10, [X10 + 0x7E0]
	0x0395D8B0 LDR X1, [X10]
	0x0395D8B4 CBZ X9, 0x395D8D8
	0x0395D8B8 LDR X10, [X8 + 0xB0]
	0x0395D8BC ADD X10, X10, 0x8
	0x0395D8C0 LDUR X11, [X10 - 0x8]
	0x0395D8C4 CMP X11, X1
	0x0395D8C8 B.EQ 0x395D8E8
	0x0395D8CC SUBS X9, X9, 0x1
	0x0395D8D0 ADD X10, X10, 0x10
	0x0395D8D4 B.NE 0x395D8C0
	0x0395D8D8 LDR X0, [X31 + 0x38]
	0x0395D8DC MOV W2, W31
	0x0395D8E0 BL 0x1C5C788
	0x0395D8E4 B 0x395D8F4
	0x0395D8E8 LDRSW X9, [X10]
	0x0395D8EC ADD X8, X8, X9, 0x4, LSL
	0x0395D8F0 ADD X0, X8, 0x138
	0x0395D8F4 LDP X8, X1, [X0]
	0x0395D8F8 LDR X0, [X31 + 0x38]
	0x0395D8FC BLR X8
	0x0395D900 MOV X21, X0
	0x0395D904 CBZ X0, 0x395E254
	0x0395D908 MOV X0, X21
	0x0395D90C MOV X1, X31
	0x0395D910 BL 0x39120C0
	0x0395D914 MOV W20, W0
	0x0395D918 MOV X0, X21
	0x0395D91C MOV X1, X31
	0x0395D920 BL 0x3C32E90
	0x0395D924 MOV X19, X0
	0x0395D928 MOV X0, X21
	0x0395D92C MOV X1, X31
	0x0395D930 MOV X2, X31
	0x0395D934 BL 0x3912114
	0x0395D938 LDR X24, [X21 + 0x28]
	0x0395D93C MOV X28, X0
	0x0395D940 MOV X0, X21
	0x0395D944 MOV X1, X31
	0x0395D948 BL 0x3915F00
	0x0395D94C STR X0, [X31 + 0x28]
	0x0395D950 LDR X8, [X21 + 0x48]
	0x0395D954 STR X8, [X31 + 0x50]
	0x0395D958 MOV X0, X21
	0x0395D95C MOV X1, X31
	0x0395D960 BL 0x3912AD8
	0x0395D964 CBZ X0, 0x395E258
	0x0395D968 MOV X1, X31
	0x0395D96C BL 0x3C1351C
	0x0395D970 MOV X23, X0
	0x0395D974 CBZ X0, 0x395E250
	0x0395D978 LDR W25, [X23 + 0x18]
	0x0395D97C CMP W20, 0x1
	0x0395D980 STR W20, [X31 + 0x34]
	0x0395D984 B.LT 0x395DB04
	0x0395D988 CBZ X28, 0x395E270
	0x0395D98C LDR W8, [X31 + 0x34]
	0x0395D990 MOV X22, X31
	0x0395D994 ADD X27, X28, 0x20
	0x0395D998 MOV W20, W8
	0x0395D99C LDR W8, [X28 + 0x18]
	0x0395D9A0 CMP X22, X8
	0x0395D9A4 B.CS 0x395E18C
	0x0395D9A8 ADRP X8, 0x7F1000
	0x0395D9AC LDR X8, [X8 + 0xE78]
	0x0395D9B0 LDR X21, [X27, X22, LSL #3]
	0x0395D9B4 LDR X0, [X8]
	0x0395D9B8 LDR W8, [X0 + 0xE0]
	0x0395D9BC CBNZ W8, 0x395D9C4
	0x0395D9C0 BL 0x1C16DFC
	0x0395D9C4 MOV X0, X19
	0x0395D9C8 MOV X1, X21
	0x0395D9CC MOV X2, X31
	0x0395D9D0 BL 0x3939FD8
	0x0395D9D4 ADRP X8, 0x796000
	0x0395D9D8 LDR X8, [X8 + 0x598]
	0x0395D9DC MOV X21, X0
	0x0395D9E0 LDR X0, [X8]
	0x0395D9E4 LDR W8, [X0 + 0xE0]
	0x0395D9E8 CBNZ W8, 0x395D9F0
	0x0395D9EC BL 0x1C16DFC
	0x0395D9F0 LDR X0, [X31 + 0x58]
	0x0395D9F4 MOV X1, X31
	0x0395D9F8 MOV X2, X31
	0x0395D9FC BL 0x3C354F8
	0x0395DA00 LDR X8, [X31 + 0x48]
	0x0395DA04 LDR X29, [X8]
	0x0395DA08 TBZ X0, 0x0, 0x395DA80
	0x0395DA0C ADRP X8, 0x7F1000
	0x0395DA10 LDR X8, [X8 + 0xE78]
	0x0395DA14 LDR X0, [X8]
	0x0395DA18 LDR W8, [X0 + 0xE0]
	0x0395DA1C CBNZ W8, 0x395DA24
	0x0395DA20 BL 0x1C16DFC
	0x0395DA24 LDR X0, [X31 + 0x58]
	0x0395DA28 MOV X1, X21
	0x0395DA2C MOV X2, X31
	0x0395DA30 BL 0x393A1D8
	0x0395DA34 MOV X1, X0
	0x0395DA38 CBZ X29, 0x395E1C0
	0x0395DA3C ADRP X9, 0x7F2000
	0x0395DA40 LDR W10, [X29 + 0x1C]
	0x0395DA44 LDR X8, [X29 + 0x10]
	0x0395DA48 LDR X9, [X9 + 0x1C0]
	0x0395DA4C ADD W10, W10, 0x1
	0x0395DA50 LDR X9, [X9]
	0x0395DA54 STR W10, [X29 + 0x1C]
	0x0395DA58 CBZ X8, 0x395E1C4
	0x0395DA5C LDRSW X10, [X29 + 0x18]
	0x0395DA60 LDR W11, [X8 + 0x18]
	0x0395DA64 CMP W10, W11
	0x0395DA68 B.CS 0x395DAE4
	0x0395DA6C ADD W9, W10, 0x1
	0x0395DA70 ADD X8, X8, X10, 0x3, LSL
	0x0395DA74 STR W9, [X29 + 0x18]
	0x0395DA78 STR X1, [X8 + 0x20]
	0x0395DA7C B 0x395DAF8
	0x0395DA80 CBZ X29, 0x395E1BC
	0x0395DA84 ADRP X9, 0x7F2000
	0x0395DA88 LDR W10, [X29 + 0x1C]
	0x0395DA8C LDR X8, [X29 + 0x10]
	0x0395DA90 LDR X9, [X9 + 0x1C0]
	0x0395DA94 ADD W10, W10, 0x1
	0x0395DA98 LDR X9, [X9]
	0x0395DA9C STR W10, [X29 + 0x1C]
	0x0395DAA0 CBZ X8, 0x395E1C8
	0x0395DAA4 LDRSW X10, [X29 + 0x18]
	0x0395DAA8 LDR W11, [X8 + 0x18]
	0x0395DAAC CMP W10, W11
	0x0395DAB0 B.CS 0x395DAC8
	0x0395DAB4 ADD W9, W10, 0x1
	0x0395DAB8 ADD X8, X8, X10, 0x3, LSL
	0x0395DABC STR W9, [X29 + 0x18]
	0x0395DAC0 STR X21, [X8 + 0x20]
	0x0395DAC4 B 0x395DAF8
	0x0395DAC8 LDR X8, [X9 + 0x20]
	0x0395DACC LDR X8, [X8 + 0xC0]
	0x0395DAD0 LDR X2, [X8 + 0x70]
	0x0395DAD4 MOV X0, X29
	0x0395DAD8 MOV X1, X21
	0x0395DADC BL 0x301BF90
	0x0395DAE0 B 0x395DAF8
	0x0395DAE4 LDR X8, [X9 + 0x20]
	0x0395DAE8 LDR X8, [X8 + 0xC0]
	0x0395DAEC LDR X2, [X8 + 0x70]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D10
	003 Move [X31+136], D9
	004 Move [X31+144], D8
	005 Move [X31+152], X30
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X19, 0xA85000
	015 Move W8, [X19+2473]
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {74}
	021 Move X0, 0x7F3000
	022 Move X0, [X0+1936]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F3000
	025 Move X0, [X0+1944]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F3000
	028 Move X0, [X0+1952]
	029 Call 0x1C17CF4
	030 Move X0, 0x7F3000
	031 Move X0, [X0+1960]
	032 Call 0x1C17CF4
	033 Move X0, 0x7F3000
	034 Move X0, [X0+1968]
	035 Call 0x1C17CF4
	036 Move X0, 0x7F3000
	037 Move X0, [X0+1976]
	038 Call 0x1C17CF4
	039 Move X0, 0x7F3000
	040 Move X0, [X0+1984]
	041 Call 0x1C17CF4
	042 Move X0, 0x79E000
	043 Move X0, [X0+2696]
	044 Call 0x1C17CF4
	045 Move X0, 0x79E000
	046 Move X0, [X0+2720]
	047 Call 0x1C17CF4
	048 Move X0, 0x7F2000
	049 Move X0, [X0+2616]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F3000
	052 Move X0, [X0+456]
	053 Call 0x1C17CF4
	054 Move X0, 0x7F3000
	055 Move X0, [X0+1992]
	056 Call 0x1C17CF4
	057 Move X0, 0x79E000
	058 Move X0, [X0+2760]
	059 Call 0x1C17CF4
	060 Move X0, 0x7F3000
	061 Move X0, [X0+2000]
	062 Call 0x1C17CF4
	063 Move X0, 0x7F1000
	064 Move X0, [X0+3560]
	065 Call 0x1C17CF4
	066 Move X0, 0x7F1000
	067 Move X0, [X0+3568]
	068 Call 0x1C17CF4
	069 Move X0, 0x7F2000
	070 Move X0, [X0+1424]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X19+2473], W8
	074 Move [X31+48], X31
	075 Move [X31+56], X31
	076 Move [X31+64], X31
	077 Compare X21, 0
	078 JumpIfEqual {264}
	079 Move X8, 0x7F3000
	080 Move X8, [X8+1936]
	081 Move X0, X21
	082 Move X1, [X8]
	083 Call Enumerable.Any, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {240}
	088 Move X8, 0x7F3000
	089 Move X8, [X8+1944]
	090 Move X0, X21
	091 Move X1, [X8]
	092 Call Enumerable.Count, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, 0x7F1000
	095 Move X8, [X8+3560]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0x7F3000
	099 Move X8, [X8+456]
	100 Move X19, X0
	101 Move X1, [X8]
	102 Call List`1<Object>..ctor, X0
	103 Move X20, 0x7F1000
	104 Move X20, [X20+3568]
	105 Move [X31+120], X19
	106 Move X0, [X20]
	107 Call 0x1C17F10
	108 Move X22, 0x7F2000
	109 Move X22, [X22+2616]
	110 Move X23, X0
	111 Move X1, [X22]
	112 Call List`1<Object>..ctor, X0
	113 Move X0, [X20]
	114 Move [X31+112], X23
	115 Call 0x1C17F10
	116 Move X1, [X22]
	117 Move X20, X0
	118 Call List`1<Object>..ctor, X0
	119 Move X22, 0x7F3000
	120 Move X22, [X22+2000]
	121 Move [X31+104], X20
	122 Move X0, [X22]
	123 Call 0x1C17F10
	124 Move X25, 0x7F3000
	125 Move X25, [X25+1992]
	126 Move X24, X0
	127 Move X1, [X25]
	128 Call List`1<Object>..ctor, X0
	129 Move X0, [X22]
	130 Move [X31+96], X24
	131 Call 0x1C17F10
	132 Move X1, [X25]
	133 Move X25, X0
	134 Call List`1<Object>..ctor, X0
	135 Move X8, 0x79E000
	136 Move X8, [X8+2760]
	137 Move [X31+88], X25
	138 Move X0, [X8]
	139 Call 0x1C17F10
	140 Move X8, 0x79E000
	141 Move X8, [X8+2720]
	142 Move X22, X0
	143 Move X1, [X8]
	144 Call List`1<Object>..ctor, X0
	145 Add X2, X31, 120
	146 Add X3, X31, 112
	147 Add X4, X31, 104
	148 Add X5, X31, 96
	149 Add X6, X31, 88
	150 Add X7, X31, 80
	151 Move X0, X21
	152 Move W1, W31
	153 Move [X31+80], X22
	154 Move [X31], X31
	155 Call CombineMeshes.AccumulateMeshesInfo, X0, X1, X2, X3, X4, X5, X6, X7, X8
	156 Move W4, 0xFFFF
	157 Move X0, X19
	158 Move X1, X23
	159 Move X2, X24
	160 Move X3, X25
	161 Call CombineMeshes.SplitByMaxVertexCount, X0, X1, X2, X3, X4
	162 Move X8, 0x7F3000
	163 Move X8, [X8+1952]
	164 Move X19, X0
	165 Move X0, X21
	166 Move X1, [X8]
	167 Call 0x21C8404, X0
	168 Compare X0, 0
	169 JumpIfEqual {282}
	170 Move X1, X31
	171 Call Component.get_transform, X0
	172 Compare X0, 0
	173 JumpIfEqual {282}
	174 Move X1, X31
	175 Call Transform.get_position, X0
	176 Compare X19, 0
	177 JumpIfEqual {282}
	178 Move X8, 0x7F3000
	179 Move X8, [X8+1984]
	180 Move X0, X19
	181 Move V8, V0
	182 Move V9, V1
	183 Move X1, [X8]
	184 Add X8, X31, 24
	185 Move V10, V2
	186 Call List`1<Object>.GetEnumerator, X0
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move X8, [X31+40]
	189 Move X24, 0x7F3000
	190 Move X25, 0x79E000
	191 Move X24, [X24+1968]
	192 Move X25, [X25+2696]
	193 Move [X31+3], V0
	194 Move [X31+64], X8
	195 Move X26, 0x7F2000
	196 Move X26, [X26+1424]
	197 Move X1, [X24]
	198 Add X0, X31, 48
	199 Call Enumerator<Object>.MoveNext, X0
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {241}
	204 Move X21, [X31+64]
	205 Compare X21, 0
	206 JumpIfEqual {262}
	207 Move X0, X21
	208 Move X1, X31
	209 Call ProBuilderMesh.get_renderer, X0
	210 Compare X22, 0
	211 JumpIfEqual {263}
	212 Move X1, [X25]
	213 Move X23, X0
	214 Move X0, X22
	215 Call List`1<Object>.ToArray, X0
	216 Move X1, X0
	217 Compare X23, 0
	218 JumpIfEqual {261}
	219 Move X0, X23
	220 Move X2, X31
	221 Call Renderer.set_sharedMaterials, X0, X1
	222 Move X0, X21
	223 Move X1, X31
	224 Call InternalMeshUtility.FilterUnusedSubmeshIndexes, X0
	225 Move X0, X21
	226 Move V0, V8
	227 Move V1, V9
	228 Move V2, V10
	229 Move X1, X31
	230 Call MeshTransform.SetPivot, X0, X1
	231 Move X0, [X26]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X21
	237 Move X1, X20
	238 Move X2, X31
	239 Call UvUnwrapping.SetAutoAndAlignUnwrapParamsToUVs, X0, X1
	240 Move X19, X31
	241 Move X8, 0x7F3000
	242 Move X8, [X8+1960]
	243 Add X0, X31, 48
	244 Move X1, [X8]
	245 Call Enumerator<Object>.Dispose, X0
	246 Move X0, X19
	247 Move X20, [X31+208]
	248 Move X19, [X31+216]
	249 Move X22, [X31+192]
	250 Move X21, [X31+200]
	251 Move X24, [X31+176]
	252 Move X23, [X31+184]
	253 Move X26, [X31+160]
	254 Move X25, [X31+168]
	255 Move X30, [X31+152]
	256 Move D9, [X31+136]
	257 Move D8, [X31+144]
	258 Move V10, [X31+128]
	259 Add X31, X31, 224
	260 Return X0
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Move X0, 0x79C000
	265 Move X0, [X0+1320]
	266 Call 0x1C17D08
	267 Call 0x1C17F10
	268 Move X19, X0
	269 Move X0, 0x7F3000
	270 Move X0, [X0+2008]
	271 Call 0x1C17D08
	272 Move X1, X0
	273 Move X0, X19
	274 Move X2, X31
	275 Call ArgumentNullException..ctor, X0, X1
	276 Move X0, 0x7F3000
	277 Move X0, [X0+2016]
	278 Call 0x1C17D08
	279 Move X1, X0
	280 Move X0, X19
	281 Call 0x1C17DEC
	282 Call 0x1C17F20
	283 Move X20, X0
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X0, X20
	286 Call 0x3EB2AD0
	287 Move X21, [X0]
	288 Call 0x3EB2AE0
	289 Move X8, 0x7F3000
	290 Move X8, [X8+1960]
	291 Add X0, X31, 48
	292 Move X1, [X8]
	293 Call Enumerator<Object>.Dispose, X0
	294 Compare X21, 0
	295 JumpIfEqual {246}
	296 Move X0, X21
	297 Call 0x1C17F18
	298 Move X21, X31
	299 Move X20, X0
	300 Move X8, 0x7F3000
	301 Move X8, [X8+1960]
	302 Move X1, [X8]
	303 Add X0, X31, 48
	304 Call Enumerator<Object>.Dispose, X0
	305 Compare X21, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X20
	308 Call 0x1D2D690
	309 Move X0, X21
	310 Call 0x1C17F18
	311 Call 0x1991590

Method: System.Void AccumulateMeshesInfo(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.ProBuilderMesh> meshes, System.Int32 offset, ref System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, ref System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> faces, ref System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> autoUvFaces, ref System.Collections.Generic.List`1<UnityEngine.ProBuilder.SharedVertex> sharedVertices, ref System.Collections.Generic.List`1<UnityEngine.ProBuilder.SharedVertex> sharedTextures, ref System.Collections.Generic.List`1<UnityEngine.Material> materialMap, UnityEngine.Transform targetTransform = null)

Disassembly:
	0x0395E6AC CBNZ W9, 0x395E6BC
	0x0395E6B0 MOV X0, X8
	0x0395E6B4 BL 0x1C16DFC
	0x0395E6B8 LDR X8, [X24]
	0x0395E6BC ADRP X9, 0x7F0000
	0x0395E6C0 LDR X8, [X8 + 0xB8]
	0x0395E6C4 LDR X9, [X9 + 0x510]
	0x0395E6C8 LDR X21, [X8]
	0x0395E6CC LDR X0, [X9]
	0x0395E6D0 BL 0x1C16F10
	0x0395E6D4 ADRP X8, 0x7F1000
	0x0395E6D8 LDR X8, [X8 + 0x870]
	0x0395E6DC MOV X1, X21
	0x0395E6E0 MOV X3, X31
	0x0395E6E4 MOV X20, X0
	0x0395E6E8 LDR X2, [X8]
	0x0395E6EC BL 0x2D30128
	0x0395E6F0 LDR X8, [X24]
	0x0395E6F4 LDR X8, [X8 + 0xB8]
	0x0395E6F8 STR X20, [X8 + 0x8]
	0x0395E6FC LDR X2, [X25]
	0x0395E700 MOV X0, X26
	0x0395E704 MOV X1, X20
	0x0395E708 BL 0x21C95A4
	0x0395E70C CMP W19, 0x1
	0x0395E710 ADD W20, W0, 0x1
	0x0395E714 B.HI 0x395E794
	0x0395E718 ADRP X8, 0x7F1000
	0x0395E71C LDR X8, [X8 + 0x828]
	0x0395E720 LDR X0, [X8]
	0x0395E724 BL 0x1C16F10
	0x0395E728 ADRP X8, 0x7F1000
	0x0395E72C LDR X8, [X8 + 0x800]
	0x0395E730 MOV X19, X0
	0x0395E734 LDR X1, [X8]
	0x0395E738 BL 0x301B7C4
	0x0395E73C ADRP X8, 0x79C000
	0x0395E740 LDR X8, [X8 + 0x7A0]
	0x0395E744 MOV W1, W20
	0x0395E748 LDR X0, [X8]
	0x0395E74C BL 0x1C16D6C
	0x0395E750 ADRP X8, 0x7F0000
	0x0395E754 LDR X8, [X8 + 0x528]
	0x0395E758 MOV X20, X0
	0x0395E75C LDR X8, [X8]
	0x0395E760 LDR W9, [X8 + 0xE0]
	0x0395E764 CBNZ W9, 0x395E770
	0x0395E768 MOV X0, X8
	0x0395E76C BL 0x1C16DFC
	0x0395E770 MOV X0, X27
	0x0395E774 MOV X1, X26
	0x0395E778 MOV X2, X22
	0x0395E77C MOV X3, X23
	0x0395E780 MOV X4, X20
	0x0395E784 MOV X5, X31
	0x0395E788 BL 0x3919650
	0x0395E78C CBNZ X19, 0x395EED8
	0x0395E790 B 0x395F00C
	0x0395E794 STR W20, [X31 + 0x14]
	0x0395E798 ADRP X19, 0x79F000
	0x0395E79C LDR X19, [X19 + 0x888]
	0x0395E7A0 LDR X0, [X19]
	0x0395E7A4 BL 0x1C16F10
	0x0395E7A8 ADRP X20, 0x79F000
	0x0395E7AC LDR X20, [X20 + 0x890]
	0x0395E7B0 MOV X21, X0
	0x0395E7B4 LDR X1, [X20]
	0x0395E7B8 BL 0x2A09A9C
	0x0395E7BC MOV X0, X22
	0x0395E7C0 MOV X1, X21
	0x0395E7C4 MOV X2, X31
	0x0395E7C8 STR X21, [X31 + 0x8]
	0x0395E7CC BL 0x3934C64
	0x0395E7D0 LDR X0, [X19]
	0x0395E7D4 BL 0x1C16F10
	0x0395E7D8 LDR X1, [X20]
	0x0395E7DC MOV X21, X0
	0x0395E7E0 BL 0x2A09A9C
	0x0395E7E4 MOV X0, X23
	0x0395E7E8 MOV X1, X21
	0x0395E7EC MOV X2, X31
	0x0395E7F0 STR X21, [X31]
	0x0395E7F4 BL 0x3934C64
	0x0395E7F8 ADRP X8, 0x7F1000
	0x0395E7FC LDR X8, [X8 + 0x828]
	0x0395E800 LDR X0, [X8]
	0x0395E804 BL 0x1C16F10
	0x0395E808 ADRP X8, 0x7F1000
	0x0395E80C LDR X8, [X8 + 0x800]
	0x0395E810 STR X0, [X31 + 0x18]
	0x0395E814 LDR X1, [X8]
	0x0395E818 BL 0x301B7C4
	0x0395E81C ADRP X8, 0x7EF000
	0x0395E820 LDR X8, [X8 + 0xDE8]
	0x0395E824 LDR X0, [X8]
	0x0395E828 BL 0x1C16F10
	0x0395E82C ADRP X8, 0x7F1000
	0x0395E830 LDR X8, [X8 + 0x1C8]
	0x0395E834 MOV X23, X0
	0x0395E838 LDR X1, [X8]
	0x0395E83C BL 0x301B7C4
	0x0395E840 ADRP X8, 0x7EF000
	0x0395E844 LDR X8, [X8 + 0xDF0]
	0x0395E848 LDR X0, [X8]
	0x0395E84C BL 0x1C16F10
	0x0395E850 ADRP X8, 0x7F0000
	0x0395E854 LDR X8, [X8 + 0xA38]
	0x0395E858 MOV X21, X0
	0x0395E85C LDR X1, [X8]
	0x0395E860 BL 0x301B7C4
	0x0395E864 LDR X0, [X19]
	0x0395E868 BL 0x1C16F10
	0x0395E86C LDR X1, [X20]
	0x0395E870 MOV X25, X0
	0x0395E874 BL 0x2A09A9C
	0x0395E878 CBZ X26, 0x395F00C
	0x0395E87C ADRP X10, 0x7EF000
	0x0395E880 LDR X8, [X26]
	0x0395E884 LDR X10, [X10 + 0xDB0]
	0x0395E888 LDRH W9, [X8 + 0x12E]
	0x0395E88C LDR X1, [X10]
	0x0395E890 CBZ X9, 0x395E8B4
	0x0395E894 LDR X10, [X8 + 0xB0]
	0x0395E898 ADD X10, X10, 0x8
	0x0395E89C LDUR X11, [X10 - 0x8]
	0x0395E8A0 CMP X11, X1
	0x0395E8A4 B.EQ 0x395E8C4
	0x0395E8A8 SUBS X9, X9, 0x1
	0x0395E8AC ADD X10, X10, 0x10
	0x0395E8B0 B.NE 0x395E89C
	0x0395E8B4 MOV X0, X26
	0x0395E8B8 MOV W2, W31
	0x0395E8BC BL 0x1C5C788
	0x0395E8C0 B 0x395E8D0
	0x0395E8C4 LDRSW X9, [X10]
	0x0395E8C8 ADD X8, X8, X9, 0x4, LSL
	0x0395E8CC ADD X0, X8, 0x138
	0x0395E8D0 LDP X8, X1, [X0]
	0x0395E8D4 MOV X0, X26
	0x0395E8D8 STR X21, [X31 + 0x38]
	0x0395E8DC BLR X8
	0x0395E8E0 STR X0, [X31 + 0x28]
	0x0395E8E4 CBZ X0, 0x395F010
	0x0395E8E8 MOV W8, W28
	0x0395E8EC STR X8, [X31 + 0x20]
	0x0395E8F0 ADRP X22, 0x795000
	0x0395E8F4 ADRP X21, 0x7BD000
	0x0395E8F8 ADRP X19, 0x7EF000
	0x0395E8FC ADRP X26, 0x7F1000
	0x0395E900 ADRP X24, 0x79F000
	0x0395E904 LDR X22, [X22 + 0xE18]
	0x0395E908 LDR X21, [X21 + 0x7C0]
	0x0395E90C LDR X19, [X19 + 0xF60]
	0x0395E910 LDR X26, [X26 + 0x1C0]
	0x0395E914 LDR X24, [X24 + 0x858]
	0x0395E918 MOV X20, X0
	0x0395E91C LDR X8, [X20]
	0x0395E920 LDR X1, [X22]
	0x0395E924 LDRH W9, [X8 + 0x12E]
	0x0395E928 CBZ X9, 0x395E94C
	0x0395E92C LDR X10, [X8 + 0xB0]
	0x0395E930 ADD X10, X10, 0x8
	0x0395E934 LDUR X11, [X10 - 0x8]
	0x0395E938 CMP X11, X1
	0x0395E93C B.EQ 0x395E95C
	0x0395E940 SUBS X9, X9, 0x1
	0x0395E944 ADD X10, X10, 0x10
	0x0395E948 B.NE 0x395E934
	0x0395E94C MOV X0, X20
	0x0395E950 MOV W2, W31
	0x0395E954 BL 0x1C5C788
	0x0395E958 B 0x395E968
	0x0395E95C LDRSW X9, [X10]
	0x0395E960 ADD X8, X8, X9, 0x4, LSL
	0x0395E964 ADD X0, X8, 0x138
	0x0395E968 LDP X8, X1, [X0]
	0x0395E96C MOV X0, X20
	0x0395E970 BLR X8
	0x0395E974 TBZ X0, 0x0, 0x395EDFC
	0x0395E978 LDR X8, [X20]
	0x0395E97C ADRP X10, 0x7EF000
	0x0395E980 LDRH W9, [X8 + 0x12E]
	0x0395E984 LDR X10, [X10 + 0xDB8]
	0x0395E988 LDR X1, [X10]
	0x0395E98C CBZ X9, 0x395E9B0
	0x0395E990 LDR X10, [X8 + 0xB0]
	0x0395E994 ADD X10, X10, 0x8
	0x0395E998 LDUR X11, [X10 - 0x8]
	0x0395E99C CMP X11, X1
	0x0395E9A0 B.EQ 0x395E9C0
	0x0395E9A4 SUBS X9, X9, 0x1
	0x0395E9A8 ADD X10, X10, 0x10
	0x0395E9AC B.NE 0x395E998
	0x0395E9B0 MOV X0, X20
	0x0395E9B4 MOV W2, W31
	0x0395E9B8 BL 0x1C5C788
	0x0395E9BC B 0x395E9CC
	0x0395E9C0 LDRSW X9, [X10]
	0x0395E9C4 ADD X8, X8, X9, 0x4, LSL
	0x0395E9C8 ADD X0, X8, 0x138
	0x0395E9CC LDP X8, X1, [X0]
	0x0395E9D0 MOV X0, X20
	0x0395E9D4 BLR X8
	0x0395E9D8 CBZ X23, 0x395EFE4
	0x0395E9DC MOV X28, X0
	0x0395E9E0 CBZ X0, 0x395EFE8
	0x0395E9E4 LDR W20, [X23 + 0x18]
	0x0395E9E8 MOV X0, X28
	0x0395E9EC MOV X1, X31
	0x0395E9F0 BL 0x38FFE60
	0x0395E9F4 CBZ X0, 0x395EFE0
	0x0395E9F8 ADRP X8, 0x7F0000
	0x0395E9FC LDR X8, [X8 + 0xC60]
	0x0395EA00 LDR X1, [X8]
	0x0395EA04 BL 0x253DBE0
	0x0395EA08 LDR X9, [X31 + 0x20]
	0x0395EA0C ADD W8, W0, W20
	0x0395EA10 SXTW X8, W8
	0x0395EA14 CMP X8, X9
	0x0395EA18 B.LE 0x395EB10
	0x0395EA1C ADRP X8, 0x79C000
	0x0395EA20 LDR X8, [X8 + 0x7A0]
	0x0395EA24 LDR X0, [X8]
	0x0395EA28 LDR W1, [X31 + 0x14]
	0x0395EA2C BL 0x1C16D6C
	0x0395EA30 MOV X5, X0
	0x0395EA34 LDR X1, [X31 + 0x38]
	0x0395EA38 LDP X3, X2, [X31]
	0x0395EA3C MOV X0, X23
	0x0395EA40 MOV X4, X25
	0x0395EA44 BL 0x395F13C
	0x0395EA48 MOV X1, X0
	0x0395EA4C LDR X0, [X31 + 0x18]
	0x0395EA50 CBZ X0, 0x395F004
	0x0395EA54 ADRP X9, 0x7F1000
	0x0395EA58 LDR W10, [X0 + 0x1C]
	0x0395EA5C LDR X8, [X0 + 0x10]
	0x0395EA60 LDR X9, [X9 + 0x7F0]
	0x0395EA64 ADD W10, W10, 0x1
	0x0395EA68 LDR X9, [X9]
	0x0395EA6C STR W10, [X0 + 0x1C]
	0x0395EA70 CBZ X8, 0x395F000
	0x0395EA74 LDRSW X10, [X0 + 0x18]
	0x0395EA78 LDR W11, [X8 + 0x18]
	0x0395EA7C CMP W10, W11
	0x0395EA80 B.CS 0x395EA98
	0x0395EA84 ADD W9, W10, 0x1
	0x0395EA88 ADD X8, X8, X10, 0x3, LSL
	0x0395EA8C STR W9, [X0 + 0x18]
	0x0395EA90 STR X1, [X8 + 0x20]
	0x0395EA94 B 0x395EAA8
	0x0395EA98 LDR X8, [X9 + 0x20]
	0x0395EA9C LDR X8, [X8 + 0xC0]
	0x0395EAA0 LDR X2, [X8 + 0x70]
	0x0395EAA4 BL 0x301BF90
	0x0395EAA8 LDP W2, W8, [X23 + 0x18]
	0x0395EAAC ADD W8, W8, 0x1
	0x0395EAB0 CMP W2, 0x1
	0x0395EAB4 STP W31, W8, [X23 + 0x18]
	0x0395EAB8 B.LT 0x395EACC
	0x0395EABC LDR X0, [X23 + 0x10]
	0x0395EAC0 MOV W1, W31
	0x0395EAC4 MOV X3, X31
	0x0395EAC8 BL 0x339FA34
	0x0395EACC LDR X20, [X31 + 0x38]
	0x0395EAD0 CBZ X20, 0x395F008
	0x0395EAD4 LDP W2, W8, [X20 + 0x18]
	0x0395EAD8 ADD W8, W8, 0x1
	0x0395EADC CMP W2, 0x1
	0x0395EAE0 STP W31, W8, [X20 + 0x18]
	0x0395EAE4 B.LT 0x395EAF8
	0x0395EAE8 LDR X0, [X20 + 0x10]
	0x0395EAEC MOV W1, W31
	0x0395EAF0 MOV X3, X31
	0x0395EAF4 BL 0x339FA34
	0x0395EAF8 CBZ X25, 0x395EFFC
	0x0395EAFC ADRP X8, 0x7BF000
	0x0395EB00 LDR X8, [X8 + 0x8D0]
	0x0395EB04 LDR X1, [X8]
	0x0395EB08 MOV X0, X25
	0x0395EB0C BL 0x2A0A4C4
	0x0395EB10 MOV X0, X28
	0x0395EB14 MOV X1, X31
	0x0395EB18 BL 0x38FFE60
	0x0395EB1C CBZ X0, 0x395EFEC
	0x0395EB20 ADRP X8, 0x7F0000
	0x0395EB24 LDR X8, [X8 + 0x5F8]
	0x0395EB28 LDR X1, [X8]
	0x0395EB2C BL 0x253DE40
	0x0395EB30 MOV X29, X0
	0x0395EB34 CBZ X0, 0x395EDB8
	0x0395EB38 LDR X8, [X29]
	0x0395EB3C LDR X1, [X22]
	0x0395EB40 LDRH W9, [X8 + 0x12E]
	0x0395EB44 CBZ X9, 0x395EB68
	0x0395EB48 LDR X10, [X8 + 0xB0]
	0x0395EB4C ADD X10, X10, 0x8
	0x0395EB50 LDUR X11, [X10 - 0x8]
	0x0395EB54 CMP X11, X1
	0x0395EB58 B.EQ 0x395EB78
	0x0395EB5C SUBS X9, X9, 0x1
	0x0395EB60 ADD X10, X10, 0x10
	0x0395EB64 B.NE 0x395EB50
	0x0395EB68 MOV X0, X29
	0x0395EB6C MOV W2, W31
	0x0395EB70 BL 0x1C5C788
	0x0395EB74 B 0x395EB84
	0x0395EB78 LDRSW X9, [X10]
	0x0395EB7C ADD X8, X8, X9, 0x4, LSL
	0x0395EB80 ADD X0, X8, 0x138
	0x0395EB84 LDP X8, X1, [X0]
	0x0395EB88 MOV X0, X29
	0x0395EB8C BLR X8
	0x0395EB90 TBZ X0, 0x0, 0x395ECC0
	0x0395EB94 LDR X8, [X29]
	0x0395EB98 LDR X1, [X21]
	0x0395EB9C LDRH W9, [X8 + 0x12E]
	0x0395EBA0 CBZ X9, 0x395EBC4
	0x0395EBA4 LDR X10, [X8 + 0xB0]
	0x0395EBA8 ADD X10, X10, 0x8
	0x0395EBAC LDUR X11, [X10 - 0x8]
	0x0395EBB0 CMP X11, X1
	0x0395EBB4 B.EQ 0x395EBD4
	0x0395EBB8 SUBS X9, X9, 0x1
	0x0395EBBC ADD X10, X10, 0x10
	0x0395EBC0 B.NE 0x395EBAC
	0x0395EBC4 MOV X0, X29
	0x0395EBC8 MOV W2, W31
	0x0395EBCC BL 0x1C5C788
	0x0395EBD0 B 0x395EBE0
	0x0395EBD4 LDRSW X9, [X10]
	0x0395EBD8 ADD X8, X8, X9, 0x4, LSL
	0x0395EBDC ADD X0, X8, 0x138
	0x0395EBE0 LDP X8, X1, [X0]
	0x0395EBE4 MOV X0, X29
	0x0395EBE8 BLR X8
	0x0395EBEC LDR X8, [X27]
	0x0395EBF0 LDR X1, [X19]
	0x0395EBF4 MOV W20, W0
	0x0395EBF8 LDRH W9, [X8 + 0x12E]
	0x0395EBFC CBZ X9, 0x395EC20
	0x0395EC00 LDR X10, [X8 + 0xB0]
	0x0395EC04 ADD X10, X10, 0x8
	0x0395EC08 LDUR X11, [X10 - 0x8]
	0x0395EC0C CMP X11, X1
	0x0395EC10 B.EQ 0x395EC30
	0x0395EC14 SUBS X9, X9, 0x1
	0x0395EC18 ADD X10, X10, 0x10
	0x0395EC1C B.NE 0x395EC08
	0x0395EC20 MOV X0, X27
	0x0395EC24 MOV W2, W31
	0x0395EC28 BL 0x1C5C788
	0x0395EC2C B 0x395EC3C
	0x0395EC30 LDRSW X9, [X10]
	0x0395EC34 ADD X8, X8, X9, 0x4, LSL
	0x0395EC38 ADD X0, X8, 0x138
	0x0395EC3C LDP X8, X2, [X0]
	0x0395EC40 MOV X0, X27
	0x0395EC44 MOV W1, W20
	0x0395EC48 BLR X8
	0x0395EC4C MOV X1, X0
	0x0395EC50 LDR W10, [X23 + 0x1C]
	0x0395EC54 LDR X8, [X23 + 0x10]
	0x0395EC58 LDR X9, [X26]
	0x0395EC5C ADD W10, W10, 0x1
	0x0395EC60 STR W10, [X23 + 0x1C]
	0x0395EC64 CBZ X8, 0x395EDA8
	0x0395EC68 LDRSW X10, [X23 + 0x18]
	0x0395EC6C LDR W11, [X8 + 0x18]
	0x0395EC70 CMP W10, W11
	0x0395EC74 B.CS 0x395EC8C
	0x0395EC78 ADD W9, W10, 0x1
	0x0395EC7C ADD X8, X8, X10, 0x3, LSL
	0x0395EC80 STR W9, [X23 + 0x18]
	0x0395EC84 STR X1, [X8 + 0x20]
	0x0395EC88 B 0x395ECA0
	0x0395EC8C LDR X8, [X9 + 0x20]
	0x0395EC90 LDR X8, [X8 + 0xC0]
	0x0395EC94 LDR X2, [X8 + 0x70]
	0x0395EC98 MOV X0, X23
	0x0395EC9C BL 0x301BF90
	0x0395ECA0 CBZ X25, 0x395EDB0
	0x0395ECA4 LDR W8, [X23 + 0x18]
	0x0395ECA8 LDR X3, [X24]
	0x0395ECAC SUB W2, W8, 0x1
	0x0395ECB0 MOV X0, X25
	0x0395ECB4 MOV W1, W20
	0x0395ECB8 BL 0x2A0A344
	0x0395ECBC B 0x395EB38
	0x0395ECC0 STR X31, [X31 + 0x30]
	0x0395ECC4 MOVZ W20, 0x9
	0x0395ECC8 CBZ X29, 0x395ED2C
	0x0395ECCC LDR X8, [X29]
	0x0395ECD0 ADRP X10, 0x795000
	0x0395ECD4 LDRH W9, [X8 + 0x12E]
	0x0395ECD8 LDR X10, [X10 + 0xE00]
	0x0395ECDC LDR X1, [X10]
	0x0395ECE0 CBZ X9, 0x395ED04
	0x0395ECE4 LDR X10, [X8 + 0xB0]
	0x0395ECE8 ADD X10, X10, 0x8
	0x0395ECEC LDUR X11, [X10 - 0x8]
	0x0395ECF0 CMP X11, X1
	0x0395ECF4 B.EQ 0x395ED14
	0x0395ECF8 SUBS X9, X9, 0x1
	0x0395ECFC ADD X10, X10, 0x10
	0x0395ED00 B.NE 0x395ECEC
	0x0395ED04 MOV X0, X29
	0x0395ED08 MOV W2, W31
	0x0395ED0C BL 0x1C5C788
	0x0395ED10 B 0x395ED20
	0x0395ED14 LDRSW X9, [X10]
	0x0395ED18 ADD X8, X8, X9, 0x4, LSL
	0x0395ED1C ADD X0, X8, 0x138
	0x0395ED20 LDP X8, X1, [X0]
	0x0395ED24 MOV X0, X29
	0x0395ED28 BLR X8
	0x0395ED2C LDR X0, [X31 + 0x30]
	0x0395ED30 CBNZ X0, 0x395EFF0
	0x0395ED34 CMP W20, 0x9
	0x0395ED38 B.EQ 0x395ED40
	0x0395ED3C CBNZ W20, 0x395EE0C
	0x0395ED40 LDR X0, [X31 + 0x38]
	0x0395ED44 CBZ X0, 0x395EFF4
	0x0395ED48 ADRP X9, 0x7EF000
	0x0395ED4C LDR W10, [X0 + 0x1C]
	0x0395ED50 LDR X8, [X0 + 0x10]
	0x0395ED54 LDR X9, [X9 + 0xE10]
	0x0395ED58 LDR X20, [X31 + 0x28]
	0x0395ED5C ADD W10, W10, 0x1
	0x0395ED60 LDR X9, [X9]
	0x0395ED64 STR W10, [X0 + 0x1C]
	0x0395ED68 CBZ X8, 0x395EFF8
	0x0395ED6C LDRSW X10, [X0 + 0x18]
	0x0395ED70 LDR W11, [X8 + 0x18]
	0x0395ED74 CMP W10, W11
	0x0395ED78 B.CS 0x395ED90
	0x0395ED7C ADD W9, W10, 0x1
	0x0395ED80 ADD X8, X8, X10, 0x3, LSL
	0x0395ED84 STR W9, [X0 + 0x18]
	0x0395ED88 STR X28, [X8 + 0x20]
	0x0395ED8C B 0x395E91C
	0x0395ED90 LDR X8, [X9 + 0x20]
	0x0395ED94 LDR X8, [X8 + 0xC0]
	0x0395ED98 LDR X2, [X8 + 0x70]
	0x0395ED9C MOV X1, X28
	0x0395EDA0 BL 0x301BF90
	0x0395EDA4 B 0x395E91C
	0x0395EDA8 BL 0x1C16F20
	0x0395EDAC B 0x395F01C
	0x0395EDB0 BL 0x1C16F20
	0x0395EDB4 B 0x395F01C
	0x0395EDB8 BL 0x1C16F20
	0x0395EDBC B 0x395F01C
	0x0395EDC0 B 0x395EDD8
	0x0395EDC4 B 0x395EDD8
	0x0395EDC8 B 0x395EDD8
	0x0395EDCC B 0x395EDD8
	0x0395EDD0 B 0x395EDD8
	0x0395EDD4 B 0x395EDD8
	0x0395EDD8 CMP W1, 0x1
	0x0395EDDC B.NE 0x395EF58
	0x0395EDE0 BL 0x3EB1AD0
	0x0395EDE4 LDR X8, [X0]
	0x0395EDE8 STR X8, [X31 + 0x30]
	0x0395EDEC BL 0x3EB1AE0
	0x0395EDF0 MOV W20, W31
	0x0395EDF4 CBNZ X29, 0x395ECCC
	0x0395EDF8 B 0x395ED2C
	0x0395EDFC LDR X21, [X31 + 0x38]
	0x0395EE00 MOV X19, X31
	0x0395EE04 MOVZ W20, 0xA
	0x0395EE08 B 0x395EE14
	0x0395EE0C LDR X21, [X31 + 0x38]
	0x0395EE10 MOV X19, X31
	0x0395EE14 LDR X8, [X31 + 0x28]
	0x0395EE18 CBZ X8, 0x395EE84
	0x0395EE1C ADRP X10, 0x795000
	0x0395EE20 LDR X8, [X8]
	0x0395EE24 LDR X10, [X10 + 0xE00]
	0x0395EE28 LDRH W9, [X8 + 0x12E]
	0x0395EE2C LDR X1, [X10]
	0x0395EE30 CBZ X9, 0x395EE54
	0x0395EE34 LDR X10, [X8 + 0xB0]
	0x0395EE38 ADD X10, X10, 0x8
	0x0395EE3C LDUR X11, [X10 - 0x8]
	0x0395EE40 CMP X11, X1
	0x0395EE44 B.EQ 0x395EE68
	0x0395EE48 SUBS X9, X9, 0x1
	0x0395EE4C ADD X10, X10, 0x10
	0x0395EE50 B.NE 0x395EE3C
	0x0395EE54 LDR X22, [X31 + 0x28]
	0x0395EE58 MOV W2, W31
	0x0395EE5C MOV X0, X22
	0x0395EE60 BL 0x1C5C788
	0x0395EE64 B 0x395EE78
	0x0395EE68 LDRSW X9, [X10]
	0x0395EE6C LDR X22, [X31 + 0x28]
	0x0395EE70 ADD X8, X8, X9, 0x4, LSL
	0x0395EE74 ADD X0, X8, 0x138
	0x0395EE78 LDP X8, X1, [X0]
	0x0395EE7C MOV X0, X22
	0x0395EE80 BLR X8
	0x0395EE84 CBNZ X19, 0x395F014
	0x0395EE88 LDR X19, [X31 + 0x18]
	0x0395EE8C CMP W20, 0xA
	0x0395EE90 B.EQ 0x395EE98
	0x0395EE94 CBNZ W20, 0x395EF34
	0x0395EE98 CBZ X23, 0x395F00C
	0x0395EE9C LDR W8, [X23 + 0x18]
	0x0395EEA0 CMP W8, 0x0
	0x0395EEA4 B.LE 0x395EF34
	0x0395EEA8 ADRP X8, 0x79C000
	0x0395EEAC LDR X8, [X8 + 0x7A0]
	0x0395EEB0 LDR W1, [X31 + 0x14]
	0x0395EEB4 LDR X0, [X8]
	0x0395EEB8 BL 0x1C16D6C
	0x0395EEBC LDP X3, X2, [X31]
	0x0395EEC0 MOV X5, X0
	0x0395EEC4 MOV X0, X23
	0x0395EEC8 MOV X1, X21
	0x0395EECC MOV X4, X25
	0x0395EED0 BL 0x395F13C
	0x0395EED4 CBZ X19, 0x395F00C
	0x0395EED8 ADRP X9, 0x7F1000
	0x0395EEDC LDR X9, [X9 + 0x7F0]
	0x0395EEE0 LDR W10, [X19 + 0x1C]
	0x0395EEE4 LDR X8, [X19 + 0x10]
	0x0395EEE8 LDR X9, [X9]
	0x0395EEEC ADD W10, W10, 0x1
	0x0395EEF0 STR W10, [X19 + 0x1C]
	0x0395EEF4 CBZ X8, 0x395F00C
	0x0395EEF8 LDRSW X10, [X19 + 0x18]
	0x0395EEFC LDR W11, [X8 + 0x18]
	0x0395EF00 MOV X1, X0
	0x0395EF04 CMP W10, W11
	0x0395EF08 B.CS 0x395EF20
	0x0395EF0C ADD W9, W10, 0x1
	0x0395EF10 ADD X8, X8, X10, 0x3, LSL
	0x0395EF14 STR W9, [X19 + 0x18]
	0x0395EF18 STR X1, [X8 + 0x20]
	0x0395EF1C B 0x395EF34
	0x0395EF20 LDR X8, [X9 + 0x20]
	0x0395EF24 MOV X0, X19
	0x0395EF28 LDR X8, [X8 + 0xC0]
	0x0395EF2C LDR X2, [X8 + 0x70]
	0x0395EF30 BL 0x301BF90
	0x0395EF34 MOV X0, X19
	0x0395EF38 LDP X20, X19, [X31 + 0x90]
	0x0395EF3C LDP X22, X21, [X31 + 0x80]
	0x0395EF40 LDP X24, X23, [X31 + 0x70]
	0x0395EF44 LDP X26, X25, [X31 + 0x60]
	0x0395EF48 LDP X28, X27, [X31 + 0x50]
	0x0395EF4C LDP X29, X30, [X31 + 0x40]
	0x0395EF50 ADD X31, X31, 0xA0
	0x0395EF54 RET
	0x0395EF58 MOV X20, X1
	0x0395EF5C MOV X19, X0
	0x0395EF60 STR X31, [X31 + 0x30]
	0x0395EF64 CBZ X29, 0x395EFC8
	0x0395EF68 LDR X8, [X29]
	0x0395EF6C ADRP X10, 0x795000
	0x0395EF70 LDRH W9, [X8 + 0x12E]
	0x0395EF74 LDR X10, [X10 + 0xE00]
	0x0395EF78 LDR X1, [X10]
	0x0395EF7C CBZ X9, 0x395EFA0
	0x0395EF80 LDR X10, [X8 + 0xB0]
	0x0395EF84 ADD X10, X10, 0x8
	0x0395EF88 LDUR X11, [X10 - 0x8]
	0x0395EF8C CMP X11, X1
	0x0395EF90 B.EQ 0x395EFB0
	0x0395EF94 SUBS X9, X9, 0x1
	0x0395EF98 ADD X10, X10, 0x10
	0x0395EF9C B.NE 0x395EF88
	0x0395EFA0 MOV X0, X29
	0x0395EFA4 MOV W2, W31
	0x0395EFA8 BL 0x1C5C788
	0x0395EFAC B 0x395EFBC
	0x0395EFB0 LDRSW X9, [X10]
	0x0395EFB4 ADD X8, X8, X9, 0x4, LSL
	0x0395EFB8 ADD X0, X8, 0x138
	0x0395EFBC LDP X8, X1, [X0]
	0x0395EFC0 MOV X0, X29
	0x0395EFC4 BLR X8
	0x0395EFC8 LDP X8, X21, [X31 + 0x30]
	0x0395EFCC MOV X0, X19
	0x0395EFD0 MOV X1, X20
	0x0395EFD4 CBZ X8, 0x395F08C
	0x0395EFD8 LDR X0, [X31 + 0x30]
	0x0395EFDC BL 0x1C16F18
	0x0395EFE0 BL 0x1C16F20
	0x0395EFE4 BL 0x1C16F20
	0x0395EFE8 BL 0x1C16F20
	0x0395EFEC BL 0x1C16F20
	0x0395EFF0 BL 0x1C16F18
	0x0395EFF4 BL 0x1C16F20
	0x0395EFF8 BL 0x1C16F20
	0x0395EFFC BL 0x1C16F20
	0x0395F000 BL 0x1C16F20
	0x0395F004 BL 0x1C16F20
	0x0395F008 BL 0x1C16F20
	0x0395F00C BL 0x1C16F20
	0x0395F010 BL 0x1C16F20
	0x0395F014 MOV X0, X19
	0x0395F018 BL 0x1C16F18
	0x0395F01C MOV X20, X1
	0x0395F020 MOV X19, X0
	0x0395F024 CBNZ X29, 0x395EF68
	0x0395F028 B 0x395EFC8
	0x0395F02C B 0x395F088
	0x0395F030 B 0x395F088
	0x0395F034 MOV X21, X20
	0x0395F038 B 0x395F08C
	0x0395F03C B 0x395F088
	0x0395F040 B 0x395F088
	0x0395F044 B 0x395F088
	0x0395F048 B 0x395F088
	0x0395F04C B 0x395F088
	0x0395F050 B 0x395F088
	0x0395F054 B 0x395F088
	0x0395F058 B 0x395F088
	0x0395F05C B 0x395F088
	0x0395F060 B 0x395F088
	0x0395F064 B 0x395F088
	0x0395F068 B 0x395F088
	0x0395F06C B 0x395F088
	0x0395F070 B 0x395F088
	0x0395F074 B 0x395F088
	0x0395F078 B 0x395F088
	0x0395F07C B 0x395F088
	0x0395F080 B 0x395F088
	0x0395F084 B 0x395F088
	0x0395F088 LDR X21, [X31 + 0x38]
	0x0395F08C CMP W1, 0x1
	0x0395F090 B.NE 0x395F0A8
	0x0395F094 BL 0x3EB1AD0
	0x0395F098 LDR X19, [X0]
	0x0395F09C BL 0x3EB1AE0
	0x0395F0A0 MOV W20, W31
	0x0395F0A4 B 0x395EE14
	0x0395F0A8 MOV X20, X0
	0x0395F0AC MOV X19, X31
	0x0395F0B0 B 0x395F0B8
	0x0395F0B4 MOV X20, X0
	0x0395F0B8 LDR X8, [X31 + 0x28]
	0x0395F0BC CBZ X8, 0x395F124
	0x0395F0C0 LDR X8, [X31 + 0x28]
	0x0395F0C4 ADRP X10, 0x794000
	0x0395F0C8 LDR X8, [X8]
	0x0395F0CC LDR X10, [X10 + 0xE00]
	0x0395F0D0 LDRH W9, [X8 + 0x12E]
	0x0395F0D4 LDR X1, [X10]
	0x0395F0D8 CBZ X9, 0x395F0FC
	0x0395F0DC LDR X10, [X8 + 0xB0]
	0x0395F0E0 ADD X10, X10, 0x8
	0x0395F0E4 LDUR X11, [X10 - 0x8]
	0x0395F0E8 CMP X11, X1
	0x0395F0EC B.EQ 0x395F10C
	0x0395F0F0 SUBS X9, X9, 0x1
	0x0395F0F4 ADD X10, X10, 0x10
	0x0395F0F8 B.NE 0x395F0E4
	0x0395F0FC LDR X0, [X31 + 0x28]
	0x0395F100 MOV W2, W31
	0x0395F104 BL 0x1C5C788
	0x0395F108 B 0x395F118
	0x0395F10C LDRSW X9, [X10]
	0x0395F110 ADD X8, X8, X9, 0x4, LSL
	0x0395F114 ADD X0, X8, 0x138
	0x0395F118 LDP X8, X1, [X0]
	0x0395F11C LDR X0, [X31 + 0x28]
	0x0395F120 BLR X8
	0x0395F124 CBNZ X19, 0x395F130
	0x0395F128 MOV X0, X20
	0x0395F12C BL 0x1D2C690
	0x0395F130 MOV X0, X19
	0x0395F134 BL 0x1C16F18
	0x0395F138 BL 0x1990590
	0x0395F13C SUB X31, X31, 0xF0
	0x0395F140 STP X29, X30, [X31 + 0x90]
	0x0395F144 STP X28, X27, [X31 + 0xA0]
	0x0395F148 STP X26, X25, [X31 + 0xB0]
	0x0395F14C STP X24, X23, [X31 + 0xC0]
	0x0395F150 STP X22, X21, [X31 + 0xD0]
	0x0395F154 STP X20, X19, [X31 + 0xE0]
	0x0395F158 STP X0, X5, [X31]
	0x0395F15C STR X1, [X31 + 0x20]
	0x0395F160 ADRP X21, 0xA82000
	0x0395F164 ADRP X20, 0x79E000
	0x0395F168 ADRP X19, 0x79E000
	0x0395F16C LDRB W8, [X21 + 0x9AB]
	0x0395F170 LDR X20, [X20 + 0x888]
	0x0395F174 LDR X19, [X19 + 0x890]
	0x0395F178 MOV X26, X4
	0x0395F17C MOV X24, X3
	0x0395F180 MOV X25, X2
	0x0395F184 TBNZ X8, 0x0, 0x395F25C
	0x0395F188 ADRP X0, 0x79E000
	0x0395F18C LDR X0, [X0 + 0x858]
	0x0395F190 BL 0x1C16CF4
	0x0395F194 ADRP X0, 0x7F0000
	0x0395F198 LDR X0, [X0 + 0x880]
	0x0395F19C BL 0x1C16CF4
	0x0395F1A0 ADRP X0, 0x79E000
	0x0395F1A4 LDR X0, [X0 + 0x870]
	0x0395F1A8 BL 0x1C16CF4
	0x0395F1AC ADRP X0, 0x79E000
	0x0395F1B0 LDR X0, [X0 + 0x890]
	0x0395F1B4 BL 0x1C16CF4
	0x0395F1B8 ADRP X0, 0x7EF000
	0x0395F1BC LDR X0, [X0 + 0xD78]
	0x0395F1C0 BL 0x1C16CF4
	0x0395F1C4 ADRP X0, 0x7EE000
	0x0395F1C8 LDR X0, [X0 + 0xC80]
	0x0395F1CC BL 0x1C16CF4
	0x0395F1D0 ADRP X0, 0x79E000
	0x0395F1D4 LDR X0, [X0 + 0x888]
	0x0395F1D8 BL 0x1C16CF4
	0x0395F1DC ADRP X0, 0x7F0000
	0x0395F1E0 LDR X0, [X0 + 0xF8]
	0x0395F1E4 BL 0x1C16CF4
	0x0395F1E8 ADRP X0, 0x7F0000
	0x0395F1EC LDR X0, [X0 + 0x888]
	0x0395F1F0 BL 0x1C16CF4
	0x0395F1F4 ADRP X0, 0x7F0000
	0x0395F1F8 LDR X0, [X0 + 0x890]
	0x0395F1FC BL 0x1C16CF4
	0x0395F200 ADRP X0, 0x7F0000
	0x0395F204 LDR X0, [X0 + 0x100]
	0x0395F208 BL 0x1C16CF4
	0x0395F20C ADRP X0, 0x7F0000
	0x0395F210 LDR X0, [X0 + 0x108]
	0x0395F214 BL 0x1C16CF4
	0x0395F218 ADRP X0, 0x7F0000
	0x0395F21C LDR X0, [X0 + 0x898]
	0x0395F220 BL 0x1C16CF4
	0x0395F224 ADRP X0, 0x7EB000
	0x0395F228 LDR X0, [X0 + 0x360]
	0x0395F22C BL 0x1C16CF4
	0x0395F230 ADRP X0, 0x7EB000
	0x0395F234 LDR X0, [X0 + 0x3D0]
	0x0395F238 BL 0x1C16CF4
	0x0395F23C ADRP X0, 0x7F0000
	0x0395F240 LDR X0, [X0 + 0x110]
	0x0395F244 BL 0x1C16CF4
	0x0395F248 ADRP X0, 0x7EF000
	0x0395F24C LDR X0, [X0 + 0x528]
	0x0395F250 BL 0x1C16CF4
	0x0395F254 MOVZ W8, 0x1
	0x0395F258 STRB W8, [X21 + 0x9AB]
	0x0395F25C LDR X0, [X20]
	0x0395F260 MOVI V0.2D, 0x0
	0x0395F264 STP X31, X31, [X31 + 0x70]
	0x0395F268 STR X31, [X31 + 0x80]
	0x0395F26C STP V0, V0, [X31 + 0x50]
	0x0395F270 STR W31, [X31 + 0x4C]
	0x0395F274 BL 0x1C16F10
	0x0395F278 LDR X1, [X19]
	0x0395F27C STR X0, [X31 + 0x10]
	0x0395F280 BL 0x2A09A9C
	0x0395F284 LDR X0, [X20]
	0x0395F288 BL 0x1C16F10
	0x0395F28C LDR X1, [X19]
	0x0395F290 STR X0, [X31 + 0x18]
	0x0395F294 BL 0x2A09A9C
	0x0395F298 LDR X0, [X31 + 0x20]
	0x0395F29C CBZ X0, 0x395F528
	0x0395F2A0 ADRP X8, 0x7F0000
	0x0395F2A4 LDR X8, [X8 + 0x110]
	0x0395F2A8 ADRP X21, 0x7F0000
	0x0395F2AC ADRP X20, 0x7EE000
	0x0395F2B0 ADRP X28, 0x79E000
	0x0395F2B4 LDR X21, [X21 + 0x100]
	0x0395F2B8 LDR X20, [X20 + 0xC80]
	0x0395F2BC LDR X28, [X28 + 0x870]
	0x0395F2C0 LDR X1, [X8]
	0x0395F2C4 ADD X8, X31, 0x28
	0x0395F2C8 BL 0x301CB58
	0x0395F2CC LDUR V0, [X31 + 0x28]
	0x0395F2D0 LDR X8, [X31 + 0x38]
	0x0395F2D4 STR V0, [X31 + 0x7]
	0x0395F2D8 STR X8, [X31 + 0x80]
	0x0395F2DC LDR X1, [X21]
	0x0395F2E0 ADD X0, X31, 0x70
	0x0395F2E4 BL 0x2BC4350
	0x0395F2E8 TBZ X0, 0x0, 0x395F370
	0x0395F2EC LDR X27, [X31 + 0x80]
	0x0395F2F0 CBZ X27, 0x395F518
	0x0395F2F4 LDR X23, [X27 + 0x10]
	0x0395F2F8 CBZ X23, 0x395F51C
	0x0395F2FC LDR X8, [X23 + 0x18]
	0x0395F300 CMP W8, 0x1
	0x0395F304 B.LT 0x395F360
	0x0395F308 AND X8, X8, 0x0
	0x0395F30C MOV X19, X31
	0x0395F310 SUB X29, X8, 0x1
	0x0395F314 LDR W8, [X23 + 0x18]
	0x0395F318 CMP X19, X8
	0x0395F31C B.CS 0x395F4F8
	0x0395F320 CBZ X26, 0x395F4F4
	0x0395F324 ADD X22, X23, X19, 0x2, LSL
	0x0395F328 LDR W1, [X22 + 0x20]
	0x0395F32C LDR X2, [X20]
	0x0395F330 MOV X0, X26
	0x0395F334 BL 0x2A0A2A8
	0x0395F338 LDR W8, [X23 + 0x18]
	0x0395F33C CMP X19, X8
	0x0395F340 B.CS 0x395F4FC
	0x0395F344 CMP X29, X19
	0x0395F348 STR W0, [X22 + 0x20]
	0x0395F34C B.EQ 0x395F360
	0x0395F350 LDR X23, [X27 + 0x10]
	0x0395F354 ADD X19, X19, 0x1
	0x0395F358 CBNZ X23, 0x395F314
	0x0395F35C B 0x395F50C
	0x0395F360 MOV X0, X27
	0x0395F364 MOV X1, X31
	0x0395F368 BL 0x38FFC64
	0x0395F36C B 0x395F2DC
	0x0395F370 ADRP X8, 0x7F0000
	0x0395F374 LDR X8, [X8 + 0xF8]
	0x0395F378 ADD X0, X31, 0x70
	0x0395F37C LDR X1, [X8]
	0x0395F380 BL 0x2BC434C
	0x0395F384 ADRP X21, 0x7F0000
	0x0395F388 LDP X20, X19, [X31 + 0x10]
	0x0395F38C LDR X21, [X21 + 0x890]
	0x0395F390 CBZ X26, 0x395F528
	0x0395F394 ADRP X8, 0x7F0000
	0x0395F398 LDR X8, [X8 + 0x880]
	0x0395F39C MOV X0, X26
	0x0395F3A0 LDR X1, [X8]
	0x0395F3A4 ADD X8, X31, 0x28
	0x0395F3A8 BL 0x2A0A71C
	0x0395F3AC LDUR V0, [X31 + 0x28]
	0x0395F3B0 LDUR V1, [X31 + 0x38]
	0x0395F3B4 STP V0, V1, [X31 + 0x50]
	0x0395F3B8 LDR X1, [X21]
	0x0395F3BC ADD X0, X31, 0x50
	0x0395F3C0 BL 0x2BF39B0
	0x0395F3C4 TBZ X0, 0x0, 0x395F448
	0x0395F3C8 CBZ X25, 0x395F510
	0x0395F3CC LDP W27, W26, [X31 + 0x60]
	0x0395F3D0 LDR X3, [X28]
	0x0395F3D4 ADD X2, X31, 0x4C
	0x0395F3D8 MOV X0, X25
	0x0395F3DC MOV W1, W27
	0x0395F3E0 BL 0x2A0BC68
	0x0395F3E4 TBZ X0, 0x0, 0x395F408
	0x0395F3E8 CBZ X20, 0x395F520
	0x0395F3EC ADRP X8, 0x79E000
	0x0395F3F0 LDR W2, [X31 + 0x4C]
	0x0395F3F4 LDR X8, [X8 + 0x858]
	0x0395F3F8 LDR X3, [X8]
	0x0395F3FC MOV X0, X20
	0x0395F400 MOV W1, W26
	0x0395F404 BL 0x2A0A344
	0x0395F408 CBZ X24, 0x395F514
	0x0395F40C LDR X3, [X28]
	0x0395F410 ADD X2, X31, 0x4C
	0x0395F414 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0xA84000
	015 Move W8, [X20+2474]
	016 Move X27, X7
	017 Move X25, X6
	018 Move X24, X5
	019 Move W26, W1
	020 Move X19, X0
	021 Move [X31+32], X4
	022 Move [X31+64], X3
	023 Move [X31+72], X2
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X0, 0x7F1000
	029 Move X0, [X0+1376]
	030 Call 0x1C17CF4
	031 Move X0, 0x796000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x7F1000
	035 Move X0, [X0+2008]
	036 Call 0x1C17CF4
	037 Move X0, 0x7F2000
	038 Move X0, [X0+2112]
	039 Call 0x1C17CF4
	040 Move X0, 0x7F1000
	041 Move X0, [X0+2016]
	042 Call 0x1C17CF4
	043 Move X0, 0x7F2000
	044 Move X0, [X0+2120]
	045 Call 0x1C17CF4
	046 Move X0, 0x796000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0x79D000
	050 Move X0, [X0+2672]
	051 Call 0x1C17CF4
	052 Move X0, 0x7F0000
	053 Move X0, [X0+3600]
	054 Call 0x1C17CF4
	055 Move X0, 0x7F2000
	056 Move X0, [X0+448]
	057 Call 0x1C17CF4
	058 Move X0, 0x7F2000
	059 Move X0, [X0+2128]
	060 Call 0x1C17CF4
	061 Move X0, 0x7F2000
	062 Move X0, [X0+2136]
	063 Call 0x1C17CF4
	064 Move X0, 0x7F0000
	065 Move X0, [X0+3904]
	066 Call 0x1C17CF4
	067 Move X0, 0x796000
	068 Move X0, [X0+1432]
	069 Call 0x1C17CF4
	070 Move X0, 0x7F1000
	071 Move X0, [X0+1056]
	072 Call 0x1C17CF4
	073 Move X0, 0x7F1000
	074 Move X0, [X0+3704]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2474], W8
	078 Compare X19, 0
	079 JumpIfEqual {778}
	080 Move X10, 0x7F1000
	081 Move X8, [X19]
	082 Move X10, [X10+2008]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X10]
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X19
	094 Move W2, W31
	095 Call 0x1C5D788
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Add X8, X8, X9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X0, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move [X31+56], X0
	104 Compare X0, 0
	105 JumpIfEqual {779}
	106 Move X8, [X31+192]
	107 Move X10, 0x796000
	108 Move [X31+88], X8
	109 Move X10, [X10+3608]
	110 Move [X31+16], X25
	111 Move [X31+24], X27
	112 Move [X31+8], X24
	113 Move X8, [X31+56]
	114 Move X1, [X10]
	115 Move X8, [X8]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, [X31+56]
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, [X31+56]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {674}
	139 Move X8, [X31+56]
	140 Move X10, 0x7F1000
	141 Move X8, [X8]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X10, [X10+2016]
	144 Move X1, [X10]
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move X0, [X31+56]
	154 Move W2, W31
	155 Call 0x1C5D788
	156 NotImplemented "Instruction LDRSW not yet implemented."
	157 Add X8, X8, X9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, [X31+56]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X21, X0
	164 Compare X0, 0
	165 JumpIfEqual {770}
	166 Move X0, X21
	167 Move X1, X31
	168 Call ProBuilderMesh.get_vertexCount, X0
	169 Move W20, W0
	170 Move X0, X21
	171 Move X1, X31
	172 Call Component.get_transform, X0
	173 Move X19, X0
	174 Move X0, X21
	175 Move X1, X31
	176 Move X2, X31
	177 Call ProBuilderMesh.GetVertices, X0, X1
	178 Move X24, [X21+40]
	179 Move X28, X0
	180 Move X0, X21
	181 Move X1, X31
	182 Call ProBuilderMesh.get_sharedVertices, X0
	183 Move [X31+40], X0
	184 Move X8, [X21+72]
	185 Move [X31+80], X8
	186 Move X0, X21
	187 Move X1, X31
	188 Call ProBuilderMesh.get_renderer, X0
	189 Compare X0, 0
	190 JumpIfEqual {771}
	191 Move X1, X31
	192 Call Renderer.get_sharedMaterials, X0
	193 Move X23, X0
	194 Compare X0, 0
	195 JumpIfEqual {769}
	196 Move W25, [X23+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X31+52], W20
	199 Compare X28, 0
	200 JumpIfEqual {777}
	201 Move W8, [X31+52]
	202 Move X22, X31
	203 Add X27, X28, 32
	204 Move W20, W8
	205 Move W8, [X28+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move X8, 0x7F1000
	208 Move X8, [X8+3704]
	209 Move X21, [X27]
	210 Move X0, [X8]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X0, X19
	216 Move X1, X21
	217 Move X2, X31
	218 Call TransformUtility.TransformVertex, X0, X1
	219 Move X8, 0x796000
	220 Move X8, [X8+1432]
	221 Move X21, X0
	222 Move X0, [X8]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, [X31+88]
	228 Move X1, X31
	229 Move X2, X31
	230 Call Object.op_Inequality, X0, X1
	231 Move X8, [X31+72]
	232 Move X29, [X8]
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {267}
	237 Move X8, 0x7F1000
	238 Move X8, [X8+3704]
	239 Move X0, [X8]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {244}
	243 Call 0x1C17DFC
	244 Move X0, [X31+88]
	245 Move X1, X21
	246 Move X2, X31
	247 Call TransformUtility.InverseTransformVertex, X0, X1
	248 Move X1, X0
	249 Compare X29, 0
	250 JumpIfEqual {732}
	251 Move X9, 0x7F2000
	252 Move W10, [X29+28]
	253 Move X8, [X29+16]
	254 Move X9, [X9+448]
	255 Add W10, W10, 1
	256 Move X9, [X9]
	257 Move [X29+28], W10
	258 Compare X8, 0
	259 JumpIfEqual {733}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W11, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W9, W10, 1
	264 Add X8, X8, X10
	265 Move [X29+24], W9
	266 Move [X8+32], X1
	267 Compare X29, 0
	268 JumpIfEqual {731}
	269 Move X9, 0x7F2000
	270 Move W10, [X29+28]
	271 Move X8, [X29+16]
	272 Move X9, [X9+448]
	273 Add W10, W10, 1
	274 Move X9, [X9]
	275 Move [X29+28], W10
	276 Compare X8, 0
	277 JumpIfEqual {734}
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Move W11, [X8+24]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Add W9, W10, 1
	282 Add X8, X8, X10
	283 Move [X29+24], W9
	284 Move [X8+32], X21
	285 Move X8, [X9+32]
	286 Move X8, [X8+192]
	287 Move X2, [X8+112]
	288 Move X0, X29
	289 Move X1, X21
	290 Call List`1<Object>.AddWithResize, X0, X1
	291 Move X8, [X9+32]
	292 Move X8, [X8+192]
	293 Move X2, [X8+112]
	294 Move X0, X29
	295 Call List`1<Object>.AddWithResize, X0, X1
	296 Add X22, X22, 1
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Compare X24, 0
	299 JumpIfEqual {772}
	300 Move X8, [X24+24]
	301 Move X27, [X31+24]
	302 Move X20, [X31+32]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X21, X31
	305 Subtract W19, W25, 1
	306 And X8, X8, 0
	307 Add X22, X24, 32
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X8, 0x7F1000
	310 Move X29, [X22]
	311 Move X8, [X8+1376]
	312 Move X0, [X8]
	313 Call 0x1C17F10
	314 Move X28, X0
	315 Move X1, X29
	316 Move X2, X31
	317 Call Face..ctor, X0, X1
	318 Compare X28, 0
	319 JumpIfEqual {721}
	320 Move X0, X28
	321 Move W1, W26
	322 Move X2, X31
	323 Call Face.ShiftIndexes, X0, X1
	324 Move W8, [X28+76]
	325 Compare W8, 0
	326 JumpIfNotEqual {356}
	327 Move W8, [X28+28]
	328 Compare W8, 0
	329 JumpIfNotEqual {356}
	330 Move W8, 1
	331 Move [X28+76], W8
	332 Move X0, [X20]
	333 Compare X0, 0
	334 JumpIfEqual {757}
	335 Move X9, 0x7F0000
	336 Move W10, [X0+28]
	337 Move X8, [X0+16]
	338 Move X9, [X9+3600]
	339 Add W10, W10, 1
	340 Move X9, [X9]
	341 Move [X0+28], W10
	342 Compare X8, 0
	343 JumpIfEqual {756}
	344 NotImplemented "Instruction LDRSW not yet implemented."
	345 Move W11, [X8+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Add W9, W10, 1
	348 Add X8, X8, X10
	349 Move [X0+24], W9
	350 Move [X8+32], X28
	351 Move X8, [X9+32]
	352 Move X8, [X8+192]
	353 Move X2, [X8+112]
	354 Move X1, X28
	355 Call List`1<Object>.AddWithResize, X0, X1
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Compare X29, 0
	358 JumpIfEqual {729}
	359 Move W0, [X29+72]
	360 Move W1, W31
	361 Move W2, W19
	362 Move X3, X31
	363 Call Math.Clamp, X0, X1, X2
	364 Move W8, [X23+24]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Add X8, X23, W0
	367 Move X29, [X8+32]
	368 Move X29, X31
	369 Move X0, [X27]
	370 Compare X0, 0
	371 JumpIfEqual {722}
	372 Move X8, 0x7F2000
	373 Move X8, [X8+2136]
	374 Move X2, [X8]
	375 Move X1, X29
	376 Call List`1<Object>.IndexOf, X0, X1
	377 Move TEMP, X0
	378 And TEMP, TEMP, -2147483648
	379 Compare TEMP, -2147483648
	380 JumpIfEqual {382}
	381 Move [X28+72], W0
	382 Move X8, 0x796000
	383 Move X8, [X8+1432]
	384 Move X0, [X8]
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {389}
	388 Call 0x1C17DFC
	389 Move X0, X29
	390 Move X1, X31
	391 Move X2, X31
	392 Call Object.op_Equality, X0, X1
	393 Move TEMP, X0
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfNotEqual {398}
	397 Move [X28+72], W31
	398 Move X0, [X27]
	399 Compare X0, 0
	400 JumpIfEqual {755}
	401 NotImplemented "Instruction LDRSW not yet implemented."
	402 Move X10, 0x79D000
	403 Move [X28+72], W8
	404 Move W11, [X0+28]
	405 Move X9, [X0+16]
	406 Move X10, [X10+2672]
	407 Add W11, W11, 1
	408 Move X10, [X10]
	409 Move [X0+28], W11
	410 Compare X9, 0
	411 JumpIfEqual {754}
	412 Move W11, [X9+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Add W10, W8, 1
	415 Add X8, X9, X8
	416 Move [X0+24], W10
	417 Move [X8+32], X29
	418 Move X8, [X10+32]
	419 Move X8, [X8+192]
	420 Move X2, [X8+112]
	421 Move X1, X29
	422 Call List`1<Object>.AddWithResize, X0, X1
	423 Move X8, [X31+64]
	424 Move X0, [X8]
	425 Compare X0, 0
	426 JumpIfEqual {720}
	427 Move X9, 0x7F0000
	428 Move W10, [X0+28]
	429 Move X8, [X0+16]
	430 Move X9, [X9+3600]
	431 Add W10, W10, 1
	432 Move X9, [X9]
	433 Move [X0+28], W10
	434 Compare X8, 0
	435 JumpIfEqual {723}
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Move W11, [X8+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Add W9, W10, 1
	440 Add X8, X8, X10
	441 Move [X0+24], W9
	442 Move [X8+32], X28
	443 Move X8, [X9+32]
	444 Move X8, [X8+192]
	445 Move X2, [X8+112]
	446 Move X1, X28
	447 Call List`1<Object>.AddWithResize, X0, X1
	448 Move W8, [X24+24]
	449 Add X21, X21, 1
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X19, [X31+40]
	452 Compare X19, 0
	453 JumpIfEqual {773}
	454 Move X8, [X19]
	455 Move X10, 0x7F2000
	456 Move X20, 0x796000
	457 Move X22, 0x7F1000
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 Move X10, [X10+2112]
	460 Move X24, [X31+8]
	461 Move X25, [X31+16]
	462 Move X1, [X10]
	463 Move X20, [X20+3608]
	464 Move X22, [X22+1056]
	465 Compare X9, 0
	466 JumpIfEqual {473}
	467 Move X10, [X8+176]
	468 Add X10, X10, 8
	469 NotImplemented "Instruction LDUR not yet implemented."
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Subtract X9, X9, 1
	472 Add X10, X10, 16
	473 Move X0, X19
	474 Move W2, W31
	475 Call 0x1C5D788
	476 NotImplemented "Instruction LDRSW not yet implemented."
	477 Add X8, X8, X9
	478 Add X0, X8, 312
	479 Move X8, [X0]
	480 Move X1, [X0+8]
	481 Move X0, X19
	482 NotImplemented "Instruction BLR not yet implemented."
	483 Move X29, X0
	484 Compare X0, 0
	485 JumpIfEqual {662}
	486 Move X8, [X29]
	487 Move X1, [X20]
	488 NotImplemented "Instruction LDRH not yet implemented."
	489 Compare X9, 0
	490 JumpIfEqual {497}
	491 Move X10, [X8+176]
	492 Add X10, X10, 8
	493 NotImplemented "Instruction LDUR not yet implemented."
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Subtract X9, X9, 1
	496 Add X10, X10, 16
	497 Move X0, X29
	498 Move W2, W31
	499 Call 0x1C5D788
	500 NotImplemented "Instruction LDRSW not yet implemented."
	501 Add X8, X8, X9
	502 Add X0, X8, 312
	503 Move X8, [X0]
	504 Move X1, [X0+8]
	505 Move X0, X29
	506 NotImplemented "Instruction BLR not yet implemented."
	507 Move TEMP, X0
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfNotEqual {571}
	511 Move X8, [X29]
	512 Move X10, 0x7F2000
	513 NotImplemented "Instruction LDRH not yet implemented."
	514 Move X10, [X10+2120]
	515 Move X1, [X10]
	516 Compare X9, 0
	517 JumpIfEqual {524}
	518 Move X10, [X8+176]
	519 Add X10, X10, 8
	520 NotImplemented "Instruction LDUR not yet implemented."
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Subtract X9, X9, 1
	523 Add X10, X10, 16
	524 Move X0, X29
	525 Move W2, W31
	526 Call 0x1C5D788
	527 NotImplemented "Instruction LDRSW not yet implemented."
	528 Add X8, X8, X9
	529 Add X0, X8, 312
	530 Move X8, [X0]
	531 Move X1, [X0+8]
	532 Move X0, X29
	533 NotImplemented "Instruction BLR not yet implemented."
	534 Move X21, X0
	535 Move X0, [X22]
	536 Call 0x1C17F10
	537 Move X19, X0
	538 Move X1, X21
	539 Move X2, X31
	540 Call SharedVertex..ctor, X0, X1
	541 Compare X19, 0
	542 JumpIfEqual {660}
	543 Move X0, X19
	544 Move W1, W26
	545 Move X2, X31
	546 Call SharedVertex.ShiftIndexes, X0, X1
	547 Move X0, [X24]
	548 Compare X0, 0
	549 JumpIfEqual {661}
	550 Move X9, 0x7F2000
	551 Move W10, [X0+28]
	552 Move X8, [X0+16]
	553 Move X9, [X9+2128]
	554 Add W10, W10, 1
	555 Move X9, [X9]
	556 Move [X0+28], W10
	557 Compare X8, 0
	558 JumpIfEqual {659}
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Move W11, [X8+24]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Add W9, W10, 1
	563 Add X8, X8, X10
	564 Move [X0+24], W9
	565 Move [X8+32], X19
	566 Move X8, [X9+32]
	567 Move X8, [X8+192]
	568 Move X2, [X8+112]
	569 Move X1, X19
	570 Call List`1<Object>.AddWithResize, X0, X1
	571 Move X19, X31
	572 Move W20, 18
	573 Compare X29, 0
	574 JumpIfEqual {598}
	575 Move X8, [X29]
	576 Move X10, 0x796000
	577 NotImplemented "Instruction LDRH not yet implemented."
	578 Move X10, [X10+3584]
	579 Move X1, [X10]
	580 Compare X9, 0
	581 JumpIfEqual {588}
	582 Move X10, [X8+176]
	583 Add X10, X10, 8
	584 NotImplemented "Instruction LDUR not yet implemented."
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Subtract X9, X9, 1
	587 Add X10, X10, 16
	588 Move X0, X29
	589 Move W2, W31
	590 Call 0x1C5D788
	591 NotImplemented "Instruction LDRSW not yet implemented."
	592 Add X8, X8, X9
	593 Add X0, X8, 312
	594 Move X8, [X0]
	595 Move X1, [X0+8]
	596 Move X0, X29
	597 NotImplemented "Instruction BLR not yet implemented."
	598 Compare X19, 0
	599 JumpIfNotEqual {774}
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Compare W20, 0
	602 JumpIfNotEqual {674}
	603 Move X9, [X31+80]
	604 Compare X9, 0
	605 JumpIfEqual {776}
	606 Move X8, [X9+24]
	607 NotImplemented "Instruction CMP not yet implemented."
	608 Move X20, X31
	609 And X8, X8, 0
	610 Add X22, X9, 32
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move X8, 0x7F1000
	613 Move X21, [X22]
	614 Move X8, [X8+1056]
	615 Move X0, [X8]
	616 Call 0x1C17F10
	617 Move X19, X0
	618 Move X1, X21
	619 Move X2, X31
	620 Call SharedVertex..ctor, X0, X1
	621 Compare X19, 0
	622 JumpIfEqual {727}
	623 Move X0, X19
	624 Move W1, W26
	625 Move X2, X31
	626 Call SharedVertex.ShiftIndexes, X0, X1
	627 Move X0, [X25]
	628 Compare X0, 0
	629 JumpIfEqual {726}
	630 Move X9, 0x7F1000
	631 Move W10, [X0+28]
	632 Move X8, [X0+16]
	633 Move X9, [X9+2128]
	634 Add W10, W10, 1
	635 Move X9, [X9]
	636 Move [X0+28], W10
	637 Compare X8, 0
	638 JumpIfEqual {725}
	639 NotImplemented "Instruction LDRSW not yet implemented."
	640 Move W11, [X8+24]
	641 NotImplemented "Instruction CMP not yet implemented."
	642 Add W9, W10, 1
	643 Add X8, X8, X10
	644 Move [X0+24], W9
	645 Move [X8+32], X19
	646 Move X8, [X9+32]
	647 Move X8, [X8+192]
	648 Move X2, [X8+112]
	649 Move X1, X19
	650 Call List`1<Object>.AddWithResize, X0, X1
	651 Move X8, [X31+80]
	652 Add X20, X20, 1
	653 Move W8, [X8+24]
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move W8, [X31+52]
	656 Move X10, 0x795000
	657 Move X10, [X10+3608]
	658 Add W26, W8, W26
	659 Call 0x1C17F20
	660 Call 0x1C17F20
	661 Call 0x1C17F20
	662 Call 0x1C17F20
	663 Move X25, [X31+16]
	664 Move X23, X1
	665 Move X20, X0
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X0, X20
	668 Call 0x3EB2AD0
	669 Move X19, [X0]
	670 Call 0x3EB2AE0
	671 Move W20, W31
	672 Compare X29, 0
	673 JumpIfNotEqual {575}
	674 Move X19, X31
	675 Move X8, [X31+56]
	676 Compare X8, 0
	677 JumpIfEqual {703}
	678 Move X8, [X8]
	679 Move X10, 0x795000
	680 NotImplemented "Instruction LDRH not yet implemented."
	681 Move X10, [X10+3584]
	682 Move X1, [X10]
	683 Compare X9, 0
	684 JumpIfEqual {691}
	685 Move X10, [X8+176]
	686 Add X10, X10, 8
	687 NotImplemented "Instruction LDUR not yet implemented."
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Subtract X9, X9, 1
	690 Add X10, X10, 16
	691 Move X20, [X31+56]
	692 Move W2, W31
	693 Move X0, X20
	694 Call 0x1C5D788
	695 NotImplemented "Instruction LDRSW not yet implemented."
	696 Move X20, [X31+56]
	697 Add X8, X8, X9
	698 Add X0, X8, 312
	699 Move X8, [X0]
	700 Move X1, [X0+8]
	701 Move X0, X20
	702 NotImplemented "Instruction BLR not yet implemented."
	703 Compare X19, 0
	704 JumpIfNotEqual {780}
	705 Move X20, [X31+176]
	706 Move X19, [X31+184]
	707 Move X22, [X31+160]
	708 Move X21, [X31+168]
	709 Move X24, [X31+144]
	710 Move X23, [X31+152]
	711 Move X26, [X31+128]
	712 Move X25, [X31+136]
	713 Move X28, [X31+112]
	714 Move X27, [X31+120]
	715 Move X29, [X31+96]
	716 Move X30, [X31+104]
	717 Add X31, X31, 192
	718 Return 
	719 Call 0x1C17F28
	720 Call 0x1C17F20
	721 Call 0x1C17F20
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Call 0x1C17F28
	725 Call 0x1C17F20
	726 Call 0x1C17F20
	727 Call 0x1C17F20
	728 Call 0x1C17F28
	729 Call 0x1C17F20
	730 Call 0x1C17F28
	731 Call 0x1C17F20
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Move X19, X31
	736 Compare X29, 0
	737 JumpIfEqual {765}
	738 Move X8, [X29]
	739 Move X10, 0x795000
	740 NotImplemented "Instruction LDRH not yet implemented."
	741 Move X10, [X10+3584]
	742 Move X1, [X10]
	743 Compare X9, 0
	744 JumpIfEqual {751}
	745 Move X10, [X8+176]
	746 Add X10, X10, 8
	747 NotImplemented "Instruction LDUR not yet implemented."
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Subtract X9, X9, 1
	750 Add X10, X10, 16
	751 Move X0, X29
	752 Move W2, W31
	753 Call 0x1C5D788
	754 Call 0x1C17F20
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F20
	758 NotImplemented "Instruction LDRSW not yet implemented."
	759 Add X8, X8, X9
	760 Add X0, X8, 312
	761 Move X8, [X0]
	762 Move X1, [X0+8]
	763 Move X0, X29
	764 NotImplemented "Instruction BLR not yet implemented."
	765 Compare X19, 0
	766 JumpIfEqual {788}
	767 Move X0, X19
	768 Call 0x1C17F18
	769 Call 0x1C17F20
	770 Call 0x1C17F20
	771 Call 0x1C17F20
	772 Call 0x1C17F20
	773 Call 0x1C17F20
	774 Move X0, X19
	775 Call 0x1C17F18
	776 Call 0x1C17F20
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F20
	780 Move X0, X19
	781 Call 0x1C17F18
	782 Move X23, X1
	783 Move X20, X0
	784 Compare X29, 0
	785 JumpIfNotEqual {738}
	786 Move X23, X1
	787 Move X20, X0
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Move X0, X20
	790 Call 0x3EB2AD0
	791 Move X19, [X0]
	792 Call 0x3EB2AE0
	793 Move X19, X31
	794 Move X20, X0
	795 Move X8, [X31+56]
	796 Compare X8, 0
	797 JumpIfEqual {822}
	798 Move X8, [X31+56]
	799 Move X10, 0x795000
	800 Move X8, [X8]
	801 NotImplemented "Instruction LDRH not yet implemented."
	802 Move X10, [X10+3584]
	803 Move X1, [X10]
	804 Compare X9, 0
	805 JumpIfEqual {812}
	806 Move X10, [X8+176]
	807 Add X10, X10, 8
	808 NotImplemented "Instruction LDUR not yet implemented."
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Subtract X9, X9, 1
	811 Add X10, X10, 16
	812 Move X0, [X31+56]
	813 Move W2, W31
	814 Call 0x1C5D788
	815 NotImplemented "Instruction LDRSW not yet implemented."
	816 Add X8, X8, X9
	817 Add X0, X8, 312
	818 Move X8, [X0]
	819 Move X1, [X0+8]
	820 Move X0, [X31+56]
	821 NotImplemented "Instruction BLR not yet implemented."
	822 Compare X19, 0
	823 JumpIfNotEqual {826}
	824 Move X0, X20
	825 Call 0x1D2D690
	826 Move X0, X19
	827 Call 0x1C17F18
	828 Call 0x1991590

Method: UnityEngine.ProBuilder.ProBuilderMesh CreateMeshFromSplit(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> sharedVertexLookup, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> sharedTextureLookup, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> remap, UnityEngine.Material[] materials)

Disassembly:
	0x0396013C BL 0x301B8E0
	0x03960140 ADRP X8, 0x7EF000
	0x03960144 LDR X8, [X8 + 0x9A0]
	0x03960148 LDR X0, [X8]
	0x0396014C BL 0x1C16F10
	0x03960150 ADRP X8, 0x7EF000
	0x03960154 LDR X8, [X8 + 0x988]
	0x03960158 MOV X25, X0
	0x0396015C LDR X1, [X8]
	0x03960160 BL 0x301B7C4
	0x03960164 ADRP X8, 0x7ED000
	0x03960168 LDR X8, [X8 + 0xDF0]
	0x0396016C LDR X0, [X8]
	0x03960170 BL 0x1C16F10
	0x03960174 ADRP X8, 0x7EE000
	0x03960178 LDR X8, [X8 + 0xA38]
	0x0396017C MOV X26, X0
	0x03960180 LDR X1, [X8]
	0x03960184 BL 0x301B7C4
	0x03960188 ADRP X21, 0x7EF000
	0x0396018C LDR X21, [X21 + 0x8B8]
	0x03960190 LDR X19, [X20 + 0x28]
	0x03960194 LDR X0, [X21]
	0x03960198 LDR W8, [X0 + 0xE0]
	0x0396019C CBNZ W8, 0x39601A8
	0x039601A0 BL 0x1C16DFC
	0x039601A4 LDR X0, [X21]
	0x039601A8 LDR X8, [X0 + 0xB8]
	0x039601AC LDR X20, [X8 + 0x20]
	0x039601B0 CBNZ X20, 0x3960218
	0x039601B4 LDR W8, [X0 + 0xE0]
	0x039601B8 CBZ W8, 0x39601C8
	0x039601BC ADRP X23, 0x7EF000
	0x039601C0 LDR X23, [X23 + 0x8B8]
	0x039601C4 B 0x39601D8
	0x039601C8 BL 0x1C16DFC
	0x039601CC ADRP X23, 0x7EF000
	0x039601D0 LDR X23, [X23 + 0x8B8]
	0x039601D4 LDR X0, [X23]
	0x039601D8 ADRP X9, 0x7EE000
	0x039601DC LDR X8, [X0 + 0xB8]
	0x039601E0 LDR X9, [X9 + 0x510]
	0x039601E4 LDR X21, [X8]
	0x039601E8 LDR X0, [X9]
	0x039601EC BL 0x1C16F10
	0x039601F0 ADRP X8, 0x7EF000
	0x039601F4 LDR X8, [X8 + 0x9A8]
	0x039601F8 MOV X1, X21
	0x039601FC MOV X3, X31
	0x03960200 MOV X20, X0
	0x03960204 LDR X2, [X8]
	0x03960208 BL 0x2D30128
	0x0396020C LDR X8, [X23]
	0x03960210 LDR X8, [X8 + 0xB8]
	0x03960214 STR X20, [X8 + 0x20]
	0x03960218 ADRP X8, 0x7EE000
	0x0396021C LDR X8, [X8 + 0x698]
	0x03960220 MOV X0, X19
	0x03960224 MOV X1, X20
	0x03960228 LDR X2, [X8]
	0x0396022C BL 0x21CEC3C
	0x03960230 ADRP X8, 0x794000
	0x03960234 LDR X8, [X8 + 0xE08]
	0x03960238 MOV X19, X0
	0x0396023C LDR X8, [X8]
	0x03960240 MOV X0, X8
	0x03960244 BL 0x1C16F10
	0x03960248 ADRP X8, 0x794000
	0x0396024C LDR X8, [X8 + 0xE00]
	0x03960250 MOV X1, X19
	0x03960254 STR X0, [X31 + 0x30]
	0x03960258 LDR X2, [X8]
	0x0396025C BL 0x2DA9FD8
	0x03960260 CBZ X27, 0x3960CAC
	0x03960264 ADRP X8, 0x7EF000
	0x03960268 LDR X8, [X8 + 0x8C8]
	0x0396026C MOV X0, X27
	0x03960270 LDR X1, [X8]
	0x03960274 ADD X8, X31, 0x80
	0x03960278 BL 0x2AA54BC
	0x0396027C LDP V0, V1, [X31 + 0x80]
	0x03960280 LDR X8, [X31 + 0xA0]
	0x03960284 MOVZ W19, 0x1
	0x03960288 STP V0, V1, [X31 + 0xE0]
	0x0396028C STR X8, [X31 + 0x100]
	0x03960290 LDR X1, [X24]
	0x03960294 ADD X0, X31, 0xE0
	0x03960298 BL 0x2C0A728
	0x0396029C TBZ X0, 0x0, 0x3960730
	0x039602A0 LDR X20, [X31 + 0xF8]
	0x039602A4 CBZ X20, 0x3960CBC
	0x039602A8 LDR X21, [X31 + 0xF0]
	0x039602AC CBZ X21, 0x3960CC0
	0x039602B0 LDR W23, [X20 + 0x18]
	0x039602B4 LDR X1, [X21 + 0x10]
	0x039602B8 MOV X0, X28
	0x039602BC MOV X2, X31
	0x039602C0 BL 0x39090D4
	0x039602C4 MOV V9.16B, V0.16B
	0x039602C8 MOV V10.16B, V1.16B
	0x039602CC MOV V8.16B, V2.16B
	0x039602D0 CMP W23, 0x1
	0x039602D4 B.EQ 0x3960354
	0x039602D8 CBZ X29, 0x39602F8
	0x039602DC ADRP X8, 0x7ED000
	0x039602E0 LDR X8, [X8 + 0xE28]
	0x039602E4 LDR X2, [X8]
	0x039602E8 MOV X0, X29
	0x039602EC MOV X1, X21
	0x039602F0 BL 0x2DBE4B0
	0x039602F4 TBZ X0, 0x0, 0x3960354
	0x039602F8 CMP W23, 0x2
	0x039602FC B.LT 0x3960290
	0x03960300 CMP W23, 0x2
	0x03960304 B.NE 0x396042C
	0x03960308 ADRP X8, 0x7EE000
	0x0396030C LDR X8, [X8 + 0xB00]
	0x03960310 LDR X2, [X8]
	0x03960314 MOV X0, X20
	0x03960318 MOV W1, W31
	0x0396031C BL 0x301BCCC
	0x03960320 ADRP X8, 0x7EE000
	0x03960324 LDR X8, [X8 + 0xB00]
	0x03960328 MOV X23, X0
	0x0396032C LDR X2, [X8]
	0x03960330 MOVZ W1, 0x1
	0x03960334 MOV X0, X20
	0x03960338 BL 0x301BCCC
	0x0396033C MOV X2, X0
	0x03960340 MOV X0, X21
	0x03960344 MOV X1, X23
	0x03960348 MOV X3, X28
	0x0396034C BL 0x3964000
	0x03960350 B 0x396043C
	0x03960354 ADD X3, X31, 0xD0
	0x03960358 MOV X0, X21
	0x0396035C MOV X1, X20
	0x03960360 MOV X2, X28
	0x03960364 BL 0x3963170
	0x03960368 TBZ X0, 0x0, 0x3960290
	0x0396036C LDR X20, [X31 + 0xD0]
	0x03960370 CBZ X20, 0x3960CD8
	0x03960374 LDR X8, [X20 + 0x10]
	0x03960378 CBZ X8, 0x3960CDC
	0x0396037C LDR X9, [X8 + 0x10]
	0x03960380 CBZ X9, 0x3960CD0
	0x03960384 LDR X0, [X8 + 0x18]
	0x03960388 LDR X1, [X9 + 0x10]
	0x0396038C MOV X2, X31
	0x03960390 BL 0x39090D4
	0x03960394 FMUL S0, S9, S0
	0x03960398 FMUL S1, S10, S1
	0x0396039C FADD S0, S0, S1
	0x039603A0 FMUL S1, S8, S2
	0x039603A4 FADD S0, S1, S0
	0x039603A8 FCMP S0, 0x0
	0x039603AC B.PL 0x39603C8
	0x039603B0 LDR X8, [X20 + 0x10]
	0x039603B4 CBZ X8, 0x3960CF4
	0x039603B8 LDR X0, [X8 + 0x10]
	0x039603BC CBZ X0, 0x3960CF8
	0x039603C0 MOV X1, X31
	0x039603C4 BL 0x3900E24
	0x039603C8 CBZ X25, 0x3960CE0
	0x039603CC ADRP X9, 0x7EF000
	0x039603D0 LDR W10, [X25 + 0x1C]
	0x039603D4 LDR X8, [X25 + 0x10]
	0x039603D8 LDR X9, [X9 + 0x978]
	0x039603DC ADD W10, W10, 0x1
	0x039603E0 LDR X9, [X9]
	0x039603E4 STR W10, [X25 + 0x1C]
	0x039603E8 CBZ X8, 0x3960CD4
	0x039603EC LDRSW X10, [X25 + 0x18]
	0x039603F0 LDR W11, [X8 + 0x18]
	0x039603F4 CMP W10, W11
	0x039603F8 B.CS 0x3960410
	0x039603FC ADD W9, W10, 0x1
	0x03960400 ADD X8, X8, X10, 0x3, LSL
	0x03960404 STR W9, [X25 + 0x18]
	0x03960408 STR X20, [X8 + 0x20]
	0x0396040C B 0x3960290
	0x03960410 LDR X8, [X9 + 0x20]
	0x03960414 LDR X8, [X8 + 0xC0]
	0x03960418 LDR X2, [X8 + 0x70]
	0x0396041C MOV X0, X25
	0x03960420 MOV X1, X20
	0x03960424 BL 0x301BF90
	0x03960428 B 0x3960290
	0x0396042C MOV X0, X21
	0x03960430 MOV X1, X20
	0x03960434 MOV X2, X28
	0x03960438 BL 0x396369C
	0x0396043C LDR W8, [X21 + 0x54]
	0x03960440 MOV X20, X0
	0x03960444 TBZ X8, 0x1F, 0x3960484
	0x03960448 LDR X8, [X31 + 0x30]
	0x0396044C CBZ X8, 0x3960D38
	0x03960450 ADRP X8, 0x794000
	0x03960454 LDR X8, [X8 + 0xDF8]
	0x03960458 LDR X2, [X8]
	0x0396045C LDR X0, [X31 + 0x30]
	0x03960460 MOV W1, W19
	0x03960464 BL 0x2DAA59C
	0x03960468 TBZ X0, 0x0, 0x3960474
	0x0396046C ADD W19, W19, 0x1
	0x03960470 B 0x3960450
	0x03960474 LDR X2, [X22]
	0x03960478 LDR X0, [X31 + 0x30]
	0x0396047C MOV W1, W19
	0x03960480 BL 0x2DAB03C
	0x03960484 CBZ X20, 0x3960C3C
	0x03960488 ADRP X8, 0x7EF000
	0x0396048C LDR X8, [X8 + 0x980]
	0x03960490 LDR X1, [X8]
	0x03960494 ADD X8, X31, 0x80
	0x03960498 MOV X0, X20
	0x0396049C BL 0x301CB58
	0x039604A0 LDR V0, [X31 + 0x8]
	0x039604A4 LDR X8, [X31 + 0x90]
	0x039604A8 ADD X23, X21, 0x1C
	0x039604AC STR V0, [X31 + 0xB]
	0x039604B0 STR X8, [X31 + 0xC0]
	0x039604B4 ADRP X8, 0x7EF000
	0x039604B8 LDR X8, [X8 + 0x918]
	0x039604BC LDR X1, [X8]
	0x039604C0 ADD X0, X31, 0xB0
	0x039604C4 BL 0x2BC4350
	0x039604C8 TBZ X0, 0x0, 0x3960618
	0x039604CC LDR X24, [X31 + 0xC0]
	0x039604D0 CBZ X24, 0x396068C
	0x039604D4 LDR X8, [X24 + 0x10]
	0x039604D8 CBZ X8, 0x3960694
	0x039604DC CBZ X26, 0x3960674
	0x039604E0 ADRP X9, 0x7ED000
	0x039604E4 LDR X1, [X8 + 0x10]
	0x039604E8 LDR W10, [X26 + 0x1C]
	0x039604EC LDR X8, [X26 + 0x10]
	0x039604F0 LDR X9, [X9 + 0xE10]
	0x039604F4 ADD W10, W10, 0x1
	0x039604F8 LDR X9, [X9]
	0x039604FC STR W10, [X26 + 0x1C]
	0x03960500 CBZ X8, 0x3960684
	0x03960504 LDRSW X10, [X26 + 0x18]
	0x03960508 LDR W11, [X8 + 0x18]
	0x0396050C CMP W10, W11
	0x03960510 B.CS 0x3960528
	0x03960514 ADD W9, W10, 0x1
	0x03960518 ADD X8, X8, X10, 0x3, LSL
	0x0396051C STR W9, [X26 + 0x18]
	0x03960520 STR X1, [X8 + 0x20]
	0x03960524 B 0x396053C
	0x03960528 LDR X8, [X9 + 0x20]
	0x0396052C LDR X8, [X8 + 0xC0]
	0x03960530 LDR X2, [X8 + 0x70]
	0x03960534 MOV X0, X26
	0x03960538 BL 0x301BF90
	0x0396053C LDR X8, [X24 + 0x10]
	0x03960540 CBZ X8, 0x3960664
	0x03960544 LDR X9, [X8 + 0x10]
	0x03960548 CBZ X9, 0x396069C
	0x0396054C LDR X0, [X8 + 0x18]
	0x03960550 LDR X1, [X9 + 0x10]
	0x03960554 MOV X2, X31
	0x03960558 BL 0x39090D4
	0x0396055C FMUL S0, S9, S0
	0x03960560 FMUL S1, S10, S1
	0x03960564 FADD S0, S0, S1
	0x03960568 FMUL S1, S8, S2
	0x0396056C FADD S0, S1, S0
	0x03960570 FCMP S0, 0x0
	0x03960574 B.PL 0x3960590
	0x03960578 LDR X8, [X24 + 0x10]
	0x0396057C CBZ X8, 0x39606B4
	0x03960580 LDR X0, [X8 + 0x10]
	0x03960584 CBZ X0, 0x39606BC
	0x03960588 MOV X1, X31
	0x0396058C BL 0x3900E24
	0x03960590 LDR X8, [X24 + 0x10]
	0x03960594 CBZ X8, 0x396067C
	0x03960598 LDR X29, [X8 + 0x10]
	0x0396059C CBZ X29, 0x39606AC
	0x039605A0 LDR W8, [X21 + 0x54]
	0x039605A4 MOVI V2.2D, 0x0
	0x039605A8 CMP W8, 0x0
	0x039605AC CSEL W8, W19, W8, LT
	0x039605B0 STR W8, [X29 + 0x54]
	0x039605B4 LDP V1, V0, [X23]
	0x039605B8 STP V2, V2, [X31 + 0x60]
	0x039605BC STP V1, V0, [X31 + 0x80]
	0x039605C0 STP V1, V0, [X31 + 0x40]
	0x039605C4 ADD X0, X31, 0x60
	0x039605C8 ADD X1, X31, 0x40
	0x039605CC MOV X2, X31
	0x039605D0 BL 0x38F69EC
	0x039605D4 LDP V1, V0, [X31 + 0x60]
	0x039605D8 STUR V0, [X29 + 0x2C]
	0x039605DC STUR V1, [X29 + 0x1C]
	0x039605E0 LDR X8, [X24 + 0x10]
	0x039605E4 CBZ X8, 0x396066C
	0x039605E8 ADRP X24, 0x7EF000
	0x039605EC LDR X8, [X8 + 0x10]
	0x039605F0 LDR X29, [X31 + 0x38]
	0x039605F4 LDR X24, [X24 + 0x920]
	0x039605F8 CBZ X8, 0x39606A4
	0x039605FC LDR W9, [X21 + 0x48]
	0x03960600 STR W9, [X8 + 0x48]
	0x03960604 LDR W9, [X21 + 0x18]
	0x03960608 STR W9, [X8 + 0x18]
	0x0396060C LDRB W9, [X21 + 0x4C]
	0x03960610 STRB W9, [X8 + 0x4C]
	0x03960614 B 0x39604B4
	0x03960618 MOV X21, X31
	0x0396061C MOVZ W23, 0x1C
	0x03960620 ADRP X8, 0x7EF000
	0x03960624 LDR X8, [X8 + 0x908]
	0x03960628 LDR X1, [X8]
	0x0396062C ADD X0, X31, 0xB0
	0x03960630 BL 0x2BC434C
	0x03960634 CBNZ X21, 0x3960D2C
	0x03960638 CMP W23, 0x1C
	0x0396063C B.EQ 0x3960644
	0x03960640 CBNZ W23, 0x3960C90
	0x03960644 CBZ X25, 0x3960D34
	0x03960648 ADRP X8, 0x7EF000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move [X31], X0
	015 Move [X31+8], X5
	016 Move [X31+32], X1
	017 Move X21, 0xA82000
	018 Move X20, 0x79E000
	019 Move X19, 0x79E000
	020 Move W8, [X21+2475]
	021 Move X20, [X20+2184]
	022 Move X19, [X19+2192]
	023 Move X26, X4
	024 Move X24, X3
	025 Move X25, X2
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {83}
	030 Move X0, 0x79E000
	031 Move X0, [X0+2136]
	032 Call 0x1C17CF4
	033 Move X0, 0x7F0000
	034 Move X0, [X0+2176]
	035 Call 0x1C17CF4
	036 Move X0, 0x79E000
	037 Move X0, [X0+2160]
	038 Call 0x1C17CF4
	039 Move X0, 0x79E000
	040 Move X0, [X0+2192]
	041 Call 0x1C17CF4
	042 Move X0, 0x7EF000
	043 Move X0, [X0+3448]
	044 Call 0x1C17CF4
	045 Move X0, 0x7EE000
	046 Move X0, [X0+3200]
	047 Call 0x1C17CF4
	048 Move X0, 0x79E000
	049 Move X0, [X0+2184]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F0000
	052 Move X0, [X0+248]
	053 Call 0x1C17CF4
	054 Move X0, 0x7F0000
	055 Move X0, [X0+2184]
	056 Call 0x1C17CF4
	057 Move X0, 0x7F0000
	058 Move X0, [X0+2192]
	059 Call 0x1C17CF4
	060 Move X0, 0x7F0000
	061 Move X0, [X0+256]
	062 Call 0x1C17CF4
	063 Move X0, 0x7F0000
	064 Move X0, [X0+264]
	065 Call 0x1C17CF4
	066 Move X0, 0x7F0000
	067 Move X0, [X0+2200]
	068 Call 0x1C17CF4
	069 Move X0, 0x7EB000
	070 Move X0, [X0+864]
	071 Call 0x1C17CF4
	072 Move X0, 0x7EB000
	073 Move X0, [X0+976]
	074 Call 0x1C17CF4
	075 Move X0, 0x7F0000
	076 Move X0, [X0+272]
	077 Call 0x1C17CF4
	078 Move X0, 0x7EF000
	079 Move X0, [X0+1320]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+2475], W8
	083 Move X0, [X20]
	084 NotImplemented "Instruction MOVI not yet implemented."
	085 Move [X31+112], X31
	086 Move [X31+120], X31
	087 Move [X31+128], X31
	088 Move [X31+80], V0
	089 Move [X31+88], V0
	090 Move [X31+76], W31
	091 Call 0x1C17F10
	092 Move X1, [X19]
	093 Move [X31+16], X0
	094 Call Dictionary`2<Int32, Int32>..ctor, X0
	095 Move X0, [X20]
	096 Call 0x1C17F10
	097 Move X1, [X19]
	098 Move [X31+24], X0
	099 Call Dictionary`2<Int32, Int32>..ctor, X0
	100 Move X0, [X31+32]
	101 Compare X0, 0
	102 JumpIfEqual {290}
	103 Move X8, 0x7F0000
	104 Move X8, [X8+272]
	105 Move X21, 0x7F0000
	106 Move X20, 0x7EE000
	107 Move X28, 0x79E000
	108 Move X21, [X21+256]
	109 Move X20, [X20+3200]
	110 Move X28, [X28+2160]
	111 Move X1, [X8]
	112 Add X8, X31, 40
	113 Call List`1<Object>.GetEnumerator, X0
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move X8, [X31+56]
	116 Move [X31+7], V0
	117 Move [X31+128], X8
	118 Move X1, [X21]
	119 Add X0, X31, 112
	120 Call Enumerator<Object>.MoveNext, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {156}
	125 Move X27, [X31+128]
	126 Compare X27, 0
	127 JumpIfEqual {286}
	128 Move X23, [X27+16]
	129 Compare X23, 0
	130 JumpIfEqual {287}
	131 Move X8, [X23+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 And X8, X8, 0
	134 Move X19, X31
	135 Subtract X29, X8, 1
	136 Move W8, [X23+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X26, 0
	139 JumpIfEqual {276}
	140 Add X22, X23, X19
	141 Move W1, [X22+32]
	142 Move X2, [X20]
	143 Move X0, X26
	144 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	145 Move W8, [X23+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X22+32], W0
	149 Move X23, [X27+16]
	150 Add X19, X19, 1
	151 Compare X23, 0
	152 JumpIfNotEqual {136}
	153 Move X0, X27
	154 Move X1, X31
	155 Call Face.InvalidateCache, X0
	156 Move X8, 0x7F0000
	157 Move X8, [X8+248]
	158 Add X0, X31, 112
	159 Move X1, [X8]
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X21, 0x7F0000
	162 Move X20, [X31+16]
	163 Move X19, [X31+24]
	164 Move X21, [X21+2192]
	165 Compare X26, 0
	166 JumpIfEqual {290}
	167 Move X8, 0x7F0000
	168 Move X8, [X8+2176]
	169 Move X0, X26
	170 Move X1, [X8]
	171 Add X8, X31, 40
	172 Call Dictionary`2<Int32, Int32>.GetEnumerator, X0
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 Move [X31+80], V0
	176 Move [X31+88], V1
	177 Move X1, [X21]
	178 Add X0, X31, 80
	179 Call Enumerator<Int32, Int32>.MoveNext, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {226}
	184 Compare X25, 0
	185 JumpIfEqual {284}
	186 Move W27, [X31+96]
	187 Move W26, [X31+100]
	188 Move X3, [X28]
	189 Add X2, X31, 76
	190 Move X0, X25
	191 Move W1, W27
	192 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {206}
	197 Compare X20, 0
	198 JumpIfEqual {288}
	199 Move X8, 0x79E000
	200 Move W2, [X31+76]
	201 Move X8, [X8+2136]
	202 Move X3, [X8]
	203 Move X0, X20
	204 Move W1, W26
	205 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	206 Compare X24, 0
	207 JumpIfEqual {285}
	208 Move X3, [X28]
	209 Add X2, X31, 76
	210 Move X0, X24
	211 Move W1, W27
	212 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {177}
	217 Compare X19, 0
	218 JumpIfEqual {289}
	219 Move X8, 0x79E000
	220 Move W2, [X31+76]
	221 Move X8, [X8+2136]
	222 Move X3, [X8]
	223 Move X0, X19
	224 Move W1, W26
	225 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	226 Move X8, 0x7F0000
	227 Move X8, [X8+2184]
	228 Add X0, X31, 80
	229 Move X1, [X8]
	230 Call Enumerator<Int32, Int32>.Dispose, X0
	231 Move X0, X20
	232 Move X1, X31
	233 Call SharedVertex.ToSharedVertices, X0
	234 Compare X19, 0
	235 JumpIfEqual {290}
	236 Move X8, 0x7EF000
	237 Move X8, [X8+3448]
	238 Move X23, X0
	239 Move X0, X19
	240 Move X1, [X8]
	241 Call Dictionary`2<Int32, Int32>.get_Count, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X19
	244 Move X1, X31
	245 Call SharedVertex.ToSharedVertices, X0
	246 Move X22, X0
	247 Move X22, X31
	248 Move X8, 0x7EF000
	249 Move X8, [X8+1320]
	250 Move X0, [X8]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X0, [X31]
	256 Move X4, [X31+8]
	257 Move X1, [X31+32]
	258 Move X2, X23
	259 Move X3, X22
	260 Move X5, X31
	261 Call ProBuilderMesh.Create, X0, X1, X2, X3, X4
	262 Move X20, [X31+224]
	263 Move X19, [X31+232]
	264 Move X22, [X31+208]
	265 Move X21, [X31+216]
	266 Move X24, [X31+192]
	267 Move X23, [X31+200]
	268 Move X26, [X31+176]
	269 Move X25, [X31+184]
	270 Move X28, [X31+160]
	271 Move X27, [X31+168]
	272 Move X29, [X31+144]
	273 Move X30, [X31+152]
	274 Add X31, X31, 240
	275 Return X0
	276 Call 0x1C17F20
	277 Call 0x1C17F28
	278 Move X21, 0x7F0000
	279 Move X20, [X31+16]
	280 Move X19, [X31+24]
	281 Move X21, [X21+2192]
	282 Call 0x1C17F28
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Call 0x1C17F20
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Move X20, [X31+16]
	292 Move X19, [X31+24]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Call 0x3EB2AD0
	295 Move X24, [X0]
	296 Call 0x3EB2AE0
	297 Move X8, 0x7F0000
	298 Move X8, [X8+2184]
	299 Add X0, X31, 80
	300 Move X1, [X8]
	301 Call Enumerator<Int32, Int32>.Dispose, X0
	302 Compare X24, 0
	303 JumpIfEqual {231}
	304 Move X0, X24
	305 Call 0x1C17F18
	306 Move X19, X0
	307 Move X24, X31
	308 Move X19, X0
	309 Move X8, 0x7F0000
	310 Move X8, [X8+2184]
	311 Move X1, [X8]
	312 Add X0, X31, 80
	313 Call Enumerator<Int32, Int32>.Dispose, X0
	314 Compare X24, 0
	315 JumpIfEqual {345}
	316 Move X0, X24
	317 Call 0x1C17F18
	318 Move X21, 0x7F0000
	319 Move X20, [X31+16]
	320 Move X19, [X31+24]
	321 Move X21, [X21+2192]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Call 0x3EB2AD0
	324 Move X27, [X0]
	325 Call 0x3EB2AE0
	326 Move X8, 0x7F0000
	327 Move X8, [X8+248]
	328 Add X0, X31, 112
	329 Move X1, [X8]
	330 Call Enumerator<Object>.Dispose, X0
	331 Compare X27, 0
	332 JumpIfEqual {165}
	333 Move X0, X27
	334 Call 0x1C17F18
	335 Move X19, X0
	336 Move X27, X31
	337 Move X19, X0
	338 Move X8, 0x7F0000
	339 Move X8, [X8+248]
	340 Move X1, [X8]
	341 Add X0, X31, 112
	342 Call Enumerator<Object>.Dispose, X0
	343 Compare X27, 0
	344 JumpIfNotEqual {347}
	345 Move X0, X19
	346 Call 0x1D2D690
	347 Move X0, X27
	348 Call 0x1C17F18
	349 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.ProBuilderMesh> SplitByMaxVertexCount(System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> sharedVertices, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.SharedVertex> sharedTextures, System.UInt32 maxVertexCount = 65535)

Disassembly:
	0x0395F418 MOV W1, W27
	0x0395F41C BL 0x2A0BC68
	0x0395F420 TBZ X0, 0x0, 0x395F3B8
	0x0395F424 CBZ X19, 0x395F524
	0x0395F428 ADRP X8, 0x79E000
	0x0395F42C LDR W2, [X31 + 0x4C]
	0x0395F430 LDR X8, [X8 + 0x858]
	0x0395F434 LDR X3, [X8]
	0x0395F438 MOV X0, X19
	0x0395F43C MOV W1, W26
	0x0395F440 BL 0x2A0A344
	0x0395F444 B 0x395F3B8
	0x0395F448 ADRP X8, 0x7F0000
	0x0395F44C LDR X8, [X8 + 0x888]
	0x0395F450 ADD X0, X31, 0x50
	0x0395F454 LDR X1, [X8]
	0x0395F458 BL 0x2BF3AB0
	0x0395F45C MOV X0, X20
	0x0395F460 MOV X1, X31
	0x0395F464 BL 0x39350B4
	0x0395F468 CBZ X19, 0x395F528
	0x0395F46C ADRP X8, 0x7EF000
	0x0395F470 LDR X8, [X8 + 0xD78]
	0x0395F474 MOV X23, X0
	0x0395F478 MOV X0, X19
	0x0395F47C LDR X1, [X8]
	0x0395F480 BL 0x2A0A118
	0x0395F484 CMP W0, 0x0
	0x0395F488 B.LE 0x395F4A0
	0x0395F48C MOV X0, X19
	0x0395F490 MOV X1, X31
	0x0395F494 BL 0x39350B4
	0x0395F498 MOV X22, X0
	0x0395F49C B 0x395F4A4
	0x0395F4A0 MOV X22, X31
	0x0395F4A4 ADRP X8, 0x7EF000
	0x0395F4A8 LDR X8, [X8 + 0x528]
	0x0395F4AC LDR X0, [X8]
	0x0395F4B0 LDR W8, [X0 + 0xE0]
	0x0395F4B4 CBNZ W8, 0x395F4BC
	0x0395F4B8 BL 0x1C16DFC
	0x0395F4BC LDP X0, X4, [X31]
	0x0395F4C0 LDR X1, [X31 + 0x20]
	0x0395F4C4 MOV X2, X23
	0x0395F4C8 MOV X3, X22
	0x0395F4CC MOV X5, X31
	0x0395F4D0 BL 0x3919650
	0x0395F4D4 LDP X20, X19, [X31 + 0xE0]
	0x0395F4D8 LDP X22, X21, [X31 + 0xD0]
	0x0395F4DC LDP X24, X23, [X31 + 0xC0]
	0x0395F4E0 LDP X26, X25, [X31 + 0xB0]
	0x0395F4E4 LDP X28, X27, [X31 + 0xA0]
	0x0395F4E8 LDP X29, X30, [X31 + 0x90]
	0x0395F4EC ADD X31, X31, 0xF0
	0x0395F4F0 RET
	0x0395F4F4 BL 0x1C16F20
	0x0395F4F8 BL 0x1C16F28
	0x0395F4FC ADRP X21, 0x7F0000
	0x0395F500 LDP X20, X19, [X31 + 0x10]
	0x0395F504 LDR X21, [X21 + 0x890]
	0x0395F508 BL 0x1C16F28
	0x0395F50C BL 0x1C16F20
	0x0395F510 BL 0x1C16F20
	0x0395F514 BL 0x1C16F20
	0x0395F518 BL 0x1C16F20
	0x0395F51C BL 0x1C16F20
	0x0395F520 BL 0x1C16F20
	0x0395F524 BL 0x1C16F20
	0x0395F528 BL 0x1C16F20
	0x0395F52C B 0x395F554
	0x0395F530 B 0x395F560
	0x0395F534 B 0x395F554
	0x0395F538 B 0x395F560
	0x0395F53C B 0x395F5D0
	0x0395F540 B 0x395F5D0
	0x0395F544 B 0x395F5D0
	0x0395F548 B 0x395F560
	0x0395F54C B 0x395F560
	0x0395F550 B 0x395F554
	0x0395F554 LDP X20, X19, [X31 + 0x10]
	0x0395F558 B 0x395F560
	0x0395F55C B 0x395F5D0
	0x0395F560 CMP W1, 0x1
	0x0395F564 B.NE 0x395F594
	0x0395F568 BL 0x3EB1AD0
	0x0395F56C LDR X24, [X0]
	0x0395F570 BL 0x3EB1AE0
	0x0395F574 ADRP X8, 0x7F0000
	0x0395F578 LDR X8, [X8 + 0x888]
	0x0395F57C ADD X0, X31, 0x50
	0x0395F580 LDR X1, [X8]
	0x0395F584 BL 0x2BF3AB0
	0x0395F588 CBZ X24, 0x395F45C
	0x0395F58C MOV X0, X24
	0x0395F590 BL 0x1C16F18
	0x0395F594 MOV X19, X0
	0x0395F598 MOV X24, X31
	0x0395F59C B 0x395F5A4
	0x0395F5A0 MOV X19, X0
	0x0395F5A4 ADRP X8, 0x7F0000
	0x0395F5A8 LDR X8, [X8 + 0x888]
	0x0395F5AC LDR X1, [X8]
	0x0395F5B0 ADD X0, X31, 0x50
	0x0395F5B4 BL 0x2BF3AB0
	0x0395F5B8 CBZ X24, 0x395F638
	0x0395F5BC MOV X0, X24
	0x0395F5C0 BL 0x1C16F18
	0x0395F5C4 B 0x395F5D0
	0x0395F5C8 B 0x395F5DC
	0x0395F5CC B 0x395F5D0
	0x0395F5D0 ADRP X21, 0x7F0000
	0x0395F5D4 LDP X20, X19, [X31 + 0x10]
	0x0395F5D8 LDR X21, [X21 + 0x890]
	0x0395F5DC CMP W1, 0x1
	0x0395F5E0 B.NE 0x395F610
	0x0395F5E4 BL 0x3EB1AD0
	0x0395F5E8 LDR X27, [X0]
	0x0395F5EC BL 0x3EB1AE0
	0x0395F5F0 ADRP X8, 0x7F0000
	0x0395F5F4 LDR X8, [X8 + 0xF8]
	0x0395F5F8 ADD X0, X31, 0x70
	0x0395F5FC LDR X1, [X8]
	0x0395F600 BL 0x2BC434C
	0x0395F604 CBZ X27, 0x395F390
	0x0395F608 MOV X0, X27
	0x0395F60C BL 0x1C16F18
	0x0395F610 MOV X19, X0
	0x0395F614 MOV X27, X31
	0x0395F618 B 0x395F620
	0x0395F61C MOV X19, X0
	0x0395F620 ADRP X8, 0x7F0000
	0x0395F624 LDR X8, [X8 + 0xF8]
	0x0395F628 LDR X1, [X8]
	0x0395F62C ADD X0, X31, 0x70
	0x0395F630 BL 0x2BC434C
	0x0395F634 CBNZ X27, 0x395F640
	0x0395F638 MOV X0, X19
	0x0395F63C BL 0x1D2C690
	0x0395F640 MOV X0, X27
	0x0395F644 BL 0x1C16F18
	0x0395F648 BL 0x1990590
	0x0395F64C STR X30, [X31 - 0x20]!
	0x0395F650 STP X20, X19, [X31 + 0x10]
	0x0395F654 ADRP X19, 0xA82000
	0x0395F658 ADRP X20, 0x7F0000
	0x0395F65C LDRB W8, [X19 + 0x9AD]
	0x0395F660 LDR X20, [X20 + 0x878]
	0x0395F664 TBNZ X8, 0x0, 0x395F67C
	0x0395F668 ADRP X0, 0x7F0000
	0x0395F66C LDR X0, [X0 + 0x878]
	0x0395F670 BL 0x1C16CF4
	0x0395F674 MOVZ W8, 0x1
	0x0395F678 STRB W8, [X19 + 0x9AD]
	0x0395F67C LDR X0, [X20]
	0x0395F680 BL 0x1C16F10
	0x0395F684 MOV X1, X31
	0x0395F688 MOV X19, X0
	0x0395F68C BL 0x33BDD8C
	0x0395F690 LDR X8, [X20]
	0x0395F694 LDR X8, [X8 + 0xB8]
	0x0395F698 STR X19, [X8]
	0x0395F69C LDP X20, X19, [X31 + 0x10]
	0x0395F6A0 LDR X30, [X31], #0x20
	0x0395F6A4 RET
	0x0395F6A8 MOV X1, X31
	0x0395F6AC B 0x33BDD8C
	0x0395F6B0 STR X30, [X31 - 0x10]!
	0x0395F6B4 CBZ X1, 0x395F6C4
	0x0395F6B8 LDR W0, [X1 + 0x48]
	0x0395F6BC LDR X30, [X31], #0x10
	0x0395F6C0 RET
	0x0395F6C4 BL 0x1C16F20
	0x0395F6C8 STP X30, X21, [X31 - 0x20]!
	0x0395F6CC STP X20, X19, [X31 + 0x10]
	0x0395F6D0 MOV X20, X1
	0x0395F6D4 MOV X1, X31
	0x0395F6D8 MOV X19, X2
	0x0395F6DC MOV X21, X0
	0x0395F6E0 BL 0x33BDD8C
	0x0395F6E4 STP X20, X19, [X21 + 0x10]
	0x0395F6E8 LDP X20, X19, [X31 + 0x10]
	0x0395F6EC LDP X30, X21, [X31], #0x20
	0x0395F6F0 RET
	0x0395F6F4 SUB X31, X31, 0x60
	0x0395F6F8 STR X30, [X31 + 0x20]
	0x0395F6FC STP X24, X23, [X31 + 0x30]
	0x0395F700 STP X22, X21, [X31 + 0x40]
	0x0395F704 STP X20, X19, [X31 + 0x50]
	0x0395F708 ADRP X23, 0xA82000
	0x0395F70C ADRP X22, 0x7EF000
	0x0395F710 ADRP X20, 0x7F0000
	0x0395F714 LDRB W8, [X23 + 0x9AE]
	0x0395F718 LDR X22, [X22 + 0x898]
	0x0395F71C LDR X20, [X20 + 0x678]
	0x0395F720 MOV X21, X1
	0x0395F724 MOV X19, X0
	0x0395F728 TBNZ X8, 0x0, 0x395F7C4
	0x0395F72C ADRP X0, 0x7F0000
	0x0395F730 LDR X0, [X0 + 0x8A0]
	0x0395F734 BL 0x1C16CF4
	0x0395F738 ADRP X0, 0x7F0000
	0x0395F73C LDR X0, [X0 + 0xF8]
	0x0395F740 BL 0x1C16CF4
	0x0395F744 ADRP X0, 0x7F0000
	0x0395F748 LDR X0, [X0 + 0x100]
	0x0395F74C BL 0x1C16CF4
	0x0395F750 ADRP X0, 0x7F0000
	0x0395F754 LDR X0, [X0 + 0x108]
	0x0395F758 BL 0x1C16CF4
	0x0395F75C ADRP X0, 0x7F0000
	0x0395F760 LDR X0, [X0 + 0x8A8]
	0x0395F764 BL 0x1C16CF4
	0x0395F768 ADRP X0, 0x7EF000
	0x0395F76C LDR X0, [X0 + 0x888]
	0x0395F770 BL 0x1C16CF4
	0x0395F774 ADRP X0, 0x7F0000
	0x0395F778 LDR X0, [X0 + 0x678]
	0x0395F77C BL 0x1C16CF4
	0x0395F780 ADRP X0, 0x7EF000
	0x0395F784 LDR X0, [X0 + 0x898]
	0x0395F788 BL 0x1C16CF4
	0x0395F78C ADRP X0, 0x7F0000
	0x0395F790 LDR X0, [X0 + 0x110]
	0x0395F794 BL 0x1C16CF4
	0x0395F798 ADRP X0, 0x7EF000
	0x0395F79C LDR X0, [X0 + 0xC40]
	0x0395F7A0 BL 0x1C16CF4
	0x0395F7A4 ADRP X0, 0x7F0000
	0x0395F7A8 LDR X0, [X0 + 0x8B0]
	0x0395F7AC BL 0x1C16CF4
	0x0395F7B0 ADRP X0, 0x7F0000
	0x0395F7B4 LDR X0, [X0 + 0x8B8]
	0x0395F7B8 BL 0x1C16CF4
	0x0395F7BC MOVZ W8, 0x1
	0x0395F7C0 STRB W8, [X23 + 0x9AE]
	0x0395F7C4 MOV X0, X19
	0x0395F7C8 MOV X1, X21
	0x0395F7CC MOV X2, X31
	0x0395F7D0 STR X31, [X31 + 0x28]
	0x0395F7D4 STP X31, X31, [X31 + 0x10]
	0x0395F7D8 STP X31, X31, [X31]
	0x0395F7DC BL 0x39760B4
	0x0395F7E0 LDR X8, [X22]
	0x0395F7E4 MOV X22, X0
	0x0395F7E8 MOV X0, X8
	0x0395F7EC BL 0x1C16F10
	0x0395F7F0 LDR X2, [X20]
	0x0395F7F4 MOV X1, X21
	0x0395F7F8 MOV X20, X0
	0x0395F7FC BL 0x2DBDEEC
	0x0395F800 CBZ X22, 0x395F940
	0x0395F804 LDR W8, [X22 + 0x18]
	0x0395F808 CMP W8, 0x1
	0x0395F80C B.LT 0x395F874
	0x0395F810 ADRP X8, 0x7F0000
	0x0395F814 LDR X8, [X8 + 0x110]
	0x0395F818 ADRP X21, 0x7F0000
	0x0395F81C ADRP X24, 0x7EF000
	0x0395F820 ADRP X23, 0x7F0000
	0x0395F824 LDR X1, [X8]
	0x0395F828 LDR X21, [X21 + 0x100]
	0x0395F82C LDR X24, [X24 + 0x888]
	0x0395F830 LDR X23, [X23 + 0xF8]
	0x0395F834 ADD X8, X31, 0x0
	0x0395F838 MOV X0, X22
	0x0395F83C BL 0x301CB58
	0x0395F840 LDR X1, [X21]
	0x0395F844 ADD X0, X31, 0x0
	0x0395F848 BL 0x2BC4350
	0x0395F84C TBZ X0, 0x0, 0x395F868
	0x0395F850 CBZ X20, 0x395F93C
	0x0395F854 LDR X1, [X31 + 0x10]
	0x0395F858 LDR X2, [X24]
	0x0395F85C MOV X0, X20
	0x0395F860 BL 0x2DBEF30
	0x0395F864 B 0x395F840
	0x0395F868 LDR X1, [X23]
	0x0395F86C ADD X0, X31, 0x0
	0x0395F870 BL 0x2BC434C
	0x0395F874 ADRP X23, 0x7F0000
	0x0395F878 LDR X23, [X23 + 0x8B8]
	0x0395F87C LDR X0, [X23]
	0x0395F880 LDR W8, [X0 + 0xE0]
	0x0395F884 CBNZ W8, 0x395F890
	0x0395F888 BL 0x1C16DFC
	0x0395F88C LDR X0, [X23]
	0x0395F890 LDR X8, [X0 + 0xB8]
	0x0395F894 ADRP X24, 0x7F0000
	0x0395F898 LDR X21, [X8 + 0x8]
	0x0395F89C LDR X24, [X24 + 0x8A0]
	0x0395F8A0 CBNZ X21, 0x395F8F4
	0x0395F8A4 LDR W8, [X0 + 0xE0]
	0x0395F8A8 CBNZ W8, 0x395F8B4
	0x0395F8AC BL 0x1C16DFC
	0x0395F8B0 LDR X0, [X23]
	0x0395F8B4 ADRP X9, 0x7F0000
	0x0395F8B8 LDR X8, [X0 + 0xB8]
	0x0395F8BC LDR X9, [X9 + 0x8A8]
	0x0395F8C0 LDR X22, [X8]
	0x0395F8C4 LDR X0, [X9]
	0x0395F8C8 BL 0x1C16F10
	0x0395F8CC ADRP X8, 0x7F0000
	0x0395F8D0 LDR X8, [X8 + 0x8B0]
	0x0395F8D4 MOV X1, X22
	0x0395F8D8 MOV X3, X31
	0x0395F8DC MOV X21, X0
	0x0395F8E0 LDR X2, [X8]
	0x0395F8E4 BL 0x2D30578
	0x0395F8E8 LDR X8, [X23]
	0x0395F8EC LDR X8, [X8 + 0xB8]
	0x0395F8F0 STR X21, [X8 + 0x8]
	0x0395F8F4 LDR X2, [X24]
	0x0395F8F8 MOV X0, X20
	0x0395F8FC MOV X1, X21
	0x0395F900 BL 0x21D0F68
	0x0395F904 MOV X1, X0
	0x0395F908 ADD X2, X31, 0x18
	0x0395F90C ADD X3, X31, 0x28
	0x0395F910 MOVZ W4, 0x1
	0x0395F914 MOV X0, X19
	0x0395F918 MOV W5, W31
	0x0395F91C MOV X6, X20
	0x0395F920 BL 0x395F9B0
	0x0395F924 LDP X0, X30, [X31 + 0x18]
	0x0395F928 LDP X20, X19, [X31 + 0x50]
	0x0395F92C LDP X22, X21, [X31 + 0x40]
	0x0395F930 LDP X24, X23, [X31 + 0x30]
	0x0395F934 ADD X31, X31, 0x60
	0x0395F938 RET
	0x0395F93C BL 0x1C16F20
	0x0395F940 BL 0x1C16F20
	0x0395F944 B 0x395F94C
	0x0395F948 B 0x395F94C
	0x0395F94C MOV X21, X0
	0x0395F950 CMP W1, 0x1
	0x0395F954 B.NE 0x395F980
	0x0395F958 MOV X0, X21
	0x0395F95C BL 0x3EB1AD0
	0x0395F960 LDR X22, [X0]
	0x0395F964 BL 0x3EB1AE0
	0x0395F968 LDR X1, [X23]
	0x0395F96C ADD X0, X31, 0x0
	0x0395F970 BL 0x2BC434C
	0x0395F974 CBZ X22, 0x395F874
	0x0395F978 MOV X0, X22
	0x0395F97C BL 0x1C16F18
	0x0395F980 MOV X22, X31
	0x0395F984 B 0x395F98C
	0x0395F988 MOV X21, X0
	0x0395F98C LDR X1, [X23]
	0x0395F990 ADD X0, X31, 0x0
	0x0395F994 BL 0x2BC434C
	0x0395F998 CBNZ X22, 0x395F9A4
	0x0395F99C MOV X0, X21
	0x0395F9A0 BL 0x1D2C690
	0x0395F9A4 MOV X0, X22
	0x0395F9A8 BL 0x1C16F18
	0x0395F9AC BL 0x1990590
	0x0395F9B0 SUB X31, X31, 0x1B0
	0x0395F9B4 STR D10, [X31 + 0x130]
	0x0395F9B8 STP D9, D8, [X31 + 0x140]
	0x0395F9BC STP X29, X30, [X31 + 0x150]
	0x0395F9C0 STP X28, X27, [X31 + 0x160]
	0x0395F9C4 STP X26, X25, [X31 + 0x170]
	0x0395F9C8 STP X24, X23, [X31 + 0x180]
	0x0395F9CC STP X22, X21, [X31 + 0x190]
	0x0395F9D0 STP X20, X19, [X31 + 0x1A0]
	0x0395F9D4 ADRP X20, 0xA82000
	0x0395F9D8 LDRB W8, [X20 + 0x9B1]
	0x0395F9DC MOV X27, X6
	0x0395F9E0 MOV W26, W5
	0x0395F9E4 MOV W24, W4
	0x0395F9E8 MOV X19, X1
	0x0395F9EC MOV X25, X0
	0x0395F9F0 STP X2, X3, [X31 + 0x18]
	0x0395F9F4 TBNZ X8, 0x0, 0x395FD60
	0x0395F9F8 ADRP X0, 0x7EE000
	0x0395F9FC LDR X0, [X0 + 0x9D8]
	0x0395FA00 BL 0x1C16CF4
	0x0395FA04 ADRP X0, 0x7F0000
	0x0395FA08 LDR X0, [X0 + 0x8C0]
	0x0395FA0C BL 0x1C16CF4
	0x0395FA10 ADRP X0, 0x7F0000
	0x0395FA14 LDR X0, [X0 + 0x8C8]
	0x0395FA18 BL 0x1C16CF4
	0x0395FA1C ADRP X0, 0x7F0000
	0x0395FA20 LDR X0, [X0 + 0x8D0]
	0x0395FA24 BL 0x1C16CF4
	0x0395FA28 ADRP X0, 0x7F0000
	0x0395FA2C LDR X0, [X0 + 0x8D8]
	0x0395FA30 BL 0x1C16CF4
	0x0395FA34 ADRP X0, 0x7F0000
	0x0395FA38 LDR X0, [X0 + 0x8E0]
	0x0395FA3C BL 0x1C16CF4
	0x0395FA40 ADRP X0, 0x7F0000
	0x0395FA44 LDR X0, [X0 + 0x8E8]
	0x0395FA48 BL 0x1C16CF4
	0x0395FA4C ADRP X0, 0x7F0000
	0x0395FA50 LDR X0, [X0 + 0x3D8]
	0x0395FA54 BL 0x1C16CF4
	0x0395FA58 ADRP X0, 0x7F0000
	0x0395FA5C LDR X0, [X0 + 0x8F0]
	0x0395FA60 BL 0x1C16CF4
	0x0395FA64 ADRP X0, 0x7F0000
	0x0395FA68 LDR X0, [X0 + 0x8F8]
	0x0395FA6C BL 0x1C16CF4
	0x0395FA70 ADRP X0, 0x7F0000
	0x0395FA74 LDR X0, [X0 + 0x3E8]
	0x0395FA78 BL 0x1C16CF4
	0x0395FA7C ADRP X0, 0x7EF000
	0x0395FA80 LDR X0, [X0 + 0x698]
	0x0395FA84 BL 0x1C16CF4
	0x0395FA88 ADRP X0, 0x7EE000
	0x0395FA8C LDR X0, [X0 + 0xD40]
	0x0395FA90 BL 0x1C16CF4
	0x0395FA94 ADRP X0, 0x7F0000
	0x0395FA98 LDR X0, [X0 + 0x900]
	0x0395FA9C BL 0x1C16CF4
	0x0395FAA0 ADRP X0, 0x7EF000
	0x0395FAA4 LDR X0, [X0 + 0xD98]
	0x0395FAA8 BL 0x1C16CF4
	0x0395FAAC ADRP X0, 0x7F0000
	0x0395FAB0 LDR X0, [X0 + 0x908]
	0x0395FAB4 BL 0x1C16CF4
	0x0395FAB8 ADRP X0, 0x7F0000
	0x0395FABC LDR X0, [X0 + 0x910]
	0x0395FAC0 BL 0x1C16CF4
	0x0395FAC4 ADRP X0, 0x7EF000
	0x0395FAC8 LDR X0, [X0 + 0xDA0]
	0x0395FACC BL 0x1C16CF4
	0x0395FAD0 ADRP X0, 0x7F0000
	0x0395FAD4 LDR X0, [X0 + 0x918]
	0x0395FAD8 BL 0x1C16CF4
	0x0395FADC ADRP X0, 0x7F0000
	0x0395FAE0 LDR X0, [X0 + 0x920]
	0x0395FAE4 BL 0x1C16CF4
	0x0395FAE8 ADRP X0, 0x7EF000
	0x0395FAEC LDR X0, [X0 + 0xDA8]
	0x0395FAF0 BL 0x1C16CF4
	0x0395FAF4 ADRP X0, 0x7F0000
	0x0395FAF8 LDR X0, [X0 + 0x928]
	0x0395FAFC BL 0x1C16CF4
	0x0395FB00 ADRP X0, 0x7F0000
	0x0395FB04 LDR X0, [X0 + 0x930]
	0x0395FB08 BL 0x1C16CF4
	0x0395FB0C ADRP X0, 0x7F0000
	0x0395FB10 LDR X0, [X0 + 0x938]
	0x0395FB14 BL 0x1C16CF4
	0x0395FB18 ADRP X0, 0x7F0000
	0x0395FB1C LDR X0, [X0 + 0x940]
	0x0395FB20 BL 0x1C16CF4
	0x0395FB24 ADRP X0, 0x7EF000
	0x0395FB28 LDR X0, [X0 + 0x510]
	0x0395FB2C BL 0x1C16CF4
	0x0395FB30 ADRP X0, 0x7F0000
	0x0395FB34 LDR X0, [X0 + 0x948]
	0x0395FB38 BL 0x1C16CF4
	0x0395FB3C ADRP X0, 0x7F0000
	0x0395FB40 LDR X0, [X0 + 0x430]
	0x0395FB44 BL 0x1C16CF4
	0x0395FB48 ADRP X0, 0x796000
	0x0395FB4C LDR X0, [X0 + 0x9D8]
	0x0395FB50 BL 0x1C16CF4
	0x0395FB54 ADRP X0, 0x7F0000
	0x0395FB58 LDR X0, [X0 + 0x950]
	0x0395FB5C BL 0x1C16CF4
	0x0395FB60 ADRP X0, 0x795000
	0x0395FB64 LDR X0, [X0 + 0xDF8]
	0x0395FB68 BL 0x1C16CF4
	0x0395FB6C ADRP X0, 0x7EE000
	0x0395FB70 LDR X0, [X0 + 0xE28]
	0x0395FB74 BL 0x1C16CF4
	0x0395FB78 ADRP X0, 0x795000
	0x0395FB7C LDR X0, [X0 + 0xE00]
	0x0395FB80 BL 0x1C16CF4
	0x0395FB84 ADRP X0, 0x79B000
	0x0395FB88 LDR X0, [X0 + 0x688]
	0x0395FB8C BL 0x1C16CF4
	0x0395FB90 ADRP X0, 0x7F0000
	0x0395FB94 LDR X0, [X0 + 0x958]
	0x0395FB98 BL 0x1C16CF4
	0x0395FB9C ADRP X0, 0x7EE000
	0x0395FBA0 LDR X0, [X0 + 0xCD0]
	0x0395FBA4 BL 0x1C16CF4
	0x0395FBA8 ADRP X0, 0x795000
	0x0395FBAC LDR X0, [X0 + 0xE08]
	0x0395FBB0 BL 0x1C16CF4
	0x0395FBB4 ADRP X0, 0x794000
	0x0395FBB8 LDR X0, [X0 + 0x758]
	0x0395FBBC BL 0x1C16CF4
	0x0395FBC0 ADRP X0, 0x7F0000
	0x0395FBC4 LDR X0, [X0 + 0x960]
	0x0395FBC8 BL 0x1C16CF4
	0x0395FBCC ADRP X0, 0x7F0000
	0x0395FBD0 LDR X0, [X0 + 0x968]
	0x0395FBD4 BL 0x1C16CF4
	0x0395FBD8 ADRP X0, 0x7F0000
	0x0395FBDC LDR X0, [X0 + 0x970]
	0x0395FBE0 BL 0x1C16CF4
	0x0395FBE4 ADRP X0, 0x7F0000
	0x0395FBE8 LDR X0, [X0 + 0x978]
	0x0395FBEC BL 0x1C16CF4
	0x0395FBF0 ADRP X0, 0x7EE000
	0x0395FBF4 LDR X0, [X0 + 0xE10]
	0x0395FBF8 BL 0x1C16CF4
	0x0395FBFC ADRP X0, 0x7F0000
	0x0395FC00 LDR X0, [X0 + 0x20]
	0x0395FC04 BL 0x1C16CF4
	0x0395FC08 ADRP X0, 0x7F0000
	0x0395FC0C LDR X0, [X0 + 0x980]
	0x0395FC10 BL 0x1C16CF4
	0x0395FC14 ADRP X0, 0x7EF000
	0x0395FC18 LDR X0, [X0 + 0xDB0]
	0x0395FC1C BL 0x1C16CF4
	0x0395FC20 ADRP X0, 0x7EF000
	0x0395FC24 LDR X0, [X0 + 0xC38]
	0x0395FC28 BL 0x1C16CF4
	0x0395FC2C ADRP X0, 0x7EF000
	0x0395FC30 LDR X0, [X0 + 0xA38]
	0x0395FC34 BL 0x1C16CF4
	0x0395FC38 ADRP X0, 0x7F0000
	0x0395FC3C LDR X0, [X0 + 0x988]
	0x0395FC40 BL 0x1C16CF4
	0x0395FC44 ADRP X0, 0x7EE000
	0x0395FC48 LDR X0, [X0 + 0xDE0]
	0x0395FC4C BL 0x1C16CF4
	0x0395FC50 ADRP X0, 0x7F0000
	0x0395FC54 LDR X0, [X0 + 0x28]
	0x0395FC58 BL 0x1C16CF4
	0x0395FC5C ADRP X0, 0x7EF000
	0x0395FC60 LDR X0, [X0 + 0xAF8]
	0x0395FC64 BL 0x1C16CF4
	0x0395FC68 ADRP X0, 0x7F0000
	0x0395FC6C LDR X0, [X0 + 0x990]
	0x0395FC70 BL 0x1C16CF4
	0x0395FC74 ADRP X0, 0x795000
	0x0395FC78 LDR X0, [X0 + 0xE28]
	0x0395FC7C BL 0x1C16CF4
	0x0395FC80 ADRP X0, 0x7BE000
	0x0395FC84 LDR X0, [X0 + 0xF38]
	0x0395FC88 BL 0x1C16CF4
	0x0395FC8C ADRP X0, 0x7EF000
	0x0395FC90 LDR X0, [X0 + 0xB00]
	0x0395FC94 BL 0x1C16CF4
	0x0395FC98 ADRP X0, 0x7F0000
	0x0395FC9C LDR X0, [X0 + 0x998]
	0x0395FCA0 BL 0x1C16CF4
	0x0395FCA4 ADRP X0, 0x7F0000
	0x0395FCA8 LDR X0, [X0 + 0x9A0]
	0x0395FCAC BL 0x1C16CF4
	0x0395FCB0 ADRP X0, 0x7EE000
	0x0395FCB4 LDR X0, [X0 + 0xDE8]
	0x0395FCB8 BL 0x1C16CF4
	0x0395FCBC ADRP X0, 0x7F0000
	0x0395FCC0 LDR X0, [X0 + 0x30]
	0x0395FCC4 BL 0x1C16CF4
	0x0395FCC8 ADRP X0, 0x7EE000
	0x0395FCCC LDR X0, [X0 + 0xDF0]
	0x0395FCD0 BL 0x1C16CF4
	0x0395FCD4 ADRP X0, 0x7EF000
	0x0395FCD8 LDR X0, [X0 + 0x418]
	0x0395FCDC BL 0x1C16CF4
	0x0395FCE0 ADRP X0, 0x7F0000
	0x0395FCE4 LDR X0, [X0 + 0x9A8]
	0x0395FCE8 BL 0x1C16CF4
	0x0395FCEC ADRP X0, 0x7F0000
	0x0395FCF0 LDR X0, [X0 + 0x9B0]
	0x0395FCF4 BL 0x1C16CF4
	0x0395FCF8 ADRP X0, 0x7F0000
	0x0395FCFC LDR X0, [X0 + 0x9B8]
	0x0395FD00 BL 0x1C16CF4
	0x0395FD04 ADRP X0, 0x7F0000
	0x0395FD08 LDR X0, [X0 + 0x9C0]
	0x0395FD0C BL 0x1C16CF4
	0x0395FD10 ADRP X0, 0x7F0000
	0x0395FD14 LDR X0, [X0 + 0x9C8]
	0x0395FD18 BL 0x1C16CF4
	0x0395FD1C ADRP X0, 0x7F0000
	0x0395FD20 LDR X0, [X0 + 0x9D0]
	0x0395FD24 BL 0x1C16CF4
	0x0395FD28 ADRP X0, 0x7F0000
	0x0395FD2C LDR X0, [X0 + 0x8B8]
	0x0395FD30 BL 0x1C16CF4
	0x0395FD34 ADRP X0, 0x7EF000
	0x0395FD38 LDR X0, [X0 + 0xB08]
	0x0395FD3C BL 0x1C16CF4
	0x0395FD40 ADRP X0, 0x7F0000
	0x0395FD44 LDR X0, [X0 + 0x9D8]
	0x0395FD48 BL 0x1C16CF4
	0x0395FD4C ADRP X0, 0x7F0000
	0x0395FD50 LDR X0, [X0 + 0x9E0]
	0x0395FD54 BL 0x1C16CF4
	0x0395FD58 MOVZ W8, 0x1
	0x0395FD5C STRB W8, [X20 + 0x9B1]
	0x0395FD60 MOVI V0.2D, 0x0
	0x0395FD64 STP X31, X31, [X31 + 0x110]
	0x0395FD68 STR X31, [X31 + 0x120]
	0x0395FD6C STR X31, [X31 + 0x138]
	0x0395FD70 STR X31, [X31 + 0x100]
	0x0395FD74 STP X31, X31, [X31 + 0xD0]
	0x0395FD78 STP X31, X31, [X31 + 0xB0]
	0x0395FD7C STP V0, V0, [X31 + 0xE0]
	0x0395FD80 STR X31, [X31 + 0xC0]
	0x0395FD84 CBZ X25, 0x3960CAC
	0x0395FD88 ADRP X21, 0x7EE000
	0x0395FD8C ADRP X22, 0x7F0000
	0x0395FD90 ADRP X23, 0x7EF000
	0x0395FD94 ADRP X29, 0x7F0000
	0x0395FD98 ADRP X28, 0x7F0000
	0x0395FD9C LDR X21, [X21 + 0xCD0]
	0x0395FDA0 LDR X22, [X22 + 0x958]
	0x0395FDA4 LDR X23, [X23 + 0xB08]
	0x0395FDA8 LDR X29, [X29 + 0x8E8]
	0x0395FDAC LDR X28, [X28 + 0x8D8]
	0x0395FDB0 MOV X0, X25
	0x0395FDB4 MOV X1, X31
	0x0395FDB8 BL 0x3916198
	0x0395FDBC MOV X20, X0
	0x0395FDC0 MOV X0, X25
	0x0395FDC4 MOV X1, X31
	0x0395FDC8 BL 0x39162B4
	0x0395FDCC MOV X0, X19
	0x0395FDD0 MOV X1, X20
	0x0395FDD4 MOV X2, X31
	0x0395FDD8 BL 0x38FEBC8
	0x0395FDDC LDR X8, [X21]
	0x0395FDE0 MOV X19, X0
	0x0395FDE4 MOV X0, X8
	0x0395FDE8 BL 0x1C16F10
	0x0395FDEC LDR X2, [X22]
	0x0395FDF0 MOV X1, X19
	0x0395FDF4 MOV X20, X0
	0x0395FDF8 BL 0x2D9FFF4
	0x0395FDFC LDR X0, [X23]
	0x0395FE00 LDR W8, [X0 + 0xE0]
	0x0395FE04 CBNZ W8, 0x395FE0C
	0x0395FE08 BL 0x1C16DFC
	0x0395FE0C MOV X0, X25
	0x0395FE10 MOV W1, W31
	0x0395FE14 MOV X2, X31
	0x0395FE18 STR X27, [X31 + 0x38]
	0x0395FE1C STP W24, W26, [X31 + 0x10]
	0x0395FE20 STR X25, [X31 + 0x28]
	0x0395FE24 BL 0x3942EDC
	0x0395FE28 LDR X8, [X29]
	0x0395FE2C MOV X21, X0
	0x0395FE30 MOV X0, X8
	0x0395FE34 BL 0x1C16F10
	0x0395FE38 LDR X1, [X28]
	0x0395FE3C MOV X19, X0
	0x0395FE40 BL 0x2AA4804
	0x0395FE44 CBZ X21, 0x3960CAC
	0x0395FE48 ADRP X8, 0x7EF000
	0x0395FE4C LDR X8, [X8 + 0xDB0]
	0x0395FE50 ADRP X27, 0x7EF000
	0x0395FE54 ADRP X24, 0x7F0000
	0x0395FE58 ADRP X28, 0x7F0000
	0x0395FE5C ADRP X29, 0x7F0000
	0x0395FE60 ADRP X23, 0x7F0000
	0x0395FE64 ADRP X22, 0x796000
	0x0395FE68 LDR X27, [X27 + 0xDA0]
	0x0395FE6C LDR X24, [X24 + 0x950]
	0x0395FE70 LDR X28, [X28 + 0x8D0]
	0x0395FE74 LDR X29, [X29 + 0x20]
	0x0395FE78 LDR X23, [X23 + 0x8C0]
	0x0395FE7C LDR X22, [X22 + 0x9D8]
	0x0395FE80 LDR X1, [X8]
	0x0395FE84 ADD X8, X31, 0x80
	0x0395FE88 MOV X0, X21
	0x0395FE8C BL 0x301CB58
	0x0395FE90 LDR V0, [X31 + 0x8]
	0x0395FE94 LDR X8, [X31 + 0x90]
	0x0395FE98 STR V0, [X31 + 0x11]
	0x0395FE9C STR X8, [X31 + 0x120]
	0x0395FEA0 LDR X1, [X27]
	0x0395FEA4 ADD X0, X31, 0x110
	0x0395FEA8 BL 0x2BC4350
	0x0395FEAC TBZ X0, 0x0, 0x395FFE0
	0x0395FEB0 LDR X21, [X31 + 0x120]
	0x0395FEB4 CBZ X21, 0x3960CB4
	0x0395FEB8 CBZ X20, 0x3960CB8
	0x0395FEBC LDP X1, X2, [X21 + 0x10]
	0x0395FEC0 LDR X3, [X24]
	0x0395FEC4 MOV X0, X20
	0x0395FEC8 BL 0x2DA05B8
	0x0395FECC TBZ X0, 0x0, 0x395FEA0
	0x0395FED0 CBZ X19, 0x3960CCC
	0x0395FED4 LDR X1, [X21 + 0x20]
	0x0395FED8 LDR X3, [X28]
	0x0395FEDC ADD X2, X31, 0x138
	0x0395FEE0 MOV X0, X19
	0x0395FEE4 BL 0x2AA6B2C
	0x0395FEE8 TBZ X0, 0x0, 0x395FF30
	0x0395FEEC LDR X0, [X31 + 0x138]
	0x0395FEF0 CBZ X0, 0x3960CF0
	0x0395FEF4 LDR W10, [X0 + 0x1C]
	0x0395FEF8 LDR X8, [X0 + 0x10]
	0x0395FEFC LDR X9, [X29]
	0x0395FF00 ADD W10, W10, 0x1
	0x0395FF04 STR W10, [X0 + 0x1C]
	0x0395FF08 CBZ X8, 0x3960CE8
	0x0395FF0C LDRSW X10, [X0 + 0x18]
	0x0395FF10 LDR W11, [X8 + 0x18]
	0x0395FF14 CMP W10, W11
	0x0395FF18 B.CS 0x395FF98
	0x0395FF1C ADD W9, W10, 0x1
	0x0395FF20 ADD X8, X8, X10, 0x3, LSL
	0x0395FF24 STR W9, [X0 + 0x18]
	0x0395FF28 STR X21, [X8 + 0x20]
	0x0395FF2C B 0x395FEA0
	0x0395FF30 ADRP X8, 0x7F0000
	0x0395FF34 LDR X25, [X21 + 0x20]
	0x0395FF38 LDR X8, [X8 + 0x30]
	0x0395FF3C LDR X0, [X8]
	0x0395FF40 BL 0x1C16F10
	0x0395FF44 ADRP X8, 0x7F0000
	0x0395FF48 LDR X8, [X8 + 0x28]
	0x0395FF4C MOV X26, X0
	0x0395FF50 LDR X1, [X8]
	0x0395FF54 BL 0x301B7C4
	0x0395FF58 CBZ X26, 0x3960CEC
	0x0395FF5C LDR W10, [X26 + 0x1C]
	0x0395FF60 LDR X8, [X26 + 0x10]
	0x0395FF64 LDR X9, [X29]
	0x0395FF68 ADD W10, W10, 0x1
	0x0395FF6C STR W10, [X26 + 0x1C]
	0x0395FF70 CBZ X8, 0x3960CE4
	0x0395FF74 LDRSW X10, [X26 + 0x18]
	0x0395FF78 LDR W11, [X8 + 0x18]
	0x0395FF7C CMP W10, W11
	0x0395FF80 B.CS 0x395FFB0
	0x0395FF84 ADD W9, W10, 0x1
	0x0395FF88 ADD X8, X8, X10, 0x3, LSL
	0x0395FF8C STR W9, [X26 + 0x18]
	0x0395FF90 STR X21, [X8 + 0x20]
	0x0395FF94 B 0x395FFC8
	0x0395FF98 LDR X8, [X9 + 0x20]
	0x0395FF9C LDR X8, [X8 + 0xC0]
	0x0395FFA0 LDR X2, [X8 + 0x70]
	0x0395FFA4 MOV X1, X21
	0x0395FFA8 BL 0x301BF90
	0x0395FFAC B 0x395FEA0
	0x0395FFB0 LDR X8, [X9 + 0x20]
	0x0395FFB4 LDR X8, [X8 + 0xC0]
	0x0395FFB8 LDR X2, [X8 + 0x70]
	0x0395FFBC MOV X0, X26
	0x0395FFC0 MOV X1, X21
	0x0395FFC4 BL 0x301BF90
	0x0395FFC8 LDR X3, [X23]
	0x0395FFCC MOV X0, X19
	0x0395FFD0 MOV X1, X25
	0x0395FFD4 MOV X2, X26
	0x0395FFD8 BL 0x2AA5098
	0x0395FFDC B 0x395FEA0
	0x0395FFE0 ADRP X8, 0x7EF000
	0x0395FFE4 LDR X8, [X8 + 0xD98]
	0x0395FFE8 ADD X0, X31, 0x110
	0x0395FFEC LDR X1, [X8]
	0x0395FFF0 BL 0x2BC434C
	0x0395FFF4 ADRP X24, 0x7F0000
	0x0395FFF8 ADRP X25, 0x7EF000
	0x0395FFFC LDR X29, [X31 + 0x38]
	0x03960000 LDR X24, [X24 + 0x920]
	0x03960004 B 0x3EB1954
	0x03960008 ADRP X8, 0x7EF000
	0x0396000C LDR X8, [X8 + 0x8E8]
	0x03960010 LDR X0, [X8]
	0x03960014 BL 0x1C16F10
	0x03960018 ADRP X8, 0x7EF000
	0x0396001C LDR X8, [X8 + 0x8D8]
	0x03960020 MOV X27, X0
	0x03960024 LDR X1, [X8]
	0x03960028 BL 0x2AA4804
	0x0396002C CBZ X19, 0x3960CAC
	0x03960030 ADRP X8, 0x7EF000
	0x03960034 LDR X8, [X8 + 0x8C8]
	0x03960038 MOV X0, X19
	0x0396003C LDR X1, [X8]
	0x03960040 ADD X8, X31, 0x80
	0x03960044 BL 0x2AA54BC
	0x03960048 LDP V0, V1, [X31 + 0x80]
	0x0396004C LDR X8, [X31 + 0xA0]
	0x03960050 STP V0, V1, [X31 + 0xE0]
	0x03960054 STR X8, [X31 + 0x100]
	0x03960058 LDR X1, [X24]
	0x0396005C ADD X0, X31, 0xE0
	0x03960060 BL 0x2C0A728
	0x03960064 TBZ X0, 0x0, 0x39600E8
	0x03960068 LDR X20, [X31 + 0xF8]
	0x0396006C CBZ X20, 0x3960CB0
	0x03960070 LDR W8, [X20 + 0x18]
	0x03960074 LDR X21, [X31 + 0xF0]
	0x03960078 CMP W8, 0x1
	0x0396007C B.LE 0x396009C
	0x03960080 CBZ X27, 0x3960CC4
	0x03960084 LDR X3, [X23]
	0x03960088 MOV X0, X27
	0x0396008C MOV X1, X21
	0x03960090 MOV X2, X20
	0x03960094 BL 0x2AA5098
	0x03960098 B 0x3960058
	0x0396009C LDR X2, [X25]
	0x039600A0 MOV X0, X20
	0x039600A4 MOV W1, W31
	0x039600A8 BL 0x301BCCC
	0x039600AC CBZ X0, 0x3960CC8
	0x039600B0 LDR X8, [X0 + 0x38]
	0x039600B4 CBZ X8, 0x3960058
	0x039600B8 LDR X1, [X8 + 0x20]
	0x039600BC LDR X3, [X28]
	0x039600C0 ADD X2, X31, 0xD8
	0x039600C4 MOV X0, X19
	0x039600C8 BL 0x2AA6B2C
	0x039600CC TBZ X0, 0x0, 0x3960058
	0x039600D0 LDR X8, [X31 + 0xD8]
	0x039600D4 CBZ X8, 0x3960CFC
	0x039600D8 LDR W8, [X8 + 0x18]
	0x039600DC CMP W8, 0x2
	0x039600E0 B.LT 0x3960058
	0x039600E4 B 0x3960080
	0x039600E8 ADRP X8, 0x7EF000
	0x039600EC LDR X8, [X8 + 0x910]
	0x039600F0 ADD X0, X31, 0xE0
	0x039600F4 LDR X1, [X8]
	0x039600F8 BL 0x2C0A83C
	0x039600FC LDR X20, [X31 + 0x28]
	0x03960100 MOV X0, X20
	0x03960104 MOV X1, X31
	0x03960108 MOV X2, X31
	0x0396010C BL 0x3912114
	0x03960110 ADRP X8, 0x7ED000
	0x03960114 LDR X8, [X8 + 0xDE8]
	0x03960118 MOV X19, X0
	0x0396011C LDR X8, [X8]
	0x03960120 MOV X0, X8
	0x03960124 BL 0x1C16F10
	0x03960128 ADRP X8, 0x7ED000
	0x0396012C LDR X8, [X8 + 0xDE0]
	0x03960130 MOV X1, X19
	0x03960134 MOV X28, X0
	0x03960138 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0xA83000
	015 Move W8, [X19+2476]
	016 Move W28, W4
	017 Move X23, X3
	018 Move X22, X2
	019 Move X26, X1
	020 Move X27, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {123}
	025 Move X0, 0x79F000
	026 Move X0, [X0+2136]
	027 Call 0x1C17CF4
	028 Move X0, 0x7BF000
	029 Move X0, [X0+2256]
	030 Call 0x1C17CF4
	031 Move X0, 0x79F000
	032 Move X0, [X0+2192]
	033 Call 0x1C17CF4
	034 Move X0, 0x79F000
	035 Move X0, [X0+2184]
	036 Call 0x1C17CF4
	037 Move X0, 0x7F1000
	038 Move X0, [X0+2144]
	039 Call 0x1C17CF4
	040 Move X0, 0x7F0000
	041 Move X0, [X0+1296]
	042 Call 0x1C17CF4
	043 Move X0, 0x7F0000
	044 Move X0, [X0+488]
	045 Call 0x1C17CF4
	046 Move X0, 0x795000
	047 Move X0, [X0+3584]
	048 Call 0x1C17CF4
	049 Move X0, 0x7EF000
	050 Move X0, [X0+3504]
	051 Call 0x1C17CF4
	052 Move X0, 0x7BD000
	053 Move X0, [X0+1984]
	054 Call 0x1C17CF4
	055 Move X0, 0x7EF000
	056 Move X0, [X0+3512]
	057 Call 0x1C17CF4
	058 Move X0, 0x795000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x7EF000
	062 Move X0, [X0+3936]
	063 Call 0x1C17CF4
	064 Move X0, 0x7EF000
	065 Move X0, [X0+3600]
	066 Call 0x1C17CF4
	067 Move X0, 0x7F1000
	068 Move X0, [X0+448]
	069 Call 0x1C17CF4
	070 Move X0, 0x7F1000
	071 Move X0, [X0+2032]
	072 Call 0x1C17CF4
	073 Move X0, 0x7F1000
	074 Move X0, [X0+2152]
	075 Call 0x1C17CF4
	076 Move X0, 0x7F0000
	077 Move X0, [X0+2624]
	078 Call 0x1C17CF4
	079 Move X0, 0x7F1000
	080 Move X0, [X0+2048]
	081 Call 0x1C17CF4
	082 Move X0, 0x7F0000
	083 Move X0, [X0+2616]
	084 Call 0x1C17CF4
	085 Move X0, 0x7F1000
	086 Move X0, [X0+456]
	087 Call 0x1C17CF4
	088 Move X0, 0x7EF000
	089 Move X0, [X0+3608]
	090 Call 0x1C17CF4
	091 Move X0, 0x7F1000
	092 Move X0, [X0+2088]
	093 Call 0x1C17CF4
	094 Move X0, 0x7EF000
	095 Move X0, [X0+3560]
	096 Call 0x1C17CF4
	097 Move X0, 0x7EF000
	098 Move X0, [X0+3568]
	099 Call 0x1C17CF4
	100 Move X0, 0x79C000
	101 Move X0, [X0+1952]
	102 Call 0x1C17CF4
	103 Move X0, 0x795000
	104 Move X0, [X0+1448]
	105 Call 0x1C17CF4
	106 Move X0, 0x7F0000
	107 Move X0, [X0+1320]
	108 Call 0x1C17CF4
	109 Move X0, 0x7F0000
	110 Move X0, [X0+1528]
	111 Call 0x1C17CF4
	112 Move X0, 0x7F0000
	113 Move X0, [X0+3168]
	114 Call 0x1C17CF4
	115 Move X0, 0x7F1000
	116 Move X0, [X0+2160]
	117 Call 0x1C17CF4
	118 Move X0, 0x7F1000
	119 Move X0, [X0+2168]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X19+2476], W8
	123 Compare X27, 0
	124 JumpIfEqual {788}
	125 Move X10, 0x7F0000
	126 Move X8, [X27]
	127 Move X10, [X10+488]
	128 Move X19, 0x795000
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move X1, [X10]
	131 Move X19, [X19+1448]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X27
	141 Move W2, W31
	142 Call 0x1C5D788
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Add X8, X8, X9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X24, 0x7F1000
	149 Move X24, [X24+2168]
	150 Move X0, X27
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, [X19]
	153 Move W19, W0
	154 Move W9, [X8+224]
	155 Compare W9, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X8
	158 Call 0x1C17DFC
	159 NotImplemented "Instruction UDIV not yet implemented."
	160 Move W0, 1
	161 Move X2, X31
	162 Call Math.Max, X0, X1
	163 Move X8, [X24]
	164 Move W19, W0
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {171}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X8, [X24]
	171 Move X9, [X8+184]
	172 Move X25, 0x7F1000
	173 Move X20, [X9+8]
	174 Move X25, [X25+2144]
	175 Compare X20, 0
	176 JumpIfNotEqual {199}
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {183}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move X8, [X24]
	183 Move X9, 0x7F0000
	184 Move X8, [X8+184]
	185 Move X9, [X9+1296]
	186 Move X21, [X8]
	187 Move X0, [X9]
	188 Call 0x1C17F10
	189 Move X8, 0x7F1000
	190 Move X8, [X8+2160]
	191 Move X1, X21
	192 Move X3, X31
	193 Move X20, X0
	194 Move X2, [X8]
	195 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	196 Move X8, [X24]
	197 Move X8, [X8+184]
	198 Move [X8+8], X20
	199 Move X2, [X25]
	200 Move X0, X26
	201 Move X1, X20
	202 Call 0x21CA5A4, X0, X1
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Add W20, W0, 1
	205 Move X8, 0x7F1000
	206 Move X8, [X8+2088]
	207 Move X0, [X8]
	208 Call 0x1C17F10
	209 Move X8, 0x7F1000
	210 Move X8, [X8+2048]
	211 Move X19, X0
	212 Move X1, [X8]
	213 Call List`1<Object>..ctor, X0
	214 Move X8, 0x79C000
	215 Move X8, [X8+1952]
	216 Move W1, W20
	217 Move X0, [X8]
	218 Call 0x1C17D6C
	219 Move X8, 0x7F0000
	220 Move X8, [X8+1320]
	221 Move X20, X0
	222 Move X8, [X8]
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X0, X27
	229 Move X1, X26
	230 Move X2, X22
	231 Move X3, X23
	232 Move X4, X20
	233 Move X5, X31
	234 Call ProBuilderMesh.Create, X0, X1, X2, X3, X4
	235 Compare X19, 0
	236 JumpIfNotEqual {704}
	237 Move [X31+20], W20
	238 Move X19, 0x79F000
	239 Move X19, [X19+2184]
	240 Move X0, [X19]
	241 Call 0x1C17F10
	242 Move X20, 0x79F000
	243 Move X20, [X20+2192]
	244 Move X21, X0
	245 Move X1, [X20]
	246 Call Dictionary`2<Int32, Int32>..ctor, X0
	247 Move X0, X22
	248 Move X1, X21
	249 Move X2, X31
	250 Move [X31+8], X21
	251 Call SharedVertex.GetSharedVertexLookup, X0, X1
	252 Move X0, [X19]
	253 Call 0x1C17F10
	254 Move X1, [X20]
	255 Move X21, X0
	256 Call Dictionary`2<Int32, Int32>..ctor, X0
	257 Move X0, X23
	258 Move X1, X21
	259 Move X2, X31
	260 Move [X31], X21
	261 Call SharedVertex.GetSharedVertexLookup, X0, X1
	262 Move X8, 0x7F1000
	263 Move X8, [X8+2088]
	264 Move X0, [X8]
	265 Call 0x1C17F10
	266 Move X8, 0x7F1000
	267 Move X8, [X8+2048]
	268 Move [X31+24], X0
	269 Move X1, [X8]
	270 Call List`1<Object>..ctor, X0
	271 Move X8, 0x7EF000
	272 Move X8, [X8+3560]
	273 Move X0, [X8]
	274 Call 0x1C17F10
	275 Move X8, 0x7F1000
	276 Move X8, [X8+456]
	277 Move X23, X0
	278 Move X1, [X8]
	279 Call List`1<Object>..ctor, X0
	280 Move X8, 0x7EF000
	281 Move X8, [X8+3568]
	282 Move X0, [X8]
	283 Call 0x1C17F10
	284 Move X8, 0x7F0000
	285 Move X8, [X8+2616]
	286 Move X21, X0
	287 Move X1, [X8]
	288 Call List`1<Object>..ctor, X0
	289 Move X0, [X19]
	290 Call 0x1C17F10
	291 Move X1, [X20]
	292 Move X25, X0
	293 Call Dictionary`2<Int32, Int32>..ctor, X0
	294 Compare X26, 0
	295 JumpIfEqual {788}
	296 Move X10, 0x7EF000
	297 Move X8, [X26]
	298 Move X10, [X10+3504]
	299 NotImplemented "Instruction LDRH not yet implemented."
	300 Move X1, [X10]
	301 Compare X9, 0
	302 JumpIfEqual {309}
	303 Move X10, [X8+176]
	304 Add X10, X10, 8
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Subtract X9, X9, 1
	308 Add X10, X10, 16
	309 Move X0, X26
	310 Move W2, W31
	311 Call 0x1C5D788
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Add X8, X8, X9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X26
	318 Move [X31+56], X21
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move [X31+40], X0
	321 Compare X0, 0
	322 JumpIfEqual {789}
	323 Move W8, W28
	324 Move [X31+32], X8
	325 Move X22, 0x795000
	326 Move X21, 0x7BD000
	327 Move X19, 0x7EF000
	328 Move X26, 0x7F1000
	329 Move X24, 0x79F000
	330 Move X22, [X22+3608]
	331 Move X21, [X21+1984]
	332 Move X19, [X19+3936]
	333 Move X26, [X26+448]
	334 Move X24, [X24+2136]
	335 Move X20, X0
	336 Move X8, [X20]
	337 Move X1, [X22]
	338 NotImplemented "Instruction LDRH not yet implemented."
	339 Compare X9, 0
	340 JumpIfEqual {347}
	341 Move X10, [X8+176]
	342 Add X10, X10, 8
	343 NotImplemented "Instruction LDUR not yet implemented."
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Subtract X9, X9, 1
	346 Add X10, X10, 16
	347 Move X0, X20
	348 Move W2, W31
	349 Call 0x1C5D788
	350 NotImplemented "Instruction LDRSW not yet implemented."
	351 Add X8, X8, X9
	352 Add X0, X8, 312
	353 Move X8, [X0]
	354 Move X1, [X0+8]
	355 Move X0, X20
	356 NotImplemented "Instruction BLR not yet implemented."
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {647}
	361 Move X8, [X20]
	362 Move X10, 0x7EF000
	363 NotImplemented "Instruction LDRH not yet implemented."
	364 Move X10, [X10+3512]
	365 Move X1, [X10]
	366 Compare X9, 0
	367 JumpIfEqual {374}
	368 Move X10, [X8+176]
	369 Add X10, X10, 8
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Subtract X9, X9, 1
	373 Add X10, X10, 16
	374 Move X0, X20
	375 Move W2, W31
	376 Call 0x1C5D788
	377 NotImplemented "Instruction LDRSW not yet implemented."
	378 Add X8, X8, X9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X1, [X0+8]
	382 Move X0, X20
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Compare X23, 0
	385 JumpIfEqual {778}
	386 Move X28, X0
	387 Compare X0, 0
	388 JumpIfEqual {779}
	389 Move W20, [X23+24]
	390 Move X0, X28
	391 Move X1, X31
	392 Call Face.get_distinctIndexes, X0
	393 Compare X0, 0
	394 JumpIfEqual {777}
	395 Move X8, 0x7F0000
	396 Move X8, [X8+3168]
	397 Move X1, [X8]
	398 Call ReadOnlyCollection`1<Int32>.get_Count, X0
	399 Move X9, [X31+32]
	400 Add W8, W0, W20
	401 Move X8, W8
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Move X8, 0x79C000
	404 Move X8, [X8+1952]
	405 Move X0, [X8]
	406 Move W1, [X31+20]
	407 Call 0x1C17D6C
	408 Move X5, X0
	409 Move X1, [X31+56]
	410 Move X3, [X31]
	411 Move X2, [X31+8]
	412 Move X0, X23
	413 Move X4, X25
	414 Call CombineMeshes.CreateMeshFromSplit, X0, X1, X2, X3, X4, X5
	415 Move X1, X0
	416 Move X0, [X31+24]
	417 Compare X0, 0
	418 JumpIfEqual {786}
	419 Move X9, 0x7F1000
	420 Move W10, [X0+28]
	421 Move X8, [X0+16]
	422 Move X9, [X9+2032]
	423 Add W10, W10, 1
	424 Move X9, [X9]
	425 Move [X0+28], W10
	426 Compare X8, 0
	427 JumpIfEqual {785}
	428 NotImplemented "Instruction LDRSW not yet implemented."
	429 Move W11, [X8+24]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Add W9, W10, 1
	432 Add X8, X8, X10
	433 Move [X0+24], W9
	434 Move [X8+32], X1
	435 Move X8, [X9+32]
	436 Move X8, [X8+192]
	437 Move X2, [X8+112]
	438 Call List`1<Object>.AddWithResize, X0, X1
	439 Move W2, [X23+24]
	440 Move W8, [X23+28]
	441 Add W8, W8, 1
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move [X23+24], W31
	444 Move [X23+28], W8
	445 Move X0, [X23+16]
	446 Move W1, W31
	447 Move X3, X31
	448 Call Array.Clear, X0, X1, X2
	449 Move X20, [X31+56]
	450 Compare X20, 0
	451 JumpIfEqual {787}
	452 Move W2, [X20+24]
	453 Move W8, [X20+28]
	454 Add W8, W8, 1
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move [X20+24], W31
	457 Move [X20+28], W8
	458 Move X0, [X20+16]
	459 Move W1, W31
	460 Move X3, X31
	461 Call Array.Clear, X0, X1, X2
	462 Compare X25, 0
	463 JumpIfEqual {784}
	464 Move X8, 0x7BF000
	465 Move X8, [X8+2256]
	466 Move X1, [X8]
	467 Move X0, X25
	468 Call Dictionary`2<Int32, Int32>.Clear, X0
	469 Move X0, X28
	470 Move X1, X31
	471 Call Face.get_distinctIndexes, X0
	472 Compare X0, 0
	473 JumpIfEqual {780}
	474 Move X8, 0x7F0000
	475 Move X8, [X8+1528]
	476 Move X1, [X8]
	477 Call ReadOnlyCollection`1<Int32>.GetEnumerator, X0
	478 Move X29, X0
	479 Compare X0, 0
	480 JumpIfEqual {638}
	481 Move X8, [X29]
	482 Move X1, [X22]
	483 NotImplemented "Instruction LDRH not yet implemented."
	484 Compare X9, 0
	485 JumpIfEqual {492}
	486 Move X10, [X8+176]
	487 Add X10, X10, 8
	488 NotImplemented "Instruction LDUR not yet implemented."
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Subtract X9, X9, 1
	491 Add X10, X10, 16
	492 Move X0, X29
	493 Move W2, W31
	494 Call 0x1C5D788
	495 NotImplemented "Instruction LDRSW not yet implemented."
	496 Add X8, X8, X9
	497 Add X0, X8, 312
	498 Move X8, [X0]
	499 Move X1, [X0+8]
	500 Move X0, X29
	501 NotImplemented "Instruction BLR not yet implemented."
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {578}
	506 Move X8, [X29]
	507 Move X1, [X21]
	508 NotImplemented "Instruction LDRH not yet implemented."
	509 Compare X9, 0
	510 JumpIfEqual {517}
	511 Move X10, [X8+176]
	512 Add X10, X10, 8
	513 NotImplemented "Instruction LDUR not yet implemented."
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Subtract X9, X9, 1
	516 Add X10, X10, 16
	517 Move X0, X29
	518 Move W2, W31
	519 Call 0x1C5D788
	520 NotImplemented "Instruction LDRSW not yet implemented."
	521 Add X8, X8, X9
	522 Add X0, X8, 312
	523 Move X8, [X0]
	524 Move X1, [X0+8]
	525 Move X0, X29
	526 NotImplemented "Instruction BLR not yet implemented."
	527 Move X8, [X27]
	528 Move X1, [X19]
	529 Move W20, W0
	530 NotImplemented "Instruction LDRH not yet implemented."
	531 Compare X9, 0
	532 JumpIfEqual {539}
	533 Move X10, [X8+176]
	534 Add X10, X10, 8
	535 NotImplemented "Instruction LDUR not yet implemented."
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Subtract X9, X9, 1
	538 Add X10, X10, 16
	539 Move X0, X27
	540 Move W2, W31
	541 Call 0x1C5D788
	542 NotImplemented "Instruction LDRSW not yet implemented."
	543 Add X8, X8, X9
	544 Add X0, X8, 312
	545 Move X8, [X0]
	546 Move X2, [X0+8]
	547 Move X0, X27
	548 Move W1, W20
	549 NotImplemented "Instruction BLR not yet implemented."
	550 Move X1, X0
	551 Move W10, [X23+28]
	552 Move X8, [X23+16]
	553 Move X9, [X26]
	554 Add W10, W10, 1
	555 Move [X23+28], W10
	556 Compare X8, 0
	557 JumpIfEqual {636}
	558 NotImplemented "Instruction LDRSW not yet implemented."
	559 Move W11, [X8+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add W9, W10, 1
	562 Add X8, X8, X10
	563 Move [X23+24], W9
	564 Move [X8+32], X1
	565 Move X8, [X9+32]
	566 Move X8, [X8+192]
	567 Move X2, [X8+112]
	568 Move X0, X23
	569 Call List`1<Object>.AddWithResize, X0, X1
	570 Compare X25, 0
	571 JumpIfEqual {637}
	572 Move W8, [X23+24]
	573 Move X3, [X24]
	574 Subtract W2, W8, 1
	575 Move X0, X25
	576 Move W1, W20
	577 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	578 Move [X31+48], X31
	579 Move W20, 9
	580 Compare X29, 0
	581 JumpIfEqual {605}
	582 Move X8, [X29]
	583 Move X10, 0x795000
	584 NotImplemented "Instruction LDRH not yet implemented."
	585 Move X10, [X10+3584]
	586 Move X1, [X10]
	587 Compare X9, 0
	588 JumpIfEqual {595}
	589 Move X10, [X8+176]
	590 Add X10, X10, 8
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Subtract X9, X9, 1
	594 Add X10, X10, 16
	595 Move X0, X29
	596 Move W2, W31
	597 Call 0x1C5D788
	598 NotImplemented "Instruction LDRSW not yet implemented."
	599 Add X8, X8, X9
	600 Add X0, X8, 312
	601 Move X8, [X0]
	602 Move X1, [X0+8]
	603 Move X0, X29
	604 NotImplemented "Instruction BLR not yet implemented."
	605 Move X0, [X31+48]
	606 Compare X0, 0
	607 JumpIfNotEqual {781}
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Compare W20, 0
	610 JumpIfNotEqual {650}
	611 Move X0, [X31+56]
	612 Compare X0, 0
	613 JumpIfEqual {782}
	614 Move X9, 0x7EF000
	615 Move W10, [X0+28]
	616 Move X8, [X0+16]
	617 Move X9, [X9+3600]
	618 Move X20, [X31+40]
	619 Add W10, W10, 1
	620 Move X9, [X9]
	621 Move [X0+28], W10
	622 Compare X8, 0
	623 JumpIfEqual {783}
	624 NotImplemented "Instruction LDRSW not yet implemented."
	625 Move W11, [X8+24]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Add W9, W10, 1
	628 Add X8, X8, X10
	629 Move [X0+24], W9
	630 Move [X8+32], X28
	631 Move X8, [X9+32]
	632 Move X8, [X8+192]
	633 Move X2, [X8+112]
	634 Move X1, X28
	635 Call List`1<Object>.AddWithResize, X0, X1
	636 Call 0x1C17F20
	637 Call 0x1C17F20
	638 Call 0x1C17F20
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Call 0x3EB2AD0
	641 Move X8, [X0]
	642 Move [X31+48], X8
	643 Call 0x3EB2AE0
	644 Move W20, W31
	645 Compare X29, 0
	646 JumpIfNotEqual {582}
	647 Move X21, [X31+56]
	648 Move X19, X31
	649 Move W20, 10
	650 Move X21, [X31+56]
	651 Move X19, X31
	652 Move X8, [X31+40]
	653 Compare X8, 0
	654 JumpIfEqual {680}
	655 Move X10, 0x795000
	656 Move X8, [X8]
	657 Move X10, [X10+3584]
	658 NotImplemented "Instruction LDRH not yet implemented."
	659 Move X1, [X10]
	660 Compare X9, 0
	661 JumpIfEqual {668}
	662 Move X10, [X8+176]
	663 Add X10, X10, 8
	664 NotImplemented "Instruction LDUR not yet implemented."
	665 NotImplemented "Instruction CMP not yet implemented."
	666 Subtract X9, X9, 1
	667 Add X10, X10, 16
	668 Move X22, [X31+40]
	669 Move W2, W31
	670 Move X0, X22
	671 Call 0x1C5D788
	672 NotImplemented "Instruction LDRSW not yet implemented."
	673 Move X22, [X31+40]
	674 Add X8, X8, X9
	675 Add X0, X8, 312
	676 Move X8, [X0]
	677 Move X1, [X0+8]
	678 Move X0, X22
	679 NotImplemented "Instruction BLR not yet implemented."
	680 Compare X19, 0
	681 JumpIfNotEqual {790}
	682 Move X19, [X31+24]
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Compare W20, 0
	685 JumpIfNotEqual {726}
	686 Compare X23, 0
	687 JumpIfEqual {788}
	688 Move W8, [X23+24]
	689 NotImplemented "Instruction CMP not yet implemented."
	690 Move X8, 0x79C000
	691 Move X8, [X8+1952]
	692 Move W1, [X31+20]
	693 Move X0, [X8]
	694 Call 0x1C17D6C
	695 Move X3, [X31]
	696 Move X2, [X31+8]
	697 Move X5, X0
	698 Move X0, X23
	699 Move X1, X21
	700 Move X4, X25
	701 Call CombineMeshes.CreateMeshFromSplit, X0, X1, X2, X3, X4, X5
	702 Compare X19, 0
	703 JumpIfEqual {788}
	704 Move X9, 0x7F1000
	705 Move X9, [X9+2032]
	706 Move W10, [X19+28]
	707 Move X8, [X19+16]
	708 Move X9, [X9]
	709 Add W10, W10, 1
	710 Move [X19+28], W10
	711 Compare X8, 0
	712 JumpIfEqual {788}
	713 NotImplemented "Instruction LDRSW not yet implemented."
	714 Move W11, [X8+24]
	715 Move X1, X0
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Add W9, W10, 1
	718 Add X8, X8, X10
	719 Move [X19+24], W9
	720 Move [X8+32], X1
	721 Move X8, [X9+32]
	722 Move X0, X19
	723 Move X8, [X8+192]
	724 Move X2, [X8+112]
	725 Call List`1<Object>.AddWithResize, X0, X1
	726 Move X0, X19
	727 Move X20, [X31+144]
	728 Move X19, [X31+152]
	729 Move X22, [X31+128]
	730 Move X21, [X31+136]
	731 Move X24, [X31+112]
	732 Move X23, [X31+120]
	733 Move X26, [X31+96]
	734 Move X25, [X31+104]
	735 Move X28, [X31+80]
	736 Move X27, [X31+88]
	737 Move X29, [X31+64]
	738 Move X30, [X31+72]
	739 Add X31, X31, 160
	740 Return X0
	741 Move X20, X1
	742 Move X19, X0
	743 Move [X31+48], X31
	744 Compare X29, 0
	745 JumpIfEqual {769}
	746 Move X8, [X29]
	747 Move X10, 0x795000
	748 NotImplemented "Instruction LDRH not yet implemented."
	749 Move X10, [X10+3584]
	750 Move X1, [X10]
	751 Compare X9, 0
	752 JumpIfEqual {759}
	753 Move X10, [X8+176]
	754 Add X10, X10, 8
	755 NotImplemented "Instruction LDUR not yet implemented."
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Subtract X9, X9, 1
	758 Add X10, X10, 16
	759 Move X0, X29
	760 Move W2, W31
	761 Call 0x1C5D788
	762 NotImplemented "Instruction LDRSW not yet implemented."
	763 Add X8, X8, X9
	764 Add X0, X8, 312
	765 Move X8, [X0]
	766 Move X1, [X0+8]
	767 Move X0, X29
	768 NotImplemented "Instruction BLR not yet implemented."
	769 Move X8, [X31+48]
	770 Move X21, [X31+56]
	771 Move X0, X19
	772 Move X1, X20
	773 Compare X8, 0
	774 JumpIfEqual {798}
	775 Move X0, [X31+48]
	776 Call 0x1C17F18
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F20
	780 Call 0x1C17F20
	781 Call 0x1C17F18
	782 Call 0x1C17F20
	783 Call 0x1C17F20
	784 Call 0x1C17F20
	785 Call 0x1C17F20
	786 Call 0x1C17F20
	787 Call 0x1C17F20
	788 Call 0x1C17F20
	789 Call 0x1C17F20
	790 Move X0, X19
	791 Call 0x1C17F18
	792 Move X20, X1
	793 Move X19, X0
	794 Compare X29, 0
	795 JumpIfNotEqual {746}
	796 Move X21, X20
	797 Move X21, [X31+56]
	798 NotImplemented "Instruction CMP not yet implemented."
	799 Call 0x3EB2AD0
	800 Move X19, [X0]
	801 Call 0x3EB2AE0
	802 Move W20, W31
	803 Move X20, X0
	804 Move X19, X31
	805 Move X20, X0
	806 Move X8, [X31+40]
	807 Compare X8, 0
	808 JumpIfEqual {833}
	809 Move X8, [X31+40]
	810 Move X10, 0x794000
	811 Move X8, [X8]
	812 Move X10, [X10+3584]
	813 NotImplemented "Instruction LDRH not yet implemented."
	814 Move X1, [X10]
	815 Compare X9, 0
	816 JumpIfEqual {823}
	817 Move X10, [X8+176]
	818 Add X10, X10, 8
	819 NotImplemented "Instruction LDUR not yet implemented."
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Subtract X9, X9, 1
	822 Add X10, X10, 16
	823 Move X0, [X31+40]
	824 Move W2, W31
	825 Call 0x1C5D788
	826 NotImplemented "Instruction LDRSW not yet implemented."
	827 Add X8, X8, X9
	828 Add X0, X8, 312
	829 Move X8, [X0]
	830 Move X1, [X0+8]
	831 Move X0, [X31+40]
	832 NotImplemented "Instruction BLR not yet implemented."
	833 Compare X19, 0
	834 JumpIfNotEqual {837}
	835 Move X0, X20
	836 Call 0x1D2D690
	837 Move X0, X19
	838 Call 0x1C17F18
	839 Call 0x1991590

