Type: UnityEngine.ProBuilder.MeshOperations.AppendElements

Method: UnityEngine.ProBuilder.Face AppendFace(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3[] positions, UnityEngine.Color[] colors, UnityEngine.Vector2[] uv0s, UnityEngine.Vector4[] uv2s, UnityEngine.Vector4[] uv3s, UnityEngine.ProBuilder.Face face, System.Int32[] common)

Disassembly:
	0x0394FA28 MOV X1, X24
	0x0394FA2C MOV X22, X0
	0x0394FA30 BL 0x301B8E0
	0x0394FA34 LDR X0, [X20]
	0x0394FA38 BL 0x1C16F10
	0x0394FA3C LDR X1, [X25]
	0x0394FA40 MOV X24, X0
	0x0394FA44 BL 0x301B7C4
	0x0394FA48 CBZ X23, 0x394FCC4
	0x0394FA4C ADRP X8, 0x7AB000
	0x0394FA50 LDR X8, [X8 + 0x848]
	0x0394FA54 ADRP X27, 0x7AB000
	0x0394FA58 ADRP X28, 0x800000
	0x0394FA5C ADRP X20, 0x7FF000
	0x0394FA60 ADRP X21, 0x800000
	0x0394FA64 LDR X27, [X27 + 0x838]
	0x0394FA68 LDR X28, [X28 + 0x1D0]
	0x0394FA6C LDR X20, [X20 + 0x20]
	0x0394FA70 LDR X21, [X21 + 0x1C0]
	0x0394FA74 LDR X1, [X8]
	0x0394FA78 ADD X8, X31, 0x18
	0x0394FA7C MOV X0, X23
	0x0394FA80 BL 0x2DAAA30
	0x0394FA84 LDUR V0, [X31 + 0x18]
	0x0394FA88 LDR X8, [X31 + 0x28]
	0x0394FA8C STR V0, [X31 + 0x3]
	0x0394FA90 STR X8, [X31 + 0x40]
	0x0394FA94 LDR X1, [X27]
	0x0394FA98 ADD X0, X31, 0x30
	0x0394FA9C BL 0x2BBDA6C
	0x0394FAA0 TBZ X0, 0x0, 0x394FB5C
	0x0394FAA4 CBZ X29, 0x394FCBC
	0x0394FAA8 LDRSW X8, [X31 + 0x40]
	0x0394FAAC LDR W9, [X29 + 0x18]
	0x0394FAB0 CMP W8, W9
	0x0394FAB4 B.CS 0x394FCB0
	0x0394FAB8 ADD X8, X29, X8, 0x3, LSL
	0x0394FABC LDR X0, [X8 + 0x20]
	0x0394FAC0 CBZ X0, 0x394FCC0
	0x0394FAC4 MOV W1, W31
	0x0394FAC8 MOV X2, X31
	0x0394FACC BL 0x39282DC
	0x0394FAD0 MOV W1, W0
	0x0394FAD4 CBZ X22, 0x394FCB4
	0x0394FAD8 LDR X2, [X28]
	0x0394FADC MOV X0, X22
	0x0394FAE0 BL 0x301BCCC
	0x0394FAE4 MOV X26, X0
	0x0394FAE8 LDR X0, [X20]
	0x0394FAEC BL 0x1C16F10
	0x0394FAF0 MOV X25, X0
	0x0394FAF4 MOV X1, X26
	0x0394FAF8 MOV X2, X31
	0x0394FAFC BL 0x393DFBC
	0x0394FB00 CBZ X24, 0x394FCB8
	0x0394FB04 LDR W10, [X24 + 0x1C]
	0x0394FB08 LDR X8, [X24 + 0x10]
	0x0394FB0C LDR X9, [X21]
	0x0394FB10 ADD W10, W10, 0x1
	0x0394FB14 STR W10, [X24 + 0x1C]
	0x0394FB18 CBZ X8, 0x394FCAC
	0x0394FB1C LDRSW X10, [X24 + 0x18]
	0x0394FB20 LDR W11, [X8 + 0x18]
	0x0394FB24 CMP W10, W11
	0x0394FB28 B.CS 0x394FB40
	0x0394FB2C ADD W9, W10, 0x1
	0x0394FB30 ADD X8, X8, X10, 0x3, LSL
	0x0394FB34 STR W9, [X24 + 0x18]
	0x0394FB38 STR X25, [X8 + 0x20]
	0x0394FB3C B 0x394FA94
	0x0394FB40 LDR X8, [X9 + 0x20]
	0x0394FB44 LDR X8, [X8 + 0xC0]
	0x0394FB48 LDR X2, [X8 + 0x70]
	0x0394FB4C MOV X0, X24
	0x0394FB50 MOV X1, X25
	0x0394FB54 BL 0x301BF90
	0x0394FB58 B 0x394FA94
	0x0394FB5C ADRP X8, 0x7AB000
	0x0394FB60 LDR X8, [X8 + 0x830]
	0x0394FB64 ADD X0, X31, 0x30
	0x0394FB68 LDR X1, [X8]
	0x0394FB6C BL 0x2BBDA68
	0x0394FB70 LDR W20, [X31 + 0x14]
	0x0394FB74 AND W1, W20, 0x1
	0x0394FB78 MOV X0, X24
	0x0394FB7C BL 0x394FDA4
	0x0394FB80 CBZ X0, 0x394FC48
	0x0394FB84 ADRP X8, 0x7FF000
	0x0394FB88 LDR X8, [X8 + 0x2A8]
	0x0394FB8C MOV X24, X0
	0x0394FB90 MOV X0, X23
	0x0394FB94 LDR X1, [X8]
	0x0394FB98 BL 0x21D7880
	0x0394FB9C STR X0, [X24 + 0x20]
	0x0394FBA0 ADRP X8, 0x7FE000
	0x0394FBA4 LDR X23, [X19 + 0x28]
	0x0394FBA8 LDR X8, [X8 + 0xDF0]
	0x0394FBAC LDR X0, [X8]
	0x0394FBB0 BL 0x1C16F10
	0x0394FBB4 ADRP X8, 0x7FE000
	0x0394FBB8 LDR X8, [X8 + 0xDD8]
	0x0394FBBC MOV X1, X23
	0x0394FBC0 MOV X20, X0
	0x0394FBC4 LDR X2, [X8]
	0x0394FBC8 BL 0x301B8E0
	0x0394FBCC ADRP X8, 0x800000
	0x0394FBD0 LDR X8, [X8 + 0x1B8]
	0x0394FBD4 MOVZ W1, 0x1
	0x0394FBD8 LDR X0, [X8]
	0x0394FBDC BL 0x1C16D6C
	0x0394FBE0 CBZ X0, 0x394FCC4
	0x0394FBE4 LDR W8, [X0 + 0x18]
	0x0394FBE8 CBZ W8, 0x394FD10
	0x0394FBEC LDR X21, [X31 + 0x8]
	0x0394FBF0 MOV X1, X22
	0x0394FBF4 MOV X2, X20
	0x0394FBF8 MOV X4, X31
	0x0394FBFC MOV X3, X21
	0x0394FC00 MOV X5, X31
	0x0394FC04 STR X24, [X0 + 0x20]
	0x0394FC08 BL 0x39019E8
	0x0394FC0C MOV X0, X19
	0x0394FC10 MOV X1, X22
	0x0394FC14 MOV W2, W31
	0x0394FC18 MOV X3, X31
	0x0394FC1C BL 0x3916CF4
	0x0394FC20 MOV X0, X19
	0x0394FC24 MOV X1, X20
	0x0394FC28 MOV X2, X31
	0x0394FC2C BL 0x39159C8
	0x0394FC30 MOV X0, X19
	0x0394FC34 MOV X1, X21
	0x0394FC38 MOV X2, X31
	0x0394FC3C BL 0x3916234
	0x0394FC40 LDR X0, [X24 + 0x10]
	0x0394FC44 B 0x394FC8C
	0x0394FC48 ADRP X8, 0x800000
	0x0394FC4C ADRP X9, 0x7FE000
	0x0394FC50 LDR X8, [X8 + 0x1D8]
	0x0394FC54 LDR X9, [X9 + 0xAD0]
	0x0394FC58 ANDS W31, W20, 0x1
	0x0394FC5C LDR X0, [X9]
	0x0394FC60 ADRP X9, 0x800000
	0x0394FC64 LDR X9, [X9 + 0x1E0]
	0x0394FC68 CSEL X8, X8, X9, NE
	0x0394FC6C LDR W9, [X0 + 0xE0]
	0x0394FC70 LDR X19, [X8]
	0x0394FC74 CBNZ W9, 0x394FC7C
	0x0394FC78 BL 0x1C16DFC
	0x0394FC7C MOV X0, X19
	0x0394FC80 MOV X1, X31
	0x0394FC84 BL 0x3906FFC
	0x0394FC88 MOV X0, X31
	0x0394FC8C LDP X20, X19, [X31 + 0xA0]
	0x0394FC90 LDP X22, X21, [X31 + 0x90]
	0x0394FC94 LDP X24, X23, [X31 + 0x80]
	0x0394FC98 LDP X26, X25, [X31 + 0x70]
	0x0394FC9C LDP X28, X27, [X31 + 0x60]
	0x0394FCA0 LDP X29, X30, [X31 + 0x50]
	0x0394FCA4 ADD X31, X31, 0xB0
	0x0394FCA8 RET
	0x0394FCAC BL 0x1C16F20
	0x0394FCB0 BL 0x1C16F28
	0x0394FCB4 BL 0x1C16F20
	0x0394FCB8 BL 0x1C16F20
	0x0394FCBC BL 0x1C16F20
	0x0394FCC0 BL 0x1C16F20
	0x0394FCC4 BL 0x1C16F20
	0x0394FCC8 ADRP X0, 0x7A9000
	0x0394FCCC LDR X0, [X0 + 0x528]
	0x0394FCD0 BL 0x1C16D08
	0x0394FCD4 BL 0x1C16F10
	0x0394FCD8 MOV X19, X0
	0x0394FCDC ADRP X0, 0x7FE000
	0x0394FCE0 LDR X0, [X0 + 0xE90]
	0x0394FCE4 BL 0x1C16D08
	0x0394FCE8 MOV X1, X0
	0x0394FCEC MOV X0, X19
	0x0394FCF0 MOV X2, X31
	0x0394FCF4 BL 0x330E100
	0x0394FCF8 ADRP X0, 0x800000
	0x0394FCFC LDR X0, [X0 + 0x1E8]
	0x0394FD00 BL 0x1C16D08
	0x0394FD04 MOV X1, X0
	0x0394FD08 MOV X0, X19
	0x0394FD0C BL 0x1C16DEC
	0x0394FD10 BL 0x1C16F28
	0x0394FD14 B 0x394FD30
	0x0394FD18 B 0x394FD30
	0x0394FD1C B 0x394FD30
	0x0394FD20 B 0x394FD30
	0x0394FD24 B 0x394FD30
	0x0394FD28 B 0x394FD30
	0x0394FD2C B 0x394FD30
	0x0394FD30 LDR W20, [X31 + 0x14]
	0x0394FD34 CMP W1, 0x1
	0x0394FD38 B.NE 0x394FD68
	0x0394FD3C BL 0x3EB1AD0
	0x0394FD40 LDR X25, [X0]
	0x0394FD44 BL 0x3EB1AE0
	0x0394FD48 ADRP X8, 0x7AB000
	0x0394FD4C LDR X8, [X8 + 0x830]
	0x0394FD50 ADD X0, X31, 0x30
	0x0394FD54 LDR X1, [X8]
	0x0394FD58 BL 0x2BBDA68
	0x0394FD5C CBZ X25, 0x394FB74
	0x0394FD60 MOV X0, X25
	0x0394FD64 BL 0x1C16F18
	0x0394FD68 MOV X19, X0
	0x0394FD6C MOV X25, X31
	0x0394FD70 B 0x394FD78
	0x0394FD74 MOV X19, X0
	0x0394FD78 ADRP X8, 0x7AB000
	0x0394FD7C LDR X8, [X8 + 0x830]
	0x0394FD80 LDR X1, [X8]
	0x0394FD84 ADD X0, X31, 0x30
	0x0394FD88 BL 0x2BBDA68
	0x0394FD8C CBNZ X25, 0x394FD98
	0x0394FD90 MOV X0, X19
	0x0394FD94 BL 0x1D2C690
	0x0394FD98 MOV X0, X25
	0x0394FD9C BL 0x1C16F18
	0x0394FDA0 BL 0x1990590
	0x0394FDA4 SUB X31, X31, 0x30
	0x0394FDA8 STP X30, X21, [X31 + 0x10]
	0x0394FDAC STP X20, X19, [X31 + 0x20]
	0x0394FDB0 ADRP X21, 0xA92000
	0x0394FDB4 LDRB W8, [X21 + 0x993]
	0x0394FDB8 MOV W20, W1
	0x0394FDBC MOV X19, X0
	0x0394FDC0 TBNZ X8, 0x0, 0x394FDE4
	0x0394FDC4 ADRP X0, 0x800000
	0x0394FDC8 LDR X0, [X0 + 0x1F0]
	0x0394FDCC BL 0x1C16CF4
	0x0394FDD0 ADRP X0, 0x7FF000
	0x0394FDD4 LDR X0, [X0 + 0x560]
	0x0394FDD8 BL 0x1C16CF4
	0x0394FDDC MOVZ W8, 0x1
	0x0394FDE0 STRB W8, [X21 + 0x993]
	0x0394FDE4 AND W2, W20, 0x1
	0x0394FDE8 ADD X1, X31, 0x8
	0x0394FDEC MOV X0, X19
	0x0394FDF0 MOV W3, W31
	0x0394FDF4 MOV X4, X31
	0x0394FDF8 STR X31, [X31 + 0x8]
	0x0394FDFC BL 0x397BFB8
	0x0394FE00 MOV X20, X31
	0x0394FE04 TBZ X0, 0x0, 0x394FE54
	0x0394FE08 ADRP X8, 0x800000
	0x0394FE0C LDR X8, [X8 + 0x1F0]
	0x0394FE10 LDR X0, [X8]
	0x0394FE14 BL 0x1C16F10
	0x0394FE18 MOV X1, X31
	0x0394FE1C MOV X20, X0
	0x0394FE20 BL 0x3901F84
	0x0394FE24 CBZ X20, 0x394FE68
	0x0394FE28 STR X19, [X20 + 0x18]
	0x0394FE2C ADRP X8, 0x7FF000
	0x0394FE30 LDR X8, [X8 + 0x560]
	0x0394FE34 LDR X19, [X31 + 0x8]
	0x0394FE38 LDR X0, [X8]
	0x0394FE3C BL 0x1C16F10
	0x0394FE40 MOV X1, X19
	0x0394FE44 MOV X2, X31
	0x0394FE48 MOV X21, X0
	0x0394FE4C BL 0x3900368
	0x0394FE50 STR X21, [X20 + 0x10]
	0x0394FE54 MOV X0, X20
	0x0394FE58 LDP X20, X19, [X31 + 0x20]
	0x0394FE5C LDP X30, X21, [X31 + 0x10]
	0x0394FE60 ADD X31, X31, 0x30
	0x0394FE64 RET
	0x0394FE68 BL 0x1C16F20
	0x0394FE6C SUB X31, X31, 0xC0
	0x0394FE70 STP X29, X30, [X31 + 0x60]
	0x0394FE74 STP X28, X27, [X31 + 0x70]
	0x0394FE78 STP X26, X25, [X31 + 0x80]
	0x0394FE7C STP X24, X23, [X31 + 0x90]
	0x0394FE80 STP X22, X21, [X31 + 0xA0]
	0x0394FE84 STP X20, X19, [X31 + 0xB0]
	0x0394FE88 STR X2, [X31 + 0x18]
	0x0394FE8C ADRP X20, 0xA92000
	0x0394FE90 ADRP X19, 0x7A4000
	0x0394FE94 LDRB W8, [X20 + 0x991]
	0x0394FE98 LDR X19, [X19 + 0x598]
	0x0394FE9C MOV X23, X1
	0x0394FEA0 MOV X24, X0
	0x0394FEA4 TBNZ X8, 0x0, 0x394FFDC
	0x0394FEA8 ADRP X0, 0x7FF000
	0x0394FEAC LDR X0, [X0 + 0x2A8]
	0x0394FEB0 BL 0x1C16CF4
	0x0394FEB4 ADRP X0, 0x7AB000
	0x0394FEB8 LDR X0, [X0 + 0x830]
	0x0394FEBC BL 0x1C16CF4
	0x0394FEC0 ADRP X0, 0x7AB000
	0x0394FEC4 LDR X0, [X0 + 0x838]
	0x0394FEC8 BL 0x1C16CF4
	0x0394FECC ADRP X0, 0x7AB000
	0x0394FED0 LDR X0, [X0 + 0x840]
	0x0394FED4 BL 0x1C16CF4
	0x0394FED8 ADRP X0, 0x800000
	0x0394FEDC LDR X0, [X0 + 0x1B8]
	0x0394FEE0 BL 0x1C16CF4
	0x0394FEE4 ADRP X0, 0x7A6000
	0x0394FEE8 LDR X0, [X0 + 0x9D8]
	0x0394FEEC BL 0x1C16CF4
	0x0394FEF0 ADRP X0, 0x7AB000
	0x0394FEF4 LDR X0, [X0 + 0x848]
	0x0394FEF8 BL 0x1C16CF4
	0x0394FEFC ADRP X0, 0x800000
	0x0394FF00 LDR X0, [X0 + 0x1F8]
	0x0394FF04 BL 0x1C16CF4
	0x0394FF08 ADRP X0, 0x800000
	0x0394FF0C LDR X0, [X0 + 0x200]
	0x0394FF10 BL 0x1C16CF4
	0x0394FF14 ADRP X0, 0x800000
	0x0394FF18 LDR X0, [X0 + 0x208]
	0x0394FF1C BL 0x1C16CF4
	0x0394FF20 ADRP X0, 0x800000
	0x0394FF24 LDR X0, [X0 + 0x210]
	0x0394FF28 BL 0x1C16CF4
	0x0394FF2C ADRP X0, 0x800000
	0x0394FF30 LDR X0, [X0 + 0x1C0]
	0x0394FF34 BL 0x1C16CF4
	0x0394FF38 ADRP X0, 0x800000
	0x0394FF3C LDR X0, [X0 + 0x218]
	0x0394FF40 BL 0x1C16CF4
	0x0394FF44 ADRP X0, 0x800000
	0x0394FF48 LDR X0, [X0 + 0x220]
	0x0394FF4C BL 0x1C16CF4
	0x0394FF50 ADRP X0, 0x7FE000
	0x0394FF54 LDR X0, [X0 + 0xDD8]
	0x0394FF58 BL 0x1C16CF4
	0x0394FF5C ADRP X0, 0x7FE000
	0x0394FF60 LDR X0, [X0 + 0xDE0]
	0x0394FF64 BL 0x1C16CF4
	0x0394FF68 ADRP X0, 0x800000
	0x0394FF6C LDR X0, [X0 + 0x1C8]
	0x0394FF70 BL 0x1C16CF4
	0x0394FF74 ADRP X0, 0x800000
	0x0394FF78 LDR X0, [X0 + 0x1D0]
	0x0394FF7C BL 0x1C16CF4
	0x0394FF80 ADRP X0, 0x800000
	0x0394FF84 LDR X0, [X0 + 0x228]
	0x0394FF88 BL 0x1C16CF4
	0x0394FF8C ADRP X0, 0x800000
	0x0394FF90 LDR X0, [X0 + 0x230]
	0x0394FF94 BL 0x1C16CF4
	0x0394FF98 ADRP X0, 0x7FE000
	0x0394FF9C LDR X0, [X0 + 0xDE8]
	0x0394FFA0 BL 0x1C16CF4
	0x0394FFA4 ADRP X0, 0x800000
	0x0394FFA8 LDR X0, [X0 + 0x238]
	0x0394FFAC BL 0x1C16CF4
	0x0394FFB0 ADRP X0, 0x7FE000
	0x0394FFB4 LDR X0, [X0 + 0xDF0]
	0x0394FFB8 BL 0x1C16CF4
	0x0394FFBC ADRP X0, 0x7A4000
	0x0394FFC0 LDR X0, [X0 + 0x598]
	0x0394FFC4 BL 0x1C16CF4
	0x0394FFC8 ADRP X0, 0x7FF000
	0x0394FFCC LDR X0, [X0 + 0x20]
	0x0394FFD0 BL 0x1C16CF4
	0x0394FFD4 MOVZ W8, 0x1
	0x0394FFD8 STRB W8, [X20 + 0x991]
	0x0394FFDC LDR X0, [X19]
	0x0394FFE0 STP X31, X31, [X31 + 0x40]
	0x0394FFE4 STR X31, [X31 + 0x50]
	0x0394FFE8 LDR W8, [X0 + 0xE0]
	0x0394FFEC CBNZ W8, 0x394FFF4
	0x0394FFF0 BL 0x1C16DFC
	0x0394FFF4 MOV X0, X24
	0x0394FFF8 MOV X1, X31
	0x0394FFFC MOV X2, X31
	0x03950000 BL 0x3C3883C
	0x03950004 TBNZ X0, 0x0, 0x39506D0
	0x03950008 CBZ X24, 0x39506B4
	0x0395000C ADRP X25, 0x7FD000
	0x03950010 ADRP X20, 0x7FD000
	0x03950014 ADRP X26, 0x7FF000
	0x03950018 LDR X19, [X24 + 0x30]
	0x0395001C LDR X25, [X25 + 0xDE8]
	0x03950020 LDR X20, [X20 + 0xDE0]
	0x03950024 LDR X26, [X26 + 0x1C8]
	0x03950028 MOV X0, X24
	0x0395002C MOV X1, X31
	0x03950030 BL 0x3916198
	0x03950034 STR X0, [X31]
	0x03950038 MOV X0, X24
	0x0395003C MOV X1, X31
	0x03950040 MOV X2, X31
	0x03950044 BL 0x3912114
	0x03950048 LDR X8, [X25]
	0x0395004C MOV X21, X0
	0x03950050 MOV X0, X8
	0x03950054 BL 0x1C16F10
	0x03950058 LDR X2, [X20]
	0x0395005C MOV X1, X21
	0x03950060 MOV X22, X0
	0x03950064 BL 0x301B8E0
	0x03950068 MOV X0, X24
	0x0395006C MOV X1, X23
	0x03950070 MOV X2, X31
	0x03950074 STR X24, [X31 + 0x8]
	0x03950078 BL 0x391B738
	0x0395007C LDR X8, [X25]
	0x03950080 MOV X23, X0
	0x03950084 MOV X0, X8
	0x03950088 BL 0x1C16F10
	0x0395008C LDR X1, [X26]
	0x03950090 STR X0, [X31 + 0x10]
	0x03950094 BL 0x301B7C4
	0x03950098 CBZ X23, 0x39506B4
	0x0395009C ADRP X8, 0x7AA000
	0x039500A0 LDR X8, [X8 + 0x848]
	0x039500A4 ADRP X20, 0x7AA000
	0x039500A8 ADRP X27, 0x7FE000
	0x039500AC ADRP X24, 0x7FF000
	0x039500B0 ADRP X21, 0x7FF000
	0x039500B4 ADRP X28, 0x7FF000
	0x039500B8 ADRP X29, 0x7FF000
	0x039500BC LDR X20, [X20 + 0x838]
	0x039500C0 LDR X27, [X27 + 0x20]
	0x039500C4 LDR X24, [X24 + 0x1C0]
	0x039500C8 LDR X21, [X21 + 0x230]
	0x039500CC LDR X28, [X28 + 0x220]
	0x039500D0 LDR X29, [X29 + 0x238]
	0x039500D4 LDR X1, [X8]
	0x039500D8 ADD X8, X31, 0x28
	0x039500DC MOV X0, X23
	0x039500E0 BL 0x2DAAA30
	0x039500E4 LDUR V0, [X31 + 0x28]
	0x039500E8 LDR X8, [X31 + 0x38]
	0x039500EC STR V0, [X31 + 0x4]
	0x039500F0 STR X8, [X31 + 0x50]
	0x039500F4 LDR X1, [X20]
	0x039500F8 ADD X0, X31, 0x40
	0x039500FC BL 0x2BBDA6C
	0x03950100 TBZ X0, 0x0, 0x39501C4
	0x03950104 CBZ X19, 0x39506C8
	0x03950108 LDRSW X8, [X31 + 0x50]
	0x0395010C LDR W9, [X19 + 0x18]
	0x03950110 CMP W8, W9
	0x03950114 B.CS 0x39506BC
	0x03950118 ADD X8, X19, X8, 0x3, LSL
	0x0395011C LDR X0, [X8 + 0x20]
	0x03950120 CBZ X0, 0x39506CC
	0x03950124 MOV W1, W31
	0x03950128 MOV X2, X31
	0x0395012C BL 0x39282DC
	0x03950130 MOV W1, W0
	0x03950134 CBZ X22, 0x39506C0
	0x03950138 ADRP X8, 0x7FF000
	0x0395013C LDR X8, [X8 + 0x1D0]
	0x03950140 LDR X2, [X8]
	0x03950144 MOV X0, X22
	0x03950148 BL 0x301BCCC
	0x0395014C MOV X26, X0
	0x03950150 LDR X0, [X27]
	0x03950154 BL 0x1C16F10
	0x03950158 MOV X25, X0
	0x0395015C MOV X1, X26
	0x03950160 MOV X2, X31
	0x03950164 BL 0x393DFBC
	0x03950168 LDR X0, [X31 + 0x10]
	0x0395016C CBZ X0, 0x39506C4
	0x03950170 LDR W10, [X0 + 0x1C]
	0x03950174 LDR X8, [X0 + 0x10]
	0x03950178 LDR X9, [X24]
	0x0395017C ADD W10, W10, 0x1
	0x03950180 STR W10, [X0 + 0x1C]
	0x03950184 CBZ X8, 0x39506B8
	0x03950188 LDRSW X10, [X0 + 0x18]
	0x0395018C LDR W11, [X8 + 0x18]
	0x03950190 CMP W10, W11
	0x03950194 B.CS 0x39501AC
	0x03950198 ADD W9, W10, 0x1
	0x0395019C ADD X8, X8, X10, 0x3, LSL
	0x039501A0 STR W9, [X0 + 0x18]
	0x039501A4 STR X25, [X8 + 0x20]
	0x039501A8 B 0x39500F4
	0x039501AC LDR X8, [X9 + 0x20]
	0x039501B0 LDR X8, [X8 + 0xC0]
	0x039501B4 LDR X2, [X8 + 0x70]
	0x039501B8 MOV X1, X25
	0x039501BC BL 0x301BF90
	0x039501C0 B 0x39500F4
	0x039501C4 ADRP X8, 0x7AA000
	0x039501C8 LDR X8, [X8 + 0x830]
	0x039501CC ADD X0, X31, 0x40
	0x039501D0 LDR X1, [X8]
	0x039501D4 BL 0x2BBDA68
	0x039501D8 LDR X0, [X21]
	0x039501DC BL 0x1C16F10
	0x039501E0 LDR X1, [X28]
	0x039501E4 MOV X25, X0
	0x039501E8 BL 0x301B7C4
	0x039501EC LDR X0, [X29]
	0x039501F0 BL 0x1C16F10
	0x039501F4 ADRP X8, 0x7FF000
	0x039501F8 LDR X8, [X8 + 0x218]
	0x039501FC MOV X26, X0
	0x03950200 LDR X1, [X8]
	0x03950204 BL 0x301B7C4
	0x03950208 LDR X12, [X31 + 0x18]
	0x0395020C CBZ X12, 0x39506B4
	0x03950210 STR W31, [X31 + 0x24]
	0x03950214 LDR X8, [X12]
	0x03950218 ADRP X10, 0x7FF000
	0x0395021C LDRH W9, [X8 + 0x12E]
	0x03950220 LDR X10, [X10 + 0x1F8]
	0x03950224 LDR X1, [X10]
	0x03950228 CBZ X9, 0x395024C
	0x0395022C LDR X10, [X8 + 0xB0]
	0x03950230 ADD X10, X10, 0x8
	0x03950234 LDUR X11, [X10 - 0x8]
	0x03950238 CMP X11, X1
	0x0395023C B.EQ 0x3950260
	0x03950240 SUBS X9, X9, 0x1
	0x03950244 ADD X10, X10, 0x10
	0x03950248 B.NE 0x3950234
	0x0395024C MOV X0, X12
	0x03950250 MOV W2, W31
	0x03950254 BL 0x1C5C788
	0x03950258 LDR X12, [X31 + 0x18]
	0x0395025C B 0x395026C
	0x03950260 LDRSW X9, [X10]
	0x03950264 ADD X8, X8, X9, 0x4, LSL
	0x03950268 ADD X0, X8, 0x138
	0x0395026C LDP X8, X1, [X0]
	0x03950270 MOV X0, X12
	0x03950274 MOV X21, X12
	0x03950278 BLR X8
	0x0395027C LDR W8, [X31 + 0x24]
	0x03950280 CMP W8, W0
	0x03950284 B.GE 0x39505C0
	0x03950288 LDR X8, [X21]
	0x0395028C ADRP X10, 0x7FF000
	0x03950290 MOV X12, X21
	0x03950294 LDRH W9, [X8 + 0x12E]
	0x03950298 LDR X10, [X10 + 0x200]
	0x0395029C LDR X1, [X10]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X19, 0xA93000
	015 Move X24, 0x7A5000
	016 Move W8, [X19+2446]
	017 Move X24, [X24+1432]
	018 Move X21, X7
	019 Move X23, X6
	020 Move X22, X5
	021 Move X26, X4
	022 Move X29, X3
	023 Move X28, X2
	024 Move X25, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {80}
	030 Move X0, 0x800000
	031 Move X0, [X0+1152]
	032 Call 0x1C17CF4
	033 Move X0, 0x801000
	034 Move X0, [X0+360]
	035 Call 0x1C17CF4
	036 Move X0, 0x7AA000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0x801000
	040 Move X0, [X0+368]
	041 Call 0x1C17CF4
	042 Move X0, 0x7A6000
	043 Move X0, [X0+3672]
	044 Call 0x1C17CF4
	045 Move X0, 0x800000
	046 Move X0, [X0+352]
	047 Call 0x1C17CF4
	048 Move X0, 0x7FF000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0x800000
	052 Move X0, [X0+16]
	053 Call 0x1C17CF4
	054 Move X0, 0x7FF000
	055 Move X0, [X0+3544]
	056 Call 0x1C17CF4
	057 Move X0, 0x7FF000
	058 Move X0, [X0+3568]
	059 Call 0x1C17CF4
	060 Move X0, 0x800000
	061 Move X0, [X0+8]
	062 Call 0x1C17CF4
	063 Move X0, 0x7A5000
	064 Move X0, [X0+1432]
	065 Call 0x1C17CF4
	066 Move X0, 0x800000
	067 Move X0, [X0+1056]
	068 Call 0x1C17CF4
	069 Move X0, 0x7FF000
	070 Move X0, [X0+2696]
	071 Call 0x1C17CF4
	072 Move X0, 0x7A7000
	073 Move X0, [X0+2480]
	074 Call 0x1C17CF4
	075 Move X0, 0x800000
	076 Move X0, [X0+72]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+2446], W8
	080 Move X0, [X24]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Move X2, X31
	088 Call Object.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {566}
	093 Compare X25, 0
	094 JumpIfEqual {573}
	095 Compare X23, 0
	096 JumpIfEqual {580}
	097 Move X27, [X25+24]
	098 Compare X21, 0
	099 JumpIfNotEqual {120}
	100 Move X8, 0x7A6000
	101 Move X8, [X8+3672]
	102 Move W1, W27
	103 Move X0, [X8]
	104 Call 0x1C17D6C
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X21, X0
	107 Compare X21, 0
	108 JumpIfEqual {607}
	109 Move W9, [X21+24]
	110 Move X8, X31
	111 And X10, X27, 0
	112 Add X11, X21, 32
	113 Move TEMP, 0
	114 Not TEMP
	115 Move W12, TEMP
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X11], W12
	118 Add X8, X8, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X31+48], X25
	121 Compare X20, 0
	122 JumpIfEqual {607}
	123 Move X25, X22
	124 Move [X31+40], X23
	125 Move X22, 0x7A7000
	126 Move X22, [X22+2480]
	127 Move X0, X20
	128 Move X1, X31
	129 Move X19, X29
	130 Move X24, X26
	131 Call ProBuilderMesh.get_vertexCount, X0
	132 Move W26, W0
	133 Move W1, 32
	134 Move X0, X20
	135 Move X2, X31
	136 Call ProBuilderMesh.HasArrays, X0, X1
	137 Move W29, W0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W1, 2
	140 Move X0, X20
	141 Move X2, X31
	142 Move [X31+24], X28
	143 NotImplemented "Instruction CSET not yet implemented."
	144 Call ProBuilderMesh.HasArrays, X0, X1
	145 Move [X31+92], W0
	146 Move W1, 8
	147 Move X0, X20
	148 Move X2, X31
	149 Call ProBuilderMesh.HasArrays, X0, X1
	150 Move [X31+72], W0
	151 Move W1, 16
	152 Move X0, X20
	153 Move X2, X31
	154 Call ProBuilderMesh.HasArrays, X0, X1
	155 Move [X31+76], W0
	156 Move X0, [X22]
	157 Add W22, W26, W27
	158 Move W1, W22
	159 Move [X31+120], X27
	160 Move W28, W26
	161 Call 0x1C17D6C
	162 Or W27, W23, W29
	163 Move [X31+104], X31
	164 Move [X31+112], X0
	165 Move [X31+20], W29
	166 Move TEMP, X27
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {176}
	170 Move X8, 0x7AA000
	171 Move X8, [X8+320]
	172 Move W1, W22
	173 Move X0, [X8]
	174 Call 0x1C17D6C
	175 Move [X31+104], X0
	176 Move W9, [X31+92]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CSET not yet implemented."
	179 Move [X31+8], X19
	180 Or W29, W8, W9
	181 Move [X31+80], X25
	182 Move TEMP, X29
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {192}
	186 Move X8, 0x7FF000
	187 Move X8, [X8+2696]
	188 Move W1, W22
	189 Move X0, [X8]
	190 Call 0x1C17D6C
	191 Move [X31+64], X0
	192 Move [X31+64], X31
	193 Move W9, [X31+72]
	194 Move X25, [X31+48]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CSET not yet implemented."
	197 Or W8, W8, W9
	198 Move [X31+36], W8
	199 Move [X31], X24
	200 Move TEMP, X8
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {213}
	204 Move X8, 0x800000
	205 Move X8, [X8+8]
	206 Move X0, [X8]
	207 Call 0x1C17F10
	208 Move X8, 0x800000
	209 Move X8, [X8+16]
	210 Move [X31+56], X0
	211 Move X1, [X8]
	212 Call List`1<Vector4>..ctor, X0
	213 Move [X31+56], X31
	214 Move X26, 0x7FF000
	215 Move X26, [X26+3568]
	216 Move X8, [X31+80]
	217 Move W9, [X31+76]
	218 Move X22, 0x7FF000
	219 Move X22, [X22+3544]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CSET not yet implemented."
	222 Or W8, W8, W9
	223 Move [X31+32], W8
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {237}
	228 Move X8, 0x800000
	229 Move X8, [X8+8]
	230 Move X0, [X8]
	231 Call 0x1C17F10
	232 Move X8, 0x800000
	233 Move X8, [X8+16]
	234 Move [X31+96], X0
	235 Move X1, [X8]
	236 Call List`1<Vector4>..ctor, X0
	237 Move [X31+96], X31
	238 Move X0, [X26]
	239 Move X23, [X20+40]
	240 Call 0x1C17F10
	241 Move X2, [X22]
	242 Move X1, X23
	243 Move X26, X0
	244 Call List`1<Object>..ctor, X0, X1
	245 Move X22, [X31+112]
	246 Move X0, [X20+88]
	247 Move W1, W31
	248 Move W3, W31
	249 Move X2, X22
	250 Move W4, W28
	251 Move X5, X31
	252 Call Array.Copy, X0, X1, X2, X3, X4
	253 Move X0, X25
	254 Move W1, W31
	255 Move X2, X22
	256 Move W3, W28
	257 Move X4, [X31+120]
	258 Move X5, X31
	259 Call Array.Copy, X0, X1, X2, X3, X4
	260 Move TEMP, X27
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {295}
	264 Move W8, [X31+20]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {270}
	269 Move X0, [X20+136]
	270 Move X8, 0x800000
	271 Move X8, [X8+1152]
	272 Move S0, 1
	273 Move S1, 1
	274 Move S2, 1
	275 Move X1, [X8]
	276 Move S3, 1
	277 Move W0, W28
	278 Call 0x217F698, X0, X1
	279 Move X19, [X31+104]
	280 Move W1, W31
	281 Move W3, W31
	282 Move W4, W28
	283 Move X2, X19
	284 Move X5, X31
	285 Call Array.Copy, X0, X1, X2, X3, X4
	286 Move X0, [X31+24]
	287 Compare X0, 0
	288 JumpIfEqual {598}
	289 Move W4, [X0+24]
	290 Move W1, W31
	291 Move X2, X19
	292 Move W3, W28
	293 Move X5, X31
	294 Call Array.Copy, X0, X1, X2, X3, X4
	295 Move X23, [X31+120]
	296 Move X24, [X31+96]
	297 Move TEMP, X29
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {370}
	301 Move W8, [X31+92]
	302 Move TEMP, X8
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {309}
	306 Move X0, [X20+96]
	307 Move X22, [X31+64]
	308 Move X25, [X31+8]
	309 Move X19, 0xA8B000
	310 Move W8, [X19+1935]
	311 Move X25, [X31+8]
	312 Compare W8, 0
	313 JumpIfNotEqual {319}
	314 Move X0, 0x7AD000
	315 Move X0, [X0+3848]
	316 Call 0x1C17CF4
	317 Move W8, 1
	318 Move [X19+1935], W8
	319 Move X8, 0x7AD000
	320 Move X8, [X8+3848]
	321 Move X9, 0x801000
	322 Move W0, W28
	323 Move X8, [X8]
	324 Move X8, [X8+184]
	325 Move X9, [X9+360]
	326 Move S0, [X8]
	327 Move S1, [X8+4]
	328 Move X1, [X9]
	329 Call ArrayUtility.Fill, X0, X1
	330 Move X22, [X31+64]
	331 Move W1, W31
	332 Move X2, X22
	333 Move W3, W31
	334 Move W4, W28
	335 Move X5, X31
	336 Call Array.Copy, X0, X1, X2, X3, X4
	337 Compare X25, 0
	338 JumpIfNotEqual {360}
	339 Move X19, 0xA8B000
	340 Move W8, [X19+1935]
	341 Compare W8, 0
	342 JumpIfNotEqual {348}
	343 Move X0, 0x7AD000
	344 Move X0, [X0+3848]
	345 Call 0x1C17CF4
	346 Move W8, 1
	347 Move [X19+1935], W8
	348 Move X8, 0x7AD000
	349 Move X8, [X8+3848]
	350 Move X9, 0x801000
	351 Move W0, W23
	352 Move X8, [X8]
	353 Move X8, [X8+184]
	354 Move X9, [X9+360]
	355 Move S0, [X8]
	356 Move S1, [X8+4]
	357 Move X1, [X9]
	358 Call ArrayUtility.Fill, X0, X1
	359 Move X25, X0
	360 Move X8, [X20+96]
	361 Compare X8, 0
	362 JumpIfEqual {607}
	363 Move W3, [X8+24]
	364 Move X0, X25
	365 Move W1, W31
	366 Move X2, X22
	367 Move W4, W23
	368 Move X5, X31
	369 Call Array.Copy, X0, X1, X2, X3, X4
	370 Move X29, [X31+40]
	371 Move W8, [X31+36]
	372 Move TEMP, X8
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {412}
	376 Move W8, [X31+72]
	377 Move TEMP, X8
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {382}
	381 Move X1, [X20+104]
	382 Move X8, 0x800000
	383 Move X8, [X8+72]
	384 Move W1, W28
	385 Move X0, [X8]
	386 Call 0x1C17D6C
	387 Move X8, 0x801000
	388 Move X8, [X8+368]
	389 Move X1, [X8]
	390 Call Enumerable.ToList, X0
	391 Move X1, X0
	392 Move X22, [X31+56]
	393 Compare X22, 0
	394 JumpIfEqual {607}
	395 Move X19, 0x800000
	396 Move X19, [X19+352]
	397 Move X0, X22
	398 Move X2, [X19]
	399 Call List`1<Vector4>.AddRange, X0, X1
	400 Move X1, [X31]
	401 Compare X1, 0
	402 JumpIfNotEqual {409}
	403 Move X8, 0x800000
	404 Move X8, [X8+72]
	405 Move W1, W23
	406 Move X0, [X8]
	407 Call 0x1C17D6C
	408 Move X1, X0
	409 Move X2, [X19]
	410 Move X0, X22
	411 Call List`1<Vector4>.AddRange, X0, X1
	412 Move W8, [X31+32]
	413 Move TEMP, X8
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfNotEqual {453}
	417 Move W8, [X31+76]
	418 Move TEMP, X8
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfNotEqual {423}
	422 Move X1, [X20+112]
	423 Move X8, 0x800000
	424 Move X8, [X8+72]
	425 Move W1, W28
	426 Move X0, [X8]
	427 Call 0x1C17D6C
	428 Move X8, 0x801000
	429 Move X8, [X8+368]
	430 Move X1, [X8]
	431 Call Enumerable.ToList, X0
	432 Move X1, X0
	433 Move X22, [X31+80]
	434 Compare X24, 0
	435 JumpIfEqual {607}
	436 Move X19, 0x7FF000
	437 Move X19, [X19+352]
	438 Move X0, X24
	439 Move X2, [X19]
	440 Call List`1<Vector4>.AddRange, X0, X1
	441 Compare X22, 0
	442 JumpIfNotEqual {449}
	443 Move X8, 0x7FF000
	444 Move X8, [X8+72]
	445 Move W1, W23
	446 Move X0, [X8]
	447 Call 0x1C17D6C
	448 Move X22, X0
	449 Move X2, [X19]
	450 Move X0, X24
	451 Move X1, X22
	452 Call List`1<Vector4>.AddRange, X0, X1
	453 Move X0, X29
	454 Move X1, X31
	455 Call Face.ShiftIndexesToZero, X0
	456 Move X0, X29
	457 Move W1, W28
	458 Move X2, X31
	459 Call Face.ShiftIndexes, X0, X1
	460 Compare X26, 0
	461 JumpIfEqual {607}
	462 Move X9, 0x7FE000
	463 Move X9, [X9+3600]
	464 Move W10, [X26+28]
	465 Move X8, [X26+16]
	466 Move X9, [X9]
	467 Add W10, W10, 1
	468 Move [X26+28], W10
	469 Compare X8, 0
	470 JumpIfEqual {607}
	471 NotImplemented "Instruction LDRSW not yet implemented."
	472 Move W11, [X8+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add W9, W10, 1
	475 Add X8, X8, X10
	476 Move [X26+24], W9
	477 Move [X8+32], X29
	478 Move X8, [X9+32]
	479 Move X0, X26
	480 Move X1, X29
	481 Move X8, [X8+192]
	482 Move X2, [X8+112]
	483 Call List`1<Object>.AddWithResize, X0, X1
	484 Compare X21, 0
	485 JumpIfEqual {607}
	486 Move X8, [X21+24]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move X24, 0x7FF000
	489 Move X24, [X24+1056]
	490 Move X22, X31
	491 And X8, X8, 0
	492 Move W25, W28
	493 Add X27, X21, 32
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move W1, [X27]
	496 Move TEMP, X1
	497 And TEMP, TEMP, -2147483648
	498 Compare TEMP, -2147483648
	499 JumpIfEqual {504}
	500 Add W2, W25, W22
	501 Move X0, X20
	502 Move X3, X31
	503 Call ProBuilderMesh.AddToSharedVertex, X0, X1, X2
	504 Move X8, 0x7A5000
	505 Move X8, [X8+3672]
	506 Move W1, 1
	507 Move X0, [X8]
	508 Call 0x1C17D6C
	509 Compare X0, 0
	510 JumpIfEqual {607}
	511 Move W8, [X0+24]
	512 Move X19, X0
	513 Compare W8, 0
	514 JumpIfEqual {565}
	515 Add W8, W25, W22
	516 Move [X19+32], W8
	517 Move X0, [X24]
	518 Call 0x1C17F10
	519 Move X1, X19
	520 Move X2, X31
	521 Move X23, X0
	522 Call SharedVertex..ctor, X0, X1
	523 Move X0, X20
	524 Move X1, X23
	525 Move X2, X31
	526 Call ProBuilderMesh.AddSharedVertex, X0, X1
	527 Move W8, [X21+24]
	528 Add X22, X22, 1
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X1, [X31+112]
	531 Move X0, X20
	532 Move X2, X31
	533 Call ProBuilderMesh.set_positions, X0, X1
	534 Move X1, [X31+104]
	535 Move X0, X20
	536 Move X2, X31
	537 Call ProBuilderMesh.set_colors, X0, X1
	538 Move X1, [X31+64]
	539 Move X0, X20
	540 Move X2, X31
	541 Call ProBuilderMesh.set_textures, X0, X1
	542 Move X0, X20
	543 Move X1, X26
	544 Move X2, X31
	545 Call ProBuilderMesh.set_faces, X0, X1
	546 Move X9, [X31+56]
	547 Move X8, [X31+96]
	548 Move X0, X29
	549 Move X22, [X31+192]
	550 Move X21, [X31+200]
	551 Move X24, [X31+176]
	552 Move X23, [X31+184]
	553 Move [X20+104], X9
	554 Move [X20+112], X8
	555 Move X20, [X31+208]
	556 Move X19, [X31+216]
	557 Move X26, [X31+160]
	558 Move X25, [X31+168]
	559 Move X28, [X31+144]
	560 Move X27, [X31+152]
	561 Move X29, [X31+128]
	562 Move X30, [X31+136]
	563 Add X31, X31, 224
	564 Return X0
	565 Call 0x1C17F28
	566 Move X0, 0x7A9000
	567 Move X0, [X0+1320]
	568 Call 0x1C17D08
	569 Call 0x1C17F10
	570 Move X19, X0
	571 Move X0, 0x7FE000
	572 Move X0, [X0+3728]
	573 Move X0, 0x7A9000
	574 Move X0, [X0+1320]
	575 Call 0x1C17D08
	576 Call 0x1C17F10
	577 Move X19, X0
	578 Move X0, 0x7FF000
	579 Move X0, [X0+1840]
	580 Move X0, 0x7A9000
	581 Move X0, [X0+1320]
	582 Call 0x1C17D08
	583 Call 0x1C17F10
	584 Move X19, X0
	585 Move X0, 0x7FF000
	586 Move X0, [X0+1536]
	587 Call 0x1C17D08
	588 Move X1, X0
	589 Move X0, X19
	590 Move X2, X31
	591 Call ArgumentNullException..ctor, X0, X1
	592 Move X0, 0x800000
	593 Move X0, [X0+376]
	594 Call 0x1C17D08
	595 Move X1, X0
	596 Move X0, X19
	597 Call 0x1C17DEC
	598 Move X8, 0x7FF000
	599 Move X8, [X8+1152]
	600 Move S0, 1
	601 Move S1, 1
	602 Move S2, 1
	603 Move X1, [X8]
	604 Move S3, 1
	605 Move X0, [X31+120]
	606 Call 0x217F698, X0, X1
	607 Call 0x1C17F20

Method: UnityEngine.ProBuilder.Face[] AppendFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3[][] positions, UnityEngine.Color[][] colors, UnityEngine.Vector2[][] uvs, UnityEngine.ProBuilder.Face[] faces, System.Int32[][] shared)

Disassembly:
	0x039502A0 CBZ X9, 0x39502C4
	0x039502A4 LDR X10, [X8 + 0xB0]
	0x039502A8 ADD X10, X10, 0x8
	0x039502AC LDUR X11, [X10 - 0x8]
	0x039502B0 CMP X11, X1
	0x039502B4 B.EQ 0x39502D8
	0x039502B8 SUBS X9, X9, 0x1
	0x039502BC ADD X10, X10, 0x10
	0x039502C0 B.NE 0x39502AC
	0x039502C4 MOV X0, X12
	0x039502C8 MOV W2, W31
	0x039502CC BL 0x1C5C788
	0x039502D0 LDR X12, [X31 + 0x18]
	0x039502D4 B 0x39502E4
	0x039502D8 LDRSW X9, [X10]
	0x039502DC ADD X8, X8, X9, 0x4, LSL
	0x039502E0 ADD X0, X8, 0x138
	0x039502E4 LDP X8, X2, [X0]
	0x039502E8 LDR W1, [X31 + 0x24]
	0x039502EC MOV X0, X12
	0x039502F0 BLR X8
	0x039502F4 MOV X1, X0
	0x039502F8 LDR X0, [X31 + 0x8]
	0x039502FC MOV X2, X31
	0x03950300 BL 0x391B738
	0x03950304 CBZ X25, 0x39506B4
	0x03950308 ADRP X9, 0x7FF000
	0x0395030C LDR W10, [X25 + 0x1C]
	0x03950310 LDR X8, [X25 + 0x10]
	0x03950314 LDR X9, [X9 + 0x208]
	0x03950318 ADD W10, W10, 0x1
	0x0395031C LDR X9, [X9]
	0x03950320 STR W10, [X25 + 0x1C]
	0x03950324 CBZ X8, 0x39506B4
	0x03950328 LDRSW X10, [X25 + 0x18]
	0x0395032C LDR W11, [X8 + 0x18]
	0x03950330 MOV X1, X0
	0x03950334 CMP W10, W11
	0x03950338 B.CS 0x3950350
	0x0395033C ADD W9, W10, 0x1
	0x03950340 ADD X8, X8, X10, 0x3, LSL
	0x03950344 STR W9, [X25 + 0x18]
	0x03950348 STR X1, [X8 + 0x20]
	0x0395034C B 0x3950364
	0x03950350 LDR X8, [X9 + 0x20]
	0x03950354 MOV X0, X25
	0x03950358 LDR X8, [X8 + 0xC0]
	0x0395035C LDR X2, [X8 + 0x70]
	0x03950360 BL 0x301BF90
	0x03950364 ADRP X8, 0x7FD000
	0x03950368 LDR X8, [X8 + 0xDE8]
	0x0395036C LDR X0, [X8]
	0x03950370 BL 0x1C16F10
	0x03950374 ADRP X8, 0x7FF000
	0x03950378 LDR X8, [X8 + 0x1C8]
	0x0395037C MOV X28, X0
	0x03950380 LDR X1, [X8]
	0x03950384 BL 0x301B7C4
	0x03950388 CBZ X26, 0x39506B4
	0x0395038C ADRP X9, 0x7FF000
	0x03950390 LDR W10, [X26 + 0x1C]
	0x03950394 LDR X8, [X26 + 0x10]
	0x03950398 LDR X9, [X9 + 0x210]
	0x0395039C ADD W10, W10, 0x1
	0x039503A0 LDR X9, [X9]
	0x039503A4 STR W10, [X26 + 0x1C]
	0x039503A8 CBZ X8, 0x39506B4
	0x039503AC LDRSW X10, [X26 + 0x18]
	0x039503B0 LDR W11, [X8 + 0x18]
	0x039503B4 CMP W10, W11
	0x039503B8 B.CS 0x39503D0
	0x039503BC ADD W9, W10, 0x1
	0x039503C0 ADD X8, X8, X10, 0x3, LSL
	0x039503C4 STR W9, [X26 + 0x18]
	0x039503C8 STR X28, [X8 + 0x20]
	0x039503CC B 0x39503E8
	0x039503D0 LDR X8, [X9 + 0x20]
	0x039503D4 MOV X0, X26
	0x039503D8 MOV X1, X28
	0x039503DC LDR X8, [X8 + 0xC0]
	0x039503E0 LDR X2, [X8 + 0x70]
	0x039503E4 BL 0x301BF90
	0x039503E8 ADRP X8, 0x7FF000
	0x039503EC LDR X8, [X8 + 0x228]
	0x039503F0 LDR W1, [X31 + 0x24]
	0x039503F4 MOV X0, X25
	0x039503F8 LDR X2, [X8]
	0x039503FC BL 0x301BCCC
	0x03950400 CBZ X0, 0x39506B4
	0x03950404 ADRP X8, 0x7AA000
	0x03950408 LDR X8, [X8 + 0x848]
	0x0395040C LDR X1, [X8]
	0x03950410 ADD X8, X31, 0x28
	0x03950414 BL 0x2DAAA30
	0x03950418 LDUR V0, [X31 + 0x28]
	0x0395041C LDR X8, [X31 + 0x38]
	0x03950420 STR V0, [X31 + 0x4]
	0x03950424 STR X8, [X31 + 0x50]
	0x03950428 LDR X1, [X20]
	0x0395042C ADD X0, X31, 0x40
	0x03950430 BL 0x2BBDA6C
	0x03950434 TBZ X0, 0x0, 0x3950514
	0x03950438 ADRP X8, 0x7A5000
	0x0395043C LDR W21, [X31 + 0x50]
	0x03950440 LDR X8, [X8 + 0x9D8]
	0x03950444 LDR X2, [X8]
	0x03950448 MOV X0, X23
	0x0395044C MOV W1, W21
	0x03950450 BL 0x2DAB03C
	0x03950454 CBZ X19, 0x395055C
	0x03950458 LDR W9, [X19 + 0x18]
	0x0395045C SXTW X8, W21
	0x03950460 CMP W8, W9
	0x03950464 B.CS 0x3950544
	0x03950468 ADD X8, X19, X8, 0x3, LSL
	0x0395046C LDR X0, [X8 + 0x20]
	0x03950470 CBZ X0, 0x3950564
	0x03950474 MOV W1, W31
	0x03950478 MOV X2, X31
	0x0395047C BL 0x39282DC
	0x03950480 MOV W1, W0
	0x03950484 CBZ X22, 0x395054C
	0x03950488 ADRP X8, 0x7FF000
	0x0395048C LDR X8, [X8 + 0x1D0]
	0x03950490 LDR X2, [X8]
	0x03950494 MOV X0, X22
	0x03950498 BL 0x301BCCC
	0x0395049C MOV X21, X0
	0x039504A0 LDR X0, [X27]
	0x039504A4 BL 0x1C16F10
	0x039504A8 MOV X29, X0
	0x039504AC MOV X1, X21
	0x039504B0 MOV X2, X31
	0x039504B4 BL 0x393DFBC
	0x039504B8 CBZ X28, 0x3950554
	0x039504BC LDR W10, [X28 + 0x1C]
	0x039504C0 LDR X8, [X28 + 0x10]
	0x039504C4 LDR X9, [X24]
	0x039504C8 ADD W10, W10, 0x1
	0x039504CC STR W10, [X28 + 0x1C]
	0x039504D0 CBZ X8, 0x395053C
	0x039504D4 LDRSW X10, [X28 + 0x18]
	0x039504D8 LDR W11, [X8 + 0x18]
	0x039504DC CMP W10, W11
	0x039504E0 B.CS 0x39504F8
	0x039504E4 ADD W9, W10, 0x1
	0x039504E8 ADD X8, X8, X10, 0x3, LSL
	0x039504EC STR W9, [X28 + 0x18]
	0x039504F0 STR X29, [X8 + 0x20]
	0x039504F4 B 0x3950428
	0x039504F8 LDR X8, [X9 + 0x20]
	0x039504FC LDR X8, [X8 + 0xC0]
	0x03950500 LDR X2, [X8 + 0x70]
	0x03950504 MOV X0, X28
	0x03950508 MOV X1, X29
	0x0395050C BL 0x301BF90
	0x03950510 B 0x3950428
	0x03950514 ADRP X8, 0x7AA000
	0x03950518 LDR X8, [X8 + 0x830]
	0x0395051C ADD X0, X31, 0x40
	0x03950520 LDR X1, [X8]
	0x03950524 BL 0x2BBDA68
	0x03950528 LDR W8, [X31 + 0x24]
	0x0395052C LDR X12, [X31 + 0x18]
	0x03950530 ADD W8, W8, 0x1
	0x03950534 STR W8, [X31 + 0x24]
	0x03950538 B 0x3950214
	0x0395053C BL 0x1C16F20
	0x03950540 B 0x3950728
	0x03950544 BL 0x1C16F28
	0x03950548 B 0x3950728
	0x0395054C BL 0x1C16F20
	0x03950550 B 0x3950728
	0x03950554 BL 0x1C16F20
	0x03950558 B 0x3950728
	0x0395055C BL 0x1C16F20
	0x03950560 B 0x3950728
	0x03950564 BL 0x1C16F20
	0x03950568 B 0x3950728
	0x0395056C B 0x395058C
	0x03950570 B 0x395058C
	0x03950574 B 0x395058C
	0x03950578 B 0x395058C
	0x0395057C B 0x395058C
	0x03950580 B 0x395058C
	0x03950584 B 0x395058C
	0x03950588 B 0x395058C
	0x0395058C CMP W1, 0x1
	0x03950590 B.NE 0x395071C
	0x03950594 BL 0x3EB1AD0
	0x03950598 LDR X29, [X0]
	0x0395059C BL 0x3EB1AE0
	0x039505A0 ADRP X8, 0x7AA000
	0x039505A4 LDR X8, [X8 + 0x830]
	0x039505A8 ADD X0, X31, 0x40
	0x039505AC LDR X1, [X8]
	0x039505B0 BL 0x2BBDA68
	0x039505B4 CBZ X29, 0x3950528
	0x039505B8 MOV X0, X29
	0x039505BC BL 0x1C16F18
	0x039505C0 LDR X0, [X31 + 0x10]
	0x039505C4 MOV X1, X26
	0x039505C8 BL 0x39507D8
	0x039505CC CBZ X0, 0x3950694
	0x039505D0 ADRP X8, 0x7FE000
	0x039505D4 LDR X8, [X8 + 0x2A8]
	0x039505D8 MOV X20, X0
	0x039505DC MOV X0, X23
	0x039505E0 LDR X1, [X8]
	0x039505E4 BL 0x21D7880
	0x039505E8 LDR X19, [X31 + 0x8]
	0x039505EC STR X0, [X20 + 0x20]
	0x039505F0 ADRP X8, 0x7FD000
	0x039505F4 LDR X21, [X19 + 0x28]
	0x039505F8 LDR X8, [X8 + 0xDF0]
	0x039505FC LDR X0, [X8]
	0x03950600 BL 0x1C16F10
	0x03950604 ADRP X8, 0x7FD000
	0x03950608 LDR X8, [X8 + 0xDD8]
	0x0395060C MOV X1, X21
	0x03950610 MOV X23, X0
	0x03950614 LDR X2, [X8]
	0x03950618 BL 0x301B8E0
	0x0395061C ADRP X8, 0x7FF000
	0x03950620 LDR X8, [X8 + 0x1B8]
	0x03950624 MOVZ W1, 0x1
	0x03950628 LDR X0, [X8]
	0x0395062C BL 0x1C16D6C
	0x03950630 CBZ X0, 0x39506B4
	0x03950634 LDR W8, [X0 + 0x18]
	0x03950638 CBZ W8, 0x3950718
	0x0395063C LDR X21, [X31]
	0x03950640 MOV X1, X22
	0x03950644 MOV X2, X23
	0x03950648 MOV X4, X31
	0x0395064C MOV X3, X21
	0x03950650 MOV X5, X31
	0x03950654 STR X20, [X0 + 0x20]
	0x03950658 BL 0x39019E8
	0x0395065C MOV X0, X19
	0x03950660 MOV X1, X22
	0x03950664 MOV W2, W31
	0x03950668 MOV X3, X31
	0x0395066C BL 0x3916CF4
	0x03950670 MOV X0, X19
	0x03950674 MOV X1, X23
	0x03950678 MOV X2, X31
	0x0395067C BL 0x39159C8
	0x03950680 MOV X0, X19
	0x03950684 MOV X1, X21
	0x03950688 MOV X2, X31
	0x0395068C BL 0x3916234
	0x03950690 LDR X0, [X20 + 0x10]
	0x03950694 LDP X20, X19, [X31 + 0xB0]
	0x03950698 LDP X22, X21, [X31 + 0xA0]
	0x0395069C LDP X24, X23, [X31 + 0x90]
	0x039506A0 LDP X26, X25, [X31 + 0x80]
	0x039506A4 LDP X28, X27, [X31 + 0x70]
	0x039506A8 LDP X29, X30, [X31 + 0x60]
	0x039506AC ADD X31, X31, 0xC0
	0x039506B0 RET
	0x039506B4 BL 0x1C16F20
	0x039506B8 BL 0x1C16F20
	0x039506BC BL 0x1C16F28
	0x039506C0 BL 0x1C16F20
	0x039506C4 BL 0x1C16F20
	0x039506C8 BL 0x1C16F20
	0x039506CC BL 0x1C16F20
	0x039506D0 ADRP X0, 0x7A8000
	0x039506D4 LDR X0, [X0 + 0x528]
	0x039506D8 BL 0x1C16D08
	0x039506DC BL 0x1C16F10
	0x039506E0 MOV X19, X0
	0x039506E4 ADRP X0, 0x7FD000
	0x039506E8 LDR X0, [X0 + 0xE90]
	0x039506EC BL 0x1C16D08
	0x039506F0 MOV X1, X0
	0x039506F4 MOV X0, X19
	0x039506F8 MOV X2, X31
	0x039506FC BL 0x330E100
	0x03950700 ADRP X0, 0x7FF000
	0x03950704 LDR X0, [X0 + 0x240]
	0x03950708 BL 0x1C16D08
	0x0395070C MOV X1, X0
	0x03950710 MOV X0, X19
	0x03950714 BL 0x1C16DEC
	0x03950718 BL 0x1C16F28
	0x0395071C MOV X19, X0
	0x03950720 MOV X29, X31
	0x03950724 B 0x395072C
	0x03950728 MOV X19, X0
	0x0395072C ADRP X8, 0x7AA000
	0x03950730 LDR X8, [X8 + 0x830]
	0x03950734 LDR X1, [X8]
	0x03950738 ADD X0, X31, 0x40
	0x0395073C BL 0x2BBDA68
	0x03950740 CBNZ X29, 0x395074C
	0x03950744 MOV X0, X19
	0x03950748 BL 0x1D2C690
	0x0395074C MOV X0, X29
	0x03950750 BL 0x1C16F18
	0x03950754 B 0x3950770
	0x03950758 B 0x3950770
	0x0395075C B 0x3950770
	0x03950760 B 0x3950770
	0x03950764 B 0x3950770
	0x03950768 B 0x3950770
	0x0395076C B 0x3950770
	0x03950770 CMP W1, 0x1
	0x03950774 B.NE 0x39507A4
	0x03950778 BL 0x3EB1AD0
	0x0395077C LDR X25, [X0]
	0x03950780 BL 0x3EB1AE0
	0x03950784 ADRP X8, 0x7AA000
	0x03950788 LDR X8, [X8 + 0x830]
	0x0395078C ADD X0, X31, 0x40
	0x03950790 LDR X1, [X8]
	0x03950794 BL 0x2BBDA68
	0x03950798 CBZ X25, 0x39501D8
	0x0395079C MOV X0, X25
	0x039507A0 BL 0x1C16F18
	0x039507A4 MOV X19, X0
	0x039507A8 MOV X25, X31
	0x039507AC B 0x39507B4
	0x039507B0 MOV X19, X0
	0x039507B4 ADRP X8, 0x7AA000
	0x039507B8 LDR X8, [X8 + 0x830]
	0x039507BC LDR X1, [X8]
	0x039507C0 ADD X0, X31, 0x40
	0x039507C4 BL 0x2BBDA68
	0x039507C8 CBZ X25, 0x3950744
	0x039507CC MOV X0, X25
	0x039507D0 BL 0x1C16F18
	0x039507D4 BL 0x1990590
	0x039507D8 SUB X31, X31, 0x90
	0x039507DC STP X29, X30, [X31 + 0x30]
	0x039507E0 STP X28, X27, [X31 + 0x40]
	0x039507E4 STP X26, X25, [X31 + 0x50]
	0x039507E8 STP X24, X23, [X31 + 0x60]
	0x039507EC STP X22, X21, [X31 + 0x70]
	0x039507F0 STP X20, X19, [X31 + 0x80]
	0x039507F4 ADRP X20, 0xA91000
	0x039507F8 ADRP X27, 0x7FF000
	0x039507FC LDRB W8, [X20 + 0x994]
	0x03950800 LDR X27, [X27 + 0x248]
	0x03950804 MOV X19, X1
	0x03950808 MOV X23, X0
	0x0395080C TBNZ X8, 0x0, 0x39508F0
	0x03950810 ADRP X0, 0x7FF000
	0x03950814 LDR X0, [X0 + 0x250]
	0x03950818 BL 0x1C16CF4
	0x0395081C ADRP X0, 0x7FE000
	0x03950820 LDR X0, [X0 + 0x170]
	0x03950824 BL 0x1C16CF4
	0x03950828 ADRP X0, 0x7FF000
	0x0395082C LDR X0, [X0 + 0x258]
	0x03950830 BL 0x1C16CF4
	0x03950834 ADRP X0, 0x7FF000
	0x03950838 LDR X0, [X0 + 0x260]
	0x0395083C BL 0x1C16CF4
	0x03950840 ADRP X0, 0x7FF000
	0x03950844 LDR X0, [X0 + 0x268]
	0x03950848 BL 0x1C16CF4
	0x0395084C ADRP X0, 0x7FF000
	0x03950850 LDR X0, [X0 + 0x1F0]
	0x03950854 BL 0x1C16CF4
	0x03950858 ADRP X0, 0x7FE000
	0x0395085C LDR X0, [X0 + 0x560]
	0x03950860 BL 0x1C16CF4
	0x03950864 ADRP X0, 0x7FF000
	0x03950868 LDR X0, [X0 + 0x270]
	0x0395086C BL 0x1C16CF4
	0x03950870 ADRP X0, 0x7FD000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+32], X2
	015 Move [X31+40], X1
	016 Move X20, 0xA92000
	017 Move X22, 0x7A4000
	018 Move W8, [X20+2447]
	019 Move X22, [X22+1432]
	020 Move X21, X5
	021 Move X19, X4
	022 Move X23, X3
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {81}
	028 Move X0, 0x7A4000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x7AE000
	032 Move X0, [X0+2136]
	033 Call 0x1C17CF4
	034 Move X0, 0x7D0000
	035 Move X0, [X0+3416]
	036 Call 0x1C17CF4
	037 Move X0, 0x800000
	038 Move X0, [X0+384]
	039 Call 0x1C17CF4
	040 Move X0, 0x800000
	041 Move X0, [X0+392]
	042 Call 0x1C17CF4
	043 Move X0, 0x7FE000
	044 Move X0, [X0+3600]
	045 Call 0x1C17CF4
	046 Move X0, 0x800000
	047 Move X0, [X0+400]
	048 Call 0x1C17CF4
	049 Move X0, 0x7FE000
	050 Move X0, [X0+3544]
	051 Call 0x1C17CF4
	052 Move X0, 0x800000
	053 Move X0, [X0+408]
	054 Call 0x1C17CF4
	055 Move X0, 0x800000
	056 Move X0, [X0+416]
	057 Call 0x1C17CF4
	058 Move X0, 0x7A8000
	059 Move X0, [X0+2424]
	060 Call 0x1C17CF4
	061 Move X0, 0x7FE000
	062 Move X0, [X0+3072]
	063 Call 0x1C17CF4
	064 Move X0, 0x7A8000
	065 Move X0, [X0+960]
	066 Call 0x1C17CF4
	067 Move X0, 0x7FF000
	068 Move X0, [X0+1816]
	069 Call 0x1C17CF4
	070 Move X0, 0x7FE000
	071 Move X0, [X0+3568]
	072 Call 0x1C17CF4
	073 Move X0, 0x7A4000
	074 Move X0, [X0+1432]
	075 Call 0x1C17CF4
	076 Move X0, 0x800000
	077 Move X0, [X0+424]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+2447], W8
	081 Move X0, [X22]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X25
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Equality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {344}
	094 Move X8, [X31+40]
	095 Compare X8, 0
	096 JumpIfEqual {351}
	097 Move X8, [X31+32]
	098 Compare X8, 0
	099 JumpIfEqual {358}
	100 Compare X23, 0
	101 JumpIfEqual {365}
	102 Compare X19, 0
	103 JumpIfEqual {372}
	104 Move [X31+16], X23
	105 Compare X25, 0
	106 JumpIfEqual {342}
	107 Move X8, 0x7A8000
	108 Move X8, [X8+960]
	109 Move X22, 0x800000
	110 Move X23, 0x7FE000
	111 Move X24, 0x800000
	112 Move X26, 0x7FF000
	113 Move X22, [X22+416]
	114 Move X23, [X23+3072]
	115 Move X24, [X24+408]
	116 Move X26, [X26+1816]
	117 Move X0, [X8]
	118 Move X27, 0x800000
	119 Move X28, 0x7FE000
	120 Move X29, 0x7FE000
	121 Move X20, [X25+88]
	122 Move X27, [X27+400]
	123 Move X28, [X28+3568]
	124 Move X29, [X29+3544]
	125 Call 0x1C17F10
	126 Move X2, [X22]
	127 Move X1, X20
	128 Move X22, X25
	129 Move X25, X0
	130 Call List`1<Vector3>..ctor, X0, X1
	131 Move X0, [X23]
	132 Move X20, [X22+136]
	133 Call 0x1C17F10
	134 Move X2, [X24]
	135 Move X1, X20
	136 Move [X31+24], X0
	137 Call List`1<Color>..ctor, X0, X1
	138 Move X0, [X26]
	139 Move X20, [X22+96]
	140 Call 0x1C17F10
	141 Move X2, [X27]
	142 Move X1, X20
	143 Move X27, X0
	144 Call List`1<Vector2>..ctor, X0, X1
	145 Move X0, [X28]
	146 Move X20, [X22+40]
	147 Call 0x1C17F10
	148 Move X2, [X29]
	149 Move X1, X20
	150 Move X28, X0
	151 Call List`1<Object>..ctor, X0, X1
	152 Move X0, X22
	153 Move X1, X31
	154 Call ProBuilderMesh.get_sharedVertexLookup, X0
	155 Move X29, X0
	156 Move X0, X22
	157 Move X1, X31
	158 Move [X31+8], X22
	159 Call ProBuilderMesh.get_vertexCount, X0
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X22, 0x7AE000
	163 Move X22, [X22+2136]
	164 Move W20, W0
	165 Move W8, W31
	166 Move X9, [X31+40]
	167 Move W9, [X9+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X26, [X31+16]
	170 Compare X25, 0
	171 JumpIfEqual {342}
	172 Move X23, W8
	173 Move X8, [X31+40]
	174 Move X0, X25
	175 Add X8, X8, X23
	176 Add X24, X8, 32
	177 Move X8, 0x7D0000
	178 Move X1, [X24]
	179 Move X8, [X8+3416]
	180 Move X2, [X8]
	181 Call List`1<Vector3>.AddRange, X0, X1
	182 Move X8, [X31+32]
	183 Move W8, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, [X31+24]
	186 Compare X0, 0
	187 JumpIfEqual {342}
	188 Move X8, [X31+32]
	189 Add X8, X8, X23
	190 Move X1, [X8+32]
	191 Move X8, 0x800000
	192 Move X8, [X8+392]
	193 Move X2, [X8]
	194 Call List`1<Color>.AddRange, X0, X1
	195 Move W8, [X26+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Compare X27, 0
	198 JumpIfEqual {342}
	199 Add X8, X26, X23
	200 Move X1, [X8+32]
	201 Move X8, 0x800000
	202 Move X8, [X8+384]
	203 Move X0, X27
	204 Move X2, [X8]
	205 Call List`1<Vector2>.AddRange, X0, X1
	206 Move W8, [X19+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X26, X19, X23
	209 Add X26, X26, 32
	210 Move X0, [X26]
	211 Compare X0, 0
	212 JumpIfEqual {342}
	213 Move X1, X31
	214 Call Face.ShiftIndexesToZero, X0
	215 Move W8, [X19+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, [X26]
	218 Compare X0, 0
	219 JumpIfEqual {342}
	220 Move W1, W20
	221 Move X2, X31
	222 Call Face.ShiftIndexes, X0, X1
	223 Move W8, [X19+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Compare X28, 0
	226 JumpIfEqual {342}
	227 Move X9, 0x7FE000
	228 Move X1, [X26]
	229 Move W10, [X28+28]
	230 Move X8, [X28+16]
	231 Move X9, [X9+3600]
	232 Add W10, W10, 1
	233 Move X9, [X9]
	234 Move [X28+28], W10
	235 Compare X8, 0
	236 JumpIfEqual {342}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W11, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add W9, W10, 1
	241 Add X8, X8, X10
	242 Move [X28+24], W9
	243 Move [X8+32], X1
	244 Move X8, [X9+32]
	245 Move X0, X28
	246 Move X8, [X8+192]
	247 Move X2, [X8+112]
	248 Call List`1<Object>.AddWithResize, X0, X1
	249 Compare X21, 0
	250 JumpIfEqual {342}
	251 Move X8, [X31+40]
	252 Move W8, [X8+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X8, [X24]
	255 Compare X8, 0
	256 JumpIfEqual {342}
	257 Move W9, [X21+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X9, X21, X23
	260 Move X9, [X9+32]
	261 Compare X9, 0
	262 JumpIfEqual {342}
	263 Move W8, [X8+24]
	264 Move W9, [X9+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W8, [X21+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add X8, X21, X23
	269 Move X24, X31
	270 Add X26, X8, 32
	271 Move W20, W20
	272 Move X8, [X26]
	273 Compare X8, 0
	274 JumpIfEqual {342}
	275 Move W9, [X8+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Compare X29, 0
	279 JumpIfEqual {342}
	280 Add X8, X8, X24
	281 Move W2, [X8+32]
	282 Move X3, [X22]
	283 Add X1, X20, X24
	284 Move X0, X29
	285 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	286 Move W8, [X21+24]
	287 Add X24, X24, 1
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W9, [X19+24]
	290 Move W20, [X25+24]
	291 Add W8, W23, 1
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X20, [X31+8]
	294 Move X1, X25
	295 Move X2, X31
	296 Move X0, X20
	297 Call ProBuilderMesh.set_positions, X0, X1
	298 Move X1, [X31+24]
	299 Move X0, X20
	300 Move X2, X31
	301 Call ProBuilderMesh.set_colors, X0, X1
	302 Move X0, X20
	303 Move X1, X27
	304 Move X2, X31
	305 Call ProBuilderMesh.set_textures, X0, X1
	306 Move X0, X20
	307 Move X1, X28
	308 Move X2, X31
	309 Call ProBuilderMesh.set_faces, X0, X1
	310 Move X0, X20
	311 Move X1, X29
	312 Move X2, X31
	313 Call ProBuilderMesh.SetSharedVertices, X0, X1
	314 Move X8, 0x7A4000
	315 Move X8, [X8+2600]
	316 Move X0, [X8]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X8, 0x800000
	322 Move X8, [X8+424]
	323 Move X1, X31
	324 Move X0, [X8]
	325 Call Debug.LogError, X0
	326 Move X19, X31
	327 Move X0, X19
	328 Move X20, [X31+128]
	329 Move X19, [X31+136]
	330 Move X22, [X31+112]
	331 Move X21, [X31+120]
	332 Move X24, [X31+96]
	333 Move X23, [X31+104]
	334 Move X26, [X31+80]
	335 Move X25, [X31+88]
	336 Move X28, [X31+64]
	337 Move X27, [X31+72]
	338 Move X29, [X31+48]
	339 Move X30, [X31+56]
	340 Add X31, X31, 144
	341 Return X0
	342 Call 0x1C17F20
	343 Call 0x1C17F28
	344 Move X0, 0x7A9000
	345 Move X0, [X0+1320]
	346 Call 0x1C17D08
	347 Call 0x1C17F10
	348 Move X19, X0
	349 Move X0, 0x7FE000
	350 Move X0, [X0+3728]
	351 Move X0, 0x7A9000
	352 Move X0, [X0+1320]
	353 Call 0x1C17D08
	354 Call 0x1C17F10
	355 Move X19, X0
	356 Move X0, 0x7FF000
	357 Move X0, [X0+1840]
	358 Move X0, 0x7A9000
	359 Move X0, [X0+1320]
	360 Call 0x1C17D08
	361 Call 0x1C17F10
	362 Move X19, X0
	363 Move X0, 0x7FE000
	364 Move X0, [X0+3056]
	365 Move X0, 0x7A9000
	366 Move X0, [X0+1320]
	367 Call 0x1C17D08
	368 Call 0x1C17F10
	369 Move X19, X0
	370 Move X0, 0x7CD000
	371 Move X0, [X0+120]
	372 Move X0, 0x7A9000
	373 Move X0, [X0+1320]
	374 Call 0x1C17D08
	375 Call 0x1C17F10
	376 Move X19, X0
	377 Move X0, 0x7FF000
	378 Move X0, [X0+1600]
	379 Call 0x1C17D08
	380 Move X1, X0
	381 Move X0, X19
	382 Move X2, X31
	383 Call ArgumentNullException..ctor, X0, X1
	384 Move X0, 0x800000
	385 Move X0, [X0+432]
	386 Call 0x1C17D08
	387 Move X1, X0
	388 Move X0, X19
	389 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Face CreatePolygon(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<System.Int32> indexes, System.Boolean unordered)

Disassembly:
	0x03950874 LDR X0, [X0 + 0xE08]
	0x03950878 BL 0x1C16CF4
	0x0395087C ADRP X0, 0x7FF000
	0x03950880 LDR X0, [X0 + 0x278]
	0x03950884 BL 0x1C16CF4
	0x03950888 ADRP X0, 0x7FF000
	0x0395088C LDR X0, [X0 + 0x1C8]
	0x03950890 BL 0x1C16CF4
	0x03950894 ADRP X0, 0x7FF000
	0x03950898 LDR X0, [X0 + 0x280]
	0x0395089C BL 0x1C16CF4
	0x039508A0 ADRP X0, 0x7FF000
	0x039508A4 LDR X0, [X0 + 0x288]
	0x039508A8 BL 0x1C16CF4
	0x039508AC ADRP X0, 0x7FD000
	0x039508B0 LDR X0, [X0 + 0xDE8]
	0x039508B4 BL 0x1C16CF4
	0x039508B8 ADRP X0, 0x7FF000
	0x039508BC LDR X0, [X0 + 0x290]
	0x039508C0 BL 0x1C16CF4
	0x039508C4 ADRP X0, 0x7FF000
	0x039508C8 LDR X0, [X0 + 0x298]
	0x039508CC BL 0x1C16CF4
	0x039508D0 ADRP X0, 0x7FF000
	0x039508D4 LDR X0, [X0 + 0x248]
	0x039508D8 BL 0x1C16CF4
	0x039508DC ADRP X0, 0x7FF000
	0x039508E0 LDR X0, [X0 + 0x2A0]
	0x039508E4 BL 0x1C16CF4
	0x039508E8 MOVZ W8, 0x1
	0x039508EC STRB W8, [X20 + 0x994]
	0x039508F0 LDR X0, [X27]
	0x039508F4 STP X31, X31, [X31 + 0x20]
	0x039508F8 STP X31, X31, [X31 + 0x10]
	0x039508FC LDR W8, [X0 + 0xE0]
	0x03950900 CBNZ W8, 0x395090C
	0x03950904 BL 0x1C16DFC
	0x03950908 LDR X0, [X27]
	0x0395090C LDR X8, [X0 + 0xB8]
	0x03950910 ADRP X28, 0x7FF000
	0x03950914 ADRP X29, 0x7FE000
	0x03950918 LDR X21, [X8 + 0x10]
	0x0395091C LDR X28, [X28 + 0x250]
	0x03950920 LDR X29, [X29 + 0x170]
	0x03950924 CBNZ X21, 0x3950978
	0x03950928 LDR W8, [X0 + 0xE0]
	0x0395092C CBNZ W8, 0x3950938
	0x03950930 BL 0x1C16DFC
	0x03950934 LDR X0, [X27]
	0x03950938 LDR X8, [X0 + 0xB8]
	0x0395093C LDR X22, [X8]
	0x03950940 ADRP X8, 0x7FF000
	0x03950944 LDR X8, [X8 + 0x270]
	0x03950948 LDR X0, [X8]
	0x0395094C BL 0x1C16F10
	0x03950950 ADRP X8, 0x7FF000
	0x03950954 LDR X8, [X8 + 0x290]
	0x03950958 MOV X1, X22
	0x0395095C MOV X3, X31
	0x03950960 MOV X21, X0
	0x03950964 LDR X2, [X8]
	0x03950968 BL 0x2D31154
	0x0395096C LDR X8, [X27]
	0x03950970 LDR X8, [X8 + 0xB8]
	0x03950974 STR X21, [X8 + 0x10]
	0x03950978 LDR X2, [X28]
	0x0395097C MOV X0, X23
	0x03950980 MOV X1, X21
	0x03950984 BL 0x21CF80C
	0x03950988 LDR X1, [X29]
	0x0395098C BL 0x21D599C
	0x03950990 CBZ X19, 0x3950BB8
	0x03950994 STP X23, X0, [X31]
	0x03950998 ADRP X8, 0x7FF000
	0x0395099C LDR X8, [X8 + 0x2A0]
	0x039509A0 LDR W1, [X19 + 0x18]
	0x039509A4 LDR X0, [X8]
	0x039509A8 BL 0x1C16D6C
	0x039509AC CBZ X0, 0x3950BB8
	0x039509B0 LDR W8, [X0 + 0x18]
	0x039509B4 MOV X22, X0
	0x039509B8 CMP W8, 0x1
	0x039509BC B.LT 0x3950A90
	0x039509C0 ADRP X21, 0x7FF000
	0x039509C4 LDR X21, [X21 + 0x288]
	0x039509C8 MOV X23, X31
	0x039509CC ADD X20, X22, 0x20
	0x039509D0 LDR X2, [X21]
	0x039509D4 MOV X0, X19
	0x039509D8 MOV W1, W23
	0x039509DC BL 0x301BCCC
	0x039509E0 LDR X8, [X27]
	0x039509E4 MOV X24, X0
	0x039509E8 LDR W9, [X8 + 0xE0]
	0x039509EC CBNZ W9, 0x39509FC
	0x039509F0 MOV X0, X8
	0x039509F4 BL 0x1C16DFC
	0x039509F8 LDR X8, [X27]
	0x039509FC LDR X9, [X8 + 0xB8]
	0x03950A00 LDR X25, [X9 + 0x18]
	0x03950A04 CBNZ X25, 0x3950A5C
	0x03950A08 LDR W9, [X8 + 0xE0]
	0x03950A0C CBNZ W9, 0x3950A1C
	0x03950A10 MOV X0, X8
	0x03950A14 BL 0x1C16DFC
	0x03950A18 LDR X8, [X27]
	0x03950A1C LDR X8, [X8 + 0xB8]
	0x03950A20 LDR X26, [X8]
	0x03950A24 ADRP X8, 0x7FF000
	0x03950A28 LDR X8, [X8 + 0x270]
	0x03950A2C LDR X0, [X8]
	0x03950A30 BL 0x1C16F10
	0x03950A34 ADRP X8, 0x7FF000
	0x03950A38 LDR X8, [X8 + 0x298]
	0x03950A3C MOV X1, X26
	0x03950A40 MOV X3, X31
	0x03950A44 MOV X25, X0
	0x03950A48 LDR X2, [X8]
	0x03950A4C BL 0x2D31154
	0x03950A50 LDR X8, [X27]
	0x03950A54 LDR X8, [X8 + 0xB8]
	0x03950A58 STR X25, [X8 + 0x18]
	0x03950A5C LDR X2, [X28]
	0x03950A60 MOV X0, X24
	0x03950A64 MOV X1, X25
	0x03950A68 BL 0x21CF80C
	0x03950A6C LDR X1, [X29]
	0x03950A70 BL 0x21D599C
	0x03950A74 LDR W8, [X22 + 0x18]
	0x03950A78 CMP X23, X8
	0x03950A7C B.CS 0x3950BB4
	0x03950A80 STR X0, [X20, X23, LSL #3]
	0x03950A84 ADD X23, X23, 0x1
	0x03950A88 CMP X23, W8, SXTW
	0x03950A8C B.LT 0x39509D0
	0x03950A90 LDR X0, [X31 + 0x8]
	0x03950A94 ADD X1, X31, 0x28
	0x03950A98 MOV X2, X22
	0x03950A9C MOV X3, X31
	0x03950AA0 BL 0x397C3DC
	0x03950AA4 MOV X22, X31
	0x03950AA8 TBZ X0, 0x0, 0x3950B90
	0x03950AAC ADRP X8, 0x7FD000
	0x03950AB0 LDR X8, [X8 + 0xDE8]
	0x03950AB4 LDR X0, [X8]
	0x03950AB8 BL 0x1C16F10
	0x03950ABC ADRP X8, 0x7FF000
	0x03950AC0 LDR X8, [X8 + 0x1C8]
	0x03950AC4 MOV X21, X0
	0x03950AC8 LDR X1, [X8]
	0x03950ACC BL 0x301B7C4
	0x03950AD0 CBZ X21, 0x3950BB8
	0x03950AD4 ADRP X20, 0x7FD000
	0x03950AD8 LDR X20, [X20 + 0xE08]
	0x03950ADC LDR X1, [X31]
	0x03950AE0 MOV X0, X21
	0x03950AE4 LDR X2, [X20]
	0x03950AE8 BL 0x301C194
	0x03950AEC ADRP X8, 0x7FF000
	0x03950AF0 LDR X8, [X8 + 0x278]
	0x03950AF4 MOV X0, X19
	0x03950AF8 LDR X1, [X8]
	0x03950AFC ADD X8, X31, 0x10
	0x03950B00 BL 0x301CB58
	0x03950B04 ADRP X19, 0x7FF000
	0x03950B08 LDR X19, [X19 + 0x260]
	0x03950B0C LDR X1, [X19]
	0x03950B10 ADD X0, X31, 0x10
	0x03950B14 BL 0x2BC4350
	0x03950B18 TBZ X0, 0x0, 0x3950B30
	0x03950B1C LDR X1, [X31 + 0x20]
	0x03950B20 LDR X2, [X20]
	0x03950B24 MOV X0, X21
	0x03950B28 BL 0x301C194
	0x03950B2C B 0x3950B0C
	0x03950B30 ADRP X8, 0x7FF000
	0x03950B34 LDR X8, [X8 + 0x258]
	0x03950B38 ADD X0, X31, 0x10
	0x03950B3C LDR X1, [X8]
	0x03950B40 BL 0x2BC434C
	0x03950B44 ADRP X8, 0x7FF000
	0x03950B48 LDR X8, [X8 + 0x1F0]
	0x03950B4C LDR X0, [X8]
	0x03950B50 BL 0x1C16F10
	0x03950B54 MOV X1, X31
	0x03950B58 MOV X22, X0
	0x03950B5C BL 0x3901F84
	0x03950B60 CBZ X22, 0x3950BB8
	0x03950B64 STR X21, [X22 + 0x18]
	0x03950B68 ADRP X8, 0x7FE000
	0x03950B6C LDR X8, [X8 + 0x560]
	0x03950B70 LDR X19, [X31 + 0x28]
	0x03950B74 LDR X0, [X8]
	0x03950B78 BL 0x1C16F10
	0x03950B7C MOV X1, X19
	0x03950B80 MOV X2, X31
	0x03950B84 MOV X20, X0
	0x03950B88 BL 0x3900368
	0x03950B8C STR X20, [X22 + 0x10]
	0x03950B90 MOV X0, X22
	0x03950B94 LDP X20, X19, [X31 + 0x80]
	0x03950B98 LDP X22, X21, [X31 + 0x70]
	0x03950B9C LDP X24, X23, [X31 + 0x60]
	0x03950BA0 LDP X26, X25, [X31 + 0x50]
	0x03950BA4 LDP X28, X27, [X31 + 0x40]
	0x03950BA8 LDP X29, X30, [X31 + 0x30]
	0x03950BAC ADD X31, X31, 0x90
	0x03950BB0 RET
	0x03950BB4 BL 0x1C16F28
	0x03950BB8 BL 0x1C16F20
	0x03950BBC B 0x3950BC0
	0x03950BC0 MOV X20, X0
	0x03950BC4 CMP W1, 0x1
	0x03950BC8 B.NE 0x3950BFC
	0x03950BCC MOV X0, X20
	0x03950BD0 BL 0x3EB1AD0
	0x03950BD4 LDR X19, [X0]
	0x03950BD8 BL 0x3EB1AE0
	0x03950BDC ADRP X8, 0x7FF000
	0x03950BE0 LDR X8, [X8 + 0x258]
	0x03950BE4 ADD X0, X31, 0x10
	0x03950BE8 LDR X1, [X8]
	0x03950BEC BL 0x2BC434C
	0x03950BF0 CBZ X19, 0x3950B44
	0x03950BF4 MOV X0, X19
	0x03950BF8 BL 0x1C16F18
	0x03950BFC MOV X19, X31
	0x03950C00 B 0x3950C08
	0x03950C04 MOV X20, X0
	0x03950C08 ADRP X8, 0x7FF000
	0x03950C0C LDR X8, [X8 + 0x258]
	0x03950C10 LDR X1, [X8]
	0x03950C14 ADD X0, X31, 0x10
	0x03950C18 BL 0x2BC434C
	0x03950C1C CBNZ X19, 0x3950C28
	0x03950C20 MOV X0, X20
	0x03950C24 BL 0x1D2C690
	0x03950C28 MOV X0, X19
	0x03950C2C BL 0x1C16F18
	0x03950C30 BL 0x1990590
	0x03950C34 STP X30, X19, [X31 - 0x10]!
	0x03950C38 CBZ X0, 0x3950C60
	0x03950C3C MOV X1, X31
	0x03950C40 MOV X19, X0
	0x03950C44 BL 0x39142B4
	0x03950C48 LDR X1, [X19 + 0x28]
	0x03950C4C LDR V0, [X19 + 0x30]
	0x03950C50 LDRB W2, [X19 + 0x38]
	0x03950C54 MOV X3, X31
	0x03950C58 LDP X30, X19, [X31], #0x10
	0x03950C5C B 0x3950CAC
	0x03950C60 BL 0x1C16F20
	0x03950C64 AND W2, W2, 0x1
	0x03950C68 MOV X3, X31
	0x03950C6C B 0x3950CAC
	0x03950C70 STP X30, X19, [X31 - 0x10]!
	0x03950C74 CBZ X0, 0x3950CA8
	0x03950C78 MOV X1, X31
	0x03950C7C MOV X19, X0
	0x03950C80 BL 0x3916FC0
	0x03950C84 MOV X0, X19
	0x03950C88 MOV W1, W31
	0x03950C8C MOV X2, X31
	0x03950C90 BL 0x39197E8
	0x03950C94 MOVZ W1, 0x1F
	0x03950C98 MOV X0, X19
	0x03950C9C MOV X2, X31
	0x03950CA0 LDP X30, X19, [X31], #0x10
	0x03950CA4 B 0x3919D94
	0x03950CA8 BL 0x1C16F20
	0x03950CAC SUB X31, X31, 0x90
	0x03950CB0 STP D11, D10, [X31 + 0x10]
	0x03950CB4 STP D9, D8, [X31 + 0x20]
	0x03950CB8 STP X29, X30, [X31 + 0x30]
	0x03950CBC STP X28, X27, [X31 + 0x40]
	0x03950CC0 STP X26, X25, [X31 + 0x50]
	0x03950CC4 STP X24, X23, [X31 + 0x60]
	0x03950CC8 STP X22, X21, [X31 + 0x70]
	0x03950CCC STP X20, X19, [X31 + 0x80]
	0x03950CD0 ADRP X24, 0xA91000
	0x03950CD4 ADRP X23, 0x7A3000
	0x03950CD8 LDRB W8, [X24 + 0x992]
	0x03950CDC LDR X23, [X23 + 0x598]
	0x03950CE0 MOV X22, X3
	0x03950CE4 MOV W20, W2
	0x03950CE8 MOV V8.16B, V0.16B
	0x03950CEC MOV X21, X1
	0x03950CF0 MOV X19, X0
	0x03950CF4 TBNZ X8, 0x0, 0x3950E14
	0x03950CF8 ADRP X0, 0x7FD000
	0x03950CFC LDR X0, [X0 + 0x9D8]
	0x03950D00 BL 0x1C16CF4
	0x03950D04 ADRP X0, 0x7FF000
	0x03950D08 LDR X0, [X0 + 0x2A8]
	0x03950D0C BL 0x1C16CF4
	0x03950D10 ADRP X0, 0x7FE000
	0x03950D14 LDR X0, [X0 + 0x170]
	0x03950D18 BL 0x1C16CF4
	0x03950D1C ADRP X0, 0x7FE000
	0x03950D20 LDR X0, [X0 + 0x3F0]
	0x03950D24 BL 0x1C16CF4
	0x03950D28 ADRP X0, 0x7FE000
	0x03950D2C LDR X0, [X0 + 0x560]
	0x03950D30 BL 0x1C16CF4
	0x03950D34 ADRP X0, 0x7FF000
	0x03950D38 LDR X0, [X0 + 0x2B0]
	0x03950D3C BL 0x1C16CF4
	0x03950D40 ADRP X0, 0x7FF000
	0x03950D44 LDR X0, [X0 + 0x2B8]
	0x03950D48 BL 0x1C16CF4
	0x03950D4C ADRP X0, 0x7FD000
	0x03950D50 LDR X0, [X0 + 0xF78]
	0x03950D54 BL 0x1C16CF4
	0x03950D58 ADRP X0, 0x7FF000
	0x03950D5C LDR X0, [X0 + 0x2C0]
	0x03950D60 BL 0x1C16CF4
	0x03950D64 ADRP X0, 0x7A4000
	0x03950D68 LDR X0, [X0 + 0xE18]
	0x03950D6C BL 0x1C16CF4
	0x03950D70 ADRP X0, 0x7FD000
	0x03950D74 LDR X0, [X0 + 0xAD0]
	0x03950D78 BL 0x1C16CF4
	0x03950D7C ADRP X0, 0x7AA000
	0x03950D80 LDR X0, [X0 + 0x4B8]
	0x03950D84 BL 0x1C16CF4
	0x03950D88 ADRP X0, 0x7A3000
	0x03950D8C LDR X0, [X0 + 0x598]
	0x03950D90 BL 0x1C16CF4
	0x03950D94 ADRP X0, 0x7FF000
	0x03950D98 LDR X0, [X0 + 0x2C8]
	0x03950D9C BL 0x1C16CF4
	0x03950DA0 ADRP X0, 0x7FF000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0xA92000
	015 Move X20, 0x7A4000
	016 Move W8, [X21+2448]
	017 Move X20, [X20+1432]
	018 Move W23, W2
	019 Move X22, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {81}
	025 Move X0, 0x7FF000
	026 Move X0, [X0+680]
	027 Call 0x1C17CF4
	028 Move X0, 0x7AB000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0x7AB000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0x7AB000
	035 Move X0, [X0+2112]
	036 Call 0x1C17CF4
	037 Move X0, 0x800000
	038 Move X0, [X0+440]
	039 Call 0x1C17CF4
	040 Move X0, 0x7AB000
	041 Move X0, [X0+2120]
	042 Call 0x1C17CF4
	043 Move X0, 0x800000
	044 Move X0, [X0+448]
	045 Call 0x1C17CF4
	046 Move X0, 0x7FE000
	047 Move X0, [X0+3544]
	048 Call 0x1C17CF4
	049 Move X0, 0x7FE000
	050 Move X0, [X0+3552]
	051 Call 0x1C17CF4
	052 Move X0, 0x800000
	053 Move X0, [X0+456]
	054 Call 0x1C17CF4
	055 Move X0, 0x800000
	056 Move X0, [X0+464]
	057 Call 0x1C17CF4
	058 Move X0, 0x7FE000
	059 Move X0, [X0+3560]
	060 Call 0x1C17CF4
	061 Move X0, 0x7FE000
	062 Move X0, [X0+3568]
	063 Call 0x1C17CF4
	064 Move X0, 0x7FE000
	065 Move X0, [X0+2768]
	066 Call 0x1C17CF4
	067 Move X0, 0x7A4000
	068 Move X0, [X0+1432]
	069 Call 0x1C17CF4
	070 Move X0, 0x7FF000
	071 Move X0, [X0+32]
	072 Call 0x1C17CF4
	073 Move X0, 0x800000
	074 Move X0, [X0+472]
	075 Call 0x1C17CF4
	076 Move X0, 0x800000
	077 Move X0, [X0+480]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X21+2448], W8
	081 Move X0, [X20]
	082 Move [X31+48], X31
	083 Move [X31+56], X31
	084 Move [X31+64], X31
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Equality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {307}
	097 Compare X19, 0
	098 JumpIfEqual {306}
	099 Move [X31+20], W23
	100 Move X20, 0x7FE000
	101 Move X21, 0x7FE000
	102 Move X25, 0x800000
	103 Move X29, [X19+48]
	104 Move X20, [X20+3560]
	105 Move X21, [X21+3552]
	106 Move X25, [X25+456]
	107 Move X0, X19
	108 Move X1, X31
	109 Call ProBuilderMesh.get_sharedVertexLookup, X0
	110 Move [X31+8], X0
	111 Move X0, X19
	112 Move X1, X22
	113 Move X2, X31
	114 Call ProBuilderMesh.GetSharedVertexHandles, X0, X1
	115 Move X23, X0
	116 Move X0, X19
	117 Move X1, X31
	118 Move X2, X31
	119 Call ProBuilderMesh.GetVertices, X0, X1
	120 Move X8, [X20]
	121 Move X24, X0
	122 Move X0, X8
	123 Call 0x1C17F10
	124 Move X2, [X21]
	125 Move X1, X24
	126 Move X22, X0
	127 Call List`1<Object>..ctor, X0, X1
	128 Move X0, [X20]
	129 Call 0x1C17F10
	130 Move X1, [X25]
	131 Move X24, X0
	132 Call List`1<Object>..ctor, X0
	133 Compare X23, 0
	134 JumpIfEqual {306}
	135 Move X8, 0x7AB000
	136 Move X8, [X8+2120]
	137 Move X27, 0x7AB000
	138 Move X28, 0x800000
	139 Move X20, 0x7FF000
	140 Move X21, 0x800000
	141 Move X27, [X27+2104]
	142 Move X28, [X28+464]
	143 Move X20, [X20+32]
	144 Move X21, [X21+448]
	145 Move X1, [X8]
	146 Add X8, X31, 24
	147 Move X0, X23
	148 Call HashSet`1<Int32>.GetEnumerator, X0
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Move X8, [X31+40]
	151 Move [X31+3], V0
	152 Move [X31+64], X8
	153 Move X1, [X27]
	154 Add X0, X31, 48
	155 Call Enumerator<Int32>.MoveNext, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {207}
	160 Compare X29, 0
	161 JumpIfEqual {304}
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Move W9, [X29+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Add X8, X29, X8
	166 Move X0, [X8+32]
	167 Compare X0, 0
	168 JumpIfEqual {305}
	169 Move W1, W31
	170 Move X2, X31
	171 Call SharedVertex.get_Item, X0, X1
	172 Move W1, W0
	173 Compare X22, 0
	174 JumpIfEqual {302}
	175 Move X2, [X28]
	176 Move X0, X22
	177 Call List`1<Object>.get_Item, X0, X1
	178 Move X26, X0
	179 Move X0, [X20]
	180 Call 0x1C17F10
	181 Move X25, X0
	182 Move X1, X26
	183 Move X2, X31
	184 Call Vertex..ctor, X0, X1
	185 Compare X24, 0
	186 JumpIfEqual {303}
	187 Move W10, [X24+28]
	188 Move X8, [X24+16]
	189 Move X9, [X21]
	190 Add W10, W10, 1
	191 Move [X24+28], W10
	192 Compare X8, 0
	193 JumpIfEqual {300}
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Move W11, [X8+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W9, W10, 1
	198 Add X8, X8, X10
	199 Move [X24+24], W9
	200 Move [X8+32], X25
	201 Move X8, [X9+32]
	202 Move X8, [X8+192]
	203 Move X2, [X8+112]
	204 Move X0, X24
	205 Move X1, X25
	206 Call List`1<Object>.AddWithResize, X0, X1
	207 Move X8, 0x7AB000
	208 Move X8, [X8+2096]
	209 Add X0, X31, 48
	210 Move X1, [X8]
	211 Call Enumerator<Int32>.Dispose, X0
	212 Move W20, [X31+20]
	213 And W1, W20, 1
	214 Move X0, X24
	215 Call AppendElements.FaceWithVertices, X0, X1
	216 Compare X0, 0
	217 JumpIfEqual {268}
	218 Move X8, 0x7FF000
	219 Move X8, [X8+680]
	220 Move X24, X0
	221 Move X0, X23
	222 Move X1, [X8]
	223 Call Enumerable.ToList, X0
	224 Move [X24+32], X0
	225 Move X8, 0x7FE000
	226 Move X23, [X19+40]
	227 Move X8, [X8+3568]
	228 Move X0, [X8]
	229 Call 0x1C17F10
	230 Move X8, 0x7FE000
	231 Move X8, [X8+3544]
	232 Move X1, X23
	233 Move X20, X0
	234 Move X2, [X8]
	235 Call List`1<Object>..ctor, X0, X1
	236 Move X8, 0x800000
	237 Move X8, [X8+440]
	238 Move W1, 1
	239 Move X0, [X8]
	240 Call 0x1C17D6C
	241 Compare X0, 0
	242 JumpIfEqual {306}
	243 Move W8, [X0+24]
	244 Compare W8, 0
	245 JumpIfEqual {325}
	246 Move X21, [X31+8]
	247 Move X1, X22
	248 Move X2, X20
	249 Move X4, X31
	250 Move X3, X21
	251 Move X5, X31
	252 Move [X0+32], X24
	253 Call FaceRebuildData.Apply, X0, X1, X2, X3, X4
	254 Move X0, X19
	255 Move X1, X22
	256 Move W2, W31
	257 Move X3, X31
	258 Call ProBuilderMesh.SetVertices, X0, X1, X2
	259 Move X0, X19
	260 Move X1, X20
	261 Move X2, X31
	262 Call ProBuilderMesh.set_faces, X0, X1
	263 Move X0, X19
	264 Move X1, X21
	265 Move X2, X31
	266 Call ProBuilderMesh.SetSharedVertices, X0, X1
	267 Move X0, [X24+16]
	268 Move X8, 0x800000
	269 Move X9, 0x7FE000
	270 Move X8, [X8+472]
	271 Move X9, [X9+2768]
	272 And W31, W20, 1
	273 Move X0, [X9]
	274 Move X9, 0x800000
	275 Move X9, [X9+480]
	276 NotImplemented "Instruction CSEL not yet implemented."
	277 Move W9, [X0+224]
	278 Move X19, [X8]
	279 Compare W9, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Move X0, X19
	283 Move X1, X31
	284 Call Log.Info, X0
	285 Move X0, X31
	286 Move X20, [X31+160]
	287 Move X19, [X31+168]
	288 Move X22, [X31+144]
	289 Move X21, [X31+152]
	290 Move X24, [X31+128]
	291 Move X23, [X31+136]
	292 Move X26, [X31+112]
	293 Move X25, [X31+120]
	294 Move X28, [X31+96]
	295 Move X27, [X31+104]
	296 Move X29, [X31+80]
	297 Move X30, [X31+88]
	298 Add X31, X31, 176
	299 Return X0
	300 Call 0x1C17F20
	301 Call 0x1C17F28
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Move X0, 0x7A9000
	308 Move X0, [X0+1320]
	309 Call 0x1C17D08
	310 Call 0x1C17F10
	311 Move X19, X0
	312 Move X0, 0x7FE000
	313 Move X0, [X0+3728]
	314 Call 0x1C17D08
	315 Move X1, X0
	316 Move X0, X19
	317 Move X2, X31
	318 Call ArgumentNullException..ctor, X0, X1
	319 Move X0, 0x800000
	320 Move X0, [X0+488]
	321 Call 0x1C17D08
	322 Move X1, X0
	323 Move X0, X19
	324 Call 0x1C17DEC
	325 Call 0x1C17F28
	326 Move W20, [X31+20]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Call 0x3EB2AD0
	329 Move X25, [X0]
	330 Call 0x3EB2AE0
	331 Move X8, 0x7AB000
	332 Move X8, [X8+2096]
	333 Add X0, X31, 48
	334 Move X1, [X8]
	335 Call Enumerator<Int32>.Dispose, X0
	336 Compare X25, 0
	337 JumpIfEqual {213}
	338 Move X0, X25
	339 Call 0x1C17F18
	340 Move X19, X0
	341 Move X25, X31
	342 Move X19, X0
	343 Move X8, 0x7AB000
	344 Move X8, [X8+2096]
	345 Move X1, [X8]
	346 Add X0, X31, 48
	347 Call Enumerator<Int32>.Dispose, X0
	348 Compare X25, 0
	349 JumpIfNotEqual {352}
	350 Move X0, X19
	351 Call 0x1D2D690
	352 Move X0, X25
	353 Call 0x1C17F18
	354 Call 0x1991590

Method: UnityEngine.ProBuilder.Face CreatePolygonWithHole(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<System.Int32> indexes, System.Collections.Generic.IList`1<System.Collections.Generic.IList`1<System.Int32>> holes)

Disassembly:
	0x03950E6C LDUR X11, [X10 - 0x8]
	0x03950E70 CMP X11, X1
	0x03950E74 B.EQ 0x3950E94
	0x03950E78 SUBS X9, X9, 0x1
	0x03950E7C ADD X10, X10, 0x10
	0x03950E80 B.NE 0x3950E6C
	0x03950E84 MOV X0, X21
	0x03950E88 MOV W2, W31
	0x03950E8C BL 0x1C5C788
	0x03950E90 B 0x3950EA0
	0x03950E94 LDRSW X9, [X10]
	0x03950E98 ADD X8, X8, X9, 0x4, LSL
	0x03950E9C ADD X0, X8, 0x138
	0x03950EA0 LDP X8, X1, [X0]
	0x03950EA4 MOV X0, X21
	0x03950EA8 BLR X8
	0x03950EAC CMP W0, 0x2
	0x03950EB0 B.LE 0x3950F18
	0x03950EB4 ADRP X28, 0x7FE000
	0x03950EB8 LDR X28, [X28 + 0x170]
	0x03950EBC MOV X0, X21
	0x03950EC0 LDR X1, [X28]
	0x03950EC4 BL 0x21D599C
	0x03950EC8 MOV X21, X0
	0x03950ECC CBZ X22, 0x3950FA0
	0x03950ED0 ADRP X29, 0x7FF000
	0x03950ED4 LDR X8, [X22]
	0x03950ED8 LDR X29, [X29 + 0x2B8]
	0x03950EDC LDRH W9, [X8 + 0x12E]
	0x03950EE0 LDR X1, [X29]
	0x03950EE4 CBZ X9, 0x3950F08
	0x03950EE8 LDR X10, [X8 + 0xB0]
	0x03950EEC ADD X10, X10, 0x8
	0x03950EF0 LDUR X11, [X10 - 0x8]
	0x03950EF4 CMP X11, X1
	0x03950EF8 B.EQ 0x3950F40
	0x03950EFC SUBS X9, X9, 0x1
	0x03950F00 ADD X10, X10, 0x10
	0x03950F04 B.NE 0x3950EF0
	0x03950F08 MOV X0, X22
	0x03950F0C MOV W2, W31
	0x03950F10 BL 0x1C5C788
	0x03950F14 B 0x3950F4C
	0x03950F18 ADRP X20, 0x7FF000
	0x03950F1C LDR X20, [X20 + 0x2E8]
	0x03950F20 MOV X0, X19
	0x03950F24 BL 0x3950C70
	0x03950F28 LDR X0, [X24]
	0x03950F2C BL 0x1C16F10
	0x03950F30 LDR X2, [X20]
	0x03950F34 MOV X19, X0
	0x03950F38 MOVZ W1, 0x3
	0x03950F3C B 0x3951694
	0x03950F40 LDRSW X9, [X10]
	0x03950F44 ADD X8, X8, X9, 0x4, LSL
	0x03950F48 ADD X0, X8, 0x138
	0x03950F4C LDP X8, X1, [X0]
	0x03950F50 MOV X0, X22
	0x03950F54 BLR X8
	0x03950F58 CMP W0, 0x1
	0x03950F5C B.LT 0x3950FA0
	0x03950F60 LDR X8, [X22]
	0x03950F64 LDR X1, [X29]
	0x03950F68 LDRH W9, [X8 + 0x12E]
	0x03950F6C CBZ X9, 0x3950F90
	0x03950F70 LDR X10, [X8 + 0xB0]
	0x03950F74 ADD X10, X10, 0x8
	0x03950F78 LDUR X11, [X10 - 0x8]
	0x03950F7C CMP X11, X1
	0x03950F80 B.EQ 0x3951058
	0x03950F84 SUBS X9, X9, 0x1
	0x03950F88 ADD X10, X10, 0x10
	0x03950F8C B.NE 0x3950F78
	0x03950F90 MOV X0, X22
	0x03950F94 MOV W2, W31
	0x03950F98 BL 0x1C5C788
	0x03950F9C B 0x3951064
	0x03950FA0 MOV X23, X31
	0x03950FA4 ADRP X25, 0x7FD000
	0x03950FA8 LDR X25, [X25 + 0xAD0]
	0x03950FAC LDR X0, [X25]
	0x03950FB0 LDR W8, [X0 + 0xE0]
	0x03950FB4 CBNZ W8, 0x3950FBC
	0x03950FB8 BL 0x1C16DFC
	0x03950FBC MOVZ W0, 0x1
	0x03950FC0 MOV X1, X31
	0x03950FC4 BL 0x3906C2C
	0x03950FC8 ADD X1, X31, 0x8
	0x03950FCC MOV X0, X21
	0x03950FD0 MOV X2, X23
	0x03950FD4 MOV X3, X31
	0x03950FD8 BL 0x397C3DC
	0x03950FDC TBZ X0, 0x0, 0x3951024
	0x03950FE0 CBZ X23, 0x3951410
	0x03950FE4 CBZ X21, 0x39517B0
	0x03950FE8 ADRP X26, 0x7FF000
	0x03950FEC LDR X26, [X26 + 0x248]
	0x03950FF0 LDR X0, [X26]
	0x03950FF4 LDR W8, [X0 + 0xE0]
	0x03950FF8 CBNZ W8, 0x3951004
	0x03950FFC BL 0x1C16DFC
	0x03951000 LDR X0, [X26]
	0x03951004 LDR X8, [X0 + 0xB8]
	0x03951008 LDR W27, [X21 + 0x18]
	0x0395100C LDR X22, [X8 + 0x8]
	0x03951010 CBNZ X22, 0x3951358
	0x03951014 LDR W8, [X0 + 0xE0]
	0x03951018 CBZ W8, 0x3951308
	0x0395101C MOV X28, X24
	0x03951020 B 0x3951314
	0x03951024 MOV X0, X19
	0x03951028 BL 0x3950C70
	0x0395102C LDR X0, [X25]
	0x03951030 LDR W8, [X0 + 0xE0]
	0x03951034 CBNZ W8, 0x395103C
	0x03951038 BL 0x1C16DFC
	0x0395103C MOV X0, X31
	0x03951040 BL 0x3906CBC
	0x03951044 LDR X0, [X24]
	0x03951048 BL 0x1C16F10
	0x0395104C ADRP X8, 0x7FE000
	0x03951050 LDR X8, [X8 + 0x2F0]
	0x03951054 B 0x3951688
	0x03951058 LDRSW X9, [X10]
	0x0395105C ADD X8, X8, X9, 0x4, LSL
	0x03951060 ADD X0, X8, 0x138
	0x03951064 LDP X8, X1, [X0]
	0x03951068 MOV X0, X22
	0x0395106C BLR X8
	0x03951070 ADRP X8, 0x7FE000
	0x03951074 LDR X8, [X8 + 0x2A0]
	0x03951078 MOV W1, W0
	0x0395107C LDR X8, [X8]
	0x03951080 MOV X0, X8
	0x03951084 BL 0x1C16D6C
	0x03951088 ADRP X26, 0x7FE000
	0x0395108C LDR X26, [X26 + 0x2C0]
	0x03951090 MOV X23, X0
	0x03951094 MOV W24, W31
	0x03951098 STR W24, [X31 + 0x4]
	0x0395109C LDR X8, [X22]
	0x039510A0 LDR X1, [X29]
	0x039510A4 LDRH W9, [X8 + 0x12E]
	0x039510A8 CBZ X9, 0x39510CC
	0x039510AC LDR X10, [X8 + 0xB0]
	0x039510B0 ADD X10, X10, 0x8
	0x039510B4 LDUR X11, [X10 - 0x8]
	0x039510B8 CMP X11, X1
	0x039510BC B.EQ 0x39510DC
	0x039510C0 SUBS X9, X9, 0x1
	0x039510C4 ADD X10, X10, 0x10
	0x039510C8 B.NE 0x39510B4
	0x039510CC MOV X0, X22
	0x039510D0 MOV W2, W31
	0x039510D4 BL 0x1C5C788
	0x039510D8 B 0x39510E8
	0x039510DC LDRSW X9, [X10]
	0x039510E0 ADD X8, X8, X9, 0x4, LSL
	0x039510E4 ADD X0, X8, 0x138
	0x039510E8 LDP X8, X1, [X0]
	0x039510EC MOV X0, X22
	0x039510F0 BLR X8
	0x039510F4 CMP W24, W0
	0x039510F8 B.GE 0x39512FC
	0x039510FC LDR X8, [X22]
	0x03951100 LDR X1, [X26]
	0x03951104 LDRH W9, [X8 + 0x12E]
	0x03951108 CBZ X9, 0x395112C
	0x0395110C LDR X10, [X8 + 0xB0]
	0x03951110 ADD X10, X10, 0x8
	0x03951114 LDUR X11, [X10 - 0x8]
	0x03951118 CMP X11, X1
	0x0395111C B.EQ 0x395113C
	0x03951120 SUBS X9, X9, 0x1
	0x03951124 ADD X10, X10, 0x10
	0x03951128 B.NE 0x3951114
	0x0395112C MOV X0, X22
	0x03951130 MOV W2, W31
	0x03951134 BL 0x1C5C788
	0x03951138 B 0x3951148
	0x0395113C LDRSW X9, [X10]
	0x03951140 ADD X8, X8, X9, 0x4, LSL
	0x03951144 ADD X0, X8, 0x138
	0x03951148 LDP X8, X2, [X0]
	0x0395114C MOV X0, X22
	0x03951150 MOV W1, W24
	0x03951154 BLR X8
	0x03951158 CBZ X0, 0x39512A4
	0x0395115C LDR X8, [X22]
	0x03951160 LDR X1, [X26]
	0x03951164 LDRH W9, [X8 + 0x12E]
	0x03951168 CBZ X9, 0x395118C
	0x0395116C LDR X10, [X8 + 0xB0]
	0x03951170 ADD X10, X10, 0x8
	0x03951174 LDUR X11, [X10 - 0x8]
	0x03951178 CMP X11, X1
	0x0395117C B.EQ 0x395119C
	0x03951180 SUBS X9, X9, 0x1
	0x03951184 ADD X10, X10, 0x10
	0x03951188 B.NE 0x3951174
	0x0395118C MOV X0, X22
	0x03951190 MOV W2, W31
	0x03951194 BL 0x1C5C788
	0x03951198 B 0x39511A8
	0x0395119C LDRSW X9, [X10]
	0x039511A0 ADD X8, X8, X9, 0x4, LSL
	0x039511A4 ADD X0, X8, 0x138
	0x039511A8 LDP X8, X2, [X0]
	0x039511AC MOV X0, X22
	0x039511B0 MOV W1, W24
	0x039511B4 BLR X8
	0x039511B8 CBZ X0, 0x39517B0
	0x039511BC LDR X8, [X0]
	0x039511C0 LDR X1, [X27]
	0x039511C4 MOV X25, X0
	0x039511C8 LDRH W9, [X8 + 0x12E]
	0x039511CC CBZ X9, 0x39511F0
	0x039511D0 LDR X10, [X8 + 0xB0]
	0x039511D4 ADD X10, X10, 0x8
	0x039511D8 LDUR X11, [X10 - 0x8]
	0x039511DC CMP X11, X1
	0x039511E0 B.EQ 0x3951200
	0x039511E4 SUBS X9, X9, 0x1
	0x039511E8 ADD X10, X10, 0x10
	0x039511EC B.NE 0x39511D8
	0x039511F0 MOV X0, X25
	0x039511F4 MOV W2, W31
	0x039511F8 BL 0x1C5C788
	0x039511FC B 0x395120C
	0x03951200 LDRSW X9, [X10]
	0x03951204 ADD X8, X8, X9, 0x4, LSL
	0x03951208 ADD X0, X8, 0x138
	0x0395120C LDP X8, X1, [X0]
	0x03951210 MOV X0, X25
	0x03951214 BLR X8
	0x03951218 CMP W0, 0x2
	0x0395121C B.LE 0x39512A4
	0x03951220 LDR X8, [X22]
	0x03951224 LDR X1, [X26]
	0x03951228 LDRH W9, [X8 + 0x12E]
	0x0395122C CBZ X9, 0x3951250
	0x03951230 LDR X10, [X8 + 0xB0]
	0x03951234 ADD X10, X10, 0x8
	0x03951238 LDUR X11, [X10 - 0x8]
	0x0395123C CMP X11, X1
	0x03951240 B.EQ 0x3951260
	0x03951244 SUBS X9, X9, 0x1
	0x03951248 ADD X10, X10, 0x10
	0x0395124C B.NE 0x3951238
	0x03951250 MOV X0, X22
	0x03951254 MOV W2, W31
	0x03951258 BL 0x1C5C788
	0x0395125C B 0x395126C
	0x03951260 LDRSW X9, [X10]
	0x03951264 ADD X8, X8, X9, 0x4, LSL
	0x03951268 ADD X0, X8, 0x138
	0x0395126C LDP X8, X2, [X0]
	0x03951270 MOV X0, X22
	0x03951274 MOV W1, W24
	0x03951278 BLR X8
	0x0395127C LDR X1, [X28]
	0x03951280 BL 0x21D599C
	0x03951284 CBZ X23, 0x39517B0
	0x03951288 LDR W8, [X23 + 0x18]
	0x0395128C CMP W24, W8
	0x03951290 B.CS 0x39517B4
	0x03951294 ADD X8, X23, W24, 0x3, SXTW
	0x03951298 ADD W24, W24, 0x1
	0x0395129C STR X0, [X8 + 0x20]
	0x039512A0 B 0x3951098
	0x039512A4 MOV X0, X19
	0x039512A8 BL 0x3950C70
	0x039512AC ADD X0, X31, 0x4
	0x039512B0 MOV X1, X31
	0x039512B4 BL 0x337B6E0
	0x039512B8 ADRP X8, 0x7FE000
	0x039512BC LDR X8, [X8 + 0x2D8]
	0x039512C0 MOV X1, X0
	0x039512C4 MOV X2, X31
	0x039512C8 LDR X8, [X8]
	0x039512CC MOV X0, X8
	0x039512D0 BL 0x321B938
	0x039512D4 ADRP X8, 0x7FC000
	0x039512D8 LDR X8, [X8 + 0x9D8]
	0x039512DC MOV X20, X0
	0x039512E0 LDR X8, [X8]
	0x039512E4 MOV X0, X8
	0x039512E8 BL 0x1C16F10
	0x039512EC MOV X19, X0
	0x039512F0 MOVZ W1, 0x3
	0x039512F4 MOV X2, X20
	0x039512F8 B 0x3951694
	0x039512FC ADRP X24, 0x7FC000
	0x03951300 LDR X24, [X24 + 0x9D8]
	0x03951304 B 0x3950FA4
	0x03951308 MOV X28, X24
	0x0395130C BL 0x1C16DFC
	0x03951310 LDR X0, [X26]
	0x03951314 ADRP X9, 0x7FE000
	0x03951318 LDR X8, [X0 + 0xB8]
	0x0395131C LDR X9, [X9 + 0x2B0]
	0x03951320 LDR X24, [X8]
	0x03951324 LDR X0, [X9]
	0x03951328 BL 0x1C16F10
	0x0395132C ADRP X8, 0x7FE000
	0x03951330 LDR X8, [X8 + 0x2C8]
	0x03951334 MOV X1, X24
	0x03951338 MOV X3, X31
	0x0395133C MOV X22, X0
	0x03951340 LDR X2, [X8]
	0x03951344 BL 0x2D30128
	0x03951348 LDR X8, [X26]
	0x0395134C MOV X24, X28
	0x03951350 LDR X8, [X8 + 0xB8]
	0x03951354 STR X22, [X8 + 0x8]
	0x03951358 ADRP X8, 0x7FE000
	0x0395135C LDR X8, [X8 + 0x2A8]
	0x03951360 MOV X0, X23
	0x03951364 MOV X1, X22
	0x03951368 LDR X2, [X8]
	0x0395136C BL 0x21D49C0
	0x03951370 ADRP X8, 0x7A4000
	0x03951374 LDR X8, [X8 + 0x9B0]
	0x03951378 ADD W1, W0, W27
	0x0395137C LDR X8, [X8]
	0x03951380 MOV X0, X8
	0x03951384 BL 0x1C16D6C
	0x03951388 LDR W2, [X21 + 0x18]
	0x0395138C MOV X22, X0
	0x03951390 MOV X0, X21
	0x03951394 MOV X1, X22
	0x03951398 MOV X3, X31
	0x0395139C BL 0x33A0C7C
	0x039513A0 LDR W8, [X23 + 0x18]
	0x039513A4 CMP W8, 0x1
	0x039513A8 B.LT 0x395140C
	0x039513AC LDR W21, [X21 + 0x18]
	0x039513B0 MOV X28, X24
	0x039513B4 MOV X26, X31
	0x039513B8 ADD X27, X23, 0x20
	0x039513BC CMP W26, W8
	0x039513C0 B.CS 0x39517B4
	0x039513C4 LDR X24, [X27, X26, LSL #3]
	0x039513C8 CBZ X24, 0x39517B0
	0x039513CC LDR W4, [X24 + 0x18]
	0x039513D0 MOV X0, X24
	0x039513D4 MOV W1, W31
	0x039513D8 MOV X2, X22
	0x039513DC MOV W3, W21
	0x039513E0 MOV X5, X31
	0x039513E4 BL 0x33A303C
	0x039513E8 LDR W8, [X23 + 0x18]
	0x039513EC LDR W9, [X24 + 0x18]
	0x039513F0 ADD X26, X26, 0x1
	0x039513F4 CMP W26, W8
	0x039513F8 ADD W21, W21, W9
	0x039513FC B.LT 0x39513BC
	0x03951400 MOV X21, X22
	0x03951404 MOV X24, X28
	0x03951408 B 0x3951410
	0x0395140C MOV X21, X22
	0x03951410 LDR X0, [X31 + 0x8]
	0x03951414 CBZ X0, 0x39517B0
	0x03951418 ADRP X8, 0x7A3000
	0x0395141C LDR X8, [X8 + 0xE18]
	0x03951420 LDR X1, [X8]
	0x03951424 BL 0x2FDE4C8
	0x03951428 MOV X23, X0
	0x0395142C MOV X0, X21
	0x03951430 MOV X1, X23
	0x03951434 MOV X2, X31
	0x03951438 BL 0x3908010
	0x0395143C ADRP X8, 0x7A9000
	0x03951440 LDR X8, [X8 + 0x4B8]
	0x03951444 LDR X8, [X8]
	0x03951448 LDR X8, [X8 + 0xB8]
	0x0395144C LDR V1, [X8]
	0x03951450 FCMP S0, S1
	0x03951454 B.PL 0x395148C
	0x03951458 MOV X0, X19
	0x0395145C BL 0x3950C70
	0x03951460 LDR X0, [X25]
	0x03951464 LDR W8, [X0 + 0xE0]
	0x03951468 CBNZ W8, 0x3951470
	0x0395146C BL 0x1C16DFC
	0x03951470 MOV X0, X31
	0x03951474 BL 0x3906CBC
	0x03951478 LDR X0, [X24]
	0x0395147C BL 0x1C16F10
	0x03951480 ADRP X8, 0x7FE000
	0x03951484 LDR X8, [X8 + 0x2E0]
	0x03951488 B 0x3951688
	0x0395148C CBZ X19, 0x39517B0
	0x03951490 MOV X0, X19
	0x03951494 MOV X1, X31
	0x03951498 BL 0x3916FC0
	0x0395149C STR X21, [X19 + 0x58]
	0x039514A0 ADRP X8, 0x7FD000
	0x039514A4 LDR X8, [X8 + 0x560]
	0x039514A8 LDR X0, [X8]
	0x039514AC BL 0x1C16F10
	0x039514B0 MOV X1, X23
	0x039514B4 MOV X2, X31
	0x039514B8 MOV X22, X0
	0x039514BC BL 0x3900368
	0x039514C0 ADRP X23, 0x7FD000
	0x039514C4 LDR X23, [X23 + 0x3F0]
	0x039514C8 MOVZ W1, 0x1
	0x039514CC LDR X0, [X23]
	0x039514D0 BL 0x1C16D6C
	0x039514D4 CBZ X0, 0x39517B0
	0x039514D8 LDR W8, [X0 + 0x18]
	0x039514DC CBZ W8, 0x39517B4
	0x039514E0 STR X22, [X0 + 0x20]
	0x039514E4 STR X0, [X19 + 0x28]
	0x039514E8 MOV X0, X21
	0x039514EC MOV X1, X31
	0x039514F0 BL 0x3933C34
	0x039514F4 MOV X1, X0
	0x039514F8 MOV X0, X19
	0x039514FC MOV X2, X31
	0x03951500 BL 0x3915EF8
	0x03951504 MOV X0, X19
	0x03951508 MOV X1, X31
	0x0395150C BL 0x3915EC4
	0x03951510 CBZ X22, 0x39517B0
	0x03951514 MOV X0, X22
	0x03951518 MOV X1, X31
	0x0395151C BL 0x38FF530
	0x03951520 CBZ X0, 0x39517B0
	0x03951524 CBZ X21, 0x39517B0
	0x03951528 LDR W8, [X0 + 0x18]
	0x0395152C LDR W9, [X21 + 0x18]
	0x03951530 CMP W8, W9
	0x03951534 B.NE 0x3951658
	0x03951538 LDR X8, [X19 + 0x28]
	0x0395153C CBZ X8, 0x39517B0
	0x03951540 LDR W9, [X8 + 0x18]
	0x03951544 CBZ W9, 0x39517B4
	0x03951548 LDR X1, [X8 + 0x20]
	0x0395154C MOV X0, X19
	0x03951550 MOV X2, X31
	0x03951554 BL 0x390987C
	0x03951558 MOV X0, X19
	0x0395155C MOV X1, X31
	0x03951560 MOV V9.16B, V0.16B
	0x03951564 MOV V10.16B, V1.16B
	0x03951568 MOV V11.16B, V2.16B
	0x0395156C BL 0x3C32ECC
	0x03951570 CBZ X0, 0x39517B0
	0x03951574 MOV X1, X31
	0x03951578 BL 0x3C356F8
	0x0395157C CBZ X0, 0x39517B0
	0x03951580 MOV V0.16B, V9.16B
	0x03951584 MOV V1.16B, V10.16B
	0x03951588 MOV V2.16B, V11.16B
	0x0395158C MOV X1, X31
	0x03951590 BL 0x3C40610
	0x03951594 MOV X0, X19
	0x03951598 MOV X1, X31
	0x0395159C MOV V10.16B, V0.16B
	0x039515A0 MOV V11.16B, V1.16B
	0x039515A4 MOV V9.16B, V2.16B
	0x039515A8 BL 0x3C32ECC
	0x039515AC CBZ X0, 0x39517B0
	0x039515B0 MOV X1, X31
	0x039515B4 BL 0x3C356F8
	0x039515B8 CBZ X0, 0x39517B0
	0x039515BC MOV X1, X31
	0x039515C0 BL 0x3C3F988
	0x039515C4 FMUL S0, S10, S0
	0x039515C8 FMUL S1, S11, S1
	0x039515CC FMUL S2, S9, S2
	0x039515D0 FADD S0, S0, S1
	0x039515D4 FADD S0, S2, S0
	0x039515D8 FCMP S0, 0x0
	0x039515DC CSET W8, GT
	0x039515E0 CSET W9, MI
	0x039515E4 ANDS W31, W20, 0x1
	0x039515E8 CSEL W8, W8, W9, NE
	0x039515EC CMP W8, 0x1
	0x039515F0 B.NE 0x3951614
	0x039515F4 LDR X8, [X19 + 0x28]
	0x039515F8 CBZ X8, 0x39517B0
	0x039515FC LDR W9, [X8 + 0x18]
	0x03951600 CBZ W9, 0x39517B4
	0x03951604 LDR X0, [X8 + 0x20]
	0x03951608 CBZ X0, 0x39517B0
	0x0395160C MOV X1, X31
	0x03951610 BL 0x3900E24
	0x03951614 FCMP S8, 0x0
	0x03951618 B.EQ 0x3951758
	0x0395161C LDR X1, [X19 + 0x28]
	0x03951620 MOV X0, X19
	0x03951624 BL 0x395180C
	0x03951628 LDR X0, [X23]
	0x0395162C MOVZ W1, 0x1
	0x03951630 BL 0x1C16D6C
	0x03951634 LDR X8, [X19 + 0x28]
	0x03951638 CBZ X8, 0x39517B0
	0x0395163C LDR W9, [X8 + 0x18]
	0x03951640 MOV X1, X0
	0x03951644 TBZ X20, 0x0, 0x39516C8
	0x03951648 CMP W9, 0x1
	0x0395164C B.LS 0x39517B4
	0x03951650 ADD X8, X8, 0x28
	0x03951654 B 0x39516D0
	0x03951658 MOV X0, X19
	0x0395165C BL 0x3950C70
	0x03951660 LDR X0, [X25]
	0x03951664 LDR W8, [X0 + 0xE0]
	0x03951668 CBNZ W8, 0x3951670
	0x0395166C BL 0x1C16DFC
	0x03951670 MOV X0, X31
	0x03951674 BL 0x3906CBC
	0x03951678 LDR X0, [X24]
	0x0395167C BL 0x1C16F10
	0x03951680 ADRP X8, 0x7FE000
	0x03951684 LDR X8, [X8 + 0x2D0]
	0x03951688 LDR X2, [X8]
	0x0395168C MOV X19, X0
	0x03951690 MOVZ W1, 0x1
	0x03951694 MOV X3, X31
	0x03951698 BL 0x38F6550
	0x0395169C MOV X0, X19
	0x039516A0 LDP X20, X19, [X31 + 0x80]
	0x039516A4 LDP X22, X21, [X31 + 0x70]
	0x039516A8 LDP X24, X23, [X31 + 0x60]
	0x039516AC LDP X26, X25, [X31 + 0x50]
	0x039516B0 LDP X28, X27, [X31 + 0x40]
	0x039516B4 LDP X29, X30, [X31 + 0x30]
	0x039516B8 LDP D9, D8, [X31 + 0x20]
	0x039516BC LDP D11, D10, [X31 + 0x10]
	0x039516C0 ADD X31, X31, 0x90
	0x039516C4 RET
	0x039516C8 CBZ W9, 0x39517B4
	0x039516CC ADD X8, X8, 0x20
	0x039516D0 CBZ X1, 0x39517B0
	0x039516D4 LDR W9, [X1 + 0x18]
	0x039516D8 CBZ W9, 0x39517B4
	0x039516DC LDR X8, [X8]
	0x039516E0 MOV X0, X19
	0x039516E4 MOV W2, W31
	0x039516E8 MOV V0.16B, V8.16B
	0x039516EC MOV X3, X31
	0x039516F0 STR X8, [X1 + 0x20]
	0x039516F4 BL 0x396B210
	0x039516F8 FCMP S8, 0x0
	0x039516FC CSET W8, GT
	0x03951700 AND W9, W8, W20, 0x0
	0x03951704 CSET W8, PL
	0x03951708 TBNZ X9, 0x0, 0x3951714
	0x0395170C ORR W8, W8, W20, 0x0
	0x03951710 TBNZ X8, 0x0, 0x3951758
	0x03951714 LDR X20, [X19 + 0x28]
	0x03951718 CBZ X20, 0x39517B0
	0x0395171C LDR W8, [X20 + 0x18]
	0x03951720 CMP W8, 0x1
	0x03951724 B.LT 0x3951758
	0x03951728 MOV W21, W31
	0x0395172C CMP W21, W8
	0x03951730 B.CS 0x39517B4
	0x03951734 ADD X8, X20, W21, 0x3, SXTW
	0x03951738 LDR X0, [X8 + 0x20]
	0x0395173C CBZ X0, 0x39517B0
	0x03951740 MOV X1, X31
	0x03951744 BL 0x3900E24
	0x03951748 LDR W8, [X20 + 0x18]
	0x0395174C ADD W21, W21, 0x1
	0x03951750 CMP W21, W8
	0x03951754 B.LT 0x395172C
	0x03951758 MOV X0, X19
	0x0395175C MOV W1, W31
	0x03951760 MOV X2, X31
	0x03951764 BL 0x39197E8
	0x03951768 MOVZ W1, 0x1F
	0x0395176C MOV X0, X19
	0x03951770 MOV X2, X31
	0x03951774 BL 0x3919D94
	0x03951778 LDR X0, [X25]
	0x0395177C LDR W8, [X0 + 0xE0]
	0x03951780 CBNZ W8, 0x3951788
	0x03951784 BL 0x1C16DFC
	0x03951788 MOV X0, X31
	0x0395178C BL 0x3906CBC
	0x03951790 LDR X0, [X24]
	0x03951794 BL 0x1C16F10
	0x03951798 ADRP X8, 0x7FE000
	0x0395179C LDR X8, [X8 + 0x2F8]
	0x039517A0 MOV X19, X0
	0x039517A4 MOV W1, W31
	0x039517A8 LDR X2, [X8]
	0x039517AC B 0x3951694
	0x039517B0 BL 0x1C16F20
	0x039517B4 BL 0x1C16F28
	0x039517B8 ADRP X0, 0x7A7000
	0x039517BC LDR X0, [X0 + 0x528]
	0x039517C0 BL 0x1C16D08
	0x039517C4 BL 0x1C16F10
	0x039517C8 MOV X19, X0
	0x039517CC ADRP X0, 0x7FC000
	0x039517D0 LDR X0, [X0 + 0xE90]
	0x039517D4 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31+24], X2
	015 Move X20, 0xA92000
	016 Move X19, 0x7A4000
	017 Move W8, [X20+2449]
	018 Move X19, [X19+1432]
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {102}
	025 Move X0, 0x7FF000
	026 Move X0, [X0+680]
	027 Call 0x1C17CF4
	028 Move X0, 0x7AB000
	029 Move X0, [X0+2096]
	030 Call 0x1C17CF4
	031 Move X0, 0x7AB000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move X0, 0x7AB000
	035 Move X0, [X0+2112]
	036 Call 0x1C17CF4
	037 Move X0, 0x800000
	038 Move X0, [X0+440]
	039 Call 0x1C17CF4
	040 Move X0, 0x7A6000
	041 Move X0, [X0+2520]
	042 Call 0x1C17CF4
	043 Move X0, 0x7AB000
	044 Move X0, [X0+2120]
	045 Call 0x1C17CF4
	046 Move X0, 0x800000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0x800000
	050 Move X0, [X0+512]
	051 Call 0x1C17CF4
	052 Move X0, 0x800000
	053 Move X0, [X0+520]
	054 Call 0x1C17CF4
	055 Move X0, 0x800000
	056 Move X0, [X0+528]
	057 Call 0x1C17CF4
	058 Move X0, 0x800000
	059 Move X0, [X0+448]
	060 Call 0x1C17CF4
	061 Move X0, 0x800000
	062 Move X0, [X0+536]
	063 Call 0x1C17CF4
	064 Move X0, 0x800000
	065 Move X0, [X0+544]
	066 Call 0x1C17CF4
	067 Move X0, 0x7FE000
	068 Move X0, [X0+3544]
	069 Call 0x1C17CF4
	070 Move X0, 0x7FE000
	071 Move X0, [X0+3552]
	072 Call 0x1C17CF4
	073 Move X0, 0x800000
	074 Move X0, [X0+456]
	075 Call 0x1C17CF4
	076 Move X0, 0x800000
	077 Move X0, [X0+464]
	078 Call 0x1C17CF4
	079 Move X0, 0x800000
	080 Move X0, [X0+552]
	081 Call 0x1C17CF4
	082 Move X0, 0x800000
	083 Move X0, [X0+560]
	084 Call 0x1C17CF4
	085 Move X0, 0x7FE000
	086 Move X0, [X0+3560]
	087 Call 0x1C17CF4
	088 Move X0, 0x800000
	089 Move X0, [X0+568]
	090 Call 0x1C17CF4
	091 Move X0, 0x7FE000
	092 Move X0, [X0+3568]
	093 Call 0x1C17CF4
	094 Move X0, 0x7A4000
	095 Move X0, [X0+1432]
	096 Call 0x1C17CF4
	097 Move X0, 0x7FF000
	098 Move X0, [X0+32]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+2449], W8
	102 Move X0, [X19]
	103 Move [X31+64], X31
	104 Move [X31+72], X31
	105 Move [X31+80], X31
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X24
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {555}
	118 Compare X24, 0
	119 JumpIfEqual {548}
	120 Move X25, 0x7FD000
	121 Move X20, 0x7FD000
	122 Move X26, 0x7FF000
	123 Move X19, [X24+48]
	124 Move X25, [X25+3560]
	125 Move X20, [X20+3552]
	126 Move X26, [X26+456]
	127 Move X0, X24
	128 Move X1, X31
	129 Call ProBuilderMesh.get_sharedVertexLookup, X0
	130 Move [X31], X0
	131 Move X0, X24
	132 Move X1, X31
	133 Move X2, X31
	134 Call ProBuilderMesh.GetVertices, X0, X1
	135 Move X8, [X25]
	136 Move X21, X0
	137 Move X0, X8
	138 Call 0x1C17F10
	139 Move X2, [X20]
	140 Move X1, X21
	141 Move X22, X0
	142 Call List`1<Object>..ctor, X0, X1
	143 Move X0, X24
	144 Move X1, X23
	145 Move X2, X31
	146 Move [X31+8], X24
	147 Call ProBuilderMesh.GetSharedVertexHandles, X0, X1
	148 Move X8, [X25]
	149 Move X23, X0
	150 Move X0, X8
	151 Call 0x1C17F10
	152 Move X1, [X26]
	153 Move [X31+16], X0
	154 Call List`1<Object>..ctor, X0
	155 Compare X23, 0
	156 JumpIfEqual {548}
	157 Move X8, 0x7AA000
	158 Move X8, [X8+2120]
	159 Move X20, 0x7AA000
	160 Move X27, 0x7FE000
	161 Move X24, 0x7FF000
	162 Move X21, 0x7FF000
	163 Move X28, 0x7FF000
	164 Move X29, 0x7FF000
	165 Move X20, [X20+2104]
	166 Move X27, [X27+32]
	167 Move X24, [X24+448]
	168 Move X21, [X21+560]
	169 Move X28, [X28+544]
	170 Move X29, [X29+568]
	171 Move X1, [X8]
	172 Add X8, X31, 40
	173 Move X0, X23
	174 Call HashSet`1<Int32>.GetEnumerator, X0
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 Move X8, [X31+56]
	177 Move [X31+4], V0
	178 Move [X31+80], X8
	179 Move X1, [X20]
	180 Add X0, X31, 64
	181 Call Enumerator<Int32>.MoveNext, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {235}
	186 Compare X19, 0
	187 JumpIfEqual {553}
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W9, [X19+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X8, X19, X8
	192 Move X0, [X8+32]
	193 Compare X0, 0
	194 JumpIfEqual {554}
	195 Move W1, W31
	196 Move X2, X31
	197 Call SharedVertex.get_Item, X0, X1
	198 Move W1, W0
	199 Compare X22, 0
	200 JumpIfEqual {551}
	201 Move X8, 0x7FF000
	202 Move X8, [X8+464]
	203 Move X2, [X8]
	204 Move X0, X22
	205 Call List`1<Object>.get_Item, X0, X1
	206 Move X26, X0
	207 Move X0, [X27]
	208 Call 0x1C17F10
	209 Move X25, X0
	210 Move X1, X26
	211 Move X2, X31
	212 Call Vertex..ctor, X0, X1
	213 Move X0, [X31+16]
	214 Compare X0, 0
	215 JumpIfEqual {552}
	216 Move W10, [X0+28]
	217 Move X8, [X0+16]
	218 Move X9, [X24]
	219 Add W10, W10, 1
	220 Move [X0+28], W10
	221 Compare X8, 0
	222 JumpIfEqual {549}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Move W11, [X8+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add W9, W10, 1
	227 Add X8, X8, X10
	228 Move [X0+24], W9
	229 Move [X8+32], X25
	230 Move X8, [X9+32]
	231 Move X8, [X8+192]
	232 Move X2, [X8+112]
	233 Move X1, X25
	234 Call List`1<Object>.AddWithResize, X0, X1
	235 Move X8, 0x7AA000
	236 Move X8, [X8+2096]
	237 Add X0, X31, 64
	238 Move X1, [X8]
	239 Call Enumerator<Int32>.Dispose, X0
	240 Move X0, [X21]
	241 Call 0x1C17F10
	242 Move X1, [X28]
	243 Move X25, X0
	244 Call List`1<Object>..ctor, X0
	245 Move X0, [X29]
	246 Call 0x1C17F10
	247 Move X8, 0x7FF000
	248 Move X8, [X8+536]
	249 Move X26, X0
	250 Move X1, [X8]
	251 Call List`1<Object>..ctor, X0
	252 Move X12, [X31+24]
	253 Compare X12, 0
	254 JumpIfEqual {548}
	255 Move [X31+36], W31
	256 Move X8, [X12]
	257 Move X10, 0x7FF000
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Move X10, [X10+504]
	260 Move X1, [X10]
	261 Compare X9, 0
	262 JumpIfEqual {269}
	263 Move X10, [X8+176]
	264 Add X10, X10, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X9, X9, 1
	268 Add X10, X10, 16
	269 Move X0, X12
	270 Move W2, W31
	271 Call 0x1C5D788
	272 Move X12, [X31+24]
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Add X8, X8, X9
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X1, [X0+8]
	278 Move X0, X12
	279 Move X21, X12
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move W8, [X31+36]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, [X21]
	284 Move X10, 0x7FF000
	285 Move X12, X21
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move X10, [X10+512]
	288 Move X1, [X10]
	289 Compare X9, 0
	290 JumpIfEqual {297}
	291 Move X10, [X8+176]
	292 Add X10, X10, 8
	293 NotImplemented "Instruction LDUR not yet implemented."
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Subtract X9, X9, 1
	296 Add X10, X10, 16
	297 Move X0, X12
	298 Move W2, W31
	299 Call 0x1C5D788
	300 Move X12, [X31+24]
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X2, [X0+8]
	306 Move W1, [X31+36]
	307 Move X0, X12
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move X1, X0
	310 Move X0, [X31+8]
	311 Move X2, X31
	312 Call ProBuilderMesh.GetSharedVertexHandles, X0, X1
	313 Compare X25, 0
	314 JumpIfEqual {548}
	315 Move X9, 0x7FF000
	316 Move W10, [X25+28]
	317 Move X8, [X25+16]
	318 Move X9, [X9+520]
	319 Add W10, W10, 1
	320 Move X9, [X9]
	321 Move [X25+28], W10
	322 Compare X8, 0
	323 JumpIfEqual {548}
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Move W11, [X8+24]
	326 Move X1, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Add W9, W10, 1
	329 Add X8, X8, X10
	330 Move [X25+24], W9
	331 Move [X8+32], X1
	332 Move X8, [X9+32]
	333 Move X0, X25
	334 Move X8, [X8+192]
	335 Move X2, [X8+112]
	336 Call List`1<Object>.AddWithResize, X0, X1
	337 Move X8, 0x7FD000
	338 Move X8, [X8+3560]
	339 Move X0, [X8]
	340 Call 0x1C17F10
	341 Move X8, 0x7FF000
	342 Move X8, [X8+456]
	343 Move X28, X0
	344 Move X1, [X8]
	345 Call List`1<Object>..ctor, X0
	346 Compare X26, 0
	347 JumpIfEqual {548}
	348 Move X9, 0x7FF000
	349 Move W10, [X26+28]
	350 Move X8, [X26+16]
	351 Move X9, [X9+528]
	352 Add W10, W10, 1
	353 Move X9, [X9]
	354 Move [X26+28], W10
	355 Compare X8, 0
	356 JumpIfEqual {548}
	357 NotImplemented "Instruction LDRSW not yet implemented."
	358 Move W11, [X8+24]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Add W9, W10, 1
	361 Add X8, X8, X10
	362 Move [X26+24], W9
	363 Move [X8+32], X28
	364 Move X8, [X9+32]
	365 Move X0, X26
	366 Move X1, X28
	367 Move X8, [X8+192]
	368 Move X2, [X8+112]
	369 Call List`1<Object>.AddWithResize, X0, X1
	370 Move X8, 0x7FF000
	371 Move X8, [X8+552]
	372 Move W1, [X31+36]
	373 Move X0, X25
	374 Move X2, [X8]
	375 Call List`1<Object>.get_Item, X0, X1
	376 Compare X0, 0
	377 JumpIfEqual {548}
	378 Move X8, 0x7AA000
	379 Move X8, [X8+2120]
	380 Move X1, [X8]
	381 Add X8, X31, 40
	382 Call HashSet`1<Int32>.GetEnumerator, X0
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move X8, [X31+56]
	385 Move [X31+4], V0
	386 Move [X31+80], X8
	387 Move X1, [X20]
	388 Add X0, X31, 64
	389 Call Enumerator<Int32>.MoveNext, X0
	390 Move TEMP, X0
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfNotEqual {450}
	394 Move X8, 0x7A5000
	395 Move W21, [X31+80]
	396 Move X8, [X8+2520]
	397 Move X2, [X8]
	398 Move X0, X23
	399 Move W1, W21
	400 Call HashSet`1<Int32>.Add, X0, X1
	401 Compare X19, 0
	402 JumpIfEqual {463}
	403 Move W9, [X19+24]
	404 Move X8, W21
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Add X8, X19, X8
	407 Move X0, [X8+32]
	408 Compare X0, 0
	409 JumpIfEqual {464}
	410 Move W1, W31
	411 Move X2, X31
	412 Call SharedVertex.get_Item, X0, X1
	413 Move W1, W0
	414 Compare X22, 0
	415 JumpIfEqual {461}
	416 Move X8, 0x7FF000
	417 Move X8, [X8+464]
	418 Move X2, [X8]
	419 Move X0, X22
	420 Call List`1<Object>.get_Item, X0, X1
	421 Move X21, X0
	422 Move X0, [X27]
	423 Call 0x1C17F10
	424 Move X29, X0
	425 Move X1, X21
	426 Move X2, X31
	427 Call Vertex..ctor, X0, X1
	428 Compare X28, 0
	429 JumpIfEqual {462}
	430 Move W10, [X28+28]
	431 Move X8, [X28+16]
	432 Move X9, [X24]
	433 Add W10, W10, 1
	434 Move [X28+28], W10
	435 Compare X8, 0
	436 JumpIfEqual {459}
	437 NotImplemented "Instruction LDRSW not yet implemented."
	438 Move W11, [X8+24]
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Add W9, W10, 1
	441 Add X8, X8, X10
	442 Move [X28+24], W9
	443 Move [X8+32], X29
	444 Move X8, [X9+32]
	445 Move X8, [X8+192]
	446 Move X2, [X8+112]
	447 Move X0, X28
	448 Move X1, X29
	449 Call List`1<Object>.AddWithResize, X0, X1
	450 Move X8, 0x7AA000
	451 Move X8, [X8+2096]
	452 Add X0, X31, 64
	453 Move X1, [X8]
	454 Call Enumerator<Int32>.Dispose, X0
	455 Move W8, [X31+36]
	456 Move X12, [X31+24]
	457 Add W8, W8, 1
	458 Move [X31+36], W8
	459 Call 0x1C17F20
	460 Call 0x1C17F28
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Call 0x3EB2AD0
	467 Move X29, [X0]
	468 Call 0x3EB2AE0
	469 Move X8, 0x7AA000
	470 Move X8, [X8+2096]
	471 Add X0, X31, 64
	472 Move X1, [X8]
	473 Call Enumerator<Int32>.Dispose, X0
	474 Compare X29, 0
	475 JumpIfEqual {455}
	476 Move X0, X29
	477 Call 0x1C17F18
	478 Move X0, [X31+16]
	479 Move X1, X26
	480 Call AppendElements.FaceWithVerticesAndHole, X0, X1
	481 Compare X0, 0
	482 JumpIfEqual {534}
	483 Move X8, 0x7FE000
	484 Move X8, [X8+680]
	485 Move X20, X0
	486 Move X0, X23
	487 Move X1, [X8]
	488 Call Enumerable.ToList, X0
	489 Move X19, [X31+8]
	490 Move [X20+32], X0
	491 Move X8, 0x7FD000
	492 Move X21, [X19+40]
	493 Move X8, [X8+3568]
	494 Move X0, [X8]
	495 Call 0x1C17F10
	496 Move X8, 0x7FD000
	497 Move X8, [X8+3544]
	498 Move X1, X21
	499 Move X23, X0
	500 Move X2, [X8]
	501 Call List`1<Object>..ctor, X0, X1
	502 Move X8, 0x7FF000
	503 Move X8, [X8+440]
	504 Move W1, 1
	505 Move X0, [X8]
	506 Call 0x1C17D6C
	507 Compare X0, 0
	508 JumpIfEqual {548}
	509 Move W8, [X0+24]
	510 Compare W8, 0
	511 JumpIfEqual {573}
	512 Move X21, [X31]
	513 Move X1, X22
	514 Move X2, X23
	515 Move X4, X31
	516 Move X3, X21
	517 Move X5, X31
	518 Move [X0+32], X20
	519 Call FaceRebuildData.Apply, X0, X1, X2, X3, X4
	520 Move X0, X19
	521 Move X1, X22
	522 Move W2, W31
	523 Move X3, X31
	524 Call ProBuilderMesh.SetVertices, X0, X1, X2
	525 Move X0, X19
	526 Move X1, X23
	527 Move X2, X31
	528 Call ProBuilderMesh.set_faces, X0, X1
	529 Move X0, X19
	530 Move X1, X21
	531 Move X2, X31
	532 Call ProBuilderMesh.SetSharedVertices, X0, X1
	533 Move X0, [X20+16]
	534 Move X20, [X31+176]
	535 Move X19, [X31+184]
	536 Move X22, [X31+160]
	537 Move X21, [X31+168]
	538 Move X24, [X31+144]
	539 Move X23, [X31+152]
	540 Move X26, [X31+128]
	541 Move X25, [X31+136]
	542 Move X28, [X31+112]
	543 Move X27, [X31+120]
	544 Move X29, [X31+96]
	545 Move X30, [X31+104]
	546 Add X31, X31, 192
	547 Return X0
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F28
	551 Call 0x1C17F20
	552 Call 0x1C17F20
	553 Call 0x1C17F20
	554 Call 0x1C17F20
	555 Move X0, 0x7A8000
	556 Move X0, [X0+1320]
	557 Call 0x1C17D08
	558 Call 0x1C17F10
	559 Move X19, X0
	560 Move X0, 0x7FD000
	561 Move X0, [X0+3728]
	562 Call 0x1C17D08
	563 Move X1, X0
	564 Move X0, X19
	565 Move X2, X31
	566 Call ArgumentNullException..ctor, X0, X1
	567 Move X0, 0x7FF000
	568 Move X0, [X0+576]
	569 Call 0x1C17D08
	570 Move X1, X0
	571 Move X0, X19
	572 Call 0x1C17DEC
	573 Call 0x1C17F28
	574 Move X19, X0
	575 Move X29, X31
	576 Move X19, X0
	577 Move X8, 0x7AA000
	578 Move X8, [X8+2096]
	579 Move X1, [X8]
	580 Add X0, X31, 64
	581 Call Enumerator<Int32>.Dispose, X0
	582 Compare X29, 0
	583 JumpIfNotEqual {586}
	584 Move X0, X19
	585 Call 0x1D2D690
	586 Move X0, X29
	587 Call 0x1C17F18
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Call 0x3EB2AD0
	590 Move X25, [X0]
	591 Call 0x3EB2AE0
	592 Move X8, 0x7AA000
	593 Move X8, [X8+2096]
	594 Add X0, X31, 64
	595 Move X1, [X8]
	596 Call Enumerator<Int32>.Dispose, X0
	597 Compare X25, 0
	598 JumpIfEqual {240}
	599 Move X0, X25
	600 Call 0x1C17F18
	601 Move X19, X0
	602 Move X25, X31
	603 Move X19, X0
	604 Move X8, 0x7AA000
	605 Move X8, [X8+2096]
	606 Move X1, [X8]
	607 Add X0, X31, 64
	608 Call Enumerator<Int32>.Dispose, X0
	609 Compare X25, 0
	610 JumpIfEqual {584}
	611 Move X0, X25
	612 Call 0x1C17F18
	613 Call 0x1991590

Method: UnityEngine.ProBuilder.ActionResult CreateShapeFromPolygon(UnityEngine.ProBuilder.PolyShape poly)

Disassembly:
	0x03951C34 B.CS 0x3951E0C
	0x03951C38 CBZ X23, 0x3951E08
	0x03951C3C LDR W1, [X8, X27, LSL #2]
	0x03951C40 LDR X2, [X20]
	0x03951C44 LDR X28, [X24 + 0x20]
	0x03951C48 MOV X0, X23
	0x03951C4C BL 0x2A0A2A8
	0x03951C50 CBZ X28, 0x3951E08
	0x03951C54 ADRP X9, 0x7A3000
	0x03951C58 LDR W10, [X28 + 0x1C]
	0x03951C5C LDR X8, [X28 + 0x10]
	0x03951C60 LDR X9, [X9 + 0xE10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {16}
	005 Move X1, X31
	006 Move X19, X0
	007 Call PolyShape.get_mesh, X0
	008 Move X1, [X19+40]
	009 Move V0, [X19+48]
	010 Move W2, [X19+56]
	011 Move X3, X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call AppendElements.CreateShapeFromPolygon, X0, X1, V0, X2, X3
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void ClearAndRefreshMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03951C70 CBZ X8, 0x3951E08
	0x03951C74 LDRSW X10, [X28 + 0x18]
	0x03951C78 LDR W11, [X8 + 0x18]
	0x03951C7C MOV W1, W0
	0x03951C80 CMP W10, W11
	0x03951C84 B.CS 0x3951C9C
	0x03951C88 ADD W9, W10, 0x1
	0x03951C8C ADD X8, X8, X10, 0x2, LSL
	0x03951C90 STR W9, [X28 + 0x18]
	0x03951C94 STR W1, [X8 + 0x20]
	0x03951C98 B 0x3951CB0
	0x03951C9C LDR X8, [X9 + 0x20]
	0x03951CA0 MOV X0, X28
	0x03951CA4 LDR X8, [X8 + 0xC0]
	0x03951CA8 LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {19}
	005 Move X1, X31
	006 Move X19, X0
	007 Call ProBuilderMesh.Clear, X0
	008 Move X0, X19
	009 Move W1, W31
	010 Move X2, X31
	011 Call ProBuilderMesh.ToMesh, X0, X1
	012 Move W1, 31
	013 Move X0, X19
	014 Move X2, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call ProBuilderMesh.Refresh, X0, X1
	018 Return 
	019 Call 0x1C17F20

Method: UnityEngine.ProBuilder.ActionResult CreateShapeFromPolygon(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Single extrude, System.Boolean flipNormals)

Disassembly:
	0x03951C64 ADD W10, W10, 0x1
	0x03951C68 LDR X9, [X9]
	0x03951C6C STR W10, [X28 + 0x1C]

ISIL:
	001 And W2, W2, 1
	002 Move X3, X31
	003 Call AppendElements.CreateShapeFromPolygon, X0, X1, V0, X2, X3
	004 Return X0

Method: UnityEngine.ProBuilder.ActionResult CreateShapeFromPolygon(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Single extrude, System.Boolean flipNormals, UnityEngine.Vector3 cameraLookAt, System.Collections.Generic.IList`1<System.Collections.Generic.IList`1<UnityEngine.Vector3>> holePoints = null)

Disassembly:
	0x03952800 B.LS 0x395349C
	0x03952804 MOVZ W9, 0xC
	0x03952808 MADD X9, X8, X9, X20

ISIL:
	001 And W2, W2, 1
	002 Move X3, X31
	003 Call AppendElements.CreateShapeFromPolygon, X0, X1, V0, X2, X3
	004 Return X0

Method: UnityEngine.ProBuilder.ActionResult CreateShapeFromPolygon(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.Vector3> points, System.Single extrude, System.Boolean flipNormals, System.Collections.Generic.IList`1<System.Collections.Generic.IList`1<UnityEngine.Vector3>> holePoints)

Disassembly:
	0x03951CAC BL 0x2FDC70C
	0x03951CB0 ADD X27, X27, 0x1
	0x03951CB4 ADD X8, X19, X27
	0x03951CB8 CMP X8, 0x8
	0x03951CBC B.NE 0x3951B10
	0x03951CC0 ADRP X8, 0x7A3000
	0x03951CC4 LDR X8, [X8 + 0xE58]
	0x03951CC8 LDR X19, [X31 + 0x20]
	0x03951CCC LDR X0, [X8]
	0x03951CD0 MOV W1, W19
	0x03951CD4 BL 0x1C16D6C
	0x03951CD8 LDR X8, [X24 + 0x10]
	0x03951CDC CBZ X8, 0x3951E08
	0x03951CE0 LDR X9, [X31 + 0x28]
	0x03951CE4 CMP W19, 0x0
	0x03951CE8 MOV X26, X0
	0x03951CEC MOV X28, X31
	0x03951CF0 CSEL X19, X9, X31, GT
	0x03951CF4 MOV X0, X8
	0x03951CF8 CMP X19, X28
	0x03951CFC B.EQ 0x3951D4C
	0x03951D00 MOV W1, W28
	0x03951D04 MOV X2, X31
	0x03951D08 BL 0x390031C
	0x03951D0C CBZ X25, 0x3951E08
	0x03951D10 LDR X2, [X20]
	0x03951D14 MOV W1, W0
	0x03951D18 MOV X0, X25
	0x03951D1C BL 0x2A0A2A8
	0x03951D20 CBZ X26, 0x3951E08
	0x03951D24 LDR W8, [X26 + 0x18]
	0x03951D28 CMP W21, W8
	0x03951D2C B.CS 0x3951E0C
	0x03951D30 ADD X8, X26, W21, 0x2, SXTW
	0x03951D34 STR W0, [X8 + 0x20]
	0x03951D38 LDR X8, [X24 + 0x10]
	0x03951D3C ADD X28, X28, 0x1
	0x03951D40 SUB W21, W21, 0x1
	0x03951D44 CBNZ X8, 0x3951CF4
	0x03951D48 B 0x3951E08
	0x03951D4C MOV X1, X26
	0x03951D50 MOV X2, X31
	0x03951D54 BL 0x38FFCE8
	0x03951D58 LDR X25, [X31 + 0x10]
	0x03951D5C CBZ X25, 0x3951E08
	0x03951D60 ADRP X9, 0x7FE000
	0x03951D64 LDR W10, [X25 + 0x1C]
	0x03951D68 LDR X8, [X25 + 0x10]
	0x03951D6C LDR X9, [X9 + 0x308]
	0x03951D70 LDR X19, [X31 + 0x18]
	0x03951D74 ADD W10, W10, 0x1
	0x03951D78 LDR X9, [X9]
	0x03951D7C STR W10, [X25 + 0x1C]
	0x03951D80 CBZ X8, 0x3951E08
	0x03951D84 LDRSW X10, [X25 + 0x18]
	0x03951D88 LDR W11, [X8 + 0x18]
	0x03951D8C CMP W10, W11
	0x03951D90 B.CS 0x3951DA8
	0x03951D94 ADD W9, W10, 0x1
	0x03951D98 ADD X8, X8, X10, 0x3, LSL
	0x03951D9C STR W9, [X25 + 0x18]
	0x03951DA0 STR X24, [X8 + 0x20]
	0x03951DA4 B 0x3951DC0
	0x03951DA8 LDR X8, [X9 + 0x20]
	0x03951DAC MOV X0, X25
	0x03951DB0 MOV X1, X24
	0x03951DB4 LDR X8, [X8 + 0xC0]
	0x03951DB8 LDR X2, [X8 + 0x70]
	0x03951DBC BL 0x301BF90
	0x03951DC0 LDR X24, [X31 + 0x8]
	0x03951DC4 ADD X19, X19, 0x1
	0x03951DC8 LDR W8, [X24 + 0x18]
	0x03951DCC CMP X19, W8, SXTW
	0x03951DD0 B.LT 0x3951A0C
	0x03951DD4 MOV X0, X25
	0x03951DD8 LDR X1, [X31]
	0x03951DDC MOV X2, X22
	0x03951DE0 LDP X20, X19, [X31 + 0x80]
	0x03951DE4 LDP X22, X21, [X31 + 0x70]
	0x03951DE8 LDP X24, X23, [X31 + 0x60]
	0x03951DEC LDP X26, X25, [X31 + 0x50]
	0x03951DF0 LDP X28, X27, [X31 + 0x40]
	0x03951DF4 LDP X29, X30, [X31 + 0x30]
	0x03951DF8 MOV X3, X31
	0x03951DFC MOV X4, X31
	0x03951E00 ADD X31, X31, 0x90
	0x03951E04 B 0x390186C
	0x03951E08 BL 0x1C16F20
	0x03951E0C BL 0x1C16F28
	0x03951E10 ADRP X0, 0x7A7000
	0x03951E14 LDR X0, [X0 + 0x528]
	0x03951E18 BL 0x1C16D08
	0x03951E1C BL 0x1C16F10
	0x03951E20 MOV X19, X0
	0x03951E24 ADRP X0, 0x7FC000
	0x03951E28 LDR X0, [X0 + 0xE90]
	0x03951E2C B 0x3951E4C
	0x03951E30 ADRP X0, 0x7A7000
	0x03951E34 LDR X0, [X0 + 0x528]
	0x03951E38 BL 0x1C16D08
	0x03951E3C BL 0x1C16F10
	0x03951E40 MOV X19, X0
	0x03951E44 ADRP X0, 0x7FD000
	0x03951E48 LDR X0, [X0 + 0x640]
	0x03951E4C BL 0x1C16D08
	0x03951E50 MOV X1, X0
	0x03951E54 MOV X0, X19
	0x03951E58 MOV X2, X31
	0x03951E5C BL 0x330E100
	0x03951E60 ADRP X0, 0x7FE000
	0x03951E64 LDR X0, [X0 + 0x320]
	0x03951E68 BL 0x1C16D08
	0x03951E6C MOV X1, X0
	0x03951E70 MOV X0, X19
	0x03951E74 BL 0x1C16DEC
	0x03951E78 STP X29, X30, [X31 - 0x60]!
	0x03951E7C STP X28, X27, [X31 + 0x10]
	0x03951E80 STP X26, X25, [X31 + 0x20]
	0x03951E84 STP X24, X23, [X31 + 0x30]
	0x03951E88 STP X22, X21, [X31 + 0x40]
	0x03951E8C STP X20, X19, [X31 + 0x50]
	0x03951E90 ADRP X20, 0xA90000
	0x03951E94 LDRB W8, [X20 + 0x995]
	0x03951E98 MOV X19, X0
	0x03951E9C TBNZ X8, 0x0, 0x3951F2C
	0x03951EA0 ADRP X0, 0x7FE000
	0x03951EA4 LDR X0, [X0 + 0x1F0]
	0x03951EA8 BL 0x1C16CF4
	0x03951EAC ADRP X0, 0x7FD000
	0x03951EB0 LDR X0, [X0 + 0x560]
	0x03951EB4 BL 0x1C16CF4
	0x03951EB8 ADRP X0, 0x7A3000
	0x03951EBC LDR X0, [X0 + 0xE58]
	0x03951EC0 BL 0x1C16CF4
	0x03951EC4 ADRP X0, 0x7FE000
	0x03951EC8 LDR X0, [X0 + 0x308]
	0x03951ECC BL 0x1C16CF4
	0x03951ED0 ADRP X0, 0x7FE000
	0x03951ED4 LDR X0, [X0 + 0x1C0]
	0x03951ED8 BL 0x1C16CF4
	0x03951EDC ADRP X0, 0x7FE000
	0x03951EE0 LDR X0, [X0 + 0x1C8]
	0x03951EE4 BL 0x1C16CF4
	0x03951EE8 ADRP X0, 0x7FE000
	0x03951EEC LDR X0, [X0 + 0x310]
	0x03951EF0 BL 0x1C16CF4
	0x03951EF4 ADRP X0, 0x7FC000
	0x03951EF8 LDR X0, [X0 + 0xE18]
	0x03951EFC BL 0x1C16CF4
	0x03951F00 ADRP X0, 0x7FE000
	0x03951F04 LDR X0, [X0 + 0x1D0]
	0x03951F08 BL 0x1C16CF4
	0x03951F0C ADRP X0, 0x7FC000
	0x03951F10 LDR X0, [X0 + 0xDE8]
	0x03951F14 BL 0x1C16CF4
	0x03951F18 ADRP X0, 0x7FE000
	0x03951F1C LDR X0, [X0 + 0x318]
	0x03951F20 BL 0x1C16CF4
	0x03951F24 MOVZ W8, 0x1
	0x03951F28 STRB W8, [X20 + 0x995]
	0x03951F2C CBZ X19, 0x39521F0
	0x03951F30 ADRP X20, 0x7FE000
	0x03951F34 ADRP X21, 0x7FE000
	0x03951F38 LDR W22, [X19 + 0x18]
	0x03951F3C LDR X20, [X20 + 0x318]
	0x03951F40 LDR X21, [X21 + 0x310]
	0x03951F44 MOV X0, X19
	0x03951F48 MOV X1, X31
	0x03951F4C MOV X2, X31
	0x03951F50 BL 0x393FA98
	0x03951F54 LDR X8, [X20]
	0x03951F58 MOV X20, X0
	0x03951F5C MOV X0, X8
	0x03951F60 BL 0x1C16F10
	0x03951F64 LDR X1, [X21]
	0x03951F68 MOV X21, X0
	0x03951F6C BL 0x301B7C4
	0x03951F70 CMP W22, 0x1
	0x03951F74 B.LT 0x39521D0
	0x03951F78 ADRP X27, 0x7FE000
	0x03951F7C ADRP X28, 0x7FE000
	0x03951F80 LDR X27, [X27 + 0x1D0]
	0x03951F84 LDR X28, [X28 + 0x1C0]
	0x03951F88 SUB W25, W31, W22
	0x03951F8C MOVZ W29, 0x2
	0x03951F90 MOVZ W26, 0x1
	0x03951F94 ADRP X8, 0x7FC000
	0x03951F98 LDR X8, [X8 + 0xDE8]
	0x03951F9C SUB W23, W26, 0x1
	0x03951FA0 LDR X0, [X8]
	0x03951FA4 BL 0x1C16F10
	0x03951FA8 ADRP X8, 0x7FE000
	0x03951FAC LDR X8, [X8 + 0x1C8]
	0x03951FB0 MOV X22, X0
	0x03951FB4 LDR X1, [X8]
	0x03951FB8 BL 0x301B7C4
	0x03951FBC LDR X2, [X27]
	0x03951FC0 MOV X0, X19
	0x03951FC4 MOV W1, W23
	0x03951FC8 BL 0x301BCCC
	0x03951FCC CBZ X22, 0x39521F0
	0x03951FD0 LDR W8, [X22 + 0x1C]
	0x03951FD4 LDR X10, [X22 + 0x10]
	0x03951FD8 LDR X9, [X28]
	0x03951FDC ADD W8, W8, 0x1
	0x03951FE0 STR W8, [X22 + 0x1C]
	0x03951FE4 CBZ X10, 0x39521F0
	0x03951FE8 LDRSW X11, [X22 + 0x18]
	0x03951FEC LDR W12, [X10 + 0x18]
	0x03951FF0 MOV X1, X0
	0x03951FF4 CMP W11, W12
	0x03951FF8 B.CS 0x3952010
	0x03951FFC ADD W9, W11, 0x1
	0x03952000 ADD X10, X10, X11, 0x3, LSL
	0x03952004 STR W9, [X22 + 0x18]
	0x03952008 STR X1, [X10 + 0x20]
	0x0395200C B 0x3952028
	0x03952010 LDR X8, [X9 + 0x20]
	0x03952014 MOV X0, X22
	0x03952018 LDR X8, [X8 + 0xC0]
	0x0395201C LDR X2, [X8 + 0x70]
	0x03952020 BL 0x301BF90
	0x03952024 LDP W9, W8, [X22 + 0x18]
	0x03952028 LDR X10, [X22 + 0x10]
	0x0395202C LDR X11, [X28]
	0x03952030 ADD W8, W8, 0x1
	0x03952034 STR W8, [X22 + 0x1C]
	0x03952038 CBZ X10, 0x39521F0
	0x0395203C LDR W8, [X10 + 0x18]
	0x03952040 CMP W9, W8
	0x03952044 B.CS 0x395205C
	0x03952048 ADD W8, W9, 0x1
	0x0395204C ADD X9, X10, W9, 0x3, SXTW
	0x03952050 STR W8, [X22 + 0x18]
	0x03952054 STR X20, [X9 + 0x20]
	0x03952058 B 0x3952074
	0x0395205C LDR X8, [X11 + 0x20]
	0x03952060 MOV X0, X22
	0x03952064 MOV X1, X20
	0x03952068 LDR X8, [X8 + 0xC0]
	0x0395206C LDR X2, [X8 + 0x70]
	0x03952070 BL 0x301BF90
	0x03952074 LDR X2, [X27]
	0x03952078 ADDS W31, W25, W26
	0x0395207C CSEL W1, W31, W26, EQ
	0x03952080 MOV X0, X19
	0x03952084 BL 0x301BCCC
	0x03952088 LDR W10, [X22 + 0x1C]
	0x0395208C LDR X8, [X22 + 0x10]
	0x03952090 LDR X9, [X28]
	0x03952094 ADD W10, W10, 0x1
	0x03952098 STR W10, [X22 + 0x1C]
	0x0395209C CBZ X8, 0x39521F0
	0x039520A0 LDRSW X10, [X22 + 0x18]
	0x039520A4 LDR W11, [X8 + 0x18]
	0x039520A8 MOV X1, X0
	0x039520AC CMP W10, W11
	0x039520B0 B.CS 0x39520C8
	0x039520B4 ADD W9, W10, 0x1
	0x039520B8 ADD X8, X8, X10, 0x3, LSL
	0x039520BC STR W9, [X22 + 0x18]
	0x039520C0 STR X1, [X8 + 0x20]
	0x039520C4 B 0x39520DC
	0x039520C8 LDR X8, [X9 + 0x20]
	0x039520CC MOV X0, X22
	0x039520D0 LDR X8, [X8 + 0xC0]
	0x039520D4 LDR X2, [X8 + 0x70]
	0x039520D8 BL 0x301BF90
	0x039520DC ADRP X8, 0x7FD000
	0x039520E0 LDR X8, [X8 + 0x1F0]
	0x039520E4 LDR X0, [X8]
	0x039520E8 BL 0x1C16F10
	0x039520EC MOV X1, X31
	0x039520F0 MOV X23, X0
	0x039520F4 BL 0x3901F84
	0x039520F8 CBZ X23, 0x39521F0
	0x039520FC STR X22, [X23 + 0x18]
	0x03952100 ADRP X8, 0x7A2000
	0x03952104 LDR X8, [X8 + 0xE58]
	0x03952108 MOVZ W1, 0x3
	0x0395210C LDR X0, [X8]
	0x03952110 BL 0x1C16D6C
	0x03952114 CBZ X0, 0x39521F0
	0x03952118 LDR W8, [X0 + 0x18]
	0x0395211C MOV X22, X0
	0x03952120 CMP W8, 0x1
	0x03952124 B.LS 0x39521F4
	0x03952128 CMP W8, 0x2
	0x0395212C MOVZ W8, 0x1
	0x03952130 STR W8, [X22 + 0x24]
	0x03952134 B.EQ 0x39521F4
	0x03952138 STR W29, [X22 + 0x28]
	0x0395213C ADRP X8, 0x7FC000
	0x03952140 LDR X8, [X8 + 0x560]
	0x03952144 LDR X0, [X8]
	0x03952148 BL 0x1C16F10
	0x0395214C MOV X1, X22
	0x03952150 MOV X2, X31
	0x03952154 MOV X24, X0
	0x03952158 BL 0x3900368
	0x0395215C STR X24, [X23 + 0x10]
	0x03952160 CBZ X21, 0x39521F0
	0x03952164 ADRP X9, 0x7FD000
	0x03952168 LDR W10, [X21 + 0x1C]
	0x0395216C LDR X8, [X21 + 0x10]
	0x03952170 LDR X9, [X9 + 0x308]
	0x03952174 ADD W10, W10, 0x1
	0x03952178 LDR X9, [X9]
	0x0395217C STR W10, [X21 + 0x1C]
	0x03952180 CBZ X8, 0x39521F0
	0x03952184 LDRSW X10, [X21 + 0x18]
	0x03952188 LDR W11, [X8 + 0x18]
	0x0395218C CMP W10, W11
	0x03952190 B.CS 0x39521A8
	0x03952194 ADD W9, W10, 0x1
	0x03952198 ADD X8, X8, X10, 0x3, LSL
	0x0395219C STR W9, [X21 + 0x18]
	0x039521A0 STR X23, [X8 + 0x20]
	0x039521A4 B 0x39521C0
	0x039521A8 LDR X8, [X9 + 0x20]
	0x039521AC MOV X0, X21
	0x039521B0 MOV X1, X23
	0x039521B4 LDR X8, [X8 + 0xC0]
	0x039521B8 LDR X2, [X8 + 0x70]
	0x039521BC BL 0x301BF90
	0x039521C0 ADD W26, W26, 0x1
	0x039521C4 ADD W8, W25, W26
	0x039521C8 CMP W8, 0x1
	0x039521CC B.NE 0x3951F94
	0x039521D0 MOV X0, X21
	0x039521D4 LDP X20, X19, [X31 + 0x50]
	0x039521D8 LDP X22, X21, [X31 + 0x40]
	0x039521DC LDP X24, X23, [X31 + 0x30]
	0x039521E0 LDP X26, X25, [X31 + 0x20]
	0x039521E4 LDP X28, X27, [X31 + 0x10]
	0x039521E8 LDP X29, X30, [X31], #0x60
	0x039521EC RET
	0x039521F0 BL 0x1C16F20
	0x039521F4 BL 0x1C16F28
	0x039521F8 SUB X31, X31, 0x1A0
	0x039521FC STP D13, D12, [X31 + 0x110]
	0x03952200 STP D11, D10, [X31 + 0x120]
	0x03952204 STP D9, D8, [X31 + 0x130]
	0x03952208 STP X29, X30, [X31 + 0x140]
	0x0395220C STP X28, X27, [X31 + 0x150]
	0x03952210 STP X26, X25, [X31 + 0x160]
	0x03952214 STP X24, X23, [X31 + 0x170]
	0x03952218 STP X22, X21, [X31 + 0x180]
	0x0395221C STP X20, X19, [X31 + 0x190]
	0x03952220 ADRP X24, 0xA8F000
	0x03952224 STR X1, [X31 + 0x108]
	0x03952228 ADRP X23, 0x7A1000
	0x0395222C LDRB W8, [X24 + 0x997]
	0x03952230 LDR X23, [X23 + 0x598]
	0x03952234 MOV W22, W3
	0x03952238 MOV X21, X2
	0x0395223C MOV X20, X1
	0x03952240 MOV X19, X0
	0x03952244 TBNZ X8, 0x0, 0x3952304
	0x03952248 ADRP X0, 0x7FC000
	0x0395224C LDR X0, [X0 + 0xD00]
	0x03952250 BL 0x1C16CF4
	0x03952254 ADRP X0, 0x7A6000
	0x03952258 LDR X0, [X0 + 0x140]
	0x0395225C BL 0x1C16CF4
	0x03952260 ADRP X0, 0x7C9000
	0x03952264 LDR X0, [X0 + 0x600]
	0x03952268 BL 0x1C16CF4
	0x0395226C ADRP X0, 0x7FD000
	0x03952270 LDR X0, [X0 + 0x328]
	0x03952274 BL 0x1C16CF4
	0x03952278 ADRP X0, 0x7FC000
	0x0395227C LDR X0, [X0 + 0x560]
	0x03952280 BL 0x1C16CF4
	0x03952284 ADRP X0, 0x7A2000
	0x03952288 LDR X0, [X0 + 0xE58]
	0x0395228C BL 0x1C16CF4
	0x03952290 ADRP X0, 0x7FD000
	0x03952294 LDR X0, [X0 + 0x330]
	0x03952298 BL 0x1C16CF4
	0x0395229C ADRP X0, 0x7FB000
	0x039522A0 LDR X0, [X0 + 0xAD0]
	0x039522A4 BL 0x1C16CF4
	0x039522A8 ADRP X0, 0x7A1000
	0x039522AC LDR X0, [X0 + 0x598]
	0x039522B0 BL 0x1C16CF4
	0x039522B4 ADRP X0, 0x7FD000
	0x039522B8 LDR X0, [X0 + 0x338]
	0x039522BC BL 0x1C16CF4
	0x039522C0 ADRP X0, 0x7FD000
	0x039522C4 LDR X0, [X0 + 0x340]
	0x039522C8 BL 0x1C16CF4
	0x039522CC ADRP X0, 0x7FB000
	0x039522D0 LDR X0, [X0 + 0xA88]
	0x039522D4 BL 0x1C16CF4
	0x039522D8 ADRP X0, 0x7A3000
	0x039522DC LDR X0, [X0 + 0x9B0]
	0x039522E0 BL 0x1C16CF4
	0x039522E4 ADRP X0, 0x7FC000
	0x039522E8 LDR X0, [X0 + 0x48]
	0x039522EC BL 0x1C16CF4
	0x039522F0 ADRP X0, 0x7FD000
	0x039522F4 LDR X0, [X0 + 0x348]
	0x039522F8 BL 0x1C16CF4
	0x039522FC MOVZ W8, 0x1
	0x03952300 STRB W8, [X24 + 0x997]
	0x03952304 LDR X0, [X23]
	0x03952308 MOVI V0.2D, 0x0
	0x0395230C STP V0, V0, [X31 + 0xE0]
	0x03952310 STP X31, X31, [X31 + 0xD0]
	0x03952314 STR X31, [X31 + 0xC8]
	0x03952318 LDR W8, [X0 + 0xE0]
	0x0395231C CBNZ W8, 0x3952324
	0x03952320 BL 0x1C16DFC
	0x03952324 MOV X0, X19
	0x03952328 MOV X1, X31
	0x0395232C MOV X2, X31
	0x03952330 BL 0x3C3883C
	0x03952334 TBNZ X0, 0x0, 0x39534A0
	0x03952338 CBZ X19, 0x3953498
	0x0395233C LDR X26, [X19 + 0x30]
	0x03952340 MOV X0, X19
	0x03952344 MOV X1, X31
	0x03952348 BL 0x3916198
	0x0395234C MOV X24, X0
	0x03952350 TBZ X22, 0x0, 0x3952474
	0x03952354 LDR X23, [X19 + 0x28]
	0x03952358 CBZ X23, 0x3953498
	0x0395235C LDR W8, [X23 + 0x18]
	0x03952360 CMP W8, 0x1
	0x03952364 B.LT 0x39523D8
	0x03952368 MOV W25, W31
	0x0395236C CMP W25, W8
	0x03952370 B.CS 0x395349C
	0x03952374 ADD X8, X23, W25, 0x3, SXTW
	0x03952378 LDR X22, [X8 + 0x20]
	0x0395237C CBZ X22, 0x3953498
	0x03952380 MOV X0, X22
	0x03952384 MOV X1, X31
	0x03952388 BL 0x38FFA80
	0x0395238C MOV X1, X0
	0x03952390 MOV X0, X19
	0x03952394 MOV X2, X20
	0x03952398 MOV X3, X31
	0x0395239C BL 0x38FF694
	0x039523A0 TBNZ X0, 0x1F, 0x39523C8
	0x039523A4 MOV X0, X22
	0x039523A8 MOV X1, X31
	0x039523AC BL 0x38FFA80
	0x039523B0 MOV X1, X0
	0x039523B4 MOV X0, X19
	0x039523B8 MOV X2, X21
	0x039523BC MOV X3, X31
	0x039523C0 BL 0x38FF694
	0x039523C4 TBZ X0, 0x1F, 0x39524D8
	0x039523C8 LDR W8, [X23 + 0x18]
	0x039523CC ADD W25, W25, 0x1
	0x039523D0 CMP W25, W8
	0x039523D4 B.LT 0x395236C
	0x039523D8 LDR X20, [X19 + 0x58]
	0x039523DC MOVZ W1, 0x20
	0x039523E0 MOV X0, X19
	0x039523E4 MOV X2, X31
	0x039523E8 BL 0x39112BC
	0x039523EC MOV W22, W0
	0x039523F0 MOV X27, X31
	0x039523F4 TBZ X0, 0x0, 0x39523FC
	0x039523F8 LDR X27, [X19 + 0x88]
	0x039523FC ADD X8, X31, 0xA0
	0x03952400 MOV X0, X31
	0x03952404 BL 0x38F6A48
	0x03952408 LDP V0, V1, [X31 + 0xA0]
	0x0395240C LDR X1, [X31 + 0x108]
	0x03952410 ADD X2, X31, 0xD0
	0x03952414 MOV X0, X19
	0x03952418 MOV X3, X31
	0x0395241C STP V0, V1, [X31 + 0xE0]
	0x03952420 BL 0x38FF2CC
	0x03952424 TBNZ X0, 0x0, 0x3952440
	0x03952428 ADD X2, X31, 0xD0
	0x0395242C MOV X0, X19
	0x03952430 MOV X1, X21
	0x03952434 MOV X3, X31
	0x03952438 BL 0x38FF2CC
	0x0395243C TBZ X0, 0x0, 0x395250C
	0x03952440 LDR X8, [X31 + 0xD0]
	0x03952444 CBZ X8, 0x3953498
	0x03952448 LDUR V0, [X8 + 0x2C]
	0x0395244C LDUR V1, [X8 + 0x1C]
	0x03952450 ADD X0, X31, 0xE0
	0x03952454 ADD X1, X31, 0x80
	0x03952458 MOV X2, X31
	0x0395245C STP V1, V0, [X31 + 0x80]
	0x03952460 BL 0x38F69EC
	0x03952464 LDR X8, [X31 + 0xD0]
	0x03952468 CBZ X8, 0x3953498
	0x0395246C LDR W29, [X8 + 0x48]
	0x03952470 B 0x3952510
	0x03952474 ADRP X22, 0x7FD000
	0x03952478 LDR X22, [X22 + 0x328]
	0x0395247C LDR X0, [X22]
	0x03952480 LDR W8, [X0 + 0xE0]
	0x03952484 CBNZ W8, 0x395248C
	0x03952488 BL 0x1C16DFC
	0x0395248C MOV X0, X19
	0x03952490 MOV X1, X20
	0x03952494 BL 0x39534E8
	0x03952498 CBZ X0, 0x3953498
	0x0395249C LDR W8, [X0 + 0x18]
	0x039524A0 CMP W8, 0x1
	0x039524A4 B.GT 0x3952504
	0x039524A8 LDR X0, [X22]
	0x039524AC LDR W8, [X0 + 0xE0]
	0x039524B0 CBNZ W8, 0x39524B8
	0x039524B4 BL 0x1C16DFC
	0x039524B8 MOV X0, X19
	0x039524BC MOV X1, X21
	0x039524C0 BL 0x39534E8
	0x039524C4 CBZ X0, 0x3953498
	0x039524C8 LDR W8, [X0 + 0x18]
	0x039524CC CMP W8, 0x1
	0x039524D0 B.LE 0x3952354
	0x039524D4 B 0x3952504
	0x039524D8 ADRP X8, 0x7FB000
	0x039524DC LDR X8, [X8 + 0xAD0]
	0x039524E0 LDR X0, [X8]
	0x039524E4 LDR W8, [X0 + 0xE0]
	0x039524E8 CBNZ W8, 0x39524F0
	0x039524EC BL 0x1C16DFC
	0x039524F0 ADRP X8, 0x7FD000
	0x039524F4 LDR X8, [X8 + 0x348]
	0x039524F8 MOV X1, X31
	0x039524FC LDR X0, [X8]
	0x03952500 BL 0x39070F4
	0x03952504 MOV X26, X31
	0x03952508 B 0x3953258
	0x0395250C MOV W29, W31
	0x03952510 ADRP X23, 0x7C9000
	0x03952514 LDR X23, [X23 + 0x600]
	0x03952518 UBFM X9, X21, 0x20, 0x3F
	0x0395251C STR X9, [X31 + 0x38]
	0x03952520 LDR X0, [X23]
	0x03952524 LDR W8, [X0 + 0xE0]
	0x03952528 CBNZ W8, 0x3952530
	0x0395252C BL 0x1C16DFC
	0x03952530 ADD X0, X31, 0x108
	0x03952534 MOV W1, W21
	0x03952538 MOV X2, X24
	0x0395253C MOV X3, X31
	0x03952540 BL 0x38FE25C
	0x03952544 STR W29, [X31 + 0x34]
	0x03952548 TBNZ X0, 0x0, 0x3952574
	0x0395254C LDR X0, [X23]
	0x03952550 LDR W8, [X0 + 0xE0]
	0x03952554 CBNZ W8, 0x395255C
	0x03952558 BL 0x1C16DFC
	0x0395255C ADD X0, X31, 0x108
	0x03952560 LDR X1, [X31 + 0x38]
	0x03952564 MOV X2, X24
	0x03952568 MOV X3, X31
	0x0395256C BL 0x38FE25C
	0x03952570 TBZ X0, 0x0, 0x3952B2C
	0x03952574 ADRP X8, 0x7A3000
	0x03952578 LDR X8, [X8 + 0x9B0]
	0x0395257C MOVZ W1, 0x3
	0x03952580 LDR X0, [X8]
	0x03952584 BL 0x1C16D6C
	0x03952588 ADRP X8, 0x7A6000
	0x0395258C LDR X8, [X8 + 0x140]
	0x03952590 MOV X24, X0
	0x03952594 MOVZ W1, 0x3
	0x03952598 LDR X8, [X8]
	0x0395259C MOV X0, X8
	0x039525A0 BL 0x1C16D6C
	0x039525A4 ADRP X8, 0x7A2000
	0x039525A8 LDR X8, [X8 + 0xE58]
	0x039525AC STR X0, [X31 + 0x20]
	0x039525B0 MOVZ W1, 0x3
	0x039525B4 LDR X8, [X8]
	0x039525B8 MOV X0, X8
	0x039525BC BL 0x1C16D6C
	0x039525C0 LDR W1, [X31 + 0x108]
	0x039525C4 MOV X25, X0
	0x039525C8 MOV X0, X19
	0x039525CC MOV X2, X31
	0x039525D0 BL 0x391B5D8
	0x039525D4 CBZ X26, 0x3953498
	0x039525D8 LDR W8, [X26 + 0x18]
	0x039525DC CMP W0, W8
	0x039525E0 B.CS 0x395349C
	0x039525E4 ADD X8, X26, W0, 0x3, SXTW
	0x039525E8 LDR X8, [X8 + 0x20]
	0x039525EC CBZ X8, 0x3953498
	0x039525F0 ADRP X23, 0x7FC000
	0x039525F4 LDR X0, [X8 + 0x10]
	0x039525F8 LDR X23, [X23 + 0xD00]
	0x039525FC MOV W1, W21
	0x03952600 MOV W28, W22
	0x03952604 LDR X2, [X23]
	0x03952608 BL 0x22E7518
	0x0395260C LDR W1, [X31 + 0x108]
	0x03952610 MOV W22, W0
	0x03952614 MOV X0, X19
	0x03952618 MOV X2, X31
	0x0395261C BL 0x391B5D8
	0x03952620 LDR W8, [X26 + 0x18]
	0x03952624 CMP W0, W8
	0x03952628 B.CS 0x395349C
	0x0395262C ADD X8, X26, W0, 0x3, SXTW
	0x03952630 LDR X8, [X8 + 0x20]
	0x03952634 CBZ X8, 0x3953498
	0x03952638 LDR X0, [X8 + 0x10]
	0x0395263C LDR X2, [X23]
	0x03952640 LDR X1, [X31 + 0x38]
	0x03952644 BL 0x22E7518
	0x03952648 LDR W1, [X31 + 0x10C]
	0x0395264C STR W0, [X31 + 0x28]
	0x03952650 MOV X0, X19
	0x03952654 MOV X2, X31
	0x03952658 BL 0x391B5D8
	0x0395265C LDR W8, [X26 + 0x18]
	0x03952660 CMP W0, W8
	0x03952664 B.CS 0x395349C
	0x03952668 ADD X8, X26, W0, 0x3, SXTW
	0x0395266C LDR X8, [X8 + 0x20]
	0x03952670 CBZ X8, 0x3953498
	0x03952674 LDR X0, [X8 + 0x10]
	0x03952678 LDR X2, [X23]
	0x0395267C MOV W1, W21
	0x03952680 BL 0x22E7518
	0x03952684 LDR W1, [X31 + 0x10C]
	0x03952688 MOV W29, W0
	0x0395268C MOV X0, X19
	0x03952690 MOV X2, X31
	0x03952694 BL 0x391B5D8
	0x03952698 LDR W8, [X26 + 0x18]
	0x0395269C CMP W0, W8
	0x039526A0 B.CS 0x395349C
	0x039526A4 ADD X8, X26, W0, 0x3, SXTW
	0x039526A8 LDR X8, [X8 + 0x20]
	0x039526AC CBZ X8, 0x3953498
	0x039526B0 LDR X0, [X8 + 0x10]
	0x039526B4 LDR X2, [X23]
	0x039526B8 LDR X1, [X31 + 0x38]
	0x039526BC BL 0x22E7518
	0x039526C0 MOV W26, W22
	0x039526C4 TBNZ X22, 0x1F, 0x3952858
	0x039526C8 CBZ X20, 0x3953498
	0x039526CC MOV X9, X20
	0x039526D0 LDRSW X8, [X31 + 0x108]
	0x039526D4 LDR W9, [X20 + 0x18]
	0x039526D8 CMP W8, W9
	0x039526DC B.CS 0x395349C
	0x039526E0 MOV W22, W28
	0x039526E4 MOV X28, X25
	0x039526E8 LDR X25, [X31 + 0x20]
	0x039526EC CBZ X24, 0x3953498
	0x039526F0 LDR W9, [X24 + 0x18]
	0x039526F4 CBZ W9, 0x395349C
	0x039526F8 MOVZ W9, 0xC
	0x039526FC MADD X8, X8, X9, X20
	0x03952700 LDR V0, [X8 + 0x20]
	0x03952704 LDR V1, [X8 + 0x28]
	0x03952708 STR D0, [X24 + 0x20]
	0x0395270C STR S1, [X24 + 0x28]
	0x03952710 TBZ X22, 0x0, 0x3952740
	0x03952714 CBZ X27, 0x3953498
	0x03952718 LDRSW X8, [X31 + 0x108]
	0x0395271C LDR W9, [X27 + 0x18]
	0x03952720 CMP W8, W9
	0x03952724 B.CS 0x395349C
	0x03952728 CBZ X25, 0x3953498
	0x0395272C LDR W9, [X25 + 0x18]
	0x03952730 CBZ W9, 0x395349C
	0x03952734 ADD X8, X27, X8, 0x4, LSL
	0x03952738 LDR V0, [X8 + 0x2]
	0x0395273C STR V0, [X25 + 0x2]
	0x03952740 LDR W1, [X31 + 0x108]
	0x03952744 MOV X0, X19
	0x03952748 MOV X2, X31
	0x0395274C BL 0x391B5D8
	0x03952750 CBZ X28, 0x3953498
	0x03952754 LDR W8, [X28 + 0x18]
	0x03952758 CBZ W8, 0x395349C
	0x0395275C STR W0, [X28 + 0x20]
	0x03952760 LDRSW X8, [X31 + 0x10C]
	0x03952764 LDR W9, [X20 + 0x18]
	0x03952768 CMP W8, W9
	0x0395276C B.CS 0x395349C
	0x03952770 LDR W9, [X24 + 0x18]
	0x03952774 CMP W9, 0x1
	0x03952778 B.LS 0x395349C
	0x0395277C MOVZ W9, 0xC
	0x03952780 MADD X8, X8, X9, X20
	0x03952784 LDR V0, [X8 + 0x20]
	0x03952788 LDR V1, [X8 + 0x28]
	0x0395278C STUR D0, [X24 + 0x2C]
	0x03952790 STR S1, [X24 + 0x34]
	0x03952794 TBZ X22, 0x0, 0x39527C8
	0x03952798 CBZ X27, 0x3953498
	0x0395279C LDRSW X8, [X31 + 0x10C]
	0x039527A0 LDR W9, [X27 + 0x18]
	0x039527A4 CMP W8, W9
	0x039527A8 B.CS 0x395349C
	0x039527AC CBZ X25, 0x3953498
	0x039527B0 LDR W9, [X25 + 0x18]
	0x039527B4 CMP W9, 0x1
	0x039527B8 B.LS 0x395349C
	0x039527BC ADD X8, X27, X8, 0x4, LSL
	0x039527C0 LDR V0, [X8 + 0x2]
	0x039527C4 STR V0, [X25 + 0x3]
	0x039527C8 LDR W1, [X31 + 0x10C]
	0x039527CC MOV X0, X19
	0x039527D0 MOV X2, X31
	0x039527D4 BL 0x391B5D8
	0x039527D8 LDR W8, [X28 + 0x18]
	0x039527DC CMP W8, 0x1
	0x039527E0 B.LS 0x395349C
	0x039527E4 STR W0, [X28 + 0x24]
	0x039527E8 LDR W9, [X20 + 0x18]
	0x039527EC SBFM X8, X21, 0x20, 0x3F
	0x039527F0 CMP W8, W9
	0x039527F4 B.CS 0x395349C
	0x039527F8 LDR W9, [X24 + 0x18]
	0x039527FC CMP W9, 0x2

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X24, 0xA91000
	019 Move X23, 0x7A3000
	020 Move W8, [X24+2450]
	021 Move X23, [X23+1432]
	022 Move X22, X3
	023 Move W20, W2
	024 Move V8, V0
	025 Move X21, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {102}
	031 Move X0, 0x7FD000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0x7FF000
	035 Move X0, [X0+680]
	036 Call 0x1C17CF4
	037 Move X0, 0x7FE000
	038 Move X0, [X0+368]
	039 Call 0x1C17CF4
	040 Move X0, 0x7FE000
	041 Move X0, [X0+1008]
	042 Call 0x1C17CF4
	043 Move X0, 0x7FE000
	044 Move X0, [X0+1376]
	045 Call 0x1C17CF4
	046 Move X0, 0x7FF000
	047 Move X0, [X0+688]
	048 Call 0x1C17CF4
	049 Move X0, 0x7FF000
	050 Move X0, [X0+696]
	051 Call 0x1C17CF4
	052 Move X0, 0x7FD000
	053 Move X0, [X0+3960]
	054 Call 0x1C17CF4
	055 Move X0, 0x7FF000
	056 Move X0, [X0+704]
	057 Call 0x1C17CF4
	058 Move X0, 0x7A4000
	059 Move X0, [X0+3608]
	060 Call 0x1C17CF4
	061 Move X0, 0x7FD000
	062 Move X0, [X0+2768]
	063 Call 0x1C17CF4
	064 Move X0, 0x7AA000
	065 Move X0, [X0+1208]
	066 Call 0x1C17CF4
	067 Move X0, 0x7A3000
	068 Move X0, [X0+1432]
	069 Call 0x1C17CF4
	070 Move X0, 0x7FF000
	071 Move X0, [X0+712]
	072 Call 0x1C17CF4
	073 Move X0, 0x7FF000
	074 Move X0, [X0+584]
	075 Call 0x1C17CF4
	076 Move X0, 0x7FF000
	077 Move X0, [X0+672]
	078 Call 0x1C17CF4
	079 Move X0, 0x7A5000
	080 Move X0, [X0+2480]
	081 Call 0x1C17CF4
	082 Move X0, 0x7FF000
	083 Move X0, [X0+720]
	084 Call 0x1C17CF4
	085 Move X0, 0x7FF000
	086 Move X0, [X0+728]
	087 Call 0x1C17CF4
	088 Move X0, 0x7FF000
	089 Move X0, [X0+736]
	090 Call 0x1C17CF4
	091 Move X0, 0x7FF000
	092 Move X0, [X0+744]
	093 Call 0x1C17CF4
	094 Move X0, 0x7FF000
	095 Move X0, [X0+752]
	096 Call 0x1C17CF4
	097 Move X0, 0x7FF000
	098 Move X0, [X0+760]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X24+2450], W8
	102 Move X0, [X23]
	103 Move [X31+8], X31
	104 Move [X31+4], W31
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X19
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Equality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {747}
	117 Move X24, 0x7FD000
	118 Move X24, [X24+2520]
	119 Compare X21, 0
	120 JumpIfEqual {169}
	121 Move X27, 0x7FD000
	122 Move X8, [X21]
	123 Move X27, [X27+3960]
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move X1, [X27]
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X21
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X21
	143 NotImplemented "Instruction BLR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X28, 0x7FE000
	146 Move X28, [X28+368]
	147 Move X0, X21
	148 Move X1, [X28]
	149 Call Enumerable.ToArray, X0
	150 Move X21, X0
	151 Compare X22, 0
	152 JumpIfEqual {200}
	153 Move X29, 0x7FF000
	154 Move X8, [X22]
	155 Move X29, [X29+696]
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Move X1, [X29]
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X22
	167 Move W2, W31
	168 Call 0x1C5D788
	169 Move X20, 0x7FF000
	170 Move X20, [X20+744]
	171 Move X0, X19
	172 Call AppendElements.ClearAndRefreshMesh, X0
	173 Move X0, [X24]
	174 Call 0x1C17F10
	175 Move X2, [X20]
	176 Move X19, X0
	177 Move W1, 3
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X22
	184 NotImplemented "Instruction BLR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X22]
	187 Move X1, [X29]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X22
	198 Move W2, W31
	199 Call 0x1C5D788
	200 Move X23, X31
	201 Move X25, 0x7FD000
	202 Move X25, [X25+2768]
	203 Move X0, [X25]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move W0, 1
	209 Move X1, X31
	210 Call Log.PushLogLevel, X0
	211 Add X1, X31, 8
	212 Move X0, X21
	213 Move X2, X23
	214 Move X3, X31
	215 Call Triangulation.TriangulateVertices, X0, X1, X2
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {241}
	220 Compare X23, 0
	221 JumpIfEqual {482}
	222 Compare X21, 0
	223 JumpIfEqual {745}
	224 Move X26, 0x7FF000
	225 Move X26, [X26+584]
	226 Move X0, [X26]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X26]
	232 Move X8, [X0+184]
	233 Move W27, [X21+24]
	234 Move X22, [X8+8]
	235 Compare X22, 0
	236 JumpIfNotEqual {439}
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfEqual {419}
	240 Move X28, X24
	241 Move X0, X19
	242 Call AppendElements.ClearAndRefreshMesh, X0
	243 Move X0, [X25]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X0, X31
	249 Call Log.PopLogLevel
	250 Move X0, [X24]
	251 Call 0x1C17F10
	252 Move X8, 0x7FE000
	253 Move X8, [X8+752]
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X8, 0x7FE000
	262 Move X8, [X8+672]
	263 Move W1, W0
	264 Move X8, [X8]
	265 Move X0, X8
	266 Call 0x1C17D6C
	267 Move X26, 0x7FE000
	268 Move X26, [X26+704]
	269 Move X23, X0
	270 Move W24, W31
	271 Move [X31+4], W24
	272 Move X8, [X22]
	273 Move X1, [X29]
	274 NotImplemented "Instruction LDRH not yet implemented."
	275 Compare X9, 0
	276 JumpIfEqual {283}
	277 Move X10, [X8+176]
	278 Add X10, X10, 8
	279 NotImplemented "Instruction LDUR not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Subtract X9, X9, 1
	282 Add X10, X10, 16
	283 Move X0, X22
	284 Move W2, W31
	285 Call 0x1C5D788
	286 NotImplemented "Instruction LDRSW not yet implemented."
	287 Add X8, X8, X9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X22
	292 NotImplemented "Instruction BLR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X8, [X22]
	295 Move X1, [X26]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X22
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X2, [X0+8]
	313 Move X0, X22
	314 Move W1, W24
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X0, 0
	317 JumpIfEqual {396}
	318 Move X8, [X22]
	319 Move X1, [X26]
	320 NotImplemented "Instruction LDRH not yet implemented."
	321 Compare X9, 0
	322 JumpIfEqual {329}
	323 Move X10, [X8+176]
	324 Add X10, X10, 8
	325 NotImplemented "Instruction LDUR not yet implemented."
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Subtract X9, X9, 1
	328 Add X10, X10, 16
	329 Move X0, X22
	330 Move W2, W31
	331 Call 0x1C5D788
	332 NotImplemented "Instruction LDRSW not yet implemented."
	333 Add X8, X8, X9
	334 Add X0, X8, 312
	335 Move X8, [X0]
	336 Move X2, [X0+8]
	337 Move X0, X22
	338 Move W1, W24
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Compare X0, 0
	341 JumpIfEqual {745}
	342 Move X8, [X0]
	343 Move X1, [X27]
	344 Move X25, X0
	345 NotImplemented "Instruction LDRH not yet implemented."
	346 Compare X9, 0
	347 JumpIfEqual {354}
	348 Move X10, [X8+176]
	349 Add X10, X10, 8
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract X9, X9, 1
	353 Add X10, X10, 16
	354 Move X0, X25
	355 Move W2, W31
	356 Call 0x1C5D788
	357 NotImplemented "Instruction LDRSW not yet implemented."
	358 Add X8, X8, X9
	359 Add X0, X8, 312
	360 Move X8, [X0]
	361 Move X1, [X0+8]
	362 Move X0, X25
	363 NotImplemented "Instruction BLR not yet implemented."
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X8, [X22]
	366 Move X1, [X26]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move X0, X22
	377 Move W2, W31
	378 Call 0x1C5D788
	379 NotImplemented "Instruction LDRSW not yet implemented."
	380 Add X8, X8, X9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X2, [X0+8]
	384 Move X0, X22
	385 Move W1, W24
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move X1, [X28]
	388 Call Enumerable.ToArray, X0
	389 Compare X23, 0
	390 JumpIfEqual {745}
	391 Move W8, [X23+24]
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Add X8, X23, W24
	394 Add W24, W24, 1
	395 Move [X8+32], X0
	396 Move X0, X19
	397 Call AppendElements.ClearAndRefreshMesh, X0
	398 Add X0, X31, 4
	399 Move X1, X31
	400 Call Int32.ToString, X0
	401 Move X8, 0x7FE000
	402 Move X8, [X8+728]
	403 Move X1, X0
	404 Move X2, X31
	405 Move X8, [X8]
	406 Move X0, X8
	407 Call String.Concat, X0, X1
	408 Move X8, 0x7FC000
	409 Move X8, [X8+2520]
	410 Move X20, X0
	411 Move X8, [X8]
	412 Move X0, X8
	413 Call 0x1C17F10
	414 Move X19, X0
	415 Move W1, 3
	416 Move X2, X20
	417 Move X24, 0x7FC000
	418 Move X24, [X24+2520]
	419 Move X28, X24
	420 Call 0x1C17DFC
	421 Move X0, [X26]
	422 Move X9, 0x7FE000
	423 Move X8, [X0+184]
	424 Move X9, [X9+688]
	425 Move X24, [X8]
	426 Move X0, [X9]
	427 Call 0x1C17F10
	428 Move X8, 0x7FE000
	429 Move X8, [X8+712]
	430 Move X1, X24
	431 Move X3, X31
	432 Move X22, X0
	433 Move X2, [X8]
	434 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	435 Move X8, [X26]
	436 Move X24, X28
	437 Move X8, [X8+184]
	438 Move [X8+8], X22
	439 Move X8, 0x7FE000
	440 Move X8, [X8+680]
	441 Move X0, X23
	442 Move X1, X22
	443 Move X2, [X8]
	444 Call Enumerable.Sum, X0, X1
	445 Move X8, 0x7A4000
	446 Move X8, [X8+2480]
	447 Add W1, W0, W27
	448 Move X8, [X8]
	449 Move X0, X8
	450 Call 0x1C17D6C
	451 Move W2, [X21+24]
	452 Move X22, X0
	453 Move X0, X21
	454 Move X1, X22
	455 Move X3, X31
	456 Call Array.Copy, X0, X1, X2
	457 Move W8, [X23+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W21, [X21+24]
	460 Move X28, X24
	461 Move X26, X31
	462 Add X27, X23, 32
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X24, [X27]
	465 Compare X24, 0
	466 JumpIfEqual {745}
	467 Move W4, [X24+24]
	468 Move X0, X24
	469 Move W1, W31
	470 Move X2, X22
	471 Move W3, W21
	472 Move X5, X31
	473 Call Array.ConstrainedCopy, X0, X1, X2, X3, X4
	474 Move W8, [X23+24]
	475 Move W9, [X24+24]
	476 Add X26, X26, 1
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Add W21, W21, W9
	479 Move X21, X22
	480 Move X24, X28
	481 Move X21, X22
	482 Move X0, [X31+8]
	483 Compare X0, 0
	484 JumpIfEqual {745}
	485 Move X8, 0x7A3000
	486 Move X8, [X8+3608]
	487 Move X1, [X8]
	488 Call List`1<Int32>.ToArray, X0
	489 Move X23, X0
	490 Move X0, X21
	491 Move X1, X23
	492 Move X2, X31
	493 Call Math.PolygonArea, X0, X1
	494 Move X8, 0x7A9000
	495 Move X8, [X8+1208]
	496 Move X8, [X8]
	497 Move X8, [X8+184]
	498 Move V1, [X8]
	499 NotImplemented "Instruction FCMP not yet implemented."
	500 Move X0, X19
	501 Call AppendElements.ClearAndRefreshMesh, X0
	502 Move X0, [X25]
	503 Move W8, [X0+224]
	504 Compare W8, 0
	505 JumpIfNotEqual {507}
	506 Call 0x1C17DFC
	507 Move X0, X31
	508 Call Log.PopLogLevel
	509 Move X0, [X24]
	510 Call 0x1C17F10
	511 Move X8, 0x7FE000
	512 Move X8, [X8+736]
	513 Compare X19, 0
	514 JumpIfEqual {745}
	515 Move X0, X19
	516 Move X1, X31
	517 Call ProBuilderMesh.Clear, X0
	518 Move [X19+88], X21
	519 Move X8, 0x7FD000
	520 Move X8, [X8+1376]
	521 Move X0, [X8]
	522 Call 0x1C17F10
	523 Move X1, X23
	524 Move X2, X31
	525 Move X22, X0
	526 Call Face..ctor, X0, X1
	527 Move X23, 0x7FD000
	528 Move X23, [X23+1008]
	529 Move W1, 1
	530 Move X0, [X23]
	531 Call 0x1C17D6C
	532 Compare X0, 0
	533 JumpIfEqual {745}
	534 Move W8, [X0+24]
	535 Compare W8, 0
	536 JumpIfEqual {746}
	537 Move [X0+32], X22
	538 Move [X19+40], X0
	539 Move X0, X21
	540 Move X1, X31
	541 Call SharedVertex.GetSharedVerticesWithPositions, X0
	542 Move X1, X0
	543 Move X0, X19
	544 Move X2, X31
	545 Call ProBuilderMesh.set_sharedVerticesInternal, X0, X1
	546 Move X0, X19
	547 Move X1, X31
	548 Call ProBuilderMesh.InvalidateCaches, X0
	549 Compare X22, 0
	550 JumpIfEqual {745}
	551 Move X0, X22
	552 Move X1, X31
	553 Call Face.get_distinctIndexesInternal, X0
	554 Compare X0, 0
	555 JumpIfEqual {745}
	556 Compare X21, 0
	557 JumpIfEqual {745}
	558 Move W8, [X0+24]
	559 Move W9, [X21+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X8, [X19+40]
	562 Compare X8, 0
	563 JumpIfEqual {745}
	564 Move W9, [X8+24]
	565 Compare W9, 0
	566 JumpIfEqual {746}
	567 Move X1, [X8+32]
	568 Move X0, X19
	569 Move X2, X31
	570 Call Math.Normal, X0, X1
	571 Move X0, X19
	572 Move X1, X31
	573 Move V9, V0
	574 Move V10, V1
	575 Move V11, V2
	576 Call Component.get_gameObject, X0
	577 Compare X0, 0
	578 JumpIfEqual {745}
	579 Move X1, X31
	580 Call GameObject.get_transform, X0
	581 Compare X0, 0
	582 JumpIfEqual {745}
	583 Move V0, V9
	584 Move V1, V10
	585 Move V2, V11
	586 Move X1, X31
	587 Call Transform.TransformDirection, X0, X1
	588 Move X0, X19
	589 Move X1, X31
	590 Move V10, V0
	591 Move V11, V1
	592 Move V9, V2
	593 Call Component.get_gameObject, X0
	594 Compare X0, 0
	595 JumpIfEqual {745}
	596 Move X1, X31
	597 Call GameObject.get_transform, X0
	598 Compare X0, 0
	599 JumpIfEqual {745}
	600 Move X1, X31
	601 Call Transform.get_up, X0
	602 Multiply S0, S10, S0
	603 Multiply S1, S11, S1
	604 Multiply S2, S9, S2
	605 Add S0, S0, S1
	606 Add S0, S2, S0
	607 NotImplemented "Instruction FCMP not yet implemented."
	608 NotImplemented "Instruction CSET not yet implemented."
	609 NotImplemented "Instruction CSET not yet implemented."
	610 And W31, W20, 1
	611 NotImplemented "Instruction CSEL not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 Move X8, [X19+40]
	614 Compare X8, 0
	615 JumpIfEqual {745}
	616 Move W9, [X8+24]
	617 Compare W9, 0
	618 JumpIfEqual {746}
	619 Move X0, [X8+32]
	620 Compare X0, 0
	621 JumpIfEqual {745}
	622 Move X1, X31
	623 Call Face.Reverse, X0
	624 NotImplemented "Instruction FCMP not yet implemented."
	625 Move X1, [X19+40]
	626 Move X0, X19
	627 Call AppendElements.DuplicateAndFlip, X0, X1
	628 Move X0, [X23]
	629 Move W1, 1
	630 Call 0x1C17D6C
	631 Move X8, [X19+40]
	632 Compare X8, 0
	633 JumpIfEqual {745}
	634 Move W9, [X8+24]
	635 Move X1, X0
	636 Move TEMP, X20
	637 And TEMP, TEMP, 1
	638 Compare TEMP, 1
	639 JumpIfNotEqual {679}
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Add X8, X8, 40
	642 Move X0, X19
	643 Call AppendElements.ClearAndRefreshMesh, X0
	644 Move X0, [X25]
	645 Move W8, [X0+224]
	646 Compare W8, 0
	647 JumpIfNotEqual {649}
	648 Call 0x1C17DFC
	649 Move X0, X31
	650 Call Log.PopLogLevel
	651 Move X0, [X24]
	652 Call 0x1C17F10
	653 Move X8, 0x7FE000
	654 Move X8, [X8+720]
	655 Move X2, [X8]
	656 Move X19, X0
	657 Move W1, 1
	658 Move X3, X31
	659 Call ActionResult..ctor, X0, X1, X2
	660 Move X0, X19
	661 Move X20, [X31+128]
	662 Move X19, [X31+136]
	663 Move X22, [X31+112]
	664 Move X21, [X31+120]
	665 Move X24, [X31+96]
	666 Move X23, [X31+104]
	667 Move X26, [X31+80]
	668 Move X25, [X31+88]
	669 Move X28, [X31+64]
	670 Move X27, [X31+72]
	671 Move X29, [X31+48]
	672 Move X30, [X31+56]
	673 Move D9, [X31+32]
	674 Move D8, [X31+40]
	675 Move D11, [X31+16]
	676 Move D10, [X31+24]
	677 Add X31, X31, 144
	678 Return X0
	679 Compare W9, 0
	680 JumpIfEqual {746}
	681 Add X8, X8, 32
	682 Compare X1, 0
	683 JumpIfEqual {745}
	684 Move W9, [X1+24]
	685 Compare W9, 0
	686 JumpIfEqual {746}
	687 Move X8, [X8]
	688 Move X0, X19
	689 Move W2, W31
	690 Move V0, V8
	691 Move X3, X31
	692 Move [X1+32], X8
	693 Call ExtrudeElements.Extrude, X0, X1, X2, V0
	694 NotImplemented "Instruction FCMP not yet implemented."
	695 NotImplemented "Instruction CSET not yet implemented."
	696 And W9, W8, W20
	697 NotImplemented "Instruction CSET not yet implemented."
	698 Move TEMP, X9
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfEqual {707}
	702 Or W8, W8, W20
	703 Move TEMP, X8
	704 And TEMP, TEMP, 1
	705 Compare TEMP, 1
	706 JumpIfEqual {723}
	707 Move X20, [X19+40]
	708 Compare X20, 0
	709 JumpIfEqual {745}
	710 Move W8, [X20+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move W21, W31
	713 NotImplemented "Instruction CMP not yet implemented."
	714 Add X8, X20, W21
	715 Move X0, [X8+32]
	716 Compare X0, 0
	717 JumpIfEqual {745}
	718 Move X1, X31
	719 Call Face.Reverse, X0
	720 Move W8, [X20+24]
	721 Add W21, W21, 1
	722 NotImplemented "Instruction CMP not yet implemented."
	723 Move X0, X19
	724 Move W1, W31
	725 Move X2, X31
	726 Call ProBuilderMesh.ToMesh, X0, X1
	727 Move W1, 31
	728 Move X0, X19
	729 Move X2, X31
	730 Call ProBuilderMesh.Refresh, X0, X1
	731 Move X0, [X25]
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X31
	737 Call Log.PopLogLevel
	738 Move X0, [X24]
	739 Call 0x1C17F10
	740 Move X8, 0x7FE000
	741 Move X8, [X8+760]
	742 Move X19, X0
	743 Move W1, W31
	744 Move X2, [X8]
	745 Call 0x1C17F20
	746 Call 0x1C17F28
	747 Move X0, 0x7A7000
	748 Move X0, [X0+1320]
	749 Call 0x1C17D08
	750 Call 0x1C17F10
	751 Move X19, X0
	752 Move X0, 0x7FC000
	753 Move X0, [X0+3728]
	754 Call 0x1C17D08
	755 Move X1, X0
	756 Move X0, X19
	757 Move X2, X31
	758 Call ArgumentNullException..ctor, X0, X1
	759 Move X0, 0x7FE000
	760 Move X0, [X0+768]
	761 Call 0x1C17D08
	762 Move X1, X0
	763 Move X0, X19
	764 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.FaceRebuildData FaceWithVertices(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Boolean unordered = True)

Disassembly:
	0x03950DA4 LDR X0, [X0 + 0x248]
	0x03950DA8 BL 0x1C16CF4
	0x03950DAC ADRP X0, 0x7FF000
	0x03950DB0 LDR X0, [X0 + 0x2A0]
	0x03950DB4 BL 0x1C16CF4
	0x03950DB8 ADRP X0, 0x7A5000
	0x03950DBC LDR X0, [X0 + 0x9B0]
	0x03950DC0 BL 0x1C16CF4
	0x03950DC4 ADRP X0, 0x7FF000
	0x03950DC8 LDR X0, [X0 + 0x2D0]
	0x03950DCC BL 0x1C16CF4
	0x03950DD0 ADRP X0, 0x7FF000
	0x03950DD4 LDR X0, [X0 + 0x2D8]
	0x03950DD8 BL 0x1C16CF4
	0x03950DDC ADRP X0, 0x7FF000
	0x03950DE0 LDR X0, [X0 + 0x2E0]
	0x03950DE4 BL 0x1C16CF4
	0x03950DE8 ADRP X0, 0x7FF000
	0x03950DEC LDR X0, [X0 + 0x2E8]
	0x03950DF0 BL 0x1C16CF4
	0x03950DF4 ADRP X0, 0x7FF000
	0x03950DF8 LDR X0, [X0 + 0x2F0]
	0x03950DFC BL 0x1C16CF4
	0x03950E00 ADRP X0, 0x7FF000
	0x03950E04 LDR X0, [X0 + 0x2F8]
	0x03950E08 BL 0x1C16CF4
	0x03950E0C MOVZ W8, 0x1
	0x03950E10 STRB W8, [X24 + 0x992]
	0x03950E14 LDR X0, [X23]
	0x03950E18 STR X31, [X31 + 0x8]
	0x03950E1C STR W31, [X31 + 0x4]
	0x03950E20 LDR W8, [X0 + 0xE0]
	0x03950E24 CBNZ W8, 0x3950E2C
	0x03950E28 BL 0x1C16DFC
	0x03950E2C MOV X0, X19
	0x03950E30 MOV X1, X31
	0x03950E34 MOV X2, X31
	0x03950E38 BL 0x3C3883C
	0x03950E3C TBNZ X0, 0x0, 0x39517B8
	0x03950E40 ADRP X24, 0x7FD000
	0x03950E44 LDR X24, [X24 + 0x9D8]
	0x03950E48 CBZ X21, 0x3950F18
	0x03950E4C ADRP X27, 0x7FD000
	0x03950E50 LDR X8, [X21]
	0x03950E54 LDR X27, [X27 + 0xF78]
	0x03950E58 LDRH W9, [X8 + 0x12E]
	0x03950E5C LDR X1, [X27]
	0x03950E60 CBZ X9, 0x3950E84
	0x03950E64 LDR X10, [X8 + 0xB0]
	0x03950E68 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA92000
	007 Move W8, [X21+2451]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x800000
	015 Move X0, [X0+496]
	016 Call 0x1C17CF4
	017 Move X0, 0x7FF000
	018 Move X0, [X0+1376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2451], W8
	022 And W2, W20, 1
	023 Add X1, X31, 8
	024 Move X0, X19
	025 Move W3, W31
	026 Move X4, X31
	027 Move [X31+8], X31
	028 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	029 Move X20, X31
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {54}
	034 Move X8, 0x800000
	035 Move X8, [X8+496]
	036 Move X0, [X8]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call FaceRebuildData..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {61}
	043 Move [X20+24], X19
	044 Move X8, 0x7FF000
	045 Move X8, [X8+1376]
	046 Move X19, [X31+8]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X19
	050 Move X2, X31
	051 Move X21, X0
	052 Call Face..ctor, X0, X1
	053 Move [X20+16], X21
	054 Move X0, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Add X31, X31, 48
	060 Return X0
	061 Call 0x1C17F20

Method: UnityEngine.ProBuilder.FaceRebuildData FaceWithVerticesAndHole(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> borderVertices, System.Collections.Generic.List`1<System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex>> holes)

Disassembly:
	0x039517D8 MOV X1, X0
	0x039517DC MOV X0, X19
	0x039517E0 MOV X2, X31
	0x039517E4 BL 0x330E100
	0x039517E8 ADRP X0, 0x7FE000
	0x039517EC LDR X0, [X0 + 0x300]
	0x039517F0 BL 0x1C16D08
	0x039517F4 MOV X1, X0
	0x039517F8 MOV X0, X19
	0x039517FC BL 0x1C16DEC
	0x03951800 AND W2, W2, 0x1
	0x03951804 MOV X3, X31
	0x03951808 B 0x3950CAC
	0x0395180C SUB X31, X31, 0x90
	0x03951810 STP X29, X30, [X31 + 0x30]
	0x03951814 STP X28, X27, [X31 + 0x40]
	0x03951818 STP X26, X25, [X31 + 0x50]
	0x0395181C STP X24, X23, [X31 + 0x60]
	0x03951820 STP X22, X21, [X31 + 0x70]
	0x03951824 STP X20, X19, [X31 + 0x80]
	0x03951828 ADRP X19, 0xA90000
	0x0395182C ADRP X20, 0x7A2000
	0x03951830 LDRB W8, [X19 + 0x996]
	0x03951834 LDR X20, [X20 + 0x598]
	0x03951838 MOV X24, X1
	0x0395183C MOV X21, X0
	0x03951840 TBNZ X8, 0x0, 0x3951948
	0x03951844 ADRP X0, 0x7AC000
	0x03951848 LDR X0, [X0 + 0x858]
	0x0395184C BL 0x1C16CF4
	0x03951850 ADRP X0, 0x7FD000
	0x03951854 LDR X0, [X0 + 0xD08]
	0x03951858 BL 0x1C16CF4
	0x0395185C ADRP X0, 0x7AC000
	0x03951860 LDR X0, [X0 + 0x890]
	0x03951864 BL 0x1C16CF4
	0x03951868 ADRP X0, 0x7FD000
	0x0395186C LDR X0, [X0 + 0xD78]
	0x03951870 BL 0x1C16CF4
	0x03951874 ADRP X0, 0x7FC000
	0x03951878 LDR X0, [X0 + 0xC80]
	0x0395187C BL 0x1C16CF4
	0x03951880 ADRP X0, 0x7AC000
	0x03951884 LDR X0, [X0 + 0x888]
	0x03951888 BL 0x1C16CF4
	0x0395188C ADRP X0, 0x7FE000
	0x03951890 LDR X0, [X0 + 0x1F0]
	0x03951894 BL 0x1C16CF4
	0x03951898 ADRP X0, 0x7FD000
	0x0395189C LDR X0, [X0 + 0x560]
	0x039518A0 BL 0x1C16CF4
	0x039518A4 ADRP X0, 0x7A3000
	0x039518A8 LDR X0, [X0 + 0xE58]
	0x039518AC BL 0x1C16CF4
	0x039518B0 ADRP X0, 0x7A3000
	0x039518B4 LDR X0, [X0 + 0xE10]
	0x039518B8 BL 0x1C16CF4
	0x039518BC ADRP X0, 0x7FE000
	0x039518C0 LDR X0, [X0 + 0x308]
	0x039518C4 BL 0x1C16CF4
	0x039518C8 ADRP X0, 0x7FE000
	0x039518CC LDR X0, [X0 + 0x1C0]
	0x039518D0 BL 0x1C16CF4
	0x039518D4 ADRP X0, 0x7A6000
	0x039518D8 LDR X0, [X0 + 0xB70]
	0x039518DC BL 0x1C16CF4
	0x039518E0 ADRP X0, 0x7FC000
	0x039518E4 LDR X0, [X0 + 0xDE0]
	0x039518E8 BL 0x1C16CF4
	0x039518EC ADRP X0, 0x7FE000
	0x039518F0 LDR X0, [X0 + 0x1C8]
	0x039518F4 BL 0x1C16CF4
	0x039518F8 ADRP X0, 0x7FE000
	0x039518FC LDR X0, [X0 + 0x310]
	0x03951900 BL 0x1C16CF4
	0x03951904 ADRP X0, 0x7FE000
	0x03951908 LDR X0, [X0 + 0x1D0]
	0x0395190C BL 0x1C16CF4
	0x03951910 ADRP X0, 0x7A3000
	0x03951914 LDR X0, [X0 + 0xE30]
	0x03951918 BL 0x1C16CF4
	0x0395191C ADRP X0, 0x7FC000
	0x03951920 LDR X0, [X0 + 0xDE8]
	0x03951924 BL 0x1C16CF4
	0x03951928 ADRP X0, 0x7FE000
	0x0395192C LDR X0, [X0 + 0x318]
	0x03951930 BL 0x1C16CF4
	0x03951934 ADRP X0, 0x7A2000
	0x03951938 LDR X0, [X0 + 0x598]
	0x0395193C BL 0x1C16CF4
	0x03951940 MOVZ W8, 0x1
	0x03951944 STRB W8, [X19 + 0x996]
	0x03951948 LDR X0, [X20]
	0x0395194C LDR W8, [X0 + 0xE0]
	0x03951950 CBNZ W8, 0x3951958
	0x03951954 BL 0x1C16DFC
	0x03951958 MOV X0, X21
	0x0395195C MOV X1, X31
	0x03951960 MOV X2, X31
	0x03951964 BL 0x3C3883C
	0x03951968 TBNZ X0, 0x0, 0x3951E10
	0x0395196C CBZ X24, 0x3951E30
	0x03951970 ADRP X8, 0x7FE000
	0x03951974 LDR X8, [X8 + 0x318]
	0x03951978 ADRP X19, 0x7FE000
	0x0395197C LDR X0, [X8]
	0x03951980 LDR X19, [X19 + 0x310]
	0x03951984 BL 0x1C16F10
	0x03951988 LDR X1, [X19]
	0x0395198C MOV X25, X0
	0x03951990 BL 0x301B7C4
	0x03951994 CBZ X21, 0x3951E08
	0x03951998 ADRP X20, 0x7FC000
	0x0395199C ADRP X19, 0x7FC000
	0x039519A0 LDR X20, [X20 + 0xDE8]
	0x039519A4 LDR X19, [X19 + 0xDE0]
	0x039519A8 MOV X0, X21
	0x039519AC MOV X1, X31
	0x039519B0 MOV X2, X31
	0x039519B4 BL 0x3912114
	0x039519B8 LDR X8, [X20]
	0x039519BC MOV X23, X0
	0x039519C0 MOV X0, X8
	0x039519C4 BL 0x1C16F10
	0x039519C8 LDR X2, [X19]
	0x039519CC MOV X1, X23
	0x039519D0 MOV X22, X0
	0x039519D4 BL 0x301B8E0
	0x039519D8 MOV X0, X21
	0x039519DC MOV X1, X31
	0x039519E0 STR X21, [X31]
	0x039519E4 BL 0x3916198
	0x039519E8 LDR X8, [X24 + 0x18]
	0x039519EC CMP W8, 0x1
	0x039519F0 B.LT 0x3951DD4
	0x039519F4 ADRP X20, 0x7FC000
	0x039519F8 LDR X20, [X20 + 0xC80]
	0x039519FC MOV X23, X0
	0x03951A00 MOV X19, X31
	0x03951A04 AND X8, X8, 0x0
	0x03951A08 STP X24, X25, [X31 + 0x8]
	0x03951A0C CMP X19, W8, UXTW
	0x03951A10 B.CS 0x3951E0C
	0x03951A14 ADD X8, X24, X19, 0x3, LSL
	0x03951A18 LDR X26, [X8 + 0x20]
	0x03951A1C ADRP X8, 0x7FE000
	0x03951A20 LDR X8, [X8 + 0x1F0]
	0x03951A24 LDR X0, [X8]
	0x03951A28 BL 0x1C16F10
	0x03951A2C MOV X1, X31
	0x03951A30 MOV X24, X0
	0x03951A34 BL 0x3901F84
	0x03951A38 ADRP X8, 0x7FC000
	0x03951A3C LDR X8, [X8 + 0xDE8]
	0x03951A40 LDR X0, [X8]
	0x03951A44 BL 0x1C16F10
	0x03951A48 ADRP X8, 0x7FE000
	0x03951A4C LDR X8, [X8 + 0x1C8]
	0x03951A50 MOV X25, X0
	0x03951A54 LDR X1, [X8]
	0x03951A58 BL 0x301B7C4
	0x03951A5C CBZ X24, 0x3951E08
	0x03951A60 STR X25, [X24 + 0x18]
	0x03951A64 ADRP X8, 0x7FD000
	0x03951A68 LDR X8, [X8 + 0x560]
	0x03951A6C LDR X0, [X8]
	0x03951A70 BL 0x1C16F10
	0x03951A74 MOV X1, X26
	0x03951A78 MOV X2, X31
	0x03951A7C MOV X25, X0
	0x03951A80 BL 0x3900598
	0x03951A84 STR X25, [X24 + 0x10]
	0x03951A88 ADRP X8, 0x7A3000
	0x03951A8C LDR X8, [X8 + 0xE30]
	0x03951A90 LDR X0, [X8]
	0x03951A94 BL 0x1C16F10
	0x03951A98 ADRP X8, 0x7A6000
	0x03951A9C LDR X8, [X8 + 0xB70]
	0x03951AA0 MOV X25, X0
	0x03951AA4 LDR X1, [X8]
	0x03951AA8 BL 0x2FDBF14
	0x03951AAC STR X25, [X24 + 0x20]
	0x03951AB0 ADRP X8, 0x7AC000
	0x03951AB4 LDR X8, [X8 + 0x888]
	0x03951AB8 LDR X0, [X8]
	0x03951ABC BL 0x1C16F10
	0x03951AC0 ADRP X8, 0x7AC000
	0x03951AC4 LDR X8, [X8 + 0x890]
	0x03951AC8 MOV X25, X0
	0x03951ACC LDR X1, [X8]
	0x03951AD0 BL 0x2A09A9C
	0x03951AD4 LDR X8, [X24 + 0x10]
	0x03951AD8 CBZ X8, 0x3951E08
	0x03951ADC LDR X8, [X8 + 0x10]
	0x03951AE0 STR X19, [X31 + 0x18]
	0x03951AE4 CBZ X8, 0x3951E08
	0x03951AE8 LDR X8, [X8 + 0x18]
	0x03951AEC SUBS W21, W8, 0x1
	0x03951AF0 STR X8, [X31 + 0x20]
	0x03951AF4 AND X8, X8, 0x0
	0x03951AF8 STR X8, [X31 + 0x28]
	0x03951AFC B.LT 0x3951CC0
	0x03951B00 CBZ X26, 0x3951E08
	0x03951B04 LDR X8, [X31 + 0x28]
	0x03951B08 MOVZ W27, 0x8
	0x03951B0C SUB X19, X31, X8
	0x03951B10 LDR X8, [X26 + 0x10]
	0x03951B14 CBZ X8, 0x3951E08
	0x03951B18 LDR W9, [X8 + 0x18]
	0x03951B1C SUB X29, X27, 0x8
	0x03951B20 CMP X29, X9
	0x03951B24 B.CS 0x3951E0C
	0x03951B28 CBZ X25, 0x3951E08
	0x03951B2C LDR W1, [X8, X27, LSL #2]
	0x03951B30 ADRP X8, 0x7FD000
	0x03951B34 LDR X8, [X8 + 0xD08]
	0x03951B38 MOV X0, X25
	0x03951B3C LDR X2, [X8]
	0x03951B40 BL 0x2A0A530
	0x03951B44 TBNZ X0, 0x0, 0x3951CB0
	0x03951B48 LDR X8, [X26 + 0x10]
	0x03951B4C CBZ X8, 0x3951E08
	0x03951B50 LDR W9, [X8 + 0x18]
	0x03951B54 CMP X29, X9
	0x03951B58 B.CS 0x3951E0C
	0x03951B5C LDR W28, [X8, X27, LSL #2]
	0x03951B60 ADRP X8, 0x7FD000
	0x03951B64 LDR X8, [X8 + 0xD78]
	0x03951B68 MOV X0, X25
	0x03951B6C LDR X1, [X8]
	0x03951B70 BL 0x2A0A118
	0x03951B74 ADRP X8, 0x7AC000
	0x03951B78 LDR X8, [X8 + 0x858]
	0x03951B7C MOV W2, W0
	0x03951B80 MOV X0, X25
	0x03951B84 MOV W1, W28
	0x03951B88 LDR X3, [X8]
	0x03951B8C BL 0x2A0A344
	0x03951B90 LDR X8, [X26 + 0x10]
	0x03951B94 CBZ X8, 0x3951E08
	0x03951B98 LDR W9, [X8 + 0x18]
	0x03951B9C CMP X29, X9
	0x03951BA0 B.CS 0x3951E0C
	0x03951BA4 CBZ X22, 0x3951E08
	0x03951BA8 LDR W1, [X8, X27, LSL #2]
	0x03951BAC ADRP X8, 0x7FE000
	0x03951BB0 LDR X28, [X24 + 0x18]
	0x03951BB4 LDR X8, [X8 + 0x1D0]
	0x03951BB8 MOV X0, X22
	0x03951BBC LDR X2, [X8]
	0x03951BC0 BL 0x301BCCC
	0x03951BC4 CBZ X28, 0x3951E08
	0x03951BC8 ADRP X9, 0x7FE000
	0x03951BCC LDR W10, [X28 + 0x1C]
	0x03951BD0 LDR X8, [X28 + 0x10]
	0x03951BD4 LDR X9, [X9 + 0x1C0]
	0x03951BD8 ADD W10, W10, 0x1
	0x03951BDC LDR X9, [X9]
	0x03951BE0 STR W10, [X28 + 0x1C]
	0x03951BE4 CBZ X8, 0x3951E08
	0x03951BE8 LDRSW X10, [X28 + 0x18]
	0x03951BEC LDR W11, [X8 + 0x18]
	0x03951BF0 MOV X1, X0
	0x03951BF4 CMP W10, W11
	0x03951BF8 B.CS 0x3951C10
	0x03951BFC ADD W9, W10, 0x1
	0x03951C00 ADD X8, X8, X10, 0x3, LSL
	0x03951C04 STR W9, [X28 + 0x18]
	0x03951C08 STR X1, [X8 + 0x20]
	0x03951C0C B 0x3951C24
	0x03951C10 LDR X8, [X9 + 0x20]
	0x03951C14 MOV X0, X28
	0x03951C18 LDR X8, [X8 + 0xC0]
	0x03951C1C LDR X2, [X8 + 0x70]
	0x03951C20 BL 0x301BF90
	0x03951C24 LDR X8, [X26 + 0x10]
	0x03951C28 CBZ X8, 0x3951E08
	0x03951C2C LDR W9, [X8 + 0x18]
	0x03951C30 CMP X29, X9

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0xA91000
	015 Move X27, 0x7FF000
	016 Move W8, [X20+2452]
	017 Move X27, [X27+584]
	018 Move X19, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {80}
	024 Move X0, 0x7FF000
	025 Move X0, [X0+592]
	026 Call 0x1C17CF4
	027 Move X0, 0x7FE000
	028 Move X0, [X0+368]
	029 Call 0x1C17CF4
	030 Move X0, 0x7FF000
	031 Move X0, [X0+600]
	032 Call 0x1C17CF4
	033 Move X0, 0x7FF000
	034 Move X0, [X0+608]
	035 Call 0x1C17CF4
	036 Move X0, 0x7FF000
	037 Move X0, [X0+616]
	038 Call 0x1C17CF4
	039 Move X0, 0x7FF000
	040 Move X0, [X0+496]
	041 Call 0x1C17CF4
	042 Move X0, 0x7FE000
	043 Move X0, [X0+1376]
	044 Call 0x1C17CF4
	045 Move X0, 0x7FF000
	046 Move X0, [X0+624]
	047 Call 0x1C17CF4
	048 Move X0, 0x7FD000
	049 Move X0, [X0+3592]
	050 Call 0x1C17CF4
	051 Move X0, 0x7FF000
	052 Move X0, [X0+632]
	053 Call 0x1C17CF4
	054 Move X0, 0x7FF000
	055 Move X0, [X0+456]
	056 Call 0x1C17CF4
	057 Move X0, 0x7FF000
	058 Move X0, [X0+640]
	059 Call 0x1C17CF4
	060 Move X0, 0x7FF000
	061 Move X0, [X0+648]
	062 Call 0x1C17CF4
	063 Move X0, 0x7FD000
	064 Move X0, [X0+3560]
	065 Call 0x1C17CF4
	066 Move X0, 0x7FF000
	067 Move X0, [X0+656]
	068 Call 0x1C17CF4
	069 Move X0, 0x7FF000
	070 Move X0, [X0+664]
	071 Call 0x1C17CF4
	072 Move X0, 0x7FF000
	073 Move X0, [X0+584]
	074 Call 0x1C17CF4
	075 Move X0, 0x7FF000
	076 Move X0, [X0+672]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X20+2452], W8
	080 Move X0, [X27]
	081 Move [X31+32], X31
	082 Move [X31+40], X31
	083 Move [X31+16], X31
	084 Move [X31+24], X31
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X27]
	090 Move X8, [X0+184]
	091 Move X28, 0x7FF000
	092 Move X29, 0x7FE000
	093 Move X21, [X8+16]
	094 Move X28, [X28+592]
	095 Move X29, [X29+368]
	096 Compare X21, 0
	097 JumpIfNotEqual {119}
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X27]
	103 Move X8, [X0+184]
	104 Move X22, [X8]
	105 Move X8, 0x7FF000
	106 Move X8, [X8+624]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X8, 0x7FF000
	110 Move X8, [X8+656]
	111 Move X1, X22
	112 Move X3, X31
	113 Move X21, X0
	114 Move X2, [X8]
	115 Call Func`2<Object, Vector3>..ctor, X0, X1, X2
	116 Move X8, [X27]
	117 Move X8, [X8+184]
	118 Move [X8+16], X21
	119 Move X2, [X28]
	120 Move X0, X23
	121 Move X1, X21
	122 Call Enumerable.Select, X0, X1
	123 Move X1, [X29]
	124 Call Enumerable.ToArray, X0
	125 Compare X19, 0
	126 JumpIfEqual {279}
	127 Move [X31], X23
	128 Move [X31+8], X0
	129 Move X8, 0x7FF000
	130 Move X8, [X8+672]
	131 Move W1, [X19+24]
	132 Move X0, [X8]
	133 Call 0x1C17D6C
	134 Compare X0, 0
	135 JumpIfEqual {279}
	136 Move W8, [X0+24]
	137 Move X22, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X21, 0x7FF000
	140 Move X21, [X21+648]
	141 Move X23, X31
	142 Add X20, X22, 32
	143 Move X2, [X21]
	144 Move X0, X19
	145 Move W1, W23
	146 Call List`1<Object>.get_Item, X0, X1
	147 Move X8, [X27]
	148 Move X24, X0
	149 Move W9, [X8+224]
	150 Compare W9, 0
	151 JumpIfNotEqual {155}
	152 Move X0, X8
	153 Call 0x1C17DFC
	154 Move X8, [X27]
	155 Move X9, [X8+184]
	156 Move X25, [X9+24]
	157 Compare X25, 0
	158 JumpIfNotEqual {181}
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {165}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X8, [X27]
	165 Move X8, [X8+184]
	166 Move X26, [X8]
	167 Move X8, 0x7FF000
	168 Move X8, [X8+624]
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X8, 0x7FF000
	172 Move X8, [X8+664]
	173 Move X1, X26
	174 Move X3, X31
	175 Move X25, X0
	176 Move X2, [X8]
	177 Call Func`2<Object, Vector3>..ctor, X0, X1, X2
	178 Move X8, [X27]
	179 Move X8, [X8+184]
	180 Move [X8+24], X25
	181 Move X2, [X28]
	182 Move X0, X24
	183 Move X1, X25
	184 Call Enumerable.Select, X0, X1
	185 Move X1, [X29]
	186 Call Enumerable.ToArray, X0
	187 Move W8, [X22+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move [X20], X0
	190 Add X23, X23, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, [X31+8]
	193 Add X1, X31, 40
	194 Move X2, X22
	195 Move X3, X31
	196 Call Triangulation.TriangulateVertices, X0, X1, X2
	197 Move X22, X31
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfNotEqual {263}
	202 Move X8, 0x7FD000
	203 Move X8, [X8+3560]
	204 Move X0, [X8]
	205 Call 0x1C17F10
	206 Move X8, 0x7FF000
	207 Move X8, [X8+456]
	208 Move X21, X0
	209 Move X1, [X8]
	210 Call List`1<Object>..ctor, X0
	211 Compare X21, 0
	212 JumpIfEqual {279}
	213 Move X20, 0x7FD000
	214 Move X20, [X20+3592]
	215 Move X1, [X31]
	216 Move X0, X21
	217 Move X2, [X20]
	218 Call List`1<Object>.AddRange, X0, X1
	219 Move X8, 0x7FF000
	220 Move X8, [X8+632]
	221 Move X0, X19
	222 Move X1, [X8]
	223 Add X8, X31, 16
	224 Call List`1<Object>.GetEnumerator, X0
	225 Move X19, 0x7FF000
	226 Move X19, [X19+608]
	227 Move X1, [X19]
	228 Add X0, X31, 16
	229 Call Enumerator<Object>.MoveNext, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {238}
	234 Move X1, [X31+32]
	235 Move X2, [X20]
	236 Move X0, X21
	237 Call List`1<Object>.AddRange, X0, X1
	238 Move X8, 0x7FF000
	239 Move X8, [X8+600]
	240 Add X0, X31, 16
	241 Move X1, [X8]
	242 Call Enumerator<Object>.Dispose, X0
	243 Move X8, 0x7FF000
	244 Move X8, [X8+496]
	245 Move X0, [X8]
	246 Call 0x1C17F10
	247 Move X1, X31
	248 Move X22, X0
	249 Call FaceRebuildData..ctor, X0
	250 Compare X22, 0
	251 JumpIfEqual {279}
	252 Move [X22+24], X21
	253 Move X8, 0x7FE000
	254 Move X8, [X8+1376]
	255 Move X19, [X31+40]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X1, X19
	259 Move X2, X31
	260 Move X20, X0
	261 Call Face..ctor, X0, X1
	262 Move [X22+16], X20
	263 Move X0, X22
	264 Move X20, [X31+128]
	265 Move X19, [X31+136]
	266 Move X22, [X31+112]
	267 Move X21, [X31+120]
	268 Move X24, [X31+96]
	269 Move X23, [X31+104]
	270 Move X26, [X31+80]
	271 Move X25, [X31+88]
	272 Move X28, [X31+64]
	273 Move X27, [X31+72]
	274 Move X29, [X31+48]
	275 Move X30, [X31+56]
	276 Add X31, X31, 144
	277 Return X0
	278 Call 0x1C17F28
	279 Call 0x1C17F20
	280 Move X20, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X20
	283 Call 0x3EB2AD0
	284 Move X19, [X0]
	285 Call 0x3EB2AE0
	286 Move X8, 0x7FF000
	287 Move X8, [X8+600]
	288 Add X0, X31, 16
	289 Move X1, [X8]
	290 Call Enumerator<Object>.Dispose, X0
	291 Compare X19, 0
	292 JumpIfEqual {243}
	293 Move X0, X19
	294 Call 0x1C17F18
	295 Move X19, X31
	296 Move X20, X0
	297 Move X8, 0x7FF000
	298 Move X8, [X8+600]
	299 Move X1, [X8]
	300 Add X0, X31, 16
	301 Call Enumerator<Object>.Dispose, X0
	302 Compare X19, 0
	303 JumpIfNotEqual {306}
	304 Move X0, X20
	305 Call 0x1D2D690
	306 Move X0, X19
	307 Call 0x1C17F18
	308 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.FaceRebuildData> TentCapWithVertices(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> path)

Disassembly:
	0x03952E78 LDR V1, [X28]
	0x03952E7C SBFM X26, X21, 0x20, 0x3F
	0x03952E80 LDR V0, [X9]
	0x03952E84 STR S1, [X0 + 0x40]
	0x03952E88 STR D0, [X0 + 0x38]
	0x03952E8C LDR W9, [X20 + 0x18]
	0x03952E90 CMP W26, W9
	0x03952E94 B.CS 0x395349C
	0x03952E98 CMP W8, 0x3
	0x03952E9C STR X28, [X31 + 0x18]
	0x03952EA0 B.LS 0x395349C
	0x03952EA4 MOVZ W8, 0xC
	0x03952EA8 MADD X8, X26, X8, X20
	0x03952EAC ADD X28, X8, 0x20
	0x03952EB0 ADD X29, X8, 0x28
	0x03952EB4 LDR V0, [X28]
	0x03952EB8 LDR V1, [X29]
	0x03952EBC MOV X1, X31
	0x03952EC0 MOV V2.16B, V10.16B
	0x03952EC4 STUR D0, [X0 + 0x44]
	0x03952EC8 STR S1, [X0 + 0x4C]
	0x03952ECC MOV V0.16B, V8.16B
	0x03952ED0 MOV V1.16B, V9.16B
	0x03952ED4 MOV X2, X31
	0x03952ED8 BL 0x391FB78
	0x03952EDC ADRP X23, 0xA87000
	0x03952EE0 LDRB W8, [X23 + 0x78F]
	0x03952EE4 MOV X27, X0
	0x03952EE8 CBNZ W8, 0x3952F00
	0x03952EEC ADRP X0, 0x7A9000
	0x03952EF0 LDR X0, [X0 + 0xF08]
	0x03952EF4 BL 0x1C16CF4
	0x03952EF8 MOVZ W8, 0x1
	0x03952EFC STRB W8, [X23 + 0x78F]
	0x03952F00 ADRP X8, 0x7A9000
	0x03952F04 LDR X8, [X8 + 0xF08]
	0x03952F08 LDR X8, [X8]
	0x03952F0C LDR X8, [X8 + 0xB8]
	0x03952F10 LDR V0, [X8]
	0x03952F14 STR D0, [X31 + 0xC8]
	0x03952F18 CBZ X27, 0x3953498
	0x03952F1C LDR W8, [X27 + 0x18]
	0x03952F20 LDR X23, [X31 + 0x20]
	0x03952F24 CBZ W8, 0x395349C
	0x03952F28 CMP W8, 0x2
	0x03952F2C B.LS 0x395349C
	0x03952F30 CMP W8, 0x3
	0x03952F34 B.EQ 0x395349C
	0x03952F38 LDP S0, S1, [X27 + 0x20]
	0x03952F3C LDP S2, S3, [X27 + 0x30]
	0x03952F40 LDP S4, S5, [X27 + 0x28]
	0x03952F44 LDP S6, S7, [X27 + 0x38]
	0x03952F48 ADD X0, X31, 0xC8
	0x03952F4C MOV X1, X31
	0x03952F50 BL 0x39088D4
	0x03952F54 LDR W8, [X20 + 0x18]
	0x03952F58 TBZ X0, 0x0, 0x3953068
	0x03952F5C CMP W26, W8
	0x03952F60 B.CS 0x395349C
	0x03952F64 LDR W8, [X24 + 0x18]
	0x03952F68 CMP W8, 0x2
	0x03952F6C B.LS 0x395349C
	0x03952F70 LDR V0, [X28]
	0x03952F74 LDR V1, [X29]
	0x03952F78 LDR W29, [X31 + 0x34]
	0x03952F7C LDR X27, [X31 + 0x18]
	0x03952F80 STR D0, [X24 + 0x38]
	0x03952F84 STR S1, [X24 + 0x40]
	0x03952F88 TBZ X22, 0x0, 0x3952FBC
	0x03952F8C LDR X8, [X19 + 0x88]
	0x03952F90 CBZ X8, 0x3953498
	0x03952F94 LDR W9, [X8 + 0x18]
	0x03952F98 CMP W26, W9
	0x03952F9C B.CS 0x395349C
	0x03952FA0 CBZ X23, 0x3953498
	0x03952FA4 LDR W9, [X23 + 0x18]
	0x03952FA8 CMP W9, 0x2
	0x03952FAC B.LS 0x395349C
	0x03952FB0 ADD X8, X8, X26, 0x4, LSL
	0x03952FB4 LDR V0, [X8 + 0x2]
	0x03952FB8 STR V0, [X23 + 0x4]
	0x03952FBC MOV X0, X19
	0x03952FC0 LDR X1, [X31 + 0x38]
	0x03952FC4 MOV X2, X31
	0x03952FC8 BL 0x391B5D8
	0x03952FCC LDR W8, [X25 + 0x18]
	0x03952FD0 CMP W8, 0x2
	0x03952FD4 B.LS 0x395349C
	0x03952FD8 STR W0, [X25 + 0x28]
	0x03952FDC LDR W8, [X20 + 0x18]
	0x03952FE0 ADRP X26, 0x7A2000
	0x03952FE4 LDR X26, [X26 + 0xE58]
	0x03952FE8 CMP W21, W8
	0x03952FEC B.CS 0x395349C
	0x03952FF0 LDR W8, [X24 + 0x18]
	0x03952FF4 CMP W8, 0x3
	0x03952FF8 B.LS 0x395349C
	0x03952FFC LDR X8, [X31 + 0x28]
	0x03953000 LDR V1, [X27]
	0x03953004 LDR V0, [X8]
	0x03953008 STR S1, [X24 + 0x4C]
	0x0395300C STUR D0, [X24 + 0x44]
	0x03953010 TBZ X22, 0x0, 0x3953048
	0x03953014 LDR X8, [X19 + 0x88]
	0x03953018 CBZ X8, 0x3953498
	0x0395301C LDR W9, [X8 + 0x18]
	0x03953020 CMP W21, W9
	0x03953024 B.CS 0x395349C
	0x03953028 CBZ X23, 0x3953498
	0x0395302C LDR W9, [X23 + 0x18]
	0x03953030 CMP W9, 0x3
	0x03953034 B.LS 0x395349C
	0x03953038 LDR X9, [X31 + 0x10]
	0x0395303C ADD X8, X8, X9, 0x4, LSL
	0x03953040 LDR V0, [X8 + 0x2]
	0x03953044 STR V0, [X23 + 0x5]
	0x03953048 MOV X0, X19
	0x0395304C MOV W1, W21
	0x03953050 MOV X2, X31
	0x03953054 BL 0x391B5D8
	0x03953058 LDR W8, [X25 + 0x18]
	0x0395305C CMP W8, 0x3
	0x03953060 B.HI 0x3953170
	0x03953064 B 0x395349C
	0x03953068 CMP W21, W8
	0x0395306C B.CS 0x395349C
	0x03953070 LDR W8, [X24 + 0x18]
	0x03953074 CMP W8, 0x2
	0x03953078 B.LS 0x395349C
	0x0395307C LDR X8, [X31 + 0x28]
	0x03953080 LDR V0, [X8]
	0x03953084 LDR X8, [X31 + 0x18]
	0x03953088 LDR V1, [X8]
	0x0395308C STR D0, [X24 + 0x38]
	0x03953090 STR S1, [X24 + 0x40]
	0x03953094 TBZ X22, 0x0, 0x39530CC
	0x03953098 LDR X8, [X19 + 0x88]
	0x0395309C CBZ X8, 0x3953498
	0x039530A0 LDR W9, [X8 + 0x18]
	0x039530A4 CMP W21, W9
	0x039530A8 B.CS 0x395349C
	0x039530AC CBZ X23, 0x3953498
	0x039530B0 LDR W9, [X23 + 0x18]
	0x039530B4 CMP W9, 0x2
	0x039530B8 B.LS 0x395349C
	0x039530BC LDR X9, [X31 + 0x10]
	0x039530C0 ADD X8, X8, X9, 0x4, LSL
	0x039530C4 LDR V0, [X8 + 0x2]
	0x039530C8 STR V0, [X23 + 0x4]
	0x039530CC MOV X0, X19
	0x039530D0 MOV W1, W21
	0x039530D4 MOV X2, X31
	0x039530D8 BL 0x391B5D8
	0x039530DC LDR W8, [X25 + 0x18]
	0x039530E0 CMP W8, 0x2
	0x039530E4 B.LS 0x395349C
	0x039530E8 STR W0, [X25 + 0x28]
	0x039530EC LDR W8, [X20 + 0x18]
	0x039530F0 CMP W26, W8
	0x039530F4 B.CS 0x395349C
	0x039530F8 LDR W8, [X24 + 0x18]
	0x039530FC CMP W8, 0x3
	0x03953100 B.LS 0x395349C
	0x03953104 LDR V0, [X28]
	0x03953108 LDR V1, [X29]
	0x0395310C LDR W29, [X31 + 0x34]
	0x03953110 STUR D0, [X24 + 0x44]
	0x03953114 STR S1, [X24 + 0x4C]
	0x03953118 TBZ X22, 0x0, 0x395314C
	0x0395311C LDR X8, [X19 + 0x88]
	0x03953120 CBZ X8, 0x3953498
	0x03953124 LDR W9, [X8 + 0x18]
	0x03953128 CMP W26, W9
	0x0395312C B.CS 0x395349C
	0x03953130 CBZ X23, 0x3953498
	0x03953134 LDR W9, [X23 + 0x18]
	0x03953138 CMP W9, 0x3
	0x0395313C B.LS 0x395349C
	0x03953140 ADD X8, X8, X26, 0x4, LSL
	0x03953144 LDR V0, [X8 + 0x2]
	0x03953148 STR V0, [X23 + 0x5]
	0x0395314C MOV X0, X19
	0x03953150 LDR X1, [X31 + 0x38]
	0x03953154 MOV X2, X31
	0x03953158 BL 0x391B5D8
	0x0395315C LDR W8, [X25 + 0x18]
	0x03953160 CMP W8, 0x3
	0x03953164 B.LS 0x395349C
	0x03953168 ADRP X26, 0x7A1000
	0x0395316C LDR X26, [X26 + 0xE58]
	0x03953170 STR W0, [X25 + 0x2C]
	0x03953174 ADRP X8, 0x7FA000
	0x03953178 LDR X8, [X8 + 0xA88]
	0x0395317C LDR W1, [X24 + 0x18]
	0x03953180 ANDS W31, W22, 0x1
	0x03953184 CSEL X21, X23, X31, NE
	0x03953188 LDR X0, [X8]
	0x0395318C BL 0x1C16D6C
	0x03953190 ADRP X20, 0x7FB000
	0x03953194 LDR X20, [X20 + 0x48]
	0x03953198 LDR W1, [X24 + 0x18]
	0x0395319C MOV X22, X0
	0x039531A0 LDR X8, [X20]
	0x039531A4 MOV X0, X8
	0x039531A8 BL 0x1C16D6C
	0x039531AC LDR X8, [X20]
	0x039531B0 LDR W1, [X24 + 0x18]
	0x039531B4 MOV X23, X0
	0x039531B8 MOV X0, X8
	0x039531BC BL 0x1C16D6C
	0x039531C0 LDR X8, [X26]
	0x039531C4 MOV X27, X0
	0x039531C8 MOVZ W1, 0x6
	0x039531CC MOV X0, X8
	0x039531D0 BL 0x1C16D6C
	0x039531D4 ADRP X8, 0x7FC000
	0x039531D8 LDR X8, [X8 + 0x340]
	0x039531DC MOV X2, X31
	0x039531E0 MOV X28, X0
	0x039531E4 LDR X1, [X8]
	0x039531E8 BL 0x32C5BD8
	0x039531EC ADRP X8, 0x7FB000
	0x039531F0 LDP V0, V1, [X31 + 0xE0]
	0x039531F4 LDR X8, [X8 + 0x560]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xA90000
	014 Move W8, [X20+2453]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x7FE000
	021 Move X0, [X0+496]
	022 Call 0x1C17CF4
	023 Move X0, 0x7FD000
	024 Move X0, [X0+1376]
	025 Call 0x1C17CF4
	026 Move X0, 0x7A3000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move X0, 0x7FE000
	030 Move X0, [X0+776]
	031 Call 0x1C17CF4
	032 Move X0, 0x7FE000
	033 Move X0, [X0+448]
	034 Call 0x1C17CF4
	035 Move X0, 0x7FE000
	036 Move X0, [X0+456]
	037 Call 0x1C17CF4
	038 Move X0, 0x7FE000
	039 Move X0, [X0+784]
	040 Call 0x1C17CF4
	041 Move X0, 0x7FC000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0x7FE000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0x7FC000
	048 Move X0, [X0+3560]
	049 Call 0x1C17CF4
	050 Move X0, 0x7FE000
	051 Move X0, [X0+792]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2453], W8
	055 Compare X19, 0
	056 JumpIfEqual {236}
	057 Move X20, 0x7FE000
	058 Move X21, 0x7FE000
	059 Move W22, [X19+24]
	060 Move X20, [X20+792]
	061 Move X21, [X21+784]
	062 Move X0, X19
	063 Move X1, X31
	064 Move X2, X31
	065 Call Vertex.Average, X0, X1
	066 Move X8, [X20]
	067 Move X20, X0
	068 Move X0, X8
	069 Call 0x1C17F10
	070 Move X1, [X21]
	071 Move X21, X0
	072 Call List`1<Object>..ctor, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X27, 0x7FE000
	075 Move X28, 0x7FE000
	076 Move X27, [X27+464]
	077 Move X28, [X28+448]
	078 Subtract W25, W31, W22
	079 Move W29, 2
	080 Move W26, 1
	081 Move X8, 0x7FC000
	082 Move X8, [X8+3560]
	083 Subtract W23, W26, 1
	084 Move X0, [X8]
	085 Call 0x1C17F10
	086 Move X8, 0x7FE000
	087 Move X8, [X8+456]
	088 Move X22, X0
	089 Move X1, [X8]
	090 Call List`1<Object>..ctor, X0
	091 Move X2, [X27]
	092 Move X0, X19
	093 Move W1, W23
	094 Call List`1<Object>.get_Item, X0, X1
	095 Compare X22, 0
	096 JumpIfEqual {236}
	097 Move W8, [X22+28]
	098 Move X10, [X22+16]
	099 Move X9, [X28]
	100 Add W8, W8, 1
	101 Move [X22+28], W8
	102 Compare X10, 0
	103 JumpIfEqual {236}
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W12, [X10+24]
	106 Move X1, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W9, W11, 1
	109 Add X10, X10, X11
	110 Move [X22+24], W9
	111 Move [X10+32], X1
	112 Move X8, [X9+32]
	113 Move X0, X22
	114 Move X8, [X8+192]
	115 Move X2, [X8+112]
	116 Call List`1<Object>.AddWithResize, X0, X1
	117 Move W9, [X22+24]
	118 Move W8, [X22+28]
	119 Move X10, [X22+16]
	120 Move X11, [X28]
	121 Add W8, W8, 1
	122 Move [X22+28], W8
	123 Compare X10, 0
	124 JumpIfEqual {236}
	125 Move W8, [X10+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W8, W9, 1
	128 Add X9, X10, W9
	129 Move [X22+24], W8
	130 Move [X9+32], X20
	131 Move X8, [X11+32]
	132 Move X0, X22
	133 Move X1, X20
	134 Move X8, [X8+192]
	135 Move X2, [X8+112]
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Move X2, [X27]
	138 Add W31, W25, W26
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Move X0, X19
	141 Call List`1<Object>.get_Item, X0, X1
	142 Move W10, [X22+28]
	143 Move X8, [X22+16]
	144 Move X9, [X28]
	145 Add W10, W10, 1
	146 Move [X22+28], W10
	147 Compare X8, 0
	148 JumpIfEqual {236}
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Move W11, [X8+24]
	151 Move X1, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add W9, W10, 1
	154 Add X8, X8, X10
	155 Move [X22+24], W9
	156 Move [X8+32], X1
	157 Move X8, [X9+32]
	158 Move X0, X22
	159 Move X8, [X8+192]
	160 Move X2, [X8+112]
	161 Call List`1<Object>.AddWithResize, X0, X1
	162 Move X8, 0x7FD000
	163 Move X8, [X8+496]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X1, X31
	167 Move X23, X0
	168 Call FaceRebuildData..ctor, X0
	169 Compare X23, 0
	170 JumpIfEqual {236}
	171 Move [X23+24], X22
	172 Move X8, 0x7A2000
	173 Move X8, [X8+3672]
	174 Move W1, 3
	175 Move X0, [X8]
	176 Call 0x1C17D6C
	177 Compare X0, 0
	178 JumpIfEqual {236}
	179 Move W8, [X0+24]
	180 Move X22, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move W8, 1
	184 Move [X22+36], W8
	185 Move [X22+40], W29
	186 Move X8, 0x7FC000
	187 Move X8, [X8+1376]
	188 Move X0, [X8]
	189 Call 0x1C17F10
	190 Move X1, X22
	191 Move X2, X31
	192 Move X24, X0
	193 Call Face..ctor, X0, X1
	194 Move [X23+16], X24
	195 Compare X21, 0
	196 JumpIfEqual {236}
	197 Move X9, 0x7FD000
	198 Move W10, [X21+28]
	199 Move X8, [X21+16]
	200 Move X9, [X9+776]
	201 Add W10, W10, 1
	202 Move X9, [X9]
	203 Move [X21+28], W10
	204 Compare X8, 0
	205 JumpIfEqual {236}
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Move W11, [X8+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add W9, W10, 1
	210 Add X8, X8, X10
	211 Move [X21+24], W9
	212 Move [X8+32], X23
	213 Move X8, [X9+32]
	214 Move X0, X21
	215 Move X1, X23
	216 Move X8, [X8+192]
	217 Move X2, [X8+112]
	218 Call List`1<Object>.AddWithResize, X0, X1
	219 Add W26, W26, 1
	220 Add W8, W25, W26
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X21
	223 Move X20, [X31+80]
	224 Move X19, [X31+88]
	225 Move X22, [X31+64]
	226 Move X21, [X31+72]
	227 Move X24, [X31+48]
	228 Move X23, [X31+56]
	229 Move X26, [X31+32]
	230 Move X25, [X31+40]
	231 Move X28, [X31+16]
	232 Move X27, [X31+24]
	233 Move X29, [X31+96]
	234 Move X30, [X31+104]
	235 Return X0
	236 Call 0x1C17F20
	237 Call 0x1C17F28

Method: System.Void DuplicateAndFlip(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face[] faces)

Disassembly:
	0x0395280C LDR V0, [X9 + 0x20]
	0x03952810 LDR V1, [X9 + 0x28]
	0x03952814 STR D0, [X24 + 0x38]
	0x03952818 STR S1, [X24 + 0x40]
	0x0395281C TBZ X22, 0x0, 0x395284C
	0x03952820 CBZ X27, 0x3953498
	0x03952824 LDR W9, [X27 + 0x18]
	0x03952828 CMP W8, W9
	0x0395282C B.CS 0x395349C
	0x03952830 CBZ X25, 0x3953498
	0x03952834 LDR W9, [X25 + 0x18]
	0x03952838 CMP W9, 0x2
	0x0395283C B.LS 0x395349C
	0x03952840 ADD X8, X27, X8, 0x4, LSL
	0x03952844 LDR V0, [X8 + 0x2]
	0x03952848 STR V0, [X25 + 0x4]
	0x0395284C MOV X0, X19
	0x03952850 LDR X1, [X31 + 0x38]
	0x03952854 B 0x39529E8
	0x03952858 LDR W8, [X31 + 0x28]
	0x0395285C MOV W22, W28
	0x03952860 TBNZ X8, 0x1F, 0x3953288
	0x03952864 CBZ X20, 0x3953498
	0x03952868 LDRSW X8, [X31 + 0x108]
	0x0395286C LDR W9, [X20 + 0x18]
	0x03952870 MOV X28, X25
	0x03952874 LDR X25, [X31 + 0x20]
	0x03952878 CMP W8, W9
	0x0395287C B.CS 0x395349C
	0x03952880 CBZ X24, 0x3953498
	0x03952884 LDR W9, [X24 + 0x18]
	0x03952888 CBZ W9, 0x395349C
	0x0395288C MOVZ W9, 0xC
	0x03952890 MADD X8, X8, X9, X20
	0x03952894 LDR V0, [X8 + 0x20]
	0x03952898 LDR V1, [X8 + 0x28]
	0x0395289C STR D0, [X24 + 0x20]
	0x039528A0 STR S1, [X24 + 0x28]
	0x039528A4 TBZ X22, 0x0, 0x39528D4
	0x039528A8 CBZ X27, 0x3953498
	0x039528AC LDRSW X8, [X31 + 0x108]
	0x039528B0 LDR W9, [X27 + 0x18]
	0x039528B4 CMP W8, W9
	0x039528B8 B.CS 0x395349C
	0x039528BC CBZ X25, 0x3953498
	0x039528C0 LDR W9, [X25 + 0x18]
	0x039528C4 CBZ W9, 0x395349C
	0x039528C8 ADD X8, X27, X8, 0x4, LSL
	0x039528CC LDR V0, [X8 + 0x2]
	0x039528D0 STR V0, [X25 + 0x2]
	0x039528D4 LDR W1, [X31 + 0x108]
	0x039528D8 MOV X0, X19
	0x039528DC MOV X2, X31
	0x039528E0 BL 0x391B5D8
	0x039528E4 CBZ X28, 0x3953498
	0x039528E8 LDR W8, [X28 + 0x18]
	0x039528EC CBZ W8, 0x395349C
	0x039528F0 STR W0, [X28 + 0x20]
	0x039528F4 LDRSW X8, [X31 + 0x10C]
	0x039528F8 LDR W9, [X20 + 0x18]
	0x039528FC CMP W8, W9
	0x03952900 B.CS 0x395349C
	0x03952904 LDR W9, [X24 + 0x18]
	0x03952908 CMP W9, 0x1
	0x0395290C B.LS 0x395349C
	0x03952910 MOVZ W9, 0xC
	0x03952914 MADD X8, X8, X9, X20
	0x03952918 LDR V0, [X8 + 0x20]
	0x0395291C LDR V1, [X8 + 0x28]
	0x03952920 STUR D0, [X24 + 0x2C]
	0x03952924 STR S1, [X24 + 0x34]
	0x03952928 TBZ X22, 0x0, 0x395295C
	0x0395292C CBZ X27, 0x3953498
	0x03952930 LDRSW X8, [X31 + 0x10C]
	0x03952934 LDR W9, [X27 + 0x18]
	0x03952938 CMP W8, W9
	0x0395293C B.CS 0x395349C
	0x03952940 CBZ X25, 0x3953498
	0x03952944 LDR W9, [X25 + 0x18]
	0x03952948 CMP W9, 0x1
	0x0395294C B.LS 0x395349C
	0x03952950 ADD X8, X27, X8, 0x4, LSL
	0x03952954 LDR V0, [X8 + 0x2]
	0x03952958 STR V0, [X25 + 0x3]
	0x0395295C LDR W1, [X31 + 0x10C]
	0x03952960 MOV X0, X19
	0x03952964 MOV X2, X31
	0x03952968 BL 0x391B5D8
	0x0395296C LDR W8, [X28 + 0x18]
	0x03952970 CMP W8, 0x1
	0x03952974 B.LS 0x395349C
	0x03952978 STR W0, [X28 + 0x24]
	0x0395297C LDR W8, [X20 + 0x18]
	0x03952980 CMP W21, W8
	0x03952984 B.CS 0x395349C
	0x03952988 LDR W8, [X24 + 0x18]
	0x0395298C CMP W8, 0x2
	0x03952990 B.LS 0x395349C
	0x03952994 SXTW X8, W21
	0x03952998 MOVZ W9, 0xC
	0x0395299C MADD X9, X8, X9, X20
	0x039529A0 LDR V0, [X9 + 0x20]
	0x039529A4 LDR V1, [X9 + 0x28]
	0x039529A8 STR D0, [X24 + 0x38]
	0x039529AC STR S1, [X24 + 0x40]
	0x039529B0 TBZ X22, 0x0, 0x39529E0
	0x039529B4 CBZ X27, 0x3953498
	0x039529B8 LDR W9, [X27 + 0x18]
	0x039529BC CMP W21, W9
	0x039529C0 B.CS 0x395349C
	0x039529C4 CBZ X25, 0x3953498
	0x039529C8 LDR W9, [X25 + 0x18]
	0x039529CC CMP W9, 0x2
	0x039529D0 B.LS 0x395349C
	0x039529D4 ADD X8, X27, X8, 0x4, LSL
	0x039529D8 LDR V0, [X8 + 0x2]
	0x039529DC STR V0, [X25 + 0x4]
	0x039529E0 MOV X0, X19
	0x039529E4 MOV W1, W21
	0x039529E8 MOV X2, X31
	0x039529EC BL 0x391B5D8
	0x039529F0 LDR W8, [X28 + 0x18]
	0x039529F4 CMP W8, 0x2
	0x039529F8 B.LS 0x395349C
	0x039529FC ANDS W31, W22, 0x1
	0x03952A00 STR W0, [X28 + 0x28]
	0x03952A04 CSEL X21, X25, X31, NE
	0x03952A08 ADRP X8, 0x7FB000
	0x03952A0C LDR X8, [X8 + 0xA88]
	0x03952A10 LDR W1, [X24 + 0x18]
	0x03952A14 LDR X0, [X8]
	0x03952A18 BL 0x1C16D6C
	0x03952A1C ADRP X20, 0x7FC000
	0x03952A20 LDR X20, [X20 + 0x48]
	0x03952A24 LDR W1, [X24 + 0x18]
	0x03952A28 MOV X22, X0
	0x03952A2C LDR X8, [X20]
	0x03952A30 MOV X0, X8
	0x03952A34 BL 0x1C16D6C
	0x03952A38 LDR X8, [X20]
	0x03952A3C LDR W1, [X24 + 0x18]
	0x03952A40 MOV X23, X0
	0x03952A44 MOV X0, X8
	0x03952A48 BL 0x1C16D6C
	0x03952A4C ADRP X8, 0x7A2000
	0x03952A50 LDR X8, [X8 + 0xE58]
	0x03952A54 MOV X27, X0
	0x03952A58 MOVZ W1, 0x3
	0x03952A5C LDR X8, [X8]
	0x03952A60 MOV X0, X8
	0x03952A64 BL 0x1C16D6C
	0x03952A68 CBZ X0, 0x3953498
	0x03952A6C LDR W9, [X31 + 0x28]
	0x03952A70 LDR W8, [X0 + 0x18]
	0x03952A74 MOV X29, X0
	0x03952A78 ANDS W31, W9, W26, 0x0
	0x03952A7C B.LT 0x3952AA0
	0x03952A80 CBZ W8, 0x395349C
	0x03952A84 MOVZ W9, 0x2
	0x03952A88 CMP W8, 0x1
	0x03952A8C STR W9, [X29 + 0x20]
	0x03952A90 B.EQ 0x395349C
	0x03952A94 MOVZ W8, 0x1
	0x03952A98 STR W8, [X29 + 0x24]
	0x03952A9C B 0x3952AC0
	0x03952AA0 CMP W8, 0x1
	0x03952AA4 B.LS 0x395349C
	0x03952AA8 MOVZ W9, 0x1
	0x03952AAC CMP W8, 0x2
	0x03952AB0 STR W9, [X29 + 0x24]
	0x03952AB4 B.EQ 0x395349C
	0x03952AB8 MOVZ W8, 0x2
	0x03952ABC STR W8, [X29 + 0x28]
	0x03952AC0 ADRP X8, 0x7FC000
	0x03952AC4 LDP V0, V1, [X31 + 0xE0]
	0x03952AC8 LDR X8, [X8 + 0x560]
	0x03952ACC STP V0, V1, [X31 + 0xA0]
	0x03952AD0 LDR X0, [X8]
	0x03952AD4 BL 0x1C16F10
	0x03952AD8 LDP V0, V1, [X31 + 0xA0]
	0x03952ADC LDR W2, [X31 + 0x34]
	0x03952AE0 ADD X3, X31, 0x60
	0x03952AE4 MOVN W5, 0x0
	0x03952AE8 MOVN W6, 0x0
	0x03952AEC MOV X1, X29
	0x03952AF0 MOV W4, W31
	0x03952AF4 MOV W7, W31
	0x03952AF8 MOV X26, X0
	0x03952AFC STP V0, V1, [X31 + 0x60]
	0x03952B00 STR X31, [X31]
	0x03952B04 BL 0x39004D4
	0x03952B08 MOV X0, X19
	0x03952B0C MOV X1, X24
	0x03952B10 MOV X2, X21
	0x03952B14 MOV X3, X22
	0x03952B18 MOV X4, X23
	0x03952B1C MOV X5, X27
	0x03952B20 MOV X6, X26
	0x03952B24 MOV X7, X28
	0x03952B28 B 0x3953254
	0x03952B2C ADRP X27, 0x7A3000
	0x03952B30 LDR X27, [X27 + 0x9B0]
	0x03952B34 MOVZ W1, 0x4
	0x03952B38 LDR X0, [X27]
	0x03952B3C BL 0x1C16D6C
	0x03952B40 ADRP X8, 0x7A6000
	0x03952B44 LDR X8, [X8 + 0x140]
	0x03952B48 MOV X24, X0
	0x03952B4C MOVZ W1, 0x4
	0x03952B50 LDR X8, [X8]
	0x03952B54 MOV X0, X8
	0x03952B58 BL 0x1C16D6C
	0x03952B5C ADRP X8, 0x7A2000
	0x03952B60 LDR X8, [X8 + 0xE58]
	0x03952B64 MOV X23, X0
	0x03952B68 MOVZ W1, 0x4
	0x03952B6C LDR X8, [X8]
	0x03952B70 MOV X0, X8
	0x03952B74 BL 0x1C16D6C
	0x03952B78 CBZ X20, 0x3953498
	0x03952B7C LDRSW X8, [X31 + 0x108]
	0x03952B80 LDR W9, [X20 + 0x18]
	0x03952B84 CMP W8, W9
	0x03952B88 B.CS 0x395349C
	0x03952B8C CBZ X24, 0x3953498
	0x03952B90 LDR W9, [X24 + 0x18]
	0x03952B94 CBZ W9, 0x395349C
	0x03952B98 MOVZ W9, 0xC
	0x03952B9C MADD X8, X8, X9, X20
	0x03952BA0 LDR V0, [X8 + 0x20]
	0x03952BA4 LDR V1, [X8 + 0x28]
	0x03952BA8 MOV X25, X0
	0x03952BAC STR D0, [X24 + 0x20]
	0x03952BB0 STR S1, [X24 + 0x28]
	0x03952BB4 TBZ X22, 0x0, 0x3952BE8
	0x03952BB8 LDR X8, [X19 + 0x88]
	0x03952BBC CBZ X8, 0x3953498
	0x03952BC0 LDRSW X9, [X31 + 0x108]
	0x03952BC4 LDR W10, [X8 + 0x18]
	0x03952BC8 CMP W9, W10
	0x03952BCC B.CS 0x395349C
	0x03952BD0 CBZ X23, 0x3953498
	0x03952BD4 LDR W10, [X23 + 0x18]
	0x03952BD8 CBZ W10, 0x395349C
	0x03952BDC ADD X8, X8, X9, 0x4, LSL
	0x03952BE0 LDR V0, [X8 + 0x2]
	0x03952BE4 STR V0, [X23 + 0x2]
	0x03952BE8 LDR W1, [X31 + 0x108]
	0x03952BEC MOV X0, X19
	0x03952BF0 MOV X2, X31
	0x03952BF4 BL 0x391B5D8
	0x03952BF8 CBZ X25, 0x3953498
	0x03952BFC LDR W8, [X25 + 0x18]
	0x03952C00 CBZ W8, 0x395349C
	0x03952C04 STR W0, [X25 + 0x20]
	0x03952C08 LDRSW X8, [X31 + 0x10C]
	0x03952C0C LDR W9, [X20 + 0x18]
	0x03952C10 CMP W8, W9
	0x03952C14 B.CS 0x395349C
	0x03952C18 LDR W9, [X24 + 0x18]
	0x03952C1C CMP W9, 0x1
	0x03952C20 B.LS 0x395349C
	0x03952C24 MOVZ W9, 0xC
	0x03952C28 MADD X8, X8, X9, X20
	0x03952C2C LDR V0, [X8 + 0x20]
	0x03952C30 LDR V1, [X8 + 0x28]
	0x03952C34 STUR D0, [X24 + 0x2C]
	0x03952C38 STR S1, [X24 + 0x34]
	0x03952C3C TBZ X22, 0x0, 0x3952C74
	0x03952C40 LDR X8, [X19 + 0x88]
	0x03952C44 CBZ X8, 0x3953498
	0x03952C48 LDRSW X9, [X31 + 0x10C]
	0x03952C4C LDR W10, [X8 + 0x18]
	0x03952C50 CMP W9, W10
	0x03952C54 B.CS 0x395349C
	0x03952C58 CBZ X23, 0x3953498
	0x03952C5C LDR W10, [X23 + 0x18]
	0x03952C60 CMP W10, 0x1
	0x03952C64 B.LS 0x395349C
	0x03952C68 ADD X8, X8, X9, 0x4, LSL
	0x03952C6C LDR V0, [X8 + 0x2]
	0x03952C70 STR V0, [X23 + 0x3]
	0x03952C74 LDR W1, [X31 + 0x10C]
	0x03952C78 MOV X0, X19
	0x03952C7C MOV X2, X31
	0x03952C80 BL 0x391B5D8
	0x03952C84 LDR W8, [X25 + 0x18]
	0x03952C88 CMP W8, 0x1
	0x03952C8C B.LS 0x395349C
	0x03952C90 STR W0, [X25 + 0x24]
	0x03952C94 LDR W10, [X20 + 0x18]
	0x03952C98 CMP W21, W10
	0x03952C9C B.CS 0x395349C
	0x03952CA0 LDRSW X8, [X31 + 0x108]
	0x03952CA4 CMP W8, W10
	0x03952CA8 B.CS 0x395349C
	0x03952CAC LDRSW X9, [X31 + 0x10C]
	0x03952CB0 STR X23, [X31 + 0x20]
	0x03952CB4 CMP W9, W10
	0x03952CB8 B.CS 0x395349C
	0x03952CBC SXTW X26, W21
	0x03952CC0 MOVZ W10, 0xC
	0x03952CC4 MOVZ W11, 0xC
	0x03952CC8 ADD X12, X20, 0x20
	0x03952CCC MOVZ W13, 0xC
	0x03952CD0 MADD X10, X26, X10, X20
	0x03952CD4 MADD X8, X8, X11, X12
	0x03952CD8 MADD X11, X26, X11, X12
	0x03952CDC MADD X9, X9, X13, X20
	0x03952CE0 ADD X13, X10, 0x20
	0x03952CE4 ADD X28, X10, 0x28
	0x03952CE8 LDR V0, [X11 + 0x4]
	0x03952CEC LDP S1, S2, [X8]
	0x03952CF0 LDR V3, [X8 + 0x8]
	0x03952CF4 LDP S4, S5, [X9 + 0x20]
	0x03952CF8 LDR V6, [X9 + 0x28]
	0x03952CFC LDR V7, [X28]
	0x03952D00 LDR V16, [X13]
	0x03952D04 ADRP X23, 0xA86000
	0x03952D08 LDRB W12, [X23 + 0x785]
	0x03952D0C FSUB S0, S0, S2
	0x03952D10 FSUB S4, S4, S1
	0x03952D14 FSUB S2, S5, S2
	0x03952D18 FSUB S5, S6, S3
	0x03952D1C FSUB S1, S16, S1
	0x03952D20 FSUB S3, S7, S3
	0x03952D24 FMUL S8, S0, S5
	0x03952D28 FMUL S9, S3, S2
	0x03952D2C FMUL S10, S3, S4
	0x03952D30 FMUL S11, S1, S5
	0x03952D34 FMUL S12, S1, S2
	0x03952D38 FMUL S13, S0, S4
	0x03952D3C STR X13, [X31 + 0x28]
	0x03952D40 CBNZ W12, 0x3952D58
	0x03952D44 ADRP X0, 0x7A1000
	0x03952D48 LDR X0, [X0 + 0x5A8]
	0x03952D4C BL 0x1C16CF4
	0x03952D50 MOVZ W8, 0x1
	0x03952D54 STRB W8, [X23 + 0x785]
	0x03952D58 ADRP X8, 0x7A1000
	0x03952D5C LDR X8, [X8 + 0x5A8]
	0x03952D60 FSUB S8, S8, S9
	0x03952D64 FSUB S9, S10, S11
	0x03952D68 FSUB S10, S12, S13
	0x03952D6C LDR X0, [X8]
	0x03952D70 LDR W8, [X0 + 0xE0]
	0x03952D74 CBNZ W8, 0x3952D7C
	0x03952D78 BL 0x1C16DFC
	0x03952D7C FMUL S0, S8, S8
	0x03952D80 FMUL S1, S9, S9
	0x03952D84 ADRP X8, 0xFFFFFFFFFD198000
	0x03952D88 FADD S0, S0, S1
	0x03952D8C LDR V1, [X8 + 0x17C]
	0x03952D90 FMUL S2, S10, S10
	0x03952D94 FADD S0, S2, S0
	0x03952D98 FSQRT S0, S0
	0x03952D9C FCMP S0, S1
	0x03952DA0 B.LE 0x3952DB4
	0x03952DA4 FDIV S8, S8, S0
	0x03952DA8 FDIV S9, S9, S0
	0x03952DAC FDIV S10, S10, S0
	0x03952DB0 B 0x3952DEC
	0x03952DB4 ADRP X23, 0xA86000
	0x03952DB8 LDRB W8, [X23 + 0x783]
	0x03952DBC CBNZ W8, 0x3952DD4
	0x03952DC0 ADRP X0, 0x7A1000
	0x03952DC4 LDR X0, [X0 + 0x5A0]
	0x03952DC8 BL 0x1C16CF4
	0x03952DCC MOVZ W8, 0x1
	0x03952DD0 STRB W8, [X23 + 0x783]
	0x03952DD4 ADRP X8, 0x7A1000
	0x03952DD8 LDR X8, [X8 + 0x5A0]
	0x03952DDC LDR X8, [X8]
	0x03952DE0 LDR X8, [X8 + 0xB8]
	0x03952DE4 LDP S8, S9, [X8]
	0x03952DE8 LDR V10, [X8 + 0x8]
	0x03952DEC LDR X0, [X27]
	0x03952DF0 MOVZ W1, 0x4
	0x03952DF4 BL 0x1C16D6C
	0x03952DF8 LDRSW X9, [X31 + 0x108]
	0x03952DFC LDR W8, [X20 + 0x18]
	0x03952E00 CMP W9, W8
	0x03952E04 B.CS 0x395349C
	0x03952E08 CBZ X0, 0x3953498
	0x03952E0C LDR W8, [X0 + 0x18]
	0x03952E10 CBZ W8, 0x395349C
	0x03952E14 MOVZ W10, 0xC
	0x03952E18 MADD X9, X9, X10, X20
	0x03952E1C LDR V0, [X9 + 0x20]
	0x03952E20 LDR V1, [X9 + 0x28]
	0x03952E24 STR D0, [X0 + 0x20]
	0x03952E28 STR S1, [X0 + 0x28]
	0x03952E2C LDRSW X9, [X31 + 0x10C]
	0x03952E30 LDR W10, [X20 + 0x18]
	0x03952E34 CMP W9, W10
	0x03952E38 B.CS 0x395349C
	0x03952E3C CMP W8, 0x1
	0x03952E40 B.LS 0x395349C
	0x03952E44 MOVZ W10, 0xC
	0x03952E48 MADD X9, X9, X10, X20
	0x03952E4C LDR V0, [X9 + 0x20]
	0x03952E50 LDR V1, [X9 + 0x28]
	0x03952E54 STUR D0, [X0 + 0x2C]
	0x03952E58 STR S1, [X0 + 0x34]
	0x03952E5C LDR W9, [X20 + 0x18]
	0x03952E60 CMP W21, W9
	0x03952E64 B.CS 0x395349C
	0x03952E68 CMP W8, 0x2
	0x03952E6C STR X26, [X31 + 0x10]
	0x03952E70 B.LS 0x395349C
	0x03952E74 LDR X9, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xA90000
	015 Move X20, 0x7A2000
	016 Move W8, [X19+2454]
	017 Move X20, [X20+1432]
	018 Move X24, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {89}
	024 Move X0, 0x7AC000
	025 Move X0, [X0+2136]
	026 Call 0x1C17CF4
	027 Move X0, 0x7FD000
	028 Move X0, [X0+3336]
	029 Call 0x1C17CF4
	030 Move X0, 0x7AC000
	031 Move X0, [X0+2192]
	032 Call 0x1C17CF4
	033 Move X0, 0x7FD000
	034 Move X0, [X0+3448]
	035 Call 0x1C17CF4
	036 Move X0, 0x7FC000
	037 Move X0, [X0+3200]
	038 Call 0x1C17CF4
	039 Move X0, 0x7AC000
	040 Move X0, [X0+2184]
	041 Call 0x1C17CF4
	042 Move X0, 0x7FE000
	043 Move X0, [X0+496]
	044 Call 0x1C17CF4
	045 Move X0, 0x7FD000
	046 Move X0, [X0+1376]
	047 Call 0x1C17CF4
	048 Move X0, 0x7A3000
	049 Move X0, [X0+3672]
	050 Call 0x1C17CF4
	051 Move X0, 0x7A3000
	052 Move X0, [X0+3600]
	053 Call 0x1C17CF4
	054 Move X0, 0x7FE000
	055 Move X0, [X0+776]
	056 Call 0x1C17CF4
	057 Move X0, 0x7FE000
	058 Move X0, [X0+448]
	059 Call 0x1C17CF4
	060 Move X0, 0x7A6000
	061 Move X0, [X0+2928]
	062 Call 0x1C17CF4
	063 Move X0, 0x7FC000
	064 Move X0, [X0+3552]
	065 Call 0x1C17CF4
	066 Move X0, 0x7FE000
	067 Move X0, [X0+456]
	068 Call 0x1C17CF4
	069 Move X0, 0x7FE000
	070 Move X0, [X0+784]
	071 Call 0x1C17CF4
	072 Move X0, 0x7FE000
	073 Move X0, [X0+464]
	074 Call 0x1C17CF4
	075 Move X0, 0x7A3000
	076 Move X0, [X0+3632]
	077 Call 0x1C17CF4
	078 Move X0, 0x7FC000
	079 Move X0, [X0+3560]
	080 Call 0x1C17CF4
	081 Move X0, 0x7FE000
	082 Move X0, [X0+792]
	083 Call 0x1C17CF4
	084 Move X0, 0x7A2000
	085 Move X0, [X0+1432]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+2454], W8
	089 Move X0, [X20]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X21
	095 Move X1, X31
	096 Move X2, X31
	097 Call Object.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {415}
	102 Compare X24, 0
	103 JumpIfEqual {422}
	104 Move X8, 0x7FE000
	105 Move X8, [X8+792]
	106 Move X19, 0x7FE000
	107 Move X0, [X8]
	108 Move X19, [X19+784]
	109 Call 0x1C17F10
	110 Move X1, [X19]
	111 Move X25, X0
	112 Call List`1<Object>..ctor, X0
	113 Compare X21, 0
	114 JumpIfEqual {413}
	115 Move X20, 0x7FC000
	116 Move X19, 0x7FC000
	117 Move X20, [X20+3560]
	118 Move X19, [X19+3552]
	119 Move X0, X21
	120 Move X1, X31
	121 Move X2, X31
	122 Call ProBuilderMesh.GetVertices, X0, X1
	123 Move X8, [X20]
	124 Move X23, X0
	125 Move X0, X8
	126 Call 0x1C17F10
	127 Move X2, [X19]
	128 Move X1, X23
	129 Move X22, X0
	130 Call List`1<Object>..ctor, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Move [X31], X21
	134 Call ProBuilderMesh.get_sharedVertexLookup, X0
	135 Move X8, [X24+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X20, 0x7FC000
	138 Move X20, [X20+3200]
	139 Move X23, X0
	140 Move X19, X31
	141 And X8, X8, 0
	142 Move [X31+8], X24
	143 Move [X31+16], X25
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X8, X24, X19
	146 Move X26, [X8+32]
	147 Move X8, 0x7FE000
	148 Move X8, [X8+496]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X1, X31
	152 Move X24, X0
	153 Call FaceRebuildData..ctor, X0
	154 Move X8, 0x7FC000
	155 Move X8, [X8+3560]
	156 Move X0, [X8]
	157 Call 0x1C17F10
	158 Move X8, 0x7FE000
	159 Move X8, [X8+456]
	160 Move X25, X0
	161 Move X1, [X8]
	162 Call List`1<Object>..ctor, X0
	163 Compare X24, 0
	164 JumpIfEqual {413}
	165 Move [X24+24], X25
	166 Move X8, 0x7FD000
	167 Move X8, [X8+1376]
	168 Move X0, [X8]
	169 Call 0x1C17F10
	170 Move X1, X26
	171 Move X2, X31
	172 Move X25, X0
	173 Call Face..ctor, X0, X1
	174 Move [X24+16], X25
	175 Move X8, 0x7A3000
	176 Move X8, [X8+3632]
	177 Move X0, [X8]
	178 Call 0x1C17F10
	179 Move X8, 0x7A6000
	180 Move X8, [X8+2928]
	181 Move X25, X0
	182 Move X1, [X8]
	183 Call List`1<Int32>..ctor, X0
	184 Move [X24+32], X25
	185 Move X8, 0x7AC000
	186 Move X8, [X8+2184]
	187 Move X0, [X8]
	188 Call 0x1C17F10
	189 Move X8, 0x7AC000
	190 Move X8, [X8+2192]
	191 Move X25, X0
	192 Move X1, [X8]
	193 Call Dictionary`2<Int32, Int32>..ctor, X0
	194 Move X8, [X24+16]
	195 Compare X8, 0
	196 JumpIfEqual {413}
	197 Move X8, [X8+16]
	198 Move [X31+24], X19
	199 Compare X8, 0
	200 JumpIfEqual {413}
	201 Move X8, [X8+24]
	202 Subtract W21, W8, 1
	203 Move [X31+32], X8
	204 And X8, X8, 0
	205 Move [X31+40], X8
	206 Compare X26, 0
	207 JumpIfEqual {413}
	208 Move X8, [X31+40]
	209 Move W27, 8
	210 Subtract X19, X31, X8
	211 Move X8, [X26+16]
	212 Compare X8, 0
	213 JumpIfEqual {413}
	214 Move W9, [X8+24]
	215 Subtract X29, X27, 8
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Compare X25, 0
	218 JumpIfEqual {413}
	219 Move W1, [X8]
	220 Move X8, 0x7FD000
	221 Move X8, [X8+3336]
	222 Move X0, X25
	223 Move X2, [X8]
	224 Call Dictionary`2<Int32, Int32>.ContainsKey, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {321}
	229 Move X8, [X26+16]
	230 Compare X8, 0
	231 JumpIfEqual {413}
	232 Move W9, [X8+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W28, [X8]
	235 Move X8, 0x7FD000
	236 Move X8, [X8+3448]
	237 Move X0, X25
	238 Move X1, [X8]
	239 Call Dictionary`2<Int32, Int32>.get_Count, X0
	240 Move X8, 0x7AC000
	241 Move X8, [X8+2136]
	242 Move W2, W0
	243 Move X0, X25
	244 Move W1, W28
	245 Move X3, [X8]
	246 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	247 Move X8, [X26+16]
	248 Compare X8, 0
	249 JumpIfEqual {413}
	250 Move W9, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Compare X22, 0
	253 JumpIfEqual {413}
	254 Move W1, [X8]
	255 Move X8, 0x7FE000
	256 Move X28, [X24+24]
	257 Move X8, [X8+464]
	258 Move X0, X22
	259 Move X2, [X8]
	260 Call List`1<Object>.get_Item, X0, X1
	261 Compare X28, 0
	262 JumpIfEqual {413}
	263 Move X9, 0x7FE000
	264 Move W10, [X28+28]
	265 Move X8, [X28+16]
	266 Move X9, [X9+448]
	267 Add W10, W10, 1
	268 Move X9, [X9]
	269 Move [X28+28], W10
	270 Compare X8, 0
	271 JumpIfEqual {413}
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Move W11, [X8+24]
	274 Move X1, X0
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add W9, W10, 1
	277 Add X8, X8, X10
	278 Move [X28+24], W9
	279 Move [X8+32], X1
	280 Move X8, [X9+32]
	281 Move X0, X28
	282 Move X8, [X8+192]
	283 Move X2, [X8+112]
	284 Call List`1<Object>.AddWithResize, X0, X1
	285 Move X8, [X26+16]
	286 Compare X8, 0
	287 JumpIfEqual {413}
	288 Move W9, [X8+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Compare X23, 0
	291 JumpIfEqual {413}
	292 Move W1, [X8]
	293 Move X2, [X20]
	294 Move X28, [X24+32]
	295 Move X0, X23
	296 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	297 Compare X28, 0
	298 JumpIfEqual {413}
	299 Move X9, 0x7A3000
	300 Move W10, [X28+28]
	301 Move X8, [X28+16]
	302 Move X9, [X9+3600]
	303 Add W10, W10, 1
	304 Move X9, [X9]
	305 Move [X28+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {413}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 Move W1, W0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Add W9, W10, 1
	313 Add X8, X8, X10
	314 Move [X28+24], W9
	315 Move [X8+32], W1
	316 Move X8, [X9+32]
	317 Move X0, X28
	318 Move X8, [X8+192]
	319 Move X2, [X8+112]
	320 Call List`1<Int32>.AddWithResize, X0, X1
	321 Add X27, X27, 1
	322 Add X8, X19, X27
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X8, 0x7A3000
	325 Move X8, [X8+3672]
	326 Move X19, [X31+32]
	327 Move X0, [X8]
	328 Move W1, W19
	329 Call 0x1C17D6C
	330 Move X8, [X24+16]
	331 Compare X8, 0
	332 JumpIfEqual {413}
	333 Move X9, [X31+40]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X26, X0
	336 Move X28, X31
	337 NotImplemented "Instruction CSEL not yet implemented."
	338 Move X0, X8
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move W1, W28
	341 Move X2, X31
	342 Call Face.get_Item, X0, X1
	343 Compare X25, 0
	344 JumpIfEqual {413}
	345 Move X2, [X20]
	346 Move W1, W0
	347 Move X0, X25
	348 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	349 Compare X26, 0
	350 JumpIfEqual {413}
	351 Move W8, [X26+24]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Add X8, X26, W21
	354 Move [X8+32], W0
	355 Move X8, [X24+16]
	356 Add X28, X28, 1
	357 Subtract W21, W21, 1
	358 Compare X8, 0
	359 JumpIfNotEqual {338}
	360 Move X1, X26
	361 Move X2, X31
	362 Call Face.SetIndexes, X0, X1
	363 Move X25, [X31+16]
	364 Compare X25, 0
	365 JumpIfEqual {413}
	366 Move X9, 0x7FE000
	367 Move W10, [X25+28]
	368 Move X8, [X25+16]
	369 Move X9, [X9+776]
	370 Move X19, [X31+24]
	371 Add W10, W10, 1
	372 Move X9, [X9]
	373 Move [X25+28], W10
	374 Compare X8, 0
	375 JumpIfEqual {413}
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 Move W11, [X8+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Add W9, W10, 1
	380 Add X8, X8, X10
	381 Move [X25+24], W9
	382 Move [X8+32], X24
	383 Move X8, [X9+32]
	384 Move X0, X25
	385 Move X1, X24
	386 Move X8, [X8+192]
	387 Move X2, [X8+112]
	388 Call List`1<Object>.AddWithResize, X0, X1
	389 Move X24, [X31+8]
	390 Add X19, X19, 1
	391 Move W8, [X24+24]
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, X25
	394 Move X1, [X31]
	395 Move X2, X22
	396 Move X20, [X31+128]
	397 Move X19, [X31+136]
	398 Move X22, [X31+112]
	399 Move X21, [X31+120]
	400 Move X24, [X31+96]
	401 Move X23, [X31+104]
	402 Move X26, [X31+80]
	403 Move X25, [X31+88]
	404 Move X28, [X31+64]
	405 Move X27, [X31+72]
	406 Move X29, [X31+48]
	407 Move X30, [X31+56]
	408 Move X3, X31
	409 Move X4, X31
	410 Add X31, X31, 144
	411 Call FaceRebuildData.Apply, X0, X1, X2, X3
	412 Return 
	413 Call 0x1C17F20
	414 Call 0x1C17F28
	415 Move X0, 0x7A7000
	416 Move X0, [X0+1320]
	417 Call 0x1C17D08
	418 Call 0x1C17F10
	419 Move X19, X0
	420 Move X0, 0x7FC000
	421 Move X0, [X0+3728]
	422 Move X0, 0x7A7000
	423 Move X0, [X0+1320]
	424 Call 0x1C17D08
	425 Call 0x1C17F10
	426 Move X19, X0
	427 Move X0, 0x7FD000
	428 Move X0, [X0+1600]
	429 Call 0x1C17D08
	430 Move X1, X0
	431 Move X0, X19
	432 Move X2, X31
	433 Call ArgumentNullException..ctor, X0, X1
	434 Move X0, 0x7FE000
	435 Move X0, [X0+800]
	436 Call 0x1C17D08
	437 Move X1, X0
	438 Move X0, X19
	439 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Face Bridge(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge a, UnityEngine.ProBuilder.Edge b, System.Boolean allowNonManifoldGeometry = False)

Disassembly:
	0x039531F8 STP V0, V1, [X31 + 0xA0]
	0x039531FC LDR X0, [X8]
	0x03953200 BL 0x1C16F10
	0x03953204 LDP V0, V1, [X31 + 0xA0]
	0x03953208 ADD X3, X31, 0x40
	0x0395320C MOVN W5, 0x0
	0x03953210 MOVN W6, 0x0
	0x03953214 MOV X1, X28
	0x03953218 MOV W2, W29
	0x0395321C MOV W4, W31
	0x03953220 MOV W7, W31
	0x03953224 MOV X26, X0
	0x03953228 STP V0, V1, [X31 + 0x40]
	0x0395322C STR X31, [X31]
	0x03953230 BL 0x39004D4
	0x03953234 MOV X0, X19
	0x03953238 MOV X1, X24
	0x0395323C MOV X2, X21
	0x03953240 MOV X3, X22
	0x03953244 MOV X4, X23
	0x03953248 MOV X5, X27
	0x0395324C MOV X6, X26
	0x03953250 MOV X7, X25
	0x03953254 BL 0x394EA28
	0x03953258 MOV X0, X26
	0x0395325C LDP X20, X19, [X31 + 0x190]
	0x03953260 LDP X22, X21, [X31 + 0x180]
	0x03953264 LDP X24, X23, [X31 + 0x170]
	0x03953268 LDP X26, X25, [X31 + 0x160]
	0x0395326C LDP X28, X27, [X31 + 0x150]
	0x03953270 LDP X29, X30, [X31 + 0x140]
	0x03953274 LDP D9, D8, [X31 + 0x130]
	0x03953278 LDP D11, D10, [X31 + 0x120]
	0x0395327C LDP D13, D12, [X31 + 0x110]
	0x03953280 ADD X31, X31, 0x1A0
	0x03953284 RET
	0x03953288 MOV X28, X25
	0x0395328C TBNZ X29, 0x1F, 0x395338C
	0x03953290 LDR X25, [X31 + 0x20]
	0x03953294 CBZ X20, 0x3953498
	0x03953298 LDRSW X8, [X31 + 0x10C]
	0x0395329C LDR W9, [X20 + 0x18]
	0x039532A0 CMP W8, W9
	0x039532A4 B.CS 0x395349C
	0x039532A8 CBZ X24, 0x3953498
	0x039532AC LDR W9, [X24 + 0x18]
	0x039532B0 CBZ W9, 0x395349C
	0x039532B4 MOVZ W9, 0xC
	0x039532B8 MADD X8, X8, X9, X20
	0x039532BC LDR V0, [X8 + 0x20]
	0x039532C0 LDR V1, [X8 + 0x28]
	0x039532C4 STR D0, [X24 + 0x20]
	0x039532C8 STR S1, [X24 + 0x28]
	0x039532CC TBZ X22, 0x0, 0x39532FC
	0x039532D0 CBZ X27, 0x3953498
	0x039532D4 LDRSW X8, [X31 + 0x10C]
	0x039532D8 LDR W9, [X27 + 0x18]
	0x039532DC CMP W8, W9
	0x039532E0 B.CS 0x395349C
	0x039532E4 CBZ X25, 0x3953498
	0x039532E8 LDR W9, [X25 + 0x18]
	0x039532EC CBZ W9, 0x395349C
	0x039532F0 ADD X8, X27, X8, 0x4, LSL
	0x039532F4 LDR V0, [X8 + 0x2]
	0x039532F8 STR V0, [X25 + 0x2]
	0x039532FC LDR W1, [X31 + 0x10C]
	0x03953300 MOV X0, X19
	0x03953304 MOV X2, X31
	0x03953308 BL 0x391B5D8
	0x0395330C CBZ X28, 0x3953498
	0x03953310 LDR W8, [X28 + 0x18]
	0x03953314 CBZ W8, 0x395349C
	0x03953318 STR W0, [X28 + 0x20]
	0x0395331C LDRSW X8, [X31 + 0x108]
	0x03953320 LDR W9, [X20 + 0x18]
	0x03953324 CMP W8, W9
	0x03953328 B.CS 0x395349C
	0x0395332C LDR W9, [X24 + 0x18]
	0x03953330 CMP W9, 0x1
	0x03953334 B.LS 0x395349C
	0x03953338 MOVZ W9, 0xC
	0x0395333C MADD X8, X8, X9, X20
	0x03953340 LDR V0, [X8 + 0x20]
	0x03953344 LDR V1, [X8 + 0x28]
	0x03953348 STUR D0, [X24 + 0x2C]
	0x0395334C STR S1, [X24 + 0x34]
	0x03953350 TBZ X22, 0x0, 0x3953384
	0x03953354 CBZ X27, 0x3953498
	0x03953358 LDRSW X8, [X31 + 0x108]
	0x0395335C LDR W9, [X27 + 0x18]
	0x03953360 CMP W8, W9
	0x03953364 B.CS 0x395349C
	0x03953368 CBZ X25, 0x3953498
	0x0395336C LDR W9, [X25 + 0x18]
	0x03953370 CMP W9, 0x1
	0x03953374 B.LS 0x395349C
	0x03953378 ADD X8, X27, X8, 0x4, LSL
	0x0395337C LDR V0, [X8 + 0x2]
	0x03953380 STR V0, [X25 + 0x3]
	0x03953384 LDR W1, [X31 + 0x108]
	0x03953388 B 0x39527CC
	0x0395338C LDR X25, [X31 + 0x20]
	0x03953390 TBNZ X0, 0x1F, 0x395348C
	0x03953394 CBZ X20, 0x3953498
	0x03953398 LDRSW X8, [X31 + 0x10C]
	0x0395339C LDR W9, [X20 + 0x18]
	0x039533A0 CMP W8, W9
	0x039533A4 B.CS 0x395349C
	0x039533A8 CBZ X24, 0x3953498
	0x039533AC LDR W9, [X24 + 0x18]
	0x039533B0 CBZ W9, 0x395349C
	0x039533B4 MOVZ W9, 0xC
	0x039533B8 MADD X8, X8, X9, X20
	0x039533BC LDR V0, [X8 + 0x20]
	0x039533C0 LDR V1, [X8 + 0x28]
	0x039533C4 STR D0, [X24 + 0x20]
	0x039533C8 STR S1, [X24 + 0x28]
	0x039533CC TBZ X22, 0x0, 0x39533FC
	0x039533D0 CBZ X27, 0x3953498
	0x039533D4 LDRSW X8, [X31 + 0x10C]
	0x039533D8 LDR W9, [X27 + 0x18]
	0x039533DC CMP W8, W9
	0x039533E0 B.CS 0x395349C
	0x039533E4 CBZ X25, 0x3953498
	0x039533E8 LDR W9, [X25 + 0x18]
	0x039533EC CBZ W9, 0x395349C
	0x039533F0 ADD X8, X27, X8, 0x4, LSL
	0x039533F4 LDR V0, [X8 + 0x2]
	0x039533F8 STR V0, [X25 + 0x2]
	0x039533FC LDR W1, [X31 + 0x10C]
	0x03953400 MOV X0, X19
	0x03953404 MOV X2, X31
	0x03953408 BL 0x391B5D8
	0x0395340C CBZ X28, 0x3953498
	0x03953410 LDR W8, [X28 + 0x18]
	0x03953414 CBZ W8, 0x395349C
	0x03953418 STR W0, [X28 + 0x20]
	0x0395341C LDRSW X8, [X31 + 0x108]
	0x03953420 LDR W9, [X20 + 0x18]
	0x03953424 CMP W8, W9
	0x03953428 B.CS 0x395349C
	0x0395342C LDR W9, [X24 + 0x18]
	0x03953430 CMP W9, 0x1
	0x03953434 B.LS 0x395349C
	0x03953438 MOVZ W9, 0xC
	0x0395343C MADD X8, X8, X9, X20
	0x03953440 LDR V0, [X8 + 0x20]
	0x03953444 LDR V1, [X8 + 0x28]
	0x03953448 STUR D0, [X24 + 0x2C]
	0x0395344C STR S1, [X24 + 0x34]
	0x03953450 TBZ X22, 0x0, 0x3953484
	0x03953454 CBZ X27, 0x3953498
	0x03953458 LDRSW X8, [X31 + 0x108]
	0x0395345C LDR W9, [X27 + 0x18]
	0x03953460 CMP W8, W9
	0x03953464 B.CS 0x395349C
	0x03953468 CBZ X25, 0x3953498
	0x0395346C LDR W9, [X25 + 0x18]
	0x03953470 CMP W9, 0x1
	0x03953474 B.LS 0x395349C
	0x03953478 ADD X8, X27, X8, 0x4, LSL
	0x0395347C LDR V0, [X8 + 0x2]
	0x03953480 STR V0, [X25 + 0x3]
	0x03953484 LDR W1, [X31 + 0x108]
	0x03953488 B 0x3952960
	0x0395348C ANDS W31, W22, 0x1
	0x03953490 CSEL X21, X25, X31, NE
	0x03953494 CBNZ X24, 0x3952A08
	0x03953498 BL 0x1C16F20
	0x0395349C BL 0x1C16F28
	0x039534A0 ADRP X0, 0x7A5000
	0x039534A4 LDR X0, [X0 + 0x528]
	0x039534A8 BL 0x1C16D08
	0x039534AC BL 0x1C16F10
	0x039534B0 MOV X19, X0
	0x039534B4 ADRP X0, 0x7FA000
	0x039534B8 LDR X0, [X0 + 0xE90]
	0x039534BC BL 0x1C16D08
	0x039534C0 MOV X1, X0
	0x039534C4 MOV X0, X19
	0x039534C8 MOV X2, X31
	0x039534CC BL 0x330E100
	0x039534D0 ADRP X0, 0x7FC000
	0x039534D4 LDR X0, [X0 + 0x350]
	0x039534D8 BL 0x1C16D08
	0x039534DC MOV X1, X0
	0x039534E0 MOV X0, X19
	0x039534E4 BL 0x1C16DEC
	0x039534E8 SUB X31, X31, 0x80
	0x039534EC STP X29, X30, [X31 + 0x20]
	0x039534F0 STP X28, X27, [X31 + 0x30]
	0x039534F4 STP X26, X25, [X31 + 0x40]
	0x039534F8 STP X24, X23, [X31 + 0x50]
	0x039534FC STP X22, X21, [X31 + 0x60]
	0x03953500 STP X20, X19, [X31 + 0x70]
	0x03953504 ADRP X23, 0xA8E000
	0x03953508 ADRP X21, 0x7FC000
	0x0395350C ADRP X20, 0x7FC000
	0x03953510 LDRB W8, [X23 + 0x9CC]
	0x03953514 LDR X21, [X21 + 0x358]
	0x03953518 LDR X20, [X20 + 0x360]
	0x0395351C MOV X22, X1
	0x03953520 MOV X19, X0
	0x03953524 TBNZ X8, 0x0, 0x3953578
	0x03953528 ADRP X0, 0x7FA000
	0x0395352C LDR X0, [X0 + 0xC80]
	0x03953530 BL 0x1C16CF4
	0x03953534 ADRP X0, 0x7C8000
	0x03953538 LDR X0, [X0 + 0x600]
	0x0395353C BL 0x1C16CF4
	0x03953540 ADRP X0, 0x7FC000
	0x03953544 LDR X0, [X0 + 0x368]
	0x03953548 BL 0x1C16CF4
	0x0395354C ADRP X0, 0x7FC000
	0x03953550 LDR X0, [X0 + 0x360]
	0x03953554 BL 0x1C16CF4
	0x03953558 ADRP X0, 0x7FC000
	0x0395355C LDR X0, [X0 + 0x358]
	0x03953560 BL 0x1C16CF4
	0x03953564 ADRP X0, 0x7FA000
	0x03953568 LDR X0, [X0 + 0xD00]
	0x0395356C BL 0x1C16CF4
	0x03953570 MOVZ W8, 0x1
	0x03953574 STRB W8, [X23 + 0x9CC]
	0x03953578 LDR X0, [X21]
	0x0395357C STP X31, X31, [X31 + 0x10]
	0x03953580 BL 0x1C16F10
	0x03953584 LDR X1, [X20]
	0x03953588 MOV X20, X0
	0x0395358C BL 0x2F2D78C
	0x03953590 CBZ X19, 0x39537B8
	0x03953594 MOV X0, X19
	0x03953598 MOV X1, X31
	0x0395359C BL 0x3916198
	0x039535A0 CBZ X0, 0x39537B8
	0x039535A4 ADRP X24, 0x7FA000
	0x039535A8 LDR X24, [X24 + 0xC80]
	0x039535AC ADRP X25, 0x7C8000
	0x039535B0 MOV W1, W22
	0x039535B4 MOV X21, X0
	0x039535B8 LDR X2, [X24]
	0x039535BC LDR X25, [X25 + 0x600]
	0x039535C0 UBFM X23, X22, 0x20, 0x3F
	0x039535C4 BL 0x2A0A2A8
	0x039535C8 LDR X2, [X24]
	0x039535CC MOV W22, W0
	0x039535D0 MOV X0, X21
	0x039535D4 MOV W1, W23
	0x039535D8 BL 0x2A0A2A8
	0x039535DC LDR X8, [X25]
	0x039535E0 MOV W23, W0
	0x039535E4 LDR W9, [X8 + 0xE0]
	0x039535E8 CBNZ W9, 0x39535F4
	0x039535EC MOV X0, X8
	0x039535F0 BL 0x1C16DFC
	0x039535F4 ADD X0, X31, 0x18
	0x039535F8 MOV W1, W22
	0x039535FC MOV W2, W23
	0x03953600 MOV X3, X31
	0x03953604 BL 0x38FDC24
	0x03953608 ADD X0, X31, 0x10
	0x0395360C MOV W1, W31
	0x03953610 MOV W2, W31
	0x03953614 MOV X3, X31
	0x03953618 BL 0x38FDC24
	0x0395361C LDR X8, [X19 + 0x28]
	0x03953620 CBZ X8, 0x39537B8
	0x03953624 ADRP X26, 0x7FC000
	0x03953628 LDR X26, [X26 + 0x368]
	0x0395362C MOV W23, W31
	0x03953630 LDR W9, [X8 + 0x18]
	0x03953634 CMP W23, W9
	0x03953638 B.GE 0x39537BC
	0x0395363C CMP W23, W9
	0x03953640 B.CS 0x39537E0
	0x03953644 SXTW X27, W23
	0x03953648 ADD X8, X8, X27, 0x3, LSL
	0x0395364C LDR X0, [X8 + 0x20]
	0x03953650 CBZ X0, 0x39537B8
	0x03953654 MOV X1, X31
	0x03953658 BL 0x38FFA80
	0x0395365C CBZ X0, 0x39537B8
	0x03953660 LDR X8, [X0 + 0x18]
	0x03953664 MOV X22, X0
	0x03953668 CMP W8, 0x1
	0x0395366C B.LT 0x39537AC
	0x03953670 MOV X29, X31
	0x03953674 AND X8, X8, 0x0
	0x03953678 ADD X28, X22, 0x20
	0x0395367C CMP X29, W8, UXTW
	0x03953680 B.CS 0x39537E0
	0x03953684 LDR V0, [X28]
	0x03953688 LDR X2, [X24]
	0x0395368C LDR W25, [X31 + 0x18]
	0x03953690 MOV X0, X21
	0x03953694 FMOV W1, S0
	0x03953698 STR D0, [X31 + 0x10]
	0x0395369C BL 0x2A0A2A8
	0x039536A0 CMP W25, W0
	0x039536A4 B.NE 0x39536C4
	0x039536A8 LDR W1, [X31 + 0x14]
	0x039536AC LDR X2, [X24]
	0x039536B0 LDR W25, [X31 + 0x1C]
	0x039536B4 MOV X0, X21
	0x039536B8 BL 0x2A0A2A8
	0x039536BC CMP W25, W0
	0x039536C0 B.EQ 0x3953710
	0x039536C4 LDP W1, W25, [X31 + 0x14]
	0x039536C8 LDR X2, [X24]
	0x039536CC MOV X0, X21
	0x039536D0 BL 0x2A0A2A8
	0x039536D4 CMP W25, W0
	0x039536D8 B.NE 0x39536F8
	0x039536DC LDR W1, [X31 + 0x10]
	0x039536E0 LDR X2, [X24]
	0x039536E4 LDR W25, [X31 + 0x1C]
	0x039536E8 MOV X0, X21
	0x039536EC BL 0x2A0A2A8
	0x039536F0 CMP W25, W0
	0x039536F4 B.EQ 0x3953710
	0x039536F8 LDR W8, [X22 + 0x18]
	0x039536FC ADD X29, X29, 0x1
	0x03953700 ADD X28, X28, 0x8
	0x03953704 CMP X29, W8, SXTW
	0x03953708 B.LT 0x395367C
	0x0395370C B 0x39537AC
	0x03953710 LDR X8, [X19 + 0x28]
	0x03953714 CBZ X8, 0x39537B8
	0x03953718 LDR W9, [X8 + 0x18]
	0x0395371C CMP W23, W9
	0x03953720 B.CS 0x39537E0
	0x03953724 LDR W9, [X22 + 0x18]
	0x03953728 CMP W29, W9
	0x0395372C B.CS 0x39537E0
	0x03953730 ADD X8, X8, X27, 0x3, LSL
	0x03953734 LDR X1, [X8 + 0x20]
	0x03953738 ADRP X8, 0x7FA000
	0x0395373C LDR X2, [X28]
	0x03953740 LDR X8, [X8 + 0xD00]
	0x03953744 ADD X0, X31, 0x0
	0x03953748 STP X31, X31, [X31]
	0x0395374C LDR X3, [X8]
	0x03953750 BL 0x25E6B18
	0x03953754 CBZ X20, 0x39537B8
	0x03953758 LDR W10, [X20 + 0x1C]
	0x0395375C LDP X1, X2, [X31]
	0x03953760 LDR X8, [X20 + 0x10]
	0x03953764 LDR X9, [X26]
	0x03953768 ADD W10, W10, 0x1
	0x0395376C STR W10, [X20 + 0x1C]
	0x03953770 CBZ X8, 0x39537B8
	0x03953774 LDRSW X10, [X20 + 0x18]
	0x03953778 LDR W11, [X8 + 0x18]
	0x0395377C CMP W10, W11
	0x03953780 B.CS 0x3953798
	0x03953784 ADD W9, W10, 0x1
	0x03953788 ADD X8, X8, X10, 0x4, LSL
	0x0395378C STR W9, [X20 + 0x18]
	0x03953790 STP X1, X2, [X8 + 0x20]
	0x03953794 B 0x39537AC
	0x03953798 LDR X8, [X9 + 0x20]
	0x0395379C MOV X0, X20
	0x039537A0 LDR X8, [X8 + 0xC0]
	0x039537A4 LDR X3, [X8 + 0x70]
	0x039537A8 BL 0x2F2DF98
	0x039537AC LDR X8, [X19 + 0x28]
	0x039537B0 ADD W23, W23, 0x1
	0x039537B4 CBNZ X8, 0x3953630
	0x039537B8 BL 0x1C16F20
	0x039537BC MOV X0, X20
	0x039537C0 LDP X20, X19, [X31 + 0x70]
	0x039537C4 LDP X22, X21, [X31 + 0x60]
	0x039537C8 LDP X24, X23, [X31 + 0x50]
	0x039537CC LDP X26, X25, [X31 + 0x40]
	0x039537D0 LDP X28, X27, [X31 + 0x30]
	0x039537D4 LDP X29, X30, [X31 + 0x20]
	0x039537D8 ADD X31, X31, 0x80
	0x039537DC RET
	0x039537E0 BL 0x1C16F28
	0x039537E4 MOVZ W3, 0x1
	0x039537E8 B 0x39537EC
	0x039537EC SUB X31, X31, 0x160
	0x039537F0 STR D14, [X31 + 0xC0]
	0x039537F4 STP D13, D12, [X31 + 0xD0]
	0x039537F8 STP D11, D10, [X31 + 0xE0]
	0x039537FC STP D9, D8, [X31 + 0xF0]
	0x03953800 STP X29, X30, [X31 + 0x100]
	0x03953804 STP X28, X27, [X31 + 0x110]
	0x03953808 STP X26, X25, [X31 + 0x120]
	0x0395380C STP X24, X23, [X31 + 0x130]
	0x03953810 STP X22, X21, [X31 + 0x140]
	0x03953814 STP X20, X19, [X31 + 0x150]
	0x03953818 STR X2, [X31 + 0x40]
	0x0395381C ADRP X20, 0xA8E000
	0x03953820 ADRP X19, 0x7A0000
	0x03953824 LDRB W8, [X20 + 0x998]
	0x03953828 LDR X19, [X19 + 0x598]
	0x0395382C MOV W27, W3
	0x03953830 MOV X25, X1
	0x03953834 MOV X26, X0
	0x03953838 TBNZ X8, 0x0, 0x3953994
	0x0395383C ADRP X0, 0x7AA000
	0x03953840 LDR X0, [X0 + 0x870]
	0x03953844 BL 0x1C16CF4
	0x03953848 ADRP X0, 0x7AA000
	0x0395384C LDR X0, [X0 + 0x890]
	0x03953850 BL 0x1C16CF4
	0x03953854 ADRP X0, 0x7FA000
	0x03953858 LDR X0, [X0 + 0xC80]
	0x0395385C BL 0x1C16CF4
	0x03953860 ADRP X0, 0x7AA000
	0x03953864 LDR X0, [X0 + 0x888]
	0x03953868 BL 0x1C16CF4
	0x0395386C ADRP X0, 0x7FC000
	0x03953870 LDR X0, [X0 + 0x370]
	0x03953874 BL 0x1C16CF4
	0x03953878 ADRP X0, 0x7FC000
	0x0395387C LDR X0, [X0 + 0x1F0]
	0x03953880 BL 0x1C16CF4
	0x03953884 ADRP X0, 0x7FB000
	0x03953888 LDR X0, [X0 + 0x560]
	0x0395388C BL 0x1C16CF4
	0x03953890 ADRP X0, 0x7A1000
	0x03953894 LDR X0, [X0 + 0xE10]
	0x03953898 BL 0x1C16CF4
	0x0395389C ADRP X0, 0x7FC000
	0x039538A0 LDR X0, [X0 + 0x308]
	0x039538A4 BL 0x1C16CF4
	0x039538A8 ADRP X0, 0x7FC000
	0x039538AC LDR X0, [X0 + 0x1C0]
	0x039538B0 BL 0x1C16CF4
	0x039538B4 ADRP X0, 0x7FC000
	0x039538B8 LDR X0, [X0 + 0x378]
	0x039538BC BL 0x1C16CF4
	0x039538C0 ADRP X0, 0x7FC000
	0x039538C4 LDR X0, [X0 + 0x380]
	0x039538C8 BL 0x1C16CF4
	0x039538CC ADRP X0, 0x7A1000
	0x039538D0 LDR X0, [X0 + 0xE18]
	0x039538D4 BL 0x1C16CF4
	0x039538D8 ADRP X0, 0x7A4000
	0x039538DC LDR X0, [X0 + 0xB70]
	0x039538E0 BL 0x1C16CF4
	0x039538E4 ADRP X0, 0x7FA000
	0x039538E8 LDR X0, [X0 + 0xDD8]
	0x039538EC BL 0x1C16CF4
	0x039538F0 ADRP X0, 0x7FC000
	0x039538F4 LDR X0, [X0 + 0x1C8]
	0x039538F8 BL 0x1C16CF4
	0x039538FC ADRP X0, 0x7FC000
	0x03953900 LDR X0, [X0 + 0x310]
	0x03953904 BL 0x1C16CF4
	0x03953908 ADRP X0, 0x7FA000
	0x0395390C LDR X0, [X0 + 0xE18]
	0x03953910 BL 0x1C16CF4
	0x03953914 ADRP X0, 0x7FB000
	0x03953918 LDR X0, [X0 + 0xFE0]
	0x0395391C BL 0x1C16CF4
	0x03953920 ADRP X0, 0x7FC000
	0x03953924 LDR X0, [X0 + 0x1D0]
	0x03953928 BL 0x1C16CF4
	0x0395392C ADRP X0, 0x7FB000
	0x03953930 LDR X0, [X0 + 0xFE8]
	0x03953934 BL 0x1C16CF4
	0x03953938 ADRP X0, 0x7A1000
	0x0395393C LDR X0, [X0 + 0xE30]
	0x03953940 BL 0x1C16CF4
	0x03953944 ADRP X0, 0x7FA000
	0x03953948 LDR X0, [X0 + 0xDE8]
	0x0395394C BL 0x1C16CF4
	0x03953950 ADRP X0, 0x7FC000
	0x03953954 LDR X0, [X0 + 0x318]
	0x03953958 BL 0x1C16CF4
	0x0395395C ADRP X0, 0x7FA000
	0x03953960 LDR X0, [X0 + 0xDF0]
	0x03953964 BL 0x1C16CF4
	0x03953968 ADRP X0, 0x7A0000
	0x0395396C LDR X0, [X0 + 0x598]
	0x03953970 BL 0x1C16CF4
	0x03953974 ADRP X0, 0x7FB000
	0x03953978 LDR X0, [X0 + 0x20]
	0x0395397C BL 0x1C16CF4
	0x03953980 ADRP X0, 0x7FB000
	0x03953984 LDR X0, [X0 + 0xB08]
	0x03953988 BL 0x1C16CF4
	0x0395398C MOVZ W8, 0x1
	0x03953990 STRB W8, [X20 + 0x998]
	0x03953994 LDR X0, [X19]
	0x03953998 STR X31, [X31 + 0xC8]
	0x0395399C STR W31, [X31 + 0xBC]
	0x039539A0 LDR W8, [X0 + 0xE0]
	0x039539A4 CBNZ W8, 0x39539AC
	0x039539A8 BL 0x1C16DFC
	0x039539AC MOV X0, X26
	0x039539B0 MOV X1, X31
	0x039539B4 MOV X2, X31
	0x039539B8 BL 0x3C3883C
	0x039539BC TBNZ X0, 0x0, 0x3954280
	0x039539C0 CBZ X25, 0x39542A0
	0x039539C4 LDR X8, [X31 + 0x40]
	0x039539C8 CBZ X8, 0x39542C0
	0x039539CC CBZ X26, 0x3954278
	0x039539D0 ADRP X20, 0x7FC000
	0x039539D4 ADRP X21, 0x7FA000
	0x039539D8 ADRP X24, 0x7FA000
	0x039539DC ADRP X19, 0x7FB000
	0x039539E0 LDR X20, [X20 + 0x370]
	0x039539E4 LDR X21, [X21 + 0xDF0]
	0x039539E8 LDR X24, [X24 + 0xDD8]
	0x039539EC LDR X19, [X19 + 0xB08]
	0x039539F0 MOV X0, X26
	0x039539F4 MOV X1, X31
	0x039539F8 MOV X2, X31
	0x039539FC BL 0x3912114
	0x03953A00 LDR X1, [X20]
	0x03953A04 BL 0x21D79F4
	0x03953A08 LDR X8, [X21]
	0x03953A0C LDR X22, [X26 + 0x28]
	0x03953A10 MOV X23, X0
	0x03953A14 MOV X0, X8
	0x03953A18 BL 0x1C16F10
	0x03953A1C LDR X2, [X24]
	0x03953A20 MOV X1, X22
	0x03953A24 MOV X20, X0
	0x03953A28 BL 0x301B8E0
	0x03953A2C MOV X0, X26
	0x03953A30 MOV X1, X31
	0x03953A34 BL 0x3916198
	0x03953A38 LDR X8, [X26 + 0x48]
	0x03953A3C MOV X24, X0
	0x03953A40 STR X20, [X31 + 0x28]
	0x03953A44 CBZ X8, 0x3953A84
	0x03953A48 ADRP X8, 0x7AA000
	0x03953A4C LDR X8, [X8 + 0x888]
	0x03953A50 ADRP X20, 0x7AA000
	0x03953A54 LDR X0, [X8]
	0x03953A58 LDR X20, [X20 + 0x890]
	0x03953A5C BL 0x1C16F10
	0x03953A60 LDR X1, [X20]
	0x03953A64 MOV X20, X0
	0x03953A68 BL 0x2A09A9C
	0x03953A6C LDR X0, [X26 + 0x48]
	0x03953A70 MOV X1, X20
	0x03953A74 MOV X2, X31
	0x03953A78 STR X20, [X31 + 0x48]
	0x03953A7C BL 0x3934C64
	0x03953A80 B 0x3953A88
	0x03953A84 STR X31, [X31 + 0x48]
	0x03953A88 LDR X0, [X19]
	0x03953A8C STR W27, [X31 + 0x3C]
	0x03953A90 STR X26, [X31 + 0x30]
	0x03953A94 ADRP X22, 0x7FA000
	0x03953A98 ADRP X21, 0x7FC000
	0x03953A9C ADRP X20, 0x7A1000
	0x03953AA0 ADRP X19, 0x7A4000
	0x03953AA4 LDR W8, [X0 + 0xE0]
	0x03953AA8 LDR X22, [X22 + 0xDE8]
	0x03953AAC LDR X21, [X21 + 0x1C8]
	0x03953AB0 LDR X20, [X20 + 0xE30]
	0x03953AB4 LDR X19, [X19 + 0xB70]
	0x03953AB8 CBNZ W8, 0x3953AC0
	0x03953ABC BL 0x1C16DFC
	0x03953AC0 MOV X0, X25
	0x03953AC4 MOV X1, X31
	0x03953AC8 BL 0x3942528
	0x03953ACC LDR X8, [X22]
	0x03953AD0 MOV X29, X0
	0x03953AD4 MOV X0, X8
	0x03953AD8 BL 0x1C16F10
	0x03953ADC LDR X1, [X21]
	0x03953AE0 MOV X26, X0
	0x03953AE4 BL 0x301B7C4
	0x03953AE8 LDR X0, [X20]
	0x03953AEC BL 0x1C16F10
	0x03953AF0 LDR X1, [X19]
	0x03953AF4 MOV X27, X0
	0x03953AF8 BL 0x2FDBF14
	0x03953AFC LDR X8, [X31 + 0x48]
	0x03953B00 CBZ X8, 0x3953B20
	0x03953B04 LDR X0, [X20]
	0x03953B08 BL 0x1C16F10
	0x03953B0C LDR X1, [X19]
	0x03953B10 MOV X28, X0
	0x03953B14 BL 0x2FDBF14
	0x03953B18 CBNZ X29, 0x3953B28
	0x03953B1C B 0x3954278
	0x03953B20 MOV X28, X31
	0x03953B24 CBZ X29, 0x3954278
	0x03953B28 LDR W8, [X29 + 0x18]
	0x03953B2C ADRP X19, 0x7FC000
	0x03953B30 LDR X19, [X19 + 0x1D0]
	0x03953B34 CMP W8, 0x1
	0x03953B38 B.LT 0x3953D48
	0x03953B3C ADRP X20, 0x7FB000
	0x03953B40 ADRP X21, 0x7A1000
	0x03953B44 LDR X20, [X20 + 0xFE8]
	0x03953B48 LDR X21, [X21 + 0xE10]
	0x03953B4C MOV W22, W31
	0x03953B50 LDR X2, [X20]
	0x03953B54 MOV X0, X29
	0x03953B58 MOV W1, W22
	0x03953B5C BL 0x2FB9C40
	0x03953B60 CBZ X23, 0x3954278
	0x03953B64 LDR X2, [X19]
	0x03953B68 MOV X1, X0
	0x03953B6C MOV X0, X23
	0x03953B70 BL 0x301BCCC
	0x03953B74 CBZ X26, 0x3954278
	0x03953B78 ADRP X9, 0x7FC000
	0x03953B7C LDR W10, [X26 + 0x1C]
	0x03953B80 LDR X8, [X26 + 0x10]
	0x03953B84 LDR X9, [X9 + 0x1C0]
	0x03953B88 ADD W10, W10, 0x1
	0x03953B8C LDR X9, [X9]
	0x03953B90 STR W10, [X26 + 0x1C]
	0x03953B94 CBZ X8, 0x3954278
	0x03953B98 LDRSW X10, [X26 + 0x18]
	0x03953B9C LDR W11, [X8 + 0x18]
	0x03953BA0 MOV X1, X0
	0x03953BA4 CMP W10, W11
	0x03953BA8 B.CS 0x3953BC0
	0x03953BAC ADD W9, W10, 0x1
	0x03953BB0 ADD X8, X8, X10, 0x3, LSL
	0x03953BB4 STR W9, [X26 + 0x18]
	0x03953BB8 STR X1, [X8 + 0x20]
	0x03953BBC B 0x3953BD4
	0x03953BC0 LDR X8, [X9 + 0x20]
	0x03953BC4 MOV X0, X26
	0x03953BC8 LDR X8, [X8 + 0xC0]
	0x03953BCC LDR X2, [X8 + 0x70]
	0x03953BD0 BL 0x301BF90
	0x03953BD4 LDR X2, [X20]
	0x03953BD8 MOV X0, X29
	0x03953BDC MOV W1, W22
	0x03953BE0 BL 0x2FB9C40
	0x03953BE4 CBZ X24, 0x3954278
	0x03953BE8 ADRP X8, 0x7FA000
	0x03953BEC LDR X8, [X8 + 0xC80]
	0x03953BF0 MOV X1, X0
	0x03953BF4 MOV X0, X24
	0x03953BF8 LDR X2, [X8]
	0x03953BFC BL 0x2A0A2A8
	0x03953C00 CBZ X27, 0x3954278
	0x03953C04 LDR W10, [X27 + 0x1C]
	0x03953C08 LDR X8, [X27 + 0x10]
	0x03953C0C LDR X9, [X21]
	0x03953C10 ADD W10, W10, 0x1
	0x03953C14 STR W10, [X27 + 0x1C]
	0x03953C18 CBZ X8, 0x3954278
	0x03953C1C LDRSW X10, [X27 + 0x18]
	0x03953C20 LDR W11, [X8 + 0x18]
	0x03953C24 MOV W1, W0
	0x03953C28 CMP W10, W11
	0x03953C2C B.CS 0x3953C44
	0x03953C30 ADD W9, W10, 0x1
	0x03953C34 ADD X8, X8, X10, 0x2, LSL
	0x03953C38 STR W9, [X27 + 0x18]
	0x03953C3C STR W1, [X8 + 0x20]
	0x03953C40 B 0x3953C58
	0x03953C44 LDR X8, [X9 + 0x20]
	0x03953C48 MOV X0, X27
	0x03953C4C LDR X8, [X8 + 0xC0]
	0x03953C50 LDR X2, [X8 + 0x70]
	0x03953C54 BL 0x2FDC70C
	0x03953C58 LDR X8, [X31 + 0x48]
	0x03953C5C CBZ X8, 0x3953D38
	0x03953C60 LDR X2, [X20]
	0x03953C64 MOV X0, X29
	0x03953C68 MOV W1, W22
	0x03953C6C BL 0x2FB9C40
	0x03953C70 ADRP X8, 0x7AA000
	0x03953C74 LDR X8, [X8 + 0x870]
	0x03953C78 MOV X1, X0
	0x03953C7C LDR X0, [X31 + 0x48]
	0x03953C80 ADD X2, X31, 0xBC
	0x03953C84 LDR X3, [X8]
	0x03953C88 BL 0x2A0BC68
	0x03953C8C TBZ X0, 0x0, 0x3953CD4
	0x03953C90 CBZ X28, 0x3954278
	0x03953C94 LDR W10, [X28 + 0x1C]
	0x03953C98 LDR W1, [X31 + 0xBC]
	0x03953C9C LDR X8, [X28 + 0x10]
	0x03953CA0 LDR X9, [X21]
	0x03953CA4 ADD W10, W10, 0x1
	0x03953CA8 STR W10, [X28 + 0x1C]
	0x03953CAC CBZ X8, 0x3954278
	0x03953CB0 LDRSW X10, [X28 + 0x18]
	0x03953CB4 LDR W11, [X8 + 0x18]
	0x03953CB8 CMP W10, W11
	0x03953CBC B.CS 0x3953D18
	0x03953CC0 ADD W9, W10, 0x1
	0x03953CC4 ADD X8, X8, X10, 0x2, LSL
	0x03953CC8 STR W9, [X28 + 0x18]
	0x03953CCC STR W1, [X8 + 0x20]
	0x03953CD0 B 0x3953D38
	0x03953CD4 CBZ X28, 0x3954278
	0x03953CD8 LDR W10, [X28 + 0x1C]
	0x03953CDC LDR X8, [X28 + 0x10]
	0x03953CE0 LDR X9, [X21]
	0x03953CE4 ADD W10, W10, 0x1
	0x03953CE8 STR W10, [X28 + 0x1C]
	0x03953CEC CBZ X8, 0x3954278
	0x03953CF0 LDRSW X10, [X28 + 0x18]
	0x03953CF4 LDR W11, [X8 + 0x18]
	0x03953CF8 CMP W10, W11
	0x03953CFC B.CS 0x3953D20
	0x03953D00 ADD W9, W10, 0x1
	0x03953D04 ADD X8, X8, X10, 0x2, LSL
	0x03953D08 STR W9, [X28 + 0x18]
	0x03953D0C MOVN W9, 0x0
	0x03953D10 STR W9, [X8 + 0x20]
	0x03953D14 B 0x3953D38
	0x03953D18 LDR X8, [X9 + 0x20]
	0x03953D1C B 0x3953D28
	0x03953D20 LDR X8, [X9 + 0x20]
	0x03953D24 MOVN W1, 0x0
	0x03953D28 LDR X8, [X8 + 0xC0]
	0x03953D2C LDR X2, [X8 + 0x70]
	0x03953D30 MOV X0, X28
	0x03953D34 BL 0x2FDC70C
	0x03953D38 LDR W8, [X29 + 0x18]
	0x03953D3C ADD W22, W22, 0x1
	0x03953D40 CMP W22, W8
	0x03953D44 B.LT 0x3953B50
	0x03953D48 LDR X8, [X31 + 0x40]
	0x03953D4C LDR W10, [X31 + 0x3C]
	0x03953D50 STP X23, X25, [X31 + 0x18]
	0x03953D54 LDR X9, [X8 + 0x18]
	0x03953D58 AND X8, X9, 0x0
	0x03953D5C TBZ X10, 0x0, 0x3953F44
	0x03953D60 CMP W9, 0x1
	0x03953D64 B.LT 0x3954010
	0x03953D68 ADRP X23, 0x7FC000
	0x03953D6C LDR X23, [X23 + 0x380]
	0x03953D70 MOV X20, X31
	0x03953D74 CMP X20, W8, UXTW
	0x03953D78 B.CS 0x395427C
	0x03953D7C CBZ X26, 0x3954278
	0x03953D80 LDR X8, [X31 + 0x40]
	0x03953D84 MOVZ W9, 0xC
	0x03953D88 LDR W21, [X26 + 0x18]
	0x03953D8C LDR X2, [X19]
	0x03953D90 NOP
	0x03953D94 MADD X8, X20, X9, X8
	0x03953D98 LDP S10, S9, [X8 + 0x20]
	0x03953D9C LDR V8, [X8 + 0x28]
	0x03953DA0 CMP W21, 0x1
	0x03953DA4 B.LT 0x3953E40
	0x03953DA8 MOVZ W8, 0x7F800000
	0x03953DAC MOV W29, W31
	0x03953DB0 MOVN W22, 0x0
	0x03953DB4 FMOV S14, W8
	0x03953DB8 MOV X0, X26
	0x03953DBC MOV W1, W29
	0x03953DC0 BL 0x301BCCC
	0x03953DC4 CBZ X0, 0x3954278
	0x03953DC8 LDR X2, [X19]
	0x03953DCC LDP S11, S12, [X0 + 0x10]
	0x03953DD0 LDR V13, [X0 + 0x18]
	0x03953DD4 ADD W25, W29, 0x1
	0x03953DD8 CMP W25, W21
	0x03953DDC CSINC W1, W31, W29, EQ
	0x03953DE0 MOV X0, X26
	0x03953DE4 BL 0x301BCCC
	0x03953DE8 CBZ X0, 0x3954278
	0x03953DEC LDR V0, [X0 + 0x18]
	0x03953DF0 LDR X8, [X0 + 0x10]
	0x03953DF4 MOV V1.16B, V9.16B
	0x03953DF8 MOV V2.16B, V8.16B
	0x03953DFC STR S0, [X31 + 0x8]
	0x03953E00 MOV V0.16B, V10.16B
	0x03953E04 MOV V3.16B, V11.16B
	0x03953E08 MOV V4.16B, V12.16B
	0x03953E0C MOV V5.16B, V13.16B
	0x03953E10 MOV X0, X31
	0x03953E14 STR X8, [X31]
	0x03953E18 BL 0x39084FC
	0x03953E1C LDR X2, [X19]
	0x03953E20 SUB W8, W25, 0x1
	0x03953E24 FCMP S0, S14
	0x03953E28 FCSEL S14, S0, S14, MI
	0x03953E2C CSEL W22, W8, W22, MI
	0x03953E30 CMP W25, W21
	0x03953E34 MOV W29, W25
	0x03953E38 B.NE 0x3953DB8
	0x03953E3C B 0x3953E44
	0x03953E40 MOVN W22, 0x0
	0x03953E44 MOV X0, X26
	0x03953E48 MOV W1, W22
	0x03953E4C BL 0x301BCCC
	0x03953E50 LDR X2, [X19]
	0x03953E54 ADD W8, W22, 0x1
	0x03953E58 SDIV W9, W8, W21
	0x03953E5C MSUB W22, W9, W21, W8
	0x03953E60 MOV X29, X0
	0x03953E64 MOV X0, X26
	0x03953E68 MOV W1, W22
	0x03953E6C BL 0x301BCCC
	0x03953E70 CBZ X29, 0x3954278
	0x03953E74 MOV X1, X0
	0x03953E78 CBZ X0, 0x3954278
	0x03953E7C LDP S0, S1, [X29 + 0x10]
	0x03953E80 LDP S2, S4, [X1 + 0x10]
	0x03953E84 LDR V3, [X29 + 0x18]
	0x03953E88 LDR V5, [X1 + 0x18]
	0x03953E8C FSUB S0, S10, S0
	0x03953E90 FSUB S2, S10, S2
	0x03953E94 FSUB S1, S9, S1
	0x03953E98 FSUB S4, S9, S4
	0x03953E9C FSUB S3, S8, S3
	0x03953EA0 FSUB S5, S8, S5
	0x03953EA4 FMUL S0, S0, S0
	0x03953EA8 FMUL S1, S1, S1
	0x03953EAC FMUL S2, S2, S2
	0x03953EB0 FMUL S4, S4, S4
	0x03953EB4 FMUL S3, S3, S3
	0x03953EB8 FMUL S5, S5, S5
	0x03953EBC FADD S0, S0, S1
	0x03953EC0 FADD S1, S2, S4
	0x03953EC4 FADD S0, S0, S3
	0x03953EC8 FADD S1, S1, S5
	0x03953ECC FADD S1, S0, S1
	0x03953ED0 FDIV S0, S0, S1
	0x03953ED4 MOV X0, X29
	0x03953ED8 MOV X2, X31
	0x03953EDC BL 0x3940610
	0x03953EE0 ADRP X8, 0x7FC000
	0x03953EE4 LDR X8, [X8 + 0x378]
	0x03953EE8 MOV X2, X0
	0x03953EEC MOV X0, X26
	0x03953EF0 MOV W1, W22
	0x03953EF4 LDR X3, [X8]
	0x03953EF8 BL 0x301CEEC
	0x03953EFC CBZ X27, 0x3954278
	0x03953F00 LDR X3, [X23]
	0x03953F04 MOVN W2, 0x0
	0x03953F08 MOV X0, X27
	0x03953F0C MOV W1, W22
	0x03953F10 BL 0x2FDD648
	0x03953F14 CBZ X28, 0x3953F2C
	0x03953F18 LDR X3, [X23]
	0x03953F1C MOVN W2, 0x0
	0x03953F20 MOV X0, X28
	0x03953F24 MOV W1, W22
	0x03953F28 BL 0x2FDD648
	0x03953F2C LDR X8, [X31 + 0x40]
	0x03953F30 ADD X20, X20, 0x1
	0x03953F34 LDR W8, [X8 + 0x18]
	0x03953F38 CMP X20, W8, SXTW
	0x03953F3C B.LT 0x3953D74
	0x03953F40 B 0x3954010
	0x03953F44 CMP W9, 0x1
	0x03953F48 B.LT 0x3954010
	0x03953F4C LDR X9, [X31 + 0x40]
	0x03953F50 ADRP X21, 0x7FB000
	0x03953F54 ADRP X29, 0x7FC000
	0x03953F58 ADRP X25, 0x7FC000
	0x03953F5C LDR X21, [X21 + 0x20]
	0x03953F60 LDR X29, [X29 + 0x378]
	0x03953F64 LDR X25, [X25 + 0x380]
	0x03953F68 MOV X19, X31
	0x03953F6C ADD X20, X9, 0x28
	0x03953F70 CMP X19, W8, UXTW
	0x03953F74 B.CS 0x395427C
	0x03953F78 CBZ X26, 0x3954278
	0x03953F7C LDR X0, [X21]
	0x03953F80 LDP S8, S9, [X20 - 0x8]
	0x03953F84 LDR V10, [X20]
	0x03953F88 BL 0x1C16F10
	0x03953F8C MOV X1, X31
	0x03953F90 MOV X22, X0
	0x03953F94 BL 0x393DC14
	0x03953F98 CBZ X22, 0x3954278
	0x03953F9C MOV X0, X22
	0x03953FA0 MOV V0.16B, V8.16B
	0x03953FA4 MOV V1.16B, V9.16B
	0x03953FA8 MOV V2.16B, V10.16B
	0x03953FAC MOV X1, X31
	0x03953FB0 BL 0x393D8A8
	0x03953FB4 LDR X3, [X29]
	0x03953FB8 MOV X0, X26
	0x03953FBC MOV W1, W31
	0x03953FC0 MOV X2, X22
	0x03953FC4 BL 0x301CEEC
	0x03953FC8 CBZ X27, 0x3954278
	0x03953FCC LDR X3, [X25]
	0x03953FD0 MOVN W2, 0x0
	0x03953FD4 MOV X0, X27
	0x03953FD8 MOV W1, W31
	0x03953FDC BL 0x2FDD648
	0x03953FE0 CBZ X28, 0x3953FF8
	0x03953FE4 LDR X3, [X25]
	0x03953FE8 MOVN W2, 0x0
	0x03953FEC MOV X0, X28
	0x03953FF0 MOV W1, W31
	0x03953FF4 BL 0x2FDD648
	0x03953FF8 LDR X8, [X31 + 0x40]
	0x03953FFC ADD X19, X19, 0x1
	0x03954000 ADD X20, X20, 0xC
	0x03954004 LDR W8, [X8 + 0x18]
	0x03954008 CMP X19, W8, SXTW
	0x0395400C B.LT 0x3953F70
	0x03954010 ADD X1, X31, 0xC8
	0x03954014 MOVZ W2, 0x1
	0x03954018 MOV X0, X26
	0x0395401C MOV W3, W31
	0x03954020 MOV X4, X31
	0x03954024 BL 0x397BFB8
	0x03954028 ADRP X8, 0x7FB000
	0x0395402C LDR X8, [X8 + 0x1F0]
	0x03954030 LDR X0, [X8]
	0x03954034 BL 0x1C16F10
	0x03954038 MOV X1, X31
	0x0395403C MOV X21, X0
	0x03954040 BL 0x3901F84
	0x03954044 LDR X0, [X31 + 0xC8]
	0x03954048 LDR X25, [X31 + 0x20]
	0x0395404C CBZ X0, 0x3954278
	0x03954050 ADRP X8, 0x7A0000
	0x03954054 LDR X8, [X8 + 0xE18]
	0x03954058 ADRP X22, 0x7FA000
	0x0395405C LDR X1, [X8]
	0x03954060 LDR X22, [X22 + 0x560]
	0x03954064 BL 0x2FDE4C8
	0x03954068 LDUR V0, [X25 + 0x1C]
	0x0395406C LDUR V1, [X25 + 0x2C]
	0x03954070 LDR W8, [X25 + 0x48]
	0x03954074 MOV X23, X0
	0x03954078 MOVI V2.2D, 0x0
	0x0395407C ADD X0, X31, 0x90
	0x03954080 ADD X1, X31, 0x70
	0x03954084 MOV X2, X31
	0x03954088 STR W8, [X31 + 0x40]
	0x0395408C STP V0, V1, [X31 + 0x70]
	0x03954090 STP V2, V2, [X31 + 0x90]
	0x03954094 BL 0x38F69EC
	0x03954098 LDR X0, [X22]
	0x0395409C LDR W20, [X25 + 0x18]
	0x039540A0 LDR W29, [X25 + 0x54]
	0x039540A4 LDRB W19, [X25 + 0x4C]
	0x039540A8 BL 0x1C16F10
	0x039540AC LDP V0, V1, [X31 + 0x90]
	0x039540B0 LDR W2, [X31 + 0x40]
	0x039540B4 ADD X3, X31, 0x50
	0x039540B8 MOVN W6, 0x0
	0x039540BC MOV X1, X23
	0x039540C0 MOV W4, W20
	0x039540C4 MOV W5, W29
	0x039540C8 MOV W7, W19
	0x039540CC MOV X22, X0
	0x039540D0 STP V0, V1, [X31 + 0x50]
	0x039540D4 STR X31, [X31]
	0x039540D8 BL 0x39004D4
	0x039540DC CBZ X21, 0x3954278
	0x039540E0 ADRP X8, 0x7FB000
	0x039540E4 LDR X8, [X8 + 0x318]
	0x039540E8 STP X22, X26, [X21 + 0x10]
	0x039540EC STP X27, X28, [X21 + 0x20]
	0x039540F0 ADRP X19, 0x7FB000
	0x039540F4 LDR X0, [X8]
	0x039540F8 LDR X19, [X19 + 0x310]
	0x039540FC BL 0x1C16F10
	0x03954100 LDR X1, [X19]
	0x03954104 MOV X22, X0
	0x03954108 BL 0x301B7C4
	0x0395410C LDR X23, [X31 + 0x18]
	0x03954110 CBZ X22, 0x3954278
	0x03954114 ADRP X9, 0x7FB000
	0x03954118 LDR X9, [X9 + 0x308]
	0x0395411C LDR W10, [X22 + 0x1C]
	0x03954120 LDR X8, [X22 + 0x10]
	0x03954124 LDR X19, [X31 + 0x30]
	0x03954128 LDR X9, [X9]
	0x0395412C ADD W10, W10, 0x1
	0x03954130 STR W10, [X22 + 0x1C]
	0x03954134 CBZ X8, 0x3954278
	0x03954138 LDRSW X10, [X22 + 0x18]
	0x0395413C LDR W11, [X8 + 0x18]
	0x03954140 CMP W10, W11
	0x03954144 B.CS 0x395415C
	0x03954148 ADD W9, W10, 0x1
	0x0395414C ADD X8, X8, X10, 0x3, LSL
	0x03954150 STR W9, [X22 + 0x18]
	0x03954154 STR X21, [X8 + 0x20]
	0x03954158 B 0x3954174
	0x0395415C LDR X8, [X9 + 0x20]
	0x03954160 MOV X0, X22
	0x03954164 MOV X1, X21
	0x03954168 LDR X8, [X8 + 0xC0]
	0x0395416C LDR X2, [X8 + 0x70]
	0x03954170 BL 0x301BF90
	0x03954174 MOV X0, X22
	0x03954178 LDR X20, [X31 + 0x28]
	0x0395417C LDR X22, [X31 + 0x48]
	0x03954180 MOV X1, X23
	0x03954184 MOV X3, X24
	0x03954188 MOV X2, X20
	0x0395418C MOV X4, X22
	0x03954190 MOV X5, X31
	0x03954194 BL 0x39019E8
	0x03954198 LDR X21, [X21 + 0x10]
	0x0395419C MOV X0, X19
	0x039541A0 MOV X1, X23
	0x039541A4 MOV W2, W31
	0x039541A8 MOV X3, X31
	0x039541AC BL 0x3916CF4
	0x039541B0 MOV X0, X19
	0x039541B4 MOV X1, X20
	0x039541B8 MOV X2, X31
	0x039541BC BL 0x39159C8
	0x039541C0 MOV X0, X19
	0x039541C4 MOV X1, X24
	0x039541C8 MOV X2, X31
	0x039541CC BL 0x3916234
	0x039541D0 MOV X0, X19
	0x039541D4 MOV X1, X22
	0x039541D8 MOV X2, X31
	0x039541DC BL 0x391634C
	0x039541E0 MOV X0, X19
	0x039541E4 MOV X1, X25
	0x039541E8 MOV X2, X31
	0x039541EC BL 0x390987C
	0x039541F0 MOV X0, X19
	0x039541F4 MOV X1, X21
	0x039541F8 MOV X2, X31
	0x039541FC MOV V8.16B, V0.16B
	0x03954200 MOV V9.16B, V1.16B
	0x03954204 MOV V10.16B, V2.16B
	0x03954208 BL 0x390987C
	0x0395420C FMUL S0, S8, S0
	0x03954210 FMUL S1, S9, S1
	0x03954214 FADD S0, S0, S1
	0x03954218 FMUL S1, S10, S2
	0x0395421C FADD S0, S1, S0
	0x03954220 FCMP S0, 0x0
	0x03954224 B.PL 0x3954238
	0x03954228 CBZ X21, 0x3954278
	0x0395422C MOV X0, X21
	0x03954230 MOV X1, X31
	0x03954234 BL 0x3900E24
	0x03954238 MOV X0, X19
	0x0395423C MOV X1, X25
	0x03954240 BL 0x39543A8
	0x03954244 MOV X0, X21
	0x03954248 LDP X20, X19, [X31 + 0x150]
	0x0395424C LDP X22, X21, [X31 + 0x140]
	0x03954250 LDP X24, X23, [X31 + 0x130]
	0x03954254 LDP X26, X25, [X31 + 0x120]
	0x03954258 LDP X28, X27, [X31 + 0x110]
	0x0395425C LDP X29, X30, [X31 + 0x100]
	0x03954260 LDP D9, D8, [X31 + 0xF0]
	0x03954264 LDP D11, D10, [X31 + 0xE0]
	0x03954268 LDP D13, D12, [X31 + 0xD0]
	0x0395426C LDR V14, [X31 + 0xC0]
	0x03954270 ADD X31, X31, 0x160
	0x03954274 RET
	0x03954278 BL 0x1C16F20
	0x0395427C BL 0x1C16F28
	0x03954280 ADRP X0, 0x7A4000
	0x03954284 LDR X0, [X0 + 0x528]
	0x03954288 BL 0x1C16D08
	0x0395428C BL 0x1C16F10
	0x03954290 MOV X19, X0
	0x03954294 ADRP X0, 0x7F9000
	0x03954298 LDR X0, [X0 + 0xE90]
	0x0395429C B 0x39542DC
	0x039542A0 ADRP X0, 0x7A4000
	0x039542A4 LDR X0, [X0 + 0x528]
	0x039542A8 BL 0x1C16D08
	0x039542AC BL 0x1C16F10
	0x039542B0 MOV X19, X0
	0x039542B4 ADRP X0, 0x7FA000
	0x039542B8 LDR X0, [X0 + 0x600]
	0x039542BC B 0x39542DC
	0x039542C0 ADRP X0, 0x7A4000
	0x039542C4 LDR X0, [X0 + 0x528]
	0x039542C8 BL 0x1C16D08
	0x039542CC BL 0x1C16F10
	0x039542D0 MOV X19, X0
	0x039542D4 ADRP X0, 0x7F9000
	0x039542D8 LDR X0, [X0 + 0x690]
	0x039542DC BL 0x1C16D08
	0x039542E0 MOV X1, X0
	0x039542E4 MOV X0, X19
	0x039542E8 MOV X2, X31
	0x039542EC BL 0x330E100
	0x039542F0 ADRP X0, 0x7FB000
	0x039542F4 LDR X0, [X0 + 0x388]
	0x039542F8 BL 0x1C16D08
	0x039542FC MOV X1, X0
	0x03954300 MOV X0, X19
	0x03954304 BL 0x1C16DEC
	0x03954308 CMP W1, 0x1
	0x0395430C MOV X19, X0
	0x03954310 B.NE 0x395439C
	0x03954314 MOV X0, X19
	0x03954318 BL 0x3EB1AD0
	0x0395431C MOV X19, X0
	0x03954320 ADRP X0, 0x7A5000
	0x03954324 LDR X0, [X0 + 0xCC0]
	0x03954328 BL 0x1C16D08
	0x0395432C LDR X8, [X19]
	0x03954330 LDR X1, [X8]
	0x03954334 BL 0x1C17270
	0x03954338 TBZ X0, 0x0, 0x3954374
	0x0395433C BL 0x3EB1AE0
	0x03954340 ADRP X0, 0x79F000
	0x03954344 LDR X0, [X0 + 0xA28]
	0x03954348 BL 0x1C16D08
	0x0395434C LDR W8, [X0 + 0xE0]
	0x03954350 CBNZ W8, 0x3954358
	0x03954354 BL 0x1C16DFC
	0x03954358 ADRP X0, 0x7FB000
	0x0395435C LDR X0, [X0 + 0x390]
	0x03954360 BL 0x1C16D08
	0x03954364 MOV X1, X31
	0x03954368 BL 0x3C06048
	0x0395436C MOV X21, X31
	0x03954370 B 0x3954244
	0x03954374 MOVZ W0, 0x8
	0x03954378 BL 0x3EB1AF0
	0x0395437C LDR X8, [X19]
	0x03954380 STR X8, [X0]
	0x03954384 ADRP X1, 0x560000
	0x03954388 ADD X1, X1, 0xE58
	0x0395438C MOV X2, X31
	0x03954390 BL 0x3EB1B00
	0x03954394 MOV X19, X0
	0x03954398 BL 0x3EB1AE0
	0x0395439C MOV X0, X19
	0x039543A0 BL 0x1D2C690
	0x039543A4 BL 0x1990590
	0x039543A8 STR X30, [X31 - 0x30]!
	0x039543AC STP X22, X21, [X31 + 0x10]
	0x039543B0 STP X20, X19, [X31 + 0x20]
	0x039543B4 ADRP X21, 0xA8D000
	0x039543B8 ADRP X22, 0x7FA000
	0x039543BC LDRB W8, [X21 + 0x9C0]
	0x039543C0 LDR X22, [X22 + 0x3F0]
	0x039543C4 MOV X20, X1
	0x039543C8 MOV X19, X0
	0x039543CC TBNZ X8, 0x0, 0x39543E4
	0x039543D0 ADRP X0, 0x7FA000
	0x039543D4 LDR X0, [X0 + 0x3F0]
	0x039543D8 BL 0x1C16CF4
	0x039543DC MOVZ W8, 0x1
	0x039543E0 STRB W8, [X21 + 0x9C0]
	0x039543E4 LDR X0, [X22]
	0x039543E8 MOVZ W1, 0x1
	0x039543EC BL 0x1C16D6C
	0x039543F0 CBZ X0, 0x3954418
	0x039543F4 LDR W8, [X0 + 0x18]
	0x039543F8 MOV X1, X0
	0x039543FC CBZ W8, 0x395441C
	0x03954400 STR X20, [X1 + 0x20]
	0x03954404 MOV X0, X19
	0x03954408 LDP X20, X19, [X31 + 0x20]
	0x0395440C LDP X22, X21, [X31 + 0x10]
	0x03954410 LDR X30, [X31], #0x30
	0x03954414 B 0x395C0F0
	0x03954418 BL 0x1C16F20
	0x0395441C BL 0x1C16F28
	0x03954420 STP X30, X23, [X31 - 0x30]!
	0x03954424 STP X22, X21, [X31 + 0x10]
	0x03954428 STP X20, X19, [X31 + 0x20]
	0x0395442C ADRP X22, 0xA8D000
	0x03954430 ADRP X23, 0x7FA000
	0x03954434 LDRB W8, [X22 + 0x999]
	0x03954438 LDR X23, [X23 + 0x540]
	0x0395443C MOV W19, W2
	0x03954440 MOV X21, X1
	0x03954444 MOV X20, X0
	0x03954448 TBNZ X8, 0x0, 0x3954460
	0x0395444C ADRP X0, 0x7FA000
	0x03954450 LDR X0, [X0 + 0x540]
	0x03954454 BL 0x1C16CF4
	0x03954458 MOVZ W8, 0x1
	0x0395445C STRB W8, [X22 + 0x999]
	0x03954460 LDR X0, [X23]
	0x03954464 MOVZ W1, 0x1
	0x03954468 BL 0x1C16D6C
	0x0395446C CBZ X0, 0x3954498
	0x03954470 LDR W8, [X0 + 0x18]
	0x03954474 MOV X1, X0
	0x03954478 CBZ W8, 0x395449C
	0x0395447C STR X21, [X1 + 0x20]
	0x03954480 MOV X0, X20
	0x03954484 MOV W2, W19
	0x03954488 LDP X20, X19, [X31 + 0x20]
	0x0395448C LDP X22, X21, [X31 + 0x10]
	0x03954490 LDP X30, X23, [X31], #0x30
	0x03954494 B 0x39544A0
	0x03954498 BL 0x1C16F20
	0x0395449C BL 0x1C16F28
	0x039544A0 SUB X31, X31, 0x1E0
	0x039544A4 STR D8, [X31 + 0x170]
	0x039544A8 STP X29, X30, [X31 + 0x180]
	0x039544AC STP X28, X27, [X31 + 0x190]
	0x039544B0 STP X26, X25, [X31 + 0x1A0]
	0x039544B4 STP X24, X23, [X31 + 0x1B0]
	0x039544B8 STP X22, X21, [X31 + 0x1C0]
	0x039544BC STP X20, X19, [X31 + 0x1D0]
	0x039544C0 ADRP X22, 0xA8D000
	0x039544C4 ADRP X21, 0x7FB000
	0x039544C8 ADRP X20, 0x79F000
	0x039544CC LDRB W8, [X22 + 0x99A]
	0x039544D0 LDR X21, [X21 + 0x398]
	0x039544D4 LDR X20, [X20 + 0x598]
	0x039544D8 MOV W25, W2
	0x039544DC MOV X19, X1
	0x039544E0 MOV X23, X0
	0x039544E4 TBNZ X8, 0x0, 0x3954808

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+272], D13
	003 Move [X31+280], D12
	004 Move [X31+288], D11
	005 Move [X31+296], D10
	006 Move [X31+304], D9
	007 Move [X31+312], D8
	008 Move [X31+320], X29
	009 Move [X31+328], X30
	010 Move [X31+336], X28
	011 Move [X31+344], X27
	012 Move [X31+352], X26
	013 Move [X31+360], X25
	014 Move [X31+368], X24
	015 Move [X31+376], X23
	016 Move [X31+384], X22
	017 Move [X31+392], X21
	018 Move [X31+400], X20
	019 Move [X31+408], X19
	020 Move X24, 0xA8F000
	021 Move [X31+264], X1
	022 Move X23, 0x7A1000
	023 Move W8, [X24+2455]
	024 Move X23, [X23+1432]
	025 Move W22, W3
	026 Move X21, X2
	027 Move X20, X1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {80}
	033 Move X0, 0x7FC000
	034 Move X0, [X0+3328]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A6000
	037 Move X0, [X0+320]
	038 Call 0x1C17CF4
	039 Move X0, 0x7C9000
	040 Move X0, [X0+1536]
	041 Call 0x1C17CF4
	042 Move X0, 0x7FD000
	043 Move X0, [X0+808]
	044 Call 0x1C17CF4
	045 Move X0, 0x7FC000
	046 Move X0, [X0+1376]
	047 Call 0x1C17CF4
	048 Move X0, 0x7A2000
	049 Move X0, [X0+3672]
	050 Call 0x1C17CF4
	051 Move X0, 0x7FD000
	052 Move X0, [X0+816]
	053 Call 0x1C17CF4
	054 Move X0, 0x7FB000
	055 Move X0, [X0+2768]
	056 Call 0x1C17CF4
	057 Move X0, 0x7A1000
	058 Move X0, [X0+1432]
	059 Call 0x1C17CF4
	060 Move X0, 0x7FD000
	061 Move X0, [X0+824]
	062 Call 0x1C17CF4
	063 Move X0, 0x7FD000
	064 Move X0, [X0+832]
	065 Call 0x1C17CF4
	066 Move X0, 0x7FB000
	067 Move X0, [X0+2696]
	068 Call 0x1C17CF4
	069 Move X0, 0x7A3000
	070 Move X0, [X0+2480]
	071 Call 0x1C17CF4
	072 Move X0, 0x7FC000
	073 Move X0, [X0+72]
	074 Call 0x1C17CF4
	075 Move X0, 0x7FD000
	076 Move X0, [X0+840]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X24+2455], W8
	080 Move X0, [X23]
	081 NotImplemented "Instruction MOVI not yet implemented."
	082 Move [X31+224], V0
	083 Move [X31+232], V0
	084 Move [X31+208], X31
	085 Move [X31+216], X31
	086 Move [X31+200], X31
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X19
	092 Move X1, X31
	093 Move X2, X31
	094 Call Object.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {1329}
	099 Compare X19, 0
	100 JumpIfEqual {1327}
	101 Move X26, [X19+48]
	102 Move X0, X19
	103 Move X1, X31
	104 Call ProBuilderMesh.get_sharedVertexLookup, X0
	105 Move X24, X0
	106 Move TEMP, X22
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {200}
	110 Move X23, [X19+40]
	111 Compare X23, 0
	112 JumpIfEqual {1327}
	113 Move W8, [X23+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W25, W31
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X8, X23, W25
	118 Move X22, [X8+32]
	119 Compare X22, 0
	120 JumpIfEqual {1327}
	121 Move X0, X22
	122 Move X1, X31
	123 Call Face.get_edgesInternal, X0
	124 Move X1, X0
	125 Move X0, X19
	126 Move X2, X20
	127 Move X3, X31
	128 Call EdgeUtility.IndexOf, X0, X1, X2
	129 Move TEMP, X0
	130 And TEMP, TEMP, -2147483648
	131 Compare TEMP, -2147483648
	132 JumpIfEqual {145}
	133 Move X0, X22
	134 Move X1, X31
	135 Call Face.get_edgesInternal, X0
	136 Move X1, X0
	137 Move X0, X19
	138 Move X2, X21
	139 Move X3, X31
	140 Call EdgeUtility.IndexOf, X0, X1, X2
	141 Move TEMP, X0
	142 And TEMP, TEMP, -2147483648
	143 Compare TEMP, -2147483648
	144 JumpIfNotEqual {226}
	145 Move W8, [X23+24]
	146 Add W25, W25, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X19+88]
	149 Move W1, 32
	150 Move X0, X19
	151 Move X2, X31
	152 Call ProBuilderMesh.HasArrays, X0, X1
	153 Move W22, W0
	154 Move X27, X31
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {160}
	159 Move X27, [X19+136]
	160 Add X8, X31, 160
	161 Move X0, X31
	162 Call AutoUnwrapSettings.get_tile
	163 Move V0, [X31+160]
	164 Move V1, [X31+176]
	165 Move X1, [X31+264]
	166 Add X2, X31, 208
	167 Move X0, X19
	168 Move X3, X31
	169 Move [X31+224], V0
	170 Move [X31+232], V1
	171 Call EdgeUtility.ValidateEdge, X0, X1, X2
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {185}
	176 Add X2, X31, 208
	177 Move X0, X19
	178 Move X1, X21
	179 Move X3, X31
	180 Call EdgeUtility.ValidateEdge, X0, X1, X2
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {239}
	185 Move X8, [X31+208]
	186 Compare X8, 0
	187 JumpIfEqual {1327}
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 Add X0, X31, 224
	191 Add X1, X31, 128
	192 Move X2, X31
	193 Move [X31+128], V1
	194 Move [X31+136], V0
	195 Call AutoUnwrapSettings..ctor, X0, X1
	196 Move X8, [X31+208]
	197 Compare X8, 0
	198 JumpIfEqual {1327}
	199 Move W29, [X8+72]
	200 Move X22, 0x7FD000
	201 Move X22, [X22+808]
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X19
	208 Move X1, X20
	209 Call ElementSelection.GetNeighborFaces, X0, X1
	210 Compare X0, 0
	211 JumpIfEqual {1327}
	212 Move W8, [X0+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, [X22]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X19
	220 Move X1, X21
	221 Call ElementSelection.GetNeighborFaces, X0, X1
	222 Compare X0, 0
	223 JumpIfEqual {1327}
	224 Move W8, [X0+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X8, 0x7FB000
	227 Move X8, [X8+2768]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X8, 0x7FD000
	234 Move X8, [X8+840]
	235 Move X1, X31
	236 Move X0, [X8]
	237 Call Log.Warning, X0
	238 Move X26, X31
	239 Move W29, W31
	240 Move X23, 0x7C9000
	241 Move X23, [X23+1536]
	242 Move X9, X21
	243 ShiftRight X9, 32
	244 And X9, X9, 0x7FFFFFFF
	245 Move [X31+56], X9
	246 Move X0, [X23]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Add X0, X31, 264
	252 Move W1, W21
	253 Move X2, X24
	254 Move X3, X31
	255 Call Edge.Contains, X0, X1, X2
	256 Move [X31+52], W29
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {275}
	261 Move X0, [X23]
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {266}
	265 Call 0x1C17DFC
	266 Add X0, X31, 264
	267 Move X1, [X31+56]
	268 Move X2, X24
	269 Move X3, X31
	270 Call Edge.Contains, X0, X1, X2
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {670}
	275 Move X8, 0x7A3000
	276 Move X8, [X8+2480]
	277 Move W1, 3
	278 Move X0, [X8]
	279 Call 0x1C17D6C
	280 Move X8, 0x7A6000
	281 Move X8, [X8+320]
	282 Move X24, X0
	283 Move W1, 3
	284 Move X8, [X8]
	285 Move X0, X8
	286 Call 0x1C17D6C
	287 Move X8, 0x7A2000
	288 Move X8, [X8+3672]
	289 Move [X31+32], X0
	290 Move W1, 3
	291 Move X8, [X8]
	292 Move X0, X8
	293 Call 0x1C17D6C
	294 Move W1, [X31+264]
	295 Move X25, X0
	296 Move X0, X19
	297 Move X2, X31
	298 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	299 Compare X26, 0
	300 JumpIfEqual {1327}
	301 Move W8, [X26+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Add X8, X26, W0
	304 Move X8, [X8+32]
	305 Compare X8, 0
	306 JumpIfEqual {1327}
	307 Move X23, 0x7FC000
	308 Move X0, [X8+16]
	309 Move X23, [X23+3328]
	310 Move W1, W21
	311 Move W28, W22
	312 Move X2, [X23]
	313 Call Array.IndexOf, X0, X1
	314 Move W1, [X31+264]
	315 Move W22, W0
	316 Move X0, X19
	317 Move X2, X31
	318 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	319 Move W8, [X26+24]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Add X8, X26, W0
	322 Move X8, [X8+32]
	323 Compare X8, 0
	324 JumpIfEqual {1327}
	325 Move X0, [X8+16]
	326 Move X2, [X23]
	327 Move X1, [X31+56]
	328 Call Array.IndexOf, X0, X1
	329 Move W1, [X31+268]
	330 Move [X31+40], W0
	331 Move X0, X19
	332 Move X2, X31
	333 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	334 Move W8, [X26+24]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Add X8, X26, W0
	337 Move X8, [X8+32]
	338 Compare X8, 0
	339 JumpIfEqual {1327}
	340 Move X0, [X8+16]
	341 Move X2, [X23]
	342 Move W1, W21
	343 Call Array.IndexOf, X0, X1
	344 Move W1, [X31+268]
	345 Move W29, W0
	346 Move X0, X19
	347 Move X2, X31
	348 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	349 Move W8, [X26+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Add X8, X26, W0
	352 Move X8, [X8+32]
	353 Compare X8, 0
	354 JumpIfEqual {1327}
	355 Move X0, [X8+16]
	356 Move X2, [X23]
	357 Move X1, [X31+56]
	358 Call Array.IndexOf, X0, X1
	359 Move W26, W22
	360 Move TEMP, X22
	361 And TEMP, TEMP, -2147483648
	362 Compare TEMP, -2147483648
	363 JumpIfEqual {473}
	364 Compare X20, 0
	365 JumpIfEqual {1327}
	366 Move X9, X20
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Move W9, [X20+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move W22, W28
	371 Move X28, X25
	372 Move X25, [X31+32]
	373 Compare X24, 0
	374 JumpIfEqual {1327}
	375 Move W9, [X24+24]
	376 Compare W9, 0
	377 JumpIfEqual {1328}
	378 Move W9, 12
	379 NotImplemented "Instruction MADD not yet implemented."
	380 Move V0, [X8+32]
	381 Move V1, [X8+40]
	382 Move [X24+32], D0
	383 Move [X24+40], S1
	384 Move TEMP, X22
	385 And TEMP, TEMP, 1
	386 Compare TEMP, 1
	387 JumpIfNotEqual {401}
	388 Compare X27, 0
	389 JumpIfEqual {1327}
	390 NotImplemented "Instruction LDRSW not yet implemented."
	391 Move W9, [X27+24]
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Compare X25, 0
	394 JumpIfEqual {1327}
	395 Move W9, [X25+24]
	396 Compare W9, 0
	397 JumpIfEqual {1328}
	398 Add X8, X27, X8
	399 Move V0, [X8+2]
	400 Move [X25+2], V0
	401 Move W1, [X31+264]
	402 Move X0, X19
	403 Move X2, X31
	404 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	405 Compare X28, 0
	406 JumpIfEqual {1327}
	407 Move W8, [X28+24]
	408 Compare W8, 0
	409 JumpIfEqual {1328}
	410 Move [X28+32], W0
	411 NotImplemented "Instruction LDRSW not yet implemented."
	412 Move W9, [X20+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move W9, [X24+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move W9, 12
	417 NotImplemented "Instruction MADD not yet implemented."
	418 Move V0, [X8+32]
	419 Move V1, [X8+40]
	420 Move [X24+44], D0
	421 Move [X24+52], S1
	422 Move TEMP, X22
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfNotEqual {438}
	426 Compare X27, 0
	427 JumpIfEqual {1327}
	428 NotImplemented "Instruction LDRSW not yet implemented."
	429 Move W9, [X27+24]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 Compare X25, 0
	432 JumpIfEqual {1327}
	433 Move W9, [X25+24]
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Add X8, X27, X8
	436 Move V0, [X8+2]
	437 Move [X25+3], V0
	438 Move W1, [X31+268]
	439 Move X0, X19
	440 Move X2, X31
	441 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	442 Move W8, [X28+24]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move [X28+36], W0
	445 Move W9, [X20+24]
	446 NotImplemented "Instruction SBFM not yet implemented."
	447 NotImplemented "Instruction CMP not yet implemented."
	448 Move W9, [X24+24]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move W9, 12
	451 NotImplemented "Instruction MADD not yet implemented."
	452 Move V0, [X9+32]
	453 Move V1, [X9+40]
	454 Move [X24+56], D0
	455 Move [X24+64], S1
	456 Move TEMP, X22
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfNotEqual {471}
	460 Compare X27, 0
	461 JumpIfEqual {1327}
	462 Move W9, [X27+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Compare X25, 0
	465 JumpIfEqual {1327}
	466 Move W9, [X25+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add X8, X27, X8
	469 Move V0, [X8+2]
	470 Move [X25+4], V0
	471 Move X0, X19
	472 Move X1, [X31+56]
	473 Move W8, [X31+40]
	474 Move W22, W28
	475 Move TEMP, X8
	476 And TEMP, TEMP, -2147483648
	477 Compare TEMP, -2147483648
	478 JumpIfEqual {1170}
	479 Compare X20, 0
	480 JumpIfEqual {1327}
	481 NotImplemented "Instruction LDRSW not yet implemented."
	482 Move W9, [X20+24]
	483 Move X28, X25
	484 Move X25, [X31+32]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Compare X24, 0
	487 JumpIfEqual {1327}
	488 Move W9, [X24+24]
	489 Compare W9, 0
	490 JumpIfEqual {1328}
	491 Move W9, 12
	492 NotImplemented "Instruction MADD not yet implemented."
	493 Move V0, [X8+32]
	494 Move V1, [X8+40]
	495 Move [X24+32], D0
	496 Move [X24+40], S1
	497 Move TEMP, X22
	498 And TEMP, TEMP, 1
	499 Compare TEMP, 1
	500 JumpIfNotEqual {514}
	501 Compare X27, 0
	502 JumpIfEqual {1327}
	503 NotImplemented "Instruction LDRSW not yet implemented."
	504 Move W9, [X27+24]
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Compare X25, 0
	507 JumpIfEqual {1327}
	508 Move W9, [X25+24]
	509 Compare W9, 0
	510 JumpIfEqual {1328}
	511 Add X8, X27, X8
	512 Move V0, [X8+2]
	513 Move [X25+2], V0
	514 Move W1, [X31+264]
	515 Move X0, X19
	516 Move X2, X31
	517 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	518 Compare X28, 0
	519 JumpIfEqual {1327}
	520 Move W8, [X28+24]
	521 Compare W8, 0
	522 JumpIfEqual {1328}
	523 Move [X28+32], W0
	524 NotImplemented "Instruction LDRSW not yet implemented."
	525 Move W9, [X20+24]
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Move W9, [X24+24]
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Move W9, 12
	530 NotImplemented "Instruction MADD not yet implemented."
	531 Move V0, [X8+32]
	532 Move V1, [X8+40]
	533 Move [X24+44], D0
	534 Move [X24+52], S1
	535 Move TEMP, X22
	536 And TEMP, TEMP, 1
	537 Compare TEMP, 1
	538 JumpIfNotEqual {551}
	539 Compare X27, 0
	540 JumpIfEqual {1327}
	541 NotImplemented "Instruction LDRSW not yet implemented."
	542 Move W9, [X27+24]
	543 NotImplemented "Instruction CMP not yet implemented."
	544 Compare X25, 0
	545 JumpIfEqual {1327}
	546 Move W9, [X25+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Add X8, X27, X8
	549 Move V0, [X8+2]
	550 Move [X25+3], V0
	551 Move W1, [X31+268]
	552 Move X0, X19
	553 Move X2, X31
	554 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	555 Move W8, [X28+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move [X28+36], W0
	558 Move W8, [X20+24]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move W8, [X24+24]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X8, W21
	563 Move W9, 12
	564 NotImplemented "Instruction MADD not yet implemented."
	565 Move V0, [X9+32]
	566 Move V1, [X9+40]
	567 Move [X24+56], D0
	568 Move [X24+64], S1
	569 Move TEMP, X22
	570 And TEMP, TEMP, 1
	571 Compare TEMP, 1
	572 JumpIfNotEqual {584}
	573 Compare X27, 0
	574 JumpIfEqual {1327}
	575 Move W9, [X27+24]
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Compare X25, 0
	578 JumpIfEqual {1327}
	579 Move W9, [X25+24]
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Add X8, X27, X8
	582 Move V0, [X8+2]
	583 Move [X25+4], V0
	584 Move X0, X19
	585 Move W1, W21
	586 Move X2, X31
	587 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	588 Move W8, [X28+24]
	589 NotImplemented "Instruction CMP not yet implemented."
	590 And W31, W22, 1
	591 Move [X28+40], W0
	592 NotImplemented "Instruction CSEL not yet implemented."
	593 Move X8, 0x7FB000
	594 Move X8, [X8+2696]
	595 Move W1, [X24+24]
	596 Move X0, [X8]
	597 Call 0x1C17D6C
	598 Move X20, 0x7FC000
	599 Move X20, [X20+72]
	600 Move W1, [X24+24]
	601 Move X22, X0
	602 Move X8, [X20]
	603 Move X0, X8
	604 Call 0x1C17D6C
	605 Move X8, [X20]
	606 Move W1, [X24+24]
	607 Move X23, X0
	608 Move X0, X8
	609 Call 0x1C17D6C
	610 Move X8, 0x7A2000
	611 Move X8, [X8+3672]
	612 Move X27, X0
	613 Move W1, 3
	614 Move X8, [X8]
	615 Move X0, X8
	616 Call 0x1C17D6C
	617 Compare X0, 0
	618 JumpIfEqual {1327}
	619 Move W9, [X31+40]
	620 Move W8, [X0+24]
	621 Move X29, X0
	622 And W31, W9, W26
	623 Compare W8, 0
	624 JumpIfEqual {1328}
	625 Move W9, 2
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move [X29+32], W9
	628 Move W8, 1
	629 Move [X29+36], W8
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move W9, 1
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move [X29+36], W9
	634 Move W8, 2
	635 Move [X29+40], W8
	636 Move X8, 0x7FC000
	637 Move V0, [X31+224]
	638 Move V1, [X31+240]
	639 Move X8, [X8+1376]
	640 Move [X31+160], V0
	641 Move [X31+168], V1
	642 Move X0, [X8]
	643 Call 0x1C17F10
	644 Move V0, [X31+160]
	645 Move V1, [X31+176]
	646 Move W2, [X31+52]
	647 Add X3, X31, 96
	648 Move TEMP, 0
	649 Not TEMP
	650 Move W5, TEMP
	651 Move TEMP, 0
	652 Not TEMP
	653 Move W6, TEMP
	654 Move X1, X29
	655 Move W4, W31
	656 Move W7, W31
	657 Move X26, X0
	658 Move [X31+96], V0
	659 Move [X31+104], V1
	660 Move [X31], X31
	661 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	662 Move X0, X19
	663 Move X1, X24
	664 Move X2, X21
	665 Move X3, X22
	666 Move X4, X23
	667 Move X5, X27
	668 Move X6, X26
	669 Move X7, X28
	670 Move X27, 0x7A3000
	671 Move X27, [X27+2480]
	672 Move W1, 4
	673 Move X0, [X27]
	674 Call 0x1C17D6C
	675 Move X8, 0x7A6000
	676 Move X8, [X8+320]
	677 Move X24, X0
	678 Move W1, 4
	679 Move X8, [X8]
	680 Move X0, X8
	681 Call 0x1C17D6C
	682 Move X8, 0x7A2000
	683 Move X8, [X8+3672]
	684 Move X23, X0
	685 Move W1, 4
	686 Move X8, [X8]
	687 Move X0, X8
	688 Call 0x1C17D6C
	689 Compare X20, 0
	690 JumpIfEqual {1327}
	691 NotImplemented "Instruction LDRSW not yet implemented."
	692 Move W9, [X20+24]
	693 NotImplemented "Instruction CMP not yet implemented."
	694 Compare X24, 0
	695 JumpIfEqual {1327}
	696 Move W9, [X24+24]
	697 Compare W9, 0
	698 JumpIfEqual {1328}
	699 Move W9, 12
	700 NotImplemented "Instruction MADD not yet implemented."
	701 Move V0, [X8+32]
	702 Move V1, [X8+40]
	703 Move X25, X0
	704 Move [X24+32], D0
	705 Move [X24+40], S1
	706 Move TEMP, X22
	707 And TEMP, TEMP, 1
	708 Compare TEMP, 1
	709 JumpIfNotEqual {724}
	710 Move X8, [X19+136]
	711 Compare X8, 0
	712 JumpIfEqual {1327}
	713 NotImplemented "Instruction LDRSW not yet implemented."
	714 Move W10, [X8+24]
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Compare X23, 0
	717 JumpIfEqual {1327}
	718 Move W10, [X23+24]
	719 Compare W10, 0
	720 JumpIfEqual {1328}
	721 Add X8, X8, X9
	722 Move V0, [X8+2]
	723 Move [X23+2], V0
	724 Move W1, [X31+264]
	725 Move X0, X19
	726 Move X2, X31
	727 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	728 Compare X25, 0
	729 JumpIfEqual {1327}
	730 Move W8, [X25+24]
	731 Compare W8, 0
	732 JumpIfEqual {1328}
	733 Move [X25+32], W0
	734 NotImplemented "Instruction LDRSW not yet implemented."
	735 Move W9, [X20+24]
	736 NotImplemented "Instruction CMP not yet implemented."
	737 Move W9, [X24+24]
	738 NotImplemented "Instruction CMP not yet implemented."
	739 Move W9, 12
	740 NotImplemented "Instruction MADD not yet implemented."
	741 Move V0, [X8+32]
	742 Move V1, [X8+40]
	743 Move [X24+44], D0
	744 Move [X24+52], S1
	745 Move TEMP, X22
	746 And TEMP, TEMP, 1
	747 Compare TEMP, 1
	748 JumpIfNotEqual {762}
	749 Move X8, [X19+136]
	750 Compare X8, 0
	751 JumpIfEqual {1327}
	752 NotImplemented "Instruction LDRSW not yet implemented."
	753 Move W10, [X8+24]
	754 NotImplemented "Instruction CMP not yet implemented."
	755 Compare X23, 0
	756 JumpIfEqual {1327}
	757 Move W10, [X23+24]
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Add X8, X8, X9
	760 Move V0, [X8+2]
	761 Move [X23+3], V0
	762 Move W1, [X31+268]
	763 Move X0, X19
	764 Move X2, X31
	765 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	766 Move W8, [X25+24]
	767 NotImplemented "Instruction CMP not yet implemented."
	768 Move [X25+36], W0
	769 Move W10, [X20+24]
	770 NotImplemented "Instruction CMP not yet implemented."
	771 NotImplemented "Instruction LDRSW not yet implemented."
	772 NotImplemented "Instruction CMP not yet implemented."
	773 NotImplemented "Instruction LDRSW not yet implemented."
	774 Move [X31+32], X23
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Move X26, W21
	777 Move W10, 12
	778 Move W11, 12
	779 Add X12, X20, 32
	780 Move W13, 12
	781 NotImplemented "Instruction MADD not yet implemented."
	782 NotImplemented "Instruction MADD not yet implemented."
	783 NotImplemented "Instruction MADD not yet implemented."
	784 NotImplemented "Instruction MADD not yet implemented."
	785 Add X13, X10, 32
	786 Add X28, X10, 40
	787 Move V0, [X11+4]
	788 Move S1, [X8]
	789 Move S2, [X8+4]
	790 Move V3, [X8+8]
	791 Move S4, [X9+32]
	792 Move S5, [X9+36]
	793 Move V6, [X9+40]
	794 Move V7, [X28]
	795 Move V16, [X13]
	796 Move X23, 0xA86000
	797 Move W12, [X23+1925]
	798 Subtract S0, S0, S2
	799 Subtract S4, S4, S1
	800 Subtract S2, S5, S2
	801 Subtract S5, S6, S3
	802 Subtract S1, S16, S1
	803 Subtract S3, S7, S3
	804 Multiply S8, S0, S5
	805 Multiply S9, S3, S2
	806 Multiply S10, S3, S4
	807 Multiply S11, S1, S5
	808 Multiply S12, S1, S2
	809 Multiply S13, S0, S4
	810 Move [X31+40], X13
	811 Compare W12, 0
	812 JumpIfNotEqual {818}
	813 Move X0, 0x7A1000
	814 Move X0, [X0+1448]
	815 Call 0x1C17CF4
	816 Move W8, 1
	817 Move [X23+1925], W8
	818 Move X8, 0x7A1000
	819 Move X8, [X8+1448]
	820 Subtract S8, S8, S9
	821 Subtract S9, S10, S11
	822 Subtract S10, S12, S13
	823 Move X0, [X8]
	824 Move W8, [X0+224]
	825 Compare W8, 0
	826 JumpIfNotEqual {828}
	827 Call 0x1C17DFC
	828 Multiply S0, S8, S8
	829 Multiply S1, S9, S9
	830 Move X8, -48660480
	831 Add S0, S0, S1
	832 Move V1, [X8+380]
	833 Multiply S2, S10, S10
	834 Add S0, S2, S0
	835 NotImplemented "Instruction FSQRT not yet implemented."
	836 NotImplemented "Instruction FCMP not yet implemented."
	837 NotImplemented "Instruction FDIV not yet implemented."
	838 NotImplemented "Instruction FDIV not yet implemented."
	839 NotImplemented "Instruction FDIV not yet implemented."
	840 Move X23, 0xA86000
	841 Move W8, [X23+1923]
	842 Compare W8, 0
	843 JumpIfNotEqual {849}
	844 Move X0, 0x7A1000
	845 Move X0, [X0+1440]
	846 Call 0x1C17CF4
	847 Move W8, 1
	848 Move [X23+1923], W8
	849 Move X8, 0x7A1000
	850 Move X8, [X8+1440]
	851 Move X8, [X8]
	852 Move X8, [X8+184]
	853 Move S8, [X8]
	854 Move S9, [X8+4]
	855 Move V10, [X8+8]
	856 Move X0, [X27]
	857 Move W1, 4
	858 Call 0x1C17D6C
	859 NotImplemented "Instruction LDRSW not yet implemented."
	860 Move W8, [X20+24]
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Compare X0, 0
	863 JumpIfEqual {1327}
	864 Move W8, [X0+24]
	865 Compare W8, 0
	866 JumpIfEqual {1328}
	867 Move W10, 12
	868 NotImplemented "Instruction MADD not yet implemented."
	869 Move V0, [X9+32]
	870 Move V1, [X9+40]
	871 Move [X0+32], D0
	872 Move [X0+40], S1
	873 NotImplemented "Instruction LDRSW not yet implemented."
	874 Move W10, [X20+24]
	875 NotImplemented "Instruction CMP not yet implemented."
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Move W10, 12
	878 NotImplemented "Instruction MADD not yet implemented."
	879 Move V0, [X9+32]
	880 Move V1, [X9+40]
	881 Move [X0+44], D0
	882 Move [X0+52], S1
	883 Move W9, [X20+24]
	884 NotImplemented "Instruction CMP not yet implemented."
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move [X31+16], X26
	887 Move X9, [X31+40]
	888 Move V1, [X28]
	889 NotImplemented "Instruction SBFM not yet implemented."
	890 Move V0, [X9]
	891 Move [X0+64], S1
	892 Move [X0+56], D0
	893 Move W9, [X20+24]
	894 NotImplemented "Instruction CMP not yet implemented."
	895 NotImplemented "Instruction CMP not yet implemented."
	896 Move [X31+24], X28
	897 Move W8, 12
	898 NotImplemented "Instruction MADD not yet implemented."
	899 Add X28, X8, 32
	900 Add X29, X8, 40
	901 Move V0, [X28]
	902 Move V1, [X29]
	903 Move X1, X31
	904 Move V2, V10
	905 Move [X0+68], D0
	906 Move [X0+76], S1
	907 Move V0, V8
	908 Move V1, V9
	909 Move X2, X31
	910 Call Projection.PlanarProject, X0, X1, X2
	911 Move X23, 0xA87000
	912 Move W8, [X23+1935]
	913 Move X27, X0
	914 Compare W8, 0
	915 JumpIfNotEqual {921}
	916 Move X0, 0x7A9000
	917 Move X0, [X0+3848]
	918 Call 0x1C17CF4
	919 Move W8, 1
	920 Move [X23+1935], W8
	921 Move X8, 0x7A9000
	922 Move X8, [X8+3848]
	923 Move X8, [X8]
	924 Move X8, [X8+184]
	925 Move V0, [X8]
	926 Move [X31+200], D0
	927 Compare X27, 0
	928 JumpIfEqual {1327}
	929 Move W8, [X27+24]
	930 Move X23, [X31+32]
	931 Compare W8, 0
	932 JumpIfEqual {1328}
	933 NotImplemented "Instruction CMP not yet implemented."
	934 NotImplemented "Instruction CMP not yet implemented."
	935 Move S0, [X27+32]
	936 Move S1, [X27+36]
	937 Move S2, [X27+48]
	938 Move S3, [X27+52]
	939 Move S4, [X27+40]
	940 Move S5, [X27+44]
	941 Move S6, [X27+56]
	942 Move S7, [X27+60]
	943 Add X0, X31, 200
	944 Move X1, X31
	945 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3, X4
	946 Move W8, [X20+24]
	947 Move TEMP, X0
	948 And TEMP, TEMP, 1
	949 Compare TEMP, 1
	950 JumpIfNotEqual {1017}
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Move W8, [X24+24]
	953 NotImplemented "Instruction CMP not yet implemented."
	954 Move V0, [X28]
	955 Move V1, [X29]
	956 Move W29, [X31+52]
	957 Move X27, [X31+24]
	958 Move [X24+56], D0
	959 Move [X24+64], S1
	960 Move TEMP, X22
	961 And TEMP, TEMP, 1
	962 Compare TEMP, 1
	963 JumpIfNotEqual {976}
	964 Move X8, [X19+136]
	965 Compare X8, 0
	966 JumpIfEqual {1327}
	967 Move W9, [X8+24]
	968 NotImplemented "Instruction CMP not yet implemented."
	969 Compare X23, 0
	970 JumpIfEqual {1327}
	971 Move W9, [X23+24]
	972 NotImplemented "Instruction CMP not yet implemented."
	973 Add X8, X8, X26
	974 Move V0, [X8+2]
	975 Move [X23+4], V0
	976 Move X0, X19
	977 Move X1, [X31+56]
	978 Move X2, X31
	979 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	980 Move W8, [X25+24]
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Move [X25+40], W0
	983 Move W8, [X20+24]
	984 Move X26, 0x7A2000
	985 Move X26, [X26+3672]
	986 NotImplemented "Instruction CMP not yet implemented."
	987 Move W8, [X24+24]
	988 NotImplemented "Instruction CMP not yet implemented."
	989 Move X8, [X31+40]
	990 Move V1, [X27]
	991 Move V0, [X8]
	992 Move [X24+76], S1
	993 Move [X24+68], D0
	994 Move TEMP, X22
	995 And TEMP, TEMP, 1
	996 Compare TEMP, 1
	997 JumpIfNotEqual {1011}
	998 Move X8, [X19+136]
	999 Compare X8, 0
	1000 JumpIfEqual {1327}
	1001 Move W9, [X8+24]
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 Compare X23, 0
	1004 JumpIfEqual {1327}
	1005 Move W9, [X23+24]
	1006 NotImplemented "Instruction CMP not yet implemented."
	1007 Move X9, [X31+16]
	1008 Add X8, X8, X9
	1009 Move V0, [X8+2]
	1010 Move [X23+5], V0
	1011 Move X0, X19
	1012 Move W1, W21
	1013 Move X2, X31
	1014 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	1015 Move W8, [X25+24]
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 NotImplemented "Instruction CMP not yet implemented."
	1018 Move W8, [X24+24]
	1019 NotImplemented "Instruction CMP not yet implemented."
	1020 Move X8, [X31+40]
	1021 Move V0, [X8]
	1022 Move X8, [X31+24]
	1023 Move V1, [X8]
	1024 Move [X24+56], D0
	1025 Move [X24+64], S1
	1026 Move TEMP, X22
	1027 And TEMP, TEMP, 1
	1028 Compare TEMP, 1
	1029 JumpIfNotEqual {1043}
	1030 Move X8, [X19+136]
	1031 Compare X8, 0
	1032 JumpIfEqual {1327}
	1033 Move W9, [X8+24]
	1034 NotImplemented "Instruction CMP not yet implemented."
	1035 Compare X23, 0
	1036 JumpIfEqual {1327}
	1037 Move W9, [X23+24]
	1038 NotImplemented "Instruction CMP not yet implemented."
	1039 Move X9, [X31+16]
	1040 Add X8, X8, X9
	1041 Move V0, [X8+2]
	1042 Move [X23+4], V0
	1043 Move X0, X19
	1044 Move W1, W21
	1045 Move X2, X31
	1046 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	1047 Move W8, [X25+24]
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Move [X25+40], W0
	1050 Move W8, [X20+24]
	1051 NotImplemented "Instruction CMP not yet implemented."
	1052 Move W8, [X24+24]
	1053 NotImplemented "Instruction CMP not yet implemented."
	1054 Move V0, [X28]
	1055 Move V1, [X29]
	1056 Move W29, [X31+52]
	1057 Move [X24+68], D0
	1058 Move [X24+76], S1
	1059 Move TEMP, X22
	1060 And TEMP, TEMP, 1
	1061 Compare TEMP, 1
	1062 JumpIfNotEqual {1075}
	1063 Move X8, [X19+136]
	1064 Compare X8, 0
	1065 JumpIfEqual {1327}
	1066 Move W9, [X8+24]
	1067 NotImplemented "Instruction CMP not yet implemented."
	1068 Compare X23, 0
	1069 JumpIfEqual {1327}
	1070 Move W9, [X23+24]
	1071 NotImplemented "Instruction CMP not yet implemented."
	1072 Add X8, X8, X26
	1073 Move V0, [X8+2]
	1074 Move [X23+5], V0
	1075 Move X0, X19
	1076 Move X1, [X31+56]
	1077 Move X2, X31
	1078 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	1079 Move W8, [X25+24]
	1080 NotImplemented "Instruction CMP not yet implemented."
	1081 Move X26, 0x7A1000
	1082 Move X26, [X26+3672]
	1083 Move [X25+44], W0
	1084 Move X8, 0x7FA000
	1085 Move X8, [X8+2696]
	1086 Move W1, [X24+24]
	1087 And W31, W22, 1
	1088 NotImplemented "Instruction CSEL not yet implemented."
	1089 Move X0, [X8]
	1090 Call 0x1C17D6C
	1091 Move X20, 0x7FB000
	1092 Move X20, [X20+72]
	1093 Move W1, [X24+24]
	1094 Move X22, X0
	1095 Move X8, [X20]
	1096 Move X0, X8
	1097 Call 0x1C17D6C
	1098 Move X8, [X20]
	1099 Move W1, [X24+24]
	1100 Move X23, X0
	1101 Move X0, X8
	1102 Call 0x1C17D6C
	1103 Move X8, [X26]
	1104 Move X27, X0
	1105 Move W1, 6
	1106 Move X0, X8
	1107 Call 0x1C17D6C
	1108 Move X8, 0x7FC000
	1109 Move X8, [X8+832]
	1110 Move X2, X31
	1111 Move X28, X0
	1112 Move X1, [X8]
	1113 Call RuntimeHelpers.InitializeArray, X0, X1
	1114 Move X8, 0x7FB000
	1115 Move V0, [X31+224]
	1116 Move V1, [X31+240]
	1117 Move X8, [X8+1376]
	1118 Move [X31+160], V0
	1119 Move [X31+168], V1
	1120 Move X0, [X8]
	1121 Call 0x1C17F10
	1122 Move V0, [X31+160]
	1123 Move V1, [X31+176]
	1124 Add X3, X31, 64
	1125 Move TEMP, 0
	1126 Not TEMP
	1127 Move W5, TEMP
	1128 Move TEMP, 0
	1129 Not TEMP
	1130 Move W6, TEMP
	1131 Move X1, X28
	1132 Move W2, W29
	1133 Move W4, W31
	1134 Move W7, W31
	1135 Move X26, X0
	1136 Move [X31+64], V0
	1137 Move [X31+72], V1
	1138 Move [X31], X31
	1139 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	1140 Move X0, X19
	1141 Move X1, X24
	1142 Move X2, X21
	1143 Move X3, X22
	1144 Move X4, X23
	1145 Move X5, X27
	1146 Move X6, X26
	1147 Move X7, X25
	1148 Call AppendElements.AppendFace, X0, X1, X2, X3, X4, X5, X6, X7
	1149 Move X0, X26
	1150 Move X20, [X31+400]
	1151 Move X19, [X31+408]
	1152 Move X22, [X31+384]
	1153 Move X21, [X31+392]
	1154 Move X24, [X31+368]
	1155 Move X23, [X31+376]
	1156 Move X26, [X31+352]
	1157 Move X25, [X31+360]
	1158 Move X28, [X31+336]
	1159 Move X27, [X31+344]
	1160 Move X29, [X31+320]
	1161 Move X30, [X31+328]
	1162 Move D9, [X31+304]
	1163 Move D8, [X31+312]
	1164 Move D11, [X31+288]
	1165 Move D10, [X31+296]
	1166 Move D13, [X31+272]
	1167 Move D12, [X31+280]
	1168 Add X31, X31, 416
	1169 Return X0
	1170 Move X28, X25
	1171 Move TEMP, X29
	1172 And TEMP, TEMP, -2147483648
	1173 Compare TEMP, -2147483648
	1174 JumpIfEqual {1247}
	1175 Move X25, [X31+32]
	1176 Compare X20, 0
	1177 JumpIfEqual {1327}
	1178 NotImplemented "Instruction LDRSW not yet implemented."
	1179 Move W9, [X20+24]
	1180 NotImplemented "Instruction CMP not yet implemented."
	1181 Compare X24, 0
	1182 JumpIfEqual {1327}
	1183 Move W9, [X24+24]
	1184 Compare W9, 0
	1185 JumpIfEqual {1328}
	1186 Move W9, 12
	1187 NotImplemented "Instruction MADD not yet implemented."
	1188 Move V0, [X8+32]
	1189 Move V1, [X8+40]
	1190 Move [X24+32], D0
	1191 Move [X24+40], S1
	1192 Move TEMP, X22
	1193 And TEMP, TEMP, 1
	1194 Compare TEMP, 1
	1195 JumpIfNotEqual {1209}
	1196 Compare X27, 0
	1197 JumpIfEqual {1327}
	1198 NotImplemented "Instruction LDRSW not yet implemented."
	1199 Move W9, [X27+24]
	1200 NotImplemented "Instruction CMP not yet implemented."
	1201 Compare X25, 0
	1202 JumpIfEqual {1327}
	1203 Move W9, [X25+24]
	1204 Compare W9, 0
	1205 JumpIfEqual {1328}
	1206 Add X8, X27, X8
	1207 Move V0, [X8+2]
	1208 Move [X25+2], V0
	1209 Move W1, [X31+268]
	1210 Move X0, X19
	1211 Move X2, X31
	1212 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	1213 Compare X28, 0
	1214 JumpIfEqual {1327}
	1215 Move W8, [X28+24]
	1216 Compare W8, 0
	1217 JumpIfEqual {1328}
	1218 Move [X28+32], W0
	1219 NotImplemented "Instruction LDRSW not yet implemented."
	1220 Move W9, [X20+24]
	1221 NotImplemented "Instruction CMP not yet implemented."
	1222 Move W9, [X24+24]
	1223 NotImplemented "Instruction CMP not yet implemented."
	1224 Move W9, 12
	1225 NotImplemented "Instruction MADD not yet implemented."
	1226 Move V0, [X8+32]
	1227 Move V1, [X8+40]
	1228 Move [X24+44], D0
	1229 Move [X24+52], S1
	1230 Move TEMP, X22
	1231 And TEMP, TEMP, 1
	1232 Compare TEMP, 1
	1233 JumpIfNotEqual {1246}
	1234 Compare X27, 0
	1235 JumpIfEqual {1327}
	1236 NotImplemented "Instruction LDRSW not yet implemented."
	1237 Move W9, [X27+24]
	1238 NotImplemented "Instruction CMP not yet implemented."
	1239 Compare X25, 0
	1240 JumpIfEqual {1327}
	1241 Move W9, [X25+24]
	1242 NotImplemented "Instruction CMP not yet implemented."
	1243 Add X8, X27, X8
	1244 Move V0, [X8+2]
	1245 Move [X25+3], V0
	1246 Move W1, [X31+264]
	1247 Move X25, [X31+32]
	1248 Move TEMP, X0
	1249 And TEMP, TEMP, -2147483648
	1250 Compare TEMP, -2147483648
	1251 JumpIfEqual {1323}
	1252 Compare X20, 0
	1253 JumpIfEqual {1327}
	1254 NotImplemented "Instruction LDRSW not yet implemented."
	1255 Move W9, [X20+24]
	1256 NotImplemented "Instruction CMP not yet implemented."
	1257 Compare X24, 0
	1258 JumpIfEqual {1327}
	1259 Move W9, [X24+24]
	1260 Compare W9, 0
	1261 JumpIfEqual {1328}
	1262 Move W9, 12
	1263 NotImplemented "Instruction MADD not yet implemented."
	1264 Move V0, [X8+32]
	1265 Move V1, [X8+40]
	1266 Move [X24+32], D0
	1267 Move [X24+40], S1
	1268 Move TEMP, X22
	1269 And TEMP, TEMP, 1
	1270 Compare TEMP, 1
	1271 JumpIfNotEqual {1285}
	1272 Compare X27, 0
	1273 JumpIfEqual {1327}
	1274 NotImplemented "Instruction LDRSW not yet implemented."
	1275 Move W9, [X27+24]
	1276 NotImplemented "Instruction CMP not yet implemented."
	1277 Compare X25, 0
	1278 JumpIfEqual {1327}
	1279 Move W9, [X25+24]
	1280 Compare W9, 0
	1281 JumpIfEqual {1328}
	1282 Add X8, X27, X8
	1283 Move V0, [X8+2]
	1284 Move [X25+2], V0
	1285 Move W1, [X31+268]
	1286 Move X0, X19
	1287 Move X2, X31
	1288 Call ProBuilderMesh.GetSharedVertexHandle, X0, X1
	1289 Compare X28, 0
	1290 JumpIfEqual {1327}
	1291 Move W8, [X28+24]
	1292 Compare W8, 0
	1293 JumpIfEqual {1328}
	1294 Move [X28+32], W0
	1295 NotImplemented "Instruction LDRSW not yet implemented."
	1296 Move W9, [X20+24]
	1297 NotImplemented "Instruction CMP not yet implemented."
	1298 Move W9, [X24+24]
	1299 NotImplemented "Instruction CMP not yet implemented."
	1300 Move W9, 12
	1301 NotImplemented "Instruction MADD not yet implemented."
	1302 Move V0, [X8+32]
	1303 Move V1, [X8+40]
	1304 Move [X24+44], D0
	1305 Move [X24+52], S1
	1306 Move TEMP, X22
	1307 And TEMP, TEMP, 1
	1308 Compare TEMP, 1
	1309 JumpIfNotEqual {1322}
	1310 Compare X27, 0
	1311 JumpIfEqual {1327}
	1312 NotImplemented "Instruction LDRSW not yet implemented."
	1313 Move W9, [X27+24]
	1314 NotImplemented "Instruction CMP not yet implemented."
	1315 Compare X25, 0
	1316 JumpIfEqual {1327}
	1317 Move W9, [X25+24]
	1318 NotImplemented "Instruction CMP not yet implemented."
	1319 Add X8, X27, X8
	1320 Move V0, [X8+2]
	1321 Move [X25+3], V0
	1322 Move W1, [X31+264]
	1323 And W31, W22, 1
	1324 NotImplemented "Instruction CSEL not yet implemented."
	1325 Compare X24, 0
	1326 JumpIfNotEqual {593}
	1327 Call 0x1C17F20
	1328 Call 0x1C17F28
	1329 Move X0, 0x7A5000
	1330 Move X0, [X0+1320]
	1331 Call 0x1C17D08
	1332 Call 0x1C17F10
	1333 Move X19, X0
	1334 Move X0, 0x7FA000
	1335 Move X0, [X0+3728]
	1336 Call 0x1C17D08
	1337 Move X1, X0
	1338 Move X0, X19
	1339 Move X2, X31
	1340 Call ArgumentNullException..ctor, X0, X1
	1341 Move X0, 0x7FC000
	1342 Move X0, [X0+848]
	1343 Call 0x1C17D08
	1344 Move X1, X0
	1345 Move X0, X19
	1346 Call 0x1C17DEC

Method: UnityEngine.ProBuilder.Face AppendVerticesToFace(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face, UnityEngine.Vector3[] points)

Disassembly:
	0x039547E4 BL 0x1C16CF4
	0x039547E8 ADRP X0, 0x7FA000

ISIL:
	001 Move W3, 1

Method: UnityEngine.ProBuilder.Face AppendVerticesToFace(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face, UnityEngine.Vector3[] points, System.Boolean insertOnEdge)

Disassembly:
	0x039547EC LDR X0, [X0 + 0xB08]
	0x039547F0 BL 0x1C16CF4
	0x039547F4 ADRP X0, 0x7FB000
	0x039547F8 LDR X0, [X0 + 0x490]
	0x039547FC BL 0x1C16CF4
	0x03954800 MOVZ W8, 0x1
	0x03954804 STRB W8, [X22 + 0x99A]
	0x03954808 LDR X0, [X21]
	0x0395480C MOVI V0.2D, 0x0
	0x03954810 STP X31, X31, [X31 + 0x150]
	0x03954814 STR X31, [X31 + 0x160]
	0x03954818 STR X31, [X31 + 0x178]
	0x0395481C STP X31, X31, [X31 + 0x120]
	0x03954820 STP V0, V0, [X31 + 0x130]
	0x03954824 STP X31, X31, [X31 + 0x110]
	0x03954828 STR X31, [X31 + 0x108]
	0x0395482C BL 0x1C16F10
	0x03954830 MOV X1, X31
	0x03954834 MOV X21, X0
	0x03954838 BL 0x33BDD8C
	0x0395483C LDR X0, [X20]
	0x03954840 LDR W8, [X0 + 0xE0]
	0x03954844 CBNZ W8, 0x395484C
	0x03954848 BL 0x1C16DFC
	0x0395484C MOV X0, X23
	0x03954850 MOV X1, X31
	0x03954854 MOV X2, X31
	0x03954858 BL 0x3C3883C
	0x0395485C TBNZ X0, 0x0, 0x39560F0
	0x03954860 CBZ X19, 0x3956110
	0x03954864 SUB W8, W25, 0x1
	0x03954868 CMP W8, 0x200
	0x0395486C STR W8, [X31 + 0x44]
	0x03954870 B.CS 0x3955B8C
	0x03954874 CBZ X23, 0x39560D0
	0x03954878 MOV X0, X23
	0x0395487C MOV X1, X31
	0x03954880 MOV X2, X31
	0x03954884 BL 0x3912114
	0x03954888 ADRP X8, 0x7F9000
	0x0395488C LDR X8, [X8 + 0xDE8]
	0x03954890 MOV X20, X0
	0x03954894 LDR X8, [X8]
	0x03954898 MOV X0, X8
	0x0395489C BL 0x1C16F10
	0x039548A0 ADRP X8, 0x7F9000
	0x039548A4 LDR X8, [X8 + 0xDE0]
	0x039548A8 MOV X1, X20
	0x039548AC STR X0, [X31 + 0x68]
	0x039548B0 LDR X2, [X8]
	0x039548B4 BL 0x301B8E0
	0x039548B8 MOV X0, X23
	0x039548BC MOV X1, X31
	0x039548C0 BL 0x3916198
	0x039548C4 MOV X20, X0
	0x039548C8 MOV X0, X23
	0x039548CC MOV X1, X31
	0x039548D0 BL 0x39162B4
	0x039548D4 ADRP X8, 0x7A0000
	0x039548D8 LDR X8, [X8 + 0xE30]
	0x039548DC MOV X22, X0
	0x039548E0 LDR X8, [X8]
	0x039548E4 MOV X0, X8
	0x039548E8 BL 0x1C16F10
	0x039548EC ADRP X8, 0x7A3000
	0x039548F0 LDR X8, [X8 + 0xB70]
	0x039548F4 MOV X24, X0
	0x039548F8 LDR X1, [X8]
	0x039548FC BL 0x2FDBF14
	0x03954900 MOV X0, X23
	0x03954904 MOV X1, X19
	0x03954908 MOV X2, X31
	0x0395490C BL 0x38FF0C0
	0x03954910 ADRP X8, 0x7FB000
	0x03954914 LDR X8, [X8 + 0x3E0]
	0x03954918 LDR X1, [X8]
	0x0395491C BL 0x21C024C
	0x03954920 ADRP X8, 0x7FB000
	0x03954924 LDR X8, [X8 + 0x60]
	0x03954928 LDR X1, [X8]
	0x0395492C BL 0x21D770C
	0x03954930 ADRP X8, 0x7FB000
	0x03954934 LDR X8, [X8 + 0x3D0]
	0x03954938 MOV X19, X0
	0x0395493C LDR X8, [X8]
	0x03954940 MOV X0, X8
	0x03954944 BL 0x1C16F10
	0x03954948 ADRP X8, 0x7FB000
	0x0395494C LDR X8, [X8 + 0x3B8]
	0x03954950 MOV X26, X0
	0x03954954 LDR X1, [X8]
	0x03954958 BL 0x2AA4804
	0x0395495C CBZ X20, 0x39560D0
	0x03954960 STP X24, X26, [X31 + 0x30]
	0x03954964 STP X21, X23, [X31 + 0x18]
	0x03954968 ADRP X8, 0x7FA000
	0x0395496C LDR X8, [X8 + 0xD78]
	0x03954970 MOV X0, X20
	0x03954974 STR X20, [X31 + 0x70]
	0x03954978 LDR X1, [X8]
	0x0395497C BL 0x2A0A118
	0x03954980 CBZ X19, 0x39560D0
	0x03954984 ADRP X8, 0x7FB000
	0x03954988 LDR X8, [X8 + 0x448]
	0x0395498C MOV W20, W0
	0x03954990 MOV X0, X19
	0x03954994 LDR X1, [X8]
	0x03954998 ADD X8, X31, 0xE0
	0x0395499C BL 0x2FBAAE0
	0x039549A0 SCVTF S0, W25
	0x039549A4 FMOV S1, 1
	0x039549A8 FADD S8, S0, S1
	0x039549AC LDR V0, [X31 + 0xE]
	0x039549B0 LDR X8, [X31 + 0xF0]
	0x039549B4 LDR X21, [X31 + 0x68]
	0x039549B8 STR W20, [X31 + 0x2C]
	0x039549BC STR V0, [X31 + 0x15]
	0x039549C0 STR X8, [X31 + 0x160]
	0x039549C4 STR W25, [X31 + 0x60]
	0x039549C8 STR W20, [X31 + 0x78]
	0x039549CC MOV W26, W25
	0x039549D0 STR X22, [X31 + 0x50]
	0x039549D4 ADRP X8, 0x7FB000
	0x039549D8 LDR X8, [X8 + 0x410]
	0x039549DC LDR X1, [X8]
	0x039549E0 ADD X0, X31, 0x150
	0x039549E4 BL 0x2BBB1F0
	0x039549E8 TBZ X0, 0x0, 0x3955BC0
	0x039549EC LDR X1, [X31 + 0x160]
	0x039549F0 LDR X0, [X31 + 0x20]
	0x039549F4 MOV X2, X31
	0x039549F8 BL 0x38FF234
	0x039549FC ADRP X8, 0x7F9000
	0x03954A00 LDR X8, [X8 + 0xDE8]
	0x03954A04 MOV X24, X0
	0x03954A08 LDR X0, [X8]
	0x03954A0C BL 0x1C16F10
	0x03954A10 ADRP X8, 0x7FB000
	0x03954A14 LDR X8, [X8 + 0x468]
	0x03954A18 MOV X29, X0
	0x03954A1C LDR X2, [X8]
	0x03954A20 MOV W1, W26
	0x03954A24 BL 0x301B830
	0x03954A28 CBZ X21, 0x39560E0
	0x03954A2C MOV W20, W31
	0x03954A30 UBFM X8, X24, 0x20, 0x3F
	0x03954A34 STR X8, [X31 + 0x58]
	0x03954A38 ADRP X23, 0x7FB000
	0x03954A3C LDR X23, [X23 + 0x1D0]
	0x03954A40 LDR X2, [X23]
	0x03954A44 MOV X0, X21
	0x03954A48 MOV W1, W24
	0x03954A4C BL 0x301BCCC
	0x03954A50 LDR X2, [X23]
	0x03954A54 MOV X19, X0
	0x03954A58 MOV X0, X21
	0x03954A5C LDR X1, [X31 + 0x58]
	0x03954A60 BL 0x301BCCC
	0x03954A64 MOV X1, X0
	0x03954A68 ADD W20, W20, 0x1
	0x03954A6C SCVTF S0, W20
	0x03954A70 FDIV S0, S0, S8
	0x03954A74 MOV X0, X19
	0x03954A78 MOV X2, X31
	0x03954A7C BL 0x3940610
	0x03954A80 MOV X1, X0
	0x03954A84 CBZ X29, 0x39560D8
	0x03954A88 ADRP X9, 0x7FB000
	0x03954A8C LDR W10, [X29 + 0x1C]
	0x03954A90 LDR X8, [X29 + 0x10]
	0x03954A94 LDR X9, [X9 + 0x1C0]
	0x03954A98 ADD W10, W10, 0x1
	0x03954A9C LDR X9, [X9]
	0x03954AA0 STR W10, [X29 + 0x1C]
	0x03954AA4 CBZ X8, 0x39560D4
	0x03954AA8 LDRSW X10, [X29 + 0x18]
	0x03954AAC LDR W11, [X8 + 0x18]
	0x03954AB0 CMP W10, W11
	0x03954AB4 B.CS 0x3954ACC
	0x03954AB8 ADD W9, W10, 0x1
	0x03954ABC ADD X8, X8, X10, 0x3, LSL
	0x03954AC0 STR W9, [X29 + 0x18]
	0x03954AC4 STR X1, [X8 + 0x20]
	0x03954AC8 B 0x3954AE0
	0x03954ACC LDR X8, [X9 + 0x20]
	0x03954AD0 LDR X8, [X8 + 0xC0]
	0x03954AD4 LDR X2, [X8 + 0x70]
	0x03954AD8 MOV X0, X29
	0x03954ADC BL 0x301BF90
	0x03954AE0 CMP W26, W20
	0x03954AE4 B.NE 0x3954A38
	0x03954AE8 ADRP X8, 0x7FB000
	0x03954AEC LDR X8, [X8 + 0x328]
	0x03954AF0 LDR X0, [X8]
	0x03954AF4 LDR W8, [X0 + 0xE0]
	0x03954AF8 CBNZ W8, 0x3954B00
	0x03954AFC BL 0x1C16DFC
	0x03954B00 LDR X0, [X31 + 0x20]
	0x03954B04 MOV X1, X24
	0x03954B08 BL 0x39534E8
	0x03954B0C MOV X1, X24
	0x03954B10 ADRP X24, 0x7F9000
	0x03954B14 LDR X24, [X24 + 0xC80]
	0x03954B18 MOV X19, X0
	0x03954B1C LDR X2, [X24]
	0x03954B20 LDR X23, [X31 + 0x70]
	0x03954B24 STR X1, [X31 + 0x48]
	0x03954B28 MOV X0, X23
	0x03954B2C BL 0x2A0A2A8
	0x03954B30 LDR X2, [X24]
	0x03954B34 MOV W20, W0
	0x03954B38 MOV X0, X23
	0x03954B3C LDR X1, [X31 + 0x58]
	0x03954B40 BL 0x2A0A2A8
	0x03954B44 ADRP X8, 0x7C7000
	0x03954B48 LDR X8, [X8 + 0x600]
	0x03954B4C MOV W23, W0
	0x03954B50 LDR X0, [X8]
	0x03954B54 LDR W8, [X0 + 0xE0]
	0x03954B58 CBNZ W8, 0x3954B60
	0x03954B5C BL 0x1C16DFC
	0x03954B60 ADD X0, X31, 0x178
	0x03954B64 MOV W1, W20
	0x03954B68 MOV W2, W23
	0x03954B6C MOV X3, X31
	0x03954B70 BL 0x38FDC24
	0x03954B74 CBZ X19, 0x39560E4
	0x03954B78 ADRP X8, 0x7FB000
	0x03954B7C LDR X8, [X8 + 0x440]
	0x03954B80 LDR X1, [X8]
	0x03954B84 ADD X8, X31, 0xE0
	0x03954B88 MOV X0, X19
	0x03954B8C BL 0x2F2EBB0
	0x03954B90 LDP V0, V1, [X31 + 0xE0]
	0x03954B94 STP V0, V1, [X31 + 0x130]
	0x03954B98 ADRP X8, 0x7FB000
	0x03954B9C LDR X8, [X8 + 0x418]
	0x03954BA0 LDR X1, [X8]
	0x03954BA4 ADD X0, X31, 0x130
	0x03954BA8 BL 0x2BB2398
	0x03954BAC TBZ X0, 0x0, 0x39557FC
	0x03954BB0 LDR X0, [X31 + 0x38]
	0x03954BB4 CBZ X0, 0x3955958
	0x03954BB8 ADRP X8, 0x7FB000
	0x03954BBC LDR X20, [X31 + 0x140]
	0x03954BC0 LDR X8, [X8 + 0x3B0]
	0x03954BC4 LDR X3, [X8]
	0x03954BC8 ADD X2, X31, 0x128
	0x03954BCC MOV X1, X20
	0x03954BD0 BL 0x2AA6B2C
	0x03954BD4 TBZ X0, 0x0, 0x3954F20
	0x03954BD8 LDR X8, [X31 + 0x128]
	0x03954BDC CBZ X8, 0x39559A4
	0x03954BE0 LDR X19, [X8 + 0x18]
	0x03954BE4 CBZ X19, 0x39559AC
	0x03954BE8 LDR W9, [X19 + 0x18]
	0x03954BEC LDP X24, X20, [X8 + 0x20]
	0x03954BF0 CMP W9, 0x1
	0x03954BF4 B.LT 0x3954F0C
	0x03954BF8 MOV W25, W31
	0x03954BFC ADRP X8, 0x7FB000
	0x03954C00 LDR X8, [X8 + 0x1D0]
	0x03954C04 MOV W23, W25
	0x03954C08 LDR X2, [X8]
	0x03954C0C MOV X0, X19
	0x03954C10 MOV W1, W25
	0x03954C14 BL 0x301BCCC
	0x03954C18 MOV X1, X0
	0x03954C1C CBZ X21, 0x39558D0
	0x03954C20 ADRP X8, 0x7FB000
	0x03954C24 LDR X8, [X8 + 0x450]
	0x03954C28 LDR X2, [X8]
	0x03954C2C MOV X0, X21
	0x03954C30 BL 0x301CD00
	0x03954C34 ADRP X9, 0x7FB000
	0x03954C38 LDR W8, [X19 + 0x18]
	0x03954C3C LDR X9, [X9 + 0x1D0]
	0x03954C40 ADD W25, W23, 0x1
	0x03954C44 MOV W27, W0
	0x03954C48 LDR X2, [X9]
	0x03954C4C SDIV W9, W25, W8
	0x03954C50 MSUB W1, W9, W8, W25
	0x03954C54 MOV X0, X19
	0x03954C58 BL 0x301BCCC
	0x03954C5C MOV X1, X0
	0x03954C60 ADRP X8, 0x7FB000
	0x03954C64 LDR X8, [X8 + 0x450]
	0x03954C68 LDR X2, [X8]
	0x03954C6C MOV X0, X21
	0x03954C70 BL 0x301CD00
	0x03954C74 ADDS W31, W27, 0x1
	0x03954C78 B.EQ 0x3954EFC
	0x03954C7C MOV W28, W0
	0x03954C80 ADDS W31, W0, 0x1
	0x03954C84 B.EQ 0x3954EFC
	0x03954C88 ADRP X26, 0x7F9000
	0x03954C8C LDR X26, [X26 + 0xC80]
	0x03954C90 LDR X2, [X26]
	0x03954C94 LDR X22, [X31 + 0x70]
	0x03954C98 MOV W1, W27
	0x03954C9C MOV X0, X22
	0x03954CA0 BL 0x2A0A2A8
	0x03954CA4 LDR X2, [X26]
	0x03954CA8 MOV W21, W0
	0x03954CAC MOV X0, X22
	0x03954CB0 LDR X1, [X31 + 0x48]
	0x03954CB4 BL 0x2A0A2A8
	0x03954CB8 LDR W26, [X31 + 0x60]
	0x03954CBC CMP W21, W0
	0x03954CC0 B.NE 0x3954DC0
	0x03954CC4 ADRP X26, 0x7F9000
	0x03954CC8 LDR X26, [X26 + 0xC80]
	0x03954CCC LDR X2, [X26]
	0x03954CD0 LDR X22, [X31 + 0x70]
	0x03954CD4 MOV W1, W28
	0x03954CD8 MOV X0, X22
	0x03954CDC BL 0x2A0A2A8
	0x03954CE0 LDR X2, [X26]
	0x03954CE4 MOV W21, W0
	0x03954CE8 MOV X0, X22
	0x03954CEC LDR X1, [X31 + 0x58]
	0x03954CF0 BL 0x2A0A2A8
	0x03954CF4 LDR W26, [X31 + 0x60]
	0x03954CF8 CMP W21, W0
	0x03954CFC B.NE 0x3954DC0
	0x03954D00 ADRP X8, 0x7FB000
	0x03954D04 LDR X8, [X8 + 0x458]
	0x03954D08 LDR X3, [X8]
	0x03954D0C LDR X22, [X31 + 0x50]
	0x03954D10 MOV X0, X19
	0x03954D14 MOV W1, W25
	0x03954D18 MOV X2, X29
	0x03954D1C BL 0x301D118
	0x03954D20 MOV W21, W31
	0x03954D24 CBZ X24, 0x3955890
	0x03954D28 ADRP X8, 0x7FB000
	0x03954D2C LDR X8, [X8 + 0x380]
	0x03954D30 LDR X3, [X8]
	0x03954D34 ADD W8, W23, W21
	0x03954D38 ADD W1, W8, 0x1
	0x03954D3C LDR W8, [X31 + 0x78]
	0x03954D40 ADD W2, W8, W21
	0x03954D44 MOV X0, X24
	0x03954D48 BL 0x2FDD648
	0x03954D4C CBZ X20, 0x3955898
	0x03954D50 ADRP X9, 0x7A0000
	0x03954D54 LDR W10, [X20 + 0x1C]
	0x03954D58 LDR X8, [X20 + 0x10]
	0x03954D5C LDR X9, [X9 + 0xE10]
	0x03954D60 ADD W10, W10, 0x1
	0x03954D64 LDR X9, [X9]
	0x03954D68 STR W10, [X20 + 0x1C]
	0x03954D6C CBZ X8, 0x3955888
	0x03954D70 LDRSW X10, [X20 + 0x18]
	0x03954D74 LDR W11, [X8 + 0x18]
	0x03954D78 CMP W10, W11
	0x03954D7C B.CS 0x3954D98
	0x03954D80 ADD W9, W10, 0x1
	0x03954D84 ADD X8, X8, X10, 0x2, LSL
	0x03954D88 STR W9, [X20 + 0x18]
	0x03954D8C MOVN W9, 0x0
	0x03954D90 STR W9, [X8 + 0x20]
	0x03954D94 B 0x3954DB0
	0x03954D98 LDR X8, [X9 + 0x20]
	0x03954D9C LDR X8, [X8 + 0xC0]
	0x03954DA0 LDR X2, [X8 + 0x70]
	0x03954DA4 MOVN W1, 0x0
	0x03954DA8 MOV X0, X20
	0x03954DAC BL 0x2FDC70C
	0x03954DB0 ADD W21, W21, 0x1
	0x03954DB4 CMP W26, W21
	0x03954DB8 B.NE 0x3954D24
	0x03954DBC B 0x3954EFC
	0x03954DC0 ADRP X23, 0x7F9000
	0x03954DC4 LDR X23, [X23 + 0xC80]
	0x03954DC8 LDR X2, [X23]
	0x03954DCC LDR X22, [X31 + 0x70]
	0x03954DD0 MOV W1, W27
	0x03954DD4 MOV X0, X22
	0x03954DD8 BL 0x2A0A2A8
	0x03954DDC LDR X2, [X23]
	0x03954DE0 MOV W21, W0
	0x03954DE4 MOV X0, X22
	0x03954DE8 LDR X1, [X31 + 0x58]
	0x03954DEC BL 0x2A0A2A8
	0x03954DF0 LDR X22, [X31 + 0x50]
	0x03954DF4 CMP W21, W0
	0x03954DF8 B.NE 0x3954EFC
	0x03954DFC ADRP X23, 0x7F9000
	0x03954E00 LDR X23, [X23 + 0xC80]
	0x03954E04 LDR X2, [X23]
	0x03954E08 LDR X22, [X31 + 0x70]
	0x03954E0C MOV W1, W28
	0x03954E10 MOV X0, X22
	0x03954E14 BL 0x2A0A2A8
	0x03954E18 LDR X2, [X23]
	0x03954E1C MOV W21, W0
	0x03954E20 MOV X0, X22
	0x03954E24 LDR X1, [X31 + 0x48]
	0x03954E28 BL 0x2A0A2A8
	0x03954E2C LDR X22, [X31 + 0x50]
	0x03954E30 CMP W21, W0
	0x03954E34 B.NE 0x3954EFC
	0x03954E38 ADRP X8, 0x7FB000
	0x03954E3C LDR X8, [X8 + 0x460]
	0x03954E40 LDR X1, [X8]
	0x03954E44 MOV X0, X29
	0x03954E48 BL 0x301DB98
	0x03954E4C ADRP X8, 0x7FB000
	0x03954E50 LDR X8, [X8 + 0x458]
	0x03954E54 LDR X3, [X8]
	0x03954E58 MOV X0, X19
	0x03954E5C MOV W1, W25
	0x03954E60 MOV X2, X29
	0x03954E64 BL 0x301D118
	0x03954E68 LDR W21, [X31 + 0x44]
	0x03954E6C CBZ X24, 0x39558A0
	0x03954E70 ADRP X8, 0x7FB000
	0x03954E74 LDR X8, [X8 + 0x380]
	0x03954E78 LDR X3, [X8]
	0x03954E7C LDR W8, [X31 + 0x78]
	0x03954E80 ADD W2, W8, W21
	0x03954E84 MOV X0, X24
	0x03954E88 MOV W1, W25
	0x03954E8C BL 0x2FDD648
	0x03954E90 CBZ X20, 0x39558A8
	0x03954E94 ADRP X9, 0x7A0000
	0x03954E98 LDR W10, [X20 + 0x1C]
	0x03954E9C LDR X8, [X20 + 0x10]
	0x03954EA0 LDR X9, [X9 + 0xE10]
	0x03954EA4 ADD W10, W10, 0x1
	0x03954EA8 LDR X9, [X9]
	0x03954EAC STR W10, [X20 + 0x1C]
	0x03954EB0 CBZ X8, 0x39558B0
	0x03954EB4 LDRSW X10, [X20 + 0x18]
	0x03954EB8 LDR W11, [X8 + 0x18]
	0x03954EBC CMP W10, W11
	0x03954EC0 B.CS 0x3954EDC
	0x03954EC4 ADD W9, W10, 0x1
	0x03954EC8 ADD X8, X8, X10, 0x2, LSL
	0x03954ECC STR W9, [X20 + 0x18]
	0x03954ED0 MOVN W9, 0x0
	0x03954ED4 STR W9, [X8 + 0x20]
	0x03954ED8 B 0x3954EF4
	0x03954EDC LDR X8, [X9 + 0x20]
	0x03954EE0 LDR X8, [X8 + 0xC0]
	0x03954EE4 LDR X2, [X8 + 0x70]
	0x03954EE8 MOVN W1, 0x0
	0x03954EEC MOV X0, X20
	0x03954EF0 BL 0x2FDC70C
	0x03954EF4 SUBS W21, W21, 0x1
	0x03954EF8 B.PL 0x3954E6C
	0x03954EFC LDR W8, [X19 + 0x18]
	0x03954F00 LDR X21, [X31 + 0x68]
	0x03954F04 CMP W25, W8
	0x03954F08 B.LT 0x3954BFC
	0x03954F0C LDR X8, [X31 + 0x128]
	0x03954F10 CBZ X8, 0x39559C4
	0x03954F14 STP X19, X24, [X8 + 0x18]
	0x03954F18 STR X20, [X8 + 0x28]
	0x03954F1C B 0x3954B98
	0x03954F20 ADRP X8, 0x7FB000
	0x03954F24 LDR X8, [X8 + 0x1F0]
	0x03954F28 LDR X0, [X8]
	0x03954F2C BL 0x1C16F10
	0x03954F30 MOV X19, X0
	0x03954F34 MOV X1, X31
	0x03954F38 BL 0x3901F84
	0x03954F3C ADRP X8, 0x7A0000
	0x03954F40 LDR X8, [X8 + 0xE58]
	0x03954F44 STR X19, [X31 + 0x128]
	0x03954F48 LDR X0, [X8]
	0x03954F4C MOV W1, W31
	0x03954F50 BL 0x1C16D6C
	0x03954F54 CBZ X20, 0x395599C
	0x03954F58 LDR W24, [X20 + 0x48]
	0x03954F5C LDUR V0, [X20 + 0x2C]
	0x03954F60 LDUR V1, [X20 + 0x1C]
	0x03954F64 MOV X23, X0
	0x03954F68 MOVI V2.2D, 0x0
	0x03954F6C STP V2, V2, [X31 + 0xC0]
	0x03954F70 STP V1, V0, [X31 + 0xE0]
	0x03954F74 STP V1, V0, [X31 + 0xA0]
	0x03954F78 ADD X0, X31, 0xC0
	0x03954F7C ADD X1, X31, 0xA0
	0x03954F80 MOV X2, X31
	0x03954F84 BL 0x38F69EC
	0x03954F88 ADRP X8, 0x7FA000
	0x03954F8C LDR W25, [X20 + 0x18]
	0x03954F90 LDR W27, [X20 + 0x54]
	0x03954F94 LDRB W21, [X20 + 0x4C]
	0x03954F98 LDR X8, [X8 + 0x560]
	0x03954F9C LDR X0, [X8]
	0x03954FA0 BL 0x1C16F10
	0x03954FA4 LDP V0, V1, [X31 + 0xC0]
	0x03954FA8 MOV X28, X0
	0x03954FAC CMP W21, 0x0
	0x03954FB0 CSET W7, NE
	0x03954FB4 STP V0, V1, [X31 + 0x80]
	0x03954FB8 ADD X3, X31, 0x80
	0x03954FBC MOVN W6, 0x0
	0x03954FC0 MOV X1, X23
	0x03954FC4 MOV W2, W24
	0x03954FC8 MOV W4, W25
	0x03954FCC MOV W5, W27
	0x03954FD0 STR X31, [X31]
	0x03954FD4 BL 0x39004D4
	0x03954FD8 CBZ X19, 0x3955978
	0x03954FDC STR X28, [X19 + 0x10]
	0x03954FE0 LDR X21, [X31 + 0x128]
	0x03954FE4 MOV X0, X20
	0x03954FE8 MOV X1, X31
	0x03954FEC BL 0x38FF530
	0x03954FF0 MOV X1, X0
	0x03954FF4 ADRP X8, 0x7FB000
	0x03954FF8 LDR X8, [X8 + 0x3A0]
	0x03954FFC LDR X2, [X8]
	0x03955000 LDR X0, [X31 + 0x68]
	0x03955004 BL 0x2180E50
	0x03955008 ADRP X8, 0x7F8000
	0x0395500C LDR X8, [X8 + 0xDE8]
	0x03955010 MOV X23, X0
	0x03955014 LDR X0, [X8]
	0x03955018 BL 0x1C16F10
	0x0395501C ADRP X8, 0x7F8000
	0x03955020 LDR X8, [X8 + 0xDE0]
	0x03955024 MOV X19, X0
	0x03955028 LDR X2, [X8]
	0x0395502C MOV X1, X23
	0x03955030 BL 0x301B8E0
	0x03955034 CBZ X21, 0x3955990
	0x03955038 STR X19, [X21 + 0x18]
	0x0395503C ADRP X8, 0x79F000
	0x03955040 LDR X21, [X31 + 0x128]
	0x03955044 LDR X8, [X8 + 0xE30]
	0x03955048 LDR X0, [X8]
	0x0395504C BL 0x1C16F10
	0x03955050 ADRP X8, 0x7A2000
	0x03955054 LDR X8, [X8 + 0xB70]
	0x03955058 MOV X19, X0
	0x0395505C LDR X1, [X8]
	0x03955060 BL 0x2FDBF14
	0x03955064 CBZ X21, 0x395596C
	0x03955068 STR X19, [X21 + 0x20]
	0x0395506C ADRP X8, 0x79F000
	0x03955070 LDR X21, [X31 + 0x128]
	0x03955074 LDR X8, [X8 + 0xE30]
	0x03955078 LDR X0, [X8]
	0x0395507C BL 0x1C16F10
	0x03955080 ADRP X8, 0x7A2000
	0x03955084 LDR X8, [X8 + 0xB70]
	0x03955088 MOV X19, X0
	0x0395508C LDR X1, [X8]
	0x03955090 BL 0x2FDBF14
	0x03955094 CBZ X21, 0x3955984
	0x03955098 STR X19, [X21 + 0x28]
	0x0395509C MOV X0, X20
	0x039550A0 MOV X1, X31
	0x039550A4 BL 0x38FF530
	0x039550A8 MOV X19, X0
	0x039550AC CBZ X0, 0x3955960
	0x039550B0 LDR X8, [X19 + 0x18]
	0x039550B4 CMP W8, 0x1
	0x039550B8 B.LT 0x39551F8
	0x039550BC MOV X21, X31
	0x039550C0 AND X8, X8, 0x0
	0x039550C4 ADD X24, X19, 0x20
	0x039550C8 CMP X21, W8, UXTW
	0x039550CC B.CS 0x39558C4
	0x039550D0 ADRP X8, 0x7A8000
	0x039550D4 LDR W23, [X24, X21, LSL #2]
	0x039550D8 LDR X8, [X8 + 0x870]
	0x039550DC LDR X3, [X8]
	0x039550E0 LDR X0, [X31 + 0x70]
	0x039550E4 ADD X2, X31, 0x124
	0x039550E8 MOV W1, W23
	0x039550EC BL 0x2A0BC68
	0x039550F0 TBZ X0, 0x0, 0x395515C
	0x039550F4 LDR X8, [X31 + 0x128]
	0x039550F8 CBZ X8, 0x3955910
	0x039550FC LDR X0, [X8 + 0x20]
	0x03955100 CBZ X0, 0x3955908
	0x03955104 ADRP X9, 0x79F000
	0x03955108 LDR W1, [X31 + 0x124]
	0x0395510C LDR W10, [X0 + 0x1C]
	0x03955110 LDR X8, [X0 + 0x10]
	0x03955114 LDR X9, [X9 + 0xE10]
	0x03955118 ADD W10, W10, 0x1
	0x0395511C LDR X9, [X9]
	0x03955120 STR W10, [X0 + 0x1C]
	0x03955124 CBZ X8, 0x39558F8
	0x03955128 LDRSW X10, [X0 + 0x18]
	0x0395512C LDR W11, [X8 + 0x18]
	0x03955130 CMP W10, W11
	0x03955134 B.CS 0x395514C
	0x03955138 ADD W9, W10, 0x1
	0x0395513C ADD X8, X8, X10, 0x2, LSL
	0x03955140 STR W9, [X0 + 0x18]
	0x03955144 STR W1, [X8 + 0x20]
	0x03955148 B 0x395515C
	0x0395514C LDR X8, [X9 + 0x20]
	0x03955150 LDR X8, [X8 + 0xC0]
	0x03955154 LDR X2, [X8 + 0x70]
	0x03955158 BL 0x2FDC70C
	0x0395515C CBZ X22, 0x39558B8
	0x03955160 ADRP X8, 0x7A8000
	0x03955164 LDR X8, [X8 + 0x870]
	0x03955168 LDR X3, [X8]
	0x0395516C ADD X2, X31, 0x124
	0x03955170 MOV X0, X22
	0x03955174 MOV W1, W23
	0x03955178 BL 0x2A0BC68
	0x0395517C TBZ X0, 0x0, 0x39551E8
	0x03955180 LDR X8, [X31 + 0x128]
	0x03955184 CBZ X8, 0x395591C
	0x03955188 LDR X0, [X8 + 0x28]
	0x0395518C CBZ X0, 0x3955900
	0x03955190 ADRP X9, 0x79F000
	0x03955194 LDR W1, [X31 + 0x124]
	0x03955198 LDR W10, [X0 + 0x1C]
	0x0395519C LDR X8, [X0 + 0x10]
	0x039551A0 LDR X9, [X9 + 0xE10]
	0x039551A4 ADD W10, W10, 0x1
	0x039551A8 LDR X9, [X9]
	0x039551AC STR W10, [X0 + 0x1C]
	0x039551B0 CBZ X8, 0x3955928
	0x039551B4 LDRSW X10, [X0 + 0x18]
	0x039551B8 LDR W11, [X8 + 0x18]
	0x039551BC CMP W10, W11
	0x039551C0 B.CS 0x39551D8
	0x039551C4 ADD W9, W10, 0x1
	0x039551C8 ADD X8, X8, X10, 0x2, LSL
	0x039551CC STR W9, [X0 + 0x18]
	0x039551D0 STR W1, [X8 + 0x20]
	0x039551D4 B 0x39551E8
	0x039551D8 LDR X8, [X9 + 0x20]
	0x039551DC LDR X8, [X8 + 0xC0]
	0x039551E0 LDR X2, [X8 + 0x70]
	0x039551E4 BL 0x2FDC70C
	0x039551E8 LDR W8, [X19 + 0x18]
	0x039551EC ADD X21, X21, 0x1
	0x039551F0 CMP X21, W8, SXTW
	0x039551F4 B.LT 0x39550C8
	0x039551F8 LDR X21, [X31 + 0x68]
	0x039551FC MOV X0, X20
	0x03955200 MOV X1, X31
	0x03955204 BL 0x38FF530
	0x03955208 MOV X1, X0
	0x0395520C LDR X0, [X31 + 0x30]
	0x03955210 CBZ X0, 0x39559BC
	0x03955214 ADRP X8, 0x7F9000
	0x03955218 LDR X8, [X8 + 0x688]
	0x0395521C LDR X2, [X8]
	0x03955220 BL 0x2FDC918
	0x03955224 ADRP X8, 0x7FA000
	0x03955228 LDR X2, [X31 + 0x128]
	0x0395522C LDR X8, [X8 + 0x3A8]
	0x03955230 LDR X3, [X8]
	0x03955234 LDR X0, [X31 + 0x38]
	0x03955238 MOV X1, X20
	0x0395523C BL 0x2AA5098
	0x03955240 ADRP X8, 0x7F8000
	0x03955244 LDR X8, [X8 + 0xDE8]
	0x03955248 LDR X0, [X8]
	0x0395524C BL 0x1C16F10
	0x03955250 ADRP X8, 0x7FA000
	0x03955254 LDR X8, [X8 + 0x1C8]
	0x03955258 MOV X19, X0
	0x0395525C LDR X1, [X8]
	0x03955260 BL 0x301B7C4
	0x03955264 ADRP X8, 0x79F000
	0x03955268 LDR X8, [X8 + 0xE30]
	0x0395526C LDR X0, [X8]
	0x03955270 BL 0x1C16F10
	0x03955274 ADRP X8, 0x7A2000
	0x03955278 LDR X8, [X8 + 0xB70]
	0x0395527C MOV X25, X0
	0x03955280 LDR X1, [X8]
	0x03955284 BL 0x2FDBF14
	0x03955288 ADRP X8, 0x79F000
	0x0395528C LDR X8, [X8 + 0xE30]
	0x03955290 LDR X0, [X8]
	0x03955294 BL 0x1C16F10
	0x03955298 ADRP X8, 0x7A2000
	0x0395529C LDR X8, [X8 + 0xB70]
	0x039552A0 MOV X24, X0
	0x039552A4 LDR X1, [X8]
	0x039552A8 BL 0x2FDBF14
	0x039552AC ADRP X8, 0x7F9000
	0x039552B0 LDR X8, [X8 + 0xB08]
	0x039552B4 LDR X0, [X8]
	0x039552B8 LDR W8, [X0 + 0xE0]
	0x039552BC CBNZ W8, 0x39552C4
	0x039552C0 BL 0x1C16DFC
	0x039552C4 MOV X0, X20
	0x039552C8 MOV X1, X31
	0x039552CC BL 0x3942528
	0x039552D0 MOV X27, X0
	0x039552D4 CBZ X0, 0x39559B4
	0x039552D8 LDR W8, [X27 + 0x18]
	0x039552DC CMP W8, 0x1
	0x039552E0 B.LT 0x39557E8
	0x039552E4 MOV W20, W31
	0x039552E8 ADRP X23, 0x7F9000
	0x039552EC LDR X23, [X23 + 0xFE8]
	0x039552F0 LDR X2, [X23]
	0x039552F4 MOV X0, X27
	0x039552F8 MOV W1, W20
	0x039552FC BL 0x2FB9C40
	0x03955300 LDR X2, [X23]
	0x03955304 MOV X28, X0
	0x03955308 MOV X0, X27
	0x0395530C MOV W1, W20
	0x03955310 BL 0x2FB9C40
	0x03955314 CBZ X21, 0x39558D8
	0x03955318 ADRP X8, 0x7FA000
	0x0395531C LDR X8, [X8 + 0x1D0]
	0x03955320 MOV X23, X0
	0x03955324 LDR X2, [X8]
	0x03955328 MOV X0, X21
	0x0395532C MOV W1, W28
	0x03955330 BL 0x301BCCC
	0x03955334 MOV X1, X0
	0x03955338 CBZ X19, 0x39558E8
	0x0395533C ADRP X9, 0x7FA000
	0x03955340 LDR W10, [X19 + 0x1C]
	0x03955344 LDR X8, [X19 + 0x10]
	0x03955348 LDR X9, [X9 + 0x1C0]
	0x0395534C ADD W10, W10, 0x1
	0x03955350 LDR X9, [X9]
	0x03955354 STR W10, [X19 + 0x1C]
	0x03955358 CBZ X8, 0x39558E0
	0x0395535C LDRSW X10, [X19 + 0x18]
	0x03955360 LDR W11, [X8 + 0x18]
	0x03955364 CMP W10, W11
	0x03955368 B.CS 0x3955380
	0x0395536C ADD W9, W10, 0x1
	0x03955370 ADD X8, X8, X10, 0x3, LSL
	0x03955374 STR W9, [X19 + 0x18]
	0x03955378 STR X1, [X8 + 0x20]
	0x0395537C B 0x3955394
	0x03955380 LDR X8, [X9 + 0x20]
	0x03955384 LDR X8, [X8 + 0xC0]
	0x03955388 LDR X2, [X8 + 0x70]
	0x0395538C MOV X0, X19
	0x03955390 BL 0x301BF90
	0x03955394 ADRP X8, 0x7A8000
	0x03955398 LDR X8, [X8 + 0x870]
	0x0395539C LDR X3, [X8]
	0x039553A0 LDR X0, [X31 + 0x70]
	0x039553A4 ADD X2, X31, 0x120

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D14
	003 Move [X31+208], D13
	004 Move [X31+216], D12
	005 Move [X31+224], D11
	006 Move [X31+232], D10
	007 Move [X31+240], D9
	008 Move [X31+248], D8
	009 Move [X31+256], X29
	010 Move [X31+264], X30
	011 Move [X31+272], X28
	012 Move [X31+280], X27
	013 Move [X31+288], X26
	014 Move [X31+296], X25
	015 Move [X31+304], X24
	016 Move [X31+312], X23
	017 Move [X31+320], X22
	018 Move [X31+328], X21
	019 Move [X31+336], X20
	020 Move [X31+344], X19
	021 Move [X31+64], X2
	022 Move X20, 0xA8E000
	023 Move X19, 0x7A0000
	024 Move W8, [X20+2456]
	025 Move X19, [X19+1432]
	026 Move W27, W3
	027 Move X25, X1
	028 Move X26, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {119}
	033 Move X0, 0x7AA000
	034 Move X0, [X0+2160]
	035 Call 0x1C17CF4
	036 Move X0, 0x7AA000
	037 Move X0, [X0+2192]
	038 Call 0x1C17CF4
	039 Move X0, 0x7FA000
	040 Move X0, [X0+3200]
	041 Call 0x1C17CF4
	042 Move X0, 0x7AA000
	043 Move X0, [X0+2184]
	044 Call 0x1C17CF4
	045 Move X0, 0x7FC000
	046 Move X0, [X0+880]
	047 Call 0x1C17CF4
	048 Move X0, 0x7FC000
	049 Move X0, [X0+496]
	050 Call 0x1C17CF4
	051 Move X0, 0x7FB000
	052 Move X0, [X0+1376]
	053 Call 0x1C17CF4
	054 Move X0, 0x7A1000
	055 Move X0, [X0+3600]
	056 Call 0x1C17CF4
	057 Move X0, 0x7FC000
	058 Move X0, [X0+776]
	059 Call 0x1C17CF4
	060 Move X0, 0x7FC000
	061 Move X0, [X0+448]
	062 Call 0x1C17CF4
	063 Move X0, 0x7FC000
	064 Move X0, [X0+888]
	065 Call 0x1C17CF4
	066 Move X0, 0x7FC000
	067 Move X0, [X0+896]
	068 Call 0x1C17CF4
	069 Move X0, 0x7A1000
	070 Move X0, [X0+3608]
	071 Call 0x1C17CF4
	072 Move X0, 0x7A4000
	073 Move X0, [X0+2928]
	074 Call 0x1C17CF4
	075 Move X0, 0x7FA000
	076 Move X0, [X0+3544]
	077 Call 0x1C17CF4
	078 Move X0, 0x7FC000
	079 Move X0, [X0+456]
	080 Call 0x1C17CF4
	081 Move X0, 0x7FC000
	082 Move X0, [X0+784]
	083 Call 0x1C17CF4
	084 Move X0, 0x7FA000
	085 Move X0, [X0+3608]
	086 Call 0x1C17CF4
	087 Move X0, 0x7FB000
	088 Move X0, [X0+4064]
	089 Call 0x1C17CF4
	090 Move X0, 0x7FC000
	091 Move X0, [X0+464]
	092 Call 0x1C17CF4
	093 Move X0, 0x7FB000
	094 Move X0, [X0+4072]
	095 Call 0x1C17CF4
	096 Move X0, 0x7A1000
	097 Move X0, [X0+3632]
	098 Call 0x1C17CF4
	099 Move X0, 0x7FA000
	100 Move X0, [X0+3560]
	101 Call 0x1C17CF4
	102 Move X0, 0x7FC000
	103 Move X0, [X0+792]
	104 Call 0x1C17CF4
	105 Move X0, 0x7FA000
	106 Move X0, [X0+3568]
	107 Call 0x1C17CF4
	108 Move X0, 0x7A0000
	109 Move X0, [X0+1432]
	110 Call 0x1C17CF4
	111 Move X0, 0x7FB000
	112 Move X0, [X0+32]
	113 Call 0x1C17CF4
	114 Move X0, 0x7FB000
	115 Move X0, [X0+2824]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X20+2456], W8
	119 Move X0, [X19]
	120 Move [X31+200], X31
	121 Move [X31+188], W31
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X26
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {748}
	134 Compare X25, 0
	135 JumpIfEqual {755}
	136 Move X8, [X31+64]
	137 Compare X8, 0
	138 JumpIfEqual {762}
	139 Compare X26, 0
	140 JumpIfEqual {746}
	141 Move X20, 0x7FC000
	142 Move X21, 0x7FA000
	143 Move X24, 0x7FA000
	144 Move X19, 0x7FB000
	145 Move X20, [X20+880]
	146 Move X21, [X21+3568]
	147 Move X24, [X24+3544]
	148 Move X19, [X19+2824]
	149 Move X0, X26
	150 Move X1, X31
	151 Move X2, X31
	152 Call ProBuilderMesh.GetVertices, X0, X1
	153 Move X1, [X20]
	154 Call Enumerable.ToList, X0
	155 Move X8, [X21]
	156 Move X22, [X26+40]
	157 Move X23, X0
	158 Move X0, X8
	159 Call 0x1C17F10
	160 Move X2, [X24]
	161 Move X1, X22
	162 Move X20, X0
	163 Call List`1<Object>..ctor, X0, X1
	164 Move X0, X26
	165 Move X1, X31
	166 Call ProBuilderMesh.get_sharedVertexLookup, X0
	167 Move X8, [X26+72]
	168 Move X24, X0
	169 Move [X31+40], X20
	170 Compare X8, 0
	171 JumpIfEqual {186}
	172 Move X8, 0x7AA000
	173 Move X8, [X8+2184]
	174 Move X20, 0x7AA000
	175 Move X0, [X8]
	176 Move X20, [X20+2192]
	177 Call 0x1C17F10
	178 Move X1, [X20]
	179 Move X20, X0
	180 Call Dictionary`2<Int32, Int32>..ctor, X0
	181 Move X0, [X26+72]
	182 Move X1, X20
	183 Move X2, X31
	184 Move [X31+72], X20
	185 Call SharedVertex.GetSharedVertexLookup, X0, X1
	186 Move [X31+72], X31
	187 Move X0, [X19]
	188 Move [X31+60], W27
	189 Move [X31+48], X26
	190 Move X22, 0x7FA000
	191 Move X21, 0x7FC000
	192 Move X20, 0x7A1000
	193 Move X19, 0x7A4000
	194 Move W8, [X0+224]
	195 Move X22, [X22+3560]
	196 Move X21, [X21+456]
	197 Move X20, [X20+3632]
	198 Move X19, [X19+2928]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X0, X25
	203 Move X1, X31
	204 Call WingedEdge.SortEdgesByAdjacency, X0
	205 Move X8, [X22]
	206 Move X29, X0
	207 Move X0, X8
	208 Call 0x1C17F10
	209 Move X1, [X21]
	210 Move X26, X0
	211 Call List`1<Object>..ctor, X0
	212 Move X0, [X20]
	213 Call 0x1C17F10
	214 Move X1, [X19]
	215 Move X27, X0
	216 Call List`1<Int32>..ctor, X0
	217 Move X8, [X31+72]
	218 Compare X8, 0
	219 JumpIfEqual {227}
	220 Move X0, [X20]
	221 Call 0x1C17F10
	222 Move X1, [X19]
	223 Move X28, X0
	224 Call List`1<Int32>..ctor, X0
	225 Compare X29, 0
	226 JumpIfNotEqual {230}
	227 Move X28, X31
	228 Compare X29, 0
	229 JumpIfEqual {746}
	230 Move W8, [X29+24]
	231 Move X19, 0x7FC000
	232 Move X19, [X19+464]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X20, 0x7FB000
	235 Move X21, 0x7A1000
	236 Move X20, [X20+4072]
	237 Move X21, [X21+3600]
	238 Move W22, W31
	239 Move X2, [X20]
	240 Move X0, X29
	241 Move W1, W22
	242 Call List`1<Edge>.get_Item, X0, X1
	243 Compare X23, 0
	244 JumpIfEqual {746}
	245 Move X2, [X19]
	246 Move X1, X0
	247 Move X0, X23
	248 Call List`1<Object>.get_Item, X0, X1
	249 Compare X26, 0
	250 JumpIfEqual {746}
	251 Move X9, 0x7FC000
	252 Move W10, [X26+28]
	253 Move X8, [X26+16]
	254 Move X9, [X9+448]
	255 Add W10, W10, 1
	256 Move X9, [X9]
	257 Move [X26+28], W10
	258 Compare X8, 0
	259 JumpIfEqual {746}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W11, [X8+24]
	262 Move X1, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W9, W10, 1
	265 Add X8, X8, X10
	266 Move [X26+24], W9
	267 Move [X8+32], X1
	268 Move X8, [X9+32]
	269 Move X0, X26
	270 Move X8, [X8+192]
	271 Move X2, [X8+112]
	272 Call List`1<Object>.AddWithResize, X0, X1
	273 Move X2, [X20]
	274 Move X0, X29
	275 Move W1, W22
	276 Call List`1<Edge>.get_Item, X0, X1
	277 Compare X24, 0
	278 JumpIfEqual {746}
	279 Move X8, 0x7FA000
	280 Move X8, [X8+3200]
	281 Move X1, X0
	282 Move X0, X24
	283 Move X2, [X8]
	284 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	285 Compare X27, 0
	286 JumpIfEqual {746}
	287 Move W10, [X27+28]
	288 Move X8, [X27+16]
	289 Move X9, [X21]
	290 Add W10, W10, 1
	291 Move [X27+28], W10
	292 Compare X8, 0
	293 JumpIfEqual {746}
	294 NotImplemented "Instruction LDRSW not yet implemented."
	295 Move W11, [X8+24]
	296 Move W1, W0
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Add W9, W10, 1
	299 Add X8, X8, X10
	300 Move [X27+24], W9
	301 Move [X8+32], W1
	302 Move X8, [X9+32]
	303 Move X0, X27
	304 Move X8, [X8+192]
	305 Move X2, [X8+112]
	306 Call List`1<Int32>.AddWithResize, X0, X1
	307 Move X8, [X31+72]
	308 Compare X8, 0
	309 JumpIfEqual {370}
	310 Move X2, [X20]
	311 Move X0, X29
	312 Move W1, W22
	313 Call List`1<Edge>.get_Item, X0, X1
	314 Move X8, 0x7AA000
	315 Move X8, [X8+2160]
	316 Move X1, X0
	317 Move X0, [X31+72]
	318 Add X2, X31, 188
	319 Move X3, [X8]
	320 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {342}
	325 Compare X28, 0
	326 JumpIfEqual {746}
	327 Move W10, [X28+28]
	328 Move W1, [X31+188]
	329 Move X8, [X28+16]
	330 Move X9, [X21]
	331 Add W10, W10, 1
	332 Move [X28+28], W10
	333 Compare X8, 0
	334 JumpIfEqual {746}
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Move W11, [X8+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add W9, W10, 1
	339 Add X8, X8, X10
	340 Move [X28+24], W9
	341 Move [X8+32], W1
	342 Compare X28, 0
	343 JumpIfEqual {746}
	344 Move W10, [X28+28]
	345 Move X8, [X28+16]
	346 Move X9, [X21]
	347 Add W10, W10, 1
	348 Move [X28+28], W10
	349 Compare X8, 0
	350 JumpIfEqual {746}
	351 NotImplemented "Instruction LDRSW not yet implemented."
	352 Move W11, [X8+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Add W9, W10, 1
	355 Add X8, X8, X10
	356 Move [X28+24], W9
	357 Move TEMP, 0
	358 Not TEMP
	359 Move W9, TEMP
	360 Move [X8+32], W9
	361 Move X8, [X9+32]
	362 Move X8, [X9+32]
	363 Move TEMP, 0
	364 Not TEMP
	365 Move W1, TEMP
	366 Move X8, [X8+192]
	367 Move X2, [X8+112]
	368 Move X0, X28
	369 Call List`1<Int32>.AddWithResize, X0, X1
	370 Move W8, [X29+24]
	371 Add W22, W22, 1
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move X8, [X31+64]
	374 Move W10, [X31+60]
	375 Move [X31+24], X23
	376 Move [X31+32], X25
	377 Move X9, [X8+24]
	378 And X8, X9, 0
	379 Move TEMP, X10
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {516}
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X23, 0x7FC000
	385 Move X23, [X23+896]
	386 Move X20, X31
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Compare X26, 0
	389 JumpIfEqual {746}
	390 Move X8, [X31+64]
	391 Move W9, 12
	392 Move W21, [X26+24]
	393 Move X2, [X19]
	394 NotImplemented "Instruction NOP not yet implemented."
	395 NotImplemented "Instruction MADD not yet implemented."
	396 Move S10, [X8+32]
	397 Move S9, [X8+36]
	398 Move V8, [X8+40]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move W8, 0x7F800000
	401 Move W29, W31
	402 Move TEMP, 0
	403 Not TEMP
	404 Move W22, TEMP
	405 Move S14, W8
	406 Move X0, X26
	407 Move W1, W29
	408 Call List`1<Object>.get_Item, X0, X1
	409 Compare X0, 0
	410 JumpIfEqual {746}
	411 Move X2, [X19]
	412 Move S11, [X0+16]
	413 Move S12, [X0+20]
	414 Move V13, [X0+24]
	415 Add W25, W29, 1
	416 NotImplemented "Instruction CMP not yet implemented."
	417 NotImplemented "Instruction CSINC not yet implemented."
	418 Move X0, X26
	419 Call List`1<Object>.get_Item, X0, X1
	420 Compare X0, 0
	421 JumpIfEqual {746}
	422 Move V0, [X0+24]
	423 Move X8, [X0+16]
	424 Move V1, V9
	425 Move V2, V8
	426 Move [X31+8], S0
	427 Move V0, V10
	428 Move V3, V11
	429 Move V4, V12
	430 Move V5, V13
	431 Move X0, X31
	432 Move [X31], X8
	433 Call Math.DistancePointLineSegment, X0, X1, X2
	434 Move X2, [X19]
	435 Subtract W8, W25, 1
	436 NotImplemented "Instruction FCMP not yet implemented."
	437 NotImplemented "Instruction FCSEL not yet implemented."
	438 NotImplemented "Instruction CSEL not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move W29, W25
	441 Move TEMP, 0
	442 Not TEMP
	443 Move W22, TEMP
	444 Move X0, X26
	445 Move W1, W22
	446 Call List`1<Object>.get_Item, X0, X1
	447 Move X2, [X19]
	448 Add W8, W22, 1
	449 NotImplemented "Instruction SDIV not yet implemented."
	450 NotImplemented "Instruction MSUB not yet implemented."
	451 Move X29, X0
	452 Move X0, X26
	453 Move W1, W22
	454 Call List`1<Object>.get_Item, X0, X1
	455 Compare X29, 0
	456 JumpIfEqual {746}
	457 Move X1, X0
	458 Compare X0, 0
	459 JumpIfEqual {746}
	460 Move S0, [X29+16]
	461 Move S1, [X29+20]
	462 Move S2, [X1+16]
	463 Move S4, [X1+20]
	464 Move V3, [X29+24]
	465 Move V5, [X1+24]
	466 Subtract S0, S10, S0
	467 Subtract S2, S10, S2
	468 Subtract S1, S9, S1
	469 Subtract S4, S9, S4
	470 Subtract S3, S8, S3
	471 Subtract S5, S8, S5
	472 Multiply S0, S0, S0
	473 Multiply S1, S1, S1
	474 Multiply S2, S2, S2
	475 Multiply S4, S4, S4
	476 Multiply S3, S3, S3
	477 Multiply S5, S5, S5
	478 Add S0, S0, S1
	479 Add S1, S2, S4
	480 Add S0, S0, S3
	481 Add S1, S1, S5
	482 Add S1, S0, S1
	483 NotImplemented "Instruction FDIV not yet implemented."
	484 Move X0, X29
	485 Move X2, X31
	486 Call Vertex.Mix, X0, X1, V0
	487 Move X8, 0x7FC000
	488 Move X8, [X8+888]
	489 Move X2, X0
	490 Move X0, X26
	491 Move W1, W22
	492 Move X3, [X8]
	493 Call List`1<Object>.Insert, X0, X1, X2
	494 Compare X27, 0
	495 JumpIfEqual {746}
	496 Move X3, [X23]
	497 Move TEMP, 0
	498 Not TEMP
	499 Move W2, TEMP
	500 Move X0, X27
	501 Move W1, W22
	502 Call List`1<Int32>.Insert, X0, X1, X2
	503 Compare X28, 0
	504 JumpIfEqual {512}
	505 Move X3, [X23]
	506 Move TEMP, 0
	507 Not TEMP
	508 Move W2, TEMP
	509 Move X0, X28
	510 Move W1, W22
	511 Call List`1<Int32>.Insert, X0, X1, X2
	512 Move X8, [X31+64]
	513 Add X20, X20, 1
	514 Move W8, [X8+24]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Move X9, [X31+64]
	518 Move X21, 0x7FB000
	519 Move X29, 0x7FC000
	520 Move X25, 0x7FC000
	521 Move X21, [X21+32]
	522 Move X29, [X29+888]
	523 Move X25, [X25+896]
	524 Move X19, X31
	525 Add X20, X9, 40
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Compare X26, 0
	528 JumpIfEqual {746}
	529 Move X0, [X21]
	530 Move S8, [X20-8]
	531 Move S9, [X20-4]
	532 Move V10, [X20]
	533 Call 0x1C17F10
	534 Move X1, X31
	535 Move X22, X0
	536 Call Vertex..ctor, X0
	537 Compare X22, 0
	538 JumpIfEqual {746}
	539 Move X0, X22
	540 Move V0, V8
	541 Move V1, V9
	542 Move V2, V10
	543 Move X1, X31
	544 Call Vertex.set_position, X0, X1
	545 Move X3, [X29]
	546 Move X0, X26
	547 Move W1, W31
	548 Move X2, X22
	549 Call List`1<Object>.Insert, X0, X1, X2
	550 Compare X27, 0
	551 JumpIfEqual {746}
	552 Move X3, [X25]
	553 Move TEMP, 0
	554 Not TEMP
	555 Move W2, TEMP
	556 Move X0, X27
	557 Move W1, W31
	558 Call List`1<Int32>.Insert, X0, X1, X2
	559 Compare X28, 0
	560 JumpIfEqual {568}
	561 Move X3, [X25]
	562 Move TEMP, 0
	563 Not TEMP
	564 Move W2, TEMP
	565 Move X0, X28
	566 Move W1, W31
	567 Call List`1<Int32>.Insert, X0, X1, X2
	568 Move X8, [X31+64]
	569 Add X19, X19, 1
	570 Add X20, X20, 12
	571 Move W8, [X8+24]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Add X1, X31, 200
	574 Move W2, 1
	575 Move X0, X26
	576 Move W3, W31
	577 Move X4, X31
	578 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	579 Move X8, 0x7FB000
	580 Move X8, [X8+496]
	581 Move X0, [X8]
	582 Call 0x1C17F10
	583 Move X1, X31
	584 Move X21, X0
	585 Call FaceRebuildData..ctor, X0
	586 Move X0, [X31+200]
	587 Move X25, [X31+32]
	588 Compare X0, 0
	589 JumpIfEqual {746}
	590 Move X8, 0x7A0000
	591 Move X8, [X8+3608]
	592 Move X22, 0x7FA000
	593 Move X1, [X8]
	594 Move X22, [X22+1376]
	595 Call List`1<Int32>.ToArray, X0
	596 NotImplemented "Instruction LDUR not yet implemented."
	597 NotImplemented "Instruction LDUR not yet implemented."
	598 Move W8, [X25+72]
	599 Move X23, X0
	600 NotImplemented "Instruction MOVI not yet implemented."
	601 Add X0, X31, 144
	602 Add X1, X31, 112
	603 Move X2, X31
	604 Move [X31+64], W8
	605 Move [X31+112], V0
	606 Move [X31+120], V1
	607 Move [X31+144], V2
	608 Move [X31+152], V2
	609 Call AutoUnwrapSettings..ctor, X0, X1
	610 Move X0, [X22]
	611 Move W20, [X25+24]
	612 Move W29, [X25+84]
	613 Move W19, [X25+76]
	614 Call 0x1C17F10
	615 Move V0, [X31+144]
	616 Move V1, [X31+160]
	617 Move W2, [X31+64]
	618 Add X3, X31, 80
	619 Move TEMP, 0
	620 Not TEMP
	621 Move W6, TEMP
	622 Move X1, X23
	623 Move W4, W20
	624 Move W5, W29
	625 Move W7, W19
	626 Move X22, X0
	627 Move [X31+80], V0
	628 Move [X31+88], V1
	629 Move [X31], X31
	630 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	631 Compare X21, 0
	632 JumpIfEqual {746}
	633 Move X8, 0x7FB000
	634 Move X8, [X8+792]
	635 Move [X21+16], X22
	636 Move [X21+24], X26
	637 Move [X21+32], X27
	638 Move [X21+40], X28
	639 Move X19, 0x7FB000
	640 Move X0, [X8]
	641 Move X19, [X19+784]
	642 Call 0x1C17F10
	643 Move X1, [X19]
	644 Move X22, X0
	645 Call List`1<Object>..ctor, X0
	646 Move X23, [X31+24]
	647 Compare X22, 0
	648 JumpIfEqual {746}
	649 Move X9, 0x7FB000
	650 Move X9, [X9+776]
	651 Move W10, [X22+28]
	652 Move X8, [X22+16]
	653 Move X19, [X31+48]
	654 Move X9, [X9]
	655 Add W10, W10, 1
	656 Move [X22+28], W10
	657 Compare X8, 0
	658 JumpIfEqual {746}
	659 NotImplemented "Instruction LDRSW not yet implemented."
	660 Move W11, [X8+24]
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Add W9, W10, 1
	663 Add X8, X8, X10
	664 Move [X22+24], W9
	665 Move [X8+32], X21
	666 Move X8, [X9+32]
	667 Move X0, X22
	668 Move X1, X21
	669 Move X8, [X8+192]
	670 Move X2, [X8+112]
	671 Call List`1<Object>.AddWithResize, X0, X1
	672 Move X0, X22
	673 Move X20, [X31+40]
	674 Move X22, [X31+72]
	675 Move X1, X23
	676 Move X3, X24
	677 Move X2, X20
	678 Move X4, X22
	679 Move X5, X31
	680 Call FaceRebuildData.Apply, X0, X1, X2, X3, X4
	681 Move X21, [X21+16]
	682 Move X0, X19
	683 Move X1, X23
	684 Move W2, W31
	685 Move X3, X31
	686 Call ProBuilderMesh.SetVertices, X0, X1, X2
	687 Move X0, X19
	688 Move X1, X20
	689 Move X2, X31
	690 Call ProBuilderMesh.set_faces, X0, X1
	691 Move X0, X19
	692 Move X1, X24
	693 Move X2, X31
	694 Call ProBuilderMesh.SetSharedVertices, X0, X1
	695 Move X0, X19
	696 Move X1, X22
	697 Move X2, X31
	698 Call ProBuilderMesh.SetSharedTextures, X0, X1
	699 Move X0, X19
	700 Move X1, X25
	701 Move X2, X31
	702 Call Math.Normal, X0, X1
	703 Move X0, X19
	704 Move X1, X21
	705 Move X2, X31
	706 Move V8, V0
	707 Move V9, V1
	708 Move V10, V2
	709 Call Math.Normal, X0, X1
	710 Multiply S0, S8, S0
	711 Multiply S1, S9, S1
	712 Add S0, S0, S1
	713 Multiply S1, S10, S2
	714 Add S0, S1, S0
	715 NotImplemented "Instruction FCMP not yet implemented."
	716 Compare X21, 0
	717 JumpIfEqual {746}
	718 Move X0, X21
	719 Move X1, X31
	720 Call Face.Reverse, X0
	721 Move X0, X19
	722 Move X1, X25
	723 Call DeleteElements.DeleteFace, X0, X1
	724 Move X0, X21
	725 Move X20, [X31+336]
	726 Move X19, [X31+344]
	727 Move X22, [X31+320]
	728 Move X21, [X31+328]
	729 Move X24, [X31+304]
	730 Move X23, [X31+312]
	731 Move X26, [X31+288]
	732 Move X25, [X31+296]
	733 Move X28, [X31+272]
	734 Move X27, [X31+280]
	735 Move X29, [X31+256]
	736 Move X30, [X31+264]
	737 Move D9, [X31+240]
	738 Move D8, [X31+248]
	739 Move D11, [X31+224]
	740 Move D10, [X31+232]
	741 Move D13, [X31+208]
	742 Move D12, [X31+216]
	743 Move V14, [X31+192]
	744 Add X31, X31, 352
	745 Return X0
	746 Call 0x1C17F20
	747 Call 0x1C17F28
	748 Move X0, 0x7A4000
	749 Move X0, [X0+1320]
	750 Call 0x1C17D08
	751 Call 0x1C17F10
	752 Move X19, X0
	753 Move X0, 0x7F9000
	754 Move X0, [X0+3728]
	755 Move X0, 0x7A4000
	756 Move X0, [X0+1320]
	757 Call 0x1C17D08
	758 Call 0x1C17F10
	759 Move X19, X0
	760 Move X0, 0x7FA000
	761 Move X0, [X0+1536]
	762 Move X0, 0x7A4000
	763 Move X0, [X0+1320]
	764 Call 0x1C17D08
	765 Call 0x1C17F10
	766 Move X19, X0
	767 Move X0, 0x7F9000
	768 Move X0, [X0+1680]
	769 Call 0x1C17D08
	770 Move X1, X0
	771 Move X0, X19
	772 Move X2, X31
	773 Call ArgumentNullException..ctor, X0, X1
	774 Move X0, 0x7FB000
	775 Move X0, [X0+904]
	776 Call 0x1C17D08
	777 Move X1, X0
	778 Move X0, X19
	779 Call 0x1C17DEC
	780 NotImplemented "Instruction CMP not yet implemented."
	781 Move X19, X0
	782 Move X0, X19
	783 Call 0x3EB2AD0
	784 Move X19, X0
	785 Move X0, 0x7A5000
	786 Move X0, [X0+3264]
	787 Call 0x1C17D08
	788 Move X8, [X19]
	789 Move X1, [X8]
	790 Call 0x1C18270
	791 Move TEMP, X0
	792 And TEMP, TEMP, 1
	793 Compare TEMP, 1
	794 JumpIfNotEqual {809}
	795 Call 0x3EB2AE0
	796 Move X0, 0x79F000
	797 Move X0, [X0+2600]
	798 Call 0x1C17D08
	799 Move W8, [X0+224]
	800 Compare W8, 0
	801 JumpIfNotEqual {803}
	802 Call 0x1C17DFC
	803 Move X0, 0x7FB000
	804 Move X0, [X0+912]
	805 Call 0x1C17D08
	806 Move X1, X31
	807 Call Debug.Log, X0
	808 Move X21, X31
	809 Move W0, 8
	810 Call 0x3EB2AF0
	811 Move X8, [X19]
	812 Move [X0], X8
	813 Move X1, 0x560000
	814 Add X1, X1, 3672
	815 Move X2, X31
	816 Call 0x3EB2B00
	817 Move X19, X0
	818 Call 0x3EB2AE0
	819 Move X0, X19
	820 Call 0x1D2D690
	821 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> AppendVerticesToEdge(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge edge, System.Int32 count)

Disassembly:
	0x03955420 LDR X3, [X8]
	0x03955424 ADD X2, X31, 0x120
	0x03955428 MOV X0, X22
	0x0395542C MOV W1, W20
	0x03955430 BL 0x2A0BC68
	0x03955434 TBZ X0, 0x0, 0x39554A0
	0x03955438 LDR X8, [X31 + 0x128]
	0x0395543C CBZ X8, 0x3955930
	0x03955440 LDR X0, [X8 + 0x28]
	0x03955444 CBZ X0, 0x3955940
	0x03955448 ADRP X9, 0x79F000
	0x0395544C LDR W1, [X31 + 0x120]
	0x03955450 LDR W10, [X0 + 0x1C]
	0x03955454 LDR X8, [X0 + 0x10]
	0x03955458 LDR X9, [X9 + 0xE10]
	0x0395545C ADD W10, W10, 0x1
	0x03955460 LDR X9, [X9]
	0x03955464 STR W10, [X0 + 0x1C]
	0x03955468 CBZ X8, 0x3955938
	0x0395546C LDRSW X10, [X0 + 0x18]
	0x03955470 LDR W11, [X8 + 0x18]
	0x03955474 CMP W10, W11
	0x03955478 B.CS 0x3955490
	0x0395547C ADD W9, W10, 0x1
	0x03955480 ADD X8, X8, X10, 0x2, LSL
	0x03955484 STR W9, [X0 + 0x18]
	0x03955488 STR W1, [X8 + 0x20]
	0x0395548C B 0x39554A0
	0x03955490 LDR X8, [X9 + 0x20]
	0x03955494 LDR X8, [X8 + 0xC0]
	0x03955498 LDR X2, [X8 + 0x70]
	0x0395549C BL 0x2FDC70C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA8D000
	008 Move X23, 0x7FA000
	009 Move W8, [X22+2457]
	010 Move X23, [X23+1344]
	011 Move W19, W2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x7FA000
	019 Move X0, [X0+1344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2457], W8
	023 Move X0, [X23]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {41}
	028 Move W8, [X0+24]
	029 Move X1, X0
	030 Compare W8, 0
	031 JumpIfEqual {42}
	032 Move [X1+32], X21
	033 Move X0, X20
	034 Move W2, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call 0x1C17F20
	042 Call 0x1C17F28

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> AppendVerticesToEdge(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Edge> edges, System.Int32 count)

Disassembly:
	0x039554A0 ADRP X8, 0x7F8000
	0x039554A4 LDR W21, [X31 + 0x178]
	0x039554A8 LDR X8, [X8 + 0xC80]
	0x039554AC LDR X2, [X8]
	0x039554B0 LDR X0, [X31 + 0x70]
	0x039554B4 MOV W1, W28
	0x039554B8 BL 0x2A0A2A8
	0x039554BC CMP W21, W0
	0x039554C0 UBFM X23, X23, 0x20, 0x3F
	0x039554C4 B.NE 0x3955640
	0x039554C8 ADRP X8, 0x7F8000
	0x039554CC LDR W21, [X31 + 0x17C]
	0x039554D0 LDR X8, [X8 + 0xC80]
	0x039554D4 LDR X2, [X8]
	0x039554D8 LDR X0, [X31 + 0x70]
	0x039554DC MOV W1, W23
	0x039554E0 BL 0x2A0A2A8
	0x039554E4 CMP W21, W0
	0x039554E8 B.NE 0x3955640
	0x039554EC LDR X21, [X31 + 0x68]
	0x039554F0 MOV W23, W31
	0x039554F4 ADRP X8, 0x7FA000
	0x039554F8 LDR X8, [X8 + 0x1D0]
	0x039554FC LDR X2, [X8]
	0x03955500 MOV X0, X29
	0x03955504 MOV W1, W23
	0x03955508 BL 0x301BCCC
	0x0395550C MOV X1, X0
	0x03955510 ADRP X9, 0x7FA000
	0x03955514 LDR W10, [X19 + 0x1C]
	0x03955518 LDR X8, [X19 + 0x10]
	0x0395551C LDR X9, [X9 + 0x1C0]
	0x03955520 ADD W10, W10, 0x1
	0x03955524 LDR X9, [X9]
	0x03955528 STR W10, [X19 + 0x1C]
	0x0395552C CBZ X8, 0x3955840
	0x03955530 LDRSW X10, [X19 + 0x18]
	0x03955534 LDR W11, [X8 + 0x18]
	0x03955538 CMP W10, W11
	0x0395553C B.CS 0x3955554
	0x03955540 ADD W9, W10, 0x1
	0x03955544 ADD X8, X8, X10, 0x3, LSL
	0x03955548 STR W9, [X19 + 0x18]
	0x0395554C STR X1, [X8 + 0x20]
	0x03955550 B 0x3955568
	0x03955554 LDR X8, [X9 + 0x20]
	0x03955558 LDR X8, [X8 + 0xC0]
	0x0395555C LDR X2, [X8 + 0x70]
	0x03955560 MOV X0, X19
	0x03955564 BL 0x301BF90
	0x03955568 CBZ X25, 0x3955850
	0x0395556C ADRP X9, 0x79F000
	0x03955570 LDR W10, [X25 + 0x1C]
	0x03955574 LDR X8, [X25 + 0x10]
	0x03955578 LDR X9, [X9 + 0xE10]
	0x0395557C ADD W10, W10, 0x1
	0x03955580 LDR X9, [X9]
	0x03955584 STR W10, [X25 + 0x1C]
	0x03955588 CBZ X8, 0x3955838
	0x0395558C LDRSW X10, [X25 + 0x18]
	0x03955590 LDR W11, [X8 + 0x18]
	0x03955594 CMP W10, W11
	0x03955598 LDR W11, [X31 + 0x78]
	0x0395559C ADD W1, W11, W23
	0x039555A0 B.CS 0x39555B8
	0x039555A4 ADD W9, W10, 0x1
	0x039555A8 ADD X8, X8, X10, 0x2, LSL
	0x039555AC STR W9, [X25 + 0x18]
	0x039555B0 STR W1, [X8 + 0x20]
	0x039555B4 B 0x39555CC
	0x039555B8 LDR X8, [X9 + 0x20]
	0x039555BC LDR X8, [X8 + 0xC0]
	0x039555C0 LDR X2, [X8 + 0x70]
	0x039555C4 MOV X0, X25
	0x039555C8 BL 0x2FDC70C
	0x039555CC CBZ X24, 0x3955848
	0x039555D0 ADRP X9, 0x79F000
	0x039555D4 LDR W10, [X24 + 0x1C]
	0x039555D8 LDR X8, [X24 + 0x10]
	0x039555DC LDR X9, [X9 + 0xE10]
	0x039555E0 ADD W10, W10, 0x1
	0x039555E4 LDR X9, [X9]
	0x039555E8 STR W10, [X24 + 0x1C]
	0x039555EC CBZ X8, 0x3955858
	0x039555F0 LDRSW X10, [X24 + 0x18]
	0x039555F4 LDR W11, [X8 + 0x18]
	0x039555F8 CMP W10, W11
	0x039555FC B.CS 0x3955618
	0x03955600 ADD W9, W10, 0x1
	0x03955604 ADD X8, X8, X10, 0x2, LSL
	0x03955608 STR W9, [X24 + 0x18]
	0x0395560C MOVN W9, 0x0
	0x03955610 STR W9, [X8 + 0x20]
	0x03955614 B 0x3955630
	0x03955618 LDR X8, [X9 + 0x20]
	0x0395561C LDR X8, [X8 + 0xC0]
	0x03955620 LDR X2, [X8 + 0x70]
	0x03955624 MOVN W1, 0x0
	0x03955628 MOV X0, X24
	0x0395562C BL 0x2FDC70C
	0x03955630 ADD W23, W23, 0x1
	0x03955634 CMP W26, W23
	0x03955638 B.NE 0x39554F4
	0x0395563C B 0x39557D8
	0x03955640 ADRP X8, 0x7F8000
	0x03955644 LDR W21, [X31 + 0x178]
	0x03955648 LDR X8, [X8 + 0xC80]
	0x0395564C LDR X2, [X8]
	0x03955650 LDR X0, [X31 + 0x70]
	0x03955654 MOV W1, W23
	0x03955658 BL 0x2A0A2A8
	0x0395565C CMP W21, W0
	0x03955660 LDR X21, [X31 + 0x68]
	0x03955664 B.NE 0x39557D8
	0x03955668 ADRP X8, 0x7F8000
	0x0395566C LDR W21, [X31 + 0x17C]
	0x03955670 LDR X8, [X8 + 0xC80]
	0x03955674 LDR X2, [X8]
	0x03955678 LDR X0, [X31 + 0x70]
	0x0395567C MOV W1, W28
	0x03955680 BL 0x2A0A2A8
	0x03955684 CMP W21, W0
	0x03955688 LDR W23, [X31 + 0x44]
	0x0395568C LDR X21, [X31 + 0x68]
	0x03955690 B.NE 0x39557D8
	0x03955694 ADRP X8, 0x7FA000
	0x03955698 LDR X8, [X8 + 0x1D0]
	0x0395569C LDR X2, [X8]
	0x039556A0 MOV X0, X29
	0x039556A4 MOV W1, W23
	0x039556A8 BL 0x301BCCC
	0x039556AC MOV X1, X0
	0x039556B0 ADRP X9, 0x7FA000
	0x039556B4 LDR W10, [X19 + 0x1C]
	0x039556B8 LDR X8, [X19 + 0x10]
	0x039556BC LDR X9, [X9 + 0x1C0]
	0x039556C0 ADD W10, W10, 0x1
	0x039556C4 LDR X9, [X9]
	0x039556C8 STR W10, [X19 + 0x1C]
	0x039556CC CBZ X8, 0x3955878
	0x039556D0 LDRSW X10, [X19 + 0x18]
	0x039556D4 LDR W11, [X8 + 0x18]
	0x039556D8 CMP W10, W11
	0x039556DC B.CS 0x39556F4
	0x039556E0 ADD W9, W10, 0x1
	0x039556E4 ADD X8, X8, X10, 0x3, LSL
	0x039556E8 STR W9, [X19 + 0x18]
	0x039556EC STR X1, [X8 + 0x20]
	0x039556F0 B 0x3955708
	0x039556F4 LDR X8, [X9 + 0x20]
	0x039556F8 LDR X8, [X8 + 0xC0]
	0x039556FC LDR X2, [X8 + 0x70]
	0x03955700 MOV X0, X19
	0x03955704 BL 0x301BF90
	0x03955708 CBZ X25, 0x3955860
	0x0395570C ADRP X9, 0x79F000
	0x03955710 LDR W10, [X25 + 0x1C]
	0x03955714 LDR X8, [X25 + 0x10]
	0x03955718 LDR X9, [X9 + 0xE10]
	0x0395571C ADD W10, W10, 0x1
	0x03955720 LDR X9, [X9]
	0x03955724 STR W10, [X25 + 0x1C]
	0x03955728 CBZ X8, 0x3955870
	0x0395572C LDRSW X10, [X25 + 0x18]
	0x03955730 LDR W11, [X8 + 0x18]
	0x03955734 CMP W10, W11
	0x03955738 LDR W11, [X31 + 0x78]
	0x0395573C ADD W1, W11, W23
	0x03955740 B.CS 0x3955758
	0x03955744 ADD W9, W10, 0x1
	0x03955748 ADD X8, X8, X10, 0x2, LSL
	0x0395574C STR W9, [X25 + 0x18]
	0x03955750 STR W1, [X8 + 0x20]
	0x03955754 B 0x395576C
	0x03955758 LDR X8, [X9 + 0x20]
	0x0395575C LDR X8, [X8 + 0xC0]
	0x03955760 LDR X2, [X8 + 0x70]
	0x03955764 MOV X0, X25
	0x03955768 BL 0x2FDC70C
	0x0395576C CBZ X24, 0x3955880
	0x03955770 ADRP X9, 0x79F000
	0x03955774 LDR W10, [X24 + 0x1C]
	0x03955778 LDR X8, [X24 + 0x10]
	0x0395577C LDR X9, [X9 + 0xE10]
	0x03955780 ADD W10, W10, 0x1
	0x03955784 LDR X9, [X9]
	0x03955788 STR W10, [X24 + 0x1C]
	0x0395578C CBZ X8, 0x3955868
	0x03955790 LDRSW X10, [X24 + 0x18]
	0x03955794 LDR W11, [X8 + 0x18]
	0x03955798 CMP W10, W11
	0x0395579C B.CS 0x39557B8
	0x039557A0 ADD W9, W10, 0x1
	0x039557A4 ADD X8, X8, X10, 0x2, LSL
	0x039557A8 STR W9, [X24 + 0x18]
	0x039557AC MOVN W9, 0x0
	0x039557B0 STR W9, [X8 + 0x20]
	0x039557B4 B 0x39557D0
	0x039557B8 LDR X8, [X9 + 0x20]
	0x039557BC LDR X8, [X8 + 0xC0]
	0x039557C0 LDR X2, [X8 + 0x70]
	0x039557C4 MOVN W1, 0x0
	0x039557C8 MOV X0, X24
	0x039557CC BL 0x2FDC70C
	0x039557D0 SUBS W23, W23, 0x1
	0x039557D4 B.PL 0x3955694
	0x039557D8 LDR W8, [X27 + 0x18]
	0x039557DC ADD W20, W20, 0x1
	0x039557E0 CMP W20, W8
	0x039557E4 B.LT 0x39552E8
	0x039557E8 LDR X8, [X31 + 0x128]
	0x039557EC CBZ X8, 0x39559CC
	0x039557F0 STP X19, X25, [X8 + 0x18]
	0x039557F4 STR X24, [X8 + 0x28]
	0x039557F8 B 0x3954B98
	0x039557FC MOV X19, X31
	0x03955800 MOVZ W20, 0x27
	0x03955804 ADRP X8, 0x7FA000
	0x03955808 LDR X8, [X8 + 0x400]
	0x0395580C LDR X1, [X8]
	0x03955810 ADD X0, X31, 0x130
	0x03955814 BL 0x2BB2394
	0x03955818 CBNZ X19, 0x39560E8
	0x0395581C CMP W20, 0x27
	0x03955820 B.EQ 0x3955828
	0x03955824 CBNZ W20, 0x395603C
	0x03955828 LDR W8, [X31 + 0x78]
	0x0395582C ADD W8, W8, W26
	0x03955830 STR W8, [X31 + 0x78]
	0x03955834 B 0x39549D4
	0x03955838 BL 0x1C16F20
	0x0395583C B 0x3956168
	0x03955840 BL 0x1C16F20
	0x03955844 B 0x3956168
	0x03955848 BL 0x1C16F20
	0x0395584C B 0x3956168
	0x03955850 BL 0x1C16F20
	0x03955854 B 0x3956168
	0x03955858 BL 0x1C16F20
	0x0395585C B 0x3956168
	0x03955860 BL 0x1C16F20
	0x03955864 B 0x3956168
	0x03955868 BL 0x1C16F20
	0x0395586C B 0x3956168
	0x03955870 BL 0x1C16F20
	0x03955874 B 0x3956168
	0x03955878 BL 0x1C16F20
	0x0395587C B 0x3956168
	0x03955880 BL 0x1C16F20
	0x03955884 B 0x3956168
	0x03955888 BL 0x1C16F20
	0x0395588C B 0x3956168
	0x03955890 BL 0x1C16F20
	0x03955894 B 0x3956168
	0x03955898 BL 0x1C16F20
	0x0395589C B 0x3956168
	0x039558A0 BL 0x1C16F20
	0x039558A4 B 0x3956168
	0x039558A8 BL 0x1C16F20
	0x039558AC B 0x3956168
	0x039558B0 BL 0x1C16F20
	0x039558B4 B 0x3956168
	0x039558B8 LDR X21, [X31 + 0x68]
	0x039558BC BL 0x1C16F20
	0x039558C0 B 0x3956168
	0x039558C4 LDR X21, [X31 + 0x68]
	0x039558C8 BL 0x1C16F28
	0x039558CC B 0x3956168
	0x039558D0 BL 0x1C16F20
	0x039558D4 B 0x3956168
	0x039558D8 BL 0x1C16F20
	0x039558DC B 0x3956168
	0x039558E0 BL 0x1C16F20
	0x039558E4 B 0x3956168
	0x039558E8 BL 0x1C16F20
	0x039558EC B 0x3956168
	0x039558F0 BL 0x1C16F20
	0x039558F4 B 0x3956168
	0x039558F8 BL 0x1C16F20
	0x039558FC B 0x3956168
	0x03955900 BL 0x1C16F20
	0x03955904 B 0x3956168
	0x03955908 BL 0x1C16F20
	0x0395590C B 0x3956168
	0x03955910 LDR X21, [X31 + 0x68]
	0x03955914 BL 0x1C16F20
	0x03955918 B 0x3956168
	0x0395591C LDR X21, [X31 + 0x68]
	0x03955920 BL 0x1C16F20
	0x03955924 B 0x3956168
	0x03955928 BL 0x1C16F20
	0x0395592C B 0x3956168
	0x03955930 BL 0x1C16F20
	0x03955934 B 0x3956168
	0x03955938 BL 0x1C16F20
	0x0395593C B 0x3956168
	0x03955940 BL 0x1C16F20
	0x03955944 B 0x3956168
	0x03955948 BL 0x1C16F20
	0x0395594C B 0x3956168
	0x03955950 BL 0x1C16F20
	0x03955954 B 0x3956168
	0x03955958 BL 0x1C16F20
	0x0395595C B 0x3956168
	0x03955960 LDR X21, [X31 + 0x68]
	0x03955964 BL 0x1C16F20
	0x03955968 B 0x3956168
	0x0395596C LDR X21, [X31 + 0x68]
	0x03955970 BL 0x1C16F20
	0x03955974 B 0x3956168
	0x03955978 LDR X21, [X31 + 0x68]
	0x0395597C BL 0x1C16F20
	0x03955980 B 0x3956168
	0x03955984 LDR X21, [X31 + 0x68]
	0x03955988 BL 0x1C16F20
	0x0395598C B 0x3956168
	0x03955990 LDR X21, [X31 + 0x68]
	0x03955994 BL 0x1C16F20
	0x03955998 B 0x3956168
	0x0395599C BL 0x1C16F20
	0x039559A0 B 0x3956168
	0x039559A4 BL 0x1C16F20
	0x039559A8 B 0x3956168
	0x039559AC BL 0x1C16F20
	0x039559B0 B 0x3956168
	0x039559B4 BL 0x1C16F20
	0x039559B8 B 0x3956168
	0x039559BC BL 0x1C16F20
	0x039559C0 B 0x3956168
	0x039559C4 BL 0x1C16F20
	0x039559C8 B 0x3956168
	0x039559CC BL 0x1C16F20
	0x039559D0 B 0x3956168
	0x039559D4 B 0x3955B64
	0x039559D8 B 0x3955B64
	0x039559DC B 0x3955B64
	0x039559E0 B 0x3955B64
	0x039559E4 B 0x3955B64
	0x039559E8 B 0x3955B64
	0x039559EC B 0x3955B64
	0x039559F0 B 0x3955B48
	0x039559F4 B 0x3955B64
	0x039559F8 B 0x3955B64
	0x039559FC B 0x3955B64
	0x03955A00 B 0x3955B64
	0x03955A04 B 0x3955B64
	0x03955A08 B 0x3955B64
	0x03955A0C B 0x3955B64
	0x03955A10 B 0x3955B64
	0x03955A14 B 0x3955B64
	0x03955A18 B 0x3955B48
	0x03955A1C B 0x3955B64
	0x03955A20 B 0x3955B48
	0x03955A24 B 0x3955B48
	0x03955A28 B 0x3955B48
	0x03955A2C B 0x3955B64
	0x03955A30 B 0x3955B64
	0x03955A34 B 0x3955B64
	0x03955A38 B 0x3955B64
	0x03955A3C B 0x3955B48
	0x03955A40 B 0x3955B48
	0x03955A44 B 0x3955B48
	0x03955A48 B 0x3955B64
	0x03955A4C B 0x3955B64
	0x03955A50 B 0x3955B64
	0x03955A54 B 0x3955B48
	0x03955A58 B 0x3955B64
	0x03955A5C B 0x3955B48
	0x03955A60 B 0x3955A88
	0x03955A64 B 0x3955A88
	0x03955A68 B 0x3955B64
	0x03955A6C B 0x3955B64
	0x03955A70 B 0x3955AA0
	0x03955A74 B 0x3955AA0
	0x03955A78 B 0x3955B48
	0x03955A7C B 0x3955B48
	0x03955A80 B 0x3955B48
	0x03955A84 B 0x3955A88
	0x03955A88 LDR X21, [X31 + 0x68]
	0x03955A8C LDR X22, [X31 + 0x50]
	0x03955A90 B 0x3955B64
	0x03955A94 B 0x3955B48
	0x03955A98 B 0x3955B64
	0x03955A9C B 0x3955AA0
	0x03955AA0 LDR X21, [X31 + 0x68]
	0x03955AA4 LDR X22, [X31 + 0x50]
	0x03955AA8 LDR W26, [X31 + 0x60]
	0x03955AAC B 0x3955B64
	0x03955AB0 B 0x3955B64
	0x03955AB4 B 0x3955B64
	0x03955AB8 B 0x3955B48
	0x03955ABC B 0x3955B64
	0x03955AC0 B 0x3955B64
	0x03955AC4 B 0x3955B64
	0x03955AC8 B 0x3955B64
	0x03955ACC B 0x3955B64
	0x03955AD0 B 0x3955B48
	0x03955AD4 B 0x3955B64
	0x03955AD8 B 0x3955B64
	0x03955ADC B 0x3955B64
	0x03955AE0 B 0x3955B64
	0x03955AE4 B 0x3955B64
	0x03955AE8 B 0x3955B64
	0x03955AEC B 0x3955B64
	0x03955AF0 B 0x3955B64
	0x03955AF4 B 0x3955B48
	0x03955AF8 B 0x3955B64
	0x03955AFC B 0x3955B48
	0x03955B00 B 0x3955B48
	0x03955B04 B 0x3955B48
	0x03955B08 B 0x3955B64
	0x03955B0C B 0x3955B64
	0x03955B10 B 0x3955B48
	0x03955B14 B 0x3955B64
	0x03955B18 B 0x3955B48
	0x03955B1C B 0x3955B64
	0x03955B20 B 0x3955B64
	0x03955B24 B 0x3955B48
	0x03955B28 B 0x3955B48
	0x03955B2C B 0x3955B64
	0x03955B30 B 0x3955B64
	0x03955B34 B 0x3955B48
	0x03955B38 B 0x3955B48
	0x03955B3C B 0x3955B64
	0x03955B40 B 0x3955B48
	0x03955B44 B 0x3955B64
	0x03955B48 LDR X21, [X31 + 0x68]
	0x03955B4C B 0x3955B64
	0x03955B50 B 0x3955B64
	0x03955B54 B 0x3955B64
	0x03955B58 B 0x3955B64
	0x03955B5C B 0x3955B64
	0x03955B60 B 0x3955B64
	0x03955B64 MOV X20, X1
	0x03955B68 MOV X28, X0
	0x03955B6C CMP W20, 0x1
	0x03955B70 B.NE 0x3956078
	0x03955B74 MOV X0, X28
	0x03955B78 BL 0x3EB1AD0
	0x03955B7C LDR X19, [X0]
	0x03955B80 BL 0x3EB1AE0
	0x03955B84 MOV W20, W31
	0x03955B88 B 0x3955804
	0x03955B8C ADRP X8, 0x7F8000
	0x03955B90 LDR X8, [X8 + 0xAD0]
	0x03955B94 LDR X0, [X8]
	0x03955B98 LDR W8, [X0 + 0xE0]
	0x03955B9C CBNZ W8, 0x3955BA4
	0x03955BA0 BL 0x1C16DFC
	0x03955BA4 ADRP X8, 0x7FA000
	0x03955BA8 LDR X8, [X8 + 0x490]
	0x03955BAC MOV X1, X31
	0x03955BB0 LDR X0, [X8]
	0x03955BB4 BL 0x38FAC88
	0x03955BB8 MOV X19, X31
	0x03955BBC B 0x3956050
	0x03955BC0 ADRP X8, 0x7FA000
	0x03955BC4 LDR X8, [X8 + 0x408]
	0x03955BC8 ADD X0, X31, 0x150
	0x03955BCC LDR X1, [X8]
	0x03955BD0 BL 0x2BBB1EC
	0x03955BD4 LDR X22, [X31 + 0x38]
	0x03955BD8 CBZ X22, 0x39560D0
	0x03955BDC ADRP X8, 0x7FA000
	0x03955BE0 LDR X8, [X8 + 0x3C0]
	0x03955BE4 MOV X0, X22
	0x03955BE8 LDR X1, [X8]
	0x03955BEC BL 0x2AA4E98
	0x03955BF0 ADRP X8, 0x7FA000
	0x03955BF4 LDR X8, [X8 + 0x3F8]
	0x03955BF8 LDR X1, [X8]
	0x03955BFC BL 0x21D79F4
	0x03955C00 ADRP X8, 0x7FA000
	0x03955C04 LDR X8, [X8 + 0x3C8]
	0x03955C08 MOV X20, X0
	0x03955C0C MOV X0, X22
	0x03955C10 LDR X1, [X8]
	0x03955C14 BL 0x2AA4F58
	0x03955C18 ADRP X8, 0x7FA000
	0x03955C1C LDR X8, [X8 + 0x3F0]
	0x03955C20 LDR X1, [X8]
	0x03955C24 BL 0x21D79F4
	0x03955C28 ADRP X8, 0x7FA000
	0x03955C2C LDR X8, [X8 + 0x480]
	0x03955C30 MOV X24, X0
	0x03955C34 LDR X8, [X8]
	0x03955C38 MOV X0, X8
	0x03955C3C BL 0x1C16F10
	0x03955C40 ADRP X8, 0x7FA000
	0x03955C44 LDR X8, [X8 + 0x470]
	0x03955C48 MOV X19, X0
	0x03955C4C LDR X1, [X8]
	0x03955C50 BL 0x2FBC1A8
	0x03955C54 CBZ X20, 0x39560D0
	0x03955C58 LDR W8, [X20 + 0x18]
	0x03955C5C CMP W8, 0x1
	0x03955C60 B.LT 0x3955F48
	0x03955C64 ADRP X22, 0x7C8000
	0x03955C68 ADRP X29, 0x7A8000
	0x03955C6C LDR X22, [X22 + 0xF38]
	0x03955C70 LDR X29, [X29 + 0x858]
	0x03955C74 MOV W25, W31
	0x03955C78 STR X20, [X31 + 0x78]
	0x03955C7C STR X24, [X31 + 0x60]
	0x03955C80 ADRP X8, 0x7F9000
	0x03955C84 LDR X8, [X8 + 0xC48]
	0x03955C88 MOV X0, X20
	0x03955C8C MOV W1, W25
	0x03955C90 LDR X2, [X8]
	0x03955C94 BL 0x301BCCC
	0x03955C98 CBZ X24, 0x39560D0
	0x03955C9C ADRP X8, 0x7FA000
	0x03955CA0 LDR X8, [X8 + 0x478]
	0x03955CA4 MOV X23, X0
	0x03955CA8 MOV X0, X24
	0x03955CAC MOV W1, W25
	0x03955CB0 LDR X2, [X8]
	0x03955CB4 BL 0x301BCCC
	0x03955CB8 CBZ X21, 0x39560D0
	0x03955CBC MOV X26, X0
	0x03955CC0 CBZ X0, 0x39560D0
	0x03955CC4 LDR X0, [X26 + 0x18]
	0x03955CC8 LDR W27, [X21 + 0x18]
	0x03955CCC ADD X1, X31, 0x118
	0x03955CD0 MOV W2, W31
	0x03955CD4 MOV W3, W31
	0x03955CD8 MOV X4, X31
	0x03955CDC BL 0x397BFB8
	0x03955CE0 TBZ X0, 0x0, 0x3955F30
	0x03955CE4 ADRP X8, 0x7F9000
	0x03955CE8 LDR X21, [X31 + 0x118]
	0x03955CEC LDR X8, [X8 + 0x560]
	0x03955CF0 LDR X0, [X8]
	0x03955CF4 BL 0x1C16F10
	0x03955CF8 MOV X1, X21
	0x03955CFC MOV X2, X31
	0x03955D00 MOV X28, X0
	0x03955D04 BL 0x3900368
	0x03955D08 STR X28, [X26 + 0x10]
	0x03955D0C CBZ X23, 0x39560D0
	0x03955D10 CBZ X28, 0x39560D0
	0x03955D14 LDR W8, [X23 + 0x48]
	0x03955D18 MOV X0, X28
	0x03955D1C MOV W1, W27
	0x03955D20 MOV X2, X31
	0x03955D24 STR W8, [X28 + 0x48]
	0x03955D28 BL 0x3900D2C
	0x03955D2C LDR X1, [X26 + 0x10]
	0x03955D30 MOV X0, X23
	0x03955D34 MOV X2, X31
	0x03955D38 BL 0x39005C4
	0x03955D3C LDR X1, [X26 + 0x18]
	0x03955D40 LDR X21, [X31 + 0x68]
	0x03955D44 CBZ X1, 0x39560D0
	0x03955D48 MOV W28, W31
	0x03955D4C LDR W8, [X1 + 0x18]
	0x03955D50 CMP W28, W8
	0x03955D54 B.GE 0x3955D90
	0x03955D58 LDR X0, [X26 + 0x20]
	0x03955D5C CBZ X0, 0x39560D0
	0x03955D60 LDR X2, [X22]
	0x03955D64 MOV W1, W28
	0x03955D68 BL 0x2FDC41C
	0x03955D6C MOV W2, W0
	0x03955D70 LDR X3, [X29]
	0x03955D74 LDR X0, [X31 + 0x70]
	0x03955D78 ADD W1, W27, W28
	0x03955D7C BL 0x2A0A344
	0x03955D80 LDR X1, [X26 + 0x18]
	0x03955D84 ADD W28, W28, 0x1
	0x03955D88 CBNZ X1, 0x3955D4C
	0x03955D8C B 0x39560D0
	0x03955D90 LDR X9, [X26 + 0x28]
	0x03955D94 CBZ X9, 0x39560D0
	0x03955D98 LDR W9, [X9 + 0x18]
	0x03955D9C CMP W9, W8
	0x03955DA0 B.NE 0x3955DF4
	0x03955DA4 CMP W8, 0x1
	0x03955DA8 B.LT 0x3955DF4
	0x03955DAC MOV W28, W31
	0x03955DB0 LDR X0, [X26 + 0x28]
	0x03955DB4 CBZ X0, 0x39560D0
	0x03955DB8 LDR X2, [X22]
	0x03955DBC MOV W1, W28
	0x03955DC0 BL 0x2FDC41C
	0x03955DC4 MOV W2, W0
	0x03955DC8 LDR X0, [X31 + 0x50]
	0x03955DCC CBZ X0, 0x39560D0
	0x03955DD0 LDR X3, [X29]
	0x03955DD4 ADD W1, W27, W28
	0x03955DD8 BL 0x2A0A344
	0x03955DDC LDR X1, [X26 + 0x18]
	0x03955DE0 CBZ X1, 0x39560D0
	0x03955DE4 LDR W8, [X1 + 0x18]
	0x03955DE8 ADD W28, W28, 0x1
	0x03955DEC CMP W28, W8
	0x03955DF0 B.LT 0x3955DB0
	0x03955DF4 ADRP X8, 0x7F8000
	0x03955DF8 LDR X8, [X8 + 0xE08]
	0x03955DFC MOV X0, X21
	0x03955E00 LDR X2, [X8]
	0x03955E04 BL 0x301C194
	0x03955E08 MOV X0, X23
	0x03955E0C MOV X1, X31
	0x03955E10 BL 0x38FFA80
	0x03955E14 CBZ X0, 0x39560D0
	0x03955E18 LDR X8, [X0 + 0x18]
	0x03955E1C MOV X23, X0
	0x03955E20 CMP W8, 0x1
	0x03955E24 B.LT 0x3955F30
	0x03955E28 MOV X28, X31
	0x03955E2C AND X8, X8, 0x0
	0x03955E30 ADD X20, X23, 0x20
	0x03955E34 CMP X28, W8, UXTW
	0x03955E38 B.CS 0x39560DC
	0x03955E3C ADRP X27, 0x7F8000
	0x03955E40 LDR X21, [X20, X28, LSL #3]
	0x03955E44 LDR X27, [X27 + 0xC80]
	0x03955E48 LDR X24, [X31 + 0x70]
	0x03955E4C MOV W1, W21
	0x03955E50 LDR X2, [X27]
	0x03955E54 MOV X0, X24
	0x03955E58 UBFM X26, X21, 0x20, 0x3F
	0x03955E5C BL 0x2A0A2A8
	0x03955E60 LDR X2, [X27]
	0x03955E64 MOV W27, W0
	0x03955E68 MOV X0, X24
	0x03955E6C MOV W1, W26
	0x03955E70 BL 0x2A0A2A8
	0x03955E74 MOV W2, W0
	0x03955E78 ADD X0, X31, 0xE0
	0x03955E7C MOV W1, W27
	0x03955E80 MOV X3, X31
	0x03955E84 STR X31, [X31 + 0xE0]
	0x03955E88 BL 0x38FDC24
	0x03955E8C LDR X1, [X31 + 0xE0]
	0x03955E90 ADD X0, X31, 0x108
	0x03955E94 MOV X2, X21
	0x03955E98 MOV X3, X31
	0x03955E9C BL 0x38FE738
	0x03955EA0 LDR X2, [X31 + 0x110]
	0x03955EA4 LDR W9, [X31 + 0x2C]
	0x03955EA8 LDR X21, [X31 + 0x68]
	0x03955EAC CMP W9, W2
	0x03955EB0 B.LE 0x3955EC0
	0x03955EB4 UBFM X8, X2, 0x20, 0x3F
	0x03955EB8 CMP W9, W8
	0x03955EBC B.GT 0x3955F20
	0x03955EC0 CBZ X19, 0x39560D0
	0x03955EC4 ADRP X9, 0x7FA000
	0x03955EC8 LDR X1, [X31 + 0x108]
	0x03955ECC LDR W10, [X19 + 0x1C]
	0x03955ED0 LDR X8, [X19 + 0x10]
	0x03955ED4 LDR X9, [X9 + 0x438]
	0x03955ED8 ADD W10, W10, 0x1
	0x03955EDC LDR X9, [X9]
	0x03955EE0 STR W10, [X19 + 0x1C]
	0x03955EE4 CBZ X8, 0x39560D0
	0x03955EE8 LDRSW X10, [X19 + 0x18]
	0x03955EEC LDR W11, [X8 + 0x18]
	0x03955EF0 CMP W10, W11
	0x03955EF4 B.CS 0x3955F0C
	0x03955EF8 ADD W9, W10, 0x1
	0x03955EFC ADD X8, X8, X10, 0x4, LSL
	0x03955F00 STR W9, [X19 + 0x18]
	0x03955F04 STP X1, X2, [X8 + 0x20]
	0x03955F08 B 0x3955F20
	0x03955F0C LDR X8, [X9 + 0x20]
	0x03955F10 MOV X0, X19
	0x03955F14 LDR X8, [X8 + 0xC0]
	0x03955F18 LDR X3, [X8 + 0x70]
	0x03955F1C BL 0x2FBC9B4
	0x03955F20 LDR W8, [X23 + 0x18]
	0x03955F24 ADD X28, X28, 0x1
	0x03955F28 CMP X28, W8, SXTW
	0x03955F2C B.LT 0x3955E34
	0x03955F30 LDR X20, [X31 + 0x78]
	0x03955F34 LDR X24, [X31 + 0x60]
	0x03955F38 ADD W25, W25, 0x1
	0x03955F3C LDR W8, [X20 + 0x18]
	0x03955F40 CMP W25, W8
	0x03955F44 B.LT 0x3955C80
	0x03955F48 ADRP X8, 0x7C9000
	0x03955F4C LDR X8, [X8 + 0xBB8]
	0x03955F50 LDR X0, [X31 + 0x30]
	0x03955F54 LDR X1, [X8]
	0x03955F58 BL 0x21C0304
	0x03955F5C ADRP X8, 0x7F9000
	0x03955F60 LDR X8, [X8 + 0x2A8]
	0x03955F64 LDR X1, [X8]
	0x03955F68 BL 0x21D7880
	0x03955F6C CBZ X0, 0x39560D0
	0x03955F70 ADRP X24, 0x7FA000
	0x03955F74 LDP X23, X22, [X31 + 0x18]
	0x03955F78 LDR X24, [X24 + 0x60]
	0x03955F7C CBZ X23, 0x39560D0
	0x03955F80 LDR W8, [X0 + 0x18]
	0x03955F84 MOV X20, X0
	0x03955F88 MOV X0, X19
	0x03955F8C STR W8, [X23 + 0x10]
	0x03955F90 ADRP X8, 0x7FA000
	0x03955F94 LDR X8, [X8 + 0x3D8]
	0x03955F98 LDR X1, [X8]
	0x03955F9C BL 0x21C02A8
	0x03955FA0 ADRP X8, 0x7FA000
	0x03955FA4 LDR X8, [X8 + 0x430]
	0x03955FA8 MOV X19, X0
	0x03955FAC LDR X8, [X8]
	0x03955FB0 MOV X0, X8
	0x03955FB4 BL 0x1C16F10
	0x03955FB8 ADRP X8, 0x7FA000
	0x03955FBC LDR X8, [X8 + 0x488]
	0x03955FC0 MOV X1, X23
	0x03955FC4 MOV X3, X31
	0x03955FC8 MOV X21, X0
	0x03955FCC LDR X2, [X8]
	0x03955FD0 BL 0x2D2C704
	0x03955FD4 ADRP X8, 0x7FA000
	0x03955FD8 LDR X8, [X8 + 0x3E8]
	0x03955FDC MOV X0, X19
	0x03955FE0 MOV X1, X21
	0x03955FE4 LDR X2, [X8]
	0x03955FE8 BL 0x21CCD80
	0x03955FEC LDR X1, [X24]
	0x03955FF0 BL 0x21D770C
	0x03955FF4 LDR X1, [X31 + 0x68]
	0x03955FF8 MOV X19, X0
	0x03955FFC MOV X0, X22
	0x03956000 MOV W2, W31
	0x03956004 MOV X3, X31
	0x03956008 BL 0x3916CF4
	0x0395600C LDR X1, [X31 + 0x70]
	0x03956010 MOV X0, X22
	0x03956014 MOV X2, X31
	0x03956018 BL 0x3916234
	0x0395601C LDR X1, [X31 + 0x50]
	0x03956020 MOV X0, X22
	0x03956024 MOV X2, X31
	0x03956028 BL 0x391634C
	0x0395602C MOV X0, X22
	0x03956030 MOV X1, X20
	0x03956034 BL 0x39561FC
	0x03956038 B 0x3956050
	0x0395603C ADRP X8, 0x7F9000
	0x03956040 LDR X8, [X8 + 0x408]
	0x03956044 ADD X0, X31, 0x150
	0x03956048 LDR X1, [X8]
	0x0395604C BL 0x2BBB1EC
	0x03956050 MOV X0, X19
	0x03956054 LDP X20, X19, [X31 + 0x1D0]
	0x03956058 LDP X22, X21, [X31 + 0x1C0]
	0x0395605C LDP X24, X23, [X31 + 0x1B0]
	0x03956060 LDP X26, X25, [X31 + 0x1A0]
	0x03956064 LDP X28, X27, [X31 + 0x190]
	0x03956068 LDP X29, X30, [X31 + 0x180]
	0x0395606C LDR V8, [X31 + 0x170]
	0x03956070 ADD X31, X31, 0x1E0
	0x03956074 RET
	0x03956078 MOV X19, X31
	0x0395607C ADRP X8, 0x7F9000
	0x03956080 LDR X8, [X8 + 0x400]
	0x03956084 LDR X1, [X8]
	0x03956088 ADD X0, X31, 0x130
	0x0395608C BL 0x2BB2394
	0x03956090 LDR X22, [X31 + 0x38]
	0x03956094 CBNZ X19, 0x3956160
	0x03956098 CMP W20, 0x1
	0x0395609C B.NE 0x3956158
	0x039560A0 MOV X0, X28
	0x039560A4 BL 0x3EB1AD0
	0x039560A8 LDR X19, [X0]
	0x039560AC BL 0x3EB1AE0
	0x039560B0 ADRP X8, 0x7F9000
	0x039560B4 LDR X8, [X8 + 0x408]
	0x039560B8 ADD X0, X31, 0x150
	0x039560BC LDR X1, [X8]
	0x039560C0 BL 0x2BBB1EC
	0x039560C4 CBZ X19, 0x3955BD8
	0x039560C8 MOV X0, X19
	0x039560CC BL 0x1C16F18
	0x039560D0 BL 0x1C16F20
	0x039560D4 BL 0x1C16F20
	0x039560D8 BL 0x1C16F20
	0x039560DC BL 0x1C16F28
	0x039560E0 BL 0x1C16F20
	0x039560E4 BL 0x1C16F20
	0x039560E8 MOV X0, X19
	0x039560EC BL 0x1C16F18
	0x039560F0 ADRP X0, 0x7A2000
	0x039560F4 LDR X0, [X0 + 0x528]
	0x039560F8 BL 0x1C16D08
	0x039560FC BL 0x1C16F10
	0x03956100 MOV X19, X0
	0x03956104 ADRP X0, 0x7F7000
	0x03956108 LDR X0, [X0 + 0xE90]
	0x0395610C B 0x395612C
	0x03956110 ADRP X0, 0x7A2000
	0x03956114 LDR X0, [X0 + 0x528]
	0x03956118 BL 0x1C16D08
	0x0395611C BL 0x1C16F10
	0x03956120 MOV X19, X0
	0x03956124 ADRP X0, 0x7F8000
	0x03956128 LDR X0, [X0 + 0x650]
	0x0395612C BL 0x1C16D08
	0x03956130 MOV X1, X0
	0x03956134 MOV X0, X19
	0x03956138 MOV X2, X31
	0x0395613C BL 0x330E100
	0x03956140 ADRP X0, 0x7F9000
	0x03956144 LDR X0, [X0 + 0x498]
	0x03956148 BL 0x1C16D08
	0x0395614C MOV X1, X0
	0x03956150 MOV X0, X19
	0x03956154 BL 0x1C16DEC
	0x03956158 MOV X19, X31
	0x0395615C B 0x395616C
	0x03956160 MOV X0, X19
	0x03956164 BL 0x1C16F18
	0x03956168 MOV X28, X0
	0x0395616C ADRP X8, 0x7F9000
	0x03956170 LDR X8, [X8 + 0x408]
	0x03956174 LDR X1, [X8]
	0x03956178 ADD X0, X31, 0x150
	0x0395617C BL 0x2BBB1EC
	0x03956180 CBNZ X19, 0x395618C
	0x03956184 MOV X0, X28
	0x03956188 BL 0x1D2C690
	0x0395618C MOV X0, X19
	0x03956190 BL 0x1C16F18
	0x03956194 BL 0x1990590
	0x03956198 MOV X20, X1
	0x0395619C MOV X28, X0
	0x039561A0 B 0x395607C
	0x039561A4 B 0x39561E4
	0x039561A8 B 0x39561C4
	0x039561AC B 0x39561E4
	0x039561B0 B 0x39561C4
	0x039561B4 B 0x39561E4
	0x039561B8 B 0x39561E4
	0x039561BC B 0x39561E4
	0x039561C0 B 0x39561E4
	0x039561C4 LDR X21, [X31 + 0x68]
	0x039561C8 B 0x39561E4
	0x039561CC B 0x39561E4
	0x039561D0 B 0x39561E4
	0x039561D4 B 0x39561E4
	0x039561D8 B 0x39561E4
	0x039561DC B 0x39561E4
	0x039561E0 B 0x39561E4
	0x039561E4 MOV X20, X1
	0x039561E8 MOV X28, X0
	0x039561EC LDR X22, [X31 + 0x38]
	0x039561F0 B 0x3956098
	0x039561F4 MOV X1, X31
	0x039561F8 B 0x33BDD8C
	0x039561FC STP X30, X27, [X31 - 0x50]!
	0x03956200 STP X26, X25, [X31 + 0x10]
	0x03956204 STP X24, X23, [X31 + 0x20]
	0x03956208 STP X22, X21, [X31 + 0x30]
	0x0395620C STP X20, X19, [X31 + 0x40]
	0x03956210 ADRP X20, 0xA8B000
	0x03956214 ADRP X23, 0x7F9000
	0x03956218 ADRP X22, 0x79D000
	0x0395621C LDRB W8, [X20 + 0x9BF]
	0x03956220 LDR X23, [X23 + 0x4A0]
	0x03956224 LDR X22, [X22 + 0x598]
	0x03956228 MOV X21, X1
	0x0395622C MOV X19, X0
	0x03956230 TBNZ X8, 0x0, 0x3956308
	0x03956234 ADRP X0, 0x7F8000
	0x03956238 LDR X0, [X0 + 0xD50]
	0x0395623C BL 0x1C16CF4
	0x03956240 ADRP X0, 0x7F9000
	0x03956244 LDR X0, [X0 + 0x4A8]
	0x03956248 BL 0x1C16CF4
	0x0395624C ADRP X0, 0x7F7000
	0x03956250 LDR X0, [X0 + 0xAA0]
	0x03956254 BL 0x1C16CF4
	0x03956258 ADRP X0, 0x7F9000
	0x0395625C LDR X0, [X0 + 0x4B0]
	0x03956260 BL 0x1C16CF4
	0x03956264 ADRP X0, 0x7F8000
	0x03956268 LDR X0, [X0 + 0xD58]
	0x0395626C BL 0x1C16CF4
	0x03956270 ADRP X0, 0x7F8000
	0x03956274 LDR X0, [X0 + 0xD60]
	0x03956278 BL 0x1C16CF4
	0x0395627C ADRP X0, 0x7F9000
	0x03956280 LDR X0, [X0 + 0x4B8]
	0x03956284 BL 0x1C16CF4
	0x03956288 ADRP X0, 0x79E000
	0x0395628C LDR X0, [X0 + 0xE58]
	0x03956290 BL 0x1C16CF4
	0x03956294 ADRP X0, 0x7C5000
	0x03956298 LDR X0, [X0 + 0x790]
	0x0395629C BL 0x1C16CF4
	0x039562A0 ADRP X0, 0x7C5000
	0x039562A4 LDR X0, [X0 + 0x798]
	0x039562A8 BL 0x1C16CF4
	0x039562AC ADRP X0, 0x79E000
	0x039562B0 LDR X0, [X0 + 0xE30]
	0x039562B4 BL 0x1C16CF4
	0x039562B8 ADRP X0, 0x79D000
	0x039562BC LDR X0, [X0 + 0x598]
	0x039562C0 BL 0x1C16CF4
	0x039562C4 ADRP X0, 0x7F9000
	0x039562C8 LDR X0, [X0 + 0x4C0]
	0x039562CC BL 0x1C16CF4
	0x039562D0 ADRP X0, 0x7F9000
	0x039562D4 LDR X0, [X0 + 0x4C8]
	0x039562D8 BL 0x1C16CF4
	0x039562DC ADRP X0, 0x7F9000
	0x039562E0 LDR X0, [X0 + 0x4D0]
	0x039562E4 BL 0x1C16CF4
	0x039562E8 ADRP X0, 0x7F9000
	0x039562EC LDR X0, [X0 + 0x4D8]
	0x039562F0 BL 0x1C16CF4
	0x039562F4 ADRP X0, 0x7F9000
	0x039562F8 LDR X0, [X0 + 0x4A0]
	0x039562FC BL 0x1C16CF4
	0x03956300 MOVZ W8, 0x1
	0x03956304 STRB W8, [X20 + 0x9BF]
	0x03956308 LDR X0, [X23]
	0x0395630C BL 0x1C16F10
	0x03956310 MOV X1, X31
	0x03956314 MOV X20, X0
	0x03956318 BL 0x33BDD8C
	0x0395631C LDR X0, [X22]
	0x03956320 LDR W8, [X0 + 0xE0]
	0x03956324 CBNZ W8, 0x395632C
	0x03956328 BL 0x1C16DFC
	0x0395632C MOV X0, X19
	0x03956330 MOV X1, X31
	0x03956334 MOV X2, X31
	0x03956338 BL 0x3C3883C
	0x0395633C TBNZ X0, 0x0, 0x395667C
	0x03956340 CBZ X21, 0x395665C
	0x03956344 ADRP X8, 0x7F7000
	0x03956348 LDR X8, [X8 + 0xAA0]
	0x0395634C MOV X0, X21
	0x03956350 LDR X1, [X8]
	0x03956354 BL 0x21B23E0
	0x03956358 TBZ X0, 0x0, 0x395665C
	0x0395635C CBZ X19, 0x3956678
	0x03956360 MOV X0, X19
	0x03956364 MOV X1, X31
	0x03956368 MOV X2, X31
	0x0395636C BL 0x3912114
	0x03956370 CBZ X0, 0x3956678
	0x03956374 ADRP X8, 0x79E000
	0x03956378 LDR X22, [X0 + 0x18]
	0x0395637C LDR X8, [X8 + 0xE58]
	0x03956380 MOV X23, X0
	0x03956384 MOV W1, W22
	0x03956388 LDR X0, [X8]
	0x0395638C BL 0x1C16D6C
	0x03956390 CBZ X20, 0x3956678
	0x03956394 STR X0, [X20 + 0x18]
	0x03956398 ADRP X8, 0x79E000
	0x0395639C LDR X8, [X8 + 0xE30]
	0x039563A0 LDR X0, [X8]
	0x039563A4 BL 0x1C16F10
	0x039563A8 ADRP X8, 0x7C5000
	0x039563AC LDR X8, [X8 + 0x798]
	0x039563B0 MOV X1, X21
	0x039563B4 MOV X24, X0
	0x039563B8 LDR X2, [X8]
	0x039563BC BL 0x2FDC030
	0x039563C0 STR X24, [X20 + 0x10]
	0x039563C4 CBZ X24, 0x3956678
	0x039563C8 ADRP X8, 0x7C5000
	0x039563CC LDR X8, [X8 + 0x790]
	0x039563D0 MOV X0, X24
	0x039563D4 LDR X1, [X8]
	0x039563D8 BL 0x2FDE354
	0x039563DC ADRP X8, 0x7F9000
	0x039563E0 LDR X1, [X20 + 0x10]
	0x039563E4 LDR X8, [X8 + 0x4A8]
	0x039563E8 MOV X0, X23
	0x039563EC LDR X2, [X8]
	0x039563F0 BL 0x217FF94
	0x039563F4 CMP W22, 0x1
	0x039563F8 MOV X21, X0
	0x039563FC B.LT 0x3956448
	0x03956400 ADRP X24, 0x7F8000
	0x03956404 LDR X24, [X24 + 0xD50]
	0x03956408 MOV X23, X31
	0x0395640C AND X22, X22, 0x0
	0x03956410 LDP X0, X25, [X20 + 0x10]
	0x03956414 LDR X2, [X24]
	0x03956418 MOV W1, W23
	0x0395641C BL 0x217F01C
	0x03956420 CBZ X25, 0x3956678
	0x03956424 LDR W8, [X25 + 0x18]
	0x03956428 CMP X23, X8
	0x0395642C B.CS 0x3956674
	0x03956430 ADD X9, X25, X23, 0x2, LSL
	0x03956434 ADD X23, X23, 0x1
	0x03956438 ADD W8, W0, 0x1
	0x0395643C CMP X22, X23
	0x03956440 STR W8, [X9 + 0x20]
	0x03956444 B.NE 0x3956410
	0x03956448 LDR X22, [X19 + 0x28]
	0x0395644C CBZ X22, 0x3956678
	0x03956450 LDR W8, [X22 + 0x18]
	0x03956454 CMP W8, 0x1
	0x03956458 B.LT 0x39564E4
	0x0395645C MOV W23, W31
	0x03956460 CMP W23, W8
	0x03956464 B.CS 0x3956674
	0x03956468 ADD X8, X22, W23, 0x3, SXTW
	0x0395646C LDR X0, [X8 + 0x20]
	0x03956470 CBZ X0, 0x3956678
	0x03956474 LDR X8, [X0 + 0x10]
	0x03956478 CBZ X8, 0x3956678
	0x0395647C LDR W9, [X8 + 0x18]
	0x03956480 CMP W9, 0x1
	0x03956484 B.LT 0x39564CC
	0x03956488 LDR X10, [X20 + 0x18]
	0x0395648C MOV W11, W31
	0x03956490 CMP W9, W11
	0x03956494 B.EQ 0x3956674
	0x03956498 ADD X12, X8, W11, 0x2, SXTW
	0x0395649C LDRSW X13, [X12 + 0x20]!
	0x039564A0 CBZ X10, 0x3956678
	0x039564A4 LDR W14, [X10 + 0x18]
	0x039564A8 CMP W13, W14
	0x039564AC B.CS 0x3956674
	0x039564B0 ADD X14, X10, X13, 0x2, LSL
	0x039564B4 LDR W14, [X14 + 0x20]
	0x039564B8 ADD W11, W11, 0x1
	0x039564BC CMP W9, W11
	0x039564C0 SUB W13, W13, W14
	0x039564C4 STR W13, [X12]
	0x039564C8 B.NE 0x3956490
	0x039564CC MOV X1, X31
	0x039564D0 BL 0x38FFC64
	0x039564D4 LDR W8, [X22 + 0x18]
	0x039564D8 ADD W23, W23, 0x1
	0x039564DC CMP W23, W8
	0x039564E0 B.LT 0x3956460
	0x039564E4 MOV X0, X19
	0x039564E8 MOV X1, X31
	0x039564EC BL 0x3916198
	0x039564F0 ADRP X24, 0x7F8000
	0x039564F4 LDR X24, [X24 + 0xD60]
	0x039564F8 MOV X22, X0
	0x039564FC LDR X8, [X24]
	0x03956500 MOV X0, X8
	0x03956504 BL 0x1C16F10
	0x03956508 ADRP X8, 0x7F9000
	0x0395650C LDR X8, [X8 + 0x4C0]
	0x03956510 MOV X1, X20
	0x03956514 MOV X3, X31
	0x03956518 MOV X23, X0
	0x0395651C LDR X2, [X8]
	0x03956520 BL 0x2D29AF0
	0x03956524 ADRP X25, 0x7F8000
	0x03956528 LDR X25, [X25 + 0xD58]
	0x0395652C MOV X0, X22
	0x03956530 MOV X1, X23
	0x03956534 LDR X2, [X25]
	0x03956538 BL 0x21D82A0
	0x0395653C ADRP X26, 0x7F9000
	0x03956540 LDR X26, [X26 + 0x4B8]
	0x03956544 MOV X22, X0
	0x03956548 LDR X8, [X26]
	0x0395654C MOV X0, X8
	0x03956550 BL 0x1C16F10
	0x03956554 ADRP X8, 0x7F9000
	0x03956558 LDR X8, [X8 + 0x4C8]
	0x0395655C MOV X1, X20
	0x03956560 MOV X3, X31
	0x03956564 MOV X23, X0
	0x03956568 LDR X2, [X8]
	0x0395656C BL 0x2D29A50
	0x03956570 ADRP X27, 0x7F9000
	0x03956574 LDR X27, [X27 + 0x4B0]
	0x03956578 MOV X0, X22
	0x0395657C MOV X1, X23
	0x03956580 LDR X2, [X27]
	0x03956584 BL 0x21CA71C
	0x03956588 MOV X22, X0
	0x0395658C MOV X0, X19
	0x03956590 MOV X1, X31
	0x03956594 BL 0x39162B4
	0x03956598 LDR X8, [X24]
	0x0395659C MOV X23, X0
	0x039565A0 MOV X0, X8
	0x039565A4 BL 0x1C16F10
	0x039565A8 ADRP X8, 0x7F9000
	0x039565AC LDR X8, [X8 + 0x4D0]
	0x039565B0 MOV X1, X20
	0x039565B4 MOV X3, X31
	0x039565B8 MOV X24, X0
	0x039565BC LDR X2, [X8]
	0x039565C0 BL 0x2D29AF0
	0x039565C4 LDR X2, [X25]
	0x039565C8 MOV X0, X23
	0x039565CC MOV X1, X24
	0x039565D0 BL 0x21D82A0
	0x039565D4 LDR X8, [X26]
	0x039565D8 MOV X23, X0
	0x039565DC MOV X0, X8
	0x039565E0 BL 0x1C16F10
	0x039565E4 ADRP X8, 0x7F9000
	0x039565E8 LDR X8, [X8 + 0x4D8]
	0x039565EC MOV X1, X20
	0x039565F0 MOV X3, X31
	0x039565F4 MOV X24, X0
	0x039565F8 LDR X2, [X8]
	0x039565FC BL 0x2D29A50
	0x03956600 LDR X2, [X27]
	0x03956604 MOV X0, X23
	0x03956608 MOV X1, X24
	0x0395660C BL 0x21CA71C
	0x03956610 MOV X20, X0
	0x03956614 MOV X0, X19
	0x03956618 MOV X1, X21
	0x0395661C MOV W2, W31
	0x03956620 MOV X3, X31
	0x03956624 BL 0x3916CF4
	0x03956628 MOV X0, X19
	0x0395662C MOV X1, X22
	0x03956630 MOV X2, X31
	0x03956634 BL 0x3916234
	0x03956638 MOV X0, X19
	0x0395663C MOV X1, X20
	0x03956640 LDP X20, X19, [X31 + 0x40]
	0x03956644 LDP X22, X21, [X31 + 0x30]
	0x03956648 LDP X24, X23, [X31 + 0x20]
	0x0395664C LDP X26, X25, [X31 + 0x10]
	0x03956650 MOV X2, X31
	0x03956654 LDP X30, X27, [X31], #0x50
	0x03956658 B 0x391634C
	0x0395665C LDP X20, X19, [X31 + 0x40]
	0x03956660 LDP X22, X21, [X31 + 0x30]
	0x03956664 LDP X24, X23, [X31 + 0x20]
	0x03956668 LDP X26, X25, [X31 + 0x10]
	0x0395666C LDP X30, X27, [X31], #0x50
	0x03956670 RET
	0x03956674 BL 0x1C16F28
	0x03956678 BL 0x1C16F20
	0x0395667C ADRP X0, 0x7A2000
	0x03956680 LDR X0, [X0 + 0x528]
	0x03956684 BL 0x1C16D08
	0x03956688 BL 0x1C16F10
	0x0395668C MOV X19, X0
	0x03956690 ADRP X0, 0x7F7000
	0x03956694 LDR X0, [X0 + 0xE90]
	0x03956698 BL 0x1C16D08
	0x0395669C MOV X1, X0
	0x039566A0 MOV X0, X19
	0x039566A4 MOV X2, X31
	0x039566A8 BL 0x330E100
	0x039566AC ADRP X0, 0x7F9000
	0x039566B0 LDR X0, [X0 + 0x4E0]
	0x039566B4 BL 0x1C16D08
	0x039566B8 MOV X1, X0
	0x039566BC MOV X0, X19
	0x039566C0 BL 0x1C16DEC
	0x039566C4 SUB X31, X31, 0x160
	0x039566C8 STR D10, [X31 + 0xE0]
	0x039566CC STP D9, D8, [X31 + 0xF0]
	0x039566D0 STP X29, X30, [X31 + 0x100]
	0x039566D4 STP X28, X27, [X31 + 0x110]
	0x039566D8 STP X26, X25, [X31 + 0x120]
	0x039566DC STP X24, X23, [X31 + 0x130]
	0x039566E0 STP X22, X21, [X31 + 0x140]
	0x039566E4 STP X20, X19, [X31 + 0x150]
	0x039566E8 STR X1, [X31 + 0x40]
	0x039566EC ADRP X20, 0xA8B000
	0x039566F0 ADRP X19, 0x79D000
	0x039566F4 LDRB W8, [X20 + 0x99B]
	0x039566F8 LDR X19, [X19 + 0x598]
	0x039566FC MOV V8.16B, V2.16B
	0x03956700 MOV V9.16B, V1.16B
	0x03956704 MOV V10.16B, V0.16B
	0x03956708 MOV X23, X0
	0x0395670C TBNZ X8, 0x0, 0x39568C8
	0x03956710 ADRP X0, 0x7C7000
	0x03956714 LDR X0, [X0 + 0x8D0]
	0x03956718 BL 0x1C16CF4
	0x0395671C ADRP X0, 0x7A7000
	0x03956720 LDR X0, [X0 + 0x870]
	0x03956724 BL 0x1C16CF4
	0x03956728 ADRP X0, 0x7A7000
	0x0395672C LDR X0, [X0 + 0x890]
	0x03956730 BL 0x1C16CF4
	0x03956734 ADRP X0, 0x7F7000
	0x03956738 LDR X0, [X0 + 0xC80]
	0x0395673C BL 0x1C16CF4
	0x03956740 ADRP X0, 0x7A7000
	0x03956744 LDR X0, [X0 + 0x888]
	0x03956748 BL 0x1C16CF4
	0x0395674C ADRP X0, 0x7F9000
	0x03956750 LDR X0, [X0 + 0x4E8]
	0x03956754 BL 0x1C16CF4
	0x03956758 ADRP X0, 0x7F8000
	0x0395675C LDR X0, [X0 + 0x3E0]
	0x03956760 BL 0x1C16CF4
	0x03956764 ADRP X0, 0x7F9000
	0x03956768 LDR X0, [X0 + 0x370]
	0x0395676C BL 0x1C16CF4
	0x03956770 ADRP X0, 0x7F9000
	0x03956774 LDR X0, [X0 + 0x4F0]
	0x03956778 BL 0x1C16CF4
	0x0395677C ADRP X0, 0x7F9000
	0x03956780 LDR X0, [X0 + 0x4F8]
	0x03956784 BL 0x1C16CF4
	0x03956788 ADRP X0, 0x7F9000
	0x0395678C LDR X0, [X0 + 0x500]
	0x03956790 BL 0x1C16CF4
	0x03956794 ADRP X0, 0x7F9000
	0x03956798 LDR X0, [X0 + 0x1F0]
	0x0395679C BL 0x1C16CF4
	0x039567A0 ADRP X0, 0x7F8000
	0x039567A4 LDR X0, [X0 + 0x560]
	0x039567A8 BL 0x1C16CF4
	0x039567AC ADRP X0, 0x7F9000
	0x039567B0 LDR X0, [X0 + 0x508]
	0x039567B4 BL 0x1C16CF4
	0x039567B8 ADRP X0, 0x79E000
	0x039567BC LDR X0, [X0 + 0xE10]
	0x039567C0 BL 0x1C16CF4
	0x039567C4 ADRP X0, 0x7F9000
	0x039567C8 LDR X0, [X0 + 0x308]
	0x039567CC BL 0x1C16CF4
	0x039567D0 ADRP X0, 0x7F9000
	0x039567D4 LDR X0, [X0 + 0x1C0]
	0x039567D8 BL 0x1C16CF4
	0x039567DC ADRP X0, 0x7F9000
	0x039567E0 LDR X0, [X0 + 0x510]
	0x039567E4 BL 0x1C16CF4
	0x039567E8 ADRP X0, 0x79E000
	0x039567EC LDR X0, [X0 + 0xE18]
	0x039567F0 BL 0x1C16CF4
	0x039567F4 ADRP X0, 0x7A1000
	0x039567F8 LDR X0, [X0 + 0xB70]
	0x039567FC BL 0x1C16CF4
	0x03956800 ADRP X0, 0x7F7000
	0x03956804 LDR X0, [X0 + 0xDD8]
	0x03956808 BL 0x1C16CF4
	0x0395680C ADRP X0, 0x7F9000
	0x03956810 LDR X0, [X0 + 0x1C8]
	0x03956814 BL 0x1C16CF4
	0x03956818 ADRP X0, 0x7F9000
	0x0395681C LDR X0, [X0 + 0x310]
	0x03956820 BL 0x1C16CF4
	0x03956824 ADRP X0, 0x7F7000
	0x03956828 LDR X0, [X0 + 0xE18]
	0x0395682C BL 0x1C16CF4
	0x03956830 ADRP X0, 0x7F8000
	0x03956834 LDR X0, [X0 + 0xFE0]
	0x03956838 BL 0x1C16CF4
	0x0395683C ADRP X0, 0x7F9000
	0x03956840 LDR X0, [X0 + 0x1D0]
	0x03956844 BL 0x1C16CF4
	0x03956848 ADRP X0, 0x7F8000
	0x0395684C LDR X0, [X0 + 0xFE8]
	0x03956850 BL 0x1C16CF4
	0x03956854 ADRP X0, 0x79E000
	0x03956858 LDR X0, [X0 + 0xE30]
	0x0395685C BL 0x1C16CF4
	0x03956860 ADRP X0, 0x7F7000
	0x03956864 LDR X0, [X0 + 0xDE8]
	0x03956868 BL 0x1C16CF4
	0x0395686C ADRP X0, 0x7F9000
	0x03956870 LDR X0, [X0 + 0x318]
	0x03956874 BL 0x1C16CF4
	0x03956878 ADRP X0, 0x7F7000
	0x0395687C LDR X0, [X0 + 0xDF0]
	0x03956880 BL 0x1C16CF4
	0x03956884 ADRP X0, 0x79D000
	0x03956888 LDR X0, [X0 + 0x598]
	0x0395688C BL 0x1C16CF4
	0x03956890 ADRP X0, 0x7F9000
	0x03956894 LDR X0, [X0 + 0x518]
	0x03956898 BL 0x1C16CF4
	0x0395689C ADRP X0, 0x7F9000
	0x039568A0 LDR X0, [X0 + 0x248]
	0x039568A4 BL 0x1C16CF4
	0x039568A8 ADRP X0, 0x7F8000
	0x039568AC LDR X0, [X0 + 0x20]
	0x039568B0 BL 0x1C16CF4
	0x039568B4 ADRP X0, 0x7F8000
	0x039568B8 LDR X0, [X0 + 0xB08]
	0x039568BC BL 0x1C16CF4
	0x039568C0 MOVZ W8, 0x1
	0x039568C4 STRB W8, [X20 + 0x99B]
	0x039568C8 LDR X0, [X19]
	0x039568CC STR X31, [X31 + 0xE8]
	0x039568D0 STR W31, [X31 + 0xDC]
	0x039568D4 STP X31, X31, [X31 + 0xC0]
	0x039568D8 STR X31, [X31 + 0xD0]
	0x039568DC LDR W8, [X0 + 0xE0]
	0x039568E0 CBNZ W8, 0x39568E8
	0x039568E4 BL 0x1C16DFC
	0x039568E8 MOV X0, X23
	0x039568EC MOV X1, X31
	0x039568F0 MOV X2, X31
	0x039568F4 BL 0x3C3883C
	0x039568F8 TBNZ X0, 0x0, 0x39573A0
	0x039568FC LDR X8, [X31 + 0x40]
	0x03956900 CBZ X8, 0x39573C0
	0x03956904 CBZ X23, 0x3957394
	0x03956908 ADRP X20, 0x7F9000
	0x0395690C ADRP X21, 0x7F7000
	0x03956910 ADRP X22, 0x7F7000
	0x03956914 ADRP X19, 0x7F8000
	0x03956918 LDR X20, [X20 + 0x370]
	0x0395691C LDR X21, [X21 + 0xDF0]
	0x03956920 LDR X22, [X22 + 0xDD8]
	0x03956924 LDR X19, [X19 + 0xB08]
	0x03956928 MOV X0, X23
	0x0395692C MOV X1, X31
	0x03956930 MOV X2, X31
	0x03956934 BL 0x3912114
	0x03956938 LDR X1, [X20]
	0x0395693C BL 0x21D79F4
	0x03956940 LDR X8, [X21]
	0x03956944 LDR X20, [X23 + 0x28]
	0x03956948 STR X0, [X31 + 0x50]
	0x0395694C MOV X0, X8
	0x03956950 BL 0x1C16F10
	0x03956954 LDR X2, [X22]
	0x03956958 MOV X1, X20
	0x0395695C MOV X21, X0
	0x03956960 BL 0x301B8E0
	0x03956964 MOV X0, X23
	0x03956968 MOV X1, X31
	0x0395696C BL 0x3916198
	0x03956970 LDR X8, [X23 + 0x48]
	0x03956974 STR X0, [X31 + 0x38]
	0x03956978 STR X21, [X31 + 0x10]
	0x0395697C CBZ X8, 0x39569BC
	0x03956980 ADRP X8, 0x7A7000
	0x03956984 LDR X8, [X8 + 0x888]
	0x03956988 ADRP X20, 0x7A7000
	0x0395698C LDR X0, [X8]
	0x03956990 LDR X20, [X20 + 0x890]
	0x03956994 BL 0x1C16F10
	0x03956998 LDR X1, [X20]
	0x0395699C MOV X20, X0
	0x039569A0 BL 0x2A09A9C
	0x039569A4 LDR X0, [X23 + 0x48]
	0x039569A8 MOV X1, X20
	0x039569AC MOV X2, X31
	0x039569B0 STR X20, [X31 + 0x48]
	0x039569B4 BL 0x3934C64
	0x039569B8 B 0x39569C0
	0x039569BC STR X31, [X31 + 0x48]
	0x039569C0 LDR X0, [X19]
	0x039569C4 ADRP X21, 0x7F9000
	0x039569C8 ADRP X20, 0x7F9000
	0x039569CC ADRP X19, 0x7F8000
	0x039569D0 LDR W8, [X0 + 0xE0]
	0x039569D4 LDR X21, [X21 + 0x318]
	0x039569D8 LDR X20, [X20 + 0x310]
	0x039569DC LDR X19, [X19 + 0x20]
	0x039569E0 CBNZ W8, 0x39569E8
	0x039569E4 BL 0x1C16DFC
	0x039569E8 LDR X0, [X31 + 0x40]
	0x039569EC MOV X1, X31
	0x039569F0 STR X23, [X31 + 0x18]
	0x039569F4 BL 0x3942528
	0x039569F8 LDR X8, [X21]
	0x039569FC MOV X21, X0
	0x03956A00 MOV X0, X8
	0x03956A04 BL 0x1C16F10
	0x03956A08 LDR X1, [X20]
	0x03956A0C STR X0, [X31 + 0x30]
	0x03956A10 BL 0x301B7C4
	0x03956A14 LDR X0, [X19]
	0x03956A18 BL 0x1C16F10
	0x03956A1C MOV X1, X31
	0x03956A20 MOV X19, X0
	0x03956A24 BL 0x393DC14
	0x03956A28 CBZ X19, 0x3957394
	0x03956A2C MOV X0, X19
	0x03956A30 MOV V0.16B, V10.16B
	0x03956A34 MOV V1.16B, V9.16B
	0x03956A38 MOV V2.16B, V8.16B
	0x03956A3C MOV X1, X31
	0x03956A40 STR X19, [X31 + 0x28]
	0x03956A44 BL 0x393D8A8
	0x03956A48 CBZ X21, 0x3957394
	0x03956A4C LDR W8, [X21 + 0x18]
	0x03956A50 STR X21, [X31 + 0x58]
	0x03956A54 CMP W8, 0x1
	0x03956A58 B.LT 0x3957188
	0x03956A5C LDR X8, [X31 + 0x40]
	0x03956A60 MOV W28, W31
	0x03956A64 ADD X8, X8, 0x1C
	0x03956A68 STR X8, [X31 + 0x20]
	0x03956A6C ADRP X8, 0x7F7000
	0x03956A70 LDR X8, [X8 + 0xDE8]
	0x03956A74 LDR X0, [X8]
	0x03956A78 BL 0x1C16F10
	0x03956A7C ADRP X8, 0x7F9000
	0x03956A80 LDR X8, [X8 + 0x1C8]
	0x03956A84 MOV X29, X0
	0x03956A88 LDR X1, [X8]
	0x03956A8C BL 0x301B7C4
	0x03956A90 ADRP X19, 0x79E000
	0x03956A94 LDR X19, [X19 + 0xE30]
	0x03956A98 LDR X0, [X19]
	0x03956A9C BL 0x1C16F10
	0x03956AA0 ADRP X20, 0x7A1000
	0x03956AA4 LDR X20, [X20 + 0xB70]
	0x03956AA8 MOV X22, X0
	0x03956AAC LDR X1, [X20]
	0x03956AB0 BL 0x2FDBF14
	0x03956AB4 LDR X8, [X31 + 0x48]
	0x03956AB8 CBZ X8, 0x3956AD4
	0x03956ABC LDR X0, [X19]
	0x03956AC0 BL 0x1C16F10
	0x03956AC4 LDR X1, [X20]
	0x03956AC8 MOV X27, X0
	0x03956ACC BL 0x2FDBF14
	0x03956AD0 B 0x3956AD8
	0x03956AD4 MOV X27, X31
	0x03956AD8 ADRP X8, 0x7F8000
	0x03956ADC LDR X8, [X8 + 0xFE8]
	0x03956AE0 LDR X0, [X31 + 0x58]
	0x03956AE4 MOV W1, W28
	0x03956AE8 LDR X2, [X8]
	0x03956AEC BL 0x2FB9C40
	0x03956AF0 MOV X1, X0
	0x03956AF4 LDR X0, [X31 + 0x50]
	0x03956AF8 CBZ X0, 0x3957394
	0x03956AFC ADRP X8, 0x7F9000
	0x03956B00 LDR X8, [X8 + 0x1D0]
	0x03956B04 LDR X2, [X8]
	0x03956B08 BL 0x301BCCC
	0x03956B0C CBZ X29, 0x3957394
	0x03956B10 ADRP X9, 0x7F9000
	0x03956B14 LDR W10, [X29 + 0x1C]
	0x03956B18 LDR X8, [X29 + 0x10]
	0x03956B1C LDR X9, [X9 + 0x1C0]
	0x03956B20 ADD W10, W10, 0x1
	0x03956B24 LDR X9, [X9]
	0x03956B28 STR W10, [X29 + 0x1C]
	0x03956B2C CBZ X8, 0x3957394
	0x03956B30 LDRSW X10, [X29 + 0x18]
	0x03956B34 LDR W11, [X8 + 0x18]
	0x03956B38 MOV X1, X0
	0x03956B3C CMP W10, W11
	0x03956B40 B.CS 0x3956B58
	0x03956B44 ADD W9, W10, 0x1
	0x03956B48 ADD X8, X8, X10, 0x3, LSL
	0x03956B4C STR W9, [X29 + 0x18]
	0x03956B50 STR X1, [X8 + 0x20]
	0x03956B54 B 0x3956B6C
	0x03956B58 LDR X8, [X9 + 0x20]
	0x03956B5C MOV X0, X29
	0x03956B60 LDR X8, [X8 + 0xC0]
	0x03956B64 LDR X2, [X8 + 0x70]
	0x03956B68 BL 0x301BF90
	0x03956B6C ADRP X8, 0x7F8000
	0x03956B70 LDR X8, [X8 + 0xFE8]
	0x03956B74 LDR X0, [X31 + 0x58]
	0x03956B78 MOV W1, W28
	0x03956B7C LDR X2, [X8]
	0x03956B80 BL 0x2FB9C40
	0x03956B84 ADRP X8, 0x7F9000
	0x03956B88 LDR X8, [X8 + 0x1D0]
	0x03956B8C UBFM X1, X0, 0x20, 0x3F
	0x03956B90 LDR X0, [X31 + 0x50]
	0x03956B94 LDR X2, [X8]
	0x03956B98 BL 0x301BCCC
	0x03956B9C ADRP X9, 0x7F9000
	0x03956BA0 LDR W8, [X29 + 0x1C]
	0x03956BA4 LDR X10, [X29 + 0x10]
	0x03956BA8 LDR X9, [X9 + 0x1C0]
	0x03956BAC ADD W8, W8, 0x1
	0x03956BB0 LDR X9, [X9]
	0x03956BB4 STR W8, [X29 + 0x1C]
	0x03956BB8 CBZ X10, 0x3957394
	0x03956BBC LDRSW X11, [X29 + 0x18]
	0x03956BC0 LDR W12, [X10 + 0x18]
	0x03956BC4 MOV X1, X0
	0x03956BC8 CMP W11, W12
	0x03956BCC B.CS 0x3956BE4
	0x03956BD0 ADD W9, W11, 0x1
	0x03956BD4 ADD X10, X10, X11, 0x3, LSL
	0x03956BD8 STR W9, [X29 + 0x18]
	0x03956BDC STR X1, [X10 + 0x20]
	0x03956BE0 B 0x3956BFC
	0x03956BE4 LDR X8, [X9 + 0x20]
	0x03956BE8 MOV X0, X29
	0x03956BEC LDR X8, [X8 + 0xC0]
	0x03956BF0 LDR X2, [X8 + 0x70]
	0x03956BF4 BL 0x301BF90
	0x03956BF8 LDP W9, W8, [X29 + 0x18]
	0x03956BFC ADRP X11, 0x7F9000
	0x03956C00 LDR X10, [X29 + 0x10]
	0x03956C04 LDR X11, [X11 + 0x1C0]
	0x03956C08 ADD W8, W8, 0x1
	0x03956C0C LDR X11, [X11]
	0x03956C10 STR W8, [X29 + 0x1C]
	0x03956C14 CBZ X10, 0x3957394
	0x03956C18 LDR W8, [X10 + 0x18]
	0x03956C1C CMP W9, W8
	0x03956C20 B.CS 0x3956C3C
	0x03956C24 ADD W8, W9, 0x1
	0x03956C28 STR W8, [X29 + 0x18]
	0x03956C2C LDR X8, [X31 + 0x28]
	0x03956C30 ADD X9, X10, W9, 0x3, SXTW
	0x03956C34 STR X8, [X9 + 0x20]
	0x03956C38 B 0x3956C54
	0x03956C3C LDR X8, [X11 + 0x20]
	0x03956C40 LDR X1, [X31 + 0x28]
	0x03956C44 MOV X0, X29
	0x03956C48 LDR X8, [X8 + 0xC0]
	0x03956C4C LDR X2, [X8 + 0x70]
	0x03956C50 BL 0x301BF90
	0x03956C54 ADRP X8, 0x7F8000
	0x03956C58 LDR X8, [X8 + 0xFE8]
	0x03956C5C LDR X0, [X31 + 0x58]
	0x03956C60 MOV W1, W28
	0x03956C64 LDR X2, [X8]
	0x03956C68 BL 0x2FB9C40
	0x03956C6C MOV X1, X0
	0x03956C70 LDR X0, [X31 + 0x38]
	0x03956C74 CBZ X0, 0x3957394
	0x03956C78 ADRP X8, 0x7F7000
	0x03956C7C LDR X8, [X8 + 0xC80]
	0x03956C80 LDR X2, [X8]
	0x03956C84 BL 0x2A0A2A8
	0x03956C88 CBZ X22, 0x3957394
	0x03956C8C ADRP X9, 0x79E000
	0x03956C90 LDR W10, [X22 + 0x1C]
	0x03956C94 LDR X8, [X22 + 0x10]
	0x03956C98 LDR X9, [X9 + 0xE10]
	0x03956C9C ADD W10, W10, 0x1
	0x03956CA0 LDR X9, [X9]
	0x03956CA4 STR W10, [X22 + 0x1C]
	0x03956CA8 CBZ X8, 0x3957394
	0x03956CAC LDRSW X10, [X22 + 0x18]
	0x03956CB0 LDR W11, [X8 + 0x18]
	0x03956CB4 MOV W1, W0
	0x03956CB8 CMP W10, W11
	0x03956CBC B.CS 0x3956CD4
	0x03956CC0 ADD W9, W10, 0x1
	0x03956CC4 ADD X8, X8, X10, 0x2, LSL
	0x03956CC8 STR W9, [X22 + 0x18]
	0x03956CCC STR W1, [X8 + 0x20]
	0x03956CD0 B 0x3956CE8
	0x03956CD4 LDR X8, [X9 + 0x20]
	0x03956CD8 MOV X0, X22
	0x03956CDC LDR X8, [X8 + 0xC0]
	0x03956CE0 LDR X2, [X8 + 0x70]
	0x03956CE4 BL 0x2FDC70C
	0x03956CE8 ADRP X8, 0x7F8000
	0x03956CEC LDR X8, [X8 + 0xFE8]
	0x03956CF0 LDR X0, [X31 + 0x58]
	0x03956CF4 MOV W1, W28
	0x03956CF8 LDR X2, [X8]
	0x03956CFC BL 0x2FB9C40
	0x03956D00 ADRP X8, 0x7F7000
	0x03956D04 LDR X8, [X8 + 0xC80]
	0x03956D08 UBFM X1, X0, 0x20, 0x3F
	0x03956D0C LDR X0, [X31 + 0x38]
	0x03956D10 LDR X2, [X8]
	0x03956D14 BL 0x2A0A2A8
	0x03956D18 ADRP X9, 0x79E000
	0x03956D1C LDR W10, [X22 + 0x1C]
	0x03956D20 LDR X8, [X22 + 0x10]
	0x03956D24 LDR X9, [X9 + 0xE10]
	0x03956D28 ADD W10, W10, 0x1
	0x03956D2C LDR X9, [X9]
	0x03956D30 STR W10, [X22 + 0x1C]
	0x03956D34 CBZ X8, 0x3957394
	0x03956D38 LDRSW X10, [X22 + 0x18]
	0x03956D3C LDR W11, [X8 + 0x18]
	0x03956D40 MOV W1, W0
	0x03956D44 CMP W10, W11
	0x03956D48 B.CS 0x3956D74
	0x03956D4C ADD W11, W10, 0x1
	0x03956D50 ADD X10, X8, X10, 0x2, LSL
	0x03956D54 STR W11, [X22 + 0x18]
	0x03956D58 LDR X11, [X31 + 0x50]
	0x03956D5C STR W1, [X10 + 0x20]
	0x03956D60 LDR W10, [X22 + 0x1C]
	0x03956D64 LDR W1, [X11 + 0x18]
	0x03956D68 ADD W10, W10, 0x1
	0x03956D6C STR W10, [X22 + 0x1C]
	0x03956D70 B 0x3956DB0
	0x03956D74 LDR X8, [X9 + 0x20]
	0x03956D78 MOV X0, X22
	0x03956D7C LDR X8, [X8 + 0xC0]
	0x03956D80 LDR X2, [X8 + 0x70]
	0x03956D84 BL 0x2FDC70C
	0x03956D88 ADRP X8, 0x79E000
	0x03956D8C LDR X8, [X8 + 0xE10]
	0x03956D90 LDR X11, [X31 + 0x50]
	0x03956D94 LDR W10, [X22 + 0x1C]
	0x03956D98 LDR X9, [X8]
	0x03956D9C LDR X8, [X22 + 0x10]
	0x03956DA0 LDR W1, [X11 + 0x18]
	0x03956DA4 ADD W10, W10, 0x1
	0x03956DA8 STR W10, [X22 + 0x1C]
	0x03956DAC CBZ X8, 0x3957394
	0x03956DB0 LDRSW X10, [X22 + 0x18]
	0x03956DB4 LDR W11, [X8 + 0x18]
	0x03956DB8 CMP W10, W11
	0x03956DBC B.CS 0x3956DD4
	0x03956DC0 ADD W9, W10, 0x1
	0x03956DC4 ADD X8, X8, X10, 0x2, LSL
	0x03956DC8 STR W9, [X22 + 0x18]
	0x03956DCC STR W1, [X8 + 0x20]
	0x03956DD0 B 0x3956DE8
	0x03956DD4 LDR X8, [X9 + 0x20]
	0x03956DD8 MOV X0, X22
	0x03956DDC LDR X8, [X8 + 0xC0]
	0x03956DE0 LDR X2, [X8 + 0x70]
	0x03956DE4 BL 0x2FDC70C
	0x03956DE8 LDR X8, [X31 + 0x48]
	0x03956DEC CBZ X8, 0x3957040
	0x03956DF0 ADRP X8, 0x7C7000
	0x03956DF4 LDR X8, [X8 + 0x8D0]
	0x03956DF8 LDR X19, [X31 + 0x48]
	0x03956DFC LDR X1, [X8]
	0x03956E00 MOV X0, X19
	0x03956E04 BL 0x2A0A4C4
	0x03956E08 ADRP X8, 0x7F8000
	0x03956E0C LDR X8, [X8 + 0xFE8]
	0x03956E10 LDR X0, [X31 + 0x58]
	0x03956E14 MOV W1, W28
	0x03956E18 LDR X2, [X8]
	0x03956E1C BL 0x2FB9C40
	0x03956E20 ADRP X8, 0x7A7000
	0x03956E24 LDR X8, [X8 + 0x870]
	0x03956E28 MOV X1, X0
	0x03956E2C ADD X2, X31, 0xDC
	0x03956E30 MOV X0, X19
	0x03956E34 LDR X3, [X8]
	0x03956E38 BL 0x2A0BC68
	0x03956E3C TBZ X0, 0x0, 0x3956E8C
	0x03956E40 CBZ X27, 0x3957394
	0x03956E44 ADRP X9, 0x79E000
	0x03956E48 LDR W1, [X31 + 0xDC]
	0x03956E4C LDR W10, [X27 + 0x1C]
	0x03956E50 LDR X8, [X27 + 0x10]
	0x03956E54 LDR X9, [X9 + 0xE10]
	0x03956E58 ADD W10, W10, 0x1
	0x03956E5C LDR X9, [X9]
	0x03956E60 STR W10, [X27 + 0x1C]
	0x03956E64 CBZ X8, 0x3957394
	0x03956E68 LDRSW X10, [X27 + 0x18]
	0x03956E6C LDR W11, [X8 + 0x18]
	0x03956E70 CMP W10, W11
	0x03956E74 B.CS 0x3956ED8
	0x03956E78 ADD W9, W10, 0x1
	0x03956E7C ADD X8, X8, X10, 0x2, LSL
	0x03956E80 STR W9, [X27 + 0x18]
	0x03956E84 STR W1, [X8 + 0x20]
	0x03956E88 B 0x3956EF8
	0x03956E8C CBZ X27, 0x3957394
	0x03956E90 ADRP X9, 0x79E000
	0x03956E94 LDR W10, [X27 + 0x1C]
	0x03956E98 LDR X8, [X27 + 0x10]
	0x03956E9C LDR X9, [X9 + 0xE10]
	0x03956EA0 ADD W10, W10, 0x1
	0x03956EA4 LDR X9, [X9]
	0x03956EA8 STR W10, [X27 + 0x1C]
	0x03956EAC CBZ X8, 0x3957394
	0x03956EB0 LDRSW X10, [X27 + 0x18]
	0x03956EB4 LDR W11, [X8 + 0x18]
	0x03956EB8 CMP W10, W11
	0x03956EBC B.CS 0x3956EE0
	0x03956EC0 ADD W9, W10, 0x1
	0x03956EC4 ADD X8, X8, X10, 0x2, LSL
	0x03956EC8 STR W9, [X27 + 0x18]
	0x03956ECC MOVN W9, 0x0
	0x03956ED0 STR W9, [X8 + 0x20]
	0x03956ED4 B 0x3956EF8
	0x03956ED8 LDR X8, [X9 + 0x20]
	0x03956EDC B 0x3956EE8
	0x03956EE0 LDR X8, [X9 + 0x20]
	0x03956EE4 MOVN W1, 0x0
	0x03956EE8 LDR X8, [X8 + 0xC0]
	0x03956EEC LDR X2, [X8 + 0x70]
	0x03956EF0 MOV X0, X27
	0x03956EF4 BL 0x2FDC70C
	0x03956EF8 ADRP X8, 0x7F8000
	0x03956EFC LDR X8, [X8 + 0xFE8]
	0x03956F00 LDR X0, [X31 + 0x58]
	0x03956F04 MOV W1, W28
	0x03956F08 LDR X2, [X8]
	0x03956F0C BL 0x2FB9C40
	0x03956F10 ADRP X8, 0x7A7000
	0x03956F14 LDR X8, [X8 + 0x870]
	0x03956F18 UBFM X1, X0, 0x20, 0x3F
	0x03956F1C LDR X0, [X31 + 0x48]
	0x03956F20 ADD X2, X31, 0xDC
	0x03956F24 LDR X3, [X8]
	0x03956F28 BL 0x2A0BC68
	0x03956F2C TBZ X0, 0x0, 0x3956F78
	0x03956F30 ADRP X9, 0x79E000
	0x03956F34 LDR W1, [X31 + 0xDC]
	0x03956F38 LDR W10, [X27 + 0x1C]
	0x03956F3C LDR X8, [X27 + 0x10]
	0x03956F40 LDR X9, [X9 + 0xE10]
	0x03956F44 ADD W10, W10, 0x1
	0x03956F48 LDR X9, [X9]
	0x03956F4C STR W10, [X27 + 0x1C]
	0x03956F50 CBZ X8, 0x3957394
	0x03956F54 LDRSW X10, [X27 + 0x18]
	0x03956F58 LDR W11, [X8 + 0x18]
	0x03956F5C CMP W10, W11
	0x03956F60 B.CS 0x3956FC0
	0x03956F64 ADD W9, W10, 0x1
	0x03956F68 ADD X8, X8, X10, 0x2, LSL
	0x03956F6C STR W9, [X27 + 0x18]
	0x03956F70 STR W1, [X8 + 0x20]
	0x03956F74 B 0x3956FE0
	0x03956F78 ADRP X9, 0x79E000
	0x03956F7C LDR W10, [X27 + 0x1C]
	0x03956F80 LDR X8, [X27 + 0x10]
	0x03956F84 LDR X9, [X9 + 0xE10]
	0x03956F88 ADD W10, W10, 0x1
	0x03956F8C LDR X9, [X9]
	0x03956F90 STR W10, [X27 + 0x1C]
	0x03956F94 CBZ X8, 0x3957394
	0x03956F98 LDRSW X10, [X27 + 0x18]
	0x03956F9C LDR W11, [X8 + 0x18]
	0x03956FA0 CMP W10, W11
	0x03956FA4 B.CS 0x3956FC8
	0x03956FA8 ADD W9, W10, 0x1
	0x03956FAC ADD X8, X8, X10, 0x2, LSL
	0x03956FB0 STR W9, [X27 + 0x18]
	0x03956FB4 MOVN W9, 0x0
	0x03956FB8 STR W9, [X8 + 0x20]
	0x03956FBC B 0x3956FE0
	0x03956FC0 LDR X8, [X9 + 0x20]
	0x03956FC4 B 0x3956FD0
	0x03956FC8 LDR X8, [X9 + 0x20]
	0x03956FCC MOVN W1, 0x0
	0x03956FD0 LDR X8, [X8 + 0xC0]
	0x03956FD4 LDR X2, [X8 + 0x70]
	0x03956FD8 MOV X0, X27
	0x03956FDC BL 0x2FDC70C
	0x03956FE0 LDR X8, [X31 + 0x50]
	0x03956FE4 ADRP X9, 0x79E000
	0x03956FE8 LDR W10, [X27 + 0x1C]
	0x03956FEC LDR W1, [X8 + 0x18]
	0x03956FF0 LDR X8, [X27 + 0x10]
	0x03956FF4 LDR X9, [X9 + 0xE10]
	0x03956FF8 ADD W10, W10, 0x1
	0x03956FFC LDR X9, [X9]
	0x03957000 STR W10, [X27 + 0x1C]
	0x03957004 CBZ X8, 0x3957394
	0x03957008 LDRSW X10, [X27 + 0x18]
	0x0395700C LDR W11, [X8 + 0x18]
	0x03957010 CMP W10, W11
	0x03957014 B.CS 0x395702C
	0x03957018 ADD W9, W10, 0x1
	0x0395701C ADD X8, X8, X10, 0x2, LSL
	0x03957020 STR W9, [X27 + 0x18]
	0x03957024 STR W1, [X8 + 0x20]
	0x03957028 B 0x3957040
	0x0395702C LDR X8, [X9 + 0x20]
	0x03957030 MOV X0, X27
	0x03957034 LDR X8, [X8 + 0xC0]
	0x03957038 LDR X2, [X8 + 0x70]
	0x0395703C BL 0x2FDC70C
	0x03957040 ADD X1, X31, 0xE8
	0x03957044 MOVZ W2, 0x1
	0x03957048 MOV X0, X29
	0x0395704C MOV W3, W31
	0x03957050 MOV X4, X31
	0x03957054 BL 0x397BFB8
	0x03957058 ADRP X8, 0x7F8000
	0x0395705C LDR X8, [X8 + 0x1F0]
	0x03957060 LDR X0, [X8]
	0x03957064 BL 0x1C16F10
	0x03957068 MOV X1, X31
	0x0395706C MOV X20, X0
	0x03957070 BL 0x3901F84
	0x03957074 LDR X0, [X31 + 0xE8]
	0x03957078 CBZ X0, 0x3957394
	0x0395707C ADRP X8, 0x79D000
	0x03957080 LDR X8, [X8 + 0xE18]
	0x03957084 LDR X1, [X8]
	0x03957088 BL 0x2FDE4C8
	0x0395708C LDR X8, [X31 + 0x20]
	0x03957090 LDR X24, [X31 + 0x40]
	0x03957094 MOV X19, X0
	0x03957098 ADD X0, X31, 0xA0
	0x0395709C LDP V0, V1, [X8]
	0x039570A0 LDR W25, [X24 + 0x48]
	0x039570A4 ADD X1, X31, 0x80
	0x039570A8 MOV X2, X31
	0x039570AC STP V0, V1, [X31 + 0x80]
	0x039570B0 MOVI V0.2D, 0x0
	0x039570B4 STP V0, V0, [X31 + 0xA0]
	0x039570B8 BL 0x38F69EC
	0x039570BC ADRP X8, 0x7F7000
	0x039570C0 LDR W23, [X24 + 0x18]
	0x039570C4 LDR W21, [X24 + 0x54]
	0x039570C8 LDRB W26, [X24 + 0x4C]
	0x039570CC LDR X8, [X8 + 0x560]
	0x039570D0 LDR X0, [X8]
	0x039570D4 BL 0x1C16F10
	0x039570D8 LDP V0, V1, [X31 + 0xA0]
	0x039570DC ADD X3, X31, 0x60
	0x039570E0 MOVN W6, 0x0
	0x039570E4 MOV X1, X19
	0x039570E8 MOV W2, W25
	0x039570EC MOV W4, W23
	0x039570F0 MOV W5, W21
	0x039570F4 MOV W7, W26
	0x039570F8 MOV X24, X0
	0x039570FC STP V0, V1, [X31 + 0x60]
	0x03957100 STR X31, [X31]
	0x03957104 BL 0x39004D4
	0x03957108 CBZ X20, 0x3957394
	0x0395710C LDR X0, [X31 + 0x30]
	0x03957110 STP X24, X29, [X20 + 0x10]
	0x03957114 STP X22, X27, [X20 + 0x20]
	0x03957118 CBZ X0, 0x3957394
	0x0395711C ADRP X9, 0x7F8000
	0x03957120 LDR W10, [X0 + 0x1C]
	0x03957124 LDR X8, [X0 + 0x10]
	0x03957128 LDR X9, [X9 + 0x308]
	0x0395712C ADD W10, W10, 0x1
	0x03957130 LDR X9, [X9]
	0x03957134 STR W10, [X0 + 0x1C]
	0x03957138 CBZ X8, 0x3957394
	0x0395713C LDRSW X10, [X0 + 0x18]
	0x03957140 LDR W11, [X8 + 0x18]
	0x03957144 CMP W10, W11
	0x03957148 B.CS 0x3957160
	0x0395714C ADD W9, W10, 0x1
	0x03957150 ADD X8, X8, X10, 0x3, LSL
	0x03957154 STR W9, [X0 + 0x18]
	0x03957158 STR X20, [X8 + 0x20]
	0x0395715C B 0x3957174
	0x03957160 LDR X8, [X9 + 0x20]
	0x03957164 MOV X1, X20
	0x03957168 LDR X8, [X8 + 0xC0]
	0x0395716C LDR X2, [X8 + 0x70]
	0x03957170 BL 0x301BF90
	0x03957174 LDR X8, [X31 + 0x58]
	0x03957178 ADD W28, W28, 0x1
	0x0395717C LDR W8, [X8 + 0x18]
	0x03957180 CMP W28, W8
	0x03957184 B.LT 0x3956A6C
	0x03957188 ADRP X21, 0x7F8000
	0x0395718C LDR X21, [X21 + 0x248]
	0x03957190 LDP X0, X22, [X31 + 0x30]
	0x03957194 LDP X23, X20, [X31 + 0x48]
	0x03957198 LDR X19, [X31 + 0x10]
	0x0395719C MOV X5, X31
	0x039571A0 MOV X3, X22
	0x039571A4 MOV X1, X20
	0x039571A8 MOV X2, X19
	0x039571AC MOV X4, X23
	0x039571B0 BL 0x39019E8
	0x039571B4 LDR X24, [X31 + 0x18]
	0x039571B8 MOV X1, X20
	0x039571BC MOV W2, W31
	0x039571C0 MOV X3, X31
	0x039571C4 MOV X0, X24
	0x039571C8 BL 0x3916CF4
	0x039571CC MOV X0, X24
	0x039571D0 MOV X1, X19
	0x039571D4 MOV X2, X31
	0x039571D8 BL 0x39159C8
	0x039571DC MOV X0, X24
	0x039571E0 MOV X1, X22
	0x039571E4 MOV X2, X31
	0x039571E8 BL 0x3916234
	0x039571EC MOV X0, X24
	0x039571F0 MOV X1, X23

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+368], D8
	003 Move [X31+384], X29
	004 Move [X31+392], X30
	005 Move [X31+400], X28
	006 Move [X31+408], X27
	007 Move [X31+416], X26
	008 Move [X31+424], X25
	009 Move [X31+432], X24
	010 Move [X31+440], X23
	011 Move [X31+448], X22
	012 Move [X31+456], X21
	013 Move [X31+464], X20
	014 Move [X31+472], X19
	015 Move X22, 0xA8D000
	016 Move X21, 0x7FB000
	017 Move X20, 0x79F000
	018 Move W8, [X22+2458]
	019 Move X21, [X21+920]
	020 Move X20, [X20+1432]
	021 Move W25, W2
	022 Move X19, X1
	023 Move X23, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {228}
	028 Move X0, 0x7FB000
	029 Move X0, [X0+928]
	030 Call 0x1C17CF4
	031 Move X0, 0x7FB000
	032 Move X0, [X0+936]
	033 Call 0x1C17CF4
	034 Move X0, 0x7A9000
	035 Move X0, [X0+2136]
	036 Call 0x1C17CF4
	037 Move X0, 0x7FB000
	038 Move X0, [X0+944]
	039 Call 0x1C17CF4
	040 Move X0, 0x7A9000
	041 Move X0, [X0+2160]
	042 Call 0x1C17CF4
	043 Move X0, 0x7FB000
	044 Move X0, [X0+952]
	045 Call 0x1C17CF4
	046 Move X0, 0x7FA000
	047 Move X0, [X0+3448]
	048 Call 0x1C17CF4
	049 Move X0, 0x7F9000
	050 Move X0, [X0+3200]
	051 Call 0x1C17CF4
	052 Move X0, 0x7FB000
	053 Move X0, [X0+960]
	054 Call 0x1C17CF4
	055 Move X0, 0x7FB000
	056 Move X0, [X0+968]
	057 Call 0x1C17CF4
	058 Move X0, 0x7FB000
	059 Move X0, [X0+976]
	060 Call 0x1C17CF4
	061 Move X0, 0x7C7000
	062 Move X0, [X0+1536]
	063 Call 0x1C17CF4
	064 Move X0, 0x7FB000
	065 Move X0, [X0+808]
	066 Call 0x1C17CF4
	067 Move X0, 0x7FB000
	068 Move X0, [X0+984]
	069 Call 0x1C17CF4
	070 Move X0, 0x7FB000
	071 Move X0, [X0+992]
	072 Call 0x1C17CF4
	073 Move X0, 0x7CA000
	074 Move X0, [X0+3000]
	075 Call 0x1C17CF4
	076 Move X0, 0x7FB000
	077 Move X0, [X0+1000]
	078 Call 0x1C17CF4
	079 Move X0, 0x7FB000
	080 Move X0, [X0+96]
	081 Call 0x1C17CF4
	082 Move X0, 0x7FB000
	083 Move X0, [X0+1008]
	084 Call 0x1C17CF4
	085 Move X0, 0x7FB000
	086 Move X0, [X0+1016]
	087 Call 0x1C17CF4
	088 Move X0, 0x7FA000
	089 Move X0, [X0+680]
	090 Call 0x1C17CF4
	091 Move X0, 0x7FB000
	092 Move X0, [X0+1024]
	093 Call 0x1C17CF4
	094 Move X0, 0x7FB000
	095 Move X0, [X0+1032]
	096 Call 0x1C17CF4
	097 Move X0, 0x7FB000
	098 Move X0, [X0+1040]
	099 Call 0x1C17CF4
	100 Move X0, 0x7FB000
	101 Move X0, [X0+1048]
	102 Call 0x1C17CF4
	103 Move X0, 0x7FB000
	104 Move X0, [X0+1056]
	105 Call 0x1C17CF4
	106 Move X0, 0x7FB000
	107 Move X0, [X0+1064]
	108 Call 0x1C17CF4
	109 Move X0, 0x7FB000
	110 Move X0, [X0+496]
	111 Call 0x1C17CF4
	112 Move X0, 0x7FA000
	113 Move X0, [X0+1376]
	114 Call 0x1C17CF4
	115 Move X0, 0x7FB000
	116 Move X0, [X0+1072]
	117 Call 0x1C17CF4
	118 Move X0, 0x7A0000
	119 Move X0, [X0+3672]
	120 Call 0x1C17CF4
	121 Move X0, 0x7FA000
	122 Move X0, [X0+1672]
	123 Call 0x1C17CF4
	124 Move X0, 0x7F9000
	125 Move X0, [X0+3592]
	126 Call 0x1C17CF4
	127 Move X0, 0x7A0000
	128 Move X0, [X0+3600]
	129 Call 0x1C17CF4
	130 Move X0, 0x7FB000
	131 Move X0, [X0+1080]
	132 Call 0x1C17CF4
	133 Move X0, 0x7FB000
	134 Move X0, [X0+448]
	135 Call 0x1C17CF4
	136 Move X0, 0x7FB000
	137 Move X0, [X0+1088]
	138 Call 0x1C17CF4
	139 Move X0, 0x7FB000
	140 Move X0, [X0+1096]
	141 Call 0x1C17CF4
	142 Move X0, 0x7FB000
	143 Move X0, [X0+1104]
	144 Call 0x1C17CF4
	145 Move X0, 0x7FB000
	146 Move X0, [X0+1112]
	147 Call 0x1C17CF4
	148 Move X0, 0x7FB000
	149 Move X0, [X0+896]
	150 Call 0x1C17CF4
	151 Move X0, 0x7FB000
	152 Move X0, [X0+1120]
	153 Call 0x1C17CF4
	154 Move X0, 0x7A3000
	155 Move X0, [X0+2928]
	156 Call 0x1C17CF4
	157 Move X0, 0x7FB000
	158 Move X0, [X0+1128]
	159 Call 0x1C17CF4
	160 Move X0, 0x7F9000
	161 Move X0, [X0+3552]
	162 Call 0x1C17CF4
	163 Move X0, 0x7FB000
	164 Move X0, [X0+456]
	165 Call 0x1C17CF4
	166 Move X0, 0x7FB000
	167 Move X0, [X0+1136]
	168 Call 0x1C17CF4
	169 Move X0, 0x7FA000
	170 Move X0, [X0+3136]
	171 Call 0x1C17CF4
	172 Move X0, 0x7F9000
	173 Move X0, [X0+3608]
	174 Call 0x1C17CF4
	175 Move X0, 0x7A0000
	176 Move X0, [X0+3624]
	177 Call 0x1C17CF4
	178 Move X0, 0x7FA000
	179 Move X0, [X0+4064]
	180 Call 0x1C17CF4
	181 Move X0, 0x7FA000
	182 Move X0, [X0+3144]
	183 Call 0x1C17CF4
	184 Move X0, 0x7FB000
	185 Move X0, [X0+464]
	186 Call 0x1C17CF4
	187 Move X0, 0x7FA000
	188 Move X0, [X0+4072]
	189 Call 0x1C17CF4
	190 Move X0, 0x7C9000
	191 Move X0, [X0+3896]
	192 Call 0x1C17CF4
	193 Move X0, 0x7FB000
	194 Move X0, [X0+1144]
	195 Call 0x1C17CF4
	196 Move X0, 0x7A0000
	197 Move X0, [X0+3632]
	198 Call 0x1C17CF4
	199 Move X0, 0x7FB000
	200 Move X0, [X0+1152]
	201 Call 0x1C17CF4
	202 Move X0, 0x7F9000
	203 Move X0, [X0+3560]
	204 Call 0x1C17CF4
	205 Move X0, 0x7F9000
	206 Move X0, [X0+2768]
	207 Call 0x1C17CF4
	208 Move X0, 0x79F000
	209 Move X0, [X0+1432]
	210 Call 0x1C17CF4
	211 Move X0, 0x7FB000
	212 Move X0, [X0+824]
	213 Call 0x1C17CF4
	214 Move X0, 0x7FB000
	215 Move X0, [X0+1160]
	216 Call 0x1C17CF4
	217 Move X0, 0x7FB000
	218 Move X0, [X0+920]
	219 Call 0x1C17CF4
	220 Move X0, 0x7FA000
	221 Move X0, [X0+2824]
	222 Call 0x1C17CF4
	223 Move X0, 0x7FB000
	224 Move X0, [X0+1168]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X22+2458], W8
	228 Move X0, [X21]
	229 NotImplemented "Instruction MOVI not yet implemented."
	230 Move [X31+336], X31
	231 Move [X31+344], X31
	232 Move [X31+352], X31
	233 Move [X31+376], X31
	234 Move [X31+288], X31
	235 Move [X31+296], X31
	236 Move [X31+304], V0
	237 Move [X31+312], V0
	238 Move [X31+272], X31
	239 Move [X31+280], X31
	240 Move [X31+264], X31
	241 Call 0x1C17F10
	242 Move X1, X31
	243 Move X21, X0
	244 Call Object..ctor, X0
	245 Move X0, [X20]
	246 Move W8, [X0+224]
	247 Compare W8, 0
	248 JumpIfNotEqual {250}
	249 Call 0x1C17DFC
	250 Move X0, X23
	251 Move X1, X31
	252 Move X2, X31
	253 Call Object.op_Equality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfEqual {1764}
	258 Compare X19, 0
	259 JumpIfEqual {1771}
	260 Subtract W8, W25, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X31+68], W8
	263 Compare X23, 0
	264 JumpIfEqual {1756}
	265 Move X0, X23
	266 Move X1, X31
	267 Move X2, X31
	268 Call ProBuilderMesh.GetVertices, X0, X1
	269 Move X8, 0x7F9000
	270 Move X8, [X8+3560]
	271 Move X20, X0
	272 Move X8, [X8]
	273 Move X0, X8
	274 Call 0x1C17F10
	275 Move X8, 0x7F9000
	276 Move X8, [X8+3552]
	277 Move X1, X20
	278 Move [X31+104], X0
	279 Move X2, [X8]
	280 Call List`1<Object>..ctor, X0, X1
	281 Move X0, X23
	282 Move X1, X31
	283 Call ProBuilderMesh.get_sharedVertexLookup, X0
	284 Move X20, X0
	285 Move X0, X23
	286 Move X1, X31
	287 Call ProBuilderMesh.get_sharedTextureLookup, X0
	288 Move X8, 0x7A0000
	289 Move X8, [X8+3632]
	290 Move X22, X0
	291 Move X8, [X8]
	292 Move X0, X8
	293 Call 0x1C17F10
	294 Move X8, 0x7A3000
	295 Move X8, [X8+2928]
	296 Move X24, X0
	297 Move X1, [X8]
	298 Call List`1<Int32>..ctor, X0
	299 Move X0, X23
	300 Move X1, X19
	301 Move X2, X31
	302 Call EdgeUtility.GetSharedVertexHandleEdges, X0, X1
	303 Move X8, 0x7FB000
	304 Move X8, [X8+992]
	305 Move X1, [X8]
	306 Call 0x21C124C, X0
	307 Move X8, 0x7FB000
	308 Move X8, [X8+96]
	309 Move X1, [X8]
	310 Call Enumerable.ToList, X0
	311 Move X8, 0x7FB000
	312 Move X8, [X8+976]
	313 Move X19, X0
	314 Move X8, [X8]
	315 Move X0, X8
	316 Call 0x1C17F10
	317 Move X8, 0x7FB000
	318 Move X8, [X8+952]
	319 Move X26, X0
	320 Move X1, [X8]
	321 Call Dictionary`2<Object, Object>..ctor, X0
	322 Compare X20, 0
	323 JumpIfEqual {1756}
	324 Move [X31+48], X24
	325 Move [X31+56], X26
	326 Move [X31+24], X21
	327 Move [X31+32], X23
	328 Move X8, 0x7FA000
	329 Move X8, [X8+3448]
	330 Move X0, X20
	331 Move [X31+112], X20
	332 Move X1, [X8]
	333 Call Dictionary`2<Int32, Int32>.get_Count, X0
	334 Compare X19, 0
	335 JumpIfEqual {1756}
	336 Move X8, 0x7FB000
	337 Move X8, [X8+1096]
	338 Move W20, W0
	339 Move X0, X19
	340 Move X1, [X8]
	341 Add X8, X31, 224
	342 Call List`1<Edge>.GetEnumerator, X0
	343 NotImplemented "Instruction SCVTF not yet implemented."
	344 Move S1, 1
	345 Add S8, S0, S1
	346 Move V0, [X31+14]
	347 Move X8, [X31+240]
	348 Move X21, [X31+104]
	349 Move [X31+44], W20
	350 Move [X31+21], V0
	351 Move [X31+352], X8
	352 Move [X31+96], W25
	353 Move [X31+120], W20
	354 Move W26, W25
	355 Move [X31+80], X22
	356 Move X8, 0x7FB000
	357 Move X8, [X8+1040]
	358 Move X1, [X8]
	359 Add X0, X31, 336
	360 Call Enumerator<Edge>.MoveNext, X0
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {1412}
	365 Move X1, [X31+352]
	366 Move X0, [X31+32]
	367 Move X2, X31
	368 Call EdgeUtility.GetEdgeWithSharedVertexHandles, X0, X1
	369 Move X8, 0x7F9000
	370 Move X8, [X8+3560]
	371 Move X24, X0
	372 Move X0, [X8]
	373 Call 0x1C17F10
	374 Move X8, 0x7FB000
	375 Move X8, [X8+1128]
	376 Move X29, X0
	377 Move X2, [X8]
	378 Move W1, W26
	379 Call List`1<Object>..ctor, X0, X1
	380 Compare X21, 0
	381 JumpIfEqual {1760}
	382 Move W20, W31
	383 Move X8, X24
	384 ShiftRight X8, 32
	385 And X8, X8, 0x7FFFFFFF
	386 Move [X31+88], X8
	387 Move X23, 0x7FB000
	388 Move X23, [X23+464]
	389 Move X2, [X23]
	390 Move X0, X21
	391 Move W1, W24
	392 Call List`1<Object>.get_Item, X0, X1
	393 Move X2, [X23]
	394 Move X19, X0
	395 Move X0, X21
	396 Move X1, [X31+88]
	397 Call List`1<Object>.get_Item, X0, X1
	398 Move X1, X0
	399 Add W20, W20, 1
	400 NotImplemented "Instruction SCVTF not yet implemented."
	401 NotImplemented "Instruction FDIV not yet implemented."
	402 Move X0, X19
	403 Move X2, X31
	404 Call Vertex.Mix, X0, X1, V0
	405 Move X1, X0
	406 Compare X29, 0
	407 JumpIfEqual {1758}
	408 Move X9, 0x7FB000
	409 Move W10, [X29+28]
	410 Move X8, [X29+16]
	411 Move X9, [X9+448]
	412 Add W10, W10, 1
	413 Move X9, [X9]
	414 Move [X29+28], W10
	415 Compare X8, 0
	416 JumpIfEqual {1757}
	417 NotImplemented "Instruction LDRSW not yet implemented."
	418 Move W11, [X8+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Add W9, W10, 1
	421 Add X8, X8, X10
	422 Move [X29+24], W9
	423 Move [X8+32], X1
	424 Move X8, [X9+32]
	425 Move X8, [X8+192]
	426 Move X2, [X8+112]
	427 Move X0, X29
	428 Call List`1<Object>.AddWithResize, X0, X1
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X8, 0x7FB000
	431 Move X8, [X8+808]
	432 Move X0, [X8]
	433 Move W8, [X0+224]
	434 Compare W8, 0
	435 JumpIfNotEqual {437}
	436 Call 0x1C17DFC
	437 Move X0, [X31+32]
	438 Move X1, X24
	439 Call ElementSelection.GetNeighborFaces, X0, X1
	440 Move X1, X24
	441 Move X24, 0x7F9000
	442 Move X24, [X24+3200]
	443 Move X19, X0
	444 Move X2, [X24]
	445 Move X23, [X31+112]
	446 Move [X31+72], X1
	447 Move X0, X23
	448 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	449 Move X2, [X24]
	450 Move W20, W0
	451 Move X0, X23
	452 Move X1, [X31+88]
	453 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	454 Move X8, 0x7C7000
	455 Move X8, [X8+1536]
	456 Move W23, W0
	457 Move X0, [X8]
	458 Move W8, [X0+224]
	459 Compare W8, 0
	460 JumpIfNotEqual {462}
	461 Call 0x1C17DFC
	462 Add X0, X31, 376
	463 Move W1, W20
	464 Move W2, W23
	465 Move X3, X31
	466 Call Edge..ctor, X0, X1, X2
	467 Compare X19, 0
	468 JumpIfEqual {1761}
	469 Move X8, 0x7FB000
	470 Move X8, [X8+1088]
	471 Move X1, [X8]
	472 Add X8, X31, 224
	473 Move X0, X19
	474 Call List`1<SimpleTuple`2<Object, Edge>>.GetEnumerator, X0
	475 Move V0, [X31+224]
	476 Move V1, [X31+240]
	477 Move [X31+304], V0
	478 Move [X31+312], V1
	479 Move X8, 0x7FB000
	480 Move X8, [X8+1048]
	481 Move X1, [X8]
	482 Add X0, X31, 304
	483 Call Enumerator<SimpleTuple`2<Object, Edge>>.MoveNext, X0
	484 Move TEMP, X0
	485 And TEMP, TEMP, 1
	486 Compare TEMP, 1
	487 JumpIfNotEqual {1314}
	488 Move X0, [X31+56]
	489 Compare X0, 0
	490 JumpIfEqual {1367}
	491 Move X8, 0x7FB000
	492 Move X20, [X31+320]
	493 Move X8, [X8+944]
	494 Move X3, [X8]
	495 Add X2, X31, 296
	496 Move X1, X20
	497 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	498 Move TEMP, X0
	499 And TEMP, TEMP, 1
	500 Compare TEMP, 1
	501 JumpIfNotEqual {716}
	502 Move X8, [X31+296]
	503 Compare X8, 0
	504 JumpIfEqual {1379}
	505 Move X19, [X8+24]
	506 Compare X19, 0
	507 JumpIfEqual {1380}
	508 Move W9, [X19+24]
	509 Move X24, [X8+32]
	510 Move X20, [X8+40]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move W25, W31
	513 Move X8, 0x7FB000
	514 Move X8, [X8+464]
	515 Move W23, W25
	516 Move X2, [X8]
	517 Move X0, X19
	518 Move W1, W25
	519 Call List`1<Object>.get_Item, X0, X1
	520 Move X1, X0
	521 Compare X21, 0
	522 JumpIfEqual {1349}
	523 Move X8, 0x7FB000
	524 Move X8, [X8+1104]
	525 Move X2, [X8]
	526 Move X0, X21
	527 Call List`1<Object>.IndexOf, X0, X1
	528 Move X9, 0x7FB000
	529 Move W8, [X19+24]
	530 Move X9, [X9+464]
	531 Add W25, W23, 1
	532 Move W27, W0
	533 Move X2, [X9]
	534 NotImplemented "Instruction SDIV not yet implemented."
	535 NotImplemented "Instruction MSUB not yet implemented."
	536 Move X0, X19
	537 Call List`1<Object>.get_Item, X0, X1
	538 Move X1, X0
	539 Move X8, 0x7FB000
	540 Move X8, [X8+1104]
	541 Move X2, [X8]
	542 Move X0, X21
	543 Call List`1<Object>.IndexOf, X0, X1
	544 Add W31, W27, 1
	545 Move W28, W0
	546 Add W31, W0, 1
	547 Move X26, 0x7F9000
	548 Move X26, [X26+3200]
	549 Move X2, [X26]
	550 Move X22, [X31+112]
	551 Move W1, W27
	552 Move X0, X22
	553 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	554 Move X2, [X26]
	555 Move W21, W0
	556 Move X0, X22
	557 Move X1, [X31+72]
	558 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	559 Move W26, [X31+96]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X26, 0x7F9000
	562 Move X26, [X26+3200]
	563 Move X2, [X26]
	564 Move X22, [X31+112]
	565 Move W1, W28
	566 Move X0, X22
	567 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	568 Move X2, [X26]
	569 Move W21, W0
	570 Move X0, X22
	571 Move X1, [X31+88]
	572 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	573 Move W26, [X31+96]
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move X8, 0x7FB000
	576 Move X8, [X8+1112]
	577 Move X3, [X8]
	578 Move X22, [X31+80]
	579 Move X0, X19
	580 Move W1, W25
	581 Move X2, X29
	582 Call List`1<Object>.InsertRange, X0, X1, X2
	583 Move W21, W31
	584 Compare X24, 0
	585 JumpIfEqual {1340}
	586 Move X8, 0x7FB000
	587 Move X8, [X8+896]
	588 Move X3, [X8]
	589 Add W8, W23, W21
	590 Add W1, W8, 1
	591 Move W8, [X31+120]
	592 Add W2, W8, W21
	593 Move X0, X24
	594 Call List`1<Int32>.Insert, X0, X1, X2
	595 Compare X20, 0
	596 JumpIfEqual {1341}
	597 Move X9, 0x7A0000
	598 Move W10, [X20+28]
	599 Move X8, [X20+16]
	600 Move X9, [X9+3600]
	601 Add W10, W10, 1
	602 Move X9, [X9]
	603 Move [X20+28], W10
	604 Compare X8, 0
	605 JumpIfEqual {1339}
	606 NotImplemented "Instruction LDRSW not yet implemented."
	607 Move W11, [X8+24]
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Add W9, W10, 1
	610 Add X8, X8, X10
	611 Move [X20+24], W9
	612 Move TEMP, 0
	613 Not TEMP
	614 Move W9, TEMP
	615 Move [X8+32], W9
	616 Move X8, [X9+32]
	617 Move X8, [X8+192]
	618 Move X2, [X8+112]
	619 Move TEMP, 0
	620 Not TEMP
	621 Move W1, TEMP
	622 Move X0, X20
	623 Call List`1<Int32>.AddWithResize, X0, X1
	624 Add W21, W21, 1
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move X23, 0x7F9000
	627 Move X23, [X23+3200]
	628 Move X2, [X23]
	629 Move X22, [X31+112]
	630 Move W1, W27
	631 Move X0, X22
	632 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	633 Move X2, [X23]
	634 Move W21, W0
	635 Move X0, X22
	636 Move X1, [X31+88]
	637 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	638 Move X22, [X31+80]
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Move X23, 0x7F9000
	641 Move X23, [X23+3200]
	642 Move X2, [X23]
	643 Move X22, [X31+112]
	644 Move W1, W28
	645 Move X0, X22
	646 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	647 Move X2, [X23]
	648 Move W21, W0
	649 Move X0, X22
	650 Move X1, [X31+72]
	651 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	652 Move X22, [X31+80]
	653 NotImplemented "Instruction CMP not yet implemented."
	654 Move X8, 0x7FB000
	655 Move X8, [X8+1120]
	656 Move X1, [X8]
	657 Move X0, X29
	658 Call List`1<Object>.Reverse, X0
	659 Move X8, 0x7FB000
	660 Move X8, [X8+1112]
	661 Move X3, [X8]
	662 Move X0, X19
	663 Move W1, W25
	664 Move X2, X29
	665 Call List`1<Object>.InsertRange, X0, X1, X2
	666 Move W21, [X31+68]
	667 Compare X24, 0
	668 JumpIfEqual {1342}
	669 Move X8, 0x7FB000
	670 Move X8, [X8+896]
	671 Move X3, [X8]
	672 Move W8, [X31+120]
	673 Add W2, W8, W21
	674 Move X0, X24
	675 Move W1, W25
	676 Call List`1<Int32>.Insert, X0, X1, X2
	677 Compare X20, 0
	678 JumpIfEqual {1343}
	679 Move X9, 0x7A0000
	680 Move W10, [X20+28]
	681 Move X8, [X20+16]
	682 Move X9, [X9+3600]
	683 Add W10, W10, 1
	684 Move X9, [X9]
	685 Move [X20+28], W10
	686 Compare X8, 0
	687 JumpIfEqual {1344}
	688 NotImplemented "Instruction LDRSW not yet implemented."
	689 Move W11, [X8+24]
	690 NotImplemented "Instruction CMP not yet implemented."
	691 Add W9, W10, 1
	692 Add X8, X8, X10
	693 Move [X20+24], W9
	694 Move TEMP, 0
	695 Not TEMP
	696 Move W9, TEMP
	697 Move [X8+32], W9
	698 Move X8, [X9+32]
	699 Move X8, [X8+192]
	700 Move X2, [X8+112]
	701 Move TEMP, 0
	702 Not TEMP
	703 Move W1, TEMP
	704 Move X0, X20
	705 Call List`1<Int32>.AddWithResize, X0, X1
	706 Subtract W21, W21, 1
	707 Move W8, [X19+24]
	708 Move X21, [X31+104]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X8, [X31+296]
	711 Compare X8, 0
	712 JumpIfEqual {1383}
	713 Move [X8+24], X19
	714 Move [X8+32], X24
	715 Move [X8+40], X20
	716 Move X8, 0x7FB000
	717 Move X8, [X8+496]
	718 Move X0, [X8]
	719 Call 0x1C17F10
	720 Move X19, X0
	721 Move X1, X31
	722 Call FaceRebuildData..ctor, X0
	723 Move X8, 0x7A0000
	724 Move X8, [X8+3672]
	725 Move [X31+296], X19
	726 Move X0, [X8]
	727 Move W1, W31
	728 Call 0x1C17D6C
	729 Compare X20, 0
	730 JumpIfEqual {1378}
	731 Move W24, [X20+72]
	732 NotImplemented "Instruction LDUR not yet implemented."
	733 NotImplemented "Instruction LDUR not yet implemented."
	734 Move X23, X0
	735 NotImplemented "Instruction MOVI not yet implemented."
	736 Move [X31+192], V2
	737 Move [X31+200], V2
	738 Move [X31+224], V1
	739 Move [X31+232], V0
	740 Move [X31+160], V1
	741 Move [X31+168], V0
	742 Add X0, X31, 192
	743 Add X1, X31, 160
	744 Move X2, X31
	745 Call AutoUnwrapSettings..ctor, X0, X1
	746 Move X8, 0x7FA000
	747 Move W25, [X20+24]
	748 Move W27, [X20+84]
	749 Move W21, [X20+76]
	750 Move X8, [X8+1376]
	751 Move X0, [X8]
	752 Call 0x1C17F10
	753 Move V0, [X31+192]
	754 Move V1, [X31+208]
	755 Move X28, X0
	756 NotImplemented "Instruction CMP not yet implemented."
	757 NotImplemented "Instruction CSET not yet implemented."
	758 Move [X31+128], V0
	759 Move [X31+136], V1
	760 Add X3, X31, 128
	761 Move TEMP, 0
	762 Not TEMP
	763 Move W6, TEMP
	764 Move X1, X23
	765 Move W2, W24
	766 Move W4, W25
	767 Move W5, W27
	768 Move [X31], X31
	769 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	770 Compare X19, 0
	771 JumpIfEqual {1372}
	772 Move [X19+16], X28
	773 Move X21, [X31+296]
	774 Move X0, X20
	775 Move X1, X31
	776 Call Face.get_distinctIndexesInternal, X0
	777 Move X1, X0
	778 Move X8, 0x7FB000
	779 Move X8, [X8+928]
	780 Move X2, [X8]
	781 Move X0, [X31+104]
	782 Call 0x2181E50, X0, X1
	783 Move X8, 0x7F8000
	784 Move X8, [X8+3560]
	785 Move X23, X0
	786 Move X0, [X8]
	787 Call 0x1C17F10
	788 Move X8, 0x7F8000
	789 Move X8, [X8+3552]
	790 Move X19, X0
	791 Move X2, [X8]
	792 Move X1, X23
	793 Call List`1<Object>..ctor, X0, X1
	794 Compare X21, 0
	795 JumpIfEqual {1376}
	796 Move [X21+24], X19
	797 Move X8, 0x79F000
	798 Move X21, [X31+296]
	799 Move X8, [X8+3632]
	800 Move X0, [X8]
	801 Call 0x1C17F10
	802 Move X8, 0x7A2000
	803 Move X8, [X8+2928]
	804 Move X19, X0
	805 Move X1, [X8]
	806 Call List`1<Int32>..ctor, X0
	807 Compare X21, 0
	808 JumpIfEqual {1370}
	809 Move [X21+32], X19
	810 Move X8, 0x79F000
	811 Move X21, [X31+296]
	812 Move X8, [X8+3632]
	813 Move X0, [X8]
	814 Call 0x1C17F10
	815 Move X8, 0x7A2000
	816 Move X8, [X8+2928]
	817 Move X19, X0
	818 Move X1, [X8]
	819 Call List`1<Int32>..ctor, X0
	820 Compare X21, 0
	821 JumpIfEqual {1374}
	822 Move [X21+40], X19
	823 Move X0, X20
	824 Move X1, X31
	825 Call Face.get_distinctIndexesInternal, X0
	826 Move X19, X0
	827 Compare X0, 0
	828 JumpIfEqual {1368}
	829 Move X8, [X19+24]
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Move X21, X31
	832 And X8, X8, 0
	833 Add X24, X19, 32
	834 NotImplemented "Instruction CMP not yet implemented."
	835 Move X8, 0x7A8000
	836 Move W23, [X24]
	837 Move X8, [X8+2160]
	838 Move X3, [X8]
	839 Move X0, [X31+112]
	840 Add X2, X31, 292
	841 Move W1, W23
	842 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	843 Move TEMP, X0
	844 And TEMP, TEMP, 1
	845 Compare TEMP, 1
	846 JumpIfNotEqual {874}
	847 Move X8, [X31+296]
	848 Compare X8, 0
	849 JumpIfEqual {1357}
	850 Move X0, [X8+32]
	851 Compare X0, 0
	852 JumpIfEqual {1356}
	853 Move X9, 0x79F000
	854 Move W1, [X31+292]
	855 Move W10, [X0+28]
	856 Move X8, [X0+16]
	857 Move X9, [X9+3600]
	858 Add W10, W10, 1
	859 Move X9, [X9]
	860 Move [X0+28], W10
	861 Compare X8, 0
	862 JumpIfEqual {1354}
	863 NotImplemented "Instruction LDRSW not yet implemented."
	864 Move W11, [X8+24]
	865 NotImplemented "Instruction CMP not yet implemented."
	866 Add W9, W10, 1
	867 Add X8, X8, X10
	868 Move [X0+24], W9
	869 Move [X8+32], W1
	870 Move X8, [X9+32]
	871 Move X8, [X8+192]
	872 Move X2, [X8+112]
	873 Call List`1<Int32>.AddWithResize, X0, X1
	874 Compare X22, 0
	875 JumpIfEqual {1345}
	876 Move X8, 0x7A8000
	877 Move X8, [X8+2160]
	878 Move X3, [X8]
	879 Add X2, X31, 292
	880 Move X0, X22
	881 Move W1, W23
	882 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	883 Move TEMP, X0
	884 And TEMP, TEMP, 1
	885 Compare TEMP, 1
	886 JumpIfNotEqual {914}
	887 Move X8, [X31+296]
	888 Compare X8, 0
	889 JumpIfEqual {1359}
	890 Move X0, [X8+40]
	891 Compare X0, 0
	892 JumpIfEqual {1355}
	893 Move X9, 0x79F000
	894 Move W1, [X31+292]
	895 Move W10, [X0+28]
	896 Move X8, [X0+16]
	897 Move X9, [X9+3600]
	898 Add W10, W10, 1
	899 Move X9, [X9]
	900 Move [X0+28], W10
	901 Compare X8, 0
	902 JumpIfEqual {1361}
	903 NotImplemented "Instruction LDRSW not yet implemented."
	904 Move W11, [X8+24]
	905 NotImplemented "Instruction CMP not yet implemented."
	906 Add W9, W10, 1
	907 Add X8, X8, X10
	908 Move [X0+24], W9
	909 Move [X8+32], W1
	910 Move X8, [X9+32]
	911 Move X8, [X8+192]
	912 Move X2, [X8+112]
	913 Call List`1<Int32>.AddWithResize, X0, X1
	914 Move W8, [X19+24]
	915 Add X21, X21, 1
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move X21, [X31+104]
	918 Move X0, X20
	919 Move X1, X31
	920 Call Face.get_distinctIndexesInternal, X0
	921 Move X1, X0
	922 Move X0, [X31+48]
	923 Compare X0, 0
	924 JumpIfEqual {1382}
	925 Move X8, 0x7F9000
	926 Move X8, [X8+1672]
	927 Move X2, [X8]
	928 Call List`1<Int32>.AddRange, X0, X1
	929 Move X8, 0x7FA000
	930 Move X2, [X31+296]
	931 Move X8, [X8+936]
	932 Move X3, [X8]
	933 Move X0, [X31+56]
	934 Move X1, X20
	935 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	936 Move X8, 0x7F8000
	937 Move X8, [X8+3560]
	938 Move X0, [X8]
	939 Call 0x1C17F10
	940 Move X8, 0x7FA000
	941 Move X8, [X8+456]
	942 Move X19, X0
	943 Move X1, [X8]
	944 Call List`1<Object>..ctor, X0
	945 Move X8, 0x79F000
	946 Move X8, [X8+3632]
	947 Move X0, [X8]
	948 Call 0x1C17F10
	949 Move X8, 0x7A2000
	950 Move X8, [X8+2928]
	951 Move X25, X0
	952 Move X1, [X8]
	953 Call List`1<Int32>..ctor, X0
	954 Move X8, 0x79F000
	955 Move X8, [X8+3632]
	956 Move X0, [X8]
	957 Call 0x1C17F10
	958 Move X8, 0x7A2000
	959 Move X8, [X8+2928]
	960 Move X24, X0
	961 Move X1, [X8]
	962 Call List`1<Int32>..ctor, X0
	963 Move X8, 0x7F9000
	964 Move X8, [X8+2824]
	965 Move X0, [X8]
	966 Move W8, [X0+224]
	967 Compare W8, 0
	968 JumpIfNotEqual {970}
	969 Call 0x1C17DFC
	970 Move X0, X20
	971 Move X1, X31
	972 Call WingedEdge.SortEdgesByAdjacency, X0
	973 Move X27, X0
	974 Compare X0, 0
	975 JumpIfEqual {1381}
	976 Move W8, [X27+24]
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move W20, W31
	979 Move X23, 0x7F9000
	980 Move X23, [X23+4072]
	981 Move X2, [X23]
	982 Move X0, X27
	983 Move W1, W20
	984 Call List`1<Edge>.get_Item, X0, X1
	985 Move X2, [X23]
	986 Move X28, X0
	987 Move X0, X27
	988 Move W1, W20
	989 Call List`1<Edge>.get_Item, X0, X1
	990 Compare X21, 0
	991 JumpIfEqual {1350}
	992 Move X8, 0x7FA000
	993 Move X8, [X8+464]
	994 Move X23, X0
	995 Move X2, [X8]
	996 Move X0, X21
	997 Move W1, W28
	998 Call List`1<Object>.get_Item, X0, X1
	999 Move X1, X0
	1000 Compare X19, 0
	1001 JumpIfEqual {1352}
	1002 Move X9, 0x7FA000
	1003 Move W10, [X19+28]
	1004 Move X8, [X19+16]
	1005 Move X9, [X9+448]
	1006 Add W10, W10, 1
	1007 Move X9, [X9]
	1008 Move [X19+28], W10
	1009 Compare X8, 0
	1010 JumpIfEqual {1351}
	1011 NotImplemented "Instruction LDRSW not yet implemented."
	1012 Move W11, [X8+24]
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Add W9, W10, 1
	1015 Add X8, X8, X10
	1016 Move [X19+24], W9
	1017 Move [X8+32], X1
	1018 Move X8, [X9+32]
	1019 Move X8, [X8+192]
	1020 Move X2, [X8+112]
	1021 Move X0, X19
	1022 Call List`1<Object>.AddWithResize, X0, X1
	1023 Move X8, 0x7A8000
	1024 Move X8, [X8+2160]
	1025 Move X3, [X8]
	1026 Move X0, [X31+112]
	1027 Add X2, X31, 288
	1028 Move W1, W28
	1029 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	1030 Move TEMP, X0
	1031 And TEMP, TEMP, 1
	1032 Compare TEMP, 1
	1033 JumpIfNotEqual {1058}
	1034 Compare X25, 0
	1035 JumpIfEqual {1365}
	1036 Move X9, 0x79F000
	1037 Move W1, [X31+288]
	1038 Move W10, [X25+28]
	1039 Move X8, [X25+16]
	1040 Move X9, [X9+3600]
	1041 Add W10, W10, 1
	1042 Move X9, [X9]
	1043 Move [X25+28], W10
	1044 Compare X8, 0
	1045 JumpIfEqual {1366}
	1046 NotImplemented "Instruction LDRSW not yet implemented."
	1047 Move W11, [X8+24]
	1048 NotImplemented "Instruction CMP not yet implemented."
	1049 Add W9, W10, 1
	1050 Add X8, X8, X10
	1051 Move [X25+24], W9
	1052 Move [X8+32], W1
	1053 Move X8, [X9+32]
	1054 Move X8, [X8+192]
	1055 Move X2, [X8+112]
	1056 Move X0, X25
	1057 Call List`1<Int32>.AddWithResize, X0, X1
	1058 Compare X22, 0
	1059 JumpIfEqual {1353}
	1060 Move X8, 0x7A8000
	1061 Move X8, [X8+2160]
	1062 Move X3, [X8]
	1063 Add X2, X31, 288
	1064 Move X0, X22
	1065 Move W1, W20
	1066 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	1067 Move TEMP, X0
	1068 And TEMP, TEMP, 1
	1069 Compare TEMP, 1
	1070 JumpIfNotEqual {1098}
	1071 Move X8, [X31+296]
	1072 Compare X8, 0
	1073 JumpIfEqual {1362}
	1074 Move X0, [X8+40]
	1075 Compare X0, 0
	1076 JumpIfEqual {1364}
	1077 Move X9, 0x79F000
	1078 Move W1, [X31+288]
	1079 Move W10, [X0+28]
	1080 Move X8, [X0+16]
	1081 Move X9, [X9+3600]
	1082 Add W10, W10, 1
	1083 Move X9, [X9]
	1084 Move [X0+28], W10
	1085 Compare X8, 0
	1086 JumpIfEqual {1363}
	1087 NotImplemented "Instruction LDRSW not yet implemented."
	1088 Move W11, [X8+24]
	1089 NotImplemented "Instruction CMP not yet implemented."
	1090 Add W9, W10, 1
	1091 Add X8, X8, X10
	1092 Move [X0+24], W9
	1093 Move [X8+32], W1
	1094 Move X8, [X9+32]
	1095 Move X8, [X8+192]
	1096 Move X2, [X8+112]
	1097 Call List`1<Int32>.AddWithResize, X0, X1
	1098 Move X8, 0x7F8000
	1099 Move W21, [X31+376]
	1100 Move X8, [X8+3200]
	1101 Move X2, [X8]
	1102 Move X0, [X31+112]
	1103 Move W1, W28
	1104 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1105 NotImplemented "Instruction CMP not yet implemented."
	1106 Move X23, X23
	1107 ShiftRight X23, 32
	1108 And X23, X23, 0x7FFFFFFF
	1109 Move X8, 0x7F8000
	1110 Move W21, [X31+380]
	1111 Move X8, [X8+3200]
	1112 Move X2, [X8]
	1113 Move X0, [X31+112]
	1114 Move W1, W23
	1115 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1116 NotImplemented "Instruction CMP not yet implemented."
	1117 Move X21, [X31+104]
	1118 Move W23, W31
	1119 Move X8, 0x7FA000
	1120 Move X8, [X8+464]
	1121 Move X2, [X8]
	1122 Move X0, X29
	1123 Move W1, W23
	1124 Call List`1<Object>.get_Item, X0, X1
	1125 Move X1, X0
	1126 Move X9, 0x7FA000
	1127 Move W10, [X19+28]
	1128 Move X8, [X19+16]
	1129 Move X9, [X9+448]
	1130 Add W10, W10, 1
	1131 Move X9, [X9]
	1132 Move [X19+28], W10
	1133 Compare X8, 0
	1134 JumpIfEqual {1330}
	1135 NotImplemented "Instruction LDRSW not yet implemented."
	1136 Move W11, [X8+24]
	1137 NotImplemented "Instruction CMP not yet implemented."
	1138 Add W9, W10, 1
	1139 Add X8, X8, X10
	1140 Move [X19+24], W9
	1141 Move [X8+32], X1
	1142 Move X8, [X9+32]
	1143 Move X8, [X8+192]
	1144 Move X2, [X8+112]
	1145 Move X0, X19
	1146 Call List`1<Object>.AddWithResize, X0, X1
	1147 Compare X25, 0
	1148 JumpIfEqual {1332}
	1149 Move X9, 0x79F000
	1150 Move W10, [X25+28]
	1151 Move X8, [X25+16]
	1152 Move X9, [X9+3600]
	1153 Add W10, W10, 1
	1154 Move X9, [X9]
	1155 Move [X25+28], W10
	1156 Compare X8, 0
	1157 JumpIfEqual {1329}
	1158 NotImplemented "Instruction LDRSW not yet implemented."
	1159 Move W11, [X8+24]
	1160 NotImplemented "Instruction CMP not yet implemented."
	1161 Move W11, [X31+120]
	1162 Add W1, W11, W23
	1163 Add W9, W10, 1
	1164 Add X8, X8, X10
	1165 Move [X25+24], W9
	1166 Move [X8+32], W1
	1167 Move X8, [X9+32]
	1168 Move X8, [X8+192]
	1169 Move X2, [X8+112]
	1170 Move X0, X25
	1171 Call List`1<Int32>.AddWithResize, X0, X1
	1172 Compare X24, 0
	1173 JumpIfEqual {1331}
	1174 Move X9, 0x79F000
	1175 Move W10, [X24+28]
	1176 Move X8, [X24+16]
	1177 Move X9, [X9+3600]
	1178 Add W10, W10, 1
	1179 Move X9, [X9]
	1180 Move [X24+28], W10
	1181 Compare X8, 0
	1182 JumpIfEqual {1333}
	1183 NotImplemented "Instruction LDRSW not yet implemented."
	1184 Move W11, [X8+24]
	1185 NotImplemented "Instruction CMP not yet implemented."
	1186 Add W9, W10, 1
	1187 Add X8, X8, X10
	1188 Move [X24+24], W9
	1189 Move TEMP, 0
	1190 Not TEMP
	1191 Move W9, TEMP
	1192 Move [X8+32], W9
	1193 Move X8, [X9+32]
	1194 Move X8, [X8+192]
	1195 Move X2, [X8+112]
	1196 Move TEMP, 0
	1197 Not TEMP
	1198 Move W1, TEMP
	1199 Move X0, X24
	1200 Call List`1<Int32>.AddWithResize, X0, X1
	1201 Add W23, W23, 1
	1202 NotImplemented "Instruction CMP not yet implemented."
	1203 Move X8, 0x7F8000
	1204 Move W21, [X31+376]
	1205 Move X8, [X8+3200]
	1206 Move X2, [X8]
	1207 Move X0, [X31+112]
	1208 Move W1, W23
	1209 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1210 NotImplemented "Instruction CMP not yet implemented."
	1211 Move X21, [X31+104]
	1212 Move X8, 0x7F8000
	1213 Move W21, [X31+380]
	1214 Move X8, [X8+3200]
	1215 Move X2, [X8]
	1216 Move X0, [X31+112]
	1217 Move W1, W28
	1218 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move W23, [X31+68]
	1221 Move X21, [X31+104]
	1222 Move X8, 0x7FA000
	1223 Move X8, [X8+464]
	1224 Move X2, [X8]
	1225 Move X0, X29
	1226 Move W1, W23
	1227 Call List`1<Object>.get_Item, X0, X1
	1228 Move X1, X0
	1229 Move X9, 0x7FA000
	1230 Move W10, [X19+28]
	1231 Move X8, [X19+16]
	1232 Move X9, [X9+448]
	1233 Add W10, W10, 1
	1234 Move X9, [X9]
	1235 Move [X19+28], W10
	1236 Compare X8, 0
	1237 JumpIfEqual {1337}
	1238 NotImplemented "Instruction LDRSW not yet implemented."
	1239 Move W11, [X8+24]
	1240 NotImplemented "Instruction CMP not yet implemented."
	1241 Add W9, W10, 1
	1242 Add X8, X8, X10
	1243 Move [X19+24], W9
	1244 Move [X8+32], X1
	1245 Move X8, [X9+32]
	1246 Move X8, [X8+192]
	1247 Move X2, [X8+112]
	1248 Move X0, X19
	1249 Call List`1<Object>.AddWithResize, X0, X1
	1250 Compare X25, 0
	1251 JumpIfEqual {1334}
	1252 Move X9, 0x79F000
	1253 Move W10, [X25+28]
	1254 Move X8, [X25+16]
	1255 Move X9, [X9+3600]
	1256 Add W10, W10, 1
	1257 Move X9, [X9]
	1258 Move [X25+28], W10
	1259 Compare X8, 0
	1260 JumpIfEqual {1336}
	1261 NotImplemented "Instruction LDRSW not yet implemented."
	1262 Move W11, [X8+24]
	1263 NotImplemented "Instruction CMP not yet implemented."
	1264 Move W11, [X31+120]
	1265 Add W1, W11, W23
	1266 Add W9, W10, 1
	1267 Add X8, X8, X10
	1268 Move [X25+24], W9
	1269 Move [X8+32], W1
	1270 Move X8, [X9+32]
	1271 Move X8, [X8+192]
	1272 Move X2, [X8+112]
	1273 Move X0, X25
	1274 Call List`1<Int32>.AddWithResize, X0, X1
	1275 Compare X24, 0
	1276 JumpIfEqual {1338}
	1277 Move X9, 0x79F000
	1278 Move W10, [X24+28]
	1279 Move X8, [X24+16]
	1280 Move X9, [X9+3600]
	1281 Add W10, W10, 1
	1282 Move X9, [X9]
	1283 Move [X24+28], W10
	1284 Compare X8, 0
	1285 JumpIfEqual {1335}
	1286 NotImplemented "Instruction LDRSW not yet implemented."
	1287 Move W11, [X8+24]
	1288 NotImplemented "Instruction CMP not yet implemented."
	1289 Add W9, W10, 1
	1290 Add X8, X8, X10
	1291 Move [X24+24], W9
	1292 Move TEMP, 0
	1293 Not TEMP
	1294 Move W9, TEMP
	1295 Move [X8+32], W9
	1296 Move X8, [X9+32]
	1297 Move X8, [X8+192]
	1298 Move X2, [X8+112]
	1299 Move TEMP, 0
	1300 Not TEMP
	1301 Move W1, TEMP
	1302 Move X0, X24
	1303 Call List`1<Int32>.AddWithResize, X0, X1
	1304 Subtract W23, W23, 1
	1305 Move W8, [X27+24]
	1306 Add W20, W20, 1
	1307 NotImplemented "Instruction CMP not yet implemented."
	1308 Move X8, [X31+296]
	1309 Compare X8, 0
	1310 JumpIfEqual {1384}
	1311 Move [X8+24], X19
	1312 Move [X8+32], X25
	1313 Move [X8+40], X24
	1314 Move X19, X31
	1315 Move W20, 39
	1316 Move X8, 0x7FA000
	1317 Move X8, [X8+1024]
	1318 Move X1, [X8]
	1319 Add X0, X31, 304
	1320 Call Enumerator<SimpleTuple`2<Object, Edge>>.Dispose, X0
	1321 Compare X19, 0
	1322 JumpIfNotEqual {1762}
	1323 NotImplemented "Instruction CMP not yet implemented."
	1324 Compare W20, 0
	1325 JumpIfNotEqual {1712}
	1326 Move W8, [X31+120]
	1327 Add W8, W8, W26
	1328 Move [X31+120], W8
	1329 Call 0x1C17F20
	1330 Call 0x1C17F20
	1331 Call 0x1C17F20
	1332 Call 0x1C17F20
	1333 Call 0x1C17F20
	1334 Call 0x1C17F20
	1335 Call 0x1C17F20
	1336 Call 0x1C17F20
	1337 Call 0x1C17F20
	1338 Call 0x1C17F20
	1339 Call 0x1C17F20
	1340 Call 0x1C17F20
	1341 Call 0x1C17F20
	1342 Call 0x1C17F20
	1343 Call 0x1C17F20
	1344 Call 0x1C17F20
	1345 Move X21, [X31+104]
	1346 Call 0x1C17F20
	1347 Move X21, [X31+104]
	1348 Call 0x1C17F28
	1349 Call 0x1C17F20
	1350 Call 0x1C17F20
	1351 Call 0x1C17F20
	1352 Call 0x1C17F20
	1353 Call 0x1C17F20
	1354 Call 0x1C17F20
	1355 Call 0x1C17F20
	1356 Call 0x1C17F20
	1357 Move X21, [X31+104]
	1358 Call 0x1C17F20
	1359 Move X21, [X31+104]
	1360 Call 0x1C17F20
	1361 Call 0x1C17F20
	1362 Call 0x1C17F20
	1363 Call 0x1C17F20
	1364 Call 0x1C17F20
	1365 Call 0x1C17F20
	1366 Call 0x1C17F20
	1367 Call 0x1C17F20
	1368 Move X21, [X31+104]
	1369 Call 0x1C17F20
	1370 Move X21, [X31+104]
	1371 Call 0x1C17F20
	1372 Move X21, [X31+104]
	1373 Call 0x1C17F20
	1374 Move X21, [X31+104]
	1375 Call 0x1C17F20
	1376 Move X21, [X31+104]
	1377 Call 0x1C17F20
	1378 Call 0x1C17F20
	1379 Call 0x1C17F20
	1380 Call 0x1C17F20
	1381 Call 0x1C17F20
	1382 Call 0x1C17F20
	1383 Call 0x1C17F20
	1384 Call 0x1C17F20
	1385 Move X21, [X31+104]
	1386 Move X22, [X31+80]
	1387 Move X21, [X31+104]
	1388 Move X22, [X31+80]
	1389 Move W26, [X31+96]
	1390 Move X21, [X31+104]
	1391 Move X20, X1
	1392 Move X28, X0
	1393 NotImplemented "Instruction CMP not yet implemented."
	1394 Move X0, X28
	1395 Call 0x3EB2AD0
	1396 Move X19, [X0]
	1397 Call 0x3EB2AE0
	1398 Move W20, W31
	1399 Move X8, 0x7F8000
	1400 Move X8, [X8+2768]
	1401 Move X0, [X8]
	1402 Move W8, [X0+224]
	1403 Compare W8, 0
	1404 JumpIfNotEqual {1406}
	1405 Call 0x1C17DFC
	1406 Move X8, 0x7FA000
	1407 Move X8, [X8+1168]
	1408 Move X1, X31
	1409 Move X0, [X8]
	1410 Call Log.Error, X0
	1411 Move X19, X31
	1412 Move X8, 0x7FA000
	1413 Move X8, [X8+1032]
	1414 Add X0, X31, 336
	1415 Move X1, [X8]
	1416 Call Enumerator<Edge>.Dispose, X0
	1417 Move X22, [X31+56]
	1418 Compare X22, 0
	1419 JumpIfEqual {1756}
	1420 Move X8, 0x7FA000
	1421 Move X8, [X8+960]
	1422 Move X0, X22
	1423 Move X1, [X8]
	1424 Call Dictionary`2<Object, Object>.get_Keys, X0
	1425 Move X8, 0x7FA000
	1426 Move X8, [X8+1016]
	1427 Move X1, [X8]
	1428 Call Enumerable.ToList, X0
	1429 Move X8, 0x7FA000
	1430 Move X8, [X8+968]
	1431 Move X20, X0
	1432 Move X0, X22
	1433 Move X1, [X8]
	1434 Call Dictionary`2<Object, Object>.get_Values, X0
	1435 Move X8, 0x7FA000
	1436 Move X8, [X8+1008]
	1437 Move X1, [X8]
	1438 Call Enumerable.ToList, X0
	1439 Move X8, 0x7FA000
	1440 Move X8, [X8+1152]
	1441 Move X24, X0
	1442 Move X8, [X8]
	1443 Move X0, X8
	1444 Call 0x1C17F10
	1445 Move X8, 0x7FA000
	1446 Move X8, [X8+1136]
	1447 Move X19, X0
	1448 Move X1, [X8]
	1449 Call List`1<EdgeLookup>..ctor, X0
	1450 Compare X20, 0
	1451 JumpIfEqual {1756}
	1452 Move W8, [X20+24]
	1453 NotImplemented "Instruction CMP not yet implemented."
	1454 Move X22, 0x7C8000
	1455 Move X29, 0x7A8000
	1456 Move X22, [X22+3896]
	1457 Move X29, [X29+2136]
	1458 Move W25, W31
	1459 Move [X31+120], X20
	1460 Move [X31+96], X24
	1461 Move X8, 0x7F9000
	1462 Move X8, [X8+3144]
	1463 Move X0, X20
	1464 Move W1, W25
	1465 Move X2, [X8]
	1466 Call List`1<Object>.get_Item, X0, X1
	1467 Compare X24, 0
	1468 JumpIfEqual {1756}
	1469 Move X8, 0x7FA000
	1470 Move X8, [X8+1144]
	1471 Move X23, X0
	1472 Move X0, X24
	1473 Move W1, W25
	1474 Move X2, [X8]
	1475 Call List`1<Object>.get_Item, X0, X1
	1476 Compare X21, 0
	1477 JumpIfEqual {1756}
	1478 Move X26, X0
	1479 Compare X0, 0
	1480 JumpIfEqual {1756}
	1481 Move X0, [X26+24]
	1482 Move W27, [X21+24]
	1483 Add X1, X31, 280
	1484 Move W2, W31
	1485 Move W3, W31
	1486 Move X4, X31
	1487 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	1488 Move TEMP, X0
	1489 And TEMP, TEMP, 1
	1490 Compare TEMP, 1
	1491 JumpIfNotEqual {1644}
	1492 Move X8, 0x7F9000
	1493 Move X21, [X31+280]
	1494 Move X8, [X8+1376]
	1495 Move X0, [X8]
	1496 Call 0x1C17F10
	1497 Move X1, X21
	1498 Move X2, X31
	1499 Move X28, X0
	1500 Call Face..ctor, X0, X1
	1501 Move [X26+16], X28
	1502 Compare X23, 0
	1503 JumpIfEqual {1756}
	1504 Compare X28, 0
	1505 JumpIfEqual {1756}
	1506 Move W8, [X23+72]
	1507 Move X0, X28
	1508 Move W1, W27
	1509 Move X2, X31
	1510 Move [X28+72], W8
	1511 Call Face.ShiftIndexes, X0, X1
	1512 Move X1, [X26+16]
	1513 Move X0, X23
	1514 Move X2, X31
	1515 Call Face.CopyFrom, X0, X1
	1516 Move X1, [X26+24]
	1517 Move X21, [X31+104]
	1518 Compare X1, 0
	1519 JumpIfEqual {1756}
	1520 Move W28, W31
	1521 Move W8, [X1+24]
	1522 NotImplemented "Instruction CMP not yet implemented."
	1523 Move X0, [X26+32]
	1524 Compare X0, 0
	1525 JumpIfEqual {1756}
	1526 Move X2, [X22]
	1527 Move W1, W28
	1528 Call List`1<Int32>.get_Item, X0, X1
	1529 Move W2, W0
	1530 Move X3, [X29]
	1531 Move X0, [X31+112]
	1532 Add W1, W27, W28
	1533 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	1534 Move X1, [X26+24]
	1535 Add W28, W28, 1
	1536 Compare X1, 0
	1537 JumpIfNotEqual {1521}
	1538 Move X9, [X26+40]
	1539 Compare X9, 0
	1540 JumpIfEqual {1756}
	1541 Move W9, [X9+24]
	1542 NotImplemented "Instruction CMP not yet implemented."
	1543 NotImplemented "Instruction CMP not yet implemented."
	1544 Move W28, W31
	1545 Move X0, [X26+40]
	1546 Compare X0, 0
	1547 JumpIfEqual {1756}
	1548 Move X2, [X22]
	1549 Move W1, W28
	1550 Call List`1<Int32>.get_Item, X0, X1
	1551 Move W2, W0
	1552 Move X0, [X31+80]
	1553 Compare X0, 0
	1554 JumpIfEqual {1756}
	1555 Move X3, [X29]
	1556 Add W1, W27, W28
	1557 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	1558 Move X1, [X26+24]
	1559 Compare X1, 0
	1560 JumpIfEqual {1756}
	1561 Move W8, [X1+24]
	1562 Add W28, W28, 1
	1563 NotImplemented "Instruction CMP not yet implemented."
	1564 Move X8, 0x7F8000
	1565 Move X8, [X8+3592]
	1566 Move X0, X21
	1567 Move X2, [X8]
	1568 Call List`1<Object>.AddRange, X0, X1
	1569 Move X0, X23
	1570 Move X1, X31
	1571 Call Face.get_edgesInternal, X0
	1572 Compare X0, 0
	1573 JumpIfEqual {1756}
	1574 Move X8, [X0+24]
	1575 Move X23, X0
	1576 NotImplemented "Instruction CMP not yet implemented."
	1577 Move X28, X31
	1578 And X8, X8, 0
	1579 Add X20, X23, 32
	1580 NotImplemented "Instruction CMP not yet implemented."
	1581 Move X27, 0x7F8000
	1582 Move X21, [X20]
	1583 Move X27, [X27+3200]
	1584 Move X24, [X31+112]
	1585 Move W1, W21
	1586 Move X2, [X27]
	1587 Move X0, X24
	1588 Move X26, X21
	1589 ShiftRight X26, 32
	1590 And X26, X26, 0x7FFFFFFF
	1591 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1592 Move X2, [X27]
	1593 Move W27, W0
	1594 Move X0, X24
	1595 Move W1, W26
	1596 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	1597 Move W2, W0
	1598 Add X0, X31, 224
	1599 Move W1, W27
	1600 Move X3, X31
	1601 Move [X31+224], X31
	1602 Call Edge..ctor, X0, X1, X2
	1603 Move X1, [X31+224]
	1604 Add X0, X31, 264
	1605 Move X2, X21
	1606 Move X3, X31
	1607 Call EdgeLookup..ctor, X0, X1, X2
	1608 Move X2, [X31+272]
	1609 Move W9, [X31+44]
	1610 Move X21, [X31+104]
	1611 NotImplemented "Instruction CMP not yet implemented."
	1612 Move X8, X2
	1613 ShiftRight X8, 32
	1614 And X8, X8, 0x7FFFFFFF
	1615 NotImplemented "Instruction CMP not yet implemented."
	1616 Compare X19, 0
	1617 JumpIfEqual {1756}
	1618 Move X9, 0x7FA000
	1619 Move X1, [X31+264]
	1620 Move W10, [X19+28]
	1621 Move X8, [X19+16]
	1622 Move X9, [X9+1080]
	1623 Add W10, W10, 1
	1624 Move X9, [X9]
	1625 Move [X19+28], W10
	1626 Compare X8, 0
	1627 JumpIfEqual {1756}
	1628 NotImplemented "Instruction LDRSW not yet implemented."
	1629 Move W11, [X8+24]
	1630 NotImplemented "Instruction CMP not yet implemented."
	1631 Add W9, W10, 1
	1632 Add X8, X8, X10
	1633 Move [X19+24], W9
	1634 Move [X8+32], X1
	1635 Move [X8+40], X2
	1636 Move X8, [X9+32]
	1637 Move X0, X19
	1638 Move X8, [X8+192]
	1639 Move X3, [X8+112]
	1640 Call List`1<EdgeLookup>.AddWithResize, X0, X1
	1641 Move W8, [X23+24]
	1642 Add X28, X28, 1
	1643 NotImplemented "Instruction CMP not yet implemented."
	1644 Move X20, [X31+120]
	1645 Move X24, [X31+96]
	1646 Add W25, W25, 1
	1647 Move W8, [X20+24]
	1648 NotImplemented "Instruction CMP not yet implemented."
	1649 Move X8, 0x7C9000
	1650 Move X8, [X8+3000]
	1651 Move X0, [X31+48]
	1652 Move X1, [X8]
	1653 Call Enumerable.Distinct, X0
	1654 Move X8, 0x7F9000
	1655 Move X8, [X8+680]
	1656 Move X1, [X8]
	1657 Call Enumerable.ToList, X0
	1658 Compare X0, 0
	1659 JumpIfEqual {1756}
	1660 Move X24, 0x7FA000
	1661 Move X23, [X31+24]
	1662 Move X22, [X31+32]
	1663 Move X24, [X24+96]
	1664 Compare X23, 0
	1665 JumpIfEqual {1756}
	1666 Move W8, [X0+24]
	1667 Move X20, X0
	1668 Move X0, X19
	1669 Move [X23+16], W8
	1670 Move X8, 0x7FA000
	1671 Move X8, [X8+984]
	1672 Move X1, [X8]
	1673 Call Enumerable.Distinct, X0
	1674 Move X8, 0x7FA000
	1675 Move X8, [X8+1072]
	1676 Move X19, X0
	1677 Move X8, [X8]
	1678 Move X0, X8
	1679 Call 0x1C17F10
	1680 Move X8, 0x7FA000
	1681 Move X8, [X8+1160]
	1682 Move X1, X23
	1683 Move X3, X31
	1684 Move X21, X0
	1685 Move X2, [X8]
	1686 Call Func`2<EdgeLookup, Edge>..ctor, X0, X1, X2
	1687 Move X8, 0x7FA000
	1688 Move X8, [X8+1000]
	1689 Move X0, X19
	1690 Move X1, X21
	1691 Move X2, [X8]
	1692 Call Enumerable.Select, X0, X1
	1693 Move X1, [X24]
	1694 Call Enumerable.ToList, X0
	1695 Move X1, [X31+104]
	1696 Move X19, X0
	1697 Move X0, X22
	1698 Move W2, W31
	1699 Move X3, X31
	1700 Call ProBuilderMesh.SetVertices, X0, X1, X2
	1701 Move X1, [X31+112]
	1702 Move X0, X22
	1703 Move X2, X31
	1704 Call ProBuilderMesh.SetSharedVertices, X0, X1
	1705 Move X1, [X31+80]
	1706 Move X0, X22
	1707 Move X2, X31
	1708 Call ProBuilderMesh.SetSharedTextures, X0, X1
	1709 Move X0, X22
	1710 Move X1, X20
	1711 Call DeleteElements.DeleteVertices, X0, X1
	1712 Move X8, 0x7F9000
	1713 Move X8, [X8+1032]
	1714 Add X0, X31, 336
	1715 Move X1, [X8]
	1716 Call Enumerator<Edge>.Dispose, X0
	1717 Move X0, X19
	1718 Move X20, [X31+464]
	1719 Move X19, [X31+472]
	1720 Move X22, [X31+448]
	1721 Move X21, [X31+456]
	1722 Move X24, [X31+432]
	1723 Move X23, [X31+440]
	1724 Move X26, [X31+416]
	1725 Move X25, [X31+424]
	1726 Move X28, [X31+400]
	1727 Move X27, [X31+408]
	1728 Move X29, [X31+384]
	1729 Move X30, [X31+392]
	1730 Move V8, [X31+368]
	1731 Add X31, X31, 480
	1732 Return X0
	1733 Move X19, X31
	1734 Move X8, 0x7F9000
	1735 Move X8, [X8+1024]
	1736 Move X1, [X8]
	1737 Add X0, X31, 304
	1738 Call Enumerator<SimpleTuple`2<Object, Edge>>.Dispose, X0
	1739 Move X22, [X31+56]
	1740 Compare X19, 0
	1741 JumpIfNotEqual {1790}
	1742 NotImplemented "Instruction CMP not yet implemented."
	1743 Move X0, X28
	1744 Call 0x3EB2AD0
	1745 Move X19, [X0]
	1746 Call 0x3EB2AE0
	1747 Move X8, 0x7F9000
	1748 Move X8, [X8+1032]
	1749 Add X0, X31, 336
	1750 Move X1, [X8]
	1751 Call Enumerator<Edge>.Dispose, X0
	1752 Compare X19, 0
	1753 JumpIfEqual {1418}
	1754 Move X0, X19
	1755 Call 0x1C17F18
	1756 Call 0x1C17F20
	1757 Call 0x1C17F20
	1758 Call 0x1C17F20
	1759 Call 0x1C17F28
	1760 Call 0x1C17F20
	1761 Call 0x1C17F20
	1762 Move X0, X19
	1763 Call 0x1C17F18
	1764 Move X0, 0x7A2000
	1765 Move X0, [X0+1320]
	1766 Call 0x1C17D08
	1767 Call 0x1C17F10
	1768 Move X19, X0
	1769 Move X0, 0x7F7000
	1770 Move X0, [X0+3728]
	1771 Move X0, 0x7A2000
	1772 Move X0, [X0+1320]
	1773 Call 0x1C17D08
	1774 Call 0x1C17F10
	1775 Move X19, X0
	1776 Move X0, 0x7F8000
	1777 Move X0, [X0+1616]
	1778 Call 0x1C17D08
	1779 Move X1, X0
	1780 Move X0, X19
	1781 Move X2, X31
	1782 Call ArgumentNullException..ctor, X0, X1
	1783 Move X0, 0x7F9000
	1784 Move X0, [X0+1176]
	1785 Call 0x1C17D08
	1786 Move X1, X0
	1787 Move X0, X19
	1788 Call 0x1C17DEC
	1789 Move X19, X31
	1790 Move X0, X19
	1791 Call 0x1C17F18
	1792 Move X28, X0
	1793 Move X8, 0x7F9000
	1794 Move X8, [X8+1032]
	1795 Move X1, [X8]
	1796 Add X0, X31, 336
	1797 Call Enumerator<Edge>.Dispose, X0
	1798 Compare X19, 0
	1799 JumpIfNotEqual {1802}
	1800 Move X0, X28
	1801 Call 0x1D2D690
	1802 Move X0, X19
	1803 Call 0x1C17F18
	1804 Call 0x1991590
	1805 Move X20, X1
	1806 Move X28, X0
	1807 Move X21, [X31+104]
	1808 Move X20, X1
	1809 Move X28, X0
	1810 Move X22, [X31+56]

Method: UnityEngine.ProBuilder.Face[] InsertVertexInFace(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face, UnityEngine.Vector3 point)

Disassembly:
	0x039576C4 LDR X0, [X0 + 0xB70]
	0x039576C8 BL 0x1C16CF4
	0x039576CC ADRP X0, 0x7F6000
	0x039576D0 LDR X0, [X0 + 0xDE0]
	0x039576D4 BL 0x1C16CF4
	0x039576D8 ADRP X0, 0x7F8000
	0x039576DC LDR X0, [X0 + 0x1C8]
	0x039576E0 BL 0x1C16CF4
	0x039576E4 ADRP X0, 0x7F7000
	0x039576E8 LDR X0, [X0 + 0xC40]
	0x039576EC BL 0x1C16CF4
	0x039576F0 ADRP X0, 0x7F6000
	0x039576F4 LDR X0, [X0 + 0xE18]
	0x039576F8 BL 0x1C16CF4
	0x039576FC ADRP X0, 0x79D000
	0x03957700 LDR X0, [X0 + 0xE28]
	0x03957704 BL 0x1C16CF4
	0x03957708 ADRP X0, 0x7F7000
	0x0395770C LDR X0, [X0 + 0xFE0]
	0x03957710 BL 0x1C16CF4
	0x03957714 ADRP X0, 0x7F7000
	0x03957718 LDR X0, [X0 + 0xC48]
	0x0395771C BL 0x1C16CF4
	0x03957720 ADRP X0, 0x7F8000
	0x03957724 LDR X0, [X0 + 0x1D0]
	0x03957728 BL 0x1C16CF4
	0x0395772C ADRP X0, 0x7F7000
	0x03957730 LDR X0, [X0 + 0xFE8]
	0x03957734 BL 0x1C16CF4
	0x03957738 ADRP X0, 0x7C6000
	0x0395773C LDR X0, [X0 + 0xF38]
	0x03957740 BL 0x1C16CF4
	0x03957744 ADRP X0, 0x7F8000
	0x03957748 LDR X0, [X0 + 0x478]
	0x0395774C BL 0x1C16CF4
	0x03957750 ADRP X0, 0x79D000
	0x03957754 LDR X0, [X0 + 0xE30]
	0x03957758 BL 0x1C16CF4
	0x0395775C ADRP X0, 0x7F6000
	0x03957760 LDR X0, [X0 + 0xDE8]
	0x03957764 BL 0x1C16CF4
	0x03957768 ADRP X0, 0x79C000
	0x0395776C LDR X0, [X0 + 0x598]
	0x03957770 BL 0x1C16CF4
	0x03957774 ADRP X0, 0x7F8000
	0x03957778 LDR X0, [X0 + 0x338]
	0x0395777C BL 0x1C16CF4
	0x03957780 ADRP X0, 0x7F7000
	0x03957784 LDR X0, [X0 + 0xB08]
	0x03957788 BL 0x1C16CF4
	0x0395778C MOVZ W8, 0x1
	0x03957790 STRB W8, [X20 + 0x99C]
	0x03957794 LDR X0, [X19]
	0x03957798 MOVI V0.2D, 0x0
	0x0395779C STR X31, [X31 + 0x118]
	0x039577A0 STP X31, X31, [X31 + 0xE0]
	0x039577A4 STP V0, V0, [X31 + 0xF0]
	0x039577A8 STR X31, [X31 + 0xD8]
	0x039577AC LDR W8, [X0 + 0xE0]
	0x039577B0 CBNZ W8, 0x39577B8
	0x039577B4 BL 0x1C16DFC
	0x039577B8 MOV X0, X25
	0x039577BC MOV X1, X31
	0x039577C0 MOV X2, X31
	0x039577C4 BL 0x3C3883C
	0x039577C8 TBNZ X0, 0x0, 0x3958718
	0x039577CC CBZ X25, 0x395863C
	0x039577D0 MOV X27, X21
	0x039577D4 ADRP X19, 0x7F6000
	0x039577D8 ADRP X21, 0x7F6000
	0x039577DC ADRP X24, 0x79D000
	0x039577E0 ADRP X26, 0x7A0000
	0x039577E4 ADRP X20, 0x7F8000
	0x039577E8 ADRP X22, 0x7F8000
	0x039577EC LDR X19, [X19 + 0xDE8]
	0x039577F0 LDR X21, [X21 + 0xDE0]
	0x039577F4 LDR X24, [X24 + 0xE30]
	0x039577F8 LDR X26, [X26 + 0xB70]
	0x039577FC LDR X20, [X20 + 0x3D0]
	0x03957800 LDR X22, [X22 + 0x3B8]
	0x03957804 MOV X0, X25
	0x03957808 MOV X1, X31
	0x0395780C MOV X2, X31
	0x03957810 BL 0x3912114
	0x03957814 LDR X8, [X19]
	0x03957818 MOV X19, X0
	0x0395781C MOV X0, X8
	0x03957820 BL 0x1C16F10
	0x03957824 LDR X2, [X21]
	0x03957828 MOV X1, X19
	0x0395782C MOV X23, X0
	0x03957830 BL 0x301B8E0
	0x03957834 MOV X0, X25
	0x03957838 MOV X1, X31
	0x0395783C BL 0x3916198
	0x03957840 MOV X21, X0
	0x03957844 MOV X0, X25
	0x03957848 MOV X1, X31
	0x0395784C BL 0x39162B4
	0x03957850 LDR X8, [X24]
	0x03957854 MOV X28, X0
	0x03957858 MOV X0, X8
	0x0395785C BL 0x1C16F10
	0x03957860 LDR X1, [X26]
	0x03957864 MOV X24, X0
	0x03957868 BL 0x2FDBF14
	0x0395786C LDR X0, [X20]
	0x03957870 BL 0x1C16F10
	0x03957874 LDR X1, [X22]
	0x03957878 MOV X29, X0
	0x0395787C BL 0x2AA4804
	0x03957880 CBZ X21, 0x395863C
	0x03957884 ADRP X8, 0x7F7000
	0x03957888 LDR X8, [X8 + 0xD78]
	0x0395788C MOV X0, X21
	0x03957890 LDR X1, [X8]
	0x03957894 BL 0x2A0A118
	0x03957898 STR W0, [X31 + 0x44]
	0x0395789C CBZ X23, 0x395863C
	0x039578A0 ADRP X20, 0x7F8000
	0x039578A4 LDR X20, [X20 + 0x1D0]
	0x039578A8 MOV X26, X27
	0x039578AC MOV X0, X23
	0x039578B0 MOV W1, W26
	0x039578B4 LDR X2, [X20]
	0x039578B8 BL 0x301BCCC
	0x039578BC CBZ X0, 0x395863C
	0x039578C0 LDR X2, [X20]
	0x039578C4 LDP S11, S15, [X0 + 0x10]
	0x039578C8 LDR V12, [X0 + 0x18]
	0x039578CC UBFM X19, X26, 0x20, 0x3F
	0x039578D0 MOV X0, X23
	0x039578D4 MOV W1, W19
	0x039578D8 BL 0x301BCCC
	0x039578DC CBZ X0, 0x395863C
	0x039578E0 LDR V0, [X0 + 0x10]
	0x039578E4 LDR X2, [X20]
	0x039578E8 MOV W1, W26
	0x039578EC STR S12, [X31 + 0x38]
	0x039578F0 STR S0, [X31 + 0x20]
	0x039578F4 LDR V0, [X0 + 0x14]
	0x039578F8 MOV V12.16B, V10.16B
	0x039578FC STR X23, [X31 + 0x48]
	0x03957900 STR S0, [X31 + 0x30]
	0x03957904 LDR V0, [X0 + 0x18]
	0x03957908 MOV X0, X23
	0x0395790C STR S0, [X31 + 0x28]
	0x03957910 BL 0x301BCCC
	0x03957914 CBZ X0, 0x395863C
	0x03957918 ADRP X20, 0xA81000
	0x0395791C LDP S13, S9, [X0 + 0x10]
	0x03957920 LDRB W8, [X20 + 0x785]
	0x03957924 LDR V10, [X0 + 0x18]
	0x03957928 CBNZ W8, 0x3957940
	0x0395792C ADRP X0, 0x79C000
	0x03957930 LDR X0, [X0 + 0x5A8]
	0x03957934 BL 0x1C16CF4
	0x03957938 MOVZ W8, 0x1
	0x0395793C STRB W8, [X20 + 0x785]
	0x03957940 ADRP X22, 0x79C000
	0x03957944 LDR X22, [X22 + 0x5A8]
	0x03957948 LDR V0, [X31 + 0x38]
	0x0395794C FSUB S12, S12, S11
	0x03957950 FSUB S11, S8, S15
	0x03957954 LDR X0, [X22]
	0x03957958 FSUB S8, S14, S0
	0x0395795C LDR W8, [X0 + 0xE0]
	0x03957960 CBNZ W8, 0x3957968
	0x03957964 BL 0x1C16DFC
	0x03957968 LDR V0, [X31 + 0x20]
	0x0395796C ADRP X23, 0xA81000
	0x03957970 LDRB W8, [X23 + 0xA24]
	0x03957974 FMUL S1, S11, S11
	0x03957978 FSUB S14, S0, S13
	0x0395797C LDR V0, [X31 + 0x30]
	0x03957980 FSUB S15, S0, S9
	0x03957984 LDR V0, [X31 + 0x28]
	0x03957988 FSUB S13, S0, S10
	0x0395798C FMUL S0, S12, S12
	0x03957990 FADD S9, S0, S1
	0x03957994 FMUL S10, S8, S8
	0x03957998 CBNZ W8, 0x39579B0
	0x0395799C ADRP X0, 0x79C000
	0x039579A0 LDR X0, [X0 + 0x5A8]
	0x039579A4 BL 0x1C16CF4
	0x039579A8 MOVZ W8, 0x1
	0x039579AC STRB W8, [X23 + 0xA24]
	0x039579B0 LDR X0, [X22]
	0x039579B4 FMUL S0, S14, S14
	0x039579B8 FMUL S1, S15, S15
	0x039579BC FADD S0, S0, S1
	0x039579C0 LDR W8, [X0 + 0xE0]
	0x039579C4 FMUL S1, S13, S13
	0x039579C8 FADD S10, S10, S9
	0x039579CC FADD S9, S1, S0
	0x039579D0 CBNZ W8, 0x39579D8
	0x039579D4 BL 0x1C16DFC
	0x039579D8 ADRP X8, 0xFFFFFFFFFD192000
	0x039579DC LDR V1, [X8 + 0xFE8]
	0x039579E0 FMUL S0, S10, S9
	0x039579E4 FSQRT S0, S0
	0x039579E8 FCMP S0, S1
	0x039579EC FMOV S1, W31
	0x039579F0 B.MI 0x3957A48
	0x039579F4 LDR X0, [X22]
	0x039579F8 FMUL S1, S12, S14
	0x039579FC FMUL S2, S11, S15
	0x03957A00 FMUL S3, S8, S13
	0x03957A04 FADD S1, S1, S2
	0x03957A08 FADD S1, S3, S1
	0x03957A0C LDR W8, [X0 + 0xE0]
	0x03957A10 FDIV S0, S1, S0
	0x03957A14 FMOV S1, 1
	0x03957A18 FMOV S2, -1
	0x03957A1C FMIN S1, S0, S1
	0x03957A20 FCMP S0, S2
	0x03957A24 FCSEL S8, S1, S2, PL
	0x03957A28 CBNZ W8, 0x3957A30
	0x03957A2C BL 0x1C16DFC
	0x03957A30 FCVT S0, S8
	0x03957A34 BL 0x3EB1B80
	0x03957A38 ADRP X8, 0xFFFFFFFFFD193000
	0x03957A3C LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03957A44 FMUL S1, S0, S1
	0x03957A48 ADRP X8, 0xFFFFFFFFFD193000
	0x03957A4C LDR V0, [X8 + 0x104]
	0x03957A50 MOV X27, X24
	0x03957A54 FMUL S0, S1, S0
	0x03957A58 BL 0x3EB1BD0
	0x03957A5C LDRB W8, [X20 + 0x785]
	0x03957A60 MOV V8.16B, V0.16B
	0x03957A64 CBNZ W8, 0x3957A7C
	0x03957A68 ADRP X0, 0x79C000
	0x03957A6C LDR X0, [X0 + 0x5A8]
	0x03957A70 BL 0x1C16CF4
	0x03957A74 MOVZ W8, 0x1
	0x03957A78 STRB W8, [X20 + 0x785]
	0x03957A7C LDR X0, [X22]
	0x03957A80 ADRP X24, 0x7F8000
	0x03957A84 FSQRT S10, S10
	0x03957A88 LDR W8, [X0 + 0xE0]
	0x03957A8C LDR X24, [X24 + 0x328]
	0x03957A90 CBNZ W8, 0x3957A98
	0x03957A94 BL 0x1C16DFC
	0x03957A98 ADRP X22, 0x7F6000
	0x03957A9C ADRP X23, 0x7F8000
	0x03957AA0 LDR X22, [X22 + 0xC80]
	0x03957AA4 LDR X23, [X23 + 0x1D0]
	0x03957AA8 LDR X20, [X31 + 0x48]
	0x03957AAC FSQRT S0, S9
	0x03957AB0 FMUL S1, S10, S8
	0x03957AB4 LDR X2, [X23]
	0x03957AB8 MOV X0, X20
	0x03957ABC MOV W1, W26
	0x03957AC0 FDIV S8, S1, S0
	0x03957AC4 BL 0x301BCCC
	0x03957AC8 LDR X2, [X23]
	0x03957ACC MOV X23, X0
	0x03957AD0 MOV X0, X20
	0x03957AD4 MOV W1, W19
	0x03957AD8 BL 0x301BCCC
	0x03957ADC MOV X1, X0
	0x03957AE0 MOV X0, X23
	0x03957AE4 MOV V0.16B, V8.16B
	0x03957AE8 MOV X2, X31
	0x03957AEC BL 0x3940610
	0x03957AF0 LDR X8, [X24]
	0x03957AF4 STR X0, [X31 + 0x28]
	0x03957AF8 LDR W9, [X8 + 0xE0]
	0x03957AFC CBNZ W9, 0x3957B08
	0x03957B00 MOV X0, X8
	0x03957B04 BL 0x1C16DFC
	0x03957B08 MOV X0, X25
	0x03957B0C MOV X1, X26
	0x03957B10 BL 0x39534E8
	0x03957B14 LDR X2, [X22]
	0x03957B18 MOV X23, X0
	0x03957B1C MOV X0, X21
	0x03957B20 MOV W1, W26
	0x03957B24 BL 0x2A0A2A8
	0x03957B28 LDR X2, [X22]
	0x03957B2C MOV W24, W0
	0x03957B30 MOV X0, X21
	0x03957B34 MOV W1, W19
	0x03957B38 MOV X26, X22
	0x03957B3C BL 0x2A0A2A8
	0x03957B40 ADRP X8, 0x7C4000
	0x03957B44 LDR X8, [X8 + 0x600]
	0x03957B48 MOV W19, W0
	0x03957B4C LDR X8, [X8]
	0x03957B50 LDR W9, [X8 + 0xE0]
	0x03957B54 CBNZ W9, 0x3957B60
	0x03957B58 MOV X0, X8
	0x03957B5C BL 0x1C16DFC
	0x03957B60 ADD X0, X31, 0x118
	0x03957B64 MOV W1, W24
	0x03957B68 MOV W2, W19
	0x03957B6C MOV X3, X31
	0x03957B70 STP X25, X27, [X31 + 0x18]
	0x03957B74 BL 0x38FDC24
	0x03957B78 CBZ X23, 0x395863C
	0x03957B7C ADRP X8, 0x7F8000
	0x03957B80 LDR X8, [X8 + 0x440]
	0x03957B84 ADRP X22, 0x7A6000
	0x03957B88 LDR X22, [X22 + 0x870]
	0x03957B8C MOV X0, X23
	0x03957B90 LDR X1, [X8]
	0x03957B94 ADD X8, X31, 0xB0
	0x03957B98 BL 0x2F2EBB0
	0x03957B9C LDP V0, V1, [X31 + 0xB0]
	0x03957BA0 STP X29, X28, [X31 + 0x30]
	0x03957BA4 STP V0, V1, [X31 + 0xF0]
	0x03957BA8 ADRP X8, 0x7F8000
	0x03957BAC LDR X8, [X8 + 0x418]
	0x03957BB0 LDR X1, [X8]
	0x03957BB4 ADD X0, X31, 0xF0
	0x03957BB8 BL 0x2BB2398
	0x03957BBC TBZ X0, 0x0, 0x3958370
	0x03957BC0 CBZ X29, 0x39586CC
	0x03957BC4 ADRP X8, 0x7F8000
	0x03957BC8 LDR X20, [X31 + 0x100]
	0x03957BCC LDR X8, [X8 + 0x3B0]
	0x03957BD0 LDR X3, [X8]
	0x03957BD4 ADD X2, X31, 0xE8
	0x03957BD8 MOV X0, X29
	0x03957BDC MOV X1, X20
	0x03957BE0 BL 0x2AA6B2C
	0x03957BE4 TBNZ X0, 0x0, 0x3957EF8
	0x03957BE8 ADRP X8, 0x7F8000
	0x03957BEC LDR X8, [X8 + 0x1F0]
	0x03957BF0 LDR X0, [X8]
	0x03957BF4 BL 0x1C16F10
	0x03957BF8 MOV X19, X0
	0x03957BFC MOV X1, X31
	0x03957C00 BL 0x3901F84
	0x03957C04 ADRP X8, 0x79D000
	0x03957C08 LDR X8, [X8 + 0xE58]
	0x03957C0C STR X19, [X31 + 0xE8]
	0x03957C10 LDR X0, [X8]
	0x03957C14 MOV W1, W31
	0x03957C18 BL 0x1C16D6C
	0x03957C1C CBZ X20, 0x3958704
	0x03957C20 LDR W24, [X20 + 0x48]
	0x03957C24 LDUR V0, [X20 + 0x2C]
	0x03957C28 LDUR V1, [X20 + 0x1C]
	0x03957C2C MOV X23, X0
	0x03957C30 MOVI V2.2D, 0x0
	0x03957C34 STP V2, V2, [X31 + 0x90]
	0x03957C38 STP V1, V0, [X31 + 0xB0]
	0x03957C3C STP V1, V0, [X31 + 0x70]
	0x03957C40 ADD X0, X31, 0x90
	0x03957C44 ADD X1, X31, 0x70
	0x03957C48 MOV X2, X31
	0x03957C4C BL 0x38F69EC
	0x03957C50 ADRP X8, 0x7F7000
	0x03957C54 LDR W28, [X20 + 0x18]
	0x03957C58 LDR W29, [X20 + 0x54]
	0x03957C5C LDRB W27, [X20 + 0x4C]
	0x03957C60 LDR X8, [X8 + 0x560]
	0x03957C64 LDR X0, [X8]
	0x03957C68 BL 0x1C16F10
	0x03957C6C LDP V0, V1, [X31 + 0x90]
	0x03957C70 MOV X25, X0
	0x03957C74 CMP W27, 0x0
	0x03957C78 CSET W7, NE
	0x03957C7C STP V0, V1, [X31 + 0x50]
	0x03957C80 ADD X3, X31, 0x50
	0x03957C84 MOVN W6, 0x0
	0x03957C88 MOV X1, X23
	0x03957C8C MOV W2, W24
	0x03957C90 MOV W4, W28
	0x03957C94 MOV W5, W29
	0x03957C98 STR X31, [X31]
	0x03957C9C BL 0x39004D4
	0x03957CA0 CBZ X19, 0x3958700
	0x03957CA4 STR X25, [X19 + 0x10]
	0x03957CA8 LDR X24, [X31 + 0xE8]
	0x03957CAC LDP X29, X28, [X31 + 0x30]
	0x03957CB0 MOV X0, X20
	0x03957CB4 MOV X1, X31
	0x03957CB8 BL 0x38FF530
	0x03957CBC MOV X1, X0
	0x03957CC0 ADRP X8, 0x7F8000
	0x03957CC4 LDR X8, [X8 + 0x3A0]
	0x03957CC8 LDR X2, [X8]
	0x03957CCC LDR X0, [X31 + 0x48]
	0x03957CD0 BL 0x2180E50
	0x03957CD4 ADRP X8, 0x7F6000
	0x03957CD8 LDR X8, [X8 + 0xDE8]
	0x03957CDC MOV X23, X0
	0x03957CE0 LDR X0, [X8]
	0x03957CE4 BL 0x1C16F10
	0x03957CE8 ADRP X8, 0x7F6000
	0x03957CEC LDR X8, [X8 + 0xDE0]
	0x03957CF0 MOV X19, X0
	0x03957CF4 LDR X2, [X8]
	0x03957CF8 MOV X1, X23
	0x03957CFC BL 0x301B8E0
	0x03957D00 CBZ X24, 0x3958708
	0x03957D04 STR X19, [X24 + 0x18]
	0x03957D08 ADRP X8, 0x79D000
	0x03957D0C LDR X23, [X31 + 0xE8]
	0x03957D10 LDR X8, [X8 + 0xE30]
	0x03957D14 LDR X0, [X8]
	0x03957D18 BL 0x1C16F10
	0x03957D1C ADRP X8, 0x7A0000
	0x03957D20 LDR X8, [X8 + 0xB70]
	0x03957D24 MOV X19, X0
	0x03957D28 LDR X1, [X8]
	0x03957D2C BL 0x2FDBF14
	0x03957D30 CBZ X23, 0x395870C
	0x03957D34 STR X19, [X23 + 0x20]
	0x03957D38 ADRP X8, 0x79D000
	0x03957D3C LDR X23, [X31 + 0xE8]
	0x03957D40 LDR X8, [X8 + 0xE30]
	0x03957D44 LDR X0, [X8]
	0x03957D48 BL 0x1C16F10
	0x03957D4C ADRP X8, 0x7A0000
	0x03957D50 LDR X8, [X8 + 0xB70]
	0x03957D54 MOV X19, X0
	0x03957D58 LDR X1, [X8]
	0x03957D5C BL 0x2FDBF14
	0x03957D60 CBZ X23, 0x39586F8
	0x03957D64 STR X19, [X23 + 0x28]
	0x03957D68 MOV X0, X20
	0x03957D6C MOV X1, X31
	0x03957D70 BL 0x38FF530
	0x03957D74 MOV X19, X0
	0x03957D78 CBZ X0, 0x39586FC
	0x03957D7C LDR X8, [X19 + 0x18]
	0x03957D80 CMP W8, 0x1
	0x03957D84 B.LT 0x3957EB4
	0x03957D88 MOV X24, X31
	0x03957D8C AND X8, X8, 0x0
	0x03957D90 ADD X25, X19, 0x20
	0x03957D94 CMP X24, W8, UXTW
	0x03957D98 B.CS 0x395865C
	0x03957D9C LDR W23, [X25, X24, LSL #2]
	0x03957DA0 LDR X3, [X22]
	0x03957DA4 ADD X2, X31, 0xE4
	0x03957DA8 MOV X0, X21
	0x03957DAC MOV W1, W23
	0x03957DB0 BL 0x2A0BC68
	0x03957DB4 TBZ X0, 0x0, 0x3957E20
	0x03957DB8 LDR X8, [X31 + 0xE8]
	0x03957DBC CBZ X8, 0x39586BC
	0x03957DC0 LDR X0, [X8 + 0x20]
	0x03957DC4 CBZ X0, 0x39586C0
	0x03957DC8 ADRP X9, 0x79D000
	0x03957DCC LDR W1, [X31 + 0xE4]
	0x03957DD0 LDR W10, [X0 + 0x1C]
	0x03957DD4 LDR X8, [X0 + 0x10]
	0x03957DD8 LDR X9, [X9 + 0xE10]
	0x03957DDC ADD W10, W10, 0x1
	0x03957DE0 LDR X9, [X9]
	0x03957DE4 STR W10, [X0 + 0x1C]
	0x03957DE8 CBZ X8, 0x39586B8
	0x03957DEC LDRSW X10, [X0 + 0x18]
	0x03957DF0 LDR W11, [X8 + 0x18]
	0x03957DF4 CMP W10, W11
	0x03957DF8 B.CS 0x3957E10
	0x03957DFC ADD W9, W10, 0x1
	0x03957E00 ADD X8, X8, X10, 0x2, LSL
	0x03957E04 STR W9, [X0 + 0x18]
	0x03957E08 STR W1, [X8 + 0x20]
	0x03957E0C B 0x3957E20
	0x03957E10 LDR X8, [X9 + 0x20]
	0x03957E14 LDR X8, [X8 + 0xC0]
	0x03957E18 LDR X2, [X8 + 0x70]
	0x03957E1C BL 0x2FDC70C
	0x03957E20 CBZ X28, 0x3958648
	0x03957E24 LDR X3, [X22]
	0x03957E28 ADD X2, X31, 0xE4
	0x03957E2C MOV X0, X28
	0x03957E30 MOV W1, W23
	0x03957E34 BL 0x2A0BC68
	0x03957E38 TBZ X0, 0x0, 0x3957EA4
	0x03957E3C LDR X8, [X31 + 0xE8]
	0x03957E40 CBZ X8, 0x39586C4
	0x03957E44 LDR X0, [X8 + 0x28]
	0x03957E48 CBZ X0, 0x39586C8
	0x03957E4C ADRP X9, 0x79D000
	0x03957E50 LDR W1, [X31 + 0xE4]
	0x03957E54 LDR W10, [X0 + 0x1C]
	0x03957E58 LDR X8, [X0 + 0x10]
	0x03957E5C LDR X9, [X9 + 0xE10]
	0x03957E60 ADD W10, W10, 0x1
	0x03957E64 LDR X9, [X9]
	0x03957E68 STR W10, [X0 + 0x1C]
	0x03957E6C CBZ X8, 0x39586B4
	0x03957E70 LDRSW X10, [X0 + 0x18]
	0x03957E74 LDR W11, [X8 + 0x18]
	0x03957E78 CMP W10, W11
	0x03957E7C B.CS 0x3957E94
	0x03957E80 ADD W9, W10, 0x1
	0x03957E84 ADD X8, X8, X10, 0x2, LSL
	0x03957E88 STR W9, [X0 + 0x18]
	0x03957E8C STR W1, [X8 + 0x20]
	0x03957E90 B 0x3957EA4
	0x03957E94 LDR X8, [X9 + 0x20]
	0x03957E98 LDR X8, [X8 + 0xC0]
	0x03957E9C LDR X2, [X8 + 0x70]
	0x03957EA0 BL 0x2FDC70C
	0x03957EA4 LDR W8, [X19 + 0x18]
	0x03957EA8 ADD X24, X24, 0x1
	0x03957EAC CMP X24, W8, SXTW
	0x03957EB0 B.LT 0x3957D94
	0x03957EB4 MOV X0, X20
	0x03957EB8 MOV X1, X31
	0x03957EBC BL 0x38FF530
	0x03957EC0 MOV X1, X0
	0x03957EC4 LDR X0, [X31 + 0x20]
	0x03957EC8 CBZ X0, 0x3958714
	0x03957ECC ADRP X8, 0x7F7000
	0x03957ED0 LDR X8, [X8 + 0x688]
	0x03957ED4 LDR X2, [X8]
	0x03957ED8 BL 0x2FDC918
	0x03957EDC ADRP X8, 0x7F8000
	0x03957EE0 LDR X2, [X31 + 0xE8]
	0x03957EE4 LDR X8, [X8 + 0x3A8]
	0x03957EE8 LDR X3, [X8]
	0x03957EEC MOV X0, X29
	0x03957EF0 MOV X1, X20
	0x03957EF4 BL 0x2AA5098
	0x03957EF8 LDR X8, [X31 + 0xE8]
	0x03957EFC CBZ X8, 0x39586DC
	0x03957F00 LDR X0, [X8 + 0x18]
	0x03957F04 CBZ X0, 0x39586E0
	0x03957F08 ADRP X9, 0x7F8000
	0x03957F0C LDR W10, [X0 + 0x1C]
	0x03957F10 LDR X8, [X0 + 0x10]
	0x03957F14 LDR X9, [X9 + 0x1C0]
	0x03957F18 ADD W10, W10, 0x1
	0x03957F1C LDR X9, [X9]
	0x03957F20 STR W10, [X0 + 0x1C]
	0x03957F24 CBZ X8, 0x39586D4
	0x03957F28 LDRSW X10, [X0 + 0x18]
	0x03957F2C LDR W11, [X8 + 0x18]
	0x03957F30 CMP W10, W11
	0x03957F34 B.CS 0x3957F50
	0x03957F38 ADD W9, W10, 0x1
	0x03957F3C STR W9, [X0 + 0x18]
	0x03957F40 LDR X9, [X31 + 0x28]
	0x03957F44 ADD X8, X8, X10, 0x3, LSL
	0x03957F48 STR X9, [X8 + 0x20]
	0x03957F4C B 0x3957F64
	0x03957F50 LDR X8, [X9 + 0x20]
	0x03957F54 LDR X8, [X8 + 0xC0]
	0x03957F58 LDR X2, [X8 + 0x70]
	0x03957F5C LDR X1, [X31 + 0x28]
	0x03957F60 BL 0x301BF90
	0x03957F64 LDR X8, [X31 + 0xE8]
	0x03957F68 CBZ X8, 0x39586D8
	0x03957F6C LDR X0, [X8 + 0x20]
	0x03957F70 CBZ X0, 0x39586EC
	0x03957F74 ADRP X10, 0x79D000
	0x03957F78 LDR W11, [X0 + 0x1C]
	0x03957F7C LDR X9, [X0 + 0x10]
	0x03957F80 LDR X10, [X10 + 0xE10]
	0x03957F84 ADD W11, W11, 0x1
	0x03957F88 LDR X10, [X10]
	0x03957F8C STR W11, [X0 + 0x1C]
	0x03957F90 CBZ X9, 0x39586E4
	0x03957F94 LDRSW X11, [X0 + 0x18]
	0x03957F98 LDR W12, [X9 + 0x18]
	0x03957F9C CMP W11, W12
	0x03957FA0 B.CS 0x3957FBC
	0x03957FA4 ADD W10, W11, 0x1
	0x03957FA8 STR W10, [X0 + 0x18]
	0x03957FAC LDR W10, [X31 + 0x44]
	0x03957FB0 ADD X9, X9, X11, 0x2, LSL
	0x03957FB4 STR W10, [X9 + 0x20]
	0x03957FB8 B 0x3957FD8
	0x03957FBC LDR X8, [X10 + 0x20]
	0x03957FC0 LDR X8, [X8 + 0xC0]
	0x03957FC4 LDR X2, [X8 + 0x70]
	0x03957FC8 LDR W1, [X31 + 0x44]
	0x03957FCC BL 0x2FDC70C
	0x03957FD0 LDR X8, [X31 + 0xE8]
	0x03957FD4 CBZ X8, 0x3958710
	0x03957FD8 LDR X0, [X8 + 0x28]
	0x03957FDC CBZ X0, 0x39586D0
	0x03957FE0 ADRP X9, 0x79D000
	0x03957FE4 LDR W10, [X0 + 0x1C]
	0x03957FE8 LDR X8, [X0 + 0x10]
	0x03957FEC LDR X9, [X9 + 0xE10]
	0x03957FF0 ADD W10, W10, 0x1
	0x03957FF4 LDR X9, [X9]
	0x03957FF8 STR W10, [X0 + 0x1C]
	0x03957FFC CBZ X8, 0x39586F0
	0x03958000 LDRSW X10, [X0 + 0x18]
	0x03958004 LDR W11, [X8 + 0x18]
	0x03958008 CMP W10, W11
	0x0395800C B.CS 0x3958028
	0x03958010 ADD W9, W10, 0x1
	0x03958014 ADD X8, X8, X10, 0x2, LSL
	0x03958018 STR W9, [X0 + 0x18]
	0x0395801C MOVN W9, 0x0
	0x03958020 STR W9, [X8 + 0x20]
	0x03958024 B 0x395803C
	0x03958028 LDR X8, [X9 + 0x20]
	0x0395802C LDR X8, [X8 + 0xC0]
	0x03958030 LDR X2, [X8 + 0x70]
	0x03958034 MOVN W1, 0x0
	0x03958038 BL 0x2FDC70C
	0x0395803C ADRP X8, 0x7F5000
	0x03958040 LDR X8, [X8 + 0xDE8]
	0x03958044 LDR X0, [X8]
	0x03958048 BL 0x1C16F10
	0x0395804C ADRP X8, 0x7F7000
	0x03958050 LDR X8, [X8 + 0x1C8]
	0x03958054 MOV X28, X0
	0x03958058 LDR X1, [X8]
	0x0395805C BL 0x301B7C4
	0x03958060 ADRP X8, 0x79C000
	0x03958064 LDR X8, [X8 + 0xE30]
	0x03958068 LDR X0, [X8]
	0x0395806C BL 0x1C16F10
	0x03958070 ADRP X8, 0x79F000
	0x03958074 LDR X8, [X8 + 0xB70]
	0x03958078 MOV X29, X0
	0x0395807C LDR X1, [X8]
	0x03958080 BL 0x2FDBF14
	0x03958084 ADRP X8, 0x7F6000
	0x03958088 LDR X8, [X8 + 0xB08]
	0x0395808C LDR X0, [X8]
	0x03958090 LDR W8, [X0 + 0xE0]
	0x03958094 CBNZ W8, 0x395809C
	0x03958098 BL 0x1C16DFC
	0x0395809C MOV X0, X20
	0x039580A0 MOV X1, X31
	0x039580A4 BL 0x3942528
	0x039580A8 MOV X27, X0
	0x039580AC CBZ X0, 0x39586E8
	0x039580B0 LDR W8, [X27 + 0x18]
	0x039580B4 CMP W8, 0x1
	0x039580B8 B.LT 0x395835C
	0x039580BC MOV W19, W31
	0x039580C0 MOVZ W25, 0x1
	0x039580C4 ADRP X20, 0x7F6000
	0x039580C8 LDR X20, [X20 + 0xFE8]
	0x039580CC LDR X2, [X20]
	0x039580D0 MOV X0, X27
	0x039580D4 MOV W1, W19
	0x039580D8 BL 0x2FB9C40
	0x039580DC LDR X2, [X20]
	0x039580E0 MOV X23, X0
	0x039580E4 MOV X0, X27
	0x039580E8 MOV W1, W19
	0x039580EC BL 0x2FB9C40
	0x039580F0 ADRP X8, 0x7F7000
	0x039580F4 LDR X8, [X8 + 0x1D0]
	0x039580F8 MOV X24, X0
	0x039580FC LDR X2, [X8]
	0x03958100 LDR X0, [X31 + 0x48]
	0x03958104 MOV W1, W23
	0x03958108 BL 0x301BCCC
	0x0395810C MOV X1, X0
	0x03958110 CBZ X28, 0x3958644
	0x03958114 ADRP X9, 0x7F7000
	0x03958118 LDR W10, [X28 + 0x1C]
	0x0395811C LDR X8, [X28 + 0x10]
	0x03958120 LDR X9, [X9 + 0x1C0]
	0x03958124 ADD W10, W10, 0x1
	0x03958128 LDR X9, [X9]
	0x0395812C STR W10, [X28 + 0x1C]
	0x03958130 CBZ X8, 0x3958640
	0x03958134 LDRSW X10, [X28 + 0x18]
	0x03958138 LDR W11, [X8 + 0x18]
	0x0395813C CMP W10, W11
	0x03958140 B.CS 0x3958158
	0x03958144 ADD W9, W10, 0x1
	0x03958148 ADD X8, X8, X10, 0x3, LSL
	0x0395814C STR W9, [X28 + 0x18]
	0x03958150 STR X1, [X8 + 0x20]
	0x03958154 B 0x395816C
	0x03958158 LDR X8, [X9 + 0x20]
	0x0395815C LDR X8, [X8 + 0xC0]
	0x03958160 LDR X2, [X8 + 0x70]
	0x03958164 MOV X0, X28
	0x03958168 BL 0x301BF90
	0x0395816C LDR X3, [X22]
	0x03958170 ADD X2, X31, 0xE0
	0x03958174 MOV X0, X21
	0x03958178 MOV W1, W23
	0x0395817C BL 0x2A0BC68
	0x03958180 TBZ X0, 0x0, 0x39581E4
	0x03958184 CBZ X29, 0x3958674
	0x03958188 ADRP X9, 0x79C000
	0x0395818C LDR W1, [X31 + 0xE0]
	0x03958190 LDR W10, [X29 + 0x1C]
	0x03958194 LDR X8, [X29 + 0x10]
	0x03958198 LDR X9, [X9 + 0xE10]
	0x0395819C ADD W10, W10, 0x1
	0x039581A0 LDR X9, [X9]
	0x039581A4 STR W10, [X29 + 0x1C]
	0x039581A8 CBZ X8, 0x3958670
	0x039581AC LDRSW X10, [X29 + 0x18]
	0x039581B0 LDR W11, [X8 + 0x18]
	0x039581B4 CMP W10, W11
	0x039581B8 B.CS 0x39581D0
	0x039581BC ADD W9, W10, 0x1
	0x039581C0 ADD X8, X8, X10, 0x2, LSL
	0x039581C4 STR W9, [X29 + 0x18]
	0x039581C8 STR W1, [X8 + 0x20]
	0x039581CC B 0x39581E4
	0x039581D0 LDR X8, [X9 + 0x20]
	0x039581D4 LDR X8, [X8 + 0xC0]
	0x039581D8 LDR X2, [X8 + 0x70]
	0x039581DC MOV X0, X29
	0x039581E0 BL 0x2FDC70C
	0x039581E4 UBFM X24, X24, 0x20, 0x3F
	0x039581E8 TBZ X25, 0x0, 0x3958224
	0x039581EC LDR W20, [X31 + 0x118]
	0x039581F0 LDR X2, [X26]
	0x039581F4 MOV X0, X21
	0x039581F8 MOV W1, W23
	0x039581FC BL 0x2A0A2A8
	0x03958200 CMP W20, W0
	0x03958204 B.NE 0x3958224
	0x03958208 LDR W20, [X31 + 0x11C]
	0x0395820C LDR X2, [X26]
	0x03958210 MOV X0, X21
	0x03958214 MOV W1, W24
	0x03958218 BL 0x2A0A2A8
	0x0395821C CMP W20, W0
	0x03958220 B.EQ 0x395825C
	0x03958224 LDR W20, [X31 + 0x118]
	0x03958228 LDR X2, [X26]
	0x0395822C MOV X0, X21
	0x03958230 MOV W1, W24
	0x03958234 BL 0x2A0A2A8
	0x03958238 CMP W20, W0
	0x0395823C B.NE 0x395834C
	0x03958240 LDR W20, [X31 + 0x11C]
	0x03958244 LDR X2, [X26]
	0x03958248 MOV X0, X21
	0x0395824C MOV W1, W23
	0x03958250 BL 0x2A0A2A8
	0x03958254 CMP W20, W0
	0x03958258 B.NE 0x395834C
	0x0395825C LDR X8, [X31 + 0xE8]
	0x03958260 CBZ X8, 0x39586B0
	0x03958264 LDR X0, [X8 + 0x18]
	0x03958268 CBZ X0, 0x3958680
	0x0395826C ADRP X9, 0x7F7000
	0x03958270 LDR W8, [X0 + 0x18]
	0x03958274 LDR X9, [X9 + 0x1D0]
	0x03958278 SUB W1, W8, 0x1
	0x0395827C LDR X2, [X9]
	0x03958280 BL 0x301BCCC
	0x03958284 MOV X1, X0
	0x03958288 ADRP X9, 0x7F7000
	0x0395828C LDR W10, [X28 + 0x1C]
	0x03958290 LDR X8, [X28 + 0x10]
	0x03958294 LDR X9, [X9 + 0x1C0]
	0x03958298 ADD W10, W10, 0x1
	0x0395829C LDR X9, [X9]
	0x039582A0 STR W10, [X28 + 0x1C]
	0x039582A4 CBZ X8, 0x3958698
	0x039582A8 LDRSW X10, [X28 + 0x18]
	0x039582AC LDR W11, [X8 + 0x18]
	0x039582B0 CMP W10, W11
	0x039582B4 B.CS 0x39582CC
	0x039582B8 ADD W9, W10, 0x1
	0x039582BC ADD X8, X8, X10, 0x3, LSL
	0x039582C0 STR W9, [X28 + 0x18]
	0x039582C4 STR X1, [X8 + 0x20]
	0x039582C8 B 0x39582E0
	0x039582CC LDR X8, [X9 + 0x20]
	0x039582D0 LDR X8, [X8 + 0xC0]
	0x039582D4 LDR X2, [X8 + 0x70]
	0x039582D8 MOV X0, X28
	0x039582DC BL 0x301BF90
	0x039582E0 CBZ X29, 0x395867C
	0x039582E4 ADRP X9, 0x79C000
	0x039582E8 LDR W10, [X29 + 0x1C]
	0x039582EC LDR X8, [X29 + 0x10]
	0x039582F0 LDR X9, [X9 + 0xE10]
	0x039582F4 ADD W10, W10, 0x1
	0x039582F8 LDR X9, [X9]
	0x039582FC STR W10, [X29 + 0x1C]
	0x03958300 CBZ X8, 0x3958678
	0x03958304 LDRSW X10, [X29 + 0x18]
	0x03958308 LDR W11, [X8 + 0x18]
	0x0395830C CMP W10, W11
	0x03958310 B.CS 0x3958330
	0x03958314 ADD W9, W10, 0x1
	0x03958318 STR W9, [X29 + 0x18]
	0x0395831C LDR W9, [X31 + 0x44]
	0x03958320 ADD X8, X8, X10, 0x2, LSL
	0x03958324 MOV W25, W31
	0x03958328 STR W9, [X8 + 0x20]
	0x0395832C B 0x395834C
	0x03958330 LDR X8, [X9 + 0x20]
	0x03958334 LDR X8, [X8 + 0xC0]
	0x03958338 LDR X2, [X8 + 0x70]
	0x0395833C LDR W1, [X31 + 0x44]
	0x03958340 MOV X0, X29
	0x03958344 BL 0x2FDC70C
	0x03958348 MOV W25, W31
	0x0395834C LDR W8, [X27 + 0x18]
	0x03958350 ADD W19, W19, 0x1
	0x03958354 CMP W19, W8
	0x03958358 B.LT 0x39580C4
	0x0395835C LDR X8, [X31 + 0xE8]
	0x03958360 CBZ X8, 0x39586F4
	0x03958364 STP X28, X29, [X8 + 0x18]
	0x03958368 LDP X29, X28, [X31 + 0x30]
	0x0395836C B 0x3957BA8
	0x03958370 ADRP X8, 0x7F7000
	0x03958374 LDR X8, [X8 + 0x400]
	0x03958378 ADD X0, X31, 0xF0
	0x0395837C LDR X1, [X8]
	0x03958380 BL 0x2BB2394
	0x03958384 ADRP X20, 0x7F6000
	0x03958388 ADRP X22, 0x7F7000
	0x0395838C LDR X20, [X20 + 0xC48]
	0x03958390 LDR X22, [X22 + 0x478]
	0x03958394 CBZ X29, 0x395863C
	0x03958398 ADRP X8, 0x7F7000
	0x0395839C LDR X8, [X8 + 0x3C0]
	0x039583A0 MOV X0, X29
	0x039583A4 LDR X1, [X8]
	0x039583A8 BL 0x2AA4E98
	0x039583AC ADRP X8, 0x7F7000
	0x039583B0 LDR X8, [X8 + 0x3F8]
	0x039583B4 LDR X1, [X8]
	0x039583B8 BL 0x21D79F4
	0x039583BC ADRP X8, 0x7F7000
	0x039583C0 LDR X8, [X8 + 0x3C8]
	0x039583C4 MOV X19, X0
	0x039583C8 MOV X0, X29
	0x039583CC LDR X1, [X8]
	0x039583D0 BL 0x2AA4F58
	0x039583D4 ADRP X8, 0x7F7000
	0x039583D8 LDR X8, [X8 + 0x3F0]
	0x039583DC LDR X1, [X8]
	0x039583E0 BL 0x21D79F4
	0x039583E4 CBZ X19, 0x395863C
	0x039583E8 LDR W8, [X19 + 0x18]
	0x039583EC CMP W8, 0x1
	0x039583F0 B.LT 0x395859C
	0x039583F4 MOV X25, X0
	0x039583F8 MOV W26, W31
	0x039583FC LDR X2, [X20]
	0x03958400 MOV X0, X19
	0x03958404 MOV W1, W26
	0x03958408 BL 0x301BCCC
	0x0395840C CBZ X25, 0x395863C
	0x03958410 LDR X2, [X22]
	0x03958414 MOV X24, X0
	0x03958418 MOV X0, X25
	0x0395841C MOV W1, W26
	0x03958420 BL 0x301BCCC
	0x03958424 CBZ X0, 0x395863C
	0x03958428 LDR X8, [X31 + 0x48]
	0x0395842C MOV X23, X0
	0x03958430 LDR X0, [X0 + 0x18]
	0x03958434 ADD X1, X31, 0xD8
	0x03958438 LDR W27, [X8 + 0x18]
	0x0395843C MOV W2, W31
	0x03958440 MOV W3, W31
	0x03958444 MOV X4, X31
	0x03958448 BL 0x397BFB8
	0x0395844C TBZ X0, 0x0, 0x395858C
	0x03958450 ADRP X8, 0x7F6000
	0x03958454 LDR X29, [X31 + 0xD8]
	0x03958458 LDR X8, [X8 + 0x560]
	0x0395845C LDR X0, [X8]
	0x03958460 BL 0x1C16F10
	0x03958464 MOV X1, X29
	0x03958468 MOV X2, X31
	0x0395846C MOV X28, X0
	0x03958470 BL 0x3900368
	0x03958474 STR X28, [X23 + 0x10]
	0x03958478 CBZ X24, 0x395863C
	0x0395847C ADRP X29, 0x7C5000
	0x03958480 LDR X29, [X29 + 0xF38]
	0x03958484 CBZ X28, 0x395863C
	0x03958488 LDR W8, [X24 + 0x48]
	0x0395848C MOV X0, X28
	0x03958490 MOV W1, W27
	0x03958494 MOV X2, X31
	0x03958498 STR W8, [X28 + 0x48]
	0x0395849C BL 0x3900D2C
	0x039584A0 LDR X1, [X23 + 0x10]
	0x039584A4 MOV X0, X24
	0x039584A8 MOV X2, X31
	0x039584AC BL 0x39005C4
	0x039584B0 LDR X1, [X23 + 0x18]
	0x039584B4 LDR X28, [X31 + 0x38]
	0x039584B8 CBZ X1, 0x395863C
	0x039584BC MOV W24, W31
	0x039584C0 LDR W8, [X1 + 0x18]
	0x039584C4 CMP W24, W8
	0x039584C8 B.GE 0x395850C
	0x039584CC LDR X0, [X23 + 0x20]
	0x039584D0 CBZ X0, 0x395863C
	0x039584D4 LDR X2, [X29]
	0x039584D8 MOV W1, W24
	0x039584DC BL 0x2FDC41C
	0x039584E0 ADRP X8, 0x7A5000
	0x039584E4 LDR X8, [X8 + 0x858]
	0x039584E8 MOV W2, W0
	0x039584EC ADD W1, W27, W24
	0x039584F0 MOV X0, X21
	0x039584F4 LDR X3, [X8]
	0x039584F8 BL 0x2A0A344
	0x039584FC LDR X1, [X23 + 0x18]
	0x03958500 ADD W24, W24, 0x1
	0x03958504 CBNZ X1, 0x39584C0
	0x03958508 B 0x395863C
	0x0395850C LDR X9, [X23 + 0x28]
	0x03958510 CBZ X9, 0x395863C
	0x03958514 LDR W9, [X9 + 0x18]
	0x03958518 CMP W9, W8

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+224], D10
	003 Move [X31+240], D9
	004 Move [X31+248], D8
	005 Move [X31+256], X29
	006 Move [X31+264], X30
	007 Move [X31+272], X28
	008 Move [X31+280], X27
	009 Move [X31+288], X26
	010 Move [X31+296], X25
	011 Move [X31+304], X24
	012 Move [X31+312], X23
	013 Move [X31+320], X22
	014 Move [X31+328], X21
	015 Move [X31+336], X20
	016 Move [X31+344], X19
	017 Move [X31+64], X1
	018 Move X20, 0xA8B000
	019 Move X19, 0x79D000
	020 Move W8, [X20+2459]
	021 Move X19, [X19+1432]
	022 Move V8, V2
	023 Move V9, V1
	024 Move V10, V0
	025 Move X23, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {140}
	030 Move X0, 0x7C7000
	031 Move X0, [X0+2256]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A7000
	034 Move X0, [X0+2160]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A7000
	037 Move X0, [X0+2192]
	038 Call 0x1C17CF4
	039 Move X0, 0x7F7000
	040 Move X0, [X0+3200]
	041 Call 0x1C17CF4
	042 Move X0, 0x7A7000
	043 Move X0, [X0+2184]
	044 Call 0x1C17CF4
	045 Move X0, 0x7F9000
	046 Move X0, [X0+1256]
	047 Call 0x1C17CF4
	048 Move X0, 0x7F8000
	049 Move X0, [X0+992]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F9000
	052 Move X0, [X0+880]
	053 Call 0x1C17CF4
	054 Move X0, 0x7F9000
	055 Move X0, [X0+1264]
	056 Call 0x1C17CF4
	057 Move X0, 0x7F9000
	058 Move X0, [X0+1272]
	059 Call 0x1C17CF4
	060 Move X0, 0x7F9000
	061 Move X0, [X0+1280]
	062 Call 0x1C17CF4
	063 Move X0, 0x7F9000
	064 Move X0, [X0+496]
	065 Call 0x1C17CF4
	066 Move X0, 0x7F8000
	067 Move X0, [X0+1376]
	068 Call 0x1C17CF4
	069 Move X0, 0x7F9000
	070 Move X0, [X0+1288]
	071 Call 0x1C17CF4
	072 Move X0, 0x79E000
	073 Move X0, [X0+3600]
	074 Call 0x1C17CF4
	075 Move X0, 0x7F9000
	076 Move X0, [X0+776]
	077 Call 0x1C17CF4
	078 Move X0, 0x7F9000
	079 Move X0, [X0+448]
	080 Call 0x1C17CF4
	081 Move X0, 0x7F9000
	082 Move X0, [X0+1296]
	083 Call 0x1C17CF4
	084 Move X0, 0x79E000
	085 Move X0, [X0+3608]
	086 Call 0x1C17CF4
	087 Move X0, 0x7A1000
	088 Move X0, [X0+2928]
	089 Call 0x1C17CF4
	090 Move X0, 0x7F7000
	091 Move X0, [X0+3544]
	092 Call 0x1C17CF4
	093 Move X0, 0x7F9000
	094 Move X0, [X0+456]
	095 Call 0x1C17CF4
	096 Move X0, 0x7F9000
	097 Move X0, [X0+784]
	098 Call 0x1C17CF4
	099 Move X0, 0x7F7000
	100 Move X0, [X0+3608]
	101 Call 0x1C17CF4
	102 Move X0, 0x7F8000
	103 Move X0, [X0+4064]
	104 Call 0x1C17CF4
	105 Move X0, 0x7F9000
	106 Move X0, [X0+464]
	107 Call 0x1C17CF4
	108 Move X0, 0x7F8000
	109 Move X0, [X0+4072]
	110 Call 0x1C17CF4
	111 Move X0, 0x79E000
	112 Move X0, [X0+3632]
	113 Call 0x1C17CF4
	114 Move X0, 0x7F7000
	115 Move X0, [X0+3560]
	116 Call 0x1C17CF4
	117 Move X0, 0x7F9000
	118 Move X0, [X0+792]
	119 Call 0x1C17CF4
	120 Move X0, 0x7F7000
	121 Move X0, [X0+3568]
	122 Call 0x1C17CF4
	123 Move X0, 0x79D000
	124 Move X0, [X0+1432]
	125 Call 0x1C17CF4
	126 Move X0, 0x7F9000
	127 Move X0, [X0+1304]
	128 Call 0x1C17CF4
	129 Move X0, 0x7F9000
	130 Move X0, [X0+584]
	131 Call 0x1C17CF4
	132 Move X0, 0x7F8000
	133 Move X0, [X0+32]
	134 Call 0x1C17CF4
	135 Move X0, 0x7F8000
	136 Move X0, [X0+2824]
	137 Call 0x1C17CF4
	138 Move W8, 1
	139 Move [X20+2459], W8
	140 Move X0, [X19]
	141 Move [X31+232], X31
	142 Move [X31+220], W31
	143 Move [X31+192], X31
	144 Move [X31+200], X31
	145 Move [X31+208], X31
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X23
	151 Move X1, X31
	152 Move X2, X31
	153 Call Object.op_Equality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {884}
	158 Move X8, [X31+64]
	159 Compare X8, 0
	160 JumpIfEqual {891}
	161 Compare X23, 0
	162 JumpIfEqual {881}
	163 Move X20, 0x7F9000
	164 Move X21, 0x7F7000
	165 Move X22, 0x7F7000
	166 Move X19, 0x7F8000
	167 Move X20, [X20+880]
	168 Move X21, [X21+3568]
	169 Move X22, [X22+3544]
	170 Move X19, [X19+2824]
	171 Move X0, X23
	172 Move X1, X31
	173 Move X2, X31
	174 Call ProBuilderMesh.GetVertices, X0, X1
	175 Move X1, [X20]
	176 Call Enumerable.ToList, X0
	177 Move X8, [X21]
	178 Move X20, [X23+40]
	179 Move [X31+80], X0
	180 Move X0, X8
	181 Call 0x1C17F10
	182 Move X2, [X22]
	183 Move X1, X20
	184 Move X21, X0
	185 Call List`1<Object>..ctor, X0, X1
	186 Move X0, X23
	187 Move X1, X31
	188 Call ProBuilderMesh.get_sharedVertexLookup, X0
	189 Move X8, [X23+72]
	190 Move [X31+56], X0
	191 Move [X31+16], X21
	192 Compare X8, 0
	193 JumpIfEqual {208}
	194 Move X8, 0x7A7000
	195 Move X8, [X8+2184]
	196 Move X20, 0x7A7000
	197 Move X0, [X8]
	198 Move X20, [X20+2192]
	199 Call 0x1C17F10
	200 Move X1, [X20]
	201 Move X20, X0
	202 Call Dictionary`2<Int32, Int32>..ctor, X0
	203 Move X0, [X23+72]
	204 Move X1, X20
	205 Move X2, X31
	206 Move [X31+72], X20
	207 Call SharedVertex.GetSharedVertexLookup, X0, X1
	208 Move [X31+72], X31
	209 Move X0, [X19]
	210 Move X21, 0x7F9000
	211 Move X20, 0x7F9000
	212 Move X19, 0x7F8000
	213 Move W8, [X0+224]
	214 Move X21, [X21+792]
	215 Move X20, [X20+784]
	216 Move X19, [X19+32]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, [X31+64]
	221 Move X1, X31
	222 Move [X31+24], X23
	223 Call WingedEdge.SortEdgesByAdjacency, X0
	224 Move X8, [X21]
	225 Move X21, X0
	226 Move X0, X8
	227 Call 0x1C17F10
	228 Move X1, [X20]
	229 Move [X31+48], X0
	230 Call List`1<Object>..ctor, X0
	231 Move X0, [X19]
	232 Call 0x1C17F10
	233 Move X1, X31
	234 Move X19, X0
	235 Call Vertex..ctor, X0
	236 Compare X19, 0
	237 JumpIfEqual {881}
	238 Move X0, X19
	239 Move V0, V10
	240 Move V1, V9
	241 Move V2, V8
	242 Move X1, X31
	243 Move [X31+40], X19
	244 Call Vertex.set_position, X0, X1
	245 Compare X21, 0
	246 JumpIfEqual {881}
	247 Move W8, [X21+24]
	248 Move [X31+88], X21
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X31+64]
	251 Move W28, W31
	252 Add X8, X8, 28
	253 Move [X31+32], X8
	254 Move X8, 0x7F7000
	255 Move X8, [X8+3560]
	256 Move X0, [X8]
	257 Call 0x1C17F10
	258 Move X8, 0x7F9000
	259 Move X8, [X8+456]
	260 Move X29, X0
	261 Move X1, [X8]
	262 Call List`1<Object>..ctor, X0
	263 Move X19, 0x79E000
	264 Move X19, [X19+3632]
	265 Move X0, [X19]
	266 Call 0x1C17F10
	267 Move X20, 0x7A1000
	268 Move X20, [X20+2928]
	269 Move X22, X0
	270 Move X1, [X20]
	271 Call List`1<Int32>..ctor, X0
	272 Move X8, [X31+72]
	273 Compare X8, 0
	274 JumpIfEqual {280}
	275 Move X0, [X19]
	276 Call 0x1C17F10
	277 Move X1, [X20]
	278 Move X27, X0
	279 Call List`1<Int32>..ctor, X0
	280 Move X27, X31
	281 Move X8, 0x7F8000
	282 Move X8, [X8+4072]
	283 Move X0, [X31+88]
	284 Move W1, W28
	285 Move X2, [X8]
	286 Call List`1<Edge>.get_Item, X0, X1
	287 Move X1, X0
	288 Move X0, [X31+80]
	289 Compare X0, 0
	290 JumpIfEqual {881}
	291 Move X8, 0x7F9000
	292 Move X8, [X8+464]
	293 Move X2, [X8]
	294 Call List`1<Object>.get_Item, X0, X1
	295 Compare X29, 0
	296 JumpIfEqual {881}
	297 Move X9, 0x7F9000
	298 Move W10, [X29+28]
	299 Move X8, [X29+16]
	300 Move X9, [X9+448]
	301 Add W10, W10, 1
	302 Move X9, [X9]
	303 Move [X29+28], W10
	304 Compare X8, 0
	305 JumpIfEqual {881}
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Move W11, [X8+24]
	308 Move X1, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Add W9, W10, 1
	311 Add X8, X8, X10
	312 Move [X29+24], W9
	313 Move [X8+32], X1
	314 Move X8, [X9+32]
	315 Move X0, X29
	316 Move X8, [X8+192]
	317 Move X2, [X8+112]
	318 Call List`1<Object>.AddWithResize, X0, X1
	319 Move X8, 0x7F8000
	320 Move X8, [X8+4072]
	321 Move X0, [X31+88]
	322 Move W1, W28
	323 Move X2, [X8]
	324 Call List`1<Edge>.get_Item, X0, X1
	325 Move X8, 0x7F9000
	326 Move X8, [X8+464]
	327 Move X1, X0
	328 ShiftRight X1, 32
	329 And X1, X1, 0x7FFFFFFF
	330 Move X0, [X31+80]
	331 Move X2, [X8]
	332 Call List`1<Object>.get_Item, X0, X1
	333 Move X9, 0x7F9000
	334 Move W8, [X29+28]
	335 Move X10, [X29+16]
	336 Move X9, [X9+448]
	337 Add W8, W8, 1
	338 Move X9, [X9]
	339 Move [X29+28], W8
	340 Compare X10, 0
	341 JumpIfEqual {881}
	342 NotImplemented "Instruction LDRSW not yet implemented."
	343 Move W12, [X10+24]
	344 Move X1, X0
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add W9, W11, 1
	347 Add X10, X10, X11
	348 Move [X29+24], W9
	349 Move [X10+32], X1
	350 Move X8, [X9+32]
	351 Move X0, X29
	352 Move X8, [X8+192]
	353 Move X2, [X8+112]
	354 Call List`1<Object>.AddWithResize, X0, X1
	355 Move W9, [X29+24]
	356 Move W8, [X29+28]
	357 Move X11, 0x7F9000
	358 Move X10, [X29+16]
	359 Move X11, [X11+448]
	360 Add W8, W8, 1
	361 Move X11, [X11]
	362 Move [X29+28], W8
	363 Compare X10, 0
	364 JumpIfEqual {881}
	365 Move W8, [X10+24]
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Add W8, W9, 1
	368 Move [X29+24], W8
	369 Move X8, [X31+40]
	370 Add X9, X10, W9
	371 Move [X9+32], X8
	372 Move X8, [X11+32]
	373 Move X1, [X31+40]
	374 Move X0, X29
	375 Move X8, [X8+192]
	376 Move X2, [X8+112]
	377 Call List`1<Object>.AddWithResize, X0, X1
	378 Move X8, 0x7F8000
	379 Move X8, [X8+4072]
	380 Move X0, [X31+88]
	381 Move W1, W28
	382 Move X2, [X8]
	383 Call List`1<Edge>.get_Item, X0, X1
	384 Move X1, X0
	385 Move X0, [X31+56]
	386 Compare X0, 0
	387 JumpIfEqual {881}
	388 Move X8, 0x7F7000
	389 Move X8, [X8+3200]
	390 Move X2, [X8]
	391 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	392 Compare X22, 0
	393 JumpIfEqual {881}
	394 Move X9, 0x79E000
	395 Move W10, [X22+28]
	396 Move X8, [X22+16]
	397 Move X9, [X9+3600]
	398 Add W10, W10, 1
	399 Move X9, [X9]
	400 Move [X22+28], W10
	401 Compare X8, 0
	402 JumpIfEqual {881}
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Move W11, [X8+24]
	405 Move W1, W0
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Add W9, W10, 1
	408 Add X8, X8, X10
	409 Move [X22+24], W9
	410 Move [X8+32], W1
	411 Move X8, [X9+32]
	412 Move X0, X22
	413 Move X8, [X8+192]
	414 Move X2, [X8+112]
	415 Call List`1<Int32>.AddWithResize, X0, X1
	416 Move X8, 0x7F8000
	417 Move X8, [X8+4072]
	418 Move X0, [X31+88]
	419 Move W1, W28
	420 Move X2, [X8]
	421 Call List`1<Edge>.get_Item, X0, X1
	422 Move X8, 0x7F7000
	423 Move X8, [X8+3200]
	424 Move X1, X0
	425 ShiftRight X1, 32
	426 And X1, X1, 0x7FFFFFFF
	427 Move X0, [X31+56]
	428 Move X2, [X8]
	429 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	430 Move X9, 0x79E000
	431 Move W10, [X22+28]
	432 Move X8, [X22+16]
	433 Move X9, [X9+3600]
	434 Add W10, W10, 1
	435 Move X9, [X9]
	436 Move [X22+28], W10
	437 Compare X8, 0
	438 JumpIfEqual {881}
	439 NotImplemented "Instruction LDRSW not yet implemented."
	440 Move W11, [X8+24]
	441 Move W1, W0
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Add W11, W10, 1
	444 Add X10, X8, X10
	445 Move [X22+24], W11
	446 Move X11, [X31+80]
	447 Move [X10+32], W1
	448 Move W10, [X22+28]
	449 Move W1, [X11+24]
	450 Add W10, W10, 1
	451 Move [X22+28], W10
	452 Move X8, [X9+32]
	453 Move X0, X22
	454 Move X8, [X8+192]
	455 Move X2, [X8+112]
	456 Call List`1<Int32>.AddWithResize, X0, X1
	457 Move X8, 0x79E000
	458 Move X8, [X8+3600]
	459 Move X11, [X31+80]
	460 Move W10, [X22+28]
	461 Move X9, [X8]
	462 Move X8, [X22+16]
	463 Move W1, [X11+24]
	464 Add W10, W10, 1
	465 Move [X22+28], W10
	466 Compare X8, 0
	467 JumpIfEqual {881}
	468 NotImplemented "Instruction LDRSW not yet implemented."
	469 Move W11, [X8+24]
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Add W9, W10, 1
	472 Add X8, X8, X10
	473 Move [X22+24], W9
	474 Move [X8+32], W1
	475 Move X8, [X9+32]
	476 Move X0, X22
	477 Move X8, [X8+192]
	478 Move X2, [X8+112]
	479 Call List`1<Int32>.AddWithResize, X0, X1
	480 Move X8, [X31+72]
	481 Compare X8, 0
	482 JumpIfEqual {642}
	483 Move X8, 0x7C7000
	484 Move X8, [X8+2256]
	485 Move X19, [X31+72]
	486 Move X1, [X8]
	487 Move X0, X19
	488 Call Dictionary`2<Int32, Int32>.Clear, X0
	489 Move X8, 0x7F8000
	490 Move X8, [X8+4072]
	491 Move X0, [X31+88]
	492 Move W1, W28
	493 Move X2, [X8]
	494 Call List`1<Edge>.get_Item, X0, X1
	495 Move X8, 0x7A7000
	496 Move X8, [X8+2160]
	497 Move X1, X0
	498 Add X2, X31, 220
	499 Move X0, X19
	500 Move X3, [X8]
	501 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {525}
	506 Compare X27, 0
	507 JumpIfEqual {881}
	508 Move X9, 0x79E000
	509 Move W1, [X31+220]
	510 Move W10, [X27+28]
	511 Move X8, [X27+16]
	512 Move X9, [X9+3600]
	513 Add W10, W10, 1
	514 Move X9, [X9]
	515 Move [X27+28], W10
	516 Compare X8, 0
	517 JumpIfEqual {881}
	518 NotImplemented "Instruction LDRSW not yet implemented."
	519 Move W11, [X8+24]
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Add W9, W10, 1
	522 Add X8, X8, X10
	523 Move [X27+24], W9
	524 Move [X8+32], W1
	525 Compare X27, 0
	526 JumpIfEqual {881}
	527 Move X9, 0x79E000
	528 Move W10, [X27+28]
	529 Move X8, [X27+16]
	530 Move X9, [X9+3600]
	531 Add W10, W10, 1
	532 Move X9, [X9]
	533 Move [X27+28], W10
	534 Compare X8, 0
	535 JumpIfEqual {881}
	536 NotImplemented "Instruction LDRSW not yet implemented."
	537 Move W11, [X8+24]
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Add W9, W10, 1
	540 Add X8, X8, X10
	541 Move [X27+24], W9
	542 Move TEMP, 0
	543 Not TEMP
	544 Move W9, TEMP
	545 Move [X8+32], W9
	546 Move X8, [X9+32]
	547 Move X8, [X9+32]
	548 Move TEMP, 0
	549 Not TEMP
	550 Move W1, TEMP
	551 Move X8, [X8+192]
	552 Move X2, [X8+112]
	553 Move X0, X27
	554 Call List`1<Int32>.AddWithResize, X0, X1
	555 Move X8, 0x7F8000
	556 Move X8, [X8+4072]
	557 Move X0, [X31+88]
	558 Move W1, W28
	559 Move X2, [X8]
	560 Call List`1<Edge>.get_Item, X0, X1
	561 Move X8, 0x7A7000
	562 Move X8, [X8+2160]
	563 Move X1, X0
	564 ShiftRight X1, 32
	565 And X1, X1, 0x7FFFFFFF
	566 Move X0, [X31+72]
	567 Add X2, X31, 220
	568 Move X3, [X8]
	569 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	570 Move TEMP, X0
	571 And TEMP, TEMP, 1
	572 Compare TEMP, 1
	573 JumpIfNotEqual {591}
	574 Move X9, 0x79E000
	575 Move W1, [X31+220]
	576 Move W10, [X27+28]
	577 Move X8, [X27+16]
	578 Move X9, [X9+3600]
	579 Add W10, W10, 1
	580 Move X9, [X9]
	581 Move [X27+28], W10
	582 Compare X8, 0
	583 JumpIfEqual {881}
	584 NotImplemented "Instruction LDRSW not yet implemented."
	585 Move W11, [X8+24]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add W9, W10, 1
	588 Add X8, X8, X10
	589 Move [X27+24], W9
	590 Move [X8+32], W1
	591 Move X9, 0x79E000
	592 Move W10, [X27+28]
	593 Move X8, [X27+16]
	594 Move X9, [X9+3600]
	595 Add W10, W10, 1
	596 Move X9, [X9]
	597 Move [X27+28], W10
	598 Compare X8, 0
	599 JumpIfEqual {881}
	600 NotImplemented "Instruction LDRSW not yet implemented."
	601 Move W11, [X8+24]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Add W9, W10, 1
	604 Add X8, X8, X10
	605 Move [X27+24], W9
	606 Move TEMP, 0
	607 Not TEMP
	608 Move W9, TEMP
	609 Move [X8+32], W9
	610 Move X8, [X9+32]
	611 Move X8, [X9+32]
	612 Move TEMP, 0
	613 Not TEMP
	614 Move W1, TEMP
	615 Move X8, [X8+192]
	616 Move X2, [X8+112]
	617 Move X0, X27
	618 Call List`1<Int32>.AddWithResize, X0, X1
	619 Move X8, [X31+80]
	620 Move X9, 0x79E000
	621 Move W10, [X27+28]
	622 Move W1, [X8+24]
	623 Move X8, [X27+16]
	624 Move X9, [X9+3600]
	625 Add W10, W10, 1
	626 Move X9, [X9]
	627 Move [X27+28], W10
	628 Compare X8, 0
	629 JumpIfEqual {881}
	630 NotImplemented "Instruction LDRSW not yet implemented."
	631 Move W11, [X8+24]
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Add W9, W10, 1
	634 Add X8, X8, X10
	635 Move [X27+24], W9
	636 Move [X8+32], W1
	637 Move X8, [X9+32]
	638 Move X0, X27
	639 Move X8, [X8+192]
	640 Move X2, [X8+112]
	641 Call List`1<Int32>.AddWithResize, X0, X1
	642 Add X1, X31, 232
	643 Move W2, 1
	644 Move X0, X29
	645 Move W3, W31
	646 Move X4, X31
	647 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	648 Move X8, 0x7F8000
	649 Move X8, [X8+496]
	650 Move X0, [X8]
	651 Call 0x1C17F10
	652 Move X1, X31
	653 Move X20, X0
	654 Call FaceRebuildData..ctor, X0
	655 Move X0, [X31+232]
	656 Compare X0, 0
	657 JumpIfEqual {881}
	658 Move X8, 0x79D000
	659 Move X8, [X8+3608]
	660 Move X1, [X8]
	661 Call List`1<Int32>.ToArray, X0
	662 Move X8, [X31+32]
	663 Move X24, [X31+64]
	664 Move X19, X0
	665 Add X0, X31, 160
	666 Move V0, [X8]
	667 Move V1, [X8+16]
	668 Move W25, [X24+72]
	669 Add X1, X31, 128
	670 Move X2, X31
	671 Move [X31+128], V0
	672 Move [X31+136], V1
	673 NotImplemented "Instruction MOVI not yet implemented."
	674 Move [X31+160], V0
	675 Move [X31+168], V0
	676 Call AutoUnwrapSettings..ctor, X0, X1
	677 Move X8, 0x7F7000
	678 Move W23, [X24+24]
	679 Move W21, [X24+84]
	680 Move W26, [X24+76]
	681 Move X8, [X8+1376]
	682 Move X0, [X8]
	683 Call 0x1C17F10
	684 Move V0, [X31+160]
	685 Move V1, [X31+176]
	686 Add X3, X31, 96
	687 Move TEMP, 0
	688 Not TEMP
	689 Move W6, TEMP
	690 Move X1, X19
	691 Move W2, W25
	692 Move W4, W23
	693 Move W5, W21
	694 Move W7, W26
	695 Move X24, X0
	696 Move [X31+96], V0
	697 Move [X31+104], V1
	698 Move [X31], X31
	699 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	700 Compare X20, 0
	701 JumpIfEqual {881}
	702 Move X0, [X31+48]
	703 Move [X20+16], X24
	704 Move [X20+24], X29
	705 Move [X20+32], X22
	706 Move [X20+40], X27
	707 Compare X0, 0
	708 JumpIfEqual {881}
	709 Move X9, 0x7F8000
	710 Move W10, [X0+28]
	711 Move X8, [X0+16]
	712 Move X9, [X9+776]
	713 Add W10, W10, 1
	714 Move X9, [X9]
	715 Move [X0+28], W10
	716 Compare X8, 0
	717 JumpIfEqual {881}
	718 NotImplemented "Instruction LDRSW not yet implemented."
	719 Move W11, [X8+24]
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Add W9, W10, 1
	722 Add X8, X8, X10
	723 Move [X0+24], W9
	724 Move [X8+32], X20
	725 Move X8, [X9+32]
	726 Move X1, X20
	727 Move X8, [X8+192]
	728 Move X2, [X8+112]
	729 Call List`1<Object>.AddWithResize, X0, X1
	730 Move X8, [X31+88]
	731 Add W28, W28, 1
	732 Move W8, [X8+24]
	733 NotImplemented "Instruction CMP not yet implemented."
	734 Move X21, 0x7F8000
	735 Move X21, [X21+584]
	736 Move X0, [X31+48]
	737 Move X22, [X31+56]
	738 Move X23, [X31+72]
	739 Move X20, [X31+80]
	740 Move X19, [X31+16]
	741 Move X5, X31
	742 Move X3, X22
	743 Move X1, X20
	744 Move X2, X19
	745 Move X4, X23
	746 Call FaceRebuildData.Apply, X0, X1, X2, X3, X4
	747 Move X24, [X31+24]
	748 Move X1, X20
	749 Move W2, W31
	750 Move X3, X31
	751 Move X0, X24
	752 Call ProBuilderMesh.SetVertices, X0, X1, X2
	753 Move X0, X24
	754 Move X1, X19
	755 Move X2, X31
	756 Call ProBuilderMesh.set_faces, X0, X1
	757 Move X0, X24
	758 Move X1, X22
	759 Move X2, X31
	760 Call ProBuilderMesh.SetSharedVertices, X0, X1
	761 Move X0, X24
	762 Move X1, X23
	763 Move X2, X31
	764 Call ProBuilderMesh.SetSharedTextures, X0, X1
	765 Move X0, [X21]
	766 Move W8, [X0+224]
	767 Compare W8, 0
	768 JumpIfNotEqual {771}
	769 Call 0x1C17DFC
	770 Move X0, [X21]
	771 Move X8, [X0+184]
	772 Move X23, 0x7F8000
	773 Move X22, 0x7F7000
	774 Move X20, [X8+32]
	775 Move X23, [X23+1256]
	776 Move X22, [X22+992]
	777 Compare X20, 0
	778 JumpIfNotEqual {800}
	779 Move W8, [X0+224]
	780 Compare W8, 0
	781 JumpIfNotEqual {784}
	782 Call 0x1C17DFC
	783 Move X0, [X21]
	784 Move X9, 0x7F8000
	785 Move X8, [X0+184]
	786 Move X9, [X9+1288]
	787 Move X19, [X8]
	788 Move X0, [X9]
	789 Call 0x1C17F10
	790 Move X8, 0x7F8000
	791 Move X8, [X8+1304]
	792 Move X1, X19
	793 Move X3, X31
	794 Move X20, X0
	795 Move X2, [X8]
	796 Call Func`2<Object, Object>..ctor, X0, X1, X2
	797 Move X8, [X21]
	798 Move X8, [X8+184]
	799 Move [X8+32], X20
	800 Move X2, [X23]
	801 Move X23, [X31+48]
	802 Move X1, X20
	803 Move X0, X23
	804 Call Enumerable.Select, X0, X1
	805 Move X1, [X22]
	806 Call Enumerable.ToArray, X0
	807 Compare X23, 0
	808 JumpIfEqual {881}
	809 Move X8, 0x7F8000
	810 Move X8, [X8+1296]
	811 Move X21, 0x7F8000
	812 Move X19, 0x7F8000
	813 Move X22, X0
	814 Move X1, [X8]
	815 Move X21, [X21+1272]
	816 Move X19, [X19+1264]
	817 Add X8, X31, 160
	818 Move X0, X23
	819 Call List`1<Object>.GetEnumerator, X0
	820 Move V0, [X31+10]
	821 Move X8, [X31+176]
	822 Move [X31+12], V0
	823 Move [X31+208], X8
	824 Move X1, [X21]
	825 Add X0, X31, 192
	826 Call Enumerator<Object>.MoveNext, X0
	827 Move TEMP, X0
	828 And TEMP, TEMP, 1
	829 Compare TEMP, 1
	830 JumpIfNotEqual {857}
	831 Move X8, [X31+208]
	832 Compare X8, 0
	833 JumpIfEqual {882}
	834 Move X20, [X8+16]
	835 Move X1, [X31+64]
	836 Move X0, X24
	837 Move X2, X31
	838 Call Math.Normal, X0, X1
	839 Move V9, V0
	840 Move V10, V1
	841 Move V8, V2
	842 Move X0, X24
	843 Move X1, X20
	844 Move X2, X31
	845 Call Math.Normal, X0, X1
	846 Multiply S0, S9, S0
	847 Multiply S1, S10, S1
	848 Add S0, S0, S1
	849 Multiply S1, S8, S2
	850 Add S0, S1, S0
	851 NotImplemented "Instruction FCMP not yet implemented."
	852 Compare X20, 0
	853 JumpIfEqual {883}
	854 Move X0, X20
	855 Move X1, X31
	856 Call Face.Reverse, X0
	857 Move X1, [X19]
	858 Add X0, X31, 192
	859 Call Enumerator<Object>.Dispose, X0
	860 Move X1, [X31+64]
	861 Move X0, X24
	862 Call DeleteElements.DeleteFace, X0, X1
	863 Move X0, X22
	864 Move X20, [X31+336]
	865 Move X19, [X31+344]
	866 Move X22, [X31+320]
	867 Move X21, [X31+328]
	868 Move X24, [X31+304]
	869 Move X23, [X31+312]
	870 Move X26, [X31+288]
	871 Move X25, [X31+296]
	872 Move X28, [X31+272]
	873 Move X27, [X31+280]
	874 Move X29, [X31+256]
	875 Move X30, [X31+264]
	876 Move D9, [X31+240]
	877 Move D8, [X31+248]
	878 Move V10, [X31+224]
	879 Add X31, X31, 352
	880 Return X0
	881 Call 0x1C17F20
	882 Call 0x1C17F20
	883 Call 0x1C17F20
	884 Move X0, 0x7A1000
	885 Move X0, [X0+1320]
	886 Call 0x1C17D08
	887 Call 0x1C17F10
	888 Move X19, X0
	889 Move X0, 0x7F6000
	890 Move X0, [X0+3728]
	891 Move X0, 0x7A1000
	892 Move X0, [X0+1320]
	893 Call 0x1C17D08
	894 Call 0x1C17F10
	895 Move X19, X0
	896 Move X0, 0x7F7000
	897 Move X0, [X0+1536]
	898 Call 0x1C17D08
	899 Move X1, X0
	900 Move X0, X19
	901 Move X2, X31
	902 Call ArgumentNullException..ctor, X0, X1
	903 Move X0, 0x7F8000
	904 Move X0, [X0+1312]
	905 Call 0x1C17D08
	906 Move X1, X0
	907 Move X0, X19
	908 Call 0x1C17DEC
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Move X20, X0
	911 Move X0, X20
	912 Call 0x3EB2AD0
	913 Move X19, X0
	914 Move X0, 0x7A2000
	915 Move X0, [X0+3264]
	916 Call 0x1C17D08
	917 Move X8, [X19]
	918 Move X1, [X8]
	919 Call 0x1C18270
	920 Move TEMP, X0
	921 And TEMP, TEMP, 1
	922 Compare TEMP, 1
	923 JumpIfNotEqual {938}
	924 Call 0x3EB2AE0
	925 Move X0, 0x79C000
	926 Move X0, [X0+2600]
	927 Call 0x1C17D08
	928 Move W8, [X0+224]
	929 Compare W8, 0
	930 JumpIfNotEqual {932}
	931 Call 0x1C17DFC
	932 Move X0, 0x7F8000
	933 Move X0, [X0+912]
	934 Call 0x1C17D08
	935 Move X1, X31
	936 Call Debug.Log, X0
	937 Move X22, X31
	938 Move W0, 8
	939 Call 0x3EB2AF0
	940 Move X8, [X19]
	941 Move [X0], X8
	942 Move X1, 0x55D000
	943 Add X1, X1, 3672
	944 Move X2, X31
	945 Call 0x3EB2B00
	946 Move X20, X0
	947 Call 0x3EB2AE0
	948 Move X24, [X31+24]
	949 Move X20, X0
	950 NotImplemented "Instruction CMP not yet implemented."
	951 Move X0, X20
	952 Call 0x3EB2AD0
	953 Move X21, [X0]
	954 Call 0x3EB2AE0
	955 Move X1, [X19]
	956 Add X0, X31, 192
	957 Call Enumerator<Object>.Dispose, X0
	958 Compare X21, 0
	959 JumpIfEqual {860}
	960 Move X0, X21
	961 Call 0x1C17F18
	962 Move X21, X31
	963 Move X20, X0
	964 Move X1, [X19]
	965 Add X0, X31, 192
	966 Call Enumerator<Object>.Dispose, X0
	967 Compare X21, 0
	968 JumpIfNotEqual {971}
	969 Move X0, X20
	970 Call 0x1D2D690
	971 Move X0, X21
	972 Call 0x1C17F18
	973 Call 0x1991590

Method: UnityEngine.ProBuilder.Vertex InsertVertexOnEdge(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge originalEdge, UnityEngine.Vector3 point)

Disassembly:
	0x0395851C B.NE 0x3958578
	0x03958520 CMP W8, 0x1
	0x03958524 B.LT 0x3958578
	0x03958528 MOV W24, W31
	0x0395852C LDR X0, [X23 + 0x28]
	0x03958530 CBZ X0, 0x395863C
	0x03958534 LDR X2, [X29]
	0x03958538 MOV W1, W24
	0x0395853C BL 0x2FDC41C
	0x03958540 CBZ X28, 0x395863C
	0x03958544 ADRP X8, 0x7A5000
	0x03958548 LDR X8, [X8 + 0x858]
	0x0395854C MOV W2, W0
	0x03958550 ADD W1, W27, W24
	0x03958554 MOV X0, X28
	0x03958558 LDR X3, [X8]
	0x0395855C BL 0x2A0A344
	0x03958560 LDR X1, [X23 + 0x18]
	0x03958564 CBZ X1, 0x395863C
	0x03958568 LDR W8, [X1 + 0x18]
	0x0395856C ADD W24, W24, 0x1
	0x03958570 CMP W24, W8
	0x03958574 B.LT 0x395852C
	0x03958578 ADRP X8, 0x7F5000
	0x0395857C LDR X8, [X8 + 0xE08]
	0x03958580 LDR X0, [X31 + 0x48]
	0x03958584 LDR X2, [X8]
	0x03958588 BL 0x301C194
	0x0395858C LDR W8, [X19 + 0x18]
	0x03958590 ADD W26, W26, 0x1
	0x03958594 CMP W26, W8
	0x03958598 B.LT 0x39583FC
	0x0395859C ADRP X8, 0x7C6000
	0x039585A0 LDR X8, [X8 + 0xBB8]
	0x039585A4 LDR X0, [X31 + 0x20]
	0x039585A8 LDR X1, [X8]
	0x039585AC BL 0x21C0304
	0x039585B0 ADRP X8, 0x7F6000
	0x039585B4 LDR X8, [X8 + 0x2A8]
	0x039585B8 LDR X1, [X8]
	0x039585BC BL 0x21D7880
	0x039585C0 LDR X20, [X31 + 0x18]
	0x039585C4 LDR X1, [X31 + 0x48]
	0x039585C8 MOV X19, X0
	0x039585CC MOV W2, W31
	0x039585D0 MOV X0, X20
	0x039585D4 MOV X3, X31
	0x039585D8 BL 0x3916CF4
	0x039585DC MOV X0, X20
	0x039585E0 MOV X1, X21
	0x039585E4 MOV X2, X31
	0x039585E8 BL 0x3916234
	0x039585EC MOV X0, X20
	0x039585F0 MOV X1, X28
	0x039585F4 MOV X2, X31
	0x039585F8 BL 0x391634C
	0x039585FC MOV X0, X20
	0x03958600 MOV X1, X19
	0x03958604 BL 0x39561FC
	0x03958608 LDR X0, [X31 + 0x28]
	0x0395860C LDP X20, X19, [X31 + 0x1B0]
	0x03958610 LDP X22, X21, [X31 + 0x1A0]
	0x03958614 LDP X24, X23, [X31 + 0x190]
	0x03958618 LDP X26, X25, [X31 + 0x180]
	0x0395861C LDP X28, X27, [X31 + 0x170]
	0x03958620 LDP X29, X30, [X31 + 0x160]
	0x03958624 LDP D9, D8, [X31 + 0x150]
	0x03958628 LDP D11, D10, [X31 + 0x140]
	0x0395862C LDP D13, D12, [X31 + 0x130]
	0x03958630 LDP D15, D14, [X31 + 0x120]
	0x03958634 ADD X31, X31, 0x1C0
	0x03958638 RET
	0x0395863C BL 0x1C16F20
	0x03958640 BL 0x1C16F20
	0x03958644 BL 0x1C16F20
	0x03958648 ADRP X20, 0x7F6000
	0x0395864C ADRP X22, 0x7F7000
	0x03958650 LDR X20, [X20 + 0xC48]
	0x03958654 LDR X22, [X22 + 0x478]
	0x03958658 BL 0x1C16F20
	0x0395865C ADRP X20, 0x7F6000
	0x03958660 ADRP X22, 0x7F7000
	0x03958664 LDR X20, [X20 + 0xC48]
	0x03958668 LDR X22, [X22 + 0x478]
	0x0395866C BL 0x1C16F28
	0x03958670 BL 0x1C16F20
	0x03958674 BL 0x1C16F20
	0x03958678 BL 0x1C16F20
	0x0395867C BL 0x1C16F20
	0x03958680 ADRP X20, 0x7F6000
	0x03958684 ADRP X22, 0x7F7000
	0x03958688 LDP X29, X28, [X31 + 0x30]
	0x0395868C LDR X20, [X20 + 0xC48]
	0x03958690 LDR X22, [X22 + 0x478]
	0x03958694 BL 0x1C16F20
	0x03958698 ADRP X20, 0x7F6000
	0x0395869C ADRP X22, 0x7F7000
	0x039586A0 LDP X29, X28, [X31 + 0x30]
	0x039586A4 LDR X20, [X20 + 0xC48]
	0x039586A8 LDR X22, [X22 + 0x478]
	0x039586AC BL 0x1C16F20
	0x039586B0 BL 0x1C16F20
	0x039586B4 BL 0x1C16F20
	0x039586B8 BL 0x1C16F20
	0x039586BC BL 0x1C16F20
	0x039586C0 BL 0x1C16F20
	0x039586C4 BL 0x1C16F20
	0x039586C8 BL 0x1C16F20
	0x039586CC BL 0x1C16F20
	0x039586D0 BL 0x1C16F20
	0x039586D4 BL 0x1C16F20
	0x039586D8 BL 0x1C16F20
	0x039586DC BL 0x1C16F20
	0x039586E0 BL 0x1C16F20
	0x039586E4 BL 0x1C16F20
	0x039586E8 BL 0x1C16F20
	0x039586EC BL 0x1C16F20
	0x039586F0 BL 0x1C16F20
	0x039586F4 BL 0x1C16F20
	0x039586F8 BL 0x1C16F20
	0x039586FC BL 0x1C16F20
	0x03958700 BL 0x1C16F20
	0x03958704 BL 0x1C16F20
	0x03958708 BL 0x1C16F20
	0x0395870C BL 0x1C16F20
	0x03958710 BL 0x1C16F20
	0x03958714 BL 0x1C16F20
	0x03958718 ADRP X0, 0x7A0000
	0x0395871C LDR X0, [X0 + 0x528]
	0x03958720 BL 0x1C16D08
	0x03958724 BL 0x1C16F10
	0x03958728 MOV X19, X0
	0x0395872C ADRP X0, 0x7F5000
	0x03958730 LDR X0, [X0 + 0xE90]
	0x03958734 BL 0x1C16D08
	0x03958738 MOV X1, X0
	0x0395873C MOV X0, X19
	0x03958740 MOV X2, X31
	0x03958744 BL 0x330E100
	0x03958748 ADRP X0, 0x7F7000
	0x0395874C LDR X0, [X0 + 0x528]
	0x03958750 BL 0x1C16D08
	0x03958754 MOV X1, X0
	0x03958758 MOV X0, X19
	0x0395875C BL 0x1C16DEC
	0x03958760 B 0x3958860
	0x03958764 B 0x3958864
	0x03958768 B 0x3958860
	0x0395876C B 0x3958864
	0x03958770 B 0x3958860
	0x03958774 B 0x3958864
	0x03958778 B 0x3958864
	0x0395877C B 0x3958864
	0x03958780 B 0x3958860
	0x03958784 B 0x3958860
	0x03958788 B 0x3958864
	0x0395878C B 0x3958864
	0x03958790 B 0x3958864
	0x03958794 B 0x3958860
	0x03958798 B 0x3958860
	0x0395879C B 0x3958860
	0x039587A0 B 0x3958860
	0x039587A4 B 0x3958860
	0x039587A8 B 0x3958860
	0x039587AC B 0x3958864
	0x039587B0 B 0x3958860
	0x039587B4 B 0x3958860
	0x039587B8 B 0x3958860
	0x039587BC B 0x3958860
	0x039587C0 B 0x3958864
	0x039587C4 B 0x3958860
	0x039587C8 B 0x3958864
	0x039587CC B 0x3958864
	0x039587D0 B 0x3958860
	0x039587D4 B 0x3958864
	0x039587D8 B 0x3958864
	0x039587DC B 0x3958864
	0x039587E0 B 0x3958860
	0x039587E4 B 0x3958860
	0x039587E8 B 0x3958860
	0x039587EC B 0x3958860
	0x039587F0 B 0x3958860
	0x039587F4 B 0x3958864
	0x039587F8 B 0x3958864
	0x039587FC B 0x3958860
	0x03958800 B 0x3958860
	0x03958804 B 0x3958860
	0x03958808 B 0x3958864
	0x0395880C B 0x3958864
	0x03958810 B 0x3958860
	0x03958814 B 0x3958838
	0x03958818 B 0x3958838
	0x0395881C B 0x3958860
	0x03958820 B 0x3958860
	0x03958824 B 0x3958864
	0x03958828 B 0x3958838
	0x0395882C B 0x3958864
	0x03958830 B 0x3958864
	0x03958834 B 0x3958864
	0x03958838 MOV X26, X0
	0x0395883C B 0x3958878
	0x03958840 B 0x3958860
	0x03958844 B 0x3958860
	0x03958848 B 0x3958860
	0x0395884C B 0x3958860
	0x03958850 B 0x3958860
	0x03958854 B 0x3958860
	0x03958858 B 0x3958860
	0x0395885C B 0x3958860
	0x03958860 LDP X29, X28, [X31 + 0x30]
	0x03958864 MOV X26, X0
	0x03958868 ADRP X20, 0x7F6000
	0x0395886C ADRP X22, 0x7F7000
	0x03958870 LDR X20, [X20 + 0xC48]
	0x03958874 LDR X22, [X22 + 0x478]
	0x03958878 CMP W1, 0x1
	0x0395887C B.NE 0x39588B0
	0x03958880 MOV X0, X26
	0x03958884 BL 0x3EB1AD0
	0x03958888 LDR X19, [X0]
	0x0395888C BL 0x3EB1AE0
	0x03958890 ADRP X8, 0x7F7000
	0x03958894 LDR X8, [X8 + 0x400]
	0x03958898 ADD X0, X31, 0xF0
	0x0395889C LDR X1, [X8]
	0x039588A0 BL 0x2BB2394
	0x039588A4 CBZ X19, 0x3958394
	0x039588A8 MOV X0, X19
	0x039588AC BL 0x1C16F18
	0x039588B0 MOV X19, X31
	0x039588B4 B 0x39588BC
	0x039588B8 MOV X26, X0
	0x039588BC ADRP X8, 0x7F7000
	0x039588C0 LDR X8, [X8 + 0x400]
	0x039588C4 LDR X1, [X8]
	0x039588C8 ADD X0, X31, 0xF0
	0x039588CC BL 0x2BB2394
	0x039588D0 CBNZ X19, 0x39588DC
	0x039588D4 MOV X0, X26
	0x039588D8 BL 0x1D2C690
	0x039588DC MOV X0, X19
	0x039588E0 BL 0x1C16F18
	0x039588E4 BL 0x1990590
	0x039588E8 STP D13, D12, [X31 - 0x70]!
	0x039588EC STP D11, D10, [X31 + 0x10]
	0x039588F0 STP D9, D8, [X31 + 0x20]
	0x039588F4 STP X30, X25, [X31 + 0x30]
	0x039588F8 STP X24, X23, [X31 + 0x40]
	0x039588FC STP X22, X21, [X31 + 0x50]
	0x03958900 STP X20, X19, [X31 + 0x60]
	0x03958904 ADRP X20, 0xA89000
	0x03958908 ADRP X21, 0x79B000
	0x0395890C LDRB W8, [X20 + 0x99D]
	0x03958910 LDR X21, [X21 + 0x598]
	0x03958914 MOV V8.16B, V5.16B
	0x03958918 MOV V9.16B, V4.16B
	0x0395891C MOV V10.16B, V3.16B
	0x03958920 MOV V11.16B, V2.16B
	0x03958924 MOV V12.16B, V1.16B
	0x03958928 MOV V13.16B, V0.16B
	0x0395892C MOV X19, X0
	0x03958930 TBNZ X8, 0x0, 0x395899C
	0x03958934 ADRP X0, 0x7A5000
	0x03958938 LDR X0, [X0 + 0x858]
	0x0395893C BL 0x1C16CF4
	0x03958940 ADRP X0, 0x7A5000
	0x03958944 LDR X0, [X0 + 0x890]
	0x03958948 BL 0x1C16CF4
	0x0395894C ADRP X0, 0x7F6000
	0x03958950 LDR X0, [X0 + 0xD78]
	0x03958954 BL 0x1C16CF4
	0x03958958 ADRP X0, 0x7A5000
	0x0395895C LDR X0, [X0 + 0x888]
	0x03958960 BL 0x1C16CF4
	0x03958964 ADRP X0, 0x7F7000
	0x03958968 LDR X0, [X0 + 0x370]
	0x0395896C BL 0x1C16CF4
	0x03958970 ADRP X0, 0x7F7000
	0x03958974 LDR X0, [X0 + 0x1C0]
	0x03958978 BL 0x1C16CF4
	0x0395897C ADRP X0, 0x79B000
	0x03958980 LDR X0, [X0 + 0x598]
	0x03958984 BL 0x1C16CF4
	0x03958988 ADRP X0, 0x7F6000
	0x0395898C LDR X0, [X0 + 0x20]
	0x03958990 BL 0x1C16CF4
	0x03958994 MOVZ W8, 0x1
	0x03958998 STRB W8, [X20 + 0x99D]
	0x0395899C LDR X0, [X21]
	0x039589A0 LDR W8, [X0 + 0xE0]
	0x039589A4 CBNZ W8, 0x39589AC
	0x039589A8 BL 0x1C16DFC
	0x039589AC MOV X0, X19
	0x039589B0 MOV X1, X31
	0x039589B4 MOV X2, X31
	0x039589B8 BL 0x3C3883C
	0x039589BC TBNZ X0, 0x0, 0x3958C30
	0x039589C0 CBZ X19, 0x3958C2C
	0x039589C4 ADRP X20, 0x7F7000
	0x039589C8 LDR X20, [X20 + 0x370]
	0x039589CC MOV X0, X19
	0x039589D0 MOV X1, X31
	0x039589D4 MOV X2, X31
	0x039589D8 BL 0x3912114
	0x039589DC LDR X1, [X20]
	0x039589E0 BL 0x21D79F4
	0x039589E4 MOV X21, X0
	0x039589E8 MOV X0, X19
	0x039589EC MOV X1, X31
	0x039589F0 BL 0x3916198
	0x039589F4 CBZ X0, 0x3958C2C
	0x039589F8 ADRP X8, 0x7F6000
	0x039589FC LDR X8, [X8 + 0xD78]
	0x03958A00 ADRP X24, 0x7F6000
	0x03958A04 MOV X20, X0
	0x03958A08 LDR X1, [X8]
	0x03958A0C LDR X24, [X24 + 0x20]
	0x03958A10 BL 0x2A0A118
	0x03958A14 LDR X8, [X19 + 0x48]
	0x03958A18 MOV W23, W0
	0x03958A1C CBZ X8, 0x3958A58
	0x03958A20 ADRP X8, 0x7A5000
	0x03958A24 LDR X8, [X8 + 0x888]
	0x03958A28 ADRP X22, 0x7A5000
	0x03958A2C LDR X0, [X8]
	0x03958A30 LDR X22, [X22 + 0x890]
	0x03958A34 BL 0x1C16F10
	0x03958A38 LDR X1, [X22]
	0x03958A3C MOV X22, X0
	0x03958A40 BL 0x2A09A9C
	0x03958A44 LDR X0, [X19 + 0x48]
	0x03958A48 MOV X1, X22
	0x03958A4C MOV X2, X31
	0x03958A50 BL 0x3934C64
	0x03958A54 B 0x3958A5C
	0x03958A58 MOV X22, X31
	0x03958A5C LDR X0, [X24]
	0x03958A60 BL 0x1C16F10
	0x03958A64 MOV X1, X31
	0x03958A68 MOV X24, X0
	0x03958A6C BL 0x393DC14
	0x03958A70 CBZ X24, 0x3958C2C
	0x03958A74 MOV X0, X24
	0x03958A78 MOV V0.16B, V13.16B
	0x03958A7C MOV V1.16B, V12.16B
	0x03958A80 MOV V2.16B, V11.16B
	0x03958A84 MOV X1, X31
	0x03958A88 BL 0x393D8A8
	0x03958A8C ADRP X25, 0xA80000
	0x03958A90 LDRB W8, [X25 + 0x785]
	0x03958A94 CBNZ W8, 0x3958AAC
	0x03958A98 ADRP X0, 0x79B000
	0x03958A9C LDR X0, [X0 + 0x5A8]
	0x03958AA0 BL 0x1C16CF4
	0x03958AA4 MOVZ W8, 0x1
	0x03958AA8 STRB W8, [X25 + 0x785]
	0x03958AAC ADRP X8, 0x79B000
	0x03958AB0 LDR X8, [X8 + 0x5A8]
	0x03958AB4 LDR X0, [X8]
	0x03958AB8 LDR W8, [X0 + 0xE0]
	0x03958ABC CBNZ W8, 0x3958AC4
	0x03958AC0 BL 0x1C16DFC
	0x03958AC4 FMUL S0, S10, S10
	0x03958AC8 FMUL S1, S9, S9
	0x03958ACC ADRP X8, 0xFFFFFFFFFD192000
	0x03958AD0 FADD S0, S0, S1
	0x03958AD4 LDR V1, [X8 + 0x17C]
	0x03958AD8 FMUL S2, S8, S8
	0x03958ADC FADD S0, S2, S0
	0x03958AE0 FSQRT S2, S0
	0x03958AE4 FCMP S2, S1
	0x03958AE8 B.LE 0x3958AFC
	0x03958AEC FDIV S0, S10, S2
	0x03958AF0 FDIV S1, S9, S2
	0x03958AF4 FDIV S2, S8, S2
	0x03958AF8 B 0x3958B34
	0x03958AFC ADRP X25, 0xA80000
	0x03958B00 LDRB W8, [X25 + 0x783]
	0x03958B04 CBNZ W8, 0x3958B1C
	0x03958B08 ADRP X0, 0x79B000
	0x03958B0C LDR X0, [X0 + 0x5A0]
	0x03958B10 BL 0x1C16CF4
	0x03958B14 MOVZ W8, 0x1
	0x03958B18 STRB W8, [X25 + 0x783]
	0x03958B1C ADRP X8, 0x79B000
	0x03958B20 LDR X8, [X8 + 0x5A0]
	0x03958B24 LDR X8, [X8]
	0x03958B28 LDR X8, [X8 + 0xB8]
	0x03958B2C LDP S0, S1, [X8]
	0x03958B30 LDR V2, [X8 + 0x8]
	0x03958B34 MOV X0, X24
	0x03958B38 MOV X1, X31
	0x03958B3C BL 0x393D960
	0x03958B40 CBZ X21, 0x3958C2C
	0x03958B44 ADRP X9, 0x7F7000
	0x03958B48 LDR X9, [X9 + 0x1C0]
	0x03958B4C LDR W10, [X21 + 0x1C]
	0x03958B50 LDR X8, [X21 + 0x10]
	0x03958B54 LDR X9, [X9]
	0x03958B58 ADD W10, W10, 0x1
	0x03958B5C STR W10, [X21 + 0x1C]
	0x03958B60 CBZ X8, 0x3958C2C
	0x03958B64 LDRSW X10, [X21 + 0x18]
	0x03958B68 LDR W11, [X8 + 0x18]
	0x03958B6C ADRP X25, 0x7A5000
	0x03958B70 LDR X25, [X25 + 0x858]
	0x03958B74 CMP W10, W11
	0x03958B78 B.CS 0x3958B90
	0x03958B7C ADD W9, W10, 0x1
	0x03958B80 ADD X8, X8, X10, 0x3, LSL
	0x03958B84 STR W9, [X21 + 0x18]
	0x03958B88 STR X24, [X8 + 0x20]
	0x03958B8C B 0x3958BA8
	0x03958B90 LDR X8, [X9 + 0x20]
	0x03958B94 MOV X0, X21
	0x03958B98 MOV X1, X24
	0x03958B9C LDR X8, [X8 + 0xC0]
	0x03958BA0 LDR X2, [X8 + 0x70]
	0x03958BA4 BL 0x301BF90
	0x03958BA8 LDR X3, [X25]
	0x03958BAC MOV X0, X20
	0x03958BB0 MOV W1, W23
	0x03958BB4 MOV W2, W23
	0x03958BB8 BL 0x2A0A344
	0x03958BBC CBZ X22, 0x3958C2C
	0x03958BC0 LDR X3, [X25]
	0x03958BC4 MOVN W2, 0x0
	0x03958BC8 MOV X0, X22
	0x03958BCC MOV W1, W23
	0x03958BD0 BL 0x2A0A344
	0x03958BD4 MOV X0, X19
	0x03958BD8 MOV X1, X21
	0x03958BDC MOV W2, W31
	0x03958BE0 MOV X3, X31
	0x03958BE4 BL 0x3916CF4
	0x03958BE8 MOV X0, X19
	0x03958BEC MOV X1, X20
	0x03958BF0 MOV X2, X31
	0x03958BF4 BL 0x3916234
	0x03958BF8 MOV X0, X19
	0x03958BFC MOV X1, X22
	0x03958C00 MOV X2, X31
	0x03958C04 BL 0x391634C
	0x03958C08 MOV X0, X24
	0x03958C0C LDP X20, X19, [X31 + 0x60]
	0x03958C10 LDP X22, X21, [X31 + 0x50]
	0x03958C14 LDP X24, X23, [X31 + 0x40]
	0x03958C18 LDP X30, X25, [X31 + 0x30]
	0x03958C1C LDP D9, D8, [X31 + 0x20]
	0x03958C20 LDP D11, D10, [X31 + 0x10]
	0x03958C24 LDP D13, D12, [X31], #0x70
	0x03958C28 RET
	0x03958C2C BL 0x1C16F20
	0x03958C30 ADRP X0, 0x7A0000
	0x03958C34 LDR X0, [X0 + 0x528]
	0x03958C38 BL 0x1C16D08
	0x03958C3C BL 0x1C16F10
	0x03958C40 MOV X19, X0
	0x03958C44 ADRP X0, 0x7F5000
	0x03958C48 LDR X0, [X0 + 0xE90]
	0x03958C4C BL 0x1C16D08
	0x03958C50 MOV X1, X0
	0x03958C54 MOV X0, X19
	0x03958C58 MOV X2, X31
	0x03958C5C BL 0x330E100
	0x03958C60 ADRP X0, 0x7F7000
	0x03958C64 LDR X0, [X0 + 0x530]
	0x03958C68 BL 0x1C16D08
	0x03958C6C MOV X1, X0
	0x03958C70 MOV X0, X19
	0x03958C74 BL 0x1C16DEC
	0x03958C78 STR X30, [X31 - 0x20]!
	0x03958C7C STP X20, X19, [X31 + 0x10]
	0x03958C80 ADRP X19, 0xA89000
	0x03958C84 ADRP X20, 0x7F7000
	0x03958C88 LDRB W8, [X19 + 0x99E]
	0x03958C8C LDR X20, [X20 + 0x248]
	0x03958C90 TBNZ X8, 0x0, 0x3958CA8
	0x03958C94 ADRP X0, 0x7F7000
	0x03958C98 LDR X0, [X0 + 0x248]
	0x03958C9C BL 0x1C16CF4
	0x03958CA0 MOVZ W8, 0x1
	0x03958CA4 STRB W8, [X19 + 0x99E]
	0x03958CA8 LDR X0, [X20]
	0x03958CAC BL 0x1C16F10
	0x03958CB0 MOV X1, X31
	0x03958CB4 MOV X19, X0
	0x03958CB8 BL 0x33BDD8C
	0x03958CBC LDR X8, [X20]
	0x03958CC0 LDR X8, [X8 + 0xB8]
	0x03958CC4 STR X19, [X8]
	0x03958CC8 LDP X20, X19, [X31 + 0x10]
	0x03958CCC LDR X30, [X31], #0x20
	0x03958CD0 RET
	0x03958CD4 MOV X1, X31
	0x03958CD8 B 0x33BDD8C
	0x03958CDC STR X30, [X31 - 0x10]!
	0x03958CE0 CBZ X1, 0x3958CF0
	0x03958CE4 LDR W0, [X1 + 0x18]
	0x03958CE8 LDR X30, [X31], #0x10
	0x03958CEC RET
	0x03958CF0 BL 0x1C16F20
	0x03958CF4 STR X30, [X31 - 0x10]!
	0x03958CF8 CBZ X1, 0x3958D0C
	0x03958CFC LDP S0, S1, [X1 + 0x10]
	0x03958D00 LDR V2, [X1 + 0x18]
	0x03958D04 LDR X30, [X31], #0x10
	0x03958D08 RET
	0x03958D0C BL 0x1C16F20
	0x03958D10 STR X30, [X31 - 0x10]!
	0x03958D14 CBZ X1, 0x3958D28
	0x03958D18 LDP S0, S1, [X1 + 0x10]
	0x03958D1C LDR V2, [X1 + 0x18]
	0x03958D20 LDR X30, [X31], #0x10
	0x03958D24 RET
	0x03958D28 BL 0x1C16F20
	0x03958D2C STR X30, [X31 - 0x10]!
	0x03958D30 CBZ X1, 0x3958D40
	0x03958D34 LDR X0, [X1 + 0x10]
	0x03958D38 LDR X30, [X31], #0x10
	0x03958D3C RET
	0x03958D40 BL 0x1C16F20
	0x03958D44 STR X30, [X31 - 0x30]!
	0x03958D48 STP X22, X21, [X31 + 0x10]
	0x03958D4C STP X20, X19, [X31 + 0x20]
	0x03958D50 ADRP X22, 0xA89000
	0x03958D54 ADRP X21, 0x7C3000
	0x03958D58 LDRB W8, [X22 + 0x99F]
	0x03958D5C LDR X21, [X21 + 0x600]
	0x03958D60 MOV X19, X1
	0x03958D64 MOV X20, X0
	0x03958D68 TBNZ X8, 0x0, 0x3958D80
	0x03958D6C ADRP X0, 0x7C3000
	0x03958D70 LDR X0, [X0 + 0x600]
	0x03958D74 BL 0x1C16CF4
	0x03958D78 MOVZ W8, 0x1
	0x03958D7C STRB W8, [X22 + 0x99F]
	0x03958D80 LDR X0, [X21]
	0x03958D84 LDR W20, [X20 + 0x10]
	0x03958D88 LDR W8, [X0 + 0xE0]
	0x03958D8C CBNZ W8, 0x3958D94
	0x03958D90 BL 0x1C16DFC
	0x03958D94 MOV X0, X19
	0x03958D98 MOV W1, W20
	0x03958D9C LDP X20, X19, [X31 + 0x20]
	0x03958DA0 LDP X22, X21, [X31 + 0x10]
	0x03958DA4 MOV X2, X31
	0x03958DA8 LDR X30, [X31], #0x30
	0x03958DAC B 0x38FDEDC
	0x03958DB0 STP D15, D14, [X31 - 0xA0]!
	0x03958DB4 STP D13, D12, [X31 + 0x10]
	0x03958DB8 STP D11, D10, [X31 + 0x20]
	0x03958DBC STP D9, D8, [X31 + 0x30]
	0x03958DC0 STP X29, X30, [X31 + 0x40]
	0x03958DC4 STP X28, X27, [X31 + 0x50]
	0x03958DC8 STP X26, X25, [X31 + 0x60]
	0x03958DCC STP X24, X23, [X31 + 0x70]
	0x03958DD0 STP X22, X21, [X31 + 0x80]
	0x03958DD4 STP X20, X19, [X31 + 0x90]
	0x03958DD8 SUB X31, X31, 0x1F0
	0x03958DDC ADRP X22, 0xA89000
	0x03958DE0 ADRP X21, 0x7F7000
	0x03958DE4 ADRP X19, 0x79B000
	0x03958DE8 LDRB W8, [X22 + 0x9A0]
	0x03958DEC LDR X21, [X21 + 0x538]
	0x03958DF0 LDR X19, [X19 + 0x598]
	0x03958DF4 MOV V9.16B, V0.16B
	0x03958DF8 MOV X20, X1
	0x03958DFC MOV X27, X0
	0x03958E00 TBNZ X8, 0x0, 0x3959388
	0x03958E04 ADRP X0, 0x7F7000
	0x03958E08 LDR X0, [X0 + 0x540]
	0x03958E0C BL 0x1C16CF4
	0x03958E10 ADRP X0, 0x7F7000
	0x03958E14 LDR X0, [X0 + 0x548]
	0x03958E18 BL 0x1C16CF4
	0x03958E1C ADRP X0, 0x7F7000
	0x03958E20 LDR X0, [X0 + 0x550]
	0x03958E24 BL 0x1C16CF4
	0x03958E28 ADRP X0, 0x7F7000
	0x03958E2C LDR X0, [X0 + 0x558]
	0x03958E30 BL 0x1C16CF4
	0x03958E34 ADRP X0, 0x7F7000
	0x03958E38 LDR X0, [X0 + 0x560]
	0x03958E3C BL 0x1C16CF4
	0x03958E40 ADRP X0, 0x7F7000
	0x03958E44 LDR X0, [X0 + 0x568]
	0x03958E48 BL 0x1C16CF4
	0x03958E4C ADRP X0, 0x7F7000
	0x03958E50 LDR X0, [X0 + 0x570]
	0x03958E54 BL 0x1C16CF4
	0x03958E58 ADRP X0, 0x7F7000
	0x03958E5C LDR X0, [X0 + 0x578]
	0x03958E60 BL 0x1C16CF4
	0x03958E64 ADRP X0, 0x7F7000
	0x03958E68 LDR X0, [X0 + 0x580]
	0x03958E6C BL 0x1C16CF4
	0x03958E70 ADRP X0, 0x7F7000
	0x03958E74 LDR X0, [X0 + 0x588]
	0x03958E78 BL 0x1C16CF4
	0x03958E7C ADRP X0, 0x7F7000
	0x03958E80 LDR X0, [X0 + 0x590]
	0x03958E84 BL 0x1C16CF4
	0x03958E88 ADRP X0, 0x7F5000
	0x03958E8C LDR X0, [X0 + 0xC80]
	0x03958E90 BL 0x1C16CF4
	0x03958E94 ADRP X0, 0x7F7000
	0x03958E98 LDR X0, [X0 + 0x598]
	0x03958E9C BL 0x1C16CF4
	0x03958EA0 ADRP X0, 0x7F7000
	0x03958EA4 LDR X0, [X0 + 0x5A0]
	0x03958EA8 BL 0x1C16CF4
	0x03958EAC ADRP X0, 0x7F7000
	0x03958EB0 LDR X0, [X0 + 0x5A8]
	0x03958EB4 BL 0x1C16CF4
	0x03958EB8 ADRP X0, 0x7F7000
	0x03958EBC LDR X0, [X0 + 0x5B0]
	0x03958EC0 BL 0x1C16CF4
	0x03958EC4 ADRP X0, 0x7F7000
	0x03958EC8 LDR X0, [X0 + 0x3D8]
	0x03958ECC BL 0x1C16CF4
	0x03958ED0 ADRP X0, 0x7F7000
	0x03958ED4 LDR X0, [X0 + 0x5B8]
	0x03958ED8 BL 0x1C16CF4
	0x03958EDC ADRP X0, 0x7F7000
	0x03958EE0 LDR X0, [X0 + 0x4E8]
	0x03958EE4 BL 0x1C16CF4
	0x03958EE8 ADRP X0, 0x7F6000
	0x03958EEC LDR X0, [X0 + 0x808]
	0x03958EF0 BL 0x1C16CF4
	0x03958EF4 ADRP X0, 0x7F7000
	0x03958EF8 LDR X0, [X0 + 0x5C0]
	0x03958EFC BL 0x1C16CF4
	0x03958F00 ADRP X0, 0x7F7000
	0x03958F04 LDR X0, [X0 + 0x5C8]
	0x03958F08 BL 0x1C16CF4
	0x03958F0C ADRP X0, 0x7F6000
	0x03958F10 LDR X0, [X0 + 0x2A8]
	0x03958F14 BL 0x1C16CF4
	0x03958F18 ADRP X0, 0x7F7000
	0x03958F1C LDR X0, [X0 + 0x68]
	0x03958F20 BL 0x1C16CF4
	0x03958F24 ADRP X0, 0x7F6000
	0x03958F28 LDR X0, [X0 + 0xD98]
	0x03958F2C BL 0x1C16CF4
	0x03958F30 ADRP X0, 0x7F7000
	0x03958F34 LDR X0, [X0 + 0x5D0]
	0x03958F38 BL 0x1C16CF4
	0x03958F3C ADRP X0, 0x7F7000
	0x03958F40 LDR X0, [X0 + 0x5D8]
	0x03958F44 BL 0x1C16CF4
	0x03958F48 ADRP X0, 0x7F7000
	0x03958F4C LDR X0, [X0 + 0x5E0]
	0x03958F50 BL 0x1C16CF4
	0x03958F54 ADRP X0, 0x7A2000
	0x03958F58 LDR X0, [X0 + 0x830]
	0x03958F5C BL 0x1C16CF4
	0x03958F60 ADRP X0, 0x7F7000
	0x03958F64 LDR X0, [X0 + 0x5E8]
	0x03958F68 BL 0x1C16CF4
	0x03958F6C ADRP X0, 0x7F7000
	0x03958F70 LDR X0, [X0 + 0x5F0]
	0x03958F74 BL 0x1C16CF4
	0x03958F78 ADRP X0, 0x7F7000
	0x03958F7C LDR X0, [X0 + 0x5F8]
	0x03958F80 BL 0x1C16CF4
	0x03958F84 ADRP X0, 0x7A2000
	0x03958F88 LDR X0, [X0 + 0x838]
	0x03958F8C BL 0x1C16CF4
	0x03958F90 ADRP X0, 0x7F6000
	0x03958F94 LDR X0, [X0 + 0xDA0]
	0x03958F98 BL 0x1C16CF4
	0x03958F9C ADRP X0, 0x7F7000
	0x03958FA0 LDR X0, [X0 + 0x600]
	0x03958FA4 BL 0x1C16CF4
	0x03958FA8 ADRP X0, 0x7F7000
	0x03958FAC LDR X0, [X0 + 0x608]
	0x03958FB0 BL 0x1C16CF4
	0x03958FB4 ADRP X0, 0x7F7000
	0x03958FB8 LDR X0, [X0 + 0x610]
	0x03958FBC BL 0x1C16CF4
	0x03958FC0 ADRP X0, 0x7F7000
	0x03958FC4 LDR X0, [X0 + 0x618]
	0x03958FC8 BL 0x1C16CF4
	0x03958FCC ADRP X0, 0x7F7000
	0x03958FD0 LDR X0, [X0 + 0x620]
	0x03958FD4 BL 0x1C16CF4
	0x03958FD8 ADRP X0, 0x7F7000
	0x03958FDC LDR X0, [X0 + 0x628]
	0x03958FE0 BL 0x1C16CF4
	0x03958FE4 ADRP X0, 0x7F7000
	0x03958FE8 LDR X0, [X0 + 0x630]
	0x03958FEC BL 0x1C16CF4
	0x03958FF0 ADRP X0, 0x7F6000
	0x03958FF4 LDR X0, [X0 + 0xDA8]
	0x03958FF8 BL 0x1C16CF4
	0x03958FFC ADRP X0, 0x7A2000
	0x03959000 LDR X0, [X0 + 0x840]
	0x03959004 BL 0x1C16CF4
	0x03959008 ADRP X0, 0x7F6000
	0x0395900C LDR X0, [X0 + 0x638]
	0x03959010 BL 0x1C16CF4
	0x03959014 ADRP X0, 0x7F6000
	0x03959018 LDR X0, [X0 + 0x640]
	0x0395901C BL 0x1C16CF4
	0x03959020 ADRP X0, 0x7F6000
	0x03959024 LDR X0, [X0 + 0x648]
	0x03959028 BL 0x1C16CF4
	0x0395902C ADRP X0, 0x7F6000
	0x03959030 LDR X0, [X0 + 0x650]
	0x03959034 BL 0x1C16CF4
	0x03959038 ADRP X0, 0x7F6000
	0x0395903C LDR X0, [X0 + 0x658]
	0x03959040 BL 0x1C16CF4
	0x03959044 ADRP X0, 0x79C000
	0x03959048 LDR X0, [X0 + 0x9D0]
	0x0395904C BL 0x1C16CF4
	0x03959050 ADRP X0, 0x7F6000
	0x03959054 LDR X0, [X0 + 0x508]
	0x03959058 BL 0x1C16CF4
	0x0395905C ADRP X0, 0x7F6000
	0x03959060 LDR X0, [X0 + 0x70]
	0x03959064 BL 0x1C16CF4
	0x03959068 ADRP X0, 0x7F6000
	0x0395906C LDR X0, [X0 + 0x660]
	0x03959070 BL 0x1C16CF4
	0x03959074 ADRP X0, 0x79C000
	0x03959078 LDR X0, [X0 + 0x9D8]
	0x0395907C BL 0x1C16CF4
	0x03959080 ADRP X0, 0x7F5000
	0x03959084 LDR X0, [X0 + 0x888]
	0x03959088 BL 0x1C16CF4
	0x0395908C ADRP X0, 0x7F4000
	0x03959090 LDR X0, [X0 + 0xE28]
	0x03959094 BL 0x1C16CF4
	0x03959098 ADRP X0, 0x7A1000
	0x0395909C LDR X0, [X0 + 0x848]
	0x039590A0 BL 0x1C16CF4
	0x039590A4 ADRP X0, 0x7F6000
	0x039590A8 LDR X0, [X0 + 0x668]
	0x039590AC BL 0x1C16CF4
	0x039590B0 ADRP X0, 0x7F6000
	0x039590B4 LDR X0, [X0 + 0x670]
	0x039590B8 BL 0x1C16CF4
	0x039590BC ADRP X0, 0x7A1000
	0x039590C0 LDR X0, [X0 + 0x688]
	0x039590C4 BL 0x1C16CF4
	0x039590C8 ADRP X0, 0x7F5000
	0x039590CC LDR X0, [X0 + 0x890]
	0x039590D0 BL 0x1C16CF4
	0x039590D4 ADRP X0, 0x7F6000
	0x039590D8 LDR X0, [X0 + 0x678]
	0x039590DC BL 0x1C16CF4
	0x039590E0 ADRP X0, 0x7F6000
	0x039590E4 LDR X0, [X0 + 0x680]
	0x039590E8 BL 0x1C16CF4
	0x039590EC ADRP X0, 0x7A1000
	0x039590F0 LDR X0, [X0 + 0x850]
	0x039590F4 BL 0x1C16CF4
	0x039590F8 ADRP X0, 0x79B000
	0x039590FC LDR X0, [X0 + 0xE08]
	0x03959100 BL 0x1C16CF4
	0x03959104 ADRP X0, 0x7F5000
	0x03959108 LDR X0, [X0 + 0x898]
	0x0395910C BL 0x1C16CF4
	0x03959110 ADRP X0, 0x79A000
	0x03959114 LDR X0, [X0 + 0xE00]
	0x03959118 BL 0x1C16CF4
	0x0395911C ADRP X0, 0x7F6000
	0x03959120 LDR X0, [X0 + 0x688]
	0x03959124 BL 0x1C16CF4
	0x03959128 ADRP X0, 0x7F6000
	0x0395912C LDR X0, [X0 + 0x690]
	0x03959130 BL 0x1C16CF4
	0x03959134 ADRP X0, 0x79A000
	0x03959138 LDR X0, [X0 + 0xE18]
	0x0395913C BL 0x1C16CF4
	0x03959140 ADRP X0, 0x7F6000
	0x03959144 LDR X0, [X0 + 0x698]
	0x03959148 BL 0x1C16CF4
	0x0395914C ADRP X0, 0x7F6000
	0x03959150 LDR X0, [X0 + 0x6A0]
	0x03959154 BL 0x1C16CF4
	0x03959158 ADRP X0, 0x7F6000
	0x0395915C LDR X0, [X0 + 0x6A8]
	0x03959160 BL 0x1C16CF4
	0x03959164 ADRP X0, 0x7F6000
	0x03959168 LDR X0, [X0 + 0x6B0]
	0x0395916C BL 0x1C16CF4
	0x03959170 ADRP X0, 0x7F6000
	0x03959174 LDR X0, [X0 + 0x6B8]
	0x03959178 BL 0x1C16CF4
	0x0395917C ADRP X0, 0x7F6000
	0x03959180 LDR X0, [X0 + 0x308]
	0x03959184 BL 0x1C16CF4
	0x03959188 ADRP X0, 0x7F6000
	0x0395918C LDR X0, [X0 + 0x208]
	0x03959190 BL 0x1C16CF4
	0x03959194 ADRP X0, 0x7F6000
	0x03959198 LDR X0, [X0 + 0x6C0]
	0x0395919C BL 0x1C16CF4
	0x039591A0 ADRP X0, 0x7F6000
	0x039591A4 LDR X0, [X0 + 0x6C8]
	0x039591A8 BL 0x1C16CF4
	0x039591AC ADRP X0, 0x7F6000
	0x039591B0 LDR X0, [X0 + 0x6D0]
	0x039591B4 BL 0x1C16CF4
	0x039591B8 ADRP X0, 0x7F5000
	0x039591BC LDR X0, [X0 + 0xDB0]
	0x039591C0 BL 0x1C16CF4
	0x039591C4 ADRP X0, 0x7F6000
	0x039591C8 LDR X0, [X0 + 0x220]
	0x039591CC BL 0x1C16CF4
	0x039591D0 ADRP X0, 0x7F4000
	0x039591D4 LDR X0, [X0 + 0xDD8]
	0x039591D8 BL 0x1C16CF4
	0x039591DC ADRP X0, 0x7F4000
	0x039591E0 LDR X0, [X0 + 0xDE0]
	0x039591E4 BL 0x1C16CF4
	0x039591E8 ADRP X0, 0x7F6000
	0x039591EC LDR X0, [X0 + 0x310]
	0x039591F0 BL 0x1C16CF4
	0x039591F4 ADRP X0, 0x7F5000
	0x039591F8 LDR X0, [X0 + 0xAF8]
	0x039591FC BL 0x1C16CF4
	0x03959200 ADRP X0, 0x79B000
	0x03959204 LDR X0, [X0 + 0xE28]
	0x03959208 BL 0x1C16CF4
	0x0395920C ADRP X0, 0x7F6000
	0x03959210 LDR X0, [X0 + 0x1D0]
	0x03959214 BL 0x1C16CF4
	0x03959218 ADRP X0, 0x7C4000
	0x0395921C LDR X0, [X0 + 0xF38]
	0x03959220 BL 0x1C16CF4
	0x03959224 ADRP X0, 0x7F5000
	0x03959228 LDR X0, [X0 + 0xB00]
	0x0395922C BL 0x1C16CF4
	0x03959230 ADRP X0, 0x7F6000
	0x03959234 LDR X0, [X0 + 0x230]
	0x03959238 BL 0x1C16CF4
	0x0395923C ADRP X0, 0x7F4000
	0x03959240 LDR X0, [X0 + 0xDE8]
	0x03959244 BL 0x1C16CF4
	0x03959248 ADRP X0, 0x7F6000
	0x0395924C LDR X0, [X0 + 0x318]
	0x03959250 BL 0x1C16CF4
	0x03959254 ADRP X0, 0x7F4000
	0x03959258 LDR X0, [X0 + 0xDF0]
	0x0395925C BL 0x1C16CF4
	0x03959260 ADRP X0, 0x7F4000
	0x03959264 LDR X0, [X0 + 0xAD0]
	0x03959268 BL 0x1C16CF4
	0x0395926C ADRP X0, 0x79A000
	0x03959270 LDR X0, [X0 + 0x598]
	0x03959274 BL 0x1C16CF4
	0x03959278 ADRP X0, 0x7F5000
	0x0395927C LDR X0, [X0 + 0x418]
	0x03959280 BL 0x1C16CF4
	0x03959284 ADRP X0, 0x7F6000
	0x03959288 LDR X0, [X0 + 0x6D8]
	0x0395928C BL 0x1C16CF4
	0x03959290 ADRP X0, 0x7F6000
	0x03959294 LDR X0, [X0 + 0x6E0]
	0x03959298 BL 0x1C16CF4
	0x0395929C ADRP X0, 0x7F6000
	0x039592A0 LDR X0, [X0 + 0x6E8]
	0x039592A4 BL 0x1C16CF4
	0x039592A8 ADRP X0, 0x7F6000
	0x039592AC LDR X0, [X0 + 0x6F0]
	0x039592B0 BL 0x1C16CF4
	0x039592B4 ADRP X0, 0x7F6000
	0x039592B8 LDR X0, [X0 + 0x6F8]
	0x039592BC BL 0x1C16CF4
	0x039592C0 ADRP X0, 0x7F6000
	0x039592C4 LDR X0, [X0 + 0x700]
	0x039592C8 BL 0x1C16CF4
	0x039592CC ADRP X0, 0x7F6000
	0x039592D0 LDR X0, [X0 + 0x708]
	0x039592D4 BL 0x1C16CF4
	0x039592D8 ADRP X0, 0x7F6000
	0x039592DC LDR X0, [X0 + 0x710]
	0x039592E0 BL 0x1C16CF4
	0x039592E4 ADRP X0, 0x7F6000
	0x039592E8 LDR X0, [X0 + 0x718]
	0x039592EC BL 0x1C16CF4
	0x039592F0 ADRP X0, 0x7F6000
	0x039592F4 LDR X0, [X0 + 0x720]
	0x039592F8 BL 0x1C16CF4
	0x039592FC ADRP X0, 0x7F6000
	0x03959300 LDR X0, [X0 + 0x728]
	0x03959304 BL 0x1C16CF4
	0x03959308 ADRP X0, 0x7F6000
	0x0395930C LDR X0, [X0 + 0x538]
	0x03959310 BL 0x1C16CF4
	0x03959314 ADRP X0, 0x7F6000
	0x03959318 LDR X0, [X0 + 0x730]
	0x0395931C BL 0x1C16CF4
	0x03959320 ADRP X0, 0x7F6000
	0x03959324 LDR X0, [X0 + 0x738]
	0x03959328 BL 0x1C16CF4
	0x0395932C ADRP X0, 0x7F6000
	0x03959330 LDR X0, [X0 + 0x740]
	0x03959334 BL 0x1C16CF4
	0x03959338 ADRP X0, 0x7F6000
	0x0395933C LDR X0, [X0 + 0x748]
	0x03959340 BL 0x1C16CF4
	0x03959344 ADRP X0, 0x7F6000
	0x03959348 LDR X0, [X0 + 0x750]
	0x0395934C BL 0x1C16CF4
	0x03959350 ADRP X0, 0x7F5000
	0x03959354 LDR X0, [X0 + 0xDD0]
	0x03959358 BL 0x1C16CF4
	0x0395935C ADRP X0, 0x7F5000
	0x03959360 LDR X0, [X0 + 0xB08]
	0x03959364 BL 0x1C16CF4
	0x03959368 ADRP X0, 0x7F6000
	0x0395936C LDR X0, [X0 + 0x758]
	0x03959370 BL 0x1C16CF4
	0x03959374 ADRP X0, 0x7F6000
	0x03959378 LDR X0, [X0 + 0x760]
	0x0395937C BL 0x1C16CF4
	0x03959380 MOVZ W8, 0x1
	0x03959384 STRB W8, [X22 + 0x9A0]
	0x03959388 LDR X0, [X21]
	0x0395938C MOVI V0.2D, 0x0
	0x03959390 STP X31, X31, [X31 + 0x1B0]
	0x03959394 STR X31, [X31 + 0x1C0]
	0x03959398 STP X31, X31, [X31 + 0x190]
	0x0395939C STR X31, [X31 + 0x1A0]
	0x039593A0 STR X31, [X31 + 0x180]
	0x039593A4 STP X31, X31, [X31 + 0x150]
	0x039593A8 STR X31, [X31 + 0x120]
	0x039593AC STP V0, V0, [X31 + 0x1D0]
	0x039593B0 STP V0, V0, [X31 + 0x160]
	0x039593B4 STP V0, V0, [X31 + 0x130]
	0x039593B8 STP V0, V0, [X31 + 0x100]
	0x039593BC STP V0, V0, [X31 + 0xE0]
	0x039593C0 STP X31, X31, [X31 + 0xC0]
	0x039593C4 STR X31, [X31 + 0xD0]
	0x039593C8 BL 0x1C16F10
	0x039593CC MOV X1, X31
	0x039593D0 MOV X21, X0
	0x039593D4 BL 0x33BDD8C
	0x039593D8 LDR X0, [X19]
	0x039593DC LDR W8, [X0 + 0xE0]
	0x039593E0 CBNZ W8, 0x39593E8
	0x039593E4 BL 0x1C16DFC
	0x039593E8 MOV X0, X27
	0x039593EC MOV X1, X31
	0x039593F0 MOV X2, X31
	0x039593F4 BL 0x3C3883C
	0x039593F8 TBNZ X0, 0x0, 0x395AF8C
	0x039593FC STR X21, [X31 + 0x30]
	0x03959400 CBZ X27, 0x395AF5C
	0x03959404 ADRP X22, 0x7F4000
	0x03959408 ADRP X23, 0x7F4000
	0x0395940C ADRP X25, 0x7F6000
	0x03959410 ADRP X26, 0x7F6000
	0x03959414 ADRP X28, 0x7F5000
	0x03959418 ADRP X21, 0x7F6000
	0x0395941C ADRP X29, 0x7F6000
	0x03959420 ADRP X24, 0x7F6000
	0x03959424 LDR X22, [X22 + 0xDE8]
	0x03959428 LDR X23, [X23 + 0xDE0]
	0x0395942C LDR X25, [X25 + 0x3D8]
	0x03959430 LDR X26, [X26 + 0x5C8]
	0x03959434 LDR X28, [X28 + 0xB08]
	0x03959438 LDR X21, [X21 + 0x318]
	0x0395943C LDR X29, [X29 + 0x310]
	0x03959440 LDR X24, [X24 + 0x5A0]
	0x03959444 MOV X0, X27
	0x03959448 MOV X1, X31
	0x0395944C BL 0x3916198
	0x03959450 MOV X19, X0
	0x03959454 MOV X0, X27
	0x03959458 MOV X1, X31
	0x0395945C MOV X2, X31
	0x03959460 BL 0x3912114
	0x03959464 LDR X8, [X22]
	0x03959468 MOV X22, X0
	0x0395946C MOV X0, X8
	0x03959470 BL 0x1C16F10
	0x03959474 LDR X2, [X23]
	0x03959478 MOV X1, X22
	0x0395947C MOV X23, X0
	0x03959480 BL 0x301B8E0
	0x03959484 MOV X0, X20
	0x03959488 MOV X1, X19
	0x0395948C MOV X2, X31
	0x03959490 BL 0x38FEBC8
	0x03959494 LDR X1, [X25]
	0x03959498 BL 0x21C02A8
	0x0395949C LDR X1, [X26]
	0x039594A0 BL 0x21D7788
	0x039594A4 LDR X8, [X28]
	0x039594A8 MOV X26, X0
	0x039594AC LDR W9, [X8 + 0xE0]
	0x039594B0 CBNZ W9, 0x39594BC
	0x039594B4 MOV X0, X8
	0x039594B8 BL 0x1C16DFC
	0x039594BC MOV X0, X27
	0x039594C0 MOV W1, W31
	0x039594C4 MOV X2, X31
	0x039594C8 BL 0x3942EDC
	0x039594CC LDR X8, [X21]
	0x039594D0 MOV X25, X0
	0x039594D4 MOV X0, X8
	0x039594D8 BL 0x1C16F10
	0x039594DC LDR X1, [X29]
	0x039594E0 STR X0, [X31 + 0x28]
	0x039594E4 BL 0x301B7C4
	0x039594E8 LDR X0, [X24]
	0x039594EC BL 0x1C16F10
	0x039594F0 ADRP X8, 0x7F6000
	0x039594F4 LDR X8, [X8 + 0x578]
	0x039594F8 MOV X19, X0
	0x039594FC LDR X1, [X8]
	0x03959500 BL 0x2AA4804
	0x03959504 LDR X8, [X31 + 0x30]
	0x03959508 CBZ X8, 0x395AF5C
	0x0395950C STR X27, [X31 + 0x20]
	0x03959510 ADRP X21, 0x79B000
	0x03959514 LDR X21, [X21 + 0xE08]
	0x03959518 STR X19, [X8 + 0x10]
	0x0395951C ADRP X22, 0x7A1000
	0x03959520 ADRP X19, 0x7F6000
	0x03959524 LDR X0, [X21]
	0x03959528 ADRP X20, 0x7F6000
	0x0395952C LDR X22, [X22 + 0x688]
	0x03959530 LDR X19, [X19 + 0x5B0]
	0x03959534 LDR X20, [X20 + 0x580]
	0x03959538 BL 0x1C16F10
	0x0395953C LDR X1, [X22]
	0x03959540 STR X0, [X31 + 0x18]
	0x03959544 BL 0x2DA9EF4
	0x03959548 LDR X0, [X19]
	0x0395954C BL 0x1C16F10
	0x03959550 LDR X1, [X20]
	0x03959554 STR X0, [X31 + 0x40]
	0x03959558 BL 0x2A12DD4
	0x0395955C MOV X0, X25
	0x03959560 MOV X1, X31
	0x03959564 STR X25, [X31 + 0x38]
	0x03959568 BL 0x39427D4
	0x0395956C LDR X8, [X21]
	0x03959570 STR X0, [X31 + 0x48]
	0x03959574 MOV X0, X8
	0x03959578 BL 0x1C16F10
	0x0395957C LDR X1, [X22]
	0x03959580 MOV X29, X0
	0x03959584 BL 0x2DA9EF4
	0x03959588 CBZ X26, 0x395AF5C
	0x0395958C ADRP X8, 0x7F6000
	0x03959590 LDR X8, [X8 + 0x6D0]
	0x03959594 ADRP X21, 0x79C000
	0x03959598 ADRP X20, 0x7F5000
	0x0395959C LDR X21, [X21 + 0x9D8]
	0x039595A0 LDR X20, [X20 + 0xDA0]
	0x039595A4 LDR X1, [X8]
	0x039595A8 ADRP X25, 0x7F6000
	0x039595AC LDR X25, [X25 + 0x1D0]
	0x039595B0 ADD X8, X31, 0x90
	0x039595B4 MOV X0, X26
	0x039595B8 STR X26, [X31 + 0x10]
	0x039595BC BL 0x2FBD5B4
	0x039595C0 LDP V0, V1, [X31 + 0x90]
	0x039595C4 ADRP X27, 0x79A000
	0x039595C8 ADRP X8, 0xFFFFFFFFFD190000
	0x039595CC LDR X27, [X27 + 0x5A8]
	0x039595D0 LDR V10, [X8 + 0xF70]
	0x039595D4 ADRP X28, 0xA7F000
	0x039595D8 STP V0, V1, [X31 + 0x1D0]
	0x039595DC MOVZ W24, 0x1
	0x039595E0 MOV V11.16B, V9.16B
	0x039595E4 ADRP X8, 0x7F6000
	0x039595E8 LDR X8, [X8 + 0x618]
	0x039595EC LDR X1, [X8]
	0x039595F0 ADD X0, X31, 0x1D0
	0x039595F4 BL 0x2BBB628
	0x039595F8 TBZ X0, 0x0, 0x395994C
	0x039595FC CBZ X29, 0x395AEE4
	0x03959600 LDR X19, [X31 + 0x1E8]
	0x03959604 LDR X2, [X21]
	0x03959608 MOV X0, X29
	0x0395960C MOV W1, W19
	0x03959610 BL 0x2DAB03C
	0x03959614 TBZ X0, 0x0, 0x395973C
	0x03959618 LDR X0, [X31 + 0x48]
	0x0395961C CBZ X0, 0x395AEEC
	0x03959620 ADRP X8, 0x7F6000
	0x03959624 LDR X8, [X8 + 0x590]
	0x03959628 LDR X2, [X8]
	0x0395962C MOV W1, W19
	0x03959630 BL 0x2A135EC
	0x03959634 CBZ X0, 0x395AEF0
	0x03959638 ADRP X8, 0x7F5000
	0x0395963C LDR X8, [X8 + 0xDB0]
	0x03959640 LDR X1, [X8]
	0x03959644 ADD X8, X31, 0x90
	0x03959648 BL 0x301CB58
	0x0395964C LDR V0, [X31 + 0x9]
	0x03959650 LDR X8, [X31 + 0xA0]
	0x03959654 MOV V8.16B, V11.16B
	0x03959658 STR V0, [X31 + 0x1B]
	0x0395965C STR X8, [X31 + 0x1C0]
	0x03959660 LDR X1, [X20]
	0x03959664 ADD X0, X31, 0x1B0
	0x03959668 BL 0x2BC4350
	0x0395966C TBZ X0, 0x0, 0x395970C
	0x03959670 LDR X8, [X31 + 0x1C0]
	0x03959674 CBZ X8, 0x395988C
	0x03959678 CBZ X23, 0x3959894
	0x0395967C LDR X26, [X8 + 0x10]
	0x03959680 LDR X2, [X25]
	0x03959684 MOV X0, X23
	0x03959688 MOV W1, W26
	0x0395968C BL 0x301BCCC
	0x03959690 CBZ X0, 0x395987C
	0x03959694 LDR V12, [X0 + 0x10]
	0x03959698 LDUR V13, [X0 + 0x14]
	0x0395969C LDR X2, [X25]
	0x039596A0 UBFM X1, X26, 0x20, 0x3F
	0x039596A4 MOV X0, X23
	0x039596A8 BL 0x301BCCC
	0x039596AC CBZ X0, 0x3959884
	0x039596B0 LDR V14, [X0 + 0x10]
	0x039596B4 LDRB W8, [X28 + 0x85C]
	0x039596B8 LDUR V15, [X0 + 0x14]
	0x039596BC CBNZ W8, 0x39596CC
	0x039596C0 MOV X0, X27
	0x039596C4 BL 0x1C16CF4
	0x039596C8 STRB W24, [X28 + 0x85C]
	0x039596CC LDR X0, [X27]
	0x039596D0 LDR W8, [X0 + 0xE0]
	0x039596D4 CBNZ W8, 0x39596DC
	0x039596D8 BL 0x1C16DFC
	0x039596DC FSUB S0, S12, S14
	0x039596E0 FSUB V1.2S, V13.2S, V15.2S
	0x039596E4 FMUL S0, S0, S0
	0x00000000 INVALID
	0x039596EC FADD S0, S0, S1
	0x039596F0 MOV S1, V1.S[1]
	0x039596F4 FADD S0, S1, S0
	0x039596F8 FSQRT S0, S0
	0x039596FC FADD S0, S0, S10
	0x03959700 FCMP S0, S8
	0x03959704 FCSEL S8, S0, S8, MI
	0x03959708 B 0x3959660
	0x0395970C MOV X26, X31
	0x03959710 MOVZ W22, 0x7
	0x03959714 ADRP X8, 0x7F5000
	0x03959718 LDR X8, [X8 + 0xD98]
	0x0395971C MOV V11.16B, V8.16B
	0x03959720 LDR X1, [X8]
	0x03959724 ADD X0, X31, 0x1B0
	0x03959728 BL 0x2BC434C
	0x0395972C CBNZ X26, 0x395AEF4
	0x03959730 CMP W22, 0x7
	0x03959734 B.EQ 0x395973C
	0x03959738 CBNZ W22, 0x3959FAC
	0x0395973C LDR X2, [X21]
	0x03959740 UBFM X19, X19, 0x20, 0x3F
	0x03959744 MOV X0, X29
	0x03959748 MOV W1, W19
	0x0395974C BL 0x2DAB03C
	0x03959750 TBZ X0, 0x0, 0x39595E4
	0x03959754 LDR X0, [X31 + 0x48]
	0x03959758 CBZ X0, 0x395AF08
	0x0395975C ADRP X8, 0x7F6000
	0x03959760 LDR X8, [X8 + 0x590]
	0x03959764 LDR X2, [X8]
	0x03959768 MOV W1, W19
	0x0395976C BL 0x2A135EC
	0x03959770 CBZ X0, 0x395AF04
	0x03959774 ADRP X8, 0x7F5000
	0x03959778 LDR X8, [X8 + 0xDB0]
	0x0395977C LDR X1, [X8]
	0x03959780 ADD X8, X31, 0x90
	0x03959784 BL 0x301CB58
	0x03959788 LDR V0, [X31 + 0x9]
	0x0395978C LDR X8, [X31 + 0xA0]
	0x03959790 MOV V8.16B, V11.16B
	0x03959794 STR V0, [X31 + 0x1B]
	0x03959798 STR X8, [X31 + 0x1C0]
	0x0395979C LDR X1, [X20]
	0x039597A0 ADD X0, X31, 0x1B0
	0x039597A4 BL 0x2BC4350
	0x039597A8 TBZ X0, 0x0, 0x3959848
	0x039597AC LDR X8, [X31 + 0x1C0]
	0x039597B0 CBZ X8, 0x39598AC
	0x039597B4 CBZ X23, 0x39598B4
	0x039597B8 LDR X19, [X8 + 0x10]
	0x039597BC LDR X2, [X25]
	0x039597C0 MOV X0, X23
	0x039597C4 MOV W1, W19
	0x039597C8 BL 0x301BCCC
	0x039597CC CBZ X0, 0x395989C
	0x039597D0 LDR V12, [X0 + 0x10]
	0x039597D4 LDUR V13, [X0 + 0x14]
	0x039597D8 LDR X2, [X25]
	0x039597DC UBFM X1, X19, 0x20, 0x3F
	0x039597E0 MOV X0, X23
	0x039597E4 BL 0x301BCCC
	0x039597E8 CBZ X0, 0x39598A4
	0x039597EC LDR V14, [X0 + 0x10]
	0x039597F0 LDRB W8, [X28 + 0x85C]
	0x039597F4 LDUR V15, [X0 + 0x14]
	0x039597F8 CBNZ W8, 0x3959808
	0x039597FC MOV X0, X27
	0x03959800 BL 0x1C16CF4
	0x03959804 STRB W24, [X28 + 0x85C]
	0x03959808 LDR X0, [X27]
	0x0395980C LDR W8, [X0 + 0xE0]
	0x03959810 CBNZ W8, 0x3959818
	0x03959814 BL 0x1C16DFC
	0x03959818 FSUB S0, S12, S14
	0x0395981C FSUB V1.2S, V13.2S, V15.2S
	0x03959820 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03959828 FADD S0, S0, S1
	0x0395982C MOV S1, V1.S[1]
	0x03959830 FADD S0, S1, S0
	0x03959834 FSQRT S0, S0
	0x03959838 FADD S0, S0, S10
	0x0395983C FCMP S0, S8
	0x03959840 FCSEL S8, S0, S8, MI
	0x03959844 B 0x395979C
	0x03959848 MOV X19, X31
	0x0395984C MOVZ W22, 0x5
	0x03959850 ADRP X8, 0x7F5000
	0x03959854 LDR X8, [X8 + 0xD98]
	0x03959858 MOV V11.16B, V8.16B
	0x0395985C LDR X1, [X8]
	0x03959860 ADD X0, X31, 0x1B0
	0x03959864 BL 0x2BC434C
	0x03959868 CBNZ X19, 0x395AEFC
	0x0395986C CMP W22, 0x5
	0x03959870 B.EQ 0x39595E4
	0x03959874 CBZ W22, 0x39595E4
	0x03959878 B 0x3959FAC
	0x0395987C BL 0x1C16F20
	0x03959880 B 0x395AFF0
	0x03959884 BL 0x1C16F20
	0x03959888 B 0x395AFF0
	0x0395988C BL 0x1C16F20
	0x03959890 B 0x395AFF0
	0x03959894 BL 0x1C16F20
	0x03959898 B 0x395AFF0
	0x0395989C BL 0x1C16F20
	0x039598A0 B 0x395AFF0
	0x039598A4 BL 0x1C16F20
	0x039598A8 B 0x395AFF0
	0x039598AC BL 0x1C16F20
	0x039598B0 B 0x395AFF0
	0x039598B4 BL 0x1C16F20
	0x039598B8 B 0x395AFF0
	0x039598BC B 0x3959904
	0x039598C0 B 0x3959928
	0x039598C4 MOV X22, X0
	0x039598C8 MOV V8.16B, V11.16B
	0x039598CC B 0x3959908
	0x039598D0 B 0x3959904
	0x039598D4 B 0x3959904
	0x039598D8 B 0x3959904
	0x039598DC B 0x3959904
	0x039598E0 B 0x3959904
	0x039598E4 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+288], D15
	003 Move [X31+296], D14
	004 Move [X31+304], D13
	005 Move [X31+312], D12
	006 Move [X31+320], D11
	007 Move [X31+328], D10
	008 Move [X31+336], D9
	009 Move [X31+344], D8
	010 Move [X31+352], X29
	011 Move [X31+360], X30
	012 Move [X31+368], X28
	013 Move [X31+376], X27
	014 Move [X31+384], X26
	015 Move [X31+392], X25
	016 Move [X31+400], X24
	017 Move [X31+408], X23
	018 Move [X31+416], X22
	019 Move [X31+424], X21
	020 Move [X31+432], X20
	021 Move [X31+440], X19
	022 Move X20, 0xA8A000
	023 Move X19, 0x79C000
	024 Move W8, [X20+2460]
	025 Move X19, [X19+1432]
	026 Move V14, V2
	027 Move V8, V1
	028 Move V10, V0
	029 Move X21, X1
	030 Move X25, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {172}
	035 Move X0, 0x7F8000
	036 Move X0, [X0+928]
	037 Call 0x1C17CF4
	038 Move X0, 0x7F8000
	039 Move X0, [X0+936]
	040 Call 0x1C17CF4
	041 Move X0, 0x7A6000
	042 Move X0, [X0+2136]
	043 Call 0x1C17CF4
	044 Move X0, 0x7F8000
	045 Move X0, [X0+944]
	046 Call 0x1C17CF4
	047 Move X0, 0x7A6000
	048 Move X0, [X0+2160]
	049 Call 0x1C17CF4
	050 Move X0, 0x7F8000
	051 Move X0, [X0+952]
	052 Call 0x1C17CF4
	053 Move X0, 0x7F7000
	054 Move X0, [X0+3448]
	055 Call 0x1C17CF4
	056 Move X0, 0x7F6000
	057 Move X0, [X0+3200]
	058 Call 0x1C17CF4
	059 Move X0, 0x7F8000
	060 Move X0, [X0+960]
	061 Call 0x1C17CF4
	062 Move X0, 0x7F8000
	063 Move X0, [X0+968]
	064 Call 0x1C17CF4
	065 Move X0, 0x7F8000
	066 Move X0, [X0+976]
	067 Call 0x1C17CF4
	068 Move X0, 0x7C4000
	069 Move X0, [X0+1536]
	070 Call 0x1C17CF4
	071 Move X0, 0x7F8000
	072 Move X0, [X0+808]
	073 Call 0x1C17CF4
	074 Move X0, 0x7C7000
	075 Move X0, [X0+3000]
	076 Call 0x1C17CF4
	077 Move X0, 0x7F8000
	078 Move X0, [X0+1008]
	079 Call 0x1C17CF4
	080 Move X0, 0x7F8000
	081 Move X0, [X0+1016]
	082 Call 0x1C17CF4
	083 Move X0, 0x7F7000
	084 Move X0, [X0+680]
	085 Call 0x1C17CF4
	086 Move X0, 0x7F8000
	087 Move X0, [X0+1024]
	088 Call 0x1C17CF4
	089 Move X0, 0x7F8000
	090 Move X0, [X0+1048]
	091 Call 0x1C17CF4
	092 Move X0, 0x7F8000
	093 Move X0, [X0+1064]
	094 Call 0x1C17CF4
	095 Move X0, 0x7F8000
	096 Move X0, [X0+496]
	097 Call 0x1C17CF4
	098 Move X0, 0x7F7000
	099 Move X0, [X0+1376]
	100 Call 0x1C17CF4
	101 Move X0, 0x79D000
	102 Move X0, [X0+3672]
	103 Call 0x1C17CF4
	104 Move X0, 0x7F7000
	105 Move X0, [X0+1672]
	106 Call 0x1C17CF4
	107 Move X0, 0x7F6000
	108 Move X0, [X0+3592]
	109 Call 0x1C17CF4
	110 Move X0, 0x79D000
	111 Move X0, [X0+3600]
	112 Call 0x1C17CF4
	113 Move X0, 0x7F8000
	114 Move X0, [X0+448]
	115 Call 0x1C17CF4
	116 Move X0, 0x7F8000
	117 Move X0, [X0+1088]
	118 Call 0x1C17CF4
	119 Move X0, 0x7A0000
	120 Move X0, [X0+2928]
	121 Call 0x1C17CF4
	122 Move X0, 0x7F6000
	123 Move X0, [X0+3552]
	124 Call 0x1C17CF4
	125 Move X0, 0x7F8000
	126 Move X0, [X0+456]
	127 Call 0x1C17CF4
	128 Move X0, 0x7F7000
	129 Move X0, [X0+3136]
	130 Call 0x1C17CF4
	131 Move X0, 0x7F6000
	132 Move X0, [X0+3608]
	133 Call 0x1C17CF4
	134 Move X0, 0x79D000
	135 Move X0, [X0+3624]
	136 Call 0x1C17CF4
	137 Move X0, 0x7F7000
	138 Move X0, [X0+4064]
	139 Call 0x1C17CF4
	140 Move X0, 0x7F7000
	141 Move X0, [X0+3144]
	142 Call 0x1C17CF4
	143 Move X0, 0x7F8000
	144 Move X0, [X0+464]
	145 Call 0x1C17CF4
	146 Move X0, 0x7F7000
	147 Move X0, [X0+4072]
	148 Call 0x1C17CF4
	149 Move X0, 0x7C6000
	150 Move X0, [X0+3896]
	151 Call 0x1C17CF4
	152 Move X0, 0x7F8000
	153 Move X0, [X0+1144]
	154 Call 0x1C17CF4
	155 Move X0, 0x79D000
	156 Move X0, [X0+3632]
	157 Call 0x1C17CF4
	158 Move X0, 0x7F6000
	159 Move X0, [X0+3560]
	160 Call 0x1C17CF4
	161 Move X0, 0x79C000
	162 Move X0, [X0+1432]
	163 Call 0x1C17CF4
	164 Move X0, 0x7F8000
	165 Move X0, [X0+824]
	166 Call 0x1C17CF4
	167 Move X0, 0x7F7000
	168 Move X0, [X0+2824]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X20+2460], W8
	172 Move X0, [X19]
	173 NotImplemented "Instruction MOVI not yet implemented."
	174 Move [X31+280], X31
	175 Move [X31+224], X31
	176 Move [X31+232], X31
	177 Move [X31+240], V0
	178 Move [X31+248], V0
	179 Move [X31+216], X31
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X25
	185 Move X1, X31
	186 Move X2, X31
	187 Call Object.op_Equality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {1257}
	192 Compare X25, 0
	193 JumpIfEqual {1200}
	194 Move X27, X21
	195 Move X19, 0x7F6000
	196 Move X21, 0x7F6000
	197 Move X24, 0x79D000
	198 Move X26, 0x7A0000
	199 Move X20, 0x7F8000
	200 Move X22, 0x7F8000
	201 Move X19, [X19+3560]
	202 Move X21, [X21+3552]
	203 Move X24, [X24+3632]
	204 Move X26, [X26+2928]
	205 Move X20, [X20+976]
	206 Move X22, [X22+952]
	207 Move X0, X25
	208 Move X1, X31
	209 Move X2, X31
	210 Call ProBuilderMesh.GetVertices, X0, X1
	211 Move X8, [X19]
	212 Move X19, X0
	213 Move X0, X8
	214 Call 0x1C17F10
	215 Move X2, [X21]
	216 Move X1, X19
	217 Move X23, X0
	218 Call List`1<Object>..ctor, X0, X1
	219 Move X0, X25
	220 Move X1, X31
	221 Call ProBuilderMesh.get_sharedVertexLookup, X0
	222 Move X21, X0
	223 Move X0, X25
	224 Move X1, X31
	225 Call ProBuilderMesh.get_sharedTextureLookup, X0
	226 Move X8, [X24]
	227 Move X28, X0
	228 Move X0, X8
	229 Call 0x1C17F10
	230 Move X1, [X26]
	231 Move X24, X0
	232 Call List`1<Int32>..ctor, X0
	233 Move X0, [X20]
	234 Call 0x1C17F10
	235 Move X1, [X22]
	236 Move X29, X0
	237 Call Dictionary`2<Object, Object>..ctor, X0
	238 Compare X21, 0
	239 JumpIfEqual {1200}
	240 Move X8, 0x7F7000
	241 Move X8, [X8+3448]
	242 Move X0, X21
	243 Move X1, [X8]
	244 Call Dictionary`2<Int32, Int32>.get_Count, X0
	245 Move [X31+68], W0
	246 Compare X23, 0
	247 JumpIfEqual {1200}
	248 Move X20, 0x7F8000
	249 Move X20, [X20+464]
	250 Move X26, X27
	251 Move X0, X23
	252 Move W1, W26
	253 Move X2, [X20]
	254 Call List`1<Object>.get_Item, X0, X1
	255 Compare X0, 0
	256 JumpIfEqual {1200}
	257 Move X2, [X20]
	258 Move S11, [X0+16]
	259 Move S15, [X0+20]
	260 Move V12, [X0+24]
	261 Move X19, X26
	262 ShiftRight X19, 32
	263 And X19, X19, 0x7FFFFFFF
	264 Move X0, X23
	265 Move W1, W19
	266 Call List`1<Object>.get_Item, X0, X1
	267 Compare X0, 0
	268 JumpIfEqual {1200}
	269 Move V0, [X0+16]
	270 Move X2, [X20]
	271 Move W1, W26
	272 Move [X31+56], S12
	273 Move [X31+32], S0
	274 Move V0, [X0+20]
	275 Move V12, V10
	276 Move [X31+72], X23
	277 Move [X31+48], S0
	278 Move V0, [X0+24]
	279 Move X0, X23
	280 Move [X31+40], S0
	281 Call List`1<Object>.get_Item, X0, X1
	282 Compare X0, 0
	283 JumpIfEqual {1200}
	284 Move X20, 0xA81000
	285 Move S13, [X0+16]
	286 Move S9, [X0+20]
	287 Move W8, [X20+1925]
	288 Move V10, [X0+24]
	289 Compare W8, 0
	290 JumpIfNotEqual {296}
	291 Move X0, 0x79C000
	292 Move X0, [X0+1448]
	293 Call 0x1C17CF4
	294 Move W8, 1
	295 Move [X20+1925], W8
	296 Move X22, 0x79C000
	297 Move X22, [X22+1448]
	298 Move V0, [X31+56]
	299 Subtract S12, S12, S11
	300 Subtract S11, S8, S15
	301 Move X0, [X22]
	302 Subtract S8, S14, S0
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {307}
	306 Call 0x1C17DFC
	307 Move V0, [X31+32]
	308 Move X23, 0xA81000
	309 Move W8, [X23+2596]
	310 Multiply S1, S11, S11
	311 Subtract S14, S0, S13
	312 Move V0, [X31+48]
	313 Subtract S15, S0, S9
	314 Move V0, [X31+40]
	315 Subtract S13, S0, S10
	316 Multiply S0, S12, S12
	317 Add S9, S0, S1
	318 Multiply S10, S8, S8
	319 Compare W8, 0
	320 JumpIfNotEqual {326}
	321 Move X0, 0x79C000
	322 Move X0, [X0+1448]
	323 Call 0x1C17CF4
	324 Move W8, 1
	325 Move [X23+2596], W8
	326 Move X0, [X22]
	327 Multiply S0, S14, S14
	328 Multiply S1, S15, S15
	329 Add S0, S0, S1
	330 Move W8, [X0+224]
	331 Multiply S1, S13, S13
	332 Add S10, S10, S9
	333 Add S9, S1, S0
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, -48685056
	338 Move V1, [X8+4072]
	339 Multiply S0, S10, S9
	340 NotImplemented "Instruction FSQRT not yet implemented."
	341 NotImplemented "Instruction FCMP not yet implemented."
	342 Move S1, W31
	343 Move X0, [X22]
	344 Multiply S1, S12, S14
	345 Multiply S2, S11, S15
	346 Multiply S3, S8, S13
	347 Add S1, S1, S2
	348 Add S1, S3, S1
	349 Move W8, [X0+224]
	350 NotImplemented "Instruction FDIV not yet implemented."
	351 Move S1, 1
	352 Move S2, -1
	353 NotImplemented "Instruction FMIN not yet implemented."
	354 NotImplemented "Instruction FCMP not yet implemented."
	355 NotImplemented "Instruction FCSEL not yet implemented."
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 NotImplemented "Instruction FCVT not yet implemented."
	360 Call 0x3EB2B80
	361 Move X8, -48680960
	362 Move V1, [X8+1096]
	363 NotImplemented "Instruction INVALID not yet implemented."
	364 Multiply S1, S0, S1
	365 Move X8, -48680960
	366 Move V0, [X8+260]
	367 Move X27, X24
	368 Multiply S0, S1, S0
	369 Call 0x3EB2BD0
	370 Move W8, [X20+1925]
	371 Move V8, V0
	372 Compare W8, 0
	373 JumpIfNotEqual {379}
	374 Move X0, 0x79C000
	375 Move X0, [X0+1448]
	376 Call 0x1C17CF4
	377 Move W8, 1
	378 Move [X20+1925], W8
	379 Move X0, [X22]
	380 Move X24, 0x7F8000
	381 NotImplemented "Instruction FSQRT not yet implemented."
	382 Move W8, [X0+224]
	383 Move X24, [X24+808]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X22, 0x7F6000
	388 Move X23, 0x7F8000
	389 Move X22, [X22+3200]
	390 Move X23, [X23+464]
	391 Move X20, [X31+72]
	392 NotImplemented "Instruction FSQRT not yet implemented."
	393 Multiply S1, S10, S8
	394 Move X2, [X23]
	395 Move X0, X20
	396 Move W1, W26
	397 NotImplemented "Instruction FDIV not yet implemented."
	398 Call List`1<Object>.get_Item, X0, X1
	399 Move X2, [X23]
	400 Move X23, X0
	401 Move X0, X20
	402 Move W1, W19
	403 Call List`1<Object>.get_Item, X0, X1
	404 Move X1, X0
	405 Move X0, X23
	406 Move V0, V8
	407 Move X2, X31
	408 Call Vertex.Mix, X0, X1, V0
	409 Move X8, [X24]
	410 Move [X31+40], X0
	411 Move W9, [X8+224]
	412 Compare W9, 0
	413 JumpIfNotEqual {416}
	414 Move X0, X8
	415 Call 0x1C17DFC
	416 Move X0, X25
	417 Move X1, X26
	418 Call ElementSelection.GetNeighborFaces, X0, X1
	419 Move X2, [X22]
	420 Move X23, X0
	421 Move X0, X21
	422 Move W1, W26
	423 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	424 Move X2, [X22]
	425 Move W24, W0
	426 Move X0, X21
	427 Move W1, W19
	428 Move X26, X22
	429 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	430 Move X8, 0x7C4000
	431 Move X8, [X8+1536]
	432 Move W19, W0
	433 Move X8, [X8]
	434 Move W9, [X8+224]
	435 Compare W9, 0
	436 JumpIfNotEqual {439}
	437 Move X0, X8
	438 Call 0x1C17DFC
	439 Add X0, X31, 280
	440 Move W1, W24
	441 Move W2, W19
	442 Move X3, X31
	443 Move [X31+24], X25
	444 Move [X31+32], X27
	445 Call Edge..ctor, X0, X1, X2
	446 Compare X23, 0
	447 JumpIfEqual {1200}
	448 Move X8, 0x7F8000
	449 Move X8, [X8+1088]
	450 Move X22, 0x7A6000
	451 Move X22, [X22+2160]
	452 Move X0, X23
	453 Move X1, [X8]
	454 Add X8, X31, 176
	455 Call List`1<SimpleTuple`2<Object, Edge>>.GetEnumerator, X0
	456 Move V0, [X31+176]
	457 Move V1, [X31+192]
	458 Move [X31+48], X29
	459 Move [X31+56], X28
	460 Move [X31+240], V0
	461 Move [X31+248], V1
	462 Move X8, 0x7F8000
	463 Move X8, [X8+1048]
	464 Move X1, [X8]
	465 Add X0, X31, 240
	466 Call Enumerator<SimpleTuple`2<Object, Edge>>.MoveNext, X0
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {1002}
	471 Compare X29, 0
	472 JumpIfEqual {1238}
	473 Move X8, 0x7F8000
	474 Move X20, [X31+256]
	475 Move X8, [X8+944]
	476 Move X3, [X8]
	477 Add X2, X31, 232
	478 Move X0, X29
	479 Move X1, X20
	480 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	481 Move TEMP, X0
	482 And TEMP, TEMP, 1
	483 Compare TEMP, 1
	484 JumpIfEqual {702}
	485 Move X8, 0x7F8000
	486 Move X8, [X8+496]
	487 Move X0, [X8]
	488 Call 0x1C17F10
	489 Move X19, X0
	490 Move X1, X31
	491 Call FaceRebuildData..ctor, X0
	492 Move X8, 0x79D000
	493 Move X8, [X8+3672]
	494 Move [X31+232], X19
	495 Move X0, [X8]
	496 Move W1, W31
	497 Call 0x1C17D6C
	498 Compare X20, 0
	499 JumpIfEqual {1252}
	500 Move W24, [X20+72]
	501 NotImplemented "Instruction LDUR not yet implemented."
	502 NotImplemented "Instruction LDUR not yet implemented."
	503 Move X23, X0
	504 NotImplemented "Instruction MOVI not yet implemented."
	505 Move [X31+144], V2
	506 Move [X31+152], V2
	507 Move [X31+176], V1
	508 Move [X31+184], V0
	509 Move [X31+112], V1
	510 Move [X31+120], V0
	511 Add X0, X31, 144
	512 Add X1, X31, 112
	513 Move X2, X31
	514 Call AutoUnwrapSettings..ctor, X0, X1
	515 Move X8, 0x7F7000
	516 Move W28, [X20+24]
	517 Move W29, [X20+84]
	518 Move W27, [X20+76]
	519 Move X8, [X8+1376]
	520 Move X0, [X8]
	521 Call 0x1C17F10
	522 Move V0, [X31+144]
	523 Move V1, [X31+160]
	524 Move X25, X0
	525 NotImplemented "Instruction CMP not yet implemented."
	526 NotImplemented "Instruction CSET not yet implemented."
	527 Move [X31+80], V0
	528 Move [X31+88], V1
	529 Add X3, X31, 80
	530 Move TEMP, 0
	531 Not TEMP
	532 Move W6, TEMP
	533 Move X1, X23
	534 Move W2, W24
	535 Move W4, W28
	536 Move W5, W29
	537 Move [X31], X31
	538 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	539 Compare X19, 0
	540 JumpIfEqual {1251}
	541 Move [X19+16], X25
	542 Move X24, [X31+232]
	543 Move X29, [X31+48]
	544 Move X28, [X31+56]
	545 Move X0, X20
	546 Move X1, X31
	547 Call Face.get_distinctIndexesInternal, X0
	548 Move X1, X0
	549 Move X8, 0x7F8000
	550 Move X8, [X8+928]
	551 Move X2, [X8]
	552 Move X0, [X31+72]
	553 Call 0x2181E50, X0, X1
	554 Move X8, 0x7F6000
	555 Move X8, [X8+3560]
	556 Move X23, X0
	557 Move X0, [X8]
	558 Call 0x1C17F10
	559 Move X8, 0x7F6000
	560 Move X8, [X8+3552]
	561 Move X19, X0
	562 Move X2, [X8]
	563 Move X1, X23
	564 Call List`1<Object>..ctor, X0, X1
	565 Compare X24, 0
	566 JumpIfEqual {1253}
	567 Move [X24+24], X19
	568 Move X8, 0x79D000
	569 Move X23, [X31+232]
	570 Move X8, [X8+3632]
	571 Move X0, [X8]
	572 Call 0x1C17F10
	573 Move X8, 0x7A0000
	574 Move X8, [X8+2928]
	575 Move X19, X0
	576 Move X1, [X8]
	577 Call List`1<Int32>..ctor, X0
	578 Compare X23, 0
	579 JumpIfEqual {1254}
	580 Move [X23+32], X19
	581 Move X8, 0x79D000
	582 Move X23, [X31+232]
	583 Move X8, [X8+3632]
	584 Move X0, [X8]
	585 Call 0x1C17F10
	586 Move X8, 0x7A0000
	587 Move X8, [X8+2928]
	588 Move X19, X0
	589 Move X1, [X8]
	590 Call List`1<Int32>..ctor, X0
	591 Compare X23, 0
	592 JumpIfEqual {1249}
	593 Move [X23+40], X19
	594 Move X0, X20
	595 Move X1, X31
	596 Call Face.get_distinctIndexesInternal, X0
	597 Move X19, X0
	598 Compare X0, 0
	599 JumpIfEqual {1250}
	600 Move X8, [X19+24]
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move X24, X31
	603 And X8, X8, 0
	604 Add X25, X19, 32
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move W23, [X25]
	607 Move X3, [X22]
	608 Add X2, X31, 228
	609 Move X0, X21
	610 Move W1, W23
	611 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	612 Move TEMP, X0
	613 And TEMP, TEMP, 1
	614 Compare TEMP, 1
	615 JumpIfNotEqual {643}
	616 Move X8, [X31+232]
	617 Compare X8, 0
	618 JumpIfEqual {1234}
	619 Move X0, [X8+32]
	620 Compare X0, 0
	621 JumpIfEqual {1235}
	622 Move X9, 0x79D000
	623 Move W1, [X31+228]
	624 Move W10, [X0+28]
	625 Move X8, [X0+16]
	626 Move X9, [X9+3600]
	627 Add W10, W10, 1
	628 Move X9, [X9]
	629 Move [X0+28], W10
	630 Compare X8, 0
	631 JumpIfEqual {1233}
	632 NotImplemented "Instruction LDRSW not yet implemented."
	633 Move W11, [X8+24]
	634 NotImplemented "Instruction CMP not yet implemented."
	635 Add W9, W10, 1
	636 Add X8, X8, X10
	637 Move [X0+24], W9
	638 Move [X8+32], W1
	639 Move X8, [X9+32]
	640 Move X8, [X8+192]
	641 Move X2, [X8+112]
	642 Call List`1<Int32>.AddWithResize, X0, X1
	643 Compare X28, 0
	644 JumpIfEqual {1203}
	645 Move X3, [X22]
	646 Add X2, X31, 228
	647 Move X0, X28
	648 Move W1, W23
	649 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	650 Move TEMP, X0
	651 And TEMP, TEMP, 1
	652 Compare TEMP, 1
	653 JumpIfNotEqual {681}
	654 Move X8, [X31+232]
	655 Compare X8, 0
	656 JumpIfEqual {1236}
	657 Move X0, [X8+40]
	658 Compare X0, 0
	659 JumpIfEqual {1237}
	660 Move X9, 0x79D000
	661 Move W1, [X31+228]
	662 Move W10, [X0+28]
	663 Move X8, [X0+16]
	664 Move X9, [X9+3600]
	665 Add W10, W10, 1
	666 Move X9, [X9]
	667 Move [X0+28], W10
	668 Compare X8, 0
	669 JumpIfEqual {1232}
	670 NotImplemented "Instruction LDRSW not yet implemented."
	671 Move W11, [X8+24]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Add W9, W10, 1
	674 Add X8, X8, X10
	675 Move [X0+24], W9
	676 Move [X8+32], W1
	677 Move X8, [X9+32]
	678 Move X8, [X8+192]
	679 Move X2, [X8+112]
	680 Call List`1<Int32>.AddWithResize, X0, X1
	681 Move W8, [X19+24]
	682 Add X24, X24, 1
	683 NotImplemented "Instruction CMP not yet implemented."
	684 Move X0, X20
	685 Move X1, X31
	686 Call Face.get_distinctIndexesInternal, X0
	687 Move X1, X0
	688 Move X0, [X31+32]
	689 Compare X0, 0
	690 JumpIfEqual {1256}
	691 Move X8, 0x7F7000
	692 Move X8, [X8+1672]
	693 Move X2, [X8]
	694 Call List`1<Int32>.AddRange, X0, X1
	695 Move X8, 0x7F8000
	696 Move X2, [X31+232]
	697 Move X8, [X8+936]
	698 Move X3, [X8]
	699 Move X0, X29
	700 Move X1, X20
	701 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	702 Move X8, [X31+232]
	703 Compare X8, 0
	704 JumpIfEqual {1242}
	705 Move X0, [X8+24]
	706 Compare X0, 0
	707 JumpIfEqual {1243}
	708 Move X9, 0x7F8000
	709 Move W10, [X0+28]
	710 Move X8, [X0+16]
	711 Move X9, [X9+448]
	712 Add W10, W10, 1
	713 Move X9, [X9]
	714 Move [X0+28], W10
	715 Compare X8, 0
	716 JumpIfEqual {1240}
	717 NotImplemented "Instruction LDRSW not yet implemented."
	718 Move W11, [X8+24]
	719 NotImplemented "Instruction CMP not yet implemented."
	720 Add W9, W10, 1
	721 Move [X0+24], W9
	722 Move X9, [X31+40]
	723 Add X8, X8, X10
	724 Move [X8+32], X9
	725 Move X8, [X9+32]
	726 Move X8, [X8+192]
	727 Move X2, [X8+112]
	728 Move X1, [X31+40]
	729 Call List`1<Object>.AddWithResize, X0, X1
	730 Move X8, [X31+232]
	731 Compare X8, 0
	732 JumpIfEqual {1241}
	733 Move X0, [X8+32]
	734 Compare X0, 0
	735 JumpIfEqual {1246}
	736 Move X10, 0x79D000
	737 Move W11, [X0+28]
	738 Move X9, [X0+16]
	739 Move X10, [X10+3600]
	740 Add W11, W11, 1
	741 Move X10, [X10]
	742 Move [X0+28], W11
	743 Compare X9, 0
	744 JumpIfEqual {1244}
	745 NotImplemented "Instruction LDRSW not yet implemented."
	746 Move W12, [X9+24]
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Add W10, W11, 1
	749 Move [X0+24], W10
	750 Move W10, [X31+68]
	751 Add X9, X9, X11
	752 Move [X9+32], W10
	753 Move X8, [X10+32]
	754 Move X8, [X8+192]
	755 Move X2, [X8+112]
	756 Move W1, [X31+68]
	757 Call List`1<Int32>.AddWithResize, X0, X1
	758 Move X8, [X31+232]
	759 Compare X8, 0
	760 JumpIfEqual {1255}
	761 Move X0, [X8+40]
	762 Compare X0, 0
	763 JumpIfEqual {1239}
	764 Move X9, 0x79D000
	765 Move W10, [X0+28]
	766 Move X8, [X0+16]
	767 Move X9, [X9+3600]
	768 Add W10, W10, 1
	769 Move X9, [X9]
	770 Move [X0+28], W10
	771 Compare X8, 0
	772 JumpIfEqual {1247}
	773 NotImplemented "Instruction LDRSW not yet implemented."
	774 Move W11, [X8+24]
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Add W9, W10, 1
	777 Add X8, X8, X10
	778 Move [X0+24], W9
	779 Move TEMP, 0
	780 Not TEMP
	781 Move W9, TEMP
	782 Move [X8+32], W9
	783 Move X8, [X9+32]
	784 Move X8, [X8+192]
	785 Move X2, [X8+112]
	786 Move TEMP, 0
	787 Not TEMP
	788 Move W1, TEMP
	789 Call List`1<Int32>.AddWithResize, X0, X1
	790 Move X8, 0x7F5000
	791 Move X8, [X8+3560]
	792 Move X0, [X8]
	793 Call 0x1C17F10
	794 Move X8, 0x7F7000
	795 Move X8, [X8+456]
	796 Move X28, X0
	797 Move X1, [X8]
	798 Call List`1<Object>..ctor, X0
	799 Move X8, 0x79C000
	800 Move X8, [X8+3632]
	801 Move X0, [X8]
	802 Call 0x1C17F10
	803 Move X8, 0x79F000
	804 Move X8, [X8+2928]
	805 Move X29, X0
	806 Move X1, [X8]
	807 Call List`1<Int32>..ctor, X0
	808 Move X8, 0x7F6000
	809 Move X8, [X8+2824]
	810 Move X0, [X8]
	811 Move W8, [X0+224]
	812 Compare W8, 0
	813 JumpIfNotEqual {815}
	814 Call 0x1C17DFC
	815 Move X0, X20
	816 Move X1, X31
	817 Call WingedEdge.SortEdgesByAdjacency, X0
	818 Move X27, X0
	819 Compare X0, 0
	820 JumpIfEqual {1245}
	821 Move W8, [X27+24]
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move W19, W31
	824 Move W25, 1
	825 Move X20, 0x7F6000
	826 Move X20, [X20+4072]
	827 Move X2, [X20]
	828 Move X0, X27
	829 Move W1, W19
	830 Call List`1<Edge>.get_Item, X0, X1
	831 Move X2, [X20]
	832 Move X23, X0
	833 Move X0, X27
	834 Move W1, W19
	835 Call List`1<Edge>.get_Item, X0, X1
	836 Move X8, 0x7F7000
	837 Move X8, [X8+464]
	838 Move X24, X0
	839 Move X2, [X8]
	840 Move X0, [X31+72]
	841 Move W1, W23
	842 Call List`1<Object>.get_Item, X0, X1
	843 Move X1, X0
	844 Compare X28, 0
	845 JumpIfEqual {1202}
	846 Move X9, 0x7F7000
	847 Move W10, [X28+28]
	848 Move X8, [X28+16]
	849 Move X9, [X9+448]
	850 Add W10, W10, 1
	851 Move X9, [X9]
	852 Move [X28+28], W10
	853 Compare X8, 0
	854 JumpIfEqual {1201}
	855 NotImplemented "Instruction LDRSW not yet implemented."
	856 Move W11, [X8+24]
	857 NotImplemented "Instruction CMP not yet implemented."
	858 Add W9, W10, 1
	859 Add X8, X8, X10
	860 Move [X28+24], W9
	861 Move [X8+32], X1
	862 Move X8, [X9+32]
	863 Move X8, [X8+192]
	864 Move X2, [X8+112]
	865 Move X0, X28
	866 Call List`1<Object>.AddWithResize, X0, X1
	867 Move X3, [X22]
	868 Add X2, X31, 224
	869 Move X0, X21
	870 Move W1, W23
	871 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	872 Move TEMP, X0
	873 And TEMP, TEMP, 1
	874 Compare TEMP, 1
	875 JumpIfNotEqual {900}
	876 Compare X29, 0
	877 JumpIfEqual {1214}
	878 Move X9, 0x79C000
	879 Move W1, [X31+224]
	880 Move W10, [X29+28]
	881 Move X8, [X29+16]
	882 Move X9, [X9+3600]
	883 Add W10, W10, 1
	884 Move X9, [X9]
	885 Move [X29+28], W10
	886 Compare X8, 0
	887 JumpIfEqual {1213}
	888 NotImplemented "Instruction LDRSW not yet implemented."
	889 Move W11, [X8+24]
	890 NotImplemented "Instruction CMP not yet implemented."
	891 Add W9, W10, 1
	892 Add X8, X8, X10
	893 Move [X29+24], W9
	894 Move [X8+32], W1
	895 Move X8, [X9+32]
	896 Move X8, [X8+192]
	897 Move X2, [X8+112]
	898 Move X0, X29
	899 Call List`1<Int32>.AddWithResize, X0, X1
	900 Move X24, X24
	901 ShiftRight X24, 32
	902 And X24, X24, 0x7FFFFFFF
	903 Move TEMP, X25
	904 And TEMP, TEMP, 1
	905 Compare TEMP, 1
	906 JumpIfNotEqual {919}
	907 Move W20, [X31+280]
	908 Move X2, [X26]
	909 Move X0, X21
	910 Move W1, W23
	911 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	912 NotImplemented "Instruction CMP not yet implemented."
	913 Move W20, [X31+284]
	914 Move X2, [X26]
	915 Move X0, X21
	916 Move W1, W24
	917 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	918 NotImplemented "Instruction CMP not yet implemented."
	919 Move W20, [X31+280]
	920 Move X2, [X26]
	921 Move X0, X21
	922 Move W1, W24
	923 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	924 NotImplemented "Instruction CMP not yet implemented."
	925 Move W20, [X31+284]
	926 Move X2, [X26]
	927 Move X0, X21
	928 Move W1, W23
	929 Call Dictionary`2<Int32, Int32>.get_Item, X0, X1
	930 NotImplemented "Instruction CMP not yet implemented."
	931 Move X8, [X31+232]
	932 Compare X8, 0
	933 JumpIfEqual {1231}
	934 Move X0, [X8+24]
	935 Compare X0, 0
	936 JumpIfEqual {1217}
	937 Move X9, 0x7F7000
	938 Move W8, [X0+24]
	939 Move X9, [X9+464]
	940 Subtract W1, W8, 1
	941 Move X2, [X9]
	942 Call List`1<Object>.get_Item, X0, X1
	943 Move X1, X0
	944 Move X9, 0x7F7000
	945 Move W10, [X28+28]
	946 Move X8, [X28+16]
	947 Move X9, [X9+448]
	948 Add W10, W10, 1
	949 Move X9, [X9]
	950 Move [X28+28], W10
	951 Compare X8, 0
	952 JumpIfEqual {1224}
	953 NotImplemented "Instruction LDRSW not yet implemented."
	954 Move W11, [X8+24]
	955 NotImplemented "Instruction CMP not yet implemented."
	956 Add W9, W10, 1
	957 Add X8, X8, X10
	958 Move [X28+24], W9
	959 Move [X8+32], X1
	960 Move X8, [X9+32]
	961 Move X8, [X8+192]
	962 Move X2, [X8+112]
	963 Move X0, X28
	964 Call List`1<Object>.AddWithResize, X0, X1
	965 Compare X29, 0
	966 JumpIfEqual {1216}
	967 Move X9, 0x79C000
	968 Move W10, [X29+28]
	969 Move X8, [X29+16]
	970 Move X9, [X9+3600]
	971 Add W10, W10, 1
	972 Move X9, [X9]
	973 Move [X29+28], W10
	974 Compare X8, 0
	975 JumpIfEqual {1215}
	976 NotImplemented "Instruction LDRSW not yet implemented."
	977 Move W11, [X8+24]
	978 NotImplemented "Instruction CMP not yet implemented."
	979 Add W9, W10, 1
	980 Move [X29+24], W9
	981 Move W9, [X31+68]
	982 Add X8, X8, X10
	983 Move W25, W31
	984 Move [X8+32], W9
	985 Move X8, [X9+32]
	986 Move X8, [X8+192]
	987 Move X2, [X8+112]
	988 Move W1, [X31+68]
	989 Move X0, X29
	990 Call List`1<Int32>.AddWithResize, X0, X1
	991 Move W25, W31
	992 Move W8, [X27+24]
	993 Add W19, W19, 1
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Move X8, [X31+232]
	996 Compare X8, 0
	997 JumpIfEqual {1248}
	998 Move [X8+24], X28
	999 Move [X8+32], X29
	1000 Move X29, [X31+48]
	1001 Move X28, [X31+56]
	1002 Move X8, 0x7F7000
	1003 Move X8, [X8+1024]
	1004 Add X0, X31, 240
	1005 Move X1, [X8]
	1006 Call Enumerator<SimpleTuple`2<Object, Edge>>.Dispose, X0
	1007 Move X20, 0x7F6000
	1008 Move X22, 0x7F7000
	1009 Move X20, [X20+3144]
	1010 Move X22, [X22+1144]
	1011 Compare X29, 0
	1012 JumpIfEqual {1200}
	1013 Move X8, 0x7F7000
	1014 Move X8, [X8+960]
	1015 Move X0, X29
	1016 Move X1, [X8]
	1017 Call Dictionary`2<Object, Object>.get_Keys, X0
	1018 Move X8, 0x7F7000
	1019 Move X8, [X8+1016]
	1020 Move X1, [X8]
	1021 Call Enumerable.ToList, X0
	1022 Move X8, 0x7F7000
	1023 Move X8, [X8+968]
	1024 Move X19, X0
	1025 Move X0, X29
	1026 Move X1, [X8]
	1027 Call Dictionary`2<Object, Object>.get_Values, X0
	1028 Move X8, 0x7F7000
	1029 Move X8, [X8+1008]
	1030 Move X1, [X8]
	1031 Call Enumerable.ToList, X0
	1032 Compare X19, 0
	1033 JumpIfEqual {1200}
	1034 Move W8, [X19+24]
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Move X25, X0
	1037 Move W26, W31
	1038 Move X2, [X20]
	1039 Move X0, X19
	1040 Move W1, W26
	1041 Call List`1<Object>.get_Item, X0, X1
	1042 Compare X25, 0
	1043 JumpIfEqual {1200}
	1044 Move X2, [X22]
	1045 Move X24, X0
	1046 Move X0, X25
	1047 Move W1, W26
	1048 Call List`1<Object>.get_Item, X0, X1
	1049 Compare X0, 0
	1050 JumpIfEqual {1200}
	1051 Move X8, [X31+72]
	1052 Move X23, X0
	1053 Move X0, [X0+24]
	1054 Add X1, X31, 216
	1055 Move W27, [X8+24]
	1056 Move W2, W31
	1057 Move W3, W31
	1058 Move X4, X31
	1059 Call Triangulation.TriangulateVertices, X0, X1, X2, X3
	1060 Move TEMP, X0
	1061 And TEMP, TEMP, 1
	1062 Compare TEMP, 1
	1063 JumpIfNotEqual {1147}
	1064 Move X8, 0x7F6000
	1065 Move X29, [X31+216]
	1066 Move X8, [X8+1376]
	1067 Move X0, [X8]
	1068 Call 0x1C17F10
	1069 Move X1, X29
	1070 Move X2, X31
	1071 Move X28, X0
	1072 Call Face..ctor, X0, X1
	1073 Move [X23+16], X28
	1074 Compare X24, 0
	1075 JumpIfEqual {1200}
	1076 Move X29, 0x7C5000
	1077 Move X29, [X29+3896]
	1078 Compare X28, 0
	1079 JumpIfEqual {1200}
	1080 Move W8, [X24+72]
	1081 Move X0, X28
	1082 Move W1, W27
	1083 Move X2, X31
	1084 Move [X28+72], W8
	1085 Call Face.ShiftIndexes, X0, X1
	1086 Move X1, [X23+16]
	1087 Move X0, X24
	1088 Move X2, X31
	1089 Call Face.CopyFrom, X0, X1
	1090 Move X1, [X23+24]
	1091 Move X28, [X31+56]
	1092 Compare X1, 0
	1093 JumpIfEqual {1200}
	1094 Move W24, W31
	1095 Move W8, [X1+24]
	1096 NotImplemented "Instruction CMP not yet implemented."
	1097 Move X0, [X23+32]
	1098 Compare X0, 0
	1099 JumpIfEqual {1200}
	1100 Move X2, [X29]
	1101 Move W1, W24
	1102 Call List`1<Int32>.get_Item, X0, X1
	1103 Move X8, 0x7A5000
	1104 Move X8, [X8+2136]
	1105 Move W2, W0
	1106 Add W1, W27, W24
	1107 Move X0, X21
	1108 Move X3, [X8]
	1109 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	1110 Move X1, [X23+24]
	1111 Add W24, W24, 1
	1112 Compare X1, 0
	1113 JumpIfNotEqual {1095}
	1114 Move X9, [X23+40]
	1115 Compare X9, 0
	1116 JumpIfEqual {1200}
	1117 Move W9, [X9+24]
	1118 NotImplemented "Instruction CMP not yet implemented."
	1119 NotImplemented "Instruction CMP not yet implemented."
	1120 Move W24, W31
	1121 Move X0, [X23+40]
	1122 Compare X0, 0
	1123 JumpIfEqual {1200}
	1124 Move X2, [X29]
	1125 Move W1, W24
	1126 Call List`1<Int32>.get_Item, X0, X1
	1127 Compare X28, 0
	1128 JumpIfEqual {1200}
	1129 Move X8, 0x7A5000
	1130 Move X8, [X8+2136]
	1131 Move W2, W0
	1132 Add W1, W27, W24
	1133 Move X0, X28
	1134 Move X3, [X8]
	1135 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	1136 Move X1, [X23+24]
	1137 Compare X1, 0
	1138 JumpIfEqual {1200}
	1139 Move W8, [X1+24]
	1140 Add W24, W24, 1
	1141 NotImplemented "Instruction CMP not yet implemented."
	1142 Move X8, 0x7F5000
	1143 Move X8, [X8+3592]
	1144 Move X0, [X31+72]
	1145 Move X2, [X8]
	1146 Call List`1<Object>.AddRange, X0, X1
	1147 Move W8, [X19+24]
	1148 Add W26, W26, 1
	1149 NotImplemented "Instruction CMP not yet implemented."
	1150 Move X8, 0x7C6000
	1151 Move X8, [X8+3000]
	1152 Move X0, [X31+32]
	1153 Move X1, [X8]
	1154 Call Enumerable.Distinct, X0
	1155 Move X8, 0x7F6000
	1156 Move X8, [X8+680]
	1157 Move X1, [X8]
	1158 Call Enumerable.ToList, X0
	1159 Move X20, [X31+24]
	1160 Move X1, [X31+72]
	1161 Move X19, X0
	1162 Move W2, W31
	1163 Move X0, X20
	1164 Move X3, X31
	1165 Call ProBuilderMesh.SetVertices, X0, X1, X2
	1166 Move X0, X20
	1167 Move X1, X21
	1168 Move X2, X31
	1169 Call ProBuilderMesh.SetSharedVertices, X0, X1
	1170 Move X0, X20
	1171 Move X1, X28
	1172 Move X2, X31
	1173 Call ProBuilderMesh.SetSharedTextures, X0, X1
	1174 Move X0, X20
	1175 Move X1, X19
	1176 Call DeleteElements.DeleteVertices, X0, X1
	1177 Move X0, [X31+40]
	1178 Move X20, [X31+432]
	1179 Move X19, [X31+440]
	1180 Move X22, [X31+416]
	1181 Move X21, [X31+424]
	1182 Move X24, [X31+400]
	1183 Move X23, [X31+408]
	1184 Move X26, [X31+384]
	1185 Move X25, [X31+392]
	1186 Move X28, [X31+368]
	1187 Move X27, [X31+376]
	1188 Move X29, [X31+352]
	1189 Move X30, [X31+360]
	1190 Move D9, [X31+336]
	1191 Move D8, [X31+344]
	1192 Move D11, [X31+320]
	1193 Move D10, [X31+328]
	1194 Move D13, [X31+304]
	1195 Move D12, [X31+312]
	1196 Move D15, [X31+288]
	1197 Move D14, [X31+296]
	1198 Add X31, X31, 448
	1199 Return X0
	1200 Call 0x1C17F20
	1201 Call 0x1C17F20
	1202 Call 0x1C17F20
	1203 Move X20, 0x7F6000
	1204 Move X22, 0x7F7000
	1205 Move X20, [X20+3144]
	1206 Move X22, [X22+1144]
	1207 Call 0x1C17F20
	1208 Move X20, 0x7F6000
	1209 Move X22, 0x7F7000
	1210 Move X20, [X20+3144]
	1211 Move X22, [X22+1144]
	1212 Call 0x1C17F28
	1213 Call 0x1C17F20
	1214 Call 0x1C17F20
	1215 Call 0x1C17F20
	1216 Call 0x1C17F20
	1217 Move X20, 0x7F6000
	1218 Move X22, 0x7F7000
	1219 Move X29, [X31+48]
	1220 Move X28, [X31+56]
	1221 Move X20, [X20+3144]
	1222 Move X22, [X22+1144]
	1223 Call 0x1C17F20
	1224 Move X20, 0x7F6000
	1225 Move X22, 0x7F7000
	1226 Move X29, [X31+48]
	1227 Move X28, [X31+56]
	1228 Move X20, [X20+3144]
	1229 Move X22, [X22+1144]
	1230 Call 0x1C17F20
	1231 Call 0x1C17F20
	1232 Call 0x1C17F20
	1233 Call 0x1C17F20
	1234 Call 0x1C17F20
	1235 Call 0x1C17F20
	1236 Call 0x1C17F20
	1237 Call 0x1C17F20
	1238 Call 0x1C17F20
	1239 Call 0x1C17F20
	1240 Call 0x1C17F20
	1241 Call 0x1C17F20
	1242 Call 0x1C17F20
	1243 Call 0x1C17F20
	1244 Call 0x1C17F20
	1245 Call 0x1C17F20
	1246 Call 0x1C17F20
	1247 Call 0x1C17F20
	1248 Call 0x1C17F20
	1249 Call 0x1C17F20
	1250 Call 0x1C17F20
	1251 Call 0x1C17F20
	1252 Call 0x1C17F20
	1253 Call 0x1C17F20
	1254 Call 0x1C17F20
	1255 Call 0x1C17F20
	1256 Call 0x1C17F20
	1257 Move X0, 0x7A0000
	1258 Move X0, [X0+1320]
	1259 Call 0x1C17D08
	1260 Call 0x1C17F10
	1261 Move X19, X0
	1262 Move X0, 0x7F5000
	1263 Move X0, [X0+3728]
	1264 Call 0x1C17D08
	1265 Move X1, X0
	1266 Move X0, X19
	1267 Move X2, X31
	1268 Call ArgumentNullException..ctor, X0, X1
	1269 Move X0, 0x7F7000
	1270 Move X0, [X0+1320]
	1271 Call 0x1C17D08
	1272 Move X1, X0
	1273 Move X0, X19
	1274 Call 0x1C17DEC
	1275 Move X26, X0
	1276 Move X29, [X31+48]
	1277 Move X28, [X31+56]
	1278 Move X26, X0
	1279 Move X20, 0x7F6000
	1280 Move X22, 0x7F7000
	1281 Move X20, [X20+3144]
	1282 Move X22, [X22+1144]
	1283 NotImplemented "Instruction CMP not yet implemented."
	1284 Move X0, X26
	1285 Call 0x3EB2AD0
	1286 Move X19, [X0]
	1287 Call 0x3EB2AE0
	1288 Move X8, 0x7F7000
	1289 Move X8, [X8+1024]
	1290 Add X0, X31, 240
	1291 Move X1, [X8]
	1292 Call Enumerator<SimpleTuple`2<Object, Edge>>.Dispose, X0
	1293 Compare X19, 0
	1294 JumpIfEqual {1011}
	1295 Move X0, X19
	1296 Call 0x1C17F18
	1297 Move X19, X31
	1298 Move X26, X0
	1299 Move X8, 0x7F7000
	1300 Move X8, [X8+1024]
	1301 Move X1, [X8]
	1302 Add X0, X31, 240
	1303 Call Enumerator<SimpleTuple`2<Object, Edge>>.Dispose, X0
	1304 Compare X19, 0
	1305 JumpIfNotEqual {1308}
	1306 Move X0, X26
	1307 Call 0x1D2D690
	1308 Move X0, X19
	1309 Call 0x1C17F18
	1310 Call 0x1991590

Method: UnityEngine.ProBuilder.Vertex InsertVertexInMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 point, UnityEngine.Vector3 normal)

Disassembly:
	0x039598E8 MOV V8.16B, V11.16B
	0x039598EC B 0x395992C
	0x039598F0 B 0x3959928
	0x039598F4 B 0x3959928
	0x039598F8 B 0x3959928
	0x039598FC B 0x3959928
	0x03959900 B 0x3959928
	0x03959904 MOV X22, X0
	0x03959908 CMP W1, 0x1
	0x0395990C B.NE 0x395AE64
	0x03959910 MOV X0, X22
	0x03959914 BL 0x3EB1AD0
	0x03959918 LDR X19, [X0]
	0x0395991C BL 0x3EB1AE0
	0x03959920 MOV W22, W31
	0x03959924 B 0x3959850
	0x03959928 MOV X22, X0
	0x0395992C CMP W1, 0x1
	0x03959930 B.NE 0x395AE38
	0x03959934 MOV X0, X22
	0x03959938 BL 0x3EB1AD0
	0x0395993C LDR X26, [X0]
	0x03959940 BL 0x3EB1AE0
	0x03959944 MOV W22, W31
	0x03959948 B 0x3959714
	0x0395994C ADRP X8, 0x7F6000
	0x03959950 LDR X8, [X8 + 0x5F8]
	0x03959954 ADD X0, X31, 0x1D0
	0x03959958 LDR X1, [X8]
	0x0395995C BL 0x2BBB624
	0x03959960 MOV V8.16B, V11.16B
	0x03959964 ADRP X8, 0xFFFFFFFFFD191000
	0x03959968 LDR V0, [X8 + 0x410]
	0x0395996C FCMP S8, S0
	0x03959970 B.PL 0x3959998
	0x03959974 ADRP X8, 0x7F4000
	0x03959978 LDR X8, [X8 + 0xAD0]
	0x0395997C LDR X0, [X8]
	0x03959980 LDR W8, [X0 + 0xE0]
	0x03959984 CBNZ W8, 0x395998C
	0x03959988 BL 0x1C16DFC
	0x0395998C ADRP X8, 0x7F6000
	0x03959990 LDR X8, [X8 + 0x760]
	0x03959994 B 0x395A1A4
	0x03959998 ADRP X8, 0x7F6000
	0x0395999C LDR X8, [X8 + 0x6D0]
	0x039599A0 LDR X0, [X31 + 0x10]
	0x039599A4 LDR X1, [X8]
	0x039599A8 ADD X8, X31, 0x90
	0x039599AC BL 0x2FBD5B4
	0x039599B0 LDP V0, V1, [X31 + 0x90]
	0x039599B4 ADRP X24, 0x7F6000
	0x039599B8 ADRP X25, 0x7F6000
	0x039599BC ADRP X26, 0x7F6000
	0x039599C0 ADRP X27, 0x7F6000
	0x039599C4 ADRP X28, 0x7F6000
	0x039599C8 LDR X24, [X24 + 0x738]
	0x039599CC LDR X25, [X25 + 0x730]
	0x039599D0 LDR X26, [X26 + 0x5B8]
	0x039599D4 LDR X27, [X27 + 0x540]
	0x039599D8 LDR X28, [X28 + 0x558]
	0x039599DC LDR X29, [X31 + 0x18]
	0x039599E0 MOV W20, W31
	0x039599E4 STP V0, V1, [X31 + 0x1D0]
	0x039599E8 ADRP X8, 0x7F6000
	0x039599EC LDR X8, [X8 + 0x618]
	0x039599F0 LDR X1, [X8]
	0x039599F4 ADD X0, X31, 0x1D0
	0x039599F8 BL 0x2BBB628
	0x039599FC TBZ X0, 0x0, 0x3959B5C
	0x03959A00 LDR X0, [X24]
	0x03959A04 BL 0x1C16F10
	0x03959A08 MOV X19, X0
	0x03959A0C MOV X1, X31
	0x03959A10 BL 0x33BDD8C
	0x03959A14 CBZ X19, 0x395AEE8
	0x03959A18 LDR V0, [X31 + 0x1E]
	0x03959A1C ADRP X8, 0x7F6000
	0x03959A20 STR V0, [X19 + 0x1]
	0x03959A24 LDR X8, [X8 + 0x70]
	0x03959A28 LDR X0, [X8]
	0x03959A2C BL 0x1C16F10
	0x03959A30 LDR X2, [X25]
	0x03959A34 MOV X22, X0
	0x03959A38 MOV X1, X19
	0x03959A3C MOV X3, X31
	0x03959A40 BL 0x2D2F428
	0x03959A44 LDR X2, [X26]
	0x03959A48 LDR X0, [X31 + 0x38]
	0x03959A4C MOV X1, X22
	0x03959A50 BL 0x21C570C
	0x03959A54 MOV X19, X0
	0x03959A58 CBZ X0, 0x39599E8
	0x03959A5C LDR X8, [X19 + 0x38]
	0x03959A60 CBZ X8, 0x39599E8
	0x03959A64 LDR X22, [X31 + 0x30]
	0x03959A68 LDR X1, [X19 + 0x20]
	0x03959A6C LDR W2, [X19 + 0x18]
	0x03959A70 LDR X3, [X27]
	0x03959A74 LDR X0, [X22 + 0x10]
	0x03959A78 ADD W20, W20, 0x1
	0x03959A7C BL 0x217D394
	0x03959A80 LDR X0, [X22 + 0x10]
	0x03959A84 LDR X1, [X19 + 0x20]
	0x03959A88 LDR W2, [X19 + 0x1C]
	0x03959A8C LDR X3, [X27]
	0x03959A90 BL 0x217D394
	0x03959A94 LDR X8, [X19 + 0x38]
	0x03959A98 CBZ X8, 0x395AFEC
	0x03959A9C LDR X9, [X31 + 0x30]
	0x03959AA0 LDR X1, [X8 + 0x20]
	0x03959AA4 LDR W2, [X19 + 0x18]
	0x03959AA8 LDR X3, [X27]
	0x03959AAC LDR X0, [X9 + 0x10]
	0x03959AB0 BL 0x217D394
	0x03959AB4 LDR X8, [X19 + 0x38]
	0x03959AB8 CBZ X8, 0x395AFE4
	0x03959ABC LDR X9, [X31 + 0x30]
	0x03959AC0 LDR X1, [X8 + 0x20]
	0x03959AC4 LDR W2, [X19 + 0x1C]
	0x03959AC8 LDR X3, [X27]
	0x03959ACC LDR X0, [X9 + 0x10]
	0x03959AD0 BL 0x217D394
	0x03959AD4 CBZ X29, 0x395AFE0
	0x03959AD8 LDR W1, [X19 + 0x18]
	0x03959ADC LDR X2, [X21]
	0x03959AE0 MOV X0, X29
	0x03959AE4 BL 0x2DAB03C
	0x03959AE8 LDR W1, [X19 + 0x1C]
	0x03959AEC LDR X2, [X21]
	0x03959AF0 MOV X0, X29
	0x03959AF4 BL 0x2DAB03C
	0x03959AF8 LDR X0, [X28]
	0x03959AFC LDR W8, [X0 + 0xE0]
	0x03959B00 CBNZ W8, 0x3959B08
	0x03959B04 BL 0x1C16DFC
	0x03959B08 MOV X0, X23
	0x03959B0C MOV X1, X19
	0x03959B10 MOV V0.16B, V8.16B
	0x03959B14 BL 0x395B45C
	0x03959B18 LDR X1, [X19 + 0x38]
	0x03959B1C MOV X0, X23
	0x03959B20 MOV V0.16B, V8.16B
	0x03959B24 BL 0x395B45C
	0x03959B28 LDR X2, [X19 + 0x38]
	0x03959B2C LDR X3, [X31 + 0x40]
	0x03959B30 MOV X0, X23
	0x03959B34 MOV X1, X19
	0x03959B38 BL 0x395B860
	0x03959B3C MOV X1, X0
	0x03959B40 LDR X0, [X31 + 0x28]
	0x03959B44 CBZ X0, 0x395AFE8
	0x03959B48 ADRP X8, 0x7F6000
	0x03959B4C LDR X8, [X8 + 0x6B8]
	0x03959B50 LDR X2, [X8]
	0x03959B54 BL 0x301C194
	0x03959B58 B 0x39599E8
	0x03959B5C ADRP X8, 0x7F6000
	0x03959B60 LDR X8, [X8 + 0x5F8]
	0x03959B64 ADD X0, X31, 0x1D0
	0x03959B68 LDR X1, [X8]
	0x03959B6C BL 0x2BBB624
	0x03959B70 CMP W20, 0x0
	0x03959B74 B.LE 0x395A184
	0x03959B78 ADRP X20, 0x7F6000
	0x03959B7C LDR X20, [X20 + 0x750]
	0x03959B80 LDR X0, [X20]
	0x03959B84 LDR W8, [X0 + 0xE0]
	0x03959B88 CBNZ W8, 0x3959B94
	0x03959B8C BL 0x1C16DFC
	0x03959B90 LDR X0, [X20]
	0x03959B94 LDR X8, [X0 + 0xB8]
	0x03959B98 LDR X19, [X8 + 0x8]
	0x03959B9C CBNZ X19, 0x3959BF0
	0x03959BA0 LDR W8, [X0 + 0xE0]
	0x03959BA4 CBNZ W8, 0x3959BB0
	0x03959BA8 BL 0x1C16DFC
	0x03959BAC LDR X0, [X20]
	0x03959BB0 ADRP X9, 0x7F6000
	0x03959BB4 LDR X8, [X0 + 0xB8]
	0x03959BB8 LDR X9, [X9 + 0x508]
	0x03959BBC LDR X22, [X8]
	0x03959BC0 LDR X0, [X9]
	0x03959BC4 BL 0x1C16F10
	0x03959BC8 ADRP X8, 0x7F6000
	0x03959BCC LDR X8, [X8 + 0x6F8]
	0x03959BD0 MOV X1, X22
	0x03959BD4 MOV X3, X31
	0x03959BD8 MOV X19, X0
	0x03959BDC LDR X2, [X8]
	0x03959BE0 BL 0x2D30578
	0x03959BE4 LDR X8, [X20]
	0x03959BE8 LDR X8, [X8 + 0xB8]
	0x03959BEC STR X19, [X8 + 0x8]
	0x03959BF0 ADRP X8, 0x7F6000
	0x03959BF4 LDR X8, [X8 + 0x4E8]
	0x03959BF8 LDR X0, [X31 + 0x28]
	0x03959BFC MOV X1, X19
	0x03959C00 LDR X2, [X8]
	0x03959C04 BL 0x21CF224
	0x03959C08 ADRP X8, 0x7F4000
	0x03959C0C LDR X8, [X8 + 0xDF0]
	0x03959C10 MOV X19, X0
	0x03959C14 LDR X8, [X8]
	0x03959C18 MOV X0, X8
	0x03959C1C BL 0x1C16F10
	0x03959C20 ADRP X8, 0x7F4000
	0x03959C24 LDR X8, [X8 + 0xDD8]
	0x03959C28 MOV X1, X19
	0x03959C2C STR X0, [X31 + 0x18]
	0x03959C30 LDR X2, [X8]
	0x03959C34 BL 0x301B8E0
	0x03959C38 ADRP X8, 0x7F6000
	0x03959C3C LDR X8, [X8 + 0x5A8]
	0x03959C40 LDR X0, [X8]
	0x03959C44 BL 0x1C16F10
	0x03959C48 ADRP X8, 0x7F6000
	0x03959C4C LDR X8, [X8 + 0x588]
	0x03959C50 STR X0, [X31 + 0x48]
	0x03959C54 LDR X1, [X8]
	0x03959C58 BL 0x2AA4804
	0x03959C5C CBZ X29, 0x395AF5C
	0x03959C60 ADRP X8, 0x7A1000
	0x03959C64 LDR X8, [X8 + 0x848]
	0x03959C68 MOV X0, X29
	0x03959C6C LDR X1, [X8]
	0x03959C70 ADD X8, X31, 0x90
	0x03959C74 BL 0x2DAAA30

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0xA89000
	016 Move X21, 0x79B000
	017 Move W8, [X20+2461]
	018 Move X21, [X21+1432]
	019 Move V8, V5
	020 Move V9, V4
	021 Move V10, V3
	022 Move V11, V2
	023 Move V12, V1
	024 Move V13, V0
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {56}
	030 Move X0, 0x7A5000
	031 Move X0, [X0+2136]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A5000
	034 Move X0, [X0+2192]
	035 Call 0x1C17CF4
	036 Move X0, 0x7F6000
	037 Move X0, [X0+3448]
	038 Call 0x1C17CF4
	039 Move X0, 0x7A5000
	040 Move X0, [X0+2184]
	041 Call 0x1C17CF4
	042 Move X0, 0x7F7000
	043 Move X0, [X0+880]
	044 Call 0x1C17CF4
	045 Move X0, 0x7F7000
	046 Move X0, [X0+448]
	047 Call 0x1C17CF4
	048 Move X0, 0x79B000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x7F6000
	052 Move X0, [X0+32]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2461], W8
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {240}
	069 Compare X19, 0
	070 JumpIfEqual {239}
	071 Move X20, 0x7F7000
	072 Move X20, [X20+880]
	073 Move X0, X19
	074 Move X1, X31
	075 Move X2, X31
	076 Call ProBuilderMesh.GetVertices, X0, X1
	077 Move X1, [X20]
	078 Call Enumerable.ToList, X0
	079 Move X21, X0
	080 Move X0, X19
	081 Move X1, X31
	082 Call ProBuilderMesh.get_sharedVertexLookup, X0
	083 Compare X0, 0
	084 JumpIfEqual {239}
	085 Move X8, 0x7F6000
	086 Move X8, [X8+3448]
	087 Move X24, 0x7F6000
	088 Move X20, X0
	089 Move X1, [X8]
	090 Move X24, [X24+32]
	091 Call Dictionary`2<Int32, Int32>.get_Count, X0
	092 Move X8, [X19+72]
	093 Move W23, W0
	094 Compare X8, 0
	095 JumpIfEqual {109}
	096 Move X8, 0x7A5000
	097 Move X8, [X8+2184]
	098 Move X22, 0x7A5000
	099 Move X0, [X8]
	100 Move X22, [X22+2192]
	101 Call 0x1C17F10
	102 Move X1, [X22]
	103 Move X22, X0
	104 Call Dictionary`2<Int32, Int32>..ctor, X0
	105 Move X0, [X19+72]
	106 Move X1, X22
	107 Move X2, X31
	108 Call SharedVertex.GetSharedVertexLookup, X0, X1
	109 Move X22, X31
	110 Move X0, [X24]
	111 Call 0x1C17F10
	112 Move X1, X31
	113 Move X24, X0
	114 Call Vertex..ctor, X0
	115 Compare X24, 0
	116 JumpIfEqual {239}
	117 Move X0, X24
	118 Move V0, V13
	119 Move V1, V12
	120 Move V2, V11
	121 Move X1, X31
	122 Call Vertex.set_position, X0, X1
	123 Move X25, 0xA80000
	124 Move W8, [X25+1925]
	125 Compare W8, 0
	126 JumpIfNotEqual {132}
	127 Move X0, 0x79B000
	128 Move X0, [X0+1448]
	129 Call 0x1C17CF4
	130 Move W8, 1
	131 Move [X25+1925], W8
	132 Move X8, 0x79B000
	133 Move X8, [X8+1448]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Multiply S0, S10, S10
	140 Multiply S1, S9, S9
	141 Move X8, -48685056
	142 Add S0, S0, S1
	143 Move V1, [X8+380]
	144 Multiply S2, S8, S8
	145 Add S0, S2, S0
	146 NotImplemented "Instruction FSQRT not yet implemented."
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 NotImplemented "Instruction FDIV not yet implemented."
	150 NotImplemented "Instruction FDIV not yet implemented."
	151 Move X25, 0xA80000
	152 Move W8, [X25+1923]
	153 Compare W8, 0
	154 JumpIfNotEqual {160}
	155 Move X0, 0x79B000
	156 Move X0, [X0+1440]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X25+1923], W8
	160 Move X8, 0x79B000
	161 Move X8, [X8+1440]
	162 Move X8, [X8]
	163 Move X8, [X8+184]
	164 Move S0, [X8]
	165 Move S1, [X8+4]
	166 Move V2, [X8+8]
	167 Move X0, X24
	168 Move X1, X31
	169 Call Vertex.set_normal, X0, X1
	170 Compare X21, 0
	171 JumpIfEqual {239}
	172 Move X9, 0x7F7000
	173 Move X9, [X9+448]
	174 Move W10, [X21+28]
	175 Move X8, [X21+16]
	176 Move X9, [X9]
	177 Add W10, W10, 1
	178 Move [X21+28], W10
	179 Compare X8, 0
	180 JumpIfEqual {239}
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Move W11, [X8+24]
	183 Move X25, 0x7A5000
	184 Move X25, [X25+2136]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add W9, W10, 1
	187 Add X8, X8, X10
	188 Move [X21+24], W9
	189 Move [X8+32], X24
	190 Move X8, [X9+32]
	191 Move X0, X21
	192 Move X1, X24
	193 Move X8, [X8+192]
	194 Move X2, [X8+112]
	195 Call List`1<Object>.AddWithResize, X0, X1
	196 Move X3, [X25]
	197 Move X0, X20
	198 Move W1, W23
	199 Move W2, W23
	200 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	201 Compare X22, 0
	202 JumpIfEqual {239}
	203 Move X3, [X25]
	204 Move TEMP, 0
	205 Not TEMP
	206 Move W2, TEMP
	207 Move X0, X22
	208 Move W1, W23
	209 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	210 Move X0, X19
	211 Move X1, X21
	212 Move W2, W31
	213 Move X3, X31
	214 Call ProBuilderMesh.SetVertices, X0, X1, X2
	215 Move X0, X19
	216 Move X1, X20
	217 Move X2, X31
	218 Call ProBuilderMesh.SetSharedVertices, X0, X1
	219 Move X0, X19
	220 Move X1, X22
	221 Move X2, X31
	222 Call ProBuilderMesh.SetSharedTextures, X0, X1
	223 Move X0, X24
	224 Move X20, [X31+96]
	225 Move X19, [X31+104]
	226 Move X22, [X31+80]
	227 Move X21, [X31+88]
	228 Move X24, [X31+64]
	229 Move X23, [X31+72]
	230 Move X30, [X31+48]
	231 Move X25, [X31+56]
	232 Move D9, [X31+32]
	233 Move D8, [X31+40]
	234 Move D11, [X31+16]
	235 Move D10, [X31+24]
	236 Move D13, [X31+112]
	237 Move D12, [X31+120]
	238 Return X0
	239 Call 0x1C17F20
	240 Move X0, 0x7A0000
	241 Move X0, [X0+1320]
	242 Call 0x1C17D08
	243 Call 0x1C17F10
	244 Move X19, X0
	245 Move X0, 0x7F5000
	246 Move X0, [X0+3728]
	247 Call 0x1C17D08
	248 Move X1, X0
	249 Move X0, X19
	250 Move X2, X31
	251 Call ArgumentNullException..ctor, X0, X1
	252 Move X0, 0x7F7000
	253 Move X0, [X0+1328]
	254 Call 0x1C17D08
	255 Move X1, X0
	256 Move X0, X19
	257 Call 0x1C17DEC

