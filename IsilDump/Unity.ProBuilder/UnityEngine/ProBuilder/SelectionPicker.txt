Type: UnityEngine.ProBuilder.SelectionPicker

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<System.Int32>> PickVerticesInRect(UnityEngine.Camera cam, UnityEngine.Rect rect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selectable, UnityEngine.ProBuilder.PickerOptions options, System.Single pixelsPerPoint = 1)

Disassembly:
	0x03922F04 STP X20, X19, [X31 + 0xC0]
	0x03922F08 ADRP X19, 0xABF000
	0x03922F0C LDRB W8, [X19 + 0x8B0]
	0x03922F10 MOV V11.16B, V4.16B
	0x03922F14 MOV X22, X2
	0x03922F18 MOV X23, X1
	0x03922F1C MOV V10.16B, V1.16B
	0x03922F20 MOV V12.16B, V0.16B
	0x03922F24 MOV X21, X0
	0x03922F28 STP S2, S3, [X31 + 0x20]
	0x03922F2C TBNZ X8, 0x0, 0x3922FE0
	0x03922F30 ADRP X0, 0x82B000
	0x03922F34 LDR X0, [X0 + 0xF50]
	0x03922F38 BL 0x1C16CF4
	0x03922F3C ADRP X0, 0x82C000
	0x03922F40 LDR X0, [X0 + 0x870]
	0x03922F44 BL 0x1C16CF4
	0x03922F48 ADRP X0, 0x82C000
	0x03922F4C LDR X0, [X0 + 0x878]
	0x03922F50 BL 0x1C16CF4
	0x03922F54 ADRP X0, 0x82C000
	0x03922F58 LDR X0, [X0 + 0x880]
	0x03922F5C BL 0x1C16CF4
	0x03922F60 ADRP X0, 0x82C000
	0x03922F64 LDR X0, [X0 + 0x888]
	0x03922F68 BL 0x1C16CF4
	0x03922F6C ADRP X0, 0x82C000
	0x03922F70 LDR X0, [X0 + 0x890]
	0x03922F74 BL 0x1C16CF4
	0x03922F78 ADRP X0, 0x82C000
	0x03922F7C LDR X0, [X0 + 0x898]
	0x03922F80 BL 0x1C16CF4
	0x03922F84 ADRP X0, 0x7D1000
	0x03922F88 LDR X0, [X0 + 0xE00]
	0x03922F8C BL 0x1C16CF4
	0x03922F90 ADRP X0, 0x82C000
	0x03922F94 LDR X0, [X0 + 0x7D8]
	0x03922F98 BL 0x1C16CF4
	0x03922F9C ADRP X0, 0x82C000
	0x03922FA0 LDR X0, [X0 + 0x7E0]
	0x03922FA4 BL 0x1C16CF4
	0x03922FA8 ADRP X0, 0x7D1000
	0x03922FAC LDR X0, [X0 + 0xE18]
	0x03922FB0 BL 0x1C16CF4
	0x03922FB4 ADRP X0, 0x82C000
	0x03922FB8 LDR X0, [X0 + 0x7B8]
	0x03922FBC BL 0x1C16CF4
	0x03922FC0 ADRP X0, 0x82C000
	0x03922FC4 LDR X0, [X0 + 0x7E8]
	0x03922FC8 BL 0x1C16CF4
	0x03922FCC ADRP X0, 0x7D3000
	0x03922FD0 LDR X0, [X0 + 0x9B0]
	0x03922FD4 BL 0x1C16CF4
	0x03922FD8 MOVZ W8, 0x1
	0x03922FDC STRB W8, [X19 + 0x8B0]
	0x03922FE0 ADRP X8, 0x82C000
	0x03922FE4 LDR X8, [X8 + 0x7B8]
	0x03922FE8 UBFM X9, X22, 0x20, 0x3F
	0x03922FEC STR X9, [X31 + 0x28]
	0x03922FF0 LDR X0, [X8]
	0x03922FF4 LDR W8, [X0 + 0xE0]
	0x03922FF8 CBNZ W8, 0x3923000
	0x03922FFC BL 0x1C16DFC
	0x03923000 ANDS W31, W22, 0xFF
	0x03923004 B.EQ 0x3923028
	0x03923008 ADRP X8, 0x82B000
	0x0392300C LDR X8, [X8 + 0x7B8]
	0x03923010 LDR X0, [X8]
	0x03923014 LDR W8, [X0 + 0xE0]
	0x03923018 CBNZ W8, 0x3923020
	0x0392301C BL 0x1C16DFC
	0x03923020 LDR X8, [X31 + 0x28]
	0x03923024 CBZ W8, 0x39239B8
	0x03923028 ADRP X8, 0x82B000
	0x0392302C LDR X8, [X8 + 0x880]
	0x03923030 ADRP X19, 0x82B000
	0x03923034 LDR X0, [X8]
	0x03923038 LDR X19, [X19 + 0x878]
	0x0392303C BL 0x1C16F10
	0x03923040 LDR X1, [X19]
	0x03923044 MOV X20, X0
	0x03923048 BL 0x2AA4804
	0x0392304C CBZ X23, 0x3923BB4
	0x03923050 ADRP X10, 0x82B000
	0x03923054 LDR X8, [X23]
	0x03923058 LDR X10, [X10 + 0x7D8]
	0x0392305C LDRH W9, [X8 + 0x12E]
	0x03923060 LDR X1, [X10]
	0x03923064 CBZ X9, 0x3923088
	0x03923068 LDR X10, [X8 + 0xB0]
	0x0392306C ADD X10, X10, 0x8
	0x03923070 LDUR X11, [X10 - 0x8]
	0x03923074 CMP X11, X1
	0x03923078 B.EQ 0x3923098
	0x0392307C SUBS X9, X9, 0x1
	0x03923080 ADD X10, X10, 0x10
	0x03923084 B.NE 0x3923070
	0x03923088 MOV X0, X23
	0x0392308C MOV W2, W31
	0x03923090 BL 0x1C5C788
	0x03923094 B 0x39230A4
	0x03923098 LDRSW X9, [X10]
	0x0392309C ADD X8, X8, X9, 0x4, LSL
	0x039230A0 ADD X0, X8, 0x138
	0x039230A4 LDP X8, X1, [X0]
	0x039230A8 MOV X0, X23
	0x039230AC STR X22, [X31 + 0x10]
	0x039230B0 BLR X8
	0x039230B4 STP X0, X20, [X31]
	0x039230B8 CBZ X0, 0x3923BB8
	0x039230BC LDR V0, [X31 + 0x20]
	0x039230C0 MOV X19, X0
	0x039230C4 MOVZ W22, 0xC
	0x039230C8 FADD S13, S12, S0
	0x039230CC LDR V0, [X31 + 0x24]
	0x039230D0 FADD S14, S10, S0
	0x039230D4 LDR X8, [X19]
	0x039230D8 ADRP X10, 0x7D0000
	0x039230DC LDRH W9, [X8 + 0x12E]
	0x039230E0 LDR X10, [X10 + 0xE18]
	0x039230E4 LDR X1, [X10]
	0x039230E8 CBZ X9, 0x392310C
	0x039230EC LDR X10, [X8 + 0xB0]
	0x039230F0 ADD X10, X10, 0x8
	0x039230F4 LDUR X11, [X10 - 0x8]
	0x039230F8 CMP X11, X1
	0x039230FC B.EQ 0x392311C
	0x03923100 SUBS X9, X9, 0x1
	0x03923104 ADD X10, X10, 0x10
	0x03923108 B.NE 0x39230F4
	0x0392310C MOV X0, X19
	0x03923110 MOV W2, W31
	0x03923114 BL 0x1C5C788
	0x03923118 B 0x3923128
	0x0392311C LDRSW X9, [X10]
	0x03923120 ADD X8, X8, X9, 0x4, LSL
	0x03923124 ADD X0, X8, 0x138
	0x03923128 LDP X8, X1, [X0]
	0x0392312C MOV X0, X19
	0x03923130 BLR X8
	0x03923134 TBZ X0, 0x0, 0x3923968
	0x03923138 LDR X8, [X19]
	0x0392313C ADRP X10, 0x82B000
	0x03923140 LDRH W9, [X8 + 0x12E]
	0x03923144 LDR X10, [X10 + 0x7E0]
	0x03923148 LDR X1, [X10]
	0x0392314C CBZ X9, 0x3923170
	0x03923150 LDR X10, [X8 + 0xB0]
	0x03923154 ADD X10, X10, 0x8
	0x03923158 LDUR X11, [X10 - 0x8]
	0x0392315C CMP X11, X1
	0x03923160 B.EQ 0x3923180
	0x03923164 SUBS X9, X9, 0x1
	0x03923168 ADD X10, X10, 0x10
	0x0392316C B.NE 0x3923158
	0x03923170 MOV X0, X19
	0x03923174 MOV W2, W31
	0x03923178 BL 0x1C5C788
	0x0392317C B 0x392318C
	0x03923180 LDRSW X9, [X10]
	0x03923184 ADD X8, X8, X9, 0x4, LSL
	0x03923188 ADD X0, X8, 0x138
	0x0392318C LDP X8, X1, [X0]
	0x03923190 MOV X0, X19
	0x03923194 BLR X8
	0x03923198 MOV X23, X0
	0x0392319C CBZ X0, 0x3923BA4
	0x039231A0 LDRB W8, [X23 + 0xCC]
	0x039231A4 CBZ W8, 0x39230D4
	0x039231A8 ADRP X8, 0x82B000
	0x039231AC LDR X8, [X8 + 0x898]
	0x039231B0 LDR X0, [X8]
	0x039231B4 BL 0x1C16F10
	0x039231B8 ADRP X8, 0x82B000
	0x039231BC LDR X8, [X8 + 0x890]
	0x039231C0 MOV X19, X0
	0x039231C4 LDR X1, [X8]
	0x039231C8 BL 0x2DBDE08
	0x039231CC MOV X0, X23
	0x039231D0 MOV X1, X31
	0x039231D4 STR X19, [X31 + 0x18]
	0x039231D8 BL 0x3C32E90
	0x039231DC LDR X26, [X23 + 0x58]
	0x039231E0 MOV X25, X0
	0x039231E4 CBZ X26, 0x39231F0
	0x039231E8 LDR W1, [X26 + 0x18]
	0x039231EC B 0x39231F4
	0x039231F0 MOV W1, W31
	0x039231F4 ADRP X8, 0x7D2000
	0x039231F8 LDR X8, [X8 + 0x9B0]
	0x039231FC LDR X0, [X8]
	0x03923200 BL 0x1C16D6C
	0x03923204 MOV X27, X0
	0x03923208 MOV X19, X31
	0x0392320C ADD X20, X26, 0x28
	0x03923210 ADD X24, X0, 0x28
	0x03923214 LDR X8, [X23 + 0x58]
	0x03923218 CBZ X8, 0x3923220
	0x0392321C LDR X8, [X8 + 0x18]
	0x03923220 CMP X19, W8, SXTW
	0x03923224 B.GE 0x3923294
	0x03923228 CBZ X26, 0x3923B10
	0x0392322C LDR W8, [X26 + 0x18]
	0x03923230 CMP X19, X8
	0x03923234 B.CS 0x3923B20
	0x03923238 CBZ X25, 0x3923B1C
	0x0392323C LDP S1, S2, [X20 - 0x4]
	0x03923240 LDUR V0, [X20 - 0x8]
	0x03923244 MOV X0, X25
	0x03923248 MOV X1, X31
	0x0392324C BL 0x3C3DE4C
	0x03923250 CBZ X21, 0x3923B14
	0x03923254 MOV X0, X21
	0x03923258 MOV X1, X31
	0x0392325C BL 0x3C045DC
	0x03923260 MOV X0, X21
	0x03923264 MOV V3.16B, V11.16B
	0x03923268 MOV X1, X31
	0x0392326C BL 0x39022E0
	0x03923270 CBZ X27, 0x3923B24
	0x03923274 LDR W8, [X27 + 0x18]
	0x03923278 CMP X19, X8
	0x0392327C B.CS 0x3923B18
	0x03923280 STP S0, S1, [X24 - 0x8]
	0x03923284 STR S2, [X24], #0xC
	0x03923288 ADD X19, X19, 0x1
	0x0392328C ADD X20, X20, 0xC
	0x03923290 B 0x3923214
	0x03923294 LDR X8, [X23 + 0x28]
	0x03923298 CBZ X8, 0x3923B0C
	0x0392329C MOV X24, X31
	0x039232A0 LDR W9, [X8 + 0x18]
	0x039232A4 CMP X24, W9, SXTW
	0x039232A8 B.GE 0x392393C
	0x039232AC CMP X24, X9
	0x039232B0 B.CS 0x3923B28
	0x039232B4 ADRP X9, 0x82B000
	0x039232B8 LDR X9, [X9 + 0x7B8]
	0x039232BC ADD X8, X8, X24, 0x3, LSL
	0x039232C0 LDR X28, [X8 + 0x20]
	0x039232C4 LDR X0, [X9]
	0x039232C8 LDR W9, [X0 + 0xE0]
	0x039232CC CBNZ W9, 0x39232D4
	0x039232D0 BL 0x1C16DFC
	0x039232D4 LDR X8, [X31 + 0x28]
	0x039232D8 CMP W8, 0x1
	0x039232DC B.NE 0x3923420
	0x039232E0 CBZ X28, 0x3923B58
	0x039232E4 LDR X8, [X28 + 0x10]
	0x039232E8 CBZ X8, 0x3923B4C
	0x039232EC LDR W9, [X8 + 0x18]
	0x039232F0 CBZ W9, 0x3923B48
	0x039232F4 CBZ X27, 0x3923B54
	0x039232F8 LDRSW X8, [X8 + 0x20]
	0x039232FC LDR W9, [X27 + 0x18]
	0x03923300 CMP W8, W9
	0x03923304 B.CS 0x3923B5C
	0x03923308 CBZ X21, 0x3923B50
	0x0392330C MADD X8, X8, X22, X27
	0x03923310 LDR V8, [X8 + 0x28]
	0x03923314 MOV X0, X21
	0x03923318 MOV X1, X31
	0x0392331C BL 0x3C035DC
	0x03923320 FCMP S8, S0
	0x03923324 B.MI 0x392387C
	0x03923328 LDR X8, [X28 + 0x10]
	0x0392332C CBZ X8, 0x3923B7C
	0x03923330 LDR W9, [X8 + 0x18]
	0x03923334 CBZ W9, 0x3923B80
	0x03923338 LDRSW X8, [X8 + 0x20]
	0x0392333C LDR W9, [X27 + 0x18]
	0x03923340 CMP W8, W9
	0x03923344 B.CS 0x3923B84
	0x03923348 MADD X8, X8, X22, X27
	0x0392334C LDR V0, [X8 + 0x24]
	0x03923350 FCMP S0, S14
	0x03923354 B.PL 0x392387C
	0x03923358 LDR V1, [X8 + 0x20]
	0x0392335C FCMP S1, S12
	0x03923360 B.LT 0x392387C
	0x03923364 FCMP S1, S13
	0x03923368 B.PL 0x392387C
	0x0392336C FCMP S0, S10
	0x03923370 B.LT 0x392387C
	0x03923374 MOVZ W19, 0x1
	0x03923378 MOV X0, X28
	0x0392337C MOV X1, X31
	0x03923380 BL 0x38FF530
	0x03923384 CBZ X0, 0x3923AF8
	0x03923388 LDR W8, [X0 + 0x18]
	0x0392338C CMP W19, W8
	0x03923390 B.GE 0x392388C
	0x03923394 MOV X0, X28
	0x03923398 MOV X1, X31
	0x0392339C BL 0x38FF530
	0x039233A0 CBZ X0, 0x3923B00
	0x039233A4 LDR W8, [X0 + 0x18]
	0x039233A8 CMP W19, W8
	0x039233AC B.CS 0x3923B04
	0x039233B0 ADD X8, X0, W19, 0x2, SXTW
	0x039233B4 LDRSW X20, [X8 + 0x20]
	0x039233B8 LDR W8, [X27 + 0x18]
	0x039233BC CMP W20, W8
	0x039233C0 B.CS 0x3923AFC
	0x039233C4 MADD X8, X20, X22, X27
	0x039233C8 LDR V8, [X8 + 0x28]
	0x039233CC MOV X0, X21
	0x039233D0 MOV X1, X31
	0x039233D4 BL 0x3C035DC
	0x039233D8 FCMP S8, S0
	0x039233DC B.MI 0x392387C
	0x039233E0 LDR W8, [X27 + 0x18]
	0x039233E4 CMP W20, W8
	0x039233E8 B.CS 0x3923B08
	0x039233EC MADD X8, X20, X22, X27
	0x039233F0 LDR V0, [X8 + 0x24]
	0x039233F4 FCMP S0, S14
	0x039233F8 B.PL 0x392387C
	0x039233FC LDR V1, [X8 + 0x20]
	0x03923400 FCMP S1, S12
	0x03923404 B.LT 0x392387C
	0x03923408 FCMP S1, S13
	0x0392340C B.PL 0x392387C
	0x03923410 FCMP S0, S10
	0x03923414 ADD W19, W19, 0x1
	0x03923418 B.GE 0x3923378
	0x0392341C B 0x392387C
	0x03923420 CBZ X28, 0x3923B60
	0x03923424 MOV X0, X28
	0x03923428 MOV X1, X31
	0x0392342C BL 0x38FFA80
	0x03923430 ADRP X8, 0x82A000
	0x03923434 LDR X8, [X8 + 0xF50]
	0x03923438 MOV X20, X0
	0x0392343C LDR X0, [X8]
	0x03923440 BL 0x1C16F10
	0x03923444 MOV X29, X0
	0x03923448 MOV X1, X27
	0x0392344C MOV X2, X20
	0x03923450 MOV X3, X31
	0x03923454 BL 0x38F8C30
	0x03923458 CBZ X29, 0x3923B44
	0x0392345C LDP S2, S3, [X31 + 0x20]
	0x03923460 MOV X0, X29
	0x03923464 MOV V0.16B, V12.16B
	0x03923468 MOV V1.16B, V10.16B
	0x0392346C MOV X1, X31
	0x03923470 BL 0x38F91DC
	0x03923474 TBZ X0, 0x0, 0x392387C
	0x03923478 MOV W19, W31
	0x0392347C MOV W20, W31
	0x03923480 MOV X0, X28
	0x03923484 MOV X1, X31
	0x03923488 BL 0x38FF530
	0x0392348C CBZ X0, 0x3923AC0
	0x03923490 LDR W8, [X0 + 0x18]
	0x03923494 CMP W19, W8
	0x03923498 B.GE 0x3923538
	0x0392349C ANDS W31, W20, 0xFF
	0x039234A0 B.NE 0x3923860
	0x039234A4 MOV X0, X28
	0x039234A8 MOV X1, X31
	0x039234AC BL 0x38FF530
	0x039234B0 CBZ X0, 0x3923AC8
	0x039234B4 LDR W8, [X0 + 0x18]
	0x039234B8 CMP W19, W8
	0x039234BC B.CS 0x3923AD4
	0x039234C0 CBZ X27, 0x3923AC4
	0x039234C4 ADD X8, X0, W19, 0x2, SXTW
	0x039234C8 LDRSW X8, [X8 + 0x20]
	0x039234CC LDR W9, [X27 + 0x18]
	0x039234D0 CMP W8, W9
	0x039234D4 B.CS 0x3923AD0
	0x039234D8 CBZ X21, 0x3923ACC
	0x039234DC MADD X8, X8, X22, X27
	0x039234E0 LDP S15, S8, [X8 + 0x20]
	0x039234E4 LDR V9, [X8 + 0x28]
	0x039234E8 MOV X0, X21
	0x039234EC MOV X1, X31
	0x039234F0 BL 0x3C035DC
	0x039234F4 FCMP S9, S0
	0x039234F8 B.LE 0x392352C
	0x039234FC FCMP S15, S12
	0x03923500 CSET W8, GE
	0x03923504 FCMP S15, S13
	0x03923508 CSET W9, MI
	0x0392350C FCMP S8, S10
	0x03923510 AND W8, W8, W9, 0x0
	0x03923514 CSET W9, GE
	0x03923518 FCMP S8, S14
	0x0392351C CSET W10, MI
	0x03923520 AND W8, W8, W9, 0x0
	0x03923524 AND W20, W10, W8, 0x0
	0x03923528 B 0x3923530
	0x0392352C MOV W20, W31
	0x03923530 ADD W19, W19, 0x1
	0x03923534 B 0x3923480
	0x03923538 ANDS W31, W20, 0xFF
	0x0392353C B.NE 0x3923860
	0x03923540 MOV X0, X28
	0x03923544 MOV X1, X31
	0x03923548 BL 0x38FFA80
	0x0392354C MOV X2, X0
	0x03923550 MOV X0, X27
	0x03923554 MOV X1, X29
	0x03923558 MOV V0.16B, V12.16B
	0x0392355C MOV V1.16B, V14.16B
	0x03923560 MOV X3, X31
	0x03923564 BL 0x3908D90
	0x03923568 TBNZ X0, 0x0, 0x39235C4
	0x0392356C MOV X0, X28
	0x03923570 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move [X31+12], S1
	023 Move X23, 0xAC0000
	024 Move X22, 0x82D000
	025 Move W8, [X23+2223]
	026 Move X22, [X22+1976]
	027 Move V10, V4
	028 Move X20, X2
	029 Move X19, X1
	030 Move V11, V3
	031 Move V12, V2
	032 Move V9, V0
	033 Move X21, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {76}
	038 Move X0, 0x82D000
	039 Move X0, [X0+1984]
	040 Call 0x1C17CF4
	041 Move X0, 0x82D000
	042 Move X0, [X0+1992]
	043 Call 0x1C17CF4
	044 Move X0, 0x82D000
	045 Move X0, [X0+2000]
	046 Call 0x1C17CF4
	047 Move X0, 0x7D4000
	048 Move X0, [X0+2520]
	049 Call 0x1C17CF4
	050 Move X0, 0x7D9000
	051 Move X0, [X0+1672]
	052 Call 0x1C17CF4
	053 Move X0, 0x7D3000
	054 Move X0, [X0+3592]
	055 Call 0x1C17CF4
	056 Move X0, 0x7D2000
	057 Move X0, [X0+3584]
	058 Call 0x1C17CF4
	059 Move X0, 0x82D000
	060 Move X0, [X0+2008]
	061 Call 0x1C17CF4
	062 Move X0, 0x82D000
	063 Move X0, [X0+2016]
	064 Call 0x1C17CF4
	065 Move X0, 0x7D2000
	066 Move X0, [X0+3608]
	067 Call 0x1C17CF4
	068 Move X0, 0x82D000
	069 Move X0, [X0+1976]
	070 Call 0x1C17CF4
	071 Move X0, 0x82D000
	072 Move X0, [X0+2024]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X23+2223], W8
	076 Move X0, [X22]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 And W31, W20, 255
	082 Compare X21, 0
	083 JumpIfEqual {385}
	084 Move X22, 0x82C000
	085 Move X22, [X22+2024]
	086 Move X0, X21
	087 Move X1, X31
	088 Call Camera.get_pixelWidth, X0
	089 Move W20, W0
	090 Move X0, X21
	091 Move X1, X31
	092 Call Camera.get_pixelHeight, X0
	093 Move X8, [X22]
	094 Move W22, W0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 NotImplemented "Instruction SCVTF not yet implemented."
	101 Move W8, 0x7F800000
	102 NotImplemented "Instruction SCVTF not yet implemented."
	103 NotImplemented "Instruction FDIV not yet implemented."
	104 Move S2, W8
	105 Move W9, 0x80000000
	106 NotImplemented "Instruction FDIV not yet implemented."
	107 NotImplemented "Instruction FCVTZS not yet implemented."
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 NotImplemented "Instruction FCVTZS not yet implemented."
	110 NotImplemented "Instruction CSEL not yet implemented."
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Move X0, X21
	113 Move V0, V9
	114 Move V1, [X31+12]
	115 Move V2, V12
	116 Move V3, V11
	117 Move X1, X19
	118 Move X20, [X31+160]
	119 Move X19, [X31+168]
	120 Move X22, [X31+144]
	121 Move X21, [X31+152]
	122 Move X24, [X31+128]
	123 Move X23, [X31+136]
	124 Move X26, [X31+112]
	125 Move X25, [X31+120]
	126 Move X28, [X31+96]
	127 Move X27, [X31+104]
	128 Move X29, [X31+80]
	129 Move X30, [X31+88]
	130 Move D9, [X31+64]
	131 Move D8, [X31+72]
	132 Move D11, [X31+48]
	133 Move D10, [X31+56]
	134 Move D13, [X31+32]
	135 Move D12, [X31+40]
	136 Move D15, [X31+16]
	137 Move D14, [X31+24]
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move W2, 1
	140 Add X31, X31, 176
	141 Move X8, 0x82C000
	142 Move X8, [X8+2000]
	143 Move X0, [X8]
	144 Call 0x1C17F10
	145 Move X8, 0x82C000
	146 Move X8, [X8+1992]
	147 Move X20, X0
	148 Move X1, [X8]
	149 Call Dictionary`2<Object, Object>..ctor, X0
	150 Compare X19, 0
	151 JumpIfEqual {385}
	152 Move X10, 0x82C000
	153 Move X8, [X19]
	154 Move X10, [X10+2008]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move X1, [X10]
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move X0, X19
	166 Move W2, W31
	167 Call 0x1C5D788
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X19
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X19, X0
	176 Compare X0, 0
	177 JumpIfEqual {386}
	178 Move V0, [X31+12]
	179 Move X29, 0x7D3000
	180 Move X29, [X29+2520]
	181 Add S14, S9, S12
	182 Add S15, S0, S11
	183 Move W28, 12
	184 Move X8, [X19]
	185 Move X10, 0x7D1000
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Move X10, [X10+3608]
	188 Move X1, [X10]
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X19
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X19
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {324}
	211 Move X8, [X19]
	212 Move X10, 0x82C000
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Move X10, [X10+2016]
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X19
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X19
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move X22, X0
	235 Compare X0, 0
	236 JumpIfEqual {381}
	237 Move W8, [X22+204]
	238 Compare W8, 0
	239 JumpIfEqual {184}
	240 Move X8, 0x7D2000
	241 Move X27, [X22+48]
	242 Move X8, [X8+3592]
	243 Move X0, [X8]
	244 Call 0x1C17F10
	245 Move X8, 0x7D8000
	246 Move X8, [X8+1672]
	247 Move X23, X0
	248 Move X1, [X8]
	249 Call HashSet`1<Int32>..ctor, X0
	250 Move X26, [X22+88]
	251 Move X0, X22
	252 Move X1, X31
	253 Call Component.get_transform, X0
	254 Compare X21, 0
	255 JumpIfEqual {383}
	256 Move X24, X0
	257 Move X0, X21
	258 Move X1, X31
	259 Call Camera.get_pixelHeight, X0
	260 Compare X27, 0
	261 JumpIfEqual {382}
	262 Move W8, [X27+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W25, W31
	265 NotImplemented "Instruction SCVTF not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Add X8, X27, W25
	268 Move X0, [X8+32]
	269 Compare X0, 0
	270 JumpIfEqual {379}
	271 Move W1, W31
	272 Move X2, X31
	273 Call SharedVertex.get_Item, X0, X1
	274 Compare X26, 0
	275 JumpIfEqual {378}
	276 Move W8, [X26+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Compare X24, 0
	279 JumpIfEqual {377}
	280 Move X8, W0
	281 NotImplemented "Instruction MADD not yet implemented."
	282 Move S1, [X8+36]
	283 Move S2, [X8+40]
	284 Move V0, [X8+32]
	285 Move X0, X24
	286 Move X1, X31
	287 Call Transform.TransformPoint, X0, X1
	288 Move X0, X21
	289 Move X1, X31
	290 Call Camera.WorldToScreenPoint, X0, X1
	291 Move V11, V0
	292 Move V12, V1
	293 Move V13, V2
	294 Move X0, X21
	295 Move X1, X31
	296 Call Camera.get_nearClipPlane, X0
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 Subtract S0, S8, S12
	299 NotImplemented "Instruction FDIV not yet implemented."
	300 NotImplemented "Instruction FCMP not yet implemented."
	301 NotImplemented "Instruction FDIV not yet implemented."
	302 NotImplemented "Instruction FCMP not yet implemented."
	303 NotImplemented "Instruction FCMP not yet implemented."
	304 Move V1, [X31+12]
	305 NotImplemented "Instruction FCMP not yet implemented."
	306 Compare X23, 0
	307 JumpIfEqual {380}
	308 Move X2, [X29]
	309 Move X0, X23
	310 Move W1, W25
	311 Call HashSet`1<Int32>.Add, X0, X1
	312 Move W8, [X27+24]
	313 Add W25, W25, 1
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Compare X20, 0
	316 JumpIfEqual {384}
	317 Move X8, 0x82C000
	318 Move X8, [X8+1984]
	319 Move X3, [X8]
	320 Move X0, X20
	321 Move X1, X22
	322 Move X2, X23
	323 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	324 Move X22, X31
	325 Compare X19, 0
	326 JumpIfEqual {350}
	327 Move X10, 0x7D1000
	328 Move X8, [X19]
	329 Move X10, [X10+3584]
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Move X1, [X10]
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move X0, X19
	341 Move W2, W31
	342 Call 0x1C5D788
	343 NotImplemented "Instruction LDRSW not yet implemented."
	344 Add X8, X8, X9
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X1, [X0+8]
	348 Move X0, X19
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Compare X22, 0
	351 JumpIfNotEqual {387}
	352 Move X0, X20
	353 Move X20, [X31+160]
	354 Move X19, [X31+168]
	355 Move X22, [X31+144]
	356 Move X21, [X31+152]
	357 Move X24, [X31+128]
	358 Move X23, [X31+136]
	359 Move X26, [X31+112]
	360 Move X25, [X31+120]
	361 Move X28, [X31+96]
	362 Move X27, [X31+104]
	363 Move X29, [X31+80]
	364 Move X30, [X31+88]
	365 Move D9, [X31+64]
	366 Move D8, [X31+72]
	367 Move D11, [X31+48]
	368 Move D10, [X31+56]
	369 Move D13, [X31+32]
	370 Move D12, [X31+40]
	371 Move D15, [X31+16]
	372 Move D14, [X31+24]
	373 Add X31, X31, 176
	374 Return X0
	375 Call 0x1C17F28
	376 Call 0x1C17F28
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F20
	387 Move X0, X22
	388 Call 0x1C17F18
	389 Move X21, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X21
	392 Call 0x3EB2AD0
	393 Move X22, [X0]
	394 Call 0x3EB2AE0
	395 Move X22, X31
	396 Move X21, X0
	397 Compare X19, 0
	398 JumpIfEqual {422}
	399 Move X10, 0x7D1000
	400 Move X8, [X19]
	401 Move X10, [X10+3584]
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 Move X1, [X10]
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move X0, X19
	413 Move W2, W31
	414 Call 0x1C5D788
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Add X8, X8, X9
	417 Add X0, X8, 312
	418 Move X8, [X0]
	419 Move X1, [X0+8]
	420 Move X0, X19
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X22, 0
	423 JumpIfNotEqual {426}
	424 Move X0, X21
	425 Call 0x1D2D690
	426 Move X0, X22
	427 Call 0x1C17F18
	428 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face>> PickFacesInRect(UnityEngine.Camera cam, UnityEngine.Rect rect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selectable, UnityEngine.ProBuilder.PickerOptions options, System.Single pixelsPerPoint = 1)

Disassembly:
	0x03923EDC ADRP X0, 0x82B000
	0x03923EE0 LDR X0, [X0 + 0x838]
	0x03923EE4 BL 0x1C16CF4
	0x03923EE8 ADRP X0, 0x82B000
	0x03923EEC LDR X0, [X0 + 0x898]
	0x03923EF0 BL 0x1C16CF4
	0x03923EF4 ADRP X0, 0x7D0000
	0x03923EF8 LDR X0, [X0 + 0x5A8]
	0x03923EFC BL 0x1C16CF4
	0x03923F00 ADRP X0, 0x7D0000
	0x03923F04 LDR X0, [X0 + 0x598]
	0x03923F08 BL 0x1C16CF4
	0x03923F0C ADRP X0, 0x82B000
	0x03923F10 LDR X0, [X0 + 0x7E8]
	0x03923F14 BL 0x1C16CF4
	0x03923F18 ADRP X0, 0x82B000
	0x03923F1C LDR X0, [X0 + 0x8B0]
	0x03923F20 BL 0x1C16CF4
	0x03923F24 ADRP X0, 0x82B000
	0x03923F28 LDR X0, [X0 + 0x8B8]
	0x03923F2C BL 0x1C16CF4
	0x03923F30 MOVZ W8, 0x1
	0x03923F34 STRB W8, [X22 + 0x8BB]
	0x03923F38 STR X31, [X31 + 0x38]
	0x03923F3C ADRP X8, 0x82B000
	0x03923F40 LDR X8, [X8 + 0x7E8]
	0x03923F44 STP X31, X31, [X31 + 0x28]
	0x03923F48 STR X31, [X31 + 0x20]
	0x03923F4C LDR X0, [X8]
	0x03923F50 LDR W8, [X0 + 0xE0]
	0x03923F54 CBNZ W8, 0x3923F5C
	0x03923F58 BL 0x1C16DFC
	0x03923F5C ADD X2, X31, 0x38
	0x03923F60 MOV X0, X23
	0x03923F64 MOV X1, X21
	0x03923F68 MOV W3, W20
	0x03923F6C MOV W4, W19
	0x03923F70 BL 0x3925AD4
	0x03923F74 CBZ X0, 0x39243E8
	0x03923F78 ADRP X20, 0x7D0000
	0x03923F7C LDR X20, [X20 + 0x5A8]
	0x03923F80 MOV X1, X31
	0x03923F84 MOV X23, X0
	0x03923F88 BL 0x3C1BB18
	0x03923F8C ADRP X22, 0xAB5000
	0x03923F90 LDRB W8, [X22 + 0xA23]
	0x03923F94 MOV X19, X0
	0x03923F98 CBNZ W8, 0x3923FB0
	0x03923F9C ADRP X0, 0x7D0000
	0x03923FA0 LDR X0, [X0 + 0x5A8]
	0x03923FA4 BL 0x1C16CF4
	0x03923FA8 MOVZ W8, 0x1
	0x03923FAC STRB W8, [X22 + 0xA23]
	0x03923FB0 LDR X0, [X20]
	0x03923FB4 LDR W8, [X0 + 0xE0]
	0x03923FB8 CBZ W8, 0x3923FDC
	0x03923FBC MOVZ W8, 0x7F800000
	0x03923FC0 FRINTM S0, S11
	0x03923FC4 FMOV S1, W8
	0x03923FC8 FCVTMS W9, S11
	0x03923FCC FCMP S0, S1
	0x03923FD0 MOVZ W8, 0x80000000
	0x03923FD4 CSEL W20, W8, W9, EQ
	0x03923FD8 B 0x392400C
	0x03923FDC BL 0x1C16DFC
	0x03923FE0 LDR X0, [X20]
	0x03923FE4 MOVZ W9, 0x7F800000
	0x03923FE8 FRINTM S0, S11
	0x03923FEC FMOV S1, W9
	0x03923FF0 LDR W8, [X0 + 0xE0]
	0x03923FF4 FCVTMS W10, S11
	0x03923FF8 FCMP S0, S1
	0x03923FFC MOVZ W9, 0x80000000
	0x03924000 CSEL W20, W9, W10, EQ
	0x03924004 CBNZ W8, 0x392400C
	0x03924008 BL 0x1C16DFC
	0x0392400C MOV W0, W31
	0x03924010 MOV W1, W20
	0x03924014 MOV X2, X31
	0x03924018 BL 0x337EDF0
	0x0392401C LDR X8, [X23]
	0x03924020 MOV W24, W0
	0x03924024 MOV X0, X23
	0x03924028 LDP X9, X1, [X8 + 0x1A8]
	0x0392402C BLR X9
	0x03924030 LDRB W8, [X22 + 0xA23]
	0x03924034 SCVTF S0, W0
	0x03924038 FSUB S10, S0, S10
	0x0392403C CBNZ W8, 0x3924054
	0x03924040 ADRP X0, 0x7CF000
	0x03924044 LDR X0, [X0 + 0x5A8]
	0x03924048 BL 0x1C16CF4
	0x0392404C MOVZ W8, 0x1
	0x03924050 STRB W8, [X22 + 0xA23]
	0x03924054 ADRP X8, 0x7CF000
	0x03924058 LDR X8, [X8 + 0x5A8]
	0x0392405C FSUB S10, S10, S8
	0x03924060 LDR X0, [X8]
	0x03924064 LDR W8, [X0 + 0xE0]
	0x03924068 CBNZ W8, 0x3924070
	0x0392406C BL 0x1C16DFC
	0x03924070 MOVZ W8, 0x7F800000
	0x03924074 FRINTM S0, S10
	0x03924078 FMOV S1, W8
	0x0392407C FCVTMS W9, S10
	0x03924080 FCMP S0, S1
	0x03924084 MOVZ W8, 0x80000000
	0x03924088 CSEL W1, W8, W9, EQ
	0x0392408C MOV W0, W31
	0x03924090 MOV X2, X31
	0x03924094 BL 0x337EDF0
	0x03924098 LDR X8, [X23]
	0x0392409C STR W0, [X31 + 0x1C]
	0x039240A0 MOV X0, X23
	0x039240A4 LDP X9, X1, [X8 + 0x188]
	0x039240A8 BLR X9
	0x039240AC LDR X8, [X23]
	0x039240B0 MOV W21, W0
	0x039240B4 MOV X0, X23
	0x039240B8 LDP X9, X1, [X8 + 0x1A8]
	0x039240BC BLR X9
	0x039240C0 LDRB W8, [X22 + 0xA23]
	0x039240C4 STR W0, [X31 + 0x14]
	0x039240C8 CBNZ W8, 0x39240E0
	0x039240CC ADRP X0, 0x7CF000
	0x039240D0 LDR X0, [X0 + 0x5A8]
	0x039240D4 BL 0x1C16CF4
	0x039240D8 MOVZ W8, 0x1
	0x039240DC STRB W8, [X22 + 0xA23]
	0x039240E0 ADRP X8, 0x7CF000
	0x039240E4 LDR X8, [X8 + 0x5A8]
	0x039240E8 LDR X0, [X8]
	0x039240EC LDR W8, [X0 + 0xE0]
	0x039240F0 CBZ W8, 0x3924114
	0x039240F4 MOVZ W8, 0x7F800000
	0x039240F8 FRINTM S0, S9
	0x039240FC FMOV S1, W8
	0x03924100 FCVTMS W9, S9
	0x03924104 FCMP S0, S1
	0x03924108 MOVZ W8, 0x80000000
	0x0392410C CSEL W26, W8, W9, EQ
	0x03924110 B 0x3924150
	0x03924114 BL 0x1C16DFC
	0x03924118 LDRB W8, [X22 + 0xA23]
	0x0392411C MOVZ W9, 0x7F800000
	0x03924120 FRINTM S0, S9
	0x03924124 FMOV S1, W9
	0x03924128 FCVTMS W10, S9
	0x0392412C FCMP S0, S1
	0x03924130 MOVZ W9, 0x80000000
	0x03924134 CSEL W26, W9, W10, EQ
	0x03924138 CBNZ W8, 0x3924150
	0x0392413C ADRP X0, 0x7CF000
	0x03924140 LDR X0, [X0 + 0x5A8]
	0x03924144 BL 0x1C16CF4
	0x03924148 MOVZ W8, 0x1
	0x0392414C STRB W8, [X22 + 0xA23]
	0x03924150 ADRP X8, 0x7CF000
	0x03924154 LDR X8, [X8 + 0x5A8]
	0x03924158 ADRP X20, 0x7CF000
	0x0392415C LDR X0, [X8]
	0x03924160 LDR W8, [X0 + 0xE0]
	0x03924164 LDR X20, [X20 + 0x598]
	0x03924168 CBNZ W8, 0x3924170
	0x0392416C BL 0x1C16DFC
	0x03924170 ADRP X29, 0x82A000
	0x03924174 ADRP X28, 0x82A000
	0x03924178 ADRP X22, 0x82A000
	0x0392417C LDR X29, [X29 + 0x880]
	0x03924180 LDR X28, [X28 + 0x878]
	0x03924184 LDR X22, [X22 + 0x838]
	0x03924188 LDR X0, [X20]
	0x0392418C ADRP X25, 0x82A000
	0x03924190 LDR X25, [X25 + 0x830]
	0x03924194 MOVZ W8, 0x7F800000
	0x03924198 LDR W9, [X0 + 0xE0]
	0x0392419C FRINTM S0, S8
	0x039241A0 FMOV S1, W8
	0x039241A4 FCVTMS W10, S8
	0x039241A8 FCMP S0, S1
	0x039241AC MOVZ W8, 0x80000000
	0x039241B0 CSEL W27, W8, W10, EQ
	0x039241B4 CBNZ W9, 0x39241BC
	0x039241B8 BL 0x1C16DFC
	0x039241BC ADRP X20, 0x82A000
	0x039241C0 LDR X20, [X20 + 0x828]
	0x039241C4 MOV X0, X23
	0x039241C8 MOV X1, X31
	0x039241CC BL 0x3C39564
	0x039241D0 LDR X0, [X29]
	0x039241D4 BL 0x1C16F10
	0x039241D8 LDR X1, [X28]
	0x039241DC MOV X23, X0
	0x039241E0 BL 0x2AA4804
	0x039241E4 LDR X0, [X22]
	0x039241E8 STR X31, [X31 + 0x20]
	0x039241EC BL 0x1C16F10
	0x039241F0 LDR X1, [X25]
	0x039241F4 MOV X25, X0
	0x039241F8 BL 0x2DCCB98
	0x039241FC LDR W22, [X31 + 0x1C]
	0x03924200 ADD W28, W24, W26
	0x03924204 ADD W8, W22, W27
	0x03924208 STR W8, [X31 + 0x10]
	0x0392420C SXTW X8, W24
	0x03924210 STR X8, [X31 + 0x8]
	0x03924214 MADD W26, W22, W21, W24
	0x03924218 ADRP X24, 0x7CF000
	0x0392421C LDR X27, [X31 + 0x38]
	0x03924220 LDR X24, [X24 + 0x5A8]
	0x03924224 LDR X0, [X24]
	0x03924228 LDR W8, [X0 + 0xE0]
	0x0392422C CBNZ W8, 0x3924234
	0x03924230 BL 0x1C16DFC
	0x03924234 LDP W0, W1, [X31 + 0x10]
	0x03924238 MOV X2, X31
	0x0392423C BL 0x337EE94
	0x03924240 STP W26, W22, [X31 + 0x18]
	0x03924244 CMP W22, W0
	0x03924248 MOV W22, W26
	0x0392424C LDR X26, [X31 + 0x8]
	0x03924250 B.GE 0x39243BC
	0x03924254 LDR X0, [X24]
	0x03924258 LDR W8, [X0 + 0xE0]
	0x0392425C CBNZ W8, 0x3924264
	0x03924260 BL 0x1C16DFC
	0x03924264 MOV W0, W28
	0x03924268 MOV W1, W21
	0x0392426C MOV X2, X31
	0x03924270 BL 0x337EE94
	0x03924274 CMP X26, W0, SXTW
	0x03924278 B.GE 0x39243AC
	0x0392427C CBZ X19, 0x39243E8
	0x03924280 LDR W8, [X19 + 0x18]
	0x03924284 CMP W22, W8
	0x03924288 B.CS 0x39243EC
	0x0392428C ADRP X8, 0x82A000
	0x03924290 LDR X8, [X8 + 0x7E8]
	0x03924294 LDR X0, [X8]
	0x03924298 ADD X8, X19, W22, 0x2, SXTW
	0x0392429C LDR W29, [X8 + 0x20]
	0x039242A0 LDR W9, [X0 + 0xE0]
	0x039242A4 CBNZ W9, 0x39242AC
	0x039242A8 BL 0x1C16DFC
	0x039242AC CBZ X25, 0x39243E8
	0x039242B0 LDR X2, [X20]
	0x039242B4 AND W24, W29, 0xFF00
	0x039242B8 BFM W24, W29, 0x10, 0x7
	0x039242BC BFM W24, W29, 0x10, 0x17
	0x039242C0 MOV X0, X25
	0x039242C4 MOV W1, W24
	0x039242C8 BL 0x2DCDCE0
	0x039242CC TBZ X0, 0x0, 0x3924398
	0x039242D0 CBZ X27, 0x39243E8
	0x039242D4 ADRP X8, 0x82A000
	0x039242D8 LDR X8, [X8 + 0x8A0]
	0x039242DC ADD X2, X31, 0x28
	0x039242E0 MOV X0, X27
	0x039242E4 MOV W1, W24
	0x039242E8 LDR X3, [X8]
	0x039242EC BL 0x2B00E30
	0x039242F0 TBZ X0, 0x0, 0x3924398
	0x039242F4 CBZ X23, 0x39243E8
	0x039242F8 ADRP X8, 0x82A000
	0x039242FC LDR X1, [X31 + 0x28]
	0x03924300 LDR X8, [X8 + 0x8A8]
	0x03924304 ADD X2, X31, 0x20
	0x03924308 MOV X0, X23
	0x0392430C LDR X3, [X8]
	0x03924310 BL 0x2AA6B2C
	0x03924314 TBZ X0, 0x0, 0x3924338
	0x03924318 LDR X0, [X31 + 0x20]
	0x0392431C CBZ X0, 0x39243E8
	0x03924320 ADRP X8, 0x82A000
	0x03924324 LDR X1, [X31 + 0x30]
	0x03924328 LDR X8, [X8 + 0x888]
	0x0392432C LDR X2, [X8]
	0x03924330 BL 0x2DBEF30
	0x03924334 B 0x3924398
	0x03924338 ADRP X8, 0x82A000
	0x0392433C LDR X24, [X31 + 0x28]
	0x03924340 LDR X8, [X8 + 0x898]
	0x03924344 LDR X0, [X8]
	0x03924348 BL 0x1C16F10
	0x0392434C ADRP X8, 0x82A000
	0x03924350 LDR X8, [X8 + 0x890]
	0x03924354 MOV X29, X0
	0x03924358 LDR X1, [X8]
	0x0392435C BL 0x2DBDE08
	0x03924360 CBZ X29, 0x39243E8
	0x03924364 ADRP X8, 0x82A000
	0x03924368 LDR X1, [X31 + 0x30]
	0x0392436C LDR X8, [X8 + 0x888]
	0x03924370 MOV X0, X29
	0x03924374 LDR X2, [X8]
	0x03924378 BL 0x2DBEF30
	0x0392437C ADRP X8, 0x82A000
	0x03924380 LDR X8, [X8 + 0x870]
	0x03924384 MOV X0, X23
	0x03924388 MOV X1, X24
	0x0392438C MOV X2, X29
	0x03924390 LDR X3, [X8]
	0x03924394 BL 0x2AA5098
	0x03924398 ADRP X24, 0x7CF000
	0x0392439C LDR X24, [X24 + 0x5A8]
	0x039243A0 ADD X26, X26, 0x1
	0x039243A4 ADD W22, W22, 0x1
	0x039243A8 B 0x3924254
	0x039243AC LDP W26, W22, [X31 + 0x18]
	0x039243B0 ADD W22, W22, 0x1
	0x039243B4 ADD W26, W26, W21
	0x039243B8 B 0x3924224
	0x039243BC MOV X0, X23
	0x039243C0 LDP X20, X19, [X31 + 0xB0]
	0x039243C4 LDP X22, X21, [X31 + 0xA0]
	0x039243C8 LDP X24, X23, [X31 + 0x90]
	0x039243CC LDP X26, X25, [X31 + 0x80]
	0x039243D0 LDP X28, X27, [X31 + 0x70]
	0x039243D4 LDP X29, X30, [X31 + 0x60]
	0x039243D8 LDP D9, D8, [X31 + 0x50]
	0x039243DC LDP D11, D10, [X31 + 0x40]
	0x039243E0 ADD X31, X31, 0xC0
	0x039243E4 RET
	0x039243E8 BL 0x1C16F20
	0x039243EC BL 0x1C16F28
	0x039243F0 SUB X31, X31, 0x100
	0x039243F4 STP D15, D14, [X31 + 0x60]
	0x039243F8 STP D13, D12, [X31 + 0x70]
	0x039243FC STP D11, D10, [X31 + 0x80]
	0x03924400 STP D9, D8, [X31 + 0x90]
	0x03924404 STP X29, X30, [X31 + 0xA0]
	0x03924408 STP X28, X27, [X31 + 0xB0]
	0x0392440C STP X26, X25, [X31 + 0xC0]
	0x03924410 STP X24, X23, [X31 + 0xD0]
	0x03924414 STP X22, X21, [X31 + 0xE0]
	0x03924418 STP X20, X19, [X31 + 0xF0]
	0x0392441C ADRP X20, 0xABD000
	0x03924420 LDRB W8, [X20 + 0x8B1]
	0x03924424 MOV X22, X2
	0x03924428 MOV X19, X1
	0x0392442C MOV X21, X0
	0x03924430 STP S1, S4, [X31 + 0x48]
	0x03924434 STP S2, S3, [X31 + 0x3C]
	0x03924438 STR S0, [X31 + 0x44]
	0x0392443C TBNZ X8, 0x0, 0x39244D8
	0x03924440 ADRP X0, 0x82A000
	0x03924444 LDR X0, [X0 + 0x8C0]
	0x03924448 BL 0x1C16CF4
	0x0392444C ADRP X0, 0x82A000
	0x03924450 LDR X0, [X0 + 0x8C8]
	0x03924454 BL 0x1C16CF4
	0x03924458 ADRP X0, 0x82A000
	0x0392445C LDR X0, [X0 + 0x8D0]
	0x03924460 BL 0x1C16CF4
	0x03924464 ADRP X0, 0x829000
	0x03924468 LDR X0, [X0 + 0xD48]
	0x0392446C BL 0x1C16CF4
	0x03924470 ADRP X0, 0x829000
	0x03924474 LDR X0, [X0 + 0xD58]
	0x03924478 BL 0x1C16CF4
	0x0392447C ADRP X0, 0x829000
	0x03924480 LDR X0, [X0 + 0xD60]
	0x03924484 BL 0x1C16CF4
	0x03924488 ADRP X0, 0x7CF000
	0x0392448C LDR X0, [X0 + 0xE00]
	0x03924490 BL 0x1C16CF4
	0x03924494 ADRP X0, 0x82A000
	0x03924498 LDR X0, [X0 + 0x7D8]
	0x0392449C BL 0x1C16CF4
	0x039244A0 ADRP X0, 0x82A000
	0x039244A4 LDR X0, [X0 + 0x7E0]
	0x039244A8 BL 0x1C16CF4
	0x039244AC ADRP X0, 0x7CF000
	0x039244B0 LDR X0, [X0 + 0xE18]
	0x039244B4 BL 0x1C16CF4
	0x039244B8 ADRP X0, 0x82A000
	0x039244BC LDR X0, [X0 + 0x7B8]
	0x039244C0 BL 0x1C16CF4
	0x039244C4 ADRP X0, 0x82A000
	0x039244C8 LDR X0, [X0 + 0x7E8]
	0x039244CC BL 0x1C16CF4
	0x039244D0 MOVZ W8, 0x1
	0x039244D4 STRB W8, [X20 + 0x8B1]
	0x039244D8 ADRP X8, 0x82A000
	0x039244DC LDR X8, [X8 + 0x7B8]
	0x039244E0 UBFM X29, X22, 0x20, 0x3F
	0x039244E4 LDR X0, [X8]
	0x039244E8 LDR W8, [X0 + 0xE0]
	0x039244EC CBNZ W8, 0x39244F4
	0x039244F0 BL 0x1C16DFC
	0x039244F4 ANDS W31, W22, 0xFF
	0x039244F8 B.EQ 0x3924514
	0x039244FC ADRP X8, 0x82A000
	0x03924500 LDR X8, [X8 + 0x7B8]
	0x03924504 LDR X0, [X8]
	0x03924508 LDR W8, [X0 + 0xE0]
	0x0392450C CBZ W8, 0x3924A3C
	0x03924510 CBZ W29, 0x3924A44
	0x03924514 ADRP X8, 0x82A000
	0x03924518 LDR X8, [X8 + 0x8D0]
	0x0392451C ADRP X20, 0x82A000
	0x03924520 LDR X0, [X8]
	0x03924524 LDR X20, [X20 + 0x8C8]
	0x03924528 BL 0x1C16F10
	0x0392452C LDR X1, [X20]
	0x03924530 MOV X20, X0
	0x03924534 BL 0x2AA4804
	0x03924538 CBZ X19, 0x3924B90
	0x0392453C ADRP X10, 0x82A000
	0x03924540 LDR X8, [X19]
	0x03924544 LDR X10, [X10 + 0x7D8]
	0x03924548 LDRH W9, [X8 + 0x12E]
	0x0392454C LDR X1, [X10]
	0x03924550 CBZ X9, 0x3924574
	0x03924554 LDR X10, [X8 + 0xB0]
	0x03924558 ADD X10, X10, 0x8
	0x0392455C LDUR X11, [X10 - 0x8]
	0x03924560 CMP X11, X1
	0x03924564 B.EQ 0x3924584
	0x03924568 SUBS X9, X9, 0x1
	0x0392456C ADD X10, X10, 0x10
	0x03924570 B.NE 0x392455C
	0x03924574 MOV X0, X19
	0x03924578 MOV W2, W31
	0x0392457C BL 0x1C5C788
	0x03924580 B 0x3924590
	0x03924584 LDRSW X9, [X10]
	0x03924588 ADD X8, X8, X9, 0x4, LSL
	0x0392458C ADD X0, X8, 0x138
	0x03924590 LDP X8, X1, [X0]
	0x03924594 MOV X0, X19
	0x03924598 STP X20, X22, [X31 + 0x18]
	0x0392459C BLR X8
	0x039245A0 STR X0, [X31 + 0x28]
	0x039245A4 CBZ X0, 0x3924B94
	0x039245A8 LDR V0, [X31 + 0x3C]
	0x039245AC LDR V1, [X31 + 0x44]
	0x039245B0 MOVZ W22, 0xC
	0x039245B4 FADD S2, S1, S0
	0x039245B8 LDR V0, [X31 + 0x40]
	0x039245BC LDR V1, [X31 + 0x48]
	0x039245C0 FADD S0, S1, S0
	0x039245C4 STP S2, S0, [X31 + 0x34]
	0x039245C8 LDR X8, [X31 + 0x28]
	0x039245CC ADRP X10, 0x7CF000
	0x039245D0 LDR X8, [X8]
	0x039245D4 LDRH W9, [X8 + 0x12E]
	0x039245D8 LDR X10, [X10 + 0xE18]
	0x039245DC LDR X1, [X10]
	0x039245E0 CBZ X9, 0x3924604
	0x039245E4 LDR X10, [X8 + 0xB0]
	0x039245E8 ADD X10, X10, 0x8
	0x039245EC LDUR X11, [X10 - 0x8]
	0x039245F0 CMP X11, X1
	0x039245F4 B.EQ 0x3924614
	0x039245F8 SUBS X9, X9, 0x1
	0x039245FC ADD X10, X10, 0x10
	0x03924600 B.NE 0x39245EC
	0x03924604 LDR X0, [X31 + 0x28]
	0x03924608 MOV W2, W31
	0x0392460C BL 0x1C5C788
	0x03924610 B 0x3924620
	0x03924614 LDRSW X9, [X10]
	0x03924618 ADD X8, X8, X9, 0x4, LSL
	0x0392461C ADD X0, X8, 0x138
	0x03924620 LDP X8, X1, [X0]
	0x03924624 LDR X0, [X31 + 0x28]
	0x03924628 BLR X8
	0x0392462C TBZ X0, 0x0, 0x39249E4
	0x03924630 LDR X8, [X31 + 0x28]
	0x03924634 ADRP X10, 0x82A000
	0x03924638 LDR X8, [X8]
	0x0392463C LDRH W9, [X8 + 0x12E]
	0x03924640 LDR X10, [X10 + 0x7E0]
	0x03924644 LDR X1, [X10]
	0x03924648 CBZ X9, 0x392466C
	0x0392464C LDR X10, [X8 + 0xB0]
	0x03924650 ADD X10, X10, 0x8
	0x03924654 LDUR X11, [X10 - 0x8]
	0x03924658 CMP X11, X1
	0x0392465C B.EQ 0x392467C
	0x03924660 SUBS X9, X9, 0x1
	0x03924664 ADD X10, X10, 0x10
	0x03924668 B.NE 0x3924654
	0x0392466C LDR X0, [X31 + 0x28]
	0x03924670 MOV W2, W31
	0x03924674 BL 0x1C5C788
	0x03924678 B 0x3924688
	0x0392467C LDRSW X9, [X10]
	0x03924680 ADD X8, X8, X9, 0x4, LSL
	0x03924684 ADD X0, X8, 0x138
	0x03924688 LDP X8, X1, [X0]
	0x0392468C LDR X0, [X31 + 0x28]
	0x03924690 BLR X8
	0x03924694 MOV X23, X0
	0x03924698 CBZ X0, 0x3924B88
	0x0392469C LDRB W8, [X23 + 0xCC]
	0x039246A0 CBZ W8, 0x39245C8
	0x039246A4 MOV X0, X23
	0x039246A8 MOV X1, X31
	0x039246AC BL 0x3C32E90
	0x039246B0 ADRP X8, 0x829000
	0x039246B4 LDR X8, [X8 + 0xD60]
	0x039246B8 MOV X24, X0
	0x039246BC LDR X0, [X8]
	0x039246C0 BL 0x1C16F10
	0x039246C4 ADRP X8, 0x829000
	0x039246C8 LDR X8, [X8 + 0xD58]
	0x039246CC MOV X25, X0
	0x039246D0 LDR X1, [X8]
	0x039246D4 BL 0x2D9B014
	0x039246D8 LDR X8, [X23 + 0x28]
	0x039246DC CBZ X8, 0x39249C0
	0x039246E0 LDR W9, [X8 + 0x18]
	0x039246E4 CMP W9, 0x1
	0x039246E8 STR W9, [X31 + 0x30]
	0x039246EC B.LT 0x39249C0
	0x039246F0 MOV W19, W31
	0x039246F4 LDR W9, [X8 + 0x18]
	0x039246F8 CMP W19, W9
	0x039246FC B.CS 0x3924B74
	0x03924700 ADD X8, X8, W19, 0x3, SXTW
	0x03924704 LDR X0, [X8 + 0x20]
	0x03924708 CBZ X0, 0x3924B78
	0x0392470C MOV X1, X31
	0x03924710 BL 0x38FFA80
	0x03924714 MOV X26, X0
	0x03924718 CBZ X0, 0x3924B7C
	0x0392471C LDR X8, [X26 + 0x18]
	0x03924720 SUBS W20, W8, 0x1
	0x03924724 B.LT 0x39249A4
	0x03924728 CBZ W8, 0x3924B54
	0x0392472C MOV W28, W31
	0x03924730 LDR X8, [X23 + 0x58]
	0x03924734 CBZ X8, 0x3924B68
	0x03924738 ADD X9, X26, W28, 0x3, SXTW
	0x0392473C LDR X27, [X9 + 0x20]
	0x03924740 LDR W9, [X8 + 0x18]
	0x03924744 CMP W27, W9
	0x03924748 B.CS 0x3924B58
	0x0392474C CBZ X24, 0x3924B64
	0x03924750 SXTW X9, W27
	0x03924754 MADD X8, X9, X22, X8
	0x03924758 LDP S1, S2, [X8 + 0x24]
	0x0392475C LDR V0, [X8 + 0x20]
	0x03924760 MOV X0, X24
	0x03924764 MOV X1, X31
	0x03924768 BL 0x3C3DE4C
	0x0392476C STP S1, S0, [X31 + 0x58]
	0x03924770 STR S2, [X31 + 0x54]
	0x03924774 LDR X8, [X23 + 0x58]
	0x03924778 CBZ X8, 0x3924B60
	0x0392477C LDR W10, [X8 + 0x18]
	0x03924780 SBFM X9, X27, 0x20, 0x3F
	0x03924784 CMP W9, W10
	0x03924788 B.CS 0x3924B5C
	0x0392478C MADD X8, X9, X22, X8
	0x03924790 LDP S0, S1, [X8 + 0x20]
	0x03924794 LDR V2, [X8 + 0x28]
	0x03924798 MOV X0, X24
	0x0392479C MOV X1, X31
	0x039247A0 BL 0x3C3DE4C
	0x039247A4 STR S0, [X31 + 0x50]
	0x039247A8 CBZ X21, 0x3924B6C
	0x039247AC MOV V9.16B, V1.16B
	0x039247B0 MOV V11.16B, V2.16B
	0x039247B4 LDP S1, S0, [X31 + 0x58]
	0x039247B8 LDR V2, [X31 + 0x54]
	0x039247BC MOV X0, X21
	0x039247C0 MOV X1, X31
	0x039247C4 BL 0x3C045DC
	0x039247C8 LDR V3, [X31 + 0x4C]
	0x039247CC MOV X0, X21
	0x039247D0 MOV X1, X31
	0x039247D4 BL 0x39022E0
	0x039247D8 MOV V10.16B, V0.16B
	0x039247DC MOV V12.16B, V1.16B
	0x039247E0 MOV V13.16B, V2.16B
	0x039247E4 LDR V0, [X31 + 0x50]
	0x039247E8 MOV X0, X21
	0x039247EC MOV V1.16B, V9.16B
	0x039247F0 MOV V2.16B, V11.16B
	0x039247F4 MOV X1, X31
	0x039247F8 BL 0x3C045DC
	0x039247FC LDR V3, [X31 + 0x4C]
	0x03924800 MOV X0, X21
	0x03924804 MOV X1, X31
	0x03924808 BL 0x39022E0
	0x0392480C ADRP X8, 0x82A000
	0x03924810 LDR X8, [X8 + 0x7B8]
	0x03924814 MOV V14.16B, V0.16B
	0x03924818 MOV V15.16B, V1.16B
	0x0392481C MOV V8.16B, V2.16B
	0x03924820 LDR X0, [X8]
	0x03924824 LDR W8, [X0 + 0xE0]
	0x03924828 CBNZ W8, 0x3924830
	0x0392482C BL 0x1C16DFC
	0x03924830 CBZ W29, 0x3924944
	0x03924834 CMP W29, 0x1
	0x03924838 B.NE 0x3924988
	0x0392483C MOV X0, X21
	0x03924840 MOV X1, X31
	0x03924844 BL 0x3C035DC
	0x03924848 FCMP S13, S0
	0x0392484C B.MI 0x3924988
	0x03924850 MOV X0, X21
	0x03924854 MOV X1, X31
	0x03924858 BL 0x3C035DC
	0x0392485C FCMP S8, S0
	0x03924860 B.MI 0x3924988
	0x03924864 LDR V0, [X31 + 0x38]
	0x03924868 FCMP S12, S0
	0x0392486C B.PL 0x3924988
	0x03924870 LDR V0, [X31 + 0x48]
	0x03924874 FCMP S12, S0
	0x03924878 B.LT 0x3924988
	0x0392487C LDR V0, [X31 + 0x44]
	0x03924880 FCMP S10, S0
	0x03924884 B.LT 0x3924988
	0x03924888 LDR V0, [X31 + 0x34]
	0x0392488C FCMP S10, S0
	0x03924890 B.PL 0x3924988
	0x03924894 LDR V0, [X31 + 0x38]
	0x03924898 FCMP S15, S0
	0x0392489C B.PL 0x3924988
	0x039248A0 LDR V0, [X31 + 0x48]
	0x039248A4 FCMP S15, S0
	0x039248A8 B.LT 0x3924988
	0x039248AC LDR V0, [X31 + 0x44]
	0x039248B0 FCMP S14, S0
	0x039248B4 B.LT 0x3924988
	0x039248B8 LDR V0, [X31 + 0x34]
	0x039248BC FCMP S14, S0
	0x039248C0 B.PL 0x3924988
	0x039248C4 ADRP X8, 0x82A000
	0x039248C8 LDR X8, [X8 + 0x7B8]
	0x039248CC LDR X0, [X8]
	0x039248D0 LDR W8, [X0 + 0xE0]
	0x039248D4 CBNZ W8, 0x39248DC
	0x039248D8 BL 0x1C16DFC
	0x039248DC LDR X8, [X31 + 0x20]
	0x039248E0 ANDS W31, W8, 0xFF
	0x039248E4 B.EQ 0x3924924
	0x039248E8 LDR V0, [X31 + 0x5C]
	0x039248EC LDP S1, S2, [X31 + 0x50]
	0x039248F0 FMOV S3, 0.5
	0x039248F4 FADD S0, S0, S1
	0x039248F8 LDR V1, [X31 + 0x58]
	0x039248FC FADD S2, S2, S11
	0x03924900 FMUL S0, S0, S3
	0x03924904 FMUL S2, S2, S3
	0x03924908 FADD S1, S1, S9
	0x0392490C FMUL S1, S1, S3
	0x03924910 MOV X0, X21
	0x03924914 MOV X1, X23
	0x03924918 MOV X2, X31
	0x0392491C BL 0x3903DAC
	0x03924920 TBNZ X0, 0x0, 0x3924988
	0x03924924 CBZ X25, 0x3924B84
	0x03924928 ADRP X8, 0x829000
	0x0392492C LDR X8, [X8 + 0xD48]
	0x03924930 LDR X2, [X8]
	0x03924934 MOV X0, X25
	0x03924938 MOV X1, X27
	0x0392493C BL 0x2D9C138
	0x03924940 B 0x3924988
	0x03924944 LDP S0, S1, [X31 + 0x44]
	0x03924948 LDP S2, S3, [X31 + 0x3C]
	0x0392494C MOV V4.16B, V10.16B
	0x03924950 MOV V5.16B, V12.16B
	0x03924954 MOV V6.16B, V13.16B
	0x03924958 MOV X0, X31
	0x0392495C STP S15, S8, [X31 + 0x4]
	0x03924960 STR S14, [X31]
	0x03924964 BL 0x3908EB8
	0x03924968 TBZ X0, 0x0, 0x3924988
	0x0392496C CBZ X25, 0x3924B70
	0x03924970 ADRP X8, 0x829000
	0x03924974 LDR X8, [X8 + 0xD48]
	0x03924978 LDR X2, [X8]
	0x0392497C MOV X0, X25
	0x03924980 MOV X1, X27
	0x03924984 BL 0x2D9C138
	0x03924988 CMP W20, W28
	0x0392498C B.EQ 0x39249A4
	0x03924990 LDR W8, [X26 + 0x18]
	0x03924994 ADD W28, W28, 0x1
	0x03924998 CMP W28, W8
	0x0392499C B.CC 0x3924730
	0x039249A0 B 0x3924B54
	0x039249A4 LDR W8, [X31 + 0x30]
	0x039249A8 ADD W19, W19, 0x1
	0x039249AC CMP W19, W8
	0x039249B0 B.EQ 0x39249C0
	0x039249B4 LDR X8, [X23 + 0x28]
	0x039249B8 CBNZ X8, 0x39246F4
	0x039249BC B 0x3924B80
	0x039249C0 LDR X0, [X31 + 0x18]
	0x039249C4 CBZ X0, 0x3924B8C
	0x039249C8 ADRP X8, 0x82A000
	0x039249CC LDR X8, [X8 + 0x8C0]
	0x039249D0 LDR X3, [X8]
	0x039249D4 MOV X1, X23
	0x039249D8 MOV X2, X25
	0x039249DC BL 0x2AA5098
	0x039249E0 B 0x39245C8
	0x039249E4 MOV X22, X31
	0x039249E8 LDR X8, [X31 + 0x28]
	0x039249EC CBZ X8, 0x3924B1C
	0x039249F0 ADRP X10, 0x7CF000
	0x039249F4 LDR X8, [X8]
	0x039249F8 LDR X10, [X10 + 0xE00]
	0x039249FC LDRH W9, [X8 + 0x12E]
	0x03924A00 LDR X1, [X10]
	0x03924A04 CBZ X9, 0x3924A28
	0x03924A08 LDR X10, [X8 + 0xB0]
	0x03924A0C ADD X10, X10, 0x8
	0x03924A10 LDUR X11, [X10 - 0x8]
	0x03924A14 CMP X11, X1
	0x03924A18 B.EQ 0x3924B00
	0x03924A1C SUBS X9, X9, 0x1
	0x03924A20 ADD X10, X10, 0x10
	0x03924A24 B.NE 0x3924A10
	0x03924A28 LDR X19, [X31 + 0x28]
	0x03924A2C MOV W2, W31
	0x03924A30 MOV X0, X19
	0x03924A34 BL 0x1C5C788
	0x03924A38 B 0x3924B10
	0x03924A3C BL 0x1C16DFC
	0x03924A40 CBNZ W29, 0x3924514
	0x03924A44 CBZ X21, 0x3924B90
	0x03924A48 MOV X0, X21
	0x03924A4C MOV X1, X31
	0x03924A50 BL 0x3C0403C
	0x03924A54 MOV W20, W0
	0x03924A58 MOV X0, X21
	0x03924A5C MOV X1, X31
	0x03924A60 BL 0x3C04078
	0x03924A64 ADRP X8, 0x82A000
	0x03924A68 LDR X8, [X8 + 0x7E8]
	0x03924A6C MOV W22, W0
	0x03924A70 LDR X8, [X8]
	0x03924A74 LDR W9, [X8 + 0xE0]
	0x03924A78 CBNZ W9, 0x3924A84
	0x03924A7C MOV X0, X8
	0x03924A80 BL 0x1C16DFC
	0x03924A84 LDR V2, [X31 + 0x4C]
	0x03924A88 SCVTF S0, W20
	0x03924A8C MOVZ W8, 0x7F800000
	0x03924A90 SCVTF S1, W22
	0x03924A94 FDIV S0, S0, S2
	0x03924A98 FDIV S1, S1, S2
	0x03924A9C FMOV S2, W8
	0x03924AA0 MOVZ W9, 0x80000000
	0x03924AA4 FCVTZS W8, S0
	0x03924AA8 FCMP S0, S2
	0x03924AAC FCVTZS W10, S1
	0x03924AB0 CSEL W3, W9, W8, EQ
	0x03924AB4 FCMP S1, S2
	0x03924AB8 MOV X0, X21
	0x03924ABC LDP S0, S1, [X31 + 0x44]
	0x03924AC0 LDP S2, S3, [X31 + 0x3C]
	0x03924AC4 MOV X1, X19
	0x03924AC8 LDP X20, X19, [X31 + 0xF0]
	0x03924ACC LDP X22, X21, [X31 + 0xE0]
	0x03924AD0 LDP X24, X23, [X31 + 0xD0]
	0x03924AD4 LDP X26, X25, [X31 + 0xC0]
	0x03924AD8 LDP X28, X27, [X31 + 0xB0]
	0x03924ADC LDP X29, X30, [X31 + 0xA0]
	0x03924AE0 LDP D9, D8, [X31 + 0x90]
	0x03924AE4 LDP D11, D10, [X31 + 0x80]
	0x03924AE8 LDP D13, D12, [X31 + 0x70]
	0x03924AEC LDP D15, D14, [X31 + 0x60]
	0x03924AF0 CSEL W4, W9, W10, EQ
	0x03924AF4 MOVZ W2, 0x1
	0x03924AF8 ADD X31, X31, 0x100
	0x03924AFC B 0x3924CD4
	0x03924B00 LDRSW X9, [X10]
	0x03924B04 LDR X19, [X31 + 0x28]
	0x03924B08 ADD X8, X8, X9, 0x4, LSL
	0x03924B0C ADD X0, X8, 0x138
	0x03924B10 LDP X8, X1, [X0]
	0x03924B14 MOV X0, X19
	0x03924B18 BLR X8
	0x03924B1C CBNZ X22, 0x3924B98
	0x03924B20 LDR X0, [X31 + 0x18]
	0x03924B24 LDP X20, X19, [X31 + 0xF0]
	0x03924B28 LDP X22, X21, [X31 + 0xE0]
	0x03924B2C LDP X24, X23, [X31 + 0xD0]
	0x03924B30 LDP X26, X25, [X31 + 0xC0]
	0x03924B34 LDP X28, X27, [X31 + 0xB0]
	0x03924B38 LDP X29, X30, [X31 + 0xA0]
	0x03924B3C LDP D9, D8, [X31 + 0x90]
	0x03924B40 LDP D11, D10, [X31 + 0x80]
	0x03924B44 LDP D13, D12, [X31 + 0x70]
	0x03924B48 LDP D15, D14, [X31 + 0x60]
	0x03924B4C ADD X31, X31, 0x100
	0x03924B50 RET
	0x03924B54 BL 0x1C16F28
	0x03924B58 BL 0x1C16F28
	0x03924B5C BL 0x1C16F28
	0x03924B60 BL 0x1C16F20
	0x03924B64 BL 0x1C16F20
	0x03924B68 BL 0x1C16F20
	0x03924B6C BL 0x1C16F20
	0x03924B70 BL 0x1C16F20
	0x03924B74 BL 0x1C16F28
	0x03924B78 BL 0x1C16F20
	0x03924B7C BL 0x1C16F20
	0x03924B80 BL 0x1C16F20
	0x03924B84 BL 0x1C16F20
	0x03924B88 BL 0x1C16F20
	0x03924B8C BL 0x1C16F20
	0x03924B90 BL 0x1C16F20
	0x03924B94 BL 0x1C16F20
	0x03924B98 MOV X0, X22
	0x03924B9C BL 0x1C16F18
	0x03924BA0 B 0x3924C24
	0x03924BA4 B 0x3924C24
	0x03924BA8 B 0x3924C24
	0x03924BAC B 0x3924C24
	0x03924BB0 B 0x3924C24
	0x03924BB4 B 0x3924C24
	0x03924BB8 B 0x3924C24
	0x03924BBC B 0x3924C24
	0x03924BC0 B 0x3924C24
	0x03924BC4 B 0x3924C24
	0x03924BC8 B 0x3924C24
	0x03924BCC B 0x3924C24
	0x03924BD0 B 0x3924C24
	0x03924BD4 B 0x3924C24
	0x03924BD8 B 0x3924C24
	0x03924BDC B 0x3924C24
	0x03924BE0 B 0x3924C24
	0x03924BE4 B 0x3924C24
	0x03924BE8 B 0x3924C24
	0x03924BEC B 0x3924C24
	0x03924BF0 B 0x3924C24
	0x03924BF4 B 0x3924C24
	0x03924BF8 B 0x3924C24
	0x03924BFC B 0x3924C24
	0x03924C00 B 0x3924C24
	0x03924C04 B 0x3924C24
	0x03924C08 B 0x3924C24
	0x03924C0C B 0x3924C24
	0x03924C10 B 0x3924C24
	0x03924C14 B 0x3924C24
	0x03924C18 B 0x3924C24
	0x03924C1C B 0x3924C24
	0x03924C20 B 0x3924C24
	0x03924C24 MOV X21, X0
	0x03924C28 CMP W1, 0x1
	0x03924C2C B.NE 0x3924C44
	0x03924C30 MOV X0, X21
	0x03924C34 BL 0x3EB1AD0
	0x03924C38 LDR X22, [X0]
	0x03924C3C BL 0x3EB1AE0
	0x03924C40 B 0x39249E8
	0x03924C44 MOV X22, X31
	0x03924C48 B 0x3924C50
	0x03924C4C MOV X21, X0
	0x03924C50 LDR X8, [X31 + 0x28]
	0x03924C54 CBZ X8, 0x3924CBC
	0x03924C58 LDR X8, [X31 + 0x28]
	0x03924C5C ADRP X10, 0x7CF000
	0x03924C60 LDR X8, [X8]
	0x03924C64 LDR X10, [X10 + 0xE00]
	0x03924C68 LDRH W9, [X8 + 0x12E]
	0x03924C6C LDR X1, [X10]
	0x03924C70 CBZ X9, 0x3924C94
	0x03924C74 LDR X10, [X8 + 0xB0]
	0x03924C78 ADD X10, X10, 0x8
	0x03924C7C LDUR X11, [X10 - 0x8]
	0x03924C80 CMP X11, X1
	0x03924C84 B.EQ 0x3924CA4
	0x03924C88 SUBS X9, X9, 0x1
	0x03924C8C ADD X10, X10, 0x10
	0x03924C90 B.NE 0x3924C7C
	0x03924C94 LDR X0, [X31 + 0x28]
	0x03924C98 MOV W2, W31
	0x03924C9C BL 0x1C5C788
	0x03924CA0 B 0x3924CB0
	0x03924CA4 LDRSW X9, [X10]
	0x03924CA8 ADD X8, X8, X9, 0x4, LSL
	0x03924CAC ADD X0, X8, 0x138
	0x03924CB0 LDP X8, X1, [X0]
	0x03924CB4 LDR X0, [X31 + 0x28]
	0x03924CB8 BLR X8
	0x03924CBC CBNZ X22, 0x3924CC8
	0x03924CC0 MOV X0, X21
	0x03924CC4 BL 0x1D2C690
	0x03924CC8 MOV X0, X22
	0x03924CCC BL 0x1C16F18
	0x03924CD0 BL 0x1990590
	0x03924CD4 SUB X31, X31, 0x110
	0x03924CD8 STR D12, [X31 + 0x80]
	0x03924CDC STP D11, D10, [X31 + 0x90]
	0x03924CE0 STP D9, D8, [X31 + 0xA0]
	0x03924CE4 STP X29, X30, [X31 + 0xB0]
	0x03924CE8 STP X28, X27, [X31 + 0xC0]
	0x03924CEC STP X26, X25, [X31 + 0xD0]
	0x03924CF0 STP X24, X23, [X31 + 0xE0]
	0x03924CF4 STP X22, X21, [X31 + 0xF0]
	0x03924CF8 STP X20, X19, [X31 + 0x100]
	0x03924CFC ADRP X26, 0xABD000
	0x03924D00 ADRP X25, 0x82A000
	0x03924D04 ADRP X19, 0x82A000
	0x03924D08 LDRB W8, [X26 + 0x8BD]
	0x03924D0C LDR X25, [X25 + 0x8D0]
	0x03924D10 LDR X19, [X19 + 0x8C8]
	0x03924D14 MOV W20, W4
	0x03924D18 MOV W21, W3
	0x03924D1C MOV W23, W2
	0x03924D20 MOV X22, X1
	0x03924D24 MOV V8.16B, V3.16B
	0x03924D28 MOV V9.16B, V2.16B
	0x03924D2C MOV V10.16B, V1.16B
	0x03924D30 MOV V11.16B, V0.16B
	0x03924D34 MOV X24, X0
	0x03924D38 TBNZ X8, 0x0, 0x3924E70
	0x03924D3C ADRP X0, 0x82A000
	0x03924D40 LDR X0, [X0 + 0x8C0]
	0x03924D44 BL 0x1C16CF4
	0x03924D48 ADRP X0, 0x82A000
	0x03924D4C LDR X0, [X0 + 0x8D8]
	0x03924D50 BL 0x1C16CF4
	0x03924D54 ADRP X0, 0x82A000
	0x03924D58 LDR X0, [X0 + 0x8E0]
	0x03924D5C BL 0x1C16CF4
	0x03924D60 ADRP X0, 0x82A000
	0x03924D64 LDR X0, [X0 + 0x8E8]
	0x03924D68 BL 0x1C16CF4
	0x03924D6C ADRP X0, 0x82A000
	0x03924D70 LDR X0, [X0 + 0x8F0]
	0x03924D74 BL 0x1C16CF4
	0x03924D78 ADRP X0, 0x82A000
	0x03924D7C LDR X0, [X0 + 0x8F8]
	0x03924D80 BL 0x1C16CF4
	0x03924D84 ADRP X0, 0x82A000
	0x03924D88 LDR X0, [X0 + 0x900]
	0x03924D8C BL 0x1C16CF4
	0x03924D90 ADRP X0, 0x82A000
	0x03924D94 LDR X0, [X0 + 0x8C8]
	0x03924D98 BL 0x1C16CF4
	0x03924D9C ADRP X0, 0x82A000
	0x03924DA0 LDR X0, [X0 + 0x908]
	0x03924DA4 BL 0x1C16CF4
	0x03924DA8 ADRP X0, 0x82A000
	0x03924DAC LDR X0, [X0 + 0x910]
	0x03924DB0 BL 0x1C16CF4
	0x03924DB4 ADRP X0, 0x82A000
	0x03924DB8 LDR X0, [X0 + 0x918]
	0x03924DBC BL 0x1C16CF4
	0x03924DC0 ADRP X0, 0x82A000
	0x03924DC4 LDR X0, [X0 + 0x8D0]
	0x03924DC8 BL 0x1C16CF4
	0x03924DCC ADRP X0, 0x82A000
	0x03924DD0 LDR X0, [X0 + 0x920]
	0x03924DD4 BL 0x1C16CF4
	0x03924DD8 ADRP X0, 0x82A000
	0x03924DDC LDR X0, [X0 + 0x928]
	0x03924DE0 BL 0x1C16CF4
	0x03924DE4 ADRP X0, 0x82A000
	0x03924DE8 LDR X0, [X0 + 0x930]
	0x03924DEC BL 0x1C16CF4
	0x03924DF0 ADRP X0, 0x829000
	0x03924DF4 LDR X0, [X0 + 0xD48]
	0x03924DF8 BL 0x1C16CF4
	0x03924DFC ADRP X0, 0x829000
	0x03924E00 LDR X0, [X0 + 0xD58]
	0x03924E04 BL 0x1C16CF4
	0x03924E08 ADRP X0, 0x829000
	0x03924E0C LDR X0, [X0 + 0xD60]
	0x03924E10 BL 0x1C16CF4
	0x03924E14 ADRP X0, 0x82A000
	0x03924E18 LDR X0, [X0 + 0x938]
	0x03924E1C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X29
	011 Move [X31+120], X30
	012 Move [X31+128], X28
	013 Move [X31+136], X27
	014 Move [X31+144], X26
	015 Move [X31+152], X25
	016 Move [X31+160], X24
	017 Move [X31+168], X23
	018 Move [X31+176], X22
	019 Move [X31+184], X21
	020 Move [X31+192], X20
	021 Move [X31+200], X19
	022 Move X19, 0xABF000
	023 Move W8, [X19+2224]
	024 Move V11, V4
	025 Move X22, X2
	026 Move X23, X1
	027 Move V10, V1
	028 Move V12, V0
	029 Move X21, X0
	030 Move [X31+32], S2
	031 Move [X31+40], S3
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {80}
	036 Move X0, 0x82B000
	037 Move X0, [X0+3920]
	038 Call 0x1C17CF4
	039 Move X0, 0x82C000
	040 Move X0, [X0+2160]
	041 Call 0x1C17CF4
	042 Move X0, 0x82C000
	043 Move X0, [X0+2168]
	044 Call 0x1C17CF4
	045 Move X0, 0x82C000
	046 Move X0, [X0+2176]
	047 Call 0x1C17CF4
	048 Move X0, 0x82C000
	049 Move X0, [X0+2184]
	050 Call 0x1C17CF4
	051 Move X0, 0x82C000
	052 Move X0, [X0+2192]
	053 Call 0x1C17CF4
	054 Move X0, 0x82C000
	055 Move X0, [X0+2200]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D1000
	058 Move X0, [X0+3584]
	059 Call 0x1C17CF4
	060 Move X0, 0x82C000
	061 Move X0, [X0+2008]
	062 Call 0x1C17CF4
	063 Move X0, 0x82C000
	064 Move X0, [X0+2016]
	065 Call 0x1C17CF4
	066 Move X0, 0x7D1000
	067 Move X0, [X0+3608]
	068 Call 0x1C17CF4
	069 Move X0, 0x82C000
	070 Move X0, [X0+1976]
	071 Call 0x1C17CF4
	072 Move X0, 0x82C000
	073 Move X0, [X0+2024]
	074 Call 0x1C17CF4
	075 Move X0, 0x7D3000
	076 Move X0, [X0+2480]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+2224], W8
	080 Move X8, 0x82C000
	081 Move X8, [X8+1976]
	082 Move X9, X22
	083 ShiftRight X9, 32
	084 And X9, X9, 0x7FFFFFFF
	085 Move [X31+40], X9
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 And W31, W22, 255
	092 Move X8, 0x82B000
	093 Move X8, [X8+1976]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X31+40]
	100 Compare W8, 0
	101 JumpIfEqual {742}
	102 Move X8, 0x82B000
	103 Move X8, [X8+2176]
	104 Move X19, 0x82B000
	105 Move X0, [X8]
	106 Move X19, [X19+2168]
	107 Call 0x1C17F10
	108 Move X1, [X19]
	109 Move X20, X0
	110 Call Dictionary`2<Object, Object>..ctor, X0
	111 Compare X23, 0
	112 JumpIfEqual {893}
	113 Move X10, 0x82B000
	114 Move X8, [X23]
	115 Move X10, [X10+2008]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move X1, [X10]
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X23
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X23
	135 Move [X31+16], X22
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move [X31], X0
	138 Move [X31+8], X20
	139 Compare X0, 0
	140 JumpIfEqual {894}
	141 Move V0, [X31+32]
	142 Move X19, X0
	143 Move W22, 12
	144 Add S13, S12, S0
	145 Move V0, [X31+36]
	146 Add S14, S10, S0
	147 Move X8, [X19]
	148 Move X10, 0x7D0000
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move X10, [X10+3608]
	151 Move X1, [X10]
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X19
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {723}
	174 Move X8, [X19]
	175 Move X10, 0x82B000
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Move X10, [X10+2016]
	178 Move X1, [X10]
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X23, X0
	198 Compare X0, 0
	199 JumpIfEqual {889}
	200 Move W8, [X23+204]
	201 Compare W8, 0
	202 JumpIfEqual {147}
	203 Move X8, 0x82B000
	204 Move X8, [X8+2200]
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X8, 0x82B000
	208 Move X8, [X8+2192]
	209 Move X19, X0
	210 Move X1, [X8]
	211 Call HashSet`1<Object>..ctor, X0
	212 Move X0, X23
	213 Move X1, X31
	214 Move [X31+24], X19
	215 Call Component.get_transform, X0
	216 Move X26, [X23+88]
	217 Move X25, X0
	218 Compare X26, 0
	219 JumpIfEqual {221}
	220 Move W1, [X26+24]
	221 Move W1, W31
	222 Move X8, 0x7D2000
	223 Move X8, [X8+2480]
	224 Move X0, [X8]
	225 Call 0x1C17D6C
	226 Move X27, X0
	227 Move X19, X31
	228 Add X20, X26, 40
	229 Add X24, X0, 40
	230 Move X8, [X23+88]
	231 Compare X8, 0
	232 JumpIfEqual {234}
	233 Move X8, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Compare X26, 0
	236 JumpIfEqual {852}
	237 Move W8, [X26+24]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Compare X25, 0
	240 JumpIfEqual {855}
	241 Move S1, [X20-4]
	242 Move S2, [X20]
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 Move X0, X25
	245 Move X1, X31
	246 Call Transform.TransformPoint, X0, X1
	247 Compare X21, 0
	248 JumpIfEqual {853}
	249 Move X0, X21
	250 Move X1, X31
	251 Call Camera.WorldToScreenPoint, X0, X1
	252 Move X0, X21
	253 Move V3, V11
	254 Move X1, X31
	255 Call HandleUtility.ScreenToGuiPoint, X0, X1, V0
	256 Compare X27, 0
	257 JumpIfEqual {857}
	258 Move W8, [X27+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move [X24-8], S0
	261 Move [X24], S1
	262 Move [X24+12], S2
	263 Add X19, X19, 1
	264 Add X20, X20, 12
	265 Move X8, [X23+40]
	266 Compare X8, 0
	267 JumpIfEqual {851}
	268 Move X24, X31
	269 Move W9, [X8+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X9, 0x82B000
	273 Move X9, [X9+1976]
	274 Add X8, X8, X24
	275 Move X28, [X8+32]
	276 Move X0, [X9]
	277 Move W9, [X0+224]
	278 Compare W9, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X8, [X31+40]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Compare X28, 0
	284 JumpIfEqual {870}
	285 Move X8, [X28+16]
	286 Compare X8, 0
	287 JumpIfEqual {867}
	288 Move W9, [X8+24]
	289 Compare W9, 0
	290 JumpIfEqual {866}
	291 Compare X27, 0
	292 JumpIfEqual {869}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W9, [X27+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Compare X21, 0
	297 JumpIfEqual {868}
	298 NotImplemented "Instruction MADD not yet implemented."
	299 Move V8, [X8+40]
	300 Move X0, X21
	301 Move X1, X31
	302 Call Camera.get_nearClipPlane, X0
	303 NotImplemented "Instruction FCMP not yet implemented."
	304 Move X8, [X28+16]
	305 Compare X8, 0
	306 JumpIfEqual {879}
	307 Move W9, [X8+24]
	308 Compare W9, 0
	309 JumpIfEqual {880}
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Move W9, [X27+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction MADD not yet implemented."
	314 Move V0, [X8+36]
	315 NotImplemented "Instruction FCMP not yet implemented."
	316 Move V1, [X8+32]
	317 NotImplemented "Instruction FCMP not yet implemented."
	318 NotImplemented "Instruction FCMP not yet implemented."
	319 NotImplemented "Instruction FCMP not yet implemented."
	320 Move W19, 1
	321 Move X0, X28
	322 Move X1, X31
	323 Call Face.get_distinctIndexesInternal, X0
	324 Compare X0, 0
	325 JumpIfEqual {846}
	326 Move W8, [X0+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X28
	329 Move X1, X31
	330 Call Face.get_distinctIndexesInternal, X0
	331 Compare X0, 0
	332 JumpIfEqual {848}
	333 Move W8, [X0+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add X8, X0, W19
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W8, [X27+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 NotImplemented "Instruction MADD not yet implemented."
	340 Move V8, [X8+40]
	341 Move X0, X21
	342 Move X1, X31
	343 Call Camera.get_nearClipPlane, X0
	344 NotImplemented "Instruction FCMP not yet implemented."
	345 Move W8, [X27+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 NotImplemented "Instruction MADD not yet implemented."
	348 Move V0, [X8+36]
	349 NotImplemented "Instruction FCMP not yet implemented."
	350 Move V1, [X8+32]
	351 NotImplemented "Instruction FCMP not yet implemented."
	352 NotImplemented "Instruction FCMP not yet implemented."
	353 NotImplemented "Instruction FCMP not yet implemented."
	354 Add W19, W19, 1
	355 Compare X28, 0
	356 JumpIfEqual {872}
	357 Move X0, X28
	358 Move X1, X31
	359 Call Face.get_edgesInternal, X0
	360 Move X8, 0x82A000
	361 Move X8, [X8+3920]
	362 Move X20, X0
	363 Move X0, [X8]
	364 Call 0x1C17F10
	365 Move X29, X0
	366 Move X1, X27
	367 Move X2, X20
	368 Move X3, X31
	369 Call Bounds2D..ctor, X0, X1, X2
	370 Compare X29, 0
	371 JumpIfEqual {865}
	372 Move S2, [X31+32]
	373 Move S3, [X31+36]
	374 Move X0, X29
	375 Move V0, V12
	376 Move V1, V10
	377 Move X1, X31
	378 Call Bounds2D.Intersects, X0, X1
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {661}
	383 Move W19, W31
	384 Move W20, W31
	385 Move X0, X28
	386 Move X1, X31
	387 Call Face.get_distinctIndexesInternal, X0
	388 Compare X0, 0
	389 JumpIfEqual {832}
	390 Move W8, [X0+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 And W31, W20, 255
	393 Move X0, X28
	394 Move X1, X31
	395 Call Face.get_distinctIndexesInternal, X0
	396 Compare X0, 0
	397 JumpIfEqual {834}
	398 Move W8, [X0+24]
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Compare X27, 0
	401 JumpIfEqual {833}
	402 Add X8, X0, W19
	403 NotImplemented "Instruction LDRSW not yet implemented."
	404 Move W9, [X27+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Compare X21, 0
	407 JumpIfEqual {835}
	408 NotImplemented "Instruction MADD not yet implemented."
	409 Move S15, [X8+32]
	410 Move S8, [X8+36]
	411 Move V9, [X8+40]
	412 Move X0, X21
	413 Move X1, X31
	414 Call Camera.get_nearClipPlane, X0
	415 NotImplemented "Instruction FCMP not yet implemented."
	416 NotImplemented "Instruction FCMP not yet implemented."
	417 NotImplemented "Instruction CSET not yet implemented."
	418 NotImplemented "Instruction FCMP not yet implemented."
	419 NotImplemented "Instruction CSET not yet implemented."
	420 NotImplemented "Instruction FCMP not yet implemented."
	421 And W8, W8, W9
	422 NotImplemented "Instruction CSET not yet implemented."
	423 NotImplemented "Instruction FCMP not yet implemented."
	424 NotImplemented "Instruction CSET not yet implemented."
	425 And W8, W8, W9
	426 And W20, W10, W8
	427 Move W20, W31
	428 Add W19, W19, 1
	429 And W31, W20, 255
	430 Move X0, X28
	431 Move X1, X31
	432 Call Face.get_edgesInternal, X0
	433 Move X2, X0
	434 Move X0, X27
	435 Move X1, X29
	436 Move V0, V12
	437 Move V1, V14
	438 Move X3, X31
	439 Call Math.PointInPolygon, X0, X1, X2, X3
	440 Move TEMP, X0
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfEqual {472}
	444 Move X0, X28
	445 Move X1, X31
	446 Call Face.get_edgesInternal, X0
	447 Move X2, X0
	448 Move X0, X27
	449 Move X1, X29
	450 Move V0, V13
	451 Move V1, V14
	452 Move X3, X31
	453 Call Math.PointInPolygon, X0, X1, X2, X3
	454 Move TEMP, X0
	455 And TEMP, TEMP, 1
	456 Compare TEMP, 1
	457 JumpIfEqual {472}
	458 Move X0, X28
	459 Move X1, X31
	460 Call Face.get_edgesInternal, X0
	461 Move X2, X0
	462 Move X0, X27
	463 Move X1, X29
	464 Move V0, V13
	465 Move V1, V10
	466 Move X3, X31
	467 Call Math.PointInPolygon, X0, X1, X2, X3
	468 Move TEMP, X0
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfNotEqual {702}
	472 Move W0, 1
	473 Move W20, W31
	474 And W29, W0, 1
	475 Move X0, X28
	476 Move X1, X31
	477 Call Face.get_edgesInternal, X0
	478 Compare X0, 0
	479 JumpIfEqual {838}
	480 Move TEMP, X29
	481 And TEMP, TEMP, 1
	482 Compare TEMP, 1
	483 JumpIfEqual {649}
	484 Move W8, [X0+24]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X0, X28
	487 Move X1, X31
	488 Call Face.get_edgesInternal, X0
	489 Compare X0, 0
	490 JumpIfEqual {839}
	491 Move W8, [X0+24]
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Compare X27, 0
	494 JumpIfEqual {843}
	495 Move X19, W20
	496 Add X8, X0, X19
	497 NotImplemented "Instruction LDRSW not yet implemented."
	498 Move W9, [X27+24]
	499 NotImplemented "Instruction CMP not yet implemented."
	500 NotImplemented "Instruction MADD not yet implemented."
	501 Move S15, [X8+32]
	502 Move S8, [X8+36]
	503 Move X0, X28
	504 Move X1, X31
	505 Call Face.get_edgesInternal, X0
	506 Compare X0, 0
	507 JumpIfEqual {842}
	508 Move W8, [X0+24]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Add X8, X0, X19
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Move W9, [X27+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 NotImplemented "Instruction MADD not yet implemented."
	515 Move S6, [X8+32]
	516 Move S7, [X8+36]
	517 Move V0, V13
	518 Move V1, V14
	519 Move V2, V12
	520 Move V3, V14
	521 Move V4, V15
	522 Move V5, V8
	523 Move X0, X31
	524 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	525 Move TEMP, X0
	526 And TEMP, TEMP, 1
	527 Compare TEMP, 1
	528 JumpIfEqual {609}
	529 Move X0, X28
	530 Move X1, X31
	531 Call Face.get_edgesInternal, X0
	532 Compare X0, 0
	533 JumpIfEqual {863}
	534 Move W8, [X0+24]
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Add X8, X0, X19
	537 NotImplemented "Instruction LDRSW not yet implemented."
	538 Move W9, [X27+24]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 NotImplemented "Instruction MADD not yet implemented."
	541 Move S8, [X8+32]
	542 Move S15, [X8+36]
	543 Move X0, X28
	544 Move X1, X31
	545 Call Face.get_edgesInternal, X0
	546 Compare X0, 0
	547 JumpIfEqual {860}
	548 Move W8, [X0+24]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Add X8, X0, X19
	551 NotImplemented "Instruction LDRSW not yet implemented."
	552 Move W9, [X27+24]
	553 NotImplemented "Instruction CMP not yet implemented."
	554 NotImplemented "Instruction MADD not yet implemented."
	555 Move S6, [X8+32]
	556 Move S7, [X8+36]
	557 Move V0, V12
	558 Move V1, V14
	559 Move V2, V12
	560 Move V3, V10
	561 Move V4, V8
	562 Move V5, V15
	563 Move X0, X31
	564 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	565 Move TEMP, X0
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {609}
	569 Move X0, X28
	570 Move X1, X31
	571 Call Face.get_edgesInternal, X0
	572 Compare X0, 0
	573 JumpIfEqual {877}
	574 Move W8, [X0+24]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Add X8, X0, X19
	577 NotImplemented "Instruction LDRSW not yet implemented."
	578 Move W9, [X27+24]
	579 NotImplemented "Instruction CMP not yet implemented."
	580 NotImplemented "Instruction MADD not yet implemented."
	581 Move S8, [X8+32]
	582 Move S15, [X8+36]
	583 Move X0, X28
	584 Move X1, X31
	585 Call Face.get_edgesInternal, X0
	586 Compare X0, 0
	587 JumpIfEqual {873}
	588 Move W8, [X0+24]
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Add X8, X0, X19
	591 NotImplemented "Instruction LDRSW not yet implemented."
	592 Move W9, [X27+24]
	593 NotImplemented "Instruction CMP not yet implemented."
	594 NotImplemented "Instruction MADD not yet implemented."
	595 Move S6, [X8+32]
	596 Move S7, [X8+36]
	597 Move V0, V12
	598 Move V1, V10
	599 Move V2, V13
	600 Move V3, V10
	601 Move V4, V8
	602 Move V5, V15
	603 Move X0, X31
	604 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	605 Move TEMP, X0
	606 And TEMP, TEMP, 1
	607 Compare TEMP, 1
	608 JumpIfNotEqual {611}
	609 Move W29, 1
	610 Add W20, W20, 1
	611 Move X0, X28
	612 Move X1, X31
	613 Call Face.get_edgesInternal, X0
	614 Compare X0, 0
	615 JumpIfEqual {886}
	616 Move W8, [X0+24]
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Add X8, X0, X19
	619 NotImplemented "Instruction LDRSW not yet implemented."
	620 Move W9, [X27+24]
	621 NotImplemented "Instruction CMP not yet implemented."
	622 NotImplemented "Instruction MADD not yet implemented."
	623 Move S8, [X8+32]
	624 Move S15, [X8+36]
	625 Move X0, X28
	626 Move X1, X31
	627 Call Face.get_edgesInternal, X0
	628 Compare X0, 0
	629 JumpIfEqual {887}
	630 Move W8, [X0+24]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Add X8, X0, X19
	633 NotImplemented "Instruction LDRSW not yet implemented."
	634 Move W9, [X27+24]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 NotImplemented "Instruction MADD not yet implemented."
	637 Move S6, [X8+32]
	638 Move S7, [X8+36]
	639 Move V0, V13
	640 Move V1, V10
	641 Move V2, V12
	642 Move V3, V14
	643 Move V4, V8
	644 Move V5, V15
	645 Move X0, X31
	646 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	647 And W31, W0, 1
	648 NotImplemented "Instruction CSINC not yet implemented."
	649 Move TEMP, X29
	650 And TEMP, TEMP, 1
	651 Compare TEMP, 1
	652 JumpIfNotEqual {661}
	653 Move X0, [X31+24]
	654 Compare X0, 0
	655 JumpIfEqual {882}
	656 Move X8, 0x82B000
	657 Move X8, [X8+2184]
	658 Move X2, [X8]
	659 Move X1, X28
	660 Call HashSet`1<Object>.Add, X0, X1
	661 Move X8, [X23+40]
	662 Add X24, X24, 1
	663 Compare X8, 0
	664 JumpIfNotEqual {269}
	665 Move X8, 0x82B000
	666 Move X8, [X8+1976]
	667 Move X0, [X8]
	668 Move W8, [X0+224]
	669 Compare W8, 0
	670 JumpIfNotEqual {672}
	671 Call 0x1C17DFC
	672 Move X8, [X31+16]
	673 And W31, W8, 255
	674 Move X0, X28
	675 Move X1, X31
	676 Call Face.get_distinctIndexesInternal, X0
	677 Move X1, X0
	678 Move X0, X26
	679 Move X2, X31
	680 Call Math.Average, X0, X1
	681 Compare X25, 0
	682 JumpIfEqual {892}
	683 Move X0, X25
	684 Move X1, X31
	685 Call Transform.TransformPoint, X0, X1
	686 Move X0, X21
	687 Move X1, X23
	688 Move X2, X31
	689 Call HandleUtility.PointIsOccluded, X0, X1, X2
	690 Move TEMP, X0
	691 And TEMP, TEMP, 1
	692 Compare TEMP, 1
	693 JumpIfEqual {661}
	694 Move X0, [X31+24]
	695 Compare X0, 0
	696 JumpIfEqual {891}
	697 Move X8, 0x82B000
	698 Move X8, [X8+2184]
	699 Move X2, [X8]
	700 Move X1, X28
	701 Call HashSet`1<Object>.Add, X0, X1
	702 Move X0, X28
	703 Move X1, X31
	704 Call Face.get_edgesInternal, X0
	705 Move X2, X0
	706 Move X0, X27
	707 Move X1, X29
	708 Move V0, V12
	709 Move V1, V10
	710 Move X3, X31
	711 Call Math.PointInPolygon, X0, X1, X2, X3
	712 Move X20, [X31+8]
	713 Compare X20, 0
	714 JumpIfEqual {890}
	715 Move X8, 0x82B000
	716 Move X8, [X8+2160]
	717 Move X3, [X8]
	718 Move X2, [X31+24]
	719 Move X19, [X31]
	720 Move X0, X20
	721 Move X1, X23
	722 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	723 Move X22, X31
	724 Compare X19, 0
	725 JumpIfEqual {807}
	726 Move X10, 0x7D0000
	727 Move X8, [X19]
	728 Move X10, [X10+3584]
	729 NotImplemented "Instruction LDRH not yet implemented."
	730 Move X1, [X10]
	731 Compare X9, 0
	732 JumpIfEqual {739}
	733 Move X10, [X8+176]
	734 Add X10, X10, 8
	735 NotImplemented "Instruction LDUR not yet implemented."
	736 NotImplemented "Instruction CMP not yet implemented."
	737 Subtract X9, X9, 1
	738 Add X10, X10, 16
	739 Move X0, X19
	740 Move W2, W31
	741 Call 0x1C5D788
	742 Compare X21, 0
	743 JumpIfEqual {893}
	744 Move X0, X21
	745 Move X1, X31
	746 Call Camera.get_pixelWidth, X0
	747 Move W20, W0
	748 Move X0, X21
	749 Move X1, X31
	750 Call Camera.get_pixelHeight, X0
	751 Move X8, 0x82B000
	752 Move X8, [X8+2024]
	753 Move W22, W0
	754 Move X8, [X8]
	755 Move W9, [X8+224]
	756 Compare W9, 0
	757 JumpIfNotEqual {760}
	758 Move X0, X8
	759 Call 0x1C17DFC
	760 NotImplemented "Instruction SCVTF not yet implemented."
	761 Move W8, 0x7F800000
	762 NotImplemented "Instruction SCVTF not yet implemented."
	763 NotImplemented "Instruction FDIV not yet implemented."
	764 Move S2, W8
	765 Move W9, 0x80000000
	766 NotImplemented "Instruction FDIV not yet implemented."
	767 NotImplemented "Instruction FCVTZS not yet implemented."
	768 NotImplemented "Instruction FCMP not yet implemented."
	769 NotImplemented "Instruction FCVTZS not yet implemented."
	770 NotImplemented "Instruction CSEL not yet implemented."
	771 NotImplemented "Instruction FCMP not yet implemented."
	772 Move X0, X21
	773 Move V0, V12
	774 Move V1, V10
	775 Move S2, [X31+32]
	776 Move S3, [X31+36]
	777 Move X1, X23
	778 Move X20, [X31+192]
	779 Move X19, [X31+200]
	780 Move X22, [X31+176]
	781 Move X21, [X31+184]
	782 Move X24, [X31+160]
	783 Move X23, [X31+168]
	784 Move X26, [X31+144]
	785 Move X25, [X31+152]
	786 Move X28, [X31+128]
	787 Move X27, [X31+136]
	788 Move X29, [X31+112]
	789 Move X30, [X31+120]
	790 Move D9, [X31+96]
	791 Move D8, [X31+104]
	792 Move D11, [X31+80]
	793 Move D10, [X31+88]
	794 Move D13, [X31+64]
	795 Move D12, [X31+72]
	796 Move D15, [X31+48]
	797 Move D14, [X31+56]
	798 NotImplemented "Instruction CSEL not yet implemented."
	799 Add X31, X31, 208
	800 NotImplemented "Instruction LDRSW not yet implemented."
	801 Add X8, X8, X9
	802 Add X0, X8, 312
	803 Move X8, [X0]
	804 Move X1, [X0+8]
	805 Move X0, X19
	806 NotImplemented "Instruction BLR not yet implemented."
	807 Compare X22, 0
	808 JumpIfNotEqual {895}
	809 Move X0, X20
	810 Move X20, [X31+192]
	811 Move X19, [X31+200]
	812 Move X22, [X31+176]
	813 Move X21, [X31+184]
	814 Move X24, [X31+160]
	815 Move X23, [X31+168]
	816 Move X26, [X31+144]
	817 Move X25, [X31+152]
	818 Move X28, [X31+128]
	819 Move X27, [X31+136]
	820 Move X29, [X31+112]
	821 Move X30, [X31+120]
	822 Move D9, [X31+96]
	823 Move D8, [X31+104]
	824 Move D11, [X31+80]
	825 Move D10, [X31+88]
	826 Move D13, [X31+64]
	827 Move D12, [X31+72]
	828 Move D15, [X31+48]
	829 Move D14, [X31+56]
	830 Add X31, X31, 208
	831 Return X0
	832 Call 0x1C17F20
	833 Call 0x1C17F20
	834 Call 0x1C17F20
	835 Call 0x1C17F20
	836 Call 0x1C17F28
	837 Call 0x1C17F28
	838 Call 0x1C17F20
	839 Call 0x1C17F20
	840 Call 0x1C17F28
	841 Call 0x1C17F28
	842 Call 0x1C17F20
	843 Call 0x1C17F20
	844 Call 0x1C17F28
	845 Call 0x1C17F28
	846 Call 0x1C17F20
	847 Call 0x1C17F28
	848 Call 0x1C17F20
	849 Call 0x1C17F28
	850 Call 0x1C17F28
	851 Call 0x1C17F20
	852 Call 0x1C17F20
	853 Call 0x1C17F20
	854 Call 0x1C17F28
	855 Call 0x1C17F20
	856 Call 0x1C17F28
	857 Call 0x1C17F20
	858 Call 0x1C17F28
	859 Call 0x1C17F28
	860 Call 0x1C17F20
	861 Call 0x1C17F28
	862 Call 0x1C17F28
	863 Call 0x1C17F20
	864 Call 0x1C17F28
	865 Call 0x1C17F20
	866 Call 0x1C17F28
	867 Call 0x1C17F20
	868 Call 0x1C17F20
	869 Call 0x1C17F20
	870 Call 0x1C17F20
	871 Call 0x1C17F28
	872 Call 0x1C17F20
	873 Call 0x1C17F20
	874 Call 0x1C17F28
	875 Call 0x1C17F28
	876 Call 0x1C17F28
	877 Call 0x1C17F20
	878 Call 0x1C17F28
	879 Call 0x1C17F20
	880 Call 0x1C17F28
	881 Call 0x1C17F28
	882 Call 0x1C17F20
	883 Call 0x1C17F28
	884 Call 0x1C17F28
	885 Call 0x1C17F28
	886 Call 0x1C17F20
	887 Call 0x1C17F20
	888 Call 0x1C17F28
	889 Call 0x1C17F20
	890 Call 0x1C17F20
	891 Call 0x1C17F20
	892 Call 0x1C17F20
	893 Call 0x1C17F20
	894 Call 0x1C17F20
	895 Move X0, X22
	896 Call 0x1C17F18
	897 Move X21, X0
	898 Move X21, X0
	899 NotImplemented "Instruction CMP not yet implemented."
	900 Move X0, X21
	901 Call 0x3EB2AD0
	902 Move X22, [X0]
	903 Move X19, [X31]
	904 Call 0x3EB2AE0
	905 Move X20, [X31+8]
	906 Move X22, X31
	907 Move X21, X0
	908 Move X8, [X31]
	909 Compare X8, 0
	910 JumpIfEqual {935}
	911 Move X8, [X31]
	912 Move X10, 0x7D0000
	913 Move X8, [X8]
	914 Move X10, [X10+3584]
	915 NotImplemented "Instruction LDRH not yet implemented."
	916 Move X1, [X10]
	917 Compare X9, 0
	918 JumpIfEqual {925}
	919 Move X10, [X8+176]
	920 Add X10, X10, 8
	921 NotImplemented "Instruction LDUR not yet implemented."
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Subtract X9, X9, 1
	924 Add X10, X10, 16
	925 Move X0, [X31]
	926 Move W2, W31
	927 Call 0x1C5D788
	928 NotImplemented "Instruction LDRSW not yet implemented."
	929 Add X8, X8, X9
	930 Add X0, X8, 312
	931 Move X8, [X0]
	932 Move X1, [X0+8]
	933 Move X0, [X31]
	934 NotImplemented "Instruction BLR not yet implemented."
	935 Compare X22, 0
	936 JumpIfNotEqual {939}
	937 Move X0, X21
	938 Call 0x1D2D690
	939 Move X0, X22
	940 Call 0x1C17F18
	941 Call 0x1991590

Method: System.Collections.Generic.Dictionary`2<UnityEngine.ProBuilder.ProBuilderMesh, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Edge>> PickEdgesInRect(UnityEngine.Camera cam, UnityEngine.Rect rect, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.ProBuilderMesh> selectable, UnityEngine.ProBuilder.PickerOptions options, System.Single pixelsPerPoint = 1)

Disassembly:
	0x039253F0 B 0x39253F4
	0x039253F4 MOV X20, X0
	0x039253F8 CMP W1, 0x1
	0x039253FC B.NE 0x3925434
	0x03925400 MOV X0, X20
	0x03925404 BL 0x3EB1AD0
	0x03925408 LDR X21, [X0]
	0x0392540C BL 0x3EB1AE0
	0x03925410 ADRP X8, 0x829000
	0x03925414 LDR X8, [X8 + 0x920]
	0x03925418 ADD X0, X31, 0x60
	0x0392541C LDR X1, [X8]
	0x03925420 BL 0x2C1D070
	0x03925424 LDR X19, [X31 + 0x8]
	0x03925428 CBZ X21, 0x3925388
	0x0392542C MOV X0, X21
	0x03925430 BL 0x1C16F18
	0x03925434 MOV X21, X31
	0x03925438 B 0x3925440
	0x0392543C MOV X20, X0
	0x03925440 ADRP X8, 0x829000
	0x03925444 LDR X8, [X8 + 0x920]
	0x03925448 LDR X1, [X8]
	0x0392544C ADD X0, X31, 0x60
	0x03925450 BL 0x2C1D070
	0x03925454 CBNZ X21, 0x3925460
	0x03925458 MOV X0, X20
	0x0392545C BL 0x1D2C690
	0x03925460 MOV X0, X21
	0x03925464 BL 0x1C16F18
	0x03925468 BL 0x1990590
	0x0392546C SUB X31, X31, 0x50
	0x03925470 STP X30, X19, [X31 + 0x40]
	0x03925474 STR X31, [X31 + 0x38]
	0x03925478 CBZ X0, 0x3925504
	0x0392547C MOV X19, X1
	0x03925480 ADD X8, X31, 0x20
	0x03925484 MOV X1, X31
	0x03925488 BL 0x3C047B4
	0x0392548C LDR X8, [X31 + 0x30]
	0x03925490 LDR V0, [X31 + 0x2]
	0x03925494 ADD X0, X31, 0x0
	0x03925498 ADD X2, X31, 0x38
	0x0392549C STR X8, [X31 + 0x10]
	0x039254A0 MOVZ W8, 0x7F800000
	0x039254A4 STR V0, [X31]
	0x039254A8 MOVZ W3, 0x1
	0x039254AC FMOV S0, W8
	0x039254B0 MOV X1, X19
	0x039254B4 MOV X4, X31
	0x039254B8 MOV X5, X31
	0x039254BC BL 0x3902370
	0x039254C0 MOV W8, W0
	0x039254C4 MOV X0, X31
	0x039254C8 TBZ X8, 0x0, 0x39254F8
	0x039254CC CBZ X19, 0x3925504
	0x039254D0 LDR X9, [X31 + 0x38]
	0x039254D4 CBZ X9, 0x3925504
	0x039254D8 LDR X8, [X19 + 0x28]
	0x039254DC CBZ X8, 0x3925504
	0x039254E0 LDRSW X9, [X9 + 0x2C]
	0x039254E4 LDR W10, [X8 + 0x18]
	0x039254E8 CMP W9, W10
	0x039254EC B.CS 0x3925508
	0x039254F0 ADD X8, X8, X9, 0x3, LSL
	0x039254F4 LDR X0, [X8 + 0x20]
	0x039254F8 LDP X30, X19, [X31 + 0x40]
	0x039254FC ADD X31, X31, 0x50
	0x03925500 RET
	0x03925504 BL 0x1C16F20
	0x03925508 BL 0x1C16F28
	0x0392550C LDRB W0, [X0]
	0x03925510 RET
	0x03925514 AND W8, W1, 0x1
	0x03925518 STRB W8, [X0]
	0x0392551C RET
	0x03925520 LDR W0, [X0 + 0x4]
	0x03925524 RET
	0x03925528 STR W1, [X0 + 0x4]
	0x0392552C RET
	0x03925530 STR X30, [X31 - 0x20]!
	0x03925534 STP X20, X19, [X31 + 0x10]
	0x03925538 ADRP X20, 0xABC000
	0x0392553C ADRP X19, 0x829000
	0x03925540 LDRB W8, [X20 + 0x8B2]
	0x03925544 LDR X19, [X19 + 0x7B8]
	0x03925548 TBNZ X8, 0x0, 0x3925560
	0x0392554C ADRP X0, 0x829000
	0x03925550 LDR X0, [X0 + 0x7B8]
	0x03925554 BL 0x1C16CF4
	0x03925558 MOVZ W8, 0x1
	0x0392555C STRB W8, [X20 + 0x8B2]
	0x03925560 LDR X0, [X19]
	0x03925564 LDR W8, [X0 + 0xE0]
	0x03925568 CBNZ W8, 0x3925574
	0x0392556C BL 0x1C16DFC
	0x03925570 LDR X0, [X19]
	0x03925574 LDR X8, [X0 + 0xB8]
	0x03925578 LDP X20, X19, [X31 + 0x10]
	0x0392557C LDR X0, [X8]
	0x03925580 LDR X30, [X31], #0x20
	0x03925584 RET
	0x03925588 STP X30, X21, [X31 - 0x20]!
	0x0392558C STP X20, X19, [X31 + 0x10]
	0x03925590 ADRP X21, 0xABC000
	0x03925594 LDRB W8, [X21 + 0x8B3]
	0x03925598 MOV X19, X1
	0x0392559C MOV X20, X0
	0x039255A0 TBNZ X8, 0x0, 0x39255B8
	0x039255A4 ADRP X0, 0x829000
	0x039255A8 LDR X0, [X0 + 0x7B8]
	0x039255AC BL 0x1C16CF4
	0x039255B0 MOVZ W8, 0x1
	0x039255B4 STRB W8, [X21 + 0x8B3]
	0x039255B8 CBZ X19, 0x39255D4
	0x039255BC ADRP X21, 0x829000
	0x039255C0 LDR X21, [X21 + 0x7B8]
	0x039255C4 LDR X8, [X19]
	0x039255C8 LDR X0, [X21]
	0x039255CC CMP X8, X0
	0x039255D0 B.EQ 0x39255E4
	0x039255D4 LDP X20, X19, [X31 + 0x10]
	0x039255D8 MOV W0, W31
	0x039255DC LDP X30, X21, [X31], #0x20
	0x039255E0 RET
	0x039255E4 LDR W8, [X0 + 0xE0]
	0x039255E8 CBZ W8, 0x39255F4
	0x039255EC MOV X1, X0
	0x039255F0 B 0x3925600
	0x039255F4 BL 0x1C16DFC
	0x039255F8 LDR X1, [X21]
	0x039255FC LDR X0, [X19]
	0x03925600 LDR X8, [X0 + 0x40]
	0x03925604 LDR X9, [X1 + 0x40]
	0x03925608 MOV X0, X19
	0x0392560C CMP X8, X9
	0x03925610 B.NE 0x392562C
	0x03925614 BL 0x1C16E08
	0x03925618 LDR X1, [X0]
	0x0392561C MOV X0, X20
	0x03925620 LDP X20, X19, [X31 + 0x10]
	0x03925624 LDP X30, X21, [X31], #0x20
	0x03925628 B 0x3925630
	0x0392562C BL 0x1C171E0
	0x03925630 STR X30, [X31 - 0x30]!
	0x03925634 STP X22, X21, [X31 + 0x10]
	0x03925638 STP X20, X19, [X31 + 0x20]
	0x0392563C ADRP X22, 0xABC000
	0x03925640 ADRP X21, 0x829000
	0x03925644 LDRB W8, [X22 + 0x8B4]
	0x03925648 LDR X21, [X21 + 0x7B8]
	0x0392564C MOV X20, X1
	0x03925650 MOV X19, X0
	0x03925654 TBNZ X8, 0x0, 0x392566C
	0x03925658 ADRP X0, 0x829000
	0x0392565C LDR X0, [X0 + 0x7B8]
	0x03925660 BL 0x1C16CF4
	0x03925664 MOVZ W8, 0x1
	0x03925668 STRB W8, [X22 + 0x8B4]
	0x0392566C LDR X0, [X21]
	0x03925670 LDR W8, [X0 + 0xE0]
	0x03925674 CBNZ W8, 0x392567C
	0x03925678 BL 0x1C16DFC
	0x0392567C LDRB W8, [X19]
	0x03925680 CMP W8, 0x0
	0x03925684 CSET W8, NE
	0x03925688 ANDS W31, W20, 0xFF
	0x0392568C CSET W9, NE
	0x03925690 EOR W8, W9, W8, 0x0
	0x03925694 TBZ X8, 0x0, 0x39256A0
	0x03925698 MOV W0, W31
	0x0392569C B 0x39256C0
	0x039256A0 LDR X0, [X21]
	0x039256A4 UBFM X20, X20, 0x20, 0x3F
	0x039256A8 LDR W8, [X0 + 0xE0]
	0x039256AC CBNZ W8, 0x39256B4
	0x039256B0 BL 0x1C16DFC
	0x039256B4 LDR W8, [X19 + 0x4]
	0x039256B8 CMP W8, W20
	0x039256BC CSET W0, EQ
	0x039256C0 LDP X20, X19, [X31 + 0x20]
	0x039256C4 LDP X22, X21, [X31 + 0x10]
	0x039256C8 LDR X30, [X31], #0x30
	0x039256CC RET
	0x039256D0 SUB X31, X31, 0x30
	0x039256D4 STP X30, X21, [X31 + 0x10]
	0x039256D8 STP X20, X19, [X31 + 0x20]
	0x039256DC ADRP X21, 0xABC000
	0x039256E0 ADRP X20, 0x829000
	0x039256E4 LDRB W8, [X21 + 0x8B5]
	0x039256E8 LDR X20, [X20 + 0x7B8]
	0x039256EC MOV X19, X0
	0x039256F0 TBNZ X8, 0x0, 0x3925714
	0x039256F4 ADRP X0, 0x7CE000
	0x039256F8 LDR X0, [X0 + 0xB58]
	0x039256FC BL 0x1C16CF4
	0x03925700 ADRP X0, 0x829000
	0x03925704 LDR X0, [X0 + 0x7B8]
	0x03925708 BL 0x1C16CF4
	0x0392570C MOVZ W8, 0x1
	0x03925710 STRB W8, [X21 + 0x8B5]
	0x03925714 LDR X0, [X20]
	0x03925718 ADRP X20, 0x7CE000
	0x0392571C LDR W8, [X0 + 0xE0]
	0x03925720 LDR X20, [X20 + 0xB58]
	0x03925724 CBNZ W8, 0x392572C
	0x03925728 BL 0x1C16DFC
	0x0392572C LDRB W8, [X19]
	0x03925730 LDR X0, [X20]
	0x03925734 STRB W8, [X31 + 0xC]
	0x03925738 LDR W8, [X0 + 0xE0]
	0x0392573C CBNZ W8, 0x3925744
	0x03925740 BL 0x1C16DFC
	0x03925744 ADD X0, X31, 0xC
	0x03925748 MOV X1, X31
	0x0392574C BL 0x33176B4
	0x03925750 LDR W8, [X19 + 0x4]
	0x03925754 LDP X20, X19, [X31 + 0x20]
	0x03925758 LDP X30, X21, [X31 + 0x10]
	0x0392575C MOVZ W9, 0x18D
	0x03925760 MUL W9, W0, W9
	0x03925764 EOR W0, W9, W8, 0x0
	0x03925768 ADD X31, X31, 0x30
	0x0392576C RET
	0x03925770 SUB X31, X31, 0x30
	0x03925774 STP X30, X21, [X31 + 0x10]
	0x03925778 STP X20, X19, [X31 + 0x20]
	0x0392577C ADRP X20, 0xABC000
	0x03925780 STR X0, [X31 + 0x8]
	0x03925784 ADRP X21, 0x829000
	0x03925788 LDRB W8, [X20 + 0x8B6]
	0x0392578C LDR X21, [X21 + 0x7B8]
	0x03925790 MOV X19, X1
	0x03925794 TBNZ X8, 0x0, 0x39257AC
	0x03925798 ADRP X0, 0x829000
	0x0392579C LDR X0, [X0 + 0x7B8]
	0x039257A0 BL 0x1C16CF4
	0x039257A4 MOVZ W8, 0x1
	0x039257A8 STRB W8, [X20 + 0x8B6]
	0x039257AC LDR X0, [X21]
	0x039257B0 LDR W8, [X0 + 0xE0]
	0x039257B4 CBNZ W8, 0x39257BC
	0x039257B8 BL 0x1C16DFC
	0x039257BC ADD X0, X31, 0x8
	0x039257C0 MOV X1, X19
	0x039257C4 BL 0x3925630
	0x039257C8 LDP X20, X19, [X31 + 0x20]
	0x039257CC LDP X30, X21, [X31 + 0x10]
	0x039257D0 AND W0, W0, 0x1
	0x039257D4 ADD X31, X31, 0x30
	0x039257D8 RET
	0x039257DC SUB X31, X31, 0x30
	0x039257E0 STP X30, X21, [X31 + 0x10]
	0x039257E4 STP X20, X19, [X31 + 0x20]
	0x039257E8 ADRP X20, 0xABC000
	0x039257EC STR X0, [X31 + 0x8]
	0x039257F0 ADRP X21, 0x829000
	0x039257F4 LDRB W8, [X20 + 0x8B7]
	0x039257F8 LDR X21, [X21 + 0x7B8]
	0x039257FC MOV X19, X1
	0x03925800 TBNZ X8, 0x0, 0x3925818
	0x03925804 ADRP X0, 0x829000
	0x03925808 LDR X0, [X0 + 0x7B8]
	0x0392580C BL 0x1C16CF4
	0x03925810 MOVZ W8, 0x1
	0x03925814 STRB W8, [X20 + 0x8B7]
	0x03925818 LDR X0, [X21]
	0x0392581C LDR W8, [X0 + 0xE0]
	0x03925820 CBNZ W8, 0x3925828
	0x03925824 BL 0x1C16DFC
	0x03925828 ADD X0, X31, 0x8
	0x0392582C MOV X1, X19
	0x03925830 BL 0x3925630
	0x03925834 LDP X20, X19, [X31 + 0x20]
	0x03925838 LDP X30, X21, [X31 + 0x10]
	0x0392583C ORN W8, W31, W0, 0x0
	0x03925840 AND W0, W8, 0x1
	0x03925844 ADD X31, X31, 0x30
	0x03925848 RET
	0x0392584C STR X30, [X31 - 0x20]!
	0x03925850 STP X20, X19, [X31 + 0x10]
	0x03925854 ADRP X19, 0xABC000
	0x03925858 ADRP X20, 0x829000
	0x0392585C LDRB W8, [X19 + 0x8B8]
	0x03925860 LDR X20, [X20 + 0x7B8]
	0x03925864 TBNZ X8, 0x0, 0x392587C
	0x03925868 ADRP X0, 0x829000
	0x0392586C LDR X0, [X0 + 0x7B8]
	0x03925870 BL 0x1C16CF4
	0x03925874 MOVZ W8, 0x1
	0x03925878 STRB W8, [X19 + 0x8B8]
	0x0392587C LDR X8, [X20]
	0x03925880 LDP X20, X19, [X31 + 0x10]
	0x03925884 MOVZ W9, 0x1
	0x03925888 LDR X8, [X8 + 0xB8]
	0x0392588C STR X9, [X8]
	0x03925890 LDR X30, [X31], #0x20
	0x03925894 RET
	0x03925898 STR X30, [X31 - 0x20]!
	0x0392589C STP X20, X19, [X31 + 0x10]
	0x039258A0 ADRP X20, 0xABC000
	0x039258A4 ADRP X19, 0x829000
	0x039258A8 LDRB W8, [X20 + 0x8B9]
	0x039258AC LDR X19, [X19 + 0x7E8]
	0x039258B0 TBNZ X8, 0x0, 0x39258C8
	0x039258B4 ADRP X0, 0x829000
	0x039258B8 LDR X0, [X0 + 0x7E8]
	0x039258BC BL 0x1C16CF4
	0x039258C0 MOVZ W8, 0x1
	0x039258C4 STRB W8, [X20 + 0x8B9]
	0x039258C8 LDR X0, [X19]
	0x039258CC LDR W8, [X0 + 0xE0]
	0x039258D0 CBZ W8, 0x39258E4
	0x039258D4 LDR X8, [X0 + 0xB8]
	0x039258D8 LDRB W9, [X8 + 0x20]
	0x039258DC CBNZ W9, 0x39259DC
	0x039258E0 B 0x3925914
	0x039258E4 BL 0x1C16DFC
	0x039258E8 LDR X0, [X19]
	0x039258EC LDR X8, [X0 + 0xB8]
	0x039258F0 LDR W9, [X0 + 0xE0]
	0x039258F4 LDRB W20, [X8 + 0x20]
	0x039258F8 CBZ W9, 0x3925904
	0x039258FC CBNZ W20, 0x39259DC
	0x03925900 B 0x3925914
	0x03925904 BL 0x1C16DFC
	0x03925908 LDR X0, [X19]
	0x0392590C LDR X8, [X0 + 0xB8]
	0x03925910 CBNZ W20, 0x39259DC
	0x03925914 MOVZ W9, 0x1
	0x03925918 MOV X20, X31
	0x0392591C STRB W9, [X8 + 0x20]
	0x03925920 LDR W8, [X0 + 0xE0]
	0x03925924 CBNZ W8, 0x3925930
	0x03925928 BL 0x1C16DFC
	0x0392592C LDR X0, [X19]
	0x03925930 LDR X8, [X0 + 0xB8]
	0x03925934 LDR X8, [X8 + 0x38]
	0x03925938 CBZ X8, 0x39259EC
	0x0392593C LDRSW X9, [X8 + 0x18]
	0x03925940 CMP X20, X9
	0x03925944 B.GE 0x39259C8
	0x03925948 LDR W9, [X0 + 0xE0]
	0x0392594C CBNZ W9, 0x3925964
	0x03925950 BL 0x1C16DFC
	0x03925954 LDR X8, [X19]
	0x03925958 LDR X8, [X8 + 0xB8]
	0x0392595C LDR X8, [X8 + 0x38]
	0x03925960 CBZ X8, 0x39259EC
	0x03925964 LDR W9, [X8 + 0x18]
	0x03925968 CMP X20, X9
	0x0392596C B.CS 0x39259F0
	0x03925970 ADD X8, X8, X20, 0x2, LSL
	0x03925974 LDR W0, [X8 + 0x20]
	0x03925978 MOV X1, X31
	0x0392597C BL 0x3C3BFA4
	0x03925980 TBNZ X0, 0x0, 0x3925990
	0x03925984 LDR X0, [X19]
	0x03925988 ADD X20, X20, 0x1
	0x0392598C B 0x3925920
	0x03925990 LDR X0, [X19]
	0x03925994 LDR W8, [X0 + 0xE0]
	0x03925998 CBNZ W8, 0x39259A4
	0x0392599C BL 0x1C16DFC
	0x039259A0 LDR X0, [X19]
	0x039259A4 LDR X8, [X0 + 0xB8]
	0x039259A8 LDR X9, [X8 + 0x38]
	0x039259AC CBZ X9, 0x39259EC
	0x039259B0 LDR W10, [X9 + 0x18]
	0x039259B4 CMP W20, W10
	0x039259B8 B.CS 0x39259F0
	0x039259BC ADD X9, X9, X20, 0x2, LSL
	0x039259C0 LDR W9, [X9 + 0x20]
	0x039259C4 STR W9, [X8 + 0x30]
	0x039259C8 LDR W8, [X0 + 0xE0]
	0x039259CC CBNZ W8, 0x39259D8
	0x039259D0 BL 0x1C16DFC
	0x039259D4 LDR X0, [X19]
	0x039259D8 LDR X8, [X0 + 0xB8]
	0x039259DC LDR W0, [X8 + 0x30]
	0x039259E0 LDP X20, X19, [X31 + 0x10]
	0x039259E4 LDR X30, [X31], #0x20
	0x039259E8 RET
	0x039259EC BL 0x1C16F20
	0x039259F0 BL 0x1C16F28
	0x039259F4 MOVZ W0, 0x5
	0x039259F8 RET
	0x039259FC STR X30, [X31 - 0x20]!
	0x03925A00 STP X20, X19, [X31 + 0x10]
	0x03925A04 ADRP X19, 0xABC000
	0x03925A08 ADRP X20, 0x829000
	0x03925A0C LDRB W8, [X19 + 0x8BA]
	0x03925A10 LDR X20, [X20 + 0x7E8]
	0x03925A14 TBNZ X8, 0x0, 0x3925A44
	0x03925A18 ADRP X0, 0x829000
	0x03925A1C LDR X0, [X0 + 0x958]
	0x03925A20 BL 0x1C16CF4
	0x03925A24 ADRP X0, 0x829000
	0x03925A28 LDR X0, [X0 + 0x960]
	0x03925A2C BL 0x1C16CF4
	0x03925A30 ADRP X0, 0x829000
	0x03925A34 LDR X0, [X0 + 0x7E8]
	0x03925A38 BL 0x1C16CF4
	0x03925A3C MOVZ W8, 0x1
	0x03925A40 STRB W8, [X19 + 0x8BA]
	0x03925A44 LDR X0, [X20]
	0x03925A48 LDR W8, [X0 + 0xE0]
	0x03925A4C CBNZ W8, 0x3925A58
	0x03925A50 BL 0x1C16DFC
	0x03925A54 LDR X0, [X20]
	0x03925A58 LDR X8, [X0 + 0xB8]
	0x03925A5C LDR X8, [X8 + 0x28]
	0x03925A60 CBNZ X8, 0x3925AA8
	0x03925A64 LDR W8, [X0 + 0xE0]
	0x03925A68 CBNZ W8, 0x3925A70
	0x03925A6C BL 0x1C16DFC
	0x03925A70 ADRP X8, 0x829000
	0x03925A74 LDR X8, [X8 + 0x960]
	0x03925A78 LDR X0, [X8]
	0x03925A7C BL 0x1C16F10
	0x03925A80 MOV X1, X31
	0x03925A84 MOV X19, X0
	0x03925A88 BL 0x39281E8
	0x03925A8C LDR X0, [X20]
	0x03925A90 LDR W8, [X0 + 0xE0]
	0x03925A94 CBNZ W8, 0x3925AA0
	0x03925A98 BL 0x1C16DFC
	0x03925A9C LDR X0, [X20]
	0x03925AA0 LDR X8, [X0 + 0xB8]
	0x03925AA4 STR X19, [X8 + 0x28]
	0x03925AA8 LDR W8, [X0 + 0xE0]
	0x03925AAC CBNZ W8, 0x3925AB8
	0x03925AB0 BL 0x1C16DFC
	0x03925AB4 LDR X0, [X20]
	0x03925AB8 LDR X8, [X0 + 0xB8]
	0x03925ABC LDP X20, X19, [X31 + 0x10]
	0x03925AC0 LDR X0, [X8 + 0x28]
	0x03925AC4 LDR X30, [X31], #0x20
	0x03925AC8 RET
	0x03925ACC MOV W0, W31
	0x03925AD0 RET
	0x03925AD4 STP X30, X25, [X31 - 0x40]!
	0x03925AD8 STP X24, X23, [X31 + 0x10]
	0x03925ADC STP X22, X21, [X31 + 0x20]
	0x03925AE0 STP X20, X19, [X31 + 0x30]
	0x03925AE4 ADRP X25, 0xABC000
	0x03925AE8 ADRP X24, 0x829000
	0x03925AEC LDRB W8, [X25 + 0x8BE]
	0x03925AF0 LDR X24, [X24 + 0x7E8]
	0x03925AF4 MOV W20, W4
	0x03925AF8 MOV W21, W3
	0x03925AFC MOV X19, X2
	0x03925B00 MOV X23, X1
	0x03925B04 MOV X22, X0
	0x03925B08 TBNZ X8, 0x0, 0x3925B68
	0x03925B0C ADRP X0, 0x828000
	0x03925B10 LDR X0, [X0 + 0xAC8]
	0x03925B14 BL 0x1C16CF4
	0x03925B18 ADRP X0, 0x7D0000
	0x03925B1C LDR X0, [X0 + 0x168]
	0x03925B20 BL 0x1C16CF4
	0x03925B24 ADRP X0, 0x829000
	0x03925B28 LDR X0, [X0 + 0x968]
	0x03925B2C BL 0x1C16CF4
	0x03925B30 ADRP X0, 0x7CE000
	0x03925B34 LDR X0, [X0 + 0x598]
	0x03925B38 BL 0x1C16CF4
	0x03925B3C ADRP X0, 0x829000
	0x03925B40 LDR X0, [X0 + 0x7E8]
	0x03925B44 BL 0x1C16CF4
	0x03925B48 ADRP X0, 0x829000
	0x03925B4C LDR X0, [X0 + 0x970]
	0x03925B50 BL 0x1C16CF4
	0x03925B54 ADRP X0, 0x7D4000
	0x03925B58 LDR X0, [X0 + 0x950]
	0x03925B5C BL 0x1C16CF4
	0x03925B60 MOVZ W8, 0x1
	0x03925B64 STRB W8, [X25 + 0x8BE]
	0x03925B68 LDR X0, [X24]
	0x03925B6C ADRP X25, 0x828000
	0x03925B70 LDR W8, [X0 + 0xE0]
	0x03925B74 LDR X25, [X25 + 0xAC8]
	0x03925B78 CBNZ W8, 0x3925B80
	0x03925B7C BL 0x1C16DFC
	0x03925B80 MOV X0, X23
	0x03925B84 MOV X1, X19
	0x03925B88 BL 0x39262F4
	0x03925B8C LDR X8, [X25]
	0x03925B90 MOV X19, X0
	0x03925B94 LDR W9, [X8 + 0xE0]
	0x03925B98 CBNZ W9, 0x3925BA4
	0x03925B9C MOV X0, X8
	0x03925BA0 BL 0x1C16DFC
	0x03925BA4 MOV X0, X31
	0x03925BA8 BL 0x38FAE1C
	0x03925BAC CBZ X0, 0x3925D18
	0x03925BB0 LDR X8, [X24]
	0x03925BB4 ADRP X9, 0x7D4000
	0x03925BB8 MOV X2, X31
	0x03925BBC LDR X8, [X8 + 0xB8]
	0x03925BC0 LDR X9, [X9 + 0x950]
	0x03925BC4 LDP S2, S3, [X8 + 0x18]
	0x03925BC8 LDP S0, S1, [X8 + 0x10]
	0x03925BCC LDR X1, [X9]
	0x03925BD0 BL 0x3C1498C
	0x03925BD4 BL 0x39259FC
	0x03925BD8 MOV X23, X0
	0x03925BDC MOV X0, X31
	0x03925BE0 BL 0x38FADC0
	0x03925BE4 CBZ X23, 0x3925D18
	0x03925BE8 ADRP X9, 0x829000
	0x03925BEC ADRP X10, 0x829000
	0x03925BF0 LDR X8, [X23]
	0x03925BF4 LDR X9, [X9 + 0x968]
	0x03925BF8 LDR X10, [X10 + 0x970]
	0x03925BFC MOV X24, X0
	0x03925C00 LDR X1, [X9]
	0x03925C04 LDRH W9, [X8 + 0x12E]
	0x03925C08 LDR X25, [X10]
	0x03925C0C CBZ X9, 0x3925C30
	0x03925C10 LDR X10, [X8 + 0xB0]
	0x03925C14 ADD X10, X10, 0x8
	0x03925C18 LDUR X11, [X10 - 0x8]
	0x03925C1C CMP X11, X1
	0x03925C20 B.EQ 0x3925C40
	0x03925C24 SUBS X9, X9, 0x1
	0x03925C28 ADD X10, X10, 0x10
	0x03925C2C B.NE 0x3925C18
	0x03925C30 MOV X0, X23
	0x03925C34 MOV W2, W31
	0x03925C38 BL 0x1C5C788
	0x03925C3C B 0x3925C4C
	0x03925C40 LDRSW X9, [X10]
	0x03925C44 ADD X8, X8, X9, 0x4, LSL
	0x03925C48 ADD X0, X8, 0x138
	0x03925C4C LDP X8, X6, [X0]
	0x03925C50 MOV X0, X23
	0x03925C54 MOV X1, X22
	0x03925C58 MOV X2, X24
	0x03925C5C MOV X3, X25
	0x03925C60 MOV W4, W21
	0x03925C64 MOV W5, W20
	0x03925C68 BLR X8
	0x03925C6C CBZ X19, 0x3925D18
	0x03925C70 LDR W8, [X19 + 0x18]
	0x03925C74 MOV X20, X0
	0x03925C78 CMP W8, 0x1
	0x03925C7C B.LT 0x3925D00
	0x03925C80 ADRP X24, 0x7D0000
	0x03925C84 ADRP X25, 0x7CE000
	0x03925C88 LDR X24, [X24 + 0x168]
	0x03925C8C LDR X25, [X25 + 0x598]
	0x03925C90 MOV W23, W31
	0x03925C94 CMP W23, W8
	0x03925C98 B.CS 0x3925D1C
	0x03925C9C ADD X8, X19, W23, 0x3, SXTW
	0x03925CA0 LDR X21, [X8 + 0x20]
	0x03925CA4 CBZ X21, 0x3925D18
	0x03925CA8 LDR X1, [X24]
	0x03925CAC MOV X0, X21
	0x03925CB0 BL 0x21E52E4
	0x03925CB4 CBZ X0, 0x3925D18
	0x03925CB8 MOV X1, X31
	0x03925CBC BL 0x3C16D04
	0x03925CC0 LDR X8, [X25]
	0x03925CC4 MOV X22, X0
	0x03925CC8 LDR W9, [X8 + 0xE0]
	0x03925CCC CBNZ W9, 0x3925CD8
	0x03925CD0 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+96], D15
	003 Move [X31+104], D14
	004 Move [X31+112], D13
	005 Move [X31+120], D12
	006 Move [X31+128], D11
	007 Move [X31+136], D10
	008 Move [X31+144], D9
	009 Move [X31+152], D8
	010 Move [X31+160], X29
	011 Move [X31+168], X30
	012 Move [X31+176], X28
	013 Move [X31+184], X27
	014 Move [X31+192], X26
	015 Move [X31+200], X25
	016 Move [X31+208], X24
	017 Move [X31+216], X23
	018 Move [X31+224], X22
	019 Move [X31+232], X21
	020 Move [X31+240], X20
	021 Move [X31+248], X19
	022 Move X20, 0xABD000
	023 Move W8, [X20+2225]
	024 Move X22, X2
	025 Move X19, X1
	026 Move X21, X0
	027 Move [X31+72], S1
	028 Move [X31+80], S4
	029 Move [X31+60], S2
	030 Move [X31+68], S3
	031 Move [X31+68], S0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {74}
	036 Move X0, 0x82A000
	037 Move X0, [X0+2240]
	038 Call 0x1C17CF4
	039 Move X0, 0x82A000
	040 Move X0, [X0+2248]
	041 Call 0x1C17CF4
	042 Move X0, 0x82A000
	043 Move X0, [X0+2256]
	044 Call 0x1C17CF4
	045 Move X0, 0x829000
	046 Move X0, [X0+3400]
	047 Call 0x1C17CF4
	048 Move X0, 0x829000
	049 Move X0, [X0+3416]
	050 Call 0x1C17CF4
	051 Move X0, 0x829000
	052 Move X0, [X0+3424]
	053 Call 0x1C17CF4
	054 Move X0, 0x7CF000
	055 Move X0, [X0+3584]
	056 Call 0x1C17CF4
	057 Move X0, 0x82A000
	058 Move X0, [X0+2008]
	059 Call 0x1C17CF4
	060 Move X0, 0x82A000
	061 Move X0, [X0+2016]
	062 Call 0x1C17CF4
	063 Move X0, 0x7CF000
	064 Move X0, [X0+3608]
	065 Call 0x1C17CF4
	066 Move X0, 0x82A000
	067 Move X0, [X0+1976]
	068 Call 0x1C17CF4
	069 Move X0, 0x82A000
	070 Move X0, [X0+2024]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+2225], W8
	074 Move X8, 0x82A000
	075 Move X8, [X8+1976]
	076 Move X29, X22
	077 ShiftRight X29, 32
	078 And X29, X29, 0x7FFFFFFF
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 And W31, W22, 255
	085 Move X8, 0x82A000
	086 Move X8, [X8+1976]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfEqual {433}
	091 Compare W29, 0
	092 JumpIfEqual {436}
	093 Move X8, 0x82A000
	094 Move X8, [X8+2256]
	095 Move X20, 0x82A000
	096 Move X0, [X8]
	097 Move X20, [X20+2248]
	098 Call 0x1C17F10
	099 Move X1, [X20]
	100 Move X20, X0
	101 Call Dictionary`2<Object, Object>..ctor, X0
	102 Compare X19, 0
	103 JumpIfEqual {544}
	104 Move X10, 0x82A000
	105 Move X8, [X19]
	106 Move X10, [X10+2008]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X10]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 Move [X31+24], X20
	127 Move [X31+32], X22
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move [X31+40], X0
	130 Compare X0, 0
	131 JumpIfEqual {545}
	132 Move V0, [X31+60]
	133 Move V1, [X31+68]
	134 Move W22, 12
	135 Add S2, S1, S0
	136 Move V0, [X31+64]
	137 Move V1, [X31+72]
	138 Add S0, S1, S0
	139 Move [X31+52], S2
	140 Move [X31+60], S0
	141 Move X8, [X31+40]
	142 Move X10, 0x7CF000
	143 Move X8, [X8]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Move X10, [X10+3608]
	146 Move X1, [X10]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, [X31+40]
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, [X31+40]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {412}
	169 Move X8, [X31+40]
	170 Move X10, 0x82A000
	171 Move X8, [X8]
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X10, [X10+2016]
	174 Move X1, [X10]
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, [X31+40]
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, [X31+40]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X23, X0
	194 Compare X0, 0
	195 JumpIfEqual {542}
	196 Move W8, [X23+204]
	197 Compare W8, 0
	198 JumpIfEqual {141}
	199 Move X0, X23
	200 Move X1, X31
	201 Call Component.get_transform, X0
	202 Move X8, 0x829000
	203 Move X8, [X8+3424]
	204 Move X24, X0
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X8, 0x829000
	208 Move X8, [X8+3416]
	209 Move X25, X0
	210 Move X1, [X8]
	211 Call HashSet`1<Edge>..ctor, X0
	212 Move X8, [X23+40]
	213 Compare X8, 0
	214 JumpIfEqual {403}
	215 Move W9, [X8+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move [X31+48], W9
	218 Move W19, W31
	219 Move W9, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X8, X8, W19
	222 Move X0, [X8+32]
	223 Compare X0, 0
	224 JumpIfEqual {538}
	225 Move X1, X31
	226 Call Face.get_edgesInternal, X0
	227 Move X26, X0
	228 Compare X0, 0
	229 JumpIfEqual {539}
	230 Move X8, [X26+24]
	231 Subtract W20, W8, 1
	232 Compare W8, 0
	233 JumpIfEqual {529}
	234 Move W28, W31
	235 Move X8, [X23+88]
	236 Compare X8, 0
	237 JumpIfEqual {534}
	238 Add X9, X26, W28
	239 Move X27, [X9+32]
	240 Move W9, [X8+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Compare X24, 0
	243 JumpIfEqual {533}
	244 Move X9, W27
	245 NotImplemented "Instruction MADD not yet implemented."
	246 Move S1, [X8+36]
	247 Move S2, [X8+40]
	248 Move V0, [X8+32]
	249 Move X0, X24
	250 Move X1, X31
	251 Call Transform.TransformPoint, X0, X1
	252 Move [X31+88], S1
	253 Move [X31+96], S0
	254 Move [X31+84], S2
	255 Move X8, [X23+88]
	256 Compare X8, 0
	257 JumpIfEqual {532}
	258 Move W10, [X8+24]
	259 NotImplemented "Instruction SBFM not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction MADD not yet implemented."
	262 Move S0, [X8+32]
	263 Move S1, [X8+36]
	264 Move V2, [X8+40]
	265 Move X0, X24
	266 Move X1, X31
	267 Call Transform.TransformPoint, X0, X1
	268 Move [X31+80], S0
	269 Compare X21, 0
	270 JumpIfEqual {535}
	271 Move V9, V1
	272 Move V11, V2
	273 Move S1, [X31+88]
	274 Move S0, [X31+92]
	275 Move V2, [X31+84]
	276 Move X0, X21
	277 Move X1, X31
	278 Call Camera.WorldToScreenPoint, X0, X1
	279 Move V3, [X31+76]
	280 Move X0, X21
	281 Move X1, X31
	282 Call HandleUtility.ScreenToGuiPoint, X0, X1, V0
	283 Move V10, V0
	284 Move V12, V1
	285 Move V13, V2
	286 Move V0, [X31+80]
	287 Move X0, X21
	288 Move V1, V9
	289 Move V2, V11
	290 Move X1, X31
	291 Call Camera.WorldToScreenPoint, X0, X1
	292 Move V3, [X31+76]
	293 Move X0, X21
	294 Move X1, X31
	295 Call HandleUtility.ScreenToGuiPoint, X0, X1, V0
	296 Move X8, 0x82A000
	297 Move X8, [X8+1976]
	298 Move V14, V0
	299 Move V15, V1
	300 Move V8, V2
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Compare W29, 0
	307 JumpIfEqual {369}
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, X21
	310 Move X1, X31
	311 Call Camera.get_nearClipPlane, X0
	312 NotImplemented "Instruction FCMP not yet implemented."
	313 Move X0, X21
	314 Move X1, X31
	315 Call Camera.get_nearClipPlane, X0
	316 NotImplemented "Instruction FCMP not yet implemented."
	317 Move V0, [X31+56]
	318 NotImplemented "Instruction FCMP not yet implemented."
	319 Move V0, [X31+72]
	320 NotImplemented "Instruction FCMP not yet implemented."
	321 Move V0, [X31+68]
	322 NotImplemented "Instruction FCMP not yet implemented."
	323 Move V0, [X31+52]
	324 NotImplemented "Instruction FCMP not yet implemented."
	325 Move V0, [X31+56]
	326 NotImplemented "Instruction FCMP not yet implemented."
	327 Move V0, [X31+72]
	328 NotImplemented "Instruction FCMP not yet implemented."
	329 Move V0, [X31+68]
	330 NotImplemented "Instruction FCMP not yet implemented."
	331 Move V0, [X31+52]
	332 NotImplemented "Instruction FCMP not yet implemented."
	333 Move X8, 0x82A000
	334 Move X8, [X8+1976]
	335 Move X0, [X8]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move X8, [X31+32]
	341 And W31, W8, 255
	342 Move V0, [X31+92]
	343 Move S1, [X31+80]
	344 Move S2, [X31+84]
	345 Move S3, 0.5
	346 Add S0, S0, S1
	347 Move V1, [X31+88]
	348 Add S2, S2, S11
	349 Multiply S0, S0, S3
	350 Multiply S2, S2, S3
	351 Add S1, S1, S9
	352 Multiply S1, S1, S3
	353 Move X0, X21
	354 Move X1, X23
	355 Move X2, X31
	356 Call HandleUtility.PointIsOccluded, X0, X1, X2
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfEqual {393}
	361 Compare X25, 0
	362 JumpIfEqual {541}
	363 Move X8, 0x829000
	364 Move X8, [X8+3400]
	365 Move X2, [X8]
	366 Move X0, X25
	367 Move X1, X27
	368 Call HashSet`1<Edge>.Add, X0, X1
	369 Move S0, [X31+68]
	370 Move S1, [X31+72]
	371 Move S2, [X31+60]
	372 Move S3, [X31+64]
	373 Move V4, V10
	374 Move V5, V12
	375 Move V6, V13
	376 Move X0, X31
	377 Move [X31+4], S15
	378 Move [X31+12], S8
	379 Move [X31], S14
	380 Call Math.RectIntersectsLineSegment, X0, X1, X2
	381 Move TEMP, X0
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {393}
	385 Compare X25, 0
	386 JumpIfEqual {536}
	387 Move X8, 0x829000
	388 Move X8, [X8+3400]
	389 Move X2, [X8]
	390 Move X0, X25
	391 Move X1, X27
	392 Call HashSet`1<Edge>.Add, X0, X1
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move W8, [X26+24]
	395 Add W28, W28, 1
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move W8, [X31+48]
	398 Add W19, W19, 1
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move X8, [X23+40]
	401 Compare X8, 0
	402 JumpIfNotEqual {219}
	403 Move X0, [X31+24]
	404 Compare X0, 0
	405 JumpIfEqual {543}
	406 Move X8, 0x82A000
	407 Move X8, [X8+2240]
	408 Move X3, [X8]
	409 Move X1, X23
	410 Move X2, X25
	411 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	412 Move X22, X31
	413 Move X8, [X31+40]
	414 Compare X8, 0
	415 JumpIfEqual {504}
	416 Move X10, 0x7CF000
	417 Move X8, [X8]
	418 Move X10, [X10+3584]
	419 NotImplemented "Instruction LDRH not yet implemented."
	420 Move X1, [X10]
	421 Compare X9, 0
	422 JumpIfEqual {429}
	423 Move X10, [X8+176]
	424 Add X10, X10, 8
	425 NotImplemented "Instruction LDUR not yet implemented."
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Subtract X9, X9, 1
	428 Add X10, X10, 16
	429 Move X19, [X31+40]
	430 Move W2, W31
	431 Move X0, X19
	432 Call 0x1C5D788
	433 Call 0x1C17DFC
	434 Compare W29, 0
	435 JumpIfNotEqual {93}
	436 Compare X21, 0
	437 JumpIfEqual {544}
	438 Move X0, X21
	439 Move X1, X31
	440 Call Camera.get_pixelWidth, X0
	441 Move W20, W0
	442 Move X0, X21
	443 Move X1, X31
	444 Call Camera.get_pixelHeight, X0
	445 Move X8, 0x82A000
	446 Move X8, [X8+2024]
	447 Move W22, W0
	448 Move X8, [X8]
	449 Move W9, [X8+224]
	450 Compare W9, 0
	451 JumpIfNotEqual {454}
	452 Move X0, X8
	453 Call 0x1C17DFC
	454 Move V2, [X31+76]
	455 NotImplemented "Instruction SCVTF not yet implemented."
	456 Move W8, 0x7F800000
	457 NotImplemented "Instruction SCVTF not yet implemented."
	458 NotImplemented "Instruction FDIV not yet implemented."
	459 NotImplemented "Instruction FDIV not yet implemented."
	460 Move S2, W8
	461 Move W9, 0x80000000
	462 NotImplemented "Instruction FCVTZS not yet implemented."
	463 NotImplemented "Instruction FCMP not yet implemented."
	464 NotImplemented "Instruction FCVTZS not yet implemented."
	465 NotImplemented "Instruction CSEL not yet implemented."
	466 NotImplemented "Instruction FCMP not yet implemented."
	467 Move X0, X21
	468 Move S0, [X31+68]
	469 Move S1, [X31+72]
	470 Move S2, [X31+60]
	471 Move S3, [X31+64]
	472 Move X1, X19
	473 Move X20, [X31+240]
	474 Move X19, [X31+248]
	475 Move X22, [X31+224]
	476 Move X21, [X31+232]
	477 Move X24, [X31+208]
	478 Move X23, [X31+216]
	479 Move X26, [X31+192]
	480 Move X25, [X31+200]
	481 Move X28, [X31+176]
	482 Move X27, [X31+184]
	483 Move X29, [X31+160]
	484 Move X30, [X31+168]
	485 Move D9, [X31+144]
	486 Move D8, [X31+152]
	487 Move D11, [X31+128]
	488 Move D10, [X31+136]
	489 Move D13, [X31+112]
	490 Move D12, [X31+120]
	491 Move D15, [X31+96]
	492 Move D14, [X31+104]
	493 NotImplemented "Instruction CSEL not yet implemented."
	494 Move W2, 1
	495 Add X31, X31, 256
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Move X19, [X31+40]
	498 Add X8, X8, X9
	499 Add X0, X8, 312
	500 Move X8, [X0]
	501 Move X1, [X0+8]
	502 Move X0, X19
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Compare X22, 0
	505 JumpIfNotEqual {546}
	506 Move X0, [X31+24]
	507 Move X20, [X31+240]
	508 Move X19, [X31+248]
	509 Move X22, [X31+224]
	510 Move X21, [X31+232]
	511 Move X24, [X31+208]
	512 Move X23, [X31+216]
	513 Move X26, [X31+192]
	514 Move X25, [X31+200]
	515 Move X28, [X31+176]
	516 Move X27, [X31+184]
	517 Move X29, [X31+160]
	518 Move X30, [X31+168]
	519 Move D9, [X31+144]
	520 Move D8, [X31+152]
	521 Move D11, [X31+128]
	522 Move D10, [X31+136]
	523 Move D13, [X31+112]
	524 Move D12, [X31+120]
	525 Move D15, [X31+96]
	526 Move D14, [X31+104]
	527 Add X31, X31, 256
	528 Return X0
	529 Call 0x1C17F28
	530 Call 0x1C17F28
	531 Call 0x1C17F28
	532 Call 0x1C17F20
	533 Call 0x1C17F20
	534 Call 0x1C17F20
	535 Call 0x1C17F20
	536 Call 0x1C17F20
	537 Call 0x1C17F28
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C17F20
	546 Move X0, X22
	547 Call 0x1C17F18
	548 Move X21, X0
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move X0, X21
	551 Call 0x3EB2AD0
	552 Move X22, [X0]
	553 Call 0x3EB2AE0
	554 Move X22, X31
	555 Move X21, X0
	556 Move X8, [X31+40]
	557 Compare X8, 0
	558 JumpIfEqual {583}
	559 Move X8, [X31+40]
	560 Move X10, 0x7CF000
	561 Move X8, [X8]
	562 Move X10, [X10+3584]
	563 NotImplemented "Instruction LDRH not yet implemented."
	564 Move X1, [X10]
	565 Compare X9, 0
	566 JumpIfEqual {573}
	567 Move X10, [X8+176]
	568 Add X10, X10, 8
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 NotImplemented "Instruction CMP not yet implemented."
	571 Subtract X9, X9, 1
	572 Add X10, X10, 16
	573 Move X0, [X31+40]
	574 Move W2, W31
	575 Call 0x1C5D788
	576 NotImplemented "Instruction LDRSW not yet implemented."
	577 Add X8, X8, X9
	578 Add X0, X8, 312
	579 Move X8, [X0]
	580 Move X1, [X0+8]
	581 Move X0, [X31+40]
	582 NotImplemented "Instruction BLR not yet implemented."
	583 Compare X22, 0
	584 JumpIfNotEqual {587}
	585 Move X0, X21
	586 Call 0x1D2D690
	587 Move X0, X22
	588 Call 0x1C17F18
	589 Call 0x1991590

Method: UnityEngine.ProBuilder.Face PickFace(UnityEngine.Camera camera, UnityEngine.Vector3 mousePosition, UnityEngine.ProBuilder.ProBuilderMesh pickable)

Disassembly:
	0x0392646C MOV X0, X28
	0x03926470 BLR X8
	0x03926474 LDR X8, [X22]
	0x03926478 MOV W23, W0
	0x0392647C MOV W1, W23
	0x03926480 MOV X0, X8
	0x03926484 BL 0x1C16D6C
	0x03926488 LDR X8, [X21]
	0x0392648C MOV X29, X0
	0x03926490 MOV X0, X8
	0x03926494 BL 0x1C16F10
	0x03926498 LDR X1, [X20]
	0x0392649C MOV X22, X0
	0x039264A0 BL 0x2AFEBA0
	0x039264A4 CMP W23, 0x1
	0x039264A8 STR X22, [X19]
	0x039264AC B.LT 0x3926830
	0x039264B0 ADRP X21, 0x828000
	0x039264B4 ADRP X20, 0x828000
	0x039264B8 LDR X21, [X21 + 0x9B0]
	0x039264BC LDR X20, [X20 + 0x978]
	0x039264C0 MOV X22, X31
	0x039264C4 MOV W27, W31
	0x039264C8 MOV W8, W23
	0x039264CC STP X8, X29, [X31]
	0x039264D0 STR X28, [X31 + 0x10]
	0x039264D4 LDR X8, [X28]
	0x039264D8 ADRP X10, 0x828000
	0x039264DC LDRH W9, [X8 + 0x12E]
	0x039264E0 LDR X10, [X10 + 0x998]
	0x039264E4 LDR X1, [X10]
	0x039264E8 CBZ X9, 0x392650C
	0x039264EC LDR X10, [X8 + 0xB0]
	0x039264F0 ADD X10, X10, 0x8
	0x039264F4 LDUR X11, [X10 - 0x8]
	0x039264F8 CMP X11, X1
	0x039264FC B.EQ 0x392651C
	0x03926500 SUBS X9, X9, 0x1
	0x03926504 ADD X10, X10, 0x10
	0x03926508 B.NE 0x39264F4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move [X31+56], X31
	005 Compare X0, 0
	006 JumpIfEqual {47}
	007 Move X19, X1
	008 Add X8, X31, 32
	009 Move X1, X31
	010 Call Camera.ScreenPointToRay, X0, X1
	011 Move X8, [X31+48]
	012 Move V0, [X31+2]
	013 Add X0, X31, 0
	014 Add X2, X31, 56
	015 Move [X31+16], X8
	016 Move W8, 0x7F800000
	017 Move [X31], V0
	018 Move W3, 1
	019 Move S0, W8
	020 Move X1, X19
	021 Move X4, X31
	022 Move X5, X31
	023 Call HandleUtility.FaceRaycast, X0, X1, X2, V0, X3, X4
	024 Move W8, W0
	025 Move X0, X31
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {43}
	030 Compare X19, 0
	031 JumpIfEqual {47}
	032 Move X9, [X31+56]
	033 Compare X9, 0
	034 JumpIfEqual {47}
	035 Move X8, [X19+40]
	036 Compare X8, 0
	037 JumpIfEqual {47}
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Move W10, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X8, X8, X9
	042 Move X0, [X8+32]
	043 Move X30, [X31+64]
	044 Move X19, [X31+72]
	045 Add X31, X31, 80
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

