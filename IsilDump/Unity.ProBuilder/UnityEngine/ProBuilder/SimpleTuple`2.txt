Type: UnityEngine.ProBuilder.SimpleTuple`2

Method: T1 get_item1()

Disassembly:
	0x025E79D8 RET
	0x025E79DC BL 0x3EB1B20

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_item1(T1 value)

Disassembly:
	0x025E79E0 LDP S0, S1, [X0]
	0x025E79E4 LDR V2, [X0 + 0x8]

ISIL:
	001 Move [X0], W1
	002 Return 

Method: T2 get_item2()

Disassembly:
	0x025E79E8 RET
	0x025E79EC STP S0, S1, [X0]

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_item2(T2 value)

Disassembly:
	0x025E79F0 STR S2, [X0 + 0x8]
	0x025E79F4 RET

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Void .ctor(T1 item1, T2 item2)

Disassembly:
	0x025E79F8 LDP S0, S1, [X0 + 0xC]
	0x025E79FC LDR V2, [X0 + 0x14]

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Return 

Method: System.String ToString()

Disassembly:
	0x025E7A00 RET
	0x025E7A04 STP S0, S1, [X0 + 0xC]
	0x025E7A08 STR S2, [X0 + 0x14]
	0x025E7A0C RET
	0x025E7A10 LDR X0, [X0 + 0x18]
	0x025E7A14 RET
	0x025E7A18 STR X1, [X0 + 0x18]
	0x025E7A1C RET
	0x025E7A20 STP S0, S1, [X0]
	0x025E7A24 STP S2, S3, [X0 + 0x8]
	0x025E7A28 STP S4, S5, [X0 + 0x10]
	0x025E7A2C STR X1, [X0 + 0x18]
	0x025E7A30 RET
	0x025E7A34 SUB X31, X31, 0x40
	0x025E7A38 STP X30, X21, [X31 + 0x20]
	0x025E7A3C STP X20, X19, [X31 + 0x30]
	0x025E7A40 ADRP X21, 0x1DF2000
	0x025E7A44 LDRB W8, [X21 + 0xFC5]
	0x025E7A48 MOV X20, X1
	0x025E7A4C MOV X19, X0
	0x025E7A50 TBNZ X8, 0x0, 0x25E7A68
	0x025E7A54 ADRP X0, 0x1B36000
	0x025E7A58 LDR X0, [X0 + 0x280]
	0x025E7A5C BL 0x1C16CF4
	0x025E7A60 MOVZ W8, 0x1
	0x025E7A64 STRB W8, [X21 + 0xFC5]
	0x025E7A68 STR W31, [X31 + 0x8]
	0x025E7A6C STR X31, [X31]
	0x025E7A70 LDR X0, [X20 + 0x20]
	0x025E7A74 ADD X8, X0, 0x135
	0x025E7A78 LDRH W8, [X8]
	0x025E7A7C TBNZ X8, 0x0, 0x25E7A90
	0x025E7A80 BL 0x1C5C684
	0x025E7A84 LDR X0, [X20 + 0x20]
	0x025E7A88 ADD X8, X0, 0x135
	0x025E7A8C LDRH W8, [X8]
	0x025E7A90 LDR V0, [X19]
	0x025E7A94 LDR V1, [X19 + 0x8]
	0x025E7A98 STR D0, [X31 + 0x10]
	0x025E7A9C STR S1, [X31 + 0x18]
	0x025E7AA0 TBNZ X8, 0x0, 0x25E7AA8
	0x025E7AA4 BL 0x1C5C684
	0x025E7AA8 ADD X0, X31, 0x10
	0x025E7AAC MOV X1, X31
	0x025E7AB0 MOV X2, X31
	0x025E7AB4 MOV X3, X31
	0x025E7AB8 BL 0x2430694
	0x025E7ABC LDR X8, [X20 + 0x20]
	0x025E7AC0 MOV X21, X0
	0x025E7AC4 ADD X9, X8, 0x135
	0x025E7AC8 LDRH W9, [X9]
	0x025E7ACC TBNZ X9, 0x0, 0x25E7AE4
	0x025E7AD0 MOV X0, X8
	0x025E7AD4 BL 0x1C5C684
	0x025E7AD8 LDR X8, [X20 + 0x20]
	0x025E7ADC ADD X9, X8, 0x135
	0x025E7AE0 LDRH W9, [X9]
	0x025E7AE4 LDUR V0, [X19 + 0xC]
	0x025E7AE8 LDR V1, [X19 + 0x14]
	0x025E7AEC STR D0, [X31]
	0x025E7AF0 STR S1, [X31 + 0x8]
	0x025E7AF4 TBNZ X9, 0x0, 0x25E7B00

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1DF3000
	007 Move W8, [X21+4030]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1B37000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4030], W8
	019 Move [X31+8], W31
	020 Move X0, [X20+32]
	021 Add X8, X0, 309
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {31}
	027 Call 0x1C5D684
	028 Move X0, [X20+32]
	029 Add X8, X0, 309
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move W9, [X19]
	032 Move [X31+12], W9
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Add X0, X31, 12
	040 Move X1, [X8+40]
	041 Call Int32.ToString, X0
	042 Move X8, [X20+32]
	043 Move X21, X0
	044 Add X9, X8, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, [X20+32]
	053 Add X9, X8, 309
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move W10, [X19+4]
	056 Move X19, 0x1B37000
	057 Move X19, [X19+632]
	058 Move [X31+8], W10
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Add X0, X31, 8
	068 Move X1, [X8+56]
	069 Call Int32.ToString, X0
	070 Move X8, [X19]
	071 Move X2, X0
	072 Move X1, X21
	073 Move X3, X31
	074 Move X0, X8
	075 Call String.Format, X0, X1, X2
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Add X31, X31, 48
	081 Return X0

