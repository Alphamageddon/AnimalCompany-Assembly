Type: UnityEngine.ProBuilder.SelectPathFaces

Method: System.Collections.Generic.List`1<System.Int32> GetPath(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 start, System.Int32 end)

Disassembly:
	0x0392A538 STRB W8, [X21 + 0x8DF]
	0x0392A53C LDR X8, [X19 + 0x28]
	0x0392A540 LDR X9, [X20]
	0x0392A544 LDP X20, X19, [X31 + 0x10]
	0x0392A548 CMP X8, 0x0
	0x0392A54C CSEL X0, X9, X8, EQ
	0x0392A550 LDP X30, X21, [X31], #0x20
	0x0392A554 RET
	0x0392A558 STP X30, X21, [X31 - 0x20]!
	0x0392A55C STP X20, X19, [X31 + 0x10]
	0x0392A560 ADRP X21, 0xAB7000
	0x0392A564 ADRP X20, 0x7C9000
	0x0392A568 LDRB W8, [X21 + 0x8E0]
	0x0392A56C LDR X20, [X20 + 0x988]
	0x0392A570 MOV X19, X0
	0x0392A574 TBNZ X8, 0x0, 0x392A58C
	0x0392A578 ADRP X0, 0x7C9000
	0x0392A57C LDR X0, [X0 + 0x988]
	0x0392A580 BL 0x1C16CF4
	0x0392A584 MOVZ W8, 0x1
	0x0392A588 STRB W8, [X21 + 0x8E0]
	0x0392A58C LDR X8, [X19 + 0x30]
	0x0392A590 LDR X9, [X20]
	0x0392A594 LDP X20, X19, [X31 + 0x10]
	0x0392A598 CMP X8, 0x0
	0x0392A59C CSEL X0, X9, X8, EQ
	0x0392A5A0 LDP X30, X21, [X31], #0x20
	0x0392A5A4 RET
	0x0392A5A8 STR D8, [X31 - 0x30]!
	0x0392A5AC STP X30, X21, [X31 + 0x10]
	0x0392A5B0 STP X20, X19, [X31 + 0x20]
	0x0392A5B4 ADRP X21, 0xAB7000
	0x0392A5B8 ADRP X20, 0x823000
	0x0392A5BC LDRB W8, [X21 + 0x8E1]
	0x0392A5C0 LDR X20, [X20 + 0xBB8]
	0x0392A5C4 MOV X19, X0
	0x0392A5C8 TBNZ X8, 0x0, 0x392A5E0
	0x0392A5CC ADRP X0, 0x823000
	0x0392A5D0 LDR X0, [X0 + 0xBB8]
	0x0392A5D4 BL 0x1C16CF4
	0x0392A5D8 MOVZ W8, 0x1
	0x0392A5DC STRB W8, [X21 + 0x8E1]
	0x0392A5E0 LDR X0, [X20]
	0x0392A5E4 LDR V8, [X19 + 0x10]
	0x0392A5E8 LDR W21, [X19 + 0x18]
	0x0392A5EC BL 0x1C16F10
	0x0392A5F0 MOVN X8, 0x0
	0x0392A5F4 MOV X1, X31
	0x0392A5F8 MOV X19, X0
	0x0392A5FC STP X8, X8, [X0 + 0x10]
	0x0392A600 BL 0x33BDD8C
	0x0392A604 MOVN W8, 0x0
	0x0392A608 STR D8, [X19 + 0x10]
	0x0392A60C STP X31, X31, [X19 + 0x28]
	0x0392A610 STP W21, W8, [X19 + 0x18]
	0x0392A614 STR X31, [X19 + 0x20]
	0x0392A618 MOV X0, X19
	0x0392A61C LDP X20, X19, [X31 + 0x20]
	0x0392A620 LDP X30, X21, [X31 + 0x10]
	0x0392A624 LDR V8, [X31], #0x30
	0x0392A628 RET
	0x0392A62C STR X30, [X31 - 0x50]!
	0x0392A630 STP X26, X25, [X31 + 0x10]
	0x0392A634 STP X24, X23, [X31 + 0x20]
	0x0392A638 STP X22, X21, [X31 + 0x30]
	0x0392A63C STP X20, X19, [X31 + 0x40]
	0x0392A640 MOV W25, W1
	0x0392A644 MOVN X8, 0x0
	0x0392A648 MOV X1, X31
	0x0392A64C MOV X19, X7
	0x0392A650 MOV X20, X6
	0x0392A654 MOV X21, X5
	0x0392A658 MOV W22, W4
	0x0392A65C MOV W23, W3
	0x0392A660 MOV W24, W2
	0x0392A664 MOV X26, X0
	0x0392A668 STP X8, X8, [X0 + 0x10]
	0x0392A66C BL 0x33BDD8C
	0x0392A670 STP W25, W24, [X26 + 0x10]
	0x0392A674 STP W23, W22, [X26 + 0x18]
	0x0392A678 STP X21, X19, [X26 + 0x20]
	0x0392A67C STR X20, [X26 + 0x30]
	0x0392A680 LDP X20, X19, [X31 + 0x40]
	0x0392A684 LDP X22, X21, [X31 + 0x30]
	0x0392A688 LDP X24, X23, [X31 + 0x20]
	0x0392A68C LDP X26, X25, [X31 + 0x10]
	0x0392A690 LDR X30, [X31], #0x50
	0x0392A694 RET
	0x0392A698 STP X30, X19, [X31 - 0x10]!
	0x0392A69C MOVN X8, 0x0
	0x0392A6A0 MOV X1, X31
	0x0392A6A4 MOV X19, X0
	0x0392A6A8 STP X8, X8, [X0 + 0x10]
	0x0392A6AC BL 0x33BDD8C
	0x0392A6B0 ADRP X8, 0xFFFFFFFFFD1C3000
	0x0392A6B4 LDR V0, [X8 + 0x37]
	0x0392A6B8 STP X31, X31, [X19 + 0x28]
	0x0392A6BC STR X31, [X19 + 0x20]
	0x0392A6C0 STR V0, [X19 + 0x1]
	0x0392A6C4 LDP X30, X19, [X31], #0x10
	0x0392A6C8 RET
	0x0392A6CC STR X30, [X31 - 0x30]!
	0x0392A6D0 STP X22, X21, [X31 + 0x10]
	0x0392A6D4 STP X20, X19, [X31 + 0x20]
	0x0392A6D8 MOV X21, X1
	0x0392A6DC MOVN X8, 0x0
	0x0392A6E0 MOV X1, X31
	0x0392A6E4 MOV X20, X2
	0x0392A6E8 MOV X19, X0
	0x0392A6EC STR X31, [X31 + 0x8]
	0x0392A6F0 STP X8, X8, [X0 + 0x10]
	0x0392A6F4 BL 0x33BDD8C
	0x0392A6F8 ADD X1, X31, 0x8
	0x0392A6FC MOV X0, X21
	0x0392A700 STP X21, X20, [X19 + 0x28]
	0x0392A704 BL 0x392A774
	0x0392A708 TBZ X0, 0x0, 0x392A760
	0x0392A70C LDR X20, [X31 + 0x8]
	0x0392A710 CBZ X20, 0x392A770
	0x0392A714 LDR V0, [X20 + 0x1]
	0x0392A718 ADRP X22, 0xAB7000
	0x0392A71C ADRP X21, 0x7C9000
	0x0392A720 STR V0, [X19 + 0x1]
	0x0392A724 LDR X8, [X20 + 0x20]
	0x0392A728 STR X8, [X19 + 0x20]
	0x0392A72C LDRB W8, [X22 + 0x8DF]
	0x0392A730 LDR X21, [X21 + 0x988]
	0x0392A734 TBNZ X8, 0x0, 0x392A74C
	0x0392A738 ADRP X0, 0x7C9000
	0x0392A73C LDR X0, [X0 + 0x988]
	0x0392A740 BL 0x1C16CF4
	0x0392A744 MOVZ W8, 0x1
	0x0392A748 STRB W8, [X22 + 0x8DF]
	0x0392A74C LDR X8, [X20 + 0x28]
	0x0392A750 LDR X9, [X21]
	0x0392A754 CMP X8, 0x0
	0x0392A758 CSEL X8, X9, X8, EQ
	0x0392A75C STR X8, [X19 + 0x28]
	0x0392A760 LDP X20, X19, [X31 + 0x20]
	0x0392A764 LDP X22, X21, [X31 + 0x10]
	0x0392A768 LDR X30, [X31], #0x30
	0x0392A76C RET
	0x0392A770 BL 0x1C16F20
	0x0392A774 STP X30, X23, [X31 - 0x30]!
	0x0392A778 STP X22, X21, [X31 + 0x10]
	0x0392A77C STP X20, X19, [X31 + 0x20]
	0x0392A780 ADRP X21, 0xAB7000
	0x0392A784 ADRP X23, 0x823000
	0x0392A788 ADRP X22, 0x7D1000
	0x0392A78C LDRB W8, [X21 + 0x8E6]
	0x0392A790 LDR X23, [X23 + 0xBB8]
	0x0392A794 LDR X22, [X22 + 0x600]
	0x0392A798 MOV X19, X1
	0x0392A79C MOV X20, X0
	0x0392A7A0 TBNZ X8, 0x0, 0x392A7F4
	0x0392A7A4 ADRP X0, 0x7D1000
	0x0392A7A8 LDR X0, [X0 + 0x600]
	0x0392A7AC BL 0x1C16CF4
	0x0392A7B0 ADRP X0, 0x823000
	0x0392A7B4 LDR X0, [X0 + 0xBB8]
	0x0392A7B8 BL 0x1C16CF4
	0x0392A7BC ADRP X0, 0x824000
	0x0392A7C0 LDR X0, [X0 + 0xB20]
	0x0392A7C4 BL 0x1C16CF4
	0x0392A7C8 ADRP X0, 0x824000
	0x0392A7CC LDR X0, [X0 + 0xB28]
	0x0392A7D0 BL 0x1C16CF4
	0x0392A7D4 ADRP X0, 0x824000
	0x0392A7D8 LDR X0, [X0 + 0xB30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xAB8000
	008 Move X22, 0x7CA000
	009 Move W8, [X23+2266]
	010 Move X22, [X22+1432]
	011 Move W20, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7CA000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x825000
	022 Move X0, [X0+2728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2266], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {171}
	039 Move TEMP, X19
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {149}
	043 Compare X21, 0
	044 JumpIfEqual {194}
	045 Move X0, X21
	046 Move X1, X31
	047 Call ProBuilderMesh.get_faceCount, X0
	048 Subtract W8, W0, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move TEMP, X20
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {160}
	054 Move X0, X21
	055 Move X1, X31
	056 Call ProBuilderMesh.get_faceCount, X0
	057 Subtract W8, W0, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X23, 0x825000
	060 Move X23, [X23+2728]
	061 Move X8, [X23]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X23]
	068 Move X9, [X8+184]
	069 Move W10, [X9+8]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W10, [X8+224]
	072 Compare W10, 0
	073 JumpIfNotEqual {78}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X23]
	077 Move X9, [X8+184]
	078 Move X0, [X22]
	079 Move X22, [X9+16]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X22
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {122}
	092 Move X0, X21
	093 Move X1, X31
	094 Call ProBuilderMesh.get_faceCount, X0
	095 Move X8, [X23]
	096 Move W22, W0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {103}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X8, [X23]
	103 Move X9, [X8+184]
	104 Move W9, [X9+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W9, [X8+224]
	107 Compare W9, 0
	108 JumpIfNotEqual {112}
	109 Move X0, X8
	110 Call 0x1C17DFC
	111 Move X8, [X23]
	112 Move X8, [X8+184]
	113 Move W1, W19
	114 Move W2, W20
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X0, [X8]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Move X23, [X31+56]
	122 Move X8, [X23]
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X21
	129 Move W1, W19
	130 Call SelectPathFaces.Dijkstra, X0, X1
	131 Move W1, W19
	132 Move W2, W20
	133 Move X22, X0
	134 Call SelectPathFaces.GetMinimalPath, X0, X1, X2
	135 Move X8, [X23]
	136 Move X8, [X8+184]
	137 Move [X8], X22
	138 Move X8, [X23]
	139 Move X8, [X8+184]
	140 Move [X8+8], W19
	141 Move [X8+16], X21
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Return X0
	149 Move X0, 0x7D2000
	150 Move X0, [X0+1400]
	151 Call 0x1C17D08
	152 Call 0x1C17F10
	153 Move X19, X0
	154 Move X0, 0x825000
	155 Move X0, [X0+2736]
	156 Call 0x1C17D08
	157 Move X20, X0
	158 Move X0, 0x804000
	159 Move X0, [X0+976]
	160 Move X0, 0x7D2000
	161 Move X0, [X0+1400]
	162 Call 0x1C17D08
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Move X0, 0x825000
	166 Move X0, [X0+2736]
	167 Call 0x1C17D08
	168 Move X20, X0
	169 Move X0, 0x81E000
	170 Move X0, [X0+664]
	171 Move X0, 0x7D2000
	172 Move X0, [X0+1400]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X19, X0
	176 Move X0, 0x825000
	177 Move X0, [X0+2744]
	178 Call 0x1C17D08
	179 Move X20, X0
	180 Move X0, 0x824000
	181 Move X0, [X0+3728]
	182 Call 0x1C17D08
	183 Move X2, X0
	184 Move X0, X19
	185 Move X1, X20
	186 Move X3, X31
	187 Call ArgumentException..ctor, X0, X1, X2
	188 Move X0, 0x825000
	189 Move X0, [X0+2752]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Call 0x1C17DEC
	194 Call 0x1C17F20

Method: System.Int32[] Dijkstra(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 start)

Disassembly:
	0x0392A8F8 LDR X0, [X22]
	0x0392A8FC LDR W8, [X0 + 0xE0]
	0x0392A900 CBNZ W8, 0x392A908
	0x0392A904 BL 0x1C16DFC
	0x0392A908 ADRP X8, 0x824000
	0x0392A90C LDR X8, [X8 + 0xB30]
	0x0392A910 LDR X1, [X8]
	0x0392A914 MOV X0, X20
	0x0392A918 MOV X2, X31
	0x0392A91C BL 0x3632B2C
	0x0392A920 MOV X21, X0
	0x0392A924 CBZ X0, 0x392AA38
	0x0392A928 MOV X0, X21
	0x0392A92C MOV X1, X31
	0x0392A930 BL 0x362F808
	0x0392A934 TBZ X0, 0x0, 0x392A950
	0x0392A938 LDR X23, [X19]
	0x0392A93C MOV X0, X21
	0x0392A940 MOV X1, X31
	0x0392A944 BL 0x362F62C
	0x0392A948 CBZ X23, 0x392AA48
	0x0392A94C STR X0, [X23 + 0x20]
	0x0392A950 LDR X0, [X22]
	0x0392A954 LDR W8, [X0 + 0xE0]
	0x0392A958 CBNZ W8, 0x392A960
	0x0392A95C BL 0x1C16DFC
	0x0392A960 ADRP X8, 0x824000
	0x0392A964 LDR X8, [X8 + 0xB38]
	0x0392A968 LDR X1, [X8]
	0x0392A96C MOV X0, X20
	0x0392A970 MOV X2, X31
	0x0392A974 BL 0x3632B2C
	0x0392A978 MOV X21, X0
	0x0392A97C CBZ X0, 0x392AA3C
	0x0392A980 LDR X23, [X19]
	0x0392A984 MOV X0, X21
	0x0392A988 MOV X1, X31
	0x0392A98C BL 0x362F808
	0x0392A990 TBZ X0, 0x0, 0x392A9A8
	0x0392A994 MOV X0, X21
	0x0392A998 MOV X1, X31
	0x0392A99C BL 0x362F62C
	0x0392A9A0 BL 0x392B748
	0x0392A9A4 B 0x392A9AC
	0x0392A9A8 MOVN W0, 0x0
	0x0392A9AC CBZ X23, 0x392AA40
	0x0392A9B0 STR W0, [X23 + 0x1C]
	0x0392A9B4 LDR X0, [X22]
	0x0392A9B8 LDR W8, [X0 + 0xE0]
	0x0392A9BC CBNZ W8, 0x392A9C4
	0x0392A9C0 BL 0x1C16DFC
	0x0392A9C4 ADRP X8, 0x824000
	0x0392A9C8 LDR X8, [X8 + 0xB20]
	0x0392A9CC LDR X1, [X8]
	0x0392A9D0 MOV X0, X20
	0x0392A9D4 MOV X2, X31
	0x0392A9D8 BL 0x3632B2C
	0x0392A9DC MOV X20, X0
	0x0392A9E0 CBZ X0, 0x392AA44
	0x0392A9E4 MOV X0, X20
	0x0392A9E8 MOV X1, X31
	0x0392A9EC BL 0x362F808
	0x0392A9F0 TBZ X0, 0x0, 0x392AA0C
	0x0392A9F4 LDR X19, [X19]
	0x0392A9F8 MOV X0, X20
	0x0392A9FC MOV X1, X31
	0x0392AA00 BL 0x362F62C
	0x0392AA04 CBZ X19, 0x392AA4C
	0x0392AA08 STR X0, [X19 + 0x28]
	0x0392AA0C MOVZ W0, 0x1
	0x0392AA10 B 0x392AB0C
	0x0392AA14 BL 0x1C16F20
	0x0392AA18 BL 0x1C16F20
	0x0392AA1C BL 0x1C16F20
	0x0392AA20 BL 0x1C16F28
	0x0392AA24 BL 0x1C16F20
	0x0392AA28 BL 0x1C16F28
	0x0392AA2C BL 0x1C16F20
	0x0392AA30 BL 0x1C16F28
	0x0392AA34 BL 0x1C16F20
	0x0392AA38 BL 0x1C16F20
	0x0392AA3C BL 0x1C16F20
	0x0392AA40 BL 0x1C16F20
	0x0392AA44 BL 0x1C16F20
	0x0392AA48 BL 0x1C16F20
	0x0392AA4C BL 0x1C16F20
	0x0392AA50 B 0x392AAD0
	0x0392AA54 B 0x392AAD0
	0x0392AA58 B 0x392AAD0
	0x0392AA5C B 0x392AAD0
	0x0392AA60 B 0x392AAD0
	0x0392AA64 B 0x392AAD0
	0x0392AA68 B 0x392AAD0
	0x0392AA6C B 0x392AAD0
	0x0392AA70 B 0x392AAD0
	0x0392AA74 B 0x392AAD0
	0x0392AA78 B 0x392AAD0
	0x0392AA7C B 0x392AAD0
	0x0392AA80 B 0x392AAD0
	0x0392AA84 B 0x392AAD0
	0x0392AA88 B 0x392AAD0
	0x0392AA8C B 0x392AAD0
	0x0392AA90 B 0x392AAD0
	0x0392AA94 B 0x392AAD0
	0x0392AA98 B 0x392AAD0
	0x0392AA9C B 0x392AAD0
	0x0392AAA0 B 0x392AAD0
	0x0392AAA4 B 0x392AAD0
	0x0392AAA8 B 0x392AAD0
	0x0392AAAC B 0x392AAD0
	0x0392AAB0 B 0x392AAD0
	0x0392AAB4 B 0x392AAD0
	0x0392AAB8 B 0x392AAD0
	0x0392AABC B 0x392AAD0
	0x0392AAC0 B 0x392AAD0
	0x0392AAC4 B 0x392AAD0
	0x0392AAC8 B 0x392AAD0
	0x0392AACC B 0x392AAD0
	0x0392AAD0 MOV X19, X0
	0x0392AAD4 CMP W1, 0x1
	0x0392AAD8 B.NE 0x392AB44
	0x0392AADC MOV X0, X19
	0x0392AAE0 BL 0x3EB1AD0
	0x0392AAE4 MOV X19, X0
	0x0392AAE8 ADRP X0, 0x7CF000
	0x0392AAEC LDR X0, [X0 + 0xCC0]
	0x0392AAF0 BL 0x1C16D08
	0x0392AAF4 LDR X8, [X19]
	0x0392AAF8 LDR X1, [X8]
	0x0392AAFC BL 0x1C17270
	0x0392AB00 TBZ X0, 0x0, 0x392AB1C
	0x0392AB04 BL 0x3EB1AE0
	0x0392AB08 MOV W0, W31
	0x0392AB0C LDP X20, X19, [X31 + 0x20]
	0x0392AB10 LDP X22, X21, [X31 + 0x10]
	0x0392AB14 LDP X30, X23, [X31], #0x30
	0x0392AB18 RET
	0x0392AB1C MOVZ W0, 0x8
	0x0392AB20 BL 0x3EB1AF0
	0x0392AB24 LDR X8, [X19]
	0x0392AB28 STR X8, [X0]
	0x0392AB2C ADRP X1, 0x58A000
	0x0392AB30 ADD X1, X1, 0xE58
	0x0392AB34 MOV X2, X31
	0x0392AB38 BL 0x3EB1B00
	0x0392AB3C MOV X19, X0
	0x0392AB40 BL 0x3EB1AE0
	0x0392AB44 MOV X0, X19
	0x0392AB48 BL 0x1D2C690
	0x0392AB4C BL 0x1990590
	0x0392AB50 LDR W8, [X0 + 0x10]
	0x0392AB54 ADDS W31, W8, 0x1
	0x0392AB58 B.EQ 0x392AB78
	0x0392AB5C LDR W8, [X0 + 0x14]
	0x0392AB60 ADDS W31, W8, 0x1
	0x0392AB64 B.EQ 0x392AB78
	0x0392AB68 LDR W8, [X0 + 0x18]
	0x0392AB6C ADDS W31, W8, 0x1
	0x0392AB70 CSET W0, NE
	0x0392AB74 RET
	0x0392AB78 MOV W0, W31
	0x0392AB7C RET
	0x0392AB80 STP X30, X21, [X31 - 0x20]!
	0x0392AB84 STP X20, X19, [X31 + 0x10]
	0x0392AB88 ADRP X21, 0xAB7000
	0x0392AB8C LDRB W8, [X21 + 0x8E2]
	0x0392AB90 MOV X19, X1
	0x0392AB94 MOV X20, X0
	0x0392AB98 TBNZ X8, 0x0, 0x392ABB0
	0x0392AB9C ADRP X0, 0x823000
	0x0392ABA0 LDR X0, [X0 + 0xBB8]
	0x0392ABA4 BL 0x1C16CF4
	0x0392ABA8 MOVZ W8, 0x1
	0x0392ABAC STRB W8, [X21 + 0x8E2]
	0x0392ABB0 CBZ X19, 0x392ABCC
	0x0392ABB4 ADRP X8, 0x823000
	0x0392ABB8 LDR X8, [X8 + 0xBB8]
	0x0392ABBC LDR X9, [X19]
	0x0392ABC0 LDR X8, [X8]
	0x0392ABC4 CMP X9, X8
	0x0392ABC8 B.EQ 0x392ABDC
	0x0392ABCC LDP X20, X19, [X31 + 0x10]
	0x0392ABD0 MOV W0, W31
	0x0392ABD4 LDP X30, X21, [X31], #0x20
	0x0392ABD8 RET
	0x0392ABDC MOV X0, X20
	0x0392ABE0 MOV X1, X19
	0x0392ABE4 LDP X20, X19, [X31 + 0x10]
	0x0392ABE8 LDP X30, X21, [X31], #0x20
	0x0392ABEC B 0x392ABF0
	0x0392ABF0 STR X30, [X31 - 0x30]!
	0x0392ABF4 STP X22, X21, [X31 + 0x10]
	0x0392ABF8 STP X20, X19, [X31 + 0x20]
	0x0392ABFC CBZ X1, 0x392AD8C
	0x0392AC00 LDR W8, [X0 + 0x10]
	0x0392AC04 MOV X19, X1
	0x0392AC08 MOV X20, X0
	0x0392AC0C ADDS W31, W8, 0x1
	0x0392AC10 B.EQ 0x392AC30
	0x0392AC14 LDR W9, [X20 + 0x14]
	0x0392AC18 ADDS W31, W9, 0x1
	0x0392AC1C B.EQ 0x392AC30
	0x0392AC20 LDR W9, [X20 + 0x18]
	0x0392AC24 ADDS W31, W9, 0x1
	0x0392AC28 CSET W10, NE
	0x0392AC2C B 0x392AC34
	0x0392AC30 MOV W10, W31
	0x0392AC34 LDR W9, [X19 + 0x10]
	0x0392AC38 ADDS W31, W9, 0x1
	0x0392AC3C B.EQ 0x392AC5C
	0x0392AC40 LDR W11, [X19 + 0x14]
	0x0392AC44 ADDS W31, W11, 0x1
	0x0392AC48 B.EQ 0x392AC5C
	0x0392AC4C LDR W11, [X19 + 0x18]
	0x0392AC50 ADDS W31, W11, 0x1
	0x0392AC54 CSET W11, NE
	0x0392AC58 EOR W10, W10, W11, 0x0
	0x0392AC5C TBNZ X10, 0x0, 0x392AD8C
	0x0392AC60 ADDS W31, W8, 0x1
	0x0392AC64 B.EQ 0x392AD10
	0x0392AC68 LDR W10, [X20 + 0x14]
	0x0392AC6C ADDS W31, W10, 0x1
	0x0392AC70 B.EQ 0x392AD10
	0x0392AC74 LDR W11, [X20 + 0x18]
	0x0392AC78 ADDS W31, W11, 0x1
	0x0392AC7C B.EQ 0x392AD10
	0x0392AC80 CMP W8, W9
	0x0392AC84 B.NE 0x392AD8C
	0x0392AC88 LDR W8, [X19 + 0x14]
	0x0392AC8C CMP W10, W8
	0x0392AC90 B.NE 0x392AD8C
	0x0392AC94 LDR W8, [X19 + 0x18]
	0x0392AC98 CMP W11, W8
	0x0392AC9C B.NE 0x392AD8C
	0x0392ACA0 ADRP X22, 0xAB7000
	0x0392ACA4 ADRP X21, 0x7C9000
	0x0392ACA8 LDRB W8, [X22 + 0x8DE]
	0x0392ACAC LDR X21, [X21 + 0x988]
	0x0392ACB0 TBNZ X8, 0x0, 0x392ACC8
	0x0392ACB4 ADRP X0, 0x7C9000
	0x0392ACB8 LDR X0, [X0 + 0x988]
	0x0392ACBC BL 0x1C16CF4
	0x0392ACC0 MOVZ W8, 0x1
	0x0392ACC4 STRB W8, [X22 + 0x8DE]
	0x0392ACC8 LDR X9, [X20 + 0x20]
	0x0392ACCC LDR X8, [X21]
	0x0392ACD0 CMP X9, 0x0
	0x0392ACD4 CSEL X0, X8, X9, EQ
	0x0392ACD8 CBZ X0, 0x392ADEC
	0x0392ACDC LDR X9, [X19 + 0x20]
	0x0392ACE0 MOV X2, X31
	0x0392ACE4 CMP X9, 0x0
	0x0392ACE8 CSEL X1, X8, X9, EQ
	0x0392ACEC BL 0x322693C
	0x0392ACF0 TBZ X0, 0x0, 0x392AD8C
	0x0392ACF4 LDR W8, [X20 + 0x1C]
	0x0392ACF8 ADD X0, X31, 0xC
	0x0392ACFC MOV X2, X31
	0x0392AD00 STR W8, [X31 + 0xC]
	0x0392AD04 LDR W1, [X19 + 0x1C]
	0x0392AD08 BL 0x337B6C8
	0x0392AD0C B 0x392AD90
	0x0392AD10 ADRP X21, 0xAB7000
	0x0392AD14 LDRB W8, [X21 + 0x8DF]
	0x0392AD18 TBNZ X8, 0x0, 0x392AD30
	0x0392AD1C ADRP X0, 0x7C9000
	0x0392AD20 LDR X0, [X0 + 0x988]
	0x0392AD24 BL 0x1C16CF4
	0x0392AD28 MOVZ W8, 0x1
	0x0392AD2C STRB W8, [X21 + 0x8DF]
	0x0392AD30 ADRP X22, 0x7C9000
	0x0392AD34 LDR X8, [X20 + 0x28]
	0x0392AD38 LDR X22, [X22 + 0x988]
	0x0392AD3C MOV X1, X31
	0x0392AD40 CMP X8, 0x0
	0x0392AD44 LDR X9, [X22]
	0x0392AD48 CSEL X0, X9, X8, EQ
	0x0392AD4C BL 0x32277A8
	0x0392AD50 TBNZ X0, 0x0, 0x392AD8C
	0x0392AD54 LDRB W8, [X21 + 0x8DF]
	0x0392AD58 TBNZ X8, 0x0, 0x392AD70
	0x0392AD5C ADRP X0, 0x7C9000
	0x0392AD60 LDR X0, [X0 + 0x988]
	0x0392AD64 BL 0x1C16CF4
	0x0392AD68 MOVZ W8, 0x1
	0x0392AD6C STRB W8, [X21 + 0x8DF]
	0x0392AD70 LDR X8, [X19 + 0x28]
	0x0392AD74 LDR X9, [X22]
	0x0392AD78 MOV X1, X31
	0x0392AD7C CMP X8, 0x0
	0x0392AD80 CSEL X0, X9, X8, EQ
	0x0392AD84 BL 0x32277A8
	0x0392AD88 TBZ X0, 0x0, 0x392ADA4
	0x0392AD8C MOV W0, W31
	0x0392AD90 LDP X20, X19, [X31 + 0x20]
	0x0392AD94 LDP X22, X21, [X31 + 0x10]
	0x0392AD98 AND W0, W0, 0x1
	0x0392AD9C LDR X30, [X31], #0x30
	0x0392ADA0 RET
	0x0392ADA4 LDRB W8, [X21 + 0x8DF]
	0x0392ADA8 TBNZ X8, 0x0, 0x392ADC0
	0x0392ADAC ADRP X0, 0x7C9000
	0x0392ADB0 LDR X0, [X0 + 0x988]
	0x0392ADB4 BL 0x1C16CF4
	0x0392ADB8 MOVZ W8, 0x1
	0x0392ADBC STRB W8, [X21 + 0x8DF]
	0x0392ADC0 LDR X9, [X20 + 0x28]
	0x0392ADC4 LDR X8, [X22]
	0x0392ADC8 CMP X9, 0x0
	0x0392ADCC CSEL X0, X8, X9, EQ
	0x0392ADD0 CBZ X0, 0x392ADEC
	0x0392ADD4 LDR X9, [X19 + 0x28]
	0x0392ADD8 MOV X2, X31
	0x0392ADDC CMP X9, 0x0
	0x0392ADE0 CSEL X1, X8, X9, EQ
	0x0392ADE4 BL 0x322693C
	0x0392ADE8 B 0x392AD90
	0x0392ADEC BL 0x1C16F20
	0x0392ADF0 SUB X31, X31, 0x50
	0x0392ADF4 STP X30, X25, [X31 + 0x10]
	0x0392ADF8 STP X24, X23, [X31 + 0x20]
	0x0392ADFC STP X22, X21, [X31 + 0x30]
	0x0392AE00 STP X20, X19, [X31 + 0x40]
	0x0392AE04 LDR W8, [X0 + 0x10]
	0x0392AE08 MOV X19, X0
	0x0392AE0C ADDS W31, W8, 0x1
	0x0392AE10 B.EQ 0x392AF0C
	0x0392AE14 LDR W9, [X19 + 0x14]
	0x0392AE18 ADDS W31, W9, 0x1
	0x0392AE1C B.EQ 0x392AF0C
	0x0392AE20 LDR W9, [X19 + 0x18]
	0x0392AE24 ADDS W31, W9, 0x1
	0x0392AE28 B.EQ 0x392AF0C
	0x0392AE2C ADD X0, X31, 0xC
	0x0392AE30 MOV X1, X31
	0x0392AE34 STR W8, [X31 + 0xC]
	0x0392AE38 BL 0x337B6D8
	0x0392AE3C LDR W8, [X19 + 0x14]
	0x0392AE40 MOV W20, W0
	0x0392AE44 ADD X0, X31, 0xC
	0x0392AE48 MOV X1, X31
	0x0392AE4C STR W8, [X31 + 0xC]
	0x0392AE50 BL 0x337B6D8
	0x0392AE54 LDR W8, [X19 + 0x18]
	0x0392AE58 MOV W21, W0
	0x0392AE5C ADD X0, X31, 0xC
	0x0392AE60 MOV X1, X31
	0x0392AE64 STR W8, [X31 + 0xC]
	0x0392AE68 BL 0x337B6D8
	0x0392AE6C LDR W8, [X19 + 0x1C]
	0x0392AE70 MOV W22, W0
	0x0392AE74 ADD X0, X31, 0xC
	0x0392AE78 MOV X1, X31
	0x0392AE7C STR W8, [X31 + 0xC]
	0x0392AE80 BL 0x337B6D8
	0x0392AE84 ADRP X25, 0xAB7000
	0x0392AE88 ADRP X24, 0x7C9000
	0x0392AE8C LDRB W8, [X25 + 0x8DE]
	0x0392AE90 LDR X24, [X24 + 0x988]
	0x0392AE94 MOV W23, W0
	0x0392AE98 TBNZ X8, 0x0, 0x392AEB0
	0x0392AE9C ADRP X0, 0x7C9000
	0x0392AEA0 LDR X0, [X0 + 0x988]
	0x0392AEA4 BL 0x1C16CF4
	0x0392AEA8 MOVZ W8, 0x1
	0x0392AEAC STRB W8, [X25 + 0x8DE]
	0x0392AEB0 LDR X8, [X19 + 0x20]
	0x0392AEB4 LDR X9, [X24]
	0x0392AEB8 CMP X8, 0x0
	0x0392AEBC CSEL X0, X9, X8, EQ
	0x0392AEC0 CBZ X0, 0x392AFB4
	0x0392AEC4 UBFM W8, W20, 0x1D, 0x1C
	0x0392AEC8 LDR X9, [X0]
	0x0392AECC SUB W8, W8, W20
	0x0392AED0 ADD W8, W8, W21
	0x0392AED4 UBFM W10, W8, 0x1D, 0x1C
	0x0392AED8 SUB W8, W10, W8
	0x0392AEDC LDP X10, X1, [X9 + 0x158]
	0x0392AEE0 ADD W8, W8, W22
	0x0392AEE4 UBFM W9, W8, 0x1D, 0x1C
	0x0392AEE8 SUB W8, W9, W8
	0x0392AEEC ADD W8, W8, W23
	0x0392AEF0 MOVZ W9, 0x79ED
	0x0392AEF4 ADD W19, W8, W9
	0x0392AEF8 BLR X10
	0x0392AEFC UBFM W8, W19, 0x1D, 0x1C
	0x0392AF00 SUB W8, W8, W19
	0x0392AF04 ADD W0, W0, W8
	0x0392AF08 B 0x392AF9C
	0x0392AF0C ADRP X20, 0xAB7000
	0x0392AF10 LDRB W8, [X20 + 0x8DF]
	0x0392AF14 TBNZ X8, 0x0, 0x392AF2C
	0x0392AF18 ADRP X0, 0x7C9000
	0x0392AF1C LDR X0, [X0 + 0x988]
	0x0392AF20 BL 0x1C16CF4
	0x0392AF24 MOVZ W8, 0x1
	0x0392AF28 STRB W8, [X20 + 0x8DF]
	0x0392AF2C ADRP X21, 0x7C9000
	0x0392AF30 LDR X8, [X19 + 0x28]
	0x0392AF34 LDR X21, [X21 + 0x988]
	0x0392AF38 MOV X1, X31
	0x0392AF3C CMP X8, 0x0
	0x0392AF40 LDR X9, [X21]
	0x0392AF44 CSEL X0, X9, X8, EQ
	0x0392AF48 BL 0x32277A8
	0x0392AF4C TBZ X0, 0x0, 0x392AF90
	0x0392AF50 LDRB W8, [X20 + 0x8DF]
	0x0392AF54 TBNZ X8, 0x0, 0x392AF6C
	0x0392AF58 ADRP X0, 0x7C9000
	0x0392AF5C LDR X0, [X0 + 0x988]
	0x0392AF60 BL 0x1C16CF4
	0x0392AF64 MOVZ W8, 0x1
	0x0392AF68 STRB W8, [X20 + 0x8DF]
	0x0392AF6C LDR X8, [X19 + 0x28]
	0x0392AF70 LDR X9, [X21]
	0x0392AF74 CMP X8, 0x0
	0x0392AF78 CSEL X0, X9, X8, EQ
	0x0392AF7C CBZ X0, 0x392AFB4
	0x0392AF80 LDR X8, [X0]
	0x0392AF84 LDP X9, X1, [X8 + 0x158]
	0x0392AF88 BLR X9
	0x0392AF8C B 0x392AF9C
	0x0392AF90 MOV X0, X19
	0x0392AF94 MOV X1, X31
	0x0392AF98 BL 0x33CB4E0
	0x0392AF9C LDP X20, X19, [X31 + 0x40]
	0x0392AFA0 LDP X22, X21, [X31 + 0x30]
	0x0392AFA4 LDP X24, X23, [X31 + 0x20]
	0x0392AFA8 LDP X30, X25, [X31 + 0x10]
	0x0392AFAC ADD X31, X31, 0x50
	0x0392AFB0 RET
	0x0392AFB4 BL 0x1C16F20
	0x0392AFB8 STP X30, X21, [X31 - 0x20]!
	0x0392AFBC STP X20, X19, [X31 + 0x10]
	0x0392AFC0 ADRP X21, 0xAB7000
	0x0392AFC4 LDRB W8, [X21 + 0x8E3]
	0x0392AFC8 MOV X20, X1
	0x0392AFCC MOV X19, X0
	0x0392AFD0 TBNZ X8, 0x0, 0x392AFE8
	0x0392AFD4 ADRP X0, 0x823000
	0x0392AFD8 LDR X0, [X0 + 0xBB8]
	0x0392AFDC BL 0x1C16CF4
	0x0392AFE0 MOVZ W8, 0x1
	0x0392AFE4 STRB W8, [X21 + 0x8E3]
	0x0392AFE8 CBZ X20, 0x392B008
	0x0392AFEC ADRP X8, 0x823000
	0x0392AFF0 LDR X8, [X8 + 0xBB8]
	0x0392AFF4 LDR X9, [X20]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D8
	003 Move [X31+80], X29
	004 Move [X31+88], X30
	005 Move [X31+96], X28
	006 Move [X31+104], X27
	007 Move [X31+112], X26
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move [X31+72], X0
	016 Move X23, 0xAB8000
	017 Move X22, 0x7CB000
	018 Move X21, 0x7D1000
	019 Move W8, [X23+2267]
	020 Move X22, [X22+3592]
	021 Move X21, [X21+1672]
	022 Move W20, W1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {89}
	027 Move X0, 0x825000
	028 Move X0, [X0+2784]
	029 Call 0x1C17CF4
	030 Move X0, 0x825000
	031 Move X0, [X0+2792]
	032 Call 0x1C17CF4
	033 Move X0, 0x825000
	034 Move X0, [X0+2800]
	035 Call 0x1C17CF4
	036 Move X0, 0x7D1000
	037 Move X0, [X0+2096]
	038 Call 0x1C17CF4
	039 Move X0, 0x7D1000
	040 Move X0, [X0+2104]
	041 Call 0x1C17CF4
	042 Move X0, 0x7D1000
	043 Move X0, [X0+2112]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CC000
	046 Move X0, [X0+2520]
	047 Call 0x1C17CF4
	048 Move X0, 0x7CB000
	049 Move X0, [X0+3576]
	050 Call 0x1C17CF4
	051 Move X0, 0x7D1000
	052 Move X0, [X0+2120]
	053 Call 0x1C17CF4
	054 Move X0, 0x7D7000
	055 Move X0, [X0+1440]
	056 Call 0x1C17CF4
	057 Move X0, 0x7D1000
	058 Move X0, [X0+1672]
	059 Call 0x1C17CF4
	060 Move X0, 0x7D1000
	061 Move X0, [X0+2128]
	062 Call 0x1C17CF4
	063 Move X0, 0x7CB000
	064 Move X0, [X0+3592]
	065 Call 0x1C17CF4
	066 Move X0, 0x7CB000
	067 Move X0, [X0+3672]
	068 Call 0x1C17CF4
	069 Move X0, 0x825000
	070 Move X0, [X0+2808]
	071 Call 0x1C17CF4
	072 Move X0, 0x825000
	073 Move X0, [X0+2816]
	074 Call 0x1C17CF4
	075 Move X0, 0x7CA000
	076 Move X0, [X0+1432]
	077 Call 0x1C17CF4
	078 Move X0, 0x825000
	079 Move X0, [X0+2728]
	080 Call 0x1C17CF4
	081 Move X0, 0x7CA000
	082 Move X0, [X0+1592]
	083 Call 0x1C17CF4
	084 Move X0, 0x825000
	085 Move X0, [X0+2824]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X23+2267], W8
	089 Move X23, 0x7CA000
	090 Move X23, [X23+1432]
	091 Move X0, [X22]
	092 Move [X31+32], X31
	093 Move [X31+40], X31
	094 Move [X31+48], X31
	095 Call 0x1C17F10
	096 Move X1, [X21]
	097 Move X27, X0
	098 Call HashSet`1<Int32>..ctor, X0
	099 Move X0, [X22]
	100 Call 0x1C17F10
	101 Move X1, [X21]
	102 Move X22, X0
	103 Call HashSet`1<Int32>..ctor, X0
	104 Move X21, 0x825000
	105 Move X21, [X21+2728]
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X21]
	112 Move X8, [X23]
	113 Move X9, [X0+184]
	114 Move W10, [X8+224]
	115 Move X23, [X9+16]
	116 Compare W10, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X1, [X31+72]
	121 Move X0, X23
	122 Move X2, X31
	123 Call Object.op_Inequality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {396}
	128 Move X8, 0x825000
	129 Move X8, [X8+2728]
	130 Move X0, [X8]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, [X31+72]
	136 Compare X0, 0
	137 JumpIfEqual {475}
	138 Move X8, 0x825000
	139 Move X8, [X8+2728]
	140 Move X1, X31
	141 Move X8, [X8]
	142 Move X8, [X8+184]
	143 Move W21, [X8+24]
	144 Call ProBuilderMesh.get_faceCount, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X21, 0x825000
	147 Move X21, [X21+2728]
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X21]
	154 Move X8, [X0+184]
	155 Move X8, [X8+32]
	156 Compare X8, 0
	157 JumpIfEqual {475}
	158 Move X9, 0x7CA000
	159 Move X9, [X9+1592]
	160 Move W25, [X8+24]
	161 Move X21, 0x7CB000
	162 Move X0, [X9]
	163 Move X21, [X21+3672]
	164 Move W1, W25
	165 Call 0x1C17D6C
	166 Move X8, [X21]
	167 Move X23, X0
	168 Move W1, W25
	169 Move X0, X8
	170 Call 0x1C17D6C
	171 Compare X23, 0
	172 JumpIfEqual {475}
	173 Move W11, [X23+24]
	174 Move X19, W25
	175 Move X24, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, X31
	178 Add X9, X24, 32
	179 Add X10, X23, 32
	180 Move TEMP, 0x80800000
	181 Not TEMP
	182 Move W12, TEMP
	183 Move TEMP, 0
	184 Not TEMP
	185 Move W13, TEMP
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X10], W12
	188 Compare X24, 0
	189 JumpIfEqual {475}
	190 Move W11, [X24+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X9], W13
	193 Move W11, [X23+24]
	194 Add X8, X8, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add X8, X23, W20
	198 Move [X8+32], W31
	199 Compare X27, 0
	200 JumpIfEqual {475}
	201 Move X8, 0x7CC000
	202 Move X8, [X8+2520]
	203 Move X0, X27
	204 Move W1, W20
	205 Move X2, [X8]
	206 Call HashSet`1<Int32>.Add, X0, X1
	207 Move W8, [X27+32]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X29, 0x7D1000
	210 Move X29, [X29+2104]
	211 Move [X31], X19
	212 Move X25, 0x825000
	213 Move X25, [X25+2728]
	214 Move X0, [X25]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {220}
	218 Call 0x1C17DFC
	219 Move X0, [X25]
	220 Move X8, [X0+184]
	221 Move X0, [X8+32]
	222 Compare X0, 0
	223 JumpIfEqual {475}
	224 Move X8, 0x825000
	225 Move X8, [X8+2816]
	226 Move W1, W20
	227 Move X21, X27
	228 Move X2, [X8]
	229 Call List`1<Object>.get_Item, X0, X1
	230 Add X8, X23, W20
	231 Move X28, X0
	232 Add X27, X8, 32
	233 Move X25, X0
	234 Compare X25, 0
	235 JumpIfEqual {475}
	236 Move X26, [X25+56]
	237 Compare X26, 0
	238 JumpIfEqual {306}
	239 Move X19, 0x825000
	240 Move X19, [X19+2728]
	241 Move X0, [X19]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {247}
	245 Call 0x1C17DFC
	246 Move X0, [X19]
	247 Move X8, [X0+184]
	248 Move X0, [X8+40]
	249 Compare X0, 0
	250 JumpIfEqual {475}
	251 Move X8, 0x825000
	252 Move X1, [X26+32]
	253 Move X8, [X8+2800]
	254 Move X2, [X8]
	255 Call Dictionary`2<Object, Int32>.get_Item, X0, X1
	256 Move X2, [X31+72]
	257 Move W26, W0
	258 Move W0, W20
	259 Move W1, W26
	260 Call SelectPathFaces.GetWeight, X0, X1, X2
	261 Move W8, [X23+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X8, W26
	265 Move V1, [X27]
	266 Add X9, X23, X8
	267 Add X9, X9, 32
	268 Move V2, [X9]
	269 Add S0, S0, S1
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 Move [X9], S0
	272 Compare X24, 0
	273 JumpIfEqual {475}
	274 Move W9, [X24+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add X8, X24, X8
	277 Move [X8+32], W20
	278 Compare X22, 0
	279 JumpIfEqual {475}
	280 Move X8, 0x7CB000
	281 Move X8, [X8+3576]
	282 Move X0, X22
	283 Move W1, W26
	284 Move X2, [X8]
	285 Call HashSet`1<Int32>.Contains, X0, X1
	286 Move TEMP, X0
	287 And TEMP, TEMP, 1
	288 Compare TEMP, 1
	289 JumpIfEqual {306}
	290 Move X8, 0x7CB000
	291 Move X8, [X8+3576]
	292 Move X0, X21
	293 Move W1, W26
	294 Move X2, [X8]
	295 Call HashSet`1<Int32>.Contains, X0, X1
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfEqual {306}
	300 Move X8, 0x7CC000
	301 Move X8, [X8+2520]
	302 Move X0, X22
	303 Move W1, W26
	304 Move X2, [X8]
	305 Call HashSet`1<Int32>.Add, X0, X1
	306 Move X25, [X25+40]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Compare X22, 0
	309 JumpIfEqual {475}
	310 Move W8, [X22+32]
	311 Move X19, [X31]
	312 Compare W8, 0
	313 JumpIfEqual {380}
	314 Move X8, 0x7D1000
	315 Move X8, [X8+2120]
	316 Move X0, X22
	317 Move X27, X21
	318 Move X1, [X8]
	319 Add X8, X31, 8
	320 Call HashSet`1<Int32>.GetEnumerator, X0
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 Move X8, [X31+24]
	323 Move TEMP, 0x80800000
	324 Not TEMP
	325 Move W9, TEMP
	326 Move S8, W9
	327 Move [X31+2], V0
	328 Move [X31+48], X8
	329 Move X1, [X29]
	330 Add X0, X31, 32
	331 Call Enumerator<Int32>.MoveNext, X0
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {345}
	336 Move W8, [X31+48]
	337 Move W9, [X23+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X9, W8
	340 Add X9, X23, X9
	341 Move V0, [X9+32]
	342 NotImplemented "Instruction FCMP not yet implemented."
	343 Move V8, V0
	344 Move W20, W8
	345 Move X8, 0x7D1000
	346 Move X8, [X8+2096]
	347 Add X0, X31, 32
	348 Move X1, [X8]
	349 Call Enumerator<Int32>.Dispose, X0
	350 Move X8, 0x7CC000
	351 Move X8, [X8+2520]
	352 Move X0, X27
	353 Move W1, W20
	354 Move X2, [X8]
	355 Call HashSet`1<Int32>.Add, X0, X1
	356 Move X8, 0x7D7000
	357 Move X8, [X8+1440]
	358 Move X0, X22
	359 Move W1, W20
	360 Move X2, [X8]
	361 Call HashSet`1<Int32>.Remove, X0, X1
	362 Move W8, [X27+32]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Call 0x1C17F28
	365 Move X26, X0
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X0, X26
	368 Call 0x3EB2AD0
	369 Move X25, [X0]
	370 Call 0x3EB2AE0
	371 Move X8, 0x7D1000
	372 Move X8, [X8+2096]
	373 Add X0, X31, 32
	374 Move X1, [X8]
	375 Call Enumerator<Int32>.Dispose, X0
	376 Compare X25, 0
	377 JumpIfEqual {350}
	378 Move X0, X25
	379 Call 0x1C17F18
	380 Move X0, X24
	381 Move X20, [X31+160]
	382 Move X19, [X31+168]
	383 Move X22, [X31+144]
	384 Move X21, [X31+152]
	385 Move X24, [X31+128]
	386 Move X23, [X31+136]
	387 Move X26, [X31+112]
	388 Move X25, [X31+120]
	389 Move X28, [X31+96]
	390 Move X27, [X31+104]
	391 Move X29, [X31+80]
	392 Move X30, [X31+88]
	393 Move V8, [X31+64]
	394 Add X31, X31, 176
	395 Return X0
	396 Move X8, 0x825000
	397 Move X8, [X8+2824]
	398 Move X0, [X8]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, [X31+72]
	404 Move W1, 1
	405 Move X2, X31
	406 Call WingedEdge.GetWingedEdges, X0, X1
	407 Move X21, 0x825000
	408 Move X21, [X21+2728]
	409 Move X23, X0
	410 Move X8, [X21]
	411 Move W9, [X8+224]
	412 Compare W9, 0
	413 JumpIfNotEqual {417}
	414 Move X0, X8
	415 Call 0x1C17DFC
	416 Move X8, [X21]
	417 Move X8, [X8+184]
	418 Move X0, [X8+40]
	419 Move [X8+32], X23
	420 Compare X0, 0
	421 JumpIfEqual {475}
	422 Move X8, 0x825000
	423 Move X8, [X8+2792]
	424 Move X1, [X8]
	425 Call Dictionary`2<Object, Int32>.Clear, X0
	426 Move X19, [X31+72]
	427 Compare X19, 0
	428 JumpIfEqual {475}
	429 Move X0, X19
	430 Move X1, X31
	431 Call ProBuilderMesh.get_faceCount, X0
	432 Move X8, 0x825000
	433 Move X8, [X8+2728]
	434 Move X8, [X8]
	435 Move X8, [X8+184]
	436 Move [X8+24], W0
	437 Move X8, [X19+40]
	438 Compare X8, 0
	439 JumpIfEqual {475}
	440 Move X21, 0x825000
	441 Move X21, [X21+2784]
	442 Move X23, X31
	443 NotImplemented "Instruction LDRSW not yet implemented."
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move X9, 0x825000
	446 Move X9, [X9+2728]
	447 Move X0, [X9]
	448 Move W9, [X0+224]
	449 Compare W9, 0
	450 JumpIfNotEqual {459}
	451 Call 0x1C17DFC
	452 Move X8, [X31+72]
	453 Move X8, [X8+40]
	454 Compare X8, 0
	455 JumpIfEqual {475}
	456 Move X9, 0x825000
	457 Move X9, [X9+2728]
	458 Move X0, [X9]
	459 Move W9, [X8+24]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move X9, [X0+184]
	462 Move X0, [X9+40]
	463 Compare X0, 0
	464 JumpIfEqual {475}
	465 Add X8, X8, X23
	466 Move X1, [X8+32]
	467 Move X3, [X21]
	468 Move W2, W23
	469 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	470 Move X8, [X31+72]
	471 Add X23, X23, 1
	472 Move X8, [X8+40]
	473 Compare X8, 0
	474 JumpIfNotEqual {443}
	475 Call 0x1C17F20
	476 Call 0x1C17F28
	477 Move X25, X31
	478 Move X26, X0
	479 Move X8, 0x7D1000
	480 Move X8, [X8+2096]
	481 Move X1, [X8]
	482 Add X0, X31, 32
	483 Call Enumerator<Int32>.Dispose, X0
	484 Compare X25, 0
	485 JumpIfNotEqual {488}
	486 Move X0, X26
	487 Call 0x1D2D690
	488 Move X0, X25
	489 Call 0x1C17F18
	490 Call 0x1991590

Method: System.Single GetWeight(System.Int32 face1, System.Int32 face2, UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x0392AFF8 LDR X8, [X8]
	0x0392AFFC CMP X9, X8
	0x0392B000 CSEL X1, X20, X31, EQ
	0x0392B004 B 0x392B00C
	0x0392B008 MOV X1, X31
	0x0392B00C MOV X0, X19
	0x0392B010 LDP X20, X19, [X31 + 0x10]
	0x0392B014 LDP X30, X21, [X31], #0x20
	0x0392B018 B 0x392B01C
	0x0392B01C STR X30, [X31 - 0x30]!
	0x0392B020 STP X22, X21, [X31 + 0x10]
	0x0392B024 STP X20, X19, [X31 + 0x20]
	0x0392B028 CBZ X1, 0x392B054
	0x0392B02C MOV X19, X1
	0x0392B030 MOV X20, X0
	0x0392B034 BL 0x392ABF0
	0x0392B038 TBZ X0, 0x0, 0x392B044
	0x0392B03C MOV W0, W31
	0x0392B040 B 0x392B058
	0x0392B044 LDR W8, [X20 + 0x10]
	0x0392B048 LDR W9, [X19 + 0x10]
	0x0392B04C CMP W8, W9
	0x0392B050 B.LE 0x392B068
	0x0392B054 MOVZ W0, 0x1
	0x0392B058 LDP X20, X19, [X31 + 0x20]
	0x0392B05C LDP X22, X21, [X31 + 0x10]
	0x0392B060 LDR X30, [X31], #0x30
	0x0392B064 RET
	0x0392B068 B.GE 0x392B074
	0x0392B06C MOVN W0, 0x0
	0x0392B070 B 0x392B058
	0x0392B074 LDR W8, [X20 + 0x14]
	0x0392B078 LDR W9, [X19 + 0x14]
	0x0392B07C CMP W8, W9
	0x0392B080 B.GT 0x392B054
	0x0392B084 B.LT 0x392B06C
	0x0392B088 LDR W8, [X20 + 0x18]
	0x0392B08C LDR W9, [X19 + 0x18]
	0x0392B090 MOVN W10, 0x80000000
	0x0392B094 CMP W8, W10
	0x0392B098 CSEL W8, W8, W10, CC
	0x0392B09C CMP W9, W10
	0x0392B0A0 CSEL W9, W9, W10, CC
	0x0392B0A4 CMP W8, W9
	0x0392B0A8 B.GT 0x392B054
	0x0392B0AC B.LT 0x392B06C
	0x0392B0B0 ADRP X22, 0xAB6000
	0x0392B0B4 ADRP X21, 0x7C8000
	0x0392B0B8 LDRB W8, [X22 + 0x8DE]
	0x0392B0BC LDR X21, [X21 + 0x988]
	0x0392B0C0 TBNZ X8, 0x0, 0x392B0D8
	0x0392B0C4 ADRP X0, 0x7C8000
	0x0392B0C8 LDR X0, [X0 + 0x988]
	0x0392B0CC BL 0x1C16CF4
	0x0392B0D0 MOVZ W8, 0x1
	0x0392B0D4 STRB W8, [X22 + 0x8DE]
	0x0392B0D8 LDR X8, [X20 + 0x20]
	0x0392B0DC LDR X9, [X21]
	0x0392B0E0 MOV X1, X31
	0x0392B0E4 CMP X8, 0x0
	0x0392B0E8 CSEL X0, X9, X8, EQ
	0x0392B0EC BL 0x32277A8
	0x0392B0F0 TBZ X0, 0x0, 0x392B12C
	0x0392B0F4 LDRB W8, [X22 + 0x8DE]
	0x0392B0F8 TBNZ X8, 0x0, 0x392B110
	0x0392B0FC ADRP X0, 0x7C8000
	0x0392B100 LDR X0, [X0 + 0x988]
	0x0392B104 BL 0x1C16CF4
	0x0392B108 MOVZ W8, 0x1
	0x0392B10C STRB W8, [X22 + 0x8DE]
	0x0392B110 LDR X8, [X19 + 0x20]
	0x0392B114 LDR X9, [X21]
	0x0392B118 MOV X1, X31
	0x0392B11C CMP X8, 0x0
	0x0392B120 CSEL X0, X9, X8, EQ
	0x0392B124 BL 0x32277A8
	0x0392B128 TBZ X0, 0x0, 0x392B054
	0x0392B12C LDRB W8, [X22 + 0x8DE]
	0x0392B130 TBNZ X8, 0x0, 0x392B148
	0x0392B134 ADRP X0, 0x7C8000
	0x0392B138 LDR X0, [X0 + 0x988]
	0x0392B13C BL 0x1C16CF4
	0x0392B140 MOVZ W8, 0x1
	0x0392B144 STRB W8, [X22 + 0x8DE]
	0x0392B148 LDR X8, [X20 + 0x20]
	0x0392B14C LDR X9, [X21]
	0x0392B150 MOV X1, X31
	0x0392B154 CMP X8, 0x0
	0x0392B158 CSEL X0, X9, X8, EQ
	0x0392B15C BL 0x32277A8
	0x0392B160 TBNZ X0, 0x0, 0x392B19C
	0x0392B164 LDRB W8, [X22 + 0x8DE]
	0x0392B168 TBNZ X8, 0x0, 0x392B180
	0x0392B16C ADRP X0, 0x7C8000
	0x0392B170 LDR X0, [X0 + 0x988]
	0x0392B174 BL 0x1C16CF4
	0x0392B178 MOVZ W8, 0x1
	0x0392B17C STRB W8, [X22 + 0x8DE]
	0x0392B180 LDR X8, [X19 + 0x20]
	0x0392B184 LDR X9, [X21]
	0x0392B188 MOV X1, X31
	0x0392B18C CMP X8, 0x0
	0x0392B190 CSEL X0, X9, X8, EQ
	0x0392B194 BL 0x32277A8
	0x0392B198 TBNZ X0, 0x0, 0x392B06C
	0x0392B19C LDR W8, [X20 + 0x1C]
	0x0392B1A0 LDR W9, [X19 + 0x1C]
	0x0392B1A4 MOVN W10, 0x80000000
	0x0392B1A8 CMP W8, W10
	0x0392B1AC CSEL W8, W8, W10, CC
	0x0392B1B0 CMP W9, W10
	0x0392B1B4 CSEL W9, W9, W10, CC
	0x0392B1B8 CMP W8, W9
	0x0392B1BC B.GT 0x392B054
	0x0392B1C0 CSINV W0, W31, W31, GE
	0x0392B1C4 B 0x392B058
	0x0392B1C8 MOVN W8, 0x80000000
	0x0392B1CC CMP W0, W8
	0x0392B1D0 CSEL W0, W0, W8, CC
	0x0392B1D4 RET
	0x0392B1D8 CBZ X0, 0x392B1E0
	0x0392B1DC B 0x392ABF0
	0x0392B1E0 CMP X1, 0x0
	0x0392B1E4 CSET W0, EQ
	0x0392B1E8 RET
	0x0392B1EC CBZ X0, 0x392B200
	0x0392B1F0 STR X30, [X31 - 0x10]!
	0x0392B1F4 BL 0x392ABF0
	0x0392B1F8 LDR X30, [X31], #0x10
	0x0392B1FC B 0x392B208
	0x0392B200 CMP X1, 0x0
	0x0392B204 CSET W0, EQ
	0x0392B208 ORN W8, W31, W0, 0x0
	0x0392B20C AND W0, W8, 0x1
	0x0392B210 RET
	0x0392B214 CBZ X0, 0x392B22C
	0x0392B218 STR X30, [X31 - 0x10]!
	0x0392B21C BL 0x392B01C
	0x0392B220 UBFM W0, W0, 0x1F, 0x1F
	0x0392B224 LDR X30, [X31], #0x10
	0x0392B228 RET
	0x0392B22C CMP X1, 0x0
	0x0392B230 CSET W0, NE
	0x0392B234 RET
	0x0392B238 CBZ X0, 0x392B250
	0x0392B23C STR X30, [X31 - 0x10]!
	0x0392B240 BL 0x392B01C
	0x0392B244 CMP W0, 0x0
	0x0392B248 CSET W0, GT
	0x0392B24C LDR X30, [X31], #0x10
	0x0392B250 RET
	0x0392B254 STR X30, [X31 - 0x20]!
	0x0392B258 STP X20, X19, [X31 + 0x10]
	0x0392B25C CBZ X0, 0x392B270
	0x0392B260 MOV X19, X1
	0x0392B264 MOV X20, X0
	0x0392B268 BL 0x392ABF0
	0x0392B26C TBZ X0, 0x0, 0x392B278
	0x0392B270 MOVZ W0, 0x1
	0x0392B274 B 0x392B288
	0x0392B278 MOV X0, X20
	0x0392B27C MOV X1, X19
	0x0392B280 BL 0x392B01C
	0x0392B284 UBFM W0, W0, 0x1F, 0x1F
	0x0392B288 LDP X20, X19, [X31 + 0x10]
	0x0392B28C LDR X30, [X31], #0x20
	0x0392B290 RET
	0x0392B294 STR X30, [X31 - 0x20]!
	0x0392B298 STP X20, X19, [X31 + 0x10]
	0x0392B29C MOV X19, X1
	0x0392B2A0 CBZ X0, 0x392B2BC
	0x0392B2A4 MOV X1, X19
	0x0392B2A8 MOV X20, X0
	0x0392B2AC BL 0x392ABF0
	0x0392B2B0 TBZ X0, 0x0, 0x392B2C8
	0x0392B2B4 MOVZ W0, 0x1
	0x0392B2B8 B 0x392B2DC
	0x0392B2BC CMP X19, 0x0
	0x0392B2C0 CSET W0, EQ
	0x0392B2C4 B 0x392B2DC
	0x0392B2C8 MOV X0, X20
	0x0392B2CC MOV X1, X19
	0x0392B2D0 BL 0x392B01C
	0x0392B2D4 CMP W0, 0x0
	0x0392B2D8 CSET W0, GT
	0x0392B2DC LDP X20, X19, [X31 + 0x10]
	0x0392B2E0 LDR X30, [X31], #0x20
	0x0392B2E4 RET
	0x0392B2E8 STR X30, [X31 - 0x60]!
	0x0392B2EC STP X28, X27, [X31 + 0x10]
	0x0392B2F0 STP X26, X25, [X31 + 0x20]
	0x0392B2F4 STP X24, X23, [X31 + 0x30]
	0x0392B2F8 STP X22, X21, [X31 + 0x40]
	0x0392B2FC STP X20, X19, [X31 + 0x50]
	0x0392B300 ADRP X20, 0xAB6000
	0x0392B304 ADRP X22, 0x7C8000
	0x0392B308 LDRB W8, [X20 + 0x8E4]
	0x0392B30C LDR X22, [X22 + 0x8F0]
	0x0392B310 MOV X21, X1
	0x0392B314 MOV X19, X0
	0x0392B318 TBNZ X8, 0x0, 0x392B330
	0x0392B31C ADRP X0, 0x7C8000
	0x0392B320 LDR X0, [X0 + 0x8F0]
	0x0392B324 BL 0x1C16CF4
	0x0392B328 MOVZ W8, 0x1
	0x0392B32C STRB W8, [X20 + 0x8E4]
	0x0392B330 LDR X0, [X22]
	0x0392B334 BL 0x1C16F10
	0x0392B338 MOV X1, X31
	0x0392B33C MOV X20, X0
	0x0392B340 BL 0x3231AC4
	0x0392B344 CBZ X21, 0x392B514
	0x0392B348 MOV X0, X21
	0x0392B34C MOV X1, X31
	0x0392B350 BL 0x322D958
	0x0392B354 CBZ X0, 0x392B514
	0x0392B358 LDR X9, [X0 + 0x18]
	0x0392B35C MOV X21, X0
	0x0392B360 CMP W9, 0x1
	0x0392B364 B.LT 0x392B4E4
	0x0392B368 ADRP X22, 0x7C8000
	0x0392B36C LDR X22, [X22 + 0x988]
	0x0392B370 MOV W8, W31
	0x0392B374 MOV X23, X31
	0x0392B378 AND X9, X9, 0x0
	0x0392B37C ADD X24, X21, 0x20
	0x0392B380 ADRP X25, 0xAB6000
	0x0392B384 MOVZ W26, 0x1
	0x0392B388 ADRP X27, 0xAB6000
	0x0392B38C ADRP X28, 0xAB6000
	0x0392B390 CMP X23, W9, UXTW
	0x0392B394 B.CS 0x392B510
	0x0392B398 LDRH W1, [X24, X23, LSL #1]
	0x0392B39C TBZ X8, 0x0, 0x392B3B4
	0x0392B3A0 CBZ X20, 0x392B514
	0x0392B3A4 MOV X0, X20
	0x0392B3A8 MOV X2, X31
	0x0392B3AC BL 0x3233D30
	0x0392B3B0 B 0x392B4D0
	0x0392B3B4 CMP W1, 0x61
	0x0392B3B8 B.LE 0x392B3E0
	0x0392B3BC CMP W1, 0x6C
	0x0392B3C0 B.LE 0x392B404
	0x0392B3C4 CMP W1, 0x6D
	0x0392B3C8 B.EQ 0x392B46C
	0x0392B3CC CMP W1, 0x70
	0x0392B3D0 B.EQ 0x392B478
	0x0392B3D4 CMP W1, 0x74
	0x0392B3D8 B.EQ 0x392B44C
	0x0392B3DC B 0x392B3A0
	0x0392B3E0 CMP W1, 0x53
	0x0392B3E4 B.GT 0x392B434
	0x0392B3E8 CMP W1, 0x44
	0x0392B3EC B.EQ 0x392B484
	0x0392B3F0 CMP W1, 0x4D
	0x0392B3F4 B.NE 0x392B3A0
	0x0392B3F8 CBZ X20, 0x392B514
	0x0392B3FC LDR W1, [X19 + 0x10]
	0x0392B400 B 0x392B4C4
	0x0392B404 CMP W1, 0x62
	0x0392B408 B.EQ 0x392B4BC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Compare X2, 0
	021 JumpIfEqual {286}
	022 Move X8, [X2+40]
	023 Move X19, X2
	024 Compare X8, 0
	025 JumpIfEqual {286}
	026 Move W9, [X8+24]
	027 Move W21, W0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X24, W21
	030 Add X8, X8, X24
	031 Move W20, W1
	032 Move X1, [X8+32]
	033 Move X0, X19
	034 Move X2, X31
	035 Call Math.Normal, X0, X1
	036 Move X8, [X19+40]
	037 Compare X8, 0
	038 JumpIfEqual {286}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X23, W20
	042 Add X8, X8, X23
	043 Move X1, [X8+32]
	044 Move X0, X19
	045 Move X2, X31
	046 Move V11, V0
	047 Move V12, V1
	048 Move V13, V2
	049 Call Math.Normal, X0, X1
	050 Move X26, 0xAAE000
	051 Move W8, [X26+1925]
	052 Move V8, V0
	053 Move V9, V1
	054 Move V10, V2
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x7C9000
	058 Move X0, [X0+1448]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X26+1925], W8
	062 Move X22, 0x7C9000
	063 Move X22, [X22+1448]
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, -48496640
	070 Multiply S0, S11, S11
	071 Multiply S1, S12, S12
	072 Move V14, [X8+380]
	073 Move X25, 0x7C9000
	074 Add S0, S0, S1
	075 Multiply S1, S13, S13
	076 Move X25, [X25+1440]
	077 Add S0, S1, S0
	078 NotImplemented "Instruction FSQRT not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 NotImplemented "Instruction FDIV not yet implemented."
	081 NotImplemented "Instruction FDIV not yet implemented."
	082 NotImplemented "Instruction FDIV not yet implemented."
	083 Move X27, 0xAAE000
	084 Move W8, [X27+1923]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x7C9000
	088 Move X0, [X0+1440]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X27+1923], W8
	092 Move X8, [X25]
	093 Move X8, [X8+184]
	094 Move S11, [X8]
	095 Move S12, [X8+4]
	096 Move V13, [X8+8]
	097 Move W8, [X26+1925]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x7C9000
	101 Move X0, [X0+1448]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X26+1925], W8
	105 Move X0, [X22]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Multiply S0, S8, S8
	111 Multiply S1, S9, S9
	112 Add S0, S0, S1
	113 Multiply S1, S10, S10
	114 Add S0, S1, S0
	115 NotImplemented "Instruction FSQRT not yet implemented."
	116 Move X26, 0xAAE000
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move W8, [X26+1923]
	119 NotImplemented "Instruction FDIV not yet implemented."
	120 NotImplemented "Instruction FDIV not yet implemented."
	121 NotImplemented "Instruction FDIV not yet implemented."
	122 Compare W8, 0
	123 JumpIfNotEqual {144}
	124 Move X0, 0x7C9000
	125 Move X0, [X0+1440]
	126 Move V8, V4
	127 Call 0x1C17CF4
	128 Move V4, V8
	129 Move W8, 1
	130 Move [X26+1923], W8
	131 Move W8, [X26+1923]
	132 Compare W8, 0
	133 JumpIfNotEqual {139}
	134 Move X0, 0x7C9000
	135 Move X0, [X0+1440]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X26+1923], W8
	139 Move X8, [X25]
	140 Move X8, [X8+184]
	141 Move S4, [X8]
	142 Move S9, [X8+4]
	143 Move V10, [X8+8]
	144 Move X8, [X19+40]
	145 Compare X8, 0
	146 JumpIfEqual {286}
	147 Move W9, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X10, X8, X24
	150 Move X10, [X10+32]
	151 Compare X10, 0
	152 JumpIfEqual {286}
	153 Move X10, [X10+16]
	154 Move [X31+8], S12
	155 Move [X31+16], S9
	156 Compare X10, 0
	157 JumpIfEqual {286}
	158 Move X11, [X25]
	159 Move V9, V13
	160 Move V13, V11
	161 Move X12, [X11+184]
	162 Move W11, [X10+24]
	163 Move V11, [X12]
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move V14, V11
	167 Move V15, V12
	168 Move X13, [X19+88]
	169 NotImplemented "Instruction SCVTF not yet implemented."
	170 Move W12, W31
	171 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	172 Move W14, 12
	173 Move V14, V11
	174 Move V15, V12
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Compare X13, 0
	177 JumpIfEqual {286}
	178 Add X15, X10, W12
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Move W16, [X13+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction MADD not yet implemented."
	183 Move V2, [X15+32]
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 Add W12, W12, 1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction FDIV not yet implemented."
	188 NotImplemented "Instruction INVALID not yet implemented."
	189 Add S14, S14, S2
	190 Add V15, V15, V3
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X8, X8, X23
	193 Move X8, [X8+32]
	194 Compare X8, 0
	195 JumpIfEqual {286}
	196 Move X8, [X8+16]
	197 Compare X8, 0
	198 JumpIfEqual {286}
	199 Move W9, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X11, [X19+88]
	202 NotImplemented "Instruction SCVTF not yet implemented."
	203 Move W10, W31
	204 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	205 Move W12, 12
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Compare X11, 0
	208 JumpIfEqual {286}
	209 Add X13, X8, W10
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Move W14, [X11+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction MADD not yet implemented."
	214 Move V2, [X13+32]
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 Add W10, W10, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 NotImplemented "Instruction INVALID not yet implemented."
	220 Add S11, S11, S2
	221 Add V12, V12, V3
	222 Move X19, 0xAAE000
	223 Move W8, [X19+1924]
	224 Compare W8, 0
	225 JumpIfNotEqual {235}
	226 Move X0, 0x7C9000
	227 Move X0, [X0+1448]
	228 Move V8, V10
	229 Move V10, V4
	230 Call 0x1C17CF4
	231 Move V4, V10
	232 Move V10, V8
	233 Move W8, 1
	234 Move [X19+1924], W8
	235 Move X0, [X22]
	236 Subtract S14, S11, S14
	237 Subtract V11, V12, V15
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {246}
	241 Move V8, V10
	242 Move V10, V4
	243 Call 0x1C17DFC
	244 Move V4, V10
	245 Move V10, V8
	246 Move S3, [X31+8]
	247 Move S2, [X31+12]
	248 Multiply S1, S13, S4
	249 Multiply S4, S14, S14
	250 NotImplemented "Instruction INVALID not yet implemented."
	251 Multiply S2, S3, S2
	252 Multiply S0, S9, S10
	253 Add S1, S1, S2
	254 Add S2, S4, S5
	255 Move S4, V5.S[1]
	256 Move S3, 1
	257 Add S0, S0, S1
	258 Add S1, S2, S4
	259 Move X20, [X31+144]
	260 Move X19, [X31+152]
	261 Move X22, [X31+128]
	262 Move X21, [X31+136]
	263 Move X24, [X31+112]
	264 Move X23, [X31+120]
	265 Move X26, [X31+96]
	266 Move X25, [X31+104]
	267 Move X30, [X31+80]
	268 Move X27, [X31+88]
	269 Move D9, [X31+64]
	270 Move D8, [X31+72]
	271 Move D11, [X31+48]
	272 Move D10, [X31+56]
	273 Move D13, [X31+32]
	274 Move D12, [X31+40]
	275 Move D15, [X31+16]
	276 Move D14, [X31+24]
	277 Move S6, 10
	278 Subtract S0, S3, S0
	279 NotImplemented "Instruction FSQRT not yet implemented."
	280 Add S0, S0, S0
	281 Add S1, S1, S6
	282 Add S0, S0, S1
	283 Add X31, X31, 160
	284 Return V0
	285 Call 0x1C17F28
	286 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.Int32> GetMinimalPath(System.Int32[] predecessors, System.Int32 start, System.Int32 end)

Disassembly:
	0x0392A7DC BL 0x1C16CF4
	0x0392A7E0 ADRP X0, 0x824000
	0x0392A7E4 LDR X0, [X0 + 0xB38]
	0x0392A7E8 BL 0x1C16CF4
	0x0392A7EC MOVZ W8, 0x1
	0x0392A7F0 STRB W8, [X21 + 0x8E6]
	0x0392A7F4 LDR X0, [X23]
	0x0392A7F8 BL 0x1C16F10
	0x0392A7FC MOVN X8, 0x0
	0x0392A800 MOV X1, X31
	0x0392A804 MOV X21, X0
	0x0392A808 STP X8, X8, [X0 + 0x10]
	0x0392A80C BL 0x33BDD8C
	0x0392A810 ADRP X8, 0xFFFFFFFFFD1C3000
	0x0392A814 LDR V0, [X8 + 0x37]
	0x0392A818 STP X31, X31, [X21 + 0x28]
	0x0392A81C STR X31, [X21 + 0x20]
	0x0392A820 STR V0, [X21 + 0x1]
	0x0392A824 STR X21, [X19]
	0x0392A828 LDR X0, [X22]
	0x0392A82C LDR W8, [X0 + 0xE0]
	0x0392A830 CBNZ W8, 0x392A838
	0x0392A834 BL 0x1C16DFC
	0x0392A838 ADRP X8, 0x824000
	0x0392A83C LDR X8, [X8 + 0xB28]
	0x0392A840 LDR X1, [X8]
	0x0392A844 MOV X0, X20
	0x0392A848 MOV X2, X31
	0x0392A84C BL 0x3632B2C
	0x0392A850 MOV X21, X0
	0x0392A854 CBZ X0, 0x392AA14
	0x0392A858 MOV X0, X21
	0x0392A85C MOV X1, X31
	0x0392A860 BL 0x362F808
	0x0392A864 TBZ X0, 0x0, 0x392AB08
	0x0392A868 MOV X0, X21
	0x0392A86C MOV X1, X31
	0x0392A870 BL 0x362F62C
	0x0392A874 CBZ X0, 0x392AA18
	0x0392A878 MOVZ W1, 0x2E
	0x0392A87C MOV W2, W31
	0x0392A880 MOV X3, X31
	0x0392A884 BL 0x3229AE8
	0x0392A888 MOV X21, X0
	0x0392A88C CBZ X0, 0x392AA1C
	0x0392A890 LDR W8, [X21 + 0x18]
	0x0392A894 CBZ W8, 0x392AA20
	0x0392A898 LDR X8, [X19]
	0x0392A89C CBZ X8, 0x392AA24
	0x0392A8A0 LDR X0, [X21 + 0x20]
	0x0392A8A4 ADD X1, X8, 0x10
	0x0392A8A8 MOV X2, X31
	0x0392A8AC BL 0x337BDF4
	0x0392A8B0 LDR W8, [X21 + 0x18]
	0x0392A8B4 CMP W8, 0x1
	0x0392A8B8 B.LS 0x392AA28
	0x0392A8BC LDR X8, [X19]
	0x0392A8C0 CBZ X8, 0x392AA2C
	0x0392A8C4 LDR X0, [X21 + 0x28]
	0x0392A8C8 ADD X1, X8, 0x14
	0x0392A8CC MOV X2, X31
	0x0392A8D0 BL 0x337BDF4
	0x0392A8D4 LDR W8, [X21 + 0x18]
	0x0392A8D8 CMP W8, 0x2
	0x0392A8DC B.LS 0x392AA30
	0x0392A8E0 LDR X8, [X19]
	0x0392A8E4 CBZ X8, 0x392AA34
	0x0392A8E8 LDR X0, [X21 + 0x30]
	0x0392A8EC ADD X1, X8, 0x18
	0x0392A8F0 MOV X2, X31
	0x0392A8F4 BL 0x337BDF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAB8000
	008 Move W8, [X22+2268]
	009 Move W20, W2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x825000
	017 Move X0, [X0+680]
	018 Call 0x1C17CF4
	019 Move X0, 0x825000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move X0, 0x825000
	023 Move X0, [X0+2768]
	024 Call 0x1C17CF4
	025 Move X0, 0x825000
	026 Move X0, [X0+2776]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2268], W8
	030 Compare X21, 0
	031 JumpIfEqual {81}
	032 Move W8, [X21+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X21, W20
	035 Move W8, [X8+32]
	036 Add W31, W8, 1
	037 Move X8, 0x825000
	038 Move X8, [X8+2776]
	039 Move X22, 0x825000
	040 Move X0, [X8]
	041 Move X22, [X22+2768]
	042 Call 0x1C17F10
	043 Move X1, [X22]
	044 Move X22, X0
	045 Call Stack`1<Int32>..ctor, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X22, 0
	048 JumpIfEqual {81}
	049 Move X23, 0x825000
	050 Move X23, [X23+2760]
	051 Move X2, [X23]
	052 Move X0, X22
	053 Move W1, W20
	054 Call Stack`1<Int32>.Push, X0, X1
	055 Move W8, [X21+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X21, W20
	058 Move W20, [X8+32]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, 0x825000
	061 Move X8, [X8+680]
	062 Move X0, X22
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, [X8]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call Enumerable.ToList, X0
	071 Return X0
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X0, X31
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Return X0
	080 Call 0x1C17F28
	081 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0392B40C CMP W1, 0x64
	0x0392B410 B.NE 0x392B3A0
	0x0392B414 LDRB W8, [X28 + 0x8E0]
	0x0392B418 TBNZ X8, 0x0, 0x392B428
	0x0392B41C MOV X0, X22
	0x0392B420 BL 0x1C16CF4
	0x0392B424 STRB W26, [X28 + 0x8E0]
	0x0392B428 CBZ X20, 0x392B514
	0x0392B42C LDR X8, [X19 + 0x30]
	0x0392B430 B 0x392B4A0
	0x0392B434 CMP W1, 0x54
	0x0392B438 B.EQ 0x392B44C
	0x0392B43C CMP W1, 0x5C
	0x0392B440 B.NE 0x392B3A0
	0x0392B444 MOVZ W8, 0x1
	0x0392B448 B 0x392B4D4
	0x0392B44C LDRB W8, [X27 + 0x8DE]
	0x0392B450 TBNZ X8, 0x0, 0x392B460
	0x0392B454 MOV X0, X22
	0x0392B458 BL 0x1C16CF4
	0x0392B45C STRB W26, [X27 + 0x8DE]
	0x0392B460 CBZ X20, 0x392B514
	0x0392B464 LDR X8, [X19 + 0x20]
	0x0392B468 B 0x392B4A0
	0x0392B46C CBZ X20, 0x392B514
	0x0392B470 LDR W1, [X19 + 0x14]
	0x0392B474 B 0x392B4C4
	0x0392B478 CBZ X20, 0x392B514
	0x0392B47C LDR W1, [X19 + 0x18]
	0x0392B480 B 0x392B4C4
	0x0392B484 LDRB W8, [X25 + 0x8DF]
	0x0392B488 TBNZ X8, 0x0, 0x392B498
	0x0392B48C MOV X0, X22
	0x0392B490 BL 0x1C16CF4
	0x0392B494 STRB W26, [X25 + 0x8DF]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAB7000
	007 Move X22, 0x824000
	008 Move X19, 0x824000
	009 Move X20, 0x824000
	010 Move W8, [X21+2269]
	011 Move X22, [X22+2832]
	012 Move X19, [X19+2840]
	013 Move X20, [X20+2728]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x824000
	019 Move X0, [X0+2840]
	020 Call 0x1C17CF4
	021 Move X0, 0x824000
	022 Move X0, [X0+2832]
	023 Call 0x1C17CF4
	024 Move X0, 0x824000
	025 Move X0, [X0+2728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2269], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<Object, Int32>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8+40], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

