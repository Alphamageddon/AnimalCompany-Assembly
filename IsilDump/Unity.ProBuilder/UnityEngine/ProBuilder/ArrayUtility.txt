Type: UnityEngine.ProBuilder.ArrayUtility

Method: T[] ValuesWithIndexes(T[] arr, System.Int32[] indexes)

Disassembly:
	0x02182260 ADD X29, X31, 0x0
	0x02182264 SUB X31, X31, 0x20
	0x02182268 MRS X24, 0xC000
	0x0218226C LDR X8, [X24 + 0x28]
	0x02182270 MOV X19, X4
	0x02182274 MOV X20, X3
	0x02182278 MOV X21, X2
	0x0218227C STUR X8, [X29 - 0x8]
	0x02182280 STP X2, X1, [X29 - 0x18]
	0x02182284 STUR X3, [X29 - 0x20]
	0x02182288 LDR X8, [X4 + 0x38]
	0x0218228C MOV X22, X1
	0x02182290 MOV W23, W0
	0x02182294 CBNZ X8, 0x21822A4
	0x02182298 MOV X0, X19
	0x0218229C BL 0x1C5C6E0
	0x021822A0 LDR X8, [X19 + 0x38]
	0x021822A4 LDP X9, X10, [X8]
	0x021822A8 LDR X11, [X8 + 0x10]
	0x021822AC LDR W2, [X9 + 0xFC]
	0x021822B0 LDR W26, [X10 + 0xFC]
	0x021822B4 LDR W25, [X11 + 0xFC]
	0x021822B8 ADD X10, X31, 0x0
	0x021822BC ADD X11, X2, 0xF
	0x021822C0 AND X11, X11, 0x1FFFFFFFF
	0x021822C4 SUB X10, X10, X11
	0x021822C8 ADD X31, X10, 0x0
	0x021822CC ADD X12, X26, 0xF
	0x021822D0 ADD X11, X31, 0x0
	0x021822D4 AND X12, X12, 0x1FFFFFFFF
	0x021822D8 SUB X11, X11, X12
	0x021822DC ADD X31, X11, 0x0
	0x021822E0 ADD X13, X25, 0xF
	0x021822E4 ADD X12, X31, 0x0
	0x021822E8 AND X13, X13, 0x1FFFFFFFF
	0x021822EC SUB X12, X12, X13
	0x021822F0 ADD X31, X12, 0x0
	0x021822F4 TBZ X23, 0x0, 0x2182328
	0x021822F8 LDR X8, [X24 + 0x28]
	0x021822FC LDUR X9, [X29 - 0x8]
	0x02182300 CMP X8, X9
	0x02182304 B.NE 0x2182418
	0x02182308 ADD X31, X29, 0x0
	0x0218230C LDP X20, X19, [X31 + 0x50]
	0x02182310 LDP X22, X21, [X31 + 0x40]
	0x02182314 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Compare X19, 0
	014 JumpIfEqual {52}
	015 Move X8, [X21+56]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W1, [X19+24]
	024 Call 0x1C17D6C
	025 Move W11, [X19+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, X31
	028 Add X9, X0, 32
	029 Add X10, X19, 32
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X20, 0
	032 JumpIfEqual {52}
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Move W12, [X20+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {52}
	038 Move W12, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X11, X20, X11
	041 Move V0, [X11+32]
	042 Move [X9], D0
	043 Move W11, [X19+24]
	044 Add X8, X8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: System.Collections.Generic.List`1<T> ValuesWithIndexes(System.Collections.Generic.List`1<T> arr, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x02181E50 BL 0x3EB1B20
	0x02181E54 SUB X31, X31, 0x40
	0x02181E58 STP X30, X23, [X31 + 0x10]
	0x02181E5C STP X22, X21, [X31 + 0x20]
	0x02181E60 STP X20, X19, [X31 + 0x30]
	0x02181E64 LDR X8, [X4 + 0x38]
	0x02181E68 MOV X19, X4
	0x02181E6C MOV W21, W3
	0x02181E70 MOV W22, W2
	0x02181E74 MOV X20, X1
	0x02181E78 MOV W23, W0
	0x02181E7C CBNZ X8, 0x2181E88
	0x02181E80 MOV X0, X19
	0x02181E84 BL 0x1C5C6E0
	0x02181E88 TBZ X23, 0x0, 0x2181EA0
	0x02181E8C LDP X20, X19, [X31 + 0x30]
	0x02181E90 LDP X22, X21, [X31 + 0x20]
	0x02181E94 LDP X30, X23, [X31 + 0x10]
	0x02181E98 ADD X31, X31, 0x40
	0x02181E9C RET
	0x02181EA0 STR W22, [X31 + 0xC]
	0x02181EA4 LDR X8, [X19 + 0x38]
	0x02181EA8 ADD X1, X31, 0xC
	0x02181EAC LDR X0, [X8 + 0x8]
	0x02181EB0 BL 0x1C16E04
	0x02181EB4 STR W21, [X31 + 0x8]
	0x02181EB8 LDR X8, [X19 + 0x38]
	0x02181EBC MOV X21, X0
	0x02181EC0 ADD X1, X31, 0x8
	0x02181EC4 LDR X8, [X8 + 0x10]
	0x02181EC8 MOV X0, X8
	0x02181ECC BL 0x1C16E04
	0x02181ED0 MOV X22, X0
	0x02181ED4 ADRP X0, 0x1F9A000
	0x02181ED8 LDR X0, [X0 + 0x7D8]
	0x02181EDC BL 0x1C16D08
	0x02181EE0 MOV X1, X20
	0x02181EE4 MOV X2, X21
	0x02181EE8 MOV X3, X22
	0x02181EEC MOV X4, X31
	0x02181EF0 BL 0x3227C18
	0x02181EF4 MOV X20, X0
	0x02181EF8 ADRP X0, 0x1F7A000
	0x02181EFC LDR X0, [X0 + 0x8E8]
	0x02181F00 BL 0x1C16D08
	0x02181F04 BL 0x1C16F10
	0x02181F08 MOV X1, X20
	0x02181F0C MOV X2, X31
	0x02181F10 MOV X21, X0
	0x02181F14 BL 0x1E3B714
	0x02181F18 MOV X0, X21
	0x02181F1C MOV X1, X19
	0x02181F20 BL 0x1C16DEC
	0x02181F24 SUB X31, X31, 0x40
	0x02181F28 STP X30, X23, [X31 + 0x10]
	0x02181F2C STP X22, X21, [X31 + 0x20]
	0x02181F30 STP X20, X19, [X31 + 0x30]
	0x02181F34 LDR X8, [X4 + 0x38]
	0x02181F38 MOV X19, X4
	0x02181F3C MOV X21, X3
	0x02181F40 MOV X22, X2
	0x02181F44 MOV X20, X1
	0x02181F48 MOV W23, W0
	0x02181F4C CBNZ X8, 0x2181F58
	0x02181F50 MOV X0, X19
	0x02181F54 BL 0x1C5C6E0
	0x02181F58 TBZ X23, 0x0, 0x2181F70
	0x02181F5C LDP X20, X19, [X31 + 0x30]
	0x02181F60 LDP X22, X21, [X31 + 0x20]
	0x02181F64 LDP X30, X23, [X31 + 0x10]
	0x02181F68 ADD X31, X31, 0x40
	0x02181F6C RET
	0x02181F70 STR X22, [X31 + 0x8]
	0x02181F74 LDR X8, [X19 + 0x38]
	0x02181F78 ADD X1, X31, 0x8
	0x02181F7C LDR X0, [X8 + 0x8]
	0x02181F80 BL 0x1C16E04
	0x02181F84 STR W21, [X31]
	0x02181F88 LDR X8, [X19 + 0x38]
	0x02181F8C MOV X21, X0
	0x02181F90 ADD X1, X31, 0x0
	0x02181F94 LDR X8, [X8 + 0x10]
	0x02181F98 MOV X0, X8
	0x02181F9C BL 0x1C16E04
	0x02181FA0 MOV X22, X0
	0x02181FA4 ADRP X0, 0x1F9A000
	0x02181FA8 LDR X0, [X0 + 0x7D8]
	0x02181FAC BL 0x1C16D08
	0x02181FB0 MOV X1, X20
	0x02181FB4 MOV X2, X21
	0x02181FB8 MOV X3, X22
	0x02181FBC MOV X4, X31
	0x02181FC0 BL 0x3227C18
	0x02181FC4 MOV X20, X0
	0x02181FC8 ADRP X0, 0x1F7A000
	0x02181FCC LDR X0, [X0 + 0x8E8]
	0x02181FD0 BL 0x1C16D08
	0x02181FD4 BL 0x1C16F10
	0x02181FD8 MOV X1, X20
	0x02181FDC MOV X2, X31
	0x02181FE0 MOV X21, X0
	0x02181FE4 BL 0x1E3B714
	0x02181FE8 MOV X0, X21
	0x02181FEC MOV X1, X19
	0x02181FF0 BL 0x1C16DEC
	0x02181FF4 SUB X31, X31, 0x40
	0x02181FF8 STP X30, X23, [X31 + 0x10]
	0x02181FFC STP X22, X21, [X31 + 0x20]
	0x02182000 STP X20, X19, [X31 + 0x30]
	0x02182004 LDR X8, [X4 + 0x38]
	0x02182008 MOV X19, X4
	0x0218200C MOV X21, X3
	0x02182010 MOV X22, X2
	0x02182014 MOV X20, X1
	0x02182018 MOV W23, W0
	0x0218201C CBNZ X8, 0x2182028
	0x02182020 MOV X0, X19
	0x02182024 BL 0x1C5C6E0
	0x02182028 TBZ X23, 0x0, 0x2182040
	0x0218202C LDP X20, X19, [X31 + 0x30]
	0x02182030 LDP X22, X21, [X31 + 0x20]
	0x02182034 LDP X30, X23, [X31 + 0x10]
	0x02182038 ADD X31, X31, 0x40
	0x0218203C RET
	0x02182040 STR W22, [X31 + 0x8]
	0x02182044 LDR X8, [X19 + 0x38]
	0x02182048 ADD X1, X31, 0x8
	0x0218204C LDR X0, [X8 + 0x8]
	0x02182050 BL 0x1C16E04
	0x02182054 STR W21, [X31]
	0x02182058 LDR X8, [X19 + 0x38]
	0x0218205C MOV X21, X0
	0x02182060 ADD X1, X31, 0x0
	0x02182064 LDR X8, [X8 + 0x10]
	0x02182068 MOV X0, X8
	0x0218206C BL 0x1C16E04
	0x02182070 MOV X22, X0
	0x02182074 ADRP X0, 0x1F99000
	0x02182078 LDR X0, [X0 + 0x7D8]
	0x0218207C BL 0x1C16D08
	0x02182080 MOV X1, X20
	0x02182084 MOV X2, X21
	0x02182088 MOV X3, X22
	0x0218208C MOV X4, X31
	0x02182090 BL 0x3227C18
	0x02182094 MOV X20, X0
	0x02182098 ADRP X0, 0x1F79000
	0x0218209C LDR X0, [X0 + 0x8E8]
	0x021820A0 BL 0x1C16D08
	0x021820A4 BL 0x1C16F10
	0x021820A8 MOV X1, X20
	0x021820AC MOV X2, X31
	0x021820B0 MOV X21, X0
	0x021820B4 BL 0x1E3B714
	0x021820B8 MOV X0, X21
	0x021820BC MOV X1, X19
	0x021820C0 BL 0x1C16DEC
	0x021820C4 SUB X31, X31, 0x40
	0x021820C8 STP X30, X23, [X31 + 0x10]
	0x021820CC STP X22, X21, [X31 + 0x20]
	0x021820D0 STP X20, X19, [X31 + 0x30]
	0x021820D4 LDR X8, [X4 + 0x38]
	0x021820D8 MOV X19, X4
	0x021820DC MOV X21, X3
	0x021820E0 MOV X22, X2
	0x021820E4 MOV X20, X1
	0x021820E8 MOV W23, W0
	0x021820EC CBNZ X8, 0x21820F8
	0x021820F0 MOV X0, X19
	0x021820F4 BL 0x1C5C6E0
	0x021820F8 TBZ X23, 0x0, 0x2182110
	0x021820FC LDP X20, X19, [X31 + 0x30]
	0x02182100 LDP X22, X21, [X31 + 0x20]
	0x02182104 LDP X30, X23, [X31 + 0x10]
	0x02182108 ADD X31, X31, 0x40
	0x0218210C RET
	0x02182110 STR X22, [X31 + 0x8]
	0x02182114 LDR X8, [X19 + 0x38]
	0x02182118 ADD X1, X31, 0x8
	0x0218211C LDR X0, [X8 + 0x8]
	0x02182120 BL 0x1C16E04
	0x02182124 STR W21, [X31]
	0x02182128 LDR X8, [X19 + 0x38]
	0x0218212C MOV X21, X0
	0x02182130 ADD X1, X31, 0x0
	0x02182134 LDR X8, [X8 + 0x10]
	0x02182138 MOV X0, X8
	0x0218213C BL 0x1C16E04
	0x02182140 MOV X22, X0
	0x02182144 ADRP X0, 0x1F99000
	0x02182148 LDR X0, [X0 + 0x7D8]
	0x0218214C BL 0x1C16D08
	0x02182150 MOV X1, X20
	0x02182154 MOV X2, X21
	0x02182158 MOV X3, X22
	0x0218215C MOV X4, X31
	0x02182160 BL 0x3227C18
	0x02182164 MOV X20, X0
	0x02182168 ADRP X0, 0x1F79000
	0x0218216C LDR X0, [X0 + 0x8E8]
	0x02182170 BL 0x1C16D08
	0x02182174 BL 0x1C16F10
	0x02182178 MOV X1, X20
	0x0218217C MOV X2, X31
	0x02182180 MOV X21, X0
	0x02182184 BL 0x1E3B714
	0x02182188 MOV X0, X21
	0x0218218C MOV X1, X19
	0x02182190 BL 0x1C16DEC
	0x02182194 SUB X31, X31, 0x40
	0x02182198 STP X30, X23, [X31 + 0x10]
	0x0218219C STP X22, X21, [X31 + 0x20]
	0x021821A0 STP X20, X19, [X31 + 0x30]
	0x021821A4 LDR X8, [X4 + 0x38]
	0x021821A8 MOV X19, X4
	0x021821AC MOV X20, X3
	0x021821B0 MOV X22, X2
	0x021821B4 MOV X21, X1
	0x021821B8 MOV W23, W0
	0x021821BC CBNZ X8, 0x21821C8
	0x021821C0 MOV X0, X19
	0x021821C4 BL 0x1C5C6E0
	0x021821C8 TBZ X23, 0x0, 0x21821E0
	0x021821CC LDP X20, X19, [X31 + 0x30]
	0x021821D0 LDP X22, X21, [X31 + 0x20]
	0x021821D4 LDP X30, X23, [X31 + 0x10]
	0x021821D8 ADD X31, X31, 0x40
	0x021821DC RET
	0x021821E0 STR X22, [X31 + 0x8]
	0x021821E4 LDR X8, [X19 + 0x38]
	0x021821E8 ADD X1, X31, 0x8
	0x021821EC LDR X0, [X8 + 0x8]
	0x021821F0 BL 0x1C16E04
	0x021821F4 MOV X22, X0
	0x021821F8 ADRP X0, 0x1F99000
	0x021821FC LDR X0, [X0 + 0x7D8]
	0x02182200 BL 0x1C16D08
	0x02182204 MOV X1, X21
	0x02182208 MOV X2, X22
	0x0218220C MOV X3, X20
	0x02182210 MOV X4, X31
	0x02182214 BL 0x3227C18
	0x02182218 MOV X20, X0
	0x0218221C ADRP X0, 0x1F79000
	0x02182220 LDR X0, [X0 + 0x8E8]
	0x02182224 BL 0x1C16D08
	0x02182228 BL 0x1C16F10
	0x0218222C MOV X1, X20
	0x02182230 MOV X2, X31
	0x02182234 MOV X21, X0
	0x02182238 BL 0x1E3B714
	0x0218223C MOV X0, X21
	0x02182240 MOV X1, X19
	0x02182244 BL 0x1C16DEC
	0x02182248 STP X29, X30, [X31 - 0x60]!
	0x0218224C STR X27, [X31 + 0x10]
	0x02182250 STP X26, X25, [X31 + 0x20]
	0x02182254 STP X24, X23, [X31 + 0x30]
	0x02182258 STP X22, X21, [X31 + 0x40]
	0x0218225C STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {34}
	014 Move X0, 0x1F9B000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F73000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F9B000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F9B000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move X0, 0x1F73000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X8, [X21+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X21
	033 Call 0x1C5D6E0
	034 Compare X19, 0
	035 JumpIfEqual {223}
	036 Move X10, 0x1F9B000
	037 Move X8, [X19]
	038 Move X10, [X10+1952]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X21+56]
	060 Move W23, W0
	061 Move X8, [X8]
	062 Move W9, [X8+309]
	063 Move TEMP, X9
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X8
	068 Call 0x1C5D684
	069 Move X8, X0
	070 Move X0, X8
	071 Call 0x1C17F10
	072 Move X8, [X21+56]
	073 Move W1, W23
	074 Move X20, X0
	075 Move X2, [X8+8]
	076 Call List`1<Object>..ctor, X0, X1
	077 Move X10, 0x1F9B000
	078 Move X8, [X19]
	079 Move X10, [X10+1976]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X19
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X19, X0
	101 Compare X0, 0
	102 JumpIfEqual {224}
	103 Move X23, 0x1F73000
	104 Move X24, 0x1F9B000
	105 Move X23, [X23+3608]
	106 Move X24, [X24+1984]
	107 Move X8, [X19]
	108 Move X1, [X23]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X19
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X19
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {183}
	132 Move X8, [X19]
	133 Move X1, [X24]
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X19
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move W1, W0
	154 Compare X22, 0
	155 JumpIfEqual {221}
	156 Move X8, [X21+56]
	157 Move X2, [X8+16]
	158 Move X0, X22
	159 Call List`1<Object>.get_Item, X0, X1
	160 Move X1, X0
	161 Compare X20, 0
	162 JumpIfEqual {222}
	163 Move X9, [X21+56]
	164 Move W10, [X20+28]
	165 Move X8, [X20+16]
	166 Move X9, [X9+32]
	167 Add W10, W10, 1
	168 Move [X20+28], W10
	169 Compare X8, 0
	170 JumpIfEqual {220}
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Move W11, [X8+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add W9, W10, 1
	175 Add X8, X8, X10
	176 Move [X20+24], W9
	177 Move [X8+32], X1
	178 Move X8, [X9+32]
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Move X0, X20
	182 Call List`1<Object>.AddWithResize, X0, X1
	183 Move X21, X31
	184 Compare X19, 0
	185 JumpIfEqual {209}
	186 Move X10, 0x1F72000
	187 Move X8, [X19]
	188 Move X10, [X10+3584]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X1, [X10]
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X19
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X19
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X21, 0
	210 JumpIfNotEqual {225}
	211 Move X0, X20
	212 Move X20, [X31+48]
	213 Move X19, [X31+56]
	214 Move X22, [X31+32]
	215 Move X21, [X31+40]
	216 Move X24, [X31+16]
	217 Move X23, [X31+24]
	218 Move X30, [X31+64]
	219 Return X0
	220 Call 0x1C17F20
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Move X0, X21
	226 Call 0x1C17F18
	227 Move X22, X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X22
	230 Call 0x3EB2AD0
	231 Move X21, [X0]
	232 Call 0x3EB2AE0
	233 Move X21, X31
	234 Move X22, X0
	235 Compare X19, 0
	236 JumpIfEqual {260}
	237 Move X10, 0x1F72000
	238 Move X8, [X19]
	239 Move X10, [X10+3584]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Move X1, [X10]
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X19
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X19
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X21, 0
	261 JumpIfNotEqual {264}
	262 Move X0, X22
	263 Call 0x1D2D690
	264 Move X0, X21
	265 Call 0x1C17F18
	266 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<System.Int32> AllIndexesOf(System.Collections.Generic.IList`1<T> list, System.Func`2<T, System.Boolean> lambda)

Disassembly:
	0x0217E970 ADD X29, X31, 0x0
	0x0217E974 SUB X31, X31, 0x20
	0x0217E978 MRS X24, 0xC000
	0x0217E97C LDR X8, [X24 + 0x28]
	0x0217E980 MOV X19, X2
	0x0217E984 MOV W20, W1
	0x0217E988 MOV X21, X0
	0x0217E98C STUR X8, [X29 - 0x8]
	0x0217E990 LDR X8, [X2 + 0x38]
	0x0217E994 CBNZ X8, 0x217E9A4
	0x0217E998 MOV X0, X19
	0x0217E99C BL 0x1C5C6E0
	0x0217E9A0 LDR X8, [X19 + 0x38]
	0x0217E9A4 LDR X9, [X8 + 0x20]
	0x0217E9A8 ADD X10, X31, 0x0
	0x0217E9AC LDR W9, [X9 + 0xFC]
	0x0217E9B0 ADD X9, X9, 0xF
	0x0217E9B4 AND X9, X9, 0x1FFFFFFFF
	0x0217E9B8 SUB X22, X10, X9
	0x0217E9BC ADD X31, X22, 0x0
	0x0217E9C0 LDR X0, [X8]
	0x0217E9C4 LDRB W8, [X0 + 0x135]
	0x0217E9C8 TBNZ X8, 0x0, 0x217E9D0
	0x0217E9CC BL 0x1C5C684
	0x0217E9D0 BL 0x1C16F10
	0x0217E9D4 LDR X8, [X19 + 0x38]
	0x0217E9D8 MOV W1, W20
	0x0217E9DC MOV X23, X0
	0x0217E9E0 LDR X2, [X8 + 0x8]
	0x0217E9E4 LDR X8, [X2]
	0x0217E9E8 BLR X8
	0x0217E9EC CMP W20, 0x1
	0x0217E9F0 B.LT 0x217EA6C
	0x0217E9F4 CBZ X21, 0x217EA9C
	0x0217E9F8 MOV W25, W31
	0x0217E9FC SUB X26, X29, 0xC
	0x0217EA00 LDR X8, [X19 + 0x38]
	0x0217EA04 SUB X3, X29, 0x20
	0x0217EA08 MOV X2, X21
	0x0217EA0C MOV X4, X22
	0x0217EA10 LDR X1, [X8 + 0x18]
	0x0217EA14 LDR X0, [X1]
	0x0217EA18 STUR W25, [X29 - 0xC]
	0x0217EA1C STP X26, X22, [X29 - 0x20]
	0x0217EA20 LDR X8, [X1 + 0x10]
	0x0217EA24 BLR X8
	0x0217EA28 CBZ X23, 0x217EA9C
	0x0217EA2C LDR X8, [X19 + 0x38]
	0x0217EA30 MOV X4, X22
	0x0217EA34 LDR X9, [X8 + 0x20]
	0x0217EA38 LDR W9, [X9 + 0x28]
	0x0217EA3C TBNZ X9, 0x1F, 0x217EA44
	0x0217EA40 LDR X4, [X22]
	0x0217EA44 LDR X1, [X8 + 0x28]
	0x0217EA48 SUB X3, X29, 0x20
	0x0217EA4C MOV X2, X23
	0x0217EA50 LDR X0, [X1]
	0x0217EA54 STUR X4, [X29 - 0x20]
	0x0217EA58 LDR X8, [X1 + 0x10]
	0x0217EA5C BLR X8
	0x0217EA60 ADD W25, W25, 0x1
	0x0217EA64 CMP W20, W25
	0x0217EA68 B.NE 0x217EA00
	0x0217EA6C LDR X8, [X24 + 0x28]
	0x0217EA70 LDUR X9, [X29 - 0x8]
	0x0217EA74 CMP X8, X9
	0x0217EA78 B.NE 0x217EAA0
	0x0217EA7C MOV X0, X23
	0x0217EA80 ADD X31, X29, 0x0
	0x0217EA84 LDP X20, X19, [X31 + 0x40]
	0x0217EA88 LDP X22, X21, [X31 + 0x30]
	0x0217EA8C LDP X24, X23, [X31 + 0x20]
	0x0217EA90 LDP X26, X25, [X31 + 0x10]
	0x0217EA94 LDP X29, X30, [X31], #0x50
	0x0217EA98 RET
	0x0217EA9C BL 0x1C16F20
	0x0217EAA0 BL 0x3EB1B20
	0x0217EAA4 STP X29, X30, [X31 - 0x60]!
	0x0217EAA8 STP X28, X27, [X31 + 0x10]
	0x0217EAAC STP X26, X25, [X31 + 0x20]
	0x0217EAB0 STP X24, X23, [X31 + 0x30]
	0x0217EAB4 STP X22, X21, [X31 + 0x40]
	0x0217EAB8 STP X20, X19, [X31 + 0x50]
	0x0217EABC ADD X29, X31, 0x0
	0x0217EAC0 SUB X31, X31, 0x10
	0x0217EAC4 MRS X25, 0xC000
	0x0217EAC8 LDR X8, [X25 + 0x28]
	0x0217EACC MOV X19, X2
	0x0217EAD0 MOV X20, X0
	0x0217EAD4 MOV W24, W1
	0x0217EAD8 STUR X8, [X29 - 0x8]
	0x0217EADC STUR X0, [X29 - 0x10]
	0x0217EAE0 LDR X8, [X2 + 0x38]
	0x0217EAE4 CBNZ X8, 0x217EAF4
	0x0217EAE8 MOV X0, X19
	0x0217EAEC BL 0x1C5C6E0
	0x0217EAF0 LDR X8, [X19 + 0x38]
	0x0217EAF4 LDP X0, X9, [X8]
	0x0217EAF8 LDR W21, [X9 + 0xFC]
	0x0217EAFC ADD X9, X31, 0x0
	0x0217EB00 ADD X10, X21, 0xF
	0x0217EB04 AND X10, X10, 0x1FFFFFFFF
	0x0217EB08 SUB X22, X9, X10
	0x0217EB0C ADD X31, X22, 0x0
	0x0217EB10 LDRB W8, [X0 + 0x135]
	0x0217EB14 TBNZ X8, 0x0, 0x217EB1C
	0x0217EB18 BL 0x1C5C684
	0x0217EB1C MOV W1, W24
	0x0217EB20 BL 0x1C16D6C
	0x0217EB24 CMP W24, 0x1
	0x0217EB28 MOV X23, X0
	0x0217EB2C B.LT 0x217EBB8
	0x0217EB30 MOV X26, X31
	0x0217EB34 MOV W24, W24
	0x0217EB38 SUB X27, X29, 0x10
	0x0217EB3C LDR X8, [X19 + 0x38]
	0x0217EB40 MOV X0, X22
	0x0217EB44 MOV X2, X21
	0x0217EB48 LDR X8, [X8 + 0x8]
	0x0217EB4C LDR W8, [X8 + 0x28]
	0x0217EB50 CMP W8, 0x0
	0x0217EB54 CSEL X1, X20, X27, LT
	0x0217EB58 BL 0x3EB1AC0
	0x0217EB5C CBZ X23, 0x217EBF0
	0x0217EB60 LDR W28, [X23 + 0x18]
	0x0217EB64 CMP X26, X28
	0x0217EB68 B.CS 0x217EBEC
	0x0217EB6C LDR X8, [X23]
	0x0217EB70 MOV X1, X22
	0x0217EB74 MOV X2, X21
	0x0217EB78 LDR W8, [X8 + 0x104]
	0x0217EB7C NOP
	0x0217EB80 MADD X8, X26, X8, X23
	0x0217EB84 ADD X0, X8, 0x20
	0x0217EB88 BL 0x3EB1AC0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X2+56]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {29}
	015 Move X0, 0x1F77000
	016 Move X0, [X0+3600]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F7A000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F77000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X8, [X19+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X19
	028 Call 0x1C5D6E0
	029 Move X8, 0x1F77000
	030 Move X8, [X8+3632]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X8, 0x1F7A000
	034 Move X8, [X8+2928]
	035 Move X22, X0
	036 Move X1, [X8]
	037 Call List`1<Int32>..ctor, X0
	038 Compare X21, 0
	039 JumpIfEqual {152}
	040 Move X8, [X19+56]
	041 Move X1, [X8+8]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X8, [X21]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X21
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X25, 0x1F77000
	072 Move X25, [X25+3600]
	073 Move W23, W0
	074 Move W24, W31
	075 Move X8, [X19+56]
	076 Move X1, [X8]
	077 Move W8, [X1+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X1
	083 Call 0x1C5D684
	084 Move X1, X0
	085 Move X8, [X21]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X21
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X21
	104 Move W1, W24
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X20, 0
	107 JumpIfEqual {152}
	108 Move X8, [X20+64]
	109 Move X9, [X20+24]
	110 Move X2, [X20+40]
	111 And W1, W0, 1
	112 Move X0, X8
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {140}
	118 Compare X22, 0
	119 JumpIfEqual {152}
	120 Move W10, [X22+28]
	121 Move X8, [X22+16]
	122 Move X9, [X25]
	123 Add W10, W10, 1
	124 Move [X22+28], W10
	125 Compare X8, 0
	126 JumpIfEqual {152}
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Move W11, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add W9, W10, 1
	131 Add X8, X8, X10
	132 Move [X22+24], W9
	133 Move [X8+32], W24
	134 Move X8, [X9+32]
	135 Move X0, X22
	136 Move W1, W24
	137 Move X8, [X8+192]
	138 Move X2, [X8+112]
	139 Call List`1<Int32>.AddWithResize, X0, X1
	140 Add W24, W24, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X22
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X24, [X31+16]
	148 Move X23, [X31+24]
	149 Move X30, [X31+64]
	150 Move X25, [X31+72]
	151 Return X0
	152 Call 0x1C17F20

Method: T[] Add(T[] arr, T val)

Disassembly:
	0x0217DCA0 LDRSW X9, [X10]
	0x0217DCA4 ADD X8, X8, X9, 0x4, LSL
	0x0217DCA8 ADD X0, X8, 0x138
	0x0217DCAC LDP X8, X1, [X0]
	0x0217DCB0 MOV X0, X21
	0x0217DCB4 BLR X8
	0x0217DCB8 CMP W0, 0x1
	0x0217DCBC B.LT 0x217DE00
	0x0217DCC0 ADRP X28, 0x1F77000
	0x0217DCC4 LDR X28, [X28 + 0xE10]
	0x0217DCC8 MOV W24, W0
	0x0217DCCC MOV W25, W31
	0x0217DCD0 SUB X27, X29, 0xC
	0x0217DCD4 LDR X8, [X19 + 0x38]
	0x0217DCD8 LDR X1, [X8]
	0x0217DCDC LDRB W8, [X1 + 0x135]
	0x0217DCE0 TBNZ X8, 0x0, 0x217DCF0
	0x0217DCE4 MOV X0, X1
	0x0217DCE8 BL 0x1C5C684
	0x0217DCEC MOV X1, X0
	0x0217DCF0 STUR W25, [X29 - 0xC]
	0x0217DCF4 LDR X8, [X21]
	0x0217DCF8 LDRH W9, [X8 + 0x12E]
	0x0217DCFC CBZ X9, 0x217DD20
	0x0217DD00 LDR X10, [X8 + 0xB0]
	0x0217DD04 ADD X10, X10, 0x8
	0x0217DD08 LDUR X11, [X10 - 0x8]
	0x0217DD0C CMP X11, X1
	0x0217DD10 B.EQ 0x217DD30
	0x0217DD14 SUBS X9, X9, 0x1
	0x0217DD18 ADD X10, X10, 0x10
	0x0217DD1C B.NE 0x217DD08
	0x0217DD20 MOV X0, X21
	0x0217DD24 MOV W2, W31
	0x0217DD28 BL 0x1C5C788
	0x0217DD2C B 0x217DD3C
	0x0217DD30 LDRSW X9, [X10]
	0x0217DD34 ADD X8, X8, X9, 0x4, LSL
	0x0217DD38 ADD X0, X8, 0x138
	0x0217DD3C STP X27, X22, [X29 - 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Compare X20, 0
	014 JumpIfEqual {50}
	015 Move X8, [X21+56]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X20+24]
	024 Add W1, W8, 1
	025 Call 0x1C17D6C
	026 Move W4, [X20+24]
	027 Move X21, X0
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, X21
	031 Move W3, W31
	032 Move X5, X31
	033 Call Array.ConstrainedCopy, X0, X1, X2, X3, X4
	034 Compare X21, 0
	035 JumpIfEqual {50}
	036 Move X8, [X20+24]
	037 Move W9, [X21+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, X8
	040 ShiftRight X8, 32
	041 And X8, X8, 0x7FFFFFFF
	042 Add X8, X21, X8
	043 Move [X8+32], W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, X21
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: T[] AddRange(T[] arr, T[] val)

Disassembly:
	0x0217E8D0 LDR X8, [X1 + 0x38]
	0x0217E8D4 MOV W19, W0
	0x0217E8D8 MOV V8.16B, V1.16B
	0x0217E8DC MOV V9.16B, V0.16B
	0x0217E8E0 CBNZ X8, 0x217E8F4
	0x0217E8E4 MOV X0, X1
	0x0217E8E8 MOV X20, X1
	0x0217E8EC BL 0x1C5C6E0
	0x0217E8F0 LDR X8, [X20 + 0x38]
	0x0217E8F4 LDR X0, [X8]
	0x0217E8F8 LDRB W8, [X0 + 0x135]
	0x0217E8FC TBNZ X8, 0x0, 0x217E904
	0x0217E900 BL 0x1C5C684
	0x0217E904 MOV W1, W19
	0x0217E908 BL 0x1C16D6C
	0x0217E90C CMP W19, 0x1
	0x0217E910 B.LT 0x217E944
	0x0217E914 CBZ X0, 0x217E958
	0x0217E918 LDR W9, [X0 + 0x18]
	0x0217E91C MOV X8, X31
	0x0217E920 MOV W10, W19
	0x0217E924 ADD X11, X0, 0x24
	0x0217E928 CMP X8, X9
	0x0217E92C B.CS 0x217E954
	0x0217E930 ADD X8, X8, 0x1
	0x0217E934 STP S9, S8, [X11 - 0x4]
	0x0217E938 CMP X10, X8
	0x0217E93C ADD X11, X11, 0x8
	0x0217E940 B.NE 0x217E928
	0x0217E944 LDP X20, X19, [X31 + 0x20]
	0x0217E948 LDR X30, [X31 + 0x10]
	0x0217E94C LDP D9, D8, [X31], #0x30
	0x0217E950 RET
	0x0217E954 BL 0x1C16F28
	0x0217E958 BL 0x1C16F20
	0x0217E95C STP X29, X30, [X31 - 0x50]!
	0x0217E960 STP X26, X25, [X31 + 0x10]
	0x0217E964 STP X24, X23, [X31 + 0x20]
	0x0217E968 STP X22, X21, [X31 + 0x30]
	0x0217E96C STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Compare X20, 0
	014 JumpIfEqual {50}
	015 Compare X19, 0
	016 JumpIfEqual {50}
	017 Move X8, [X21+56]
	018 Move X0, [X8+8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X20+24]
	026 Move W9, [X19+24]
	027 Add W1, W9, W8
	028 Call 0x1C17D6C
	029 Move W4, [X20+24]
	030 Move X21, X0
	031 Move X0, X20
	032 Move W1, W31
	033 Move X2, X21
	034 Move W3, W31
	035 Move X5, X31
	036 Call Array.ConstrainedCopy, X0, X1, X2, X3, X4
	037 Move W3, [X20+24]
	038 Move W4, [X19+24]
	039 Move X0, X19
	040 Move W1, W31
	041 Move X2, X21
	042 Move X5, X31
	043 Call Array.ConstrainedCopy, X0, X1, X2, X3, X4
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, X21
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20

Method: T[] Remove(T[] arr, T val)

Disassembly:
	0x02180A60 BL 0x1C5C6E0
	0x02180A64 LDR X8, [X20 + 0x38]
	0x02180A68 LDR X0, [X8 + 0x18]
	0x02180A6C LDRB W8, [X0 + 0x135]
	0x02180A70 TBNZ X8, 0x0, 0x2180A78
	0x02180A74 BL 0x1C5C684
	0x02180A78 LDR W8, [X0 + 0xE0]
	0x02180A7C CBNZ W8, 0x2180A84
	0x02180A80 BL 0x1C16DFC
	0x02180A84 LDR X8, [X20 + 0x38]
	0x02180A88 LDR X0, [X8 + 0x18]
	0x02180A8C LDRB W8, [X0 + 0x135]
	0x02180A90 TBNZ X8, 0x0, 0x2180A98
	0x02180A94 BL 0x1C5C684
	0x02180A98 LDR X8, [X0 + 0xB8]
	0x02180A9C LDR X22, [X8 + 0x8]
	0x02180AA0 CBNZ X22, 0x2180B48
	0x02180AA4 LDR X8, [X20 + 0x38]
	0x02180AA8 LDR X0, [X8 + 0x18]
	0x02180AAC LDRB W8, [X0 + 0x135]
	0x02180AB0 TBNZ X8, 0x0, 0x2180AB8
	0x02180AB4 BL 0x1C5C684
	0x02180AB8 LDR W8, [X0 + 0xE0]
	0x02180ABC CBNZ W8, 0x2180AC4
	0x02180AC0 BL 0x1C16DFC
	0x02180AC4 LDR X8, [X20 + 0x38]
	0x02180AC8 LDR X0, [X8 + 0x18]
	0x02180ACC LDRB W9, [X0 + 0x135]
	0x02180AD0 TBNZ X9, 0x0, 0x2180ADC
	0x02180AD4 BL 0x1C5C684
	0x02180AD8 LDR X8, [X20 + 0x38]
	0x02180ADC LDR X8, [X8 + 0x10]
	0x02180AE0 LDR X9, [X0 + 0xB8]
	0x02180AE4 LDRB W10, [X8 + 0x135]
	0x02180AE8 LDR X23, [X9]
	0x02180AEC TBNZ X10, 0x0, 0x2180AFC
	0x02180AF0 MOV X0, X8
	0x02180AF4 BL 0x1C5C684
	0x02180AF8 MOV X8, X0
	0x02180AFC MOV X0, X8
	0x02180B00 BL 0x1C16F10
	0x02180B04 LDR X8, [X20 + 0x38]
	0x02180B08 MOV X1, X23
	0x02180B0C MOV X22, X0
	0x02180B10 LDP X2, X3, [X8 + 0x20]
	0x02180B14 BL 0x2D2D154
	0x02180B18 LDR X8, [X20 + 0x38]
	0x02180B1C LDR X0, [X8 + 0x18]
	0x02180B20 LDRB W8, [X0 + 0x135]
	0x02180B24 TBNZ X8, 0x0, 0x2180B2C
	0x02180B28 BL 0x1C5C684
	0x02180B2C LDR X8, [X0 + 0xB8]
	0x02180B30 STR X22, [X8 + 0x8]
	0x02180B34 LDR X8, [X20 + 0x38]
	0x02180B38 LDR X0, [X8 + 0x18]
	0x02180B3C LDRB W8, [X0 + 0x135]
	0x02180B40 TBNZ X8, 0x0, 0x2180B48
	0x02180B44 BL 0x1C5C684
	0x02180B48 LDR X8, [X20 + 0x38]
	0x02180B4C MOV X0, X21
	0x02180B50 MOV X1, X22
	0x02180B54 LDR X2, [X8 + 0x30]
	0x02180B58 BL 0x21CD790
	0x02180B5C ADRP X8, 0x1F73000
	0x02180B60 LDR X8, [X8 + 0xEB8]
	0x02180B64 LDR X1, [X8]
	0x02180B68 BL 0x21D577C
	0x02180B6C MOV X1, X0
	0x02180B70 MOV X0, X19
	0x02180B74 LDP X20, X19, [X31 + 0x20]
	0x02180B78 LDP X22, X21, [X31 + 0x10]
	0x02180B7C MOV X2, X31
	0x02180B80 LDP X30, X23, [X31], #0x30
	0x02180B84 B 0x3227FF8
	0x02180B88 STP X30, X23, [X31 - 0x30]!
	0x02180B8C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 32
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X25+40]
	014 Move X19, X2
	015 Move X20, X1
	016 Move X23, X0
	017 Move [X29-8], X8
	018 Move [X29-32], X1
	019 Move X8, [X2+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X8, [X19+56]
	025 Move X9, [X8+32]
	026 Move W24, [X9+252]
	027 Add X9, X31, 0
	028 Add X10, X24, 15
	029 And X10, X10, 0x1FFFFFFFF
	030 Subtract X21, X9, X10
	031 Add X31, X21, 0
	032 Move X0, [X8+8]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X23
	042 Move X22, X0
	043 Move X2, [X8+16]
	044 Move X8, [X2]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X23, [X19+56]
	047 Move X0, X21
	048 Move X2, X24
	049 Move X8, [X23+32]
	050 Move W8, [X8+40]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X8, X29, 32
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Call 0x3EB2AC0
	055 Compare X22, 0
	056 JumpIfEqual {91}
	057 Move X8, [X23+32]
	058 Move X1, [X23+40]
	059 Move W8, [X8+40]
	060 Move X0, [X1]
	061 Move TEMP, X8
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {66}
	065 Move X21, [X21]
	066 Move [X29-24], X21
	067 Move X8, [X1+16]
	068 Subtract X3, X29, 24
	069 Subtract X4, X29, 12
	070 Move X2, X22
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X19+56]
	073 Move X0, X22
	074 Move X1, [X8+48]
	075 Move X8, [X1]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X25+40]
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X31, X29, 0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X25, [X31+16]
	088 Move X29, [X31+80]
	089 Move X30, [X31+88]
	090 Return X0
	091 Call 0x1C17F20
	092 Call 0x3EB2B20

Method: T[] Remove(T[] arr, System.Collections.Generic.IEnumerable`1<T> val)

Disassembly:
	0x02180B90 STP X20, X19, [X31 + 0x20]
	0x02180B94 LDR X8, [X2 + 0x38]
	0x02180B98 MOV X20, X2
	0x02180B9C MOV X19, X1
	0x02180BA0 MOV X21, X0
	0x02180BA4 CBNZ X8, 0x2180BC8
	0x02180BA8 ADRP X0, 0x1F73000
	0x02180BAC LDR X0, [X0 + 0xEB8]
	0x02180BB0 BL 0x1C16CF4
	0x02180BB4 LDR X8, [X20 + 0x38]
	0x02180BB8 CBNZ X8, 0x2180BC8
	0x02180BBC MOV X0, X20
	0x02180BC0 BL 0x1C5C6E0
	0x02180BC4 LDR X8, [X20 + 0x38]
	0x02180BC8 LDR X0, [X8 + 0x18]
	0x02180BCC LDRB W8, [X0 + 0x135]
	0x02180BD0 TBNZ X8, 0x0, 0x2180BD8
	0x02180BD4 BL 0x1C5C684
	0x02180BD8 LDR W8, [X0 + 0xE0]
	0x02180BDC CBNZ W8, 0x2180BE4
	0x02180BE0 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move X8, [X19+56]
	014 Move X2, [X8+16]
	015 Move X0, X21
	016 Move X1, X20
	017 Move X8, [X2]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X8, [X19+56]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X1, [X8+24]
	023 Move X2, [X1]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 CallNoReturn X2

Method: T[] RemoveAt(T[] arr, System.Int32 index)

Disassembly:
	0x02180BE4 LDR X8, [X20 + 0x38]
	0x02180BE8 LDR X0, [X8 + 0x18]
	0x02180BEC LDRB W8, [X0 + 0x135]
	0x02180BF0 TBNZ X8, 0x0, 0x2180BF8
	0x02180BF4 BL 0x1C5C684
	0x02180BF8 LDR X8, [X0 + 0xB8]
	0x02180BFC LDR X22, [X8 + 0x8]
	0x02180C00 CBNZ X22, 0x2180CA8
	0x02180C04 LDR X8, [X20 + 0x38]
	0x02180C08 LDR X0, [X8 + 0x18]
	0x02180C0C LDRB W8, [X0 + 0x135]
	0x02180C10 TBNZ X8, 0x0, 0x2180C18
	0x02180C14 BL 0x1C5C684
	0x02180C18 LDR W8, [X0 + 0xE0]
	0x02180C1C CBNZ W8, 0x2180C24
	0x02180C20 BL 0x1C16DFC
	0x02180C24 LDR X8, [X20 + 0x38]
	0x02180C28 LDR X0, [X8 + 0x18]
	0x02180C2C LDRB W9, [X0 + 0x135]
	0x02180C30 TBNZ X9, 0x0, 0x2180C3C
	0x02180C34 BL 0x1C5C684
	0x02180C38 LDR X8, [X20 + 0x38]
	0x02180C3C LDR X8, [X8 + 0x10]
	0x02180C40 LDR X9, [X0 + 0xB8]
	0x02180C44 LDRB W10, [X8 + 0x135]
	0x02180C48 LDR X23, [X9]
	0x02180C4C TBNZ X10, 0x0, 0x2180C5C
	0x02180C50 MOV X0, X8
	0x02180C54 BL 0x1C5C684
	0x02180C58 MOV X8, X0
	0x02180C5C MOV X0, X8
	0x02180C60 BL 0x1C16F10
	0x02180C64 LDR X8, [X20 + 0x38]
	0x02180C68 MOV X1, X23
	0x02180C6C MOV X22, X0
	0x02180C70 LDP X2, X3, [X8 + 0x20]
	0x02180C74 BL 0x2D30578
	0x02180C78 LDR X8, [X20 + 0x38]
	0x02180C7C LDR X0, [X8 + 0x18]
	0x02180C80 LDRB W8, [X0 + 0x135]
	0x02180C84 TBNZ X8, 0x0, 0x2180C8C
	0x02180C88 BL 0x1C5C684
	0x02180C8C LDR X8, [X0 + 0xB8]
	0x02180C90 STR X22, [X8 + 0x8]
	0x02180C94 LDR X8, [X20 + 0x38]
	0x02180C98 LDR X0, [X8 + 0x18]
	0x02180C9C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W20, W1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Compare X19, 0
	014 JumpIfEqual {52}
	015 Move X8, [X21+56]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X19+24]
	024 Subtract W1, W8, 1
	025 Call 0x1C17D6C
	026 Move X10, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 And X10, X10, 0
	029 Move X8, X31
	030 Move W9, W31
	031 Move W11, W20
	032 Move X12, W10
	033 Add X13, X19, 32
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {52}
	038 Move W14, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W14, [X13]
	041 Add X15, X0, W9
	042 Add W9, W9, 1
	043 Move [X15+32], W14
	044 Add X8, X8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: T[] RemoveAt(System.Collections.Generic.IList`1<T> list, System.Collections.Generic.IEnumerable`1<System.Int32> indexes)

Disassembly:
	0x02180CA0 TBNZ X8, 0x0, 0x2180CA8
	0x02180CA4 BL 0x1C5C684
	0x02180CA8 LDR X8, [X20 + 0x38]
	0x02180CAC MOV X0, X21
	0x02180CB0 MOV X1, X22
	0x02180CB4 LDR X2, [X8 + 0x30]
	0x02180CB8 BL 0x21CF224
	0x02180CBC ADRP X8, 0x1F73000
	0x02180CC0 LDR X8, [X8 + 0xEB8]
	0x02180CC4 LDR X1, [X8]
	0x02180CC8 BL 0x21D577C
	0x02180CCC MOV X1, X0
	0x02180CD0 MOV X0, X19
	0x02180CD4 LDP X20, X19, [X31 + 0x20]
	0x02180CD8 LDP X22, X21, [X31 + 0x10]
	0x02180CDC MOV X2, X31
	0x02180CE0 LDP X30, X23, [X31], #0x30
	0x02180CE4 B 0x3227FF8
	0x02180CE8 STP X30, X23, [X31 - 0x30]!
	0x02180CEC STP X22, X21, [X31 + 0x10]
	0x02180CF0 STP X20, X19, [X31 + 0x20]
	0x02180CF4 LDR X8, [X2 + 0x38]
	0x02180CF8 MOV X21, X2
	0x02180CFC MOV X19, X1
	0x02180D00 MOV X20, X0
	0x02180D04 CBNZ X8, 0x2180D28
	0x02180D08 ADRP X0, 0x1F73000
	0x02180D0C LDR X0, [X0 + 0xEB8]
	0x02180D10 BL 0x1C16CF4
	0x02180D14 LDR X8, [X21 + 0x38]
	0x02180D18 CBNZ X8, 0x2180D28
	0x02180D1C MOV X0, X21
	0x02180D20 BL 0x1C5C6E0
	0x02180D24 LDR X8, [X21 + 0x38]
	0x02180D28 LDR X0, [X8 + 0x18]
	0x02180D2C LDRB W8, [X0 + 0x135]
	0x02180D30 TBNZ X8, 0x0, 0x2180D38
	0x02180D34 BL 0x1C5C684
	0x02180D38 LDR W8, [X0 + 0xE0]
	0x02180D3C CBNZ W8, 0x2180D44
	0x02180D40 BL 0x1C16DFC
	0x02180D44 LDR X8, [X21 + 0x38]
	0x02180D48 LDR X0, [X8 + 0x18]
	0x02180D4C LDRB W8, [X0 + 0x135]
	0x02180D50 TBNZ X8, 0x0, 0x2180D58
	0x02180D54 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X21, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {26}
	012 Move X0, 0x1F9C000
	013 Move X0, [X0+1936]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F9C000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F75000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move X8, [X19+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, 0x1F75000
	027 Move X8, [X8+3632]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 Move X8, 0x1F9C000
	031 Move X8, [X8+1944]
	032 Move X1, X21
	033 Move X22, X0
	034 Move X2, [X8]
	035 Call List`1<Int32>..ctor, X0, X1
	036 Compare X22, 0
	037 JumpIfEqual {54}
	038 Move X8, 0x1F9C000
	039 Move X8, [X8+1936]
	040 Move X0, X22
	041 Move X1, [X8]
	042 Call List`1<Int32>.Sort, X0
	043 Move X8, [X19+56]
	044 Move X0, X20
	045 Move X1, X22
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X2, [X8+8]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call 0x2180F94, X0, X1
	053 Return X0
	054 Call 0x1C17F20

Method: T[] SortedRemoveAt(System.Collections.Generic.IList`1<T> list, System.Collections.Generic.IList`1<System.Int32> sorted)

Disassembly:
	0x02180F94 B.NE 0x2180F80
	0x02180F98 MOV X0, X19
	0x02180F9C MOV W2, W31
	0x02180FA0 BL 0x1C5C788
	0x02180FA4 B 0x2180FB4
	0x02180FA8 LDRSW X9, [X10]
	0x02180FAC ADD X8, X8, X9, 0x4, LSL
	0x02180FB0 ADD X0, X8, 0x138
	0x02180FB4 LDP X8, X1, [X0]
	0x02180FB8 MOV X0, X19
	0x02180FBC BLR X8
	0x02180FC0 MOV X19, X0
	0x02180FC4 CBZ X0, 0x2181198
	0x02180FC8 ADRP X23, 0x1F73000
	0x02180FCC ADRP X24, 0x1F9B000
	0x02180FD0 LDR X23, [X23 + 0xE18]
	0x02180FD4 LDR X24, [X24 + 0x7C0]
	0x02180FD8 LDR X8, [X19]
	0x02180FDC LDR X1, [X23]
	0x02180FE0 LDRH W9, [X8 + 0x12E]
	0x02180FE4 CBZ X9, 0x2181008
	0x02180FE8 LDR X10, [X8 + 0xB0]
	0x02180FEC ADD X10, X10, 0x8
	0x02180FF0 LDUR X11, [X10 - 0x8]
	0x02180FF4 CMP X11, X1
	0x02180FF8 B.EQ 0x2181018
	0x02180FFC SUBS X9, X9, 0x1
	0x02181000 ADD X10, X10, 0x10
	0x02181004 B.NE 0x2180FF0
	0x02181008 MOV X0, X19
	0x0218100C MOV W2, W31
	0x02181010 BL 0x1C5C788
	0x02181014 B 0x2181024
	0x02181018 LDRSW X9, [X10]
	0x0218101C ADD X8, X8, X9, 0x4, LSL
	0x02181020 ADD X0, X8, 0x138
	0x02181024 LDP X8, X1, [X0]
	0x02181028 MOV X0, X19
	0x0218102C BLR X8
	0x02181030 TBZ X0, 0x0, 0x2181104
	0x02181034 LDR X8, [X19]
	0x02181038 LDR X1, [X24]
	0x0218103C LDRH W9, [X8 + 0x12E]
	0x02181040 CBZ X9, 0x2181064
	0x02181044 LDR X10, [X8 + 0xB0]
	0x02181048 ADD X10, X10, 0x8
	0x0218104C LDUR X11, [X10 - 0x8]
	0x02181050 CMP X11, X1
	0x02181054 B.EQ 0x2181074
	0x02181058 SUBS X9, X9, 0x1
	0x0218105C ADD X10, X10, 0x10
	0x02181060 B.NE 0x218104C
	0x02181064 MOV X0, X19
	0x02181068 MOV W2, W31
	0x0218106C BL 0x1C5C788
	0x02181070 B 0x2181080
	0x02181074 LDRSW X9, [X10]
	0x02181078 ADD X8, X8, X9, 0x4, LSL
	0x0218107C ADD X0, X8, 0x138
	0x02181080 LDP X8, X1, [X0]
	0x02181084 MOV X0, X19
	0x02181088 BLR X8
	0x0218108C MOV W1, W0
	0x02181090 CBZ X22, 0x218118C
	0x02181094 LDR X8, [X21 + 0x38]
	0x02181098 LDR X2, [X8 + 0x10]
	0x0218109C MOV X0, X22
	0x021810A0 BL 0x301BCCC
	0x021810A4 MOV X1, X0
	0x021810A8 CBZ X20, 0x2181190
	0x021810AC LDR X9, [X21 + 0x38]
	0x021810B0 LDR W10, [X20 + 0x1C]
	0x021810B4 LDR X8, [X20 + 0x10]
	0x021810B8 LDR X9, [X9 + 0x20]
	0x021810BC ADD W10, W10, 0x1
	0x021810C0 STR W10, [X20 + 0x1C]
	0x021810C4 CBZ X8, 0x2181188
	0x021810C8 LDRSW X10, [X20 + 0x18]
	0x021810CC LDR W11, [X8 + 0x18]
	0x021810D0 CMP W10, W11
	0x021810D4 B.CS 0x21810EC
	0x021810D8 ADD W9, W10, 0x1
	0x021810DC ADD X8, X8, X10, 0x3, LSL
	0x021810E0 STR W9, [X20 + 0x18]
	0x021810E4 STR X1, [X8 + 0x20]
	0x021810E8 B 0x2180FD8
	0x021810EC LDR X8, [X9 + 0x20]
	0x021810F0 LDR X8, [X8 + 0xC0]
	0x021810F4 LDR X2, [X8 + 0x70]
	0x021810F8 MOV X0, X20
	0x021810FC BL 0x301BF90
	0x02181100 B 0x2180FD8
	0x02181104 MOV X21, X31
	0x02181108 CBZ X19, 0x218116C
	0x0218110C ADRP X10, 0x1F72000
	0x02181110 LDR X8, [X19]
	0x02181114 LDR X10, [X10 + 0xE00]
	0x02181118 LDRH W9, [X8 + 0x12E]
	0x0218111C LDR X1, [X10]
	0x02181120 CBZ X9, 0x2181144
	0x02181124 LDR X10, [X8 + 0xB0]
	0x02181128 ADD X10, X10, 0x8
	0x0218112C LDUR X11, [X10 - 0x8]
	0x02181130 CMP X11, X1
	0x02181134 B.EQ 0x2181154
	0x02181138 SUBS X9, X9, 0x1
	0x0218113C ADD X10, X10, 0x10
	0x02181140 B.NE 0x218112C
	0x02181144 MOV X0, X19
	0x02181148 MOV W2, W31
	0x0218114C BL 0x1C5C788
	0x02181150 B 0x2181160
	0x02181154 LDRSW X9, [X10]
	0x02181158 ADD X8, X8, X9, 0x4, LSL
	0x0218115C ADD X0, X8, 0x138
	0x02181160 LDP X8, X1, [X0]
	0x02181164 MOV X0, X19
	0x02181168 BLR X8
	0x0218116C CBNZ X21, 0x218119C
	0x02181170 MOV X0, X20
	0x02181174 LDP X20, X19, [X31 + 0x30]
	0x02181178 LDP X22, X21, [X31 + 0x20]
	0x0218117C LDP X24, X23, [X31 + 0x10]
	0x02181180 LDR X30, [X31], #0x40
	0x02181184 RET
	0x02181188 BL 0x1C16F20
	0x0218118C BL 0x1C16F20
	0x02181190 BL 0x1C16F20
	0x02181194 BL 0x1C16F20
	0x02181198 BL 0x1C16F20
	0x0218119C MOV X0, X21
	0x021811A0 BL 0x1C16F18
	0x021811A4 B 0x21811B8
	0x021811A8 B 0x21811B8
	0x021811AC B 0x21811B8
	0x021811B0 B 0x21811B8
	0x021811B4 B 0x21811B8
	0x021811B8 MOV X22, X0
	0x021811BC CMP W1, 0x1
	0x021811C0 B.NE 0x21811D8
	0x021811C4 MOV X0, X22
	0x021811C8 BL 0x3EB1AD0
	0x021811CC LDR X21, [X0]
	0x021811D0 BL 0x3EB1AE0
	0x021811D4 B 0x2181108
	0x021811D8 MOV X21, X31
	0x021811DC B 0x21811E4
	0x021811E0 MOV X22, X0
	0x021811E4 CBZ X19, 0x2181248
	0x021811E8 ADRP X10, 0x1F72000
	0x021811EC LDR X8, [X19]
	0x021811F0 LDR X10, [X10 + 0xE00]
	0x021811F4 LDRH W9, [X8 + 0x12E]
	0x021811F8 LDR X1, [X10]
	0x021811FC CBZ X9, 0x2181220
	0x02181200 LDR X10, [X8 + 0xB0]
	0x02181204 ADD X10, X10, 0x8
	0x02181208 LDUR X11, [X10 - 0x8]
	0x0218120C CMP X11, X1
	0x02181210 B.EQ 0x2181230
	0x02181214 SUBS X9, X9, 0x1
	0x02181218 ADD X10, X10, 0x10
	0x0218121C B.NE 0x2181208
	0x02181220 MOV X0, X19
	0x02181224 MOV W2, W31
	0x02181228 BL 0x1C5C788
	0x0218122C B 0x218123C
	0x02181230 LDRSW X9, [X10]
	0x02181234 ADD X8, X8, X9, 0x4, LSL
	0x02181238 ADD X0, X8, 0x138
	0x0218123C LDP X8, X1, [X0]
	0x02181240 MOV X0, X19
	0x02181244 BLR X8
	0x02181248 CBNZ X21, 0x2181254
	0x0218124C MOV X0, X22
	0x02181250 BL 0x1D2C690
	0x02181254 MOV X0, X21
	0x02181258 BL 0x1C16F18
	0x0218125C BL 0x1990590
	0x02181260 STP X30, X21, [X31 - 0x20]!
	0x02181264 STP X20, X19, [X31 + 0x10]
	0x02181268 LDR X8, [X2 + 0x38]
	0x0218126C MOV X21, X2
	0x02181270 MOV X19, X1
	0x02181274 MOV X20, X0
	0x02181278 CBNZ X8, 0x2181284
	0x0218127C MOV X0, X21
	0x02181280 BL 0x1C5C6E0
	0x02181284 CBZ X19, 0x2181314
	0x02181288 LDR X8, [X21 + 0x38]
	0x0218128C LDR X0, [X8]
	0x02181290 LDRB W8, [X0 + 0x135]
	0x02181294 TBNZ X8, 0x0, 0x218129C
	0x02181298 BL 0x1C5C684
	0x0218129C LDR W1, [X19 + 0x18]
	0x021812A0 BL 0x1C16D6C
	0x021812A4 LDR W11, [X19 + 0x18]
	0x021812A8 CMP W11, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X2+56]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {28}
	017 Move X0, 0x1F9C000
	018 Move X0, [X0+1952]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F9C000
	021 Move X0, [X0+1960]
	022 Call 0x1C17CF4
	023 Move X8, [X19+56]
	024 Compare X8, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X19
	027 Call 0x1C5D6E0
	028 Compare X20, 0
	029 JumpIfEqual {208}
	030 Move X10, 0x1F9C000
	031 Move X8, [X20]
	032 Move X10, [X10+1952]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X20
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X21, 0
	054 JumpIfEqual {208}
	055 Move X8, [X19+56]
	056 Move W22, W0
	057 Move X1, [X8+8]
	058 Move W8, [X1+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X1
	064 Call 0x1C5D684
	065 Move X1, X0
	066 Move X8, [X21]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X21
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X21
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X19+56]
	087 Move W23, W0
	088 Move X8, [X8+24]
	089 Move W9, [X8+309]
	090 Move TEMP, X9
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X8
	095 Call 0x1C5D684
	096 Move X8, X0
	097 Subtract W1, W23, W22
	098 Move X0, X8
	099 Call 0x1C17D6C
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X24, X0
	102 Move X27, 0x1F9B000
	103 Move X27, [X27+1960]
	104 Move W26, W31
	105 Move W25, W31
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X20]
	108 Move X1, [X27]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X20
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X2, [X0+8]
	126 Move X0, X20
	127 Move W1, W26
	128 NotImplemented "Instruction BLR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X20]
	131 Move X1, [X27]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X20
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X2, [X0+8]
	149 Move X0, X20
	150 Move W1, W26
	151 NotImplemented "Instruction BLR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add W26, W26, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W26, W22
	156 Move X8, [X19+56]
	157 Move X1, [X8]
	158 Move W8, [X1+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {166}
	163 Move X0, X1
	164 Call 0x1C5D684
	165 Move X1, X0
	166 Move X8, [X21]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X21
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X2, [X0+8]
	184 Move X0, X21
	185 Move W1, W25
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Compare X24, 0
	188 JumpIfEqual {208}
	189 Move W9, [X24+24]
	190 Subtract W8, W25, W26
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add X8, X24, W8
	193 Move [X8+32], X0
	194 Add W25, W25, 1
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X24
	197 Move X20, [X31+64]
	198 Move X19, [X31+72]
	199 Move X22, [X31+48]
	200 Move X21, [X31+56]
	201 Move X24, [X31+32]
	202 Move X23, [X31+40]
	203 Move X26, [X31+16]
	204 Move X25, [X31+24]
	205 Move X30, [X31+80]
	206 Move X27, [X31+88]
	207 Return X0
	208 Call 0x1C17F20
	209 Call 0x1C17F28

Method: System.Int32 NearestIndexPriorToValue(System.Collections.Generic.IList`1<T> sorted_list, T value)

Disassembly:
	0x0218001C B.NE 0x2180008
	0x02180020 MOV X0, X20
	0x02180024 MOV W2, W31
	0x02180028 BL 0x1C5C788
	0x0218002C B 0x218003C
	0x02180030 LDRSW X9, [X10]
	0x02180034 ADD X8, X8, X9, 0x4, LSL
	0x02180038 ADD X0, X8, 0x138
	0x0218003C LDP X8, X1, [X0]
	0x02180040 MOV X0, X20
	0x02180044 BLR X8
	0x02180048 CBZ X21, 0x21802A4
	0x0218004C LDR X8, [X19 + 0x38]
	0x02180050 MOV W22, W0
	0x02180054 LDR X1, [X8 + 0x8]
	0x02180058 LDRB W8, [X1 + 0x135]
	0x0218005C TBNZ X8, 0x0, 0x218006C
	0x02180060 MOV X0, X1
	0x02180064 BL 0x1C5C684
	0x02180068 MOV X1, X0
	0x0218006C LDR X8, [X21]
	0x02180070 LDRH W9, [X8 + 0x12E]
	0x02180074 CBZ X9, 0x2180098
	0x02180078 LDR X10, [X8 + 0xB0]
	0x0218007C ADD X10, X10, 0x8
	0x02180080 LDUR X11, [X10 - 0x8]
	0x02180084 CMP X11, X1
	0x02180088 B.EQ 0x21800A8
	0x0218008C SUBS X9, X9, 0x1
	0x02180090 ADD X10, X10, 0x10
	0x02180094 B.NE 0x2180080
	0x02180098 MOV X0, X21
	0x0218009C MOV W2, W31
	0x021800A0 BL 0x1C5C788
	0x021800A4 B 0x21800B4
	0x021800A8 LDRSW X9, [X10]
	0x021800AC ADD X8, X8, X9, 0x4, LSL
	0x021800B0 ADD X0, X8, 0x138
	0x021800B4 LDP X8, X1, [X0]
	0x021800B8 MOV X0, X21
	0x021800BC BLR X8
	0x021800C0 LDR X8, [X19 + 0x38]
	0x021800C4 MOV W23, W0
	0x021800C8 LDR X8, [X8 + 0x18]
	0x021800CC LDRB W9, [X8 + 0x135]
	0x021800D0 TBNZ X9, 0x0, 0x21800E0
	0x021800D4 MOV X0, X8
	0x021800D8 BL 0x1C5C684
	0x021800DC MOV X8, X0
	0x021800E0 SUB W1, W23, W22
	0x021800E4 MOV X0, X8
	0x021800E8 BL 0x1C16D6C
	0x021800EC CMP W23, 0x1
	0x021800F0 MOV X24, X0
	0x021800F4 B.LT 0x2180288
	0x021800F8 ADRP X27, 0x1F9B000
	0x021800FC LDR X27, [X27 + 0x7A8]
	0x02180100 MOV W26, W31
	0x02180104 MOV W25, W31
	0x02180108 CMP W26, W22
	0x0218010C B.GE 0x21801EC
	0x02180110 LDR X8, [X20]
	0x02180114 LDR X1, [X27]
	0x02180118 LDRH W9, [X8 + 0x12E]
	0x0218011C CBZ X9, 0x2180140
	0x02180120 LDR X10, [X8 + 0xB0]
	0x02180124 ADD X10, X10, 0x8
	0x02180128 LDUR X11, [X10 - 0x8]
	0x0218012C CMP X11, X1
	0x02180130 B.EQ 0x2180150
	0x02180134 SUBS X9, X9, 0x1
	0x02180138 ADD X10, X10, 0x10
	0x0218013C B.NE 0x2180128
	0x02180140 MOV X0, X20
	0x02180144 MOV W2, W31
	0x02180148 BL 0x1C5C788
	0x0218014C B 0x218015C
	0x02180150 LDRSW X9, [X10]
	0x02180154 ADD X8, X8, X9, 0x4, LSL
	0x02180158 ADD X0, X8, 0x138
	0x0218015C LDP X8, X2, [X0]
	0x02180160 MOV X0, X20
	0x02180164 MOV W1, W26
	0x02180168 BLR X8
	0x0218016C CMP W0, W25
	0x02180170 B.NE 0x21801EC
	0x02180174 LDR X8, [X20]
	0x02180178 LDR X1, [X27]
	0x0218017C LDRH W9, [X8 + 0x12E]
	0x02180180 CBZ X9, 0x21801A4
	0x02180184 LDR X10, [X8 + 0xB0]
	0x02180188 ADD X10, X10, 0x8
	0x0218018C LDUR X11, [X10 - 0x8]
	0x02180190 CMP X11, X1
	0x02180194 B.EQ 0x21801B4
	0x02180198 SUBS X9, X9, 0x1
	0x0218019C ADD X10, X10, 0x10
	0x021801A0 B.NE 0x218018C
	0x021801A4 MOV X0, X20
	0x021801A8 MOV W2, W31
	0x021801AC BL 0x1C5C788
	0x021801B0 B 0x21801C0
	0x021801B4 LDRSW X9, [X10]
	0x021801B8 ADD X8, X8, X9, 0x4, LSL
	0x021801BC ADD X0, X8, 0x138
	0x021801C0 LDP X8, X2, [X0]
	0x021801C4 MOV X0, X20
	0x021801C8 MOV W1, W26
	0x021801CC BLR X8
	0x021801D0 CMP W0, W25
	0x021801D4 B.NE 0x218027C
	0x021801D8 ADD W26, W26, 0x1
	0x021801DC CMP W26, W22
	0x021801E0 B.NE 0x2180174
	0x021801E4 MOV W26, W22
	0x021801E8 B 0x218027C
	0x021801EC LDR X8, [X19 + 0x38]
	0x021801F0 LDR X1, [X8]
	0x021801F4 LDRB W8, [X1 + 0x135]
	0x021801F8 TBNZ X8, 0x0, 0x2180208
	0x021801FC MOV X0, X1
	0x02180200 BL 0x1C5C684
	0x02180204 MOV X1, X0
	0x02180208 LDR X8, [X21]
	0x0218020C LDRH W9, [X8 + 0x12E]
	0x02180210 CBZ X9, 0x2180234
	0x02180214 LDR X10, [X8 + 0xB0]
	0x02180218 ADD X10, X10, 0x8
	0x0218021C LDUR X11, [X10 - 0x8]
	0x02180220 CMP X11, X1
	0x02180224 B.EQ 0x2180244
	0x02180228 SUBS X9, X9, 0x1
	0x0218022C ADD X10, X10, 0x10
	0x02180230 B.NE 0x218021C
	0x02180234 MOV X0, X21
	0x02180238 MOV W2, W31
	0x0218023C BL 0x1C5C788
	0x02180240 B 0x2180250
	0x02180244 LDRSW X9, [X10]
	0x02180248 ADD X8, X8, X9, 0x4, LSL
	0x0218024C ADD X0, X8, 0x138
	0x02180250 LDP X8, X2, [X0]
	0x02180254 MOV X0, X21
	0x02180258 MOV W1, W25
	0x0218025C BLR X8
	0x02180260 CBZ X24, 0x21802A4
	0x02180264 LDR W9, [X24 + 0x18]
	0x02180268 SUB W8, W25, W26
	0x0218026C CMP W8, W9
	0x02180270 B.CS 0x21802A8
	0x02180274 ADD X8, X24, W8, 0x3, SXTW
	0x02180278 STR X0, [X8 + 0x20]
	0x0218027C ADD W25, W25, 0x1
	0x02180280 CMP W25, W23
	0x02180284 B.NE 0x2180108
	0x02180288 MOV X0, X24
	0x0218028C LDP X20, X19, [X31 + 0x40]
	0x02180290 LDP X22, X21, [X31 + 0x30]
	0x02180294 LDP X24, X23, [X31 + 0x20]
	0x02180298 LDP X26, X25, [X31 + 0x10]
	0x0218029C LDP X30, X27, [X31], #0x50
	0x021802A0 RET
	0x021802A4 BL 0x1C16F20
	0x021802A8 BL 0x1C16F28
	0x021802AC STP X29, X30, [X31 - 0x60]!
	0x021802B0 STP X28, X27, [X31 + 0x10]
	0x021802B4 STP X26, X25, [X31 + 0x20]
	0x021802B8 STP X24, X23, [X31 + 0x30]
	0x021802BC STP X22, X21, [X31 + 0x40]
	0x021802C0 STP X20, X19, [X31 + 0x50]
	0x021802C4 ADD X29, X31, 0x0
	0x021802C8 SUB X31, X31, 0x40
	0x021802CC MRS X22, 0xC000
	0x021802D0 LDR X8, [X22 + 0x28]
	0x021802D4 MOV X25, X2
	0x021802D8 MOV X20, X1
	0x021802DC MOV X21, X0
	0x021802E0 STUR X8, [X29 - 0x8]
	0x021802E4 LDR X8, [X2 + 0x38]
	0x021802E8 CBNZ X8, 0x2180318
	0x021802EC ADRP X0, 0x1F9B000
	0x021802F0 LDR X0, [X0 + 0x7A0]
	0x021802F4 BL 0x1C16CF4
	0x021802F8 ADRP X0, 0x1F9B000
	0x021802FC LDR X0, [X0 + 0x7A8]
	0x02180300 BL 0x1C16CF4
	0x02180304 LDR X8, [X25 + 0x38]
	0x02180308 CBNZ X8, 0x2180318
	0x0218030C MOV X0, X25
	0x02180310 BL 0x1C5C6E0
	0x02180314 LDR X8, [X25 + 0x38]
	0x02180318 LDR X8, [X8 + 0x28]
	0x0218031C LDR W9, [X8 + 0xFC]
	0x02180320 ADD X8, X31, 0x0
	0x02180324 STUR X9, [X29 - 0x30]
	0x02180328 ADD X9, X9, 0xF
	0x0218032C AND X9, X9, 0x1FFFFFFFF
	0x02180330 SUB X23, X8, X9
	0x02180334 ADD X31, X23, 0x0
	0x02180338 CBZ X20, 0x2180674
	0x0218033C ADRP X10, 0x1F9B000
	0x02180340 LDR X8, [X20]
	0x02180344 LDR X10, [X10 + 0x7A0]
	0x02180348 LDRH W9, [X8 + 0x12E]
	0x0218034C LDR X1, [X10]
	0x02180350 CBZ X9, 0x2180374
	0x02180354 LDR X10, [X8 + 0xB0]
	0x02180358 ADD X10, X10, 0x8
	0x0218035C LDUR X11, [X10 - 0x8]
	0x02180360 CMP X11, X1
	0x02180364 B.EQ 0x2180384
	0x02180368 SUBS X9, X9, 0x1
	0x0218036C ADD X10, X10, 0x10
	0x02180370 B.NE 0x218035C
	0x02180374 MOV X0, X20
	0x02180378 MOV W2, W31
	0x0218037C BL 0x1C5C788
	0x02180380 B 0x2180390
	0x02180384 LDRSW X9, [X10]
	0x02180388 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+28], W1
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {14}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move [X31+16], X31
	015 Move [X31+12], W31
	016 Compare X20, 0
	017 JumpIfEqual {240}
	018 Move X8, [X19+56]
	019 Move X1, [X8+8]
	020 Move W8, [X1+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X1
	026 Call 0x1C5D684
	027 Move X1, X0
	028 Move X8, [X20]
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X20
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Subtract W21, W0, 1
	049 Add X0, X31, 16
	050 Move W1, W31
	051 Move W2, W21
	052 Move X3, X31
	053 Call SearchRange..ctor, X0, X1, X2
	054 Move X8, [X19+56]
	055 Move X1, [X8]
	056 Move W8, [X1+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X1
	062 Call 0x1C5D684
	063 Move X1, X0
	064 Move X8, [X20]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X20
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X2, [X0+8]
	082 Move X0, X20
	083 Move W1, W31
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X19+56]
	086 Move W1, W0
	087 Add X0, X31, 28
	088 Move X2, [X8+48]
	089 Call Int32.CompareTo, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {117}
	094 Move X8, [X19+56]
	095 Move X1, [X8]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X20]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 Move TEMP, 0
	118 Not TEMP
	119 Move W21, TEMP
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X20
	126 Move W1, W21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X19+56]
	129 Move W1, W0
	130 Add X0, X31, 28
	131 Move X2, [X8+48]
	132 Call Int32.CompareTo, X0, X1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X0, X31, 16
	135 Move X1, X31
	136 Call SearchRange.Center, X0
	137 Move X8, [X19+56]
	138 Move W21, W0
	139 Move X1, [X8]
	140 Move W8, [X1+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {148}
	145 Move X0, X1
	146 Call 0x1C5D684
	147 Move X1, X0
	148 Move X8, [X20]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X20
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X2, [X0+8]
	166 Move X0, X20
	167 Move W1, W21
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move [X31+12], W0
	170 Move X8, [X19+56]
	171 Move W1, [X31+28]
	172 Add X0, X31, 12
	173 Move X2, [X8+48]
	174 Call Int32.CompareTo, X0, X1
	175 Move W21, W0
	176 Add X0, X31, 16
	177 Move X1, X31
	178 Call SearchRange.Center, X0
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W21, W0
	181 Move [X31+20], W21
	182 Move [X31+16], W21
	183 Move X8, [X19+56]
	184 Move X1, [X8]
	185 Move W8, [X1+309]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {193}
	190 Move X0, X1
	191 Call 0x1C5D684
	192 Move X1, X0
	193 Move X8, [X20]
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X20
	204 Move W2, W31
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X2, [X0+8]
	211 Add W1, W21, 1
	212 Move X0, X20
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move [X31+12], W0
	215 Move X8, [X19+56]
	216 Move W1, [X31+28]
	217 Add X0, X31, 12
	218 Move X2, [X8+48]
	219 Call Int32.CompareTo, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, -2147483648
	222 Compare TEMP, -2147483648
	223 JumpIfNotEqual {239}
	224 Add X0, X31, 16
	225 Move X1, X31
	226 Call SearchRange.Valid, X0
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {134}
	231 Move W21, W31
	232 Move W0, W21
	233 Move X20, [X31+48]
	234 Move X19, [X31+56]
	235 Move X30, [X31+32]
	236 Move X21, [X31+40]
	237 Add X31, X31, 64
	238 Return X0
	239 Move W21, [X31+16]
	240 Call 0x1C17F20

Method: System.Collections.Generic.List`1<T> Fill(System.Func`2<System.Int32, T> ctor, System.Int32 length)

Disassembly:
	0x0217F7CC TBNZ X8, 0x0, 0x217F7DC
	0x0217F7D0 MOV X0, X1
	0x0217F7D4 BL 0x1C5C684
	0x0217F7D8 MOV X1, X0
	0x0217F7DC STUR W23, [X29 - 0xC]
	0x0217F7E0 LDR X8, [X20]
	0x0217F7E4 LDRH W9, [X8 + 0x12E]
	0x0217F7E8 CBZ X9, 0x217F80C
	0x0217F7EC LDR X10, [X8 + 0xB0]
	0x0217F7F0 ADD X10, X10, 0x8
	0x0217F7F4 LDUR X11, [X10 - 0x8]
	0x0217F7F8 CMP X11, X1
	0x0217F7FC B.EQ 0x217F81C
	0x0217F800 SUBS X9, X9, 0x1
	0x0217F804 ADD X10, X10, 0x10
	0x0217F808 B.NE 0x217F7F4
	0x0217F80C MOV X0, X20
	0x0217F810 MOV W2, W31
	0x0217F814 BL 0x1C5C788
	0x0217F818 B 0x217F828
	0x0217F81C LDRSW X9, [X10]
	0x0217F820 ADD X8, X8, X9, 0x4, LSL
	0x0217F824 ADD X0, X8, 0x138
	0x0217F828 STP X27, X24, [X29 - 0x20]
	0x0217F82C LDR X1, [X0 + 0x8]
	0x0217F830 SUB X3, X29, 0x20
	0x0217F834 MOV X2, X20
	0x0217F838 MOV X4, X24
	0x0217F83C LDP X0, X8, [X1 + 0x8]
	0x0217F840 BLR X8
	0x0217F844 MOV X0, X26
	0x0217F848 MOV X1, X24
	0x0217F84C MOV X2, X21
	0x0217F850 BL 0x3EB1AC0
	0x0217F854 LDR X23, [X19 + 0x38]
	0x0217F858 LDUR X9, [X29 - 0x28]
	0x0217F85C MOV X0, X25
	0x0217F860 MOV X2, X21
	0x0217F864 LDR X8, [X23 + 0x18]
	0x0217F868 LDR W8, [X8 + 0x28]
	0x0217F86C CMP W8, 0x0
	0x0217F870 CSEL X1, X9, X28, LT
	0x0217F874 BL 0x3EB1AC0
	0x0217F878 LDR X8, [X23 + 0x18]
	0x0217F87C LDRB W9, [X8 + 0x135]
	0x0217F880 TBNZ X9, 0x0, 0x217F898
	0x0217F884 MOV X0, X8
	0x0217F888 BL 0x1C5C684
	0x0217F88C LDR X23, [X19 + 0x38]
	0x0217F890 LDR X8, [X23 + 0x18]
	0x0217F894 B 0x217F89C
	0x0217F898 MOV X0, X8
	0x0217F89C LDR W9, [X8 + 0x28]
	0x0217F8A0 LDR X1, [X23 + 0x30]
	0x0217F8A4 MOV X8, X25
	0x0217F8A8 TBNZ X9, 0x1F, 0x217F8B0
	0x0217F8AC LDR X8, [X25]
	0x0217F8B0 SUB X4, X29, 0x20
	0x0217F8B4 SUB X5, X29, 0xC
	0x0217F8B8 MOV X2, X22
	0x0217F8BC MOV X3, X26
	0x0217F8C0 STUR X8, [X29 - 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X19+56]
	025 Move W1, W20
	026 Move X22, X0
	027 Move X2, [X8+8]
	028 Call List`1<Object>..ctor, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X21, 0
	031 JumpIfEqual {71}
	032 Move W23, W31
	033 Move X8, [X21+24]
	034 Move X0, [X21+64]
	035 Move X2, [X21+40]
	036 Move W1, W23
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X22, 0
	039 JumpIfEqual {71}
	040 Move X9, [X19+56]
	041 Move W10, [X22+28]
	042 Move X8, [X22+16]
	043 Move X9, [X9+40]
	044 Add W10, W10, 1
	045 Move [X22+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 Move X1, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W9, W10, 1
	053 Add X8, X8, X10
	054 Move [X22+24], W9
	055 Move [X8+32], X1
	056 Move X8, [X9+32]
	057 Move X0, X22
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Object>.AddWithResize, X0, X1
	061 Add W23, W23, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X22
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Call 0x1C17F20

Method: T[] Fill(T val, System.Int32 length)

Disassembly:
	0x0217F698 TBNZ X8, 0x1F, 0x217F6F8
	0x0217F69C LDR X8, [X19 + 0x38]
	0x0217F6A0 LDR X1, [X8]
	0x0217F6A4 LDRB W8, [X1 + 0x135]
	0x0217F6A8 TBNZ X8, 0x0, 0x217F6B8
	0x0217F6AC MOV X0, X1
	0x0217F6B0 BL 0x1C5C684
	0x0217F6B4 MOV X1, X0
	0x0217F6B8 STUR W23, [X29 - 0xC]
	0x0217F6BC LDR X8, [X20]
	0x0217F6C0 LDRH W9, [X8 + 0x12E]
	0x0217F6C4 CBZ X9, 0x217F6E8
	0x0217F6C8 LDR X10, [X8 + 0xB0]
	0x0217F6CC ADD X10, X10, 0x8
	0x0217F6D0 LDUR X11, [X10 - 0x8]
	0x0217F6D4 CMP X11, X1
	0x0217F6D8 B.EQ 0x217F700
	0x0217F6DC SUBS X9, X9, 0x1
	0x0217F6E0 ADD X10, X10, 0x10
	0x0217F6E4 B.NE 0x217F6D0
	0x0217F6E8 MOV X0, X20
	0x0217F6EC MOV W2, W31
	0x0217F6F0 BL 0x1C5C788
	0x0217F6F4 B 0x217F70C
	0x0217F6F8 MOVN W23, 0x0
	0x0217F6FC B 0x217FA18
	0x0217F700 LDRSW X9, [X10]
	0x0217F704 ADD X8, X8, X9, 0x4, LSL
	0x0217F708 ADD X0, X8, 0x138
	0x0217F70C SUB X8, X29, 0xC
	0x0217F710 STP X8, X24, [X29 - 0x20]
	0x0217F714 LDR X1, [X0 + 0x8]
	0x0217F718 SUB X3, X29, 0x20
	0x0217F71C MOV X2, X20
	0x0217F720 MOV X4, X24
	0x0217F724 LDP X0, X8, [X1 + 0x8]
	0x0217F728 BLR X8
	0x0217F72C LDR X9, [X19 + 0x38]
	0x0217F730 LDR X8, [X9 + 0x18]
	0x0217F734 LDRB W10, [X8 + 0x135]
	0x0217F738 TBNZ X10, 0x0, 0x217F750
	0x0217F73C MOV X0, X8
	0x0217F740 BL 0x1C5C684

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X1+56]
	009 Move W19, W0
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Compare X8, 0
	015 JumpIfNotEqual {20}
	016 Move X0, X1
	017 Move X20, X1
	018 Call 0x1C5D6E0
	019 Move X8, [X20+56]
	020 Move X0, [X8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W1, W19
	028 Call 0x1C17D6C
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {53}
	032 Move W9, [X0+24]
	033 Move X8, X31
	034 Move W10, W19
	035 Add X11, X0, 44
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, 1
	038 Move [X11-12], S11
	039 Move [X11-4], S10
	040 Move [X11-4], S9
	041 Move [X11+4], S8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X11, X11, 16
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move D9, [X31+16]
	048 Move D8, [X31+24]
	049 Move D11, [X31+64]
	050 Move D10, [X31+72]
	051 Return X0
	052 Call 0x1C17F28
	053 Call 0x1C17F20

Method: System.Boolean ContainsMatch(T[] a, T[] b)

Disassembly:
	0x0217F0D4 MOV X3, X31
	0x0217F0D8 BL 0x38F67A0
	0x0217F0DC LDR X8, [X19 + 0x38]
	0x0217F0E0 LDR X1, [X8]
	0x0217F0E4 LDRB W8, [X1 + 0x135]
	0x0217F0E8 TBNZ X8, 0x0, 0x217F0F8
	0x0217F0EC MOV X0, X1
	0x0217F0F0 BL 0x1C5C684
	0x0217F0F4 MOV X1, X0
	0x0217F0F8 LDR X8, [X20]
	0x0217F0FC LDRH W9, [X8 + 0x12E]
	0x0217F100 CBZ X9, 0x217F124
	0x0217F104 LDR X10, [X8 + 0xB0]
	0x0217F108 ADD X10, X10, 0x8
	0x0217F10C LDUR X11, [X10 - 0x8]
	0x0217F110 CMP X11, X1
	0x0217F114 B.EQ 0x217F134
	0x0217F118 SUBS X9, X9, 0x1
	0x0217F11C ADD X10, X10, 0x10
	0x0217F120 B.NE 0x217F10C
	0x0217F124 MOV X0, X20
	0x0217F128 MOV W2, W31
	0x0217F12C BL 0x1C5C788
	0x0217F130 B 0x217F140
	0x0217F134 LDRSW X9, [X10]
	0x0217F138 ADD X8, X8, X9, 0x4, LSL
	0x0217F13C ADD X0, X8, 0x138
	0x0217F140 LDP X8, X2, [X0]
	0x0217F144 MOV X0, X20
	0x0217F148 MOV W1, W31
	0x0217F14C BLR X8
	0x0217F150 LDR X8, [X19 + 0x38]
	0x0217F154 MOV W1, W0
	0x0217F158 ADD X0, X31, 0x1C
	0x0217F15C LDR X2, [X8 + 0x30]
	0x0217F160 BL 0x337B634
	0x0217F164 TBNZ X0, 0x1F, 0x217F1C0
	0x0217F168 LDR X8, [X19 + 0x38]
	0x0217F16C LDR X1, [X8]
	0x0217F170 LDRB W8, [X1 + 0x135]
	0x0217F174 TBNZ X8, 0x0, 0x217F184

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Compare X21, 0
	017 JumpIfEqual {49}
	018 Move X8, [X21+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X23, X31
	023 And X8, X8, 0
	024 Add X24, X21, 32
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+56]
	027 Move W1, [X24]
	028 Move X0, X20
	029 Move X2, [X8+16]
	030 Call Array.IndexOf, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, -2147483648
	033 Compare TEMP, -2147483648
	034 JumpIfNotEqual {39}
	035 Move W8, [X21+24]
	036 Add X23, X23, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 And W0, W22, 1
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Return X0
	048 Call 0x1C17F28
	049 Call 0x1C17F20

Method: System.Boolean ContainsMatch(T[] a, T[] b, out System.Int32 index_a, out System.Int32 index_b)

Disassembly:
	0x0217F2B4 MOV W21, W0
	0x0217F2B8 B.LT 0x217F2C4
	0x0217F2BC STR W21, [X31 + 0x14]
	0x0217F2C0 B 0x217F358
	0x0217F2C4 STR W21, [X31 + 0x10]
	0x0217F2C8 LDR X8, [X19 + 0x38]
	0x0217F2CC LDR X1, [X8]
	0x0217F2D0 LDRB W8, [X1 + 0x135]
	0x0217F2D4 TBNZ X8, 0x0, 0x217F2E4
	0x0217F2D8 MOV X0, X1
	0x0217F2DC BL 0x1C5C684
	0x0217F2E0 MOV X1, X0
	0x0217F2E4 LDR X8, [X20]
	0x0217F2E8 LDRH W9, [X8 + 0x12E]
	0x0217F2EC CBZ X9, 0x217F310
	0x0217F2F0 LDR X10, [X8 + 0xB0]
	0x0217F2F4 ADD X10, X10, 0x8
	0x0217F2F8 LDUR X11, [X10 - 0x8]
	0x0217F2FC CMP X11, X1
	0x0217F300 B.EQ 0x217F320
	0x0217F304 SUBS X9, X9, 0x1
	0x0217F308 ADD X10, X10, 0x10
	0x0217F30C B.NE 0x217F2F8
	0x0217F310 MOV X0, X20
	0x0217F314 MOV W2, W31
	0x0217F318 BL 0x1C5C788
	0x0217F31C B 0x217F32C
	0x0217F320 LDRSW X9, [X10]
	0x0217F324 ADD X8, X8, X9, 0x4, LSL
	0x0217F328 ADD X0, X8, 0x138
	0x0217F32C LDP X8, X2, [X0]
	0x0217F330 ADD W1, W21, 0x1
	0x0217F334 MOV X0, X20
	0x0217F338 BLR X8
	0x0217F33C STR W0, [X31 + 0xC]
	0x0217F340 LDR X8, [X19 + 0x38]
	0x0217F344 LDR W1, [X31 + 0x1C]
	0x0217F348 ADD X0, X31, 0xC
	0x0217F34C LDR X2, [X8 + 0x30]
	0x0217F350 BL 0x337B634
	0x0217F354 TBZ X0, 0x1F, 0x217F380
	0x0217F358 ADD X0, X31, 0x10
	0x0217F35C MOV X1, X31
	0x0217F360 BL 0x38F67A8
	0x0217F364 TBNZ X0, 0x0, 0x217F204
	0x0217F368 MOV W21, W31
	0x0217F36C MOV W0, W21
	0x0217F370 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W8, TEMP
	021 Move [X20], W8
	022 Move [X21], W31
	023 Compare X23, 0
	024 JumpIfEqual {58}
	025 Move W8, [X23+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W9, W31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, [X19+56]
	032 Add X9, X23, W9
	033 Move W1, [X9+32]
	034 Move X0, X22
	035 Move X2, [X8+16]
	036 Call Array.IndexOf, X0, X1
	037 Move [X20], W0
	038 Move TEMP, X0
	039 And TEMP, TEMP, -2147483648
	040 Compare TEMP, -2147483648
	041 JumpIfNotEqual {48}
	042 Move W8, [X21]
	043 Add W9, W8, 1
	044 Move [X21], W9
	045 Move W8, [X23+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 And W0, W24, 1
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return X0
	057 Call 0x1C17F28
	058 Call 0x1C17F20

Method: T[] Concat(T[] x, T[] y)

Disassembly:
	0x0217EE3C MOV W27, W31
	0x0217EE40 SUB X20, X29, 0x1C
	0x0217EE44 LDR X8, [X19 + 0x38]
	0x0217EE48 SUB X3, X29, 0x28
	0x0217EE4C SUB X4, X29, 0x18
	0x0217EE50 MOV X2, X21
	0x0217EE54 LDR X1, [X8 + 0x8]
	0x0217EE58 LDR X0, [X1]
	0x0217EE5C STUR W27, [X29 - 0x1C]
	0x0217EE60 STUR X20, [X29 - 0x28]
	0x0217EE64 LDR X8, [X1 + 0x10]
	0x0217EE68 BLR X8
	0x0217EE6C LDUR X0, [X29 - 0x18]
	0x0217EE70 CBZ X0, 0x217F014
	0x0217EE74 MOV W23, W31
	0x0217EE78 LDR X8, [X19 + 0x38]
	0x0217EE7C LDR X1, [X8 + 0x30]
	0x0217EE80 LDR X8, [X1]
	0x0217EE84 BLR X8
	0x0217EE88 CMP W23, W0
	0x0217EE8C B.GE 0x217EFB0
	0x0217EE90 LDR X8, [X19 + 0x38]
	0x0217EE94 SUB X3, X29, 0x28
	0x0217EE98 SUB X4, X29, 0x18
	0x0217EE9C MOV X2, X21
	0x0217EEA0 LDR X1, [X8 + 0x8]
	0x0217EEA4 LDR X0, [X1]
	0x0217EEA8 STUR W27, [X29 - 0x1C]
	0x0217EEAC STUR X20, [X29 - 0x28]
	0x0217EEB0 LDR X8, [X1 + 0x10]
	0x0217EEB4 BLR X8
	0x0217EEB8 LDUR X2, [X29 - 0x18]
	0x0217EEBC CBZ X2, 0x217F014
	0x0217EEC0 LDR X8, [X19 + 0x38]
	0x0217EEC4 SUB X3, X29, 0x18
	0x0217EEC8 MOV X4, X24
	0x0217EECC LDR X1, [X8 + 0x18]
	0x0217EED0 SUB X8, X29, 0x28
	0x0217EED4 LDR X0, [X1]
	0x0217EED8 STUR W23, [X29 - 0x28]
	0x0217EEDC STP X8, X24, [X29 - 0x18]
	0x0217EEE0 LDR X8, [X1 + 0x10]
	0x0217EEE4 BLR X8
	0x0217EEE8 MOV X0, X26
	0x0217EEEC MOV X1, X24
	0x0217EEF0 MOV X2, X22
	0x0217EEF4 BL 0x3EB1AC0
	0x0217EEF8 LDR X28, [X19 + 0x38]
	0x0217EEFC SUB X9, X29, 0x30
	0x0217EF00 MOV X0, X25
	0x0217EF04 MOV X2, X22
	0x0217EF08 LDR X8, [X28 + 0x20]
	0x0217EF0C LDR W8, [X8 + 0x28]
	0x0217EF10 CMP W8, 0x0
	0x0217EF14 LDUR X8, [X29 - 0x38]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X0
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X21, X0
	010 Move X20, X1
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Compare X21, 0
	016 JumpIfEqual {40}
	017 Compare X20, 0
	018 JumpIfEqual {47}
	019 Move X8, [X19+56]
	020 Move W19, [X21+24]
	021 Move W9, [X20+24]
	022 Add X0, X31, 8
	023 Move X2, [X8+8]
	024 Add W1, W9, W19
	025 Call Array.Resize, X0, X1
	026 Move X2, [X31+8]
	027 Move W4, [X20+24]
	028 Move X0, X20
	029 Move W1, W31
	030 Move W3, W19
	031 Move X5, X31
	032 Call Array.Copy, X0, X1, X2, X3, X4
	033 Move X0, [X31+8]
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return X0
	040 Move X0, 0x1F7B000
	041 Move X0, [X0+1320]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X20, X0
	045 Move X0, 0x1F9E000
	046 Move X0, [X0+1920]
	047 Move X0, 0x1F7B000
	048 Move X0, [X0+1320]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X20, X0
	052 Move X0, 0x1F9E000
	053 Move X0, [X0+1928]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Move X2, X31
	058 Call ArgumentNullException..ctor, X0, X1
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C17DEC

Method: System.Int32 IndexOf(System.Collections.Generic.List`1<System.Collections.Generic.List`1<T>> InList, T InValue)

Disassembly:
	0x0217FD58 STR X30, [X31 - 0x30]!
	0x0217FD5C STP X22, X21, [X31 + 0x10]
	0x0217FD60 STP X20, X19, [X31 + 0x20]
	0x0217FD64 LDR X8, [X2 + 0x38]
	0x0217FD68 MOV X19, X2
	0x0217FD6C MOV X21, X1
	0x0217FD70 MOV X20, X0
	0x0217FD74 CBNZ X8, 0x217FDAC
	0x0217FD78 ADRP X0, 0x1F9C000
	0x0217FD7C LDR X0, [X0 + 0x790]
	0x0217FD80 BL 0x1C16CF4
	0x0217FD84 ADRP X0, 0x1F9C000
	0x0217FD88 LDR X0, [X0 + 0x798]
	0x0217FD8C BL 0x1C16CF4
	0x0217FD90 ADRP X0, 0x1F75000
	0x0217FD94 LDR X0, [X0 + 0xE30]
	0x0217FD98 BL 0x1C16CF4
	0x0217FD9C LDR X8, [X19 + 0x38]
	0x0217FDA0 CBNZ X8, 0x217FDAC
	0x0217FDA4 MOV X0, X19
	0x0217FDA8 BL 0x1C5C6E0
	0x0217FDAC ADRP X8, 0x1F75000
	0x0217FDB0 LDR X8, [X8 + 0xE30]
	0x0217FDB4 LDR X0, [X8]
	0x0217FDB8 BL 0x1C16F10
	0x0217FDBC ADRP X8, 0x1F9C000
	0x0217FDC0 LDR X8, [X8 + 0x798]
	0x0217FDC4 MOV X1, X21
	0x0217FDC8 MOV X22, X0
	0x0217FDCC LDR X2, [X8]
	0x0217FDD0 BL 0x2FDC030
	0x0217FDD4 CBZ X22, 0x217FE10
	0x0217FDD8 ADRP X8, 0x1F9C000
	0x0217FDDC LDR X8, [X8 + 0x790]
	0x0217FDE0 MOV X0, X22
	0x0217FDE4 LDR X1, [X8]
	0x0217FDE8 BL 0x2FDE354
	0x0217FDEC LDR X8, [X19 + 0x38]
	0x0217FDF0 MOV X0, X20
	0x0217FDF4 MOV X1, X22
	0x0217FDF8 LDP X20, X19, [X31 + 0x20]
	0x0217FDFC LDR X2, [X8 + 0x8]
	0x0217FE00 LDP X22, X21, [X31 + 0x10]
	0x0217FE04 LDR X3, [X2]
	0x0217FE08 LDR X30, [X31], #0x30
	0x0217FE0C BR X3
	0x0217FE10 BL 0x1C16F20
	0x0217FE14 STP X29, X30, [X31 - 0x60]!
	0x0217FE18 STR X27, [X31 + 0x10]
	0x0217FE1C STP X26, X25, [X31 + 0x20]
	0x0217FE20 STP X24, X23, [X31 + 0x30]
	0x0217FE24 STP X22, X21, [X31 + 0x40]
	0x0217FE28 STP X20, X19, [X31 + 0x50]
	0x0217FE2C ADD X29, X31, 0x0
	0x0217FE30 SUB X31, X31, 0x10
	0x0217FE34 MRS X25, 0xC000
	0x0217FE38 LDR X8, [X25 + 0x28]
	0x0217FE3C MOV X19, X2
	0x0217FE40 MOV W24, W1
	0x0217FE44 MOV X20, X0
	0x0217FE48 STUR X8, [X29 - 0x8]
	0x0217FE4C LDR X8, [X2 + 0x38]
	0x0217FE50 CBNZ X8, 0x217FE60
	0x0217FE54 MOV X0, X19
	0x0217FE58 BL 0x1C5C6E0
	0x0217FE5C LDR X8, [X19 + 0x38]
	0x0217FE60 LDR X9, [X8 + 0x10]
	0x0217FE64 LDR W21, [X9 + 0xFC]
	0x0217FE68 ADD X9, X31, 0x0
	0x0217FE6C ADD X10, X21, 0xF
	0x0217FE70 AND X10, X10, 0x1FFFFFFFF
	0x0217FE74 SUB X22, X9, X10
	0x0217FE78 ADD X31, X22, 0x0
	0x0217FE7C CBZ X20, 0x217FF8C
	0x0217FE80 LDR X0, [X8 + 0x8]
	0x0217FE84 LDRB W8, [X0 + 0x135]
	0x0217FE88 TBNZ X8, 0x0, 0x217FE90
	0x0217FE8C BL 0x1C5C684
	0x0217FE90 LDR W8, [X20 + 0x18]
	0x0217FE94 SUB W1, W8, 0x1
	0x0217FE98 BL 0x1C16D6C
	0x0217FE9C LDR X8, [X20 + 0x18]
	0x0217FEA0 MOV X23, X0
	0x0217FEA4 CMP W8, 0x1
	0x0217FEA8 B.LT 0x217FF54
	0x0217FEAC MOV X26, X31
	0x0217FEB0 MOV W27, W31
	0x0217FEB4 AND X8, X8, 0x0
	0x0217FEB8 MOV W24, W24
	0x0217FEBC CMP X24, X26
	0x0217FEC0 B.EQ 0x217FF48
	0x0217FEC4 CMP X26, W8, UXTW
	0x0217FEC8 B.CS 0x217FF88
	0x0217FECC LDR X8, [X20]
	0x0217FED0 MOV X0, X22
	0x0217FED4 MOV X2, X21
	0x0217FED8 LDR W8, [X8 + 0x104]
	0x0217FEDC NOP
	0x0217FEE0 MADD X8, X26, X8, X20
	0x0217FEE4 ADD X1, X8, 0x20
	0x0217FEE8 BL 0x3EB1AC0
	0x0217FEEC CBZ X23, 0x217FF8C
	0x0217FEF0 LDR W8, [X23 + 0x18]
	0x0217FEF4 CMP W27, W8
	0x0217FEF8 B.CS 0x217FF88
	0x0217FEFC LDR X8, [X23]
	0x0217FF00 SXTW X9, W27
	0x0217FF04 MOV X1, X22
	0x0217FF08 MOV X2, X21
	0x0217FF0C LDR W8, [X8 + 0x104]
	0x0217FF10 NOP
	0x0217FF14 MADD X8, X8, X9, X23
	0x0217FF18 ADD X0, X8, 0x20
	0x0217FF1C BL 0x3EB1AC0
	0x0217FF20 LDR X8, [X19 + 0x38]
	0x0217FF24 LDR X0, [X8 + 0x10]
	0x0217FF28 LDRB W8, [X0 + 0x135]
	0x0217FF2C TBNZ X8, 0x0, 0x217FF34
	0x0217FF30 BL 0x1C5C684
	0x0217FF34 LDR W8, [X23 + 0x18]
	0x0217FF38 CMP W27, W8
	0x0217FF3C B.CS 0x217FF88
	0x0217FF40 LDR W8, [X20 + 0x18]
	0x0217FF44 ADD W27, W27, 0x1
	0x0217FF48 ADD X26, X26, 0x1
	0x0217FF4C CMP X26, W8, SXTW
	0x0217FF50 B.LT 0x217FEBC
	0x0217FF54 LDR X8, [X25 + 0x28]
	0x0217FF58 LDUR X9, [X29 - 0x8]
	0x0217FF5C CMP X8, X9
	0x0217FF60 B.NE 0x217FF90
	0x0217FF64 MOV X0, X23
	0x0217FF68 ADD X31, X29, 0x0
	0x0217FF6C LDP X20, X19, [X31 + 0x50]
	0x0217FF70 LDP X22, X21, [X31 + 0x40]
	0x0217FF74 LDP X24, X23, [X31 + 0x30]
	0x0217FF78 LDP X26, X25, [X31 + 0x20]
	0x0217FF7C LDR X27, [X31 + 0x10]
	0x0217FF80 LDP X29, X30, [X31], #0x60
	0x0217FF84 RET
	0x0217FF88 BL 0x1C16F28
	0x0217FF8C BL 0x1C16F20
	0x0217FF90 BL 0x3EB1B20
	0x0217FF94 STP X30, X27, [X31 - 0x50]!
	0x0217FF98 STP X26, X25, [X31 + 0x10]
	0x0217FF9C STP X24, X23, [X31 + 0x20]
	0x0217FFA0 STP X22, X21, [X31 + 0x30]
	0x0217FFA4 STP X20, X19, [X31 + 0x40]
	0x0217FFA8 LDR X8, [X2 + 0x38]
	0x0217FFAC MOV X19, X2
	0x0217FFB0 MOV X20, X1
	0x0217FFB4 MOV X21, X0
	0x0217FFB8 CBNZ X8, 0x217FFE4
	0x0217FFBC ADRP X0, 0x1F9C000
	0x0217FFC0 LDR X0, [X0 + 0x7A0]
	0x0217FFC4 BL 0x1C16CF4
	0x0217FFC8 ADRP X0, 0x1F9C000
	0x0217FFCC LDR X0, [X0 + 0x7A8]
	0x0217FFD0 BL 0x1C16CF4
	0x0217FFD4 LDR X8, [X19 + 0x38]
	0x0217FFD8 CBNZ X8, 0x217FFE4
	0x0217FFDC MOV X0, X19
	0x0217FFE0 BL 0x1C5C6E0
	0x0217FFE4 CBZ X20, 0x21802A4
	0x0217FFE8 ADRP X10, 0x1F9C000
	0x0217FFEC LDR X8, [X20]
	0x0217FFF0 LDR X10, [X10 + 0x7A0]
	0x0217FFF4 LDRH W9, [X8 + 0x12E]
	0x0217FFF8 LDR X1, [X10]
	0x0217FFFC CBZ X9, 0x2180020
	0x02180000 LDR X10, [X8 + 0xB0]
	0x02180004 ADD X10, X10, 0x8
	0x02180008 LDUR X11, [X10 - 0x8]
	0x0218000C CMP X11, X1
	0x02180010 B.EQ 0x2180030
	0x02180014 SUBS X9, X9, 0x1
	0x02180018 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X20+40]
	017 Move X19, X2
	018 Move X21, X0
	019 Move [X29-8], X8
	020 Move [X29-56], X1
	021 Move [X29-48], X1
	022 Move X8, [X2+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {28}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Move X8, [X19+56]
	028 Move X0, [X8+32]
	029 Move W22, [X0+252]
	030 Move W9, [X0+309]
	031 Move W8, W22
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {38}
	036 Call 0x1C5D684
	037 Move W8, [X0+252]
	038 Add W8, W8, 16
	039 Add X8, X8, 15
	040 Add X9, X31, 0
	041 And X8, X8, 0x1FFFFFFFF
	042 Subtract X8, X9, X8
	043 Move [X29-64], X8
	044 Add X31, X8, 0
	045 Add X9, X22, 15
	046 Add X8, X31, 0
	047 And X9, X9, 0x1FFFFFFFF
	048 Subtract X24, X8, X9
	049 Add X31, X24, 0
	050 Add X8, X31, 0
	051 Subtract X25, X8, X9
	052 Add X31, X25, 0
	053 Add X8, X31, 0
	054 Subtract X26, X8, X9
	055 Add X31, X26, 0
	056 Move X0, X26
	057 Move W1, W31
	058 Move X2, X22
	059 Call 0x3EB2B10
	060 Compare X21, 0
	061 JumpIfEqual {200}
	062 Move X8, [X19+56]
	063 Move X0, X21
	064 Move X1, [X8+56]
	065 Move X8, [X1]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X29-72], X20
	069 Move W27, W31
	070 Subtract X20, X29, 28
	071 Move X8, [X19+56]
	072 Subtract X3, X29, 40
	073 Subtract X4, X29, 24
	074 Move X2, X21
	075 Move X1, [X8+8]
	076 Move X0, [X1]
	077 Move [X29-28], W27
	078 Move [X29-40], X20
	079 Move X8, [X1+16]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {200}
	084 Move W23, W31
	085 Move X8, [X19+56]
	086 Move X1, [X8+48]
	087 Move X8, [X1]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, [X19+56]
	091 Subtract X3, X29, 40
	092 Subtract X4, X29, 24
	093 Move X2, X21
	094 Move X1, [X8+8]
	095 Move X0, [X1]
	096 Move [X29-28], W27
	097 Move [X29-40], X20
	098 Move X8, [X1+16]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Compare X2, 0
	102 JumpIfEqual {200}
	103 Move X8, [X19+56]
	104 Subtract X3, X29, 24
	105 Move X4, X24
	106 Move X1, [X8+24]
	107 Subtract X8, X29, 40
	108 Move X0, [X1]
	109 Move [X29-40], W23
	110 Move [X29-24], X8
	111 Move [X29-16], X24
	112 Move X8, [X1+16]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X0, X26
	115 Move X1, X24
	116 Move X2, X22
	117 Call 0x3EB2AC0
	118 Move X28, [X19+56]
	119 Subtract X9, X29, 48
	120 Move X0, X25
	121 Move X2, X22
	122 Move X8, [X28+32]
	123 Move W8, [X8+40]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Call 0x3EB2AC0
	128 Move X0, [X28+32]
	129 Move X1, X25
	130 Call 0x1C17E04
	131 Move X9, [X19+56]
	132 Move X28, X0
	133 Move X8, [X9+32]
	134 Move W10, [X8+309]
	135 Move TEMP, X10
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {143}
	139 Move X0, X8
	140 Call 0x1C5D684
	141 Move X9, [X19+56]
	142 Move X8, X0
	143 Move X1, [X9+40]
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Subtract X4, X29, 40
	146 Subtract X5, X29, 24
	147 Move X0, X8
	148 Move X3, X26
	149 Move [X29-40], X28
	150 Call 0x1C18728
	151 NotImplemented "Instruction LDURB not yet implemented."
	152 Compare W8, 0
	153 JumpIfNotEqual {178}
	154 Move X8, [X19+56]
	155 Subtract X3, X29, 40
	156 Subtract X4, X29, 24
	157 Move X2, X21
	158 Move X1, [X8+8]
	159 Add W23, W23, 1
	160 Move X0, [X1]
	161 Move [X29-28], W27
	162 Move [X29-40], X20
	163 Move X8, [X1+16]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Compare X0, 0
	167 JumpIfNotEqual {85}
	168 Move X8, [X19+56]
	169 Move X0, X21
	170 Add W27, W27, 1
	171 Move X1, [X8+56]
	172 Move X8, [X1]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move TEMP, 0
	176 Not TEMP
	177 Move W27, TEMP
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move TEMP, 0
	180 Not TEMP
	181 Move W27, TEMP
	182 Move X8, [X20+40]
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W0, W27
	186 Add X31, X29, 0
	187 Move X20, [X31+80]
	188 Move X19, [X31+88]
	189 Move X22, [X31+64]
	190 Move X21, [X31+72]
	191 Move X24, [X31+48]
	192 Move X23, [X31+56]
	193 Move X26, [X31+32]
	194 Move X25, [X31+40]
	195 Move X28, [X31+16]
	196 Move X27, [X31+24]
	197 Move X29, [X31+96]
	198 Move X30, [X31+104]
	199 Return X0
	200 Call 0x1C17F20
	201 Call 0x3EB2B20

Method: T[] Fill(System.Int32 count, System.Func`2<System.Int32, T> ctor)

Disassembly:
	0x0217FBF8 MOV X19, X0
	0x0217FBFC CBNZ X8, 0x217FC08
	0x0217FC00 MOV X0, X21
	0x0217FC04 BL 0x1C5C6E0
	0x0217FC08 CBZ X19, 0x217FC9C
	0x0217FC0C LDR X8, [X21 + 0x38]
	0x0217FC10 LDR X0, [X8 + 0x8]
	0x0217FC14 LDRB W8, [X0 + 0x135]
	0x0217FC18 TBNZ X8, 0x0, 0x217FC20
	0x0217FC1C BL 0x1C5C684
	0x0217FC20 LDR W8, [X19 + 0x18]
	0x0217FC24 SUB W1, W8, 0x1
	0x0217FC28 BL 0x1C16D6C
	0x0217FC2C LDR X10, [X19 + 0x18]
	0x0217FC30 CMP W10, 0x1
	0x0217FC34 B.LT 0x217FC8C
	0x0217FC38 AND X10, X10, 0x0
	0x0217FC3C MOV X8, X31
	0x0217FC40 MOV W9, W31
	0x0217FC44 MOV W11, W20
	0x0217FC48 SXTW X12, W10
	0x0217FC4C ADD X13, X19, 0x20
	0x0217FC50 CMP X11, X8
	0x0217FC54 B.EQ 0x217FC80
	0x0217FC58 CMP X8, X10
	0x0217FC5C B.CS 0x217FC98
	0x0217FC60 CBZ X0, 0x217FC9C
	0x0217FC64 LDR W14, [X0 + 0x18]
	0x0217FC68 CMP W9, W14
	0x0217FC6C B.CS 0x217FC98
	0x0217FC70 LDR W14, [X13, X8, LSL #2]
	0x0217FC74 ADD X15, X0, W9, 0x2, SXTW
	0x0217FC78 ADD W9, W9, 0x1
	0x0217FC7C STR W14, [X15 + 0x20]
	0x0217FC80 ADD X8, X8, 0x1
	0x0217FC84 CMP X8, X12
	0x0217FC88 B.LT 0x217FC50
	0x0217FC8C LDP X20, X19, [X31 + 0x10]
	0x0217FC90 LDP X30, X21, [X31], #0x20
	0x0217FC94 RET
	0x0217FC98 BL 0x1C16F28
	0x0217FC9C BL 0x1C16F20
	0x0217FCA0 STR X30, [X31 - 0x30]!
	0x0217FCA4 STP X22, X21, [X31 + 0x10]
	0x0217FCA8 STP X20, X19, [X31 + 0x20]
	0x0217FCAC LDR X8, [X2 + 0x38]
	0x0217FCB0 MOV X19, X2
	0x0217FCB4 MOV X21, X1
	0x0217FCB8 MOV X20, X0
	0x0217FCBC CBNZ X8, 0x217FCF4
	0x0217FCC0 ADRP X0, 0x1F9C000
	0x0217FCC4 LDR X0, [X0 + 0x790]
	0x0217FCC8 BL 0x1C16CF4
	0x0217FCCC ADRP X0, 0x1F9C000
	0x0217FCD0 LDR X0, [X0 + 0x798]
	0x0217FCD4 BL 0x1C16CF4
	0x0217FCD8 ADRP X0, 0x1F75000
	0x0217FCDC LDR X0, [X0 + 0xE30]
	0x0217FCE0 BL 0x1C16CF4
	0x0217FCE4 LDR X8, [X19 + 0x38]
	0x0217FCE8 CBNZ X8, 0x217FCF4
	0x0217FCEC MOV X0, X19
	0x0217FCF0 BL 0x1C5C6E0
	0x0217FCF4 ADRP X8, 0x1F75000
	0x0217FCF8 LDR X8, [X8 + 0xE30]
	0x0217FCFC LDR X0, [X8]
	0x0217FD00 BL 0x1C16F10
	0x0217FD04 ADRP X8, 0x1F9C000
	0x0217FD08 LDR X8, [X8 + 0x798]
	0x0217FD0C MOV X1, X21
	0x0217FD10 MOV X22, X0
	0x0217FD14 LDR X2, [X8]
	0x0217FD18 BL 0x2FDC030
	0x0217FD1C CBZ X22, 0x217FD54
	0x0217FD20 ADRP X8, 0x1F9C000
	0x0217FD24 LDR X8, [X8 + 0x790]
	0x0217FD28 MOV X0, X22
	0x0217FD2C LDR X1, [X8]
	0x0217FD30 BL 0x2FDE354
	0x0217FD34 LDR X8, [X19 + 0x38]
	0x0217FD38 MOV X0, X20
	0x0217FD3C MOV X1, X22
	0x0217FD40 LDP X20, X19, [X31 + 0x20]
	0x0217FD44 LDR X2, [X8 + 0x8]
	0x0217FD48 LDP X22, X21, [X31 + 0x10]
	0x0217FD4C LDR X30, [X31], #0x30
	0x0217FD50 B 0x217FF94
	0x0217FD54 BL 0x1C16F20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X19, X2
	018 Move X20, X1
	019 Move W24, W0
	020 Move [X29-8], X8
	021 Move X8, [X2+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, [X19+56]
	027 Move X9, [X8+24]
	028 Move W21, [X9+252]
	029 Add X9, X31, 0
	030 Add X10, X21, 15
	031 And X10, X10, 0x1FFFFFFFF
	032 Subtract X22, X9, X10
	033 Add X31, X22, 0
	034 Move X0, [X8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W1, W24
	042 Call 0x1C17D6C
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X23, X0
	045 Compare X20, 0
	046 JumpIfEqual {104}
	047 Move X26, X31
	048 Move W24, W24
	049 Subtract X27, X29, 12
	050 Move X8, [X19+56]
	051 Subtract X3, X29, 32
	052 Move X2, X20
	053 Move X4, X22
	054 Move X1, [X8+16]
	055 Move X0, [X1]
	056 Move [X29-12], W26
	057 Move [X29-32], X27
	058 Move [X29-24], X22
	059 Move X8, [X1+16]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X23, 0
	062 JumpIfEqual {104}
	063 Move W28, [X23+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X23]
	066 Move X1, X22
	067 Move X2, X21
	068 Move W8, [X8+260]
	069 NotImplemented "Instruction NOP not yet implemented."
	070 NotImplemented "Instruction MADD not yet implemented."
	071 Add X0, X8, 32
	072 Call 0x3EB2AC0
	073 Move X8, [X19+56]
	074 Move X0, [X8+24]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {82}
	080 Call 0x1C5D684
	081 Move W28, [X23+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X26, X26, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X25+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X23
	089 Add X31, X29, 0
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X28, [X31+16]
	099 Move X27, [X31+24]
	100 Move X29, [X31+96]
	101 Move X30, [X31+104]
	102 Return X0
	103 Call 0x1C17F28
	104 Call 0x1C17F20
	105 Call 0x3EB2B20

Method: System.Void AddOrAppend(System.Collections.Generic.Dictionary`2<T, System.Collections.Generic.List`1<K>> dictionary, T key, K value)

Disassembly:
	0x0217DF44 CBZ X21, 0x217DF98
	0x0217DF48 CBZ X20, 0x217DFB8
	0x0217DF4C LDR X8, [X19 + 0x38]
	0x0217DF50 LDR W19, [X21 + 0x18]
	0x0217DF54 LDR W9, [X20 + 0x18]
	0x0217DF58 ADD X0, X31, 0x8
	0x0217DF5C LDR X2, [X8 + 0x8]
	0x0217DF60 ADD W1, W9, W19
	0x0217DF64 BL 0x2144898
	0x0217DF68 LDR X2, [X31 + 0x8]
	0x0217DF6C LDR W4, [X20 + 0x18]
	0x0217DF70 MOV X0, X20
	0x0217DF74 MOV W1, W31
	0x0217DF78 MOV W3, W19
	0x0217DF7C MOV X5, X31
	0x0217DF80 BL 0x339FCE8
	0x0217DF84 LDR X0, [X31 + 0x8]
	0x0217DF88 LDP X20, X19, [X31 + 0x20]
	0x0217DF8C LDP X30, X21, [X31 + 0x10]
	0x0217DF90 ADD X31, X31, 0x30
	0x0217DF94 RET
	0x0217DF98 ADRP X0, 0x1F7B000
	0x0217DF9C LDR X0, [X0 + 0x528]
	0x0217DFA0 BL 0x1C16D08
	0x0217DFA4 BL 0x1C16F10
	0x0217DFA8 MOV X20, X0
	0x0217DFAC ADRP X0, 0x1F9E000
	0x0217DFB0 LDR X0, [X0 + 0x780]
	0x0217DFB4 B 0x217DFD4
	0x0217DFB8 ADRP X0, 0x1F7B000
	0x0217DFBC LDR X0, [X0 + 0x528]
	0x0217DFC0 BL 0x1C16D08
	0x0217DFC4 BL 0x1C16F10
	0x0217DFC8 MOV X20, X0
	0x0217DFCC ADRP X0, 0x1F9E000
	0x0217DFD0 LDR X0, [X0 + 0x788]
	0x0217DFD4 BL 0x1C16D08
	0x0217DFD8 MOV X1, X0
	0x0217DFDC MOV X0, X20
	0x0217DFE0 MOV X2, X31
	0x0217DFE4 BL 0x330E100
	0x0217DFE8 MOV X0, X20
	0x0217DFEC MOV X1, X19
	0x0217DFF0 BL 0x1C16DEC
	0x0217DFF4 SUB X31, X31, 0x30
	0x0217DFF8 STP X30, X21, [X31 + 0x10]
	0x0217DFFC STP X20, X19, [X31 + 0x20]
	0x0217E000 STR X0, [X31 + 0x8]
	0x0217E004 LDR X8, [X2 + 0x38]
	0x0217E008 MOV X19, X2
	0x0217E00C MOV X21, X0
	0x0217E010 MOV X20, X1
	0x0217E014 CBNZ X8, 0x217E020
	0x0217E018 MOV X0, X19
	0x0217E01C BL 0x1C5C6E0
	0x0217E020 CBZ X21, 0x217E078
	0x0217E024 CBZ X20, 0x217E098
	0x0217E028 LDR X8, [X19 + 0x38]
	0x0217E02C LDR W19, [X21 + 0x18]
	0x0217E030 ADD X0, X31, 0x8
	0x0217E034 LDR X2, [X8 + 0x8]
	0x0217E038 LDR W8, [X20 + 0x18]
	0x0217E03C LDR X9, [X2]
	0x0217E040 ADD W1, W8, W19
	0x0217E044 BLR X9
	0x0217E048 LDR X2, [X31 + 0x8]
	0x0217E04C LDR W4, [X20 + 0x18]
	0x0217E050 MOV X0, X20
	0x0217E054 MOV W1, W31
	0x0217E058 MOV W3, W19
	0x0217E05C MOV X5, X31
	0x0217E060 BL 0x339FCE8
	0x0217E064 LDR X0, [X31 + 0x8]
	0x0217E068 LDP X20, X19, [X31 + 0x20]
	0x0217E06C LDP X30, X21, [X31 + 0x10]
	0x0217E070 ADD X31, X31, 0x30
	0x0217E074 RET
	0x0217E078 ADRP X0, 0x1F7A000
	0x0217E07C LDR X0, [X0 + 0x528]
	0x0217E080 BL 0x1C16D08
	0x0217E084 BL 0x1C16F10
	0x0217E088 MOV X20, X0
	0x0217E08C ADRP X0, 0x1F9D000
	0x0217E090 LDR X0, [X0 + 0x780]
	0x0217E094 B 0x217E0B4
	0x0217E098 ADRP X0, 0x1F7A000
	0x0217E09C LDR X0, [X0 + 0x528]
	0x0217E0A0 BL 0x1C16D08
	0x0217E0A4 BL 0x1C16F10
	0x0217E0A8 MOV X20, X0
	0x0217E0AC ADRP X0, 0x1F9D000
	0x0217E0B0 LDR X0, [X0 + 0x788]
	0x0217E0B4 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X21, X4
	010 Move X19, X3
	011 Move X20, X2
	012 Move W22, W1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Move [X31+8], X31
	019 Compare X23, 0
	020 JumpIfEqual {108}
	021 Move X8, [X21+56]
	022 Add X2, X31, 8
	023 Move X0, X23
	024 Move W1, W22
	025 Move X3, [X8+16]
	026 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {50}
	031 Move X0, [X31+8]
	032 Compare X0, 0
	033 JumpIfEqual {108}
	034 Move X9, [X21+56]
	035 Move W10, [X0+28]
	036 Move X8, [X0+16]
	037 Move X9, [X9+48]
	038 Add W10, W10, 1
	039 Move [X0+28], W10
	040 Compare X8, 0
	041 JumpIfEqual {108}
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W11, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W9, W10, 1
	046 Add X8, X8, X10
	047 Move [X0+24], W9
	048 Move [X8+32], X20
	049 Move [X8+40], X19
	050 Move X8, [X21+56]
	051 Move X0, [X8+40]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Call 0x1C17F10
	059 Move X8, [X21+56]
	060 Move X24, X0
	061 Move X1, [X8+56]
	062 Call List`1<SimpleTuple`2<Object, Object>>..ctor, X0
	063 Compare X24, 0
	064 JumpIfEqual {108}
	065 Move X9, [X21+56]
	066 Move W10, [X24+28]
	067 Move X8, [X24+16]
	068 Move X9, [X9+48]
	069 Add W10, W10, 1
	070 Move [X24+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {108}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X24+24], W9
	079 Move [X8+32], X20
	080 Move [X8+40], X19
	081 Move X8, [X9+32]
	082 Move X1, X20
	083 Move X2, X19
	084 Move X8, [X8+192]
	085 Move X3, [X8+112]
	086 Call List`1<SimpleTuple`2<Object, Object>>.AddWithResize, X0, X1
	087 Move X8, [X9+32]
	088 Move X0, X24
	089 Move X1, X20
	090 Move X2, X19
	091 Move X8, [X8+192]
	092 Move X3, [X8+112]
	093 Call List`1<SimpleTuple`2<Object, Object>>.AddWithResize, X0, X1
	094 Move X8, [X21+56]
	095 Move X0, X23
	096 Move W1, W22
	097 Move X2, X24
	098 Move X3, [X8+64]
	099 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Return 
	108 Call 0x1C17F20

Method: System.Void AddOrAppendRange(System.Collections.Generic.Dictionary`2<T, System.Collections.Generic.List`1<K>> dictionary, T key, System.Collections.Generic.List`1<K> value)

Disassembly:
	0x0217E758 CBNZ X8, 0x217E76C
	0x0217E75C MOV X0, X2
	0x0217E760 MOV X21, X2
	0x0217E764 BL 0x1C5C6E0
	0x0217E768 LDR X8, [X21 + 0x38]
	0x0217E76C LDR X0, [X8]
	0x0217E770 LDRB W8, [X0 + 0x135]
	0x0217E774 TBNZ X8, 0x0, 0x217E77C
	0x0217E778 BL 0x1C5C684
	0x0217E77C MOV W1, W20
	0x0217E780 BL 0x1C16D6C
	0x0217E784 CMP W20, 0x1
	0x0217E788 B.LT 0x217E7B8
	0x0217E78C CBZ X0, 0x217E7C8
	0x0217E790 LDR W9, [X0 + 0x18]
	0x0217E794 MOV X8, X31
	0x0217E798 MOV W10, W20
	0x0217E79C ADD X11, X0, 0x20
	0x0217E7A0 CMP X8, X9
	0x0217E7A4 B.CS 0x217E7C4
	0x0217E7A8 STR W19, [X11, X8, LSL #2]
	0x0217E7AC ADD X8, X8, 0x1
	0x0217E7B0 CMP X10, X8
	0x0217E7B4 B.NE 0x217E7A0
	0x0217E7B8 LDP X20, X19, [X31 + 0x10]
	0x0217E7BC LDP X30, X21, [X31], #0x20
	0x0217E7C0 RET
	0x0217E7C4 BL 0x1C16F28
	0x0217E7C8 BL 0x1C16F20
	0x0217E7CC STP X30, X23, [X31 - 0x30]!
	0x0217E7D0 STP X22, X21, [X31 + 0x10]
	0x0217E7D4 STP X20, X19, [X31 + 0x20]
	0x0217E7D8 LDR X8, [X2 + 0x38]
	0x0217E7DC MOV X19, X2
	0x0217E7E0 MOV W20, W1
	0x0217E7E4 MOV X21, X0
	0x0217E7E8 CBNZ X8, 0x217E7F8
	0x0217E7EC MOV X0, X19
	0x0217E7F0 BL 0x1C5C6E0
	0x0217E7F4 LDR X8, [X19 + 0x38]
	0x0217E7F8 LDR X0, [X8]
	0x0217E7FC LDRB W8, [X0 + 0x135]
	0x0217E800 TBNZ X8, 0x0, 0x217E808
	0x0217E804 BL 0x1C5C684
	0x0217E808 BL 0x1C16F10
	0x0217E80C LDR X8, [X19 + 0x38]
	0x0217E810 MOV W1, W20
	0x0217E814 MOV X22, X0
	0x0217E818 LDR X2, [X8 + 0x8]
	0x0217E81C BL 0x301B830
	0x0217E820 CMP W20, 0x1
	0x0217E824 B.LT 0x217E8AC
	0x0217E828 CBZ X21, 0x217E8C0
	0x0217E82C MOV W23, W31
	0x0217E830 LDR X8, [X21 + 0x18]
	0x0217E834 LDR X0, [X21 + 0x40]
	0x0217E838 LDR X2, [X21 + 0x28]
	0x0217E83C MOV W1, W23
	0x0217E840 BLR X8
	0x0217E844 CBZ X22, 0x217E8C0
	0x0217E848 LDR X9, [X19 + 0x38]
	0x0217E84C LDR W10, [X22 + 0x1C]
	0x0217E850 LDR X8, [X22 + 0x10]
	0x0217E854 LDR X9, [X9 + 0x28]
	0x0217E858 ADD W10, W10, 0x1
	0x0217E85C STR W10, [X22 + 0x1C]
	0x0217E860 CBZ X8, 0x217E8C0
	0x0217E864 LDRSW X10, [X22 + 0x18]
	0x0217E868 LDR W11, [X8 + 0x18]
	0x0217E86C MOV X1, X0
	0x0217E870 CMP W10, W11
	0x0217E874 B.CS 0x217E88C
	0x0217E878 ADD W9, W10, 0x1
	0x0217E87C ADD X8, X8, X10, 0x3, LSL
	0x0217E880 STR W9, [X22 + 0x18]
	0x0217E884 STR X1, [X8 + 0x20]
	0x0217E888 B 0x217E8A0
	0x0217E88C LDR X8, [X9 + 0x20]
	0x0217E890 MOV X0, X22
	0x0217E894 LDR X8, [X8 + 0xC0]
	0x0217E898 LDR X2, [X8 + 0x70]
	0x0217E89C BL 0x301BF90
	0x0217E8A0 ADD W23, W23, 0x1
	0x0217E8A4 CMP W20, W23
	0x0217E8A8 B.NE 0x217E830
	0x0217E8AC MOV X0, X22
	0x0217E8B0 LDP X20, X19, [X31 + 0x20]
	0x0217E8B4 LDP X22, X21, [X31 + 0x10]
	0x0217E8B8 LDP X30, X23, [X31], #0x30
	0x0217E8BC RET
	0x0217E8C0 BL 0x1C16F20
	0x0217E8C4 STP D9, D8, [X31 - 0x30]!
	0x0217E8C8 STR X30, [X31 + 0x10]
	0x0217E8CC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 48
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move [X29-8], X8
	019 Move [X29-40], X1
	020 Move X26, [X3+56]
	021 Move X20, X0
	022 Compare X26, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X21
	025 Call 0x1C5D6E0
	026 Move X26, [X21+56]
	027 Move X8, [X26+8]
	028 Move W24, [X8+252]
	029 Add X8, X31, 0
	030 Add X9, X24, 15
	031 And X9, X9, 0x1FFFFFFFF
	032 Subtract X23, X8, X9
	033 Add X31, X23, 0
	034 Move [X29-48], X31
	035 Move X8, [X26+8]
	036 Move X0, X23
	037 Move X2, X24
	038 Move W8, [X8+40]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X8, X29, 40
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Call 0x3EB2AC0
	043 Compare X20, 0
	044 JumpIfEqual {114}
	045 Move X8, [X26+8]
	046 Move X1, [X26+16]
	047 Move W9, [X8+40]
	048 Move X0, [X1]
	049 Move X8, X23
	050 Move TEMP, X9
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {55}
	054 Move X8, [X23]
	055 Subtract X9, X29, 48
	056 Move [X29-32], X8
	057 Move [X29-24], X9
	058 Move X8, [X1+16]
	059 Subtract X3, X29, 32
	060 Subtract X4, X29, 12
	061 Move X2, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction LDURB not yet implemented."
	064 Compare W8, 0
	065 JumpIfEqual {74}
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {114}
	069 Move X8, [X21+56]
	070 Move X1, X19
	071 Move X2, [X8+40]
	072 Move X8, [X2]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X21, [X21+56]
	075 Move X0, X23
	076 Move X2, X24
	077 Move X8, [X21+8]
	078 Move W8, [X8+40]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X8, X29, 40
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Call 0x3EB2AC0
	083 Move X8, [X21+8]
	084 Move X1, [X21+56]
	085 Move W8, [X8+40]
	086 Move X0, [X1]
	087 Move TEMP, X8
	088 And TEMP, TEMP, -2147483648
	089 Compare TEMP, -2147483648
	090 JumpIfEqual {92}
	091 Move X23, [X23]
	092 Move [X29-32], X23
	093 Move [X29-24], X19
	094 Move X8, [X1+16]
	095 Subtract X3, X29, 32
	096 Move X2, X20
	097 Move X4, X19
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X25+40]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X31, X29, 0
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X29, [X31+80]
	112 Move X30, [X31+88]
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x3EB2B20

Method: System.Collections.Generic.IEnumerable`1<TSource> DistinctBy(System.Collections.Generic.IEnumerable`1<TSource> source, System.Func`2<TSource, TKey> keySelector)

Disassembly:
	0x0217F4D8 ADD X9, X21, 0xF
	0x0217F4DC ADD X8, X31, 0x0
	0x0217F4E0 AND X9, X9, 0x1FFFFFFFF
	0x0217F4E4 SUB X24, X8, X9
	0x0217F4E8 ADD X31, X24, 0x0
	0x0217F4EC ADD X8, X31, 0x0
	0x0217F4F0 SUB X25, X8, X9
	0x0217F4F4 ADD X31, X25, 0x0
	0x0217F4F8 ADD X8, X31, 0x0
	0x0217F4FC SUB X26, X8, X9
	0x0217F500 STUR X31, [X29 - 0x30]
	0x0217F504 ADD X31, X26, 0x0
	0x0217F508 MOV X0, X26
	0x0217F50C MOV W1, W31
	0x0217F510 MOV X2, X21
	0x0217F514 BL 0x3EB1B10
	0x0217F518 CBZ X20, 0x217FA58
	0x0217F51C LDR X8, [X19 + 0x38]
	0x0217F520 LDR X1, [X8 + 0x8]
	0x0217F524 LDRB W8, [X1 + 0x135]
	0x0217F528 TBNZ X8, 0x0, 0x217F538
	0x0217F52C MOV X0, X1
	0x0217F530 BL 0x1C5C684
	0x0217F534 MOV X1, X0
	0x0217F538 LDR X8, [X20]
	0x0217F53C STUR X23, [X29 - 0x38]
	0x0217F540 LDRH W9, [X8 + 0x12E]
	0x0217F544 CBZ X9, 0x217F568
	0x0217F548 LDR X10, [X8 + 0xB0]
	0x0217F54C ADD X10, X10, 0x8
	0x0217F550 LDUR X11, [X10 - 0x8]
	0x0217F554 CMP X11, X1
	0x0217F558 B.EQ 0x217F578
	0x0217F55C SUBS X9, X9, 0x1
	0x0217F560 ADD X10, X10, 0x10
	0x0217F564 B.NE 0x217F550
	0x0217F568 MOV X0, X20
	0x0217F56C MOV W2, W31
	0x0217F570 BL 0x1C5C788
	0x0217F574 B 0x217F584
	0x0217F578 LDRSW X9, [X10]
	0x0217F57C ADD X8, X8, X9, 0x4, LSL
	0x0217F580 ADD X0, X8, 0x138
	0x0217F584 LDP X8, X1, [X0]
	0x0217F588 MOV X0, X20
	0x0217F58C BLR X8
	0x0217F590 SUBS W23, W0, 0x1
	0x0217F594 B.LT 0x217F6F8
	0x0217F598 SUB X0, X29, 0x30
	0x0217F59C MOV W1, W31
	0x0217F5A0 MOV W2, W23
	0x0217F5A4 MOV X3, X31
	0x0217F5A8 BL 0x38F67A0
	0x0217F5AC LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X22, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move X0, [X8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Call 0x1C17F10
	023 Move X8, [X19+56]
	024 Move X21, X0
	025 Move X1, [X8+8]
	026 Call 0x2374080, X0
	027 Compare X21, 0
	028 JumpIfEqual {70}
	029 Move [X21+24], X22
	030 Move X8, [X19+56]
	031 Move X0, [X8+24]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X19+56]
	040 Move X22, X0
	041 Move X1, [X8+32]
	042 Call HashSet`1<Edge>..ctor, X0
	043 Move [X21+16], X22
	044 Move X8, [X19+56]
	045 Move X0, [X8+56]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Call 0x1C17F10
	053 Move X8, [X19+56]
	054 Move X1, X21
	055 Move X22, X0
	056 Move X2, [X8+48]
	057 Move X3, [X8+64]
	058 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	059 Move X8, [X19+56]
	060 Move X0, X20
	061 Move X1, X22
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X2, [X8+72]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Call Enumerable.Where, X0, X1
	069 Return X0
	070 Call 0x1C17F20

Method: System.String ToString(System.Collections.Generic.Dictionary`2<TKey, TValue> dict)

Disassembly:
	0x0218167C B.NE 0x21816BC
	0x02181680 MOV X0, X19
	0x02181684 ADD X31, X29, 0x0
	0x02181688 LDP X20, X19, [X31 + 0x50]
	0x0218168C LDP X22, X21, [X31 + 0x40]
	0x02181690 LDP X24, X23, [X31 + 0x30]
	0x02181694 LDP X26, X25, [X31 + 0x20]
	0x02181698 LDR X27, [X31 + 0x10]
	0x0218169C LDP X29, X30, [X31], #0x60
	0x021816A0 RET
	0x021816A4 BL 0x1C16F20
	0x021816A8 BL 0x1C16F20
	0x021816AC BL 0x1C16F20
	0x021816B0 BL 0x1C16F20
	0x021816B4 MOV X0, X21
	0x021816B8 BL 0x1C16F18
	0x021816BC BL 0x3EB1B20
	0x021816C0 B 0x21816D0
	0x021816C4 B 0x21816D0
	0x021816C8 B 0x21816D0
	0x021816CC B 0x21816D0
	0x021816D0 MOV X22, X0
	0x021816D4 CMP W1, 0x1
	0x021816D8 B.NE 0x21816F0
	0x021816DC MOV X0, X22
	0x021816E0 BL 0x3EB1AD0
	0x021816E4 LDR X21, [X0]
	0x021816E8 BL 0x3EB1AE0
	0x021816EC B 0x2181608
	0x021816F0 MOV X21, X31
	0x021816F4 B 0x21816FC
	0x021816F8 MOV X22, X0
	0x021816FC CBZ X20, 0x2181760
	0x02181700 ADRP X10, 0x1F72000
	0x02181704 LDR X8, [X20]
	0x02181708 LDR X10, [X10 + 0xE00]
	0x0218170C LDRH W9, [X8 + 0x12E]
	0x02181710 LDR X1, [X10]
	0x02181714 CBZ X9, 0x2181738
	0x02181718 LDR X10, [X8 + 0xB0]
	0x0218171C ADD X10, X10, 0x8
	0x02181720 LDUR X11, [X10 - 0x8]
	0x02181724 CMP X11, X1
	0x02181728 B.EQ 0x2181748
	0x0218172C SUBS X9, X9, 0x1
	0x02181730 ADD X10, X10, 0x10
	0x02181734 B.NE 0x2181720
	0x02181738 MOV X0, X20
	0x0218173C MOV W2, W31
	0x02181740 BL 0x1C5C788
	0x02181744 B 0x2181754
	0x02181748 LDRSW X9, [X10]
	0x0218174C ADD X8, X8, X9, 0x4, LSL
	0x02181750 ADD X0, X8, 0x138
	0x02181754 LDP X8, X1, [X0]
	0x02181758 MOV X0, X20
	0x0218175C BLR X8
	0x02181760 CBNZ X21, 0x218176C
	0x02181764 MOV X0, X22
	0x02181768 BL 0x1D2C690
	0x0218176C MOV X0, X21
	0x02181770 BL 0x1C16F18
	0x02181774 BL 0x1990590
	0x02181778 STP X29, X30, [X31 - 0x60]!
	0x0218177C STR X27, [X31 + 0x10]
	0x02181780 STP X26, X25, [X31 + 0x20]
	0x02181784 STP X24, X23, [X31 + 0x30]
	0x02181788 STP X22, X21, [X31 + 0x40]
	0x0218178C STP X20, X19, [X31 + 0x50]
	0x02181790 ADD X29, X31, 0x0
	0x02181794 SUB X31, X31, 0x10
	0x02181798 MRS X25, 0xC000
	0x0218179C LDR X8, [X25 + 0x28]
	0x021817A0 MOV X19, X2
	0x021817A4 MOV X20, X1
	0x021817A8 MOV X21, X0
	0x021817AC STUR X8, [X29 - 0x8]
	0x021817B0 LDR X8, [X2 + 0x38]
	0x021817B4 CBNZ X8, 0x21817C4
	0x021817B8 MOV X0, X19
	0x021817BC BL 0x1C5C6E0
	0x021817C0 LDR X8, [X19 + 0x38]
	0x021817C4 LDR X9, [X8 + 0x10]
	0x021817C8 LDR W22, [X9 + 0xFC]
	0x021817CC ADD X9, X31, 0x0
	0x021817D0 ADD X10, X22, 0xF
	0x021817D4 AND X10, X10, 0x1FFFFFFFF
	0x021817D8 SUB X23, X9, X10
	0x021817DC ADD X31, X23, 0x0
	0x021817E0 CBZ X20, 0x21818E8
	0x021817E4 LDR X0, [X8]
	0x021817E8 LDRB W8, [X0 + 0x135]
	0x021817EC TBNZ X8, 0x0, 0x21817F4
	0x021817F0 BL 0x1C5C684
	0x021817F4 LDR W1, [X20 + 0x18]
	0x021817F8 BL 0x1C16D6C
	0x021817FC LDR W8, [X20 + 0x18]
	0x02181800 MOV X24, X0
	0x02181804 CMP W8, 0x1
	0x02181808 B.LT 0x21818B0
	0x0218180C MOV X26, X31
	0x02181810 ADD X27, X20, 0x20
	0x02181814 CMP W26, W8
	0x02181818 B.CS 0x21818E4
	0x0218181C CBZ X21, 0x21818E8
	0x02181820 LDRSW X8, [X27, X26, LSL #2]
	0x02181824 LDR W9, [X21 + 0x18]
	0x02181828 CMP W8, W9
	0x0218182C B.CS 0x21818E4
	0x02181830 LDR X9, [X21]
	0x02181834 MOV X0, X23
	0x02181838 MOV X2, X22
	0x0218183C LDR W9, [X9 + 0x104]
	0x02181840 NOP
	0x02181844 MADD X8, X9, X8, X21
	0x02181848 ADD X1, X8, 0x20
	0x0218184C BL 0x3EB1AC0
	0x02181850 CBZ X24, 0x21818E8
	0x02181854 LDR W8, [X24 + 0x18]
	0x02181858 CMP W26, W8
	0x0218185C B.CS 0x21818E4
	0x02181860 LDR X8, [X24]
	0x02181864 MOV X1, X23
	0x02181868 MOV X2, X22
	0x0218186C LDR W8, [X8 + 0x104]
	0x02181870 NOP
	0x02181874 MADD X8, X8, X26, X24
	0x02181878 ADD X0, X8, 0x20
	0x0218187C BL 0x3EB1AC0
	0x02181880 LDR X8, [X19 + 0x38]
	0x02181884 LDR X0, [X8 + 0x10]
	0x02181888 LDRB W8, [X0 + 0x135]
	0x0218188C TBNZ X8, 0x0, 0x2181894
	0x02181890 BL 0x1C5C684
	0x02181894 LDR W8, [X24 + 0x18]
	0x02181898 CMP W26, W8
	0x0218189C B.CS 0x21818E4
	0x021818A0 LDR W8, [X20 + 0x18]
	0x021818A4 ADD X26, X26, 0x1
	0x021818A8 CMP W26, W8
	0x021818AC B.LT 0x2181814
	0x021818B0 LDR X8, [X25 + 0x28]
	0x021818B4 LDUR X9, [X29 - 0x8]
	0x021818B8 CMP X8, X9
	0x021818BC B.NE 0x21818EC
	0x021818C0 MOV X0, X24
	0x021818C4 ADD X31, X29, 0x0
	0x021818C8 LDP X20, X19, [X31 + 0x50]
	0x021818CC LDP X22, X21, [X31 + 0x40]
	0x021818D0 LDP X24, X23, [X31 + 0x30]
	0x021818D4 LDP X26, X25, [X31 + 0x20]
	0x021818D8 LDR X27, [X31 + 0x10]
	0x021818DC LDP X29, X30, [X31], #0x60
	0x021818E0 RET
	0x021818E4 BL 0x1C16F28
	0x021818E8 BL 0x1C16F20
	0x021818EC BL 0x3EB1B20
	0x021818F0 STP X29, X30, [X31 - 0x30]!
	0x021818F4 STP X22, X21, [X31 + 0x10]
	0x021818F8 STP X20, X19, [X31 + 0x20]
	0x021818FC ADD X29, X31, 0x0
	0x02181900 SUB X31, X31, 0x10
	0x02181904 MRS X22, 0xC000
	0x02181908 LDR X8, [X22 + 0x28]
	0x0218190C MOV X19, X2
	0x02181910 MOV X20, X1
	0x02181914 MOV W21, W0
	0x02181918 STUR X8, [X29 - 0x8]
	0x0218191C STUR X1, [X29 - 0x10]
	0x02181920 LDR X8, [X2 + 0x38]
	0x02181924 CBNZ X8, 0x2181934
	0x02181928 MOV X0, X19
	0x0218192C BL 0x1C5C6E0
	0x02181930 LDR X8, [X19 + 0x38]
	0x02181934 LDR X9, [X8]
	0x02181938 ADD X10, X31, 0x0
	0x0218193C LDR W2, [X9 + 0xFC]
	0x02181940 ADD X11, X2, 0xF
	0x02181944 AND X11, X11, 0x1FFFFFFFF
	0x02181948 SUB X10, X10, X11
	0x0218194C ADD X31, X10, 0x0
	0x02181950 TBZ X21, 0x0, 0x2181978
	0x02181954 LDR X8, [X22 + 0x28]
	0x02181958 LDUR X9, [X29 - 0x8]
	0x0218195C CMP X8, X9
	0x02181960 B.NE 0x21819F0
	0x02181964 ADD X31, X29, 0x0
	0x02181968 LDP X20, X19, [X31 + 0x20]
	0x0218196C LDP X22, X21, [X31 + 0x10]
	0x02181970 LDP X29, X30, [X31], #0x30
	0x02181974 RET
	0x02181978 LDR W9, [X9 + 0x28]
	0x0218197C MOV X0, X10
	0x02181980 MOV X21, X8
	0x02181984 CMP W9, 0x0
	0x02181988 SUB X9, X29, 0x10
	0x0218198C CSEL X1, X20, X9, LT
	0x02181990 MOV X20, X10
	0x02181994 BL 0x3EB1AC0
	0x02181998 LDR X0, [X21]
	0x0218199C MOV X1, X20
	0x021819A0 BL 0x1C16E04
	0x021819A4 MOV X20, X0
	0x021819A8 ADRP X0, 0x1F9A000
	0x021819AC LDR X0, [X0 + 0x7C8]
	0x021819B0 BL 0x1C16D08
	0x021819B4 MOV X1, X20
	0x021819B8 MOV X2, X31
	0x021819BC BL 0x321EFD0
	0x021819C0 MOV X20, X0
	0x021819C4 ADRP X0, 0x1F7A000
	0x021819C8 LDR X0, [X0 + 0x8E8]
	0x021819CC BL 0x1C16D08
	0x021819D0 BL 0x1C16F10
	0x021819D4 MOV X1, X20
	0x021819D8 MOV X2, X31
	0x021819DC MOV X21, X0
	0x021819E0 BL 0x1E3B714
	0x021819E4 MOV X0, X21
	0x021819E8 MOV X1, X19
	0x021819EC BL 0x1C16DEC
	0x021819F0 BL 0x3EB1B20
	0x021819F4 STR X30, [X31 - 0x30]!
	0x021819F8 STP X22, X21, [X31 + 0x10]
	0x021819FC STP X20, X19, [X31 + 0x20]
	0x02181A00 LDR X8, [X3 + 0x38]
	0x02181A04 MOV X19, X3
	0x02181A08 MOV W21, W2
	0x02181A0C MOV X20, X1
	0x02181A10 MOV W22, W0
	0x02181A14 CBNZ X8, 0x2181A20
	0x02181A18 MOV X0, X19
	0x02181A1C BL 0x1C5C6E0
	0x02181A20 TBZ X22, 0x0, 0x2181A34
	0x02181A24 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-40], X8
	017 Move X8, [X8+40]
	018 Move X19, X1
	019 Move [X29-8], X8
	020 Move X8, [X1+56]
	021 Move [X29-24], X0
	022 Compare X8, 0
	023 JumpIfNotEqual {36}
	024 Move X0, 0x1F73000
	025 Move X0, [X0+2288]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F9B000
	028 Move X0, [X0+1968]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move X8, [X19+56]
	036 Move X0, [X8+16]
	037 Move X9, [X8+40]
	038 Move W20, [X0+252]
	039 Move W10, [X0+309]
	040 Move W23, [X9+252]
	041 Move W9, W20
	042 Move TEMP, X10
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Call 0x1C5D684
	047 Move W9, [X0+252]
	048 Move X8, [X19+56]
	049 Add W9, W9, 16
	050 Add X9, X9, 15
	051 Add X10, X31, 0
	052 And X9, X9, 0x1FFFFFFFF
	053 Subtract X9, X10, X9
	054 Move [X29-32], X9
	055 Add X31, X9, 0
	056 Move X9, [X8+64]
	057 Add X10, X31, 0
	058 Move W9, [X9+252]
	059 Add X9, X9, 15
	060 And X9, X9, 0x1FFFFFFFF
	061 Subtract X24, X10, X9
	062 Add X31, X24, 0
	063 Move X8, [X8+80]
	064 Add X9, X31, 0
	065 Move W8, [X8+252]
	066 Add X8, X8, 15
	067 And X8, X8, 0x1FFFFFFFF
	068 Subtract X25, X9, X8
	069 Add X31, X25, 0
	070 Add X9, X20, 15
	071 Add X8, X31, 0
	072 And X9, X9, 0x1FFFFFFFF
	073 Subtract X28, X8, X9
	074 Add X31, X28, 0
	075 Add X10, X23, 15
	076 Add X8, X31, 0
	077 And X22, X10, 0x1FFFFFFFF
	078 Subtract X26, X8, X22
	079 Add X31, X26, 0
	080 Add X8, X31, 0
	081 Subtract X21, X8, X9
	082 Add X31, X21, 0
	083 Move X0, X21
	084 Move W1, W31
	085 Move X2, X20
	086 Call 0x3EB2B10
	087 Add X8, X31, 0
	088 Subtract X27, X8, X22
	089 Add X31, X27, 0
	090 Move X0, X27
	091 Move W1, W31
	092 Move X2, X23
	093 Call 0x3EB2B10
	094 Move X8, 0x1F73000
	095 Move X8, [X8+2288]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X1, X31
	099 Move X22, X0
	100 Call StringBuilder..ctor, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Compare X2, 0
	103 JumpIfEqual {222}
	104 Move X8, [X19+56]
	105 Subtract X3, X29, 16
	106 Move X4, X28
	107 Move X1, [X8+8]
	108 Move X0, [X1]
	109 Move [X29-16], X28
	110 Move X8, [X1+16]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X0, X21
	113 Move X1, X28
	114 Move X2, X20
	115 Call 0x3EB2AC0
	116 Move X28, 0x1F9B000
	117 Move X28, [X28+1968]
	118 Move X8, [X19+56]
	119 Move X1, [X8+88]
	120 Move X8, [X1]
	121 Move X0, X21
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {178}
	127 Move X8, [X19+56]
	128 Move X1, [X8+24]
	129 Move X0, [X1]
	130 Move [X29-16], X26
	131 Move X8, [X1+16]
	132 Subtract X3, X29, 16
	133 Move X2, X21
	134 Move X4, X26
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X0, X27
	137 Move X1, X26
	138 Move X2, X23
	139 Call 0x3EB2AC0
	140 Move X8, [X19+56]
	141 Move X1, [X8+48]
	142 Move X0, [X1]
	143 Move [X29-16], X24
	144 Move X8, [X1+16]
	145 Subtract X3, X29, 16
	146 Move X2, X27
	147 Move X4, X24
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X19+56]
	150 Move X0, [X8+64]
	151 Move X1, X24
	152 Call 0x1C17E04
	153 Move X8, [X19+56]
	154 Move X20, X0
	155 Move X1, [X8+72]
	156 Move X0, [X1]
	157 Move [X29-16], X25
	158 Move X8, [X1+16]
	159 Subtract X3, X29, 16
	160 Move X2, X27
	161 Move X4, X25
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X8, [X19+56]
	164 Move X0, [X8+80]
	165 Move X1, X25
	166 Call 0x1C17E04
	167 Move X2, X0
	168 Move X0, [X28]
	169 Move X1, X20
	170 Move X3, X31
	171 Call String.Format, X0, X1, X2
	172 Move X1, X0
	173 Compare X22, 0
	174 JumpIfEqual {221}
	175 Move X0, X22
	176 Move X2, X31
	177 Call StringBuilder.AppendLine, X0, X1
	178 Move X23, X31
	179 Move X8, [X19+56]
	180 Move X0, [X8+16]
	181 Move W9, [X0+309]
	182 Move TEMP, X9
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {188}
	186 Call 0x1C5D684
	187 Move X8, [X19+56]
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 Move X1, [X8+96]
	190 Move X3, X21
	191 Move X4, X31
	192 Move X5, X31
	193 Call 0x1C18728
	194 Compare X23, 0
	195 JumpIfNotEqual {223}
	196 Compare X22, 0
	197 JumpIfEqual {222}
	198 Move X8, [X22]
	199 Move X0, X22
	200 Move X9, [X8+360]
	201 Move X1, [X8+368]
	202 NotImplemented "Instruction BLR not yet implemented."
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 Move X8, [X8+40]
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add X31, X29, 0
	208 Move X20, [X31+80]
	209 Move X19, [X31+88]
	210 Move X22, [X31+64]
	211 Move X21, [X31+72]
	212 Move X24, [X31+48]
	213 Move X23, [X31+56]
	214 Move X26, [X31+32]
	215 Move X25, [X31+40]
	216 Move X28, [X31+16]
	217 Move X27, [X31+24]
	218 Move X29, [X31+96]
	219 Move X30, [X31+104]
	220 Return X0
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Move X0, X23
	224 Call 0x1C17F18
	225 Call 0x3EB2B20
	226 Move X20, X0
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X20
	229 Call 0x3EB2AD0
	230 Move X23, [X0]
	231 Call 0x3EB2AE0
	232 Move X23, X31
	233 Move X20, X0
	234 Move X8, [X19+56]
	235 Move X0, [X8+16]
	236 Move W9, [X0+309]
	237 Move TEMP, X9
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {243}
	241 Call 0x1C5D684
	242 Move X8, [X19+56]
	243 Move X1, [X8+96]
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move X3, X21
	246 Move X4, X31
	247 Move X5, X31
	248 Call 0x1C18728
	249 Compare X23, 0
	250 JumpIfNotEqual {253}
	251 Move X0, X20
	252 Call 0x1D2D690
	253 Move X0, X23
	254 Call 0x1C17F18
	255 Call 0x1991590

Method: System.String ToString(System.Collections.Generic.IEnumerable`1<T> arr, System.String separator = , )

Disassembly:
	0x02181A28 LDP X22, X21, [X31 + 0x10]
	0x02181A2C LDR X30, [X31], #0x30
	0x02181A30 RET
	0x02181A34 STR W21, [X31 + 0xC]
	0x02181A38 LDR X8, [X19 + 0x38]
	0x02181A3C ADD X1, X31, 0xC
	0x02181A40 LDR X0, [X8 + 0x8]
	0x02181A44 BL 0x1C16E04
	0x02181A48 MOV X21, X0
	0x02181A4C ADRP X0, 0x1F9A000
	0x02181A50 LDR X0, [X0 + 0x7D0]
	0x02181A54 BL 0x1C16D08
	0x02181A58 MOV X1, X20
	0x02181A5C MOV X2, X21
	0x02181A60 MOV X3, X31
	0x02181A64 BL 0x3227BD4
	0x02181A68 MOV X20, X0
	0x02181A6C ADRP X0, 0x1F7A000
	0x02181A70 LDR X0, [X0 + 0x8E8]
	0x02181A74 BL 0x1C16D08
	0x02181A78 BL 0x1C16F10
	0x02181A7C MOV X1, X20
	0x02181A80 MOV X2, X31
	0x02181A84 MOV X21, X0
	0x02181A88 BL 0x1E3B714
	0x02181A8C MOV X0, X21
	0x02181A90 MOV X1, X19
	0x02181A94 BL 0x1C16DEC
	0x02181A98 TBZ X0, 0x0, 0x2181AA0
	0x02181A9C RET
	0x02181AA0 STP X30, X21, [X31 - 0x20]!
	0x02181AA4 STP X20, X19, [X31 + 0x10]
	0x02181AA8 ADRP X0, 0x1F9A000
	0x02181AAC LDR X0, [X0 + 0x7D0]
	0x02181AB0 MOV X19, X3
	0x02181AB4 MOV X20, X2
	0x02181AB8 MOV X21, X1
	0x02181ABC BL 0x1C16D08
	0x02181AC0 MOV X1, X21
	0x02181AC4 MOV X2, X20
	0x02181AC8 MOV X3, X31
	0x02181ACC BL 0x3227BD4
	0x02181AD0 MOV X20, X0
	0x02181AD4 ADRP X0, 0x1F7A000
	0x02181AD8 LDR X0, [X0 + 0x8E8]
	0x02181ADC BL 0x1C16D08
	0x02181AE0 BL 0x1C16F10
	0x02181AE4 MOV X1, X20
	0x02181AE8 MOV X2, X31
	0x02181AEC MOV X21, X0
	0x02181AF0 BL 0x1E3B714
	0x02181AF4 MOV X0, X21
	0x02181AF8 MOV X1, X19
	0x02181AFC BL 0x1C16DEC
	0x02181B00 STR X30, [X31 - 0x30]!
	0x02181B04 STP X22, X21, [X31 + 0x10]
	0x02181B08 STP X20, X19, [X31 + 0x20]
	0x02181B0C LDR X8, [X3 + 0x38]
	0x02181B10 MOV X19, X3
	0x02181B14 MOV X21, X2
	0x02181B18 MOV X20, X1
	0x02181B1C MOV W22, W0
	0x02181B20 CBNZ X8, 0x2181B2C
	0x02181B24 MOV X0, X19
	0x02181B28 BL 0x1C5C6E0
	0x02181B2C TBZ X22, 0x0, 0x2181B40
	0x02181B30 LDP X20, X19, [X31 + 0x20]
	0x02181B34 LDP X22, X21, [X31 + 0x10]
	0x02181B38 LDR X30, [X31], #0x30
	0x02181B3C RET
	0x02181B40 STR W21, [X31 + 0x8]
	0x02181B44 LDR X8, [X19 + 0x38]
	0x02181B48 ADD X1, X31, 0x8
	0x02181B4C LDR X0, [X8 + 0x8]
	0x02181B50 BL 0x1C16E04
	0x02181B54 MOV X21, X0
	0x02181B58 ADRP X0, 0x1F9A000
	0x02181B5C LDR X0, [X0 + 0x7D0]
	0x02181B60 BL 0x1C16D08
	0x02181B64 MOV X1, X20
	0x02181B68 MOV X2, X21
	0x02181B6C MOV X3, X31
	0x02181B70 BL 0x3227BD4
	0x02181B74 MOV X20, X0
	0x02181B78 ADRP X0, 0x1F7A000
	0x02181B7C LDR X0, [X0 + 0x8E8]
	0x02181B80 BL 0x1C16D08
	0x02181B84 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {22}
	013 Move X0, 0x1F73000
	014 Move X0, [X0+3768]
	015 Call 0x1C17CF4
	016 Move X8, [X20+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X20
	020 Call 0x1C5D6E0
	021 Move X8, [X20+56]
	022 Move X0, [X8+24]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X8, [X20+56]
	034 Move X0, [X8+24]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X0+184]
	042 Move X22, [X8+8]
	043 Compare X22, 0
	044 JumpIfNotEqual {103}
	045 Move X8, [X20+56]
	046 Move X0, [X8+24]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, [X20+56]
	058 Move X0, [X8+24]
	059 Move W9, [X0+309]
	060 Move TEMP, X9
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {66}
	064 Call 0x1C5D684
	065 Move X8, [X20+56]
	066 Move X8, [X8+16]
	067 Move X9, [X0+184]
	068 Move W10, [X8+309]
	069 Move X23, [X9]
	070 Move TEMP, X10
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {77}
	074 Move X0, X8
	075 Call 0x1C5D684
	076 Move X8, X0
	077 Move X0, X8
	078 Call 0x1C17F10
	079 Move X8, [X20+56]
	080 Move X1, X23
	081 Move X22, X0
	082 Move X2, [X8+32]
	083 Move X3, [X8+40]
	084 Call Func`2<Int32, Object>..ctor, X0, X1, X2
	085 Move X8, [X20+56]
	086 Move X0, [X8+24]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+184]
	094 Move [X8+8], X22
	095 Move X8, [X20+56]
	096 Move X0, [X8+24]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X8, [X20+56]
	104 Move X0, X21
	105 Move X1, X22
	106 Move X2, [X8+48]
	107 Call Enumerable.Select, X0, X1
	108 Move X8, 0x1F73000
	109 Move X8, [X8+3768]
	110 Move X1, [X8]
	111 Call Enumerable.ToArray, X0
	112 Move X1, X0
	113 Move X0, X19
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X2, X31
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Call String.Join, X0, X1
	122 Return X0

