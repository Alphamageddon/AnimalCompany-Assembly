Type: UnityEngine.ProBuilder.ArrayUtility/SearchRange

Method: System.Void .ctor(System.Int32 begin, System.Int32 end)

Disassembly:
	0x038F77A0 LDR V11, [X31 + 0x18]
	0x038F77A4 LDRB W8, [X22 + 0x785]

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Return 

Method: System.Boolean Valid()

Disassembly:
	0x038F77A8 LDR V12, [X31 + 0x20]
	0x038F77AC CBNZ W8, 0x38F77C4
	0x038F77B0 ADRP X0, 0x7FC000
	0x038F77B4 LDR X0, [X0 + 0x5A8]
	0x038F77B8 BL 0x1C16CF4

ISIL:
	001 Move W9, [X0]
	002 Move W8, [X0+4]
	003 Subtract W8, W8, W9
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Int32 Center()

Disassembly:
	0x038F77BC MOVZ W8, 0x1
	0x038F77C0 STRB W8, [X22 + 0x785]
	0x038F77C4 LDR X0, [X24]
	0x038F77C8 FSUB V10.2S, V10.2S, V11.2S
	0x038F77CC FSUB S9, S9, S12
	0x038F77D0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Subtract W9, W9, W8
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CINC not yet implemented."
	006 Add W0, W8, W9
	007 Return X0

Method: System.String ToString()

Disassembly:
	0x038F77D4 CBNZ W8, 0x38F77DC
	0x038F77D8 BL 0x1C16DFC
	0x00000000 INVALID
	0x038F77E0 FADDP S0, V0.2S
	0x038F77E4 FMUL S1, S9, S9
	0x038F77E8 FADD S0, S1, S0
	0x038F77EC FSQRT S1, S0
	0x038F77F0 FCMP S1, S8
	0x038F77F4 B.LE 0x38F7808
	0x038F77F8 UNIMPLEMENTED
	0x00000000 INVALID
	0x038F7800 FDIV S1, S9, S1
	0x038F7804 B 0x38F7840
	0x038F7808 ADRP X19, 0xAE1000
	0x038F780C LDRB W8, [X19 + 0x783]
	0x038F7810 CBNZ W8, 0x38F7828
	0x038F7814 ADRP X0, 0x7FC000
	0x038F7818 LDR X0, [X0 + 0x5A0]
	0x038F781C BL 0x1C16CF4
	0x038F7820 MOVZ W8, 0x1
	0x038F7824 STRB W8, [X19 + 0x783]
	0x038F7828 ADRP X8, 0x7FC000
	0x038F782C LDR X8, [X8 + 0x5A0]
	0x038F7830 LDR X8, [X8]
	0x038F7834 LDR X8, [X8 + 0xB8]
	0x038F7838 LDR V0, [X8]
	0x038F783C LDR V1, [X8 + 0x8]
	0x038F7840 LDR V2, [X31 + 0x10]
	0x038F7844 LDRB W8, [X22 + 0x785]
	0x038F7848 MOVI V10.2S, 0x3F, 0x18
	0x038F784C FMOV S12, 0.5
	0x038F7850 FADD V9.2S, V2.2S, V0.2S
	0x038F7854 LDR V0, [X31 + 0xC]
	0x038F7858 FADD S11, S0, S1
	0x038F785C CBNZ W8, 0x38F7874
	0x038F7860 ADRP X0, 0x7FC000
	0x038F7864 LDR X0, [X0 + 0x5A8]
	0x038F7868 BL 0x1C16CF4
	0x038F786C MOVZ W8, 0x1
	0x038F7870 STRB W8, [X22 + 0x785]
	0x038F7874 LDR X0, [X24]
	0x00000000 INVALID
	0x038F787C FMUL S9, S11, S12
	0x038F7880 LDR W8, [X0 + 0xE0]
	0x038F7884 CBNZ W8, 0x38F788C
	0x038F7888 BL 0x1C16DFC
	0x00000000 INVALID
	0x038F7890 FADDP S0, V0.2S
	0x038F7894 FMUL S1, S9, S9
	0x038F7898 FADD S0, S1, S0
	0x038F789C FSQRT S1, S0
	0x038F78A0 FCMP S1, S8
	0x038F78A4 B.LE 0x38F7A90
	0x038F78A8 UNIMPLEMENTED
	0x00000000 INVALID
	0x038F78B0 FDIV S2, S9, S1
	0x038F78B4 B 0x38F7AC8
	0x038F78B8 LDRSW X9, [X10]
	0x038F78BC ADD X8, X8, X9, 0x4, LSL
	0x038F78C0 ADD X0, X8, 0x138
	0x038F78C4 LDP X9, X2, [X0]
	0x038F78C8 ADD X8, X31, 0x18
	0x038F78CC MOV X0, X19
	0x038F78D0 MOV W1, W20
	0x038F78D4 BLR X9
	0x038F78D8 LDR X8, [X19]
	0x038F78DC LDR V8, [X31 + 0x18]
	0x038F78E0 LDR V9, [X31 + 0x20]
	0x038F78E4 LDR X1, [X22]
	0x038F78E8 LDRH W9, [X8 + 0x12E]
	0x038F78EC CBZ X9, 0x38F7910
	0x038F78F0 LDR X10, [X8 + 0xB0]
	0x038F78F4 ADD X10, X10, 0x8
	0x038F78F8 LDUR X11, [X10 - 0x8]
	0x038F78FC CMP X11, X1
	0x038F7900 B.EQ 0x38F7920
	0x038F7904 SUBS X9, X9, 0x1
	0x038F7908 ADD X10, X10, 0x10
	0x038F790C B.NE 0x38F78F8
	0x038F7910 MOV X0, X19
	0x038F7914 MOV W2, W31
	0x038F7918 BL 0x1C5C788

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAEB000
	007 Move X21, 0x7FD000
	008 Move W8, [X20+1882]
	009 Move X21, [X21+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x7FD000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x82A000
	019 Move X0, [X0+864]
	020 Call 0x1C17CF4
	021 Move X0, 0x7FD000
	022 Move X0, [X0+2104]
	023 Call 0x1C17CF4
	024 Move X0, 0x857000
	025 Move X0, [X0+2552]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1882], W8
	029 Move X0, [X21]
	030 Move W1, 6
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {87}
	034 Move W8, [X0+24]
	035 Move X20, X0
	036 Compare W8, 0
	037 JumpIfEqual {86}
	038 Move X8, 0x82A000
	039 Move X8, [X8+864]
	040 Move X0, X19
	041 Move X1, X31
	042 Move X8, [X8]
	043 Move [X20+32], X8
	044 Call Int32.ToString, X0
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X20+40], X0
	049 Move X8, 0x7FD000
	050 Move X8, [X8+2104]
	051 Add X0, X19, 4
	052 Move X1, X31
	053 Move X8, [X8]
	054 Move [X20+48], X8
	055 Call Int32.ToString, X0
	056 Move W8, [X20+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X20+56], X0
	060 Move X8, 0x857000
	061 Move X8, [X8+2552]
	062 Add X0, X31, 12
	063 Move X1, X31
	064 Move X8, [X8]
	065 Move [X20+64], X8
	066 Move W8, [X19]
	067 Move W9, [X19+4]
	068 Subtract W9, W9, W8
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CINC not yet implemented."
	071 Add W8, W8, W9
	072 Move [X31+12], W8
	073 Call Int32.ToString, X0
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X20+72], X0
	077 Move X0, X20
	078 Move X1, X31
	079 Call String.Concat, X0
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Add X31, X31, 48
	085 Return X0
	086 Call 0x1C17F28
	087 Call 0x1C17F20

