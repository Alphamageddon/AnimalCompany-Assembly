Type: UnityEngine.ProBuilder.Bounds2D

Method: UnityEngine.Vector2 get_size()

Disassembly:
	0x038F90C4 TBZ X0, 0x0, 0x38F90E8
	0x038F90C8 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 Return X0

Method: System.Void set_size(UnityEngine.Vector2 value)

Disassembly:
	0x038F90CC LDR X30, [X31 + 0x40]
	0x038F90D0 LDP D9, D8, [X31 + 0x30]
	0x038F90D4 LDP D11, D10, [X31 + 0x20]
	0x038F90D8 LDP D13, D12, [X31 + 0x10]
	0x038F90DC MOVZ W0, 0x1
	0x038F90E0 LDP D15, D14, [X31], #0x60

ISIL:
	001 Move S2, 0.5
	002 Move [X0+24], S0
	003 Move [X0+32], S1
	004 Multiply S0, S0, S2
	005 Multiply S1, S1, S2
	006 Move [X0+32], S0
	007 Move [X0+40], S1
	008 Return 

Method: UnityEngine.Vector2 get_extents()

Disassembly:
	0x038F90E4 RET
	0x038F90E8 LDP S2, S3, [X31 + 0x48]

ISIL:
	001 Move S0, [X0+32]
	002 Move S1, [X0+36]
	003 Return X0

Method: UnityEngine.Vector2[] get_corners()

Disassembly:
	0x038F90EC MOV V4.16B, V11.16B
	0x038F90F0 MOV V5.16B, V10.16B
	0x038F90F4 MOV V6.16B, V9.16B
	0x038F90F8 MOV V7.16B, V8.16B
	0x038F90FC LDP X20, X19, [X31 + 0x50]
	0x038F9100 LDR X30, [X31 + 0x40]
	0x038F9104 LDP D9, D8, [X31 + 0x30]
	0x038F9108 LDP D11, D10, [X31 + 0x20]
	0x038F910C LDP D13, D12, [X31 + 0x10]
	0x038F9110 MOV V0.16B, V14.16B
	0x038F9114 MOV V1.16B, V15.16B
	0x038F9118 LDP D15, D14, [X31], #0x60
	0x038F911C B 0x38F9128
	0x038F9120 BL 0x1C16F28
	0x038F9124 BL 0x1C16F20
	0x038F9128 FSUB S16, S2, S0
	0x038F912C FSUB S17, S3, S1
	0x038F9130 FSUB S2, S6, S4
	0x038F9134 FSUB S3, S7, S5
	0x038F9138 FSUB S0, S0, S4
	0x038F913C FSUB S1, S1, S5
	0x038F9140 FMUL S4, S16, S1
	0x038F9144 FMUL S5, S17, S0
	0x038F9148 FMUL S6, S16, S3
	0x038F914C FMUL S7, S17, S2
	0x038F9150 FSUB S5, S4, S5
	0x038F9154 FSUB S4, S6, S7
	0x038F9158 FDIV S6, S5, S4
	0x038F915C FCMP S6, 0x0
	0x038F9160 B.LT 0x38F9198
	0x038F9164 FMOV S5, 1
	0x038F9168 FCMP S6, S5
	0x038F916C B.HI 0x38F9198
	0x038F9170 FMUL S1, S1, S2
	0x038F9174 FMUL S0, S0, S3
	0x038F9178 FSUB S0, S1, S0
	0x038F917C FDIV S0, S0, S4
	0x038F9180 FCMP S0, 0x0
	0x038F9184 CSET W8, GE
	0x038F9188 FCMP S0, S5
	0x038F918C CSET W9, LS
	0x038F9190 AND W0, W8, W9, 0x0
	0x038F9194 RET
	0x038F9198 MOV W0, W31
	0x038F919C RET
	0x038F91A0 STR X30, [X31 - 0x10]!
	0x038F91A4 CBZ X1, 0x38F91D8
	0x038F91A8 LDP D0, D1, [X0 + 0x10]
	0x038F91AC LDP D3, D2, [X1 + 0x10]
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE9000
	006 Move X21, 0x855000
	007 Move W8, [X20+1889]
	008 Move X21, [X21+2696]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x855000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1889], W8
	019 Move X0, [X21]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {56}
	024 Move W8, [X0+24]
	025 Compare W8, 0
	026 JumpIfEqual {55}
	027 Move V0, [X19+32]
	028 Move V1, [X19+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract V2, V1, V0
	031 Add V0, V1, V0
	032 Move V2.S[1], V0.S[1]
	033 Move [X0+32], D2
	034 Move V0, [X19+16]
	035 Move V1, [X19+32]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add V0, V0, V1
	038 Move [X0+40], D0
	039 Move V0, [X19+16]
	040 Move V1, [X19+32]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract V0, V0, V1
	043 Move [X0+48], D0
	044 Move V0, [X19+16]
	045 Move V1, [X19+32]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Add V2, V0, V1
	049 Subtract V0, V0, V1
	050 Move V2.S[1], V0.S[1]
	051 Move [X0+56], D2
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 Call 0x1C17F28
	056 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x038F91B4 FADD V1.2S, V1.2S, V2.2S
	0x038F91B8 FADD V0.2S, V0.2S, V0.2S
	0x00000000 INVALID
	0x038F91C0 UNIMPLEMENTED
	0x038F91C4 AND V0.8B, V0.8B, V1.8B
	0x038F91C8 FMOV W8, S0
	0x038F91CC AND W0, W8, 0x1
	0x038F91D0 LDR X30, [X31], #0x10
	0x038F91D4 RET
	0x038F91D8 BL 0x1C16F20
	0x038F91DC MOV V2.S[1], V3.S[0]
	0x038F91E0 LDP D4, D3, [X0 + 0x10]
	0x038F91E4 MOV V0.S[1], V1.S[0]
	0x038F91E8 MOVI V1.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x038F91F0 FADD V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x038F91F8 FADD V1.2S, V2.2S, V3.2S
	0x038F91FC FADD V0.2S, V0.2S, V0.2S
	0x00000000 INVALID
	0x038F9204 UNIMPLEMENTED
	0x038F9208 AND V0.8B, V0.8B, V1.8B
	0x038F920C FMOV W8, S0
	0x038F9210 AND W0, W8, 0x1
	0x038F9214 RET
	0x038F9218 STR D12, [X31 - 0x50]!
	0x038F921C STP D11, D10, [X31 + 0x8]
	0x038F9220 STP D9, D8, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAE1000
	005 Move W8, [X20+1935]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x803000
	010 Move X0, [X0+3848]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1935], W8
	014 Move X8, 0x803000
	015 Move X8, [X8+3848]
	016 Move X0, X19
	017 Move X1, X31
	018 Move X8, [X8]
	019 Move X9, [X8+184]
	020 Move V0, [X9]
	021 Move [X19+16], D0
	022 Move X9, [X8+184]
	023 Move V0, [X9]
	024 Move [X19+24], D0
	025 Move X8, [X8+184]
	026 Move V0, [X8]
	027 Move [X19+32], D0
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call Object..ctor, X0
	032 Return 

Method: System.Void .ctor(UnityEngine.Vector2 center, UnityEngine.Vector2 size)

Disassembly:
	0x038F9224 STR X30, [X31 + 0x28]
	0x038F9228 STP X22, X21, [X31 + 0x30]
	0x038F922C STP X20, X19, [X31 + 0x40]
	0x038F9230 ADRP X20, 0xAE8000
	0x038F9234 LDRB W8, [X20 + 0x764]
	0x038F9238 MOV X19, X0
	0x038F923C TBNZ X8, 0x0, 0x38F9260
	0x038F9240 ADRP X0, 0x854000
	0x038F9244 LDR X0, [X0 + 0xA90]
	0x038F9248 BL 0x1C16CF4
	0x038F924C ADRP X0, 0x854000
	0x038F9250 LDR X0, [X0 + 0xA98]
	0x038F9254 BL 0x1C16CF4
	0x038F9258 MOVZ W8, 0x1
	0x038F925C STRB W8, [X20 + 0x764]
	0x038F9260 CBZ X19, 0x38F94C8
	0x038F9264 ADRP X10, 0x854000
	0x038F9268 LDR X8, [X19]
	0x038F926C LDR X10, [X10 + 0xA90]
	0x038F9270 ADRP X22, 0x854000
	0x038F9274 LDRH W9, [X8 + 0x12E]
	0x038F9278 LDR X1, [X10]
	0x038F927C LDR X22, [X22 + 0xA98]
	0x038F9280 CBZ X9, 0x38F92A4
	0x038F9284 LDR X10, [X8 + 0xB0]
	0x038F9288 ADD X10, X10, 0x8
	0x038F928C LDUR X11, [X10 - 0x8]
	0x038F9290 CMP X11, X1
	0x038F9294 B.EQ 0x38F92B4
	0x038F9298 SUBS X9, X9, 0x1
	0x038F929C ADD X10, X10, 0x10
	0x038F92A0 B.NE 0x38F928C
	0x038F92A4 MOV X0, X19
	0x038F92A8 MOV W2, W31
	0x038F92AC BL 0x1C5C788
	0x038F92B0 B 0x38F92C0
	0x038F92B4 LDRSW X9, [X10]
	0x038F92B8 ADD X8, X8, X9, 0x4, LSL
	0x038F92BC ADD X0, X8, 0x138
	0x038F92C0 LDP X8, X1, [X0]
	0x038F92C4 MOV X0, X19
	0x038F92C8 BLR X8
	0x038F92CC LDR X8, [X19]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xAE1000
	009 Move W8, [X20+1935]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x803000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1935], W8
	022 Move X8, 0x803000
	023 Move X8, [X8+3848]
	024 Move X0, X19
	025 Move X1, X31
	026 Move X8, [X8]
	027 Move X9, [X8+184]
	028 Move V0, [X9]
	029 Move [X19+16], D0
	030 Move X9, [X8+184]
	031 Move V0, [X9]
	032 Move [X19+24], D0
	033 Move X8, [X8+184]
	034 Move V0, [X8]
	035 Move [X19+32], D0
	036 Call Object..ctor, X0
	037 Move S0, 0.5
	038 Multiply S1, S9, S0
	039 Multiply S0, S8, S0
	040 Move [X19+16], S11
	041 Move [X19+24], S10
	042 Move [X19+24], S9
	043 Move [X19+32], S8
	044 Move [X19+32], S1
	045 Move [X19+40], S0
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X30, [X31+32]
	049 Move D9, [X31+16]
	050 Move D8, [X31+24]
	051 Move D11, [X31+64]
	052 Move D10, [X31+72]
	053 Return 

Method: System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)

Disassembly:
	0x038F92D0 LDR X1, [X22]
	0x038F92D4 MOV W20, W0
	0x038F92D8 LDRH W9, [X8 + 0x12E]
	0x038F92DC CBZ X9, 0x38F9300
	0x038F92E0 LDR X10, [X8 + 0xB0]
	0x038F92E4 ADD X10, X10, 0x8
	0x038F92E8 LDUR X11, [X10 - 0x8]
	0x038F92EC CMP X11, X1
	0x038F92F0 B.EQ 0x38F9310
	0x038F92F4 SUBS X9, X9, 0x1
	0x038F92F8 ADD X10, X10, 0x10
	0x038F92FC B.NE 0x38F92E8
	0x038F9300 MOV X0, X19
	0x038F9304 MOV W2, W31
	0x038F9308 BL 0x1C5C788
	0x038F930C B 0x38F931C
	0x038F9310 LDRSW X9, [X10]
	0x038F9314 ADD X8, X8, X9, 0x4, LSL
	0x038F9318 ADD X0, X8, 0x138
	0x038F931C LDP X8, X2, [X0]
	0x038F9320 MOV X0, X19
	0x038F9324 MOV W1, W31
	0x038F9328 BLR X8
	0x038F932C LDR X8, [X19]
	0x038F9330 LDR X1, [X22]
	0x038F9334 MOV V8.16B, V0.16B
	0x038F9338 LDRH W9, [X8 + 0x12E]
	0x038F933C CBZ X9, 0x38F9360
	0x038F9340 LDR X10, [X8 + 0xB0]
	0x038F9344 ADD X10, X10, 0x8
	0x038F9348 LDUR X11, [X10 - 0x8]
	0x038F934C CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE1000
	006 Move W8, [X21+1935]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x803000
	012 Move X0, [X0+3848]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X21+1935], W8
	016 Move X8, 0x803000
	017 Move X8, [X8+3848]
	018 Move X0, X20
	019 Move X1, X31
	020 Move X8, [X8]
	021 Move X9, [X8+184]
	022 Move V0, [X9]
	023 Move [X20+16], D0
	024 Move X9, [X8+184]
	025 Move V0, [X9]
	026 Move [X20+24], D0
	027 Move X8, [X8+184]
	028 Move V0, [X8]
	029 Move [X20+32], D0
	030 Call Object..ctor, X0
	031 Move X0, X20
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]

Method: System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x038F9640 B 0x38F9650
	0x038F9644 LDRSW X9, [X10]
	0x038F9648 ADD X8, X8, X9, 0x4, LSL
	0x038F964C ADD X0, X8, 0x138
	0x038F9650 LDP X8, X2, [X0]
	0x038F9654 MOV X0, X20
	0x038F9658 MOV W1, W22
	0x038F965C BLR X8
	0x038F9660 LDR X8, [X19]
	0x038F9664 LDR X1, [X24]
	0x038F9668 MOV V8.16B, V0.16B
	0x038F966C LDRH W9, [X8 + 0x12E]
	0x038F9670 CBZ X9, 0x38F9694
	0x038F9674 LDR X10, [X8 + 0xB0]
	0x038F9678 ADD X10, X10, 0x8
	0x038F967C LDUR X11, [X10 - 0x8]
	0x038F9680 CMP X11, X1
	0x038F9684 B.EQ 0x38F96A4
	0x038F9688 SUBS X9, X9, 0x1
	0x038F968C ADD X10, X10, 0x10
	0x038F9690 B.NE 0x38F967C
	0x038F9694 MOV X0, X19
	0x038F9698 MOV W2, W31
	0x038F969C BL 0x1C5C788
	0x038F96A0 B 0x38F96B0
	0x038F96A4 LDRSW X9, [X10]
	0x038F96A8 ADD X8, X8, X9, 0x4, LSL
	0x038F96AC ADD X0, X8, 0x138
	0x038F96B0 LDP X8, X2, [X0]
	0x038F96B4 MOV X0, X19
	0x038F96B8 MOV W1, W31
	0x038F96BC BLR X8
	0x038F96C0 LDR X8, [X20]
	0x038F96C4 LDR X1, [X25]
	0x038F96C8 MOV W22, W0
	0x038F96CC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE1000
	007 Move W8, [X22+1935]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x803000
	014 Move X0, [X0+3848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1935], W8
	018 Move X8, 0x803000
	019 Move X8, [X8+3848]
	020 Move X0, X21
	021 Move X1, X31
	022 Move X8, [X8]
	023 Move X9, [X8+184]
	024 Move V0, [X9]
	025 Move [X21+16], D0
	026 Move X9, [X8+184]
	027 Move V0, [X9]
	028 Move [X21+24], D0
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X21+32], D0
	032 Call Object..ctor, X0
	033 Move X0, X21
	034 Move X1, X20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]

Method: System.Void .ctor(UnityEngine.Vector3[] points, UnityEngine.ProBuilder.Edge[] edges)

Disassembly:
	0x038F9C30 LDRSW X9, [X10]
	0x038F9C34 ADD X8, X8, X9, 0x4, LSL
	0x038F9C38 ADD X0, X8, 0x138
	0x038F9C3C LDP X8, X2, [X0]
	0x038F9C40 MOV X0, X20
	0x038F9C44 MOV W1, W23
	0x038F9C48 BLR X8
	0x038F9C4C LDR X8, [X19]
	0x038F9C50 LDR X1, [X24]
	0x038F9C54 MOV V10.16B, V0.16B
	0x038F9C58 LDRH W9, [X8 + 0x12E]
	0x038F9C5C CBZ X9, 0x38F9C80
	0x038F9C60 LDR X10, [X8 + 0xB0]
	0x038F9C64 ADD X10, X10, 0x8
	0x038F9C68 LDUR X11, [X10 - 0x8]
	0x038F9C6C CMP X11, X1
	0x038F9C70 B.EQ 0x38F9C90
	0x038F9C74 SUBS X9, X9, 0x1
	0x038F9C78 ADD X10, X10, 0x10
	0x038F9C7C B.NE 0x38F9C68
	0x038F9C80 MOV X0, X19
	0x038F9C84 MOV W2, W31
	0x038F9C88 BL 0x1C5C788
	0x038F9C8C B 0x38F9C9C
	0x038F9C90 LDRSW X9, [X10]
	0x038F9C94 ADD X8, X8, X9, 0x4, LSL
	0x038F9C98 ADD X0, X8, 0x138
	0x038F9C9C LDP X8, X2, [X0]
	0x038F9CA0 MOV X0, X19
	0x038F9CA4 MOV W1, W22
	0x038F9CA8 BLR X8
	0x038F9CAC LDR X8, [X20]
	0x038F9CB0 LDR X1, [X25]
	0x038F9CB4 MOV W23, W0
	0x038F9CB8 LDRH W9, [X8 + 0x12E]
	0x038F9CBC CBZ X9, 0x38F9CE0
	0x038F9CC0 LDR X10, [X8 + 0xB0]
	0x038F9CC4 ADD X10, X10, 0x8
	0x038F9CC8 LDUR X11, [X10 - 0x8]
	0x038F9CCC CMP X11, X1
	0x038F9CD0 B.EQ 0x38F9CF0
	0x038F9CD4 SUBS X9, X9, 0x1
	0x038F9CD8 ADD X10, X10, 0x10
	0x038F9CDC B.NE 0x38F9CC8
	0x038F9CE0 MOV X0, X20
	0x038F9CE4 MOV W2, W31
	0x038F9CE8 BL 0x1C5C788
	0x038F9CEC B 0x38F9CFC
	0x038F9CF0 LDRSW X9, [X10]
	0x038F9CF4 ADD X8, X8, X9, 0x4, LSL
	0x038F9CF8 ADD X0, X8, 0x138
	0x038F9CFC LDP X8, X2, [X0]
	0x038F9D00 MOV X0, X20
	0x038F9D04 MOV W1, W23
	0x038F9D08 BLR X8
	0x038F9D0C FCMP S10, S8
	0x038F9D10 FCSEL S8, S10, S8, MI
	0x038F9D14 FCMP S10, S12
	0x038F9D18 FCSEL S12, S10, S12, GT
	0x038F9D1C FCMP S1, S9
	0x038F9D20 ADD W22, W22, 0x1
	0x038F9D24 FCSEL S9, S1, S9, MI
	0x038F9D28 FCMP S1, S11
	0x038F9D2C FCSEL S11, S1, S11, GT
	0x038F9D30 CMP W22, W21
	0x038F9D34 B.NE 0x38F9B90
	0x038F9D38 B 0x38F9D44
	0x038F9D3C MOV V11.16B, V9.16B
	0x038F9D40 MOV V12.16B, V8.16B
	0x038F9D44 FSUB S0, S12, S8
	0x038F9D48 FSUB S1, S11, S9
	0x038F9D4C LDP X20, X19, [X31 + 0x60]
	0x038F9D50 LDP X22, X21, [X31 + 0x50]
	0x038F9D54 LDP X24, X23, [X31 + 0x40]
	0x038F9D58 LDP X30, X25, [X31 + 0x30]
	0x038F9D5C LDP D9, D8, [X31 + 0x20]
	0x038F9D60 LDP D11, D10, [X31 + 0x10]
	0x038F9D64 LDR V12, [X31], #0x70
	0x038F9D68 RET
	0x038F9D6C BL 0x1C16F20
	0x038F9D70 STR D14, [X31 - 0x70]!
	0x038F9D74 STP D13, D12, [X31 + 0x8]
	0x038F9D78 STP D11, D10, [X31 + 0x18]
	0x038F9D7C STP D9, D8, [X31 + 0x28]
	0x038F9D80 STR X30, [X31 + 0x38]
	0x038F9D84 STP X24, X23, [X31 + 0x40]
	0x038F9D88 STP X22, X21, [X31 + 0x50]
	0x038F9D8C STP X20, X19, [X31 + 0x60]
	0x038F9D90 ADRP X21, 0xAE8000
	0x038F9D94 ADRP X22, 0x854000
	0x038F9D98 LDRB W8, [X21 + 0x767]
	0x038F9D9C LDR X22, [X22 + 0xAA0]
	0x038F9DA0 MOV X20, X1
	0x038F9DA4 MOV X19, X0
	0x038F9DA8 TBNZ X8, 0x0, 0x38F9E08
	0x038F9DAC ADRP X0, 0x854000
	0x038F9DB0 LDR X0, [X0 + 0xAA0]
	0x038F9DB4 BL 0x1C16CF4
	0x038F9DB8 ADRP X0, 0x854000
	0x038F9DBC LDR X0, [X0 + 0xAA8]
	0x038F9DC0 BL 0x1C16CF4
	0x038F9DC4 ADRP X0, 0x7FA000
	0x038F9DC8 LDR X0, [X0 + 0xE00]
	0x038F9DCC BL 0x1C16CF4
	0x038F9DD0 ADRP X0, 0x822000
	0x038F9DD4 LDR X0, [X0 + 0x7B8]
	0x038F9DD8 BL 0x1C16CF4
	0x038F9DDC ADRP X0, 0x822000
	0x038F9DE0 LDR X0, [X0 + 0x7C0]
	0x038F9DE4 BL 0x1C16CF4
	0x038F9DE8 ADRP X0, 0x7FA000
	0x038F9DEC LDR X0, [X0 + 0xE18]
	0x038F9DF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE1000
	007 Move W8, [X22+1935]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x803000
	014 Move X0, [X0+3848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1935], W8
	018 Move X8, 0x803000
	019 Move X8, [X8+3848]
	020 Move X0, X19
	021 Move X1, X31
	022 Move X8, [X8]
	023 Move X9, [X8+184]
	024 Move V0, [X9]
	025 Move [X19+16], D0
	026 Move X9, [X8+184]
	027 Move V0, [X9]
	028 Move [X19+24], D0
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X19+32], D0
	032 Call Object..ctor, X0
	033 Compare X21, 0
	034 JumpIfEqual {121}
	035 Move X8, [X21+24]
	036 Move S1, W31
	037 Compare X8, 0
	038 JumpIfEqual {94}
	039 Compare X20, 0
	040 JumpIfEqual {121}
	041 Move X9, [X20+24]
	042 Move S0, W31
	043 Move S2, W31
	044 Move S3, W31
	045 Compare X9, 0
	046 JumpIfEqual {99}
	047 Compare W9, 0
	048 JumpIfEqual {120}
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W11, 12
	052 NotImplemented "Instruction MADD not yet implemented."
	053 Move S3, [X10+32]
	054 Move S0, [X10+36]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W12, W31
	057 Move W10, 12
	058 Move V2, V3
	059 Move V1, V0
	060 Add X11, X20, W12
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X12, W12
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move V4, [X13+32]
	066 Add X13, X20, X12
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction FCSEL not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X14, X21, 32
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Move S5, [X13]
	074 Move S7, [X13+4]
	075 NotImplemented "Instruction NOP not yet implemented."
	076 NotImplemented "Instruction MADD not yet implemented."
	077 Move V6, [X11+4]
	078 Add W12, W12, 1
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 NotImplemented "Instruction FCSEL not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 NotImplemented "Instruction FCSEL not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction FCSEL not yet implemented."
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FCSEL not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move S0, W31
	095 Move S2, W31
	096 Move S3, W31
	097 Move V1, V0
	098 Move V2, V3
	099 Add S4, S2, S3
	100 Move S5, 0.5
	101 Add S6, S1, S0
	102 Subtract S2, S2, S3
	103 Subtract S0, S1, S0
	104 Multiply S1, S4, S5
	105 Multiply S3, S6, S5
	106 Move [X19+24], S2
	107 Move [X19+32], S0
	108 Multiply S2, S2, S5
	109 Multiply S0, S0, S5
	110 Move [X19+16], S1
	111 Move [X19+24], S3
	112 Move [X19+32], S2
	113 Move [X19+40], S0
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 
	120 Call 0x1C17F28
	121 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Vector2[] points, System.Int32 length)

Disassembly:
	0x038F9DF4 ADRP X0, 0x854000
	0x038F9DF8 LDR X0, [X0 + 0xAB0]
	0x038F9DFC BL 0x1C16CF4
	0x038F9E00 MOVZ W8, 0x1
	0x038F9E04 STRB W8, [X21 + 0x767]
	0x038F9E08 LDR X1, [X22]
	0x038F9E0C MOV X0, X20
	0x038F9E10 BL 0x21B23E0
	0x038F9E14 FMOV S11, W31
	0x038F9E18 FMOV S12, W31
	0x038F9E1C FMOV S13, W31
	0x038F9E20 FMOV S14, W31
	0x038F9E24 TBZ X0, 0x0, 0x38FA1A0
	0x038F9E28 ADRP X8, 0x854000
	0x038F9E2C LDR X8, [X8 + 0xAA8]
	0x038F9E30 MOV X0, X20
	0x038F9E34 LDR X1, [X8]
	0x038F9E38 BL 0x21C2B84
	0x038F9E3C CBZ X19, 0x38FA1DC
	0x038F9E40 ADRP X22, 0x854000
	0x038F9E44 LDR X8, [X19]
	0x038F9E48 LDR X22, [X22 + 0xAB0]
	0x038F9E4C MOV W21, W0
	0x038F9E50 LDRH W9, [X8 + 0x12E]
	0x038F9E54 LDR X1, [X22]
	0x038F9E58 CBZ X9, 0x38F9E7C
	0x038F9E5C LDR X10, [X8 + 0xB0]
	0x038F9E60 ADD X10, X10, 0x8
	0x038F9E64 LDUR X11, [X10 - 0x8]
	0x038F9E68 CMP X11, X1
	0x038F9E6C B.EQ 0x38F9E8C
	0x038F9E70 SUBS X9, X9, 0x1
	0x038F9E74 ADD X10, X10, 0x10
	0x038F9E78 B.NE 0x38F9E64
	0x038F9E7C MOV X0, X19
	0x038F9E80 MOV W2, W31
	0x038F9E84 BL 0x1C5C788
	0x038F9E88 B 0x38F9E98
	0x038F9E8C LDRSW X9, [X10]
	0x038F9E90 ADD X8, X8, X9, 0x4, LSL
	0x038F9E94 ADD X0, X8, 0x138
	0x038F9E98 LDP X8, X2, [X0]
	0x038F9E9C MOV X0, X19
	0x038F9EA0 MOV W1, W21
	0x038F9EA4 BLR X8
	0x038F9EA8 LDR X8, [X19]
	0x038F9EAC LDR X1, [X22]
	0x038F9EB0 MOV V8.16B, V0.16B
	0x038F9EB4 LDRH W9, [X8 + 0x12E]
	0x038F9EB8 CBZ X9, 0x38F9EDC
	0x038F9EBC LDR X10, [X8 + 0xB0]
	0x038F9EC0 ADD X10, X10, 0x8
	0x038F9EC4 LDUR X11, [X10 - 0x8]
	0x038F9EC8 CMP X11, X1
	0x038F9ECC B.EQ 0x38F9EEC
	0x038F9ED0 SUBS X9, X9, 0x1
	0x038F9ED4 ADD X10, X10, 0x10
	0x038F9ED8 B.NE 0x38F9EC4
	0x038F9EDC MOV X0, X19
	0x038F9EE0 MOV W2, W31
	0x038F9EE4 BL 0x1C5C788
	0x038F9EE8 B 0x38F9EF8
	0x038F9EEC LDRSW X9, [X10]
	0x038F9EF0 ADD X8, X8, X9, 0x4, LSL
	0x038F9EF4 ADD X0, X8, 0x138
	0x038F9EF8 LDP X8, X2, [X0]
	0x038F9EFC MOV X0, X19
	0x038F9F00 MOV W1, W21
	0x038F9F04 BLR X8
	0x038F9F08 CBZ X20, 0x38FA1DC
	0x038F9F0C ADRP X10, 0x822000
	0x038F9F10 LDR X8, [X20]
	0x038F9F14 LDR X10, [X10 + 0x7B8]
	0x038F9F18 MOV V9.16B, V1.16B
	0x038F9F1C LDRH W9, [X8 + 0x12E]
	0x038F9F20 LDR X1, [X10]
	0x038F9F24 CBZ X9, 0x38F9F48
	0x038F9F28 LDR X10, [X8 + 0xB0]
	0x038F9F2C ADD X10, X10, 0x8
	0x038F9F30 LDUR X11, [X10 - 0x8]
	0x038F9F34 CMP X11, X1
	0x038F9F38 B.EQ 0x38F9F58

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE1000
	007 Move W8, [X22+1935]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x803000
	014 Move X0, [X0+3848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X22+1935], W8
	018 Move X8, 0x803000
	019 Move X8, [X8+3848]
	020 Move X0, X19
	021 Move X1, X31
	022 Move X8, [X8]
	023 Move X9, [X8+184]
	024 Move V0, [X9]
	025 Move [X19+16], D0
	026 Move X9, [X8+184]
	027 Move V0, [X9]
	028 Move [X19+24], D0
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X19+32], D0
	032 Call Object..ctor, X0
	033 Compare X20, 0
	034 JumpIfEqual {90}
	035 Move X9, [X20+24]
	036 Compare X9, 0
	037 JumpIfEqual {62}
	038 Compare W9, 0
	039 JumpIfEqual {89}
	040 Move S1, [X20+32]
	041 Move S0, [X20+36]
	042 Subtract W8, W21, 2
	043 Move W11, W21
	044 Subtract W9, W9, 1
	045 Add X10, X20, 44
	046 Subtract X11, X11, 1
	047 Move V3, V1
	048 Move V2, V0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move S4, [X10-4]
	051 Move S5, [X10]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 Subtract X11, X11, 1
	062 Move S2, W31
	063 Move S0, W31
	064 Move S3, W31
	065 Move S1, W31
	066 Move V2, V0
	067 Move V3, V1
	068 Add S4, S3, S1
	069 Move S5, 0.5
	070 Add S6, S2, S0
	071 Subtract S1, S3, S1
	072 Subtract S0, S2, S0
	073 Multiply S2, S4, S5
	074 Multiply S3, S6, S5
	075 Move [X19+24], S1
	076 Move [X19+32], S0
	077 Multiply S1, S1, S5
	078 Multiply S0, S0, S5
	079 Move [X19+16], S2
	080 Move [X19+24], S3
	081 Move [X19+32], S1
	082 Move [X19+40], S0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: System.Boolean ContainsPoint(UnityEngine.Vector2 point)

Disassembly:
	0x038F9F3C SUBS X9, X9, 0x1
	0x038F9F40 ADD X10, X10, 0x10
	0x038F9F44 B.NE 0x38F9F30
	0x038F9F48 MOV X0, X20
	0x038F9F4C MOV W2, W31
	0x038F9F50 BL 0x1C5C788
	0x038F9F54 B 0x38F9F64
	0x038F9F58 LDRSW X9, [X10]
	0x038F9F5C ADD X8, X8, X9, 0x4, LSL
	0x038F9F60 ADD X0, X8, 0x138
	0x038F9F64 LDP X8, X1, [X0]
	0x038F9F68 MOV X0, X20
	0x038F9F6C BLR X8
	0x038F9F70 ADRP X23, 0x7FA000
	0x038F9F74 ADRP X24, 0x822000
	0x038F9F78 LDR X23, [X23 + 0xE18]
	0x038F9F7C LDR X24, [X24 + 0x7C0]
	0x038F9F80 MOV X20, X0
	0x038F9F84 MOV V11.16B, V9.16B
	0x038F9F88 MOV V12.16B, V9.16B
	0x038F9F8C MOV V13.16B, V8.16B

ISIL:
	001 Move V2, [X0+16]
	002 Move V3, [X0+32]
	003 Move X8, X0
	004 Move W0, W31
	005 Add S4, S2, S3
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Subtract S2, S2, S3
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move V0, [X8+36]
	010 Move V2, [X8+20]
	011 Add S3, S0, S2
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move W0, W31
	014 Return X0
	015 Subtract S0, S2, S0
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Return X0

Method: System.Boolean IntersectsLineSegment(UnityEngine.Vector2 lineStart, UnityEngine.Vector2 lineEnd)

Disassembly:
	0x038F9F90 MOV V14.16B, V8.16B
	0x038F9F94 CBZ X20, 0x38FA1D8
	0x038F9F98 LDR X8, [X20]
	0x038F9F9C LDR X1, [X23]
	0x038F9FA0 LDRH W9, [X8 + 0x12E]
	0x038F9FA4 CBZ X9, 0x38F9FC8
	0x038F9FA8 LDR X10, [X8 + 0xB0]
	0x038F9FAC ADD X10, X10, 0x8
	0x038F9FB0 LDUR X11, [X10 - 0x8]
	0x038F9FB4 CMP X11, X1
	0x038F9FB8 B.EQ 0x38F9FD8
	0x038F9FBC SUBS X9, X9, 0x1
	0x038F9FC0 ADD X10, X10, 0x10
	0x038F9FC4 B.NE 0x38F9FB0
	0x038F9FC8 MOV X0, X20
	0x038F9FCC MOV W2, W31
	0x038F9FD0 BL 0x1C5C788
	0x038F9FD4 B 0x38F9FE4
	0x038F9FD8 LDRSW X9, [X10]
	0x038F9FDC ADD X8, X8, X9, 0x4, LSL
	0x038F9FE0 ADD X0, X8, 0x138
	0x038F9FE4 LDP X8, X1, [X0]
	0x038F9FE8 MOV X0, X20
	0x038F9FEC BLR X8
	0x038F9FF0 TBZ X0, 0x0, 0x38FA134
	0x038F9FF4 LDR X8, [X20]
	0x038F9FF8 LDR X1, [X24]
	0x038F9FFC LDRH W9, [X8 + 0x12E]
	0x038FA000 CBZ X9, 0x38FA024
	0x038FA004 LDR X10, [X8 + 0xB0]
	0x038FA008 ADD X10, X10, 0x8
	0x038FA00C LDUR X11, [X10 - 0x8]
	0x038FA010 CMP X11, X1
	0x038FA014 B.EQ 0x38FA034
	0x038FA018 SUBS X9, X9, 0x1
	0x038FA01C ADD X10, X10, 0x10
	0x038FA020 B.NE 0x38FA00C
	0x038FA024 MOV X0, X20
	0x038FA028 MOV W2, W31
	0x038FA02C BL 0x1C5C788
	0x038FA030 B 0x38FA040
	0x038FA034 LDRSW X9, [X10]
	0x038FA038 ADD X8, X8, X9, 0x4, LSL
	0x038FA03C ADD X0, X8, 0x138
	0x038FA040 LDP X8, X1, [X0]
	0x038FA044 MOV X0, X20
	0x038FA048 BLR X8
	0x038FA04C LDR X8, [X19]
	0x038FA050 LDR X1, [X22]
	0x038FA054 MOV W21, W0
	0x038FA058 LDRH W9, [X8 + 0x12E]
	0x038FA05C CBZ X9, 0x38FA080
	0x038FA060 LDR X10, [X8 + 0xB0]
	0x038FA064 ADD X10, X10, 0x8
	0x038FA068 LDUR X11, [X10 - 0x8]
	0x038FA06C CMP X11, X1
	0x038FA070 B.EQ 0x38FA090
	0x038FA074 SUBS X9, X9, 0x1
	0x038FA078 ADD X10, X10, 0x10
	0x038FA07C B.NE 0x38FA068
	0x038FA080 MOV X0, X19
	0x038FA084 MOV W2, W31
	0x038FA088 BL 0x1C5C788
	0x038FA08C B 0x38FA09C
	0x038FA090 LDRSW X9, [X10]
	0x038FA094 ADD X8, X8, X9, 0x4, LSL
	0x038FA098 ADD X0, X8, 0x138
	0x038FA09C LDP X8, X2, [X0]
	0x038FA0A0 MOV X0, X19
	0x038FA0A4 MOV W1, W21
	0x038FA0A8 BLR X8
	0x038FA0AC LDR X8, [X19]
	0x038FA0B0 LDR X1, [X22]
	0x038FA0B4 MOV V10.16B, V0.16B
	0x038FA0B8 LDRH W9, [X8 + 0x12E]
	0x038FA0BC CBZ X9, 0x38FA0E0
	0x038FA0C0 LDR X10, [X8 + 0xB0]
	0x038FA0C4 ADD X10, X10, 0x8
	0x038FA0C8 LDUR X11, [X10 - 0x8]
	0x038FA0CC CMP X11, X1
	0x038FA0D0 B.EQ 0x38FA0F0
	0x038FA0D4 SUBS X9, X9, 0x1
	0x038FA0D8 ADD X10, X10, 0x10
	0x038FA0DC B.NE 0x38FA0C8
	0x038FA0E0 MOV X0, X19
	0x038FA0E4 MOV W2, W31
	0x038FA0E8 BL 0x1C5C788
	0x038FA0EC B 0x38FA0FC
	0x038FA0F0 LDRSW X9, [X10]
	0x038FA0F4 ADD X8, X8, X9, 0x4, LSL
	0x038FA0F8 ADD X0, X8, 0x138
	0x038FA0FC LDP X8, X2, [X0]
	0x038FA100 MOV X0, X19
	0x038FA104 MOV W1, W21
	0x038FA108 BLR X8
	0x038FA10C FCMP S10, S14
	0x038FA110 FCSEL S14, S10, S14, MI
	0x038FA114 FCMP S10, S13
	0x038FA118 FCSEL S13, S10, S13, GT
	0x038FA11C FCMP S1, S12
	0x038FA120 FCSEL S12, S1, S12, MI
	0x038FA124 FCMP S1, S11

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move V8, V3
	013 Move V10, V1
	014 Move V11, V0
	015 Move V1, [X0+16]
	016 Move S3, [X0+32]
	017 Move S0, [X0+36]
	018 Move V9, V2
	019 Add S2, S1, S3
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Subtract S1, S1, S3
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V3, [X0+20]
	024 Add S4, S0, S3
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Subtract S3, S3, S0
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move V1, [X0+20]
	031 Add S2, S0, S1
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Subtract S0, S1, S0
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Call Bounds2D.get_corners, X0
	036 Compare X0, 0
	037 JumpIfEqual {124}
	038 Move W20, [X0+24]
	039 Move X19, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Compare W20, 0
	042 JumpIfEqual {123}
	043 Move S14, [X19+40]
	044 Move S15, [X19+44]
	045 Move S0, [X19+32]
	046 Move S1, [X19+36]
	047 Move V4, V11
	048 Move V5, V10
	049 Move V2, V14
	050 Move V3, V15
	051 Move V6, V9
	052 Move V7, V8
	053 Move [X31+72], S0
	054 Move [X31+80], S1
	055 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {91}
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move S12, [X19+56]
	062 Move S13, [X19+60]
	063 Move V0, V14
	064 Move V1, V15
	065 Move V4, V11
	066 Move V2, V12
	067 Move V3, V13
	068 Move V5, V10
	069 Move V6, V9
	070 Move V7, V8
	071 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {91}
	076 Move S14, [X19+48]
	077 Move S15, [X19+52]
	078 Move V0, V12
	079 Move V1, V13
	080 Move V4, V11
	081 Move V2, V14
	082 Move V3, V15
	083 Move V5, V10
	084 Move V6, V9
	085 Move V7, V8
	086 Call Math.GetLineSegmentIntersect, X0, X1, X2, X3
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {104}
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X30, [X31+64]
	094 Move D9, [X31+48]
	095 Move D8, [X31+56]
	096 Move D11, [X31+32]
	097 Move D10, [X31+40]
	098 Move D13, [X31+16]
	099 Move D12, [X31+24]
	100 Move W0, 1
	101 Move D15, [X31+96]
	102 Move D14, [X31+104]
	103 Return X0
	104 Move S2, [X31+72]
	105 Move S3, [X31+76]
	106 Move V4, V11
	107 Move V5, V10
	108 Move V6, V9
	109 Move V7, V8
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X30, [X31+64]
	113 Move D9, [X31+48]
	114 Move D8, [X31+56]
	115 Move D11, [X31+32]
	116 Move D10, [X31+40]
	117 Move D13, [X31+16]
	118 Move D12, [X31+24]
	119 Move V0, V14
	120 Move V1, V15
	121 Move D15, [X31+96]
	122 Move D14, [X31+104]
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Boolean Intersects(UnityEngine.ProBuilder.Bounds2D bounds)

Disassembly:
	0x038FA1A0 FADD S0, S13, S14
	0x038FA1A4 FADD S2, S11, S12
	0x038FA1A8 LDP X20, X19, [X31 + 0x60]
	0x038FA1AC LDP X22, X21, [X31 + 0x50]
	0x038FA1B0 LDP X24, X23, [X31 + 0x40]
	0x038FA1B4 LDR X30, [X31 + 0x38]
	0x038FA1B8 LDP D9, D8, [X31 + 0x28]
	0x038FA1BC LDP D11, D10, [X31 + 0x18]
	0x038FA1C0 LDP D13, D12, [X31 + 0x8]
	0x038FA1C4 FMOV S1, 0.5
	0x038FA1C8 FMUL S0, S0, S1
	0x038FA1CC FMUL S1, S2, S1
	0x038FA1D0 LDR V14, [X31], #0x70
	0x038FA1D4 RET
	0x038FA1D8 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {18}
	004 Move D0, [X0+16]
	005 Move D1, [X0+24]
	006 Move D3, [X1+16]
	007 Move D2, [X1+24]
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 Add V1, V1, V2
	010 Add V0, V0, V0
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 And V0, V0, V1
	014 Move W8, S0
	015 And W0, W8, 1
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20

Method: System.Boolean Intersects(UnityEngine.Rect rect)

Disassembly:
	0x038FA1DC BL 0x1C16F20
	0x038FA1E0 MOV X0, X19
	0x038FA1E4 BL 0x1C16F18
	0x038FA1E8 MOV X21, X0
	0x038FA1EC MOV V11.16B, V9.16B
	0x038FA1F0 MOV V12.16B, V9.16B
	0x038FA1F4 MOV V13.16B, V8.16B
	0x038FA1F8 MOV V14.16B, V8.16B
	0x038FA1FC B 0x38FA210
	0x038FA200 B 0x38FA20C
	0x038FA204 B 0x38FA20C
	0x038FA208 B 0x38FA20C
	0x038FA20C MOV X21, X0
	0x038FA210 CMP W1, 0x1
	0x038FA214 B.NE 0x38FA22C

ISIL:
	001 Move V2.S[1], V3.S[0]
	002 Move D4, [X0+16]
	003 Move D3, [X0+24]
	004 Move V0.S[1], V1.S[0]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 Add V0, V0, V1
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 Add V1, V2, V3
	010 Add V0, V0, V0
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 And V0, V0, V1
	014 Move W8, S0
	015 And W0, W8, 1
	016 Return X0

Method: System.Void SetWithPoints(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)

Disassembly:
	0x038F9350 B.EQ 0x38F9370
	0x038F9354 SUBS X9, X9, 0x1
	0x038F9358 ADD X10, X10, 0x10
	0x038F935C B.NE 0x38F9348
	0x038F9360 MOV X0, X19
	0x038F9364 MOV W2, W31
	0x038F9368 BL 0x1C5C788
	0x038F936C B 0x38F937C
	0x038F9370 LDRSW X9, [X10]
	0x038F9374 ADD X8, X8, X9, 0x4, LSL
	0x038F9378 ADD X0, X8, 0x138
	0x038F937C LDP X8, X2, [X0]
	0x038F9380 MOV X0, X19
	0x038F9384 MOV W1, W31
	0x038F9388 BLR X8
	0x038F938C CMP W20, 0x2
	0x038F9390 MOV V9.16B, V1.16B
	0x038F9394 B.LT 0x38F9490
	0x038F9398 MOVZ W21, 0x1
	0x038F939C MOV V12.16B, V8.16B
	0x038F93A0 MOV V11.16B, V9.16B
	0x038F93A4 LDR X8, [X19]
	0x038F93A8 LDR X1, [X22]
	0x038F93AC LDRH W9, [X8 + 0x12E]
	0x038F93B0 CBZ X9, 0x38F93D4
	0x038F93B4 LDR X10, [X8 + 0xB0]
	0x038F93B8 ADD X10, X10, 0x8
	0x038F93BC LDUR X11, [X10 - 0x8]
	0x038F93C0 CMP X11, X1
	0x038F93C4 B.EQ 0x38F93E4
	0x038F93C8 SUBS X9, X9, 0x1
	0x038F93CC ADD X10, X10, 0x10
	0x038F93D0 B.NE 0x38F93BC
	0x038F93D4 MOV X0, X19
	0x038F93D8 MOV W2, W31
	0x038F93DC BL 0x1C5C788
	0x038F93E0 B 0x38F93F0
	0x038F93E4 LDRSW X9, [X10]
	0x038F93E8 ADD X8, X8, X9, 0x4, LSL
	0x038F93EC ADD X0, X8, 0x138
	0x038F93F0 LDP X8, X2, [X0]
	0x038F93F4 MOV X0, X19
	0x038F93F8 MOV W1, W21
	0x038F93FC BLR X8
	0x038F9400 LDR X8, [X19]
	0x038F9404 LDR X1, [X22]
	0x038F9408 MOV V10.16B, V0.16B
	0x038F940C LDRH W9, [X8 + 0x12E]
	0x038F9410 CBZ X9, 0x38F9434
	0x038F9414 LDR X10, [X8 + 0xB0]
	0x038F9418 ADD X10, X10, 0x8
	0x038F941C LDUR X11, [X10 - 0x8]
	0x038F9420 CMP X11, X1
	0x038F9424 B.EQ 0x38F9444
	0x038F9428 SUBS X9, X9, 0x1
	0x038F942C ADD X10, X10, 0x10
	0x038F9430 B.NE 0x38F941C
	0x038F9434 MOV X0, X19
	0x038F9438 MOV W2, W31
	0x038F943C BL 0x1C5C788
	0x038F9440 B 0x38F9450
	0x038F9444 LDRSW X9, [X10]
	0x038F9448 ADD X8, X8, X9, 0x4, LSL
	0x038F944C ADD X0, X8, 0x138
	0x038F9450 LDP X8, X2, [X0]
	0x038F9454 MOV X0, X19
	0x038F9458 MOV W1, W21
	0x038F945C BLR X8
	0x038F9460 FCMP S10, S8
	0x038F9464 FCSEL S8, S10, S8, MI
	0x038F9468 FCMP S10, S12
	0x038F946C FCSEL S12, S10, S12, GT
	0x038F9470 FCMP S1, S9
	0x038F9474 ADD W21, W21, 0x1
	0x038F9478 FCSEL S9, S1, S9, MI
	0x038F947C FCMP S1, S11
	0x038F9480 FCSEL S11, S1, S11, GT
	0x038F9484 CMP W21, W20
	0x038F9488 B.NE 0x38F93A4
	0x038F948C B 0x38F9498
	0x038F9490 MOV V11.16B, V9.16B
	0x038F9494 MOV V12.16B, V8.16B
	0x038F9498 FADD S0, S12, S8
	0x038F949C FADD S2, S11, S9
	0x038F94A0 LDP X20, X19, [X31 + 0x40]
	0x038F94A4 LDP X22, X21, [X31 + 0x30]
	0x038F94A8 LDR X30, [X31 + 0x28]
	0x038F94AC LDP D9, D8, [X31 + 0x18]
	0x038F94B0 LDP D11, D10, [X31 + 0x8]
	0x038F94B4 FMOV S1, 0.5
	0x038F94B8 FMUL S0, S0, S1
	0x038F94BC FMUL S1, S2, S1
	0x038F94C0 LDR V12, [X31], #0x50
	0x038F94C4 RET
	0x038F94C8 BL 0x1C16F20
	0x038F94CC STR D12, [X31 - 0x70]!
	0x038F94D0 STP D11, D10, [X31 + 0x10]
	0x038F94D4 STP D9, D8, [X31 + 0x20]
	0x038F94D8 STP X30, X25, [X31 + 0x30]
	0x038F94DC STP X24, X23, [X31 + 0x40]
	0x038F94E0 STP X22, X21, [X31 + 0x50]
	0x038F94E4 STP X20, X19, [X31 + 0x60]
	0x038F94E8 ADRP X21, 0xAE8000
	0x038F94EC LDRB W8, [X21 + 0x765]
	0x038F94F0 MOV X19, X1
	0x038F94F4 MOV X20, X0
	0x038F94F8 TBNZ X8, 0x0, 0x38F9528
	0x038F94FC ADRP X0, 0x822000
	0x038F9500 LDR X0, [X0 + 0x7A0]
	0x038F9504 BL 0x1C16CF4
	0x038F9508 ADRP X0, 0x854000
	0x038F950C LDR X0, [X0 + 0xA98]
	0x038F9510 BL 0x1C16CF4
	0x038F9514 ADRP X0, 0x822000
	0x038F9518 LDR X0, [X0 + 0x7A8]
	0x038F951C BL 0x1C16CF4
	0x038F9520 MOVZ W8, 0x1
	0x038F9524 STRB W8, [X21 + 0x765]
	0x038F9528 CBZ X19, 0x38F9920
	0x038F952C ADRP X10, 0x822000
	0x038F9530 LDR X8, [X19]
	0x038F9534 LDR X10, [X10 + 0x7A0]
	0x038F9538 ADRP X24, 0x822000
	0x038F953C LDRH W9, [X8 + 0x12E]
	0x038F9540 LDR X1, [X10]
	0x038F9544 LDR X24, [X24 + 0x7A8]
	0x038F9548 CBZ X9, 0x38F956C
	0x038F954C LDR X10, [X8 + 0xB0]
	0x038F9550 ADD X10, X10, 0x8
	0x038F9554 LDUR X11, [X10 - 0x8]
	0x038F9558 CMP X11, X1
	0x038F955C B.EQ 0x38F957C
	0x038F9560 SUBS X9, X9, 0x1
	0x038F9564 ADD X10, X10, 0x10
	0x038F9568 B.NE 0x38F9554
	0x038F956C MOV X0, X19
	0x038F9570 MOV W2, W31
	0x038F9574 BL 0x1C5C788
	0x038F9578 B 0x38F9588
	0x038F957C LDRSW X9, [X10]
	0x038F9580 ADD X8, X8, X9, 0x4, LSL
	0x038F9584 ADD X0, X8, 0x138
	0x038F9588 LDP X8, X1, [X0]
	0x038F958C MOV X0, X19
	0x038F9590 BLR X8
	0x038F9594 LDR X8, [X19]
	0x038F9598 LDR X1, [X24]
	0x038F959C MOV W21, W0
	0x038F95A0 LDRH W9, [X8 + 0x12E]
	0x038F95A4 CBZ X9, 0x38F95C8
	0x038F95A8 LDR X10, [X8 + 0xB0]
	0x038F95AC ADD X10, X10, 0x8
	0x038F95B0 LDUR X11, [X10 - 0x8]
	0x038F95B4 CMP X11, X1
	0x038F95B8 B.EQ 0x38F95D8
	0x038F95BC SUBS X9, X9, 0x1
	0x038F95C0 ADD X10, X10, 0x10
	0x038F95C4 B.NE 0x38F95B0
	0x038F95C8 MOV X0, X19
	0x038F95CC MOV W2, W31
	0x038F95D0 BL 0x1C5C788
	0x038F95D4 B 0x38F95E4
	0x038F95D8 LDRSW X9, [X10]
	0x038F95DC ADD X8, X8, X9, 0x4, LSL
	0x038F95E0 ADD X0, X8, 0x138
	0x038F95E4 LDP X8, X2, [X0]
	0x038F95E8 MOV X0, X19
	0x038F95EC MOV W1, W31
	0x038F95F0 BLR X8
	0x038F95F4 CBZ X20, 0x38F9920
	0x038F95F8 ADRP X25, 0x854000
	0x038F95FC LDR X8, [X20]
	0x038F9600 LDR X25, [X25 + 0xA98]
	0x038F9604 MOV W22, W0
	0x038F9608 LDRH W9, [X8 + 0x12E]
	0x038F960C LDR X1, [X25]
	0x038F9610 CBZ X9, 0x38F9634
	0x038F9614 LDR X10, [X8 + 0xB0]
	0x038F9618 ADD X10, X10, 0x8
	0x038F961C LDUR X11, [X10 - 0x8]
	0x038F9620 CMP X11, X1
	0x038F9624 B.EQ 0x38F9644
	0x038F9628 SUBS X9, X9, 0x1
	0x038F962C ADD X10, X10, 0x10
	0x038F9630 B.NE 0x38F961C
	0x038F9634 MOV X0, X20
	0x038F9638 MOV W2, W31
	0x038F963C BL 0x1C5C788

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xAE9000
	013 Move W8, [X21+1890]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x855000
	021 Move X0, [X0+2704]
	022 Call 0x1C17CF4
	023 Move X0, 0x855000
	024 Move X0, [X0+2712]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1890], W8
	028 Compare X20, 0
	029 JumpIfEqual {195}
	030 Move X10, 0x855000
	031 Move X8, [X20]
	032 Move X10, [X10+2704]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X20
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X23, 0x855000
	055 Move X8, [X20]
	056 Move X23, [X23+2712]
	057 Move W21, W0
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X23]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X20
	069 Move W2, W31
	070 Call 0x1C5D788
	071 Move S11, W31
	072 Move S9, W31
	073 Move S12, W31
	074 Move S8, W31
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X20
	081 Move W1, W31
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, [X20]
	084 Move X1, [X23]
	085 Move V8, V0
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X20
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X20
	104 Move W1, W31
	105 NotImplemented "Instruction BLR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move V9, V1
	108 Move W22, 1
	109 Move V12, V8
	110 Move V11, V9
	111 Move X8, [X20]
	112 Move X1, [X23]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X20
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X2, [X0+8]
	130 Move X0, X20
	131 Move W1, W22
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X20]
	134 Move X1, [X23]
	135 Move V10, V0
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X20
	154 Move W1, W22
	155 NotImplemented "Instruction BLR not yet implemented."
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 NotImplemented "Instruction FCSEL not yet implemented."
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 NotImplemented "Instruction FCSEL not yet implemented."
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 Add W22, W22, 1
	162 NotImplemented "Instruction FCSEL not yet implemented."
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 NotImplemented "Instruction FCSEL not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move V11, V9
	167 Move V12, V8
	168 Add S0, S12, S8
	169 Move S1, 0.5
	170 Add S2, S11, S9
	171 Subtract S3, S12, S8
	172 Subtract S4, S11, S9
	173 Multiply S0, S0, S1
	174 Multiply S2, S2, S1
	175 Move [X19+24], S3
	176 Move [X19+32], S4
	177 Multiply S3, S3, S1
	178 Multiply S1, S4, S1
	179 Move [X19+16], S0
	180 Move [X19+24], S2
	181 Move [X19+32], S3
	182 Move [X19+40], S1
	183 Move X20, [X31+80]
	184 Move X19, [X31+88]
	185 Move X22, [X31+64]
	186 Move X21, [X31+72]
	187 Move X30, [X31+48]
	188 Move X23, [X31+56]
	189 Move D9, [X31+32]
	190 Move D8, [X31+40]
	191 Move D11, [X31+16]
	192 Move D10, [X31+24]
	193 Move V12, [X31+96]
	194 Return 
	195 Call 0x1C17F20

Method: System.Void SetWithPoints(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x038F96D0 CBZ X9, 0x38F96F4
	0x038F96D4 LDR X10, [X8 + 0xB0]
	0x038F96D8 ADD X10, X10, 0x8
	0x038F96DC LDUR X11, [X10 - 0x8]
	0x038F96E0 CMP X11, X1
	0x038F96E4 B.EQ 0x38F9704
	0x038F96E8 SUBS X9, X9, 0x1
	0x038F96EC ADD X10, X10, 0x10
	0x038F96F0 B.NE 0x38F96DC
	0x038F96F4 MOV X0, X20
	0x038F96F8 MOV W2, W31
	0x038F96FC BL 0x1C5C788
	0x038F9700 B 0x38F9710
	0x038F9704 LDRSW X9, [X10]
	0x038F9708 ADD X8, X8, X9, 0x4, LSL
	0x038F970C ADD X0, X8, 0x138
	0x038F9710 LDP X8, X2, [X0]
	0x038F9714 MOV X0, X20
	0x038F9718 MOV W1, W22
	0x038F971C BLR X8
	0x038F9720 CMP W21, 0x2
	0x038F9724 MOV V9.16B, V1.16B
	0x038F9728 B.LT 0x38F98E4
	0x038F972C MOVZ W22, 0x1
	0x038F9730 MOV V12.16B, V8.16B
	0x038F9734 MOV V11.16B, V9.16B
	0x038F9738 LDR X8, [X19]
	0x038F973C LDR X1, [X24]
	0x038F9740 LDRH W9, [X8 + 0x12E]
	0x038F9744 CBZ X9, 0x38F9768
	0x038F9748 LDR X10, [X8 + 0xB0]
	0x038F974C ADD X10, X10, 0x8
	0x038F9750 LDUR X11, [X10 - 0x8]
	0x038F9754 CMP X11, X1
	0x038F9758 B.EQ 0x38F9778
	0x038F975C SUBS X9, X9, 0x1
	0x038F9760 ADD X10, X10, 0x10
	0x038F9764 B.NE 0x38F9750
	0x038F9768 MOV X0, X19
	0x038F976C MOV W2, W31
	0x038F9770 BL 0x1C5C788
	0x038F9774 B 0x38F9784
	0x038F9778 LDRSW X9, [X10]
	0x038F977C ADD X8, X8, X9, 0x4, LSL
	0x038F9780 ADD X0, X8, 0x138
	0x038F9784 LDP X8, X2, [X0]
	0x038F9788 MOV X0, X19
	0x038F978C MOV W1, W22
	0x038F9790 BLR X8
	0x038F9794 LDR X8, [X20]
	0x038F9798 LDR X1, [X25]
	0x038F979C MOV W23, W0
	0x038F97A0 LDRH W9, [X8 + 0x12E]
	0x038F97A4 CBZ X9, 0x38F97C8
	0x038F97A8 LDR X10, [X8 + 0xB0]
	0x038F97AC ADD X10, X10, 0x8
	0x038F97B0 LDUR X11, [X10 - 0x8]
	0x038F97B4 CMP X11, X1
	0x038F97B8 B.EQ 0x38F97D8
	0x038F97BC SUBS X9, X9, 0x1
	0x038F97C0 ADD X10, X10, 0x10
	0x038F97C4 B.NE 0x38F97B0
	0x038F97C8 MOV X0, X20
	0x038F97CC MOV W2, W31
	0x038F97D0 BL 0x1C5C788
	0x038F97D4 B 0x38F97E4
	0x038F97D8 LDRSW X9, [X10]
	0x038F97DC ADD X8, X8, X9, 0x4, LSL
	0x038F97E0 ADD X0, X8, 0x138
	0x038F97E4 LDP X8, X2, [X0]
	0x038F97E8 MOV X0, X20
	0x038F97EC MOV W1, W23
	0x038F97F0 BLR X8
	0x038F97F4 LDR X8, [X19]
	0x038F97F8 LDR X1, [X24]
	0x038F97FC MOV V10.16B, V0.16B
	0x038F9800 LDRH W9, [X8 + 0x12E]
	0x038F9804 CBZ X9, 0x38F9828
	0x038F9808 LDR X10, [X8 + 0xB0]
	0x038F980C ADD X10, X10, 0x8
	0x038F9810 LDUR X11, [X10 - 0x8]
	0x038F9814 CMP X11, X1
	0x038F9818 B.EQ 0x38F9838
	0x038F981C SUBS X9, X9, 0x1
	0x038F9820 ADD X10, X10, 0x10
	0x038F9824 B.NE 0x38F9810
	0x038F9828 MOV X0, X19
	0x038F982C MOV W2, W31
	0x038F9830 BL 0x1C5C788
	0x038F9834 B 0x38F9844
	0x038F9838 LDRSW X9, [X10]
	0x038F983C ADD X8, X8, X9, 0x4, LSL
	0x038F9840 ADD X0, X8, 0x138
	0x038F9844 LDP X8, X2, [X0]
	0x038F9848 MOV X0, X19
	0x038F984C MOV W1, W22
	0x038F9850 BLR X8
	0x038F9854 LDR X8, [X20]
	0x038F9858 LDR X1, [X25]
	0x038F985C MOV W23, W0
	0x038F9860 LDRH W9, [X8 + 0x12E]
	0x038F9864 CBZ X9, 0x38F9888
	0x038F9868 LDR X10, [X8 + 0xB0]
	0x038F986C ADD X10, X10, 0x8
	0x038F9870 LDUR X11, [X10 - 0x8]
	0x038F9874 CMP X11, X1
	0x038F9878 B.EQ 0x38F9898
	0x038F987C SUBS X9, X9, 0x1
	0x038F9880 ADD X10, X10, 0x10
	0x038F9884 B.NE 0x38F9870
	0x038F9888 MOV X0, X20
	0x038F988C MOV W2, W31
	0x038F9890 BL 0x1C5C788
	0x038F9894 B 0x38F98A4
	0x038F9898 LDRSW X9, [X10]
	0x038F989C ADD X8, X8, X9, 0x4, LSL
	0x038F98A0 ADD X0, X8, 0x138
	0x038F98A4 LDP X8, X2, [X0]
	0x038F98A8 MOV X0, X20
	0x038F98AC MOV W1, W23
	0x038F98B0 BLR X8
	0x038F98B4 FCMP S10, S8
	0x038F98B8 FCSEL S8, S10, S8, MI
	0x038F98BC FCMP S10, S12
	0x038F98C0 FCSEL S12, S10, S12, GT
	0x038F98C4 FCMP S1, S9
	0x038F98C8 ADD W22, W22, 0x1
	0x038F98CC FCSEL S9, S1, S9, MI
	0x038F98D0 FCMP S1, S11
	0x038F98D4 FCSEL S11, S1, S11, GT
	0x038F98D8 CMP W22, W21
	0x038F98DC B.NE 0x38F9738
	0x038F98E0 B 0x38F98EC
	0x038F98E4 MOV V11.16B, V9.16B
	0x038F98E8 MOV V12.16B, V8.16B
	0x038F98EC FADD S0, S12, S8
	0x038F98F0 FADD S2, S11, S9
	0x038F98F4 LDP X20, X19, [X31 + 0x60]
	0x038F98F8 LDP X22, X21, [X31 + 0x50]
	0x038F98FC LDP X24, X23, [X31 + 0x40]
	0x038F9900 LDP X30, X25, [X31 + 0x30]
	0x038F9904 LDP D9, D8, [X31 + 0x20]
	0x038F9908 LDP D11, D10, [X31 + 0x10]
	0x038F990C FMOV S1, 0.5
	0x038F9910 FMUL S0, S0, S1
	0x038F9914 FMUL S1, S2, S1
	0x038F9918 LDR V12, [X31], #0x70
	0x038F991C RET
	0x038F9920 BL 0x1C16F20
	0x038F9924 STR D12, [X31 - 0x70]!
	0x038F9928 STP D11, D10, [X31 + 0x10]
	0x038F992C STP D9, D8, [X31 + 0x20]
	0x038F9930 STP X30, X25, [X31 + 0x30]
	0x038F9934 STP X24, X23, [X31 + 0x40]
	0x038F9938 STP X22, X21, [X31 + 0x50]
	0x038F993C STP X20, X19, [X31 + 0x60]
	0x038F9940 ADRP X21, 0xAE8000
	0x038F9944 LDRB W8, [X21 + 0x766]
	0x038F9948 MOV X19, X1
	0x038F994C MOV X20, X0
	0x038F9950 TBNZ X8, 0x0, 0x38F9980
	0x038F9954 ADRP X0, 0x822000
	0x038F9958 LDR X0, [X0 + 0x7A0]
	0x038F995C BL 0x1C16CF4
	0x038F9960 ADRP X0, 0x854000
	0x038F9964 LDR X0, [X0 + 0xA98]
	0x038F9968 BL 0x1C16CF4
	0x038F996C ADRP X0, 0x822000
	0x038F9970 LDR X0, [X0 + 0x7A8]
	0x038F9974 BL 0x1C16CF4
	0x038F9978 MOVZ W8, 0x1
	0x038F997C STRB W8, [X21 + 0x766]
	0x038F9980 CBZ X19, 0x38F9D6C
	0x038F9984 ADRP X10, 0x822000
	0x038F9988 LDR X8, [X19]
	0x038F998C LDR X10, [X10 + 0x7A0]
	0x038F9990 ADRP X24, 0x822000
	0x038F9994 LDRH W9, [X8 + 0x12E]
	0x038F9998 LDR X1, [X10]
	0x038F999C LDR X24, [X24 + 0x7A8]
	0x038F99A0 CBZ X9, 0x38F99C4
	0x038F99A4 LDR X10, [X8 + 0xB0]
	0x038F99A8 ADD X10, X10, 0x8
	0x038F99AC LDUR X11, [X10 - 0x8]
	0x038F99B0 CMP X11, X1
	0x038F99B4 B.EQ 0x38F99D4
	0x038F99B8 SUBS X9, X9, 0x1
	0x038F99BC ADD X10, X10, 0x10
	0x038F99C0 B.NE 0x38F99AC
	0x038F99C4 MOV X0, X19
	0x038F99C8 MOV W2, W31
	0x038F99CC BL 0x1C5C788
	0x038F99D0 B 0x38F99E0
	0x038F99D4 LDRSW X9, [X10]
	0x038F99D8 ADD X8, X8, X9, 0x4, LSL
	0x038F99DC ADD X0, X8, 0x138
	0x038F99E0 LDP X8, X1, [X0]
	0x038F99E4 MOV X0, X19
	0x038F99E8 BLR X8
	0x038F99EC LDR X8, [X19]
	0x038F99F0 LDR X1, [X24]
	0x038F99F4 MOV W21, W0
	0x038F99F8 LDRH W9, [X8 + 0x12E]
	0x038F99FC CBZ X9, 0x38F9A20
	0x038F9A00 LDR X10, [X8 + 0xB0]
	0x038F9A04 ADD X10, X10, 0x8
	0x038F9A08 LDUR X11, [X10 - 0x8]
	0x038F9A0C CMP X11, X1
	0x038F9A10 B.EQ 0x38F9A30
	0x038F9A14 SUBS X9, X9, 0x1
	0x038F9A18 ADD X10, X10, 0x10
	0x038F9A1C B.NE 0x38F9A08
	0x038F9A20 MOV X0, X19
	0x038F9A24 MOV W2, W31
	0x038F9A28 BL 0x1C5C788
	0x038F9A2C B 0x38F9A3C
	0x038F9A30 LDRSW X9, [X10]
	0x038F9A34 ADD X8, X8, X9, 0x4, LSL
	0x038F9A38 ADD X0, X8, 0x138
	0x038F9A3C LDP X8, X2, [X0]
	0x038F9A40 MOV X0, X19
	0x038F9A44 MOV W1, W31
	0x038F9A48 BLR X8
	0x038F9A4C CBZ X20, 0x38F9D6C
	0x038F9A50 ADRP X25, 0x854000
	0x038F9A54 LDR X8, [X20]
	0x038F9A58 LDR X25, [X25 + 0xA98]
	0x038F9A5C MOV W22, W0
	0x038F9A60 LDRH W9, [X8 + 0x12E]
	0x038F9A64 LDR X1, [X25]
	0x038F9A68 CBZ X9, 0x38F9A8C
	0x038F9A6C LDR X10, [X8 + 0xB0]
	0x038F9A70 ADD X10, X10, 0x8
	0x038F9A74 LDUR X11, [X10 - 0x8]
	0x038F9A78 CMP X11, X1
	0x038F9A7C B.EQ 0x38F9A9C
	0x038F9A80 SUBS X9, X9, 0x1
	0x038F9A84 ADD X10, X10, 0x10
	0x038F9A88 B.NE 0x38F9A74
	0x038F9A8C MOV X0, X20
	0x038F9A90 MOV W2, W31
	0x038F9A94 BL 0x1C5C788
	0x038F9A98 B 0x38F9AA8
	0x038F9A9C LDRSW X9, [X10]
	0x038F9AA0 ADD X8, X8, X9, 0x4, LSL
	0x038F9AA4 ADD X0, X8, 0x138
	0x038F9AA8 LDP X8, X2, [X0]
	0x038F9AAC MOV X0, X20
	0x038F9AB0 MOV W1, W22
	0x038F9AB4 BLR X8
	0x038F9AB8 LDR X8, [X19]
	0x038F9ABC LDR X1, [X24]
	0x038F9AC0 MOV V8.16B, V0.16B
	0x038F9AC4 LDRH W9, [X8 + 0x12E]
	0x038F9AC8 CBZ X9, 0x38F9AEC
	0x038F9ACC LDR X10, [X8 + 0xB0]
	0x038F9AD0 ADD X10, X10, 0x8
	0x038F9AD4 LDUR X11, [X10 - 0x8]
	0x038F9AD8 CMP X11, X1
	0x038F9ADC B.EQ 0x38F9AFC
	0x038F9AE0 SUBS X9, X9, 0x1
	0x038F9AE4 ADD X10, X10, 0x10
	0x038F9AE8 B.NE 0x38F9AD4
	0x038F9AEC MOV X0, X19
	0x038F9AF0 MOV W2, W31
	0x038F9AF4 BL 0x1C5C788
	0x038F9AF8 B 0x38F9B08
	0x038F9AFC LDRSW X9, [X10]
	0x038F9B00 ADD X8, X8, X9, 0x4, LSL
	0x038F9B04 ADD X0, X8, 0x138
	0x038F9B08 LDP X8, X2, [X0]
	0x038F9B0C MOV X0, X19
	0x038F9B10 MOV W1, W31
	0x038F9B14 BLR X8
	0x038F9B18 LDR X8, [X20]
	0x038F9B1C LDR X1, [X25]
	0x038F9B20 MOV W22, W0
	0x038F9B24 LDRH W9, [X8 + 0x12E]
	0x038F9B28 CBZ X9, 0x38F9B4C
	0x038F9B2C LDR X10, [X8 + 0xB0]
	0x038F9B30 ADD X10, X10, 0x8
	0x038F9B34 LDUR X11, [X10 - 0x8]
	0x038F9B38 CMP X11, X1
	0x038F9B3C B.EQ 0x38F9B5C
	0x038F9B40 SUBS X9, X9, 0x1
	0x038F9B44 ADD X10, X10, 0x10
	0x038F9B48 B.NE 0x38F9B34
	0x038F9B4C MOV X0, X20
	0x038F9B50 MOV W2, W31
	0x038F9B54 BL 0x1C5C788
	0x038F9B58 B 0x38F9B68
	0x038F9B5C LDRSW X9, [X10]
	0x038F9B60 ADD X8, X8, X9, 0x4, LSL
	0x038F9B64 ADD X0, X8, 0x138
	0x038F9B68 LDP X8, X2, [X0]
	0x038F9B6C MOV X0, X20
	0x038F9B70 MOV W1, W22
	0x038F9B74 BLR X8
	0x038F9B78 CMP W21, 0x2
	0x038F9B7C MOV V9.16B, V1.16B
	0x038F9B80 B.LT 0x38F9D3C
	0x038F9B84 MOVZ W22, 0x1
	0x038F9B88 MOV V12.16B, V8.16B
	0x038F9B8C MOV V11.16B, V9.16B
	0x038F9B90 LDR X8, [X19]
	0x038F9B94 LDR X1, [X24]
	0x038F9B98 LDRH W9, [X8 + 0x12E]
	0x038F9B9C CBZ X9, 0x38F9BC0
	0x038F9BA0 LDR X10, [X8 + 0xB0]
	0x038F9BA4 ADD X10, X10, 0x8
	0x038F9BA8 LDUR X11, [X10 - 0x8]
	0x038F9BAC CMP X11, X1
	0x038F9BB0 B.EQ 0x38F9BD0
	0x038F9BB4 SUBS X9, X9, 0x1
	0x038F9BB8 ADD X10, X10, 0x10
	0x038F9BBC B.NE 0x38F9BA8
	0x038F9BC0 MOV X0, X19
	0x038F9BC4 MOV W2, W31
	0x038F9BC8 BL 0x1C5C788
	0x038F9BCC B 0x38F9BDC
	0x038F9BD0 LDRSW X9, [X10]
	0x038F9BD4 ADD X8, X8, X9, 0x4, LSL
	0x038F9BD8 ADD X0, X8, 0x138
	0x038F9BDC LDP X8, X2, [X0]
	0x038F9BE0 MOV X0, X19
	0x038F9BE4 MOV W1, W22
	0x038F9BE8 BLR X8
	0x038F9BEC LDR X8, [X20]
	0x038F9BF0 LDR X1, [X25]
	0x038F9BF4 MOV W23, W0
	0x038F9BF8 LDRH W9, [X8 + 0x12E]
	0x038F9BFC CBZ X9, 0x38F9C20
	0x038F9C00 LDR X10, [X8 + 0xB0]
	0x038F9C04 ADD X10, X10, 0x8
	0x038F9C08 LDUR X11, [X10 - 0x8]
	0x038F9C0C CMP X11, X1
	0x038F9C10 B.EQ 0x38F9C30
	0x038F9C14 SUBS X9, X9, 0x1
	0x038F9C18 ADD X10, X10, 0x10
	0x038F9C1C B.NE 0x38F9C08
	0x038F9C20 MOV X0, X20
	0x038F9C24 MOV W2, W31
	0x038F9C28 BL 0x1C5C788
	0x038F9C2C B 0x38F9C3C

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, 0xAE9000
	016 Move W8, [X22+1891]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x855000
	025 Move X0, [X0+2704]
	026 Call 0x1C17CF4
	027 Move X0, 0x823000
	028 Move X0, [X0+1952]
	029 Call 0x1C17CF4
	030 Move X0, 0x855000
	031 Move X0, [X0+2712]
	032 Call 0x1C17CF4
	033 Move X0, 0x823000
	034 Move X0, [X0+1960]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1891], W8
	038 Compare X21, 0
	039 JumpIfEqual {348}
	040 Move X10, 0x855000
	041 Move X8, [X21]
	042 Move X10, [X10+2704]
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Move X1, [X10]
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X21
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move S9, W31
	065 Compare X20, 0
	066 JumpIfEqual {348}
	067 Move X24, 0x823000
	068 Move X8, [X20]
	069 Move X24, [X24+1952]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X24]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X20
	081 Move W2, W31
	082 Call 0x1C5D788
	083 Move S11, W31
	084 Move S8, W31
	085 Move S12, W31
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add X8, X8, X9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X0, X20
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move S11, W31
	095 Move S8, W31
	096 Move S12, W31
	097 Move X25, 0x823000
	098 Move X8, [X20]
	099 Move X25, [X25+1960]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X1, [X25]
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X2, [X0+8]
	118 Move X0, X20
	119 Move W1, W31
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X26, 0x855000
	122 Move X8, [X21]
	123 Move X26, [X26+2712]
	124 Move W22, W0
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X26]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X21
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X2, [X0+8]
	143 Move X0, X21
	144 Move W1, W22
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X20]
	147 Move X1, [X25]
	148 Move V8, V0
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X20
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X2, [X0+8]
	166 Move X0, X20
	167 Move W1, W31
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, [X21]
	170 Move X1, [X26]
	171 Move W22, W0
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Compare X9, 0
	174 JumpIfEqual {181}
	175 Move X10, [X8+176]
	176 Add X10, X10, 8
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Subtract X9, X9, 1
	180 Add X10, X10, 16
	181 Move X0, X21
	182 Move W2, W31
	183 Call 0x1C5D788
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 Add X8, X8, X9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X2, [X0+8]
	189 Move X0, X21
	190 Move W1, W22
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move V9, V1
	193 Move W22, 1
	194 Move V11, V1
	195 Move V12, V8
	196 Move X8, [X20]
	197 Move X1, [X24]
	198 NotImplemented "Instruction LDRH not yet implemented."
	199 Compare X9, 0
	200 JumpIfEqual {207}
	201 Move X10, [X8+176]
	202 Add X10, X10, 8
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract X9, X9, 1
	206 Add X10, X10, 16
	207 Move X0, X20
	208 Move W2, W31
	209 Call 0x1C5D788
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Add X8, X8, X9
	212 Add X0, X8, 312
	213 Move X8, [X0]
	214 Move X1, [X0+8]
	215 Move X0, X20
	216 NotImplemented "Instruction BLR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, [X20]
	219 Move X1, [X25]
	220 NotImplemented "Instruction LDRH not yet implemented."
	221 Compare X9, 0
	222 JumpIfEqual {229}
	223 Move X10, [X8+176]
	224 Add X10, X10, 8
	225 NotImplemented "Instruction LDUR not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Subtract X9, X9, 1
	228 Add X10, X10, 16
	229 Move X0, X20
	230 Move W2, W31
	231 Call 0x1C5D788
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Add X8, X8, X9
	234 Add X0, X8, 312
	235 Move X8, [X0]
	236 Move X2, [X0+8]
	237 Move X0, X20
	238 Move W1, W22
	239 NotImplemented "Instruction BLR not yet implemented."
	240 Move X8, [X21]
	241 Move X1, [X26]
	242 Move W23, W0
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Compare X9, 0
	245 JumpIfEqual {252}
	246 Move X10, [X8+176]
	247 Add X10, X10, 8
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X9, X9, 1
	251 Add X10, X10, 16
	252 Move X0, X21
	253 Move W2, W31
	254 Call 0x1C5D788
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Add X8, X8, X9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X2, [X0+8]
	260 Move X0, X21
	261 Move W1, W23
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X8, [X20]
	264 Move X1, [X25]
	265 Move V10, V0
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X20
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X2, [X0+8]
	283 Move X0, X20
	284 Move W1, W22
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move X8, [X21]
	287 Move X1, [X26]
	288 Move W23, W0
	289 NotImplemented "Instruction LDRH not yet implemented."
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X21
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X2, [X0+8]
	306 Move X0, X21
	307 Move W1, W23
	308 NotImplemented "Instruction BLR not yet implemented."
	309 NotImplemented "Instruction FCMP not yet implemented."
	310 NotImplemented "Instruction FCSEL not yet implemented."
	311 NotImplemented "Instruction FCMP not yet implemented."
	312 NotImplemented "Instruction FCSEL not yet implemented."
	313 NotImplemented "Instruction FCMP not yet implemented."
	314 NotImplemented "Instruction FCSEL not yet implemented."
	315 NotImplemented "Instruction FCMP not yet implemented."
	316 NotImplemented "Instruction FCSEL not yet implemented."
	317 Add W22, W22, 1
	318 Add S0, S8, S12
	319 Move S1, 0.5
	320 Add S2, S9, S11
	321 Subtract S3, S8, S12
	322 Subtract S4, S9, S11
	323 Multiply S0, S0, S1
	324 Multiply S2, S2, S1
	325 Move [X19+24], S3
	326 Move [X19+32], S4
	327 Multiply S3, S3, S1
	328 Multiply S1, S4, S1
	329 Move [X19+16], S0
	330 Move [X19+24], S2
	331 Move [X19+32], S3
	332 Move [X19+40], S1
	333 Move X20, [X31+96]
	334 Move X19, [X31+104]
	335 Move X22, [X31+80]
	336 Move X21, [X31+88]
	337 Move X24, [X31+64]
	338 Move X23, [X31+72]
	339 Move X26, [X31+48]
	340 Move X25, [X31+56]
	341 Move X30, [X31+40]
	342 Move D9, [X31+24]
	343 Move D8, [X31+32]
	344 Move D11, [X31+8]
	345 Move D10, [X31+16]
	346 Move V12, [X31+112]
	347 Return 
	348 Call 0x1C17F20

Method: UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector2> points)

Disassembly:
	0x038FA218 MOV X0, X21
	0x038FA21C BL 0x3EB1AD0
	0x038FA220 LDR X19, [X0]
	0x038FA224 BL 0x3EB1AE0
	0x038FA228 B 0x38FA138
	0x038FA22C MOV X19, X31
	0x038FA230 B 0x38FA238
	0x038FA234 MOV X21, X0
	0x038FA238 CBZ X20, 0x38FA29C
	0x038FA23C ADRP X10, 0x7F9000
	0x038FA240 LDR X8, [X20]
	0x038FA244 LDR X10, [X10 + 0xE00]
	0x038FA248 LDRH W9, [X8 + 0x12E]
	0x038FA24C LDR X1, [X10]
	0x038FA250 CBZ X9, 0x38FA274
	0x038FA254 LDR X10, [X8 + 0xB0]
	0x038FA258 ADD X10, X10, 0x8
	0x038FA25C LDUR X11, [X10 - 0x8]
	0x038FA260 CMP X11, X1
	0x038FA264 B.EQ 0x38FA284
	0x038FA268 SUBS X9, X9, 0x1
	0x038FA26C ADD X10, X10, 0x10
	0x038FA270 B.NE 0x38FA25C
	0x038FA274 MOV X0, X20
	0x038FA278 MOV W2, W31
	0x038FA27C BL 0x1C5C788
	0x038FA280 B 0x38FA290
	0x038FA284 LDRSW X9, [X10]
	0x038FA288 ADD X8, X8, X9, 0x4, LSL
	0x038FA28C ADD X0, X8, 0x138
	0x038FA290 LDP X8, X1, [X0]
	0x038FA294 MOV X0, X20
	0x038FA298 BLR X8
	0x038FA29C CBNZ X19, 0x38FA2A8
	0x038FA2A0 MOV X0, X21
	0x038FA2A4 BL 0x1D2C690
	0x038FA2A8 MOV X0, X19
	0x038FA2AC BL 0x1C16F18
	0x038FA2B0 BL 0x1990590
	0x038FA2B4 SUB X31, X31, 0x30
	0x038FA2B8 STP X30, X21, [X31 + 0x10]
	0x038FA2BC STP X20, X19, [X31 + 0x20]
	0x038FA2C0 ADRP X20, 0xAE7000
	0x038FA2C4 ADRP X21, 0x7F9000
	0x038FA2C8 LDRB W8, [X20 + 0x768]
	0x038FA2CC LDR X21, [X21 + 0xAC8]
	0x038FA2D0 MOV X19, X0
	0x038FA2D4 TBNZ X8, 0x0, 0x38FA310
	0x038FA2D8 ADRP X0, 0x7F9000
	0x038FA2DC LDR X0, [X0 + 0xAC8]
	0x038FA2E0 BL 0x1C16CF4
	0x038FA2E4 ADRP X0, 0x853000
	0x038FA2E8 LDR X0, [X0 + 0xAB8]
	0x038FA2EC BL 0x1C16CF4
	0x038FA2F0 ADRP X0, 0x853000
	0x038FA2F4 LDR X0, [X0 + 0xAC0]
	0x038FA2F8 BL 0x1C16CF4
	0x038FA2FC ADRP X0, 0x7F9000
	0x038FA300 LDR X0, [X0 + 0x848]
	0x038FA304 BL 0x1C16CF4
	0x038FA308 MOVZ W8, 0x1
	0x038FA30C STRB W8, [X20 + 0x768]
	0x038FA310 LDR X0, [X21]
	0x038FA314 MOVZ W1, 0x5
	0x038FA318 BL 0x1C16D6C
	0x038FA31C CBZ X0, 0x38FA3E4
	0x038FA320 LDR W8, [X0 + 0x18]
	0x038FA324 MOV X20, X0
	0x038FA328 CBZ W8, 0x38FA3E0
	0x038FA32C ADRP X8, 0x853000
	0x038FA330 LDR X8, [X8 + 0xAB8]
	0x038FA334 ADD X0, X31, 0x8
	0x038FA338 MOV X1, X31
	0x038FA33C MOV X2, X31
	0x038FA340 LDR X8, [X8]
	0x038FA344 MOV X3, X31
	0x038FA348 STR X8, [X20 + 0x20]
	0x038FA34C LDR X8, [X19 + 0x10]
	0x038FA350 STR X8, [X31 + 0x8]
	0x038FA354 BL 0x25F34C4
	0x038FA358 LDR W8, [X20 + 0x18]
	0x038FA35C CMP W8, 0x1
	0x038FA360 B.LS 0x38FA3E0
	0x038FA364 CMP W8, 0x2
	0x038FA368 STR X0, [X20 + 0x28]
	0x038FA36C B.EQ 0x38FA3E0
	0x038FA370 ADRP X8, 0x853000
	0x038FA374 LDR X8, [X8 + 0xAC0]
	0x038FA378 ADD X0, X31, 0x8
	0x038FA37C MOV X1, X31
	0x038FA380 MOV X2, X31
	0x038FA384 LDR X8, [X8]
	0x038FA388 MOV X3, X31
	0x038FA38C STR X8, [X20 + 0x30]
	0x038FA390 LDR V0, [X19 + 0x18]
	0x038FA394 STR D0, [X31 + 0x8]
	0x038FA398 BL 0x25F34C4
	0x038FA39C LDR W8, [X20 + 0x18]
	0x038FA3A0 CMP W8, 0x3
	0x038FA3A4 B.LS 0x38FA3E0
	0x038FA3A8 CMP W8, 0x4
	0x038FA3AC STR X0, [X20 + 0x38]
	0x038FA3B0 B.EQ 0x38FA3E0
	0x038FA3B4 ADRP X8, 0x7F9000
	0x038FA3B8 LDR X8, [X8 + 0x848]
	0x038FA3BC MOV X0, X20
	0x038FA3C0 MOV X1, X31
	0x038FA3C4 LDR X8, [X8]
	0x038FA3C8 STR X8, [X20 + 0x40]
	0x038FA3CC BL 0x32278CC
	0x038FA3D0 LDP X20, X19, [X31 + 0x20]
	0x038FA3D4 LDP X30, X21, [X31 + 0x10]
	0x038FA3D8 ADD X31, X31, 0x30
	0x038FA3DC RET
	0x038FA3E0 BL 0x1C16F28
	0x038FA3E4 BL 0x1C16F20
	0x038FA3E8 STP X30, X23, [X31 - 0x30]!
	0x038FA3EC STP X22, X21, [X31 + 0x10]
	0x038FA3F0 STP X20, X19, [X31 + 0x20]
	0x038FA3F4 ADRP X19, 0xAE7000
	0x038FA3F8 ADRP X21, 0x853000
	0x038FA3FC LDRB W8, [X19 + 0x769]
	0x038FA400 LDR X21, [X21 + 0xAC8]
	0x038FA404 TBNZ X8, 0x0, 0x38FA4DC
	0x038FA408 ADRP X0, 0x853000
	0x038FA40C LDR X0, [X0 + 0xAC8]
	0x038FA410 BL 0x1C16CF4
	0x038FA414 ADRP X0, 0x853000
	0x038FA418 LDR X0, [X0 + 0xAD0]
	0x038FA41C BL 0x1C16CF4
	0x038FA420 ADRP X0, 0x822000
	0x038FA424 LDR X0, [X0 + 0x278]
	0x038FA428 BL 0x1C16CF4
	0x038FA42C ADRP X0, 0x7FD000
	0x038FA430 LDR X0, [X0 + 0xCA0]
	0x038FA434 BL 0x1C16CF4
	0x038FA438 ADRP X0, 0x7F9000
	0x038FA43C LDR X0, [X0 + 0x598]
	0x038FA440 BL 0x1C16CF4
	0x038FA444 ADRP X0, 0x853000
	0x038FA448 LDR X0, [X0 + 0xAD8]
	0x038FA44C BL 0x1C16CF4
	0x038FA450 ADRP X0, 0x823000
	0x038FA454 LDR X0, [X0 + 0x250]
	0x038FA458 BL 0x1C16CF4
	0x038FA45C ADRP X0, 0x7F9000
	0x038FA460 LDR X0, [X0 + 0x6C0]
	0x038FA464 BL 0x1C16CF4
	0x038FA468 ADRP X0, 0x853000
	0x038FA46C LDR X0, [X0 + 0xAE0]
	0x038FA470 BL 0x1C16CF4
	0x038FA474 ADRP X0, 0x853000
	0x038FA478 LDR X0, [X0 + 0xAE8]
	0x038FA47C BL 0x1C16CF4
	0x038FA480 ADRP X0, 0x853000
	0x038FA484 LDR X0, [X0 + 0xAF0]
	0x038FA488 BL 0x1C16CF4
	0x038FA48C ADRP X0, 0x853000
	0x038FA490 LDR X0, [X0 + 0xAF8]
	0x038FA494 BL 0x1C16CF4
	0x038FA498 ADRP X0, 0x821000
	0x038FA49C LDR X0, [X0 + 0x2E0]
	0x038FA4A0 BL 0x1C16CF4
	0x038FA4A4 ADRP X0, 0x853000
	0x038FA4A8 LDR X0, [X0 + 0xB00]
	0x038FA4AC BL 0x1C16CF4
	0x038FA4B0 ADRP X0, 0x853000
	0x038FA4B4 LDR X0, [X0 + 0xB08]
	0x038FA4B8 BL 0x1C16CF4
	0x038FA4BC ADRP X0, 0x853000
	0x038FA4C0 LDR X0, [X0 + 0xB10]
	0x038FA4C4 BL 0x1C16CF4
	0x038FA4C8 ADRP X0, 0x853000

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xAE8000
	012 Move W8, [X20+1892]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x854000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x854000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1892], W8
	026 Compare X19, 0
	027 JumpIfEqual {177}
	028 Move X10, 0x854000
	029 Move X8, [X19]
	030 Move X10, [X10+2704]
	031 Move X22, 0x854000
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Move X22, [X22+2712]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X19
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X19]
	054 Move X1, [X22]
	055 Move W20, W0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Compare X9, 0
	058 JumpIfEqual {65}
	059 Move X10, [X8+176]
	060 Add X10, X10, 8
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Subtract X9, X9, 1
	064 Add X10, X10, 16
	065 Move X0, X19
	066 Move W2, W31
	067 Call 0x1C5D788
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Add X8, X8, X9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X2, [X0+8]
	073 Move X0, X19
	074 Move W1, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X19]
	077 Move X1, [X22]
	078 Move V8, V0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X2, [X0+8]
	096 Move X0, X19
	097 Move W1, W31
	098 NotImplemented "Instruction BLR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move V9, V1
	101 Move W21, 1
	102 Move V12, V8
	103 Move V11, V9
	104 Move X8, [X19]
	105 Move X1, [X22]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X2, [X0+8]
	123 Move X0, X19
	124 Move W1, W21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X8, [X19]
	127 Move X1, [X22]
	128 Move V10, V0
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X19
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X2, [X0+8]
	146 Move X0, X19
	147 Move W1, W21
	148 NotImplemented "Instruction BLR not yet implemented."
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 NotImplemented "Instruction FCSEL not yet implemented."
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Add W21, W21, 1
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 NotImplemented "Instruction FCSEL not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move V11, V9
	160 Move V12, V8
	161 Add S0, S12, S8
	162 Add S2, S11, S9
	163 Move X20, [X31+64]
	164 Move X19, [X31+72]
	165 Move X22, [X31+48]
	166 Move X21, [X31+56]
	167 Move X30, [X31+40]
	168 Move D9, [X31+24]
	169 Move D8, [X31+32]
	170 Move D11, [X31+8]
	171 Move D10, [X31+16]
	172 Move S1, 0.5
	173 Multiply S0, S0, S1
	174 Multiply S1, S2, S1
	175 Move V12, [X31+80]
	176 Return X0
	177 Call 0x1C17F20

Method: UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x038FA4CC LDR X0, [X0 + 0xB18]
	0x038FA4D0 BL 0x1C16CF4
	0x038FA4D4 MOVZ W8, 0x1
	0x038FA4D8 STRB W8, [X19 + 0x769]
	0x038FA4DC LDR X0, [X21]
	0x038FA4E0 LDR W8, [X0 + 0xE0]
	0x038FA4E4 CBNZ W8, 0x38FA4F0
	0x038FA4E8 BL 0x1C16DFC
	0x038FA4EC LDR X0, [X21]
	0x038FA4F0 LDR X8, [X0 + 0xB8]
	0x038FA4F4 LDRB W9, [X8]
	0x038FA4F8 CBNZ W9, 0x38FAA7C
	0x038FA4FC LDR W9, [X0 + 0xE0]
	0x038FA500 CBNZ W9, 0x38FA510
	0x038FA504 BL 0x1C16DFC
	0x038FA508 LDR X8, [X21]
	0x038FA50C LDR X8, [X8 + 0xB8]
	0x038FA510 MOVZ W9, 0x1
	0x038FA514 STRB W9, [X8]
	0x038FA518 ADRP X8, 0x853000
	0x038FA51C LDR X8, [X8 + 0xAE0]
	0x038FA520 MOV X1, X31
	0x038FA524 LDR X0, [X8]
	0x038FA528 BL 0x3C13E40
	0x038FA52C ADRP X22, 0x7F9000
	0x038FA530 LDR X22, [X22 + 0x598]
	0x038FA534 MOV X19, X0
	0x038FA538 LDR X8, [X22]
	0x038FA53C LDR W9, [X8 + 0xE0]
	0x038FA540 CBNZ W9, 0x38FA54C
	0x038FA544 MOV X0, X8
	0x038FA548 BL 0x1C16DFC
	0x038FA54C MOV X0, X19
	0x038FA550 MOV X1, X31
	0x038FA554 MOV X2, X31
	0x038FA558 BL 0x3C354F8
	0x038FA55C TBZ X0, 0x0, 0x38FA578
	0x038FA560 CBZ X19, 0x38FAA8C
	0x038FA564 MOV X0, X19
	0x038FA568 MOV X1, X31
	0x038FA56C BL 0x3C13EAC
	0x038FA570 MOV W19, W0
	0x038FA574 B 0x38FA57C
	0x038FA578 MOV W19, W31
	0x038FA57C LDR X0, [X21]
	0x038FA580 LDR W8, [X0 + 0xE0]
	0x038FA584 CBNZ W8, 0x38FA590
	0x038FA588 BL 0x1C16DFC
	0x038FA58C LDR X0, [X21]
	0x038FA590 LDR X8, [X0 + 0xB8]
	0x038FA594 AND W9, W19, 0x1
	0x038FA598 STRB W9, [X8 + 0x20]
	0x038FA59C BL 0x38FAA98
	0x038FA5A0 LDR X8, [X21]
	0x038FA5A4 MOV X1, X31
	0x038FA5A8 LDR X8, [X8 + 0xB8]
	0x038FA5AC STR X0, [X8 + 0x28]
	0x038FA5B0 ADRP X8, 0x853000
	0x038FA5B4 LDR X8, [X8 + 0xAF0]
	0x038FA5B8 LDR X0, [X8]
	0x038FA5BC BL 0x3C13E40
	0x038FA5C0 LDR X8, [X21]
	0x038FA5C4 ADRP X23, 0x853000
	0x038FA5C8 LDR X8, [X8 + 0xB8]
	0x038FA5CC STR X0, [X8 + 0x18]
	0x038FA5D0 LDR X0, [X8 + 0x68]
	0x038FA5D4 LDR X23, [X23 + 0xAD8]
	0x038FA5D8 LDR X1, [X23]
	0x038FA5DC BL 0x2241FB8
	0x038FA5E0 LDR X8, [X21]
	0x038FA5E4 MOV X19, X0
	0x038FA5E8 LDR X8, [X8 + 0xB8]
	0x038FA5EC STR X0, [X8 + 0x30]
	0x038FA5F0 LDR X0, [X22]
	0x038FA5F4 LDR W8, [X0 + 0xE0]
	0x038FA5F8 CBNZ W8, 0x38FA600
	0x038FA5FC BL 0x1C16DFC
	0x038FA600 MOV X0, X19
	0x038FA604 MOV X1, X31
	0x038FA608 MOV X2, X31
	0x038FA60C BL 0x3C3883C
	0x038FA610 TBZ X0, 0x0, 0x38FA698
	0x038FA614 ADRP X8, 0x853000
	0x038FA618 LDR X8, [X8 + 0xAD0]
	0x038FA61C LDR X0, [X8]
	0x038FA620 LDR W8, [X0 + 0xE0]
	0x038FA624 CBNZ W8, 0x38FA62C
	0x038FA628 BL 0x1C16DFC
	0x038FA62C ADRP X8, 0x853000
	0x038FA630 LDR X8, [X8 + 0xAE8]
	0x038FA634 LDR X0, [X8]
	0x038FA638 BL 0x38FAC88
	0x038FA63C LDR X0, [X21]
	0x038FA640 LDR W8, [X0 + 0xE0]
	0x038FA644 CBNZ W8, 0x38FA650
	0x038FA648 BL 0x1C16DFC
	0x038FA64C LDR X0, [X21]
	0x038FA650 LDR X8, [X0 + 0xB8]
	0x038FA654 MOV X1, X31
	0x038FA658 LDR X0, [X8 + 0x80]
	0x038FA65C BL 0x3C13E40
	0x038FA660 ADRP X8, 0x7FD000
	0x038FA664 LDR X8, [X8 + 0xCA0]
	0x038FA668 MOV X19, X0
	0x038FA66C LDR X8, [X8]
	0x038FA670 MOV X0, X8
	0x038FA674 BL 0x1C16F10
	0x038FA678 MOV X1, X19
	0x038FA67C MOV X2, X31
	0x038FA680 MOV X20, X0
	0x038FA684 BL 0x3C1454C
	0x038FA688 LDR X0, [X21]
	0x038FA68C LDR X8, [X0 + 0xB8]
	0x038FA690 STR X20, [X8 + 0x30]
	0x038FA694 B 0x38FA69C
	0x038FA698 LDR X0, [X21]
	0x038FA69C LDR W8, [X0 + 0xE0]
	0x038FA6A0 CBNZ W8, 0x38FA6AC
	0x038FA6A4 BL 0x1C16DFC
	0x038FA6A8 LDR X0, [X21]
	0x038FA6AC LDR X8, [X0 + 0xB8]
	0x038FA6B0 LDR X1, [X23]
	0x038FA6B4 LDR X0, [X8 + 0x70]
	0x038FA6B8 BL 0x2241FB8
	0x038FA6BC LDR X8, [X21]
	0x038FA6C0 MOV X19, X0
	0x038FA6C4 LDR X8, [X8 + 0xB8]
	0x038FA6C8 STR X0, [X8 + 0x38]
	0x038FA6CC LDR X0, [X22]
	0x038FA6D0 LDR W8, [X0 + 0xE0]
	0x038FA6D4 CBNZ W8, 0x38FA6DC
	0x038FA6D8 BL 0x1C16DFC
	0x038FA6DC MOV X0, X19
	0x038FA6E0 MOV X1, X31
	0x038FA6E4 MOV X2, X31
	0x038FA6E8 BL 0x3C3883C
	0x038FA6EC TBZ X0, 0x0, 0x38FA774
	0x038FA6F0 ADRP X8, 0x853000
	0x038FA6F4 LDR X8, [X8 + 0xAD0]
	0x038FA6F8 LDR X0, [X8]
	0x038FA6FC LDR W8, [X0 + 0xE0]
	0x038FA700 CBNZ W8, 0x38FA708
	0x038FA704 BL 0x1C16DFC
	0x038FA708 ADRP X8, 0x853000
	0x038FA70C LDR X8, [X8 + 0xAF8]
	0x038FA710 LDR X0, [X8]
	0x038FA714 BL 0x38FAC88
	0x038FA718 LDR X0, [X21]
	0x038FA71C LDR W8, [X0 + 0xE0]
	0x038FA720 CBNZ W8, 0x38FA72C
	0x038FA724 BL 0x1C16DFC
	0x038FA728 LDR X0, [X21]
	0x038FA72C LDR X8, [X0 + 0xB8]
	0x038FA730 MOV X1, X31
	0x038FA734 LDR X0, [X8 + 0x88]
	0x038FA738 BL 0x3C13E40
	0x038FA73C ADRP X8, 0x7FD000
	0x038FA740 LDR X8, [X8 + 0xCA0]
	0x038FA744 MOV X19, X0
	0x038FA748 LDR X8, [X8]
	0x038FA74C MOV X0, X8
	0x038FA750 BL 0x1C16F10
	0x038FA754 MOV X1, X19
	0x038FA758 MOV X2, X31
	0x038FA75C MOV X20, X0
	0x038FA760 BL 0x3C1454C
	0x038FA764 LDR X0, [X21]
	0x038FA768 LDR X8, [X0 + 0xB8]
	0x038FA76C STR X20, [X8 + 0x38]
	0x038FA770 B 0x38FA778
	0x038FA774 LDR X0, [X21]
	0x038FA778 LDR W8, [X0 + 0xE0]
	0x038FA77C CBNZ W8, 0x38FA788
	0x038FA780 BL 0x1C16DFC
	0x038FA784 LDR X0, [X21]
	0x038FA788 LDR X8, [X0 + 0xB8]
	0x038FA78C LDR X1, [X23]
	0x038FA790 LDR X0, [X8 + 0x60]
	0x038FA794 BL 0x2241FB8
	0x038FA798 LDR X8, [X21]
	0x038FA79C MOV X19, X0
	0x038FA7A0 LDR X8, [X8 + 0xB8]
	0x038FA7A4 STR X0, [X8 + 0x40]
	0x038FA7A8 LDR X0, [X22]
	0x038FA7AC LDR W8, [X0 + 0xE0]
	0x038FA7B0 CBNZ W8, 0x38FA7B8
	0x038FA7B4 BL 0x1C16DFC
	0x038FA7B8 MOV X0, X19
	0x038FA7BC MOV X1, X31
	0x038FA7C0 MOV X2, X31
	0x038FA7C4 BL 0x3C3883C
	0x038FA7C8 TBZ X0, 0x0, 0x38FA84C
	0x038FA7CC ADRP X8, 0x853000
	0x038FA7D0 LDR X8, [X8 + 0xAD0]
	0x038FA7D4 LDR X0, [X8]
	0x038FA7D8 LDR W8, [X0 + 0xE0]
	0x038FA7DC CBNZ W8, 0x38FA7E4
	0x038FA7E0 BL 0x1C16DFC
	0x038FA7E4 ADRP X8, 0x853000
	0x038FA7E8 LDR X8, [X8 + 0xB18]
	0x038FA7EC LDR X0, [X8]
	0x038FA7F0 BL 0x38FAC88
	0x038FA7F4 LDR X0, [X21]
	0x038FA7F8 LDR W8, [X0 + 0xE0]
	0x038FA7FC CBNZ W8, 0x38FA808
	0x038FA800 BL 0x1C16DFC
	0x038FA804 LDR X0, [X21]
	0x038FA808 LDR X8, [X0 + 0xB8]
	0x038FA80C MOV X1, X31
	0x038FA810 LDR X0, [X8 + 0x78]
	0x038FA814 BL 0x3C13E40
	0x038FA818 ADRP X8, 0x7FD000
	0x038FA81C LDR X8, [X8 + 0xCA0]
	0x038FA820 MOV X19, X0
	0x038FA824 LDR X8, [X8]
	0x038FA828 MOV X0, X8
	0x038FA82C BL 0x1C16F10
	0x038FA830 MOV X1, X19
	0x038FA834 MOV X2, X31
	0x038FA838 MOV X20, X0
	0x038FA83C BL 0x3C1454C
	0x038FA840 LDR X8, [X21]
	0x038FA844 LDR X8, [X8 + 0xB8]
	0x038FA848 STR X20, [X8 + 0x40]
	0x038FA84C ADRP X8, 0x7F9000
	0x038FA850 LDR X8, [X8 + 0x6C0]
	0x038FA854 LDR X0, [X8]
	0x038FA858 ADRP X8, 0x822000
	0x038FA85C LDR X8, [X8 + 0x278]
	0x038FA860 LDR W9, [X0 + 0xE0]
	0x038FA864 LDR X19, [X8]
	0x038FA868 CBNZ W9, 0x38FA870
	0x038FA86C BL 0x1C16DFC
	0x038FA870 MOV X0, X19
	0x038FA874 MOV X1, X31
	0x038FA878 BL 0x338C698
	0x038FA87C ADRP X8, 0x853000
	0x038FA880 LDR X8, [X8 + 0xB08]
	0x038FA884 MOV X1, X0
	0x038FA888 MOV X2, X31
	0x038FA88C LDR X8, [X8]
	0x038FA890 MOV X0, X8
	0x038FA894 BL 0x3C30CE8
	0x038FA898 LDR X8, [X21]
	0x038FA89C MOV X19, X0
	0x038FA8A0 LDR W9, [X8 + 0xE0]
	0x038FA8A4 CBNZ W9, 0x38FA8B0
	0x038FA8A8 MOV X0, X8
	0x038FA8AC BL 0x1C16DFC
	0x038FA8B0 ADRP X20, 0x7FD000
	0x038FA8B4 LDR X20, [X20 + 0xCA0]
	0x038FA8B8 CBZ X19, 0x38FA91C
	0x038FA8BC LDR X8, [X19]
	0x038FA8C0 LDR X1, [X20]
	0x038FA8C4 LDRB W10, [X8 + 0x130]
	0x038FA8C8 LDRB W9, [X1 + 0x130]
	0x038FA8CC CMP W10, W9
	0x038FA8D0 B.CC 0x38FA914
	0x038FA8D4 LDR X8, [X8 + 0xC8]
	0x038FA8D8 SUB X10, X9, 0x1
	0x038FA8DC LDR X8, [X8, X10, LSL #3]
	0x038FA8E0 CMP X8, X1
	0x038FA8E4 B.NE 0x38FA914
	0x038FA8E8 LDR X8, [X21]
	0x038FA8EC LDR X8, [X8 + 0xB8]
	0x038FA8F0 STR X19, [X8 + 0x50]
	0x038FA8F4 LDR X11, [X19]
	0x038FA8F8 LDRB W12, [X11 + 0x130]
	0x038FA8FC CMP W12, W9
	0x038FA900 B.CC 0x38FA914
	0x038FA904 LDR X9, [X11 + 0xC8]
	0x038FA908 LDR X9, [X9, X10, LSL #3]
	0x038FA90C CMP X9, X1
	0x038FA910 B.EQ 0x38FA928
	0x038FA914 MOV X0, X19
	0x038FA918 BL 0x1C171E0
	0x038FA91C LDR X8, [X21]
	0x038FA920 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xAE8000
	015 Move W8, [X21+1893]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x822000
	023 Move X0, [X0+1952]
	024 Call 0x1C17CF4
	025 Move X0, 0x854000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0x822000
	029 Move X0, [X0+1960]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1893], W8
	033 Compare X19, 0
	034 JumpIfEqual {283}
	035 Move X10, 0x822000
	036 Move X8, [X19]
	037 Move X10, [X10+1952]
	038 Move X24, 0x822000
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Move X24, [X24+1960]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X19]
	061 Move X1, [X24]
	062 Move W21, W0
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X19
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X19
	081 Move W1, W31
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X20, 0
	084 JumpIfEqual {283}
	085 Move X25, 0x854000
	086 Move X8, [X20]
	087 Move X25, [X25+2712]
	088 Move W22, W0
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X25]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X20
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move W1, W22
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X19]
	111 Move X1, [X24]
	112 Move V8, V0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X2, [X0+8]
	130 Move X0, X19
	131 Move W1, W31
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X20]
	134 Move X1, [X25]
	135 Move W22, W0
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X20
	154 Move W1, W22
	155 NotImplemented "Instruction BLR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move V9, V1
	158 Move W22, 1
	159 Move V12, V8
	160 Move V11, V9
	161 Move X8, [X19]
	162 Move X1, [X24]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X19
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X2, [X0+8]
	180 Move X0, X19
	181 Move W1, W22
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X20]
	184 Move X1, [X25]
	185 Move W23, W0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X20
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X2, [X0+8]
	203 Move X0, X20
	204 Move W1, W23
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X19]
	207 Move X1, [X24]
	208 Move V10, V0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move X0, X19
	219 Move W2, W31
	220 Call 0x1C5D788
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Add X8, X8, X9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X2, [X0+8]
	226 Move X0, X19
	227 Move W1, W22
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X25]
	231 Move W23, W0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X2, [X0+8]
	249 Move X0, X20
	250 Move W1, W23
	251 NotImplemented "Instruction BLR not yet implemented."
	252 NotImplemented "Instruction FCMP not yet implemented."
	253 NotImplemented "Instruction FCSEL not yet implemented."
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 NotImplemented "Instruction FCSEL not yet implemented."
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Add W22, W22, 1
	258 NotImplemented "Instruction FCSEL not yet implemented."
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 NotImplemented "Instruction FCSEL not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move V11, V9
	263 Move V12, V8
	264 Add S0, S12, S8
	265 Add S2, S11, S9
	266 Move X20, [X31+96]
	267 Move X19, [X31+104]
	268 Move X22, [X31+80]
	269 Move X21, [X31+88]
	270 Move X24, [X31+64]
	271 Move X23, [X31+72]
	272 Move X30, [X31+48]
	273 Move X25, [X31+56]
	274 Move D9, [X31+32]
	275 Move D8, [X31+40]
	276 Move D11, [X31+16]
	277 Move D10, [X31+24]
	278 Move S1, 0.5
	279 Multiply S0, S0, S1
	280 Multiply S1, S2, S1
	281 Move V12, [X31+112]
	282 Return X0
	283 Call 0x1C17F20

Method: UnityEngine.Vector2 Size(System.Collections.Generic.IList`1<UnityEngine.Vector2> points, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x038FA924 STR X19, [X8 + 0x50]
	0x038FA928 LDR X0, [X8 + 0x28]
	0x038FA92C CBZ X0, 0x38FAA8C
	0x038FA930 MOV X1, X31
	0x038FA934 BL 0x3C14714
	0x038FA938 LDR X8, [X20]
	0x038FA93C MOV X20, X0
	0x038FA940 MOV X0, X8
	0x038FA944 BL 0x1C16F10
	0x038FA948 MOV X1, X20
	0x038FA94C MOV X2, X31
	0x038FA950 MOV X19, X0
	0x038FA954 BL 0x3C1454C
	0x038FA958 LDR X8, [X21]
	0x038FA95C LDR X8, [X8 + 0xB8]
	0x038FA960 STR X19, [X8 + 0x58]
	0x038FA964 CBZ X19, 0x38FAA8C
	0x038FA968 MOVZ W1, 0x3D
	0x038FA96C MOV X0, X19
	0x038FA970 MOV X2, X31
	0x038FA974 BL 0x3C396EC
	0x038FA978 LDR X8, [X21]
	0x038FA97C LDR X8, [X8 + 0xB8]
	0x038FA980 LDR X0, [X8 + 0x58]
	0x038FA984 CBZ X0, 0x38FAA8C
	0x038FA988 ADRP X8, 0x853000
	0x038FA98C LDR X8, [X8 + 0xB00]
	0x038FA990 MOV X2, X31
	0x038FA994 LDR X1, [X8]
	0x038FA998 BL 0x3C14D4C
	0x038FA99C TBZ X0, 0x0, 0x38FAA04
	0x038FA9A0 LDR X0, [X21]
	0x038FA9A4 LDR W8, [X0 + 0xE0]
	0x038FA9A8 CBNZ W8, 0x38FA9B4
	0x038FA9AC BL 0x1C16DFC
	0x038FA9B0 LDR X0, [X21]
	0x038FA9B4 ADRP X9, 0x853000
	0x038FA9B8 LDR X8, [X0 + 0xB8]
	0x038FA9BC LDR X9, [X9 + 0xB10]
	0x038FA9C0 MOV X1, X31
	0x038FA9C4 LDR X19, [X8 + 0x58]
	0x038FA9C8 LDR X0, [X9]
	0x038FA9CC BL 0x3C31258
	0x038FA9D0 CBZ X19, 0x38FAA8C
	0x038FA9D4 MOV X8, X0
	0x038FA9D8 CBZ X0, 0x38FA9F4
	0x038FA9DC ADRP X9, 0x823000
	0x038FA9E0 LDR X9, [X9 + 0x250]
	0x038FA9E4 LDR X1, [X9]
	0x038FA9E8 LDR X9, [X8]
	0x038FA9EC CMP X9, X1
	0x038FA9F0 B.NE 0x38FAA90
	0x038FA9F4 MOV X0, X19
	0x038FA9F8 MOV X1, X8
	0x038FA9FC MOV X2, X31
	0x038FAA00 BL 0x3C14B6C
	0x038FAA04 LDR X0, [X21]
	0x038FAA08 LDR W8, [X0 + 0xE0]
	0x038FAA0C CBNZ W8, 0x38FAA18
	0x038FAA10 BL 0x1C16DFC
	0x038FAA14 LDR X0, [X21]
	0x038FAA18 LDR X8, [X0 + 0xB8]
	0x038FAA1C LDR X0, [X8 + 0x58]
	0x038FAA20 CBZ X0, 0x38FAA8C
	0x038FAA24 ADRP X19, 0x821000
	0x038FAA28 LDR X19, [X19 + 0x2E0]
	0x038FAA2C MOV X2, X31
	0x038FAA30 LDR X1, [X19]
	0x038FAA34 BL 0x3C14D4C
	0x038FAA38 TBZ X0, 0x0, 0x38FAA7C
	0x038FAA3C LDR X0, [X21]
	0x038FAA40 LDR W8, [X0 + 0xE0]
	0x038FAA44 CBNZ W8, 0x38FAA50
	0x038FAA48 BL 0x1C16DFC
	0x038FAA4C LDR X0, [X21]
	0x038FAA50 LDR X8, [X0 + 0xB8]
	0x038FAA54 LDR X0, [X8 + 0x58]
	0x038FAA58 CBZ X0, 0x38FAA8C
	0x038FAA5C LDP S2, S3, [X8 + 0xC]
	0x038FAA60 LDP S0, S1, [X8 + 0x4]
	0x038FAA64 LDR X1, [X19]
	0x038FAA68 LDP X20, X19, [X31 + 0x20]
	0x038FAA6C LDP X22, X21, [X31 + 0x10]
	0x038FAA70 MOV X2, X31
	0x038FAA74 LDP X30, X23, [X31], #0x30
	0x038FAA78 B 0x3C1498C
	0x038FAA7C LDP X20, X19, [X31 + 0x20]
	0x038FAA80 LDP X22, X21, [X31 + 0x10]
	0x038FAA84 LDP X30, X23, [X31], #0x30
	0x038FAA88 RET
	0x038FAA8C BL 0x1C16F20
	0x038FAA90 MOV X0, X8
	0x038FAA94 BL 0x1C171E0
	0x038FAA98 STR X30, [X31 - 0x20]!
	0x038FAA9C STP X20, X19, [X31 + 0x10]
	0x038FAAA0 ADRP X19, 0xAE7000
	0x038FAAA4 ADRP X20, 0x7F9000
	0x038FAAA8 LDRB W8, [X19 + 0x774]
	0x038FAAAC LDR X20, [X20 + 0x598]
	0x038FAAB0 TBNZ X8, 0x0, 0x38FAB04
	0x038FAAB4 ADRP X0, 0x853000
	0x038FAAB8 LDR X0, [X0 + 0xAC8]
	0x038FAABC BL 0x1C16CF4
	0x038FAAC0 ADRP X0, 0x822000
	0x038FAAC4 LDR X0, [X0 + 0x278]
	0x038FAAC8 BL 0x1C16CF4
	0x038FAACC ADRP X0, 0x7FD000
	0x038FAAD0 LDR X0, [X0 + 0xCA0]
	0x038FAAD4 BL 0x1C16CF4
	0x038FAAD8 ADRP X0, 0x7F9000
	0x038FAADC LDR X0, [X0 + 0x598]
	0x038FAAE0 BL 0x1C16CF4
	0x038FAAE4 ADRP X0, 0x7F9000
	0x038FAAE8 LDR X0, [X0 + 0x6C0]
	0x038FAAEC BL 0x1C16CF4
	0x038FAAF0 ADRP X0, 0x853000
	0x038FAAF4 LDR X0, [X0 + 0xB20]
	0x038FAAF8 BL 0x1C16CF4
	0x038FAAFC MOVZ W8, 0x1
	0x038FAB00 STRB W8, [X19 + 0x774]
	0x038FAB04 MOV X0, X31
	0x038FAB08 BL 0x3C4BBC4
	0x038FAB0C LDR X8, [X20]
	0x038FAB10 MOV X19, X0
	0x038FAB14 LDR W9, [X8 + 0xE0]
	0x038FAB18 CBNZ W9, 0x38FAB24
	0x038FAB1C MOV X0, X8
	0x038FAB20 BL 0x1C16DFC
	0x038FAB24 MOV X0, X19
	0x038FAB28 MOV X1, X31
	0x038FAB2C MOV X2, X31
	0x038FAB30 BL 0x3C354F8
	0x038FAB34 MOV X19, X31
	0x038FAB38 TBZ X0, 0x0, 0x38FAB58
	0x038FAB3C MOV X0, X31
	0x038FAB40 BL 0x3C4BBC4
	0x038FAB44 CBZ X0, 0x38FAC7C
	0x038FAB48 LDR X8, [X0]
	0x038FAB4C LDP X9, X1, [X8 + 0x198]
	0x038FAB50 BLR X9
	0x038FAB54 MOV X19, X0
	0x038FAB58 LDR X0, [X20]
	0x038FAB5C LDR W8, [X0 + 0xE0]
	0x038FAB60 CBNZ W8, 0x38FAB68
	0x038FAB64 BL 0x1C16DFC
	0x038FAB68 MOV X0, X19
	0x038FAB6C MOV X1, X31
	0x038FAB70 MOV X2, X31
	0x038FAB74 BL 0x3C3883C
	0x038FAB78 TBZ X0, 0x0, 0x38FAC48
	0x038FAB7C ADRP X8, 0x7F9000
	0x038FAB80 LDR X8, [X8 + 0x6C0]
	0x038FAB84 LDR X0, [X8]
	0x038FAB88 ADRP X8, 0x822000
	0x038FAB8C LDR X8, [X8 + 0x278]
	0x038FAB90 LDR W9, [X0 + 0xE0]
	0x038FAB94 LDR X19, [X8]
	0x038FAB98 CBNZ W9, 0x38FABA0
	0x038FAB9C BL 0x1C16DFC
	0x038FABA0 MOV X0, X19
	0x038FABA4 MOV X1, X31
	0x038FABA8 BL 0x338C698
	0x038FABAC ADRP X8, 0x853000
	0x038FABB0 LDR X8, [X8 + 0xB20]
	0x038FABB4 MOV X1, X0
	0x038FABB8 MOV X2, X31
	0x038FABBC LDR X8, [X8]
	0x038FABC0 MOV X0, X8
	0x038FABC4 BL 0x3C30CE8
	0x038FABC8 MOV X19, X0
	0x038FABCC CBZ X0, 0x38FAC04
	0x038FABD0 ADRP X9, 0x7FD000
	0x038FABD4 LDR X9, [X9 + 0xCA0]
	0x038FABD8 LDR X8, [X19]
	0x038FABDC LDR X1, [X9]
	0x038FABE0 LDRB W10, [X8 + 0x130]
	0x038FABE4 LDRB W9, [X1 + 0x130]
	0x038FABE8 CMP W10, W9
	0x038FABEC B.CC 0x38FAC80
	0x038FABF0 LDR X8, [X8 + 0xC8]
	0x038FABF4 ADD X8, X8, X9, 0x3, LSL
	0x038FABF8 LDUR X8, [X8 - 0x8]
	0x038FABFC CMP X8, X1
	0x038FAC00 B.NE 0x38FAC80
	0x038FAC04 LDR X0, [X20]
	0x038FAC08 LDR W8, [X0 + 0xE0]
	0x038FAC0C CBNZ W8, 0x38FAC14
	0x038FAC10 BL 0x1C16DFC
	0x038FAC14 MOV X0, X19
	0x038FAC18 MOV X1, X31
	0x038FAC1C MOV X2, X31
	0x038FAC20 BL 0x3C3883C
	0x038FAC24 TBNZ X0, 0x0, 0x38FAC58
	0x038FAC28 CBZ X19, 0x38FAC7C
	0x038FAC2C MOV X0, X19
	0x038FAC30 MOV X1, X31
	0x038FAC34 BL 0x3C14714
	0x038FAC38 CBZ X0, 0x38FAC7C
	0x038FAC3C MOV X1, X31
	0x038FAC40 BL 0x3C13EAC
	0x038FAC44 TBZ X0, 0x0, 0x38FAC58
	0x038FAC48 MOV X0, X19
	0x038FAC4C LDP X20, X19, [X31 + 0x10]
	0x038FAC50 LDR X30, [X31], #0x20
	0x038FAC54 RET
	0x038FAC58 ADRP X8, 0x853000
	0x038FAC5C LDR X8, [X8 + 0xAC8]
	0x038FAC60 LDR X0, [X8]
	0x038FAC64 LDR W8, [X0 + 0xE0]
	0x038FAC68 CBNZ W8, 0x38FAC70
	0x038FAC6C BL 0x1C16DFC
	0x038FAC70 LDP X20, X19, [X31 + 0x10]
	0x038FAC74 LDR X30, [X31], #0x20
	0x038FAC78 B 0x38FB248
	0x038FAC7C BL 0x1C16F20
	0x038FAC80 MOV X0, X19
	0x038FAC84 BL 0x1C171E0
	0x038FAC88 STP X30, X21, [X31 - 0x20]!
	0x038FAC8C STP X20, X19, [X31 + 0x10]
	0x038FAC90 ADRP X21, 0xAE7000
	0x038FAC94 ADRP X20, 0x853000
	0x038FAC98 LDRB W8, [X21 + 0x7EC]
	0x038FAC9C LDR X20, [X20 + 0xAD0]
	0x038FACA0 MOV X19, X0
	0x038FACA4 TBNZ X8, 0x0, 0x38FACBC
	0x038FACA8 ADRP X0, 0x853000
	0x038FACAC LDR X0, [X0 + 0xAD0]
	0x038FACB0 BL 0x1C16CF4
	0x038FACB4 MOVZ W8, 0x1
	0x038FACB8 STRB W8, [X21 + 0x7EC]
	0x038FACBC LDR X0, [X20]
	0x038FACC0 LDR W8, [X0 + 0xE0]
	0x038FACC4 CBNZ W8, 0x38FACD0
	0x038FACC8 BL 0x1C16DFC
	0x038FACCC LDR X0, [X20]
	0x038FACD0 LDR X8, [X0 + 0xB8]
	0x038FACD4 LDRB W8, [X8 + 0x8]
	0x038FACD8 TBNZ X8, 0x0, 0x38FACE8
	0x038FACDC LDP X20, X19, [X31 + 0x10]
	0x038FACE0 LDP X30, X21, [X31], #0x20
	0x038FACE4 RET
	0x038FACE8 LDR W8, [X0 + 0xE0]
	0x038FACEC CBNZ W8, 0x38FACF4
	0x038FACF0 BL 0x1C16DFC
	0x038FACF4 MOV X0, X19
	0x038FACF8 LDP X20, X19, [X31 + 0x10]
	0x038FACFC MOV W1, W31
	0x038FAD00 LDP X30, X21, [X31], #0x20
	0x038FAD04 B 0x3906EB0
	0x038FAD08 STR X30, [X31 - 0x20]!
	0x038FAD0C STP X20, X19, [X31 + 0x10]
	0x038FAD10 ADRP X20, 0xAE7000
	0x038FAD14 ADRP X19, 0x853000
	0x038FAD18 LDRB W8, [X20 + 0x76A]
	0x038FAD1C LDR X19, [X19 + 0xAC8]
	0x038FAD20 TBNZ X8, 0x0, 0x38FAD38
	0x038FAD24 ADRP X0, 0x853000
	0x038FAD28 LDR X0, [X0 + 0xAC8]
	0x038FAD2C BL 0x1C16CF4
	0x038FAD30 MOVZ W8, 0x1
	0x038FAD34 STRB W8, [X20 + 0x76A]
	0x038FAD38 LDR X0, [X19]
	0x038FAD3C LDR W8, [X0 + 0xE0]
	0x038FAD40 CBNZ W8, 0x38FAD48
	0x038FAD44 BL 0x1C16DFC
	0x038FAD48 BL 0x38FA3E8
	0x038FAD4C LDR X8, [X19]
	0x038FAD50 LDP X20, X19, [X31 + 0x10]
	0x038FAD54 LDR X8, [X8 + 0xB8]
	0x038FAD58 LDRB W0, [X8 + 0x20]
	0x038FAD5C LDR X30, [X31], #0x20
	0x038FAD60 RET
	0x038FAD64 STR X30, [X31 - 0x20]!
	0x038FAD68 STP X20, X19, [X31 + 0x10]
	0x038FAD6C ADRP X20, 0xAE7000

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xAE8000
	015 Move W8, [X21+1894]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x822000
	023 Move X0, [X0+1952]
	024 Call 0x1C17CF4
	025 Move X0, 0x854000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0x822000
	029 Move X0, [X0+1960]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1894], W8
	033 Compare X19, 0
	034 JumpIfEqual {280}
	035 Move X10, 0x822000
	036 Move X8, [X19]
	037 Move X10, [X10+1952]
	038 Move X24, 0x822000
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X10]
	041 Move X24, [X24+1960]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 NotImplemented "Instruction LDRSW not yet implemented."
	054 Add X8, X8, X9
	055 Add X0, X8, 312
	056 Move X8, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X19]
	061 Move X1, [X24]
	062 Move W21, W0
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X19
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X19
	081 Move W1, W31
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X20, 0
	084 JumpIfEqual {280}
	085 Move X25, 0x854000
	086 Move X8, [X20]
	087 Move X25, [X25+2712]
	088 Move W22, W0
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Move X1, [X25]
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X20
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X20
	108 Move W1, W22
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X19]
	111 Move X1, [X24]
	112 Move V8, V0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X2, [X0+8]
	130 Move X0, X19
	131 Move W1, W31
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X8, [X20]
	134 Move X1, [X25]
	135 Move W22, W0
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X20
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X20
	154 Move W1, W22
	155 NotImplemented "Instruction BLR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move V9, V1
	158 Move W22, 1
	159 Move V12, V8
	160 Move V11, V9
	161 Move X8, [X19]
	162 Move X1, [X24]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X19
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X2, [X0+8]
	180 Move X0, X19
	181 Move W1, W22
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X20]
	184 Move X1, [X25]
	185 Move W23, W0
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X20
	196 Move W2, W31
	197 Call 0x1C5D788
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X8, X8, X9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X2, [X0+8]
	203 Move X0, X20
	204 Move W1, W23
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X8, [X19]
	207 Move X1, [X24]
	208 Move V10, V0
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move X0, X19
	219 Move W2, W31
	220 Call 0x1C5D788
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 Add X8, X8, X9
	223 Add X0, X8, 312
	224 Move X8, [X0]
	225 Move X2, [X0+8]
	226 Move X0, X19
	227 Move W1, W22
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move X8, [X20]
	230 Move X1, [X25]
	231 Move W23, W0
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move X0, X20
	242 Move W2, W31
	243 Call 0x1C5D788
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X8, X8, X9
	246 Add X0, X8, 312
	247 Move X8, [X0]
	248 Move X2, [X0+8]
	249 Move X0, X20
	250 Move W1, W23
	251 NotImplemented "Instruction BLR not yet implemented."
	252 NotImplemented "Instruction FCMP not yet implemented."
	253 NotImplemented "Instruction FCSEL not yet implemented."
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 NotImplemented "Instruction FCSEL not yet implemented."
	256 NotImplemented "Instruction FCMP not yet implemented."
	257 Add W22, W22, 1
	258 NotImplemented "Instruction FCSEL not yet implemented."
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 NotImplemented "Instruction FCSEL not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move V11, V9
	263 Move V12, V8
	264 Subtract S0, S12, S8
	265 Subtract S1, S11, S9
	266 Move X20, [X31+96]
	267 Move X19, [X31+104]
	268 Move X22, [X31+80]
	269 Move X21, [X31+88]
	270 Move X24, [X31+64]
	271 Move X23, [X31+72]
	272 Move X30, [X31+48]
	273 Move X25, [X31+56]
	274 Move D9, [X31+32]
	275 Move D8, [X31+40]
	276 Move D11, [X31+16]
	277 Move D10, [X31+24]
	278 Move V12, [X31+112]
	279 Return X0
	280 Call 0x1C17F20

Method: UnityEngine.Vector2 Center(System.Collections.Generic.IList`1<UnityEngine.Vector4> points, System.Collections.Generic.IEnumerable`1<System.Int32> indexes)

Disassembly:
	0x038FAD70 ADRP X19, 0x853000
	0x038FAD74 LDRB W8, [X20 + 0x76B]
	0x038FAD78 LDR X19, [X19 + 0xAC8]
	0x038FAD7C TBNZ X8, 0x0, 0x38FAD94
	0x038FAD80 ADRP X0, 0x853000
	0x038FAD84 LDR X0, [X0 + 0xAC8]
	0x038FAD88 BL 0x1C16CF4
	0x038FAD8C MOVZ W8, 0x1
	0x038FAD90 STRB W8, [X20 + 0x76B]
	0x038FAD94 LDR X0, [X19]
	0x038FAD98 LDR W8, [X0 + 0xE0]
	0x038FAD9C CBNZ W8, 0x38FADA4
	0x038FADA0 BL 0x1C16DFC
	0x038FADA4 BL 0x38FA3E8
	0x038FADA8 LDR X8, [X19]
	0x038FADAC LDP X20, X19, [X31 + 0x10]
	0x038FADB0 LDR X8, [X8 + 0xB8]
	0x038FADB4 LDR X0, [X8 + 0x28]
	0x038FADB8 LDR X30, [X31], #0x20
	0x038FADBC RET
	0x038FADC0 STR X30, [X31 - 0x20]!
	0x038FADC4 STP X20, X19, [X31 + 0x10]
	0x038FADC8 ADRP X20, 0xAE7000
	0x038FADCC ADRP X19, 0x853000
	0x038FADD0 LDRB W8, [X20 + 0x76C]
	0x038FADD4 LDR X19, [X19 + 0xAC8]
	0x038FADD8 TBNZ X8, 0x0, 0x38FADF0
	0x038FADDC ADRP X0, 0x853000
	0x038FADE0 LDR X0, [X0 + 0xAC8]
	0x038FADE4 BL 0x1C16CF4
	0x038FADE8 MOVZ W8, 0x1
	0x038FADEC STRB W8, [X20 + 0x76C]
	0x038FADF0 LDR X0, [X19]
	0x038FADF4 LDR W8, [X0 + 0xE0]
	0x038FADF8 CBNZ W8, 0x38FAE00
	0x038FADFC BL 0x1C16DFC
	0x038FAE00 BL 0x38FA3E8
	0x038FAE04 LDR X8, [X19]
	0x038FAE08 LDP X20, X19, [X31 + 0x10]
	0x038FAE0C LDR X8, [X8 + 0xB8]
	0x038FAE10 LDR X0, [X8 + 0x18]
	0x038FAE14 LDR X30, [X31], #0x20
	0x038FAE18 RET
	0x038FAE1C STR X30, [X31 - 0x20]!
	0x038FAE20 STP X20, X19, [X31 + 0x10]
	0x038FAE24 ADRP X20, 0xAE7000
	0x038FAE28 ADRP X19, 0x853000
	0x038FAE2C LDRB W8, [X20 + 0x76D]
	0x038FAE30 LDR X19, [X19 + 0xAC8]
	0x038FAE34 TBNZ X8, 0x0, 0x38FAE4C
	0x038FAE38 ADRP X0, 0x853000
	0x038FAE3C LDR X0, [X0 + 0xAC8]
	0x038FAE40 BL 0x1C16CF4
	0x038FAE44 MOVZ W8, 0x1
	0x038FAE48 STRB W8, [X20 + 0x76D]
	0x038FAE4C LDR X0, [X19]
	0x038FAE50 LDR W8, [X0 + 0xE0]
	0x038FAE54 CBNZ W8, 0x38FAE5C
	0x038FAE58 BL 0x1C16DFC
	0x038FAE5C BL 0x38FA3E8
	0x038FAE60 LDR X8, [X19]
	0x038FAE64 LDP X20, X19, [X31 + 0x10]
	0x038FAE68 LDR X8, [X8 + 0xB8]
	0x038FAE6C LDR X0, [X8 + 0x30]
	0x038FAE70 LDR X30, [X31], #0x20
	0x038FAE74 RET
	0x038FAE78 STR X30, [X31 - 0x20]!
	0x038FAE7C STP X20, X19, [X31 + 0x10]
	0x038FAE80 ADRP X20, 0xAE7000
	0x038FAE84 ADRP X19, 0x853000
	0x038FAE88 LDRB W8, [X20 + 0x76E]
	0x038FAE8C LDR X19, [X19 + 0xAC8]
	0x038FAE90 TBNZ X8, 0x0, 0x38FAEA8
	0x038FAE94 ADRP X0, 0x853000
	0x038FAE98 LDR X0, [X0 + 0xAC8]
	0x038FAE9C BL 0x1C16CF4
	0x038FAEA0 MOVZ W8, 0x1
	0x038FAEA4 STRB W8, [X20 + 0x76E]
	0x038FAEA8 LDR X0, [X19]
	0x038FAEAC LDR W8, [X0 + 0xE0]
	0x038FAEB0 CBNZ W8, 0x38FAEB8
	0x038FAEB4 BL 0x1C16DFC
	0x038FAEB8 BL 0x38FA3E8
	0x038FAEBC LDR X8, [X19]
	0x038FAEC0 LDP X20, X19, [X31 + 0x10]
	0x038FAEC4 LDR X8, [X8 + 0xB8]
	0x038FAEC8 LDR X0, [X8 + 0x38]
	0x038FAECC LDR X30, [X31], #0x20
	0x038FAED0 RET
	0x038FAED4 STR X30, [X31 - 0x20]!
	0x038FAED8 STP X20, X19, [X31 + 0x10]
	0x038FAEDC ADRP X20, 0xAE7000
	0x038FAEE0 ADRP X19, 0x853000
	0x038FAEE4 LDRB W8, [X20 + 0x76F]
	0x038FAEE8 LDR X19, [X19 + 0xAC8]
	0x038FAEEC TBNZ X8, 0x0, 0x38FAF04
	0x038FAEF0 ADRP X0, 0x853000
	0x038FAEF4 LDR X0, [X0 + 0xAC8]
	0x038FAEF8 BL 0x1C16CF4
	0x038FAEFC MOVZ W8, 0x1
	0x038FAF00 STRB W8, [X20 + 0x76F]
	0x038FAF04 LDR X0, [X19]
	0x038FAF08 LDR W8, [X0 + 0xE0]
	0x038FAF0C CBNZ W8, 0x38FAF14
	0x038FAF10 BL 0x1C16DFC
	0x038FAF14 BL 0x38FA3E8
	0x038FAF18 LDR X8, [X19]
	0x038FAF1C LDP X20, X19, [X31 + 0x10]
	0x038FAF20 LDR X8, [X8 + 0xB8]
	0x038FAF24 LDR X0, [X8 + 0x40]
	0x038FAF28 LDR X30, [X31], #0x20
	0x038FAF2C RET
	0x038FAF30 STP X30, X21, [X31 - 0x20]!
	0x038FAF34 STP X20, X19, [X31 + 0x10]
	0x038FAF38 ADRP X20, 0xAE7000
	0x038FAF3C ADRP X19, 0x853000
	0x038FAF40 LDRB W8, [X20 + 0x770]
	0x038FAF44 LDR X19, [X19 + 0xAC8]
	0x038FAF48 TBNZ X8, 0x0, 0x38FAF90
	0x038FAF4C ADRP X0, 0x853000
	0x038FAF50 LDR X0, [X0 + 0xAC8]
	0x038FAF54 BL 0x1C16CF4
	0x038FAF58 ADRP X0, 0x822000
	0x038FAF5C LDR X0, [X0 + 0x278]
	0x038FAF60 BL 0x1C16CF4
	0x038FAF64 ADRP X0, 0x7FD000
	0x038FAF68 LDR X0, [X0 + 0xCA0]
	0x038FAF6C BL 0x1C16CF4
	0x038FAF70 ADRP X0, 0x7F9000
	0x038FAF74 LDR X0, [X0 + 0x6C0]
	0x038FAF78 BL 0x1C16CF4
	0x038FAF7C ADRP X0, 0x853000
	0x038FAF80 LDR X0, [X0 + 0xB28]
	0x038FAF84 BL 0x1C16CF4
	0x038FAF88 MOVZ W8, 0x1
	0x038FAF8C STRB W8, [X20 + 0x770]
	0x038FAF90 LDR X0, [X19]
	0x038FAF94 ADRP X19, 0x822000
	0x038FAF98 ADRP X21, 0x7F9000
	0x038FAF9C LDR W8, [X0 + 0xE0]
	0x038FAFA0 LDR X19, [X19 + 0x278]
	0x038FAFA4 LDR X21, [X21 + 0x6C0]
	0x038FAFA8 CBNZ W8, 0x38FAFB0
	0x038FAFAC BL 0x1C16DFC
	0x038FAFB0 ADRP X20, 0x853000
	0x038FAFB4 LDR X20, [X20 + 0xB28]
	0x038FAFB8 BL 0x38FA3E8
	0x038FAFBC LDR X0, [X21]
	0x038FAFC0 LDR X19, [X19]
	0x038FAFC4 LDR W8, [X0 + 0xE0]
	0x038FAFC8 CBNZ W8, 0x38FAFD0
	0x038FAFCC BL 0x1C16DFC
	0x038FAFD0 MOV X0, X19
	0x038FAFD4 MOV X1, X31
	0x038FAFD8 BL 0x338C698
	0x038FAFDC LDR X8, [X20]
	0x038FAFE0 MOV X1, X0
	0x038FAFE4 MOV X2, X31
	0x038FAFE8 MOV X0, X8
	0x038FAFEC BL 0x3C30CE8
	0x038FAFF0 CBZ X0, 0x38FB028
	0x038FAFF4 ADRP X9, 0x7FD000
	0x038FAFF8 LDR X9, [X9 + 0xCA0]
	0x038FAFFC LDR X8, [X0]
	0x038FB000 LDR X1, [X9]
	0x038FB004 LDRB W10, [X8 + 0x130]
	0x038FB008 LDRB W9, [X1 + 0x130]
	0x038FB00C CMP W10, W9
	0x038FB010 B.CC 0x38FB034
	0x038FB014 LDR X8, [X8 + 0xC8]
	0x038FB018 ADD X8, X8, X9, 0x3, LSL
	0x038FB01C LDUR X8, [X8 - 0x8]
	0x038FB020 CMP X8, X1
	0x038FB024 B.NE 0x38FB034
	0x038FB028 LDP X20, X19, [X31 + 0x10]
	0x038FB02C LDP X30, X21, [X31], #0x20
	0x038FB030 RET
	0x038FB034 BL 0x1C171E0
	0x038FB038 STP X30, X21, [X31 - 0x20]!
	0x038FB03C STP X20, X19, [X31 + 0x10]
	0x038FB040 ADRP X20, 0xAE6000
	0x038FB044 ADRP X19, 0x852000
	0x038FB048 LDRB W8, [X20 + 0x771]
	0x038FB04C LDR X19, [X19 + 0xAC8]
	0x038FB050 TBNZ X8, 0x0, 0x38FB098
	0x038FB054 ADRP X0, 0x852000
	0x038FB058 LDR X0, [X0 + 0xAC8]
	0x038FB05C BL 0x1C16CF4
	0x038FB060 ADRP X0, 0x821000
	0x038FB064 LDR X0, [X0 + 0x278]
	0x038FB068 BL 0x1C16CF4
	0x038FB06C ADRP X0, 0x7FC000
	0x038FB070 LDR X0, [X0 + 0xCA0]
	0x038FB074 BL 0x1C16CF4
	0x038FB078 ADRP X0, 0x7F8000
	0x038FB07C LDR X0, [X0 + 0x6C0]
	0x038FB080 BL 0x1C16CF4
	0x038FB084 ADRP X0, 0x852000
	0x038FB088 LDR X0, [X0 + 0xB30]
	0x038FB08C BL 0x1C16CF4
	0x038FB090 MOVZ W8, 0x1
	0x038FB094 STRB W8, [X20 + 0x771]
	0x038FB098 LDR X0, [X19]
	0x038FB09C ADRP X19, 0x821000
	0x038FB0A0 ADRP X21, 0x7F8000
	0x038FB0A4 LDR W8, [X0 + 0xE0]
	0x038FB0A8 LDR X19, [X19 + 0x278]
	0x038FB0AC LDR X21, [X21 + 0x6C0]
	0x038FB0B0 CBNZ W8, 0x38FB0B8
	0x038FB0B4 BL 0x1C16DFC
	0x038FB0B8 ADRP X20, 0x852000
	0x038FB0BC LDR X20, [X20 + 0xB30]
	0x038FB0C0 BL 0x38FA3E8
	0x038FB0C4 LDR X0, [X21]
	0x038FB0C8 LDR X19, [X19]
	0x038FB0CC LDR W8, [X0 + 0xE0]
	0x038FB0D0 CBNZ W8, 0x38FB0D8
	0x038FB0D4 BL 0x1C16DFC
	0x038FB0D8 MOV X0, X19
	0x038FB0DC MOV X1, X31
	0x038FB0E0 BL 0x338C698
	0x038FB0E4 LDR X8, [X20]
	0x038FB0E8 MOV X1, X0
	0x038FB0EC MOV X2, X31
	0x038FB0F0 MOV X0, X8
	0x038FB0F4 BL 0x3C30CE8
	0x038FB0F8 CBZ X0, 0x38FB130
	0x038FB0FC ADRP X9, 0x7FC000
	0x038FB100 LDR X9, [X9 + 0xCA0]
	0x038FB104 LDR X8, [X0]
	0x038FB108 LDR X1, [X9]
	0x038FB10C LDRB W10, [X8 + 0x130]
	0x038FB110 LDRB W9, [X1 + 0x130]
	0x038FB114 CMP W10, W9
	0x038FB118 B.CC 0x38FB13C
	0x038FB11C LDR X8, [X8 + 0xC8]
	0x038FB120 ADD X8, X8, X9, 0x3, LSL
	0x038FB124 LDUR X8, [X8 - 0x8]
	0x038FB128 CMP X8, X1
	0x038FB12C B.NE 0x38FB13C
	0x038FB130 LDP X20, X19, [X31 + 0x10]
	0x038FB134 LDP X30, X21, [X31], #0x20
	0x038FB138 RET
	0x038FB13C BL 0x1C171E0
	0x038FB140 STP X30, X21, [X31 - 0x20]!
	0x038FB144 STP X20, X19, [X31 + 0x10]
	0x038FB148 ADRP X20, 0xAE6000
	0x038FB14C ADRP X19, 0x852000
	0x038FB150 LDRB W8, [X20 + 0x772]
	0x038FB154 LDR X19, [X19 + 0xAC8]
	0x038FB158 TBNZ X8, 0x0, 0x38FB1A0
	0x038FB15C ADRP X0, 0x852000
	0x038FB160 LDR X0, [X0 + 0xAC8]
	0x038FB164 BL 0x1C16CF4
	0x038FB168 ADRP X0, 0x821000
	0x038FB16C LDR X0, [X0 + 0x278]
	0x038FB170 BL 0x1C16CF4
	0x038FB174 ADRP X0, 0x7FC000
	0x038FB178 LDR X0, [X0 + 0xCA0]
	0x038FB17C BL 0x1C16CF4
	0x038FB180 ADRP X0, 0x7F8000
	0x038FB184 LDR X0, [X0 + 0x6C0]
	0x038FB188 BL 0x1C16CF4
	0x038FB18C ADRP X0, 0x852000
	0x038FB190 LDR X0, [X0 + 0xB38]
	0x038FB194 BL 0x1C16CF4
	0x038FB198 MOVZ W8, 0x1
	0x038FB19C STRB W8, [X20 + 0x772]
	0x038FB1A0 LDR X0, [X19]
	0x038FB1A4 ADRP X19, 0x821000
	0x038FB1A8 ADRP X21, 0x7F8000
	0x038FB1AC LDR W8, [X0 + 0xE0]
	0x038FB1B0 LDR X19, [X19 + 0x278]
	0x038FB1B4 LDR X21, [X21 + 0x6C0]
	0x038FB1B8 CBNZ W8, 0x38FB1C0
	0x038FB1BC BL 0x1C16DFC
	0x038FB1C0 ADRP X20, 0x852000
	0x038FB1C4 LDR X20, [X20 + 0xB38]
	0x038FB1C8 BL 0x38FA3E8
	0x038FB1CC LDR X0, [X21]
	0x038FB1D0 LDR X19, [X19]
	0x038FB1D4 LDR W8, [X0 + 0xE0]
	0x038FB1D8 CBNZ W8, 0x38FB1E0
	0x038FB1DC BL 0x1C16DFC
	0x038FB1E0 MOV X0, X19
	0x038FB1E4 MOV X1, X31
	0x038FB1E8 BL 0x338C698
	0x038FB1EC LDR X8, [X20]
	0x038FB1F0 MOV X1, X0
	0x038FB1F4 MOV X2, X31
	0x038FB1F8 MOV X0, X8
	0x038FB1FC BL 0x3C30CE8
	0x038FB200 CBZ X0, 0x38FB238
	0x038FB204 ADRP X9, 0x7FC000
	0x038FB208 LDR X9, [X9 + 0xCA0]
	0x038FB20C LDR X8, [X0]
	0x038FB210 LDR X1, [X9]
	0x038FB214 LDRB W10, [X8 + 0x130]
	0x038FB218 LDRB W9, [X1 + 0x130]
	0x038FB21C CMP W10, W9
	0x038FB220 B.CC 0x38FB244
	0x038FB224 LDR X8, [X8 + 0xC8]
	0x038FB228 ADD X8, X8, X9, 0x3, LSL
	0x038FB22C LDUR X8, [X8 - 0x8]
	0x038FB230 CMP X8, X1
	0x038FB234 B.NE 0x38FB244
	0x038FB238 LDP X20, X19, [X31 + 0x10]
	0x038FB23C LDP X30, X21, [X31], #0x20
	0x038FB240 RET
	0x038FB244 BL 0x1C171E0
	0x038FB248 STR X30, [X31 - 0x30]!
	0x038FB24C STP X22, X21, [X31 + 0x10]
	0x038FB250 STP X20, X19, [X31 + 0x20]
	0x038FB254 ADRP X19, 0xAE6000
	0x038FB258 ADRP X21, 0x852000
	0x038FB25C LDRB W8, [X19 + 0x773]
	0x038FB260 LDR X21, [X21 + 0xAC8]
	0x038FB264 TBNZ X8, 0x0, 0x38FB2C4
	0x038FB268 ADRP X0, 0x852000
	0x038FB26C LDR X0, [X0 + 0xAC8]
	0x038FB270 BL 0x1C16CF4
	0x038FB274 ADRP X0, 0x7FF000
	0x038FB278 LDR X0, [X0 + 0x780]
	0x038FB27C BL 0x1C16CF4
	0x038FB280 ADRP X0, 0x821000
	0x038FB284 LDR X0, [X0 + 0x278]
	0x038FB288 BL 0x1C16CF4
	0x038FB28C ADRP X0, 0x7FC000
	0x038FB290 LDR X0, [X0 + 0xCA0]
	0x038FB294 BL 0x1C16CF4
	0x038FB298 ADRP X0, 0x7F8000
	0x038FB29C LDR X0, [X0 + 0x598]
	0x038FB2A0 BL 0x1C16CF4
	0x038FB2A4 ADRP X0, 0x7F8000
	0x038FB2A8 LDR X0, [X0 + 0x6C0]
	0x038FB2AC BL 0x1C16CF4
	0x038FB2B0 ADRP X0, 0x852000

ISIL:
	001 Move [X31-112], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0xAE8000
	016 Move X22, 0x854000
	017 Move W8, [X21+1895]
	018 Move X22, [X22+2720]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x854000
	026 Move X0, [X0+2720]
	027 Call 0x1C17CF4
	028 Move X0, 0x854000
	029 Move X0, [X0+2728]
	030 Call 0x1C17CF4
	031 Move X0, 0x7FA000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x822000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0x822000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0x7FA000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x854000
	044 Move X0, [X0+2736]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1895], W8
	048 Move X1, [X22]
	049 Move X0, X20
	050 Call Enumerable.Any, X0
	051 Move S11, W31
	052 Move S12, W31
	053 Move S13, W31
	054 Move S14, W31
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {279}
	059 Move X8, 0x854000
	060 Move X8, [X8+2728]
	061 Move X0, X20
	062 Move X1, [X8]
	063 Call Enumerable.First, X0
	064 Compare X19, 0
	065 JumpIfEqual {300}
	066 Move X22, 0x854000
	067 Move X8, [X19]
	068 Move X22, [X22+2736]
	069 Move W21, W0
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X22]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X19
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X2, [X0+8]
	088 Move X0, X19
	089 Move W1, W21
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19]
	092 Move X1, [X22]
	093 Move V8, V0
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X2, [X0+8]
	111 Move X0, X19
	112 Move W1, W21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X20, 0
	115 JumpIfEqual {300}
	116 Move X10, 0x822000
	117 Move X8, [X20]
	118 Move X10, [X10+1976]
	119 Move V9, V1
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X10]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X20
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X23, 0x7FA000
	141 Move X24, 0x822000
	142 Move X23, [X23+3608]
	143 Move X24, [X24+1984]
	144 Move X20, X0
	145 Move V11, V9
	146 Move V12, V9
	147 Move V13, V8
	148 Move V14, V8
	149 Compare X20, 0
	150 JumpIfEqual {299}
	151 Move X8, [X20]
	152 Move X1, [X23]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X20
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X20
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {251}
	176 Move X8, [X20]
	177 Move X1, [X24]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X20
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X20
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X8, [X19]
	198 Move X1, [X22]
	199 Move W21, W0
	200 NotImplemented "Instruction LDRH not yet implemented."
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X19
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X19
	218 Move W1, W21
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, [X19]
	221 Move X1, [X22]
	222 Move V10, V0
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move X0, X19
	233 Move W2, W31
	234 Call 0x1C5D788
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Add X8, X8, X9
	237 Add X0, X8, 312
	238 Move X8, [X0]
	239 Move X2, [X0+8]
	240 Move X0, X19
	241 Move W1, W21
	242 NotImplemented "Instruction BLR not yet implemented."
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 NotImplemented "Instruction FCSEL not yet implemented."
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 NotImplemented "Instruction FCSEL not yet implemented."
	247 NotImplemented "Instruction FCMP not yet implemented."
	248 NotImplemented "Instruction FCSEL not yet implemented."
	249 NotImplemented "Instruction FCMP not yet implemented."
	250 Move V11, V1
	251 Move X19, X31
	252 Compare X20, 0
	253 JumpIfEqual {277}
	254 Move X10, 0x7F9000
	255 Move X8, [X20]
	256 Move X10, [X10+3584]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Move X1, [X10]
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move X0, X20
	268 Move W2, W31
	269 Call 0x1C5D788
	270 NotImplemented "Instruction LDRSW not yet implemented."
	271 Add X8, X8, X9
	272 Add X0, X8, 312
	273 Move X8, [X0]
	274 Move X1, [X0+8]
	275 Move X0, X20
	276 NotImplemented "Instruction BLR not yet implemented."
	277 Compare X19, 0
	278 JumpIfNotEqual {301}
	279 Add S0, S13, S14
	280 Add S2, S11, S12
	281 Move X20, [X31+96]
	282 Move X19, [X31+104]
	283 Move X22, [X31+80]
	284 Move X21, [X31+88]
	285 Move X24, [X31+64]
	286 Move X23, [X31+72]
	287 Move X30, [X31+56]
	288 Move D9, [X31+40]
	289 Move D8, [X31+48]
	290 Move D11, [X31+24]
	291 Move D10, [X31+32]
	292 Move D13, [X31+8]
	293 Move D12, [X31+16]
	294 Move S1, 0.5
	295 Multiply S0, S0, S1
	296 Multiply S1, S2, S1
	297 Move V14, [X31+112]
	298 Return X0
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Move X0, X19
	302 Call 0x1C17F18
	303 Move X21, X0
	304 Move V11, V9
	305 Move V12, V9
	306 Move V13, V8
	307 Move V14, V8
	308 Move X21, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X0, X21
	311 Call 0x3EB2AD0
	312 Move X19, [X0]
	313 Call 0x3EB2AE0
	314 Move X19, X31
	315 Move X21, X0
	316 Compare X20, 0
	317 JumpIfEqual {341}
	318 Move X10, 0x7F9000
	319 Move X8, [X20]
	320 Move X10, [X10+3584]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Move X1, [X10]
	323 Compare X9, 0
	324 JumpIfEqual {331}
	325 Move X10, [X8+176]
	326 Add X10, X10, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X9, X9, 1
	330 Add X10, X10, 16
	331 Move X0, X20
	332 Move W2, W31
	333 Call 0x1C5D788
	334 NotImplemented "Instruction LDRSW not yet implemented."
	335 Add X8, X8, X9
	336 Add X0, X8, 312
	337 Move X8, [X0]
	338 Move X1, [X0+8]
	339 Move X0, X20
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Compare X19, 0
	342 JumpIfNotEqual {345}
	343 Move X0, X21
	344 Call 0x1D2D690
	345 Move X0, X19
	346 Call 0x1C17F18
	347 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x038FB2B4 LDR X0, [X0 + 0xB40]
	0x038FB2B8 BL 0x1C16CF4
	0x038FB2BC MOVZ W8, 0x1
	0x038FB2C0 STRB W8, [X19 + 0x773]
	0x038FB2C4 LDR X0, [X21]
	0x038FB2C8 ADRP X22, 0x7F8000
	0x038FB2CC LDR W8, [X0 + 0xE0]
	0x038FB2D0 LDR X22, [X22 + 0x598]
	0x038FB2D4 CBNZ W8, 0x38FB2DC
	0x038FB2D8 BL 0x1C16DFC
	0x038FB2DC BL 0x38FA3E8
	0x038FB2E0 LDR X8, [X21]
	0x038FB2E4 LDR X0, [X22]
	0x038FB2E8 LDR X8, [X8 + 0xB8]
	0x038FB2EC LDR W9, [X0 + 0xE0]
	0x038FB2F0 LDR X19, [X8 + 0x48]
	0x038FB2F4 CBNZ W9, 0x38FB2FC
	0x038FB2F8 BL 0x1C16DFC
	0x038FB2FC MOV X0, X19
	0x038FB300 MOV X1, X31
	0x038FB304 MOV X2, X31
	0x038FB308 BL 0x3C3883C
	0x038FB30C TBZ X0, 0x0, 0x38FB4B8
	0x038FB310 ADRP X8, 0x7F8000
	0x038FB314 LDR X8, [X8 + 0x6C0]
	0x038FB318 LDR X0, [X8]
	0x038FB31C ADRP X8, 0x821000
	0x038FB320 LDR X8, [X8 + 0x278]
	0x038FB324 LDR W9, [X0 + 0xE0]
	0x038FB328 LDR X19, [X8]
	0x038FB32C CBNZ W9, 0x38FB334
	0x038FB330 BL 0x1C16DFC
	0x038FB334 MOV X0, X19
	0x038FB338 MOV X1, X31
	0x038FB33C BL 0x338C698
	0x038FB340 CBZ X0, 0x38FB4E4
	0x038FB344 ADRP X8, 0x852000
	0x038FB348 LDR X8, [X8 + 0xB40]
	0x038FB34C MOVZ W2, 0x38
	0x038FB350 MOV X3, X31
	0x038FB354 LDR X1, [X8]
	0x038FB358 BL 0x3397600
	0x038FB35C MOV X1, X31
	0x038FB360 MOV X2, X31
	0x038FB364 MOV X19, X0
	0x038FB368 BL 0x32CE528
	0x038FB36C TBZ X0, 0x0, 0x38FB3C4
	0x038FB370 CBZ X19, 0x38FB4E4
	0x038FB374 MOV X0, X19
	0x038FB378 MOV X1, X31
	0x038FB37C MOV X2, X31
	0x038FB380 MOV X3, X31
	0x038FB384 BL 0x32CE4E0
	0x038FB388 LDR X8, [X21]
	0x038FB38C MOV X19, X0
	0x038FB390 LDR W9, [X8 + 0xE0]
	0x038FB394 CBZ W9, 0x38FB3CC
	0x038FB398 CBZ X19, 0x38FB3D8
	0x038FB39C ADRP X8, 0x7FC000
	0x038FB3A0 LDR X8, [X8 + 0xCA0]
	0x038FB3A4 LDR X9, [X19]
	0x038FB3A8 LDR X8, [X8]
	0x038FB3AC LDRB W11, [X9 + 0x130]
	0x038FB3B0 LDRB W10, [X8 + 0x130]
	0x038FB3B4 CMP W11, W10
	0x038FB3B8 B.CS 0x38FB3E8
	0x038FB3BC MOV X8, X31
	0x038FB3C0 B 0x38FB3FC
	0x038FB3C4 LDR X0, [X21]
	0x038FB3C8 B 0x38FB408
	0x038FB3CC MOV X0, X8
	0x038FB3D0 BL 0x1C16DFC
	0x038FB3D4 CBNZ X19, 0x38FB39C
	0x038FB3D8 LDR X0, [X21]
	0x038FB3DC LDR X8, [X0 + 0xB8]
	0x038FB3E0 STR X31, [X8 + 0x48]
	0x038FB3E4 B 0x38FB408

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAE7000
	007 Move X21, 0x7F9000
	008 Move W8, [X20+1896]
	009 Move X21, [X21+2760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x7F9000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x853000
	019 Move X0, [X0+2744]
	020 Call 0x1C17CF4
	021 Move X0, 0x853000
	022 Move X0, [X0+2752]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F9000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1896], W8
	029 Move X0, [X21]
	030 Move W1, 5
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {82}
	034 Move W8, [X0+24]
	035 Move X20, X0
	036 Compare W8, 0
	037 JumpIfEqual {81}
	038 Move X8, 0x853000
	039 Move X8, [X8+2744]
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Move X2, X31
	043 Move X8, [X8]
	044 Move X3, X31
	045 Move [X20+32], X8
	046 Move X8, [X19+16]
	047 Move [X31+8], X8
	048 Call 0x25F44C4
	049 Move W8, [X20+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X20+40], X0
	053 Move X8, 0x853000
	054 Move X8, [X8+2752]
	055 Add X0, X31, 8
	056 Move X1, X31
	057 Move X2, X31
	058 Move X8, [X8]
	059 Move X3, X31
	060 Move [X20+48], X8
	061 Move V0, [X19+24]
	062 Move [X31+8], D0
	063 Call 0x25F44C4
	064 Move W8, [X20+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X20+56], X0
	068 Move X8, 0x7F9000
	069 Move X8, [X8+2120]
	070 Move X0, X20
	071 Move X1, X31
	072 Move X8, [X8]
	073 Move [X20+64], X8
	074 Call String.Concat, X0
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 Add X31, X31, 48
	080 Return X0
	081 Call 0x1C17F28
	082 Call 0x1C17F20

