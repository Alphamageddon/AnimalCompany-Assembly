Type: UnityEngine.ProBuilder.VertexPositioning

Method: UnityEngine.Vector3[] VerticesInWorldSpace(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x039418FC BL 0x1C16CF4
	0x03941900 ADRP X0, 0x7B2000
	0x03941904 LDR X0, [X0 + 0xE18]
	0x03941908 BL 0x1C16CF4
	0x0394190C MOVZ W8, 0x1
	0x03941910 STRB W8, [X21 + 0x958]
	0x03941914 CBZ X20, 0x3941AD4
	0x03941918 MOV X0, X20
	0x0394191C MOV X1, X31
	0x03941920 MOV X2, X31
	0x03941924 BL 0x3912114
	0x03941928 LDR X8, [X20 + 0x30]
	0x0394192C CBZ X8, 0x3941AD4
	0x03941930 LDR W9, [X8 + 0x18]
	0x03941934 CMP W9, W19
	0x03941938 B.LS 0x3941AD8
	0x0394193C ADD X8, X8, W19, 0x3, SXTW
	0x03941940 MOV X21, X0
	0x03941944 LDR X0, [X8 + 0x20]
	0x03941948 CBZ X0, 0x3941AD4
	0x0394194C ADRP X23, 0x7B2000
	0x03941950 LDR X23, [X23 + 0xE00]
	0x03941954 MOV X1, X31
	0x03941958 BL 0x3934978
	0x0394195C MOV X19, X0
	0x03941960 CBZ X0, 0x3941ADC
	0x03941964 ADRP X24, 0x7B2000
	0x03941968 ADRP X25, 0x7DA000
	0x0394196C LDR X24, [X24 + 0xE18]
	0x03941970 LDR X25, [X25 + 0x7C0]
	0x03941974 LDR X8, [X19]
	0x03941978 LDR X1, [X24]
	0x0394197C LDRH W9, [X8 + 0x12E]
	0x03941980 CBZ X9, 0x39419A4
	0x03941984 LDR X10, [X8 + 0xB0]
	0x03941988 ADD X10, X10, 0x8
	0x0394198C LDUR X11, [X10 - 0x8]
	0x03941990 CMP X11, X1
	0x03941994 B.EQ 0x39419B4
	0x03941998 SUBS X9, X9, 0x1
	0x0394199C ADD X10, X10, 0x10
	0x039419A0 B.NE 0x394198C
	0x039419A4 MOV X0, X19
	0x039419A8 MOV W2, W31
	0x039419AC BL 0x1C5C788
	0x039419B0 B 0x39419C0
	0x039419B4 LDRSW X9, [X10]
	0x039419B8 ADD X8, X8, X9, 0x4, LSL
	0x039419BC ADD X0, X8, 0x138
	0x039419C0 LDP X8, X1, [X0]
	0x039419C4 MOV X0, X19
	0x039419C8 BLR X8
	0x039419CC TBZ X0, 0x0, 0x3941A44
	0x039419D0 LDR X8, [X19]
	0x039419D4 LDR X1, [X25]
	0x039419D8 LDRH W9, [X8 + 0x12E]
	0x039419DC CBZ X9, 0x3941A00
	0x039419E0 LDR X10, [X8 + 0xB0]
	0x039419E4 ADD X10, X10, 0x8
	0x039419E8 LDUR X11, [X10 - 0x8]
	0x039419EC CMP X11, X1
	0x039419F0 B.EQ 0x3941A10
	0x039419F4 SUBS X9, X9, 0x1
	0x039419F8 ADD X10, X10, 0x10
	0x039419FC B.NE 0x39419E8
	0x03941A00 MOV X0, X19
	0x03941A04 MOV W2, W31
	0x03941A08 BL 0x1C5C788
	0x03941A0C B 0x3941A1C
	0x03941A10 LDRSW X9, [X10]
	0x03941A14 ADD X8, X8, X9, 0x4, LSL
	0x03941A18 ADD X0, X8, 0x138
	0x03941A1C LDP X8, X1, [X0]
	0x03941A20 MOV X0, X19
	0x03941A24 BLR X8
	0x03941A28 CBZ X21, 0x3941ACC
	0x03941A2C LDR W8, [X21 + 0x18]
	0x03941A30 CMP W0, W8
	0x03941A34 B.CS 0x3941AD0
	0x03941A38 ADD X8, X21, W0, 0x3, SXTW
	0x03941A3C STR X22, [X8 + 0x20]
	0x03941A40 B 0x3941974
	0x03941A44 MOV X22, X31
	0x03941A48 CBZ X19, 0x3941AA4
	0x03941A4C LDR X8, [X19]
	0x03941A50 LDR X1, [X23]
	0x03941A54 LDRH W9, [X8 + 0x12E]
	0x03941A58 CBZ X9, 0x3941A7C
	0x03941A5C LDR X10, [X8 + 0xB0]
	0x03941A60 ADD X10, X10, 0x8
	0x03941A64 LDUR X11, [X10 - 0x8]
	0x03941A68 CMP X11, X1
	0x03941A6C B.EQ 0x3941A8C
	0x03941A70 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xAA1000
	010 Move X21, 0x7B3000
	011 Move W8, [X20+2384]
	012 Move X21, [X21+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7B3000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B5000
	022 Move X0, [X0+2480]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2384], W8
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {94}
	039 Compare X19, 0
	040 JumpIfEqual {92}
	041 Move X20, 0x7B5000
	042 Move X20, [X20+2480]
	043 Move X0, X19
	044 Move X1, X31
	045 Call ProBuilderMesh.get_vertexCount, X0
	046 Move X8, [X20]
	047 Move W21, W0
	048 Move W1, W21
	049 Move X0, X8
	050 Call 0x1C17D6C
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, X0
	053 Move X23, [X19+88]
	054 Move X22, X31
	055 Move W21, W21
	056 Add X24, X20, 40
	057 Add X25, X23, 40
	058 Move X0, X19
	059 Move X1, X31
	060 Call Component.get_transform, X0
	061 Compare X23, 0
	062 JumpIfEqual {92}
	063 Move W8, [X23+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {92}
	067 Move S1, [X25-4]
	068 Move S2, [X25]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X1, X31
	071 Call Transform.TransformPoint, X0, X1
	072 Compare X20, 0
	073 JumpIfEqual {92}
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X22, X22, 1
	077 Move [X24-8], S0
	078 Move [X24], S1
	079 Move [X24+12], S2
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X25, X25, 12
	082 Move X0, X20
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x1C17F28
	094 Move X0, 0x7B8000
	095 Move X0, [X0+1320]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0x80D000
	100 Move X0, [X0+3728]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call ArgumentNullException..ctor, X0, X1
	106 Move X0, 0x80E000
	107 Move X0, [X0+3968]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Call 0x1C17DEC

Method: System.Void TranslateVerticesInWorldSpace(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes, UnityEngine.Vector3 offset)

Disassembly:
	0x03941A74 ADD X10, X10, 0x10
	0x03941A78 B.NE 0x3941A64
	0x03941A7C MOV X0, X19
	0x03941A80 MOV W2, W31
	0x03941A84 BL 0x1C5C788
	0x03941A88 B 0x3941A98
	0x03941A8C LDRSW X9, [X10]
	0x03941A90 ADD X8, X8, X9, 0x4, LSL
	0x03941A94 ADD X0, X8, 0x138
	0x03941A98 LDP X8, X1, [X0]
	0x03941A9C MOV X0, X19
	0x03941AA0 BLR X8
	0x03941AA4 CBNZ X22, 0x3941AE0
	0x03941AA8 MOV X0, X20
	0x03941AAC MOV X1, X21
	0x03941AB0 LDP X20, X19, [X31 + 0x30]
	0x03941AB4 LDP X22, X21, [X31 + 0x20]
	0x03941AB8 LDP X24, X23, [X31 + 0x10]
	0x03941ABC MOV W2, W31
	0x03941AC0 MOV X3, X31
	0x03941AC4 LDP X30, X25, [X31], #0x40
	0x03941AC8 B 0x3916CF4
	0x03941ACC BL 0x1C16F20
	0x03941AD0 BL 0x1C16F28
	0x03941AD4 BL 0x1C16F20
	0x03941AD8 BL 0x1C16F28
	0x03941ADC BL 0x1C16F20
	0x03941AE0 MOV X0, X22
	0x03941AE4 BL 0x1C16F18
	0x03941AE8 B 0x3941AF4
	0x03941AEC B 0x3941AF4
	0x03941AF0 B 0x3941AF4
	0x03941AF4 CMP W1, 0x1
	0x03941AF8 B.NE 0x3941B0C
	0x03941AFC BL 0x3EB1AD0
	0x03941B00 LDR X22, [X0]
	0x03941B04 BL 0x3EB1AE0
	0x03941B08 B 0x3941A48
	0x03941B0C MOV X20, X0
	0x03941B10 MOV X22, X31
	0x03941B14 B 0x3941B1C
	0x03941B18 MOV X20, X0
	0x03941B1C CBZ X19, 0x3941B78
	0x03941B20 LDR X8, [X19]
	0x03941B24 LDR X1, [X23]
	0x03941B28 LDRH W9, [X8 + 0x12E]
	0x03941B2C CBZ X9, 0x3941B50
	0x03941B30 LDR X10, [X8 + 0xB0]
	0x03941B34 ADD X10, X10, 0x8
	0x03941B38 LDUR X11, [X10 - 0x8]
	0x03941B3C CMP X11, X1
	0x03941B40 B.EQ 0x3941B60
	0x03941B44 SUBS X9, X9, 0x1
	0x03941B48 ADD X10, X10, 0x10
	0x03941B4C B.NE 0x3941B38
	0x03941B50 MOV X0, X19
	0x03941B54 MOV W2, W31
	0x03941B58 BL 0x1C5C788
	0x03941B5C B 0x3941B6C
	0x03941B60 LDRSW X9, [X10]
	0x03941B64 ADD X8, X8, X9, 0x4, LSL
	0x03941B68 ADD X0, X8, 0x138
	0x03941B6C LDP X8, X1, [X0]
	0x03941B70 MOV X0, X19
	0x03941B74 BLR X8
	0x03941B78 CBNZ X22, 0x3941B84
	0x03941B7C MOV X0, X20
	0x03941B80 BL 0x1D2C690
	0x03941B84 MOV X0, X22

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAA1000
	010 Move X22, 0x7B3000
	011 Move W8, [X21+2385]
	012 Move X22, [X22+1432]
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x7B3000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x80E000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2385], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {65}
	043 Move X8, 0x80E000
	044 Move X8, [X8+3976]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X19
	052 Move V1, V9
	053 Move V2, V8
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+24]
	059 Move D9, [X31+8]
	060 Move D8, [X31+16]
	061 Move S3, W31
	062 Move V0, V10
	063 Move W2, W31
	064 Move V10, [X31+64]
	065 Move X0, 0x7B8000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x80D000
	071 Move X0, [X0+3728]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, 0x80E000
	078 Move X0, [X0+3984]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Void TranslateVerticesInWorldSpace(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32[] indexes, UnityEngine.Vector3 offset, System.Single snapValue, System.Boolean snapAxisOnly)

Disassembly:
	0x03941B88 BL 0x1C16F18
	0x03941B8C BL 0x1990590
	0x03941B90 STR X30, [X31 - 0x30]!
	0x03941B94 STP X22, X21, [X31 + 0x10]
	0x03941B98 STP X20, X19, [X31 + 0x20]
	0x03941B9C ADRP X21, 0xAA0000
	0x03941BA0 ADRP X22, 0x7B3000
	0x03941BA4 ADRP X19, 0x7B6000
	0x03941BA8 ADRP X20, 0x80D000
	0x03941BAC LDRB W8, [X21 + 0x959]
	0x03941BB0 LDR X22, [X22 + 0xE30]
	0x03941BB4 LDR X19, [X19 + 0xB70]
	0x03941BB8 LDR X20, [X20 + 0xF88]
	0x03941BBC TBNZ X8, 0x0, 0x3941BEC
	0x03941BC0 ADRP X0, 0x7B6000
	0x03941BC4 LDR X0, [X0 + 0xB70]
	0x03941BC8 BL 0x1C16CF4
	0x03941BCC ADRP X0, 0x7B3000
	0x03941BD0 LDR X0, [X0 + 0xE30]
	0x03941BD4 BL 0x1C16CF4
	0x03941BD8 ADRP X0, 0x80D000
	0x03941BDC LDR X0, [X0 + 0xF88]
	0x03941BE0 BL 0x1C16CF4
	0x03941BE4 MOVZ W8, 0x1
	0x03941BE8 STRB W8, [X21 + 0x959]
	0x03941BEC LDR X0, [X22]
	0x03941BF0 BL 0x1C16F10
	0x03941BF4 LDR X1, [X19]
	0x03941BF8 MOV X19, X0
	0x03941BFC BL 0x2FDBF14
	0x03941C00 LDR X8, [X20]
	0x03941C04 LDP X22, X21, [X31 + 0x10]
	0x03941C08 LDR X8, [X8 + 0xB8]
	0x03941C0C STR X19, [X8]
	0x03941C10 LDP X20, X19, [X31 + 0x20]
	0x03941C14 LDR X30, [X31], #0x30
	0x03941C18 RET
	0x03941C1C LDP X8, X1, [X0 + 0x10]
	0x03941C20 MOV X0, X8
	0x03941C24 RET
	0x03941C28 STP X1, X2, [X0 + 0x10]
	0x03941C2C RET
	0x03941C30 LDR X0, [X0 + 0x20]
	0x03941C34 RET
	0x03941C38 STR X1, [X0 + 0x20]
	0x03941C3C RET
	0x03941C40 LDR X0, [X0 + 0x28]
	0x03941C44 RET
	0x03941C48 STR X1, [X0 + 0x28]
	0x03941C4C RET
	0x03941C50 LDR X0, [X0 + 0x30]
	0x03941C54 RET
	0x03941C58 STR X1, [X0 + 0x30]
	0x03941C5C RET
	0x03941C60 LDR X0, [X0 + 0x38]
	0x03941C64 RET
	0x03941C68 STR X1, [X0 + 0x38]
	0x03941C6C RET
	0x03941C70 MOV X1, X31
	0x03941C74 B 0x33BDD8C
	0x03941C78 SUB X31, X31, 0x30
	0x03941C7C STP X30, X21, [X31 + 0x10]
	0x03941C80 STP X20, X19, [X31 + 0x20]
	0x03941C84 ADRP X21, 0xAA0000
	0x03941C88 LDRB W8, [X21 + 0x95A]
	0x03941C8C MOV X19, X1
	0x03941C90 MOV X20, X0
	0x03941C94 TBNZ X8, 0x0, 0x3941CAC
	0x03941C98 ADRP X0, 0x7DA000
	0x03941C9C LDR X0, [X0 + 0x600]
	0x03941CA0 BL 0x1C16CF4
	0x03941CA4 MOVZ W8, 0x1
	0x03941CA8 STRB W8, [X21 + 0x95A]
	0x03941CAC CBZ X19, 0x3941CE8
	0x03941CB0 ADRP X8, 0x7DA000
	0x03941CB4 LDR X8, [X8 + 0x600]
	0x03941CB8 LDR X9, [X20 + 0x10]
	0x03941CBC LDR X0, [X8]
	0x03941CC0 STR X9, [X31 + 0x8]
	0x03941CC4 LDR X19, [X19 + 0x10]
	0x03941CC8 LDR W8, [X0 + 0xE0]
	0x03941CCC CBNZ W8, 0x3941CD4
	0x03941CD0 BL 0x1C16DFC
	0x03941CD4 ADD X0, X31, 0x8
	0x03941CD8 MOV X1, X19
	0x03941CDC MOV X2, X31
	0x03941CE0 BL 0x38FDD60
	0x03941CE4 B 0x3941CEC
	0x03941CE8 MOV W0, W31
	0x03941CEC LDP X20, X19, [X31 + 0x20]
	0x03941CF0 LDP X30, X21, [X31 + 0x10]
	0x03941CF4 AND W0, W0, 0x1
	0x03941CF8 ADD X31, X31, 0x30
	0x03941CFC RET
	0x03941D00 SUB X31, X31, 0x30
	0x03941D04 STP X30, X21, [X31 + 0x10]
	0x03941D08 STP X20, X19, [X31 + 0x20]
	0x03941D0C ADRP X21, 0xAA0000
	0x03941D10 LDRB W8, [X21 + 0x95B]
	0x03941D14 MOV X19, X1
	0x03941D18 MOV X20, X0
	0x03941D1C TBNZ X8, 0x0, 0x3941D40
	0x03941D20 ADRP X0, 0x7DA000
	0x03941D24 LDR X0, [X0 + 0x600]
	0x03941D28 BL 0x1C16CF4
	0x03941D2C ADRP X0, 0x80D000
	0x03941D30 LDR X0, [X0 + 0xB08]
	0x03941D34 BL 0x1C16CF4
	0x03941D38 MOVZ W8, 0x1
	0x03941D3C STRB W8, [X21 + 0x95B]
	0x03941D40 CBZ X19, 0x3941DDC
	0x03941D44 ADRP X8, 0x80D000
	0x03941D48 LDR X8, [X8 + 0xB08]
	0x03941D4C LDR X0, [X19]
	0x03941D50 LDR X8, [X8]
	0x03941D54 CMP X0, X8
	0x03941D58 B.NE 0x3941D70
	0x03941D5C MOV X0, X20
	0x03941D60 MOV X1, X19
	0x03941D64 BL 0x3941C78
	0x03941D68 TBNZ X0, 0x0, 0x3941DD4
	0x03941D6C LDR X0, [X19]
	0x03941D70 ADRP X21, 0x7DA000
	0x03941D74 LDR X21, [X21 + 0x600]
	0x03941D78 LDR X8, [X21]
	0x03941D7C CMP X0, X8
	0x03941D80 B.NE 0x3941DDC
	0x03941D84 LDR X8, [X20 + 0x10]
	0x03941D88 STR X8, [X31 + 0x8]
	0x03941D8C LDR W8, [X0 + 0xE0]
	0x03941D90 CBZ W8, 0x3941D9C
	0x03941D94 MOV X1, X0
	0x03941D98 B 0x3941DA8
	0x03941D9C BL 0x1C16DFC
	0x03941DA0 LDR X1, [X21]
	0x03941DA4 LDR X0, [X19]
	0x03941DA8 LDR X8, [X0 + 0x40]
	0x03941DAC LDR X9, [X1 + 0x40]
	0x03941DB0 MOV X0, X19
	0x03941DB4 CMP X8, X9
	0x03941DB8 B.NE 0x3941DF0
	0x03941DBC BL 0x1C16E08
	0x03941DC0 LDR X1, [X0]
	0x03941DC4 ADD X0, X31, 0x8
	0x03941DC8 MOV X2, X31
	0x03941DCC BL 0x38FDD60
	0x03941DD0 TBZ X0, 0x0, 0x3941DDC
	0x03941DD4 MOVZ W0, 0x1
	0x03941DD8 B 0x3941DE0
	0x03941DDC MOV W0, W31
	0x03941DE0 LDP X20, X19, [X31 + 0x20]
	0x03941DE4 LDP X30, X21, [X31 + 0x10]
	0x03941DE8 ADD X31, X31, 0x30
	0x03941DEC RET
	0x03941DF0 BL 0x1C171E0
	0x03941DF4 SUB X31, X31, 0x30
	0x03941DF8 STP X30, X21, [X31 + 0x10]
	0x03941DFC STP X20, X19, [X31 + 0x20]
	0x03941E00 ADRP X21, 0xAA0000
	0x03941E04 ADRP X20, 0x7DA000
	0x03941E08 LDRB W8, [X21 + 0x95C]
	0x03941E0C LDR X20, [X20 + 0x600]
	0x03941E10 MOV X19, X0
	0x03941E14 TBNZ X8, 0x0, 0x3941E2C
	0x03941E18 ADRP X0, 0x7DA000
	0x03941E1C LDR X0, [X0 + 0x600]
	0x03941E20 BL 0x1C16CF4
	0x03941E24 MOVZ W8, 0x1
	0x03941E28 STRB W8, [X21 + 0x95C]
	0x03941E2C LDR X8, [X19 + 0x10]
	0x03941E30 LDR X0, [X20]
	0x03941E34 STR X8, [X31 + 0x8]
	0x03941E38 LDR W8, [X0 + 0xE0]
	0x03941E3C CBNZ W8, 0x3941E44
	0x03941E40 BL 0x1C16DFC
	0x03941E44 ADD X0, X31, 0x8
	0x03941E48 MOV X1, X31
	0x03941E4C BL 0x38FDE74
	0x03941E50 LDP X20, X19, [X31 + 0x20]
	0x03941E54 LDP X30, X21, [X31 + 0x10]
	0x03941E58 ADD X31, X31, 0x30
	0x03941E5C RET
	0x03941E60 STR X30, [X31 - 0x10]!
	0x03941E64 MOV W8, W31
	0x03941E68 MOV X9, X0
	0x03941E6C CBZ X9, 0x3941E90
	0x03941E70 LDR X9, [X9 + 0x28]
	0x03941E74 ADD W8, W8, 0x1
	0x03941E78 CBZ X9, 0x3941E84
	0x03941E7C CMP X9, X0
	0x03941E80 B.NE 0x3941E6C
	0x03941E84 MOV W0, W8
	0x03941E88 LDR X30, [X31], #0x10
	0x03941E8C RET
	0x03941E90 BL 0x1C16F20
	0x03941E94 SUB X31, X31, 0x40
	0x03941E98 STR X30, [X31 + 0x10]
	0x03941E9C STP X22, X21, [X31 + 0x20]
	0x03941EA0 STP X20, X19, [X31 + 0x30]
	0x03941EA4 ADRP X21, 0xAA0000
	0x03941EA8 ADRP X22, 0x7B2000
	0x03941EAC ADRP X20, 0x7DA000
	0x03941EB0 LDRB W8, [X21 + 0x95D]
	0x03941EB4 LDR X22, [X22 + 0x9D0]
	0x03941EB8 LDR X20, [X20 + 0x600]
	0x03941EBC MOV X19, X0
	0x03941EC0 TBNZ X8, 0x0, 0x3941EFC
	0x03941EC4 ADRP X0, 0x7DA000
	0x03941EC8 LDR X0, [X0 + 0x600]
	0x03941ECC BL 0x1C16CF4
	0x03941ED0 ADRP X0, 0x7B2000
	0x03941ED4 LDR X0, [X0 + 0x9D0]
	0x03941ED8 BL 0x1C16CF4
	0x03941EDC ADRP X0, 0x80D000
	0x03941EE0 LDR X0, [X0 + 0xFC0]
	0x03941EE4 BL 0x1C16CF4
	0x03941EE8 ADRP X0, 0x7B2000
	0x03941EEC LDR X0, [X0 + 0x830]
	0x03941EF0 BL 0x1C16CF4
	0x03941EF4 MOVZ W8, 0x1
	0x03941EF8 STRB W8, [X21 + 0x95D]
	0x03941EFC LDR X0, [X22]
	0x03941F00 MOVZ W1, 0x4
	0x03941F04 BL 0x1C16D6C
	0x03941F08 LDP X9, X10, [X19 + 0x10]
	0x03941F0C LDR X8, [X20]
	0x03941F10 MOV X20, X0
	0x03941F14 STP X9, X10, [X31]
	0x03941F18 STR X10, [X31 + 0x18]
	0x03941F1C LDR W9, [X8 + 0xE0]
	0x03941F20 CBNZ W9, 0x3941F2C
	0x03941F24 MOV X0, X8
	0x03941F28 BL 0x1C16DFC
	0x03941F2C ADD X0, X31, 0x18
	0x03941F30 MOV X1, X31
	0x03941F34 BL 0x38FDC58
	0x03941F38 CBZ X20, 0x3942084
	0x03941F3C MOV X21, X0
	0x03941F40 CBZ X0, 0x3941F58
	0x03941F44 LDR X8, [X20]
	0x03941F48 MOV X0, X21
	0x03941F4C LDR X1, [X8 + 0x40]
	0x03941F50 BL 0x1C16E00
	0x03941F54 CBZ X0, 0x3942078
	0x03941F58 LDR W8, [X20 + 0x18]
	0x03941F5C CBZ W8, 0x3942074
	0x03941F60 STR X21, [X20 + 0x20]
	0x03941F64 LDR V0, [X19 + 0x1]
	0x03941F68 ADD X0, X31, 0x18
	0x03941F6C MOV X1, X31
	0x03941F70 STR V0, [X31]
	0x03941F74 STR D0, [X31 + 0x18]
	0x03941F78 BL 0x38FDC58
	0x03941F7C MOV X21, X0
	0x03941F80 CBZ X0, 0x3941F98
	0x03941F84 LDR X8, [X20]
	0x03941F88 MOV X0, X21
	0x03941F8C LDR X1, [X8 + 0x40]
	0x03941F90 BL 0x1C16E00
	0x03941F94 CBZ X0, 0x3942078
	0x03941F98 LDR W8, [X20 + 0x18]
	0x03941F9C CMP W8, 0x1
	0x03941FA0 B.LS 0x3942074
	0x03941FA4 ADRP X9, 0x80D000
	0x03941FA8 LDR X9, [X9 + 0xFC0]
	0x03941FAC STR X21, [X20 + 0x28]
	0x03941FB0 LDR X8, [X19 + 0x38]
	0x03941FB4 LDR X21, [X9]
	0x03941FB8 CBZ X8, 0x3941FDC
	0x03941FBC LDR V0, [X8 + 0x1]
	0x03941FC0 ADD X0, X31, 0x0
	0x03941FC4 MOV X1, X31
	0x03941FC8 STR V0, [X31]
	0x03941FCC BL 0x38FEA1C
	0x03941FD0 MOV X22, X0
	0x03941FD4 CBNZ X22, 0x3941FEC
	0x03941FD8 B 0x3942000
	0x03941FDC ADRP X8, 0x7B2000
	0x03941FE0 LDR X8, [X8 + 0x830]
	0x03941FE4 LDR X22, [X8]
	0x03941FE8 CBZ X22, 0x3942000
	0x03941FEC LDR X8, [X20]
	0x03941FF0 MOV X0, X22
	0x03941FF4 LDR X1, [X8 + 0x40]
	0x03941FF8 BL 0x1C16E00
	0x03941FFC CBZ X0, 0x3942078
	0x03942000 LDR W8, [X20 + 0x18]
	0x03942004 CMP W8, 0x2
	0x03942008 B.LS 0x3942074
	0x0394200C STR X22, [X20 + 0x30]
	0x03942010 LDR X0, [X19 + 0x20]
	0x03942014 CBZ X0, 0x3942084
	0x03942018 LDR X8, [X0]
	0x0394201C LDP X9, X1, [X8 + 0x168]
	0x03942020 BLR X9
	0x03942024 MOV X19, X0
	0x03942028 CBZ X0, 0x3942040
	0x0394202C LDR X8, [X20]
	0x03942030 MOV X0, X19
	0x03942034 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+288], D12
	003 Move [X31+296], D11
	004 Move [X31+304], D10
	005 Move [X31+312], D9
	006 Move [X31+320], D8
	007 Move [X31+328], X29
	008 Move [X31+336], X30
	009 Move [X31+344], X27
	010 Move [X31+352], X26
	011 Move [X31+360], X25
	012 Move [X31+368], X24
	013 Move [X31+376], X23
	014 Move [X31+384], X22
	015 Move [X31+392], X21
	016 Move [X31+400], X20
	017 Move [X31+408], X19
	018 Move X23, 0xAA1000
	019 Move X22, 0x7B3000
	020 Move W8, [X23+2386]
	021 Move X22, [X22+1432]
	022 Move W21, W2
	023 Move V8, V3
	024 Move V10, V2
	025 Move V11, V1
	026 Move V12, V0
	027 Move X20, X1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {53}
	033 Move X0, 0x7B4000
	034 Move X0, [X0+3624]
	035 Call 0x1C17CF4
	036 Move X0, 0x7DD000
	037 Move X0, [X0+3896]
	038 Call 0x1C17CF4
	039 Move X0, 0x7BA000
	040 Move X0, [X0+1208]
	041 Call 0x1C17CF4
	042 Move X0, 0x7B3000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x80E000
	046 Move X0, [X0+1776]
	047 Call 0x1C17CF4
	048 Move X0, 0x80E000
	049 Move X0, [X0+3976]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+2386], W8
	053 Move X0, [X22]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+256], V0
	056 Move [X31+264], V0
	057 Move [X31+224], V0
	058 Move [X31+232], V0
	059 Move [X31+192], V0
	060 Move [X31+200], V0
	061 Move [X31+160], V0
	062 Move [X31+168], V0
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {333}
	075 Move X24, 0x80E000
	076 Move X24, [X24+3976]
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Compare X19, 0
	083 JumpIfEqual {331}
	084 Move X8, [X24]
	085 Move X0, X19
	086 Move X1, X20
	087 Move X3, X31
	088 Move X8, [X8+184]
	089 Move X2, [X8]
	090 Call ProBuilderMesh.GetCoincidentVertices, X0, X1, X2
	091 Move X0, X19
	092 Move X1, X31
	093 Call Component.get_transform, X0
	094 Compare X0, 0
	095 JumpIfEqual {331}
	096 Move X20, 0x7BA000
	097 Move X20, [X20+1208]
	098 Add X8, X31, 96
	099 Move X1, X31
	100 Call Transform.get_worldToLocalMatrix, X0
	101 Move V1, [X31+128]
	102 Move V0, [X31+144]
	103 Move V3, [X31+96]
	104 Move V2, [X31+112]
	105 Add X0, X31, 32
	106 Move X1, X31
	107 Move [X31+256], V1
	108 Move [X31+264], V0
	109 Move [X31+224], V3
	110 Move [X31+232], V2
	111 Move [X31+32], V3
	112 Move [X31+40], V2
	113 Move [X31+64], V1
	114 Move [X31+72], V0
	115 Move S3, W31
	116 Move V0, V12
	117 Move V1, V11
	118 Move V2, V10
	119 Call Matrix4x4.op_Multiply, X0, X1
	120 Move X8, [X20]
	121 Move X20, [X19+88]
	122 NotImplemented "Instruction FABS not yet implemented."
	123 Move V9, V2
	124 Move X8, [X8+184]
	125 Move V3, [X8]
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move X0, X19
	128 Move X1, X31
	129 Move [X31], V1
	130 Move [X31+8], V0
	131 Call Component.get_transform, X0
	132 Compare X0, 0
	133 JumpIfEqual {331}
	134 Add X8, X31, 96
	135 Move X1, X31
	136 Call Transform.get_localToWorldMatrix, X0
	137 Move V0, [X31+96]
	138 Move V1, [X31+112]
	139 Move V2, [X31+128]
	140 Move V3, [X31+144]
	141 Move [X31+160], V0
	142 Move [X31+168], V1
	143 Move [X31+192], V2
	144 Move [X31+200], V3
	145 Move TEMP, X21
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {206}
	149 Move X8, -48590848
	150 Move V0, [X8+3880]
	151 NotImplemented "Instruction FABS not yet implemented."
	152 NotImplemented "Instruction FABS not yet implemented."
	153 NotImplemented "Instruction FABS not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 NotImplemented "Instruction CSET not yet implemented."
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 Or W9, W8, 2
	158 NotImplemented "Instruction CSEL not yet implemented."
	159 Or W9, W8, 4
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Move V0.S[1], V1.S[0]
	163 Move [X31+1], V0
	164 Move X22, 0x7DD000
	165 Move X22, [X22+3896]
	166 Move W21, W31
	167 Move W23, 12
	168 Move X0, [X24]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X24]
	174 Move X8, [X0+184]
	175 Move X8, [X8]
	176 Compare X8, 0
	177 JumpIfEqual {331}
	178 Move W9, [X8+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W9, [X0+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {189}
	183 Call 0x1C17DFC
	184 Move X8, [X24]
	185 Move X8, [X8+184]
	186 Move X8, [X8]
	187 Compare X8, 0
	188 JumpIfEqual {331}
	189 Move X2, [X22]
	190 Move X0, X8
	191 Move W1, W21
	192 Call List`1<Int32>.get_Item, X0, X1
	193 Compare X20, 0
	194 JumpIfEqual {331}
	195 Move W8, [X20+24]
	196 Move V2, [X31+1]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction SMADDL not yet implemented."
	199 Move V0, [X8+32]
	200 Move V1, [X8+40]
	201 Add W21, W21, 1
	202 Add V0, V2, V0
	203 Add S1, S9, S1
	204 Move [X8+32], D0
	205 Move [X8+40], S1
	206 Move X21, 0x80E000
	207 Move X21, [X21+1776]
	208 Move X0, [X21]
	209 Move W8, [X0+224]
	210 Compare W8, 0
	211 JumpIfNotEqual {214}
	212 Call 0x1C17DFC
	213 Move X0, [X21]
	214 Move X8, [X0+184]
	215 Move W8, [X8]
	216 Move X25, 0x7DD000
	217 Move X27, 0x80E000
	218 Move X25, [X25+3896]
	219 Move X27, [X27+1776]
	220 Move W21, W31
	221 Move W22, W8
	222 Move W26, 12
	223 Move X0, [X24]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {229}
	227 Call 0x1C17DFC
	228 Move X0, [X24]
	229 Move X8, [X0+184]
	230 Move X8, [X8]
	231 Compare X8, 0
	232 JumpIfEqual {331}
	233 Move W9, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W9, [X0+224]
	236 Compare W9, 0
	237 JumpIfNotEqual {244}
	238 Call 0x1C17DFC
	239 Move X8, [X24]
	240 Move X8, [X8+184]
	241 Move X8, [X8]
	242 Compare X8, 0
	243 JumpIfEqual {331}
	244 Move X2, [X25]
	245 Move X0, X8
	246 Move W1, W21
	247 Call List`1<Int32>.get_Item, X0, X1
	248 Compare X20, 0
	249 JumpIfEqual {331}
	250 Move W8, [X20+24]
	251 Move V4, [X31]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X8, W0
	254 NotImplemented "Instruction MADD not yet implemented."
	255 Move S0, [X8+32]
	256 Move S1, [X8+36]
	257 Move V2, [X8+40]
	258 Move V3, [X31+1]
	259 Add X0, X31, 160
	260 Add S1, S4, S1
	261 Add S2, S9, S2
	262 Add S0, S3, S0
	263 Move X1, X31
	264 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	265 Move X8, [X24]
	266 Move X8, [X8+184]
	267 Move X0, [X8]
	268 Compare X0, 0
	269 JumpIfEqual {331}
	270 Move X2, [X25]
	271 Move W1, W21
	272 Move V10, V0
	273 Move V11, V1
	274 Move V12, V2
	275 Call List`1<Int32>.get_Item, X0, X1
	276 Move X8, [X27]
	277 Move W23, W0
	278 Move W9, [X8+224]
	279 Compare W9, 0
	280 JumpIfNotEqual {283}
	281 Move X0, X8
	282 Call 0x1C17DFC
	283 Move X0, X22
	284 Call Vector3Mask.op_Implicit, X0
	285 Multiply S3, S0, S8
	286 Multiply S4, S1, S8
	287 Multiply S5, S2, S8
	288 Move V0, V10
	289 Move V1, V11
	290 Move V2, V12
	291 Move X0, X31
	292 Call ProBuilderSnapping.Snap, X0, X1
	293 Add X0, X31, 224
	294 Move X1, X31
	295 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	296 Move W8, [X20+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X8, W23
	299 NotImplemented "Instruction MADD not yet implemented."
	300 Add W21, W21, 1
	301 Move [X8+32], S0
	302 Move [X8+40], S1
	303 Move [X8+40], S2
	304 Move X0, X19
	305 Move X1, X31
	306 Move [X19+88], X20
	307 Call ProBuilderMesh.get_mesh, X0
	308 Compare X0, 0
	309 JumpIfEqual {331}
	310 Move X1, X20
	311 Move X2, X31
	312 Call Mesh.set_vertices, X0, X1
	313 Move X20, [X31+400]
	314 Move X19, [X31+408]
	315 Move X22, [X31+384]
	316 Move X21, [X31+392]
	317 Move X24, [X31+368]
	318 Move X23, [X31+376]
	319 Move X26, [X31+352]
	320 Move X25, [X31+360]
	321 Move X30, [X31+336]
	322 Move X27, [X31+344]
	323 Move X29, [X31+328]
	324 Move D9, [X31+312]
	325 Move D8, [X31+320]
	326 Move D11, [X31+296]
	327 Move D10, [X31+304]
	328 Move V12, [X31+288]
	329 Add X31, X31, 416
	330 Return 
	331 Call 0x1C17F20
	332 Call 0x1C17F28
	333 Move X0, 0x7B8000
	334 Move X0, [X0+1320]
	335 Call 0x1C17D08
	336 Call 0x1C17F10
	337 Move X19, X0
	338 Move X0, 0x80C000
	339 Move X0, [X0+3728]
	340 Call 0x1C17D08
	341 Move X1, X0
	342 Move X0, X19
	343 Move X2, X31
	344 Call ArgumentNullException..ctor, X0, X1
	345 Move X0, 0x80D000
	346 Move X0, [X0+3992]
	347 Call 0x1C17D08
	348 Move X1, X0
	349 Move X0, X19
	350 Call 0x1C17DEC

Method: System.Void TranslateVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> indexes, UnityEngine.Vector3 offset)

Disassembly:
	0x03942038 BL 0x1C16E00
	0x0394203C CBZ X0, 0x3942078
	0x03942040 LDR W8, [X20 + 0x18]
	0x03942044 CMP W8, 0x3
	0x03942048 B.LS 0x3942074
	0x0394204C MOV X0, X21
	0x03942050 MOV X1, X20
	0x03942054 MOV X2, X31
	0x03942058 STR X19, [X20 + 0x38]
	0x0394205C BL 0x3227C5C
	0x03942060 LDP X20, X19, [X31 + 0x30]
	0x03942064 LDP X22, X21, [X31 + 0x20]
	0x03942068 LDR X30, [X31 + 0x10]
	0x0394206C ADD X31, X31, 0x40
	0x03942070 RET
	0x03942074 BL 0x1C16F28
	0x03942078 BL 0x1C16F44
	0x0394207C MOV X1, X31
	0x03942080 BL 0x1C16DEC
	0x03942084 BL 0x1C16F20
	0x03942088 STP X29, X30, [X31 - 0x60]!
	0x0394208C STP X28, X27, [X31 + 0x10]
	0x03942090 STP X26, X25, [X31 + 0x20]
	0x03942094 STP X24, X23, [X31 + 0x30]
	0x03942098 STP X22, X21, [X31 + 0x40]
	0x0394209C STP X20, X19, [X31 + 0x50]
	0x039420A0 ADRP X19, 0xA9F000
	0x039420A4 LDRB W8, [X19 + 0x95E]
	0x039420A8 MOV X20, X1
	0x039420AC MOV X21, X0
	0x039420B0 TBNZ X8, 0x0, 0x39420D4
	0x039420B4 ADRP X0, 0x80C000
	0x039420B8 LDR X0, [X0 + 0xFC8]
	0x039420BC BL 0x1C16CF4
	0x039420C0 ADRP X0, 0x7B2000
	0x039420C4 LDR X0, [X0 + 0xE58]
	0x039420C8 BL 0x1C16CF4
	0x039420CC MOVZ W8, 0x1
	0x039420D0 STRB W8, [X19 + 0x95E]
	0x039420D4 CBZ X21, 0x3942458
	0x039420D8 MOVZ W8, 0x3
	0x039420DC MOV X9, X21
	0x039420E0 LDR X9, [X9 + 0x28]
	0x039420E4 SUB W8, W8, 0x1
	0x039420E8 CBZ X9, 0x39420F4
	0x039420EC CMP X9, X21
	0x039420F0 B.NE 0x39420E0
	0x039420F4 CBNZ W8, 0x3942420
	0x039420F8 CBZ X20, 0x3942458
	0x039420FC MOVZ W8, 0x3
	0x03942100 MOV X9, X20
	0x03942104 LDR X9, [X9 + 0x28]
	0x03942108 SUB W8, W8, 0x1
	0x0394210C CBZ X9, 0x3942118
	0x03942110 CMP X9, X20
	0x03942114 B.NE 0x3942104
	0x03942118 CBNZ W8, 0x3942420
	0x0394211C ADRP X8, 0x80C000
	0x03942120 LDR X8, [X8 + 0xFC8]
	0x03942124 MOVZ W1, 0x6
	0x03942128 LDR X0, [X8]
	0x0394212C BL 0x1C16D6C
	0x03942130 CBZ X0, 0x3942458
	0x03942134 LDR W8, [X0 + 0x18]
	0x03942138 MOV X19, X0
	0x0394213C CBZ W8, 0x3942454
	0x03942140 LDR V0, [X21 + 0x1]
	0x03942144 STR V0, [X19 + 0x2]
	0x03942148 LDR X9, [X21 + 0x28]
	0x0394214C CBZ X9, 0x3942458
	0x03942150 CMP W8, 0x1
	0x03942154 B.LS 0x3942454
	0x03942158 LDR V0, [X9 + 0x1]
	0x0394215C STR V0, [X19 + 0x3]
	0x03942160 LDR X9, [X21 + 0x28]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAA0000
	010 Move X22, 0x7B2000
	011 Move W8, [X21+2387]
	012 Move X22, [X22+1432]
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x7B2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x80D000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2387], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {71}
	043 Move X21, 0x80D000
	044 Move X21, [X21+3976]
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Compare X19, 0
	051 JumpIfEqual {89}
	052 Move X8, [X21]
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Move X8, [X8+184]
	057 Move X2, [X8]
	058 Call ProBuilderMesh.GetCoincidentVertices, X0, X1, X2
	059 Move X0, X19
	060 Move V1, V9
	061 Move V2, V8
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+24]
	067 Move D9, [X31+8]
	068 Move D8, [X31+16]
	069 Move V0, V10
	070 Move V10, [X31+64]
	071 Move X0, 0x7B7000
	072 Move X0, [X0+1320]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X19, X0
	076 Move X0, 0x80C000
	077 Move X0, [X0+3728]
	078 Call 0x1C17D08
	079 Move X1, X0
	080 Move X0, X19
	081 Move X2, X31
	082 Call ArgumentNullException..ctor, X0, X1
	083 Move X0, 0x80D000
	084 Move X0, [X0+4000]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X19
	088 Call 0x1C17DEC
	089 Call 0x1C17F20

Method: System.Void TranslateVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Edge> edges, UnityEngine.Vector3 offset)

Disassembly:
	0x039422C4 CMP X8, X12
	0x039422C8 B.CS 0x3942454
	0x039422CC CBZ X20, 0x3942458
	0x039422D0 LDR W12, [X20 + 0x18]
	0x039422D4 CMP W10, W12
	0x039422D8 B.CS 0x3942454
	0x039422DC LDR V0, [X9, X8, LSL #4]
	0x039422E0 ADD X12, X20, W10, 0x4, SXTW
	0x039422E4 ADD W10, W10, 0x1
	0x039422E8 STR V0, [X12 + 0x2]
	0x039422EC ADD X8, X8, 0x1
	0x039422F0 CMP X8, 0x6
	0x039422F4 B.NE 0x39422A8
	0x039422F8 LDR X0, [X23]
	0x039422FC MOVZ W1, 0x4
	0x03942300 BL 0x1C16D6C
	0x03942304 CBZ X20, 0x3942458
	0x03942308 LDR W8, [X20 + 0x18]
	0x0394230C CBZ W8, 0x3942454
	0x03942310 CBZ X0, 0x3942458
	0x03942314 LDR W9, [X0 + 0x18]
	0x03942318 CBZ W9, 0x3942454
	0x0394231C LDR W10, [X20 + 0x20]
	0x03942320 CMP W9, 0x1
	0x03942324 STR W10, [X0 + 0x20]
	0x03942328 B.EQ 0x3942454
	0x0394232C LDR W10, [X20 + 0x24]
	0x03942330 CMP W9, 0x2
	0x03942334 STR W10, [X0 + 0x24]
	0x03942338 B.LS 0x3942454
	0x0394233C MOVN W10, 0x0
	0x03942340 CMP W9, 0x3
	0x03942344 STR W10, [X0 + 0x28]
	0x03942348 B.EQ 0x3942454
	0x0394234C CMP W8, 0x1
	0x03942350 STR W10, [X0 + 0x2C]
	0x03942354 B.LS 0x3942454
	0x03942358 MOV X10, X20
	0x0394235C LDR W11, [X20 + 0x2C]
	0x03942360 LDR W9, [X10 + 0x38]!
	0x03942364 CMP W9, W11
	0x03942368 SUB X9, X10, 0x8
	0x0394236C B.NE 0x394237C
	0x03942370 MOV X11, X9
	0x03942374 MOV X12, X10
	0x03942378 B 0x39423B8
	0x0394237C CMP W8, 0x2
	0x03942380 B.LS 0x3942454
	0x03942384 MOV X12, X20
	0x03942388 LDR W13, [X12 + 0x48]!
	0x0394238C CMP W13, W11
	0x03942390 B.NE 0x394239C
	0x03942394 ADD X11, X20, 0x40
	0x03942398 B 0x39423B8
	0x0394239C CMP W8, 0x3
	0x039423A0 B.LS 0x3942454
	0x039423A4 MOV X12, X20
	0x039423A8 LDR W13, [X12 + 0x58]!
	0x039423AC CMP W13, W11
	0x039423B0 B.NE 0x3942440
	0x039423B4 SUB X11, X12, 0x8
	0x039423B8 LDR W11, [X11 + 0x4]
	0x039423BC STR W11, [X0 + 0x28]
	0x039423C0 LDR W12, [X12 + 0x4]
	0x039423C4 LDR W10, [X10]
	0x039423C8 CMP W12, W10
	0x039423CC B.EQ 0x3942404
	0x039423D0 CMP W8, 0x2
	0x039423D4 B.LS 0x3942454
	0x039423D8 LDR W9, [X20 + 0x48]
	0x039423DC CMP W12, W9
	0x039423E0 B.NE 0x39423EC
	0x039423E4 ADD X9, X20, 0x40
	0x039423E8 B 0x3942404
	0x039423EC CMP W8, 0x3

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAA0000
	010 Move X22, 0x7B2000
	011 Move W8, [X21+2388]
	012 Move X22, [X22+1432]
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x7B2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x80D000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2388], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {73}
	043 Move X21, 0x80D000
	044 Move X21, [X21+3976]
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Compare X19, 0
	051 JumpIfEqual {91}
	052 Move X8, [X21]
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Move X8, [X8+184]
	057 Move X2, [X8]
	058 Call ProBuilderMesh.GetCoincidentVertices, X0, X1, X2
	059 Move X0, X19
	060 Move V1, V9
	061 Move V2, V8
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+24]
	067 Move D9, [X31+8]
	068 Move D8, [X31+16]
	069 Move V0, V10
	070 Move V10, [X31+64]
	071 Call VertexPositioning.TranslateVerticesInternal, X0, X1, X2
	072 Return 
	073 Move X0, 0x7B7000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0x80C000
	079 Move X0, [X0+3728]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0x80D000
	086 Move X0, [X0+4008]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Call 0x1C17F20

Method: System.Void TranslateVertices(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, UnityEngine.Vector3 offset)

Disassembly:
	0x039423F0 B.LS 0x3942454
	0x039423F4 LDR W8, [X20 + 0x58]
	0x039423F8 CMP W12, W8
	0x039423FC B.NE 0x394244C
	0x03942400 ADD X9, X20, 0x50
	0x03942404 LDR W8, [X9 + 0x4]
	0x03942408 STR W8, [X0 + 0x2C]
	0x0394240C ADDS W31, W11, 0x1
	0x03942410 B.EQ 0x3942420
	0x03942414 ADDS W31, W8, 0x1
	0x03942418 CSEL X0, X31, X0, EQ
	0x0394241C B 0x3942424
	0x03942420 MOV X0, X31
	0x03942424 LDP X20, X19, [X31 + 0x50]
	0x03942428 LDP X22, X21, [X31 + 0x40]
	0x0394242C LDP X24, X23, [X31 + 0x30]
	0x03942430 LDP X26, X25, [X31 + 0x20]
	0x03942434 LDP X28, X27, [X31 + 0x10]
	0x03942438 LDP X29, X30, [X31], #0x60
	0x0394243C RET
	0x03942440 MOVN W11, 0x0
	0x03942444 MOVN W12, 0x0
	0x03942448 B 0x39423C4
	0x0394244C MOVN W8, 0x0
	0x03942450 B 0x394240C
	0x03942454 BL 0x1C16F28
	0x03942458 BL 0x1C16F20
	0x0394245C STR X30, [X31 - 0x30]!
	0x03942460 STP X22, X21, [X31 + 0x10]
	0x03942464 STP X20, X19, [X31 + 0x20]
	0x03942468 ADRP X21, 0xA9F000
	0x0394246C LDRB W8, [X21 + 0x95F]
	0x03942470 MOV W20, W1
	0x03942474 MOV X19, X0
	0x03942478 TBNZ X8, 0x0, 0x3942490
	0x0394247C ADRP X0, 0x7D9000
	0x03942480 LDR X0, [X0 + 0x600]
	0x03942484 BL 0x1C16CF4
	0x03942488 MOVZ W8, 0x1
	0x0394248C STRB W8, [X21 + 0x95F]
	0x03942490 MOV X21, X19
	0x03942494 LDR X8, [X21 + 0x28]!
	0x03942498 CBZ X8, 0x3942524
	0x0394249C ADRP X22, 0x7D9000
	0x039424A0 LDR X22, [X22 + 0x600]
	0x039424A4 LDR X8, [X8 + 0x18]
	0x039424A8 LDR X0, [X22]
	0x039424AC STR X8, [X31 + 0x8]
	0x039424B0 LDR W8, [X0 + 0xE0]
	0x039424B4 CBNZ W8, 0x39424BC
	0x039424B8 BL 0x1C16DFC
	0x039424BC ADD X0, X31, 0x8
	0x039424C0 MOV W1, W20
	0x039424C4 MOV X2, X31
	0x039424C8 BL 0x38FE204
	0x039424CC TBNZ X0, 0x0, 0x3942510
	0x039424D0 LDR X8, [X19 + 0x30]!
	0x039424D4 CBZ X8, 0x3942524
	0x039424D8 LDR X8, [X8 + 0x18]
	0x039424DC LDR X0, [X22]
	0x039424E0 STR X8, [X31 + 0x8]
	0x039424E4 LDR W8, [X0 + 0xE0]
	0x039424E8 CBNZ W8, 0x39424F0
	0x039424EC BL 0x1C16DFC
	0x039424F0 ADD X0, X31, 0x8
	0x039424F4 MOV W1, W20
	0x039424F8 MOV X2, X31
	0x039424FC BL 0x38FE204
	0x03942500 MOV W8, W0
	0x03942504 MOV X0, X31
	0x03942508 MOV X21, X19
	0x0394250C TBZ X8, 0x0, 0x3942514
	0x03942510 LDR X0, [X21]
	0x03942514 LDP X20, X19, [X31 + 0x20]
	0x03942518 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAA0000
	010 Move X22, 0x7B2000
	011 Move W8, [X21+2389]
	012 Move X22, [X22+1432]
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x7B2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x80D000
	026 Move X0, [X0+3976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2389], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {73}
	043 Move X21, 0x80D000
	044 Move X21, [X21+3976]
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Compare X19, 0
	051 JumpIfEqual {91}
	052 Move X8, [X21]
	053 Move X0, X19
	054 Move X1, X20
	055 Move X3, X31
	056 Move X8, [X8+184]
	057 Move X2, [X8]
	058 Call ProBuilderMesh.GetCoincidentVertices, X0, X1, X2
	059 Move X0, X19
	060 Move V1, V9
	061 Move V2, V8
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+24]
	067 Move D9, [X31+8]
	068 Move D8, [X31+16]
	069 Move V0, V10
	070 Move V10, [X31+64]
	071 Call VertexPositioning.TranslateVerticesInternal, X0, X1, X2
	072 Return 
	073 Move X0, 0x7B7000
	074 Move X0, [X0+1320]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X19, X0
	078 Move X0, 0x80C000
	079 Move X0, [X0+3728]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Move X2, X31
	084 Call ArgumentNullException..ctor, X0, X1
	085 Move X0, 0x80D000
	086 Move X0, [X0+4016]
	087 Call 0x1C17D08
	088 Move X1, X0
	089 Move X0, X19
	090 Call 0x1C17DEC
	091 Call 0x1C17F20

Method: System.Void TranslateVerticesInternal(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<System.Int32> indices, UnityEngine.Vector3 offset)

Disassembly:
	0x03942164 CBZ X9, 0x3942458
	0x03942168 LDR X9, [X9 + 0x28]
	0x0394216C CBZ X9, 0x3942458
	0x03942170 CMP W8, 0x2
	0x03942174 B.LS 0x3942454
	0x03942178 LDR V0, [X9 + 0x1]
	0x0394217C CMP W8, 0x3
	0x03942180 STR V0, [X19 + 0x4]
	0x03942184 B.EQ 0x3942454
	0x03942188 LDR V0, [X20 + 0x1]
	0x0394218C STR V0, [X19 + 0x5]
	0x03942190 LDR X9, [X20 + 0x28]
	0x03942194 CBZ X9, 0x3942458
	0x03942198 CMP W8, 0x4
	0x0394219C B.LS 0x3942454
	0x039421A0 LDR V0, [X9 + 0x1]
	0x039421A4 STR V0, [X19 + 0x6]
	0x039421A8 LDR X9, [X20 + 0x28]
	0x039421AC CBZ X9, 0x3942458
	0x039421B0 LDR X9, [X9 + 0x28]
	0x039421B4 CBZ X9, 0x3942458
	0x039421B8 CMP W8, 0x5
	0x039421BC B.LS 0x3942454
	0x039421C0 LDR V0, [X9 + 0x1]
	0x039421C4 ADRP X23, 0x7B2000
	0x039421C8 MOVZ W1, 0x6
	0x039421CC STR V0, [X19 + 0x7]
	0x039421D0 LDR X23, [X23 + 0xE58]
	0x039421D4 LDR X0, [X23]
	0x039421D8 BL 0x1C16D6C
	0x039421DC MOV X21, X0
	0x039421E0 MOV X25, X31
	0x039421E4 MOV W24, W31
	0x039421E8 ADD X26, X0, 0x2C
	0x039421EC ADD X22, X19, 0x58
	0x039421F0 MOVZ W28, 0x1
	0x039421F4 ADD X8, X19, X25, 0x4, LSL
	0x039421F8 MOV X29, X31
	0x039421FC ADD X20, X8, 0x20
	0x03942200 MOV X27, X22
	0x03942204 LDR W8, [X19 + 0x18]
	0x03942208 ADD X9, X29, 0x3
	0x0394220C CMP X9, X8
	0x03942210 B.CS 0x3942454
	0x03942214 LDP X1, X2, [X27 - 0x8]
	0x03942218 MOV X0, X20
	0x0394221C MOV X3, X31
	0x03942220 BL 0x38FE758
	0x03942224 TBNZ X0, 0x0, 0x394223C
	0x03942228 ADD X29, X29, 0x1
	0x0394222C CMP X29, 0x3
	0x03942230 ADD X27, X27, 0x10
	0x03942234 B.NE 0x3942204
	0x03942238 B 0x3942268
	0x0394223C CBZ X21, 0x3942458
	0x03942240 LDR W8, [X21 + 0x18]
	0x03942244 CMP X25, X8
	0x03942248 B.CS 0x3942454
	0x0394224C ADD X9, X29, 0x3
	0x03942250 ADD X10, X21, X25, 0x2, LSL
	0x03942254 CMP W9, W8
	0x03942258 STR W28, [X10 + 0x20]
	0x0394225C B.CS 0x3942454
	0x03942260 ADD W24, W24, 0x1
	0x03942264 STR W28, [X26, X29, LSL #2]
	0x03942268 ADD X25, X25, 0x1
	0x0394226C CMP X25, 0x3
	0x03942270 B.NE 0x39421F4
	0x03942274 CMP W24, 0x1
	0x03942278 B.NE 0x3942420
	0x0394227C ADRP X8, 0x80C000
	0x03942280 LDR X8, [X8 + 0xFC8]
	0x03942284 MOVZ W1, 0x4
	0x03942288 LDR X0, [X8]
	0x0394228C BL 0x1C16D6C
	0x03942290 CBZ X21, 0x3942458
	0x03942294 MOV X20, X0
	0x03942298 MOV X8, X31
	0x0394229C MOV W10, W31
	0x039422A0 ADD X9, X19, 0x20
	0x039422A4 ADD X11, X21, 0x20
	0x039422A8 LDR W12, [X21 + 0x18]
	0x039422AC CMP X8, X12
	0x039422B0 B.CS 0x3942454
	0x039422B4 LDR W12, [X11, X8, LSL #2]
	0x039422B8 CMP W12, 0x0
	0x039422BC B.GT 0x39422EC
	0x039422C0 LDR W12, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X20, 0xAA0000
	012 Move W8, [X20+2390]
	013 Move V8, V2
	014 Move X19, X0
	015 Move [X31], D1
	016 Move [X31+16], D0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x7B3000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0x7DC000
	025 Move X0, [X0+3896]
	026 Call 0x1C17CF4
	027 Move X0, 0x80D000
	028 Move X0, [X0+3976]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2390], W8
	032 Compare X19, 0
	033 JumpIfEqual {103}
	034 Move X22, 0x80D000
	035 Move X22, [X22+3976]
	036 Move X20, [X19+88]
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X8, [X8]
	045 Compare X8, 0
	046 JumpIfEqual {103}
	047 Move W8, [X8+24]
	048 Subtract W23, W8, 1
	049 Move X24, 0x7DC000
	050 Move X24, [X24+3896]
	051 Move V1, [X31]
	052 Move V0, [X31+16]
	053 Move W21, W31
	054 Move W25, 12
	055 Move V0.S[1], V1.S[0]
	056 Move [X31+1], V0
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X22]
	062 Move X8, [X0+184]
	063 Move X0, [X8]
	064 Compare X0, 0
	065 JumpIfEqual {103}
	066 Move X2, [X24]
	067 Move W1, W21
	068 Call List`1<Int32>.get_Item, X0, X1
	069 Compare X20, 0
	070 JumpIfEqual {103}
	071 Move W8, [X20+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction SMADDL not yet implemented."
	074 Move V0, [X8+32]
	075 Move V1, [X8+40]
	076 Move V2, [X31+1]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add S1, S8, S1
	079 Add V0, V2, V0
	080 Move [X8+32], D0
	081 Move [X8+40], S1
	082 Move X0, [X22]
	083 Add W21, W21, 1
	084 Move X0, X19
	085 Move X1, X31
	086 Call ProBuilderMesh.get_mesh, X0
	087 Compare X0, 0
	088 JumpIfEqual {103}
	089 Move X1, X20
	090 Move X20, [X31+96]
	091 Move X19, [X31+104]
	092 Move X22, [X31+80]
	093 Move X21, [X31+88]
	094 Move X24, [X31+64]
	095 Move X23, [X31+72]
	096 Move X30, [X31+48]
	097 Move X25, [X31+56]
	098 Move V8, [X31+32]
	099 Move X2, X31
	100 Add X31, X31, 112
	101 Call Mesh.set_vertices, X0, X1
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.Void SetSharedVertexPosition(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 sharedVertexHandle, UnityEngine.Vector3 position)

Disassembly:
	0x0394251C LDR X30, [X31], #0x30
	0x03942520 RET
	0x03942524 BL 0x1C16F20
	0x03942528 STR X30, [X31 - 0x30]!
	0x0394252C STP X22, X21, [X31 + 0x10]
	0x03942530 STP X20, X19, [X31 + 0x20]
	0x03942534 ADRP X20, 0xA9F000
	0x03942538 LDRB W8, [X20 + 0x960]
	0x0394253C MOV X19, X0
	0x03942540 TBNZ X8, 0x0, 0x3942570
	0x03942544 ADRP X0, 0x80C000
	0x03942548 LDR X0, [X0 + 0xFD0]
	0x0394254C BL 0x1C16CF4
	0x03942550 ADRP X0, 0x80B000
	0x03942554 LDR X0, [X0 + 0xD78]
	0x03942558 BL 0x1C16CF4
	0x0394255C ADRP X0, 0x80C000
	0x03942560 LDR X0, [X0 + 0xB08]
	0x03942564 BL 0x1C16CF4
	0x03942568 MOVZ W8, 0x1
	0x0394256C STRB W8, [X20 + 0x960]
	0x03942570 CBZ X19, 0x39425F4
	0x03942574 MOV X0, X19
	0x03942578 MOV X1, X31
	0x0394257C BL 0x38FFA80
	0x03942580 CBZ X0, 0x39425F4
	0x03942584 ADRP X20, 0x80B000
	0x03942588 ADRP X21, 0x80C000
	0x0394258C ADRP X22, 0x80C000
	0x03942590 LDR X20, [X20 + 0xD78]
	0x03942594 LDR X21, [X21 + 0xFD0]
	0x03942598 LDR X22, [X22 + 0xB08]
	0x0394259C MOV X0, X19
	0x039425A0 MOV X1, X31
	0x039425A4 BL 0x38FFA80
	0x039425A8 LDR X8, [X20]
	0x039425AC MOV X20, X0
	0x039425B0 MOV X0, X8
	0x039425B4 BL 0x1C16F10
	0x039425B8 LDR X2, [X21]
	0x039425BC MOV X1, X20
	0x039425C0 MOV X19, X0
	0x039425C4 BL 0x2FB9854
	0x039425C8 LDR X0, [X22]
	0x039425CC LDR W8, [X0 + 0xE0]
	0x039425D0 CBNZ W8, 0x39425D8
	0x039425D4 BL 0x1C16DFC
	0x039425D8 MOV X0, X19
	0x039425DC BL 0x394263C
	0x039425E0 MOV X0, X19
	0x039425E4 LDP X20, X19, [X31 + 0x20]
	0x039425E8 LDP X22, X21, [X31 + 0x10]
	0x039425EC LDR X30, [X31], #0x30
	0x039425F0 RET
	0x039425F4 ADRP X0, 0x7B6000
	0x039425F8 LDR X0, [X0 + 0x528]
	0x039425FC BL 0x1C16D08
	0x03942600 BL 0x1C16F10
	0x03942604 MOV X19, X0
	0x03942608 ADRP X0, 0x80C000
	0x0394260C LDR X0, [X0 + 0x600]
	0x03942610 BL 0x1C16D08
	0x03942614 MOV X1, X0
	0x03942618 MOV X0, X19
	0x0394261C MOV X2, X31
	0x03942620 BL 0x330E100
	0x03942624 ADRP X0, 0x80C000
	0x03942628 LDR X0, [X0 + 0xFD8]
	0x0394262C BL 0x1C16D08
	0x03942630 MOV X1, X0
	0x03942634 MOV X0, X19
	0x03942638 BL 0x1C16DEC
	0x0394263C STR X30, [X31 - 0x50]!
	0x03942640 STP X26, X25, [X31 + 0x10]
	0x03942644 STP X24, X23, [X31 + 0x20]
	0x03942648 STP X22, X21, [X31 + 0x30]
	0x0394264C STP X20, X19, [X31 + 0x40]
	0x03942650 ADRP X20, 0xA9F000
	0x03942654 LDRB W8, [X20 + 0x961]
	0x03942658 MOV X19, X0
	0x0394265C TBNZ X8, 0x0, 0x394268C
	0x03942660 ADRP X0, 0x80C000
	0x03942664 LDR X0, [X0 + 0xFE0]
	0x03942668 BL 0x1C16CF4
	0x0394266C ADRP X0, 0x80C000
	0x03942670 LDR X0, [X0 + 0xFE8]
	0x03942674 BL 0x1C16CF4
	0x03942678 ADRP X0, 0x80C000
	0x0394267C LDR X0, [X0 + 0xFF0]
	0x03942680 BL 0x1C16CF4
	0x03942684 MOVZ W8, 0x1
	0x03942688 STRB W8, [X20 + 0x961]
	0x0394268C CBZ X19, 0x394278C
	0x03942690 LDR W8, [X19 + 0x18]
	0x03942694 CMP W8, 0x2
	0x03942698 B.LT 0x3942774
	0x0394269C ADRP X23, 0x80C000
	0x039426A0 ADRP X24, 0x80C000
	0x039426A4 LDR X23, [X23 + 0xFE8]
	0x039426A8 LDR X24, [X24 + 0xFF0]
	0x039426AC MOVZ W20, 0x1
	0x039426B0 LDR X2, [X23]
	0x039426B4 SUB W1, W20, 0x1
	0x039426B8 MOV X0, X19
	0x039426BC BL 0x2FB9C40
	0x039426C0 LDR W8, [X19 + 0x18]
	0x039426C4 ADD W25, W20, 0x1
	0x039426C8 CMP W25, W8
	0x039426CC B.GE 0x3942768
	0x039426D0 UBFM X26, X0, 0x20, 0x3F
	0x039426D4 MOV W21, W25
	0x039426D8 LDR X2, [X23]
	0x039426DC MOV X0, X19
	0x039426E0 MOV W1, W21
	0x039426E4 BL 0x2FB9C40
	0x039426E8 CMP W0, W26
	0x039426EC B.EQ 0x394270C
	0x039426F0 LDR X2, [X23]
	0x039426F4 MOV X0, X19
	0x039426F8 MOV W1, W21
	0x039426FC BL 0x2FB9C40
	0x03942700 UBFM X8, X0, 0x20, 0x3F
	0x03942704 CMP W8, W26
	0x03942708 B.NE 0x3942758
	0x0394270C LDR X2, [X23]
	0x03942710 MOV X0, X19
	0x03942714 MOV W1, W21
	0x03942718 BL 0x2FB9C40
	0x0394271C LDR X2, [X23]
	0x03942720 MOV X22, X0
	0x03942724 MOV X0, X19
	0x03942728 MOV W1, W20
	0x0394272C BL 0x2FB9C40
	0x03942730 LDR X3, [X24]
	0x03942734 MOV X2, X0
	0x03942738 MOV X0, X19
	0x0394273C MOV W1, W21
	0x03942740 BL 0x2FB9C94
	0x03942744 LDR X3, [X24]
	0x03942748 MOV X0, X19
	0x0394274C MOV W1, W20
	0x03942750 MOV X2, X22
	0x03942754 BL 0x2FB9C94
	0x03942758 LDR W8, [X19 + 0x18]
	0x0394275C ADD W21, W21, 0x1
	0x03942760 CMP W21, W8
	0x03942764 B.LT 0x39426D8
	0x03942768 CMP W25, W8
	0x0394276C MOV W20, W25
	0x03942770 B.LT 0x39426B0
	0x03942774 LDP X20, X19, [X31 + 0x40]
	0x03942778 LDP X22, X21, [X31 + 0x30]
	0x0394277C LDP X24, X23, [X31 + 0x20]
	0x03942780 LDP X26, X25, [X31 + 0x10]
	0x03942784 LDR X30, [X31], #0x50
	0x03942788 RET
	0x0394278C ADRP X0, 0x7B6000
	0x03942790 LDR X0, [X0 + 0x528]
	0x03942794 BL 0x1C16D08
	0x03942798 BL 0x1C16F10
	0x0394279C MOV X19, X0
	0x039427A0 ADRP X0, 0x80C000
	0x039427A4 LDR X0, [X0 + 0x650]
	0x039427A8 BL 0x1C16D08
	0x039427AC MOV X1, X0
	0x039427B0 MOV X0, X19
	0x039427B4 MOV X2, X31
	0x039427B8 BL 0x330E100
	0x039427BC ADRP X0, 0x80C000
	0x039427C0 LDR X0, [X0 + 0xFF8]
	0x039427C4 BL 0x1C16D08
	0x039427C8 MOV X1, X0
	0x039427CC MOV X0, X19
	0x039427D0 BL 0x1C16DEC
	0x039427D4 SUB X31, X31, 0x70
	0x039427D8 STP X29, X30, [X31 + 0x10]
	0x039427DC STP X28, X27, [X31 + 0x20]
	0x039427E0 STP X26, X25, [X31 + 0x30]
	0x039427E4 STP X24, X23, [X31 + 0x40]
	0x039427E8 STP X22, X21, [X31 + 0x50]
	0x039427EC STP X20, X19, [X31 + 0x60]
	0x039427F0 ADRP X20, 0xA9F000
	0x039427F4 LDRB W8, [X20 + 0x962]
	0x039427F8 MOV X19, X0
	0x039427FC TBNZ X8, 0x0, 0x3942874
	0x03942800 ADRP X0, 0x80D000
	0x03942804 LDR X0, [X0]
	0x03942808 BL 0x1C16CF4
	0x0394280C ADRP X0, 0x80D000
	0x03942810 LDR X0, [X0 + 0x8]
	0x03942814 BL 0x1C16CF4
	0x03942818 ADRP X0, 0x80D000
	0x0394281C LDR X0, [X0 + 0x10]
	0x03942820 BL 0x1C16CF4
	0x03942824 ADRP X0, 0x80D000
	0x03942828 LDR X0, [X0 + 0x18]
	0x0394282C BL 0x1C16CF4
	0x03942830 ADRP X0, 0x80D000
	0x03942834 LDR X0, [X0 + 0x20]
	0x03942838 BL 0x1C16CF4
	0x0394283C ADRP X0, 0x80D000
	0x03942840 LDR X0, [X0 + 0x28]
	0x03942844 BL 0x1C16CF4
	0x03942848 ADRP X0, 0x80C000
	0x0394284C LDR X0, [X0 + 0xAF8]
	0x03942850 BL 0x1C16CF4
	0x03942854 ADRP X0, 0x80C000
	0x03942858 LDR X0, [X0 + 0xB00]
	0x0394285C BL 0x1C16CF4
	0x03942860 ADRP X0, 0x80D000
	0x03942864 LDR X0, [X0 + 0x30]
	0x03942868 BL 0x1C16CF4
	0x0394286C MOVZ W8, 0x1
	0x03942870 STRB W8, [X20 + 0x962]
	0x03942874 CBZ X19, 0x3942BA4
	0x03942878 ADRP X8, 0x80D000
	0x0394287C LDR X8, [X8 + 0x18]
	0x03942880 ADRP X20, 0x80D000
	0x03942884 LDR X0, [X8]
	0x03942888 LDR X20, [X20 + 0x10]
	0x0394288C BL 0x1C16F10
	0x03942890 LDR X1, [X20]
	0x03942894 MOV X20, X0
	0x03942898 BL 0x2A12DD4
	0x0394289C STR X31, [X31 + 0x8]
	0x039428A0 LDR W8, [X19 + 0x18]
	0x039428A4 CMP W8, 0x1
	0x039428A8 B.LT 0x3942B7C
	0x039428AC ADRP X24, 0x80C000
	0x039428B0 ADRP X25, 0x80D000
	0x039428B4 ADRP X26, 0x80D000
	0x039428B8 ADRP X27, 0x80D000
	0x039428BC ADRP X28, 0x80D000

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xAA0000
	013 Move X22, 0x7B2000
	014 Move W8, [X21+2391]
	015 Move X22, [X22+1432]
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move W20, W1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x7B2000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x7DA000
	029 Move X0, [X0+1984]
	030 Call 0x1C17CF4
	031 Move X0, 0x7B2000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x7B2000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2391], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {197}
	052 Compare X19, 0
	053 JumpIfEqual {196}
	054 Move X8, [X19+48]
	055 Compare X8, 0
	056 JumpIfEqual {196}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X8, W20
	060 Move X0, [X8+32]
	061 Compare X0, 0
	062 JumpIfEqual {196}
	063 Move X23, 0x7B2000
	064 Move X21, [X19+88]
	065 Move X23, [X23+3584]
	066 Move X1, X31
	067 Call SharedVertex.GetEnumerator, X0
	068 Move X20, X0
	069 Compare X0, 0
	070 JumpIfEqual {216}
	071 Move X22, 0x7B2000
	072 Move X24, 0x7DA000
	073 Move X22, [X22+3608]
	074 Move X24, [X24+1984]
	075 Move W25, 12
	076 Move X8, [X20]
	077 Move X1, [X22]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {131}
	101 Move X8, [X20]
	102 Move X1, [X24]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X20
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X21, 0
	123 JumpIfEqual {194}
	124 Move W8, [X21+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, W0
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Move [X8+32], S10
	129 Move [X8+40], S9
	130 Move [X8+40], S8
	131 Move X22, X31
	132 Move W24, 7
	133 Compare X20, 0
	134 JumpIfEqual {156}
	135 Move X8, [X20]
	136 Move X1, [X23]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X20
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X20
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Compare X22, 0
	157 JumpIfNotEqual {217}
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare W24, 0
	160 JumpIfNotEqual {182}
	161 Move X0, X19
	162 Move X1, X31
	163 Move [X19+88], X21
	164 Call ProBuilderMesh.get_mesh, X0
	165 Compare X0, 0
	166 JumpIfEqual {196}
	167 Move X1, X21
	168 Move X20, [X31+80]
	169 Move X19, [X31+88]
	170 Move X22, [X31+64]
	171 Move X21, [X31+72]
	172 Move X24, [X31+48]
	173 Move X23, [X31+56]
	174 Move X30, [X31+32]
	175 Move X25, [X31+40]
	176 Move D9, [X31+16]
	177 Move D8, [X31+24]
	178 Move X2, X31
	179 Move V10, [X31+96]
	180 Call Mesh.set_vertices, X0, X1
	181 Return 
	182 Move X20, [X31+80]
	183 Move X19, [X31+88]
	184 Move X22, [X31+64]
	185 Move X21, [X31+72]
	186 Move X24, [X31+48]
	187 Move X23, [X31+56]
	188 Move X30, [X31+32]
	189 Move X25, [X31+40]
	190 Move D9, [X31+16]
	191 Move D8, [X31+24]
	192 Move V10, [X31+96]
	193 Return 
	194 Call 0x1C17F20
	195 Call 0x1C17F28
	196 Call 0x1C17F20
	197 Move X0, 0x7B7000
	198 Move X0, [X0+1320]
	199 Call 0x1C17D08
	200 Call 0x1C17F10
	201 Move X19, X0
	202 Move X0, 0x80C000
	203 Move X0, [X0+3728]
	204 Call 0x1C17D08
	205 Move X1, X0
	206 Move X0, X19
	207 Move X2, X31
	208 Call ArgumentNullException..ctor, X0, X1
	209 Move X0, 0x80D000
	210 Move X0, [X0+4024]
	211 Call 0x1C17D08
	212 Move X1, X0
	213 Move X0, X19
	214 Call 0x1C17DEC
	215 Call 0x1C17F28
	216 Call 0x1C17F20
	217 Move X0, X22
	218 Call 0x1C17F18
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Call 0x3EB2AD0
	221 Move X22, [X0]
	222 Call 0x3EB2AE0
	223 Move W24, W31
	224 Compare X20, 0
	225 JumpIfNotEqual {135}
	226 Move X19, X0
	227 Move X22, X31
	228 Move X19, X0
	229 Compare X20, 0
	230 JumpIfEqual {252}
	231 Move X8, [X20]
	232 Move X1, [X23]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X20
	243 Move W2, W31
	244 Call 0x1C5D788
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X20
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X22, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X19
	255 Call 0x1D2D690
	256 Move X0, X22
	257 Call 0x1C17F18
	258 Call 0x1991590

Method: System.Void SetSharedVertexValues(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 sharedVertexHandle, UnityEngine.ProBuilder.Vertex vertex)

Disassembly:
	0x039428C0 ADRP X29, 0x80D000
	0x039428C4 LDR X24, [X24 + 0xB00]
	0x039428C8 LDR X25, [X25 + 0x8]
	0x039428CC LDR X26, [X26 + 0x20]
	0x039428D0 LDR X27, [X27 + 0x30]
	0x039428D4 LDR X28, [X28 + 0x28]
	0x039428D8 LDR X29, [X29]
	0x039428DC MOV W21, W31
	0x039428E0 LDR X2, [X24]
	0x039428E4 MOV X0, X19
	0x039428E8 MOV W1, W21
	0x039428EC BL 0x301BCCC
	0x039428F0 CBZ X0, 0x3942BA0
	0x039428F4 CBZ X20, 0x3942BA0
	0x039428F8 LDR W1, [X0 + 0x18]
	0x039428FC LDR X3, [X25]
	0x03942900 ADD X2, X31, 0x8
	0x03942904 MOV X0, X20
	0x03942908 BL 0x2A150AC
	0x0394290C TBZ X0, 0x0, 0x3942968
	0x03942910 LDR X2, [X24]
	0x03942914 LDR X22, [X31 + 0x8]
	0x03942918 MOV X0, X19
	0x0394291C MOV W1, W21
	0x03942920 BL 0x301BCCC
	0x03942924 CBZ X22, 0x3942BA0
	0x03942928 LDR W10, [X22 + 0x1C]
	0x0394292C LDR X8, [X22 + 0x10]
	0x03942930 LDR X9, [X26]
	0x03942934 ADD W10, W10, 0x1
	0x03942938 STR W10, [X22 + 0x1C]
	0x0394293C CBZ X8, 0x3942BA0
	0x03942940 LDRSW X10, [X22 + 0x18]
	0x03942944 LDR W11, [X8 + 0x18]
	0x03942948 MOV X1, X0
	0x0394294C CMP W10, W11
	0x03942950 B.CS 0x39429E8
	0x03942954 ADD W9, W10, 0x1
	0x03942958 ADD X8, X8, X10, 0x3, LSL
	0x0394295C STR W9, [X22 + 0x18]
	0x03942960 STR X1, [X8 + 0x20]
	0x03942964 B 0x3942A28
	0x03942968 LDR X2, [X24]
	0x0394296C MOV X0, X19
	0x03942970 MOV W1, W21
	0x03942974 BL 0x301BCCC
	0x03942978 CBZ X0, 0x3942BA0
	0x0394297C LDR W22, [X0 + 0x18]
	0x03942980 LDR X0, [X27]
	0x03942984 BL 0x1C16F10
	0x03942988 LDR X1, [X28]
	0x0394298C MOV X23, X0
	0x03942990 BL 0x301B7C4
	0x03942994 LDR X2, [X24]
	0x03942998 MOV X0, X19
	0x0394299C MOV W1, W21
	0x039429A0 BL 0x301BCCC
	0x039429A4 CBZ X23, 0x3942BA0
	0x039429A8 LDR W10, [X23 + 0x1C]
	0x039429AC LDR X8, [X23 + 0x10]
	0x039429B0 LDR X9, [X26]
	0x039429B4 ADD W10, W10, 0x1
	0x039429B8 STR W10, [X23 + 0x1C]
	0x039429BC CBZ X8, 0x3942BA0
	0x039429C0 LDRSW X10, [X23 + 0x18]
	0x039429C4 LDR W11, [X8 + 0x18]
	0x039429C8 MOV X1, X0
	0x039429CC CMP W10, W11
	0x039429D0 B.CS 0x3942A00
	0x039429D4 ADD W9, W10, 0x1
	0x039429D8 ADD X8, X8, X10, 0x3, LSL
	0x039429DC STR W9, [X23 + 0x18]
	0x039429E0 STR X1, [X8 + 0x20]
	0x039429E4 B 0x3942A14
	0x039429E8 LDR X8, [X9 + 0x20]
	0x039429EC MOV X0, X22
	0x039429F0 LDR X8, [X8 + 0xC0]
	0x039429F4 LDR X2, [X8 + 0x70]
	0x039429F8 BL 0x301BF90
	0x039429FC B 0x3942A28
	0x03942A00 LDR X8, [X9 + 0x20]
	0x03942A04 MOV X0, X23
	0x03942A08 LDR X8, [X8 + 0xC0]
	0x03942A0C LDR X2, [X8 + 0x70]
	0x03942A10 BL 0x301BF90
	0x03942A14 LDR X3, [X29]
	0x03942A18 MOV X0, X20
	0x03942A1C MOV W1, W22
	0x03942A20 MOV X2, X23
	0x03942A24 BL 0x2A1368C
	0x03942A28 LDR X2, [X24]
	0x03942A2C MOV X0, X19
	0x03942A30 MOV W1, W21
	0x03942A34 BL 0x301BCCC
	0x03942A38 CBZ X0, 0x3942BA0
	0x03942A3C LDR W1, [X0 + 0x1C]
	0x03942A40 LDR X3, [X25]
	0x03942A44 ADD X2, X31, 0x8
	0x03942A48 MOV X0, X20
	0x03942A4C BL 0x2A150AC
	0x03942A50 TBZ X0, 0x0, 0x3942AAC
	0x03942A54 LDR X2, [X24]
	0x03942A58 LDR X22, [X31 + 0x8]
	0x03942A5C MOV X0, X19
	0x03942A60 MOV W1, W21
	0x03942A64 BL 0x301BCCC
	0x03942A68 CBZ X22, 0x3942BA0
	0x03942A6C LDR W10, [X22 + 0x1C]
	0x03942A70 LDR X8, [X22 + 0x10]
	0x03942A74 LDR X9, [X26]
	0x03942A78 ADD W10, W10, 0x1
	0x03942A7C STR W10, [X22 + 0x1C]
	0x03942A80 CBZ X8, 0x3942BA0
	0x03942A84 LDRSW X10, [X22 + 0x18]
	0x03942A88 LDR W11, [X8 + 0x18]
	0x03942A8C MOV X1, X0
	0x03942A90 CMP W10, W11
	0x03942A94 B.CS 0x3942B2C
	0x03942A98 ADD W9, W10, 0x1
	0x03942A9C ADD X8, X8, X10, 0x3, LSL
	0x03942AA0 STR W9, [X22 + 0x18]
	0x03942AA4 STR X1, [X8 + 0x20]
	0x03942AA8 B 0x3942B6C
	0x03942AAC LDR X2, [X24]
	0x03942AB0 MOV X0, X19
	0x03942AB4 MOV W1, W21
	0x03942AB8 BL 0x301BCCC
	0x03942ABC CBZ X0, 0x3942BA0
	0x03942AC0 LDR W22, [X0 + 0x1C]
	0x03942AC4 LDR X0, [X27]
	0x03942AC8 BL 0x1C16F10
	0x03942ACC LDR X1, [X28]
	0x03942AD0 MOV X23, X0
	0x03942AD4 BL 0x301B7C4
	0x03942AD8 LDR X2, [X24]
	0x03942ADC MOV X0, X19
	0x03942AE0 MOV W1, W21
	0x03942AE4 BL 0x301BCCC
	0x03942AE8 CBZ X23, 0x3942BA0
	0x03942AEC LDR W10, [X23 + 0x1C]
	0x03942AF0 LDR X8, [X23 + 0x10]
	0x03942AF4 LDR X9, [X26]
	0x03942AF8 ADD W10, W10, 0x1
	0x03942AFC STR W10, [X23 + 0x1C]
	0x03942B00 CBZ X8, 0x3942BA0
	0x03942B04 LDRSW X10, [X23 + 0x18]
	0x03942B08 LDR W11, [X8 + 0x18]
	0x03942B0C MOV X1, X0
	0x03942B10 CMP W10, W11
	0x03942B14 B.CS 0x3942B44
	0x03942B18 ADD W9, W10, 0x1
	0x03942B1C ADD X8, X8, X10, 0x3, LSL
	0x03942B20 STR W9, [X23 + 0x18]
	0x03942B24 STR X1, [X8 + 0x20]
	0x03942B28 B 0x3942B58
	0x03942B2C LDR X8, [X9 + 0x20]
	0x03942B30 MOV X0, X22
	0x03942B34 LDR X8, [X8 + 0xC0]
	0x03942B38 LDR X2, [X8 + 0x70]
	0x03942B3C BL 0x301BF90
	0x03942B40 B 0x3942B6C
	0x03942B44 LDR X8, [X9 + 0x20]
	0x03942B48 MOV X0, X23
	0x03942B4C LDR X8, [X8 + 0xC0]
	0x03942B50 LDR X2, [X8 + 0x70]
	0x03942B54 BL 0x301BF90
	0x03942B58 LDR X3, [X29]
	0x03942B5C MOV X0, X20
	0x03942B60 MOV W1, W22
	0x03942B64 MOV X2, X23
	0x03942B68 BL 0x2A1368C
	0x03942B6C LDR W8, [X19 + 0x18]
	0x03942B70 ADD W21, W21, 0x1
	0x03942B74 CMP W21, W8
	0x03942B78 B.LT 0x39428E0
	0x03942B7C MOV X0, X20
	0x03942B80 LDP X20, X19, [X31 + 0x60]
	0x03942B84 LDP X22, X21, [X31 + 0x50]
	0x03942B88 LDP X24, X23, [X31 + 0x40]
	0x03942B8C LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAA0000
	010 Move W8, [X21+2392]
	011 Move X22, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x7B2000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x7DA000
	022 Move X0, [X0+1984]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B2000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2392], W8
	029 Compare X20, 0
	030 JumpIfEqual {150}
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call ProBuilderMesh.GetVertices, X0, X1
	035 Move X8, [X20+48]
	036 Compare X8, 0
	037 JumpIfEqual {150}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, W19
	041 Move X21, X0
	042 Move X0, [X8+32]
	043 Compare X0, 0
	044 JumpIfEqual {150}
	045 Move X23, 0x7B2000
	046 Move X23, [X23+3584]
	047 Move X1, X31
	048 Call SharedVertex.GetEnumerator, X0
	049 Move X19, X0
	050 Compare X0, 0
	051 JumpIfEqual {152}
	052 Move X24, 0x7B2000
	053 Move X25, 0x7DA000
	054 Move X24, [X24+3608]
	055 Move X25, [X25+1984]
	056 Move X8, [X19]
	057 Move X1, [X24]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X19
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X19
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {108}
	081 Move X8, [X19]
	082 Move X1, [X25]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X21, 0
	103 JumpIfEqual {148}
	104 Move W8, [X21+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X8, X21, W0
	107 Move [X8+32], X22
	108 Move X22, X31
	109 Compare X19, 0
	110 JumpIfEqual {132}
	111 Move X8, [X19]
	112 Move X1, [X23]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X19
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Compare X22, 0
	133 JumpIfNotEqual {153}
	134 Move X0, X20
	135 Move X1, X21
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X22, [X31+32]
	139 Move X21, [X31+40]
	140 Move X24, [X31+16]
	141 Move X23, [X31+24]
	142 Move W2, W31
	143 Move X3, X31
	144 Move X30, [X31+64]
	145 Move X25, [X31+72]
	146 Call ProBuilderMesh.SetVertices, X0, X1, X2
	147 Return 
	148 Call 0x1C17F20
	149 Call 0x1C17F28
	150 Call 0x1C17F20
	151 Call 0x1C17F28
	152 Call 0x1C17F20
	153 Move X0, X22
	154 Call 0x1C17F18
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Call 0x3EB2AD0
	157 Move X22, [X0]
	158 Call 0x3EB2AE0
	159 Move X20, X0
	160 Move X22, X31
	161 Move X20, X0
	162 Compare X19, 0
	163 JumpIfEqual {185}
	164 Move X8, [X19]
	165 Move X1, [X23]
	166 NotImplemented "Instruction LDRH not yet implemented."
	167 Compare X9, 0
	168 JumpIfEqual {175}
	169 Move X10, [X8+176]
	170 Add X10, X10, 8
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Subtract X9, X9, 1
	174 Add X10, X10, 16
	175 Move X0, X19
	176 Move W2, W31
	177 Call 0x1C5D788
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Add X8, X8, X9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X1, [X0+8]
	183 Move X0, X19
	184 NotImplemented "Instruction BLR not yet implemented."
	185 Compare X22, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X20
	188 Call 0x1D2D690
	189 Move X0, X22
	190 Call 0x1C17F18
	191 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03942B90 LDP X28, X27, [X31 + 0x20]
	0x03942B94 LDP X29, X30, [X31 + 0x10]
	0x03942B98 ADD X31, X31, 0x70
	0x03942B9C RET
	0x03942BA0 BL 0x1C16F20
	0x03942BA4 ADRP X0, 0x7B6000
	0x03942BA8 LDR X0, [X0 + 0x528]
	0x03942BAC BL 0x1C16D08
	0x03942BB0 BL 0x1C16F10
	0x03942BB4 MOV X19, X0
	0x03942BB8 ADRP X0, 0x80D000
	0x03942BBC LDR X0, [X0 + 0x38]
	0x03942BC0 BL 0x1C16D08
	0x03942BC4 MOV X1, X0
	0x03942BC8 MOV X0, X19
	0x03942BCC MOV X2, X31
	0x03942BD0 BL 0x330E100
	0x03942BD4 ADRP X0, 0x80D000
	0x03942BD8 LDR X0, [X0 + 0x40]
	0x03942BDC BL 0x1C16D08
	0x03942BE0 MOV X1, X0
	0x03942BE4 MOV X0, X19
	0x03942BE8 BL 0x1C16DEC
	0x03942BEC STP X30, X25, [X31 - 0x40]!
	0x03942BF0 STP X24, X23, [X31 + 0x10]
	0x03942BF4 STP X22, X21, [X31 + 0x20]
	0x03942BF8 STP X20, X19, [X31 + 0x30]
	0x03942BFC ADRP X19, 0xA9F000
	0x03942C00 ADRP X22, 0x80D000
	0x03942C04 LDRB W8, [X19 + 0x963]
	0x03942C08 LDR X22, [X22 + 0x48]
	0x03942C0C MOV X21, X1
	0x03942C10 MOV X20, X0
	0x03942C14 TBNZ X8, 0x0, 0x3942CD4
	0x03942C18 ADRP X0, 0x80D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA0000
	007 Move X22, 0x7B3000
	008 Move X19, 0x7B6000
	009 Move X20, 0x80D000
	010 Move W8, [X21+2393]
	011 Move X22, [X22+3632]
	012 Move X19, [X19+2928]
	013 Move X20, [X20+3976]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x7B6000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B3000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move X0, 0x80D000
	025 Move X0, [X0+3976]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2393], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Int32>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

