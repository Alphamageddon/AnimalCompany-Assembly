Type: UnityEngine.ProBuilder.SceneSelection

Method: System.Collections.Generic.List`1<System.Int32> get_vertexes()

Disassembly:
	0x039293BC BL 0x1C171E0
	0x039293C0 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_vertexes(System.Collections.Generic.List`1<System.Int32> value)

Disassembly:
	0x039293C4 STP X22, X21, [X31 + 0x10]
	0x039293C8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> get_edges()

Disassembly:
	0x039293CC ADRP X20, 0xAB8000
	0x039293D0 ADRP X21, 0x7CA000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_edges(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> value)

Disassembly:
	0x039293D4 LDRB W8, [X20 + 0x8D9]
	0x039293D8 LDR X21, [X21 + 0x598]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> get_faces()

Disassembly:
	0x039293DC MOV X19, X0
	0x039293E0 TBNZ X8, 0x0, 0x39293F8

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_faces(System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> value)

Disassembly:
	0x039293E4 ADRP X0, 0x7CA000
	0x039293E8 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void .ctor(UnityEngine.GameObject gameObject = null)

Disassembly:
	0x039293EC BL 0x1C16CF4
	0x039293F0 MOVZ W8, 0x1
	0x039293F4 STRB W8, [X20 + 0x8D9]
	0x039293F8 LDR X0, [X21]
	0x039293FC LDR X20, [X19 + 0x10]
	0x03929400 LDR W8, [X0 + 0xE0]
	0x03929404 CBNZ W8, 0x392940C
	0x03929408 BL 0x1C16DFC
	0x0392940C MOV X0, X20
	0x03929410 MOV X1, X31
	0x03929414 MOV X2, X31
	0x03929418 BL 0x3C354F8
	0x0392941C TBZ X0, 0x0, 0x3929440
	0x03929420 LDR X0, [X19 + 0x10]
	0x03929424 CBZ X0, 0x3929510
	0x03929428 LDR X8, [X0]
	0x0392942C LDP X9, X1, [X8 + 0x158]
	0x03929430 BLR X9
	0x03929434 MOVZ W8, 0x18D
	0x03929438 MUL W23, W0, W8
	0x0392943C B 0x3929444
	0x03929440 MOV W23, W31
	0x03929444 LDR X0, [X21]
	0x03929448 LDR X20, [X19 + 0x18]
	0x0392944C LDR W8, [X0 + 0xE0]
	0x03929450 CBNZ W8, 0x3929458
	0x03929454 BL 0x1C16DFC
	0x03929458 MOV X0, X20
	0x0392945C MOV X1, X31
	0x03929460 MOV X2, X31
	0x03929464 BL 0x3C354F8
	0x03929468 TBZ X0, 0x0, 0x3929488
	0x0392946C LDR X0, [X19 + 0x18]
	0x03929470 CBZ X0, 0x3929510
	0x03929474 LDR X8, [X0]
	0x03929478 LDP X9, X1, [X8 + 0x158]
	0x0392947C BLR X9
	0x03929480 MOV W20, W0
	0x03929484 B 0x392948C
	0x03929488 MOV W20, W31
	0x0392948C LDR X0, [X19 + 0x20]
	0x03929490 CBZ X0, 0x39294A8
	0x03929494 LDR X8, [X0]
	0x03929498 LDP X9, X1, [X8 + 0x158]
	0x0392949C BLR X9
	0x039294A0 MOV W21, W0
	0x039294A4 B 0x39294AC
	0x039294A8 MOV W21, W31
	0x039294AC LDR X0, [X19 + 0x28]
	0x039294B0 CBZ X0, 0x39294C8
	0x039294B4 LDR X8, [X0]
	0x039294B8 LDP X9, X1, [X8 + 0x158]
	0x039294BC BLR X9
	0x039294C0 MOV W22, W0
	0x039294C4 B 0x39294CC
	0x039294C8 MOV W22, W31
	0x039294CC LDR X0, [X19 + 0x30]
	0x039294D0 CBZ X0, 0x39294E0
	0x039294D4 LDR X8, [X0]
	0x039294D8 LDP X9, X1, [X8 + 0x158]
	0x039294DC BLR X9
	0x039294E0 EOR W8, W20, W23, 0x0
	0x039294E4 MOVZ W9, 0x18D
	0x039294E8 MUL W8, W8, W9
	0x039294EC EOR W8, W21, W8, 0x0
	0x039294F0 MUL W8, W8, W9
	0x039294F4 EOR W8, W22, W8, 0x0
	0x039294F8 LDP X20, X19, [X31 + 0x20]
	0x039294FC LDP X22, X21, [X31 + 0x10]
	0x03929500 MUL W8, W8, W9

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0xAB9000
	012 Move X26, 0x7CC000
	013 Move X25, 0x7CF000
	014 Move X24, 0x825000
	015 Move X23, 0x825000
	016 Move X22, 0x825000
	017 Move X21, 0x826000
	018 Move X26, [X26+3632]
	019 Move W8, [X27+2250]
	020 Move X25, [X25+2928]
	021 Move X24, [X24+3448]
	022 Move X23, [X23+3440]
	023 Move X22, [X22+3568]
	024 Move X21, [X21+2616]
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x7CF000
	032 Move X0, [X0+2928]
	033 Call 0x1C17CF4
	034 Move X0, 0x826000
	035 Move X0, [X0+2616]
	036 Call 0x1C17CF4
	037 Move X0, 0x825000
	038 Move X0, [X0+3440]
	039 Call 0x1C17CF4
	040 Move X0, 0x7CC000
	041 Move X0, [X0+3632]
	042 Call 0x1C17CF4
	043 Move X0, 0x825000
	044 Move X0, [X0+3448]
	045 Call 0x1C17CF4
	046 Move X0, 0x825000
	047 Move X0, [X0+3568]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X27+2250], W8
	051 Move X0, X19
	052 Move X1, X31
	053 Call Object..ctor, X0
	054 Move [X19+16], X20
	055 Move X0, [X26]
	056 Call 0x1C17F10
	057 Move X1, [X25]
	058 Move X20, X0
	059 Call List`1<Int32>..ctor, X0
	060 Move [X19+32], X20
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, [X23]
	064 Move X20, X0
	065 Call List`1<Edge>..ctor, X0
	066 Move [X19+40], X20
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move X1, [X21]
	070 Move X20, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19+48], X20
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X30, [X31+80]
	082 Move X27, [X31+88]
	083 Return 

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Int32 vertex)

Disassembly:
	0x03929504 EOR W0, W0, W8, 0x0
	0x03929508 LDP X30, X23, [X31], #0x30
	0x0392950C RET
	0x03929510 BL 0x1C16F20
	0x03929514 MOV X2, X31
	0x03929518 B 0x33CB4B0
	0x0392951C STR X30, [X31 - 0x10]!
	0x03929520 MOV X2, X31
	0x03929524 BL 0x33CB4B0
	0x03929528 ORN W8, W31, W0, 0x0
	0x0392952C AND W0, W8, 0x1
	0x03929530 LDR X30, [X31], #0x10
	0x03929534 RET
	0x03929538 STP X30, X23, [X31 - 0x30]!
	0x0392953C STP X22, X21, [X31 + 0x10]
	0x03929540 STP X20, X19, [X31 + 0x20]
	0x03929544 ADRP X23, 0xAB8000
	0x03929548 ADRP X22, 0x7CA000
	0x0392954C LDRB W8, [X23 + 0x8DA]
	0x03929550 LDR X22, [X22 + 0x598]
	0x03929554 MOV W20, W2
	0x03929558 MOV W19, W1
	0x0392955C MOV X21, X0
	0x03929560 TBNZ X8, 0x0, 0x3929584
	0x03929564 ADRP X0, 0x7CA000
	0x03929568 LDR X0, [X0 + 0x598]
	0x0392956C BL 0x1C16CF4
	0x03929570 ADRP X0, 0x825000
	0x03929574 LDR X0, [X0 + 0xAA8]
	0x03929578 BL 0x1C16CF4
	0x0392957C MOVZ W8, 0x1
	0x03929580 STRB W8, [X23 + 0x8DA]
	0x03929584 LDR X0, [X22]
	0x03929588 LDR W8, [X0 + 0xE0]
	0x0392958C CBNZ W8, 0x3929594
	0x03929590 BL 0x1C16DFC
	0x03929594 MOV X0, X21
	0x03929598 MOV X1, X31
	0x0392959C MOV X2, X31
	0x039295A0 BL 0x3C3883C
	0x039295A4 TBNZ X0, 0x0, 0x392977C
	0x039295A8 TBNZ X19, 0x1F, 0x392971C
	0x039295AC CBZ X21, 0x39297D8
	0x039295B0 MOV X0, X21
	0x039295B4 MOV X1, X31
	0x039295B8 BL 0x39140C8
	0x039295BC SUB W8, W0, 0x1
	0x039295C0 CMP W8, W19
	0x039295C4 B.LT 0x392971C
	0x039295C8 TBNZ X20, 0x1F, 0x392974C
	0x039295CC MOV X0, X21
	0x039295D0 MOV X1, X31
	0x039295D4 BL 0x39140C8
	0x039295D8 SUB W8, W0, 0x1
	0x039295DC CMP W8, W20
	0x039295E0 B.LT 0x392974C
	0x039295E4 ADRP X23, 0x825000
	0x039295E8 LDR X23, [X23 + 0xAA8]
	0x039295EC LDR X8, [X23]
	0x039295F0 LDR W9, [X8 + 0xE0]
	0x039295F4 CBNZ W9, 0x3929604
	0x039295F8 MOV X0, X8
	0x039295FC BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAB9000
	009 Move X24, 0x7CC000
	010 Move X22, 0x7CF000
	011 Move W8, [X23+2251]
	012 Move X24, [X24+3632]
	013 Move X22, [X22+2928]
	014 Move W21, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x7CC000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move X0, 0x7CF000
	025 Move X0, [X0+2928]
	026 Call 0x1C17CF4
	027 Move X0, 0x7CC000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2251], W8
	032 Move X0, [X24]
	033 Call 0x1C17F10
	034 Move X1, [X22]
	035 Move X22, X0
	036 Call List`1<Int32>..ctor, X0
	037 Compare X22, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x7CC000
	040 Move X9, [X9+3600]
	041 Move W10, [X22+28]
	042 Move X8, [X22+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X22+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X22+24], W9
	054 Move [X8+32], W21
	055 Move X8, [X9+32]
	056 Move X0, X22
	057 Move W1, W21
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Int32>.AddWithResize, X0, X1
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X22
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Edge edge)

Disassembly:
	0x03929724 BL 0x1C16D08
	0x03929728 BL 0x1C16F10
	0x0392972C MOV X19, X0
	0x03929730 ADRP X0, 0x825000
	0x03929734 LDR X0, [X0 + 0xAB0]
	0x03929738 BL 0x1C16D08
	0x0392973C MOV X20, X0
	0x03929740 ADRP X0, 0x804000
	0x03929744 LDR X0, [X0 + 0x3D0]
	0x03929748 B 0x39297A8
	0x0392974C ADRP X0, 0x7D2000
	0x03929750 LDR X0, [X0 + 0x578]
	0x03929754 BL 0x1C16D08
	0x03929758 BL 0x1C16F10
	0x0392975C MOV X19, X0
	0x03929760 ADRP X0, 0x825000
	0x03929764 LDR X0, [X0 + 0xAB0]
	0x03929768 BL 0x1C16D08
	0x0392976C MOV X20, X0
	0x03929770 ADRP X0, 0x81E000
	0x03929774 LDR X0, [X0 + 0x298]
	0x03929778 B 0x39297A8
	0x0392977C ADRP X0, 0x7D2000
	0x03929780 LDR X0, [X0 + 0x578]
	0x03929784 BL 0x1C16D08
	0x03929788 BL 0x1C16F10
	0x0392978C MOV X19, X0
	0x03929790 ADRP X0, 0x825000
	0x03929794 LDR X0, [X0 + 0xAB8]
	0x03929798 BL 0x1C16D08
	0x0392979C MOV X20, X0
	0x039297A0 ADRP X0, 0x824000
	0x039297A4 LDR X0, [X0 + 0xE90]
	0x039297A8 BL 0x1C16D08
	0x039297AC MOV X2, X0
	0x039297B0 MOV X0, X19
	0x039297B4 MOV X1, X20
	0x039297B8 MOV X3, X31
	0x039297BC BL 0x330E16C
	0x039297C0 ADRP X0, 0x825000
	0x039297C4 LDR X0, [X0 + 0xAC0]
	0x039297C8 BL 0x1C16D08
	0x039297CC MOV X1, X0
	0x039297D0 MOV X0, X19
	0x039297D4 BL 0x1C16DEC
	0x039297D8 BL 0x1C16F20
	0x039297DC STP X30, X23, [X31 - 0x30]!
	0x039297E0 STP X22, X21, [X31 + 0x10]
	0x039297E4 STP X20, X19, [X31 + 0x20]
	0x039297E8 ADRP X22, 0xAB8000
	0x039297EC LDRB W8, [X22 + 0x8DC]
	0x039297F0 MOV W20, W2
	0x039297F4 MOV W19, W1
	0x039297F8 MOV X21, X0
	0x039297FC TBNZ X8, 0x0, 0x3929838
	0x03929800 ADRP X0, 0x825000
	0x03929804 LDR X0, [X0 + 0x2A8]
	0x03929808 BL 0x1C16CF4
	0x0392980C ADRP X0, 0x825000
	0x03929810 LDR X0, [X0 + 0xAC8]
	0x03929814 BL 0x1C16CF4
	0x03929818 ADRP X0, 0x825000
	0x0392981C LDR X0, [X0 + 0xAD0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAB9000
	009 Move X24, 0x825000
	010 Move X22, 0x825000
	011 Move W8, [X23+2252]
	012 Move X24, [X24+3448]
	013 Move X22, [X22+3440]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x825000
	022 Move X0, [X0+3432]
	023 Call 0x1C17CF4
	024 Move X0, 0x825000
	025 Move X0, [X0+3440]
	026 Call 0x1C17CF4
	027 Move X0, 0x825000
	028 Move X0, [X0+3448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2252], W8
	032 Move X0, [X24]
	033 Call 0x1C17F10
	034 Move X1, [X22]
	035 Move X22, X0
	036 Call List`1<Edge>..ctor, X0
	037 Compare X22, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x825000
	040 Move X9, [X9+3432]
	041 Move W10, [X22+28]
	042 Move X8, [X22+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X22+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X22+24], W9
	054 Move [X8+32], X21
	055 Move X8, [X9+32]
	056 Move X0, X22
	057 Move X1, X21
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Edge>.AddWithResize, X0, X1
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X22
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03929944 BL 0x1C16CF4
	0x03929948 ADRP X0, 0x825000
	0x0392994C LDR X0, [X0 + 0xAE8]
	0x03929950 BL 0x1C16CF4
	0x03929954 ADRP X0, 0x825000
	0x03929958 LDR X0, [X0 + 0xAF0]
	0x0392995C BL 0x1C16CF4
	0x03929960 ADRP X0, 0x7D1000
	0x03929964 LDR X0, [X0 + 0x830]
	0x03929968 BL 0x1C16CF4
	0x0392996C ADRP X0, 0x7D1000
	0x03929970 LDR X0, [X0 + 0x838]
	0x03929974 BL 0x1C16CF4
	0x03929978 ADRP X0, 0x7D1000
	0x0392997C LDR X0, [X0 + 0x840]
	0x03929980 BL 0x1C16CF4
	0x03929984 ADRP X0, 0x7CC000
	0x03929988 LDR X0, [X0 + 0x9D8]
	0x0392998C BL 0x1C16CF4
	0x03929990 ADRP X0, 0x7CB000
	0x03929994 LDR X0, [X0 + 0xDF8]
	0x03929998 BL 0x1C16CF4
	0x0392999C ADRP X0, 0x7D1000
	0x039299A0 LDR X0, [X0 + 0x848]
	0x039299A4 BL 0x1C16CF4
	0x039299A8 ADRP X0, 0x7D7000
	0x039299AC LDR X0, [X0 + 0x5A0]
	0x039299B0 BL 0x1C16CF4
	0x039299B4 ADRP X0, 0x7D1000
	0x039299B8 LDR X0, [X0 + 0x688]
	0x039299BC BL 0x1C16CF4
	0x039299C0 ADRP X0, 0x7D1000
	0x039299C4 LDR X0, [X0 + 0x850]
	0x039299C8 BL 0x1C16CF4
	0x039299CC ADRP X0, 0x7CB000
	0x039299D0 LDR X0, [X0 + 0xE08]
	0x039299D4 BL 0x1C16CF4
	0x039299D8 ADRP X0, 0x7CB000
	0x039299DC LDR X0, [X0 + 0xE58]
	0x039299E0 BL 0x1C16CF4
	0x039299E4 ADRP X0, 0x825000
	0x039299E8 LDR X0, [X0 + 0xAF8]
	0x039299EC BL 0x1C16CF4
	0x039299F0 ADRP X0, 0x825000
	0x039299F4 LDR X0, [X0 + 0xB00]
	0x039299F8 BL 0x1C16CF4
	0x039299FC ADRP X0, 0x7CA000
	0x03929A00 LDR X0, [X0 + 0x598]
	0x03929A04 BL 0x1C16CF4
	0x03929A08 ADRP X0, 0x825000
	0x03929A0C LDR X0, [X0 + 0xAA8]
	0x03929A10 BL 0x1C16CF4
	0x03929A14 ADRP X0, 0x7CA000
	0x03929A18 LDR X0, [X0 + 0x638]
	0x03929A1C BL 0x1C16CF4
	0x03929A20 ADRP X0, 0x825000
	0x03929A24 LDR X0, [X0 + 0xB08]
	0x03929A28 BL 0x1C16CF4
	0x03929A2C MOVZ W8, 0x1
	0x03929A30 STRB W8, [X23 + 0x8DB]
	0x03929A34 ADRP X23, 0x7CA000
	0x03929A38 LDR X23, [X23 + 0x598]
	0x03929A3C LDR X0, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAB9000
	009 Move X24, 0x825000
	010 Move X22, 0x826000
	011 Move W8, [X23+2253]
	012 Move X24, [X24+3568]
	013 Move X22, [X22+2616]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x825000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move X0, 0x826000
	025 Move X0, [X0+2616]
	026 Call 0x1C17CF4
	027 Move X0, 0x825000
	028 Move X0, [X0+3568]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2253], W8
	032 Move X0, [X24]
	033 Call 0x1C17F10
	034 Move X1, [X22]
	035 Move X22, X0
	036 Call List`1<Object>..ctor, X0
	037 Compare X22, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x825000
	040 Move X9, [X9+3600]
	041 Move W10, [X22+28]
	042 Move X8, [X22+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X22+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X22+24], W9
	054 Move [X8+32], X21
	055 Move X8, [X9+32]
	056 Move X0, X22
	057 Move X1, X21
	058 Move X8, [X8+192]
	059 Move X2, [X8+112]
	060 Call List`1<Object>.AddWithResize, X0, X1
	061 Move X0, X20
	062 Move X1, X19
	063 Move X2, X22
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<System.Int32> vertexes)

Disassembly:
	0x03929600 LDR X8, [X23]
	0x03929604 LDR X9, [X8 + 0xB8]
	0x03929608 LDR W10, [X9 + 0x8]
	0x0392960C CMP W10, W19
	0x03929610 B.NE 0x39296C4
	0x03929614 LDR W10, [X8 + 0xE0]
	0x03929618 CBNZ W10, 0x392962C
	0x0392961C MOV X0, X8
	0x03929620 BL 0x1C16DFC
	0x03929624 LDR X8, [X23]
	0x03929628 LDR X9, [X8 + 0xB8]
	0x0392962C LDR X0, [X22]
	0x03929630 LDR X22, [X9 + 0x10]
	0x03929634 LDR W8, [X0 + 0xE0]
	0x03929638 CBNZ W8, 0x3929640
	0x0392963C BL 0x1C16DFC
	0x03929640 MOV X0, X21
	0x03929644 MOV X1, X22
	0x03929648 MOV X2, X31
	0x0392964C BL 0x3C3883C
	0x03929650 TBZ X0, 0x0, 0x39296C0
	0x03929654 MOV X0, X21
	0x03929658 MOV X1, X31
	0x0392965C BL 0x39140C8
	0x03929660 LDR X8, [X23]
	0x03929664 MOV W22, W0
	0x03929668 LDR W9, [X8 + 0xE0]
	0x0392966C CBNZ W9, 0x392967C
	0x03929670 MOV X0, X8
	0x03929674 BL 0x1C16DFC
	0x03929678 LDR X8, [X23]
	0x0392967C LDR X9, [X8 + 0xB8]
	0x03929680 LDR W9, [X9 + 0x18]
	0x03929684 CMP W22, W9
	0x03929688 B.NE 0x39296C4
	0x0392968C LDR W9, [X8 + 0xE0]
	0x03929690 CBNZ W9, 0x39296A0
	0x03929694 MOV X0, X8
	0x03929698 BL 0x1C16DFC
	0x0392969C LDR X8, [X23]
	0x039296A0 LDR X8, [X8 + 0xB8]
	0x039296A4 MOV W1, W19
	0x039296A8 MOV W2, W20
	0x039296AC LDP X20, X19, [X31 + 0x20]
	0x039296B0 LDR X0, [X8]
	0x039296B4 LDP X22, X21, [X31 + 0x10]
	0x039296B8 LDP X30, X23, [X31], #0x30
	0x039296BC B 0x39297DC
	0x039296C0 LDR X8, [X23]
	0x039296C4 LDR W9, [X8 + 0xE0]
	0x039296C8 CBNZ W9, 0x39296D4
	0x039296CC MOV X0, X8
	0x039296D0 BL 0x1C16DFC
	0x039296D4 MOV X0, X21
	0x039296D8 MOV W1, W19
	0x039296DC BL 0x39298F8
	0x039296E0 MOV W1, W19
	0x039296E4 MOV W2, W20
	0x039296E8 MOV X22, X0
	0x039296EC BL 0x39297DC
	0x039296F0 LDR X8, [X23]
	0x039296F4 LDR X8, [X8 + 0xB8]
	0x039296F8 STR X22, [X8]
	0x039296FC LDR X8, [X23]
	0x03929700 LDR X8, [X8 + 0xB8]
	0x03929704 STR W19, [X8 + 0x8]
	0x03929708 STR X21, [X8 + 0x10]
	0x0392970C LDP X20, X19, [X31 + 0x20]
	0x03929710 LDP X22, X21, [X31 + 0x10]
	0x03929714 LDP X30, X23, [X31], #0x30
	0x03929718 RET
	0x0392971C ADRP X0, 0x7D2000
	0x03929720 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAB9000
	010 Move X23, 0x7CB000
	011 Move W8, [X22+2254]
	012 Move X23, [X23+1432]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x826000
	021 Move X0, [X0+2616]
	022 Call 0x1C17CF4
	023 Move X0, 0x825000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move X0, 0x825000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0x825000
	030 Move X0, [X0+3568]
	031 Call 0x1C17CF4
	032 Move X0, 0x7CB000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2254], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move X1, X31
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {57}
	051 Compare X21, 0
	052 JumpIfEqual {90}
	053 Move X0, X21
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X1, X0
	057 Move X22, 0x825000
	058 Move X23, 0x825000
	059 Move X24, 0x825000
	060 Move X25, 0x826000
	061 Move X22, [X22+3448]
	062 Move X23, [X23+3440]
	063 Move X24, [X24+3568]
	064 Move X25, [X25+2616]
	065 Move X0, X19
	066 Call SceneSelection..ctor, X0, X1
	067 Move [X19+24], X21
	068 Move [X19+32], X20
	069 Move X0, [X22]
	070 Call 0x1C17F10
	071 Move X1, [X23]
	072 Move X20, X0
	073 Call List`1<Edge>..ctor, X0
	074 Move [X19+40], X20
	075 Move X0, [X24]
	076 Call 0x1C17F10
	077 Move X1, [X25]
	078 Move X20, X0
	079 Call List`1<Object>..ctor, X0
	080 Move [X19+48], X20
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x03929820 BL 0x1C16CF4
	0x03929824 ADRP X0, 0x825000
	0x03929828 LDR X0, [X0 + 0xAD8]
	0x0392982C BL 0x1C16CF4
	0x03929830 MOVZ W8, 0x1
	0x03929834 STRB W8, [X22 + 0x8DC]
	0x03929838 CBZ X21, 0x39298F4
	0x0392983C LDR W8, [X21 + 0x18]
	0x03929840 CMP W8, W20
	0x03929844 B.LS 0x39298F0
	0x03929848 ADD X8, X21, W20, 0x2, SXTW
	0x0392984C LDR W8, [X8 + 0x20]
	0x03929850 ADDS W31, W8, 0x1
	0x03929854 B.EQ 0x39298DC
	0x03929858 ADRP X8, 0x825000
	0x0392985C LDR X8, [X8 + 0xAD8]
	0x03929860 ADRP X22, 0x825000
	0x03929864 LDR X0, [X8]
	0x03929868 LDR X22, [X22 + 0xAD0]
	0x0392986C BL 0x1C16F10
	0x03929870 LDR X1, [X22]
	0x03929874 MOV X22, X0
	0x03929878 BL 0x2600728
	0x0392987C CMP W20, W19
	0x03929880 B.EQ 0x39298BC
	0x03929884 CBZ X22, 0x39298F4
	0x03929888 ADRP X23, 0x825000
	0x0392988C LDR X23, [X23 + 0xAC8]
	0x03929890 LDR X2, [X23]
	0x03929894 MOV X0, X22
	0x03929898 MOV W1, W20
	0x0392989C BL 0x2600D14
	0x039298A0 LDR W8, [X21 + 0x18]
	0x039298A4 CMP W20, W8
	0x039298A8 B.CS 0x39298F0
	0x039298AC ADD X8, X21, W20, 0x2, SXTW
	0x039298B0 LDR W20, [X8 + 0x20]
	0x039298B4 CMP W20, W19
	0x039298B8 B.NE 0x3929890
	0x039298BC ADRP X8, 0x825000
	0x039298C0 LDR X8, [X8 + 0x2A8]
	0x039298C4 MOV X0, X22
	0x039298C8 LDP X20, X19, [X31 + 0x20]
	0x039298CC LDP X22, X21, [X31 + 0x10]
	0x039298D0 LDR X1, [X8]
	0x039298D4 LDP X30, X23, [X31], #0x30
	0x039298D8 B 0x21D7880
	0x039298DC LDP X20, X19, [X31 + 0x20]
	0x039298E0 LDP X22, X21, [X31 + 0x10]
	0x039298E4 MOV X0, X31
	0x039298E8 LDP X30, X23, [X31], #0x30
	0x039298EC RET
	0x039298F0 BL 0x1C16F28
	0x039298F4 BL 0x1C16F20
	0x039298F8 SUB X31, X31, 0xB0
	0x039298FC STR D8, [X31 + 0x40]
	0x03929900 STP X29, X30, [X31 + 0x50]
	0x03929904 STP X28, X27, [X31 + 0x60]
	0x03929908 STP X26, X25, [X31 + 0x70]
	0x0392990C STP X24, X23, [X31 + 0x80]
	0x03929910 STP X22, X21, [X31 + 0x90]
	0x03929914 STP X20, X19, [X31 + 0xA0]
	0x03929918 STR X0, [X31 + 0x48]
	0x0392991C ADRP X23, 0xAB8000
	0x03929920 ADRP X22, 0x7CB000
	0x03929924 ADRP X21, 0x7D1000
	0x03929928 LDRB W8, [X23 + 0x8DB]
	0x0392992C LDR X22, [X22 + 0xE08]
	0x03929930 LDR X21, [X21 + 0x688]
	0x03929934 MOV W20, W1
	0x03929938 TBNZ X8, 0x0, 0x3929A34
	0x0392993C ADRP X0, 0x825000
	0x03929940 LDR X0, [X0 + 0xAE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAB9000
	010 Move X23, 0x7CB000
	011 Move W8, [X22+2255]
	012 Move X23, [X23+1432]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x7CF000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x826000
	024 Move X0, [X0+2616]
	025 Call 0x1C17CF4
	026 Move X0, 0x7CC000
	027 Move X0, [X0+3632]
	028 Call 0x1C17CF4
	029 Move X0, 0x825000
	030 Move X0, [X0+3568]
	031 Call 0x1C17CF4
	032 Move X0, 0x7CB000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2255], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move X1, X31
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {57}
	051 Compare X21, 0
	052 JumpIfEqual {90}
	053 Move X0, X21
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X1, X0
	057 Move X22, 0x7CC000
	058 Move X23, 0x7CF000
	059 Move X24, 0x825000
	060 Move X25, 0x826000
	061 Move X22, [X22+3632]
	062 Move X23, [X23+2928]
	063 Move X24, [X24+3568]
	064 Move X25, [X25+2616]
	065 Move X0, X19
	066 Call SceneSelection..ctor, X0, X1
	067 Move [X19+24], X21
	068 Move X0, [X22]
	069 Call 0x1C17F10
	070 Move X1, [X23]
	071 Move X21, X0
	072 Call List`1<Int32>..ctor, X0
	073 Move [X19+32], X21
	074 Move [X19+40], X20
	075 Move X0, [X24]
	076 Call 0x1C17F10
	077 Move X1, [X25]
	078 Move X20, X0
	079 Call List`1<Object>..ctor, X0
	080 Move [X19+48], X20
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> faces)

Disassembly:
	0x03929A40 STP X31, X31, [X31 + 0x20]
	0x03929A44 STR X31, [X31 + 0x30]
	0x03929A48 BL 0x1C16F10
	0x03929A4C LDR X1, [X21]
	0x03929A50 MOV X27, X0
	0x03929A54 BL 0x2DA9EF4
	0x03929A58 LDR X0, [X22]
	0x03929A5C BL 0x1C16F10
	0x03929A60 LDR X1, [X21]
	0x03929A64 MOV X22, X0
	0x03929A68 BL 0x2DA9EF4
	0x03929A6C ADRP X21, 0x825000
	0x03929A70 LDR X21, [X21 + 0xAA8]
	0x03929A74 LDR X0, [X21]
	0x03929A78 LDR W8, [X0 + 0xE0]
	0x03929A7C CBNZ W8, 0x3929A88
	0x03929A80 BL 0x1C16DFC
	0x03929A84 LDR X0, [X21]
	0x03929A88 LDR X8, [X23]
	0x03929A8C LDR X9, [X0 + 0xB8]
	0x03929A90 LDR W10, [X8 + 0xE0]
	0x03929A94 LDR X23, [X9 + 0x10]
	0x03929A98 CBNZ W10, 0x3929AA4
	0x03929A9C MOV X0, X8
	0x03929AA0 BL 0x1C16DFC
	0x03929AA4 LDR X1, [X31 + 0x48]
	0x03929AA8 MOV X0, X23
	0x03929AAC MOV X2, X31
	0x03929AB0 BL 0x3C354F8
	0x03929AB4 TBNZ X0, 0x0, 0x3929E98
	0x03929AB8 ADRP X8, 0x825000
	0x03929ABC LDR X8, [X8 + 0xAA8]
	0x03929AC0 LDR X0, [X8]
	0x03929AC4 LDR W8, [X0 + 0xE0]
	0x03929AC8 CBNZ W8, 0x3929AD0
	0x03929ACC BL 0x1C16DFC
	0x03929AD0 LDR X0, [X31 + 0x48]
	0x03929AD4 CBZ X0, 0x3929FB8
	0x03929AD8 ADRP X8, 0x825000
	0x03929ADC LDR X8, [X8 + 0xAA8]
	0x03929AE0 MOV X1, X31
	0x03929AE4 LDR X8, [X8]
	0x03929AE8 LDR X8, [X8 + 0xB8]
	0x03929AEC LDR W21, [X8 + 0x18]
	0x03929AF0 BL 0x39140C8
	0x03929AF4 CMP W21, W0
	0x03929AF8 B.NE 0x3929E98
	0x03929AFC ADRP X21, 0x825000
	0x03929B00 LDR X21, [X21 + 0xAA8]
	0x03929B04 LDR X0, [X21]
	0x03929B08 LDR W8, [X0 + 0xE0]
	0x03929B0C CBNZ W8, 0x3929B18
	0x03929B10 BL 0x1C16DFC
	0x03929B14 LDR X0, [X21]
	0x03929B18 LDR X8, [X0 + 0xB8]
	0x03929B1C LDR X8, [X8 + 0x20]
	0x03929B20 CBZ X8, 0x3929FB8
	0x03929B24 ADRP X9, 0x7CA000
	0x03929B28 LDR X9, [X9 + 0x638]
	0x03929B2C LDR W25, [X8 + 0x18]
	0x03929B30 ADRP X21, 0x7CB000
	0x03929B34 LDR X0, [X9]
	0x03929B38 LDR X21, [X21 + 0xE58]
	0x03929B3C MOV W1, W25
	0x03929B40 BL 0x1C16D6C
	0x03929B44 LDR X8, [X21]
	0x03929B48 MOV X23, X0
	0x03929B4C MOV W1, W25
	0x03929B50 MOV X0, X8
	0x03929B54 BL 0x1C16D6C
	0x03929B58 CBZ X23, 0x3929FB8
	0x03929B5C LDR W11, [X23 + 0x18]
	0x03929B60 SXTW X19, W25

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAB9000
	010 Move X23, 0x7CB000
	011 Move W8, [X22+2256]
	012 Move X23, [X23+1432]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x7CF000
	021 Move X0, [X0+2928]
	022 Call 0x1C17CF4
	023 Move X0, 0x825000
	024 Move X0, [X0+3440]
	025 Call 0x1C17CF4
	026 Move X0, 0x7CC000
	027 Move X0, [X0+3632]
	028 Call 0x1C17CF4
	029 Move X0, 0x825000
	030 Move X0, [X0+3448]
	031 Call 0x1C17CF4
	032 Move X0, 0x7CB000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2256], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move X1, X31
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {57}
	051 Compare X21, 0
	052 JumpIfEqual {90}
	053 Move X0, X21
	054 Move X1, X31
	055 Call Component.get_gameObject, X0
	056 Move X1, X0
	057 Move X22, 0x7CC000
	058 Move X23, 0x7CF000
	059 Move X24, 0x825000
	060 Move X25, 0x825000
	061 Move X22, [X22+3632]
	062 Move X23, [X23+2928]
	063 Move X24, [X24+3448]
	064 Move X25, [X25+3440]
	065 Move X0, X20
	066 Call SceneSelection..ctor, X0, X1
	067 Move [X20+24], X21
	068 Move X0, [X22]
	069 Call 0x1C17F10
	070 Move X1, [X23]
	071 Move X21, X0
	072 Call List`1<Int32>..ctor, X0
	073 Move [X20+32], X21
	074 Move X0, [X24]
	075 Call 0x1C17F10
	076 Move X1, [X25]
	077 Move X21, X0
	078 Call List`1<Edge>..ctor, X0
	079 Move [X20+40], X21
	080 Move [X20+48], X19
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X24, [X31+16]
	086 Move X23, [X31+24]
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void SetSingleFace(UnityEngine.ProBuilder.Face face)

Disassembly:
	0x03929B64 MOV X24, X0
	0x03929B68 CMP W19, 0x1
	0x03929B6C B.LT 0x3929BB4
	0x03929B70 MOV X8, X31
	0x03929B74 ADD X9, X24, 0x20
	0x03929B78 ADD X10, X23, 0x20
	0x03929B7C MOVN W12, 0x80800000
	0x03929B80 MOVN W13, 0x0
	0x03929B84 CMP X8, W11, UXTW
	0x03929B88 B.CS 0x3929FBC
	0x03929B8C STR W12, [X10, X8, LSL #2]
	0x03929B90 CBZ X24, 0x3929FB8
	0x03929B94 LDR W11, [X24 + 0x18]
	0x03929B98 CMP X8, X11
	0x03929B9C B.CS 0x3929FBC
	0x03929BA0 STR W13, [X9, X8, LSL #2]
	0x03929BA4 LDR W11, [X23 + 0x18]
	0x03929BA8 ADD X8, X8, 0x1
	0x03929BAC CMP X19, X8
	0x03929BB0 B.NE 0x3929B84
	0x03929BB4 CMP W11, W20
	0x03929BB8 B.LS 0x3929FBC
	0x03929BBC ADD X8, X23, W20, 0x2, SXTW
	0x03929BC0 STR W31, [X8 + 0x20]
	0x03929BC4 CBZ X27, 0x3929FB8
	0x03929BC8 ADRP X8, 0x7CC000
	0x03929BCC LDR X8, [X8 + 0x9D8]
	0x03929BD0 MOV X0, X27
	0x03929BD4 MOV W1, W20
	0x03929BD8 LDR X2, [X8]
	0x03929BDC BL 0x2DAB03C
	0x03929BE0 LDR W8, [X27 + 0x20]
	0x03929BE4 CMP W8, W19
	0x03929BE8 B.GE 0x3929E70
	0x03929BEC ADRP X29, 0x7D1000
	0x03929BF0 LDR X29, [X29 + 0x838]
	0x03929BF4 STR X19, [X31]
	0x03929BF8 ADRP X25, 0x825000
	0x03929BFC LDR X25, [X25 + 0xAA8]
	0x03929C00 LDR X0, [X25]
	0x03929C04 LDR W8, [X0 + 0xE0]
	0x03929C08 CBNZ W8, 0x3929C14
	0x03929C0C BL 0x1C16DFC
	0x03929C10 LDR X0, [X25]
	0x03929C14 LDR X8, [X0 + 0xB8]
	0x03929C18 LDR X0, [X8 + 0x20]
	0x03929C1C CBZ X0, 0x3929FB8
	0x03929C20 ADRP X8, 0x825000
	0x03929C24 LDR X8, [X8 + 0xB00]
	0x03929C28 MOV W1, W20
	0x03929C2C MOV X21, X27
	0x03929C30 LDR X2, [X8]
	0x03929C34 BL 0x301BCCC
	0x03929C38 ADD X8, X23, W20, 0x2, SXTW
	0x03929C3C MOV X28, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB9000
	006 Move W8, [X21+2257]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x825000
	014 Move X0, [X0+3600]
	015 Call 0x1C17CF4
	016 Move X0, 0x826000
	017 Move X0, [X0+2624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2257], W8
	021 Move X0, [X20+48]
	022 Compare X0, 0
	023 JumpIfEqual {68}
	024 Move W2, [X0+24]
	025 Move W8, [X0+28]
	026 Add W8, W8, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X0+24], W31
	029 Move [X0+28], W8
	030 Move X0, [X0+16]
	031 Move W1, W31
	032 Move X3, X31
	033 Call Array.Clear, X0, X1, X2
	034 Move X0, [X20+48]
	035 Compare X0, 0
	036 JumpIfEqual {68}
	037 Move X9, 0x825000
	038 Move X9, [X9+3600]
	039 Move W10, [X0+28]
	040 Move X8, [X0+16]
	041 Move X9, [X9]
	042 Add W10, W10, 1
	043 Move [X0+28], W10
	044 Compare X8, 0
	045 JumpIfEqual {68}
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Move W11, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add W9, W10, 1
	050 Add X8, X8, X10
	051 Move [X0+24], W9
	052 Move [X8+32], X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Move X8, [X9+32]
	059 Move X1, X19
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X8, [X8+192]
	063 Move X2, [X8+112]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Call List`1<Object>.AddWithResize, X0, X1
	067 Return 
	068 Call 0x1C17F20

Method: System.Void SetSingleVertex(System.Int32 vertex)

Disassembly:
	0x03929C40 ADD X27, X8, 0x20
	0x03929C44 MOV X25, X0
	0x03929C48 CBZ X25, 0x3929FB8
	0x03929C4C LDR X26, [X25 + 0x38]
	0x03929C50 CBZ X26, 0x3929D44
	0x03929C54 ADRP X19, 0x825000
	0x03929C58 LDR X19, [X19 + 0xAA8]
	0x03929C5C LDR X0, [X19]
	0x03929C60 LDR W8, [X0 + 0xE0]
	0x03929C64 CBNZ W8, 0x3929C70
	0x03929C68 BL 0x1C16DFC
	0x03929C6C LDR X0, [X19]
	0x03929C70 LDR X8, [X0 + 0xB8]
	0x03929C74 LDR X0, [X8 + 0x28]
	0x03929C78 CBZ X0, 0x3929FB8
	0x03929C7C ADRP X8, 0x825000
	0x03929C80 LDR X1, [X26 + 0x20]
	0x03929C84 LDR X8, [X8 + 0xAF0]
	0x03929C88 LDR X2, [X8]
	0x03929C8C BL 0x2A9EF1C
	0x03929C90 LDR X2, [X31 + 0x48]
	0x03929C94 MOV W26, W0
	0x03929C98 MOV W0, W20
	0x03929C9C MOV W1, W26
	0x03929CA0 BL 0x3929FF8
	0x03929CA4 LDR W8, [X23 + 0x18]
	0x03929CA8 CMP W20, W8
	0x03929CAC B.CS 0x3929FBC
	0x03929CB0 CMP W26, W8
	0x03929CB4 B.CS 0x3929FBC
	0x03929CB8 SXTW X8, W26
	0x03929CBC LDR V1, [X27]
	0x03929CC0 ADD X9, X23, X8, 0x2, LSL
	0x03929CC4 LDR V2, [X9 + 0x20]!
	0x03929CC8 FADD S0, S0, S1
	0x03929CCC FCMP S0, S2
	0x03929CD0 B.PL 0x3929CF0
	0x03929CD4 STR S0, [X9]
	0x03929CD8 CBZ X24, 0x3929FB8
	0x03929CDC LDR W9, [X24 + 0x18]
	0x03929CE0 CMP W26, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB9000
	006 Move W8, [X21+2258]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x7CC000
	014 Move X0, [X0+3600]
	015 Call 0x1C17CF4
	016 Move X0, 0x7D2000
	017 Move X0, [X0+2136]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2258], W8
	021 Move X0, [X20+32]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X9, 0x7CC000
	025 Move X9, [X9+3600]
	026 Move W10, [X0+28]
	027 Move X8, [X0+16]
	028 Move X9, [X9]
	029 Add W10, W10, 2
	030 Move [X0+24], W31
	031 Move [X0+28], W10
	032 Compare X8, 0
	033 JumpIfEqual {55}
	034 Move W10, [X8+24]
	035 Compare W10, 0
	036 JumpIfEqual {45}
	037 Move W9, 1
	038 Move [X0+24], W9
	039 Move [X8+32], W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X8, [X9+32]
	046 Move W1, W19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X8, [X8+192]
	050 Move X2, [X8+112]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call List`1<Int32>.AddWithResize, X0, X1
	054 Return 
	055 Call 0x1C17F20

Method: System.Void SetSingleEdge(UnityEngine.ProBuilder.Edge edge)

Disassembly:
	0x03929CE4 B.CS 0x3929FBC
	0x03929CE8 ADD X8, X24, X8, 0x2, LSL
	0x03929CEC STR W20, [X8 + 0x20]
	0x03929CF0 CBZ X22, 0x3929FB8
	0x03929CF4 ADRP X8, 0x7CB000
	0x03929CF8 LDR X8, [X8 + 0xDF8]
	0x03929CFC MOV X0, X22
	0x03929D00 MOV W1, W26
	0x03929D04 LDR X2, [X8]
	0x03929D08 BL 0x2DAA59C
	0x03929D0C TBNZ X0, 0x0, 0x3929D44
	0x03929D10 ADRP X8, 0x7CB000
	0x03929D14 LDR X8, [X8 + 0xDF8]
	0x03929D18 MOV X0, X21
	0x03929D1C MOV W1, W26
	0x03929D20 LDR X2, [X8]
	0x03929D24 BL 0x2DAA59C
	0x03929D28 TBNZ X0, 0x0, 0x3929D44
	0x03929D2C ADRP X8, 0x7CC000
	0x03929D30 LDR X8, [X8 + 0x9D8]
	0x03929D34 MOV X0, X22
	0x03929D38 MOV W1, W26
	0x03929D3C LDR X2, [X8]
	0x03929D40 BL 0x2DAB03C
	0x03929D44 LDR X25, [X25 + 0x28]
	0x03929D48 CMP X25, X28
	0x03929D4C B.NE 0x3929C48
	0x03929D50 CBZ X22, 0x3929FB8
	0x03929D54 LDR W8, [X22 + 0x20]
	0x03929D58 LDR X19, [X31]
	0x03929D5C CBZ W8, 0x3929E70
	0x03929D60 ADRP X8, 0x7D1000
	0x03929D64 LDR X8, [X8 + 0x848]
	0x03929D68 MOV X0, X22
	0x03929D6C MOV X27, X21
	0x03929D70 LDR X1, [X8]
	0x03929D74 ADD X8, X31, 0x8
	0x03929D78 BL 0x2DAAA30
	0x03929D7C LDUR V0, [X31 + 0x8]
	0x03929D80 LDR X8, [X31 + 0x18]
	0x03929D84 MOVN W9, 0x80800000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB9000
	006 Move W8, [X21+2259]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x825000
	014 Move X0, [X0+3432]
	015 Call 0x1C17CF4
	016 Move X0, 0x826000
	017 Move X0, [X0+2632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2259], W8
	021 Move X0, [X20+40]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X9, 0x825000
	025 Move X9, [X9+3432]
	026 Move W10, [X0+28]
	027 Move X8, [X0+16]
	028 Move X9, [X9]
	029 Add W10, W10, 2
	030 Move [X0+24], W31
	031 Move [X0+28], W10
	032 Compare X8, 0
	033 JumpIfEqual {55}
	034 Move W10, [X8+24]
	035 Compare W10, 0
	036 JumpIfEqual {45}
	037 Move W9, 1
	038 Move [X0+24], W9
	039 Move [X8+32], X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Move X8, [X9+32]
	046 Move X1, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X8, [X8+192]
	050 Move X2, [X8+112]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call List`1<Edge>.AddWithResize, X0, X1
	054 Return 
	055 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03929D88 FMOV S8, W9
	0x03929D8C STR V0, [X31 + 0x2]
	0x03929D90 STR X8, [X31 + 0x30]
	0x03929D94 LDR X1, [X29]
	0x03929D98 ADD X0, X31, 0x20
	0x03929D9C BL 0x2BBDA6C
	0x03929DA0 TBZ X0, 0x0, 0x3929DD4
	0x03929DA4 LDR W8, [X31 + 0x30]
	0x03929DA8 LDR W9, [X23 + 0x18]
	0x03929DAC CMP W8, W9
	0x03929DB0 B.CS 0x3929E28
	0x03929DB4 SXTW X9, W8
	0x03929DB8 ADD X9, X23, X9, 0x2, LSL
	0x03929DBC LDR V0, [X9 + 0x20]
	0x03929DC0 FCMP S0, S8
	0x03929DC4 B.PL 0x3929D94
	0x03929DC8 MOV V8.16B, V0.16B
	0x03929DCC MOV W20, W8
	0x03929DD0 B 0x3929D94
	0x03929DD4 ADRP X8, 0x7D1000
	0x03929DD8 LDR X8, [X8 + 0x830]
	0x03929DDC ADD X0, X31, 0x20
	0x03929DE0 LDR X1, [X8]
	0x03929DE4 BL 0x2BBDA68
	0x03929DE8 ADRP X8, 0x7CC000
	0x03929DEC LDR X8, [X8 + 0x9D8]
	0x03929DF0 MOV X0, X27
	0x03929DF4 MOV W1, W20
	0x03929DF8 LDR X2, [X8]
	0x03929DFC BL 0x2DAB03C
	0x03929E00 ADRP X8, 0x7D7000
	0x03929E04 LDR X8, [X8 + 0x5A0]
	0x03929E08 MOV X0, X22
	0x03929E0C MOV W1, W20
	0x03929E10 LDR X2, [X8]
	0x03929E14 BL 0x2DAA770
	0x03929E18 LDR W8, [X27 + 0x20]
	0x03929E1C CMP W8, W19
	0x03929E20 B.LT 0x3929BF8
	0x03929E24 B 0x3929E70
	0x03929E28 BL 0x1C16F28
	0x03929E2C B 0x3929FC8
	0x03929E30 B 0x3929E34

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xAB9000
	005 Move W8, [X20+2260]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x826000
	012 Move X0, [X0+2632]
	013 Call 0x1C17CF4
	014 Move X0, 0x826000
	015 Move X0, [X0+2624]
	016 Call 0x1C17CF4
	017 Move X0, 0x7D2000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2260], W8
	022 Move X8, [X19+48]
	023 Move [X19+16], X31
	024 Move [X19+24], X31
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move W2, [X8+24]
	028 Move W9, [X8+28]
	029 Add W9, W9, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X8+24], W31
	032 Move [X8+28], W9
	033 Move X0, [X8+16]
	034 Move W1, W31
	035 Move X3, X31
	036 Call Array.Clear, X0, X1, X2
	037 Move X8, [X19+40]
	038 Compare X8, 0
	039 JumpIfEqual {55}
	040 Move W9, [X8+28]
	041 Add W9, W9, 1
	042 Move [X8+24], W31
	043 Move [X8+28], W9
	044 Move X8, [X19+32]
	045 Compare X8, 0
	046 JumpIfEqual {55}
	047 Move W9, [X8+28]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Add W9, W9, 1
	051 Move [X8+24], W31
	052 Move [X8+28], W9
	053 Move X30, [X31+32]
	054 Return 
	055 Call 0x1C17F20

Method: System.Void CopyTo(UnityEngine.ProBuilder.SceneSelection dst)

Disassembly:
	0x03929E34 MOV X26, X0
	0x03929E38 CMP W1, 0x1
	0x03929E3C B.NE 0x3929FC0
	0x03929E40 MOV X0, X26
	0x03929E44 BL 0x3EB1AD0
	0x03929E48 LDR X25, [X0]
	0x03929E4C BL 0x3EB1AE0
	0x03929E50 ADRP X8, 0x7D1000
	0x03929E54 LDR X8, [X8 + 0x830]
	0x03929E58 ADD X0, X31, 0x20
	0x03929E5C LDR X1, [X8]
	0x03929E60 BL 0x2BBDA68
	0x03929E64 CBZ X25, 0x3929DE8
	0x03929E68 MOV X0, X25
	0x03929E6C BL 0x1C16F18
	0x03929E70 MOV X0, X24
	0x03929E74 LDP X20, X19, [X31 + 0xA0]
	0x03929E78 LDP X22, X21, [X31 + 0x90]
	0x03929E7C LDP X24, X23, [X31 + 0x80]
	0x03929E80 LDP X26, X25, [X31 + 0x70]
	0x03929E84 LDP X28, X27, [X31 + 0x60]
	0x03929E88 LDP X29, X30, [X31 + 0x50]
	0x03929E8C LDR V8, [X31 + 0x40]
	0x03929E90 ADD X31, X31, 0xB0
	0x03929E94 RET
	0x03929E98 ADRP X8, 0x825000
	0x03929E9C LDR X8, [X8 + 0xB08]
	0x03929EA0 LDR X0, [X8]
	0x03929EA4 LDR W8, [X0 + 0xE0]
	0x03929EA8 CBNZ W8, 0x3929EB0
	0x03929EAC BL 0x1C16DFC
	0x03929EB0 LDR X0, [X31 + 0x48]
	0x03929EB4 MOVZ W1, 0x1
	0x03929EB8 MOV X2, X31
	0x03929EBC BL 0x3942EDC
	0x03929EC0 ADRP X21, 0x825000
	0x03929EC4 LDR X21, [X21 + 0xAA8]
	0x03929EC8 MOV X23, X0
	0x03929ECC LDR X8, [X21]
	0x03929ED0 LDR W9, [X8 + 0xE0]
	0x03929ED4 CBNZ W9, 0x3929EE4
	0x03929ED8 MOV X0, X8
	0x03929EDC BL 0x1C16DFC
	0x03929EE0 LDR X8, [X21]
	0x03929EE4 LDR X8, [X8 + 0xB8]
	0x03929EE8 LDR X0, [X8 + 0x28]
	0x03929EEC STR X23, [X8 + 0x20]
	0x03929EF0 CBZ X0, 0x3929FB8
	0x03929EF4 ADRP X8, 0x825000
	0x03929EF8 LDR X8, [X8 + 0xAE8]
	0x03929EFC LDR X1, [X8]
	0x03929F00 BL 0x2A9F124
	0x03929F04 LDR X19, [X31 + 0x48]
	0x03929F08 CBZ X19, 0x3929FB8
	0x03929F0C MOV X0, X19
	0x03929F10 MOV X1, X31
	0x03929F14 BL 0x39140C8
	0x03929F18 ADRP X8, 0x825000
	0x03929F1C LDR X8, [X8 + 0xAA8]
	0x03929F20 LDR X8, [X8]
	0x03929F24 LDR X8, [X8 + 0xB8]
	0x03929F28 STR W0, [X8 + 0x18]
	0x03929F2C LDR X8, [X19 + 0x28]
	0x03929F30 CBZ X8, 0x3929FB8
	0x03929F34 ADRP X21, 0x825000
	0x03929F38 LDR X21, [X21 + 0xAE0]
	0x03929F3C MOV X23, X31
	0x03929F40 LDRSW X9, [X8 + 0x18]
	0x03929F44 CMP X23, X9
	0x03929F48 B.GE 0x3929AFC
	0x03929F4C ADRP X9, 0x825000
	0x03929F50 LDR X9, [X9 + 0xAA8]
	0x03929F54 LDR X0, [X9]
	0x03929F58 LDR W9, [X0 + 0xE0]
	0x03929F5C CBNZ W9, 0x3929F7C
	0x03929F60 BL 0x1C16DFC
	0x03929F64 LDR X8, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB9000
	006 Move W8, [X21+2261]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x826000
	014 Move X0, [X0+1672]
	015 Call 0x1C17CF4
	016 Move X0, 0x826000
	017 Move X0, [X0+2640]
	018 Call 0x1C17CF4
	019 Move X0, 0x826000
	020 Move X0, [X0+2648]
	021 Call 0x1C17CF4
	022 Move X0, 0x826000
	023 Move X0, [X0+2632]
	024 Call 0x1C17CF4
	025 Move X0, 0x826000
	026 Move X0, [X0+2624]
	027 Call 0x1C17CF4
	028 Move X0, 0x7D2000
	029 Move X0, [X0+2136]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2261], W8
	033 Compare X20, 0
	034 JumpIfEqual {95}
	035 Move X8, [X19+16]
	036 Move [X20+16], X8
	037 Move X9, [X19+24]
	038 Move X8, [X20+48]
	039 Move [X20+24], X9
	040 Compare X8, 0
	041 JumpIfEqual {95}
	042 Move W2, [X8+24]
	043 Move W9, [X8+28]
	044 Add W9, W9, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X8+24], W31
	047 Move [X8+28], W9
	048 Move X0, [X8+16]
	049 Move W1, W31
	050 Move X3, X31
	051 Call Array.Clear, X0, X1, X2
	052 Move X8, [X20+40]
	053 Compare X8, 0
	054 JumpIfEqual {95}
	055 Move W9, [X8+28]
	056 Add W9, W9, 1
	057 Move [X8+24], W31
	058 Move [X8+28], W9
	059 Move X8, [X20+32]
	060 Compare X8, 0
	061 JumpIfEqual {95}
	062 Move W9, [X8+28]
	063 Add W9, W9, 1
	064 Move [X8+24], W31
	065 Move [X8+28], W9
	066 Move X0, [X20+48]
	067 Compare X0, 0
	068 JumpIfEqual {95}
	069 Move X8, 0x826000
	070 Move X8, [X8+2640]
	071 Move X1, [X19+48]
	072 Move X2, [X8]
	073 Call List`1<Object>.AddRange, X0, X1
	074 Move X0, [X20+40]
	075 Compare X0, 0
	076 JumpIfEqual {95}
	077 Move X8, 0x826000
	078 Move X8, [X8+2648]
	079 Move X1, [X19+40]
	080 Move X2, [X8]
	081 Call List`1<Edge>.AddRange, X0, X1
	082 Move X0, [X20+32]
	083 Compare X0, 0
	084 JumpIfEqual {95}
	085 Move X8, 0x826000
	086 Move X8, [X8+1672]
	087 Move X1, [X19+32]
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X2, [X8]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call List`1<Int32>.AddRange, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03929F68 LDR X8, [X8 + 0x28]
	0x03929F6C CBZ X8, 0x3929FB8
	0x03929F70 ADRP X9, 0x825000
	0x03929F74 LDR X9, [X9 + 0xAA8]
	0x03929F78 LDR X0, [X9]
	0x03929F7C LDR W9, [X8 + 0x18]
	0x03929F80 CMP X23, X9
	0x03929F84 B.CS 0x3929FBC
	0x03929F88 LDR X9, [X0 + 0xB8]
	0x03929F8C LDR X0, [X9 + 0x28]
	0x03929F90 CBZ X0, 0x3929FB8
	0x03929F94 ADD X8, X8, X23, 0x3, LSL
	0x03929F98 LDR X1, [X8 + 0x20]
	0x03929F9C LDR X3, [X21]
	0x03929FA0 MOV W2, W23
	0x03929FA4 BL 0x2A9EF9C
	0x03929FA8 LDR X8, [X31 + 0x48]
	0x03929FAC ADD X23, X23, 0x1
	0x03929FB0 LDR X8, [X8 + 0x28]
	0x03929FB4 CBNZ X8, 0x3929F40
	0x03929FB8 BL 0x1C16F20
	0x03929FBC BL 0x1C16F28
	0x03929FC0 MOV X25, X31
	0x03929FC4 B 0x3929FCC
	0x03929FC8 MOV X26, X0
	0x03929FCC ADRP X8, 0x7D1000
	0x03929FD0 LDR X8, [X8 + 0x830]
	0x03929FD4 LDR X1, [X8]
	0x03929FD8 ADD X0, X31, 0x20
	0x03929FDC BL 0x2BBDA68
	0x03929FE0 CBNZ X25, 0x3929FEC
	0x03929FE4 MOV X0, X26
	0x03929FE8 BL 0x1D2C690
	0x03929FEC MOV X0, X25
	0x03929FF0 BL 0x1C16F18
	0x03929FF4 BL 0x1990590
	0x03929FF8 SUB X31, X31, 0xA0
	0x03929FFC STP D15, D14, [X31 + 0x10]
	0x0392A000 STP D13, D12, [X31 + 0x20]
	0x0392A004 STP D11, D10, [X31 + 0x30]
	0x0392A008 STP D9, D8, [X31 + 0x40]
	0x0392A00C STP X30, X27, [X31 + 0x50]
	0x0392A010 STP X26, X25, [X31 + 0x60]
	0x0392A014 STP X24, X23, [X31 + 0x70]
	0x0392A018 STP X22, X21, [X31 + 0x80]
	0x0392A01C STP X20, X19, [X31 + 0x90]
	0x0392A020 CBZ X2, 0x392A408
	0x0392A024 LDR X8, [X2 + 0x28]
	0x0392A028 MOV X19, X2
	0x0392A02C CBZ X8, 0x392A408
	0x0392A030 LDR W9, [X8 + 0x18]
	0x0392A034 MOV W21, W0
	0x0392A038 CMP W9, W0
	0x0392A03C B.LS 0x392A404
	0x0392A040 SXTW X24, W21
	0x0392A044 ADD X8, X8, X24, 0x3, LSL
	0x0392A048 MOV W20, W1
	0x0392A04C LDR X1, [X8 + 0x20]
	0x0392A050 MOV X0, X19
	0x0392A054 MOV X2, X31
	0x0392A058 BL 0x390987C
	0x0392A05C LDR X8, [X19 + 0x28]
	0x0392A060 CBZ X8, 0x392A408
	0x0392A064 LDR W9, [X8 + 0x18]
	0x0392A068 CMP W9, W20
	0x0392A06C B.LS 0x392A404
	0x0392A070 SXTW X23, W20
	0x0392A074 ADD X8, X8, X23, 0x3, LSL
	0x0392A078 LDR X1, [X8 + 0x20]
	0x0392A07C MOV X0, X19
	0x0392A080 MOV X2, X31
	0x0392A084 MOV V11.16B, V0.16B
	0x0392A088 MOV V12.16B, V1.16B
	0x0392A08C MOV V13.16B, V2.16B
	0x0392A090 BL 0x390987C
	0x0392A094 ADRP X26, 0xAAE000
	0x0392A098 LDRB W8, [X26 + 0x785]
	0x0392A09C MOV V8.16B, V0.16B
	0x0392A0A0 MOV V9.16B, V1.16B
	0x0392A0A4 MOV V10.16B, V2.16B
	0x0392A0A8 CBNZ W8, 0x392A0C0
	0x0392A0AC ADRP X0, 0x7C9000
	0x0392A0B0 LDR X0, [X0 + 0x5A8]
	0x0392A0B4 BL 0x1C16CF4
	0x0392A0B8 MOVZ W8, 0x1
	0x0392A0BC STRB W8, [X26 + 0x785]
	0x0392A0C0 ADRP X22, 0x7C9000
	0x0392A0C4 LDR X22, [X22 + 0x5A8]
	0x0392A0C8 LDR X0, [X22]
	0x0392A0CC LDR W8, [X0 + 0xE0]
	0x0392A0D0 CBNZ W8, 0x392A0D8
	0x0392A0D4 BL 0x1C16DFC
	0x0392A0D8 ADRP X8, 0xFFFFFFFFFD1C0000
	0x0392A0DC FMUL S0, S11, S11
	0x0392A0E0 FMUL S1, S12, S12
	0x0392A0E4 LDR V14, [X8 + 0x17C]
	0x0392A0E8 ADRP X25, 0x7C9000
	0x0392A0EC FADD S0, S0, S1
	0x0392A0F0 FMUL S1, S13, S13
	0x0392A0F4 LDR X25, [X25 + 0x5A0]
	0x0392A0F8 FADD S0, S1, S0
	0x0392A0FC FSQRT S0, S0
	0x0392A100 FCMP S0, S14
	0x0392A104 B.LE 0x392A118
	0x0392A108 FDIV S11, S11, S0
	0x0392A10C FDIV S12, S12, S0
	0x0392A110 FDIV S13, S13, S0
	0x0392A114 B 0x392A148
	0x0392A118 ADRP X27, 0xAAE000
	0x0392A11C LDRB W8, [X27 + 0x783]
	0x0392A120 CBNZ W8, 0x392A138
	0x0392A124 ADRP X0, 0x7C9000
	0x0392A128 LDR X0, [X0 + 0x5A0]
	0x0392A12C BL 0x1C16CF4
	0x0392A130 MOVZ W8, 0x1
	0x0392A134 STRB W8, [X27 + 0x783]
	0x0392A138 LDR X8, [X25]
	0x0392A13C LDR X8, [X8 + 0xB8]
	0x0392A140 LDP S11, S12, [X8]
	0x0392A144 LDR V13, [X8 + 0x8]
	0x0392A148 LDRB W8, [X26 + 0x785]
	0x0392A14C CBNZ W8, 0x392A164
	0x0392A150 ADRP X0, 0x7C9000
	0x0392A154 LDR X0, [X0 + 0x5A8]
	0x0392A158 BL 0x1C16CF4
	0x0392A15C MOVZ W8, 0x1
	0x0392A160 STRB W8, [X26 + 0x785]
	0x0392A164 LDR X0, [X22]
	0x0392A168 LDR W8, [X0 + 0xE0]
	0x0392A16C CBNZ W8, 0x392A174
	0x0392A170 BL 0x1C16DFC
	0x0392A174 FMUL S0, S8, S8
	0x0392A178 FMUL S1, S9, S9
	0x0392A17C FADD S0, S0, S1
	0x0392A180 FMUL S1, S10, S10
	0x0392A184 FADD S0, S1, S0
	0x0392A188 FSQRT S0, S0
	0x0392A18C ADRP X26, 0xAAE000
	0x0392A190 FCMP S0, S14
	0x0392A194 B.LE 0x392A1CC
	0x0392A198 LDRB W8, [X26 + 0x783]
	0x0392A19C FDIV S4, S8, S0
	0x0392A1A0 FDIV S9, S9, S0
	0x0392A1A4 FDIV S10, S10, S0
	0x0392A1A8 CBNZ W8, 0x392A1F8
	0x0392A1AC ADRP X0, 0x7C9000
	0x0392A1B0 LDR X0, [X0 + 0x5A0]
	0x0392A1B4 MOV V8.16B, V4.16B
	0x0392A1B8 BL 0x1C16CF4
	0x0392A1BC MOV V4.16B, V8.16B
	0x0392A1C0 MOVZ W8, 0x1
	0x0392A1C4 STRB W8, [X26 + 0x783]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xAB9000
	008 Move X20, 0x7CB000
	009 Move X22, 0x7CB000
	010 Move W8, [X21+2262]
	011 Move X20, [X20+2288]
	012 Move X22, [X22+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x7CB000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x7CB000
	022 Move X0, [X0+2288]
	023 Call 0x1C17CF4
	024 Move X0, 0x826000
	025 Move X0, [X0+2656]
	026 Call 0x1C17CF4
	027 Move X0, 0x826000
	028 Move X0, [X0+2664]
	029 Call 0x1C17CF4
	030 Move X0, 0x826000
	031 Move X0, [X0+2672]
	032 Call 0x1C17CF4
	033 Move X0, 0x826000
	034 Move X0, [X0+2680]
	035 Call 0x1C17CF4
	036 Move X0, 0x826000
	037 Move X0, [X0+2688]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2262], W8
	041 Move X0, [X20]
	042 Move X23, 0x826000
	043 Move X23, [X23+2656]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call StringBuilder..ctor, X0
	048 Move X0, [X22]
	049 Move X21, [X19+16]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X21
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move X21, [X23]
	059 Move X1, X31
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {70}
	064 Move X0, [X19+16]
	065 Compare X0, 0
	066 JumpIfEqual {177}
	067 Move X1, X31
	068 Call Object.get_name, X0
	069 Move X1, X0
	070 Move X0, X21
	071 Move X2, X31
	072 Call String.Concat, X0, X1
	073 Compare X20, 0
	074 JumpIfEqual {177}
	075 Move X23, 0x825000
	076 Move X23, [X23+2672]
	077 Move X1, X0
	078 Move X0, X20
	079 Move X2, X31
	080 Call StringBuilder.AppendLine, X0, X1
	081 Move X0, [X22]
	082 Move X21, [X19+24]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X21
	088 Move X1, X31
	089 Move X2, X31
	090 Call Object.op_Inequality, X0, X1
	091 Move X21, [X23]
	092 Move X1, X31
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {103}
	097 Move X0, [X19+24]
	098 Compare X0, 0
	099 JumpIfEqual {177}
	100 Move X1, X31
	101 Call Object.get_name, X0
	102 Move X1, X0
	103 Move X22, 0x825000
	104 Move X22, [X22+2664]
	105 Move X0, X21
	106 Move X2, X31
	107 Call String.Concat, X0, X1
	108 Move X1, X0
	109 Move X0, X20
	110 Move X2, X31
	111 Call StringBuilder.AppendLine, X0, X1
	112 Move X0, [X19+48]
	113 Move X21, [X22]
	114 Compare X0, 0
	115 JumpIfEqual {121}
	116 Move X8, [X0]
	117 Move X9, [X8+360]
	118 Move X1, [X8+368]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X1, X0
	121 Move X1, X31
	122 Move X0, X21
	123 Move X2, X31
	124 Call String.Concat, X0, X1
	125 Move X1, X0
	126 Move X0, X20
	127 Move X2, X31
	128 Call StringBuilder.AppendLine, X0, X1
	129 Move X0, [X19+40]
	130 Compare X0, 0
	131 JumpIfEqual {177}
	132 Move X8, [X0]
	133 Move X21, 0x825000
	134 Move X22, 0x825000
	135 Move X9, [X8+360]
	136 Move X1, [X8+368]
	137 Move X21, [X21+2680]
	138 Move X22, [X22+2688]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X8, [X21]
	141 Move X1, X0
	142 Move X2, X31
	143 Move X0, X8
	144 Call String.Concat, X0, X1
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X31
	148 Call StringBuilder.AppendLine, X0, X1
	149 Move X0, [X19+32]
	150 Move X19, [X22]
	151 Compare X0, 0
	152 JumpIfEqual {158}
	153 Move X8, [X0]
	154 Move X9, [X8+360]
	155 Move X1, [X8+368]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X1, X0
	158 Move X1, X31
	159 Move X0, X19
	160 Move X2, X31
	161 Call String.Concat, X0, X1
	162 Move X1, X0
	163 Move X0, X20
	164 Move X2, X31
	165 Call StringBuilder.AppendLine, X0, X1
	166 Move X8, [X20]
	167 Move X0, X20
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X2, [X8+360]
	173 Move X1, [X8+368]
	174 Move X30, [X31+48]
	175 Move X23, [X31+56]
	176 CallNoReturn X2
	177 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.ProBuilder.SceneSelection other)

Disassembly:
	0x0392A1C8 B 0x392A1F8
	0x0392A1CC LDRB W8, [X26 + 0x783]
	0x0392A1D0 CBNZ W8, 0x392A1E8
	0x0392A1D4 ADRP X0, 0x7C9000
	0x0392A1D8 LDR X0, [X0 + 0x5A0]
	0x0392A1DC BL 0x1C16CF4
	0x0392A1E0 MOVZ W8, 0x1
	0x0392A1E4 STRB W8, [X26 + 0x783]
	0x0392A1E8 LDR X8, [X25]
	0x0392A1EC LDR X8, [X8 + 0xB8]
	0x0392A1F0 LDP S4, S9, [X8]
	0x0392A1F4 LDR V10, [X8 + 0x8]
	0x0392A1F8 LDR X8, [X19 + 0x28]
	0x0392A1FC CBZ X8, 0x392A408
	0x0392A200 LDR W9, [X8 + 0x18]
	0x0392A204 CMP W9, W21
	0x0392A208 B.LS 0x392A404
	0x0392A20C ADD X10, X8, X24, 0x3, LSL
	0x0392A210 LDR X10, [X10 + 0x20]
	0x0392A214 CBZ X10, 0x392A408
	0x0392A218 LDR X10, [X10 + 0x10]
	0x0392A21C STP S12, S9, [X31 + 0x8]
	0x0392A220 CBZ X10, 0x392A408
	0x0392A224 LDR X11, [X25]
	0x0392A228 MOV V9.16B, V13.16B
	0x0392A22C MOV V13.16B, V11.16B
	0x0392A230 LDR X12, [X11 + 0xB8]
	0x0392A234 LDR W11, [X10 + 0x18]
	0x0392A238 LDR V11, [X12]
	0x0392A23C LDUR V12, [X12 + 0x4]
	0x0392A240 CMP W11, 0x1
	0x0392A244 MOV V14.16B, V11.16B
	0x0392A248 MOV V15.16B, V12.16B
	0x0392A24C B.LT 0x392A2B4
	0x0392A250 LDR X13, [X19 + 0x58]
	0x0392A254 SCVTF S0, W11
	0x0392A258 MOV W12, W31
	0x0392A25C UNIMPLEMENTED
	0x0392A260 MOVZ W14, 0xC
	0x0392A264 MOV V14.16B, V11.16B
	0x0392A268 MOV V15.16B, V12.16B
	0x0392A26C CMP W11, W12
	0x0392A270 B.EQ 0x392A404
	0x0392A274 CBZ X13, 0x392A408
	0x0392A278 ADD X15, X10, W12, 0x2, SXTW
	0x0392A27C LDRSW X15, [X15 + 0x20]
	0x0392A280 LDR W16, [X13 + 0x18]
	0x0392A284 CMP W15, W16
	0x0392A288 B.CS 0x392A404
	0x0392A28C MADD X15, X15, X14, X13
	0x0392A290 LDR V2, [X15 + 0x20]
	0x0392A294 LDUR V3, [X15 + 0x24]
	0x0392A298 ADD W12, W12, 0x1
	0x0392A29C CMP W11, W12
	0x0392A2A0 FDIV S2, S2, S0
	0x00000000 INVALID
	0x0392A2A8 FADD S14, S14, S2
	0x0392A2AC FADD V15.2S, V15.2S, V3.2S
	0x0392A2B0 B.NE 0x392A26C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAB8000
	006 Move W8, [X21+2263]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x825000
	014 Move X0, [X0+2696]
	015 Call 0x1C17CF4
	016 Move X0, 0x825000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move X0, 0x825000
	020 Move X0, [X0+2712]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2263], W8
	024 Compare X19, 0
	025 JumpIfEqual {74}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X20+16]
	028 Move X1, [X19+16]
	029 Move X2, X31
	030 Call Object.Equals, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {74}
	035 Move X0, [X20+24]
	036 Move X1, [X19+24]
	037 Move X2, X31
	038 Call Object.Equals, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {74}
	043 Move X8, 0x825000
	044 Move X0, [X20+32]
	045 Move X1, [X19+32]
	046 Move X8, [X8+2712]
	047 Move X2, [X8]
	048 Call Enumerable.SequenceEqual, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {74}
	053 Move X8, 0x825000
	054 Move X0, [X20+40]
	055 Move X1, [X19+40]
	056 Move X8, [X8+2696]
	057 Move X2, [X8]
	058 Call Enumerable.SequenceEqual, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {74}
	063 Move X8, 0x825000
	064 Move X0, [X20+48]
	065 Move X1, [X19+48]
	066 Move X8, [X8+2704]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X2, [X8]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Enumerable.SequenceEqual, X0, X1
	073 Return X0
	074 Move W0, W31
	075 Move W0, 1
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0392A2B4 CMP W9, W20
	0x0392A2B8 B.LS 0x392A404
	0x0392A2BC ADD X8, X8, X23, 0x3, LSL
	0x0392A2C0 LDR X8, [X8 + 0x20]
	0x0392A2C4 CBZ X8, 0x392A408
	0x0392A2C8 LDR X8, [X8 + 0x10]
	0x0392A2CC CBZ X8, 0x392A408
	0x0392A2D0 LDR W9, [X8 + 0x18]
	0x0392A2D4 CMP W9, 0x1
	0x0392A2D8 B.LT 0x392A338
	0x0392A2DC LDR X11, [X19 + 0x58]
	0x0392A2E0 SCVTF S0, W9
	0x0392A2E4 MOV W10, W31
	0x0392A2E8 UNIMPLEMENTED
	0x0392A2EC MOVZ W12, 0xC
	0x0392A2F0 CMP W9, W10
	0x0392A2F4 B.EQ 0x392A404
	0x0392A2F8 CBZ X11, 0x392A408
	0x0392A2FC ADD X13, X8, W10, 0x2, SXTW
	0x0392A300 LDRSW X13, [X13 + 0x20]
	0x0392A304 LDR W14, [X11 + 0x18]
	0x0392A308 CMP W13, W14
	0x0392A30C B.CS 0x392A404
	0x0392A310 MADD X13, X13, X12, X11
	0x0392A314 LDR V2, [X13 + 0x20]
	0x0392A318 LDUR V3, [X13 + 0x24]
	0x0392A31C ADD W10, W10, 0x1
	0x0392A320 CMP W9, W10
	0x0392A324 FDIV S2, S2, S0
	0x00000000 INVALID
	0x0392A32C FADD S11, S11, S2
	0x0392A330 FADD V12.2S, V12.2S, V3.2S
	0x0392A334 B.NE 0x392A2F0
	0x0392A338 ADRP X19, 0xAAE000
	0x0392A33C LDRB W8, [X19 + 0x784]
	0x0392A340 CBNZ W8, 0x392A368
	0x0392A344 ADRP X0, 0x7C9000
	0x0392A348 LDR X0, [X0 + 0x5A8]
	0x0392A34C MOV V8.16B, V10.16B
	0x0392A350 MOV V10.16B, V4.16B
	0x0392A354 BL 0x1C16CF4
	0x0392A358 MOV V4.16B, V10.16B
	0x0392A35C MOV V10.16B, V8.16B
	0x0392A360 MOVZ W8, 0x1
	0x0392A364 STRB W8, [X19 + 0x784]
	0x0392A368 LDR X0, [X22]
	0x0392A36C FSUB S14, S11, S14
	0x0392A370 FSUB V11.2S, V12.2S, V15.2S
	0x0392A374 LDR W8, [X0 + 0xE0]
	0x0392A378 CBNZ W8, 0x392A390
	0x0392A37C MOV V8.16B, V10.16B
	0x0392A380 MOV V10.16B, V4.16B
	0x0392A384 BL 0x1C16DFC
	0x0392A388 MOV V4.16B, V10.16B
	0x0392A38C MOV V10.16B, V8.16B
	0x0392A390 LDP S3, S2, [X31 + 0x8]
	0x0392A394 FMUL S1, S13, S4
	0x0392A398 FMUL S4, S14, S14
	0x00000000 INVALID
	0x0392A3A0 FMUL S2, S3, S2
	0x0392A3A4 FMUL S0, S9, S10
	0x0392A3A8 FADD S1, S1, S2
	0x0392A3AC FADD S2, S4, S5
	0x0392A3B0 MOV S4, V5.S[1]
	0x0392A3B4 FMOV S3, 1
	0x0392A3B8 FADD S0, S0, S1
	0x0392A3BC FADD S1, S2, S4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAB8000
	007 Move W8, [X21+2264]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x825000
	015 Move X0, [X0+2720]
	016 Call 0x1C17CF4
	017 Move X0, 0x7CA000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2264], W8
	022 Compare X19, 0
	023 JumpIfEqual {49}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Call "il2cpp_vm_object_is_inst", X0
	028 Move X21, X0
	029 Move X0, X20
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, 0x7CA000
	033 Move X8, [X8+1728]
	034 Move X22, X0
	035 Move X8, [X8]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X22
	043 Move X2, X31
	044 Call Type.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {57}
	049 Move W0, W31
	050 Move W0, 1
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X9, 0x825000
	058 Move X9, [X9+2720]
	059 Move X8, [X19]
	060 Move X1, [X9]
	061 Move W10, [X8+304]
	062 Move W9, [X1+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X8+200]
	065 Add X8, X8, X9
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X20
	069 Move X1, X19
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Call SceneSelection.Equals, X0, X1
	076 Return X0
	077 Move X0, X19
	078 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0392A3C0 LDP X20, X19, [X31 + 0x90]
	0x0392A3C4 LDP X22, X21, [X31 + 0x80]
	0x0392A3C8 LDP X24, X23, [X31 + 0x70]
	0x0392A3CC LDP X26, X25, [X31 + 0x60]
	0x0392A3D0 LDP X30, X27, [X31 + 0x50]
	0x0392A3D4 LDP D9, D8, [X31 + 0x40]
	0x0392A3D8 LDP D11, D10, [X31 + 0x30]
	0x0392A3DC LDP D13, D12, [X31 + 0x20]
	0x0392A3E0 LDP D15, D14, [X31 + 0x10]
	0x0392A3E4 FMOV S6, 10
	0x0392A3E8 FSUB S0, S3, S0
	0x0392A3EC FSQRT S1, S1
	0x0392A3F0 FADD S0, S0, S0
	0x0392A3F4 FADD S1, S1, S6
	0x0392A3F8 FADD S0, S0, S1
	0x0392A3FC ADD X31, X31, 0xA0
	0x0392A400 RET
	0x0392A404 BL 0x1C16F28
	0x0392A408 BL 0x1C16F20
	0x0392A40C STR X30, [X31 - 0x30]!
	0x0392A410 STP X22, X21, [X31 + 0x10]
	0x0392A414 STP X20, X19, [X31 + 0x20]
	0x0392A418 ADRP X21, 0xAB7000
	0x0392A41C ADRP X22, 0x824000
	0x0392A420 ADRP X19, 0x824000
	0x0392A424 ADRP X20, 0x824000
	0x0392A428 LDRB W8, [X21 + 0x8DD]
	0x0392A42C LDR X22, [X22 + 0xB10]
	0x0392A430 LDR X19, [X19 + 0xB18]
	0x0392A434 LDR X20, [X20 + 0xAA8]
	0x0392A438 TBNZ X8, 0x0, 0x392A468
	0x0392A43C ADRP X0, 0x824000
	0x0392A440 LDR X0, [X0 + 0xB18]
	0x0392A444 BL 0x1C16CF4
	0x0392A448 ADRP X0, 0x824000
	0x0392A44C LDR X0, [X0 + 0xB10]
	0x0392A450 BL 0x1C16CF4
	0x0392A454 ADRP X0, 0x824000
	0x0392A458 LDR X0, [X0 + 0xAA8]
	0x0392A45C BL 0x1C16CF4
	0x0392A460 MOVZ W8, 0x1
	0x0392A464 STRB W8, [X21 + 0x8DD]
	0x0392A468 LDR X0, [X22]
	0x0392A46C BL 0x1C16F10
	0x0392A470 LDR X1, [X19]
	0x0392A474 MOV X19, X0
	0x0392A478 BL 0x2A9E704
	0x0392A47C LDR X8, [X20]
	0x0392A480 LDP X22, X21, [X31 + 0x10]
	0x0392A484 LDR X8, [X8 + 0xB8]
	0x0392A488 STR X19, [X8 + 0x28]
	0x0392A48C LDP X20, X19, [X31 + 0x20]
	0x0392A490 LDR X30, [X31], #0x30
	0x0392A494 RET
	0x0392A498 LDR W0, [X0 + 0x10]
	0x0392A49C RET
	0x0392A4A0 LDR W0, [X0 + 0x14]
	0x0392A4A4 RET
	0x0392A4A8 LDR W0, [X0 + 0x18]
	0x0392A4AC RET
	0x0392A4B0 LDR W0, [X0 + 0x1C]
	0x0392A4B4 RET
	0x0392A4B8 STP X30, X21, [X31 - 0x20]!
	0x0392A4BC STP X20, X19, [X31 + 0x10]
	0x0392A4C0 ADRP X21, 0xAB7000
	0x0392A4C4 ADRP X20, 0x7C9000
	0x0392A4C8 LDRB W8, [X21 + 0x8DE]
	0x0392A4CC LDR X20, [X20 + 0x988]
	0x0392A4D0 MOV X19, X0
	0x0392A4D4 TBNZ X8, 0x0, 0x392A4EC
	0x0392A4D8 ADRP X0, 0x7C9000
	0x0392A4DC LDR X0, [X0 + 0x988]
	0x0392A4E0 BL 0x1C16CF4
	0x0392A4E4 MOVZ W8, 0x1
	0x0392A4E8 STRB W8, [X21 + 0x8DE]
	0x0392A4EC LDR X8, [X19 + 0x20]
	0x0392A4F0 LDR X9, [X20]
	0x0392A4F4 LDP X20, X19, [X31 + 0x10]
	0x0392A4F8 CMP X8, 0x0
	0x0392A4FC CSEL X0, X9, X8, EQ
	0x0392A500 LDP X30, X21, [X31], #0x20
	0x0392A504 RET
	0x0392A508 STP X30, X21, [X31 - 0x20]!
	0x0392A50C STP X20, X19, [X31 + 0x10]
	0x0392A510 ADRP X21, 0xAB7000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xAB8000
	008 Move X21, 0x7CA000
	009 Move W8, [X20+2265]
	010 Move X21, [X21+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7CA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2265], W8
	021 Move X0, [X21]
	022 Move X20, [X19+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {44}
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {108}
	038 Move X8, [X0]
	039 Move X9, [X8+344]
	040 Move X1, [X8+352]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move W8, 397
	043 Multiply W23, W0, W8
	044 Move W23, W31
	045 Move X0, [X21]
	046 Move X20, [X19+24]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {67}
	059 Move X0, [X19+24]
	060 Compare X0, 0
	061 JumpIfEqual {108}
	062 Move X8, [X0]
	063 Move X9, [X8+344]
	064 Move X1, [X8+352]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move W20, W0
	067 Move W20, W31
	068 Move X0, [X19+32]
	069 Compare X0, 0
	070 JumpIfEqual {76}
	071 Move X8, [X0]
	072 Move X9, [X8+344]
	073 Move X1, [X8+352]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move W21, W0
	076 Move W21, W31
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {85}
	080 Move X8, [X0]
	081 Move X9, [X8+344]
	082 Move X1, [X8+352]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move W22, W0
	085 Move W22, W31
	086 Move X0, [X19+48]
	087 Compare X0, 0
	088 JumpIfEqual {93}
	089 Move X8, [X0]
	090 Move X9, [X8+344]
	091 Move X1, [X8+352]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Xor W8, W20, W23
	094 Move W9, 397
	095 Multiply W8, W8, W9
	096 Xor W8, W21, W8
	097 Multiply W8, W8, W9
	098 Xor W8, W22, W8
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Multiply W8, W8, W9
	104 Xor W0, W0, W8
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return X0
	108 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.SceneSelection left, UnityEngine.ProBuilder.SceneSelection right)

Disassembly:
	0x0392A514 ADRP X20, 0x7C9000
	0x0392A518 LDRB W8, [X21 + 0x8DF]

ISIL:
	001 Move X2, X31
	002 Call Object.Equals, X0, X1
	003 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.SceneSelection left, UnityEngine.ProBuilder.SceneSelection right)

Disassembly:
	0x0392A51C LDR X20, [X20 + 0x988]
	0x0392A520 MOV X19, X0
	0x0392A524 TBNZ X8, 0x0, 0x392A53C
	0x0392A528 ADRP X0, 0x7C9000
	0x0392A52C LDR X0, [X0 + 0x988]
	0x0392A530 BL 0x1C16CF4
	0x0392A534 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X2, X31
	003 Call Object.Equals, X0, X1
	004 NotImplemented "Instruction ORN not yet implemented."
	005 And W0, W8, 1
	006 Move X30, [X31+16]
	007 Return X0

