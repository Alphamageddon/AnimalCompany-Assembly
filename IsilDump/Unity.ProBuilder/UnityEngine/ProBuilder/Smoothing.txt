Type: UnityEngine.ProBuilder.Smoothing

Method: System.Int32 GetUnusedSmoothingGroup(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x039370A4 STR S1, [X31 + 0x2C]
	0x039370A8 FDIV S0, S2, S0
	0x039370AC B 0x39370EC
	0x039370B0 ADRP X21, 0xAA1000
	0x039370B4 LDRB W8, [X21 + 0x783]
	0x039370B8 CBNZ W8, 0x39370D0
	0x039370BC ADRP X0, 0x7BC000
	0x039370C0 LDR X0, [X0 + 0x5A0]
	0x039370C4 BL 0x1C16CF4
	0x039370C8 MOVZ W8, 0x1
	0x039370CC STRB W8, [X21 + 0x783]
	0x039370D0 ADRP X8, 0x7BC000
	0x039370D4 LDR X8, [X8 + 0x5A0]
	0x039370D8 LDR X8, [X8]
	0x039370DC LDR X8, [X8 + 0xB8]
	0x039370E0 LDP S14, S0, [X8]
	0x039370E4 STR S0, [X31 + 0x2C]
	0x039370E8 LDR V0, [X8 + 0x8]
	0x039370EC LDRB W8, [X19 + 0x785]
	0x039370F0 STR S0, [X31 + 0x20]
	0x039370F4 CBNZ W8, 0x393710C
	0x039370F8 ADRP X0, 0x7BC000
	0x039370FC LDR X0, [X0 + 0x5A8]
	0x03937100 BL 0x1C16CF4
	0x03937104 MOVZ W8, 0x1
	0x03937108 STRB W8, [X19 + 0x785]
	0x0393710C LDR X0, [X20]
	0x03937110 LDR W8, [X0 + 0xE0]
	0x03937114 CBNZ W8, 0x393711C
	0x03937118 BL 0x1C16DFC
	0x0393711C FMUL S0, S9, S9
	0x03937120 FMUL S1, S10, S10
	0x03937124 FADD S0, S0, S1
	0x03937128 FMUL S1, S8, S8
	0x0393712C FADD S0, S1, S0
	0x03937130 FSQRT S0, S0
	0x03937134 FCMP S0, S15
	0x03937138 B.LE 0x393714C
	0x0393713C FDIV S9, S9, S0
	0x03937140 FDIV S10, S10, S0
	0x03937144 FDIV S8, S8, S0
	0x03937148 B 0x3937184
	0x0393714C ADRP X21, 0xAA1000
	0x03937150 LDRB W8, [X21 + 0x783]
	0x03937154 CBNZ W8, 0x393716C
	0x03937158 ADRP X0, 0x7BC000
	0x0393715C LDR X0, [X0 + 0x5A0]
	0x03937160 BL 0x1C16CF4
	0x03937164 MOVZ W8, 0x1
	0x03937168 STRB W8, [X21 + 0x783]
	0x0393716C ADRP X8, 0x7BC000
	0x03937170 LDR X8, [X8 + 0x5A0]
	0x03937174 LDR X8, [X8]
	0x03937178 LDR X8, [X8 + 0xB8]
	0x0393717C LDP S9, S10, [X8]
	0x03937180 LDR V8, [X8 + 0x8]
	0x03937184 LDRB W8, [X19 + 0x785]
	0x03937188 CBNZ W8, 0x39371A0
	0x0393718C ADRP X0, 0x7BC000
	0x03937190 LDR X0, [X0 + 0x5A8]
	0x03937194 BL 0x1C16CF4
	0x03937198 MOVZ W8, 0x1
	0x0393719C STRB W8, [X19 + 0x785]
	0x039371A0 LDR X0, [X20]
	0x039371A4 LDR W8, [X0 + 0xE0]
	0x039371A8 CBNZ W8, 0x39371B0
	0x039371AC BL 0x1C16DFC
	0x039371B0 FMUL S0, S13, S13
	0x039371B4 FMUL S1, S12, S12
	0x039371B8 FADD S0, S0, S1
	0x039371BC FMUL S1, S11, S11
	0x039371C0 FADD S0, S1, S0
	0x039371C4 FSQRT S2, S0
	0x039371C8 FCMP S2, S15
	0x039371CC B.LE 0x39371E4
	0x039371D0 FDIV S0, S13, S2
	0x039371D4 FDIV S1, S12, S2
	0x039371D8 FDIV S2, S11, S2
	0x039371DC LDR V11, [X31 + 0x14]
	0x039371E0 B 0x3937220
	0x039371E4 ADRP X19, 0xAA1000
	0x039371E8 LDRB W8, [X19 + 0x783]
	0x039371EC LDR V11, [X31 + 0x14]
	0x039371F0 CBNZ W8, 0x3937208
	0x039371F4 ADRP X0, 0x7BC000
	0x039371F8 LDR X0, [X0 + 0x5A0]
	0x039371FC BL 0x1C16CF4
	0x03937200 MOVZ W8, 0x1
	0x03937204 STRB W8, [X19 + 0x783]
	0x03937208 ADRP X8, 0x7BC000
	0x0393720C LDR X8, [X8 + 0x5A0]
	0x03937210 LDR X8, [X8]
	0x03937214 LDR X8, [X8 + 0xB8]
	0x03937218 LDP S0, S1, [X8]
	0x0393721C LDR V2, [X8 + 0x8]
	0x03937220 LDP S4, S3, [X31 + 0xC]
	0x03937224 LDR V5, [X31 + 0x8]
	0x03937228 FMUL S3, S3, S9
	0x0393722C FMUL S4, S4, S10
	0x03937230 FADD S3, S3, S4
	0x03937234 FMUL S4, S5, S8
	0x03937238 FADD S3, S4, S3
	0x0393723C FABS S3, S3
	0x03937240 FCMP S3, S11
	0x03937244 B.LE 0x3937274
	0x03937248 LDR V3, [X31 + 0x2C]
	0x0393724C FMUL S0, S14, S0
	0x03937250 FMUL S1, S3, S1
	0x03937254 FADD S0, S0, S1
	0x03937258 LDR V1, [X31 + 0x20]
	0x0393725C FMUL S1, S1, S2
	0x03937260 FADD S0, S1, S0
	0x03937264 FABS S0, S0
	0x03937268 FCMP S0, S11
	0x0393726C CSET W0, GT
	0x03937270 B 0x3937278
	0x03937274 MOV W0, W31
	0x03937278 LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xAAB000
	010 Move X21, 0x7BD000
	011 Move W8, [X20+2316]
	012 Move X21, [X21+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x818000
	019 Move X0, [X0+1688]
	020 Call 0x1C17CF4
	021 Move X0, 0x818000
	022 Move X0, [X0+1296]
	023 Call 0x1C17CF4
	024 Move X0, 0x7BE000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x7BE000
	028 Move X0, [X0+3592]
	029 Call 0x1C17CF4
	030 Move X0, 0x7BD000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x818000
	034 Move X0, [X0+3456]
	035 Call 0x1C17CF4
	036 Move X0, 0x818000
	037 Move X0, [X0+3464]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2316], W8
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {118}
	054 Compare X19, 0
	055 JumpIfEqual {136}
	056 Move X22, 0x818000
	057 Move X22, [X22+3464]
	058 Move X19, [X19+40]
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X25, 0x818000
	067 Move X24, 0x7BE000
	068 Move X23, 0x7BE000
	069 Move X20, [X8+8]
	070 Move X25, [X25+1688]
	071 Move X24, [X24+3592]
	072 Move X23, [X23+3584]
	073 Compare X20, 0
	074 JumpIfNotEqual {96}
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X22]
	080 Move X9, 0x818000
	081 Move X8, [X0+184]
	082 Move X9, [X9+1296]
	083 Move X21, [X8]
	084 Move X0, [X9]
	085 Call 0x1C17F10
	086 Move X8, 0x818000
	087 Move X8, [X8+3456]
	088 Move X1, X21
	089 Move X3, X31
	090 Move X20, X0
	091 Move X2, [X8]
	092 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	093 Move X8, [X22]
	094 Move X8, [X8+184]
	095 Move [X8+8], X20
	096 Move X2, [X25]
	097 Move X0, X19
	098 Move X1, X20
	099 Call Enumerable.Select, X0, X1
	100 Move X8, [X24]
	101 Move X19, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X2, [X23]
	105 Move X1, X19
	106 Move X20, X0
	107 Call HashSet`1<Int32>..ctor, X0, X1
	108 Move X1, X20
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move W0, 1
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Move X0, 0x7C2000
	119 Move X0, [X0+1320]
	120 Call 0x1C17D08
	121 Call 0x1C17F10
	122 Move X19, X0
	123 Move X0, 0x817000
	124 Move X0, [X0+3728]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X19
	128 Move X2, X31
	129 Call ArgumentNullException..ctor, X0, X1
	130 Move X0, 0x818000
	131 Move X0, [X0+3472]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Call 0x1C17DEC
	136 Call 0x1C17F20

Method: System.Int32 GetNextUnusedSmoothingGroup(System.Int32 start, System.Collections.Generic.HashSet`1<System.Int32> used)

Disassembly:
	0x0393727C LDP X30, X21, [X31 + 0x70]
	0x03937280 LDP D9, D8, [X31 + 0x60]
	0x03937284 LDP D11, D10, [X31 + 0x50]
	0x03937288 LDP D13, D12, [X31 + 0x40]
	0x0393728C LDP D15, D14, [X31 + 0x30]
	0x03937290 ADD X31, X31, 0x90
	0x03937294 RET
	0x03937298 BL 0x1C16F28
	0x0393729C BL 0x1C16F20
	0x039372A0 STR X30, [X31 - 0x20]!
	0x039372A4 STP X20, X19, [X31 + 0x10]
	0x039372A8 ADRP X19, 0xAAA000
	0x039372AC ADRP X20, 0x817000
	0x039372B0 LDRB W8, [X19 + 0x910]
	0x039372B4 LDR X20, [X20 + 0xD88]
	0x039372B8 TBNZ X8, 0x0, 0x39372D0
	0x039372BC ADRP X0, 0x817000
	0x039372C0 LDR X0, [X0 + 0xD88]
	0x039372C4 BL 0x1C16CF4
	0x039372C8 MOVZ W8, 0x1
	0x039372CC STRB W8, [X19 + 0x910]
	0x039372D0 LDR X0, [X20]
	0x039372D4 BL 0x1C16F10
	0x039372D8 MOV X1, X31
	0x039372DC MOV X19, X0
	0x039372E0 BL 0x33BDD8C
	0x039372E4 LDR X8, [X20]
	0x039372E8 LDR X8, [X8 + 0xB8]
	0x039372EC STR X19, [X8]
	0x039372F0 LDP X20, X19, [X31 + 0x10]
	0x039372F4 LDR X30, [X31], #0x20
	0x039372F8 RET
	0x039372FC MOV X1, X31
	0x03937300 B 0x33BDD8C
	0x03937304 STR X30, [X31 - 0x10]!
	0x03937308 CBZ X1, 0x3937318
	0x0393730C LDR W0, [X1 + 0x18]
	0x03937310 LDR X30, [X31], #0x10
	0x03937314 RET
	0x03937318 BL 0x1C16F20
	0x0393731C STR X30, [X31 - 0x10]!
	0x03937320 CBZ X1, 0x3937330
	0x03937324 LDR W0, [X1 + 0x18]
	0x03937328 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xAAB000
	008 Move W8, [X21+2317]
	009 Move X20, X1
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7BE000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2317], W8
	020 Compare X20, 0
	021 JumpIfEqual {58}
	022 Move X21, 0x7BE000
	023 Move X21, [X21+3576]
	024 Move X0, X20
	025 Move W1, W19
	026 Move X2, [X21]
	027 Call HashSet`1<Int32>.Contains, X0, X1
	028 Move W8, 0xFFFD
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {50}
	035 Move W23, 0xFFFD
	036 Move W22, 43
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 Move X2, [X21]
	039 Subtract W8, W19, 24
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSINC not yet implemented."
	042 Move X0, X20
	043 Move W1, W19
	044 Call HashSet`1<Int32>.Contains, X0, X1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {38}
	050 Move W0, W19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Boolean IsSmooth(System.Int32 index)

Disassembly:
	0x0393732C RET
	0x03937330 BL 0x1C16F20
	0x03937334 STR X30, [X31 - 0x10]!
	0x03937338 AND W3, W3, 0x1
	0x0393733C AND W4, W4, 0x1
	0x03937340 ADD X5, X31, 0x8
	0x03937344 STR X31, [X31 + 0x8]
	0x03937348 BL 0x3937358

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Subtract W8, W0, 25
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Void ApplySmoothingGroups(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Single angleThreshold)

Disassembly:
	0x0393734C LDR X0, [X31 + 0x8]
	0x03937350 LDR X30, [X31], #0x10

ISIL:
	001 Move X2, X31

Method: System.Void ApplySmoothingGroups(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Single angleThreshold, UnityEngine.Vector3[] normals)

Disassembly:
	0x03937354 RET
	0x03937358 STR D8, [X31 - 0x60]!
	0x0393735C STP X30, X27, [X31 + 0x10]
	0x03937360 STP X26, X25, [X31 + 0x20]
	0x03937364 STP X24, X23, [X31 + 0x30]
	0x03937368 STP X22, X21, [X31 + 0x40]
	0x0393736C STP X20, X19, [X31 + 0x50]
	0x03937370 ADRP X26, 0xAAA000
	0x03937374 ADRP X27, 0x817000
	0x03937378 ADRP X25, 0x817000
	0x0393737C LDRB W8, [X26 + 0x911]
	0x03937380 LDR X27, [X27 + 0xDD8]
	0x03937384 LDR X25, [X25 + 0xDE0]
	0x03937388 MOV X19, X5
	0x0393738C MOV W21, W4
	0x03937390 MOV W23, W3
	0x03937394 MOV W20, W2
	0x03937398 MOV W22, W1
	0x0393739C MOV V8.16B, V0.16B
	0x039373A0 MOV X24, X0
	0x039373A4 TBNZ X8, 0x0, 0x39373C8
	0x039373A8 ADRP X0, 0x817000
	0x039373AC LDR X0, [X0 + 0xDE0]
	0x039373B0 BL 0x1C16CF4
	0x039373B4 ADRP X0, 0x817000
	0x039373B8 LDR X0, [X0 + 0xDD8]
	0x039373BC BL 0x1C16CF4
	0x039373C0 MOVZ W8, 0x1
	0x039373C4 STRB W8, [X26 + 0x911]
	0x039373C8 LDR X0, [X27]
	0x039373CC BL 0x1C16F10
	0x039373D0 LDR X1, [X25]
	0x039373D4 MOV X25, X0
	0x039373D8 BL 0x302C704
	0x039373DC AND W23, W23, 0x1
	0x039373E0 MOV X0, X24
	0x039373E4 MOV W1, W22
	0x039373E8 MOV W2, W23
	0x039373EC MOV X3, X25
	0x039373F0 BL 0x3937428
	0x039373F4 AND W3, W21, 0x1
	0x039373F8 MOV W1, W20
	0x039373FC MOV W2, W23
	0x03937400 MOV X4, X19
	0x03937404 MOV X5, X25
	0x03937408 LDP X20, X19, [X31 + 0x50]
	0x0393740C LDP X22, X21, [X31 + 0x40]
	0x03937410 LDP X24, X23, [X31 + 0x30]
	0x03937414 LDP X26, X25, [X31 + 0x20]
	0x03937418 LDP X30, X27, [X31 + 0x10]
	0x0393741C MOV V0.16B, V8.16B
	0x03937420 LDR V8, [X31], #0x60
	0x03937424 B 0x3937940
	0x03937428 SUB X31, X31, 0x1B0
	0x0393742C STR D14, [X31 + 0x110]
	0x03937430 STP D13, D12, [X31 + 0x120]
	0x03937434 STP D11, D10, [X31 + 0x130]
	0x03937438 STP D9, D8, [X31 + 0x140]
	0x0393743C STP X29, X30, [X31 + 0x150]
	0x03937440 STP X28, X27, [X31 + 0x160]
	0x03937444 STP X26, X25, [X31 + 0x170]
	0x03937448 STP X24, X23, [X31 + 0x180]
	0x0393744C STP X22, X21, [X31 + 0x190]
	0x03937450 STP X20, X19, [X31 + 0x1A0]
	0x03937454 ADRP X20, 0xAAA000
	0x03937458 LDRB W8, [X20 + 0x912]
	0x0393745C MOV X19, X3
	0x03937460 MOV X22, X0
	0x03937464 STR W2, [X31 + 0x118]
	0x03937468 STR W1, [X31 + 0x11C]
	0x0393746C TBNZ X8, 0x0, 0x39374D8
	0x03937470 ADRP X0, 0x817000
	0x03937474 LDR X0, [X0 + 0xDE8]
	0x03937478 BL 0x1C16CF4
	0x0393747C ADRP X0, 0x816000
	0x03937480 LDR X0, [X0 + 0xA58]
	0x03937484 BL 0x1C16CF4
	0x03937488 ADRP X0, 0x7C0000
	0x0393748C LDR X0, [X0 + 0x3B8]
	0x03937490 BL 0x1C16CF4
	0x03937494 ADRP X0, 0x817000
	0x03937498 LDR X0, [X0 + 0xDF0]
	0x0393749C BL 0x1C16CF4
	0x039374A0 ADRP X0, 0x817000
	0x039374A4 LDR X0, [X0 + 0xDF8]
	0x039374A8 BL 0x1C16CF4
	0x039374AC ADRP X0, 0x7C0000
	0x039374B0 LDR X0, [X0 + 0x3C8]
	0x039374B4 BL 0x1C16CF4
	0x039374B8 ADRP X0, 0x817000
	0x039374BC LDR X0, [X0 + 0xE00]
	0x039374C0 BL 0x1C16CF4
	0x039374C4 ADRP X0, 0x7C0000
	0x039374C8 LDR X0, [X0 + 0x3C0]
	0x039374CC BL 0x1C16CF4
	0x039374D0 MOVZ W8, 0x1
	0x039374D4 STRB W8, [X20 + 0x912]
	0x039374D8 CBZ X22, 0x393793C
	0x039374DC ADRP X10, 0x817000
	0x039374E0 LDR X8, [X22]
	0x039374E4 LDR X10, [X10 + 0xDE8]
	0x039374E8 ADRP X21, 0x7C0000
	0x039374EC ADRP X20, 0x7C0000
	0x039374F0 LDRH W9, [X8 + 0x12E]
	0x039374F4 LDR X1, [X10]
	0x039374F8 LDR X21, [X21 + 0x3C0]
	0x039374FC LDR X20, [X20 + 0x3C8]
	0x03937500 CBZ X9, 0x3937524
	0x03937504 LDR X10, [X8 + 0xB0]
	0x03937508 ADD X10, X10, 0x8
	0x0393750C LDUR X11, [X10 - 0x8]
	0x03937510 CMP X11, X1
	0x03937514 B.EQ 0x3937534
	0x03937518 SUBS X9, X9, 0x1
	0x0393751C ADD X10, X10, 0x10
	0x03937520 B.NE 0x393750C
	0x03937524 MOV X0, X22
	0x03937528 MOV W2, W31
	0x0393752C BL 0x1C5C788
	0x03937530 B 0x3937540
	0x03937534 LDRSW X9, [X10]
	0x03937538 ADD X8, X8, X9, 0x4, LSL
	0x0393753C ADD X0, X8, 0x138
	0x03937540 LDP X8, X1, [X0]
	0x03937544 MOV X0, X22
	0x03937548 BLR X8
	0x0393754C LDR X8, [X21]
	0x03937550 MOV W23, W0
	0x03937554 MOV X0, X8
	0x03937558 BL 0x1C16F10
	0x0393755C LDR W8, [X31 + 0x11C]
	0x03937560 LDR X2, [X20]
	0x03937564 MOV X24, X0
	0x03937568 MUL W25, W23, W8
	0x0393756C MOV W1, W25
	0x03937570 BL 0x30CB9E8
	0x03937574 CBZ X19, 0x393759C
	0x03937578 LDR W8, [X19 + 0x1C]
	0x0393757C ADRP X9, 0x817000
	0x03937580 LDR X9, [X9 + 0xE00]
	0x03937584 MOV X0, X19
	0x03937588 ADD W8, W8, 0x1
	0x0393758C STP W31, W8, [X19 + 0x18]
	0x03937590 LDR X2, [X9]
	0x03937594 MOV W1, W25
	0x03937598 BL 0x302CA88
	0x0393759C LDR W8, [X31 + 0x118]
	0x039375A0 ORN W8, W31, W8, 0x0
	0x039375A4 AND W8, W8, 0x1
	0x039375A8 SUB W8, W23, W8
	0x039375AC CMP W8, 0x1
	0x039375B0 STR W8, [X31 + 0x1C]
	0x039375B4 B.LT 0x3937908
	0x039375B8 ADRP X29, 0x816000
	0x039375BC SUB W8, W23, 0x2
	0x039375C0 LDR X29, [X29 + 0xA58]
	0x039375C4 STR W8, [X31 + 0x18]
	0x039375C8 LDR W8, [X31 + 0x11C]
	0x039375CC MOV W27, W31
	0x039375D0 ADD X28, X31, 0x98
	0x039375D4 SCVTF S12, W8
	0x039375D8 LDR W8, [X31 + 0x18]
	0x039375DC LDR W9, [X31 + 0x118]
	0x039375E0 ADD W25, W27, 0x1
	0x039375E4 CMP W27, W8
	0x039375E8 CSET W8, GE
	0x039375EC EOR W9, W9, 0x1
	0x039375F0 AND W8, W8, W9, 0x0
	0x039375F4 LDR W9, [X31 + 0x11C]
	0x039375F8 ADD W21, W8, W9
	0x039375FC SUBS W8, W21, 0x1
	0x03937600 B.LT 0x39378F8
	0x03937604 MOV W20, W31
	0x03937608 SCVTF S13, W8
	0x0393760C LDR X8, [X22]
	0x03937610 LDR X1, [X29]
	0x03937614 LDRH W9, [X8 + 0x12E]
	0x03937618 CBZ X9, 0x393763C
	0x0393761C LDR X10, [X8 + 0xB0]
	0x03937620 ADD X10, X10, 0x8
	0x03937624 LDUR X11, [X10 - 0x8]
	0x03937628 CMP X11, X1
	0x0393762C B.EQ 0x393764C
	0x03937630 SUBS X9, X9, 0x1
	0x03937634 ADD X10, X10, 0x10
	0x03937638 B.NE 0x3937624
	0x0393763C MOV X0, X22
	0x03937640 MOV W2, W31
	0x03937644 BL 0x1C5C788
	0x03937648 B 0x3937658
	0x0393764C LDRSW X9, [X10]
	0x03937650 ADD X8, X8, X9, 0x4, LSL
	0x03937654 ADD X0, X8, 0x138
	0x03937658 LDP X9, X2, [X0]
	0x0393765C ADD X8, X31, 0x98
	0x03937660 MOV X0, X22
	0x03937664 MOV W1, W27
	0x03937668 BLR X9
	0x0393766C LDUR V0, [X31 + 0x98]
	0x03937670 LDP V1, V2, [X28 + 0x10]
	0x03937674 LDR W8, [X31 + 0xC8]
	0x03937678 LDR X1, [X29]
	0x0393767C STP V0, V1, [X31 + 0xD0]
	0x03937680 STR V2, [X31 + 0xF]
	0x03937684 STR W8, [X31 + 0x100]
	0x03937688 LDR X8, [X22]
	0x0393768C LDRH W9, [X8 + 0x12E]
	0x03937690 CBZ X9, 0x39376B4
	0x03937694 LDR X10, [X8 + 0xB0]
	0x03937698 ADD X10, X10, 0x8
	0x0393769C LDUR X11, [X10 - 0x8]
	0x039376A0 CMP X11, X1
	0x039376A4 B.EQ 0x39376C4
	0x039376A8 SUBS X9, X9, 0x1
	0x039376AC ADD X10, X10, 0x10
	0x039376B0 B.NE 0x393769C
	0x039376B4 MOV X0, X22
	0x039376B8 MOV W2, W31
	0x039376BC BL 0x1C5C788
	0x039376C0 B 0x39376D0
	0x039376C4 LDRSW X9, [X10]
	0x039376C8 ADD X8, X8, X9, 0x4, LSL
	0x039376CC ADD X0, X8, 0x138
	0x039376D0 LDP X9, X2, [X0]
	0x039376D4 SDIV W8, W25, W23
	0x039376D8 MSUB W26, W8, W23, W25
	0x039376DC ADD X8, X31, 0x98
	0x039376E0 MOV X0, X22
	0x039376E4 MOV W1, W26
	0x039376E8 BLR X9
	0x039376EC LDUR V0, [X31 + 0x98]
	0x039376F0 LDP V1, V2, [X28 + 0x10]
	0x039376F4 LDR W8, [X31 + 0xC8]
	0x039376F8 SCVTF S14, W20
	0x039376FC ADD X0, X31, 0x60
	0x03937700 STP V0, V1, [X31 + 0x20]
	0x03937704 LDP V0, V1, [X31 + 0xD0]
	0x03937708 STR V2, [X31 + 0x4]
	0x0393770C LDR V2, [X31 + 0xF]
	0x03937710 STR W8, [X31 + 0x50]
	0x03937714 LDR W8, [X31 + 0x100]
	0x03937718 STP V0, V1, [X31 + 0x60]
	0x0393771C FDIV S0, S14, S12
	0x03937720 ADD X1, X31, 0x20
	0x03937724 MOV X2, X31
	0x03937728 STR V2, [X31 + 0x8]
	0x0393772C STR W8, [X31 + 0x90]
	0x03937730 BL 0x38F7220
	0x03937734 CBZ X24, 0x393793C
	0x03937738 ADRP X8, 0x7C0000
	0x0393773C LDR W10, [X24 + 0x1C]
	0x03937740 LDR X9, [X24 + 0x10]
	0x03937744 LDR X8, [X8 + 0x3B8]
	0x03937748 ADD W10, W10, 0x1
	0x0393774C LDR X8, [X8]
	0x03937750 STR W10, [X24 + 0x1C]
	0x03937754 CBZ X9, 0x393793C
	0x03937758 LDRSW X10, [X24 + 0x18]
	0x0393775C LDR W11, [X9 + 0x18]
	0x03937760 CMP W10, W11
	0x03937764 B.CS 0x3937788
	0x03937768 MOVZ W11, 0xC
	0x0393776C ADD W8, W10, 0x1
	0x03937770 MADD X9, X10, X11, X9
	0x03937774 STR W8, [X24 + 0x18]
	0x03937778 STP S0, S1, [X9 + 0x20]
	0x0393777C STR S2, [X9 + 0x28]
	0x03937780 CBNZ X19, 0x39377A0
	0x03937784 B 0x39378EC
	0x03937788 LDR X8, [X8 + 0x20]
	0x0393778C MOV X0, X24
	0x03937790 LDR X8, [X8 + 0xC0]
	0x03937794 LDR X1, [X8 + 0x70]
	0x03937798 BL 0x30CC1B4
	0x0393779C CBZ X19, 0x39378EC
	0x039377A0 LDR X8, [X22]
	0x039377A4 LDR X1, [X29]
	0x039377A8 LDRH W9, [X8 + 0x12E]
	0x039377AC CBZ X9, 0x39377D0
	0x039377B0 LDR X10, [X8 + 0xB0]
	0x039377B4 ADD X10, X10, 0x8
	0x039377B8 LDUR X11, [X10 - 0x8]
	0x039377BC CMP X11, X1
	0x039377C0 B.EQ 0x39377E0
	0x039377C4 SUBS X9, X9, 0x1
	0x039377C8 ADD X10, X10, 0x10
	0x039377CC B.NE 0x39377B8
	0x039377D0 MOV X0, X22
	0x039377D4 MOV W2, W31
	0x039377D8 BL 0x1C5C788
	0x039377DC B 0x39377EC
	0x039377E0 LDRSW X9, [X10]
	0x039377E4 ADD X8, X8, X9, 0x4, LSL
	0x039377E8 ADD X0, X8, 0x138
	0x039377EC LDP X9, X2, [X0]
	0x039377F0 ADD X8, X31, 0xD0
	0x039377F4 MOV X0, X22
	0x039377F8 MOV W1, W27
	0x039377FC BLR X9
	0x03937800 LDR X8, [X22]
	0x03937804 LDP S11, S10, [X31 + 0xF4]
	0x03937808 LDP S9, S8, [X31 + 0xFC]
	0x0393780C LDR X1, [X29]
	0x03937810 LDRH W9, [X8 + 0x12E]
	0x03937814 CBZ X9, 0x3937838
	0x03937818 LDR X10, [X8 + 0xB0]
	0x0393781C ADD X10, X10, 0x8
	0x03937820 LDUR X11, [X10 - 0x8]
	0x03937824 CMP X11, X1
	0x03937828 B.EQ 0x3937848
	0x0393782C SUBS X9, X9, 0x1
	0x03937830 ADD X10, X10, 0x10
	0x03937834 B.NE 0x3937820
	0x03937838 MOV X0, X22
	0x0393783C MOV W2, W31
	0x03937840 BL 0x1C5C788
	0x03937844 B 0x3937854
	0x03937848 LDRSW X9, [X10]
	0x0393784C ADD X8, X8, X9, 0x4, LSL
	0x03937850 ADD X0, X8, 0x138
	0x03937854 LDP X9, X2, [X0]
	0x03937858 ADD X8, X31, 0xD0
	0x0393785C MOV X0, X22
	0x03937860 MOV W1, W26
	0x03937864 BLR X9
	0x03937868 LDP S4, S5, [X31 + 0xF4]
	0x0393786C LDP S6, S7, [X31 + 0xFC]
	0x03937870 FDIV S0, S14, S13
	0x03937874 STR S0, [X31]
	0x03937878 MOV V0.16B, V11.16B
	0x0393787C MOV V1.16B, V10.16B
	0x03937880 MOV V2.16B, V9.16B
	0x03937884 MOV V3.16B, V8.16B
	0x03937888 MOV X0, X31
	0x0393788C BL 0x3C2A2F8
	0x03937890 ADRP X9, 0x817000
	0x03937894 LDR W10, [X19 + 0x1C]
	0x03937898 LDR X8, [X19 + 0x10]
	0x0393789C LDR X9, [X9 + 0xDF0]
	0x039378A0 ADD W10, W10, 0x1
	0x039378A4 LDR X9, [X9]
	0x039378A8 STR W10, [X19 + 0x1C]
	0x039378AC CBZ X8, 0x393793C
	0x039378B0 LDRSW X10, [X19 + 0x18]
	0x039378B4 LDR W11, [X8 + 0x18]
	0x039378B8 CMP W10, W11
	0x039378BC B.CS 0x39378D8
	0x039378C0 ADD W9, W10, 0x1
	0x039378C4 ADD X8, X8, X10, 0x4, LSL
	0x039378C8 STR W9, [X19 + 0x18]
	0x039378CC STP S0, S1, [X8 + 0x20]
	0x039378D0 STP S2, S3, [X8 + 0x28]
	0x039378D4 B 0x39378EC
	0x039378D8 LDR X8, [X9 + 0x20]
	0x039378DC MOV X0, X19
	0x039378E0 LDR X8, [X8 + 0xC0]
	0x039378E4 LDR X1, [X8 + 0x70]
	0x039378E8 BL 0x302CF34
	0x039378EC ADD W20, W20, 0x1
	0x039378F0 CMP W20, W21
	0x039378F4 B.NE 0x393760C
	0x039378F8 LDR W8, [X31 + 0x1C]
	0x039378FC MOV W27, W25
	0x03937900 CMP W25, W8
	0x03937904 B.NE 0x39375D8
	0x03937908 MOV X0, X24
	0x0393790C LDP X20, X19, [X31 + 0x1A0]
	0x03937910 LDP X22, X21, [X31 + 0x190]
	0x03937914 LDP X24, X23, [X31 + 0x180]
	0x03937918 LDP X26, X25, [X31 + 0x170]
	0x0393791C LDP X28, X27, [X31 + 0x160]
	0x03937920 LDP X29, X30, [X31 + 0x150]
	0x03937924 LDP D9, D8, [X31 + 0x140]
	0x03937928 LDP D11, D10, [X31 + 0x130]
	0x0393792C LDP D13, D12, [X31 + 0x120]
	0x03937930 LDR V14, [X31 + 0x110]
	0x03937934 ADD X31, X31, 0x1B0
	0x03937938 RET
	0x0393793C BL 0x1C16F20
	0x03937940 SUB X31, X31, 0x110
	0x03937944 STP D15, D14, [X31 + 0x70]
	0x03937948 STP D13, D12, [X31 + 0x80]
	0x0393794C STP D11, D10, [X31 + 0x90]
	0x03937950 STP D9, D8, [X31 + 0xA0]
	0x03937954 STP X29, X30, [X31 + 0xB0]
	0x03937958 STP X28, X27, [X31 + 0xC0]
	0x0393795C STP X26, X25, [X31 + 0xD0]
	0x03937960 STP X24, X23, [X31 + 0xE0]
	0x03937964 STP X22, X21, [X31 + 0xF0]
	0x03937968 STP X20, X19, [X31 + 0x100]
	0x0393796C ADRP X20, 0xAAA000
	0x03937970 LDRB W8, [X20 + 0x913]
	0x03937974 MOV X24, X5
	0x03937978 MOV X23, X4
	0x0393797C MOV W21, W3
	0x03937980 MOV W19, W1
	0x03937984 MOV V11.16B, V0.16B
	0x03937988 STR W2, [X31 + 0x50]
	0x0393798C STR X0, [X31 + 0x60]
	0x03937990 TBNZ X8, 0x0, 0x3937A20
	0x03937994 ADRP X0, 0x817000
	0x03937998 LDR X0, [X0 + 0x3F0]
	0x0393799C BL 0x1C16CF4
	0x039379A0 ADRP X0, 0x817000
	0x039379A4 LDR X0, [X0 + 0x560]
	0x039379A8 BL 0x1C16CF4
	0x039379AC ADRP X0, 0x817000
	0x039379B0 LDR X0, [X0 + 0xE08]
	0x039379B4 BL 0x1C16CF4
	0x039379B8 ADRP X0, 0x816000
	0x039379BC LDR X0, [X0 + 0xF78]
	0x039379C0 BL 0x1C16CF4
	0x039379C4 ADRP X0, 0x817000
	0x039379C8 LDR X0, [X0 + 0xE10]
	0x039379CC BL 0x1C16CF4
	0x039379D0 ADRP X0, 0x816000
	0x039379D4 LDR X0, [X0 + 0xF80]
	0x039379D8 BL 0x1C16CF4
	0x039379DC ADRP X0, 0x7BD000
	0x039379E0 LDR X0, [X0 + 0xE58]
	0x039379E4 BL 0x1C16CF4
	0x039379E8 ADRP X0, 0x7BC000
	0x039379EC LDR X0, [X0 + 0x5A8]
	0x039379F0 BL 0x1C16CF4
	0x039379F4 ADRP X0, 0x7BC000
	0x039379F8 LDR X0, [X0 + 0x598]
	0x039379FC BL 0x1C16CF4
	0x03937A00 ADRP X0, 0x817000
	0x03937A04 LDR X0, [X0 + 0x528]
	0x03937A08 BL 0x1C16CF4
	0x03937A0C ADRP X0, 0x7BE000
	0x03937A10 LDR X0, [X0 + 0x9B0]
	0x03937A14 BL 0x1C16CF4
	0x03937A18 MOVZ W8, 0x1
	0x03937A1C STRB W8, [X20 + 0x913]
	0x03937A20 LDR X8, [X31 + 0x60]
	0x03937A24 STR X31, [X31 + 0x68]
	0x03937A28 CBZ X8, 0x393822C
	0x03937A2C ADRP X20, 0x816000
	0x03937A30 LDR X8, [X8]
	0x03937A34 LDR X20, [X20 + 0xF78]
	0x03937A38 LDRH W9, [X8 + 0x12E]
	0x03937A3C LDR X1, [X20]
	0x03937A40 CBZ X9, 0x3937A64
	0x03937A44 LDR X10, [X8 + 0xB0]
	0x03937A48 ADD X10, X10, 0x8
	0x03937A4C LDUR X11, [X10 - 0x8]
	0x03937A50 CMP X11, X1
	0x03937A54 B.EQ 0x3937A78
	0x03937A58 SUBS X9, X9, 0x1
	0x03937A5C ADD X10, X10, 0x10
	0x03937A60 B.NE 0x3937A4C
	0x03937A64 LDR X22, [X31 + 0x60]
	0x03937A68 MOV W2, W31
	0x03937A6C MOV X0, X22
	0x03937A70 BL 0x1C5C788
	0x03937A74 B 0x3937A88
	0x03937A78 LDRSW X9, [X10]
	0x03937A7C LDR X22, [X31 + 0x60]
	0x03937A80 ADD X8, X8, X9, 0x4, LSL
	0x03937A84 ADD X0, X8, 0x138
	0x03937A88 LDP X8, X1, [X0]
	0x03937A8C MOV X0, X22
	0x03937A90 BLR X8
	0x03937A94 CMP W0, 0x2
	0x03937A98 B.LT 0x393822C
	0x03937A9C LDR X8, [X22]
	0x03937AA0 LDR X1, [X20]
	0x03937AA4 LDRH W9, [X8 + 0x12E]
	0x03937AA8 CBZ X9, 0x3937ACC
	0x03937AAC LDR X10, [X8 + 0xB0]
	0x03937AB0 ADD X10, X10, 0x8
	0x03937AB4 LDUR X11, [X10 - 0x8]
	0x03937AB8 CMP X11, X1
	0x03937ABC B.EQ 0x3937AE0
	0x03937AC0 SUBS X9, X9, 0x1
	0x03937AC4 ADD X10, X10, 0x10
	0x03937AC8 B.NE 0x3937AB4
	0x03937ACC LDR X22, [X31 + 0x60]
	0x03937AD0 MOV W2, W31
	0x03937AD4 MOV X0, X22
	0x03937AD8 BL 0x1C5C788
	0x03937ADC B 0x3937AF0
	0x03937AE0 LDRSW X9, [X10]
	0x03937AE4 LDR X22, [X31 + 0x60]
	0x03937AE8 ADD X8, X8, X9, 0x4, LSL
	0x03937AEC ADD X0, X8, 0x138
	0x03937AF0 LDP X8, X1, [X0]
	0x03937AF4 MOV X0, X22
	0x03937AF8 BLR X8
	0x03937AFC ADRP X8, 0x7BC000
	0x03937B00 LDR X8, [X8 + 0x5A8]
	0x03937B04 MOV W27, W0
	0x03937B08 LDR X8, [X8]
	0x03937B0C LDR W9, [X8 + 0xE0]
	0x03937B10 CBNZ W9, 0x3937B1C
	0x03937B14 MOV X0, X8
	0x03937B18 BL 0x1C16DFC
	0x03937B1C MOVZ W0, 0x3
	0x03937B20 MOV W1, W19
	0x03937B24 MOV X2, X31
	0x03937B28 BL 0x337EDF0
	0x03937B2C LDR W8, [X31 + 0x50]
	0x03937B30 UBFM W25, W0, 0x1F, 0x1E
	0x03937B34 CMP X24, 0x0
	0x03937B38 MOV W19, W0
	0x03937B3C ORN W8, W31, W8, 0x0
	0x03937B40 AND W8, W8, 0x1
	0x03937B44 SUB W8, W27, W8
	0x03937B48 MUL W8, W8, W25
	0x03937B4C UBFM W8, W8, 0x1F, 0x1E
	0x03937B50 CSEL W22, W31, W8, EQ
	0x03937B54 STR X24, [X31 + 0x20]
	0x03937B58 STR X23, [X31 + 0x10]
	0x03937B5C CBZ X24, 0x3937BA8
	0x03937B60 ADRP X10, 0x817000
	0x03937B64 LDR X8, [X24]
	0x03937B68 LDR X10, [X10 + 0xE08]
	0x03937B6C LDRH W9, [X8 + 0x12E]
	0x03937B70 LDR X1, [X10]
	0x03937B74 CBZ X9, 0x3937B98
	0x03937B78 LDR X10, [X8 + 0xB0]
	0x03937B7C ADD X10, X10, 0x8
	0x03937B80 LDUR X11, [X10 - 0x8]
	0x03937B84 CMP X11, X1
	0x03937B88 B.EQ 0x3937BB8
	0x03937B8C SUBS X9, X9, 0x1
	0x03937B90 ADD X10, X10, 0x10
	0x03937B94 B.NE 0x3937B80
	0x03937B98 MOV X0, X24
	0x03937B9C MOV W2, W31
	0x03937BA0 BL 0x1C5C788
	0x03937BA4 B 0x3937BC4
	0x03937BA8 MOVZ W9, 0x1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D8
	003 Move [X31+80], X29
	004 Move [X31+88], X30
	005 Move [X31+96], X28
	006 Move [X31+104], X27
	007 Move [X31+112], X26
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X23, 0xAAB000
	016 Move X22, 0x7BD000
	017 Move W8, [X23+2318]
	018 Move X22, [X22+1432]
	019 Move X19, X2
	020 Move V8, V0
	021 Move X20, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {89}
	027 Move X0, 0x818000
	028 Move X0, [X0+1688]
	029 Call 0x1C17CF4
	030 Move X0, 0x818000
	031 Move X0, [X0+3480]
	032 Call 0x1C17CF4
	033 Move X0, 0x818000
	034 Move X0, [X0+3488]
	035 Call 0x1C17CF4
	036 Move X0, 0x818000
	037 Move X0, [X0+3496]
	038 Call 0x1C17CF4
	039 Move X0, 0x818000
	040 Move X0, [X0+1296]
	041 Call 0x1C17CF4
	042 Move X0, 0x7BF000
	043 Move X0, [X0+2520]
	044 Call 0x1C17CF4
	045 Move X0, 0x818000
	046 Move X0, [X0+2184]
	047 Call 0x1C17CF4
	048 Move X0, 0x7BE000
	049 Move X0, [X0+3584]
	050 Call 0x1C17CF4
	051 Move X0, 0x818000
	052 Move X0, [X0+2192]
	053 Call 0x1C17CF4
	054 Move X0, 0x7BE000
	055 Move X0, [X0+3592]
	056 Call 0x1C17CF4
	057 Move X0, 0x818000
	058 Move X0, [X0+2200]
	059 Call 0x1C17CF4
	060 Move X0, 0x7BD000
	061 Move X0, [X0+3584]
	062 Call 0x1C17CF4
	063 Move X0, 0x817000
	064 Move X0, [X0+3504]
	065 Call 0x1C17CF4
	066 Move X0, 0x817000
	067 Move X0, [X0+3512]
	068 Call 0x1C17CF4
	069 Move X0, 0x7BD000
	070 Move X0, [X0+3608]
	071 Call 0x1C17CF4
	072 Move X0, 0x818000
	073 Move X0, [X0+3504]
	074 Call 0x1C17CF4
	075 Move X0, 0x7BD000
	076 Move X0, [X0+1432]
	077 Call 0x1C17CF4
	078 Move X0, 0x818000
	079 Move X0, [X0+3512]
	080 Call 0x1C17CF4
	081 Move X0, 0x818000
	082 Move X0, [X0+3464]
	083 Call 0x1C17CF4
	084 Move X0, 0x818000
	085 Move X0, [X0+2824]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X23+2318], W8
	089 Move X0, [X22]
	090 Move [X31+32], X31
	091 Move [X31+40], X31
	092 Move [X31+48], X31
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X21
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Compare X20, 0
	102 JumpIfEqual {443}
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {443}
	107 Move X10, 0x817000
	108 Move X8, [X20]
	109 Move X10, [X10+3504]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Move X1, [X10]
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X20
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X25, 0x7BD000
	129 Move X25, [X25+3584]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X22, X0
	133 Compare X0, 0
	134 JumpIfEqual {461}
	135 Move X23, 0x7BD000
	136 Move X26, 0x817000
	137 Move X23, [X23+3608]
	138 Move X26, [X26+3512]
	139 Move W24, W31
	140 Move X8, [X22]
	141 Move X1, [X23]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X22
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X22
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {193}
	165 Move X8, [X22]
	166 Move X1, [X26]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X22
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X22
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X0, 0
	187 JumpIfEqual {437}
	188 Move W8, [X0+24]
	189 Move [X0+24], W31
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSET not yet implemented."
	192 Or W24, W24, W8
	193 Move X23, X31
	194 Move W26, 9
	195 Compare X22, 0
	196 JumpIfEqual {218}
	197 Move X8, [X22]
	198 Move X1, [X25]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X22
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X22
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Compare X23, 0
	219 JumpIfNotEqual {462}
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Compare W26, 0
	222 JumpIfNotEqual {422}
	223 Compare X19, 0
	224 JumpIfNotEqual {245}
	225 Move TEMP, X24
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {239}
	229 Compare X21, 0
	230 JumpIfEqual {442}
	231 Move X0, X21
	232 Move X1, X31
	233 Call ProBuilderMesh.get_mesh, X0
	234 Compare X0, 0
	235 JumpIfEqual {442}
	236 Move X1, X31
	237 Move X2, X31
	238 Call Mesh.set_normals, X0, X1
	239 Compare X21, 0
	240 JumpIfEqual {442}
	241 Move X0, X21
	242 Move X1, X31
	243 Call ProBuilderMesh.GetNormals, X0
	244 Move X19, X0
	245 Move X8, -48545792
	246 Move X9, -48545792
	247 Move V0, [X8+212]
	248 Move V1, [X9+260]
	249 NotImplemented "Instruction FCMP not yet implemented."
	250 NotImplemented "Instruction FMIN not yet implemented."
	251 Multiply S0, S0, S1
	252 Move S1, W31
	253 NotImplemented "Instruction FCSEL not yet implemented."
	254 Call 0x3EB2BD0
	255 Compare X21, 0
	256 JumpIfEqual {442}
	257 Move X28, 0x818000
	258 Move X28, [X28+3464]
	259 Move X22, [X21+40]
	260 Move V8, V0
	261 Move X26, X20
	262 Move X0, [X28]
	263 Move [X31+72], X21
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {269}
	267 Call 0x1C17DFC
	268 Move X0, [X28]
	269 Move X8, [X0+184]
	270 Move X21, 0x818000
	271 Move X20, 0x7BE000
	272 Move X25, 0x7BE000
	273 Move X29, 0x818000
	274 Move X24, 0x818000
	275 Move X27, 0x818000
	276 Move X21, [X21+1688]
	277 Move X20, [X20+3592]
	278 Move X23, [X8+16]
	279 Move X25, [X25+3584]
	280 Move X29, [X29+2200]
	281 Move X24, [X24+2192]
	282 Move X27, [X27+2824]
	283 Compare X23, 0
	284 JumpIfNotEqual {317}
	285 Move W8, [X0+224]
	286 Move [X31], X26
	287 Compare W8, 0
	288 JumpIfEqual {290}
	289 Move X20, X24
	290 Move X20, X24
	291 Call 0x1C17DFC
	292 Move X0, [X28]
	293 Move X9, 0x818000
	294 Move X8, [X0+184]
	295 Move X9, [X9+1296]
	296 Move X24, [X8]
	297 Move X0, [X9]
	298 Call 0x1C17F10
	299 Move X8, 0x818000
	300 Move X8, [X8+3512]
	301 Move X1, X24
	302 Move X3, X31
	303 Move X23, X0
	304 Move X2, [X8]
	305 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	306 Move X8, [X28]
	307 Move X24, X20
	308 Move X29, 0x818000
	309 Move X25, 0x7BE000
	310 Move X8, [X8+184]
	311 Move X20, 0x7BE000
	312 Move X26, [X31]
	313 Move [X8+16], X23
	314 Move X29, [X29+2200]
	315 Move X25, [X25+3584]
	316 Move X20, [X20+3592]
	317 Move X2, [X21]
	318 Move X0, X22
	319 Move X1, X23
	320 Call Enumerable.Select, X0, X1
	321 Move X8, [X20]
	322 Move X23, X0
	323 Move X0, X8
	324 Call 0x1C17F10
	325 Move X2, [X25]
	326 Move X1, X23
	327 Move X22, X0
	328 Call HashSet`1<Int32>..ctor, X0, X1
	329 Move W0, 1
	330 Move X1, X22
	331 Call Smoothing.GetNextUnusedSmoothingGroup, X0, X1
	332 Move X8, [X29]
	333 Move W23, W0
	334 Move X0, X8
	335 Call 0x1C17F10
	336 Move X1, [X24]
	337 Move X24, X0
	338 Call HashSet`1<Object>..ctor, X0
	339 Move X0, [X27]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X0, [X31+72]
	345 Move W2, 1
	346 Move X1, X26
	347 Move X3, X31
	348 Call WingedEdge.GetWingedEdges, X0, X1, X2
	349 Compare X0, 0
	350 JumpIfEqual {464}
	351 Move X8, 0x818000
	352 Move X8, [X8+3504]
	353 Move X1, [X8]
	354 Add X8, X31, 8
	355 Call List`1<Object>.GetEnumerator, X0
	356 Move X21, 0x818000
	357 Move X26, 0x818000
	358 Move X27, 0x7BF000
	359 Move X21, [X21+3488]
	360 Move X26, [X26+2184]
	361 Move X27, [X27+2520]
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 Move X8, [X31+24]
	364 Move X25, 0x818000
	365 Move X25, [X25+3480]
	366 NotImplemented "Instruction FABS not yet implemented."
	367 Move [X31+2], V0
	368 Move [X31+48], X8
	369 Move X1, [X21]
	370 Add X0, X31, 32
	371 Call Enumerator<Object>.MoveNext, X0
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {416}
	376 Move X20, [X31+48]
	377 Compare X20, 0
	378 JumpIfEqual {438}
	379 Compare X24, 0
	380 JumpIfEqual {439}
	381 Move X1, [X20+32]
	382 Move X2, [X26]
	383 Move X0, X24
	384 Call HashSet`1<Object>.Add, X0, X1
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {369}
	389 Move X8, [X20+32]
	390 Compare X8, 0
	391 JumpIfEqual {440}
	392 Move [X8+24], W23
	393 Move X0, X19
	394 Move X1, X20
	395 Move V0, V8
	396 Move X2, X24
	397 Call Smoothing.FindSoftEdgesRecursive, X0, X1, V0, X2
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {406}
	402 Move X8, [X20+32]
	403 Compare X8, 0
	404 JumpIfEqual {441}
	405 Move [X8+24], W31
	406 Compare X22, 0
	407 JumpIfEqual {467}
	408 Move X2, [X27]
	409 Move X0, X22
	410 Move W1, W23
	411 Call HashSet`1<Int32>.Add, X0, X1
	412 Move W0, W23
	413 Move X1, X22
	414 Call Smoothing.GetNextUnusedSmoothingGroup, X0, X1
	415 Move W23, W0
	416 Move X21, X31
	417 Move X1, [X25]
	418 Add X0, X31, 32
	419 Call Enumerator<Object>.Dispose, X0
	420 Compare X21, 0
	421 JumpIfNotEqual {465}
	422 Move X20, [X31+160]
	423 Move X19, [X31+168]
	424 Move X22, [X31+144]
	425 Move X21, [X31+152]
	426 Move X24, [X31+128]
	427 Move X23, [X31+136]
	428 Move X26, [X31+112]
	429 Move X25, [X31+120]
	430 Move X28, [X31+96]
	431 Move X27, [X31+104]
	432 Move X29, [X31+80]
	433 Move X30, [X31+88]
	434 Move V8, [X31+64]
	435 Add X31, X31, 176
	436 Return 
	437 Call 0x1C17F20
	438 Call 0x1C17F20
	439 Call 0x1C17F20
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Move X0, 0x7C2000
	444 Move X0, [X0+1320]
	445 Call 0x1C17D08
	446 Call 0x1C17F10
	447 Move X19, X0
	448 Move X0, 0x817000
	449 Move X0, [X0+3728]
	450 Call 0x1C17D08
	451 Move X1, X0
	452 Move X0, X19
	453 Move X2, X31
	454 Call ArgumentNullException..ctor, X0, X1
	455 Move X0, 0x818000
	456 Move X0, [X0+3520]
	457 Call 0x1C17D08
	458 Move X1, X0
	459 Move X0, X19
	460 Call 0x1C17DEC
	461 Call 0x1C17F20
	462 Move X0, X23
	463 Call 0x1C17F18
	464 Call 0x1C17F20
	465 Move X0, X21
	466 Call 0x1C17F18
	467 Call 0x1C17F20
	468 Move W24, W31
	469 Move X20, X1
	470 Move X19, X0
	471 Move X20, X1
	472 Move X19, X0
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X0, X19
	475 Call 0x3EB2AD0
	476 Move X21, [X0]
	477 Call 0x3EB2AE0
	478 Move X21, X31
	479 Move X1, [X25]
	480 Add X0, X31, 32
	481 Call Enumerator<Object>.Dispose, X0
	482 Compare X21, 0
	483 JumpIfNotEqual {519}
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move X0, X19
	486 Call 0x3EB2AD0
	487 Move X19, X0
	488 Move X0, 0x7C3000
	489 Move X0, [X0+3264]
	490 Call 0x1C17D08
	491 Move X8, [X19]
	492 Move X1, [X8]
	493 Call 0x1C18270
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {511}
	498 Call 0x3EB2AE0
	499 Move X0, 0x7BD000
	500 Move X0, [X0+2600]
	501 Call 0x1C17D08
	502 Move W8, [X0+224]
	503 Compare W8, 0
	504 JumpIfNotEqual {506}
	505 Call 0x1C17DFC
	506 Move X0, 0x818000
	507 Move X0, [X0+3528]
	508 Call 0x1C17D08
	509 Move X1, X31
	510 Call Debug.LogWarning, X0
	511 Move W0, 8
	512 Call 0x3EB2AF0
	513 Move X8, [X19]
	514 Move [X0], X8
	515 Move X1, 0x57E000
	516 Add X1, X1, 3672
	517 Move X2, X31
	518 Call 0x3EB2B00
	519 Move X0, X21
	520 Call 0x1C17F18
	521 Move X20, X1
	522 Move X19, X0
	523 Move X19, X0
	524 Call 0x3EB2AE0
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Call 0x3EB2AD0
	527 Move X23, [X0]
	528 Call 0x3EB2AE0
	529 Move W26, W31
	530 Compare X22, 0
	531 JumpIfNotEqual {197}
	532 Move X19, X0
	533 Move X23, X31
	534 Move X19, X0
	535 Compare X22, 0
	536 JumpIfEqual {558}
	537 Move X8, [X22]
	538 Move X1, [X25]
	539 NotImplemented "Instruction LDRH not yet implemented."
	540 Compare X9, 0
	541 JumpIfEqual {548}
	542 Move X10, [X8+176]
	543 Add X10, X10, 8
	544 NotImplemented "Instruction LDUR not yet implemented."
	545 NotImplemented "Instruction CMP not yet implemented."
	546 Subtract X9, X9, 1
	547 Add X10, X10, 16
	548 Move X0, X22
	549 Move W2, W31
	550 Call 0x1C5D788
	551 NotImplemented "Instruction LDRSW not yet implemented."
	552 Add X8, X8, X9
	553 Add X0, X8, 312
	554 Move X8, [X0]
	555 Move X1, [X0+8]
	556 Move X0, X22
	557 NotImplemented "Instruction BLR not yet implemented."
	558 Compare X23, 0
	559 JumpIfNotEqual {562}
	560 Move X0, X19
	561 Call 0x1D2D690
	562 Move X0, X23
	563 Call 0x1C17F18
	564 Call 0x1991590

Method: System.Boolean FindSoftEdgesRecursive(UnityEngine.Vector3[] normals, UnityEngine.ProBuilder.WingedEdge wing, System.Single angleThreshold, System.Collections.Generic.HashSet`1<UnityEngine.ProBuilder.Face> processed)

Disassembly:
	0x03937BAC STR W9, [X31 + 0x40]
	0x03937BB0 MOV W22, W8
	0x03937BB4 B 0x3937C3C
	0x03937BB8 LDRSW X9, [X10]
	0x03937BBC ADD X8, X8, X9, 0x4, LSL
	0x03937BC0 ADD X0, X8, 0x138
	0x03937BC4 LDP X8, X1, [X0]
	0x03937BC8 MOV X0, X24
	0x03937BCC BLR X8
	0x03937BD0 LDR X24, [X31 + 0x60]
	0x03937BD4 LDR X1, [X20]
	0x03937BD8 MOV W26, W0
	0x03937BDC LDR X8, [X24]
	0x03937BE0 LDRH W9, [X8 + 0x12E]
	0x03937BE4 CBZ X9, 0x3937C08
	0x03937BE8 LDR X10, [X8 + 0xB0]
	0x03937BEC ADD X10, X10, 0x8
	0x03937BF0 LDUR X11, [X10 - 0x8]
	0x03937BF4 CMP X11, X1
	0x03937BF8 B.EQ 0x3937C18
	0x03937BFC SUBS X9, X9, 0x1
	0x03937C00 ADD X10, X10, 0x10
	0x03937C04 B.NE 0x3937BF0
	0x03937C08 MOV X0, X24
	0x03937C0C MOV W2, W31
	0x03937C10 BL 0x1C5C788
	0x03937C14 B 0x3937C24
	0x03937C18 LDRSW X9, [X10]
	0x03937C1C ADD X8, X8, X9, 0x4, LSL
	0x03937C20 ADD X0, X8, 0x138
	0x03937C24 LDP X8, X1, [X0]
	0x03937C28 MOV X0, X24
	0x03937C2C BLR X8
	0x03937C30 CMP W26, W0
	0x03937C34 CSET W8, NE
	0x03937C38 STR W8, [X31 + 0x40]
	0x03937C3C ADRP X8, 0x7BE000
	0x03937C40 LDR X8, [X8 + 0x9B0]
	0x03937C44 MOV W1, W22
	0x03937C48 LDR X0, [X8]
	0x03937C4C BL 0x1C16D6C
	0x03937C50 STR X0, [X31 + 0x48]
	0x03937C54 ADRP X9, 0x817000
	0x03937C58 LDR X9, [X9 + 0x3F0]
	0x03937C5C SUB W8, W27, 0x1
	0x03937C60 STR W27, [X31 + 0x44]
	0x03937C64 LDR X0, [X9]
	0x03937C68 LDR W9, [X31 + 0x50]
	0x03937C6C ANDS W31, W9, 0x1
	0x03937C70 CSEL W20, W27, W8, NE
	0x03937C74 MUL W1, W19, W20
	0x03937C78 BL 0x1C16D6C
	0x03937C7C CMP W20, 0x1
	0x03937C80 MOV X27, X0
	0x03937C84 STR W20, [X31 + 0x3C]
	0x03937C88 B.LT 0x3938174
	0x03937C8C ADD W8, W19, 0x1
	0x03937C90 STR W8, [X31 + 0x5C]
	0x03937C94 ADRP X20, 0x7BD000
	0x03937C98 ADRP X23, 0x817000
	0x03937C9C LDR X20, [X20 + 0xE58]
	0x03937CA0 LDR X23, [X23 + 0x560]
	0x03937CA4 SUB W8, W25, 0x1
	0x03937CA8 UBFM W8, W8, 0x1, 0x1F
	0x03937CAC MOV W26, W31
	0x03937CB0 MOV W28, W31
	0x03937CB4 MOV W29, W31
	0x03937CB8 MOV W22, W31
	0x03937CBC ADD W8, W8, 0x1
	0x03937CC0 STR W8, [X31 + 0x2C]
	0x03937CC4 STR S11, [X31 + 0x1C]
	0x03937CC8 LDR W8, [X31 + 0x50]
	0x03937CCC LDR X19, [X31 + 0x60]
	0x03937CD0 ADD X3, X31, 0x6C
	0x03937CD4 MOV W1, W22
	0x03937CD8 AND W24, W8, 0x1
	0x03937CDC MOV X0, X19
	0x03937CE0 MOV W2, W24
	0x03937CE4 BL 0x3938264
	0x03937CE8 LDR W9, [X31 + 0x44]
	0x03937CEC ADD W10, W22, 0x1
	0x03937CF0 ADD X3, X31, 0x68
	0x03937CF4 MOV X0, X19
	0x03937CF8 SDIV W8, W10, W9
	0x03937CFC MSUB W8, W8, W9, W10
	0x03937D00 MOV W1, W8
	0x03937D04 MOV W2, W24
	0x03937D08 MOV V15.16B, V0.16B
	0x03937D0C MOV V8.16B, V1.16B
	0x03937D10 MOV V14.16B, V2.16B
	0x03937D14 MOV V9.16B, V3.16B
	0x03937D18 STR W10, [X31 + 0x54]
	0x03937D1C MOV W19, W8
	0x03937D20 BL 0x3938264
	0x03937D24 LDR W8, [X31 + 0x40]
	0x03937D28 MOV V13.16B, V1.16B
	0x03937D2C MOV V10.16B, V3.16B
	0x03937D30 TBZ X8, 0x0, 0x3937D40
	0x03937D34 STR S2, [X31 + 0x58]
	0x03937D38 MOV V12.16B, V0.16B
	0x03937D3C B 0x3937F24
	0x03937D40 LDR X24, [X31 + 0x20]
	0x03937D44 CBZ X24, 0x3938260
	0x03937D48 LDR X8, [X24]
	0x03937D4C ADRP X10, 0x817000
	0x03937D50 LDRH W9, [X8 + 0x12E]
	0x03937D54 LDR X10, [X10 + 0xE10]
	0x03937D58 STP S9, S10, [X31 + 0x34]
	0x03937D5C STR S2, [X31 + 0x58]
	0x03937D60 STR S0, [X31 + 0x30]
	0x03937D64 LDR X1, [X10]
	0x03937D68 CBZ X9, 0x3937D8C
	0x03937D6C LDR X10, [X8 + 0xB0]
	0x03937D70 ADD X10, X10, 0x8
	0x03937D74 LDUR X11, [X10 - 0x8]
	0x03937D78 CMP X11, X1
	0x03937D7C B.EQ 0x3937D9C
	0x03937D80 SUBS X9, X9, 0x1
	0x03937D84 ADD X10, X10, 0x10
	0x03937D88 B.NE 0x3937D74
	0x03937D8C MOV X0, X24
	0x03937D90 MOV W2, W31
	0x03937D94 BL 0x1C5C788
	0x03937D98 B 0x3937DA8
	0x03937D9C LDRSW X9, [X10]
	0x03937DA0 ADD X8, X8, X9, 0x4, LSL
	0x03937DA4 ADD X0, X8, 0x138
	0x03937DA8 LDP X8, X2, [X0]
	0x03937DAC MOV X0, X24
	0x03937DB0 MOV W1, W22
	0x03937DB4 BLR X8
	0x03937DB8 LDR X8, [X24]
	0x03937DBC ADRP X10, 0x817000
	0x03937DC0 MOV V11.16B, V0.16B
	0x03937DC4 MOV V10.16B, V1.16B
	0x03937DC8 LDRH W9, [X8 + 0x12E]
	0x03937DCC LDR X10, [X10 + 0xE10]
	0x03937DD0 MOV V9.16B, V2.16B
	0x03937DD4 MOV V12.16B, V3.16B
	0x03937DD8 LDR X1, [X10]
	0x03937DDC CBZ X9, 0x3937E00
	0x03937DE0 LDR X10, [X8 + 0xB0]
	0x03937DE4 ADD X10, X10, 0x8
	0x03937DE8 LDUR X11, [X10 - 0x8]
	0x03937DEC CMP X11, X1
	0x03937DF0 B.EQ 0x3937E10
	0x03937DF4 SUBS X9, X9, 0x1
	0x03937DF8 ADD X10, X10, 0x10
	0x03937DFC B.NE 0x3937DE8
	0x03937E00 MOV X0, X24
	0x03937E04 MOV W2, W31
	0x03937E08 BL 0x1C5C788
	0x03937E0C B 0x3937E1C
	0x03937E10 LDRSW X9, [X10]
	0x03937E14 ADD X8, X8, X9, 0x4, LSL
	0x03937E18 ADD X0, X8, 0x138
	0x03937E1C LDR V21, [X31 + 0x34]
	0x03937E20 LDP X8, X2, [X0]
	0x03937E24 FMUL S1, S15, S12
	0x03937E28 FMUL S5, S8, S12
	0x03937E2C FMUL S0, S21, S11
	0x03937E30 FMUL S4, S21, S10
	0x03937E34 FMUL S17, S15, S11
	0x03937E38 FMUL S20, S21, S9
	0x03937E3C FMUL S21, S21, S12
	0x03937E40 FMUL S22, S14, S12
	0x03937E44 FMUL S2, S8, S9
	0x03937E48 FMUL S6, S14, S11
	0x03937E4C FMUL S16, S15, S10
	0x03937E50 FMUL S19, S8, S10
	0x03937E54 FADD S0, S0, S1
	0x03937E58 FADD S1, S4, S5
	0x03937E5C FADD S4, S20, S22
	0x03937E60 FSUB S5, S21, S17
	0x03937E64 FMUL S3, S14, S10
	0x03937E68 FMUL S7, S15, S9
	0x03937E6C FMUL S18, S8, S11
	0x03937E70 FMUL S23, S14, S9
	0x03937E74 FADD S0, S2, S0
	0x03937E78 FADD S1, S6, S1
	0x03937E7C FADD S2, S16, S4
	0x03937E80 FSUB S4, S5, S19
	0x03937E84 MOV X0, X24

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xAAB000
	012 Move X19, 0x818000
	013 Move W8, [X23+2319]
	014 Move X19, [X19+3536]
	015 Move X20, X2
	016 Move V8, V0
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x818000
	024 Move X0, [X0+2184]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BD000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x818000
	030 Move X0, [X0+3536]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+2319], W8
	034 Move X0, [X19]
	035 Move X26, 0x818000
	036 Move X24, 0x7BD000
	037 Move X26, [X26+2184]
	038 Move X24, [X24+3584]
	039 Call 0x1C17F10
	040 Move X1, X21
	041 Move X2, X31
	042 Move X19, X0
	043 Call WingedEdgeEnumerator..ctor, X0, X1
	044 Move W25, W31
	045 Compare X19, 0
	046 JumpIfEqual {155}
	047 Move X0, X19
	048 Move X1, X31
	049 Call WingedEdgeEnumerator.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {113}
	054 Move X0, X19
	055 Move X1, X31
	056 Call WingedEdgeEnumerator.get_Current, X0
	057 Move X23, X0
	058 Compare X0, 0
	059 JumpIfEqual {151}
	060 Move X8, [X23+56]
	061 Compare X8, 0
	062 JumpIfEqual {93}
	063 Move X9, [X8+32]
	064 Compare X9, 0
	065 JumpIfEqual {152}
	066 Move W9, [X9+24]
	067 Compare W9, 0
	068 JumpIfNotEqual {93}
	069 Move X1, [X23+16]
	070 Move X2, [X23+24]
	071 Move X3, [X8+16]
	072 Move X4, [X8+24]
	073 Move X0, X22
	074 Move V0, V8
	075 Call Smoothing.IsSoftEdge, X0, X1, X2, V0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {93}
	080 Move X8, [X23+56]
	081 Compare X8, 0
	082 JumpIfEqual {154}
	083 Compare X20, 0
	084 JumpIfEqual {153}
	085 Move X1, [X8+32]
	086 Move X2, [X26]
	087 Move X0, X20
	088 Call HashSet`1<Object>.Add, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {95}
	093 Compare X19, 0
	094 JumpIfNotEqual {47}
	095 Move X1, [X23+56]
	096 Compare X1, 0
	097 JumpIfEqual {159}
	098 Compare X21, 0
	099 JumpIfEqual {160}
	100 Move X8, [X21+32]
	101 Compare X8, 0
	102 JumpIfEqual {162}
	103 Move X9, [X1+32]
	104 Compare X9, 0
	105 JumpIfEqual {161}
	106 Move W8, [X8+24]
	107 Move W25, 1
	108 Move [X9+24], W8
	109 Move X0, X22
	110 Move V0, V8
	111 Move X2, X20
	112 Call Smoothing.FindSoftEdgesRecursive, X0, X1, V0, X2
	113 Move X20, X31
	114 Compare X19, 0
	115 JumpIfEqual {137}
	116 Move X8, [X19]
	117 Move X1, [X24]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X19
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X19
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X20, 0
	138 JumpIfNotEqual {157}
	139 And W0, W25, 1
	140 Move X20, [X31+64]
	141 Move X19, [X31+72]
	142 Move X22, [X31+48]
	143 Move X21, [X31+56]
	144 Move X24, [X31+32]
	145 Move X23, [X31+40]
	146 Move X26, [X31+16]
	147 Move X25, [X31+24]
	148 Move X30, [X31+8]
	149 Move V8, [X31+80]
	150 Return X0
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move W25, W31
	156 Call 0x1C17F20
	157 Move X0, X20
	158 Call 0x1C17F18
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Move W25, 1
	164 Move W25, W31
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Call 0x3EB2AD0
	167 Move X20, [X0]
	168 Call 0x3EB2AE0
	169 Move X21, X0
	170 Move X20, X31
	171 Move X21, X0
	172 Compare X19, 0
	173 JumpIfEqual {195}
	174 Move X8, [X19]
	175 Move X1, [X24]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X19
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X1, [X0+8]
	193 Move X0, X19
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X20, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X21
	198 Call 0x1D2D690
	199 Move X0, X20
	200 Call 0x1C17F18
	201 Call 0x1991590

Method: System.Boolean IsSoftEdge(UnityEngine.Vector3[] normals, UnityEngine.ProBuilder.EdgeLookup left, UnityEngine.ProBuilder.EdgeLookup right, System.Single threshold)

Disassembly:
	0x03937E88 MOV W1, W19
	0x03937E8C FSUB S15, S0, S3
	0x03937E90 FSUB S8, S1, S7
	0x03937E94 FSUB S14, S2, S18
	0x03937E98 FSUB S9, S4, S23
	0x03937E9C BLR X8
	0x03937EA0 LDR V23, [X31 + 0x38]
	0x03937EA4 LDR V21, [X31 + 0x30]
	0x03937EA8 LDR V24, [X31 + 0x58]
	0x03937EAC FMUL S17, S13, S3
	0x03937EB0 FMUL S4, S23, S0
	0x03937EB4 FMUL S5, S21, S3
	0x03937EB8 FMUL S16, S23, S1
	0x03937EBC FMUL S19, S21, S2
	0x03937EC0 FMUL S20, S21, S1
	0x03937EC4 FMUL S21, S21, S0
	0x03937EC8 FMUL S22, S23, S2
	0x03937ECC FMUL S23, S23, S3
	0x03937ED0 FMUL S3, S24, S3
	0x03937ED4 LDR V11, [X31 + 0x1C]
	0x03937ED8 FMUL S6, S13, S2
	0x03937EDC FMUL S7, S24, S1
	0x03937EE0 FMUL S18, S24, S0
	0x03937EE4 FMUL S1, S13, S1
	0x03937EE8 FADD S4, S4, S5
	0x03937EEC FADD S5, S16, S17
	0x03937EF0 FADD S3, S22, S3
	0x03937EF4 FSUB S16, S23, S21
	0x03937EF8 FMUL S0, S13, S0
	0x03937EFC FMUL S2, S24, S2
	0x03937F00 FADD S4, S6, S4
	0x03937F04 FADD S5, S18, S5
	0x03937F08 FADD S3, S20, S3
	0x03937F0C FSUB S1, S16, S1
	0x03937F10 FSUB S12, S4, S7
	0x03937F14 FSUB S13, S5, S19
	0x03937F18 FSUB S0, S3, S0
	0x03937F1C FSUB S10, S1, S2
	0x03937F20 STR S0, [X31 + 0x58]
	0x03937F24 LDR X24, [X31 + 0x60]
	0x03937F28 ADRP X10, 0x816000
	0x03937F2C LDR X8, [X24]
	0x03937F30 LDRH W9, [X8 + 0x12E]
	0x03937F34 LDR X10, [X10 + 0xF80]
	0x03937F38 LDR X1, [X10]
	0x03937F3C CBZ X9, 0x3937F60
	0x03937F40 LDR X10, [X8 + 0xB0]
	0x03937F44 ADD X10, X10, 0x8
	0x03937F48 LDUR X11, [X10 - 0x8]
	0x03937F4C CMP X11, X1
	0x03937F50 B.EQ 0x3937F70
	0x03937F54 SUBS X9, X9, 0x1
	0x03937F58 ADD X10, X10, 0x10
	0x03937F5C B.NE 0x3937F48
	0x03937F60 MOV X0, X24
	0x03937F64 MOV W2, W31
	0x03937F68 BL 0x1C5C788
	0x03937F6C B 0x3937F7C
	0x03937F70 LDRSW X9, [X10]
	0x03937F74 ADD X8, X8, X9, 0x4, LSL
	0x03937F78 ADD X0, X8, 0x138
	0x03937F7C LDP X8, X2, [X0]
	0x03937F80 MOV X0, X24
	0x03937F84 MOV W1, W22
	0x03937F88 BLR X8
	0x03937F8C LDR W0, [X31 + 0x5C]
	0x03937F90 MOV V4.16B, V0.16B
	0x03937F94 MOV V5.16B, V1.16B
	0x03937F98 MOV V6.16B, V2.16B
	0x03937F9C MOV V0.16B, V15.16B
	0x03937FA0 MOV V1.16B, V8.16B
	0x03937FA4 MOV V2.16B, V14.16B
	0x03937FA8 MOV V3.16B, V9.16B
	0x03937FAC MOV V7.16B, V11.16B
	0x03937FB0 BL 0x3938ACC
	0x03937FB4 LDR X8, [X24]
	0x03937FB8 ADRP X10, 0x816000
	0x03937FBC MOV X22, X0
	0x03937FC0 LDRH W9, [X8 + 0x12E]
	0x03937FC4 LDR X10, [X10 + 0xF80]
	0x03937FC8 LDR X1, [X10]
	0x03937FCC CBZ X9, 0x3937FF0
	0x03937FD0 LDR X10, [X8 + 0xB0]
	0x03937FD4 ADD X10, X10, 0x8
	0x03937FD8 LDUR X11, [X10 - 0x8]
	0x03937FDC CMP X11, X1
	0x03937FE0 B.EQ 0x3938000
	0x03937FE4 SUBS X9, X9, 0x1
	0x03937FE8 ADD X10, X10, 0x10
	0x03937FEC B.NE 0x3937FD8
	0x03937FF0 MOV X0, X24
	0x03937FF4 MOV W2, W31
	0x03937FF8 BL 0x1C5C788
	0x03937FFC B 0x393800C
	0x03938000 LDRSW X9, [X10]
	0x03938004 ADD X8, X8, X9, 0x4, LSL
	0x03938008 ADD X0, X8, 0x138
	0x0393800C LDP X8, X2, [X0]
	0x03938010 MOV X0, X24
	0x03938014 MOV W1, W19
	0x03938018 BLR X8
	0x0393801C MOV V6.16B, V2.16B
	0x03938020 LDR V2, [X31 + 0x58]
	0x03938024 LDR W0, [X31 + 0x5C]
	0x03938028 MOV V4.16B, V0.16B
	0x0393802C MOV V5.16B, V1.16B
	0x03938030 MOV V0.16B, V12.16B
	0x03938034 MOV V1.16B, V13.16B
	0x03938038 MOV V3.16B, V10.16B
	0x0393803C MOV V7.16B, V11.16B
	0x03938040 BL 0x3938ACC
	0x03938044 MOV X24, X0
	0x03938048 MOV X0, X22
	0x0393804C LDR X22, [X31 + 0x48]
	0x03938050 MOV W1, W31
	0x03938054 MOV W3, W29
	0x03938058 MOV W4, W25
	0x0393805C MOV X2, X22
	0x03938060 MOV X5, X31
	0x03938064 BL 0x339FCE8
	0x03938068 ADD W19, W29, W25
	0x0393806C MOV X0, X24
	0x03938070 MOV W1, W31
	0x03938074 MOV X2, X22
	0x03938078 MOV W3, W19
	0x0393807C MOV W4, W25
	0x03938080 MOV X5, X31
	0x03938084 BL 0x339FCE8
	0x03938088 CMP W25, 0x1
	0x0393808C B.LT 0x393815C
	0x03938090 LDR W24, [X31 + 0x2C]
	0x03938094 ADD W8, W24, W28
	0x03938098 STR W8, [X31 + 0x58]
	0x0393809C LDR X0, [X20]
	0x039380A0 MOVZ W1, 0x6
	0x039380A4 BL 0x1C16D6C
	0x039380A8 CBZ X0, 0x3938260
	0x039380AC LDR W8, [X0 + 0x18]
	0x039380B0 MOV X22, X0
	0x039380B4 CBZ W8, 0x393825C
	0x039380B8 CMP W8, 0x1
	0x039380BC STR W26, [X22 + 0x20]
	0x039380C0 B.EQ 0x393825C
	0x039380C4 ADD W9, W26, 0x1
	0x039380C8 CMP W8, 0x2
	0x039380CC STR W9, [X22 + 0x24]
	0x039380D0 B.LS 0x393825C
	0x039380D4 ADD W10, W25, W26
	0x039380D8 CMP W8, 0x3
	0x039380DC STR W10, [X22 + 0x28]
	0x039380E0 B.EQ 0x393825C
	0x039380E4 CMP W8, 0x4
	0x039380E8 STR W10, [X22 + 0x2C]
	0x039380EC B.LS 0x393825C
	0x039380F0 CMP W8, 0x5
	0x039380F4 STR W9, [X22 + 0x30]
	0x039380F8 B.EQ 0x393825C
	0x039380FC ADD W8, W25, W26
	0x03938100 ADD W8, W8, 0x1
	0x03938104 STR W8, [X22 + 0x34]
	0x03938108 LDR X0, [X23]
	0x0393810C BL 0x1C16F10
	0x03938110 MOV X1, X22
	0x03938114 MOV X2, X31
	0x03938118 MOV X29, X0
	0x0393811C BL 0x3900368
	0x03938120 CBZ X27, 0x3938260
	0x03938124 LDR W8, [X27 + 0x18]
	0x03938128 CMP W28, W8
	0x0393812C B.CS 0x393825C
	0x03938130 ADD X8, X27, W28, 0x3, SXTW
	0x03938134 STR X29, [X8 + 0x20]
	0x03938138 TBZ X21, 0x0, 0x3938148
	0x0393813C CBZ X29, 0x3938260
	0x03938140 MOVZ W8, 0x2
	0x03938144 STR W8, [X29 + 0x18]
	0x03938148 ADD W28, W28, 0x1
	0x0393814C SUBS W24, W24, 0x1
	0x03938150 ADD W26, W26, 0x2
	0x03938154 B.NE 0x393809C
	0x03938158 LDR W28, [X31 + 0x58]
	0x0393815C LDR W8, [X31 + 0x3C]
	0x03938160 LDR W22, [X31 + 0x54]
	0x03938164 ADD W29, W19, W25
	0x03938168 ADD W26, W26, W25
	0x0393816C CMP W22, W8
	0x03938170 B.NE 0x3937CC8
	0x03938174 ADRP X8, 0x7BB000
	0x03938178 LDR X8, [X8 + 0x598]
	0x0393817C LDR X20, [X31 + 0x10]
	0x03938180 LDR X0, [X8]
	0x03938184 LDR X19, [X20]
	0x03938188 LDR W8, [X0 + 0xE0]
	0x0393818C CBNZ W8, 0x3938194
	0x03938190 BL 0x1C16DFC
	0x03938194 MOV X0, X19
	0x03938198 MOV X1, X31
	0x0393819C MOV X2, X31
	0x039381A0 BL 0x3C354F8
	0x039381A4 TBZ X0, 0x0, 0x39381C8
	0x039381A8 LDR X0, [X20]
	0x039381AC CBZ X0, 0x3938260
	0x039381B0 CBZ X27, 0x39381F8
	0x039381B4 LDR X1, [X31 + 0x48]
	0x039381B8 MOV X2, X27
	0x039381BC MOV X3, X31
	0x039381C0 BL 0x3919540
	0x039381C4 B 0x393822C
	0x039381C8 ADRP X8, 0x816000
	0x039381CC LDR X8, [X8 + 0x528]
	0x039381D0 LDR X0, [X8]
	0x039381D4 LDR W8, [X0 + 0xE0]
	0x039381D8 CBNZ W8, 0x39381E0
	0x039381DC BL 0x1C16DFC
	0x039381E0 LDR X0, [X31 + 0x48]
	0x039381E4 MOV X1, X27
	0x039381E8 MOV X2, X31
	0x039381EC BL 0x3919470
	0x039381F0 STR X0, [X20]
	0x039381F4 B 0x393822C
	0x039381F8 LDR X1, [X31 + 0x48]
	0x039381FC MOV X2, X31
	0x03938200 BL 0x3916448
	0x03938204 LDR X0, [X20]
	0x03938208 CBZ X0, 0x3938260
	0x0393820C MOV W1, W31
	0x03938210 MOV X2, X31
	0x03938214 BL 0x39197E8
	0x03938218 LDR X0, [X20]
	0x0393821C CBZ X0, 0x3938260
	0x03938220 MOVZ W1, 0xF
	0x03938224 MOV X2, X31
	0x03938228 BL 0x3919D94
	0x0393822C LDP X20, X19, [X31 + 0x100]
	0x03938230 LDP X22, X21, [X31 + 0xF0]
	0x03938234 LDP X24, X23, [X31 + 0xE0]
	0x03938238 LDP X26, X25, [X31 + 0xD0]
	0x0393823C LDP X28, X27, [X31 + 0xC0]
	0x03938240 LDP X29, X30, [X31 + 0xB0]
	0x03938244 LDP D9, D8, [X31 + 0xA0]
	0x03938248 LDP D11, D10, [X31 + 0x90]
	0x0393824C LDP D13, D12, [X31 + 0x80]
	0x03938250 LDP D15, D14, [X31 + 0x70]
	0x03938254 ADD X31, X31, 0x110
	0x03938258 RET
	0x0393825C BL 0x1C16F28
	0x03938260 BL 0x1C16F20
	0x03938264 SUB X31, X31, 0xB0
	0x03938268 STP D15, D14, [X31 + 0x10]
	0x0393826C STP D13, D12, [X31 + 0x20]
	0x03938270 STP D11, D10, [X31 + 0x30]
	0x03938274 STP D9, D8, [X31 + 0x40]
	0x03938278 STP X29, X30, [X31 + 0x50]
	0x0393827C STP X28, X27, [X31 + 0x60]
	0x03938280 STP X26, X25, [X31 + 0x70]
	0x03938284 STP X24, X23, [X31 + 0x80]
	0x03938288 STP X22, X21, [X31 + 0x90]
	0x0393828C STP X20, X19, [X31 + 0xA0]
	0x03938290 ADRP X22, 0xAA9000
	0x03938294 LDRB W8, [X22 + 0x914]
	0x03938298 MOV X19, X3
	0x0393829C MOV W23, W2

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Compare X0, 0
	015 JumpIfEqual {291}
	016 Move W9, [X0+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction SBFM not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X11, X3
	021 ShiftRight X11, 32
	022 And X11, X11, 0x7FFFFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X12, X4
	027 ShiftRight X12, 32
	028 And X12, X12, 0x7FFFFFFF
	029 Move X13, X2
	030 ShiftRight X13, 32
	031 And X13, X13, 0x7FFFFFFF
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, W1
	036 Move W12, 12
	037 NotImplemented "Instruction MADD not yet implemented."
	038 Move W12, 12
	039 Move X10, W10
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move W12, 12
	042 NotImplemented "Instruction MADD not yet implemented."
	043 Move V9, V0
	044 Move V2, [X8+40]
	045 Move V0, [X10+32]
	046 Move S3, [X8+32]
	047 Move S1, [X8+36]
	048 Move X11, W11
	049 Move W12, 12
	050 Move [X31+32], S2
	051 Move [X31+40], S0
	052 Move S0, [X10+36]
	053 Move S10, [X10+40]
	054 NotImplemented "Instruction NOP not yet implemented."
	055 NotImplemented "Instruction MADD not yet implemented."
	056 Move X19, 0xAA2000
	057 Move W12, [X19+1925]
	058 Move S12, [X9+32]
	059 Move S8, [X9+36]
	060 Move V11, [X9+40]
	061 Move [X31+40], S0
	062 Move [X31+48], S1
	063 Move S0, [X11+32]
	064 Move S14, [X11+36]
	065 Move V13, [X11+40]
	066 Move V15, V3
	067 Move [X31+24], S0
	068 Compare W12, 0
	069 JumpIfNotEqual {76}
	070 Move X0, 0x7BD000
	071 Move X0, [X0+1448]
	072 Call 0x1C17CF4
	073 Move V3, V15
	074 Move W8, 1
	075 Move [X19+1925], W8
	076 Move [X31+20], S9
	077 Move X20, 0x7BD000
	078 Move X20, [X20+1448]
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move V3, V15
	085 Move X8, -48545792
	086 Multiply S0, S12, S12
	087 Multiply S1, S8, S8
	088 Move V2, [X8+380]
	089 Add S0, S0, S1
	090 Multiply S1, S11, S11
	091 Add S0, S1, S0
	092 NotImplemented "Instruction FSQRT not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move [X31+28], S2
	095 NotImplemented "Instruction FDIV not yet implemented."
	096 NotImplemented "Instruction FDIV not yet implemented."
	097 Move [X31+12], S1
	098 Move [X31+20], S2
	099 NotImplemented "Instruction FDIV not yet implemented."
	100 Move X21, 0xAA2000
	101 Move W8, [X21+1923]
	102 Compare W8, 0
	103 JumpIfNotEqual {110}
	104 Move X0, 0x7BD000
	105 Move X0, [X0+1440]
	106 Call 0x1C17CF4
	107 Move V3, V15
	108 Move W8, 1
	109 Move [X21+1923], W8
	110 Move X8, 0x7BD000
	111 Move X8, [X8+1440]
	112 Move X8, [X8]
	113 Move X8, [X8+184]
	114 Move V1, [X8]
	115 Move V0, [X8+4]
	116 Move [X31+12], S0
	117 Move [X31+20], S1
	118 Move V0, [X8+8]
	119 Move V11, V13
	120 Move V12, V14
	121 Move V8, V10
	122 Move W8, [X19+1925]
	123 Move V13, [X31+24]
	124 Move V10, [X31+40]
	125 Move V14, [X31+32]
	126 Move [X31+8], S0
	127 Compare W8, 0
	128 JumpIfNotEqual {135}
	129 Move X0, 0x7BC000
	130 Move X0, [X0+1448]
	131 Call 0x1C17CF4
	132 Move V3, V15
	133 Move W8, 1
	134 Move [X19+1925], W8
	135 Move X0, [X20]
	136 Move V9, [X31+36]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move V3, V15
	142 Move V1, [X31+44]
	143 Multiply S0, S3, S3
	144 Move V15, [X31+28]
	145 Multiply S1, S1, S1
	146 Add S0, S0, S1
	147 Multiply S1, S14, S14
	148 Add S0, S1, S0
	149 NotImplemented "Instruction FSQRT not yet implemented."
	150 NotImplemented "Instruction FCMP not yet implemented."
	151 Move V1, [X31+44]
	152 Move V2, V14
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 NotImplemented "Instruction FDIV not yet implemented."
	155 Move [X31+44], S1
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 Move X21, 0xAA1000
	158 Move W8, [X21+1923]
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x7BC000
	162 Move X0, [X0+1440]
	163 Call 0x1C17CF4
	164 Move W8, 1
	165 Move [X21+1923], W8
	166 Move X8, 0x7BC000
	167 Move X8, [X8+1440]
	168 Move X8, [X8]
	169 Move X8, [X8+184]
	170 Move S14, [X8]
	171 Move S0, [X8+4]
	172 Move [X31+44], S0
	173 Move V0, [X8+8]
	174 Move W8, [X19+1925]
	175 Move [X31+32], S0
	176 Compare W8, 0
	177 JumpIfNotEqual {183}
	178 Move X0, 0x7BC000
	179 Move X0, [X0+1448]
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move [X19+1925], W8
	183 Move X0, [X20]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Multiply S0, S9, S9
	189 Multiply S1, S10, S10
	190 Add S0, S0, S1
	191 Multiply S1, S8, S8
	192 Add S0, S1, S0
	193 NotImplemented "Instruction FSQRT not yet implemented."
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 NotImplemented "Instruction FDIV not yet implemented."
	196 NotImplemented "Instruction FDIV not yet implemented."
	197 NotImplemented "Instruction FDIV not yet implemented."
	198 Move X21, 0xAA1000
	199 Move W8, [X21+1923]
	200 Compare W8, 0
	201 JumpIfNotEqual {207}
	202 Move X0, 0x7BC000
	203 Move X0, [X0+1440]
	204 Call 0x1C17CF4
	205 Move W8, 1
	206 Move [X21+1923], W8
	207 Move X8, 0x7BC000
	208 Move X8, [X8+1440]
	209 Move X8, [X8]
	210 Move X8, [X8+184]
	211 Move S9, [X8]
	212 Move S10, [X8+4]
	213 Move V8, [X8+8]
	214 Move W8, [X19+1925]
	215 Compare W8, 0
	216 JumpIfNotEqual {222}
	217 Move X0, 0x7BC000
	218 Move X0, [X0+1448]
	219 Call 0x1C17CF4
	220 Move W8, 1
	221 Move [X19+1925], W8
	222 Move X0, [X20]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Multiply S0, S13, S13
	228 Multiply S1, S12, S12
	229 Add S0, S0, S1
	230 Multiply S1, S11, S11
	231 Add S0, S1, S0
	232 NotImplemented "Instruction FSQRT not yet implemented."
	233 NotImplemented "Instruction FCMP not yet implemented."
	234 NotImplemented "Instruction FDIV not yet implemented."
	235 NotImplemented "Instruction FDIV not yet implemented."
	236 NotImplemented "Instruction FDIV not yet implemented."
	237 Move V11, [X31+20]
	238 Move X19, 0xAA1000
	239 Move W8, [X19+1923]
	240 Move V11, [X31+20]
	241 Compare W8, 0
	242 JumpIfNotEqual {248}
	243 Move X0, 0x7BC000
	244 Move X0, [X0+1440]
	245 Call 0x1C17CF4
	246 Move W8, 1
	247 Move [X19+1923], W8
	248 Move X8, 0x7BC000
	249 Move X8, [X8+1440]
	250 Move X8, [X8]
	251 Move X8, [X8+184]
	252 Move S0, [X8]
	253 Move S1, [X8+4]
	254 Move V2, [X8+8]
	255 Move S4, [X31+12]
	256 Move S3, [X31+16]
	257 Move V5, [X31+8]
	258 Multiply S3, S3, S9
	259 Multiply S4, S4, S10
	260 Add S3, S3, S4
	261 Multiply S4, S5, S8
	262 Add S3, S4, S3
	263 NotImplemented "Instruction FABS not yet implemented."
	264 NotImplemented "Instruction FCMP not yet implemented."
	265 Move V3, [X31+44]
	266 Multiply S0, S14, S0
	267 Multiply S1, S3, S1
	268 Add S0, S0, S1
	269 Move V1, [X31+32]
	270 Multiply S1, S1, S2
	271 Add S0, S1, S0
	272 NotImplemented "Instruction FABS not yet implemented."
	273 NotImplemented "Instruction FCMP not yet implemented."
	274 NotImplemented "Instruction CSET not yet implemented."
	275 Move W0, W31
	276 Move X20, [X31+128]
	277 Move X19, [X31+136]
	278 Move X30, [X31+112]
	279 Move X21, [X31+120]
	280 Move D9, [X31+96]
	281 Move D8, [X31+104]
	282 Move D11, [X31+80]
	283 Move D10, [X31+88]
	284 Move D13, [X31+64]
	285 Move D12, [X31+72]
	286 Move D15, [X31+48]
	287 Move D14, [X31+56]
	288 Add X31, X31, 144
	289 Return X0
	290 Call 0x1C17F28
	291 Call 0x1C17F20

