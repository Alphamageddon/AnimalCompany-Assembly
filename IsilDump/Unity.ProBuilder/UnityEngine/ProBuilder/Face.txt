Type: UnityEngine.ProBuilder.Face

Method: System.Boolean get_manualUV()

Disassembly:
	0x03900B7C LDR X21, [X21 + 0x8F0]
	0x03900B80 MOV X19, X0

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_manualUV(System.Boolean value)

Disassembly:
	0x03900B84 TBNZ X8, 0x0, 0x3900BC0
	0x03900B88 ADRP X0, 0x7F3000
	0x03900B8C LDR X0, [X0 + 0x8F0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+76], W8
	003 Return 

Method: System.Int32 get_textureGroup()

Disassembly:
	0x03900B90 BL 0x1C16CF4
	0x03900B94 ADRP X0, 0x7F3000

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_textureGroup(System.Int32 value)

Disassembly:
	0x03900B98 LDR X0, [X0 + 0x838]
	0x03900B9C BL 0x1C16CF4

ISIL:
	001 Move [X0+84], W1
	002 Return 

Method: System.Int32[] get_indexesInternal()

Disassembly:
	0x03900BA0 ADRP X0, 0x7F3000
	0x03900BA4 LDR X0, [X0 + 0xEC8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_indexesInternal(System.Int32[] value)

Disassembly:
	0x03900BA8 BL 0x1C16CF4
	0x03900BAC ADRP X0, 0x7F3000
	0x03900BB0 LDR X0, [X0 + 0x848]
	0x03900BB4 BL 0x1C16CF4
	0x03900BB8 MOVZ W8, 0x1
	0x03900BBC STRB W8, [X20 + 0x7B9]
	0x03900BC0 LDR X0, [X21]
	0x03900BC4 BL 0x1C16F10
	0x03900BC8 MOV X1, X31
	0x03900BCC MOV X20, X0
	0x03900BD0 BL 0x3231AC4
	0x03900BD4 LDR X8, [X19 + 0x10]
	0x03900BD8 CBZ X8, 0x3900D04
	0x03900BDC CBZ X20, 0x3900D04
	0x03900BE0 ADRP X21, 0x7F3000
	0x03900BE4 ADRP X22, 0x7F3000
	0x03900BE8 ADRP X23, 0x7F3000
	0x03900BEC LDR X21, [X21 + 0xEC8]
	0x03900BF0 LDR X22, [X22 + 0x838]
	0x03900BF4 LDR X23, [X23 + 0x848]
	0x03900BF8 MOV W24, W31
	0x03900BFC LDR W8, [X8 + 0x18]
	0x03900C00 CMP W24, W8
	0x03900C04 B.GE 0x3900D08
	0x03900C08 LDR X1, [X21]
	0x03900C0C MOV X0, X20
	0x03900C10 MOV X2, X31
	0x03900C14 BL 0x32333E0
	0x03900C18 LDR X8, [X19 + 0x10]
	0x03900C1C CBZ X8, 0x3900D04
	0x03900C20 LDR W9, [X8 + 0x18]
	0x03900C24 CMP W24, W9
	0x03900C28 B.CS 0x3900D28
	0x03900C2C ADD X8, X8, W24, 0x2, SXTW
	0x03900C30 LDR W1, [X8 + 0x20]
	0x03900C34 MOV X0, X20
	0x03900C38 MOV X2, X31
	0x03900C3C BL 0x3233E30
	0x03900C40 LDR X1, [X22]
	0x03900C44 MOV X0, X20
	0x03900C48 MOV X2, X31
	0x03900C4C BL 0x32333E0
	0x03900C50 LDR X8, [X19 + 0x10]
	0x03900C54 CBZ X8, 0x3900D04
	0x03900C58 LDR W9, [X8 + 0x18]
	0x03900C5C ADD W25, W24, 0x1
	0x03900C60 CMP W25, W9

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+16]
	004 Compare X8, 0
	005 JumpIfEqual {20}
	006 Move W8, [X8+24]
	007 Move W9, 0xAAAB
	008 Move W10, 0xAAAA
	009 NotImplemented "Instruction MOVK not yet implemented."
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 NotImplemented "Instruction MADD not yet implemented."
	012 Or W9, W31, 0x55555555
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X0+16], X1
	015 Move [X0+88], X31
	016 Move [X0+96], X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Move X0, 0x7F9000
	021 Move X0, [X0+1320]
	022 Call 0x1C17D08
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Move X0, 0x7FE000
	026 Move X0, [X0+3784]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Move X2, X31
	031 Call ArgumentNullException..ctor, X0, X1
	032 Move X0, 0x7FC000
	033 Move X0, [X0+1400]
	034 Call 0x1C17D08
	035 Call 0x1C17F10
	036 Move X19, X0
	037 Move X0, 0x84E000
	038 Move X0, [X0+3352]
	039 Call 0x1C17D08
	040 Move X1, X0
	041 Move X0, X19
	042 Move X2, X31
	043 Call ArgumentException..ctor, X0, X1
	044 Move X0, 0x84E000
	045 Move X0, [X0+3360]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Call 0x1C17DEC

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<System.Int32> get_indexes()

Disassembly:
	0x03900C6C LDR W1, [X8 + 0x20]
	0x03900C70 MOV X0, X20
	0x03900C74 MOV X2, X31
	0x03900C78 BL 0x3233E30
	0x03900C7C LDR X1, [X22]
	0x03900C80 MOV X0, X20
	0x03900C84 MOV X2, X31
	0x03900C88 BL 0x32333E0
	0x03900C8C LDR X8, [X19 + 0x10]
	0x03900C90 CBZ X8, 0x3900D04
	0x03900C94 LDR W9, [X8 + 0x18]
	0x03900C98 ADD W25, W25, 0x1
	0x03900C9C CMP W25, W9
	0x03900CA0 B.CS 0x3900D28
	0x03900CA4 ADD W9, W24, 0x2
	0x03900CA8 ADD X8, X8, W9, 0x2, SXTW
	0x03900CAC LDR W1, [X8 + 0x20]
	0x03900CB0 MOV X0, X20
	0x03900CB4 MOV X2, X31
	0x03900CB8 BL 0x3233E30
	0x03900CBC LDR X1, [X23]
	0x03900CC0 MOV X0, X20
	0x03900CC4 MOV X2, X31
	0x03900CC8 BL 0x32333E0
	0x03900CCC LDR X8, [X19 + 0x10]
	0x03900CD0 CBZ X8, 0x3900D04
	0x03900CD4 LDR W9, [X8 + 0x18]
	0x03900CD8 SUB W24, W25, 0x2
	0x03900CDC SUB W9, W9, 0x3
	0x03900CE0 CMP W24, W9
	0x03900CE4 B.GE 0x3900CFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE2000
	007 Move X21, 0x84E000
	008 Move X20, 0x84E000
	009 Move W8, [X22+1968]
	010 Move X21, [X21+3368]
	011 Move X20, [X20+3376]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x84E000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0x84E000
	021 Move X0, [X0+3368]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1968], W8
	025 Move X0, [X21]
	026 Move X19, [X19+16]
	027 Call 0x1C17F10
	028 Move X2, [X20]
	029 Move X1, X19
	030 Move X20, X0
	031 Call ReadOnlyCollection`1<Int32>..ctor, X0, X1
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void SetIndexes(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03900CE8 LDR X1, [X22]
	0x03900CEC MOV X0, X20
	0x03900CF0 MOV X2, X31
	0x03900CF4 BL 0x32333E0
	0x03900CF8 LDR X8, [X19 + 0x10]
	0x03900CFC ADD W24, W24, 0x3
	0x03900D00 CBNZ X8, 0x3900BFC
	0x03900D04 BL 0x1C16F20
	0x03900D08 LDR X8, [X20]
	0x03900D0C MOV X0, X20
	0x03900D10 LDP X20, X19, [X31 + 0x30]
	0x03900D14 LDP X22, X21, [X31 + 0x20]
	0x03900D18 LDP X2, X1, [X8 + 0x168]
	0x03900D1C LDP X24, X23, [X31 + 0x10]
	0x03900D20 LDP X30, X25, [X31], #0x40
	0x03900D24 BR X2
	0x03900D28 BL 0x1C16F28
	0x03900D2C STR X30, [X31 - 0x10]!
	0x03900D30 LDR X9, [X0 + 0x10]
	0x03900D34 CBZ X9, 0x3900D6C
	0x03900D38 LDR X8, [X9 + 0x18]
	0x03900D3C CMP W8, 0x1
	0x03900D40 B.LT 0x3900D60
	0x03900D44 AND X8, X8, 0x0
	0x03900D48 ADD X9, X9, 0x20
	0x03900D4C LDR W10, [X9]
	0x03900D50 SUBS X8, X8, 0x1
	0x03900D54 ADD W10, W10, W1
	0x03900D58 STR W10, [X9], #0x4
	0x03900D5C B.NE 0x3900D4C
	0x03900D60 STP X31, X31, [X0 + 0x58]
	0x03900D64 LDR X30, [X31], #0x10
	0x03900D68 RET
	0x03900D6C BL 0x1C16F20
	0x03900D70 STR X30, [X31 - 0x10]!
	0x03900D74 LDR X8, [X0 + 0x10]
	0x03900D78 CBZ X8, 0x3900DB8
	0x03900D7C LDR X9, [X8 + 0x18]
	0x03900D80 CBZ W9, 0x3900DBC
	0x03900D84 LDR W0, [X8 + 0x20]
	0x03900D88 CMP W9, 0x2
	0x03900D8C B.LT 0x3900DB0
	0x03900D90 AND X9, X9, 0x0
	0x03900D94 ADD X8, X8, 0x24
	0x03900D98 SUB X9, X9, 0x1
	0x03900D9C LDR W10, [X8], #0x4
	0x03900DA0 CMP W10, W0
	0x03900DA4 CSEL W0, W10, W0, LT
	0x03900DA8 SUBS X9, X9, 0x1
	0x03900DAC B.NE 0x3900D9C
	0x03900DB0 LDR X30, [X31], #0x10
	0x03900DB4 RET
	0x03900DB8 BL 0x1C16F20
	0x03900DBC BL 0x1C16F28
	0x03900DC0 STP X30, X19, [X31 - 0x10]!
	0x03900DC4 MOV X19, X0
	0x03900DC8 BL 0x3900D70
	0x03900DCC LDR X11, [X19 + 0x10]
	0x03900DD0 CBZ X11, 0x3900E20
	0x03900DD4 LDR W8, [X11 + 0x18]
	0x03900DD8 UBFM X9, X8, 0x20, 0x1F
	0x03900DDC CMP X9, 0x1
	0x03900DE0 B.LT 0x3900E10
	0x03900DE4 MOV X9, X31
	0x03900DE8 SXTW X10, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE2000
	006 Move W8, [X21+1969]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7F6000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1969], W8
	018 Compare X20, 0
	019 JumpIfEqual {43}
	020 Move X8, 0x7F6000
	021 Move X8, [X8+2504]
	022 Move X0, X20
	023 Move X1, [X8]
	024 Call Enumerable.ToArray, X0
	025 Compare X0, 0
	026 JumpIfEqual {55}
	027 Move W8, [X0+24]
	028 Move W9, 0xAAAB
	029 Move W10, 0xAAAA
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 NotImplemented "Instruction MADD not yet implemented."
	033 Or W9, W31, 0x55555555
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X19+16], X0
	036 Move [X19+88], X31
	037 Move [X19+96], X31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X0, 0x7F9000
	044 Move X0, [X0+1320]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0x825000
	049 Move X0, [X0+3720]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call ArgumentNullException..ctor, X0, X1
	055 Call 0x1C17F20
	056 Move X0, 0x7FC000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x84E000
	062 Move X0, [X0+3352]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x84E000
	069 Move X0, [X0+3384]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Int32[] get_distinctIndexesInternal()

Disassembly:
	0x03900530 LDUR V0, [X23 + 0x8]
	0x03900534 LDR V1, [X23 + 0x18]
	0x03900538 LDR W13, [X23 + 0x1C]
	0x0390053C AND W14, W19, 0x1
	0x03900540 AND W8, W8, 0x1

ISIL:
	001 Move X8, [X0+88]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Call Face.CacheDistinctIndexes, X0
	007 Return X0

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<System.Int32> get_distinctIndexes()

Disassembly:
	0x03900E60 BL 0x2146668
	0x03900E64 STP X31, X31, [X19 + 0x58]
	0x03900E68 LDP X20, X19, [X31 + 0x10]
	0x03900E6C LDP X30, X21, [X31], #0x20
	0x03900E70 RET
	0x03900E74 STP X30, X27, [X31 - 0x50]!
	0x03900E78 STP X26, X25, [X31 + 0x10]
	0x03900E7C STP X24, X23, [X31 + 0x20]
	0x03900E80 STP X22, X21, [X31 + 0x30]
	0x03900E84 STP X20, X19, [X31 + 0x40]
	0x03900E88 ADRP X21, 0xAE1000
	0x03900E8C LDRB W8, [X21 + 0x7BB]
	0x03900E90 MOV X20, X1
	0x03900E94 MOV X19, X0
	0x03900E98 TBNZ X8, 0x0, 0x3900EEC
	0x03900E9C ADRP X0, 0x7F3000
	0x03900EA0 LDR X0, [X0 + 0xE00]
	0x03900EA4 BL 0x1C16CF4
	0x03900EA8 ADRP X0, 0x84D000
	0x03900EAC LDR X0, [X0 + 0xDB0]
	0x03900EB0 BL 0x1C16CF4
	0x03900EB4 ADRP X0, 0x84D000
	0x03900EB8 LDR X0, [X0 + 0xDB8]
	0x03900EBC BL 0x1C16CF4
	0x03900EC0 ADRP X0, 0x7F3000
	0x03900EC4 LDR X0, [X0 + 0xE18]
	0x03900EC8 BL 0x1C16CF4
	0x03900ECC ADRP X0, 0x7F4000
	0x03900ED0 LDR X0, [X0 + 0xE10]
	0x03900ED4 BL 0x1C16CF4
	0x03900ED8 ADRP X0, 0x7FA000
	0x03900EDC LDR X0, [X0 + 0x858]
	0x03900EE0 BL 0x1C16CF4
	0x03900EE4 MOVZ W8, 0x1
	0x03900EE8 STRB W8, [X21 + 0x7BB]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAE2000
	007 Move W8, [X20+1970]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x84E000
	014 Move X0, [X0+3376]
	015 Call 0x1C17CF4
	016 Move X0, 0x84E000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1970], W8
	021 Move X22, 0x84E000
	022 Move X21, 0x84E000
	023 Move X20, [X19+88]
	024 Move X22, [X22+3368]
	025 Move X21, [X21+3376]
	026 Compare X20, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call Face.CacheDistinctIndexes, X0
	030 Move X20, X0
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X2, [X21]
	034 Move X1, X20
	035 Move X19, X0
	036 Call ReadOnlyCollection`1<Int32>..ctor, X0, X1
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0

Method: UnityEngine.ProBuilder.Edge[] get_edgesInternal()

Disassembly:
	0x03900A80 B.NE 0x3900AA0
	0x03900A84 CMP W8, 0x2
	0x03900A88 B.LS 0x3900B10
	0x03900A8C LDR W8, [X19 + 0x18]
	0x03900A90 CMP W8, 0x3

ISIL:
	001 Move X8, [X0+96]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move X0, X8
	005 Return X0
	006 Call Face.CacheEdges, X0
	007 Return X0

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.ProBuilder.Edge> get_edges()

Disassembly:
	0x03901240 STP X20, X19, [X31 + 0x40]
	0x03901244 ADRP X21, 0xAE0000
	0x03901248 LDRB W8, [X21 + 0x7BC]
	0x0390124C MOV X20, X1
	0x03901250 MOV X19, X0
	0x03901254 TBNZ X8, 0x0, 0x39012A8
	0x03901258 ADRP X0, 0x7F2000
	0x0390125C LDR X0, [X0 + 0xE00]
	0x03901260 BL 0x1C16CF4
	0x03901264 ADRP X0, 0x84C000
	0x03901268 LDR X0, [X0 + 0xDB0]
	0x0390126C BL 0x1C16CF4
	0x03901270 ADRP X0, 0x84C000
	0x03901274 LDR X0, [X0 + 0xDB8]
	0x03901278 BL 0x1C16CF4
	0x0390127C ADRP X0, 0x7F2000
	0x03901280 LDR X0, [X0 + 0xE18]
	0x03901284 BL 0x1C16CF4
	0x03901288 ADRP X0, 0x7F3000
	0x0390128C LDR X0, [X0 + 0xE10]
	0x03901290 BL 0x1C16CF4
	0x03901294 ADRP X0, 0x7F9000
	0x03901298 LDR X0, [X0 + 0x858]
	0x0390129C BL 0x1C16CF4
	0x039012A0 MOVZ W8, 0x1
	0x039012A4 STRB W8, [X21 + 0x7BC]
	0x039012A8 CBZ X20, 0x3901540
	0x039012AC LDR W8, [X20 + 0x1C]
	0x039012B0 ADD W8, W8, 0x1
	0x039012B4 STP W31, W8, [X20 + 0x18]
	0x039012B8 CBZ X19, 0x3901540
	0x039012BC ADRP X10, 0x84C000
	0x039012C0 LDR X8, [X19]
	0x039012C4 LDR X10, [X10 + 0xDB0]
	0x039012C8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAE1000
	007 Move W8, [X20+1971]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x84D000
	014 Move X0, [X0+3456]
	015 Call 0x1C17CF4
	016 Move X0, 0x84D000
	017 Move X0, [X0+3464]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1971], W8
	021 Move X22, 0x84D000
	022 Move X21, 0x84D000
	023 Move X20, [X19+96]
	024 Move X22, [X22+3464]
	025 Move X21, [X21+3456]
	026 Compare X20, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call Face.CacheEdges, X0
	030 Move X20, X0
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X2, [X21]
	034 Move X1, X20
	035 Move X19, X0
	036 Call ReadOnlyCollection`1<Edge>..ctor, X0, X1
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0

Method: System.Int32 get_smoothingGroup()

Disassembly:
	0x039012CC LDR X1, [X10]
	0x039012D0 CBZ X9, 0x39012F4

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_smoothingGroup(System.Int32 value)

Disassembly:
	0x039012D4 LDR X10, [X8 + 0xB0]
	0x039012D8 ADD X10, X10, 0x8

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: UnityEngine.Material get_material()

Disassembly:
	0x039012DC LDUR X11, [X10 - 0x8]
	0x039012E0 CMP X11, X1

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_material(UnityEngine.Material value)

Disassembly:
	0x039012E4 B.EQ 0x3901304
	0x039012E8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Int32 get_submeshIndex()

Disassembly:
	0x039012EC ADD X10, X10, 0x10
	0x039012F0 B.NE 0x39012DC

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_submeshIndex(System.Int32 value)

Disassembly:
	0x039012F4 MOV X0, X19
	0x039012F8 MOV W2, W31

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: UnityEngine.ProBuilder.AutoUnwrapSettings get_uv()

Disassembly:
	0x039012FC BL 0x1C5C788
	0x03901300 B 0x3901310
	0x03901304 LDRSW X9, [X10]
	0x03901308 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Void set_uv(UnityEngine.ProBuilder.AutoUnwrapSettings value)

Disassembly:
	0x0390130C ADD X0, X8, 0x138
	0x03901310 LDP X8, X1, [X0]
	0x03901314 ADRP X22, 0x7F2000
	0x03901318 LDR X22, [X22 + 0xE00]

ISIL:
	001 Move V1, [X1]
	002 Move V0, [X1+16]
	003 Move [X0+44], V0
	004 Move [X0+28], V1
	005 Return 

Method: System.Int32 get_Item(System.Int32 i)

Disassembly:
	0x0390131C MOV X0, X19
	0x03901320 BLR X8
	0x03901324 MOV X19, X0
	0x03901328 CBZ X0, 0x3901544
	0x0390132C ADRP X23, 0x7F2000
	0x03901330 ADRP X24, 0x84C000
	0x03901334 ADRP X25, 0x7F3000
	0x03901338 LDR X23, [X23 + 0xE18]
	0x0390133C LDR X24, [X24 + 0xDB8]
	0x03901340 LDR X25, [X25 + 0xE10]
	0x03901344 LDR X8, [X19]
	0x03901348 LDR X1, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move W0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x0390134C LDRH W9, [X8 + 0x12E]
	0x03901350 CBZ X9, 0x3901374
	0x03901354 LDR X10, [X8 + 0xB0]
	0x03901358 ADD X10, X10, 0x8
	0x0390135C LDUR X11, [X10 - 0x8]
	0x03901360 CMP X11, X1
	0x03901364 B.EQ 0x3901384

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move [X19+72], W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03901368 SUBS X9, X9, 0x1
	0x0390136C ADD X10, X10, 0x10
	0x03901370 B.NE 0x390135C
	0x03901374 MOV X0, X19
	0x03901378 MOV W2, W31
	0x0390137C BL 0x1C5C788
	0x03901380 B 0x3901390
	0x03901384 LDRSW X9, [X10]
	0x03901388 ADD X8, X8, X9, 0x4, LSL
	0x0390138C ADD X0, X8, 0x138
	0x03901390 LDP X8, X1, [X0]
	0x03901394 MOV X0, X19
	0x03901398 BLR X8
	0x0390139C TBZ X0, 0x0, 0x39014B0
	0x039013A0 LDR X8, [X19]
	0x039013A4 LDR X1, [X24]
	0x039013A8 LDRH W9, [X8 + 0x12E]
	0x039013AC CBZ X9, 0x39013D0
	0x039013B0 LDR X10, [X8 + 0xB0]
	0x039013B4 ADD X10, X10, 0x8
	0x039013B8 LDUR X11, [X10 - 0x8]
	0x039013BC CMP X11, X1
	0x039013C0 B.EQ 0x39013E0
	0x039013C4 SUBS X9, X9, 0x1
	0x039013C8 ADD X10, X10, 0x10
	0x039013CC B.NE 0x39013B8
	0x039013D0 MOV X0, X19
	0x039013D4 MOV W2, W31
	0x039013D8 BL 0x1C5C788
	0x039013DC B 0x39013EC
	0x039013E0 LDRSW X9, [X10]
	0x039013E4 ADD X8, X8, X9, 0x4, LSL
	0x039013E8 ADD X0, X8, 0x138
	0x039013EC LDP X8, X1, [X0]
	0x039013F0 MOV X0, X19
	0x039013F4 BLR X8
	0x039013F8 MOV X21, X0
	0x039013FC CBZ X0, 0x3901538
	0x03901400 LDR X0, [X21 + 0x58]
	0x03901404 CBNZ X0, 0x3901414
	0x03901408 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xAE1000
	007 Move X21, 0x84D000
	008 Move W8, [X22+1972]
	009 Move X21, [X21+2760]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x84D000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1972], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, X19
	025 Move X1, X20
	026 Call Face.SetIndexes, X0, X1
	027 Move X8, -48316416
	028 Move V0, [X8+142]
	029 Move X8, 9
	030 Move [X19+44], W31
	031 Move [X19+48], W31
	032 Move [X19+52], X8
	033 Move [X19+28], V0
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call BuiltinMaterials.get_defaultMaterial
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X19+64], X0
	042 Move [X19+24], W31
	043 Move [X19+72], W31
	044 Move [X19+80], D0
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 

Method: System.Void .ctor(System.Int32[] triangles, UnityEngine.Material m, UnityEngine.ProBuilder.AutoUnwrapSettings u, System.Int32 smoothing, System.Int32 texture, System.Int32 element, System.Boolean manualUVs)

Disassembly:
	0x0390140C BL 0x38FFDEC
	0x03901410 CBZ X0, 0x390153C
	0x03901414 LDR X8, [X0 + 0x18]
	0x03901418 CMP W8, 0x1
	0x0390141C B.LT 0x3901344
	0x03901420 MOV X26, X31
	0x03901424 AND X27, X8, 0x0
	0x03901428 LDR X0, [X21 + 0x58]
	0x0390142C CBNZ X0, 0x390143C
	0x03901430 MOV X0, X21
	0x03901434 BL 0x38FFDEC
	0x03901438 CBZ X0, 0x3901534
	0x0390143C LDR W8, [X0 + 0x18]
	0x03901440 CMP X26, X8
	0x03901444 B.CS 0x3901530
	0x03901448 ADD X8, X0, X26, 0x2, LSL
	0x0390144C LDR W10, [X20 + 0x1C]
	0x03901450 LDR W1, [X8 + 0x20]
	0x03901454 LDR X8, [X20 + 0x10]
	0x03901458 LDR X9, [X25]
	0x0390145C ADD W10, W10, 0x1
	0x03901460 STR W10, [X20 + 0x1C]
	0x03901464 CBZ X8, 0x390152C
	0x03901468 LDRSW X10, [X20 + 0x18]
	0x0390146C LDR W11, [X8 + 0x18]
	0x03901470 CMP W10, W11
	0x03901474 B.CS 0x390148C
	0x03901478 ADD W9, W10, 0x1
	0x0390147C ADD X8, X8, X10, 0x2, LSL
	0x03901480 STR W9, [X20 + 0x18]
	0x03901484 STR W1, [X8 + 0x20]
	0x03901488 B 0x39014A0
	0x0390148C LDR X8, [X9 + 0x20]
	0x03901490 LDR X8, [X8 + 0xC0]
	0x03901494 LDR X2, [X8 + 0x70]
	0x03901498 MOV X0, X20
	0x0390149C BL 0x2FDC70C
	0x039014A0 ADD X26, X26, 0x1
	0x039014A4 CMP X27, X26
	0x039014A8 B.NE 0x3901428
	0x039014AC B 0x3901344
	0x039014B0 MOV X20, X31
	0x039014B4 CBZ X19, 0x3901510
	0x039014B8 LDR X8, [X19]
	0x039014BC LDR X1, [X22]
	0x039014C0 LDRH W9, [X8 + 0x12E]
	0x039014C4 CBZ X9, 0x39014E8
	0x039014C8 LDR X10, [X8 + 0xB0]
	0x039014CC ADD X10, X10, 0x8
	0x039014D0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, X1
	011 Move X1, X31
	012 Move W19, W7
	013 Move W20, W6
	014 Move W21, W5
	015 Move W22, W4
	016 Move X23, X3
	017 Move X24, X2
	018 Move X26, X0
	019 Call Object..ctor, X0
	020 Move X0, X26
	021 Move X1, X25
	022 Call Face.SetIndexes, X0, X1
	023 Move W8, [X23]
	024 Move W9, [X23+1]
	025 Move W10, [X23+2]
	026 Move W11, [X23+3]
	027 Move W12, [X23+4]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move V1, [X23+24]
	030 Move W13, [X23+28]
	031 And W14, W19, 1
	032 And W8, W8, 1
	033 And W9, W9, 1
	034 And W10, W10, 1
	035 And W11, W11, 1
	036 Move [X26+64], X24
	037 Move [X26+24], W22
	038 Move [X26+80], W20
	039 Move [X26+84], W21
	040 Move [X26+76], W14
	041 Move [X26+32], W12
	042 Move [X26+36], V0
	043 Move [X26+52], S1
	044 Move [X26+56], W13
	045 Move [X26+28], W8
	046 Move [X26+29], W9
	047 Move [X26+30], W10
	048 Move [X26+31], W11
	049 Move [X26+72], W31
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X24, [X31+32]
	055 Move X23, [X31+40]
	056 Move X26, [X31+16]
	057 Move X25, [X31+24]
	058 Move X30, [X31+80]
	059 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.Int32> triangles, System.Int32 submeshIndex, UnityEngine.ProBuilder.AutoUnwrapSettings u, System.Int32 smoothing, System.Int32 texture, System.Int32 element, System.Boolean manualUVs)

Disassembly:
	0x039014D4 CMP X11, X1
	0x039014D8 B.EQ 0x39014F8
	0x039014DC SUBS X9, X9, 0x1
	0x039014E0 ADD X10, X10, 0x10
	0x039014E4 B.NE 0x39014D0
	0x039014E8 MOV X0, X19
	0x039014EC MOV W2, W31
	0x039014F0 BL 0x1C5C788
	0x039014F4 B 0x3901504
	0x039014F8 LDRSW X9, [X10]
	0x039014FC ADD X8, X8, X9, 0x4, LSL
	0x03901500 ADD X0, X8, 0x138
	0x03901504 LDP X8, X1, [X0]
	0x03901508 MOV X0, X19
	0x0390150C BLR X8
	0x03901510 CBNZ X20, 0x3901548
	0x03901514 LDP X20, X19, [X31 + 0x40]
	0x03901518 LDP X22, X21, [X31 + 0x30]
	0x0390151C LDP X24, X23, [X31 + 0x20]
	0x03901520 LDP X26, X25, [X31 + 0x10]
	0x03901524 LDP X30, X27, [X31], #0x50
	0x03901528 RET
	0x0390152C BL 0x1C16F20
	0x03901530 BL 0x1C16F28
	0x03901534 BL 0x1C16F20
	0x03901538 BL 0x1C16F20
	0x0390153C BL 0x1C16F20
	0x03901540 BL 0x1C16F20
	0x03901544 BL 0x1C16F20
	0x03901548 MOV X0, X20
	0x0390154C BL 0x1C16F18
	0x03901550 B 0x3901574
	0x03901554 B 0x3901574
	0x03901558 B 0x3901574
	0x0390155C B 0x3901574
	0x03901560 B 0x3901574
	0x03901564 B 0x3901574
	0x03901568 B 0x3901574
	0x0390156C B 0x3901574
	0x03901570 B 0x3901574
	0x03901574 CMP W1, 0x1
	0x03901578 B.NE 0x390158C
	0x0390157C BL 0x3EB1AD0
	0x03901580 LDR X20, [X0]
	0x03901584 BL 0x3EB1AE0
	0x03901588 B 0x39014B4
	0x0390158C MOV X21, X0
	0x03901590 MOV X20, X31
	0x03901594 B 0x390159C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, X1
	011 Move X1, X31
	012 Move W19, W7
	013 Move W20, W6
	014 Move W21, W5
	015 Move W22, W4
	016 Move X23, X3
	017 Move W24, W2
	018 Move X26, X0
	019 Call Object..ctor, X0
	020 Move X0, X26
	021 Move X1, X25
	022 Call Face.SetIndexes, X0, X1
	023 Move W8, [X23]
	024 Move W9, [X23+1]
	025 Move W10, [X23+2]
	026 Move W11, [X23+3]
	027 Move W12, [X23+4]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move V1, [X23+24]
	030 Move W13, [X23+28]
	031 And W14, W19, 1
	032 And W8, W8, 1
	033 And W9, W9, 1
	034 And W10, W10, 1
	035 And W11, W11, 1
	036 Move [X26+24], W22
	037 Move [X26+80], W20
	038 Move [X26+84], W21
	039 Move [X26+76], W14
	040 Move [X26+32], W12
	041 Move [X26+36], V0
	042 Move [X26+52], S1
	043 Move [X26+56], W13
	044 Move [X26+28], W8
	045 Move [X26+29], W9
	046 Move [X26+30], W10
	047 Move [X26+31], W11
	048 Move [X26+72], W24
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X30, [X31+80]
	058 Return 

Method: System.Void .ctor(UnityEngine.ProBuilder.Face other)

Disassembly:
	0x03901598 MOV X21, X0
	0x0390159C CBZ X19, 0x39015F8
	0x039015A0 LDR X8, [X19]
	0x039015A4 LDR X1, [X22]
	0x039015A8 LDRH W9, [X8 + 0x12E]
	0x039015AC CBZ X9, 0x39015D0
	0x039015B0 LDR X10, [X8 + 0xB0]
	0x039015B4 ADD X10, X10, 0x8
	0x039015B8 LDUR X11, [X10 - 0x8]
	0x039015BC CMP X11, X1
	0x039015C0 B.EQ 0x39015E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X20
	009 Move X1, X19
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]

Method: System.Void CopyFrom(UnityEngine.ProBuilder.Face other)

Disassembly:
	0x039015C4 SUBS X9, X9, 0x1
	0x039015C8 ADD X10, X10, 0x10
	0x039015CC B.NE 0x39015B8
	0x039015D0 MOV X0, X19
	0x039015D4 MOV W2, W31
	0x039015D8 BL 0x1C5C788
	0x039015DC B 0x39015EC
	0x039015E0 LDRSW X9, [X10]
	0x039015E4 ADD X8, X8, X9, 0x4, LSL
	0x039015E8 ADD X0, X8, 0x138
	0x039015EC LDP X8, X1, [X0]
	0x039015F0 MOV X0, X19
	0x039015F4 BLR X8
	0x039015F8 CBNZ X20, 0x3901604
	0x039015FC MOV X0, X21
	0x03901600 BL 0x1D2C690
	0x03901604 MOV X0, X20
	0x03901608 BL 0x1C16F18
	0x0390160C BL 0x1990590
	0x03901610 SUB X31, X31, 0x70
	0x03901614 STP X29, X30, [X31 + 0x10]
	0x03901618 STP X28, X27, [X31 + 0x20]
	0x0390161C STP X26, X25, [X31 + 0x30]
	0x03901620 STP X24, X23, [X31 + 0x40]
	0x03901624 STP X22, X21, [X31 + 0x50]
	0x03901628 STP X20, X19, [X31 + 0x60]
	0x0390162C ADRP X19, 0xAE0000
	0x03901630 LDRB W8, [X19 + 0x7BD]
	0x03901634 MOV X24, X4
	0x03901638 MOV X20, X3
	0x0390163C MOV W21, W2
	0x03901640 MOV X22, X1
	0x03901644 MOV X23, X0
	0x03901648 TBNZ X8, 0x0, 0x3901660
	0x0390164C ADRP X0, 0x81A000
	0x03901650 LDR X0, [X0 + 0x600]
	0x03901654 BL 0x1C16CF4
	0x03901658 MOVZ W8, 0x1
	0x0390165C STRB W8, [X19 + 0x7BD]
	0x03901660 LDR X0, [X23 + 0x60]
	0x03901664 CBNZ X0, 0x3901674
	0x03901668 MOV X0, X23
	0x0390166C BL 0x38FFEEC
	0x03901670 CBZ X0, 0x3901798
	0x03901674 LDR X8, [X0 + 0x18]
	0x03901678 CMP W8, 0x1
	0x0390167C B.LT 0x3901758
	0x03901680 STR X24, [X31 + 0x8]
	0x03901684 ADRP X28, 0x81A000
	0x03901688 LDR X28, [X28 + 0x600]
	0x0390168C AND X29, X8, 0x0
	0x03901690 MOV X27, X31
	0x03901694 ADD X26, X20, 0x4
	0x03901698 SXTW X19, W29
	0x0390169C MOVZ W25, 0x1
	0x039016A0 LDR X0, [X23 + 0x60]
	0x039016A4 CBNZ X0, 0x39016B4
	0x039016A8 MOV X0, X23
	0x039016AC BL 0x38FFEEC
	0x039016B0 CBZ X0, 0x3901798
	0x039016B4 LDR W8, [X0 + 0x18]
	0x039016B8 CMP X27, X8
	0x039016BC B.CS 0x3901794
	0x039016C0 LDR X8, [X28]
	0x039016C4 ADD X9, X0, X27, 0x3, LSL
	0x039016C8 LDR X24, [X9 + 0x20]
	0x039016CC LDR W10, [X8 + 0xE0]
	0x039016D0 CBNZ W10, 0x39016DC
	0x039016D4 MOV X0, X8
	0x039016D8 BL 0x1C16DFC
	0x039016DC MOV X0, X24
	0x039016E0 MOV X1, X22
	0x039016E4 BL 0x38FDEF0
	0x039016E8 TBNZ X0, 0x0, 0x3901740
	0x039016EC LDR X0, [X23 + 0x60]
	0x039016F0 CBNZ X0, 0x3901700
	0x039016F4 MOV X0, X23
	0x039016F8 BL 0x38FFEEC
	0x039016FC CBZ X0, 0x3901798
	0x03901700 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE1000
	006 Move W8, [X21+1973]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7F4000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1973], W8
	018 Compare X19, 0
	019 JumpIfEqual {72}
	020 Move X8, [X19+16]
	021 Compare X8, 0
	022 JumpIfEqual {90}
	023 Move X9, 0x7F4000
	024 Move X9, [X9+3672]
	025 Move W21, [X8+24]
	026 Move X0, [X9]
	027 Move W1, W21
	028 Call 0x1C17D6C
	029 Move [X20+16], X0
	030 Move X1, X0
	031 Move X0, [X19+16]
	032 Move W2, W21
	033 Move X3, X31
	034 Call Array.Copy, X0, X1, X2
	035 Move W8, [X19+24]
	036 Move [X20+24], W8
	037 Move W8, [X19+28]
	038 Move W9, [X19+29]
	039 Move W10, [X19+30]
	040 Move W11, [X19+31]
	041 Move W12, [X19+32]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move V1, [X19+52]
	044 Move W13, [X19+56]
	045 And W8, W8, 1
	046 And W9, W9, 1
	047 And W10, W10, 1
	048 And W11, W11, 1
	049 Move [X20+32], W12
	050 Move [X20+36], V0
	051 Move [X20+52], S1
	052 Move [X20+56], W13
	053 Move [X20+28], W8
	054 Move [X20+29], W9
	055 Move [X20+30], W10
	056 Move [X20+31], W11
	057 Move X8, [X19+64]
	058 Move [X20+64], X8
	059 Move W8, [X19+76]
	060 Move [X20+76], W8
	061 Move V0, [X19+80]
	062 Move [X20+80], D0
	063 Move W8, [X19+72]
	064 Move [X20+88], X31
	065 Move [X20+96], X31
	066 Move [X20+72], W8
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return 
	072 Move X0, 0x7F8000
	073 Move X0, [X0+1320]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X19, X0
	077 Move X0, 0x81D000
	078 Move X0, [X0+2344]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Move X2, X31
	083 Call ArgumentNullException..ctor, X0, X1
	084 Move X0, 0x84D000
	085 Move X0, [X0+3472]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Call 0x1C17DEC
	090 Call 0x1C17F20

Method: System.Void InvalidateCache()

Disassembly:
	0x03900C64 B.CS 0x3900D28
	0x03900C68 ADD X8, X8, W25, 0x2, SXTW

ISIL:
	001 Move [X0+88], X31
	002 Move [X0+96], X31
	003 Return 

Method: UnityEngine.ProBuilder.Edge[] CacheEdges()

Disassembly:
	0x03900EEC CBZ X20, 0x3901168
	0x03900EF0 LDR W8, [X20 + 0x1C]
	0x03900EF4 ADD W8, W8, 0x1
	0x03900EF8 STP W31, W8, [X20 + 0x18]
	0x03900EFC CBZ X19, 0x3901168
	0x03900F00 ADRP X10, 0x84D000
	0x03900F04 LDR X8, [X19]
	0x03900F08 LDR X10, [X10 + 0xDB0]
	0x03900F0C LDRH W9, [X8 + 0x12E]
	0x03900F10 LDR X1, [X10]
	0x03900F14 CBZ X9, 0x3900F38
	0x03900F18 LDR X10, [X8 + 0xB0]
	0x03900F1C ADD X10, X10, 0x8
	0x03900F20 LDUR X11, [X10 - 0x8]
	0x03900F24 CMP X11, X1
	0x03900F28 B.EQ 0x3900F48
	0x03900F2C SUBS X9, X9, 0x1
	0x03900F30 ADD X10, X10, 0x10
	0x03900F34 B.NE 0x3900F20
	0x03900F38 MOV X0, X19
	0x03900F3C MOV W2, W31
	0x03900F40 BL 0x1C5C788
	0x03900F44 B 0x3900F54
	0x03900F48 LDRSW X9, [X10]
	0x03900F4C ADD X8, X8, X9, 0x4, LSL
	0x03900F50 ADD X0, X8, 0x138
	0x03900F54 LDP X8, X1, [X0]
	0x03900F58 ADRP X22, 0x7F3000
	0x03900F5C LDR X22, [X22 + 0xE00]
	0x03900F60 MOV X0, X19
	0x03900F64 BLR X8
	0x03900F68 MOV X19, X0
	0x03900F6C CBZ X0, 0x390116C
	0x03900F70 ADRP X23, 0x7F3000
	0x03900F74 ADRP X24, 0x84D000
	0x03900F78 ADRP X25, 0x7F4000
	0x03900F7C LDR X23, [X23 + 0xE18]
	0x03900F80 LDR X24, [X24 + 0xDB8]
	0x03900F84 LDR X25, [X25 + 0xE10]
	0x03900F88 LDR X8, [X19]
	0x03900F8C LDR X1, [X23]
	0x03900F90 LDRH W9, [X8 + 0x12E]
	0x03900F94 CBZ X9, 0x3900FB8
	0x03900F98 LDR X10, [X8 + 0xB0]
	0x03900F9C ADD X10, X10, 0x8
	0x03900FA0 LDUR X11, [X10 - 0x8]
	0x03900FA4 CMP X11, X1
	0x03900FA8 B.EQ 0x3900FC8
	0x03900FAC SUBS X9, X9, 0x1
	0x03900FB0 ADD X10, X10, 0x10
	0x03900FB4 B.NE 0x3900FA0
	0x03900FB8 MOV X0, X19
	0x03900FBC MOV W2, W31
	0x03900FC0 BL 0x1C5C788
	0x03900FC4 B 0x3900FD4
	0x03900FC8 LDRSW X9, [X10]
	0x03900FCC ADD X8, X8, X9, 0x4, LSL
	0x03900FD0 ADD X0, X8, 0x138
	0x03900FD4 LDP X8, X1, [X0]
	0x03900FD8 MOV X0, X19
	0x03900FDC BLR X8
	0x03900FE0 TBZ X0, 0x0, 0x39010DC
	0x03900FE4 LDR X8, [X19]
	0x03900FE8 LDR X1, [X24]
	0x03900FEC LDRH W9, [X8 + 0x12E]
	0x03900FF0 CBZ X9, 0x3901014
	0x03900FF4 LDR X10, [X8 + 0xB0]
	0x03900FF8 ADD X10, X10, 0x8
	0x03900FFC LDUR X11, [X10 - 0x8]
	0x03901000 CMP X11, X1
	0x03901004 B.EQ 0x3901024
	0x03901008 SUBS X9, X9, 0x1
	0x0390100C ADD X10, X10, 0x10
	0x03901010 B.NE 0x3900FFC
	0x03901014 MOV X0, X19
	0x03901018 MOV W2, W31
	0x0390101C BL 0x1C5C788
	0x03901020 B 0x3901030
	0x03901024 LDRSW X9, [X10]
	0x03901028 ADD X8, X8, X9, 0x4, LSL
	0x0390102C ADD X0, X8, 0x138
	0x03901030 LDP X8, X1, [X0]
	0x03901034 MOV X0, X19
	0x03901038 BLR X8
	0x0390103C MOV X21, X0
	0x03901040 CBZ X0, 0x3901160
	0x03901044 LDR X8, [X21 + 0x10]
	0x03901048 CBZ X8, 0x3901164
	0x0390104C LDR X9, [X8 + 0x18]
	0x03901050 CMP W9, 0x1
	0x03901054 B.LT 0x3900F88
	0x03901058 MOV X26, X31
	0x0390105C AND X27, X9, 0x0
	0x03901060 LDR W9, [X8 + 0x18]
	0x03901064 CMP X26, X9
	0x03901068 B.CS 0x3901158
	0x0390106C ADD X8, X8, X26, 0x2, LSL
	0x03901070 LDR W10, [X20 + 0x1C]
	0x03901074 LDR W1, [X8 + 0x20]
	0x03901078 LDR X8, [X20 + 0x10]
	0x0390107C LDR X9, [X25]
	0x03901080 ADD W10, W10, 0x1
	0x03901084 STR W10, [X20 + 0x1C]
	0x03901088 CBZ X8, 0x390115C
	0x0390108C LDRSW X10, [X20 + 0x18]
	0x03901090 LDR W11, [X8 + 0x18]
	0x03901094 CMP W10, W11
	0x03901098 B.CS 0x39010B0
	0x0390109C ADD W9, W10, 0x1
	0x039010A0 ADD X8, X8, X10, 0x2, LSL
	0x039010A4 STR W9, [X20 + 0x18]
	0x039010A8 STR W1, [X8 + 0x20]
	0x039010AC B 0x39010C4
	0x039010B0 LDR X8, [X9 + 0x20]
	0x039010B4 LDR X8, [X8 + 0xC0]
	0x039010B8 LDR X2, [X8 + 0x70]
	0x039010BC MOV X0, X20
	0x039010C0 BL 0x2FDC70C
	0x039010C4 ADD X26, X26, 0x1
	0x039010C8 CMP X27, X26
	0x039010CC B.EQ 0x3900F88
	0x039010D0 LDR X8, [X21 + 0x10]
	0x039010D4 CBNZ X8, 0x3901060
	0x039010D8 BL 0x1C16F20
	0x039010DC MOV X20, X31
	0x039010E0 CBZ X19, 0x390113C
	0x039010E4 LDR X8, [X19]
	0x039010E8 LDR X1, [X22]
	0x039010EC LDRH W9, [X8 + 0x12E]
	0x039010F0 CBZ X9, 0x3901114
	0x039010F4 LDR X10, [X8 + 0xB0]
	0x039010F8 ADD X10, X10, 0x8
	0x039010FC LDUR X11, [X10 - 0x8]
	0x03901100 CMP X11, X1
	0x03901104 B.EQ 0x3901124
	0x03901108 SUBS X9, X9, 0x1
	0x0390110C ADD X10, X10, 0x10
	0x03901110 B.NE 0x39010FC
	0x03901114 MOV X0, X19
	0x03901118 MOV W2, W31
	0x0390111C BL 0x1C5C788
	0x03901120 B 0x3901130
	0x03901124 LDRSW X9, [X10]
	0x03901128 ADD X8, X8, X9, 0x4, LSL
	0x0390112C ADD X0, X8, 0x138
	0x03901130 LDP X8, X1, [X0]
	0x03901134 MOV X0, X19
	0x03901138 BLR X8
	0x0390113C CBNZ X20, 0x3901170
	0x03901140 LDP X20, X19, [X31 + 0x40]
	0x03901144 LDP X22, X21, [X31 + 0x30]
	0x03901148 LDP X24, X23, [X31 + 0x20]
	0x0390114C LDP X26, X25, [X31 + 0x10]
	0x03901150 LDP X30, X27, [X31], #0x50
	0x03901154 RET
	0x03901158 BL 0x1C16F28
	0x0390115C BL 0x1C16F20
	0x03901160 BL 0x1C16F20
	0x03901164 BL 0x1C16F20
	0x03901168 BL 0x1C16F20
	0x0390116C BL 0x1C16F20
	0x03901170 MOV X0, X20
	0x03901174 BL 0x1C16F18
	0x03901178 B 0x3901194
	0x0390117C B 0x3901194
	0x03901180 B 0x3901194
	0x03901184 B 0x3901194
	0x03901188 B 0x3901194
	0x0390118C B 0x3901194
	0x03901190 B 0x3901194
	0x03901194 CMP W1, 0x1
	0x03901198 B.NE 0x39011AC
	0x0390119C BL 0x3EB1AD0
	0x039011A0 LDR X20, [X0]
	0x039011A4 BL 0x3EB1AE0
	0x039011A8 B 0x39010E0
	0x039011AC MOV X21, X0
	0x039011B0 MOV X20, X31
	0x039011B4 B 0x39011BC
	0x039011B8 MOV X21, X0
	0x039011BC CBZ X19, 0x3901218
	0x039011C0 LDR X8, [X19]
	0x039011C4 LDR X1, [X22]
	0x039011C8 LDRH W9, [X8 + 0x12E]
	0x039011CC CBZ X9, 0x39011F0
	0x039011D0 LDR X10, [X8 + 0xB0]
	0x039011D4 ADD X10, X10, 0x8
	0x039011D8 LDUR X11, [X10 - 0x8]
	0x039011DC CMP X11, X1
	0x039011E0 B.EQ 0x3901200
	0x039011E4 SUBS X9, X9, 0x1
	0x039011E8 ADD X10, X10, 0x10
	0x039011EC B.NE 0x39011D8
	0x039011F0 MOV X0, X19
	0x039011F4 MOV W2, W31
	0x039011F8 BL 0x1C5C788
	0x039011FC B 0x390120C
	0x03901200 LDRSW X9, [X10]
	0x03901204 ADD X8, X8, X9, 0x4, LSL
	0x03901208 ADD X0, X8, 0x138
	0x0390120C LDP X8, X1, [X0]
	0x03901210 MOV X0, X19
	0x03901214 BLR X8
	0x03901218 CBNZ X20, 0x3901224
	0x0390121C MOV X0, X21
	0x03901220 BL 0x1D2C690
	0x03901224 MOV X0, X20
	0x03901228 BL 0x1C16F18
	0x0390122C BL 0x1990590
	0x03901230 STP X30, X27, [X31 - 0x50]!
	0x03901234 STP X26, X25, [X31 + 0x10]
	0x03901238 STP X24, X23, [X31 + 0x20]
	0x0390123C STP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xAE2000
	014 Move W8, [X20+1974]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x81C000
	021 Move X0, [X0+1536]
	022 Call 0x1C17CF4
	023 Move X0, 0x84E000
	024 Move X0, [X0+3392]
	025 Call 0x1C17CF4
	026 Move X0, 0x84E000
	027 Move X0, [X0+3400]
	028 Call 0x1C17CF4
	029 Move X0, 0x84E000
	030 Move X0, [X0+3408]
	031 Call 0x1C17CF4
	032 Move X0, 0x84E000
	033 Move X0, [X0+3416]
	034 Call 0x1C17CF4
	035 Move X0, 0x84E000
	036 Move X0, [X0+3424]
	037 Call 0x1C17CF4
	038 Move X0, 0x84E000
	039 Move X0, [X0+3432]
	040 Call 0x1C17CF4
	041 Move X0, 0x84E000
	042 Move X0, [X0+3440]
	043 Call 0x1C17CF4
	044 Move X0, 0x84E000
	045 Move X0, [X0+3448]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1974], W8
	049 Move X8, [X19+16]
	050 Compare X8, 0
	051 JumpIfEqual {222}
	052 Move X8, 0x84E000
	053 Move X8, [X8+3424]
	054 Move X20, 0x84E000
	055 Move X21, 0x84E000
	056 Move X22, 0x84E000
	057 Move X0, [X8]
	058 Move X20, [X20+3416]
	059 Move X21, [X21+3448]
	060 Move X22, [X22+3440]
	061 Call 0x1C17F10
	062 Move X1, [X20]
	063 Move X20, X0
	064 Call HashSet`1<Edge>..ctor, X0
	065 Move X0, [X21]
	066 Call 0x1C17F10
	067 Move X1, [X22]
	068 Move X21, X0
	069 Call List`1<Edge>..ctor, X0
	070 Move X8, [X19+16]
	071 Compare X8, 0
	072 JumpIfEqual {236}
	073 Move X28, 0x84E000
	074 Move X29, 0x84E000
	075 Move X28, [X28+3400]
	076 Move X29, [X29+3432]
	077 Move W22, W31
	078 Move W10, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W9, W22, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X10, 0x81B000
	084 Move X10, [X10+1536]
	085 Move X26, W22
	086 Move X23, W9
	087 Add X9, X8, X23
	088 Move X0, [X10]
	089 Add X10, X8, X26
	090 Move W24, [X10+32]
	091 Move W27, [X9+32]
	092 Move W10, [X0+224]
	093 Compare W10, 0
	094 JumpIfNotEqual {99}
	095 Call 0x1C17DFC
	096 Move X8, [X19+16]
	097 Compare X8, 0
	098 JumpIfEqual {236}
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add W25, W23, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare X20, 0
	104 JumpIfEqual {236}
	105 Add X9, X8, X23
	106 Add W10, W22, 2
	107 Add X8, X8, 32
	108 Move X2, [X28]
	109 Move W23, [X9+32]
	110 Move W22, [X8]
	111 Move W26, [X8]
	112 NotImplemented "Instruction BFM not yet implemented."
	113 Move X0, X20
	114 Move X1, X24
	115 Call HashSet`1<Edge>.Add, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {142}
	120 Compare X21, 0
	121 JumpIfEqual {236}
	122 Move W10, [X21+28]
	123 Move X8, [X21+16]
	124 Move X9, [X29]
	125 Add W10, W10, 1
	126 Move [X21+28], W10
	127 Compare X8, 0
	128 JumpIfEqual {236}
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Move W11, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W9, W10, 1
	133 Add X8, X8, X10
	134 Move [X21+24], W9
	135 Move [X8+32], X24
	136 Move X8, [X9+32]
	137 Move X0, X21
	138 Move X1, X24
	139 Move X8, [X8+192]
	140 Move X2, [X8+112]
	141 Call List`1<Edge>.AddWithResize, X0, X1
	142 Move X2, [X28]
	143 NotImplemented "Instruction BFM not yet implemented."
	144 Move X0, X20
	145 Move X1, X23
	146 Call HashSet`1<Edge>.Add, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {173}
	151 Compare X21, 0
	152 JumpIfEqual {236}
	153 Move W10, [X21+28]
	154 Move X8, [X21+16]
	155 Move X9, [X29]
	156 Add W10, W10, 1
	157 Move [X21+28], W10
	158 Compare X8, 0
	159 JumpIfEqual {236}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W11, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W9, W10, 1
	164 Add X8, X8, X10
	165 Move [X21+24], W9
	166 Move [X8+32], X23
	167 Move X8, [X9+32]
	168 Move X0, X21
	169 Move X1, X23
	170 Move X8, [X8+192]
	171 Move X2, [X8+112]
	172 Call List`1<Edge>.AddWithResize, X0, X1
	173 Move X2, [X28]
	174 NotImplemented "Instruction BFM not yet implemented."
	175 Move X0, X20
	176 Move X1, X22
	177 Call HashSet`1<Edge>.Add, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {204}
	182 Compare X21, 0
	183 JumpIfEqual {236}
	184 Move W10, [X21+28]
	185 Move X8, [X21+16]
	186 Move X9, [X29]
	187 Add W10, W10, 1
	188 Move [X21+28], W10
	189 Compare X8, 0
	190 JumpIfEqual {236}
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Move W11, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W9, W10, 1
	195 Add X8, X8, X10
	196 Move [X21+24], W9
	197 Move [X8+32], X22
	198 Move X8, [X9+32]
	199 Move X0, X21
	200 Move X1, X22
	201 Move X8, [X8+192]
	202 Move X2, [X8+112]
	203 Call List`1<Edge>.AddWithResize, X0, X1
	204 Move X8, [X19+16]
	205 Add W22, W25, 1
	206 Compare X8, 0
	207 JumpIfNotEqual {78}
	208 Compare X20, 0
	209 JumpIfEqual {236}
	210 Move X8, 0x84D000
	211 Move X8, [X8+3408]
	212 Move X0, X20
	213 Move X1, X21
	214 Move X2, [X8]
	215 Call HashSet`1<Edge>.ExceptWith, X0, X1
	216 Move X8, 0x84D000
	217 Move X8, [X8+3392]
	218 Move X0, X20
	219 Move X1, [X8]
	220 Call Enumerable.ToArray, X0
	221 Move [X19+96], X0
	222 Move X0, X31
	223 Move X20, [X31+80]
	224 Move X19, [X31+88]
	225 Move X22, [X31+64]
	226 Move X21, [X31+72]
	227 Move X24, [X31+48]
	228 Move X23, [X31+56]
	229 Move X26, [X31+32]
	230 Move X25, [X31+40]
	231 Move X28, [X31+16]
	232 Move X27, [X31+24]
	233 Move X29, [X31+96]
	234 Move X30, [X31+104]
	235 Return X0
	236 Call 0x1C17F20
	237 Call 0x1C17F28

Method: System.Int32[] CacheDistinctIndexes()

Disassembly:
	0x03900DEC ADD X11, X11, 0x20
	0x03900DF0 CMP X9, X8
	0x03900DF4 B.CS 0x3900E1C
	0x03900DF8 LDR W12, [X11, X9, LSL #2]
	0x03900DFC SUB W12, W12, W0
	0x03900E00 STR W12, [X11, X9, LSL #2]
	0x03900E04 ADD X9, X9, 0x1
	0x03900E08 CMP X9, X10
	0x03900E0C B.LT 0x3900DF0
	0x03900E10 STP X31, X31, [X19 + 0x58]
	0x03900E14 LDP X30, X19, [X31], #0x10
	0x03900E18 RET
	0x03900E1C BL 0x1C16F28
	0x03900E20 BL 0x1C16F20
	0x03900E24 STP X30, X21, [X31 - 0x20]!
	0x03900E28 STP X20, X19, [X31 + 0x10]
	0x03900E2C ADRP X21, 0xAE1000
	0x03900E30 ADRP X20, 0x84D000
	0x03900E34 LDRB W8, [X21 + 0x7BA]
	0x03900E38 LDR X20, [X20 + 0xDA8]
	0x03900E3C MOV X19, X0
	0x03900E40 TBNZ X8, 0x0, 0x3900E58
	0x03900E44 ADRP X0, 0x84D000
	0x03900E48 LDR X0, [X0 + 0xDA8]
	0x03900E4C BL 0x1C16CF4
	0x03900E50 MOVZ W8, 0x1
	0x03900E54 STRB W8, [X21 + 0x7BA]
	0x03900E58 LDR X0, [X19 + 0x10]
	0x03900E5C LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x81F000
	008 Move X21, 0x7F6000
	009 Move X20, [X20+3000]
	010 Move X21, [X21+2504]
	011 Move X19, X0
	012 Move X22, 0xAE2000
	013 Move W23, 1
	014 Move W8, [X22+1975]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X20
	020 Call 0x1C17CF4
	021 Move X0, X21
	022 Call 0x1C17CF4
	023 Move [X22+1975], W23
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {34}
	027 Move X1, [X20]
	028 Call Enumerable.Distinct, X0
	029 Move X1, [X21]
	030 Call Enumerable.ToArray, X0
	031 Move [X19+88], X0
	032 Compare X0, 0
	033 JumpIfEqual {14}
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return X0

Method: System.Boolean Contains(System.Int32 a, System.Int32 b, System.Int32 c)

Disassembly:
	0x03901704 CMP X27, X8
	0x03901708 B.CS 0x3901794
	0x0390170C ADD X8, X0, X27, 0x3, LSL
	0x03901710 LDR X8, [X8 + 0x20]
	0x03901714 STR X8, [X20]
	0x03901718 LDR X0, [X28]
	0x0390171C LDR W9, [X0 + 0xE0]
	0x03901720 CBNZ W9, 0x390172C
	0x03901724 BL 0x1C16DFC
	0x03901728 LDR W8, [X20]
	0x0390172C CMP W8, W21
	0x03901730 B.EQ 0x3901764
	0x03901734 LDR W8, [X20 + 0x4]
	0x03901738 CMP W8, W21
	0x0390173C B.EQ 0x3901760
	0x03901740 ADD X27, X27, 0x1
	0x03901744 CMP X27, X19
	0x03901748 CSET W25, LT
	0x0390174C CMP X29, X27
	0x03901750 B.NE 0x39016A0
	0x03901754 B 0x3901770
	0x03901758 MOV W25, W31
	0x0390175C B 0x3901770
	0x03901760 MOV X26, X20
	0x03901764 LDR W8, [X26]
	0x03901768 LDR X9, [X31 + 0x8]
	0x0390176C STR W8, [X9]
	0x03901770 AND W0, W25, 0x1
	0x03901774 LDP X20, X19, [X31 + 0x60]
	0x03901778 LDP X22, X21, [X31 + 0x50]
	0x0390177C LDP X24, X23, [X31 + 0x40]
	0x03901780 LDP X26, X25, [X31 + 0x30]
	0x03901784 LDP X28, X27, [X31 + 0x20]
	0x03901788 LDP X29, X30, [X31 + 0x10]
	0x0390178C ADD X31, X31, 0x70
	0x03901790 RET
	0x03901794 BL 0x1C16F28

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {29}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W10, W31
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X11, X8, W10
	010 Move W11, [X11+32]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Add W11, W10, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X11, X8, W11
	015 Move W11, [X11+32]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add W11, W10, 2
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X11, X8, W11
	020 Move W11, [X11+32]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add W10, W10, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, W31
	025 Move X30, [X31+16]
	026 Return X0
	027 Move W0, 1
	028 Call 0x1C17F28
	029 Call 0x1C17F20

Method: System.Boolean IsQuad()

Disassembly:
	0x03901798 BL 0x1C16F20
	0x0390179C LDR W0, [X0 + 0x30]
	0x039017A0 RET
	0x039017A4 STR X30, [X31 - 0x40]!
	0x039017A8 STP X24, X23, [X31 + 0x10]
	0x039017AC STP X22, X21, [X31 + 0x20]
	0x039017B0 STP X20, X19, [X31 + 0x30]
	0x039017B4 ADRP X24, 0xAE0000
	0x039017B8 ADRP X21, 0x7F2000
	0x039017BC ADRP X23, 0x84C000
	0x039017C0 ADRP X22, 0x84C000
	0x039017C4 ADRP X20, 0x84C000
	0x039017C8 LDRB W8, [X24 + 0x7BE]
	0x039017CC LDR X21, [X21 + 0x838]
	0x039017D0 LDR X23, [X23 + 0xDC0]
	0x039017D4 LDR X22, [X22 + 0xDC8]
	0x039017D8 LDR X20, [X20 + 0xDD0]
	0x039017DC MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+96]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move W8, [X0+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, X19
	014 Call Face.CacheEdges, X0
	015 Compare X0, 0
	016 JumpIfEqual {10}
	017 Move X0, [X19+96]
	018 Compare X0, 0
	019 JumpIfNotEqual {7}
	020 Move X0, X19
	021 Call Face.CacheEdges, X0
	022 Compare X0, 0
	023 JumpIfNotEqual {7}
	024 Call 0x1C17F20

Method: System.Int32[] ToQuad()

Disassembly:
	0x039017E0 TBNZ X8, 0x0, 0x390181C
	0x039017E4 ADRP X0, 0x84C000
	0x039017E8 LDR X0, [X0 + 0xDC8]
	0x039017EC BL 0x1C16CF4
	0x039017F0 ADRP X0, 0x84C000
	0x039017F4 LDR X0, [X0 + 0xDC0]
	0x039017F8 BL 0x1C16CF4
	0x039017FC ADRP X0, 0x7F2000
	0x03901800 LDR X0, [X0 + 0x838]
	0x03901804 BL 0x1C16CF4
	0x03901808 ADRP X0, 0x84C000
	0x0390180C LDR X0, [X0 + 0xDD0]
	0x03901810 BL 0x1C16CF4
	0x03901814 MOVZ W8, 0x1
	0x03901818 STRB W8, [X24 + 0x7BE]
	0x0390181C LDR X0, [X19 + 0x18]
	0x03901820 LDR X1, [X21]
	0x03901824 LDR X2, [X23]
	0x03901828 BL 0x2180B88
	0x0390182C LDR X8, [X19 + 0x20]
	0x03901830 LDR X1, [X21]
	0x03901834 LDR X2, [X22]
	0x03901838 MOV X19, X0
	0x0390183C MOV X0, X8
	0x03901840 BL 0x2180A28
	0x03901844 LDR X8, [X20]
	0x03901848 MOV X1, X19
	0x0390184C LDP X20, X19, [X31 + 0x30]
	0x03901850 LDP X22, X21, [X31 + 0x20]
	0x03901854 LDP X24, X23, [X31 + 0x10]
	0x03901858 MOV X2, X0
	0x0390185C MOV X0, X8
	0x03901860 MOV X3, X31
	0x03901864 LDR X30, [X31], #0x40
	0x03901868 B 0x3227BD4
	0x0390186C STR X30, [X31 - 0x40]!
	0x03901870 STP X24, X23, [X31 + 0x10]
	0x03901874 STP X22, X21, [X31 + 0x20]
	0x03901878 STP X20, X19, [X31 + 0x30]
	0x0390187C ADRP X23, 0xAE0000
	0x03901880 LDRB W8, [X23 + 0x7BF]
	0x03901884 MOV X20, X3
	0x03901888 MOV X22, X2
	0x0390188C MOV X19, X1
	0x03901890 MOV X21, X0
	0x03901894 TBNZ X8, 0x0, 0x39018D0
	0x03901898 ADRP X0, 0x84C000
	0x0390189C LDR X0, [X0 + 0xDD8]
	0x039018A0 BL 0x1C16CF4
	0x039018A4 ADRP X0, 0x84C000
	0x039018A8 LDR X0, [X0 + 0xDE0]
	0x039018AC BL 0x1C16CF4
	0x039018B0 ADRP X0, 0x84C000
	0x039018B4 LDR X0, [X0 + 0xDE8]
	0x039018B8 BL 0x1C16CF4
	0x039018BC ADRP X0, 0x84C000
	0x039018C0 LDR X0, [X0 + 0xDF0]
	0x039018C4 BL 0x1C16CF4
	0x039018C8 MOVZ W8, 0x1
	0x039018CC STRB W8, [X23 + 0x7BF]
	0x039018D0 CBZ X20, 0x39018E0
	0x039018D4 CBZ X22, 0x3901914
	0x039018D8 CBNZ X19, 0x3901958
	0x039018DC B 0x39019E4
	0x039018E0 CBZ X19, 0x39019E4
	0x039018E4 ADRP X8, 0x84C000
	0x039018E8 LDR X23, [X19 + 0x28]
	0x039018EC LDR X8, [X8 + 0xDF0]
	0x039018F0 LDR X0, [X8]
	0x039018F4 BL 0x1C16F10
	0x039018F8 ADRP X8, 0x84C000
	0x039018FC LDR X8, [X8 + 0xDD8]
	0x03901900 MOV X1, X23
	0x03901904 MOV X20, X0
	0x03901908 LDR X2, [X8]
	0x0390190C BL 0x301B8E0
	0x03901910 CBNZ X22, 0x39018D8
	0x03901914 CBZ X19, 0x39019E4
	0x03901918 MOV X0, X19
	0x0390191C MOV X1, X31
	0x03901920 MOV X2, X31
	0x03901924 BL 0x3912114
	0x03901928 ADRP X8, 0x84C000
	0x0390192C LDR X8, [X8 + 0xDE8]
	0x03901930 MOV X23, X0
	0x03901934 LDR X8, [X8]
	0x03901938 MOV X0, X8
	0x0390193C BL 0x1C16F10
	0x03901940 ADRP X8, 0x84C000
	0x03901944 LDR X8, [X8 + 0xDE0]
	0x03901948 MOV X1, X23
	0x0390194C MOV X22, X0
	0x03901950 LDR X2, [X8]
	0x03901954 BL 0x301B8E0
	0x03901958 MOV X0, X19
	0x0390195C MOV X1, X31
	0x03901960 BL 0x3916198
	0x03901964 MOV X23, X0
	0x03901968 MOV X0, X19
	0x0390196C MOV X1, X31
	0x03901970 BL 0x39162B4
	0x03901974 MOV X24, X0
	0x03901978 MOV X0, X21
	0x0390197C MOV X1, X22
	0x03901980 MOV X2, X20
	0x03901984 MOV X3, X23
	0x03901988 MOV X4, X24
	0x0390198C BL 0x39019E8
	0x03901990 MOV X0, X19
	0x03901994 MOV X1, X22
	0x03901998 MOV W2, W31
	0x0390199C MOV X3, X31
	0x039019A0 BL 0x3916CF4
	0x039019A4 MOV X0, X19
	0x039019A8 MOV X1, X20
	0x039019AC MOV X2, X31
	0x039019B0 BL 0x39159C8
	0x039019B4 MOV X0, X19
	0x039019B8 MOV X1, X23
	0x039019BC MOV X2, X31
	0x039019C0 BL 0x3916234
	0x039019C4 MOV X0, X19
	0x039019C8 MOV X1, X24
	0x039019CC LDP X20, X19, [X31 + 0x30]
	0x039019D0 LDP X22, X21, [X31 + 0x20]
	0x039019D4 LDP X24, X23, [X31 + 0x10]
	0x039019D8 MOV X2, X31
	0x039019DC LDR X30, [X31], #0x40
	0x039019E0 B 0x391634C
	0x039019E4 BL 0x1C16F20
	0x039019E8 SUB X31, X31, 0x80
	0x039019EC STP X29, X30, [X31 + 0x20]
	0x039019F0 STP X28, X27, [X31 + 0x30]
	0x039019F4 STP X26, X25, [X31 + 0x40]
	0x039019F8 STP X24, X23, [X31 + 0x50]
	0x039019FC STP X22, X21, [X31 + 0x60]
	0x03901A00 STP X20, X19, [X31 + 0x70]
	0x03901A04 ADRP X22, 0xAE0000
	0x03901A08 LDRB W8, [X22 + 0x7C0]
	0x03901A0C MOV X20, X4
	0x03901A10 MOV X21, X3
	0x03901A14 MOV X23, X2
	0x03901A18 MOV X19, X0
	0x03901A1C STR X1, [X31 + 0x18]
	0x03901A20 TBNZ X8, 0x0, 0x3901AA4
	0x03901A24 ADRP X0, 0x7FC000
	0x03901A28 LDR X0, [X0 + 0x858]
	0x03901A2C BL 0x1C16CF4
	0x03901A30 ADRP X0, 0x7F2000
	0x03901A34 LDR X0, [X0 + 0xE00]
	0x03901A38 BL 0x1C16CF4
	0x03901A3C ADRP X0, 0x84C000
	0x03901A40 LDR X0, [X0 + 0xDF8]
	0x03901A44 BL 0x1C16CF4
	0x03901A48 ADRP X0, 0x84C000
	0x03901A4C LDR X0, [X0 + 0xE00]
	0x03901A50 BL 0x1C16CF4
	0x03901A54 ADRP X0, 0x7F2000
	0x03901A58 LDR X0, [X0 + 0xE18]
	0x03901A5C BL 0x1C16CF4
	0x03901A60 ADRP X0, 0x84C000
	0x03901A64 LDR X0, [X0 + 0xE08]
	0x03901A68 BL 0x1C16CF4
	0x03901A6C ADRP X0, 0x84C000
	0x03901A70 LDR X0, [X0 + 0xE10]
	0x03901A74 BL 0x1C16CF4
	0x03901A78 ADRP X0, 0x84C000
	0x03901A7C LDR X0, [X0 + 0xE18]
	0x03901A80 BL 0x1C16CF4
	0x03901A84 ADRP X0, 0x7F3000
	0x03901A88 LDR X0, [X0 + 0xE28]
	0x03901A8C BL 0x1C16CF4
	0x03901A90 ADRP X0, 0x81C000
	0x03901A94 LDR X0, [X0 + 0xF38]
	0x03901A98 BL 0x1C16CF4
	0x03901A9C MOVZ W8, 0x1
	0x03901AA0 STRB W8, [X22 + 0x7C0]
	0x03901AA4 LDR X8, [X31 + 0x18]
	0x03901AA8 CBZ X8, 0x3901E7C
	0x03901AAC CBZ X19, 0x3901E7C
	0x03901AB0 ADRP X10, 0x84C000
	0x03901AB4 LDR X8, [X19]
	0x03901AB8 LDR X10, [X10 + 0xDF8]
	0x03901ABC LDR X9, [X31 + 0x18]
	0x03901AC0 LDR X1, [X10]
	0x03901AC4 LDR W28, [X9 + 0x18]
	0x03901AC8 LDRH W9, [X8 + 0x12E]
	0x03901ACC CBZ X9, 0x3901AF0
	0x03901AD0 LDR X10, [X8 + 0xB0]
	0x03901AD4 ADD X10, X10, 0x8
	0x03901AD8 LDUR X11, [X10 - 0x8]
	0x03901ADC CMP X11, X1
	0x03901AE0 B.EQ 0x3901B00
	0x03901AE4 SUBS X9, X9, 0x1
	0x03901AE8 ADD X10, X10, 0x10
	0x03901AEC B.NE 0x3901AD8
	0x03901AF0 MOV X0, X19
	0x03901AF4 MOV W2, W31
	0x03901AF8 BL 0x1C5C788
	0x03901AFC B 0x3901B0C
	0x03901B00 LDRSW X9, [X10]
	0x03901B04 ADD X8, X8, X9, 0x4, LSL
	0x03901B08 ADD X0, X8, 0x138
	0x03901B0C LDP X8, X1, [X0]
	0x03901B10 MOV X0, X19
	0x03901B14 BLR X8
	0x03901B18 CMP X20, 0x0
	0x03901B1C CSET W8, NE
	0x03901B20 STR W8, [X31 + 0x4]
	0x03901B24 STR X0, [X31 + 0x10]
	0x03901B28 CBZ X0, 0x3901E80
	0x03901B2C ADRP X27, 0x81C000
	0x03901B30 ADRP X29, 0x7FC000
	0x03901B34 LDR X27, [X27 + 0xF38]
	0x03901B38 LDR X29, [X29 + 0x858]
	0x03901B3C MOV X19, X0
	0x03901B40 STR X23, [X31 + 0x8]
	0x03901B44 LDR X8, [X19]
	0x03901B48 ADRP X10, 0x7F2000
	0x03901B4C LDRH W9, [X8 + 0x12E]
	0x03901B50 LDR X10, [X10 + 0xE18]
	0x03901B54 LDR X1, [X10]
	0x03901B58 CBZ X9, 0x3901B7C
	0x03901B5C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xAE1000
	007 Move W8, [X19+1976]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7F4000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+1976], W8
	018 Move X0, X20
	019 Call Face.IsQuad, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {206}
	024 Move X8, 0x7F4000
	025 Move X8, [X8+3672]
	026 Move W1, 4
	027 Move X0, [X8]
	028 Call 0x1C17D6C
	029 Move X8, [X20+96]
	030 Move X19, X0
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, X20
	034 Call Face.CacheEdges, X0
	035 Move X8, X0
	036 Compare X0, 0
	037 JumpIfEqual {205}
	038 Move W9, [X8+24]
	039 Compare W9, 0
	040 JumpIfEqual {204}
	041 Compare X19, 0
	042 JumpIfEqual {205}
	043 Move W9, [X19+24]
	044 Compare W9, 0
	045 JumpIfEqual {204}
	046 Move W8, [X8+32]
	047 Move [X19+32], W8
	048 Move X0, [X20+96]
	049 Compare X0, 0
	050 JumpIfNotEqual {55}
	051 Move X0, X20
	052 Call Face.CacheEdges, X0
	053 Compare X0, 0
	054 JumpIfEqual {205}
	055 Move W8, [X0+24]
	056 Compare W8, 0
	057 JumpIfEqual {204}
	058 Move W8, [X19+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W9, [X0+36]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X19+36], W9
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W9, TEMP
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X19+40], W9
	068 Move [X19+44], W9
	069 Move X0, [X20+96]
	070 Compare X0, 0
	071 JumpIfNotEqual {76}
	072 Move X0, X20
	073 Call Face.CacheEdges, X0
	074 Compare X0, 0
	075 JumpIfEqual {205}
	076 Move W8, [X0+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, [X19+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W21, [X0+40]
	081 Move X0, [X20+96]
	082 Move W22, [X19+36]
	083 Compare X0, 0
	084 JumpIfNotEqual {89}
	085 Move X0, X20
	086 Call Face.CacheEdges, X0
	087 Compare X0, 0
	088 JumpIfEqual {205}
	089 Move W8, [X0+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, [X19+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X0, 44
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W8, [X19+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W21, [X0+48]
	099 Move X0, [X20+96]
	100 Move W22, [X19+36]
	101 Compare X0, 0
	102 JumpIfNotEqual {107}
	103 Move X0, X20
	104 Call Face.CacheEdges, X0
	105 Compare X0, 0
	106 JumpIfEqual {205}
	107 Move W8, [X0+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, [X19+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X8, X0, 52
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, [X19+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W8, [X0+56]
	117 Move W9, [X19+36]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X20+96]
	120 Compare X0, 0
	121 JumpIfNotEqual {126}
	122 Move X0, X20
	123 Call Face.CacheEdges, X0
	124 Compare X0, 0
	125 JumpIfEqual {205}
	126 Move W8, [X0+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W8, [X19+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X0, 60
	131 Move W8, [X8]
	132 Move [X19+40], W8
	133 Move X0, [X20+96]
	134 Compare X0, 0
	135 JumpIfNotEqual {140}
	136 Move X0, X20
	137 Call Face.CacheEdges, X0
	138 Compare X0, 0
	139 JumpIfEqual {205}
	140 Move W8, [X0+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, [X19+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W21, [X0+40]
	145 Move X0, [X20+96]
	146 Move W22, [X19+40]
	147 Compare X0, 0
	148 JumpIfNotEqual {153}
	149 Move X0, X20
	150 Call Face.CacheEdges, X0
	151 Compare X0, 0
	152 JumpIfEqual {205}
	153 Move W8, [X0+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, [X19+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add X8, X0, 44
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W21, [X0+48]
	163 Move X0, [X20+96]
	164 Move W22, [X19+40]
	165 Compare X0, 0
	166 JumpIfNotEqual {171}
	167 Move X0, X20
	168 Call Face.CacheEdges, X0
	169 Compare X0, 0
	170 JumpIfEqual {205}
	171 Move W8, [X0+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W8, [X19+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add X8, X0, 52
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W8, [X19+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W8, [X0+56]
	181 Move W9, [X19+40]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, [X20+96]
	184 Compare X0, 0
	185 JumpIfNotEqual {190}
	186 Move X0, X20
	187 Call Face.CacheEdges, X0
	188 Compare X0, 0
	189 JumpIfEqual {205}
	190 Move W8, [X0+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W8, [X19+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X8, X0, 60
	195 Move W8, [X8]
	196 Move [X19+44], W8
	197 Move X0, X19
	198 Move X20, [X31+32]
	199 Move X19, [X31+40]
	200 Move X22, [X31+16]
	201 Move X21, [X31+24]
	202 Move X30, [X31+48]
	203 Return X0
	204 Call 0x1C17F28
	205 Call 0x1C17F20
	206 Move X0, 0x7F3000
	207 Move X0, [X0+1456]
	208 Call 0x1C17D08
	209 Call 0x1C17F10
	210 Move X19, X0
	211 Move X0, 0x84D000
	212 Move X0, [X0+3480]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X19
	216 Move X2, X31
	217 Call InvalidOperationException..ctor, X0, X1
	218 Move X0, 0x84D000
	219 Move X0, [X0+3488]
	220 Call 0x1C17D08
	221 Move X1, X0
	222 Move X0, X19
	223 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03901B60 ADD X10, X10, 0x8
	0x03901B64 LDUR X11, [X10 - 0x8]
	0x03901B68 CMP X11, X1
	0x03901B6C B.EQ 0x3901B8C
	0x03901B70 SUBS X9, X9, 0x1
	0x03901B74 ADD X10, X10, 0x10
	0x03901B78 B.NE 0x3901B64
	0x03901B7C MOV X0, X19
	0x03901B80 MOV W2, W31
	0x03901B84 BL 0x1C5C788
	0x03901B88 B 0x3901B98
	0x03901B8C LDRSW X9, [X10]
	0x03901B90 ADD X8, X8, X9, 0x4, LSL
	0x03901B94 ADD X0, X8, 0x138
	0x03901B98 LDP X8, X1, [X0]
	0x03901B9C MOV X0, X19
	0x03901BA0 BLR X8
	0x03901BA4 TBZ X0, 0x0, 0x3901DBC
	0x03901BA8 LDR X8, [X19]
	0x03901BAC ADRP X10, 0x84C000
	0x03901BB0 LDRH W9, [X8 + 0x12E]
	0x03901BB4 LDR X10, [X10 + 0xE00]
	0x03901BB8 LDR X1, [X10]
	0x03901BBC CBZ X9, 0x3901BE0
	0x03901BC0 LDR X10, [X8 + 0xB0]
	0x03901BC4 ADD X10, X10, 0x8
	0x03901BC8 LDUR X11, [X10 - 0x8]
	0x03901BCC CMP X11, X1
	0x03901BD0 B.EQ 0x3901BF0
	0x03901BD4 SUBS X9, X9, 0x1
	0x03901BD8 ADD X10, X10, 0x10
	0x03901BDC B.NE 0x3901BC8
	0x03901BE0 MOV X0, X19
	0x03901BE4 MOV W2, W31
	0x03901BE8 BL 0x1C5C788
	0x03901BEC B 0x3901BFC
	0x03901BF0 LDRSW X9, [X10]
	0x03901BF4 ADD X8, X8, X9, 0x4, LSL
	0x03901BF8 ADD X0, X8, 0x138
	0x03901BFC LDP X8, X1, [X0]
	0x03901C00 MOV X0, X19
	0x03901C04 BLR X8
	0x03901C08 MOV X24, X0
	0x03901C0C CBZ X0, 0x3901E60
	0x03901C10 LDR X8, [X24 + 0x18]
	0x03901C14 CBZ X8, 0x3901E64
	0x03901C18 LDR W23, [X8 + 0x18]
	0x03901C1C CBZ X21, 0x3901C40
	0x03901C20 LDR X8, [X24 + 0x20]
	0x03901C24 CBZ X8, 0x3901C40
	0x03901C28 LDR W8, [X8 + 0x18]
	0x03901C2C CMP W8, W23
	0x03901C30 CSET W19, EQ
	0x03901C34 CBNZ X20, 0x3901C48
	0x03901C38 MOV W8, W31
	0x03901C3C B 0x3901C5C
	0x03901C40 MOV W19, W31
	0x03901C44 CBZ X20, 0x3901C38
	0x03901C48 LDR X8, [X24 + 0x28]
	0x03901C4C CBZ X8, 0x3901C5C
	0x03901C50 LDR W8, [X8 + 0x18]
	0x03901C54 CMP W8, W23
	0x03901C58 CSET W8, EQ
	0x03901C5C LDR X25, [X24 + 0x10]
	0x03901C60 CMP W23, 0x1
	0x03901C64 B.LT 0x3901CE8
	0x03901C68 LDR W9, [X31 + 0x4]
	0x03901C6C MOV W26, W31
	0x03901C70 AND W22, W8, W9, 0x0
	0x03901C74 CBZ X21, 0x3901CAC
	0x03901C78 CBZ W19, 0x3901C98
	0x03901C7C LDR X0, [X24 + 0x20]
	0x03901C80 CBZ X0, 0x3901E58
	0x03901C84 LDR X2, [X27]
	0x03901C88 MOV W1, W26
	0x03901C8C BL 0x2FDC41C
	0x03901C90 MOV W2, W0
	0x03901C94 B 0x3901C9C
	0x03901C98 MOVN W2, 0x0
	0x03901C9C LDR X3, [X29]
	0x03901CA0 ADD W1, W28, W26
	0x03901CA4 MOV X0, X21
	0x03901CA8 BL 0x2A0A344
	0x03901CAC CBZ W22, 0x3901CDC
	0x03901CB0 LDR X0, [X24 + 0x28]
	0x03901CB4 CBZ X0, 0x3901E50
	0x03901CB8 LDR X2, [X27]
	0x03901CBC MOV W1, W26
	0x03901CC0 BL 0x2FDC41C
	0x03901CC4 CBZ X20, 0x3901E48
	0x03901CC8 LDR X3, [X29]
	0x03901CCC ADD W1, W28, W26
	0x03901CD0 MOV W2, W0
	0x03901CD4 MOV X0, X20
	0x03901CD8 BL 0x2A0A344
	0x03901CDC ADD W26, W26, 0x1
	0x03901CE0 CMP W23, W26
	0x03901CE4 B.NE 0x3901C74
	0x03901CE8 STR W28, [X24 + 0x30]
	0x03901CEC CBZ X25, 0x3901E78
	0x03901CF0 LDR X8, [X25 + 0x10]
	0x03901CF4 LDR X22, [X31 + 0x8]
	0x03901CF8 CBZ X8, 0x3901E74
	0x03901CFC LDR X9, [X8 + 0x18]
	0x03901D00 CMP W9, 0x1
	0x03901D04 B.LT 0x3901D24
	0x03901D08 AND X9, X9, 0x0
	0x03901D0C ADD X10, X8, 0x20
	0x03901D10 LDR W11, [X10]
	0x03901D14 SUBS X9, X9, 0x1
	0x03901D18 ADD W11, W11, W28
	0x03901D1C STR W11, [X10], #0x4
	0x03901D20 B.NE 0x3901D10
	0x03901D24 LDR X9, [X24 + 0x18]
	0x03901D28 CBZ X9, 0x3901E6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xAE1000
	010 Move X21, 0x7F3000
	011 Move W8, [X20+1977]
	012 Move X21, [X21+2288]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x7F3000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move X0, 0x7F3000
	022 Move X0, [X0+2104]
	023 Call 0x1C17CF4
	024 Move X0, 0x7F3000
	025 Move X0, [X0+3784]
	026 Call 0x1C17CF4
	027 Move X0, 0x7F3000
	028 Move X0, [X0+2120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1977], W8
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call StringBuilder..ctor, X0
	037 Move X8, [X19+16]
	038 Compare X8, 0
	039 JumpIfEqual {115}
	040 Compare X20, 0
	041 JumpIfEqual {115}
	042 Move X21, 0x7F3000
	043 Move X22, 0x7F3000
	044 Move X23, 0x7F3000
	045 Move X21, [X21+3784]
	046 Move X22, [X22+2104]
	047 Move X23, [X23+2120]
	048 Move W24, W31
	049 Move W8, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X1, [X21]
	052 Move X0, X20
	053 Move X2, X31
	054 Call StringBuilder.Append, X0, X1
	055 Move X8, [X19+16]
	056 Compare X8, 0
	057 JumpIfEqual {115}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, W24
	061 Move W1, [X8+32]
	062 Move X0, X20
	063 Move X2, X31
	064 Call StringBuilder.Append, X0, X1
	065 Move X1, [X22]
	066 Move X0, X20
	067 Move X2, X31
	068 Call StringBuilder.Append, X0, X1
	069 Move X8, [X19+16]
	070 Compare X8, 0
	071 JumpIfEqual {115}
	072 Move W9, [X8+24]
	073 Add W25, W24, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X8, X8, W25
	076 Move W1, [X8+32]
	077 Move X0, X20
	078 Move X2, X31
	079 Call StringBuilder.Append, X0, X1
	080 Move X1, [X22]
	081 Move X0, X20
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Move X8, [X19+16]
	085 Compare X8, 0
	086 JumpIfEqual {115}
	087 Move W9, [X8+24]
	088 Add W25, W25, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W24, 2
	091 Add X8, X8, W9
	092 Move W1, [X8+32]
	093 Move X0, X20
	094 Move X2, X31
	095 Call StringBuilder.Append, X0, X1
	096 Move X1, [X23]
	097 Move X0, X20
	098 Move X2, X31
	099 Call StringBuilder.Append, X0, X1
	100 Move X8, [X19+16]
	101 Compare X8, 0
	102 JumpIfEqual {115}
	103 Move W9, [X8+24]
	104 Subtract W24, W25, 2
	105 Subtract W9, W9, 3
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X1, [X22]
	108 Move X0, X20
	109 Move X2, X31
	110 Call StringBuilder.Append, X0, X1
	111 Move X8, [X19+16]
	112 Add W24, W24, 3
	113 Compare X8, 0
	114 JumpIfNotEqual {49}
	115 Call 0x1C17F20
	116 Move X8, [X20]
	117 Move X0, X20
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X2, [X8+360]
	123 Move X1, [X8+368]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 Move X25, [X31+72]
	128 CallNoReturn X2
	129 Call 0x1C17F28

Method: System.Void ShiftIndexes(System.Int32 offset)

Disassembly:
	0x03901D2C LDR W19, [X9 + 0x18]
	0x03901D30 MOV X0, X25
	0x03901D34 MOV X1, X8
	0x03901D38 BL 0x38FFBA8
	0x03901D3C CBZ X22, 0x3901E68
	0x03901D40 ADRP X9, 0x84C000
	0x03901D44 LDR W10, [X22 + 0x1C]
	0x03901D48 LDR X8, [X22 + 0x10]
	0x03901D4C LDR X9, [X9 + 0xE10]
	0x03901D50 ADD W10, W10, 0x1
	0x03901D54 LDR X9, [X9]
	0x03901D58 STR W10, [X22 + 0x1C]
	0x03901D5C CBZ X8, 0x3901E70
	0x03901D60 LDRSW X10, [X22 + 0x18]
	0x03901D64 LDR W11, [X8 + 0x18]
	0x03901D68 CMP W10, W11
	0x03901D6C B.CS 0x3901D84

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+16]
	003 Compare X9, 0
	004 JumpIfEqual {17}
	005 Move X8, [X9+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 And X8, X8, 0
	008 Add X9, X9, 32
	009 Move W10, [X9]
	010 Subtract X8, X8, 1
	011 Add W10, W10, W1
	012 Move [X9+4], W10
	013 Move [X0+88], X31
	014 Move [X0+96], X31
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: System.Int32 SmallestIndexValue()

Disassembly:
	0x03901D70 ADD W9, W10, 0x1
	0x03901D74 ADD X8, X8, X10, 0x3, LSL
	0x03901D78 STR W9, [X22 + 0x18]
	0x03901D7C STR X25, [X8 + 0x20]
	0x03901D80 B 0x3901D9C
	0x03901D84 LDR X8, [X9 + 0x20]
	0x03901D88 LDR X8, [X8 + 0xC0]
	0x03901D8C LDR X2, [X8 + 0x70]
	0x03901D90 MOV X0, X22
	0x03901D94 MOV X1, X25
	0x03901D98 BL 0x301BF90
	0x03901D9C ADRP X8, 0x84C000
	0x03901DA0 LDR X1, [X24 + 0x18]
	0x03901DA4 LDR X8, [X8 + 0xE08]
	0x03901DA8 ADD W28, W19, W28
	0x03901DAC LDR X2, [X8]
	0x03901DB0 LDP X19, X0, [X31 + 0x10]
	0x03901DB4 BL 0x301C194
	0x03901DB8 B 0x3901B44
	0x03901DBC MOV X21, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {20}
	008 Move W0, [X8+32]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 And X9, X9, 0
	011 Add X8, X8, 36
	012 Subtract X9, X9, 1
	013 Move W10, [X8+4]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 Subtract X9, X9, 1
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: System.Void ShiftIndexesToZero()

Disassembly:
	0x03901DC0 CBZ X19, 0x3901E24
	0x03901DC4 LDR X8, [X19]
	0x03901DC8 ADRP X10, 0x7F2000
	0x03901DCC LDRH W9, [X8 + 0x12E]
	0x03901DD0 LDR X10, [X10 + 0xE00]
	0x03901DD4 LDR X1, [X10]
	0x03901DD8 CBZ X9, 0x3901DFC
	0x03901DDC LDR X10, [X8 + 0xB0]
	0x03901DE0 ADD X10, X10, 0x8
	0x03901DE4 LDUR X11, [X10 - 0x8]
	0x03901DE8 CMP X11, X1
	0x03901DEC B.EQ 0x3901E0C
	0x03901DF0 SUBS X9, X9, 0x1
	0x03901DF4 ADD X10, X10, 0x10
	0x03901DF8 B.NE 0x3901DE4
	0x03901DFC MOV X0, X19
	0x03901E00 MOV W2, W31
	0x03901E04 BL 0x1C5C788
	0x03901E08 B 0x3901E18
	0x03901E0C LDRSW X9, [X10]
	0x03901E10 ADD X8, X8, X9, 0x4, LSL
	0x03901E14 ADD X0, X8, 0x138
	0x03901E18 LDP X8, X1, [X0]
	0x03901E1C MOV X0, X19
	0x03901E20 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Face.SmallestIndexValue, X0
	005 Move X11, [X19+16]
	006 Compare X11, 0
	007 JumpIfEqual {28}
	008 Move W8, [X11+24]
	009 Move X9, X8
	010 ShiftRight X9, 32
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X9, X31
	014 Move X10, W8
	015 Add X11, X11, 32
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W12, [X11]
	018 Subtract W12, W12, W0
	019 Move [X11], W12
	020 Add X9, X9, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+88], X31
	023 Move [X19+96], X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return 
	027 Call 0x1C17F28
	028 Call 0x1C17F20

Method: System.Void Reverse()

Disassembly:
	0x03901E24 CBNZ X21, 0x3901E84
	0x03901E28 LDP X20, X19, [X31 + 0x70]
	0x03901E2C LDP X22, X21, [X31 + 0x60]
	0x03901E30 LDP X24, X23, [X31 + 0x50]
	0x03901E34 LDP X26, X25, [X31 + 0x40]
	0x03901E38 LDP X28, X27, [X31 + 0x30]
	0x03901E3C LDP X29, X30, [X31 + 0x20]
	0x03901E40 ADD X31, X31, 0x80
	0x03901E44 RET
	0x03901E48 LDR X19, [X31 + 0x10]
	0x03901E4C BL 0x1C16F20
	0x03901E50 LDR X19, [X31 + 0x10]
	0x03901E54 BL 0x1C16F20
	0x03901E58 LDR X19, [X31 + 0x10]
	0x03901E5C BL 0x1C16F20
	0x03901E60 BL 0x1C16F20
	0x03901E64 BL 0x1C16F20
	0x03901E68 BL 0x1C16F20
	0x03901E6C BL 0x1C16F20
	0x03901E70 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xAE1000
	006 Move X20, 0x84D000
	007 Move W8, [X21+1978]
	008 Move X20, [X20+3496]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x84D000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1978], W8
	019 Move X0, [X19+16]
	020 Move X1, [X20]
	021 Call Array.Reverse, X0
	022 Move [X19+88], X31
	023 Move [X19+96], X31
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void GetIndices(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03901E74 BL 0x1C16F20
	0x03901E78 BL 0x1C16F20
	0x03901E7C BL 0x1C16F20
	0x03901E80 BL 0x1C16F20
	0x03901E84 MOV X0, X21
	0x03901E88 BL 0x1C16F18
	0x03901E8C B 0x3901ED0
	0x03901E90 B 0x3901ED0
	0x03901E94 B 0x3901ED4
	0x03901E98 B 0x3901ED0
	0x03901E9C B 0x3901ED0
	0x03901EA0 B 0x3901ED0
	0x03901EA4 B 0x3901ED0
	0x03901EA8 B 0x3901ED0
	0x03901EAC B 0x3901ED0
	0x03901EB0 B 0x3901ED4
	0x03901EB4 B 0x3901ED4
	0x03901EB8 B 0x3901ED0
	0x03901EBC B 0x3901ED4
	0x03901EC0 B 0x3901ED0
	0x03901EC4 B 0x3901ED4
	0x03901EC8 B 0x3901ED0
	0x03901ECC B 0x3901ED4
	0x03901ED0 LDR X19, [X31 + 0x10]
	0x03901ED4 MOV X20, X0
	0x03901ED8 CMP W1, 0x1
	0x03901EDC B.NE 0x3901EF4
	0x03901EE0 MOV X0, X20
	0x03901EE4 BL 0x3EB1AD0
	0x03901EE8 LDR X21, [X0]
	0x03901EEC BL 0x3EB1AE0
	0x03901EF0 B 0x3901DC0
	0x03901EF4 MOV X21, X31
	0x03901EF8 B 0x3901F00
	0x03901EFC MOV X20, X0
	0x03901F00 LDR X8, [X31 + 0x10]
	0x03901F04 CBZ X8, 0x3901F6C
	0x03901F08 LDR X8, [X31 + 0x10]
	0x03901F0C ADRP X10, 0x7F2000
	0x03901F10 LDR X8, [X8]
	0x03901F14 LDRH W9, [X8 + 0x12E]
	0x03901F18 LDR X10, [X10 + 0xE00]
	0x03901F1C LDR X1, [X10]
	0x03901F20 CBZ X9, 0x3901F44
	0x03901F24 LDR X10, [X8 + 0xB0]
	0x03901F28 ADD X10, X10, 0x8
	0x03901F2C LDUR X11, [X10 - 0x8]
	0x03901F30 CMP X11, X1
	0x03901F34 B.EQ 0x3901F54
	0x03901F38 SUBS X9, X9, 0x1
	0x03901F3C ADD X10, X10, 0x10
	0x03901F40 B.NE 0x3901F2C
	0x03901F44 LDR X0, [X31 + 0x10]
	0x03901F48 MOV W2, W31
	0x03901F4C BL 0x1C5C788
	0x03901F50 B 0x3901F60
	0x03901F54 LDRSW X9, [X10]
	0x03901F58 ADD X8, X8, X9, 0x4, LSL
	0x03901F5C ADD X0, X8, 0x138
	0x03901F60 LDP X8, X1, [X0]
	0x03901F64 LDR X0, [X31 + 0x10]
	0x03901F68 BLR X8
	0x03901F6C CBNZ X21, 0x3901F78
	0x03901F70 MOV X0, X20
	0x03901F74 BL 0x1D2C690
	0x03901F78 MOV X0, X21
	0x03901F7C BL 0x1C16F18
	0x03901F80 BL 0x1990590
	0x03901F84 MOV X1, X31
	0x03901F88 B 0x33BDD8C
	0x03901F8C STP X30, X21, [X31 - 0x20]!
	0x03901F90 STP X20, X19, [X31 + 0x10]
	0x03901F94 MOV W20, W1
	0x03901F98 MOV X1, X31
	0x03901F9C MOV W19, W2
	0x03901FA0 MOV X21, X0
	0x03901FA4 BL 0x33BDD8C
	0x03901FA8 STP W20, W19, [X21 + 0x10]
	0x03901FAC LDP X20, X19, [X31 + 0x10]
	0x03901FB0 LDP X30, X21, [X31], #0x20
	0x03901FB4 RET
	0x03901FB8 STR D8, [X31 - 0x30]!
	0x03901FBC STP X30, X21, [X31 + 0x10]
	0x03901FC0 STP X20, X19, [X31 + 0x20]
	0x03901FC4 ADRP X21, 0xAE0000
	0x03901FC8 ADRP X20, 0x84C000
	0x03901FCC LDRB W8, [X21 + 0x7C1]
	0x03901FD0 LDR X20, [X20 + 0xE20]
	0x03901FD4 MOV X19, X0
	0x03901FD8 TBNZ X8, 0x0, 0x3901FF0
	0x03901FDC ADRP X0, 0x84C000
	0x03901FE0 LDR X0, [X0 + 0xE20]
	0x03901FE4 BL 0x1C16CF4
	0x03901FE8 MOVZ W8, 0x1
	0x03901FEC STRB W8, [X21 + 0x7C1]
	0x03901FF0 LDR V0, [X19 + 0x10]
	0x03901FF4 LDR X0, [X20]
	0x03901FF8 MOVI V1.2S, 0x1
	0x00000000 INVALID
	0x03902000 BIC V8.8B, V1.8B, V0.8B
	0x03902004 BL 0x1C16F10
	0x03902008 MOV X1, X31
	0x0390200C MOV X19, X0
	0x03902010 BL 0x33BDD8C
	0x03902014 STR D8, [X19 + 0x10]
	0x03902018 MOV X0, X19
	0x0390201C LDP X20, X19, [X31 + 0x20]
	0x03902020 LDP X30, X21, [X31 + 0x10]
	0x03902024 LDR V8, [X31], #0x30
	0x03902028 RET
	0x0390202C LDP S2, S3, [X0 + 0x10]
	0x03902030 SCVTF S2, S2
	0x03902034 SCVTF S3, S3
	0x03902038 FMUL S0, S0, S2
	0x0390203C FMUL S1, S1, S3
	0x03902040 RET
	0x03902044 LDP W8, W9, [X0 + 0x10]
	0x03902048 FMOV S2, 1
	0x0390204C FMOV S3, W31
	0x03902050 CMP W8, 0x1
	0x03902054 FCSEL S4, S3, S2, EQ
	0x03902058 CMP W9, 0x1
	0x0390205C FCSEL S2, S3, S2, EQ
	0x03902060 FMUL S0, S0, S4
	0x03902064 FMUL S1, S1, S2
	0x03902068 RET
	0x0390206C STR X30, [X31 - 0x10]!
	0x03902070 CBZ X0, 0x39020A8
	0x03902074 CBZ X1, 0x39020A8
	0x03902078 LDR W8, [X0 + 0x10]
	0x0390207C LDR W9, [X1 + 0x10]
	0x03902080 CMP W8, W9
	0x03902084 B.NE 0x390209C
	0x03902088 LDR W8, [X0 + 0x14]
	0x0390208C LDR W9, [X1 + 0x14]
	0x03902090 CMP W8, W9
	0x03902094 CSET W0, EQ
	0x03902098 B 0x39020A0
	0x0390209C MOV W0, W31
	0x039020A0 LDR X30, [X31], #0x10
	0x039020A4 RET
	0x039020A8 BL 0x1C16F20
	0x039020AC STR X30, [X31 - 0x10]!
	0x039020B0 CBZ X0, 0x39020E8
	0x039020B4 CBZ X1, 0x39020E8
	0x039020B8 LDR W8, [X0 + 0x10]
	0x039020BC LDR W9, [X1 + 0x10]
	0x039020C0 CMP W8, W9
	0x039020C4 B.NE 0x39020DC
	0x039020C8 LDR W8, [X0 + 0x14]
	0x039020CC LDR W9, [X1 + 0x14]
	0x039020D0 CMP W8, W9
	0x039020D4 CSET W0, NE
	0x039020D8 B 0x39020E0
	0x039020DC MOVZ W0, 0x1
	0x039020E0 LDR X30, [X31], #0x10
	0x039020E4 RET
	0x039020E8 BL 0x1C16F20
	0x039020EC MOV X1, X31
	0x039020F0 B 0x33CB4E0
	0x039020F4 STP X30, X21, [X31 - 0x20]!
	0x039020F8 STP X20, X19, [X31 + 0x10]
	0x039020FC ADRP X21, 0xADF000
	0x03902100 LDRB W8, [X21 + 0x7C2]
	0x03902104 MOV X19, X1
	0x03902108 MOV X20, X0
	0x0390210C TBNZ X8, 0x0, 0x3902124
	0x03902110 ADRP X0, 0x84B000
	0x03902114 LDR X0, [X0 + 0xE20]
	0x03902118 BL 0x1C16CF4
	0x0390211C MOVZ W8, 0x1
	0x03902120 STRB W8, [X21 + 0x7C2]
	0x03902124 CBZ X19, 0x3902164
	0x03902128 ADRP X8, 0x84B000
	0x0390212C LDR X8, [X8 + 0xE20]
	0x03902130 LDR X9, [X19]
	0x03902134 LDR X8, [X8]
	0x03902138 CMP X9, X8
	0x0390213C B.NE 0x3902164
	0x03902140 LDR W8, [X19 + 0x10]
	0x03902144 LDR W9, [X20 + 0x10]
	0x03902148 CMP W8, W9
	0x0390214C B.NE 0x3902164
	0x03902150 LDR W8, [X19 + 0x14]
	0x03902154 LDR W9, [X20 + 0x14]
	0x03902158 CMP W8, W9
	0x0390215C CSET W0, EQ
	0x03902160 B 0x3902168
	0x03902164 MOV W0, W31
	0x03902168 LDP X20, X19, [X31 + 0x10]
	0x0390216C LDP X30, X21, [X31], #0x20
	0x03902170 RET
	0x03902174 STP X30, X21, [X31 - 0x20]!
	0x03902178 STP X20, X19, [X31 + 0x10]
	0x0390217C ADRP X20, 0xADF000
	0x03902180 ADRP X21, 0x7F1000
	0x03902184 LDRB W8, [X20 + 0x7C3]
	0x03902188 LDR X21, [X21 + 0xAC8]
	0x0390218C MOV X19, X0
	0x03902190 TBNZ X8, 0x0, 0x39021CC
	0x03902194 ADRP X0, 0x7F1000
	0x03902198 LDR X0, [X0 + 0xAC8]
	0x0390219C BL 0x1C16CF4
	0x039021A0 ADRP X0, 0x7F1000
	0x039021A4 LDR X0, [X0 + 0x838]
	0x039021A8 BL 0x1C16CF4
	0x039021AC ADRP X0, 0x7FC000
	0x039021B0 LDR X0, [X0 + 0x310]
	0x039021B4 BL 0x1C16CF4
	0x039021B8 ADRP X0, 0x7F2000
	0x039021BC LDR X0, [X0 + 0x608]
	0x039021C0 BL 0x1C16CF4
	0x039021C4 MOVZ W8, 0x1
	0x039021C8 STRB W8, [X20 + 0x7C3]
	0x039021CC LDR X0, [X21]
	0x039021D0 MOVZ W1, 0x5
	0x039021D4 BL 0x1C16D6C
	0x039021D8 CBZ X0, 0x3902278
	0x039021DC LDR W8, [X0 + 0x18]
	0x039021E0 MOV X20, X0
	0x039021E4 CBZ W8, 0x3902274
	0x039021E8 ADRP X8, 0x7FC000
	0x039021EC LDR X8, [X8 + 0x310]
	0x039021F0 ADD X0, X19, 0x10
	0x039021F4 MOV X1, X31
	0x039021F8 LDR X8, [X8]
	0x039021FC STR X8, [X20 + 0x20]
	0x03902200 BL 0x337B6E0
	0x03902204 LDR W8, [X20 + 0x18]
	0x03902208 CMP W8, 0x1
	0x0390220C B.LS 0x3902274
	0x03902210 CMP W8, 0x2
	0x03902214 STR X0, [X20 + 0x28]
	0x03902218 B.EQ 0x3902274
	0x0390221C ADRP X8, 0x7F1000
	0x03902220 LDR X8, [X8 + 0x838]
	0x03902224 ADD X0, X19, 0x14
	0x03902228 MOV X1, X31
	0x0390222C LDR X8, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xAE1000
	012 Move W8, [X21+1979]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x7F3000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x84D000
	023 Move X0, [X0+3504]
	024 Call 0x1C17CF4
	025 Move X0, 0x84D000
	026 Move X0, [X0+3512]
	027 Call 0x1C17CF4
	028 Move X0, 0x7F3000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0x7F4000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0x7FA000
	035 Move X0, [X0+2136]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1979], W8
	039 Compare X20, 0
	040 JumpIfEqual {207}
	041 Move W8, [X20+28]
	042 Add W8, W8, 1
	043 Move [X20+24], W31
	044 Move [X20+28], W8
	045 Compare X19, 0
	046 JumpIfEqual {207}
	047 Move X10, 0x84D000
	048 Move X8, [X19]
	049 Move X10, [X10+3504]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X19
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X22, 0x7F3000
	069 Move X22, [X22+3584]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, X0
	073 Compare X0, 0
	074 JumpIfEqual {208}
	075 Move X23, 0x7F3000
	076 Move X24, 0x84D000
	077 Move X25, 0x7F4000
	078 Move X23, [X23+3608]
	079 Move X24, [X24+3512]
	080 Move X25, [X25+3600]
	081 Move X8, [X19]
	082 Move X1, [X23]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {166}
	106 Move X8, [X19]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X21, X0
	128 Compare X0, 0
	129 JumpIfEqual {205}
	130 Move X8, [X21+16]
	131 Compare X8, 0
	132 JumpIfEqual {206}
	133 Move X9, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X26, X31
	136 And X27, X9, 0
	137 Move W9, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X8, X8, X26
	140 Move W10, [X20+28]
	141 Move W1, [X8+32]
	142 Move X8, [X20+16]
	143 Move X9, [X25]
	144 Add W10, W10, 1
	145 Move [X20+28], W10
	146 Compare X8, 0
	147 JumpIfEqual {204}
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Move W11, [X8+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add W9, W10, 1
	152 Add X8, X8, X10
	153 Move [X20+24], W9
	154 Move [X8+32], W1
	155 Move X8, [X9+32]
	156 Move X8, [X8+192]
	157 Move X2, [X8+112]
	158 Move X0, X20
	159 Call List`1<Int32>.AddWithResize, X0, X1
	160 Add X26, X26, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X21+16]
	163 Compare X8, 0
	164 JumpIfNotEqual {137}
	165 Call 0x1C17F20
	166 Move X20, X31
	167 Compare X19, 0
	168 JumpIfEqual {190}
	169 Move X8, [X19]
	170 Move X1, [X22]
	171 NotImplemented "Instruction LDRH not yet implemented."
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X19
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X19
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Compare X20, 0
	191 JumpIfNotEqual {209}
	192 Move X20, [X31+64]
	193 Move X19, [X31+72]
	194 Move X22, [X31+48]
	195 Move X21, [X31+56]
	196 Move X24, [X31+32]
	197 Move X23, [X31+40]
	198 Move X26, [X31+16]
	199 Move X25, [X31+24]
	200 Move X30, [X31+80]
	201 Move X27, [X31+88]
	202 Return 
	203 Call 0x1C17F28
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Move X0, X20
	210 Call 0x1C17F18
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Call 0x3EB2AD0
	213 Move X20, [X0]
	214 Call 0x3EB2AE0
	215 Move X21, X0
	216 Move X20, X31
	217 Move X21, X0
	218 Compare X19, 0
	219 JumpIfEqual {241}
	220 Move X8, [X19]
	221 Move X1, [X22]
	222 NotImplemented "Instruction LDRH not yet implemented."
	223 Compare X9, 0
	224 JumpIfEqual {231}
	225 Move X10, [X8+176]
	226 Add X10, X10, 8
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Subtract X9, X9, 1
	230 Add X10, X10, 16
	231 Move X0, X19
	232 Move W2, W31
	233 Call 0x1C5D788
	234 NotImplemented "Instruction LDRSW not yet implemented."
	235 Add X8, X8, X9
	236 Add X0, X8, 312
	237 Move X8, [X0]
	238 Move X1, [X0+8]
	239 Move X0, X19
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Compare X20, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X21
	244 Call 0x1D2D690
	245 Move X0, X20
	246 Call 0x1C17F18
	247 Call 0x1991590

Method: System.Void GetDistinctIndices(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03902230 STR X8, [X20 + 0x30]
	0x03902234 BL 0x337B6E0
	0x03902238 LDR W8, [X20 + 0x18]
	0x0390223C CMP W8, 0x3
	0x03902240 B.LS 0x3902274
	0x03902244 CMP W8, 0x4
	0x03902248 STR X0, [X20 + 0x38]
	0x0390224C B.EQ 0x3902274
	0x03902250 ADRP X8, 0x7F2000
	0x03902254 LDR X8, [X8 + 0x608]
	0x03902258 MOV X0, X20
	0x0390225C MOV X1, X31
	0x03902260 LDR X8, [X8]
	0x03902264 STR X8, [X20 + 0x40]
	0x03902268 LDP X20, X19, [X31 + 0x10]
	0x0390226C LDP X30, X21, [X31], #0x20
	0x03902270 B 0x32278CC
	0x03902274 BL 0x1C16F28
	0x03902278 BL 0x1C16F20
	0x0390227C STR X30, [X31 - 0x20]!
	0x03902280 STP X20, X19, [X31 + 0x10]
	0x03902284 ADRP X19, 0xADF000
	0x03902288 ADRP X20, 0x84B000
	0x0390228C LDRB W8, [X19 + 0x7C4]
	0x03902290 LDR X20, [X20 + 0xE20]
	0x03902294 TBNZ X8, 0x0, 0x39022AC
	0x03902298 ADRP X0, 0x84B000
	0x0390229C LDR X0, [X0 + 0xE20]
	0x039022A0 BL 0x1C16CF4
	0x039022A4 MOVZ W8, 0x1
	0x039022A8 STRB W8, [X19 + 0x7C4]
	0x039022AC LDR X0, [X20]
	0x039022B0 BL 0x1C16F10
	0x039022B4 MOV X1, X31
	0x039022B8 MOV X19, X0
	0x039022BC BL 0x33BDD8C
	0x039022C0 MOVI V0.2S, 0x1
	0x039022C4 STR D0, [X19 + 0x10]
	0x039022C8 LDR X8, [X20]
	0x039022CC LDR X8, [X8 + 0xB8]
	0x039022D0 STR X19, [X8]
	0x039022D4 LDP X20, X19, [X31 + 0x10]
	0x039022D8 LDR X30, [X31], #0x20
	0x039022DC RET
	0x039022E0 STP D11, D10, [X31 - 0x30]!
	0x039022E4 STP D9, D8, [X31 + 0x10]
	0x039022E8 STR X30, [X31 + 0x20]
	0x039022EC CBZ X0, 0x390232C
	0x039022F0 MOV X1, X31
	0x039022F4 MOV V9.16B, V3.16B
	0x039022F8 MOV V8.16B, V2.16B
	0x039022FC MOV V10.16B, V1.16B
	0x03902300 MOV V11.16B, V0.16B
	0x03902304 BL 0x3C04078
	0x03902308 SCVTF S1, W0
	0x0390230C FSUB S1, S1, S10
	0x03902310 FDIV S0, S11, S9
	0x03902314 FDIV S1, S1, S9
	0x03902318 MOV V2.16B, V8.16B
	0x0390231C LDR X30, [X31 + 0x20]
	0x03902320 LDP D9, D8, [X31 + 0x10]
	0x03902324 LDP D11, D10, [X31], #0x30
	0x03902328 RET
	0x0390232C BL 0x1C16F20
	0x03902330 SUB X31, X31, 0x30
	0x03902334 STR X30, [X31 + 0x20]
	0x03902338 LDR X8, [X0 + 0x10]
	0x0390233C LDR V0, [X0]
	0x03902340 MOV X4, X3
	0x03902344 ADD X0, X31, 0x0
	0x03902348 STR X8, [X31 + 0x10]
	0x0390234C MOVZ W8, 0x7F800000
	0x03902350 STR V0, [X31]
	0x03902354 MOVZ W3, 0x1
	0x03902358 FMOV S0, W8
	0x0390235C BL 0x3902370
	0x03902360 LDR X30, [X31 + 0x20]
	0x03902364 AND W0, W0, 0x1
	0x03902368 ADD X31, X31, 0x30
	0x0390236C RET
	0x03902370 SUB X31, X31, 0x1C0
	0x03902374 STP D15, D14, [X31 + 0x120]
	0x03902378 STP D13, D12, [X31 + 0x130]
	0x0390237C STP D11, D10, [X31 + 0x140]
	0x03902380 STP D9, D8, [X31 + 0x150]
	0x03902384 STP X29, X30, [X31 + 0x160]
	0x03902388 STP X28, X27, [X31 + 0x170]
	0x0390238C STP X26, X25, [X31 + 0x180]
	0x03902390 STP X24, X23, [X31 + 0x190]
	0x03902394 STP X22, X21, [X31 + 0x1A0]
	0x03902398 STP X20, X19, [X31 + 0x1B0]
	0x0390239C ADRP X19, 0xADF000
	0x039023A0 LDRB W8, [X19 + 0x7C5]
	0x039023A4 MOV X21, X4
	0x039023A8 MOV W22, W3
	0x039023AC MOV V8.16B, V0.16B
	0x039023B0 MOV X23, X2
	0x039023B4 MOV X29, X1
	0x039023B8 MOV X20, X0
	0x039023BC TBNZ X8, 0x0, 0x39023E0
	0x039023C0 ADRP X0, 0x84B000
	0x039023C4 LDR X0, [X0 + 0xE28]
	0x039023C8 BL 0x1C16CF4
	0x039023CC ADRP X0, 0x84B000
	0x039023D0 LDR X0, [X0 + 0xE30]
	0x039023D4 BL 0x1C16CF4
	0x039023D8 MOVZ W8, 0x1
	0x039023DC STRB W8, [X19 + 0x7C5]
	0x039023E0 STP X31, X31, [X31 + 0x110]
	0x039023E4 CBZ X29, 0x390289C
	0x039023E8 LDR V9, [X20]
	0x039023EC LDR V10, [X20 + 0x8]
	0x039023F0 MOV X0, X29
	0x039023F4 MOV X1, X31
	0x039023F8 BL 0x3C32E90
	0x039023FC CBZ X0, 0x390289C
	0x03902400 MOV X1, X31
	0x03902404 BL 0x3C3F58C
	0x03902408 FSUB S2, S10, S2
	0x0390240C MOV V0.S[1], V1.S[0]
	0x03902410 FSUB V0.2S, V9.2S, V0.2S
	0x03902414 MOV X0, X29
	0x03902418 MOV X1, X31
	0x0390241C STR D0, [X20]
	0x03902420 STR S2, [X20 + 0x8]
	0x03902424 BL 0x3C32E90
	0x03902428 CBZ X0, 0x390289C
	0x0390242C ADD X8, X31, 0xD0
	0x03902430 MOV X1, X31
	0x03902434 BL 0x3C3FF0C
	0x03902438 LDP V0, V1, [X31 + 0xD0]
	0x0390243C LDP V2, V3, [X31 + 0xF0]
	0x03902440 ADD X0, X31, 0x90
	0x03902444 MOV X1, X31
	0x03902448 STP V0, V1, [X31 + 0x90]
	0x0390244C STP V2, V3, [X31 + 0xB0]
	0x03902450 LDP S0, S1, [X20]
	0x03902454 LDR V2, [X20 + 0x8]
	0x03902458 FMOV S3, W31
	0x0390245C BL 0x3C2806C
	0x03902460 MOV X0, X29
	0x03902464 MOV X1, X31
	0x03902468 STP S0, S1, [X20]
	0x0390246C STR S2, [X20 + 0x8]
	0x03902470 BL 0x3C32E90
	0x03902474 CBZ X0, 0x390289C
	0x03902478 ADD X8, X31, 0xD0
	0x0390247C MOV X1, X31
	0x03902480 BL 0x3C3FF0C
	0x03902484 LDP V0, V1, [X31 + 0xD0]
	0x03902488 LDP V2, V3, [X31 + 0xF0]
	0x0390248C ADD X0, X31, 0x50
	0x03902490 MOV X1, X31
	0x03902494 STP V0, V1, [X31 + 0x50]
	0x03902498 STP V2, V3, [X31 + 0x70]
	0x0390249C LDP S0, S1, [X20 + 0xC]
	0x039024A0 LDR V2, [X20 + 0x14]
	0x039024A4 FMOV S3, W31
	0x039024A8 BL 0x3C2806C
	0x039024AC ADRP X19, 0xAD6000
	0x039024B0 LDRB W8, [X19 + 0x785]
	0x039024B4 MOV V9.16B, V0.16B
	0x039024B8 MOV V10.16B, V1.16B
	0x039024BC MOV V11.16B, V2.16B
	0x039024C0 CBNZ W8, 0x39024D8
	0x039024C4 ADRP X0, 0x7F1000
	0x039024C8 LDR X0, [X0 + 0x5A8]
	0x039024CC BL 0x1C16CF4
	0x039024D0 MOVZ W8, 0x1
	0x039024D4 STRB W8, [X19 + 0x785]
	0x039024D8 ADRP X8, 0x7F1000
	0x039024DC LDR X8, [X8 + 0x5A8]
	0x039024E0 LDR X0, [X8]
	0x039024E4 LDR W8, [X0 + 0xE0]
	0x039024E8 CBNZ W8, 0x39024F0
	0x039024EC BL 0x1C16DFC
	0x039024F0 FMUL S0, S9, S9
	0x039024F4 FMUL S1, S10, S10
	0x039024F8 ADRP X8, 0xFFFFFFFFFD1E8000
	0x039024FC FADD S0, S0, S1
	0x03902500 LDR V1, [X8 + 0x17C]
	0x03902504 ADRP X19, 0x7F1000
	0x03902508 FMUL S2, S11, S11
	0x0390250C LDR X19, [X19 + 0x5A0]
	0x03902510 FADD S0, S2, S0
	0x03902514 FSQRT S2, S0
	0x03902518 FCMP S2, S1
	0x0390251C B.LE 0x3902540
	0x03902520 ADRP X8, 0xAD6000
	0x03902524 LDRB W8, [X8 + 0x783]
	0x03902528 FDIV S0, S9, S2
	0x0390252C FDIV S1, S10, S2
	0x03902530 FDIV S2, S11, S2
	0x03902534 CMP W8, 0x0
	0x03902538 CSET W8, EQ
	0x0390253C B 0x390257C
	0x03902540 MOV X24, X21
	0x03902544 ADRP X21, 0xAD6000
	0x03902548 LDRB W8, [X21 + 0x783]
	0x0390254C CBNZ W8, 0x3902564
	0x03902550 ADRP X0, 0x7F1000
	0x03902554 LDR X0, [X0 + 0x5A0]
	0x03902558 BL 0x1C16CF4
	0x0390255C MOVZ W8, 0x1
	0x03902560 STRB W8, [X21 + 0x783]
	0x03902564 LDR X8, [X19]
	0x03902568 MOV X21, X24
	0x0390256C LDR X8, [X8 + 0xB8]
	0x03902570 LDP S0, S1, [X8]
	0x03902574 LDR V2, [X8 + 0x8]
	0x03902578 MOV W8, W31
	0x0390257C STP S0, S1, [X20 + 0xC]
	0x03902580 STR S2, [X20 + 0x14]
	0x03902584 LDR X25, [X29 + 0x58]
	0x03902588 LDR X26, [X29 + 0x28]
	0x0390258C CBZ W8, 0x39025A8
	0x03902590 ADRP X0, 0x7F1000
	0x03902594 LDR X0, [X0 + 0x5A0]
	0x03902598 BL 0x1C16CF4
	0x0390259C ADRP X8, 0xAD6000
	0x039025A0 MOVZ W9, 0x1
	0x039025A4 STRB W9, [X8 + 0x783]
	0x039025A8 CBZ X26, 0x390289C
	0x039025AC LDR X8, [X19]
	0x039025B0 STR X23, [X31 + 0x18]
	0x039025B4 LDR X9, [X8 + 0xB8]
	0x039025B8 LDR X8, [X26 + 0x18]
	0x039025BC LDP S10, S9, [X9 + 0x4]
	0x039025C0 LDR V11, [X9]
	0x039025C4 CMP W8, 0x1
	0x039025C8 B.LT 0x39027F4
	0x039025CC AND X8, X8, 0x0
	0x039025D0 STP X26, X8, [X31 + 0x20]
	0x039025D4 MOVZ W8, 0x7F800000
	0x039025D8 MOV X27, X31
	0x039025DC MOVN W24, 0x0
	0x039025E0 FMOV S12, W8
	0x039025E4 MOVZ W19, 0xC
	0x039025E8 CBZ X21, 0x3902618
	0x039025EC LDR W8, [X26 + 0x18]
	0x039025F0 CMP X27, X8
	0x039025F4 B.CS 0x3902898
	0x039025F8 ADD X8, X26, X27, 0x3, LSL
	0x039025FC LDR X1, [X8 + 0x20]
	0x03902600 ADRP X8, 0x84B000
	0x03902604 LDR X8, [X8 + 0xE28]
	0x03902608 MOV X0, X21
	0x0390260C LDR X2, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0xAE0000
	012 Move W8, [X21+1980]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x7F2000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x84C000
	023 Move X0, [X0+3504]
	024 Call 0x1C17CF4
	025 Move X0, 0x84C000
	026 Move X0, [X0+3512]
	027 Call 0x1C17CF4
	028 Move X0, 0x7F2000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0x7F3000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0x7F9000
	035 Move X0, [X0+2136]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1980], W8
	039 Compare X20, 0
	040 JumpIfEqual {215}
	041 Move W8, [X20+28]
	042 Add W8, W8, 1
	043 Move [X20+24], W31
	044 Move [X20+28], W8
	045 Compare X19, 0
	046 JumpIfEqual {215}
	047 Move X10, 0x84C000
	048 Move X8, [X19]
	049 Move X10, [X10+3504]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move X0, X19
	061 Move W2, W31
	062 Call 0x1C5D788
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X8, X8, X9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X22, 0x7F2000
	069 Move X22, [X22+3584]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X19, X0
	073 Compare X0, 0
	074 JumpIfEqual {216}
	075 Move X23, 0x7F2000
	076 Move X24, 0x84C000
	077 Move X25, 0x7F3000
	078 Move X23, [X23+3608]
	079 Move X24, [X24+3512]
	080 Move X25, [X25+3600]
	081 Move X8, [X19]
	082 Move X1, [X23]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {173}
	106 Move X8, [X19]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X21, X0
	128 Compare X0, 0
	129 JumpIfEqual {213}
	130 Move X0, [X21+88]
	131 Compare X0, 0
	132 JumpIfNotEqual {137}
	133 Move X0, X21
	134 Call Face.CacheDistinctIndexes, X0
	135 Compare X0, 0
	136 JumpIfEqual {214}
	137 Move X8, [X0+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X26, X31
	140 And X27, X8, 0
	141 Move X0, [X21+88]
	142 Compare X0, 0
	143 JumpIfNotEqual {148}
	144 Move X0, X21
	145 Call Face.CacheDistinctIndexes, X0
	146 Compare X0, 0
	147 JumpIfEqual {212}
	148 Move W8, [X0+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X0, X26
	151 Move W10, [X20+28]
	152 Move W1, [X8+32]
	153 Move X8, [X20+16]
	154 Move X9, [X25]
	155 Add W10, W10, 1
	156 Move [X20+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {210}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X20+24], W9
	165 Move [X8+32], W1
	166 Move X8, [X9+32]
	167 Move X8, [X8+192]
	168 Move X2, [X8+112]
	169 Move X0, X20
	170 Call List`1<Int32>.AddWithResize, X0, X1
	171 Add X26, X26, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X20, X31
	174 Compare X19, 0
	175 JumpIfEqual {197}
	176 Move X8, [X19]
	177 Move X1, [X22]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X20, 0
	198 JumpIfNotEqual {217}
	199 Move X20, [X31+64]
	200 Move X19, [X31+72]
	201 Move X22, [X31+48]
	202 Move X21, [X31+56]
	203 Move X24, [X31+32]
	204 Move X23, [X31+40]
	205 Move X26, [X31+16]
	206 Move X25, [X31+24]
	207 Move X30, [X31+80]
	208 Move X27, [X31+88]
	209 Return 
	210 Call 0x1C17F20
	211 Call 0x1C17F28
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Move X0, X20
	218 Call 0x1C17F18
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Call 0x3EB2AD0
	221 Move X20, [X0]
	222 Call 0x3EB2AE0
	223 Move X21, X0
	224 Move X20, X31
	225 Move X21, X0
	226 Compare X19, 0
	227 JumpIfEqual {249}
	228 Move X8, [X19]
	229 Move X1, [X22]
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move X0, X19
	240 Move W2, W31
	241 Call 0x1C5D788
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Add X8, X8, X9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X1, [X0+8]
	247 Move X0, X19
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Compare X20, 0
	250 JumpIfNotEqual {253}
	251 Move X0, X21
	252 Call 0x1D2D690
	253 Move X0, X20
	254 Call 0x1C17F18
	255 Call 0x1991590

Method: System.Boolean TryGetNextEdge(UnityEngine.ProBuilder.Edge source, System.Int32 index, ref UnityEngine.ProBuilder.Edge nextEdge, ref System.Int32 nextIndex)

Disassembly:
	0x03902610 BL 0x2DBE4B0
	0x03902614 TBNZ X0, 0x0, 0x39027E0
	0x03902618 LDR X8, [X29 + 0x28]
	0x0390261C CBZ X8, 0x390289C
	0x03902620 LDR W9, [X8 + 0x18]
	0x03902624 CMP X27, X9
	0x03902628 B.CS 0x3902898
	0x0390262C ADD X8, X8, X27, 0x3, LSL
	0x03902630 LDR X8, [X8 + 0x20]
	0x03902634 CBZ X8, 0x390289C
	0x03902638 LDR X28, [X8 + 0x10]
	0x0390263C CBZ X28, 0x390289C
	0x03902640 LDR X23, [X28 + 0x18]
	0x03902644 CMP W23, 0x1
	0x03902648 B.LT 0x39027E0
	0x0390264C CBZ W23, 0x3902898
	0x03902650 MOV X26, X29
	0x03902654 MOV X29, X21
	0x03902658 MOV W8, W23
	0x0390265C MOVZ W21, 0x1
	0x03902660 CBZ X25, 0x390289C
	0x03902664 SUB W9, W21, 0x1
	0x03902668 ADD X9, X28, W9, 0x2, SXTW
	0x0390266C LDRSW X9, [X9 + 0x20]
	0x03902670 LDR W10, [X25 + 0x18]
	0x03902674 CMP W9, W10
	0x03902678 B.CS 0x3902898
	0x0390267C CMP W21, W8
	0x03902680 B.CS 0x3902898
	0x03902684 ADD X11, X28, W21, 0x2, SXTW
	0x03902688 LDRSW X11, [X11 + 0x20]
	0x0390268C CMP W11, W10
	0x03902690 B.CS 0x3902898
	0x03902694 ADD W12, W21, 0x1
	0x03902698 CMP W12, W8
	0x0390269C B.CS 0x3902898
	0x039026A0 ADD X8, X28, W12, 0x2, SXTW
	0x039026A4 LDRSW X8, [X8 + 0x20]
	0x039026A8 CMP W8, W10
	0x039026AC B.CS 0x3902898
	0x039026B0 MADD X9, X9, X19, X25
	0x039026B4 MADD X10, X11, X19, X25
	0x039026B8 MADD X8, X8, X19, X25
	0x039026BC LDP S0, S1, [X9 + 0x20]
	0x039026C0 LDR V2, [X9 + 0x28]
	0x039026C4 LDP S3, S4, [X10 + 0x20]
	0x039026C8 LDR V5, [X10 + 0x28]
	0x039026CC LDP S6, S7, [X8 + 0x20]
	0x039026D0 LDR V16, [X8 + 0x28]
	0x039026D4 FSUB S17, S3, S0
	0x039026D8 FSUB S18, S4, S1
	0x039026DC FSUB S19, S5, S2
	0x039026E0 FSUB S20, S6, S0
	0x039026E4 FSUB S21, S7, S1
	0x039026E8 FSUB S22, S16, S2
	0x039026EC FMUL S23, S18, S22
	0x039026F0 FMUL S24, S19, S21
	0x039026F4 FMUL S19, S19, S20
	0x039026F8 FMUL S22, S17, S22
	0x039026FC FMUL S17, S17, S21
	0x03902700 FMUL S18, S18, S20
	0x03902704 LDP S20, S21, [X20 + 0xC]
	0x03902708 FSUB S13, S23, S24
	0x0390270C LDR V23, [X20 + 0x14]
	0x03902710 FSUB S14, S19, S22
	0x03902714 FSUB S15, S17, S18
	0x03902718 FMUL S17, S20, S13
	0x0390271C FMUL S18, S21, S14
	0x03902720 FMUL S19, S15, S23
	0x03902724 FADD S17, S17, S18
	0x03902728 CMP W22, 0x1
	0x0390272C FADD S17, S19, S17
	0x03902730 B.EQ 0x390274C
	0x03902734 CMP W22, 0x2
	0x03902738 B.NE 0x390275C
	0x0390273C FCMP S17, 0x0
	0x03902740 STR W31, [X31 + 0x11C]
	0x03902744 B.PL 0x3902760
	0x03902748 B 0x39027B4
	0x0390274C FCMP S17, 0x0
	0x03902750 STR W31, [X31 + 0x11C]
	0x03902754 B.LE 0x3902760
	0x03902758 B 0x39027B4
	0x0390275C STR W31, [X31 + 0x11C]
	0x03902760 LDR X8, [X20 + 0x10]
	0x03902764 LDR V17, [X20]
	0x03902768 ADD X0, X31, 0x30
	0x0390276C ADD X1, X31, 0x11C
	0x03902770 ADD X2, X31, 0x110
	0x03902774 STR X8, [X31 + 0x40]
	0x03902778 STR V17, [X31 + 0x3]
	0x0390277C STP S7, S16, [X31 + 0x4]
	0x03902780 STR S6, [X31]
	0x03902784 BL 0x39028A0
	0x03902788 LDR V0, [X31 + 0x11C]
	0x0390278C FCMP S0, S8
	0x03902790 B.GT 0x39027B4
	0x03902794 FCMP S0, S12
	0x03902798 B.GT 0x39027B4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xAE0000
	015 Move W8, [X19+1981]
	016 Move X24, X4
	017 Move X20, X3
	018 Move W21, W2
	019 Move X22, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x81A000
	026 Move X0, [X0+1536]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+1981], W8
	030 Move X0, [X23+96]
	031 Compare X0, 0
	032 JumpIfNotEqual {37}
	033 Move X0, X23
	034 Call Face.CacheEdges, X0
	035 Compare X0, 0
	036 JumpIfEqual {117}
	037 Move X8, [X0+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X31+8], X24
	040 Move X28, 0x81A000
	041 Move X28, [X28+1536]
	042 And X29, X8, 0
	043 Move X27, X31
	044 Add X26, X20, 4
	045 Move X19, W29
	046 Move W25, 1
	047 Move X0, [X23+96]
	048 Compare X0, 0
	049 JumpIfNotEqual {54}
	050 Move X0, X23
	051 Call Face.CacheEdges, X0
	052 Compare X0, 0
	053 JumpIfEqual {117}
	054 Move W8, [X0+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X28]
	057 Add X9, X0, X27
	058 Move X24, [X9+32]
	059 Move W10, [X8+224]
	060 Compare W10, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X24
	065 Move X1, X22
	066 Call Edge.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {92}
	071 Move X0, [X23+96]
	072 Compare X0, 0
	073 JumpIfNotEqual {78}
	074 Move X0, X23
	075 Call Face.CacheEdges, X0
	076 Compare X0, 0
	077 JumpIfEqual {117}
	078 Move W8, [X0+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X0, X27
	081 Move X8, [X8+32]
	082 Move [X20], X8
	083 Move X0, [X28]
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move W8, [X20]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X20+4]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X27, X27, 1
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W25, W31
	097 Move X26, X20
	098 Move W8, [X26]
	099 Move X9, [X31+8]
	100 Move [X9], W8
	101 And W0, W25, 1
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X28, [X31+32]
	111 Move X27, [X31+40]
	112 Move X29, [X31+16]
	113 Move X30, [X31+24]
	114 Add X31, X31, 112
	115 Return X0
	116 Call 0x1C17F28
	117 Call 0x1C17F20

