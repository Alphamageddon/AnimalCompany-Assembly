Type: UnityEngine.ProBuilder.TriggerBehaviour

Method: System.Void Initialize()

Disassembly:
	0x0393B788 MOVZ W8, 0x1
	0x0393B78C STRB W8, [X21 + 0x930]
	0x0393B790 CBZ X19, 0x393B7DC
	0x0393B794 ADRP X10, 0x7E0000
	0x0393B798 LDR X8, [X19]
	0x0393B79C LDR X10, [X10 + 0x7A0]
	0x0393B7A0 LDRH W9, [X8 + 0x12E]
	0x0393B7A4 LDR X1, [X10]
	0x0393B7A8 CBZ X9, 0x393B7CC
	0x0393B7AC LDR X10, [X8 + 0xB0]
	0x0393B7B0 ADD X10, X10, 0x8
	0x0393B7B4 LDUR X11, [X10 - 0x8]
	0x0393B7B8 CMP X11, X1
	0x0393B7BC B.EQ 0x393B828
	0x0393B7C0 SUBS X9, X9, 0x1
	0x0393B7C4 ADD X10, X10, 0x10
	0x0393B7C8 B.NE 0x393B7B4
	0x0393B7CC MOV X0, X19
	0x0393B7D0 MOV W2, W31
	0x0393B7D4 BL 0x1C5C788
	0x0393B7D8 B 0x393B834
	0x0393B7DC CBZ X20, 0x393BA10
	0x0393B7E0 ADRP X10, 0x812000
	0x0393B7E4 LDR X8, [X20]
	0x0393B7E8 LDR X10, [X10 + 0xA90]
	0x0393B7EC LDRH W9, [X8 + 0x12E]
	0x0393B7F0 LDR X1, [X10]
	0x0393B7F4 CBZ X9, 0x393B818
	0x0393B7F8 LDR X10, [X8 + 0xB0]
	0x0393B7FC ADD X10, X10, 0x8
	0x0393B800 LDUR X11, [X10 - 0x8]
	0x0393B804 CMP X11, X1
	0x0393B808 B.EQ 0x393B840
	0x0393B80C SUBS X9, X9, 0x1
	0x0393B810 ADD X10, X10, 0x10
	0x0393B814 B.NE 0x393B800
	0x0393B818 MOV X0, X20
	0x0393B81C MOV W2, W31
	0x0393B820 BL 0x1C5C788
	0x0393B824 B 0x393B84C
	0x0393B828 LDRSW X9, [X10]
	0x0393B82C ADD X8, X8, X9, 0x4, LSL
	0x0393B830 ADD X0, X8, 0x138
	0x0393B834 LDP X8, X1, [X0]
	0x0393B838 MOV X0, X19
	0x0393B83C B 0x393B854
	0x0393B840 LDRSW X9, [X10]
	0x0393B844 ADD X8, X8, X9, 0x4, LSL
	0x0393B848 ADD X0, X8, 0x138
	0x0393B84C LDP X8, X1, [X0]
	0x0393B850 MOV X0, X20
	0x0393B854 BLR X8
	0x0393B858 ADRP X24, 0x813000
	0x0393B85C LDR X24, [X24 + 0x590]
	0x0393B860 MOV W21, W0
	0x0393B864 LDR X0, [X24]
	0x0393B868 LDR W8, [X0 + 0xE0]
	0x0393B86C CBNZ W8, 0x393B874
	0x0393B870 BL 0x1C16DFC
	0x0393B874 MOV X0, X19
	0x0393B878 MOV W1, W31
	0x0393B87C BL 0x393B668
	0x0393B880 CBZ X20, 0x393BA10
	0x0393B884 ADRP X25, 0x812000
	0x0393B888 LDR X8, [X20]
	0x0393B88C LDR X25, [X25 + 0xA98]
	0x0393B890 MOV W22, W0
	0x0393B894 LDRH W9, [X8 + 0x12E]
	0x0393B898 LDR X1, [X25]
	0x0393B89C CBZ X9, 0x393B8C0
	0x0393B8A0 LDR X10, [X8 + 0xB0]
	0x0393B8A4 ADD X10, X10, 0x8
	0x0393B8A8 LDUR X11, [X10 - 0x8]
	0x0393B8AC CMP X11, X1
	0x0393B8B0 B.EQ 0x393B8D0
	0x0393B8B4 SUBS X9, X9, 0x1
	0x0393B8B8 ADD X10, X10, 0x10
	0x0393B8BC B.NE 0x393B8A8
	0x0393B8C0 MOV X0, X20
	0x0393B8C4 MOV W2, W31
	0x0393B8C8 BL 0x1C5C788
	0x0393B8CC B 0x393B8DC
	0x0393B8D0 LDRSW X9, [X10]
	0x0393B8D4 ADD X8, X8, X9, 0x4, LSL
	0x0393B8D8 ADD X0, X8, 0x138
	0x0393B8DC LDP X8, X2, [X0]
	0x0393B8E0 MOV X0, X20
	0x0393B8E4 MOV W1, W22
	0x0393B8E8 BLR X8
	0x0393B8EC MOV V2.16B, V10.16B
	0x0393B8F0 MOV V3.16B, V9.16B
	0x0393B8F4 MOV V4.16B, V8.16B
	0x0393B8F8 MOV X0, X31
	0x0393B8FC BL 0x3908120
	0x0393B900 MOV V11.16B, V0.16B
	0x0393B904 CMP W21, 0x2
	0x0393B908 MOV V12.16B, V1.16B
	0x0393B90C B.LT 0x393B9DC
	0x0393B910 MOVZ W22, 0x1
	0x0393B914 MOV V14.16B, V11.16B
	0x0393B918 MOV V13.16B, V12.16B
	0x0393B91C LDR X0, [X24]
	0x0393B920 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xAA7000
	007 Move W8, [X20+2342]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x813000
	014 Move X0, [X0+2760]
	015 Call 0x1C17CF4
	016 Move X0, 0x7BB000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0x813000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x814000
	023 Move X0, [X0+3744]
	024 Call 0x1C17CF4
	025 Move X0, 0x7B9000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2342], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Component.get_gameObject, X0
	033 Compare X0, 0
	034 JumpIfEqual {123}
	035 Move X8, 0x813000
	036 Move X8, [X8+3024]
	037 Move X22, 0x7B9000
	038 Move X1, [X8]
	039 Move X22, [X22+1432]
	040 Call 0x21E62E4, X0
	041 Move X8, [X22]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call Object.op_Implicit, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {65}
	055 Move X0, X19
	056 Move X1, X31
	057 Call Component.get_gameObject, X0
	058 Compare X0, 0
	059 JumpIfEqual {123}
	060 Move X8, 0x7BB000
	061 Move X8, [X8+352]
	062 Move X1, [X8]
	063 Call 0x21E61FC, X0
	064 Move X20, X0
	065 Compare X20, 0
	066 JumpIfEqual {74}
	067 Move X8, 0x814000
	068 Move X8, [X8+3744]
	069 Move X9, [X20]
	070 Move X8, [X8]
	071 Move W11, [X9+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X21, X31
	075 Move X9, [X9+200]
	076 Add X9, X9, X10
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Call Object.op_Implicit, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {98}
	092 Compare X21, 0
	093 JumpIfEqual {123}
	094 Move W1, 1
	095 Move X0, X21
	096 Move X2, X31
	097 Call MeshCollider.set_convex, X0, X1
	098 Compare X20, 0
	099 JumpIfEqual {123}
	100 Move X21, 0x813000
	101 Move X21, [X21+2760]
	102 Move W1, 1
	103 Move X0, X20
	104 Move X2, X31
	105 Call Collider.set_isTrigger, X0, X1
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X31
	112 Call BuiltinMaterials.get_triggerMaterial
	113 Move X1, X0
	114 Move X0, X19
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X22, [X31+16]
	118 Move X21, [X31+24]
	119 Move X2, X31
	120 Move X30, [X31+48]
	121 Call EntityBehaviour.SetMaterial, X0, X1
	122 Return 
	123 Call 0x1C17F20

Method: System.Void OnEnterPlayMode()

Disassembly:
	0x0393B924 CBNZ W8, 0x393B92C
	0x0393B928 BL 0x1C16DFC
	0x0393B92C MOV X0, X19
	0x0393B930 MOV W1, W22
	0x0393B934 BL 0x393B668
	0x0393B938 LDR X8, [X20]
	0x0393B93C LDR X1, [X25]
	0x0393B940 MOV W23, W0
	0x0393B944 LDRH W9, [X8 + 0x12E]
	0x0393B948 CBZ X9, 0x393B96C
	0x0393B94C LDR X10, [X8 + 0xB0]
	0x0393B950 ADD X10, X10, 0x8
	0x0393B954 LDUR X11, [X10 - 0x8]
	0x0393B958 CMP X11, X1
	0x0393B95C B.EQ 0x393B97C
	0x0393B960 SUBS X9, X9, 0x1
	0x0393B964 ADD X10, X10, 0x10
	0x0393B968 B.NE 0x393B954
	0x0393B96C MOV X0, X20
	0x0393B970 MOV W2, W31
	0x0393B974 BL 0x1C5C788
	0x0393B978 B 0x393B988
	0x0393B97C LDRSW X9, [X10]
	0x0393B980 ADD X8, X8, X9, 0x4, LSL
	0x0393B984 ADD X0, X8, 0x138
	0x0393B988 LDP X8, X2, [X0]
	0x0393B98C MOV X0, X20
	0x0393B990 MOV W1, W23
	0x0393B994 BLR X8
	0x0393B998 MOV V2.16B, V10.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA7000
	007 Move X20, 0x7BF000
	008 Move W8, [X21+2343]
	009 Move X20, [X20+1952]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7BF000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2343], W8
	020 Move X2, [X20]
	021 Add X1, X31, 8
	022 Move X0, X19
	023 Move [X31+8], X31
	024 Call 0x21A5990, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {35}
	029 Move X0, [X31+8]
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move W1, W31
	033 Move X2, X31
	034 Call Renderer.set_enabled, X0, X1
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 
	041 Call 0x1C17F20

Method: System.Void OnSceneLoaded(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)

Disassembly:
	0x0393B99C MOV V3.16B, V9.16B
	0x0393B9A0 MOV V4.16B, V8.16B
	0x0393B9A4 MOV X0, X31
	0x0393B9A8 BL 0x3908120
	0x0393B9AC FCMP S0, S11
	0x0393B9B0 FCSEL S11, S0, S11, MI
	0x0393B9B4 FCMP S0, S14
	0x0393B9B8 FCSEL S14, S0, S14, GT
	0x0393B9BC FCMP S1, S12
	0x0393B9C0 ADD W22, W22, 0x1
	0x0393B9C4 FCSEL S12, S1, S12, MI
	0x0393B9C8 FCMP S1, S13
	0x0393B9CC FCSEL S13, S1, S13, GT
	0x0393B9D0 CMP W22, W21
	0x0393B9D4 B.NE 0x393B91C
	0x0393B9D8 B 0x393B9E4
	0x0393B9DC MOV V13.16B, V12.16B
	0x0393B9E0 MOV V14.16B, V11.16B
	0x0393B9E4 FSUB S0, S14, S11
	0x0393B9E8 FSUB S1, S13, S12
	0x0393B9EC LDP X20, X19, [X31 + 0x70]
	0x0393B9F0 LDP X22, X21, [X31 + 0x60]
	0x0393B9F4 LDP X24, X23, [X31 + 0x50]
	0x0393B9F8 LDP X30, X25, [X31 + 0x40]
	0x0393B9FC LDP D9, D8, [X31 + 0x30]
	0x0393BA00 LDP D11, D10, [X31 + 0x20]
	0x0393BA04 LDP D13, D12, [X31 + 0x10]
	0x0393BA08 LDR V14, [X31], #0x80
	0x0393BA0C RET
	0x0393BA10 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAA7000
	007 Move X20, 0x7BF000
	008 Move W8, [X21+2344]
	009 Move X20, [X20+1952]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7BF000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2344], W8
	020 Move X2, [X20]
	021 Add X1, X31, 8
	022 Move X0, X19
	023 Move [X31+8], X31
	024 Call 0x21A5990, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {35}
	029 Move X0, [X31+8]
	030 Compare X0, 0
	031 JumpIfEqual {41}
	032 Move W1, W31
	033 Move X2, X31
	034 Call Renderer.set_enabled, X0, X1
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return 
	041 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0393BA14 SUB X31, X31, 0x70
	0x0393BA18 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move X1, X31
	002 Call EntityBehaviour..ctor, X0
	003 Return 

