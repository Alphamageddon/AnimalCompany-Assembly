Type: UnityEngine.ProBuilder.Shapes.Sprite

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x0394C4BC MOV W23, W24

ISIL:
	001 Return 

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x0394C4C0 ADD W29, W29, 0x7
	0x0394C4C4 ADD W19, W19, 0x7
	0x0394C4C8 LDR W8, [X31 + 0x8C]
	0x0394C4CC LDR W25, [X31 + 0x94]
	0x0394C4D0 MOVZ W22, 0xC
	0x0394C4D4 ADDS W31, W8, W25
	0x0394C4D8 B.NE 0x394C0B4
	0x0394C4DC LDR X25, [X31 + 0x60]
	0x0394C4E0 B 0x394C4EC
	0x0394C4E4 LDR W8, [X31 + 0x90]
	0x0394C4E8 ADD W23, W8, 0x1
	0x0394C4EC ADRP X8, 0x802000
	0x0394C4F0 LDR X8, [X8 + 0xBE0]
	0x0394C4F4 MOV X0, X25
	0x0394C4F8 MOV X1, X27
	0x0394C4FC LDR X2, [X8]
	0x0394C500 BL 0x217DF18
	0x0394C504 ADRP X8, 0x802000
	0x0394C508 LDR X8, [X8 + 0xBD8]
	0x0394C50C MOV X25, X0
	0x0394C510 LDR X0, [X31 + 0x50]
	0x0394C514 MOV X1, X28
	0x0394C518 LDR X2, [X8]
	0x0394C51C BL 0x217DE3C
	0x0394C520 LDR V0, [X31 + 0x44]
	0x0394C524 MOV X27, X0
	0x0394C528 CMP W23, 0x2
	0x0394C52C STR W23, [X31 + 0x90]
	0x0394C530 FADD S14, S0, S14
	0x0394C534 B.NE 0x394C048
	0x0394C538 LDR V0, [X31 + 0x88]
	0x0394C53C ADD X0, X31, 0x9C
	0x0394C540 ADD X1, X31, 0x98
	0x0394C544 BL 0x3EB1BC0
	0x0394C548 ADRP X8, 0x7A9000
	0x0394C54C LDP S9, S8, [X31 + 0x98]
	0x0394C550 LDR X8, [X8 + 0x9B0]
	0x0394C554 MOVZ W1, 0x4
	0x0394C558 LDR X0, [X8]
	0x0394C55C BL 0x1C16D6C
	0x0394C560 CBZ X0, 0x394C964
	0x0394C564 LDR W8, [X0 + 0x18]
	0x0394C568 LDR V5, [X31 + 0x7C]
	0x0394C56C LDR V4, [X31 + 0x6C]
	0x0394C570 MOV X1, X0
	0x0394C574 CBZ W8, 0x394C960
	0x0394C578 LDR V6, [X31 + 0x5C]
	0x0394C57C FNEG S1, S9
	0x0394C580 FMOV S2, W31
	0x0394C584 FMUL S0, S8, S4
	0x0394C588 CMP W8, 0x1
	0x0394C58C FMUL S3, S4, S1
	0x0394C590 FMUL S2, S4, S2
	0x0394C594 STP S3, S2, [X1 + 0x20]
	0x0394C598 STR S0, [X1 + 0x28]
	0x0394C59C B.EQ 0x394C960
	0x0394C5A0 FMUL S2, S6, S1
	0x0394C5A4 FMUL S1, S8, S6
	0x0394C5A8 LDP S9, S8, [X31 + 0x20]
	0x0394C5AC FMOV S4, W31
	0x0394C5B0 CMP W8, 0x2
	0x0394C5B4 FMUL S4, S6, S4
	0x0394C5B8 STP S2, S4, [X1 + 0x2C]
	0x0394C5BC STR S1, [X1 + 0x34]
	0x0394C5C0 B.LS 0x394C960
	0x0394C5C4 CMP W8, 0x3
	0x0394C5C8 STP S3, S5, [X1 + 0x38]
	0x0394C5CC STR S0, [X1 + 0x40]
	0x0394C5D0 B.EQ 0x394C960
	0x0394C5D4 STP S2, S5, [X1 + 0x44]
	0x0394C5D8 STR S1, [X1 + 0x4C]
	0x0394C5DC ADRP X8, 0x802000
	0x0394C5E0 LDR X8, [X8 + 0xBE0]
	0x0394C5E4 MOV X0, X25
	0x0394C5E8 LDR X2, [X8]
	0x0394C5EC BL 0x217DF18
	0x0394C5F0 ADRP X8, 0x7A8000
	0x0394C5F4 LDR X8, [X8 + 0xE58]
	0x0394C5F8 MOV X20, X0
	0x0394C5FC MOVZ W1, 0x6
	0x0394C600 LDR X8, [X8]
	0x0394C604 MOV X0, X8
	0x0394C608 BL 0x1C16D6C
	0x0394C60C CBZ X0, 0x394C964
	0x0394C610 LDR W8, [X0 + 0x18]
	0x0394C614 MOV X19, X0
	0x0394C618 CBZ W8, 0x394C960
	0x0394C61C ADD W10, W29, 0x2
	0x0394C620 CMP W8, 0x1
	0x0394C624 STR W10, [X19 + 0x20]
	0x0394C628 B.EQ 0x394C960
	0x0394C62C ADD W9, W29, 0x1
	0x0394C630 CMP W8, 0x2
	0x0394C634 STR W9, [X19 + 0x24]
	0x0394C638 B.LS 0x394C960
	0x0394C63C CMP W8, 0x3
	0x0394C640 STR W29, [X19 + 0x28]
	0x0394C644 B.EQ 0x394C960
	0x0394C648 CMP W8, 0x4
	0x0394C64C STR W10, [X19 + 0x2C]
	0x0394C650 B.LS 0x394C960
	0x0394C654 ADD W10, W29, 0x3
	0x0394C658 CMP W8, 0x5
	0x0394C65C STR W10, [X19 + 0x30]
	0x0394C660 B.EQ 0x394C960
	0x0394C664 STR W9, [X19 + 0x34]
	0x0394C668 ADRP X8, 0x802000
	0x0394C66C LDR X8, [X8 + 0x560]
	0x0394C670 LDR X0, [X8]
	0x0394C674 BL 0x1C16F10
	0x0394C678 MOV X1, X19
	0x0394C67C MOV X2, X31
	0x0394C680 MOV X25, X0
	0x0394C684 BL 0x3900368
	0x0394C688 ADRP X8, 0x802000
	0x0394C68C LDR X8, [X8 + 0xBD0]
	0x0394C690 MOV X0, X27
	0x0394C694 MOV X1, X25
	0x0394C698 LDR X2, [X8]
	0x0394C69C BL 0x217CD40
	0x0394C6A0 MOV X27, X0
	0x0394C6A4 MOV X25, X20
	0x0394C6A8 B 0x394C6B0
	0x0394C6AC LDP S9, S8, [X31 + 0x20]
	0x0394C6B0 LDR V0, [X31 + 0x28]
	0x0394C6B4 FCMP S0, 0x0
	0x0394C6B8 B.PL 0x394C734
	0x0394C6BC CBZ X25, 0x394C964
	0x0394C6C0 LDR W8, [X25 + 0x18]
	0x0394C6C4 UBFM X9, X8, 0x20, 0x1F
	0x0394C6C8 CMP X9, 0x1
	0x0394C6CC B.LT 0x394C6F4
	0x0394C6D0 SXTW X9, W8
	0x0394C6D4 ADD X10, X25, 0x20
	0x0394C6D8 CBZ X8, 0x394C960
	0x0394C6DC LDR V0, [X10]
	0x0394C6E0 SUB X9, X9, 0x1
	0x0394C6E4 SUB X8, X8, 0x1
	0x0394C6E8 FNEG S0, S0
	0x0394C6EC STR S0, [X10], #0xC
	0x0394C6F0 CBNZ X9, 0x394C6D8
	0x0394C6F4 CBZ X27, 0x394C964
	0x0394C6F8 LDR W8, [X27 + 0x18]
	0x0394C6FC CMP W8, 0x1
	0x0394C700 B.LT 0x394C734
	0x0394C704 MOV W19, W31
	0x0394C708 CMP W19, W8
	0x0394C70C B.CS 0x394C960
	0x0394C710 ADD X8, X27, W19, 0x3, SXTW
	0x0394C714 LDR X0, [X8 + 0x20]
	0x0394C718 CBZ X0, 0x394C964
	0x0394C71C MOV X1, X31
	0x0394C720 BL 0x3900E24
	0x0394C724 LDR W8, [X27 + 0x18]
	0x0394C728 ADD W19, W19, 0x1
	0x0394C72C CMP W19, W8
	0x0394C730 B.LT 0x394C708
	0x0394C734 LDP S0, S1, [X31 + 0x2C]
	0x0394C738 LDR V2, [X31 + 0x34]
	0x0394C73C MOV X0, X31
	0x0394C740 BL 0x390B3D8
	0x0394C744 CBZ X25, 0x394C964
	0x0394C748 LDR X8, [X25 + 0x18]
	0x0394C74C MOV V12.16B, V0.16B
	0x0394C750 MOV V13.16B, V1.16B
	0x0394C754 MOV V14.16B, V2.16B
	0x0394C758 CMP W8, 0x1
	0x0394C75C B.LT 0x394C7BC
	0x0394C760 MOV X19, X31
	0x0394C764 AND X8, X8, 0x0
	0x0394C768 ADD X20, X25, 0x28
	0x0394C76C CMP X19, W8, UXTW
	0x0394C770 B.CS 0x394C960
	0x0394C774 LDP S4, S5, [X20 - 0x8]
	0x0394C778 LDR V6, [X20]
	0x0394C77C LDP S0, S1, [X31 + 0x48]
	0x0394C780 MOV V2.16B, V9.16B
	0x0394C784 MOV V3.16B, V8.16B
	0x0394C788 MOV X0, X31
	0x0394C78C BL 0x3C2A9FC
	0x0394C790 LDR W8, [X25 + 0x18]
	0x0394C794 CMP X19, X8
	0x0394C798 B.CS 0x394C960
	0x0394C79C FMUL S0, S12, S0
	0x0394C7A0 FMUL S1, S13, S1
	0x0394C7A4 FMUL S2, S14, S2
	0x0394C7A8 ADD X19, X19, 0x1
	0x0394C7AC STP S0, S1, [X20 - 0x8]
	0x0394C7B0 STR S2, [X20], #0xC
	0x0394C7B4 CMP X19, W8, SXTW
	0x0394C7B8 B.LT 0x394C76C
	0x0394C7BC LDR X20, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X30
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X21, 0xA96000
	014 Move W9, [X21+2438]
	015 Move V8, V2
	016 Move V9, V1
	017 Move V10, V0
	018 Move X20, X1
	019 Move X19, X8
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x803000
	025 Move X0, [X0+1008]
	026 Call 0x1C17CF4
	027 Move X0, 0x803000
	028 Move X0, [X0+1376]
	029 Call 0x1C17CF4
	030 Move X0, 0x7A9000
	031 Move X0, [X0+3672]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A8000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x804000
	037 Move X0, [X0+336]
	038 Call 0x1C17CF4
	039 Move X0, 0x802000
	040 Move X0, [X0+2696]
	041 Call 0x1C17CF4
	042 Move X0, 0x7AA000
	043 Move X0, [X0+2480]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2438], W8
	047 Move V0, V10
	048 Move V1, V9
	049 Move V2, V8
	050 Move X0, X31
	051 Call Math.Abs, X0
	052 Move W8, 1
	053 Move V9, V0
	054 Move S0, W8
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move W8, 1
	057 Move S0, W8
	058 Move V8, V2
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X8, 0x802000
	061 Move X8, [X8+2696]
	062 Move W1, 4
	063 Move X0, [X8]
	064 Call 0x1C17D6C
	065 Move X8, 0x7AA000
	066 Move X8, [X8+2480]
	067 Move X21, X0
	068 Move W1, 4
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call 0x1C17D6C
	072 Move X8, 0x803000
	073 Move X8, [X8+1008]
	074 Move X22, X0
	075 Move W1, 1
	076 Move X8, [X8]
	077 Move X0, X8
	078 Call 0x1C17D6C
	079 Compare X21, 0
	080 JumpIfEqual {216}
	081 Move W8, [X21+24]
	082 Compare W8, 0
	083 JumpIfEqual {215}
	084 Move S0, 0.5
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction FNMUL not yet implemented."
	087 NotImplemented "Instruction FNMUL not yet implemented."
	088 Move [X21+32], S2
	089 Move [X21+40], S3
	090 Multiply S1, S9, S0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X21+40], S1
	093 Move [X21+48], S3
	094 Multiply S0, S8, S0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X21+48], S2
	097 Move [X21+56], S0
	098 Move [X21+56], S1
	099 Move [X21+64], S0
	100 Move X8, 0x7A9000
	101 Move X8, [X8+3672]
	102 Move X23, X0
	103 Move W1, 6
	104 Move X0, [X8]
	105 Call 0x1C17D6C
	106 Move X8, 0x804000
	107 Move X8, [X8+336]
	108 Move X2, X31
	109 Move X25, X0
	110 Move X1, [X8]
	111 Call RuntimeHelpers.InitializeArray, X0, X1
	112 Move X8, 0x803000
	113 Move X8, [X8+1376]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X1, X25
	117 Move X2, X31
	118 Move X24, X0
	119 Call Face..ctor, X0, X1
	120 Compare X23, 0
	121 JumpIfEqual {216}
	122 Move W8, [X23+24]
	123 Compare W8, 0
	124 JumpIfEqual {215}
	125 Move [X23+32], X24
	126 Compare X22, 0
	127 JumpIfEqual {216}
	128 Move W8, [X22+24]
	129 Move X9, X8
	130 ShiftRight X9, 32
	131 And X9, X9, 0x7FFFFFFF
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X9, X31
	134 Move X10, W8
	135 Add X11, X21, 36
	136 Add X12, X22, 40
	137 Move W13, [X21+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move S0, [X11-4]
	141 Move S1, [X11]
	142 Add X9, X9, 1
	143 Move [X12-4], W31
	144 Add X11, X11, 8
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move [X12-8], S1
	147 Move [X12+12], S0
	148 Compare X20, 0
	149 JumpIfEqual {216}
	150 Move X0, X20
	151 Move X1, X22
	152 Move X2, X23
	153 Move X3, X31
	154 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	155 Move X0, X20
	156 Move X1, X31
	157 Call ProBuilderMesh.get_mesh, X0
	158 Compare X0, 0
	159 JumpIfEqual {216}
	160 Add X8, X31, 8
	161 Move X1, X31
	162 Call Mesh.get_bounds, X0
	163 Move X8, [X31+24]
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 Move [X19+16], X8
	166 Move [X19], V0
	167 Compare X20, 0
	168 JumpIfEqual {216}
	169 Move X0, X20
	170 Move X1, X31
	171 Call ProBuilderMesh.Clear, X0
	172 Move X0, X20
	173 Move X1, X31
	174 Call ProBuilderMesh.get_mesh, X0
	175 Move X8, 0x7A8000
	176 Move X8, [X8+1432]
	177 Move X21, X0
	178 Move X8, [X8]
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X0, X21
	185 Move X1, X31
	186 Move X2, X31
	187 Call Object.op_Inequality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {199}
	192 Move X0, X20
	193 Move X1, X31
	194 Call ProBuilderMesh.get_mesh, X0
	195 Compare X0, 0
	196 JumpIfEqual {216}
	197 Move X1, X31
	198 Call Mesh.Clear, X0
	199 Move [X19], X31
	200 Move [X19+8], X31
	201 Move [X19+16], X31
	202 Move X20, [X31+112]
	203 Move X19, [X31+120]
	204 Move X22, [X31+96]
	205 Move X21, [X31+104]
	206 Move X24, [X31+80]
	207 Move X23, [X31+88]
	208 Move X30, [X31+64]
	209 Move X25, [X31+72]
	210 Move D9, [X31+48]
	211 Move D8, [X31+56]
	212 Move V10, [X31+32]
	213 Add X31, X31, 128
	214 Return X0
	215 Call 0x1C17F28
	216 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0394C7C0 FMUL S0, S12, S13
	0x0394C7C4 FMUL S0, S14, S0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

