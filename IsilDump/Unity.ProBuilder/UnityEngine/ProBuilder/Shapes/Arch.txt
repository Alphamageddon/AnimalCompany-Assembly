Type: UnityEngine.ProBuilder.Shapes.Arch

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x039448F0 ADRP X0, 0x80A000
	0x039448F4 LDR X0, [X0 + 0x5B8]
	0x039448F8 BL 0x1C16CF4
	0x039448FC ADRP X0, 0x80A000
	0x03944900 LDR X0, [X0 + 0x590]
	0x03944904 BL 0x1C16CF4
	0x03944908 ADRP X0, 0x7B1000
	0x0394490C LDR X0, [X0 + 0x9B0]
	0x03944910 BL 0x1C16CF4
	0x03944914 MOVZ W8, 0x1
	0x03944918 STRB W8, [X20 + 0x96D]
	0x0394491C ADRP X20, 0x7B1000
	0x03944920 LDR X20, [X20 + 0x9B0]
	0x03944924 LDP S1, S2, [X31 + 0x20]
	0x03944928 MOV V0.16B, V14.16B
	0x0394492C MOV X0, X31
	0x03944930 STP X31, X31, [X31 + 0x60]
	0x03944934 STR X31, [X31 + 0x70]
	0x03944938 BL 0x390B3C8
	0x0394493C LDR X0, [X19]
	0x03944940 MOV V12.16B, V0.16B
	0x03944944 MOV V13.16B, V2.16B
	0x03944948 STR D1, [X31 + 0x30]
	0x0394494C LDR W8, [X0 + 0xE0]
	0x03944950 CBNZ W8, 0x3944958
	0x03944954 BL 0x1C16DFC
	0x03944958 MOV V0.16B, V12.16B
	0x0394495C MOV V1.16B, V13.16B
	0x03944960 MOV X0, X31
	0x03944964 BL 0x337EEBC
	0x03944968 LDR X8, [X31 + 0x40]
	0x0394496C STR S0, [X8 + 0x14]
	0x03944970 LDR W22, [X8 + 0x10]
	0x03944974 LDR X0, [X20]
	0x03944978 MOV W1, W22
	0x0394497C BL 0x1C16D6C
	0x03944980 CMP W22, 0x1
	0x03944984 MOV X25, X0
	0x03944988 B.LT 0x3944A20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA9E000
	006 Move W8, [X21+2409]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x80C000
	014 Move X0, [X0+224]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2409], W8
	018 Compare X19, 0
	019 JumpIfEqual {41}
	020 Move X8, 0x80C000
	021 Move X8, [X8+224]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move V0, [X19+16]
	032 Move [X20+16], S0
	033 Move W8, [X19+20]
	034 Move [X20+20], W8
	035 Move V0, [X19+24]
	036 Move [X20+24], S0
	037 Move W8, [X19+28]
	038 Move [X20+28], W8
	039 Move W8, [X19+29]
	040 Move [X20+29], W8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 

Method: UnityEngine.Vector3[] GetFace(UnityEngine.Vector2 vertex1, UnityEngine.Vector2 vertex2, System.Single depth)

Disassembly:
	0x0394498C MOVZ W8, 0x43B40000
	0x03944990 SCVTF S0, W22
	0x03944994 ADRP X23, 0x7B7000
	0x03944998 FMOV S2, W8
	0x0394499C LDR X23, [X23 + 0xF08]
	0x039449A0 FDIV S13, S2, S0
	0x039449A4 LDR V0, [X31 + 0x3]
	0x039449A8 FMOV S1, -0.5
	0x039449AC MOV X19, X31
	0x039449B0 ADD X20, X25, 0x28
	0x039449B4 ADRP X21, 0xA95000
	0x039449B8 FMUL S15, S0, S1
	0x039449BC MOVZ W24, 0x1
	0x039449C0 LDR X9, [X31 + 0x40]
	0x039449C4 LDRB W8, [X21 + 0x78F]
	0x039449C8 LDR V12, [X9 + 0x14]
	0x039449CC CBNZ W8, 0x39449DC
	0x039449D0 MOV X0, X23
	0x039449D4 BL 0x1C16CF4
	0x039449D8 STRB W24, [X21 + 0x78F]
	0x039449DC LDR X8, [X23]
	0x039449E0 SCVTF S0, W19
	0x039449E4 FMUL S1, S13, S0
	0x039449E8 MOV V0.16B, V12.16B
	0x039449EC LDR X8, [X8 + 0xB8]
	0x039449F0 MOV X0, X31
	0x039449F4 LDP S2, S3, [X8]
	0x039449F8 BL 0x3907ACC
	0x039449FC CBZ X25, 0x3945378
	0x03944A00 LDR W8, [X25 + 0x18]
	0x03944A04 CMP X19, X8
	0x03944A08 B.CS 0x394537C
	0x03944A0C ADD X19, X19, 0x1
	0x03944A10 STP S0, S15, [X20 - 0x8]
	0x03944A14 STR S1, [X20], #0xC
	0x03944A18 CMP X22, X19
	0x03944A1C B.NE 0x39449C0
	0x03944A20 STP X26, X27, [X31 + 0x8]
	0x03944A24 ADRP X8, 0x7B3000
	0x03944A28 LDR X8, [X8 + 0x3C0]
	0x03944A2C ADRP X19, 0x7DB000
	0x03944A30 LDR X19, [X19 + 0x5B8]
	0x03944A34 ADRP X21, 0x809000
	0x03944A38 LDR X0, [X8]
	0x03944A3C ADRP X20, 0x80A000
	0x03944A40 LDR X21, [X21 + 0xDF0]
	0x03944A44 LDR X20, [X20 + 0xA38]
	0x03944A48 MOV W8, W22
	0x03944A4C SXTW X8, W8

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xA9E000
	010 Move X20, 0x7B2000
	011 Move W8, [X19+2410]
	012 Move X20, [X20+2480]
	013 Move V10, V4
	014 Move V8, V3
	015 Move V9, V2
	016 Move V11, V1
	017 Move V12, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x7B2000
	023 Move X0, [X0+2480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2410], W8
	027 Move X0, [X20]
	028 Move W1, 4
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {61}
	032 Move W8, [X0+24]
	033 Compare W8, 0
	034 JumpIfEqual {60}
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X0+32], S12
	037 Move [X0+40], S11
	038 Move [X0+40], S10
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X0+44], S9
	041 Move [X0+52], S8
	042 Move [X0+52], S10
	043 NotImplemented "Instruction FNEG not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X0+56], S12
	046 Move [X0+64], S11
	047 Move [X0+64], S0
	048 Move [X0+68], S9
	049 Move [X0+76], S8
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X30, [X31+40]
	053 Move D9, [X31+24]
	054 Move D8, [X31+32]
	055 Move D11, [X31+8]
	056 Move D10, [X31+16]
	057 Move [X0+76], S0
	058 Move V12, [X31+64]
	059 Return X0
	060 Call 0x1C17F28
	061 Call 0x1C17F20

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x03944A50 STR X8, [X31 + 0x18]
	0x03944A54 BL 0x1C16F10
	0x03944A58 LDR X1, [X19]
	0x03944A5C MOV X23, X0
	0x03944A60 BL 0x30CB97C
	0x03944A64 LDR X0, [X21]
	0x03944A68 BL 0x1C16F10
	0x03944A6C LDR X1, [X20]
	0x03944A70 MOV X24, X0
	0x03944A74 BL 0x301B7C4
	0x03944A78 CMP W22, 0x1
	0x03944A7C B.LT 0x3944E30
	0x03944A80 CBZ X25, 0x3945378
	0x03944A84 ADRP X27, 0x7B3000
	0x03944A88 ADD X8, X25, 0x20
	0x03944A8C LDR X27, [X27 + 0x3B8]
	0x03944A90 STR X8, [X31 + 0x28]
	0x03944A94 LDR X8, [X31 + 0x18]
	0x03944A98 LDR V0, [X31 + 0x3]
	0x03944A9C MOV X19, X31
	0x03944AA0 ADD X26, X25, 0x24
	0x03944AA4 ADD X28, X25, 0x28
	0x03944AA8 SUB X20, X8, 0x1
	0x03944AAC AND X22, X8, 0x0
	0x03944AB0 UNIMPLEMENTED
	0x03944AB4 ADD X21, X25, 0x34
	0x03944AB8 MOVZ W29, 0xC
	0x03944ABC MOVI V13.2S, 0x3F, 0x18
	0x03944AC0 FMOV S15, 0.5
	0x03944AC4 LDR W8, [X25 + 0x18]
	0x03944AC8 CMP X19, X8
	0x03944ACC B.CS 0x394537C
	0x03944AD0 CBZ X23, 0x3945378
	0x03944AD4 LDR W10, [X23 + 0x1C]
	0x03944AD8 LDP S0, S1, [X21 - 0x14]
	0x03944ADC LDUR V2, [X21 - 0xC]
	0x03944AE0 LDR X9, [X23 + 0x10]
	0x03944AE4 LDR X8, [X27]
	0x03944AE8 ADD W10, W10, 0x1
	0x03944AEC STR W10, [X23 + 0x1C]
	0x03944AF0 CBZ X9, 0x3945378
	0x03944AF4 LDRSW X10, [X23 + 0x18]
	0x03944AF8 LDR W11, [X9 + 0x18]
	0x03944AFC CMP W10, W11
	0x03944B00 B.CS 0x3944B1C
	0x03944B04 ADD W8, W10, 0x1
	0x03944B08 MADD X9, X10, X29, X9
	0x03944B0C STR W8, [X23 + 0x18]
	0x03944B10 STP S0, S1, [X9 + 0x20]
	0x03944B14 STR S2, [X9 + 0x28]
	0x03944B18 B 0x3944B30
	0x03944B1C LDR X8, [X8 + 0x20]
	0x03944B20 MOV X0, X23
	0x03944B24 LDR X8, [X8 + 0xC0]
	0x03944B28 LDR X1, [X8 + 0x70]
	0x03944B2C BL 0x30CC1B4
	0x03944B30 CMP X19, X20
	0x03944B34 B.GE 0x3944B58
	0x03944B38 LDR W8, [X25 + 0x18]
	0x03944B3C ADD X9, X19, 0x1
	0x03944B40 CMP X9, X8
	0x03944B44 B.CS 0x394537C
	0x03944B48 SUB X8, X21, 0x8
	0x03944B4C SUB X9, X21, 0x4
	0x03944B50 MOV X10, X21
	0x03944B54 B 0x3944B6C
	0x03944B58 LDR W8, [X25 + 0x18]
	0x03944B5C CBZ W8, 0x394537C
	0x03944B60 LDR X8, [X31 + 0x28]
	0x03944B64 MOV X9, X26
	0x03944B68 MOV X10, X28
	0x03944B6C LDR V1, [X9]
	0x03944B70 LDR W9, [X23 + 0x1C]
	0x03944B74 LDR V2, [X10]
	0x03944B78 LDR V0, [X8]
	0x03944B7C LDR X8, [X23 + 0x10]
	0x03944B80 LDR X10, [X27]
	0x03944B84 ADD W9, W9, 0x1
	0x03944B88 STR W9, [X23 + 0x1C]
	0x03944B8C CBZ X8, 0x3945378
	0x03944B90 LDRSW X9, [X23 + 0x18]
	0x03944B94 LDR W11, [X8 + 0x18]
	0x03944B98 CMP W9, W11
	0x03944B9C B.CS 0x3944BB8
	0x03944BA0 ADD W10, W9, 0x1
	0x03944BA4 MADD X8, X9, X29, X8
	0x03944BA8 STR W10, [X23 + 0x18]
	0x03944BAC STP S0, S1, [X8 + 0x20]
	0x03944BB0 STR S2, [X8 + 0x28]
	0x03944BB4 B 0x3944BCC
	0x03944BB8 LDR X8, [X10 + 0x20]
	0x03944BBC MOV X0, X23
	0x03944BC0 LDR X8, [X8 + 0xC0]
	0x03944BC4 LDR X1, [X8 + 0x70]
	0x03944BC8 BL 0x30CC1B4
	0x03944BCC ADRP X8, 0xA94000
	0x03944BD0 LDRB W8, [X8 + 0x786]
	0x03944BD4 CBNZ W8, 0x3944BF0
	0x03944BD8 ADRP X0, 0x7AF000
	0x03944BDC LDR X0, [X0 + 0x5A0]
	0x03944BE0 BL 0x1C16CF4
	0x03944BE4 ADRP X8, 0xA94000
	0x03944BE8 MOVZ W9, 0x1
	0x03944BEC STRB W9, [X8 + 0x786]
	0x03944BF0 ADRP X8, 0x7AF000
	0x03944BF4 LDR X8, [X8 + 0x5A0]
	0x03944BF8 LDR W10, [X23 + 0x1C]
	0x03944BFC LDR X8, [X8]
	0x03944C00 ADD W10, W10, 0x1
	0x03944C04 LDR X9, [X8 + 0xB8]
	0x03944C08 LDR X8, [X23 + 0x10]
	0x03944C0C LDR V0, [X9 + 0x18]
	0x03944C10 LDR V1, [X9 + 0x20]
	0x03944C14 LDR X9, [X27]
	0x03944C18 STR W10, [X23 + 0x1C]
	0x03944C1C CBZ X8, 0x3945378
	0x03944C20 LDR V2, [X31 + 0x3]
	0x03944C24 LDRSW X10, [X23 + 0x18]
	0x03944C28 LDR W11, [X8 + 0x18]
	0x00000000 INVALID
	0x03944C30 FMUL S1, S2, S1
	0x00000000 INVALID
	0x03944C38 CMP W10, W11
	0x03944C3C FMUL S2, S1, S15
	0x03944C40 B.CS 0x3944C5C
	0x03944C44 ADD W9, W10, 0x1
	0x03944C48 MADD X8, X10, X29, X8
	0x03944C4C STR W9, [X23 + 0x18]
	0x03944C50 STR D0, [X8 + 0x20]
	0x03944C54 STR S2, [X8 + 0x28]
	0x03944C58 B 0x3944C74
	0x03944C5C LDR X8, [X9 + 0x20]
	0x03944C60 MOV S1, V0.S[1]
	0x03944C64 MOV X0, X23
	0x03944C68 LDR X8, [X8 + 0xC0]
	0x03944C6C LDR X1, [X8 + 0x70]
	0x03944C70 BL 0x30CC1B4
	0x03944C74 LDR W8, [X25 + 0x18]
	0x03944C78 CMP X19, X8
	0x03944C7C B.CS 0x394537C
	0x03944C80 LDR W9, [X23 + 0x1C]
	0x03944C84 LDP S0, S1, [X21 - 0x14]
	0x03944C88 LDUR V2, [X21 - 0xC]
	0x03944C8C LDR X8, [X23 + 0x10]
	0x03944C90 LDR X10, [X27]
	0x03944C94 ADD W9, W9, 0x1
	0x03944C98 STR W9, [X23 + 0x1C]
	0x03944C9C CBZ X8, 0x3945378
	0x03944CA0 LDRSW X9, [X23 + 0x18]
	0x03944CA4 LDR W11, [X8 + 0x18]
	0x03944CA8 CMP W9, W11
	0x03944CAC B.CS 0x3944CC8
	0x03944CB0 ADD W10, W9, 0x1
	0x03944CB4 MADD X8, X9, X29, X8
	0x03944CB8 STR W10, [X23 + 0x18]
	0x03944CBC STP S0, S1, [X8 + 0x20]
	0x03944CC0 STR S2, [X8 + 0x28]
	0x03944CC4 B 0x3944CDC
	0x03944CC8 LDR X8, [X10 + 0x20]
	0x03944CCC MOV X0, X23
	0x03944CD0 LDR X8, [X8 + 0xC0]
	0x03944CD4 LDR X1, [X8 + 0x70]
	0x03944CD8 BL 0x30CC1B4
	0x03944CDC CMP X19, X20
	0x03944CE0 B.GE 0x3944D04
	0x03944CE4 LDR W8, [X25 + 0x18]
	0x03944CE8 ADD X9, X19, 0x1
	0x03944CEC CMP X9, X8
	0x03944CF0 B.CS 0x394537C
	0x03944CF4 SUB X8, X21, 0x8
	0x03944CF8 SUB X9, X21, 0x4
	0x03944CFC MOV X10, X21
	0x03944D00 B 0x3944D18
	0x03944D04 LDR W8, [X25 + 0x18]
	0x03944D08 CBZ W8, 0x394537C
	0x03944D0C LDR X8, [X31 + 0x28]
	0x03944D10 MOV X9, X26
	0x03944D14 MOV X10, X28
	0x03944D18 LDR V1, [X9]
	0x03944D1C LDR W9, [X23 + 0x1C]
	0x03944D20 LDR V2, [X10]
	0x03944D24 LDR V0, [X8]
	0x03944D28 LDR X8, [X23 + 0x10]
	0x03944D2C LDR X10, [X27]
	0x03944D30 ADD W9, W9, 0x1
	0x03944D34 STR W9, [X23 + 0x1C]
	0x03944D38 CBZ X8, 0x3945378
	0x03944D3C LDRSW X9, [X23 + 0x18]
	0x03944D40 LDR W11, [X8 + 0x18]
	0x03944D44 CMP W9, W11
	0x03944D48 B.CS 0x3944D64
	0x03944D4C ADD W10, W9, 0x1
	0x03944D50 MADD X8, X9, X29, X8
	0x03944D54 STR W10, [X23 + 0x18]
	0x03944D58 STP S0, S1, [X8 + 0x20]
	0x03944D5C STR S2, [X8 + 0x28]
	0x03944D60 B 0x3944D78
	0x03944D64 LDR X8, [X10 + 0x20]
	0x03944D68 MOV X0, X23
	0x03944D6C LDR X8, [X8 + 0xC0]
	0x03944D70 LDR X1, [X8 + 0x70]
	0x03944D74 BL 0x30CC1B4
	0x03944D78 ADRP X8, 0xA94000
	0x03944D7C LDRB W8, [X8 + 0xABD]
	0x03944D80 CBNZ W8, 0x3944D9C
	0x03944D84 ADRP X0, 0x7AF000
	0x03944D88 LDR X0, [X0 + 0x5A0]
	0x03944D8C BL 0x1C16CF4
	0x03944D90 MOVZ W8, 0x1
	0x03944D94 ADRP X9, 0xA94000
	0x03944D98 STRB W8, [X9 + 0xABD]
	0x03944D9C ADRP X8, 0x7AF000
	0x03944DA0 LDR X8, [X8 + 0x5A0]
	0x03944DA4 LDR W10, [X23 + 0x1C]
	0x03944DA8 LDR X8, [X8]
	0x03944DAC ADD W10, W10, 0x1
	0x03944DB0 LDR X9, [X8 + 0xB8]
	0x03944DB4 LDR X8, [X23 + 0x10]
	0x03944DB8 LDUR V0, [X9 + 0x24]
	0x03944DBC LDR V1, [X9 + 0x2C]
	0x03944DC0 LDR X9, [X27]
	0x03944DC4 STR W10, [X23 + 0x1C]
	0x03944DC8 CBZ X8, 0x3945378
	0x03944DCC LDR V2, [X31 + 0x3]
	0x03944DD0 LDRSW X10, [X23 + 0x18]
	0x03944DD4 LDR W11, [X8 + 0x18]
	0x00000000 INVALID
	0x03944DDC FMUL S1, S2, S1
	0x00000000 INVALID
	0x03944DE4 CMP W10, W11
	0x03944DE8 FMUL S2, S1, S15
	0x03944DEC B.CS 0x3944E08
	0x03944DF0 ADD W9, W10, 0x1
	0x03944DF4 MADD X8, X10, X29, X8
	0x03944DF8 STR W9, [X23 + 0x18]
	0x03944DFC STR D0, [X8 + 0x20]
	0x03944E00 STR S2, [X8 + 0x28]
	0x03944E04 B 0x3944E20
	0x03944E08 LDR X8, [X9 + 0x20]
	0x03944E0C MOV S1, V0.S[1]
	0x03944E10 MOV X0, X23
	0x03944E14 LDR X8, [X8 + 0xC0]
	0x03944E18 LDR X1, [X8 + 0x70]
	0x03944E1C BL 0x30CC1B4
	0x03944E20 ADD X19, X19, 0x1
	0x03944E24 CMP X22, X19
	0x03944E28 ADD X21, X21, 0xC
	0x03944E2C B.NE 0x3944AC4
	0x03944E30 ADRP X8, 0x809000
	0x03944E34 LDR X8, [X8 + 0xDF0]
	0x03944E38 LDR X0, [X8]
	0x03944E3C BL 0x1C16F10
	0x03944E40 ADRP X8, 0x80A000
	0x03944E44 LDR X8, [X8 + 0xA38]
	0x03944E48 MOV X25, X0
	0x03944E4C LDR X1, [X8]
	0x03944E50 BL 0x301B7C4
	0x03944E54 LDR X8, [X31 + 0x18]
	0x03944E58 ADD W8, W8, W8, 0x1, LSL
	0x03944E5C UBFM W19, W8, 0x1F, 0x1E
	0x03944E60 CMP W19, 0x1
	0x03944E64 B.LT 0x394505C
	0x03944E68 ADRP X20, 0x7B0000
	0x03944E6C ADRP X21, 0x80A000
	0x03944E70 ADRP X22, 0x809000
	0x03944E74 LDR X20, [X20 + 0xE58]
	0x03944E78 LDR X21, [X21 + 0x560]
	0x03944E7C LDR X22, [X22 + 0xE10]
	0x03944E80 MOVZ W28, 0x2
	0x03944E84 LDR X0, [X20]
	0x03944E88 MOVZ W1, 0x3
	0x03944E8C BL 0x1C16D6C
	0x03944E90 CBZ X0, 0x3945378
	0x03944E94 LDR W8, [X0 + 0x18]
	0x03944E98 MOV X27, X0
	0x03944E9C CBZ W8, 0x394537C
	0x03944EA0 CMP W8, 0x1
	0x03944EA4 STR W28, [X27 + 0x20]
	0x03944EA8 B.EQ 0x394537C
	0x03944EAC SUB W9, W28, 0x1
	0x03944EB0 CMP W8, 0x2
	0x03944EB4 STR W9, [X27 + 0x24]
	0x03944EB8 B.LS 0x394537C
	0x03944EBC SUB W8, W28, 0x2
	0x03944EC0 STR W8, [X27 + 0x28]
	0x03944EC4 LDR X0, [X21]
	0x03944EC8 BL 0x1C16F10
	0x03944ECC MOV X1, X27
	0x03944ED0 MOV X2, X31
	0x03944ED4 MOV X26, X0
	0x03944ED8 BL 0x3900368
	0x03944EDC CBZ X26, 0x3945378
	0x03944EE0 LDR X8, [X31 + 0x40]
	0x03944EE4 LDRB W8, [X8 + 0x18]
	0x03944EE8 STR W8, [X26 + 0x18]
	0x03944EEC CBZ X24, 0x3945378
	0x03944EF0 LDR W10, [X24 + 0x1C]
	0x03944EF4 LDR X8, [X24 + 0x10]
	0x03944EF8 LDR X9, [X22]
	0x03944EFC ADD W10, W10, 0x1
	0x03944F00 STR W10, [X24 + 0x1C]
	0x03944F04 CBZ X8, 0x3945378
	0x03944F08 LDRSW X10, [X24 + 0x18]
	0x03944F0C LDR W11, [X8 + 0x18]
	0x03944F10 CMP W10, W11
	0x03944F14 B.CS 0x3944F2C
	0x03944F18 ADD W9, W10, 0x1
	0x03944F1C ADD X8, X8, X10, 0x3, LSL
	0x03944F20 STR W9, [X24 + 0x18]
	0x03944F24 STR X26, [X8 + 0x20]
	0x03944F28 B 0x3944F44
	0x03944F2C LDR X8, [X9 + 0x20]
	0x03944F30 MOV X0, X24
	0x03944F34 MOV X1, X26
	0x03944F38 LDR X8, [X8 + 0xC0]
	0x03944F3C LDR X2, [X8 + 0x70]
	0x03944F40 BL 0x301BF90
	0x03944F44 CBZ X25, 0x3945378
	0x03944F48 LDR W10, [X25 + 0x1C]
	0x03944F4C LDR X8, [X25 + 0x10]
	0x03944F50 LDR X9, [X22]
	0x03944F54 ADD W10, W10, 0x1
	0x03944F58 STR W10, [X25 + 0x1C]
	0x03944F5C CBZ X8, 0x3945378
	0x03944F60 LDRSW X10, [X25 + 0x18]
	0x03944F64 LDR W11, [X8 + 0x18]
	0x03944F68 CMP W10, W11
	0x03944F6C B.CS 0x3944F84
	0x03944F70 ADD W9, W10, 0x1
	0x03944F74 ADD X8, X8, X10, 0x3, LSL
	0x03944F78 STR W9, [X25 + 0x18]
	0x03944F7C STR X26, [X8 + 0x20]
	0x03944F80 B 0x3944F9C
	0x03944F84 LDR X8, [X9 + 0x20]
	0x03944F88 MOV X0, X25
	0x03944F8C MOV X1, X26
	0x03944F90 LDR X8, [X8 + 0xC0]
	0x03944F94 LDR X2, [X8 + 0x70]
	0x03944F98 BL 0x301BF90
	0x03944F9C LDR X0, [X20]
	0x03944FA0 MOVZ W1, 0x3
	0x03944FA4 BL 0x1C16D6C
	0x03944FA8 CBZ X0, 0x3945378
	0x03944FAC LDR W8, [X0 + 0x18]
	0x03944FB0 MOV X27, X0
	0x03944FB4 CBZ W8, 0x394537C
	0x03944FB8 ADD W9, W28, 0x1
	0x03944FBC CMP W8, 0x1
	0x03944FC0 STR W9, [X27 + 0x20]
	0x03944FC4 B.EQ 0x394537C
	0x03944FC8 ADD W9, W28, 0x2
	0x03944FCC CMP W8, 0x2
	0x03944FD0 STR W9, [X27 + 0x24]
	0x03944FD4 B.LS 0x394537C
	0x03944FD8 ADD W8, W28, 0x3
	0x03944FDC STR W8, [X27 + 0x28]
	0x03944FE0 LDR X0, [X21]
	0x03944FE4 BL 0x1C16F10
	0x03944FE8 MOV X1, X27
	0x03944FEC MOV X2, X31
	0x03944FF0 MOV X26, X0
	0x03944FF4 BL 0x3900368
	0x03944FF8 LDR W10, [X24 + 0x1C]
	0x03944FFC LDR X8, [X24 + 0x10]
	0x03945000 LDR X9, [X22]
	0x03945004 ADD W10, W10, 0x1
	0x03945008 STR W10, [X24 + 0x1C]
	0x0394500C CBZ X8, 0x3945378
	0x03945010 LDRSW X10, [X24 + 0x18]
	0x03945014 LDR W11, [X8 + 0x18]
	0x03945018 CMP W10, W11
	0x0394501C B.CS 0x3945034
	0x03945020 ADD W9, W10, 0x1
	0x03945024 ADD X8, X8, X10, 0x3, LSL
	0x03945028 STR W9, [X24 + 0x18]
	0x0394502C STR X26, [X8 + 0x20]
	0x03945030 B 0x394504C
	0x03945034 LDR X8, [X9 + 0x20]
	0x03945038 MOV X0, X24
	0x0394503C MOV X1, X26
	0x03945040 LDR X8, [X8 + 0xC0]
	0x03945044 LDR X2, [X8 + 0x70]
	0x03945048 BL 0x301BF90
	0x0394504C ADD W8, W28, 0x4
	0x03945050 ADD W28, W28, 0x6
	0x03945054 CMP W8, W19
	0x03945058 B.LT 0x3944E84
	0x0394505C LDP S1, S2, [X31 + 0x20]
	0x03945060 MOV V0.16B, V14.16B
	0x03945064 MOV X0, X31
	0x03945068 BL 0x390B3D8
	0x0394506C CBZ X23, 0x3945378
	0x03945070 LDR W8, [X23 + 0x18]
	0x03945074 CMP W8, 0x1
	0x03945078 B.LT 0x39450FC
	0x0394507C ADRP X19, 0x7B2000
	0x03945080 ADRP X20, 0x80A000
	0x03945084 LDR X19, [X19 + 0x980]
	0x03945088 LDR X20, [X20 + 0xE8]
	0x0394508C MOV V15.16B, V0.16B
	0x03945090 MOV V12.16B, V1.16B
	0x03945094 MOV V13.16B, V2.16B
	0x03945098 MOV W26, W31
	0x0394509C LDR X2, [X19]
	0x039450A0 MOV X0, X23
	0x039450A4 MOV W1, W26
	0x039450A8 BL 0x30CBE84
	0x039450AC MOV V4.16B, V0.16B
	0x039450B0 MOV V5.16B, V1.16B
	0x039450B4 MOV V6.16B, V2.16B
	0x039450B8 MOV V0.16B, V11.16B
	0x039450BC MOV V1.16B, V10.16B
	0x039450C0 MOV V2.16B, V9.16B
	0x039450C4 MOV V3.16B, V8.16B
	0x039450C8 MOV X0, X31
	0x039450CC BL 0x3C2A9FC
	0x039450D0 LDR X2, [X20]
	0x039450D4 FMUL S0, S15, S0
	0x039450D8 FMUL S1, S12, S1
	0x039450DC FMUL S2, S13, S2
	0x039450E0 MOV X0, X23
	0x039450E4 MOV W1, W26
	0x039450E8 BL 0x30CBEE4
	0x039450EC LDR W8, [X23 + 0x18]
	0x039450F0 ADD W26, W26, 0x1
	0x039450F4 CMP W26, W8
	0x039450F8 B.LT 0x394509C
	0x039450FC LDP S0, S2, [X31 + 0x20]
	0x03945100 FMOV S1, 1
	0x03945104 FCMP S0, 0x0
	0x03945108 FMOV S0, -1
	0x0394510C FCSEL S0, S1, S0, GE
	0x03945110 FCMP S14, 0x0
	0x03945114 FNEG S1, S0
	0x03945118 FCSEL S0, S0, S1, GE
	0x0394511C FNEG S1, S0
	0x03945120 FCMP S2, 0x0
	0x03945124 FCSEL S0, S0, S1, GE
	0x03945128 FCMP S0, 0x0
	0x0394512C B.PL 0x394519C
	0x03945130 CBZ X24, 0x3945378
	0x03945134 ADRP X8, 0x80A000
	0x03945138 LDR X8, [X8 + 0x110]
	0x0394513C MOV X0, X24
	0x03945140 LDR X1, [X8]
	0x03945144 ADD X8, X31, 0x78
	0x03945148 BL 0x301CB58
	0x0394514C LDUR V0, [X31 + 0x78]
	0x03945150 LDR X8, [X31 + 0x88]
	0x03945154 ADRP X19, 0x80A000
	0x03945158 STR V0, [X31 + 0x6]
	0x0394515C STR X8, [X31 + 0x70]
	0x03945160 LDR X19, [X19 + 0x100]
	0x03945164 LDR X1, [X19]
	0x03945168 ADD X0, X31, 0x60
	0x0394516C BL 0x2BC4350
	0x03945170 TBZ X0, 0x0, 0x3945188
	0x03945174 LDR X0, [X31 + 0x70]
	0x03945178 CBZ X0, 0x3945380
	0x0394517C MOV X1, X31
	0x03945180 BL 0x3900E24
	0x03945184 B 0x3945164
	0x03945188 ADRP X8, 0x80A000
	0x0394518C LDR X8, [X8 + 0xF8]
	0x03945190 ADD X0, X31, 0x60
	0x03945194 LDR X1, [X8]
	0x03945198 BL 0x2BC434C
	0x0394519C LDR X27, [X31 + 0x10]
	0x039451A0 CBZ X27, 0x3945378
	0x039451A4 ADRP X19, 0x809000
	0x039451A8 LDR X19, [X19 + 0x5B8]
	0x039451AC MOV X0, X27
	0x039451B0 MOV X1, X23
	0x039451B4 MOV X2, X24
	0x039451B8 MOV X3, X31
	0x039451BC BL 0x3919540
	0x039451C0 LDR X0, [X19]
	0x039451C4 BL 0x1C16F10
	0x039451C8 MOV X1, X31
	0x039451CC MOV X23, X0
	0x039451D0 BL 0x39333EC
	0x039451D4 LDR X26, [X31 + 0x8]
	0x039451D8 CBZ X23, 0x3945378
	0x039451DC MOVZ W8, 0x41F00000
	0x039451E0 STR W8, [X23 + 0x14]
	0x039451E4 STR X23, [X27 + 0x98]
	0x039451E8 CBZ X25, 0x3945378
	0x039451EC ADRP X19, 0x809000
	0x039451F0 LDR X19, [X19 + 0xC48]
	0x039451F4 MOV X0, X25
	0x039451F8 MOV W1, W31
	0x039451FC LDR X2, [X19]
	0x03945200 BL 0x301BCCC
	0x03945204 CBZ X0, 0x3945378
	0x03945208 MOVZ W8, 0x6
	0x0394520C MOVZ W21, 0x1
	0x03945210 STR W8, [X0 + 0x38]
	0x03945214 STRB W21, [X0 + 0x4C]
	0x03945218 ADRP X22, 0xA93000
	0x0394521C ADRP X20, 0x809000
	0x03945220 LDRB W8, [X22 + 0x786]
	0x03945224 LDR X20, [X20 + 0x590]
	0x03945228 MOV X23, X0
	0x0394522C CBNZ W8, 0x3945240
	0x03945230 ADRP X0, 0x7AE000
	0x03945234 LDR X0, [X0 + 0x5A0]
	0x03945238 BL 0x1C16CF4
	0x0394523C STRB W21, [X22 + 0x786]
	0x03945240 ADRP X8, 0x7AE000
	0x03945244 LDR X8, [X8 + 0x5A0]
	0x03945248 LDR X0, [X20]
	0x0394524C LDR X8, [X8]
	0x03945250 LDR W9, [X0 + 0xE0]
	0x03945254 LDR X8, [X8 + 0xB8]
	0x03945258 LDP S15, S13, [X8 + 0x18]
	0x0394525C LDR V12, [X8 + 0x20]
	0x03945260 CBNZ W9, 0x3945268
	0x03945264 BL 0x1C16DFC
	0x03945268 MOV X0, X27
	0x0394526C MOV X1, X23
	0x03945270 MOV V0.16B, V15.16B
	0x03945274 MOV V1.16B, V13.16B
	0x03945278 MOV V2.16B, V12.16B
	0x0394527C MOV X2, X31
	0x03945280 BL 0x3933424
	0x03945284 LDR W8, [X25 + 0x18]
	0x03945288 CMP W8, 0x2
	0x0394528C B.LT 0x39452E8
	0x03945290 MOVZ W21, 0x1
	0x03945294 MOVZ W22, 0x1
	0x03945298 LDR X2, [X19]
	0x0394529C MOV X0, X25
	0x039452A0 MOV W1, W22
	0x039452A4 BL 0x301BCCC
	0x039452A8 CBZ X0, 0x3945378
	0x039452AC STRB W21, [X0 + 0x4C]
	0x039452B0 MOV X24, X0
	0x039452B4 LDR X0, [X20]
	0x039452B8 LDR W8, [X0 + 0xE0]
	0x039452BC CBNZ W8, 0x39452C4
	0x039452C0 BL 0x1C16DFC
	0x039452C4 MOV X0, X27
	0x039452C8 MOV X1, X23
	0x039452CC MOV X2, X24
	0x039452D0 MOV X3, X31
	0x039452D4 BL 0x3933564
	0x039452D8 LDR W8, [X25 + 0x18]
	0x039452DC ADD W22, W22, 0x1
	0x039452E0 CMP W22, W8
	0x039452E4 B.LT 0x3945298
	0x039452E8 MOV X0, X27
	0x039452EC MOV X1, X25
	0x039452F0 MOV X2, X31
	0x039452F4 BL 0x391A384
	0x039452F8 LDR X0, [X31 + 0x40]
	0x039452FC LDP S1, S2, [X31 + 0x20]
	0x03945300 ADD X2, X31, 0x78
	0x03945304 MOV X1, X27
	0x03945308 LDR X8, [X0]
	0x0394530C MOV V0.16B, V14.16B
	0x03945310 MOV V3.16B, V11.16B
	0x03945314 MOV V4.16B, V10.16B
	0x03945318 LDR X9, [X8 + 0x178]
	0x0394531C STP X31, X31, [X31 + 0x78]
	0x03945320 STR X31, [X31 + 0x88]
	0x03945324 LDR X3, [X8 + 0x180]
	0x03945328 ADD X8, X31, 0x48
	0x0394532C MOV V5.16B, V9.16B
	0x03945330 MOV V6.16B, V8.16B
	0x03945334 BLR X9
	0x03945338 LDR X8, [X31 + 0x58]
	0x0394533C LDUR V0, [X31 + 0x48]
	0x03945340 LDP X20, X19, [X31 + 0x120]
	0x03945344 LDP X22, X21, [X31 + 0x110]
	0x03945348 STR X8, [X26 + 0x10]
	0x0394534C STR V0, [X26]
	0x03945350 LDP X24, X23, [X31 + 0x100]
	0x03945354 LDP X26, X25, [X31 + 0xF0]
	0x03945358 LDP X28, X27, [X31 + 0xE0]
	0x0394535C LDP X29, X30, [X31 + 0xD0]
	0x03945360 LDP D9, D8, [X31 + 0xC0]
	0x03945364 LDP D11, D10, [X31 + 0xB0]
	0x03945368 LDP D13, D12, [X31 + 0xA0]
	0x0394536C LDP D15, D14, [X31 + 0x90]
	0x03945370 ADD X31, X31, 0x130
	0x03945374 RET
	0x03945378 BL 0x1C16F20
	0x0394537C BL 0x1C16F28
	0x03945380 BL 0x1C16F20
	0x03945384 B 0x394538C
	0x03945388 B 0x394538C
	0x0394538C MOV X26, X0
	0x03945390 CMP W1, 0x1
	0x03945394 B.NE 0x39453C8
	0x03945398 MOV X0, X26
	0x0394539C BL 0x3EB1AD0
	0x039453A0 LDR X27, [X0]
	0x039453A4 BL 0x3EB1AE0
	0x039453A8 ADRP X8, 0x80A000
	0x039453AC LDR X8, [X8 + 0xF8]
	0x039453B0 ADD X0, X31, 0x60
	0x039453B4 LDR X1, [X8]
	0x039453B8 BL 0x2BC434C
	0x039453BC CBZ X27, 0x394519C
	0x039453C0 MOV X0, X27
	0x039453C4 BL 0x1C16F18
	0x039453C8 MOV X27, X31
	0x039453CC B 0x39453D4
	0x039453D0 MOV X26, X0
	0x039453D4 ADRP X8, 0x80A000
	0x039453D8 LDR X8, [X8 + 0xF8]
	0x039453DC LDR X1, [X8]
	0x039453E0 ADD X0, X31, 0x60
	0x039453E4 BL 0x2BC434C
	0x039453E8 CBNZ X27, 0x39453F4
	0x039453EC MOV X0, X26
	0x039453F0 BL 0x1D2C690
	0x039453F4 MOV X0, X27
	0x039453F8 BL 0x1C16F18
	0x039453FC BL 0x1990590
	0x03945400 MOVZ W8, 0x6
	0x03945404 MOVZ W9, 0x1
	0x03945408 MOV X1, X31
	0x0394540C STR W8, [X0 + 0x10]
	0x03945410 STRB W9, [X0 + 0x18]
	0x03945414 B 0x33BDD8C
	0x03945418 RET
	0x0394541C SUB X31, X31, 0xA0
	0x03945420 STP D15, D14, [X31 + 0x20]
	0x03945424 STP D13, D12, [X31 + 0x30]
	0x03945428 STP D11, D10, [X31 + 0x40]
	0x0394542C STP D9, D8, [X31 + 0x50]
	0x03945430 STP X30, X25, [X31 + 0x60]
	0x03945434 STP X24, X23, [X31 + 0x70]
	0x03945438 STP X22, X21, [X31 + 0x80]
	0x0394543C STP X20, X19, [X31 + 0x90]
	0x03945440 ADRP X21, 0xA9C000
	0x03945444 LDRB W9, [X21 + 0x96E]
	0x03945448 MOV V10.16B, V4.16B
	0x0394544C MOV V11.16B, V3.16B
	0x03945450 MOV V12.16B, V2.16B
	0x03945454 MOV V13.16B, V1.16B
	0x03945458 MOV V14.16B, V0.16B
	0x0394545C MOV X20, X1
	0x03945460 MOV X19, X8
	0x03945464 STP S5, S6, [X31]
	0x03945468 TBNZ X9, 0x0, 0x394548C
	0x0394546C ADRP X0, 0x80A000
	0x03945470 LDR X0, [X0 + 0x118]
	0x03945474 BL 0x1C16CF4
	0x03945478 ADRP X0, 0x7B0000
	0x0394547C LDR X0, [X0 + 0x9B0]
	0x03945480 BL 0x1C16CF4
	0x03945484 MOVZ W8, 0x1
	0x03945488 STRB W8, [X21 + 0x96E]
	0x0394548C CBZ X20, 0x3945620
	0x03945490 ADRP X22, 0x80A000
	0x03945494 LDR X22, [X22 + 0x118]
	0x03945498 MOV X0, X20
	0x0394549C MOV X1, X31
	0x039454A0 BL 0x3916FC0
	0x039454A4 LDR X0, [X22]
	0x039454A8 LDR W8, [X0 + 0xE0]
	0x039454AC CBNZ W8, 0x39454B8
	0x039454B0 BL 0x1C16DFC
	0x039454B4 LDR X0, [X22]
	0x039454B8 LDR X8, [X0 + 0xB8]
	0x039454BC LDR X8, [X8 + 0x8]
	0x039454C0 CBZ X8, 0x3945620
	0x039454C4 ADRP X9, 0x7B0000
	0x039454C8 LDR X9, [X9 + 0x9B0]
	0x039454CC LDR W1, [X8 + 0x18]
	0x039454D0 LDR X0, [X9]
	0x039454D4 BL 0x1C16D6C
	0x039454D8 MOV X21, X0
	0x039454DC MOV W23, W31
	0x039454E0 MOVZ W24, 0xC
	0x039454E4 LDR X0, [X22]
	0x039454E8 LDR W8, [X0 + 0xE0]
	0x039454EC CBNZ W8, 0x39454F8
	0x039454F0 BL 0x1C16DFC
	0x039454F4 LDR X0, [X22]
	0x039454F8 LDR X9, [X0 + 0xB8]
	0x039454FC LDR X8, [X9 + 0x8]
	0x03945500 CBZ X8, 0x3945620
	0x03945504 LDR W10, [X8 + 0x18]
	0x03945508 CMP W23, W10
	0x0394550C B.GE 0x39455BC
	0x03945510 LDR W10, [X0 + 0xE0]
	0x03945514 CBNZ W10, 0x394552C
	0x03945518 BL 0x1C16DFC
	0x0394551C LDR X8, [X22]
	0x03945520 LDR X9, [X8 + 0xB8]
	0x03945524 LDR X8, [X9 + 0x8]
	0x03945528 CBZ X8, 0x3945620
	0x0394552C LDR W10, [X8 + 0x18]
	0x03945530 CMP W23, W10
	0x03945534 B.CS 0x3945624
	0x03945538 LDR X9, [X9]
	0x0394553C CBZ X9, 0x3945620
	0x03945540 SXTW X25, W23
	0x03945544 ADD X8, X8, X25, 0x2, LSL
	0x03945548 LDRSW X8, [X8 + 0x20]
	0x0394554C LDR W10, [X9 + 0x18]
	0x03945550 CMP W8, W10
	0x03945554 B.CS 0x3945624
	0x03945558 MADD X8, X8, X24, X9
	0x0394555C LDP S15, S8, [X8 + 0x20]
	0x03945560 LDR V9, [X8 + 0x28]
	0x03945564 MOV V0.16B, V14.16B
	0x03945568 MOV V1.16B, V13.16B
	0x0394556C MOV V2.16B, V12.16B
	0x03945570 MOV X0, X31
	0x03945574 BL 0x390B3C8
	0x03945578 FMUL S6, S9, S2
	0x0394557C LDP S2, S3, [X31]
	0x03945580 FMUL S4, S15, S0
	0x03945584 FMUL S5, S8, S1
	0x03945588 MOV V0.16B, V11.16B
	0x0394558C MOV V1.16B, V10.16B
	0x03945590 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X28
	013 Move [X31+280], X27
	014 Move [X31+288], X26
	015 Move [X31+296], X25
	016 Move [X31+304], X24
	017 Move [X31+312], X23
	018 Move [X31+320], X22
	019 Move [X31+328], X21
	020 Move [X31+336], X20
	021 Move [X31+344], X19
	022 Move X19, 0xA9E000
	023 Move W9, [X19+2411]
	024 Move V8, V6
	025 Move V9, V5
	026 Move V11, V4
	027 Move V10, V3
	028 Move V12, V2
	029 Move X29, X1
	030 Move X28, X8
	031 Move [X31+80], S0
	032 Move [X31+88], S1
	033 Move [X31+128], X0
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {70}
	038 Move X0, 0x7DC000
	039 Move X0, [X0+3416]
	040 Call 0x1C17CF4
	041 Move X0, 0x7DC000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x7DC000
	045 Move X0, [X0+1464]
	046 Call 0x1C17CF4
	047 Move X0, 0x7B4000
	048 Move X0, [X0+2424]
	049 Call 0x1C17CF4
	050 Move X0, 0x7B4000
	051 Move X0, [X0+2432]
	052 Call 0x1C17CF4
	053 Move X0, 0x80C000
	054 Move X0, [X0+232]
	055 Call 0x1C17CF4
	056 Move X0, 0x7B4000
	057 Move X0, [X0+960]
	058 Call 0x1C17CF4
	059 Move X0, 0x80A000
	060 Move X0, [X0+2696]
	061 Call 0x1C17CF4
	062 Move X0, 0x7B2000
	063 Move X0, [X0+2480]
	064 Call 0x1C17CF4
	065 Move X0, 0x80B000
	066 Move X0, [X0+3976]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X19+2411], W8
	070 Move X19, 0xA95000
	071 Move W8, [X19+1926]
	072 Move [X31+160], X31
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x7B0000
	076 Move X0, [X0+1440]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+1926], W8
	080 Move [X31+36], S12
	081 Move X19, 0x7B0000
	082 Move X19, [X19+1440]
	083 Move V0, V10
	084 Move V1, V11
	085 Move V2, V9
	086 Move X8, [X19]
	087 Move V3, V8
	088 Move X0, X31
	089 Move X8, [X8+184]
	090 Move S4, [X8+24]
	091 Move S5, [X8+28]
	092 Move V6, [X8+32]
	093 Call Quaternion.op_Multiply, X0, X1
	094 Move X20, 0xA95000
	095 Move W8, [X20+2928]
	096 Move V15, V2
	097 Move [X31+116], S1
	098 Move [X31+124], S0
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0x7B0000
	102 Move X0, [X0+1440]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X20+2928], W8
	106 Move X8, [X19]
	107 Move V0, V10
	108 Move V1, V11
	109 Move V2, V9
	110 Move X8, [X8+184]
	111 Move V3, V8
	112 Move X0, X31
	113 Move S4, [X8+60]
	114 Move S5, [X8+64]
	115 Move V6, [X8+68]
	116 Call Quaternion.op_Multiply, X0, X1
	117 Move X20, 0xA95000
	118 Move W8, [X20+2591]
	119 Move V12, V0
	120 Move V13, V1
	121 Move V14, V2
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x7B0000
	125 Move X0, [X0+1440]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X20+2591], W8
	129 Move X8, [X19]
	130 Move V0, V10
	131 Move V1, V11
	132 Move V2, V9
	133 Move X8, [X8+184]
	134 Move V3, V8
	135 Move X0, X31
	136 Move [X31+112], S10
	137 Move S4, [X8+72]
	138 Move S5, [X8+76]
	139 Move V6, [X8+80]
	140 Move [X31+104], S9
	141 Call Quaternion.op_Multiply, X0, X1
	142 Move X19, 0xA95000
	143 Move W8, [X19+1924]
	144 Move [X31+96], S0
	145 Move [X31+88], S1
	146 Move [X31+72], S2
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, 0x7B0000
	150 Move X0, [X0+1448]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X19+1924], W8
	154 Move X20, 0x7B0000
	155 Move X20, [X20+1448]
	156 Move V0, [X31+80]
	157 Move [X31+100], S8
	158 Move X0, [X20]
	159 Multiply S10, S0, S12
	160 Move V0, [X31+84]
	161 Move W8, [X0+224]
	162 Multiply S9, S0, S13
	163 Compare W8, 0
	164 JumpIfEqual {166}
	165 Move W8, 1
	166 Call 0x1C17DFC
	167 Move W8, [X19+1924]
	168 Move V13, [X31+36]
	169 Multiply S10, S10, S10
	170 Multiply S9, S9, S9
	171 Move [X31+108], S11
	172 Multiply S8, S13, S14
	173 Compare W8, 0
	174 JumpIfNotEqual {180}
	175 Move X0, 0x7B0000
	176 Move X0, [X0+1448]
	177 Call 0x1C17CF4
	178 Move W8, 1
	179 Move [X19+1924], W8
	180 Move V0, [X31+80]
	181 Move V1, [X31+120]
	182 Move X0, [X20]
	183 Add S12, S10, S9
	184 Multiply S8, S8, S8
	185 Multiply S11, S0, S1
	186 Move V0, [X31+84]
	187 Move S14, [X31+112]
	188 Move S1, [X31+116]
	189 Move W8, [X0+224]
	190 Multiply S9, S13, S15
	191 Multiply S10, S0, S1
	192 Compare W8, 0
	193 JumpIfEqual {195}
	194 Move W8, 1
	195 Call 0x1C17DFC
	196 Move W8, [X19+1924]
	197 Multiply S0, S11, S11
	198 Multiply S1, S10, S10
	199 Add S8, S8, S12
	200 Add S10, S0, S1
	201 Multiply S9, S9, S9
	202 Compare W8, 0
	203 JumpIfNotEqual {209}
	204 Move X0, 0x7B0000
	205 Move X0, [X0+1448]
	206 Call 0x1C17CF4
	207 Move W8, 1
	208 Move [X19+1924], W8
	209 Move X0, [X20]
	210 Move X19, 0x80A000
	211 NotImplemented "Instruction FSQRT not yet implemented."
	212 Move S11, 0.5
	213 Move W8, [X0+224]
	214 Move X19, [X19+2696]
	215 Add S9, S9, S10
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X8, [X31+128]
	220 Move X0, [X19]
	221 Multiply S12, S8, S11
	222 NotImplemented "Instruction FSQRT not yet implemented."
	223 Move W9, [X8+20]
	224 Move V13, [X8+24]
	225 Add W24, W9, 1
	226 Move W1, W24
	227 Move [X31+120], X9
	228 Call 0x1C17D6C
	229 Move X8, [X19]
	230 Move X22, X0
	231 Move W1, W24
	232 Move X0, X8
	233 Call 0x1C17D6C
	234 Move V10, [X31+104]
	235 Move W8, 0x42B40000
	236 Move S0, W8
	237 NotImplemented "Instruction FCMP not yet implemented."
	238 Move X23, X0
	239 Move [X31+32], S13
	240 Move V11, [X31+108]
	241 Add S12, S12, S12
	242 Move V11, [X31+108]
	243 Move W8, 0x43340000
	244 Move S0, W8
	245 NotImplemented "Instruction FCMP not yet implemented."
	246 Move X8, -48599040
	247 Move V0, [X8+260]
	248 Multiply S0, S13, S0
	249 Call 0x3EB2BD0
	250 NotImplemented "Instruction FABS not yet implemented."
	251 Move S1, 1
	252 NotImplemented "Instruction FMIN not yet implemented."
	253 Subtract S0, S1, S0
	254 Add S0, S0, S1
	255 Multiply S12, S12, S0
	256 Move W8, 0x43340000
	257 Move S0, W8
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 Move W8, 0xC3340000
	260 Move W9, 0x42B40000
	261 Move S2, W8
	262 Add S2, S13, S2
	263 Move S3, W9
	264 Move S0, 1
	265 NotImplemented "Instruction FDIV not yet implemented."
	266 Move S1, W31
	267 NotImplemented "Instruction FMIN not yet implemented."
	268 Add S1, S3, S1
	269 Add S1, S1, S0
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 NotImplemented "Instruction FCSEL not yet implemented."
	272 NotImplemented "Instruction FDIV not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X8, [X31+120]
	275 Move W20, W24
	276 Move X24, 0x7B8000
	277 Move X24, [X24+3848]
	278 Move V1, [X31+32]
	279 NotImplemented "Instruction SCVTF not yet implemented."
	280 Move X19, X31
	281 Add X21, X22, 36
	282 Add X25, X23, 36
	283 Move X26, 0xA96000
	284 NotImplemented "Instruction FDIV not yet implemented."
	285 Move W27, 1
	286 Move W8, [X26+1935]
	287 Compare W8, 0
	288 JumpIfNotEqual {292}
	289 Move X0, X24
	290 Call 0x1C17CF4
	291 Move [X26+1935], W27
	292 Move X8, [X24]
	293 NotImplemented "Instruction SCVTF not yet implemented."
	294 Multiply S13, S8, S0
	295 Add X0, X31, 160
	296 Move X8, [X8+184]
	297 Move V0, V12
	298 Move V1, V15
	299 Move V2, V13
	300 Move S3, [X8]
	301 Move S4, [X8+4]
	302 Move X1, X31
	303 Call Math.PointInEllipseCircumference, V0, V1, V2, X0, X1
	304 Compare X22, 0
	305 JumpIfEqual {775}
	306 Move W8, [X22+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X9, [X31+128]
	309 Move [X21-4], S0
	310 Move [X21+4], S1
	311 Move W8, [X26+1935]
	312 Move V9, [X9+16]
	313 Compare W8, 0
	314 JumpIfNotEqual {318}
	315 Move X0, X24
	316 Call 0x1C17CF4
	317 Move [X26+1935], W27
	318 Move X8, [X24]
	319 Subtract S0, S12, S9
	320 Subtract S1, S15, S9
	321 Add X0, X31, 160
	322 Move X8, [X8+184]
	323 Move V2, V13
	324 Move X1, X31
	325 Move S3, [X8]
	326 Move S4, [X8+4]
	327 Call Math.PointInEllipseCircumference, V0, V1, V2, X0, X1
	328 Compare X23, 0
	329 JumpIfEqual {775}
	330 Move W8, [X23+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Add X19, X19, 1
	333 Move [X25-4], S0
	334 Move [X25+4], S1
	335 Add X21, X21, 8
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add X25, X25, 8
	338 Move X8, 0x7B4000
	339 Move X8, [X8+960]
	340 Move X19, 0x7DC000
	341 Move X0, [X8]
	342 Move X19, [X19+1464]
	343 Call 0x1C17F10
	344 Move X1, [X19]
	345 Move X24, X0
	346 Call List`1<Vector3>..ctor, X0
	347 Move X8, [X31+120]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move V8, [X31+100]
	350 Move V9, [X31+32]
	351 Move [X31+16], X29
	352 Move [X31+24], X28
	353 Compare X22, 0
	354 JumpIfEqual {775}
	355 Move V0, [X31+80]
	356 Move V1, [X31+96]
	357 Move V3, [X31+72]
	358 Move X29, 0x7DC000
	359 Add X20, X23, 32
	360 Multiply S0, S0, S1
	361 Move S1, [X31+84]
	362 Move S2, [X31+88]
	363 Multiply S0, S0, S0
	364 Add X28, X22, 32
	365 Move X27, X31
	366 Multiply S1, S1, S2
	367 Move V2, [X31+36]
	368 Move X29, [X29+3416]
	369 Move X8, [X31+120]
	370 Multiply S1, S1, S1
	371 Multiply S2, S2, S3
	372 Add S0, S0, S1
	373 Subtract W9, W8, 1
	374 Move W8, W8
	375 ShiftRight W8, 31
	376 And W8, W8, 0x3FFFFFFF
	377 Multiply S2, S2, S2
	378 Move [X31+12], W8
	379 Add X8, X9, 1
	380 Add S0, S2, S0
	381 Move S1, 0.5
	382 Move [X31+88], X9
	383 Add X9, X20, X8
	384 NotImplemented "Instruction FSQRT not yet implemented."
	385 Move [X31+64], X9
	386 Move [X31+72], X8
	387 Add X8, X28, X8
	388 Add X9, X9, 4
	389 Multiply S0, S0, S1
	390 Move [X31+48], X9
	391 Move [X31+56], X8
	392 Add X8, X8, 4
	393 NotImplemented "Instruction FNEG not yet implemented."
	394 Move W19, 0x43B40000
	395 Move [X31+40], X8
	396 Move [X31+116], S0
	397 Move W8, [X22+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Add X21, X27, 1
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move S0, [X28]
	402 Move S1, [X28+4]
	403 Move S2, [X28+8]
	404 Move S3, [X28+12]
	405 Move V4, V12
	406 Call Arch.GetFace, X0, X1, X2, V0
	407 Compare X23, 0
	408 JumpIfEqual {775}
	409 Move W8, [X23+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move S2, [X20]
	413 Move S3, [X20+4]
	414 Move S0, [X20+8]
	415 Move S1, [X20+12]
	416 Move V4, V12
	417 Move X25, X0
	418 Call Arch.GetFace, X0, X1, X2, V0
	419 Move S0, W19
	420 NotImplemented "Instruction FCMP not yet implemented."
	421 Move X26, X0
	422 Compare X27, 0
	423 JumpIfNotEqual {446}
	424 Move X8, [X31+128]
	425 Move W8, [X8+28]
	426 Compare W8, 0
	427 JumpIfEqual {446}
	428 Move W8, [X22+24]
	429 Compare W8, 0
	430 JumpIfEqual {774}
	431 Move W8, [X23+24]
	432 Compare W8, 0
	433 JumpIfEqual {774}
	434 Move S0, [X28]
	435 Move S1, [X28+4]
	436 Move S2, [X20]
	437 Move S3, [X20+4]
	438 Move V4, [X31+116]
	439 Call Arch.GetFace, X0, X1, X2, V0
	440 Compare X24, 0
	441 JumpIfEqual {775}
	442 Move X2, [X29]
	443 Move X1, X0
	444 Move X0, X24
	445 Call List`1<Vector3>.AddRange, X0, X1
	446 Compare X24, 0
	447 JumpIfEqual {775}
	448 Move X2, [X29]
	449 Move X0, X24
	450 Move X1, X25
	451 Call List`1<Vector3>.AddRange, X0, X1
	452 Move X2, [X29]
	453 Move X0, X24
	454 Move X1, X26
	455 Call List`1<Vector3>.AddRange, X0, X1
	456 Move S0, W19
	457 NotImplemented "Instruction FCMP not yet implemented."
	458 Move X8, [X31+88]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move X8, [X31+128]
	461 Move W8, [X8+28]
	462 Compare W8, 0
	463 JumpIfEqual {483}
	464 Move W8, [X23+24]
	465 Move X9, [X31+72]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move W8, [X22+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X8, [X31+48]
	470 Move V4, [X31+116]
	471 Move V1, [X8]
	472 Move X8, [X31+64]
	473 Move V0, [X8]
	474 Move X8, [X31+56]
	475 Move V2, [X8]
	476 Move X8, [X31+40]
	477 Move V3, [X8]
	478 Call Arch.GetFace, X0, X1, X2, V0
	479 Move X2, [X29]
	480 Move X1, X0
	481 Move X0, X24
	482 Call List`1<Vector3>.AddRange, X0, X1
	483 Move X8, [X31+120]
	484 Add X28, X28, 8
	485 Add X20, X20, 8
	486 Move X27, X21
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move X8, [X31+120]
	489 NotImplemented "Instruction CMP not yet implemented."
	490 Move X21, 0x7B1000
	491 Move X21, [X21+2480]
	492 Move X27, X31
	493 Add X19, X22, 44
	494 Add X20, X23, 44
	495 Move [X31+96], S12
	496 Move W8, [X22+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Add X9, X27, 1
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Move W8, [X23+24]
	501 Subtract X9, X9, 1
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Add X27, X9, 1
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X0, [X21]
	506 Move S11, [X19-12]
	507 Move S14, [X19-8]
	508 Move S15, [X19-4]
	509 Move S12, [X19]
	510 Move S8, [X20-12]
	511 Move S13, [X20-8]
	512 Move S9, [X20-4]
	513 Move S10, [X20]
	514 Move W1, 4
	515 Call 0x1C17D6C
	516 Compare X0, 0
	517 JumpIfEqual {775}
	518 Move W8, [X0+24]
	519 Move V0, [X31+116]
	520 Move X25, X0
	521 Compare W8, 0
	522 JumpIfEqual {774}
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Move [X25+32], S11
	525 Move [X25+40], S14
	526 Move [X25+40], S0
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move [X25+44], S15
	529 Move [X25+52], S12
	530 Move [X25+52], S0
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move [X25+56], S8
	533 Move [X25+64], S13
	534 Move [X25+64], S0
	535 Move [X25+68], S9
	536 Move [X25+76], S10
	537 Move [X25+76], S0
	538 Move X0, [X21]
	539 Move W1, 4
	540 Call 0x1C17D6C
	541 Compare X0, 0
	542 JumpIfEqual {775}
	543 Move W8, [X0+24]
	544 Move X26, X0
	545 Compare W8, 0
	546 JumpIfEqual {774}
	547 Move [X26+32], S15
	548 Move [X26+40], S12
	549 Move V12, [X31+96]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Move [X26+40], S12
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Move [X26+44], S11
	554 Move [X26+52], S14
	555 Move [X26+52], S12
	556 Move S11, [X31+108]
	557 Move S14, [X31+112]
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Move [X26+56], S9
	560 Move [X26+64], S10
	561 Move [X26+64], S12
	562 Move [X26+68], S8
	563 Move [X26+76], S13
	564 Move [X26+76], S12
	565 Move X2, [X29]
	566 Move X0, X24
	567 Move X1, X25
	568 Call List`1<Vector3>.AddRange, X0, X1
	569 Move X2, [X29]
	570 Move X0, X24
	571 Move X1, X26
	572 Call List`1<Vector3>.AddRange, X0, X1
	573 Move X8, [X31+120]
	574 Move S8, [X31+100]
	575 Move S10, [X31+104]
	576 Add X19, X19, 8
	577 Add X20, X20, 8
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X29, [X31+16]
	580 Move X28, [X31+24]
	581 Move W23, [X31+12]
	582 Move V8, [X31+100]
	583 Move W23, W31
	584 Move S0, [X31+80]
	585 Move S1, [X31+84]
	586 Move V2, [X31+36]
	587 Move X0, X31
	588 Call Math.Sign, X0
	589 Compare X24, 0
	590 JumpIfEqual {775}
	591 Move W8, [X24+24]
	592 Move X19, 0x7DB000
	593 Move X19, [X19+1456]
	594 Move V12, V0
	595 Move V15, V1
	596 Move V13, V2
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X20, 0x7B3000
	599 Move X21, 0x80B000
	600 Move X20, [X20+2432]
	601 Move X21, [X21+232]
	602 Move W22, W31
	603 Move X2, [X20]
	604 Move X0, X24
	605 Move W1, W22
	606 Call List`1<Vector3>.get_Item, X0, X1
	607 Move V4, V0
	608 Move V5, V1
	609 Move V6, V2
	610 Move V0, V14
	611 Move V1, V11
	612 Move V2, V10
	613 Move V3, V8
	614 Move X0, X31
	615 Call Quaternion.op_Multiply, X0, X1
	616 Move X2, [X21]
	617 Multiply S0, S12, S0
	618 Multiply S1, S15, S1
	619 Multiply S2, S13, S2
	620 Move X0, X24
	621 Move W1, W22
	622 Call List`1<Vector3>.set_Item, X0, X1, X2
	623 Move W8, [X24+24]
	624 Add W22, W22, 1
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move X1, [X19]
	627 Move X0, X24
	628 Call List`1<Vector3>.ToArray, X0
	629 Compare X29, 0
	630 JumpIfEqual {775}
	631 Move X1, X0
	632 Move X0, X29
	633 Move X2, X31
	634 Call ProBuilderMesh.GeometryWithPoints, X0, X1
	635 Move X8, [X31+128]
	636 Move W8, [X8+29]
	637 Compare W8, 0
	638 JumpIfEqual {660}
	639 Move V1, [X31+32]
	640 Move W8, 0x43B40000
	641 Move S0, W8
	642 NotImplemented "Instruction FCMP not yet implemented."
	643 Move X8, [X31+128]
	644 Move W8, [X8+28]
	645 Move W8, W31
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move X9, [X29+40]
	648 Compare X9, 0
	649 JumpIfEqual {775}
	650 Move W10, [X9+24]
	651 Move W11, 1
	652 NotImplemented "Instruction CMP not yet implemented."
	653 Add X12, X9, W8
	654 Move X12, [X12+32]
	655 Compare X12, 0
	656 JumpIfEqual {775}
	657 Add W8, W8, 1
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move [X12+24], W11
	660 Multiply S0, S12, S15
	661 Multiply S0, S13, S0
	662 NotImplemented "Instruction FCMP not yet implemented."
	663 Move X19, [X29+40]
	664 Compare X19, 0
	665 JumpIfEqual {775}
	666 Move W8, [X19+24]
	667 NotImplemented "Instruction CMP not yet implemented."
	668 Move W20, W31
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Add X8, X19, W20
	671 Move X0, [X8+32]
	672 Compare X0, 0
	673 JumpIfEqual {775}
	674 Move X1, X31
	675 Call Face.Reverse, X0
	676 Move W8, [X19+24]
	677 Add W20, W20, 1
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X0, X29
	680 Move X1, X31
	681 Call ProBuilderMesh.get_mesh, X0
	682 Compare X0, 0
	683 JumpIfEqual {775}
	684 Move X1, X31
	685 Call Mesh.get_triangles, X0
	686 Move X22, X0
	687 Move X0, X29
	688 Move X1, X31
	689 Call Component.get_transform, X0
	690 Move X23, X0
	691 Move X0, X29
	692 Move X1, X31
	693 Call ProBuilderMesh.get_mesh, X0
	694 Compare X0, 0
	695 JumpIfEqual {775}
	696 Add X8, X31, 168
	697 Move X1, X31
	698 Call Mesh.get_bounds, X0
	699 Compare X23, 0
	700 JumpIfEqual {775}
	701 Move S1, [X31+172]
	702 Move S0, [X31+176]
	703 Move V3, [X31+168]
	704 Move X19, 0x80A000
	705 Move X19, [X19+3976]
	706 NotImplemented "Instruction FNEG not yet implemented."
	707 NotImplemented "Instruction FNEG not yet implemented."
	708 NotImplemented "Instruction FNEG not yet implemented."
	709 Move X0, X23
	710 Move X1, X31
	711 Call Transform.TransformDirection, X0, X1
	712 Move X0, [X19]
	713 Move V12, V0
	714 Move V13, V1
	715 Move V14, V2
	716 Move W8, [X0+224]
	717 Compare W8, 0
	718 JumpIfNotEqual {720}
	719 Call 0x1C17DFC
	720 Move X0, X29
	721 Move X1, X22
	722 Move V0, V12
	723 Move V1, V13
	724 Move V2, V14
	725 Call VertexPositioning.TranslateVerticesInWorldSpace, X0, X1, X2
	726 Move W1, 31
	727 Move X0, X29
	728 Move X2, X31
	729 Call ProBuilderMesh.Refresh, X0, X1
	730 Move X0, [X31+128]
	731 Move S0, [X31+80]
	732 Move S1, [X31+84]
	733 Move V2, [X31+36]
	734 Move V3, [X31+112]
	735 Move X8, [X0]
	736 Add X2, X31, 168
	737 Move X1, X29
	738 Move V4, V11
	739 Move X9, [X8+376]
	740 Move [X31+168], X31
	741 Move [X31+176], X31
	742 Move [X31+184], X31
	743 Move X3, [X8+384]
	744 Add X8, X31, 136
	745 Move V5, V10
	746 Move V6, V8
	747 NotImplemented "Instruction BLR not yet implemented."
	748 Move X8, [X31+152]
	749 NotImplemented "Instruction LDUR not yet implemented."
	750 Move X20, [X31+336]
	751 Move X19, [X31+344]
	752 Move X22, [X31+320]
	753 Move X21, [X31+328]
	754 Move [X28+16], X8
	755 Move [X28], V0
	756 Move X24, [X31+304]
	757 Move X23, [X31+312]
	758 Move X26, [X31+288]
	759 Move X25, [X31+296]
	760 Move X28, [X31+272]
	761 Move X27, [X31+280]
	762 Move X29, [X31+256]
	763 Move X30, [X31+264]
	764 Move D9, [X31+240]
	765 Move D8, [X31+248]
	766 Move D11, [X31+224]
	767 Move D10, [X31+232]
	768 Move D13, [X31+208]
	769 Move D12, [X31+216]
	770 Move D15, [X31+192]
	771 Move D14, [X31+200]
	772 Add X31, X31, 352
	773 Return X0
	774 Call 0x1C17F28
	775 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03945594 BL 0x3C2A9FC
	0x03945598 CBZ X21, 0x3945620
	0x0394559C LDR W8, [X21 + 0x18]
	0x039455A0 CMP W23, W8
	0x039455A4 B.CS 0x3945624
	0x039455A8 MADD X8, X25, X24, X21
	0x039455AC ADD W23, W23, 0x1
	0x039455B0 STP S0, S1, [X8 + 0x20]
	0x039455B4 STR S2, [X8 + 0x28]
	0x039455B8 B 0x39454E4

ISIL:
	001 Move X8, 0xCCCD
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 NotImplemented "Instruction MOVK not yet implemented."
	004 Move W9, 0x43340000
	005 Move W10, 257
	006 Move X1, X31
	007 Move [X0+16], X8
	008 Move [X0+24], W9
	009 NotImplemented "Instruction STRH not yet implemented."
	010 Call Object..ctor, X0
	011 Return 

