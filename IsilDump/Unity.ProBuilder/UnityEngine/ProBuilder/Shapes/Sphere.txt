Type: UnityEngine.ProBuilder.Shapes.Sphere

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x0394B390 LDR V0, [X9 + 0x4B8]
	0x0394B394 CMP W8, 0x4
	0x0394B398 STR W31, [X0 + 0x4C]
	0x0394B39C STUR D0, [X0 + 0x44]
	0x0394B3A0 B.LS 0x394B4B4
	0x0394B3A4 ADRP X9, 0xFFFFFFFFFD1A3000
	0x0394B3A8 LDR V0, [X9 + 0x278]
	0x0394B3AC MOVZ W9, 0x1BBD
	0x0394B3B0 MOVK W9, 0x3FCF0000
	0x0394B3B4 CMP W8, 0x5
	0x0394B3B8 STR D0, [X0 + 0x50]
	0x0394B3BC STR W9, [X0 + 0x58]
	0x0394B3C0 B.EQ 0x394B4B4
	0x0394B3C4 ADRP X10, 0xFFFFFFFFFD1A3000
	0x0394B3C8 LDR V1, [X10]
	0x0394B3CC CMP W8, 0x6
	0x0394B3D0 STR W9, [X0 + 0x64]
	0x0394B3D4 STUR D1, [X0 + 0x5C]
	0x0394B3D8 B.LS 0x394B4B4
	0x0394B3DC MOVZ W9, 0x1BBD
	0x0394B3E0 MOVK W9, 0xBFCF0000
	0x0394B3E4 CMP W8, 0x7
	0x0394B3E8 STR D0, [X0 + 0x68]
	0x0394B3EC STR W9, [X0 + 0x70]
	0x0394B3F0 B.EQ 0x394B4B4
	0x0394B3F4 CMP W8, 0x8
	0x0394B3F8 STUR D1, [X0 + 0x74]
	0x0394B3FC STR W9, [X0 + 0x7C]
	0x0394B400 B.LS 0x394B4B4
	0x0394B404 ADRP X9, 0xFFFFFFFFFD1A2000
	0x0394B408 LDR V0, [X9 + 0xAF0]
	0x0394B40C MOVZ W9, 0xBF800000
	0x0394B410 CMP W8, 0x9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA97000
	006 Move W8, [X21+2434]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x805000
	014 Move X0, [X0+328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2434], W8
	018 Compare X19, 0
	019 JumpIfEqual {35}
	020 Move X8, 0x805000
	021 Move X8, [X8+328]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move V0, [X19+16]
	032 Move [X20+16], D0
	033 Move W8, [X19+24]
	034 Move [X20+24], W8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 

Method: UnityEngine.Bounds UpdateBounds(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation, UnityEngine.Bounds bounds)

Disassembly:
	0x0394B414 STR W9, [X0 + 0x88]
	0x0394B418 STR D0, [X0 + 0x80]
	0x0394B41C B.EQ 0x394B4B4
	0x0394B420 MOVZ W9, 0x3F800000
	0x0394B424 CMP W8, 0xA
	0x0394B428 STUR D0, [X0 + 0x8C]
	0x0394B42C STR W9, [X0 + 0x94]
	0x0394B430 B.LS 0x394B4B4
	0x0394B434 ADRP X9, 0xFFFFFFFFFD1A3000
	0x0394B438 LDR V0, [X9 + 0x318]
	0x0394B43C MOVZ W9, 0xBF800000
	0x0394B440 CMP W8, 0xB
	0x0394B444 STR W9, [X0 + 0xA0]
	0x0394B448 STR D0, [X0 + 0x98]
	0x0394B44C B.EQ 0x394B4B4
	0x0394B450 ADRP X20, 0x804000
	0x0394B454 LDR X20, [X20 + 0x148]
	0x0394B458 MOVZ W8, 0x3F800000
	0x0394B45C STUR D0, [X0 + 0xA4]
	0x0394B460 STR W8, [X0 + 0xAC]
	0x0394B464 LDR X8, [X20]
	0x0394B468 ADRP X9, 0x7A9000
	0x0394B46C ADRP X19, 0x803000
	0x0394B470 MOVZ W1, 0x3C
	0x0394B474 LDR X8, [X8 + 0xB8]
	0x0394B478 LDR X9, [X9 + 0xE58]
	0x0394B47C STR X0, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Compare X1, 0
	006 JumpIfEqual {31}
	007 Move X0, X1
	008 Move X1, X31
	009 Move X20, X2
	010 Move X19, X8
	011 Call ProBuilderMesh.get_mesh, X0
	012 Compare X0, 0
	013 JumpIfEqual {31}
	014 Add X8, X31, 8
	015 Move X1, X31
	016 Call Mesh.get_bounds, X0
	017 Move X8, [X31+24]
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move X30, [X31+64]
	020 Move [X31+48], X8
	021 Move [X31+2], V0
	022 Move [X20+16], X8
	023 Move [X20], V0
	024 Move V0, [X31+2]
	025 Move [X19+16], X8
	026 Move [X19], V0
	027 Move X20, [X31+80]
	028 Move X19, [X31+88]
	029 Add X31, X31, 96
	030 Return X0
	031 Call 0x1C17F20

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x0394B480 LDR X0, [X9]
	0x0394B484 LDR X19, [X19 + 0xCE8]
	0x0394B488 BL 0x1C16D6C
	0x0394B48C LDR X1, [X19]
	0x0394B490 MOV X2, X31
	0x0394B494 MOV X19, X0
	0x0394B498 BL 0x32C5BD8
	0x0394B49C LDR X8, [X20]
	0x0394B4A0 LDR X8, [X8 + 0xB8]
	0x0394B4A4 STR X19, [X8 + 0x8]
	0x0394B4A8 LDP X20, X19, [X31 + 0x10]
	0x0394B4AC LDR X30, [X31], #0x20
	0x0394B4B0 RET
	0x0394B4B4 BL 0x1C16F28
	0x0394B4B8 BL 0x1C16F20
	0x0394B4BC RET
	0x0394B4C0 SUB X31, X31, 0x80
	0x0394B4C4 STR D10, [X31 + 0x20]
	0x0394B4C8 STP D9, D8, [X31 + 0x30]
	0x0394B4CC STP X30, X25, [X31 + 0x40]
	0x0394B4D0 STP X24, X23, [X31 + 0x50]
	0x0394B4D4 STP X22, X21, [X31 + 0x60]
	0x0394B4D8 STP X20, X19, [X31 + 0x70]
	0x0394B4DC ADRP X21, 0xA96000
	0x0394B4E0 LDRB W9, [X21 + 0x986]
	0x0394B4E4 MOV V8.16B, V2.16B
	0x0394B4E8 MOV V9.16B, V1.16B
	0x0394B4EC MOV V10.16B, V0.16B
	0x0394B4F0 MOV X20, X1
	0x0394B4F4 MOV X19, X8
	0x0394B4F8 TBNZ X9, 0x0, 0x394B558
	0x0394B4FC ADRP X0, 0x803000
	0x0394B500 LDR X0, [X0 + 0x3F0]
	0x0394B504 BL 0x1C16CF4
	0x0394B508 ADRP X0, 0x803000
	0x0394B50C LDR X0, [X0 + 0x560]
	0x0394B510 BL 0x1C16CF4
	0x0394B514 ADRP X0, 0x7A9000
	0x0394B518 LDR X0, [X0 + 0xE58]
	0x0394B51C BL 0x1C16CF4
	0x0394B520 ADRP X0, 0x7A8000
	0x0394B524 LDR X0, [X0 + 0x598]
	0x0394B528 BL 0x1C16CF4
	0x0394B52C ADRP X0, 0x804000
	0x0394B530 LDR X0, [X0 + 0x150]
	0x0394B534 BL 0x1C16CF4
	0x0394B538 ADRP X0, 0x802000
	0x0394B53C LDR X0, [X0 + 0xA88]
	0x0394B540 BL 0x1C16CF4
	0x0394B544 ADRP X0, 0x7AA000
	0x0394B548 LDR X0, [X0 + 0x9B0]
	0x0394B54C BL 0x1C16CF4
	0x0394B550 MOVZ W8, 0x1
	0x0394B554 STRB W8, [X21 + 0x986]
	0x0394B558 MOV V0.16B, V10.16B
	0x0394B55C MOV V1.16B, V9.16B
	0x0394B560 MOV V2.16B, V8.16B
	0x0394B564 MOV X0, X31
	0x0394B568 BL 0x390B3C8
	0x0394B56C MOVZ W8, 0x1
	0x0394B570 MOV V9.16B, V0.16B
	0x0394B574 FMOV S0, W8
	0x0394B578 FCMP S9, S0
	0x0394B57C B.MI 0x394B728
	0x0394B580 MOVZ W8, 0x1
	0x0394B584 FMOV S0, W8
	0x0394B588 MOV V8.16B, V2.16B
	0x0394B58C FCMP S2, S0
	0x0394B590 B.MI 0x394B728
	0x0394B594 ADRP X8, 0x802000
	0x0394B598 LDR X8, [X8 + 0xA88]
	0x0394B59C MOVZ W1, 0x4
	0x0394B5A0 LDR X0, [X8]
	0x0394B5A4 BL 0x1C16D6C
	0x0394B5A8 ADRP X8, 0x7AA000
	0x0394B5AC LDR X8, [X8 + 0x9B0]
	0x0394B5B0 MOV X21, X0
	0x0394B5B4 MOVZ W1, 0x4
	0x0394B5B8 LDR X8, [X8]
	0x0394B5BC MOV X0, X8
	0x0394B5C0 BL 0x1C16D6C
	0x0394B5C4 ADRP X8, 0x803000
	0x0394B5C8 LDR X8, [X8 + 0x3F0]
	0x0394B5CC MOV X22, X0
	0x0394B5D0 MOVZ W1, 0x1
	0x0394B5D4 LDR X8, [X8]
	0x0394B5D8 MOV X0, X8
	0x0394B5DC BL 0x1C16D6C
	0x0394B5E0 CBZ X21, 0x394B7BC
	0x0394B5E4 LDR W8, [X21 + 0x18]
	0x0394B5E8 CBZ W8, 0x394B7B8
	0x0394B5EC FMOV S0, 0.5
	0x0394B5F0 CMP W8, 0x1
	0x0394B5F4 FNMUL S2, S9, S0
	0x0394B5F8 FNMUL S3, S8, S0
	0x0394B5FC STP S2, S3, [X21 + 0x20]
	0x0394B600 B.EQ 0x394B7B8
	0x0394B604 FMUL S1, S9, S0
	0x0394B608 CMP W8, 0x2
	0x0394B60C STP S1, S3, [X21 + 0x28]
	0x0394B610 B.LS 0x394B7B8
	0x0394B614 FMUL S0, S8, S0
	0x0394B618 CMP W8, 0x3
	0x0394B61C STP S2, S0, [X21 + 0x30]
	0x0394B620 B.EQ 0x394B7B8
	0x0394B624 STP S1, S0, [X21 + 0x38]
	0x0394B628 ADRP X8, 0x7A9000
	0x0394B62C LDR X8, [X8 + 0xE58]
	0x0394B630 MOV X23, X0
	0x0394B634 MOVZ W1, 0x6
	0x0394B638 LDR X0, [X8]
	0x0394B63C BL 0x1C16D6C
	0x0394B640 ADRP X8, 0x804000
	0x0394B644 LDR X8, [X8 + 0x150]
	0x0394B648 MOV X2, X31
	0x0394B64C MOV X25, X0
	0x0394B650 LDR X1, [X8]
	0x0394B654 BL 0x32C5BD8
	0x0394B658 ADRP X8, 0x803000
	0x0394B65C LDR X8, [X8 + 0x560]
	0x0394B660 LDR X0, [X8]
	0x0394B664 BL 0x1C16F10
	0x0394B668 MOV X1, X25
	0x0394B66C MOV X2, X31
	0x0394B670 MOV X24, X0
	0x0394B674 BL 0x3900368
	0x0394B678 CBZ X23, 0x394B7BC
	0x0394B67C LDR W8, [X23 + 0x18]
	0x0394B680 CBZ W8, 0x394B7B8
	0x0394B684 STR X24, [X23 + 0x20]
	0x0394B688 CBZ X22, 0x394B7BC
	0x0394B68C LDR W8, [X22 + 0x18]
	0x0394B690 UBFM X9, X8, 0x20, 0x1F
	0x0394B694 CMP X9, 0x1
	0x0394B698 B.LT 0x394B6E0
	0x0394B69C MOV X9, X31
	0x0394B6A0 SXTW X10, W8
	0x0394B6A4 ADD X11, X21, 0x24
	0x0394B6A8 ADD X12, X22, 0x28
	0x0394B6AC LDR W13, [X21 + 0x18]
	0x0394B6B0 CMP X9, X13
	0x0394B6B4 B.CS 0x394B7B8
	0x0394B6B8 CMP X9, X8
	0x0394B6BC B.CS 0x394B7B8
	0x0394B6C0 LDP S0, S1, [X11 - 0x4]
	0x0394B6C4 ADD X9, X9, 0x1
	0x0394B6C8 STUR W31, [X12 - 0x4]
	0x0394B6CC ADD X11, X11, 0x8
	0x0394B6D0 CMP X9, X10
	0x0394B6D4 STUR S1, [X12 - 0x8]
	0x0394B6D8 STR S0, [X12], #0xC
	0x0394B6DC B.LT 0x394B6AC
	0x0394B6E0 CBZ X20, 0x394B7BC
	0x0394B6E4 MOV X0, X20
	0x0394B6E8 MOV X1, X22
	0x0394B6EC MOV X2, X23
	0x0394B6F0 MOV X3, X31
	0x0394B6F4 BL 0x3919540
	0x0394B6F8 MOV X0, X20
	0x0394B6FC MOV X1, X31
	0x0394B700 BL 0x3912CAC
	0x0394B704 CBZ X0, 0x394B7BC
	0x0394B708 ADD X8, X31, 0x8
	0x0394B70C MOV X1, X31
	0x0394B710 BL 0x3C17768
	0x0394B714 LDR X8, [X31 + 0x18]
	0x0394B718 LDUR V0, [X31 + 0x8]
	0x0394B71C STR X8, [X19 + 0x10]
	0x0394B720 STR V0, [X19]
	0x0394B724 B 0x394B798
	0x0394B728 CBZ X20, 0x394B7BC
	0x0394B72C MOV X0, X20
	0x0394B730 MOV X1, X31
	0x0394B734 BL 0x3916FC0
	0x0394B738 MOV X0, X20
	0x0394B73C MOV X1, X31
	0x0394B740 BL 0x3912CAC
	0x0394B744 ADRP X8, 0x7A8000
	0x0394B748 LDR X8, [X8 + 0x598]
	0x0394B74C MOV X21, X0
	0x0394B750 LDR X8, [X8]
	0x0394B754 LDR W9, [X8 + 0xE0]
	0x0394B758 CBNZ W9, 0x394B764
	0x0394B75C MOV X0, X8
	0x0394B760 BL 0x1C16DFC
	0x0394B764 MOV X0, X21
	0x0394B768 MOV X1, X31
	0x0394B76C MOV X2, X31
	0x0394B770 BL 0x3C354F8
	0x0394B774 TBZ X0, 0x0, 0x394B790
	0x0394B778 MOV X0, X20
	0x0394B77C MOV X1, X31
	0x0394B780 BL 0x3912CAC
	0x0394B784 CBZ X0, 0x394B7BC
	0x0394B788 MOV X1, X31
	0x0394B78C BL 0x3C19C94
	0x0394B790 STP X31, X31, [X19]
	0x0394B794 STR X31, [X19 + 0x10]
	0x0394B798 LDP X20, X19, [X31 + 0x70]
	0x0394B79C LDP X22, X21, [X31 + 0x60]
	0x0394B7A0 LDP X24, X23, [X31 + 0x50]
	0x0394B7A4 LDP X30, X25, [X31 + 0x40]
	0x0394B7A8 LDP D9, D8, [X31 + 0x30]
	0x0394B7AC LDR V10, [X31 + 0x20]
	0x0394B7B0 ADD X31, X31, 0x80
	0x0394B7B4 RET
	0x0394B7B8 BL 0x1C16F28
	0x0394B7BC BL 0x1C16F20
	0x0394B7C0 MOV X1, X31
	0x0394B7C4 B 0x33BDD8C
	0x0394B7C8 LDRB W0, [X0 + 0x24]
	0x0394B7CC RET
	0x0394B7D0 AND W8, W1, 0x1
	0x0394B7D4 STRB W8, [X0 + 0x24]
	0x0394B7D8 RET
	0x0394B7DC STP X30, X21, [X31 - 0x20]!
	0x0394B7E0 STP X20, X19, [X31 + 0x10]
	0x0394B7E4 ADRP X21, 0xA96000
	0x0394B7E8 LDRB W8, [X21 + 0x987]
	0x0394B7EC MOV X19, X1
	0x0394B7F0 MOV X20, X0
	0x0394B7F4 TBNZ X8, 0x0, 0x394B80C
	0x0394B7F8 ADRP X0, 0x804000
	0x0394B7FC LDR X0, [X0 + 0x158]
	0x0394B800 BL 0x1C16CF4
	0x0394B804 MOVZ W8, 0x1
	0x0394B808 STRB W8, [X21 + 0x987]
	0x0394B80C CBZ X19, 0x394B87C
	0x0394B810 ADRP X8, 0x804000
	0x0394B814 LDR X8, [X8 + 0x158]
	0x0394B818 LDR X9, [X19]
	0x0394B81C LDR X8, [X8]
	0x0394B820 LDRB W11, [X9 + 0x130]
	0x0394B824 LDRB W10, [X8 + 0x130]
	0x0394B828 CMP W11, W10
	0x0394B82C B.CC 0x394B87C
	0x0394B830 LDR X9, [X9 + 0xC8]
	0x0394B834 ADD X9, X9, X10, 0x3, LSL
	0x0394B838 LDUR X9, [X9 - 0x8]
	0x0394B83C CMP X9, X8
	0x0394B840 B.NE 0x394B87C
	0x0394B844 LDR W8, [X19 + 0x10]
	0x0394B848 STR W8, [X20 + 0x10]
	0x0394B84C LDR V0, [X19 + 0x14]
	0x0394B850 STR S0, [X20 + 0x14]
	0x0394B854 LDR W8, [X19 + 0x18]
	0x0394B858 STR W8, [X20 + 0x18]
	0x0394B85C LDRB W8, [X19 + 0x1C]
	0x0394B860 STRB W8, [X20 + 0x1C]
	0x0394B864 LDR V0, [X19 + 0x20]
	0x0394B868 STR S0, [X20 + 0x20]
	0x0394B86C LDRB W8, [X19 + 0x24]
	0x0394B870 STRB W8, [X20 + 0x24]
	0x0394B874 LDR V0, [X19 + 0x28]
	0x0394B878 STR S0, [X20 + 0x28]
	0x0394B87C LDP X20, X19, [X31 + 0x10]
	0x0394B880 LDP X30, X21, [X31], #0x20
	0x0394B884 RET
	0x0394B888 SUB X31, X31, 0x30
	0x0394B88C STP X30, X19, [X31 + 0x20]
	0x0394B890 LDR V7, [X0 + 0x20]
	0x0394B894 MOV X19, X8
	0x0394B898 FCMP S7, 0x0
	0x0394B89C B.EQ 0x394B8B0
	0x0394B8A0 B.VS 0x394B8B0
	0x0394B8A4 ADD X8, X31, 0x8
	0x0394B8A8 BL 0x394B8D4
	0x0394B8AC B 0x394B8B8
	0x0394B8B0 ADD X8, X31, 0x8
	0x0394B8B4 BL 0x394C968
	0x0394B8B8 LDR X8, [X31 + 0x18]
	0x0394B8BC LDUR V0, [X31 + 0x8]
	0x0394B8C0 STR X8, [X19 + 0x10]
	0x0394B8C4 STR V0, [X19]
	0x0394B8C8 LDP X30, X19, [X31 + 0x20]
	0x0394B8CC ADD X31, X31, 0x30
	0x0394B8D0 RET
	0x0394B8D4 SUB X31, X31, 0x190
	0x0394B8D8 STP D15, D14, [X31 + 0xF0]
	0x0394B8DC STP D13, D12, [X31 + 0x100]
	0x0394B8E0 STP D11, D10, [X31 + 0x110]
	0x0394B8E4 STP D9, D8, [X31 + 0x120]
	0x0394B8E8 STP X29, X30, [X31 + 0x130]
	0x0394B8EC STP X28, X27, [X31 + 0x140]
	0x0394B8F0 STP X26, X25, [X31 + 0x150]
	0x0394B8F4 STP X24, X23, [X31 + 0x160]
	0x0394B8F8 STP X22, X21, [X31 + 0x170]
	0x0394B8FC STP X20, X19, [X31 + 0x180]
	0x0394B900 STP S3, S4, [X31 + 0x48]
	0x0394B904 STP S1, S2, [X31 + 0x30]
	0x0394B908 STR S0, [X31 + 0x2C]
	0x0394B90C STP X8, X1, [X31 + 0x10]
	0x0394B910 ADRP X20, 0xA96000
	0x0394B914 ADRP X19, 0x7AF000
	0x0394B918 LDRB W8, [X20 + 0x989]
	0x0394B91C LDR X19, [X19 + 0x4B8]
	0x0394B920 MOV V8.16B, V6.16B
	0x0394B924 MOV V9.16B, V5.16B
	0x0394B928 MOV X21, X0
	0x0394B92C TBNZ X8, 0x0, 0x394B9A4
	0x0394B930 ADRP X0, 0x803000
	0x0394B934 LDR X0, [X0 + 0xBD0]
	0x0394B938 BL 0x1C16CF4
	0x0394B93C ADRP X0, 0x803000
	0x0394B940 LDR X0, [X0 + 0xBD8]
	0x0394B944 BL 0x1C16CF4
	0x0394B948 ADRP X0, 0x803000
	0x0394B94C LDR X0, [X0 + 0xBE0]
	0x0394B950 BL 0x1C16CF4
	0x0394B954 ADRP X0, 0x803000
	0x0394B958 LDR X0, [X0 + 0x3F0]
	0x0394B95C BL 0x1C16CF4
	0x0394B960 ADRP X0, 0x803000
	0x0394B964 LDR X0, [X0 + 0x560]
	0x0394B968 BL 0x1C16CF4
	0x0394B96C ADRP X0, 0x7A9000
	0x0394B970 LDR X0, [X0 + 0xE58]
	0x0394B974 BL 0x1C16CF4
	0x0394B978 ADRP X0, 0x7AF000
	0x0394B97C LDR X0, [X0 + 0x4B8]
	0x0394B980 BL 0x1C16CF4
	0x0394B984 ADRP X0, 0x7AA000
	0x0394B988 LDR X0, [X0 + 0x9B0]
	0x0394B98C BL 0x1C16CF4
	0x0394B990 ADRP X0, 0x803000
	0x0394B994 LDR X0, [X0 + 0xF88]
	0x0394B998 BL 0x1C16CF4
	0x0394B99C MOVZ W8, 0x1
	0x0394B9A0 STRB W8, [X20 + 0x989]
	0x0394B9A4 LDP S0, S1, [X31 + 0x2C]
	0x0394B9A8 LDR V2, [X31 + 0x34]
	0x0394B9AC MOV X0, X31
	0x0394B9B0 BL 0x390B3C8
	0x0394B9B4 LDR X9, [X19]
	0x0394B9B8 MOV V6.16B, V1.16B
	0x0394B9BC LDR V1, [X21 + 0x20]
	0x0394B9C0 LDR V3, [X21 + 0x28]
	0x0394B9C4 ORR W8, W31, 0x80000001
	0x0394B9C8 FCMP S0, S2
	0x0394B9CC FMOV S5, W8
	0x0394B9D0 LDR X8, [X9 + 0xB8]
	0x0394B9D4 FCSEL S0, S0, S2, MI
	0x0394B9D8 STR S1, [X31 + 0x28]
	0x0394B9DC LDR V1, [X21 + 0x14]
	0x0394B9E0 FADD S2, S0, S5
	0x0394B9E4 FCMP S3, S2
	0x0394B9E8 FMOV S4, W31
	0x0394B9EC LDR W10, [X21 + 0x10]
	0x0394B9F0 FCSEL S2, S2, S3, GT
	0x0394B9F4 FCMP S3, 0x0
	0x0394B9F8 LDR V15, [X8]
	0x0394B9FC LDR W8, [X21 + 0x18]
	0x0394BA00 FCSEL S4, S2, S4, PL
	0x0394BA04 FABS S11, S6
	0x0394BA08 FSUB S0, S0, S4
	0x0394BA0C FCMP S1, S11
	0x0394BA10 STR S0, [X31 + 0x44]
	0x0394BA14 FCSEL S0, S1, S11, MI
	0x0394BA18 STR S6, [X31 + 0x70]
	0x0394BA1C STR W10, [X31 + 0x84]
	0x0394BA20 CBNZ W10, 0x394BA9C
	0x0394BA24 ADRP X9, 0xFFFFFFFFFD19F000
	0x0394BA28 LDR V2, [X9 + 0x330]
	0x0394BA2C FMUL S2, S1, S2
	0x0394BA30 FCMP S0, S2
	0x0394BA34 B.LE 0x394BA9C
	0x0394BA38 LDR V2, [X31 + 0x70]
	0x0394BA3C MOVZ W8, 0x1
	0x0394BA40 FCMP S2, 0x0
	0x0394BA44 B.EQ 0x394BA9C
	0x0394BA48 B.VS 0x394BA9C
	0x0394BA4C MOVZ W8, 0x7F800000
	0x0394BA50 FDIV S1, S11, S1
	0x0394BA54 FMOV S2, W8
	0x0394BA58 FCVTZS W9, S1
	0x0394BA5C FCMP S1, S2
	0x0394BA60 MOVZ W8, 0x80000000
	0x0394BA64 CSEL W8, W8, W9, EQ
	0x0394BA68 CMP W8, 0x1
	0x0394BA6C SCVTF S2, W8
	0x0394BA70 B.LT 0x394BA84
	0x0394BA74 LDRB W9, [X21 + 0x1C]
	0x0394BA78 CBZ W9, 0x394BA84
	0x0394BA7C FDIV S0, S11, S2
	0x0394BA80 B 0x394BA9C
	0x0394BA84 ADRP X9, 0xFFFFFFFFFD19F000
	0x0394BA88 LDR V3, [X9 + 0x410]
	0x0394BA8C FSUB S1, S1, S2
	0x0394BA90 FCMP S1, S3
	0x0394BA94 CSET W9, GT
	0x0394BA98 ADD W8, W8, W9
	0x0394BA9C LDRB W9, [X21 + 0x24]
	0x0394BAA0 CMP W8, 0x101
	0x0394BAA4 MOVZ W10, 0x100
	0x0394BAA8 STP S9, S8, [X31 + 0x20]
	0x0394BAAC STR X21, [X31 + 0x8]
	0x0394BAB0 STR W9, [X31 + 0x78]
	0x0394BAB4 CSEL W19, W8, W10, LT
	0x0394BAB8 ADRP X8, 0x7AA000
	0x0394BABC LDR X8, [X8 + 0x9B0]
	0x0394BAC0 MOVZ W9, 0x3B800000
	0x0394BAC4 FMOV S1, W9
	0x0394BAC8 FMUL S1, S11, S1
	0x0394BACC MOVZ W11, 0x4
	0x0394BAD0 MOVZ W9, 0x3
	0x0394BAD4 LDR X0, [X8]
	0x0394BAD8 FCSEL S0, S0, S1, LT
	0x0394BADC FCMP S4, S15
	0x0394BAE0 CSEL W8, W9, W11, MI
	0x0394BAE4 MUL W8, W19, W8
	0x0394BAE8 ADD W1, W8, W19, 0x2, LSL
	0x0394BAEC STR S0, [X31 + 0x74]
	0x0394BAF0 STR S4, [X31 + 0x6C]
	0x0394BAF4 BL 0x1C16D6C
	0x0394BAF8 ADRP X8, 0x803000
	0x0394BAFC LDR X8, [X8 + 0x3F0]
	0x0394BB00 MOV X25, X0
	0x0394BB04 UBFM W1, W19, 0x1F, 0x1E
	0x0394BB08 STR W1, [X31 + 0x50]
	0x0394BB0C LDR X0, [X8]
	0x0394BB10 BL 0x1C16D6C
	0x0394BB14 ADRP X8, 0xFFFFFFFFFD19F000
	0x0394BB18 LDR V1, [X31 + 0x28]
	0x0394BB1C LDR V2, [X31 + 0x6C]
	0x0394BB20 LDR V0, [X8 + 0x104]
	0x0394BB24 LDR V3, [X31 + 0x44]
	0x0394BB28 FABS S1, S1
	0x0394BB2C MOV X27, X0
	0x0394BB30 CMP W19, 0x1
	0x0394BB34 FADD S3, S2, S3
	0x0394BB38 FMUL S0, S1, S0
	0x0394BB3C SCVTF S12, W19
	0x0394BB40 MOV W29, W31
	0x0394BB44 STR S0, [X31 + 0x88]
	0x0394BB48 STP S11, S12, [X31 + 0x7C]
	0x0394BB4C STR S3, [X31 + 0x5C]
	0x0394BB50 STR W19, [X31 + 0x40]
	0x0394BB54 B.LT 0x394C004
	0x0394BB58 FMOV S0, W31
	0x0394BB5C FCMP S2, S15
	0x0394BB60 MOVZ W8, 0x8
	0x0394BB64 MOVZ W9, 0x7
	0x0394BB68 MOV W20, W31
	0x0394BB6C SUB W10, W31, W19
	0x0394BB70 MOVZ W23, 0x1
	0x0394BB74 FMUL S1, S2, S0
	0x0394BB78 FMUL S9, S3, S0
	0x0394BB7C CSEL W8, W9, W8, MI
	0x0394BB80 STR S1, [X31 + 0x94]
	0x0394BB84 STP W8, W10, [X31 + 0x8C]
	0x0394BB88 STR X25, [X31 + 0x60]
	0x0394BB8C SUB W8, W23, 0x1
	0x0394BB90 SCVTF S3, W8
	0x0394BB94 LDR W8, [X31 + 0x84]
	0x0394BB98 SCVTF S2, W23
	0x0394BB9C FDIV S1, S3, S12
	0x0394BBA0 FDIV S0, S2, S12
	0x0394BBA4 CBZ W8, 0x394BBB4
	0x0394BBA8 FMUL S10, S11, S1
	0x0394BBAC FMUL S8, S11, S0
	0x0394BBB0 B 0x394BBCC
	0x0394BBB4 LDR W8, [X31 + 0x90]
	0x0394BBB8 LDR V4, [X31 + 0x74]
	0x0394BBBC ADDS W31, W8, W23
	0x0394BBC0 FMUL S2, S4, S2
	0x0394BBC4 FMUL S10, S4, S3
	0x0394BBC8 FCSEL S8, S11, S2, EQ
	0x0394BBCC LDR V2, [X31 + 0x88]
	0x0394BBD0 ADD X0, X31, 0xBC
	0x0394BBD4 ADD X1, X31, 0xB8
	0x0394BBD8 FMUL S13, S2, S1
	0x0394BBDC FMUL S14, S2, S0
	0x0394BBE0 MOV V0.16B, V13.16B
	0x0394BBE4 BL 0x3EB1BC0
	0x0394BBE8 LDP S12, S11, [X31 + 0xB8]
	0x0394BBEC ADD X0, X31, 0xB4
	0x0394BBF0 ADD X1, X31, 0xB0
	0x0394BBF4 MOV V0.16B, V14.16B
	0x0394BBF8 BL 0x3EB1BC0
	0x0394BBFC CBZ X25, 0x394C964
	0x0394BC00 LDR W8, [X25 + 0x18]
	0x0394BC04 LDR V6, [X31 + 0x6C]
	0x0394BC08 LDR V7, [X31 + 0x5C]
	0x0394BC0C MOVZ W14, 0xC
	0x0394BC10 CMP W29, W8
	0x0394BC14 B.CS 0x394C960
	0x0394BC18 LDR V3, [X31 + 0x94]
	0x0394BC1C SXTW X8, W29
	0x0394BC20 FNEG S2, S12
	0x0394BC24 MADD X8, X8, X14, X25
	0x0394BC28 LDP S1, S0, [X31 + 0xB0]
	0x0394BC2C FMUL S4, S6, S11
	0x0394BC30 FMUL S5, S6, S2
	0x0394BC34 STR S3, [X8 + 0x24]!
	0x0394BC38 STUR S5, [X8 - 0x4]
	0x0394BC3C STR S4, [X8 + 0x4]
	0x0394BC40 LDR W9, [X25 + 0x18]
	0x0394BC44 MOV X13, X29
	0x0394BC48 ADD W26, W13, 0x1
	0x0394BC4C CMP W26, W9
	0x0394BC50 B.CS 0x394C960
	0x0394BC54 SXTW X9, W26
	0x0394BC58 MADD X9, X9, X14, X25
	0x0394BC5C FMUL S3, S7, S2
	0x0394BC60 FMUL S2, S7, S11
	0x0394BC64 STR S9, [X9 + 0x24]!
	0x0394BC68 STUR S3, [X9 - 0x4]
	0x0394BC6C STR S2, [X9 + 0x4]
	0x0394BC70 LDR W10, [X25 + 0x18]
	0x0394BC74 LDR V12, [X31 + 0x80]
	0x0394BC78 MOV X29, X27
	0x0394BC7C ADD W27, W13, 0x2
	0x0394BC80 CMP W27, W10
	0x0394BC84 B.CS 0x394C960
	0x0394BC88 LDR V16, [X31 + 0x94]
	0x0394BC8C SXTW X10, W27
	0x0394BC90 MADD X10, X10, X14, X25
	0x0394BC94 ADD W21, W13, 0x3
	0x0394BC98 STR S16, [X10 + 0x24]!
	0x0394BC9C STUR S5, [X10 - 0x4]
	0x0394BCA0 STR S4, [X10 + 0x4]
	0x0394BCA4 LDR W11, [X25 + 0x18]
	0x0394BCA8 CMP W21, W11
	0x0394BCAC B.CS 0x394C960
	0x0394BCB0 SXTW X11, W21
	0x0394BCB4 MADD X11, X11, X14, X25
	0x0394BCB8 STR S9, [X11 + 0x24]!
	0x0394BCBC STUR S3, [X11 - 0x4]
	0x0394BCC0 STR S2, [X11 + 0x4]
	0x0394BCC4 LDR W12, [X25 + 0x18]
	0x0394BCC8 CMP W13, W12
	0x0394BCCC B.CS 0x394C960
	0x0394BCD0 CMP W26, W12
	0x0394BCD4 STR S10, [X8]
	0x0394BCD8 B.CS 0x394C960
	0x0394BCDC CMP W27, W12
	0x0394BCE0 STR S10, [X9]
	0x0394BCE4 B.CS 0x394C960
	0x0394BCE8 CMP W21, W12
	0x0394BCEC STR S8, [X10]
	0x0394BCF0 B.CS 0x394C960
	0x0394BCF4 MOV X24, X13
	0x0394BCF8 ADD W19, W24, 0x4
	0x0394BCFC CMP W19, W12
	0x0394BD00 STR S8, [X11]
	0x0394BD04 B.CS 0x394C960
	0x0394BD08 SXTW X8, W19
	0x0394BD0C MADD X8, X8, X14, X25
	0x0394BD10 STP S5, S8, [X8 + 0x20]
	0x0394BD14 STR S4, [X8 + 0x28]
	0x0394BD18 LDR W8, [X25 + 0x18]
	0x0394BD1C CMP W21, W8
	0x0394BD20 B.CS 0x394C960
	0x0394BD24 MOV X9, X24
	0x0394BD28 ADD W28, W9, 0x5
	0x0394BD2C CMP W28, W8
	0x0394BD30 B.CS 0x394C960
	0x0394BD34 SXTW X8, W28
	0x0394BD38 MADD X8, X8, X14, X25
	0x0394BD3C STP S3, S8, [X8 + 0x20]
	0x0394BD40 STR S2, [X8 + 0x28]
	0x0394BD44 LDR W8, [X25 + 0x18]
	0x0394BD48 ADD W22, W9, 0x6
	0x0394BD4C CMP W22, W8
	0x0394BD50 B.CS 0x394C960
	0x0394BD54 SXTW X8, W22

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X29
	011 Move [X31+184], X30
	012 Move [X31+192], X28
	013 Move [X31+200], X27
	014 Move [X31+208], X26
	015 Move [X31+216], X25
	016 Move [X31+224], X24
	017 Move [X31+232], X23
	018 Move [X31+240], X22
	019 Move [X31+248], X21
	020 Move [X31+256], X20
	021 Move [X31+264], X19
	022 Move [X31+48], S5
	023 Move [X31+56], S6
	024 Move [X31+40], S3
	025 Move [X31+48], S4
	026 Move [X31+56], X1
	027 Move [X31+32], X8
	028 Move X19, 0xA97000
	029 Move X25, 0x805000
	030 Move W8, [X19+2435]
	031 Move X25, [X25+328]
	032 Move V12, V2
	033 Move V13, V1
	034 Move V14, V0
	035 Move X21, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {66}
	040 Move X0, 0x804000
	041 Move X0, [X0+1008]
	042 Call 0x1C17CF4
	043 Move X0, 0x804000
	044 Move X0, [X0+1376]
	045 Call 0x1C17CF4
	046 Move X0, 0x7AA000
	047 Move X0, [X0+3672]
	048 Call 0x1C17CF4
	049 Move X0, 0x804000
	050 Move X0, [X0+3168]
	051 Call 0x1C17CF4
	052 Move X0, 0x804000
	053 Move X0, [X0+3176]
	054 Call 0x1C17CF4
	055 Move X0, 0x805000
	056 Move X0, [X0+328]
	057 Call 0x1C17CF4
	058 Move X0, 0x804000
	059 Move X0, [X0+1464]
	060 Call 0x1C17CF4
	061 Move X0, 0x7AB000
	062 Move X0, [X0+2480]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+2435], W8
	066 Move X0, [X25]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X25]
	072 Move X8, [X0+184]
	073 Move X8, [X8+8]
	074 Compare X8, 0
	075 JumpIfEqual {595}
	076 Move X9, 0x7AB000
	077 Move X9, [X9+2480]
	078 Move W1, [X8+24]
	079 Move X29, 0x804000
	080 Move X26, 0x804000
	081 Move X0, [X9]
	082 Move X29, [X29+3168]
	083 Move X26, [X26+3176]
	084 Call 0x1C17D6C
	085 Move X24, 0x7A9000
	086 Move X8, -48627712
	087 Move X24, [X24+1448]
	088 Move V15, [X8+380]
	089 Move X22, X0
	090 Move W19, 2
	091 Move W20, 12
	092 Move X27, 0xA8E000
	093 NotImplemented "Instruction MOVI not yet implemented."
	094 Move S9, 0.5
	095 Move X0, [X25]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X25]
	101 Move X9, [X0+184]
	102 Move X8, [X9+8]
	103 Compare X8, 0
	104 JumpIfEqual {595}
	105 Move W10, [X8+24]
	106 Subtract W23, W19, 2
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W10, [X0+224]
	109 Compare W10, 0
	110 JumpIfNotEqual {117}
	111 Call 0x1C17DFC
	112 Move X8, [X25]
	113 Move X9, [X8+184]
	114 Move X8, [X9+8]
	115 Compare X8, 0
	116 JumpIfEqual {595}
	117 Move W10, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Compare X9, 0
	121 JumpIfEqual {595}
	122 Move X28, W23
	123 Add X8, X8, X28
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W10, [X9+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Move W9, [X27+1925]
	129 Move V11, [X8+32]
	130 Move V10, [X8+40]
	131 Compare W9, 0
	132 JumpIfNotEqual {137}
	133 Move X0, X24
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X27+1925], W8
	137 Move X0, [X24]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 Invalid "Jump target not found in method."
	141 Call 0x1C17DFC
	142 NotImplemented "Instruction INVALID not yet implemented."
	143 NotImplemented "Instruction FADDP not yet implemented."
	144 Multiply S1, S10, S10
	145 Add S0, S1, S0
	146 NotImplemented "Instruction FSQRT not yet implemented."
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	149 NotImplemented "Instruction INVALID not yet implemented."
	150 NotImplemented "Instruction FDIV not yet implemented."
	151 Move X8, 0xA8E000
	152 Move W8, [X8+1923]
	153 Compare W8, 0
	154 JumpIfNotEqual {161}
	155 Move X0, 0x7A9000
	156 Move X0, [X0+1440]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move X9, 0xA8E000
	160 Move [X9+1923], W8
	161 Move X8, 0x7A9000
	162 Move X8, [X8+1440]
	163 Move X8, [X8]
	164 Move X8, [X8+184]
	165 Move V0, [X8]
	166 Move V1, [X8+8]
	167 Compare X22, 0
	168 JumpIfEqual {595}
	169 Move W8, [X22+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction INVALID not yet implemented."
	172 Multiply S1, S1, S9
	173 NotImplemented "Instruction MADD not yet implemented."
	174 Move [X8+32], D0
	175 Move [X8+40], S1
	176 Move X8, [X25]
	177 Move X9, [X8+184]
	178 Move X8, [X9+8]
	179 Compare X8, 0
	180 JumpIfEqual {595}
	181 Move W10, [X8+24]
	182 Add W23, W23, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X9, [X9]
	185 Compare X9, 0
	186 JumpIfEqual {595}
	187 Subtract W10, W19, 1
	188 Move X28, W10
	189 Add X8, X8, X28
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Move W10, [X9+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction MADD not yet implemented."
	194 Move W9, [X27+1925]
	195 Move V11, [X8+32]
	196 Move V10, [X8+40]
	197 Compare W9, 0
	198 JumpIfNotEqual {203}
	199 Move X0, X24
	200 Call 0x1C17CF4
	201 Move W8, 1
	202 Move [X27+1925], W8
	203 Move X0, [X24]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 Invalid "Jump target not found in method."
	207 Call 0x1C17DFC
	208 NotImplemented "Instruction INVALID not yet implemented."
	209 NotImplemented "Instruction FADDP not yet implemented."
	210 Multiply S1, S10, S10
	211 Add S0, S1, S0
	212 NotImplemented "Instruction FSQRT not yet implemented."
	213 NotImplemented "Instruction FCMP not yet implemented."
	214 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	215 NotImplemented "Instruction INVALID not yet implemented."
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 Move X8, 0xA8E000
	218 Move W8, [X8+1923]
	219 Compare W8, 0
	220 JumpIfNotEqual {227}
	221 Move X0, 0x7A9000
	222 Move X0, [X0+1440]
	223 Call 0x1C17CF4
	224 Move W8, 1
	225 Move X9, 0xA8E000
	226 Move [X9+1923], W8
	227 Move X8, 0x7A9000
	228 Move X8, [X8+1440]
	229 Move X8, [X8]
	230 Move X8, [X8+184]
	231 Move V0, [X8]
	232 Move V1, [X8+8]
	233 Move W8, [X22+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Multiply S1, S1, S9
	236 NotImplemented "Instruction INVALID not yet implemented."
	237 NotImplemented "Instruction MADD not yet implemented."
	238 Move [X8+32], D0
	239 Move [X8+40], S1
	240 Move X8, [X25]
	241 Move X9, [X8+184]
	242 Move X8, [X9+8]
	243 Compare X8, 0
	244 JumpIfEqual {595}
	245 Move W10, [X8+24]
	246 Add W23, W23, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X9, [X9]
	249 Compare X9, 0
	250 JumpIfEqual {595}
	251 Move X28, W19
	252 Add X8, X8, X28
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Move W10, [X9+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction MADD not yet implemented."
	257 Move W9, [X27+1925]
	258 Move V11, [X8+32]
	259 Move V10, [X8+40]
	260 Compare W9, 0
	261 JumpIfNotEqual {266}
	262 Move X0, X24
	263 Call 0x1C17CF4
	264 Move W8, 1
	265 Move [X27+1925], W8
	266 Move X0, [X24]
	267 Move W8, [X0+224]
	268 Compare W8, 0
	269 Invalid "Jump target not found in method."
	270 Call 0x1C17DFC
	271 NotImplemented "Instruction INVALID not yet implemented."
	272 NotImplemented "Instruction FADDP not yet implemented."
	273 Multiply S1, S10, S10
	274 Add S0, S1, S0
	275 NotImplemented "Instruction FSQRT not yet implemented."
	276 NotImplemented "Instruction FCMP not yet implemented."
	277 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	278 NotImplemented "Instruction INVALID not yet implemented."
	279 NotImplemented "Instruction FDIV not yet implemented."
	280 Move X8, 0xA8E000
	281 Move W8, [X8+1923]
	282 Compare W8, 0
	283 JumpIfNotEqual {290}
	284 Move X0, 0x7A9000
	285 Move X0, [X0+1440]
	286 Call 0x1C17CF4
	287 Move W8, 1
	288 Move X9, 0xA8E000
	289 Move [X9+1923], W8
	290 Move X8, 0x7A9000
	291 Move X8, [X8+1440]
	292 Move X8, [X8]
	293 Move X8, [X8+184]
	294 Move V0, [X8]
	295 Move V1, [X8+8]
	296 Move W8, [X22+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Multiply S1, S1, S9
	299 NotImplemented "Instruction INVALID not yet implemented."
	300 NotImplemented "Instruction MADD not yet implemented."
	301 Add W19, W19, 3
	302 Move [X8+32], D0
	303 Move [X8+40], S1
	304 Move W8, [X21+16]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move W19, 1
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Move S0, 0.5
	312 Move X0, X22
	313 Call Sphere.SubdivideIcosahedron, X0, V0
	314 Move W8, [X21+16]
	315 Move X22, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, [X25]
	318 Add W19, W19, 1
	319 Compare X22, 0
	320 JumpIfEqual {595}
	321 Move X9, 0x804000
	322 NotImplemented "Instruction LDRSW not yet implemented."
	323 Move X9, [X9+1008]
	324 Move X0, [X9]
	325 Move W9, 0x5556
	326 NotImplemented "Instruction MOVK not yet implemented."
	327 Multiply X8, X8, X9
	328 Move X9, X8
	329 ShiftRight X9, 63
	330 And X9, X9, 0x7FFFFFFF
	331 Move X8, X8
	332 ShiftRight X8, 32
	333 And X8, X8, 0x7FFFFFFF
	334 Add W1, W8, W9
	335 Call 0x1C17D6C
	336 Move X19, 0xA97000
	337 Move W8, [X19+2365]
	338 Move X24, X0
	339 Compare W8, 0
	340 JumpIfNotEqual {346}
	341 Move X0, 0x7A9000
	342 Move X0, [X0+1440]
	343 Call 0x1C17CF4
	344 Move W8, 1
	345 Move [X19+2365], W8
	346 Move W8, [X22+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X8, 0x7A9000
	349 Move X8, [X8+1440]
	350 Move W19, W31
	351 Move W27, 12
	352 Move X8, [X8]
	353 Move X8, [X8+184]
	354 Move V8, [X8+100]
	355 Move X8, 0x7AA000
	356 Move X8, [X8+3672]
	357 Move W1, 3
	358 Move X0, [X8]
	359 Call 0x1C17D6C
	360 Compare X0, 0
	361 JumpIfEqual {595}
	362 Move W8, [X0+24]
	363 Move X23, X0
	364 Compare W8, 0
	365 JumpIfEqual {596}
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move [X23+32], W19
	368 Add W9, W19, 1
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move [X23+36], W9
	371 Add W8, W19, 2
	372 Move [X23+40], W8
	373 Move X8, 0x804000
	374 Move X8, [X8+1376]
	375 Move X0, [X8]
	376 Call 0x1C17F10
	377 Move X1, X23
	378 Move X2, X31
	379 Move X25, X0
	380 Call Face..ctor, X0, X1
	381 Compare X24, 0
	382 JumpIfEqual {595}
	383 Move W8, 0x5556
	384 NotImplemented "Instruction MOVK not yet implemented."
	385 Move W9, [X24+24]
	386 NotImplemented "Instruction SMADDL not yet implemented."
	387 Move X10, X8
	388 ShiftRight X10, 63
	389 And X10, X10, 0x7FFFFFFF
	390 Move X8, X8
	391 ShiftRight X8, 32
	392 And X8, X8, 0x7FFFFFFF
	393 Add W28, W8, W10
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Add X20, X24, W28
	396 Move [X20+32], X25
	397 Compare X25, 0
	398 JumpIfEqual {595}
	399 Move W8, [X21+24]
	400 Move W23, W31
	401 Move [X25+76], W31
	402 Move [X25+24], W8
	403 Move X0, X25
	404 Move X1, X31
	405 Call Face.get_indexes, X0
	406 Compare X0, 0
	407 JumpIfEqual {595}
	408 Move X1, [X29]
	409 Call ReadOnlyCollection`1<Int32>.get_Count, X0
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move W8, [X24+24]
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move X0, [X20]
	414 Compare X0, 0
	415 JumpIfEqual {595}
	416 Move X1, X31
	417 Call Face.get_indexes, X0
	418 Compare X0, 0
	419 JumpIfEqual {595}
	420 Move X2, [X26]
	421 Move W1, W23
	422 Call ReadOnlyCollection`1<Int32>.get_Item, X0, X1
	423 Move W8, [X22+24]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 NotImplemented "Instruction SMADDL not yet implemented."
	426 Move V0, [X8+36]
	427 NotImplemented "Instruction FCMP not yet implemented."
	428 Move V8, V0
	429 Move [X21+20], W0
	430 Move W8, [X24+24]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X25, [X20]
	433 Add W23, W23, 1
	434 Compare X25, 0
	435 JumpIfNotEqual {403}
	436 Move W8, [X22+24]
	437 Add W19, W19, 3
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Compare X24, 0
	440 JumpIfEqual {595}
	441 Move W8, [X24+24]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X25, -47919104
	444 Move X19, X31
	445 Add X20, X24, 32
	446 Move W23, 12
	447 Add X25, X25, 2664
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X8, [X20]
	450 Compare X8, 0
	451 JumpIfEqual {595}
	452 Move X8, [X8+16]
	453 Compare X8, 0
	454 JumpIfEqual {595}
	455 Move W10, [X8+24]
	456 Compare W10, 0
	457 JumpIfEqual {596}
	458 NotImplemented "Instruction LDRSW not yet implemented."
	459 Move W11, [X22+24]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 NotImplemented "Instruction LDRSW not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 NotImplemented "Instruction CMP not yet implemented."
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 NotImplemented "Instruction CMP not yet implemented."
	467 NotImplemented "Instruction MADD not yet implemented."
	468 NotImplemented "Instruction MADD not yet implemented."
	469 NotImplemented "Instruction MADD not yet implemented."
	470 Move S0, [X9+32]
	471 Move S1, [X9+36]
	472 Move V2, [X9+40]
	473 Move S3, [X10+32]
	474 Move S4, [X10+36]
	475 Move V5, [X10+40]
	476 Move X9, [X8+32]
	477 Move V6, [X8+40]
	478 Move X0, X31
	479 Move [X31], X9
	480 Move [X31+8], S6
	481 Call Math.Normal, X0, X1, X2
	482 Move X0, X31
	483 Call Projection.VectorToProjectionAxis, X0
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Move W8, W0
	486 NotImplemented "Instruction ADR not yet implemented."
	487 Move W10, [X25]
	488 Add X9, X9, X10
	489 CallNoReturn X9
	490 Move W8, [X24+24]
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X8, [X20]
	493 Compare X8, 0
	494 JumpIfEqual {595}
	495 Move W9, 2
	496 Move W8, [X24+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X8, [X20]
	499 Compare X8, 0
	500 JumpIfEqual {595}
	501 Move W9, 3
	502 Move W8, [X24+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X8, [X20]
	505 Compare X8, 0
	506 JumpIfEqual {595}
	507 Move W9, 4
	508 Move W8, [X24+24]
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move X8, [X20]
	511 Compare X8, 0
	512 JumpIfEqual {595}
	513 Move W9, 5
	514 Move W8, [X24+24]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move X8, [X20]
	517 Compare X8, 0
	518 JumpIfEqual {595}
	519 Move W9, 6
	520 Move W8, [X24+24]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move X8, [X20]
	523 Compare X8, 0
	524 JumpIfEqual {595}
	525 Move W9, 7
	526 Move [X8+84], W9
	527 Move W8, [X24+24]
	528 Add X19, X19, 1
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X8, 0x804000
	531 Move X8, [X8+1464]
	532 Move X0, [X8]
	533 Call 0x1C17F10
	534 Move X1, X31
	535 Move X23, X0
	536 Call UnwrapParameters..ctor, X0
	537 Compare X23, 0
	538 JumpIfEqual {595}
	539 Move X19, [X31+56]
	540 Move W8, 0x41F00000
	541 Move [X23+20], W8
	542 Compare X19, 0
	543 JumpIfEqual {595}
	544 Move X0, X19
	545 Move X1, X22
	546 Move X2, X24
	547 Move X3, X31
	548 Move [X19+152], X23
	549 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	550 Move X8, [X21]
	551 Move S3, [X31+40]
	552 Move S4, [X31+44]
	553 Move S5, [X31+48]
	554 Move S6, [X31+52]
	555 Add X2, X31, 88
	556 Move X9, [X8+376]
	557 Move [X31+88], X31
	558 Move [X31+96], X31
	559 Move [X31+104], X31
	560 Move X3, [X8+384]
	561 Add X8, X31, 64
	562 Move X0, X21
	563 Move X1, X19
	564 Move V0, V14
	565 Move V1, V13
	566 Move V2, V12
	567 NotImplemented "Instruction BLR not yet implemented."
	568 Move X8, [X31+80]
	569 Move V0, [X31+4]
	570 Move X9, [X31+32]
	571 Move X20, [X31+256]
	572 Move X19, [X31+264]
	573 Move X22, [X31+240]
	574 Move X21, [X31+248]
	575 Move X24, [X31+224]
	576 Move X23, [X31+232]
	577 Move X26, [X31+208]
	578 Move X25, [X31+216]
	579 Move X28, [X31+192]
	580 Move X27, [X31+200]
	581 Move X29, [X31+176]
	582 Move X30, [X31+184]
	583 Move D9, [X31+160]
	584 Move D8, [X31+168]
	585 Move D11, [X31+144]
	586 Move D10, [X31+152]
	587 Move D13, [X31+128]
	588 Move D12, [X31+136]
	589 Move D15, [X31+112]
	590 Move D14, [X31+120]
	591 Move [X9+16], X8
	592 Move [X9], V0
	593 Add X31, X31, 272
	594 Return X0
	595 Call 0x1C17F20
	596 Call 0x1C17F28

Method: UnityEngine.Vector3[] SubdivideIcosahedron(UnityEngine.Vector3[] vertices, System.Single radius)

Disassembly:
	0x0394BD58 FNEG S1, S1
	0x0394BD5C MADD X8, X8, X14, X25
	0x0394BD60 FMUL S2, S7, S0
	0x0394BD64 FMUL S3, S7, S1
	0x0394BD68 STR S9, [X8 + 0x24]!
	0x0394BD6C STUR S3, [X8 - 0x4]
	0x0394BD70 STR S2, [X8 + 0x4]
	0x0394BD74 LDR W9, [X25 + 0x18]
	0x0394BD78 CMP W22, W9
	0x0394BD7C B.CS 0x394C960
	0x0394BD80 FCMP S6, S15
	0x0394BD84 STR S8, [X8]
	0x0394BD88 B.MI 0x394BDC8
	0x0394BD8C ADD W8, W24, 0x7
	0x0394BD90 CMP W8, W9
	0x0394BD94 B.CS 0x394C960
	0x0394BD98 LDR V2, [X31 + 0x94]
	0x0394BD9C SXTW X9, W8
	0x0394BDA0 MADD X8, X9, X14, X25
	0x0394BDA4 FMUL S0, S6, S0
	0x0394BDA8 FMUL S1, S6, S1
	0x0394BDAC STR S2, [X8 + 0x24]!
	0x0394BDB0 STUR S1, [X8 - 0x4]
	0x0394BDB4 STR S0, [X8 + 0x4]
	0x0394BDB8 LDR W10, [X25 + 0x18]
	0x0394BDBC CMP W9, W10
	0x0394BDC0 B.CS 0x394C960
	0x0394BDC4 STR S8, [X8]
	0x0394BDC8 ADRP X8, 0x7A9000
	0x0394BDCC LDR X8, [X8 + 0xE58]
	0x0394BDD0 MOVZ W1, 0x6
	0x0394BDD4 LDR X0, [X8]
	0x0394BDD8 BL 0x1C16D6C
	0x0394BDDC CBZ X0, 0x394C964
	0x0394BDE0 LDR W8, [X0 + 0x18]
	0x0394BDE4 MOV X25, X0
	0x0394BDE8 CBZ W8, 0x394C960
	0x0394BDEC CMP W8, 0x1
	0x0394BDF0 STR W24, [X25 + 0x20]
	0x0394BDF4 B.EQ 0x394C960
	0x0394BDF8 CMP W8, 0x2
	0x0394BDFC STR W26, [X25 + 0x24]
	0x0394BE00 B.LS 0x394C960
	0x0394BE04 CMP W8, 0x3
	0x0394BE08 STR W27, [X25 + 0x28]
	0x0394BE0C B.EQ 0x394C960
	0x0394BE10 CMP W8, 0x4
	0x0394BE14 STR W26, [X25 + 0x2C]
	0x0394BE18 B.LS 0x394C960
	0x0394BE1C CMP W8, 0x5
	0x0394BE20 STR W21, [X25 + 0x30]
	0x0394BE24 B.EQ 0x394C960
	0x0394BE28 STR W27, [X25 + 0x34]
	0x0394BE2C ADRP X8, 0x803000
	0x0394BE30 LDR X8, [X8 + 0x560]
	0x0394BE34 LDR X0, [X8]
	0x0394BE38 BL 0x1C16F10
	0x0394BE3C MOV X1, X25
	0x0394BE40 MOV X2, X31
	0x0394BE44 MOV X26, X0
	0x0394BE48 BL 0x3900368
	0x0394BE4C CBZ X29, 0x394C964
	0x0394BE50 LDR W8, [X29 + 0x18]
	0x0394BE54 LDR V0, [X31 + 0x6C]
	0x0394BE58 MOV X27, X29
	0x0394BE5C CMP W20, W8
	0x0394BE60 B.CS 0x394C960
	0x0394BE64 ADD X8, X27, W20, 0x3, SXTW
	0x0394BE68 STR X26, [X8 + 0x20]
	0x0394BE6C ADRP X8, 0x7A9000
	0x0394BE70 LDR X8, [X8 + 0xE58]
	0x0394BE74 MOV X29, X24
	0x0394BE78 FCMP S0, S15
	0x0394BE7C LDR X0, [X8]
	0x0394BE80 B.PL 0x394BEF0
	0x0394BE84 MOVZ W1, 0x3
	0x0394BE88 BL 0x1C16D6C
	0x0394BE8C CBZ X0, 0x394C964
	0x0394BE90 LDR W8, [X0 + 0x18]
	0x0394BE94 MOV X26, X0
	0x0394BE98 CBZ W8, 0x394C960
	0x0394BE9C CMP W8, 0x1
	0x0394BEA0 STR W19, [X26 + 0x20]
	0x0394BEA4 B.EQ 0x394C960
	0x0394BEA8 CMP W8, 0x2
	0x0394BEAC STR W28, [X26 + 0x24]
	0x0394BEB0 B.LS 0x394C960
	0x0394BEB4 STR W22, [X26 + 0x28]
	0x0394BEB8 ADRP X8, 0x803000
	0x0394BEBC LDR X8, [X8 + 0x560]
	0x0394BEC0 LDR X0, [X8]
	0x0394BEC4 BL 0x1C16F10
	0x0394BEC8 MOV X1, X26
	0x0394BECC MOV X2, X31
	0x0394BED0 MOV X25, X0
	0x0394BED4 BL 0x3900368
	0x0394BED8 LDR W19, [X27 + 0x18]
	0x0394BEDC ADD W8, W20, 0x1
	0x0394BEE0 CMP W8, W19
	0x0394BEE4 B.CS 0x394C960
	0x0394BEE8 ORR W21, W20, 0x1
	0x0394BEEC B 0x394BF7C
	0x0394BEF0 MOVZ W1, 0x6
	0x0394BEF4 BL 0x1C16D6C
	0x0394BEF8 CBZ X0, 0x394C964
	0x0394BEFC LDR W8, [X0 + 0x18]
	0x0394BF00 MOV X26, X0
	0x0394BF04 CBZ W8, 0x394C960
	0x0394BF08 CMP W8, 0x1
	0x0394BF0C STR W19, [X26 + 0x20]
	0x0394BF10 B.EQ 0x394C960
	0x0394BF14 CMP W8, 0x2
	0x0394BF18 STR W28, [X26 + 0x24]
	0x0394BF1C B.LS 0x394C960
	0x0394BF20 CMP W8, 0x3
	0x0394BF24 STR W22, [X26 + 0x28]
	0x0394BF28 B.EQ 0x394C960
	0x0394BF2C CMP W8, 0x4
	0x0394BF30 STR W19, [X26 + 0x2C]
	0x0394BF34 B.LS 0x394C960
	0x0394BF38 CMP W8, 0x5
	0x0394BF3C STR W22, [X26 + 0x30]
	0x0394BF40 B.EQ 0x394C960
	0x0394BF44 ADD W8, W29, 0x7
	0x0394BF48 STR W8, [X26 + 0x34]
	0x0394BF4C ADRP X8, 0x803000
	0x0394BF50 LDR X8, [X8 + 0x560]
	0x0394BF54 LDR X0, [X8]
	0x0394BF58 BL 0x1C16F10
	0x0394BF5C MOV X1, X26
	0x0394BF60 MOV X2, X31
	0x0394BF64 MOV X25, X0
	0x0394BF68 BL 0x3900368
	0x0394BF6C LDR W19, [X27 + 0x18]
	0x0394BF70 ADD W21, W20, 0x1
	0x0394BF74 CMP W21, W19
	0x0394BF78 B.CS 0x394C960
	0x0394BF7C ADRP X9, 0xFFFFFFFFFD19F000
	0x0394BF80 LDR V0, [X9 + 0x448]
	0x0394BF84 ADD X8, X27, W21, 0x3, SXTW
	0x0394BF88 STR X25, [X8 + 0x20]
	0x0394BF8C FADD S1, S13, S14
	0x0394BF90 FMOV S2, -0.5
	0x0394BF94 MOVZ W8, 0x43B40000
	0x0394BF98 FMUL S1, S1, S2
	0x0394BF9C FMOV S13, W8
	0x0394BFA0 FMUL S0, S1, S0
	0x0394BFA4 MOV V1.16B, V13.16B
	0x0394BFA8 BL 0x3EB1BA0
	0x0394BFAC FADD S1, S0, S13
	0x0394BFB0 FCMP S0, 0x0
	0x0394BFB4 FCSEL S0, S1, S0, MI
	0x0394BFB8 CMP W21, W19
	0x0394BFBC B.CS 0x394C960
	0x0394BFC0 SXTW X8, W21
	0x0394BFC4 ADD X8, X27, X8, 0x3, LSL
	0x0394BFC8 LDR X8, [X8 + 0x20]
	0x0394BFCC LDR X25, [X31 + 0x60]
	0x0394BFD0 LDR V11, [X31 + 0x7C]
	0x0394BFD4 LDR V2, [X31 + 0x6C]
	0x0394BFD8 LDR V3, [X31 + 0x5C]
	0x0394BFDC CBZ X8, 0x394C964
	0x0394BFE0 STR S0, [X8 + 0x34]
	0x0394BFE4 LDR W8, [X31 + 0x8C]
	0x0394BFE8 ADD W23, W23, 0x1
	0x0394BFEC ADD W20, W20, 0x2
	0x0394BFF0 ADD W29, W29, W8
	0x0394BFF4 LDR W8, [X31 + 0x90]
	0x0394BFF8 ADD W8, W8, W23
	0x0394BFFC CMP W8, 0x1
	0x0394C000 B.NE 0x394BB8C
	0x0394C004 LDR W8, [X31 + 0x78]
	0x0394C008 CBZ W8, 0x394C6AC
	0x0394C00C LDR W10, [X31 + 0x40]
	0x0394C010 LDR W11, [X31 + 0x50]
	0x0394C014 FCMP S2, S15
	0x0394C018 FCSEL S14, S3, S2, MI
	0x0394C01C UBFM W8, W10, 0x1E, 0x1D
	0x0394C020 ADD W9, W10, W10, 0x1, LSL
	0x0394C024 SUB W10, W31, W10
	0x0394C028 ADD W8, W9, W8
	0x0394C02C SUB W11, W11, 0x1
	0x0394C030 STR W10, [X31 + 0x8C]
	0x0394C034 CSET W10, MI
	0x0394C038 SUB W8, W8, 0x3
	0x0394C03C MOVZ W22, 0xC
	0x0394C040 STR W10, [X31 + 0x90]
	0x0394C044 STP W8, W11, [X31 + 0x38]
	0x0394C048 STR X27, [X31 + 0x50]
	0x0394C04C ADRP X8, 0x7A9000
	0x0394C050 LDR X8, [X8 + 0x9B0]
	0x0394C054 LDR W1, [X31 + 0x38]
	0x0394C058 LDR X0, [X8]
	0x0394C05C BL 0x1C16D6C
	0x0394C060 ADRP X8, 0x802000
	0x0394C064 LDR X8, [X8 + 0x3F0]
	0x0394C068 LDR W1, [X31 + 0x3C]
	0x0394C06C MOV X27, X0
	0x0394C070 LDR X8, [X8]
	0x0394C074 MOV X0, X8
	0x0394C078 BL 0x1C16D6C
	0x0394C07C LDR W8, [X31 + 0x40]
	0x0394C080 MOV X28, X0
	0x0394C084 CMP W8, 0x0
	0x0394C088 B.LE 0x394C4E4
	0x0394C08C LDR W9, [X31 + 0x90]
	0x0394C090 FMOV S0, W31
	0x0394C094 STR X25, [X31 + 0x60]
	0x0394C098 MOV W19, W31
	0x0394C09C MOV W20, W31
	0x0394C0A0 MOV W25, W31
	0x0394C0A4 FMUL S9, S14, S0
	0x0394C0A8 ADD W23, W9, 0x1
	0x0394C0AC MUL W8, W9, W8
	0x0394C0B0 STR W8, [X31 + 0x78]
	0x0394C0B4 CMP W25, 0x1
	0x0394C0B8 CSINC W8, W25, W31, HI
	0x0394C0BC SCVTF S2, W8
	0x0394C0C0 LDR W8, [X31 + 0x84]
	0x0394C0C4 ADD W24, W25, 0x1
	0x0394C0C8 SCVTF S0, W24
	0x0394C0CC FDIV S1, S0, S12
	0x0394C0D0 CBZ W8, 0x394C0E8
	0x0394C0D4 FDIV S0, S2, S12
	0x0394C0D8 LDR V2, [X31 + 0x7C]
	0x0394C0DC FMUL S10, S2, S0
	0x0394C0E0 FMUL S15, S2, S1
	0x0394C0E4 B 0x394C108
	0x0394C0E8 LDR V3, [X31 + 0x74]
	0x0394C0EC LDR W8, [X31 + 0x8C]
	0x0394C0F0 FMUL S10, S3, S2
	0x0394C0F4 LDR V2, [X31 + 0x70]
	0x0394C0F8 ADD W8, W8, W25
	0x0394C0FC FMUL S0, S3, S0
	0x0394C100 ADDS W31, W8, 0x1
	0x0394C104 FCSEL S15, S2, S0, EQ
	0x0394C108 LDR V2, [X31 + 0x88]
	0x0394C10C SCVTF S0, W25
	0x0394C110 FDIV S0, S0, S12
	0x0394C114 ADD X0, X31, 0xAC
	0x0394C118 FMUL S0, S2, S0
	0x0394C11C ADD X1, X31, 0xA8
	0x0394C120 FMUL S13, S2, S1
	0x0394C124 BL 0x3EB1BC0
	0x0394C128 LDP S11, S8, [X31 + 0xA8]
	0x0394C12C ADD X0, X31, 0xA4
	0x0394C130 ADD X1, X31, 0xA0
	0x0394C134 MOV V0.16B, V13.16B
	0x0394C138 BL 0x3EB1BC0
	0x0394C13C CBZ X27, 0x394C964
	0x0394C140 LDR W8, [X27 + 0x18]
	0x0394C144 CMP W19, W8
	0x0394C148 B.CS 0x394C960
	0x0394C14C SXTW X8, W19
	0x0394C150 FNEG S2, S11
	0x0394C154 MADD X8, X8, X22, X27
	0x0394C158 FMUL S13, S14, S8
	0x0394C15C LDP S1, S0, [X31 + 0xA0]
	0x0394C160 FMUL S8, S14, S2
	0x0394C164 STR S9, [X8 + 0x24]!
	0x0394C168 STUR S8, [X8 - 0x4]
	0x0394C16C STR S13, [X8 + 0x4]
	0x0394C170 LDR W10, [X27 + 0x18]
	0x0394C174 ADD W9, W19, 0x1
	0x0394C178 CMP W9, W10
	0x0394C17C B.CS 0x394C960
	0x0394C180 SXTW X11, W9
	0x0394C184 FNEG S1, S1
	0x0394C188 MADD X9, X11, X22, X27
	0x0394C18C FMUL S12, S14, S0
	0x0394C190 FMUL S11, S14, S1
	0x0394C194 STR S9, [X9 + 0x24]!
	0x0394C198 STUR S11, [X9 - 0x4]
	0x0394C19C STR S12, [X9 + 0x4]
	0x0394C1A0 LDR W12, [X27 + 0x18]
	0x0394C1A4 ADD W10, W19, 0x2
	0x0394C1A8 CMP W10, W12
	0x0394C1AC B.CS 0x394C960
	0x0394C1B0 SXTW X12, W10
	0x0394C1B4 MADD X10, X12, X22, X27
	0x0394C1B8 STR S9, [X10 + 0x24]!
	0x0394C1BC STUR S8, [X10 - 0x4]
	0x0394C1C0 STR S13, [X10 + 0x4]
	0x0394C1C4 LDR W14, [X27 + 0x18]
	0x0394C1C8 ADD W13, W19, 0x3
	0x0394C1CC CMP W13, W14
	0x0394C1D0 B.CS 0x394C960
	0x0394C1D4 SXTW X14, W13
	0x0394C1D8 MADD X13, X14, X22, X27
	0x0394C1DC STR S9, [X13 + 0x24]!
	0x0394C1E0 STUR S11, [X13 - 0x4]
	0x0394C1E4 STR S12, [X13 + 0x4]
	0x0394C1E8 LDR W15, [X27 + 0x18]
	0x0394C1EC CMP W19, W15
	0x0394C1F0 B.CS 0x394C960
	0x0394C1F4 CMP W11, W15
	0x0394C1F8 STR W31, [X8]
	0x0394C1FC B.CS 0x394C960
	0x0394C200 CMP W12, W15
	0x0394C204 STR W31, [X9]
	0x0394C208 B.CS 0x394C960
	0x0394C20C CMP W14, W15
	0x0394C210 STR S10, [X10]
	0x0394C214 B.CS 0x394C960
	0x0394C218 STR S15, [X13]
	0x0394C21C ADRP X8, 0x7A8000
	0x0394C220 LDR X8, [X8 + 0xE58]
	0x0394C224 MOVZ W1, 0x6
	0x0394C228 MOV X21, X28
	0x0394C22C LDR X0, [X8]
	0x0394C230 BL 0x1C16D6C
	0x0394C234 CBZ X0, 0x394C964
	0x0394C238 LDR W8, [X31 + 0x90]
	0x0394C23C MOV X28, X0
	0x0394C240 TBNZ X8, 0x0, 0x394C27C
	0x0394C244 LDR W9, [X28 + 0x18]
	0x0394C248 CBZ W9, 0x394C960
	0x0394C24C ADD W10, W29, 0x2
	0x0394C250 CMP W9, 0x1
	0x0394C254 STR W10, [X28 + 0x20]
	0x0394C258 B.EQ 0x394C960
	0x0394C25C ADD W8, W29, 0x1
	0x0394C260 CMP W9, 0x2
	0x0394C264 STR W8, [X28 + 0x24]
	0x0394C268 B.LS 0x394C960
	0x0394C26C CMP W9, 0x3
	0x0394C270 STR W29, [X28 + 0x28]
	0x0394C274 B.NE 0x394C2B0
	0x0394C278 B 0x394C960
	0x0394C27C LDR W9, [X28 + 0x18]
	0x0394C280 CBZ W9, 0x394C960
	0x0394C284 CMP W9, 0x1
	0x0394C288 STR W29, [X28 + 0x20]
	0x0394C28C B.EQ 0x394C960
	0x0394C290 ADD W10, W29, 0x1
	0x0394C294 CMP W9, 0x2
	0x0394C298 STR W10, [X28 + 0x24]
	0x0394C29C B.LS 0x394C960
	0x0394C2A0 ADD W8, W29, 0x2
	0x0394C2A4 CMP W9, 0x3
	0x0394C2A8 STR W8, [X28 + 0x28]
	0x0394C2AC B.EQ 0x394C960
	0x0394C2B0 CMP W9, 0x4
	0x0394C2B4 STR W10, [X28 + 0x2C]
	0x0394C2B8 B.LS 0x394C960
	0x0394C2BC ADD W10, W29, 0x3

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X28
	012 Move [X31+120], X27
	013 Move [X31+128], X26
	014 Move [X31+136], X25
	015 Move [X31+144], X24
	016 Move [X31+152], X23
	017 Move [X31+160], X22
	018 Move [X31+168], X21
	019 Move [X31+176], X20
	020 Move [X31+184], X19
	021 Move X20, 0xA97000
	022 Move W8, [X20+2436]
	023 Move V8, V0
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x7AB000
	030 Move X0, [X0+2480]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2436], W8
	034 Compare X19, 0
	035 JumpIfEqual {382}
	036 Move X8, 0x7AB000
	037 Move X8, [X8+2480]
	038 Move W9, [X19+24]
	039 Move X0, [X8]
	040 Move W1, W9
	041 ShiftRight W1, 30
	042 And W1, W1, 0x1FFFFFFF
	043 Call 0x1C17D6C
	044 Move X23, 0xA8E000
	045 Move W8, [X23+1923]
	046 Move X20, X0
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x7A9000
	050 Move X0, [X0+1440]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X23+1923], W8
	054 Move W8, [X19+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X10, -48627712
	057 Move V0, [X10+380]
	058 Move X21, 0x7A9000
	059 Move X22, 0x7A9000
	060 Move W27, W31
	061 Move [X31+16], S0
	062 Move X21, [X21+1448]
	063 Move X22, [X22+1440]
	064 Move W9, W31
	065 Move W24, 12
	066 Move X25, 0xA8E000
	067 Move W26, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, W9
	070 Add W10, W9, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X10, W10
	073 Add W28, W10, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction MADD not yet implemented."
	076 Move S10, [X10+32]
	077 Move S1, [X10+36]
	078 Move V0, [X10+40]
	079 NotImplemented "Instruction NOP not yet implemented."
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Add W9, W9, 2
	082 Move S12, [X8+32]
	083 Move S11, [X8+36]
	084 Move V9, [X8+40]
	085 Move X8, W9
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move [X31+104], S1
	088 Move [X31+112], S0
	089 Move V1, [X8+32]
	090 Move V0, [X8+36]
	091 Move W11, [X25+1925]
	092 Move [X31+20], S1
	093 Move [X31+28], S0
	094 Move V0, [X8+40]
	095 Move [X31+28], S0
	096 Compare W11, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X21
	099 Call 0x1C17CF4
	100 Move [X25+1925], W26
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move S1, [X31+104]
	107 Move S2, [X31+108]
	108 Add S0, S12, S10
	109 Move S3, 0.5
	110 Multiply S0, S0, S3
	111 Add S1, S11, S1
	112 Add S2, S9, S2
	113 Multiply S1, S1, S3
	114 Multiply S2, S2, S3
	115 Multiply S3, S0, S0
	116 Multiply S4, S1, S1
	117 Add S3, S3, S4
	118 Multiply S4, S2, S2
	119 Add S3, S4, S3
	120 Move V4, [X31+16]
	121 NotImplemented "Instruction FSQRT not yet implemented."
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction FDIV not yet implemented."
	124 NotImplemented "Instruction FDIV not yet implemented."
	125 Move [X31+8], S0
	126 Move [X31+16], S4
	127 NotImplemented "Instruction FDIV not yet implemented."
	128 Move W8, [X23+1923]
	129 Compare W8, 0
	130 JumpIfNotEqual {134}
	131 Move X0, X22
	132 Call 0x1C17CF4
	133 Move [X23+1923], W26
	134 Move X8, [X22]
	135 Move X8, [X8+184]
	136 Move V1, [X8]
	137 Move V0, [X8+4]
	138 Move [X31+8], S0
	139 Move [X31+16], S1
	140 Move V0, [X8+8]
	141 Move W8, [X25+1925]
	142 Move [X31+4], S0
	143 Compare W8, 0
	144 JumpIfNotEqual {148}
	145 Move X0, X21
	146 Call 0x1C17CF4
	147 Move [X25+1925], W26
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move S0, [X31+20]
	154 Move S1, [X31+24]
	155 Move V2, [X31+28]
	156 Move S3, 0.5
	157 Add S0, S12, S0
	158 Add S1, S11, S1
	159 Add S2, S9, S2
	160 Multiply S0, S0, S3
	161 Multiply S1, S1, S3
	162 Multiply S2, S2, S3
	163 Multiply S3, S0, S0
	164 Multiply S4, S1, S1
	165 Add S3, S3, S4
	166 Multiply S4, S2, S2
	167 Add S3, S4, S3
	168 Move V4, [X31+16]
	169 NotImplemented "Instruction FSQRT not yet implemented."
	170 NotImplemented "Instruction FCMP not yet implemented."
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 NotImplemented "Instruction FDIV not yet implemented."
	173 NotImplemented "Instruction FDIV not yet implemented."
	174 Move W8, [X23+1923]
	175 Compare W8, 0
	176 JumpIfNotEqual {180}
	177 Move X0, X22
	178 Call 0x1C17CF4
	179 Move [X23+1923], W26
	180 Move X8, [X22]
	181 Move X8, [X8+184]
	182 Move S13, [X8]
	183 Move S14, [X8+4]
	184 Move V15, [X8+8]
	185 Move W8, [X25+1925]
	186 Compare W8, 0
	187 JumpIfNotEqual {191}
	188 Move X0, X21
	189 Call 0x1C17CF4
	190 Move [X25+1925], W26
	191 Move X0, [X21]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move S0, [X31+20]
	197 Move S1, [X31+24]
	198 Move S2, [X31+104]
	199 Move S3, [X31+108]
	200 Add S0, S10, S0
	201 Add S1, S2, S1
	202 Move V2, [X31+28]
	203 Add S2, S3, S2
	204 Move S3, 0.5
	205 Multiply S0, S0, S3
	206 Multiply S1, S1, S3
	207 Multiply S2, S2, S3
	208 Multiply S3, S0, S0
	209 Multiply S4, S1, S1
	210 Add S3, S3, S4
	211 Multiply S4, S2, S2
	212 Add S3, S4, S3
	213 NotImplemented "Instruction FSQRT not yet implemented."
	214 Move V3, [X31+16]
	215 NotImplemented "Instruction FCMP not yet implemented."
	216 NotImplemented "Instruction FDIV not yet implemented."
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 Move W8, [X23+1923]
	220 Compare W8, 0
	221 JumpIfNotEqual {225}
	222 Move X0, X22
	223 Call 0x1C17CF4
	224 Move [X23+1923], W26
	225 Move X8, [X22]
	226 Move X8, [X8+184]
	227 Move S3, [X8]
	228 Move S4, [X8+4]
	229 Move V5, [X8+8]
	230 Compare X20, 0
	231 JumpIfEqual {382}
	232 Move W8, [X20+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, W27
	235 NotImplemented "Instruction MADD not yet implemented."
	236 Move [X8+32], S12
	237 Move [X8+40], S11
	238 Move [X8+40], S9
	239 Move W9, [X20+24]
	240 Add W8, W27, 1
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move V0, [X31+12]
	243 Add W9, W27, 1
	244 Move X9, W9
	245 NotImplemented "Instruction MADD not yet implemented."
	246 Multiply S6, S0, S8
	247 Move V0, [X31+8]
	248 Add W8, W8, 1
	249 Multiply S7, S0, S8
	250 Move V0, [X31+4]
	251 Move [X9+32], S6
	252 Move [X9+40], S7
	253 Multiply S16, S0, S8
	254 Move [X9+40], S16
	255 Move W9, [X20+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add W9, W27, 2
	258 Move X9, W9
	259 Multiply S0, S13, S8
	260 Multiply S1, S14, S8
	261 Multiply S2, S15, S8
	262 NotImplemented "Instruction MADD not yet implemented."
	263 Move [X9+32], S0
	264 Move [X9+40], S1
	265 Move [X9+40], S2
	266 Move W9, [X20+24]
	267 Add W8, W8, 1
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Add W9, W27, 3
	270 Move X9, W9
	271 NotImplemented "Instruction MADD not yet implemented."
	272 Move [X9+32], S6
	273 Move [X9+40], S7
	274 Move [X9+40], S16
	275 Move W9, [X20+24]
	276 Add W8, W8, 1
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move V17, [X31+104]
	279 Add W9, W27, 4
	280 Move X9, W9
	281 NotImplemented "Instruction MADD not yet implemented."
	282 Move [X9+32], S10
	283 Move [X9+40], S17
	284 Move V17, [X31+108]
	285 Add W8, W8, 1
	286 Move [X9+40], S17
	287 Move W9, [X20+24]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add W9, W27, 5
	290 Move X9, W9
	291 Multiply S3, S3, S8
	292 Multiply S4, S4, S8
	293 Multiply S5, S5, S8
	294 NotImplemented "Instruction MADD not yet implemented."
	295 Move [X9+32], S3
	296 Move [X9+40], S4
	297 Move [X9+40], S5
	298 Move W9, [X20+24]
	299 Add W8, W8, 1
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W9, W27, 6
	302 Move X9, W9
	303 NotImplemented "Instruction MADD not yet implemented."
	304 Move [X9+32], S6
	305 Move [X9+40], S7
	306 Move [X9+40], S16
	307 Move W9, [X20+24]
	308 Add W8, W8, 1
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Add W9, W27, 7
	311 Move X9, W9
	312 NotImplemented "Instruction MADD not yet implemented."
	313 Move [X9+32], S3
	314 Move [X9+40], S4
	315 Move [X9+40], S5
	316 Move W9, [X20+24]
	317 Add W8, W8, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Add W9, W27, 8
	320 Move X9, W9
	321 NotImplemented "Instruction MADD not yet implemented."
	322 Move [X9+32], S0
	323 Move [X9+40], S1
	324 Move [X9+40], S2
	325 Move W9, [X20+24]
	326 Add W8, W8, 1
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Add W9, W27, 9
	329 Move X9, W9
	330 NotImplemented "Instruction MADD not yet implemented."
	331 Move [X9+32], S0
	332 Move [X9+40], S1
	333 Move [X9+40], S2
	334 Move W9, [X20+24]
	335 Add W8, W8, 1
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W9, W27, 10
	338 Move X9, W9
	339 NotImplemented "Instruction MADD not yet implemented."
	340 Move [X9+32], S3
	341 Move [X9+40], S4
	342 Move [X9+40], S5
	343 Move W9, [X20+24]
	344 Add W10, W8, 1
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move V1, [X31+20]
	347 Move V0, [X31+24]
	348 Add W8, W27, 11
	349 Move X8, W8
	350 NotImplemented "Instruction MADD not yet implemented."
	351 Move [X8+32], S1
	352 Move [X8+40], S0
	353 Move V0, [X31+28]
	354 Add W9, W28, 1
	355 Add W27, W10, 1
	356 Move [X8+40], S0
	357 Move W8, [X19+24]
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X20
	360 Move X20, [X31+176]
	361 Move X19, [X31+184]
	362 Move X22, [X31+160]
	363 Move X21, [X31+168]
	364 Move X24, [X31+144]
	365 Move X23, [X31+152]
	366 Move X26, [X31+128]
	367 Move X25, [X31+136]
	368 Move X28, [X31+112]
	369 Move X27, [X31+120]
	370 Move X30, [X31+96]
	371 Move D9, [X31+80]
	372 Move D8, [X31+88]
	373 Move D11, [X31+64]
	374 Move D10, [X31+72]
	375 Move D13, [X31+48]
	376 Move D12, [X31+56]
	377 Move D15, [X31+32]
	378 Move D14, [X31+40]
	379 Add X31, X31, 192
	380 Return X0
	381 Call 0x1C17F28
	382 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0394C2C0 CMP W9, 0x5
	0x0394C2C4 STR W10, [X28 + 0x30]
	0x0394C2C8 B.EQ 0x394C960
	0x0394C2CC STR W8, [X28 + 0x34]
	0x0394C2D0 ADRP X8, 0x802000
	0x0394C2D4 LDR X8, [X8 + 0x560]

ISIL:
	001 Move W8, 3
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+16], W8
	005 Move [X0+24], W9
	006 Call Object..ctor, X0
	007 Return 

Method: System.Void .cctor()

Disassembly:
	0x0394C2D8 MOV X26, X29
	0x0394C2DC LDR X0, [X8]
	0x0394C2E0 BL 0x1C16F10
	0x0394C2E4 MOV X1, X28
	0x0394C2E8 MOV X2, X31
	0x0394C2EC MOV X29, X0
	0x0394C2F0 BL 0x3900368
	0x0394C2F4 CBZ X21, 0x394C964
	0x0394C2F8 LDR W8, [X21 + 0x18]
	0x0394C2FC MOV X28, X21
	0x0394C300 CMP W20, W8
	0x0394C304 B.CS 0x394C960
	0x0394C308 ADD X8, X28, W20, 0x3, SXTW
	0x0394C30C STR X29, [X8 + 0x20]
	0x0394C310 CBZ X29, 0x394C964
	0x0394C314 STR W24, [X31 + 0x94]
	0x0394C318 ADD W22, W20, 0x1
	0x0394C31C MOV W24, W23
	0x0394C320 STR W23, [X29 + 0x18]
	0x0394C324 ADD W23, W26, 0x4
	0x0394C328 ADD W8, W19, 0x4
	0x0394C32C CBZ W25, 0x394C428
	0x0394C330 LDR W9, [X31 + 0x78]
	0x0394C334 ADD W25, W9, W25
	0x0394C338 STR W25, [X29 + 0x54]
	0x0394C33C LDR W9, [X27 + 0x18]
	0x0394C340 CMP W8, W9
	0x0394C344 B.CS 0x394C960
	0x0394C348 SXTW X9, W8
	0x0394C34C MOVZ W14, 0xC
	0x0394C350 MADD X9, X9, X14, X27
	0x0394C354 STR S9, [X9 + 0x24]!
	0x0394C358 STUR S8, [X9 - 0x4]
	0x0394C35C STR S13, [X9 + 0x4]
	0x0394C360 LDR W11, [X27 + 0x18]
	0x0394C364 ADD W10, W19, 0x5
	0x0394C368 CMP W10, W11
	0x0394C36C B.CS 0x394C960
	0x0394C370 SXTW X11, W10
	0x0394C374 MADD X10, X11, X14, X27
	0x0394C378 STR S9, [X10 + 0x24]!
	0x0394C37C STUR S11, [X10 - 0x4]
	0x0394C380 STR S12, [X10 + 0x4]
	0x0394C384 LDR W13, [X27 + 0x18]
	0x0394C388 ADD W12, W19, 0x6
	0x0394C38C CMP W12, W13
	0x0394C390 B.CS 0x394C960
	0x0394C394 SXTW X13, W12
	0x0394C398 MADD X12, X13, X14, X27
	0x0394C39C STR S9, [X12 + 0x24]!
	0x0394C3A0 STUR S8, [X12 - 0x4]
	0x0394C3A4 STR S13, [X12 + 0x4]
	0x0394C3A8 LDR W14, [X27 + 0x18]
	0x0394C3AC CMP W8, W14
	0x0394C3B0 B.CS 0x394C960
	0x0394C3B4 CMP W11, W14
	0x0394C3B8 STR S10, [X9]
	0x0394C3BC B.CS 0x394C960
	0x0394C3C0 CMP W13, W14
	0x0394C3C4 STR S15, [X10]
	0x0394C3C8 B.CS 0x394C960
	0x0394C3CC STR S15, [X12]
	0x0394C3D0 ADRP X8, 0x7A8000
	0x0394C3D4 LDR X8, [X8 + 0xE58]
	0x0394C3D8 MOVZ W1, 0x3
	0x0394C3DC LDR X0, [X8]
	0x0394C3E0 BL 0x1C16D6C
	0x0394C3E4 CBZ X0, 0x394C964
	0x0394C3E8 LDR W8, [X0 + 0x18]
	0x0394C3EC LDR W9, [X31 + 0x90]
	0x0394C3F0 MOV X28, X0
	0x0394C3F4 TBNZ X9, 0x0, 0x394C440
	0x0394C3F8 LDR V12, [X31 + 0x80]
	0x0394C3FC CBZ W8, 0x394C960
	0x0394C400 MOV X10, X26
	0x0394C404 ADD W9, W10, 0x6
	0x0394C408 CMP W8, 0x1
	0x0394C40C STR W9, [X28 + 0x20]
	0x0394C410 B.EQ 0x394C960
	0x0394C414 ADD W9, W10, 0x5
	0x0394C418 CMP W8, 0x2
	0x0394C41C STR W9, [X28 + 0x24]
	0x0394C420 B.HI 0x394C46C
	0x0394C424 B 0x394C960
	0x0394C428 LDR V12, [X31 + 0x80]
	0x0394C42C MOV W20, W22
	0x0394C430 MOV W19, W8
	0x0394C434 MOV W29, W23
	0x0394C438 MOV W23, W24
	0x0394C43C B 0x394C4C8
	0x0394C440 LDR V12, [X31 + 0x80]
	0x0394C444 CBZ W8, 0x394C960
	0x0394C448 CMP W8, 0x1
	0x0394C44C STR W23, [X28 + 0x20]
	0x0394C450 B.EQ 0x394C960
	0x0394C454 MOV X10, X26
	0x0394C458 ADD W9, W10, 0x5
	0x0394C45C CMP W8, 0x2
	0x0394C460 STR W9, [X28 + 0x24]
	0x0394C464 B.LS 0x394C960
	0x0394C468 ADD W23, W10, 0x6
	0x0394C46C STR W23, [X28 + 0x28]
	0x0394C470 ADRP X8, 0x802000
	0x0394C474 LDR X8, [X8 + 0x560]
	0x0394C478 LDR X0, [X8]
	0x0394C47C BL 0x1C16F10
	0x0394C480 MOV X1, X28
	0x0394C484 MOV X2, X31
	0x0394C488 MOV X29, X0
	0x0394C48C BL 0x3900368
	0x0394C490 LDR W8, [X21 + 0x18]
	0x0394C494 CMP W22, W8
	0x0394C498 B.CS 0x394C960
	0x0394C49C MOV X28, X21
	0x0394C4A0 ADD X8, X21, W22, 0x3, SXTW
	0x0394C4A4 STR X29, [X8 + 0x20]
	0x0394C4A8 CBZ X29, 0x394C964
	0x0394C4AC STR W25, [X29 + 0x54]
	0x0394C4B0 STR W24, [X29 + 0x18]
	0x0394C4B4 MOV X29, X26
	0x0394C4B8 ADD W20, W20, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA96000
	005 Move X20, 0x7AA000
	006 Move W8, [X19+2437]
	007 Move X20, [X20+2480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x7A9000
	013 Move X0, [X0+3672]
	014 Call 0x1C17CF4
	015 Move X0, 0x804000
	016 Move X0, [X0+328]
	017 Call 0x1C17CF4
	018 Move X0, 0x803000
	019 Move X0, [X0+3304]
	020 Call 0x1C17CF4
	021 Move X0, 0x7AA000
	022 Move X0, [X0+2480]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2437], W8
	026 Move X0, [X20]
	027 Move W1, 12
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {117}
	031 Move W8, [X0+24]
	032 Compare W8, 0
	033 JumpIfEqual {116}
	034 Move X9, -48619520
	035 Move V0, [X9+4000]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X0+40], W31
	038 Move [X0+32], D0
	039 Move X9, -48619520
	040 Move V0, [X9+1840]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X0+52], W31
	043 Move [X0+44], D0
	044 Move X9, -48615424
	045 Move V0, [X9+568]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+64], W31
	048 Move [X0+56], D0
	049 Move X9, -48615424
	050 Move V0, [X9+1208]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X0+76], W31
	053 Move [X0+68], D0
	054 Move X9, -48615424
	055 Move V0, [X9+632]
	056 Move W9, 0x1BBD
	057 NotImplemented "Instruction MOVK not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X0+80], D0
	060 Move [X0+88], W9
	061 Move X10, -48615424
	062 Move V1, [X10]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X0+100], W9
	065 Move [X0+92], D1
	066 Move W9, 0x1BBD
	067 NotImplemented "Instruction MOVK not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X0+104], D0
	070 Move [X0+112], W9
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X0+116], D1
	073 Move [X0+124], W9
	074 Move X9, -48619520
	075 Move V0, [X9+2800]
	076 Move W9, 0xBF800000
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X0+136], W9
	079 Move [X0+128], D0
	080 Move W9, 0x3F800000
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X0+140], D0
	083 Move [X0+148], W9
	084 Move X9, -48615424
	085 Move V0, [X9+792]
	086 Move W9, 0xBF800000
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X0+160], W9
	089 Move [X0+152], D0
	090 Move X20, 0x804000
	091 Move X20, [X20+328]
	092 Move W8, 0x3F800000
	093 Move [X0+164], D0
	094 Move [X0+172], W8
	095 Move X8, [X20]
	096 Move X9, 0x7A9000
	097 Move X19, 0x803000
	098 Move W1, 60
	099 Move X8, [X8+184]
	100 Move X9, [X9+3672]
	101 Move [X8], X0
	102 Move X0, [X9]
	103 Move X19, [X19+3304]
	104 Call 0x1C17D6C
	105 Move X1, [X19]
	106 Move X2, X31
	107 Move X19, X0
	108 Call RuntimeHelpers.InitializeArray, X0, X1
	109 Move X8, [X20]
	110 Move X8, [X8+184]
	111 Move [X8+8], X19
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Return 
	116 Call 0x1C17F28
	117 Call 0x1C17F20

