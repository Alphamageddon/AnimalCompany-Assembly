Type: UnityEngine.ProBuilder.Shapes.Pipe

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x03948EF4 CMP W9, 0x1
	0x03948EF8 B.LS 0x3949428
	0x03948EFC CMP W8, 0x3
	0x03948F00 B.LS 0x3949428
	0x03948F04 LDUR V0, [X22 + 0x2C]
	0x03948F08 LDR V1, [X22 + 0x34]
	0x03948F0C STUR D0, [X21 + 0x44]
	0x03948F10 STR S1, [X21 + 0x4C]
	0x03948F14 LDR W9, [X22 + 0x18]
	0x03948F18 CMP W9, 0x4
	0x03948F1C B.LS 0x3949428
	0x03948F20 CMP W8, 0x4
	0x03948F24 B.LS 0x3949428
	0x03948F28 LDR V0, [X22 + 0x50]
	0x03948F2C LDR V1, [X22 + 0x58]
	0x03948F30 STR D0, [X21 + 0x50]
	0x03948F34 STR S1, [X21 + 0x58]
	0x03948F38 LDR W9, [X22 + 0x18]
	0x03948F3C CMP W9, 0x2
	0x03948F40 B.LS 0x3949428
	0x03948F44 CMP W8, 0x5
	0x03948F48 B.LS 0x3949428
	0x03948F4C LDR V0, [X22 + 0x38]
	0x03948F50 LDR V1, [X22 + 0x40]
	0x03948F54 STUR D0, [X21 + 0x5C]
	0x03948F58 STR S1, [X21 + 0x64]
	0x03948F5C LDR W9, [X22 + 0x18]
	0x03948F60 CMP W9, 0x5
	0x03948F64 B.LS 0x3949428
	0x03948F68 CMP W8, 0x6
	0x03948F6C B.LS 0x3949428
	0x03948F70 LDUR V0, [X22 + 0x5C]
	0x03948F74 LDR V1, [X22 + 0x64]
	0x03948F78 STR D0, [X21 + 0x68]
	0x03948F7C STR S1, [X21 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA9A000
	006 Move W8, [X21+2420]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x808000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2420], W8
	018 Compare X19, 0
	019 JumpIfEqual {37}
	020 Move X8, 0x808000
	021 Move X8, [X8+304]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move V0, [X19+16]
	032 Move [X20+16], S0
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move [X20+20], D0
	035 Move W8, [X19+28]
	036 Move [X20+28], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: UnityEngine.Bounds UpdateBounds(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation, UnityEngine.Bounds bounds)

Disassembly:
	0x03948F80 LDR W9, [X22 + 0x18]
	0x03948F84 CMP W9, 0x4
	0x03948F88 B.LS 0x3949428
	0x03948F8C CMP W8, 0x7
	0x03948F90 B.LS 0x3949428
	0x03948F94 LDR V0, [X22 + 0x50]
	0x03948F98 LDR V1, [X22 + 0x58]
	0x03948F9C STUR D0, [X21 + 0x74]
	0x03948FA0 STR S1, [X21 + 0x7C]
	0x03948FA4 LDR W9, [X22 + 0x18]
	0x03948FA8 CMP W9, 0x3

ISIL:
	001 Move S3, 0.5
	002 Multiply S0, S0, S3
	003 Multiply S1, S1, S3
	004 Multiply S2, S2, S3
	005 Move [X2+12], S0
	006 Move [X2+20], S1
	007 Move [X2+20], S2
	008 Move X9, [X2+16]
	009 Move V0, [X2]
	010 Move [X8+16], X9
	011 Move [X8], V0
	012 Return X0

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x03948FAC B.LS 0x3949428
	0x03948FB0 CMP W8, 0x8
	0x03948FB4 B.LS 0x3949428
	0x03948FB8 LDUR V0, [X22 + 0x44]
	0x03948FBC LDR V1, [X22 + 0x4C]
	0x03948FC0 STR D0, [X21 + 0x80]
	0x03948FC4 STR S1, [X21 + 0x88]
	0x03948FC8 LDR W9, [X22 + 0x18]
	0x03948FCC CMP W9, 0x5
	0x03948FD0 B.LS 0x3949428
	0x03948FD4 CMP W8, 0x9
	0x03948FD8 B.LS 0x3949428
	0x03948FDC LDUR V0, [X22 + 0x5C]
	0x03948FE0 LDR V1, [X22 + 0x64]
	0x03948FE4 STUR D0, [X21 + 0x8C]
	0x03948FE8 STR S1, [X21 + 0x94]
	0x03948FEC LDR W9, [X22 + 0x18]
	0x03948FF0 CMP W9, 0x3
	0x03948FF4 B.LS 0x3949428
	0x03948FF8 CMP W8, 0xA
	0x03948FFC B.LS 0x3949428
	0x03949000 LDUR V0, [X22 + 0x44]
	0x03949004 LDR V1, [X22 + 0x4C]
	0x03949008 STR D0, [X21 + 0x98]
	0x0394900C STR S1, [X21 + 0xA0]
	0x03949010 LDR W9, [X22 + 0x18]
	0x03949014 CBZ W9, 0x3949428
	0x03949018 CMP W8, 0xB
	0x0394901C B.LS 0x3949428
	0x03949020 LDR V0, [X22 + 0x20]
	0x03949024 LDR V1, [X22 + 0x28]
	0x03949028 STUR D0, [X21 + 0xA4]
	0x0394902C STR S1, [X21 + 0xAC]
	0x03949030 LDR W9, [X22 + 0x18]
	0x03949034 CMP W9, 0x5
	0x03949038 B.LS 0x3949428
	0x0394903C CMP W8, 0xC
	0x03949040 B.LS 0x3949428
	0x03949044 LDUR V0, [X22 + 0x5C]
	0x03949048 LDR V1, [X22 + 0x64]
	0x0394904C STR D0, [X21 + 0xB0]
	0x03949050 STR S1, [X21 + 0xB8]
	0x03949054 LDR W9, [X22 + 0x18]
	0x03949058 CMP W9, 0x2
	0x0394905C B.LS 0x3949428
	0x03949060 CMP W8, 0xD
	0x03949064 B.LS 0x3949428
	0x03949068 LDR V0, [X22 + 0x38]
	0x0394906C LDR V1, [X22 + 0x40]
	0x03949070 STUR D0, [X21 + 0xBC]
	0x03949074 STR S1, [X21 + 0xC4]
	0x03949078 LDR W9, [X22 + 0x18]
	0x0394907C CBZ W9, 0x3949428
	0x03949080 CMP W8, 0xE
	0x03949084 B.LS 0x3949428
	0x03949088 LDR V0, [X22 + 0x20]
	0x0394908C LDR V1, [X22 + 0x28]
	0x03949090 STR D0, [X21 + 0xC8]
	0x03949094 STR S1, [X21 + 0xD0]
	0x03949098 LDR W9, [X22 + 0x18]
	0x0394909C CMP W9, 0x1
	0x039490A0 B.LS 0x3949428
	0x039490A4 CMP W8, 0xF
	0x039490A8 B.LS 0x3949428
	0x039490AC LDUR V0, [X22 + 0x2C]
	0x039490B0 LDR V1, [X22 + 0x34]
	0x039490B4 STUR D0, [X21 + 0xD4]
	0x039490B8 STR S1, [X21 + 0xDC]
	0x039490BC LDR W9, [X22 + 0x18]
	0x039490C0 CMP W9, 0x3
	0x039490C4 B.LS 0x3949428
	0x039490C8 CMP W8, 0x10
	0x039490CC B.LS 0x3949428
	0x039490D0 LDUR V0, [X22 + 0x44]
	0x039490D4 LDR V1, [X22 + 0x4C]
	0x039490D8 STR D0, [X21 + 0xE0]
	0x039490DC STR S1, [X21 + 0xE8]
	0x039490E0 LDR W9, [X22 + 0x18]
	0x039490E4 CMP W9, 0x4
	0x039490E8 B.LS 0x3949428
	0x039490EC CMP W8, 0x11
	0x039490F0 B.LS 0x3949428
	0x039490F4 LDR V0, [X22 + 0x50]
	0x039490F8 LDR V1, [X22 + 0x58]
	0x039490FC ADRP X8, 0x805000
	0x03949100 LDR X8, [X8 + 0x3F0]
	0x03949104 STUR D0, [X21 + 0xEC]
	0x03949108 STR S1, [X21 + 0xF4]
	0x0394910C ADRP X25, 0x7AB000
	0x03949110 LDR X0, [X8]
	0x03949114 LDR X25, [X25 + 0xE58]
	0x03949118 MOVZ W1, 0x5
	0x0394911C BL 0x1C16D6C
	0x03949120 LDR X8, [X25]
	0x03949124 MOV X22, X0
	0x03949128 MOVZ W1, 0x3
	0x0394912C MOV X0, X8
	0x03949130 BL 0x1C16D6C
	0x03949134 CBZ X0, 0x394942C
	0x03949138 LDR W8, [X0 + 0x18]
	0x0394913C MOV X23, X0
	0x03949140 CBZ W8, 0x3949428
	0x03949144 MOVZ W9, 0x2
	0x03949148 CMP W8, 0x1
	0x0394914C STR W9, [X23 + 0x20]
	0x03949150 B.EQ 0x3949428
	0x03949154 ADRP X26, 0x805000
	0x03949158 LDR X26, [X26 + 0x560]
	0x0394915C MOVZ W8, 0x1
	0x03949160 STR W8, [X23 + 0x24]
	0x03949164 LDR X0, [X26]
	0x03949168 BL 0x1C16F10
	0x0394916C MOV X1, X23
	0x03949170 MOV X2, X31
	0x03949174 MOV X24, X0
	0x03949178 BL 0x3900368
	0x0394917C CBZ X22, 0x394942C
	0x03949180 LDR W8, [X22 + 0x18]
	0x03949184 CBZ W8, 0x3949428
	0x03949188 STR X24, [X22 + 0x20]
	0x0394918C LDR X0, [X25]
	0x03949190 ADRP X23, 0x805000
	0x03949194 LDR X23, [X23 + 0xBF0]
	0x03949198 MOVZ W1, 0x6
	0x0394919C BL 0x1C16D6C
	0x039491A0 LDR X1, [X23]
	0x039491A4 MOV X2, X31
	0x039491A8 MOV X24, X0
	0x039491AC BL 0x32C5BD8
	0x039491B0 LDR X0, [X26]
	0x039491B4 BL 0x1C16F10
	0x039491B8 MOV X1, X24
	0x039491BC MOV X2, X31
	0x039491C0 MOV X23, X0
	0x039491C4 BL 0x3900368
	0x039491C8 LDR W8, [X22 + 0x18]
	0x039491CC CMP W8, 0x1
	0x039491D0 B.LS 0x3949428
	0x039491D4 STR X23, [X22 + 0x28]
	0x039491D8 LDR X0, [X25]
	0x039491DC ADRP X23, 0x805000
	0x039491E0 LDR X23, [X23 + 0xC00]
	0x039491E4 MOVZ W1, 0x3
	0x039491E8 BL 0x1C16D6C
	0x039491EC LDR X1, [X23]
	0x039491F0 MOV X2, X31
	0x039491F4 MOV X24, X0
	0x039491F8 BL 0x32C5BD8
	0x039491FC LDR X0, [X26]
	0x03949200 BL 0x1C16F10
	0x03949204 MOV X1, X24
	0x03949208 MOV X2, X31
	0x0394920C MOV X23, X0
	0x03949210 BL 0x3900368
	0x03949214 LDR W8, [X22 + 0x18]
	0x03949218 CMP W8, 0x2
	0x0394921C B.LS 0x3949428
	0x03949220 STR X23, [X22 + 0x30]
	0x03949224 LDR X0, [X25]
	0x03949228 ADRP X23, 0x805000
	0x0394922C LDR X23, [X23 + 0xBF8]
	0x03949230 MOVZ W1, 0x6
	0x03949234 BL 0x1C16D6C
	0x03949238 LDR X1, [X23]
	0x0394923C MOV X2, X31
	0x03949240 MOV X24, X0
	0x03949244 BL 0x32C5BD8
	0x03949248 LDR X0, [X26]
	0x0394924C BL 0x1C16F10
	0x03949250 MOV X1, X24
	0x03949254 MOV X2, X31
	0x03949258 MOV X23, X0
	0x0394925C BL 0x3900368
	0x03949260 LDR W8, [X22 + 0x18]
	0x03949264 CMP W8, 0x3
	0x03949268 B.LS 0x3949428
	0x0394926C STR X23, [X22 + 0x38]
	0x03949270 LDR X0, [X25]
	0x03949274 ADRP X23, 0x805000
	0x03949278 LDR X23, [X23 + 0xC08]
	0x0394927C MOVZ W1, 0x6
	0x03949280 BL 0x1C16D6C
	0x03949284 LDR X1, [X23]
	0x03949288 MOV X2, X31
	0x0394928C MOV X24, X0
	0x03949290 BL 0x32C5BD8
	0x03949294 LDR X0, [X26]
	0x03949298 BL 0x1C16F10
	0x0394929C MOV X1, X24
	0x039492A0 MOV X2, X31
	0x039492A4 MOV X23, X0
	0x039492A8 BL 0x3900368
	0x039492AC LDR W8, [X22 + 0x18]
	0x039492B0 CMP W8, 0x4
	0x039492B4 B.LS 0x3949428
	0x039492B8 MOV V0.16B, V9.16B
	0x039492BC MOV V1.16B, V14.16B
	0x039492C0 MOV V2.16B, V8.16B
	0x039492C4 MOV X0, X31
	0x039492C8 STR X23, [X22 + 0x40]
	0x039492CC BL 0x390B3D8
	0x039492D0 LDR X8, [X21 + 0x18]
	0x039492D4 CMP W8, 0x1
	0x039492D8 B.LT 0x3949348
	0x039492DC MOV V15.16B, V0.16B
	0x039492E0 MOV V8.16B, V1.16B
	0x039492E4 MOV V9.16B, V2.16B
	0x039492E8 MOV X23, X31
	0x039492EC AND X8, X8, 0x0
	0x039492F0 ADD X24, X21, 0x28
	0x039492F4 CMP X23, W8, UXTW
	0x039492F8 B.CS 0x3949428
	0x039492FC LDP S4, S5, [X24 - 0x8]
	0x03949300 LDR V6, [X24]
	0x03949304 MOV V0.16B, V13.16B
	0x03949308 MOV V1.16B, V12.16B
	0x0394930C MOV V2.16B, V11.16B
	0x03949310 MOV V3.16B, V10.16B
	0x03949314 MOV X0, X31
	0x03949318 BL 0x3C2A9FC
	0x0394931C LDR W8, [X21 + 0x18]
	0x03949320 CMP X23, X8
	0x03949324 B.CS 0x3949428
	0x03949328 FMUL S2, S9, S2
	0x0394932C FMUL S1, S8, S1
	0x03949330 FMUL S0, S15, S0
	0x03949334 ADD X23, X23, 0x1
	0x03949338 STP S0, S1, [X24 - 0x8]
	0x0394933C STR S2, [X24], #0xC
	0x03949340 CMP X23, W8, SXTW
	0x03949344 B.LT 0x39492F4
	0x03949348 FCMP S14, 0x0
	0x0394934C FMOV S0, -1
	0x03949350 FMOV S1, 1
	0x03949354 FCSEL S0, S1, S0, GE
	0x03949358 LDP S1, S2, [X31 + 0x68]
	0x0394935C FCMP S1, 0x0
	0x03949360 FNEG S1, S0
	0x03949364 FCSEL S0, S0, S1, GE
	0x03949368 FNEG S1, S0
	0x0394936C FCMP S2, 0x0
	0x03949370 FCSEL S0, S0, S1, GE
	0x03949374 FCMP S0, 0x0
	0x03949378 B.PL 0x39493B8
	0x0394937C LDR X8, [X22 + 0x18]
	0x03949380 CMP W8, 0x1
	0x03949384 B.LT 0x39493B8
	0x03949388 MOV X23, X31
	0x0394938C ADD X24, X22, 0x20
	0x03949390 CMP W23, W8
	0x03949394 B.CS 0x3949428
	0x03949398 LDR X0, [X24, X23, LSL #3]
	0x0394939C CBZ X0, 0x394942C
	0x039493A0 MOV X1, X31
	0x039493A4 BL 0x3900E24
	0x039493A8 LDR X8, [X22 + 0x18]
	0x039493AC ADD X23, X23, 0x1
	0x039493B0 CMP W23, W8
	0x039493B4 B.LT 0x3949390
	0x039493B8 CBZ X20, 0x394942C
	0x039493BC MOV X0, X20
	0x039493C0 MOV X1, X21
	0x039493C4 MOV X2, X22
	0x039493C8 MOV X3, X31
	0x039493CC BL 0x3919540
	0x039493D0 MOV X0, X20
	0x039493D4 MOV X1, X31
	0x039493D8 BL 0x3912CAC
	0x039493DC CBZ X0, 0x394942C
	0x039493E0 ADD X8, X31, 0x8
	0x039493E4 MOV X1, X31
	0x039493E8 BL 0x3C17768
	0x039493EC LDR X8, [X31 + 0x18]
	0x039493F0 LDUR V0, [X31 + 0x8]
	0x039493F4 LDP X22, X21, [X31 + 0x90]
	0x039493F8 LDP X24, X23, [X31 + 0x80]
	0x039493FC STR X8, [X19 + 0x10]
	0x03949400 STR V0, [X19]
	0x03949404 LDP X20, X19, [X31 + 0xA0]
	0x03949408 LDP X26, X25, [X31 + 0x70]
	0x0394940C LDR X30, [X31 + 0x60]
	0x03949410 LDP D9, D8, [X31 + 0x50]
	0x03949414 LDP D11, D10, [X31 + 0x40]
	0x03949418 LDP D13, D12, [X31 + 0x30]
	0x0394941C LDP D15, D14, [X31 + 0x20]
	0x03949420 ADD X31, X31, 0xB0
	0x03949424 RET
	0x03949428 BL 0x1C16F28
	0x0394942C BL 0x1C16F20
	0x03949430 MOV X1, X31
	0x03949434 B 0x33BDD8C
	0x03949438 LDR X0, [X0 + 0x20]
	0x0394943C RET
	0x03949440 STR X1, [X0 + 0x20]
	0x03949444 RET
	0x03949448 LDR W0, [X0 + 0x50]
	0x0394944C RET
	0x03949450 STR W1, [X0 + 0x50]
	0x03949454 RET
	0x03949458 LDP S0, S1, [X0 + 0x54]
	0x0394945C LDR V2, [X0 + 0x5C]
	0x03949460 RET
	0x03949464 STP S0, S1, [X0 + 0x54]
	0x03949468 STR S2, [X0 + 0x5C]
	0x0394946C RET
	0x03949470 STP X30, X19, [X31 - 0x10]!
	0x03949474 MOV X19, X0
	0x03949478 BL 0x39494A4
	0x0394947C CBZ X0, 0x39494A0
	0x03949480 MOV X1, X31
	0x03949484 BL 0x3C32E90
	0x03949488 CBZ X0, 0x39494A0
	0x0394948C LDP S1, S2, [X19 + 0x58]
	0x03949490 LDR V0, [X19 + 0x54]
	0x03949494 MOV X1, X31
	0x03949498 LDP X30, X19, [X31], #0x10
	0x0394949C B 0x3C3DE4C
	0x039494A0 BL 0x1C16F20
	0x039494A4 STP X30, X21, [X31 - 0x20]!
	0x039494A8 STP X20, X19, [X31 + 0x10]
	0x039494AC ADRP X20, 0xA98000
	0x039494B0 ADRP X21, 0x7AA000
	0x039494B4 LDRB W8, [X20 + 0x97B]
	0x039494B8 LDR X21, [X21 + 0x598]
	0x039494BC MOV X19, X0
	0x039494C0 TBNZ X8, 0x0, 0x39494F0
	0x039494C4 ADRP X0, 0x804000
	0x039494C8 LDR X0, [X0 + 0xA60]
	0x039494CC BL 0x1C16CF4
	0x039494D0 ADRP X0, 0x805000
	0x039494D4 LDR X0, [X0 + 0x548]
	0x039494D8 BL 0x1C16CF4
	0x039494DC ADRP X0, 0x7AA000
	0x039494E0 LDR X0, [X0 + 0x598]
	0x039494E4 BL 0x1C16CF4
	0x039494E8 MOVZ W8, 0x1
	0x039494EC STRB W8, [X20 + 0x97B]
	0x039494F0 LDR X0, [X21]
	0x039494F4 LDR X20, [X19 + 0x48]
	0x039494F8 LDR W8, [X0 + 0xE0]
	0x039494FC CBNZ W8, 0x3949504
	0x03949500 BL 0x1C16DFC
	0x03949504 MOV X0, X20
	0x03949508 MOV X1, X31
	0x0394950C MOV X2, X31
	0x03949510 BL 0x3C3883C
	0x03949514 TBZ X0, 0x0, 0x3949538
	0x03949518 ADRP X8, 0x804000
	0x0394951C LDR X8, [X8 + 0xA60]
	0x03949520 MOV X0, X19
	0x03949524 LDR X1, [X8]
	0x03949528 BL 0x21A3894
	0x0394952C MOV X20, X0
	0x03949530 STR X0, [X19 + 0x48]
	0x03949534 B 0x394953C
	0x03949538 LDR X20, [X19 + 0x48]
	0x0394953C LDR X0, [X21]
	0x03949540 LDR W8, [X0 + 0xE0]
	0x03949544 CBNZ W8, 0x394954C
	0x03949548 BL 0x1C16DFC
	0x0394954C MOV X0, X20
	0x03949550 MOV X1, X31
	0x03949554 MOV X2, X31
	0x03949558 BL 0x3C3883C
	0x0394955C TBZ X0, 0x0, 0x3949588
	0x03949560 MOV X0, X19
	0x03949564 MOV X1, X31
	0x03949568 BL 0x3C32ECC
	0x0394956C CBZ X0, 0x3949598
	0x03949570 ADRP X8, 0x805000
	0x03949574 LDR X8, [X8 + 0x548]
	0x03949578 LDR X1, [X8]
	0x0394957C BL 0x21E51FC
	0x03949580 STR X0, [X19 + 0x48]
	0x03949584 B 0x394958C
	0x03949588 LDR X0, [X19 + 0x48]
	0x0394958C LDP X20, X19, [X31 + 0x10]
	0x03949590 LDP X30, X21, [X31], #0x20
	0x03949594 RET
	0x03949598 BL 0x1C16F20
	0x0394959C STR D10, [X31 - 0x30]!
	0x039495A0 STP D9, D8, [X31 + 0x10]
	0x039495A4 STP X30, X19, [X31 + 0x20]
	0x039495A8 MOV V8.16B, V2.16B
	0x039495AC MOV V9.16B, V1.16B
	0x039495B0 MOV V10.16B, V0.16B
	0x039495B4 MOV X19, X0
	0x039495B8 BL 0x39494A4
	0x039495BC CBZ X0, 0x39495F8
	0x039495C0 MOV X1, X31
	0x039495C4 BL 0x3C32E90
	0x039495C8 CBZ X0, 0x39495F8
	0x039495CC MOV V0.16B, V10.16B
	0x039495D0 MOV V1.16B, V9.16B
	0x039495D4 MOV V2.16B, V8.16B
	0x039495D8 MOV X1, X31
	0x039495DC BL 0x3C40B58
	0x039495E0 STP S0, S1, [X19 + 0x54]
	0x039495E4 STR S2, [X19 + 0x5C]
	0x039495E8 LDP X30, X19, [X31 + 0x20]
	0x039495EC LDP D9, D8, [X31 + 0x10]
	0x039495F0 LDR V10, [X31], #0x30
	0x039495F4 RET
	0x039495F8 BL 0x1C16F20
	0x039495FC LDP S0, S1, [X0 + 0x28]
	0x03949600 LDR V2, [X0 + 0x30]
	0x03949604 RET
	0x03949608 STR D10, [X31 - 0x40]!
	0x0394960C STP D9, D8, [X31 + 0x10]
	0x03949610 STP X30, X21, [X31 + 0x20]
	0x03949614 STP X20, X19, [X31 + 0x30]
	0x03949618 ADRP X21, 0xA98000
	0x0394961C ADRP X20, 0x7AA000
	0x03949620 LDRB W8, [X21 + 0x979]
	0x03949624 LDR X20, [X20 + 0x5A8]
	0x03949628 MOV V8.16B, V2.16B
	0x0394962C MOV V9.16B, V1.16B
	0x03949630 MOV V10.16B, V0.16B
	0x03949634 MOV X19, X0
	0x03949638 TBNZ X8, 0x0, 0x3949650
	0x0394963C ADRP X0, 0x7AA000
	0x03949640 LDR X0, [X0 + 0x5A8]
	0x03949644 BL 0x1C16CF4
	0x03949648 MOVZ W8, 0x1
	0x0394964C STRB W8, [X21 + 0x979]
	0x03949650 LDR X0, [X20]
	0x03949654 LDR W8, [X0 + 0xE0]
	0x03949658 CBNZ W8, 0x3949660
	0x0394965C BL 0x1C16DFC
	0x03949660 ADRP X21, 0xFFFFFFFFFD1A4000
	0x03949664 FCMP S10, 0x0
	0x03949668 ADD X21, X21, 0x608
	0x0394966C B.NE 0x3949680
	0x03949670 LDR V0, [X19 + 0x28]
	0x03949674 FCMP S0, 0x0
	0x03949678 CSET W8, GE
	0x0394967C LDR V10, [X21, W8, UXTW]
	0x03949680 STP S10, S9, [X19 + 0x28]
	0x03949684 LDR X0, [X20]
	0x03949688 LDR W8, [X0 + 0xE0]
	0x0394968C CBNZ W8, 0x3949694
	0x03949690 BL 0x1C16DFC
	0x03949694 FCMP S8, 0x0
	0x03949698 B.NE 0x39496AC
	0x0394969C LDR V0, [X19 + 0x30]
	0x039496A0 FCMP S0, 0x0
	0x039496A4 CSET W8, GE
	0x039496A8 LDR V8, [X21, W8, UXTW]
	0x039496AC STR S8, [X19 + 0x30]
	0x039496B0 LDP X20, X19, [X31 + 0x30]
	0x039496B4 LDP X30, X21, [X31 + 0x20]
	0x039496B8 LDP D9, D8, [X31 + 0x10]
	0x039496BC LDR V10, [X31], #0x40
	0x039496C0 RET
	0x039496C4 LDP S0, S1, [X0 + 0x34]
	0x039496C8 LDP S2, S3, [X0 + 0x3C]
	0x039496CC RET
	0x039496D0 STP S0, S1, [X0 + 0x34]
	0x039496D4 STP S2, S3, [X0 + 0x3C]
	0x039496D8 RET
	0x039496DC STR X30, [X31 - 0x30]!
	0x039496E0 STP X22, X21, [X31 + 0x10]
	0x039496E4 STP X20, X19, [X31 + 0x20]
	0x039496E8 ADRP X22, 0xA98000
	0x039496EC ADRP X21, 0x7B1000
	0x039496F0 MOV X19, X8
	0x039496F4 LDRB W8, [X22 + 0x97A]
	0x039496F8 LDR X21, [X21 + 0x4B8]
	0x039496FC MOV X20, X0
	0x03949700 TBNZ X8, 0x0, 0x3949718
	0x03949704 ADRP X0, 0x7B1000
	0x03949708 LDR X0, [X0 + 0x4B8]
	0x0394970C BL 0x1C16CF4
	0x03949710 MOVZ W8, 0x1
	0x03949714 STRB W8, [X22 + 0x97A]
	0x03949718 LDUR V0, [X20 + 0x7C]
	0x0394971C MOV X8, X20
	0x03949720 MOVI V1.2S, 0x3F, 0x18
	0x03949724 STR D0, [X8 + 0x64]!
	0x03949728 LDR V0, [X8 + 0x20]
	0x0394972C LDUR V2, [X8 - 0x3C]
	0x03949730 LDUR V3, [X8 - 0x34]
	0x03949734 STR S0, [X8 + 0x8]
	0x03949738 FMOV S0, 0.5
	0x00000000 INVALID
	0x03949740 FMUL S0, S3, S0
	0x03949744 STUR D1, [X8 + 0xC]
	0x03949748 STR S0, [X8 + 0x14]
	0x0394974C LDR X9, [X21]
	0x03949750 LDR V2, [X8 + 0x28]
	0x03949754 LDR X9, [X9 + 0xB8]
	0x03949758 FADD S2, S2, S2
	0x0394975C FABS S2, S2
	0x03949760 LDR V3, [X9]
	0x03949764 FCMP S2, S3
	0x03949768 B.PL 0x3949778
	0x0394976C STR S1, [X20 + 0x70]
	0x03949770 STR W31, [X20 + 0x74]
	0x03949774 STR S0, [X20 + 0x78]
	0x03949778 LDR X9, [X8 + 0x10]
	0x0394977C LDR V0, [X8]
	0x03949780 LDP X22, X21, [X31 + 0x10]
	0x03949784 STR X9, [X19 + 0x10]
	0x03949788 STR V0, [X19]
	0x0394978C LDP X20, X19, [X31 + 0x20]
	0x03949790 LDR X30, [X31], #0x30
	0x03949794 RET
	0x03949798 LDUR X9, [X0 + 0x8C]
	0x0394979C LDUR V0, [X0 + 0x7C]
	0x039497A0 STR X9, [X8 + 0x10]
	0x039497A4 STR V0, [X8]
	0x039497A8 RET
	0x039497AC STP X30, X19, [X31 - 0x10]!
	0x039497B0 LDRH W19, [X0 + 0x60]
	0x039497B4 BL 0x39494A4
	0x039497B8 CBZ X0, 0x39497D0
	0x039497BC LDRH W8, [X0 + 0xC8]
	0x039497C0 CMP W19, W8
	0x039497C4 CSET W0, EQ
	0x039497C8 LDP X30, X19, [X31], #0x10
	0x039497CC RET
	0x039497D0 BL 0x1C16F20
	0x039497D4 STR D8, [X31 - 0x30]!
	0x039497D8 STP X30, X21, [X31 + 0x10]
	0x039497DC STP X20, X19, [X31 + 0x20]
	0x039497E0 ADRP X21, 0xA98000
	0x039497E4 ADRP X20, 0x7AA000
	0x039497E8 LDRB W8, [X21 + 0x97C]
	0x039497EC LDR X20, [X20 + 0x5A8]
	0x039497F0 MOV X19, X0
	0x039497F4 TBNZ X8, 0x0, 0x394980C
	0x039497F8 ADRP X0, 0x7AA000
	0x039497FC LDR X0, [X0 + 0x5A8]
	0x03949800 BL 0x1C16CF4
	0x03949804 MOVZ W8, 0x1
	0x03949808 STRB W8, [X21 + 0x97C]
	0x0394980C LDR X0, [X20]
	0x03949810 LDR V8, [X19 + 0x28]
	0x03949814 LDR W8, [X0 + 0xE0]
	0x03949818 CBNZ W8, 0x3949820
	0x0394981C BL 0x1C16DFC
	0x03949820 FCMP S8, 0x0
	0x03949824 ADRP X21, 0xFFFFFFFFFD1A1000
	0x03949828 B.NE 0x3949834
	0x0394982C LDR V0, [X21 + 0x410]
	0x03949830 B 0x3949838
	0x03949834 LDR V0, [X19 + 0x28]
	0x03949838 STR S0, [X19 + 0x28]
	0x0394983C LDR X0, [X20]
	0x03949840 LDR V8, [X19 + 0x30]
	0x03949844 LDR W8, [X0 + 0xE0]
	0x03949848 CBNZ W8, 0x3949850
	0x0394984C BL 0x1C16DFC
	0x03949850 FCMP S8, 0x0
	0x03949854 B.NE 0x3949860
	0x03949858 LDR V0, [X21 + 0x410]
	0x0394985C B 0x3949864
	0x03949860 LDR V0, [X19 + 0x30]
	0x03949864 STR S0, [X19 + 0x30]
	0x03949868 LDP X20, X19, [X31 + 0x20]
	0x0394986C LDP X30, X21, [X31 + 0x10]
	0x03949870 LDR V8, [X31], #0x30
	0x03949874 RET
	0x03949878 STP X30, X19, [X31 - 0x10]!
	0x0394987C MOV X19, X0
	0x03949880 BL 0x39494A4
	0x03949884 LDP S0, S1, [X19 + 0x28]
	0x03949888 LDP S2, S3, [X19 + 0x30]
	0x0394988C LDP S4, S5, [X19 + 0x38]
	0x03949890 LDR V6, [X19 + 0x40]
	0x03949894 MOV X1, X0
	0x03949898 MOV X0, X19
	0x0394989C BL 0x39498AC
	0x039498A0 MOV X0, X19
	0x039498A4 LDP X30, X19, [X31], #0x10
	0x039498A8 B 0x3949ABC
	0x039498AC SUB X31, X31, 0xE0
	0x039498B0 STP D15, D14, [X31 + 0x70]
	0x039498B4 STP D13, D12, [X31 + 0x80]
	0x039498B8 STP D11, D10, [X31 + 0x90]
	0x039498BC STP D9, D8, [X31 + 0xA0]
	0x039498C0 STR X30, [X31 + 0xB0]
	0x039498C4 STP X22, X21, [X31 + 0xC0]
	0x039498C8 STP X20, X19, [X31 + 0xD0]
	0x039498CC ADRP X22, 0xA98000
	0x039498D0 ADRP X21, 0x7AA000
	0x039498D4 LDRB W8, [X22 + 0x97F]
	0x039498D8 LDR X21, [X21 + 0x598]
	0x039498DC MOV V8.16B, V6.16B
	0x039498E0 MOV V9.16B, V5.16B
	0x039498E4 MOV V10.16B, V4.16B
	0x039498E8 MOV V11.16B, V3.16B
	0x039498EC MOV V12.16B, V2.16B
	0x039498F0 MOV V13.16B, V1.16B
	0x039498F4 MOV V14.16B, V0.16B
	0x039498F8 MOV X19, X1
	0x039498FC MOV X20, X0
	0x03949900 TBNZ X8, 0x0, 0x3949918
	0x03949904 ADRP X0, 0x7AA000
	0x03949908 LDR X0, [X0 + 0x598]
	0x0394990C BL 0x1C16CF4
	0x03949910 MOVZ W8, 0x1
	0x03949914 STRB W8, [X22 + 0x97F]
	0x03949918 LDR X0, [X21]
	0x0394991C LDR W8, [X0 + 0xE0]
	0x03949920 CBNZ W8, 0x3949928
	0x03949924 BL 0x1C16DFC
	0x03949928 MOV X0, X19
	0x0394992C MOV X1, X31
	0x03949930 MOV X2, X31
	0x03949934 BL 0x3C354F8
	0x03949938 TBZ X0, 0x0, 0x3949A94
	0x0394993C CBZ X19, 0x3949AB8
	0x03949940 MOV X0, X19
	0x03949944 MOV X1, X31
	0x03949948 BL 0x3912CAC
	0x0394994C LDR X8, [X21]
	0x03949950 MOV X21, X0
	0x03949954 LDR W9, [X8 + 0xE0]
	0x03949958 CBNZ W9, 0x3949964
	0x0394995C MOV X0, X8
	0x03949960 BL 0x1C16DFC
	0x03949964 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X19, 0xA9A000
	023 Move W9, [X19+2421]
	024 Move V8, V6
	025 Move V9, V5
	026 Move V10, V4
	027 Move V11, V3
	028 Move X21, X0
	029 Move [X31+40], S1
	030 Move [X31+48], S2
	031 Move [X31+36], S0
	032 Move [X31+16], X8
	033 Move [X31+24], X1
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {67}
	038 Move X0, 0x7D7000
	039 Move X0, [X0+3416]
	040 Call 0x1C17CF4
	041 Move X0, 0x7D7000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x7D7000
	045 Move X0, [X0+1464]
	046 Call 0x1C17CF4
	047 Move X0, 0x7AF000
	048 Move X0, [X0+2424]
	049 Call 0x1C17CF4
	050 Move X0, 0x7AF000
	051 Move X0, [X0+2432]
	052 Call 0x1C17CF4
	053 Move X0, 0x807000
	054 Move X0, [X0+232]
	055 Call 0x1C17CF4
	056 Move X0, 0x7AF000
	057 Move X0, [X0+960]
	058 Call 0x1C17CF4
	059 Move X0, 0x805000
	060 Move X0, [X0+2696]
	061 Call 0x1C17CF4
	062 Move X0, 0x7AD000
	063 Move X0, [X0+2480]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+2421], W8
	067 Move X19, 0xA90000
	068 Move W8, [X19+1926]
	069 Move [X31+128], X31
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0x7AB000
	073 Move X0, [X0+1440]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X19+1926], W8
	077 Move X19, 0x7AB000
	078 Move X19, [X19+1440]
	079 Move V0, V11
	080 Move V1, V10
	081 Move V2, V9
	082 Move X8, [X19]
	083 Move V3, V8
	084 Move X0, X31
	085 Move X8, [X8+184]
	086 Move S4, [X8+24]
	087 Move S5, [X8+28]
	088 Move V6, [X8+32]
	089 Call Quaternion.op_Multiply, X0, X1
	090 Move X20, 0xA90000
	091 Move W8, [X20+2928]
	092 Move [X31+96], S0
	093 Move [X31+88], S1
	094 Move [X31+80], S2
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x7AB000
	098 Move X0, [X0+1440]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X20+2928], W8
	102 Move X8, [X19]
	103 Move V0, V11
	104 Move V1, V10
	105 Move V2, V9
	106 Move X8, [X8+184]
	107 Move V3, V8
	108 Move X0, X31
	109 Move S4, [X8+60]
	110 Move S5, [X8+64]
	111 Move V6, [X8+68]
	112 Call Quaternion.op_Multiply, X0, X1
	113 Move X20, 0xA90000
	114 Move W8, [X20+2591]
	115 Move V15, V2
	116 Move [X31+68], S1
	117 Move [X31+76], S0
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x7AB000
	121 Move X0, [X0+1440]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X20+2591], W8
	125 Move X8, [X19]
	126 Move V0, V11
	127 Move V1, V10
	128 Move V2, V9
	129 Move X8, [X8+184]
	130 Move V3, V8
	131 Move X0, X31
	132 Move [X31+52], S11
	133 Move [X31+60], S10
	134 Move S4, [X8+72]
	135 Move S5, [X8+76]
	136 Move V6, [X8+80]
	137 Move [X31+60], S9
	138 Move [X31+68], S8
	139 Call Quaternion.op_Multiply, X0, X1
	140 Move X19, 0xA90000
	141 Move W8, [X19+1924]
	142 Move V13, V0
	143 Move V12, V1
	144 Move V14, V2
	145 Compare W8, 0
	146 JumpIfNotEqual {152}
	147 Move X0, 0x7AB000
	148 Move X0, [X0+1448]
	149 Call 0x1C17CF4
	150 Move W8, 1
	151 Move [X19+1924], W8
	152 Move X20, 0x7AB000
	153 Move X20, [X20+1448]
	154 Move X0, [X20]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfEqual {437}
	158 Move W8, 1
	159 Compare W8, 0
	160 JumpIfNotEqual {166}
	161 Move X0, 0x7AB000
	162 Move X0, [X0+1448]
	163 Call 0x1C17CF4
	164 Move W8, 1
	165 Move [X19+1924], W8
	166 Move X0, [X20]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfEqual {441}
	170 Move W8, 1
	171 Compare W8, 0
	172 JumpIfNotEqual {178}
	173 Move X0, 0x7AB000
	174 Move X0, [X0+1448]
	175 Call 0x1C17CF4
	176 Move W8, 1
	177 Move [X19+1924], W8
	178 Move X0, [X20]
	179 Move X19, 0x805000
	180 Move W8, [X0+224]
	181 Move X19, [X19+2696]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move W1, [X21+20]
	186 Move X0, [X19]
	187 Move S9, 0.5
	188 Call 0x1C17D6C
	189 Move X8, [X19]
	190 Move W1, [X21+20]
	191 Move X22, X0
	192 Move X0, X8
	193 Call 0x1C17D6C
	194 Move W29, [X21+20]
	195 Move X23, X0
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move S3, [X31+36]
	198 Move S4, [X31+40]
	199 Move S1, [X31+68]
	200 Move S0, [X31+72]
	201 Move V5, [X31+44]
	202 Move X24, 0x7B3000
	203 Move X24, [X24+3848]
	204 Multiply S0, S3, S0
	205 Multiply S1, S4, S1
	206 Multiply S3, S3, S13
	207 Multiply S4, S4, S12
	208 Multiply S2, S5, S15
	209 Multiply S0, S0, S0
	210 Multiply S1, S1, S1
	211 Multiply S5, S5, S14
	212 Multiply S3, S3, S3
	213 Multiply S4, S4, S4
	214 Add S0, S0, S1
	215 Multiply S2, S2, S2
	216 Multiply S5, S5, S5
	217 Add S3, S3, S4
	218 Add S0, S2, S0
	219 Add S2, S5, S3
	220 Move S1, 0.5
	221 NotImplemented "Instruction FSQRT not yet implemented."
	222 NotImplemented "Instruction FSQRT not yet implemented."
	223 Move X19, X31
	224 Add X20, X22, 36
	225 Add X25, X23, 36
	226 Move W26, 0x43B40000
	227 Move X27, 0xA91000
	228 Multiply S12, S0, S1
	229 Multiply S13, S2, S9
	230 Move W28, 1
	231 Move W8, [X27+1935]
	232 Compare W8, 0
	233 JumpIfNotEqual {237}
	234 Move X0, X24
	235 Call 0x1C17CF4
	236 Move [X27+1935], W28
	237 Move X8, [X24]
	238 NotImplemented "Instruction SCVTF not yet implemented."
	239 Move S2, W26
	240 NotImplemented "Instruction SCVTF not yet implemented."
	241 Move X8, [X8+184]
	242 NotImplemented "Instruction FDIV not yet implemented."
	243 Multiply S2, S1, S0
	244 Add X0, X31, 128
	245 Move S3, [X8]
	246 Move S4, [X8+4]
	247 Move V0, V12
	248 Move V1, V13
	249 Move X1, X31
	250 Call Math.PointInEllipseCircumference, V0, V1, V2, X0, X1
	251 Compare X22, 0
	252 JumpIfEqual {679}
	253 Move W8, [X22+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move [X20-4], S0
	256 Move [X20+4], S1
	257 Compare X23, 0
	258 JumpIfEqual {679}
	259 Move W8, [X23+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move S2, [X31+128]
	262 Move S4, [X31+132]
	263 Move V3, [X21+16]
	264 Add X19, X19, 1
	265 Add X20, X20, 8
	266 Multiply S2, S2, S3
	267 Multiply S3, S4, S3
	268 Subtract S0, S0, S3
	269 Add S1, S1, S2
	270 Move [X25-4], S0
	271 Move [X25+4], S1
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Add X25, X25, 8
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move V0, [X31+36]
	276 Move V1, [X31+96]
	277 Move V2, [X31+88]
	278 Move X8, 0x7AF000
	279 Move V3, [X31+80]
	280 Multiply S0, S0, S1
	281 Move V1, [X31+40]
	282 Move X19, 0x7D7000
	283 Move X28, 0x7AD000
	284 Move X29, 0x7D7000
	285 Multiply S1, S1, S2
	286 Move V2, [X31+44]
	287 Move X8, [X8+960]
	288 Move X19, [X19+1464]
	289 Move X28, [X28+2480]
	290 Multiply S2, S2, S3
	291 Move X0, [X8]
	292 Multiply S0, S0, S0
	293 Multiply S1, S1, S1
	294 Move X29, [X29+3416]
	295 Multiply S2, S2, S2
	296 Add S0, S0, S1
	297 Add S0, S2, S0
	298 NotImplemented "Instruction FSQRT not yet implemented."
	299 Call 0x1C17F10
	300 Move X1, [X19]
	301 Move X24, X0
	302 Call List`1<Vector3>..ctor, X0
	303 Move W8, [X21+24]
	304 Multiply S13, S8, S9
	305 Move [X31+12], S8
	306 Move [X31+48], W8
	307 Add W8, W8, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move [X31+8], W8
	310 NotImplemented "Instruction SCVTF not yet implemented."
	311 Move W8, [X21+20]
	312 Add X11, X22, 32
	313 Add X10, X22, 36
	314 Move W9, W31
	315 NotImplemented "Instruction FDIV not yet implemented."
	316 Move [X31+88], X10
	317 Move [X31+96], X11
	318 Add X10, X23, 32
	319 Add X27, X23, 36
	320 Move [X31+80], X10
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Add W10, W9, 1
	323 Move [X31+68], W9
	324 Move [X31+72], W10
	325 Compare X22, 0
	326 JumpIfEqual {679}
	327 NotImplemented "Instruction SCVTF not yet implemented."
	328 Move W9, [X31+72]
	329 Multiply S0, S14, S0
	330 Move X19, X31
	331 Move X20, X31
	332 NotImplemented "Instruction SCVTF not yet implemented."
	333 Multiply S1, S14, S1
	334 Subtract S15, S0, S13
	335 Subtract S12, S1, S13
	336 Move W9, [X22+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add X10, X22, X19
	339 Move S9, [X10+32]
	340 Move S8, [X10+36]
	341 Subtract W8, W8, 1
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Add X8, X20, 1
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Add X9, X22, X19
	346 Add X8, X9, 40
	347 Add X9, X9, 44
	348 Move X9, [X31+88]
	349 Move X8, [X31+96]
	350 Move X0, [X28]
	351 Move V10, [X9]
	352 Move V11, [X8]
	353 Move W1, 4
	354 Call 0x1C17D6C
	355 Compare X0, 0
	356 JumpIfEqual {679}
	357 Move W8, [X0+24]
	358 Move X25, X0
	359 Compare W8, 0
	360 JumpIfEqual {678}
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move [X25+32], S11
	363 Move [X25+40], S15
	364 Move [X25+40], S10
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move [X25+44], S9
	367 Move [X25+52], S15
	368 Move [X25+52], S8
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move [X25+56], S11
	371 Move [X25+64], S12
	372 Move [X25+64], S10
	373 Move [X25+68], S9
	374 Move [X25+76], S12
	375 Move [X25+76], S8
	376 Compare X23, 0
	377 JumpIfEqual {679}
	378 Move W8, [X23+24]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move W9, [X21+20]
	381 Add X10, X23, X19
	382 Move S9, [X10+32]
	383 Move S8, [X10+36]
	384 Subtract W9, W9, 1
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Add X9, X20, 1
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Add X9, X23, X19
	389 Add X8, X9, 40
	390 Add X9, X9, 44
	391 Move X8, [X31+80]
	392 Move X9, X27
	393 Move X0, [X28]
	394 Move V10, [X9]
	395 Move V11, [X8]
	396 Move W1, 4
	397 Call 0x1C17D6C
	398 Compare X0, 0
	399 JumpIfEqual {679}
	400 Move W8, [X0+24]
	401 Move X26, X0
	402 Compare W8, 0
	403 JumpIfEqual {678}
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move [X26+32], S9
	406 Move [X26+40], S15
	407 Move [X26+40], S8
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move [X26+44], S11
	410 Move [X26+52], S15
	411 Move [X26+52], S10
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move [X26+56], S9
	414 Move [X26+64], S12
	415 Move [X26+64], S8
	416 Move [X26+68], S11
	417 Move [X26+76], S12
	418 Move [X26+76], S10
	419 Compare X24, 0
	420 JumpIfEqual {679}
	421 Move X2, [X29]
	422 Move X0, X24
	423 Move X1, X25
	424 Call List`1<Vector3>.AddRange, X0, X1
	425 Move X2, [X29]
	426 Move X0, X24
	427 Move X1, X26
	428 Call List`1<Vector3>.AddRange, X0, X1
	429 NotImplemented "Instruction LDRSW not yet implemented."
	430 Add X20, X20, 1
	431 Add X19, X19, 8
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move W9, [X31+48]
	434 Move W10, [X31+68]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move W9, [X31+72]
	437 Call 0x1C17DFC
	438 Move W8, [X19+1924]
	439 Compare W8, 0
	440 JumpIfNotEqual {166}
	441 Call 0x1C17DFC
	442 Move W8, [X19+1924]
	443 Compare W8, 0
	444 JumpIfNotEqual {178}
	445 Move W8, [X21+20]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Compare X22, 0
	448 JumpIfEqual {679}
	449 Move V0, [X31+12]
	450 Move X19, X31
	451 Move X20, X31
	452 Add X10, X22, 32
	453 Add X9, X22, 36
	454 Add X26, X23, 32
	455 Add X27, X23, 36
	456 Subtract S0, S0, S13
	457 NotImplemented "Instruction FNEG not yet implemented."
	458 Move [X31+72], X9
	459 Move [X31+80], X10
	460 Move [X31+88], S0
	461 Move W9, [X22+24]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Add X10, X22, X19
	464 Move S15, [X10+32]
	465 Move S0, [X10+36]
	466 Subtract W8, W8, 1
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Move [X31+96], S0
	469 Add X10, X20, 1
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Add X10, X22, X19
	472 Add X9, X10, 40
	473 Add X10, X10, 44
	474 Move X10, [X31+72]
	475 Move X9, [X31+80]
	476 Compare X23, 0
	477 JumpIfEqual {679}
	478 Move W11, [X23+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move V11, [X9]
	481 Add X9, X23, X19
	482 Move V10, [X10]
	483 Move S9, [X9+32]
	484 Move S8, [X9+36]
	485 Move X8, W8
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Add X8, X20, 1
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Add X9, X23, X19
	490 Add X8, X9, 40
	491 Add X9, X9, 44
	492 Move X8, X26
	493 Move X9, X27
	494 Move X0, [X28]
	495 Move V12, [X9]
	496 Move V13, [X8]
	497 Move W1, 4
	498 Call 0x1C17D6C
	499 Compare X0, 0
	500 JumpIfEqual {679}
	501 Move W8, [X0+24]
	502 Move V0, [X31+88]
	503 Move X25, X0
	504 Compare W8, 0
	505 JumpIfEqual {678}
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move [X25+32], S11
	508 Move [X25+40], S0
	509 Move [X25+40], S10
	510 Move V1, [X31+96]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move [X25+44], S15
	513 Move [X25+52], S0
	514 Move [X25+52], S1
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move [X25+56], S13
	517 Move [X25+64], S0
	518 Move [X25+64], S12
	519 Move [X25+68], S9
	520 Move [X25+76], S0
	521 Move [X25+76], S8
	522 Move X0, [X28]
	523 Move W1, 4
	524 Call 0x1C17D6C
	525 Compare X0, 0
	526 JumpIfEqual {679}
	527 Move W8, [X0+24]
	528 Move X1, X0
	529 Compare W8, 0
	530 JumpIfEqual {678}
	531 Move V0, [X31+96]
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Move [X1+32], S15
	534 Move [X1+40], S14
	535 Move [X1+40], S0
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move [X1+44], S11
	538 Move [X1+52], S14
	539 Move [X1+52], S10
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move [X1+56], S9
	542 Move [X1+64], S14
	543 Move [X1+64], S8
	544 Move [X1+68], S13
	545 Move [X1+76], S14
	546 Move [X1+76], S12
	547 Compare X24, 0
	548 JumpIfEqual {679}
	549 Move X2, [X29]
	550 Move X0, X24
	551 Call List`1<Vector3>.AddRange, X0, X1
	552 Move X2, [X29]
	553 Move X0, X24
	554 Move X1, X25
	555 Call List`1<Vector3>.AddRange, X0, X1
	556 NotImplemented "Instruction LDRSW not yet implemented."
	557 Move S9, [X31+60]
	558 Move S8, [X31+64]
	559 Move S11, [X31+52]
	560 Move S10, [X31+56]
	561 Add X20, X20, 1
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Add X19, X19, 8
	564 Move S9, [X31+60]
	565 Move S8, [X31+64]
	566 Move S11, [X31+52]
	567 Move S10, [X31+56]
	568 Compare X24, 0
	569 JumpIfEqual {679}
	570 Move W8, [X24+24]
	571 Move X19, 0x7D7000
	572 Move X19, [X19+1456]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X20, 0x7AF000
	575 Move X23, 0x807000
	576 Move X20, [X20+2432]
	577 Move X23, [X23+232]
	578 Move W22, W31
	579 Move X2, [X20]
	580 Move X0, X24
	581 Move W1, W22
	582 Call List`1<Vector3>.get_Item, X0, X1
	583 Move V4, V0
	584 Move V5, V1
	585 Move V6, V2
	586 Move V0, V11
	587 Move V1, V10
	588 Move V2, V9
	589 Move V3, V8
	590 Move X0, X31
	591 Call Quaternion.op_Multiply, X0, X1
	592 Move X2, [X23]
	593 Move X0, X24
	594 Move W1, W22
	595 Call List`1<Vector3>.set_Item, X0, X1, X2
	596 Move W8, [X24+24]
	597 Add W22, W22, 1
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move X1, [X19]
	600 Move X0, X24
	601 Call List`1<Vector3>.ToArray, X0
	602 Move X19, [X31+24]
	603 Compare X19, 0
	604 JumpIfEqual {679}
	605 Move X1, X0
	606 Move X0, X19
	607 Move X2, X31
	608 Call ProBuilderMesh.GeometryWithPoints, X0, X1
	609 Move W8, [X21+28]
	610 Compare W8, 0
	611 JumpIfEqual {633}
	612 Move W8, [X21+20]
	613 Move W9, [X31+8]
	614 Multiply W8, W9, W8
	615 Move W8, W8
	616 ShiftRight W8, 31
	617 And W8, W8, 0x3FFFFFFF
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Move X9, [X19+40]
	620 Compare X9, 0
	621 JumpIfEqual {679}
	622 Move W11, [X9+24]
	623 Move W10, W31
	624 Move W12, 1
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Add X13, X9, W10
	627 Move X13, [X13+32]
	628 Compare X13, 0
	629 JumpIfEqual {679}
	630 Add W10, W10, 1
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move [X13+24], W12
	633 Move X8, [X21]
	634 Move S0, [X31+36]
	635 Move S1, [X31+40]
	636 Move V2, [X31+44]
	637 Add X2, X31, 136
	638 Move X9, [X8+376]
	639 Move [X31+136], X31
	640 Move [X31+144], X31
	641 Move [X31+152], X31
	642 Move X3, [X8+384]
	643 Add X8, X31, 104
	644 Move X0, X21
	645 Move X1, X19
	646 Move V3, V11
	647 Move V4, V10
	648 Move V5, V9
	649 Move V6, V8
	650 NotImplemented "Instruction BLR not yet implemented."
	651 Move X8, [X31+120]
	652 NotImplemented "Instruction LDUR not yet implemented."
	653 Move X9, [X31+16]
	654 Move X20, [X31+304]
	655 Move X19, [X31+312]
	656 Move X22, [X31+288]
	657 Move X21, [X31+296]
	658 Move X24, [X31+272]
	659 Move X23, [X31+280]
	660 Move X26, [X31+256]
	661 Move X25, [X31+264]
	662 Move X28, [X31+240]
	663 Move X27, [X31+248]
	664 Move X29, [X31+224]
	665 Move X30, [X31+232]
	666 Move D9, [X31+208]
	667 Move D8, [X31+216]
	668 Move D11, [X31+192]
	669 Move D10, [X31+200]
	670 Move D13, [X31+176]
	671 Move D12, [X31+184]
	672 Move D15, [X31+160]
	673 Move D14, [X31+168]
	674 Move [X9+16], X8
	675 Move [X9], V0
	676 Add X31, X31, 320
	677 Return X0
	678 Call 0x1C17F28
	679 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03949968 MOV X1, X31
	0x0394996C MOV X2, X31
	0x03949970 BL 0x3C354F8
	0x03949974 TBZ X0, 0x0, 0x3949A94
	0x03949978 MOV X0, X19
	0x0394997C MOV X1, X31
	0x03949980 BL 0x3C32E90

ISIL:
	001 Move X8, 0x3E800000
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Move W9, 1
	004 Move X1, X31
	005 Move [X0+16], X8
	006 Move [X0+28], W9
	007 Call Object..ctor, X0
	008 Return 

