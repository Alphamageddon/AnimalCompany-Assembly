Type: UnityEngine.ProBuilder.Shapes.ProBuilderShape

Method: UnityEngine.ProBuilder.Shapes.Shape get_shape()

Disassembly:
	0x0394A438 CBZ X0, 0x394A47C
	0x0394A43C ADD X8, X31, 0x8

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_shape(UnityEngine.ProBuilder.Shapes.Shape value)

Disassembly:
	0x0394A440 MOV X1, X31
	0x0394A444 BL 0x3C17768

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.ProBuilder.PivotLocation get_pivotLocation()

Disassembly:
	0x0394A448 LDR X8, [X31 + 0x18]
	0x0394A44C LDUR V0, [X31 + 0x8]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_pivotLocation(UnityEngine.ProBuilder.PivotLocation value)

Disassembly:
	0x0394A450 LDR X30, [X31 + 0x40]
	0x0394A454 STR X8, [X31 + 0x30]

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: UnityEngine.Vector3 get_pivotLocalPosition()

Disassembly:
	0x0394A458 STR V0, [X31 + 0x2]
	0x0394A45C STR X8, [X20 + 0x10]
	0x0394A460 STR V0, [X20]

ISIL:
	001 Move S0, [X0+84]
	002 Move S1, [X0+88]
	003 Move V2, [X0+92]
	004 Return X0

Method: System.Void set_pivotLocalPosition(UnityEngine.Vector3 value)

Disassembly:
	0x0394A464 LDR V0, [X31 + 0x2]
	0x0394A468 STR X8, [X19 + 0x10]
	0x0394A46C STR V0, [X19]

ISIL:
	001 Move [X0+84], S0
	002 Move [X0+92], S1
	003 Move [X0+92], S2
	004 Return 

Method: UnityEngine.Vector3 get_pivotGlobalPosition()

Disassembly:
	0x0394A470 LDP X20, X19, [X31 + 0x50]
	0x0394A474 ADD X31, X31, 0x60
	0x0394A478 RET
	0x0394A47C BL 0x1C16F20
	0x0394A480 SUB X31, X31, 0x110
	0x0394A484 STP D15, D14, [X31 + 0x70]
	0x0394A488 STP D13, D12, [X31 + 0x80]
	0x0394A48C STP D11, D10, [X31 + 0x90]
	0x0394A490 STP D9, D8, [X31 + 0xA0]
	0x0394A494 STP X29, X30, [X31 + 0xB0]
	0x0394A498 STP X28, X27, [X31 + 0xC0]
	0x0394A49C STP X26, X25, [X31 + 0xD0]
	0x0394A4A0 STP X24, X23, [X31 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ProBuilderShape.get_mesh, X0
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, X31
	008 Call Component.get_transform, X0
	009 Compare X0, 0
	010 JumpIfEqual {19}
	011 Move S1, [X19+88]
	012 Move S2, [X19+92]
	013 Move V0, [X19+84]
	014 Move X1, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call Transform.TransformPoint, X0, X1
	018 Return X0
	019 Call 0x1C17F20

Method: System.Void set_pivotGlobalPosition(UnityEngine.Vector3 value)

Disassembly:
	0x0394A59C MOV X22, X0
	0x0394A5A0 MOVZ W19, 0x2
	0x0394A5A4 MOVZ W20, 0xC
	0x0394A5A8 ADRP X27, 0xA8E000
	0x0394A5AC MOVI V8.2S, 0x3F, 0x18
	0x0394A5B0 FMOV S9, 0.5
	0x0394A5B4 LDR X0, [X25]
	0x0394A5B8 LDR W8, [X0 + 0xE0]
	0x0394A5BC CBNZ W8, 0x394A5C8
	0x0394A5C0 BL 0x1C16DFC
	0x0394A5C4 LDR X0, [X25]
	0x0394A5C8 LDR X9, [X0 + 0xB8]
	0x0394A5CC LDR X8, [X9 + 0x8]
	0x0394A5D0 CBZ X8, 0x394AD50
	0x0394A5D4 LDR W10, [X8 + 0x18]
	0x0394A5D8 SUB W23, W19, 0x2
	0x0394A5DC CMP W23, W10
	0x0394A5E0 B.GE 0x394A8F0
	0x0394A5E4 LDR W10, [X0 + 0xE0]
	0x0394A5E8 CBNZ W10, 0x394A600
	0x0394A5EC BL 0x1C16DFC
	0x0394A5F0 LDR X8, [X25]
	0x0394A5F4 LDR X9, [X8 + 0xB8]
	0x0394A5F8 LDR X8, [X9 + 0x8]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move V8, V2
	007 Move V9, V1
	008 Move V10, V0
	009 Move X19, X0
	010 Call ProBuilderShape.get_mesh, X0
	011 Compare X0, 0
	012 JumpIfEqual {31}
	013 Move X1, X31
	014 Call Component.get_transform, X0
	015 Compare X0, 0
	016 JumpIfEqual {31}
	017 Move V0, V10
	018 Move V1, V9
	019 Move V2, V8
	020 Move X1, X31
	021 Call Transform.InverseTransformPoint, X0, X1
	022 Move [X19+84], S0
	023 Move [X19+92], S1
	024 Move [X19+92], S2
	025 Move X30, [X31+32]
	026 Move X19, [X31+40]
	027 Move D9, [X31+16]
	028 Move D8, [X31+24]
	029 Move V10, [X31+48]
	030 Return 
	031 Call 0x1C17F20

Method: UnityEngine.Vector3 get_size()

Disassembly:
	0x0394A5FC CBZ X8, 0x394AD50
	0x0394A600 LDR W10, [X8 + 0x18]
	0x0394A604 CMP W23, W10

ISIL:
	001 Move S0, [X0+40]
	002 Move S1, [X0+44]
	003 Move V2, [X0+48]
	004 Return X0

Method: System.Void set_size(UnityEngine.Vector3 value)

Disassembly:
	0x0394A608 B.CS 0x394AD54
	0x0394A60C LDR X9, [X9]
	0x0394A610 CBZ X9, 0x394AD50
	0x0394A614 SXTW X28, W23
	0x0394A618 ADD X8, X8, X28, 0x2, LSL
	0x0394A61C LDRSW X8, [X8 + 0x20]
	0x0394A620 LDR W10, [X9 + 0x18]
	0x0394A624 CMP W8, W10
	0x0394A628 B.CS 0x394AD54
	0x0394A62C MADD X8, X8, X20, X9
	0x0394A630 LDRB W9, [X27 + 0x785]
	0x0394A634 LDR V11, [X8 + 0x20]
	0x0394A638 LDR V10, [X8 + 0x28]
	0x0394A63C CBNZ W9, 0x394A650
	0x0394A640 MOV X0, X24
	0x0394A644 BL 0x1C16CF4
	0x0394A648 MOVZ W8, 0x1
	0x0394A64C STRB W8, [X27 + 0x785]
	0x0394A650 LDR X0, [X24]
	0x0394A654 LDR W8, [X0 + 0xE0]
	0x0394A658 CBNZ W8, 0x394A660
	0x0394A65C BL 0x1C16DFC
	0x00000000 INVALID
	0x0394A664 FADDP S0, V0.2S
	0x0394A668 FMUL S1, S10, S10
	0x0394A66C FADD S0, S1, S0
	0x0394A670 FSQRT S1, S0
	0x0394A674 FCMP S1, S15
	0x0394A678 B.LE 0x394A68C
	0x0394A67C UNIMPLEMENTED
	0x00000000 INVALID
	0x0394A684 FDIV S1, S10, S1
	0x0394A688 B 0x394A6C8
	0x0394A68C ADRP X8, 0xA8E000
	0x0394A690 LDRB W8, [X8 + 0x783]
	0x0394A694 CBNZ W8, 0x394A6B0
	0x0394A698 ADRP X0, 0x7A9000
	0x0394A69C LDR X0, [X0 + 0x5A0]
	0x0394A6A0 BL 0x1C16CF4
	0x0394A6A4 MOVZ W8, 0x1
	0x0394A6A8 ADRP X9, 0xA8E000
	0x0394A6AC STRB W8, [X9 + 0x783]
	0x0394A6B0 ADRP X8, 0x7A9000
	0x0394A6B4 LDR X8, [X8 + 0x5A0]
	0x0394A6B8 LDR X8, [X8]
	0x0394A6BC LDR X8, [X8 + 0xB8]
	0x0394A6C0 LDR V0, [X8]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA98000
	009 Move X20, 0x7AA000
	010 Move W8, [X21+2425]
	011 Move X20, [X20+1448]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x7AA000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2425], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, -48611328
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Add X21, X21, 1544
	033 Move V0, [X19+40]
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move V10, [X21]
	037 Move [X19+40], S10
	038 Move [X19+48], S9
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move V0, [X19+48]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move V8, [X21]
	049 Move [X19+48], S8
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Move D9, [X31+16]
	055 Move D8, [X31+24]
	056 Move V10, [X31+64]
	057 Return 

Method: UnityEngine.Quaternion get_rotation()

Disassembly:
	0x0394A6C4 LDR V1, [X8 + 0x8]
	0x0394A6C8 CBZ X22, 0x394AD50
	0x0394A6CC LDR W8, [X22 + 0x18]

ISIL:
	001 Move S0, [X0+52]
	002 Move S1, [X0+56]
	003 Move S2, [X0+60]
	004 Move S3, [X0+64]
	005 Return X0

Method: System.Void set_rotation(UnityEngine.Quaternion value)

Disassembly:
	0x0394A6D0 CMP W23, W8
	0x0394A6D4 B.CS 0x394AD54
	0x00000000 INVALID

ISIL:
	001 Move [X0+52], S0
	002 Move [X0+60], S1
	003 Move [X0+60], S2
	004 Move [X0+68], S3
	005 Return 

Method: UnityEngine.Bounds get_editionBounds()

Disassembly:
	0x0394A6DC FMUL S1, S1, S9
	0x0394A6E0 MADD X8, X28, X20, X22
	0x0394A6E4 STR D0, [X8 + 0x20]
	0x0394A6E8 STR S1, [X8 + 0x28]
	0x0394A6EC LDR X8, [X25]
	0x0394A6F0 LDR X9, [X8 + 0xB8]
	0x0394A6F4 LDR X8, [X9 + 0x8]
	0x0394A6F8 CBZ X8, 0x394AD50
	0x0394A6FC LDR W10, [X8 + 0x18]
	0x0394A700 ADD W23, W23, 0x1
	0x0394A704 CMP W23, W10
	0x0394A708 B.CS 0x394AD54
	0x0394A70C LDR X9, [X9]
	0x0394A710 CBZ X9, 0x394AD50
	0x0394A714 SUB W10, W19, 0x1
	0x0394A718 SXTW X28, W10
	0x0394A71C ADD X8, X8, X28, 0x2, LSL
	0x0394A720 LDRSW X8, [X8 + 0x20]
	0x0394A724 LDR W10, [X9 + 0x18]
	0x0394A728 CMP W8, W10
	0x0394A72C B.CS 0x394AD54
	0x0394A730 MADD X8, X8, X20, X9
	0x0394A734 LDRB W9, [X27 + 0x785]
	0x0394A738 LDR V11, [X8 + 0x20]
	0x0394A73C LDR V10, [X8 + 0x28]
	0x0394A740 CBNZ W9, 0x394A754
	0x0394A744 MOV X0, X24
	0x0394A748 BL 0x1C16CF4
	0x0394A74C MOVZ W8, 0x1
	0x0394A750 STRB W8, [X27 + 0x785]
	0x0394A754 LDR X0, [X24]
	0x0394A758 LDR W8, [X0 + 0xE0]
	0x0394A75C CBNZ W8, 0x394A764
	0x0394A760 BL 0x1C16DFC
	0x00000000 INVALID
	0x0394A768 FADDP S0, V0.2S
	0x0394A76C FMUL S1, S10, S10
	0x0394A770 FADD S0, S1, S0
	0x0394A774 FSQRT S1, S0
	0x0394A778 FCMP S1, S15
	0x0394A77C B.LE 0x394A790
	0x0394A780 UNIMPLEMENTED
	0x00000000 INVALID
	0x0394A788 FDIV S1, S10, S1
	0x0394A78C B 0x394A7CC
	0x0394A790 ADRP X8, 0xA8E000
	0x0394A794 LDRB W8, [X8 + 0x783]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA98000
	007 Move X21, 0x7B1000
	008 Move X19, X8
	009 Move W8, [X22+2426]
	010 Move X21, [X21+1208]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7B1000
	017 Move X0, [X0+1208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2426], W8
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 Move X8, X20
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X8+100], D0
	025 Move V0, [X8+32]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move [X8+8], S0
	029 Move S0, 0.5
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 Multiply S0, S3, S0
	032 Move [X8+12], D1
	033 Move [X8+20], S0
	034 Move X9, [X21]
	035 Move V2, [X8+40]
	036 Move X9, [X9+184]
	037 Add S2, S2, S2
	038 NotImplemented "Instruction FABS not yet implemented."
	039 Move V3, [X9]
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move [X20+112], S1
	042 Move [X20+116], W31
	043 Move [X20+120], S0
	044 Move X9, [X8+16]
	045 Move V0, [X8]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move [X19+16], X9
	049 Move [X19], V0
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+48]
	053 Return X0

Method: UnityEngine.Bounds get_shapeBox()

Disassembly:
	0x0394A798 CBNZ W8, 0x394A7B4
	0x0394A79C ADRP X0, 0x7A9000
	0x0394A7A0 LDR X0, [X0 + 0x5A0]
	0x0394A7A4 BL 0x1C16CF4
	0x0394A7A8 MOVZ W8, 0x1

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Boolean get_isEditable()

Disassembly:
	0x0394A7AC ADRP X9, 0xA8E000
	0x0394A7B0 STRB W8, [X9 + 0x783]
	0x0394A7B4 ADRP X8, 0x7A9000
	0x0394A7B8 LDR X8, [X8 + 0x5A0]
	0x0394A7BC LDR X8, [X8]
	0x0394A7C0 LDR X8, [X8 + 0xB8]
	0x0394A7C4 LDR V0, [X8]
	0x0394A7C8 LDR V1, [X8 + 0x8]
	0x0394A7CC LDR W8, [X22 + 0x18]
	0x0394A7D0 CMP W23, W8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction LDRH not yet implemented."
	004 Call ProBuilderShape.get_mesh, X0
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Call 0x1C17F20

Method: UnityEngine.ProBuilder.ProBuilderMesh get_mesh()

Disassembly:
	0x0394A4A4 STP X22, X21, [X31 + 0xF0]
	0x0394A4A8 STP X20, X19, [X31 + 0x100]
	0x0394A4AC STP S5, S6, [X31 + 0x30]
	0x0394A4B0 STP S3, S4, [X31 + 0x28]
	0x0394A4B4 STR X1, [X31 + 0x38]
	0x0394A4B8 STR X8, [X31 + 0x20]
	0x0394A4BC ADRP X19, 0xA97000
	0x0394A4C0 ADRP X25, 0x805000
	0x0394A4C4 LDRB W8, [X19 + 0x983]
	0x0394A4C8 LDR X25, [X25 + 0x148]
	0x0394A4CC MOV V12.16B, V2.16B
	0x0394A4D0 MOV V13.16B, V1.16B
	0x0394A4D4 MOV V14.16B, V0.16B
	0x0394A4D8 MOV X21, X0
	0x0394A4DC TBNZ X8, 0x0, 0x394A548
	0x0394A4E0 ADRP X0, 0x804000
	0x0394A4E4 LDR X0, [X0 + 0x3F0]
	0x0394A4E8 BL 0x1C16CF4
	0x0394A4EC ADRP X0, 0x804000
	0x0394A4F0 LDR X0, [X0 + 0x560]
	0x0394A4F4 BL 0x1C16CF4
	0x0394A4F8 ADRP X0, 0x7AA000
	0x0394A4FC LDR X0, [X0 + 0xE58]
	0x0394A500 BL 0x1C16CF4
	0x0394A504 ADRP X0, 0x804000
	0x0394A508 LDR X0, [X0 + 0xC60]
	0x0394A50C BL 0x1C16CF4
	0x0394A510 ADRP X0, 0x804000
	0x0394A514 LDR X0, [X0 + 0xC68]
	0x0394A518 BL 0x1C16CF4
	0x0394A51C ADRP X0, 0x805000
	0x0394A520 LDR X0, [X0 + 0x148]
	0x0394A524 BL 0x1C16CF4
	0x0394A528 ADRP X0, 0x804000
	0x0394A52C LDR X0, [X0 + 0x5B8]
	0x0394A530 BL 0x1C16CF4
	0x0394A534 ADRP X0, 0x7AB000
	0x0394A538 LDR X0, [X0 + 0x9B0]
	0x0394A53C BL 0x1C16CF4
	0x0394A540 MOVZ W8, 0x1
	0x0394A544 STRB W8, [X19 + 0x983]
	0x0394A548 LDR X0, [X25]
	0x0394A54C LDR W8, [X0 + 0xE0]
	0x0394A550 CBNZ W8, 0x394A55C
	0x0394A554 BL 0x1C16DFC
	0x0394A558 LDR X0, [X25]
	0x0394A55C LDR X8, [X0 + 0xB8]
	0x0394A560 LDR X8, [X8 + 0x8]
	0x0394A564 CBZ X8, 0x394AD50
	0x0394A568 ADRP X9, 0x7AB000
	0x0394A56C LDR X9, [X9 + 0x9B0]
	0x0394A570 LDR W1, [X8 + 0x18]
	0x0394A574 ADRP X29, 0x804000
	0x0394A578 ADRP X26, 0x804000
	0x0394A57C LDR X0, [X9]
	0x0394A580 LDR X29, [X29 + 0xC60]
	0x0394A584 LDR X26, [X26 + 0xC68]
	0x0394A588 BL 0x1C16D6C
	0x0394A58C ADRP X24, 0x7A9000
	0x0394A590 ADRP X8, 0xFFFFFFFFFD1A0000
	0x0394A594 LDR X24, [X24 + 0x5A8]
	0x0394A598 LDR V15, [X8 + 0x17C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA98000
	006 Move X21, 0x7AA000
	007 Move W8, [X20+2427]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x804000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0x805000
	018 Move X0, [X0+1352]
	019 Call 0x1C17CF4
	020 Move X0, 0x7AA000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2427], W8
	025 Move X0, [X21]
	026 Move X20, [X19+72]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {46}
	039 Move X8, 0x804000
	040 Move X8, [X8+2656]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call 0x21A4894, X0
	044 Move X20, X0
	045 Move [X19+72], X0
	046 Move X20, [X19+72]
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {70}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Component.get_gameObject, X0
	063 Compare X0, 0
	064 JumpIfEqual {76}
	065 Move X8, 0x805000
	066 Move X8, [X8+1352]
	067 Move X1, [X8]
	068 Call 0x21E61FC, X0
	069 Move [X19+72], X0
	070 Move X0, [X19+72]
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return X0
	076 Call 0x1C17F20

Method: System.Void OnValidate()

Disassembly:
	0x0394A7D4 B.CS 0x394AD54
	0x0394A7D8 FMUL S1, S1, S9
	0x00000000 INVALID
	0x0394A7E0 MADD X8, X28, X20, X22
	0x0394A7E4 STR D0, [X8 + 0x20]
	0x0394A7E8 STR S1, [X8 + 0x28]
	0x0394A7EC LDR X8, [X25]
	0x0394A7F0 LDR X9, [X8 + 0xB8]
	0x0394A7F4 LDR X8, [X9 + 0x8]
	0x0394A7F8 CBZ X8, 0x394AD50
	0x0394A7FC LDR W10, [X8 + 0x18]
	0x0394A800 ADD W23, W23, 0x1
	0x0394A804 CMP W23, W10
	0x0394A808 B.CS 0x394AD54
	0x0394A80C LDR X9, [X9]
	0x0394A810 CBZ X9, 0x394AD50
	0x0394A814 SXTW X28, W19
	0x0394A818 ADD X8, X8, X28, 0x2, LSL
	0x0394A81C LDRSW X8, [X8 + 0x20]
	0x0394A820 LDR W10, [X9 + 0x18]
	0x0394A824 CMP W8, W10
	0x0394A828 B.CS 0x394AD54
	0x0394A82C MADD X8, X8, X20, X9
	0x0394A830 LDRB W9, [X27 + 0x785]
	0x0394A834 LDR V11, [X8 + 0x20]
	0x0394A838 LDR V10, [X8 + 0x28]
	0x0394A83C CBNZ W9, 0x394A850
	0x0394A840 MOV X0, X24
	0x0394A844 BL 0x1C16CF4
	0x0394A848 MOVZ W8, 0x1
	0x0394A84C STRB W8, [X27 + 0x785]
	0x0394A850 LDR X0, [X24]
	0x0394A854 LDR W8, [X0 + 0xE0]
	0x0394A858 CBNZ W8, 0x394A860
	0x0394A85C BL 0x1C16DFC
	0x00000000 INVALID
	0x0394A864 FADDP S0, V0.2S
	0x0394A868 FMUL S1, S10, S10
	0x0394A86C FADD S0, S1, S0
	0x0394A870 FSQRT S1, S0
	0x0394A874 FCMP S1, S15

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA98000
	007 Move X20, 0x7AA000
	008 Move W8, [X21+2428]
	009 Move X20, [X20+1448]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x7AA000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2428], W8
	020 Move X0, [X20]
	021 Move V8, [X19+40]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 Move X21, -48623616
	028 Move V0, [X21+1040]
	029 Move V0, [X19+40]
	030 Move [X19+40], S0
	031 Move X0, [X20]
	032 Move V8, [X19+48]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V0, [X21+1040]
	039 Move V0, [X19+48]
	040 Move [X19+48], S0
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Move V8, [X31+48]
	046 Return 

Method: System.Void UpdateComponent()

Disassembly:
	0x0394A878 B.LE 0x394A88C
	0x0394A87C UNIMPLEMENTED
	0x00000000 INVALID
	0x0394A884 FDIV S1, S10, S1
	0x0394A888 B 0x394A8C8
	0x0394A88C ADRP X8, 0xA8E000
	0x0394A890 LDRB W8, [X8 + 0x783]
	0x0394A894 CBNZ W8, 0x394A8B0
	0x0394A898 ADRP X0, 0x7A9000
	0x0394A89C LDR X0, [X0 + 0x5A0]
	0x0394A8A0 BL 0x1C16CF4
	0x0394A8A4 MOVZ W8, 0x1
	0x0394A8A8 ADRP X9, 0xA8E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ProBuilderShape.get_mesh, X0
	005 Move S0, [X19+40]
	006 Move S1, [X19+44]
	007 Move S2, [X19+48]
	008 Move S3, [X19+52]
	009 Move S4, [X19+56]
	010 Move S5, [X19+60]
	011 Move V6, [X19+64]
	012 Move X1, X0
	013 Move X0, X19
	014 Call ProBuilderShape.ResetPivot, X0, X1, X2, X3
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call ProBuilderShape.Rebuild, X0
	019 Return 

Method: System.Void UpdateBounds(UnityEngine.Bounds bounds)

Disassembly:
	0x0394AC5C LDR W8, [X24 + 0x18]
	0x0394AC60 CMP W19, W8
	0x0394AC64 B.CS 0x394AD54
	0x0394AC68 LDR X8, [X20, X19, LSL #3]
	0x0394AC6C CBZ X8, 0x394AD50
	0x0394AC70 MOVZ W9, 0x7
	0x0394AC74 STR W9, [X8 + 0x54]
	0x0394AC78 LDR W8, [X24 + 0x18]
	0x0394AC7C ADD X19, X19, 0x1
	0x0394AC80 CMP W19, W8
	0x0394AC84 B.LT 0x394AB20
	0x0394AC88 ADRP X8, 0x804000
	0x0394AC8C LDR X8, [X8 + 0x5B8]
	0x0394AC90 LDR X0, [X8]
	0x0394AC94 BL 0x1C16F10
	0x0394AC98 MOV X1, X31
	0x0394AC9C MOV X23, X0
	0x0394ACA0 BL 0x39333EC
	0x0394ACA4 CBZ X23, 0x394AD50
	0x0394ACA8 LDR X19, [X31 + 0x38]
	0x0394ACAC MOVZ W8, 0x41F00000
	0x0394ACB0 STR W8, [X23 + 0x14]
	0x0394ACB4 CBZ X19, 0x394AD50
	0x0394ACB8 MOV X0, X19
	0x0394ACBC MOV X1, X22
	0x0394ACC0 MOV X2, X24
	0x0394ACC4 MOV X3, X31
	0x0394ACC8 STR X23, [X19 + 0x98]
	0x0394ACCC BL 0x3919540
	0x0394ACD0 LDR X8, [X21]
	0x0394ACD4 LDP S3, S4, [X31 + 0x28]
	0x0394ACD8 LDP S5, S6, [X31 + 0x30]
	0x0394ACDC ADD X2, X31, 0x58
	0x0394ACE0 LDR X9, [X8 + 0x178]
	0x0394ACE4 STP X31, X31, [X31 + 0x58]
	0x0394ACE8 STR X31, [X31 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X19, X0
	006 Call ProBuilderShape.get_mesh, X0
	007 Compare X0, 0
	008 JumpIfEqual {47}
	009 Move X1, X31
	010 Call Component.get_transform, X0
	011 Compare X0, 0
	012 JumpIfEqual {47}
	013 Move S1, [X20+4]
	014 Move S2, [X20+8]
	015 Move V0, [X20]
	016 Move X1, X31
	017 Call Transform.InverseTransformPoint, X0, X1
	018 Move X0, X19
	019 Move [X19+124], S0
	020 Move [X19+132], S1
	021 Move [X19+132], S2
	022 Call ProBuilderShape.get_mesh, X0
	023 Move S0, [X19+40]
	024 Move S1, [X19+44]
	025 Move S2, [X19+48]
	026 Move S3, [X19+52]
	027 Move S4, [X19+56]
	028 Move S5, [X19+60]
	029 Move V6, [X19+64]
	030 Move X1, X0
	031 Move X0, X19
	032 Call ProBuilderShape.ResetPivot, X0, X1, X2, X3
	033 Move S0, [X20+12]
	034 Move S1, [X20+16]
	035 Move V2, [X20+20]
	036 Move X0, X19
	037 Add S0, S0, S0
	038 Add S1, S1, S1
	039 Add S2, S2, S2
	040 Call ProBuilderShape.set_size, X0, X1
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call ProBuilderShape.Rebuild, X0
	046 Return 
	047 Call 0x1C17F20

Method: System.Void Rebuild(UnityEngine.Bounds bounds, UnityEngine.Quaternion rotation, UnityEngine.Vector3 cornerPivot)

Disassembly:
	0x0394ACEC LDR X3, [X8 + 0x180]
	0x0394ACF0 ADD X8, X31, 0x40
	0x0394ACF4 MOV X0, X21
	0x0394ACF8 MOV X1, X19
	0x0394ACFC MOV V0.16B, V14.16B
	0x0394AD00 MOV V1.16B, V13.16B
	0x0394AD04 MOV V2.16B, V12.16B
	0x0394AD08 BLR X9
	0x0394AD0C LDR X8, [X31 + 0x50]
	0x0394AD10 LDR V0, [X31 + 0x4]
	0x0394AD14 LDR X9, [X31 + 0x20]
	0x0394AD18 LDP X20, X19, [X31 + 0x100]
	0x0394AD1C LDP X22, X21, [X31 + 0xF0]
	0x0394AD20 LDP X24, X23, [X31 + 0xE0]
	0x0394AD24 LDP X26, X25, [X31 + 0xD0]
	0x0394AD28 LDP X28, X27, [X31 + 0xC0]
	0x0394AD2C LDP X29, X30, [X31 + 0xB0]
	0x0394AD30 LDP D9, D8, [X31 + 0xA0]
	0x0394AD34 LDP D11, D10, [X31 + 0x90]
	0x0394AD38 LDP D13, D12, [X31 + 0x80]
	0x0394AD3C LDP D15, D14, [X31 + 0x70]
	0x0394AD40 STR X8, [X9 + 0x10]
	0x0394AD44 STR V0, [X9]
	0x0394AD48 ADD X31, X31, 0x110
	0x0394AD4C RET
	0x0394AD50 BL 0x1C16F20
	0x0394AD54 BL 0x1C16F28
	0x0394AD58 SUB X31, X31, 0xC0
	0x0394AD5C STP D15, D14, [X31 + 0x20]
	0x0394AD60 STP D13, D12, [X31 + 0x30]
	0x0394AD64 STP D11, D10, [X31 + 0x40]
	0x0394AD68 STP D9, D8, [X31 + 0x50]
	0x0394AD6C STR X30, [X31 + 0x60]
	0x0394AD70 STP X28, X27, [X31 + 0x70]
	0x0394AD74 STP X26, X25, [X31 + 0x80]
	0x0394AD78 STP X24, X23, [X31 + 0x90]
	0x0394AD7C STP X22, X21, [X31 + 0xA0]
	0x0394AD80 STP X20, X19, [X31 + 0xB0]
	0x0394AD84 ADRP X20, 0xA97000
	0x0394AD88 LDRB W8, [X20 + 0x984]
	0x0394AD8C MOV V8.16B, V0.16B
	0x0394AD90 MOV X19, X0
	0x0394AD94 TBNZ X8, 0x0, 0x394ADAC
	0x0394AD98 ADRP X0, 0x7AB000
	0x0394AD9C LDR X0, [X0 + 0x9B0]
	0x0394ADA0 BL 0x1C16CF4
	0x0394ADA4 MOVZ W8, 0x1
	0x0394ADA8 STRB W8, [X20 + 0x984]
	0x0394ADAC CBZ X19, 0x394B2BC
	0x0394ADB0 ADRP X8, 0x7AB000
	0x0394ADB4 LDR X8, [X8 + 0x9B0]
	0x0394ADB8 LDR W9, [X19 + 0x18]
	0x0394ADBC LDR X0, [X8]
	0x0394ADC0 UBFM W1, W9, 0x1E, 0x1D
	0x0394ADC4 BL 0x1C16D6C

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, X1
	013 Move X1, X31
	014 Move V8, V6
	015 Move V9, V5
	016 Move V10, V4
	017 Move V11, V3
	018 Move V12, V2
	019 Move V13, V1
	020 Move V14, V0
	021 Move X19, X0
	022 Call Component.get_transform, X0
	023 Compare X0, 0
	024 JumpIfEqual {71}
	025 Move S1, [X20+4]
	026 Move S2, [X20+8]
	027 Move V0, [X20]
	028 Move X1, X31
	029 Move X21, X0
	030 Call Transform.set_position, X0, X1
	031 Move X0, X21
	032 Move V0, V14
	033 Move V1, V13
	034 Move V2, V12
	035 Move V3, V11
	036 Move X1, X31
	037 Call Transform.set_rotation, X0, X1
	038 Move S0, [X20+12]
	039 Move S1, [X20+16]
	040 Move V2, [X20+20]
	041 Move X0, X19
	042 Add S0, S0, S0
	043 Add S1, S1, S1
	044 Add S2, S2, S2
	045 Call ProBuilderShape.set_size, X0, X1
	046 Move W8, [X19+80]
	047 Compare W8, 0
	048 JumpIfNotEqual {52}
	049 Move S10, [X20]
	050 Move S9, [X20+4]
	051 Move V8, [X20+8]
	052 Move X0, X19
	053 Move V0, V10
	054 Move V1, V9
	055 Move V2, V8
	056 Call ProBuilderShape.set_pivotGlobalPosition, X0, X1
	057 Move X0, X19
	058 Move X20, [X31+80]
	059 Move X19, [X31+88]
	060 Move X30, [X31+64]
	061 Move X21, [X31+72]
	062 Move D9, [X31+48]
	063 Move D8, [X31+56]
	064 Move D11, [X31+32]
	065 Move D10, [X31+40]
	066 Move D13, [X31+16]
	067 Move D12, [X31+24]
	068 Move V14, [X31+96]
	069 Call ProBuilderShape.Rebuild, X0
	070 Return 
	071 Call 0x1C17F20

Method: System.Void Rebuild()

Disassembly:
	0x0394AABC FCMP S0, S8
	0x0394AAC0 B.PL 0x394AACC
	0x0394AAC4 MOV V8.16B, V0.16B
	0x0394AAC8 STR W0, [X21 + 0x14]
	0x0394AACC LDR W8, [X24 + 0x18]
	0x0394AAD0 CMP W28, W8
	0x0394AAD4 B.CS 0x394AD54
	0x0394AAD8 LDR X25, [X20]
	0x0394AADC ADD W23, W23, 0x1
	0x0394AAE0 CBNZ X25, 0x394AA5C
	0x0394AAE4 B 0x394AD50
	0x0394AAE8 LDR W8, [X22 + 0x18]
	0x0394AAEC ADD W19, W19, 0x3
	0x0394AAF0 CMP W19, W8
	0x0394AAF4 B.LT 0x394A9B0
	0x0394AAF8 B 0x394AB00
	0x0394AAFC CBZ X24, 0x394AD50
	0x0394AB00 LDR W8, [X24 + 0x18]
	0x0394AB04 CMP W8, 0x1
	0x0394AB08 B.LT 0x394AC88
	0x0394AB0C ADRP X25, 0xFFFFFFFFFD24D000
	0x0394AB10 MOV X19, X31
	0x0394AB14 ADD X20, X24, 0x20
	0x0394AB18 MOVZ W23, 0xC
	0x0394AB1C ADD X25, X25, 0xA68
	0x0394AB20 CMP W19, W8
	0x0394AB24 B.CS 0x394AD54
	0x0394AB28 LDR X8, [X20, X19, LSL #3]
	0x0394AB2C CBZ X8, 0x394AD50
	0x0394AB30 LDR X8, [X8 + 0x10]
	0x0394AB34 CBZ X8, 0x394AD50
	0x0394AB38 LDR W10, [X8 + 0x18]
	0x0394AB3C CBZ W10, 0x394AD54
	0x0394AB40 LDRSW X9, [X8 + 0x20]
	0x0394AB44 LDR W11, [X22 + 0x18]
	0x0394AB48 CMP W9, W11
	0x0394AB4C B.CS 0x394AD54
	0x0394AB50 CMP W10, 0x1
	0x0394AB54 B.LS 0x394AD54
	0x0394AB58 LDRSW X12, [X8 + 0x24]
	0x0394AB5C CMP W12, W11
	0x0394AB60 B.CS 0x394AD54
	0x0394AB64 CMP W10, 0x2
	0x0394AB68 B.LS 0x394AD54
	0x0394AB6C LDRSW X8, [X8 + 0x28]
	0x0394AB70 CMP W8, W11
	0x0394AB74 B.CS 0x394AD54
	0x0394AB78 MADD X9, X9, X23, X22
	0x0394AB7C MADD X10, X12, X23, X22
	0x0394AB80 MADD X8, X8, X23, X22
	0x0394AB84 LDP S0, S1, [X9 + 0x20]
	0x0394AB88 LDR V2, [X9 + 0x28]
	0x0394AB8C LDP S3, S4, [X10 + 0x20]
	0x0394AB90 LDR V5, [X10 + 0x28]
	0x0394AB94 LDR X9, [X8 + 0x20]
	0x0394AB98 LDR V6, [X8 + 0x28]
	0x0394AB9C MOV X0, X31
	0x0394ABA0 STR X9, [X31]
	0x0394ABA4 STR S6, [X31 + 0x8]
	0x0394ABA8 BL 0x3908F20
	0x0394ABAC MOV X0, X31
	0x0394ABB0 BL 0x39204C0
	0x0394ABB4 CMP W0, 0x5
	0x0394ABB8 B.HI 0x394AC78
	0x0394ABBC MOV W8, W0
	0x0394ABC0 ADR X9, 0x10
	0x0394ABC4 LDRB W10, [X25, X8, LSL]
	0x0394ABC8 ADD X9, X9, X10, 0x2, LSL
	0x0394ABCC BR X9
	0x0394ABD0 LDR W8, [X24 + 0x18]
	0x0394ABD4 CMP W19, W8
	0x0394ABD8 B.CS 0x394AD54
	0x0394ABDC LDR X8, [X20, X19, LSL #3]
	0x0394ABE0 CBZ X8, 0x394AD50
	0x0394ABE4 MOVZ W9, 0x2
	0x0394ABE8 B 0x394AC74
	0x0394ABEC LDR W8, [X24 + 0x18]
	0x0394ABF0 CMP W19, W8
	0x0394ABF4 B.CS 0x394AD54
	0x0394ABF8 LDR X8, [X20, X19, LSL #3]
	0x0394ABFC CBZ X8, 0x394AD50
	0x0394AC00 MOVZ W9, 0x3
	0x0394AC04 B 0x394AC74
	0x0394AC08 LDR W8, [X24 + 0x18]
	0x0394AC0C CMP W19, W8
	0x0394AC10 B.CS 0x394AD54
	0x0394AC14 LDR X8, [X20, X19, LSL #3]
	0x0394AC18 CBZ X8, 0x394AD50
	0x0394AC1C MOVZ W9, 0x4
	0x0394AC20 B 0x394AC74
	0x0394AC24 LDR W8, [X24 + 0x18]
	0x0394AC28 CMP W19, W8
	0x0394AC2C B.CS 0x394AD54
	0x0394AC30 LDR X8, [X20, X19, LSL #3]
	0x0394AC34 CBZ X8, 0x394AD50
	0x0394AC38 MOVZ W9, 0x5
	0x0394AC3C B 0x394AC74
	0x0394AC40 LDR W8, [X24 + 0x18]
	0x0394AC44 CMP W19, W8
	0x0394AC48 B.CS 0x394AD54
	0x0394AC4C LDR X8, [X20, X19, LSL #3]
	0x0394AC50 CBZ X8, 0x394AD50
	0x0394AC54 MOVZ W9, 0x6
	0x0394AC58 B 0x394AC74

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], D10
	003 Move [X31+96], D9
	004 Move [X31+104], D8
	005 Move [X31+112], X30
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X21, 0xA98000
	010 Move X20, 0x7AA000
	011 Move W8, [X21+2429]
	012 Move X20, [X20+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x7AA000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2429], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call Component.get_gameObject, X0
	026 Move X8, [X20]
	027 Move X20, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {120}
	041 Move X0, X19
	042 Move X1, X31
	043 Call Component.get_gameObject, X0
	044 Compare X0, 0
	045 JumpIfEqual {129}
	046 Move X1, X31
	047 Call Object.get_hideFlags, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X19+32]
	050 Move X0, X19
	051 Call ProBuilderShape.get_mesh, X0
	052 Compare X20, 0
	053 JumpIfEqual {129}
	054 Move X8, [X20]
	055 Move S5, [X19+60]
	056 Move S6, [X19+64]
	057 Move S3, [X19+52]
	058 Move S4, [X19+56]
	059 Move S1, [X19+44]
	060 Move S2, [X19+48]
	061 Move V0, [X19+40]
	062 Move X9, [X8+392]
	063 Move X2, [X8+400]
	064 Move X1, X0
	065 Add X8, X31, 24
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X8, [X31+40]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move X0, X19
	071 Move [X31+64], X8
	072 Move [X31+3], V7
	073 Move S0, [X19+40]
	074 Move S1, [X19+44]
	075 Move S2, [X19+48]
	076 Move S3, [X19+52]
	077 Move S4, [X19+56]
	078 Move S5, [X19+60]
	079 Move V6, [X19+64]
	080 Move [X19+140], X8
	081 Move [X19+124], V7
	082 Call ProBuilderShape.RebuildPivot, X0, X1, X2
	083 Move W8, [X19+132]
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move X0, X31
	086 Move [X31+32], W8
	087 Move [X31+24], X9
	088 Move S0, [X19+136]
	089 Move S1, [X19+140]
	090 Move V2, [X19+144]
	091 Add S0, S0, S0
	092 Add S1, S1, S1
	093 Add S2, S2, S2
	094 Call Math.Abs, X0
	095 Move S3, 0.5
	096 Move X0, X19
	097 Multiply S8, S0, S3
	098 Multiply S9, S1, S3
	099 Multiply S10, S2, S3
	100 Call ProBuilderShape.get_mesh, X0
	101 Move X8, [X31+24]
	102 Move W9, [X31+32]
	103 Add X1, X31, 0
	104 Move X2, X31
	105 Move [X31], X8
	106 Move [X31+8], W9
	107 Move S0, [X19+40]
	108 Move S1, [X19+44]
	109 Move V2, [X19+48]
	110 Move [X31+12], S8
	111 Move [X31+20], S9
	112 Move [X31+20], S10
	113 Call MeshUtility.FitToSize, X0, X1, X2
	114 Move X0, X19
	115 Call ProBuilderShape.get_mesh, X0
	116 Compare X0, 0
	117 JumpIfEqual {129}
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 NotImplemented "Instruction STRH not yet implemented."
	120 Move X20, [X31+128]
	121 Move X19, [X31+136]
	122 Move X30, [X31+112]
	123 Move X21, [X31+120]
	124 Move D9, [X31+96]
	125 Move D8, [X31+104]
	126 Move V10, [X31+80]
	127 Add X31, X31, 144
	128 Return 
	129 Call 0x1C17F20

Method: System.Void SetShape(UnityEngine.ProBuilder.Shapes.Shape shape, UnityEngine.ProBuilder.PivotLocation location)

Disassembly:
	0x0394AFFC BL 0x1C16DFC
	0x0394B000 LDP S0, S1, [X31 + 0x14]
	0x0394B004 LDP S2, S3, [X31 + 0x68]
	0x0394B008 FADD S0, S10, S0
	0x0394B00C FADD S1, S2, S1
	0x0394B010 LDR V2, [X31 + 0x1C]
	0x0394B014 FADD S2, S3, S2
	0x0394B018 FMOV S3, 0.5
	0x0394B01C FMUL S0, S0, S3
	0x0394B020 FMUL S1, S1, S3
	0x0394B024 FMUL S2, S2, S3
	0x0394B028 FMUL S3, S0, S0
	0x0394B02C FMUL S4, S1, S1
	0x0394B030 FADD S3, S3, S4
	0x0394B034 FMUL S4, S2, S2
	0x0394B038 FADD S3, S4, S3
	0x0394B03C FSQRT S5, S3
	0x0394B040 LDR V3, [X31 + 0x10]
	0x0394B044 FCMP S5, S3
	0x0394B048 B.LE 0x394B05C
	0x0394B04C FDIV S3, S0, S5
	0x0394B050 FDIV S4, S1, S5
	0x0394B054 FDIV S5, S2, S5
	0x0394B058 B 0x394B080
	0x0394B05C LDRB W8, [X23 + 0x783]
	0x0394B060 CBNZ W8, 0x394B070
	0x0394B064 MOV X0, X22
	0x0394B068 BL 0x1C16CF4
	0x0394B06C STRB W26, [X23 + 0x783]
	0x0394B070 LDR X8, [X22]
	0x0394B074 LDR X8, [X8 + 0xB8]
	0x0394B078 LDP S3, S4, [X8]
	0x0394B07C LDR V5, [X8 + 0x8]
	0x0394B080 CBZ X20, 0x394B2BC
	0x0394B084 LDR W8, [X20 + 0x18]
	0x0394B088 CMP W27, W8
	0x0394B08C B.CS 0x394B2B8
	0x0394B090 SXTW X8, W27
	0x0394B094 MADD X8, X8, X24, X20
	0x0394B098 STP S12, S11, [X8 + 0x20]
	0x0394B09C STR S9, [X8 + 0x28]
	0x0394B0A0 LDR W9, [X20 + 0x18]
	0x0394B0A4 ADD W8, W27, 0x1
	0x0394B0A8 CMP W8, W9
	0x0394B0AC B.CS 0x394B2B8
	0x0394B0B0 LDR V0, [X31 + 0xC]
	0x0394B0B4 ADD W9, W27, 0x1
	0x0394B0B8 SXTW X9, W9
	0x0394B0BC MADD X9, X9, X24, X20
	0x0394B0C0 FMUL S6, S0, S8
	0x0394B0C4 LDR V0, [X31 + 0x8]
	0x0394B0C8 ADD W8, W8, 0x1
	0x0394B0CC FMUL S7, S0, S8
	0x0394B0D0 LDR V0, [X31 + 0x4]
	0x0394B0D4 STP S6, S7, [X9 + 0x20]
	0x0394B0D8 FMUL S16, S0, S8
	0x0394B0DC STR S16, [X9 + 0x28]
	0x0394B0E0 LDR W9, [X20 + 0x18]
	0x0394B0E4 CMP W8, W9
	0x0394B0E8 B.CS 0x394B2B8
	0x0394B0EC ADD W9, W27, 0x2
	0x0394B0F0 SXTW X9, W9
	0x0394B0F4 FMUL S0, S13, S8
	0x0394B0F8 FMUL S1, S14, S8
	0x0394B0FC FMUL S2, S15, S8
	0x0394B100 MADD X9, X9, X24, X20
	0x0394B104 STP S0, S1, [X9 + 0x20]
	0x0394B108 STR S2, [X9 + 0x28]
	0x0394B10C LDR W9, [X20 + 0x18]
	0x0394B110 ADD W8, W8, 0x1
	0x0394B114 CMP W8, W9
	0x0394B118 B.CS 0x394B2B8
	0x0394B11C ADD W9, W27, 0x3
	0x0394B120 SXTW X9, W9
	0x0394B124 MADD X9, X9, X24, X20
	0x0394B128 STP S6, S7, [X9 + 0x20]
	0x0394B12C STR S16, [X9 + 0x28]
	0x0394B130 LDR W9, [X20 + 0x18]
	0x0394B134 ADD W8, W8, 0x1
	0x0394B138 CMP W8, W9
	0x0394B13C B.CS 0x394B2B8
	0x0394B140 LDR V17, [X31 + 0x68]
	0x0394B144 ADD W9, W27, 0x4
	0x0394B148 SXTW X9, W9
	0x0394B14C MADD X9, X9, X24, X20
	0x0394B150 STP S10, S17, [X9 + 0x20]
	0x0394B154 LDR V17, [X31 + 0x6C]
	0x0394B158 ADD W8, W8, 0x1
	0x0394B15C STR S17, [X9 + 0x28]
	0x0394B160 LDR W9, [X20 + 0x18]
	0x0394B164 CMP W8, W9
	0x0394B168 B.CS 0x394B2B8
	0x0394B16C ADD W9, W27, 0x5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA97000
	007 Move W8, [X22+2430]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x805000
	016 Move X0, [X0+312]
	017 Call 0x1C17CF4
	018 Move X0, 0x805000
	019 Move X0, [X0+320]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2430], W8
	023 Move [X19+80], W20
	024 Move [X19+32], X21
	025 Compare X21, 0
	026 JumpIfEqual {47}
	027 Move X9, 0x805000
	028 Move X9, [X9+312]
	029 Move X8, [X21]
	030 Move X10, [X9]
	031 Move W9, [X8+304]
	032 Move W11, [X10+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X12, [X8+200]
	035 Add X11, X12, X11
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X10, 0x805000
	039 Move X10, [X10+320]
	040 Move X10, [X10]
	041 Move W11, [X10+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X8+200]
	044 Add X8, X8, X11
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move V0, [X19+140]
	049 Add S0, S0, S0
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move V0, [X19+44]
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move V2, [X19+136]
	054 Move V3, [X19+144]
	055 Move V1, [X19+128]
	056 Move S4, 0.5
	057 Multiply S0, S0, S4
	058 Add S2, S2, S2
	059 Add S3, S3, S3
	060 Add S1, S0, S1
	061 Multiply S2, S2, S4
	062 Multiply S3, S3, S4
	063 Move [X19+128], S1
	064 Move [X19+136], S2
	065 Move [X19+144], S0
	066 Move [X19+144], S3
	067 Move V0, [X19+136]
	068 Move V1, [X19+144]
	069 Move S2, 0.5
	070 Move [X19+128], W31
	071 Add S0, S0, S0
	072 Add S1, S1, S1
	073 Multiply S0, S0, S2
	074 Multiply S1, S1, S2
	075 Move [X19+140], W31
	076 Move [X19+136], S0
	077 Move [X19+144], S1
	078 Move [X19+44], W31
	079 Move X0, X19
	080 Call ProBuilderShape.get_mesh, X0
	081 Move S0, [X19+40]
	082 Move S1, [X19+44]
	083 Move S2, [X19+48]
	084 Move S3, [X19+52]
	085 Move S4, [X19+56]
	086 Move S5, [X19+60]
	087 Move V6, [X19+64]
	088 Move X1, X0
	089 Move X0, X19
	090 Call ProBuilderShape.ResetPivot, X0, X1, X2, X3
	091 Move X0, X19
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Call ProBuilderShape.Rebuild, X0
	098 Return 

Method: System.Void RotateInsideBounds(UnityEngine.Quaternion deltaRotation)

Disassembly:
	0x0394B170 SXTW X9, W9
	0x0394B174 FMUL S3, S3, S8
	0x0394B178 FMUL S4, S4, S8
	0x0394B17C FMUL S5, S5, S8
	0x0394B180 MADD X9, X9, X24, X20
	0x0394B184 STP S3, S4, [X9 + 0x20]
	0x0394B188 STR S5, [X9 + 0x28]
	0x0394B18C LDR W9, [X20 + 0x18]
	0x0394B190 ADD W8, W8, 0x1
	0x0394B194 CMP W8, W9
	0x0394B198 B.CS 0x394B2B8
	0x0394B19C ADD W9, W27, 0x6
	0x0394B1A0 SXTW X9, W9
	0x0394B1A4 MADD X9, X9, X24, X20
	0x0394B1A8 STP S6, S7, [X9 + 0x20]
	0x0394B1AC STR S16, [X9 + 0x28]
	0x0394B1B0 LDR W9, [X20 + 0x18]
	0x0394B1B4 ADD W8, W8, 0x1
	0x0394B1B8 CMP W8, W9
	0x0394B1BC B.CS 0x394B2B8
	0x0394B1C0 ADD W9, W27, 0x7
	0x0394B1C4 SXTW X9, W9
	0x0394B1C8 MADD X9, X9, X24, X20
	0x0394B1CC STP S3, S4, [X9 + 0x20]
	0x0394B1D0 STR S5, [X9 + 0x28]
	0x0394B1D4 LDR W9, [X20 + 0x18]
	0x0394B1D8 ADD W8, W8, 0x1
	0x0394B1DC CMP W8, W9
	0x0394B1E0 B.CS 0x394B2B8
	0x0394B1E4 ADD W9, W27, 0x8
	0x0394B1E8 SXTW X9, W9
	0x0394B1EC MADD X9, X9, X24, X20
	0x0394B1F0 STP S0, S1, [X9 + 0x20]
	0x0394B1F4 STR S2, [X9 + 0x28]
	0x0394B1F8 LDR W9, [X20 + 0x18]
	0x0394B1FC ADD W8, W8, 0x1
	0x0394B200 CMP W8, W9
	0x0394B204 B.CS 0x394B2B8
	0x0394B208 ADD W9, W27, 0x9
	0x0394B20C SXTW X9, W9
	0x0394B210 MADD X9, X9, X24, X20
	0x0394B214 STP S0, S1, [X9 + 0x20]
	0x0394B218 STR S2, [X9 + 0x28]
	0x0394B21C LDR W9, [X20 + 0x18]
	0x0394B220 ADD W8, W8, 0x1
	0x0394B224 CMP W8, W9
	0x0394B228 B.CS 0x394B2B8
	0x0394B22C ADD W9, W27, 0xA
	0x0394B230 SXTW X9, W9
	0x0394B234 MADD X9, X9, X24, X20
	0x0394B238 STP S3, S4, [X9 + 0x20]
	0x0394B23C STR S5, [X9 + 0x28]
	0x0394B240 LDR W9, [X20 + 0x18]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V8, V3
	008 Move V9, V2
	009 Move V10, V1
	010 Move V11, V0
	011 Move X19, X0
	012 Call ProBuilderShape.get_mesh, X0
	013 Move S0, [X19+40]
	014 Move S1, [X19+44]
	015 Move S2, [X19+48]
	016 Move S3, [X19+52]
	017 Move S4, [X19+56]
	018 Move S5, [X19+60]
	019 Move V6, [X19+64]
	020 Move X1, X0
	021 Move X0, X19
	022 Call ProBuilderShape.ResetPivot, X0, X1, X2, X3
	023 Move S0, [X19+52]
	024 Move S3, [X19+56]
	025 Move S2, [X19+60]
	026 Move S1, [X19+64]
	027 Move X0, X19
	028 Multiply S4, S8, S0
	029 Multiply S5, S11, S1
	030 Multiply S16, S8, S3
	031 Multiply S17, S10, S1
	032 Multiply S21, S11, S0
	033 Multiply S22, S8, S2
	034 Multiply S23, S8, S1
	035 Multiply S1, S9, S1
	036 Multiply S6, S10, S2
	037 Multiply S7, S9, S3
	038 Multiply S18, S9, S0
	039 Multiply S20, S11, S3
	040 Multiply S3, S10, S3
	041 Add S4, S4, S5
	042 Add S5, S16, S17
	043 Add S1, S22, S1
	044 Subtract S16, S23, S21
	045 Multiply S19, S11, S2
	046 Multiply S0, S10, S0
	047 Multiply S2, S9, S2
	048 Add S4, S6, S4
	049 Add S5, S18, S5
	050 Add S1, S20, S1
	051 Subtract S3, S16, S3
	052 Subtract S4, S4, S7
	053 Subtract S5, S5, S19
	054 Subtract S0, S1, S0
	055 Subtract S1, S3, S2
	056 Move [X19+52], S4
	057 Move [X19+60], S5
	058 Move [X19+60], S0
	059 Move [X19+68], S1
	060 Move X30, [X31+32]
	061 Move X19, [X31+40]
	062 Move D9, [X31+16]
	063 Move D8, [X31+24]
	064 Move D11, [X31+48]
	065 Move D10, [X31+56]
	066 Call ProBuilderShape.Rebuild, X0
	067 Return 

Method: System.Void ResetPivot(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x0394A8AC STRB W8, [X9 + 0x783]
	0x0394A8B0 ADRP X8, 0x7A9000
	0x0394A8B4 LDR X8, [X8 + 0x5A0]
	0x0394A8B8 LDR X8, [X8]
	0x0394A8BC LDR X8, [X8 + 0xB8]
	0x0394A8C0 LDR V0, [X8]
	0x0394A8C4 LDR V1, [X8 + 0x8]
	0x0394A8C8 LDR W8, [X22 + 0x18]
	0x0394A8CC CMP W23, W8
	0x0394A8D0 B.CS 0x394AD54
	0x0394A8D4 FMUL S1, S1, S9
	0x00000000 INVALID
	0x0394A8DC MADD X8, X28, X20, X22
	0x0394A8E0 ADD W19, W19, 0x3
	0x0394A8E4 STR D0, [X8 + 0x20]
	0x0394A8E8 STR S1, [X8 + 0x28]
	0x0394A8EC B 0x394A5B4
	0x0394A8F0 LDR W8, [X21 + 0x10]
	0x0394A8F4 CMP W8, 0x1
	0x0394A8F8 B.LT 0x394A934
	0x0394A8FC MOVZ W19, 0x1
	0x0394A900 LDR W8, [X0 + 0xE0]
	0x0394A904 CBNZ W8, 0x394A90C
	0x0394A908 BL 0x1C16DFC
	0x0394A90C FMOV S0, 0.5
	0x0394A910 MOV X0, X22
	0x0394A914 BL 0x394AD58
	0x0394A918 LDR W8, [X21 + 0x10]
	0x0394A91C MOV X22, X0
	0x0394A920 CMP W19, W8
	0x0394A924 B.GE 0x394A934
	0x0394A928 LDR X0, [X25]
	0x0394A92C ADD W19, W19, 0x1
	0x0394A930 B 0x394A900
	0x0394A934 CBZ X22, 0x394AD50
	0x0394A938 ADRP X9, 0x804000
	0x0394A93C LDRSW X8, [X22 + 0x18]
	0x0394A940 LDR X9, [X9 + 0x3F0]
	0x0394A944 LDR X0, [X9]
	0x0394A948 MOVZ W9, 0x5556
	0x0394A94C MOVK W9, 0x55550000
	0x0394A950 MUL X8, X8, X9
	0x0394A954 UBFM X9, X8, 0x3F, 0x3F
	0x0394A958 UBFM X8, X8, 0x20, 0x3F
	0x0394A95C ADD W1, W8, W9
	0x0394A960 BL 0x1C16D6C
	0x0394A964 ADRP X19, 0xA97000
	0x0394A968 LDRB W8, [X19 + 0x93D]
	0x0394A96C MOV X24, X0
	0x0394A970 CBNZ W8, 0x394A988
	0x0394A974 ADRP X0, 0x7A9000
	0x0394A978 LDR X0, [X0 + 0x5A0]
	0x0394A97C BL 0x1C16CF4
	0x0394A980 MOVZ W8, 0x1
	0x0394A984 STRB W8, [X19 + 0x93D]
	0x0394A988 LDR W8, [X22 + 0x18]
	0x0394A98C CMP W8, 0x1
	0x0394A990 B.LT 0x394AAFC
	0x0394A994 ADRP X8, 0x7A9000
	0x0394A998 LDR X8, [X8 + 0x5A0]
	0x0394A99C MOV W19, W31
	0x0394A9A0 MOVZ W27, 0xC
	0x0394A9A4 LDR X8, [X8]
	0x0394A9A8 LDR X8, [X8 + 0xB8]
	0x0394A9AC LDR V8, [X8 + 0x64]
	0x0394A9B0 ADRP X8, 0x7AA000
	0x0394A9B4 LDR X8, [X8 + 0xE58]
	0x0394A9B8 MOVZ W1, 0x3
	0x0394A9BC LDR X0, [X8]
	0x0394A9C0 BL 0x1C16D6C
	0x0394A9C4 CBZ X0, 0x394AD50
	0x0394A9C8 LDR W8, [X0 + 0x18]
	0x0394A9CC MOV X23, X0
	0x0394A9D0 CBZ W8, 0x394AD54
	0x0394A9D4 CMP W8, 0x1
	0x0394A9D8 STR W19, [X23 + 0x20]
	0x0394A9DC B.EQ 0x394AD54
	0x0394A9E0 ADD W9, W19, 0x1
	0x0394A9E4 CMP W8, 0x2
	0x0394A9E8 STR W9, [X23 + 0x24]
	0x0394A9EC B.LS 0x394AD54
	0x0394A9F0 ADD W8, W19, 0x2
	0x0394A9F4 STR W8, [X23 + 0x28]
	0x0394A9F8 ADRP X8, 0x804000
	0x0394A9FC LDR X8, [X8 + 0x560]
	0x0394AA00 LDR X0, [X8]
	0x0394AA04 BL 0x1C16F10
	0x0394AA08 MOV X1, X23
	0x0394AA0C MOV X2, X31
	0x0394AA10 MOV X25, X0
	0x0394AA14 BL 0x3900368
	0x0394AA18 CBZ X24, 0x394AD50
	0x0394AA1C MOVZ W8, 0x5556
	0x0394AA20 MOVK W8, 0x55550000
	0x0394AA24 LDR W9, [X24 + 0x18]
	0x0394AA28 SMADDL X8, X19, X8, X31
	0x0394AA2C UBFM X10, X8, 0x3F, 0x3F
	0x0394AA30 UBFM X8, X8, 0x20, 0x3F
	0x0394AA34 ADD W28, W8, W10
	0x0394AA38 CMP W28, W9
	0x0394AA3C B.CS 0x394AD54
	0x0394AA40 ADD X20, X24, W28, 0x3, SXTW
	0x0394AA44 STR X25, [X20 + 0x20]!
	0x0394AA48 CBZ X25, 0x394AD50
	0x0394AA4C LDRB W8, [X21 + 0x18]
	0x0394AA50 MOV W23, W31
	0x0394AA54 STRB W31, [X25 + 0x4C]
	0x0394AA58 STR W8, [X25 + 0x18]
	0x0394AA5C MOV X0, X25
	0x0394AA60 MOV X1, X31
	0x0394AA64 BL 0x38FFC6C
	0x0394AA68 CBZ X0, 0x394AD50
	0x0394AA6C LDR X1, [X29]
	0x0394AA70 BL 0x253DBE0
	0x0394AA74 CMP W23, W0
	0x0394AA78 B.GE 0x394AAE8
	0x0394AA7C LDR W8, [X24 + 0x18]
	0x0394AA80 CMP W28, W8
	0x0394AA84 B.CS 0x394AD54
	0x0394AA88 LDR X0, [X20]
	0x0394AA8C CBZ X0, 0x394AD50
	0x0394AA90 MOV X1, X31
	0x0394AA94 BL 0x38FFC6C
	0x0394AA98 CBZ X0, 0x394AD50
	0x0394AA9C LDR X2, [X26]
	0x0394AAA0 MOV W1, W23
	0x0394AAA4 BL 0x253DC68
	0x0394AAA8 LDR W8, [X22 + 0x18]
	0x0394AAAC CMP W0, W8
	0x0394AAB0 B.CS 0x394AD54
	0x0394AAB4 SMADDL X8, X0, X27, X22
	0x0394AAB8 LDR V0, [X8 + 0x24]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+192], X22
	012 Move [X31+200], X21
	013 Move [X31+208], X20
	014 Move [X31+216], X19
	015 Move X22, 0xA98000
	016 Move X21, 0x7AA000
	017 Move W8, [X22+2431]
	018 Move X21, [X21+1432]
	019 Move V8, V6
	020 Move V9, V5
	021 Move V10, V4
	022 Move V11, V3
	023 Move V12, V2
	024 Move V13, V1
	025 Move V14, V0
	026 Move X19, X1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x7AA000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2431], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {152}
	050 Compare X19, 0
	051 JumpIfEqual {167}
	052 Move X0, X19
	053 Move X1, X31
	054 Call ProBuilderMesh.get_mesh, X0
	055 Move X8, [X21]
	056 Move X21, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {152}
	070 Move X0, X19
	071 Move X1, X31
	072 Call Component.get_transform, X0
	073 Compare X0, 0
	074 JumpIfEqual {167}
	075 Move S1, [X20+128]
	076 Move S2, [X20+132]
	077 Move V0, [X20+124]
	078 Move X1, X31
	079 Move [X31+12], S12
	080 Move [X31+20], S11
	081 Move [X31+20], S10
	082 Move [X31+184], S9
	083 Move [X31+192], S8
	084 Call Transform.TransformPoint, X0, X1
	085 Move X0, X19
	086 Move X1, X31
	087 Move V15, V0
	088 Move V8, V1
	089 Move V9, V2
	090 Call Component.get_transform, X0
	091 Compare X0, 0
	092 JumpIfEqual {167}
	093 Move S1, [X20+88]
	094 Move S2, [X20+92]
	095 Move V0, [X20+84]
	096 Move X1, X31
	097 Call Transform.TransformPoint, X0, X1
	098 Move V10, V0
	099 Move V11, V1
	100 Move V12, V2
	101 Move X0, X19
	102 Move V0, V15
	103 Move V1, V8
	104 Move V2, V9
	105 Move X1, X31
	106 Call MeshTransform.SetPivot, X0, X1
	107 Move X0, X19
	108 Move X1, X31
	109 Call Component.get_transform, X0
	110 Compare X0, 0
	111 JumpIfEqual {167}
	112 Move V0, V10
	113 Move V1, V11
	114 Move V2, V12
	115 Move X1, X31
	116 Add X21, X20, 124
	117 Call Transform.InverseTransformPoint, X0, X1
	118 Move [X20+84], S0
	119 Move [X20+92], S1
	120 Move [X20+92], S2
	121 Move X0, [X20+32]
	122 Move X8, [X21+16]
	123 Move V0, [X21]
	124 Move [X31+64], X8
	125 Move [X31+3], V0
	126 Compare X0, 0
	127 JumpIfEqual {167}
	128 Move X8, [X0]
	129 Move V0, [X31+3]
	130 Move X9, [X31+64]
	131 Move S2, [X31+12]
	132 Move S3, [X31+16]
	133 Move X10, [X8+376]
	134 Move [X31+5], V0
	135 Move [X31+96], X9
	136 Move X3, [X8+384]
	137 Move V4, [X31+20]
	138 Move S5, [X31+184]
	139 Move S6, [X31+188]
	140 Add X8, X31, 24
	141 Add X2, X31, 80
	142 Move X1, X19
	143 Move V0, V14
	144 Move V1, V13
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X31+40]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move [X31+96], X8
	149 Move [X31+5], V0
	150 Move [X21+16], X8
	151 Move [X21], V0
	152 Move X20, [X31+208]
	153 Move X19, [X31+216]
	154 Move X22, [X31+192]
	155 Move X21, [X31+200]
	156 Move X30, [X31+176]
	157 Move D9, [X31+160]
	158 Move D8, [X31+168]
	159 Move D11, [X31+144]
	160 Move D10, [X31+152]
	161 Move D13, [X31+128]
	162 Move D12, [X31+136]
	163 Move D15, [X31+112]
	164 Move D14, [X31+120]
	165 Add X31, X31, 224
	166 Return 
	167 Call 0x1C17F20

Method: System.Void RebuildPivot(UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x0394ADC8 ADRP X23, 0xA8E000
	0x0394ADCC LDRB W8, [X23 + 0x783]
	0x0394ADD0 MOV X20, X0
	0x0394ADD4 CBNZ W8, 0x394ADEC
	0x0394ADD8 ADRP X0, 0x7A9000
	0x0394ADDC LDR X0, [X0 + 0x5A0]
	0x0394ADE0 BL 0x1C16CF4
	0x0394ADE4 MOVZ W8, 0x1
	0x0394ADE8 STRB W8, [X23 + 0x783]
	0x0394ADEC LDR W8, [X19 + 0x18]
	0x0394ADF0 CMP W8, 0x1
	0x0394ADF4 B.LT 0x394B284
	0x0394ADF8 ADRP X10, 0xFFFFFFFFFD1A0000
	0x0394ADFC LDR V0, [X10 + 0x17C]
	0x0394AE00 ADRP X21, 0x7A9000
	0x0394AE04 ADRP X22, 0x7A9000
	0x0394AE08 MOV W27, W31
	0x0394AE0C STR S0, [X31 + 0x10]
	0x0394AE10 LDR X21, [X21 + 0x5A8]
	0x0394AE14 LDR X22, [X22 + 0x5A0]
	0x0394AE18 MOV W9, W31
	0x0394AE1C MOVZ W24, 0xC
	0x0394AE20 ADRP X25, 0xA8E000
	0x0394AE24 MOVZ W26, 0x1
	0x0394AE28 CMP W9, W8
	0x0394AE2C B.CS 0x394B2B8
	0x0394AE30 SXTW X9, W9
	0x0394AE34 ADD W10, W9, 0x1
	0x0394AE38 CMP W10, W8
	0x0394AE3C B.CS 0x394B2B8
	0x0394AE40 SXTW X10, W10
	0x0394AE44 ADD W28, W10, 0x1
	0x0394AE48 CMP W28, W8
	0x0394AE4C B.CS 0x394B2B8
	0x0394AE50 MADD X10, X10, X24, X19
	0x0394AE54 LDP S10, S1, [X10 + 0x20]
	0x0394AE58 LDR V0, [X10 + 0x28]
	0x0394AE5C NOP
	0x0394AE60 MADD X8, X9, X24, X19
	0x0394AE64 ADD W9, W9, 0x2
	0x0394AE68 LDP S12, S11, [X8 + 0x20]
	0x0394AE6C LDR V9, [X8 + 0x28]
	0x0394AE70 SXTW X8, W9
	0x0394AE74 MADD X8, X8, X24, X19
	0x0394AE78 STP S1, S0, [X31 + 0x68]
	0x0394AE7C LDR V1, [X8 + 0x20]
	0x0394AE80 LDR V0, [X8 + 0x24]
	0x0394AE84 LDRB W11, [X25 + 0x785]
	0x0394AE88 STP S1, S0, [X31 + 0x14]
	0x0394AE8C LDR V0, [X8 + 0x28]
	0x0394AE90 STR S0, [X31 + 0x1C]
	0x0394AE94 CBNZ W11, 0x394AEA4
	0x0394AE98 MOV X0, X21
	0x0394AE9C BL 0x1C16CF4
	0x0394AEA0 STRB W26, [X25 + 0x785]
	0x0394AEA4 LDR X0, [X21]
	0x0394AEA8 LDR W8, [X0 + 0xE0]
	0x0394AEAC CBNZ W8, 0x394AEB4
	0x0394AEB0 BL 0x1C16DFC
	0x0394AEB4 LDP S1, S2, [X31 + 0x68]
	0x0394AEB8 FADD S0, S12, S10
	0x0394AEBC FMOV S3, 0.5
	0x0394AEC0 FMUL S0, S0, S3
	0x0394AEC4 FADD S1, S11, S1
	0x0394AEC8 FADD S2, S9, S2
	0x0394AECC FMUL S1, S1, S3
	0x0394AED0 FMUL S2, S2, S3
	0x0394AED4 FMUL S3, S0, S0
	0x0394AED8 FMUL S4, S1, S1
	0x0394AEDC FADD S3, S3, S4
	0x0394AEE0 FMUL S4, S2, S2
	0x0394AEE4 FADD S3, S4, S3
	0x0394AEE8 LDR V4, [X31 + 0x10]
	0x0394AEEC FSQRT S3, S3
	0x0394AEF0 FCMP S3, S4
	0x0394AEF4 B.LE 0x394AF0C
	0x0394AEF8 FDIV S4, S0, S3
	0x0394AEFC FDIV S0, S1, S3
	0x0394AF00 STP S0, S4, [X31 + 0x8]
	0x0394AF04 FDIV S0, S2, S3
	0x0394AF08 B 0x394AF38
	0x0394AF0C LDRB W8, [X23 + 0x783]
	0x0394AF10 CBNZ W8, 0x394AF20
	0x0394AF14 MOV X0, X22
	0x0394AF18 BL 0x1C16CF4
	0x0394AF1C STRB W26, [X23 + 0x783]
	0x0394AF20 LDR X8, [X22]
	0x0394AF24 LDR X8, [X8 + 0xB8]
	0x0394AF28 LDR V1, [X8]
	0x0394AF2C LDR V0, [X8 + 0x4]
	0x0394AF30 STP S0, S1, [X31 + 0x8]
	0x0394AF34 LDR V0, [X8 + 0x8]
	0x0394AF38 LDRB W8, [X25 + 0x785]
	0x0394AF3C STR S0, [X31 + 0x4]
	0x0394AF40 CBNZ W8, 0x394AF50
	0x0394AF44 MOV X0, X21
	0x0394AF48 BL 0x1C16CF4
	0x0394AF4C STRB W26, [X25 + 0x785]
	0x0394AF50 LDR X0, [X21]
	0x0394AF54 LDR W8, [X0 + 0xE0]
	0x0394AF58 CBNZ W8, 0x394AF60
	0x0394AF5C BL 0x1C16DFC
	0x0394AF60 LDP S0, S1, [X31 + 0x14]
	0x0394AF64 LDR V2, [X31 + 0x1C]
	0x0394AF68 FMOV S3, 0.5
	0x0394AF6C FADD S0, S12, S0
	0x0394AF70 FADD S1, S11, S1
	0x0394AF74 FADD S2, S9, S2
	0x0394AF78 FMUL S0, S0, S3
	0x0394AF7C FMUL S1, S1, S3
	0x0394AF80 FMUL S2, S2, S3
	0x0394AF84 FMUL S3, S0, S0
	0x0394AF88 FMUL S4, S1, S1
	0x0394AF8C FADD S3, S3, S4
	0x0394AF90 FMUL S4, S2, S2
	0x0394AF94 FADD S3, S4, S3
	0x0394AF98 LDR V4, [X31 + 0x10]
	0x0394AF9C FSQRT S3, S3
	0x0394AFA0 FCMP S3, S4
	0x0394AFA4 B.LE 0x394AFB8
	0x0394AFA8 FDIV S13, S0, S3
	0x0394AFAC FDIV S14, S1, S3
	0x0394AFB0 FDIV S15, S2, S3
	0x0394AFB4 B 0x394AFDC
	0x0394AFB8 LDRB W8, [X23 + 0x783]
	0x0394AFBC CBNZ W8, 0x394AFCC
	0x0394AFC0 MOV X0, X22
	0x0394AFC4 BL 0x1C16CF4
	0x0394AFC8 STRB W26, [X23 + 0x783]
	0x0394AFCC LDR X8, [X22]
	0x0394AFD0 LDR X8, [X8 + 0xB8]
	0x0394AFD4 LDP S13, S14, [X8]
	0x0394AFD8 LDR V15, [X8 + 0x8]
	0x0394AFDC LDRB W8, [X25 + 0x785]
	0x0394AFE0 CBNZ W8, 0x394AFF0
	0x0394AFE4 MOV X0, X21
	0x0394AFE8 BL 0x1C16CF4
	0x0394AFEC STRB W26, [X25 + 0x785]
	0x0394AFF0 LDR X0, [X21]
	0x0394AFF4 LDR W8, [X0 + 0xE0]
	0x0394AFF8 CBNZ W8, 0x394B000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X21, 0xA98000
	015 Move X20, 0x7AA000
	016 Move W8, [X21+2432]
	017 Move X20, [X20+1432]
	018 Move V8, V6
	019 Move V9, V5
	020 Move V15, V4
	021 Move V13, V3
	022 Move V11, V2
	023 Move V12, V1
	024 Move V14, V0
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x7AA000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2432], W8
	035 Move X0, X19
	036 Call ProBuilderShape.get_mesh, X0
	037 Move X8, [X20]
	038 Move X20, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {163}
	052 Move X0, X19
	053 Move [X31+16], S12
	054 Move [X31+24], S11
	055 Call ProBuilderShape.get_mesh, X0
	056 Compare X0, 0
	057 JumpIfEqual {177}
	058 Move X1, X31
	059 Call Component.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {177}
	062 Move S1, [X19+128]
	063 Move S2, [X19+132]
	064 Move V0, [X19+124]
	065 Move X1, X31
	066 Call Transform.TransformPoint, X0, X1
	067 Move X0, X19
	068 Move V10, V0
	069 Move V11, V1
	070 Move V12, V2
	071 Call ProBuilderShape.get_mesh, X0
	072 Compare X0, 0
	073 JumpIfEqual {177}
	074 Move X1, X31
	075 Move [X31+4], S15
	076 Move [X31+12], S9
	077 Move [X31+12], S8
	078 Call Component.get_transform, X0
	079 Compare X0, 0
	080 JumpIfEqual {177}
	081 Move S1, [X19+88]
	082 Move S2, [X19+92]
	083 Move V0, [X19+84]
	084 Move X1, X31
	085 Call Transform.TransformPoint, X0, X1
	086 Move X0, X19
	087 Move V15, V0
	088 Move V8, V1
	089 Move V9, V2
	090 Call ProBuilderShape.get_mesh, X0
	091 Move V0, V15
	092 Move V1, V8
	093 Move V2, V9
	094 Move X1, X31
	095 Call MeshTransform.SetPivot, X0, X1
	096 Move X0, X19
	097 Call ProBuilderShape.get_mesh, X0
	098 Compare X0, 0
	099 JumpIfEqual {177}
	100 Move X1, X31
	101 Call Component.get_transform, X0
	102 Compare X0, 0
	103 JumpIfEqual {177}
	104 Move V0, V10
	105 Move V1, V11
	106 Move V2, V12
	107 Move X1, X31
	108 Call Transform.InverseTransformPoint, X0, X1
	109 Move X0, X19
	110 Move [X19+124], S0
	111 Move [X19+132], S1
	112 Move [X19+132], S2
	113 Call ProBuilderShape.get_mesh, X0
	114 Compare X0, 0
	115 JumpIfEqual {177}
	116 Move X1, X31
	117 Call Component.get_transform, X0
	118 Compare X0, 0
	119 JumpIfEqual {177}
	120 Move V0, V15
	121 Move V1, V8
	122 Move V2, V9
	123 Move X1, X31
	124 Add X21, X19, 124
	125 Call Transform.InverseTransformPoint, X0, X1
	126 Move X20, [X19+32]
	127 Move X0, X19
	128 Move [X19+84], S0
	129 Move [X19+92], S1
	130 Move [X19+92], S2
	131 Call ProBuilderShape.get_mesh, X0
	132 Move X8, [X21+16]
	133 Move V0, [X21]
	134 Move S1, [X31+16]
	135 Move S2, [X31+20]
	136 Move [X31+64], X8
	137 Move [X31+3], V0
	138 Compare X20, 0
	139 JumpIfEqual {177}
	140 Move X8, [X20]
	141 Move V0, [X31+3]
	142 Move X9, [X31+64]
	143 Move S4, [X31+4]
	144 Move S5, [X31+8]
	145 Move X10, [X8+376]
	146 Move [X31+5], V0
	147 Move [X31+96], X9
	148 Move X3, [X8+384]
	149 Move V6, [X31+12]
	150 Move X1, X0
	151 Add X8, X31, 24
	152 Add X2, X31, 80
	153 Move X0, X20
	154 Move V0, V14
	155 Move V3, V13
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X8, [X31+40]
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Move [X31+96], X8
	160 Move [X31+5], V0
	161 Move [X21+16], X8
	162 Move [X21], V0
	163 Move X20, [X31+192]
	164 Move X19, [X31+200]
	165 Move X30, [X31+176]
	166 Move X21, [X31+184]
	167 Move D9, [X31+160]
	168 Move D8, [X31+168]
	169 Move D11, [X31+144]
	170 Move D10, [X31+152]
	171 Move D13, [X31+128]
	172 Move D12, [X31+136]
	173 Move D15, [X31+112]
	174 Move D14, [X31+120]
	175 Add X31, X31, 208
	176 Return 
	177 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0394B244 ADD W10, W8, 0x1
	0x0394B248 CMP W10, W9
	0x0394B24C B.CS 0x394B2B8
	0x0394B250 LDR V1, [X31 + 0x14]
	0x0394B254 LDR V0, [X31 + 0x18]
	0x0394B258 ADD W8, W27, 0xB
	0x0394B25C SXTW X8, W8
	0x0394B260 MADD X8, X8, X24, X20
	0x0394B264 STP S1, S0, [X8 + 0x20]
	0x0394B268 LDR V0, [X31 + 0x1C]
	0x0394B26C ADD W9, W28, 0x1
	0x0394B270 ADD W27, W10, 0x1
	0x0394B274 STR S0, [X8 + 0x28]
	0x0394B278 LDR W8, [X19 + 0x18]
	0x0394B27C CMP W9, W8
	0x0394B280 B.LT 0x394AE28
	0x0394B284 MOV X0, X20
	0x0394B288 LDP X20, X19, [X31 + 0xB0]
	0x0394B28C LDP X22, X21, [X31 + 0xA0]
	0x0394B290 LDP X24, X23, [X31 + 0x90]
	0x0394B294 LDP X26, X25, [X31 + 0x80]
	0x0394B298 LDP X28, X27, [X31 + 0x70]
	0x0394B29C LDR X30, [X31 + 0x60]
	0x0394B2A0 LDP D9, D8, [X31 + 0x50]
	0x0394B2A4 LDP D11, D10, [X31 + 0x40]
	0x0394B2A8 LDP D13, D12, [X31 + 0x30]
	0x0394B2AC LDP D15, D14, [X31 + 0x20]
	0x0394B2B0 ADD X31, X31, 0xC0
	0x0394B2B4 RET
	0x0394B2B8 BL 0x1C16F28
	0x0394B2BC BL 0x1C16F20
	0x0394B2C0 MOVZ W8, 0x3
	0x0394B2C4 MOVZ W9, 0x1
	0x0394B2C8 MOV X1, X31
	0x0394B2CC STR W8, [X0 + 0x10]
	0x0394B2D0 STRB W9, [X0 + 0x18]
	0x0394B2D4 B 0x33BDD8C
	0x0394B2D8 STR X30, [X31 - 0x20]!
	0x0394B2DC STP X20, X19, [X31 + 0x10]
	0x0394B2E0 ADRP X19, 0xA96000
	0x0394B2E4 ADRP X20, 0x7AA000
	0x0394B2E8 LDRB W8, [X19 + 0x985]
	0x0394B2EC LDR X20, [X20 + 0x9B0]
	0x0394B2F0 TBNZ X8, 0x0, 0x394B32C
	0x0394B2F4 ADRP X0, 0x7A9000
	0x0394B2F8 LDR X0, [X0 + 0xE58]
	0x0394B2FC BL 0x1C16CF4
	0x0394B300 ADRP X0, 0x804000
	0x0394B304 LDR X0, [X0 + 0x148]
	0x0394B308 BL 0x1C16CF4
	0x0394B30C ADRP X0, 0x803000
	0x0394B310 LDR X0, [X0 + 0xCE8]
	0x0394B314 BL 0x1C16CF4
	0x0394B318 ADRP X0, 0x7AA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA97000
	006 Move X21, 0x805000
	007 Move W8, [X20+2433]
	008 Move X21, [X21+280]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x805000
	015 Move X0, [X0+280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2433], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X19+32], X20
	025 Move X20, 0xA8E000
	026 Move W8, [X20+2139]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x7A9000
	030 Move X0, [X0+1440]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2139], W8
	034 Move X8, 0x7A9000
	035 Move X8, [X8+1440]
	036 Move X20, 0xA8E000
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move V1, [X8+20]
	041 Move [X19+40], D0
	042 Move [X19+48], S1
	043 Move W8, [X20+1939]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x7AA000
	047 Move X0, [X0+1448]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+1939], W8
	051 Move X8, 0x7AA000
	052 Move X8, [X8+1448]
	053 Move X0, X19
	054 Move X1, X31
	055 Move X8, [X8]
	056 Move X8, [X8+184]
	057 Move V0, [X8]
	058 Move [X19+52], V0
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call MonoBehaviour..ctor, X0
	064 Return 

