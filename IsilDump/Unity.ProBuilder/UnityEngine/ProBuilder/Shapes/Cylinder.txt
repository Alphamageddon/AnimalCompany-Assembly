Type: UnityEngine.ProBuilder.Shapes.Cylinder

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x039467A0 MOVZ W8, 0x1
	0x039467A4 STRB W8, [X19 + 0x784]
	0x039467A8 LDR X0, [X20]
	0x039467AC ADRP X19, 0x7AF000
	0x039467B0 FSQRT S12, S8
	0x039467B4 FSQRT S8, S9
	0x039467B8 LDR W8, [X0 + 0xE0]
	0x039467BC LDR X19, [X19 + 0x9B0]
	0x039467C0 MOV V15.16B, V14.16B
	0x039467C4 CBNZ W8, 0x39467CC
	0x039467C8 BL 0x1C16DFC
	0x039467CC LDP S1, S0, [X22 + 0x10]
	0x039467D0 ADRP X8, 0xFFFFFFFFFD1A4000
	0x039467D4 FMOV S14, 0.5
	0x039467D8 LDR V2, [X8 + 0x410]
	0x039467DC LDR X0, [X19]
	0x039467E0 FMUL S9, S12, S14
	0x039467E4 FSUB S0, S9, S0
	0x039467E8 FADD S1, S1, S1
	0x039467EC FCMP S0, 0x0
	0x039467F0 FSUB S1, S8, S1
	0x039467F4 FCSEL S10, S0, S2, GT
	0x039467F8 FCMP S1, 0x0
	0x039467FC MOVZ W1, 0xC
	0x03946800 FCSEL S11, S1, S2, GT
	0x03946804 BL 0x1C16D6C
	0x03946808 CBZ X0, 0x3947ED8
	0x0394680C MOV X20, X0
	0x03946810 LDR W8, [X20 + 0x18]!
	0x03946814 MOV X23, X0
	0x03946818 CBZ W8, 0x3947EDC
	0x0394681C LDR V0, [X31 + 0x40]
	0x03946820 LDP S2, S1, [X31 + 0x2C]
	0x03946824 FNEG S3, S8
	0x03946828 CMP W8, 0x1
	0x0394682C FMUL S0, S0, S1
	0x03946830 LDR V1, [X31 + 0x44]
	0x03946834 FMUL S0, S0, S0
	0x03946838 FMUL S1, S1, S2
	0x0394683C LDR V2, [X31 + 0x3C]
	0x03946840 FMUL S1, S1, S1
	0x03946844 FADD S0, S0, S1
	0x03946848 FNMUL S1, S12, S14
	0x0394684C FMUL S2, S2, S13
	0x03946850 FMUL S2, S2, S2
	0x03946854 FADD S0, S2, S0
	0x03946858 FSQRT S0, S0
	0x0394685C STR V0, [X31 + 0x5]
	0x03946860 FMUL S0, S0, S14
	0x03946864 STP S1, S3, [X23 + 0x20]
	0x03946868 STR S0, [X23 + 0x28]
	0x0394686C B.EQ 0x3947EDC
	0x03946870 LDP S14, S13, [X31 + 0x24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA9C000
	006 Move W8, [X21+2416]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x80A000
	014 Move X0, [X0+288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2416], W8
	018 Compare X19, 0
	019 JumpIfEqual {49}
	020 Move X8, 0x80A000
	021 Move X8, [X8+288]
	022 Move X9, [X19]
	023 Move X1, [X8]
	024 Move W10, [X9+304]
	025 Move W8, [X1+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X10, [X9+200]
	028 Subtract X9, X8, 1
	029 Move X10, [X10]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W10, [X19+16]
	032 Move [X20+16], W10
	033 Move X10, [X19]
	034 Move W11, [X10+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X10, [X10+200]
	037 Move X10, [X10]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W10, [X19+20]
	040 Move [X20+20], W10
	041 Move X10, [X19]
	042 Move W11, [X10+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X10+200]
	045 Move X8, [X8]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X19+24]
	048 Move [X20+24], W8
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X0, X19
	055 Call 0x1C181E0

Method: UnityEngine.Bounds UpdateBounds(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation, UnityEngine.Bounds bounds)

Disassembly:
	0x03946874 FNEG S2, S10
	0x03946878 CMP W8, 0x2
	0x0394687C STP S2, S3, [X23 + 0x2C]
	0x03946880 STR S0, [X23 + 0x34]
	0x03946884 B.LS 0x3947EDC
	0x03946888 CMP W8, 0x3
	0x0394688C STP S10, S3, [X23 + 0x38]
	0x03946890 STR S0, [X23 + 0x40]
	0x03946894 B.EQ 0x3947EDC
	0x03946898 CMP W8, 0x4
	0x0394689C STP S9, S3, [X23 + 0x44]

ISIL:
	001 Move S3, 0.5
	002 Multiply S0, S0, S3
	003 Multiply S1, S1, S3
	004 Multiply S2, S2, S3
	005 Move [X2+12], S0
	006 Move [X2+20], S1
	007 Move [X2+20], S2
	008 Move X9, [X2+16]
	009 Move V0, [X2]
	010 Move [X8+16], X9
	011 Move [X8], V0
	012 Return X0

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x039468A0 STR S0, [X23 + 0x4C]
	0x039468A4 B.LS 0x3947EDC
	0x039468A8 CMP W8, 0x5
	0x039468AC STP S1, S11, [X23 + 0x50]
	0x039468B0 STR S0, [X23 + 0x58]
	0x039468B4 B.EQ 0x3947EDC
	0x039468B8 CMP W8, 0x6
	0x039468BC STP S2, S11, [X23 + 0x5C]
	0x039468C0 STR S0, [X23 + 0x64]
	0x039468C4 B.LS 0x3947EDC
	0x039468C8 CMP W8, 0x7
	0x039468CC STP S10, S11, [X23 + 0x68]
	0x039468D0 STR S0, [X23 + 0x70]
	0x039468D4 B.EQ 0x3947EDC
	0x039468D8 CMP W8, 0x8
	0x039468DC STP S9, S11, [X23 + 0x74]
	0x039468E0 STR S0, [X23 + 0x7C]
	0x039468E4 B.LS 0x3947EDC
	0x039468E8 CMP W8, 0x9
	0x039468EC STP S1, S8, [X23 + 0x80]
	0x039468F0 STR S0, [X23 + 0x88]
	0x039468F4 B.EQ 0x3947EDC
	0x039468F8 CMP W8, 0xA
	0x039468FC STP S2, S8, [X23 + 0x8C]
	0x03946900 STR S0, [X23 + 0x94]
	0x03946904 B.LS 0x3947EDC
	0x03946908 CMP W8, 0xB
	0x0394690C STP S10, S8, [X23 + 0x98]
	0x03946910 STR S0, [X23 + 0xA0]
	0x03946914 B.EQ 0x3947EDC
	0x03946918 ADRP X25, 0x7B1000
	0x0394691C LDR X25, [X25 + 0x3C0]
	0x03946920 STP S9, S8, [X23 + 0xA4]
	0x03946924 STR S0, [X23 + 0xAC]
	0x03946928 ADRP X24, 0x7D9000
	0x0394692C LDR X0, [X25]
	0x03946930 LDR X24, [X24 + 0x5B8]
	0x03946934 BL 0x1C16F10
	0x03946938 LDR X1, [X24]
	0x0394693C MOV X22, X0
	0x03946940 BL 0x30CB97C
	0x03946944 LDR W8, [X23 + 0x18]
	0x03946948 CMP W8, 0x4
	0x0394694C B.LS 0x3947EDC
	0x03946950 CBZ X22, 0x3947ED8
	0x03946954 ADRP X8, 0x7B1000
	0x03946958 LDR X8, [X8 + 0x3B8]
	0x0394695C MOV X19, X22
	0x03946960 LDP S0, S1, [X23 + 0x50]
	0x03946964 LDR V2, [X23 + 0x58]
	0x03946968 LDR X8, [X8]
	0x0394696C LDR W9, [X19 + 0x1C]!
	0x03946970 ADD W9, W9, 0x1
	0x03946974 STR W9, [X19]
	0x03946978 MOV X10, X19
	0x0394697C LDR X9, [X10 - 0xC]!
	0x03946980 MOV X28, X19
	0x03946984 STR X10, [X31 + 0x48]
	0x03946988 LDRSW X10, [X28 - 0x4]!
	0x0394698C CBZ X9, 0x3947ED8
	0x03946990 LDR W11, [X9 + 0x18]
	0x03946994 CMP W10, W11
	0x03946998 B.CS 0x39469BC
	0x0394699C ADD W8, W10, 0x1
	0x039469A0 MOVZ W11, 0xC
	0x039469A4 STR W8, [X28]
	0x039469A8 NOP
	0x039469AC MADD X8, X10, X11, X9
	0x039469B0 STP S0, S1, [X8 + 0x20]
	0x039469B4 STR S2, [X8 + 0x28]
	0x039469B8 B 0x39469D0
	0x039469BC LDR X8, [X8 + 0x20]
	0x039469C0 MOV X0, X22
	0x039469C4 LDR X8, [X8 + 0xC0]
	0x039469C8 LDR X1, [X8 + 0x70]
	0x039469CC BL 0x30CC1B4
	0x039469D0 LDR W8, [X20]
	0x039469D4 CBZ W8, 0x3947EDC
	0x039469D8 LDR W8, [X19]
	0x039469DC ADRP X9, 0x7B1000
	0x039469E0 LDP S0, S1, [X23 + 0x20]
	0x039469E4 LDR V2, [X23 + 0x28]
	0x039469E8 LDR X9, [X9 + 0x3B8]
	0x039469EC ADD W8, W8, 0x1
	0x039469F0 LDR X10, [X9]
	0x039469F4 STR W8, [X19]
	0x039469F8 LDR X8, [X31 + 0x48]
	0x039469FC LDR X8, [X8]
	0x03946A00 CBZ X8, 0x3947ED8
	0x03946A04 LDRSW X9, [X28]
	0x03946A08 LDR W11, [X8 + 0x18]
	0x03946A0C CMP W9, W11
	0x03946A10 B.CS 0x3946A30
	0x03946A14 MOVZ W11, 0xC
	0x03946A18 ADD W10, W9, 0x1
	0x03946A1C MADD X8, X9, X11, X8
	0x03946A20 STR W10, [X28]
	0x03946A24 STP S0, S1, [X8 + 0x20]
	0x03946A28 STR S2, [X8 + 0x28]
	0x03946A2C B 0x3946A44
	0x03946A30 LDR X8, [X10 + 0x20]
	0x03946A34 MOV X0, X22
	0x03946A38 LDR X8, [X8 + 0xC0]
	0x03946A3C LDR X1, [X8 + 0x70]
	0x03946A40 BL 0x30CC1B4
	0x03946A44 LDR W8, [X20]
	0x03946A48 CMP W8, 0x5
	0x03946A4C B.LS 0x3947EDC
	0x03946A50 LDR W8, [X19]
	0x03946A54 ADRP X9, 0x7B1000
	0x03946A58 LDP S0, S1, [X23 + 0x5C]
	0x03946A5C LDR V2, [X23 + 0x64]
	0x03946A60 LDR X9, [X9 + 0x3B8]
	0x03946A64 ADD W8, W8, 0x1
	0x03946A68 LDR X10, [X9]
	0x03946A6C STR W8, [X19]
	0x03946A70 LDR X8, [X31 + 0x48]
	0x03946A74 LDR X8, [X8]
	0x03946A78 CBZ X8, 0x3947ED8
	0x03946A7C LDRSW X9, [X28]
	0x03946A80 LDR W11, [X8 + 0x18]
	0x03946A84 CMP W9, W11
	0x03946A88 B.CS 0x3946AA8
	0x03946A8C MOVZ W11, 0xC
	0x03946A90 ADD W10, W9, 0x1
	0x03946A94 MADD X8, X9, X11, X8
	0x03946A98 STR W10, [X28]
	0x03946A9C STP S0, S1, [X8 + 0x20]
	0x03946AA0 STR S2, [X8 + 0x28]
	0x03946AA4 B 0x3946ABC
	0x03946AA8 LDR X8, [X10 + 0x20]
	0x03946AAC MOV X0, X22
	0x03946AB0 LDR X8, [X8 + 0xC0]
	0x03946AB4 LDR X1, [X8 + 0x70]
	0x03946AB8 BL 0x30CC1B4
	0x03946ABC LDR W8, [X20]
	0x03946AC0 CMP W8, 0x1
	0x03946AC4 B.LS 0x3947EDC
	0x03946AC8 LDR W8, [X19]
	0x03946ACC ADRP X9, 0x7B1000
	0x03946AD0 LDP S0, S1, [X23 + 0x2C]
	0x03946AD4 LDR V2, [X23 + 0x34]
	0x03946AD8 LDR X9, [X9 + 0x3B8]
	0x03946ADC ADD W8, W8, 0x1
	0x03946AE0 LDR X10, [X9]
	0x03946AE4 STR W8, [X19]
	0x03946AE8 LDR X8, [X31 + 0x48]
	0x03946AEC LDR X8, [X8]
	0x03946AF0 CBZ X8, 0x3947ED8
	0x03946AF4 LDRSW X9, [X28]
	0x03946AF8 LDR W11, [X8 + 0x18]
	0x03946AFC CMP W9, W11
	0x03946B00 B.CS 0x3946B20
	0x03946B04 MOVZ W11, 0xC
	0x03946B08 ADD W10, W9, 0x1
	0x03946B0C MADD X8, X9, X11, X8
	0x03946B10 STR W10, [X28]
	0x03946B14 STP S0, S1, [X8 + 0x20]
	0x03946B18 STR S2, [X8 + 0x28]
	0x03946B1C B 0x3946B34
	0x03946B20 LDR X8, [X10 + 0x20]
	0x03946B24 MOV X0, X22
	0x03946B28 LDR X8, [X8 + 0xC0]
	0x03946B2C LDR X1, [X8 + 0x70]
	0x03946B30 BL 0x30CC1B4
	0x03946B34 LDR W8, [X20]
	0x03946B38 CMP W8, 0x2
	0x03946B3C B.LS 0x3947EDC
	0x03946B40 LDR W8, [X19]
	0x03946B44 ADRP X9, 0x7B1000
	0x03946B48 LDP S0, S1, [X23 + 0x38]
	0x03946B4C LDR V2, [X23 + 0x40]
	0x03946B50 LDR X9, [X9 + 0x3B8]
	0x03946B54 ADD W8, W8, 0x1
	0x03946B58 LDR X10, [X9]
	0x03946B5C STR W8, [X19]
	0x03946B60 LDR X8, [X31 + 0x48]
	0x03946B64 LDR X8, [X8]
	0x03946B68 CBZ X8, 0x3947ED8
	0x03946B6C LDRSW X9, [X28]
	0x03946B70 LDR W11, [X8 + 0x18]
	0x03946B74 CMP W9, W11
	0x03946B78 B.CS 0x3946B98
	0x03946B7C MOVZ W11, 0xC
	0x03946B80 ADD W10, W9, 0x1
	0x03946B84 MADD X8, X9, X11, X8
	0x03946B88 STR W10, [X28]
	0x03946B8C STP S0, S1, [X8 + 0x20]
	0x03946B90 STR S2, [X8 + 0x28]
	0x03946B94 B 0x3946BAC
	0x03946B98 LDR X8, [X10 + 0x20]
	0x03946B9C MOV X0, X22
	0x03946BA0 LDR X8, [X8 + 0xC0]
	0x03946BA4 LDR X1, [X8 + 0x70]
	0x03946BA8 BL 0x30CC1B4
	0x03946BAC LDR W8, [X20]
	0x03946BB0 CMP W8, 0x3
	0x03946BB4 B.LS 0x3947EDC
	0x03946BB8 LDR W8, [X19]
	0x03946BBC ADRP X9, 0x7B1000
	0x03946BC0 LDP S0, S1, [X23 + 0x44]
	0x03946BC4 LDR V2, [X23 + 0x4C]
	0x03946BC8 LDR X9, [X9 + 0x3B8]
	0x03946BCC ADD W8, W8, 0x1
	0x03946BD0 LDR X10, [X9]
	0x03946BD4 STR W8, [X19]
	0x03946BD8 LDR X8, [X31 + 0x48]
	0x03946BDC LDR X8, [X8]
	0x03946BE0 CBZ X8, 0x3947ED8
	0x03946BE4 LDRSW X9, [X28]
	0x03946BE8 LDR W11, [X8 + 0x18]
	0x03946BEC CMP W9, W11
	0x03946BF0 B.CS 0x3946C10
	0x03946BF4 MOVZ W11, 0xC
	0x03946BF8 ADD W10, W9, 0x1
	0x03946BFC MADD X8, X9, X11, X8
	0x03946C00 STR W10, [X28]
	0x03946C04 STP S0, S1, [X8 + 0x20]
	0x03946C08 STR S2, [X8 + 0x28]
	0x03946C0C B 0x3946C24
	0x03946C10 LDR X8, [X10 + 0x20]
	0x03946C14 MOV X0, X22
	0x03946C18 LDR X8, [X8 + 0xC0]
	0x03946C1C LDR X1, [X8 + 0x70]
	0x03946C20 BL 0x30CC1B4
	0x03946C24 LDR W8, [X20]
	0x03946C28 CMP W8, 0x6
	0x03946C2C B.LS 0x3947EDC
	0x03946C30 LDR W8, [X19]
	0x03946C34 ADRP X9, 0x7B1000
	0x03946C38 LDP S0, S1, [X23 + 0x68]
	0x03946C3C LDR V2, [X23 + 0x70]
	0x03946C40 LDR X9, [X9 + 0x3B8]
	0x03946C44 ADD W8, W8, 0x1
	0x03946C48 LDR X10, [X9]
	0x03946C4C STR W8, [X19]
	0x03946C50 LDR X8, [X31 + 0x48]
	0x03946C54 LDR X8, [X8]
	0x03946C58 CBZ X8, 0x3947ED8
	0x03946C5C LDRSW X9, [X28]
	0x03946C60 LDR W11, [X8 + 0x18]
	0x03946C64 CMP W9, W11
	0x03946C68 B.CS 0x3946C88
	0x03946C6C MOVZ W11, 0xC
	0x03946C70 ADD W10, W9, 0x1
	0x03946C74 MADD X8, X9, X11, X8
	0x03946C78 STR W10, [X28]
	0x03946C7C STP S0, S1, [X8 + 0x20]
	0x03946C80 STR S2, [X8 + 0x28]
	0x03946C84 B 0x3946C9C
	0x03946C88 LDR X8, [X10 + 0x20]
	0x03946C8C MOV X0, X22
	0x03946C90 LDR X8, [X8 + 0xC0]
	0x03946C94 LDR X1, [X8 + 0x70]
	0x03946C98 BL 0x30CC1B4
	0x03946C9C LDR W8, [X20]
	0x03946CA0 CMP W8, 0x7
	0x03946CA4 B.LS 0x3947EDC
	0x03946CA8 LDR W8, [X19]
	0x03946CAC ADRP X9, 0x7B1000
	0x03946CB0 LDP S0, S1, [X23 + 0x74]
	0x03946CB4 LDR V2, [X23 + 0x7C]
	0x03946CB8 LDR X9, [X9 + 0x3B8]
	0x03946CBC ADD W8, W8, 0x1
	0x03946CC0 LDR X10, [X9]
	0x03946CC4 STR W8, [X19]
	0x03946CC8 LDR X8, [X31 + 0x48]
	0x03946CCC LDR X8, [X8]
	0x03946CD0 CBZ X8, 0x3947ED8
	0x03946CD4 LDRSW X9, [X28]
	0x03946CD8 LDR W11, [X8 + 0x18]
	0x03946CDC CMP W9, W11
	0x03946CE0 B.CS 0x3946D00
	0x03946CE4 MOVZ W11, 0xC
	0x03946CE8 ADD W10, W9, 0x1
	0x03946CEC MADD X8, X9, X11, X8
	0x03946CF0 STR W10, [X28]
	0x03946CF4 STP S0, S1, [X8 + 0x20]
	0x03946CF8 STR S2, [X8 + 0x28]
	0x03946CFC B 0x3946D14
	0x03946D00 LDR X8, [X10 + 0x20]
	0x03946D04 MOV X0, X22
	0x03946D08 LDR X8, [X8 + 0xC0]
	0x03946D0C LDR X1, [X8 + 0x70]
	0x03946D10 BL 0x30CC1B4
	0x03946D14 LDR W8, [X20]
	0x03946D18 CMP W8, 0x4
	0x03946D1C B.LS 0x3947EDC
	0x03946D20 LDR W8, [X19]
	0x03946D24 ADRP X9, 0x7B1000
	0x03946D28 LDP S0, S1, [X23 + 0x50]
	0x03946D2C LDR V2, [X23 + 0x58]
	0x03946D30 LDR X9, [X9 + 0x3B8]
	0x03946D34 ADD W8, W8, 0x1
	0x03946D38 LDR X10, [X9]
	0x03946D3C STR W8, [X19]
	0x03946D40 LDR X8, [X31 + 0x48]
	0x03946D44 LDR X8, [X8]
	0x03946D48 CBZ X8, 0x3947ED8
	0x03946D4C LDRSW X9, [X28]
	0x03946D50 LDR W11, [X8 + 0x18]
	0x03946D54 CMP W9, W11
	0x03946D58 B.CS 0x3946D78
	0x03946D5C MOVZ W11, 0xC
	0x03946D60 ADD W10, W9, 0x1
	0x03946D64 MADD X8, X9, X11, X8
	0x03946D68 STR W10, [X28]
	0x03946D6C STP S0, S1, [X8 + 0x20]
	0x03946D70 STR S2, [X8 + 0x28]
	0x03946D74 B 0x3946D8C
	0x03946D78 LDR X8, [X10 + 0x20]
	0x03946D7C MOV X0, X22
	0x03946D80 LDR X8, [X8 + 0xC0]
	0x03946D84 LDR X1, [X8 + 0x70]
	0x03946D88 BL 0x30CC1B4
	0x03946D8C LDR W8, [X20]
	0x03946D90 CMP W8, 0x5
	0x03946D94 B.LS 0x3947EDC
	0x03946D98 LDR W8, [X19]
	0x03946D9C ADRP X9, 0x7B1000
	0x03946DA0 LDP S0, S1, [X23 + 0x5C]
	0x03946DA4 LDR V2, [X23 + 0x64]
	0x03946DA8 LDR X9, [X9 + 0x3B8]
	0x03946DAC ADD W8, W8, 0x1
	0x03946DB0 LDR X10, [X9]
	0x03946DB4 STR W8, [X19]
	0x03946DB8 LDR X8, [X31 + 0x48]
	0x03946DBC LDR X8, [X8]
	0x03946DC0 CBZ X8, 0x3947ED8
	0x03946DC4 LDRSW X9, [X28]
	0x03946DC8 LDR W11, [X8 + 0x18]
	0x03946DCC CMP W9, W11
	0x03946DD0 B.CS 0x3946DF0
	0x03946DD4 MOVZ W11, 0xC
	0x03946DD8 ADD W10, W9, 0x1
	0x03946DDC MADD X8, X9, X11, X8
	0x03946DE0 STR W10, [X28]
	0x03946DE4 STP S0, S1, [X8 + 0x20]
	0x03946DE8 STR S2, [X8 + 0x28]
	0x03946DEC B 0x3946E04
	0x03946DF0 LDR X8, [X10 + 0x20]
	0x03946DF4 MOV X0, X22
	0x03946DF8 LDR X8, [X8 + 0xC0]
	0x03946DFC LDR X1, [X8 + 0x70]
	0x03946E00 BL 0x30CC1B4
	0x03946E04 LDR W8, [X20]
	0x03946E08 CMP W8, 0x8
	0x03946E0C B.LS 0x3947EDC
	0x03946E10 LDR W8, [X19]
	0x03946E14 ADRP X9, 0x7B1000
	0x03946E18 LDP S0, S1, [X23 + 0x80]
	0x03946E1C LDR V2, [X23 + 0x88]
	0x03946E20 LDR X9, [X9 + 0x3B8]
	0x03946E24 ADD W8, W8, 0x1
	0x03946E28 LDR X10, [X9]
	0x03946E2C STR W8, [X19]
	0x03946E30 LDR X8, [X31 + 0x48]
	0x03946E34 LDR X8, [X8]
	0x03946E38 CBZ X8, 0x3947ED8
	0x03946E3C LDRSW X9, [X28]
	0x03946E40 LDR W11, [X8 + 0x18]
	0x03946E44 CMP W9, W11
	0x03946E48 B.CS 0x3946E68
	0x03946E4C MOVZ W11, 0xC
	0x03946E50 ADD W10, W9, 0x1
	0x03946E54 MADD X8, X9, X11, X8
	0x03946E58 STR W10, [X28]
	0x03946E5C STP S0, S1, [X8 + 0x20]
	0x03946E60 STR S2, [X8 + 0x28]
	0x03946E64 B 0x3946E7C
	0x03946E68 LDR X8, [X10 + 0x20]
	0x03946E6C MOV X0, X22
	0x03946E70 LDR X8, [X8 + 0xC0]
	0x03946E74 LDR X1, [X8 + 0x70]
	0x03946E78 BL 0x30CC1B4
	0x03946E7C LDR W8, [X20]
	0x03946E80 CMP W8, 0x9
	0x03946E84 B.LS 0x3947EDC
	0x03946E88 LDR W8, [X19]
	0x03946E8C ADRP X9, 0x7B1000
	0x03946E90 LDP S0, S1, [X23 + 0x8C]
	0x03946E94 LDR V2, [X23 + 0x94]
	0x03946E98 LDR X9, [X9 + 0x3B8]
	0x03946E9C ADD W8, W8, 0x1
	0x03946EA0 LDR X10, [X9]
	0x03946EA4 STR W8, [X19]
	0x03946EA8 LDR X8, [X31 + 0x48]
	0x03946EAC LDR X8, [X8]
	0x03946EB0 CBZ X8, 0x3947ED8
	0x03946EB4 LDRSW X9, [X28]
	0x03946EB8 LDR W11, [X8 + 0x18]
	0x03946EBC CMP W9, W11
	0x03946EC0 B.CS 0x3946EE0
	0x03946EC4 MOVZ W11, 0xC
	0x03946EC8 ADD W10, W9, 0x1
	0x03946ECC MADD X8, X9, X11, X8
	0x03946ED0 STR W10, [X28]
	0x03946ED4 STP S0, S1, [X8 + 0x20]
	0x03946ED8 STR S2, [X8 + 0x28]
	0x03946EDC B 0x3946EF4
	0x03946EE0 LDR X8, [X10 + 0x20]
	0x03946EE4 MOV X0, X22
	0x03946EE8 LDR X8, [X8 + 0xC0]
	0x03946EEC LDR X1, [X8 + 0x70]
	0x03946EF0 BL 0x30CC1B4
	0x03946EF4 LDR W8, [X20]
	0x03946EF8 CMP W8, 0xA
	0x03946EFC B.LS 0x3947EDC
	0x03946F00 LDR W8, [X19]
	0x03946F04 ADRP X9, 0x7B1000
	0x03946F08 LDP S0, S1, [X23 + 0x98]
	0x03946F0C LDR V2, [X23 + 0xA0]
	0x03946F10 LDR X9, [X9 + 0x3B8]
	0x03946F14 ADD W8, W8, 0x1
	0x03946F18 LDR X10, [X9]
	0x03946F1C STR W8, [X19]
	0x03946F20 LDR X8, [X31 + 0x48]
	0x03946F24 LDR X8, [X8]
	0x03946F28 CBZ X8, 0x3947ED8
	0x03946F2C LDRSW X9, [X28]
	0x03946F30 LDR W11, [X8 + 0x18]
	0x03946F34 CMP W9, W11
	0x03946F38 B.CS 0x3946F58
	0x03946F3C MOVZ W11, 0xC
	0x03946F40 ADD W10, W9, 0x1
	0x03946F44 MADD X8, X9, X11, X8
	0x03946F48 STR W10, [X28]
	0x03946F4C STP S0, S1, [X8 + 0x20]
	0x03946F50 STR S2, [X8 + 0x28]
	0x03946F54 B 0x3946F6C
	0x03946F58 LDR X8, [X10 + 0x20]
	0x03946F5C MOV X0, X22
	0x03946F60 LDR X8, [X8 + 0xC0]
	0x03946F64 LDR X1, [X8 + 0x70]
	0x03946F68 BL 0x30CC1B4
	0x03946F6C LDR W8, [X20]
	0x03946F70 CMP W8, 0x6
	0x03946F74 B.LS 0x3947EDC
	0x03946F78 LDR W8, [X19]
	0x03946F7C ADRP X9, 0x7B1000
	0x03946F80 LDP S0, S1, [X23 + 0x68]
	0x03946F84 LDR V2, [X23 + 0x70]
	0x03946F88 LDR X9, [X9 + 0x3B8]
	0x03946F8C ADD W8, W8, 0x1
	0x03946F90 LDR X10, [X9]
	0x03946F94 STR W8, [X19]
	0x03946F98 LDR X8, [X31 + 0x48]
	0x03946F9C LDR X8, [X8]
	0x03946FA0 CBZ X8, 0x3947ED8
	0x03946FA4 LDRSW X9, [X28]
	0x03946FA8 LDR W11, [X8 + 0x18]
	0x03946FAC CMP W9, W11
	0x03946FB0 B.CS 0x3946FD0
	0x03946FB4 MOVZ W11, 0xC
	0x03946FB8 ADD W10, W9, 0x1
	0x03946FBC MADD X8, X9, X11, X8
	0x03946FC0 STR W10, [X28]
	0x03946FC4 STP S0, S1, [X8 + 0x20]
	0x03946FC8 STR S2, [X8 + 0x28]
	0x03946FCC B 0x3946FE4
	0x03946FD0 LDR X8, [X10 + 0x20]
	0x03946FD4 MOV X0, X22
	0x03946FD8 LDR X8, [X8 + 0xC0]
	0x03946FDC LDR X1, [X8 + 0x70]
	0x03946FE0 BL 0x30CC1B4
	0x03946FE4 LDR W8, [X20]
	0x03946FE8 CMP W8, 0xB
	0x03946FEC B.LS 0x3947EDC
	0x03946FF0 LDR W8, [X19]
	0x03946FF4 ADRP X9, 0x7B1000
	0x03946FF8 LDP S0, S1, [X23 + 0xA4]
	0x03946FFC LDR V2, [X23 + 0xAC]
	0x03947000 LDR X9, [X9 + 0x3B8]
	0x03947004 ADD W8, W8, 0x1
	0x03947008 LDR X10, [X9]
	0x0394700C STR W8, [X19]
	0x03947010 LDR X8, [X31 + 0x48]
	0x03947014 LDR X8, [X8]
	0x03947018 CBZ X8, 0x3947ED8
	0x0394701C LDRSW X9, [X28]
	0x03947020 LDR W11, [X8 + 0x18]
	0x03947024 CMP W9, W11
	0x03947028 B.CS 0x3947048
	0x0394702C MOVZ W11, 0xC
	0x03947030 ADD W10, W9, 0x1
	0x03947034 MADD X8, X9, X11, X8
	0x03947038 STR W10, [X28]
	0x0394703C STP S0, S1, [X8 + 0x20]
	0x03947040 STR S2, [X8 + 0x28]
	0x03947044 B 0x394705C
	0x03947048 LDR X8, [X10 + 0x20]
	0x0394704C MOV X0, X22
	0x03947050 LDR X8, [X8 + 0xC0]
	0x03947054 LDR X1, [X8 + 0x70]
	0x03947058 BL 0x30CC1B4
	0x0394705C LDR W8, [X20]
	0x03947060 CMP W8, 0x7
	0x03947064 B.LS 0x3947EDC
	0x03947068 LDR W8, [X19]
	0x0394706C ADRP X9, 0x7B0000
	0x03947070 LDP S0, S1, [X23 + 0x74]
	0x03947074 LDR V2, [X23 + 0x7C]
	0x03947078 LDR X9, [X9 + 0x3B8]
	0x0394707C ADD W8, W8, 0x1
	0x03947080 LDR X10, [X9]
	0x03947084 STR W8, [X19]
	0x03947088 LDR X8, [X31 + 0x48]
	0x0394708C LDR X8, [X8]
	0x03947090 CBZ X8, 0x3947ED8
	0x03947094 LDRSW X9, [X28]
	0x03947098 LDR W11, [X8 + 0x18]
	0x0394709C CMP W9, W11
	0x039470A0 B.CS 0x39470C0
	0x039470A4 MOVZ W11, 0xC
	0x039470A8 ADD W10, W9, 0x1
	0x039470AC MADD X8, X9, X11, X8
	0x039470B0 STR W10, [X28]
	0x039470B4 STP S0, S1, [X8 + 0x20]
	0x039470B8 STR S2, [X8 + 0x28]
	0x039470BC B 0x39470D4
	0x039470C0 LDR X8, [X10 + 0x20]
	0x039470C4 MOV X0, X22
	0x039470C8 LDR X8, [X8 + 0xC0]
	0x039470CC LDR X1, [X8 + 0x70]
	0x039470D0 BL 0x30CC1B4
	0x039470D4 LDR W8, [X20]
	0x039470D8 CMP W8, 0x5
	0x039470DC B.LS 0x3947EDC
	0x039470E0 LDR W8, [X19]
	0x039470E4 ADRP X9, 0x7B0000
	0x039470E8 LDP S0, S1, [X23 + 0x5C]
	0x039470EC LDR V2, [X23 + 0x64]
	0x039470F0 LDR X9, [X9 + 0x3B8]
	0x039470F4 ADD W8, W8, 0x1
	0x039470F8 LDR X10, [X9]
	0x039470FC STR W8, [X19]
	0x03947100 LDR X8, [X31 + 0x48]
	0x03947104 LDR X8, [X8]
	0x03947108 CBZ X8, 0x3947ED8
	0x0394710C LDRSW X9, [X28]
	0x03947110 LDR W11, [X8 + 0x18]
	0x03947114 CMP W9, W11
	0x03947118 B.CS 0x3947138
	0x0394711C MOVZ W11, 0xC
	0x03947120 ADD W10, W9, 0x1
	0x03947124 MADD X8, X9, X11, X8
	0x03947128 STR W10, [X28]
	0x0394712C STP S0, S1, [X8 + 0x20]
	0x03947130 STR S2, [X8 + 0x28]
	0x03947134 B 0x394714C
	0x03947138 LDR X8, [X10 + 0x20]
	0x0394713C MOV X0, X22
	0x03947140 LDR X8, [X8 + 0xC0]
	0x03947144 LDR X1, [X8 + 0x70]
	0x03947148 BL 0x30CC1B4
	0x0394714C LDR W8, [X20]
	0x03947150 CMP W8, 0x6
	0x03947154 B.LS 0x3947EDC
	0x03947158 LDR W8, [X19]
	0x0394715C ADRP X9, 0x7B0000
	0x03947160 LDP S0, S1, [X23 + 0x68]
	0x03947164 LDR V2, [X23 + 0x70]
	0x03947168 LDR X9, [X9 + 0x3B8]
	0x0394716C ADD W8, W8, 0x1
	0x03947170 LDR X10, [X9]
	0x03947174 STR W8, [X19]
	0x03947178 LDR X8, [X31 + 0x48]
	0x0394717C LDR X8, [X8]
	0x03947180 CBZ X8, 0x3947ED8
	0x03947184 LDRSW X9, [X28]
	0x03947188 LDR W11, [X8 + 0x18]
	0x0394718C CMP W9, W11
	0x03947190 B.CS 0x39471B0
	0x03947194 MOVZ W11, 0xC
	0x03947198 ADD W10, W9, 0x1
	0x0394719C MADD X8, X9, X11, X8
	0x039471A0 STR W10, [X28]
	0x039471A4 STP S0, S1, [X8 + 0x20]
	0x039471A8 STR S2, [X8 + 0x28]
	0x039471AC B 0x39471C4
	0x039471B0 LDR X8, [X10 + 0x20]
	0x039471B4 MOV X0, X22
	0x039471B8 LDR X8, [X8 + 0xC0]
	0x039471BC LDR X1, [X8 + 0x70]
	0x039471C0 BL 0x30CC1B4
	0x039471C4 LDR W8, [X20]
	0x039471C8 CMP W8, 0x9
	0x039471CC B.LS 0x3947EDC
	0x039471D0 LDR W8, [X19]
	0x039471D4 ADRP X9, 0x7B0000
	0x039471D8 LDP S0, S1, [X23 + 0x8C]
	0x039471DC LDR V2, [X23 + 0x94]
	0x039471E0 LDR X9, [X9 + 0x3B8]
	0x039471E4 ADD W8, W8, 0x1
	0x039471E8 LDR X10, [X9]
	0x039471EC STR W8, [X19]
	0x039471F0 LDR X8, [X31 + 0x48]
	0x039471F4 LDR X8, [X8]
	0x039471F8 CBZ X8, 0x3947ED8
	0x039471FC LDRSW X9, [X28]
	0x03947200 LDR W11, [X8 + 0x18]
	0x03947204 CMP W9, W11
	0x03947208 B.CS 0x3947228
	0x0394720C MOVZ W11, 0xC
	0x03947210 ADD W10, W9, 0x1
	0x03947214 MADD X8, X9, X11, X8
	0x03947218 STR W10, [X28]
	0x0394721C STP S0, S1, [X8 + 0x20]
	0x03947220 STR S2, [X8 + 0x28]
	0x03947224 B 0x394723C
	0x03947228 LDR X8, [X10 + 0x20]
	0x0394722C MOV X0, X22
	0x03947230 LDR X8, [X8 + 0xC0]
	0x03947234 LDR X1, [X8 + 0x70]
	0x03947238 BL 0x30CC1B4
	0x0394723C LDR W8, [X20]
	0x03947240 CMP W8, 0xA
	0x03947244 B.LS 0x3947EDC
	0x03947248 LDR W8, [X19]
	0x0394724C ADRP X9, 0x7B0000
	0x03947250 LDP S0, S1, [X23 + 0x98]
	0x03947254 LDR V2, [X23 + 0xA0]
	0x03947258 LDR X9, [X9 + 0x3B8]
	0x0394725C ADD W8, W8, 0x1
	0x03947260 LDR X10, [X9]
	0x03947264 STR W8, [X19]
	0x03947268 LDR X8, [X31 + 0x48]
	0x0394726C LDR X8, [X8]
	0x03947270 CBZ X8, 0x3947ED8
	0x03947274 LDRSW X9, [X28]
	0x03947278 LDR W11, [X8 + 0x18]
	0x0394727C STR X20, [X31 + 0x30]
	0x03947280 STP X21, X27, [X31 + 0x10]
	0x03947284 CMP W9, W11
	0x03947288 B.CS 0x39472A8
	0x0394728C MOVZ W11, 0xC
	0x03947290 ADD W10, W9, 0x1
	0x03947294 MADD X8, X9, X11, X8
	0x03947298 STR W10, [X28]
	0x0394729C STP S0, S1, [X8 + 0x20]
	0x039472A0 STR S2, [X8 + 0x28]
	0x039472A4 B 0x39472BC
	0x039472A8 LDR X8, [X10 + 0x20]
	0x039472AC MOV X0, X22
	0x039472B0 LDR X8, [X8 + 0xC0]
	0x039472B4 LDR X1, [X8 + 0x70]
	0x039472B8 BL 0x30CC1B4
	0x039472BC LDR X0, [X25]
	0x039472C0 ADRP X27, 0x7B0000
	0x039472C4 LDR X27, [X27 + 0x980]
	0x039472C8 BL 0x1C16F10
	0x039472CC LDR X1, [X24]
	0x039472D0 MOV X24, X0
	0x039472D4 BL 0x30CB97C
	0x039472D8 LDR W8, [X28]
	0x039472DC CMP W8, 0x1
	0x039472E0 B.LT 0x39475F0
	0x039472E4 MOV W25, W31
	0x039472E8 MOVZ W20, 0x1
	0x039472EC MOVZ W21, 0xC
	0x039472F0 LDR X2, [X27]
	0x039472F4 MOV X0, X22
	0x039472F8 MOV W1, W25
	0x039472FC BL 0x30CBE84
	0x03947300 LDRB W8, [X29 + 0xA1F]
	0x03947304 MOV V8.16B, V0.16B
	0x03947308 MOV V9.16B, V1.16B
	0x0394730C MOV V10.16B, V2.16B
	0x03947310 CBNZ W8, 0x3947320
	0x03947314 MOV X0, X26
	0x03947318 BL 0x1C16CF4
	0x0394731C STRB W20, [X29 + 0xA1F]
	0x03947320 CBZ X24, 0x3947ED8
	0x03947324 LDR X8, [X26]
	0x03947328 LDR W10, [X24 + 0x1C]
	0x0394732C LDR X9, [X8 + 0xB8]
	0x03947330 LDR X8, [X24 + 0x10]
	0x03947334 ADD W10, W10, 0x1
	0x03947338 LDP S2, S1, [X9 + 0x48]
	0x0394733C LDR V0, [X9 + 0x50]
	0x03947340 ADRP X9, 0x7B0000
	0x03947344 LDR X9, [X9 + 0x3B8]
	0x03947348 LDR X9, [X9]
	0x0394734C STR W10, [X24 + 0x1C]
	0x03947350 CBZ X8, 0x3947ED8
	0x03947354 LDR V3, [X31 + 0x5]
	0x03947358 LDRSW X10, [X24 + 0x18]
	0x0394735C LDR W11, [X8 + 0x18]
	0x03947360 FMUL S2, S3, S2
	0x03947364 FMUL S1, S3, S1
	0x03947368 FMUL S3, S3, S0
	0x0394736C FSUB S0, S8, S2
	0x03947370 FSUB S1, S9, S1
	0x03947374 CMP W10, W11
	0x03947378 FSUB S2, S10, S3
	0x0394737C B.CS 0x3947398
	0x03947380 ADD W9, W10, 0x1
	0x03947384 MADD X8, X10, X21, X8
	0x03947388 STR W9, [X24 + 0x18]
	0x0394738C STP S0, S1, [X8 + 0x20]
	0x03947390 STR S2, [X8 + 0x28]
	0x03947394 B 0x39473AC
	0x03947398 LDR X8, [X9 + 0x20]
	0x0394739C MOV X0, X24
	0x039473A0 LDR X8, [X8 + 0xC0]
	0x039473A4 LDR X1, [X8 + 0x70]
	0x039473A8 BL 0x30CC1B4
	0x039473AC LDR X2, [X27]
	0x039473B0 ADD W25, W25, 0x2
	0x039473B4 MOV X0, X22
	0x039473B8 MOV W1, W25
	0x039473BC BL 0x30CBE84
	0x039473C0 LDRB W8, [X29 + 0xA1F]
	0x039473C4 MOV V8.16B, V0.16B
	0x039473C8 MOV V9.16B, V1.16B
	0x039473CC MOV V10.16B, V2.16B
	0x039473D0 CBNZ W8, 0x39473E0
	0x039473D4 MOV X0, X26
	0x039473D8 BL 0x1C16CF4
	0x039473DC STRB W20, [X29 + 0xA1F]
	0x039473E0 LDR X8, [X26]
	0x039473E4 LDR W10, [X24 + 0x1C]
	0x039473E8 LDR X9, [X8 + 0xB8]
	0x039473EC LDR X8, [X24 + 0x10]
	0x039473F0 ADD W10, W10, 0x1
	0x039473F4 LDP S2, S1, [X9 + 0x48]
	0x039473F8 LDR V0, [X9 + 0x50]
	0x039473FC ADRP X9, 0x7B0000
	0x03947400 LDR X9, [X9 + 0x3B8]
	0x03947404 LDR X9, [X9]
	0x03947408 STR W10, [X24 + 0x1C]
	0x0394740C CBZ X8, 0x3947ED8
	0x03947410 LDR V3, [X31 + 0x5]
	0x03947414 LDRSW X10, [X24 + 0x18]

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+304], D15
	003 Move [X31+312], D14
	004 Move [X31+320], D13
	005 Move [X31+328], D12
	006 Move [X31+336], D11
	007 Move [X31+344], D10
	008 Move [X31+352], D9
	009 Move [X31+360], D8
	010 Move [X31+368], X29
	011 Move [X31+376], X30
	012 Move [X31+384], X28
	013 Move [X31+392], X27
	014 Move [X31+400], X26
	015 Move [X31+408], X25
	016 Move [X31+416], X24
	017 Move [X31+424], X23
	018 Move [X31+432], X22
	019 Move [X31+440], X21
	020 Move [X31+448], X20
	021 Move [X31+456], X19
	022 Move X19, 0xA9C000
	023 Move W9, [X19+2417]
	024 Move V8, V6
	025 Move V9, V5
	026 Move V10, V4
	027 Move V11, V3
	028 Move V12, V2
	029 Move V15, V1
	030 Move V14, V0
	031 Move X21, X0
	032 Move [X31+40], X8
	033 Move [X31+48], X1
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {55}
	038 Move X0, 0x809000
	039 Move X0, [X0+1008]
	040 Call 0x1C17CF4
	041 Move X0, 0x809000
	042 Move X0, [X0+1376]
	043 Call 0x1C17CF4
	044 Move X0, 0x7AF000
	045 Move X0, [X0+3672]
	046 Call 0x1C17CF4
	047 Move X0, 0x808000
	048 Move X0, [X0+2696]
	049 Call 0x1C17CF4
	050 Move X0, 0x7B0000
	051 Move X0, [X0+2480]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X19+2417], W8
	055 Move X19, 0xA93000
	056 Move W8, [X19+1926]
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31+296], X31
	059 Move [X31+256], V0
	060 Move [X31+264], V0
	061 Move [X31+224], V0
	062 Move [X31+232], V0
	063 Move [X31+192], V0
	064 Move [X31+200], V0
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x7AE000
	068 Move X0, [X0+1440]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X19+1926], W8
	072 Move [X31+88], S14
	073 Move [X31+60], S12
	074 Move X19, 0x7AE000
	075 Move X19, [X19+1440]
	076 Move V0, V11
	077 Move V1, V10
	078 Move V2, V9
	079 Move X8, [X19]
	080 Move V3, V8
	081 Move X0, X31
	082 Move X8, [X8+184]
	083 Move S4, [X8+24]
	084 Move S5, [X8+28]
	085 Move V6, [X8+32]
	086 Call Quaternion.op_Multiply, X0, X1
	087 Move X20, 0xA93000
	088 Move W8, [X20+2928]
	089 Move [X31+84], S0
	090 Move [X31+72], S1
	091 Move [X31+64], S2
	092 Compare W8, 0
	093 JumpIfNotEqual {99}
	094 Move X0, 0x7AE000
	095 Move X0, [X0+1440]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X20+2928], W8
	099 Move X8, [X19]
	100 Move V0, V11
	101 Move V1, V10
	102 Move V2, V9
	103 Move X8, [X8+184]
	104 Move V3, V8
	105 Move X0, X31
	106 Move S4, [X8+60]
	107 Move S5, [X8+64]
	108 Move V6, [X8+68]
	109 Call Quaternion.op_Multiply, X0, X1
	110 Move X20, 0xA93000
	111 Move W8, [X20+2591]
	112 Move [X31+32], S1
	113 Move [X31+40], S0
	114 Move [X31+28], S2
	115 Compare W8, 0
	116 JumpIfNotEqual {122}
	117 Move X0, 0x7AE000
	118 Move X0, [X0+1440]
	119 Call 0x1C17CF4
	120 Move W8, 1
	121 Move [X20+2591], W8
	122 Move X8, [X19]
	123 Move V0, V11
	124 Move V1, V10
	125 Move V2, V9
	126 Move X8, [X8+184]
	127 Move V3, V8
	128 Move X0, X31
	129 Move S4, [X8+72]
	130 Move S5, [X8+76]
	131 Move V6, [X8+80]
	132 Call Quaternion.op_Multiply, X0, X1
	133 Move X19, 0xA93000
	134 Move W8, [X19+1924]
	135 Move V13, V0
	136 Move V12, V1
	137 Move V14, V2
	138 Compare W8, 0
	139 JumpIfNotEqual {145}
	140 Move X0, 0x7AE000
	141 Move X0, [X0+1448]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X19+1924], W8
	145 Move X20, 0x7AE000
	146 Move X20, [X20+1448]
	147 Move X0, [X20]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfEqual {252}
	151 Move W8, 1
	152 Compare W8, 0
	153 JumpIfNotEqual {159}
	154 Move X0, 0x7AE000
	155 Move X0, [X0+1448]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X19+1924], W8
	159 Move X0, [X20]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfEqual {256}
	163 Move W8, 1
	164 Compare W8, 0
	165 JumpIfNotEqual {171}
	166 Move X0, 0x7AE000
	167 Move X0, [X0+1448]
	168 Call 0x1C17CF4
	169 Move W8, 1
	170 Move [X19+1924], W8
	171 Move X0, [X20]
	172 Move X20, 0x808000
	173 Move W8, [X0+224]
	174 Move X20, [X20+2696]
	175 Compare W8, 0
	176 JumpIfNotEqual {178}
	177 Call 0x1C17DFC
	178 Move W1, [X21+16]
	179 Move W19, [X21+20]
	180 Move X0, [X20]
	181 Call 0x1C17D6C
	182 Move W24, [X21+16]
	183 Move X22, X0
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move V6, [X31+88]
	186 Move S1, [X31+32]
	187 Move S0, [X31+36]
	188 Move V3, [X31+60]
	189 Move V2, [X31+28]
	190 Multiply S4, S15, S12
	191 Multiply S0, S6, S0
	192 Multiply S1, S15, S1
	193 Multiply S2, S3, S2
	194 Move V5, V3
	195 Multiply S3, S6, S13
	196 Multiply S0, S0, S0
	197 Multiply S1, S1, S1
	198 Multiply S5, S5, S14
	199 Multiply S3, S3, S3
	200 Multiply S4, S4, S4
	201 Move X23, 0x7B6000
	202 Add S0, S0, S1
	203 Add S3, S3, S4
	204 Move X23, [X23+3848]
	205 Multiply S2, S2, S2
	206 Multiply S5, S5, S5
	207 Add S0, S2, S0
	208 Add S2, S5, S3
	209 Move S1, 0.5
	210 Move S4, 0.5
	211 NotImplemented "Instruction FSQRT not yet implemented."
	212 NotImplemented "Instruction FSQRT not yet implemented."
	213 Move X20, X31
	214 Move V14, V15
	215 Move V15, V6
	216 Add X25, X22, 36
	217 Move W26, 0x43B40000
	218 Move X27, 0xA94000
	219 Multiply S12, S0, S1
	220 Multiply S13, S2, S4
	221 Move W28, 1
	222 Move W8, [X27+1935]
	223 Compare W8, 0
	224 JumpIfNotEqual {228}
	225 Move X0, X23
	226 Call 0x1C17CF4
	227 Move [X27+1935], W28
	228 Move X8, [X23]
	229 NotImplemented "Instruction SCVTF not yet implemented."
	230 Move S1, W26
	231 Multiply S0, S0, S1
	232 Move X8, [X8+184]
	233 NotImplemented "Instruction SCVTF not yet implemented."
	234 NotImplemented "Instruction FDIV not yet implemented."
	235 Add X0, X31, 296
	236 Move S3, [X8]
	237 Move S4, [X8+4]
	238 Move V0, V12
	239 Move V1, V13
	240 Move X1, X31
	241 Call Math.PointInEllipseCircumference, V0, V1, V2, X0, X1
	242 Compare X22, 0
	243 JumpIfEqual {786}
	244 Move W8, [X22+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X25-4], S0
	247 Move [X25+4], S1
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X20, X20, 1
	250 Add X25, X25, 8
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Call 0x1C17DFC
	253 Move W8, [X19+1924]
	254 Compare W8, 0
	255 JumpIfNotEqual {159}
	256 Call 0x1C17DFC
	257 Move W8, [X19+1924]
	258 Compare W8, 0
	259 JumpIfNotEqual {171}
	260 Move V14, V15
	261 Move V15, [X31+88]
	262 Move X8, 0x7B0000
	263 Move V0, [X31+84]
	264 Move V1, [X31+72]
	265 Move S2, [X31+60]
	266 Move S3, [X31+64]
	267 Move X8, [X8+2480]
	268 Move X20, 0x809000
	269 Move X29, 0x7AF000
	270 Move X20, [X20+1008]
	271 Move X29, [X29+3672]
	272 Move W9, [X21+20]
	273 Multiply S0, S15, S0
	274 Multiply S1, S14, S1
	275 Move X0, [X8]
	276 Multiply S2, S2, S3
	277 Multiply S0, S0, S0
	278 Multiply S1, S1, S1
	279 Move W8, W9
	280 ShiftRight W8, 30
	281 And W8, W8, 0x1FFFFFFF
	282 Multiply S2, S2, S2
	283 Add S0, S0, S1
	284 Add W8, W8, 10
	285 Add S0, S2, S0
	286 Multiply W1, W8, W24
	287 NotImplemented "Instruction FSQRT not yet implemented."
	288 Call 0x1C17D6C
	289 Move W9, [X21+16]
	290 Move W8, [X21+20]
	291 Move X23, X0
	292 Move X0, [X20]
	293 Add W8, W8, 3
	294 Multiply W1, W8, W9
	295 Call 0x1C17D6C
	296 Move W10, [X21+20]
	297 Move X24, X0
	298 Add W11, W10, 1
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move W13, [X21+16]
	301 Add W8, W19, 1
	302 Move S1, 0.5
	303 NotImplemented "Instruction SCVTF not yet implemented."
	304 Move W12, W31
	305 Move W14, W31
	306 NotImplemented "Instruction FDIV not yet implemented."
	307 Multiply S1, S12, S1
	308 Move W8, 12
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Add W9, W14, 1
	311 Compare X22, 0
	312 JumpIfEqual {786}
	313 NotImplemented "Instruction SCVTF not yet implemented."
	314 NotImplemented "Instruction SCVTF not yet implemented."
	315 Multiply S2, S0, S2
	316 Multiply S3, S0, S3
	317 Move X10, X31
	318 Subtract S2, S2, S1
	319 Subtract S3, S3, S1
	320 Move W11, [X22+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Move W11, W12
	323 Add X12, X22, X10
	324 Add X12, X12, 32
	325 Move V4, [X12]
	326 Move X13, X12
	327 Add X13, X13, 4
	328 Move V5, [X13]
	329 Compare X23, 0
	330 JumpIfEqual {786}
	331 Move W14, [X23+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X14, W11
	334 NotImplemented "Instruction MADD not yet implemented."
	335 Move [X14+32], S4
	336 Move [X14+40], S2
	337 Move [X14+40], S5
	338 Move W14, [X22+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move W15, [X23+24]
	341 Add W14, W11, 1
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move V4, [X12]
	344 Move V5, [X13]
	345 Move X12, W14
	346 NotImplemented "Instruction MADD not yet implemented."
	347 Move [X13+32], S4
	348 Move [X13+40], S3
	349 Move [X13+40], S5
	350 Move W13, [X21+16]
	351 Subtract W13, W13, 1
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move W13, [X22+24]
	354 Compare W13, 0
	355 JumpIfEqual {785}
	356 Move W14, [X23+24]
	357 Add W13, W11, 2
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move S4, [X22+32]
	360 Move S5, [X22+36]
	361 Move X13, W13
	362 NotImplemented "Instruction MADD not yet implemented."
	363 Move [X13+32], S4
	364 Move [X13+40], S2
	365 Move [X13+40], S5
	366 Move W13, [X22+24]
	367 Compare W13, 0
	368 JumpIfEqual {785}
	369 Move W14, [X23+24]
	370 Add W13, W11, 3
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move S4, [X22+32]
	373 Move S5, [X22+36]
	374 Move X13, W13
	375 NotImplemented "Instruction MADD not yet implemented."
	376 Add X10, X10, 1
	377 Move W13, [X22+24]
	378 Add X10, X10, 1
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move W14, [X23+24]
	381 Add W13, W11, 2
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add X14, X22, X10
	384 Move X15, W13
	385 Add X13, X14, 32
	386 Move V4, [X13]
	387 Add X14, X14, 36
	388 Move V5, [X14]
	389 NotImplemented "Instruction NOP not yet implemented."
	390 NotImplemented "Instruction MADD not yet implemented."
	391 Move [X15+32], S4
	392 Move [X15+40], S2
	393 Move [X15+40], S5
	394 Move W15, [X22+24]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move W16, [X23+24]
	397 Add W15, W11, 3
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move V4, [X13]
	400 Move V5, [X14]
	401 Move X13, W15
	402 NotImplemented "Instruction MADD not yet implemented."
	403 Move [X13+32], S4
	404 Move [X13+40], S3
	405 Move [X13+40], S5
	406 NotImplemented "Instruction LDRSW not yet implemented."
	407 Add W12, W12, 3
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move W10, [X21+20]
	410 Add W12, W11, 4
	411 Add W11, W10, 1
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move W14, W9
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move W8, [X21+16]
	416 Move W19, W31
	417 Move W20, W31
	418 Move W26, W8
	419 ShiftRight W26, 30
	420 And W26, W26, 0x1FFFFFFF
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move W28, W31
	423 Move X0, [X29]
	424 Move W1, 6
	425 Call 0x1C17D6C
	426 Compare X0, 0
	427 JumpIfEqual {786}
	428 Move W8, [X0+24]
	429 Move X25, X0
	430 Compare W8, 0
	431 JumpIfEqual {785}
	432 NotImplemented "Instruction MADD not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move [X25+32], W9
	435 Add W11, W9, 1
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move [X25+36], W11
	438 Add W10, W9, 2
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move [X25+40], W10
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move [X25+44], W11
	443 Add W9, W9, 3
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move [X25+48], W9
	446 Add X8, X31, 128
	447 Move X0, X31
	448 Move [X25+52], W10
	449 Call AutoUnwrapSettings.get_tile
	450 Move V0, [X31+128]
	451 Move V1, [X31+144]
	452 Move [X31+160], V0
	453 Move [X31+168], V1
	454 Move W8, [X21+24]
	455 Compare W8, 0
	456 JumpIfEqual {463}
	457 Move V0, [X31+160]
	458 Move V1, [X31+176]
	459 Add X8, X31, 256
	460 Move W26, 1
	461 Move [X31+256], V0
	462 Move [X31+264], V1
	463 Move V0, [X31+160]
	464 Move V1, [X31+176]
	465 Add X8, X31, 224
	466 Move TEMP, 0
	467 Not TEMP
	468 Move W26, TEMP
	469 Move [X31+224], V0
	470 Move [X31+232], V1
	471 Move V1, [X8]
	472 Move V0, [X8+16]
	473 Move X8, 0x809000
	474 Move X8, [X8+1376]
	475 Move [X31+192], V1
	476 Move [X31+200], V0
	477 Move X0, [X8]
	478 Call 0x1C17F10
	479 Move V0, [X31+192]
	480 Move V1, [X31+208]
	481 Add X3, X31, 96
	482 Move TEMP, 0
	483 Not TEMP
	484 Move W5, TEMP
	485 Move TEMP, 0
	486 Not TEMP
	487 Move W6, TEMP
	488 Move X1, X25
	489 Move W2, W31
	490 Move W4, W26
	491 Move W7, W31
	492 Move X27, X0
	493 Move [X31+96], V0
	494 Move [X31+104], V1
	495 Move [X31], X31
	496 Call Face..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	497 Compare X24, 0
	498 JumpIfEqual {786}
	499 Move W8, [X24+24]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Add X8, X24, W19
	502 Move [X8+32], X27
	503 Move W8, [X21+16]
	504 Add W9, W19, 1
	505 Add W28, W28, 4
	506 Move W19, W9
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Move W26, W8
	509 ShiftRight W26, 30
	510 And W26, W26, 0x1FFFFFFF
	511 Move W10, [X21+20]
	512 Move W19, W9
	513 Add W20, W20, 1
	514 Add W11, W10, 1
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move W8, [X21+16]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Compare X22, 0
	519 JumpIfEqual {786}
	520 Multiply W8, W8, W11
	521 Move S0, -0.5
	522 Move S1, 0.5
	523 Move W20, W8
	524 ShiftRight W20, 30
	525 And W20, W20, 0x1FFFFFFF
	526 Move X27, X31
	527 Add X10, X22, 32
	528 Add X9, X22, 36
	529 Add X19, X22, 44
	530 Multiply S13, S12, S0
	531 Multiply S12, S12, S1
	532 Move W8, W8
	533 Add W28, W20, 5
	534 Move W11, 12
	535 Move [X31+64], X9
	536 Move [X31+72], X10
	537 Move [X31+88], X8
	538 Move W8, [X22+24]
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Compare X23, 0
	541 JumpIfEqual {786}
	542 Move W8, [X23+24]
	543 Subtract W26, W28, 5
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move S0, [X19-12]
	546 Move S1, [X19-8]
	547 Move X8, W26
	548 NotImplemented "Instruction MADD not yet implemented."
	549 Subtract W29, W28, 4
	550 Move [X8+32], S0
	551 Move [X8+40], S13
	552 Move [X8+40], S1
	553 Move W8, [X23+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X8, W29
	556 NotImplemented "Instruction MADD not yet implemented."
	557 Move [X8+32], W31
	558 Move [X8+36], S13
	559 Move [X8+40], W31
	560 Move W8, [X21+16]
	561 Subtract W8, W8, 1
	562 NotImplemented "Instruction CMP not yet implemented."
	563 Move W8, [X22+24]
	564 Compare W8, 0
	565 JumpIfEqual {785}
	566 Move W9, [X23+24]
	567 Subtract W8, W28, 3
	568 NotImplemented "Instruction CMP not yet implemented."
	569 Move X10, [X31+64]
	570 Move X9, [X31+72]
	571 Move W8, [X22+24]
	572 Add X9, X27, 1
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move W8, [X23+24]
	575 Subtract W9, W28, 3
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Add W8, W20, 2
	578 Subtract X9, X19, 4
	579 Move X10, X19
	580 Move V0, [X9]
	581 Move V1, [X10]
	582 NotImplemented "Instruction NOP not yet implemented."
	583 NotImplemented "Instruction SMADDL not yet implemented."
	584 Move W1, 3
	585 Move [X8+32], S0
	586 Move [X8+40], S13
	587 Move [X8+40], S1
	588 Move X8, 0x7AE000
	589 Move X8, [X8+3672]
	590 Move X0, [X8]
	591 Call 0x1C17D6C
	592 Compare X0, 0
	593 JumpIfEqual {786}
	594 Move W8, [X0+24]
	595 Move X25, X0
	596 Compare W8, 0
	597 JumpIfEqual {785}
	598 Subtract W9, W28, 3
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Move [X25+32], W9
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move [X25+36], W29
	603 Move [X25+40], W26
	604 Move X8, 0x808000
	605 Move X8, [X8+1376]
	606 Move X0, [X8]
	607 Call 0x1C17F10
	608 Move X1, X25
	609 Move X2, X31
	610 Move X26, X0
	611 Call Face..ctor, X0, X1
	612 Compare X24, 0
	613 JumpIfEqual {786}
	614 Move X8, [X31+88]
	615 Move W9, [X24+24]
	616 Move W11, 12
	617 Add X8, X8, X27
	618 NotImplemented "Instruction CMP not yet implemented."
	619 Add X8, X24, W8
	620 Move [X8+32], X26
	621 Move W8, [X22+24]
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Move W8, [X23+24]
	624 Subtract W26, W28, 2
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move S0, [X19-12]
	627 Move S1, [X19-8]
	628 Move X8, W26
	629 NotImplemented "Instruction MADD not yet implemented."
	630 Subtract W29, W28, 1
	631 Move [X8+32], S0
	632 Move [X8+40], S12
	633 Move [X8+40], S1
	634 Move W8, [X23+24]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Move X8, W29
	637 NotImplemented "Instruction MADD not yet implemented."
	638 Move [X8+32], W31
	639 Move [X8+36], S12
	640 Move [X8+40], W31
	641 Move W8, [X21+16]
	642 Move [X31+84], W20
	643 Subtract W8, W8, 1
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Move W8, [X22+24]
	646 Compare W8, 0
	647 JumpIfEqual {785}
	648 Move W8, [X23+24]
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move X10, [X31+64]
	651 Move X8, [X31+72]
	652 Add W9, W20, 5
	653 Move W8, [X22+24]
	654 Add X9, X27, 1
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Move W8, [X23+24]
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Subtract X8, X19, 4
	659 Move W9, W28
	660 Move X10, X19
	661 Move V0, [X8]
	662 Move V1, [X10]
	663 NotImplemented "Instruction NOP not yet implemented."
	664 NotImplemented "Instruction SMADDL not yet implemented."
	665 Move W1, 3
	666 Move [X8+32], S0
	667 Move [X8+40], S12
	668 Move [X8+40], S1
	669 Move X8, 0x7AE000
	670 Move W20, [X21+16]
	671 Move X8, [X8+3672]
	672 Move X0, [X8]
	673 Call 0x1C17D6C
	674 Compare X0, 0
	675 JumpIfEqual {786}
	676 Move W8, [X0+24]
	677 Move X25, X0
	678 Compare W8, 0
	679 JumpIfEqual {785}
	680 NotImplemented "Instruction CMP not yet implemented."
	681 Move [X25+32], W26
	682 NotImplemented "Instruction CMP not yet implemented."
	683 Move [X25+36], W29
	684 Move [X25+40], W28
	685 Move X8, 0x808000
	686 Move X8, [X8+1376]
	687 Move X0, [X8]
	688 Call 0x1C17F10
	689 Move X1, X25
	690 Move X2, X31
	691 Move X26, X0
	692 Call Face..ctor, X0, X1
	693 Move X8, [X31+88]
	694 Move W9, [X24+24]
	695 Add X8, X8, X27
	696 Add X8, X8, X20
	697 NotImplemented "Instruction CMP not yet implemented."
	698 Add X8, X24, W8
	699 Move [X8+32], X26
	700 NotImplemented "Instruction LDRSW not yet implemented."
	701 Move W20, [X31+84]
	702 Add X27, X27, 1
	703 Add X19, X19, 8
	704 NotImplemented "Instruction CMP not yet implemented."
	705 Add W20, W20, 6
	706 Add W28, W28, 6
	707 Move W11, 12
	708 Compare X23, 0
	709 JumpIfEqual {786}
	710 Move X8, [X23+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move X19, X31
	713 And X8, X8, 0
	714 Add X20, X23, 40
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Move S4, [X20-8]
	717 Move S5, [X20-4]
	718 Move V6, [X20]
	719 Move V0, V11
	720 Move V1, V10
	721 Move V2, V9
	722 Move V3, V8
	723 Move X0, X31
	724 Call Quaternion.op_Multiply, X0, X1
	725 Move W8, [X23+24]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Add X19, X19, 1
	728 Move [X20-8], S0
	729 Move [X20], S1
	730 Move [X20+12], S2
	731 NotImplemented "Instruction CMP not yet implemented."
	732 Move X19, [X31+48]
	733 Compare X19, 0
	734 JumpIfEqual {786}
	735 Move X0, X19
	736 Move X1, X23
	737 Move X2, X24
	738 Move X3, X31
	739 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	740 Move X8, [X21]
	741 Move V2, [X31+60]
	742 Add X2, X31, 160
	743 Move X0, X21
	744 Move X9, [X8+376]
	745 Move [X31+160], X31
	746 Move [X31+168], X31
	747 Move [X31+176], X31
	748 Move X3, [X8+384]
	749 Add X8, X31, 128
	750 Move X1, X19
	751 Move V0, V15
	752 Move V1, V14
	753 Move V3, V11
	754 Move V4, V10
	755 Move V5, V9
	756 Move V6, V8
	757 NotImplemented "Instruction BLR not yet implemented."
	758 Move X8, [X31+144]
	759 Move V0, [X31+8]
	760 Move X9, [X31+40]
	761 Move X20, [X31+448]
	762 Move X19, [X31+456]
	763 Move X22, [X31+432]
	764 Move X21, [X31+440]
	765 Move X24, [X31+416]
	766 Move X23, [X31+424]
	767 Move X26, [X31+400]
	768 Move X25, [X31+408]
	769 Move X28, [X31+384]
	770 Move X27, [X31+392]
	771 Move X29, [X31+368]
	772 Move X30, [X31+376]
	773 Move D9, [X31+352]
	774 Move D8, [X31+360]
	775 Move D11, [X31+336]
	776 Move D10, [X31+344]
	777 Move D13, [X31+320]
	778 Move D12, [X31+328]
	779 Move D15, [X31+304]
	780 Move D14, [X31+312]
	781 Move [X9+16], X8
	782 Move [X9], V0
	783 Add X31, X31, 464
	784 Return X0
	785 Call 0x1C17F28
	786 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03947418 LDR W11, [X8 + 0x18]
	0x0394741C FMUL S2, S3, S2
	0x03947420 FMUL S1, S3, S1
	0x03947424 FMUL S3, S3, S0
	0x03947428 FSUB S0, S8, S2
	0x0394742C FSUB S1, S9, S1

ISIL:
	001 Move W8, 6
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+16], W8
	005 Move [X0+24], W9
	006 Call Object..ctor, X0
	007 Return 

