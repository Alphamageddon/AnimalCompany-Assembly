Type: UnityEngine.ProBuilder.Shapes.Cone

Method: System.Void CopyShape(UnityEngine.ProBuilder.Shapes.Shape shape)

Disassembly:
	0x039455C4 MOV X2, X31
	0x039455C8 BL 0x39191DC
	0x039455CC MOV X0, X20
	0x039455D0 MOV X1, X31
	0x039455D4 BL 0x3912CAC
	0x039455D8 CBZ X0, 0x3945620
	0x039455DC ADD X8, X31, 0x8
	0x039455E0 MOV X1, X31
	0x039455E4 BL 0x3C17768
	0x039455E8 LDR X8, [X31 + 0x18]
	0x039455EC LDUR V0, [X31 + 0x8]
	0x039455F0 LDP X22, X21, [X31 + 0x80]
	0x039455F4 LDP X24, X23, [X31 + 0x70]
	0x039455F8 STR X8, [X19 + 0x10]
	0x039455FC STR V0, [X19]
	0x03945600 LDP X20, X19, [X31 + 0x90]
	0x03945604 LDP X30, X25, [X31 + 0x60]
	0x03945608 LDP D9, D8, [X31 + 0x50]
	0x0394560C LDP D11, D10, [X31 + 0x40]
	0x03945610 LDP D13, D12, [X31 + 0x30]
	0x03945614 LDP D15, D14, [X31 + 0x20]
	0x03945618 ADD X31, X31, 0xA0
	0x0394561C RET
	0x03945620 BL 0x1C16F20
	0x03945624 BL 0x1C16F28
	0x03945628 MOV X1, X31
	0x0394562C B 0x33BDD8C
	0x03945630 STR X30, [X31 - 0x20]!
	0x03945634 STP X20, X19, [X31 + 0x10]
	0x03945638 ADRP X19, 0xA9C000
	0x0394563C ADRP X20, 0x7B0000
	0x03945640 LDRB W8, [X19 + 0x96F]
	0x03945644 LDR X20, [X20 + 0x9B0]
	0x03945648 TBNZ X8, 0x0, 0x3945684
	0x0394564C ADRP X0, 0x80A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA9D000
	006 Move W8, [X21+2412]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x80B000
	014 Move X0, [X0+240]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2412], W8
	018 Compare X19, 0
	019 JumpIfEqual {37}
	020 Move X8, 0x80B000
	021 Move X8, [X8+240]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+16]
	032 Move [X20+16], W8
	033 Move V0, [X19+20]
	034 Move [X20+20], S0
	035 Move W8, [X19+24]
	036 Move [X20+24], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: UnityEngine.Bounds UpdateBounds(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation, UnityEngine.Bounds bounds)

Disassembly:
	0x03945650 LDR X0, [X0 + 0x118]
	0x03945654 BL 0x1C16CF4
	0x03945658 ADRP X0, 0x7AF000
	0x0394565C LDR X0, [X0 + 0xE58]
	0x03945660 BL 0x1C16CF4
	0x03945664 ADRP X0, 0x809000
	0x03945668 LDR X0, [X0 + 0xCE0]
	0x0394566C BL 0x1C16CF4
	0x03945670 ADRP X0, 0x7B0000
	0x03945674 LDR X0, [X0 + 0x9B0]
	0x03945678 BL 0x1C16CF4
	0x0394567C MOVZ W8, 0x1
	0x03945680 STRB W8, [X19 + 0x96F]
	0x03945684 LDR X0, [X20]
	0x03945688 MOVZ W1, 0x8
	0x0394568C BL 0x1C16D6C
	0x03945690 CBZ X0, 0x394579C
	0x03945694 LDR W8, [X0 + 0x18]
	0x03945698 CBZ W8, 0x3945798
	0x0394569C MOVI V0.2S, 0xBF, 0x18
	0x039456A0 MOVZ W9, 0x3F000000
	0x039456A4 CMP W8, 0x1
	0x039456A8 STR D0, [X0 + 0x20]
	0x039456AC STR W9, [X0 + 0x28]
	0x039456B0 B.EQ 0x3945798
	0x039456B4 ADRP X10, 0xFFFFFFFFFD1A8000
	0x039456B8 LDR V0, [X10 + 0x9C0]
	0x039456BC CMP W8, 0x2
	0x039456C0 STR W9, [X0 + 0x34]
	0x039456C4 STUR D0, [X0 + 0x2C]
	0x039456C8 B.LS 0x3945798
	0x039456CC MOVZ W9, 0xBF000000
	0x039456D0 CMP W8, 0x3
	0x039456D4 STR D0, [X0 + 0x38]
	0x039456D8 STR W9, [X0 + 0x40]
	0x039456DC B.EQ 0x3945798
	0x039456E0 MOVI V0.2S, 0xBF, 0x18
	0x039456E4 CMP W8, 0x4
	0x039456E8 STUR D0, [X0 + 0x44]
	0x039456EC STR W9, [X0 + 0x4C]
	0x039456F0 B.LS 0x3945798
	0x039456F4 ADRP X9, 0xFFFFFFFFFD1A9000
	0x039456F8 LDR V0, [X9 + 0x420]
	0x039456FC MOVZ W9, 0x3F000000
	0x03945700 CMP W8, 0x5
	0x03945704 STR W9, [X0 + 0x58]
	0x03945708 STR D0, [X0 + 0x50]
	0x0394570C B.EQ 0x3945798
	0x03945710 MOVI V1.2S, 0x3F, 0x18
	0x03945714 CMP W8, 0x6
	0x03945718 STUR D1, [X0 + 0x5C]
	0x0394571C STR W9, [X0 + 0x64]
	0x03945720 B.LS 0x3945798
	0x03945724 MOVZ W9, 0xBF000000
	0x03945728 CMP W8, 0x7
	0x0394572C STR D1, [X0 + 0x68]
	0x03945730 STR W9, [X0 + 0x70]
	0x03945734 B.EQ 0x3945798
	0x03945738 ADRP X20, 0x80A000
	0x0394573C LDR X20, [X20 + 0x118]
	0x03945740 STUR D0, [X0 + 0x74]
	0x03945744 STR W9, [X0 + 0x7C]
	0x03945748 ADRP X9, 0x7AF000
	0x0394574C LDR X8, [X20]
	0x03945750 ADRP X19, 0x809000
	0x03945754 MOVZ W1, 0x18
	0x03945758 LDR X8, [X8 + 0xB8]
	0x0394575C LDR X9, [X9 + 0xE58]
	0x03945760 STR X0, [X8]
	0x03945764 LDR X0, [X9]
	0x03945768 LDR X19, [X19 + 0xCE0]
	0x0394576C BL 0x1C16D6C
	0x03945770 LDR X1, [X19]
	0x03945774 MOV X2, X31
	0x03945778 MOV X19, X0
	0x0394577C BL 0x32C5BD8
	0x03945780 LDR X8, [X20]
	0x03945784 LDR X8, [X8 + 0xB8]
	0x03945788 STR X19, [X8 + 0x8]
	0x0394578C LDP X20, X19, [X31 + 0x10]
	0x03945790 LDR X30, [X31], #0x20
	0x03945794 RET
	0x03945798 BL 0x1C16F28
	0x0394579C BL 0x1C16F20
	0x039457A0 STP X30, X21, [X31 - 0x20]!
	0x039457A4 STP X20, X19, [X31 + 0x10]
	0x039457A8 ADRP X21, 0xA9C000
	0x039457AC LDRB W8, [X21 + 0x970]
	0x039457B0 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X23, 0xA94000
	013 Move W9, [X23+1926]
	014 Move X19, X2
	015 Move V8, V6
	016 Move V9, V5
	017 Move V10, V4
	018 Move V11, V3
	019 Move X22, X1
	020 Move X21, X0
	021 Move X20, X8
	022 Compare W9, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x7AF000
	025 Move X0, [X0+1440]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1926], W8
	029 Move X8, 0x7AF000
	030 Move X8, [X8+1440]
	031 Move V0, V11
	032 Move V1, V10
	033 Move V2, V9
	034 Move X8, [X8]
	035 Move V3, V8
	036 Move X0, X31
	037 Move X8, [X8+184]
	038 Move S4, [X8+24]
	039 Move S5, [X8+28]
	040 Move V6, [X8+32]
	041 Call Quaternion.op_Multiply, X0, X1
	042 Move X0, X31
	043 Call Math.Abs, X0
	044 Move [X31+16], D0
	045 Move [X31], D1
	046 Compare X22, 0
	047 JumpIfEqual {104}
	048 Move X0, X22
	049 Move X1, X31
	050 Move V8, V2
	051 Call ProBuilderMesh.get_mesh, X0
	052 Compare X0, 0
	053 JumpIfEqual {104}
	054 Add X8, X31, 40
	055 Move X1, X31
	056 Call Mesh.get_bounds, X0
	057 Move V1, [X31+60]
	058 Move V2, [X21+20]
	059 Move V3, [X31]
	060 Move V6, [X31+16]
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move S4, 1
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction FMIN not yet implemented."
	065 Move S5, W31
	066 Add S1, S1, S1
	067 Add S2, S2, S2
	068 Move V6.S[1], V3.S[0]
	069 Move V3, 0
	070 NotImplemented "Instruction FCSEL not yet implemented."
	071 Subtract S1, S1, S2
	072 NotImplemented "Instruction FMIN not yet implemented."
	073 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	074 Add V0, V0, V0
	075 Multiply S1, S4, S1
	076 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	077 NotImplemented "Instruction BIC not yet implemented."
	078 Subtract V0, V0, V4
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move S5, 0.5
	082 Add S1, S2, S1
	083 Add V0, V4, V0
	084 Multiply S1, S1, S5
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 Move [X19+20], S1
	087 Move [X19+12], D0
	088 Move X8, [X19+16]
	089 Move V0, [X19]
	090 Move X22, [X31+112]
	091 Move X21, [X31+120]
	092 Move X30, [X31+96]
	093 Move X23, [X31+104]
	094 Move [X20+16], X8
	095 Move [X20], V0
	096 Move X20, [X31+128]
	097 Move X19, [X31+136]
	098 Move D9, [X31+80]
	099 Move D8, [X31+88]
	100 Move D11, [X31+64]
	101 Move D10, [X31+72]
	102 Add X31, X31, 144
	103 Return X0
	104 Call 0x1C17F20

Method: UnityEngine.Bounds RebuildMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Vector3 size, UnityEngine.Quaternion rotation)

Disassembly:
	0x039457B4 MOV X20, X0
	0x039457B8 TBNZ X8, 0x0, 0x39457D0
	0x039457BC ADRP X0, 0x80A000
	0x039457C0 LDR X0, [X0 + 0x120]
	0x039457C4 BL 0x1C16CF4
	0x039457C8 MOVZ W8, 0x1
	0x039457CC STRB W8, [X21 + 0x970]
	0x039457D0 CBZ X19, 0x3945860
	0x039457D4 ADRP X8, 0x80A000
	0x039457D8 LDR X8, [X8 + 0x120]
	0x039457DC LDR X9, [X19]
	0x039457E0 LDR X1, [X8]
	0x039457E4 LDRB W10, [X9 + 0x130]
	0x039457E8 LDRB W8, [X1 + 0x130]
	0x039457EC CMP W10, W8
	0x039457F0 B.CC 0x3945860
	0x039457F4 LDR X10, [X9 + 0xC8]
	0x039457F8 SUB X9, X8, 0x1
	0x039457FC LDR X10, [X10, X9, LSL #3]
	0x03945800 CMP X10, X1
	0x03945804 B.NE 0x3945860
	0x03945808 LDR W10, [X19 + 0x10]
	0x0394580C STR W10, [X20 + 0x10]
	0x03945810 LDR X10, [X19]
	0x03945814 LDRB W11, [X10 + 0x130]
	0x03945818 CMP W11, W8
	0x0394581C B.CC 0x394586C
	0x03945820 LDR X10, [X10 + 0xC8]
	0x03945824 LDR X10, [X10, X9, LSL #3]
	0x03945828 CMP X10, X1
	0x0394582C B.NE 0x394586C
	0x03945830 LDR W10, [X19 + 0x14]
	0x03945834 STR W10, [X20 + 0x14]
	0x03945838 LDR X10, [X19]
	0x0394583C LDRB W11, [X10 + 0x130]
	0x03945840 CMP W11, W8
	0x03945844 B.CC 0x394586C
	0x03945848 LDR X8, [X10 + 0xC8]
	0x0394584C LDR X8, [X8, X9, LSL #3]
	0x03945850 CMP X8, X1
	0x03945854 B.NE 0x394586C
	0x03945858 LDRB W8, [X19 + 0x18]
	0x0394585C STRB W8, [X20 + 0x18]
	0x03945860 LDP X20, X19, [X31 + 0x10]
	0x03945864 LDP X30, X21, [X31], #0x20
	0x03945868 RET
	0x0394586C MOV X0, X19
	0x03945870 BL 0x1C171E0
	0x03945874 FMOV S3, 0.5
	0x03945878 FMUL S0, S0, S3
	0x0394587C FMUL S1, S1, S3
	0x03945880 FMUL S2, S2, S3
	0x03945884 STP S0, S1, [X2 + 0xC]
	0x03945888 STR S2, [X2 + 0x14]
	0x0394588C LDR X9, [X2 + 0x10]
	0x03945890 LDR V0, [X2]
	0x03945894 STR X9, [X8 + 0x10]
	0x03945898 STR V0, [X8]
	0x0394589C RET
	0x039458A0 SUB X31, X31, 0x1D0
	0x039458A4 STP D15, D14, [X31 + 0x130]
	0x039458A8 STP D13, D12, [X31 + 0x140]
	0x039458AC STP D11, D10, [X31 + 0x150]
	0x039458B0 STP D9, D8, [X31 + 0x160]
	0x039458B4 STP X29, X30, [X31 + 0x170]
	0x039458B8 STP X28, X27, [X31 + 0x180]
	0x039458BC STP X26, X25, [X31 + 0x190]
	0x039458C0 STP X24, X23, [X31 + 0x1A0]
	0x039458C4 STP X22, X21, [X31 + 0x1B0]
	0x039458C8 STP X20, X19, [X31 + 0x1C0]
	0x039458CC ADRP X19, 0xA9C000
	0x039458D0 LDRB W9, [X19 + 0x971]
	0x039458D4 MOV V8.16B, V6.16B
	0x039458D8 MOV V9.16B, V5.16B
	0x039458DC MOV V10.16B, V4.16B
	0x039458E0 MOV V11.16B, V3.16B
	0x039458E4 MOV V12.16B, V2.16B
	0x039458E8 MOV V15.16B, V1.16B
	0x039458EC MOV V14.16B, V0.16B
	0x039458F0 MOV X21, X0
	0x039458F4 STP X8, X1, [X31 + 0x28]
	0x039458F8 TBNZ X9, 0x0, 0x3945940
	0x039458FC ADRP X0, 0x809000
	0x03945900 LDR X0, [X0 + 0x3F0]
	0x03945904 BL 0x1C16CF4
	0x03945908 ADRP X0, 0x809000
	0x0394590C LDR X0, [X0 + 0x560]
	0x03945910 BL 0x1C16CF4
	0x03945914 ADRP X0, 0x7AF000
	0x03945918 LDR X0, [X0 + 0xE58]
	0x0394591C BL 0x1C16CF4
	0x03945920 ADRP X0, 0x808000
	0x03945924 LDR X0, [X0 + 0xA88]
	0x03945928 BL 0x1C16CF4
	0x0394592C ADRP X0, 0x7B0000
	0x03945930 LDR X0, [X0 + 0x9B0]
	0x03945934 BL 0x1C16CF4
	0x03945938 MOVZ W8, 0x1
	0x0394593C STRB W8, [X19 + 0x971]
	0x03945940 ADRP X19, 0xA93000
	0x03945944 LDRB W8, [X19 + 0x786]
	0x03945948 MOVI V0.2D, 0x0
	0x0394594C STR X31, [X31 + 0x128]
	0x03945950 STP V0, V0, [X31 + 0x100]
	0x03945954 STP V0, V0, [X31 + 0xE0]
	0x03945958 STP V0, V0, [X31 + 0xC0]
	0x0394595C CBNZ W8, 0x3945974
	0x03945960 ADRP X0, 0x7AE000
	0x03945964 LDR X0, [X0 + 0x5A0]
	0x03945968 BL 0x1C16CF4
	0x0394596C MOVZ W8, 0x1
	0x03945970 STRB W8, [X19 + 0x786]
	0x03945974 STR S14, [X31 + 0x58]
	0x03945978 STR S12, [X31 + 0x3C]
	0x0394597C ADRP X19, 0x7AE000
	0x03945980 LDR X19, [X19 + 0x5A0]
	0x03945984 MOV V0.16B, V11.16B
	0x03945988 MOV V1.16B, V10.16B
	0x0394598C MOV V2.16B, V9.16B
	0x03945990 LDR X8, [X19]
	0x03945994 MOV V3.16B, V8.16B
	0x03945998 MOV X0, X31
	0x0394599C LDR X8, [X8 + 0xB8]
	0x039459A0 LDP S4, S5, [X8 + 0x18]
	0x039459A4 LDR V6, [X8 + 0x20]
	0x039459A8 BL 0x3C2A9FC
	0x039459AC ADRP X20, 0xA93000
	0x039459B0 LDRB W8, [X20 + 0xB70]
	0x039459B4 STR S0, [X31 + 0x54]
	0x039459B8 STR S1, [X31 + 0x48]
	0x039459BC STR S2, [X31 + 0x40]
	0x039459C0 CBNZ W8, 0x39459D8
	0x039459C4 ADRP X0, 0x7AE000
	0x039459C8 LDR X0, [X0 + 0x5A0]
	0x039459CC BL 0x1C16CF4
	0x039459D0 MOVZ W8, 0x1
	0x039459D4 STRB W8, [X20 + 0xB70]
	0x039459D8 LDR X8, [X19]
	0x039459DC MOV V0.16B, V11.16B
	0x039459E0 MOV V1.16B, V10.16B
	0x039459E4 MOV V2.16B, V9.16B
	0x039459E8 LDR X8, [X8 + 0xB8]
	0x039459EC MOV V3.16B, V8.16B
	0x039459F0 MOV X0, X31
	0x039459F4 LDP S4, S5, [X8 + 0x3C]
	0x039459F8 LDR V6, [X8 + 0x44]
	0x039459FC BL 0x3C2A9FC
	0x03945A00 ADRP X20, 0xA93000
	0x03945A04 LDRB W8, [X20 + 0xA1F]
	0x03945A08 STP S1, S0, [X31 + 0x20]
	0x03945A0C STR S2, [X31 + 0x1C]
	0x03945A10 CBNZ W8, 0x3945A28
	0x03945A14 ADRP X0, 0x7AE000
	0x03945A18 LDR X0, [X0 + 0x5A0]
	0x03945A1C BL 0x1C16CF4
	0x03945A20 MOVZ W8, 0x1
	0x03945A24 STRB W8, [X20 + 0xA1F]
	0x03945A28 LDR X8, [X19]
	0x03945A2C MOV V0.16B, V11.16B
	0x03945A30 MOV V1.16B, V10.16B
	0x03945A34 MOV V2.16B, V9.16B
	0x03945A38 LDR X8, [X8 + 0xB8]
	0x03945A3C MOV V3.16B, V8.16B
	0x03945A40 MOV X0, X31
	0x03945A44 LDP S4, S5, [X8 + 0x48]
	0x03945A48 LDR V6, [X8 + 0x50]
	0x03945A4C BL 0x3C2A9FC
	0x03945A50 ADRP X19, 0xA93000
	0x03945A54 LDRB W8, [X19 + 0x784]
	0x03945A58 MOV V13.16B, V0.16B
	0x03945A5C MOV V12.16B, V1.16B
	0x03945A60 MOV V14.16B, V2.16B
	0x03945A64 CBNZ W8, 0x3945A7C
	0x03945A68 ADRP X0, 0x7AE000
	0x03945A6C LDR X0, [X0 + 0x5A8]
	0x03945A70 BL 0x1C16CF4
	0x03945A74 MOVZ W8, 0x1
	0x03945A78 STRB W8, [X19 + 0x784]
	0x03945A7C ADRP X20, 0x7AE000
	0x03945A80 LDR X20, [X20 + 0x5A8]
	0x03945A84 LDR X0, [X20]
	0x03945A88 LDR W8, [X0 + 0xE0]
	0x03945A8C CBZ W8, 0x3945C0C
	0x03945A90 MOVZ W8, 0x1
	0x03945A94 CBNZ W8, 0x3945AAC
	0x03945A98 ADRP X0, 0x7AE000
	0x03945A9C LDR X0, [X0 + 0x5A8]
	0x03945AA0 BL 0x1C16CF4
	0x03945AA4 MOVZ W8, 0x1
	0x03945AA8 STRB W8, [X19 + 0x784]
	0x03945AAC LDR X0, [X20]
	0x03945AB0 LDR W8, [X0 + 0xE0]
	0x03945AB4 CBZ W8, 0x3945C1C
	0x03945AB8 MOVZ W8, 0x1
	0x03945ABC CBNZ W8, 0x3945AD4
	0x03945AC0 ADRP X0, 0x7AE000
	0x03945AC4 LDR X0, [X0 + 0x5A8]
	0x03945AC8 BL 0x1C16CF4
	0x03945ACC MOVZ W8, 0x1
	0x03945AD0 STRB W8, [X19 + 0x784]
	0x03945AD4 LDR X0, [X20]
	0x03945AD8 ADRP X20, 0x808000
	0x03945ADC LDR W8, [X0 + 0xE0]
	0x03945AE0 LDR X20, [X20 + 0xA88]
	0x03945AE4 CBNZ W8, 0x3945AEC
	0x03945AE8 BL 0x1C16DFC
	0x03945AEC LDP W1, W19, [X21 + 0x10]
	0x03945AF0 LDR X0, [X20]
	0x03945AF4 BL 0x1C16D6C
	0x03945AF8 LDR W24, [X21 + 0x10]
	0x03945AFC MOV X22, X0
	0x03945B00 CMP W24, 0x1
	0x03945B04 B.LT 0x3945C2C
	0x03945B08 LDR V6, [X31 + 0x58]
	0x03945B0C LDP S1, S0, [X31 + 0x20]
	0x03945B10 LDR V3, [X31 + 0x3C]
	0x03945B14 LDR V2, [X31 + 0x1C]
	0x03945B18 FMUL S4, S15, S12
	0x03945B1C FMUL S0, S6, S0
	0x03945B20 FMUL S1, S15, S1
	0x03945B24 FMUL S2, S3, S2
	0x03945B28 MOV V5.16B, V3.16B
	0x03945B2C FMUL S3, S6, S13
	0x03945B30 FMUL S0, S0, S0
	0x03945B34 FMUL S1, S1, S1
	0x03945B38 FMUL S5, S5, S14
	0x03945B3C FMUL S3, S3, S3
	0x03945B40 FMUL S4, S4, S4
	0x03945B44 ADRP X23, 0x7B6000
	0x03945B48 FADD S0, S0, S1
	0x03945B4C FADD S3, S3, S4
	0x03945B50 LDR X23, [X23 + 0xF08]
	0x03945B54 FMUL S2, S2, S2
	0x03945B58 FMUL S5, S5, S5
	0x03945B5C FADD S0, S2, S0
	0x03945B60 FADD S2, S5, S3
	0x03945B64 FMOV S1, 0.5
	0x03945B68 FMOV S4, 0.5
	0x03945B6C FSQRT S0, S0
	0x03945B70 FSQRT S2, S2
	0x03945B74 MOV X20, X31
	0x03945B78 MOV V14.16B, V15.16B
	0x03945B7C MOV V15.16B, V6.16B
	0x03945B80 ADD X25, X22, 0x24
	0x03945B84 MOVZ W26, 0x43B40000
	0x03945B88 ADRP X27, 0xA94000
	0x03945B8C FMUL S12, S0, S1
	0x03945B90 FMUL S13, S2, S4
	0x03945B94 MOVZ W28, 0x1
	0x03945B98 LDRB W8, [X27 + 0x78F]
	0x03945B9C CBNZ W8, 0x3945BAC
	0x03945BA0 MOV X0, X23
	0x03945BA4 BL 0x1C16CF4
	0x03945BA8 STRB W28, [X27 + 0x78F]
	0x03945BAC LDR X8, [X23]
	0x03945BB0 SCVTF S0, W20
	0x03945BB4 FMOV S1, W26
	0x03945BB8 FMUL S0, S0, S1
	0x03945BBC LDR X8, [X8 + 0xB8]
	0x03945BC0 SCVTF S1, W24
	0x03945BC4 FDIV S2, S0, S1
	0x03945BC8 ADD X0, X31, 0x128
	0x03945BCC LDP S3, S4, [X8]
	0x03945BD0 MOV V0.16B, V12.16B
	0x03945BD4 MOV V1.16B, V13.16B
	0x03945BD8 MOV X1, X31
	0x03945BDC BL 0x3907B28
	0x03945BE0 CBZ X22, 0x3946414
	0x03945BE4 LDR W8, [X22 + 0x18]
	0x03945BE8 CMP X20, X8
	0x03945BEC B.CS 0x3946410
	0x03945BF0 STP S0, S1, [X25 - 0x4]
	0x03945BF4 LDRSW X24, [X21 + 0x10]
	0x03945BF8 ADD X20, X20, 0x1
	0x03945BFC ADD X25, X25, 0x8
	0x03945C00 CMP X20, X24
	0x03945C04 B.LT 0x3945B98
	0x03945C08 B 0x3945C34
	0x03945C0C BL 0x1C16DFC
	0x03945C10 LDRB W8, [X19 + 0x784]
	0x03945C14 CBNZ W8, 0x3945AAC
	0x03945C18 B 0x3945A98
	0x03945C1C BL 0x1C16DFC
	0x03945C20 LDRB W8, [X19 + 0x784]
	0x03945C24 CBNZ W8, 0x3945AD4
	0x03945C28 B 0x3945AC0
	0x03945C2C MOV V14.16B, V15.16B
	0x03945C30 LDR V15, [X31 + 0x58]
	0x03945C34 ADRP X8, 0x7B0000
	0x03945C38 LDR V0, [X31 + 0x54]
	0x03945C3C LDR V1, [X31 + 0x48]
	0x03945C40 LDP S2, S3, [X31 + 0x3C]
	0x03945C44 LDR X8, [X8 + 0x9B0]
	0x03945C48 ADRP X20, 0x809000
	0x03945C4C ADRP X29, 0x7AF000
	0x03945C50 LDR X20, [X20 + 0x3F0]
	0x03945C54 LDR X29, [X29 + 0xE58]
	0x03945C58 LDR W9, [X21 + 0x14]
	0x03945C5C FMUL S0, S15, S0
	0x03945C60 FMUL S1, S14, S1
	0x03945C64 LDR X0, [X8]
	0x03945C68 FMUL S2, S2, S3
	0x03945C6C FMUL S0, S0, S0
	0x03945C70 FMUL S1, S1, S1
	0x03945C74 UBFM W8, W9, 0x1E, 0x1D
	0x03945C78 FMUL S2, S2, S2
	0x03945C7C FADD S0, S0, S1
	0x03945C80 ADD W8, W8, 0xA
	0x03945C84 FADD S0, S2, S0
	0x03945C88 MUL W1, W8, W24
	0x03945C8C FSQRT S12, S0
	0x03945C90 BL 0x1C16D6C
	0x03945C94 LDP W9, W8, [X21 + 0x10]
	0x03945C98 MOV X23, X0
	0x03945C9C LDR X0, [X20]
	0x03945CA0 ADD W8, W8, 0x3
	0x03945CA4 MUL W1, W8, W9
	0x03945CA8 BL 0x1C16D6C
	0x03945CAC LDR W10, [X21 + 0x14]
	0x03945CB0 MOV X24, X0
	0x03945CB4 ADD W11, W10, 0x1
	0x03945CB8 CMP W11, 0x1
	0x03945CBC B.LT 0x3945FF4
	0x03945CC0 LDR W13, [X21 + 0x10]
	0x03945CC4 ADD W8, W19, 0x1
	0x03945CC8 FMOV S1, 0.5
	0x03945CCC SCVTF S0, W8
	0x03945CD0 MOV W12, W31
	0x03945CD4 MOV W14, W31
	0x03945CD8 FDIV S0, S12, S0
	0x03945CDC FMUL S1, S12, S1
	0x03945CE0 MOVZ W8, 0xC
	0x03945CE4 CMP W13, 0x1
	0x03945CE8 ADD W9, W14, 0x1
	0x03945CEC B.LT 0x3945E7C
	0x03945CF0 CBZ X22, 0x3946414
	0x03945CF4 SCVTF S2, W14
	0x03945CF8 SCVTF S3, W9
	0x03945CFC FMUL S2, S0, S2
	0x03945D00 FMUL S3, S0, S3
	0x03945D04 MOV X10, X31
	0x03945D08 FSUB S2, S2, S1
	0x03945D0C FSUB S3, S3, S1
	0x03945D10 LDR W11, [X22 + 0x18]
	0x03945D14 CMP X10, X11
	0x03945D18 B.CS 0x3946410
	0x03945D1C MOV W11, W12
	0x03945D20 ADD X12, X22, X10, 0x3, LSL
	0x03945D24 LDR V4, [X12 + 0x20]!
	0x03945D28 MOV X13, X12
	0x03945D2C LDR V5, [X13 + 0x4]!
	0x03945D30 CBZ X23, 0x3946414
	0x03945D34 LDR W14, [X23 + 0x18]
	0x03945D38 CMP W11, W14
	0x03945D3C B.CS 0x3946410
	0x03945D40 SXTW X14, W11
	0x03945D44 MADD X14, X14, X8, X23
	0x03945D48 STP S4, S2, [X14 + 0x20]
	0x03945D4C STR S5, [X14 + 0x28]
	0x03945D50 LDR W14, [X22 + 0x18]
	0x03945D54 CMP X10, X14
	0x03945D58 B.CS 0x3946410
	0x03945D5C LDR W15, [X23 + 0x18]
	0x03945D60 ADD W14, W11, 0x1
	0x03945D64 CMP W14, W15
	0x03945D68 B.CS 0x3946410
	0x03945D6C LDR V4, [X12]
	0x03945D70 LDR V5, [X13]
	0x03945D74 SXTW X12, W14
	0x03945D78 MADD X13, X12, X8, X23
	0x03945D7C STP S4, S3, [X13 + 0x20]
	0x03945D80 STR S5, [X13 + 0x28]
	0x03945D84 LDR W13, [X21 + 0x10]
	0x03945D88 SUB W13, W13, 0x1
	0x03945D8C CMP X10, X13
	0x03945D90 B.NE 0x3945DEC
	0x03945D94 LDR W13, [X22 + 0x18]
	0x03945D98 CBZ W13, 0x3946410
	0x03945D9C LDR W14, [X23 + 0x18]
	0x03945DA0 ADD W13, W11, 0x2
	0x03945DA4 CMP W13, W14
	0x03945DA8 B.CS 0x3946410
	0x03945DAC LDP S4, S5, [X22 + 0x20]
	0x03945DB0 SXTW X13, W13
	0x03945DB4 MADD X13, X13, X8, X23
	0x03945DB8 STP S4, S2, [X13 + 0x20]
	0x03945DBC STR S5, [X13 + 0x28]
	0x03945DC0 LDR W13, [X22 + 0x18]
	0x03945DC4 CBZ W13, 0x3946410
	0x03945DC8 LDR W14, [X23 + 0x18]
	0x03945DCC ADD W13, W11, 0x3
	0x03945DD0 CMP W13, W14
	0x03945DD4 B.CS 0x3946410
	0x03945DD8 LDP S4, S5, [X22 + 0x20]
	0x03945DDC SXTW X13, W13
	0x03945DE0 MADD X13, X13, X8, X23
	0x03945DE4 ADD X10, X10, 0x1
	0x03945DE8 B 0x3945E5C
	0x03945DEC LDR W13, [X22 + 0x18]
	0x03945DF0 ADD X10, X10, 0x1
	0x03945DF4 CMP X10, X13
	0x03945DF8 B.CS 0x3946410
	0x03945DFC LDR W14, [X23 + 0x18]
	0x03945E00 ADD W13, W11, 0x2
	0x03945E04 CMP W13, W14
	0x03945E08 B.CS 0x3946410
	0x03945E0C ADD X14, X22, X10, 0x3, LSL
	0x03945E10 SXTW X15, W13
	0x03945E14 ADD X13, X14, 0x20
	0x03945E18 LDR V4, [X13]
	0x03945E1C LDR V5, [X14 + 0x24]!
	0x03945E20 NOP
	0x03945E24 MADD X15, X15, X8, X23
	0x03945E28 STP S4, S2, [X15 + 0x20]
	0x03945E2C STR S5, [X15 + 0x28]
	0x03945E30 LDR W15, [X22 + 0x18]
	0x03945E34 CMP X10, X15
	0x03945E38 B.CS 0x3946410
	0x03945E3C LDR W16, [X23 + 0x18]
	0x03945E40 ADD W15, W11, 0x3
	0x03945E44 CMP W15, W16
	0x03945E48 B.CS 0x3946410
	0x03945E4C LDR V4, [X13]
	0x03945E50 LDR V5, [X14]
	0x03945E54 SXTW X13, W15
	0x03945E58 MADD X13, X13, X8, X23
	0x03945E5C STP S4, S3, [X13 + 0x20]
	0x03945E60 STR S5, [X13 + 0x28]
	0x03945E64 LDRSW X13, [X21 + 0x10]
	0x03945E68 ADD W12, W12, 0x3
	0x03945E6C CMP X10, X13
	0x03945E70 B.LT 0x3945D10
	0x03945E74 LDR W10, [X21 + 0x14]
	0x03945E78 ADD W12, W11, 0x4
	0x03945E7C ADD W11, W10, 0x1
	0x03945E80 CMP W9, W11
	0x03945E84 MOV W14, W9
	0x03945E88 B.LT 0x3945CE4
	0x03945E8C CMP W11, 0x0
	0x03945E90 B.LE 0x3945FF4
	0x03945E94 LDR W8, [X21 + 0x10]
	0x03945E98 MOV W19, W31
	0x03945E9C MOV W20, W31
	0x03945EA0 UBFM W26, W8, 0x1E, 0x1D
	0x03945EA4 CMP W26, 0x1
	0x03945EA8 B.LT 0x3945FE0
	0x03945EAC MOV W28, W31
	0x03945EB0 LDR X0, [X29]
	0x03945EB4 MOVZ W1, 0x6
	0x03945EB8 BL 0x1C16D6C
	0x03945EBC CBZ X0, 0x3946414
	0x03945EC0 LDR W8, [X0 + 0x18]
	0x03945EC4 MOV X25, X0
	0x03945EC8 CBZ W8, 0x3946410
	0x03945ECC MADD W9, W20, W26, W28
	0x03945ED0 CMP W8, 0x1
	0x03945ED4 STR W9, [X25 + 0x20]
	0x03945ED8 B.EQ 0x3946410
	0x03945EDC ADD W11, W9, 0x1
	0x03945EE0 CMP W8, 0x2
	0x03945EE4 STR W11, [X25 + 0x24]
	0x03945EE8 B.LS 0x3946410
	0x03945EEC ADD W10, W9, 0x2
	0x03945EF0 CMP W8, 0x3
	0x03945EF4 STR W10, [X25 + 0x28]
	0x03945EF8 B.EQ 0x3946410
	0x03945EFC CMP W8, 0x4
	0x03945F00 STR W11, [X25 + 0x2C]
	0x03945F04 B.LS 0x3946410
	0x03945F08 ADD W9, W9, 0x3
	0x03945F0C CMP W8, 0x5
	0x03945F10 STR W9, [X25 + 0x30]
	0x03945F14 B.EQ 0x3946410
	0x03945F18 ADD X8, X31, 0x80
	0x03945F1C MOV X0, X31
	0x03945F20 STR W10, [X25 + 0x34]
	0x03945F24 BL 0x38F6A48
	0x03945F28 LDP V0, V1, [X31 + 0x80]
	0x03945F2C STP V0, V1, [X31 + 0xA0]
	0x03945F30 LDRB W8, [X21 + 0x18]
	0x03945F34 CBZ W8, 0x3945F4C
	0x03945F38 LDP V0, V1, [X31 + 0xA0]
	0x03945F3C ADD X8, X31, 0x100
	0x03945F40 MOVZ W26, 0x1
	0x03945F44 STP V0, V1, [X31 + 0x100]
	0x03945F48 B 0x3945F5C
	0x03945F4C LDP V0, V1, [X31 + 0xA0]
	0x03945F50 ADD X8, X31, 0xE0
	0x03945F54 MOVN W26, 0x0
	0x03945F58 STP V0, V1, [X31 + 0xE0]
	0x03945F5C LDP V1, V0, [X8]
	0x03945F60 ADRP X8, 0x809000
	0x03945F64 LDR X8, [X8 + 0x560]
	0x03945F68 STP V1, V0, [X31 + 0xC0]
	0x03945F6C LDR X0, [X8]
	0x03945F70 BL 0x1C16F10
	0x03945F74 LDP V0, V1, [X31 + 0xC0]
	0x03945F78 ADD X3, X31, 0x60
	0x03945F7C MOVN W5, 0x0
	0x03945F80 MOVN W6, 0x0
	0x03945F84 MOV X1, X25
	0x03945F88 MOV W2, W31
	0x03945F8C MOV W4, W26
	0x03945F90 MOV W7, W31
	0x03945F94 MOV X27, X0
	0x03945F98 STP V0, V1, [X31 + 0x60]
	0x03945F9C STR X31, [X31]
	0x03945FA0 BL 0x39004D4
	0x03945FA4 CBZ X24, 0x3946414
	0x03945FA8 LDR W8, [X24 + 0x18]
	0x03945FAC CMP W19, W8
	0x03945FB0 B.CS 0x3946410
	0x03945FB4 ADD X8, X24, W19, 0x3, SXTW
	0x03945FB8 STR X27, [X8 + 0x20]
	0x03945FBC LDR W8, [X21 + 0x10]
	0x03945FC0 ADD W9, W19, 0x1
	0x03945FC4 ADD W28, W28, 0x4
	0x03945FC8 MOV W19, W9
	0x03945FCC CMP W28, W8, LSL
	0x03945FD0 UBFM W26, W8, 0x1E, 0x1D
	0x03945FD4 B.LT 0x3945EB0
	0x03945FD8 LDR W10, [X21 + 0x14]
	0x03945FDC MOV W19, W9
	0x03945FE0 ADD W20, W20, 0x1
	0x03945FE4 ADD W11, W10, 0x1
	0x03945FE8 CMP W20, W11
	0x03945FEC B.LT 0x3945EA0
	0x03945FF0 B 0x3945FF8
	0x03945FF4 LDR W8, [X21 + 0x10]
	0x03945FF8 CMP W8, 0x1
	0x03945FFC B.LT 0x3946308
	0x03946000 CBZ X22, 0x3946414
	0x03946004 MUL W8, W8, W11
	0x03946008 FMOV S0, -0.5
	0x0394600C FMOV S1, 0.5
	0x03946010 UBFM W20, W8, 0x1E, 0x1D
	0x03946014 MOV X27, X31
	0x03946018 ADD X10, X22, 0x20
	0x0394601C ADD X9, X22, 0x24
	0x03946020 ADD X19, X22, 0x2C
	0x03946024 FMUL S13, S12, S0
	0x03946028 FMUL S12, S12, S1
	0x0394602C MOV W8, W8
	0x03946030 ADD W28, W20, 0x5
	0x03946034 MOVZ W11, 0xC
	0x03946038 STP X9, X10, [X31 + 0x40]
	0x0394603C STR X8, [X31 + 0x58]
	0x03946040 LDR W8, [X22 + 0x18]
	0x03946044 CMP X27, X8
	0x03946048 B.CS 0x3946410
	0x0394604C CBZ X23, 0x3946414
	0x03946050 LDR W8, [X23 + 0x18]
	0x03946054 SUB W26, W28, 0x5
	0x03946058 CMP W26, W8
	0x0394605C B.CS 0x3946410
	0x03946060 LDP S0, S1, [X19 - 0xC]
	0x03946064 SXTW X8, W26
	0x03946068 MADD X8, X8, X11, X23
	0x0394606C SUB W29, W28, 0x4
	0x03946070 STP S0, S13, [X8 + 0x20]
	0x03946074 STR S1, [X8 + 0x28]
	0x03946078 LDR W8, [X23 + 0x18]
	0x0394607C CMP W29, W8
	0x03946080 B.CS 0x3946410
	0x03946084 SXTW X8, W29
	0x03946088 MADD X8, X8, X11, X23
	0x0394608C STR W31, [X8 + 0x20]
	0x03946090 STR S13, [X8 + 0x24]
	0x03946094 STR W31, [X8 + 0x28]
	0x03946098 LDR W8, [X21 + 0x10]
	0x0394609C SUB W8, W8, 0x1
	0x039460A0 CMP X27, X8
	0x039460A4 B.NE 0x39460C8
	0x039460A8 LDR W8, [X22 + 0x18]
	0x039460AC CBZ W8, 0x3946410
	0x039460B0 LDR W9, [X23 + 0x18]
	0x039460B4 SUB W8, W28, 0x3
	0x039460B8 CMP W8, W9
	0x039460BC B.CS 0x3946410
	0x039460C0 LDP X10, X9, [X31 + 0x40]
	0x039460C4 B 0x39460F4
	0x039460C8 LDR W8, [X22 + 0x18]
	0x039460CC ADD X9, X27, 0x1
	0x039460D0 CMP X9, X8
	0x039460D4 B.CS 0x3946410
	0x039460D8 LDR W8, [X23 + 0x18]
	0x039460DC SUB W9, W28, 0x3
	0x039460E0 CMP W9, W8
	0x039460E4 B.CS 0x3946410
	0x039460E8 ADD W8, W20, 0x2
	0x039460EC SUB X9, X19, 0x4
	0x039460F0 MOV X10, X19
	0x039460F4 LDR V0, [X9]
	0x039460F8 LDR V1, [X10]
	0x039460FC NOP
	0x03946100 SMADDL X8, X8, X11, X23
	0x03946104 MOVZ W1, 0x3
	0x03946108 STP S0, S13, [X8 + 0x20]
	0x0394610C STR S1, [X8 + 0x28]
	0x03946110 ADRP X8, 0x7AE000
	0x03946114 LDR X8, [X8 + 0xE58]
	0x03946118 LDR X0, [X8]
	0x0394611C BL 0x1C16D6C
	0x03946120 CBZ X0, 0x3946414
	0x03946124 LDR W8, [X0 + 0x18]
	0x03946128 MOV X25, X0
	0x0394612C CBZ W8, 0x3946410
	0x03946130 SUB W9, W28, 0x3
	0x03946134 CMP W8, 0x1
	0x03946138 STR W9, [X25 + 0x20]
	0x0394613C B.EQ 0x3946410
	0x03946140 CMP W8, 0x2
	0x03946144 STR W29, [X25 + 0x24]
	0x03946148 B.LS 0x3946410
	0x0394614C STR W26, [X25 + 0x28]
	0x03946150 ADRP X8, 0x808000
	0x03946154 LDR X8, [X8 + 0x560]
	0x03946158 LDR X0, [X8]
	0x0394615C BL 0x1C16F10
	0x03946160 MOV X1, X25
	0x03946164 MOV X2, X31
	0x03946168 MOV X26, X0
	0x0394616C BL 0x3900368
	0x03946170 CBZ X24, 0x3946414
	0x03946174 LDR X8, [X31 + 0x58]
	0x03946178 LDR W9, [X24 + 0x18]
	0x0394617C MOVZ W11, 0xC
	0x03946180 ADD X8, X8, X27
	0x03946184 CMP W8, W9
	0x03946188 B.CS 0x3946410
	0x0394618C ADD X8, X24, W8, 0x3, SXTW
	0x03946190 STR X26, [X8 + 0x20]
	0x03946194 LDR W8, [X22 + 0x18]
	0x03946198 CMP X27, X8
	0x0394619C B.CS 0x3946410
	0x039461A0 LDR W8, [X23 + 0x18]
	0x039461A4 SUB W26, W28, 0x2
	0x039461A8 CMP W26, W8
	0x039461AC B.CS 0x3946410
	0x039461B0 LDP S0, S1, [X19 - 0xC]
	0x039461B4 SXTW X8, W26
	0x039461B8 MADD X8, X8, X11, X23
	0x039461BC SUB W29, W28, 0x1
	0x039461C0 STP S0, S12, [X8 + 0x20]
	0x039461C4 STR S1, [X8 + 0x28]
	0x039461C8 LDR W8, [X23 + 0x18]
	0x039461CC CMP W29, W8
	0x039461D0 B.CS 0x3946410
	0x039461D4 SXTW X8, W29
	0x039461D8 MADD X8, X8, X11, X23
	0x039461DC STR W31, [X8 + 0x20]
	0x039461E0 STR S12, [X8 + 0x24]
	0x039461E4 STR W31, [X8 + 0x28]
	0x039461E8 LDR W8, [X21 + 0x10]
	0x039461EC STR W20, [X31 + 0x54]
	0x039461F0 SUB W8, W8, 0x1
	0x039461F4 CMP X27, X8
	0x039461F8 B.NE 0x394621C
	0x039461FC LDR W8, [X22 + 0x18]
	0x03946200 CBZ W8, 0x3946410
	0x03946204 LDR W8, [X23 + 0x18]
	0x03946208 CMP W28, W8
	0x0394620C B.CS 0x3946410
	0x03946210 LDP X10, X8, [X31 + 0x40]
	0x03946214 ADD W9, W20, 0x5
	0x03946218 B 0x3946244
	0x0394621C LDR W8, [X22 + 0x18]
	0x03946220 ADD X9, X27, 0x1
	0x03946224 CMP X9, X8
	0x03946228 B.CS 0x3946410
	0x0394622C LDR W8, [X23 + 0x18]
	0x03946230 CMP W28, W8
	0x03946234 B.CS 0x3946410
	0x03946238 SUB X8, X19, 0x4
	0x0394623C MOV W9, W28
	0x03946240 MOV X10, X19
	0x03946244 LDR V0, [X8]
	0x03946248 LDR V1, [X10]
	0x0394624C NOP
	0x03946250 SMADDL X8, X9, X11, X23
	0x03946254 MOVZ W1, 0x3
	0x03946258 STP S0, S12, [X8 + 0x20]
	0x0394625C STR S1, [X8 + 0x28]
	0x03946260 ADRP X8, 0x7AE000
	0x03946264 LDR W20, [X21 + 0x10]
	0x03946268 LDR X8, [X8 + 0xE58]
	0x0394626C LDR X0, [X8]
	0x03946270 BL 0x1C16D6C
	0x03946274 CBZ X0, 0x3946414
	0x03946278 LDR W8, [X0 + 0x18]
	0x0394627C MOV X25, X0
	0x03946280 CBZ W8, 0x3946410
	0x03946284 CMP W8, 0x1
	0x03946288 STR W26, [X25 + 0x20]
	0x0394628C B.EQ 0x3946410
	0x03946290 CMP W8, 0x2
	0x03946294 STR W29, [X25 + 0x24]
	0x03946298 B.LS 0x3946410
	0x0394629C STR W28, [X25 + 0x28]
	0x039462A0 ADRP X8, 0x808000
	0x039462A4 LDR X8, [X8 + 0x560]
	0x039462A8 LDR X0, [X8]
	0x039462AC BL 0x1C16F10
	0x039462B0 MOV X1, X25
	0x039462B4 MOV X2, X31
	0x039462B8 MOV X26, X0
	0x039462BC BL 0x3900368
	0x039462C0 LDR X8, [X31 + 0x58]
	0x039462C4 LDR W9, [X24 + 0x18]
	0x039462C8 ADD X8, X8, X27
	0x039462CC ADD X8, X8, X20
	0x039462D0 CMP W8, W9
	0x039462D4 B.CS 0x3946410
	0x039462D8 ADD X8, X24, W8, 0x3, SXTW
	0x039462DC STR X26, [X8 + 0x20]
	0x039462E0 LDRSW X8, [X21 + 0x10]
	0x039462E4 LDR W20, [X31 + 0x54]
	0x039462E8 ADD X27, X27, 0x1
	0x039462EC ADD X19, X19, 0x8
	0x039462F0 CMP X27, X8
	0x039462F4 ADD W20, W20, 0x6
	0x039462F8 ADD W28, W28, 0x6
	0x039462FC MOVZ W11, 0xC
	0x03946300 B.LT 0x3946040
	0x03946304 B 0x394630C
	0x03946308 CBZ X23, 0x3946414
	0x0394630C LDR X8, [X23 + 0x18]
	0x03946310 CMP W8, 0x1
	0x03946314 B.LT 0x394636C
	0x03946318 MOV X19, X31
	0x0394631C AND X8, X8, 0x0
	0x03946320 ADD X20, X23, 0x28
	0x03946324 CMP X19, W8, UXTW
	0x03946328 B.CS 0x3946410
	0x0394632C LDP S4, S5, [X20 - 0x8]
	0x03946330 LDR V6, [X20]
	0x03946334 MOV V0.16B, V11.16B
	0x03946338 MOV V1.16B, V10.16B
	0x0394633C MOV V2.16B, V9.16B
	0x03946340 MOV V3.16B, V8.16B
	0x03946344 MOV X0, X31
	0x03946348 BL 0x3C2A9FC
	0x0394634C LDR W8, [X23 + 0x18]
	0x03946350 CMP X19, X8
	0x03946354 B.CS 0x3946410
	0x03946358 ADD X19, X19, 0x1
	0x0394635C STP S0, S1, [X20 - 0x8]
	0x03946360 STR S2, [X20], #0xC
	0x03946364 CMP X19, W8, SXTW
	0x03946368 B.LT 0x3946324
	0x0394636C LDR X19, [X31 + 0x30]
	0x03946370 CBZ X19, 0x3946414
	0x03946374 MOV X0, X19
	0x03946378 MOV X1, X23
	0x0394637C MOV X2, X24
	0x03946380 MOV X3, X31
	0x03946384 BL 0x3919540
	0x03946388 LDR X8, [X21]
	0x0394638C LDR V2, [X31 + 0x3C]
	0x03946390 ADD X2, X31, 0xA0
	0x03946394 MOV X0, X21
	0x03946398 LDR X9, [X8 + 0x178]
	0x0394639C STP X31, X31, [X31 + 0xA0]
	0x039463A0 STR X31, [X31 + 0xB0]
	0x039463A4 LDR X3, [X8 + 0x180]
	0x039463A8 ADD X8, X31, 0x80
	0x039463AC MOV X1, X19
	0x039463B0 MOV V0.16B, V15.16B
	0x039463B4 MOV V1.16B, V14.16B
	0x039463B8 MOV V3.16B, V11.16B
	0x039463BC MOV V4.16B, V10.16B
	0x039463C0 MOV V5.16B, V9.16B
	0x039463C4 MOV V6.16B, V8.16B
	0x039463C8 BLR X9
	0x039463CC LDR X8, [X31 + 0x90]
	0x039463D0 LDR V0, [X31 + 0x8]
	0x039463D4 LDR X9, [X31 + 0x28]
	0x039463D8 LDP X20, X19, [X31 + 0x1C0]
	0x039463DC LDP X22, X21, [X31 + 0x1B0]
	0x039463E0 LDP X24, X23, [X31 + 0x1A0]
	0x039463E4 LDP X26, X25, [X31 + 0x190]
	0x039463E8 LDP X28, X27, [X31 + 0x180]
	0x039463EC LDP X29, X30, [X31 + 0x170]
	0x039463F0 LDP D9, D8, [X31 + 0x160]
	0x039463F4 LDP D11, D10, [X31 + 0x150]
	0x039463F8 LDP D13, D12, [X31 + 0x140]
	0x039463FC LDP D15, D14, [X31 + 0x130]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move [X31+32], S1
	023 Move [X31+40], S2
	024 Move [X31+64], X0
	025 Move X20, 0xA9D000
	026 Move X19, 0x7AF000
	027 Move X26, X8
	028 Move W8, [X20+2413]
	029 Move X19, [X19+1448]
	030 Move V8, V6
	031 Move V9, V5
	032 Move V10, V4
	033 Move V11, V3
	034 Move V14, V0
	035 Move X27, X1
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {105}
	040 Move X0, 0x80B000
	041 Move X0, [X0+248]
	042 Call 0x1C17CF4
	043 Move X0, 0x80B000
	044 Move X0, [X0+256]
	045 Call 0x1C17CF4
	046 Move X0, 0x80B000
	047 Move X0, [X0+264]
	048 Call 0x1C17CF4
	049 Move X0, 0x80A000
	050 Move X0, [X0+1376]
	051 Call 0x1C17CF4
	052 Move X0, 0x7B0000
	053 Move X0, [X0+3672]
	054 Call 0x1C17CF4
	055 Move X0, 0x809000
	056 Move X0, [X0+3600]
	057 Call 0x1C17CF4
	058 Move X0, 0x7B3000
	059 Move X0, [X0+952]
	060 Call 0x1C17CF4
	061 Move X0, 0x80B000
	062 Move X0, [X0+272]
	063 Call 0x1C17CF4
	064 Move X0, 0x80A000
	065 Move X0, [X0+2616]
	066 Call 0x1C17CF4
	067 Move X0, 0x7DB000
	068 Move X0, [X0+1464]
	069 Call 0x1C17CF4
	070 Move X0, 0x7B3000
	071 Move X0, [X0+2424]
	072 Call 0x1C17CF4
	073 Move X0, 0x80A000
	074 Move X0, [X0+3136]
	075 Call 0x1C17CF4
	076 Move X0, 0x80A000
	077 Move X0, [X0+3144]
	078 Call 0x1C17CF4
	079 Move X0, 0x7B3000
	080 Move X0, [X0+2432]
	081 Call 0x1C17CF4
	082 Move X0, 0x80B000
	083 Move X0, [X0+232]
	084 Call 0x1C17CF4
	085 Move X0, 0x7B3000
	086 Move X0, [X0+960]
	087 Call 0x1C17CF4
	088 Move X0, 0x809000
	089 Move X0, [X0+3568]
	090 Call 0x1C17CF4
	091 Move X0, 0x7AF000
	092 Move X0, [X0+1448]
	093 Call 0x1C17CF4
	094 Move X0, 0x80A000
	095 Move X0, [X0+1464]
	096 Call 0x1C17CF4
	097 Move X0, 0x80A000
	098 Move X0, [X0+1424]
	099 Call 0x1C17CF4
	100 Move X0, 0x7B1000
	101 Move X0, [X0+2480]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+2413], W8
	105 Move X20, 0x7B1000
	106 Move X20, [X20+2480]
	107 Move S1, [X31+32]
	108 Move S2, [X31+36]
	109 Move V0, V14
	110 Move X0, X31
	111 Move [X31+96], X31
	112 Move [X31+104], X31
	113 Move [X31+112], X31
	114 Call Math.Abs, X0
	115 Move X0, [X19]
	116 Move V12, V0
	117 Move V13, V2
	118 Move [X31+48], D1
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move V0, V12
	124 Move V1, V13
	125 Move X0, X31
	126 Call Math.Min, V0, V1
	127 Move X8, [X31+64]
	128 Move [X8+20], S0
	129 Move W22, [X8+16]
	130 Move X0, [X20]
	131 Move W1, W22
	132 Call 0x1C17D6C
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X25, X0
	135 Move W8, 0x43B40000
	136 NotImplemented "Instruction SCVTF not yet implemented."
	137 Move X23, 0x7B7000
	138 Move S2, W8
	139 Move X23, [X23+3848]
	140 NotImplemented "Instruction FDIV not yet implemented."
	141 Move V0, [X31+3]
	142 Move S1, -0.5
	143 Move X19, X31
	144 Add X20, X25, 40
	145 Move X21, 0xA95000
	146 Multiply S15, S0, S1
	147 Move W24, 1
	148 Move X9, [X31+64]
	149 Move W8, [X21+1935]
	150 Move V12, [X9+20]
	151 Compare W8, 0
	152 JumpIfNotEqual {156}
	153 Move X0, X23
	154 Call 0x1C17CF4
	155 Move [X21+1935], W24
	156 Move X8, [X23]
	157 NotImplemented "Instruction SCVTF not yet implemented."
	158 Multiply S1, S13, S0
	159 Move V0, V12
	160 Move X8, [X8+184]
	161 Move X0, X31
	162 Move S2, [X8]
	163 Move S3, [X8+4]
	164 Call Math.PointInCircumference, V0, V1, X0
	165 Compare X25, 0
	166 JumpIfEqual {792}
	167 Move W8, [X25+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X19, X19, 1
	170 Move [X20-8], S0
	171 Move [X20], S15
	172 Move [X20+12], S1
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move [X31+8], X26
	175 Move [X31+16], X27
	176 Move X8, 0x7B3000
	177 Move X8, [X8+960]
	178 Move X19, 0x7DB000
	179 Move X19, [X19+1464]
	180 Move X21, 0x809000
	181 Move X0, [X8]
	182 Move X20, 0x80A000
	183 Move X21, [X21+3568]
	184 Move X20, [X20+2616]
	185 Move W8, W22
	186 Move X8, W8
	187 Move [X31+24], X8
	188 Call 0x1C17F10
	189 Move X1, [X19]
	190 Move X23, X0
	191 Call List`1<Vector3>..ctor, X0
	192 Move X0, [X21]
	193 Call 0x1C17F10
	194 Move X1, [X20]
	195 Move X24, X0
	196 Call List`1<Object>..ctor, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Compare X25, 0
	199 JumpIfEqual {792}
	200 Move X27, 0x7B3000
	201 Add X8, X25, 32
	202 Move X27, [X27+952]
	203 Move [X31+40], X8
	204 Move X8, [X31+24]
	205 Move V0, [X31+3]
	206 Move X19, X31
	207 Add X26, X25, 36
	208 Add X28, X25, 40
	209 Subtract X20, X8, 1
	210 And X22, X8, 0
	211 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	212 Add X21, X25, 52
	213 Move W29, 12
	214 NotImplemented "Instruction MOVI not yet implemented."
	215 Move S15, 0.5
	216 Move W8, [X25+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Compare X23, 0
	219 JumpIfEqual {792}
	220 Move W10, [X23+28]
	221 Move S0, [X21-20]
	222 Move S1, [X21-16]
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 Move X9, [X23+16]
	225 Move X8, [X27]
	226 Add W10, W10, 1
	227 Move [X23+28], W10
	228 Compare X9, 0
	229 JumpIfEqual {792}
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Move W11, [X9+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W8, W10, 1
	234 NotImplemented "Instruction MADD not yet implemented."
	235 Move [X23+24], W8
	236 Move [X9+32], S0
	237 Move [X9+40], S1
	238 Move [X9+40], S2
	239 Move X8, [X8+32]
	240 Move X0, X23
	241 Move X8, [X8+192]
	242 Move X1, [X8+112]
	243 Call List`1<Vector3>.AddWithResize, X0, X1
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move W8, [X25+24]
	246 Add X9, X19, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X8, X21, 8
	249 Subtract X9, X21, 4
	250 Move X10, X21
	251 Move W8, [X25+24]
	252 Compare W8, 0
	253 JumpIfEqual {793}
	254 Move X8, [X31+40]
	255 Move X9, X26
	256 Move X10, X28
	257 Move V1, [X9]
	258 Move W9, [X23+28]
	259 Move V2, [X10]
	260 Move V0, [X8]
	261 Move X8, [X23+16]
	262 Move X10, [X27]
	263 Add W9, W9, 1
	264 Move [X23+28], W9
	265 Compare X8, 0
	266 JumpIfEqual {792}
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 Move W11, [X8+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add W10, W9, 1
	271 NotImplemented "Instruction MADD not yet implemented."
	272 Move [X23+24], W10
	273 Move [X8+32], S0
	274 Move [X8+40], S1
	275 Move [X8+40], S2
	276 Move X8, [X10+32]
	277 Move X0, X23
	278 Move X8, [X8+192]
	279 Move X1, [X8+112]
	280 Call List`1<Vector3>.AddWithResize, X0, X1
	281 Move X8, 0xA94000
	282 Move W8, [X8+1926]
	283 Compare W8, 0
	284 JumpIfNotEqual {291}
	285 Move X0, 0x7AF000
	286 Move X0, [X0+1440]
	287 Call 0x1C17CF4
	288 Move X8, 0xA94000
	289 Move W9, 1
	290 Move [X8+1926], W9
	291 Move X8, 0x7AF000
	292 Move X8, [X8+1440]
	293 Move W10, [X23+28]
	294 Move X8, [X8]
	295 Add W10, W10, 1
	296 Move X9, [X8+184]
	297 Move X8, [X23+16]
	298 Move V0, [X9+24]
	299 Move V1, [X9+32]
	300 Move X9, [X27]
	301 Move [X23+28], W10
	302 Compare X8, 0
	303 JumpIfEqual {792}
	304 Move V2, [X31+3]
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Move W11, [X8+24]
	307 NotImplemented "Instruction INVALID not yet implemented."
	308 Multiply S1, S2, S1
	309 NotImplemented "Instruction INVALID not yet implemented."
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Multiply S2, S1, S15
	312 Add W9, W10, 1
	313 NotImplemented "Instruction MADD not yet implemented."
	314 Move [X23+24], W9
	315 Move [X8+32], D0
	316 Move [X8+40], S2
	317 Move X8, [X9+32]
	318 Move S1, V0.S[1]
	319 Move X0, X23
	320 Move X8, [X8+192]
	321 Move X1, [X8+112]
	322 Call List`1<Vector3>.AddWithResize, X0, X1
	323 Move W8, [X25+24]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move W9, [X23+28]
	326 Move S0, [X21-20]
	327 Move S1, [X21-16]
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 Move X8, [X23+16]
	330 Move X10, [X27]
	331 Add W9, W9, 1
	332 Move [X23+28], W9
	333 Compare X8, 0
	334 JumpIfEqual {792}
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Move W11, [X8+24]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Add W10, W9, 1
	339 NotImplemented "Instruction MADD not yet implemented."
	340 Move [X23+24], W10
	341 Move [X8+32], S0
	342 Move [X8+40], S1
	343 Move [X8+40], S2
	344 Move X8, [X10+32]
	345 Move X0, X23
	346 Move X8, [X8+192]
	347 Move X1, [X8+112]
	348 Call List`1<Vector3>.AddWithResize, X0, X1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move W8, [X25+24]
	351 Add X9, X19, 1
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Subtract X8, X21, 8
	354 Subtract X9, X21, 4
	355 Move X10, X21
	356 Move W8, [X25+24]
	357 Compare W8, 0
	358 JumpIfEqual {793}
	359 Move X8, [X31+40]
	360 Move X9, X26
	361 Move X10, X28
	362 Move V1, [X9]
	363 Move W9, [X23+28]
	364 Move V2, [X10]
	365 Move V0, [X8]
	366 Move X8, [X23+16]
	367 Move X10, [X27]
	368 Add W9, W9, 1
	369 Move [X23+28], W9
	370 Compare X8, 0
	371 JumpIfEqual {792}
	372 NotImplemented "Instruction LDRSW not yet implemented."
	373 Move W11, [X8+24]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Add W10, W9, 1
	376 NotImplemented "Instruction MADD not yet implemented."
	377 Move [X23+24], W10
	378 Move [X8+32], S0
	379 Move [X8+40], S1
	380 Move [X8+40], S2
	381 Move X8, [X10+32]
	382 Move X0, X23
	383 Move X8, [X8+192]
	384 Move X1, [X8+112]
	385 Call List`1<Vector3>.AddWithResize, X0, X1
	386 Move X8, 0xA94000
	387 Move W8, [X8+2749]
	388 Compare W8, 0
	389 JumpIfNotEqual {396}
	390 Move X0, 0x7AF000
	391 Move X0, [X0+1440]
	392 Call 0x1C17CF4
	393 Move W8, 1
	394 Move X9, 0xA94000
	395 Move [X9+2749], W8
	396 Move X8, 0x7AF000
	397 Move X8, [X8+1440]
	398 Move W10, [X23+28]
	399 Move X8, [X8]
	400 Add W10, W10, 1
	401 Move X9, [X8+184]
	402 Move X8, [X23+16]
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 Move V1, [X9+44]
	405 Move X9, [X27]
	406 Move [X23+28], W10
	407 Compare X8, 0
	408 JumpIfEqual {792}
	409 Move V2, [X31+3]
	410 NotImplemented "Instruction LDRSW not yet implemented."
	411 Move W11, [X8+24]
	412 NotImplemented "Instruction INVALID not yet implemented."
	413 Multiply S1, S2, S1
	414 NotImplemented "Instruction INVALID not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Multiply S2, S1, S15
	417 Add W9, W10, 1
	418 NotImplemented "Instruction MADD not yet implemented."
	419 Move [X23+24], W9
	420 Move [X8+32], D0
	421 Move [X8+40], S2
	422 Move X8, [X9+32]
	423 Move S1, V0.S[1]
	424 Move X0, X23
	425 Move X8, [X8+192]
	426 Move X1, [X8+112]
	427 Call List`1<Vector3>.AddWithResize, X0, X1
	428 Add X19, X19, 1
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Add X21, X21, 12
	431 Move X8, 0x809000
	432 Move X8, [X8+3568]
	433 Move X0, [X8]
	434 Call 0x1C17F10
	435 Move X8, 0x80A000
	436 Move X8, [X8+2616]
	437 Move X25, X0
	438 Move X1, [X8]
	439 Call List`1<Object>..ctor, X0
	440 Move X8, [X31+24]
	441 Add W8, W8, W8
	442 Move W19, W8
	443 ShiftRight W19, 31
	444 And W19, W19, 0x3FFFFFFF
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move X20, 0x7B0000
	447 Move X21, 0x80A000
	448 Move X22, 0x809000
	449 Move X20, [X20+3672]
	450 Move X21, [X21+1376]
	451 Move X22, [X22+3600]
	452 Move W28, 2
	453 Move X0, [X20]
	454 Move W1, 3
	455 Call 0x1C17D6C
	456 Compare X0, 0
	457 JumpIfEqual {792}
	458 Move W8, [X0+24]
	459 Move X27, X0
	460 Compare W8, 0
	461 JumpIfEqual {793}
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Move [X27+32], W28
	464 Subtract W9, W28, 1
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move [X27+36], W9
	467 Subtract W8, W28, 2
	468 Move [X27+40], W8
	469 Move X0, [X21]
	470 Call 0x1C17F10
	471 Move X1, X27
	472 Move X2, X31
	473 Move X26, X0
	474 Call Face..ctor, X0, X1
	475 Compare X26, 0
	476 JumpIfEqual {792}
	477 Move X8, [X31+64]
	478 Move W8, [X8+24]
	479 Move [X26+24], W8
	480 Compare X24, 0
	481 JumpIfEqual {792}
	482 Move W10, [X24+28]
	483 Move X8, [X24+16]
	484 Move X9, [X22]
	485 Add W10, W10, 1
	486 Move [X24+28], W10
	487 Compare X8, 0
	488 JumpIfEqual {792}
	489 NotImplemented "Instruction LDRSW not yet implemented."
	490 Move W11, [X8+24]
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Add W9, W10, 1
	493 Add X8, X8, X10
	494 Move [X24+24], W9
	495 Move [X8+32], X26
	496 Move X8, [X9+32]
	497 Move X0, X24
	498 Move X1, X26
	499 Move X8, [X8+192]
	500 Move X2, [X8+112]
	501 Call List`1<Object>.AddWithResize, X0, X1
	502 Compare X25, 0
	503 JumpIfEqual {792}
	504 Move W10, [X25+28]
	505 Move X8, [X25+16]
	506 Move X9, [X22]
	507 Add W10, W10, 1
	508 Move [X25+28], W10
	509 Compare X8, 0
	510 JumpIfEqual {792}
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Move W11, [X8+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Add W9, W10, 1
	515 Add X8, X8, X10
	516 Move [X25+24], W9
	517 Move [X8+32], X26
	518 Move X8, [X9+32]
	519 Move X0, X25
	520 Move X1, X26
	521 Move X8, [X8+192]
	522 Move X2, [X8+112]
	523 Call List`1<Object>.AddWithResize, X0, X1
	524 Move X0, [X20]
	525 Move W1, 3
	526 Call 0x1C17D6C
	527 Compare X0, 0
	528 JumpIfEqual {792}
	529 Move W8, [X0+24]
	530 Move X27, X0
	531 Compare W8, 0
	532 JumpIfEqual {793}
	533 Add W9, W28, 1
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move [X27+32], W9
	536 Add W9, W28, 2
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move [X27+36], W9
	539 Add W8, W28, 3
	540 Move [X27+40], W8
	541 Move X0, [X21]
	542 Call 0x1C17F10
	543 Move X1, X27
	544 Move X2, X31
	545 Move X26, X0
	546 Call Face..ctor, X0, X1
	547 Move W10, [X24+28]
	548 Move X8, [X24+16]
	549 Move X9, [X22]
	550 Add W10, W10, 1
	551 Move [X24+28], W10
	552 Compare X8, 0
	553 JumpIfEqual {792}
	554 NotImplemented "Instruction LDRSW not yet implemented."
	555 Move W11, [X8+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Add W9, W10, 1
	558 Add X8, X8, X10
	559 Move [X24+24], W9
	560 Move [X8+32], X26
	561 Move X8, [X9+32]
	562 Move X0, X24
	563 Move X1, X26
	564 Move X8, [X8+192]
	565 Move X2, [X8+112]
	566 Call List`1<Object>.AddWithResize, X0, X1
	567 Add W8, W28, 4
	568 Add W28, W28, 6
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move S1, [X31+32]
	571 Move S2, [X31+36]
	572 Move V0, V14
	573 Move X0, X31
	574 Call Math.Sign, X0
	575 Compare X23, 0
	576 JumpIfEqual {792}
	577 Move W8, [X23+24]
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X19, 0x7B2000
	580 Move X20, 0x80A000
	581 Move X19, [X19+2432]
	582 Move X20, [X20+232]
	583 Move V15, V0
	584 Move V12, V1
	585 Move V13, V2
	586 Move W26, W31
	587 Move X2, [X19]
	588 Move X0, X23
	589 Move W1, W26
	590 Call List`1<Vector3>.get_Item, X0, X1
	591 Move V4, V0
	592 Move V5, V1
	593 Move V6, V2
	594 Move V0, V11
	595 Move V1, V10
	596 Move V2, V9
	597 Move V3, V8
	598 Move X0, X31
	599 Call Quaternion.op_Multiply, X0, X1
	600 Move X2, [X20]
	601 Multiply S0, S15, S0
	602 Multiply S1, S12, S1
	603 Multiply S2, S13, S2
	604 Move X0, X23
	605 Move W1, W26
	606 Call List`1<Vector3>.set_Item, X0, X1, X2
	607 Move W8, [X23+24]
	608 Add W26, W26, 1
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Move S0, [X31+32]
	611 Move S2, [X31+36]
	612 Move S1, 1
	613 NotImplemented "Instruction FCMP not yet implemented."
	614 Move S0, -1
	615 NotImplemented "Instruction FCSEL not yet implemented."
	616 NotImplemented "Instruction FCMP not yet implemented."
	617 NotImplemented "Instruction FNEG not yet implemented."
	618 NotImplemented "Instruction FCSEL not yet implemented."
	619 NotImplemented "Instruction FNEG not yet implemented."
	620 NotImplemented "Instruction FCMP not yet implemented."
	621 NotImplemented "Instruction FCSEL not yet implemented."
	622 NotImplemented "Instruction FCMP not yet implemented."
	623 Compare X24, 0
	624 JumpIfEqual {792}
	625 Move X8, 0x80A000
	626 Move X8, [X8+272]
	627 Move X0, X24
	628 Move X1, [X8]
	629 Add X8, X31, 120
	630 Call List`1<Object>.GetEnumerator, X0
	631 NotImplemented "Instruction LDUR not yet implemented."
	632 Move X8, [X31+136]
	633 Move X19, 0x80A000
	634 Move [X31+6], V0
	635 Move [X31+112], X8
	636 Move X19, [X19+256]
	637 Move X1, [X19]
	638 Add X0, X31, 96
	639 Call Enumerator<Object>.MoveNext, X0
	640 Move TEMP, X0
	641 And TEMP, TEMP, 1
	642 Compare TEMP, 1
	643 JumpIfNotEqual {649}
	644 Move X0, [X31+112]
	645 Compare X0, 0
	646 JumpIfEqual {794}
	647 Move X1, X31
	648 Call Face.Reverse, X0
	649 Move X8, 0x80A000
	650 Move X8, [X8+248]
	651 Add X0, X31, 96
	652 Move X1, [X8]
	653 Call Enumerator<Object>.Dispose, X0
	654 Move X27, [X31+16]
	655 Compare X27, 0
	656 JumpIfEqual {792}
	657 Move X19, 0x809000
	658 Move X19, [X19+1464]
	659 Move X0, X27
	660 Move X1, X23
	661 Move X2, X24
	662 Move X3, X31
	663 Call ProBuilderMesh.RebuildWithPositionsAndFaces, X0, X1, X2
	664 Move X0, [X19]
	665 Call 0x1C17F10
	666 Move X1, X31
	667 Move X23, X0
	668 Call UnwrapParameters..ctor, X0
	669 Move X26, [X31+8]
	670 Compare X23, 0
	671 JumpIfEqual {792}
	672 Move W8, 0x41F00000
	673 Move [X23+20], W8
	674 Move [X27+152], X23
	675 Compare X25, 0
	676 JumpIfEqual {792}
	677 Move X19, 0x809000
	678 Move X19, [X19+3144]
	679 Move X0, X25
	680 Move W1, W31
	681 Move X2, [X19]
	682 Call List`1<Object>.get_Item, X0, X1
	683 Compare X0, 0
	684 JumpIfEqual {792}
	685 Move W8, 6
	686 Move W21, 1
	687 Move [X0+56], W8
	688 Move [X0+76], W21
	689 Move X22, 0xA93000
	690 Move X20, 0x809000
	691 Move W8, [X22+1926]
	692 Move X20, [X20+1424]
	693 Move X23, X0
	694 Compare W8, 0
	695 JumpIfNotEqual {700}
	696 Move X0, 0x7AE000
	697 Move X0, [X0+1440]
	698 Call 0x1C17CF4
	699 Move [X22+1926], W21
	700 Move X8, 0x7AE000
	701 Move X8, [X8+1440]
	702 Move X0, [X20]
	703 Move X8, [X8]
	704 Move W9, [X0+224]
	705 Move X8, [X8+184]
	706 Move S15, [X8+24]
	707 Move S13, [X8+28]
	708 Move V12, [X8+32]
	709 Compare W9, 0
	710 JumpIfNotEqual {712}
	711 Call 0x1C17DFC
	712 Move X0, X27
	713 Move X1, X23
	714 Move V0, V15
	715 Move V1, V13
	716 Move V2, V12
	717 Move X2, X31
	718 Call UvUnwrapping.Unwrap, X0, X1, X2
	719 Move W8, [X25+24]
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Move W21, 1
	722 Move W22, 1
	723 Move X2, [X19]
	724 Move X0, X25
	725 Move W1, W22
	726 Call List`1<Object>.get_Item, X0, X1
	727 Compare X0, 0
	728 JumpIfEqual {792}
	729 Move [X0+76], W21
	730 Move X24, X0
	731 Move X0, [X20]
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X0, X27
	737 Move X1, X23
	738 Move X2, X24
	739 Move X3, X31
	740 Call UvUnwrapping.CopyUVs, X0, X1, X2
	741 Move W8, [X25+24]
	742 Add W22, W22, 1
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move X0, X27
	745 Move X1, X25
	746 Move X2, X31
	747 Call ProBuilderMesh.RefreshUV, X0, X1
	748 Move X0, [X31+64]
	749 Move S1, [X31+32]
	750 Move S2, [X31+36]
	751 Add X2, X31, 120
	752 Move X1, X27
	753 Move X8, [X0]
	754 Move V0, V14
	755 Move V3, V11
	756 Move V4, V10
	757 Move X9, [X8+376]
	758 Move [X31+120], X31
	759 Move [X31+128], X31
	760 Move [X31+136], X31
	761 Move X3, [X8+384]
	762 Add X8, X31, 72
	763 Move V5, V9
	764 Move V6, V8
	765 NotImplemented "Instruction BLR not yet implemented."
	766 Move X8, [X31+88]
	767 NotImplemented "Instruction LDUR not yet implemented."
	768 Move X20, [X31+288]
	769 Move X19, [X31+296]
	770 Move X22, [X31+272]
	771 Move X21, [X31+280]
	772 Move [X26+16], X8
	773 Move [X26], V0
	774 Move X24, [X31+256]
	775 Move X23, [X31+264]
	776 Move X26, [X31+240]
	777 Move X25, [X31+248]
	778 Move X28, [X31+224]
	779 Move X27, [X31+232]
	780 Move X29, [X31+208]
	781 Move X30, [X31+216]
	782 Move D9, [X31+192]
	783 Move D8, [X31+200]
	784 Move D11, [X31+176]
	785 Move D10, [X31+184]
	786 Move D13, [X31+160]
	787 Move D12, [X31+168]
	788 Move D15, [X31+144]
	789 Move D14, [X31+152]
	790 Add X31, X31, 304
	791 Return X0
	792 Call 0x1C17F20
	793 Call 0x1C17F28
	794 Call 0x1C17F20
	795 Move X26, X0
	796 NotImplemented "Instruction CMP not yet implemented."
	797 Move X0, X26
	798 Call 0x3EB2AD0
	799 Move X27, [X0]
	800 Call 0x3EB2AE0
	801 Move X8, 0x80A000
	802 Move X8, [X8+248]
	803 Add X0, X31, 96
	804 Move X1, [X8]
	805 Call Enumerator<Object>.Dispose, X0
	806 Compare X27, 0
	807 JumpIfEqual {654}
	808 Move X0, X27
	809 Call 0x1C17F18
	810 Move X27, X31
	811 Move X26, X0
	812 Move X8, 0x80A000
	813 Move X8, [X8+248]
	814 Move X1, [X8]
	815 Add X0, X31, 96
	816 Call Enumerator<Object>.Dispose, X0
	817 Compare X27, 0
	818 JumpIfNotEqual {821}
	819 Move X0, X26
	820 Call 0x1D2D690
	821 Move X0, X27
	822 Call 0x1C17F18
	823 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03946400 STR X8, [X9 + 0x10]
	0x03946404 STR V0, [X9]
	0x03946408 ADD X31, X31, 0x1D0
	0x0394640C RET
	0x03946410 BL 0x1C16F28
	0x03946414 BL 0x1C16F20

ISIL:
	001 Move W8, 6
	002 Move W9, 1
	003 Move X1, X31
	004 Move [X0+16], W8
	005 Move [X0+24], W9
	006 Call Object..ctor, X0
	007 Return 

