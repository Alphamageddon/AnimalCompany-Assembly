Type: UnityEngine.ProBuilder.IntVec4

Method: System.Single get_x()

Disassembly:
	0x03907734 LDR X8, [X0 + 0xB8]
	0x03907738 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move V0, [X0]
	002 Return V0

Method: System.Single get_y()

Disassembly:
	0x0390773C MOV X1, X31
	0x03907740 LDR X0, [X8 + 0x10]

ISIL:
	001 Move V0, [X0+4]
	002 Return V0

Method: System.Single get_z()

Disassembly:
	0x03907744 LDR X30, [X31], #0x20
	0x03907748 B 0x32ED09C

ISIL:
	001 Move V0, [X0+8]
	002 Return V0

Method: System.Single get_w()

Disassembly:
	0x0390774C LDP X20, X19, [X31 + 0x10]
	0x03907750 LDR X30, [X31], #0x20

ISIL:
	001 Move V0, [X0+12]
	002 Return V0

Method: System.Void .ctor(UnityEngine.Vector4 vector)

Disassembly:
	0x03907754 RET
	0x03907758 STP X30, X23, [X31 - 0x30]!
	0x0390775C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: System.String ToString()

Disassembly:
	0x03907760 STP X20, X19, [X31 + 0x20]
	0x03907764 ADRP X22, 0xADA000
	0x03907768 ADRP X23, 0x846000
	0x0390776C ADRP X19, 0x846000
	0x03907770 ADRP X21, 0x846000
	0x03907774 ADRP X20, 0x846000
	0x03907778 LDRB W8, [X22 + 0x7F1]
	0x0390777C LDR X23, [X23 + 0xF18]
	0x03907780 LDR X19, [X19 + 0xF20]
	0x03907784 LDR X21, [X21 + 0xAD0]
	0x03907788 LDR X20, [X20 + 0xF28]
	0x0390778C TBNZ X8, 0x0, 0x39077C8
	0x03907790 ADRP X0, 0x846000
	0x03907794 LDR X0, [X0 + 0xAD0]
	0x03907798 BL 0x1C16CF4
	0x0390779C ADRP X0, 0x846000
	0x039077A0 LDR X0, [X0 + 0xF20]
	0x039077A4 BL 0x1C16CF4
	0x039077A8 ADRP X0, 0x846000
	0x039077AC LDR X0, [X0 + 0xF18]
	0x039077B0 BL 0x1C16CF4
	0x039077B4 ADRP X0, 0x846000
	0x039077B8 LDR X0, [X0 + 0xF28]
	0x039077BC BL 0x1C16CF4
	0x039077C0 MOVZ W8, 0x1
	0x039077C4 STRB W8, [X22 + 0x7F1]
	0x039077C8 LDR X0, [X23]
	0x039077CC BL 0x1C16F10
	0x039077D0 LDR X1, [X19]
	0x039077D4 MOV X19, X0
	0x039077D8 BL 0x2600E30
	0x039077DC LDR X8, [X21]
	0x039077E0 ADRP X9, 0xFFFFFFFFFD1E7000
	0x039077E4 LDR V0, [X9 + 0x528]
	0x039077E8 LDR X8, [X8 + 0xB8]
	0x039077EC STR X19, [X8]
	0x039077F0 LDR X8, [X21]
	0x039077F4 LDP X22, X21, [X31 + 0x10]
	0x039077F8 LDR X8, [X8 + 0xB8]
	0x039077FC STR D0, [X8 + 0x8]
	0x03907800 LDR X9, [X20]
	0x03907804 LDP X20, X19, [X31 + 0x20]
	0x03907808 STR X9, [X8 + 0x10]
	0x0390780C LDP X30, X23, [X31], #0x30
	0x03907810 RET
	0x03907814 STP X30, X21, [X31 - 0x20]!
	0x03907818 STP X20, X19, [X31 + 0x10]
	0x0390781C ADRP X21, 0xADA000
	0x03907820 ADRP X20, 0x846000
	0x03907824 LDRB W8, [X21 + 0x7F2]
	0x03907828 LDR X20, [X20 + 0xF30]
	0x0390782C MOV X19, X0
	0x03907830 TBNZ X8, 0x0, 0x3907860
	0x03907834 ADRP X0, 0x846000
	0x03907838 LDR X0, [X0 + 0xF38]
	0x0390783C BL 0x1C16CF4
	0x03907840 ADRP X0, 0x846000
	0x03907844 LDR X0, [X0 + 0xF40]
	0x03907848 BL 0x1C16CF4
	0x0390784C ADRP X0, 0x846000
	0x03907850 LDR X0, [X0 + 0xF30]
	0x03907854 BL 0x1C16CF4
	0x03907858 MOVZ W8, 0x1
	0x0390785C STRB W8, [X21 + 0x7F2]
	0x03907860 LDR X0, [X20]
	0x03907864 LDR W8, [X0 + 0xE0]
	0x03907868 CBNZ W8, 0x3907874
	0x0390786C BL 0x1C16DFC
	0x03907870 LDR X0, [X20]
	0x03907874 LDR X8, [X0 + 0xB8]
	0x03907878 LDR X8, [X8]
	0x0390787C CBZ X8, 0x39078E0
	0x03907880 LDP W2, W9, [X8 + 0x18]
	0x03907884 ADD W9, W9, 0x1
	0x03907888 CMP W2, 0x1
	0x0390788C STP W31, W9, [X8 + 0x18]
	0x03907890 B.LT 0x39078A4
	0x03907894 LDR X0, [X8 + 0x10]
	0x03907898 MOV W1, W31
	0x0390789C MOV X3, X31
	0x039078A0 BL 0x339FA34
	0x039078A4 CBZ X19, 0x39078E0
	0x039078A8 LDR X8, [X20]
	0x039078AC MOV X0, X19
	0x039078B0 MOV X2, X31
	0x039078B4 LDR X8, [X8 + 0xB8]
	0x039078B8 LDR X1, [X8]
	0x039078BC BL 0x3C1368C
	0x039078C0 LDR X8, [X20]
	0x039078C4 LDR X8, [X8 + 0xB8]
	0x039078C8 LDR X8, [X8]
	0x039078CC CBZ X8, 0x39078E0
	0x039078D0 LDR W0, [X8 + 0x18]
	0x039078D4 LDP X20, X19, [X31 + 0x10]
	0x039078D8 LDP X30, X21, [X31], #0x20
	0x039078DC RET
	0x039078E0 BL 0x1C16F20
	0x039078E4 STR X30, [X31 - 0x30]!
	0x039078E8 STP X22, X21, [X31 + 0x10]
	0x039078EC STP X20, X19, [X31 + 0x20]
	0x039078F0 ADRP X22, 0xADA000
	0x039078F4 ADRP X21, 0x846000
	0x039078F8 LDRB W8, [X22 + 0x7F3]
	0x039078FC LDR X21, [X21 + 0xF30]
	0x03907900 MOV W19, W1
	0x03907904 MOV X20, X0
	0x03907908 TBNZ X8, 0x0, 0x3907944

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0xADB000
	008 Move X21, 0x7ED000
	009 Move X22, 0x7ED000
	010 Move W8, [X19+2014]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+2704]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x7ED000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x7ED000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x847000
	025 Move X0, [X0+3824]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2014], W8
	029 Move X0, [X21]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X19, X0
	033 Move V0, [X20]
	034 Move X0, [X22]
	035 Add X1, X31, 28
	036 Move [X31+28], S0
	037 Call 0x1C17E04
	038 Compare X19, 0
	039 JumpIfEqual {121}
	040 Move X21, X0
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X8, [X19]
	044 Move X0, X21
	045 Move X1, [X8+64]
	046 Call 0x1C17E00
	047 Compare X0, 0
	048 JumpIfEqual {118}
	049 Move W8, [X19+24]
	050 Compare W8, 0
	051 JumpIfEqual {117}
	052 Move [X19+32], X21
	053 Move V0, [X20+4]
	054 Move X0, [X22]
	055 Add X1, X31, 24
	056 Move [X31+24], S0
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X19]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {118}
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+40], X21
	070 Move V0, [X20+8]
	071 Move X0, [X22]
	072 Add X1, X31, 12
	073 Move [X31+12], S0
	074 Call 0x1C17E04
	075 Move X21, X0
	076 Compare X0, 0
	077 JumpIfEqual {84}
	078 Move X8, [X19]
	079 Move X0, X21
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {118}
	084 Move W8, [X19+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X19+48], X21
	087 Move V0, [X20+12]
	088 Move X0, [X22]
	089 Add X1, X31, 8
	090 Move [X31+8], S0
	091 Call 0x1C17E04
	092 Move X20, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X19]
	096 Move X0, X20
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move W8, [X19+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x847000
	104 Move X8, [X8+3824]
	105 Move [X19+56], X20
	106 Move X1, X19
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Format, X0, X1
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.ProBuilder.IntVec4 a, UnityEngine.ProBuilder.IntVec4 b)

Disassembly:
	0x0390790C ADRP X0, 0x846000
	0x03907910 LDR X0, [X0 + 0xF38]
	0x03907914 BL 0x1C16CF4
	0x03907918 ADRP X0, 0x846000
	0x0390791C LDR X0, [X0 + 0xF40]
	0x03907920 BL 0x1C16CF4
	0x03907924 ADRP X0, 0x846000
	0x03907928 LDR X0, [X0 + 0xF48]
	0x0390792C BL 0x1C16CF4
	0x03907930 ADRP X0, 0x846000
	0x03907934 LDR X0, [X0 + 0xF30]
	0x03907938 BL 0x1C16CF4
	0x0390793C MOVZ W8, 0x1
	0x03907940 STRB W8, [X22 + 0x7F3]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31], S0
	004 Move [X31+8], S1
	005 Move [X31+8], S2
	006 Move [X31+16], S3
	007 Add X0, X31, 0
	008 Move V0, V4
	009 Move V1, V5
	010 Move V2, V6
	011 Move V3, V7
	012 Call IntVec4.Equals, X0, X1
	013 Move X30, [X31+16]
	014 And W0, W0, 1
	015 Add X31, X31, 32
	016 Return X0

Method: System.Boolean op_Inequality(UnityEngine.ProBuilder.IntVec4 a, UnityEngine.ProBuilder.IntVec4 b)

Disassembly:
	0x039079F8 CMP W19, 0x0
	0x039079FC LDP X20, X19, [X31 + 0x20]
	0x03907A00 CSEL W1, W31, W8, LT
	0x03907A04 LDR X30, [X31], #0x30
	0x03907A08 B 0x301BCCC
	0x03907A0C LDP X20, X19, [X31 + 0x20]
	0x03907A10 LDP X22, X21, [X31 + 0x10]
	0x03907A14 MOV X0, X31
	0x03907A18 LDR X30, [X31], #0x30
	0x03907A1C RET
	0x03907A20 BL 0x1C16F20
	0x03907A24 CMP W0, W1
	0x03907A28 B.GE 0x3907A34
	0x03907A2C MOV W0, W1
	0x03907A30 RET

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31], S0
	004 Move [X31+8], S1
	005 Move [X31+8], S2
	006 Move [X31+16], S3
	007 Add X0, X31, 0
	008 Move V0, V4
	009 Move V1, V5
	010 Move V2, V6
	011 Move V3, V7
	012 Call IntVec4.Equals, X0, X1
	013 Move X30, [X31+16]
	014 NotImplemented "Instruction ORN not yet implemented."
	015 And W0, W8, 1
	016 Add X31, X31, 32
	017 Return X0

Method: System.Boolean Equals(UnityEngine.ProBuilder.IntVec4 p)

Disassembly:
	0x03907944 LDR X0, [X21]
	0x03907948 LDR W8, [X0 + 0xE0]
	0x0390794C CBNZ W8, 0x3907958
	0x03907950 BL 0x1C16DFC
	0x03907954 LDR X0, [X21]
	0x03907958 LDR X8, [X0 + 0xB8]
	0x0390795C LDR X8, [X8]
	0x03907960 CBZ X8, 0x3907A20
	0x03907964 LDP W2, W9, [X8 + 0x18]
	0x03907968 ADD W9, W9, 0x1
	0x0390796C CMP W2, 0x1
	0x03907970 STP W31, W9, [X8 + 0x18]
	0x03907974 B.LT 0x3907988
	0x03907978 LDR X0, [X8 + 0x10]
	0x0390797C MOV W1, W31
	0x03907980 MOV X3, X31
	0x03907984 BL 0x339FA34
	0x03907988 CBZ X20, 0x3907A20
	0x0390798C LDR X8, [X21]
	0x03907990 MOV X0, X20
	0x03907994 MOV X2, X31
	0x03907998 LDR X8, [X8 + 0xB8]
	0x0390799C LDR X1, [X8]
	0x039079A0 BL 0x3C1368C
	0x039079A4 LDR X8, [X21]
	0x039079A8 LDR X9, [X8 + 0xB8]
	0x039079AC LDR X0, [X9]
	0x039079B0 CBZ X0, 0x3907A20
	0x039079B4 LDR W22, [X0 + 0x18]
	0x039079B8 SUBS W20, W22, 0x1
	0x039079BC B.LT 0x3907A0C
	0x039079C0 LDR W9, [X8 + 0xE0]
	0x039079C4 CBNZ W9, 0x39079E0
	0x039079C8 MOV X0, X8
	0x039079CC BL 0x1C16DFC
	0x039079D0 LDR X8, [X21]
	0x039079D4 LDR X8, [X8 + 0xB8]
	0x039079D8 LDR X0, [X8]
	0x039079DC CBZ X0, 0x3907A20
	0x039079E0 ADRP X8, 0x846000
	0x039079E4 LDR X8, [X8 + 0xF48]
	0x039079E8 CMP W22, W19
	0x039079EC LDP X22, X21, [X31 + 0x10]
	0x039079F0 LDR X2, [X8]
	0x039079F4 CSEL W8, W19, W20, GT

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move V10, V1
	009 Move V1, [X0]
	010 Move V11, V0
	011 Move V8, V3
	012 Move V9, V2
	013 Move V0, V1
	014 Move X19, X0
	015 Call IntVec4.round, V0
	016 Move V0, V11
	017 Move W20, W0
	018 Call IntVec4.round, V0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V0, [X19+4]
	021 Call IntVec4.round, V0
	022 Move V0, V10
	023 Move W20, W0
	024 Call IntVec4.round, V0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move V0, [X19+8]
	027 Call IntVec4.round, V0
	028 Move V0, V9
	029 Move W20, W0
	030 Call IntVec4.round, V0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move V0, [X19+12]
	033 Call IntVec4.round, V0
	034 Move V0, V8
	035 Move W19, W0
	036 Call IntVec4.round, V0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W0, W31
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Return X0

Method: System.Boolean Equals(UnityEngine.Vector4 p)

Disassembly:
	0x03907A9C LDR X0, [X22]
	0x03907AA0 BL 0x1C16F10
	0x03907AA4 LDR X1, [X19]
	0x03907AA8 MOV X19, X0
	0x03907AAC BL 0x301B7C4
	0x03907AB0 LDR X8, [X20]
	0x03907AB4 LDP X22, X21, [X31 + 0x10]
	0x03907AB8 LDR X8, [X8 + 0xB8]
	0x03907ABC STR X19, [X8]
	0x03907AC0 LDP X20, X19, [X31 + 0x20]
	0x03907AC4 LDR X30, [X31], #0x30
	0x03907AC8 RET
	0x03907ACC SUB X31, X31, 0x30
	0x03907AD0 STR D10, [X31 + 0x10]
	0x03907AD4 STP D9, D8, [X31 + 0x18]
	0x03907AD8 STR X30, [X31 + 0x28]
	0x03907ADC ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907AE0 MOV V10.16B, V0.16B
	0x03907AE4 LDR V0, [X8 + 0x104]
	0x03907AE8 ADD X0, X31, 0xC
	0x03907AEC ADD X1, X31, 0x8
	0x03907AF0 MOV V8.16B, V3.16B
	0x03907AF4 FMUL S0, S1, S0
	0x03907AF8 MOV V9.16B, V2.16B
	0x03907AFC BL 0x3EB1BC0
	0x03907B00 LDP S1, S0, [X31 + 0x8]
	0x03907B04 LDR X30, [X31 + 0x28]
	0x03907B08 FMUL S0, S0, S10
	0x03907B0C FMUL S2, S1, S10
	0x03907B10 FADD S1, S8, S0
	0x03907B14 FADD S0, S9, S2
	0x03907B18 LDP D9, D8, [X31 + 0x18]
	0x03907B1C LDR V10, [X31 + 0x10]
	0x03907B20 ADD X31, X31, 0x30
	0x03907B24 RET
	0x03907B28 STP D11, D10, [X31 - 0x40]!
	0x03907B2C STP D9, D8, [X31 + 0x10]
	0x03907B30 STR X30, [X31 + 0x20]
	0x03907B34 STP X20, X19, [X31 + 0x30]
	0x03907B38 ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907B3C MOV V11.16B, V0.16B
	0x03907B40 LDR V0, [X8 + 0x104]
	0x03907B44 MOV X19, X0
	0x03907B48 ADD X0, X31, 0x2C
	0x03907B4C ADD X1, X31, 0x28

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move V10, V1
	009 Move V1, [X0]
	010 Move V11, V0
	011 Move V8, V3
	012 Move V9, V2
	013 Move V0, V1
	014 Move X19, X0
	015 Call IntVec4.round, V0
	016 Move V0, V11
	017 Move W20, W0
	018 Call IntVec4.round, V0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move V0, [X19+4]
	021 Call IntVec4.round, V0
	022 Move V0, V10
	023 Move W20, W0
	024 Call IntVec4.round, V0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move V0, [X19+8]
	027 Call IntVec4.round, V0
	028 Move V0, V9
	029 Move W20, W0
	030 Call IntVec4.round, V0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move V0, [X19+12]
	033 Call IntVec4.round, V0
	034 Move V0, V8
	035 Move W19, W0
	036 Call IntVec4.round, V0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W0, W31
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move D11, [X31+64]
	046 Move D10, [X31+72]
	047 Return X0

Method: System.Boolean Equals(System.Object b)

Disassembly:
	0x03907B50 FMUL S0, S2, S0
	0x03907B54 MOV V8.16B, V4.16B
	0x03907B58 MOV V9.16B, V3.16B
	0x03907B5C MOV V10.16B, V1.16B
	0x03907B60 BL 0x3EB1BC0
	0x03907B64 LDP S0, S1, [X31 + 0x28]
	0x03907B68 FMUL S2, S10, S10
	0x03907B6C FMUL S3, S11, S11
	0x03907B70 ADRP X20, 0xAD2000
	0x03907B74 FMUL S1, S1, S10
	0x03907B78 FMUL S0, S0, S11
	0x03907B7C FADD S8, S8, S1
	0x03907B80 FADD S9, S9, S0
	0x03907B84 FNEG S0, S8
	0x03907B88 FDIV S10, S9, S3
	0x03907B8C FDIV S11, S0, S2
	0x03907B90 STP S11, S10, [X19]
	0x03907B94 LDRB W8, [X20 + 0x818]
	0x03907B98 CBNZ W8, 0x3907BB4
	0x03907B9C ADRP X0, 0x7EC000
	0x03907BA0 LDR X0, [X0 + 0x5A8]
	0x03907BA4 BL 0x1C16CF4
	0x03907BA8 MOVZ W8, 0x1
	0x03907BAC STRB W8, [X20 + 0x818]
	0x03907BB0 LDP S11, S10, [X19]
	0x03907BB4 ADRP X8, 0x7EC000
	0x03907BB8 LDR X8, [X8 + 0x5A8]
	0x03907BBC LDR X0, [X8]
	0x03907BC0 LDR W8, [X0 + 0xE0]
	0x03907BC4 CBNZ W8, 0x3907BCC
	0x03907BC8 BL 0x1C16DFC
	0x03907BCC ADRP X8, 0xFFFFFFFFFD1E3000
	0x03907BD0 LDR V1, [X8 + 0x17C]
	0x03907BD4 FMUL S0, S11, S11
	0x03907BD8 FMUL S2, S10, S10
	0x03907BDC FADD S0, S0, S2
	0x03907BE0 FSQRT S0, S0
	0x03907BE4 FCMP S0, S1
	0x03907BE8 B.LE 0x3907BFC
	0x03907BEC LDR V1, [X19]
	0x03907BF0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03907BF8 B 0x3907C30
	0x03907BFC ADRP X20, 0xAD2000
	0x03907C00 LDRB W8, [X20 + 0x78F]
	0x03907C04 CBNZ W8, 0x3907C1C
	0x03907C08 ADRP X0, 0x7F4000
	0x03907C0C LDR X0, [X0 + 0xF08]
	0x03907C10 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xADB000
	006 Move W8, [X21+2015]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x847000
	014 Move X0, [X0+3832]
	015 Call 0x1C17CF4
	016 Move X0, 0x7F4000
	017 Move X0, [X0+2464]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2015], W8
	021 Compare X20, 0
	022 JumpIfEqual {46}
	023 Move X8, 0x847000
	024 Move X8, [X8+3832]
	025 Move X9, [X8]
	026 Move X8, [X20]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Call 0x1C17E08
	030 Move S0, [X0]
	031 Move S1, [X0+4]
	032 Move S2, [X0+8]
	033 Move S3, [X0+12]
	034 Move X0, X19
	035 Call IntVec4.Equals, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {41}
	040 Move W0, 1
	041 Move X8, [X20]
	042 Move X9, 0x7F4000
	043 Move X9, [X9+2464]
	044 Move X9, [X9]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, W31
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Move X0, X20
	053 Call 0x1C17E08
	054 Move S0, [X0]
	055 Move S1, [X0+4]
	056 Move S2, [X0+8]
	057 Move S3, [X0+12]
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call IntVec4.Equals, X0, X1
	064 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03907C14 MOVZ W8, 0x1
	0x03907C18 STRB W8, [X20 + 0x78F]
	0x03907C1C ADRP X8, 0x7F4000
	0x03907C20 LDR X8, [X8 + 0xF08]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move S2, [X0+8]
	004 Move S3, [X0+12]
	005 Move X0, X31
	006 Call VectorHash.GetHashCode, X0
	007 Return X0

Method: System.Int32 round(System.Single v)

Disassembly:
	0x03907A34 CMP W0, W2
	0x03907A38 CSEL W0, W2, W0, GT
	0x03907A3C RET
	0x03907A40 STR X30, [X31 - 0x30]!
	0x03907A44 STP X22, X21, [X31 + 0x10]
	0x03907A48 STP X20, X19, [X31 + 0x20]
	0x03907A4C ADRP X21, 0xADA000
	0x03907A50 ADRP X22, 0x7F3000
	0x03907A54 ADRP X19, 0x7F3000
	0x03907A58 ADRP X20, 0x846000
	0x03907A5C LDRB W8, [X21 + 0x7F4]
	0x03907A60 LDR X22, [X22 + 0xAC8]
	0x03907A64 LDR X19, [X19 + 0xAA0]
	0x03907A68 LDR X20, [X20 + 0xF30]
	0x03907A6C TBNZ X8, 0x0, 0x3907A9C
	0x03907A70 ADRP X0, 0x7F3000
	0x03907A74 LDR X0, [X0 + 0xAA0]
	0x03907A78 BL 0x1C16CF4
	0x03907A7C ADRP X0, 0x7F3000
	0x03907A80 LDR X0, [X0 + 0xAC8]
	0x03907A84 BL 0x1C16CF4
	0x03907A88 ADRP X0, 0x846000
	0x03907A8C LDR X0, [X0 + 0xF30]
	0x03907A90 BL 0x1C16CF4
	0x03907A94 MOVZ W8, 0x1
	0x03907A98 STRB W8, [X21 + 0x7F4]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xADB000
	006 Move X20, 0x7F6000
	007 Move W8, [X19+2016]
	008 Move X20, [X20+2536]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7F6000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2016], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+8]
	027 Move W8, 0x447A0000
	028 Move S0, W8
	029 Multiply S0, S8, S0
	030 Move X0, X31
	031 Move V8, [X31+32]
	032 Call Convert.ToInt32, V0
	033 Return X0

Method: UnityEngine.Vector4 op_Implicit(UnityEngine.ProBuilder.IntVec4 p)

Disassembly:
	0x03907C24 LDR X8, [X8]

ISIL:
	001 Return X0

Method: UnityEngine.ProBuilder.IntVec4 op_Implicit(UnityEngine.Vector4 p)

Disassembly:
	0x03907C28 LDR X8, [X8 + 0xB8]

ISIL:
	001 Return X0

