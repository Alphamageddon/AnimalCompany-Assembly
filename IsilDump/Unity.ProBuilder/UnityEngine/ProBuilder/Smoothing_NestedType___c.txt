Type: UnityEngine.ProBuilder.Smoothing/<>c

Method: System.Void .cctor()

Disassembly:
	0x039382A0 MOV W21, W1
	0x039382A4 MOV X20, X0
	0x039382A8 TBNZ X8, 0x0, 0x39382CC
	0x039382AC ADRP X0, 0x815000
	0x039382B0 LDR X0, [X0 + 0xF78]
	0x039382B4 BL 0x1C16CF4
	0x039382B8 ADRP X0, 0x815000
	0x039382BC LDR X0, [X0 + 0xF80]
	0x039382C0 BL 0x1C16CF4
	0x039382C4 MOVZ W8, 0x1
	0x039382C8 STRB W8, [X22 + 0x914]
	0x039382CC CBZ X20, 0x3938AC8
	0x039382D0 ADRP X10, 0x815000
	0x039382D4 LDR X8, [X20]
	0x039382D8 LDR X10, [X10 + 0xF78]
	0x039382DC LDRH W9, [X8 + 0x12E]
	0x039382E0 LDR X1, [X10]
	0x039382E4 CBZ X9, 0x3938308
	0x039382E8 LDR X10, [X8 + 0xB0]
	0x039382EC ADD X10, X10, 0x8
	0x039382F0 LDUR X11, [X10 - 0x8]
	0x039382F4 CMP X11, X1
	0x039382F8 B.EQ 0x3938318

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xAAA000
	005 Move X20, 0x817000
	006 Move W8, [X19+2320]
	007 Move X20, [X20+3464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x817000
	013 Move X0, [X0+3464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2320], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x039382FC SUBS X9, X9, 0x1
	0x03938300 ADD X10, X10, 0x10

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <GetUnusedSmoothingGroup>b__5_0(UnityEngine.ProBuilder.Face x)

Disassembly:
	0x03938304 B.NE 0x39382F0
	0x03938308 MOV X0, X20
	0x0393830C MOV W2, W31
	0x03938310 BL 0x1C5C788
	0x03938314 B 0x3938324
	0x03938318 LDRSW X9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move W0, [X1+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Int32 <ApplySmoothingGroups>b__9_0(UnityEngine.ProBuilder.Face x)

Disassembly:
	0x0393831C ADD X8, X8, X9, 0x4, LSL
	0x03938320 ADD X0, X8, 0x138
	0x03938324 LDP X8, X1, [X0]
	0x03938328 ADRP X28, 0x815000
	0x0393832C LDR X28, [X28 + 0xF80]
	0x03938330 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move W0, [X1+24]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

