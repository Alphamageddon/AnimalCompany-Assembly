Type: UnityEngine.ProBuilder.MeshHandles

Method: System.Void CreateFaceMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target)

Disassembly:
	0x0390C938 LDR X8, [X27]
	0x0390C93C CBZ X21, 0x390D030
	0x0390C940 LDR X9, [X8 + 0xB8]
	0x0390C944 LDR X8, [X21]
	0x0390C948 LDR X1, [X29]
	0x0390C94C LDR X26, [X9 + 0x8]
	0x0390C950 LDRH W9, [X8 + 0x12E]
	0x0390C954 CBZ X9, 0x390C978
	0x0390C958 LDR X10, [X8 + 0xB0]
	0x0390C95C ADD X10, X10, 0x8
	0x0390C960 LDUR X11, [X10 - 0x8]
	0x0390C964 CMP X11, X1
	0x0390C968 B.EQ 0x390C988
	0x0390C96C SUBS X9, X9, 0x1
	0x0390C970 ADD X10, X10, 0x10
	0x0390C974 B.NE 0x390C960
	0x0390C978 MOV X0, X21
	0x0390C97C MOV W2, W31
	0x0390C980 BL 0x1C5C788
	0x0390C984 B 0x390C994
	0x0390C988 LDRSW X9, [X10]
	0x0390C98C ADD X8, X8, X9, 0x4, LSL
	0x0390C990 ADD X0, X8, 0x138
	0x0390C994 LDP X8, X2, [X0]
	0x0390C998 MOV X0, X21
	0x0390C99C MOV W1, W25
	0x0390C9A0 BLR X8
	0x0390C9A4 CBZ X26, 0x390D030
	0x0390C9A8 LDR W10, [X26 + 0x1C]
	0x0390C9AC LDR X9, [X26 + 0x10]
	0x0390C9B0 LDR X8, [X23]
	0x0390C9B4 ADD W10, W10, 0x1
	0x0390C9B8 STR W10, [X26 + 0x1C]
	0x0390C9BC CBZ X9, 0x390D030
	0x0390C9C0 LDRSW X10, [X26 + 0x18]
	0x0390C9C4 LDR W11, [X9 + 0x18]
	0x0390C9C8 CMP W10, W11
	0x0390C9CC B.CS 0x390C9E8
	0x0390C9D0 ADD W8, W10, 0x1
	0x0390C9D4 MADD X9, X10, X28, X9
	0x0390C9D8 STR W8, [X26 + 0x18]
	0x0390C9DC STP S0, S1, [X9 + 0x20]
	0x0390C9E0 STR S2, [X9 + 0x28]
	0x0390C9E4 B 0x390C9FC
	0x0390C9E8 LDR X8, [X8 + 0x20]
	0x0390C9EC MOV X0, X26
	0x0390C9F0 LDR X8, [X8 + 0xC0]
	0x0390C9F4 LDR X1, [X8 + 0x70]
	0x0390C9F8 BL 0x30CC1B4
	0x0390C9FC LDR X9, [X27]
	0x0390CA00 LDR X8, [X21]
	0x0390CA04 LDR X1, [X29]
	0x0390CA08 LDR X10, [X9 + 0xB8]
	0x0390CA0C LDRH W9, [X8 + 0x12E]
	0x0390CA10 LDR X26, [X10 + 0x8]
	0x0390CA14 CBZ X9, 0x390CA38
	0x0390CA18 LDR X10, [X8 + 0xB0]
	0x0390CA1C ADD X10, X10, 0x8
	0x0390CA20 LDUR X11, [X10 - 0x8]
	0x0390CA24 CMP X11, X1
	0x0390CA28 B.EQ 0x390CA48
	0x0390CA2C SUBS X9, X9, 0x1
	0x0390CA30 ADD X10, X10, 0x10
	0x0390CA34 B.NE 0x390CA20
	0x0390CA38 MOV X0, X21
	0x0390CA3C MOV W2, W31
	0x0390CA40 BL 0x1C5C788
	0x0390CA44 B 0x390CA54
	0x0390CA48 LDRSW X9, [X10]
	0x0390CA4C ADD X8, X8, X9, 0x4, LSL
	0x0390CA50 ADD X0, X8, 0x138
	0x0390CA54 LDP X8, X2, [X0]
	0x0390CA58 MOV X0, X21
	0x0390CA5C MOV W1, W25
	0x0390CA60 BLR X8
	0x0390CA64 CBZ X26, 0x390D030
	0x0390CA68 LDR W10, [X26 + 0x1C]
	0x0390CA6C LDR X8, [X26 + 0x10]
	0x0390CA70 LDR X9, [X23]
	0x0390CA74 ADD W10, W10, 0x1
	0x0390CA78 STR W10, [X26 + 0x1C]
	0x0390CA7C CBZ X8, 0x390D030
	0x0390CA80 LDRSW X10, [X26 + 0x18]
	0x0390CA84 LDR W11, [X8 + 0x18]
	0x0390CA88 CMP W10, W11
	0x0390CA8C B.CS 0x390CAA8
	0x0390CA90 ADD W9, W10, 0x1
	0x0390CA94 MADD X8, X10, X28, X8
	0x0390CA98 STR W9, [X26 + 0x18]
	0x0390CA9C STP S0, S1, [X8 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAD6000
	010 Move W8, [X21+2052]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x842000
	018 Move X0, [X0+4000]
	019 Call 0x1C17CF4
	020 Move X0, 0x7EA000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move X0, 0x842000
	024 Move X0, [X0+4008]
	025 Call 0x1C17CF4
	026 Move X0, 0x842000
	027 Move X0, [X0+4016]
	028 Call 0x1C17CF4
	029 Move X0, 0x842000
	030 Move X0, [X0+4024]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2052], W8
	034 Compare X19, 0
	035 JumpIfEqual {107}
	036 Move X0, X19
	037 Move X1, X31
	038 Call Mesh.Clear, X0
	039 Compare X20, 0
	040 JumpIfEqual {107}
	041 Move X1, [X20+88]
	042 Move X23, 0x842000
	043 Move X23, [X23+4024]
	044 Move X0, X19
	045 Move X2, X31
	046 Call Mesh.set_vertices, X0, X1
	047 Move X0, X20
	048 Move X1, X31
	049 Call ProBuilderMesh.get_selectedFacesInternal, X0
	050 Move X8, [X23]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X23]
	058 Move X9, [X8+184]
	059 Move X25, 0x842000
	060 Move X24, 0x7EA000
	061 Move X21, [X9+8]
	062 Move X25, [X25+4000]
	063 Move X24, [X24+2504]
	064 Compare X21, 0
	065 JumpIfNotEqual {88}
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {72}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X8, [X23]
	072 Move X9, 0x842000
	073 Move X8, [X8+184]
	074 Move X9, [X9+4008]
	075 Move X22, [X8]
	076 Move X0, [X9]
	077 Call 0x1C17F10
	078 Move X8, 0x842000
	079 Move X8, [X8+4016]
	080 Move X1, X22
	081 Move X3, X31
	082 Move X21, X0
	083 Move X2, [X8]
	084 Call Func`2<Object, Object>..ctor, X0, X1, X2
	085 Move X8, [X23]
	086 Move X8, [X8+184]
	087 Move [X8+8], X21
	088 Move X2, [X25]
	089 Move X0, X20
	090 Move X1, X21
	091 Call Enumerable.SelectMany, X0, X1
	092 Move X1, [X24]
	093 Call Enumerable.ToArray, X0
	094 Move X1, X0
	095 Move X0, X19
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X24, [X31+16]
	101 Move X23, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Call Mesh.set_triangles, X0, X1
	106 Return 
	107 Call 0x1C17F20

Method: System.Void CreateFaceMeshFromFaces(UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.IList`1<UnityEngine.ProBuilder.Face> faces, UnityEngine.Mesh target)

Disassembly:
	0x0390CAA0 STR S2, [X8 + 0x28]
	0x0390CAA4 B 0x390CABC
	0x0390CAA8 LDR X8, [X9 + 0x20]
	0x0390CAAC MOV X0, X26
	0x0390CAB0 LDR X8, [X8 + 0xC0]
	0x0390CAB4 LDR X1, [X8 + 0x70]
	0x0390CAB8 BL 0x30CC1B4
	0x0390CABC LDR X9, [X27]
	0x0390CAC0 LDR X8, [X21]
	0x0390CAC4 LDR X1, [X29]
	0x0390CAC8 LDR X10, [X9 + 0xB8]
	0x0390CACC LDRH W9, [X8 + 0x12E]
	0x0390CAD0 LDR X26, [X10 + 0x8]
	0x0390CAD4 CBZ X9, 0x390CAF8
	0x0390CAD8 LDR X10, [X8 + 0xB0]
	0x0390CADC ADD X10, X10, 0x8
	0x0390CAE0 LDUR X11, [X10 - 0x8]
	0x0390CAE4 CMP X11, X1
	0x0390CAE8 B.EQ 0x390CB08
	0x0390CAEC SUBS X9, X9, 0x1
	0x0390CAF0 ADD X10, X10, 0x10
	0x0390CAF4 B.NE 0x390CAE0
	0x0390CAF8 MOV X0, X21
	0x0390CAFC MOV W2, W31
	0x0390CB00 BL 0x1C5C788
	0x0390CB04 B 0x390CB14
	0x0390CB08 LDRSW X9, [X10]
	0x0390CB0C ADD X8, X8, X9, 0x4, LSL
	0x0390CB10 ADD X0, X8, 0x138
	0x0390CB14 LDP X8, X2, [X0]
	0x0390CB18 MOV X0, X21
	0x0390CB1C MOV W1, W25
	0x0390CB20 BLR X8
	0x0390CB24 CBZ X26, 0x390D030
	0x0390CB28 LDR W10, [X26 + 0x1C]
	0x0390CB2C LDR X8, [X26 + 0x10]
	0x0390CB30 LDR X9, [X23]
	0x0390CB34 ADD W10, W10, 0x1
	0x0390CB38 STR W10, [X26 + 0x1C]
	0x0390CB3C CBZ X8, 0x390D030
	0x0390CB40 LDRSW X10, [X26 + 0x18]
	0x0390CB44 LDR W11, [X8 + 0x18]
	0x0390CB48 CMP W10, W11
	0x0390CB4C B.CS 0x390CB68
	0x0390CB50 ADD W9, W10, 0x1
	0x0390CB54 MADD X8, X10, X28, X8
	0x0390CB58 STR W9, [X26 + 0x18]
	0x0390CB5C STP S0, S1, [X8 + 0x20]
	0x0390CB60 STR S2, [X8 + 0x28]
	0x0390CB64 B 0x390CB7C
	0x0390CB68 LDR X8, [X9 + 0x20]
	0x0390CB6C MOV X0, X26
	0x0390CB70 LDR X8, [X8 + 0xC0]
	0x0390CB74 LDR X1, [X8 + 0x70]
	0x0390CB78 BL 0x30CC1B4
	0x0390CB7C LDR X9, [X27]
	0x0390CB80 LDR X8, [X21]
	0x0390CB84 LDR X1, [X29]
	0x0390CB88 LDR X10, [X9 + 0xB8]
	0x0390CB8C LDRH W9, [X8 + 0x12E]
	0x0390CB90 LDR X26, [X10 + 0x8]
	0x0390CB94 CBZ X9, 0x390CBB8
	0x0390CB98 LDR X10, [X8 + 0xB0]
	0x0390CB9C ADD X10, X10, 0x8
	0x0390CBA0 LDUR X11, [X10 - 0x8]
	0x0390CBA4 CMP X11, X1
	0x0390CBA8 B.EQ 0x390CBC8
	0x0390CBAC SUBS X9, X9, 0x1
	0x0390CBB0 ADD X10, X10, 0x10
	0x0390CBB4 B.NE 0x390CBA0
	0x0390CBB8 MOV X0, X21
	0x0390CBBC MOV W2, W31
	0x0390CBC0 BL 0x1C5C788
	0x0390CBC4 B 0x390CBD4
	0x0390CBC8 LDRSW X9, [X10]
	0x0390CBCC ADD X8, X8, X9, 0x4, LSL
	0x0390CBD0 ADD X0, X8, 0x138
	0x0390CBD4 LDP X8, X2, [X0]
	0x0390CBD8 MOV X0, X21
	0x0390CBDC MOV W1, W25
	0x0390CBE0 BLR X8
	0x0390CBE4 CBZ X26, 0x390D030
	0x0390CBE8 LDR W10, [X26 + 0x1C]
	0x0390CBEC LDR X8, [X26 + 0x10]
	0x0390CBF0 LDR X9, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xAD6000
	010 Move W8, [X22+2053]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x842000
	019 Move X0, [X0+4000]
	020 Call 0x1C17CF4
	021 Move X0, 0x7EA000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0x842000
	025 Move X0, [X0+4008]
	026 Call 0x1C17CF4
	027 Move X0, 0x842000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move X0, 0x842000
	031 Move X0, [X0+4024]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2053], W8
	035 Compare X19, 0
	036 JumpIfEqual {102}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Mesh.Clear, X0
	040 Compare X21, 0
	041 JumpIfEqual {102}
	042 Move X1, [X21+88]
	043 Move X23, 0x842000
	044 Move X23, [X23+4024]
	045 Move X0, X19
	046 Move X2, X31
	047 Call Mesh.set_vertices, X0, X1
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X23]
	054 Move X8, [X0+184]
	055 Move X25, 0x842000
	056 Move X24, 0x7EA000
	057 Move X21, [X8+16]
	058 Move X25, [X25+4000]
	059 Move X24, [X24+2504]
	060 Compare X21, 0
	061 JumpIfNotEqual {83}
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X23]
	067 Move X9, 0x842000
	068 Move X8, [X0+184]
	069 Move X9, [X9+4008]
	070 Move X22, [X8]
	071 Move X0, [X9]
	072 Call 0x1C17F10
	073 Move X8, 0x842000
	074 Move X8, [X8+4032]
	075 Move X1, X22
	076 Move X3, X31
	077 Move X21, X0
	078 Move X2, [X8]
	079 Call Func`2<Object, Object>..ctor, X0, X1, X2
	080 Move X8, [X23]
	081 Move X8, [X8+184]
	082 Move [X8+16], X21
	083 Move X2, [X25]
	084 Move X0, X20
	085 Move X1, X21
	086 Call Enumerable.SelectMany, X0, X1
	087 Move X1, [X24]
	088 Call Enumerable.ToArray, X0
	089 Move X1, X0
	090 Move X0, X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X2, X31
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 Call Mesh.set_triangles, X0, X1
	101 Return 
	102 Call 0x1C17F20

Method: System.Void CreateEdgeMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target)

Disassembly:
	0x0390CBF4 ADD W10, W10, 0x1
	0x0390CBF8 STR W10, [X26 + 0x1C]
	0x0390CBFC CBZ X8, 0x390D030
	0x0390CC00 LDRSW X10, [X26 + 0x18]
	0x0390CC04 LDR W11, [X8 + 0x18]
	0x0390CC08 CMP W10, W11
	0x0390CC0C B.CS 0x390CC28
	0x0390CC10 ADD W9, W10, 0x1
	0x0390CC14 MADD X8, X10, X28, X8
	0x0390CC18 STR W9, [X26 + 0x18]
	0x0390CC1C STP S0, S1, [X8 + 0x20]
	0x0390CC20 STR S2, [X8 + 0x28]
	0x0390CC24 B 0x390CC3C
	0x0390CC28 LDR X8, [X9 + 0x20]
	0x0390CC2C MOV X0, X26
	0x0390CC30 LDR X8, [X8 + 0xC0]
	0x0390CC34 LDR X1, [X8 + 0x70]
	0x0390CC38 BL 0x30CC1B4
	0x0390CC3C LDR X8, [X27]
	0x0390CC40 LDR X8, [X8 + 0xB8]
	0x0390CC44 LDR X0, [X8]
	0x0390CC48 CBZ X0, 0x390D030
	0x0390CC4C LDR W10, [X0 + 0x1C]
	0x0390CC50 LDP S0, S1, [X8 + 0x28]
	0x0390CC54 LDR X8, [X0 + 0x10]
	0x0390CC58 LDR X9, [X23]
	0x0390CC5C ADD W10, W10, 0x1
	0x0390CC60 STR W10, [X0 + 0x1C]
	0x0390CC64 CBZ X8, 0x390D030
	0x0390CC68 LDRSW X10, [X0 + 0x18]
	0x0390CC6C LDR W11, [X8 + 0x18]
	0x0390CC70 CMP W10, W11
	0x0390CC74 B.CS 0x390CC90
	0x0390CC78 ADD W9, W10, 0x1
	0x0390CC7C MADD X8, X10, X28, X8
	0x0390CC80 STR W9, [X0 + 0x18]
	0x0390CC84 STP S0, S1, [X8 + 0x20]
	0x0390CC88 STR W31, [X8 + 0x28]
	0x0390CC8C B 0x390CCA4
	0x0390CC90 LDR X8, [X9 + 0x20]
	0x0390CC94 FMOV S2, W31
	0x0390CC98 LDR X8, [X8 + 0xC0]
	0x0390CC9C LDR X1, [X8 + 0x70]
	0x0390CCA0 BL 0x30CC1B4
	0x0390CCA4 LDR X8, [X27]
	0x0390CCA8 LDR X8, [X8 + 0xB8]
	0x0390CCAC LDR X0, [X8]
	0x0390CCB0 CBZ X0, 0x390D030
	0x0390CCB4 LDR W10, [X0 + 0x1C]
	0x0390CCB8 LDP S0, S1, [X8 + 0x30]
	0x0390CCBC LDR X8, [X0 + 0x10]
	0x0390CCC0 LDR X9, [X23]
	0x0390CCC4 ADD W10, W10, 0x1
	0x0390CCC8 STR W10, [X0 + 0x1C]
	0x0390CCCC CBZ X8, 0x390D030
	0x0390CCD0 LDRSW X10, [X0 + 0x18]
	0x0390CCD4 LDR W11, [X8 + 0x18]
	0x0390CCD8 CMP W10, W11
	0x0390CCDC B.CS 0x390CCF8
	0x0390CCE0 ADD W9, W10, 0x1
	0x0390CCE4 MADD X8, X10, X28, X8
	0x0390CCE8 STR W9, [X0 + 0x18]
	0x0390CCEC STP S0, S1, [X8 + 0x20]
	0x0390CCF0 STR W31, [X8 + 0x28]
	0x0390CCF4 B 0x390CD0C
	0x0390CCF8 LDR X8, [X9 + 0x20]
	0x0390CCFC FMOV S2, W31
	0x0390CD00 LDR X8, [X8 + 0xC0]
	0x0390CD04 LDR X1, [X8 + 0x70]
	0x0390CD08 BL 0x30CC1B4
	0x0390CD0C LDR X8, [X27]
	0x0390CD10 LDR X8, [X8 + 0xB8]
	0x0390CD14 LDR X0, [X8]
	0x0390CD18 CBZ X0, 0x390D030
	0x0390CD1C LDR W10, [X0 + 0x1C]
	0x0390CD20 LDP S0, S1, [X8 + 0x38]
	0x0390CD24 LDR X8, [X0 + 0x10]
	0x0390CD28 LDR X9, [X23]
	0x0390CD2C ADD W10, W10, 0x1
	0x0390CD30 STR W10, [X0 + 0x1C]
	0x0390CD34 CBZ X8, 0x390D030
	0x0390CD38 LDRSW X10, [X0 + 0x18]
	0x0390CD3C LDR W11, [X8 + 0x18]
	0x0390CD40 CMP W10, W11
	0x0390CD44 B.CS 0x390CD60
	0x0390CD48 ADD W9, W10, 0x1
	0x0390CD4C MADD X8, X10, X28, X8
	0x0390CD50 STR W9, [X0 + 0x18]
	0x0390CD54 STP S0, S1, [X8 + 0x20]
	0x0390CD58 STR W31, [X8 + 0x28]
	0x0390CD5C B 0x390CD74
	0x0390CD60 LDR X8, [X9 + 0x20]
	0x0390CD64 FMOV S2, W31
	0x0390CD68 LDR X8, [X8 + 0xC0]
	0x0390CD6C LDR X1, [X8 + 0x70]
	0x0390CD70 BL 0x30CC1B4
	0x0390CD74 LDR X8, [X27]
	0x0390CD78 LDR X8, [X8 + 0xB8]
	0x0390CD7C LDR X0, [X8]
	0x0390CD80 CBZ X0, 0x390D030
	0x0390CD84 LDR W10, [X0 + 0x1C]
	0x0390CD88 LDP S0, S1, [X8 + 0x40]
	0x0390CD8C LDR X8, [X0 + 0x10]
	0x0390CD90 LDR X9, [X23]
	0x0390CD94 ADD W10, W10, 0x1
	0x0390CD98 STR W10, [X0 + 0x1C]
	0x0390CD9C CBZ X8, 0x390D030
	0x0390CDA0 LDRSW X10, [X0 + 0x18]
	0x0390CDA4 LDR W11, [X8 + 0x18]
	0x0390CDA8 CMP W10, W11
	0x0390CDAC B.CS 0x390CDC8
	0x0390CDB0 ADD W9, W10, 0x1
	0x0390CDB4 MADD X8, X10, X28, X8
	0x0390CDB8 STR W9, [X0 + 0x18]
	0x0390CDBC STP S0, S1, [X8 + 0x20]
	0x0390CDC0 STR W31, [X8 + 0x28]
	0x0390CDC4 B 0x390CDDC
	0x0390CDC8 LDR X8, [X9 + 0x20]
	0x0390CDCC FMOV S2, W31
	0x0390CDD0 LDR X8, [X8 + 0xC0]
	0x0390CDD4 LDR X1, [X8 + 0x70]
	0x0390CDD8 BL 0x30CC1B4
	0x0390CDDC LDR X8, [X27]
	0x0390CDE0 LDR X8, [X8 + 0xB8]
	0x0390CDE4 LDR X0, [X8 + 0x18]
	0x0390CDE8 CBZ X0, 0x390D030
	0x0390CDEC LDR W10, [X0 + 0x1C]
	0x0390CDF0 LDR X8, [X0 + 0x10]
	0x0390CDF4 LDR X9, [X19]
	0x0390CDF8 ADD W10, W10, 0x1
	0x0390CDFC STR W10, [X0 + 0x1C]
	0x0390CE00 CBZ X8, 0x390D030
	0x0390CE04 LDRSW X10, [X0 + 0x18]
	0x0390CE08 LDR W11, [X8 + 0x18]
	0x0390CE0C UBFM W25, W24, 0x1E, 0x1D
	0x0390CE10 CMP W10, W11
	0x0390CE14 B.CS 0x390CE2C
	0x0390CE18 ADD W9, W10, 0x1
	0x0390CE1C ADD X8, X8, X10, 0x2, LSL
	0x0390CE20 STR W9, [X0 + 0x18]
	0x0390CE24 STR W25, [X8 + 0x20]
	0x0390CE28 B 0x390CE50
	0x0390CE2C LDR X8, [X9 + 0x20]
	0x0390CE30 MOV W1, W25
	0x0390CE34 LDR X8, [X8 + 0xC0]
	0x0390CE38 LDR X2, [X8 + 0x70]
	0x0390CE3C BL 0x2FDC70C
	0x0390CE40 LDR X8, [X27]
	0x0390CE44 LDR X8, [X8 + 0xB8]
	0x0390CE48 LDR X0, [X8 + 0x18]
	0x0390CE4C CBZ X0, 0x390D030
	0x0390CE50 LDR W10, [X0 + 0x1C]
	0x0390CE54 LDR X8, [X0 + 0x10]
	0x0390CE58 LDR X9, [X19]
	0x0390CE5C ADD W10, W10, 0x1
	0x0390CE60 STR W10, [X0 + 0x1C]
	0x0390CE64 CBZ X8, 0x390D030
	0x0390CE68 LDRSW X10, [X0 + 0x18]
	0x0390CE6C LDR W11, [X8 + 0x18]
	0x0390CE70 ORR W1, W25, 0x1
	0x0390CE74 CMP W10, W11
	0x0390CE78 B.CS 0x390CE90
	0x0390CE7C ADD W9, W10, 0x1
	0x0390CE80 ADD X8, X8, X10, 0x2, LSL
	0x0390CE84 STR W9, [X0 + 0x18]
	0x0390CE88 STR W1, [X8 + 0x20]
	0x0390CE8C B 0x390CEB0
	0x0390CE90 LDR X8, [X9 + 0x20]
	0x0390CE94 LDR X8, [X8 + 0xC0]
	0x0390CE98 LDR X2, [X8 + 0x70]
	0x0390CE9C BL 0x2FDC70C
	0x0390CEA0 LDR X8, [X27]
	0x0390CEA4 LDR X8, [X8 + 0xB8]
	0x0390CEA8 LDR X0, [X8 + 0x18]
	0x0390CEAC CBZ X0, 0x390D030
	0x0390CEB0 LDR W10, [X0 + 0x1C]
	0x0390CEB4 LDR X8, [X0 + 0x10]
	0x0390CEB8 LDR X9, [X19]
	0x0390CEBC ADD W10, W10, 0x1
	0x0390CEC0 STR W10, [X0 + 0x1C]
	0x0390CEC4 CBZ X8, 0x390D030
	0x0390CEC8 LDRSW X10, [X0 + 0x18]
	0x0390CECC LDR W11, [X8 + 0x18]
	0x0390CED0 ORR W1, W25, 0x3
	0x0390CED4 CMP W10, W11
	0x0390CED8 B.CS 0x390CEF0
	0x0390CEDC ADD W9, W10, 0x1
	0x0390CEE0 ADD X8, X8, X10, 0x2, LSL
	0x0390CEE4 STR W9, [X0 + 0x18]
	0x0390CEE8 STR W1, [X8 + 0x20]
	0x0390CEEC B 0x390CF10
	0x0390CEF0 LDR X8, [X9 + 0x20]
	0x0390CEF4 LDR X8, [X8 + 0xC0]
	0x0390CEF8 LDR X2, [X8 + 0x70]
	0x0390CEFC BL 0x2FDC70C
	0x0390CF00 LDR X8, [X27]
	0x0390CF04 LDR X8, [X8 + 0xB8]
	0x0390CF08 LDR X0, [X8 + 0x18]
	0x0390CF0C CBZ X0, 0x390D030
	0x0390CF10 LDR W10, [X0 + 0x1C]
	0x0390CF14 LDR X8, [X0 + 0x10]
	0x0390CF18 LDR X9, [X19]
	0x0390CF1C ADD W10, W10, 0x1
	0x0390CF20 STR W10, [X0 + 0x1C]
	0x0390CF24 CBZ X8, 0x390D030
	0x0390CF28 LDRSW X10, [X0 + 0x18]
	0x0390CF2C LDR W11, [X8 + 0x18]
	0x0390CF30 ORR W1, W25, 0x2
	0x0390CF34 CMP W10, W11
	0x0390CF38 B.CS 0x390CF50
	0x0390CF3C ADD W9, W10, 0x1
	0x0390CF40 ADD X8, X8, X10, 0x2, LSL
	0x0390CF44 STR W9, [X0 + 0x18]
	0x0390CF48 STR W1, [X8 + 0x20]
	0x0390CF4C B 0x390CF60
	0x0390CF50 LDR X8, [X9 + 0x20]
	0x0390CF54 LDR X8, [X8 + 0xC0]
	0x0390CF58 LDR X2, [X8 + 0x70]
	0x0390CF5C BL 0x2FDC70C
	0x0390CF60 ADD W24, W24, 0x1
	0x0390CF64 CMP W24, W22
	0x0390CF68 B.NE 0x390C8BC
	0x0390CF6C LDR X19, [X31 + 0x8]
	0x0390CF70 CBZ X19, 0x390D030
	0x0390CF74 MOV X0, X19
	0x0390CF78 MOV X1, X31
	0x0390CF7C BL 0x3C19C94
	0x0390CF80 LDR W8, [X31 + 0x4]
	0x0390CF84 MOV X0, X19
	0x0390CF88 MOV X2, X31
	0x0390CF8C CMP W8, 0x10000
	0x0390CF90 CSET W1, GE
	0x0390CF94 BL 0x3C170A8
	0x0390CF98 LDR X0, [X27]
	0x0390CF9C LDR W8, [X0 + 0xE0]
	0x0390CFA0 CBNZ W8, 0x390CFAC
	0x0390CFA4 BL 0x1C16DFC
	0x0390CFA8 LDR X0, [X27]
	0x0390CFAC LDR X8, [X0 + 0xB8]
	0x0390CFB0 MOV X0, X19
	0x0390CFB4 MOV X2, X31
	0x0390CFB8 LDR X1, [X8 + 0x8]
	0x0390CFBC BL 0x3C18380
	0x0390CFC0 LDR X8, [X27]
	0x0390CFC4 MOV X0, X19
	0x0390CFC8 MOV W1, W31
	0x0390CFCC MOV X3, X31
	0x0390CFD0 LDR X8, [X8 + 0xB8]
	0x0390CFD4 LDR X2, [X8]
	0x0390CFD8 BL 0x3C18A00
	0x0390CFDC MOVZ W1, 0x1
	0x0390CFE0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xAD6000
	015 Move W8, [X19+2054]
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x7E9000
	023 Move X0, [X0+3600]
	024 Call 0x1C17CF4
	025 Move X0, 0x7EF000
	026 Move X0, [X0+2136]
	027 Call 0x1C17CF4
	028 Move X0, 0x842000
	029 Move X0, [X0+4040]
	030 Call 0x1C17CF4
	031 Move X0, 0x842000
	032 Move X0, [X0+4048]
	033 Call 0x1C17CF4
	034 Move X0, 0x842000
	035 Move X0, [X0+4056]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+2054], W8
	039 Compare X20, 0
	040 JumpIfEqual {275}
	041 Move X0, X20
	042 Move X1, X31
	043 Call ProBuilderMesh.get_faceCount, X0
	044 Move W22, W0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W26, W31
	047 Move W19, W31
	048 Move X8, [X20+40]
	049 Compare X8, 0
	050 JumpIfEqual {275}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, W19
	054 Move X0, [X8+32]
	055 Compare X0, 0
	056 JumpIfEqual {275}
	057 Move X8, [X0+96]
	058 Compare X8, 0
	059 JumpIfNotEqual {64}
	060 Call Face.CacheEdges, X0
	061 Move X8, X0
	062 Compare X0, 0
	063 JumpIfEqual {275}
	064 Move W8, [X8+24]
	065 Add W19, W19, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W26, W26, W8
	068 Move W26, W31
	069 Move X25, 0x842000
	070 Move X25, [X25+4048]
	071 Move [X31+16], X21
	072 Move X0, [X25]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X25]
	078 Move X8, [X0+184]
	079 Move X0, [X8+24]
	080 Compare X0, 0
	081 JumpIfEqual {275}
	082 Move W8, [X0+28]
	083 Move X9, 0x842000
	084 Move X9, [X9+4040]
	085 Move W1, W26
	086 ShiftRight W1, 31
	087 And W1, W1, 0x3FFFFFFF
	088 Add W8, W8, 1
	089 Move [X0+24], W31
	090 Move [X0+28], W8
	091 Move X2, [X9]
	092 Move [X31+12], W1
	093 Call List`1<Int32>.set_Capacity, X0, X1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X31+24], W22
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X29, 0x7E9000
	098 Move X29, [X29+3600]
	099 Move W27, W31
	100 Move W28, W31
	101 Move X8, [X20+40]
	102 Compare X8, 0
	103 JumpIfEqual {275}
	104 Move X22, X31
	105 Move X19, W28
	106 Move W21, W27
	107 Move W9, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X8, X19
	110 Move X8, [X8+32]
	111 Compare X8, 0
	112 JumpIfEqual {275}
	113 Move X0, [X8+96]
	114 Compare X0, 0
	115 JumpIfNotEqual {120}
	116 Move X0, X8
	117 Call Face.CacheEdges, X0
	118 Compare X0, 0
	119 JumpIfEqual {275}
	120 Add X8, X21, X22
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, [X20+40]
	125 Compare X8, 0
	126 JumpIfEqual {275}
	127 Move W9, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Add X8, X8, X19
	130 Move X8, [X8+32]
	131 Compare X8, 0
	132 JumpIfEqual {275}
	133 Move X0, [X8+96]
	134 Compare X0, 0
	135 JumpIfNotEqual {140}
	136 Move X0, X8
	137 Call Face.CacheEdges, X0
	138 Compare X0, 0
	139 JumpIfEqual {275}
	140 Move W8, [X0+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X25]
	143 Add X9, X0, X22
	144 Move W24, [X9+32]
	145 Move W23, [X9+36]
	146 Move W10, [X8+224]
	147 Compare W10, 0
	148 JumpIfNotEqual {152}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X8, [X25]
	152 Move X8, [X8+184]
	153 Move X0, [X8+24]
	154 Compare X0, 0
	155 JumpIfEqual {275}
	156 Move W10, [X0+28]
	157 Move X8, [X0+16]
	158 Move X9, [X29]
	159 Add W10, W10, 1
	160 Move [X0+28], W10
	161 Compare X8, 0
	162 JumpIfEqual {275}
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Move W11, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add W9, W10, 1
	167 Add X8, X8, X10
	168 Move [X0+24], W9
	169 Move [X8+32], W24
	170 Move X8, [X9+32]
	171 Move W1, W24
	172 Move X8, [X8+192]
	173 Move X2, [X8+112]
	174 Call List`1<Int32>.AddWithResize, X0, X1
	175 Move X8, [X25]
	176 Move X8, [X8+184]
	177 Move X0, [X8+24]
	178 Compare X0, 0
	179 JumpIfEqual {275}
	180 Move W10, [X0+28]
	181 Move X8, [X0+16]
	182 Move X9, [X29]
	183 Add W10, W10, 1
	184 Move [X0+28], W10
	185 Compare X8, 0
	186 JumpIfEqual {275}
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Move W11, [X8+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W9, W10, 1
	191 Add X8, X8, X10
	192 Move [X0+24], W9
	193 Move [X8+32], W23
	194 Move X8, [X9+32]
	195 Move W1, W23
	196 Move X8, [X8+192]
	197 Move X2, [X8+112]
	198 Call List`1<Int32>.AddWithResize, X0, X1
	199 Move X8, [X20+40]
	200 Add X22, X22, 1
	201 Compare X8, 0
	202 JumpIfNotEqual {107}
	203 Move W9, [X31+24]
	204 Add W28, W28, 1
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W27, W27, W22
	208 Move X21, [X31+16]
	209 Compare X21, 0
	210 JumpIfEqual {275}
	211 Move X19, 0x842000
	212 Move X19, [X19+4056]
	213 Move X0, X21
	214 Move X1, X31
	215 Call Mesh.Clear, X0
	216 Move W8, [X31+12]
	217 Move X0, X21
	218 Move X2, X31
	219 NotImplemented "Instruction CMP not yet implemented."
	220 NotImplemented "Instruction CSET not yet implemented."
	221 Call Mesh.set_indexFormat, X0, X1
	222 Move X0, X21
	223 Move X1, X31
	224 Call Object.GetInstanceID, X0
	225 Move [X31+28], W0
	226 Add X0, X31, 28
	227 Move X1, X31
	228 Call Int32.ToString, X0
	229 Move X8, [X19]
	230 Move X1, X0
	231 Move X2, X31
	232 Move X0, X8
	233 Call String.Concat, X0, X1
	234 Move X1, X0
	235 Move X0, X21
	236 Move X2, X31
	237 Call Object.set_name, X0, X1
	238 Move X1, [X20+88]
	239 Move X0, X21
	240 Move X2, X31
	241 Call Mesh.set_vertices, X0, X1
	242 Move W1, 1
	243 Move X0, X21
	244 Move X2, X31
	245 Call Mesh.set_subMeshCount, X0, X1
	246 Move X0, [X25]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {252}
	250 Call 0x1C17DFC
	251 Move X0, [X25]
	252 Move X8, [X0+184]
	253 Move W2, 3
	254 Move W4, 1
	255 Move X0, X21
	256 Move X1, [X8+24]
	257 Move W3, W31
	258 Move W5, W31
	259 Move X6, X31
	260 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	261 Move X20, [X31+112]
	262 Move X19, [X31+120]
	263 Move X22, [X31+96]
	264 Move X21, [X31+104]
	265 Move X24, [X31+80]
	266 Move X23, [X31+88]
	267 Move X26, [X31+64]
	268 Move X25, [X31+72]
	269 Move X28, [X31+48]
	270 Move X27, [X31+56]
	271 Move X29, [X31+32]
	272 Move X30, [X31+40]
	273 Add X31, X31, 128
	274 Return 
	275 Call 0x1C17F20
	276 Call 0x1C17F28

Method: System.Void CreateEdgeMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target, UnityEngine.ProBuilder.Edge[] edges)

Disassembly:
	0x0390CFE4 MOV X2, X31
	0x0390CFE8 BL 0x3C17654
	0x0390CFEC LDR X8, [X27]
	0x0390CFF0 MOV X0, X19
	0x0390CFF4 LDP X20, X19, [X31 + 0x60]
	0x0390CFF8 LDP X22, X21, [X31 + 0x50]
	0x0390CFFC LDR X8, [X8 + 0xB8]
	0x0390D000 LDP X24, X23, [X31 + 0x40]
	0x0390D004 LDP X26, X25, [X31 + 0x30]
	0x0390D008 LDP X28, X27, [X31 + 0x20]
	0x0390D00C LDR X1, [X8 + 0x18]
	0x0390D010 LDP X29, X30, [X31 + 0x10]
	0x0390D014 MOVZ W2, 0x2
	0x0390D018 MOVZ W4, 0x1
	0x0390D01C MOV W3, W31
	0x0390D020 MOV W5, W31
	0x0390D024 MOV X6, X31
	0x0390D028 ADD X31, X31, 0x70
	0x0390D02C B 0x3C19AE0
	0x0390D030 BL 0x1C16F20
	0x0390D034 STP X29, X30, [X31 - 0x60]!
	0x0390D038 STP X28, X27, [X31 + 0x10]
	0x0390D03C STP X26, X25, [X31 + 0x20]
	0x0390D040 STP X24, X23, [X31 + 0x30]
	0x0390D044 STP X22, X21, [X31 + 0x40]
	0x0390D048 STP X20, X19, [X31 + 0x50]
	0x0390D04C ADRP X21, 0xAD4000
	0x0390D050 LDRB W8, [X21 + 0x80B]
	0x0390D054 MOV X19, X1
	0x0390D058 MOV X20, X0
	0x0390D05C TBNZ X8, 0x0, 0x390D0D4
	0x0390D060 ADRP X0, 0x840000
	0x0390D064 LDR X0, [X0 + 0xF78]
	0x0390D068 BL 0x1C16CF4
	0x0390D06C ADRP X0, 0x840000
	0x0390D070 LDR X0, [X0 + 0xF80]
	0x0390D074 BL 0x1C16CF4
	0x0390D078 ADRP X0, 0x7E7000
	0x0390D07C LDR X0, [X0 + 0xE10]
	0x0390D080 BL 0x1C16CF4
	0x0390D084 ADRP X0, 0x7EA000
	0x0390D088 LDR X0, [X0 + 0x3B8]
	0x0390D08C BL 0x1C16CF4
	0x0390D090 ADRP X0, 0x7EA000
	0x0390D094 LDR X0, [X0 + 0x380]
	0x0390D098 BL 0x1C16CF4
	0x0390D09C ADRP X0, 0x7ED000
	0x0390D0A0 LDR X0, [X0 + 0x858]
	0x0390D0A4 BL 0x1C16CF4
	0x0390D0A8 ADRP X0, 0x840000
	0x0390D0AC LDR X0, [X0 + 0xFC8]
	0x0390D0B0 BL 0x1C16CF4
	0x0390D0B4 ADRP X0, 0x840000
	0x0390D0B8 LDR X0, [X0 + 0xFE8]
	0x0390D0BC BL 0x1C16CF4
	0x0390D0C0 ADRP X0, 0x840000
	0x0390D0C4 LDR X0, [X0 + 0xFD0]
	0x0390D0C8 BL 0x1C16CF4
	0x0390D0CC MOVZ W8, 0x1
	0x0390D0D0 STRB W8, [X21 + 0x80B]
	0x0390D0D4 CBZ X20, 0x390D914
	0x0390D0D8 ADRP X10, 0x840000
	0x0390D0DC LDR X8, [X20]
	0x0390D0E0 LDR X10, [X10 + 0xF78]
	0x0390D0E4 ADRP X25, 0x840000
	0x0390D0E8 LDRH W9, [X8 + 0x12E]
	0x0390D0EC LDR X1, [X10]
	0x0390D0F0 LDR X25, [X25 + 0xFD0]
	0x0390D0F4 CBZ X9, 0x390D118
	0x0390D0F8 LDR X10, [X8 + 0xB0]
	0x0390D0FC ADD X10, X10, 0x8
	0x0390D100 LDUR X11, [X10 - 0x8]
	0x0390D104 CMP X11, X1
	0x0390D108 B.EQ 0x390D128
	0x0390D10C SUBS X9, X9, 0x1
	0x0390D110 ADD X10, X10, 0x10
	0x0390D114 B.NE 0x390D100
	0x0390D118 MOV X0, X20
	0x0390D11C MOV W2, W31
	0x0390D120 BL 0x1C5C788
	0x0390D124 B 0x390D134
	0x0390D128 LDRSW X9, [X10]
	0x0390D12C ADD X8, X8, X9, 0x4, LSL
	0x0390D130 ADD X0, X8, 0x138
	0x0390D134 LDP X8, X1, [X0]
	0x0390D138 MOV X0, X20
	0x0390D13C BLR X8
	0x0390D140 LDR X8, [X25]
	0x0390D144 MOV W21, W0
	0x0390D148 LDR W9, [X8 + 0xE0]
	0x0390D14C CBNZ W9, 0x390D15C
	0x0390D150 MOV X0, X8
	0x0390D154 BL 0x1C16DFC
	0x0390D158 LDR X8, [X25]
	0x0390D15C LDR X8, [X8 + 0xB8]
	0x0390D160 LDR X0, [X8]
	0x0390D164 CBZ X0, 0x390D914
	0x0390D168 LDR W9, [X0 + 0x1C]
	0x0390D16C ADD W9, W9, 0x1
	0x0390D170 STP W31, W9, [X0 + 0x18]
	0x0390D174 LDR X9, [X8 + 0x8]
	0x0390D178 CBZ X9, 0x390D914
	0x0390D17C LDR W10, [X9 + 0x1C]
	0x0390D180 ADD W10, W10, 0x1
	0x0390D184 STP W31, W10, [X9 + 0x18]
	0x0390D188 LDR X8, [X8 + 0x18]
	0x0390D18C CBZ X8, 0x390D914
	0x0390D190 LDR W9, [X8 + 0x1C]
	0x0390D194 ADRP X23, 0x840000
	0x0390D198 LDR X23, [X23 + 0xFE8]
	0x0390D19C UBFM W22, W21, 0x1E, 0x1D
	0x0390D1A0 ADD W9, W9, 0x1
	0x0390D1A4 STP W31, W9, [X8 + 0x18]
	0x0390D1A8 LDR X2, [X23]
	0x0390D1AC MOV W1, W22
	0x0390D1B0 BL 0x30CBD00
	0x0390D1B4 LDR X8, [X25]
	0x0390D1B8 LDR X8, [X8 + 0xB8]
	0x0390D1BC LDR X0, [X8 + 0x8]
	0x0390D1C0 CBZ X0, 0x390D914
	0x0390D1C4 LDR X2, [X23]
	0x0390D1C8 MOV W1, W22
	0x0390D1CC BL 0x30CBD00
	0x0390D1D0 LDR X8, [X25]
	0x0390D1D4 LDR X8, [X8 + 0xB8]
	0x0390D1D8 LDR X0, [X8 + 0x18]
	0x0390D1DC CBZ X0, 0x390D914
	0x0390D1E0 ADRP X8, 0x840000
	0x0390D1E4 LDR X8, [X8 + 0xFC8]
	0x0390D1E8 MOV W1, W22
	0x0390D1EC LDR X2, [X8]
	0x0390D1F0 BL 0x2FDC298
	0x0390D1F4 CMP W21, 0x1
	0x0390D1F8 B.LT 0x390D85C
	0x0390D1FC ADRP X26, 0x840000
	0x0390D200 ADRP X27, 0x7EA000
	0x0390D204 ADRP X28, 0x7E7000
	0x0390D208 LDR X26, [X26 + 0xF80]
	0x0390D20C LDR X27, [X27 + 0x3B8]
	0x0390D210 LDR X28, [X28 + 0xE10]
	0x0390D214 MOV W23, W31
	0x0390D218 MOVZ W29, 0xC
	0x0390D21C LDR X0, [X25]
	0x0390D220 LDR W8, [X0 + 0xE0]
	0x0390D224 CBNZ W8, 0x390D230
	0x0390D228 BL 0x1C16DFC
	0x0390D22C LDR X0, [X25]
	0x0390D230 LDR X9, [X0 + 0xB8]
	0x0390D234 LDR X8, [X20]
	0x0390D238 LDR X1, [X26]
	0x0390D23C LDR X24, [X9 + 0x8]
	0x0390D240 LDRH W9, [X8 + 0x12E]
	0x0390D244 CBZ X9, 0x390D268
	0x0390D248 LDR X10, [X8 + 0xB0]
	0x0390D24C ADD X10, X10, 0x8
	0x0390D250 LDUR X11, [X10 - 0x8]
	0x0390D254 CMP X11, X1
	0x0390D258 B.EQ 0x390D278
	0x0390D25C SUBS X9, X9, 0x1
	0x0390D260 ADD X10, X10, 0x10
	0x0390D264 B.NE 0x390D250
	0x0390D268 MOV X0, X20
	0x0390D26C MOV W2, W31
	0x0390D270 BL 0x1C5C788
	0x0390D274 B 0x390D284
	0x0390D278 LDRSW X9, [X10]
	0x0390D27C ADD X8, X8, X9, 0x4, LSL
	0x0390D280 ADD X0, X8, 0x138
	0x0390D284 LDP X8, X2, [X0]
	0x0390D288 MOV X0, X20
	0x0390D28C MOV W1, W23
	0x0390D290 BLR X8
	0x0390D294 CBZ X24, 0x390D914
	0x0390D298 LDR W10, [X24 + 0x1C]
	0x0390D29C LDR X9, [X24 + 0x10]
	0x0390D2A0 LDR X8, [X27]
	0x0390D2A4 ADD W10, W10, 0x1
	0x0390D2A8 STR W10, [X24 + 0x1C]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0xAD5000
	015 Move W8, [X22+2055]
	016 Move X21, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x7E8000
	024 Move X0, [X0+3600]
	025 Call 0x1C17CF4
	026 Move X0, 0x7EE000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move X0, 0x841000
	030 Move X0, [X0+4040]
	031 Call 0x1C17CF4
	032 Move X0, 0x841000
	033 Move X0, [X0+4048]
	034 Call 0x1C17CF4
	035 Move X0, 0x841000
	036 Move X0, [X0+4056]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2055], W8
	040 Compare X21, 0
	041 JumpIfEqual {200}
	042 Move X25, 0x841000
	043 Move X25, [X25+4048]
	044 Move X23, [X21+24]
	045 Move X0, [X25]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X25]
	051 Move X8, [X0+184]
	052 Move X0, [X8+24]
	053 Compare X0, 0
	054 JumpIfEqual {200}
	055 Move W8, [X0+28]
	056 Move X9, 0x841000
	057 Move X9, [X9+4040]
	058 Move W22, W23
	059 ShiftRight W22, 31
	060 And W22, W22, 0x3FFFFFFF
	061 Add W8, W8, 1
	062 Move [X0+24], W31
	063 Move [X0+28], W8
	064 Move X2, [X9]
	065 Move W1, W22
	066 Call List`1<Int32>.set_Capacity, X0, X1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X27, 0x7E8000
	069 Move X27, [X27+3600]
	070 Move X26, X31
	071 And X28, X23, 0
	072 Add X29, X21, 32
	073 Move W8, [X21+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X25]
	076 Add X8, X29, X26
	077 Move W24, [X8]
	078 Move W23, [X8+4]
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X25]
	084 Move X8, [X0+184]
	085 Move X0, [X8+24]
	086 Compare X0, 0
	087 JumpIfEqual {200}
	088 Move W10, [X0+28]
	089 Move X8, [X0+16]
	090 Move X9, [X27]
	091 Add W10, W10, 1
	092 Move [X0+28], W10
	093 Compare X8, 0
	094 JumpIfEqual {200}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X0+24], W9
	101 Move [X8+32], W24
	102 Move X8, [X9+32]
	103 Move W1, W24
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Call List`1<Int32>.AddWithResize, X0, X1
	107 Move X8, [X25]
	108 Move X8, [X8+184]
	109 Move X0, [X8+24]
	110 Compare X0, 0
	111 JumpIfEqual {200}
	112 Move W10, [X0+28]
	113 Move X8, [X0+16]
	114 Move X9, [X27]
	115 Add W10, W10, 1
	116 Move [X0+28], W10
	117 Compare X8, 0
	118 JumpIfEqual {200}
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Move W11, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add W9, W10, 1
	123 Add X8, X8, X10
	124 Move [X0+24], W9
	125 Move [X8+32], W23
	126 Move X8, [X9+32]
	127 Move W1, W23
	128 Move X8, [X8+192]
	129 Move X2, [X8+112]
	130 Call List`1<Int32>.AddWithResize, X0, X1
	131 Add X26, X26, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare X19, 0
	134 JumpIfEqual {200}
	135 Move X21, 0x841000
	136 Move X21, [X21+4056]
	137 Move X0, X19
	138 Move X1, X31
	139 Call Mesh.Clear, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CSET not yet implemented."
	142 Move X0, X19
	143 Move X2, X31
	144 Call Mesh.set_indexFormat, X0, X1
	145 Move X0, X19
	146 Move X1, X31
	147 Call Object.GetInstanceID, X0
	148 Move [X31+12], W0
	149 Add X0, X31, 12
	150 Move X1, X31
	151 Call Int32.ToString, X0
	152 Move X8, [X21]
	153 Move X1, X0
	154 Move X2, X31
	155 Move X0, X8
	156 Call String.Concat, X0, X1
	157 Move X1, X0
	158 Move X0, X19
	159 Move X2, X31
	160 Call Object.set_name, X0, X1
	161 Compare X20, 0
	162 JumpIfEqual {200}
	163 Move X1, [X20+88]
	164 Move X0, X19
	165 Move X2, X31
	166 Call Mesh.set_vertices, X0, X1
	167 Move W1, 1
	168 Move X0, X19
	169 Move X2, X31
	170 Call Mesh.set_subMeshCount, X0, X1
	171 Move X0, [X25]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X25]
	177 Move X8, [X0+184]
	178 Move W2, 3
	179 Move W4, 1
	180 Move X0, X19
	181 Move X1, [X8+24]
	182 Move W3, W31
	183 Move W5, W31
	184 Move X6, X31
	185 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	186 Move X20, [X31+96]
	187 Move X19, [X31+104]
	188 Move X22, [X31+80]
	189 Move X21, [X31+88]
	190 Move X24, [X31+64]
	191 Move X23, [X31+72]
	192 Move X26, [X31+48]
	193 Move X25, [X31+56]
	194 Move X28, [X31+32]
	195 Move X27, [X31+40]
	196 Move X29, [X31+16]
	197 Move X30, [X31+24]
	198 Add X31, X31, 112
	199 Return 
	200 Call 0x1C17F20
	201 Call 0x1C17F28

Method: System.Void CreateVertexMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target)

Disassembly:
	0x0390D2AC CBZ X9, 0x390D914
	0x0390D2B0 LDRSW X10, [X24 + 0x18]
	0x0390D2B4 LDR W11, [X9 + 0x18]
	0x0390D2B8 CMP W10, W11
	0x0390D2BC B.CS 0x390D2D8
	0x0390D2C0 ADD W8, W10, 0x1
	0x0390D2C4 MADD X9, X10, X29, X9
	0x0390D2C8 STR W8, [X24 + 0x18]
	0x0390D2CC STP S0, S1, [X9 + 0x20]
	0x0390D2D0 STR S2, [X9 + 0x28]
	0x0390D2D4 B 0x390D2EC
	0x0390D2D8 LDR X8, [X8 + 0x20]
	0x0390D2DC MOV X0, X24
	0x0390D2E0 LDR X8, [X8 + 0xC0]
	0x0390D2E4 LDR X1, [X8 + 0x70]
	0x0390D2E8 BL 0x30CC1B4
	0x0390D2EC LDR X9, [X25]
	0x0390D2F0 LDR X8, [X20]
	0x0390D2F4 LDR X1, [X26]
	0x0390D2F8 LDR X10, [X9 + 0xB8]
	0x0390D2FC LDRH W9, [X8 + 0x12E]
	0x0390D300 LDR X24, [X10 + 0x8]
	0x0390D304 CBZ X9, 0x390D328
	0x0390D308 LDR X10, [X8 + 0xB0]
	0x0390D30C ADD X10, X10, 0x8
	0x0390D310 LDUR X11, [X10 - 0x8]
	0x0390D314 CMP X11, X1
	0x0390D318 B.EQ 0x390D338
	0x0390D31C SUBS X9, X9, 0x1
	0x0390D320 ADD X10, X10, 0x10
	0x0390D324 B.NE 0x390D310
	0x0390D328 MOV X0, X20
	0x0390D32C MOV W2, W31
	0x0390D330 BL 0x1C5C788
	0x0390D334 B 0x390D344
	0x0390D338 LDRSW X9, [X10]
	0x0390D33C ADD X8, X8, X9, 0x4, LSL
	0x0390D340 ADD X0, X8, 0x138
	0x0390D344 LDP X8, X2, [X0]
	0x0390D348 MOV X0, X20
	0x0390D34C MOV W1, W23
	0x0390D350 BLR X8
	0x0390D354 CBZ X24, 0x390D914
	0x0390D358 LDR W10, [X24 + 0x1C]
	0x0390D35C LDR X8, [X24 + 0x10]
	0x0390D360 LDR X9, [X27]
	0x0390D364 ADD W10, W10, 0x1
	0x0390D368 STR W10, [X24 + 0x1C]
	0x0390D36C CBZ X8, 0x390D914
	0x0390D370 LDRSW X10, [X24 + 0x18]
	0x0390D374 LDR W11, [X8 + 0x18]
	0x0390D378 CMP W10, W11
	0x0390D37C B.CS 0x390D398
	0x0390D380 ADD W9, W10, 0x1
	0x0390D384 MADD X8, X10, X29, X8
	0x0390D388 STR W9, [X24 + 0x18]
	0x0390D38C STP S0, S1, [X8 + 0x20]
	0x0390D390 STR S2, [X8 + 0x28]
	0x0390D394 B 0x390D3AC
	0x0390D398 LDR X8, [X9 + 0x20]
	0x0390D39C MOV X0, X24
	0x0390D3A0 LDR X8, [X8 + 0xC0]
	0x0390D3A4 LDR X1, [X8 + 0x70]
	0x0390D3A8 BL 0x30CC1B4
	0x0390D3AC LDR X9, [X25]
	0x0390D3B0 LDR X8, [X20]
	0x0390D3B4 LDR X1, [X26]
	0x0390D3B8 LDR X10, [X9 + 0xB8]
	0x0390D3BC LDRH W9, [X8 + 0x12E]
	0x0390D3C0 LDR X24, [X10 + 0x8]
	0x0390D3C4 CBZ X9, 0x390D3E8
	0x0390D3C8 LDR X10, [X8 + 0xB0]
	0x0390D3CC ADD X10, X10, 0x8
	0x0390D3D0 LDUR X11, [X10 - 0x8]
	0x0390D3D4 CMP X11, X1
	0x0390D3D8 B.EQ 0x390D3F8
	0x0390D3DC SUBS X9, X9, 0x1
	0x0390D3E0 ADD X10, X10, 0x10
	0x0390D3E4 B.NE 0x390D3D0
	0x0390D3E8 MOV X0, X20
	0x0390D3EC MOV W2, W31
	0x0390D3F0 BL 0x1C5C788
	0x0390D3F4 B 0x390D404
	0x0390D3F8 LDRSW X9, [X10]
	0x0390D3FC ADD X8, X8, X9, 0x4, LSL
	0x0390D400 ADD X0, X8, 0x138
	0x0390D404 LDP X8, X2, [X0]
	0x0390D408 MOV X0, X20
	0x0390D40C MOV W1, W23
	0x0390D410 BLR X8
	0x0390D414 CBZ X24, 0x390D914
	0x0390D418 LDR W10, [X24 + 0x1C]
	0x0390D41C LDR X8, [X24 + 0x10]
	0x0390D420 LDR X9, [X27]
	0x0390D424 ADD W10, W10, 0x1
	0x0390D428 STR W10, [X24 + 0x1C]
	0x0390D42C CBZ X8, 0x390D914
	0x0390D430 LDRSW X10, [X24 + 0x18]
	0x0390D434 LDR W11, [X8 + 0x18]
	0x0390D438 CMP W10, W11
	0x0390D43C B.CS 0x390D458
	0x0390D440 ADD W9, W10, 0x1
	0x0390D444 MADD X8, X10, X29, X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xAD5000
	010 Move X22, 0x841000
	011 Move W8, [X21+2056]
	012 Move X22, [X22+4048]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x7E8000
	020 Move X0, [X0+3600]
	021 Call 0x1C17CF4
	022 Move X0, 0x7EE000
	023 Move X0, [X0+2136]
	024 Call 0x1C17CF4
	025 Move X0, 0x841000
	026 Move X0, [X0+4040]
	027 Call 0x1C17CF4
	028 Move X0, 0x841000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2056], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move X0, [X8+32]
	041 Compare X0, 0
	042 JumpIfEqual {117}
	043 Move W8, [X0+28]
	044 Add W8, W8, 1
	045 Move [X0+24], W31
	046 Move [X0+28], W8
	047 Compare X20, 0
	048 JumpIfEqual {117}
	049 Move X8, [X20+48]
	050 Compare X8, 0
	051 JumpIfEqual {117}
	052 Move X9, 0x841000
	053 Move X9, [X9+4040]
	054 Move W21, [X8+24]
	055 Move X23, 0x7E8000
	056 Move X2, [X9]
	057 Move X23, [X23+3600]
	058 Move W1, W21
	059 Call List`1<Int32>.set_Capacity, X0, X1
	060 Move W24, W31
	061 NotImplemented "Instruction BIC not yet implemented."
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X20+48]
	071 Compare X9, 0
	072 JumpIfEqual {117}
	073 Move W10, [X9+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X9, X9, W24
	076 Move X0, [X9+32]
	077 Compare X0, 0
	078 JumpIfEqual {117}
	079 Move X21, [X8+32]
	080 Move W1, W31
	081 Move X2, X31
	082 Call SharedVertex.get_Item, X0, X1
	083 Compare X21, 0
	084 JumpIfEqual {117}
	085 Move W10, [X21+28]
	086 Move X8, [X21+16]
	087 Move X9, [X23]
	088 Add W10, W10, 1
	089 Move [X21+28], W10
	090 Compare X8, 0
	091 JumpIfEqual {117}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W11, [X8+24]
	094 Move W1, W0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W9, W10, 1
	097 Add X8, X8, X10
	098 Move [X21+24], W9
	099 Move [X8+32], W1
	100 Move X8, [X9+32]
	101 Move X0, X21
	102 Move X8, [X8+192]
	103 Move X2, [X8+112]
	104 Call List`1<Int32>.AddWithResize, X0, X1
	105 Add W24, W24, 1
	106 Move X2, [X8+32]
	107 Move X0, X20
	108 Move X1, X19
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Move X25, [X31+72]
	117 Call 0x1C17F20
	118 Call 0x1C17F28

Method: System.Void CreateVertexMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target, System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x0390D448 STR W9, [X24 + 0x18]
	0x0390D44C STP S0, S1, [X8 + 0x20]
	0x0390D450 STR S2, [X8 + 0x28]
	0x0390D454 B 0x390D46C
	0x0390D458 LDR X8, [X9 + 0x20]
	0x0390D45C MOV X0, X24
	0x0390D460 LDR X8, [X8 + 0xC0]
	0x0390D464 LDR X1, [X8 + 0x70]
	0x0390D468 BL 0x30CC1B4
	0x0390D46C LDR X9, [X25]
	0x0390D470 LDR X8, [X20]
	0x0390D474 LDR X1, [X26]
	0x0390D478 LDR X10, [X9 + 0xB8]
	0x0390D47C LDRH W9, [X8 + 0x12E]
	0x0390D480 LDR X24, [X10 + 0x8]
	0x0390D484 CBZ X9, 0x390D4A8
	0x0390D488 LDR X10, [X8 + 0xB0]
	0x0390D48C ADD X10, X10, 0x8
	0x0390D490 LDUR X11, [X10 - 0x8]
	0x0390D494 CMP X11, X1
	0x0390D498 B.EQ 0x390D4B8
	0x0390D49C SUBS X9, X9, 0x1
	0x0390D4A0 ADD X10, X10, 0x10
	0x0390D4A4 B.NE 0x390D490
	0x0390D4A8 MOV X0, X20
	0x0390D4AC MOV W2, W31
	0x0390D4B0 BL 0x1C5C788
	0x0390D4B4 B 0x390D4C4
	0x0390D4B8 LDRSW X9, [X10]
	0x0390D4BC ADD X8, X8, X9, 0x4, LSL
	0x0390D4C0 ADD X0, X8, 0x138
	0x0390D4C4 LDP X8, X2, [X0]
	0x0390D4C8 MOV X0, X20
	0x0390D4CC MOV W1, W23
	0x0390D4D0 BLR X8
	0x0390D4D4 CBZ X24, 0x390D914
	0x0390D4D8 LDR W10, [X24 + 0x1C]
	0x0390D4DC LDR X8, [X24 + 0x10]
	0x0390D4E0 LDR X9, [X27]
	0x0390D4E4 ADD W10, W10, 0x1
	0x0390D4E8 STR W10, [X24 + 0x1C]
	0x0390D4EC CBZ X8, 0x390D914
	0x0390D4F0 LDRSW X10, [X24 + 0x18]
	0x0390D4F4 LDR W11, [X8 + 0x18]
	0x0390D4F8 CMP W10, W11
	0x0390D4FC B.CS 0x390D518

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xAD5000
	008 Move X23, 0x841000
	009 Move W8, [X22+2057]
	010 Move X23, [X23+2760]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x841000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0x841000
	022 Move X0, [X0+4048]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2057], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call BuiltinMaterials.get_geometryShadersSupported
	032 Compare X21, 0
	033 JumpIfEqual {64}
	034 Move X8, 0x841000
	035 Move X8, [X8+4048]
	036 Move W22, W0
	037 Move X21, [X21+88]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X21
	044 Move X1, X20
	045 Move X2, X19
	046 Move TEMP, X22
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Call MeshHandles.CreatePointBillboardMesh, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

Method: System.Void CreatePointMesh(UnityEngine.Vector3[] positions, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.Mesh target)

Disassembly:
	0x0390D500 ADD W9, W10, 0x1
	0x0390D504 MADD X8, X10, X29, X8
	0x0390D508 STR W9, [X24 + 0x18]
	0x0390D50C STP S0, S1, [X8 + 0x20]
	0x0390D510 STR S2, [X8 + 0x28]
	0x0390D514 B 0x390D52C
	0x0390D518 LDR X8, [X9 + 0x20]
	0x0390D51C MOV X0, X24
	0x0390D520 LDR X8, [X8 + 0xC0]
	0x0390D524 LDR X1, [X8 + 0x70]
	0x0390D528 BL 0x30CC1B4
	0x0390D52C LDR X8, [X25]
	0x0390D530 LDR X8, [X8 + 0xB8]
	0x0390D534 LDR X0, [X8]
	0x0390D538 CBZ X0, 0x390D914
	0x0390D53C LDR W10, [X0 + 0x1C]
	0x0390D540 LDP S0, S1, [X8 + 0x28]
	0x0390D544 LDR X8, [X0 + 0x10]
	0x0390D548 LDR X9, [X27]
	0x0390D54C ADD W10, W10, 0x1
	0x0390D550 STR W10, [X0 + 0x1C]
	0x0390D554 CBZ X8, 0x390D914
	0x0390D558 LDRSW X10, [X0 + 0x18]
	0x0390D55C LDR W11, [X8 + 0x18]
	0x0390D560 CMP W10, W11
	0x0390D564 B.CS 0x390D580
	0x0390D568 ADD W9, W10, 0x1
	0x0390D56C MADD X8, X10, X29, X8
	0x0390D570 STR W9, [X0 + 0x18]
	0x0390D574 STP S0, S1, [X8 + 0x20]
	0x0390D578 STR W31, [X8 + 0x28]
	0x0390D57C B 0x390D594
	0x0390D580 LDR X8, [X9 + 0x20]
	0x0390D584 FMOV S2, W31
	0x0390D588 LDR X8, [X8 + 0xC0]
	0x0390D58C LDR X1, [X8 + 0x70]
	0x0390D590 BL 0x30CC1B4
	0x0390D594 LDR X8, [X25]
	0x0390D598 LDR X8, [X8 + 0xB8]
	0x0390D59C LDR X0, [X8]
	0x0390D5A0 CBZ X0, 0x390D914
	0x0390D5A4 LDR W10, [X0 + 0x1C]
	0x0390D5A8 LDP S0, S1, [X8 + 0x30]
	0x0390D5AC LDR X8, [X0 + 0x10]
	0x0390D5B0 LDR X9, [X27]
	0x0390D5B4 ADD W10, W10, 0x1
	0x0390D5B8 STR W10, [X0 + 0x1C]
	0x0390D5BC CBZ X8, 0x390D914
	0x0390D5C0 LDRSW X10, [X0 + 0x18]
	0x0390D5C4 LDR W11, [X8 + 0x18]
	0x0390D5C8 CMP W10, W11
	0x0390D5CC B.CS 0x390D5E8
	0x0390D5D0 ADD W9, W10, 0x1
	0x0390D5D4 MADD X8, X10, X29, X8
	0x0390D5D8 STR W9, [X0 + 0x18]
	0x0390D5DC STP S0, S1, [X8 + 0x20]
	0x0390D5E0 STR W31, [X8 + 0x28]
	0x0390D5E4 B 0x390D5FC
	0x0390D5E8 LDR X8, [X9 + 0x20]
	0x0390D5EC FMOV S2, W31
	0x0390D5F0 LDR X8, [X8 + 0xC0]
	0x0390D5F4 LDR X1, [X8 + 0x70]
	0x0390D5F8 BL 0x30CC1B4
	0x0390D5FC LDR X8, [X25]
	0x0390D600 LDR X8, [X8 + 0xB8]
	0x0390D604 LDR X0, [X8]
	0x0390D608 CBZ X0, 0x390D914
	0x0390D60C LDR W10, [X0 + 0x1C]
	0x0390D610 LDP S0, S1, [X8 + 0x38]
	0x0390D614 LDR X8, [X0 + 0x10]
	0x0390D618 LDR X9, [X27]
	0x0390D61C ADD W10, W10, 0x1
	0x0390D620 STR W10, [X0 + 0x1C]
	0x0390D624 CBZ X8, 0x390D914
	0x0390D628 LDRSW X10, [X0 + 0x18]
	0x0390D62C LDR W11, [X8 + 0x18]
	0x0390D630 CMP W10, W11
	0x0390D634 B.CS 0x390D650
	0x0390D638 ADD W9, W10, 0x1
	0x0390D63C MADD X8, X10, X29, X8
	0x0390D640 STR W9, [X0 + 0x18]
	0x0390D644 STP S0, S1, [X8 + 0x20]
	0x0390D648 STR W31, [X8 + 0x28]
	0x0390D64C B 0x390D664
	0x0390D650 LDR X8, [X9 + 0x20]
	0x0390D654 FMOV S2, W31
	0x0390D658 LDR X8, [X8 + 0xC0]
	0x0390D65C LDR X1, [X8 + 0x70]
	0x0390D660 BL 0x30CC1B4
	0x0390D664 LDR X8, [X25]
	0x0390D668 LDR X8, [X8 + 0xB8]
	0x0390D66C LDR X0, [X8]
	0x0390D670 CBZ X0, 0x390D914
	0x0390D674 LDR W10, [X0 + 0x1C]
	0x0390D678 LDP S0, S1, [X8 + 0x40]
	0x0390D67C LDR X8, [X0 + 0x10]
	0x0390D680 LDR X9, [X27]
	0x0390D684 ADD W10, W10, 0x1
	0x0390D688 STR W10, [X0 + 0x1C]
	0x0390D68C CBZ X8, 0x390D914
	0x0390D690 LDRSW X10, [X0 + 0x18]
	0x0390D694 LDR W11, [X8 + 0x18]
	0x0390D698 CMP W10, W11
	0x0390D69C B.CS 0x390D6B8
	0x0390D6A0 ADD W9, W10, 0x1
	0x0390D6A4 MADD X8, X10, X29, X8
	0x0390D6A8 STR W9, [X0 + 0x18]
	0x0390D6AC STP S0, S1, [X8 + 0x20]
	0x0390D6B0 STR W31, [X8 + 0x28]
	0x0390D6B4 B 0x390D6CC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xAD5000
	009 Move W8, [X22+2058]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x7E9000
	018 Move X0, [X0+2504]
	019 Call 0x1C17CF4
	020 Move X0, 0x7E8000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move X0, 0x7E8000
	024 Move X0, [X0+3632]
	025 Call 0x1C17CF4
	026 Move X0, 0x841000
	027 Move X0, [X0+4064]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2058], W8
	031 Compare X21, 0
	032 JumpIfEqual {127}
	033 Compare X19, 0
	034 JumpIfEqual {127}
	035 Move X24, 0x841000
	036 Move X22, 0x7E8000
	037 Move W23, [X21+24]
	038 Move X24, [X24+4064]
	039 Move X22, [X22+3672]
	040 Move X0, X19
	041 Move X1, X31
	042 Call Mesh.Clear, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move X0, X19
	046 Move X2, X31
	047 Call Mesh.set_indexFormat, X0, X1
	048 Move X1, [X24]
	049 Move X0, X19
	050 Move X2, X31
	051 Call Object.set_name, X0, X1
	052 Move X0, X19
	053 Move X1, X21
	054 Move X2, X31
	055 Call Mesh.set_vertices, X0, X1
	056 Move W1, 1
	057 Move X0, X19
	058 Move X2, X31
	059 Call Mesh.set_subMeshCount, X0, X1
	060 Move X1, [X22]
	061 Move X0, X20
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Compare X20, 0
	066 JumpIfEqual {97}
	067 Move X21, [X22]
	068 Move X0, X20
	069 Move X1, X21
	070 Call 0x1C17E00
	071 Move X1, X0
	072 Compare X0, 0
	073 JumpIfNotEqual {98}
	074 Move X0, X20
	075 Move X1, X21
	076 Call 0x1C181E0
	077 Compare X20, 0
	078 JumpIfEqual {90}
	079 Move X8, 0x7E8000
	080 Move X8, [X8+3632]
	081 Move X9, [X20]
	082 Move X8, [X8]
	083 Move W11, [X9+304]
	084 Move W10, [X8+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, [X9+200]
	087 Add X9, X9, X10
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0x7E9000
	091 Move X8, [X8+2504]
	092 Move X0, X20
	093 Move X1, [X8]
	094 Call Enumerable.ToArray, X0
	095 Move W2, 5
	096 Move X1, X0
	097 Move X1, X31
	098 Move W2, 5
	099 Move X0, X19
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move W3, W31
	107 Move X4, X31
	108 Move X30, [X31+64]
	109 Call Mesh.SetIndices, X0, X1, X2, X3
	110 Return 
	111 Move X0, X19
	112 Move X1, X20
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move W2, 5
	120 Move W4, 1
	121 Move W3, W31
	122 Move W5, W31
	123 Move X6, X31
	124 Move X30, [X31+64]
	125 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	126 Return 
	127 Call 0x1C17F20

Method: System.Void CreatePointBillboardMesh(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions, UnityEngine.Mesh target)

Disassembly:
	0x0390E034 CMP W10, W11
	0x0390E038 B.CS 0x390E050
	0x0390E03C ADD W9, W10, 0x1
	0x0390E040 ADD X8, X8, X10, 0x2, LSL
	0x0390E044 STR W9, [X0 + 0x18]
	0x0390E048 STR W1, [X8 + 0x20]
	0x0390E04C B 0x390E070
	0x0390E050 LDR X8, [X9 + 0x20]
	0x0390E054 LDR X8, [X8 + 0xC0]
	0x0390E058 LDR X2, [X8 + 0x70]
	0x0390E05C BL 0x2FDC70C
	0x0390E060 LDR X8, [X22]
	0x0390E064 LDR X8, [X8 + 0xB8]
	0x0390E068 LDR X0, [X8 + 0x18]
	0x0390E06C CBZ X0, 0x390E190
	0x0390E070 LDR W10, [X0 + 0x1C]
	0x0390E074 LDR X8, [X0 + 0x10]
	0x0390E078 LDR X9, [X28]
	0x0390E07C ADD W10, W10, 0x1
	0x0390E080 STR W10, [X0 + 0x1C]
	0x0390E084 CBZ X8, 0x390E190
	0x0390E088 LDRSW X10, [X0 + 0x18]
	0x0390E08C LDR W11, [X8 + 0x18]
	0x0390E090 ADD W1, W20, 0x2
	0x0390E094 CMP W10, W11
	0x0390E098 B.CS 0x390E0B0
	0x0390E09C ADD W9, W10, 0x1
	0x0390E0A0 ADD X8, X8, X10, 0x2, LSL
	0x0390E0A4 STR W9, [X0 + 0x18]
	0x0390E0A8 STR W1, [X8 + 0x20]
	0x0390E0AC B 0x390E0C0
	0x0390E0B0 LDR X8, [X9 + 0x20]
	0x0390E0B4 LDR X8, [X8 + 0xC0]
	0x0390E0B8 LDR X2, [X8 + 0x70]
	0x0390E0BC BL 0x2FDC70C
	0x0390E0C0 LDR W8, [X21 + 0x18]
	0x0390E0C4 ADD W25, W25, 0x1
	0x0390E0C8 ADD W20, W20, 0x4
	0x0390E0CC CMP W25, W8
	0x0390E0D0 B.LT 0x390DB50
	0x0390E0D4 LDR X25, [X31 + 0x10]
	0x0390E0D8 LDR W9, [X31 + 0x1C]
	0x0390E0DC LDR W8, [X25 + 0x18]
	0x0390E0E0 ADD W9, W9, 0x1
	0x0390E0E4 CMP W9, W8
	0x0390E0E8 B.LT 0x390DB14
	0x0390E0EC LDR X0, [X22]
	0x0390E0F0 LDR W8, [X0 + 0xE0]
	0x0390E0F4 CBNZ W8, 0x390E100
	0x0390E0F8 BL 0x1C16DFC
	0x0390E0FC LDR X0, [X22]
	0x0390E100 LDR X8, [X0 + 0xB8]
	0x0390E104 LDR X19, [X31 + 0x8]
	0x0390E108 MOV X2, X31
	0x0390E10C LDR X1, [X8 + 0x8]
	0x0390E110 MOV X0, X19
	0x0390E114 BL 0x3C18380
	0x0390E118 LDR X8, [X22]
	0x0390E11C MOV X0, X19
	0x0390E120 MOV X2, X31
	0x0390E124 LDR X8, [X8 + 0xB8]
	0x0390E128 LDR X1, [X8 + 0x10]
	0x0390E12C BL 0x3C1869C
	0x0390E130 MOVZ W1, 0x1
	0x0390E134 MOV X0, X19
	0x0390E138 MOV X2, X31
	0x0390E13C BL 0x3C17654
	0x0390E140 LDR X8, [X22]
	0x0390E144 MOV X0, X19
	0x0390E148 LDP X20, X19, [X31 + 0xA0]
	0x0390E14C LDP X22, X21, [X31 + 0x90]
	0x0390E150 LDR X8, [X8 + 0xB8]
	0x0390E154 LDP X24, X23, [X31 + 0x80]
	0x0390E158 LDP X26, X25, [X31 + 0x70]
	0x0390E15C LDP X28, X27, [X31 + 0x60]
	0x0390E160 LDR X1, [X8 + 0x18]
	0x0390E164 LDP X29, X30, [X31 + 0x50]
	0x0390E168 LDP D9, D8, [X31 + 0x40]
	0x0390E16C LDP D11, D10, [X31 + 0x30]
	0x0390E170 LDP D13, D12, [X31 + 0x20]
	0x0390E174 MOVZ W2, 0x2
	0x0390E178 MOVZ W4, 0x1
	0x0390E17C MOV W3, W31
	0x0390E180 MOV W5, W31
	0x0390E184 MOV X6, X31
	0x0390E188 ADD X31, X31, 0xB0
	0x0390E18C B 0x3C19AE0
	0x0390E190 BL 0x1C16F20
	0x0390E194 BL 0x1C16F28
	0x0390E198 SUB X31, X31, 0xA0
	0x0390E19C STP D13, D12, [X31 + 0x10]
	0x0390E1A0 STP D11, D10, [X31 + 0x20]
	0x0390E1A4 STP D9, D8, [X31 + 0x30]
	0x0390E1A8 STP X29, X30, [X31 + 0x40]
	0x0390E1AC STP X28, X27, [X31 + 0x50]
	0x0390E1B0 STP X26, X25, [X31 + 0x60]
	0x0390E1B4 STP X24, X23, [X31 + 0x70]
	0x0390E1B8 STP X22, X21, [X31 + 0x80]
	0x0390E1BC STP X20, X19, [X31 + 0x90]
	0x0390E1C0 ADRP X19, 0xAD3000
	0x0390E1C4 LDRB W8, [X19 + 0x80E]
	0x0390E1C8 MOV X20, X2
	0x0390E1CC MOV X23, X1
	0x0390E1D0 MOV X21, X0
	0x0390E1D4 TBNZ X8, 0x0, 0x390E294
	0x0390E1D8 ADRP X0, 0x83F000
	0x0390E1DC LDR X0, [X0 + 0xD08]
	0x0390E1E0 BL 0x1C16CF4
	0x0390E1E4 ADRP X0, 0x7E5000
	0x0390E1E8 LDR X0, [X0 + 0xE00]
	0x0390E1EC BL 0x1C16CF4
	0x0390E1F0 ADRP X0, 0x83F000
	0x0390E1F4 LDR X0, [X0 + 0xC88]
	0x0390E1F8 BL 0x1C16CF4
	0x0390E1FC ADRP X0, 0x83F000
	0x0390E200 LDR X0, [X0 + 0xC90]
	0x0390E204 BL 0x1C16CF4
	0x0390E208 ADRP X0, 0x7E5000
	0x0390E20C LDR X0, [X0 + 0xE18]
	0x0390E210 BL 0x1C16CF4
	0x0390E214 ADRP X0, 0x7E6000
	0x0390E218 LDR X0, [X0 + 0xE10]
	0x0390E21C BL 0x1C16CF4
	0x0390E220 ADRP X0, 0x83F000
	0x0390E224 LDR X0, [X0 + 0xFF0]
	0x0390E228 BL 0x1C16CF4
	0x0390E22C ADRP X0, 0x7E9000
	0x0390E230 LDR X0, [X0 + 0x3B8]
	0x0390E234 BL 0x1C16CF4
	0x0390E238 ADRP X0, 0x7E9000
	0x0390E23C LDR X0, [X0 + 0x380]
	0x0390E240 BL 0x1C16CF4
	0x0390E244 ADRP X0, 0x83F000
	0x0390E248 LDR X0, [X0 + 0xFF8]
	0x0390E24C BL 0x1C16CF4
	0x0390E250 ADRP X0, 0x7EC000
	0x0390E254 LDR X0, [X0 + 0x858]
	0x0390E258 BL 0x1C16CF4
	0x0390E25C ADRP X0, 0x840000
	0x0390E260 LDR X0, [X0]
	0x0390E264 BL 0x1C16CF4
	0x0390E268 ADRP X0, 0x83F000
	0x0390E26C LDR X0, [X0 + 0xFC8]
	0x0390E270 BL 0x1C16CF4
	0x0390E274 ADRP X0, 0x83F000
	0x0390E278 LDR X0, [X0 + 0xFE8]
	0x0390E27C BL 0x1C16CF4
	0x0390E280 ADRP X0, 0x83F000
	0x0390E284 LDR X0, [X0 + 0xFD0]
	0x0390E288 BL 0x1C16CF4
	0x0390E28C MOVZ W8, 0x1
	0x0390E290 STRB W8, [X19 + 0x80E]
	0x0390E294 CBZ X23, 0x390EC60
	0x0390E298 MOV X0, X23
	0x0390E29C MOV X1, X31
	0x0390E2A0 BL 0x3C19C94
	0x0390E2A4 CBZ X20, 0x390EC60
	0x0390E2A8 ADRP X10, 0x83F000
	0x0390E2AC LDR X8, [X20]
	0x0390E2B0 LDR X10, [X10 + 0xD08]
	0x0390E2B4 LDRH W9, [X8 + 0x12E]
	0x0390E2B8 LDR X1, [X10]
	0x0390E2BC CBZ X9, 0x390E2E0
	0x0390E2C0 LDR X10, [X8 + 0xB0]
	0x0390E2C4 ADD X10, X10, 0x8
	0x0390E2C8 LDUR X11, [X10 - 0x8]
	0x0390E2CC CMP X11, X1
	0x0390E2D0 B.EQ 0x390E2F0
	0x0390E2D4 SUBS X9, X9, 0x1
	0x0390E2D8 ADD X10, X10, 0x10
	0x0390E2DC B.NE 0x390E2C8
	0x0390E2E0 MOV X0, X20
	0x0390E2E4 MOV W2, W31
	0x0390E2E8 BL 0x1C5C788
	0x0390E2EC B 0x390E2FC
	0x0390E2F0 LDRSW X9, [X10]
	0x0390E2F4 ADD X8, X8, X9, 0x4, LSL
	0x0390E2F8 ADD X0, X8, 0x138
	0x0390E2FC LDP X8, X1, [X0]
	0x0390E300 MOV X0, X20
	0x0390E304 BLR X8
	0x0390E308 CMP W0, 0x4000
	0x0390E30C MOV W22, W0
	0x0390E310 CSET W1, GE
	0x0390E314 MOV X0, X23
	0x0390E318 MOV X2, X31
	0x0390E31C STR X23, [X31 + 0x8]
	0x0390E320 BL 0x3C170A8
	0x0390E324 CBZ X21, 0x390EC60
	0x0390E328 ADRP X23, 0x83F000
	0x0390E32C LDR X23, [X23 + 0xFD0]
	0x0390E330 LDR X25, [X21 + 0x58]
	0x0390E334 LDR X0, [X23]
	0x0390E338 LDR W8, [X0 + 0xE0]
	0x0390E33C CBNZ W8, 0x390E348
	0x0390E340 BL 0x1C16DFC
	0x0390E344 LDR X0, [X23]
	0x0390E348 LDR X8, [X0 + 0xB8]
	0x0390E34C LDR X0, [X8 + 0x8]
	0x0390E350 CBZ X0, 0x390EC60
	0x0390E354 LDR W9, [X0 + 0x1C]
	0x0390E358 ADD W9, W9, 0x1
	0x0390E35C STP W31, W9, [X0 + 0x18]
	0x0390E360 LDR X9, [X8 + 0x10]
	0x0390E364 CBZ X9, 0x390EC60
	0x0390E368 LDR W10, [X9 + 0x1C]
	0x0390E36C ADD W10, W10, 0x1
	0x0390E370 STP W31, W10, [X9 + 0x18]
	0x0390E374 LDR X8, [X8 + 0x18]
	0x0390E378 CBZ X8, 0x390EC60
	0x0390E37C LDR W9, [X8 + 0x1C]
	0x0390E380 ADRP X10, 0x83F000
	0x0390E384 LDR X10, [X10 + 0xFE8]
	0x0390E388 UBFM W21, W22, 0x1E, 0x1D
	0x0390E38C ADD W9, W9, 0x1
	0x0390E390 STP W31, W9, [X8 + 0x18]
	0x0390E394 LDR X2, [X10]
	0x0390E398 MOV W1, W21
	0x0390E39C BL 0x30CBD00
	0x0390E3A0 LDR X8, [X23]
	0x0390E3A4 LDR X8, [X8 + 0xB8]
	0x0390E3A8 LDR X0, [X8 + 0x10]
	0x0390E3AC CBZ X0, 0x390EC60
	0x0390E3B0 ADRP X8, 0x840000
	0x0390E3B4 LDR X8, [X8]
	0x0390E3B8 MOV W1, W21
	0x0390E3BC LDR X2, [X8]
	0x0390E3C0 BL 0x30CE978
	0x0390E3C4 LDR X8, [X23]
	0x0390E3C8 LDR X8, [X8 + 0xB8]
	0x0390E3CC LDR X0, [X8 + 0x18]
	0x0390E3D0 CBZ X0, 0x390EC60
	0x0390E3D4 ADRP X8, 0x83F000
	0x0390E3D8 LDR X8, [X8 + 0xFC8]
	0x0390E3DC ADRP X19, 0x83F000
	0x0390E3E0 MOV W1, W21
	0x0390E3E4 LDR X2, [X8]
	0x0390E3E8 LDR X19, [X19 + 0xC88]
	0x0390E3EC BL 0x2FDC298
	0x0390E3F0 LDR X8, [X20]
	0x0390E3F4 LDR X1, [X19]
	0x0390E3F8 LDRH W9, [X8 + 0x12E]
	0x0390E3FC CBZ X9, 0x390E420
	0x0390E400 LDR X10, [X8 + 0xB0]
	0x0390E404 ADD X10, X10, 0x8
	0x0390E408 LDUR X11, [X10 - 0x8]
	0x0390E40C CMP X11, X1
	0x0390E410 B.EQ 0x390E430
	0x0390E414 SUBS X9, X9, 0x1
	0x0390E418 ADD X10, X10, 0x10
	0x0390E41C B.NE 0x390E408
	0x0390E420 MOV X0, X20
	0x0390E424 MOV W2, W31
	0x0390E428 BL 0x1C5C788
	0x0390E42C B 0x390E43C
	0x0390E430 LDRSW X9, [X10]
	0x0390E434 ADD X8, X8, X9, 0x4, LSL
	0x0390E438 ADD X0, X8, 0x138
	0x0390E43C LDP X8, X1, [X0]
	0x0390E440 MOV X0, X20
	0x0390E444 BLR X8
	0x0390E448 MOV X20, X0
	0x0390E44C CBZ X0, 0x390EC64
	0x0390E450 ADRP X22, 0x7E5000
	0x0390E454 ADRP X27, 0x7E9000
	0x0390E458 ADRP X28, 0x83F000
	0x0390E45C ADRP X29, 0x7E6000
	0x0390E460 LDR X22, [X22 + 0xE18]
	0x0390E464 LDR X27, [X27 + 0x3B8]
	0x0390E468 LDR X28, [X28 + 0xFF0]
	0x0390E46C LDR X29, [X29 + 0xE10]
	0x0390E470 MOV W21, W31
	0x0390E474 MOVZ W24, 0xC
	0x0390E478 MOVZ W19, 0x3F800000
	0x0390E47C MOVZ W26, 0xBF800000
	0x0390E480 LDR X8, [X20]
	0x0390E484 LDR X1, [X22]
	0x0390E488 LDRH W9, [X8 + 0x12E]
	0x0390E48C CBZ X9, 0x390E4B0
	0x0390E490 LDR X10, [X8 + 0xB0]
	0x0390E494 ADD X10, X10, 0x8
	0x0390E498 LDUR X11, [X10 - 0x8]
	0x0390E49C CMP X11, X1
	0x0390E4A0 B.EQ 0x390E4C0
	0x0390E4A4 SUBS X9, X9, 0x1
	0x0390E4A8 ADD X10, X10, 0x10
	0x0390E4AC B.NE 0x390E498
	0x0390E4B0 MOV X0, X20
	0x0390E4B4 MOV W2, W31
	0x0390E4B8 BL 0x1C5C788
	0x0390E4BC B 0x390E4CC
	0x0390E4C0 LDRSW X9, [X10]
	0x0390E4C4 ADD X8, X8, X9, 0x4, LSL
	0x0390E4C8 ADD X0, X8, 0x138
	0x0390E4CC LDP X8, X1, [X0]
	0x0390E4D0 MOV X0, X20
	0x0390E4D4 BLR X8
	0x0390E4D8 TBZ X0, 0x0, 0x390EAA8
	0x0390E4DC LDR X8, [X20]
	0x0390E4E0 ADRP X10, 0x83F000
	0x0390E4E4 LDRH W9, [X8 + 0x12E]
	0x0390E4E8 LDR X10, [X10 + 0xC90]
	0x0390E4EC LDR X1, [X10]
	0x0390E4F0 CBZ X9, 0x390E514
	0x0390E4F4 LDR X10, [X8 + 0xB0]
	0x0390E4F8 ADD X10, X10, 0x8
	0x0390E4FC LDUR X11, [X10 - 0x8]
	0x0390E500 CMP X11, X1
	0x0390E504 B.EQ 0x390E524
	0x0390E508 SUBS X9, X9, 0x1
	0x0390E50C ADD X10, X10, 0x10
	0x0390E510 B.NE 0x390E4FC
	0x0390E514 MOV X0, X20
	0x0390E518 MOV W2, W31
	0x0390E51C BL 0x1C5C788
	0x0390E520 B 0x390E530
	0x0390E524 LDRSW X9, [X10]
	0x0390E528 ADD X8, X8, X9, 0x4, LSL
	0x0390E52C ADD X0, X8, 0x138
	0x0390E530 LDP X8, X1, [X0]
	0x0390E534 MOV X0, X20
	0x0390E538 BLR X8
	0x0390E53C CBZ X25, 0x390EC0C
	0x0390E540 LDR W9, [X25 + 0x18]
	0x0390E544 CMP W0, W9
	0x0390E548 B.CS 0x390EBF8
	0x0390E54C SBFM X8, X0, 0x20, 0x3F
	0x0390E550 CMP W8, W9
	0x0390E554 B.CS 0x390EBF4
	0x0390E558 SXTW X9, W0
	0x0390E55C LDR X0, [X23]
	0x0390E560 NOP
	0x0390E564 MADD X8, X8, X24, X25
	0x0390E568 MADD X9, X9, X24, X25
	0x0390E56C LDP S13, S12, [X9 + 0x20]
	0x0390E570 LDR V8, [X9 + 0x28]
	0x0390E574 LDP S9, S10, [X8 + 0x20]
	0x0390E578 LDR W9, [X0 + 0xE0]
	0x0390E57C LDR V11, [X8 + 0x28]
	0x0390E580 CBNZ W9, 0x390E58C
	0x0390E584 BL 0x1C16DFC
	0x0390E588 LDR X0, [X23]
	0x0390E58C LDR X8, [X0 + 0xB8]
	0x0390E590 LDR X0, [X8 + 0x8]
	0x0390E594 CBZ X0, 0x390EC10
	0x0390E598 LDR W10, [X0 + 0x1C]
	0x0390E59C LDR X8, [X0 + 0x10]
	0x0390E5A0 LDR X9, [X27]
	0x0390E5A4 ADD W10, W10, 0x1
	0x0390E5A8 STR W10, [X0 + 0x1C]
	0x0390E5AC CBZ X8, 0x390EC00
	0x0390E5B0 LDRSW X10, [X0 + 0x18]
	0x0390E5B4 LDR W11, [X8 + 0x18]
	0x0390E5B8 CMP W10, W11
	0x0390E5BC B.CS 0x390E5D8
	0x0390E5C0 ADD W9, W10, 0x1
	0x0390E5C4 MADD X8, X10, X24, X8
	0x0390E5C8 STR W9, [X0 + 0x18]
	0x0390E5CC STP S13, S12, [X8 + 0x20]
	0x0390E5D0 STR S8, [X8 + 0x28]
	0x0390E5D4 B 0x390E5F4
	0x0390E5D8 LDR X8, [X9 + 0x20]
	0x0390E5DC LDR X8, [X8 + 0xC0]
	0x0390E5E0 LDR X1, [X8 + 0x70]
	0x0390E5E4 MOV V0.16B, V13.16B
	0x0390E5E8 MOV V1.16B, V12.16B
	0x0390E5EC MOV V2.16B, V8.16B
	0x0390E5F0 BL 0x30CC1B4
	0x0390E5F4 LDR X8, [X23]
	0x0390E5F8 LDR X8, [X8 + 0xB8]
	0x0390E5FC LDR X0, [X8 + 0x8]
	0x0390E600 CBZ X0, 0x390EC04
	0x0390E604 LDR W10, [X0 + 0x1C]
	0x0390E608 LDR X8, [X0 + 0x10]
	0x0390E60C LDR X9, [X27]
	0x0390E610 ADD W10, W10, 0x1
	0x0390E614 STR W10, [X0 + 0x1C]
	0x0390E618 CBZ X8, 0x390EBFC
	0x0390E61C LDRSW X10, [X0 + 0x18]
	0x0390E620 LDR W11, [X8 + 0x18]
	0x0390E624 CMP W10, W11
	0x0390E628 B.CS 0x390E644
	0x0390E62C ADD W9, W10, 0x1
	0x0390E630 MADD X8, X10, X24, X8
	0x0390E634 STR W9, [X0 + 0x18]
	0x0390E638 STP S13, S12, [X8 + 0x20]
	0x0390E63C STR S8, [X8 + 0x28]
	0x0390E640 B 0x390E660
	0x0390E644 LDR X8, [X9 + 0x20]
	0x0390E648 LDR X8, [X8 + 0xC0]
	0x0390E64C LDR X1, [X8 + 0x70]
	0x0390E650 MOV V0.16B, V13.16B
	0x0390E654 MOV V1.16B, V12.16B
	0x0390E658 MOV V2.16B, V8.16B
	0x0390E65C BL 0x30CC1B4
	0x0390E660 LDR X8, [X23]
	0x0390E664 LDR X8, [X8 + 0xB8]
	0x0390E668 LDR X0, [X8 + 0x8]
	0x0390E66C CBZ X0, 0x390EC14
	0x0390E670 LDR W10, [X0 + 0x1C]
	0x0390E674 LDR X8, [X0 + 0x10]
	0x0390E678 LDR X9, [X27]
	0x0390E67C ADD W10, W10, 0x1
	0x0390E680 STR W10, [X0 + 0x1C]
	0x0390E684 CBZ X8, 0x390EC18
	0x0390E688 LDRSW X10, [X0 + 0x18]
	0x0390E68C LDR W11, [X8 + 0x18]
	0x0390E690 CMP W10, W11
	0x0390E694 B.CS 0x390E6B0
	0x0390E698 ADD W9, W10, 0x1
	0x0390E69C MADD X8, X10, X24, X8
	0x0390E6A0 STR W9, [X0 + 0x18]
	0x0390E6A4 STP S9, S10, [X8 + 0x20]
	0x0390E6A8 STR S11, [X8 + 0x28]
	0x0390E6AC B 0x390E6CC
	0x0390E6B0 LDR X8, [X9 + 0x20]
	0x0390E6B4 LDR X8, [X8 + 0xC0]
	0x0390E6B8 LDR X1, [X8 + 0x70]
	0x0390E6BC MOV V0.16B, V9.16B
	0x0390E6C0 MOV V1.16B, V10.16B
	0x0390E6C4 MOV V2.16B, V11.16B
	0x0390E6C8 BL 0x30CC1B4
	0x0390E6CC LDR X8, [X23]
	0x0390E6D0 LDR X8, [X8 + 0xB8]
	0x0390E6D4 LDR X0, [X8 + 0x8]
	0x0390E6D8 CBZ X0, 0x390EC08
	0x0390E6DC LDR W10, [X0 + 0x1C]
	0x0390E6E0 LDR X8, [X0 + 0x10]
	0x0390E6E4 LDR X9, [X27]
	0x0390E6E8 ADD W10, W10, 0x1
	0x0390E6EC STR W10, [X0 + 0x1C]
	0x0390E6F0 CBZ X8, 0x390EC1C
	0x0390E6F4 LDRSW X10, [X0 + 0x18]
	0x0390E6F8 LDR W11, [X8 + 0x18]
	0x0390E6FC CMP W10, W11
	0x0390E700 B.CS 0x390E71C
	0x0390E704 ADD W9, W10, 0x1
	0x0390E708 MADD X8, X10, X24, X8
	0x0390E70C STR W9, [X0 + 0x18]
	0x0390E710 STP S9, S10, [X8 + 0x20]
	0x0390E714 STR S11, [X8 + 0x28]
	0x0390E718 B 0x390E738
	0x0390E71C LDR X8, [X9 + 0x20]
	0x0390E720 LDR X8, [X8 + 0xC0]
	0x0390E724 LDR X1, [X8 + 0x70]
	0x0390E728 MOV V0.16B, V9.16B
	0x0390E72C MOV V1.16B, V10.16B
	0x0390E730 MOV V2.16B, V11.16B
	0x0390E734 BL 0x30CC1B4
	0x0390E738 LDR X8, [X23]
	0x0390E73C LDR X8, [X8 + 0xB8]
	0x0390E740 LDR X0, [X8 + 0x10]
	0x0390E744 CBZ X0, 0x390EC40
	0x0390E748 LDR W10, [X0 + 0x1C]
	0x0390E74C LDR X9, [X0 + 0x10]
	0x0390E750 LDR X8, [X28]
	0x0390E754 ADD W10, W10, 0x1
	0x0390E758 STR W10, [X0 + 0x1C]
	0x0390E75C CBZ X9, 0x390EC44
	0x0390E760 LDRSW X10, [X0 + 0x18]
	0x0390E764 LDR W11, [X9 + 0x18]
	0x0390E768 CMP W10, W11
	0x0390E76C B.CS 0x390E78C
	0x0390E770 ADD W8, W10, 0x1
	0x0390E774 ADD X9, X9, X10, 0x4, LSL
	0x0390E778 STR W8, [X0 + 0x18]
	0x0390E77C STP S9, S10, [X9 + 0x20]
	0x0390E780 STR S11, [X9 + 0x28]
	0x0390E784 STR W19, [X9 + 0x2C]
	0x0390E788 B 0x390E7AC
	0x0390E78C LDR X8, [X8 + 0x20]
	0x0390E790 LDR X8, [X8 + 0xC0]
	0x0390E794 LDR X1, [X8 + 0x70]
	0x0390E798 FMOV S3, 1
	0x0390E79C MOV V0.16B, V9.16B
	0x0390E7A0 MOV V1.16B, V10.16B
	0x0390E7A4 MOV V2.16B, V11.16B
	0x0390E7A8 BL 0x30CEE24
	0x0390E7AC LDR X8, [X23]
	0x0390E7B0 LDR X8, [X8 + 0xB8]
	0x0390E7B4 LDR X0, [X8 + 0x10]
	0x0390E7B8 CBZ X0, 0x390EC24
	0x0390E7BC LDR W10, [X0 + 0x1C]
	0x0390E7C0 LDR X9, [X0 + 0x10]
	0x0390E7C4 LDR X8, [X28]
	0x0390E7C8 ADD W10, W10, 0x1
	0x0390E7CC STR W10, [X0 + 0x1C]
	0x0390E7D0 CBZ X9, 0x390EC38
	0x0390E7D4 LDRSW X10, [X0 + 0x18]
	0x0390E7D8 LDR W11, [X9 + 0x18]
	0x0390E7DC CMP W10, W11
	0x0390E7E0 B.CS 0x390E800
	0x0390E7E4 ADD W8, W10, 0x1
	0x0390E7E8 ADD X9, X9, X10, 0x4, LSL
	0x0390E7EC STR W8, [X0 + 0x18]
	0x0390E7F0 STP S9, S10, [X9 + 0x20]
	0x0390E7F4 STR S11, [X9 + 0x28]
	0x0390E7F8 STR W26, [X9 + 0x2C]
	0x0390E7FC B 0x390E820
	0x0390E800 LDR X8, [X8 + 0x20]
	0x0390E804 LDR X8, [X8 + 0xC0]
	0x0390E808 LDR X1, [X8 + 0x70]
	0x0390E80C FMOV S3, -1
	0x0390E810 MOV V0.16B, V9.16B
	0x0390E814 MOV V1.16B, V10.16B
	0x0390E818 MOV V2.16B, V11.16B
	0x0390E81C BL 0x30CEE24
	0x0390E820 LDR X8, [X23]
	0x0390E824 LDR X8, [X8 + 0xB8]
	0x0390E828 LDR X0, [X8 + 0x10]
	0x0390E82C CBZ X0, 0x390EC30
	0x0390E830 LDR W10, [X0 + 0x1C]
	0x0390E834 LDR X9, [X0 + 0x10]
	0x0390E838 LDR X8, [X28]
	0x0390E83C ADD W10, W10, 0x1
	0x0390E840 STR W10, [X0 + 0x1C]
	0x0390E844 CBZ X9, 0x390EC4C
	0x0390E848 LDRSW X10, [X0 + 0x18]
	0x0390E84C LDR W11, [X9 + 0x18]
	0x0390E850 FSUB S0, S9, S13
	0x0390E854 FSUB S1, S10, S12
	0x0390E858 FSUB S2, S11, S8
	0x0390E85C FADD S12, S9, S0
	0x0390E860 FADD S9, S10, S1
	0x0390E864 CMP W10, W11
	0x0390E868 FADD S8, S11, S2
	0x0390E86C B.CS 0x390E88C
	0x0390E870 ADD W8, W10, 0x1
	0x0390E874 ADD X9, X9, X10, 0x4, LSL
	0x0390E878 STR W8, [X0 + 0x18]
	0x0390E87C STP S12, S9, [X9 + 0x20]
	0x0390E880 STR S8, [X9 + 0x28]
	0x0390E884 STR W19, [X9 + 0x2C]
	0x0390E888 B 0x390E8AC
	0x0390E88C LDR X8, [X8 + 0x20]
	0x0390E890 LDR X8, [X8 + 0xC0]
	0x0390E894 LDR X1, [X8 + 0x70]
	0x0390E898 FMOV S3, 1
	0x0390E89C MOV V0.16B, V12.16B
	0x0390E8A0 MOV V1.16B, V9.16B
	0x0390E8A4 MOV V2.16B, V8.16B
	0x0390E8A8 BL 0x30CEE24
	0x0390E8AC LDR X8, [X23]
	0x0390E8B0 LDR X8, [X8 + 0xB8]
	0x0390E8B4 LDR X0, [X8 + 0x10]
	0x0390E8B8 CBZ X0, 0x390EC28
	0x0390E8BC LDR W10, [X0 + 0x1C]
	0x0390E8C0 LDR X9, [X0 + 0x10]
	0x0390E8C4 LDR X8, [X28]
	0x0390E8C8 ADD W10, W10, 0x1
	0x0390E8CC STR W10, [X0 + 0x1C]
	0x0390E8D0 CBZ X9, 0x390EC2C
	0x0390E8D4 LDRSW X10, [X0 + 0x18]
	0x0390E8D8 LDR W11, [X9 + 0x18]
	0x0390E8DC CMP W10, W11
	0x0390E8E0 B.CS 0x390E900
	0x0390E8E4 ADD W8, W10, 0x1
	0x0390E8E8 ADD X9, X9, X10, 0x4, LSL
	0x0390E8EC STR W8, [X0 + 0x18]
	0x0390E8F0 STP S12, S9, [X9 + 0x20]
	0x0390E8F4 STR S8, [X9 + 0x28]
	0x0390E8F8 STR W26, [X9 + 0x2C]
	0x0390E8FC B 0x390E920
	0x0390E900 LDR X8, [X8 + 0x20]
	0x0390E904 LDR X8, [X8 + 0xC0]
	0x0390E908 LDR X1, [X8 + 0x70]
	0x0390E90C FMOV S3, -1
	0x0390E910 MOV V0.16B, V12.16B
	0x0390E914 MOV V1.16B, V9.16B

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xAD4000
	014 Move W8, [X21+2059]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x840000
	022 Move X0, [X0+3960]
	023 Call 0x1C17CF4
	024 Move X0, 0x840000
	025 Move X0, [X0+3968]
	026 Call 0x1C17CF4
	027 Move X0, 0x7E7000
	028 Move X0, [X0+3600]
	029 Call 0x1C17CF4
	030 Move X0, 0x7EA000
	031 Move X0, [X0+952]
	032 Call 0x1C17CF4
	033 Move X0, 0x7EA000
	034 Move X0, [X0+896]
	035 Call 0x1C17CF4
	036 Move X0, 0x7ED000
	037 Move X0, [X0+2136]
	038 Call 0x1C17CF4
	039 Move X0, 0x840000
	040 Move X0, [X0+4040]
	041 Call 0x1C17CF4
	042 Move X0, 0x840000
	043 Move X0, [X0+4072]
	044 Call 0x1C17CF4
	045 Move X0, 0x840000
	046 Move X0, [X0+4048]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2059], W8
	050 Compare X20, 0
	051 JumpIfEqual {607}
	052 Move X10, 0x840000
	053 Move X8, [X20]
	054 Move X10, [X10+3960]
	055 Move X25, 0x840000
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Move X25, [X25+4048]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X20
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X0, X20
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X25]
	078 Move W21, W0
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X8, [X25]
	085 Move X8, [X8+184]
	086 Move X0, [X8]
	087 Compare X0, 0
	088 JumpIfEqual {607}
	089 Move W9, [X0+28]
	090 Add W9, W9, 1
	091 Move [X0+24], W31
	092 Move [X0+28], W9
	093 Move X9, [X8+8]
	094 Compare X9, 0
	095 JumpIfEqual {607}
	096 Move W10, [X9+28]
	097 Add W10, W10, 1
	098 Move [X9+24], W31
	099 Move [X9+28], W10
	100 Move X8, [X8+24]
	101 Compare X8, 0
	102 JumpIfEqual {607}
	103 Move W9, [X8+28]
	104 Move X23, 0x840000
	105 Move X23, [X23+4072]
	106 Move W22, W21
	107 ShiftRight W22, 30
	108 And W22, W22, 0x1FFFFFFF
	109 Add W9, W9, 1
	110 Move [X8+24], W31
	111 Move [X8+28], W9
	112 Move X2, [X23]
	113 Move W1, W22
	114 Call List`1<Vector3>.set_Capacity, X0, X1
	115 Move X8, [X25]
	116 Move X8, [X8+184]
	117 Move X0, [X8+8]
	118 Compare X0, 0
	119 JumpIfEqual {607}
	120 Move X2, [X23]
	121 Move W1, W22
	122 Call List`1<Vector3>.set_Capacity, X0, X1
	123 Move X8, [X25]
	124 Move X8, [X8+184]
	125 Move X0, [X8+24]
	126 Compare X0, 0
	127 JumpIfEqual {607}
	128 Move X8, 0x840000
	129 Move X8, [X8+4040]
	130 Move W1, W22
	131 Move X2, [X8]
	132 Call List`1<Int32>.set_Capacity, X0, X1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X26, 0x840000
	135 Move X27, 0x7EA000
	136 Move X28, 0x7E7000
	137 Move X26, [X26+3968]
	138 Move X27, [X27+952]
	139 Move X28, [X28+3600]
	140 Move W23, W31
	141 Move W29, 12
	142 Move X0, [X25]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X25]
	148 Move X9, [X0+184]
	149 Move X8, [X20]
	150 Move X1, [X26]
	151 Move X24, [X9+8]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X20
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X8, [X0]
	168 Move X2, [X0+8]
	169 Move X0, X20
	170 Move W1, W23
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X24, 0
	173 JumpIfEqual {607}
	174 Move W10, [X24+28]
	175 Move X9, [X24+16]
	176 Move X8, [X27]
	177 Add W10, W10, 1
	178 Move [X24+28], W10
	179 Compare X9, 0
	180 JumpIfEqual {607}
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Move W11, [X9+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Add W8, W10, 1
	185 NotImplemented "Instruction MADD not yet implemented."
	186 Move [X24+24], W8
	187 Move [X9+32], S0
	188 Move [X9+40], S1
	189 Move [X9+40], S2
	190 Move X8, [X8+32]
	191 Move X0, X24
	192 Move X8, [X8+192]
	193 Move X1, [X8+112]
	194 Call List`1<Vector3>.AddWithResize, X0, X1
	195 Move X9, [X25]
	196 Move X8, [X20]
	197 Move X1, [X26]
	198 Move X10, [X9+184]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Move X24, [X10+8]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X20
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X2, [X0+8]
	217 Move X0, X20
	218 Move W1, W23
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Compare X24, 0
	221 JumpIfEqual {607}
	222 Move W10, [X24+28]
	223 Move X8, [X24+16]
	224 Move X9, [X27]
	225 Add W10, W10, 1
	226 Move [X24+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {607}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 NotImplemented "Instruction MADD not yet implemented."
	234 Move [X24+24], W9
	235 Move [X8+32], S0
	236 Move [X8+40], S1
	237 Move [X8+40], S2
	238 Move X8, [X9+32]
	239 Move X0, X24
	240 Move X8, [X8+192]
	241 Move X1, [X8+112]
	242 Call List`1<Vector3>.AddWithResize, X0, X1
	243 Move X9, [X25]
	244 Move X8, [X20]
	245 Move X1, [X26]
	246 Move X10, [X9+184]
	247 NotImplemented "Instruction LDRH not yet implemented."
	248 Move X24, [X10+8]
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X20
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X2, [X0+8]
	265 Move X0, X20
	266 Move W1, W23
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Compare X24, 0
	269 JumpIfEqual {607}
	270 Move W10, [X24+28]
	271 Move X8, [X24+16]
	272 Move X9, [X27]
	273 Add W10, W10, 1
	274 Move [X24+28], W10
	275 Compare X8, 0
	276 JumpIfEqual {607}
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Move W11, [X8+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Add W9, W10, 1
	281 NotImplemented "Instruction MADD not yet implemented."
	282 Move [X24+24], W9
	283 Move [X8+32], S0
	284 Move [X8+40], S1
	285 Move [X8+40], S2
	286 Move X8, [X9+32]
	287 Move X0, X24
	288 Move X8, [X8+192]
	289 Move X1, [X8+112]
	290 Call List`1<Vector3>.AddWithResize, X0, X1
	291 Move X9, [X25]
	292 Move X8, [X20]
	293 Move X1, [X26]
	294 Move X10, [X9+184]
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Move X24, [X10+8]
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X20
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X2, [X0+8]
	313 Move X0, X20
	314 Move W1, W23
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X24, 0
	317 JumpIfEqual {607}
	318 Move W10, [X24+28]
	319 Move X8, [X24+16]
	320 Move X9, [X27]
	321 Add W10, W10, 1
	322 Move [X24+28], W10
	323 Compare X8, 0
	324 JumpIfEqual {607}
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Move W11, [X8+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Add W9, W10, 1
	329 NotImplemented "Instruction MADD not yet implemented."
	330 Move [X24+24], W9
	331 Move [X8+32], S0
	332 Move [X8+40], S1
	333 Move [X8+40], S2
	334 Move X8, [X9+32]
	335 Move X0, X24
	336 Move X8, [X8+192]
	337 Move X1, [X8+112]
	338 Call List`1<Vector3>.AddWithResize, X0, X1
	339 Move X8, [X25]
	340 Move X8, [X8+184]
	341 Move X0, [X8]
	342 Compare X0, 0
	343 JumpIfEqual {607}
	344 Move W10, [X0+28]
	345 Move S0, [X8+40]
	346 Move S1, [X8+44]
	347 Move X8, [X0+16]
	348 Move X9, [X27]
	349 Add W10, W10, 1
	350 Move [X0+28], W10
	351 Compare X8, 0
	352 JumpIfEqual {607}
	353 NotImplemented "Instruction LDRSW not yet implemented."
	354 Move W11, [X8+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add W9, W10, 1
	357 NotImplemented "Instruction MADD not yet implemented."
	358 Move [X0+24], W9
	359 Move [X8+32], S0
	360 Move [X8+40], S1
	361 Move [X8+40], W31
	362 Move X8, [X9+32]
	363 Move S2, W31
	364 Move X8, [X8+192]
	365 Move X1, [X8+112]
	366 Call List`1<Vector3>.AddWithResize, X0, X1
	367 Move X8, [X25]
	368 Move X8, [X8+184]
	369 Move X0, [X8]
	370 Compare X0, 0
	371 JumpIfEqual {607}
	372 Move W10, [X0+28]
	373 Move S0, [X8+48]
	374 Move S1, [X8+52]
	375 Move X8, [X0+16]
	376 Move X9, [X27]
	377 Add W10, W10, 1
	378 Move [X0+28], W10
	379 Compare X8, 0
	380 JumpIfEqual {607}
	381 NotImplemented "Instruction LDRSW not yet implemented."
	382 Move W11, [X8+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add W9, W10, 1
	385 NotImplemented "Instruction MADD not yet implemented."
	386 Move [X0+24], W9
	387 Move [X8+32], S0
	388 Move [X8+40], S1
	389 Move [X8+40], W31
	390 Move X8, [X9+32]
	391 Move S2, W31
	392 Move X8, [X8+192]
	393 Move X1, [X8+112]
	394 Call List`1<Vector3>.AddWithResize, X0, X1
	395 Move X8, [X25]
	396 Move X8, [X8+184]
	397 Move X0, [X8]
	398 Compare X0, 0
	399 JumpIfEqual {607}
	400 Move W10, [X0+28]
	401 Move S0, [X8+56]
	402 Move S1, [X8+60]
	403 Move X8, [X0+16]
	404 Move X9, [X27]
	405 Add W10, W10, 1
	406 Move [X0+28], W10
	407 Compare X8, 0
	408 JumpIfEqual {607}
	409 NotImplemented "Instruction LDRSW not yet implemented."
	410 Move W11, [X8+24]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add W9, W10, 1
	413 NotImplemented "Instruction MADD not yet implemented."
	414 Move [X0+24], W9
	415 Move [X8+32], S0
	416 Move [X8+40], S1
	417 Move [X8+40], W31
	418 Move X8, [X9+32]
	419 Move S2, W31
	420 Move X8, [X8+192]
	421 Move X1, [X8+112]
	422 Call List`1<Vector3>.AddWithResize, X0, X1
	423 Move X8, [X25]
	424 Move X8, [X8+184]
	425 Move X0, [X8]
	426 Compare X0, 0
	427 JumpIfEqual {607}
	428 Move W10, [X0+28]
	429 Move S0, [X8+64]
	430 Move S1, [X8+68]
	431 Move X8, [X0+16]
	432 Move X9, [X27]
	433 Add W10, W10, 1
	434 Move [X0+28], W10
	435 Compare X8, 0
	436 JumpIfEqual {607}
	437 NotImplemented "Instruction LDRSW not yet implemented."
	438 Move W11, [X8+24]
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Add W9, W10, 1
	441 NotImplemented "Instruction MADD not yet implemented."
	442 Move [X0+24], W9
	443 Move [X8+32], S0
	444 Move [X8+40], S1
	445 Move [X8+40], W31
	446 Move X8, [X9+32]
	447 Move S2, W31
	448 Move X8, [X8+192]
	449 Move X1, [X8+112]
	450 Call List`1<Vector3>.AddWithResize, X0, X1
	451 Move X8, [X25]
	452 Move X8, [X8+184]
	453 Move X0, [X8+24]
	454 Compare X0, 0
	455 JumpIfEqual {607}
	456 Move W10, [X0+28]
	457 Move X8, [X0+16]
	458 Move X9, [X28]
	459 Add W10, W10, 1
	460 Move [X0+28], W10
	461 Compare X8, 0
	462 JumpIfEqual {607}
	463 NotImplemented "Instruction LDRSW not yet implemented."
	464 Move W11, [X8+24]
	465 Move W24, W23
	466 ShiftRight W24, 30
	467 And W24, W24, 0x1FFFFFFF
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Add W9, W10, 1
	470 Add X8, X8, X10
	471 Move [X0+24], W9
	472 Move [X8+32], W24
	473 Move X8, [X9+32]
	474 Move W1, W24
	475 Move X8, [X8+192]
	476 Move X2, [X8+112]
	477 Call List`1<Int32>.AddWithResize, X0, X1
	478 Move X8, [X25]
	479 Move X8, [X8+184]
	480 Move X0, [X8+24]
	481 Compare X0, 0
	482 JumpIfEqual {607}
	483 Move W10, [X0+28]
	484 Move X8, [X0+16]
	485 Move X9, [X28]
	486 Add W10, W10, 1
	487 Move [X0+28], W10
	488 Compare X8, 0
	489 JumpIfEqual {607}
	490 NotImplemented "Instruction LDRSW not yet implemented."
	491 Move W11, [X8+24]
	492 Or W1, W24, 1
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Add W9, W10, 1
	495 Add X8, X8, X10
	496 Move [X0+24], W9
	497 Move [X8+32], W1
	498 Move X8, [X9+32]
	499 Move X8, [X8+192]
	500 Move X2, [X8+112]
	501 Call List`1<Int32>.AddWithResize, X0, X1
	502 Move X8, [X25]
	503 Move X8, [X8+184]
	504 Move X0, [X8+24]
	505 Compare X0, 0
	506 JumpIfEqual {607}
	507 Move W10, [X0+28]
	508 Move X8, [X0+16]
	509 Move X9, [X28]
	510 Add W10, W10, 1
	511 Move [X0+28], W10
	512 Compare X8, 0
	513 JumpIfEqual {607}
	514 NotImplemented "Instruction LDRSW not yet implemented."
	515 Move W11, [X8+24]
	516 Or W1, W24, 3
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Add W9, W10, 1
	519 Add X8, X8, X10
	520 Move [X0+24], W9
	521 Move [X8+32], W1
	522 Move X8, [X9+32]
	523 Move X8, [X8+192]
	524 Move X2, [X8+112]
	525 Call List`1<Int32>.AddWithResize, X0, X1
	526 Move X8, [X25]
	527 Move X8, [X8+184]
	528 Move X0, [X8+24]
	529 Compare X0, 0
	530 JumpIfEqual {607}
	531 Move W10, [X0+28]
	532 Move X8, [X0+16]
	533 Move X9, [X28]
	534 Add W10, W10, 1
	535 Move [X0+28], W10
	536 Compare X8, 0
	537 JumpIfEqual {607}
	538 NotImplemented "Instruction LDRSW not yet implemented."
	539 Move W11, [X8+24]
	540 Or W1, W24, 2
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Add W9, W10, 1
	543 Add X8, X8, X10
	544 Move [X0+24], W9
	545 Move [X8+32], W1
	546 Move X8, [X9+32]
	547 Move X8, [X8+192]
	548 Move X2, [X8+112]
	549 Call List`1<Int32>.AddWithResize, X0, X1
	550 Add W23, W23, 1
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Compare X19, 0
	553 JumpIfEqual {607}
	554 Move X0, X19
	555 Move X1, X31
	556 Call Mesh.Clear, X0
	557 NotImplemented "Instruction CMP not yet implemented."
	558 NotImplemented "Instruction CSET not yet implemented."
	559 Move X0, X19
	560 Move X2, X31
	561 Call Mesh.set_indexFormat, X0, X1
	562 Move X0, [X25]
	563 Move W8, [X0+224]
	564 Compare W8, 0
	565 JumpIfNotEqual {568}
	566 Call 0x1C17DFC
	567 Move X0, [X25]
	568 Move X8, [X0+184]
	569 Move X0, X19
	570 Move X2, X31
	571 Move X1, [X8+8]
	572 Call Mesh.SetVertices, X0, X1
	573 Move X8, [X25]
	574 Move X0, X19
	575 Move W1, W31
	576 Move X3, X31
	577 Move X8, [X8+184]
	578 Move X2, [X8]
	579 Call Mesh.SetUVs, X0, X1, X2
	580 Move W1, 1
	581 Move X0, X19
	582 Move X2, X31
	583 Call Mesh.set_subMeshCount, X0, X1
	584 Move X8, [X25]
	585 Move X0, X19
	586 Move X20, [X31+80]
	587 Move X19, [X31+88]
	588 Move X22, [X31+64]
	589 Move X21, [X31+72]
	590 Move X8, [X8+184]
	591 Move X24, [X31+48]
	592 Move X23, [X31+56]
	593 Move X26, [X31+32]
	594 Move X25, [X31+40]
	595 Move X28, [X31+16]
	596 Move X27, [X31+24]
	597 Move X1, [X8+24]
	598 Move W2, 2
	599 Move W4, 1
	600 Move W3, W31
	601 Move W5, W31
	602 Move X6, X31
	603 Move X29, [X31+96]
	604 Move X30, [X31+104]
	605 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	606 Return 
	607 Call 0x1C17F20

Method: System.Void CreatePointBillboardMesh(System.Collections.Generic.IList`1<UnityEngine.Vector3> positions, System.Collections.Generic.IList`1<System.Int32> indexes, UnityEngine.Mesh target)

Disassembly:
	0x0390D6B8 LDR X8, [X9 + 0x20]
	0x0390D6BC FMOV S2, W31
	0x0390D6C0 LDR X8, [X8 + 0xC0]
	0x0390D6C4 LDR X1, [X8 + 0x70]
	0x0390D6C8 BL 0x30CC1B4
	0x0390D6CC LDR X8, [X25]
	0x0390D6D0 LDR X8, [X8 + 0xB8]
	0x0390D6D4 LDR X0, [X8 + 0x18]
	0x0390D6D8 CBZ X0, 0x390D914
	0x0390D6DC LDR W10, [X0 + 0x1C]
	0x0390D6E0 LDR X8, [X0 + 0x10]
	0x0390D6E4 LDR X9, [X28]
	0x0390D6E8 ADD W10, W10, 0x1
	0x0390D6EC STR W10, [X0 + 0x1C]
	0x0390D6F0 CBZ X8, 0x390D914
	0x0390D6F4 LDRSW X10, [X0 + 0x18]
	0x0390D6F8 LDR W11, [X8 + 0x18]
	0x0390D6FC UBFM W24, W23, 0x1E, 0x1D
	0x0390D700 CMP W10, W11
	0x0390D704 B.CS 0x390D71C
	0x0390D708 ADD W9, W10, 0x1
	0x0390D70C ADD X8, X8, X10, 0x2, LSL
	0x0390D710 STR W9, [X0 + 0x18]
	0x0390D714 STR W24, [X8 + 0x20]
	0x0390D718 B 0x390D740
	0x0390D71C LDR X8, [X9 + 0x20]
	0x0390D720 MOV W1, W24
	0x0390D724 LDR X8, [X8 + 0xC0]
	0x0390D728 LDR X2, [X8 + 0x70]
	0x0390D72C BL 0x2FDC70C
	0x0390D730 LDR X8, [X25]
	0x0390D734 LDR X8, [X8 + 0xB8]
	0x0390D738 LDR X0, [X8 + 0x18]
	0x0390D73C CBZ X0, 0x390D914
	0x0390D740 LDR W10, [X0 + 0x1C]
	0x0390D744 LDR X8, [X0 + 0x10]
	0x0390D748 LDR X9, [X28]
	0x0390D74C ADD W10, W10, 0x1
	0x0390D750 STR W10, [X0 + 0x1C]
	0x0390D754 CBZ X8, 0x390D914
	0x0390D758 LDRSW X10, [X0 + 0x18]
	0x0390D75C LDR W11, [X8 + 0x18]
	0x0390D760 ORR W1, W24, 0x1
	0x0390D764 CMP W10, W11
	0x0390D768 B.CS 0x390D780
	0x0390D76C ADD W9, W10, 0x1
	0x0390D770 ADD X8, X8, X10, 0x2, LSL
	0x0390D774 STR W9, [X0 + 0x18]
	0x0390D778 STR W1, [X8 + 0x20]
	0x0390D77C B 0x390D7A0
	0x0390D780 LDR X8, [X9 + 0x20]
	0x0390D784 LDR X8, [X8 + 0xC0]
	0x0390D788 LDR X2, [X8 + 0x70]
	0x0390D78C BL 0x2FDC70C
	0x0390D790 LDR X8, [X25]
	0x0390D794 LDR X8, [X8 + 0xB8]
	0x0390D798 LDR X0, [X8 + 0x18]
	0x0390D79C CBZ X0, 0x390D914
	0x0390D7A0 LDR W10, [X0 + 0x1C]
	0x0390D7A4 LDR X8, [X0 + 0x10]
	0x0390D7A8 LDR X9, [X28]
	0x0390D7AC ADD W10, W10, 0x1
	0x0390D7B0 STR W10, [X0 + 0x1C]
	0x0390D7B4 CBZ X8, 0x390D914
	0x0390D7B8 LDRSW X10, [X0 + 0x18]
	0x0390D7BC LDR W11, [X8 + 0x18]
	0x0390D7C0 ORR W1, W24, 0x3
	0x0390D7C4 CMP W10, W11
	0x0390D7C8 B.CS 0x390D7E0
	0x0390D7CC ADD W9, W10, 0x1
	0x0390D7D0 ADD X8, X8, X10, 0x2, LSL
	0x0390D7D4 STR W9, [X0 + 0x18]
	0x0390D7D8 STR W1, [X8 + 0x20]
	0x0390D7DC B 0x390D800
	0x0390D7E0 LDR X8, [X9 + 0x20]
	0x0390D7E4 LDR X8, [X8 + 0xC0]
	0x0390D7E8 LDR X2, [X8 + 0x70]
	0x0390D7EC BL 0x2FDC70C
	0x0390D7F0 LDR X8, [X25]
	0x0390D7F4 LDR X8, [X8 + 0xB8]
	0x0390D7F8 LDR X0, [X8 + 0x18]
	0x0390D7FC CBZ X0, 0x390D914
	0x0390D800 LDR W10, [X0 + 0x1C]
	0x0390D804 LDR X8, [X0 + 0x10]
	0x0390D808 LDR X9, [X28]
	0x0390D80C ADD W10, W10, 0x1
	0x0390D810 STR W10, [X0 + 0x1C]
	0x0390D814 CBZ X8, 0x390D914
	0x0390D818 LDRSW X10, [X0 + 0x18]
	0x0390D81C LDR W11, [X8 + 0x18]
	0x0390D820 ORR W1, W24, 0x2
	0x0390D824 CMP W10, W11
	0x0390D828 B.CS 0x390D840
	0x0390D82C ADD W9, W10, 0x1
	0x0390D830 ADD X8, X8, X10, 0x2, LSL
	0x0390D834 STR W9, [X0 + 0x18]
	0x0390D838 STR W1, [X8 + 0x20]
	0x0390D83C B 0x390D850
	0x0390D840 LDR X8, [X9 + 0x20]
	0x0390D844 LDR X8, [X8 + 0xC0]
	0x0390D848 LDR X2, [X8 + 0x70]
	0x0390D84C BL 0x2FDC70C
	0x0390D850 ADD W23, W23, 0x1
	0x0390D854 CMP W23, W21
	0x0390D858 B.NE 0x390D21C
	0x0390D85C CBZ X19, 0x390D914
	0x0390D860 MOV X0, X19
	0x0390D864 MOV X1, X31
	0x0390D868 BL 0x3C19C94
	0x0390D86C CMP W22, 0x10000
	0x0390D870 CSET W1, GE
	0x0390D874 MOV X0, X19
	0x0390D878 MOV X2, X31
	0x0390D87C BL 0x3C170A8
	0x0390D880 LDR X0, [X25]
	0x0390D884 LDR W8, [X0 + 0xE0]
	0x0390D888 CBNZ W8, 0x390D894
	0x0390D88C BL 0x1C16DFC
	0x0390D890 LDR X0, [X25]
	0x0390D894 LDR X8, [X0 + 0xB8]
	0x0390D898 MOV X0, X19
	0x0390D89C MOV X2, X31
	0x0390D8A0 LDR X1, [X8 + 0x8]
	0x0390D8A4 BL 0x3C18380
	0x0390D8A8 LDR X8, [X25]
	0x0390D8AC MOV X0, X19
	0x0390D8B0 MOV W1, W31
	0x0390D8B4 MOV X3, X31
	0x0390D8B8 LDR X8, [X8 + 0xB8]
	0x0390D8BC LDR X2, [X8]
	0x0390D8C0 BL 0x3C18A00
	0x0390D8C4 MOVZ W1, 0x1
	0x0390D8C8 MOV X0, X19
	0x0390D8CC MOV X2, X31
	0x0390D8D0 BL 0x3C17654
	0x0390D8D4 LDR X8, [X25]
	0x0390D8D8 MOV X0, X19
	0x0390D8DC LDP X20, X19, [X31 + 0x50]
	0x0390D8E0 LDP X22, X21, [X31 + 0x40]
	0x0390D8E4 LDR X8, [X8 + 0xB8]
	0x0390D8E8 LDP X24, X23, [X31 + 0x30]
	0x0390D8EC LDP X26, X25, [X31 + 0x20]
	0x0390D8F0 LDP X28, X27, [X31 + 0x10]
	0x0390D8F4 LDR X1, [X8 + 0x18]
	0x0390D8F8 MOVZ W2, 0x2
	0x0390D8FC MOVZ W4, 0x1
	0x0390D900 MOV W3, W31
	0x0390D904 MOV W5, W31
	0x0390D908 MOV X6, X31
	0x0390D90C LDP X29, X30, [X31], #0x60
	0x0390D910 B 0x3C19AE0
	0x0390D914 BL 0x1C16F20
	0x0390D918 SUB X31, X31, 0xB0
	0x0390D91C STP D13, D12, [X31 + 0x20]
	0x0390D920 STP D11, D10, [X31 + 0x30]
	0x0390D924 STP D9, D8, [X31 + 0x40]
	0x0390D928 STP X29, X30, [X31 + 0x50]
	0x0390D92C STP X28, X27, [X31 + 0x60]
	0x0390D930 STP X26, X25, [X31 + 0x70]
	0x0390D934 STP X24, X23, [X31 + 0x80]
	0x0390D938 STP X22, X21, [X31 + 0x90]
	0x0390D93C STP X20, X19, [X31 + 0xA0]
	0x0390D940 ADRP X19, 0xAD4000
	0x0390D944 LDRB W8, [X19 + 0x80D]
	0x0390D948 MOV X24, X1
	0x0390D94C MOV X20, X0
	0x0390D950 TBNZ X8, 0x0, 0x390D9D4
	0x0390D954 ADRP X0, 0x7E7000
	0x0390D958 LDR X0, [X0 + 0xE10]
	0x0390D95C BL 0x1C16CF4
	0x0390D960 ADRP X0, 0x840000
	0x0390D964 LDR X0, [X0 + 0xFF0]
	0x0390D968 BL 0x1C16CF4
	0x0390D96C ADRP X0, 0x7EA000
	0x0390D970 LDR X0, [X0 + 0x3B8]
	0x0390D974 BL 0x1C16CF4
	0x0390D978 ADRP X0, 0x7EA000
	0x0390D97C LDR X0, [X0 + 0x380]
	0x0390D980 BL 0x1C16CF4
	0x0390D984 ADRP X0, 0x840000
	0x0390D988 LDR X0, [X0 + 0xFF8]
	0x0390D98C BL 0x1C16CF4
	0x0390D990 ADRP X0, 0x7ED000
	0x0390D994 LDR X0, [X0 + 0x858]
	0x0390D998 BL 0x1C16CF4
	0x0390D99C ADRP X0, 0x841000
	0x0390D9A0 LDR X0, [X0]
	0x0390D9A4 BL 0x1C16CF4
	0x0390D9A8 ADRP X0, 0x840000
	0x0390D9AC LDR X0, [X0 + 0xFC8]
	0x0390D9B0 BL 0x1C16CF4
	0x0390D9B4 ADRP X0, 0x840000
	0x0390D9B8 LDR X0, [X0 + 0xFE8]
	0x0390D9BC BL 0x1C16CF4
	0x0390D9C0 ADRP X0, 0x840000
	0x0390D9C4 LDR X0, [X0 + 0xFD0]
	0x0390D9C8 BL 0x1C16CF4
	0x0390D9CC MOVZ W8, 0x1
	0x0390D9D0 STRB W8, [X19 + 0x80D]
	0x0390D9D4 CBZ X24, 0x390E190
	0x0390D9D8 MOV X0, X24
	0x0390D9DC MOV X1, X31
	0x0390D9E0 BL 0x3C19C94
	0x0390D9E4 CBZ X20, 0x390E190
	0x0390D9E8 ADRP X22, 0x840000
	0x0390D9EC LDR X22, [X22 + 0xFD0]
	0x0390D9F0 MOV X0, X20
	0x0390D9F4 MOV X1, X31
	0x0390D9F8 BL 0x3917C14
	0x0390D9FC CMP W0, 0x4000
	0x0390DA00 MOV W21, W0
	0x0390DA04 CSET W1, GE
	0x0390DA08 MOV X0, X24
	0x0390DA0C MOV X2, X31
	0x0390DA10 BL 0x3C170A8
	0x0390DA14 LDR X0, [X22]
	0x0390DA18 LDR X23, [X20 + 0x58]
	0x0390DA1C LDR W8, [X0 + 0xE0]
	0x0390DA20 CBNZ W8, 0x390DA2C
	0x0390DA24 BL 0x1C16DFC
	0x0390DA28 LDR X0, [X22]
	0x0390DA2C LDR X8, [X0 + 0xB8]
	0x0390DA30 LDR X0, [X8 + 0x8]
	0x0390DA34 CBZ X0, 0x390E190
	0x0390DA38 LDR W9, [X0 + 0x1C]
	0x0390DA3C ADD W9, W9, 0x1
	0x0390DA40 STP W31, W9, [X0 + 0x18]
	0x0390DA44 LDR X9, [X8 + 0x10]
	0x0390DA48 CBZ X9, 0x390E190
	0x0390DA4C LDR W10, [X9 + 0x1C]
	0x0390DA50 ADD W10, W10, 0x1
	0x0390DA54 STP W31, W10, [X9 + 0x18]
	0x0390DA58 LDR X8, [X8 + 0x18]
	0x0390DA5C CBZ X8, 0x390E190
	0x0390DA60 LDR W9, [X8 + 0x1C]
	0x0390DA64 ADRP X10, 0x840000
	0x0390DA68 LDR X10, [X10 + 0xFE8]
	0x0390DA6C UBFM W21, W21, 0x1E, 0x1D
	0x0390DA70 ADD W9, W9, 0x1
	0x0390DA74 STP W31, W9, [X8 + 0x18]
	0x0390DA78 LDR X2, [X10]
	0x0390DA7C MOV W1, W21
	0x0390DA80 BL 0x30CBD00
	0x0390DA84 LDR X8, [X22]
	0x0390DA88 LDR X8, [X8 + 0xB8]
	0x0390DA8C LDR X0, [X8 + 0x10]
	0x0390DA90 CBZ X0, 0x390E190
	0x0390DA94 STR X24, [X31 + 0x8]
	0x0390DA98 ADRP X8, 0x841000
	0x0390DA9C LDR X8, [X8]
	0x0390DAA0 MOV W1, W21
	0x0390DAA4 LDR X2, [X8]
	0x0390DAA8 BL 0x30CE978
	0x0390DAAC LDR X8, [X22]
	0x0390DAB0 LDR X8, [X8 + 0xB8]
	0x0390DAB4 LDR X0, [X8 + 0x18]
	0x0390DAB8 CBZ X0, 0x390E190
	0x0390DABC ADRP X8, 0x840000
	0x0390DAC0 LDR X8, [X8 + 0xFC8]
	0x0390DAC4 MOV W1, W21
	0x0390DAC8 LDR X2, [X8]
	0x0390DACC BL 0x2FDC298
	0x0390DAD0 LDR X25, [X20 + 0x28]
	0x0390DAD4 CBZ X25, 0x390E190
	0x0390DAD8 LDR W8, [X25 + 0x18]
	0x0390DADC CMP W8, 0x1
	0x0390DAE0 B.LT 0x390E0EC
	0x0390DAE4 ADRP X26, 0x7EA000
	0x0390DAE8 ADRP X27, 0x840000
	0x0390DAEC ADRP X28, 0x7E7000
	0x0390DAF0 LDR X26, [X26 + 0x3B8]
	0x0390DAF4 LDR X27, [X27 + 0xFF0]
	0x0390DAF8 LDR X28, [X28 + 0xE10]
	0x0390DAFC MOV W9, W31
	0x0390DB00 MOV W20, W31
	0x0390DB04 MOVZ W29, 0xC
	0x0390DB08 MOVZ W19, 0x3F800000
	0x0390DB0C MOVZ W24, 0xBF800000
	0x0390DB10 STR X25, [X31 + 0x10]
	0x0390DB14 CMP W9, W8
	0x0390DB18 B.CS 0x390E194
	0x0390DB1C ADD X8, X25, W9, 0x3, SXTW
	0x0390DB20 LDR X0, [X8 + 0x20]
	0x0390DB24 STR W9, [X31 + 0x1C]
	0x0390DB28 CBZ X0, 0x390E190
	0x0390DB2C LDR X21, [X0 + 0x60]
	0x0390DB30 CBNZ X21, 0x390DB40
	0x0390DB34 BL 0x38FFEEC
	0x0390DB38 MOV X21, X0
	0x0390DB3C CBZ X0, 0x390E190
	0x0390DB40 LDR W8, [X21 + 0x18]
	0x0390DB44 CMP W8, 0x1
	0x0390DB48 B.LT 0x390E0D4
	0x0390DB4C MOV W25, W31
	0x0390DB50 CMP W25, W8
	0x0390DB54 B.CS 0x390E194
	0x0390DB58 CBZ X23, 0x390E190
	0x0390DB5C ADD X8, X21, W25, 0x3, SXTW
	0x0390DB60 LDR X8, [X8 + 0x20]
	0x0390DB64 LDR W10, [X23 + 0x18]
	0x0390DB68 CMP W8, W10
	0x0390DB6C B.CS 0x390E194
	0x0390DB70 SBFM X9, X8, 0x20, 0x3F
	0x0390DB74 CMP W9, W10
	0x0390DB78 B.CS 0x390E194
	0x0390DB7C LDR X0, [X22]
	0x0390DB80 SXTW X8, W8
	0x0390DB84 MADD X9, X9, X29, X23
	0x0390DB88 MADD X8, X8, X29, X23
	0x0390DB8C LDP S13, S12, [X8 + 0x20]
	0x0390DB90 LDR V8, [X8 + 0x28]
	0x0390DB94 LDP S9, S10, [X9 + 0x20]
	0x0390DB98 LDR W8, [X0 + 0xE0]
	0x0390DB9C LDR V11, [X9 + 0x28]
	0x0390DBA0 CBNZ W8, 0x390DBAC
	0x0390DBA4 BL 0x1C16DFC
	0x0390DBA8 LDR X0, [X22]
	0x0390DBAC LDR X8, [X0 + 0xB8]
	0x0390DBB0 LDR X0, [X8 + 0x8]
	0x0390DBB4 CBZ X0, 0x390E190
	0x0390DBB8 LDR W10, [X0 + 0x1C]
	0x0390DBBC LDR X8, [X0 + 0x10]
	0x0390DBC0 LDR X9, [X26]
	0x0390DBC4 ADD W10, W10, 0x1
	0x0390DBC8 STR W10, [X0 + 0x1C]
	0x0390DBCC CBZ X8, 0x390E190
	0x0390DBD0 LDRSW X10, [X0 + 0x18]
	0x0390DBD4 LDR W11, [X8 + 0x18]
	0x0390DBD8 CMP W10, W11
	0x0390DBDC B.CS 0x390DBF8
	0x0390DBE0 ADD W9, W10, 0x1
	0x0390DBE4 MADD X8, X10, X29, X8
	0x0390DBE8 STR W9, [X0 + 0x18]
	0x0390DBEC STP S13, S12, [X8 + 0x20]
	0x0390DBF0 STR S8, [X8 + 0x28]
	0x0390DBF4 B 0x390DC14
	0x0390DBF8 LDR X8, [X9 + 0x20]
	0x0390DBFC MOV V0.16B, V13.16B
	0x0390DC00 MOV V1.16B, V12.16B
	0x0390DC04 MOV V2.16B, V8.16B
	0x0390DC08 LDR X8, [X8 + 0xC0]
	0x0390DC0C LDR X1, [X8 + 0x70]
	0x0390DC10 BL 0x30CC1B4
	0x0390DC14 LDR X8, [X22]
	0x0390DC18 LDR X8, [X8 + 0xB8]
	0x0390DC1C LDR X0, [X8 + 0x8]
	0x0390DC20 CBZ X0, 0x390E190
	0x0390DC24 LDR W10, [X0 + 0x1C]
	0x0390DC28 LDR X8, [X0 + 0x10]
	0x0390DC2C LDR X9, [X26]
	0x0390DC30 ADD W10, W10, 0x1
	0x0390DC34 STR W10, [X0 + 0x1C]
	0x0390DC38 CBZ X8, 0x390E190
	0x0390DC3C LDRSW X10, [X0 + 0x18]
	0x0390DC40 LDR W11, [X8 + 0x18]
	0x0390DC44 CMP W10, W11
	0x0390DC48 B.CS 0x390DC64
	0x0390DC4C ADD W9, W10, 0x1
	0x0390DC50 MADD X8, X10, X29, X8
	0x0390DC54 STR W9, [X0 + 0x18]
	0x0390DC58 STP S13, S12, [X8 + 0x20]
	0x0390DC5C STR S8, [X8 + 0x28]
	0x0390DC60 B 0x390DC80
	0x0390DC64 LDR X8, [X9 + 0x20]
	0x0390DC68 MOV V0.16B, V13.16B
	0x0390DC6C MOV V1.16B, V12.16B
	0x0390DC70 MOV V2.16B, V8.16B
	0x0390DC74 LDR X8, [X8 + 0xC0]
	0x0390DC78 LDR X1, [X8 + 0x70]
	0x0390DC7C BL 0x30CC1B4
	0x0390DC80 LDR X8, [X22]
	0x0390DC84 LDR X8, [X8 + 0xB8]
	0x0390DC88 LDR X0, [X8 + 0x8]
	0x0390DC8C CBZ X0, 0x390E190
	0x0390DC90 LDR W10, [X0 + 0x1C]
	0x0390DC94 LDR X8, [X0 + 0x10]
	0x0390DC98 LDR X9, [X26]
	0x0390DC9C ADD W10, W10, 0x1
	0x0390DCA0 STR W10, [X0 + 0x1C]
	0x0390DCA4 CBZ X8, 0x390E190
	0x0390DCA8 LDRSW X10, [X0 + 0x18]
	0x0390DCAC LDR W11, [X8 + 0x18]
	0x0390DCB0 CMP W10, W11
	0x0390DCB4 B.CS 0x390DCD0
	0x0390DCB8 ADD W9, W10, 0x1
	0x0390DCBC MADD X8, X10, X29, X8
	0x0390DCC0 STR W9, [X0 + 0x18]
	0x0390DCC4 STP S9, S10, [X8 + 0x20]
	0x0390DCC8 STR S11, [X8 + 0x28]
	0x0390DCCC B 0x390DCEC
	0x0390DCD0 LDR X8, [X9 + 0x20]
	0x0390DCD4 MOV V0.16B, V9.16B
	0x0390DCD8 MOV V1.16B, V10.16B
	0x0390DCDC MOV V2.16B, V11.16B
	0x0390DCE0 LDR X8, [X8 + 0xC0]
	0x0390DCE4 LDR X1, [X8 + 0x70]
	0x0390DCE8 BL 0x30CC1B4
	0x0390DCEC LDR X8, [X22]
	0x0390DCF0 LDR X8, [X8 + 0xB8]
	0x0390DCF4 LDR X0, [X8 + 0x8]
	0x0390DCF8 CBZ X0, 0x390E190
	0x0390DCFC LDR W10, [X0 + 0x1C]
	0x0390DD00 LDR X8, [X0 + 0x10]
	0x0390DD04 LDR X9, [X26]
	0x0390DD08 ADD W10, W10, 0x1
	0x0390DD0C STR W10, [X0 + 0x1C]
	0x0390DD10 CBZ X8, 0x390E190
	0x0390DD14 LDRSW X10, [X0 + 0x18]
	0x0390DD18 LDR W11, [X8 + 0x18]
	0x0390DD1C CMP W10, W11
	0x0390DD20 B.CS 0x390DD3C
	0x0390DD24 ADD W9, W10, 0x1
	0x0390DD28 MADD X8, X10, X29, X8
	0x0390DD2C STR W9, [X0 + 0x18]
	0x0390DD30 STP S9, S10, [X8 + 0x20]
	0x0390DD34 STR S11, [X8 + 0x28]
	0x0390DD38 B 0x390DD58
	0x0390DD3C LDR X8, [X9 + 0x20]
	0x0390DD40 MOV V0.16B, V9.16B
	0x0390DD44 MOV V1.16B, V10.16B
	0x0390DD48 MOV V2.16B, V11.16B
	0x0390DD4C LDR X8, [X8 + 0xC0]
	0x0390DD50 LDR X1, [X8 + 0x70]
	0x0390DD54 BL 0x30CC1B4
	0x0390DD58 LDR X8, [X22]
	0x0390DD5C LDR X8, [X8 + 0xB8]
	0x0390DD60 LDR X0, [X8 + 0x10]
	0x0390DD64 CBZ X0, 0x390E190
	0x0390DD68 LDR W10, [X0 + 0x1C]
	0x0390DD6C LDR X9, [X0 + 0x10]
	0x0390DD70 LDR X8, [X27]
	0x0390DD74 ADD W10, W10, 0x1
	0x0390DD78 STR W10, [X0 + 0x1C]
	0x0390DD7C CBZ X9, 0x390E190
	0x0390DD80 LDRSW X10, [X0 + 0x18]
	0x0390DD84 LDR W11, [X9 + 0x18]
	0x0390DD88 CMP W10, W11
	0x0390DD8C B.CS 0x390DDAC
	0x0390DD90 ADD W8, W10, 0x1
	0x0390DD94 ADD X9, X9, X10, 0x4, LSL
	0x0390DD98 STR W8, [X0 + 0x18]
	0x0390DD9C STP S9, S10, [X9 + 0x20]
	0x0390DDA0 STR S11, [X9 + 0x28]
	0x0390DDA4 STR W19, [X9 + 0x2C]
	0x0390DDA8 B 0x390DDCC
	0x0390DDAC LDR X8, [X8 + 0x20]
	0x0390DDB0 FMOV S3, 1
	0x0390DDB4 MOV V0.16B, V9.16B
	0x0390DDB8 MOV V1.16B, V10.16B
	0x0390DDBC LDR X8, [X8 + 0xC0]
	0x0390DDC0 MOV V2.16B, V11.16B
	0x0390DDC4 LDR X1, [X8 + 0x70]
	0x0390DDC8 BL 0x30CEE24
	0x0390DDCC LDR X8, [X22]
	0x0390DDD0 LDR X8, [X8 + 0xB8]
	0x0390DDD4 LDR X0, [X8 + 0x10]
	0x0390DDD8 CBZ X0, 0x390E190
	0x0390DDDC LDR W10, [X0 + 0x1C]
	0x0390DDE0 LDR X9, [X0 + 0x10]
	0x0390DDE4 LDR X8, [X27]
	0x0390DDE8 ADD W10, W10, 0x1
	0x0390DDEC STR W10, [X0 + 0x1C]
	0x0390DDF0 CBZ X9, 0x390E190
	0x0390DDF4 LDRSW X10, [X0 + 0x18]
	0x0390DDF8 LDR W11, [X9 + 0x18]
	0x0390DDFC CMP W10, W11
	0x0390DE00 B.CS 0x390DE20
	0x0390DE04 ADD W8, W10, 0x1
	0x0390DE08 ADD X9, X9, X10, 0x4, LSL
	0x0390DE0C STR W8, [X0 + 0x18]
	0x0390DE10 STP S9, S10, [X9 + 0x20]
	0x0390DE14 STR S11, [X9 + 0x28]
	0x0390DE18 STR W24, [X9 + 0x2C]
	0x0390DE1C B 0x390DE40
	0x0390DE20 LDR X8, [X8 + 0x20]
	0x0390DE24 FMOV S3, -1
	0x0390DE28 MOV V0.16B, V9.16B
	0x0390DE2C MOV V1.16B, V10.16B
	0x0390DE30 LDR X8, [X8 + 0xC0]
	0x0390DE34 MOV V2.16B, V11.16B
	0x0390DE38 LDR X1, [X8 + 0x70]
	0x0390DE3C BL 0x30CEE24
	0x0390DE40 LDR X8, [X22]
	0x0390DE44 LDR X8, [X8 + 0xB8]
	0x0390DE48 LDR X0, [X8 + 0x10]
	0x0390DE4C CBZ X0, 0x390E190
	0x0390DE50 LDR W10, [X0 + 0x1C]
	0x0390DE54 LDR X9, [X0 + 0x10]
	0x0390DE58 LDR X8, [X27]
	0x0390DE5C ADD W10, W10, 0x1
	0x0390DE60 STR W10, [X0 + 0x1C]
	0x0390DE64 CBZ X9, 0x390E190
	0x0390DE68 LDRSW X10, [X0 + 0x18]
	0x0390DE6C LDR W11, [X9 + 0x18]
	0x0390DE70 FSUB S0, S9, S13
	0x0390DE74 FSUB S1, S10, S12
	0x0390DE78 FSUB S2, S11, S8
	0x0390DE7C FADD S12, S9, S0
	0x0390DE80 FADD S9, S10, S1
	0x0390DE84 CMP W10, W11
	0x0390DE88 FADD S8, S11, S2
	0x0390DE8C B.CS 0x390DEAC
	0x0390DE90 ADD W8, W10, 0x1
	0x0390DE94 ADD X9, X9, X10, 0x4, LSL
	0x0390DE98 STR W8, [X0 + 0x18]
	0x0390DE9C STP S12, S9, [X9 + 0x20]
	0x0390DEA0 STR S8, [X9 + 0x28]
	0x0390DEA4 STR W19, [X9 + 0x2C]
	0x0390DEA8 B 0x390DECC
	0x0390DEAC LDR X8, [X8 + 0x20]
	0x0390DEB0 FMOV S3, 1
	0x0390DEB4 MOV V0.16B, V12.16B
	0x0390DEB8 MOV V1.16B, V9.16B
	0x0390DEBC LDR X8, [X8 + 0xC0]
	0x0390DEC0 MOV V2.16B, V8.16B
	0x0390DEC4 LDR X1, [X8 + 0x70]
	0x0390DEC8 BL 0x30CEE24
	0x0390DECC LDR X8, [X22]
	0x0390DED0 LDR X8, [X8 + 0xB8]
	0x0390DED4 LDR X0, [X8 + 0x10]
	0x0390DED8 CBZ X0, 0x390E190
	0x0390DEDC LDR W10, [X0 + 0x1C]
	0x0390DEE0 LDR X9, [X0 + 0x10]
	0x0390DEE4 LDR X8, [X27]
	0x0390DEE8 ADD W10, W10, 0x1
	0x0390DEEC STR W10, [X0 + 0x1C]
	0x0390DEF0 CBZ X9, 0x390E190
	0x0390DEF4 LDRSW X10, [X0 + 0x18]
	0x0390DEF8 LDR W11, [X9 + 0x18]
	0x0390DEFC CMP W10, W11
	0x0390DF00 B.CS 0x390DF20
	0x0390DF04 ADD W8, W10, 0x1
	0x0390DF08 ADD X9, X9, X10, 0x4, LSL
	0x0390DF0C STR W8, [X0 + 0x18]
	0x0390DF10 STP S12, S9, [X9 + 0x20]
	0x0390DF14 STR S8, [X9 + 0x28]
	0x0390DF18 STR W24, [X9 + 0x2C]
	0x0390DF1C B 0x390DF40
	0x0390DF20 LDR X8, [X8 + 0x20]
	0x0390DF24 FMOV S3, -1
	0x0390DF28 MOV V0.16B, V12.16B
	0x0390DF2C MOV V1.16B, V9.16B
	0x0390DF30 LDR X8, [X8 + 0xC0]
	0x0390DF34 MOV V2.16B, V8.16B
	0x0390DF38 LDR X1, [X8 + 0x70]
	0x0390DF3C BL 0x30CEE24
	0x0390DF40 LDR X8, [X22]
	0x0390DF44 LDR X8, [X8 + 0xB8]
	0x0390DF48 LDR X0, [X8 + 0x18]
	0x0390DF4C CBZ X0, 0x390E190
	0x0390DF50 LDR W10, [X0 + 0x1C]
	0x0390DF54 LDR X8, [X0 + 0x10]
	0x0390DF58 LDR X9, [X28]
	0x0390DF5C ADD W10, W10, 0x1
	0x0390DF60 STR W10, [X0 + 0x1C]
	0x0390DF64 CBZ X8, 0x390E190
	0x0390DF68 LDRSW X10, [X0 + 0x18]
	0x0390DF6C LDR W11, [X8 + 0x18]
	0x0390DF70 CMP W10, W11
	0x0390DF74 B.CS 0x390DF8C
	0x0390DF78 ADD W9, W10, 0x1
	0x0390DF7C ADD X8, X8, X10, 0x2, LSL
	0x0390DF80 STR W9, [X0 + 0x18]
	0x0390DF84 STR W20, [X8 + 0x20]
	0x0390DF88 B 0x390DFB0
	0x0390DF8C LDR X8, [X9 + 0x20]
	0x0390DF90 MOV W1, W20
	0x0390DF94 LDR X8, [X8 + 0xC0]
	0x0390DF98 LDR X2, [X8 + 0x70]
	0x0390DF9C BL 0x2FDC70C
	0x0390DFA0 LDR X8, [X22]
	0x0390DFA4 LDR X8, [X8 + 0xB8]
	0x0390DFA8 LDR X0, [X8 + 0x18]
	0x0390DFAC CBZ X0, 0x390E190
	0x0390DFB0 LDR W10, [X0 + 0x1C]
	0x0390DFB4 LDR X8, [X0 + 0x10]
	0x0390DFB8 LDR X9, [X28]
	0x0390DFBC ADD W10, W10, 0x1
	0x0390DFC0 STR W10, [X0 + 0x1C]
	0x0390DFC4 CBZ X8, 0x390E190
	0x0390DFC8 LDRSW X10, [X0 + 0x18]
	0x0390DFCC LDR W11, [X8 + 0x18]
	0x0390DFD0 ADD W1, W20, 0x1
	0x0390DFD4 CMP W10, W11
	0x0390DFD8 B.CS 0x390DFF0
	0x0390DFDC ADD W9, W10, 0x1
	0x0390DFE0 ADD X8, X8, X10, 0x2, LSL
	0x0390DFE4 STR W9, [X0 + 0x18]
	0x0390DFE8 STR W1, [X8 + 0x20]
	0x0390DFEC B 0x390E010
	0x0390DFF0 LDR X8, [X9 + 0x20]
	0x0390DFF4 LDR X8, [X8 + 0xC0]
	0x0390DFF8 LDR X2, [X8 + 0x70]
	0x0390DFFC BL 0x2FDC70C
	0x0390E000 LDR X8, [X22]
	0x0390E004 LDR X8, [X8 + 0xB8]
	0x0390E008 LDR X0, [X8 + 0x18]
	0x0390E00C CBZ X0, 0x390E190
	0x0390E010 LDR W10, [X0 + 0x1C]
	0x0390E014 LDR X8, [X0 + 0x10]
	0x0390E018 LDR X9, [X28]
	0x0390E01C ADD W10, W10, 0x1
	0x0390E020 STR W10, [X0 + 0x1C]
	0x0390E024 CBZ X8, 0x390E190
	0x0390E028 LDRSW X10, [X0 + 0x18]
	0x0390E02C LDR W11, [X8 + 0x18]
	0x0390E030 ADD W1, W20, 0x3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xAD5000
	015 Move W8, [X19+2060]
	016 Move X23, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0x80F000
	024 Move X0, [X0+1952]
	025 Call 0x1C17CF4
	026 Move X0, 0x841000
	027 Move X0, [X0+3968]
	028 Call 0x1C17CF4
	029 Move X0, 0x80F000
	030 Move X0, [X0+1960]
	031 Call 0x1C17CF4
	032 Move X0, 0x7E8000
	033 Move X0, [X0+3600]
	034 Call 0x1C17CF4
	035 Move X0, 0x7EB000
	036 Move X0, [X0+952]
	037 Call 0x1C17CF4
	038 Move X0, 0x7EB000
	039 Move X0, [X0+896]
	040 Call 0x1C17CF4
	041 Move X0, 0x7EE000
	042 Move X0, [X0+2136]
	043 Call 0x1C17CF4
	044 Move X0, 0x841000
	045 Move X0, [X0+4040]
	046 Call 0x1C17CF4
	047 Move X0, 0x841000
	048 Move X0, [X0+4072]
	049 Call 0x1C17CF4
	050 Move X0, 0x841000
	051 Move X0, [X0+4048]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X19+2060], W8
	055 Compare X20, 0
	056 JumpIfEqual {645}
	057 Move X10, 0x80F000
	058 Move X8, [X20]
	059 Move X10, [X10+1952]
	060 Move X27, 0x841000
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Move X27, [X27+4048]
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X27]
	083 Move W22, W0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X8, [X27]
	090 Move X8, [X8+184]
	091 Move X0, [X8]
	092 Compare X0, 0
	093 JumpIfEqual {645}
	094 Move W9, [X0+28]
	095 Add W9, W9, 1
	096 Move [X0+24], W31
	097 Move [X0+28], W9
	098 Move X9, [X8+8]
	099 Compare X9, 0
	100 JumpIfEqual {645}
	101 Move W10, [X9+28]
	102 Add W10, W10, 1
	103 Move [X9+24], W31
	104 Move [X9+28], W10
	105 Move X8, [X8+24]
	106 Compare X8, 0
	107 JumpIfEqual {645}
	108 Move W9, [X8+28]
	109 Move [X31+8], X23
	110 Move X19, 0x841000
	111 Move X19, [X19+4072]
	112 Add W9, W9, 1
	113 Move [X8+24], W31
	114 Move [X8+28], W9
	115 Move W23, W22
	116 ShiftRight W23, 30
	117 And W23, W23, 0x1FFFFFFF
	118 Move X2, [X19]
	119 Move W1, W23
	120 Call List`1<Vector3>.set_Capacity, X0, X1
	121 Move X8, [X27]
	122 Move X8, [X8+184]
	123 Move X0, [X8+8]
	124 Compare X0, 0
	125 JumpIfEqual {645}
	126 Move X2, [X19]
	127 Move W1, W23
	128 Call List`1<Vector3>.set_Capacity, X0, X1
	129 Move X8, [X27]
	130 Move X8, [X8+184]
	131 Move X0, [X8+24]
	132 Compare X0, 0
	133 JumpIfEqual {645}
	134 Move X8, 0x841000
	135 Move X8, [X8+4040]
	136 Move W1, W23
	137 Move [X31+4], W23
	138 Move X2, [X8]
	139 Call List`1<Int32>.set_Capacity, X0, X1
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X29, 0x841000
	142 Move X23, 0x7EB000
	143 Move X19, 0x7E8000
	144 Move X29, [X29+3968]
	145 Move X23, [X23+952]
	146 Move X19, [X19+3600]
	147 Move W24, W31
	148 Move W28, 12
	149 Move X8, [X20]
	150 Move X10, 0x80F000
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Move X10, [X10+1960]
	153 Move X1, [X10]
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X20
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X2, [X0+8]
	170 Move X0, X20
	171 Move W1, W24
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X27]
	174 Move W25, W0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {181}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X8, [X27]
	181 Compare X21, 0
	182 JumpIfEqual {645}
	183 Move X9, [X8+184]
	184 Move X8, [X21]
	185 Move X1, [X29]
	186 Move X26, [X9+8]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X21
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X2, [X0+8]
	204 Move X0, X21
	205 Move W1, W25
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X26, 0
	208 JumpIfEqual {645}
	209 Move W10, [X26+28]
	210 Move X9, [X26+16]
	211 Move X8, [X23]
	212 Add W10, W10, 1
	213 Move [X26+28], W10
	214 Compare X9, 0
	215 JumpIfEqual {645}
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Move W11, [X9+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add W8, W10, 1
	220 NotImplemented "Instruction MADD not yet implemented."
	221 Move [X26+24], W8
	222 Move [X9+32], S0
	223 Move [X9+40], S1
	224 Move [X9+40], S2
	225 Move X8, [X8+32]
	226 Move X0, X26
	227 Move X8, [X8+192]
	228 Move X1, [X8+112]
	229 Call List`1<Vector3>.AddWithResize, X0, X1
	230 Move X9, [X27]
	231 Move X8, [X21]
	232 Move X1, [X29]
	233 Move X10, [X9+184]
	234 NotImplemented "Instruction LDRH not yet implemented."
	235 Move X26, [X10+8]
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X21
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X2, [X0+8]
	252 Move X0, X21
	253 Move W1, W25
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Compare X26, 0
	256 JumpIfEqual {645}
	257 Move W10, [X26+28]
	258 Move X8, [X26+16]
	259 Move X9, [X23]
	260 Add W10, W10, 1
	261 Move [X26+28], W10
	262 Compare X8, 0
	263 JumpIfEqual {645}
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Move W11, [X8+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Add W9, W10, 1
	268 NotImplemented "Instruction MADD not yet implemented."
	269 Move [X26+24], W9
	270 Move [X8+32], S0
	271 Move [X8+40], S1
	272 Move [X8+40], S2
	273 Move X8, [X9+32]
	274 Move X0, X26
	275 Move X8, [X8+192]
	276 Move X1, [X8+112]
	277 Call List`1<Vector3>.AddWithResize, X0, X1
	278 Move X9, [X27]
	279 Move X8, [X21]
	280 Move X1, [X29]
	281 Move X10, [X9+184]
	282 NotImplemented "Instruction LDRH not yet implemented."
	283 Move X26, [X10+8]
	284 Compare X9, 0
	285 JumpIfEqual {292}
	286 Move X10, [X8+176]
	287 Add X10, X10, 8
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Subtract X9, X9, 1
	291 Add X10, X10, 16
	292 Move X0, X21
	293 Move W2, W31
	294 Call 0x1C5D788
	295 NotImplemented "Instruction LDRSW not yet implemented."
	296 Add X8, X8, X9
	297 Add X0, X8, 312
	298 Move X8, [X0]
	299 Move X2, [X0+8]
	300 Move X0, X21
	301 Move W1, W25
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Compare X26, 0
	304 JumpIfEqual {645}
	305 Move W10, [X26+28]
	306 Move X8, [X26+16]
	307 Move X9, [X23]
	308 Add W10, W10, 1
	309 Move [X26+28], W10
	310 Compare X8, 0
	311 JumpIfEqual {645}
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Move W11, [X8+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add W9, W10, 1
	316 NotImplemented "Instruction MADD not yet implemented."
	317 Move [X26+24], W9
	318 Move [X8+32], S0
	319 Move [X8+40], S1
	320 Move [X8+40], S2
	321 Move X8, [X9+32]
	322 Move X0, X26
	323 Move X8, [X8+192]
	324 Move X1, [X8+112]
	325 Call List`1<Vector3>.AddWithResize, X0, X1
	326 Move X9, [X27]
	327 Move X8, [X21]
	328 Move X1, [X29]
	329 Move X10, [X9+184]
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Move X26, [X10+8]
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move X0, X21
	341 Move W2, W31
	342 Call 0x1C5D788
	343 NotImplemented "Instruction LDRSW not yet implemented."
	344 Add X8, X8, X9
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X2, [X0+8]
	348 Move X0, X21
	349 Move W1, W25
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Compare X26, 0
	352 JumpIfEqual {645}
	353 Move W10, [X26+28]
	354 Move X8, [X26+16]
	355 Move X9, [X23]
	356 Add W10, W10, 1
	357 Move [X26+28], W10
	358 Compare X8, 0
	359 JumpIfEqual {645}
	360 NotImplemented "Instruction LDRSW not yet implemented."
	361 Move W11, [X8+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Add W9, W10, 1
	364 NotImplemented "Instruction MADD not yet implemented."
	365 Move [X26+24], W9
	366 Move [X8+32], S0
	367 Move [X8+40], S1
	368 Move [X8+40], S2
	369 Move X8, [X9+32]
	370 Move X0, X26
	371 Move X8, [X8+192]
	372 Move X1, [X8+112]
	373 Call List`1<Vector3>.AddWithResize, X0, X1
	374 Move X8, [X27]
	375 Move X8, [X8+184]
	376 Move X0, [X8]
	377 Compare X0, 0
	378 JumpIfEqual {645}
	379 Move W10, [X0+28]
	380 Move S0, [X8+40]
	381 Move S1, [X8+44]
	382 Move X8, [X0+16]
	383 Move X9, [X23]
	384 Add W10, W10, 1
	385 Move [X0+28], W10
	386 Compare X8, 0
	387 JumpIfEqual {645}
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Move W11, [X8+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Add W9, W10, 1
	392 NotImplemented "Instruction MADD not yet implemented."
	393 Move [X0+24], W9
	394 Move [X8+32], S0
	395 Move [X8+40], S1
	396 Move [X8+40], W31
	397 Move X8, [X9+32]
	398 Move S2, W31
	399 Move X8, [X8+192]
	400 Move X1, [X8+112]
	401 Call List`1<Vector3>.AddWithResize, X0, X1
	402 Move X8, [X27]
	403 Move X8, [X8+184]
	404 Move X0, [X8]
	405 Compare X0, 0
	406 JumpIfEqual {645}
	407 Move W10, [X0+28]
	408 Move S0, [X8+48]
	409 Move S1, [X8+52]
	410 Move X8, [X0+16]
	411 Move X9, [X23]
	412 Add W10, W10, 1
	413 Move [X0+28], W10
	414 Compare X8, 0
	415 JumpIfEqual {645}
	416 NotImplemented "Instruction LDRSW not yet implemented."
	417 Move W11, [X8+24]
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Add W9, W10, 1
	420 NotImplemented "Instruction MADD not yet implemented."
	421 Move [X0+24], W9
	422 Move [X8+32], S0
	423 Move [X8+40], S1
	424 Move [X8+40], W31
	425 Move X8, [X9+32]
	426 Move S2, W31
	427 Move X8, [X8+192]
	428 Move X1, [X8+112]
	429 Call List`1<Vector3>.AddWithResize, X0, X1
	430 Move X8, [X27]
	431 Move X8, [X8+184]
	432 Move X0, [X8]
	433 Compare X0, 0
	434 JumpIfEqual {645}
	435 Move W10, [X0+28]
	436 Move S0, [X8+56]
	437 Move S1, [X8+60]
	438 Move X8, [X0+16]
	439 Move X9, [X23]
	440 Add W10, W10, 1
	441 Move [X0+28], W10
	442 Compare X8, 0
	443 JumpIfEqual {645}
	444 NotImplemented "Instruction LDRSW not yet implemented."
	445 Move W11, [X8+24]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Add W9, W10, 1
	448 NotImplemented "Instruction MADD not yet implemented."
	449 Move [X0+24], W9
	450 Move [X8+32], S0
	451 Move [X8+40], S1
	452 Move [X8+40], W31
	453 Move X8, [X9+32]
	454 Move S2, W31
	455 Move X8, [X8+192]
	456 Move X1, [X8+112]
	457 Call List`1<Vector3>.AddWithResize, X0, X1
	458 Move X8, [X27]
	459 Move X8, [X8+184]
	460 Move X0, [X8]
	461 Compare X0, 0
	462 JumpIfEqual {645}
	463 Move W10, [X0+28]
	464 Move S0, [X8+64]
	465 Move S1, [X8+68]
	466 Move X8, [X0+16]
	467 Move X9, [X23]
	468 Add W10, W10, 1
	469 Move [X0+28], W10
	470 Compare X8, 0
	471 JumpIfEqual {645}
	472 NotImplemented "Instruction LDRSW not yet implemented."
	473 Move W11, [X8+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Add W9, W10, 1
	476 NotImplemented "Instruction MADD not yet implemented."
	477 Move [X0+24], W9
	478 Move [X8+32], S0
	479 Move [X8+40], S1
	480 Move [X8+40], W31
	481 Move X8, [X9+32]
	482 Move S2, W31
	483 Move X8, [X8+192]
	484 Move X1, [X8+112]
	485 Call List`1<Vector3>.AddWithResize, X0, X1
	486 Move X8, [X27]
	487 Move X8, [X8+184]
	488 Move X0, [X8+24]
	489 Compare X0, 0
	490 JumpIfEqual {645}
	491 Move W10, [X0+28]
	492 Move X8, [X0+16]
	493 Move X9, [X19]
	494 Add W10, W10, 1
	495 Move [X0+28], W10
	496 Compare X8, 0
	497 JumpIfEqual {645}
	498 NotImplemented "Instruction LDRSW not yet implemented."
	499 Move W11, [X8+24]
	500 Move W25, W24
	501 ShiftRight W25, 30
	502 And W25, W25, 0x1FFFFFFF
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Add W9, W10, 1
	505 Add X8, X8, X10
	506 Move [X0+24], W9
	507 Move [X8+32], W25
	508 Move X8, [X9+32]
	509 Move W1, W25
	510 Move X8, [X8+192]
	511 Move X2, [X8+112]
	512 Call List`1<Int32>.AddWithResize, X0, X1
	513 Move X8, [X27]
	514 Move X8, [X8+184]
	515 Move X0, [X8+24]
	516 Compare X0, 0
	517 JumpIfEqual {645}
	518 Move W10, [X0+28]
	519 Move X8, [X0+16]
	520 Move X9, [X19]
	521 Add W10, W10, 1
	522 Move [X0+28], W10
	523 Compare X8, 0
	524 JumpIfEqual {645}
	525 NotImplemented "Instruction LDRSW not yet implemented."
	526 Move W11, [X8+24]
	527 Or W1, W25, 1
	528 NotImplemented "Instruction CMP not yet implemented."
	529 Add W9, W10, 1
	530 Add X8, X8, X10
	531 Move [X0+24], W9
	532 Move [X8+32], W1
	533 Move X8, [X9+32]
	534 Move X8, [X8+192]
	535 Move X2, [X8+112]
	536 Call List`1<Int32>.AddWithResize, X0, X1
	537 Move X8, [X27]
	538 Move X8, [X8+184]
	539 Move X0, [X8+24]
	540 Compare X0, 0
	541 JumpIfEqual {645}
	542 Move W10, [X0+28]
	543 Move X8, [X0+16]
	544 Move X9, [X19]
	545 Add W10, W10, 1
	546 Move [X0+28], W10
	547 Compare X8, 0
	548 JumpIfEqual {645}
	549 NotImplemented "Instruction LDRSW not yet implemented."
	550 Move W11, [X8+24]
	551 Or W1, W25, 3
	552 NotImplemented "Instruction CMP not yet implemented."
	553 Add W9, W10, 1
	554 Add X8, X8, X10
	555 Move [X0+24], W9
	556 Move [X8+32], W1
	557 Move X8, [X9+32]
	558 Move X8, [X8+192]
	559 Move X2, [X8+112]
	560 Call List`1<Int32>.AddWithResize, X0, X1
	561 Move X8, [X27]
	562 Move X8, [X8+184]
	563 Move X0, [X8+24]
	564 Compare X0, 0
	565 JumpIfEqual {645}
	566 Move W10, [X0+28]
	567 Move X8, [X0+16]
	568 Move X9, [X19]
	569 Add W10, W10, 1
	570 Move [X0+28], W10
	571 Compare X8, 0
	572 JumpIfEqual {645}
	573 NotImplemented "Instruction LDRSW not yet implemented."
	574 Move W11, [X8+24]
	575 Or W1, W25, 2
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Add W9, W10, 1
	578 Add X8, X8, X10
	579 Move [X0+24], W9
	580 Move [X8+32], W1
	581 Move X8, [X9+32]
	582 Move X8, [X8+192]
	583 Move X2, [X8+112]
	584 Call List`1<Int32>.AddWithResize, X0, X1
	585 Add W24, W24, 1
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Move X19, [X31+8]
	588 Compare X19, 0
	589 JumpIfEqual {645}
	590 Move X0, X19
	591 Move X1, X31
	592 Call Mesh.Clear, X0
	593 Move W8, [X31+4]
	594 Move X0, X19
	595 Move X2, X31
	596 NotImplemented "Instruction CMP not yet implemented."
	597 NotImplemented "Instruction CSET not yet implemented."
	598 Call Mesh.set_indexFormat, X0, X1
	599 Move X0, [X27]
	600 Move W8, [X0+224]
	601 Compare W8, 0
	602 JumpIfNotEqual {605}
	603 Call 0x1C17DFC
	604 Move X0, [X27]
	605 Move X8, [X0+184]
	606 Move X0, X19
	607 Move X2, X31
	608 Move X1, [X8+8]
	609 Call Mesh.SetVertices, X0, X1
	610 Move X8, [X27]
	611 Move X0, X19
	612 Move W1, W31
	613 Move X3, X31
	614 Move X8, [X8+184]
	615 Move X2, [X8]
	616 Call Mesh.SetUVs, X0, X1, X2
	617 Move W1, 1
	618 Move X0, X19
	619 Move X2, X31
	620 Call Mesh.set_subMeshCount, X0, X1
	621 Move X8, [X27]
	622 Move X0, X19
	623 Move X20, [X31+96]
	624 Move X19, [X31+104]
	625 Move X22, [X31+80]
	626 Move X21, [X31+88]
	627 Move X8, [X8+184]
	628 Move X24, [X31+64]
	629 Move X23, [X31+72]
	630 Move X26, [X31+48]
	631 Move X25, [X31+56]
	632 Move X28, [X31+32]
	633 Move X27, [X31+40]
	634 Move X1, [X8+24]
	635 Move X29, [X31+16]
	636 Move X30, [X31+24]
	637 Move W2, 2
	638 Move W4, 1
	639 Move W3, W31
	640 Move W5, W31
	641 Move X6, X31
	642 Add X31, X31, 112
	643 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	644 Return 
	645 Call 0x1C17F20

Method: System.Void CreateEdgeBillboardMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target)

Disassembly:
	0x0390E918 MOV V2.16B, V8.16B
	0x0390E91C BL 0x30CEE24
	0x0390E920 LDR X8, [X23]
	0x0390E924 LDR X8, [X8 + 0xB8]
	0x0390E928 LDR X0, [X8 + 0x18]
	0x0390E92C CBZ X0, 0x390EC34
	0x0390E930 LDR W10, [X0 + 0x1C]
	0x0390E934 LDR X8, [X0 + 0x10]
	0x0390E938 LDR X9, [X29]
	0x0390E93C ADD W10, W10, 0x1
	0x0390E940 STR W10, [X0 + 0x1C]
	0x0390E944 CBZ X8, 0x390EC20
	0x0390E948 LDRSW X10, [X0 + 0x18]
	0x0390E94C LDR W11, [X8 + 0x18]
	0x0390E950 CMP W10, W11
	0x0390E954 B.CS 0x390E96C
	0x0390E958 ADD W9, W10, 0x1
	0x0390E95C ADD X8, X8, X10, 0x2, LSL
	0x0390E960 STR W9, [X0 + 0x18]
	0x0390E964 STR W21, [X8 + 0x20]
	0x0390E968 B 0x390E990
	0x0390E96C LDR X8, [X9 + 0x20]
	0x0390E970 LDR X8, [X8 + 0xC0]
	0x0390E974 LDR X2, [X8 + 0x70]
	0x0390E978 MOV W1, W21
	0x0390E97C BL 0x2FDC70C
	0x0390E980 LDR X8, [X23]
	0x0390E984 LDR X8, [X8 + 0xB8]
	0x0390E988 LDR X0, [X8 + 0x18]
	0x0390E98C CBZ X0, 0x390EC58
	0x0390E990 LDR W10, [X0 + 0x1C]
	0x0390E994 LDR X8, [X0 + 0x10]
	0x0390E998 LDR X9, [X29]
	0x0390E99C ADD W10, W10, 0x1
	0x0390E9A0 STR W10, [X0 + 0x1C]
	0x0390E9A4 CBZ X8, 0x390EC48
	0x0390E9A8 LDRSW X10, [X0 + 0x18]
	0x0390E9AC LDR W11, [X8 + 0x18]
	0x0390E9B0 ORR W1, W21, 0x1
	0x0390E9B4 CMP W10, W11
	0x0390E9B8 B.CS 0x390E9D0
	0x0390E9BC ADD W9, W10, 0x1
	0x0390E9C0 ADD X8, X8, X10, 0x2, LSL
	0x0390E9C4 STR W9, [X0 + 0x18]
	0x0390E9C8 STR W1, [X8 + 0x20]
	0x0390E9CC B 0x390E9F0
	0x0390E9D0 LDR X8, [X9 + 0x20]
	0x0390E9D4 LDR X8, [X8 + 0xC0]
	0x0390E9D8 LDR X2, [X8 + 0x70]
	0x0390E9DC BL 0x2FDC70C
	0x0390E9E0 LDR X8, [X23]
	0x0390E9E4 LDR X8, [X8 + 0xB8]
	0x0390E9E8 LDR X0, [X8 + 0x18]
	0x0390E9EC CBZ X0, 0x390EC54
	0x0390E9F0 LDR W10, [X0 + 0x1C]
	0x0390E9F4 LDR X8, [X0 + 0x10]
	0x0390E9F8 LDR X9, [X29]
	0x0390E9FC ADD W10, W10, 0x1
	0x0390EA00 STR W10, [X0 + 0x1C]
	0x0390EA04 CBZ X8, 0x390EC50
	0x0390EA08 LDRSW X10, [X0 + 0x18]
	0x0390EA0C LDR W11, [X8 + 0x18]
	0x0390EA10 ORR W1, W21, 0x3
	0x0390EA14 CMP W10, W11
	0x0390EA18 B.CS 0x390EA30
	0x0390EA1C ADD W9, W10, 0x1
	0x0390EA20 ADD X8, X8, X10, 0x2, LSL
	0x0390EA24 STR W9, [X0 + 0x18]
	0x0390EA28 STR W1, [X8 + 0x20]
	0x0390EA2C B 0x390EA50
	0x0390EA30 LDR X8, [X9 + 0x20]
	0x0390EA34 LDR X8, [X8 + 0xC0]
	0x0390EA38 LDR X2, [X8 + 0x70]
	0x0390EA3C BL 0x2FDC70C
	0x0390EA40 LDR X8, [X23]
	0x0390EA44 LDR X8, [X8 + 0xB8]
	0x0390EA48 LDR X0, [X8 + 0x18]
	0x0390EA4C CBZ X0, 0x390EC5C
	0x0390EA50 LDR W10, [X0 + 0x1C]
	0x0390EA54 LDR X8, [X0 + 0x10]
	0x0390EA58 LDR X9, [X29]
	0x0390EA5C ADD W10, W10, 0x1
	0x0390EA60 STR W10, [X0 + 0x1C]
	0x0390EA64 CBZ X8, 0x390EC3C
	0x0390EA68 LDRSW X10, [X0 + 0x18]
	0x0390EA6C LDR W11, [X8 + 0x18]
	0x0390EA70 ORR W1, W21, 0x2
	0x0390EA74 CMP W10, W11
	0x0390EA78 B.CS 0x390EA90
	0x0390EA7C ADD W9, W10, 0x1
	0x0390EA80 ADD X8, X8, X10, 0x2, LSL
	0x0390EA84 STR W9, [X0 + 0x18]
	0x0390EA88 STR W1, [X8 + 0x20]
	0x0390EA8C B 0x390EAA0
	0x0390EA90 LDR X8, [X9 + 0x20]
	0x0390EA94 LDR X8, [X8 + 0xC0]
	0x0390EA98 LDR X2, [X8 + 0x70]
	0x0390EA9C BL 0x2FDC70C
	0x0390EAA0 ADD W21, W21, 0x4
	0x0390EAA4 B 0x390E480
	0x0390EAA8 MOV X22, X31
	0x0390EAAC MOVZ W19, 0x6
	0x0390EAB0 CBZ X20, 0x390EB14
	0x0390EAB4 LDR X8, [X20]
	0x0390EAB8 ADRP X10, 0x7E5000
	0x0390EABC LDRH W9, [X8 + 0x12E]
	0x0390EAC0 LDR X10, [X10 + 0xE00]
	0x0390EAC4 LDR X1, [X10]
	0x0390EAC8 CBZ X9, 0x390EAEC
	0x0390EACC LDR X10, [X8 + 0xB0]
	0x0390EAD0 ADD X10, X10, 0x8
	0x0390EAD4 LDUR X11, [X10 - 0x8]
	0x0390EAD8 CMP X11, X1
	0x0390EADC B.EQ 0x390EAFC
	0x0390EAE0 SUBS X9, X9, 0x1
	0x0390EAE4 ADD X10, X10, 0x10
	0x0390EAE8 B.NE 0x390EAD4
	0x0390EAEC MOV X0, X20
	0x0390EAF0 MOV W2, W31
	0x0390EAF4 BL 0x1C5C788
	0x0390EAF8 B 0x390EB08
	0x0390EAFC LDRSW X9, [X10]
	0x0390EB00 ADD X8, X8, X9, 0x4, LSL
	0x0390EB04 ADD X0, X8, 0x138
	0x0390EB08 LDP X8, X1, [X0]
	0x0390EB0C MOV X0, X20
	0x0390EB10 BLR X8
	0x0390EB14 CBNZ X22, 0x390EC68
	0x0390EB18 CMP W19, 0x6
	0x0390EB1C B.EQ 0x390EB24
	0x0390EB20 CBNZ W19, 0x390EBC8
	0x0390EB24 LDR X0, [X23]
	0x0390EB28 LDR W8, [X0 + 0xE0]
	0x0390EB2C CBNZ W8, 0x390EB38
	0x0390EB30 BL 0x1C16DFC
	0x0390EB34 LDR X0, [X23]
	0x0390EB38 LDR X8, [X0 + 0xB8]
	0x0390EB3C LDR X19, [X31 + 0x8]
	0x0390EB40 MOV X2, X31
	0x0390EB44 LDR X1, [X8 + 0x8]
	0x0390EB48 MOV X0, X19
	0x0390EB4C BL 0x3C18380
	0x0390EB50 LDR X8, [X23]
	0x0390EB54 MOV X0, X19
	0x0390EB58 MOV X2, X31
	0x0390EB5C LDR X8, [X8 + 0xB8]
	0x0390EB60 LDR X1, [X8 + 0x10]
	0x0390EB64 BL 0x3C1869C
	0x0390EB68 MOVZ W1, 0x1
	0x0390EB6C MOV X0, X19
	0x0390EB70 MOV X2, X31
	0x0390EB74 BL 0x3C17654
	0x0390EB78 LDR X8, [X23]
	0x0390EB7C MOV X0, X19
	0x0390EB80 LDP X20, X19, [X31 + 0x90]
	0x0390EB84 LDP X22, X21, [X31 + 0x80]
	0x0390EB88 LDR X8, [X8 + 0xB8]
	0x0390EB8C LDP X24, X23, [X31 + 0x70]
	0x0390EB90 LDP X26, X25, [X31 + 0x60]
	0x0390EB94 LDP X28, X27, [X31 + 0x50]
	0x0390EB98 LDR X1, [X8 + 0x18]
	0x0390EB9C LDP X29, X30, [X31 + 0x40]
	0x0390EBA0 LDP D9, D8, [X31 + 0x30]
	0x0390EBA4 LDP D11, D10, [X31 + 0x20]
	0x0390EBA8 LDP D13, D12, [X31 + 0x10]
	0x0390EBAC MOVZ W2, 0x2
	0x0390EBB0 MOVZ W4, 0x1
	0x0390EBB4 MOV W3, W31
	0x0390EBB8 MOV W5, W31
	0x0390EBBC MOV X6, X31
	0x0390EBC0 ADD X31, X31, 0xA0
	0x0390EBC4 B 0x3C19AE0
	0x0390EBC8 LDP X20, X19, [X31 + 0x90]
	0x0390EBCC LDP X22, X21, [X31 + 0x80]
	0x0390EBD0 LDP X24, X23, [X31 + 0x70]
	0x0390EBD4 LDP X26, X25, [X31 + 0x60]
	0x0390EBD8 LDP X28, X27, [X31 + 0x50]
	0x0390EBDC LDP X29, X30, [X31 + 0x40]
	0x0390EBE0 LDP D9, D8, [X31 + 0x30]
	0x0390EBE4 LDP D11, D10, [X31 + 0x20]
	0x0390EBE8 LDP D13, D12, [X31 + 0x10]
	0x0390EBEC ADD X31, X31, 0xA0
	0x0390EBF0 RET
	0x0390EBF4 BL 0x1C16F28
	0x0390EBF8 BL 0x1C16F28
	0x0390EBFC BL 0x1C16F20
	0x0390EC00 BL 0x1C16F20
	0x0390EC04 BL 0x1C16F20
	0x0390EC08 BL 0x1C16F20
	0x0390EC0C BL 0x1C16F20
	0x0390EC10 BL 0x1C16F20
	0x0390EC14 BL 0x1C16F20
	0x0390EC18 BL 0x1C16F20
	0x0390EC1C BL 0x1C16F20
	0x0390EC20 BL 0x1C16F20
	0x0390EC24 BL 0x1C16F20
	0x0390EC28 BL 0x1C16F20
	0x0390EC2C BL 0x1C16F20
	0x0390EC30 BL 0x1C16F20
	0x0390EC34 BL 0x1C16F20
	0x0390EC38 BL 0x1C16F20
	0x0390EC3C BL 0x1C16F20
	0x0390EC40 BL 0x1C16F20
	0x0390EC44 BL 0x1C16F20
	0x0390EC48 BL 0x1C16F20
	0x0390EC4C BL 0x1C16F20
	0x0390EC50 BL 0x1C16F20
	0x0390EC54 BL 0x1C16F20
	0x0390EC58 BL 0x1C16F20
	0x0390EC5C BL 0x1C16F20
	0x0390EC60 BL 0x1C16F20
	0x0390EC64 BL 0x1C16F20
	0x0390EC68 MOV X0, X22
	0x0390EC6C BL 0x1C16F18
	0x0390EC70 B 0x390ECE8
	0x0390EC74 B 0x390ECE8
	0x0390EC78 B 0x390ECE8
	0x0390EC7C B 0x390ECE8
	0x0390EC80 B 0x390ECE8
	0x0390EC84 B 0x390ECE8
	0x0390EC88 B 0x390ECE8
	0x0390EC8C B 0x390ECE8
	0x0390EC90 B 0x390ECE8
	0x0390EC94 B 0x390ECE8
	0x0390EC98 B 0x390ECE8
	0x0390EC9C B 0x390ECE8
	0x0390ECA0 B 0x390ECE8
	0x0390ECA4 B 0x390ECE8
	0x0390ECA8 B 0x390ECE8
	0x0390ECAC B 0x390ECE8
	0x0390ECB0 B 0x390ECE8
	0x0390ECB4 B 0x390ECE8
	0x0390ECB8 B 0x390ECE8
	0x0390ECBC B 0x390ECE8
	0x0390ECC0 B 0x390ECE8
	0x0390ECC4 B 0x390ECE8
	0x0390ECC8 B 0x390ECE8
	0x0390ECCC B 0x390ECE8
	0x0390ECD0 B 0x390ECE8
	0x0390ECD4 B 0x390ECE8
	0x0390ECD8 B 0x390ECE8
	0x0390ECDC B 0x390ECE8
	0x0390ECE0 B 0x390ECE8
	0x0390ECE4 B 0x390ECE8
	0x0390ECE8 MOV X21, X0
	0x0390ECEC CMP W1, 0x1
	0x0390ECF0 B.NE 0x390ED10
	0x0390ECF4 MOV X0, X21
	0x0390ECF8 BL 0x3EB1AD0
	0x0390ECFC LDR X22, [X0]
	0x0390ED00 BL 0x3EB1AE0
	0x0390ED04 MOV W19, W31
	0x0390ED08 CBNZ X20, 0x390EAB4
	0x0390ED0C B 0x390EB14
	0x0390ED10 MOV X22, X31
	0x0390ED14 B 0x390ED1C
	0x0390ED18 MOV X21, X0
	0x0390ED1C CBZ X20, 0x390ED80
	0x0390ED20 LDR X8, [X20]
	0x0390ED24 ADRP X10, 0x7E5000
	0x0390ED28 LDRH W9, [X8 + 0x12E]
	0x0390ED2C LDR X10, [X10 + 0xE00]
	0x0390ED30 LDR X1, [X10]
	0x0390ED34 CBZ X9, 0x390ED58
	0x0390ED38 LDR X10, [X8 + 0xB0]
	0x0390ED3C ADD X10, X10, 0x8
	0x0390ED40 LDUR X11, [X10 - 0x8]
	0x0390ED44 CMP X11, X1
	0x0390ED48 B.EQ 0x390ED68
	0x0390ED4C SUBS X9, X9, 0x1
	0x0390ED50 ADD X10, X10, 0x10
	0x0390ED54 B.NE 0x390ED40
	0x0390ED58 MOV X0, X20
	0x0390ED5C MOV W2, W31
	0x0390ED60 BL 0x1C5C788
	0x0390ED64 B 0x390ED74
	0x0390ED68 LDRSW X9, [X10]
	0x0390ED6C ADD X8, X8, X9, 0x4, LSL
	0x0390ED70 ADD X0, X8, 0x138
	0x0390ED74 LDP X8, X1, [X0]
	0x0390ED78 MOV X0, X20
	0x0390ED7C BLR X8
	0x0390ED80 CBNZ X22, 0x390ED8C
	0x0390ED84 MOV X0, X21
	0x0390ED88 BL 0x1D2C690
	0x0390ED8C MOV X0, X22
	0x0390ED90 BL 0x1C16F18
	0x0390ED94 BL 0x1990590
	0x0390ED98 STR X30, [X31 - 0x50]!
	0x0390ED9C STP X26, X25, [X31 + 0x10]
	0x0390EDA0 STP X24, X23, [X31 + 0x20]
	0x0390EDA4 STP X22, X21, [X31 + 0x30]
	0x0390EDA8 STP X20, X19, [X31 + 0x40]
	0x0390EDAC ADRP X19, 0xAD3000
	0x0390EDB0 ADRP X26, 0x7E9000
	0x0390EDB4 ADRP X25, 0x811000
	0x0390EDB8 ADRP X20, 0x83F000
	0x0390EDBC ADRP X24, 0x840000
	0x0390EDC0 ADRP X23, 0x840000
	0x0390EDC4 ADRP X22, 0x7E6000
	0x0390EDC8 ADRP X21, 0x7E9000
	0x0390EDCC LDR X26, [X26 + 0x3C0]
	0x0390EDD0 LDR X25, [X25 + 0x5B8]
	0x0390EDD4 LDRB W8, [X19 + 0x80F]
	0x0390EDD8 LDR X20, [X20 + 0xFD0]
	0x0390EDDC LDR X24, [X24 + 0x8]
	0x0390EDE0 LDR X23, [X23 + 0x10]
	0x0390EDE4 LDR X22, [X22 + 0xE30]
	0x0390EDE8 LDR X21, [X21 + 0xB70]
	0x0390EDEC TBNZ X8, 0x0, 0x390EE4C
	0x0390EDF0 ADRP X0, 0x7E9000
	0x0390EDF4 LDR X0, [X0 + 0xB70]
	0x0390EDF8 BL 0x1C16CF4
	0x0390EDFC ADRP X0, 0x840000
	0x0390EE00 LDR X0, [X0 + 0x10]
	0x0390EE04 BL 0x1C16CF4
	0x0390EE08 ADRP X0, 0x811000
	0x0390EE0C LDR X0, [X0 + 0x5B8]
	0x0390EE10 BL 0x1C16CF4
	0x0390EE14 ADRP X0, 0x7E6000
	0x0390EE18 LDR X0, [X0 + 0xE30]
	0x0390EE1C BL 0x1C16CF4
	0x0390EE20 ADRP X0, 0x7E9000
	0x0390EE24 LDR X0, [X0 + 0x3C0]
	0x0390EE28 BL 0x1C16CF4
	0x0390EE2C ADRP X0, 0x840000
	0x0390EE30 LDR X0, [X0 + 0x8]
	0x0390EE34 BL 0x1C16CF4
	0x0390EE38 ADRP X0, 0x83F000
	0x0390EE3C LDR X0, [X0 + 0xFD0]
	0x0390EE40 BL 0x1C16CF4
	0x0390EE44 MOVZ W8, 0x1
	0x0390EE48 STRB W8, [X19 + 0x80F]
	0x0390EE4C LDR X0, [X26]
	0x0390EE50 BL 0x1C16F10
	0x0390EE54 LDR X1, [X25]
	0x0390EE58 MOV X19, X0
	0x0390EE5C BL 0x30CB97C
	0x0390EE60 LDR X8, [X20]
	0x0390EE64 LDR X8, [X8 + 0xB8]
	0x0390EE68 STR X19, [X8]
	0x0390EE6C LDR X0, [X26]
	0x0390EE70 BL 0x1C16F10
	0x0390EE74 LDR X1, [X25]
	0x0390EE78 MOV X19, X0
	0x0390EE7C BL 0x30CB97C
	0x0390EE80 LDR X8, [X20]
	0x0390EE84 LDR X8, [X8 + 0xB8]
	0x0390EE88 STR X19, [X8 + 0x8]
	0x0390EE8C LDR X0, [X24]
	0x0390EE90 BL 0x1C16F10
	0x0390EE94 LDR X1, [X23]
	0x0390EE98 MOV X19, X0
	0x0390EE9C BL 0x30CE5F4
	0x0390EEA0 LDR X8, [X20]
	0x0390EEA4 LDR X8, [X8 + 0xB8]
	0x0390EEA8 STR X19, [X8 + 0x10]
	0x0390EEAC LDR X0, [X22]
	0x0390EEB0 BL 0x1C16F10
	0x0390EEB4 LDR X1, [X21]
	0x0390EEB8 MOV X19, X0
	0x0390EEBC BL 0x2FDBF14
	0x0390EEC0 LDR X8, [X20]
	0x0390EEC4 LDR X8, [X8 + 0xB8]
	0x0390EEC8 STR X19, [X8 + 0x18]
	0x0390EECC LDR X0, [X22]
	0x0390EED0 BL 0x1C16F10
	0x0390EED4 LDR X1, [X21]
	0x0390EED8 MOV X19, X0
	0x0390EEDC BL 0x2FDBF14
	0x0390EEE0 LDR X8, [X20]
	0x0390EEE4 FMOV V0.2S, 0x0
	0x0390EEE8 ADRP X10, 0xFFFFFFFFFD1DF000
	0x0390EEEC LDP X22, X21, [X31 + 0x30]
	0x0390EEF0 LDR X9, [X8 + 0xB8]
	0x0390EEF4 LDP X24, X23, [X31 + 0x20]
	0x0390EEF8 LDP X26, X25, [X31 + 0x10]
	0x0390EEFC STR D0, [X9 + 0x28]
	0x0390EF00 STR X19, [X9 + 0x20]
	0x0390EF04 LDR V0, [X10 + 0xB40]
	0x0390EF08 LDR X9, [X8 + 0xB8]
	0x0390EF0C ADRP X10, 0xFFFFFFFFFD1DF000
	0x0390EF10 LDP X20, X19, [X31 + 0x40]
	0x0390EF14 STR D0, [X9 + 0x30]
	0x0390EF18 LDR X9, [X8 + 0xB8]
	0x0390EF1C LDR V0, [X10 + 0x930]
	0x0390EF20 STR D0, [X9 + 0x38]
	0x0390EF24 LDR X8, [X8 + 0xB8]
	0x0390EF28 FMOV V0.2S, 0x0
	0x0390EF2C STR D0, [X8 + 0x40]
	0x0390EF30 LDR X30, [X31], #0x50
	0x0390EF34 RET
	0x0390EF38 STR X30, [X31 - 0x20]!
	0x0390EF3C STP X20, X19, [X31 + 0x10]
	0x0390EF40 ADRP X19, 0xAD3000
	0x0390EF44 ADRP X20, 0x83F000
	0x0390EF48 LDRB W8, [X19 + 0x811]
	0x0390EF4C LDR X20, [X20 + 0xFB8]
	0x0390EF50 TBNZ X8, 0x0, 0x390EF68
	0x0390EF54 ADRP X0, 0x83F000
	0x0390EF58 LDR X0, [X0 + 0xFB8]
	0x0390EF5C BL 0x1C16CF4
	0x0390EF60 MOVZ W8, 0x1
	0x0390EF64 STRB W8, [X19 + 0x811]
	0x0390EF68 LDR X0, [X20]
	0x0390EF6C BL 0x1C16F10
	0x0390EF70 MOV X1, X31
	0x0390EF74 MOV X19, X0
	0x0390EF78 BL 0x33BDD8C
	0x0390EF7C LDR X8, [X20]
	0x0390EF80 LDR X8, [X8 + 0xB8]
	0x0390EF84 STR X19, [X8]
	0x0390EF88 LDP X20, X19, [X31 + 0x10]
	0x0390EF8C LDR X30, [X31], #0x20
	0x0390EF90 RET
	0x0390EF94 MOV X1, X31
	0x0390EF98 B 0x33BDD8C
	0x0390EF9C CBZ X1, 0x390EFAC
	0x0390EFA0 MOV X0, X1
	0x0390EFA4 MOV X1, X31
	0x0390EFA8 B 0x38FFC6C
	0x0390EFAC STR X30, [X31 - 0x10]!
	0x0390EFB0 BL 0x1C16F20
	0x0390EFB4 CBZ X1, 0x390EFC4
	0x0390EFB8 MOV X0, X1
	0x0390EFBC MOV X1, X31
	0x0390EFC0 B 0x38FFC6C
	0x0390EFC4 STR X30, [X31 - 0x10]!
	0x0390EFC8 BL 0x1C16F20
	0x0390EFCC SUB X31, X31, 0x80
	0x0390EFD0 STP X29, X30, [X31 + 0x20]
	0x0390EFD4 STP X28, X27, [X31 + 0x30]
	0x0390EFD8 STP X26, X25, [X31 + 0x40]
	0x0390EFDC STP X24, X23, [X31 + 0x50]
	0x0390EFE0 STP X22, X21, [X31 + 0x60]
	0x0390EFE4 STP X20, X19, [X31 + 0x70]
	0x0390EFE8 ADRP X19, 0xAD3000
	0x0390EFEC ADRP X20, 0x7E5000
	0x0390EFF0 LDRB W8, [X19 + 0x812]
	0x0390EFF4 LDR X20, [X20 + 0x598]
	0x0390EFF8 MOV X25, X0
	0x0390EFFC TBNZ X8, 0x0, 0x390F038
	0x0390F000 ADRP X0, 0x81C000
	0x0390F004 LDR X0, [X0 + 0xDA0]
	0x0390F008 BL 0x1C16CF4
	0x0390F00C ADRP X0, 0x7E4000
	0x0390F010 LDR X0, [X0 + 0x598]
	0x0390F014 BL 0x1C16CF4
	0x0390F018 ADRP X0, 0x83F000
	0x0390F01C LDR X0, [X0 + 0x18]
	0x0390F020 BL 0x1C16CF4
	0x0390F024 ADRP X0, 0x83F000
	0x0390F028 LDR X0, [X0 + 0x20]
	0x0390F02C BL 0x1C16CF4
	0x0390F030 MOVZ W8, 0x1
	0x0390F034 STRB W8, [X19 + 0x812]
	0x0390F038 LDR X0, [X20]
	0x0390F03C LDR W8, [X0 + 0xE0]
	0x0390F040 CBNZ W8, 0x390F048
	0x0390F044 BL 0x1C16DFC
	0x0390F048 MOV X0, X25
	0x0390F04C MOV X1, X31
	0x0390F050 MOV X2, X31
	0x0390F054 BL 0x3C3883C
	0x0390F058 TBNZ X0, 0x0, 0x390F288
	0x0390F05C MOV X0, X25
	0x0390F060 BL 0x390F2D0
	0x0390F064 CBZ X25, 0x390F284
	0x0390F068 MOV X23, X0
	0x0390F06C MOV X0, X25
	0x0390F070 MOV X1, X31
	0x0390F074 BL 0x3C0F650
	0x0390F078 MOV W21, W0
	0x0390F07C MOV X0, X25
	0x0390F080 MOV X1, X31
	0x0390F084 BL 0x3C18F3C
	0x0390F088 CBZ X0, 0x390F284
	0x0390F08C ADRP X8, 0x83F000
	0x0390F090 LDR X8, [X8 + 0x18]
	0x0390F094 LDR W1, [X0 + 0x18]
	0x0390F098 ADRP X19, 0x81C000
	0x0390F09C LDR X8, [X8]
	0x0390F0A0 LDR X19, [X19 + 0xDA0]
	0x0390F0A4 MOV X0, X8
	0x0390F0A8 BL 0x1C16D6C
	0x0390F0AC LDR X8, [X19]
	0x0390F0B0 MOV X20, X0
	0x0390F0B4 MOV W1, W21
	0x0390F0B8 MOV X0, X8
	0x0390F0BC BL 0x1C16D6C
	0x0390F0C0 CMP W21, 0x1
	0x0390F0C4 B.LT 0x390F23C
	0x0390F0C8 MOV X22, X0
	0x0390F0CC MOV X24, X31
	0x0390F0D0 MOV W28, W31
	0x0390F0D4 MOV W26, W21
	0x0390F0D8 STR W21, [X31 + 0xC]
	0x0390F0DC STP X26, X25, [X31 + 0x10]
	0x0390F0E0 MOV X0, X25
	0x0390F0E4 MOV W1, W24
	0x0390F0E8 MOV X2, X31
	0x0390F0EC BL 0x3C19138
	0x0390F0F0 CBZ X22, 0x390F284
	0x0390F0F4 LDR W8, [X22 + 0x18]
	0x0390F0F8 CMP X24, X8
	0x0390F0FC B.CS 0x390F280
	0x0390F100 ADD X21, X22, X24, 0x3, LSL
	0x0390F104 STR X0, [X21 + 0x20]!
	0x0390F108 CBZ X0, 0x390F284
	0x0390F10C LDR X19, [X0 + 0x18]
	0x0390F110 CMP W19, 0x1
	0x0390F114 B.LT 0x390F1CC
	0x0390F118 MOV W27, W31
	0x0390F11C MOV X9, X19
	0x0390F120 CMP X24, W8, UXTW
	0x0390F124 B.CS 0x390F280
	0x0390F128 CMP W27, W9
	0x0390F12C B.CS 0x390F280
	0x0390F130 CBZ X23, 0x390F284
	0x0390F134 SXTW X29, W27
	0x0390F138 ADD X8, X0, X29, 0x2, LSL
	0x0390F13C LDRSW X8, [X8 + 0x20]
	0x0390F140 LDR W9, [X23 + 0x18]
	0x0390F144 CMP W8, W9
	0x0390F148 B.CS 0x390F280
	0x0390F14C ADD X8, X23, X8, 0x3, LSL
	0x0390F150 LDR X26, [X8 + 0x20]
	0x0390F154 ADRP X8, 0x83F000
	0x0390F158 LDR X8, [X8 + 0x20]
	0x0390F15C LDR X0, [X8]
	0x0390F160 BL 0x1C16F10
	0x0390F164 MOV X1, X26
	0x0390F168 MOV X2, X31
	0x0390F16C MOV X25, X0
	0x0390F170 BL 0x393DFBC
	0x0390F174 CBZ X20, 0x390F284
	0x0390F178 LDR W8, [X20 + 0x18]
	0x0390F17C ADD W10, W28, W27
	0x0390F180 CMP W10, W8
	0x0390F184 B.CS 0x390F280
	0x0390F188 ADD X8, X20, W10, 0x3, SXTW
	0x0390F18C STR X25, [X8 + 0x20]
	0x0390F190 LDR W8, [X22 + 0x18]
	0x0390F194 CMP X24, X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+32], D13
	003 Move [X31+40], D12
	004 Move [X31+48], D11
	005 Move [X31+56], D10
	006 Move [X31+64], D9
	007 Move [X31+72], D8
	008 Move [X31+80], X29
	009 Move [X31+88], X30
	010 Move [X31+96], X28
	011 Move [X31+104], X27
	012 Move [X31+112], X26
	013 Move [X31+120], X25
	014 Move [X31+128], X24
	015 Move [X31+136], X23
	016 Move [X31+144], X22
	017 Move [X31+152], X21
	018 Move [X31+160], X20
	019 Move [X31+168], X19
	020 Move X19, 0xAD4000
	021 Move W8, [X19+2061]
	022 Move X24, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, 0x7E7000
	029 Move X0, [X0+3600]
	030 Call 0x1C17CF4
	031 Move X0, 0x840000
	032 Move X0, [X0+4080]
	033 Call 0x1C17CF4
	034 Move X0, 0x7EA000
	035 Move X0, [X0+952]
	036 Call 0x1C17CF4
	037 Move X0, 0x7EA000
	038 Move X0, [X0+896]
	039 Call 0x1C17CF4
	040 Move X0, 0x840000
	041 Move X0, [X0+4088]
	042 Call 0x1C17CF4
	043 Move X0, 0x7ED000
	044 Move X0, [X0+2136]
	045 Call 0x1C17CF4
	046 Move X0, 0x841000
	047 Move X0, [X0]
	048 Call 0x1C17CF4
	049 Move X0, 0x840000
	050 Move X0, [X0+4040]
	051 Call 0x1C17CF4
	052 Move X0, 0x840000
	053 Move X0, [X0+4072]
	054 Call 0x1C17CF4
	055 Move X0, 0x840000
	056 Move X0, [X0+4048]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+2061], W8
	060 Compare X24, 0
	061 JumpIfEqual {587}
	062 Move X0, X24
	063 Move X1, X31
	064 Call Mesh.Clear, X0
	065 Compare X20, 0
	066 JumpIfEqual {587}
	067 Move X22, 0x840000
	068 Move X22, [X22+4048]
	069 Move X0, X20
	070 Move X1, X31
	071 Call ProBuilderMesh.get_edgeCount, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W21, W0
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X0, X24
	076 Move X2, X31
	077 Call Mesh.set_indexFormat, X0, X1
	078 Move X0, [X22]
	079 Move X23, [X20+88]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X22]
	085 Move X8, [X0+184]
	086 Move X0, [X8+8]
	087 Compare X0, 0
	088 JumpIfEqual {587}
	089 Move W9, [X0+28]
	090 Add W9, W9, 1
	091 Move [X0+24], W31
	092 Move [X0+28], W9
	093 Move X9, [X8+16]
	094 Compare X9, 0
	095 JumpIfEqual {587}
	096 Move W10, [X9+28]
	097 Add W10, W10, 1
	098 Move [X9+24], W31
	099 Move [X9+28], W10
	100 Move X8, [X8+24]
	101 Compare X8, 0
	102 JumpIfEqual {587}
	103 Move W9, [X8+28]
	104 Move X10, 0x840000
	105 Move X10, [X10+4072]
	106 Move W21, W21
	107 ShiftRight W21, 30
	108 And W21, W21, 0x1FFFFFFF
	109 Add W9, W9, 1
	110 Move [X8+24], W31
	111 Move [X8+28], W9
	112 Move X2, [X10]
	113 Move W1, W21
	114 Call List`1<Vector3>.set_Capacity, X0, X1
	115 Move X8, [X22]
	116 Move X8, [X8+184]
	117 Move X0, [X8+16]
	118 Compare X0, 0
	119 JumpIfEqual {587}
	120 Move [X31+8], X24
	121 Move X8, 0x841000
	122 Move X8, [X8]
	123 Move W1, W21
	124 Move X2, [X8]
	125 Call List`1<Vector4>.set_Capacity, X0, X1
	126 Move X8, [X22]
	127 Move X8, [X8+184]
	128 Move X0, [X8+24]
	129 Compare X0, 0
	130 JumpIfEqual {587}
	131 Move X8, 0x840000
	132 Move X8, [X8+4040]
	133 Move W1, W21
	134 Move X2, [X8]
	135 Call List`1<Int32>.set_Capacity, X0, X1
	136 Move X25, [X20+40]
	137 Compare X25, 0
	138 JumpIfEqual {587}
	139 Move W8, [X25+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X26, 0x7EA000
	142 Move X27, 0x840000
	143 Move X28, 0x7E7000
	144 Move X26, [X26+952]
	145 Move X27, [X27+4080]
	146 Move X28, [X28+3600]
	147 Move W9, W31
	148 Move W20, W31
	149 Move W29, 12
	150 Move W19, 0x3F800000
	151 Move W24, 0xBF800000
	152 Move [X31+16], X25
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add X8, X25, W9
	155 Move X0, [X8+32]
	156 Move [X31+28], W9
	157 Compare X0, 0
	158 JumpIfEqual {587}
	159 Move X21, [X0+96]
	160 Compare X21, 0
	161 JumpIfNotEqual {166}
	162 Call Face.CacheEdges, X0
	163 Move X21, X0
	164 Compare X0, 0
	165 JumpIfEqual {587}
	166 Move W8, [X21+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move W25, W31
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Compare X23, 0
	171 JumpIfEqual {587}
	172 Add X8, X21, W25
	173 Move X8, [X8+32]
	174 Move W10, [X23+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction SBFM not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, [X22]
	179 Move X8, W8
	180 NotImplemented "Instruction MADD not yet implemented."
	181 NotImplemented "Instruction MADD not yet implemented."
	182 Move S13, [X8+32]
	183 Move S12, [X8+36]
	184 Move V8, [X8+40]
	185 Move S9, [X9+32]
	186 Move S10, [X9+36]
	187 Move W8, [X0+224]
	188 Move V11, [X9+40]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X22]
	193 Move X8, [X0+184]
	194 Move X0, [X8+8]
	195 Compare X0, 0
	196 JumpIfEqual {587}
	197 Move W10, [X0+28]
	198 Move X8, [X0+16]
	199 Move X9, [X26]
	200 Add W10, W10, 1
	201 Move [X0+28], W10
	202 Compare X8, 0
	203 JumpIfEqual {587}
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Move W11, [X8+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W9, W10, 1
	208 NotImplemented "Instruction MADD not yet implemented."
	209 Move [X0+24], W9
	210 Move [X8+32], S13
	211 Move [X8+40], S12
	212 Move [X8+40], S8
	213 Move X8, [X9+32]
	214 Move V0, V13
	215 Move V1, V12
	216 Move V2, V8
	217 Move X8, [X8+192]
	218 Move X1, [X8+112]
	219 Call List`1<Vector3>.AddWithResize, X0, X1
	220 Move X8, [X22]
	221 Move X8, [X8+184]
	222 Move X0, [X8+8]
	223 Compare X0, 0
	224 JumpIfEqual {587}
	225 Move W10, [X0+28]
	226 Move X8, [X0+16]
	227 Move X9, [X26]
	228 Add W10, W10, 1
	229 Move [X0+28], W10
	230 Compare X8, 0
	231 JumpIfEqual {587}
	232 NotImplemented "Instruction LDRSW not yet implemented."
	233 Move W11, [X8+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add W9, W10, 1
	236 NotImplemented "Instruction MADD not yet implemented."
	237 Move [X0+24], W9
	238 Move [X8+32], S13
	239 Move [X8+40], S12
	240 Move [X8+40], S8
	241 Move X8, [X9+32]
	242 Move V0, V13
	243 Move V1, V12
	244 Move V2, V8
	245 Move X8, [X8+192]
	246 Move X1, [X8+112]
	247 Call List`1<Vector3>.AddWithResize, X0, X1
	248 Move X8, [X22]
	249 Move X8, [X8+184]
	250 Move X0, [X8+8]
	251 Compare X0, 0
	252 JumpIfEqual {587}
	253 Move W10, [X0+28]
	254 Move X8, [X0+16]
	255 Move X9, [X26]
	256 Add W10, W10, 1
	257 Move [X0+28], W10
	258 Compare X8, 0
	259 JumpIfEqual {587}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W11, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W9, W10, 1
	264 NotImplemented "Instruction MADD not yet implemented."
	265 Move [X0+24], W9
	266 Move [X8+32], S9
	267 Move [X8+40], S10
	268 Move [X8+40], S11
	269 Move X8, [X9+32]
	270 Move V0, V9
	271 Move V1, V10
	272 Move V2, V11
	273 Move X8, [X8+192]
	274 Move X1, [X8+112]
	275 Call List`1<Vector3>.AddWithResize, X0, X1
	276 Move X8, [X22]
	277 Move X8, [X8+184]
	278 Move X0, [X8+8]
	279 Compare X0, 0
	280 JumpIfEqual {587}
	281 Move W10, [X0+28]
	282 Move X8, [X0+16]
	283 Move X9, [X26]
	284 Add W10, W10, 1
	285 Move [X0+28], W10
	286 Compare X8, 0
	287 JumpIfEqual {587}
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Move W11, [X8+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Add W9, W10, 1
	292 NotImplemented "Instruction MADD not yet implemented."
	293 Move [X0+24], W9
	294 Move [X8+32], S9
	295 Move [X8+40], S10
	296 Move [X8+40], S11
	297 Move X8, [X9+32]
	298 Move V0, V9
	299 Move V1, V10
	300 Move V2, V11
	301 Move X8, [X8+192]
	302 Move X1, [X8+112]
	303 Call List`1<Vector3>.AddWithResize, X0, X1
	304 Move X8, [X22]
	305 Move X8, [X8+184]
	306 Move X0, [X8+16]
	307 Compare X0, 0
	308 JumpIfEqual {587}
	309 Move W10, [X0+28]
	310 Move X9, [X0+16]
	311 Move X8, [X27]
	312 Add W10, W10, 1
	313 Move [X0+28], W10
	314 Compare X9, 0
	315 JumpIfEqual {587}
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Move W11, [X9+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Add W8, W10, 1
	320 Add X9, X9, X10
	321 Move [X0+24], W8
	322 Move [X9+32], S9
	323 Move [X9+40], S10
	324 Move [X9+40], S11
	325 Move [X9+44], W19
	326 Move X8, [X8+32]
	327 Move S3, 1
	328 Move V0, V9
	329 Move V1, V10
	330 Move X8, [X8+192]
	331 Move V2, V11
	332 Move X1, [X8+112]
	333 Call List`1<Vector4>.AddWithResize, X0, X1
	334 Move X8, [X22]
	335 Move X8, [X8+184]
	336 Move X0, [X8+16]
	337 Compare X0, 0
	338 JumpIfEqual {587}
	339 Move W10, [X0+28]
	340 Move X9, [X0+16]
	341 Move X8, [X27]
	342 Add W10, W10, 1
	343 Move [X0+28], W10
	344 Compare X9, 0
	345 JumpIfEqual {587}
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Move W11, [X9+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Add W8, W10, 1
	350 Add X9, X9, X10
	351 Move [X0+24], W8
	352 Move [X9+32], S9
	353 Move [X9+40], S10
	354 Move [X9+40], S11
	355 Move [X9+44], W24
	356 Move X8, [X8+32]
	357 Move S3, -1
	358 Move V0, V9
	359 Move V1, V10
	360 Move X8, [X8+192]
	361 Move V2, V11
	362 Move X1, [X8+112]
	363 Call List`1<Vector4>.AddWithResize, X0, X1
	364 Move X8, [X22]
	365 Move X8, [X8+184]
	366 Move X0, [X8+16]
	367 Compare X0, 0
	368 JumpIfEqual {587}
	369 Move W10, [X0+28]
	370 Move X9, [X0+16]
	371 Move X8, [X27]
	372 Add W10, W10, 1
	373 Move [X0+28], W10
	374 Compare X9, 0
	375 JumpIfEqual {587}
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 Move W11, [X9+24]
	378 Subtract S0, S9, S13
	379 Subtract S1, S10, S12
	380 Subtract S2, S11, S8
	381 Add S12, S9, S0
	382 Add S9, S10, S1
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Add S8, S11, S2
	385 Add W8, W10, 1
	386 Add X9, X9, X10
	387 Move [X0+24], W8
	388 Move [X9+32], S12
	389 Move [X9+40], S9
	390 Move [X9+40], S8
	391 Move [X9+44], W19
	392 Move X8, [X8+32]
	393 Move S3, 1
	394 Move V0, V12
	395 Move V1, V9
	396 Move X8, [X8+192]
	397 Move V2, V8
	398 Move X1, [X8+112]
	399 Call List`1<Vector4>.AddWithResize, X0, X1
	400 Move X8, [X22]
	401 Move X8, [X8+184]
	402 Move X0, [X8+16]
	403 Compare X0, 0
	404 JumpIfEqual {587}
	405 Move W10, [X0+28]
	406 Move X9, [X0+16]
	407 Move X8, [X27]
	408 Add W10, W10, 1
	409 Move [X0+28], W10
	410 Compare X9, 0
	411 JumpIfEqual {587}
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Move W11, [X9+24]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Add W8, W10, 1
	416 Add X9, X9, X10
	417 Move [X0+24], W8
	418 Move [X9+32], S12
	419 Move [X9+40], S9
	420 Move [X9+40], S8
	421 Move [X9+44], W24
	422 Move X8, [X8+32]
	423 Move S3, -1
	424 Move V0, V12
	425 Move V1, V9
	426 Move X8, [X8+192]
	427 Move V2, V8
	428 Move X1, [X8+112]
	429 Call List`1<Vector4>.AddWithResize, X0, X1
	430 Move X8, [X22]
	431 Move X8, [X8+184]
	432 Move X0, [X8+24]
	433 Compare X0, 0
	434 JumpIfEqual {587}
	435 Move W10, [X0+28]
	436 Move X8, [X0+16]
	437 Move X9, [X28]
	438 Add W10, W10, 1
	439 Move [X0+28], W10
	440 Compare X8, 0
	441 JumpIfEqual {587}
	442 NotImplemented "Instruction LDRSW not yet implemented."
	443 Move W11, [X8+24]
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Add W9, W10, 1
	446 Add X8, X8, X10
	447 Move [X0+24], W9
	448 Move [X8+32], W20
	449 Move X8, [X9+32]
	450 Move W1, W20
	451 Move X8, [X8+192]
	452 Move X2, [X8+112]
	453 Call List`1<Int32>.AddWithResize, X0, X1
	454 Move X8, [X22]
	455 Move X8, [X8+184]
	456 Move X0, [X8+24]
	457 Compare X0, 0
	458 JumpIfEqual {587}
	459 Move W10, [X0+28]
	460 Move X8, [X0+16]
	461 Move X9, [X28]
	462 Add W10, W10, 1
	463 Move [X0+28], W10
	464 Compare X8, 0
	465 JumpIfEqual {587}
	466 NotImplemented "Instruction LDRSW not yet implemented."
	467 Move W11, [X8+24]
	468 Add W1, W20, 1
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Add W9, W10, 1
	471 Add X8, X8, X10
	472 Move [X0+24], W9
	473 Move [X8+32], W1
	474 Move X8, [X9+32]
	475 Move X8, [X8+192]
	476 Move X2, [X8+112]
	477 Call List`1<Int32>.AddWithResize, X0, X1
	478 Move X8, [X22]
	479 Move X8, [X8+184]
	480 Move X0, [X8+24]
	481 Compare X0, 0
	482 JumpIfEqual {587}
	483 Move W10, [X0+28]
	484 Move X8, [X0+16]
	485 Move X9, [X28]
	486 Add W10, W10, 1
	487 Move [X0+28], W10
	488 Compare X8, 0
	489 JumpIfEqual {587}
	490 NotImplemented "Instruction LDRSW not yet implemented."
	491 Move W11, [X8+24]
	492 Add W1, W20, 3
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Add W9, W10, 1
	495 Add X8, X8, X10
	496 Move [X0+24], W9
	497 Move [X8+32], W1
	498 Move X8, [X9+32]
	499 Move X8, [X8+192]
	500 Move X2, [X8+112]
	501 Call List`1<Int32>.AddWithResize, X0, X1
	502 Move X8, [X22]
	503 Move X8, [X8+184]
	504 Move X0, [X8+24]
	505 Compare X0, 0
	506 JumpIfEqual {587}
	507 Move W10, [X0+28]
	508 Move X8, [X0+16]
	509 Move X9, [X28]
	510 Add W10, W10, 1
	511 Move [X0+28], W10
	512 Compare X8, 0
	513 JumpIfEqual {587}
	514 NotImplemented "Instruction LDRSW not yet implemented."
	515 Move W11, [X8+24]
	516 Add W1, W20, 2
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Add W9, W10, 1
	519 Add X8, X8, X10
	520 Move [X0+24], W9
	521 Move [X8+32], W1
	522 Move X8, [X9+32]
	523 Move X8, [X8+192]
	524 Move X2, [X8+112]
	525 Call List`1<Int32>.AddWithResize, X0, X1
	526 Move W8, [X21+24]
	527 Add W25, W25, 1
	528 Add W20, W20, 4
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X25, [X31+16]
	531 Move W9, [X31+28]
	532 Move W8, [X25+24]
	533 Add W9, W9, 1
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X0, [X22]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {541}
	539 Call 0x1C17DFC
	540 Move X0, [X22]
	541 Move X8, [X0+184]
	542 Move X19, [X31+8]
	543 Move X2, X31
	544 Move X1, [X8+8]
	545 Move X0, X19
	546 Call Mesh.SetVertices, X0, X1
	547 Move X8, [X22]
	548 Move X0, X19
	549 Move X2, X31
	550 Move X8, [X8+184]
	551 Move X1, [X8+16]
	552 Call Mesh.SetTangents, X0, X1
	553 Move W1, 1
	554 Move X0, X19
	555 Move X2, X31
	556 Call Mesh.set_subMeshCount, X0, X1
	557 Move X8, [X22]
	558 Move X0, X19
	559 Move X20, [X31+160]
	560 Move X19, [X31+168]
	561 Move X22, [X31+144]
	562 Move X21, [X31+152]
	563 Move X8, [X8+184]
	564 Move X24, [X31+128]
	565 Move X23, [X31+136]
	566 Move X26, [X31+112]
	567 Move X25, [X31+120]
	568 Move X28, [X31+96]
	569 Move X27, [X31+104]
	570 Move X1, [X8+24]
	571 Move X29, [X31+80]
	572 Move X30, [X31+88]
	573 Move D9, [X31+64]
	574 Move D8, [X31+72]
	575 Move D11, [X31+48]
	576 Move D10, [X31+56]
	577 Move D13, [X31+32]
	578 Move D12, [X31+40]
	579 Move W2, 2
	580 Move W4, 1
	581 Move W3, W31
	582 Move W5, W31
	583 Move X6, X31
	584 Add X31, X31, 176
	585 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	586 Return 
	587 Call 0x1C17F20
	588 Call 0x1C17F28

Method: System.Void CreateEdgeBillboardMesh(UnityEngine.ProBuilder.ProBuilderMesh mesh, UnityEngine.Mesh target, System.Collections.Generic.ICollection`1<UnityEngine.ProBuilder.Edge> edges)

Disassembly:
	0x0390F198 B.CS 0x390F280
	0x0390F19C LDR X0, [X21]
	0x0390F1A0 CBZ X0, 0x390F284
	0x0390F1A4 LDR X9, [X0 + 0x18]
	0x0390F1A8 CMP W27, W9
	0x0390F1AC B.CS 0x390F280
	0x0390F1B0 ADD W27, W27, 0x1
	0x0390F1B4 ADD X11, X0, X29, 0x2, LSL
	0x0390F1B8 CMP W19, W27
	0x0390F1BC STR W10, [X11 + 0x20]
	0x0390F1C0 B.NE 0x390F120
	0x0390F1C4 LDP X26, X25, [X31 + 0x10]
	0x0390F1C8 ADD W28, W28, W27
	0x0390F1CC ADD X24, X24, 0x1
	0x0390F1D0 CMP X24, X26
	0x0390F1D4 B.NE 0x390F0E0
	0x0390F1D8 MOV X0, X25
	0x0390F1DC MOV X1, X20
	0x0390F1E0 MOV X2, X31
	0x0390F1E4 BL 0x393F7D8
	0x0390F1E8 LDR W19, [X31 + 0xC]
	0x0390F1EC MOV X0, X25
	0x0390F1F0 MOV X2, X31
	0x0390F1F4 MOV W1, W19
	0x0390F1F8 BL 0x3C17654
	0x0390F1FC CMP W19, 0x1
	0x0390F200 B.LT 0x390F25C
	0x0390F204 MOV X21, X31
	0x0390F208 ADD X19, X22, 0x20
	0x0390F20C LDR W8, [X22 + 0x18]
	0x0390F210 CMP X21, X8
	0x0390F214 B.CS 0x390F280
	0x0390F218 LDR X1, [X19, X21, LSL #3]
	0x0390F21C MOV X0, X25
	0x0390F220 MOV W2, W21
	0x0390F224 MOV X3, X31
	0x0390F228 BL 0x3C194F4
	0x0390F22C ADD X21, X21, 0x1
	0x0390F230 CMP X26, X21
	0x0390F234 B.NE 0x390F20C
	0x0390F238 B 0x390F25C
	0x0390F23C MOV X0, X25
	0x0390F240 MOV X1, X20
	0x0390F244 MOV X2, X31
	0x0390F248 BL 0x393F7D8
	0x0390F24C MOV X0, X25
	0x0390F250 MOV W1, W21
	0x0390F254 MOV X2, X31
	0x0390F258 BL 0x3C17654
	0x0390F25C MOV X0, X20
	0x0390F260 LDP X20, X19, [X31 + 0x70]
	0x0390F264 LDP X22, X21, [X31 + 0x60]
	0x0390F268 LDP X24, X23, [X31 + 0x50]
	0x0390F26C LDP X26, X25, [X31 + 0x40]
	0x0390F270 LDP X28, X27, [X31 + 0x30]
	0x0390F274 LDP X29, X30, [X31 + 0x20]
	0x0390F278 ADD X31, X31, 0x80
	0x0390F27C RET
	0x0390F280 BL 0x1C16F28
	0x0390F284 BL 0x1C16F20
	0x0390F288 ADRP X0, 0x7E9000
	0x0390F28C LDR X0, [X0 + 0x528]
	0x0390F290 BL 0x1C16D08
	0x0390F294 BL 0x1C16F10
	0x0390F298 MOV X19, X0
	0x0390F29C ADRP X0, 0x83E000
	0x0390F2A0 LDR X0, [X0 + 0xE90]
	0x0390F2A4 BL 0x1C16D08
	0x0390F2A8 MOV X1, X0
	0x0390F2AC MOV X0, X19
	0x0390F2B0 MOV X2, X31
	0x0390F2B4 BL 0x330E100
	0x0390F2B8 ADRP X0, 0x83F000
	0x0390F2BC LDR X0, [X0 + 0x28]
	0x0390F2C0 BL 0x1C16D08
	0x0390F2C4 MOV X1, X0
	0x0390F2C8 MOV X0, X19
	0x0390F2CC BL 0x1C16DEC
	0x0390F2D0 SUB X31, X31, 0xD0
	0x0390F2D4 STP X29, X30, [X31 + 0x70]
	0x0390F2D8 STP X28, X27, [X31 + 0x80]
	0x0390F2DC STP X26, X25, [X31 + 0x90]
	0x0390F2E0 STP X24, X23, [X31 + 0xA0]
	0x0390F2E4 STP X22, X21, [X31 + 0xB0]
	0x0390F2E8 STP X20, X19, [X31 + 0xC0]
	0x0390F2EC ADRP X19, 0xAD2000
	0x0390F2F0 ADRP X20, 0x7E4000
	0x0390F2F4 LDRB W8, [X19 + 0x81A]
	0x0390F2F8 LDR X20, [X20 + 0x598]
	0x0390F2FC MOV X29, X0
	0x0390F300 TBNZ X8, 0x0, 0x390F360
	0x0390F304 ADRP X0, 0x83F000
	0x0390F308 LDR X0, [X0 + 0x10]
	0x0390F30C BL 0x1C16CF4
	0x0390F310 ADRP X0, 0x83F000
	0x0390F314 LDR X0, [X0 + 0x30]
	0x0390F318 BL 0x1C16CF4
	0x0390F31C ADRP X0, 0x83F000
	0x0390F320 LDR X0, [X0 + 0x38]
	0x0390F324 BL 0x1C16CF4
	0x0390F328 ADRP X0, 0x83F000
	0x0390F32C LDR X0, [X0 + 0x8]
	0x0390F330 BL 0x1C16CF4
	0x0390F334 ADRP X0, 0x7E4000
	0x0390F338 LDR X0, [X0 + 0x598]
	0x0390F33C BL 0x1C16CF4
	0x0390F340 ADRP X0, 0x83F000
	0x0390F344 LDR X0, [X0 + 0x18]
	0x0390F348 BL 0x1C16CF4
	0x0390F34C ADRP X0, 0x83F000
	0x0390F350 LDR X0, [X0 + 0x20]
	0x0390F354 BL 0x1C16CF4
	0x0390F358 MOVZ W8, 0x1
	0x0390F35C STRB W8, [X19 + 0x81A]
	0x0390F360 LDR X0, [X20]
	0x0390F364 LDR W8, [X0 + 0xE0]
	0x0390F368 CBNZ W8, 0x390F370
	0x0390F36C BL 0x1C16DFC
	0x0390F370 MOV X0, X29
	0x0390F374 MOV X1, X31
	0x0390F378 MOV X2, X31
	0x0390F37C BL 0x3C3883C
	0x0390F380 MOV X19, X31
	0x0390F384 TBNZ X0, 0x0, 0x390F7F4
	0x0390F388 CBZ X29, 0x390F81C
	0x0390F38C MOV X0, X29
	0x0390F390 MOV X1, X31
	0x0390F394 BL 0x3C17618
	0x0390F398 ADRP X8, 0x83F000
	0x0390F39C LDR X8, [X8 + 0x18]
	0x0390F3A0 MOV W20, W0
	0x0390F3A4 MOV W1, W20
	0x0390F3A8 LDR X8, [X8]
	0x0390F3AC MOV X0, X8
	0x0390F3B0 BL 0x1C16D6C
	0x0390F3B4 MOV X19, X0
	0x0390F3B8 MOV X0, X29
	0x0390F3BC MOV X1, X31
	0x0390F3C0 BL 0x3C17EBC
	0x0390F3C4 MOV X23, X0
	0x0390F3C8 MOV X0, X29
	0x0390F3CC MOV X1, X31
	0x0390F3D0 BL 0x3C18218
	0x0390F3D4 STR X0, [X31 + 0x38]
	0x0390F3D8 MOV X0, X29
	0x0390F3DC MOV X1, X31
	0x0390F3E0 BL 0x3C17F68
	0x0390F3E4 STR X0, [X31 + 0x30]
	0x0390F3E8 MOV X0, X29
	0x0390F3EC MOV X1, X31
	0x0390F3F0 BL 0x3C18014
	0x0390F3F4 STR X0, [X31 + 0x28]
	0x0390F3F8 MOV X0, X29
	0x0390F3FC MOV X1, X31
	0x0390F400 BL 0x3C180C0
	0x0390F404 STR X0, [X31 + 0x20]
	0x0390F408 MOV X0, X29
	0x0390F40C MOV X1, X31
	0x0390F410 BL 0x3C1816C
	0x0390F414 ADRP X21, 0x83F000
	0x0390F418 LDR X21, [X21 + 0x8]
	0x0390F41C STR X0, [X31 + 0x18]
	0x0390F420 LDR X8, [X21]
	0x0390F424 MOV X0, X8
	0x0390F428 BL 0x1C16F10
	0x0390F42C ADRP X22, 0x83F000
	0x0390F430 LDR X22, [X22 + 0x10]
	0x0390F434 MOV X24, X0
	0x0390F438 LDR X1, [X22]
	0x0390F43C BL 0x30CE5F4
	0x0390F440 LDR X0, [X21]
	0x0390F444 BL 0x1C16F10
	0x0390F448 LDR X1, [X22]
	0x0390F44C MOV X21, X0
	0x0390F450 BL 0x30CE5F4
	0x0390F454 MOVZ W1, 0x2
	0x0390F458 MOV X0, X29
	0x0390F45C MOV X2, X24
	0x0390F460 MOV X3, X31
	0x0390F464 STR X24, [X31 + 0x10]
	0x0390F468 BL 0x3C18C9C
	0x0390F46C MOVZ W1, 0x3
	0x0390F470 MOV X0, X29
	0x0390F474 MOV X2, X21
	0x0390F478 MOV X3, X31
	0x0390F47C STR X21, [X31 + 0x8]
	0x0390F480 BL 0x3C18C9C
	0x0390F484 CBZ X23, 0x390F49C
	0x0390F488 LDR W8, [X23 + 0x18]
	0x0390F48C CMP W20, W8
	0x0390F490 CSET W8, EQ
	0x0390F494 STR W8, [X31 + 0x6C]
	0x0390F498 B 0x390F4A0
	0x0390F49C STR W31, [X31 + 0x6C]
	0x0390F4A0 LDR X8, [X31 + 0x38]
	0x0390F4A4 CBZ X8, 0x390F4B8
	0x0390F4A8 LDR W8, [X8 + 0x18]
	0x0390F4AC CMP W20, W8
	0x0390F4B0 CSET W8, NE
	0x0390F4B4 B 0x390F4BC
	0x0390F4B8 MOVZ W8, 0x1
	0x0390F4BC STR W8, [X31 + 0x68]
	0x0390F4C0 LDR X8, [X31 + 0x30]
	0x0390F4C4 CBZ X8, 0x390F4D8
	0x0390F4C8 LDR W8, [X8 + 0x18]
	0x0390F4CC CMP W20, W8
	0x0390F4D0 CSET W8, NE
	0x0390F4D4 B 0x390F4DC
	0x0390F4D8 MOVZ W8, 0x1
	0x0390F4DC STR W8, [X31 + 0x64]
	0x0390F4E0 LDR X8, [X31 + 0x28]
	0x0390F4E4 CBZ X8, 0x390F4F8
	0x0390F4E8 LDR W8, [X8 + 0x18]
	0x0390F4EC CMP W20, W8
	0x0390F4F0 CSET W8, NE
	0x0390F4F4 B 0x390F4FC
	0x0390F4F8 MOVZ W8, 0x1
	0x0390F4FC STR W8, [X31 + 0x60]
	0x0390F500 LDR X8, [X31 + 0x20]
	0x0390F504 CBZ X8, 0x390F518
	0x0390F508 LDR W8, [X8 + 0x18]
	0x0390F50C CMP W20, W8
	0x0390F510 CSET W8, NE
	0x0390F514 B 0x390F51C
	0x0390F518 MOVZ W8, 0x1
	0x0390F51C STR W8, [X31 + 0x5C]
	0x0390F520 LDR X8, [X31 + 0x18]
	0x0390F524 CBZ X8, 0x390F538
	0x0390F528 LDR W8, [X8 + 0x18]
	0x0390F52C CMP W20, W8
	0x0390F530 CSET W8, NE
	0x0390F534 B 0x390F53C
	0x0390F538 MOVZ W8, 0x1
	0x0390F53C STR W8, [X31 + 0x58]
	0x0390F540 LDR X8, [X31 + 0x38]
	0x0390F544 LDR X9, [X31 + 0x10]
	0x0390F548 CBZ X9, 0x390F81C
	0x0390F54C LDR X9, [X31 + 0x8]
	0x0390F550 CBZ X9, 0x390F81C
	0x0390F554 CMP W20, 0x1
	0x0390F558 B.LT 0x390F7F4
	0x0390F55C LDR X9, [X31 + 0x10]
	0x0390F560 ADD X26, X8, 0x2C
	0x0390F564 LDR X8, [X31 + 0x28]
	0x0390F568 MOV X29, X31
	0x0390F56C LDR W10, [X9 + 0x18]
	0x0390F570 LDR X9, [X31 + 0x8]
	0x0390F574 ADD X22, X8, 0x2C
	0x0390F578 LDR X8, [X31 + 0x30]
	0x0390F57C ADD X24, X19, 0x20
	0x0390F580 LDR W9, [X9 + 0x18]
	0x0390F584 ADD X28, X23, 0x28
	0x0390F588 STP W9, W10, [X31 + 0x50]
	0x0390F58C MOV W9, W20
	0x0390F590 STP X23, X9, [X31 + 0x40]
	0x0390F594 LDR X9, [X31 + 0x18]
	0x0390F598 ADD X23, X8, 0x28
	0x0390F59C ADD X21, X9, 0x24
	0x0390F5A0 LDR X9, [X31 + 0x20]
	0x0390F5A4 ADD X25, X9, 0x24
	0x0390F5A8 ADRP X8, 0x83F000
	0x0390F5AC LDR X8, [X8 + 0x20]
	0x0390F5B0 LDR X0, [X8]
	0x0390F5B4 BL 0x1C16F10
	0x0390F5B8 MOV X1, X31
	0x0390F5BC MOV X27, X0
	0x0390F5C0 BL 0x393DC14
	0x0390F5C4 CBZ X19, 0x390F81C
	0x0390F5C8 LDR W8, [X19 + 0x18]
	0x0390F5CC CMP X29, X8
	0x0390F5D0 B.CS 0x390F818
	0x0390F5D4 LDR W8, [X31 + 0x6C]
	0x0390F5D8 STR X27, [X24, X29, LSL #3]
	0x0390F5DC CBZ W8, 0x390F60C
	0x0390F5E0 LDR X8, [X31 + 0x40]
	0x0390F5E4 CBZ X8, 0x390F81C
	0x0390F5E8 LDR W8, [X8 + 0x18]
	0x0390F5EC CMP X29, X8
	0x0390F5F0 B.CS 0x390F818
	0x0390F5F4 CBZ X27, 0x390F81C
	0x0390F5F8 LDP S1, S2, [X28 - 0x4]
	0x0390F5FC LDUR V0, [X28 - 0x8]
	0x0390F600 MOV X0, X27
	0x0390F604 MOV X1, X31
	0x0390F608 BL 0x393D8A8
	0x0390F60C LDR W8, [X31 + 0x68]
	0x0390F610 TBNZ X8, 0x0, 0x390F64C
	0x0390F614 LDR W8, [X19 + 0x18]
	0x0390F618 CMP X29, X8
	0x0390F61C B.CS 0x390F818
	0x0390F620 LDR X8, [X31 + 0x38]
	0x0390F624 CBZ X8, 0x390F81C
	0x0390F628 LDR W8, [X8 + 0x18]
	0x0390F62C CMP X29, X8
	0x0390F630 B.CS 0x390F818
	0x0390F634 LDR X0, [X24, X29, LSL #3]
	0x0390F638 CBZ X0, 0x390F81C
	0x0390F63C LDP S2, S3, [X26 - 0x4]
	0x0390F640 LDP S0, S1, [X26 - 0xC]
	0x0390F644 MOV X1, X31
	0x0390F648 BL 0x393D8FC
	0x0390F64C LDR W8, [X31 + 0x64]
	0x0390F650 TBNZ X8, 0x0, 0x390F68C
	0x0390F654 LDR W8, [X19 + 0x18]
	0x0390F658 CMP X29, X8
	0x0390F65C B.CS 0x390F818
	0x0390F660 LDR X8, [X31 + 0x30]
	0x0390F664 CBZ X8, 0x390F81C
	0x0390F668 LDR W8, [X8 + 0x18]
	0x0390F66C CMP X29, X8
	0x0390F670 B.CS 0x390F818
	0x0390F674 LDR X0, [X24, X29, LSL #3]
	0x0390F678 CBZ X0, 0x390F81C
	0x0390F67C LDP S1, S2, [X23 - 0x4]
	0x0390F680 LDUR V0, [X23 - 0x8]
	0x0390F684 MOV X1, X31
	0x0390F688 BL 0x393D960
	0x0390F68C LDR W8, [X31 + 0x60]
	0x0390F690 TBNZ X8, 0x0, 0x390F6CC
	0x0390F694 LDR W8, [X19 + 0x18]
	0x0390F698 CMP X29, X8
	0x0390F69C B.CS 0x390F818
	0x0390F6A0 LDR X8, [X31 + 0x28]
	0x0390F6A4 CBZ X8, 0x390F81C
	0x0390F6A8 LDR W8, [X8 + 0x18]
	0x0390F6AC CMP X29, X8
	0x0390F6B0 B.CS 0x390F818
	0x0390F6B4 LDR X0, [X24, X29, LSL #3]
	0x0390F6B8 CBZ X0, 0x390F81C
	0x0390F6BC LDP S2, S3, [X22 - 0x4]
	0x0390F6C0 LDP S0, S1, [X22 - 0xC]
	0x0390F6C4 MOV X1, X31
	0x0390F6C8 BL 0x393D9C4
	0x0390F6CC LDR W8, [X31 + 0x5C]
	0x0390F6D0 TBNZ X8, 0x0, 0x390F708
	0x0390F6D4 LDR W8, [X19 + 0x18]
	0x0390F6D8 CMP X29, X8
	0x0390F6DC B.CS 0x390F818
	0x0390F6E0 LDR X8, [X31 + 0x20]
	0x0390F6E4 CBZ X8, 0x390F81C
	0x0390F6E8 LDR W8, [X8 + 0x18]
	0x0390F6EC CMP X29, X8
	0x0390F6F0 B.CS 0x390F818
	0x0390F6F4 LDR X0, [X24, X29, LSL #3]
	0x0390F6F8 CBZ X0, 0x390F81C
	0x0390F6FC LDP S0, S1, [X25 - 0x4]
	0x0390F700 MOV X1, X31
	0x0390F704 BL 0x393DA24
	0x0390F708 LDR W8, [X31 + 0x58]
	0x0390F70C TBNZ X8, 0x0, 0x390F744
	0x0390F710 LDR W8, [X19 + 0x18]
	0x0390F714 CMP X29, X8
	0x0390F718 B.CS 0x390F818
	0x0390F71C LDR X8, [X31 + 0x18]
	0x0390F720 CBZ X8, 0x390F81C
	0x0390F724 LDR W8, [X8 + 0x18]
	0x0390F728 CMP X29, X8
	0x0390F72C B.CS 0x390F818
	0x0390F730 LDR X0, [X24, X29, LSL #3]
	0x0390F734 CBZ X0, 0x390F81C
	0x0390F738 LDP S0, S1, [X21 - 0x4]
	0x0390F73C MOV X1, X31
	0x0390F740 BL 0x393DA80
	0x0390F744 LDR W8, [X31 + 0x54]
	0x0390F748 CMP W8, W20
	0x0390F74C B.NE 0x390F788
	0x0390F750 LDR W8, [X19 + 0x18]
	0x0390F754 CMP X29, X8
	0x0390F758 B.CS 0x390F818
	0x0390F75C ADRP X8, 0x83F000
	0x0390F760 LDR X27, [X24, X29, LSL #3]
	0x0390F764 LDR X8, [X8 + 0x38]
	0x0390F768 LDR X0, [X31 + 0x10]
	0x0390F76C MOV W1, W29
	0x0390F770 LDR X2, [X8]
	0x0390F774 BL 0x30CEAFC
	0x0390F778 CBZ X27, 0x390F81C
	0x0390F77C MOV X0, X27
	0x0390F780 MOV X1, X31
	0x0390F784 BL 0x393DAE0
	0x0390F788 LDR W8, [X31 + 0x50]
	0x0390F78C CMP W8, W20
	0x0390F790 B.NE 0x390F7CC
	0x0390F794 LDR W8, [X19 + 0x18]
	0x0390F798 CMP X29, X8
	0x0390F79C B.CS 0x390F818
	0x0390F7A0 ADRP X8, 0x83F000
	0x0390F7A4 LDR X27, [X24, X29, LSL #3]
	0x0390F7A8 LDR X8, [X8 + 0x38]
	0x0390F7AC LDR X0, [X31 + 0x8]
	0x0390F7B0 MOV W1, W29
	0x0390F7B4 LDR X2, [X8]
	0x0390F7B8 BL 0x30CEAFC
	0x0390F7BC CBZ X27, 0x390F81C
	0x0390F7C0 MOV X0, X27
	0x0390F7C4 MOV X1, X31
	0x0390F7C8 BL 0x393DB44
	0x0390F7CC LDR X8, [X31 + 0x48]
	0x0390F7D0 ADD X29, X29, 0x1
	0x0390F7D4 ADD X28, X28, 0xC
	0x0390F7D8 ADD X21, X21, 0x8
	0x0390F7DC ADD X25, X25, 0x8
	0x0390F7E0 ADD X26, X26, 0x10
	0x0390F7E4 ADD X22, X22, 0x10
	0x0390F7E8 CMP X8, X29
	0x0390F7EC ADD X23, X23, 0xC
	0x0390F7F0 B.NE 0x390F5A8
	0x0390F7F4 MOV X0, X19
	0x0390F7F8 LDP X20, X19, [X31 + 0xC0]
	0x0390F7FC LDP X22, X21, [X31 + 0xB0]
	0x0390F800 LDP X24, X23, [X31 + 0xA0]
	0x0390F804 LDP X26, X25, [X31 + 0x90]
	0x0390F808 LDP X28, X27, [X31 + 0x80]
	0x0390F80C LDP X29, X30, [X31 + 0x70]
	0x0390F810 ADD X31, X31, 0xD0
	0x0390F814 RET
	0x0390F818 BL 0x1C16F28
	0x0390F81C BL 0x1C16F20
	0x0390F820 SUB X31, X31, 0x90
	0x0390F824 STP D9, D8, [X31 + 0x20]
	0x0390F828 STP X29, X30, [X31 + 0x30]
	0x0390F82C STP X28, X27, [X31 + 0x40]
	0x0390F830 STP X26, X25, [X31 + 0x50]
	0x0390F834 STP X24, X23, [X31 + 0x60]
	0x0390F838 STP X22, X21, [X31 + 0x70]
	0x0390F83C STP X20, X19, [X31 + 0x80]
	0x0390F840 ADRP X21, 0xAD2000
	0x0390F844 ADRP X20, 0x7E4000
	0x0390F848 LDRB W8, [X21 + 0x813]
	0x0390F84C LDR X20, [X20 + 0x598]
	0x0390F850 MOV X19, X0
	0x0390F854 TBNZ X8, 0x0, 0x390F890
	0x0390F858 ADRP X0, 0x83F000
	0x0390F85C LDR X0, [X0 + 0x40]
	0x0390F860 BL 0x1C16CF4
	0x0390F864 ADRP X0, 0x7E4000
	0x0390F868 LDR X0, [X0 + 0x598]
	0x0390F86C BL 0x1C16CF4
	0x0390F870 ADRP X0, 0x7E6000
	0x0390F874 LDR X0, [X0 + 0x9B0]
	0x0390F878 BL 0x1C16CF4
	0x0390F87C ADRP X0, 0x83F000
	0x0390F880 LDR X0, [X0 + 0x48]
	0x0390F884 BL 0x1C16CF4
	0x0390F888 MOVZ W8, 0x1
	0x0390F88C STRB W8, [X21 + 0x813]
	0x0390F890 LDR X0, [X20]
	0x0390F894 STR W31, [X31 + 0x18]
	0x0390F898 STR X31, [X31 + 0x10]
	0x0390F89C STR W31, [X31 + 0x8]
	0x0390F8A0 STR X31, [X31]
	0x0390F8A4 LDR W8, [X0 + 0xE0]
	0x0390F8A8 CBNZ W8, 0x390F8B0
	0x0390F8AC BL 0x1C16DFC
	0x0390F8B0 MOV X0, X19
	0x0390F8B4 MOV X1, X31
	0x0390F8B8 MOV X2, X31
	0x0390F8BC BL 0x3C3883C
	0x0390F8C0 TBNZ X0, 0x0, 0x390FD0C
	0x0390F8C4 CBZ X19, 0x390FD08
	0x0390F8C8 MOV X0, X19
	0x0390F8CC MOV X1, X31
	0x0390F8D0 BL 0x3C18F3C
	0x0390F8D4 MOV X24, X0
	0x0390F8D8 MOV X0, X19
	0x0390F8DC MOV X1, X31
	0x0390F8E0 BL 0x3C17EBC
	0x0390F8E4 MOV X25, X0
	0x0390F8E8 MOV X0, X19
	0x0390F8EC MOV X1, X31
	0x0390F8F0 BL 0x3C180C0
	0x0390F8F4 MOV X26, X0
	0x0390F8F8 MOV X0, X19
	0x0390F8FC MOV X1, X31
	0x0390F900 BL 0x3C17F68
	0x0390F904 CBZ X24, 0x390FD08
	0x0390F908 CBZ X25, 0x390FD08
	0x0390F90C ADRP X21, 0x7E6000
	0x0390F910 LDR X21, [X21 + 0x9B0]
	0x0390F914 LDR X27, [X25 + 0x18]
	0x0390F918 MOV X20, X0
	0x0390F91C ADRP X22, 0x83F000
	0x0390F920 LDR X0, [X21]
	0x0390F924 LDR X28, [X24 + 0x18]
	0x0390F928 LDR X22, [X22 + 0x48]
	0x0390F92C MOV W1, W27
	0x0390F930 BL 0x1C16D6C
	0x0390F934 LDR X8, [X21]
	0x0390F938 MOV X21, X0
	0x0390F93C MOV W1, W27
	0x0390F940 MOV X0, X8
	0x0390F944 BL 0x1C16D6C
	0x0390F948 LDR X8, [X22]
	0x0390F94C MOV X22, X0
	0x0390F950 MOV W1, W27
	0x0390F954 MOV X0, X8
	0x0390F958 BL 0x1C16D6C
	0x0390F95C UBFM X8, X28, 0x20, 0x1F
	0x0390F960 CMP X8, 0x1
	0x0390F964 MOV X23, X0
	0x0390F968 B.LT 0x390FBA8
	0x0390F96C MOV X11, X31
	0x0390F970 SXTW X8, W28
	0x0390F974 MOVZ W9, 0xC
	0x0390F978 FMOV S0, 1
	0x0390F97C LDR W12, [X24 + 0x18]
	0x0390F980 CMP W11, W12
	0x0390F984 B.CS 0x390FD04
	0x0390F988 ADD X10, X11, 0x1
	0x0390F98C CMP W10, W12
	0x0390F990 B.CS 0x390FD04
	0x0390F994 ADD X10, X10, 0x1
	0x0390F998 CMP W10, W12
	0x0390F99C B.CS 0x390FD04
	0x0390F9A0 ADD X12, X24, X11, 0x2, LSL
	0x0390F9A4 LDRSW X13, [X12 + 0x20]
	0x0390F9A8 LDR W14, [X25 + 0x18]
	0x0390F9AC CMP W13, W14
	0x0390F9B0 B.CS 0x390FD04
	0x0390F9B4 LDRSW X12, [X12 + 0x24]
	0x0390F9B8 CMP W12, W14
	0x0390F9BC B.CS 0x390FD04
	0x0390F9C0 ADD X11, X24, X11, 0x2, LSL
	0x0390F9C4 LDRSW X11, [X11 + 0x28]
	0x0390F9C8 CMP W11, W14
	0x0390F9CC B.CS 0x390FD04
	0x0390F9D0 CBZ X26, 0x390FD08
	0x0390F9D4 LDR W14, [X26 + 0x18]
	0x0390F9D8 CMP W13, W14
	0x0390F9DC B.CS 0x390FD04
	0x0390F9E0 CMP W12, W14
	0x0390F9E4 B.CS 0x390FD04
	0x0390F9E8 CMP W11, W14
	0x0390F9EC B.CS 0x390FD04
	0x0390F9F0 CBZ X21, 0x390FD08
	0x0390F9F4 LDR W14, [X21 + 0x18]
	0x0390F9F8 CMP W13, W14
	0x0390F9FC B.CS 0x390FD04
	0x0390FA00 MADD X14, X13, X9, X25
	0x0390FA04 MADD X15, X12, X9, X25
	0x0390FA08 LDR V1, [X14 + 0x20]
	0x0390FA0C LDR V2, [X14 + 0x28]
	0x0390FA10 NOP
	0x0390FA14 MADD X14, X11, X9, X25
	0x0390FA18 LDR V3, [X15 + 0x20]
	0x0390FA1C LDR V4, [X15 + 0x28]
	0x0390FA20 ADD X15, X26, X13, 0x3, LSL
	0x0390FA24 LDR V5, [X14 + 0x20]
	0x0390FA28 LDR V16, [X14 + 0x28]
	0x0390FA2C ADD X14, X26, 0x20
	0x0390FA30 LDP S17, S18, [X15 + 0x20]
	0x0390FA34 ADD X15, X14, X12, 0x3, LSL
	0x0390FA38 ADD X14, X14, X11, 0x3, LSL
	0x0390FA3C LDP S20, S19, [X15]
	0x0390FA40 LDP S22, S23, [X14]
	0x0390FA44 FSUB V6.2S, V3.2S, V1.2S
	0x0390FA48 FSUB V7.2S, V5.2S, V1.2S
	0x0390FA4C FSUB S1, S4, S2
	0x0390FA50 FSUB S3, S16, S2
	0x0390FA54 FSUB S5, S20, S17
	0x0390FA58 FSUB S4, S22, S17
	0x0390FA5C FSUB S2, S19, S18
	0x0390FA60 FSUB S16, S23, S18
	0x0390FA64 FMUL S17, S5, S16
	0x0390FA68 FMUL S18, S2, S4
	0x0390FA6C MADD X15, X13, X9, X21
	0x00000000 INVALID
	0x0390FA74 FSUB S17, S17, S18
	0x00000000 INVALID
	0x0390FA7C LDR V21, [X15 + 0x20]
	0x0390FA80 FSUB V18.2S, V19.2S, V18.2S
	0x0390FA84 LDR V19, [X15 + 0x28]
	0x0390FA88 FMUL S16, S1, S16
	0x0390FA8C FMUL S2, S3, S2
	0x0390FA90 FSUB S16, S16, S2
	0x0390FA94 FDIV S2, S0, S17
	0x00000000 INVALID
	0x0390FA9C FMUL S16, S16, S2
	0x0390FAA0 FADD V18.2S, V17.2S, V21.2S
	0x0390FAA4 FADD S19, S16, S19
	0x0390FAA8 STR D18, [X15 + 0x20]
	0x0390FAAC STR S19, [X15 + 0x28]
	0x0390FAB0 LDR W14, [X21 + 0x18]
	0x0390FAB4 CMP W12, W14
	0x0390FAB8 B.CS 0x390FD04
	0x0390FABC MADD X14, X12, X9, X21
	0x0390FAC0 LDR V18, [X14 + 0x20]
	0x0390FAC4 LDR V19, [X14 + 0x28]
	0x0390FAC8 FADD V18.2S, V17.2S, V18.2S
	0x0390FACC FADD S19, S16, S19
	0x0390FAD0 STR D18, [X14 + 0x20]
	0x0390FAD4 STR S19, [X14 + 0x28]
	0x0390FAD8 LDR W14, [X21 + 0x18]
	0x0390FADC CMP W11, W14
	0x0390FAE0 B.CS 0x390FD04
	0x0390FAE4 MADD X14, X11, X9, X21
	0x0390FAE8 LDR V18, [X14 + 0x20]
	0x0390FAEC LDR V19, [X14 + 0x28]
	0x0390FAF0 FADD V17.2S, V17.2S, V18.2S
	0x0390FAF4 FADD S16, S16, S19
	0x0390FAF8 STR D17, [X14 + 0x20]
	0x0390FAFC STR S16, [X14 + 0x28]
	0x0390FB00 CBZ X22, 0x390FD08
	0x0390FB04 LDR W14, [X22 + 0x18]
	0x0390FB08 CMP W13, W14
	0x0390FB0C B.CS 0x390FD04
	0x00000000 INVALID
	0x00000000 INVALID
	0x0390FB18 MADD X13, X13, X9, X22
	0x0390FB1C FMUL S3, S3, S5
	0x0390FB20 FMUL S1, S1, S4
	0x0390FB24 FSUB V4.2S, V7.2S, V6.2S
	0x0390FB28 LDR V5, [X13 + 0x20]
	0x0390FB2C LDR V6, [X13 + 0x28]
	0x0390FB30 FSUB S3, S3, S1
	0x00000000 INVALID
	0x0390FB38 FMUL S2, S3, S2
	0x0390FB3C FADD V3.2S, V1.2S, V5.2S
	0x0390FB40 FADD S4, S2, S6
	0x0390FB44 STR D3, [X13 + 0x20]
	0x0390FB48 STR S4, [X13 + 0x28]
	0x0390FB4C LDR W13, [X22 + 0x18]
	0x0390FB50 CMP W12, W13
	0x0390FB54 B.CS 0x390FD04
	0x0390FB58 MADD X12, X12, X9, X22
	0x0390FB5C LDR V3, [X12 + 0x20]
	0x0390FB60 LDR V4, [X12 + 0x28]
	0x0390FB64 FADD V3.2S, V1.2S, V3.2S
	0x0390FB68 FADD S4, S2, S4
	0x0390FB6C STR D3, [X12 + 0x20]
	0x0390FB70 STR S4, [X12 + 0x28]
	0x0390FB74 LDR W12, [X22 + 0x18]
	0x0390FB78 CMP W11, W12
	0x0390FB7C B.CS 0x390FD04
	0x0390FB80 MADD X12, X11, X9, X22
	0x0390FB84 LDR V3, [X12 + 0x20]
	0x0390FB88 LDR V4, [X12 + 0x28]
	0x0390FB8C ADD X11, X10, 0x1
	0x0390FB90 CMP X11, X8
	0x0390FB94 FADD V1.2S, V1.2S, V3.2S
	0x0390FB98 FADD S2, S2, S4
	0x0390FB9C STR D1, [X12 + 0x20]
	0x0390FBA0 STR S2, [X12 + 0x28]
	0x0390FBA4 B.LT 0x390F97C
	0x0390FBA8 CMP W27, 0x1
	0x0390FBAC B.LT 0x390FCD0
	0x0390FBB0 CBZ X20, 0x390FD08
	0x0390FBB4 SXTW X8, W27
	0x0390FBB8 CMP X8, 0x1
	0x0390FBBC MOV X24, X31
	0x0390FBC0 ADD X25, X23, 0x2C
	0x0390FBC4 ADD X26, X20, 0x28
	0x0390FBC8 ADD X27, X22, 0x28
	0x0390FBCC ADD X28, X21, 0x28
	0x0390FBD0 FMOV S8, 1
	0x0390FBD4 CSINC X29, X8, X31, GT
	0x0390FBD8 FMOV S9, -1
	0x0390FBDC LDR W8, [X20 + 0x18]
	0x0390FBE0 CMP W24, W8
	0x0390FBE4 B.CS 0x390FD04
	0x0390FBE8 LDUR V0, [X26 - 0x8]
	0x0390FBEC LDR V1, [X26]
	0x0390FBF0 STR D0, [X31 + 0x10]
	0x0390FBF4 STR S1, [X31 + 0x18]
	0x0390FBF8 CBZ X21, 0x390FD08
	0x0390FBFC LDR W8, [X21 + 0x18]
	0x0390FC00 CMP W24, W8
	0x0390FC04 B.CS 0x390FD04
	0x0390FC08 LDUR V0, [X28 - 0x8]
	0x0390FC0C LDR V1, [X28]
	0x0390FC10 ADD X0, X31, 0x10
	0x0390FC14 ADD X1, X31, 0x0
	0x0390FC18 MOV X2, X31
	0x0390FC1C STR D0, [X31]
	0x0390FC20 STR S1, [X31 + 0x8]
	0x0390FC24 BL 0x3C28B74
	0x0390FC28 CBZ X23, 0x390FD08
	0x0390FC2C LDR W8, [X23 + 0x18]
	0x0390FC30 CMP W24, W8
	0x0390FC34 B.CS 0x390FD04
	0x0390FC38 LDR V0, [X31]
	0x0390FC3C STUR S0, [X25 - 0xC]
	0x0390FC40 LDR V0, [X31 + 0x4]
	0x0390FC44 STUR S0, [X25 - 0x8]
	0x0390FC48 LDR V0, [X31 + 0x8]
	0x0390FC4C STUR S0, [X25 - 0x4]
	0x0390FC50 CBZ X22, 0x390FD08
	0x0390FC54 LDR W8, [X22 + 0x18]
	0x0390FC58 CMP W24, W8
	0x0390FC5C B.CS 0x390FD04
	0x0390FC60 LDP S0, S1, [X31 + 0x14]
	0x0390FC64 LDP S3, S2, [X31 + 0x4]
	0x0390FC68 LDR V4, [X31]
	0x0390FC6C LDR V5, [X31 + 0x10]
	0x0390FC70 ADD X24, X24, 0x1
	0x0390FC74 FMUL S6, S0, S2
	0x0390FC78 FMUL S7, S1, S3
	0x0390FC7C FMUL S1, S1, S4
	0x0390FC80 FMUL S2, S5, S2
	0x0390FC84 FMUL S3, S5, S3
	0x0390FC88 FMUL S0, S0, S4
	0x0390FC8C LDP S4, S5, [X27 - 0x8]
	0x0390FC90 FSUB S6, S6, S7
	0x0390FC94 LDR V7, [X27], #0xC
	0x0390FC98 FSUB S1, S1, S2
	0x0390FC9C FSUB S0, S3, S0
	0x0390FCA0 FMUL S2, S6, S4
	0x0390FCA4 FMUL S1, S1, S5
	0x0390FCA8 FMUL S0, S0, S7
	0x0390FCAC FADD S1, S2, S1
	0x0390FCB0 FADD S0, S0, S1
	0x0390FCB4 FCMP S0, 0x0
	0x0390FCB8 FCSEL S0, S9, S8, MI
	0x0390FCBC ADD X26, X26, 0xC
	0x0390FCC0 CMP X29, X24
	0x0390FCC4 STR S0, [X25], #0x10
	0x0390FCC8 ADD X28, X28, 0xC
	0x0390FCCC B.NE 0x390FBDC
	0x0390FCD0 MOV X0, X19
	0x0390FCD4 MOV X1, X23
	0x0390FCD8 MOV X2, X31
	0x0390FCDC BL 0x3C18060
	0x0390FCE0 LDP X20, X19, [X31 + 0x80]
	0x0390FCE4 LDP X22, X21, [X31 + 0x70]
	0x0390FCE8 LDP X24, X23, [X31 + 0x60]
	0x0390FCEC LDP X26, X25, [X31 + 0x50]
	0x0390FCF0 LDP X28, X27, [X31 + 0x40]
	0x0390FCF4 LDP X29, X30, [X31 + 0x30]
	0x0390FCF8 LDP D9, D8, [X31 + 0x20]
	0x0390FCFC ADD X31, X31, 0x90
	0x0390FD00 RET
	0x0390FD04 BL 0x1C16F28
	0x0390FD08 BL 0x1C16F20
	0x0390FD0C ADRP X0, 0x7E9000
	0x0390FD10 LDR X0, [X0 + 0x528]
	0x0390FD14 BL 0x1C16D08
	0x0390FD18 BL 0x1C16F10
	0x0390FD1C MOV X19, X0
	0x0390FD20 ADRP X0, 0x83E000
	0x0390FD24 LDR X0, [X0 + 0xE90]
	0x0390FD28 BL 0x1C16D08
	0x0390FD2C MOV X1, X0
	0x0390FD30 MOV X0, X19
	0x0390FD34 MOV X2, X31
	0x0390FD38 BL 0x330E100
	0x0390FD3C ADRP X0, 0x83F000
	0x0390FD40 LDR X0, [X0 + 0x40]
	0x0390FD44 BL 0x1C16D08
	0x0390FD48 MOV X1, X0
	0x0390FD4C MOV X0, X19
	0x0390FD50 BL 0x1C16DEC
	0x0390FD54 STP X30, X21, [X31 - 0x20]!
	0x0390FD58 STP X20, X19, [X31 + 0x10]
	0x0390FD5C ADRP X20, 0xAD2000
	0x0390FD60 ADRP X21, 0x7EB000
	0x0390FD64 LDRB W8, [X20 + 0x814]
	0x0390FD68 LDR X21, [X21 + 0x700]
	0x0390FD6C MOV X19, X0
	0x0390FD70 TBNZ X8, 0x0, 0x390FD88
	0x0390FD74 ADRP X0, 0x7EB000
	0x0390FD78 LDR X0, [X0 + 0x700]
	0x0390FD7C BL 0x1C16CF4
	0x0390FD80 MOVZ W8, 0x1
	0x0390FD84 STRB W8, [X20 + 0x814]
	0x0390FD88 LDR X0, [X21]
	0x0390FD8C BL 0x1C16F10
	0x0390FD90 MOV X1, X31
	0x0390FD94 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X19, 0xAD3000
	021 Move W8, [X19+2062]
	022 Move X20, X2
	023 Move X23, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {76}
	029 Move X0, 0x83F000
	030 Move X0, [X0+3336]
	031 Call 0x1C17CF4
	032 Move X0, 0x7E5000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0x83F000
	036 Move X0, [X0+3208]
	037 Call 0x1C17CF4
	038 Move X0, 0x83F000
	039 Move X0, [X0+3216]
	040 Call 0x1C17CF4
	041 Move X0, 0x7E5000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0x7E6000
	045 Move X0, [X0+3600]
	046 Call 0x1C17CF4
	047 Move X0, 0x83F000
	048 Move X0, [X0+4080]
	049 Call 0x1C17CF4
	050 Move X0, 0x7E9000
	051 Move X0, [X0+952]
	052 Call 0x1C17CF4
	053 Move X0, 0x7E9000
	054 Move X0, [X0+896]
	055 Call 0x1C17CF4
	056 Move X0, 0x83F000
	057 Move X0, [X0+4088]
	058 Call 0x1C17CF4
	059 Move X0, 0x7EC000
	060 Move X0, [X0+2136]
	061 Call 0x1C17CF4
	062 Move X0, 0x840000
	063 Move X0, [X0]
	064 Call 0x1C17CF4
	065 Move X0, 0x83F000
	066 Move X0, [X0+4040]
	067 Call 0x1C17CF4
	068 Move X0, 0x83F000
	069 Move X0, [X0+4072]
	070 Call 0x1C17CF4
	071 Move X0, 0x83F000
	072 Move X0, [X0+4048]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X19+2062], W8
	076 Compare X23, 0
	077 JumpIfEqual {747}
	078 Move X0, X23
	079 Move X1, X31
	080 Call Mesh.Clear, X0
	081 Compare X20, 0
	082 JumpIfEqual {747}
	083 Move X10, 0x83F000
	084 Move X8, [X20]
	085 Move X10, [X10+3336]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X20
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W22, W0
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move X0, X23
	110 Move X2, X31
	111 Move [X31+8], X23
	112 Call Mesh.set_indexFormat, X0, X1
	113 Compare X21, 0
	114 JumpIfEqual {747}
	115 Move X23, 0x83F000
	116 Move X23, [X23+4048]
	117 Move X25, [X21+88]
	118 Move X0, [X23]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X23]
	124 Move X8, [X0+184]
	125 Move X0, [X8+8]
	126 Compare X0, 0
	127 JumpIfEqual {747}
	128 Move W9, [X0+28]
	129 Add W9, W9, 1
	130 Move [X0+24], W31
	131 Move [X0+28], W9
	132 Move X9, [X8+16]
	133 Compare X9, 0
	134 JumpIfEqual {747}
	135 Move W10, [X9+28]
	136 Add W10, W10, 1
	137 Move [X9+24], W31
	138 Move [X9+28], W10
	139 Move X8, [X8+24]
	140 Compare X8, 0
	141 JumpIfEqual {747}
	142 Move W9, [X8+28]
	143 Move X10, 0x83F000
	144 Move X10, [X10+4072]
	145 Move W21, W22
	146 ShiftRight W21, 30
	147 And W21, W21, 0x1FFFFFFF
	148 Add W9, W9, 1
	149 Move [X8+24], W31
	150 Move [X8+28], W9
	151 Move X2, [X10]
	152 Move W1, W21
	153 Call List`1<Vector3>.set_Capacity, X0, X1
	154 Move X8, [X23]
	155 Move X8, [X8+184]
	156 Move X0, [X8+16]
	157 Compare X0, 0
	158 JumpIfEqual {747}
	159 Move X8, 0x840000
	160 Move X8, [X8]
	161 Move W1, W21
	162 Move X2, [X8]
	163 Call List`1<Vector4>.set_Capacity, X0, X1
	164 Move X8, [X23]
	165 Move X8, [X8+184]
	166 Move X0, [X8+24]
	167 Compare X0, 0
	168 JumpIfEqual {747}
	169 Move X8, 0x83F000
	170 Move X8, [X8+4040]
	171 Move X19, 0x83F000
	172 Move W1, W21
	173 Move X2, [X8]
	174 Move X19, [X19+3208]
	175 Call List`1<Int32>.set_Capacity, X0, X1
	176 Move X8, [X20]
	177 Move X1, [X19]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X20
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X20
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X20, X0
	198 Compare X0, 0
	199 JumpIfEqual {748}
	200 Move X22, 0x7E5000
	201 Move X27, 0x7E9000
	202 Move X28, 0x83F000
	203 Move X29, 0x7E6000
	204 Move X22, [X22+3608]
	205 Move X27, [X27+952]
	206 Move X28, [X28+4080]
	207 Move X29, [X29+3600]
	208 Move W21, W31
	209 Move W24, 12
	210 Move W19, 0x3F800000
	211 Move W26, 0xBF800000
	212 Move X8, [X20]
	213 Move X1, [X22]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, X20
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, X20
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {616}
	237 Move X8, [X20]
	238 Move X10, 0x83F000
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X10, [X10+3216]
	241 Move X1, [X10]
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X20
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X25, 0
	261 JumpIfEqual {726}
	262 Move W9, [X25+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction SBFM not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X9, W0
	267 Move X0, [X23]
	268 NotImplemented "Instruction NOP not yet implemented."
	269 NotImplemented "Instruction MADD not yet implemented."
	270 NotImplemented "Instruction MADD not yet implemented."
	271 Move S13, [X9+32]
	272 Move S12, [X9+36]
	273 Move V8, [X9+40]
	274 Move S9, [X8+32]
	275 Move S10, [X8+36]
	276 Move W9, [X0+224]
	277 Move V11, [X8+40]
	278 Compare W9, 0
	279 JumpIfNotEqual {282}
	280 Call 0x1C17DFC
	281 Move X0, [X23]
	282 Move X8, [X0+184]
	283 Move X0, [X8+8]
	284 Compare X0, 0
	285 JumpIfEqual {727}
	286 Move W10, [X0+28]
	287 Move X8, [X0+16]
	288 Move X9, [X27]
	289 Add W10, W10, 1
	290 Move [X0+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {723}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 NotImplemented "Instruction MADD not yet implemented."
	298 Move [X0+24], W9
	299 Move [X8+32], S13
	300 Move [X8+40], S12
	301 Move [X8+40], S8
	302 Move X8, [X9+32]
	303 Move X8, [X8+192]
	304 Move X1, [X8+112]
	305 Move V0, V13
	306 Move V1, V12
	307 Move V2, V8
	308 Call List`1<Vector3>.AddWithResize, X0, X1
	309 Move X8, [X23]
	310 Move X8, [X8+184]
	311 Move X0, [X8+8]
	312 Compare X0, 0
	313 JumpIfEqual {724}
	314 Move W10, [X0+28]
	315 Move X8, [X0+16]
	316 Move X9, [X27]
	317 Add W10, W10, 1
	318 Move [X0+28], W10
	319 Compare X8, 0
	320 JumpIfEqual {722}
	321 NotImplemented "Instruction LDRSW not yet implemented."
	322 Move W11, [X8+24]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Add W9, W10, 1
	325 NotImplemented "Instruction MADD not yet implemented."
	326 Move [X0+24], W9
	327 Move [X8+32], S13
	328 Move [X8+40], S12
	329 Move [X8+40], S8
	330 Move X8, [X9+32]
	331 Move X8, [X8+192]
	332 Move X1, [X8+112]
	333 Move V0, V13
	334 Move V1, V12
	335 Move V2, V8
	336 Call List`1<Vector3>.AddWithResize, X0, X1
	337 Move X8, [X23]
	338 Move X8, [X8+184]
	339 Move X0, [X8+8]
	340 Compare X0, 0
	341 JumpIfEqual {728}
	342 Move W10, [X0+28]
	343 Move X8, [X0+16]
	344 Move X9, [X27]
	345 Add W10, W10, 1
	346 Move [X0+28], W10
	347 Compare X8, 0
	348 JumpIfEqual {729}
	349 NotImplemented "Instruction LDRSW not yet implemented."
	350 Move W11, [X8+24]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Add W9, W10, 1
	353 NotImplemented "Instruction MADD not yet implemented."
	354 Move [X0+24], W9
	355 Move [X8+32], S9
	356 Move [X8+40], S10
	357 Move [X8+40], S11
	358 Move X8, [X9+32]
	359 Move X8, [X8+192]
	360 Move X1, [X8+112]
	361 Move V0, V9
	362 Move V1, V10
	363 Move V2, V11
	364 Call List`1<Vector3>.AddWithResize, X0, X1
	365 Move X8, [X23]
	366 Move X8, [X8+184]
	367 Move X0, [X8+8]
	368 Compare X0, 0
	369 JumpIfEqual {725}
	370 Move W10, [X0+28]
	371 Move X8, [X0+16]
	372 Move X9, [X27]
	373 Add W10, W10, 1
	374 Move [X0+28], W10
	375 Compare X8, 0
	376 JumpIfEqual {730}
	377 NotImplemented "Instruction LDRSW not yet implemented."
	378 Move W11, [X8+24]
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Add W9, W10, 1
	381 NotImplemented "Instruction MADD not yet implemented."
	382 Move [X0+24], W9
	383 Move [X8+32], S9
	384 Move [X8+40], S10
	385 Move [X8+40], S11
	386 Move X8, [X9+32]
	387 Move X8, [X8+192]
	388 Move X1, [X8+112]
	389 Move V0, V9
	390 Move V1, V10
	391 Move V2, V11
	392 Call List`1<Vector3>.AddWithResize, X0, X1
	393 Move X8, [X23]
	394 Move X8, [X8+184]
	395 Move X0, [X8+16]
	396 Compare X0, 0
	397 JumpIfEqual {739}
	398 Move W10, [X0+28]
	399 Move X9, [X0+16]
	400 Move X8, [X28]
	401 Add W10, W10, 1
	402 Move [X0+28], W10
	403 Compare X9, 0
	404 JumpIfEqual {740}
	405 NotImplemented "Instruction LDRSW not yet implemented."
	406 Move W11, [X9+24]
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Add W8, W10, 1
	409 Add X9, X9, X10
	410 Move [X0+24], W8
	411 Move [X9+32], S9
	412 Move [X9+40], S10
	413 Move [X9+40], S11
	414 Move [X9+44], W19
	415 Move X8, [X8+32]
	416 Move X8, [X8+192]
	417 Move X1, [X8+112]
	418 Move S3, 1
	419 Move V0, V9
	420 Move V1, V10
	421 Move V2, V11
	422 Call List`1<Vector4>.AddWithResize, X0, X1
	423 Move X8, [X23]
	424 Move X8, [X8+184]
	425 Move X0, [X8+16]
	426 Compare X0, 0
	427 JumpIfEqual {732}
	428 Move W10, [X0+28]
	429 Move X9, [X0+16]
	430 Move X8, [X28]
	431 Add W10, W10, 1
	432 Move [X0+28], W10
	433 Compare X9, 0
	434 JumpIfEqual {737}
	435 NotImplemented "Instruction LDRSW not yet implemented."
	436 Move W11, [X9+24]
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Add W8, W10, 1
	439 Add X9, X9, X10
	440 Move [X0+24], W8
	441 Move [X9+32], S9
	442 Move [X9+40], S10
	443 Move [X9+40], S11
	444 Move [X9+44], W26
	445 Move X8, [X8+32]
	446 Move X8, [X8+192]
	447 Move X1, [X8+112]
	448 Move S3, -1
	449 Move V0, V9
	450 Move V1, V10
	451 Move V2, V11
	452 Call List`1<Vector4>.AddWithResize, X0, X1
	453 Move X8, [X23]
	454 Move X8, [X8+184]
	455 Move X0, [X8+16]
	456 Compare X0, 0
	457 JumpIfEqual {735}
	458 Move W10, [X0+28]
	459 Move X9, [X0+16]
	460 Move X8, [X28]
	461 Add W10, W10, 1
	462 Move [X0+28], W10
	463 Compare X9, 0
	464 JumpIfEqual {742}
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Move W11, [X9+24]
	467 Subtract S0, S9, S13
	468 Subtract S1, S10, S12
	469 Subtract S2, S11, S8
	470 Add S12, S9, S0
	471 Add S9, S10, S1
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Add S8, S11, S2
	474 Add W8, W10, 1
	475 Add X9, X9, X10
	476 Move [X0+24], W8
	477 Move [X9+32], S12
	478 Move [X9+40], S9
	479 Move [X9+40], S8
	480 Move [X9+44], W19
	481 Move X8, [X8+32]
	482 Move X8, [X8+192]
	483 Move X1, [X8+112]
	484 Move S3, 1
	485 Move V0, V12
	486 Move V1, V9
	487 Move V2, V8
	488 Call List`1<Vector4>.AddWithResize, X0, X1
	489 Move X8, [X23]
	490 Move X8, [X8+184]
	491 Move X0, [X8+16]
	492 Compare X0, 0
	493 JumpIfEqual {733}
	494 Move W10, [X0+28]
	495 Move X9, [X0+16]
	496 Move X8, [X28]
	497 Add W10, W10, 1
	498 Move [X0+28], W10
	499 Compare X9, 0
	500 JumpIfEqual {734}
	501 NotImplemented "Instruction LDRSW not yet implemented."
	502 Move W11, [X9+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Add W8, W10, 1
	505 Add X9, X9, X10
	506 Move [X0+24], W8
	507 Move [X9+32], S12
	508 Move [X9+40], S9
	509 Move [X9+40], S8
	510 Move [X9+44], W26
	511 Move X8, [X8+32]
	512 Move X8, [X8+192]
	513 Move X1, [X8+112]
	514 Move S3, -1
	515 Move V0, V12
	516 Move V1, V9
	517 Move V2, V8
	518 Call List`1<Vector4>.AddWithResize, X0, X1
	519 Move X8, [X23]
	520 Move X8, [X8+184]
	521 Move X0, [X8+24]
	522 Compare X0, 0
	523 JumpIfEqual {736}
	524 Move W10, [X0+28]
	525 Move X8, [X0+16]
	526 Move X9, [X29]
	527 Add W10, W10, 1
	528 Move [X0+28], W10
	529 Compare X8, 0
	530 JumpIfEqual {731}
	531 NotImplemented "Instruction LDRSW not yet implemented."
	532 Move W11, [X8+24]
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Add W9, W10, 1
	535 Add X8, X8, X10
	536 Move [X0+24], W9
	537 Move [X8+32], W21
	538 Move X8, [X9+32]
	539 Move X8, [X8+192]
	540 Move X2, [X8+112]
	541 Move W1, W21
	542 Call List`1<Int32>.AddWithResize, X0, X1
	543 Move X8, [X23]
	544 Move X8, [X8+184]
	545 Move X0, [X8+24]
	546 Compare X0, 0
	547 JumpIfEqual {745}
	548 Move W10, [X0+28]
	549 Move X8, [X0+16]
	550 Move X9, [X29]
	551 Add W10, W10, 1
	552 Move [X0+28], W10
	553 Compare X8, 0
	554 JumpIfEqual {741}
	555 NotImplemented "Instruction LDRSW not yet implemented."
	556 Move W11, [X8+24]
	557 Or W1, W21, 1
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Add W9, W10, 1
	560 Add X8, X8, X10
	561 Move [X0+24], W9
	562 Move [X8+32], W1
	563 Move X8, [X9+32]
	564 Move X8, [X8+192]
	565 Move X2, [X8+112]
	566 Call List`1<Int32>.AddWithResize, X0, X1
	567 Move X8, [X23]
	568 Move X8, [X8+184]
	569 Move X0, [X8+24]
	570 Compare X0, 0
	571 JumpIfEqual {744}
	572 Move W10, [X0+28]
	573 Move X8, [X0+16]
	574 Move X9, [X29]
	575 Add W10, W10, 1
	576 Move [X0+28], W10
	577 Compare X8, 0
	578 JumpIfEqual {743}
	579 NotImplemented "Instruction LDRSW not yet implemented."
	580 Move W11, [X8+24]
	581 Or W1, W21, 3
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Add W9, W10, 1
	584 Add X8, X8, X10
	585 Move [X0+24], W9
	586 Move [X8+32], W1
	587 Move X8, [X9+32]
	588 Move X8, [X8+192]
	589 Move X2, [X8+112]
	590 Call List`1<Int32>.AddWithResize, X0, X1
	591 Move X8, [X23]
	592 Move X8, [X8+184]
	593 Move X0, [X8+24]
	594 Compare X0, 0
	595 JumpIfEqual {746}
	596 Move W10, [X0+28]
	597 Move X8, [X0+16]
	598 Move X9, [X29]
	599 Add W10, W10, 1
	600 Move [X0+28], W10
	601 Compare X8, 0
	602 JumpIfEqual {738}
	603 NotImplemented "Instruction LDRSW not yet implemented."
	604 Move W11, [X8+24]
	605 Or W1, W21, 2
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Add W9, W10, 1
	608 Add X8, X8, X10
	609 Move [X0+24], W9
	610 Move [X8+32], W1
	611 Move X8, [X9+32]
	612 Move X8, [X8+192]
	613 Move X2, [X8+112]
	614 Call List`1<Int32>.AddWithResize, X0, X1
	615 Add W21, W21, 4
	616 Move X22, X31
	617 Move W19, 6
	618 Compare X20, 0
	619 JumpIfEqual {643}
	620 Move X8, [X20]
	621 Move X10, 0x7E5000
	622 NotImplemented "Instruction LDRH not yet implemented."
	623 Move X10, [X10+3584]
	624 Move X1, [X10]
	625 Compare X9, 0
	626 JumpIfEqual {633}
	627 Move X10, [X8+176]
	628 Add X10, X10, 8
	629 NotImplemented "Instruction LDUR not yet implemented."
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Subtract X9, X9, 1
	632 Add X10, X10, 16
	633 Move X0, X20
	634 Move W2, W31
	635 Call 0x1C5D788
	636 NotImplemented "Instruction LDRSW not yet implemented."
	637 Add X8, X8, X9
	638 Add X0, X8, 312
	639 Move X8, [X0]
	640 Move X1, [X0+8]
	641 Move X0, X20
	642 NotImplemented "Instruction BLR not yet implemented."
	643 Compare X22, 0
	644 JumpIfNotEqual {749}
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Compare W19, 0
	647 JumpIfNotEqual {700}
	648 Move X0, [X23]
	649 Move W8, [X0+224]
	650 Compare W8, 0
	651 JumpIfNotEqual {654}
	652 Call 0x1C17DFC
	653 Move X0, [X23]
	654 Move X8, [X0+184]
	655 Move X19, [X31+8]
	656 Move X2, X31
	657 Move X1, [X8+8]
	658 Move X0, X19
	659 Call Mesh.SetVertices, X0, X1
	660 Move X8, [X23]
	661 Move X0, X19
	662 Move X2, X31
	663 Move X8, [X8+184]
	664 Move X1, [X8+16]
	665 Call Mesh.SetTangents, X0, X1
	666 Move W1, 1
	667 Move X0, X19
	668 Move X2, X31
	669 Call Mesh.set_subMeshCount, X0, X1
	670 Move X8, [X23]
	671 Move X0, X19
	672 Move X20, [X31+144]
	673 Move X19, [X31+152]
	674 Move X22, [X31+128]
	675 Move X21, [X31+136]
	676 Move X8, [X8+184]
	677 Move X24, [X31+112]
	678 Move X23, [X31+120]
	679 Move X26, [X31+96]
	680 Move X25, [X31+104]
	681 Move X28, [X31+80]
	682 Move X27, [X31+88]
	683 Move X1, [X8+24]
	684 Move X29, [X31+64]
	685 Move X30, [X31+72]
	686 Move D9, [X31+48]
	687 Move D8, [X31+56]
	688 Move D11, [X31+32]
	689 Move D10, [X31+40]
	690 Move D13, [X31+16]
	691 Move D12, [X31+24]
	692 Move W2, 2
	693 Move W4, 1
	694 Move W3, W31
	695 Move W5, W31
	696 Move X6, X31
	697 Add X31, X31, 160
	698 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	699 Return 
	700 Move X20, [X31+144]
	701 Move X19, [X31+152]
	702 Move X22, [X31+128]
	703 Move X21, [X31+136]
	704 Move X24, [X31+112]
	705 Move X23, [X31+120]
	706 Move X26, [X31+96]
	707 Move X25, [X31+104]
	708 Move X28, [X31+80]
	709 Move X27, [X31+88]
	710 Move X29, [X31+64]
	711 Move X30, [X31+72]
	712 Move D9, [X31+48]
	713 Move D8, [X31+56]
	714 Move D11, [X31+32]
	715 Move D10, [X31+40]
	716 Move D13, [X31+16]
	717 Move D12, [X31+24]
	718 Add X31, X31, 160
	719 Return 
	720 Call 0x1C17F28
	721 Call 0x1C17F28
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Call 0x1C17F20
	725 Call 0x1C17F20
	726 Call 0x1C17F20
	727 Call 0x1C17F20
	728 Call 0x1C17F20
	729 Call 0x1C17F20
	730 Call 0x1C17F20
	731 Call 0x1C17F20
	732 Call 0x1C17F20
	733 Call 0x1C17F20
	734 Call 0x1C17F20
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Call 0x1C17F20
	739 Call 0x1C17F20
	740 Call 0x1C17F20
	741 Call 0x1C17F20
	742 Call 0x1C17F20
	743 Call 0x1C17F20
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Move X0, X22
	750 Call 0x1C17F18
	751 Move X21, X0
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Move X0, X21
	754 Call 0x3EB2AD0
	755 Move X22, [X0]
	756 Call 0x3EB2AE0
	757 Move W19, W31
	758 Compare X20, 0
	759 JumpIfNotEqual {620}
	760 Move X22, X31
	761 Move X21, X0
	762 Compare X20, 0
	763 JumpIfEqual {787}
	764 Move X8, [X20]
	765 Move X10, 0x7E5000
	766 NotImplemented "Instruction LDRH not yet implemented."
	767 Move X10, [X10+3584]
	768 Move X1, [X10]
	769 Compare X9, 0
	770 JumpIfEqual {777}
	771 Move X10, [X8+176]
	772 Add X10, X10, 8
	773 NotImplemented "Instruction LDUR not yet implemented."
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Subtract X9, X9, 1
	776 Add X10, X10, 16
	777 Move X0, X20
	778 Move W2, W31
	779 Call 0x1C5D788
	780 NotImplemented "Instruction LDRSW not yet implemented."
	781 Add X8, X8, X9
	782 Add X0, X8, 312
	783 Move X8, [X0]
	784 Move X1, [X0+8]
	785 Move X0, X20
	786 NotImplemented "Instruction BLR not yet implemented."
	787 Compare X22, 0
	788 JumpIfNotEqual {791}
	789 Move X0, X21
	790 Call 0x1D2D690
	791 Move X0, X22
	792 Call 0x1C17F18
	793 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x0390FD98 BL 0x3C17028
	0x0390FD9C MOV X0, X19
	0x0390FDA0 MOV X1, X20
	0x0390FDA4 BL 0x390FDB8
	0x0390FDA8 MOV X0, X20
	0x0390FDAC LDP X20, X19, [X31 + 0x10]
	0x0390FDB0 LDP X30, X21, [X31], #0x20
	0x0390FDB4 RET
	0x0390FDB8 STP X29, X30, [X31 - 0x60]!
	0x0390FDBC STP X28, X27, [X31 + 0x10]
	0x0390FDC0 STP X26, X25, [X31 + 0x20]
	0x0390FDC4 STP X24, X23, [X31 + 0x30]
	0x0390FDC8 STP X22, X21, [X31 + 0x40]
	0x0390FDCC STP X20, X19, [X31 + 0x50]
	0x0390FDD0 ADRP X22, 0xAD2000
	0x0390FDD4 ADRP X21, 0x7E4000
	0x0390FDD8 LDRB W8, [X22 + 0x815]
	0x0390FDDC LDR X21, [X21 + 0x598]
	0x0390FDE0 MOV X19, X1
	0x0390FDE4 MOV X20, X0
	0x0390FDE8 TBNZ X8, 0x0, 0x390FE3C
	0x0390FDEC ADRP X0, 0x810000
	0x0390FDF0 LDR X0, [X0 + 0xAF8]
	0x0390FDF4 BL 0x1C16CF4
	0x0390FDF8 ADRP X0, 0x81C000
	0x0390FDFC LDR X0, [X0 + 0xDA0]
	0x0390FE00 BL 0x1C16CF4
	0x0390FE04 ADRP X0, 0x7E4000
	0x0390FE08 LDR X0, [X0 + 0x598]
	0x0390FE0C BL 0x1C16CF4
	0x0390FE10 ADRP X0, 0x83E000
	0x0390FE14 LDR X0, [X0 + 0xA88]
	0x0390FE18 BL 0x1C16CF4
	0x0390FE1C ADRP X0, 0x7E6000
	0x0390FE20 LDR X0, [X0 + 0x9B0]
	0x0390FE24 BL 0x1C16CF4
	0x0390FE28 ADRP X0, 0x83F000
	0x0390FE2C LDR X0, [X0 + 0x48]
	0x0390FE30 BL 0x1C16CF4
	0x0390FE34 MOVZ W8, 0x1
	0x0390FE38 STRB W8, [X22 + 0x815]
	0x0390FE3C LDR X0, [X21]
	0x0390FE40 LDR W8, [X0 + 0xE0]
	0x0390FE44 CBNZ W8, 0x390FE4C
	0x0390FE48 BL 0x1C16DFC
	0x0390FE4C MOV X0, X20
	0x0390FE50 MOV X1, X31
	0x0390FE54 MOV X2, X31
	0x0390FE58 BL 0x3C3883C
	0x0390FE5C TBNZ X0, 0x0, 0x39101AC
	0x0390FE60 LDR X0, [X21]
	0x0390FE64 LDR W8, [X0 + 0xE0]
	0x0390FE68 CBNZ W8, 0x390FE70
	0x0390FE6C BL 0x1C16DFC
	0x0390FE70 MOV X0, X19
	0x0390FE74 MOV X1, X31
	0x0390FE78 MOV X2, X31
	0x0390FE7C BL 0x3C3883C
	0x0390FE80 TBNZ X0, 0x0, 0x39101CC
	0x0390FE84 CBZ X20, 0x39101A8
	0x0390FE88 MOV X0, X20
	0x0390FE8C MOV X1, X31
	0x0390FE90 BL 0x3C17EBC
	0x0390FE94 CBZ X0, 0x39101A8
	0x0390FE98 ADRP X26, 0x7E6000
	0x0390FE9C LDR X26, [X26 + 0x9B0]
	0x0390FEA0 LDR W1, [X0 + 0x18]
	0x0390FEA4 ADRP X21, 0x81C000
	0x0390FEA8 LDR X8, [X26]
	0x0390FEAC LDR X21, [X21 + 0xDA0]
	0x0390FEB0 MOV X0, X8
	0x0390FEB4 BL 0x1C16D6C
	0x0390FEB8 MOV X24, X0
	0x0390FEBC MOV X0, X20
	0x0390FEC0 MOV X1, X31
	0x0390FEC4 BL 0x3C0F650
	0x0390FEC8 LDR X8, [X21]
	0x0390FECC MOV W1, W0
	0x0390FED0 MOV X0, X8
	0x0390FED4 BL 0x1C16D6C
	0x0390FED8 MOV X21, X0
	0x0390FEDC MOV X0, X20
	0x0390FEE0 MOV X1, X31
	0x0390FEE4 BL 0x3C180C0
	0x0390FEE8 CBZ X0, 0x39101A8
	0x0390FEEC ADRP X23, 0x83E000
	0x0390FEF0 LDR X23, [X23 + 0xA88]
	0x0390FEF4 LDR W1, [X0 + 0x18]
	0x0390FEF8 LDR X8, [X23]
	0x0390FEFC MOV X0, X8
	0x0390FF00 BL 0x1C16D6C
	0x0390FF04 MOV X22, X0
	0x0390FF08 MOV X0, X20
	0x0390FF0C MOV X1, X31
	0x0390FF10 BL 0x3C1816C
	0x0390FF14 CBZ X0, 0x39101A8
	0x0390FF18 LDR X8, [X23]
	0x0390FF1C LDR W1, [X0 + 0x18]
	0x0390FF20 MOV X0, X8
	0x0390FF24 BL 0x1C16D6C
	0x0390FF28 MOV X23, X0
	0x0390FF2C MOV X0, X20
	0x0390FF30 MOV X1, X31
	0x0390FF34 BL 0x3C18014

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xAD3000
	011 Move X26, 0x7E9000
	012 Move X25, 0x811000
	013 Move X20, 0x83F000
	014 Move X24, 0x840000
	015 Move X23, 0x840000
	016 Move X22, 0x7E6000
	017 Move X21, 0x7E9000
	018 Move X26, [X26+960]
	019 Move X25, [X25+1464]
	020 Move W8, [X19+2063]
	021 Move X20, [X20+4048]
	022 Move X24, [X24+8]
	023 Move X23, [X23+16]
	024 Move X22, [X22+3632]
	025 Move X21, [X21+2928]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x7E9000
	031 Move X0, [X0+2928]
	032 Call 0x1C17CF4
	033 Move X0, 0x840000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x811000
	037 Move X0, [X0+1464]
	038 Call 0x1C17CF4
	039 Move X0, 0x7E6000
	040 Move X0, [X0+3632]
	041 Call 0x1C17CF4
	042 Move X0, 0x7E9000
	043 Move X0, [X0+960]
	044 Call 0x1C17CF4
	045 Move X0, 0x840000
	046 Move X0, [X0+8]
	047 Call 0x1C17CF4
	048 Move X0, 0x83F000
	049 Move X0, [X0+4048]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+2063], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X1, [X25]
	056 Move X19, X0
	057 Call List`1<Vector3>..ctor, X0
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move [X8], X19
	061 Move X0, [X26]
	062 Call 0x1C17F10
	063 Move X1, [X25]
	064 Move X19, X0
	065 Call List`1<Vector3>..ctor, X0
	066 Move X8, [X20]
	067 Move X8, [X8+184]
	068 Move [X8+8], X19
	069 Move X0, [X24]
	070 Call 0x1C17F10
	071 Move X1, [X23]
	072 Move X19, X0
	073 Call List`1<Vector4>..ctor, X0
	074 Move X8, [X20]
	075 Move X8, [X8+184]
	076 Move [X8+16], X19
	077 Move X0, [X22]
	078 Call 0x1C17F10
	079 Move X1, [X21]
	080 Move X19, X0
	081 Call List`1<Int32>..ctor, X0
	082 Move X8, [X20]
	083 Move X8, [X8+184]
	084 Move [X8+24], X19
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, [X21]
	088 Move X19, X0
	089 Call List`1<Int32>..ctor, X0
	090 Move X8, [X20]
	091 Move V0, 0
	092 Move X10, -48369664
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X9, [X8+184]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move [X9+40], D0
	101 Move [X9+32], X19
	102 Move V0, [X10+2880]
	103 Move X9, [X8+184]
	104 Move X10, -48369664
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move [X9+48], D0
	108 Move X9, [X8+184]
	109 Move V0, [X10+2352]
	110 Move [X9+56], D0
	111 Move X8, [X8+184]
	112 Move V0, 0
	113 Move [X8+64], D0
	114 Move X30, [X31+80]
	115 Return 

