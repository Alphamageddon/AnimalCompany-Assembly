Type: UnityEngine.ProBuilder.FaceRebuildData

Method: System.Int32 Offset()

Disassembly:
	0x0390279C TBZ X0, 0x0, 0x39027B4
	0x039027A0 MOV V9.16B, V15.16B

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x039027A4 MOV V10.16B, V14.16B
	0x039027A8 MOV V11.16B, V13.16B
	0x039027AC MOV W24, W27
	0x039027B0 MOV V12.16B, V0.16B
	0x039027B4 ADD W9, W21, 0x2
	0x039027B8 CMP W9, W23
	0x039027BC B.GE 0x39027D4
	0x039027C0 LDR W8, [X28 + 0x18]
	0x039027C4 ADD W21, W21, 0x3
	0x039027C8 CMP W9, W8
	0x039027CC B.CC 0x3902660
	0x039027D0 B 0x3902898
	0x039027D4 MOV X21, X29
	0x039027D8 MOV X29, X26
	0x039027DC LDR X26, [X31 + 0x20]
	0x039027E0 LDR X8, [X31 + 0x28]
	0x039027E4 ADD X27, X27, 0x1
	0x039027E8 CMP X27, X8
	0x039027EC B.NE 0x39025E8
	0x039027F0 B 0x3902800
	0x039027F4 MOVZ W8, 0x7F800000
	0x039027F8 MOVN W24, 0x0
	0x039027FC FMOV S12, W8
	0x03902800 ADRP X19, 0x84B000
	0x03902804 LDR X19, [X19 + 0xE30]
	0x03902808 MOV X0, X20
	0x0390280C MOV V0.16B, V12.16B
	0x03902810 MOV X1, X31
	0x03902814 BL 0x3C0B1B4
	0x03902818 LDR X0, [X19]
	0x0390281C MOV V8.16B, V0.16B
	0x03902820 MOV V13.16B, V1.16B
	0x03902824 MOV V14.16B, V2.16B
	0x03902828 BL 0x1C16F10
	0x0390282C MOV V0.16B, V12.16B
	0x03902830 MOV V1.16B, V8.16B
	0x03902834 MOV V2.16B, V13.16B
	0x03902838 MOV V3.16B, V14.16B
	0x0390283C MOV V4.16B, V11.16B
	0x03902840 MOV V5.16B, V10.16B
	0x03902844 MOV V6.16B, V9.16B
	0x03902848 MOV W1, W24
	0x0390284C MOV X2, X31
	0x03902850 MOV X20, X0
	0x03902854 BL 0x3921E90
	0x03902858 ORN W8, W31, W24, 0x0
	0x0390285C UBFM W0, W8, 0x1F, 0x1F
	0x03902860 LDR X8, [X31 + 0x18]
	0x03902864 LDP X22, X21, [X31 + 0x1A0]
	0x03902868 LDP X24, X23, [X31 + 0x190]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xAE0000
	009 Move X21, 0x7F2000
	010 Move X23, 0x84C000
	011 Move X22, 0x84C000
	012 Move X20, 0x84C000
	013 Move W8, [X24+1982]
	014 Move X21, [X21+2104]
	015 Move X23, [X23+3520]
	016 Move X22, [X22+3528]
	017 Move X20, [X20+3536]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x84C000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move X0, 0x84C000
	027 Move X0, [X0+3520]
	028 Call 0x1C17CF4
	029 Move X0, 0x7F2000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0x84C000
	033 Move X0, [X0+3536]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+1982], W8
	037 Move X0, [X19+24]
	038 Move X1, [X21]
	039 Move X2, [X23]
	040 Call ArrayUtility.ToString, X0, X1
	041 Move X8, [X19+32]
	042 Move X1, [X21]
	043 Move X2, [X22]
	044 Move X19, X0
	045 Move X0, X8
	046 Call 0x2181A28, X0, X1
	047 Move X8, [X20]
	048 Move X1, X19
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X2, X0
	056 Move X0, X8
	057 Move X3, X31
	058 Move X30, [X31+64]
	059 Call String.Format, X0, X1, X2
	060 Return X0

Method: System.Void Apply(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.FaceRebuildData> newFaces, UnityEngine.ProBuilder.ProBuilderMesh mesh, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices = null, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> faces = null)

Disassembly:
	0x0390286C LDP X26, X25, [X31 + 0x180]
	0x03902870 STR X20, [X8]
	0x03902874 LDP X20, X19, [X31 + 0x1B0]
	0x03902878 LDP X28, X27, [X31 + 0x170]
	0x0390287C LDP X29, X30, [X31 + 0x160]
	0x03902880 LDP D9, D8, [X31 + 0x150]
	0x03902884 LDP D11, D10, [X31 + 0x140]
	0x03902888 LDP D13, D12, [X31 + 0x130]
	0x0390288C LDP D15, D14, [X31 + 0x120]
	0x03902890 ADD X31, X31, 0x1C0
	0x03902894 RET
	0x03902898 BL 0x1C16F28
	0x0390289C BL 0x1C16F20
	0x039028A0 SUB X31, X31, 0x80
	0x039028A4 STP D15, D14, [X31 + 0x10]
	0x039028A8 STP D13, D12, [X31 + 0x20]
	0x039028AC STP D11, D10, [X31 + 0x30]
	0x039028B0 STP D9, D8, [X31 + 0x40]
	0x039028B4 STP X30, X23, [X31 + 0x50]
	0x039028B8 STP X22, X21, [X31 + 0x60]
	0x039028BC STP X20, X19, [X31 + 0x70]
	0x039028C0 ADRP X22, 0xADF000
	0x039028C4 LDRB W8, [X22 + 0x7F7]
	0x039028C8 MOV X19, X2
	0x039028CC MOV X20, X1
	0x039028D0 MOV V12.16B, V4.16B
	0x039028D4 MOV V13.16B, V3.16B
	0x039028D8 MOV V8.16B, V2.16B
	0x039028DC MOV V11.16B, V1.16B
	0x039028E0 MOV V9.16B, V0.16B
	0x039028E4 MOV X21, X0
	0x039028E8 TBNZ X8, 0x0, 0x3902908
	0x039028EC ADRP X0, 0x7F8000
	0x039028F0 LDR X0, [X0 + 0x4B8]
	0x039028F4 MOV V10.16B, V5.16B
	0x039028F8 BL 0x1C16CF4
	0x039028FC MOV V5.16B, V10.16B
	0x03902900 MOVZ W8, 0x1
	0x03902904 STRB W8, [X22 + 0x7F7]
	0x03902908 STR W31, [X20]
	0x0390290C ADRP X23, 0xAD6000
	0x03902910 ADRP X22, 0x7F8000
	0x03902914 LDP S29, S15, [X31 + 0x80]
	0x03902918 LDRB W8, [X23 + 0x783]
	0x0390291C LDR V10, [X31 + 0x88]
	0x03902920 LDR X22, [X22 + 0x4B8]
	0x03902924 CBNZ W8, 0x390296C
	0x03902928 ADRP X0, 0x7F1000
	0x0390292C LDR X0, [X0 + 0x5A0]
	0x03902930 STR S9, [X31 + 0xC]
	0x03902934 MOV V9.16B, V8.16B
	0x03902938 MOV V14.16B, V13.16B
	0x0390293C MOV V13.16B, V12.16B
	0x03902940 MOV V12.16B, V5.16B
	0x03902944 MOV V8.16B, V29.16B
	0x03902948 BL 0x1C16CF4
	0x0390294C MOV V29.16B, V8.16B
	0x03902950 MOV V8.16B, V9.16B
	0x03902954 LDR V9, [X31 + 0xC]
	0x03902958 MOV V5.16B, V12.16B
	0x0390295C MOV V12.16B, V13.16B
	0x03902960 MOV V13.16B, V14.16B
	0x03902964 MOVZ W8, 0x1
	0x03902968 STRB W8, [X23 + 0x783]
	0x0390296C ADRP X8, 0x7F1000
	0x03902970 LDR X8, [X8 + 0x5A0]
	0x03902974 FSUB S1, S15, S11
	0x03902978 FSUB S0, S29, S9
	0x0390297C FSUB S3, S13, S9
	0x03902980 LDR X8, [X8]
	0x03902984 FSUB S4, S12, S11
	0x03902988 FSUB S16, S5, S8
	0x0390298C LDR X8, [X8 + 0xB8]
	0x03902990 LDR V2, [X8]
	0x03902994 LDR V6, [X8 + 0x8]
	0x03902998 STR D2, [X19]
	0x0390299C STR S6, [X19 + 0x8]
	0x039029A0 LDR X8, [X22]
	0x039029A4 LDP S6, S7, [X21 + 0xC]
	0x039029A8 LDR V26, [X21 + 0x14]
	0x039029AC FSUB S2, S10, S8
	0x039029B0 LDR X8, [X8 + 0xB8]
	0x039029B4 FMUL S17, S2, S7
	0x039029B8 FMUL S18, S1, S26
	0x039029BC FMUL S19, S0, S26
	0x039029C0 FMUL S20, S2, S6
	0x039029C4 FSUB S25, S17, S18
	0x039029C8 LDR V17, [X8]
	0x039029CC FMUL S21, S1, S6
	0x039029D0 FMUL S22, S0, S7
	0x039029D4 FSUB S24, S19, S20
	0x039029D8 FSUB S18, S21, S22
	0x039029DC FMUL S19, S3, S25
	0x039029E0 FMUL S20, S4, S24
	0x039029E4 FADD S19, S19, S20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xAE0000
	009 Move W8, [X23+1983]
	010 Move X20, X3
	011 Move X22, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x84C000
	019 Move X0, [X0+3544]
	020 Call 0x1C17CF4
	021 Move X0, 0x84C000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x84C000
	025 Move X0, [X0+3560]
	026 Call 0x1C17CF4
	027 Move X0, 0x84C000
	028 Move X0, [X0+3568]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1983], W8
	032 Compare X20, 0
	033 JumpIfEqual {38}
	034 Compare X22, 0
	035 JumpIfEqual {53}
	036 Compare X19, 0
	037 JumpIfNotEqual {71}
	038 Compare X19, 0
	039 JumpIfEqual {110}
	040 Move X8, 0x84C000
	041 Move X23, [X19+40]
	042 Move X8, [X8+3568]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0x84C000
	046 Move X8, [X8+3544]
	047 Move X1, X23
	048 Move X20, X0
	049 Move X2, [X8]
	050 Call List`1<Object>..ctor, X0, X1
	051 Compare X22, 0
	052 JumpIfNotEqual {36}
	053 Compare X19, 0
	054 JumpIfEqual {110}
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call ProBuilderMesh.GetVertices, X0, X1
	059 Move X8, 0x84C000
	060 Move X8, [X8+3560]
	061 Move X23, X0
	062 Move X8, [X8]
	063 Move X0, X8
	064 Call 0x1C17F10
	065 Move X8, 0x84C000
	066 Move X8, [X8+3552]
	067 Move X1, X23
	068 Move X22, X0
	069 Move X2, [X8]
	070 Call List`1<Object>..ctor, X0, X1
	071 Move X0, X19
	072 Move X1, X31
	073 Call ProBuilderMesh.get_sharedVertexLookup, X0
	074 Move X23, X0
	075 Move X0, X19
	076 Move X1, X31
	077 Call ProBuilderMesh.get_sharedTextureLookup, X0
	078 Move X24, X0
	079 Move X0, X21
	080 Move X1, X22
	081 Move X2, X20
	082 Move X3, X23
	083 Move X4, X24
	084 Call FaceRebuildData.Apply, X0, X1, X2, X3, X4
	085 Move X0, X19
	086 Move X1, X22
	087 Move W2, W31
	088 Move X3, X31
	089 Call ProBuilderMesh.SetVertices, X0, X1, X2
	090 Move X0, X19
	091 Move X1, X20
	092 Move X2, X31
	093 Call ProBuilderMesh.set_faces, X0, X1
	094 Move X0, X19
	095 Move X1, X23
	096 Move X2, X31
	097 Call ProBuilderMesh.SetSharedVertices, X0, X1
	098 Move X0, X19
	099 Move X1, X24
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X2, X31
	107 Move X30, [X31+64]
	108 Call ProBuilderMesh.SetSharedTextures, X0, X1
	109 Return 
	110 Call 0x1C17F20

Method: System.Void Apply(System.Collections.Generic.IEnumerable`1<UnityEngine.ProBuilder.FaceRebuildData> newFaces, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Vertex> vertices, System.Collections.Generic.List`1<UnityEngine.ProBuilder.Face> faces, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> sharedVertexLookup, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> sharedTextureLookup = null)

Disassembly:
	0x039029E8 FMUL S20, S16, S18
	0x039029EC FADD S19, S20, S19
	0x039029F0 FNEG S20, S17
	0x039029F4 FCMP S19, S20
	0x039029F8 B.LE 0x3902A2C
	0x039029FC FCMP S19, S17
	0x03902A00 B.PL 0x3902A2C
	0x03902A04 MOV W0, W31
	0x03902A08 LDP X20, X19, [X31 + 0x70]
	0x03902A0C LDP X22, X21, [X31 + 0x60]
	0x03902A10 LDP X30, X23, [X31 + 0x50]
	0x03902A14 LDP D9, D8, [X31 + 0x40]
	0x03902A18 LDP D11, D10, [X31 + 0x30]
	0x03902A1C LDP D13, D12, [X31 + 0x20]
	0x03902A20 LDP D15, D14, [X31 + 0x10]
	0x03902A24 ADD X31, X31, 0x80
	0x03902A28 RET
	0x03902A2C LDP S20, S21, [X21]
	0x03902A30 LDR V22, [X21 + 0x8]
	0x03902A34 FMOV S23, 1
	0x03902A38 FDIV S19, S23, S19
	0x03902A3C FSUB S20, S20, S9
	0x03902A40 FSUB S21, S21, S11
	0x03902A44 FSUB S22, S22, S8
	0x03902A48 FMUL S25, S25, S20
	0x03902A4C FMUL S24, S24, S21
	0x03902A50 FADD S24, S25, S24
	0x03902A54 FMUL S18, S18, S22
	0x03902A58 FADD S18, S18, S24
	0x03902A5C FMUL S18, S19, S18
	0x03902A60 FCMP S18, 0x0
	0x03902A64 MOV W0, W31
	0x03902A68 B.MI 0x3902A08
	0x03902A6C FCMP S18, S23
	0x03902A70 B.GT 0x3902A08
	0x03902A74 FMUL S23, S16, S21
	0x03902A78 FMUL S24, S4, S22
	0x03902A7C FMUL S22, S3, S22
	0x03902A80 FMUL S16, S16, S20
	0x03902A84 FMUL S4, S4, S20
	0x03902A88 FMUL S3, S3, S21
	0x03902A8C FSUB S21, S23, S24
	0x03902A90 FSUB S20, S22, S16
	0x03902A94 FSUB S16, S4, S3
	0x03902A98 FMUL S3, S6, S21
	0x03902A9C FMUL S4, S7, S20
	0x03902AA0 FADD S3, S3, S4
	0x03902AA4 FMUL S4, S26, S16
	0x03902AA8 FADD S3, S4, S3
	0x03902AAC FMUL S3, S19, S3
	0x03902AB0 FCMP S3, 0x0
	0x03902AB4 B.MI 0x3902A04
	0x03902AB8 FADD S4, S18, S3
	0x03902ABC FMOV S6, 1
	0x03902AC0 FCMP S4, S6
	0x03902AC4 B.GT 0x3902A04
	0x03902AC8 FMUL S0, S0, S21
	0x03902ACC FMUL S1, S1, S20
	0x03902AD0 FADD S0, S0, S1
	0x03902AD4 FMUL S1, S2, S16
	0x03902AD8 FADD S0, S1, S0
	0x03902ADC FMUL S0, S19, S0
	0x03902AE0 FCMP S0, S17
	0x03902AE4 B.LE 0x3902A04
	0x03902AE8 STR S0, [X20]
	0x03902AEC FMUL S0, S13, S18
	0x03902AF0 FMUL S1, S29, S3
	0x03902AF4 FMOV S2, 1
	0x03902AF8 FMUL S16, S12, S18
	0x03902AFC FMUL S6, S15, S3
	0x03902B00 FMUL S7, S5, S18
	0x03902B04 FMUL S3, S10, S3
	0x03902B08 FADD S0, S0, S1
	0x03902B0C FSUB S1, S2, S4
	0x03902B10 FADD S2, S16, S6
	0x03902B14 FADD S3, S7, S3
	0x03902B18 FMUL S4, S9, S1
	0x03902B1C FMUL S5, S11, S1
	0x03902B20 FMUL S1, S8, S1
	0x03902B24 FADD S0, S0, S4
	0x03902B28 FADD S2, S2, S5
	0x03902B2C FADD S1, S3, S1
	0x03902B30 MOVZ W0, 0x1
	0x03902B34 STP S0, S2, [X19]
	0x03902B38 STR S1, [X19 + 0x8]
	0x03902B3C B 0x3902A08
	0x03902B40 SUB X31, X31, 0x1C0
	0x03902B44 STP D15, D14, [X31 + 0x120]
	0x03902B48 STP D13, D12, [X31 + 0x130]
	0x03902B4C STP D11, D10, [X31 + 0x140]
	0x03902B50 STP D9, D8, [X31 + 0x150]
	0x03902B54 STP X29, X30, [X31 + 0x160]
	0x03902B58 STP X28, X27, [X31 + 0x170]
	0x03902B5C STP X26, X25, [X31 + 0x180]
	0x03902B60 STP X24, X23, [X31 + 0x190]
	0x03902B64 STP X22, X21, [X31 + 0x1A0]
	0x03902B68 STP X20, X19, [X31 + 0x1B0]
	0x03902B6C ADRP X19, 0xADF000
	0x03902B70 LDRB W8, [X19 + 0x7C6]
	0x03902B74 MOV X22, X3
	0x03902B78 MOV X25, X2
	0x03902B7C MOV X21, X0
	0x03902B80 STR X1, [X31 + 0x18]
	0x03902B84 TBNZ X8, 0x0, 0x3902BB4
	0x03902B88 ADRP X0, 0x84B000
	0x03902B8C LDR X0, [X0 + 0xE38]
	0x03902B90 BL 0x1C16CF4
	0x03902B94 ADRP X0, 0x84B000
	0x03902B98 LDR X0, [X0 + 0xE40]
	0x03902B9C BL 0x1C16CF4
	0x03902BA0 ADRP X0, 0x84B000
	0x03902BA4 LDR X0, [X0 + 0xE48]
	0x03902BA8 BL 0x1C16CF4
	0x03902BAC MOVZ W8, 0x1
	0x03902BB0 STRB W8, [X19 + 0x7C6]
	0x03902BB4 LDR X19, [X31 + 0x18]
	0x03902BB8 STP X31, X31, [X31 + 0x110]
	0x03902BBC CBZ X19, 0x3902F90
	0x03902BC0 LDR V8, [X21]
	0x03902BC4 LDR V9, [X21 + 0x8]
	0x03902BC8 MOV X0, X19
	0x03902BCC MOV X1, X31
	0x03902BD0 BL 0x3C32E90
	0x03902BD4 CBZ X0, 0x3902F90
	0x03902BD8 MOV X1, X31
	0x03902BDC BL 0x3C3F58C
	0x03902BE0 FSUB S2, S9, S2
	0x03902BE4 MOV V0.S[1], V1.S[0]
	0x03902BE8 FSUB V0.2S, V8.2S, V0.2S
	0x03902BEC MOV X0, X19
	0x03902BF0 MOV X1, X31
	0x03902BF4 STR D0, [X21]
	0x03902BF8 STR S2, [X21 + 0x8]
	0x03902BFC BL 0x3C32E90
	0x03902C00 CBZ X0, 0x3902F90
	0x03902C04 ADD X8, X31, 0xD0
	0x03902C08 MOV X1, X31
	0x03902C0C BL 0x3C3FF0C
	0x03902C10 LDP V0, V1, [X31 + 0xD0]
	0x03902C14 LDP V2, V3, [X31 + 0xF0]
	0x03902C18 ADD X0, X31, 0x90
	0x03902C1C MOV X1, X31
	0x03902C20 STP V0, V1, [X31 + 0x90]
	0x03902C24 STP V2, V3, [X31 + 0xB0]
	0x03902C28 LDP S0, S1, [X21]
	0x03902C2C LDR V2, [X21 + 0x8]
	0x03902C30 FMOV S3, W31
	0x03902C34 BL 0x3C2806C
	0x03902C38 MOV X0, X19
	0x03902C3C MOV X1, X31
	0x03902C40 STP S0, S1, [X21]
	0x03902C44 STR S2, [X21 + 0x8]
	0x03902C48 BL 0x3C32E90
	0x03902C4C CBZ X0, 0x3902F90
	0x03902C50 ADD X8, X31, 0xD0
	0x03902C54 MOV X1, X31
	0x03902C58 BL 0x3C3FF0C
	0x03902C5C LDP V0, V1, [X31 + 0xD0]
	0x03902C60 LDP V2, V3, [X31 + 0xF0]
	0x03902C64 ADD X0, X31, 0x50
	0x03902C68 MOV X1, X31
	0x03902C6C STP V0, V1, [X31 + 0x50]
	0x03902C70 STP V2, V3, [X31 + 0x70]
	0x03902C74 LDP S0, S1, [X21 + 0xC]
	0x03902C78 LDR V2, [X21 + 0x14]
	0x03902C7C FMOV S3, W31
	0x03902C80 BL 0x3C2806C
	0x03902C84 ADRP X19, 0xAD6000
	0x03902C88 LDRB W8, [X19 + 0x785]
	0x03902C8C MOV V8.16B, V0.16B
	0x03902C90 MOV V9.16B, V1.16B
	0x03902C94 MOV V10.16B, V2.16B
	0x03902C98 CBNZ W8, 0x3902CB0
	0x03902C9C ADRP X0, 0x7F1000
	0x03902CA0 LDR X0, [X0 + 0x5A8]
	0x03902CA4 BL 0x1C16CF4
	0x03902CA8 MOVZ W8, 0x1
	0x03902CAC STRB W8, [X19 + 0x785]
	0x03902CB0 ADRP X8, 0x7F1000
	0x03902CB4 LDR X8, [X8 + 0x5A8]
	0x03902CB8 LDR X0, [X8]
	0x03902CBC LDR W8, [X0 + 0xE0]
	0x03902CC0 CBNZ W8, 0x3902CC8
	0x03902CC4 BL 0x1C16DFC
	0x03902CC8 FMUL S0, S8, S8
	0x03902CCC FMUL S1, S9, S9
	0x03902CD0 ADRP X8, 0xFFFFFFFFFD1E8000
	0x03902CD4 FADD S0, S0, S1
	0x03902CD8 LDR V1, [X8 + 0x17C]
	0x03902CDC FMUL S2, S10, S10
	0x03902CE0 FADD S0, S2, S0
	0x03902CE4 FSQRT S2, S0
	0x03902CE8 FCMP S2, S1
	0x03902CEC B.LE 0x3902D00
	0x03902CF0 FDIV S0, S8, S2
	0x03902CF4 FDIV S1, S9, S2
	0x03902CF8 FDIV S2, S10, S2
	0x03902CFC B 0x3902D38
	0x03902D00 ADRP X19, 0xAD6000
	0x03902D04 LDRB W8, [X19 + 0x783]
	0x03902D08 CBNZ W8, 0x3902D20
	0x03902D0C ADRP X0, 0x7F1000
	0x03902D10 LDR X0, [X0 + 0x5A0]
	0x03902D14 BL 0x1C16CF4
	0x03902D18 MOVZ W8, 0x1
	0x03902D1C STRB W8, [X19 + 0x783]
	0x03902D20 ADRP X8, 0x7F1000
	0x03902D24 LDR X8, [X8 + 0x5A0]
	0x03902D28 LDR X8, [X8]
	0x03902D2C LDR X8, [X8 + 0xB8]
	0x03902D30 LDP S0, S1, [X8]
	0x03902D34 LDR V2, [X8 + 0x8]
	0x03902D38 LDR X11, [X31 + 0x18]
	0x03902D3C STP S0, S1, [X21 + 0xC]
	0x03902D40 STR S2, [X21 + 0x14]
	0x03902D44 LDR X23, [X11 + 0x28]
	0x03902D48 LDR X24, [X11 + 0x58]
	0x03902D4C STR X31, [X25]
	0x03902D50 STR X31, [X22]
	0x03902D54 CBZ X23, 0x3902F90
	0x03902D58 LDR W8, [X23 + 0x18]
	0x03902D5C CMP W8, 0x1
	0x03902D60 STR W8, [X31 + 0x20]
	0x03902D64 B.LT 0x3902F9C
	0x03902D68 MOVZ W9, 0x7F800000
	0x03902D6C MOV X20, X22
	0x03902D70 MOV W8, W31
	0x03902D74 FMOV S0, W9
	0x03902D78 MOVZ W26, 0xC
	0x03902D7C MOV X9, X23
	0x03902D80 STP S0, S0, [X31 + 0x24]
	0x03902D84 LDR W10, [X9 + 0x18]
	0x03902D88 CMP W8, W10
	0x03902D8C B.CS 0x3903034
	0x03902D90 SXTW X27, W8
	0x03902D94 ADD X8, X9, X27, 0x3, LSL
	0x03902D98 LDR X8, [X8 + 0x20]
	0x03902D9C CBZ X8, 0x3902F90
	0x03902DA0 LDR X28, [X8 + 0x10]
	0x03902DA4 CBZ X28, 0x3902F90
	0x03902DA8 LDR X29, [X28 + 0x18]
	0x03902DAC CMP W29, 0x1
	0x03902DB0 B.LT 0x3902F78
	0x03902DB4 CBZ W29, 0x3903034
	0x03902DB8 ADD X9, X23, X27, 0x3, LSL
	0x03902DBC MOV W8, W29
	0x03902DC0 ADD X22, X9, 0x20
	0x03902DC4 MOVZ W19, 0x1
	0x03902DC8 CBZ X24, 0x3902F90
	0x03902DCC SUB W9, W19, 0x1
	0x03902DD0 ADD X9, X28, W9, 0x2, SXTW
	0x03902DD4 LDRSW X9, [X9 + 0x20]
	0x03902DD8 LDR W10, [X24 + 0x18]
	0x03902DDC CMP W9, W10
	0x03902DE0 B.CS 0x3903034
	0x03902DE4 CMP W19, W8
	0x03902DE8 B.CS 0x3903034
	0x03902DEC ADD X11, X28, W19, 0x2, SXTW
	0x03902DF0 LDRSW X11, [X11 + 0x20]
	0x03902DF4 CMP W11, W10
	0x03902DF8 B.CS 0x3903034
	0x03902DFC ADD W12, W19, 0x1
	0x03902E00 CMP W12, W8
	0x03902E04 B.CS 0x3903034
	0x03902E08 ADD X8, X28, W12, 0x2, SXTW
	0x03902E0C LDRSW X8, [X8 + 0x20]
	0x03902E10 CMP W8, W10
	0x03902E14 B.CS 0x3903034
	0x03902E18 MADD X9, X9, X26, X24
	0x03902E1C MADD X10, X11, X26, X24
	0x03902E20 MADD X8, X8, X26, X24
	0x03902E24 LDR V0, [X21]
	0x03902E28 LDP S12, S11, [X9 + 0x20]
	0x03902E2C LDR V10, [X9 + 0x28]
	0x03902E30 LDP S15, S14, [X10 + 0x20]
	0x03902E34 LDR V13, [X10 + 0x28]
	0x03902E38 LDP S8, S9, [X8 + 0x20]
	0x03902E3C LDR V1, [X8 + 0x28]
	0x03902E40 LDR X9, [X21 + 0x10]
	0x03902E44 STR V0, [X31 + 0x3]
	0x03902E48 ADD X0, X31, 0x30
	0x03902E4C STR S1, [X31 + 0x2C]
	0x03902E50 STP S9, S1, [X31 + 0x4]
	0x03902E54 ADD X1, X31, 0x11C
	0x03902E58 ADD X2, X31, 0x110
	0x03902E5C MOV V0.16B, V12.16B
	0x03902E60 MOV V1.16B, V11.16B
	0x03902E64 MOV V2.16B, V10.16B
	0x03902E68 MOV V3.16B, V15.16B
	0x03902E6C MOV V4.16B, V14.16B
	0x03902E70 MOV V5.16B, V13.16B
	0x03902E74 STR X9, [X31 + 0x40]
	0x03902E78 STR S8, [X31]
	0x03902E7C BL 0x39028A0
	0x03902E80 TBZ X0, 0x0, 0x3902EA0
	0x03902E84 LDR V0, [X31 + 0x11C]
	0x03902E88 LDR V1, [X31 + 0x28]
	0x03902E8C FCMP S0, S1
	0x03902E90 B.MI 0x3902EC0
	0x03902E94 LDR V1, [X31 + 0x24]
	0x03902E98 FCMP S0, S1
	0x03902E9C B.MI 0x3902EC0
	0x03902EA0 ADD W9, W19, 0x2
	0x03902EA4 CMP W9, W29
	0x03902EA8 B.GE 0x3902F74
	0x03902EAC LDR W8, [X28 + 0x18]
	0x03902EB0 ADD W19, W19, 0x3
	0x03902EB4 CMP W9, W8
	0x03902EB8 B.CC 0x3902DC8
	0x03902EBC B 0x3903034
	0x03902EC0 LDR V6, [X31 + 0x2C]
	0x03902EC4 FSUB S1, S15, S12
	0x03902EC8 FSUB S2, S14, S11
	0x03902ECC FSUB S3, S13, S10
	0x03902ED0 FSUB S4, S8, S12
	0x03902ED4 FSUB S5, S9, S11
	0x03902ED8 FSUB S6, S6, S10
	0x03902EDC LDP S7, S16, [X21 + 0xC]
	0x03902EE0 FMUL S17, S2, S6
	0x03902EE4 FMUL S6, S1, S6
	0x03902EE8 FMUL S1, S1, S5
	0x03902EEC FMUL S5, S3, S5
	0x03902EF0 FMUL S3, S3, S4
	0x03902EF4 FMUL S2, S2, S4
	0x03902EF8 LDR V4, [X21 + 0x14]
	0x03902EFC FSUB S5, S17, S5
	0x03902F00 FSUB S3, S3, S6
	0x03902F04 FSUB S1, S1, S2
	0x03902F08 FMUL S2, S5, S7
	0x03902F0C FMUL S3, S3, S16
	0x03902F10 FADD S2, S2, S3
	0x03902F14 FMUL S1, S1, S4
	0x03902F18 FADD S1, S1, S2
	0x03902F1C FCMP S1, 0x0
	0x03902F20 B.PL 0x3902F4C
	0x03902F24 LDR V1, [X31 + 0x28]
	0x03902F28 FCMP S0, S1
	0x03902F2C B.PL 0x3902EA0
	0x03902F30 LDR W8, [X23 + 0x18]
	0x03902F34 CMP W27, W8
	0x03902F38 B.CS 0x3903034
	0x03902F3C LDR X8, [X22]
	0x03902F40 STR S0, [X31 + 0x28]
	0x03902F44 STR X8, [X25]
	0x03902F48 B 0x3902EA0
	0x03902F4C LDR V1, [X31 + 0x24]
	0x03902F50 FCMP S0, S1
	0x03902F54 B.PL 0x3902EA0
	0x03902F58 LDR W8, [X23 + 0x18]
	0x03902F5C CMP W27, W8
	0x03902F60 B.CS 0x3903034
	0x03902F64 LDR X8, [X22]
	0x03902F68 STR S0, [X31 + 0x24]
	0x03902F6C STR X8, [X20]
	0x03902F70 B 0x3902EA0
	0x03902F74 LDR X11, [X31 + 0x18]
	0x03902F78 LDR W9, [X31 + 0x20]
	0x03902F7C ADD W8, W27, 0x1
	0x03902F80 CMP W8, W9

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xAE0000
	015 Move W8, [X22+1984]
	016 Move X20, X4
	017 Move X21, X3
	018 Move X23, X2
	019 Move X19, X0
	020 Move [X31+24], X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x7FC000
	026 Move X0, [X0+2136]
	027 Call 0x1C17CF4
	028 Move X0, 0x7F2000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x84C000
	032 Move X0, [X0+3576]
	033 Call 0x1C17CF4
	034 Move X0, 0x84C000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x7F2000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x84C000
	041 Move X0, [X0+3592]
	042 Call 0x1C17CF4
	043 Move X0, 0x84C000
	044 Move X0, [X0+3600]
	045 Call 0x1C17CF4
	046 Move X0, 0x84C000
	047 Move X0, [X0+3608]
	048 Call 0x1C17CF4
	049 Move X0, 0x7F3000
	050 Move X0, [X0+3624]
	051 Call 0x1C17CF4
	052 Move X0, 0x81C000
	053 Move X0, [X0+3896]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1984], W8
	057 Move X8, [X31+24]
	058 Compare X8, 0
	059 JumpIfEqual {325}
	060 Compare X19, 0
	061 JumpIfEqual {325}
	062 Move X10, 0x84C000
	063 Move X8, [X19]
	064 Move X10, [X10+3576]
	065 Move X9, [X31+24]
	066 Move X1, [X10]
	067 Move W28, [X9+24]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X19
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X19
	086 NotImplemented "Instruction BLR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Move [X31+4], W8
	090 Move [X31+16], X0
	091 Compare X0, 0
	092 JumpIfEqual {326}
	093 Move X27, 0x81C000
	094 Move X29, 0x7FC000
	095 Move X27, [X27+3896]
	096 Move X29, [X29+2136]
	097 Move X19, X0
	098 Move [X31+8], X23
	099 Move X8, [X19]
	100 Move X10, 0x7F2000
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move X10, [X10+3608]
	103 Move X1, [X10]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {270}
	126 Move X8, [X19]
	127 Move X10, 0x84C000
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X10, [X10+3584]
	130 Move X1, [X10]
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X19
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X24, X0
	150 Compare X0, 0
	151 JumpIfEqual {318}
	152 Move X8, [X24+24]
	153 Compare X8, 0
	154 JumpIfEqual {319}
	155 Move W23, [X8+24]
	156 Compare X21, 0
	157 JumpIfEqual {167}
	158 Move X8, [X24+32]
	159 Compare X8, 0
	160 JumpIfEqual {167}
	161 Move W8, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CSET not yet implemented."
	164 Compare X20, 0
	165 JumpIfNotEqual {170}
	166 Move W8, W31
	167 Move W19, W31
	168 Compare X20, 0
	169 JumpIfEqual {166}
	170 Move X8, [X24+40]
	171 Compare X8, 0
	172 JumpIfEqual {176}
	173 Move W8, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CSET not yet implemented."
	176 Move X25, [X24+16]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W9, [X31+4]
	179 Move W26, W31
	180 And W22, W8, W9
	181 Compare X21, 0
	182 JumpIfEqual {199}
	183 Compare W19, 0
	184 JumpIfEqual {192}
	185 Move X0, [X24+32]
	186 Compare X0, 0
	187 JumpIfEqual {316}
	188 Move X2, [X27]
	189 Move W1, W26
	190 Call List`1<Int32>.get_Item, X0, X1
	191 Move W2, W0
	192 Move TEMP, 0
	193 Not TEMP
	194 Move W2, TEMP
	195 Move X3, [X29]
	196 Add W1, W28, W26
	197 Move X0, X21
	198 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	199 Compare W22, 0
	200 JumpIfEqual {214}
	201 Move X0, [X24+40]
	202 Compare X0, 0
	203 JumpIfEqual {314}
	204 Move X2, [X27]
	205 Move W1, W26
	206 Call List`1<Int32>.get_Item, X0, X1
	207 Compare X20, 0
	208 JumpIfEqual {312}
	209 Move X3, [X29]
	210 Add W1, W28, W26
	211 Move W2, W0
	212 Move X0, X20
	213 Call Dictionary`2<Int32, Int32>.Add, X0, X1, X2
	214 Add W26, W26, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X24+48], W28
	217 Compare X25, 0
	218 JumpIfEqual {324}
	219 Move X8, [X25+16]
	220 Move X22, [X31+8]
	221 Compare X8, 0
	222 JumpIfEqual {323}
	223 Move X9, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 And X9, X9, 0
	226 Add X10, X8, 32
	227 Move W11, [X10]
	228 Subtract X9, X9, 1
	229 Add W11, W11, W28
	230 Move [X10+4], W11
	231 Move X9, [X24+24]
	232 Compare X9, 0
	233 JumpIfEqual {321}
	234 Move W19, [X9+24]
	235 Move X0, X25
	236 Move X1, X8
	237 Call Face.set_indexesInternal, X0, X1
	238 Compare X22, 0
	239 JumpIfEqual {320}
	240 Move X9, 0x84C000
	241 Move W10, [X22+28]
	242 Move X8, [X22+16]
	243 Move X9, [X9+3600]
	244 Add W10, W10, 1
	245 Move X9, [X9]
	246 Move [X22+28], W10
	247 Compare X8, 0
	248 JumpIfEqual {322}
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Move W11, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add W9, W10, 1
	253 Add X8, X8, X10
	254 Move [X22+24], W9
	255 Move [X8+32], X25
	256 Move X8, [X9+32]
	257 Move X8, [X8+192]
	258 Move X2, [X8+112]
	259 Move X0, X22
	260 Move X1, X25
	261 Call List`1<Object>.AddWithResize, X0, X1
	262 Move X8, 0x84C000
	263 Move X1, [X24+24]
	264 Move X8, [X8+3592]
	265 Add W28, W19, W28
	266 Move X2, [X8]
	267 Move X19, [X31+16]
	268 Move X0, [X31+24]
	269 Call List`1<Object>.AddRange, X0, X1
	270 Move X21, X31
	271 Compare X19, 0
	272 JumpIfEqual {296}
	273 Move X8, [X19]
	274 Move X10, 0x7F2000
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X10, [X10+3584]
	277 Move X1, [X10]
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move X0, X19
	287 Move W2, W31
	288 Call 0x1C5D788
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Add X8, X8, X9
	291 Add X0, X8, 312
	292 Move X8, [X0]
	293 Move X1, [X0+8]
	294 Move X0, X19
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Compare X21, 0
	297 JumpIfNotEqual {327}
	298 Move X20, [X31+112]
	299 Move X19, [X31+120]
	300 Move X22, [X31+96]
	301 Move X21, [X31+104]
	302 Move X24, [X31+80]
	303 Move X23, [X31+88]
	304 Move X26, [X31+64]
	305 Move X25, [X31+72]
	306 Move X28, [X31+48]
	307 Move X27, [X31+56]
	308 Move X29, [X31+32]
	309 Move X30, [X31+40]
	310 Add X31, X31, 128
	311 Return 
	312 Move X19, [X31+16]
	313 Call 0x1C17F20
	314 Move X19, [X31+16]
	315 Call 0x1C17F20
	316 Move X19, [X31+16]
	317 Call 0x1C17F20
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Move X0, X21
	328 Call 0x1C17F18
	329 Move X19, [X31+16]
	330 Move X20, X0
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move X0, X20
	333 Call 0x3EB2AD0
	334 Move X21, [X0]
	335 Call 0x3EB2AE0
	336 Move X21, X31
	337 Move X20, X0
	338 Move X8, [X31+16]
	339 Compare X8, 0
	340 JumpIfEqual {365}
	341 Move X8, [X31+16]
	342 Move X10, 0x7F2000
	343 Move X8, [X8]
	344 NotImplemented "Instruction LDRH not yet implemented."
	345 Move X10, [X10+3584]
	346 Move X1, [X10]
	347 Compare X9, 0
	348 JumpIfEqual {355}
	349 Move X10, [X8+176]
	350 Add X10, X10, 8
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Subtract X9, X9, 1
	354 Add X10, X10, 16
	355 Move X0, [X31+16]
	356 Move W2, W31
	357 Call 0x1C5D788
	358 NotImplemented "Instruction LDRSW not yet implemented."
	359 Add X8, X8, X9
	360 Add X0, X8, 312
	361 Move X8, [X0]
	362 Move X1, [X0+8]
	363 Move X0, [X31+16]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Compare X21, 0
	366 JumpIfNotEqual {369}
	367 Move X0, X20
	368 Call 0x1D2D690
	369 Move X0, X21
	370 Call 0x1C17F18
	371 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03902F84 B.EQ 0x3902F94
	0x03902F88 LDR X9, [X11 + 0x28]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

