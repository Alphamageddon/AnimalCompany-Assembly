Type: UnityEngine.ProBuilder.Normals

Method: System.Void ClearIntArray(System.Int32 count)

Disassembly:
	0x03914068 STR S1, [X22]
	0x0391406C MOV X22, X27
	0x03914070 STR S2, [X26]
	0x03914074 LDR W8, [X23 + 0x18]
	0x03914078 ADD W20, W20, 0x1
	0x0391407C CMP W25, W8
	0x03914080 B.CC 0x3913F1C
	0x03914084 B 0x39140C4
	0x03914088 LDR W8, [X23 + 0x18]
	0x0391408C LDR X26, [X31 + 0x8]
	0x03914090 ADD W25, W25, 0x1
	0x03914094 CMP W25, W8
	0x03914098 B.LT 0x3913D3C
	0x0391409C LDP X20, X19, [X31 + 0x70]
	0x039140A0 LDP X22, X21, [X31 + 0x60]
	0x039140A4 LDP X24, X23, [X31 + 0x50]
	0x039140A8 LDP X26, X25, [X31 + 0x40]
	0x039140AC LDP X28, X27, [X31 + 0x30]
	0x039140B0 LDP X29, X30, [X31 + 0x20]
	0x039140B4 LDR V8, [X31 + 0x10]
	0x039140B8 ADD X31, X31, 0x80
	0x039140BC RET
	0x039140C0 BL 0x1C16F20
	0x039140C4 BL 0x1C16F28
	0x039140C8 LDR X8, [X0 + 0x28]
	0x039140CC CBZ X8, 0x39140D8
	0x039140D0 LDR W0, [X8 + 0x18]
	0x039140D4 RET
	0x039140D8 MOV W0, W31
	0x039140DC RET
	0x039140E0 STP X30, X23, [X31 - 0x30]!
	0x039140E4 STP X22, X21, [X31 + 0x10]
	0x039140E8 STP X20, X19, [X31 + 0x20]
	0x039140EC ADRP X22, 0xACD000
	0x039140F0 ADRP X23, 0x7E1000
	0x039140F4 ADRP X19, 0x839000
	0x039140F8 ADRP X21, 0x7DF000
	0x039140FC ADRP X20, 0x7E0000
	0x03914100 LDRB W8, [X22 + 0x828]
	0x03914104 LDR X23, [X23 + 0x9B0]
	0x03914108 LDR X19, [X19 + 0xE78]
	0x0391410C LDR X21, [X21 + 0x638]
	0x03914110 LDR X20, [X20 + 0xE58]
	0x03914114 TBNZ X8, 0x0, 0x3914150
	0x03914118 ADRP X0, 0x7E0000
	0x0391411C LDR X0, [X0 + 0xE58]
	0x03914120 BL 0x1C16CF4
	0x03914124 ADRP X0, 0x839000
	0x03914128 LDR X0, [X0 + 0xE78]
	0x0391412C BL 0x1C16CF4
	0x03914130 ADRP X0, 0x7DF000
	0x03914134 LDR X0, [X0 + 0x638]
	0x03914138 BL 0x1C16CF4
	0x0391413C ADRP X0, 0x7E1000
	0x03914140 LDR X0, [X0 + 0x9B0]
	0x03914144 BL 0x1C16CF4
	0x03914148 MOVZ W8, 0x1
	0x0391414C STRB W8, [X22 + 0x828]
	0x03914150 LDR X0, [X23]
	0x03914154 MOVZ W1, 0x18
	0x03914158 BL 0x1C16D6C
	0x0391415C LDR X8, [X19]
	0x03914160 MOVZ W1, 0x18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xACE000
	006 Move X20, 0x83A000
	007 Move W8, [X21+2084]
	008 Move X20, [X20+3704]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x809000
	015 Move X0, [X0+3792]
	016 Call 0x1C17CF4
	017 Move X0, 0x83A000
	018 Move X0, [X0+3704]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2084], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X9, [X8+16]
	030 Compare X9, 0
	031 JumpIfEqual {70}
	032 Move W9, [X9+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Call 0x1C17DFC
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move X9, 0x809000
	041 Move X9, [X9+3792]
	042 Add X0, X8, 16
	043 Move W1, W19
	044 Move X2, [X9]
	045 Call Array.Resize, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X20]
	048 Move X21, X31
	049 Move W19, W19
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X8, [X0+184]
	056 Move X8, [X8+16]
	057 Compare X8, 0
	058 JumpIfEqual {70}
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X21
	062 Add X21, X21, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X8+32], W31
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: System.Void CalculateTangents(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03914164 LDR X8, [X8 + 0xB8]
	0x03914168 STR X0, [X8]
	0x0391416C LDR X0, [X21]
	0x03914170 BL 0x1C16D6C
	0x03914174 LDR X8, [X19]
	0x03914178 MOVZ W1, 0xFFFF
	0x0391417C LDR X8, [X8 + 0xB8]
	0x03914180 STR X0, [X8 + 0x8]
	0x03914184 LDR X0, [X20]
	0x03914188 BL 0x1C16D6C
	0x0391418C LDR X8, [X19]
	0x03914190 LDP X20, X19, [X31 + 0x20]
	0x03914194 LDP X22, X21, [X31 + 0x10]
	0x03914198 LDR X8, [X8 + 0xB8]
	0x0391419C STR X0, [X8 + 0x10]
	0x039141A0 LDP X30, X23, [X31], #0x30
	0x039141A4 RET
	0x039141A8 STR X30, [X31 - 0x30]!
	0x039141AC STP X22, X21, [X31 + 0x10]
	0x039141B0 STP X20, X19, [X31 + 0x20]
	0x039141B4 ADRP X22, 0xACD000
	0x039141B8 ADRP X21, 0x83A000
	0x039141BC ADRP X20, 0x83A000
	0x039141C0 LDRB W8, [X22 + 0x829]
	0x039141C4 LDR X21, [X21 + 0x230]
	0x039141C8 LDR X20, [X20 + 0x238]
	0x039141CC MOV X19, X0
	0x039141D0 TBNZ X8, 0x0, 0x39141F4
	0x039141D4 ADRP X0, 0x83A000
	0x039141D8 LDR X0, [X0 + 0x238]
	0x039141DC BL 0x1C16CF4
	0x039141E0 ADRP X0, 0x83A000
	0x039141E4 LDR X0, [X0 + 0x230]
	0x039141E8 BL 0x1C16CF4
	0x039141EC MOVZ W8, 0x1
	0x039141F0 STRB W8, [X22 + 0x829]
	0x039141F4 LDR X0, [X21]
	0x039141F8 LDR X19, [X19 + 0x28]
	0x039141FC BL 0x1C16F10
	0x03914200 LDR X2, [X20]
	0x03914204 MOV X1, X19
	0x03914208 MOV X20, X0
	0x0391420C BL 0x257D040
	0x03914210 MOV X0, X20
	0x03914214 LDP X20, X19, [X31 + 0x20]
	0x03914218 LDP X22, X21, [X31 + 0x10]
	0x0391421C LDR X30, [X31], #0x30
	0x03914220 RET
	0x03914224 STR X30, [X31 - 0x30]!
	0x03914228 STP X22, X21, [X31 + 0x10]
	0x0391422C STP X20, X19, [X31 + 0x20]
	0x03914230 ADRP X21, 0xACD000
	0x03914234 ADRP X22, 0x83A000
	0x03914238 LDRB W8, [X21 + 0x82A]
	0x0391423C LDR X22, [X22 + 0x240]
	0x03914240 MOV X20, X1
	0x03914244 MOV X19, X0
	0x03914248 TBNZ X8, 0x0, 0x3914260
	0x0391424C ADRP X0, 0x83A000
	0x03914250 LDR X0, [X0 + 0x240]
	0x03914254 BL 0x1C16CF4
	0x03914258 MOVZ W8, 0x1
	0x0391425C STRB W8, [X21 + 0x82A]
	0x03914260 LDR X1, [X22]
	0x03914264 MOV X0, X20
	0x03914268 BL 0x21D7BE4
	0x0391426C STR X0, [X19 + 0x28]
	0x03914270 LDP X20, X19, [X31 + 0x20]
	0x03914274 LDP X22, X21, [X31 + 0x10]
	0x03914278 LDR X30, [X31], #0x30
	0x0391427C RET
	0x03914280 LDR V0, [X0 + 0x30]
	0x03914284 RET
	0x03914288 STR S0, [X0 + 0x30]
	0x0391428C RET
	0x03914290 LDR W0, [X0 + 0x34]
	0x03914294 RET
	0x03914298 STR W1, [X0 + 0x34]
	0x0391429C RET
	0x039142A0 LDRB W0, [X0 + 0x38]
	0x039142A4 RET
	0x039142A8 AND W8, W1, 0x1
	0x039142AC STRB W8, [X0 + 0x38]
	0x039142B0 RET
	0x039142B4 STP X30, X21, [X31 - 0x20]!
	0x039142B8 STP X20, X19, [X31 + 0x10]
	0x039142BC ADRP X21, 0xACD000
	0x039142C0 ADRP X20, 0x7DF000
	0x039142C4 LDRB W8, [X21 + 0x82B]
	0x039142C8 LDR X20, [X20 + 0x598]
	0x039142CC MOV X19, X0
	0x039142D0 TBNZ X8, 0x0, 0x39142F4
	0x039142D4 ADRP X0, 0x839000
	0x039142D8 LDR X0, [X0 + 0xA60]
	0x039142DC BL 0x1C16CF4
	0x039142E0 ADRP X0, 0x7DF000
	0x039142E4 LDR X0, [X0 + 0x598]
	0x039142E8 BL 0x1C16CF4
	0x039142EC MOVZ W8, 0x1
	0x039142F0 STRB W8, [X21 + 0x82B]
	0x039142F4 LDR X0, [X20]
	0x039142F8 LDR X20, [X19 + 0x20]
	0x039142FC LDR W8, [X0 + 0xE0]
	0x03914300 CBNZ W8, 0x3914308
	0x03914304 BL 0x1C16DFC
	0x03914308 MOV X0, X20
	0x0391430C MOV X1, X31
	0x03914310 MOV X2, X31
	0x03914314 BL 0x3C3883C
	0x03914318 TBZ X0, 0x0, 0x3914338
	0x0391431C ADRP X8, 0x839000
	0x03914320 LDR X8, [X8 + 0xA60]
	0x03914324 MOV X0, X19
	0x03914328 LDR X1, [X8]
	0x0391432C BL 0x21A3894
	0x03914330 STR X0, [X19 + 0x20]
	0x03914334 B 0x391433C
	0x03914338 LDR X0, [X19 + 0x20]
	0x0391433C LDP X20, X19, [X31 + 0x10]
	0x03914340 LDP X30, X21, [X31], #0x20
	0x03914344 RET
	0x03914348 STR X1, [X0 + 0x20]
	0x0391434C RET
	0x03914350 LDRB W0, [X0 + 0x39]
	0x03914354 RET
	0x03914358 STR X30, [X31 - 0x30]!
	0x0391435C STP X22, X21, [X31 + 0x10]
	0x03914360 STP X20, X19, [X31 + 0x20]
	0x03914364 ADRP X21, 0xACD000
	0x03914368 ADRP X22, 0x7E3000
	0x0391436C ADRP X20, 0x80B000
	0x03914370 LDRB W8, [X21 + 0x82C]
	0x03914374 LDR X22, [X22 + 0x3C0]
	0x03914378 LDR X20, [X20 + 0x5B8]
	0x0391437C MOV X19, X0
	0x03914380 TBNZ X8, 0x0, 0x39143A4
	0x03914384 ADRP X0, 0x80B000
	0x03914388 LDR X0, [X0 + 0x5B8]
	0x0391438C BL 0x1C16CF4
	0x03914390 ADRP X0, 0x7E3000
	0x03914394 LDR X0, [X0 + 0x3C0]
	0x03914398 BL 0x1C16CF4
	0x0391439C MOVZ W8, 0x1
	0x039143A0 STRB W8, [X21 + 0x82C]
	0x039143A4 LDR X0, [X22]
	0x039143A8 BL 0x1C16F10
	0x039143AC LDR X1, [X20]
	0x039143B0 MOV X20, X0
	0x039143B4 BL 0x30CB97C
	0x039143B8 MOVZ W8, 0x1
	0x039143BC STR X20, [X19 + 0x28]
	0x039143C0 STRB W8, [X19 + 0x39]
	0x039143C4 MOV X0, X19
	0x039143C8 LDP X20, X19, [X31 + 0x20]
	0x039143CC LDP X22, X21, [X31 + 0x10]
	0x039143D0 MOV X1, X31
	0x039143D4 LDR X30, [X31], #0x30
	0x039143D8 B 0x3C36C30
	0x039143DC STP X30, X21, [X31 - 0x20]!
	0x039143E0 STP X20, X19, [X31 + 0x10]
	0x039143E4 ADRP X20, 0xACD000
	0x039143E8 LDRB W8, [X20 + 0x82D]
	0x039143EC MOV X19, X0
	0x039143F0 TBNZ X8, 0x0, 0x39144D4
	0x039143F4 ADRP X0, 0x80F000
	0x039143F8 LDR X0, [X0 + 0xAF8]
	0x039143FC BL 0x1C16CF4
	0x03914400 ADRP X0, 0x83A000
	0x03914404 LDR X0, [X0 + 0x248]
	0x03914408 BL 0x1C16CF4
	0x0391440C ADRP X0, 0x83A000
	0x03914410 LDR X0, [X0 + 0x250]
	0x03914414 BL 0x1C16CF4
	0x03914418 ADRP X0, 0x83A000
	0x0391441C LDR X0, [X0 + 0x258]
	0x03914420 BL 0x1C16CF4
	0x03914424 ADRP X0, 0x83A000
	0x03914428 LDR X0, [X0 + 0x260]
	0x0391442C BL 0x1C16CF4
	0x03914430 ADRP X0, 0x83A000
	0x03914434 LDR X0, [X0 + 0x268]
	0x03914438 BL 0x1C16CF4
	0x0391443C ADRP X0, 0x83A000
	0x03914440 LDR X0, [X0 + 0x270]
	0x03914444 BL 0x1C16CF4
	0x03914448 ADRP X0, 0x83A000
	0x0391444C LDR X0, [X0 + 0x278]
	0x03914450 BL 0x1C16CF4
	0x03914454 ADRP X0, 0x83A000
	0x03914458 LDR X0, [X0 + 0x280]
	0x0391445C BL 0x1C16CF4
	0x03914460 ADRP X0, 0x83A000
	0x03914464 LDR X0, [X0 + 0x288]
	0x03914468 BL 0x1C16CF4
	0x0391446C ADRP X0, 0x83A000
	0x03914470 LDR X0, [X0 + 0x290]
	0x03914474 BL 0x1C16CF4
	0x03914478 ADRP X0, 0x83A000
	0x0391447C LDR X0, [X0 + 0x298]
	0x03914480 BL 0x1C16CF4
	0x03914484 ADRP X0, 0x83A000
	0x03914488 LDR X0, [X0 + 0x2A0]
	0x0391448C BL 0x1C16CF4
	0x03914490 ADRP X0, 0x839000
	0x03914494 LDR X0, [X0 + 0xBE8]
	0x03914498 BL 0x1C16CF4
	0x0391449C ADRP X0, 0x83A000
	0x039144A0 LDR X0, [X0 + 0x2A8]
	0x039144A4 BL 0x1C16CF4
	0x039144A8 ADRP X0, 0x83A000
	0x039144AC LDR X0, [X0 + 0x2B0]
	0x039144B0 BL 0x1C16CF4
	0x039144B4 ADRP X0, 0x83A000
	0x039144B8 LDR X0, [X0 + 0x2B8]
	0x039144BC BL 0x1C16CF4
	0x039144C0 ADRP X0, 0x81D000
	0x039144C4 LDR X0, [X0 + 0x308]
	0x039144C8 BL 0x1C16CF4
	0x039144CC MOVZ W8, 0x1
	0x039144D0 STRB W8, [X20 + 0x82D]
	0x039144D4 LDR X0, [X19 + 0x18]
	0x039144D8 CBZ X0, 0x39146EC
	0x039144DC ADRP X8, 0x83A000
	0x039144E0 LDR X8, [X8 + 0x260]
	0x039144E4 ADRP X20, 0x81D000
	0x039144E8 LDR X1, [X8]
	0x039144EC LDR X20, [X20 + 0x308]
	0x039144F0 BL 0x2A89534
	0x039144F4 LDR X1, [X20]
	0x039144F8 BL 0x21D79F4
	0x039144FC LDR X8, [X19 + 0x20]
	0x03914500 STR X0, [X19 + 0x48]
	0x03914504 CBZ X8, 0x39146EC
	0x03914508 ADRP X9, 0x83A000
	0x0391450C LDR X9, [X9 + 0x248]
	0x03914510 MOV X0, X8
	0x03914514 LDR X1, [X9]
	0x03914518 BL 0x2A9ED9C
	0x0391451C LDR X1, [X20]
	0x03914520 BL 0x21D79F4
	0x03914524 LDR X8, [X19 + 0x28]
	0x03914528 STR X0, [X19 + 0x50]
	0x0391452C CBZ X8, 0x39146EC
	0x03914530 ADRP X9, 0x83A000
	0x03914534 LDR X9, [X9 + 0x258]
	0x03914538 MOV X0, X8
	0x0391453C LDR X1, [X9]
	0x03914540 BL 0x2AB4888
	0x03914544 LDR X1, [X20]
	0x03914548 BL 0x21D79F4
	0x0391454C LDR X8, [X19 + 0x30]
	0x03914550 STR X0, [X19 + 0x58]
	0x03914554 CBZ X8, 0x39146EC
	0x03914558 ADRP X9, 0x80F000
	0x0391455C LDR X9, [X9 + 0xAF8]
	0x03914560 MOV X0, X8
	0x03914564 LDR X1, [X9]
	0x03914568 BL 0x2AA4E98
	0x0391456C LDR X1, [X20]
	0x03914570 BL 0x21D79F4
	0x03914574 LDR X8, [X19 + 0x38]
	0x03914578 STR X0, [X19 + 0x60]
	0x0391457C CBZ X8, 0x39146EC
	0x03914580 ADRP X9, 0x83A000
	0x03914584 LDR X9, [X9 + 0x268]
	0x03914588 MOV X0, X8
	0x0391458C LDR X1, [X9]
	0x03914590 BL 0x2A95C0C
	0x03914594 LDR X1, [X20]
	0x03914598 BL 0x21D79F4
	0x0391459C LDR X8, [X19 + 0x40]
	0x039145A0 STR X0, [X19 + 0x68]
	0x039145A4 CBZ X8, 0x39146EC
	0x039145A8 ADRP X9, 0x83A000
	0x039145AC LDR X9, [X9 + 0x250]
	0x039145B0 MOV X0, X8
	0x039145B4 LDR X1, [X9]
	0x039145B8 BL 0x2AA4E98
	0x039145BC LDR X1, [X20]
	0x039145C0 BL 0x21D79F4
	0x039145C4 LDR X8, [X19 + 0x18]
	0x039145C8 STR X0, [X19 + 0x70]
	0x039145CC CBZ X8, 0x39146EC
	0x039145D0 ADRP X9, 0x83A000
	0x039145D4 LDR X9, [X9 + 0x278]
	0x039145D8 ADRP X21, 0x83A000
	0x039145DC MOV X0, X8
	0x039145E0 LDR X1, [X9]
	0x039145E4 LDR X21, [X21 + 0x2A0]
	0x039145E8 BL 0x2A895F4
	0x039145EC LDR X1, [X21]
	0x039145F0 BL 0x21D7614
	0x039145F4 LDR X8, [X19 + 0x20]
	0x039145F8 STR X0, [X19 + 0x78]
	0x039145FC CBZ X8, 0x39146EC
	0x03914600 ADRP X9, 0x83A000
	0x03914604 LDR X9, [X9 + 0x290]
	0x03914608 ADRP X21, 0x83A000
	0x0391460C MOV X0, X8
	0x03914610 LDR X1, [X9]
	0x03914614 LDR X21, [X21 + 0x2A8]
	0x03914618 BL 0x2A9EE5C
	0x0391461C LDR X1, [X21]
	0x03914620 BL 0x21D7880
	0x03914624 LDR X8, [X19 + 0x28]
	0x03914628 STR X0, [X19 + 0x80]
	0x0391462C CBZ X8, 0x39146EC
	0x03914630 ADRP X9, 0x83A000
	0x03914634 LDR X9, [X9 + 0x280]
	0x03914638 ADRP X21, 0x83A000
	0x0391463C MOV X0, X8
	0x03914640 LDR X1, [X9]
	0x03914644 LDR X21, [X21 + 0x2B8]
	0x03914648 BL 0x2AB4948
	0x0391464C LDR X1, [X21]
	0x03914650 BL 0x21D7AEC
	0x03914654 LDR X8, [X19 + 0x30]
	0x03914658 STR X0, [X19 + 0x88]
	0x0391465C CBZ X8, 0x39146EC
	0x03914660 ADRP X9, 0x83A000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+64], X28
	006 Move [X31+72], X27
	007 Move [X31+80], X26
	008 Move [X31+88], X25
	009 Move [X31+96], X24
	010 Move [X31+104], X23
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move X19, 0xACE000
	016 Move W8, [X19+2085]
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x83B000
	023 Move X0, [X0+536]
	024 Call 0x1C17CF4
	025 Move X0, 0x7E2000
	026 Move X0, [X0+2480]
	027 Call 0x1C17CF4
	028 Move X0, 0x83B000
	029 Move X0, [X0+72]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2085], W8
	033 Move [X31+24], W31
	034 Move [X31+16], X31
	035 Move [X31+8], W31
	036 Move [X31], X31
	037 Compare X23, 0
	038 JumpIfEqual {339}
	039 Move X8, [X23+88]
	040 Compare X8, 0
	041 JumpIfEqual {43}
	042 Move W22, [X8+24]
	043 Move W22, W31
	044 Move W1, 128
	045 Move X0, X23
	046 Call ProBuilderMesh.HasArrays, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {57}
	051 Move X8, 0x83B000
	052 Move X8, [X8+72]
	053 Move W1, W22
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Move [X23+120], X0
	057 Move W1, 1
	058 Move X0, X23
	059 Call ProBuilderMesh.HasArrays, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {323}
	064 Move W1, 2
	065 Move X0, X23
	066 Call ProBuilderMesh.HasArrays, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {323}
	071 Move X0, X23
	072 Call ProBuilderMesh.GetNormals, X0
	073 Move X20, 0x7E2000
	074 Move X24, [X23+88]
	075 Move X25, [X23+96]
	076 Move X20, [X20+2480]
	077 Move X19, X0
	078 Move W1, W22
	079 Move X8, [X20]
	080 Move X0, X8
	081 Call 0x1C17D6C
	082 Move X8, [X20]
	083 Move X20, X0
	084 Move W1, W22
	085 Move X0, X8
	086 Call 0x1C17D6C
	087 Move X8, [X23+40]
	088 Compare X8, 0
	089 JumpIfEqual {339}
	090 Move W11, [X8+24]
	091 Move X23, [X23+120]
	092 Move X21, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W9, W31
	095 Move W10, 12
	096 Move S0, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X11, X8, W9
	099 Move X11, [X11+32]
	100 Compare X11, 0
	101 JumpIfEqual {339}
	102 Move X11, [X11+16]
	103 Compare X11, 0
	104 JumpIfEqual {339}
	105 Move X12, [X11+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Compare W12, 0
	108 JumpIfEqual {338}
	109 Move W15, W12
	110 Move W13, W31
	111 Add W17, W13, 1
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add W14, W13, 2
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare X24, 0
	116 JumpIfEqual {339}
	117 Add X15, X11, W13
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W0, [X24+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X15, X11, W17
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X14, X11, W14
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Compare X25, 0
	128 JumpIfEqual {339}
	129 Move W17, [X25+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare X20, 0
	134 JumpIfEqual {339}
	135 Move W17, [X20+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction MADD not yet implemented."
	138 NotImplemented "Instruction MADD not yet implemented."
	139 Move V1, [X17+32]
	140 Move V2, [X17+40]
	141 NotImplemented "Instruction NOP not yet implemented."
	142 NotImplemented "Instruction MADD not yet implemented."
	143 Move V3, [X0+32]
	144 Move V4, [X0+40]
	145 Add X0, X25, X16
	146 Move V5, [X17+32]
	147 Move V16, [X17+40]
	148 Add X17, X25, 32
	149 Move S17, [X0+32]
	150 Move S18, [X0+36]
	151 Add X0, X17, X15
	152 Add X17, X17, X14
	153 Move S20, [X0]
	154 Move S19, [X0+4]
	155 Move S22, [X17]
	156 Move S23, [X17+4]
	157 Subtract V6, V3, V1
	158 Subtract V7, V5, V1
	159 Subtract S1, S4, S2
	160 Subtract S3, S16, S2
	161 Subtract S5, S20, S17
	162 Subtract S4, S22, S17
	163 Subtract S2, S19, S18
	164 Subtract S16, S23, S18
	165 Multiply S17, S5, S16
	166 Multiply S18, S2, S4
	167 NotImplemented "Instruction MADD not yet implemented."
	168 NotImplemented "Instruction INVALID not yet implemented."
	169 Subtract S17, S17, S18
	170 NotImplemented "Instruction INVALID not yet implemented."
	171 Move V21, [X0+32]
	172 Subtract V18, V19, V18
	173 Move V19, [X0+40]
	174 Multiply S16, S1, S16
	175 Multiply S2, S3, S2
	176 Subtract S16, S16, S2
	177 NotImplemented "Instruction FDIV not yet implemented."
	178 NotImplemented "Instruction INVALID not yet implemented."
	179 Multiply S16, S16, S2
	180 Add V18, V17, V21
	181 Add S19, S16, S19
	182 Move [X0+32], D18
	183 Move [X0+40], S19
	184 Move W17, [X20+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction MADD not yet implemented."
	187 Move V18, [X17+32]
	188 Move V19, [X17+40]
	189 Add V18, V17, V18
	190 Add S19, S16, S19
	191 Move [X17+32], D18
	192 Move [X17+40], S19
	193 Move W17, [X20+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 NotImplemented "Instruction MADD not yet implemented."
	196 Move V18, [X17+32]
	197 Move V19, [X17+40]
	198 Add V17, V17, V18
	199 Add S16, S16, S19
	200 Move [X17+32], D17
	201 Move [X17+40], S16
	202 Compare X21, 0
	203 JumpIfEqual {339}
	204 Move W17, [X21+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction INVALID not yet implemented."
	207 NotImplemented "Instruction INVALID not yet implemented."
	208 NotImplemented "Instruction MADD not yet implemented."
	209 Multiply S3, S3, S5
	210 Multiply S1, S1, S4
	211 Subtract V4, V7, V6
	212 Move V5, [X16+32]
	213 Move V6, [X16+40]
	214 Subtract S3, S3, S1
	215 NotImplemented "Instruction INVALID not yet implemented."
	216 Multiply S2, S3, S2
	217 Add V3, V1, V5
	218 Add S4, S2, S6
	219 Move [X16+32], D3
	220 Move [X16+40], S4
	221 Move W16, [X21+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction MADD not yet implemented."
	224 Move V3, [X15+32]
	225 Move V4, [X15+40]
	226 Add V3, V1, V3
	227 Add S4, S2, S4
	228 Move [X15+32], D3
	229 Move [X15+40], S4
	230 Move W15, [X21+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 NotImplemented "Instruction MADD not yet implemented."
	233 Move V3, [X14+32]
	234 Move V4, [X14+40]
	235 Add W13, W13, 3
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add V1, V1, V3
	238 Add S2, S2, S4
	239 Move [X14+32], D1
	240 Move [X14+40], S2
	241 Move W15, [X11+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move W11, [X8+24]
	244 Add W9, W9, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Compare X19, 0
	248 JumpIfEqual {339}
	249 Move X24, X31
	250 Move X22, W22
	251 Add X25, X23, 44
	252 Add X26, X19, 40
	253 Add X27, X21, 40
	254 Add X28, X20, 40
	255 Move S8, 1
	256 Move S9, -1
	257 Move W8, [X19+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 Move V1, [X26]
	261 Move [X31+16], D0
	262 Move [X31+24], S1
	263 Compare X20, 0
	264 JumpIfEqual {339}
	265 Move W8, [X20+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move S0, [X28-8]
	268 Move S1, [X28-4]
	269 Move V2, [X28]
	270 Move X0, X31
	271 Call Math.EnsureUnitVector, X0
	272 Add X0, X31, 16
	273 Add X1, X31, 0
	274 Move X2, X31
	275 Move [X31], S0
	276 Move [X31+8], S1
	277 Move [X31+8], S2
	278 Call Vector3.OrthoNormalize, X0, X1
	279 Compare X23, 0
	280 JumpIfEqual {339}
	281 Move W8, [X23+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move V0, [X31]
	284 Move [X25-12], S0
	285 Move V0, [X31+4]
	286 Move [X25-8], S0
	287 Move V0, [X31+8]
	288 Move [X25-4], S0
	289 Compare X21, 0
	290 JumpIfEqual {339}
	291 Move W8, [X21+24]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move S0, [X31+20]
	294 Move S1, [X31+24]
	295 Move S3, [X31+4]
	296 Move S2, [X31+8]
	297 Move V4, [X31]
	298 Move V5, [X31+16]
	299 Add X24, X24, 1
	300 Multiply S6, S0, S2
	301 Multiply S7, S1, S3
	302 Multiply S1, S1, S4
	303 Multiply S2, S5, S2
	304 Multiply S3, S5, S3
	305 Multiply S0, S0, S4
	306 Move S4, [X27-8]
	307 Move S5, [X27-4]
	308 Subtract S6, S6, S7
	309 Move V7, [X27+12]
	310 Subtract S1, S1, S2
	311 Subtract S0, S3, S0
	312 Multiply S2, S6, S4
	313 Multiply S1, S1, S5
	314 Multiply S0, S0, S7
	315 Add S1, S2, S1
	316 Add S0, S0, S1
	317 NotImplemented "Instruction FCMP not yet implemented."
	318 NotImplemented "Instruction FCSEL not yet implemented."
	319 Add X26, X26, 12
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move [X25+16], S0
	322 Add X28, X28, 12
	323 Move X20, [X31+128]
	324 Move X19, [X31+136]
	325 Move X22, [X31+112]
	326 Move X21, [X31+120]
	327 Move X24, [X31+96]
	328 Move X23, [X31+104]
	329 Move X26, [X31+80]
	330 Move X25, [X31+88]
	331 Move X28, [X31+64]
	332 Move X27, [X31+72]
	333 Move X30, [X31+48]
	334 Move D9, [X31+32]
	335 Move D8, [X31+40]
	336 Add X31, X31, 144
	337 Return 
	338 Call 0x1C17F28
	339 Call 0x1C17F20

Method: System.Void CalculateHardNormals(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03914664 LDR X9, [X9 + 0x270]
	0x03914668 MOV X0, X8
	0x0391466C LDR X1, [X9]
	0x03914670 BL 0x2AA4F58
	0x03914674 LDR X1, [X20]
	0x03914678 BL 0x21D79F4
	0x0391467C LDR X8, [X19 + 0x38]
	0x03914680 STR X0, [X19 + 0x90]
	0x03914684 CBZ X8, 0x39146EC
	0x03914688 ADRP X9, 0x83A000
	0x0391468C LDR X9, [X9 + 0x298]
	0x03914690 ADRP X20, 0x839000
	0x03914694 MOV X0, X8
	0x03914698 LDR X1, [X9]
	0x0391469C LDR X20, [X20 + 0xBE8]
	0x039146A0 BL 0x2A95CCC
	0x039146A4 LDR X1, [X20]
	0x039146A8 BL 0x21D7690
	0x039146AC LDR X8, [X19 + 0x40]
	0x039146B0 STR X0, [X19 + 0x98]
	0x039146B4 CBZ X8, 0x39146EC
	0x039146B8 ADRP X9, 0x83A000
	0x039146BC LDR X9, [X9 + 0x288]
	0x039146C0 ADRP X20, 0x83A000
	0x039146C4 MOV X0, X8
	0x039146C8 LDR X1, [X9]
	0x039146CC LDR X20, [X20 + 0x2B0]
	0x039146D0 BL 0x2AA4F58
	0x039146D4 LDR X1, [X20]
	0x039146D8 BL 0x21D79F4
	0x039146DC STR X0, [X19 + 0xA0]
	0x039146E0 LDP X20, X19, [X31 + 0x10]
	0x039146E4 LDP X30, X21, [X31], #0x20
	0x039146E8 RET
	0x039146EC BL 0x1C16F20
	0x039146F0 STP X29, X30, [X31 - 0x60]!
	0x039146F4 STP X28, X27, [X31 + 0x10]
	0x039146F8 STP X26, X25, [X31 + 0x20]
	0x039146FC STP X24, X23, [X31 + 0x30]
	0x03914700 STP X22, X21, [X31 + 0x40]
	0x03914704 STP X20, X19, [X31 + 0x50]
	0x03914708 ADRP X20, 0xACD000
	0x0391470C LDRB W8, [X20 + 0x82E]
	0x03914710 MOV X19, X0
	0x03914714 TBNZ X8, 0x0, 0x39147BC
	0x03914718 ADRP X0, 0x83A000
	0x0391471C LDR X0, [X0 + 0x2C0]
	0x03914720 BL 0x1C16CF4
	0x03914724 ADRP X0, 0x7E1000
	0x03914728 LDR X0, [X0 + 0xB28]
	0x0391472C BL 0x1C16CF4
	0x03914730 ADRP X0, 0x83A000
	0x03914734 LDR X0, [X0 + 0x2C8]
	0x03914738 BL 0x1C16CF4
	0x0391473C ADRP X0, 0x83A000
	0x03914740 LDR X0, [X0 + 0x2D0]
	0x03914744 BL 0x1C16CF4
	0x03914748 ADRP X0, 0x7E0000
	0x0391474C LDR X0, [X0 + 0x810]
	0x03914750 BL 0x1C16CF4
	0x03914754 ADRP X0, 0x83A000
	0x03914758 LDR X0, [X0 + 0x2D8]
	0x0391475C BL 0x1C16CF4
	0x03914760 ADRP X0, 0x7E0000
	0x03914764 LDR X0, [X0 + 0x1C8]
	0x03914768 BL 0x1C16CF4
	0x0391476C ADRP X0, 0x807000
	0x03914770 LDR X0, [X0 + 0xB58]
	0x03914774 BL 0x1C16CF4
	0x03914778 ADRP X0, 0x839000
	0x0391477C LDR X0, [X0 + 0xF48]
	0x03914780 BL 0x1C16CF4
	0x03914784 ADRP X0, 0x83A000
	0x03914788 LDR X0, [X0 + 0x2E0]
	0x0391478C BL 0x1C16CF4
	0x03914790 ADRP X0, 0x809000
	0x03914794 LDR X0, [X0 + 0xF38]
	0x03914798 BL 0x1C16CF4
	0x0391479C ADRP X0, 0x839000
	0x039147A0 LDR X0, [X0 + 0xC18]
	0x039147A4 BL 0x1C16CF4
	0x039147A8 ADRP X0, 0x83A000
	0x039147AC LDR X0, [X0 + 0x2E8]
	0x039147B0 BL 0x1C16CF4
	0x039147B4 MOVZ W8, 0x1
	0x039147B8 STRB W8, [X20 + 0x82E]
	0x039147BC LDR X0, [X19 + 0x48]
	0x039147C0 CBZ X0, 0x3914A98
	0x039147C4 ADRP X23, 0x807000
	0x039147C8 ADRP X27, 0x83A000
	0x039147CC ADRP X28, 0x83A000
	0x039147D0 ADRP X25, 0x809000
	0x039147D4 ADRP X26, 0x7E1000
	0x039147D8 ADRP X29, 0x83A000
	0x039147DC ADRP X24, 0x83A000
	0x039147E0 LDR X23, [X23 + 0xB58]
	0x039147E4 LDR X27, [X27 + 0x2E0]
	0x039147E8 LDR X28, [X28 + 0x2C8]
	0x039147EC LDR X25, [X25 + 0xF38]
	0x039147F0 LDR X26, [X26 + 0xB28]
	0x039147F4 LDR X29, [X29 + 0x2E8]
	0x039147F8 LDR X24, [X24 + 0x2D0]
	0x039147FC MOV W20, W31
	0x03914800 LDR W8, [X0 + 0x18]
	0x03914804 CMP W20, W8
	0x03914808 B.GE 0x3914860
	0x0391480C LDR X2, [X23]
	0x03914810 LDR X21, [X19 + 0x18]
	0x03914814 MOV W1, W20
	0x03914818 BL 0x301BCCC
	0x0391481C LDR X8, [X19 + 0x78]
	0x03914820 CBZ X8, 0x3914A98
	0x03914824 LDR X2, [X27]
	0x03914828 MOV X22, X0
	0x0391482C MOV X0, X8
	0x03914830 MOV W1, W20
	0x03914834 BL 0x2F620C0
	0x03914838 CBZ X21, 0x3914A98
	0x0391483C LDR X3, [X28]
	0x03914840 AND W2, W0, 0x1
	0x03914844 MOV X0, X21
	0x03914848 MOV X1, X22
	0x0391484C BL 0x2A89740
	0x03914850 LDR X0, [X19 + 0x48]
	0x03914854 ADD W20, W20, 0x1
	0x03914858 CBNZ X0, 0x3914800
	0x0391485C B 0x3914A98
	0x03914860 LDR X0, [X19 + 0x50]
	0x03914864 CBZ X0, 0x3914A98
	0x03914868 MOV W20, W31
	0x0391486C LDR W8, [X0 + 0x18]
	0x03914870 CMP W20, W8
	0x03914874 B.GE 0x39148CC
	0x03914878 LDR X2, [X23]
	0x0391487C LDR X21, [X19 + 0x20]
	0x03914880 MOV W1, W20
	0x03914884 BL 0x301BCCC
	0x03914888 LDR X8, [X19 + 0x80]
	0x0391488C CBZ X8, 0x3914A98
	0x03914890 LDR X2, [X25]
	0x03914894 MOV X22, X0
	0x03914898 MOV X0, X8
	0x0391489C MOV W1, W20
	0x039148A0 BL 0x2FDC41C
	0x039148A4 CBZ X21, 0x3914A98
	0x039148A8 LDR X3, [X26]
	0x039148AC MOV W2, W0
	0x039148B0 MOV X0, X21
	0x039148B4 MOV X1, X22
	0x039148B8 BL 0x2A9EF9C
	0x039148BC LDR X0, [X19 + 0x50]
	0x039148C0 ADD W20, W20, 0x1
	0x039148C4 CBNZ X0, 0x391486C
	0x039148C8 B 0x3914A98
	0x039148CC LDR X0, [X19 + 0x58]
	0x039148D0 CBZ X0, 0x3914A98
	0x039148D4 MOV W20, W31
	0x039148D8 LDR W8, [X0 + 0x18]
	0x039148DC CMP W20, W8
	0x039148E0 B.GE 0x3914934
	0x039148E4 LDR X2, [X23]
	0x039148E8 LDR X21, [X19 + 0x28]
	0x039148EC MOV W1, W20
	0x039148F0 BL 0x301BCCC
	0x039148F4 LDR X8, [X19 + 0x88]
	0x039148F8 CBZ X8, 0x3914A98
	0x039148FC LDR X2, [X29]
	0x03914900 MOV X22, X0
	0x03914904 MOV X0, X8
	0x03914908 MOV W1, W20
	0x0391490C BL 0x305F98C
	0x03914910 CBZ X21, 0x3914A98
	0x03914914 LDR X2, [X24]
	0x03914918 MOV X0, X21
	0x0391491C MOV X1, X22
	0x03914920 BL 0x2AB4A88
	0x03914924 LDR X0, [X19 + 0x58]
	0x03914928 ADD W20, W20, 0x1
	0x0391492C CBNZ X0, 0x39148D8
	0x03914930 B 0x3914A98
	0x03914934 ADRP X24, 0x839000
	0x03914938 ADRP X25, 0x83A000
	0x0391493C ADRP X26, 0x839000
	0x03914940 ADRP X27, 0x83A000
	0x03914944 ADRP X28, 0x7E0000
	0x03914948 LDR X0, [X19 + 0x60]
	0x0391494C LDR X24, [X24 + 0xF48]
	0x03914950 LDR X25, [X25 + 0x2D8]
	0x03914954 LDR X26, [X26 + 0xC18]
	0x03914958 LDR X27, [X27 + 0x2C0]
	0x0391495C LDR X28, [X28 + 0x810]
	0x03914960 CBZ X0, 0x3914A98
	0x03914964 MOV W20, W31
	0x03914968 LDR W8, [X0 + 0x18]
	0x0391496C CMP W20, W8
	0x03914970 B.GE 0x39149C8
	0x03914974 LDR X2, [X23]
	0x03914978 LDR X21, [X19 + 0x30]
	0x0391497C MOV W1, W20
	0x03914980 BL 0x301BCCC
	0x03914984 LDR X8, [X19 + 0x90]
	0x03914988 CBZ X8, 0x3914A98
	0x0391498C LDR X2, [X23]
	0x03914990 MOV X22, X0
	0x03914994 MOV X0, X8
	0x03914998 MOV W1, W20
	0x0391499C BL 0x301BCCC
	0x039149A0 CBZ X21, 0x3914A98
	0x039149A4 LDR X3, [X28]
	0x039149A8 MOV X2, X0
	0x039149AC MOV X0, X21
	0x039149B0 MOV X1, X22
	0x039149B4 BL 0x2AA5098
	0x039149B8 LDR X0, [X19 + 0x60]
	0x039149BC ADD W20, W20, 0x1
	0x039149C0 CBNZ X0, 0x3914968
	0x039149C4 B 0x3914A98
	0x039149C8 LDR X0, [X19 + 0x68]
	0x039149CC CBZ X0, 0x3914A98
	0x039149D0 MOV W20, W31
	0x039149D4 LDR W8, [X0 + 0x18]
	0x039149D8 CMP W20, W8
	0x039149DC B.GE 0x3914A30
	0x039149E0 LDR X2, [X23]
	0x039149E4 LDR X21, [X19 + 0x38]
	0x039149E8 MOV W1, W20
	0x039149EC BL 0x301BCCC
	0x039149F0 LDR X8, [X19 + 0x98]
	0x039149F4 CBZ X8, 0x3914A98
	0x039149F8 LDR X2, [X26]
	0x039149FC MOV X22, X0
	0x03914A00 MOV X0, X8
	0x03914A04 MOV W1, W20
	0x03914A08 BL 0x2F6D100
	0x03914A0C CBZ X21, 0x3914A98
	0x03914A10 LDR X2, [X27]
	0x03914A14 MOV X0, X21
	0x03914A18 MOV X1, X22
	0x03914A1C BL 0x2A95E1C
	0x03914A20 LDR X0, [X19 + 0x68]
	0x03914A24 ADD W20, W20, 0x1
	0x03914A28 CBNZ X0, 0x39149D4
	0x03914A2C B 0x3914A98
	0x03914A30 LDR X0, [X19 + 0x70]
	0x03914A34 CBZ X0, 0x3914A98
	0x03914A38 MOV W20, W31
	0x03914A3C LDR W8, [X0 + 0x18]
	0x03914A40 CMP W20, W8
	0x03914A44 B.GE 0x3914A9C
	0x03914A48 LDR X2, [X23]
	0x03914A4C LDR X21, [X19 + 0x40]
	0x03914A50 MOV W1, W20
	0x03914A54 BL 0x301BCCC
	0x03914A58 LDR X8, [X19 + 0xA0]
	0x03914A5C CBZ X8, 0x3914A98
	0x03914A60 LDR X2, [X24]
	0x03914A64 MOV X22, X0
	0x03914A68 MOV X0, X8
	0x03914A6C MOV W1, W20
	0x03914A70 BL 0x301BCCC
	0x03914A74 CBZ X21, 0x3914A98
	0x03914A78 LDR X3, [X25]
	0x03914A7C MOV X2, X0
	0x03914A80 MOV X0, X21
	0x03914A84 MOV X1, X22
	0x03914A88 BL 0x2AA5098
	0x03914A8C LDR X0, [X19 + 0x70]
	0x03914A90 ADD W20, W20, 0x1
	0x03914A94 CBNZ X0, 0x3914A3C
	0x03914A98 BL 0x1C16F20
	0x03914A9C LDP X20, X19, [X31 + 0x50]
	0x03914AA0 LDP X22, X21, [X31 + 0x40]
	0x03914AA4 LDP X24, X23, [X31 + 0x30]
	0x03914AA8 LDP X26, X25, [X31 + 0x20]
	0x03914AAC LDP X28, X27, [X31 + 0x10]
	0x03914AB0 LDP X29, X30, [X31], #0x60
	0x03914AB4 RET
	0x03914AB8 STR X30, [X31 - 0x20]!
	0x03914ABC STP X20, X19, [X31 + 0x10]
	0x03914AC0 ADRP X20, 0xACD000
	0x03914AC4 LDRB W8, [X20 + 0x82F]
	0x03914AC8 MOV X19, X0
	0x03914ACC TBNZ X8, 0x0, 0x3914B20
	0x03914AD0 ADRP X0, 0x83A000
	0x03914AD4 LDR X0, [X0 + 0x2F0]
	0x03914AD8 BL 0x1C16CF4
	0x03914ADC ADRP X0, 0x83A000
	0x03914AE0 LDR X0, [X0 + 0x2F8]
	0x03914AE4 BL 0x1C16CF4
	0x03914AE8 ADRP X0, 0x83A000
	0x03914AEC LDR X0, [X0 + 0x300]
	0x03914AF0 BL 0x1C16CF4
	0x03914AF4 ADRP X0, 0x83A000
	0x03914AF8 LDR X0, [X0 + 0x308]
	0x03914AFC BL 0x1C16CF4
	0x03914B00 ADRP X0, 0x831000
	0x03914B04 LDR X0, [X0 + 0x298]
	0x03914B08 BL 0x1C16CF4
	0x03914B0C ADRP X0, 0x822000
	0x03914B10 LDR X0, [X0 + 0xAF8]
	0x03914B14 BL 0x1C16CF4
	0x03914B18 MOVZ W8, 0x1
	0x03914B1C STRB W8, [X20 + 0x82F]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X29
	007 Move [X31+88], X30
	008 Move [X31+96], X28
	009 Move [X31+104], X27
	010 Move [X31+112], X26
	011 Move [X31+120], X25
	012 Move [X31+128], X24
	013 Move [X31+136], X23
	014 Move [X31+144], X22
	015 Move [X31+152], X21
	016 Move [X31+160], X20
	017 Move [X31+168], X19
	018 Move X19, 0xACE000
	019 Move W8, [X19+2086]
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x83A000
	026 Move X0, [X0+3704]
	027 Call 0x1C17CF4
	028 Move X0, 0x7E2000
	029 Move X0, [X0+2480]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2086], W8
	033 Compare X21, 0
	034 JumpIfEqual {319}
	035 Move X8, 0x83A000
	036 Move X24, [X21+88]
	037 Move X8, [X8+3704]
	038 Compare X24, 0
	039 JumpIfEqual {41}
	040 Move W20, [X24+24]
	041 Move W20, W31
	042 Move X0, [X8]
	043 Move X22, [X21+40]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W20
	049 Call Normals.ClearIntArray, X0
	050 Move W1, 64
	051 Move X0, X21
	052 Call ProBuilderMesh.HasArrays, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {58}
	057 Move X19, [X21+128]
	058 Move X8, 0x7E2000
	059 Move X8, [X8+2480]
	060 Move W1, W20
	061 Move X0, [X8]
	062 Call 0x1C17D6C
	063 Move X19, X0
	064 Move [X21+128], X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {319}
	068 Move W9, [X19+24]
	069 Move X8, X31
	070 Move W10, W20
	071 Add X11, X19, 40
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X8, 1
	074 Move [X11-8], X31
	075 Move [X11+12], W31
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X31+20], W20
	078 Compare X22, 0
	079 JumpIfEqual {319}
	080 Move X8, [X22+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X31+32], X8
	083 Move X8, [X31+32]
	084 Compare W8, 0
	085 JumpIfEqual {263}
	086 Move X21, 0x7E0000
	087 Move X21, [X21+1448]
	088 Move X8, -48402432
	089 Move [X31+24], X22
	090 Move X29, 0x83A000
	091 Move V11, [X8+380]
	092 Move X29, [X29+3704]
	093 Move W9, W31
	094 Move W28, 12
	095 Add X8, X22, W9
	096 Move X8, [X8+32]
	097 Compare X8, 0
	098 JumpIfEqual {319}
	099 Move X25, [X8+16]
	100 Move [X31+44], W9
	101 Compare X25, 0
	102 JumpIfEqual {319}
	103 Move W8, [X25+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W20, 2
	106 Subtract W9, W20, 2
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W10, W9, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W26, W10, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Compare X24, 0
	113 JumpIfEqual {319}
	114 Add X8, X25, W9
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move W8, [X24+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract W9, W20, 1
	119 Add X9, X25, W9
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X9, X25, W20
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Add X9, X24, 32
	127 Move S0, [X8+32]
	128 Move S1, [X8+36]
	129 Move V2, [X8+40]
	130 NotImplemented "Instruction NOP not yet implemented."
	131 NotImplemented "Instruction MADD not yet implemented."
	132 NotImplemented "Instruction MADD not yet implemented."
	133 Move S4, [X8+4]
	134 Move S5, [X8+8]
	135 Move V3, [X8]
	136 Move X8, [X9]
	137 Move V6, [X9+8]
	138 Move X0, X31
	139 Move [X31], X8
	140 Move [X31+8], S6
	141 Call Math.Normal, X0, X1, X2
	142 Move X8, 0xAC5000
	143 Move W8, [X8+1925]
	144 Move V8, V0
	145 Move V9, V1
	146 Move V10, V2
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, X21
	150 Call 0x1C17CF4
	151 Move X8, 0xAC5000
	152 Move W9, 1
	153 Move [X8+1925], W9
	154 Move X0, [X21]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Multiply S0, S8, S8
	160 Multiply S1, S9, S9
	161 Add S0, S0, S1
	162 Multiply S1, S10, S10
	163 Add S0, S1, S0
	164 NotImplemented "Instruction FSQRT not yet implemented."
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 NotImplemented "Instruction FDIV not yet implemented."
	169 Move X8, 0xAC5000
	170 Move W8, [X8+1923]
	171 Compare W8, 0
	172 JumpIfNotEqual {179}
	173 Move X0, 0x7E0000
	174 Move X0, [X0+1440]
	175 Call 0x1C17CF4
	176 Move W8, 1
	177 Move X9, 0xAC5000
	178 Move [X9+1923], W8
	179 Move X8, 0x7E0000
	180 Move X8, [X8+1440]
	181 Move X8, [X8]
	182 Move X8, [X8+184]
	183 Move S2, [X8]
	184 Move S1, [X8+4]
	185 Move V0, [X8+8]
	186 Compare X19, 0
	187 JumpIfEqual {319}
	188 Move W8, [X19+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction MADD not yet implemented."
	191 Move V3, [X9+32]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add S3, S2, S3
	194 Move [X9+32], S3
	195 NotImplemented "Instruction MADD not yet implemented."
	196 Move V3, [X9+32]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add S3, S2, S3
	199 Move [X9+32], S3
	200 Add X8, X19, 32
	201 NotImplemented "Instruction MADD not yet implemented."
	202 Move V3, [X9]
	203 NotImplemented "Instruction NOP not yet implemented."
	204 NotImplemented "Instruction MADD not yet implemented."
	205 NotImplemented "Instruction MADD not yet implemented."
	206 Add S4, S2, S3
	207 Move V2, [X10+4]
	208 Add S2, S1, S2
	209 Move [X10+4], S2
	210 Move V2, [X8+4]
	211 Add S2, S1, S2
	212 Move [X8+4], S2
	213 Move V2, [X9+4]
	214 Add S1, S1, S2
	215 Move [X9], S4
	216 Move [X9+8], S1
	217 Move V1, [X10+8]
	218 Add S1, S0, S1
	219 Move [X10+8], S1
	220 Move V1, [X8+8]
	221 Add S1, S0, S1
	222 Move [X8+8], S1
	223 Move V1, [X9+8]
	224 Add S0, S0, S1
	225 Move [X9+8], S0
	226 Move X0, [X29]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X29]
	232 Move X8, [X0+184]
	233 Move X8, [X8+16]
	234 Compare X8, 0
	235 JumpIfEqual {319}
	236 Move W9, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add X10, X8, X22
	239 Move W11, [X10+32]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add W11, W11, 1
	242 Move [X10+32], W11
	243 Add X10, X8, X27
	244 Move W11, [X10+32]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add W11, W11, 1
	247 Move [X10+32], W11
	248 Add X8, X8, X23
	249 Move W9, [X8+32]
	250 Add W20, W20, 3
	251 Add W9, W9, 1
	252 Move [X8+32], W9
	253 Move W8, [X25+24]
	254 Add W9, W26, 1
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W9, [X31+44]
	257 Move X22, [X31+24]
	258 Move X8, [X31+32]
	259 Add W9, W9, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move W8, [X22+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Call 0x1C17F28
	264 Move W9, [X31+20]
	265 Move X23, 0x83A000
	266 Move X23, [X23+3704]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Compare X19, 0
	269 JumpIfEqual {319}
	270 Move W8, [X19+24]
	271 Move X20, X31
	272 Move W21, W9
	273 Add X22, X19, 36
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X0, [X23]
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {282}
	280 Call 0x1C17DFC
	281 Move X0, [X23]
	282 Move X8, [X0+184]
	283 Move X9, [X8+16]
	284 Compare X9, 0
	285 JumpIfEqual {319}
	286 Move W8, [X9+24]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move W8, [X19+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X9, X9, X20
	291 Move V0, [X9+32]
	292 Move V1, [X22]
	293 Add X20, X20, 1
	294 NotImplemented "Instruction CMP not yet implemented."
	295 NotImplemented "Instruction SCVTF not yet implemented."
	296 NotImplemented "Instruction FDIV not yet implemented."
	297 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	298 NotImplemented "Instruction INVALID not yet implemented."
	299 Move [X22-4], S2
	300 Move [X22+12], D0
	301 Move X20, [X31+160]
	302 Move X19, [X31+168]
	303 Move X22, [X31+144]
	304 Move X21, [X31+152]
	305 Move X24, [X31+128]
	306 Move X23, [X31+136]
	307 Move X26, [X31+112]
	308 Move X25, [X31+120]
	309 Move X28, [X31+96]
	310 Move X27, [X31+104]
	311 Move X29, [X31+80]
	312 Move X30, [X31+88]
	313 Move D9, [X31+64]
	314 Move D8, [X31+72]
	315 Move D11, [X31+48]
	316 Move D10, [X31+56]
	317 Add X31, X31, 176
	318 Return 
	319 Call 0x1C17F20

Method: System.Void CalculateNormals(UnityEngine.ProBuilder.ProBuilderMesh mesh)

Disassembly:
	0x03914B20 LDR X0, [X19 + 0x18]
	0x03914B24 CBZ X0, 0x3914BB8
	0x03914B28 ADRP X8, 0x83A000
	0x03914B2C LDR X8, [X8 + 0x2F0]
	0x03914B30 LDR X1, [X8]
	0x03914B34 BL 0x2A898DC
	0x03914B38 LDR X0, [X19 + 0x20]
	0x03914B3C CBZ X0, 0x3914BB8
	0x03914B40 ADRP X8, 0x831000
	0x03914B44 LDR X8, [X8 + 0x298]
	0x03914B48 LDR X1, [X8]
	0x03914B4C BL 0x2A9F124
	0x03914B50 LDR X0, [X19 + 0x28]
	0x03914B54 CBZ X0, 0x3914BB8
	0x03914B58 ADRP X8, 0x83A000
	0x03914B5C LDR X8, [X8 + 0x300]
	0x03914B60 LDR X1, [X8]
	0x03914B64 BL 0x2AB4C18
	0x03914B68 LDR X0, [X19 + 0x30]
	0x03914B6C CBZ X0, 0x3914BB8
	0x03914B70 ADRP X8, 0x822000
	0x03914B74 LDR X8, [X8 + 0xAF8]
	0x03914B78 LDR X1, [X8]
	0x03914B7C BL 0x2AA5220
	0x03914B80 LDR X0, [X19 + 0x38]
	0x03914B84 CBZ X0, 0x3914BB8
	0x03914B88 ADRP X8, 0x83A000
	0x03914B8C LDR X8, [X8 + 0x2F8]
	0x03914B90 LDR X1, [X8]
	0x03914B94 BL 0x2A95FC8
	0x03914B98 LDR X0, [X19 + 0x40]
	0x03914B9C CBZ X0, 0x3914BB8
	0x03914BA0 ADRP X8, 0x83A000
	0x03914BA4 LDR X8, [X8 + 0x308]
	0x03914BA8 LDP X20, X19, [X31 + 0x10]
	0x03914BAC LDR X1, [X8]
	0x03914BB0 LDR X30, [X31], #0x20
	0x03914BB4 B 0x2AA5220
	0x03914BB8 BL 0x1C16F20
	0x03914BBC STP X30, X21, [X31 - 0x20]!
	0x03914BC0 STP X20, X19, [X31 + 0x10]
	0x03914BC4 ADRP X21, 0xACD000
	0x03914BC8 LDRB W8, [X21 + 0x830]
	0x03914BCC MOV X19, X1
	0x03914BD0 MOV X20, X0
	0x03914BD4 TBNZ X8, 0x0, 0x3914C28
	0x03914BD8 ADRP X0, 0x7E4000
	0x03914BDC LDR X0, [X0 + 0xB8]
	0x03914BE0 BL 0x1C16CF4
	0x03914BE4 ADRP X0, 0x808000
	0x03914BE8 LDR X0, [X0 + 0x258]
	0x03914BEC BL 0x1C16CF4
	0x03914BF0 ADRP X0, 0x808000
	0x03914BF4 LDR X0, [X0 + 0x260]
	0x03914BF8 BL 0x1C16CF4
	0x03914BFC ADRP X0, 0x808000
	0x03914C00 LDR X0, [X0 + 0x268]
	0x03914C04 BL 0x1C16CF4
	0x03914C08 ADRP X0, 0x7E4000
	0x03914C0C LDR X0, [X0 + 0x798]
	0x03914C10 BL 0x1C16CF4
	0x03914C14 ADRP X0, 0x808000
	0x03914C18 LDR X0, [X0 + 0x270]
	0x03914C1C BL 0x1C16CF4
	0x03914C20 MOVZ W8, 0x1
	0x03914C24 STRB W8, [X21 + 0x830]
	0x03914C28 LDR X0, [X20 + 0x18]
	0x03914C2C CBZ X0, 0x3914CFC
	0x03914C30 ADRP X8, 0x808000
	0x03914C34 LDR X8, [X8 + 0x270]
	0x03914C38 MOV X1, X19
	0x03914C3C LDR X2, [X8]
	0x03914C40 BL 0x2A89948
	0x03914C44 TBNZ X0, 0x0, 0x3914CC8
	0x03914C48 LDR X0, [X20 + 0x20]
	0x03914C4C CBZ X0, 0x3914CFC
	0x03914C50 ADRP X8, 0x7E4000
	0x03914C54 LDR X8, [X8 + 0x798]
	0x03914C58 MOV X1, X19
	0x03914C5C LDR X2, [X8]
	0x03914C60 BL 0x2A9F190
	0x03914C64 TBNZ X0, 0x0, 0x3914CC8
	0x03914C68 LDR X0, [X20 + 0x28]
	0x03914C6C CBZ X0, 0x3914CFC
	0x03914C70 ADRP X8, 0x808000
	0x03914C74 LDR X8, [X8 + 0x258]
	0x03914C78 MOV X1, X19
	0x03914C7C LDR X2, [X8]
	0x03914C80 BL 0x2AB4C84
	0x03914C84 TBNZ X0, 0x0, 0x3914CC8
	0x03914C88 LDR X0, [X20 + 0x30]
	0x03914C8C CBZ X0, 0x3914CFC
	0x03914C90 ADRP X8, 0x7E4000
	0x03914C94 LDR X8, [X8 + 0xB8]
	0x03914C98 MOV X1, X19
	0x03914C9C LDR X2, [X8]
	0x03914CA0 BL 0x2AA528C
	0x03914CA4 TBNZ X0, 0x0, 0x3914CC8
	0x03914CA8 LDR X0, [X20 + 0x38]
	0x03914CAC CBZ X0, 0x3914CFC
	0x03914CB0 ADRP X8, 0x808000
	0x03914CB4 LDR X8, [X8 + 0x260]
	0x03914CB8 MOV X1, X19
	0x03914CBC LDR X2, [X8]
	0x03914CC0 BL 0x2A96034
	0x03914CC4 TBZ X0, 0x0, 0x3914CD8
	0x03914CC8 LDP X20, X19, [X31 + 0x10]
	0x03914CCC MOVZ W0, 0x1
	0x03914CD0 LDP X30, X21, [X31], #0x20
	0x03914CD4 RET
	0x03914CD8 LDR X0, [X20 + 0x40]
	0x03914CDC CBZ X0, 0x3914CFC
	0x03914CE0 ADRP X8, 0x808000
	0x03914CE4 LDR X8, [X8 + 0x268]
	0x03914CE8 MOV X1, X19
	0x03914CEC LDP X20, X19, [X31 + 0x10]
	0x03914CF0 LDR X2, [X8]
	0x03914CF4 LDP X30, X21, [X31], #0x20
	0x03914CF8 B 0x2AA528C
	0x03914CFC BL 0x1C16F20
	0x03914D00 STP X30, X21, [X31 - 0x20]!
	0x03914D04 STP X20, X19, [X31 + 0x10]
	0x03914D08 ADRP X21, 0xACD000
	0x03914D0C LDRB W8, [X21 + 0x831]
	0x03914D10 MOV X19, X1
	0x03914D14 MOV X20, X0
	0x03914D18 TBNZ X8, 0x0, 0x3914DB4
	0x03914D1C ADRP X0, 0x7E4000
	0x03914D20 LDR X0, [X0 + 0xB8]
	0x03914D24 BL 0x1C16CF4
	0x03914D28 ADRP X0, 0x808000
	0x03914D2C LDR X0, [X0 + 0x258]
	0x03914D30 BL 0x1C16CF4
	0x03914D34 ADRP X0, 0x808000
	0x03914D38 LDR X0, [X0 + 0x260]
	0x03914D3C BL 0x1C16CF4
	0x03914D40 ADRP X0, 0x808000
	0x03914D44 LDR X0, [X0 + 0x268]
	0x03914D48 BL 0x1C16CF4
	0x03914D4C ADRP X0, 0x7E4000
	0x03914D50 LDR X0, [X0 + 0x798]
	0x03914D54 BL 0x1C16CF4
	0x03914D58 ADRP X0, 0x808000
	0x03914D5C LDR X0, [X0 + 0x270]
	0x03914D60 BL 0x1C16CF4
	0x03914D64 ADRP X0, 0x83A000
	0x03914D68 LDR X0, [X0 + 0x310]
	0x03914D6C BL 0x1C16CF4
	0x03914D70 ADRP X0, 0x83A000
	0x03914D74 LDR X0, [X0 + 0x318]
	0x03914D78 BL 0x1C16CF4
	0x03914D7C ADRP X0, 0x83A000
	0x03914D80 LDR X0, [X0 + 0x320]
	0x03914D84 BL 0x1C16CF4
	0x03914D88 ADRP X0, 0x83A000
	0x03914D8C LDR X0, [X0 + 0x328]
	0x03914D90 BL 0x1C16CF4
	0x03914D94 ADRP X0, 0x83A000
	0x03914D98 LDR X0, [X0 + 0x330]
	0x03914D9C BL 0x1C16CF4
	0x03914DA0 ADRP X0, 0x83A000
	0x03914DA4 LDR X0, [X0 + 0x338]
	0x03914DA8 BL 0x1C16CF4
	0x03914DAC MOVZ W8, 0x1
	0x03914DB0 STRB W8, [X21 + 0x831]
	0x03914DB4 LDR X0, [X20 + 0x18]
	0x03914DB8 CBZ X0, 0x3914F30
	0x03914DBC ADRP X8, 0x808000
	0x03914DC0 LDR X8, [X8 + 0x270]
	0x03914DC4 MOV X1, X19
	0x03914DC8 LDR X2, [X8]
	0x03914DCC BL 0x2A89948
	0x03914DD0 TBZ X0, 0x0, 0x3914DF0
	0x03914DD4 LDR X0, [X20 + 0x18]
	0x03914DD8 CBZ X0, 0x3914F30
	0x03914DDC ADRP X8, 0x83A000
	0x03914DE0 LDR X8, [X8 + 0x330]
	0x03914DE4 MOV X1, X19
	0x03914DE8 LDR X2, [X8]
	0x03914DEC BL 0x2A8AB78
	0x03914DF0 LDR X0, [X20 + 0x20]
	0x03914DF4 CBZ X0, 0x3914F30
	0x03914DF8 ADRP X8, 0x7E4000
	0x03914DFC LDR X8, [X8 + 0x798]
	0x03914E00 MOV X1, X19
	0x03914E04 LDR X2, [X8]
	0x03914E08 BL 0x2A9F190
	0x03914E0C TBZ X0, 0x0, 0x3914E2C
	0x03914E10 LDR X0, [X20 + 0x20]
	0x03914E14 CBZ X0, 0x3914F30
	0x03914E18 ADRP X8, 0x83A000
	0x03914E1C LDR X8, [X8 + 0x318]
	0x03914E20 MOV X1, X19
	0x03914E24 LDR X2, [X8]
	0x03914E28 BL 0x2AA03C4
	0x03914E2C LDR X0, [X20 + 0x28]
	0x03914E30 CBZ X0, 0x3914F30
	0x03914E34 ADRP X8, 0x808000
	0x03914E38 LDR X8, [X8 + 0x258]
	0x03914E3C MOV X1, X19
	0x03914E40 LDR X2, [X8]
	0x03914E44 BL 0x2AB4C84
	0x03914E48 TBZ X0, 0x0, 0x3914E68
	0x03914E4C LDR X0, [X20 + 0x28]
	0x03914E50 CBZ X0, 0x3914F30
	0x03914E54 ADRP X8, 0x83A000
	0x03914E58 LDR X8, [X8 + 0x310]
	0x03914E5C MOV X1, X19
	0x03914E60 LDR X2, [X8]
	0x03914E64 BL 0x2AB5E80
	0x03914E68 LDR X0, [X20 + 0x30]
	0x03914E6C CBZ X0, 0x3914F30
	0x03914E70 ADRP X8, 0x7E4000
	0x03914E74 LDR X8, [X8 + 0xB8]
	0x03914E78 MOV X1, X19
	0x03914E7C LDR X2, [X8]
	0x03914E80 BL 0x2AA528C
	0x03914E84 TBZ X0, 0x0, 0x3914EA4
	0x03914E88 LDR X0, [X20 + 0x30]
	0x03914E8C CBZ X0, 0x3914F30
	0x03914E90 ADRP X8, 0x83A000
	0x03914E94 LDR X8, [X8 + 0x338]
	0x03914E98 MOV X1, X19
	0x03914E9C LDR X2, [X8]
	0x03914EA0 BL 0x2AA64F8
	0x03914EA4 LDR X0, [X20 + 0x38]
	0x03914EA8 CBZ X0, 0x3914F30
	0x03914EAC ADRP X8, 0x808000
	0x03914EB0 LDR X8, [X8 + 0x260]
	0x03914EB4 MOV X1, X19
	0x03914EB8 LDR X2, [X8]
	0x03914EBC BL 0x2A96034
	0x03914EC0 TBZ X0, 0x0, 0x3914EE0
	0x03914EC4 LDR X0, [X20 + 0x38]
	0x03914EC8 CBZ X0, 0x3914F30
	0x03914ECC ADRP X8, 0x83A000
	0x03914ED0 LDR X8, [X8 + 0x320]
	0x03914ED4 MOV X1, X19
	0x03914ED8 LDR X2, [X8]
	0x03914EDC BL 0x2A97278
	0x03914EE0 LDR X0, [X20 + 0x40]
	0x03914EE4 CBZ X0, 0x3914F30
	0x03914EE8 ADRP X8, 0x808000
	0x03914EEC LDR X8, [X8 + 0x268]
	0x03914EF0 MOV X1, X19
	0x03914EF4 LDR X2, [X8]
	0x03914EF8 BL 0x2AA528C
	0x03914EFC TBZ X0, 0x0, 0x3914F24
	0x03914F00 LDR X0, [X20 + 0x40]
	0x03914F04 CBZ X0, 0x3914F30
	0x03914F08 ADRP X8, 0x83A000
	0x03914F0C LDR X8, [X8 + 0x328]
	0x03914F10 MOV X1, X19
	0x03914F14 LDP X20, X19, [X31 + 0x10]
	0x03914F18 LDR X2, [X8]
	0x03914F1C LDP X30, X21, [X31], #0x20
	0x03914F20 B 0x2AA64F8
	0x03914F24 LDP X20, X19, [X31 + 0x10]
	0x03914F28 LDP X30, X21, [X31], #0x20
	0x03914F2C RET
	0x03914F30 BL 0x1C16F20
	0x03914F34 STR X30, [X31 - 0x30]!
	0x03914F38 STP X22, X21, [X31 + 0x10]
	0x03914F3C STP X20, X19, [X31 + 0x20]
	0x03914F40 ADRP X22, 0xACD000
	0x03914F44 LDRB W8, [X22 + 0x832]
	0x03914F48 MOV W19, W2
	0x03914F4C MOV X20, X1
	0x03914F50 MOV X21, X0
	0x03914F54 TBNZ X8, 0x0, 0x3914F6C
	0x03914F58 ADRP X0, 0x83A000
	0x03914F5C LDR X0, [X0 + 0x340]
	0x03914F60 BL 0x1C16CF4
	0x03914F64 MOVZ W8, 0x1
	0x03914F68 STRB W8, [X22 + 0x832]
	0x03914F6C STRB W31, [X31 + 0xC]
	0x03914F70 LDR X0, [X21 + 0x18]
	0x03914F74 CBZ X0, 0x3914FB8
	0x03914F78 ADRP X8, 0x83A000
	0x03914F7C LDR X8, [X8 + 0x340]
	0x03914F80 ADD X2, X31, 0xC
	0x03914F84 MOV X1, X20
	0x03914F88 LDR X3, [X8]
	0x03914F8C BL 0x2A8B1AC
	0x03914F90 LDRB W8, [X31 + 0xC]
	0x03914F94 LDP X22, X21, [X31 + 0x10]
	0x03914F98 CMP W8, 0x0
	0x03914F9C CSET W8, NE
	0x03914FA0 ANDS W31, W0, 0x1
	0x03914FA4 CSEL W8, W8, W19, NE
	0x03914FA8 LDP X20, X19, [X31 + 0x20]
	0x03914FAC AND W0, W8, 0x1
	0x03914FB0 LDR X30, [X31], #0x30
	0x03914FB4 RET
	0x03914FB8 BL 0x1C16F20
	0x03914FBC STR X30, [X31 - 0x30]!
	0x03914FC0 STP X22, X21, [X31 + 0x10]
	0x03914FC4 STP X20, X19, [X31 + 0x20]
	0x03914FC8 ADRP X22, 0xACD000
	0x03914FCC LDRB W8, [X22 + 0x833]
	0x03914FD0 MOV W19, W2
	0x03914FD4 MOV X20, X1
	0x03914FD8 MOV X21, X0
	0x03914FDC TBNZ X8, 0x0, 0x3914FF4
	0x03914FE0 ADRP X0, 0x810000
	0x03914FE4 LDR X0, [X0 + 0xF40]
	0x03914FE8 BL 0x1C16CF4
	0x03914FEC MOVZ W8, 0x1
	0x03914FF0 STRB W8, [X22 + 0x833]
	0x03914FF4 STR W31, [X31 + 0xC]
	0x03914FF8 LDR X0, [X21 + 0x20]
	0x03914FFC CBZ X0, 0x3915034
	0x03915000 ADRP X8, 0x80F000
	0x03915004 LDR X8, [X8 + 0xF40]
	0x03915008 ADD X2, X31, 0xC
	0x0391500C MOV X1, X20
	0x03915010 LDR X3, [X8]
	0x03915014 BL 0x2AA09F8
	0x03915018 LDR W8, [X31 + 0xC]
	0x0391501C ANDS W31, W0, 0x1
	0x03915020 LDP X22, X21, [X31 + 0x10]
	0x03915024 CSEL W0, W8, W19, NE
	0x03915028 LDP X20, X19, [X31 + 0x20]
	0x0391502C LDR X30, [X31], #0x30
	0x03915030 RET
	0x03915034 BL 0x1C16F20
	0x03915038 STR D8, [X31 - 0x30]!
	0x0391503C STP X30, X21, [X31 + 0x10]
	0x03915040 STP X20, X19, [X31 + 0x20]
	0x03915044 ADRP X21, 0xACC000
	0x03915048 LDRB W8, [X21 + 0x834]
	0x0391504C MOV V8.16B, V0.16B
	0x03915050 MOV X19, X1
	0x03915054 MOV X20, X0
	0x03915058 TBNZ X8, 0x0, 0x3915070
	0x0391505C ADRP X0, 0x839000
	0x03915060 LDR X0, [X0 + 0x348]
	0x03915064 BL 0x1C16CF4
	0x03915068 MOVZ W8, 0x1
	0x0391506C STRB W8, [X21 + 0x834]
	0x03915070 STR W31, [X31 + 0xC]
	0x03915074 LDR X0, [X20 + 0x28]
	0x03915078 CBZ X0, 0x39150B0
	0x0391507C ADRP X8, 0x839000
	0x03915080 LDR X8, [X8 + 0x348]
	0x03915084 ADD X2, X31, 0xC
	0x03915088 MOV X1, X19
	0x0391508C LDR X3, [X8]
	0x03915090 BL 0x2AB64B4
	0x03915094 LDR V0, [X31 + 0xC]
	0x03915098 LDP X20, X19, [X31 + 0x20]
	0x0391509C LDP X30, X21, [X31 + 0x10]
	0x039150A0 ANDS W31, W0, 0x1
	0x039150A4 FCSEL S0, S0, S8, NE
	0x039150A8 LDR V8, [X31], #0x30
	0x039150AC RET
	0x039150B0 BL 0x1C16F20
	0x039150B4 STR X30, [X31 - 0x30]!
	0x039150B8 STP X22, X21, [X31 + 0x10]
	0x039150BC STP X20, X19, [X31 + 0x20]
	0x039150C0 ADRP X22, 0xACC000
	0x039150C4 LDRB W8, [X22 + 0x835]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D8
	003 Move [X31+32], X29
	004 Move [X31+40], X30
	005 Move [X31+48], X28
	006 Move [X31+56], X27
	007 Move [X31+64], X26
	008 Move [X31+72], X25
	009 Move [X31+80], X24
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X20, 0xACE000
	016 Move X22, 0x83A000
	017 Move W8, [X20+2087]
	018 Move X22, [X22+3704]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x83B000
	025 Move X0, [X0+544]
	026 Call 0x1C17CF4
	027 Move X0, 0x83B000
	028 Move X0, [X0+552]
	029 Call 0x1C17CF4
	030 Move X0, 0x83A000
	031 Move X0, [X0+3704]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2087], W8
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Call Normals.CalculateHardNormals, X0
	042 Compare X19, 0
	043 JumpIfEqual {373}
	044 Move X8, [X19+88]
	045 Compare X8, 0
	046 JumpIfEqual {48}
	047 Move W0, [X8+24]
	048 Move W0, W31
	049 Move X25, [X19+40]
	050 Move X23, [X19+48]
	051 Move X24, [X19+128]
	052 Call Normals.ClearIntArray, X0
	053 Move X8, [X19+40]
	054 Compare X8, 0
	055 JumpIfEqual {104}
	056 Move W26, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare X25, 0
	059 JumpIfEqual {373}
	060 Move W27, W31
	061 Move W19, 24
	062 Move W8, [X25+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X25, W27
	065 Move X20, [X8+32]
	066 Compare X20, 0
	067 JumpIfEqual {373}
	068 Move X0, X20
	069 Move X1, X31
	070 Call Face.get_distinctIndexesInternal, X0
	071 Compare X0, 0
	072 JumpIfEqual {373}
	073 Move X28, [X0+24]
	074 Move X21, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X22]
	077 Move W29, W31
	078 Move X8, X28
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Call 0x1C17DFC
	083 Move X0, [X22]
	084 Move X8, [X21+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, [X0+184]
	087 Move X9, [X9+16]
	088 Compare X9, 0
	089 JumpIfEqual {373}
	090 Add X10, X21, W29
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X9+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W11, [X20+24]
	095 Add X9, X9, X10
	096 Add W29, W29, 1
	097 Move [X9+32], W11
	098 Move W9, [X20+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSINC not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add W27, W27, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W19, 24
	105 Move X0, [X22]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X22]
	111 Move X8, [X0+184]
	112 Move X9, [X8]
	113 Compare X9, 0
	114 JumpIfEqual {373}
	115 Move W9, [X9+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W9, [X0+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {123}
	120 Call 0x1C17DFC
	121 Move X8, [X22]
	122 Move X8, [X8+184]
	123 Move X9, 0x83B000
	124 Move X9, [X9+552]
	125 Move X0, X8
	126 Move W1, W19
	127 Move X2, [X9]
	128 Call Array.Resize, X0, X1
	129 Move X8, [X22]
	130 Move X9, 0x83B000
	131 Move W1, W19
	132 Move X8, [X8+184]
	133 Move X9, [X9+544]
	134 Add X0, X8, 8
	135 Move X2, [X9]
	136 Call Array.Resize, X0, X1
	137 Move [X31+28], W19
	138 Compare X23, 0
	139 JumpIfEqual {373}
	140 Move W8, [X23+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W9, [X31+28]
	143 Move W25, W31
	144 Move W19, 12
	145 Move S8, 1
	146 Move W26, W9
	147 Move [X31+8], X26
	148 Move W9, [X31+28]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, [X22]
	151 Move X20, X31
	152 Move W21, 32
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X22]
	158 Move X8, [X0+184]
	159 Move X9, [X8]
	160 Compare X9, 0
	161 JumpIfEqual {373}
	162 Move W10, [X9+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X9, X9, X21
	165 Move [X9], X31
	166 Move [X9+8], W31
	167 Move X8, [X8+8]
	168 Compare X8, 0
	169 JumpIfEqual {373}
	170 Move W9, [X8+24]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Add X8, X8, X20
	173 Add X20, X20, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X21, X21, 12
	176 Move [X8+32], W31
	177 Move W8, [X23+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add X8, X23, W25
	180 Move W20, W31
	181 Add X28, X8, 32
	182 Move X0, [X28]
	183 Compare X0, 0
	184 JumpIfEqual {373}
	185 Move X1, X31
	186 Call SharedVertex.get_Count, X0
	187 Move W8, [X23+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X0, [X28]
	191 Compare X0, 0
	192 JumpIfEqual {373}
	193 Move W1, W20
	194 Move X2, X31
	195 Call SharedVertex.get_Item, X0, X1
	196 Move X8, [X22]
	197 Move W21, W0
	198 Move W9, [X8+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {204}
	201 Move X0, X8
	202 Call 0x1C17DFC
	203 Move X8, [X22]
	204 Move X9, [X8+184]
	205 Move X10, [X9+16]
	206 Compare X10, 0
	207 JumpIfEqual {373}
	208 Move W11, [X10+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X26, W21
	211 Add X10, X10, X26
	212 Move W29, [X10+32]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract W10, W29, 25
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W10, [X8+224]
	217 Compare W10, 0
	218 JumpIfNotEqual {223}
	219 Move X0, X8
	220 Call 0x1C17DFC
	221 Move X8, [X22]
	222 Move X9, [X8+184]
	223 Move X8, [X9]
	224 Compare X8, 0
	225 JumpIfEqual {373}
	226 Move W10, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction MADD not yet implemented."
	229 Add X10, X10, 32
	230 Move V0, [X10]
	231 Compare X24, 0
	232 JumpIfEqual {373}
	233 Move W11, [X24+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move W12, 12
	236 NotImplemented "Instruction MADD not yet implemented."
	237 Move V1, [X11+32]
	238 NotImplemented "Instruction NOP not yet implemented."
	239 NotImplemented "Instruction MADD not yet implemented."
	240 Move W19, 12
	241 Add S0, S0, S1
	242 Move [X10], S0
	243 Move V0, [X11+36]
	244 Move S1, [X8+36]
	245 Move S2, [X8+40]
	246 Add S0, S1, S0
	247 Move [X8+36], S0
	248 Move V0, [X11+40]
	249 Add S0, S2, S0
	250 Move [X8+40], S0
	251 Move X8, [X9+8]
	252 Compare X8, 0
	253 JumpIfEqual {373}
	254 Move W9, [X8+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add X8, X8, X29
	257 Move V0, [X8+32]
	258 Add S0, S0, S8
	259 Move [X8+32], S0
	260 Move W8, [X23+24]
	261 Add W20, W20, 1
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W20, W31
	265 Move X0, [X28]
	266 Compare X0, 0
	267 JumpIfEqual {373}
	268 Move X1, X31
	269 Call SharedVertex.get_Count, X0
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move W8, [X23+24]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, [X28]
	274 Compare X0, 0
	275 JumpIfEqual {373}
	276 Move W1, W20
	277 Move X2, X31
	278 Call SharedVertex.get_Item, X0, X1
	279 Move X8, [X22]
	280 Move W21, W0
	281 Move W9, [X8+224]
	282 Compare W9, 0
	283 JumpIfNotEqual {287}
	284 Move X0, X8
	285 Call 0x1C17DFC
	286 Move X8, [X22]
	287 Move X9, [X8+184]
	288 Move X10, [X9+16]
	289 Compare X10, 0
	290 JumpIfEqual {373}
	291 Move W11, [X10+24]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X26, W21
	294 Add X10, X10, X26
	295 Move W29, [X10+32]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Subtract W10, W29, 25
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Compare X24, 0
	300 JumpIfEqual {373}
	301 Move W10, [X8+224]
	302 Compare W10, 0
	303 JumpIfNotEqual {308}
	304 Move X0, X8
	305 Call 0x1C17DFC
	306 Move X8, [X22]
	307 Move X9, [X8+184]
	308 Move X8, [X9]
	309 Compare X8, 0
	310 JumpIfEqual {373}
	311 Move W10, [X8+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X9, [X9+8]
	314 Compare X9, 0
	315 JumpIfEqual {373}
	316 Move W10, [X9+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move W10, [X24+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move W11, 12
	321 NotImplemented "Instruction MADD not yet implemented."
	322 Add X9, X9, X29
	323 Move V0, [X10+32]
	324 Add X9, X9, 32
	325 Move V1, [X9]
	326 NotImplemented "Instruction NOP not yet implemented."
	327 NotImplemented "Instruction MADD not yet implemented."
	328 NotImplemented "Instruction MADD not yet implemented."
	329 Move X29, X26
	330 NotImplemented "Instruction FDIV not yet implemented."
	331 Move [X29+32], S0
	332 Move V1, [X8+36]
	333 Move V2, [X9]
	334 Move X27, X22
	335 Move X22, X26
	336 Move X0, X31
	337 NotImplemented "Instruction FDIV not yet implemented."
	338 Move [X22+36], S1
	339 Move V2, [X8+40]
	340 Move V3, [X9]
	341 Move W19, 12
	342 NotImplemented "Instruction FDIV not yet implemented."
	343 Move [X26+40], S2
	344 Call Math.EnsureUnitVector, X0
	345 Move W8, [X24+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X29], S0
	348 Move [X22], S1
	349 Move X22, X27
	350 Move [X26], S2
	351 Move W8, [X23+24]
	352 Add W20, W20, 1
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move W8, [X23+24]
	355 Move X26, [X31+8]
	356 Add W25, W25, 1
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X20, [X31+112]
	359 Move X19, [X31+120]
	360 Move X22, [X31+96]
	361 Move X21, [X31+104]
	362 Move X24, [X31+80]
	363 Move X23, [X31+88]
	364 Move X26, [X31+64]
	365 Move X25, [X31+72]
	366 Move X28, [X31+48]
	367 Move X27, [X31+56]
	368 Move X29, [X31+32]
	369 Move X30, [X31+40]
	370 Move V8, [X31+16]
	371 Add X31, X31, 128
	372 Return 
	373 Call 0x1C17F20
	374 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x039150E0 BL 0x1C16CF4
	0x039150E4 MOVZ W8, 0x1
	0x039150E8 STRB W8, [X22 + 0x835]
	0x039150EC STR X31, [X31 + 0x8]
	0x039150F0 LDR X0, [X21 + 0x30]
	0x039150F4 CBZ X0, 0x391512C
	0x039150F8 ADRP X8, 0x813000
	0x039150FC LDR X8, [X8 + 0x4F8]
	0x03915100 ADD X2, X31, 0x8
	0x03915104 MOV X1, X20
	0x03915108 LDR X3, [X8]
	0x0391510C BL 0x2AA6B2C
	0x03915110 LDR X8, [X31 + 0x8]
	0x03915114 ANDS W31, W0, 0x1
	0x03915118 LDP X22, X21, [X31 + 0x10]
	0x0391511C CSEL X0, X8, X19, NE
	0x03915120 LDP X20, X19, [X31 + 0x20]
	0x03915124 LDR X30, [X31], #0x30
	0x03915128 RET
	0x0391512C BL 0x1C16F20
	0x03915130 SUB X31, X31, 0x50
	0x03915134 STP D11, D10, [X31 + 0x10]
	0x03915138 STP D9, D8, [X31 + 0x20]
	0x0391513C STP X30, X21, [X31 + 0x30]
	0x03915140 STP X20, X19, [X31 + 0x40]
	0x03915144 ADRP X21, 0xACC000
	0x03915148 LDRB W8, [X21 + 0x836]
	0x0391514C MOV V8.16B, V3.16B
	0x03915150 MOV V9.16B, V2.16B
	0x03915154 MOV V10.16B, V1.16B
	0x03915158 MOV V11.16B, V0.16B
	0x0391515C MOV X19, X1
	0x03915160 MOV X20, X0
	0x03915164 TBNZ X8, 0x0, 0x391517C
	0x03915168 ADRP X0, 0x839000
	0x0391516C LDR X0, [X0 + 0x350]
	0x03915170 BL 0x1C16CF4
	0x03915174 MOVZ W8, 0x1
	0x03915178 STRB W8, [X21 + 0x836]
	0x0391517C STP X31, X31, [X31]
	0x03915180 LDR X0, [X20 + 0x38]
	0x03915184 CBZ X0, 0x39151D4
	0x03915188 ADRP X8, 0x839000
	0x0391518C LDR X8, [X8 + 0x350]
	0x03915190 ADD X2, X31, 0x0
	0x03915194 MOV X1, X19
	0x03915198 LDR X3, [X8]
	0x0391519C BL 0x2A9787C
	0x039151A0 TBZ X0, 0x0, 0x39151AC
	0x039151A4 LDP S11, S10, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xACD000
	008 Move X23, 0x7E1000
	009 Move X19, 0x839000
	010 Move X21, 0x7DF000
	011 Move X20, 0x7E0000
	012 Move W8, [X22+2088]
	013 Move X23, [X23+2480]
	014 Move X19, [X19+3704]
	015 Move X21, [X21+1592]
	016 Move X20, [X20+3672]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x7E0000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0x839000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x7DF000
	028 Move X0, [X0+1592]
	029 Call 0x1C17CF4
	030 Move X0, 0x7E1000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2088], W8
	035 Move X0, [X23]
	036 Move W1, 24
	037 Call 0x1C17D6C
	038 Move X8, [X19]
	039 Move W1, 24
	040 Move X8, [X8+184]
	041 Move [X8], X0
	042 Move X0, [X21]
	043 Call 0x1C17D6C
	044 Move X8, [X19]
	045 Move W1, 0xFFFF
	046 Move X8, [X8+184]
	047 Move [X8+8], X0
	048 Move X0, [X20]
	049 Call 0x1C17D6C
	050 Move X8, [X19]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+16], X0
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return 

