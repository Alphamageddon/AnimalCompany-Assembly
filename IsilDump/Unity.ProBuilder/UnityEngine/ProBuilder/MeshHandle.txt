Type: UnityEngine.ProBuilder.MeshHandle

Method: UnityEngine.Mesh get_mesh()

Disassembly:
	0x0390C7EC BL 0x1C16DFC
	0x0390C7F0 LDR X8, [X27]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void .ctor(UnityEngine.Transform transform, UnityEngine.Mesh mesh)

Disassembly:
	0x0390C7F4 LDR X8, [X8 + 0xB8]
	0x0390C7F8 LDR X0, [X8]
	0x0390C7FC CBZ X0, 0x390D030
	0x0390C800 LDR W9, [X0 + 0x1C]
	0x0390C804 ADD W9, W9, 0x1
	0x0390C808 STP W31, W9, [X0 + 0x18]
	0x0390C80C LDR X9, [X8 + 0x8]
	0x0390C810 CBZ X9, 0x390D030
	0x0390C814 LDR W10, [X9 + 0x1C]
	0x0390C818 ADD W10, W10, 0x1
	0x0390C81C STP W31, W10, [X9 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void DrawMeshNow(System.Int32 submeshIndex)

Disassembly:
	0x0390C820 LDR X8, [X8 + 0x18]
	0x0390C824 CBZ X8, 0x390D030
	0x0390C828 LDR W9, [X8 + 0x1C]
	0x0390C82C STR X23, [X31 + 0x8]
	0x0390C830 ADRP X19, 0x841000
	0x0390C834 LDR X19, [X19 + 0xFE8]
	0x0390C838 ADD W9, W9, 0x1
	0x0390C83C STP W31, W9, [X8 + 0x18]
	0x0390C840 UBFM W23, W22, 0x1E, 0x1D
	0x0390C844 LDR X2, [X19]
	0x0390C848 MOV W1, W23
	0x0390C84C BL 0x30CBD00
	0x0390C850 LDR X8, [X27]
	0x0390C854 LDR X8, [X8 + 0xB8]
	0x0390C858 LDR X0, [X8 + 0x8]
	0x0390C85C CBZ X0, 0x390D030
	0x0390C860 LDR X2, [X19]
	0x0390C864 MOV W1, W23
	0x0390C868 BL 0x30CBD00
	0x0390C86C LDR X8, [X27]
	0x0390C870 LDR X8, [X8 + 0xB8]
	0x0390C874 LDR X0, [X8 + 0x18]
	0x0390C878 CBZ X0, 0x390D030
	0x0390C87C ADRP X8, 0x841000
	0x0390C880 LDR X8, [X8 + 0xFC8]
	0x0390C884 MOV W1, W23
	0x0390C888 STR W23, [X31 + 0x4]
	0x0390C88C LDR X2, [X8]
	0x0390C890 BL 0x2FDC298
	0x0390C894 CMP W22, 0x1
	0x0390C898 B.LT 0x390CF6C
	0x0390C89C ADRP X29, 0x841000
	0x0390C8A0 ADRP X23, 0x7EB000
	0x0390C8A4 ADRP X19, 0x7E8000
	0x0390C8A8 LDR X29, [X29 + 0xF80]
	0x0390C8AC LDR X23, [X23 + 0x3B8]
	0x0390C8B0 LDR X19, [X19 + 0xE10]
	0x0390C8B4 MOV W24, W31
	0x0390C8B8 MOVZ W28, 0xC
	0x0390C8BC LDR X8, [X20]
	0x0390C8C0 ADRP X10, 0x80F000
	0x0390C8C4 LDRH W9, [X8 + 0x12E]
	0x0390C8C8 LDR X10, [X10 + 0x7A8]
	0x0390C8CC LDR X1, [X10]
	0x0390C8D0 CBZ X9, 0x390C8F4
	0x0390C8D4 LDR X10, [X8 + 0xB0]
	0x0390C8D8 ADD X10, X10, 0x8
	0x0390C8DC LDUR X11, [X10 - 0x8]
	0x0390C8E0 CMP X11, X1
	0x0390C8E4 B.EQ 0x390C904
	0x0390C8E8 SUBS X9, X9, 0x1
	0x0390C8EC ADD X10, X10, 0x10
	0x0390C8F0 B.NE 0x390C8DC
	0x0390C8F4 MOV X0, X20
	0x0390C8F8 MOV W2, W31
	0x0390C8FC BL 0x1C5C788
	0x0390C900 B 0x390C910
	0x0390C904 LDRSW X9, [X10]
	0x0390C908 ADD X8, X8, X9, 0x4, LSL
	0x0390C90C ADD X0, X8, 0x138
	0x0390C910 LDP X8, X2, [X0]
	0x0390C914 MOV X0, X20
	0x0390C918 MOV W1, W24
	0x0390C91C BLR X8
	0x0390C920 LDR X8, [X27]
	0x0390C924 MOV W25, W0
	0x0390C928 LDR W9, [X8 + 0xE0]
	0x0390C92C CBNZ W9, 0x390C93C
	0x0390C930 MOV X0, X8
	0x0390C934 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+208], X22
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X21, 0xAD6000
	008 Move X22, 0x7E8000
	009 Move W8, [X21+2051]
	010 Move X22, [X22+1432]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7EC000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0x7E8000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2051], W8
	025 Move X0, [X22]
	026 Move X21, [X20+16]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {88}
	039 Move X0, [X22]
	040 Move X21, [X20+24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {88}
	053 Move X0, [X20+16]
	054 Compare X0, 0
	055 JumpIfEqual {95}
	056 Move X20, [X20+24]
	057 Add X8, X31, 64
	058 Move X1, X31
	059 Call Transform.get_localToWorldMatrix, X0
	060 Move X8, 0x7EC000
	061 Move V0, [X31+64]
	062 Move V1, [X31+80]
	063 Move V2, [X31+96]
	064 Move V3, [X31+112]
	065 Move X8, [X8+712]
	066 Move [X31+128], V0
	067 Move [X31+136], V1
	068 Move [X31+160], V2
	069 Move [X31+168], V3
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move V0, [X31+128]
	076 Move V1, [X31+144]
	077 Move V2, [X31+160]
	078 Move V3, [X31+176]
	079 Add X1, X31, 0
	080 Move X0, X20
	081 Move W2, W19
	082 Move X3, X31
	083 Move [X31], V0
	084 Move [X31+8], V1
	085 Move [X31+32], V2
	086 Move [X31+40], V3
	087 Call Graphics.DrawMeshNow, X0, X1, X2
	088 Move X20, [X31+224]
	089 Move X19, [X31+232]
	090 Move X22, [X31+208]
	091 Move X21, [X31+216]
	092 Move X30, [X31+192]
	093 Add X31, X31, 240
	094 Return 
	095 Call 0x1C17F20

