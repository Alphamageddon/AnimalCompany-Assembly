Type: UnityEngine.ProBuilder.PolyShape

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.Vector3> get_controlPoints()

Disassembly:
	0x039151A8 LDP S9, S8, [X31 + 0x8]
	0x039151AC MOV V0.16B, V11.16B
	0x039151B0 MOV V1.16B, V10.16B
	0x039151B4 MOV V2.16B, V9.16B
	0x039151B8 MOV V3.16B, V8.16B
	0x039151BC LDP X20, X19, [X31 + 0x40]
	0x039151C0 LDP X30, X21, [X31 + 0x30]
	0x039151C4 LDP D9, D8, [X31 + 0x20]
	0x039151C8 LDP D11, D10, [X31 + 0x10]
	0x039151CC ADD X31, X31, 0x50
	0x039151D0 RET
	0x039151D4 BL 0x1C16F20
	0x039151D8 STR X30, [X31 - 0x30]!
	0x039151DC STP X22, X21, [X31 + 0x10]
	0x039151E0 STP X20, X19, [X31 + 0x20]
	0x039151E4 ADRP X22, 0xACC000
	0x039151E8 LDRB W8, [X22 + 0x837]
	0x039151EC MOV X19, X2
	0x039151F0 MOV X20, X1
	0x039151F4 MOV X21, X0
	0x039151F8 TBNZ X8, 0x0, 0x3915210
	0x039151FC ADRP X0, 0x839000
	0x03915200 LDR X0, [X0 + 0x358]
	0x03915204 BL 0x1C16CF4
	0x03915208 MOVZ W8, 0x1
	0x0391520C STRB W8, [X22 + 0x837]
	0x03915210 STR X31, [X31 + 0x8]
	0x03915214 LDR X0, [X21 + 0x40]
	0x03915218 CBZ X0, 0x3915250
	0x0391521C ADRP X8, 0x839000
	0x03915220 LDR X8, [X8 + 0x358]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xACD000
	007 Move X21, 0x83A000
	008 Move X20, 0x83A000
	009 Move W8, [X22+2089]
	010 Move X21, [X21+560]
	011 Move X20, [X20+568]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x83A000
	018 Move X0, [X0+568]
	019 Call 0x1C17CF4
	020 Move X0, 0x83A000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2089], W8
	025 Move X0, [X21]
	026 Move X19, [X19+40]
	027 Call 0x1C17F10
	028 Move X2, [X20]
	029 Move X1, X19
	030 Move X20, X0
	031 Call ReadOnlyCollection`1<Vector3>..ctor, X0, X1
	032 Move X0, X20
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void SetControlPoints(System.Collections.Generic.IList`1<UnityEngine.Vector3> points)

Disassembly:
	0x03915224 ADD X2, X31, 0x8
	0x03915228 MOV X1, X20
	0x0391522C LDR X3, [X8]
	0x03915230 BL 0x2AA6B2C
	0x03915234 LDR X8, [X31 + 0x8]
	0x03915238 ANDS W31, W0, 0x1
	0x0391523C LDP X22, X21, [X31 + 0x10]
	0x03915240 CSEL X0, X8, X19, NE
	0x03915244 LDP X20, X19, [X31 + 0x20]
	0x03915248 LDR X30, [X31], #0x30
	0x0391524C RET
	0x03915250 BL 0x1C16F20
	0x03915254 STR X30, [X31 - 0x30]!
	0x03915258 STP X22, X21, [X31 + 0x10]
	0x0391525C STP X20, X19, [X31 + 0x20]
	0x03915260 ADRP X22, 0xACC000
	0x03915264 LDRB W8, [X22 + 0x838]
	0x03915268 MOV W20, W2
	0x0391526C MOV X19, X1
	0x03915270 MOV X21, X0
	0x03915274 TBNZ X8, 0x0, 0x391528C
	0x03915278 ADRP X0, 0x839000
	0x0391527C LDR X0, [X0 + 0x360]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xACD000
	007 Move X22, 0x83A000
	008 Move W8, [X21+2090]
	009 Move X22, [X22+576]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x83A000
	017 Move X0, [X0+576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2090], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call Enumerable.ToList, X0
	024 Move [X19+40], X0
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 

Method: System.Single get_extrude()

Disassembly:
	0x03915280 BL 0x1C16CF4
	0x03915284 MOVZ W8, 0x1

ISIL:
	001 Move V0, [X0+48]
	002 Return V0

Method: System.Void set_extrude(System.Single value)

Disassembly:
	0x03915288 STRB W8, [X22 + 0x838]
	0x0391528C LDR X0, [X21 + 0x18]

ISIL:
	001 Move [X0+48], S0
	002 Return 

Method: UnityEngine.ProBuilder.PolyShape/PolyEditMode get_polyEditMode()

Disassembly:
	0x03915290 CBZ X0, 0x39152B8
	0x03915294 ADRP X8, 0x839000

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Void set_polyEditMode(UnityEngine.ProBuilder.PolyShape/PolyEditMode value)

Disassembly:
	0x03915298 LDR X8, [X8 + 0x360]
	0x0391529C AND W2, W20, 0x1

ISIL:
	001 Move [X0+52], W1
	002 Return 

Method: System.Boolean get_flipNormals()

Disassembly:
	0x039152A0 MOV X1, X19
	0x039152A4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_flipNormals(System.Boolean value)

Disassembly:
	0x039152A8 LDR X3, [X8]
	0x039152AC LDP X22, X21, [X31 + 0x10]
	0x039152B0 LDR X30, [X31], #0x30

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: UnityEngine.ProBuilder.ProBuilderMesh get_mesh()

Disassembly:
	0x039152B4 B 0x2A89728
	0x039152B8 BL 0x1C16F20
	0x039152BC STR X30, [X31 - 0x30]!
	0x039152C0 STP X22, X21, [X31 + 0x10]
	0x039152C4 STP X20, X19, [X31 + 0x20]
	0x039152C8 ADRP X22, 0xACC000
	0x039152CC LDRB W8, [X22 + 0x839]
	0x039152D0 MOV W19, W2
	0x039152D4 MOV X20, X1
	0x039152D8 MOV X21, X0
	0x039152DC TBNZ X8, 0x0, 0x39152F4
	0x039152E0 ADRP X0, 0x7E3000
	0x039152E4 LDR X0, [X0 + 0x7A8]
	0x039152E8 BL 0x1C16CF4
	0x039152EC MOVZ W8, 0x1
	0x039152F0 STRB W8, [X22 + 0x839]
	0x039152F4 LDR X0, [X21 + 0x20]
	0x039152F8 CBZ X0, 0x3915320
	0x039152FC ADRP X8, 0x7E3000
	0x03915300 LDR X8, [X8 + 0x7A8]
	0x03915304 MOV X1, X20
	0x03915308 MOV W2, W19
	0x0391530C LDP X20, X19, [X31 + 0x20]
	0x03915310 LDR X3, [X8]
	0x03915314 LDP X22, X21, [X31 + 0x10]
	0x03915318 LDR X30, [X31], #0x30
	0x0391531C B 0x2A9EF88
	0x03915320 BL 0x1C16F20
	0x03915324 STR D8, [X31 - 0x30]!
	0x03915328 STP X30, X21, [X31 + 0x10]
	0x0391532C STP X20, X19, [X31 + 0x20]
	0x03915330 ADRP X21, 0xACC000
	0x03915334 LDRB W8, [X21 + 0x83A]
	0x03915338 MOV V8.16B, V0.16B
	0x0391533C MOV X19, X1
	0x03915340 MOV X20, X0
	0x03915344 TBNZ X8, 0x0, 0x391535C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xACD000
	006 Move X20, 0x7DF000
	007 Move W8, [X21+2091]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x839000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0x7DF000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2091], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x839000
	037 Move X8, [X8+2656]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+32], X0
	042 Move X0, [X19+32]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void set_mesh(UnityEngine.ProBuilder.ProBuilderMesh value)

Disassembly:
	0x03915348 ADRP X0, 0x839000
	0x0391534C LDR X0, [X0 + 0x368]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean IsSnapEnabled()

Disassembly:
	0x03915350 BL 0x1C16CF4
	0x03915354 MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03915358 STRB W8, [X21 + 0x83A]
	0x0391535C LDR X0, [X20 + 0x28]
	0x03915360 CBZ X0, 0x3915388
	0x03915364 ADRP X8, 0x839000
	0x03915368 LDR X8, [X8 + 0x368]
	0x0391536C MOV X1, X19
	0x03915370 LDP X20, X19, [X31 + 0x20]
	0x03915374 LDP X30, X21, [X31 + 0x10]
	0x03915378 LDR X2, [X8]
	0x0391537C MOV V0.16B, V8.16B
	0x03915380 LDR V8, [X31], #0x30
	0x03915384 B 0x2AB4A74
	0x03915388 BL 0x1C16F20
	0x0391538C STR X30, [X31 - 0x30]!
	0x03915390 STP X22, X21, [X31 + 0x10]
	0x03915394 STP X20, X19, [X31 + 0x20]
	0x03915398 ADRP X22, 0xACC000
	0x0391539C LDRB W8, [X22 + 0x83B]
	0x039153A0 MOV X19, X2
	0x039153A4 MOV X20, X1
	0x039153A8 MOV X21, X0
	0x039153AC TBNZ X8, 0x0, 0x39153C4
	0x039153B0 ADRP X0, 0x7DF000
	0x039153B4 LDR X0, [X0 + 0x6C8]
	0x039153B8 BL 0x1C16CF4
	0x039153BC MOVZ W8, 0x1
	0x039153C0 STRB W8, [X22 + 0x83B]
	0x039153C4 LDR X0, [X21 + 0x30]
	0x039153C8 CBZ X0, 0x39153F0
	0x039153CC ADRP X8, 0x7DF000
	0x039153D0 LDR X8, [X8 + 0x6C8]
	0x039153D4 MOV X1, X20
	0x039153D8 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xACD000
	007 Move X22, 0x7E3000
	008 Move X20, 0x80B000
	009 Move W8, [X21+2092]
	010 Move X22, [X22+960]
	011 Move X20, [X20+1464]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x80B000
	018 Move X0, [X0+1464]
	019 Call 0x1C17CF4
	020 Move X0, 0x7E3000
	021 Move X0, [X0+960]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2092], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Vector3>..ctor, X0
	030 Move W8, 1
	031 Move [X19+40], X20
	032 Move [X19+57], W8
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+48]
	040 Call MonoBehaviour..ctor, X0
	041 Return 

