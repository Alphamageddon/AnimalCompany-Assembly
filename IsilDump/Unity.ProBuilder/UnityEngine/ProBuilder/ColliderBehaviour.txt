Type: UnityEngine.ProBuilder.ColliderBehaviour

Method: System.Void Initialize()

Disassembly:
	0x038FCE38 FDIV S13, S12, S11
	0x038FCE3C FCSEL S14, S1, S0, MI
	0x038FCE40 LDR X0, [X19]
	0x038FCE44 BL 0x1C16F10
	0x038FCE48 MOV X1, X31
	0x038FCE4C MOV X19, X0
	0x038FCE50 BL 0x33BDD8C
	0x038FCE54 STP S14, S13, [X19 + 0x10]
	0x038FCE58 STR S11, [X19 + 0x18]
	0x038FCE5C MOV X0, X19
	0x038FCE60 LDP X20, X19, [X31 + 0x50]
	0x038FCE64 LDP X22, X21, [X31 + 0x40]
	0x038FCE68 LDR X30, [X31 + 0x38]
	0x038FCE6C LDP D9, D8, [X31 + 0x28]
	0x038FCE70 LDP D11, D10, [X31 + 0x18]
	0x038FCE74 LDP D13, D12, [X31 + 0x8]
	0x038FCE78 LDR V14, [X31], #0x60
	0x038FCE7C RET
	0x038FCE80 SUB X31, X31, 0x40
	0x038FCE84 STP X30, X23, [X31 + 0x10]
	0x038FCE88 STP X22, X21, [X31 + 0x20]
	0x038FCE8C STP X20, X19, [X31 + 0x30]
	0x038FCE90 ADRP X20, 0xAE5000
	0x038FCE94 ADRP X23, 0x7F7000
	0x038FCE98 ADRP X22, 0x851000
	0x038FCE9C LDRB W8, [X20 + 0x786]
	0x038FCEA0 LDR X23, [X23 + 0xA90]
	0x038FCEA4 LDR X22, [X22 + 0xC38]
	0x038FCEA8 MOV X19, X0
	0x038FCEAC TBNZ X8, 0x0, 0x38FCED0
	0x038FCEB0 ADRP X0, 0x7F7000
	0x038FCEB4 LDR X0, [X0 + 0xA90]
	0x038FCEB8 BL 0x1C16CF4
	0x038FCEBC ADRP X0, 0x851000
	0x038FCEC0 LDR X0, [X0 + 0xC38]
	0x038FCEC4 BL 0x1C16CF4
	0x038FCEC8 MOVZ W8, 0x1
	0x038FCECC STRB W8, [X20 + 0x786]
	0x038FCED0 LDR V0, [X19 + 0x10]
	0x038FCED4 LDR X0, [X23]
	0x038FCED8 ADD X1, X31, 0xC
	0x038FCEDC STR S0, [X31 + 0xC]
	0x038FCEE0 BL 0x1C16E04
	0x038FCEE4 MOV X20, X0
	0x038FCEE8 LDR V0, [X19 + 0x14]
	0x038FCEEC LDR X0, [X23]
	0x038FCEF0 ADD X1, X31, 0x8
	0x038FCEF4 STR S0, [X31 + 0x8]
	0x038FCEF8 BL 0x1C16E04
	0x038FCEFC MOV X21, X0
	0x038FCF00 LDR V0, [X19 + 0x18]
	0x038FCF04 LDR X0, [X23]
	0x038FCF08 ADD X1, X31, 0x4
	0x038FCF0C STR S0, [X31 + 0x4]
	0x038FCF10 BL 0x1C16E04
	0x038FCF14 LDR X8, [X22]
	0x038FCF18 MOV X3, X0
	0x038FCF1C MOV X1, X20
	0x038FCF20 MOV X2, X21
	0x038FCF24 MOV X0, X8
	0x038FCF28 MOV X4, X31
	0x038FCF2C BL 0x3227C18
	0x038FCF30 LDP X20, X19, [X31 + 0x30]
	0x038FCF34 LDP X22, X21, [X31 + 0x20]
	0x038FCF38 LDP X30, X23, [X31 + 0x10]
	0x038FCF3C ADD X31, X31, 0x40
	0x038FCF40 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xAE6000
	006 Move W8, [X20+1916]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x852000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0x7FA000
	016 Move X0, [X0+352]
	017 Call 0x1C17CF4
	018 Move X0, 0x852000
	019 Move X0, [X0+3024]
	020 Call 0x1C17CF4
	021 Move X0, 0x7F8000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1916], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Component.get_gameObject, X0
	029 Compare X0, 0
	030 JumpIfEqual {81}
	031 Move X8, 0x852000
	032 Move X8, [X8+3024]
	033 Move X20, 0x7F8000
	034 Move X1, [X8]
	035 Move X20, [X20+1432]
	036 Call 0x21E62E4, X0
	037 Move X8, [X20]
	038 Move X20, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Object.op_Implicit, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {61}
	051 Move X0, X19
	052 Move X1, X31
	053 Call Component.get_gameObject, X0
	054 Compare X0, 0
	055 JumpIfEqual {81}
	056 Move X8, 0x7FA000
	057 Move X8, [X8+352]
	058 Move X1, [X8]
	059 Call 0x21E61FC, X0
	060 Move X20, X0
	061 Compare X20, 0
	062 JumpIfEqual {81}
	063 Move X21, 0x852000
	064 Move X21, [X21+2760]
	065 Move X0, X20
	066 Move W1, W31
	067 Move X2, X31
	068 Call Collider.set_isTrigger, X0, X1
	069 Move X0, [X21]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Call BuiltinMaterials.get_colliderMaterial
	075 Move X1, X0
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Call 0x1C17F20

Method: System.Void OnEnterPlayMode()

Disassembly:
	0x038FD028 LDP X20, X19, [X31 + 0x30]
	0x038FD02C LDR X30, [X31 + 0x20]
	0x038FD030 LDP D9, D8, [X31 + 0x10]
	0x038FD034 MOV V0.16B, V11.16B
	0x038FD038 MOV V1.16B, V10.16B
	0x038FD03C LDP D11, D10, [X31], #0x40
	0x038FD040 B 0x38FD044
	0x038FD044 STR D10, [X31 - 0x30]!
	0x038FD048 STP D9, D8, [X31 + 0x8]
	0x038FD04C STR X30, [X31 + 0x18]
	0x038FD050 STP X20, X19, [X31 + 0x20]
	0x038FD054 ADRP X20, 0xAE4000
	0x038FD058 ADRP X19, 0x84E000
	0x038FD05C LDRB W8, [X20 + 0x78E]
	0x038FD060 LDR X19, [X19 + 0x170]
	0x038FD064 MOV V8.16B, V2.16B
	0x038FD068 MOV V9.16B, V1.16B
	0x038FD06C MOV V10.16B, V0.16B
	0x038FD070 TBNZ X8, 0x0, 0x38FD088
	0x038FD074 ADRP X0, 0x84E000
	0x038FD078 LDR X0, [X0 + 0x170]
	0x038FD07C BL 0x1C16CF4
	0x038FD080 MOVZ W8, 0x1
	0x038FD084 STRB W8, [X20 + 0x78E]
	0x038FD088 LDR X0, [X19]
	0x038FD08C LDR W8, [X0 + 0xE0]
	0x038FD090 CBNZ W8, 0x38FD098
	0x038FD094 BL 0x1C16DFC
	0x038FD098 MOV V1.16B, V9.16B
	0x038FD09C MOV V2.16B, V8.16B
	0x038FD0A0 LDP X20, X19, [X31 + 0x20]
	0x038FD0A4 LDR X30, [X31 + 0x18]
	0x038FD0A8 LDP D9, D8, [X31 + 0x8]
	0x038FD0AC MOV V0.16B, V10.16B
	0x038FD0B0 LDR V10, [X31], #0x30
	0x038FD0B4 B 0x38FD12C
	0x038FD0B8 STR D10, [X31 - 0x30]!
	0x038FD0BC STP D9, D8, [X31 + 0x8]
	0x038FD0C0 STR X30, [X31 + 0x18]
	0x038FD0C4 STP X20, X19, [X31 + 0x20]
	0x038FD0C8 ADRP X19, 0xAE4000
	0x038FD0CC ADRP X20, 0x84E000
	0x038FD0D0 LDRB W8, [X19 + 0x788]
	0x038FD0D4 LDR X20, [X20 + 0x170]
	0x038FD0D8 MOV V8.16B, V2.16B
	0x038FD0DC MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE5000
	007 Move X22, 0x823000
	008 Move X20, 0x7F7000
	009 Move W8, [X21+1917]
	010 Move X22, [X22+1440]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x823000
	018 Move X0, [X0+1440]
	019 Call 0x1C17CF4
	020 Move X0, 0x7F7000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1917], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move X8, [X20]
	029 Move X19, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {55}
	043 Compare X19, 0
	044 JumpIfEqual {61}
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move W1, W31
	051 Move X2, X31
	052 Move X30, [X31+48]
	053 Call Renderer.set_enabled, X0, X1
	054 Return 
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void OnSceneLoaded(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)

Disassembly:
	0x038FD0E0 MOV V10.16B, V0.16B
	0x038FD0E4 TBNZ X8, 0x0, 0x38FD0FC
	0x038FD0E8 ADRP X0, 0x84E000
	0x038FD0EC LDR X0, [X0 + 0x170]
	0x038FD0F0 BL 0x1C16CF4
	0x038FD0F4 MOVZ W8, 0x1
	0x038FD0F8 STRB W8, [X19 + 0x788]
	0x038FD0FC LDR X0, [X20]
	0x038FD100 LDR W8, [X0 + 0xE0]
	0x038FD104 CBNZ W8, 0x38FD10C
	0x038FD108 BL 0x1C16DFC
	0x038FD10C MOV V1.16B, V9.16B
	0x038FD110 MOV V2.16B, V8.16B
	0x038FD114 LDP X20, X19, [X31 + 0x20]
	0x038FD118 LDR X30, [X31 + 0x18]
	0x038FD11C LDP D9, D8, [X31 + 0x8]
	0x038FD120 MOV V0.16B, V10.16B
	0x038FD124 LDR V10, [X31], #0x30
	0x038FD128 B 0x38FD12C
	0x038FD12C SUB X31, X31, 0x80
	0x038FD130 STP D11, D10, [X31 + 0x30]
	0x038FD134 STP D9, D8, [X31 + 0x40]
	0x038FD138 STP X30, X23, [X31 + 0x50]
	0x038FD13C STP X22, X21, [X31 + 0x60]
	0x038FD140 STP X20, X19, [X31 + 0x70]
	0x038FD144 ADRP X19, 0xAE4000
	0x038FD148 LDRB W8, [X19 + 0x78F]
	0x038FD14C MOV V8.16B, V2.16B
	0x038FD150 MOV V10.16B, V1.16B
	0x038FD154 MOV V9.16B, V0.16B
	0x038FD158 TBNZ X8, 0x0, 0x38FD170
	0x038FD15C ADRP X0, 0x850000
	0x038FD160 LDR X0, [X0 + 0xC40]
	0x038FD164 BL 0x1C16CF4
	0x038FD168 MOVZ W8, 0x1
	0x038FD16C STRB W8, [X19 + 0x78F]
	0x038FD170 ADRP X8, 0xFFFFFFFFFD1ED000
	0x038FD174 LDR V11, [X8 + 0x2E0]
	0x038FD178 ADRP X20, 0xFFFFFFFFFD1EC000
	0x038FD17C ADRP X22, 0xFFFFFFFFFD1ED000
	0x038FD180 ADRP X21, 0xFFFFFFFFFD1ED000
	0x038FD184 FCMP S9, S11
	0x038FD188 ADRP X19, 0xFFFFFFFFFD1ED000
	0x038FD18C B.LE 0x38FD1B0
	0x038FD190 LDR V0, [X22 + 0x264]
	0x038FD194 LDR V1, [X21 + 0x1F4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xAE5000
	007 Move X22, 0x823000
	008 Move X20, 0x7F7000
	009 Move W8, [X21+1918]
	010 Move X22, [X22+1440]
	011 Move X20, [X20+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x823000
	018 Move X0, [X0+1440]
	019 Call 0x1C17CF4
	020 Move X0, 0x7F7000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1918], W8
	025 Move X1, [X22]
	026 Move X0, X19
	027 Call 0x21A4894, X0
	028 Move X8, [X20]
	029 Move X19, X0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {55}
	043 Compare X19, 0
	044 JumpIfEqual {61}
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move W1, W31
	051 Move X2, X31
	052 Move X30, [X31+48]
	053 Call Renderer.set_enabled, X0, X1
	054 Return 
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x038FD198 FADD S0, S9, S0
	0x038FD19C FDIV S0, S0, S1
	0x038FD1A0 LDR V1, [X19 + 0x3B0]
	0x038FD1A4 BL 0x3EB1B50

ISIL:
	001 Move W8, 1
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

