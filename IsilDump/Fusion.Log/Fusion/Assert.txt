Type: Fusion.Assert

Method: System.Void Fail()

Disassembly:
	0x01E3C77C LDP X20, X19, [X31 + 0x10]
	0x01E3C780 LDR X30, [X31], #0x20
	0x01E3C784 RET
	0x01E3C788 ADRP X19, 0x22B7000
	0x01E3C78C LDR X19, [X19 + 0xA28]
	0x01E3C790 LDR X0, [X19]
	0x01E3C794 LDR W8, [X0 + 0xE0]
	0x01E3C798 CBNZ W8, 0x1E3C7A0
	0x01E3C79C BL 0x1C16DFC
	0x01E3C7A0 ADRP X20, 0x259C000
	0x01E3C7A4 LDRB W8, [X20 + 0xFA8]
	0x01E3C7A8 CBNZ W8, 0x1E3C7C0
	0x01E3C7AC ADRP X0, 0x22B7000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x22C0000
	004 Move X0, [X0+2280]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Call AssertException..ctor, X0
	009 Move X0, 0x22C0000
	010 Move X0, [X0+2288]
	011 Call 0x1C17D08
	012 Move X1, X0
	013 Move X0, X19
	014 Call 0x1C17DEC

Method: System.Void Fail(System.String error)

Disassembly:
	0x01E3C7B0 LDR X0, [X0 + 0xA28]
	0x01E3C7B4 BL 0x1C16CF4
	0x01E3C7B8 MOVZ W8, 0x1
	0x01E3C7BC STRB W8, [X20 + 0xFA8]
	0x01E3C7C0 LDR X0, [X19]
	0x01E3C7C4 LDR W8, [X0 + 0xE0]
	0x01E3C7C8 CBNZ W8, 0x1E3C7D4
	0x01E3C7CC BL 0x1C16DFC
	0x01E3C7D0 LDR X0, [X19]
	0x01E3C7D4 ADRP X20, 0x22BF000
	0x01E3C7D8 LDR X20, [X20 + 0x980]
	0x01E3C7DC LDR X9, [X0 + 0xB8]
	0x01E3C7E0 LDR X8, [X20]
	0x01E3C7E4 LDR X19, [X9 + 0x8]
	0x01E3C7E8 LDR W10, [X8 + 0xE0]
	0x01E3C7EC CBNZ W10, 0x1E3C7FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x22C0000
	006 Move X0, [X0+2280]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X19
	010 Move X20, X0
	011 Call AssertException..ctor, X0, X1
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2296]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X20
	017 Call 0x1C17DEC

Method: System.Void Fail(System.String format, System.Object[] args)

Disassembly:
	0x01E3C7F0 MOV X0, X8
	0x01E3C7F4 BL 0x1C16DFC
	0x01E3C7F8 LDR X8, [X20]
	0x01E3C7FC ADRP X9, 0x22BF000
	0x01E3C800 ADRP X10, 0x22BF000
	0x01E3C804 LDR X8, [X8 + 0xB8]
	0x01E3C808 LDR X9, [X9 + 0x9C8]
	0x01E3C80C LDR X10, [X10 + 0x9D0]
	0x01E3C810 MOV X3, X31
	0x01E3C814 LDR X1, [X8]
	0x01E3C818 LDR X0, [X9]
	0x01E3C81C LDR X2, [X10]
	0x01E3C820 BL 0x32274B8
	0x01E3C824 CBZ X19, 0x1E3C8A0
	0x01E3C828 ADRP X10, 0x22BF000
	0x01E3C82C LDR X8, [X19]
	0x01E3C830 LDR X10, [X10 + 0x9B8]
	0x01E3C834 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X2, X31
	005 Call String.Format, X0, X1
	006 Move X19, X0
	007 Move X0, 0x22C0000
	008 Move X0, [X0+2280]
	009 Call 0x1C17D08
	010 Call 0x1C17F10
	011 Move X1, X19
	012 Move X20, X0
	013 Call AssertException..ctor, X0, X1
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2304]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X20
	019 Call 0x1C17DEC

Method: System.Void Check(System.Object condition)

Disassembly:
	0x01E3C838 LDRH W9, [X8 + 0x12E]
	0x01E3C83C LDR X1, [X10]
	0x01E3C840 CBZ X9, 0x1E3C864
	0x01E3C844 LDR X10, [X8 + 0xB0]
	0x01E3C848 ADD X10, X10, 0x8
	0x01E3C84C LDUR X11, [X10 - 0x8]
	0x01E3C850 CMP X11, X1
	0x01E3C854 B.EQ 0x1E3C874
	0x01E3C858 SUBS X9, X9, 0x1
	0x01E3C85C ADD X10, X10, 0x10
	0x01E3C860 B.NE 0x1E3C84C
	0x01E3C864 MOVZ W2, 0x2
	0x01E3C868 MOV X0, X19
	0x01E3C86C BL 0x1C5C788
	0x01E3C870 B 0x1E3C884

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0x22C0000
	007 Move X0, [X0+2280]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Call AssertException..ctor, X0
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2312]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.Void Check(System.Void* condition)

Disassembly:
	0x01E3C874 LDR W9, [X10]
	0x01E3C878 ADD W9, W9, 0x2
	0x01E3C87C ADD X8, X8, W9, 0x4, SXTW
	0x01E3C880 ADD X0, X8, 0x138
	0x01E3C884 LDP X4, X3, [X0]
	0x01E3C888 MOV X0, X19
	0x01E3C88C MOV X2, X20
	0x01E3C890 LDP X20, X19, [X31 + 0x10]
	0x01E3C894 MOVZ W1, 0x1
	0x01E3C898 LDR X30, [X31], #0x20
	0x01E3C89C BR X4
	0x01E3C8A0 BL 0x1C16F20
	0x01E3C8A4 STR X30, [X31 - 0x30]!
	0x01E3C8A8 STP X22, X21, [X31 + 0x10]
	0x01E3C8AC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Move [X31-8], X19
	006 Move X0, 0x22C0000
	007 Move X0, [X0+2280]
	008 Call 0x1C17D08
	009 Call 0x1C17F10
	010 Move X19, X0
	011 Call AssertException..ctor, X0
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2320]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X19
	017 Call 0x1C17DEC

Method: System.Void Check(System.Boolean condition)

Disassembly:
	0x01E3C8B0 ADRP X21, 0x259C000
	0x01E3C8B4 ADRP X22, 0x22B7000
	0x01E3C8B8 LDRB W8, [X21 + 0xF28]
	0x01E3C8BC LDR X22, [X22 + 0xAC8]
	0x01E3C8C0 MOV X19, X1
	0x01E3C8C4 MOV X20, X0
	0x01E3C8C8 TBNZ X8, 0x0, 0x1E3C91C
	0x01E3C8CC ADRP X0, 0x22B7000
	0x01E3C8D0 LDR X0, [X0 + 0xA28]
	0x01E3C8D4 BL 0x1C16CF4
	0x01E3C8D8 ADRP X0, 0x22BF000
	0x01E3C8DC LDR X0, [X0 + 0x980]
	0x01E3C8E0 BL 0x1C16CF4
	0x01E3C8E4 ADRP X0, 0x22B7000
	0x01E3C8E8 LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x22C0000
	009 Move X0, [X0+2280]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Call AssertException..ctor, X0
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2328]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Call 0x1C17DEC

Method: System.Void Check(System.Boolean condition, System.String error)

Disassembly:
	0x01E3C8EC BL 0x1C16CF4
	0x01E3C8F0 ADRP X0, 0x22BF000
	0x01E3C8F4 LDR X0, [X0 + 0x9D8]
	0x01E3C8F8 BL 0x1C16CF4
	0x01E3C8FC ADRP X0, 0x22BB000
	0x01E3C900 LDR X0, [X0 + 0x928]
	0x01E3C904 BL 0x1C16CF4
	0x01E3C908 ADRP X0, 0x22BF000
	0x01E3C90C LDR X0, [X0 + 0x9C8]
	0x01E3C910 BL 0x1C16CF4
	0x01E3C914 MOVZ W8, 0x1
	0x01E3C918 STRB W8, [X21 + 0xF28]
	0x01E3C91C LDR X0, [X22]
	0x01E3C920 MOVZ W1, 0x6
	0x01E3C924 BL 0x1C16D6C
	0x01E3C928 CBZ X0, 0x1E3CA0C
	0x01E3C92C LDR X8, [X0 + 0x18]
	0x01E3C930 MOV X21, X0

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-32], X30
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move X0, 0x22C0000
	010 Move X0, [X0+2280]
	011 Move X19, X1
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X20, X0
	016 Call AssertException..ctor, X0, X1
	017 Move X0, 0x22C0000
	018 Move X0, [X0+2336]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X20
	022 Call 0x1C17DEC

Method: System.Void Check(System.Boolean condition, System.String format, System.Object[] args)

Disassembly:
	0x01E3C934 CBZ W8, 0x1E3CA08
	0x01E3C938 ADRP X9, 0x22BF000
	0x01E3C93C LDR X9, [X9 + 0x9C8]
	0x01E3C940 ADRP X22, 0x22BF000
	0x01E3C944 LDR X9, [X9]
	0x01E3C948 LDR X22, [X22 + 0x980]
	0x01E3C94C STR X9, [X21 + 0x20]
	0x01E3C950 LDR X0, [X22]
	0x01E3C954 LDR W9, [X0 + 0xE0]
	0x01E3C958 CBNZ W9, 0x1E3C964
	0x01E3C95C BL 0x1C16DFC
	0x01E3C960 LDR X8, [X21 + 0x18]
	0x01E3C964 CMP W8, 0x1
	0x01E3C968 B.LS 0x1E3CA08
	0x01E3C96C LDR X9, [X22]
	0x01E3C970 CMP W8, 0x2
	0x01E3C974 LDR X9, [X9 + 0xB8]
	0x01E3C978 LDR X9, [X9]
	0x01E3C97C STR X9, [X21 + 0x28]
	0x01E3C980 B.EQ 0x1E3CA08
	0x01E3C984 ADRP X9, 0x22BF000
	0x01E3C988 LDR X9, [X9 + 0x9D8]

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-32], X30
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move X0, X1
	010 Move X1, X2
	011 Move X2, X31
	012 Call String.Format, X0, X1
	013 Move X19, X0
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2280]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X1, X19
	019 Move X20, X0
	020 Call AssertException..ctor, X0, X1
	021 Move X0, 0x22C0000
	022 Move X0, [X0+2344]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X20
	026 Call 0x1C17DEC

Method: System.Void Check(System.Boolean condition, T0 arg0)

Disassembly:
	0x021838E4 BL 0x1C16CF4
	0x021838E8 ADRP X0, 0x1F70000
	0x021838EC LDR X0, [X0 + 0x598]
	0x021838F0 BL 0x1C16CF4
	0x021838F4 ADRP X0, 0x1F70000
	0x021838F8 LDR X0, [X0 + 0x6C0]
	0x021838FC BL 0x1C16CF4
	0x02183900 LDR X8, [X20 + 0x38]
	0x02183904 CBNZ X8, 0x2183910
	0x02183908 MOV X0, X20
	0x0218390C BL 0x1C5C6E0
	0x02183910 ADRP X8, 0x1F70000
	0x02183914 LDR X8, [X8 + 0x6C0]
	0x02183918 LDR X0, [X8]
	0x0218391C ADRP X8, 0x1F98000
	0x02183920 LDR X8, [X8 + 0x7F8]
	0x02183924 LDR W9, [X0 + 0xE0]
	0x02183928 LDR X24, [X8]
	0x0218392C CBNZ W9, 0x2183934
	0x02183930 BL 0x1C16DFC
	0x02183934 MOV X0, X24
	0x02183938 MOV X1, X31
	0x0218393C BL 0x338C698
	0x02183940 LDR X8, [X20 + 0x38]
	0x02183944 MOV X24, X0
	0x02183948 MOV X1, X31
	0x0218394C LDR X8, [X8]
	0x02183950 MOV X0, X8
	0x02183954 BL 0x338C698
	0x02183958 CBZ X24, 0x2183B58
	0x0218395C LDR X8, [X24]
	0x02183960 MOV X1, X0
	0x02183964 MOV X0, X24
	0x02183968 LDR X9, [X8 + 0x2A8]
	0x0218396C LDR X2, [X8 + 0x2B0]
	0x02183970 BLR X9
	0x02183974 TBZ X0, 0x0, 0x21839F8
	0x02183978 STR W22, [X31 + 0xC]
	0x0218397C LDR X8, [X20 + 0x38]
	0x02183980 ADD X1, X31, 0xC
	0x02183984 LDR X0, [X8 + 0x8]
	0x02183988 BL 0x1C16E04
	0x0218398C STR W21, [X31 + 0x8]
	0x02183990 LDR X8, [X20 + 0x38]
	0x02183994 MOV X21, X0
	0x02183998 ADD X1, X31, 0x8
	0x0218399C LDR X8, [X8 + 0x8]
	0x021839A0 MOV X0, X8
	0x021839A4 BL 0x1C16E04
	0x021839A8 ADRP X8, 0x1F98000
	0x021839AC LDR X8, [X8 + 0x7F0]
	0x021839B0 MOV X20, X0
	0x021839B4 LDR X8, [X8]
	0x021839B8 LDR W9, [X8 + 0xE0]
	0x021839BC CBNZ W9, 0x21839C8
	0x021839C0 MOV X0, X8
	0x021839C4 BL 0x1C16DFC
	0x021839C8 ADRP X8, 0x1F70000
	0x021839CC LDR X8, [X8 + 0x598]
	0x021839D0 LDR X8, [X8]
	0x021839D4 CBZ X21, 0x21839EC
	0x021839D8 LDR X9, [X21]
	0x021839DC LDRB W10, [X8 + 0x130]
	0x021839E0 LDRB W11, [X9 + 0x130]
	0x021839E4 CMP W11, W10

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X19, X2
	012 Move X20, X1
	013 Move W21, W0
	014 Move [X29-8], X8
	015 Move [X29-16], X1
	016 Move X8, [X2+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move X9, [X8]
	023 Add X10, X31, 0
	024 Move W2, [X9+252]
	025 Add X11, X2, 15
	026 And X11, X11, 0x1FFFFFFFF
	027 Subtract X10, X10, X11
	028 Add X31, X10, 0
	029 Move TEMP, X21
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {44}
	033 Move X8, [X22+40]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X31, X29, 0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X29, [X31+48]
	042 Move X30, [X31+56]
	043 Return 
	044 Move W9, [X9+40]
	045 Move X0, X10
	046 Move X21, X8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X29, 16
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move X20, X10
	051 Call 0x3EB2AC0
	052 Move X0, [X21]
	053 Move X1, X20
	054 Call 0x1C17E04
	055 Move X20, X0
	056 Move X0, 0x1F99000
	057 Move X0, [X0+1992]
	058 Call 0x1C17D08
	059 Move X1, X20
	060 Move X2, X31
	061 Call String.Format, X0, X1
	062 Move X20, X0
	063 Move X0, 0x1F79000
	064 Move X0, [X0+2280]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X20
	068 Move X2, X31
	069 Move X21, X0
	070 Call AssertException..ctor, X0, X1
	071 Move X0, X21
	072 Move X1, X19
	073 Call 0x1C17DEC
	074 Call 0x3EB2B20

Method: System.Void Check(System.Boolean condition, T0 arg0, T1 arg1)

Disassembly:
	0x021839E8 B.CS 0x2183AF0
	0x021839EC MOV X0, X31
	0x021839F0 CBNZ X20, 0x2183B08
	0x021839F4 B 0x2183B1C
	0x021839F8 CBZ X23, 0x2183B58
	0x021839FC LDR X8, [X20 + 0x38]
	0x02183A00 LDR X1, [X8 + 0x10]
	0x02183A04 LDRB W8, [X1 + 0x135]
	0x02183A08 TBNZ X8, 0x0, 0x2183A18
	0x02183A0C MOV X0, X1
	0x02183A10 BL 0x1C5C684
	0x02183A14 MOV X1, X0
	0x02183A18 LDR X8, [X23]
	0x02183A1C LDRH W9, [X8 + 0x12E]
	0x02183A20 CBZ X9, 0x2183A44
	0x02183A24 LDR X10, [X8 + 0xB0]
	0x02183A28 ADD X10, X10, 0x8
	0x02183A2C LDUR X11, [X10 - 0x8]
	0x02183A30 CMP X11, X1
	0x02183A34 B.EQ 0x2183A54
	0x02183A38 SUBS X9, X9, 0x1
	0x02183A3C ADD X10, X10, 0x10
	0x02183A40 B.NE 0x2183A2C
	0x02183A44 MOV X0, X23
	0x02183A48 MOV W2, W31
	0x02183A4C BL 0x1C5C788
	0x02183A50 B 0x2183A60
	0x02183A54 LDRSW X9, [X10]
	0x02183A58 ADD X8, X8, X9, 0x4, LSL
	0x02183A5C ADD X0, X8, 0x138
	0x02183A60 LDP X8, X3, [X0]
	0x02183A64 MOV X0, X23
	0x02183A68 MOV W1, W21
	0x02183A6C MOV W2, W22
	0x02183A70 BLR X8
	0x02183A74 TBNZ X0, 0x0, 0x2183B44
	0x02183A78 STR W21, [X31 + 0xC]
	0x02183A7C LDR X8, [X20 + 0x38]
	0x02183A80 ADD X1, X31, 0xC
	0x02183A84 LDR X0, [X8 + 0x8]
	0x02183A88 BL 0x1C16E04
	0x02183A8C STR W22, [X31 + 0x8]
	0x02183A90 LDR X8, [X20 + 0x38]
	0x02183A94 MOV X20, X0
	0x02183A98 ADD X1, X31, 0x8
	0x02183A9C LDR X8, [X8 + 0x8]
	0x02183AA0 MOV X0, X8
	0x02183AA4 BL 0x1C16E04
	0x02183AA8 MOV X1, X0
	0x02183AAC MOVZ W2, 0x1
	0x02183AB0 MOV X0, X20
	0x02183AB4 MOV X3, X31
	0x02183AB8 BL 0x3C623A0
	0x02183ABC ADRP X8, 0x1F98000
	0x02183AC0 LDR X8, [X8 + 0x7F0]
	0x02183AC4 MOV X20, X0
	0x02183AC8 LDR X8, [X8]
	0x02183ACC LDR W9, [X8 + 0xE0]
	0x02183AD0 CBNZ W9, 0x2183ADC
	0x02183AD4 MOV X0, X8
	0x02183AD8 BL 0x1C16DFC
	0x02183ADC MOV X0, X20
	0x02183AE0 MOV X1, X19
	0x02183AE4 MOV X2, X31
	0x02183AE8 BL 0x3C61F24
	0x02183AEC B 0x2183B44
	0x02183AF0 LDR X9, [X9 + 0xC8]
	0x02183AF4 ADD X9, X9, X10, 0x3, LSL
	0x02183AF8 LDUR X9, [X9 - 0x8]
	0x02183AFC CMP X9, X8
	0x02183B00 CSEL X0, X21, X31, EQ
	0x02183B04 CBZ X20, 0x2183B1C
	0x02183B08 LDR X9, [X20]
	0x02183B0C LDRB W10, [X8 + 0x130]
	0x02183B10 LDRB W11, [X9 + 0x130]
	0x02183B14 CMP W11, W10
	0x02183B18 B.CS 0x2183B24
	0x02183B1C MOV X1, X31
	0x02183B20 B 0x2183B38
	0x02183B24 LDR X9, [X9 + 0xC8]
	0x02183B28 ADD X9, X9, X10, 0x3, LSL
	0x02183B2C LDUR X9, [X9 - 0x8]
	0x02183B30 CMP X9, X8
	0x02183B34 CSEL X1, X20, X31, EQ
	0x02183B38 MOV X2, X19
	0x02183B3C MOV X3, X31
	0x02183B40 BL 0x3C622D8
	0x02183B44 LDP X20, X19, [X31 + 0x30]
	0x02183B48 LDP X22, X21, [X31 + 0x20]
	0x02183B4C LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 32
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X23+40]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move [X29-8], X8
	017 Move [X29-24], X2
	018 Move [X29-16], X1
	019 Move X8, [X3+56]
	020 Move W22, W0
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, [X19+56]
	026 Move X10, [X8]
	027 Move X9, [X8+8]
	028 Add X11, X31, 0
	029 Move W2, [X10+252]
	030 Move W9, [X9+252]
	031 Add X12, X2, 15
	032 And X12, X12, 0x1FFFFFFFF
	033 Subtract X11, X11, X12
	034 Add X31, X11, 0
	035 Add X13, X9, 15
	036 Add X12, X31, 0
	037 And X13, X13, 0x1FFFFFFFF
	038 Subtract X12, X12, X13
	039 Add X31, X12, 0
	040 Move TEMP, X22
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {57}
	044 Move X8, [X23+40]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X31, X29, 0
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X29, [X31+64]
	055 Move X30, [X31+72]
	056 Return 
	057 Move W10, [X10+40]
	058 Move X0, X11
	059 Move X22, X11
	060 Move X23, X9
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X10, X29, 16
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move X21, X12
	065 Move X24, X8
	066 Call 0x3EB2AC0
	067 Move X0, [X24]
	068 Move X1, X22
	069 Call 0x1C17E04
	070 Move X24, [X19+56]
	071 Move X22, X0
	072 Move X0, X21
	073 Move X2, X23
	074 Move X8, [X24+8]
	075 Move W8, [X8+40]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X8, X29, 24
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Call 0x3EB2AC0
	080 Move X0, [X24+8]
	081 Move X1, X21
	082 Call 0x1C17E04
	083 Move X20, X0
	084 Move X0, 0x1F99000
	085 Move X0, [X0+2000]
	086 Call 0x1C17D08
	087 Move X1, X22
	088 Move X2, X20
	089 Move X3, X31
	090 Call String.Format, X0, X1, X2
	091 Move X20, X0
	092 Move X0, 0x1F79000
	093 Move X0, [X0+2280]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X1, X20
	097 Move X2, X31
	098 Move X21, X0
	099 Call AssertException..ctor, X0, X1
	100 Move X0, X21
	101 Move X1, X19
	102 Call 0x1C17DEC
	103 Call 0x3EB2B20

Method: System.Void Check(System.Boolean condition, T0 arg0, T1 arg1, T2 arg2)

Disassembly:
	0x02183B50 LDR X30, [X31], #0x40
	0x02183B54 RET
	0x02183B58 BL 0x1C16F20
	0x02183B5C STR X30, [X31 - 0x40]!
	0x02183B60 STP X24, X23, [X31 + 0x10]
	0x02183B64 STP X22, X21, [X31 + 0x20]
	0x02183B68 STP X20, X19, [X31 + 0x30]
	0x02183B6C LDR X8, [X4 + 0x38]
	0x02183B70 MOV X20, X4
	0x02183B74 MOV X23, X3
	0x02183B78 MOV X19, X2
	0x02183B7C MOV W21, W1
	0x02183B80 MOV W22, W0
	0x02183B84 CBNZ X8, 0x2183BC8
	0x02183B88 ADRP X0, 0x1F98000
	0x02183B8C LDR X0, [X0 + 0x7F0]
	0x02183B90 BL 0x1C16CF4
	0x02183B94 ADRP X0, 0x1F98000
	0x02183B98 LDR X0, [X0 + 0x7F8]
	0x02183B9C BL 0x1C16CF4
	0x02183BA0 ADRP X0, 0x1F70000
	0x02183BA4 LDR X0, [X0 + 0x598]
	0x02183BA8 BL 0x1C16CF4
	0x02183BAC ADRP X0, 0x1F70000
	0x02183BB0 LDR X0, [X0 + 0x6C0]
	0x02183BB4 BL 0x1C16CF4
	0x02183BB8 LDR X8, [X20 + 0x38]
	0x02183BBC CBNZ X8, 0x2183BC8
	0x02183BC0 MOV X0, X20
	0x02183BC4 BL 0x1C5C6E0
	0x02183BC8 ADRP X8, 0x1F70000
	0x02183BCC LDR X8, [X8 + 0x6C0]
	0x02183BD0 LDR X0, [X8]
	0x02183BD4 ADRP X8, 0x1F98000
	0x02183BD8 LDR X8, [X8 + 0x7F8]
	0x02183BDC LDR W9, [X0 + 0xE0]
	0x02183BE0 LDR X24, [X8]
	0x02183BE4 CBNZ W9, 0x2183BEC
	0x02183BE8 BL 0x1C16DFC
	0x02183BEC MOV X0, X24
	0x02183BF0 MOV X1, X31
	0x02183BF4 BL 0x338C698
	0x02183BF8 LDR X8, [X20 + 0x38]
	0x02183BFC MOV X24, X0
	0x02183C00 MOV X1, X31
	0x02183C04 LDR X8, [X8]
	0x02183C08 MOV X0, X8
	0x02183C0C BL 0x338C698
	0x02183C10 CBZ X24, 0x2183E10
	0x02183C14 LDR X8, [X24]
	0x02183C18 MOV X1, X0
	0x02183C1C MOV X0, X24
	0x02183C20 LDR X9, [X8 + 0x2A8]
	0x02183C24 LDR X2, [X8 + 0x2B0]
	0x02183C28 BLR X9
	0x02183C2C TBZ X0, 0x0, 0x2183CB0
	0x02183C30 STR W22, [X31 + 0xC]
	0x02183C34 LDR X8, [X20 + 0x38]
	0x02183C38 ADD X1, X31, 0xC
	0x02183C3C LDR X0, [X8 + 0x8]
	0x02183C40 BL 0x1C16E04
	0x02183C44 STR W21, [X31 + 0x8]
	0x02183C48 LDR X8, [X20 + 0x38]
	0x02183C4C MOV X21, X0
	0x02183C50 ADD X1, X31, 0x8
	0x02183C54 LDR X8, [X8 + 0x8]
	0x02183C58 MOV X0, X8
	0x02183C5C BL 0x1C16E04
	0x02183C60 ADRP X8, 0x1F98000
	0x02183C64 LDR X8, [X8 + 0x7F0]
	0x02183C68 MOV X20, X0
	0x02183C6C LDR X8, [X8]
	0x02183C70 LDR W9, [X8 + 0xE0]
	0x02183C74 CBNZ W9, 0x2183C80
	0x02183C78 MOV X0, X8
	0x02183C7C BL 0x1C16DFC
	0x02183C80 ADRP X8, 0x1F70000
	0x02183C84 LDR X8, [X8 + 0x598]
	0x02183C88 LDR X8, [X8]
	0x02183C8C CBZ X21, 0x2183CA4
	0x02183C90 LDR X9, [X21]
	0x02183C94 LDRB W10, [X8 + 0x130]
	0x02183C98 LDRB W11, [X9 + 0x130]
	0x02183C9C CMP W11, W10
	0x02183CA0 B.CS 0x2183DA8
	0x02183CA4 MOV X0, X31
	0x02183CA8 CBNZ X20, 0x2183DC0
	0x02183CAC B 0x2183DD4
	0x02183CB0 CBZ X23, 0x2183E10
	0x02183CB4 LDR X8, [X20 + 0x38]
	0x02183CB8 LDR X1, [X8 + 0x10]
	0x02183CBC LDRB W8, [X1 + 0x135]
	0x02183CC0 TBNZ X8, 0x0, 0x2183CD0
	0x02183CC4 MOV X0, X1
	0x02183CC8 BL 0x1C5C684
	0x02183CCC MOV X1, X0
	0x02183CD0 LDR X8, [X23]
	0x02183CD4 LDRH W9, [X8 + 0x12E]
	0x02183CD8 CBZ X9, 0x2183CFC
	0x02183CDC LDR X10, [X8 + 0xB0]
	0x02183CE0 ADD X10, X10, 0x8
	0x02183CE4 LDUR X11, [X10 - 0x8]
	0x02183CE8 CMP X11, X1
	0x02183CEC B.EQ 0x2183D0C
	0x02183CF0 SUBS X9, X9, 0x1
	0x02183CF4 ADD X10, X10, 0x10
	0x02183CF8 B.NE 0x2183CE4
	0x02183CFC MOV X0, X23
	0x02183D00 MOV W2, W31
	0x02183D04 BL 0x1C5C788
	0x02183D08 B 0x2183D18
	0x02183D0C LDRSW X9, [X10]
	0x02183D10 ADD X8, X8, X9, 0x4, LSL
	0x02183D14 ADD X0, X8, 0x138
	0x02183D18 LDP X8, X3, [X0]
	0x02183D1C MOV X0, X23
	0x02183D20 MOV W1, W21

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Add X29, X31, 0
	013 Subtract X31, X31, 32
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X24+40]
	016 Move X19, X4
	017 Move X20, X3
	018 Move X21, X2
	019 Move [X29-8], X8
	020 Move [X29-24], X2
	021 Move [X29-16], X1
	022 Move [X29-32], X3
	023 Move X8, [X4+56]
	024 Move X22, X1
	025 Move W23, W0
	026 Compare X8, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X19
	029 Call 0x1C5D6E0
	030 Move X8, [X19+56]
	031 Move X9, [X8]
	032 Move X10, [X8+8]
	033 Move X11, [X8+16]
	034 Move W2, [X9+252]
	035 Move W26, [X10+252]
	036 Move W25, [X11+252]
	037 Add X10, X31, 0
	038 Add X11, X2, 15
	039 And X11, X11, 0x1FFFFFFFF
	040 Subtract X10, X10, X11
	041 Add X31, X10, 0
	042 Add X12, X26, 15
	043 Add X11, X31, 0
	044 And X12, X12, 0x1FFFFFFFF
	045 Subtract X11, X11, X12
	046 Add X31, X11, 0
	047 Add X13, X25, 15
	048 Add X12, X31, 0
	049 And X13, X13, 0x1FFFFFFFF
	050 Subtract X12, X12, X13
	051 Add X31, X12, 0
	052 Move TEMP, X23
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {72}
	056 Move X8, [X24+40]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X31, X29, 0
	060 Move X20, [X31+80]
	061 Move X19, [X31+88]
	062 Move X22, [X31+64]
	063 Move X21, [X31+72]
	064 Move X24, [X31+48]
	065 Move X23, [X31+56]
	066 Move X26, [X31+32]
	067 Move X25, [X31+40]
	068 Move X27, [X31+16]
	069 Move X29, [X31+96]
	070 Move X30, [X31+104]
	071 Return 
	072 Move W9, [X9+40]
	073 Move X0, X10
	074 Move X23, X11
	075 Move X24, X10
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X29, 16
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Move X22, X12
	080 Move X27, X8
	081 Call 0x3EB2AC0
	082 Move X0, [X27]
	083 Move X1, X24
	084 Call 0x1C17E04
	085 Move X27, [X19+56]
	086 Move X24, X0
	087 Move X0, X23
	088 Move X2, X26
	089 Move X8, [X27+8]
	090 Move W8, [X8+40]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X8, X29, 24
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Call 0x3EB2AC0
	095 Move X0, [X27+8]
	096 Move X1, X23
	097 Call 0x1C17E04
	098 Move X23, [X19+56]
	099 Move X21, X0
	100 Move X0, X22
	101 Move X2, X25
	102 Move X8, [X23+16]
	103 Move W8, [X8+40]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X8, X29, 32
	106 NotImplemented "Instruction CSEL not yet implemented."
	107 Call 0x3EB2AC0
	108 Move X0, [X23+16]
	109 Move X1, X22
	110 Call 0x1C17E04
	111 Move X20, X0
	112 Move X0, 0x1F99000
	113 Move X0, [X0+2008]
	114 Call 0x1C17D08
	115 Move X1, X24
	116 Move X2, X21
	117 Move X3, X20
	118 Move X4, X31
	119 Call String.Format, X0, X1, X2, X3
	120 Move X20, X0
	121 Move X0, 0x1F79000
	122 Move X0, [X0+2280]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X1, X20
	126 Move X2, X31
	127 Move X21, X0
	128 Call AssertException..ctor, X0, X1
	129 Move X0, X21
	130 Move X1, X19
	131 Call 0x1C17DEC
	132 Call 0x3EB2B20

Method: System.Void Check(System.Boolean condition, T0 arg0, T1 arg1, T2 arg2, T3 arg3)

Disassembly:
	0x02183D24 MOV W2, W22
	0x02183D28 BLR X8
	0x02183D2C TBNZ X0, 0x0, 0x2183DFC
	0x02183D30 STR W21, [X31 + 0xC]
	0x02183D34 LDR X8, [X20 + 0x38]
	0x02183D38 ADD X1, X31, 0xC
	0x02183D3C LDR X0, [X8 + 0x8]
	0x02183D40 BL 0x1C16E04
	0x02183D44 STR W22, [X31 + 0x8]
	0x02183D48 LDR X8, [X20 + 0x38]
	0x02183D4C MOV X20, X0
	0x02183D50 ADD X1, X31, 0x8
	0x02183D54 LDR X8, [X8 + 0x8]
	0x02183D58 MOV X0, X8
	0x02183D5C BL 0x1C16E04
	0x02183D60 MOV X1, X0
	0x02183D64 MOVZ W2, 0x1
	0x02183D68 MOV X0, X20
	0x02183D6C MOV X3, X31
	0x02183D70 BL 0x3C623A0
	0x02183D74 ADRP X8, 0x1F98000
	0x02183D78 LDR X8, [X8 + 0x7F0]
	0x02183D7C MOV X20, X0
	0x02183D80 LDR X8, [X8]
	0x02183D84 LDR W9, [X8 + 0xE0]
	0x02183D88 CBNZ W9, 0x2183D94
	0x02183D8C MOV X0, X8
	0x02183D90 BL 0x1C16DFC
	0x02183D94 MOV X0, X20
	0x02183D98 MOV X1, X19
	0x02183D9C MOV X2, X31
	0x02183DA0 BL 0x3C61F24
	0x02183DA4 B 0x2183DFC
	0x02183DA8 LDR X9, [X9 + 0xC8]
	0x02183DAC ADD X9, X9, X10, 0x3, LSL
	0x02183DB0 LDUR X9, [X9 - 0x8]
	0x02183DB4 CMP X9, X8
	0x02183DB8 CSEL X0, X21, X31, EQ
	0x02183DBC CBZ X20, 0x2183DD4
	0x02183DC0 LDR X9, [X20]
	0x02183DC4 LDRB W10, [X8 + 0x130]
	0x02183DC8 LDRB W11, [X9 + 0x130]
	0x02183DCC CMP W11, W10
	0x02183DD0 B.CS 0x2183DDC
	0x02183DD4 MOV X1, X31
	0x02183DD8 B 0x2183DF0
	0x02183DDC LDR X9, [X9 + 0xC8]
	0x02183DE0 ADD X9, X9, X10, 0x3, LSL
	0x02183DE4 LDUR X9, [X9 - 0x8]
	0x02183DE8 CMP X9, X8
	0x02183DEC CSEL X1, X20, X31, EQ
	0x02183DF0 MOV X2, X19
	0x02183DF4 MOV X3, X31
	0x02183DF8 BL 0x3C622D8
	0x02183DFC LDP X20, X19, [X31 + 0x30]
	0x02183E00 LDP X22, X21, [X31 + 0x20]
	0x02183E04 LDP X24, X23, [X31 + 0x10]
	0x02183E08 LDR X30, [X31], #0x40
	0x02183E0C RET
	0x02183E10 BL 0x1C16F20
	0x02183E14 STR X30, [X31 - 0x40]!
	0x02183E18 STP X24, X23, [X31 + 0x10]
	0x02183E1C STP X22, X21, [X31 + 0x20]
	0x02183E20 STP X20, X19, [X31 + 0x30]
	0x02183E24 LDR X8, [X4 + 0x38]
	0x02183E28 MOV X23, X4
	0x02183E2C MOV X22, X3
	0x02183E30 MOV X19, X2
	0x02183E34 MOV X20, X1
	0x02183E38 MOV X21, X0
	0x02183E3C CBNZ X8, 0x2183E80
	0x02183E40 ADRP X0, 0x1F98000
	0x02183E44 LDR X0, [X0 + 0x7F0]
	0x02183E48 BL 0x1C16CF4
	0x02183E4C ADRP X0, 0x1F98000
	0x02183E50 LDR X0, [X0 + 0x7F8]
	0x02183E54 BL 0x1C16CF4
	0x02183E58 ADRP X0, 0x1F70000
	0x02183E5C LDR X0, [X0 + 0x598]
	0x02183E60 BL 0x1C16CF4
	0x02183E64 ADRP X0, 0x1F70000
	0x02183E68 LDR X0, [X0 + 0x6C0]
	0x02183E6C BL 0x1C16CF4
	0x02183E70 LDR X8, [X23 + 0x38]
	0x02183E74 CBNZ X8, 0x2183E80
	0x02183E78 MOV X0, X23
	0x02183E7C BL 0x1C5C6E0
	0x02183E80 ADRP X8, 0x1F70000
	0x02183E84 LDR X8, [X8 + 0x6C0]
	0x02183E88 LDR X0, [X8]
	0x02183E8C ADRP X8, 0x1F98000
	0x02183E90 LDR X8, [X8 + 0x7F8]
	0x02183E94 LDR W9, [X0 + 0xE0]
	0x02183E98 LDR X24, [X8]
	0x02183E9C CBNZ W9, 0x2183EA4
	0x02183EA0 BL 0x1C16DFC
	0x02183EA4 MOV X0, X24
	0x02183EA8 MOV X1, X31
	0x02183EAC BL 0x338C698
	0x02183EB0 LDR X8, [X23 + 0x38]
	0x02183EB4 MOV X24, X0
	0x02183EB8 MOV X1, X31
	0x02183EBC LDR X8, [X8]
	0x02183EC0 MOV X0, X8
	0x02183EC4 BL 0x338C698
	0x02183EC8 CBZ X24, 0x218407C
	0x02183ECC LDR X8, [X24]
	0x02183ED0 MOV X1, X0
	0x02183ED4 MOV X0, X24
	0x02183ED8 LDR X9, [X8 + 0x2A8]
	0x02183EDC LDR X2, [X8 + 0x2B0]
	0x02183EE0 BLR X9
	0x02183EE4 TBZ X0, 0x0, 0x2183F30
	0x02183EE8 ADRP X8, 0x1F98000
	0x02183EEC LDR X8, [X8 + 0x7F0]
	0x02183EF0 LDR X0, [X8]
	0x02183EF4 LDR W8, [X0 + 0xE0]
	0x02183EF8 CBNZ W8, 0x2183F00
	0x02183EFC BL 0x1C16DFC
	0x02183F00 ADRP X8, 0x1F70000
	0x02183F04 LDR X8, [X8 + 0x598]
	0x02183F08 LDR X8, [X8]
	0x02183F0C CBZ X21, 0x2183F24
	0x02183F10 LDR X9, [X21]
	0x02183F14 LDRB W10, [X8 + 0x130]
	0x02183F18 LDRB W11, [X9 + 0x130]
	0x02183F1C CMP W11, W10
	0x02183F20 B.CS 0x2184018
	0x02183F24 MOV X0, X31
	0x02183F28 CBNZ X20, 0x2184030
	0x02183F2C B 0x2184044
	0x02183F30 CBZ X22, 0x218407C
	0x02183F34 LDR X8, [X23 + 0x38]
	0x02183F38 LDR X1, [X8 + 0x10]
	0x02183F3C LDRB W8, [X1 + 0x135]
	0x02183F40 TBNZ X8, 0x0, 0x2183F50
	0x02183F44 MOV X0, X1
	0x02183F48 BL 0x1C5C684
	0x02183F4C MOV X1, X0
	0x02183F50 LDR X8, [X22]
	0x02183F54 LDRH W9, [X8 + 0x12E]
	0x02183F58 CBZ X9, 0x2183F7C
	0x02183F5C LDR X10, [X8 + 0xB0]
	0x02183F60 ADD X10, X10, 0x8
	0x02183F64 LDUR X11, [X10 - 0x8]
	0x02183F68 CMP X11, X1
	0x02183F6C B.EQ 0x2183F8C
	0x02183F70 SUBS X9, X9, 0x1
	0x02183F74 ADD X10, X10, 0x10
	0x02183F78 B.NE 0x2183F64
	0x02183F7C MOV X0, X22
	0x02183F80 MOV W2, W31
	0x02183F84 BL 0x1C5C788
	0x02183F88 B 0x2183F98
	0x02183F8C LDRSW X9, [X10]
	0x02183F90 ADD X8, X8, X9, 0x4, LSL
	0x02183F94 ADD X0, X8, 0x138
	0x02183F98 LDP X8, X3, [X0]
	0x02183F9C MOV X0, X22
	0x02183FA0 MOV X1, X20
	0x02183FA4 MOV X2, X21
	0x02183FA8 BLR X8
	0x02183FAC TBZ X0, 0x0, 0x2183FC4
	0x02183FB0 LDP X20, X19, [X31 + 0x30]
	0x02183FB4 LDP X22, X21, [X31 + 0x20]
	0x02183FB8 LDP X24, X23, [X31 + 0x10]
	0x02183FBC LDR X30, [X31], #0x40
	0x02183FC0 RET
	0x02183FC4 MOVZ W2, 0x1
	0x02183FC8 MOV X0, X20
	0x02183FCC MOV X1, X21
	0x02183FD0 MOV X3, X31
	0x02183FD4 BL 0x3C623A0
	0x02183FD8 ADRP X8, 0x1F98000
	0x02183FDC LDR X8, [X8 + 0x7F0]
	0x02183FE0 MOV X20, X0
	0x02183FE4 LDR X8, [X8]
	0x02183FE8 LDR W9, [X8 + 0xE0]
	0x02183FEC CBNZ W9, 0x2183FF8
	0x02183FF0 MOV X0, X8
	0x02183FF4 BL 0x1C16DFC
	0x02183FF8 MOV X0, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X24+40]
	017 Move X19, X5
	018 Move X20, X4
	019 Move X21, X3
	020 Move [X29-8], X8
	021 Move [X29-24], X2
	022 Move [X29-16], X1
	023 Move [X29-40], X4
	024 Move [X29-32], X3
	025 Move X8, [X5+56]
	026 Move X22, X2
	027 Move X27, X1
	028 Move W23, W0
	029 Compare X8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, [X19+56]
	034 Move X9, [X8]
	035 Move X10, [X8+8]
	036 Move X11, [X8+16]
	037 Move X12, [X8+24]
	038 Move W8, [X9+252]
	039 Move W26, [X10+252]
	040 Move W9, [X11+252]
	041 Move W10, [X12+252]
	042 Add X12, X8, 15
	043 Add X11, X31, 0
	044 And X12, X12, 0x1FFFFFFFF
	045 Subtract X11, X11, X12
	046 Add X31, X11, 0
	047 Add X13, X26, 15
	048 Add X12, X31, 0
	049 And X13, X13, 0x1FFFFFFFF
	050 Subtract X28, X12, X13
	051 Add X31, X28, 0
	052 Add X13, X9, 15
	053 Add X12, X31, 0
	054 And X13, X13, 0x1FFFFFFFF
	055 Subtract X25, X12, X13
	056 Add X31, X25, 0
	057 Add X13, X10, 15
	058 Add X12, X31, 0
	059 And X13, X13, 0x1FFFFFFFF
	060 Subtract X12, X12, X13
	061 Add X31, X12, 0
	062 Move TEMP, X23
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {83}
	066 Move X8, [X24+40]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X31, X29, 0
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X28, [X31+16]
	079 Move X27, [X31+24]
	080 Move X29, [X31+96]
	081 Move X30, [X31+104]
	082 Return 
	083 Move X0, 0x1F71000
	084 Move X0, [X0+2512]
	085 Move [X29-56], X12
	086 Move [X29-48], X10
	087 Move [X29-72], X25
	088 Move [X29-64], X9
	089 Move X24, X11
	090 Move [X29-80], X26
	091 Move X23, X8
	092 Call 0x1C17D08
	093 Move W1, 4
	094 Call 0x1C17D6C
	095 Move X26, [X19+56]
	096 Move X25, X22
	097 Move X22, X0
	098 Move X0, X24
	099 Move X8, [X26]
	100 Move X2, X23
	101 Move W8, [X8+40]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X8, X29, 16
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Call 0x3EB2AC0
	106 Move X0, [X26]
	107 Move X1, X24
	108 Call 0x1C17E04
	109 Move X23, X0
	110 Move X0, X22
	111 Call 0x19913C0
	112 Move X0, X22
	113 Move X1, X23
	114 Call 0x19990B4
	115 Move X0, X22
	116 Move X1, X31
	117 Move X2, X23
	118 Call 0x1994444
	119 Move X23, [X19+56]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 Move X0, X28
	122 Move X8, [X23+8]
	123 Move W8, [X8+40]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X8, X29, 24
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Call 0x3EB2AC0
	128 Move X0, [X23+8]
	129 Move X1, X28
	130 Call 0x1C17E04
	131 Move X23, X0
	132 Move X0, X22
	133 Call 0x19913C0
	134 Move X0, X22
	135 Move X1, X23
	136 Call 0x19990B4
	137 Move W1, 1
	138 Move X0, X22
	139 Move X2, X23
	140 Call 0x1994444
	141 Move X23, [X19+56]
	142 Move X8, [X23+16]
	143 Move W8, [X8+40]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X8, X29, 32
	146 NotImplemented "Instruction CSEL not yet implemented."
	147 Move X21, [X29-72]
	148 Move X2, [X29-64]
	149 Move X0, X21
	150 Call 0x3EB2AC0
	151 Move X0, [X23+16]
	152 Move X1, X21
	153 Call 0x1C17E04
	154 Move X21, X0
	155 Move X0, X22
	156 Call 0x19913C0
	157 Move X0, X22
	158 Move X1, X21
	159 Call 0x19990B4
	160 Move W1, 2
	161 Move X0, X22
	162 Move X2, X21
	163 Call 0x1994444
	164 Move X21, [X19+56]
	165 Move X8, [X21+24]
	166 Move W8, [X8+40]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X8, X29, 40
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 Move X20, [X29-56]
	171 Move X2, [X29-48]
	172 Move X0, X20
	173 Call 0x3EB2AC0
	174 Move X0, [X21+24]
	175 Move X1, X20
	176 Call 0x1C17E04
	177 Move X20, X0
	178 Move X0, X22
	179 Call 0x19913C0
	180 Move X0, X22
	181 Move X1, X20
	182 Call 0x19990B4
	183 Move W1, 3
	184 Move X0, X22
	185 Move X2, X20
	186 Call 0x1994444
	187 Move X0, 0x1F99000
	188 Move X0, [X0+2016]
	189 Call 0x1C17D08
	190 Move X1, X22
	191 Move X2, X31
	192 Call String.Format, X0, X1
	193 Move X20, X0
	194 Move X0, 0x1F79000
	195 Move X0, [X0+2280]
	196 Call 0x1C17D08
	197 Call 0x1C17F10
	198 Move X1, X20
	199 Move X2, X31
	200 Move X21, X0
	201 Call AssertException..ctor, X0, X1
	202 Move X0, X21
	203 Move X1, X19
	204 Call 0x1C17DEC
	205 Call 0x3EB2B20

Method: System.Void Check(System.Boolean condition, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4)

Disassembly:
	0x02183FFC MOV X1, X19
	0x02184000 LDP X20, X19, [X31 + 0x30]
	0x02184004 LDP X22, X21, [X31 + 0x20]
	0x02184008 LDP X24, X23, [X31 + 0x10]
	0x0218400C MOV X2, X31
	0x02184010 LDR X30, [X31], #0x40
	0x02184014 B 0x3C61F24
	0x02184018 LDR X9, [X9 + 0xC8]
	0x0218401C ADD X9, X9, X10, 0x3, LSL
	0x02184020 LDUR X9, [X9 - 0x8]
	0x02184024 CMP X9, X8
	0x02184028 CSEL X0, X21, X31, EQ
	0x0218402C CBZ X20, 0x2184044
	0x02184030 LDR X9, [X20]
	0x02184034 LDRB W10, [X8 + 0x130]
	0x02184038 LDRB W11, [X9 + 0x130]
	0x0218403C CMP W11, W10
	0x02184040 B.CS 0x218404C
	0x02184044 MOV X1, X31
	0x02184048 B 0x2184060
	0x0218404C LDR X9, [X9 + 0xC8]
	0x02184050 ADD X9, X9, X10, 0x3, LSL
	0x02184054 LDUR X9, [X9 - 0x8]
	0x02184058 CMP X9, X8
	0x0218405C CSEL X1, X20, X31, EQ
	0x02184060 MOV X2, X19
	0x02184064 LDP X20, X19, [X31 + 0x30]
	0x02184068 LDP X22, X21, [X31 + 0x20]
	0x0218406C LDP X24, X23, [X31 + 0x10]
	0x02184070 MOV X3, X31
	0x02184074 LDR X30, [X31], #0x40
	0x02184078 B 0x3C622D8
	0x0218407C BL 0x1C16F20
	0x02184080 STP X29, X30, [X31 - 0x60]!
	0x02184084 STP X28, X27, [X31 + 0x10]
	0x02184088 STP X26, X25, [X31 + 0x20]
	0x0218408C STP X24, X23, [X31 + 0x30]
	0x02184090 STP X22, X21, [X31 + 0x40]
	0x02184094 STP X20, X19, [X31 + 0x50]
	0x02184098 ADD X29, X31, 0x0
	0x0218409C SUB X31, X31, 0x40
	0x021840A0 MRS X28, 0xC000
	0x021840A4 LDR X8, [X28 + 0x28]
	0x021840A8 MOV X20, X4
	0x021840AC MOV X25, X3
	0x021840B0 MOV X21, X1
	0x021840B4 STUR X8, [X29 - 0x8]
	0x021840B8 STP X1, X0, [X29 - 0x30]
	0x021840BC LDR X8, [X4 + 0x38]
	0x021840C0 MOV X22, X0
	0x021840C4 STUR X2, [X29 - 0x38]
	0x021840C8 CBNZ X8, 0x2184110
	0x021840CC ADRP X0, 0x1F97000
	0x021840D0 LDR X0, [X0 + 0x7F0]
	0x021840D4 BL 0x1C16CF4
	0x021840D8 ADRP X0, 0x1F97000
	0x021840DC LDR X0, [X0 + 0x7F8]
	0x021840E0 BL 0x1C16CF4
	0x021840E4 ADRP X0, 0x1F6F000
	0x021840E8 LDR X0, [X0 + 0x598]
	0x021840EC BL 0x1C16CF4
	0x021840F0 ADRP X0, 0x1F6F000
	0x021840F4 LDR X0, [X0 + 0x6C0]
	0x021840F8 BL 0x1C16CF4
	0x021840FC LDR X8, [X20 + 0x38]
	0x02184100 CBNZ X8, 0x2184110
	0x02184104 MOV X0, X20
	0x02184108 BL 0x1C5C6E0
	0x0218410C LDR X8, [X20 + 0x38]
	0x02184110 LDR X8, [X8 + 0x8]
	0x02184114 LDR W24, [X8 + 0xFC]
	0x02184118 ADD X8, X31, 0x0
	0x0218411C ADD X9, X24, 0xF
	0x02184120 AND X9, X9, 0x1FFFFFFFF
	0x02184124 SUB X26, X8, X9
	0x02184128 ADD X31, X26, 0x0
	0x0218412C ADD X8, X31, 0x0
	0x02184130 SUB X23, X8, X9
	0x02184134 ADD X31, X23, 0x0
	0x02184138 ADRP X8, 0x1F6F000
	0x0218413C LDR X8, [X8 + 0x6C0]
	0x02184140 LDR X0, [X8]
	0x02184144 ADRP X8, 0x1F97000
	0x02184148 LDR X8, [X8 + 0x7F8]
	0x0218414C LDR W9, [X0 + 0xE0]
	0x02184150 LDR X27, [X8]
	0x02184154 CBNZ W9, 0x218415C
	0x02184158 BL 0x1C16DFC
	0x0218415C MOV X0, X27
	0x02184160 MOV X1, X31
	0x02184164 BL 0x338C698
	0x02184168 LDR X8, [X20 + 0x38]
	0x0218416C MOV X27, X0
	0x02184170 MOV X1, X31
	0x02184174 LDR X8, [X8]
	0x02184178 MOV X0, X8
	0x0218417C BL 0x338C698
	0x02184180 CBZ X27, 0x2184464
	0x02184184 LDR X8, [X27]
	0x02184188 MOV X1, X0
	0x0218418C MOV X0, X27
	0x02184190 LDR X9, [X8 + 0x2A8]
	0x02184194 LDR X2, [X8 + 0x2B0]
	0x02184198 BLR X9
	0x0218419C LDR X19, [X20 + 0x38]
	0x021841A0 LDR X8, [X19 + 0x8]
	0x021841A4 LDR W8, [X8 + 0x28]
	0x021841A8 CMP W8, 0x0
	0x021841AC TBZ X0, 0x0, 0x2184268
	0x021841B0 SUB X8, X29, 0x28
	0x021841B4 CSEL X1, X22, X8, LT
	0x021841B8 MOV X0, X26
	0x021841BC MOV X2, X24
	0x021841C0 BL 0x3EB1AC0
	0x021841C4 LDR X0, [X19 + 0x8]
	0x021841C8 MOV X1, X26
	0x021841CC BL 0x1C16E04
	0x021841D0 LDR X19, [X20 + 0x38]
	0x021841D4 MOV X22, X0
	0x021841D8 MOV X0, X23
	0x021841DC MOV X2, X24
	0x021841E0 LDR X8, [X19 + 0x8]
	0x021841E4 LDR W8, [X8 + 0x28]
	0x021841E8 CMP W8, 0x0
	0x021841EC SUB X8, X29, 0x30
	0x021841F0 CSEL X1, X21, X8, LT
	0x021841F4 BL 0x3EB1AC0
	0x021841F8 LDR X0, [X19 + 0x8]
	0x021841FC MOV X1, X23
	0x02184200 BL 0x1C16E04
	0x02184204 ADRP X8, 0x1F97000
	0x02184208 LDR X8, [X8 + 0x7F0]
	0x0218420C MOV X20, X0
	0x02184210 LDR X8, [X8]
	0x02184214 LDR W9, [X8 + 0xE0]
	0x02184218 CBNZ W9, 0x2184224
	0x0218421C MOV X0, X8
	0x02184220 BL 0x1C16DFC
	0x02184224 ADRP X8, 0x1F6F000
	0x02184228 LDR X8, [X8 + 0x598]
	0x0218422C LDR X8, [X8]
	0x02184230 CBZ X22, 0x2184314
	0x02184234 LDR X9, [X22]
	0x02184238 LDRB W10, [X8 + 0x130]
	0x0218423C LDUR X2, [X29 - 0x38]
	0x02184240 LDRB W11, [X9 + 0x130]
	0x02184244 CMP W11, W10
	0x02184248 B.CC 0x2184318
	0x0218424C LDR X9, [X9 + 0xC8]
	0x02184250 ADD X9, X9, X10, 0x3, LSL
	0x02184254 LDUR X9, [X9 - 0x8]
	0x02184258 CMP X9, X8
	0x0218425C CSEL X0, X22, X31, EQ
	0x02184260 CBNZ X20, 0x2184320
	0x02184264 B 0x2184334
	0x02184268 SUB X8, X29, 0x30
	0x0218426C CSEL X1, X21, X8, LT
	0x02184270 MOV X0, X26
	0x02184274 MOV X2, X24
	0x02184278 BL 0x3EB1AC0
	0x0218427C LDR X8, [X19 + 0x8]
	0x02184280 MOV X0, X23
	0x02184284 MOV X2, X24
	0x02184288 LDR W8, [X8 + 0x28]
	0x0218428C CMP W8, 0x0
	0x02184290 SUB X8, X29, 0x28
	0x02184294 CSEL X1, X22, X8, LT
	0x02184298 BL 0x3EB1AC0
	0x0218429C CBZ X25, 0x2184464
	0x021842A0 LDR X1, [X19 + 0x10]
	0x021842A4 LDRB W8, [X1 + 0x135]
	0x021842A8 TBNZ X8, 0x0, 0x21842BC
	0x021842AC MOV X0, X1
	0x021842B0 BL 0x1C5C684
	0x021842B4 LDR X19, [X20 + 0x38]
	0x021842B8 MOV X1, X0
	0x021842BC LDR X8, [X19 + 0x8]
	0x021842C0 MOV X27, X26
	0x021842C4 MOV X19, X23
	0x021842C8 LDR W8, [X8 + 0x28]
	0x021842CC TBNZ X8, 0x1F, 0x21842D8
	0x021842D0 LDR X27, [X26]
	0x021842D4 LDR X19, [X23]
	0x021842D8 LDR X8, [X25]
	0x021842DC LDRH W9, [X8 + 0x12E]
	0x021842E0 CBZ X9, 0x2184304
	0x021842E4 LDR X10, [X8 + 0xB0]
	0x021842E8 ADD X10, X10, 0x8
	0x021842EC LDUR X11, [X10 - 0x8]
	0x021842F0 CMP X11, X1
	0x021842F4 B.EQ 0x218433C
	0x021842F8 SUBS X9, X9, 0x1
	0x021842FC ADD X10, X10, 0x10
	0x02184300 B.NE 0x21842EC
	0x02184304 MOV X0, X25
	0x02184308 MOV W2, W31
	0x0218430C BL 0x1C5C788
	0x02184310 B 0x2184348
	0x02184314 LDUR X2, [X29 - 0x38]
	0x02184318 MOV X0, X31
	0x0218431C CBZ X20, 0x2184334
	0x02184320 LDR X9, [X20]
	0x02184324 LDRB W10, [X8 + 0x130]
	0x02184328 LDRB W11, [X9 + 0x130]
	0x0218432C CMP W11, W10
	0x02184330 B.CS 0x2184418
	0x02184334 MOV X1, X31
	0x02184338 B 0x218442C
	0x0218433C LDRSW X9, [X10]
	0x02184340 ADD X8, X8, X9, 0x4, LSL
	0x02184344 ADD X0, X8, 0x138
	0x02184348 STP X27, X19, [X29 - 0x20]
	0x0218434C LDR X1, [X0 + 0x8]
	0x02184350 SUB X3, X29, 0x20
	0x02184354 SUB X4, X29, 0xC
	0x02184358 MOV X2, X25

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 112
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X20+40]
	017 Move X19, X6
	018 Move X21, X4
	019 Move X22, X3
	020 Move [X29-8], X8
	021 Move [X29-24], X2
	022 Move [X29-16], X1
	023 Move [X29-40], X4
	024 Move [X29-32], X3
	025 Move [X29-48], X5
	026 Move X8, [X6+56]
	027 Move X27, X2
	028 Move X24, X1
	029 Move W28, W0
	030 Compare X8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, X19
	033 Move X23, X5
	034 Call 0x1C5D6E0
	035 Move X8, [X19+56]
	036 Move X5, X23
	037 Move X9, [X8]
	038 Move X10, [X8+8]
	039 Move X11, [X8+16]
	040 Move X12, [X8+24]
	041 Move X13, [X8+32]
	042 Move W23, [X9+252]
	043 Move W8, [X10+252]
	044 Move W9, [X11+252]
	045 Move W10, [X12+252]
	046 Move W11, [X13+252]
	047 Add X13, X23, 15
	048 Add X12, X31, 0
	049 And X13, X13, 0x1FFFFFFFF
	050 Subtract X25, X12, X13
	051 Add X31, X25, 0
	052 Add X13, X8, 15
	053 Add X12, X31, 0
	054 And X13, X13, 0x1FFFFFFFF
	055 Subtract X26, X12, X13
	056 Add X31, X26, 0
	057 Add X13, X9, 15
	058 Add X12, X31, 0
	059 And X13, X13, 0x1FFFFFFFF
	060 Subtract X12, X12, X13
	061 Add X31, X12, 0
	062 Add X14, X10, 15
	063 Add X13, X31, 0
	064 And X14, X14, 0x1FFFFFFFF
	065 Subtract X13, X13, X14
	066 Add X31, X13, 0
	067 Add X15, X11, 15
	068 Add X14, X31, 0
	069 And X15, X15, 0x1FFFFFFFF
	070 Subtract X14, X14, X15
	071 Add X31, X14, 0
	072 Move TEMP, X28
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {93}
	076 Move X8, [X20+40]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X31, X29, 0
	080 Move X20, [X31+80]
	081 Move X19, [X31+88]
	082 Move X22, [X31+64]
	083 Move X21, [X31+72]
	084 Move X24, [X31+48]
	085 Move X23, [X31+56]
	086 Move X26, [X31+32]
	087 Move X25, [X31+40]
	088 Move X28, [X31+16]
	089 Move X27, [X31+24]
	090 Move X29, [X31+96]
	091 Move X30, [X31+104]
	092 Return 
	093 Move X0, 0x1F70000
	094 Move X0, [X0+2512]
	095 Move [X29-64], X14
	096 Move [X29-56], X11
	097 Move [X29-88], X13
	098 Move [X29-80], X10
	099 Move [X29-104], X12
	100 Move [X29-96], X9
	101 Move X28, X8
	102 Move [X29-72], X5
	103 Call 0x1C17D08
	104 Move W1, 5
	105 Call 0x1C17D6C
	106 Move X20, [X19+56]
	107 Move [X29-112], X22
	108 Move X22, X0
	109 Move X0, X25
	110 Move X8, [X20]
	111 Move X2, X23
	112 Move W8, [X8+40]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X8, X29, 16
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Call 0x3EB2AC0
	117 Move X0, [X20]
	118 Move X1, X25
	119 Call 0x1C17E04
	120 Move X23, X0
	121 Move X0, X22
	122 Call 0x19913C0
	123 Move X0, X22
	124 Move X1, X23
	125 Call 0x19990B4
	126 Move X0, X22
	127 Move X1, X31
	128 Move X2, X23
	129 Call 0x1994444
	130 Move X20, [X19+56]
	131 Move X0, X26
	132 Move X2, X28
	133 Move X8, [X20+8]
	134 Move W8, [X8+40]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X8, X29, 24
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Call 0x3EB2AC0
	139 Move X0, [X20+8]
	140 Move X1, X26
	141 Call 0x1C17E04
	142 Move X23, X0
	143 Move X0, X22
	144 Call 0x19913C0
	145 Move X0, X22
	146 Move X1, X23
	147 Call 0x19990B4
	148 Move W1, 1
	149 Move X0, X22
	150 Move X2, X23
	151 Call 0x1994444
	152 Move X20, [X19+56]
	153 Move X9, [X29-112]
	154 Move X23, [X29-104]
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move X8, [X20+16]
	157 Move X0, X23
	158 Move W8, [X8+40]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X8, X29, 32
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Call 0x3EB2AC0
	163 Move X0, [X20+16]
	164 Move X1, X23
	165 Call 0x1C17E04
	166 Move X23, X0
	167 Move X0, X22
	168 Call 0x19913C0
	169 Move X0, X22
	170 Move X1, X23
	171 Call 0x19990B4
	172 Move W1, 2
	173 Move X0, X22
	174 Move X2, X23
	175 Call 0x1994444
	176 Move X20, [X19+56]
	177 Move X8, [X20+24]
	178 Move W8, [X8+40]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Subtract X8, X29, 40
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Move X21, [X29-88]
	183 Move X2, [X29-80]
	184 Move X0, X21
	185 Call 0x3EB2AC0
	186 Move X0, [X20+24]
	187 Move X1, X21
	188 Call 0x1C17E04
	189 Move X21, X0
	190 Move X0, X22
	191 Call 0x19913C0
	192 Move X0, X22
	193 Move X1, X21
	194 Call 0x19990B4
	195 Move W1, 3
	196 Move X0, X22
	197 Move X2, X21
	198 Call 0x1994444
	199 Move X20, [X19+56]
	200 Move X9, [X29-72]
	201 Move X21, [X29-64]
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 Move X8, [X20+32]
	204 Move X0, X21
	205 Move W8, [X8+40]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X8, X29, 48
	208 NotImplemented "Instruction CSEL not yet implemented."
	209 Call 0x3EB2AC0
	210 Move X0, [X20+32]
	211 Move X1, X21
	212 Call 0x1C17E04
	213 Move X20, X0
	214 Move X0, X22
	215 Call 0x19913C0
	216 Move X0, X22
	217 Move X1, X20
	218 Call 0x19990B4
	219 Move W1, 4
	220 Move X0, X22
	221 Move X2, X20
	222 Call 0x1994444
	223 Move X0, 0x1F98000
	224 Move X0, [X0+2024]
	225 Call 0x1C17D08
	226 Move X1, X22
	227 Move X2, X31
	228 Call String.Format, X0, X1
	229 Move X20, X0
	230 Move X0, 0x1F78000
	231 Move X0, [X0+2280]
	232 Call 0x1C17D08
	233 Call 0x1C17F10
	234 Move X1, X20
	235 Move X2, X31
	236 Move X21, X0
	237 Call AssertException..ctor, X0, X1
	238 Move X0, X21
	239 Move X1, X19
	240 Call 0x1C17DEC
	241 Call 0x3EB2B20

Method: System.Void AlwaysFail(System.String error)

Disassembly:
	0x01E3C98C CMP W8, 0x3
	0x01E3C990 LDR X9, [X9]
	0x01E3C994 STR X9, [X21 + 0x30]
	0x01E3C998 B.LS 0x1E3CA08
	0x01E3C99C CMP W8, 0x4
	0x01E3C9A0 STR X20, [X21 + 0x38]
	0x01E3C9A4 B.EQ 0x1E3CA08
	0x01E3C9A8 ADRP X9, 0x22BB000
	0x01E3C9AC LDR X9, [X9 + 0x928]
	0x01E3C9B0 CMP W8, 0x5
	0x01E3C9B4 LDR X9, [X9]
	0x01E3C9B8 STR X9, [X21 + 0x40]
	0x01E3C9BC B.LS 0x1E3CA08
	0x01E3C9C0 ADRP X20, 0x22B7000
	0x01E3C9C4 LDR X20, [X20 + 0xA28]
	0x01E3C9C8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x22C0000
	006 Move X0, [X0+2280]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X19
	010 Move X20, X0
	011 Call AssertException..ctor, X0, X1
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2352]
	014 Call 0x1C17D08
	015 Move X1, X0
	016 Move X0, X20
	017 Call 0x1C17DEC

Method: System.Void AlwaysFail(System.Object error)

Disassembly:
	0x01E3C9CC MOV X1, X31
	0x01E3C9D0 STR X19, [X21 + 0x48]
	0x01E3C9D4 BL 0x32278CC
	0x01E3C9D8 LDR X8, [X20]
	0x01E3C9DC MOV X19, X0
	0x01E3C9E0 LDR W9, [X8 + 0xE0]
	0x01E3C9E4 CBNZ W9, 0x1E3C9F0
	0x01E3C9E8 MOV X0, X8
	0x01E3C9EC BL 0x1C16DFC
	0x01E3C9F0 MOV X0, X19
	0x01E3C9F4 LDP X20, X19, [X31 + 0x20]
	0x01E3C9F8 LDP X22, X21, [X31 + 0x10]
	0x01E3C9FC MOV X1, X31
	0x01E3CA00 LDR X30, [X31], #0x30
	0x01E3CA04 B 0x3C06048
	0x01E3CA08 BL 0x1C16F28
	0x01E3CA0C BL 0x1C16F20
	0x01E3CA10 STR X30, [X31 - 0x30]!
	0x01E3CA14 STP X22, X21, [X31 + 0x10]
	0x01E3CA18 STP X20, X19, [X31 + 0x20]
	0x01E3CA1C ADRP X21, 0x259C000
	0x01E3CA20 ADRP X22, 0x22B7000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfNotEqual {7}
	006 Move X19, X31
	007 Move X8, [X0]
	008 Move X9, [X8+360]
	009 Move X1, [X8+368]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X19, X0
	012 Move X0, 0x22C0000
	013 Move X0, [X0+2280]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X1, X19
	017 Move X20, X0
	018 Call AssertException..ctor, X0, X1
	019 Move X0, 0x22C0000
	020 Move X0, [X0+2360]
	021 Call 0x1C17D08
	022 Move X1, X0
	023 Move X0, X20
	024 Call 0x1C17DEC

Method: System.Void AlwaysFail(T error)

Disassembly:
	0x0218384C LDR X21, [X21]
	0x02183850 LDR X22, [X22]
	0x02183854 STP X21, X22, [X29 - 0x28]
	0x02183858 STP X19, X23, [X29 - 0x18]
	0x0218385C LDR X8, [X1 + 0x10]
	0x02183860 SUB X3, X29, 0x28
	0x02183864 MOV X2, X31
	0x02183868 MOV X4, X23
	0x0218386C BLR X8
	0x02183870 LDR X8, [X26 + 0x28]
	0x02183874 LDUR X9, [X29 - 0x8]
	0x02183878 CMP X8, X9
	0x0218387C B.NE 0x21838A0
	0x02183880 ADD X31, X29, 0x0
	0x02183884 LDP X20, X19, [X31 + 0x50]
	0x02183888 LDP X22, X21, [X31 + 0x40]
	0x0218388C LDP X24, X23, [X31 + 0x30]
	0x02183890 LDP X26, X25, [X31 + 0x20]
	0x02183894 LDR X27, [X31 + 0x10]
	0x02183898 LDP X29, X30, [X31], #0x60
	0x0218389C RET
	0x021838A0 BL 0x3EB1B20
	0x021838A4 STR X30, [X31 - 0x40]!
	0x021838A8 STP X24, X23, [X31 + 0x10]
	0x021838AC STP X22, X21, [X31 + 0x20]
	0x021838B0 STP X20, X19, [X31 + 0x30]
	0x021838B4 LDR X8, [X4 + 0x38]
	0x021838B8 MOV X20, X4
	0x021838BC MOV X23, X3
	0x021838C0 MOV X19, X2
	0x021838C4 MOV W21, W1
	0x021838C8 MOV W22, W0
	0x021838CC CBNZ X8, 0x2183910
	0x021838D0 ADRP X0, 0x1F98000
	0x021838D4 LDR X0, [X0 + 0x7F0]
	0x021838D8 BL 0x1C16CF4
	0x021838DC ADRP X0, 0x1F98000
	0x021838E0 LDR X0, [X0 + 0x7F8]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X29, X31, 0
	007 Move X20, X0
	008 Move X0, X1
	009 Move X19, X1
	010 Call 0x199D074
	011 Move X0, [X19+56]
	012 Move W1, W31
	013 Call 0x199C988
	014 Move W8, [X0+252]
	015 Add X9, X31, 0
	016 Add W8, W8, 16
	017 Add X8, X8, 15
	018 And X8, X8, 0x1FFFFFFFF
	019 Subtract X21, X9, X8
	020 Add X31, X21, 0
	021 Move X0, [X19+56]
	022 Move W1, W31
	023 Call 0x199C988
	024 Move X8, [X19+56]
	025 Move X2, X21
	026 Move X3, X20
	027 Move X1, [X8+8]
	028 Call 0x199D084
	029 Move X20, X0
	030 Move X0, 0x1F79000
	031 Move X0, [X0+2280]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X1, X20
	035 Move X2, X31
	036 Move X21, X0
	037 Call AssertException..ctor, X0, X1
	038 Move X0, X21
	039 Move X1, X19
	040 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition)

Disassembly:
	0x01E3CA24 LDRB W8, [X21 + 0xF29]
	0x01E3CA28 LDR X22, [X22 + 0xAC8]
	0x01E3CA2C MOV X19, X1
	0x01E3CA30 MOV X20, X0
	0x01E3CA34 TBNZ X8, 0x0, 0x1E3CA88
	0x01E3CA38 ADRP X0, 0x22B7000
	0x01E3CA3C LDR X0, [X0 + 0xA28]
	0x01E3CA40 BL 0x1C16CF4
	0x01E3CA44 ADRP X0, 0x22BF000
	0x01E3CA48 LDR X0, [X0 + 0x980]
	0x01E3CA4C BL 0x1C16CF4
	0x01E3CA50 ADRP X0, 0x22B7000
	0x01E3CA54 LDR X0, [X0 + 0xAC8]
	0x01E3CA58 BL 0x1C16CF4
	0x01E3CA5C ADRP X0, 0x22BF000

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x22C0000
	009 Move X0, [X0+2280]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Call AssertException..ctor, X0
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2368]
	016 Call 0x1C17D08
	017 Move X1, X0
	018 Move X0, X19
	019 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition, System.String error)

Disassembly:
	0x01E3CA60 LDR X0, [X0 + 0x9D8]
	0x01E3CA64 BL 0x1C16CF4
	0x01E3CA68 ADRP X0, 0x22BB000
	0x01E3CA6C LDR X0, [X0 + 0x928]
	0x01E3CA70 BL 0x1C16CF4
	0x01E3CA74 ADRP X0, 0x22BF000
	0x01E3CA78 LDR X0, [X0 + 0x9C8]
	0x01E3CA7C BL 0x1C16CF4
	0x01E3CA80 MOVZ W8, 0x1
	0x01E3CA84 STRB W8, [X21 + 0xF29]
	0x01E3CA88 LDR X0, [X22]
	0x01E3CA8C MOVZ W1, 0x6
	0x01E3CA90 BL 0x1C16D6C
	0x01E3CA94 CBZ X0, 0x1E3CB78
	0x01E3CA98 LDR X8, [X0 + 0x18]
	0x01E3CA9C MOV X21, X0
	0x01E3CAA0 CBZ W8, 0x1E3CB74
	0x01E3CAA4 ADRP X9, 0x22BF000

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-32], X30
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move X0, 0x22C0000
	010 Move X0, [X0+2280]
	011 Move X19, X1
	012 Call 0x1C17D08
	013 Call 0x1C17F10
	014 Move X1, X19
	015 Move X20, X0
	016 Call AssertException..ctor, X0, X1
	017 Move X0, 0x22C0000
	018 Move X0, [X0+2376]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X20
	022 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition, System.String format, System.Object[] args)

Disassembly:
	0x01E3CAA8 LDR X9, [X9 + 0x9C8]
	0x01E3CAAC ADRP X22, 0x22BF000
	0x01E3CAB0 LDR X9, [X9]
	0x01E3CAB4 LDR X22, [X22 + 0x980]
	0x01E3CAB8 STR X9, [X21 + 0x20]
	0x01E3CABC LDR X0, [X22]
	0x01E3CAC0 LDR W9, [X0 + 0xE0]
	0x01E3CAC4 CBNZ W9, 0x1E3CAD0
	0x01E3CAC8 BL 0x1C16DFC
	0x01E3CACC LDR X8, [X21 + 0x18]
	0x01E3CAD0 CMP W8, 0x1
	0x01E3CAD4 B.LS 0x1E3CB74
	0x01E3CAD8 LDR X9, [X22]
	0x01E3CADC CMP W8, 0x2
	0x01E3CAE0 LDR X9, [X9 + 0xB8]
	0x01E3CAE4 LDR X9, [X9]
	0x01E3CAE8 STR X9, [X21 + 0x28]
	0x01E3CAEC B.EQ 0x1E3CB74
	0x01E3CAF0 ADRP X9, 0x22BF000
	0x01E3CAF4 LDR X9, [X9 + 0x9D8]
	0x01E3CAF8 CMP W8, 0x3
	0x01E3CAFC LDR X9, [X9]

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {6}
	005 Return 
	006 Move [X31-32], X30
	007 Move [X31+16], X20
	008 Move [X31+24], X19
	009 Move X0, X1
	010 Move X1, X2
	011 Move X2, X31
	012 Call String.Format, X0, X1
	013 Move X19, X0
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2280]
	016 Call 0x1C17D08
	017 Call 0x1C17F10
	018 Move X1, X19
	019 Move X20, X0
	020 Call AssertException..ctor, X0, X1
	021 Move X0, 0x22C0000
	022 Move X0, [X0+2384]
	023 Call 0x1C17D08
	024 Move X1, X0
	025 Move X0, X20
	026 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition, T0 arg0)

Disassembly:
	0x021828F0 ADD X29, X31, 0x0
	0x021828F4 SUB X31, X31, 0x10
	0x021828F8 MRS X22, 0xC000
	0x021828FC LDR X8, [X22 + 0x28]
	0x02182900 MOV X19, X2
	0x02182904 MOV X20, X1
	0x02182908 MOV W21, W0
	0x0218290C STUR X8, [X29 - 0x8]
	0x02182910 STUR X1, [X29 - 0x10]
	0x02182914 LDR X8, [X2 + 0x38]
	0x02182918 CBNZ X8, 0x2182928
	0x0218291C MOV X0, X19
	0x02182920 BL 0x1C5C6E0
	0x02182924 LDR X8, [X19 + 0x38]
	0x02182928 LDR X9, [X8]
	0x0218292C ADD X10, X31, 0x0
	0x02182930 LDR W2, [X9 + 0xFC]
	0x02182934 ADD X11, X2, 0xF
	0x02182938 AND X11, X11, 0x1FFFFFFFF
	0x0218293C SUB X10, X10, X11
	0x02182940 ADD X31, X10, 0x0
	0x02182944 TBZ X21, 0x0, 0x218296C
	0x02182948 LDR X8, [X22 + 0x28]
	0x0218294C LDUR X9, [X29 - 0x8]
	0x02182950 CMP X8, X9
	0x02182954 B.NE 0x21829E4
	0x02182958 ADD X31, X29, 0x0
	0x0218295C LDP X20, X19, [X31 + 0x20]
	0x02182960 LDP X22, X21, [X31 + 0x10]
	0x02182964 LDP X29, X30, [X31], #0x30
	0x02182968 RET
	0x0218296C LDR W9, [X9 + 0x28]
	0x02182970 MOV X0, X10
	0x02182974 MOV X21, X8
	0x02182978 CMP W9, 0x0
	0x0218297C SUB X9, X29, 0x10
	0x02182980 CSEL X1, X20, X9, LT
	0x02182984 MOV X20, X10
	0x02182988 BL 0x3EB1AC0
	0x0218298C LDR X0, [X21]
	0x02182990 MOV X1, X20
	0x02182994 BL 0x1C16E04
	0x02182998 MOV X20, X0
	0x0218299C ADRP X0, 0x1F99000
	0x021829A0 LDR X0, [X0 + 0x7C8]
	0x021829A4 BL 0x1C16D08
	0x021829A8 MOV X1, X20
	0x021829AC MOV X2, X31
	0x021829B0 BL 0x321EFD0
	0x021829B4 MOV X20, X0
	0x021829B8 ADRP X0, 0x1F79000
	0x021829BC LDR X0, [X0 + 0x8E8]
	0x021829C0 BL 0x1C16D08
	0x021829C4 BL 0x1C16F10
	0x021829C8 MOV X1, X20
	0x021829CC MOV X2, X31
	0x021829D0 MOV X21, X0
	0x021829D4 BL 0x1E3B714
	0x021829D8 MOV X0, X21
	0x021829DC MOV X1, X19
	0x021829E0 BL 0x1C16DEC
	0x021829E4 BL 0x3EB1B20
	0x021829E8 STP X29, X30, [X31 - 0x40]!
	0x021829EC STP X24, X23, [X31 + 0x10]
	0x021829F0 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X19, X2
	012 Move X20, X1
	013 Move W21, W0
	014 Move [X29-8], X8
	015 Move [X29-16], X1
	016 Move X8, [X2+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move X9, [X8]
	023 Add X10, X31, 0
	024 Move W2, [X9+252]
	025 Add X11, X2, 15
	026 And X11, X11, 0x1FFFFFFFF
	027 Subtract X10, X10, X11
	028 Add X31, X10, 0
	029 Move TEMP, X21
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {44}
	033 Move X8, [X22+40]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X31, X29, 0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X29, [X31+48]
	042 Move X30, [X31+56]
	043 Return 
	044 Move W9, [X9+40]
	045 Move X0, X10
	046 Move X21, X8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X29, 16
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Move X20, X10
	051 Call 0x3EB2AC0
	052 Move X0, [X21]
	053 Move X1, X20
	054 Call 0x1C17E04
	055 Move X20, X0
	056 Move X0, 0x1F9A000
	057 Move X0, [X0+1992]
	058 Call 0x1C17D08
	059 Move X1, X20
	060 Move X2, X31
	061 Call String.Format, X0, X1
	062 Move X20, X0
	063 Move X0, 0x1F7A000
	064 Move X0, [X0+2280]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X20
	068 Move X2, X31
	069 Move X21, X0
	070 Call AssertException..ctor, X0, X1
	071 Move X0, X21
	072 Move X1, X19
	073 Call 0x1C17DEC
	074 Call 0x3EB2B20

Method: System.Void Always(System.Boolean condition, T0 arg0, T1 arg1)

Disassembly:
	0x021829F4 STP X20, X19, [X31 + 0x30]
	0x021829F8 ADD X29, X31, 0x0
	0x021829FC SUB X31, X31, 0x20
	0x02182A00 MRS X23, 0xC000
	0x02182A04 LDR X8, [X23 + 0x28]
	0x02182A08 MOV X19, X3
	0x02182A0C MOV X20, X2
	0x02182A10 MOV X21, X1
	0x02182A14 STUR X8, [X29 - 0x8]
	0x02182A18 STP X2, X1, [X29 - 0x18]
	0x02182A1C LDR X8, [X3 + 0x38]
	0x02182A20 MOV W22, W0
	0x02182A24 CBNZ X8, 0x2182A34
	0x02182A28 MOV X0, X19
	0x02182A2C BL 0x1C5C6E0
	0x02182A30 LDR X8, [X19 + 0x38]
	0x02182A34 LDP X10, X9, [X8]
	0x02182A38 ADD X11, X31, 0x0
	0x02182A3C LDR W2, [X10 + 0xFC]
	0x02182A40 LDR W9, [X9 + 0xFC]
	0x02182A44 ADD X12, X2, 0xF
	0x02182A48 AND X12, X12, 0x1FFFFFFFF
	0x02182A4C SUB X11, X11, X12
	0x02182A50 ADD X31, X11, 0x0
	0x02182A54 ADD X13, X9, 0xF
	0x02182A58 ADD X12, X31, 0x0
	0x02182A5C AND X13, X13, 0x1FFFFFFFF
	0x02182A60 SUB X12, X12, X13
	0x02182A64 ADD X31, X12, 0x0
	0x02182A68 TBZ X22, 0x0, 0x2182A94
	0x02182A6C LDR X8, [X23 + 0x28]
	0x02182A70 LDUR X9, [X29 - 0x8]
	0x02182A74 CMP X8, X9
	0x02182A78 B.NE 0x2182B4C
	0x02182A7C ADD X31, X29, 0x0
	0x02182A80 LDP X20, X19, [X31 + 0x30]
	0x02182A84 LDP X22, X21, [X31 + 0x20]
	0x02182A88 LDP X24, X23, [X31 + 0x10]
	0x02182A8C LDP X29, X30, [X31], #0x40
	0x02182A90 RET
	0x02182A94 LDR W10, [X10 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move W21, W2
	009 Move X20, X1
	010 Move W22, W0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move TEMP, X22
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {25}
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Return 
	025 Move [X31+12], W21
	026 Move X8, [X19+56]
	027 Add X1, X31, 12
	028 Move X0, [X8+8]
	029 Call 0x1C17E04
	030 Move X21, X0
	031 Move X0, 0x1F9A000
	032 Move X0, [X0+2000]
	033 Call 0x1C17D08
	034 Move X1, X20
	035 Move X2, X21
	036 Move X3, X31
	037 Call String.Format, X0, X1, X2
	038 Move X20, X0
	039 Move X0, 0x1F7A000
	040 Move X0, [X0+2280]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X1, X20
	044 Move X2, X31
	045 Move X21, X0
	046 Call AssertException..ctor, X0, X1
	047 Move X0, X21
	048 Move X1, X19
	049 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition, T0 arg0, T1 arg1, T2 arg2)

Disassembly:
	0x02182E54 MOV X0, X24
	0x02182E58 LDR X8, [X26]
	0x02182E5C MOV X2, X23
	0x02182E60 LDR W8, [X8 + 0x28]
	0x02182E64 CMP W8, 0x0
	0x02182E68 SUB X8, X29, 0x10
	0x02182E6C CSEL X1, X27, X8, LT
	0x02182E70 BL 0x3EB1AC0
	0x02182E74 LDR X0, [X26]
	0x02182E78 MOV X1, X24
	0x02182E7C BL 0x1C16E04
	0x02182E80 MOV X23, X0
	0x02182E84 MOV X0, X22
	0x02182E88 BL 0x19903C0
	0x02182E8C MOV X0, X22
	0x02182E90 MOV X1, X23
	0x02182E94 BL 0x19980B4
	0x02182E98 MOV X0, X22
	0x02182E9C MOV X1, X31
	0x02182EA0 MOV X2, X23
	0x02182EA4 BL 0x1993444
	0x02182EA8 LDR X23, [X19 + 0x38]
	0x02182EAC LDUR X2, [X29 - 0x50]
	0x02182EB0 MOV X0, X28
	0x02182EB4 LDR X8, [X23 + 0x8]
	0x02182EB8 LDR W8, [X8 + 0x28]
	0x02182EBC CMP W8, 0x0
	0x02182EC0 SUB X8, X29, 0x18
	0x02182EC4 CSEL X1, X25, X8, LT
	0x02182EC8 BL 0x3EB1AC0
	0x02182ECC LDR X0, [X23 + 0x8]
	0x02182ED0 MOV X1, X28
	0x02182ED4 BL 0x1C16E04
	0x02182ED8 MOV X23, X0
	0x02182EDC MOV X0, X22
	0x02182EE0 BL 0x19903C0
	0x02182EE4 MOV X0, X22
	0x02182EE8 MOV X1, X23
	0x02182EEC BL 0x19980B4
	0x02182EF0 MOVZ W1, 0x1
	0x02182EF4 MOV X0, X22
	0x02182EF8 MOV X2, X23
	0x02182EFC BL 0x1993444
	0x02182F00 LDR X23, [X19 + 0x38]
	0x02182F04 LDR X8, [X23 + 0x10]
	0x02182F08 LDR W8, [X8 + 0x28]
	0x02182F0C CMP W8, 0x0
	0x02182F10 SUB X8, X29, 0x20
	0x02182F14 CSEL X1, X21, X8, LT
	0x02182F18 LDP X21, X2, [X29 - 0x48]
	0x02182F1C MOV X0, X21
	0x02182F20 BL 0x3EB1AC0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W21, W3
	011 Move W22, W2
	012 Move X20, X1
	013 Move W23, W0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move TEMP, X23
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {30}
	022 Move X20, [X31+48]
	023 Move X19, [X31+56]
	024 Move X22, [X31+32]
	025 Move X21, [X31+40]
	026 Move X30, [X31+16]
	027 Move X23, [X31+24]
	028 Add X31, X31, 64
	029 Return 
	030 Move [X31+12], W22
	031 Move X8, [X19+56]
	032 Add X1, X31, 12
	033 Move X0, [X8+8]
	034 Call 0x1C17E04
	035 Move [X31+8], W21
	036 Move X8, [X19+56]
	037 Move X21, X0
	038 Add X1, X31, 8
	039 Move X8, [X8+16]
	040 Move X0, X8
	041 Call 0x1C17E04
	042 Move X22, X0
	043 Move X0, 0x1F9A000
	044 Move X0, [X0+2008]
	045 Call 0x1C17D08
	046 Move X1, X20
	047 Move X2, X21
	048 Move X3, X22
	049 Move X4, X31
	050 Call String.Format, X0, X1, X2, X3
	051 Move X20, X0
	052 Move X0, 0x1F7A000
	053 Move X0, [X0+2280]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X1, X20
	057 Move X2, X31
	058 Move X21, X0
	059 Call AssertException..ctor, X0, X1
	060 Move X0, X21
	061 Move X1, X19
	062 Call 0x1C17DEC

Method: System.Void Always(System.Boolean condition, T0 arg0, T1 arg1, T2 arg2, T3 arg3)

Disassembly:
	0x0218341C LDR X8, [X20 + 0x38]
	0x02183420 MOV X1, X19
	0x02183424 LDP X20, X19, [X31 + 0x10]
	0x02183428 MOV X0, X21
	0x0218342C LDR X3, [X8 + 0x8]
	0x02183430 MOV X2, X31
	0x02183434 LDP X30, X21, [X31], #0x20
	0x02183438 B 0x21836A8
	0x0218343C STP X29, X30, [X31 - 0x50]!
	0x02183440 STP X26, X25, [X31 + 0x10]
	0x02183444 STP X24, X23, [X31 + 0x20]
	0x02183448 STP X22, X21, [X31 + 0x30]
	0x0218344C STP X20, X19, [X31 + 0x40]
	0x02183450 ADD X29, X31, 0x0
	0x02183454 SUB X31, X31, 0x30
	0x02183458 MRS X25, 0xC000
	0x0218345C LDR X8, [X25 + 0x28]
	0x02183460 MOV X19, X2
	0x02183464 MOV X21, X1
	0x02183468 MOV X23, X0
	0x0218346C STUR X8, [X29 - 0x8]
	0x02183470 STP X1, X0, [X29 - 0x30]
	0x02183474 LDR X26, [X2 + 0x38]
	0x02183478 CBNZ X26, 0x218349C
	0x0218347C ADRP X0, 0x1F98000
	0x02183480 LDR X0, [X0 + 0x7F0]
	0x02183484 BL 0x1C16CF4
	0x02183488 LDR X26, [X19 + 0x38]
	0x0218348C CBNZ X26, 0x218349C
	0x02183490 MOV X0, X19
	0x02183494 BL 0x1C5C6E0
	0x02183498 LDR X26, [X19 + 0x38]
	0x0218349C LDR X8, [X26]
	0x021834A0 ADD X9, X31, 0x0
	0x021834A4 LDR W24, [X8 + 0xFC]
	0x021834A8 ADD X10, X24, 0xF
	0x021834AC AND X10, X10, 0x1FFFFFFFF
	0x021834B0 SUB X20, X9, X10
	0x021834B4 ADD X31, X20, 0x0
	0x021834B8 ADD X9, X31, 0x0
	0x021834BC SUB X22, X9, X10
	0x021834C0 ADD X31, X22, 0x0
	0x021834C4 LDR W8, [X8 + 0x28]
	0x021834C8 MOV X0, X20
	0x021834CC MOV X2, X24
	0x021834D0 CMP W8, 0x0
	0x021834D4 SUB X8, X29, 0x28
	0x021834D8 CSEL X1, X23, X8, LT
	0x021834DC BL 0x3EB1AC0
	0x021834E0 LDR X8, [X26]
	0x021834E4 MOV X0, X22
	0x021834E8 MOV X2, X24
	0x021834EC LDR W8, [X8 + 0x28]
	0x021834F0 CMP W8, 0x0
	0x021834F4 SUB X8, X29, 0x30
	0x021834F8 CSEL X1, X21, X8, LT
	0x021834FC BL 0x3EB1AC0
	0x02183500 ADRP X8, 0x1F98000
	0x02183504 LDR X8, [X8 + 0x7F0]
	0x02183508 LDR X0, [X8]
	0x0218350C LDR W8, [X0 + 0xE0]
	0x02183510 CBNZ W8, 0x218351C
	0x02183514 BL 0x1C16DFC
	0x02183518 LDR X26, [X19 + 0x38]
	0x0218351C LDP X8, X1, [X26]
	0x02183520 LDR W8, [X8 + 0x28]
	0x02183524 LDR X0, [X1]
	0x02183528 TBNZ X8, 0x1F, 0x2183534
	0x0218352C LDR X20, [X20]
	0x02183530 LDR X22, [X22]
	0x02183534 STP X20, X22, [X29 - 0x20]
	0x02183538 STUR X31, [X29 - 0x10]
	0x0218353C LDR X8, [X1 + 0x10]
	0x02183540 SUB X3, X29, 0x20
	0x02183544 MOV X2, X31
	0x02183548 MOV X4, X31
	0x0218354C BLR X8
	0x02183550 LDR X8, [X25 + 0x28]
	0x02183554 LDUR X9, [X29 - 0x8]
	0x02183558 CMP X8, X9
	0x0218355C B.NE 0x218357C
	0x02183560 ADD X31, X29, 0x0
	0x02183564 LDP X20, X19, [X31 + 0x40]
	0x02183568 LDP X22, X21, [X31 + 0x30]
	0x0218356C LDP X24, X23, [X31 + 0x20]
	0x02183570 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X19, X5
	010 Move X20, X4
	011 Move X21, X3
	012 Move X22, X2
	013 Move X23, X1
	014 Move W24, W0
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move TEMP, X24
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {31}
	023 Move X20, [X31+48]
	024 Move X19, [X31+56]
	025 Move X22, [X31+32]
	026 Move X21, [X31+40]
	027 Move X24, [X31+16]
	028 Move X23, [X31+24]
	029 Move X30, [X31+64]
	030 Return 
	031 Move X0, 0x1F71000
	032 Move X0, [X0+2512]
	033 Call 0x1C17D08
	034 Move W1, 4
	035 Call 0x1C17D6C
	036 Move X24, X22
	037 Move X22, X0
	038 Call 0x19913C0
	039 Move X0, X22
	040 Move X1, X23
	041 Call 0x19990B4
	042 Move X0, X22
	043 Move X1, X31
	044 Move X2, X23
	045 Call 0x1994444
	046 Move [X31+8], X24
	047 Move X8, [X19+56]
	048 Add X1, X31, 8
	049 Move X0, [X8+8]
	050 Call 0x1C17E04
	051 Move X23, X0
	052 Move X0, X22
	053 Call 0x19913C0
	054 Move X0, X22
	055 Move X1, X23
	056 Call 0x19990B4
	057 Move W1, 1
	058 Move X0, X22
	059 Move X2, X23
	060 Call 0x1994444
	061 Move X0, X22
	062 Call 0x19913C0
	063 Move X0, X22
	064 Move X1, X21
	065 Call 0x19990B4
	066 Move W1, 2
	067 Move X0, X22
	068 Move X2, X21
	069 Call 0x1994444
	070 Move X0, X22
	071 Call 0x19913C0
	072 Move X0, X22
	073 Move X1, X20
	074 Call 0x19990B4
	075 Move W1, 3
	076 Move X0, X22
	077 Move X2, X20
	078 Call 0x1994444
	079 Move X0, 0x1F99000
	080 Move X0, [X0+2016]
	081 Call 0x1C17D08
	082 Move X1, X22
	083 Move X2, X31
	084 Call String.Format, X0, X1
	085 Move X20, X0
	086 Move X0, 0x1F79000
	087 Move X0, [X0+2280]
	088 Call 0x1C17D08
	089 Call 0x1C17F10
	090 Move X1, X20
	091 Move X2, X31
	092 Move X21, X0
	093 Call AssertException..ctor, X0, X1
	094 Move X0, X21
	095 Move X1, X19
	096 Call 0x1C17DEC

