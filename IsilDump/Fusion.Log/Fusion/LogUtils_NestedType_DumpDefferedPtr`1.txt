Type: Fusion.LogUtils/DumpDefferedPtr`1

Method: System.Void .ctor(T* ptr)

Disassembly:
	0x02B40998 MOVN X26, 0x0
	0x02B4099C LDR X27, [X20 + 0x10]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x02B409A0 CBZ X27, 0x2B40A5C
	0x02B409A4 LDR X24, [X19 + 0x20]
	0x02B409A8 ADD X0, X31, 0xF8
	0x02B409AC MOVZ W2, 0xE8
	0x02B409B0 MOV X1, X22
	0x02B409B4 BL 0x3EB1AC0
	0x02B409B8 LDR X8, [X24 + 0xC0]
	0x02B409BC ADD X1, X31, 0xF8
	0x02B409C0 LDR X0, [X8 + 0x20]
	0x02B409C4 BL 0x1C16E04
	0x02B409C8 LDR X8, [X19 + 0x20]
	0x02B409CC MOV X24, X0
	0x02B409D0 LDR X8, [X8 + 0xC0]
	0x02B409D4 LDR X8, [X8 + 0x20]
	0x02B409D8 LDRB W9, [X8 + 0x135]
	0x02B409DC TBNZ X9, 0x0, 0x2B409EC
	0x02B409E0 MOV X0, X8
	0x02B409E4 BL 0x1C5C684
	0x02B409E8 MOV X8, X0
	0x02B409EC LDR W9, [X27 + 0x18]
	0x02B409F0 CMP W21, W9
	0x02B409F4 B.CS 0x2B40A60
	0x02B409F8 ADD X1, X27, X25
	0x02B409FC MOVZ W2, 0xE8
	0x02B40A00 MOV X0, X23
	0x02B40A04 STP X8, X26, [X31]
	0x02B40A08 BL 0x3EB1AC0
	0x02B40A0C ADD X0, X31, 0x0
	0x02B40A10 MOV X1, X24
	0x02B40A14 MOV X2, X31
	0x02B40A18 BL 0x33D55D0
	0x02B40A1C TBNZ X0, 0x0, 0x2B40A38
	0x02B40A20 LDRSW X8, [X20 + 0x18]
	0x02B40A24 ADD X21, X21, 0x1
	0x02B40A28 ADD X25, X25, 0xE8
	0x02B40A2C CMP X21, X8
	0x02B40A30 B.LT 0x2B4099C
	0x02B40A34 MOVN W21, 0x0
	0x02B40A38 MOV W0, W21
	0x02B40A3C ADD X31, X31, 0x1E0
	0x02B40A40 LDP X20, X19, [X31 + 0x50]
	0x02B40A44 LDP X22, X21, [X31 + 0x40]
	0x02B40A48 LDP X24, X23, [X31 + 0x30]
	0x02B40A4C LDP X26, X25, [X31 + 0x20]
	0x02B40A50 LDP X30, X27, [X31 + 0x10]
	0x02B40A54 LDR X29, [X31], #0x60
	0x02B40A58 RET
	0x02B40A5C BL 0x1C16F20
	0x02B40A60 BL 0x1C16F28
	0x02B40A64 SUB X31, X31, 0x1F0
	0x02B40A68 STP X29, X30, [X31 + 0x1D0]
	0x02B40A6C STP X20, X19, [X31 + 0x1E0]
	0x02B40A70 MOV X19, X2
	0x02B40A74 MOV X20, X0
	0x02B40A78 ADD X0, X31, 0x0
	0x02B40A7C MOVZ W2, 0xE8
	0x02B40A80 BL 0x3EB1AC0
	0x02B40A84 LDR X8, [X19 + 0x20]
	0x02B40A88 ADD X0, X31, 0xE8
	0x02B40A8C ADD X1, X31, 0x0
	0x02B40A90 MOVZ W2, 0xE8
	0x02B40A94 LDR X8, [X8 + 0xC0]
	0x02B40A98 LDR X19, [X8 + 0x78]
	0x02B40A9C BL 0x3EB1AC0
	0x02B40AA0 ADD X1, X31, 0xE8
	0x02B40AA4 MOV X0, X20
	0x02B40AA8 MOV W2, W31
	0x02B40AAC MOV X3, X19
	0x02B40AB0 BL 0x2B4094C
	0x02B40AB4 LDP X20, X19, [X31 + 0x1E0]
	0x02B40AB8 LDP X29, X30, [X31 + 0x1D0]
	0x02B40ABC ADD X31, X31, 0x1F0
	0x02B40AC0 RET
	0x02B40AC4 STR X30, [X31 - 0x20]!
	0x02B40AC8 STP X20, X19, [X31 + 0x10]
	0x02B40ACC LDR X8, [X3 + 0x20]
	0x02B40AD0 AND W2, W2, 0x1
	0x02B40AD4 MOV W19, W1
	0x02B40AD8 MOV X20, X0
	0x02B40ADC LDR X8, [X8 + 0xC0]
	0x02B40AE0 LDR X3, [X8 + 0x48]
	0x02B40AE4 BL 0x2B40AF8
	0x02B40AE8 STR W19, [X20 + 0x18]
	0x02B40AEC LDP X20, X19, [X31 + 0x10]
	0x02B40AF0 LDR X30, [X31], #0x20
	0x02B40AF4 RET
	0x02B40AF8 STP X30, X21, [X31 - 0x20]!
	0x02B40AFC STP X20, X19, [X31 + 0x10]
	0x02B40B00 LDR X8, [X0 + 0x10]
	0x02B40B04 CBZ X8, 0x2B40B70
	0x02B40B08 LDR W8, [X8 + 0x18]
	0x02B40B0C MOV W21, W1
	0x02B40B10 CMP W8, W1

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 16
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, 0x189C000
	014 Move X19, X1
	015 Move X22, X0
	016 Move [X29-8], X8
	017 Move W8, [X20+1269]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x15B4000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0x15B4000
	026 Move X0, [X0+2096]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1269], W8
	030 Move X0, [X19+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+16]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move W8, [X0+252]
	046 Add X9, X31, 0
	047 Add W8, W8, 16
	048 Add X8, X8, 15
	049 And X8, X8, 0x1FFFFFFFF
	050 Subtract X20, X9, X8
	051 Add X31, X20, 0
	052 Move X8, [X22]
	053 Compare X8, 0
	054 JumpIfEqual {103}
	055 Move X8, 0x15B4000
	056 Move X8, [X8+2288]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X21, X0
	061 Call StringBuilder..ctor, X0
	062 Move X0, [X19+32]
	063 Move X22, [X22]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X8, [X0+192]
	071 Move X23, [X8+16]
	072 Move W8, [X23+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X23
	078 Call 0x1C5D684
	079 Move X23, X0
	080 Move X0, [X19+32]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X8, [X0+192]
	088 Subtract X4, X29, 16
	089 Move X0, X23
	090 Move X2, X20
	091 Move X1, [X8+24]
	092 Move X3, X22
	093 Move X5, X21
	094 Move [X29-16], X21
	095 Call 0x1C18728
	096 Compare X21, 0
	097 JumpIfEqual {119}
	098 Move X8, [X21]
	099 Move X0, X21
	100 Move X9, [X8+360]
	101 Move X1, [X8+368]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, 0x15B4000
	104 Move X8, [X8+2096]
	105 Move X0, [X8]
	106 Move X8, [X24+40]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X31, X29, 0
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X29, [X31+64]
	117 Move X30, [X31+72]
	118 Return X0
	119 Call 0x1C17F20
	120 Call 0x3EB2B20

