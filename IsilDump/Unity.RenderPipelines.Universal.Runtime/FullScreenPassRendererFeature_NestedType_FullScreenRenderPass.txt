Type: FullScreenPassRendererFeature/FullScreenRenderPass

Method: System.Void .ctor(System.String passName)

Disassembly:
	0x03A01D04 BL 0x3C0E0D8
	0x03A01D08 B 0x3A01D34
	0x03A01D0C CBZ X19, 0x3A01D4C
	0x03A01D10 LDR X8, [X19]
	0x03A01D14 MOV X0, X19
	0x03A01D18 LDP X9, X1, [X8 + 0x188]
	0x03A01D1C BLR X9
	0x03A01D20 LDR X8, [X19]
	0x03A01D24 MOV W20, W0
	0x03A01D28 MOV X0, X19
	0x03A01D2C LDP X9, X1, [X8 + 0x1A8]
	0x03A01D30 BLR X9
	0x03A01D34 MOV W8, W20
	0x03A01D38 LDP X20, X19, [X31 + 0x10]
	0x03A01D3C BFM X8, X0, 0x20, 0x1F
	0x03A01D40 MOV X0, X8
	0x03A01D44 LDR X30, [X31], #0x20
	0x03A01D48 RET
	0x03A01D4C BL 0x1C16F20
	0x03A01D50 STP D15, D14, [X31 - 0x60]!
	0x03A01D54 STP D13, D12, [X31 + 0x10]
	0x03A01D58 STP D11, D10, [X31 + 0x20]
	0x03A01D5C STP D9, D8, [X31 + 0x30]
	0x03A01D60 STP X29, X30, [X31 + 0x40]
	0x03A01D64 STP X20, X19, [X31 + 0x50]
	0x03A01D68 SUB X31, X31, 0x2D0
	0x03A01D6C MOVI V0.2D, 0x0
	0x03A01D70 STP V0, V0, [X31 + 0x270]
	0x03A01D74 STP V0, V0, [X31 + 0x250]
	0x03A01D78 STP V0, V0, [X31 + 0x230]
	0x03A01D7C STP V0, V0, [X31 + 0x210]
	0x03A01D80 STP V0, V0, [X31 + 0x1F0]
	0x03A01D84 STP V0, V0, [X31 + 0x1D0]
	0x03A01D88 MOV X19, X0
	0x03A01D8C LDR X0, [X0 + 0x38]
	0x03A01D90 CBZ X0, 0x3A01FE4
	0x03A01D94 MOV X1, X31
	0x03A01D98 BL 0x3C32E90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E1000
	007 Move X21, 0x753000
	008 Move W8, [X22+3911]
	009 Move X21, [X21+4080]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x750000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x753000
	020 Move X0, [X0+4080]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3911], W8
	024 Move X0, [X21]
	025 Move X21, 0x750000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call ScriptableRenderPass..ctor, X0
	034 Move X0, [X21]
	035 Call 0x1C17F10
	036 Move X1, X20
	037 Move X2, X31
	038 Move X21, X0
	039 Call ProfilingSampler..ctor, X0, X1
	040 Move [X19+56], X21
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 

Method: System.Void SetupMembers(UnityEngine.Material material, System.Int32 passIndex, System.Boolean copyActiveColor, System.Boolean bindDepthStencilAttachment)

Disassembly:
	0x03A0202C MOVZ W8, 0x1
	0x03A02030 STRB W8, [X21 + 0xF50]
	0x03A02034 LDR X1, [X22]
	0x03A02038 MOV X0, X19
	0x03A0203C BL 0x21A3894
	0x03A02040 STR X0, [X19 + 0x38]
	0x03A02044 LDR X0, [X20]

ISIL:
	001 And W8, W3, 1
	002 And W9, W4, 1
	003 Move [X0+224], X1
	004 Move [X0+232], W2
	005 Move [X0+236], W8
	006 Move [X0+237], W9
	007 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A020E0 B 0x3C03FA4
	0x03A020E4 CBZ X19, 0x3A0210C
	0x03A020E8 MOV X0, X19
	0x03A020EC LDP X20, X19, [X31 + 0x10]
	0x03A020F0 FMOV S0, W31
	0x03A020F4 FMOV S1, W31
	0x03A020F8 FMOV S2, 1
	0x03A020FC FMOV S3, 1
	0x03A02100 MOV X1, X31
	0x03A02104 LDP X30, X21, [X31], #0x20
	0x03A02108 B 0x3C03E70
	0x03A0210C BL 0x1C16F20
	0x03A02110 STR X30, [X31 - 0x30]!
	0x03A02114 STP X22, X21, [X31 + 0x10]
	0x03A02118 STP X20, X19, [X31 + 0x20]
	0x03A0211C ADRP X22, 0x9DF000
	0x03A02120 ADRP X21, 0x6F1000
	0x03A02124 LDRB W8, [X22 + 0xF51]
	0x03A02128 LDR X21, [X21 + 0x598]
	0x03A0212C MOV X20, X2
	0x03A02130 MOV X19, X0
	0x03A02134 TBNZ X8, 0x0, 0x3A0214C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X1, X31
	006 Move X20, X2
	007 Move X19, X0
	008 Call ScriptableRenderPass.ResetTarget, X0
	009 Move W8, [X19+236]
	010 Compare W8, 0
	011 JumpIfEqual {23}
	012 Move W8, [X20+288]
	013 Move V1, [X20+256]
	014 Move V0, [X20+272]
	015 Move V2, [X20+15]
	016 Add X1, X31, 0
	017 Move X0, X19
	018 Move [X31+48], W8
	019 Move [X31+16], V1
	020 Move [X31+24], V0
	021 Move [X31], V2
	022 Call FullScreenRenderPass.ReAllocate, X0, X1
	023 Move X20, [X31+80]
	024 Move X19, [X31+88]
	025 Move X30, [X31+64]
	026 Add X31, X31, 96
	027 Return 

Method: System.Void ReAllocate(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03A02138 ADRP X0, 0x6F1000
	0x03A0213C LDR X0, [X0 + 0x598]
	0x03A02140 BL 0x1C16CF4
	0x03A02144 MOVZ W8, 0x1
	0x03A02148 STRB W8, [X22 + 0xF51]
	0x03A0214C LDR X0, [X21]
	0x03A02150 LDR X21, [X19 + 0x38]
	0x03A02154 LDR W8, [X0 + 0xE0]
	0x03A02158 CBNZ W8, 0x3A02160
	0x03A0215C BL 0x1C16DFC
	0x03A02160 MOV X0, X20
	0x03A02164 MOV X1, X21
	0x03A02168 MOV X2, X31
	0x03A0216C BL 0x3C3883C
	0x03A02170 TBZ X0, 0x0, 0x3A021C8
	0x03A02174 MOV X0, X19
	0x03A02178 BL 0x3A02074
	0x03A0217C MOV X0, X19
	0x03A02180 BL 0x3A01D50
	0x03A02184 LDRB W8, [X19 + 0x48]
	0x03A02188 CBNZ W8, 0x3A021A8
	0x03A0218C LDR X8, [X19 + 0x40]
	0x03A02190 CBZ X8, 0x3A021D8
	0x03A02194 LDR X0, [X19 + 0x38]
	0x03A02198 CBZ X0, 0x3A021D8
	0x03A0219C LDR V0, [X8 + 0x48]
	0x03A021A0 MOV X1, X31
	0x03A021A4 BL 0x3C038DC
	0x03A021A8 LDR X8, [X19 + 0x40]
	0x03A021AC CBZ X8, 0x3A021D8
	0x03A021B0 LDR V0, [X8 + 0x4C]
	0x03A021B4 LDP X20, X19, [X31 + 0x20]
	0x03A021B8 LDP X22, X21, [X31 + 0x10]
	0x03A021BC MOV X0, X31
	0x03A021C0 LDR X30, [X31], #0x30
	0x03A021C4 B 0x3C42638
	0x03A021C8 LDP X20, X19, [X31 + 0x20]
	0x03A021CC LDP X22, X21, [X31 + 0x10]
	0x03A021D0 LDR X30, [X31], #0x30
	0x03A021D4 RET
	0x03A021D8 BL 0x1C16F20
	0x03A021DC STR X30, [X31 - 0x30]!
	0x03A021E0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E0000
	007 Move X21, 0x753000
	008 Move W8, [X22+3912]
	009 Move X21, [X21+16]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x753000
	017 Move X0, [X0+16]
	018 Call 0x1C17CF4
	019 Move X0, 0x753000
	020 Move X0, [X0+24]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3912], W8
	024 Move X22, 0x753000
	025 Move X22, [X22+24]
	026 Move W8, 1
	027 Move X0, X19
	028 Move W1, W31
	029 Move X2, X31
	030 Move [X19+8], W8
	031 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X6, [X22]
	038 Add X0, X20, 240
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move S0, W31
	045 Move W5, 1
	046 Move W2, W31
	047 Move W3, W31
	048 Move W4, W31
	049 Move X7, X31
	050 Move X30, [X31+48]
	051 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	052 Return 

Method: System.Void Dispose()

Disassembly:
	0x03A02074 STP X30, X21, [X31 - 0x20]!
	0x03A02078 STP X20, X19, [X31 + 0x10]
	0x03A0207C MOV X19, X0
	0x03A02080 BL 0x3A01C84
	0x03A02084 LDR X8, [X19 + 0x40]

ISIL:
	001 Move X0, [X0+240]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call RTHandle.Release, X0
	006 Return 
	007 Return 

Method: System.Void ExecuteCopyColorPass(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle sourceTexture)

Disassembly:
	0x03A021E4 STP X20, X19, [X31 + 0x20]
	0x03A021E8 ADRP X22, 0x9DF000
	0x03A021EC ADRP X21, 0x6F1000
	0x03A021F0 LDRB W8, [X22 + 0xF52]
	0x03A021F4 LDR X21, [X21 + 0x598]
	0x03A021F8 MOV X19, X2
	0x03A021FC MOV X20, X0
	0x03A02200 TBNZ X8, 0x0, 0x3A02218
	0x03A02204 ADRP X0, 0x6F1000
	0x03A02208 LDR X0, [X0 + 0x598]
	0x03A0220C BL 0x1C16CF4
	0x03A02210 MOVZ W8, 0x1
	0x03A02214 STRB W8, [X22 + 0xF52]
	0x03A02218 LDR X0, [X21]
	0x03A0221C LDR X20, [X20 + 0x38]
	0x03A02220 LDR W8, [X0 + 0xE0]
	0x03A02224 CBNZ W8, 0x3A0222C
	0x03A02228 BL 0x1C16DFC
	0x03A0222C MOV X0, X19
	0x03A02230 MOV X1, X20
	0x03A02234 MOV X2, X31
	0x03A02238 BL 0x3C3883C
	0x03A0223C TBZ X0, 0x0, 0x3A02258
	0x03A02240 LDP X20, X19, [X31 + 0x20]
	0x03A02244 LDP X22, X21, [X31 + 0x10]
	0x03A02248 FMOV S0, W31
	0x03A0224C MOV X0, X31
	0x03A02250 LDR X30, [X31], #0x30
	0x03A02254 B 0x3C42638
	0x03A02258 LDP X20, X19, [X31 + 0x20]
	0x03A0225C LDP X22, X21, [X31 + 0x10]
	0x03A02260 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9E0000
	007 Move X22, 0x751000
	008 Move W8, [X21+3913]
	009 Move X22, [X22+3624]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x751000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3913], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move S0, 1
	033 Move S1, 1
	034 Move S2, W31
	035 Move S3, W31
	036 Move S4, W31
	037 Move W2, W31
	038 Move X3, X31
	039 Move X30, [X31+48]
	040 Call Blitter.BlitTexture, X0, X1, X2, V0, X3
	041 Return 

Method: System.Void ExecuteMainPass(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle sourceTexture, UnityEngine.Material material, System.Int32 passIndex)

Disassembly:
	0x03A02264 RET
	0x03A02268 STP X30, X23, [X31 - 0x30]!
	0x03A0226C STP X22, X21, [X31 + 0x10]
	0x03A02270 STP X20, X19, [X31 + 0x20]
	0x03A02274 ADRP X23, 0x9DF000
	0x03A02278 ADRP X21, 0x752000
	0x03A0227C ADRP X20, 0x752000
	0x03A02280 ADRP X22, 0x752000
	0x03A02284 LDRB W8, [X23 + 0xF53]
	0x03A02288 LDR X21, [X21 + 0x40]
	0x03A0228C LDR X20, [X20 + 0x48]
	0x03A02290 LDR X22, [X22 + 0x50]
	0x03A02294 MOV X19, X0
	0x03A02298 TBNZ X8, 0x0, 0x3A022D4
	0x03A0229C ADRP X0, 0x752000
	0x03A022A0 LDR X0, [X0 + 0x40]
	0x03A022A4 BL 0x1C16CF4
	0x03A022A8 ADRP X0, 0x752000
	0x03A022AC LDR X0, [X0 + 0x48]
	0x03A022B0 BL 0x1C16CF4
	0x03A022B4 ADRP X0, 0x752000
	0x03A022B8 LDR X0, [X0 + 0x58]
	0x03A022BC BL 0x1C16CF4
	0x03A022C0 ADRP X0, 0x752000
	0x03A022C4 LDR X0, [X0 + 0x50]
	0x03A022C8 BL 0x1C16CF4
	0x03A022CC MOVZ W8, 0x1
	0x03A022D0 STRB W8, [X23 + 0xF53]
	0x03A022D4 STRB W31, [X19 + 0x48]
	0x03A022D8 LDR X0, [X21]
	0x03A022DC ADRP X23, 0x752000
	0x03A022E0 LDR X23, [X23 + 0x58]
	0x03A022E4 BL 0x1C16F10
	0x03A022E8 LDR X2, [X20]
	0x03A022EC MOV X1, X19
	0x03A022F0 MOV X3, X31
	0x03A022F4 MOV X20, X0
	0x03A022F8 BL 0x2A77A28
	0x03A022FC LDR X0, [X22]
	0x03A02300 LDR W8, [X0 + 0xE0]
	0x03A02304 CBNZ W8, 0x3A0230C
	0x03A02308 BL 0x1C16DFC
	0x03A0230C MOV X0, X20
	0x03A02310 MOV X1, X31
	0x03A02314 BL 0x3C55468
	0x03A02318 LDR X0, [X21]
	0x03A0231C BL 0x1C16F10
	0x03A02320 LDR X2, [X23]
	0x03A02324 MOV X1, X19
	0x03A02328 MOV X3, X31
	0x03A0232C MOV X20, X0
	0x03A02330 BL 0x2A77A28
	0x03A02334 MOV X0, X20
	0x03A02338 LDP X20, X19, [X31 + 0x20]
	0x03A0233C LDP X22, X21, [X31 + 0x10]
	0x03A02340 MOV X1, X31
	0x03A02344 LDP X30, X23, [X31], #0x30
	0x03A02348 B 0x3C55650
	0x03A0234C STP X30, X23, [X31 - 0x30]!
	0x03A02350 STP X22, X21, [X31 + 0x10]
	0x03A02354 STP X20, X19, [X31 + 0x20]
	0x03A02358 ADRP X23, 0x9DF000
	0x03A0235C ADRP X21, 0x752000
	0x03A02360 ADRP X20, 0x752000
	0x03A02364 ADRP X22, 0x752000
	0x03A02368 LDRB W8, [X23 + 0xF54]
	0x03A0236C LDR X21, [X21 + 0x40]
	0x03A02370 LDR X20, [X20 + 0x48]
	0x03A02374 LDR X22, [X22 + 0x50]
	0x03A02378 MOV X19, X0
	0x03A0237C TBNZ X8, 0x0, 0x3A023B8
	0x03A02380 ADRP X0, 0x752000
	0x03A02384 LDR X0, [X0 + 0x40]
	0x03A02388 BL 0x1C16CF4
	0x03A0238C ADRP X0, 0x752000
	0x03A02390 LDR X0, [X0 + 0x48]
	0x03A02394 BL 0x1C16CF4
	0x03A02398 ADRP X0, 0x752000
	0x03A0239C LDR X0, [X0 + 0x58]
	0x03A023A0 BL 0x1C16CF4
	0x03A023A4 ADRP X0, 0x752000
	0x03A023A8 LDR X0, [X0 + 0x50]
	0x03A023AC BL 0x1C16CF4
	0x03A023B0 MOVZ W8, 0x1
	0x03A023B4 STRB W8, [X23 + 0xF54]
	0x03A023B8 LDR X0, [X21]
	0x03A023BC ADRP X23, 0x752000
	0x03A023C0 LDR X23, [X23 + 0x58]
	0x03A023C4 BL 0x1C16F10
	0x03A023C8 LDR X2, [X20]
	0x03A023CC MOV X1, X19
	0x03A023D0 MOV X3, X31
	0x03A023D4 MOV X20, X0
	0x03A023D8 BL 0x2A77A28
	0x03A023DC LDR X0, [X22]
	0x03A023E0 LDR W8, [X0 + 0xE0]
	0x03A023E4 CBNZ W8, 0x3A023EC
	0x03A023E8 BL 0x1C16DFC
	0x03A023EC MOV X0, X20
	0x03A023F0 MOV X1, X31
	0x03A023F4 BL 0x3C5555C
	0x03A023F8 LDR X0, [X21]
	0x03A023FC BL 0x1C16F10
	0x03A02400 LDR X2, [X23]
	0x03A02404 MOV X1, X19
	0x03A02408 MOV X3, X31
	0x03A0240C MOV X20, X0
	0x03A02410 BL 0x2A77A28
	0x03A02414 MOV X0, X20
	0x03A02418 MOV X1, X31
	0x03A0241C BL 0x3C55744
	0x03A02420 LDR X0, [X19 + 0x38]
	0x03A02424 CBZ X0, 0x3A0245C
	0x03A02428 FMOV S0, W31
	0x03A0242C FMOV S1, W31
	0x03A02430 FMOV S2, 1
	0x03A02434 FMOV S3, 1
	0x03A02438 MOV X1, X31
	0x03A0243C BL 0x3C03E70
	0x03A02440 LDR X0, [X19 + 0x38]
	0x03A02444 CBZ X0, 0x3A0245C
	0x03A02448 LDP X20, X19, [X31 + 0x20]
	0x03A0244C LDP X22, X21, [X31 + 0x10]
	0x03A02450 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+160], X26
	004 Move [X31+168], X25
	005 Move [X31+176], X24
	006 Move [X31+184], X23
	007 Move [X31+192], X22
	008 Move [X31+200], X21
	009 Move [X31+208], X20
	010 Move [X31+216], X19
	011 Move X23, 0x9E0000
	012 Move X25, 0x752000
	013 Move W8, [X23+3914]
	014 Move X25, [X25+4072]
	015 Move W19, W3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x752000
	024 Move X0, [X0+4072]
	025 Call 0x1C17CF4
	026 Move X0, 0x753000
	027 Move X0, [X0+32]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3914], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X25]
	037 Move X8, [X0+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfEqual {154}
	041 Move X26, 0x753000
	042 Move X26, [X26+32]
	043 Move X1, X31
	044 Call MaterialPropertyBlock.Clear, X0
	045 Compare X22, 0
	046 JumpIfEqual {74}
	047 Move X0, [X25]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X25]
	053 Move X8, [X26]
	054 Move X9, [X0+184]
	055 Move W10, [X8+224]
	056 Move X23, [X9]
	057 Compare W10, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X26]
	062 Move X8, [X8+184]
	063 Move X0, X22
	064 Move X1, X31
	065 Move W24, [X8+160]
	066 Call RTHandle.op_Implicit, X0
	067 Compare X23, 0
	068 JumpIfEqual {154}
	069 Move X2, X0
	070 Move X0, X23
	071 Move W1, W24
	072 Move X3, X31
	073 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	074 Move X0, [X25]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X25]
	080 Move X8, [X26]
	081 Move X9, [X0+184]
	082 Move W10, [X8+224]
	083 Move X22, [X9]
	084 Compare W10, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Compare X22, 0
	089 JumpIfEqual {154}
	090 Move X8, [X26]
	091 Move S0, 1
	092 Move S1, 1
	093 Move S2, W31
	094 Move X8, [X8+184]
	095 Move S3, W31
	096 Move X0, X22
	097 Move X2, X31
	098 Move W1, [X8+164]
	099 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	100 Move X22, 0x9D7000
	101 Move W8, [X22+2752]
	102 Compare W8, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0x6F6000
	105 Move X0, [X0+624]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X22+2752], W8
	109 Move X8, 0x6F6000
	110 Move X8, [X8+624]
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move V1, [X8+96]
	114 Move V0, [X8+112]
	115 Move V2, [X8+64]
	116 Move V3, [X8+80]
	117 Move [X31+112], V1
	118 Move [X31+120], V0
	119 Move [X31+80], V2
	120 Move [X31+88], V3
	121 Compare X21, 0
	122 JumpIfEqual {154}
	123 Move X8, [X25]
	124 Move V0, [X31+80]
	125 Move V1, [X31+96]
	126 Move V2, [X31+112]
	127 Move V3, [X31+128]
	128 Add X1, X31, 16
	129 Move X8, [X8+184]
	130 Move W5, 3
	131 Move W6, 1
	132 Move X0, X21
	133 Move X7, [X8]
	134 Move X2, X20
	135 Move W3, W19
	136 Move W4, W31
	137 Move [X31+16], V0
	138 Move [X31+24], V1
	139 Move [X31+48], V2
	140 Move [X31+56], V3
	141 Move [X31], X31
	142 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	143 Move X20, [X31+208]
	144 Move X19, [X31+216]
	145 Move X22, [X31+192]
	146 Move X21, [X31+200]
	147 Move X24, [X31+176]
	148 Move X23, [X31+184]
	149 Move X26, [X31+160]
	150 Move X25, [X31+168]
	151 Move X30, [X31+144]
	152 Add X31, X31, 224
	153 Return 
	154 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A02454 LDP X30, X23, [X31], #0x30
	0x03A02458 B 0x3C04408
	0x03A0245C BL 0x1C16F20
	0x03A02460 RET
	0x03A02464 RET
	0x03A02468 ADRP X8, 0xFFFFFFFFFD0EB000
	0x03A0246C LDR V0, [X8 + 0xFB8]
	0x03A02470 MOVZ W8, 0xB4
	0x03A02474 MOV X1, X31
	0x03A02478 STR W8, [X0 + 0x28]
	0x03A0247C STR D0, [X0 + 0x20]
	0x03A02480 B 0x3C36C30
	0x03A02484 LDR X0, [X0 + 0x118]
	0x03A02488 RET
	0x03A0248C STR X1, [X0 + 0x118]
	0x03A02490 RET
	0x03A02494 LDR W0, [X0 + 0x120]
	0x03A02498 RET
	0x03A0249C STR W1, [X0 + 0x120]
	0x03A024A0 RET
	0x03A024A4 LDR X0, [X0 + 0x128]
	0x03A024A8 RET
	0x03A024AC STR X1, [X0 + 0x128]
	0x03A024B0 RET
	0x03A024B4 LDR W0, [X0 + 0x130]
	0x03A024B8 RET
	0x03A024BC STR W1, [X0 + 0x130]
	0x03A024C0 RET
	0x03A024C4 SUB X31, X31, 0x30
	0x03A024C8 STP X30, X21, [X31 + 0x10]
	0x03A024CC STP X20, X19, [X31 + 0x20]
	0x03A024D0 ADD X21, X0, 0x140
	0x03A024D4 MOV W20, W1
	0x03A024D8 MOV X0, X21
	0x03A024DC MOV X1, X31
	0x03A024E0 MOV W19, W2
	0x03A024E4 BL 0x3C563D8
	0x03A024E8 ORR W1, W0, 0x4
	0x03A024EC MOV X0, X21
	0x03A024F0 MOV X2, X31
	0x03A024F4 BL 0x3C563E0
	0x03A024F8 AND W1, W20, 0x1
	0x03A024FC ADD X0, X31, 0xC
	0x03A02500 MOV W2, W19
	0x03A02504 MOV X3, X31
	0x03A02508 STRH W31, [X31 + 0xC]
	0x03A0250C BL 0x3C53458
	0x03A02510 LDRH W1, [X31 + 0xC]
	0x03A02514 MOV X0, X21
	0x03A02518 MOV X2, X31
	0x03A0251C BL 0x3C563A4
	0x03A02520 LDP X20, X19, [X31 + 0x20]
	0x03A02524 LDP X30, X21, [X31 + 0x10]
	0x03A02528 ADD X31, X31, 0x30
	0x03A0252C RET
	0x03A02530 SUB X31, X31, 0x50
	0x03A02534 STR X30, [X31 + 0x10]
	0x03A02538 STP X24, X23, [X31 + 0x20]
	0x03A0253C STP X22, X21, [X31 + 0x30]
	0x03A02540 STP X20, X19, [X31 + 0x40]
	0x03A02544 MOV X24, X0
	0x03A02548 MOV X0, X31
	0x03A0254C MOV W19, W5
	0x03A02550 MOV W20, W4
	0x03A02554 MOV W21, W3
	0x03A02558 MOV W22, W2
	0x03A0255C MOV W23, W1
	0x03A02560 BL 0x3C56320
	0x03A02564 STR X0, [X31]
	0x03A02568 STR W1, [X31 + 0x8]
	0x03A0256C ADD X0, X31, 0x0
	0x03A02570 MOVZ W1, 0x1
	0x03A02574 MOV X2, X31
	0x03A02578 BL 0x3C5B1BC
	0x03A0257C ADD X0, X31, 0x0
	0x03A02580 MOV W1, W22
	0x03A02584 MOV X2, X31
	0x03A02588 BL 0x3C5B248
	0x03A0258C ADD X0, X31, 0x0
	0x03A02590 MOV W1, W21
	0x03A02594 MOV X2, X31
	0x03A02598 BL 0x3C5B264
	0x03A0259C ADD X0, X31, 0x0
	0x03A025A0 MOV W1, W20
	0x03A025A4 MOV X2, X31
	0x03A025A8 BL 0x3C5B280
	0x03A025AC ADD X0, X31, 0x0
	0x03A025B0 MOV W1, W19
	0x03A025B4 MOV X2, X31
	0x03A025B8 BL 0x3C5B29C
	0x03A025BC ADD X19, X24, 0x140
	0x03A025C0 MOV X0, X19
	0x03A025C4 MOV X1, X31
	0x03A025C8 BL 0x3C563D8
	0x03A025CC ORR W1, W0, 0x8
	0x03A025D0 MOV X0, X19
	0x03A025D4 MOV X2, X31
	0x03A025D8 BL 0x3C563E0
	0x03A025DC MOV X0, X19
	0x03A025E0 MOV W1, W23
	0x03A025E4 MOV X2, X31
	0x03A025E8 BL 0x3C563D0
	0x03A025EC LDR X1, [X31]
	0x03A025F0 LDR W2, [X31 + 0x8]
	0x03A025F4 MOV X0, X19
	0x03A025F8 MOV X3, X31
	0x03A025FC BL 0x3C563BC
	0x03A02600 LDP X20, X19, [X31 + 0x40]
	0x03A02604 LDP X22, X21, [X31 + 0x30]
	0x03A02608 LDP X24, X23, [X31 + 0x20]
	0x03A0260C LDR X30, [X31 + 0x10]
	0x03A02610 ADD X31, X31, 0x50
	0x03A02614 RET
	0x03A02618 SUB X31, X31, 0x100
	0x03A0261C STP X29, X30, [X31 + 0xA0]
	0x03A02620 STP X28, X27, [X31 + 0xB0]
	0x03A02624 STP X26, X25, [X31 + 0xC0]
	0x03A02628 STP X24, X23, [X31 + 0xD0]
	0x03A0262C STP X22, X21, [X31 + 0xE0]
	0x03A02630 STP X20, X19, [X31 + 0xF0]
	0x03A02634 STR X6, [X31 + 0x8]
	0x03A02638 ADRP X29, 0x9DF000
	0x03A0263C ADRP X28, 0x752000
	0x03A02640 ADRP X26, 0x752000
	0x03A02644 ADRP X27, 0x751000
	0x03A02648 LDRB W8, [X29 + 0xF55]
	0x03A0264C LDR X28, [X28 + 0x60]
	0x03A02650 LDR X26, [X26 + 0x68]
	0x03A02654 LDR X27, [X27 + 0xFF0]
	0x03A02658 MOV W22, W5
	0x03A0265C MOV W23, W4
	0x03A02660 MOV X21, X3
	0x03A02664 MOV W24, W2
	0x03A02668 MOV X25, X1
	0x03A0266C MOV X20, X0
	0x03A02670 TBNZ X8, 0x0, 0x3A02700
	0x03A02674 ADRP X0, 0x752000
	0x03A02678 LDR X0, [X0 + 0x70]
	0x03A0267C BL 0x1C16CF4
	0x03A02680 ADRP X0, 0x752000
	0x03A02684 LDR X0, [X0 + 0x68]
	0x03A02688 BL 0x1C16CF4
	0x03A0268C ADRP X0, 0x752000
	0x03A02690 LDR X0, [X0 + 0x60]
	0x03A02694 BL 0x1C16CF4
	0x03A02698 ADRP X0, 0x752000
	0x03A0269C LDR X0, [X0 + 0x78]
	0x03A026A0 BL 0x1C16CF4
	0x03A026A4 ADRP X0, 0x74E000
	0x03A026A8 LDR X0, [X0 + 0x598]
	0x03A026AC BL 0x1C16CF4
	0x03A026B0 ADRP X0, 0x71A000
	0x03A026B4 LDR X0, [X0 + 0xD28]
	0x03A026B8 BL 0x1C16CF4
	0x03A026BC ADRP X0, 0x751000
	0x03A026C0 LDR X0, [X0 + 0xFF0]
	0x03A026C4 BL 0x1C16CF4
	0x03A026C8 ADRP X0, 0x752000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x9E0000
	009 Move W8, [X20+3915]
	010 Move X21, X2
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x71A000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x752000
	020 Move X0, [X0+4072]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3915], W8
	024 Move [X31+8], W31
	025 Move X20, [X21]
	026 Move X2, [X19+56]
	027 Move X24, 0x71A000
	028 Move X23, 0x752000
	029 Move X24, [X24+2296]
	030 Move X23, [X23+4072]
	031 Add X0, X31, 8
	032 Move X1, X20
	033 Move X3, X31
	034 Call ProfilingScope..ctor, X0, X1, X2
	035 Move W8, [X19+236]
	036 Compare W8, 0
	037 JumpIfEqual {70}
	038 Move X0, [X24]
	039 Move X22, [X19+240]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W4, TEMP
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W5, TEMP
	050 Move X0, X20
	051 Move X1, X22
	052 Move W2, W31
	053 Move W3, W31
	054 Move X6, X31
	055 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	056 Move X0, [X21+464]
	057 Compare X0, 0
	058 JumpIfEqual {152}
	059 Move X1, X31
	060 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	061 Move X22, X0
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X22
	069 Call FullScreenRenderPass.ExecuteCopyColorPass, X0, X1
	070 Move W8, [X19+237]
	071 Move X0, [X21+464]
	072 Compare W8, 0
	073 JumpIfEqual {102}
	074 Compare X0, 0
	075 JumpIfEqual {153}
	076 Move X1, X31
	077 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	078 Move X22, X0
	079 Move X0, [X21+464]
	080 Compare X0, 0
	081 JumpIfEqual {154}
	082 Move X1, X31
	083 Call ScriptableRenderer.get_cameraDepthTargetHandle, X0
	084 Move X21, X0
	085 Move X0, [X24]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move TEMP, 0
	091 Not TEMP
	092 Move W4, TEMP
	093 Move TEMP, 0
	094 Not TEMP
	095 Move W5, TEMP
	096 Move X0, X20
	097 Move X1, X22
	098 Move X2, X21
	099 Move W3, W31
	100 Move X6, X31
	101 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	102 Compare X0, 0
	103 JumpIfEqual {155}
	104 Move X1, X31
	105 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	106 Move X21, X0
	107 Move X0, [X24]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move TEMP, 0
	113 Not TEMP
	114 Move W4, TEMP
	115 Move TEMP, 0
	116 Not TEMP
	117 Move W5, TEMP
	118 Move X0, X20
	119 Move X1, X21
	120 Move W2, W31
	121 Move W3, W31
	122 Move X6, X31
	123 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	124 Move W8, [X19+236]
	125 Compare W8, 0
	126 JumpIfEqual {128}
	127 Move X21, [X19+240]
	128 Move X21, X31
	129 Move X0, [X23]
	130 Move X22, [X19+224]
	131 Move W19, [X19+232]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X20
	137 Move X1, X21
	138 Move X2, X22
	139 Move W3, W19
	140 Call FullScreenRenderPass.ExecuteMainPass, X0, X1, X2, X3
	141 Add X0, X31, 8
	142 Move X1, X31
	143 Call ProfilingScope.Dispose, X0
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X22, [X31+32]
	147 Move X21, [X31+40]
	148 Move X24, [X31+16]
	149 Move X23, [X31+24]
	150 Move X30, [X31+64]
	151 Return 
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Move X19, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X19
	159 Call 0x3EB2AD0
	160 Move X20, [X0]
	161 Call 0x3EB2AE0
	162 Add X0, X31, 8
	163 Move X1, X31
	164 Call ProfilingScope.Dispose, X0
	165 Compare X20, 0
	166 JumpIfEqual {144}
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Move X20, X31
	170 Move X19, X0
	171 Add X0, X31, 8
	172 Move X1, X31
	173 Call ProfilingScope.Dispose, X0
	174 Compare X20, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X19
	177 Call 0x1D2D690
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A026CC LDR X0, [X0 + 0x80]
	0x03A026D0 BL 0x1C16CF4
	0x03A026D4 ADRP X0, 0x752000
	0x03A026D8 LDR X0, [X0 + 0x88]
	0x03A026DC BL 0x1C16CF4
	0x03A026E0 ADRP X0, 0x752000
	0x03A026E4 LDR X0, [X0 + 0x90]
	0x03A026E8 BL 0x1C16CF4
	0x03A026EC ADRP X0, 0x752000
	0x03A026F0 LDR X0, [X0 + 0x98]
	0x03A026F4 BL 0x1C16CF4
	0x03A026F8 MOVZ W8, 0x1
	0x03A026FC STRB W8, [X29 + 0xF55]
	0x03A02700 LDR X0, [X28]
	0x03A02704 ADRP X29, 0x74E000
	0x03A02708 ADRP X19, 0x752000
	0x03A0270C ADRP X28, 0x71A000
	0x03A02710 LDR X29, [X29 + 0x598]
	0x03A02714 LDR X19, [X19 + 0x80]
	0x03A02718 LDR X28, [X28 + 0xD28]
	0x03A0271C BL 0x1C16F10
	0x03A02720 LDR X1, [X26]
	0x03A02724 MOV X26, X0
	0x03A02728 BL 0x305C9FC
	0x03A0272C STR X26, [X20 + 0x138]
	0x03A02730 LDR X0, [X27]
	0x03A02734 LDR W8, [X0 + 0xE0]
	0x03A02738 CBNZ W8, 0x3A02740

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9E0000
	006 Move X21, 0x74F000
	007 Move X20, 0x752000
	008 Move W8, [X19+3916]
	009 Move X21, [X21+1424]
	010 Move X20, [X20+4072]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x752000
	016 Move X0, [X0+4072]
	017 Call 0x1C17CF4
	018 Move X0, 0x74F000
	019 Move X0, [X0+1424]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3916], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call MaterialPropertyBlock..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

