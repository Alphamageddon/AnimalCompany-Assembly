Type: UnityEngine.Rendering.Universal.UniversalRenderPipeline/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A93520 MOV X0, X31
	0x03A93524 BL 0x3C5B374
	0x03A93528 CBZ X0, 0x3A93554
	0x03A9352C LDRB W8, [X0 + 0x2C]
	0x03A93530 CBZ W8, 0x3A93544
	0x03A93534 MOV X0, X19
	0x03A93538 LDP X20, X19, [X31 + 0x10]
	0x03A9353C LDP X30, X21, [X31], #0x20
	0x03A93540 B 0x3A932B0
	0x03A93544 LDP X20, X19, [X31 + 0x10]
	0x03A93548 MOV W0, W31
	0x03A9354C LDP X30, X21, [X31], #0x20
	0x03A93550 RET
	0x03A93554 BL 0x1C16F20
	0x03A93558 SUB X31, X31, 0x1D0
	0x03A9355C STP X29, X30, [X31 + 0x1B0]
	0x03A93560 STP X20, X19, [X31 + 0x1C0]
	0x03A93564 MOV X19, X0
	0x03A93568 MOVI V0.2D, 0x0
	0x03A9356C MOV X0, X31
	0x03A93570 MOV X20, X1
	0x03A93574 STR X31, [X31 + 0x1A0]
	0x03A93578 STP V0, V0, [X31 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x950000
	005 Move X20, 0x6C5000
	006 Move W8, [X19+901]
	007 Move X20, [X20+648]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C5000
	013 Move X0, [X0+648]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+901], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A9357C BL 0x3C3BB1C
	0x03A93580 TBZ X0, 0x0, 0x3A936C8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <.ctor>b__33_0(UnityEngine.Camera camera1, UnityEngine.Camera camera2)

Disassembly:
	0x03A93584 LDR W9, [X19 + 0x168]
	0x03A93588 MOVZ W8, 0x1
	0x03A9358C CMP W9, 0x2
	0x03A93590 B.EQ 0x3A936CC
	0x03A93594 CMP W9, 0x4
	0x03A93598 B.EQ 0x3A936CC
	0x03A9359C CBZ X20, 0x3A936E0
	0x03A935A0 LDR X8, [X20 + 0x48]
	0x03A935A4 LDUR V0, [X20 + 0x38]
	0x03A935A8 LDUR V1, [X20 + 0x28]
	0x03A935AC ADD X0, X31, 0x180
	0x03A935B0 ADD X1, X31, 0x150
	0x03A935B4 MOVN W3, 0x0
	0x03A935B8 MOV W2, W31
	0x03A935BC MOV W4, W31
	0x03A935C0 MOV X5, X31
	0x03A935C4 STR X8, [X31 + 0x170]
	0x03A935C8 STP V1, V0, [X31 + 0x150]
	0x03A935CC BL 0x3C4B098
	0x03A935D0 LDR X8, [X31 + 0x1A0]
	0x03A935D4 LDP V0, V1, [X31 + 0x180]
	0x03A935D8 MOVZ W0, 0x2
	0x03A935DC MOV X1, X31
	0x03A935E0 STR X8, [X31 + 0x140]
	0x03A935E4 ADD X8, X31, 0xF0
	0x03A935E8 STP V0, V1, [X31 + 0x120]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {30}
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Call Camera.get_depth, X0
	010 Compare X19, 0
	011 JumpIfEqual {30}
	012 Move X0, X19
	013 Move X1, X31
	014 Move V8, V0
	015 Call Camera.get_depth, X0
	016 Move W9, 0x7F800000
	017 Move S1, W9
	018 NotImplemented "Instruction FCVTZS not yet implemented."
	019 Move W10, 0x80000000
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 NotImplemented "Instruction FCVTZS not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Subtract W0, W8, W9
	028 Move V8, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void <.cctor>b__99_0(UnityEngine.Light[] requests, Unity.Collections.NativeArray`1<UnityEngine.Experimental.GlobalIllumination.LightDataGI> lightsOutput)

Disassembly:
	0x03A935EC BL 0x3C4B204
	0x03A935F0 LDP V0, V1, [X31 + 0xF0]
	0x03A935F4 LDR X8, [X31 + 0x110]
	0x03A935F8 LDP V2, V3, [X31 + 0x120]
	0x03A935FC LDR X9, [X31 + 0x140]
	0x03A93600 ADD X0, X31, 0xC0
	0x03A93604 ADD X1, X31, 0x90
	0x03A93608 MOV X2, X31
	0x03A9360C STP V0, V1, [X31 + 0x90]
	0x03A93610 STR X8, [X31 + 0xB0]
	0x03A93614 STP V2, V3, [X31 + 0xC0]
	0x03A93618 STR X9, [X31 + 0xE0]
	0x03A9361C BL 0x3C4B6D8
	0x03A93620 LDR X8, [X19 + 0x178]
	0x03A93624 CBZ X8, 0x3A936E0
	0x03A93628 MOV W20, W0
	0x03A9362C MOV X0, X8
	0x03A93630 MOV X1, X31
	0x03A93634 BL 0x3984C98
	0x03A93638 TBZ X0, 0x0, 0x3A936C0
	0x03A9363C LDP V0, V1, [X31 + 0x180]
	0x03A93640 LDR X8, [X31 + 0x1A0]
	0x03A93644 STP V0, V1, [X31 + 0x120]
	0x03A93648 STR X8, [X31 + 0x140]
	0x03A9364C LDR X8, [X19 + 0x178]
	0x03A93650 CBZ X8, 0x3A936E0
	0x03A93654 LDR X9, [X8 + 0x50]
	0x03A93658 LDP V0, V1, [X8 + 0x30]
	0x03A9365C MOVI V2.2D, 0x0
	0x03A93660 ADD X0, X31, 0xF0
	0x03A93664 ADD X1, X31, 0x60
	0x03A93668 MOVN W3, 0x0
	0x03A9366C MOV W2, W31
	0x03A93670 MOV W4, W31
	0x03A93674 MOV X5, X31
	0x03A93678 STR X31, [X31 + 0x110]
	0x03A9367C STR X9, [X31 + 0x80]
	0x03A93680 STP V0, V1, [X31 + 0x60]
	0x03A93684 STP V2, V2, [X31 + 0xF0]
	0x03A93688 BL 0x3C4B098
	0x03A9368C LDP V0, V1, [X31 + 0x120]
	0x03A93690 LDR X8, [X31 + 0x140]
	0x03A93694 LDP V2, V3, [X31 + 0xF0]
	0x03A93698 LDR X9, [X31 + 0x110]
	0x03A9369C ADD X0, X31, 0x30
	0x03A936A0 ADD X1, X31, 0x0
	0x03A936A4 MOV X2, X31
	0x03A936A8 STP V0, V1, [X31 + 0x30]
	0x03A936AC STR X8, [X31 + 0x50]
	0x03A936B0 STP V2, V3, [X31]
	0x03A936B4 STR X9, [X31 + 0x20]
	0x03A936B8 BL 0x3C4B6D8
	0x03A936BC ORR W20, W20, W0, 0x0
	0x03A936C0 EOR W8, W20, 0x1
	0x03A936C4 B 0x3A936CC
	0x03A936C8 MOV W8, W31
	0x03A936CC LDP X20, X19, [X31 + 0x1C0]
	0x03A936D0 LDP X29, X30, [X31 + 0x1B0]
	0x03A936D4 AND W0, W8, 0x1
	0x03A936D8 ADD X31, X31, 0x1D0
	0x03A936DC RET
	0x03A936E0 BL 0x1C16F20
	0x03A936E4 STR X30, [X31 - 0x30]!
	0x03A936E8 STP X22, X21, [X31 + 0x10]
	0x03A936EC STP X20, X19, [X31 + 0x20]
	0x03A936F0 ADRP X22, 0x94F000
	0x03A936F4 LDRB W8, [X22 + 0x38F]
	0x03A936F8 MOV X19, X2
	0x03A936FC MOV X20, X1
	0x03A93700 MOV X21, X0
	0x03A93704 TBNZ X8, 0x0, 0x3A9371C
	0x03A93708 ADRP X0, 0x660000
	0x03A9370C LDR X0, [X0 + 0x598]
	0x03A93710 BL 0x1C16CF4
	0x03A93714 MOVZ W8, 0x1
	0x03A93718 STRB W8, [X22 + 0x38F]
	0x03A9371C MOV X0, X31
	0x03A93720 BL 0x3C3BB1C
	0x03A93724 TBZ X0, 0x0, 0x3A93760
	0x03A93728 ADRP X8, 0x660000
	0x03A9372C LDR X8, [X8 + 0x598]
	0x03A93730 LDR X22, [X21 + 0xD0]
	0x03A93734 LDR X0, [X8]
	0x03A93738 LDR W8, [X0 + 0xE0]
	0x03A9373C CBNZ W8, 0x3A93744
	0x03A93740 BL 0x1C16DFC
	0x03A93744 MOV X0, X22
	0x03A93748 MOV X1, X31
	0x03A9374C MOV X2, X31
	0x03A93750 BL 0x3C354F8
	0x03A93754 TBZ X0, 0x0, 0x3A93774
	0x03A93758 MOVZ W0, 0x1
	0x03A9375C B 0x3A93764
	0x03A93760 MOV W0, W31
	0x03A93764 LDP X20, X19, [X31 + 0x20]
	0x03A93768 LDP X22, X21, [X31 + 0x10]
	0x03A9376C LDR X30, [X31], #0x30
	0x03A93770 RET
	0x03A93774 CMP X20, 0x0
	0x03A93778 CSEL X1, X19, X20, EQ
	0x03A9377C MOV X0, X21
	0x03A93780 LDP X20, X19, [X31 + 0x20]
	0x03A93784 LDP X22, X21, [X31 + 0x10]
	0x03A93788 LDR X30, [X31], #0x30
	0x03A9378C B 0x3A93558
	0x03A93790 LDR X0, [X0 + 0x178]
	0x03A93794 RET
	0x03A93798 STR X1, [X0 + 0x178]
	0x03A9379C RET
	0x03A937A0 LDR W8, [X0 + 0x200]
	0x03A937A4 CMP W8, 0x0
	0x03A937A8 CSET W0, NE
	0x03A937AC RET
	0x03A937B0 STP X29, X30, [X31 - 0x60]!
	0x03A937B4 STP X28, X27, [X31 + 0x10]
	0x03A937B8 STP X26, X25, [X31 + 0x20]
	0x03A937BC STP X24, X23, [X31 + 0x30]
	0x03A937C0 STP X22, X21, [X31 + 0x40]
	0x03A937C4 STP X20, X19, [X31 + 0x50]
	0x03A937C8 ADRP X22, 0x94F000
	0x03A937CC ADRP X23, 0x6C4000
	0x03A937D0 ADRP X19, 0x6C1000
	0x03A937D4 ADRP X21, 0x6C4000
	0x03A937D8 ADRP X20, 0x6C4000
	0x03A937DC ADRP X29, 0x6C4000
	0x03A937E0 ADRP X28, 0x6C4000
	0x03A937E4 ADRP X27, 0x6C4000
	0x03A937E8 ADRP X26, 0x6C4000
	0x03A937EC ADRP X25, 0x6C4000
	0x03A937F0 ADRP X24, 0x6C4000
	0x03A937F4 LDR X23, [X23 + 0x450]
	0x03A937F8 LDR X19, [X19 + 0x20]
	0x03A937FC LDR X21, [X21 + 0x458]
	0x03A93800 LDR X20, [X20 + 0x460]
	0x03A93804 LDR X29, [X29 + 0x468]
	0x03A93808 LDR X28, [X28 + 0x470]
	0x03A9380C LDR X27, [X27 + 0x478]
	0x03A93810 LDR X26, [X26 + 0x480]
	0x03A93814 LDR X25, [X25 + 0x488]
	0x03A93818 LDR X24, [X24 + 0x490]
	0x03A9381C LDRB W8, [X22 + 0x392]
	0x03A93820 TBNZ X8, 0x0, 0x3A93AB4
	0x03A93824 ADRP X0, 0x6C1000
	0x03A93828 LDR X0, [X0 + 0x20]
	0x03A9382C BL 0x1C16CF4
	0x03A93830 ADRP X0, 0x6C1000
	0x03A93834 LDR X0, [X0 + 0x6D8]
	0x03A93838 BL 0x1C16CF4
	0x03A9383C ADRP X0, 0x6C4000
	0x03A93840 LDR X0, [X0 + 0x468]
	0x03A93844 BL 0x1C16CF4
	0x03A93848 ADRP X0, 0x6C4000
	0x03A9384C LDR X0, [X0 + 0x498]
	0x03A93850 BL 0x1C16CF4
	0x03A93854 ADRP X0, 0x6C4000
	0x03A93858 LDR X0, [X0 + 0x4A0]
	0x03A9385C BL 0x1C16CF4
	0x03A93860 ADRP X0, 0x6C4000
	0x03A93864 LDR X0, [X0 + 0x460]
	0x03A93868 BL 0x1C16CF4
	0x03A9386C ADRP X0, 0x6C4000
	0x03A93870 LDR X0, [X0 + 0x450]
	0x03A93874 BL 0x1C16CF4
	0x03A93878 ADRP X0, 0x6C4000
	0x03A9387C LDR X0, [X0 + 0x4A8]
	0x03A93880 BL 0x1C16CF4
	0x03A93884 ADRP X0, 0x6C4000
	0x03A93888 LDR X0, [X0 + 0x4B0]
	0x03A9388C BL 0x1C16CF4
	0x03A93890 ADRP X0, 0x6C0000
	0x03A93894 LDR X0, [X0 + 0x3C8]
	0x03A93898 BL 0x1C16CF4
	0x03A9389C ADRP X0, 0x6C4000
	0x03A938A0 LDR X0, [X0 + 0x4B8]
	0x03A938A4 BL 0x1C16CF4
	0x03A938A8 ADRP X0, 0x6C4000

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+368], D8
	003 Move [X31+376], X29
	004 Move [X31+384], X30
	005 Move [X31+392], X25
	006 Move [X31+400], X24
	007 Move [X31+408], X23
	008 Move [X31+416], X22
	009 Move [X31+424], X21
	010 Move [X31+432], X20
	011 Move [X31+440], X19
	012 Move X22, 0x950000
	013 Move X21, 0x6C5000
	014 Move W8, [X22+902]
	015 Move X21, [X21+544]
	016 Move X19, X2
	017 Move X20, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6C5000
	023 Move X0, [X0+544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+902], W8
	027 Move X0, [X21]
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+256], W31
	030 Move [X31+80], X31
	031 Move [X31+224], V0
	032 Move [X31+232], V0
	033 Move [X31+192], V0
	034 Move [X31+200], V0
	035 Move [X31+160], V0
	036 Move [X31+168], V0
	037 Move [X31+128], V0
	038 Move [X31+136], V0
	039 Move [X31+96], V0
	040 Move [X31+104], V0
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move [X31+16], V0
	044 Move [X31+24], V0
	045 Move [X31], V0
	046 Move [X31+336], V0
	047 Move [X31+344], V0
	048 Move [X31+304], V0
	049 Move [X31+312], V0
	050 Move [X31+272], V0
	051 Move [X31+280], V0
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call SupportedRenderingFeatures.get_active
	058 Compare X0, 0
	059 JumpIfEqual {200}
	060 Move W8, [X0+37]
	061 Compare W8, 0
	062 JumpIfEqual {163}
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X31
	069 Call SupportedRenderingFeatures.get_active
	070 Compare X0, 0
	071 JumpIfEqual {200}
	072 Compare X20, 0
	073 JumpIfEqual {200}
	074 Move W9, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X10, -49971200
	077 Move V8, [X10+260]
	078 Move X23, -49262592
	079 Move W8, W31
	080 Move W22, 96
	081 Add X23, X23, 2884
	082 Move W24, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X25, W8
	085 Add X8, X20, X25
	086 Move X21, [X8+32]
	087 Compare X21, 0
	088 JumpIfEqual {200}
	089 Move X0, X21
	090 Move X1, X31
	091 Call Light.get_type, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, W0
	094 NotImplemented "Instruction ADR not yet implemented."
	095 Move W10, [X23]
	096 Add X9, X9, X10
	097 CallNoReturn X9
	098 Move X0, X21
	099 Move X1, X31
	100 Call Object.GetInstanceID, X0
	101 Move W1, W0
	102 Add X0, X31, 272
	103 Move X2, X31
	104 Call LightDataGI.InitNoBake, X0, X1
	105 NotImplemented "Instruction MOVI not yet implemented."
	106 Add X1, X31, 0
	107 Move X0, X21
	108 Move X2, X31
	109 Move [X31+80], X31
	110 Move [X31+48], V0
	111 Move [X31+56], V0
	112 Move [X31+16], V0
	113 Move [X31+24], V0
	114 Move [X31], V0
	115 Call LightmapperUtils.Extract, X0, X1
	116 Move X0, X21
	117 Move X1, X31
	118 Call Light.get_innerSpotAngle, X0
	119 Multiply S0, S0, S8
	120 Add X0, X31, 272
	121 Add X1, X31, 0
	122 Move X2, X31
	123 Move [X31+80], S0
	124 Move [X31+85], W24
	125 Call LightDataGI.Init, X0, X1
	126 NotImplemented "Instruction MOVI not yet implemented."
	127 Add X1, X31, 176
	128 Move X0, X21
	129 Move X2, X31
	130 Move [X31+256], W31
	131 Move [X31+224], V0
	132 Move [X31+232], V0
	133 Move [X31+192], V0
	134 Move [X31+200], V0
	135 Move [X31+11], V0
	136 Call LightmapperUtils.Extract, X0, X1
	137 Add X0, X31, 272
	138 Add X1, X31, 176
	139 Move X2, X31
	140 Call LightDataGI.Init, X0, X1
	141 NotImplemented "Instruction MOVI not yet implemented."
	142 Add X1, X31, 96
	143 Move X0, X21
	144 Move X2, X31
	145 Move [X31+144], V0
	146 Move [X31+152], V0
	147 Move [X31+112], V0
	148 Move [X31+120], V0
	149 Move [X31+6], V0
	150 Call LightmapperUtils.Extract, X0, X1
	151 Add X0, X31, 272
	152 Add X1, X31, 96
	153 Move X2, X31
	154 Call LightDataGI.Init, X0, X1
	155 NotImplemented "Instruction MADD not yet implemented."
	156 Add X1, X31, 272
	157 Move W2, 96
	158 Move [X31+367], W31
	159 Call 0x3EB2B30
	160 Move W9, [X20+24]
	161 Add W8, W25, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare X20, 0
	164 JumpIfEqual {200}
	165 Move W9, [X20+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W8, W31
	168 Move W21, 96
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X22, W8
	171 Add X8, X20, X22
	172 Move X0, [X8+32]
	173 Compare X0, 0
	174 JumpIfEqual {200}
	175 Move X1, X31
	176 Call Object.GetInstanceID, X0
	177 Move W1, W0
	178 Add X0, X31, 272
	179 Move X2, X31
	180 Call LightDataGI.InitNoBake, X0, X1
	181 NotImplemented "Instruction MADD not yet implemented."
	182 Add X1, X31, 272
	183 Move W2, 96
	184 Call 0x3EB2B30
	185 Move W9, [X20+24]
	186 Add W8, W22, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X20, [X31+432]
	189 Move X19, [X31+440]
	190 Move X22, [X31+416]
	191 Move X21, [X31+424]
	192 Move X24, [X31+400]
	193 Move X23, [X31+408]
	194 Move X30, [X31+384]
	195 Move X25, [X31+392]
	196 Move X29, [X31+376]
	197 Move V8, [X31+368]
	198 Add X31, X31, 448
	199 Return 
	200 Call 0x1C17F20
	201 Call 0x1C17F28

