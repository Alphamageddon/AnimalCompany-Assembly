Type: UnityEngine.Rendering.Universal.DecalScreenSpaceRenderPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.DecalScreenSpaceSettings settings, UnityEngine.Rendering.Universal.DecalDrawScreenSpaceSystem drawSystem, System.Boolean decalLayers)

Disassembly:
	0x03A44248 LDR X22, [X22 + 0x10]
	0x03A4424C MOV X20, X2
	0x03A44250 MOV X21, X1
	0x03A44254 MOV X19, X0
	0x03A44258 TBNZ X8, 0x0, 0x3A44294
	0x03A4425C ADRP X0, 0x6AF000
	0x03A44260 LDR X0, [X0 + 0xA28]
	0x03A44264 BL 0x1C16CF4
	0x03A44268 ADRP X0, 0x710000
	0x03A4426C LDR X0, [X0 + 0x10]
	0x03A44270 BL 0x1C16CF4
	0x03A44274 ADRP X0, 0x711000
	0x03A44278 LDR X0, [X0 + 0xC00]
	0x03A4427C BL 0x1C16CF4
	0x03A44280 ADRP X0, 0x711000
	0x03A44284 LDR X0, [X0 + 0xC08]
	0x03A44288 BL 0x1C16CF4
	0x03A4428C MOVZ W8, 0x1
	0x03A44290 STRB W8, [X23 + 0x176]
	0x03A44294 MOVZ W8, 0x1
	0x03A44298 STR W31, [X31 + 0x8]
	0x03A4429C STRB W31, [X19 + 0x70]
	0x03A442A0 STRB W8, [X19 + 0x40]
	0x03A442A4 LDR X0, [X22]
	0x03A442A8 LDR W8, [X0 + 0xE0]
	0x03A442AC CBNZ W8, 0x3A442B4
	0x03A442B0 BL 0x1C16DFC
	0x03A442B4 MOV X0, X21
	0x03A442B8 MOV X1, X31
	0x03A442BC BL 0x3A717D4
	0x03A442C0 MOV W22, W0
	0x03A442C4 STR W0, [X31 + 0xC]
	0x03A442C8 MOV X0, X31
	0x03A442CC BL 0x3C3BDEC
	0x03A442D0 MOV W8, W22
	0x03A442D4 CMP X8, W0, SXTW
	0x03A442D8 B.LE 0x3A4435C
	0x03A442DC ADRP X23, 0x711000
	0x03A442E0 ADRP X24, 0x711000
	0x03A442E4 ADRP X25, 0x6AF000
	0x03A442E8 LDR X23, [X23 + 0xC08]
	0x03A442EC LDR X24, [X24 + 0xC00]
	0x03A442F0 LDR X25, [X25 + 0xA28]
	0x03A442F4 ADD X0, X31, 0xC
	0x03A442F8 MOV X1, X31
	0x03A442FC BL 0x3399B00
	0x03A44300 MOV X22, X0
	0x03A44304 MOV X0, X31
	0x03A44308 BL 0x3C3BDEC
	0x03A4430C STR W0, [X31 + 0x8]
	0x03A44310 ADD X0, X31, 0x8
	0x03A44314 MOV X1, X31
	0x03A44318 BL 0x337B6E0
	0x03A4431C LDR X8, [X23]
	0x03A44320 LDR X2, [X24]
	0x03A44324 MOV X3, X0
	0x03A44328 MOV X1, X22
	0x03A4432C MOV X0, X8
	0x03A44330 MOV X4, X31
	0x03A44334 BL 0x32277C4
	0x03A44338 LDR X8, [X25]
	0x03A4433C MOV X22, X0
	0x03A44340 LDR W9, [X8 + 0xE0]
	0x03A44344 CBNZ W9, 0x3A44350
	0x03A44348 MOV X0, X8
	0x03A4434C BL 0x1C16DFC
	0x03A44350 MOV X0, X22
	0x03A44354 MOV X1, X31
	0x03A44358 BL 0x3C0649C
	0x03A4435C STR X21, [X19 + 0x80]
	0x03A44360 LDR X8, [X20 + 0x20]
	0x03A44364 LDP V1, V0, [X20]
	0x03A44368 LDP X22, X21, [X31 + 0x30]
	0x03A4436C LDP X24, X23, [X31 + 0x20]
	0x03A44370 STR X8, [X19 + 0xC0]
	0x03A44374 STP V1, V0, [X19 + 0xA0]
	0x03A44378 LDP X20, X19, [X31 + 0x40]
	0x03A4437C LDP X30, X25, [X31 + 0x10]
	0x03A44380 ADD X31, X31, 0x50
	0x03A44384 RET
	0x03A44388 STR X30, [X31 - 0x20]!
	0x03A4438C STP X20, X19, [X31 + 0x10]
	0x03A44390 MOV X19, X3
	0x03A44394 MOV X20, X0
	0x03A44398 BL 0x3A42A44
	0x03A4439C CBZ X19, 0x3A44400
	0x03A443A0 LDR W8, [X19 + 0x18]
	0x03A443A4 UBFM X9, X8, 0x20, 0x1F
	0x03A443A8 CMP X9, 0x1
	0x03A443AC B.LT 0x3A443F0
	0x03A443B0 LDR X10, [X20 + 0x68]
	0x03A443B4 MOV X9, X31
	0x03A443B8 SXTW X11, W8
	0x03A443BC ADD X13, X19, 0x20
	0x03A443C0 ADD X12, X10, 0x20
	0x03A443C4 CMP X8, X9
	0x03A443C8 B.EQ 0x3A443FC
	0x03A443CC CBZ X10, 0x3A44400
	0x03A443D0 LDR W14, [X10 + 0x18]
	0x03A443D4 CMP X9, X14
	0x03A443D8 B.CS 0x3A443FC
	0x03A443DC LDR W14, [X13, X9, LSL #2]
	0x03A443E0 STR W14, [X12, X9, LSL #2]
	0x03A443E4 ADD X9, X9, 0x1
	0x03A443E8 CMP X11, X9
	0x03A443EC B.NE 0x3A443C4
	0x03A443F0 LDP X20, X19, [X31 + 0x10]
	0x03A443F4 LDR X30, [X31], #0x20
	0x03A443F8 RET
	0x03A443FC BL 0x1C16F28
	0x03A44400 BL 0x1C16F20
	0x03A44404 SUB X31, X31, 0x60
	0x03A44408 STR X30, [X31 + 0x30]
	0x03A4440C STP X22, X21, [X31 + 0x40]
	0x03A44410 STP X20, X19, [X31 + 0x50]
	0x03A44414 ADRP X22, 0x99E000
	0x03A44418 ADRP X21, 0x70F000
	0x03A4441C LDRB W8, [X22 + 0x178]
	0x03A44420 LDR X21, [X21 + 0xFF0]
	0x03A44424 MOV X19, X1
	0x03A44428 MOV X20, X0
	0x03A4442C TBNZ X8, 0x0, 0x3A44444
	0x03A44430 ADRP X0, 0x70F000
	0x03A44434 LDR X0, [X0 + 0xFF0]
	0x03A44438 BL 0x1C16CF4
	0x03A4443C MOVZ W8, 0x1
	0x03A44440 STRB W8, [X22 + 0x178]
	0x03A44444 LDR X0, [X21]
	0x03A44448 LDR W8, [X0 + 0xE0]
	0x03A4444C CBNZ W8, 0x3A44458
	0x03A44450 BL 0x1C16DFC
	0x03A44454 LDR X0, [X21]
	0x03A44458 LDR X8, [X0 + 0xB8]
	0x03A4445C LDR X8, [X8]
	0x03A44460 CBZ X8, 0x3A4449C
	0x03A44464 LDR X9, [X8 + 0x48]
	0x03A44468 LDUR V0, [X8 + 0x38]
	0x03A4446C LDUR V1, [X8 + 0x28]
	0x03A44470 ADD X2, X31, 0x0
	0x03A44474 MOV X0, X20
	0x03A44478 MOV X1, X19
	0x03A4447C STR X9, [X31 + 0x20]
	0x03A44480 STP V1, V0, [X31]
	0x03A44484 BL 0x3A44228
	0x03A44488 LDP X20, X19, [X31 + 0x50]
	0x03A4448C LDP X22, X21, [X31 + 0x40]
	0x03A44490 LDR X30, [X31 + 0x30]
	0x03A44494 ADD X31, X31, 0x60
	0x03A44498 RET
	0x03A4449C BL 0x1C16F20
	0x03A444A0 STR X30, [X31 - 0x30]!
	0x03A444A4 STP X22, X21, [X31 + 0x10]
	0x03A444A8 STP X20, X19, [X31 + 0x20]
	0x03A444AC ADRP X22, 0x99E000
	0x03A444B0 ADRP X21, 0x70F000
	0x03A444B4 LDRB W8, [X22 + 0x179]
	0x03A444B8 LDR X21, [X21 + 0xFF0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X24, 0x99F000
	014 Move X23, 0x710000
	015 Move W8, [X24+369]
	016 Move X23, [X23+4080]
	017 Move W22, W3
	018 Move X21, X2
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x711000
	026 Move X0, [X0+112]
	027 Call 0x1C17CF4
	028 Move X0, 0x711000
	029 Move X0, [X0+104]
	030 Call 0x1C17CF4
	031 Move X0, 0x711000
	032 Move X0, [X0+96]
	033 Call 0x1C17CF4
	034 Move X0, 0x711000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0x70D000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x6D9000
	041 Move X0, [X0+3368]
	042 Call 0x1C17CF4
	043 Move X0, 0x710000
	044 Move X0, [X0+4080]
	045 Call 0x1C17CF4
	046 Move X0, 0x712000
	047 Move X0, [X0+1896]
	048 Call 0x1C17CF4
	049 Move X0, 0x712000
	050 Move X0, [X0+3136]
	051 Call 0x1C17CF4
	052 Move X0, 0x712000
	053 Move X0, [X0+1872]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X24+369], W8
	057 Move X0, [X23]
	058 Move X28, 0x70D000
	059 Move X27, 0x712000
	060 Move X26, 0x6D9000
	061 Move W8, [X0+224]
	062 Move X28, [X28+1432]
	063 Move X27, [X27+3136]
	064 Move X26, [X26+3368]
	065 And W22, W22, 1
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X25, 0x711000
	070 Move X24, 0x711000
	071 Move X23, 0x711000
	072 Move X25, [X25+120]
	073 Move X24, [X24+96]
	074 Move X23, [X23+104]
	075 Move X0, X19
	076 Call ScriptableRenderPass..ctor, X0
	077 Move W8, 400
	078 Move W9, 1
	079 Move [X19+16], W8
	080 Move [X19+200], W9
	081 Move [X19+264], X21
	082 Move [X19+272], X20
	083 Move X0, [X28]
	084 Call 0x1C17F10
	085 Move X1, [X27]
	086 Move X2, X31
	087 Move X20, X0
	088 Call ProfilingSampler..ctor, X0, X1
	089 Move [X19+248], X20
	090 Move X0, [X26]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X21, 0x711000
	096 Move X21, [X21+112]
	097 Move X0, X31
	098 Call RenderQueueRange.get_opaque
	099 Move X2, [X25]
	100 Move X1, X0
	101 Add X0, X31, 32
	102 Move [X31+40], W31
	103 Move [X31+32], X31
	104 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	105 Move X1, [X31+32]
	106 Move W2, [X31+40]
	107 Add X0, X31, 8
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W3, TEMP
	111 Move TEMP, 0
	112 Not TEMP
	113 Move W4, TEMP
	114 Move W5, W31
	115 Move X6, X31
	116 Move [X31+8], X31
	117 Move [X31+16], X31
	118 Move [X31+24], X31
	119 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	120 Move X8, [X31+24]
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move [X19+280], W22
	123 Move [X19+240], X8
	124 Move [X19+14], V0
	125 Move X0, [X24]
	126 Call 0x1C17F10
	127 Move X1, [X23]
	128 Move X20, X0
	129 Call List`1<ShaderTagId>..ctor, X0
	130 Move X8, [X19+264]
	131 Move [X19+256], X20
	132 Compare X8, 0
	133 JumpIfEqual {136}
	134 Move X8, 0x712000
	135 Move X8, [X8+1872]
	136 Move X8, 0x712000
	137 Move X8, [X8+1896]
	138 Move X1, [X8]
	139 Add X0, X31, 8
	140 Move X2, X31
	141 Move [X31+8], W31
	142 Call ShaderTagId..ctor, X0, X1
	143 Compare X20, 0
	144 JumpIfEqual {178}
	145 Move W10, [X20+28]
	146 Move W1, [X31+8]
	147 Move X8, [X20+16]
	148 Move X9, [X21]
	149 Add W10, W10, 1
	150 Move [X20+28], W10
	151 Compare X8, 0
	152 JumpIfEqual {178}
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Move W11, [X8+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W9, W10, 1
	157 Add X8, X8, X10
	158 Move [X20+24], W9
	159 Move [X8+32], W1
	160 Move X8, [X9+32]
	161 Move X0, X20
	162 Move X8, [X8+192]
	163 Move X2, [X8+112]
	164 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	165 Move X20, [X31+128]
	166 Move X19, [X31+136]
	167 Move X22, [X31+112]
	168 Move X21, [X31+120]
	169 Move X24, [X31+96]
	170 Move X23, [X31+104]
	171 Move X26, [X31+80]
	172 Move X25, [X31+88]
	173 Move X28, [X31+64]
	174 Move X27, [X31+72]
	175 Move X30, [X31+48]
	176 Add X31, X31, 144
	177 Return 
	178 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A444BC MOV X19, X1
	0x03A444C0 MOV X20, X0
	0x03A444C4 TBNZ X8, 0x0, 0x3A444DC
	0x03A444C8 ADRP X0, 0x70F000
	0x03A444CC LDR X0, [X0 + 0xFF0]
	0x03A444D0 BL 0x1C16CF4
	0x03A444D4 MOVZ W8, 0x1
	0x03A444D8 STRB W8, [X22 + 0x179]
	0x03A444DC LDR X0, [X21]
	0x03A444E0 LDR W8, [X0 + 0xE0]
	0x03A444E4 CBNZ W8, 0x3A444F0
	0x03A444E8 BL 0x1C16DFC
	0x03A444EC LDR X0, [X21]
	0x03A444F0 LDR X8, [X0 + 0xB8]
	0x03A444F4 MOV X0, X20
	0x03A444F8 MOV X1, X19
	0x03A444FC LDP X20, X19, [X31 + 0x20]
	0x03A44500 LDR X2, [X8]
	0x03A44504 LDP X22, X21, [X31 + 0x10]
	0x03A44508 LDR X30, [X31], #0x30
	0x03A4450C B 0x3A42A44
	0x03A44510 STR W1, [X0 + 0xCC]
	0x03A44514 STP S0, S1, [X0 + 0xD0]
	0x03A44518 STP S2, S3, [X0 + 0xD8]
	0x03A4451C RET
	0x03A44520 RET
	0x03A44524 RET
	0x03A44528 RET
	0x03A4452C RET
	0x03A44530 STP X30, X23, [X31 - 0x30]!
	0x03A44534 STP X22, X21, [X31 + 0x10]
	0x03A44538 STP X20, X19, [X31 + 0x20]
	0x03A4453C ADRP X23, 0x99E000
	0x03A44540 ADRP X21, 0x711000
	0x03A44544 ADRP X22, 0x711000
	0x03A44548 ADRP X20, 0x6AF000
	0x03A4454C LDRB W8, [X23 + 0x17A]
	0x03A44550 LDR X21, [X21 + 0xC58]
	0x03A44554 LDR X22, [X22 + 0xC60]
	0x03A44558 LDR X20, [X20 + 0xA28]
	0x03A4455C MOV X19, X0
	0x03A44560 TBNZ X8, 0x0, 0x3A44590
	0x03A44564 ADRP X0, 0x6AF000
	0x03A44568 LDR X0, [X0 + 0xA28]
	0x03A4456C BL 0x1C16CF4
	0x03A44570 ADRP X0, 0x711000
	0x03A44574 LDR X0, [X0 + 0xC58]
	0x03A44578 BL 0x1C16CF4
	0x03A4457C ADRP X0, 0x711000
	0x03A44580 LDR X0, [X0 + 0xC60]
	0x03A44584 BL 0x1C16CF4
	0x03A44588 MOVZ W8, 0x1
	0x03A4458C STRB W8, [X23 + 0x17A]
	0x03A44590 LDR X8, [X19]
	0x03A44594 MOV X0, X19
	0x03A44598 LDP X9, X1, [X8 + 0x168]
	0x03A4459C BLR X9
	0x03A445A0 LDR X8, [X21]
	0x03A445A4 LDR X2, [X22]
	0x03A445A8 MOV X1, X0
	0x03A445AC MOV X3, X31
	0x03A445B0 MOV X0, X8
	0x03A445B4 BL 0x32274B8
	0x03A445B8 LDR X8, [X20]
	0x03A445BC MOV X19, X0
	0x03A445C0 LDR W9, [X8 + 0xE0]
	0x03A445C4 CBNZ W9, 0x3A445D0
	0x03A445C8 MOV X0, X8
	0x03A445CC BL 0x1C16DFC
	0x03A445D0 MOV X0, X19
	0x03A445D4 LDP X20, X19, [X31 + 0x20]
	0x03A445D8 LDP X22, X21, [X31 + 0x10]
	0x03A445DC MOV X1, X31
	0x03A445E0 LDP X30, X23, [X31], #0x30
	0x03A445E4 B 0x3C06A04
	0x03A445E8 SUB X31, X31, 0x1F0
	0x03A445EC STP D11, D10, [X31 + 0x180]
	0x03A445F0 STP D9, D8, [X31 + 0x190]
	0x03A445F4 STP X29, X30, [X31 + 0x1A0]
	0x03A445F8 STP X26, X25, [X31 + 0x1B0]
	0x03A445FC STP X24, X23, [X31 + 0x1C0]
	0x03A44600 STP X22, X21, [X31 + 0x1D0]
	0x03A44604 STP X20, X19, [X31 + 0x1E0]
	0x03A44608 ADRP X26, 0x99E000
	0x03A4460C ADRP X25, 0x710000
	0x03A44610 LDRB W8, [X26 + 0x17B]
	0x03A44614 LDR X25, [X25 + 0x8C8]
	0x03A44618 MOV W19, W5
	0x03A4461C MOV X20, X4
	0x03A44620 MOV X22, X3
	0x03A44624 MOV X23, X2
	0x03A44628 MOV X21, X1
	0x03A4462C MOV X24, X0
	0x03A44630 TBNZ X8, 0x0, 0x3A44648
	0x03A44634 ADRP X0, 0x710000
	0x03A44638 LDR X0, [X0 + 0x8C8]
	0x03A4463C BL 0x1C16CF4
	0x03A44640 MOVZ W8, 0x1
	0x03A44644 STRB W8, [X26 + 0x17B]
	0x03A44648 LDR X8, [X22 + 0x20]
	0x03A4464C LDP V1, V0, [X22]
	0x03A44650 MOVZ W0, 0x2
	0x03A44654 MOV X1, X31
	0x03A44658 STR X8, [X31 + 0x170]
	0x03A4465C ADD X8, X31, 0xF0
	0x03A44660 STP V1, V0, [X31 + 0x150]
	0x03A44664 BL 0x3C4B204
	0x03A44668 LDP V0, V1, [X31 + 0xF0]
	0x03A4466C LDR X8, [X31 + 0x110]
	0x03A44670 LDR X0, [X25]
	0x03A44674 STP V0, V1, [X31 + 0x120]
	0x03A44678 STR X8, [X31 + 0x140]
	0x03A4467C LDR W25, [X24 + 0xCC]
	0x03A44680 LDP S11, S9, [X24 + 0xD0]
	0x03A44684 LDR W8, [X0 + 0xE0]
	0x03A44688 LDP S10, S8, [X24 + 0xD8]
	0x03A4468C CBNZ W8, 0x3A44694
	0x03A44690 BL 0x1C16DFC
	0x03A44694 LDP V0, V1, [X31 + 0x150]
	0x03A44698 LDP V2, V3, [X31 + 0x120]
	0x03A4469C LDR X8, [X31 + 0x170]
	0x03A446A0 LDR X9, [X31 + 0x140]
	0x03A446A4 STP V0, V1, [X31 + 0xC0]
	0x03A446A8 STP V2, V3, [X31 + 0x90]
	0x03A446AC ADD X1, X31, 0xC0
	0x03A446B0 ADD X2, X31, 0x90
	0x03A446B4 MOV X0, X21
	0x03A446B8 MOV W3, W25
	0x03A446BC MOV V0.16B, V11.16B
	0x03A446C0 MOV V1.16B, V9.16B
	0x03A446C4 MOV V2.16B, V10.16B
	0x03A446C8 MOV V3.16B, V8.16B
	0x03A446CC STR X8, [X31 + 0xE0]
	0x03A446D0 STR X9, [X31 + 0xB0]
	0x03A446D4 BL 0x3A44760
	0x03A446D8 LDR X8, [X23 + 0x20]
	0x03A446DC LDP V1, V0, [X23]
	0x03A446E0 STR X8, [X31 + 0x110]
	0x03A446E4 STP V1, V0, [X31 + 0xF0]
	0x03A446E8 LDR X8, [X22 + 0x20]
	0x03A446EC LDP V1, V0, [X22]
	0x03A446F0 STR X8, [X31 + 0x80]
	0x03A446F4 STP V1, V0, [X31 + 0x60]
	0x03A446F8 CBZ X21, 0x3A4475C
	0x03A446FC LDP V0, V1, [X31 + 0xF0]
	0x03A44700 LDR X8, [X31 + 0x110]
	0x03A44704 LDP V2, V3, [X31 + 0x60]
	0x03A44708 LDR X9, [X31 + 0x80]
	0x03A4470C ADD X1, X31, 0x30
	0x03A44710 ADD X2, X31, 0x0
	0x03A44714 MOV X0, X21
	0x03A44718 MOV X3, X20
	0x03A4471C MOV W4, W19
	0x03A44720 MOV X5, X31
	0x03A44724 STP V0, V1, [X31 + 0x30]
	0x03A44728 STR X8, [X31 + 0x50]
	0x03A4472C STP V2, V3, [X31]
	0x03A44730 STR X9, [X31 + 0x20]
	0x03A44734 BL 0x3C4FA64
	0x03A44738 LDP X20, X19, [X31 + 0x1E0]
	0x03A4473C LDP X22, X21, [X31 + 0x1D0]
	0x03A44740 LDP X24, X23, [X31 + 0x1C0]
	0x03A44744 LDP X26, X25, [X31 + 0x1B0]
	0x03A44748 LDP X29, X30, [X31 + 0x1A0]
	0x03A4474C LDP D9, D8, [X31 + 0x190]
	0x03A44750 LDP D11, D10, [X31 + 0x180]
	0x03A44754 ADD X31, X31, 0x1F0
	0x03A44758 RET
	0x03A4475C BL 0x1C16F20
	0x03A44760 SUB X31, X31, 0x1A0
	0x03A44764 STP D11, D10, [X31 + 0x130]
	0x03A44768 STP D9, D8, [X31 + 0x140]
	0x03A4476C STP X29, X30, [X31 + 0x150]
	0x03A44770 STP X26, X25, [X31 + 0x160]
	0x03A44774 STP X24, X23, [X31 + 0x170]
	0x03A44778 STP X22, X21, [X31 + 0x180]
	0x03A4477C STP X20, X19, [X31 + 0x190]
	0x03A44780 ADRP X24, 0x99E000
	0x03A44784 ADRP X23, 0x710000
	0x03A44788 LDRB W8, [X24 + 0x1B3]
	0x03A4478C LDR X23, [X23 + 0x8C8]
	0x03A44790 MOV V8.16B, V3.16B
	0x03A44794 MOV V9.16B, V2.16B
	0x03A44798 MOV V10.16B, V1.16B
	0x03A4479C MOV V11.16B, V0.16B
	0x03A447A0 MOV W19, W3
	0x03A447A4 MOV X21, X2
	0x03A447A8 MOV X22, X1
	0x03A447AC MOV X20, X0
	0x03A447B0 TBNZ X8, 0x0, 0x3A447C8
	0x03A447B4 ADRP X0, 0x710000
	0x03A447B8 LDR X0, [X0 + 0x8C8]
	0x03A447BC BL 0x1C16CF4
	0x03A447C0 MOVZ W8, 0x1
	0x03A447C4 STRB W8, [X24 + 0x1B3]
	0x03A447C8 LDR X0, [X23]
	0x03A447CC LDR W8, [X0 + 0xE0]
	0x03A447D0 CBNZ W8, 0x3A447DC
	0x03A447D4 BL 0x1C16DFC
	0x03A447D8 LDR X0, [X23]
	0x03A447DC LDR X8, [X0 + 0xB8]
	0x03A447E0 LDR X9, [X22 + 0x20]
	0x03A447E4 LDP V0, V1, [X22]
	0x03A447E8 LDR X8, [X8 + 0x18]
	0x03A447EC STR X9, [X31 + 0x120]
	0x03A447F0 STP V0, V1, [X31 + 0x100]
	0x03A447F4 CBZ X8, 0x3A44A28
	0x03A447F8 LDP V0, V1, [X31 + 0x100]
	0x03A447FC LDR X9, [X31 + 0x120]
	0x03A44800 STP V0, V1, [X31 + 0xD0]
	0x03A44804 STR X9, [X31 + 0xF0]
	0x03A44808 LDR W9, [X8 + 0x18]
	0x03A4480C CBZ W9, 0x3A44A2C
	0x03A44810 LDR X9, [X31 + 0xF0]
	0x03A44814 LDP V1, V0, [X31 + 0xD0]
	0x03A44818 MOVZ W24, 0x1
	0x03A4481C MOVZ W25, 0x48
	0x03A44820 STR X9, [X8 + 0x40]
	0x03A44824 STP V1, V0, [X8 + 0x20]
	0x03A44828 LDR X0, [X23]
	0x03A4482C LDR W8, [X0 + 0xE0]
	0x03A44830 CBNZ W8, 0x3A4483C
	0x03A44834 BL 0x1C16DFC
	0x03A44838 LDR X0, [X23]
	0x03A4483C LDR X8, [X0 + 0xB8]
	0x03A44840 LDR X9, [X8 + 0x18]
	0x03A44844 CBZ X9, 0x3A44A28
	0x03A44848 LDR W10, [X0 + 0xE0]
	0x03A4484C LDRSW X26, [X9 + 0x18]
	0x03A44850 CBNZ W10, 0x3A44860
	0x03A44854 BL 0x1C16DFC
	0x03A44858 LDR X0, [X23]
	0x03A4485C LDR X8, [X0 + 0xB8]
	0x03A44860 CMP X24, X26
	0x03A44864 B.GE 0x3A448CC
	0x03A44868 LDR X26, [X8 + 0x18]
	0x03A4486C ADD X8, X31, 0xA0
	0x03A44870 MOV W0, W31
	0x03A44874 MOV X1, X31
	0x03A44878 BL 0x3C4B258
	0x03A4487C LDP V0, V1, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X25
	005 Move [X31+256], X24
	006 Move [X31+264], X23
	007 Move [X31+272], X22
	008 Move [X31+280], X21
	009 Move [X31+288], X20
	010 Move [X31+296], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X22+40]
	013 Move X21, 0x99F000
	014 Move X23, 0x70D000
	015 Move X20, X2
	016 Move [X31+216], X8
	017 Move [X31+8], X1
	018 Move W8, [X21+370]
	019 Move X23, [X23+3200]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0x6D8000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move X0, 0x712000
	029 Move X0, [X0+3144]
	030 Call 0x1C17CF4
	031 Move X0, 0x712000
	032 Move X0, [X0+3088]
	033 Call 0x1C17CF4
	034 Move X0, 0x711000
	035 Move X0, [X0+16]
	036 Call 0x1C17CF4
	037 Move X0, 0x70D000
	038 Move X0, [X0+3200]
	039 Call 0x1C17CF4
	040 Move X0, 0x712000
	041 Move X0, [X0+3096]
	042 Call 0x1C17CF4
	043 Move X0, 0x712000
	044 Move X0, [X0+3104]
	045 Call 0x1C17CF4
	046 Move X0, 0x712000
	047 Move X0, [X0+1768]
	048 Call 0x1C17CF4
	049 Move X0, 0x712000
	050 Move X0, [X0+3112]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+370], W8
	054 Add X0, X31, 16
	055 Move W2, 196
	056 Move W1, W31
	057 Call 0x3EB2B10
	058 Move [X31], W31
	059 Move X1, [X19+256]
	060 Add X8, X31, 16
	061 Move X2, X20
	062 Move W3, W31
	063 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	064 Move X21, [X20]
	065 Move X2, [X19+248]
	066 Add X0, X31, 0
	067 Move X3, X31
	068 Move X1, X21
	069 Call ProfilingScope..ctor, X0, X1, X2
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Add X0, X31, 8
	076 Move X1, X21
	077 Move X2, X31
	078 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	079 Compare X21, 0
	080 JumpIfEqual {224}
	081 Move X0, X21
	082 Move X1, X31
	083 Call CommandBuffer.Clear, X0
	084 Move X8, 0x711000
	085 Move X8, [X8+16]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X21
	092 Move X1, X20
	093 Move X2, X31
	094 Call RenderingUtils.SetScaleBiasRt, X0, X1
	095 Move X8, 0x712000
	096 Move X8, [X8+3088]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Add X1, X20, 24
	103 Move X0, X21
	104 Move X2, X31
	105 Call NormalReconstruction.SetupProperties, X0, X1
	106 Move X8, [X19+272]
	107 Compare X8, 0
	108 JumpIfEqual {225}
	109 Move X24, 0x6D8000
	110 Move X24, [X24+2296]
	111 Move W25, [X8+16]
	112 Move X0, [X24]
	113 Move W9, [X0+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X8, 0x712000
	118 Move X8, [X8+3112]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move X1, [X8]
	122 Move X0, X21
	123 Move X3, X31
	124 Call CoreUtils.SetKeyword, X0, X1, X2
	125 Move X8, [X19+272]
	126 Compare X8, 0
	127 JumpIfEqual {226}
	128 Move X9, 0x712000
	129 Move W8, [X8+16]
	130 Move X9, [X9+3104]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X1, [X9]
	133 NotImplemented "Instruction CSET not yet implemented."
	134 Move X0, X21
	135 Move X3, X31
	136 Call CoreUtils.SetKeyword, X0, X1, X2
	137 Move X8, [X19+272]
	138 Compare X8, 0
	139 JumpIfEqual {227}
	140 Move X9, 0x712000
	141 Move W8, [X8+16]
	142 Move X9, [X9+3096]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X1, [X9]
	145 NotImplemented "Instruction CSET not yet implemented."
	146 Move X0, X21
	147 Move X3, X31
	148 Call CoreUtils.SetKeyword, X0, X1, X2
	149 Move X8, 0x712000
	150 Move X8, [X8+3144]
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X31
	157 Call DecalRendererFeature.get_isGLDevice
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {176}
	162 Move X0, [X24]
	163 Move W24, [X19+280]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X8, 0x712000
	169 Move X8, [X8+1768]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSET not yet implemented."
	172 Move X1, [X8]
	173 Move X0, X21
	174 Move X3, X31
	175 Call CoreUtils.SetKeyword, X0, X1, X2
	176 Move X0, [X23]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Add X0, X31, 8
	182 Move X1, X21
	183 Move X2, X31
	184 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	185 Move X0, X21
	186 Move X1, X31
	187 Call CommandBuffer.Clear, X0
	188 Move X0, [X19+264]
	189 Compare X0, 0
	190 JumpIfEqual {193}
	191 Move X1, X21
	192 Call DecalDrawSystem.Execute, X0, X1
	193 Move X0, [X23]
	194 Move X21, [X20+8]
	195 Move X20, [X20+16]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Add X4, X19, 224
	201 Add X0, X31, 8
	202 Add X3, X31, 16
	203 Move X1, X21
	204 Move X2, X20
	205 Move X5, X31
	206 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	207 Add X0, X31, 0
	208 Move X1, X31
	209 Call ProfilingScope.Dispose, X0
	210 Move X8, [X22+40]
	211 Move X9, [X31+216]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X20, [X31+288]
	214 Move X19, [X31+296]
	215 Move X22, [X31+272]
	216 Move X21, [X31+280]
	217 Move X24, [X31+256]
	218 Move X23, [X31+264]
	219 Move X30, [X31+240]
	220 Move X25, [X31+248]
	221 Move X29, [X31+224]
	222 Add X31, X31, 304
	223 Return 
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Call 0x1C17F20
	227 Call 0x1C17F20
	228 Call 0x3EB2B20
	229 Move X19, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X19
	232 Call 0x3EB2AD0
	233 Move X20, [X0]
	234 Call 0x3EB2AE0
	235 Add X0, X31, 0
	236 Move X1, X31
	237 Call ProfilingScope.Dispose, X0
	238 Compare X20, 0
	239 JumpIfEqual {210}
	240 Move X0, X20
	241 Call 0x1C17F18
	242 Move X20, X31
	243 Move X19, X0
	244 Add X0, X31, 0
	245 Move X1, X31
	246 Call ProfilingScope.Dispose, X0
	247 Compare X20, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X19
	250 Call 0x1D2D690
	251 Move X0, X20
	252 Call 0x1C17F18
	253 Call 0x1991590

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A44880 LDR X8, [X31 + 0xC0]
	0x03A44884 STP V0, V1, [X31 + 0x100]
	0x03A44888 STR X8, [X31 + 0x120]
	0x03A4488C CBZ X26, 0x3A44A28
	0x03A44890 LDP V0, V1, [X31 + 0x100]
	0x03A44894 LDR X8, [X31 + 0x120]
	0x03A44898 STP V0, V1, [X31 + 0x70]
	0x03A4489C STR X8, [X31 + 0x90]
	0x03A448A0 LDR W8, [X26 + 0x18]
	0x03A448A4 CMP X24, X8
	0x03A448A8 B.CS 0x3A44A2C
	0x03A448AC LDR X8, [X31 + 0x90]
	0x03A448B0 LDP V0, V1, [X31 + 0x70]
	0x03A448B4 ADD X9, X26, X25
	0x03A448B8 ADD X24, X24, 0x1
	0x03A448BC ADD X25, X25, 0x28
	0x03A448C0 STR X8, [X9 + 0x20]
	0x03A448C4 STP V0, V1, [X9]
	0x03A448C8 B 0x3A44828
	0x03A448CC LDR X9, [X8 + 0x48]
	0x03A448D0 CBZ X9, 0x3A44A28
	0x03A448D4 LDR W10, [X9 + 0x18]
	0x03A448D8 CBZ W10, 0x3A44A2C
	0x03A448DC STR W31, [X9 + 0x20]
	0x03A448E0 STR W31, [X8 + 0x50]
	0x03A448E4 MOVZ W24, 0x9
	0x03A448E8 LDR W8, [X0 + 0xE0]
	0x03A448EC CBNZ W8, 0x3A448F8
	0x03A448F0 BL 0x1C16DFC
	0x03A448F4 LDR X0, [X23]
	0x03A448F8 LDR X8, [X0 + 0xB8]
	0x03A448FC LDR X9, [X8 + 0x48]
	0x03A44900 CBZ X9, 0x3A44A28
	0x03A44904 LDRSW X9, [X9 + 0x18]
	0x03A44908 SUB X25, X24, 0x8
	0x03A4490C CMP X25, X9
	0x03A44910 B.GE 0x3A44948
	0x03A44914 LDR W8, [X0 + 0xE0]
	0x03A44918 CBNZ W8, 0x3A44924
	0x03A4491C BL 0x1C16DFC
	0x03A44920 LDR X0, [X23]
	0x03A44924 LDR X8, [X0 + 0xB8]
	0x03A44928 LDR X8, [X8 + 0x48]
	0x03A4492C CBZ X8, 0x3A44A28
	0x03A44930 LDR W9, [X8 + 0x18]
	0x03A44934 CMP X25, X9
	0x03A44938 B.CS 0x3A44A2C
	0x03A4493C STR W31, [X8, X24, LSL #2]
	0x03A44940 ADD X24, X24, 0x1
	0x03A44944 B 0x3A448E8
	0x03A44948 LDR X9, [X21 + 0x20]
	0x03A4494C LDP V1, V0, [X21]
	0x03A44950 STR X9, [X31 + 0x120]
	0x03A44954 STP V1, V0, [X31 + 0x100]
	0x03A44958 LDR W9, [X0 + 0xE0]
	0x03A4495C CBNZ W9, 0x3A4496C
	0x03A44960 BL 0x1C16DFC
	0x03A44964 LDR X0, [X23]
	0x03A44968 LDR X8, [X0 + 0xB8]
	0x03A4496C LDR X9, [X31 + 0x120]
	0x03A44970 LDP V1, V0, [X31 + 0x100]
	0x03A44974 STR X9, [X8 + 0x40]
	0x03A44978 STP V1, V0, [X8 + 0x20]
	0x03A4497C LDR X8, [X22 + 0x20]
	0x03A44980 LDP V1, V0, [X22]
	0x03A44984 STR X8, [X31 + 0x120]
	0x03A44988 STP V1, V0, [X31 + 0x100]
	0x03A4498C LDR X8, [X21 + 0x20]
	0x03A44990 LDP V1, V0, [X21]
	0x03A44994 STR X8, [X31 + 0xC0]
	0x03A44998 STP V1, V0, [X31 + 0xA0]
	0x03A4499C LDR W8, [X0 + 0xE0]
	0x03A449A0 CBNZ W8, 0x3A449A8
	0x03A449A4 BL 0x1C16DFC
	0x03A449A8 LDP V0, V1, [X31 + 0x100]
	0x03A449AC LDR X8, [X31 + 0x120]
	0x03A449B0 LDR X9, [X31 + 0xC0]
	0x03A449B4 ANDS W31, W19, 0x6
	0x03A449B8 STP V0, V1, [X31 + 0x40]
	0x03A449BC LDP V0, V1, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x99F000
	008 Move W8, [X20+371]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x6D8000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x712000
	018 Move X0, [X0+3096]
	019 Call 0x1C17CF4
	020 Move X0, 0x712000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x712000
	024 Move X0, [X0+1768]
	025 Call 0x1C17CF4
	026 Move X0, 0x712000
	027 Move X0, [X0+3112]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+371], W8
	031 Compare X19, 0
	032 JumpIfEqual {75}
	033 Move X8, 0x6D8000
	034 Move X8, [X8+2296]
	035 Move X23, 0x712000
	036 Move X22, 0x712000
	037 Move X21, 0x712000
	038 Move X0, [X8]
	039 Move X20, 0x712000
	040 Move W8, [X0+224]
	041 Move X23, [X23+3112]
	042 Move X22, [X22+3104]
	043 Move X21, [X21+3096]
	044 Move X20, [X20+1768]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X1, [X23]
	049 Move X0, X19
	050 Move W2, W31
	051 Move X3, X31
	052 Call CoreUtils.SetKeyword, X0, X1, X2
	053 Move X1, [X22]
	054 Move X0, X19
	055 Move W2, W31
	056 Move X3, X31
	057 Call CoreUtils.SetKeyword, X0, X1, X2
	058 Move X1, [X21]
	059 Move X0, X19
	060 Move W2, W31
	061 Move X3, X31
	062 Call CoreUtils.SetKeyword, X0, X1, X2
	063 Move X1, [X20]
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X3, X31
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call CoreUtils.SetKeyword, X0, X1, X2
	074 Return 
	075 Move X0, 0x6B5000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0x712000
	081 Move X0, [X0+1776]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0x712000
	088 Move X0, [X0+3152]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

