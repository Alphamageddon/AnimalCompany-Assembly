Type: UnityEngine.Rendering.Universal.ShadowCasterGroup2D

Method: System.Void CacheValues()

Disassembly:
	0x03A28CA4 LDR X21, [X20 + 0xD0]
	0x03A28CA8 LDR X0, [X8]
	0x03A28CAC LDR W8, [X0 + 0xE0]
	0x03A28CB0 CBNZ W8, 0x3A28CB8
	0x03A28CB4 BL 0x1C16DFC
	0x03A28CB8 MOV X0, X21
	0x03A28CBC MOV W1, W31
	0x03A28CC0 BL 0x3A2868C
	0x03A28CC4 STR X0, [X20 + 0x108]
	0x03A28CC8 CBZ X0, 0x3A28CF8
	0x03A28CCC LDR W8, [X0 + 0x18]
	0x03A28CD0 CMP W8, W19
	0x03A28CD4 B.LS 0x3A28CFC
	0x03A28CD8 ADD X8, X0, W19, 0x3, SXTW
	0x03A28CDC LDR X0, [X8 + 0x20]
	0x03A28CE0 LDP X20, X19, [X31 + 0x20]
	0x03A28CE4 LDP X22, X21, [X31 + 0x10]
	0x03A28CE8 LDR X30, [X31], #0x30
	0x03A28CEC RET
	0x03A28CF0 LDR X0, [X20 + 0x108]
	0x03A28CF4 CBNZ X0, 0x3A28CCC
	0x03A28CF8 BL 0x1C16F20
	0x03A28CFC BL 0x1C16F28
	0x03A28D00 STP X29, X30, [X31 - 0x40]!
	0x03A28D04 STP X24, X23, [X31 + 0x10]
	0x03A28D08 STP X22, X21, [X31 + 0x20]
	0x03A28D0C STP X20, X19, [X31 + 0x30]
	0x03A28D10 SUB X31, X31, 0x2C0
	0x03A28D14 ADRP X24, 0x9BA000
	0x03A28D18 ADRP X23, 0x72C000
	0x03A28D1C LDRB W8, [X24 + 0x44]
	0x03A28D20 LDR X23, [X23 + 0x6A0]
	0x03A28D24 MOV W22, W3
	0x03A28D28 MOV X19, X2
	0x03A28D2C MOV X21, X1
	0x03A28D30 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9BB000
	006 Move W8, [X20+47]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x72D000
	013 Move X0, [X0+2752]
	014 Call 0x1C17CF4
	015 Move X0, 0x72D000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+47], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {42}
	023 Move X21, 0x72D000
	024 Move X21, [X21+2760]
	025 Move W20, W31
	026 Move W8, [X0+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X2, [X21]
	029 Move W1, W20
	030 Call List`1<Object>.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {41}
	033 Move X8, [X0]
	034 Move X9, [X8+376]
	035 Move X1, [X8+384]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, [X19+40]
	038 Add W20, W20, 1
	039 Compare X0, 0
	040 JumpIfNotEqual {26}
	041 Call 0x1C17F20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCaster2D> GetShadowCasters()

Disassembly:
	0x03A28D34 TBNZ X8, 0x0, 0x3A28D4C
	0x03A28D38 ADRP X0, 0x72C000

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 GetShadowGroup()

Disassembly:
	0x03A28D3C LDR X0, [X0 + 0x6A0]
	0x03A28D40 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void RegisterShadowCaster2D(UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster2D)

Disassembly:
	0x03A28D44 MOVZ W8, 0x1
	0x03A28D48 STRB W8, [X24 + 0x44]
	0x03A28D4C LDR X0, [X23]
	0x03A28D50 LDR W8, [X0 + 0xE0]
	0x03A28D54 CBNZ W8, 0x3A28D60
	0x03A28D58 BL 0x1C16DFC
	0x03A28D5C LDR X0, [X23]
	0x03A28D60 LDR X8, [X0 + 0xB8]
	0x03A28D64 LDR X8, [X8 + 0x58]
	0x03A28D68 CBZ X8, 0x3A28DBC
	0x03A28D6C LDR W9, [X8 + 0x18]
	0x03A28D70 CMP W9, W22
	0x03A28D74 B.LS 0x3A28DC0
	0x03A28D78 ADD X8, X8, W22, 0x2, SXTW
	0x03A28D7C LDR W22, [X8 + 0x20]
	0x03A28D80 ADD X0, X31, 0x8
	0x03A28D84 MOVZ W2, 0x2B8
	0x03A28D88 MOV X1, X21
	0x03A28D8C BL 0x3EB1AC0
	0x03A28D90 ADD X2, X31, 0x8
	0x03A28D94 MOV X0, X20
	0x03A28D98 MOV W1, W22
	0x03A28D9C MOV X3, X19
	0x03A28DA0 BL 0x3A28DC4
	0x03A28DA4 ADD X31, X31, 0x2C0
	0x03A28DA8 LDP X20, X19, [X31 + 0x30]
	0x03A28DAC LDP X22, X21, [X31 + 0x20]
	0x03A28DB0 LDP X24, X23, [X31 + 0x10]
	0x03A28DB4 LDP X29, X30, [X31], #0x40
	0x03A28DB8 RET
	0x03A28DBC BL 0x1C16F20
	0x03A28DC0 BL 0x1C16F28
	0x03A28DC4 SUB X31, X31, 0xF0
	0x03A28DC8 STP X30, X23, [X31 + 0xC0]
	0x03A28DCC STP X22, X21, [X31 + 0xD0]
	0x03A28DD0 STP X20, X19, [X31 + 0xE0]
	0x03A28DD4 ADRP X23, 0x9BA000
	0x03A28DD8 LDRB W8, [X23 + 0x48]
	0x03A28DDC MOV X19, X3
	0x03A28DE0 MOV X21, X2
	0x03A28DE4 MOV W20, W1
	0x03A28DE8 MOV X22, X0
	0x03A28DEC TBNZ X8, 0x0, 0x3A28E04
	0x03A28DF0 ADRP X0, 0x72C000
	0x03A28DF4 LDR X0, [X0 + 0x660]
	0x03A28DF8 BL 0x1C16CF4
	0x03A28DFC MOVZ W8, 0x1
	0x03A28E00 STRB W8, [X23 + 0x48]
	0x03A28E04 MOVI V0.2D, 0x0
	0x03A28E08 STR W31, [X31 + 0xB0]
	0x03A28E0C STP V0, V0, [X31 + 0x90]
	0x03A28E10 STR V0, [X31 + 0x8]
	0x03A28E14 CBZ X22, 0x3A28F8C
	0x03A28E18 ADRP X10, 0x72C000
	0x03A28E1C LDR X8, [X22]
	0x03A28E20 LDR X10, [X10 + 0x660]
	0x03A28E24 LDRH W9, [X8 + 0x12E]
	0x03A28E28 LDR X1, [X10]
	0x03A28E2C CBZ X9, 0x3A28E50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9BB000
	006 Move W8, [X20+48]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x72D000
	014 Move X0, [X0+2768]
	015 Call 0x1C17CF4
	016 Move X0, 0x72D000
	017 Move X0, [X0+2776]
	018 Call 0x1C17CF4
	019 Move X0, 0x72D000
	020 Move X0, [X0+2784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+48], W8
	024 Move X20, [X21+40]
	025 Compare X20, 0
	026 JumpIfNotEqual {39}
	027 Move X8, 0x72D000
	028 Move X8, [X8+2784]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X8, 0x72D000
	032 Move X8, [X8+2776]
	033 Move X20, X0
	034 Move X1, [X8]
	035 Call List`1<Object>..ctor, X0
	036 Move [X21+40], X20
	037 Compare X20, 0
	038 JumpIfEqual {71}
	039 Move X9, 0x72D000
	040 Move X9, [X9+2768]
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X9]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {71}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W9, W10, 1
	052 Add X8, X8, X10
	053 Move [X20+24], W9
	054 Move [X8+32], X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move X8, [X9+32]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X8, [X8+192]
	066 Move X2, [X8+112]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Return 
	071 Call 0x1C17F20

Method: System.Void UnregisterShadowCaster2D(UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster2D)

Disassembly:
	0x03A28E30 LDR X10, [X8 + 0xB0]
	0x03A28E34 ADD X10, X10, 0x8
	0x03A28E38 LDUR X11, [X10 - 0x8]
	0x03A28E3C CMP X11, X1
	0x03A28E40 B.EQ 0x3A28E60
	0x03A28E44 SUBS X9, X9, 0x1
	0x03A28E48 ADD X10, X10, 0x10
	0x03A28E4C B.NE 0x3A28E38
	0x03A28E50 MOV X0, X22
	0x03A28E54 MOV W2, W31
	0x03A28E58 BL 0x1C5C788
	0x03A28E5C B 0x3A28E6C
	0x03A28E60 LDRSW X9, [X10]
	0x03A28E64 ADD X8, X8, X9, 0x4, LSL
	0x03A28E68 ADD X0, X8, 0x138
	0x03A28E6C LDP X8, X1, [X0]
	0x03A28E70 MOV X0, X22
	0x03A28E74 BLR X8
	0x03A28E78 CBZ X0, 0x3A28F8C
	0x03A28E7C ADRP X8, 0xFFFFFFFFFD0C2000
	0x03A28E80 LDR V0, [X0 + 0x50]
	0x03A28E84 LDR V1, [X8 + 0x330]
	0x03A28E88 FMOV S2, 1
	0x03A28E8C MOVZ W8, 0x7F800000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9BB000
	006 Move W8, [X21+49]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x72D000
	014 Move X0, [X0+2792]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+49], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x72D000
	022 Move X8, [X8+2792]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A275F8 B 0x3A275FC
	0x03A275FC STR X30, [X31 - 0x30]!

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

