Type: UnityEngine.Rendering.Universal.UniversalRenderer

Method: System.Int32 SupportedCameraStackingTypes()

Disassembly:
	0x03A835E4 MOV X1, X31
	0x03A835E8 BL 0x3C4BA88
	0x03A835EC AND W8, W0, 0x1
	0x03A835F0 STRB W8, [X19 + 0x30C]
	0x03A835F4 LDP X20, X19, [X31 + 0x100]
	0x03A835F8 LDP X22, X21, [X31 + 0xF0]
	0x03A835FC LDP X24, X23, [X31 + 0xE0]
	0x03A83600 LDP X26, X25, [X31 + 0xD0]
	0x03A83604 LDP X28, X27, [X31 + 0xC0]

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -49197056
	004 Add X9, X9, 2868
	005 Move W0, [X9]
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: UnityEngine.Rendering.Universal.RenderingMode get_renderingModeRequested()

Disassembly:
	0x03A83608 LDP X29, X30, [X31 + 0xB0]
	0x03A8360C ADD X31, X31, 0x110

ISIL:
	001 Move W0, [X0+736]
	002 Return X0

Method: UnityEngine.Rendering.Universal.RenderingMode get_renderingModeActual()

Disassembly:
	0x03A83610 RET
	0x03A83614 BL 0x1C16F20
	0x03A83618 BL 0x1C16F28
	0x03A8361C STR X30, [X31 - 0x30]!
	0x03A83620 STP X22, X21, [X31 + 0x10]
	0x03A83624 STP X20, X19, [X31 + 0x20]
	0x03A83628 ADRP X21, 0x95F000
	0x03A8362C LDRB W8, [X21 + 0x339]
	0x03A83630 MOV W20, W1
	0x03A83634 MOV X19, X0
	0x03A83638 TBNZ X8, 0x0, 0x3A8365C
	0x03A8363C ADRP X0, 0x698000
	0x03A83640 LDR X0, [X0 + 0x8F8]
	0x03A83644 BL 0x1C16CF4
	0x03A83648 ADRP X0, 0x6CF000
	0x03A8364C LDR X0, [X0 + 0xD98]
	0x03A83650 BL 0x1C16CF4
	0x03A83654 MOVZ W8, 0x1
	0x03A83658 STRB W8, [X21 + 0x339]
	0x03A8365C LDR X0, [X19 + 0x2D0]
	0x03A83660 CBZ X0, 0x3A83788
	0x03A83664 MOV X1, X31
	0x03A83668 BL 0x3AA75DC
	0x03A8366C LDR X0, [X19 + 0x1E0]
	0x03A83670 CBZ X0, 0x3A8367C
	0x03A83674 MOV X1, X31
	0x03A83678 BL 0x3AB2234
	0x03A8367C ADD X0, X19, 0x348

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move W0, [X0+736]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X0, X31
	007 Call GL.get_wireframe
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {36}
	012 Move X0, [X19+224]
	013 Compare X0, 0
	014 JumpIfEqual {21}
	015 Move X1, X31
	016 Call DebugHandler.get_IsActiveModeUnsupportedForDeferred, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {36}
	021 Move X0, [X19+728]
	022 Compare X0, 0
	023 JumpIfEqual {37}
	024 Move X1, X31
	025 Call DeferredLights.IsRuntimeSupportedThisFrame, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Move X8, [X19+728]
	031 Compare X8, 0
	032 JumpIfEqual {41}
	033 Move W8, [X8+25]
	034 Compare W8, 0
	035 JumpIfEqual {40}
	036 Move W0, W31
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return X0
	040 Move W0, [X19+736]
	041 Call 0x1C17F20

Method: System.Boolean get_accurateGbufferNormals()

Disassembly:
	0x03A83680 MOV X1, X31
	0x03A83684 BL 0x3A67A74
	0x03A83688 LDR X0, [X19 + 0x240]
	0x03A8368C CBZ X0, 0x3A83698
	0x03A83690 MOV X1, X31
	0x03A83694 BL 0x3AB0710
	0x03A83698 LDR X0, [X19 + 0x260]
	0x03A8369C CBZ X0, 0x3A836A8

ISIL:
	001 Move X8, [X0+728]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+26]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: UnityEngine.Rendering.Universal.DepthPrimingMode get_depthPrimingMode()

Disassembly:
	0x03A836A0 MOV X1, X31
	0x03A836A4 BL 0x3A5B434

ISIL:
	001 Move W0, [X0+740]
	002 Return X0

Method: System.Void set_depthPrimingMode(UnityEngine.Rendering.Universal.DepthPrimingMode value)

Disassembly:
	0x03A836A8 LDR X0, [X19 + 0x268]
	0x03A836AC CBZ X0, 0x3A836B8

ISIL:
	001 Move [X0+740], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass get_colorGradingLutPass()

Disassembly:
	0x03A836B0 MOV X1, X31
	0x03A836B4 BL 0x3A5B434

ISIL:
	001 Move X0, [X0+840]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PostProcessPass get_postProcessPass()

Disassembly:
	0x03A836B8 ADRP X22, 0x698000
	0x03A836BC LDR X0, [X19 + 0x298]

ISIL:
	001 Move X0, [X0+848]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PostProcessPass get_finalPostProcessPass()

Disassembly:
	0x03A836C0 LDR X22, [X22 + 0x8F8]
	0x03A836C4 CBZ X0, 0x3A836D0

ISIL:
	001 Move X0, [X0+856]
	002 Return X0

Method: UnityEngine.Rendering.RTHandle get_colorGradingLut()

Disassembly:
	0x03A836C8 MOV X1, X31
	0x03A836CC BL 0x39D4B1C

ISIL:
	001 Move X0, [X0+872]
	002 Return X0

Method: UnityEngine.Rendering.Universal.Internal.DeferredLights get_deferredLights()

Disassembly:
	0x03A836D0 LDR X8, [X19]
	0x03A836D4 ADRP X21, 0x6CF000

ISIL:
	001 Move X0, [X0+728]
	002 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.Universal.UniversalRendererData data)

Disassembly:
	0x03A836D8 MOV X0, X19
	0x03A836DC LDP X9, X1, [X8 + 0x1C8]
	0x03A836E0 LDR X21, [X21 + 0xD98]
	0x03A836E4 BLR X9
	0x03A836E8 AND W1, W20, 0x1
	0x03A836EC MOV X0, X19
	0x03A836F0 MOV X2, X31
	0x03A836F4 BL 0x3A4B468
	0x03A836F8 LDR X0, [X22]
	0x03A836FC LDR X20, [X19 + 0x310]
	0x03A83700 LDR W8, [X0 + 0xE0]
	0x03A83704 CBNZ W8, 0x3A8370C
	0x03A83708 BL 0x1C16DFC
	0x03A8370C MOV X0, X20
	0x03A83710 MOV X1, X31
	0x03A83714 BL 0x39E1DF8
	0x03A83718 LDR X0, [X19 + 0x318]
	0x03A8371C MOV X1, X31
	0x03A83720 BL 0x39E1DF8
	0x03A83724 LDR X0, [X19 + 0x320]
	0x03A83728 MOV X1, X31
	0x03A8372C BL 0x39E1DF8
	0x03A83730 LDR X0, [X19 + 0x328]
	0x03A83734 MOV X1, X31
	0x03A83738 BL 0x39E1DF8
	0x03A8373C LDR X0, [X19 + 0x330]
	0x03A83740 MOV X1, X31
	0x03A83744 BL 0x39E1DF8
	0x03A83748 LDR X0, [X19 + 0x338]
	0x03A8374C MOV X1, X31
	0x03A83750 BL 0x39E1DF8
	0x03A83754 LDR X0, [X19 + 0x340]
	0x03A83758 MOV X1, X31
	0x03A8375C BL 0x39E1DF8
	0x03A83760 BL 0x3A8378C
	0x03A83764 LDR X0, [X21]
	0x03A83768 LDR W8, [X0 + 0xE0]
	0x03A8376C CBNZ W8, 0x3A83774
	0x03A83770 BL 0x1C16DFC
	0x03A83774 LDP X20, X19, [X31 + 0x20]
	0x03A83778 LDP X22, X21, [X31 + 0x10]
	0x03A8377C MOV X0, X31
	0x03A83780 LDR X30, [X31], #0x30
	0x03A83784 B 0x39CB398
	0x03A83788 BL 0x1C16F20
	0x03A8378C STR X30, [X31 - 0x20]!
	0x03A83790 STP X20, X19, [X31 + 0x10]
	0x03A83794 ADRP X20, 0x95F000
	0x03A83798 ADRP X19, 0x6D0000
	0x03A8379C LDRB W8, [X20 + 0x344]
	0x03A837A0 LDR X19, [X19 + 0xFF8]
	0x03A837A4 TBNZ X8, 0x0, 0x3A837BC
	0x03A837A8 ADRP X0, 0x6D0000
	0x03A837AC LDR X0, [X0 + 0xFF8]
	0x03A837B0 BL 0x1C16CF4
	0x03A837B4 MOVZ W8, 0x1
	0x03A837B8 STRB W8, [X20 + 0x344]
	0x03A837BC LDR X0, [X19]
	0x03A837C0 LDR W8, [X0 + 0xE0]
	0x03A837C4 CBNZ W8, 0x3A837D0
	0x03A837C8 BL 0x1C16DFC
	0x03A837CC LDR X0, [X19]
	0x03A837D0 LDR X8, [X0 + 0xB8]
	0x03A837D4 LDR X8, [X8 + 0x8]
	0x03A837D8 CBZ X8, 0x3A837EC
	0x03A837DC MOV X0, X8
	0x03A837E0 MOV X1, X31
	0x03A837E4 BL 0x39D4B1C
	0x03A837E8 LDR X0, [X19]
	0x03A837EC LDR W8, [X0 + 0xE0]
	0x03A837F0 CBNZ W8, 0x3A837FC
	0x03A837F4 BL 0x1C16DFC
	0x03A837F8 LDR X0, [X19]
	0x03A837FC LDR X8, [X0 + 0xB8]
	0x03A83800 LDR X0, [X8 + 0x10]
	0x03A83804 CBZ X0, 0x3A83818
	0x03A83808 LDP X20, X19, [X31 + 0x10]
	0x03A8380C MOV X1, X31
	0x03A83810 LDR X30, [X31], #0x20
	0x03A83814 B 0x39D4B1C
	0x03A83818 LDP X20, X19, [X31 + 0x10]
	0x03A8381C LDR X30, [X31], #0x20
	0x03A83820 RET
	0x03A83824 STP X30, X19, [X31 - 0x10]!
	0x03A83828 MOV X19, X0
	0x03A8382C LDR X0, [X0 + 0x270]
	0x03A83830 CBZ X0, 0x3A83908
	0x03A83834 MOV X1, X31
	0x03A83838 BL 0x3AB5950
	0x03A8383C LDR X8, [X19 + 0x2D8]
	0x03A83840 CBZ X8, 0x3A8385C
	0x03A83844 LDRB W8, [X8 + 0x15]
	0x03A83848 CBNZ W8, 0x3A8385C
	0x03A8384C LDR X0, [X19 + 0x1E0]
	0x03A83850 CBZ X0, 0x3A8385C
	0x03A83854 MOV X1, X31
	0x03A83858 BL 0x3AB2234
	0x03A8385C ADD X0, X19, 0x348
	0x03A83860 MOV X1, X31
	0x03A83864 BL 0x3A67AD8
	0x03A83868 LDR X0, [X19 + 0x1D0]
	0x03A8386C CBZ X0, 0x3A83878
	0x03A83870 MOV X1, X31
	0x03A83874 BL 0x3AB3C2C
	0x03A83878 LDR X0, [X19 + 0x1D8]
	0x03A8387C CBZ X0, 0x3A83888
	0x03A83880 MOV X1, X31
	0x03A83884 BL 0x3AA13A0
	0x03A83888 LDR X0, [X19 + 0x290]
	0x03A8388C CBZ X0, 0x3A83898
	0x03A83890 MOV X1, X31
	0x03A83894 BL 0x39D4B1C
	0x03A83898 LDR X0, [X19 + 0x2A0]
	0x03A8389C CBZ X0, 0x3A838A8
	0x03A838A0 MOV X1, X31
	0x03A838A4 BL 0x39D4B1C
	0x03A838A8 LDR X0, [X19 + 0x2A8]
	0x03A838AC CBZ X0, 0x3A838B8
	0x03A838B0 MOV X1, X31
	0x03A838B4 BL 0x39D4B1C
	0x03A838B8 LDR X0, [X19 + 0x2B0]
	0x03A838BC CBZ X0, 0x3A838C8
	0x03A838C0 MOV X1, X31
	0x03A838C4 BL 0x39D4B1C
	0x03A838C8 LDR X0, [X19 + 0x2B8]
	0x03A838CC CBZ X0, 0x3A838D8
	0x03A838D0 MOV X1, X31
	0x03A838D4 BL 0x39D4B1C
	0x03A838D8 LDR X0, [X19 + 0x2C0]
	0x03A838DC CBZ X0, 0x3A838E8
	0x03A838E0 MOV X1, X31
	0x03A838E4 BL 0x39D4B1C
	0x03A838E8 LDR X0, [X19 + 0x2C8]
	0x03A838EC CBZ X0, 0x3A838F8
	0x03A838F0 MOV X1, X31
	0x03A838F4 BL 0x39D4B1C
	0x03A838F8 MOVZ W8, 0x1
	0x03A838FC STRB W8, [X19 + 0xD8]
	0x03A83900 LDP X30, X19, [X31], #0x10
	0x03A83904 RET
	0x03A83908 BL 0x1C16F20
	0x03A8390C SUB X31, X31, 0x160
	0x03A83910 STR D12, [X31 + 0x110]
	0x03A83914 STP D11, D10, [X31 + 0x118]
	0x03A83918 STP D9, D8, [X31 + 0x128]
	0x03A8391C STR X29, [X31 + 0x138]
	0x03A83920 STP X30, X21, [X31 + 0x140]
	0x03A83924 STP X20, X19, [X31 + 0x150]
	0x03A83928 STR X31, [X31 + 0x108]
	0x03A8392C MOV X19, X0
	0x03A83930 LDR X0, [X0 + 0xE0]
	0x03A83934 CBZ X0, 0x3A83BF8
	0x03A83938 MOV X2, X31
	0x03A8393C MOV X20, X1
	0x03A83940 BL 0x3A35D04
	0x03A83944 TBZ X0, 0x0, 0x3A83BF8
	0x03A83948 LDR X0, [X19 + 0xE0]
	0x03A8394C CBZ X0, 0x3A83C18
	0x03A83950 ADD X1, X31, 0x10C
	0x03A83954 ADD X2, X31, 0x108
	0x03A83958 MOV X3, X31
	0x03A8395C BL 0x3A35D60
	0x03A83960 TBZ X0, 0x0, 0x3A83AF0
	0x03A83964 LDR W8, [X31 + 0x10C]
	0x03A83968 CMP W8, 0x4
	0x03A8396C B.NE 0x3A83978
	0x03A83970 LDRB W8, [X19 + 0x1A8]
	0x03A83974 CBZ W8, 0x3A83AF0
	0x03A83978 LDR X20, [X20 + 0xC0]
	0x03A8397C CBZ X20, 0x3A83C18
	0x03A83980 MOV X0, X20
	0x03A83984 MOV X1, X31
	0x03A83988 BL 0x3C0403C
	0x03A8398C SCVTF S8, W0
	0x03A83990 MOV X0, X20
	0x03A83994 MOV X1, X31
	0x03A83998 BL 0x3C04078
	0x03A8399C LDR V0, [X31 + 0x108]
	0x03A839A0 MOVZ W8, 0x42C80000
	0x03A839A4 FMOV S1, W8
	0x03A839A8 LDR W8, [X31 + 0x10C]
	0x03A839AC SCVTF S0, S0
	0x03A839B0 FMOV S10, 1
	0x03A839B4 FDIV S0, S0, S1
	0x03A839B8 FMOV S1, W31
	0x03A839BC FCMP S0, 0x0
	0x03A839C0 FMIN S0, S0, S10
	0x03A839C4 SCVTF S11, W0
	0x03A839C8 FCSEL S0, S0, S1, PL
	0x03A839CC CMP W8, 0x4
	0x03A839D0 FMUL S12, S0, S11
	0x03A839D4 FMUL S9, S0, S8
	0x03A839D8 B.NE 0x3A83A68
	0x03A839DC LDR X8, [X19 + 0x2D0]
	0x03A839E0 CBZ X8, 0x3A83C18
	0x03A839E4 LDR X20, [X8 + 0xB8]
	0x03A839E8 CBZ X20, 0x3A83C18
	0x03A839EC LDR X8, [X20]
	0x03A839F0 MOV X0, X20
	0x03A839F4 LDP X9, X1, [X8 + 0x188]
	0x03A839F8 BLR X9
	0x03A839FC LDR X8, [X20]
	0x03A83A00 MOV W21, W0
	0x03A83A04 MOV X0, X20
	0x03A83A08 LDP X9, X1, [X8 + 0x1A8]
	0x03A83A0C BLR X9
	0x03A83A10 SCVTF S0, W21
	0x03A83A14 FMUL S0, S12, S0
	0x03A83A18 SCVTF S1, W0
	0x03A83A1C FDIV S0, S0, S1
	0x03A83A20 FCMP S0, S9
	0x03A83A24 B.LE 0x3A83A60
	0x03A83A28 LDR X8, [X20]
	0x03A83A2C MOV X0, X20
	0x03A83A30 LDP X9, X1, [X8 + 0x1A8]
	0x03A83A34 BLR X9
	0x03A83A38 LDR X8, [X20]
	0x03A83A3C MOV W21, W0
	0x03A83A40 MOV X0, X20
	0x03A83A44 LDP X9, X1, [X8 + 0x188]
	0x03A83A48 BLR X9
	0x03A83A4C SCVTF S0, W21
	0x03A83A50 FMUL S0, S9, S0
	0x03A83A54 SCVTF S1, W0
	0x03A83A58 FDIV S12, S0, S1
	0x03A83A5C MOV V0.16B, V9.16B
	0x03A83A60 LDR W8, [X31 + 0x10C]
	0x03A83A64 MOV V9.16B, V0.16B
	0x03A83A68 SUB W8, W8, 0x1
	0x03A83A6C CMP W8, 0x3
	0x03A83A70 B.HI 0x3A83BF8
	0x03A83A74 ADRP X9, 0xFFFFFFFFFD114000
	0x03A83A78 ADD X9, X9, 0xB30
	0x03A83A7C FDIV S9, S9, S8
	0x03A83A80 FDIV S8, S12, S11
	0x03A83A84 ADR X10, 0x1C
	0x03A83A88 LDRB W11, [X9, X8, LSL]
	0x03A83A8C ADD X10, X10, X11, 0x2, LSL
	0x03A83A90 ADD X20, X31, 0x88
	0x03A83A94 FSUB S11, S10, S9
	0x03A83A98 FSUB S10, S10, S8
	0x03A83A9C BR X10
	0x03A83AA0 LDR X8, [X19 + 0x2A0]
	0x03A83AA4 CBZ X8, 0x3A83C18
	0x03A83AA8 LDR X0, [X19 + 0xE0]
	0x03A83AAC LDR X9, [X8 + 0x48]
	0x03A83AB0 LDUR V0, [X8 + 0x38]
	0x03A83AB4 LDUR V1, [X8 + 0x28]
	0x03A83AB8 STR X9, [X31 + 0x100]
	0x03A83ABC STP V1, V0, [X31 + 0xE0]
	0x03A83AC0 CBZ X0, 0x3A83C18
	0x03A83AC4 LDP V0, V1, [X31 + 0xE0]
	0x03A83AC8 LDR X8, [X31 + 0x100]
	0x03A83ACC ADD X1, X31, 0xB0
	0x03A83AD0 MOVZ W2, 0x1
	0x03A83AD4 STP V0, V1, [X31 + 0xB0]
	0x03A83AD8 STR X8, [X31 + 0xD0]
	0x03A83ADC MOV V0.16B, V11.16B
	0x03A83AE0 MOV V1.16B, V10.16B
	0x03A83AE4 MOV V2.16B, V9.16B
	0x03A83AE8 MOV V3.16B, V8.16B
	0x03A83AEC B 0x3A83BF0
	0x03A83AF0 LDR X0, [X19 + 0xE0]
	0x03A83AF4 CBZ X0, 0x3A83C18
	0x03A83AF8 MOV X1, X31
	0x03A83AFC BL 0x3A362C4
	0x03A83B00 B 0x3A83BF8
	0x03A83B04 LDR X8, [X19 + 0x1D8]
	0x03A83B08 CBZ X8, 0x3A83C18
	0x03A83B0C LDR X0, [X8 + 0xE8]
	0x03A83B10 LDR X19, [X19 + 0xE0]
	0x03A83B14 ADD X8, X31, 0x88
	0x03A83B18 MOV X1, X31
	0x03A83B1C BL 0x39CDF64
	0x03A83B20 LDP V0, V1, [X20]
	0x03A83B24 LDR X8, [X31 + 0xA8]
	0x03A83B28 STP V0, V1, [X31 + 0xE0]
	0x03A83B2C STR X8, [X31 + 0x100]
	0x03A83B30 CBZ X19, 0x3A83C18
	0x03A83B34 LDP V0, V1, [X31 + 0xE0]
	0x03A83B38 LDR X8, [X31 + 0x100]
	0x03A83B3C ADD X1, X31, 0x60
	0x03A83B40 STP V0, V1, [X31 + 0x60]
	0x03A83B44 STR X8, [X31 + 0x80]
	0x03A83B48 B 0x3A83BD8
	0x03A83B4C LDR X8, [X19 + 0x1D0]
	0x03A83B50 CBZ X8, 0x3A83C18
	0x03A83B54 LDR X0, [X8 + 0xF0]
	0x03A83B58 LDR X19, [X19 + 0xE0]
	0x03A83B5C ADD X8, X31, 0x88
	0x03A83B60 MOV X1, X31
	0x03A83B64 BL 0x39CDF64
	0x03A83B68 LDP V0, V1, [X20]
	0x03A83B6C LDR X8, [X31 + 0xA8]
	0x03A83B70 STP V0, V1, [X31 + 0xE0]
	0x03A83B74 STR X8, [X31 + 0x100]
	0x03A83B78 CBZ X19, 0x3A83C18
	0x03A83B7C LDP V0, V1, [X31 + 0xE0]
	0x03A83B80 LDR X8, [X31 + 0x100]
	0x03A83B84 ADD X1, X31, 0x30
	0x03A83B88 STP V0, V1, [X31 + 0x30]
	0x03A83B8C STR X8, [X31 + 0x50]
	0x03A83B90 B 0x3A83BD8
	0x03A83B94 LDR X8, [X19 + 0x2D0]
	0x03A83B98 CBZ X8, 0x3A83C18
	0x03A83B9C LDR X0, [X8 + 0xB8]
	0x03A83BA0 LDR X19, [X19 + 0xE0]
	0x03A83BA4 ADD X8, X31, 0x88
	0x03A83BA8 MOV X1, X31
	0x03A83BAC BL 0x3C4B274
	0x03A83BB0 LDP V0, V1, [X20]
	0x03A83BB4 LDR X8, [X31 + 0xA8]
	0x03A83BB8 STP V0, V1, [X31 + 0xE0]
	0x03A83BBC STR X8, [X31 + 0x100]
	0x03A83BC0 CBZ X19, 0x3A83C18
	0x03A83BC4 LDP V0, V1, [X31 + 0xE0]
	0x03A83BC8 LDR X8, [X31 + 0x100]
	0x03A83BCC ADD X1, X31, 0x0
	0x03A83BD0 STP V0, V1, [X31]
	0x03A83BD4 STR X8, [X31 + 0x20]
	0x03A83BD8 MOV X0, X19
	0x03A83BDC MOV V0.16B, V11.16B
	0x03A83BE0 MOV V1.16B, V10.16B
	0x03A83BE4 MOV V2.16B, V9.16B
	0x03A83BE8 MOV V3.16B, V8.16B
	0x03A83BEC MOV W2, W31
	0x03A83BF0 MOV X3, X31
	0x03A83BF4 BL 0x3A36298
	0x03A83BF8 LDP X20, X19, [X31 + 0x150]
	0x03A83BFC LDP X30, X21, [X31 + 0x140]
	0x03A83C00 LDR X29, [X31 + 0x138]
	0x03A83C04 LDP D9, D8, [X31 + 0x128]
	0x03A83C08 LDP D11, D10, [X31 + 0x118]
	0x03A83C0C LDR V12, [X31 + 0x110]
	0x03A83C10 ADD X31, X31, 0x160
	0x03A83C14 RET
	0x03A83C18 BL 0x1C16F20
	0x03A83C1C STP X30, X21, [X31 - 0x20]!
	0x03A83C20 STP X20, X19, [X31 + 0x10]
	0x03A83C24 ADRP X21, 0x95F000
	0x03A83C28 ADRP X20, 0x670000
	0x03A83C2C LDRB W8, [X21 + 0x33A]
	0x03A83C30 LDR X20, [X20 + 0x598]
	0x03A83C34 MOV X19, X0
	0x03A83C38 TBNZ X8, 0x0, 0x3A83C50
	0x03A83C3C ADRP X0, 0x670000
	0x03A83C40 LDR X0, [X0 + 0x598]
	0x03A83C44 BL 0x1C16CF4
	0x03A83C48 MOVZ W8, 0x1
	0x03A83C4C STRB W8, [X21 + 0x33A]
	0x03A83C50 LDR X0, [X20]
	0x03A83C54 LDR X20, [X19 + 0xD0]
	0x03A83C58 LDR W8, [X0 + 0xE0]
	0x03A83C5C CBNZ W8, 0x3A83C64
	0x03A83C60 BL 0x1C16DFC
	0x03A83C64 MOV X0, X20
	0x03A83C68 MOV X1, X31
	0x03A83C6C MOV X2, X31
	0x03A83C70 BL 0x3C354F8
	0x03A83C74 TBZ X0, 0x0, 0x3A83C94
	0x03A83C78 LDR X0, [X19 + 0xD0]
	0x03A83C7C CBZ X0, 0x3A83CA4
	0x03A83C80 MOV X1, X31
	0x03A83C84 BL 0x3C20368
	0x03A83C88 CMP W0, 0x1
	0x03A83C8C CSET W0, EQ
	0x03A83C90 B 0x3A83C98
	0x03A83C94 MOV W0, W31
	0x03A83C98 LDP X20, X19, [X31 + 0x10]
	0x03A83C9C LDP X30, X21, [X31], #0x20
	0x03A83CA0 RET
	0x03A83CA4 BL 0x1C16F20
	0x03A83CA8 STP X30, X23, [X31 - 0x30]!
	0x03A83CAC STP X22, X21, [X31 + 0x10]
	0x03A83CB0 STP X20, X19, [X31 + 0x20]
	0x03A83CB4 ADRP X21, 0x95F000
	0x03A83CB8 LDRB W8, [X21 + 0x33B]
	0x03A83CBC MOV X19, X1
	0x03A83CC0 MOV X20, X0
	0x03A83CC4 TBNZ X8, 0x0, 0x3A83CDC
	0x03A83CC8 ADRP X0, 0x6D0000
	0x03A83CCC LDR X0, [X0 + 0xFF8]
	0x03A83CD0 BL 0x1C16CF4
	0x03A83CD4 MOVZ W8, 0x1
	0x03A83CD8 STRB W8, [X21 + 0x33B]
	0x03A83CDC MOV X0, X20
	0x03A83CE0 MOV X1, X19
	0x03A83CE4 BL 0x3A83D8C
	0x03A83CE8 TBZ X0, 0x0, 0x3A83D2C
	0x03A83CEC ADRP X8, 0x6D0000
	0x03A83CF0 LDR X8, [X8 + 0xFF8]
	0x03A83CF4 LDRB W10, [X20 + 0x2EC]
	0x03A83CF8 LDR W11, [X20 + 0x2E4]
	0x03A83CFC LDR W9, [X20 + 0x2E0]
	0x03A83D00 LDR W12, [X19 + 0xC8]
	0x03A83D04 CMP W10, 0x0
	0x03A83D08 CSET W10, NE
	0x03A83D0C CMP W11, 0x1
	0x03A83D10 CSET W13, EQ
	0x03A83D14 CMP W11, 0x2
	0x03A83D18 AND W10, W10, W13, 0x0
	0x03A83D1C CSET W11, EQ
	0x03A83D20 CBZ W12, 0x3A83D34
	0x03A83D24 LDRB W20, [X19 + 0x164]
	0x03A83D28 B 0x3A83D38
	0x03A83D2C MOV W0, W31
	0x03A83D30 B 0x3A83D7C
	0x03A83D34 MOVZ W20, 0x1
	0x03A83D38 LDR X0, [X8]
	0x03A83D3C LDR W23, [X19 + 0x168]
	0x03A83D40 ORR W21, W10, W11, 0x0
	0x03A83D44 AND W22, W9, 0xFFFFFFFD
	0x03A83D48 LDR W8, [X0 + 0xE0]
	0x03A83D4C CBNZ W8, 0x3A83D54
	0x03A83D50 BL 0x1C16DFC
	0x03A83D54 CMP W23, 0x10
	0x03A83D58 CSET W23, NE
	0x03A83D5C CMP W22, 0x0
	0x03A83D60 MOV X0, X19
	0x03A83D64 CSET W22, EQ
	0x03A83D68 BL 0x3A83C1C
	0x03A83D6C AND W8, W21, W22, 0x0
	0x03A83D70 AND W8, W20, W8, 0x0
	0x03A83D74 AND W8, W8, W23, 0x0
	0x03A83D78 BIC W0, W8, W0, 0x0
	0x03A83D7C LDP X20, X19, [X31 + 0x20]
	0x03A83D80 LDP X22, X21, [X31 + 0x10]
	0x03A83D84 LDP X30, X23, [X31], #0x30
	0x03A83D88 RET
	0x03A83D8C STR X30, [X31 - 0x30]!
	0x03A83D90 STP X22, X21, [X31 + 0x10]
	0x03A83D94 STP X20, X19, [X31 + 0x20]
	0x03A83D98 ADRP X21, 0x95F000
	0x03A83D9C ADRP X20, 0x6D1000
	0x03A83DA0 LDRB W8, [X21 + 0x342]
	0x03A83DA4 LDR X20, [X20 + 0x10]
	0x03A83DA8 MOV X19, X1
	0x03A83DAC TBNZ X8, 0x0, 0x3A83DC4
	0x03A83DB0 ADRP X0, 0x6D1000
	0x03A83DB4 LDR X0, [X0 + 0x10]
	0x03A83DB8 BL 0x1C16CF4
	0x03A83DBC MOVZ W8, 0x1
	0x03A83DC0 STRB W8, [X21 + 0x342]
	0x03A83DC4 LDR W21, [X19 + 0xE0]
	0x03A83DC8 MOV X0, X31
	0x03A83DCC BL 0x3C3BCAC
	0x03A83DD0 LDR X8, [X20]
	0x03A83DD4 MOV W19, W0
	0x03A83DD8 LDR W9, [X8 + 0xE0]
	0x03A83DDC CBNZ W9, 0x3A83DE8
	0x03A83DE0 MOV X0, X8
	0x03A83DE4 BL 0x1C16DFC
	0x03A83DE8 MOVZ W0, 0x1
	0x03A83DEC MOV X1, X31
	0x03A83DF0 BL 0x3A7162C
	0x03A83DF4 CMP W21, 0x2
	0x03A83DF8 MOV W20, W0
	0x03A83DFC B.LT 0x3A83E14
	0x03A83E00 MOV X0, X31
	0x03A83E04 BL 0x3C3BE3C
	0x03A83E08 CMP W0, 0x0
	0x03A83E0C CSET W22, NE
	0x03A83E10 B 0x3A83E18
	0x03A83E14 MOV W22, W31
	0x03A83E18 MOV X0, X31
	0x03A83E1C BL 0x3C3BACC
	0x03A83E20 CMP W0, 0x8
	0x03A83E24 B.NE 0x3A83E30
	0x03A83E28 MOVZ W8, 0x1
	0x03A83E2C B 0x3A83E40
	0x03A83E30 MOV X0, X31
	0x03A83E34 BL 0x3C3BACC
	0x03A83E38 CMP W0, 0xB
	0x03A83E3C CSET W8, EQ
	0x03A83E40 CMP W21, 0x2
	0x03A83E44 CSET W9, LT
	0x03A83E48 CMP W19, 0x0
	0x03A83E4C CSET W10, NE
	0x03A83E50 ANDS W31, W8, W22, 0x0
	0x03A83E54 ORR W8, W10, W20, 0x0
	0x03A83E58 AND W8, W8, W9, 0x0
	0x03A83E5C ORR W8, W22, W8, 0x0
	0x03A83E60 LDP X20, X19, [X31 + 0x20]
	0x03A83E64 LDP X22, X21, [X31 + 0x10]
	0x03A83E68 CSET W9, EQ
	0x03A83E6C CMP W8, 0x0
	0x03A83E70 CSET W8, NE
	0x03A83E74 AND W0, W8, W9, 0x0
	0x03A83E78 LDR X30, [X31], #0x30
	0x03A83E7C RET
	0x03A83E80 MOV W0, W31
	0x03A83E84 RET
	0x03A83E88 STR X30, [X31 - 0x10]!
	0x03A83E8C MOV X0, X31
	0x03A83E90 BL 0x3C3BACC
	0x03A83E94 CMP W0, 0x8
	0x03A83E98 B.NE 0x3A83EA4
	0x03A83E9C MOVZ W0, 0x1
	0x03A83EA0 B 0x3A83EB4
	0x03A83EA4 MOV X0, X31
	0x03A83EA8 BL 0x3C3BACC
	0x03A83EAC CMP W0, 0xB
	0x03A83EB0 CSET W0, EQ
	0x03A83EB4 LDR X30, [X31], #0x10
	0x03A83EB8 RET
	0x03A83EBC STR X30, [X31 - 0x10]!
	0x03A83EC0 MOV X0, X31
	0x03A83EC4 BL 0x3C3BACC
	0x03A83EC8 CMP W0, 0x8
	0x03A83ECC B.EQ 0x3A83EE0
	0x03A83ED0 MOV X0, X31
	0x03A83ED4 BL 0x3C3BACC
	0x03A83ED8 CMP W0, 0xB
	0x03A83EDC B.NE 0x3A83EE8
	0x03A83EE0 MOVZ W0, 0x1
	0x03A83EE4 B 0x3A83EF8
	0x03A83EE8 MOV X0, X31
	0x03A83EEC BL 0x3C3BACC
	0x03A83EF0 CMP W0, 0x11
	0x03A83EF4 CSET W0, EQ
	0x03A83EF8 LDR X30, [X31], #0x10
	0x03A83EFC RET
	0x03A83F00 STP X29, X30, [X31 - 0x60]!
	0x03A83F04 STP X28, X27, [X31 + 0x10]
	0x03A83F08 STP X26, X25, [X31 + 0x20]
	0x03A83F0C STP X24, X23, [X31 + 0x30]
	0x03A83F10 STP X22, X21, [X31 + 0x40]
	0x03A83F14 STP X20, X19, [X31 + 0x50]
	0x03A83F18 SUB X31, X31, 0x850
	0x03A83F1C ADRP X21, 0x95F000
	0x03A83F20 LDRB W8, [X21 + 0x33C]
	0x03A83F24 MOV X20, X2
	0x03A83F28 MOV X19, X0
	0x03A83F2C STR X1, [X31 + 0x848]
	0x03A83F30 TBNZ X8, 0x0, 0x3A840C8
	0x03A83F34 ADRP X0, 0x670000
	0x03A83F38 LDR X0, [X0 + 0x970]
	0x03A83F3C BL 0x1C16CF4
	0x03A83F40 ADRP X0, 0x6D4000
	0x03A83F44 LDR X0, [X0 + 0x1D0]
	0x03A83F48 BL 0x1C16CF4
	0x03A83F4C ADRP X0, 0x6D1000
	0x03A83F50 LDR X0, [X0 + 0x918]
	0x03A83F54 BL 0x1C16CF4
	0x03A83F58 ADRP X0, 0x6D1000
	0x03A83F5C LDR X0, [X0 + 0x948]
	0x03A83F60 BL 0x1C16CF4
	0x03A83F64 ADRP X0, 0x6D4000
	0x03A83F68 LDR X0, [X0 + 0x158]
	0x03A83F6C BL 0x1C16CF4
	0x03A83F70 ADRP X0, 0x6D2000
	0x03A83F74 LDR X0, [X0 + 0xED8]
	0x03A83F78 BL 0x1C16CF4
	0x03A83F7C ADRP X0, 0x6D2000
	0x03A83F80 LDR X0, [X0 + 0xEE0]
	0x03A83F84 BL 0x1C16CF4
	0x03A83F88 ADRP X0, 0x6D2000
	0x03A83F8C LDR X0, [X0 + 0xEE8]
	0x03A83F90 BL 0x1C16CF4
	0x03A83F94 ADRP X0, 0x6D1000
	0x03A83F98 LDR X0, [X0 + 0x950]
	0x03A83F9C BL 0x1C16CF4
	0x03A83FA0 ADRP X0, 0x6D2000
	0x03A83FA4 LDR X0, [X0 + 0xEF0]
	0x03A83FA8 BL 0x1C16CF4
	0x03A83FAC ADRP X0, 0x6D2000
	0x03A83FB0 LDR X0, [X0 + 0xDE0]
	0x03A83FB4 BL 0x1C16CF4
	0x03A83FB8 ADRP X0, 0x670000
	0x03A83FBC LDR X0, [X0 + 0x598]
	0x03A83FC0 BL 0x1C16CF4
	0x03A83FC4 ADRP X0, 0x6D1000
	0x03A83FC8 LDR X0, [X0 + 0x958]
	0x03A83FCC BL 0x1C16CF4
	0x03A83FD0 ADRP X0, 0x6D1000
	0x03A83FD4 LDR X0, [X0 + 0x960]
	0x03A83FD8 BL 0x1C16CF4
	0x03A83FDC ADRP X0, 0x6CD000
	0x03A83FE0 LDR X0, [X0 + 0x9B0]
	0x03A83FE4 BL 0x1C16CF4
	0x03A83FE8 ADRP X0, 0x6D1000
	0x03A83FEC LDR X0, [X0 + 0x10]
	0x03A83FF0 BL 0x1C16CF4
	0x03A83FF4 ADRP X0, 0x6CD000
	0x03A83FF8 LDR X0, [X0 + 0xC80]
	0x03A83FFC BL 0x1C16CF4
	0x03A84000 ADRP X0, 0x6D0000
	0x03A84004 LDR X0, [X0 + 0x8C8]
	0x03A84008 BL 0x1C16CF4
	0x03A8400C ADRP X0, 0x6D3000
	0x03A84010 LDR X0, [X0 + 0x1D8]
	0x03A84014 BL 0x1C16CF4
	0x03A84018 ADRP X0, 0x6D3000
	0x03A8401C LDR X0, [X0 + 0x1E0]
	0x03A84020 BL 0x1C16CF4
	0x03A84024 ADRP X0, 0x6D3000
	0x03A84028 LDR X0, [X0 + 0x1E8]
	0x03A8402C BL 0x1C16CF4
	0x03A84030 ADRP X0, 0x698000
	0x03A84034 LDR X0, [X0 + 0x8A8]
	0x03A84038 BL 0x1C16CF4
	0x03A8403C ADRP X0, 0x6CF000
	0x03A84040 LDR X0, [X0 + 0xFF8]
	0x03A84044 BL 0x1C16CF4
	0x03A84048 ADRP X0, 0x6D3000
	0x03A8404C LDR X0, [X0 + 0x1F0]
	0x03A84050 BL 0x1C16CF4
	0x03A84054 ADRP X0, 0x6D0000
	0x03A84058 LDR X0, [X0 + 0x930]
	0x03A8405C BL 0x1C16CF4
	0x03A84060 ADRP X0, 0x6D3000
	0x03A84064 LDR X0, [X0 + 0x1F8]
	0x03A84068 BL 0x1C16CF4
	0x03A8406C ADRP X0, 0x6D2000
	0x03A84070 LDR X0, [X0 + 0xFD8]
	0x03A84074 BL 0x1C16CF4
	0x03A84078 ADRP X0, 0x6D3000
	0x03A8407C LDR X0, [X0 + 0x200]
	0x03A84080 BL 0x1C16CF4
	0x03A84084 ADRP X0, 0x6D2000
	0x03A84088 LDR X0, [X0 + 0x540]
	0x03A8408C BL 0x1C16CF4
	0x03A84090 ADRP X0, 0x6D3000
	0x03A84094 LDR X0, [X0 + 0x208]
	0x03A84098 BL 0x1C16CF4
	0x03A8409C ADRP X0, 0x6D0000
	0x03A840A0 LDR X0, [X0 + 0x980]
	0x03A840A4 BL 0x1C16CF4
	0x03A840A8 ADRP X0, 0x6D0000
	0x03A840AC LDR X0, [X0 + 0x988]
	0x03A840B0 BL 0x1C16CF4
	0x03A840B4 ADRP X0, 0x6D0000
	0x03A840B8 LDR X0, [X0 + 0x990]
	0x03A840BC BL 0x1C16CF4
	0x03A840C0 MOVZ W8, 0x1
	0x03A840C4 STRB W8, [X21 + 0x33C]
	0x03A840C8 MOVI V0.2D, 0x0
	0x03A840CC STR W31, [X31 + 0x840]
	0x03A840D0 STR X31, [X31 + 0x808]
	0x03A840D4 STR W31, [X31 + 0x800]
	0x03A840D8 STR W31, [X31 + 0x7C0]
	0x03A840DC STR W31, [X31 + 0x780]
	0x03A840E0 STR X31, [X31 + 0x738]
	0x03A840E4 STR X31, [X31 + 0x730]
	0x03A840E8 STR X31, [X31 + 0x740]
	0x03A840EC STR X31, [X31 + 0x720]
	0x03A840F0 STR X31, [X31 + 0x6F8]
	0x03A840F4 STR X31, [X31 + 0x6F0]
	0x03A840F8 STR W31, [X31 + 0x6B0]
	0x03A840FC STR W31, [X31 + 0x670]
	0x03A84100 STR W31, [X31 + 0x630]
	0x03A84104 STR W31, [X31 + 0x5FC]
	0x03A84108 STR X31, [X31 + 0x5F0]
	0x03A8410C STR X31, [X31 + 0x5E8]
	0x03A84110 STR W31, [X31 + 0x5E0]
	0x03A84114 STR W31, [X31 + 0x5AC]
	0x03A84118 STR W31, [X31 + 0x5A0]
	0x03A8411C STR W31, [X31 + 0x560]
	0x03A84120 STR W31, [X31 + 0x520]
	0x03A84124 STR V0, [X31 + 0x83]
	0x03A84128 STR V0, [X31 + 0x82]
	0x03A8412C STR V0, [X31 + 0x81]
	0x03A84130 STR V0, [X31 + 0x7F]
	0x03A84134 STR V0, [X31 + 0x7E]
	0x03A84138 STR V0, [X31 + 0x7D]
	0x03A8413C STR V0, [X31 + 0x7B]
	0x03A84140 STR V0, [X31 + 0x7A]
	0x03A84144 STR V0, [X31 + 0x79]
	0x03A84148 STR V0, [X31 + 0x77]
	0x03A8414C STR V0, [X31 + 0x76]
	0x03A84150 STR V0, [X31 + 0x75]
	0x03A84154 STR V0, [X31 + 0x71]
	0x03A84158 STR V0, [X31 + 0x70]
	0x03A8415C STR V0, [X31 + 0x6E]
	0x03A84160 STR V0, [X31 + 0x6D]
	0x03A84164 STR V0, [X31 + 0x6C]
	0x03A84168 STR V0, [X31 + 0x6A]
	0x03A8416C STR V0, [X31 + 0x69]
	0x03A84170 STR V0, [X31 + 0x68]
	0x03A84174 STR V0, [X31 + 0x66]
	0x03A84178 STR V0, [X31 + 0x65]
	0x03A8417C STR V0, [X31 + 0x64]
	0x03A84180 STR V0, [X31 + 0x62]
	0x03A84184 STR V0, [X31 + 0x61]
	0x03A84188 STR V0, [X31 + 0x60]
	0x03A8418C STR V0, [X31 + 0x5D]
	0x03A84190 STR V0, [X31 + 0x5C]
	0x03A84194 STR V0, [X31 + 0x5B]
	0x03A84198 STR V0, [X31 + 0x59]
	0x03A8419C STR V0, [X31 + 0x58]
	0x03A841A0 STR V0, [X31 + 0x57]
	0x03A841A4 STR V0, [X31 + 0x55]
	0x03A841A8 STR V0, [X31 + 0x54]
	0x03A841AC STR V0, [X31 + 0x53]
	0x03A841B0 STR V0, [X31 + 0x51]
	0x03A841B4 STR V0, [X31 + 0x50]
	0x03A841B8 STR V0, [X31 + 0x4F]
	0x03A841BC STR X31, [X31 + 0x4E8]
	0x03A841C0 LDR X0, [X19 + 0x2D0]
	0x03A841C4 CBZ X0, 0x3A8652C
	0x03A841C8 MOV X1, X20
	0x03A841CC MOV X2, X31
	0x03A841D0 BL 0x3AA57EC
	0x03A841D4 LDP V2, V0, [X20 + 0x100]
	0x03A841D8 LDR W8, [X20 + 0x120]
	0x03A841DC LDR V1, [X20 + 0xF]
	0x03A841E0 LDR X24, [X20 + 0xD8]
	0x03A841E4 STR V0, [X31 + 0x83]
	0x03A841E8 STR W8, [X31 + 0x840]
	0x03A841EC STR V2, [X31 + 0x82]
	0x03A841F0 STR V1, [X31 + 0x81]
	0x03A841F4 LDR X0, [X19 + 0xE0]
	0x03A841F8 LDR X8, [X20]
	0x03A841FC ADD X29, X20, 0x18
	0x03A84200 STR X8, [X31 + 0x70]
	0x03A84204 CBZ X0, 0x3A843B4
	0x03A84208 MOV X1, X29
	0x03A8420C MOV X2, X31
	0x03A84210 BL 0x3A35D04
	0x03A84214 TBZ X0, 0x0, 0x3A843B4
	0x03A84218 LDR X0, [X19 + 0xE0]
	0x03A8421C CBZ X0, 0x3A8652C
	0x03A84220 MOV X1, X29
	0x03A84224 MOV X2, X31
	0x03A84228 BL 0x3A35A68
	0x03A8422C TBZ X0, 0x0, 0x3A84354
	0x03A84230 ADRP X8, 0x6D0000
	0x03A84234 LDR X8, [X8 + 0x948]
	0x03A84238 ADD X22, X20, 0xF0
	0x03A8423C LDP V2, V0, [X22 + 0x10]
	0x03A84240 LDR W9, [X22 + 0x30]
	0x03A84244 LDR V1, [X22]
	0x03A84248 LDR X0, [X8]
	0x03A8424C STR V0, [X31 + 0x7B]
	0x03A84250 STR W9, [X31 + 0x7C0]
	0x03A84254 STR V2, [X31 + 0x7A]
	0x03A84258 STR V1, [X31 + 0x79]
	0x03A8425C LDR W21, [X20 + 0x158]
	0x03A84260 LDR W8, [X0 + 0xE0]
	0x03A84264 LDR W23, [X20 + 0x15C]
	0x03A84268 CBNZ W8, 0x3A84270
	0x03A8426C BL 0x1C16DFC
	0x03A84270 ADD X0, X31, 0x790
	0x03A84274 MOV W1, W21
	0x03A84278 MOV W2, W23
	0x03A8427C MOV X3, X31
	0x03A84280 BL 0x3A35D9C
	0x03A84284 LDR X0, [X19 + 0xE0]
	0x03A84288 CBZ X0, 0x3A8652C
	0x03A8428C MOV X1, X31
	0x03A84290 BL 0x3A35A14
	0x03A84294 ADRP X8, 0x6D0000
	0x03A84298 LDR X8, [X8 + 0x10]
	0x03A8429C MOV X21, X0
	0x03A842A0 LDR X8, [X8]
	0x03A842A4 LDR W9, [X8 + 0xE0]
	0x03A842A8 CBNZ W9, 0x3A842B4
	0x03A842AC MOV X0, X8
	0x03A842B0 BL 0x1C16DFC
	0x03A842B4 ADRP X8, 0x6D0000
	0x03A842B8 LDR X8, [X8 + 0x990]
	0x03A842BC ADD X1, X31, 0x790
	0x03A842C0 FMOV S0, W31
	0x03A842C4 MOVZ W5, 0x1
	0x03A842C8 LDR X6, [X8]
	0x03A842CC MOV X0, X21
	0x03A842D0 MOV W2, W31
	0x03A842D4 MOV W3, W31
	0x03A842D8 MOV W4, W31
	0x03A842DC MOV X7, X31
	0x03A842E0 BL 0x3A6D184
	0x03A842E4 LDR W8, [X22 + 0x30]
	0x03A842E8 LDP V2, V0, [X22 + 0x10]
	0x03A842EC LDR V1, [X22]
	0x03A842F0 ADD X0, X31, 0x750
	0x03A842F4 STR W8, [X31 + 0x780]
	0x03A842F8 STR V0, [X31 + 0x77]
	0x03A842FC STR V1, [X31 + 0x75]
	0x03A84300 STR V2, [X31 + 0x76]
	0x03A84304 LDR W2, [X20 + 0x158]
	0x03A84308 LDR W3, [X20 + 0x15C]
	0x03A8430C MOVZ W1, 0x18
	0x03A84310 MOV X4, X31
	0x03A84314 BL 0x3A35DE8
	0x03A84318 LDR X0, [X19 + 0xE0]
	0x03A8431C CBZ X0, 0x3A8652C
	0x03A84320 MOV X1, X31
	0x03A84324 BL 0x3A35A1C
	0x03A84328 ADRP X8, 0x6D0000
	0x03A8432C LDR X8, [X8 + 0x980]
	0x03A84330 ADD X1, X31, 0x750
	0x03A84334 FMOV S0, W31
	0x03A84338 MOVZ W5, 0x1
	0x03A8433C LDR X6, [X8]
	0x03A84340 MOV W2, W31
	0x03A84344 MOV W3, W31
	0x03A84348 MOV W4, W31
	0x03A8434C MOV X7, X31
	0x03A84350 BL 0x3A6D184
	0x03A84354 LDR X0, [X19 + 0xE0]
	0x03A84358 CBZ X0, 0x3A8652C
	0x03A8435C MOV X1, X29
	0x03A84360 MOV X2, X31
	0x03A84364 BL 0x3A35A2C
	0x03A84368 TBZ X0, 0x0, 0x3A843B4
	0x03A8436C LDR X8, [X19 + 0xE0]
	0x03A84370 CBZ X8, 0x3A8652C
	0x03A84374 LDR X9, [X8 + 0x78]
	0x03A84378 CBZ X9, 0x3A8652C
	0x03A8437C LDR X9, [X9 + 0x30]
	0x03A84380 CBZ X9, 0x3A8652C
	0x03A84384 LDR X0, [X8 + 0x20]
	0x03A84388 CBZ X0, 0x3A8652C
	0x03A8438C LDR W2, [X9 + 0x18]
	0x03A84390 MOV X1, X29
	0x03A84394 MOV X3, X31
	0x03A84398 BL 0x3A5D334
	0x03A8439C LDR X8, [X19 + 0xE0]
	0x03A843A0 CBZ X8, 0x3A8652C
	0x03A843A4 LDR X1, [X8 + 0x20]
	0x03A843A8 MOV X0, X19
	0x03A843AC MOV X2, X31
	0x03A843B0 BL 0x3A4E96C
	0x03A843B4 LDR W8, [X20 + 0x180]
	0x03A843B8 ADRP X21, 0x6CF000
	0x03A843BC LDR X21, [X21 + 0xFF8]
	0x03A843C0 CMP W8, 0x1
	0x03A843C4 B.EQ 0x3A843CC
	0x03A843C8 STRB W31, [X19 + 0x1A4]
	0x03A843CC MOV X0, X19
	0x03A843D0 MOV X1, X29
	0x03A843D4 BL 0x3A83CA8
	0x03A843D8 AND W8, W0, 0x1
	0x03A843DC STRB W8, [X19 + 0x1A5]
	0x03A843E0 LDR X0, [X21]
	0x03A843E4 LDR W8, [X0 + 0xE0]
	0x03A843E8 CBNZ W8, 0x3A843F0
	0x03A843EC BL 0x1C16DFC
	0x03A843F0 MOV X0, X29
	0x03A843F4 BL 0x3A83C1C
	0x03A843F8 TBZ X0, 0x0, 0x3A84480
	0x03A843FC ADRP X21, 0x6D0000
	0x03A84400 LDR X21, [X21 + 0x8C8]
	0x03A84404 LDR X0, [X21]
	0x03A84408 LDR W8, [X0 + 0xE0]
	0x03A8440C CBNZ W8, 0x3A84418
	0x03A84410 BL 0x1C16DFC
	0x03A84414 LDR X0, [X21]
	0x03A84418 LDR X8, [X0 + 0xB8]
	0x03A8441C MOV X0, X19
	0x03A84420 MOV X3, X31
	0x03A84424 LDR X1, [X8 + 0x10]
	0x03A84428 MOV X2, X1
	0x03A8442C BL 0x3A4B4D8
	0x03A84430 MOV X0, X19
	0x03A84434 MOV X1, X20
	0x03A84438 MOV X2, X31
	0x03A8443C BL 0x3A4DC78
	0x03A84440 LDR X1, [X19 + 0x200]
	0x03A84444 MOV X0, X19
	0x03A84448 MOV X2, X31
	0x03A8444C BL 0x3A4E96C
	0x03A84450 LDR X1, [X19 + 0x230]
	0x03A84454 MOV X0, X19
	0x03A84458 MOV X2, X31
	0x03A8445C BL 0x3A4E96C
	0x03A84460 ADD X31, X31, 0x850
	0x03A84464 LDP X20, X19, [X31 + 0x50]
	0x03A84468 LDP X22, X21, [X31 + 0x40]
	0x03A8446C LDP X24, X23, [X31 + 0x30]
	0x03A84470 LDP X26, X25, [X31 + 0x20]
	0x03A84474 LDP X28, X27, [X31 + 0x10]
	0x03A84478 LDP X29, X30, [X31], #0x60
	0x03A8447C RET
	0x03A84480 MOV X0, X29
	0x03A84484 MOV X1, X31
	0x03A84488 BL 0x3A9124C
	0x03A8448C LDR X8, [X19 + 0x108]
	0x03A84490 CBZ X8, 0x3A8652C
	0x03A84494 LDR W8, [X8 + 0x18]
	0x03A84498 MOV W25, W0
	0x03A8449C CBZ W8, 0x3A844B4
	0x03A844A0 LDR W8, [X19 + 0x308]
	0x03A844A4 CMP W8, 0x1
	0x03A844A8 CSET W8, EQ
	0x03A844AC BIC W8, W8, W25, 0x0
	0x03A844B0 TBNZ X8, 0x0, 0x3A844E8
	0x03A844B4 ADRP X8, 0x66F000
	0x03A844B8 LDR X8, [X8 + 0x970]
	0x03A844BC LDR X0, [X8]
	0x03A844C0 LDR W8, [X0 + 0xE0]
	0x03A844C4 CBNZ W8, 0x3A844CC
	0x03A844C8 BL 0x1C16DFC
	0x03A844CC MOV X0, X31
	0x03A844D0 BL 0x3C03278
	0x03A844D4 TBZ X0, 0x0, 0x3A844E0
	0x03A844D8 LDRB W27, [X19 + 0x1A8]
	0x03A844DC B 0x3A844EC
	0x03A844E0 MOV W27, W31
	0x03A844E4 B 0x3A844EC
	0x03A844E8 MOVZ W27, 0x1
	0x03A844EC MOV X0, X19
	0x03A844F0 MOV X1, X20
	0x03A844F4 BL 0x3A865C4
	0x03A844F8 LDR X8, [X19 + 0x108]
	0x03A844FC LDR W2, [X31 + 0x818]
	0x03A84500 MOV X28, X0
	0x03A84504 STR X1, [X31 + 0x58]
	0x03A84508 ADD X3, X31, 0x80C
	0x03A8450C ADD X4, X31, 0x808
	0x03A84510 MOV X0, X19
	0x03A84514 MOV X1, X8
	0x03A84518 MOV X5, X31
	0x03A8451C BL 0x3A6F94C
	0x03A84520 MOV W21, W0
	0x03A84524 BL 0x3A83EBC
	0x03A84528 EOR W8, W0, 0x1
	0x03A8452C AND W21, W21, W8, 0x0
	0x03A84530 TBZ X21, 0x0, 0x3A84544
	0x03A84534 MOV X0, X19
	0x03A84538 BL 0x3A82610
	0x03A8453C CMP W0, 0x1
	0x03A84540 B.NE 0x3A84C34
	0x03A84544 MOV W9, W31
	0x03A84548 UBFM X23, X28, 0x10, 0x10
	0x03A8454C STR W9, [X31 + 0x7C]
	0x03A84550 STR W31, [X31 + 0x30]
	0x03A84554 LDR X0, [X19 + 0x2D8]
	0x03A84558 STR X24, [X31 + 0x48]
	0x03A8455C STR X28, [X31 + 0x80]
	0x03A84560 STR W21, [X31 + 0x3C]
	0x03A84564 CBZ X0, 0x3A84628
	0x03A84568 LDR W8, [X31 + 0x808]
	0x03A8456C AND W9, W21, 0x1
	0x03A84570 MOV X1, X20
	0x03A84574 MOV X2, X31
	0x03A84578 STRB W9, [X0 + 0x14]
	0x03A8457C STR W8, [X0 + 0x10]
	0x03A84580 STRB W23, [X0 + 0x17]
	0x03A84584 BL 0x3A9BF74
	0x03A84588 LDR X8, [X19 + 0x2D8]
	0x03A8458C CBZ X8, 0x3A8652C
	0x03A84590 LDR W9, [X20 + 0xE0]
	0x03A84594 LDRB W10, [X8 + 0x15]
	0x03A84598 CMP W9, 0x1
	0x03A8459C CSET W9, EQ
	0x03A845A0 STRB W9, [X8 + 0x19]
	0x03A845A4 CBZ W10, 0x3A84628
	0x03A845A8 LDR X0, [X19 + 0x100]
	0x03A845AC CBZ X0, 0x3A8652C
	0x03A845B0 ADRP X8, 0x6D1000
	0x03A845B4 LDR X8, [X8 + 0xEF0]
	0x03A845B8 LDR X1, [X8]
	0x03A845BC ADD X8, X31, 0x4B0
	0x03A845C0 BL 0x301CB58
	0x03A845C4 LDR V0, [X31 + 0x4B]
	0x03A845C8 LDR X8, [X31 + 0x4C0]
	0x03A845CC ADRP X21, 0x6D1000
	0x03A845D0 STR V0, [X31 + 0x73]
	0x03A845D4 STR X8, [X31 + 0x740]
	0x03A845D8 LDR X21, [X21 + 0xEE0]
	0x03A845DC LDR X1, [X21]
	0x03A845E0 ADD X0, X31, 0x730
	0x03A845E4 BL 0x2BC4350
	0x03A845E8 TBZ X0, 0x0, 0x3A84614
	0x03A845EC LDR X8, [X31 + 0x740]
	0x03A845F0 CBZ X8, 0x3A86530
	0x03A845F4 LDR W8, [X8 + 0x10]
	0x03A845F8 SUB W8, W8, 0xDC
	0x03A845FC CMP W8, 0xA
	0x03A84600 B.HI 0x3A845DC
	0x03A84604 LDR X0, [X19 + 0x2D8]
	0x03A84608 CBZ X0, 0x3A86540
	0x03A8460C MOV X1, X31
	0x03A84610 BL 0x3A9C384
	0x03A84614 ADRP X8, 0x6D1000
	0x03A84618 LDR X8, [X8 + 0xED8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X22, 0x960000
	015 Move X21, 0x6D5000
	016 Move X25, 0x6D2000
	017 Move W8, [X22+824]
	018 Move X21, [X21+312]
	019 Move X25, [X25+2248]
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {157}
	026 Move X0, 0x6D4000
	027 Move X0, [X0+2248]
	028 Call 0x1C17CF4
	029 Move X0, 0x6D4000
	030 Move X0, [X0+928]
	031 Call 0x1C17CF4
	032 Move X0, 0x6D5000
	033 Move X0, [X0+320]
	034 Call 0x1C17CF4
	035 Move X0, 0x6D4000
	036 Move X0, [X0+2696]
	037 Call 0x1C17CF4
	038 Move X0, 0x699000
	039 Move X0, [X0+2296]
	040 Call 0x1C17CF4
	041 Move X0, 0x6D5000
	042 Move X0, [X0+328]
	043 Call 0x1C17CF4
	044 Move X0, 0x6D5000
	045 Move X0, [X0+336]
	046 Call 0x1C17CF4
	047 Move X0, 0x6D5000
	048 Move X0, [X0+344]
	049 Call 0x1C17CF4
	050 Move X0, 0x6D5000
	051 Move X0, [X0+352]
	052 Call 0x1C17CF4
	053 Move X0, 0x6D5000
	054 Move X0, [X0+360]
	055 Call 0x1C17CF4
	056 Move X0, 0x6D5000
	057 Move X0, [X0+368]
	058 Call 0x1C17CF4
	059 Move X0, 0x6D2000
	060 Move X0, [X0+2256]
	061 Call 0x1C17CF4
	062 Move X0, 0x6D5000
	063 Move X0, [X0+376]
	064 Call 0x1C17CF4
	065 Move X0, 0x6D2000
	066 Move X0, [X0+2264]
	067 Call 0x1C17CF4
	068 Move X0, 0x6D5000
	069 Move X0, [X0+384]
	070 Call 0x1C17CF4
	071 Move X0, 0x6D5000
	072 Move X0, [X0+392]
	073 Call 0x1C17CF4
	074 Move X0, 0x6D5000
	075 Move X0, [X0+400]
	076 Call 0x1C17CF4
	077 Move X0, 0x6D3000
	078 Move X0, [X0+3264]
	079 Call 0x1C17CF4
	080 Move X0, 0x6D5000
	081 Move X0, [X0+408]
	082 Call 0x1C17CF4
	083 Move X0, 0x6D0000
	084 Move X0, [X0+3480]
	085 Call 0x1C17CF4
	086 Move X0, 0x6D4000
	087 Move X0, [X0+384]
	088 Call 0x1C17CF4
	089 Move X0, 0x6D4000
	090 Move X0, [X0+2256]
	091 Call 0x1C17CF4
	092 Move X0, 0x6D4000
	093 Move X0, [X0+1248]
	094 Call 0x1C17CF4
	095 Move X0, 0x671000
	096 Move X0, [X0+1432]
	097 Call 0x1C17CF4
	098 Move X0, 0x6D4000
	099 Move X0, [X0+3832]
	100 Call 0x1C17CF4
	101 Move X0, 0x6D5000
	102 Move X0, [X0+312]
	103 Call 0x1C17CF4
	104 Move X0, 0x69A000
	105 Move X0, [X0+3368]
	106 Call 0x1C17CF4
	107 Move X0, 0x6D2000
	108 Move X0, [X0+2280]
	109 Call 0x1C17CF4
	110 Move X0, 0x6D2000
	111 Move X0, [X0+2288]
	112 Call 0x1C17CF4
	113 Move X0, 0x6D2000
	114 Move X0, [X0+16]
	115 Call 0x1C17CF4
	116 Move X0, 0x6D2000
	117 Move X0, [X0+2248]
	118 Call 0x1C17CF4
	119 Move X0, 0x6D5000
	120 Move X0, [X0+416]
	121 Call 0x1C17CF4
	122 Move X0, 0x6D4000
	123 Move X0, [X0+2240]
	124 Call 0x1C17CF4
	125 Move X0, 0x6D5000
	126 Move X0, [X0+424]
	127 Call 0x1C17CF4
	128 Move X0, 0x69A000
	129 Move X0, [X0+2216]
	130 Call 0x1C17CF4
	131 Move X0, 0x6D5000
	132 Move X0, [X0+432]
	133 Call 0x1C17CF4
	134 Move X0, 0x6D5000
	135 Move X0, [X0+440]
	136 Call 0x1C17CF4
	137 Move X0, 0x6CE000
	138 Move X0, [X0+1280]
	139 Call 0x1C17CF4
	140 Move X0, 0x6D5000
	141 Move X0, [X0+448]
	142 Call 0x1C17CF4
	143 Move X0, 0x6D2000
	144 Move X0, [X0+144]
	145 Call 0x1C17CF4
	146 Move X0, 0x6D2000
	147 Move X0, [X0+2304]
	148 Call 0x1C17CF4
	149 Move X0, 0x6D2000
	150 Move X0, [X0+152]
	151 Call 0x1C17CF4
	152 Move X0, 0x6D5000
	153 Move X0, [X0+456]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X22+824], W8
	157 Move X24, 0x6D4000
	158 Move X24, [X24+3832]
	159 Move X0, [X21]
	160 Move [X31+144], X31
	161 Move [X31+152], X31
	162 Move [X31+168], W31
	163 Move [X31+160], X31
	164 Move [X31+128], X31
	165 Move [X31+136], X31
	166 Call 0x1C17F10
	167 Move X1, X31
	168 Move X21, X0
	169 Call RenderGraphFrameResources..ctor, X0
	170 Move [X19+912], X21
	171 Move X0, [X25]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move X22, 0x6D5000
	177 Move X21, 0x6D5000
	178 Move X22, [X22+392]
	179 Move X21, [X21+440]
	180 Move X0, X19
	181 Move X1, X20
	182 Move X2, X31
	183 Call ScriptableRenderer..ctor, X0, X1
	184 Move X0, [X24]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X0, X31
	190 Call PlatformAutoDetect.Initialize
	191 Move X0, [X22]
	192 Call 0x1C17F10
	193 Move X2, [X21]
	194 Move X1, X31
	195 Move X3, X31
	196 Move X21, X0
	197 Call Func`2<XRPassCreateInfo, Object>..ctor, X0, X1, X2
	198 Compare X20, 0
	199 JumpIfEqual {1047}
	200 Move X8, [X20+72]
	201 Compare X8, 0
	202 JumpIfEqual {1047}
	203 Move X8, [X8+24]
	204 Compare X8, 0
	205 JumpIfEqual {1047}
	206 Move X9, 0x6CE000
	207 Move X9, [X9+1280]
	208 Move X23, [X8+16]
	209 Move X22, [X8+24]
	210 Move X0, [X9]
	211 Move W9, [X0+224]
	212 Compare W9, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X0, X21
	216 Move X1, X23
	217 Move X2, X22
	218 Move X3, X31
	219 Call XRSystem.Initialize, X0, X1, X2
	220 Move X8, [X20+80]
	221 Compare X8, 0
	222 JumpIfEqual {1047}
	223 Move X9, 0x699000
	224 Move X9, [X9+2296]
	225 Move X21, [X8+80]
	226 Move X0, [X9]
	227 Move W9, [X0+224]
	228 Compare W9, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X21
	232 Move X1, X31
	233 Call CoreUtils.CreateEngineMaterial, X0
	234 Move [X19+784], X0
	235 Move X8, [X20+80]
	236 Compare X8, 0
	237 JumpIfEqual {1047}
	238 Move X0, [X8+96]
	239 Move X1, X31
	240 Call CoreUtils.CreateEngineMaterial, X0
	241 Move [X19+792], X0
	242 Move X8, [X20+80]
	243 Compare X8, 0
	244 JumpIfEqual {1047}
	245 Move X0, [X8+24]
	246 Move X1, X31
	247 Call CoreUtils.CreateEngineMaterial, X0
	248 Move [X19+800], X0
	249 Move X8, [X20+80]
	250 Compare X8, 0
	251 JumpIfEqual {1047}
	252 Move X0, [X8+40]
	253 Move X1, X31
	254 Call CoreUtils.CreateEngineMaterial, X0
	255 Move [X19+808], X0
	256 Move X8, [X20+80]
	257 Compare X8, 0
	258 JumpIfEqual {1047}
	259 Move X0, [X8+48]
	260 Move X1, X31
	261 Call CoreUtils.CreateEngineMaterial, X0
	262 Move [X19+816], X0
	263 Move X8, [X20+80]
	264 Compare X8, 0
	265 JumpIfEqual {1047}
	266 Move X0, [X8+104]
	267 Move X1, X31
	268 Call CoreUtils.CreateEngineMaterial, X0
	269 Move [X19+824], X0
	270 Move X8, [X20+80]
	271 Compare X8, 0
	272 JumpIfEqual {1047}
	273 Move X0, [X8+112]
	274 Move X1, X31
	275 Add X21, X19, 749
	276 Call CoreUtils.CreateEngineMaterial, X0
	277 Move [X19+832], X0
	278 Move X29, [X20+104]
	279 Move X0, X31
	280 Call StencilState.get_defaultValue
	281 Move [X21], X0
	282 Move [X21+8], W1
	283 Compare X29, 0
	284 JumpIfEqual {1047}
	285 Move W1, [X29+16]
	286 Move X22, 0x69A000
	287 Move X22, [X22+2216]
	288 Move X0, X21
	289 Move X2, X31
	290 Call StencilState.set_enabled, X0, X1
	291 Move W1, [X29+24]
	292 Move X0, X21
	293 Move X2, X31
	294 Call StencilState.SetCompareFunction, X0, X1
	295 Move W1, [X29+28]
	296 Move X0, X21
	297 Move X2, X31
	298 Call StencilState.SetPassOperation, X0, X1
	299 Move W1, [X29+32]
	300 Move X0, X21
	301 Move X2, X31
	302 Call StencilState.SetFailOperation, X0, X1
	303 Move W1, [X29+36]
	304 Move X0, X21
	305 Move X2, X31
	306 Call StencilState.SetZFailOperation, X0, X1
	307 Move W8, [X20+132]
	308 Move [X19+776], W8
	309 Move X0, [X22]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X23, 0x671000
	315 Move X23, [X23+1432]
	316 Move X0, X31
	317 Call UniversalRenderPipeline.get_asset
	318 Compare X0, 0
	319 JumpIfEqual {370}
	320 Move W8, [X0+235]
	321 Compare W8, 0
	322 JumpIfEqual {370}
	323 Add X8, X31, 48
	324 Move X0, X31
	325 Call Settings.Create
	326 Move V0, [X31+3]
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 Move X0, [X22]
	329 Move [X31+9], V0
	330 Move [X31+156], V1
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move X0, X31
	336 Call UniversalRenderPipeline.get_asset
	337 Move X8, [X23]
	338 Move X22, X0
	339 Move W9, [X8+224]
	340 Compare W9, 0
	341 JumpIfNotEqual {344}
	342 Move X0, X8
	343 Call 0x1C17DFC
	344 Move X0, X22
	345 Move X1, X31
	346 Call Object.op_Implicit, X0
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {361}
	351 Compare X22, 0
	352 JumpIfEqual {1047}
	353 Move X0, X22
	354 Move X1, X31
	355 Call UniversalRenderPipelineAsset.get_additionalLightsCookieFormat, X0
	356 Move [X31+152], W0
	357 Move X0, X22
	358 Move X1, X31
	359 Call UniversalRenderPipelineAsset.get_additionalLightsCookieResolution, X0
	360 Move [X31+144], X0
	361 Move X8, 0x6D4000
	362 Move X8, [X8+384]
	363 Move X0, [X8]
	364 Call 0x1C17F10
	365 Add X1, X31, 144
	366 Move X2, X31
	367 Move X22, X0
	368 Call LightCookieManager..ctor, X0, X1
	369 Move [X19+768], X22
	370 Move X0, [X25]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move W8, 257
	376 NotImplemented "Instruction STRH not yet implemented."
	377 Move X0, [X24]
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Move X22, 0x960000
	383 Move W8, [X22+778]
	384 Compare W8, 0
	385 JumpIfNotEqual {391}
	386 Move X0, 0x6D4000
	387 Move X0, [X0+3832]
	388 Call 0x1C17CF4
	389 Move W8, 1
	390 Move [X22+778], W8
	391 Move X0, [X24]
	392 Move X26, 0x6D5000
	393 Move X25, 0x6D4000
	394 Move X28, 0x6D4000
	395 Move X27, 0x6D5000
	396 Move X26, [X26+384]
	397 Move X25, [X25+2256]
	398 Move W8, [X0+224]
	399 Move X28, [X28+2248]
	400 Move X27, [X27+432]
	401 Compare W8, 0
	402 JumpIfNotEqual {405}
	403 Call 0x1C17DFC
	404 Move X0, [X24]
	405 Move X8, [X0+184]
	406 Move X22, [X19+768]
	407 Move W8, [X8+8]
	408 Xor W8, W8, 1
	409 Move [X19+423], W8
	410 Move W8, [X20+116]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 NotImplemented "Instruction CSET not yet implemented."
	413 Move [X19+424], W23
	414 Move X0, [X26]
	415 Move X26, 0x6D5000
	416 Move X26, [X26+352]
	417 Call 0x1C17F10
	418 Move X1, X22
	419 Move X2, X23
	420 Move X3, X31
	421 Move X24, X0
	422 Call ForwardLights..ctor, X0, X1
	423 Move [X19+720], X24
	424 NotImplemented "Instruction LDUR not yet implemented."
	425 Move [X19+736], D0
	426 Move W8, [X20+124]
	427 Move [X19+748], W31
	428 Move [X19+744], W8
	429 Move X0, [X25]
	430 Call 0x1C17F10
	431 Move W1, 50
	432 Move X2, X31
	433 Move X22, X0
	434 Call MainLightShadowCasterPass..ctor, X0, X1
	435 Move [X19+464], X22
	436 Move X0, [X28]
	437 Call 0x1C17F10
	438 Move W1, 50
	439 Move X2, X31
	440 Move X22, X0
	441 Call AdditionalLightsShadowCasterPass..ctor, X0, X1
	442 Move [X19+472], X22
	443 Move X0, [X27]
	444 Call 0x1C17F10
	445 Move W1, 250
	446 Move X2, X31
	447 Move X22, X0
	448 Call XROcclusionMeshPass..ctor, X0, X1
	449 Move [X19+592], X22
	450 Move X8, 0x6D4000
	451 Move X22, [X19+800]
	452 Move X8, [X8+2696]
	453 Move X0, [X8]
	454 Call 0x1C17F10
	455 Move W1, 1002
	456 Move X2, X22
	457 Move W3, W31
	458 Move W4, W31
	459 Move W5, W31
	460 Move X6, X31
	461 Move X23, X0
	462 Call CopyDepthPass..ctor, X0, X1, X2, X3, X4, X5
	463 Move [X19+600], X23
	464 Move X8, 0x69A000
	465 Move X8, [X8+3368]
	466 Move X0, [X8]
	467 Move W8, [X0+224]
	468 Compare W8, 0
	469 JumpIfNotEqual {471}
	470 Call 0x1C17DFC
	471 Move X0, X31
	472 Call RenderQueueRange.get_opaque
	473 Move X8, [X26]
	474 Move W22, [X20+92]
	475 Move X23, X0
	476 Move X0, X8
	477 Call 0x1C17F10
	478 Move W1, 150
	479 Move X2, X23
	480 Move X3, X22
	481 Move X4, X31
	482 Move X24, X0
	483 Call DepthOnlyPass..ctor, X0, X1, X2, X3
	484 Move X0, X31
	485 Move [X19+432], X24
	486 Call RenderQueueRange.get_opaque
	487 Move X8, 0x6D5000
	488 Move W22, [X20+92]
	489 Move X8, [X8+344]
	490 Move X23, X0
	491 Move X8, [X8]
	492 Move X0, X8
	493 Call 0x1C17F10
	494 Move W1, 150
	495 Move X2, X23
	496 Move X3, X22
	497 Move X4, X31
	498 Move X24, X0
	499 Call DepthNormalOnlyPass..ctor, X0, X1, X2, X3
	500 Move W8, [X19+736]
	501 Move [X19+440], X24
	502 Or W9, W8, 2
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X8, 0x6D4000
	505 Move X22, [X19+800]
	506 Move X8, [X8+2696]
	507 Move X0, [X8]
	508 Call 0x1C17F10
	509 Move W1, 200
	510 Move W3, 1
	511 Move X2, X22
	512 Move W4, W31
	513 Move W5, W31
	514 Move X6, X31
	515 Move X23, X0
	516 Call CopyDepthPass..ctor, X0, X1, X2, X3, X4, X5
	517 Move W8, [X19+736]
	518 Move [X19+448], X23
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X8, 0x6D5000
	521 Move X23, [X19+816]
	522 Move X24, [X19+768]
	523 Move W25, [X19+420]
	524 Move X8, [X8+328]
	525 Move X0, [X8]
	526 Call 0x1C17F10
	527 Move X1, X23
	528 Move X2, X24
	529 Move W3, W25
	530 Move X4, X31
	531 Move X22, X0
	532 Call DeferredLights..ctor, X0, X1, X2
	533 Move [X19+728], X22
	534 Compare X22, 0
	535 JumpIfEqual {1047}
	536 Move W8, [X20+128]
	537 Move [X22+26], W8
	538 Move X8, 0x69A000
	539 Move X8, [X8+3368]
	540 Move X0, [X8]
	541 Move W8, [X0+224]
	542 Compare W8, 0
	543 JumpIfNotEqual {545}
	544 Call 0x1C17DFC
	545 Move X0, X31
	546 Call RenderQueueRange.get_opaque
	547 Move X8, 0x6D5000
	548 Move W22, [X20+92]
	549 Move X23, [X21]
	550 Move W24, [X21+8]
	551 Move W25, [X29+20]
	552 Move X26, [X19+728]
	553 Move X8, [X8+400]
	554 Move X27, X0
	555 Move X8, [X8]
	556 Move X0, X8
	557 Call 0x1C17F10
	558 Move W1, 210
	559 Move X2, X27
	560 Move X3, X22
	561 Move X4, X23
	562 Move X5, X24
	563 Move W6, W25
	564 Move X7, X26
	565 Move X28, X0
	566 Move [X31], X31
	567 Call GBufferPass..ctor, X0, X1, X2, X3, X4, X5, X6
	568 Move [X19+480], X28
	569 Move X8, 0x6D5000
	570 Move X8, [X8+328]
	571 Move X22, [X21]
	572 Move W23, [X21+8]
	573 Move X0, [X8]
	574 Move W8, [X0+224]
	575 Compare W8, 0
	576 JumpIfNotEqual {578}
	577 Call 0x1C17DFC
	578 Move W2, 96
	579 Move X0, X22
	580 Move X1, X23
	581 Move X3, X31
	582 Call DeferredLights.OverwriteStencil, X0, X1
	583 Move X8, 0x6D5000
	584 Move X8, [X8+416]
	585 Move X22, X0
	586 Move X24, X1
	587 Move W1, 3
	588 Move X0, [X8]
	589 Call 0x1C17D6C
	590 Move X8, 0x6D2000
	591 Move X8, [X8+152]
	592 Move X23, X0
	593 Add X0, X31, 48
	594 Move X2, X31
	595 Move X1, [X8]
	596 Move [X31+48], W31
	597 Call ShaderTagId..ctor, X0, X1
	598 Compare X23, 0
	599 JumpIfEqual {1047}
	600 Move W8, [X23+24]
	601 Compare W8, 0
	602 JumpIfEqual {1048}
	603 Move W8, [X31+48]
	604 Add X0, X31, 120
	605 Move X2, X31
	606 Move [X23+32], W8
	607 Move X8, 0x6D2000
	608 Move X8, [X8+144]
	609 Move [X31+120], W31
	610 Move X1, [X8]
	611 Call ShaderTagId..ctor, X0, X1
	612 Move W8, [X23+24]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move W8, [X31+120]
	615 Add X0, X31, 112
	616 Move X2, X31
	617 Move [X23+36], W8
	618 Move X8, 0x6D5000
	619 Move X8, [X8+448]
	620 Move [X31+112], W31
	621 Move X1, [X8]
	622 Call ShaderTagId..ctor, X0, X1
	623 Move W8, [X23+24]
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Move W8, [X31+112]
	626 Move [X23+40], W8
	627 Move X8, 0x6D4000
	628 Move W28, [X29+20]
	629 Move X25, [X19+800]
	630 Call 0x3EB2974
	631 Return 
	632 Move X0, [X8]
	633 Call 0x1C17F10
	634 Move W1, 211
	635 Move W3, 1
	636 Move X2, X25
	637 Move W4, W31
	638 Move W5, W31
	639 Move X6, X31
	640 Move X26, X0
	641 Call CopyDepthPass..ctor, X0, X1, X2, X3, X4, X5
	642 Move [X19+488], X26
	643 Move X8, 0x6D4000
	644 Move X25, [X19+728]
	645 Move X8, [X8+336]
	646 Move X0, [X8]
	647 Call 0x1C17F10
	648 Move W1, 230
	649 Move X2, X25
	650 Move X3, X31
	651 Move X26, X0
	652 Call DeferredPass..ctor, X0, X1, X2
	653 Move X0, X31
	654 Move [X19+496], X26
	655 Call RenderQueueRange.get_opaque
	656 Move X8, 0x6D4000
	657 Move W25, [X20+92]
	658 Move X8, [X8+360]
	659 Move X26, X0
	660 Move X8, [X8]
	661 Move X0, X8
	662 Call 0x1C17F10
	663 Move X8, 0x6D4000
	664 Move X8, [X8+456]
	665 Move W3, 1
	666 Move W4, 250
	667 Move X2, X23
	668 Move X1, [X8]
	669 And X8, X24, 0
	670 Move X5, X26
	671 Move X6, X25
	672 Move X27, X0
	673 Move [X31+24], X31
	674 Move [X31+16], W28
	675 Move [X31], X22
	676 Move [X31+8], X8
	677 Call DrawObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8
	678 Move [X19+504], X27
	679 Move X8, 0x699000
	680 Move X8, [X8+3368]
	681 Move X28, 0x6D4000
	682 Move X0, [X8]
	683 Move W8, [X0+224]
	684 Move X28, [X28+368]
	685 Compare W8, 0
	686 JumpIfNotEqual {688}
	687 Call 0x1C17DFC
	688 Move X0, X31
	689 Call RenderQueueRange.get_opaque
	690 Move X8, 0x6D4000
	691 Move W22, [X20+92]
	692 Move X23, [X21]
	693 Move W24, [X21+8]
	694 Move W27, [X29+20]
	695 Move X8, [X8+360]
	696 Move X25, X0
	697 Move X8, [X8]
	698 Move X0, X8
	699 Call 0x1C17F10
	700 Move W1, 10
	701 Move W2, 1
	702 Move W3, 250
	703 Move X4, X25
	704 Move X5, X22
	705 Move X6, X23
	706 Move X7, X24
	707 Move X26, X0
	708 Move [X31+8], X31
	709 Move [X31], W27
	710 Call DrawObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	711 Move X0, X31
	712 Move [X19+512], X26
	713 Call RenderQueueRange.get_opaque
	714 Move X8, [X28]
	715 Move W22, [X20+92]
	716 Move X23, [X21]
	717 Move W24, [X21+8]
	718 Move W27, [X29+20]
	719 Move X25, X0
	720 Move X0, X8
	721 Call 0x1C17F10
	722 Move W1, 10
	723 Move W2, 1
	724 Move W3, 250
	725 Move X4, X25
	726 Move X5, X22
	727 Move X6, X23
	728 Move X7, X24
	729 Move X26, X0
	730 Move [X31+8], X31
	731 Move [X31], W27
	732 Call DrawObjectsWithRenderingLayersPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	733 Move [X19+520], X26
	734 Move X8, 0x6D1000
	735 Move W24, [X19+744]
	736 Move X8, [X8+16]
	737 Move X23, [X19+800]
	738 Move W9, 400
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Move X0, [X8]
	741 Move W10, 500
	742 NotImplemented "Instruction CSEL not yet implemented."
	743 Move W8, [X0+224]
	744 Compare W8, 0
	745 JumpIfNotEqual {747}
	746 Call 0x1C17DFC
	747 Move X25, 0x6D3000
	748 Move X28, 0x6D4000
	749 Move X25, [X25+1248]
	750 Move X28, [X28+376]
	751 Move X0, X31
	752 Call RenderingUtils.MultisampleDepthResolveSupported
	753 Move TEMP, X0
	754 And TEMP, TEMP, 1
	755 Compare TEMP, 1
	756 JumpIfNotEqual {760}
	757 Move X0, X31
	758 Call SystemInfo.get_supportsMultisampleAutoResolve
	759 And W26, W0, 1
	760 Move W26, W31
	761 Move X8, 0x6D3000
	762 Move X8, [X8+2696]
	763 NotImplemented "Instruction CMP not yet implemented."
	764 NotImplemented "Instruction CSET not yet implemented."
	765 Move X0, [X8]
	766 Call 0x1C17F10
	767 And W5, W26, W27
	768 Move W3, 1
	769 Move W1, W22
	770 Move X2, X23
	771 Move W4, W31
	772 Move X6, X31
	773 Move X24, X0
	774 Call CopyDepthPass..ctor, X0, X1, X2, X3, X4, X5
	775 Move [X19+536], X24
	776 Move X0, [X25]
	777 Move X23, [X19+824]
	778 Move X24, [X19+832]
	779 Call 0x1C17F10
	780 Or W1, W22, 1
	781 Move X2, X23
	782 Move X3, X24
	783 Move X4, X31
	784 Move X25, X0
	785 Call MotionVectorRenderPass..ctor, X0, X1, X2, X3
	786 Move [X19+456], X25
	787 Move X0, [X28]
	788 Call 0x1C17F10
	789 Move W1, 350
	790 Move X2, X31
	791 Move X22, X0
	792 Call DrawSkyboxPass..ctor, X0, X1
	793 Move [X19+528], X22
	794 Move X8, 0x6D4000
	795 Move X22, [X19+808]
	796 Move X23, [X19+784]
	797 Move X8, [X8+320]
	798 Move X0, [X8]
	799 Call 0x1C17F10
	800 Move W1, 400
	801 Move X2, X22
	802 Move X3, X23
	803 Move X4, X31
	804 Move X24, X0
	805 Call CopyColorPass..ctor, X0, X1, X2, X3
	806 Move [X19+544], X24
	807 Move X8, 0x6D3000
	808 Move W22, [X20+112]
	809 Move X8, [X8+2240]
	810 Move X0, [X8]
	811 Call 0x1C17F10
	812 Move W1, 450
	813 Move W2, W22
	814 Move X3, X31
	815 Move X23, X0
	816 Call TransparentSettingsPass..ctor, X0, X1, X2
	817 Move [X19+552], X23
	818 Move X8, 0x699000
	819 Move X8, [X8+3368]
	820 Move X0, [X8]
	821 Move W8, [X0+224]
	822 Compare W8, 0
	823 JumpIfNotEqual {825}
	824 Call 0x1C17DFC
	825 Move X0, X31
	826 Call RenderQueueRange.get_transparent
	827 Move X8, 0x6D4000
	828 Move W22, [X20+96]
	829 Move X23, [X21]
	830 Move W21, [X21+8]
	831 Move W26, [X29+20]
	832 Move X8, [X8+360]
	833 Move X24, X0
	834 Move X8, [X8]
	835 Move X0, X8
	836 Call 0x1C17F10
	837 Move W1, 11
	838 Move W3, 450
	839 Move W2, W31
	840 Move X4, X24
	841 Move X5, X22
	842 Move X6, X23
	843 Move X7, X21
	844 Move X25, X0
	845 Move [X31+8], X31
	846 Move [X31], W26
	847 Call DrawObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	848 Move [X19+560], X25
	849 Move X8, 0x6D4000
	850 Move X8, [X8+408]
	851 Move X0, [X8]
	852 Call 0x1C17F10
	853 Move W1, 550
	854 Move X2, X31
	855 Move X21, X0
	856 Call InvokeOnRenderObjectCallbackPass..ctor, X0, X1
	857 Move [X19+568], X21
	858 Move X22, 0x6D1000
	859 Move X22, [X22+2256]
	860 Move X0, [X22]
	861 Call 0x1C17F10
	862 Move W1, 550
	863 Move W2, 1
	864 Move X3, X31
	865 Move X21, X0
	866 Call DrawScreenSpaceUIPass..ctor, X0, X1, X2
	867 Move [X19+608], X21
	868 Move X0, [X22]
	869 Call 0x1C17F10
	870 Move W1, 1002
	871 Move W2, W31
	872 Move X3, X31
	873 Move X21, X0
	874 Call DrawScreenSpaceUIPass..ctor, X0, X1, X2
	875 Move X0, X31
	876 Move [X19+616], X21
	877 Call PostProcessParams.Create
	878 Move [X31+136], X1
	879 Move X22, 0x699000
	880 Move X8, [X19+784]
	881 Move X22, [X22+2216]
	882 Move W9, 74
	883 Move [X31+136], W9
	884 Move [X31+128], X8
	885 Move X0, [X22]
	886 Move W8, [X0+224]
	887 Compare W8, 0
	888 JumpIfNotEqual {890}
	889 Call 0x1C17DFC
	890 Move X0, X31
	891 Call UniversalRenderPipeline.get_asset
	892 Move X8, 0x670000
	893 Move X8, [X8+1432]
	894 Move X21, X0
	895 Move X8, [X8]
	896 Move W9, [X8+224]
	897 Compare W9, 0
	898 JumpIfNotEqual {901}
	899 Move X0, X8
	900 Call 0x1C17DFC
	901 Move X0, X21
	902 Move X1, X31
	903 Call Object.op_Implicit, X0
	904 Move TEMP, X0
	905 And TEMP, TEMP, 1
	906 Compare TEMP, 1
	907 JumpIfNotEqual {924}
	908 Compare X21, 0
	909 JumpIfEqual {1047}
	910 Move X0, [X22]
	911 Move W22, [X21+85]
	912 Move W21, [X21+88]
	913 Move W8, [X0+224]
	914 Compare W8, 0
	915 JumpIfNotEqual {917}
	916 Call 0x1C17DFC
	917 NotImplemented "Instruction CMP not yet implemented."
	918 NotImplemented "Instruction CSET not yet implemented."
	919 Move W1, W21
	920 Move W2, W31
	921 Move X3, X31
	922 Call UniversalRenderPipeline.MakeRenderTextureGraphicsFormat, X0, X1, X2
	923 Move [X31+136], W0
	924 Move X21, 0x6D3000
	925 Move X22, 0x6D1000
	926 Move X25, 0x6D1000
	927 Move X24, 0x6D1000
	928 Move X23, 0x6D1000
	929 Move X21, [X21+928]
	930 Move X22, [X22+2264]
	931 Move X25, [X25+2280]
	932 Move X24, [X24+2304]
	933 Move X23, [X23+2288]
	934 Move X1, [X20+64]
	935 NotImplemented "Instruction MOVI not yet implemented."
	936 Add X0, X31, 48
	937 Add X2, X31, 128
	938 Move X3, X31
	939 Move [X31+80], V0
	940 Move [X31+88], V0
	941 Move [X31+48], V0
	942 Move [X31+56], V0
	943 Call PostProcessPasses..ctor, X0, X1, X2
	944 Move V0, [X31+80]
	945 Move V1, [X31+96]
	946 Move V2, [X31+48]
	947 Move V3, [X31+64]
	948 Add X8, X19, 840
	949 Move [X8+32], V0
	950 Move [X8+40], V1
	951 Move [X8], V2
	952 Move [X8+8], V3
	953 Move X0, [X21]
	954 Call 0x1C17F10
	955 Move W1, 1000
	956 Move X2, X31
	957 Move X20, X0
	958 Call CapturePass..ctor, X0, X1
	959 Move [X19+584], X20
	960 Move X0, [X22]
	961 Move X20, [X19+784]
	962 Move X21, [X19+792]
	963 Call 0x1C17F10
	964 Move W1, 1001
	965 Move X2, X20
	966 Move X3, X21
	967 Move X4, X31
	968 Move X22, X0
	969 Call FinalBlitPass..ctor, X0, X1, X2, X3
	970 Move [X19+576], X22
	971 Move X0, [X25]
	972 Call 0x1C17F10
	973 Move X1, [X24]
	974 Move X2, X31
	975 Move X20, X0
	976 Call RenderTargetBufferSystem..ctor, X0, X1
	977 Move [X19+624], X20
	978 Move X0, [X23]
	979 Call 0x1C17F10
	980 Move X1, X31
	981 Move X20, X0
	982 Call RenderingFeatures..ctor, X0
	983 Move X21, 0x6D1000
	984 Move X21, [X21+2248]
	985 Move X0, [X21]
	986 Move W8, [X0+224]
	987 Compare W8, 0
	988 JumpIfNotEqual {990}
	989 Call 0x1C17DFC
	990 Move W8, [X19+736]
	991 Move [X19+232], X20
	992 NotImplemented "Instruction CMP not yet implemented."
	993 Move X0, [X21]
	994 Move W8, [X0+224]
	995 Compare W8, 0
	996 JumpIfNotEqual {999}
	997 Call 0x1C17DFC
	998 Move X20, [X19+232]
	999 Compare X20, 0
	1000 JumpIfEqual {1047}
	1001 Move [X20+17], W31
	1002 Move X8, 0x6D2000
	1003 Move X8, [X8+3264]
	1004 Move W1, 3
	1005 Move X0, [X8]
	1006 Call 0x1C17D6C
	1007 Move X8, 0x6D4000
	1008 Move X8, [X8+424]
	1009 Move X2, X31
	1010 Move X20, X0
	1011 Move X1, [X8]
	1012 Call RuntimeHelpers.InitializeArray, X0, X1
	1013 Move [X19+240], X20
	1014 Move X20, 0x6CF000
	1015 Move X20, [X20+3480]
	1016 Move X0, [X20]
	1017 Move W8, [X0+224]
	1018 Compare W8, 0
	1019 JumpIfNotEqual {1022}
	1020 Call 0x1C17DFC
	1021 Move X0, [X20]
	1022 Move X9, -49897472
	1023 Move X8, [X0+184]
	1024 Move V0, [X9+3776]
	1025 Move X0, X31
	1026 Move [X8+36], D0
	1027 Call LensFlareCommonSRP.Initialize
	1028 Move W0, 29
	1029 Move X1, X31
	1030 Call GraphicsSettings.HasShaderDefine, X0
	1031 And W8, W0, 1
	1032 Move [X19+780], W8
	1033 Move X20, [X31+256]
	1034 Move X19, [X31+264]
	1035 Move X22, [X31+240]
	1036 Move X21, [X31+248]
	1037 Move X24, [X31+224]
	1038 Move X23, [X31+232]
	1039 Move X26, [X31+208]
	1040 Move X25, [X31+216]
	1041 Move X28, [X31+192]
	1042 Move X27, [X31+200]
	1043 Move X29, [X31+176]
	1044 Move X30, [X31+184]
	1045 Add X31, X31, 272
	1046 Return 
	1047 Call 0x1C17F20
	1048 Call 0x1C17F28

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03A8461C ADD X0, X31, 0x730
	0x03A84620 LDR X1, [X8]
	0x03A84624 BL 0x2BC434C
	0x03A84628 LDRB W8, [X20 + 0x1A0]
	0x03A8462C CBZ W8, 0x3A84644
	0x03A84630 ADD X0, X19, 0x348
	0x03A84634 MOV X1, X31
	0x03A84638 BL 0x3A6783C
	0x03A8463C AND W21, W0, 0x1
	0x03A84640 B 0x3A84648
	0x03A84644 MOV W21, W31
	0x03A84648 LDRB W8, [X20 + 0x2B4]
	0x03A8464C CBZ W8, 0x3A84670
	0x03A84650 ADD X0, X19, 0x348
	0x03A84654 MOV X1, X31
	0x03A84658 BL 0x3A6783C
	0x03A8465C AND W22, W0, 0x1
	0x03A84660 CBZ W21, 0x3A84678
	0x03A84664 LDRB W8, [X20 + 0x189]
	0x03A84668 STR W8, [X31 + 0x8C]
	0x03A8466C B 0x3A8467C
	0x03A84670 MOV W22, W31
	0x03A84674 CBNZ W21, 0x3A84664
	0x03A84678 STR W31, [X31 + 0x8C]
	0x03A8467C LDRB W8, [X20 + 0x1A0]
	0x03A84680 CBZ W8, 0x3A84698
	0x03A84684 ADD X0, X19, 0x348
	0x03A84688 MOV X1, X31
	0x03A8468C BL 0x3A6783C
	0x03A84690 MOV W24, W0
	0x03A84694 B 0x3A8469C
	0x03A84698 MOV W24, W31
	0x03A8469C MOV X0, X29
	0x03A846A0 MOV X1, X31
	0x03A846A4 BL 0x3A8DE34
	0x03A846A8 STR W21, [X31 + 0x60]
	0x03A846AC TBZ X0, 0x0, 0x3A846B8
	0x03A846B0 MOVZ W26, 0x1
	0x03A846B4 B 0x3A846C8
	0x03A846B8 MOV X0, X29
	0x03A846BC MOV X1, X31
	0x03A846C0 BL 0x3A9124C
	0x03A846C4 AND W26, W0, 0x1
	0x03A846C8 MOVZ W21, 0x1
	0x03A846CC TBNZ X28, 0x0, 0x3A846E4
	0x03A846D0 LDRB W8, [X20 + 0x187]
	0x03A846D4 CBNZ W8, 0x3A846E4
	0x03A846D8 LDR W8, [X19 + 0x2E4]
	0x03A846DC CMP W8, 0x2
	0x03A846E0 CSET W21, EQ
	0x03A846E4 LDR X0, [X19 + 0x1D0]
	0x03A846E8 CBZ X0, 0x3A8652C
	0x03A846EC MOV X1, X20
	0x03A846F0 MOV X2, X31
	0x03A846F4 BL 0x3AB3C60
	0x03A846F8 LDR X8, [X19 + 0x1D8]
	0x03A846FC STR W0, [X31 + 0x40]
	0x03A84700 CBZ X8, 0x3A8652C
	0x03A84704 MOV X0, X8
	0x03A84708 MOV X1, X20
	0x03A8470C MOV X2, X31
	0x03A84710 BL 0x3AA1FCC
	0x03A84714 LDR X8, [X19 + 0x228]
	0x03A84718 STR W0, [X31 + 0x64]
	0x03A8471C CBZ X8, 0x3A8652C
	0x03A84720 MOV X0, X8
	0x03A84724 MOV X1, X31
	0x03A84728 STR W22, [X31 + 0x34]
	0x03A8472C BL 0x3A67040
	0x03A84730 LDR W8, [X31 + 0x8C]
	0x03A84734 STR W0, [X31 + 0x38]
	0x03A84738 ORR W8, W21, W8, 0x0
	0x03A8473C CBZ W8, 0x3A84760
	0x03A84740 LDR W8, [X19 + 0x2E8]
	0x03A84744 MOV X0, X19
	0x03A84748 MOV X1, X29
	0x03A8474C CMP W8, 0x2
	0x03A84750 CSET W22, EQ
	0x03A84754 BL 0x3A83D8C
	0x03A84758 ORN W8, W22, W0, 0x0
	0x03A8475C AND W8, W8, 0x1
	0x03A84760 ORR W9, W25, W28, 0x8
	0x03A84764 AND W9, W9, 0x1
	0x03A84768 ORR W9, W9, W23, 0x0
	0x03A8476C ORR W9, W9, W26, 0x0
	0x03A84770 ORR W8, W9, W8, 0x0
	0x03A84774 STR X23, [X31 + 0x68]
	0x03A84778 CBZ W8, 0x3A84794
	0x03A8477C MOV X0, X19
	0x03A84780 BL 0x3A82610
	0x03A84784 CMP W0, 0x1
	0x03A84788 CSET W8, NE

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x95F000
	007 Move W8, [X21+825]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x698000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x6CF000
	018 Move X0, [X0+3480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+825], W8
	022 Move X0, [X19+720]
	023 Compare X0, 0
	024 JumpIfEqual {109}
	025 Move X1, X31
	026 Call ForwardLights.Cleanup, X0
	027 Move X0, [X19+480]
	028 Compare X0, 0
	029 JumpIfEqual {32}
	030 Move X1, X31
	031 Call GBufferPass.Dispose, X0
	032 Add X0, X19, 840
	033 Move X1, X31
	034 Call PostProcessPasses.Dispose, X0
	035 Move X0, [X19+576]
	036 Compare X0, 0
	037 JumpIfEqual {40}
	038 Move X1, X31
	039 Call FinalBlitPass.Dispose, X0
	040 Move X0, [X19+608]
	041 Compare X0, 0
	042 JumpIfEqual {45}
	043 Move X1, X31
	044 Call DrawScreenSpaceUIPass.Dispose, X0
	045 Move X0, [X19+616]
	046 Compare X0, 0
	047 JumpIfEqual {50}
	048 Move X1, X31
	049 Call DrawScreenSpaceUIPass.Dispose, X0
	050 Move X22, 0x698000
	051 Move X0, [X19+664]
	052 Move X22, [X22+2296]
	053 Compare X0, 0
	054 JumpIfEqual {57}
	055 Move X1, X31
	056 Call RTHandle.Release, X0
	057 Move X8, [X19]
	058 Move X21, 0x6CF000
	059 Move X0, X19
	060 Move X9, [X8+456]
	061 Move X1, [X8+464]
	062 Move X21, [X21+3480]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 And W1, W20, 1
	065 Move X0, X19
	066 Move X2, X31
	067 Call ScriptableRenderer.Dispose, X0, X1
	068 Move X0, [X22]
	069 Move X20, [X19+784]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Call CoreUtils.Destroy, X0
	077 Move X0, [X19+792]
	078 Move X1, X31
	079 Call CoreUtils.Destroy, X0
	080 Move X0, [X19+800]
	081 Move X1, X31
	082 Call CoreUtils.Destroy, X0
	083 Move X0, [X19+808]
	084 Move X1, X31
	085 Call CoreUtils.Destroy, X0
	086 Move X0, [X19+816]
	087 Move X1, X31
	088 Call CoreUtils.Destroy, X0
	089 Move X0, [X19+824]
	090 Move X1, X31
	091 Call CoreUtils.Destroy, X0
	092 Move X0, [X19+832]
	093 Move X1, X31
	094 Call CoreUtils.Destroy, X0
	095 Call UniversalRenderer.CleanupRenderGraphResources, X0
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X0, X31
	106 Move X30, [X31+48]
	107 Call LensFlareCommonSRP.Dispose
	108 Return 
	109 Call 0x1C17F20

Method: System.Void ReleaseRenderTargets()

Disassembly:
	0x03A84824 MOV X0, X19
	0x03A84828 ORR W8, W21, W8, 0x0
	0x03A8482C CMP W8, 0x0
	0x03A84830 CSET W24, NE
	0x03A84834 BL 0x3A82610
	0x03A84838 CMP W0, 0x1
	0x03A8483C B.NE 0x3A8484C
	0x03A84840 LDRB W8, [X19 + 0x1A4]
	0x03A84844 EOR W8, W8, 0x1
	0x03A84848 B 0x3A84850
	0x03A8484C MOV W8, W31
	0x03A84850 LDR X0, [X20 + 0x190]
	0x03A84854 CBZ X0, 0x3A8652C
	0x03A84858 LDR X9, [X31 + 0x80]
	0x03A8485C ORN W10, W31, W25, 0x0
	0x03A84860 ORR W13, W22, W23, 0x0
	0x03A84864 EOR W11, W28, 0x1
	0x03A84868 UBFM X21, X9, 0x18, 0x3F
	0x03A8486C UBFM X9, X9, 0x20, 0x3F
	0x03A84870 ORR W12, W27, W21, 0x0
	0x03A84874 ORR W9, W12, W9, 0x0
	0x03A84878 AND W27, W10, 0x1
	0x03A8487C ORR W9, W9, W26, 0x0
	0x03A84880 AND W22, W9, W27, 0x0
	0x03A84884 LDR W9, [X31 + 0x7C]
	0x03A84888 EOR W12, W13, 0x1
	0x03A8488C STR W13, [X31 + 0x50]
	0x03A84890 AND W12, W24, W12, 0x0
	0x03A84894 LDRB W13, [X19 + 0x1A5]
	0x03A84898 ORR W10, W11, W12, 0x0
	0x03A8489C ORR W9, W10, W9, 0x0
	0x03A848A0 ORR W8, W9, W8, 0x0
	0x03A848A4 MOV X1, X31
	0x03A848A8 ORR W28, W8, W13, 0x0
	0x03A848AC BL 0x3984C98
	0x03A848B0 ANDS W31, W0, 0x1
	0x03A848B4 CSEL W8, W28, W31, NE
	0x03A848B8 ORR W22, W8, W22, 0x0
	0x03A848BC CMP W22, 0x0
	0x03A848C0 MOV X0, X31
	0x03A848C4 CSET W23, NE
	0x03A848C8 BL 0x3C3BACC
	0x03A848CC CMP W0, 0x15
	0x03A848D0 B.NE 0x3A848DC
	0x03A848D4 LDRB W8, [X19 + 0x30C]
	0x03A848D8 CBZ W8, 0x3A848F0
	0x03A848DC CMP W22, 0x0
	0x03A848E0 CSET W8, NE
	0x03A848E4 ORR W8, W28, W8, 0x0
	0x03A848E8 CMP W8, 0x0
	0x03A848EC CSET W23, NE
	0x03A848F0 ADRP X24, 0x6CC000
	0x03A848F4 LDR X24, [X24 + 0x9B0]
	0x03A848F8 LDR X0, [X24]
	0x03A848FC LDR W8, [X0 + 0xE0]
	0x03A84900 CBNZ W8, 0x3A84908
	0x03A84904 BL 0x1C16DFC
	0x03A84908 ADD X8, X31, 0x4B0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+624]
	005 Compare X0, 0
	006 JumpIfEqual {73}
	007 Move X1, X31
	008 Call RenderTargetBufferSystem.Dispose, X0
	009 Move X8, [X19+728]
	010 Compare X8, 0
	011 JumpIfEqual {20}
	012 Move W8, [X8+21]
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, [X19+480]
	016 Compare X0, 0
	017 JumpIfEqual {20}
	018 Move X1, X31
	019 Call GBufferPass.Dispose, X0
	020 Add X0, X19, 840
	021 Move X1, X31
	022 Call PostProcessPasses.ReleaseRenderTargets, X0
	023 Move X0, [X19+464]
	024 Compare X0, 0
	025 JumpIfEqual {28}
	026 Move X1, X31
	027 Call MainLightShadowCasterPass.Dispose, X0
	028 Move X0, [X19+472]
	029 Compare X0, 0
	030 JumpIfEqual {33}
	031 Move X1, X31
	032 Call AdditionalLightsShadowCasterPass.Dispose, X0
	033 Move X0, [X19+656]
	034 Compare X0, 0
	035 JumpIfEqual {38}
	036 Move X1, X31
	037 Call RTHandle.Release, X0
	038 Move X0, [X19+672]
	039 Compare X0, 0
	040 JumpIfEqual {43}
	041 Move X1, X31
	042 Call RTHandle.Release, X0
	043 Move X0, [X19+680]
	044 Compare X0, 0
	045 JumpIfEqual {48}
	046 Move X1, X31
	047 Call RTHandle.Release, X0
	048 Move X0, [X19+688]
	049 Compare X0, 0
	050 JumpIfEqual {53}
	051 Move X1, X31
	052 Call RTHandle.Release, X0
	053 Move X0, [X19+696]
	054 Compare X0, 0
	055 JumpIfEqual {58}
	056 Move X1, X31
	057 Call RTHandle.Release, X0
	058 Move X0, [X19+704]
	059 Compare X0, 0
	060 JumpIfEqual {63}
	061 Move X1, X31
	062 Call RTHandle.Release, X0
	063 Move X0, [X19+712]
	064 Compare X0, 0
	065 JumpIfEqual {68}
	066 Move X1, X31
	067 Call RTHandle.Release, X0
	068 Move W8, 1
	069 Move [X19+216], W8
	070 Move X30, [X31+16]
	071 Move X19, [X31+24]
	072 Return 
	073 Call 0x1C17F20

Method: System.Void SetupFinalPassDebug(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8490C MOV X0, X31
	0x03A84910 BL 0x39D51C8
	0x03A84914 LDR V0, [X31 + 0x4D0]
	0x03A84918 FMOV S1, 1
	0x03A8491C FCMP S0, S1
	0x03A84920 B.NE 0x3A84950
	0x03A84924 LDR X0, [X24]
	0x03A84928 LDR W8, [X0 + 0xE0]
	0x03A8492C CBNZ W8, 0x3A84934
	0x03A84930 BL 0x1C16DFC
	0x03A84934 ADD X8, X31, 0x4B0
	0x03A84938 MOV X0, X31
	0x03A8493C BL 0x39D51C8
	0x03A84940 LDR V0, [X31 + 0x4D4]
	0x03A84944 FMOV S1, 1
	0x03A84948 FCMP S0, S1
	0x03A8494C B.EQ 0x3A8495C
	0x03A84950 ORR W8, W28, W23, 0x0
	0x03A84954 CMP W8, 0x0
	0x03A84958 CSET W23, NE
	0x03A8495C LDRB W8, [X19 + 0x1A4]
	0x03A84960 CBNZ W8, 0x3A8496C
	0x03A84964 LDRB W8, [X19 + 0x1A5]
	0x03A84968 CBZ W8, 0x3A84978
	0x03A8496C ORR W8, W28, W23, 0x0
	0x03A84970 CMP W8, 0x0
	0x03A84974 CSET W23, NE
	0x03A84978 LDR V0, [X31 + 0x81]
	0x03A8497C LDR V1, [X31 + 0x82]
	0x03A84980 LDR V2, [X31 + 0x83]
	0x03A84984 LDR W8, [X31 + 0x840]
	0x03A84988 ADD X0, X31, 0x7D0
	0x03A8498C MOV W1, W31
	0x03A84990 MOV X2, X31
	0x03A84994 STR V0, [X31 + 0x7D]
	0x03A84998 STR V1, [X31 + 0x7E]
	0x03A8499C STR V2, [X31 + 0x7F]
	0x03A849A0 STR W8, [X31 + 0x800]
	0x03A849A4 BL 0x3C22B28
	0x03A849A8 ADD X0, X31, 0x7D0
	0x03A849AC MOV W1, W31
	0x03A849B0 MOV X2, X31
	0x03A849B4 BL 0x3C22B44
	0x03A849B8 ADD X0, X31, 0x7D0
	0x03A849BC MOV W1, W31
	0x03A849C0 MOV X2, X31
	0x03A849C4 BL 0x3C22520
	0x03A849C8 LDR X0, [X19 + 0x270]
	0x03A849CC LDR V0, [X31 + 0x7D]
	0x03A849D0 LDR V1, [X31 + 0x7E]
	0x03A849D4 LDR V2, [X31 + 0x7F]
	0x03A849D8 LDR W8, [X31 + 0x800]
	0x03A849DC STR V0, [X31 + 0x4B]
	0x03A849E0 STR V1, [X31 + 0x4C]
	0x03A849E4 STR V2, [X31 + 0x4D]
	0x03A849E8 STR W8, [X31 + 0x4E0]
	0x03A849EC CBZ X0, 0x3A8652C
	0x03A849F0 LDR V0, [X31 + 0x4B]
	0x03A849F4 LDR V1, [X31 + 0x4C]
	0x03A849F8 LDR V2, [X31 + 0x4D]
	0x03A849FC LDR W8, [X31 + 0x4E0]
	0x03A84A00 ADD X1, X31, 0x470
	0x03A84A04 MOVZ W2, 0x1
	0x03A84A08 MOV X3, X31
	0x03A84A0C STR V0, [X31 + 0x47]
	0x03A84A10 STR V1, [X31 + 0x48]
	0x03A84A14 STR V2, [X31 + 0x49]
	0x03A84A18 STR W8, [X31 + 0x4A0]
	0x03A84A1C BL 0x3AB5DC4
	0x03A84A20 LDR W8, [X20 + 0xE0]
	0x03A84A24 CBZ W8, 0x3A84ACC
	0x03A84A28 LDR X0, [X20 + 0x220]
	0x03A84A2C CBZ X0, 0x3A8652C
	0x03A84A30 ADRP X8, 0x6D0000
	0x03A84A34 LDR X8, [X8 + 0x918]
	0x03A84A38 ADD X1, X31, 0x6F8
	0x03A84A3C LDR X2, [X8]
	0x03A84A40 BL 0x21A4990
	0x03A84A44 LDR X0, [X31 + 0x6F8]
	0x03A84A48 LDR X24, [X31 + 0x70]
	0x03A84A4C CBZ X0, 0x3A8652C
	0x03A84A50 BL 0x3A816F0
	0x03A84A54 CBZ X0, 0x3A8652C
	0x03A84A58 ADRP X8, 0x6CF000
	0x03A84A5C LDR X8, [X8 + 0xFF8]
	0x03A84A60 MOV X26, X0
	0x03A84A64 LDR X1, [X8]
	0x03A84A68 LDR X8, [X0]
	0x03A84A6C CMP X8, X1
	0x03A84A70 B.NE 0x3A86534
	0x03A84A74 LDR X0, [X19 + 0x270]
	0x03A84A78 LDR X8, [X26 + 0x270]
	0x03A84A7C CMP X0, X8
	0x03A84A80 B.EQ 0x3A84A98
	0x03A84A84 CBZ X0, 0x3A8652C
	0x03A84A88 MOV X1, X31
	0x03A84A8C BL 0x3AB5950
	0x03A84A90 LDR X0, [X26 + 0x270]
	0x03A84A94 STR X0, [X19 + 0x270]
	0x03A84A98 CBZ X0, 0x3A8652C
	0x03A84A9C MOV X1, X31
	0x03A84AA0 BL 0x3AB59A4
	0x03A84AA4 STR X0, [X19 + 0x278]
	0x03A84AA8 LDR X2, [X26 + 0x288]
	0x03A84AAC CMP W28, 0x0
	0x03A84AB0 MOV X1, X0
	0x03A84AB4 CSET W28, NE
	0x03A84AB8 STR X2, [X19 + 0x288]
	0x03A84ABC LDR X8, [X26 + 0x298]
	0x03A84AC0 LDR W26, [X31 + 0x50]
	0x03A84AC4 STR X8, [X19 + 0x298]
	0x03A84AC8 B 0x3A84CA4
	0x03A84ACC LDR X0, [X31 + 0x48]
	0x03A84AD0 STR X29, [X31 + 0x20]
	0x03A84AD4 CBZ X0, 0x3A8652C
	0x03A84AD8 MOV X1, X31
	0x03A84ADC BL 0x3C04C50
	0x03A84AE0 CMP W0, 0x1
	0x03A84AE4 ORR W29, W28, W23, 0x0
	0x03A84AE8 CSET W22, NE
	0x03A84AEC CMP W29, 0x0
	0x03A84AF0 ADD X8, X31, 0x4B0
	0x03A84AF4 MOVZ W0, 0x2
	0x03A84AF8 MOV X1, X31
	0x03A84AFC CSET W28, NE
	0x03A84B00 BL 0x3C4B204
	0x03A84B04 LDR V0, [X31 + 0x4B]
	0x03A84B08 LDR V1, [X31 + 0x4C]
	0x03A84B0C LDR X8, [X31 + 0x4D0]
	0x03A84B10 STR V0, [X31 + 0x70]
	0x03A84B14 STR V1, [X31 + 0x71]
	0x03A84B18 STR X8, [X31 + 0x720]
	0x03A84B1C LDR X0, [X20 + 0x190]
	0x03A84B20 CBZ X0, 0x3A8652C
	0x03A84B24 MOV X1, X31
	0x03A84B28 BL 0x3984C98
	0x03A84B2C TBZ X0, 0x0, 0x3A84B4C
	0x03A84B30 LDR X8, [X20 + 0x190]
	0x03A84B34 CBZ X8, 0x3A8652C
	0x03A84B38 LDR X9, [X8 + 0x50]
	0x03A84B3C LDP V1, V0, [X8 + 0x30]
	0x03A84B40 STR X9, [X31 + 0x720]
	0x03A84B44 STR V0, [X31 + 0x71]
	0x03A84B48 STR V1, [X31 + 0x70]
	0x03A84B4C LDR X8, [X19 + 0x298]
	0x03A84B50 AND W22, W28, W22, 0x0
	0x03A84B54 ADD X26, X19, 0x298
	0x03A84B58 CBZ X8, 0x3A84E7C
	0x03A84B5C LDUR V0, [X8 + 0x28]
	0x03A84B60 LDUR V1, [X8 + 0x38]
	0x03A84B64 LDR X8, [X8 + 0x48]
	0x03A84B68 LDR V2, [X31 + 0x70]
	0x03A84B6C LDR V3, [X31 + 0x71]
	0x03A84B70 LDR X9, [X31 + 0x720]
	0x03A84B74 ADD X0, X31, 0x410
	0x03A84B78 ADD X1, X31, 0x3E0
	0x03A84B7C MOV X2, X31
	0x03A84B80 STR X8, [X31 + 0x430]
	0x03A84B84 STR V1, [X31 + 0x42]
	0x03A84B88 STR V0, [X31 + 0x41]
	0x03A84B8C STP V2, V3, [X31 + 0x3E0]
	0x03A84B90 STR X9, [X31 + 0x400]
	0x03A84B94 BL 0x3C4B708
	0x03A84B98 LDR X24, [X31 + 0x70]
	0x03A84B9C TBZ X0, 0x0, 0x3A84BC4
	0x03A84BA0 LDR V0, [X31 + 0x70]
	0x03A84BA4 LDR V1, [X31 + 0x71]
	0x03A84BA8 LDR X8, [X31 + 0x720]
	0x03A84BAC ADD X1, X31, 0x3B0
	0x03A84BB0 MOV X0, X26
	0x03A84BB4 MOV X2, X31
	0x03A84BB8 STP V0, V1, [X31 + 0x3B0]
	0x03A84BBC STR X8, [X31 + 0x3D0]
	0x03A84BC0 BL 0x39D46B0
	0x03A84BC4 CBZ W22, 0x3A84BE4
	0x03A84BC8 LDR X1, [X31 + 0x848]
	0x03A84BCC LDR X5, [X31 + 0x20]
	0x03A84BD0 ADD X2, X31, 0x810
	0x03A84BD4 MOV X0, X19
	0x03A84BD8 MOV W3, W31
	0x03A84BDC MOV X4, X24
	0x03A84BE0 BL 0x3A8699C
	0x03A84BE4 LDR X9, [X19 + 0x200]
	0x03A84BE8 CBZ X9, 0x3A8652C
	0x03A84BEC EOR W8, W22, 0x1
	0x03A84BF0 STRB W8, [X9 + 0x181]
	0x03A84BF4 LDR X9, [X19 + 0x230]
	0x03A84BF8 CBZ X9, 0x3A8652C
	0x03A84BFC STRB W8, [X9 + 0x181]
	0x03A84C00 LDR X9, [X19 + 0x210]
	0x03A84C04 CBZ X9, 0x3A8652C
	0x03A84C08 STRB W8, [X9 + 0xE0]
	0x03A84C0C LDR X9, [X19 + 0x250]
	0x03A84C10 CBZ X9, 0x3A8652C
	0x03A84C14 STRB W8, [X9 + 0xE8]
	0x03A84C18 TBZ X23, 0x0, 0x3A84C7C

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+272], D12
	003 Move [X31+280], D11
	004 Move [X31+288], D10
	005 Move [X31+296], D9
	006 Move [X31+304], D8
	007 Move [X31+312], X29
	008 Move [X31+320], X30
	009 Move [X31+328], X21
	010 Move [X31+336], X20
	011 Move [X31+344], X19
	012 Move [X31+264], X31
	013 Move X19, X0
	014 Move X0, [X0+224]
	015 Compare X0, 0
	016 JumpIfEqual {224}
	017 Move X2, X31
	018 Move X20, X1
	019 Call DebugHandler.IsActiveForCamera, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {224}
	024 Move X0, [X19+224]
	025 Compare X0, 0
	026 JumpIfEqual {236}
	027 Add X1, X31, 268
	028 Add X2, X31, 264
	029 Move X3, X31
	030 Call DebugHandler.TryGetFullscreenDebugMode, X0, X1, X2
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {142}
	035 Move W8, [X31+268]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X19+424]
	038 Compare W8, 0
	039 JumpIfEqual {142}
	040 Move X20, [X20+192]
	041 Compare X20, 0
	042 JumpIfEqual {236}
	043 Move X0, X20
	044 Move X1, X31
	045 Call Camera.get_pixelWidth, X0
	046 NotImplemented "Instruction SCVTF not yet implemented."
	047 Move X0, X20
	048 Move X1, X31
	049 Call Camera.get_pixelHeight, X0
	050 Move V0, [X31+264]
	051 Move W8, 0x42C80000
	052 Move S1, W8
	053 Move W8, [X31+268]
	054 NotImplemented "Instruction SCVTF not yet implemented."
	055 Move S10, 1
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 Move S1, W31
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FMIN not yet implemented."
	060 NotImplemented "Instruction SCVTF not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Multiply S12, S0, S11
	064 Multiply S9, S0, S8
	065 Move X8, [X19+720]
	066 Compare X8, 0
	067 JumpIfEqual {236}
	068 Move X20, [X8+184]
	069 Compare X20, 0
	070 JumpIfEqual {236}
	071 Move X8, [X20]
	072 Move X0, X20
	073 Move X9, [X8+392]
	074 Move X1, [X8+400]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X20]
	077 Move W21, W0
	078 Move X0, X20
	079 Move X9, [X8+424]
	080 Move X1, [X8+432]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 NotImplemented "Instruction SCVTF not yet implemented."
	083 Multiply S0, S12, S0
	084 NotImplemented "Instruction SCVTF not yet implemented."
	085 NotImplemented "Instruction FDIV not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move X8, [X20]
	088 Move X0, X20
	089 Move X9, [X8+424]
	090 Move X1, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, [X20]
	093 Move W21, W0
	094 Move X0, X20
	095 Move X9, [X8+392]
	096 Move X1, [X8+400]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 NotImplemented "Instruction SCVTF not yet implemented."
	099 Multiply S0, S9, S0
	100 NotImplemented "Instruction SCVTF not yet implemented."
	101 NotImplemented "Instruction FDIV not yet implemented."
	102 Move V0, V9
	103 Move W8, [X31+268]
	104 Move V9, V0
	105 Subtract W8, W8, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X9, -49201152
	108 Add X9, X9, 2864
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 NotImplemented "Instruction FDIV not yet implemented."
	111 NotImplemented "Instruction ADR not yet implemented."
	112 Move W11, [X9]
	113 Add X10, X10, X11
	114 Add X20, X31, 136
	115 Subtract S11, S10, S9
	116 Subtract S10, S10, S8
	117 CallNoReturn X10
	118 Move X8, [X19+672]
	119 Compare X8, 0
	120 JumpIfEqual {236}
	121 Move X0, [X19+224]
	122 Move X9, [X8+72]
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move [X31+256], X9
	126 Move [X31+224], V1
	127 Move [X31+232], V0
	128 Compare X0, 0
	129 JumpIfEqual {236}
	130 Move V0, [X31+224]
	131 Move V1, [X31+240]
	132 Move X8, [X31+256]
	133 Add X1, X31, 176
	134 Move W2, 1
	135 Move [X31+176], V0
	136 Move [X31+184], V1
	137 Move [X31+208], X8
	138 Move V0, V11
	139 Move V1, V10
	140 Move V2, V9
	141 Move V3, V8
	142 Move X0, [X19+224]
	143 Compare X0, 0
	144 JumpIfEqual {236}
	145 Move X1, X31
	146 Call DebugHandler.ResetDebugRenderTarget, X0
	147 Move X8, [X19+472]
	148 Compare X8, 0
	149 JumpIfEqual {236}
	150 Move X0, [X8+232]
	151 Move X19, [X19+224]
	152 Add X8, X31, 136
	153 Move X1, X31
	154 Call RTHandle.op_Implicit, X0
	155 Move V0, [X20]
	156 Move V1, [X20+16]
	157 Move X8, [X31+168]
	158 Move [X31+224], V0
	159 Move [X31+232], V1
	160 Move [X31+256], X8
	161 Compare X19, 0
	162 JumpIfEqual {236}
	163 Move V0, [X31+224]
	164 Move V1, [X31+240]
	165 Move X8, [X31+256]
	166 Add X1, X31, 96
	167 Move [X31+96], V0
	168 Move [X31+104], V1
	169 Move [X31+128], X8
	170 Move X8, [X19+464]
	171 Compare X8, 0
	172 JumpIfEqual {236}
	173 Move X0, [X8+240]
	174 Move X19, [X19+224]
	175 Add X8, X31, 136
	176 Move X1, X31
	177 Call RTHandle.op_Implicit, X0
	178 Move V0, [X20]
	179 Move V1, [X20+16]
	180 Move X8, [X31+168]
	181 Move [X31+224], V0
	182 Move [X31+232], V1
	183 Move [X31+256], X8
	184 Compare X19, 0
	185 JumpIfEqual {236}
	186 Move V0, [X31+224]
	187 Move V1, [X31+240]
	188 Move X8, [X31+256]
	189 Add X1, X31, 48
	190 Move [X31+48], V0
	191 Move [X31+56], V1
	192 Move [X31+80], X8
	193 Move X8, [X19+720]
	194 Compare X8, 0
	195 JumpIfEqual {236}
	196 Move X0, [X8+184]
	197 Move X19, [X19+224]
	198 Add X8, X31, 136
	199 Move X1, X31
	200 Call RenderTargetIdentifier.op_Implicit, X0
	201 Move V0, [X20]
	202 Move V1, [X20+16]
	203 Move X8, [X31+168]
	204 Move [X31+224], V0
	205 Move [X31+232], V1
	206 Move [X31+256], X8
	207 Compare X19, 0
	208 JumpIfEqual {236}
	209 Move V0, [X31+224]
	210 Move V1, [X31+240]
	211 Move X8, [X31+256]
	212 Add X1, X31, 0
	213 Move [X31], V0
	214 Move [X31+8], V1
	215 Move [X31+32], X8
	216 Move X0, X19
	217 Move V0, V11
	218 Move V1, V10
	219 Move V2, V9
	220 Move V3, V8
	221 Move W2, W31
	222 Move X3, X31
	223 Call DebugHandler.SetDebugRenderTarget, X0, X1, X2, X3
	224 Move X20, [X31+336]
	225 Move X19, [X31+344]
	226 Move X30, [X31+320]
	227 Move X21, [X31+328]
	228 Move X29, [X31+312]
	229 Move D9, [X31+296]
	230 Move D8, [X31+304]
	231 Move D11, [X31+280]
	232 Move D10, [X31+288]
	233 Move V12, [X31+272]
	234 Add X31, X31, 352
	235 Return 
	236 Call 0x1C17F20

Method: System.Boolean IsOffscreenDepthTexture(in UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A84C1C LDR X0, [X19 + 0x270]
	0x03A84C20 CBZ X0, 0x3A8652C
	0x03A84C24 MOV X1, X31
	0x03A84C28 BL 0x3AB59A4
	0x03A84C2C MOV X1, X0
	0x03A84C30 B 0x3A84C80
	0x03A84C34 LDR W8, [X31 + 0x80C]
	0x03A84C38 MOVZ W9, 0x1
	0x03A84C3C CBZ W8, 0x3A84ED8
	0x03A84C40 CMP W8, 0x1
	0x03A84C44 B.EQ 0x3A84548
	0x03A84C48 ADRP X0, 0x677000
	0x03A84C4C LDR X0, [X0 + 0x760]
	0x03A84C50 BL 0x1C16D08
	0x03A84C54 BL 0x1C16F10
	0x03A84C58 MOV X1, X31
	0x03A84C5C MOV X19, X0
	0x03A84C60 BL 0x3315FB8
	0x03A84C64 ADRP X0, 0x6D3000
	0x03A84C68 LDR X0, [X0 + 0x210]
	0x03A84C6C BL 0x1C16D08
	0x03A84C70 MOV X1, X0
	0x03A84C74 MOV X0, X19
	0x03A84C78 BL 0x1C16DEC
	0x03A84C7C LDR X1, [X26]
	0x03A84C80 CMP W29, 0x0
	0x03A84C84 MOVZ W8, 0x298
	0x03A84C88 MOVZ W9, 0x290
	0x03A84C8C STR X1, [X19 + 0x278]
	0x03A84C90 CSEL X8, X9, X8, NE
	0x03A84C94 LDR X2, [X19, X8, LSL]
	0x03A84C98 LDR W26, [X31 + 0x50]
	0x03A84C9C LDR X29, [X31 + 0x20]
	0x03A84CA0 STR X2, [X19 + 0x288]
	0x03A84CA4 LDR X8, [X19 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x95F000
	006 Move X20, 0x670000
	007 Move W8, [X21+826]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x670000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+826], W8
	019 Move X0, [X20]
	020 Move X20, [X19+208]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {40}
	033 Move X0, [X19+208]
	034 Compare X0, 0
	035 JumpIfEqual {46}
	036 Move X1, X31
	037 Call RenderTexture.get_format, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move W0, W31
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean IsDepthPrimingEnabled(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A84CA8 CBZ X8, 0x3A8652C
	0x03A84CAC LDR W8, [X8 + 0x18]
	0x03A84CB0 CMP W8, 0x0
	0x03A84CB4 CSET W8, EQ
	0x03A84CB8 ORR W8, W25, W8, 0x0
	0x03A84CBC TBNZ X8, 0x0, 0x3A84CE8
	0x03A84CC0 LDR X0, [X19 + 0x270]
	0x03A84CC4 CBZ X0, 0x3A8652C
	0x03A84CC8 MOV X1, X31
	0x03A84CCC BL 0x3AB59A4
	0x03A84CD0 MOV X1, X0
	0x03A84CD4 MOV X0, X19
	0x03A84CD8 MOV X2, X31
	0x03A84CDC BL 0x3A4B604
	0x03A84CE0 LDR X1, [X19 + 0x278]
	0x03A84CE4 LDR X2, [X19 + 0x288]
	0x03A84CE8 LDRB W8, [X20 + 0x188]
	0x03A84CEC MOV X0, X19
	0x03A84CF0 MOV X3, X31
	0x03A84CF4 CMP W8, 0x0
	0x03A84CF8 CSINC W23, W21, W31, EQ
	0x03A84CFC BL 0x3A4B4D8
	0x03A84D00 ADRP X22, 0x6D3000
	0x03A84D04 LDR X22, [X22 + 0x1E8]
	0x03A84D08 LDR X25, [X19 + 0x100]
	0x03A84D0C LDR X0, [X22]
	0x03A84D10 LDR W8, [X0 + 0xE0]
	0x03A84D14 CBNZ W8, 0x3A84D20
	0x03A84D18 BL 0x1C16DFC
	0x03A84D1C LDR X0, [X22]
	0x03A84D20 LDR X8, [X0 + 0xB8]
	0x03A84D24 LDR X21, [X8 + 0x8]
	0x03A84D28 CBNZ X21, 0x3A84D80
	0x03A84D2C LDR W8, [X0 + 0xE0]
	0x03A84D30 CBNZ W8, 0x3A84D3C
	0x03A84D34 BL 0x1C16DFC
	0x03A84D38 LDR X0, [X22]
	0x03A84D3C ADRP X9, 0x6D0000
	0x03A84D40 LDR X8, [X0 + 0xB8]
	0x03A84D44 LDR X9, [X9 + 0x960]
	0x03A84D48 LDR X26, [X8]
	0x03A84D4C LDR X0, [X9]
	0x03A84D50 BL 0x1C16F10
	0x03A84D54 ADRP X8, 0x6D3000
	0x03A84D58 LDR X8, [X8 + 0x1D8]
	0x03A84D5C MOV X1, X26
	0x03A84D60 MOV X3, X31
	0x03A84D64 MOV X21, X0
	0x03A84D68 LDR X2, [X8]
	0x03A84D6C BL 0x24AD1FC
	0x03A84D70 LDR X8, [X22]
	0x03A84D74 LDR W26, [X31 + 0x50]
	0x03A84D78 LDR X8, [X8 + 0xB8]
	0x03A84D7C STR X21, [X8 + 0x8]
	0x03A84D80 CBZ X25, 0x3A8652C
	0x03A84D84 ADRP X8, 0x6D0000
	0x03A84D88 LDR X8, [X8 + 0x950]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x95F000
	008 Move W8, [X21+827]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6D0000
	016 Move X0, [X0+4088]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+827], W8
	020 Move X0, X20
	021 Move X1, X19
	022 Call UniversalRenderer.CanCopyDepth, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {43}
	027 Move X8, 0x6D0000
	028 Move X8, [X8+4088]
	029 Move W10, [X20+748]
	030 Move W11, [X20+740]
	031 Move W9, [X20+736]
	032 Move W12, [X19+200]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 And W10, W10, W13
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Compare W12, 0
	041 JumpIfEqual {44}
	042 Move W20, [X19+356]
	043 Move W0, W31
	044 Move W20, 1
	045 Move X0, [X8]
	046 Move W23, [X19+360]
	047 Or W21, W10, W11
	048 And W22, W9, 0xFFFFFFFD
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X19
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Call UniversalRenderer.IsOffscreenDepthTexture, X0
	059 And W8, W21, W22
	060 And W8, W20, W8
	061 And W8, W8, W23
	062 NotImplemented "Instruction BIC not yet implemented."
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0

Method: System.Boolean IsWebGL()

Disassembly:
	0x03A84E80 LDR V1, [X31 + 0x71]
	0x03A84E84 LDR X8, [X31 + 0x720]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsGLESDevice()

Disassembly:
	0x03A84E88 LDR X0, [X24]
	0x03A84E8C STR V0, [X31 + 0x4B]
	0x03A84E90 STR V1, [X31 + 0x4C]
	0x03A84E94 STR X8, [X31 + 0x4D0]
	0x03A84E98 LDR W8, [X0 + 0xE0]
	0x03A84E9C CBNZ W8, 0x3A84EA4
	0x03A84EA0 BL 0x1C16DFC
	0x03A84EA4 LDR V0, [X31 + 0x4B]
	0x03A84EA8 LDR V1, [X31 + 0x4C]
	0x03A84EAC LDR X8, [X31 + 0x4D0]
	0x03A84EB0 ADD X0, X31, 0x440
	0x03A84EB4 MOV X1, X31
	0x03A84EB8 STR V0, [X31 + 0x44]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call SystemInfo.get_graphicsDeviceType
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W0, 1
	006 Move X0, X31
	007 Call SystemInfo.get_graphicsDeviceType
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Boolean IsGLDevice()

Disassembly:
	0x03A84EBC STR V1, [X31 + 0x45]
	0x03A84EC0 STR X8, [X31 + 0x460]
	0x03A84EC4 BL 0x39D4600
	0x03A84EC8 LDR X24, [X31 + 0x70]
	0x03A84ECC STR X0, [X26]
	0x03A84ED0 CBNZ W22, 0x3A84BC8
	0x03A84ED4 B 0x3A84BE4
	0x03A84ED8 MOVZ W8, 0x1
	0x03A84EDC STR W8, [X31 + 0x30]
	0x03A84EE0 STR W31, [X31 + 0x7C]
	0x03A84EE4 MOVZ W23, 0x1
	0x03A84EE8 B 0x3A84554
	0x03A84EEC MOV W27, W31
	0x03A84EF0 MOV W21, W31
	0x03A84EF4 MOV W26, W31
	0x03A84EF8 STR W31, [X31 + 0x44]
	0x03A84EFC STRB W31, [X19 + 0x1A5]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call SystemInfo.get_graphicsDeviceType
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X0, X31
	006 Call SystemInfo.get_graphicsDeviceType
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, 1
	009 Move X0, X31
	010 Call SystemInfo.get_graphicsDeviceType
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A84F00 LDRB W9, [X19 + 0x1A4]
	0x03A84F04 CMP W21, 0x0
	0x03A84F08 CSET W23, NE
	0x03A84F0C CMP W8, 0x0
	0x03A84F10 CSET W8, NE
	0x03A84F14 STR W8, [X31 + 0x64]
	0x03A84F18 CBZ W9, 0x3A84F34
	0x03A84F1C LDR X0, [X19 + 0xE0]
	0x03A84F20 CBZ X0, 0x3A8652C
	0x03A84F24 MOV X1, X31
	0x03A84F28 BL 0x3A35AA8
	0x03A84F2C AND W8, W0, 0x1
	0x03A84F30 STRB W8, [X19 + 0x1A4]
	0x03A84F34 LDR X8, [X20 + 0x1D0]
	0x03A84F38 CBZ X8, 0x3A8652C
	0x03A84F3C LDRB W9, [X19 + 0x1A5]
	0x03A84F40 MOV X0, X19
	0x03A84F44 STRB W9, [X8 + 0x1A5]
	0x03A84F48 BL 0x3A82610
	0x03A84F4C CMP W0, 0x1
	0x03A84F50 B.NE 0x3A84F80
	0x03A84F54 LDR X0, [X19 + 0x2D8]
	0x03A84F58 CBZ X0, 0x3A8652C
	0x03A84F5C LDRB W8, [X0 + 0x15]
	0x03A84F60 CBZ W8, 0x3A84F80
	0x03A84F64 LDR X8, [X31 + 0x58]
	0x03A84F68 CMP W8, 0xDC
	0x03A84F6C B.EQ 0x3A84F78
	0x03A84F70 LDRB W8, [X19 + 0x1A4]
	0x03A84F74 CBNZ W8, 0x3A84F80
	0x03A84F78 MOV X1, X31
	0x03A84F7C BL 0x3A9C384
	0x03A84F80 MOV X0, X19
	0x03A84F84 BL 0x3A82610
	0x03A84F88 CMP W0, 0x1
	0x03A84F8C B.NE 0x3A84F9C
	0x03A84F90 LDRB W8, [X19 + 0x1A4]
	0x03A84F94 EOR W8, W8, 0x1
	0x03A84F98 B 0x3A84FA0
	0x03A84F9C MOV W8, W31
	0x03A84FA0 CMP W27, 0x0
	0x03A84FA4 CSET W9, NE
	0x03A84FA8 ORR W9, W26, W9, 0x0
	0x03A84FAC ORR W8, W8, W9, 0x0
	0x03A84FB0 CBZ W8, 0x3A85124
	0x03A84FB4 LDR V0, [X31 + 0x81]
	0x03A84FB8 LDR V1, [X31 + 0x82]
	0x03A84FBC LDR V2, [X31 + 0x83]
	0x03A84FC0 LDR W8, [X31 + 0x840]
	0x03A84FC4 STR V0, [X31 + 0x6C]
	0x03A84FC8 STR V1, [X31 + 0x6D]
	0x03A84FCC STR V2, [X31 + 0x6E]
	0x03A84FD0 STR W8, [X31 + 0x6F0]
	0x03A84FD4 CBZ W26, 0x3A84FE8
	0x03A84FD8 MOV X0, X19
	0x03A84FDC BL 0x3A82610
	0x03A84FE0 CMP W0, 0x1
	0x03A84FE4 B.NE 0x3A85024
	0x03A84FE8 ADRP X8, 0x6D0000
	0x03A84FEC LDR X8, [X8 + 0x10]
	0x03A84FF0 LDR X0, [X8]
	0x03A84FF4 LDR W8, [X0 + 0xE0]
	0x03A84FF8 CBNZ W8, 0x3A85000
	0x03A84FFC BL 0x1C16DFC
	0x03A85000 MOVZ W0, 0x31
	0x03A85004 MOVZ W1, 0x4
	0x03A85008 MOV X2, X31
	0x03A8500C BL 0x3A6ED54
	0x03A85010 TBZ X0, 0x0, 0x3A85024
	0x03A85014 MOV W21, W31
	0x03A85018 MOV W25, W31
	0x03A8501C MOVZ W1, 0x31
	0x03A85020 B 0x3A85030
	0x03A85024 MOV W1, W31
	0x03A85028 MOVZ W25, 0x18
	0x03A8502C MOVZ W21, 0x5C
	0x03A85030 ADD X0, X31, 0x6C0
	0x03A85034 MOV X2, X31
	0x03A85038 BL 0x3C2240C
	0x03A8503C ADD X0, X31, 0x6C0
	0x03A85040 MOV W1, W25
	0x03A85044 MOV X2, X31
	0x03A85048 STR W21, [X31 + 0x6DC]
	0x03A8504C BL 0x3C22520
	0x03A85050 ADRP X8, 0x6CF000
	0x03A85054 LDR X8, [X8 + 0x10]
	0x03A85058 ADD X21, X19, 0x2A0
	0x03A8505C LDR X0, [X8]
	0x03A85060 MOVZ W8, 0x1
	0x03A85064 STR W8, [X31 + 0x6C8]
	0x03A85068 LDR W8, [X0 + 0xE0]
	0x03A8506C CBNZ W8, 0x3A85074
	0x03A85070 BL 0x1C16DFC
	0x03A85074 ADRP X8, 0x6D1000
	0x03A85078 LDR X8, [X8 + 0xFD8]
	0x03A8507C ADD X1, X31, 0x6C0
	0x03A85080 FMOV S0, W31
	0x03A85084 MOVZ W3, 0x1
	0x03A85088 LDR X6, [X8]
	0x03A8508C MOVZ W5, 0x1
	0x03A85090 MOV X0, X21
	0x03A85094 MOV W2, W31
	0x03A85098 MOV W4, W31
	0x03A8509C MOV X7, X31
	0x03A850A0 BL 0x3A6D184
	0x03A850A4 LDR X8, [X21]
	0x03A850A8 CBZ X8, 0x3A8652C
	0x03A850AC LDR X9, [X8 + 0x48]
	0x03A850B0 LDUR V0, [X8 + 0x38]
	0x03A850B4 LDUR V1, [X8 + 0x28]
	0x03A850B8 LDR X1, [X8 + 0x58]
	0x03A850BC STR X9, [X31 + 0x4D0]
	0x03A850C0 STR V0, [X31 + 0x4C]
	0x03A850C4 STR V1, [X31 + 0x4B]
	0x03A850C8 CBZ X24, 0x3A8652C
	0x03A850CC LDR V0, [X31 + 0x4B]
	0x03A850D0 LDR V1, [X31 + 0x4C]
	0x03A850D4 LDR X8, [X31 + 0x4D0]
	0x03A850D8 ADD X2, X31, 0x380
	0x03A850DC MOV X0, X24
	0x03A850E0 MOV X3, X31
	0x03A850E4 STP V0, V1, [X31 + 0x380]
	0x03A850E8 STR X8, [X31 + 0x3A0]
	0x03A850EC BL 0x3C4FC28
	0x03A850F0 ADRP X8, 0x6CB000
	0x03A850F4 LDR X8, [X8 + 0xC80]
	0x03A850F8 LDR X0, [X8]
	0x03A850FC LDR W8, [X0 + 0xE0]
	0x03A85100 CBNZ W8, 0x3A85108
	0x03A85104 BL 0x1C16DFC
	0x03A85108 ADD X0, X31, 0x848
	0x03A8510C MOV X1, X24
	0x03A85110 MOV X2, X31
	0x03A85114 BL 0x3C58FE4
	0x03A85118 MOV X0, X24
	0x03A8511C MOV X1, X31
	0x03A85120 BL 0x3C4C310
	0x03A85124 LDR W8, [X31 + 0x3C]
	0x03A85128 STR W27, [X31 + 0x8C]
	0x03A8512C TBZ X8, 0x0, 0x3A85224
	0x03A85130 ADRP X22, 0x6D2000
	0x03A85134 LDR X22, [X22 + 0x1F0]
	0x03A85138 MOV X0, X19
	0x03A8513C ADD X25, X19, 0x2B0
	0x03A85140 LDR X27, [X22]
	0x03A85144 BL 0x3A82610
	0x03A85148 CMP W0, 0x1
	0x03A8514C B.NE 0x3A85198
	0x03A85150 LDR X0, [X19 + 0x2D8]
	0x03A85154 CBZ X0, 0x3A8652C
	0x03A85158 MOV X1, X31
	0x03A8515C BL 0x3A9AD80
	0x03A85160 TBZ X0, 0x0, 0x3A85198
	0x03A85164 LDR X0, [X19 + 0x2D8]
	0x03A85168 CBZ X0, 0x3A8652C
	0x03A8516C LDR X21, [X0 + 0x30]
	0x03A85170 MOV X1, X31
	0x03A85174 BL 0x3A9AD48
	0x03A85178 CBZ X21, 0x3A8652C
	0x03A8517C LDR W8, [X21 + 0x18]
	0x03A85180 CMP W0, W8
	0x03A85184 B.CS 0x3A8653C
	0x03A85188 ADD X25, X21, W0, 0x3, SXTW
	0x03A8518C LDR X8, [X25 + 0x20]!
	0x03A85190 CBZ X8, 0x3A8652C
	0x03A85194 LDR X27, [X8 + 0x58]
	0x03A85198 LDR V0, [X31 + 0x81]
	0x03A8519C LDR V1, [X31 + 0x82]
	0x03A851A0 LDR V2, [X31 + 0x83]
	0x03A851A4 LDR W8, [X31 + 0x840]
	0x03A851A8 ADD X0, X31, 0x680
	0x03A851AC MOV W1, W31
	0x03A851B0 MOV X2, X31
	0x03A851B4 STR V0, [X31 + 0x68]
	0x03A851B8 STR V1, [X31 + 0x69]
	0x03A851BC STR V2, [X31 + 0x6A]
	0x03A851C0 STR W8, [X31 + 0x6B0]
	0x03A851C4 BL 0x3C22520
	0x03A851C8 LDR W8, [X31 + 0x7C]
	0x03A851CC TBNZ X8, 0x0, 0x3A851D8
	0x03A851D0 MOVZ W8, 0x1
	0x03A851D4 STR W8, [X31 + 0x688]
	0x03A851D8 MOV X0, X19
	0x03A851DC BL 0x3A82610
	0x03A851E0 CMP W0, 0x1
	0x03A851E4 B.NE 0x3A8524C
	0x03A851E8 LDR X0, [X19 + 0x2D8]
	0x03A851EC CBZ X0, 0x3A8652C
	0x03A851F0 MOV X1, X31
	0x03A851F4 BL 0x3A9AD80
	0x03A851F8 TBZ X0, 0x0, 0x3A8524C
	0x03A851FC LDR X21, [X19 + 0x2D8]
	0x03A85200 CBZ X21, 0x3A8652C
	0x03A85204 MOV X0, X21
	0x03A85208 MOV X1, X31
	0x03A8520C BL 0x3A9AD48
	0x03A85210 MOV W1, W0
	0x03A85214 MOV X0, X21
	0x03A85218 MOV X2, X31
	0x03A8521C BL 0x3A9AE60
	0x03A85220 B 0x3A85258
	0x03A85224 MOV X0, X19
	0x03A85228 BL 0x3A82610
	0x03A8522C CMP W0, 0x1
	0x03A85230 B.NE 0x3A85408
	0x03A85234 LDR X0, [X19 + 0x2D8]
	0x03A85238 CBZ X0, 0x3A8652C
	0x03A8523C MOV X1, X31
	0x03A85240 BL 0x3A9AD80
	0x03A85244 TBNZ X0, 0x0, 0x3A85130
	0x03A85248 B 0x3A85408
	0x03A8524C LDR W0, [X31 + 0x808]
	0x03A85250 MOV X1, X31
	0x03A85254 BL 0x3A6FD54
	0x03A85258 MOV W1, W0
	0x03A8525C ADD X0, X31, 0x680
	0x03A85260 MOV X2, X31
	0x03A85264 BL 0x3C2240C
	0x03A85268 MOV X0, X19
	0x03A8526C BL 0x3A82610
	0x03A85270 CMP W0, 0x1
	0x03A85274 B.NE 0x3A852F4
	0x03A85278 LDR X0, [X19 + 0x2D8]
	0x03A8527C CBZ X0, 0x3A8652C
	0x03A85280 MOV X1, X31
	0x03A85284 BL 0x3A9AD80
	0x03A85288 TBZ X0, 0x0, 0x3A852F4
	0x03A8528C LDR X21, [X19 + 0x2D8]
	0x03A85290 LDR V0, [X31 + 0x68]
	0x03A85294 LDR V1, [X31 + 0x69]
	0x03A85298 LDR V2, [X31 + 0x6A]
	0x03A8529C LDR W8, [X31 + 0x6B0]
	0x03A852A0 STR V0, [X31 + 0x4B]
	0x03A852A4 STR V1, [X31 + 0x4C]
	0x03A852A8 STR V2, [X31 + 0x4D]
	0x03A852AC STR W8, [X31 + 0x4E0]
	0x03A852B0 CBZ X21, 0x3A8652C
	0x03A852B4 MOV X0, X21
	0x03A852B8 MOV X1, X31
	0x03A852BC BL 0x3A9AD48
	0x03A852C0 LDR V0, [X31 + 0x4B]
	0x03A852C4 LDR V1, [X31 + 0x4C]
	0x03A852C8 LDR V2, [X31 + 0x4D]
	0x03A852CC LDR W8, [X31 + 0x4E0]
	0x03A852D0 MOV W2, W0
	0x03A852D4 ADD X1, X31, 0x340
	0x03A852D8 MOV X0, X21
	0x03A852DC MOV X3, X31
	0x03A852E0 STP V0, V1, [X31 + 0x340]
	0x03A852E4 STR V2, [X31 + 0x36]
	0x03A852E8 STR W8, [X31 + 0x370]
	0x03A852EC BL 0x3A9C42C
	0x03A852F0 B 0x3A85334
	0x03A852F4 ADRP X8, 0x6CF000
	0x03A852F8 LDR X8, [X8 + 0x10]
	0x03A852FC LDR X0, [X8]
	0x03A85300 LDR W8, [X0 + 0xE0]
	0x03A85304 CBNZ W8, 0x3A8530C
	0x03A85308 BL 0x1C16DFC
	0x03A8530C ADD X1, X31, 0x680
	0x03A85310 FMOV S0, W31
	0x03A85314 MOVZ W3, 0x1
	0x03A85318 MOVZ W5, 0x1
	0x03A8531C MOV X0, X25
	0x03A85320 MOV W2, W31
	0x03A85324 MOV W4, W31
	0x03A85328 MOV X6, X27
	0x03A8532C MOV X7, X31
	0x03A85330 BL 0x3A6D184
	0x03A85334 LDR W27, [X31 + 0x8C]
	0x03A85338 LDR X8, [X25]
	0x03A8533C CBZ X8, 0x3A8652C
	0x03A85340 LDR X9, [X8 + 0x48]
	0x03A85344 LDUR V0, [X8 + 0x38]
	0x03A85348 LDUR V1, [X8 + 0x28]
	0x03A8534C LDR X1, [X8 + 0x58]
	0x03A85350 STR X9, [X31 + 0x4D0]
	0x03A85354 STR V0, [X31 + 0x4C]
	0x03A85358 STR V1, [X31 + 0x4B]
	0x03A8535C CBZ X24, 0x3A8652C
	0x03A85360 LDR V0, [X31 + 0x4B]
	0x03A85364 LDR V1, [X31 + 0x4C]
	0x03A85368 LDR X8, [X31 + 0x4D0]
	0x03A8536C ADD X2, X31, 0x310
	0x03A85370 MOV X0, X24
	0x03A85374 MOV X3, X31
	0x03A85378 STP V0, V1, [X31 + 0x310]
	0x03A8537C STR X8, [X31 + 0x330]
	0x03A85380 BL 0x3C4FC28
	0x03A85384 LDR W1, [X31 + 0x808]
	0x03A85388 MOV X0, X24
	0x03A8538C MOV X2, X31
	0x03A85390 BL 0x3A6FC40
	0x03A85394 MOV X0, X19
	0x03A85398 BL 0x3A82610
	0x03A8539C CMP W0, 0x1
	0x03A853A0 B.NE 0x3A853D4
	0x03A853A4 LDR X8, [X25]
	0x03A853A8 CBZ X8, 0x3A8652C
	0x03A853AC LDR X9, [X8 + 0x48]
	0x03A853B0 LDUR V0, [X8 + 0x38]
	0x03A853B4 LDUR V1, [X8 + 0x28]
	0x03A853B8 LDR X1, [X22]
	0x03A853BC ADD X2, X31, 0x2E0
	0x03A853C0 MOV X0, X24
	0x03A853C4 MOV X3, X31
	0x03A853C8 STR X9, [X31 + 0x300]
	0x03A853CC STP V1, V0, [X31 + 0x2E0]
	0x03A853D0 BL 0x3C4FC28
	0x03A853D4 ADRP X8, 0x6CB000
	0x03A853D8 LDR X8, [X8 + 0xC80]
	0x03A853DC LDR X0, [X8]
	0x03A853E0 LDR W8, [X0 + 0xE0]
	0x03A853E4 CBNZ W8, 0x3A853EC
	0x03A853E8 BL 0x1C16DFC
	0x03A853EC ADD X0, X31, 0x848
	0x03A853F0 MOV X1, X24
	0x03A853F4 MOV X2, X31
	0x03A853F8 BL 0x3C58FE4
	0x03A853FC MOV X0, X24
	0x03A85400 MOV X1, X31
	0x03A85404 BL 0x3C4C310
	0x03A85408 LDR X8, [X31 + 0x68]
	0x03A8540C AND W8, W8, W26, 0x0
	0x03A85410 CMP W8, 0x1
	0x03A85414 B.NE 0x3A85698
	0x03A85418 ADRP X22, 0x6D2000
	0x03A8541C LDR X22, [X22 + 0x208]
	0x03A85420 MOV X0, X19
	0x03A85424 LDR X27, [X22]
	0x03A85428 BL 0x3A82610
	0x03A8542C CMP W0, 0x1
	0x03A85430 B.NE 0x3A8546C
	0x03A85434 LDR X0, [X19 + 0x2D8]
	0x03A85438 CBZ X0, 0x3A8652C
	0x03A8543C LDR X21, [X0 + 0x30]
	0x03A85440 MOV X1, X31
	0x03A85444 BL 0x3A9AD24
	0x03A85448 CBZ X21, 0x3A8652C
	0x03A8544C LDR W8, [X21 + 0x18]
	0x03A85450 CMP W0, W8
	0x03A85454 B.CS 0x3A8653C
	0x03A85458 ADD X25, X21, W0, 0x3, SXTW
	0x03A8545C LDR X8, [X25 + 0x20]!
	0x03A85460 CBZ X8, 0x3A8652C
	0x03A85464 LDR X27, [X8 + 0x58]
	0x03A85468 B 0x3A85470
	0x03A8546C ADD X25, X19, 0x2A8
	0x03A85470 LDR V0, [X31 + 0x81]
	0x03A85474 LDR V1, [X31 + 0x82]
	0x03A85478 LDR V2, [X31 + 0x83]
	0x03A8547C LDR W8, [X31 + 0x840]
	0x03A85480 ADD X0, X31, 0x640
	0x03A85484 MOV W1, W31
	0x03A85488 MOV X2, X31
	0x03A8548C STR V0, [X31 + 0x64]
	0x03A85490 STR V1, [X31 + 0x65]
	0x03A85494 STR V2, [X31 + 0x66]
	0x03A85498 STR W8, [X31 + 0x670]
	0x03A8549C BL 0x3C22520
	0x03A854A0 LDRB W8, [X19 + 0x1A5]
	0x03A854A4 LDR W9, [X31 + 0x818]
	0x03A854A8 MOV X0, X19
	0x03A854AC CMP W8, 0x0
	0x03A854B0 CSINC W8, W9, W31, NE
	0x03A854B4 STR W8, [X31 + 0x648]
	0x03A854B8 BL 0x3A82610
	0x03A854BC CMP W0, 0x1
	0x03A854C0 B.NE 0x3A854EC
	0x03A854C4 LDR X21, [X19 + 0x2D8]
	0x03A854C8 CBZ X21, 0x3A8652C
	0x03A854CC MOV X0, X21
	0x03A854D0 MOV X1, X31
	0x03A854D4 BL 0x3A9AD24
	0x03A854D8 MOV W1, W0
	0x03A854DC MOV X0, X21
	0x03A854E0 MOV X2, X31
	0x03A854E4 BL 0x3A9AE60
	0x03A854E8 B 0x3A8550C
	0x03A854EC ADRP X8, 0x6D2000
	0x03A854F0 LDR X8, [X8 + 0x158]
	0x03A854F4 LDR X0, [X8]
	0x03A854F8 LDR W8, [X0 + 0xE0]
	0x03A854FC CBNZ W8, 0x3A85504
	0x03A85500 BL 0x1C16DFC
	0x03A85504 MOV X0, X31
	0x03A85508 BL 0x3AAD524
	0x03A8550C MOV W1, W0
	0x03A85510 ADD X0, X31, 0x640
	0x03A85514 MOV X2, X31
	0x03A85518 BL 0x3C2240C
	0x03A8551C MOV X0, X19
	0x03A85520 BL 0x3A82610
	0x03A85524 CMP W0, 0x1
	0x03A85528 B.NE 0x3A85594
	0x03A8552C LDR X21, [X19 + 0x2D8]
	0x03A85530 LDR V0, [X31 + 0x64]
	0x03A85534 LDR V1, [X31 + 0x65]
	0x03A85538 LDR V2, [X31 + 0x66]
	0x03A8553C LDR W8, [X31 + 0x670]
	0x03A85540 STR V0, [X31 + 0x4B]
	0x03A85544 STR V1, [X31 + 0x4C]
	0x03A85548 STR V2, [X31 + 0x4D]
	0x03A8554C STR W8, [X31 + 0x4E0]
	0x03A85550 CBZ X21, 0x3A8652C
	0x03A85554 MOV X0, X21
	0x03A85558 MOV X1, X31
	0x03A8555C BL 0x3A9AD24
	0x03A85560 LDR V0, [X31 + 0x4B]
	0x03A85564 LDR V1, [X31 + 0x4C]
	0x03A85568 LDR V2, [X31 + 0x4D]
	0x03A8556C LDR W8, [X31 + 0x4E0]
	0x03A85570 MOV W2, W0
	0x03A85574 ADD X1, X31, 0x2A0
	0x03A85578 MOV X0, X21
	0x03A8557C MOV X3, X31
	0x03A85580 STP V0, V1, [X31 + 0x2A0]
	0x03A85584 STR V2, [X31 + 0x2C]
	0x03A85588 STR W8, [X31 + 0x2D0]
	0x03A8558C BL 0x3A9C42C
	0x03A85590 B 0x3A855D4
	0x03A85594 ADRP X8, 0x6CF000
	0x03A85598 LDR X8, [X8 + 0x10]
	0x03A8559C LDR X0, [X8]
	0x03A855A0 LDR W8, [X0 + 0xE0]
	0x03A855A4 CBNZ W8, 0x3A855AC
	0x03A855A8 BL 0x1C16DFC
	0x03A855AC ADD X1, X31, 0x640
	0x03A855B0 FMOV S0, W31
	0x03A855B4 MOVZ W3, 0x1
	0x03A855B8 MOVZ W5, 0x1
	0x03A855BC MOV X0, X25
	0x03A855C0 MOV W2, W31
	0x03A855C4 MOV W4, W31
	0x03A855C8 MOV X6, X27
	0x03A855CC MOV X7, X31
	0x03A855D0 BL 0x3A6D184
	0x03A855D4 LDR W27, [X31 + 0x8C]
	0x03A855D8 LDR X8, [X25]
	0x03A855DC CBZ X8, 0x3A8652C
	0x03A855E0 LDR X9, [X8 + 0x48]
	0x03A855E4 LDUR V0, [X8 + 0x38]
	0x03A855E8 LDUR V1, [X8 + 0x28]
	0x03A855EC LDR X1, [X8 + 0x58]
	0x03A855F0 STR X9, [X31 + 0x4D0]
	0x03A855F4 STR V0, [X31 + 0x4C]
	0x03A855F8 STR V1, [X31 + 0x4B]
	0x03A855FC CBZ X24, 0x3A8652C
	0x03A85600 LDR V0, [X31 + 0x4B]
	0x03A85604 LDR V1, [X31 + 0x4C]
	0x03A85608 LDR X8, [X31 + 0x4D0]
	0x03A8560C ADD X2, X31, 0x270
	0x03A85610 MOV X0, X24
	0x03A85614 MOV X3, X31
	0x03A85618 STP V0, V1, [X31 + 0x270]
	0x03A8561C STR X8, [X31 + 0x290]
	0x03A85620 BL 0x3C4FC28
	0x03A85624 MOV X0, X19
	0x03A85628 BL 0x3A82610
	0x03A8562C CMP W0, 0x1
	0x03A85630 B.NE 0x3A85664
	0x03A85634 LDR X8, [X25]
	0x03A85638 CBZ X8, 0x3A8652C
	0x03A8563C LDR X9, [X8 + 0x48]
	0x03A85640 LDUR V0, [X8 + 0x38]
	0x03A85644 LDUR V1, [X8 + 0x28]
	0x03A85648 LDR X1, [X22]
	0x03A8564C ADD X2, X31, 0x240
	0x03A85650 MOV X0, X24
	0x03A85654 MOV X3, X31
	0x03A85658 STR X9, [X31 + 0x260]
	0x03A8565C STP V1, V0, [X31 + 0x240]
	0x03A85660 BL 0x3C4FC28
	0x03A85664 ADRP X8, 0x6CB000
	0x03A85668 LDR X8, [X8 + 0xC80]
	0x03A8566C LDR X0, [X8]
	0x03A85670 LDR W8, [X0 + 0xE0]
	0x03A85674 CBNZ W8, 0x3A8567C
	0x03A85678 BL 0x1C16DFC
	0x03A8567C ADD X0, X31, 0x848
	0x03A85680 MOV X1, X24
	0x03A85684 MOV X2, X31
	0x03A85688 BL 0x3C58FE4
	0x03A8568C MOV X0, X24
	0x03A85690 MOV X1, X31
	0x03A85694 BL 0x3C4C310
	0x03A85698 MOV W24, W23
	0x03A8569C CBZ W26, 0x3A85874
	0x03A856A0 MOV X0, X19
	0x03A856A4 BL 0x3A82610
	0x03A856A8 LDR X8, [X31 + 0x68]
	0x03A856AC CBZ W8, 0x3A8573C
	0x03A856B0 CMP W0, 0x1
	0x03A856B4 B.NE 0x3A857A0
	0x03A856B8 LDR X0, [X19 + 0x2D8]
	0x03A856BC CBZ X0, 0x3A8652C
	0x03A856C0 MOV X1, X31
	0x03A856C4 BL 0x3A9AD24
	0x03A856C8 LDR X8, [X19 + 0x2D8]
	0x03A856CC CBZ X8, 0x3A8652C
	0x03A856D0 MOV W21, W0
	0x03A856D4 MOV X0, X8
	0x03A856D8 MOV X1, X31
	0x03A856DC BL 0x3A9AD80
	0x03A856E0 LDR X8, [X19 + 0x2D8]
	0x03A856E4 CBZ X8, 0x3A8652C
	0x03A856E8 LDR X22, [X8 + 0x30]
	0x03A856EC CBZ X22, 0x3A8652C
	0x03A856F0 LDR W9, [X22 + 0x18]
	0x03A856F4 CMP W21, W9
	0x03A856F8 B.CS 0x3A8653C
	0x03A856FC ADD X9, X22, W21, 0x3, SXTW
	0x03A85700 MOV W24, W26
	0x03A85704 LDR X27, [X19 + 0x1B8]
	0x03A85708 LDR X25, [X19 + 0x288]
	0x03A8570C LDR X26, [X9 + 0x20]
	0x03A85710 TBZ X0, 0x0, 0x3A857D8
	0x03A85714 MOV X0, X8
	0x03A85718 MOV X1, X31
	0x03A8571C BL 0x3A9AD48
	0x03A85720 LDR W8, [X22 + 0x18]
	0x03A85724 CMP W0, W8
	0x03A85728 B.CS 0x3A8653C
	0x03A8572C CBZ X27, 0x3A8652C
	0x03A85730 ADD X8, X22, W0, 0x3, SXTW
	0x03A85734 LDR X3, [X8 + 0x20]
	0x03A85738 B 0x3A857E8
	0x03A8573C CMP W0, 0x1
	0x03A85740 B.EQ 0x3A85874
	0x03A85744 LDR X0, [X19 + 0x1B0]
	0x03A85748 LDR V0, [X31 + 0x81]
	0x03A8574C LDR V1, [X31 + 0x82]
	0x03A85750 LDR V2, [X31 + 0x83]
	0x03A85754 LDR W8, [X31 + 0x840]
	0x03A85758 STR V0, [X31 + 0x4B]
	0x03A8575C STR V1, [X31 + 0x4C]
	0x03A85760 STR V2, [X31 + 0x4D]
	0x03A85764 STR W8, [X31 + 0x4E0]
	0x03A85768 CBZ X0, 0x3A8652C
	0x03A8576C LDR X2, [X19 + 0x2A0]
	0x03A85770 LDR V0, [X31 + 0x4B]
	0x03A85774 LDR V1, [X31 + 0x4C]
	0x03A85778 LDR V2, [X31 + 0x4D]
	0x03A8577C LDR W8, [X31 + 0x4E0]
	0x03A85780 ADD X1, X31, 0x200
	0x03A85784 MOV X3, X31
	0x03A85788 STP V0, V1, [X31 + 0x200]
	0x03A8578C STR V2, [X31 + 0x22]
	0x03A85790 STR W8, [X31 + 0x230]
	0x03A85794 BL 0x3AAE540
	0x03A85798 LDR X1, [X19 + 0x1B0]
	0x03A8579C B 0x3A85868
	0x03A857A0 LDR X0, [X19 + 0x1B8]
	0x03A857A4 LDR X1, [X19 + 0x2A0]
	0x03A857A8 LDR X2, [X19 + 0x2A8]
	0x03A857AC LDR W8, [X31 + 0x30]
	0x03A857B0 CBZ W8, 0x3A857C8
	0x03A857B4 CBZ X0, 0x3A8652C
	0x03A857B8 LDR X3, [X19 + 0x2B0]
	0x03A857BC MOV X4, X31
	0x03A857C0 BL 0x3AAD5C8
	0x03A857C4 B 0x3A85864
	0x03A857C8 CBZ X0, 0x3A8652C
	0x03A857CC MOV X3, X31
	0x03A857D0 BL 0x3AAD5BC
	0x03A857D4 B 0x3A85864
	0x03A857D8 LDR W8, [X31 + 0x30]
	0x03A857DC CBZ W8, 0x3A85800
	0x03A857E0 CBZ X27, 0x3A8652C
	0x03A857E4 LDR X3, [X19 + 0x2B0]
	0x03A857E8 MOV X0, X27
	0x03A857EC MOV X1, X25
	0x03A857F0 MOV X2, X26
	0x03A857F4 MOV X4, X31
	0x03A857F8 BL 0x3AAD5C8
	0x03A857FC B 0x3A85818
	0x03A85800 CBZ X27, 0x3A8652C
	0x03A85804 MOV X0, X27
	0x03A85808 MOV X1, X25
	0x03A8580C MOV X2, X26
	0x03A85810 MOV X3, X31
	0x03A85814 BL 0x3AAD5BC
	0x03A85818 LDR X8, [X31 + 0x58]
	0x03A8581C ADRP X22, 0x6CE000
	0x03A85820 LDR X22, [X22 + 0xFF8]
	0x03A85824 LDR W27, [X31 + 0x8C]
	0x03A85828 SUB W8, W8, 0xDC
	0x03A8582C CMP W8, 0x1E
	0x03A85830 MOV W26, W24
	0x03A85834 MOV W24, W23
	0x03A85838 B.HI 0x3A85864
	0x03A8583C LDR X0, [X22]
	0x03A85840 LDR X21, [X19 + 0x1B8]
	0x03A85844 LDR W8, [X0 + 0xE0]
	0x03A85848 CBNZ W8, 0x3A85850
	0x03A8584C BL 0x1C16DFC
	0x03A85850 CBZ X21, 0x3A8652C
	0x03A85854 LDR X8, [X22]
	0x03A85858 LDR X8, [X8 + 0xB8]
	0x03A8585C LDR X8, [X8]
	0x03A85860 STR X8, [X21 + 0xE0]
	0x03A85864 LDR X1, [X19 + 0x1B8]
	0x03A85868 MOV X0, X19
	0x03A8586C MOV X2, X31
	0x03A85870 BL 0x3A4E96C
	0x03A85874 LDRB W8, [X19 + 0x1A5]
	0x03A85878 LDR X23, [X31 + 0x48]
	0x03A8587C CBZ W8, 0x3A858A8
	0x03A85880 LDR X0, [X19 + 0x1C0]
	0x03A85884 CBZ X0, 0x3A8652C
	0x03A85888 LDR X2, [X19 + 0x2A0]
	0x03A8588C LDR X1, [X19 + 0x288]
	0x03A85890 MOV X3, X31
	0x03A85894 BL 0x3AABA34
	0x03A85898 LDR X1, [X19 + 0x1C0]
	0x03A8589C MOV X0, X19
	0x03A858A0 MOV X2, X31
	0x03A858A4 BL 0x3A4E96C
	0x03A858A8 LDR W8, [X31 + 0x44]
	0x03A858AC TBZ X8, 0x0, 0x3A85948
	0x03A858B0 LDR X0, [X19 + 0x348]
	0x03A858B4 CBZ X0, 0x3A8652C
	0x03A858B8 ADD X1, X20, 0x2A0
	0x03A858BC ADD X2, X31, 0x600
	0x03A858C0 ADD X3, X31, 0x5FC
	0x03A858C4 MOV X4, X31
	0x03A858C8 BL 0x3AA88B0
	0x03A858CC ADRP X8, 0x6CF000
	0x03A858D0 LDR X8, [X8 + 0x10]
	0x03A858D4 LDR W21, [X31 + 0x5FC]
	0x03A858D8 ADD X25, X19, 0x368
	0x03A858DC LDR X0, [X8]
	0x03A858E0 LDR W8, [X0 + 0xE0]
	0x03A858E4 CBNZ W8, 0x3A858EC
	0x03A858E8 BL 0x1C16DFC
	0x03A858EC ADRP X8, 0x6CF000
	0x03A858F0 LDR X8, [X8 + 0x988]
	0x03A858F4 ADD X1, X31, 0x600
	0x03A858F8 FMOV S0, W31
	0x03A858FC MOVZ W3, 0x1
	0x03A85900 LDR X6, [X8]
	0x03A85904 MOV X0, X25
	0x03A85908 MOV W2, W21
	0x03A8590C MOV W4, W31
	0x03A85910 MOV W5, W31
	0x03A85914 MOV X7, X31
	0x03A85918 BL 0x3A6D184
	0x03A8591C LDR X0, [X19 + 0x348]
	0x03A85920 LDR X8, [X19 + 0x368]
	0x03A85924 STR X8, [X31 + 0x5F0]
	0x03A85928 CBZ X0, 0x3A8652C
	0x03A8592C ADD X1, X31, 0x5F0
	0x03A85930 MOV X2, X31
	0x03A85934 BL 0x3AA88A4
	0x03A85938 LDR X1, [X19 + 0x348]
	0x03A8593C MOV X0, X19
	0x03A85940 MOV X2, X31
	0x03A85944 BL 0x3A4E96C
	0x03A85948 LDR X0, [X20 + 0x190]
	0x03A8594C CBZ X0, 0x3A8652C
	0x03A85950 MOV X1, X31
	0x03A85954 BL 0x398892C
	0x03A85958 TBZ X0, 0x0, 0x3A8596C
	0x03A8595C LDR X1, [X19 + 0x250]
	0x03A85960 MOV X0, X19
	0x03A85964 MOV X2, X31
	0x03A85968 BL 0x3A4E96C
	0x03A8596C LDRB W25, [X20 + 0x1D8]
	0x03A85970 MOV X0, X19
	0x03A85974 BL 0x3A82610
	0x03A85978 CMP W0, 0x1
	0x03A8597C STR W25, [X31 + 0x70]
	0x03A85980 B.NE 0x3A859DC
	0x03A85984 LDR X0, [X19 + 0x2D8]
	0x03A85988 CBZ X0, 0x3A8652C
	0x03A8598C LDRB W8, [X0 + 0x15]
	0x03A85990 LDR X28, [X31 + 0x80]
	0x03A85994 CBZ W8, 0x3A859B4
	0x03A85998 LDR X8, [X31 + 0x58]
	0x03A8599C CMP W8, 0xDC
	0x03A859A0 B.EQ 0x3A859AC
	0x03A859A4 LDRB W8, [X19 + 0x1A4]
	0x03A859A8 CBNZ W8, 0x3A859B4
	0x03A859AC MOV X1, X31
	0x03A859B0 BL 0x3A9C384
	0x03A859B4 LDR W8, [X31 + 0x64]
	0x03A859B8 LDR W4, [X31 + 0x30]
	0x03A859BC MOV X0, X19
	0x03A859C0 MOV X1, X20
	0x03A859C4 AND W6, W8, 0x1
	0x03A859C8 MOV W2, W26
	0x03A859CC LDR X3, [X31 + 0x68]
	0x03A859D0 MOV W5, W31
	0x03A859D4 BL 0x3A86F10
	0x03A859D8 B 0x3A85C14
	0x03A859DC LDR W8, [X31 + 0x818]
	0x03A859E0 CMP W25, 0x0
	0x03A859E4 CSET W10, EQ
	0x03A859E8 CMP W27, 0x0
	0x03A859EC MOVZ W9, 0x2
	0x03A859F0 CSET W11, NE
	0x03A859F4 CMP W24, 0x0
	0x03A859F8 CSEL W9, W9, W31, NE
	0x03A859FC CMP W8, 0x2
	0x03A85A00 LDR X0, [X20 + 0x190]
	0x03A85A04 ORR W8, W24, W11, 0x0
	0x03A85A08 ORR W8, W8, W10, 0x0
	0x03A85A0C CSEL W27, W31, W9, LT
	0x03A85A10 CMP W8, 0x0
	0x03A85A14 MOVZ W8, 0x3
	0x03A85A18 MOV W22, W26
	0x03A85A1C CSEL W26, W31, W8, NE
	0x03A85A20 CBZ X0, 0x3A8652C
	0x03A85A24 MOV X1, X31
	0x03A85A28 BL 0x3984C98
	0x03A85A2C TBZ X0, 0x0, 0x3A85A44
	0x03A85A30 LDR X8, [X20 + 0x190]
	0x03A85A34 CBZ X8, 0x3A8652C
	0x03A85A38 LDRB W8, [X8 + 0x20]
	0x03A85A3C CMP W8, 0x0
	0x03A85A40 CSEL W26, W26, W31, EQ
	0x03A85A44 LDR W8, [X31 + 0x818]
	0x03A85A48 CMP W8, 0x2
	0x03A85A4C B.LT 0x3A85AB0
	0x03A85A50 LDR W8, [X31 + 0x8C]
	0x03A85A54 CBZ W8, 0x3A85AB0
	0x03A85A58 ADRP X8, 0x6CF000
	0x03A85A5C LDR X8, [X8 + 0x10]
	0x03A85A60 LDR X0, [X8]
	0x03A85A64 LDR W8, [X0 + 0xE0]
	0x03A85A68 CBNZ W8, 0x3A85A70
	0x03A85A6C BL 0x1C16DFC
	0x03A85A70 MOV X0, X31
	0x03A85A74 BL 0x3A71E5C
	0x03A85A78 TBZ X0, 0x0, 0x3A85AB0
	0x03A85A7C LDR X8, [X19 + 0x218]
	0x03A85A80 CBZ X8, 0x3A8652C
	0x03A85A84 LDR W8, [X8 + 0x10]
	0x03A85A88 CMP W8, 0x1F4
	0x03A85A8C CSET W8, NE
	0x03A85A90 ORR W8, W24, W8, 0x0
	0x03A85A94 TBNZ X8, 0x0, 0x3A85AB0
	0x03A85A98 CBZ W26, 0x3A85AAC
	0x03A85A9C CMP W26, 0x3
	0x03A85AA0 B.NE 0x3A85AB0
	0x03A85AA4 MOVZ W26, 0x1
	0x03A85AA8 B 0x3A85AB0
	0x03A85AAC MOVZ W26, 0x2
	0x03A85AB0 LDR W8, [X31 + 0x7C]
	0x03A85AB4 CBZ W8, 0x3A85ADC
	0x03A85AB8 LDR X25, [X19 + 0x208]
	0x03A85ABC CBZ X25, 0x3A8652C
	0x03A85AC0 LDR X3, [X19 + 0x288]
	0x03A85AC4 LDR X2, [X19 + 0x2B0]
	0x03A85AC8 LDR X1, [X19 + 0x278]
	0x03A85ACC MOV X0, X25
	0x03A85AD0 MOV X4, X31
	0x03A85AD4 BL 0x3AAEF8C
	0x03A85AD8 B 0x3A85AE0
	0x03A85ADC LDR X25, [X19 + 0x200]
	0x03A85AE0 CBZ X25, 0x3A8652C
	0x03A85AE4 MOV X0, X25
	0x03A85AE8 MOV W1, W27
	0x03A85AEC MOV W2, W31
	0x03A85AF0 MOV X3, X31
	0x03A85AF4 BL 0x3A43BB4
	0x03A85AF8 MOV X0, X25
	0x03A85AFC MOV W1, W26
	0x03A85B00 MOV X2, X31
	0x03A85B04 BL 0x3A43CEC
	0x03A85B08 ADRP X21, 0x6D2000
	0x03A85B0C LDR X21, [X21 + 0x1E8]
	0x03A85B10 LDR X26, [X19 + 0x100]
	0x03A85B14 LDR X0, [X21]
	0x03A85B18 LDR W8, [X0 + 0xE0]
	0x03A85B1C CBNZ W8, 0x3A85B28
	0x03A85B20 BL 0x1C16DFC
	0x03A85B24 LDR X0, [X21]
	0x03A85B28 LDR X8, [X0 + 0xB8]
	0x03A85B2C LDR W27, [X31 + 0x8C]
	0x03A85B30 LDR X21, [X8 + 0x10]
	0x03A85B34 CBNZ X21, 0x3A85BA0
	0x03A85B38 LDR W8, [X0 + 0xE0]
	0x03A85B3C CBZ W8, 0x3A85B4C
	0x03A85B40 ADRP X28, 0x6D2000
	0x03A85B44 LDR X28, [X28 + 0x1E8]
	0x03A85B48 B 0x3A85B5C
	0x03A85B4C BL 0x1C16DFC
	0x03A85B50 ADRP X28, 0x6D2000
	0x03A85B54 LDR X28, [X28 + 0x1E8]
	0x03A85B58 LDR X0, [X28]
	0x03A85B5C ADRP X9, 0x6CF000
	0x03A85B60 LDR X8, [X0 + 0xB8]
	0x03A85B64 LDR X9, [X9 + 0x960]
	0x03A85B68 LDR X27, [X8]
	0x03A85B6C LDR X0, [X9]
	0x03A85B70 BL 0x1C16F10
	0x03A85B74 ADRP X8, 0x6D2000
	0x03A85B78 LDR X8, [X8 + 0x1E0]
	0x03A85B7C MOV X1, X27
	0x03A85B80 MOV X3, X31
	0x03A85B84 MOV X21, X0
	0x03A85B88 LDR X2, [X8]
	0x03A85B8C BL 0x24AD1FC
	0x03A85B90 LDR X8, [X28]
	0x03A85B94 LDR W27, [X31 + 0x8C]
	0x03A85B98 LDR X8, [X8 + 0xB8]
	0x03A85B9C STR X21, [X8 + 0x10]
	0x03A85BA0 CBZ X26, 0x3A8652C
	0x03A85BA4 ADRP X8, 0x6CF000
	0x03A85BA8 LDR X8, [X8 + 0x950]
	0x03A85BAC MOV X0, X26
	0x03A85BB0 MOV X1, X21
	0x03A85BB4 LDR X2, [X8]
	0x03A85BB8 BL 0x301C5F0
	0x03A85BBC LDR X28, [X31 + 0x80]
	0x03A85BC0 CBNZ X0, 0x3A85BCC
	0x03A85BC4 LDR W8, [X20 + 0xE0]
	0x03A85BC8 CBZ W8, 0x3A86524
	0x03A85BCC MOV W21, W31
	0x03A85BD0 MOV X0, X31
	0x03A85BD4 MOV W26, W22
	0x03A85BD8 BL 0x3C3C2DC
	0x03A85BDC TBZ X0, 0x0, 0x3A85C00
	0x03A85BE0 FMOV S0, W31
	0x03A85BE4 FMOV S1, W31
	0x03A85BE8 FMOV S2, W31
	0x03A85BEC FMOV S3, 1
	0x03A85BF0 MOV X0, X25
	0x03A85BF4 MOV W1, W21
	0x03A85BF8 MOV X2, X31
	0x03A85BFC BL 0x3A44510
	0x03A85C00 MOV X0, X19
	0x03A85C04 MOV X1, X25
	0x03A85C08 MOV X2, X31
	0x03A85C0C BL 0x3A4E96C
	0x03A85C10 LDR W25, [X31 + 0x70]
	0x03A85C14 CBZ X23, 0x3A8652C
	0x03A85C18 MOV X0, X23
	0x03A85C1C MOV X1, X31
	0x03A85C20 BL 0x3C03C44
	0x03A85C24 CMP W0, 0x1
	0x03A85C28 B.NE 0x3A85CE0
	0x03A85C2C LDR W8, [X20 + 0xE0]
	0x03A85C30 CMP W8, 0x1
	0x03A85C34 B.EQ 0x3A85CE0
	0x03A85C38 MOV X0, X31
	0x03A85C3C BL 0x3C13CE4
	0x03A85C40 ADRP X22, 0x66E000
	0x03A85C44 LDR X22, [X22 + 0x598]
	0x03A85C48 MOV X21, X0
	0x03A85C4C LDR X8, [X22]
	0x03A85C50 LDR W9, [X8 + 0xE0]
	0x03A85C54 CBNZ W9, 0x3A85C60
	0x03A85C58 MOV X0, X8
	0x03A85C5C BL 0x1C16DFC
	0x03A85C60 MOV X0, X21
	0x03A85C64 MOV X1, X31
	0x03A85C68 MOV X2, X31
	0x03A85C6C BL 0x3C354F8
	0x03A85C70 TBZ X0, 0x0, 0x3A85C88
	0x03A85C74 LDR X1, [X19 + 0x210]
	0x03A85C78 MOV X0, X19
	0x03A85C7C MOV X2, X31
	0x03A85C80 BL 0x3A4E96C
	0x03A85C84 B 0x3A85CE0
	0x03A85C88 ADRP X8, 0x6D2000
	0x03A85C8C LDR X8, [X8 + 0x1D0]
	0x03A85C90 ADD X1, X31, 0x5E8
	0x03A85C94 MOV X0, X23
	0x03A85C98 LDR X2, [X8]
	0x03A85C9C BL 0x21A4990
	0x03A85CA0 TBZ X0, 0x0, 0x3A85CE0
	0x03A85CA4 LDR X0, [X31 + 0x5E8]
	0x03A85CA8 CBZ X0, 0x3A8652C
	0x03A85CAC MOV X1, X31
	0x03A85CB0 BL 0x3C16CC4
	0x03A85CB4 LDR X8, [X22]
	0x03A85CB8 MOV X21, X0
	0x03A85CBC LDR W9, [X8 + 0xE0]
	0x03A85CC0 CBNZ W9, 0x3A85CCC
	0x03A85CC4 MOV X0, X8
	0x03A85CC8 BL 0x1C16DFC
	0x03A85CCC MOV X0, X21
	0x03A85CD0 MOV X1, X31
	0x03A85CD4 MOV X2, X31
	0x03A85CD8 BL 0x3C354F8
	0x03A85CDC TBNZ X0, 0x0, 0x3A85C74
	0x03A85CE0 CBZ W27, 0x3A85D2C
	0x03A85CE4 MOV X0, X19
	0x03A85CE8 BL 0x3A82610
	0x03A85CEC CMP W0, 0x1
	0x03A85CF0 B.NE 0x3A85D00
	0x03A85CF4 TBNZ X28, 0x0, 0x3A85D00
	0x03A85CF8 LDRB W8, [X19 + 0x1A4]
	0x03A85CFC CBNZ W8, 0x3A85D7C
	0x03A85D00 LDR X0, [X19 + 0x218]
	0x03A85D04 CBZ X0, 0x3A8652C
	0x03A85D08 LDR X2, [X19 + 0x2A0]
	0x03A85D0C LDR X1, [X19 + 0x288]
	0x03A85D10 MOV X3, X31
	0x03A85D14 BL 0x3AABA34
	0x03A85D18 LDR X1, [X19 + 0x218]
	0x03A85D1C MOV X0, X19
	0x03A85D20 MOV X2, X31
	0x03A85D24 BL 0x3A4E96C
	0x03A85D28 B 0x3A85D7C
	0x03A85D2C LDR W8, [X20 + 0xE0]
	0x03A85D30 CMP W8, 0x0
	0x03A85D34 CSET W8, NE
	0x03A85D38 ORR W8, W26, W8, 0x0
	0x03A85D3C TBNZ X8, 0x0, 0x3A85D7C
	0x03A85D40 MOV X0, X31
	0x03A85D44 BL 0x3C3BEDC
	0x03A85D48 ADRP X8, 0x6D1000
	0x03A85D4C LDR X8, [X8 + 0xFD8]
	0x03A85D50 LDR X21, [X8]
	0x03A85D54 TBZ X0, 0x0, 0x3A85D64
	0x03A85D58 MOV X0, X31
	0x03A85D5C BL 0x3C1B398
	0x03A85D60 B 0x3A85D6C
	0x03A85D64 MOV X0, X31
	0x03A85D68 BL 0x3C1B370
	0x03A85D6C MOV X1, X0
	0x03A85D70 MOV X0, X21
	0x03A85D74 MOV X2, X31
	0x03A85D78 BL 0x3C14320
	0x03A85D7C CBZ W24, 0x3A85E58
	0x03A85D80 ADRP X8, 0x697000
	0x03A85D84 LDR X8, [X8 + 0x8A8]
	0x03A85D88 LDR X0, [X8]
	0x03A85D8C LDR W8, [X0 + 0xE0]
	0x03A85D90 CBNZ W8, 0x3A85D98
	0x03A85D94 BL 0x1C16DFC
	0x03A85D98 MOV X0, X31
	0x03A85D9C BL 0x3A8AB60
	0x03A85DA0 CBZ X0, 0x3A8652C
	0x03A85DA4 LDR W22, [X0 + 0x50]
	0x03A85DA8 LDR V0, [X31 + 0x81]
	0x03A85DAC LDR V1, [X31 + 0x82]
	0x03A85DB0 LDR V2, [X31 + 0x83]
	0x03A85DB4 LDR W8, [X31 + 0x840]
	0x03A85DB8 ADD X1, X31, 0x5B0
	0x03A85DBC ADD X2, X31, 0x5AC
	0x03A85DC0 MOV W0, W22
	0x03A85DC4 MOV X3, X31
	0x03A85DC8 STR V0, [X31 + 0x5B]
	0x03A85DCC STR V1, [X31 + 0x5C]
	0x03A85DD0 STR V2, [X31 + 0x5D]
	0x03A85DD4 STR W8, [X31 + 0x5E0]
	0x03A85DD8 BL 0x3AAA6B0
	0x03A85DDC ADRP X8, 0x6CF000
	0x03A85DE0 LDR X8, [X8 + 0x10]
	0x03A85DE4 LDR W21, [X31 + 0x5AC]
	0x03A85DE8 ADD X24, X19, 0x2B8
	0x03A85DEC LDR X0, [X8]
	0x03A85DF0 LDR W8, [X0 + 0xE0]
	0x03A85DF4 CBNZ W8, 0x3A85DFC
	0x03A85DF8 BL 0x1C16DFC
	0x03A85DFC ADRP X8, 0x6D2000
	0x03A85E00 LDR X8, [X8 + 0x200]
	0x03A85E04 ADD X1, X31, 0x5B0
	0x03A85E08 FMOV S0, W31
	0x03A85E0C MOVZ W3, 0x1
	0x03A85E10 LDR X6, [X8]
	0x03A85E14 MOVZ W5, 0x1
	0x03A85E18 MOV X0, X24
	0x03A85E1C MOV W2, W21
	0x03A85E20 MOV W4, W31
	0x03A85E24 MOV X7, X31
	0x03A85E28 BL 0x3A6D184
	0x03A85E2C LDR X0, [X19 + 0x220]
	0x03A85E30 CBZ X0, 0x3A8652C
	0x03A85E34 LDR X2, [X19 + 0x2B8]
	0x03A85E38 LDR X1, [X19 + 0x278]
	0x03A85E3C MOV W3, W22
	0x03A85E40 MOV X4, X31
	0x03A85E44 BL 0x3AAA824
	0x03A85E48 LDR X1, [X19 + 0x220]
	0x03A85E4C MOV X0, X19
	0x03A85E50 MOV X2, X31
	0x03A85E54 BL 0x3A4E96C
	0x03A85E58 TBZ X28, 0x0, 0x3A85F7C
	0x03A85E5C LDR V0, [X31 + 0x81]
	0x03A85E60 LDR V1, [X31 + 0x82]
	0x03A85E64 LDR V2, [X31 + 0x83]
	0x03A85E68 LDR W8, [X31 + 0x840]
	0x03A85E6C ADD X0, X31, 0x570
	0x03A85E70 MOVZ W1, 0x2E
	0x03A85E74 MOV X2, X31
	0x03A85E78 STR V0, [X31 + 0x57]
	0x03A85E7C STR V1, [X31 + 0x58]
	0x03A85E80 STR V2, [X31 + 0x59]
	0x03A85E84 STR W8, [X31 + 0x5A0]
	0x03A85E88 BL 0x3C2240C
	0x03A85E8C ADD X0, X31, 0x570
	0x03A85E90 MOV W1, W31
	0x03A85E94 MOV X2, X31
	0x03A85E98 BL 0x3C22520
	0x03A85E9C ADRP X8, 0x6CF000
	0x03A85EA0 LDR X8, [X8 + 0x10]
	0x03A85EA4 MOVZ W22, 0x1
	0x03A85EA8 STR W22, [X31 + 0x578]
	0x03A85EAC ADD X21, X19, 0x2C0
	0x03A85EB0 LDR X0, [X8]
	0x03A85EB4 LDR W8, [X0 + 0xE0]
	0x03A85EB8 CBNZ W8, 0x3A85EC0
	0x03A85EBC BL 0x1C16DFC
	0x03A85EC0 ADRP X8, 0x6D1000
	0x03A85EC4 LDR X8, [X8 + 0x540]
	0x03A85EC8 ADD X1, X31, 0x570
	0x03A85ECC FMOV S0, W31
	0x03A85ED0 MOVZ W3, 0x1
	0x03A85ED4 LDR X6, [X8]
	0x03A85ED8 MOVZ W5, 0x1
	0x03A85EDC MOV X0, X21
	0x03A85EE0 MOV W2, W31
	0x03A85EE4 MOV W4, W31
	0x03A85EE8 MOV X7, X31
	0x03A85EEC BL 0x3A6D184
	0x03A85EF0 LDR V0, [X31 + 0x81]
	0x03A85EF4 LDR V1, [X31 + 0x82]
	0x03A85EF8 LDR V2, [X31 + 0x83]
	0x03A85EFC LDR W8, [X31 + 0x840]
	0x03A85F00 ADD X0, X31, 0x530
	0x03A85F04 MOV W1, W31
	0x03A85F08 MOV X2, X31
	0x03A85F0C STR V0, [X31 + 0x53]
	0x03A85F10 STR V1, [X31 + 0x54]
	0x03A85F14 STR V2, [X31 + 0x55]
	0x03A85F18 STR W8, [X31 + 0x560]
	0x03A85F1C BL 0x3C2240C
	0x03A85F20 ADRP X8, 0x6D2000
	0x03A85F24 LDR X8, [X8 + 0x1F8]
	0x03A85F28 ADD X0, X19, 0x2C8
	0x03A85F2C ADD X1, X31, 0x530
	0x03A85F30 FMOV S0, W31
	0x03A85F34 LDR X6, [X8]
	0x03A85F38 MOVZ W3, 0x1
	0x03A85F3C MOVZ W5, 0x1
	0x03A85F40 MOV W2, W31
	0x03A85F44 MOV W4, W31
	0x03A85F48 MOV X7, X31
	0x03A85F4C STR W22, [X31 + 0x538]
	0x03A85F50 BL 0x3A6D184
	0x03A85F54 LDR X0, [X19 + 0x1C8]
	0x03A85F58 CBZ X0, 0x3A8652C
	0x03A85F5C LDR X2, [X19 + 0x2C8]
	0x03A85F60 LDR X1, [X19 + 0x2C0]
	0x03A85F64 MOV X3, X31
	0x03A85F68 BL 0x3A5DD0C
	0x03A85F6C LDR X1, [X19 + 0x1C8]
	0x03A85F70 MOV X0, X19
	0x03A85F74 MOV X2, X31
	0x03A85F78 BL 0x3A4E96C
	0x03A85F7C LDR W8, [X31 + 0x38]
	0x03A85F80 TBZ X8, 0x0, 0x3A85F94
	0x03A85F84 LDR X1, [X19 + 0x228]
	0x03A85F88 MOV X0, X19
	0x03A85F8C MOV X2, X31
	0x03A85F90 BL 0x3A4E96C
	0x03A85F94 LDR W8, [X31 + 0x818]
	0x03A85F98 MOVZ W9, 0x3
	0x03A85F9C CMP W8, 0x1
	0x03A85FA0 CSET W21, GT
	0x03A85FA4 CMP W25, 0x0
	0x03A85FA8 CSEL W22, W31, W9, EQ
	0x03A85FAC CBZ W27, 0x3A85FF8
	0x03A85FB0 LDR X9, [X19 + 0x218]
	0x03A85FB4 CBZ X9, 0x3A8652C
	0x03A85FB8 LDR W9, [X9 + 0x10]
	0x03A85FBC CMP W9, 0x1F4
	0x03A85FC0 B.LT 0x3A85FF8
	0x03A85FC4 CMP W8, 0x2
	0x03A85FC8 B.GE 0x3A85FD4
	0x03A85FCC MOV W22, W31
	0x03A85FD0 B 0x3A85FF8
	0x03A85FD4 ADRP X8, 0x6CF000
	0x03A85FD8 LDR X8, [X8 + 0x10]
	0x03A85FDC LDR X0, [X8]
	0x03A85FE0 LDR W8, [X0 + 0xE0]
	0x03A85FE4 CBNZ W8, 0x3A85FEC
	0x03A85FE8 BL 0x1C16DFC
	0x03A85FEC MOV X0, X31
	0x03A85FF0 BL 0x3A71E5C
	0x03A85FF4 AND W22, W0, 0x1
	0x03A85FF8 LDR X0, [X19 + 0x230]
	0x03A85FFC CBZ X0, 0x3A8652C
	0x03A86000 AND W1, W21, W25, 0x0
	0x03A86004 MOV W2, W31
	0x03A86008 MOV X3, X31
	0x03A8600C BL 0x3A43BB4
	0x03A86010 LDR X0, [X19 + 0x230]
	0x03A86014 CBZ X0, 0x3A8652C
	0x03A86018 MOV W1, W22
	0x03A8601C MOV X2, X31
	0x03A86020 BL 0x3A43CEC
	0x03A86024 LDR X1, [X19 + 0x230]
	0x03A86028 MOV X0, X19
	0x03A8602C MOV X2, X31
	0x03A86030 BL 0x3A4E96C
	0x03A86034 LDR X1, [X19 + 0x238]
	0x03A86038 MOV X0, X19
	0x03A8603C MOV X2, X31
	0x03A86040 BL 0x3A4E96C
	0x03A86044 MOV X0, X29
	0x03A86048 MOV X1, X31
	0x03A8604C BL 0x3A934DC
	0x03A86050 MOV W23, W0
	0x03A86054 MOV X0, X29
	0x03A86058 MOV X1, X31
	0x03A8605C BL 0x3A9006C
	0x03A86060 LDR W21, [X31 + 0x60]
	0x03A86064 LDR W22, [X31 + 0x34]
	0x03A86068 MOV W24, W0
	0x03A8606C TBZ X23, 0x0, 0x3A8609C
	0x03A86070 TBZ X24, 0x0, 0x3A8609C
	0x03A86074 LDR X0, [X19 + 0x260]
	0x03A86078 CBZ X0, 0x3A8652C
	0x03A8607C MOVZ W2, 0x18
	0x03A86080 MOV X1, X29
	0x03A86084 MOV X3, X31
	0x03A86088 BL 0x3A5B468
	0x03A8608C LDR X1, [X19 + 0x260]
	0x03A86090 MOV X0, X19
	0x03A86094 MOV X2, X31
	0x03A86098 BL 0x3A4E96C
	0x03A8609C LDR X8, [X20 + 0x1A8]
	0x03A860A0 CMP X8, 0x0
	0x03A860A4 CSET W8, NE
	0x03A860A8 ANDS W31, W22, W25, 0x0
	0x03A860AC AND W26, W8, W25, 0x0
	0x03A860B0 B.EQ 0x3A860FC
	0x03A860B4 LDR W8, [X20 + 0x1C4]
	0x03A860B8 CMP W8, 0x1
	0x03A860BC B.EQ 0x3A860D4
	0x03A860C0 LDR W8, [X20 + 0x168]
	0x03A860C4 CMP W8, 0x1
	0x03A860C8 B.NE 0x3A860DC
	0x03A860CC LDR W8, [X20 + 0x16C]
	0x03A860D0 CBZ W8, 0x3A860DC
	0x03A860D4 MOVZ W25, 0x1
	0x03A860D8 B 0x3A86100
	0x03A860DC MOV X0, X29
	0x03A860E0 MOV X1, X31
	0x03A860E4 BL 0x3A8F3D4
	0x03A860E8 TBZ X0, 0x0, 0x3A860FC
	0x03A860EC LDR V0, [X20 + 0x214]
	0x03A860F0 FCMP S0, 0x0
	0x03A860F4 CSET W25, GT
	0x03A860F8 B 0x3A86100
	0x03A860FC MOV W25, W31
	0x03A86100 LDR X8, [X31 + 0x50]
	0x03A86104 LDR X0, [X19 + 0xE0]
	0x03A86108 CMP W26, 0x0
	0x03A8610C CCMP X8, 0x0, 0x0, EQ
	0x03A86110 EOR W8, W25, 0x1
	0x03A86114 CSEL W28, W8, W31, EQ
	0x03A86118 CBZ X0, 0x3A86134
	0x03A8611C MOV X1, X29
	0x03A86120 MOV X2, X31
	0x03A86124 BL 0x3A35A2C
	0x03A86128 ORN W8, W31, W0, 0x0
	0x03A8612C AND W8, W8, 0x1
	0x03A86130 B 0x3A86138
	0x03A86134 MOVZ W8, 0x1
	0x03A86138 ADD X27, X19, 0x278
	0x03A8613C ADD X22, X19, 0x288
	0x03A86140 STR W8, [X31 + 0x8C]
	0x03A86144 CBZ W21, 0x3A862DC
	0x03A86148 LDR V0, [X31 + 0x81]
	0x03A8614C LDR V1, [X31 + 0x82]
	0x03A86150 LDR V2, [X31 + 0x83]
	0x03A86154 LDR W8, [X31 + 0x840]
	0x03A86158 STR W23, [X31 + 0x7C]
	0x03A8615C MOV X23, X29
	0x03A86160 LDR W29, [X31 + 0x810]
	0x03A86164 LDR W21, [X31 + 0x814]
	0x03A86168 ADD X0, X31, 0x810
	0x03A8616C MOV X1, X31
	0x03A86170 STR X27, [X31 + 0x80]
	0x03A86174 STR W26, [X31 + 0x68]
	0x03A86178 MOV X26, X22
	0x03A8617C MOV W27, W24
	0x03A86180 ADD X22, X31, 0x1C8
	0x03A86184 STR V0, [X31 + 0x4B]
	0x03A86188 STR V1, [X31 + 0x4C]
	0x03A8618C STR V2, [X31 + 0x4D]
	0x03A86190 STR W8, [X31 + 0x4E0]
	0x03A86194 BL 0x3C22060
	0x03A86198 ADRP X8, 0x6CE000
	0x03A8619C LDR X8, [X8 + 0x958]
	0x03A861A0 MOV W24, W0
	0x03A861A4 LDR X8, [X8]
	0x03A861A8 LDR W9, [X8 + 0xE0]
	0x03A861AC CBNZ W9, 0x3A861B8
	0x03A861B0 MOV X0, X8
	0x03A861B4 BL 0x1C16DFC
	0x03A861B8 LDR W8, [X31 + 0x4E0]
	0x03A861BC LDR V0, [X31 + 0x4B]
	0x03A861C0 LDR V1, [X31 + 0x4C]
	0x03A861C4 LDR V2, [X31 + 0x4D]
	0x03A861C8 STR W8, [X31 + 0x1C0]
	0x03A861CC ADD X8, X31, 0x1C8
	0x03A861D0 ADD X0, X31, 0x190
	0x03A861D4 MOV W1, W29
	0x03A861D8 MOV W2, W21
	0x03A861DC MOV W3, W24
	0x03A861E0 MOV W4, W31
	0x03A861E4 MOV X5, X31
	0x03A861E8 STP V0, V1, [X31 + 0x190]
	0x03A861EC STR V2, [X31 + 0x1B]
	0x03A861F0 BL 0x3A61C24
	0x03A861F4 ADRP X9, 0x6CE000
	0x03A861F8 LDP V0, V1, [X22]
	0x03A861FC LDR V2, [X22 + 0x2]
	0x03A86200 LDR W8, [X31 + 0x1F8]
	0x03A86204 LDR X9, [X9 + 0x10]
	0x03A86208 STR V0, [X31 + 0x4F]
	0x03A8620C STR V1, [X31 + 0x50]
	0x03A86210 STR V2, [X31 + 0x51]
	0x03A86214 LDR X0, [X9]
	0x03A86218 STR W8, [X31 + 0x520]
	0x03A8621C ADD X21, X19, 0x360
	0x03A86220 LDR W8, [X0 + 0xE0]
	0x03A86224 CBNZ W8, 0x3A8622C
	0x03A86228 BL 0x1C16DFC
	0x03A8622C ADRP X8, 0x6CE000
	0x03A86230 LDR X8, [X8 + 0x930]
	0x03A86234 ADD X1, X31, 0x4F0
	0x03A86238 FMOV S0, W31
	0x03A8623C MOVZ W3, 0x1
	0x03A86240 LDR X6, [X8]
	0x03A86244 MOVZ W5, 0x1
	0x03A86248 MOV X0, X21
	0x03A8624C MOV W2, W31
	0x03A86250 MOV W4, W31
	0x03A86254 MOV X7, X31
	0x03A86258 BL 0x3A6D184
	0x03A8625C LDR W8, [X31 + 0x70]
	0x03A86260 MOV X22, X26
	0x03A86264 CBZ W8, 0x3A864E4
	0x03A86268 MOV X0, X19
	0x03A8626C MOV X1, X23
	0x03A86270 MOV W24, W27
	0x03A86274 BL 0x3A8390C
	0x03A86278 LDR X0, [X19 + 0x350]
	0x03A8627C LDR X8, [X19 + 0x368]
	0x03A86280 LDR X27, [X31 + 0x80]
	0x03A86284 STR X8, [X31 + 0x5F0]
	0x03A86288 CBZ X0, 0x3A8652C
	0x03A8628C LDR W8, [X31 + 0x8C]
	0x03A86290 ADD X6, X19, 0x2C0
	0x03A86294 ADD X1, X31, 0x810
	0x03A86298 ADD X5, X31, 0x5F0
	0x03A8629C AND W8, W8, W28, 0x0
	0x03A862A0 MOV X2, X27
	0x03A862A4 MOV W3, W28
	0x03A862A8 MOV X4, X22
	0x03A862AC MOV W7, W25
	0x03A862B0 STR X31, [X31 + 0x8]
	0x03A862B4 STRB W8, [X31]
	0x03A862B8 BL 0x3A5F554
	0x03A862BC LDR X1, [X19 + 0x350]
	0x03A862C0 MOV X0, X19
	0x03A862C4 MOV X2, X31
	0x03A862C8 BL 0x3A4E96C
	0x03A862CC LDR W21, [X31 + 0x60]
	0x03A862D0 LDR W23, [X31 + 0x7C]
	0x03A862D4 LDR W26, [X31 + 0x68]
	0x03A862D8 B 0x3A862F0
	0x03A862DC LDR W8, [X31 + 0x70]
	0x03A862E0 CBZ W8, 0x3A84460
	0x03A862E4 MOV X0, X19
	0x03A862E8 MOV X1, X29
	0x03A862EC BL 0x3A8390C
	0x03A862F0 LDR X8, [X27]
	0x03A862F4 STR X8, [X31 + 0x4E8]
	0x03A862F8 CBZ W25, 0x3A86328
	0x03A862FC LDR X0, [X19 + 0x358]
	0x03A86300 CBZ X0, 0x3A8652C
	0x03A86304 LDR W3, [X31 + 0x8C]
	0x03A86308 ADD X1, X31, 0x4E8
	0x03A8630C MOVZ W2, 0x1
	0x03A86310 MOV X4, X31
	0x03A86314 BL 0x3A5F724
	0x03A86318 LDR X1, [X19 + 0x358]
	0x03A8631C MOV X0, X19
	0x03A86320 MOV X2, X31
	0x03A86324 BL 0x3A4E96C
	0x03A86328 LDR X8, [X20 + 0x1A8]
	0x03A8632C CBZ X8, 0x3A86340
	0x03A86330 LDR X1, [X19 + 0x248]
	0x03A86334 MOV X0, X19
	0x03A86338 MOV X2, X31
	0x03A8633C BL 0x3A4E96C
	0x03A86340 CBNZ W25, 0x3A8641C
	0x03A86344 CBZ W21, 0x3A86354
	0x03A86348 LDR X8, [X31 + 0x50]
	0x03A8634C CBNZ X8, 0x3A86354
	0x03A86350 CBZ W26, 0x3A8641C
	0x03A86354 LDR X8, [X27]
	0x03A86358 CBZ X8, 0x3A8652C
	0x03A8635C LDR X9, [X8 + 0x48]
	0x03A86360 LDUR V0, [X8 + 0x38]
	0x03A86364 LDUR V1, [X8 + 0x28]
	0x03A86368 STR X9, [X31 + 0x4D0]
	0x03A8636C STR V0, [X31 + 0x4C]
	0x03A86370 STR V1, [X31 + 0x4B]
	0x03A86374 LDR X8, [X19 + 0x298]
	0x03A86378 CBZ X8, 0x3A8652C
	0x03A8637C LDUR V0, [X8 + 0x28]
	0x03A86380 LDUR V1, [X8 + 0x38]
	0x03A86384 LDR X8, [X8 + 0x48]
	0x03A86388 LDR V2, [X31 + 0x4B]
	0x03A8638C LDR V3, [X31 + 0x4C]
	0x03A86390 LDR X9, [X31 + 0x4D0]
	0x03A86394 ADD X0, X31, 0x160
	0x03A86398 ADD X1, X31, 0x130
	0x03A8639C MOV X2, X31
	0x03A863A0 STR X8, [X31 + 0x150]
	0x03A863A4 STP V0, V1, [X31 + 0x130]
	0x03A863A8 STP V2, V3, [X31 + 0x160]
	0x03A863AC STR X9, [X31 + 0x180]
	0x03A863B0 BL 0x3C4B6D8
	0x03A863B4 TBNZ X0, 0x0, 0x3A8641C
	0x03A863B8 LDR X0, [X19 + 0x240]
	0x03A863BC LDR V0, [X31 + 0x81]
	0x03A863C0 LDR V1, [X31 + 0x82]
	0x03A863C4 LDR V2, [X31 + 0x83]
	0x03A863C8 LDR W8, [X31 + 0x840]
	0x03A863CC STR V0, [X31 + 0x4B]
	0x03A863D0 STR V1, [X31 + 0x4C]
	0x03A863D4 STR V2, [X31 + 0x4D]
	0x03A863D8 STR W8, [X31 + 0x4E0]
	0x03A863DC CBZ X0, 0x3A8652C
	0x03A863E0 LDR X2, [X31 + 0x4E8]
	0x03A863E4 LDR V0, [X31 + 0x4B]
	0x03A863E8 LDR V1, [X31 + 0x4C]
	0x03A863EC LDR V2, [X31 + 0x4D]
	0x03A863F0 LDR W8, [X31 + 0x4E0]
	0x03A863F4 ADD X1, X31, 0xF0
	0x03A863F8 MOV X3, X31
	0x03A863FC STP V0, V1, [X31 + 0xF0]
	0x03A86400 STR V2, [X31 + 0x11]
	0x03A86404 STR W8, [X31 + 0x120]
	0x03A86408 BL 0x3AB0920
	0x03A8640C LDR X1, [X19 + 0x240]
	0x03A86410 MOV X0, X19
	0x03A86414 MOV X2, X31
	0x03A86418 BL 0x3A4E96C
	0x03A8641C ORN W8, W24, W23, 0x0
	0x03A86420 TBNZ X8, 0x0, 0x3A86434
	0x03A86424 LDR X1, [X19 + 0x268]
	0x03A86428 MOV X0, X19
	0x03A8642C MOV X2, X31
	0x03A86430 BL 0x3A4E96C
	0x03A86434 LDR X0, [X20 + 0x190]
	0x03A86438 CBZ X0, 0x3A8652C
	0x03A8643C MOV X1, X31
	0x03A86440 BL 0x3984C98
	0x03A86444 TBZ X0, 0x0, 0x3A84460
	0x03A86448 LDR X8, [X22]
	0x03A8644C CBZ X8, 0x3A8652C
	0x03A86450 LDR X9, [X8 + 0x48]
	0x03A86454 LDUR V0, [X8 + 0x38]
	0x03A86458 LDUR V1, [X8 + 0x28]
	0x03A8645C STR X9, [X31 + 0x4D0]
	0x03A86460 STR V0, [X31 + 0x4C]
	0x03A86464 STR V1, [X31 + 0x4B]
	0x03A86468 LDR X8, [X20 + 0x190]
	0x03A8646C CBZ X8, 0x3A8652C
	0x03A86470 LDP V0, V1, [X8 + 0x30]
	0x03A86474 LDR X8, [X8 + 0x50]
	0x03A86478 LDR V2, [X31 + 0x4B]
	0x03A8647C LDR V3, [X31 + 0x4C]
	0x03A86480 LDR X9, [X31 + 0x4D0]
	0x03A86484 ADD X0, X31, 0xC0
	0x03A86488 ADD X1, X31, 0x90
	0x03A8648C MOV X2, X31
	0x03A86490 STR X8, [X31 + 0xB0]
	0x03A86494 STP V0, V1, [X31 + 0x90]
	0x03A86498 STP V2, V3, [X31 + 0xC0]
	0x03A8649C STR X9, [X31 + 0xE0]
	0x03A864A0 BL 0x3C4B6D8
	0x03A864A4 TBNZ X0, 0x0, 0x3A84460
	0x03A864A8 LDR X8, [X20 + 0x190]
	0x03A864AC CBZ X8, 0x3A8652C
	0x03A864B0 LDRB W8, [X8 + 0x20]
	0x03A864B4 CBZ W8, 0x3A84460
	0x03A864B8 LDR X0, [X19 + 0x258]
	0x03A864BC CBZ X0, 0x3A8652C
	0x03A864C0 LDR X2, [X19 + 0x298]
	0x03A864C4 LDR X1, [X19 + 0x288]
	0x03A864C8 MOV X3, X31
	0x03A864CC BL 0x3AABA34
	0x03A864D0 LDR X1, [X19 + 0x258]
	0x03A864D4 CBZ X1, 0x3A8652C
	0x03A864D8 MOVZ W8, 0x1
	0x03A864DC STRB W8, [X1 + 0xF4]
	0x03A864E0 B 0x3A84454
	0x03A864E4 LDR X0, [X19 + 0x350]
	0x03A864E8 LDR X8, [X19 + 0x368]
	0x03A864EC LDR X2, [X31 + 0x80]
	0x03A864F0 STR X8, [X31 + 0x5F0]
	0x03A864F4 CBZ X0, 0x3A8652C
	0x03A864F8 ADD X6, X19, 0x2C0
	0x03A864FC ADD X1, X31, 0x810
	0x03A86500 ADD X5, X31, 0x5F0
	0x03A86504 MOV W3, W31
	0x03A86508 MOV X4, X22
	0x03A8650C MOV W7, W31
	0x03A86510 STR X31, [X31 + 0x8]
	0x03A86514 STRB W31, [X31]
	0x03A86518 BL 0x3A5F554
	0x03A8651C LDR X1, [X19 + 0x350]
	0x03A86520 B 0x3A84454
	0x03A86524 MOVZ W21, 0x1
	0x03A86528 B 0x3A85BD0
	0x03A8652C BL 0x1C16F20
	0x03A86530 BL 0x1C16F20
	0x03A86534 MOV X0, X26
	0x03A86538 BL 0x1C171E0
	0x03A8653C BL 0x1C16F28
	0x03A86540 BL 0x1C16F20
	0x03A86544 B 0x3A8654C
	0x03A86548 B 0x3A8654C
	0x03A8654C MOV X24, X0
	0x03A86550 CMP W1, 0x1
	0x03A86554 B.NE 0x3A8658C
	0x03A86558 MOV X0, X24
	0x03A8655C BL 0x3EB1AD0
	0x03A86560 LDR X26, [X0]
	0x03A86564 BL 0x3EB1AE0
	0x03A86568 ADRP X8, 0x6CF000
	0x03A8656C LDR X8, [X8 + 0xED8]
	0x03A86570 ADD X0, X31, 0x730
	0x03A86574 LDR X1, [X8]
	0x03A86578 BL 0x2BC434C
	0x03A8657C LDR X28, [X31 + 0x80]
	0x03A86580 CBZ X26, 0x3A84628
	0x03A86584 MOV X0, X26
	0x03A86588 BL 0x1C16F18
	0x03A8658C MOV X26, X31
	0x03A86590 B 0x3A86598
	0x03A86594 MOV X24, X0
	0x03A86598 ADRP X8, 0x6CF000
	0x03A8659C LDR X8, [X8 + 0xED8]
	0x03A865A0 LDR X1, [X8]
	0x03A865A4 ADD X0, X31, 0x730
	0x03A865A8 BL 0x2BC434C
	0x03A865AC CBNZ X26, 0x3A865B8
	0x03A865B0 MOV X0, X24
	0x03A865B4 BL 0x1D2C690
	0x03A865B8 MOV X0, X26
	0x03A865BC BL 0x1C16F18
	0x03A865C0 BL 0x1990590
	0x03A865C4 SUB X31, X31, 0x70
	0x03A865C8 STP X29, X30, [X31 + 0x10]
	0x03A865CC STP X28, X27, [X31 + 0x20]
	0x03A865D0 STP X26, X25, [X31 + 0x30]
	0x03A865D4 STP X24, X23, [X31 + 0x40]
	0x03A865D8 STP X22, X21, [X31 + 0x50]
	0x03A865DC STP X20, X19, [X31 + 0x60]
	0x03A865E0 ADRP X19, 0x95C000
	0x03A865E4 LDRB W8, [X19 + 0x33E]
	0x03A865E8 MOV X20, X0
	0x03A865EC STR X1, [X31]
	0x03A865F0 TBNZ X8, 0x0, 0x3A86620
	0x03A865F4 ADRP X0, 0x6CF000
	0x03A865F8 LDR X0, [X0 + 0x6C8]
	0x03A865FC BL 0x1C16CF4
	0x03A86600 ADRP X0, 0x6CE000
	0x03A86604 LDR X0, [X0 + 0x908]
	0x03A86608 BL 0x1C16CF4
	0x03A8660C ADRP X0, 0x6CE000
	0x03A86610 LDR X0, [X0 + 0x910]
	0x03A86614 BL 0x1C16CF4
	0x03A86618 MOVZ W8, 0x1
	0x03A8661C STRB W8, [X19 + 0x33E]
	0x03A86620 LDR W8, [X20 + 0x2E0]
	0x03A86624 LDR X0, [X20 + 0x100]
	0x03A86628 MOVZ W9, 0xFA
	0x03A8662C CMP W8, 0x1
	0x03A86630 MOVZ W8, 0xD2
	0x03A86634 CSEL W29, W8, W9, EQ
	0x03A86638 CBZ X0, 0x3A867DC
	0x03A8663C STR W31, [X31 + 0xC]
	0x03A86640 ADRP X21, 0x6CE000
	0x03A86644 ADRP X26, 0x6CF000
	0x03A86648 LDR X21, [X21 + 0x910]
	0x03A8664C LDR X26, [X26 + 0x6C8]
	0x03A86650 MOVZ X19, 0xFA
	0x03A86654 MOV W23, W31
	0x03A86658 MOV W22, W31
	0x03A8665C MOV W27, W31
	0x03A86660 MOV W25, W31
	0x03A86664 MOV W24, W31
	0x03A86668 MOV W28, W31
	0x03A8666C MOVK X19, 0x226
	0x03A86670 LDR W8, [X0 + 0x18]
	0x03A86674 CMP W22, W8
	0x03A86678 B.GE 0x3A86748
	0x03A8667C LDR X2, [X21]
	0x03A86680 MOV W1, W22
	0x03A86684 BL 0x301BCCC
	0x03A86688 CBZ X0, 0x3A867DC
	0x03A8668C LDR X9, [X0]
	0x03A86690 LDR X8, [X26]
	0x03A86694 LDRB W11, [X9 + 0x130]
	0x03A86698 LDRB W10, [X8 + 0x130]
	0x03A8669C CMP W11, W10
	0x03A866A0 B.CC 0x3A866C0
	0x03A866A4 LDR X9, [X9 + 0xC8]
	0x03A866A8 ADD X9, X9, X10, 0x3, LSL
	0x03A866AC LDUR X9, [X9 - 0x8]
	0x03A866B0 CMP X9, X8
	0x03A866B4 B.NE 0x3A866C0
	0x03A866B8 MOVZ W8, 0x1
	0x03A866BC STR W8, [X31 + 0xC]
	0x03A866C0 LDR W8, [X0 + 0x10]
	0x03A866C4 LDR W10, [X0 + 0xC8]
	0x03A866C8 CMP W8, W29
	0x03A866CC AND W11, W10, 0x2
	0x03A866D0 CSET W12, LE
	0x03A866D4 AND W12, W10, W12, 0x0
	0x03A866D8 CMP W11, 0x0
	0x03A866DC AND W9, W10, 0x1
	0x03A866E0 CSINC W12, W12, W31, EQ
	0x03A866E4 CBZ W9, 0x3A866F8
	0x03A866E8 UBFM X13, X19, 0x20, 0x3F
	0x03A866EC CMP W8, W13
	0x03A866F0 CSEL W13, W8, W13, LT
	0x03A866F4 BFM X19, X13, 0x20, 0x1F
	0x03A866F8 ORR W23, W23, W12, 0x0
	0x03A866FC UBFM W12, W11, 0x1, 0x1F
	0x03A86700 CMP W8, W19
	0x03A86704 LDR X0, [X20 + 0x100]
	0x03A86708 ORR W28, W28, W9, 0x0
	0x03A8670C ORR W24, W24, W11, 0x1
	0x03A86710 AND W10, W10, 0xFF
	0x03A86714 AND X11, X19, 0x0
	0x03A86718 ORR W9, W12, W9, 0x0
	0x03A8671C CSEL W8, W8, W19, LT
	0x03A86720 UBFM W12, W10, 0x2, 0x2
	0x03A86724 UBFM W10, W10, 0x3, 0x3
	0x03A86728 ORR X8, X11, X8, 0x0
	0x03A8672C CMP W9, 0x0
	0x03A86730 ORR W25, W12, W25, 0x0
	0x03A86734 ORR W27, W10, W27, 0x0
	0x03A86738 CSEL X19, X19, X8, EQ
	0x03A8673C ADD W22, W22, 0x1
	0x03A86740 CBNZ X0, 0x3A86670
	0x03A86744 B 0x3A867DC
	0x03A86748 LDR X8, [X31]
	0x03A8674C MOV X1, X31
	0x03A86750 ADD X0, X8, 0x18
	0x03A86754 BL 0x3A8F3D4
	0x03A86758 TBZ X0, 0x0, 0x3A86764
	0x03A8675C MOVZ W27, 0x1
	0x03A86760 B 0x3A86768
	0x03A86764 TBZ X27, 0x0, 0x3A86788
	0x03A86768 LDR X8, [X20 + 0x1C8]
	0x03A8676C CBZ X8, 0x3A867DC
	0x03A86770 LDR W8, [X8 + 0x10]
	0x03A86774 UBFM X9, X19, 0x20, 0x3F
	0x03A86778 MOVZ W28, 0x1
	0x03A8677C CMP W8, W9
	0x03A86780 CSEL W8, W8, W9, LT
	0x03A86784 BFM X19, X8, 0x20, 0x1F
	0x03A86788 LDR W9, [X31 + 0xC]
	0x03A8678C AND X11, X24, 0xFF
	0x03A86790 AND X10, X25, 0xFF
	0x03A86794 UBFM X0, X11, 0x30, 0x2F
	0x03A86798 AND W9, W9, 0xFF
	0x03A8679C BFM X0, X10, 0x28, 0x7
	0x03A867A0 AND W8, W27, 0xFF
	0x03A867A4 BFM X0, X9, 0x20, 0x7
	0x03A867A8 BFM X0, X8, 0x18, 0x7
	0x03A867AC AND X11, X23, 0xFF
	0x03A867B0 BFM X0, X28, 0x0, 0x7
	0x03A867B4 MOV X1, X19
	0x03A867B8 LDP X20, X19, [X31 + 0x60]
	0x03A867BC LDP X22, X21, [X31 + 0x50]
	0x03A867C0 LDP X24, X23, [X31 + 0x40]
	0x03A867C4 LDP X26, X25, [X31 + 0x30]
	0x03A867C8 LDP X28, X27, [X31 + 0x20]
	0x03A867CC LDP X29, X30, [X31 + 0x10]
	0x03A867D0 BFM X0, X11, 0x38, 0x7
	0x03A867D4 ADD X31, X31, 0x70
	0x03A867D8 RET
	0x03A867DC BL 0x1C16F20
	0x03A867E0 STP X30, X27, [X31 - 0x50]!
	0x03A867E4 STP X26, X25, [X31 + 0x10]
	0x03A867E8 STP X24, X23, [X31 + 0x20]
	0x03A867EC STP X22, X21, [X31 + 0x30]
	0x03A867F0 STP X20, X19, [X31 + 0x40]
	0x03A867F4 ADRP X21, 0x95C000
	0x03A867F8 LDRB W8, [X21 + 0x341]
	0x03A867FC MOV X19, X1
	0x03A86800 MOV X20, X0
	0x03A86804 TBNZ X8, 0x0, 0x3A8681C
	0x03A86808 ADRP X0, 0x66D000
	0x03A8680C LDR X0, [X0 + 0x598]
	0x03A86810 BL 0x1C16CF4
	0x03A86814 MOVZ W8, 0x1
	0x03A86818 STRB W8, [X21 + 0x341]
	0x03A8681C LDR W8, [X19 + 0xC8]
	0x03A86820 CBNZ W8, 0x3A8682C
	0x03A86824 LDRB W8, [X19 + 0x1C0]
	0x03A86828 CBZ W8, 0x3A86954
	0x03A8682C MOV X0, X20
	0x03A86830 BL 0x3A82610
	0x03A86834 CMP W0, 0x1
	0x03A86838 B.EQ 0x3A86958
	0x03A8683C MOV X0, X19
	0x03A86840 MOV X1, X31
	0x03A86844 BL 0x3A8DE34
	0x03A86848 LDR W8, [X19 + 0x150]
	0x03A8684C LDR W27, [X19 + 0xF8]
	0x03A86850 LDR W9, [X19 + 0xE0]
	0x03A86854 MOV W21, W0
	0x03A86858 CMP W8, 0x0
	0x03A8685C CSET W24, NE
	0x03A86860 CMP W27, 0x2
	0x03A86864 CSET W23, EQ
	0x03A86868 CMP W9, 0x2
	0x03A8686C B.GE 0x3A86878
	0x03A86870 MOV W26, W31
	0x03A86874 B 0x3A86880
	0x03A86878 BL 0x3A873EC
	0x03A8687C AND W26, W0, 0x1
	0x03A86880 ADRP X8, 0x66D000
	0x03A86884 LDR X8, [X8 + 0x598]
	0x03A86888 LDR X22, [X19 + 0xD0]
	0x03A8688C LDR X0, [X8]
	0x03A86890 LDR W8, [X0 + 0xE0]
	0x03A86894 CBNZ W8, 0x3A8689C
	0x03A86898 BL 0x1C16DFC
	0x03A8689C MOV X0, X22
	0x03A868A0 MOV X1, X31
	0x03A868A4 MOV X2, X31
	0x03A868A8 BL 0x3C354F8
	0x03A868AC LDR X8, [X19 + 0x178]
	0x03A868B0 CBZ X8, 0x3A86998
	0x03A868B4 LDR X25, [X19 + 0x190]
	0x03A868B8 MOV W22, W0
	0x03A868BC MOV X0, X8
	0x03A868C0 MOV X1, X31
	0x03A868C4 BL 0x3984C98
	0x03A868C8 TBZ X0, 0x0, 0x3A868E4
	0x03A868CC LDR X8, [X19 + 0x178]
	0x03A868D0 CBZ X8, 0x3A86998
	0x03A868D4 LDR W8, [X8 + 0x78]
	0x03A868D8 MOV W24, W31
	0x03A868DC CMP W8, W27
	0x03A868E0 CSET W23, EQ
	0x03A868E4 LDRB W8, [X19 + 0x188]
	0x03A868E8 CBZ W8, 0x3A86904
	0x03A868EC ADD X0, X20, 0x348
	0x03A868F0 MOV X1, X31
	0x03A868F4 BL 0x3A6783C
	0x03A868F8 TBZ X0, 0x0, 0x3A86904
	0x03A868FC MOVZ W8, 0x1
	0x03A86900 B 0x3A86908
	0x03A86904 LDRB W8, [X19 + 0x170]
	0x03A86908 ORR W8, W8, W26, 0x0
	0x03A8690C CBZ W8, 0x3A86918
	0x03A86910 MOVZ W0, 0x1
	0x03A86914 B 0x3A86924
	0x03A86918 LDRB W8, [X19 + 0x16C]
	0x03A8691C CMP W8, 0x0
	0x03A86920 CSET W0, EQ
	0x03A86924 ORN W8, W21, W22, 0x0
	0x03A86928 TBZ X8, 0x0, 0x3A86958
	0x03A8692C ORR W8, W21, W0, 0x0
	0x03A86930 ORR W8, W24, W8, 0x0
	0x03A86934 TBNZ X8, 0x0, 0x3A86940
	0x03A86938 LDRB W8, [X19 + 0x16D]
	0x03A8693C CBZ W8, 0x3A86990
	0x03A86940 MOVZ W8, 0x1
	0x03A86944 CMP X25, 0x0
	0x03A86948 CSET W9, NE
	0x03A8694C ORR W8, W8, W9, 0x0
	0x03A86950 CBZ W8, 0x3A86970
	0x03A86954 MOVZ W0, 0x1
	0x03A86958 LDP X20, X19, [X31 + 0x40]
	0x03A8695C LDP X22, X21, [X31 + 0x30]
	0x03A86960 LDP X24, X23, [X31 + 0x20]
	0x03A86964 LDP X26, X25, [X31 + 0x10]
	0x03A86968 LDP X30, X27, [X31], #0x50
	0x03A8696C RET
	0x03A86970 MOV X0, X19
	0x03A86974 LDP X20, X19, [X31 + 0x40]
	0x03A86978 LDP X22, X21, [X31 + 0x30]
	0x03A8697C LDP X24, X23, [X31 + 0x20]
	0x03A86980 LDP X26, X25, [X31 + 0x10]
	0x03A86984 MOV X1, X31
	0x03A86988 LDP X30, X27, [X31], #0x50
	0x03A8698C B 0x3A93110
	0x03A86990 EOR W8, W23, 0x1
	0x03A86994 B 0x3A86944
	0x03A86998 BL 0x1C16F20
	0x03A8699C STP X29, X30, [X31 - 0x40]!
	0x03A869A0 STP X24, X23, [X31 + 0x10]
	0x03A869A4 STP X22, X21, [X31 + 0x20]
	0x03A869A8 STP X20, X19, [X31 + 0x30]
	0x03A869AC SUB X31, X31, 0x1F0
	0x03A869B0 ADRP X24, 0x95C000
	0x03A869B4 STR X1, [X31 + 0x1E8]
	0x03A869B8 ADRP X23, 0x6D1000
	0x03A869BC LDRB W8, [X24 + 0x33F]
	0x03A869C0 LDR X23, [X23 + 0x218]
	0x03A869C4 MOV X22, X5
	0x03A869C8 MOV X19, X4
	0x03A869CC MOV X20, X2
	0x03A869D0 MOV X21, X0
	0x03A869D4 TBNZ X8, 0x0, 0x3A86A28
	0x03A869D8 ADRP X0, 0x6D1000
	0x03A869DC LDR X0, [X0 + 0x218]
	0x03A869E0 BL 0x1C16CF4
	0x03A869E4 ADRP X0, 0x6CE000
	0x03A869E8 LDR X0, [X0 + 0x10]
	0x03A869EC BL 0x1C16CF4
	0x03A869F0 ADRP X0, 0x6CA000
	0x03A869F4 LDR X0, [X0 + 0xC80]
	0x03A869F8 BL 0x1C16CF4
	0x03A869FC ADRP X0, 0x6CE000
	0x03A86A00 LDR X0, [X0 + 0x928]
	0x03A86A04 BL 0x1C16CF4
	0x03A86A08 ADRP X0, 0x6CE000
	0x03A86A0C LDR X0, [X0 + 0x930]
	0x03A86A10 BL 0x1C16CF4
	0x03A86A14 ADRP X0, 0x6CE000
	0x03A86A18 LDR X0, [X0 + 0x938]
	0x03A86A1C BL 0x1C16CF4
	0x03A86A20 MOVZ W8, 0x1
	0x03A86A24 STRB W8, [X24 + 0x33F]
	0x03A86A28 LDR X0, [X23]
	0x03A86A2C MOVI V0.2D, 0x0
	0x03A86A30 STRB W31, [X31 + 0x1E0]
	0x03A86A34 STR W31, [X31 + 0x1D0]
	0x03A86A38 STP V0, V0, [X31 + 0x1B0]
	0x03A86A3C STR V0, [X31 + 0x1A]
	0x03A86A40 LDR W8, [X0 + 0xE0]
	0x03A86A44 CBNZ W8, 0x3A86A50
	0x03A86A48 BL 0x1C16DFC
	0x03A86A4C LDR X0, [X23]
	0x03A86A50 LDR X8, [X0 + 0xB8]
	0x03A86A54 ADD X0, X31, 0x1E0
	0x03A86A58 MOV X1, X31
	0x03A86A5C MOV X3, X31
	0x03A86A60 LDR X2, [X8]
	0x03A86A64 BL 0x39B1DB0
	0x03A86A68 LDR X0, [X21 + 0x270]
	0x03A86A6C CBZ X0, 0x3A86E1C
	0x03A86A70 MOV X1, X31
	0x03A86A74 BL 0x3AB59A4
	0x03A86A78 ADD X23, X31, 0x148
	0x03A86A7C CBZ X0, 0x3A86AEC
	0x03A86A80 LDR X0, [X21 + 0x270]
	0x03A86A84 CBZ X0, 0x3A86E3C
	0x03A86A88 MOV X1, X31
	0x03A86A8C BL 0x3AB59A4
	0x03A86A90 CBZ X0, 0x3A86E40
	0x03A86A94 LDR X8, [X0 + 0x48]
	0x03A86A98 LDUR V0, [X0 + 0x38]
	0x03A86A9C LDUR V1, [X0 + 0x28]
	0x03A86AA0 STR X8, [X31 + 0x190]
	0x03A86AA4 STP V1, V0, [X31 + 0x170]
	0x03A86AA8 ADD X8, X31, 0x148
	0x03A86AAC MOVZ W0, 0x2
	0x03A86AB0 MOV X1, X31
	0x03A86AB4 BL 0x3C4B204
	0x03A86AB8 LDP V0, V1, [X23]
	0x03A86ABC LDR X8, [X31 + 0x168]
	0x03A86AC0 LDP V2, V3, [X31 + 0x170]
	0x03A86AC4 LDR X9, [X31 + 0x190]
	0x03A86AC8 STP V0, V1, [X31 + 0xF0]
	0x03A86ACC STR X8, [X31 + 0x110]
	0x03A86AD0 STP V2, V3, [X31 + 0x120]
	0x03A86AD4 STR X9, [X31 + 0x140]
	0x03A86AD8 ADD X0, X31, 0x120
	0x03A86ADC ADD X1, X31, 0xF0
	0x03A86AE0 MOV X2, X31
	0x03A86AE4 BL 0x3C4B708
	0x03A86AE8 TBZ X0, 0x0, 0x3A86B98
	0x03A86AEC LDR X0, [X21 + 0x270]
	0x03A86AF0 CBZ X0, 0x3A86E24
	0x03A86AF4 MOV X1, X19
	0x03A86AF8 MOV X2, X31
	0x03A86AFC BL 0x3AB59EC
	0x03A86B00 MOV X1, X0
	0x03A86B04 STR X1, [X21 + 0x278]
	0x03A86B08 MOV X0, X21
	0x03A86B0C MOV X2, X31
	0x03A86B10 BL 0x3A4B604
	0x03A86B14 LDR X8, [X21 + 0x278]
	0x03A86B18 CBZ X8, 0x3A86E28
	0x03A86B1C LDR X9, [X8 + 0x48]
	0x03A86B20 LDUR V0, [X8 + 0x38]
	0x03A86B24 LDUR V1, [X8 + 0x28]
	0x03A86B28 STR X9, [X31 + 0x190]
	0x03A86B2C STP V1, V0, [X31 + 0x170]
	0x03A86B30 CBZ X19, 0x3A86E2C
	0x03A86B34 ADRP X8, 0x6CE000
	0x03A86B38 LDR X8, [X8 + 0x928]
	0x03A86B3C LDP V0, V1, [X31 + 0x170]
	0x03A86B40 LDR X9, [X31 + 0x190]
	0x03A86B44 LDR X1, [X8]
	0x03A86B48 STP V0, V1, [X31 + 0xC0]
	0x03A86B4C STR X9, [X31 + 0xE0]
	0x03A86B50 ADD X2, X31, 0xC0
	0x03A86B54 MOV X0, X19
	0x03A86B58 MOV X3, X31
	0x03A86B5C BL 0x3C4FC28
	0x03A86B60 LDR X8, [X21 + 0x278]
	0x03A86B64 CBZ X8, 0x3A86E30
	0x03A86B68 ADRP X9, 0x6CE000
	0x03A86B6C LDR X9, [X9 + 0x930]
	0x03A86B70 LDR X10, [X8 + 0x48]
	0x03A86B74 LDUR V0, [X8 + 0x38]
	0x03A86B78 LDUR V1, [X8 + 0x28]
	0x03A86B7C LDR X1, [X9]
	0x03A86B80 STR X10, [X31 + 0xB0]
	0x03A86B84 STP V1, V0, [X31 + 0x90]
	0x03A86B88 ADD X2, X31, 0x90
	0x03A86B8C MOV X0, X19
	0x03A86B90 MOV X3, X31
	0x03A86B94 BL 0x3C4FC28
	0x03A86B98 LDR X8, [X21 + 0x290]
	0x03A86B9C CBZ X8, 0x3A86BF8
	0x03A86BA0 LDR X9, [X8 + 0x48]
	0x03A86BA4 LDUR V0, [X8 + 0x38]
	0x03A86BA8 LDUR V1, [X8 + 0x28]
	0x03A86BAC STR X9, [X31 + 0x190]
	0x03A86BB0 STP V1, V0, [X31 + 0x170]
	0x03A86BB4 ADD X8, X31, 0x148
	0x03A86BB8 MOVZ W0, 0x2
	0x03A86BBC MOV X1, X31
	0x03A86BC0 BL 0x3C4B204
	0x03A86BC4 LDP V0, V1, [X23]
	0x03A86BC8 LDR X8, [X31 + 0x168]
	0x03A86BCC LDP V2, V3, [X31 + 0x170]
	0x03A86BD0 LDR X9, [X31 + 0x190]
	0x03A86BD4 STP V0, V1, [X31 + 0x30]
	0x03A86BD8 STR X8, [X31 + 0x50]
	0x03A86BDC STP V2, V3, [X31 + 0x60]
	0x03A86BE0 STR X9, [X31 + 0x80]
	0x03A86BE4 ADD X0, X31, 0x60
	0x03A86BE8 ADD X1, X31, 0x30
	0x03A86BEC MOV X2, X31
	0x03A86BF0 BL 0x3C4B708
	0x03A86BF4 TBZ X0, 0x0, 0x3A86DC0
	0x03A86BF8 LDR W8, [X20 + 0x30]
	0x03A86BFC LDP V1, V0, [X20 + 0x10]
	0x03A86C00 LDR V2, [X20]
	0x03A86C04 STR W8, [X31 + 0x1D0]
	0x03A86C08 STP V1, V0, [X31 + 0x1B0]
	0x03A86C0C STR V2, [X31 + 0x1A]
	0x03A86C10 ADD X0, X31, 0x1A0
	0x03A86C14 MOV W1, W31
	0x03A86C18 MOV X2, X31
	0x03A86C1C BL 0x3C22B28
	0x03A86C20 ADD X0, X31, 0x1A0
	0x03A86C24 MOV W1, W31
	0x03A86C28 MOV X2, X31
	0x03A86C2C BL 0x3C22B44
	0x03A86C30 ADD X0, X31, 0x1A0
	0x03A86C34 MOV W1, W31
	0x03A86C38 MOV X2, X31
	0x03A86C3C BL 0x3C22B9C
	0x03A86C40 LDR W8, [X31 + 0x1A8]
	0x03A86C44 ADRP X23, 0x6CE000
	0x03A86C48 LDR X23, [X23 + 0x10]
	0x03A86C4C CMP W8, 0x2
	0x03A86C50 B.LT 0x3A86CCC
	0x03A86C54 MOV X0, X31
	0x03A86C58 BL 0x3C3BE3C
	0x03A86C5C CBZ W0, 0x3A86CCC
	0x03A86C60 MOV X0, X21
	0x03A86C64 MOV X1, X22
	0x03A86C68 BL 0x3A83CA8
	0x03A86C6C TBZ X0, 0x0, 0x3A86C84
	0x03A86C70 ADD X0, X31, 0x1A0
	0x03A86C74 MOVZ W1, 0x1
	0x03A86C78 MOV X2, X31
	0x03A86C7C BL 0x3C22B9C
	0x03A86C80 B 0x3A86CCC
	0x03A86C84 LDR X0, [X23]
	0x03A86C88 LDR W8, [X0 + 0xE0]
	0x03A86C8C CBNZ W8, 0x3A86C94
	0x03A86C90 BL 0x1C16DFC
	0x03A86C94 MOV X0, X31
	0x03A86C98 BL 0x3A71E5C
	0x03A86C9C TBZ X0, 0x0, 0x3A86CBC
	0x03A86CA0 MOV X0, X31
	0x03A86CA4 BL 0x3C3BE8C
	0x03A86CA8 TBZ X0, 0x0, 0x3A86CBC
	0x03A86CAC LDR W8, [X21 + 0x2E8]
	0x03A86CB0 CMP W8, 0x1
	0x03A86CB4 CSET W1, NE
	0x03A86CB8 B 0x3A86CC0
	0x03A86CBC MOVZ W1, 0x1
	0x03A86CC0 ADD X0, X31, 0x1A0
	0x03A86CC4 MOV X2, X31
	0x03A86CC8 BL 0x3C22B9C
	0x03A86CCC MOV X0, X31
	0x03A86CD0 BL 0x3C3BACC
	0x03A86CD4 CMP W0, 0x8
	0x03A86CD8 B.EQ 0x3A86CEC
	0x03A86CDC MOV X0, X31
	0x03A86CE0 BL 0x3C3BACC
	0x03A86CE4 CMP W0, 0xB
	0x03A86CE8 B.NE 0x3A86CFC
	0x03A86CEC ADD X0, X31, 0x1A0
	0x03A86CF0 MOV W1, W31
	0x03A86CF4 MOV X2, X31
	0x03A86CF8 BL 0x3C22B9C
	0x03A86CFC ADD X0, X31, 0x1A0
	0x03A86D00 MOV W1, W31
	0x03A86D04 MOV X2, X31
	0x03A86D08 BL 0x3C2240C
	0x03A86D0C LDR X0, [X23]
	0x03A86D10 MOVZ W8, 0x5C
	0x03A86D14 STR W8, [X31 + 0x1BC]
	0x03A86D18 LDR W8, [X0 + 0xE0]
	0x03A86D1C CBNZ W8, 0x3A86D24
	0x03A86D20 BL 0x1C16DFC
	0x03A86D24 ADRP X8, 0x6CE000
	0x03A86D28 LDR X8, [X8 + 0x938]
	0x03A86D2C ADD X21, X21, 0x290
	0x03A86D30 LDR X6, [X8]
	0x03A86D34 ADD X1, X31, 0x1A0
	0x03A86D38 FMOV S0, W31
	0x03A86D3C MOVZ W3, 0x1
	0x03A86D40 MOVZ W5, 0x1
	0x03A86D44 MOV X0, X21
	0x03A86D48 MOV W2, W31
	0x03A86D4C MOV W4, W31
	0x03A86D50 MOV X7, X31
	0x03A86D54 BL 0x3A6D184
	0x03A86D58 LDR X8, [X21]
	0x03A86D5C CBZ X8, 0x3A86E34
	0x03A86D60 LDR X9, [X8 + 0x48]
	0x03A86D64 LDUR V0, [X8 + 0x38]
	0x03A86D68 LDUR V1, [X8 + 0x28]
	0x03A86D6C LDR X1, [X8 + 0x58]
	0x03A86D70 STR X9, [X31 + 0x190]
	0x03A86D74 STP V1, V0, [X31 + 0x170]
	0x03A86D78 CBZ X19, 0x3A86E38
	0x03A86D7C LDP V0, V1, [X31 + 0x170]
	0x03A86D80 LDR X8, [X31 + 0x190]
	0x03A86D84 STP V0, V1, [X31]
	0x03A86D88 STR X8, [X31 + 0x20]
	0x03A86D8C ADD X2, X31, 0x0
	0x03A86D90 MOV X0, X19
	0x03A86D94 MOV X3, X31
	0x03A86D98 BL 0x3C4FC28
	0x03A86D9C LDR W8, [X31 + 0x1BC]
	0x03A86DA0 STR W8, [X20 + 0x1C]
	0x03A86DA4 ADD X0, X31, 0x1A0
	0x03A86DA8 MOV X1, X31
	0x03A86DAC BL 0x3C224C4
	0x03A86DB0 MOV W1, W0
	0x03A86DB4 MOV X0, X20
	0x03A86DB8 MOV X2, X31
	0x03A86DBC BL 0x3C22520
	0x03A86DC0 ADD X0, X31, 0x1E0
	0x03A86DC4 MOV X1, X31
	0x03A86DC8 BL 0x39B1DB4
	0x03A86DCC ADRP X8, 0x6CA000
	0x03A86DD0 LDR X8, [X8 + 0xC80]
	0x03A86DD4 LDR X0, [X8]
	0x03A86DD8 LDR W8, [X0 + 0xE0]
	0x03A86DDC CBNZ W8, 0x3A86DE4
	0x03A86DE0 BL 0x1C16DFC
	0x03A86DE4 ADD X0, X31, 0x1E8
	0x03A86DE8 MOV X1, X19
	0x03A86DEC MOV X2, X31
	0x03A86DF0 BL 0x3C58FE4
	0x03A86DF4 CBZ X19, 0x3A86E20
	0x03A86DF8 MOV X0, X19
	0x03A86DFC MOV X1, X31
	0x03A86E00 BL 0x3C4C310
	0x03A86E04 ADD X31, X31, 0x1F0
	0x03A86E08 LDP X20, X19, [X31 + 0x30]
	0x03A86E0C LDP X22, X21, [X31 + 0x20]
	0x03A86E10 LDP X24, X23, [X31 + 0x10]
	0x03A86E14 LDP X29, X30, [X31], #0x40
	0x03A86E18 RET
	0x03A86E1C BL 0x1C16F20
	0x03A86E20 BL 0x1C16F20
	0x03A86E24 BL 0x1C16F20
	0x03A86E28 BL 0x1C16F20
	0x03A86E2C BL 0x1C16F20
	0x03A86E30 BL 0x1C16F20
	0x03A86E34 BL 0x1C16F20
	0x03A86E38 BL 0x1C16F20
	0x03A86E3C BL 0x1C16F20
	0x03A86E40 BL 0x1C16F20
	0x03A86E44 B 0x3A86EAC
	0x03A86E48 B 0x3A86EAC
	0x03A86E4C B 0x3A86EAC
	0x03A86E50 B 0x3A86EAC
	0x03A86E54 B 0x3A86EAC
	0x03A86E58 B 0x3A86EAC
	0x03A86E5C B 0x3A86EAC
	0x03A86E60 B 0x3A86EAC
	0x03A86E64 B 0x3A86EAC
	0x03A86E68 B 0x3A86EAC
	0x03A86E6C B 0x3A86EAC
	0x03A86E70 B 0x3A86EAC
	0x03A86E74 B 0x3A86EAC
	0x03A86E78 B 0x3A86EAC
	0x03A86E7C B 0x3A86EAC
	0x03A86E80 B 0x3A86EAC
	0x03A86E84 B 0x3A86EAC
	0x03A86E88 B 0x3A86EAC
	0x03A86E8C B 0x3A86EAC
	0x03A86E90 B 0x3A86EAC
	0x03A86E94 B 0x3A86EAC
	0x03A86E98 B 0x3A86EAC
	0x03A86E9C B 0x3A86EAC
	0x03A86EA0 B 0x3A86EAC
	0x03A86EA4 B 0x3A86EAC
	0x03A86EA8 B 0x3A86EAC
	0x03A86EAC MOV X20, X0
	0x03A86EB0 CMP W1, 0x1
	0x03A86EB4 B.NE 0x3A86EE0
	0x03A86EB8 MOV X0, X20
	0x03A86EBC BL 0x3EB1AD0
	0x03A86EC0 LDR X21, [X0]
	0x03A86EC4 BL 0x3EB1AE0
	0x03A86EC8 ADD X0, X31, 0x1E0
	0x03A86ECC MOV X1, X31
	0x03A86ED0 BL 0x39B1DB4
	0x03A86ED4 CBZ X21, 0x3A86DCC
	0x03A86ED8 MOV X0, X21
	0x03A86EDC BL 0x1C16F18
	0x03A86EE0 MOV X21, X31
	0x03A86EE4 B 0x3A86EEC
	0x03A86EE8 MOV X20, X0
	0x03A86EEC ADD X0, X31, 0x1E0
	0x03A86EF0 MOV X1, X31
	0x03A86EF4 BL 0x39B1DB4
	0x03A86EF8 CBNZ X21, 0x3A86F04
	0x03A86EFC MOV X0, X20
	0x03A86F00 BL 0x1D2C690
	0x03A86F04 MOV X0, X21
	0x03A86F08 BL 0x1C16F18
	0x03A86F0C BL 0x1990590
	0x03A86F10 SUB X31, X31, 0xF0
	0x03A86F14 STR X30, [X31 + 0xD0]
	0x03A86F18 STP X20, X19, [X31 + 0xE0]
	0x03A86F1C MOV X19, X0
	0x03A86F20 LDR X0, [X0 + 0x2D8]
	0x03A86F24 MOV X20, X1
	0x03A86F28 TBZ X6, 0x0, 0x3A86F34
	0x03A86F2C LDR X8, [X19 + 0x1D8]
	0x03A86F30 B 0x3A86F38
	0x03A86F34 MOV X8, X31
	0x03A86F38 CBZ X0, 0x3A870A8
	0x03A86F3C LDR X11, [X19 + 0x278]
	0x03A86F40 LDR X7, [X19 + 0x288]
	0x03A86F44 LDR X6, [X19 + 0x2A0]
	0x03A86F48 AND W9, W2, 0x1
	0x03A86F4C AND W10, W3, 0x1
	0x03A86F50 AND W5, W4, 0x1
	0x03A86F54 MOV X1, X20
	0x03A86F58 MOV X2, X8
	0x03A86F5C MOV W3, W9
	0x03A86F60 MOV W4, W10
	0x03A86F64 STP X11, X31, [X31]
	0x03A86F68 BL 0x3A9C84C
	0x03A86F6C LDRB W8, [X19 + 0x1A4]
	0x03A86F70 CBZ W8, 0x3A87028
	0x03A86F74 LDR X8, [X19 + 0x2D8]
	0x03A86F78 CBZ X8, 0x3A870A8
	0x03A86F7C LDRB W8, [X8 + 0x15]
	0x03A86F80 CBZ W8, 0x3A87028
	0x03A86F84 LDP V2, V0, [X20 + 0x100]
	0x03A86F88 LDR W8, [X20 + 0x120]
	0x03A86F8C LDR V1, [X20 + 0xF]
	0x03A86F90 LDR X0, [X19 + 0x1E0]
	0x03A86F94 STP V2, V0, [X31 + 0x60]
	0x03A86F98 STR W8, [X31 + 0x80]
	0x03A86F9C STR V1, [X31 + 0x5]
	0x03A86FA0 CBZ X0, 0x3A870A8
	0x03A86FA4 LDR X8, [X0]
	0x03A86FA8 LDP V0, V1, [X31 + 0x50]
	0x03A86FAC LDR V2, [X31 + 0x7]
	0x03A86FB0 LDR W9, [X31 + 0x80]
	0x03A86FB4 LDR X10, [X8 + 0x198]
	0x03A86FB8 STP V0, V1, [X31 + 0x90]
	0x03A86FBC STR V2, [X31 + 0xB]
	0x03A86FC0 STR W9, [X31 + 0xC0]
	0x03A86FC4 LDR X3, [X8 + 0x1A0]
	0x03A86FC8 ADD X2, X31, 0x90
	0x03A86FCC MOV X1, X31
	0x03A86FD0 ADD X20, X20, 0xF0
	0x03A86FD4 BLR X10
	0x03A86FD8 LDP V2, V0, [X20 + 0x10]
	0x03A86FDC LDR W8, [X20 + 0x30]
	0x03A86FE0 LDR V1, [X20]
	0x03A86FE4 LDR X0, [X19 + 0x1F0]
	0x03A86FE8 STP V2, V0, [X31 + 0x20]
	0x03A86FEC STR W8, [X31 + 0x40]
	0x03A86FF0 STR V1, [X31 + 0x1]
	0x03A86FF4 CBZ X0, 0x3A870A8
	0x03A86FF8 LDR X8, [X0]
	0x03A86FFC LDP V0, V1, [X31 + 0x10]
	0x03A87000 LDR V2, [X31 + 0x3]
	0x03A87004 LDR W9, [X31 + 0x40]
	0x03A87008 LDR X10, [X8 + 0x198]
	0x03A8700C STP V0, V1, [X31 + 0x90]
	0x03A87010 STR V2, [X31 + 0xB]
	0x03A87014 STR W9, [X31 + 0xC0]
	0x03A87018 LDR X3, [X8 + 0x1A0]
	0x03A8701C ADD X2, X31, 0x90
	0x03A87020 MOV X1, X31
	0x03A87024 BLR X10
	0x03A87028 LDR X1, [X19 + 0x1E0]
	0x03A8702C MOV X0, X19
	0x03A87030 MOV X2, X31
	0x03A87034 BL 0x3A4E96C
	0x03A87038 LDRB W8, [X19 + 0x1A4]
	0x03A8703C CBZ W8, 0x3A87050
	0x03A87040 LDR X8, [X19 + 0x2D8]
	0x03A87044 CBZ X8, 0x3A870A8
	0x03A87048 LDRB W8, [X8 + 0x15]
	0x03A8704C CBNZ W8, 0x3A87078
	0x03A87050 LDR X0, [X19 + 0x1E8]
	0x03A87054 CBZ X0, 0x3A870A8
	0x03A87058 LDR X2, [X19 + 0x2A0]
	0x03A8705C LDR X1, [X19 + 0x290]
	0x03A87060 MOV X3, X31
	0x03A87064 BL 0x3AABA34
	0x03A87068 LDR X1, [X19 + 0x1E8]
	0x03A8706C MOV X0, X19
	0x03A87070 MOV X2, X31
	0x03A87074 BL 0x3A4E96C
	0x03A87078 LDR X1, [X19 + 0x1F0]
	0x03A8707C MOV X0, X19
	0x03A87080 MOV X2, X31
	0x03A87084 BL 0x3A4E96C
	0x03A87088 LDR X1, [X19 + 0x1F8]
	0x03A8708C MOV X0, X19
	0x03A87090 MOV X2, X31
	0x03A87094 BL 0x3A4E96C
	0x03A87098 LDP X20, X19, [X31 + 0xE0]
	0x03A8709C LDR X30, [X31 + 0xD0]
	0x03A870A0 ADD X31, X31, 0xF0
	0x03A870A4 RET
	0x03A870A8 BL 0x1C16F20
	0x03A870AC STP X30, X21, [X31 - 0x20]!
	0x03A870B0 STP X20, X19, [X31 + 0x10]
	0x03A870B4 MOV X21, X0
	0x03A870B8 LDR X0, [X0 + 0x2D0]
	0x03A870BC CBZ X0, 0x3A8710C
	0x03A870C0 MOV X3, X31
	0x03A870C4 MOV X19, X2
	0x03A870C8 MOV X20, X1
	0x03A870CC BL 0x3AA6BF8
	0x03A870D0 MOV X0, X21
	0x03A870D4 BL 0x3A82610
	0x03A870D8 CMP W0, 0x1
	0x03A870DC B.NE 0x3A87100
	0x03A870E0 LDR X0, [X21 + 0x2D8]
	0x03A870E4 CBZ X0, 0x3A8710C
	0x03A870E8 MOV X1, X20
	0x03A870EC MOV X2, X19
	0x03A870F0 LDP X20, X19, [X31 + 0x10]
	0x03A870F4 MOV X3, X31
	0x03A870F8 LDP X30, X21, [X31], #0x20
	0x03A870FC B 0x3A9B774
	0x03A87100 LDP X20, X19, [X31 + 0x10]
	0x03A87104 LDP X30, X21, [X31], #0x20
	0x03A87108 RET
	0x03A8710C BL 0x1C16F20
	0x03A87110 STR D8, [X31 - 0x50]!
	0x03A87114 STP X30, X25, [X31 + 0x10]
	0x03A87118 STP X24, X23, [X31 + 0x20]
	0x03A8711C STP X22, X21, [X31 + 0x30]
	0x03A87120 STP X20, X19, [X31 + 0x40]
	0x03A87124 ADRP X22, 0x95B000
	0x03A87128 LDRB W8, [X22 + 0x33D]
	0x03A8712C MOV X20, X2
	0x03A87130 MOV X19, X1
	0x03A87134 MOV X21, X0
	0x03A87138 TBNZ X8, 0x0, 0x3A8715C
	0x03A8713C ADRP X0, 0x6C9000
	0x03A87140 LDR X0, [X0 + 0x680]
	0x03A87144 BL 0x1C16CF4
	0x03A87148 ADRP X0, 0x695000
	0x03A8714C LDR X0, [X0 + 0x8A8]
	0x03A87150 BL 0x1C16CF4
	0x03A87154 MOVZ W8, 0x1
	0x03A87158 STRB W8, [X22 + 0x33D]
	0x03A8715C ADRP X23, 0x695000
	0x03A87160 ADRP X24, 0x6C9000
	0x03A87164 LDR X23, [X23 + 0x8A8]
	0x03A87168 LDR X24, [X24 + 0x680]
	0x03A8716C MOV X0, X21
	0x03A87170 BL 0x3A82610
	0x03A87174 CMP W0, 0x2
	0x03A87178 B.NE 0x3A871A8
	0x03A8717C LDR X0, [X24]
	0x03A87180 LDR W8, [X0 + 0xE0]
	0x03A87184 CBNZ W8, 0x3A8718C
	0x03A87188 BL 0x1C16DFC
	0x03A8718C MOV X0, X19
	0x03A87190 MOV X1, X31
	0x03A87194 BL 0x3C51EAC
	0x03A87198 ORR W1, W0, 0x20
	0x03A8719C MOV X0, X19
	0x03A871A0 MOV X2, X31
	0x03A871A4 BL 0x3C51EB4
	0x03A871A8 LDR X0, [X23]
	0x03A871AC LDR W8, [X0 + 0xE0]
	0x03A871B0 CBNZ W8, 0x3A871B8
	0x03A871B4 BL 0x1C16DFC
	0x03A871B8 MOV X0, X31
	0x03A871BC BL 0x3A8AB60
	0x03A871C0 CBZ X0, 0x3A873BC
	0x03A871C4 LDRB W8, [X0 + 0x80]
	0x03A871C8 CBZ W8, 0x3A871D4
	0x03A871CC MOV W22, W31
	0x03A871D0 B 0x3A871F8
	0x03A871D4 LDR X0, [X23]
	0x03A871D8 LDR W8, [X0 + 0xE0]
	0x03A871DC CBNZ W8, 0x3A871E4
	0x03A871E0 BL 0x1C16DFC
	0x03A871E4 MOV X0, X31
	0x03A871E8 BL 0x3A8AB60
	0x03A871EC CBZ X0, 0x3A873BC
	0x03A871F0 LDRB W8, [X0 + 0x90]
	0x03A871F4 EOR W22, W8, 0x1
	0x03A871F8 ADRP X25, 0x952000
	0x03A871FC LDRB W8, [X25 + 0x5AA]
	0x03A87200 LDR V8, [X20 + 0x184]
	0x03A87204 CBNZ W8, 0x3A8721C
	0x03A87208 ADRP X0, 0x673000
	0x03A8720C LDR X0, [X0 + 0x4B8]
	0x03A87210 BL 0x1C16CF4
	0x03A87214 MOVZ W8, 0x1
	0x03A87218 STRB W8, [X25 + 0x5AA]
	0x03A8721C ADRP X8, 0x673000
	0x03A87220 LDR X8, [X8 + 0x4B8]
	0x03A87224 ADRP X9, 0xFFFFFFFFFD063000
	0x03A87228 LDR V0, [X9 + 0x240]
	0x03A8722C FABS S1, S8
	0x03A87230 LDR X8, [X8]
	0x03A87234 FMOV S2, W31
	0x03A87238 FMAXNM S1, S1, S2
	0x03A8723C FMUL S0, S1, S0
	0x03A87240 LDR X8, [X8 + 0xB8]
	0x03A87244 FMOV S1, 8
	0x03A87248 LDR V3, [X8]
	0x03A8724C FMUL S1, S3, S1
	0x03A87250 FCMP S0, S1
	0x03A87254 FCSEL S0, S0, S1, GT
	0x03A87258 FABD S1, S2, S2
	0x03A8725C FCMP S1, S0
	0x03A87260 CSET W8, MI
	0x03A87264 ORR W8, W22, W8, 0x0
	0x03A87268 CBZ W8, 0x3A87298
	0x03A8726C LDR X0, [X24]
	0x03A87270 LDR W8, [X0 + 0xE0]
	0x03A87274 CBNZ W8, 0x3A8727C
	0x03A87278 BL 0x1C16DFC
	0x03A8727C MOV X0, X19
	0x03A87280 MOV X1, X31
	0x03A87284 BL 0x3C51EAC
	0x03A87288 AND W1, W0, 0xFFFFFFBF
	0x03A8728C MOV X0, X19
	0x03A87290 MOV X2, X31
	0x03A87294 BL 0x3C51EB4
	0x03A87298 MOV X0, X21
	0x03A8729C BL 0x3A82610
	0x03A872A0 CMP W0, 0x1
	0x03A872A4 B.NE 0x3A872C0
	0x03A872A8 LDR X0, [X24]
	0x03A872AC LDR W8, [X0 + 0xE0]
	0x03A872B0 CBNZ W8, 0x3A872B8
	0x03A872B4 BL 0x1C16DFC
	0x03A872B8 MOVZ W1, 0xFFFF
	0x03A872BC B 0x3A87330
	0x03A872C0 MOV X0, X21
	0x03A872C4 BL 0x3A82610
	0x03A872C8 LDR X8, [X23]
	0x03A872CC MOV W21, W0
	0x03A872D0 LDR W9, [X8 + 0xE0]
	0x03A872D4 CBNZ W9, 0x3A872E0
	0x03A872D8 MOV X0, X8
	0x03A872DC BL 0x1C16DFC
	0x03A872E0 MOV X0, X31
	0x03A872E4 BL 0x3A89318
	0x03A872E8 LDR X8, [X24]
	0x03A872EC MOV W22, W0
	0x03A872F0 LDR W9, [X8 + 0xE0]
	0x03A872F4 CBNZ W9, 0x3A87300
	0x03A872F8 MOV X0, X8
	0x03A872FC BL 0x1C16DFC
	0x03A87300 CMP W21, 0x2
	0x03A87304 B.NE 0x3A8732C
	0x03A87308 MOV X0, X19
	0x03A8730C MOV W1, W22
	0x03A87310 MOV X2, X31
	0x03A87314 BL 0x3C51E14
	0x03A87318 MOV X0, X19
	0x03A8731C MOV W1, W31
	0x03A87320 MOV X2, X31
	0x03A87324 BL 0x3C51EBC
	0x03A87328 B 0x3A8733C
	0x03A8732C ADD W1, W22, 0x1
	0x03A87330 MOV X0, X19
	0x03A87334 MOV X2, X31
	0x03A87338 BL 0x3C51E14
	0x03A8733C LDR X0, [X24]
	0x03A87340 LDR V8, [X20 + 0x184]
	0x03A87344 LDR W8, [X0 + 0xE0]
	0x03A87348 CBNZ W8, 0x3A87350
	0x03A8734C BL 0x1C16DFC
	0x03A87350 MOV X0, X19
	0x03A87354 MOV V0.16B, V8.16B
	0x03A87358 MOV X1, X31
	0x03A8735C BL 0x3C51EA4
	0x03A87360 LDR X0, [X23]
	0x03A87364 LDR W8, [X0 + 0xE0]
	0x03A87368 CBNZ W8, 0x3A87370
	0x03A8736C BL 0x1C16DFC
	0x03A87370 MOV X0, X31
	0x03A87374 BL 0x3A8AB60
	0x03A87378 CBZ X0, 0x3A873BC
	0x03A8737C LDRB W1, [X0 + 0xD5]
	0x03A87380 MOV X0, X19
	0x03A87384 MOV X2, X31
	0x03A87388 BL 0x3C51E1C
	0x03A8738C MOV X0, X31
	0x03A87390 BL 0x3A8AB60
	0x03A87394 CBZ X0, 0x3A873BC
	0x03A87398 LDR W1, [X0 + 0xD8]
	0x03A8739C MOV X0, X19
	0x03A873A0 LDP X20, X19, [X31 + 0x40]
	0x03A873A4 LDP X22, X21, [X31 + 0x30]
	0x03A873A8 LDP X24, X23, [X31 + 0x20]
	0x03A873AC LDP X30, X25, [X31 + 0x10]
	0x03A873B0 MOV X2, X31
	0x03A873B4 LDR V8, [X31], #0x50
	0x03A873B8 B 0x3C51E28
	0x03A873BC BL 0x1C16F20
	0x03A873C0 STP X30, X19, [X31 - 0x10]!
	0x03A873C4 MOV X19, X0
	0x03A873C8 LDR X0, [X0 + 0x270]
	0x03A873CC CBZ X0, 0x3A873E8
	0x03A873D0 MOV X1, X31
	0x03A873D4 BL 0x3AB5D48
	0x03A873D8 STR X31, [X19 + 0x278]
	0x03A873DC STR X31, [X19 + 0x288]
	0x03A873E0 LDP X30, X19, [X31], #0x10
	0x03A873E4 RET
	0x03A873E8 BL 0x1C16F20
	0x03A873EC STP X30, X19, [X31 - 0x10]!
	0x03A873F0 ADRP X19, 0x95B000
	0x03A873F4 LDRB W8, [X19 + 0x340]
	0x03A873F8 TBNZ X8, 0x0, 0x3A87410
	0x03A873FC ADRP X0, 0x66C000
	0x03A87400 LDR X0, [X0 + 0x970]
	0x03A87404 BL 0x1C16CF4
	0x03A87408 MOVZ W8, 0x1
	0x03A8740C STRB W8, [X19 + 0x340]
	0x03A87410 MOV X0, X31
	0x03A87414 BL 0x3C3BE8C
	0x03A87418 TBZ X0, 0x0, 0x3A87448
	0x03A8741C ADRP X8, 0x66C000
	0x03A87420 LDR X8, [X8 + 0x970]
	0x03A87424 LDR X0, [X8]
	0x03A87428 LDR W8, [X0 + 0xE0]
	0x03A8742C CBNZ W8, 0x3A87434
	0x03A87430 BL 0x1C16DFC
	0x03A87434 MOV X0, X31
	0x03A87438 BL 0x3C01AD8
	0x03A8743C TBZ X0, 0x0, 0x3A87448
	0x03A87440 MOV W0, W31
	0x03A87444 B 0x3A87458
	0x03A87448 MOV X0, X31
	0x03A8744C BL 0x3C3BACC
	0x03A87450 CMP W0, 0x10
	0x03A87454 CSET W0, NE
	0x03A87458 LDP X30, X19, [X31], #0x10
	0x03A8745C RET
	0x03A87460 SUB X31, X31, 0x140
	0x03A87464 STR X29, [X31 + 0x110]
	0x03A87468 STP X30, X21, [X31 + 0x120]
	0x03A8746C STP X20, X19, [X31 + 0x130]
	0x03A87470 ADRP X21, 0x95B000
	0x03A87474 LDRB W8, [X21 + 0x343]
	0x03A87478 MOV X19, X1
	0x03A8747C MOV X20, X0
	0x03A87480 TBNZ X8, 0x0, 0x3A874A4
	0x03A87484 ADRP X0, 0x6CD000
	0x03A87488 LDR X0, [X0 + 0x928]
	0x03A8748C BL 0x1C16CF4
	0x03A87490 ADRP X0, 0x6CD000
	0x03A87494 LDR X0, [X0 + 0x930]
	0x03A87498 BL 0x1C16CF4
	0x03A8749C MOVZ W8, 0x1
	0x03A874A0 STRB W8, [X21 + 0x343]
	0x03A874A4 LDR X0, [X20 + 0x270]
	0x03A874A8 CBZ X0, 0x3A87604
	0x03A874AC MOV X1, X31
	0x03A874B0 BL 0x3AB5CE8
	0x03A874B4 LDR X8, [X20 + 0x288]
	0x03A874B8 CBZ X8, 0x3A87604
	0x03A874BC LDR X9, [X8 + 0x48]
	0x03A874C0 LDUR V0, [X8 + 0x38]
	0x03A874C4 LDUR V1, [X8 + 0x28]
	0x03A874C8 ADD X8, X31, 0xB8
	0x03A874CC MOVZ W0, 0x2
	0x03A874D0 MOV X1, X31
	0x03A874D4 ADD X21, X31, 0xB8
	0x03A874D8 STR X9, [X31 + 0x100]
	0x03A874DC STP V1, V0, [X31 + 0xE0]
	0x03A874E0 BL 0x3C4B204
	0x03A874E4 LDP V0, V1, [X21]
	0x03A874E8 LDR X8, [X31 + 0xD8]
	0x03A874EC LDP V2, V3, [X31 + 0xE0]
	0x03A874F0 LDR X9, [X31 + 0x100]
	0x03A874F4 ADD X0, X31, 0x90
	0x03A874F8 ADD X1, X31, 0x60
	0x03A874FC MOV X2, X31
	0x03A87500 STP V0, V1, [X31 + 0x60]
	0x03A87504 STR X8, [X31 + 0x80]
	0x03A87508 STP V2, V3, [X31 + 0x90]
	0x03A8750C STR X9, [X31 + 0xB0]
	0x03A87510 BL 0x3C4B708
	0x03A87514 LDR X8, [X20 + 0x270]
	0x03A87518 CBZ X8, 0x3A87604
	0x03A8751C MOV W21, W0
	0x03A87520 MOV X0, X8
	0x03A87524 MOV X1, X19
	0x03A87528 MOV X2, X31
	0x03A8752C BL 0x3AB59EC
	0x03A87530 MOV X1, X0
	0x03A87534 TBZ X21, 0x0, 0x3A8754C
	0x03A87538 LDR X2, [X20 + 0x288]
	0x03A8753C MOV X0, X20
	0x03A87540 MOV X3, X31
	0x03A87544 BL 0x3A4B4D8
	0x03A87548 B 0x3A87558
	0x03A8754C MOV X0, X20
	0x03A87550 MOV X2, X31
	0x03A87554 BL 0x3A4B604
	0x03A87558 LDR X0, [X20 + 0x270]
	0x03A8755C CBZ X0, 0x3A87604
	0x03A87560 MOV X1, X19
	0x03A87564 MOV X2, X31
	0x03A87568 BL 0x3AB59EC
	0x03A8756C STR X0, [X20 + 0x278]
	0x03A87570 CBZ X0, 0x3A87604
	0x03A87574 LDR X8, [X0 + 0x48]
	0x03A87578 LDUR V0, [X0 + 0x38]
	0x03A8757C LDUR V1, [X0 + 0x28]
	0x03A87580 STR X8, [X31 + 0x100]
	0x03A87584 STP V1, V0, [X31 + 0xE0]
	0x03A87588 CBZ X19, 0x3A87604
	0x03A8758C ADRP X8, 0x6CD000
	0x03A87590 LDR X8, [X8 + 0x928]
	0x03A87594 LDP V0, V1, [X31 + 0xE0]
	0x03A87598 LDR X9, [X31 + 0x100]
	0x03A8759C ADD X2, X31, 0x30
	0x03A875A0 LDR X1, [X8]
	0x03A875A4 MOV X0, X19
	0x03A875A8 MOV X3, X31
	0x03A875AC STP V0, V1, [X31 + 0x30]
	0x03A875B0 STR X9, [X31 + 0x50]
	0x03A875B4 BL 0x3C4FC28
	0x03A875B8 LDR X8, [X20 + 0x278]
	0x03A875BC CBZ X8, 0x3A87604
	0x03A875C0 ADRP X9, 0x6CD000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 2128
	014 Move X21, 0x95F000
	015 Move W8, [X21+828]
	016 Move X20, X2
	017 Move X19, X0
	018 Move [X31+2120], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {124}
	023 Move X0, 0x670000
	024 Move X0, [X0+2416]
	025 Call 0x1C17CF4
	026 Move X0, 0x6D4000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x6D1000
	030 Move X0, [X0+2328]
	031 Call 0x1C17CF4
	032 Move X0, 0x6D1000
	033 Move X0, [X0+2376]
	034 Call 0x1C17CF4
	035 Move X0, 0x6D4000
	036 Move X0, [X0+344]
	037 Call 0x1C17CF4
	038 Move X0, 0x6D2000
	039 Move X0, [X0+3800]
	040 Call 0x1C17CF4
	041 Move X0, 0x6D2000
	042 Move X0, [X0+3808]
	043 Call 0x1C17CF4
	044 Move X0, 0x6D2000
	045 Move X0, [X0+3816]
	046 Call 0x1C17CF4
	047 Move X0, 0x6D1000
	048 Move X0, [X0+2384]
	049 Call 0x1C17CF4
	050 Move X0, 0x6D2000
	051 Move X0, [X0+3824]
	052 Call 0x1C17CF4
	053 Move X0, 0x6D2000
	054 Move X0, [X0+3552]
	055 Call 0x1C17CF4
	056 Move X0, 0x670000
	057 Move X0, [X0+1432]
	058 Call 0x1C17CF4
	059 Move X0, 0x6D1000
	060 Move X0, [X0+2392]
	061 Call 0x1C17CF4
	062 Move X0, 0x6D1000
	063 Move X0, [X0+2400]
	064 Call 0x1C17CF4
	065 Move X0, 0x6CD000
	066 Move X0, [X0+2480]
	067 Call 0x1C17CF4
	068 Move X0, 0x6D1000
	069 Move X0, [X0+16]
	070 Call 0x1C17CF4
	071 Move X0, 0x6CD000
	072 Move X0, [X0+3200]
	073 Call 0x1C17CF4
	074 Move X0, 0x6D0000
	075 Move X0, [X0+2248]
	076 Call 0x1C17CF4
	077 Move X0, 0x6D3000
	078 Move X0, [X0+472]
	079 Call 0x1C17CF4
	080 Move X0, 0x6D3000
	081 Move X0, [X0+480]
	082 Call 0x1C17CF4
	083 Move X0, 0x6D3000
	084 Move X0, [X0+488]
	085 Call 0x1C17CF4
	086 Move X0, 0x698000
	087 Move X0, [X0+2216]
	088 Call 0x1C17CF4
	089 Move X0, 0x6CF000
	090 Move X0, [X0+4088]
	091 Call 0x1C17CF4
	092 Move X0, 0x6D3000
	093 Move X0, [X0+496]
	094 Call 0x1C17CF4
	095 Move X0, 0x6D0000
	096 Move X0, [X0+2352]
	097 Call 0x1C17CF4
	098 Move X0, 0x6D3000
	099 Move X0, [X0+504]
	100 Call 0x1C17CF4
	101 Move X0, 0x6D2000
	102 Move X0, [X0+4056]
	103 Call 0x1C17CF4
	104 Move X0, 0x6D3000
	105 Move X0, [X0+512]
	106 Call 0x1C17CF4
	107 Move X0, 0x6D2000
	108 Move X0, [X0+1344]
	109 Call 0x1C17CF4
	110 Move X0, 0x6D3000
	111 Move X0, [X0+520]
	112 Call 0x1C17CF4
	113 Move X0, 0x6D0000
	114 Move X0, [X0+2432]
	115 Call 0x1C17CF4
	116 Move X0, 0x6D0000
	117 Move X0, [X0+2440]
	118 Call 0x1C17CF4
	119 Move X0, 0x6D0000
	120 Move X0, [X0+2448]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X21+828], W8
	124 NotImplemented "Instruction MOVI not yet implemented."
	125 Move [X31+2112], W31
	126 Move [X31+2056], X31
	127 Move [X31+2048], W31
	128 Move [X31+1984], W31
	129 Move [X31+1920], W31
	130 Move [X31+1848], X31
	131 Move [X31+1840], X31
	132 Move [X31+1856], X31
	133 Move [X31+1824], X31
	134 Move [X31+1784], X31
	135 Move [X31+1776], X31
	136 Move [X31+1712], W31
	137 Move [X31+1648], W31
	138 Move [X31+1584], W31
	139 Move [X31+1532], W31
	140 Move [X31+1520], X31
	141 Move [X31+1512], X31
	142 Move [X31+1504], W31
	143 Move [X31+1452], W31
	144 Move [X31+1440], W31
	145 Move [X31+1376], W31
	146 Move [X31+1312], W31
	147 Move [X31+131], V0
	148 Move [X31+130], V0
	149 Move [X31+129], V0
	150 Move [X31+127], V0
	151 Move [X31+126], V0
	152 Move [X31+125], V0
	153 Move [X31+123], V0
	154 Move [X31+122], V0
	155 Move [X31+121], V0
	156 Move [X31+119], V0
	157 Move [X31+118], V0
	158 Move [X31+117], V0
	159 Move [X31+113], V0
	160 Move [X31+112], V0
	161 Move [X31+110], V0
	162 Move [X31+109], V0
	163 Move [X31+108], V0
	164 Move [X31+106], V0
	165 Move [X31+105], V0
	166 Move [X31+104], V0
	167 Move [X31+102], V0
	168 Move [X31+101], V0
	169 Move [X31+100], V0
	170 Move [X31+98], V0
	171 Move [X31+97], V0
	172 Move [X31+96], V0
	173 Move [X31+93], V0
	174 Move [X31+92], V0
	175 Move [X31+91], V0
	176 Move [X31+89], V0
	177 Move [X31+88], V0
	178 Move [X31+87], V0
	179 Move [X31+85], V0
	180 Move [X31+84], V0
	181 Move [X31+83], V0
	182 Move [X31+81], V0
	183 Move [X31+80], V0
	184 Move [X31+79], V0
	185 Move [X31+1256], X31
	186 Move X0, [X19+720]
	187 Compare X0, 0
	188 JumpIfEqual {2746}
	189 Move X1, X20
	190 Move X2, X31
	191 Call ForwardLights.PreSetup, X0, X1
	192 Move V2, [X20+256]
	193 Move V0, [X20+272]
	194 Move W8, [X20+288]
	195 Move V1, [X20+15]
	196 Move X24, [X20+216]
	197 Move [X31+131], V0
	198 Move [X31+2112], W8
	199 Move [X31+130], V2
	200 Move [X31+129], V1
	201 Move X0, [X19+224]
	202 Move X8, [X20]
	203 Add X29, X20, 24
	204 Move [X31+112], X8
	205 Compare X0, 0
	206 JumpIfEqual {336}
	207 Move X1, X29
	208 Move X2, X31
	209 Call DebugHandler.IsActiveForCamera, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {336}
	214 Move X0, [X19+224]
	215 Compare X0, 0
	216 JumpIfEqual {2746}
	217 Move X1, X29
	218 Move X2, X31
	219 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {303}
	224 Move X8, 0x6D0000
	225 Move X8, [X8+2376]
	226 Add X22, X20, 240
	227 Move V2, [X22+16]
	228 Move V0, [X22+32]
	229 Move W9, [X22+48]
	230 Move V1, [X22]
	231 Move X0, [X8]
	232 Move [X31+123], V0
	233 Move [X31+1984], W9
	234 Move [X31+122], V2
	235 Move [X31+121], V1
	236 Move W21, [X20+344]
	237 Move W8, [X0+224]
	238 Move W23, [X20+348]
	239 Compare W8, 0
	240 JumpIfNotEqual {242}
	241 Call 0x1C17DFC
	242 Add X0, X31, 1936
	243 Move W1, W21
	244 Move W2, W23
	245 Move X3, X31
	246 Call DebugHandler.ConfigureColorDescriptorForDebugScreen, X0, X1, X2
	247 Move X0, [X19+224]
	248 Compare X0, 0
	249 JumpIfEqual {2746}
	250 Move X1, X31
	251 Call DebugHandler.get_DebugScreenColorHandle, X0
	252 Move X8, 0x6D0000
	253 Move X8, [X8+16]
	254 Move X21, X0
	255 Move X8, [X8]
	256 Move W9, [X8+224]
	257 Compare W9, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X8
	260 Call 0x1C17DFC
	261 Move X8, 0x6D0000
	262 Move X8, [X8+2448]
	263 Add X1, X31, 1936
	264 Move S0, W31
	265 Move W5, 1
	266 Move X6, [X8]
	267 Move X0, X21
	268 Move W2, W31
	269 Move W3, W31
	270 Move W4, W31
	271 Move X7, X31
	272 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	273 Move W8, [X22+48]
	274 Move V2, [X22+16]
	275 Move V0, [X22+32]
	276 Move V1, [X22]
	277 Add X0, X31, 1872
	278 Move [X31+1920], W8
	279 Move [X31+119], V0
	280 Move [X31+117], V1
	281 Move [X31+118], V2
	282 Move W2, [X20+344]
	283 Move W3, [X20+348]
	284 Move W1, 24
	285 Move X4, X31
	286 Call DebugHandler.ConfigureDepthDescriptorForDebugScreen, X0, X1, X2, X3
	287 Move X0, [X19+224]
	288 Compare X0, 0
	289 JumpIfEqual {2746}
	290 Move X1, X31
	291 Call DebugHandler.get_DebugScreenDepthHandle, X0
	292 Move X8, 0x6D0000
	293 Move X8, [X8+2432]
	294 Add X1, X31, 1872
	295 Move S0, W31
	296 Move W5, 1
	297 Move X6, [X8]
	298 Move W2, W31
	299 Move W3, W31
	300 Move W4, W31
	301 Move X7, X31
	302 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	303 Move X0, [X19+224]
	304 Compare X0, 0
	305 JumpIfEqual {2746}
	306 Move X1, X29
	307 Move X2, X31
	308 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfNotEqual {336}
	313 Move X8, [X19+224]
	314 Compare X8, 0
	315 JumpIfEqual {2746}
	316 Move X9, [X8+120]
	317 Compare X9, 0
	318 JumpIfEqual {2746}
	319 Move X9, [X9+48]
	320 Compare X9, 0
	321 JumpIfEqual {2746}
	322 Move X0, [X8+32]
	323 Compare X0, 0
	324 JumpIfEqual {2746}
	325 Move W2, [X9+24]
	326 Move X1, X29
	327 Move X3, X31
	328 Call HDRDebugViewPass.Setup, X0, X1, X2
	329 Move X8, [X19+224]
	330 Compare X8, 0
	331 JumpIfEqual {2746}
	332 Move X1, [X8+32]
	333 Move X0, X19
	334 Move X2, X31
	335 Call ScriptableRenderer.EnqueuePass, X0, X1
	336 Move W8, [X20+384]
	337 Move X21, 0x6CF000
	338 Move X21, [X21+4088]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move [X19+420], W31
	341 Move X0, X19
	342 Move X1, X29
	343 Call UniversalRenderer.IsDepthPrimingEnabled, X0, X1
	344 And W8, W0, 1
	345 Move [X19+421], W8
	346 Move X0, [X21]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X29
	352 Call UniversalRenderer.IsOffscreenDepthTexture, X0
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {397}
	357 Move X21, 0x6D0000
	358 Move X21, [X21+2248]
	359 Move X0, [X21]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {365}
	363 Call 0x1C17DFC
	364 Move X0, [X21]
	365 Move X8, [X0+184]
	366 Move X0, X19
	367 Move X3, X31
	368 Move X1, [X8+16]
	369 Move X2, X1
	370 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	371 Move X0, X19
	372 Move X1, X20
	373 Move X2, X31
	374 Call ScriptableRenderer.SetupRenderPasses, X0, X1
	375 Move X1, [X19+512]
	376 Move X0, X19
	377 Move X2, X31
	378 Call ScriptableRenderer.EnqueuePass, X0, X1
	379 Move X1, [X19+560]
	380 Move X0, X19
	381 Move X2, X31
	382 Call ScriptableRenderer.EnqueuePass, X0, X1
	383 Add X31, X31, 2128
	384 Move X20, [X31+80]
	385 Move X19, [X31+88]
	386 Move X22, [X31+64]
	387 Move X21, [X31+72]
	388 Move X24, [X31+48]
	389 Move X23, [X31+56]
	390 Move X26, [X31+32]
	391 Move X25, [X31+40]
	392 Move X28, [X31+16]
	393 Move X27, [X31+24]
	394 Move X29, [X31+96]
	395 Move X30, [X31+104]
	396 Return 
	397 Move X0, X29
	398 Move X1, X31
	399 Call CameraData.get_isPreviewCamera, X0
	400 Move X8, [X19+264]
	401 Compare X8, 0
	402 JumpIfEqual {2746}
	403 Move W8, [X8+24]
	404 Move W25, W0
	405 Compare W8, 0
	406 JumpIfEqual {415}
	407 Move W8, [X19+776]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 NotImplemented "Instruction CSET not yet implemented."
	410 NotImplemented "Instruction BIC not yet implemented."
	411 Move TEMP, X8
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfEqual {430}
	415 Move X8, 0x66F000
	416 Move X8, [X8+2416]
	417 Move X0, [X8]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1C17DFC
	422 Move X0, X31
	423 Call Application.get_isEditor
	424 Move TEMP, X0
	425 And TEMP, TEMP, 1
	426 Compare TEMP, 1
	427 JumpIfNotEqual {429}
	428 Move W27, [X19+424]
	429 Move W27, W31
	430 Move W27, 1
	431 Move X0, X19
	432 Move X1, X20
	433 Call UniversalRenderer.GetRenderPassInputs, X0, X1
	434 Move X8, [X19+264]
	435 Move W2, [X31+2072]
	436 Move X28, X0
	437 Move [X31+88], X1
	438 Add X3, X31, 2060
	439 Add X4, X31, 2056
	440 Move X0, X19
	441 Move X1, X8
	442 Move X5, X31
	443 Call RenderingLayerUtils.RequireRenderingLayers, X0, X1, X2, X3, X4
	444 Move W21, W0
	445 Call UniversalRenderer.IsGLDevice, X0
	446 Xor W8, W0, 1
	447 And W21, W21, W8
	448 Move TEMP, X21
	449 And TEMP, TEMP, 1
	450 Compare TEMP, 1
	451 JumpIfNotEqual {455}
	452 Move X0, X19
	453 Call UniversalRenderer.get_renderingModeActual, X0
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move W9, W31
	456 Move X23, X28
	457 ShiftRight X23, 16
	458 And X23, X23, 0xFFFF
	459 Move [X31+124], W9
	460 Move [X31+48], W31
	461 Move X0, [X19+728]
	462 Move [X31+72], X24
	463 Move [X31+128], X28
	464 Move [X31+60], W21
	465 Compare X0, 0
	466 JumpIfEqual {522}
	467 Move W8, [X31+2056]
	468 And W9, W21, 1
	469 Move X1, X20
	470 Move X2, X31
	471 Move [X0+20], W9
	472 Move [X0+16], W8
	473 Move [X0+23], W23
	474 Call DeferredLights.ResolveMixedLightingMode, X0, X1
	475 Move X8, [X19+728]
	476 Compare X8, 0
	477 JumpIfEqual {2746}
	478 Move W9, [X20+224]
	479 Move W10, [X8+21]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 NotImplemented "Instruction CSET not yet implemented."
	482 Move [X8+25], W9
	483 Compare W10, 0
	484 JumpIfEqual {522}
	485 Move X0, [X19+256]
	486 Compare X0, 0
	487 JumpIfEqual {2746}
	488 Move X8, 0x6D1000
	489 Move X8, [X8+3824]
	490 Move X1, [X8]
	491 Add X8, X31, 1200
	492 Call List`1<Object>.GetEnumerator, X0
	493 Move V0, [X31+75]
	494 Move X8, [X31+1216]
	495 Move X21, 0x6D1000
	496 Move [X31+115], V0
	497 Move [X31+1856], X8
	498 Move X21, [X21+3808]
	499 Move X1, [X21]
	500 Add X0, X31, 1840
	501 Call Enumerator<Object>.MoveNext, X0
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {517}
	506 Move X8, [X31+1856]
	507 Compare X8, 0
	508 JumpIfEqual {2747}
	509 Move W8, [X8+16]
	510 Subtract W8, W8, 220
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move X0, [X19+728]
	513 Compare X0, 0
	514 JumpIfEqual {2751}
	515 Move X1, X31
	516 Call DeferredLights.DisableFramebufferFetchInput, X0
	517 Move X8, 0x6D1000
	518 Move X8, [X8+3800]
	519 Add X0, X31, 1840
	520 Move X1, [X8]
	521 Call Enumerator<Object>.Dispose, X0
	522 Move W8, [X20+416]
	523 Compare W8, 0
	524 JumpIfEqual {529}
	525 Add X0, X19, 840
	526 Move X1, X31
	527 Call PostProcessPasses.get_isCreated, X0
	528 And W21, W0, 1
	529 Move W21, W31
	530 Move W8, [X20+692]
	531 Compare W8, 0
	532 JumpIfEqual {541}
	533 Add X0, X19, 840
	534 Move X1, X31
	535 Call PostProcessPasses.get_isCreated, X0
	536 And W22, W0, 1
	537 Compare W21, 0
	538 JumpIfEqual {544}
	539 Move W8, [X20+393]
	540 Move [X31+140], W8
	541 Move W22, W31
	542 Compare W21, 0
	543 JumpIfNotEqual {539}
	544 Move [X31+140], W31
	545 Move W8, [X20+416]
	546 Compare W8, 0
	547 JumpIfEqual {552}
	548 Add X0, X19, 840
	549 Move X1, X31
	550 Call PostProcessPasses.get_isCreated, X0
	551 Move W24, W0
	552 Move W24, W31
	553 Move X0, X29
	554 Move X1, X31
	555 Call CameraData.get_isSceneViewCamera, X0
	556 Move [X31+96], W21
	557 Move TEMP, X0
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfNotEqual {562}
	561 Move W26, 1
	562 Move X0, X29
	563 Move X1, X31
	564 Call CameraData.get_isPreviewCamera, X0
	565 And W26, W0, 1
	566 Move W21, 1
	567 Move TEMP, X28
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfEqual {577}
	571 Move W8, [X20+391]
	572 Compare W8, 0
	573 JumpIfNotEqual {577}
	574 Move W8, [X19+740]
	575 NotImplemented "Instruction CMP not yet implemented."
	576 NotImplemented "Instruction CSET not yet implemented."
	577 Move X0, [X19+464]
	578 Compare X0, 0
	579 JumpIfEqual {2746}
	580 Move X1, X20
	581 Move X2, X31
	582 Call MainLightShadowCasterPass.Setup, X0, X1
	583 Move X8, [X19+472]
	584 Move [X31+64], W0
	585 Compare X8, 0
	586 JumpIfEqual {2746}
	587 Move X0, X8
	588 Move X1, X20
	589 Move X2, X31
	590 Call AdditionalLightsShadowCasterPass.Setup, X0, X1
	591 Move X8, [X19+552]
	592 Move [X31+100], W0
	593 Compare X8, 0
	594 JumpIfEqual {2746}
	595 Move X0, X8
	596 Move X1, X31
	597 Move [X31+52], W22
	598 Call TransparentSettingsPass.Setup, X0
	599 Move W8, [X31+140]
	600 Move [X31+56], W0
	601 Or W8, W21, W8
	602 Compare W8, 0
	603 JumpIfEqual {612}
	604 Move W8, [X19+744]
	605 Move X0, X19
	606 Move X1, X29
	607 NotImplemented "Instruction CMP not yet implemented."
	608 NotImplemented "Instruction CSET not yet implemented."
	609 Call UniversalRenderer.CanCopyDepth, X0, X1
	610 NotImplemented "Instruction ORN not yet implemented."
	611 And W8, W8, 1
	612 Or W9, W25, W28
	613 And W9, W9, 1
	614 Or W9, W9, W23
	615 Or W9, W9, W26
	616 Or W8, W9, W8
	617 Move [X31+104], X23
	618 Compare W8, 0
	619 JumpIfEqual {625}
	620 Move X0, X19
	621 Call UniversalRenderer.get_renderingModeActual, X0
	622 NotImplemented "Instruction CMP not yet implemented."
	623 NotImplemented "Instruction CSET not yet implemented."
	624 Or W22, W8, W23
	625 Move W22, W31
	626 Move W8, [X19+421]
	627 Move [X31+68], W24
	628 Move [X31+44], W26
	629 NotImplemented "Instruction CMP not yet implemented."
	630 NotImplemented "Instruction CSET not yet implemented."
	631 Compare W21, 0
	632 JumpIfEqual {650}
	633 Move X8, [X19+536]
	634 Compare X8, 0
	635 JumpIfEqual {2746}
	636 Move X9, [X31+88]
	637 Move W10, [X19+744]
	638 Move W11, 300
	639 Move W12, 500
	640 Move X9, X9
	641 ShiftRight X9, 32
	642 And X9, X9, 0x7FFFFFFF
	643 Subtract W9, W9, 1
	644 NotImplemented "Instruction CMP not yet implemented."
	645 NotImplemented "Instruction CSEL not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 NotImplemented "Instruction CSEL not yet implemented."
	648 And X31, X28, 1
	649 NotImplemented "Instruction CSEL not yet implemented."
	650 Move W8, [X31+140]
	651 Or W8, W26, W8
	652 Compare W8, 0
	653 JumpIfEqual {1125}
	654 Move X8, [X19+536]
	655 Compare X8, 0
	656 JumpIfEqual {2746}
	657 Move W21, W31
	658 Move W9, 500
	659 Move [X8+16], W9
	660 Move X0, X19
	661 Move X1, X29
	662 Call UniversalRenderer.RequiresIntermediateColorTexture, X0, X1
	663 Move W8, [X31+140]
	664 Move W28, [X20+472]
	665 Move W26, W0
	666 Move X0, X19
	667 Or W8, W21, W8
	668 NotImplemented "Instruction CMP not yet implemented."
	669 NotImplemented "Instruction CSET not yet implemented."
	670 Call UniversalRenderer.get_renderingModeActual, X0
	671 NotImplemented "Instruction CMP not yet implemented."
	672 Move W8, [X19+420]
	673 Xor W8, W8, 1
	674 Move W8, W31
	675 Move X0, [X20+400]
	676 Compare X0, 0
	677 JumpIfEqual {2746}
	678 Move X9, [X31+128]
	679 NotImplemented "Instruction ORN not yet implemented."
	680 Or W13, W22, W23
	681 Xor W11, W28, 1
	682 Move X21, X9
	683 ShiftRight X21, 24
	684 And X21, X21, 0x7FFFFFFF
	685 Move X9, X9
	686 ShiftRight X9, 32
	687 And X9, X9, 0x7FFFFFFF
	688 Or W12, W27, W21
	689 Or W9, W12, W9
	690 And W27, W10, 1
	691 Or W9, W9, W26
	692 And W22, W9, W27
	693 Move W9, [X31+124]
	694 Xor W12, W13, 1
	695 Move [X31+80], W13
	696 And W12, W24, W12
	697 Move W13, [X19+421]
	698 Or W10, W11, W12
	699 Or W9, W10, W9
	700 Or W8, W9, W8
	701 Move X1, X31
	702 Or W28, W8, W13
	703 Call XRPass.get_enabled, X0
	704 And W31, W0, 1
	705 NotImplemented "Instruction CSEL not yet implemented."
	706 Or W22, W8, W22
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X0, X31
	709 NotImplemented "Instruction CSET not yet implemented."
	710 Call SystemInfo.get_graphicsDeviceType
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move W8, [X19+780]
	713 Compare W8, 0
	714 JumpIfEqual {720}
	715 NotImplemented "Instruction CMP not yet implemented."
	716 NotImplemented "Instruction CSET not yet implemented."
	717 Or W8, W28, W8
	718 NotImplemented "Instruction CMP not yet implemented."
	719 NotImplemented "Instruction CSET not yet implemented."
	720 Move X24, 0x6CC000
	721 Move X24, [X24+2480]
	722 Move X0, [X24]
	723 Move W8, [X0+224]
	724 Compare W8, 0
	725 JumpIfNotEqual {727}
	726 Call 0x1C17DFC
	727 Add X8, X31, 1200
	728 Move X0, X31
	729 Call RTHandles.get_rtHandleProperties
	730 Move V0, [X31+1232]
	731 Move S1, 1
	732 NotImplemented "Instruction FCMP not yet implemented."
	733 Move X0, [X24]
	734 Move W8, [X0+224]
	735 Compare W8, 0
	736 JumpIfNotEqual {738}
	737 Call 0x1C17DFC
	738 Add X8, X31, 1200
	739 Move X0, X31
	740 Call RTHandles.get_rtHandleProperties
	741 Move V0, [X31+1236]
	742 Move S1, 1
	743 NotImplemented "Instruction FCMP not yet implemented."
	744 Or W8, W28, W23
	745 NotImplemented "Instruction CMP not yet implemented."
	746 NotImplemented "Instruction CSET not yet implemented."
	747 Move W8, [X19+420]
	748 Compare W8, 0
	749 JumpIfNotEqual {753}
	750 Move W8, [X19+421]
	751 Compare W8, 0
	752 JumpIfEqual {756}
	753 Or W8, W28, W23
	754 NotImplemented "Instruction CMP not yet implemented."
	755 NotImplemented "Instruction CSET not yet implemented."
	756 Move V0, [X31+129]
	757 Move V1, [X31+130]
	758 Move V2, [X31+131]
	759 Move W8, [X31+2112]
	760 Add X0, X31, 2000
	761 Move W1, W31
	762 Move X2, X31
	763 Move [X31+125], V0
	764 Move [X31+126], V1
	765 Move [X31+127], V2
	766 Move [X31+2048], W8
	767 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	768 Add X0, X31, 2000
	769 Move W1, W31
	770 Move X2, X31
	771 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	772 Add X0, X31, 2000
	773 Move W1, W31
	774 Move X2, X31
	775 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	776 Move X0, [X19+624]
	777 Move V0, [X31+125]
	778 Move V1, [X31+126]
	779 Move V2, [X31+127]
	780 Move W8, [X31+2048]
	781 Move [X31+75], V0
	782 Move [X31+76], V1
	783 Move [X31+77], V2
	784 Move [X31+1248], W8
	785 Compare X0, 0
	786 JumpIfEqual {2746}
	787 Move V0, [X31+75]
	788 Move V1, [X31+76]
	789 Move V2, [X31+77]
	790 Move W8, [X31+1248]
	791 Add X1, X31, 1136
	792 Move W2, 1
	793 Move X3, X31
	794 Move [X31+71], V0
	795 Move [X31+72], V1
	796 Move [X31+73], V2
	797 Move [X31+1184], W8
	798 Call RenderTargetBufferSystem.SetCameraSettings, X0, X1, X2
	799 Move W8, [X20+224]
	800 Compare W8, 0
	801 JumpIfEqual {845}
	802 Move X0, [X20+544]
	803 Compare X0, 0
	804 JumpIfEqual {2746}
	805 Move X8, 0x6D0000
	806 Move X8, [X8+2328]
	807 Add X1, X31, 1784
	808 Move X2, [X8]
	809 Call 0x21A5990, X0, X1
	810 Move X0, [X31+1784]
	811 Move X24, [X31+112]
	812 Compare X0, 0
	813 JumpIfEqual {2746}
	814 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	815 Compare X0, 0
	816 JumpIfEqual {2746}
	817 Move X8, 0x6CF000
	818 Move X8, [X8+4088]
	819 Move X26, X0
	820 Move X1, [X8]
	821 Move X8, [X0]
	822 NotImplemented "Instruction CMP not yet implemented."
	823 Move X0, [X19+624]
	824 Move X8, [X26+624]
	825 NotImplemented "Instruction CMP not yet implemented."
	826 Compare X0, 0
	827 JumpIfEqual {2746}
	828 Move X1, X31
	829 Call RenderTargetBufferSystem.Dispose, X0
	830 Move X0, [X26+624]
	831 Move [X19+624], X0
	832 Compare X0, 0
	833 JumpIfEqual {2746}
	834 Move X1, X31
	835 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	836 Move [X19+632], X0
	837 Move X2, [X26+648]
	838 NotImplemented "Instruction CMP not yet implemented."
	839 Move X1, X0
	840 NotImplemented "Instruction CSET not yet implemented."
	841 Move [X19+648], X2
	842 Move X8, [X26+664]
	843 Move W26, [X31+80]
	844 Move [X19+664], X8
	845 Move X0, [X31+72]
	846 Move [X31+32], X29
	847 Compare X0, 0
	848 JumpIfEqual {2746}
	849 Move X1, X31
	850 Call Camera.get_sceneViewFilterMode, X0
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Or W29, W28, W23
	853 NotImplemented "Instruction CSET not yet implemented."
	854 NotImplemented "Instruction CMP not yet implemented."
	855 Add X8, X31, 1200
	856 Move W0, 2
	857 Move X1, X31
	858 NotImplemented "Instruction CSET not yet implemented."
	859 Call RenderTargetIdentifier.op_Implicit, X0
	860 Move V0, [X31+75]
	861 Move V1, [X31+76]
	862 Move X8, [X31+1232]
	863 Move [X31+112], V0
	864 Move [X31+113], V1
	865 Move [X31+1824], X8
	866 Move X0, [X20+400]
	867 Compare X0, 0
	868 JumpIfEqual {2746}
	869 Move X1, X31
	870 Call XRPass.get_enabled, X0
	871 Move TEMP, X0
	872 And TEMP, TEMP, 1
	873 Compare TEMP, 1
	874 JumpIfNotEqual {884}
	875 Move X8, [X20+400]
	876 Compare X8, 0
	877 JumpIfEqual {2746}
	878 Move X9, [X8+80]
	879 Move V1, [X8+48]
	880 Move V0, [X8+64]
	881 Move [X31+1824], X9
	882 Move [X31+113], V0
	883 Move [X31+112], V1
	884 Move X8, [X19+664]
	885 And W22, W28, W22
	886 Add X26, X19, 664
	887 Compare X8, 0
	888 JumpIfEqual {1126}
	889 NotImplemented "Instruction LDUR not yet implemented."
	890 NotImplemented "Instruction LDUR not yet implemented."
	891 Move X8, [X8+72]
	892 Move V2, [X31+112]
	893 Move V3, [X31+113]
	894 Move X9, [X31+1824]
	895 Add X0, X31, 1040
	896 Add X1, X31, 992
	897 Move X2, X31
	898 Move [X31+1072], X8
	899 Move [X31+66], V1
	900 Move [X31+65], V0
	901 Move [X31+992], V2
	902 Move [X31+1000], V3
	903 Move [X31+1024], X9
	904 Call RenderTargetIdentifier.op_Inequality, X0, X1
	905 Move X24, [X31+112]
	906 Move TEMP, X0
	907 And TEMP, TEMP, 1
	908 Compare TEMP, 1
	909 JumpIfNotEqual {920}
	910 Move V0, [X31+112]
	911 Move V1, [X31+113]
	912 Move X8, [X31+1824]
	913 Add X1, X31, 944
	914 Move X0, X26
	915 Move X2, X31
	916 Move [X31+944], V0
	917 Move [X31+952], V1
	918 Move [X31+976], X8
	919 Call RTHandleStaticHelpers.SetRTHandleUserManagedWrapper, X0, X1
	920 Compare W22, 0
	921 JumpIfEqual {929}
	922 Move X1, [X31+2120]
	923 Move X5, [X31+32]
	924 Add X2, X31, 2064
	925 Move X0, X19
	926 Move W3, W31
	927 Move X4, X24
	928 Call UniversalRenderer.CreateCameraRenderTarget, X0, X1, X2, X3, X4, X5
	929 Move X9, [X19+512]
	930 Compare X9, 0
	931 JumpIfEqual {2746}
	932 Xor W8, W22, 1
	933 Move [X9+385], W8
	934 Move X9, [X19+560]
	935 Compare X9, 0
	936 JumpIfEqual {2746}
	937 Move [X9+385], W8
	938 Move X9, [X19+528]
	939 Compare X9, 0
	940 JumpIfEqual {2746}
	941 Move [X9+224], W8
	942 Move X9, [X19+592]
	943 Compare X9, 0
	944 JumpIfEqual {2746}
	945 Move [X9+232], W8
	946 Move TEMP, X23
	947 And TEMP, TEMP, 1
	948 Compare TEMP, 1
	949 JumpIfNotEqual {974}
	950 Move X0, [X19+624]
	951 Compare X0, 0
	952 JumpIfEqual {2746}
	953 Move X1, X31
	954 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	955 Move X1, X0
	956 Move W8, [X31+2060]
	957 Move W9, 1
	958 Compare W8, 0
	959 JumpIfEqual {1150}
	960 NotImplemented "Instruction CMP not yet implemented."
	961 Move X0, 0x677000
	962 Move X0, [X0+1888]
	963 Call 0x1C17D08
	964 Call 0x1C17F10
	965 Move X1, X31
	966 Move X19, X0
	967 Call ArgumentOutOfRangeException..ctor, X0
	968 Move X0, 0x6D3000
	969 Move X0, [X0+528]
	970 Call 0x1C17D08
	971 Move X1, X0
	972 Move X0, X19
	973 Call 0x1C17DEC
	974 Move X1, [X26]
	975 NotImplemented "Instruction CMP not yet implemented."
	976 Move W8, 664
	977 Move W9, 656
	978 Move [X19+632], X1
	979 NotImplemented "Instruction CSEL not yet implemented."
	980 Move X2, [X19]
	981 Move W26, [X31+80]
	982 Move X29, [X31+32]
	983 Move [X19+648], X2
	984 Move X8, [X19+264]
	985 Compare X8, 0
	986 JumpIfEqual {2746}
	987 Move W8, [X8+24]
	988 NotImplemented "Instruction CMP not yet implemented."
	989 NotImplemented "Instruction CSET not yet implemented."
	990 Or W8, W25, W8
	991 Move TEMP, X8
	992 And TEMP, TEMP, 1
	993 Compare TEMP, 1
	994 JumpIfEqual {1006}
	995 Move X0, [X19+624]
	996 Compare X0, 0
	997 JumpIfEqual {2746}
	998 Move X1, X31
	999 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	1000 Move X1, X0
	1001 Move X0, X19
	1002 Move X2, X31
	1003 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	1004 Move X1, [X19+632]
	1005 Move X2, [X19+648]
	1006 Move W8, [X20+392]
	1007 Move X0, X19
	1008 Move X3, X31
	1009 NotImplemented "Instruction CMP not yet implemented."
	1010 NotImplemented "Instruction CSINC not yet implemented."
	1011 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	1012 Move X22, 0x6D3000
	1013 Move X22, [X22+488]
	1014 Move X25, [X19+256]
	1015 Move X0, [X22]
	1016 Move W8, [X0+224]
	1017 Compare W8, 0
	1018 JumpIfNotEqual {1021}
	1019 Call 0x1C17DFC
	1020 Move X0, [X22]
	1021 Move X8, [X0+184]
	1022 Move X21, [X8+8]
	1023 Compare X21, 0
	1024 JumpIfNotEqual {1047}
	1025 Move W8, [X0+224]
	1026 Compare W8, 0
	1027 JumpIfNotEqual {1030}
	1028 Call 0x1C17DFC
	1029 Move X0, [X22]
	1030 Move X9, 0x6D0000
	1031 Move X8, [X0+184]
	1032 Move X9, [X9+2400]
	1033 Move X26, [X8]
	1034 Move X0, [X9]
	1035 Call 0x1C17F10
	1036 Move X8, 0x6D3000
	1037 Move X8, [X8+472]
	1038 Move X1, X26
	1039 Move X3, X31
	1040 Move X21, X0
	1041 Move X2, [X8]
	1042 Call Predicate`1<Object>..ctor, X0, X1, X2
	1043 Move X8, [X22]
	1044 Move W26, [X31+80]
	1045 Move X8, [X8+184]
	1046 Move [X8+8], X21
	1047 Compare X25, 0
	1048 JumpIfEqual {2746}
	1049 Move X8, 0x6D0000
	1050 Move X8, [X8+2384]
	1051 Move X0, X25
	1052 Move X1, X21
	1053 Move X2, [X8]
	1054 Call List`1<Object>.Find, X0, X1
	1055 Move W8, [X31+64]
	1056 Move [X31+80], X0
	1057 Move TEMP, X8
	1058 And TEMP, TEMP, 1
	1059 Compare TEMP, 1
	1060 JumpIfNotEqual {1065}
	1061 Move X1, [X19+464]
	1062 Move X0, X19
	1063 Move X2, X31
	1064 Call ScriptableRenderer.EnqueuePass, X0, X1
	1065 Move W8, [X31+100]
	1066 Move TEMP, X8
	1067 And TEMP, TEMP, 1
	1068 Compare TEMP, 1
	1069 JumpIfNotEqual {1074}
	1070 Move X1, [X19+472]
	1071 Move X0, X19
	1072 Move X2, X31
	1073 Call ScriptableRenderer.EnqueuePass, X0, X1
	1074 And W21, W23, W27
	1075 Move TEMP, X26
	1076 And TEMP, TEMP, 1
	1077 Compare TEMP, 1
	1078 JumpIfNotEqual {1080}
	1079 Move W8, W31
	1080 Move W8, [X20+391]
	1081 Move W9, [X31+140]
	1082 Or W8, W9, W8
	1083 Move X9, [X31+128]
	1084 NotImplemented "Instruction CMP not yet implemented."
	1085 And W9, W9, 1
	1086 NotImplemented "Instruction CSINC not yet implemented."
	1087 Move X0, [X19+224]
	1088 NotImplemented "Instruction CMP not yet implemented."
	1089 And W27, W8, W28
	1090 NotImplemented "Instruction CSET not yet implemented."
	1091 Compare X0, 0
	1092 JumpIfEqual {1174}
	1093 Move X1, X29
	1094 Move X2, X31
	1095 Call DebugHandler.IsActiveForCamera, X0, X1
	1096 Move TEMP, X0
	1097 And TEMP, TEMP, 1
	1098 Compare TEMP, 1
	1099 JumpIfNotEqual {1174}
	1100 Move X0, [X19+224]
	1101 Compare X0, 0
	1102 JumpIfEqual {2746}
	1103 Add X1, X31, 1780
	1104 Move X2, X31
	1105 Call DebugHandler.TryGetFullscreenDebugMode, X0, X1
	1106 Move W8, [X31+1780]
	1107 Move X0, [X19+224]
	1108 NotImplemented "Instruction CMP not yet implemented."
	1109 NotImplemented "Instruction CSET not yet implemented."
	1110 Compare X0, 0
	1111 JumpIfEqual {2746}
	1112 Move X1, X31
	1113 Or W26, W26, W8
	1114 Call DebugHandler.get_IsLightingActive, X0
	1115 Move TEMP, X0
	1116 And TEMP, TEMP, 1
	1117 Compare TEMP, 1
	1118 JumpIfNotEqual {1121}
	1119 Move W8, [X31+100]
	1120 And W8, W8, 1
	1121 Move W8, [X31+44]
	1122 Compare W8, 0
	1123 JumpIfEqual {1154}
	1124 Move W8, W31
	1125 Move W21, W31
	1126 Move V0, [X31+112]
	1127 Move V1, [X31+113]
	1128 Move X8, [X31+1824]
	1129 Move X0, [X24]
	1130 Move [X31+75], V0
	1131 Move [X31+76], V1
	1132 Move [X31+1232], X8
	1133 Move W8, [X0+224]
	1134 Compare W8, 0
	1135 JumpIfNotEqual {1137}
	1136 Call 0x1C17DFC
	1137 Move V0, [X31+75]
	1138 Move V1, [X31+76]
	1139 Move X8, [X31+1232]
	1140 Add X0, X31, 1088
	1141 Move X1, X31
	1142 Move [X31+68], V0
	1143 Move [X31+69], V1
	1144 Move [X31+1120], X8
	1145 Call RTHandles.Alloc, X0
	1146 Move X24, [X31+112]
	1147 Move [X26], X0
	1148 Compare W22, 0
	1149 JumpIfNotEqual {922}
	1150 Move W8, 1
	1151 Move [X31+48], W8
	1152 Move [X31+124], W31
	1153 Move W23, 1
	1154 Move W27, W31
	1155 Move W21, W31
	1156 Move W26, W31
	1157 Move [X31+68], W31
	1158 Move [X19+421], W31
	1159 Move W9, [X19+420]
	1160 NotImplemented "Instruction CMP not yet implemented."
	1161 NotImplemented "Instruction CSET not yet implemented."
	1162 NotImplemented "Instruction CMP not yet implemented."
	1163 NotImplemented "Instruction CSET not yet implemented."
	1164 Move [X31+100], W8
	1165 Compare W9, 0
	1166 JumpIfEqual {1174}
	1167 Move X0, [X19+224]
	1168 Compare X0, 0
	1169 JumpIfEqual {2746}
	1170 Move X1, X31
	1171 Call DebugHandler.get_IsRenderPassSupported, X0
	1172 And W8, W0, 1
	1173 Move [X19+420], W8
	1174 Move X8, [X20+464]
	1175 Compare X8, 0
	1176 JumpIfEqual {2746}
	1177 Move W9, [X19+421]
	1178 Move X0, X19
	1179 Move [X8+421], W9
	1180 Call UniversalRenderer.get_renderingModeActual, X0
	1181 NotImplemented "Instruction CMP not yet implemented."
	1182 Move X0, [X19+728]
	1183 Compare X0, 0
	1184 JumpIfEqual {2746}
	1185 Move W8, [X0+21]
	1186 Compare W8, 0
	1187 JumpIfEqual {1195}
	1188 Move X8, [X31+88]
	1189 NotImplemented "Instruction CMP not yet implemented."
	1190 Move W8, [X19+420]
	1191 Compare W8, 0
	1192 JumpIfNotEqual {1195}
	1193 Move X1, X31
	1194 Call DeferredLights.DisableFramebufferFetchInput, X0
	1195 Move X0, X19
	1196 Call UniversalRenderer.get_renderingModeActual, X0
	1197 NotImplemented "Instruction CMP not yet implemented."
	1198 Move W8, [X19+420]
	1199 Xor W8, W8, 1
	1200 Move W8, W31
	1201 NotImplemented "Instruction CMP not yet implemented."
	1202 NotImplemented "Instruction CSET not yet implemented."
	1203 Or W9, W26, W9
	1204 Or W8, W8, W9
	1205 Compare W8, 0
	1206 JumpIfEqual {1307}
	1207 Move V0, [X31+129]
	1208 Move V1, [X31+130]
	1209 Move V2, [X31+131]
	1210 Move W8, [X31+2112]
	1211 Move [X31+108], V0
	1212 Move [X31+109], V1
	1213 Move [X31+110], V2
	1214 Move [X31+1776], W8
	1215 Compare W26, 0
	1216 JumpIfEqual {1220}
	1217 Move X0, X19
	1218 Call UniversalRenderer.get_renderingModeActual, X0
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move X8, 0x6D0000
	1221 Move X8, [X8+16]
	1222 Move X0, [X8]
	1223 Move W8, [X0+224]
	1224 Compare W8, 0
	1225 JumpIfNotEqual {1227}
	1226 Call 0x1C17DFC
	1227 Move W0, 49
	1228 Move W1, 4
	1229 Move X2, X31
	1230 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	1231 Move TEMP, X0
	1232 And TEMP, TEMP, 1
	1233 Compare TEMP, 1
	1234 JumpIfNotEqual {1238}
	1235 Move W21, W31
	1236 Move W25, W31
	1237 Move W1, 49
	1238 Move W1, W31
	1239 Move W25, 24
	1240 Move W21, 92
	1241 Add X0, X31, 1728
	1242 Move X2, X31
	1243 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	1244 Add X0, X31, 1728
	1245 Move W1, W25
	1246 Move X2, X31
	1247 Move [X31+1756], W21
	1248 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	1249 Move X8, 0x6CF000
	1250 Move X8, [X8+16]
	1251 Add X21, X19, 672
	1252 Move X0, [X8]
	1253 Move W8, 1
	1254 Move [X31+1736], W8
	1255 Move W8, [X0+224]
	1256 Compare W8, 0
	1257 JumpIfNotEqual {1259}
	1258 Call 0x1C17DFC
	1259 Move X8, 0x6D1000
	1260 Move X8, [X8+4056]
	1261 Add X1, X31, 1728
	1262 Move S0, W31
	1263 Move W3, 1
	1264 Move X6, [X8]
	1265 Move W5, 1
	1266 Move X0, X21
	1267 Move W2, W31
	1268 Move W4, W31
	1269 Move X7, X31
	1270 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	1271 Move X8, [X21]
	1272 Compare X8, 0
	1273 JumpIfEqual {2746}
	1274 Move X9, [X8+72]
	1275 NotImplemented "Instruction LDUR not yet implemented."
	1276 NotImplemented "Instruction LDUR not yet implemented."
	1277 Move X1, [X8+88]
	1278 Move [X31+1232], X9
	1279 Move [X31+76], V0
	1280 Move [X31+75], V1
	1281 Compare X24, 0
	1282 JumpIfEqual {2746}
	1283 Move V0, [X31+75]
	1284 Move V1, [X31+76]
	1285 Move X8, [X31+1232]
	1286 Add X2, X31, 896
	1287 Move X0, X24
	1288 Move X3, X31
	1289 Move [X31+896], V0
	1290 Move [X31+904], V1
	1291 Move [X31+928], X8
	1292 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1293 Move X8, 0x6CB000
	1294 Move X8, [X8+3200]
	1295 Move X0, [X8]
	1296 Move W8, [X0+224]
	1297 Compare W8, 0
	1298 JumpIfNotEqual {1300}
	1299 Call 0x1C17DFC
	1300 Add X0, X31, 2120
	1301 Move X1, X24
	1302 Move X2, X31
	1303 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	1304 Move X0, X24
	1305 Move X1, X31
	1306 Call CommandBuffer.Clear, X0
	1307 Move W8, [X31+60]
	1308 Move [X31+140], W27
	1309 Move TEMP, X8
	1310 And TEMP, TEMP, 1
	1311 Compare TEMP, 1
	1312 JumpIfNotEqual {1386}
	1313 Move X22, 0x6D2000
	1314 Move X22, [X22+496]
	1315 Move X0, X19
	1316 Add X25, X19, 688
	1317 Move X27, [X22]
	1318 Call UniversalRenderer.get_renderingModeActual, X0
	1319 NotImplemented "Instruction CMP not yet implemented."
	1320 Move X0, [X19+728]
	1321 Compare X0, 0
	1322 JumpIfEqual {2746}
	1323 Move X1, X31
	1324 Call DeferredLights.get_UseRenderingLayers, X0
	1325 Move TEMP, X0
	1326 And TEMP, TEMP, 1
	1327 Compare TEMP, 1
	1328 JumpIfNotEqual {1345}
	1329 Move X0, [X19+728]
	1330 Compare X0, 0
	1331 JumpIfEqual {2746}
	1332 Move X21, [X0+48]
	1333 Move X1, X31
	1334 Call DeferredLights.get_GBufferRenderingLayers, X0
	1335 Compare X21, 0
	1336 JumpIfEqual {2746}
	1337 Move W8, [X21+24]
	1338 NotImplemented "Instruction CMP not yet implemented."
	1339 Add X25, X21, W0
	1340 Add X25, X25, 32
	1341 Move X8, [X25]
	1342 Compare X8, 0
	1343 JumpIfEqual {2746}
	1344 Move X27, [X8+88]
	1345 Move V0, [X31+129]
	1346 Move V1, [X31+130]
	1347 Move V2, [X31+131]
	1348 Move W8, [X31+2112]
	1349 Add X0, X31, 1664
	1350 Move W1, W31
	1351 Move X2, X31
	1352 Move [X31+104], V0
	1353 Move [X31+105], V1
	1354 Move [X31+106], V2
	1355 Move [X31+1712], W8
	1356 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	1357 Move W8, [X31+124]
	1358 Move TEMP, X8
	1359 And TEMP, TEMP, 1
	1360 Compare TEMP, 1
	1361 JumpIfEqual {1364}
	1362 Move W8, 1
	1363 Move [X31+1672], W8
	1364 Move X0, X19
	1365 Call UniversalRenderer.get_renderingModeActual, X0
	1366 NotImplemented "Instruction CMP not yet implemented."
	1367 Move X0, [X19+728]
	1368 Compare X0, 0
	1369 JumpIfEqual {2746}
	1370 Move X1, X31
	1371 Call DeferredLights.get_UseRenderingLayers, X0
	1372 Move TEMP, X0
	1373 And TEMP, TEMP, 1
	1374 Compare TEMP, 1
	1375 JumpIfNotEqual {1398}
	1376 Move X21, [X19+728]
	1377 Compare X21, 0
	1378 JumpIfEqual {2746}
	1379 Move X0, X21
	1380 Move X1, X31
	1381 Call DeferredLights.get_GBufferRenderingLayers, X0
	1382 Move W1, W0
	1383 Move X0, X21
	1384 Move X2, X31
	1385 Call DeferredLights.GetGBufferFormat, X0, X1
	1386 Move X0, X19
	1387 Call UniversalRenderer.get_renderingModeActual, X0
	1388 NotImplemented "Instruction CMP not yet implemented."
	1389 Move X0, [X19+728]
	1390 Compare X0, 0
	1391 JumpIfEqual {2746}
	1392 Move X1, X31
	1393 Call DeferredLights.get_UseRenderingLayers, X0
	1394 Move TEMP, X0
	1395 And TEMP, TEMP, 1
	1396 Compare TEMP, 1
	1397 JumpIfEqual {1313}
	1398 Move W0, [X31+2056]
	1399 Move X1, X31
	1400 Call RenderingLayerUtils.GetFormat, X0
	1401 Move W1, W0
	1402 Add X0, X31, 1664
	1403 Move X2, X31
	1404 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	1405 Move X0, X19
	1406 Call UniversalRenderer.get_renderingModeActual, X0
	1407 NotImplemented "Instruction CMP not yet implemented."
	1408 Move X0, [X19+728]
	1409 Compare X0, 0
	1410 JumpIfEqual {2746}
	1411 Move X1, X31
	1412 Call DeferredLights.get_UseRenderingLayers, X0
	1413 Move TEMP, X0
	1414 And TEMP, TEMP, 1
	1415 Compare TEMP, 1
	1416 JumpIfNotEqual {1444}
	1417 Move X21, [X19+728]
	1418 Move V0, [X31+104]
	1419 Move V1, [X31+105]
	1420 Move V2, [X31+106]
	1421 Move W8, [X31+1712]
	1422 Move [X31+75], V0
	1423 Move [X31+76], V1
	1424 Move [X31+77], V2
	1425 Move [X31+1248], W8
	1426 Compare X21, 0
	1427 JumpIfEqual {2746}
	1428 Move X0, X21
	1429 Move X1, X31
	1430 Call DeferredLights.get_GBufferRenderingLayers, X0
	1431 Move V0, [X31+75]
	1432 Move V1, [X31+76]
	1433 Move V2, [X31+77]
	1434 Move W8, [X31+1248]
	1435 Move W2, W0
	1436 Add X1, X31, 832
	1437 Move X0, X21
	1438 Move X3, X31
	1439 Move [X31+832], V0
	1440 Move [X31+840], V1
	1441 Move [X31+54], V2
	1442 Move [X31+880], W8
	1443 Call DeferredLights.ReAllocateGBufferIfNeeded, X0, X1, X2
	1444 Move X8, 0x6CF000
	1445 Move X8, [X8+16]
	1446 Move X0, [X8]
	1447 Move W8, [X0+224]
	1448 Compare W8, 0
	1449 JumpIfNotEqual {1451}
	1450 Call 0x1C17DFC
	1451 Add X1, X31, 1664
	1452 Move S0, W31
	1453 Move W3, 1
	1454 Move W5, 1
	1455 Move X0, X25
	1456 Move W2, W31
	1457 Move W4, W31
	1458 Move X6, X27
	1459 Move X7, X31
	1460 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	1461 Move W27, [X31+140]
	1462 Move X8, [X25]
	1463 Compare X8, 0
	1464 JumpIfEqual {2746}
	1465 Move X9, [X8+72]
	1466 NotImplemented "Instruction LDUR not yet implemented."
	1467 NotImplemented "Instruction LDUR not yet implemented."
	1468 Move X1, [X8+88]
	1469 Move [X31+1232], X9
	1470 Move [X31+76], V0
	1471 Move [X31+75], V1
	1472 Compare X24, 0
	1473 JumpIfEqual {2746}
	1474 Move V0, [X31+75]
	1475 Move V1, [X31+76]
	1476 Move X8, [X31+1232]
	1477 Add X2, X31, 784
	1478 Move X0, X24
	1479 Move X3, X31
	1480 Move [X31+784], V0
	1481 Move [X31+792], V1
	1482 Move [X31+816], X8
	1483 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1484 Move W1, [X31+2056]
	1485 Move X0, X24
	1486 Move X2, X31
	1487 Call RenderingLayerUtils.SetupProperties, X0, X1
	1488 Move X0, X19
	1489 Call UniversalRenderer.get_renderingModeActual, X0
	1490 NotImplemented "Instruction CMP not yet implemented."
	1491 Move X8, [X25]
	1492 Compare X8, 0
	1493 JumpIfEqual {2746}
	1494 Move X9, [X8+72]
	1495 NotImplemented "Instruction LDUR not yet implemented."
	1496 NotImplemented "Instruction LDUR not yet implemented."
	1497 Move X1, [X22]
	1498 Add X2, X31, 736
	1499 Move X0, X24
	1500 Move X3, X31
	1501 Move [X31+768], X9
	1502 Move [X31+736], V1
	1503 Move [X31+744], V0
	1504 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1505 Move X8, 0x6CB000
	1506 Move X8, [X8+3200]
	1507 Move X0, [X8]
	1508 Move W8, [X0+224]
	1509 Compare W8, 0
	1510 JumpIfNotEqual {1512}
	1511 Call 0x1C17DFC
	1512 Add X0, X31, 2120
	1513 Move X1, X24
	1514 Move X2, X31
	1515 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	1516 Move X0, X24
	1517 Move X1, X31
	1518 Call CommandBuffer.Clear, X0
	1519 Move X8, [X31+104]
	1520 And W8, W8, W26
	1521 NotImplemented "Instruction CMP not yet implemented."
	1522 Move X22, 0x6D2000
	1523 Move X22, [X22+520]
	1524 Move X0, X19
	1525 Move X27, [X22]
	1526 Call UniversalRenderer.get_renderingModeActual, X0
	1527 NotImplemented "Instruction CMP not yet implemented."
	1528 Move X0, [X19+728]
	1529 Compare X0, 0
	1530 JumpIfEqual {2746}
	1531 Move X21, [X0+48]
	1532 Move X1, X31
	1533 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	1534 Compare X21, 0
	1535 JumpIfEqual {2746}
	1536 Move W8, [X21+24]
	1537 NotImplemented "Instruction CMP not yet implemented."
	1538 Add X25, X21, W0
	1539 Add X25, X25, 32
	1540 Move X8, [X25]
	1541 Compare X8, 0
	1542 JumpIfEqual {2746}
	1543 Move X27, [X8+88]
	1544 Add X25, X19, 680
	1545 Move V0, [X31+129]
	1546 Move V1, [X31+130]
	1547 Move V2, [X31+131]
	1548 Move W8, [X31+2112]
	1549 Add X0, X31, 1600
	1550 Move W1, W31
	1551 Move X2, X31
	1552 Move [X31+100], V0
	1553 Move [X31+101], V1
	1554 Move [X31+102], V2
	1555 Move [X31+1648], W8
	1556 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	1557 Move W8, [X19+421]
	1558 Move W9, [X31+2072]
	1559 Move X0, X19
	1560 NotImplemented "Instruction CMP not yet implemented."
	1561 NotImplemented "Instruction CSINC not yet implemented."
	1562 Move [X31+1608], W8
	1563 Call UniversalRenderer.get_renderingModeActual, X0
	1564 NotImplemented "Instruction CMP not yet implemented."
	1565 Move X21, [X19+728]
	1566 Compare X21, 0
	1567 JumpIfEqual {2746}
	1568 Move X0, X21
	1569 Move X1, X31
	1570 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	1571 Move W1, W0
	1572 Move X0, X21
	1573 Move X2, X31
	1574 Call DeferredLights.GetGBufferFormat, X0, X1
	1575 Move X8, 0x6D2000
	1576 Move X8, [X8+344]
	1577 Move X0, [X8]
	1578 Move W8, [X0+224]
	1579 Compare W8, 0
	1580 JumpIfNotEqual {1582}
	1581 Call 0x1C17DFC
	1582 Move X0, X31
	1583 Call DepthNormalOnlyPass.GetGraphicsFormat
	1584 Move W1, W0
	1585 Add X0, X31, 1600
	1586 Move X2, X31
	1587 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	1588 Move X0, X19
	1589 Call UniversalRenderer.get_renderingModeActual, X0
	1590 NotImplemented "Instruction CMP not yet implemented."
	1591 Move X21, [X19+728]
	1592 Move V0, [X31+100]
	1593 Move V1, [X31+101]
	1594 Move V2, [X31+102]
	1595 Move W8, [X31+1648]
	1596 Move [X31+75], V0
	1597 Move [X31+76], V1
	1598 Move [X31+77], V2
	1599 Move [X31+1248], W8
	1600 Compare X21, 0
	1601 JumpIfEqual {2746}
	1602 Move X0, X21
	1603 Move X1, X31
	1604 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	1605 Move V0, [X31+75]
	1606 Move V1, [X31+76]
	1607 Move V2, [X31+77]
	1608 Move W8, [X31+1248]
	1609 Move W2, W0
	1610 Add X1, X31, 672
	1611 Move X0, X21
	1612 Move X3, X31
	1613 Move [X31+672], V0
	1614 Move [X31+680], V1
	1615 Move [X31+44], V2
	1616 Move [X31+720], W8
	1617 Call DeferredLights.ReAllocateGBufferIfNeeded, X0, X1, X2
	1618 Move X8, 0x6CF000
	1619 Move X8, [X8+16]
	1620 Move X0, [X8]
	1621 Move W8, [X0+224]
	1622 Compare W8, 0
	1623 JumpIfNotEqual {1625}
	1624 Call 0x1C17DFC
	1625 Add X1, X31, 1600
	1626 Move S0, W31
	1627 Move W3, 1
	1628 Move W5, 1
	1629 Move X0, X25
	1630 Move W2, W31
	1631 Move W4, W31
	1632 Move X6, X27
	1633 Move X7, X31
	1634 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	1635 Move W27, [X31+140]
	1636 Move X8, [X25]
	1637 Compare X8, 0
	1638 JumpIfEqual {2746}
	1639 Move X9, [X8+72]
	1640 NotImplemented "Instruction LDUR not yet implemented."
	1641 NotImplemented "Instruction LDUR not yet implemented."
	1642 Move X1, [X8+88]
	1643 Move [X31+1232], X9
	1644 Move [X31+76], V0
	1645 Move [X31+75], V1
	1646 Compare X24, 0
	1647 JumpIfEqual {2746}
	1648 Move V0, [X31+75]
	1649 Move V1, [X31+76]
	1650 Move X8, [X31+1232]
	1651 Add X2, X31, 624
	1652 Move X0, X24
	1653 Move X3, X31
	1654 Move [X31+624], V0
	1655 Move [X31+632], V1
	1656 Move [X31+656], X8
	1657 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1658 Move X0, X19
	1659 Call UniversalRenderer.get_renderingModeActual, X0
	1660 NotImplemented "Instruction CMP not yet implemented."
	1661 Move X8, [X25]
	1662 Compare X8, 0
	1663 JumpIfEqual {2746}
	1664 Move X9, [X8+72]
	1665 NotImplemented "Instruction LDUR not yet implemented."
	1666 NotImplemented "Instruction LDUR not yet implemented."
	1667 Move X1, [X22]
	1668 Add X2, X31, 576
	1669 Move X0, X24
	1670 Move X3, X31
	1671 Move [X31+608], X9
	1672 Move [X31+576], V1
	1673 Move [X31+584], V0
	1674 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1675 Move X8, 0x6CB000
	1676 Move X8, [X8+3200]
	1677 Move X0, [X8]
	1678 Move W8, [X0+224]
	1679 Compare W8, 0
	1680 JumpIfNotEqual {1682}
	1681 Call 0x1C17DFC
	1682 Add X0, X31, 2120
	1683 Move X1, X24
	1684 Move X2, X31
	1685 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	1686 Move X0, X24
	1687 Move X1, X31
	1688 Call CommandBuffer.Clear, X0
	1689 Move W24, W23
	1690 Compare W26, 0
	1691 JumpIfEqual {1818}
	1692 Move X0, X19
	1693 Call UniversalRenderer.get_renderingModeActual, X0
	1694 Move X8, [X31+104]
	1695 Compare W8, 0
	1696 JumpIfEqual {1736}
	1697 NotImplemented "Instruction CMP not yet implemented."
	1698 Move X0, [X19+728]
	1699 Compare X0, 0
	1700 JumpIfEqual {2746}
	1701 Move X1, X31
	1702 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	1703 Move X8, [X19+728]
	1704 Compare X8, 0
	1705 JumpIfEqual {2746}
	1706 Move W21, W0
	1707 Move X0, X8
	1708 Move X1, X31
	1709 Call DeferredLights.get_UseRenderingLayers, X0
	1710 Move X8, [X19+728]
	1711 Compare X8, 0
	1712 JumpIfEqual {2746}
	1713 Move X22, [X8+48]
	1714 Compare X22, 0
	1715 JumpIfEqual {2746}
	1716 Move W9, [X22+24]
	1717 NotImplemented "Instruction CMP not yet implemented."
	1718 Add X9, X22, W21
	1719 Move W24, W26
	1720 Move X27, [X19+440]
	1721 Move X25, [X19+648]
	1722 Move X26, [X9+32]
	1723 Move TEMP, X0
	1724 And TEMP, TEMP, 1
	1725 Compare TEMP, 1
	1726 JumpIfNotEqual {1776}
	1727 Move X0, X8
	1728 Move X1, X31
	1729 Call DeferredLights.get_GBufferRenderingLayers, X0
	1730 Move W8, [X22+24]
	1731 NotImplemented "Instruction CMP not yet implemented."
	1732 Compare X27, 0
	1733 JumpIfEqual {2746}
	1734 Add X8, X22, W0
	1735 Move X3, [X8+32]
	1736 NotImplemented "Instruction CMP not yet implemented."
	1737 Move X0, [X19+432]
	1738 Move V0, [X31+129]
	1739 Move V1, [X31+130]
	1740 Move V2, [X31+131]
	1741 Move W8, [X31+2112]
	1742 Move [X31+75], V0
	1743 Move [X31+76], V1
	1744 Move [X31+77], V2
	1745 Move [X31+1248], W8
	1746 Compare X0, 0
	1747 JumpIfEqual {2746}
	1748 Move X2, [X19+672]
	1749 Move V0, [X31+75]
	1750 Move V1, [X31+76]
	1751 Move V2, [X31+77]
	1752 Move W8, [X31+1248]
	1753 Add X1, X31, 512
	1754 Move X3, X31
	1755 Move [X31+512], V0
	1756 Move [X31+520], V1
	1757 Move [X31+34], V2
	1758 Move [X31+560], W8
	1759 Call DepthOnlyPass.Setup, X0, X1, X2
	1760 Move X1, [X19+432]
	1761 Move X0, [X19+440]
	1762 Move X1, [X19+672]
	1763 Move X2, [X19+680]
	1764 Move W8, [X31+48]
	1765 Compare W8, 0
	1766 JumpIfEqual {1772}
	1767 Compare X0, 0
	1768 JumpIfEqual {2746}
	1769 Move X3, [X19+688]
	1770 Move X4, X31
	1771 Call DepthNormalOnlyPass.Setup, X0, X1, X2, X3
	1772 Compare X0, 0
	1773 JumpIfEqual {2746}
	1774 Move X3, X31
	1775 Call DepthNormalOnlyPass.Setup, X0, X1, X2
	1776 Move W8, [X31+48]
	1777 Compare W8, 0
	1778 JumpIfEqual {1787}
	1779 Compare X27, 0
	1780 JumpIfEqual {2746}
	1781 Move X3, [X19+688]
	1782 Move X0, X27
	1783 Move X1, X25
	1784 Move X2, X26
	1785 Move X4, X31
	1786 Call DepthNormalOnlyPass.Setup, X0, X1, X2, X3
	1787 Compare X27, 0
	1788 JumpIfEqual {2746}
	1789 Move X0, X27
	1790 Move X1, X25
	1791 Move X2, X26
	1792 Move X3, X31
	1793 Call DepthNormalOnlyPass.Setup, X0, X1, X2
	1794 Move X8, [X31+88]
	1795 Move X22, 0x6CE000
	1796 Move X22, [X22+4088]
	1797 Move W27, [X31+140]
	1798 Subtract W8, W8, 220
	1799 NotImplemented "Instruction CMP not yet implemented."
	1800 Move W26, W24
	1801 Move W24, W23
	1802 Move X0, [X22]
	1803 Move X21, [X19+440]
	1804 Move W8, [X0+224]
	1805 Compare W8, 0
	1806 JumpIfNotEqual {1808}
	1807 Call 0x1C17DFC
	1808 Compare X21, 0
	1809 JumpIfEqual {2746}
	1810 Move X8, [X22]
	1811 Move X8, [X8+184]
	1812 Move X8, [X8]
	1813 Move [X21+224], X8
	1814 Move X1, [X19+440]
	1815 Move X0, X19
	1816 Move X2, X31
	1817 Call ScriptableRenderer.EnqueuePass, X0, X1
	1818 Move W8, [X19+421]
	1819 Move X23, [X31+72]
	1820 Compare W8, 0
	1821 JumpIfEqual {1833}
	1822 Move X0, [X19+448]
	1823 Compare X0, 0
	1824 JumpIfEqual {2746}
	1825 Move X2, [X19+672]
	1826 Move X1, [X19+648]
	1827 Move X3, X31
	1828 Call CopyDepthPass.Setup, X0, X1, X2
	1829 Move X1, [X19+448]
	1830 Move X0, X19
	1831 Move X2, X31
	1832 Call ScriptableRenderer.EnqueuePass, X0, X1
	1833 Move W8, [X31+68]
	1834 Move TEMP, X8
	1835 And TEMP, TEMP, 1
	1836 Compare TEMP, 1
	1837 JumpIfNotEqual {1879}
	1838 Move X0, [X19+840]
	1839 Compare X0, 0
	1840 JumpIfEqual {2746}
	1841 Add X1, X20, 672
	1842 Add X2, X31, 1536
	1843 Add X3, X31, 1532
	1844 Move X4, X31
	1845 Call ColorGradingLutPass.ConfigureDescriptor, X0, X1, X2, X3
	1846 Move X8, 0x6CF000
	1847 Move X8, [X8+16]
	1848 Move W21, [X31+1532]
	1849 Add X25, X19, 872
	1850 Move X0, [X8]
	1851 Move W8, [X0+224]
	1852 Compare W8, 0
	1853 JumpIfNotEqual {1855}
	1854 Call 0x1C17DFC
	1855 Move X8, 0x6CF000
	1856 Move X8, [X8+2440]
	1857 Add X1, X31, 1536
	1858 Move S0, W31
	1859 Move W3, 1
	1860 Move X6, [X8]
	1861 Move X0, X25
	1862 Move W2, W21
	1863 Move W4, W31
	1864 Move W5, W31
	1865 Move X7, X31
	1866 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	1867 Move X0, [X19+840]
	1868 Move X8, [X19+872]
	1869 Move [X31+1520], X8
	1870 Compare X0, 0
	1871 JumpIfEqual {2746}
	1872 Add X1, X31, 1520
	1873 Move X2, X31
	1874 Call ColorGradingLutPass.Setup, X0, X1
	1875 Move X1, [X19+840]
	1876 Move X0, X19
	1877 Move X2, X31
	1878 Call ScriptableRenderer.EnqueuePass, X0, X1
	1879 Move X0, [X20+400]
	1880 Compare X0, 0
	1881 JumpIfEqual {2746}
	1882 Move X1, X31
	1883 Call XRPass.get_hasValidOcclusionMesh, X0
	1884 Move TEMP, X0
	1885 And TEMP, TEMP, 1
	1886 Compare TEMP, 1
	1887 JumpIfNotEqual {1892}
	1888 Move X1, [X19+592]
	1889 Move X0, X19
	1890 Move X2, X31
	1891 Call ScriptableRenderer.EnqueuePass, X0, X1
	1892 Move W25, [X20+472]
	1893 Move X0, X19
	1894 Call UniversalRenderer.get_renderingModeActual, X0
	1895 NotImplemented "Instruction CMP not yet implemented."
	1896 Move [X31+112], W25
	1897 Move X0, [X19+728]
	1898 Compare X0, 0
	1899 JumpIfEqual {2746}
	1900 Move W8, [X0+21]
	1901 Move X28, [X31+128]
	1902 Compare W8, 0
	1903 JumpIfEqual {1911}
	1904 Move X8, [X31+88]
	1905 NotImplemented "Instruction CMP not yet implemented."
	1906 Move W8, [X19+420]
	1907 Compare W8, 0
	1908 JumpIfNotEqual {1911}
	1909 Move X1, X31
	1910 Call DeferredLights.DisableFramebufferFetchInput, X0
	1911 Move W8, [X31+100]
	1912 Move W4, [X31+48]
	1913 Move X0, X19
	1914 Move X1, X20
	1915 And W6, W8, 1
	1916 Move W2, W26
	1917 Move X3, [X31+104]
	1918 Move W5, W31
	1919 Call UniversalRenderer.EnqueueDeferred, X0, X1, X2, X3, X4, X5, X6
	1920 Move W8, [X31+2072]
	1921 NotImplemented "Instruction CMP not yet implemented."
	1922 NotImplemented "Instruction CSET not yet implemented."
	1923 NotImplemented "Instruction CMP not yet implemented."
	1924 Move W9, 2
	1925 NotImplemented "Instruction CSET not yet implemented."
	1926 NotImplemented "Instruction CMP not yet implemented."
	1927 NotImplemented "Instruction CSEL not yet implemented."
	1928 NotImplemented "Instruction CMP not yet implemented."
	1929 Move X0, [X20+400]
	1930 Or W8, W24, W11
	1931 Or W8, W8, W10
	1932 NotImplemented "Instruction CSEL not yet implemented."
	1933 NotImplemented "Instruction CMP not yet implemented."
	1934 Move W8, 3
	1935 Move W22, W26
	1936 NotImplemented "Instruction CSEL not yet implemented."
	1937 Compare X0, 0
	1938 JumpIfEqual {2746}
	1939 Move X1, X31
	1940 Call XRPass.get_enabled, X0
	1941 Move TEMP, X0
	1942 And TEMP, TEMP, 1
	1943 Compare TEMP, 1
	1944 JumpIfNotEqual {1951}
	1945 Move X8, [X20+400]
	1946 Compare X8, 0
	1947 JumpIfEqual {2746}
	1948 Move W8, [X8+32]
	1949 NotImplemented "Instruction CMP not yet implemented."
	1950 NotImplemented "Instruction CSEL not yet implemented."
	1951 Move W8, [X31+2072]
	1952 NotImplemented "Instruction CMP not yet implemented."
	1953 Move W8, [X31+140]
	1954 Compare W8, 0
	1955 JumpIfEqual {1985}
	1956 Move X8, 0x6CF000
	1957 Move X8, [X8+16]
	1958 Move X0, [X8]
	1959 Move W8, [X0+224]
	1960 Compare W8, 0
	1961 JumpIfNotEqual {1963}
	1962 Call 0x1C17DFC
	1963 Move X0, X31
	1964 Call RenderingUtils.MultisampleDepthResolveSupported
	1965 Move TEMP, X0
	1966 And TEMP, TEMP, 1
	1967 Compare TEMP, 1
	1968 JumpIfNotEqual {1985}
	1969 Move X8, [X19+536]
	1970 Compare X8, 0
	1971 JumpIfEqual {2746}
	1972 Move W8, [X8+16]
	1973 NotImplemented "Instruction CMP not yet implemented."
	1974 NotImplemented "Instruction CSET not yet implemented."
	1975 Or W8, W24, W8
	1976 Move TEMP, X8
	1977 And TEMP, TEMP, 1
	1978 Compare TEMP, 1
	1979 JumpIfEqual {1985}
	1980 Compare W26, 0
	1981 JumpIfEqual {1984}
	1982 NotImplemented "Instruction CMP not yet implemented."
	1983 Move W26, 1
	1984 Move W26, 2
	1985 Move W8, [X31+124]
	1986 Compare W8, 0
	1987 JumpIfEqual {1997}
	1988 Move X25, [X19+520]
	1989 Compare X25, 0
	1990 JumpIfEqual {2746}
	1991 Move X3, [X19+648]
	1992 Move X2, [X19+688]
	1993 Move X1, [X19+632]
	1994 Move X0, X25
	1995 Move X4, X31
	1996 Call DrawObjectsWithRenderingLayersPass.Setup, X0, X1, X2, X3
	1997 Move X25, [X19+512]
	1998 Compare X25, 0
	1999 JumpIfEqual {2746}
	2000 Move X0, X25
	2001 Move W1, W27
	2002 Move W2, W31
	2003 Move X3, X31
	2004 Call ScriptableRenderPass.ConfigureColorStoreAction, X0, X1, X2
	2005 Move X0, X25
	2006 Move W1, W26
	2007 Move X2, X31
	2008 Call ScriptableRenderPass.ConfigureDepthStoreAction, X0, X1
	2009 Move X21, 0x6D2000
	2010 Move X21, [X21+488]
	2011 Move X26, [X19+256]
	2012 Move X0, [X21]
	2013 Move W8, [X0+224]
	2014 Compare W8, 0
	2015 JumpIfNotEqual {2018}
	2016 Call 0x1C17DFC
	2017 Move X0, [X21]
	2018 Move X8, [X0+184]
	2019 Move W27, [X31+140]
	2020 Move X21, [X8+16]
	2021 Compare X21, 0
	2022 JumpIfNotEqual {2049}
	2023 Move W8, [X0+224]
	2024 Compare W8, 0
	2025 JumpIfEqual {2028}
	2026 Move X28, 0x6D2000
	2027 Move X28, [X28+488]
	2028 Call 0x1C17DFC
	2029 Move X28, 0x6D2000
	2030 Move X28, [X28+488]
	2031 Move X0, [X28]
	2032 Move X9, 0x6CF000
	2033 Move X8, [X0+184]
	2034 Move X9, [X9+2400]
	2035 Move X27, [X8]
	2036 Move X0, [X9]
	2037 Call 0x1C17F10
	2038 Move X8, 0x6D2000
	2039 Move X8, [X8+480]
	2040 Move X1, X27
	2041 Move X3, X31
	2042 Move X21, X0
	2043 Move X2, [X8]
	2044 Call Predicate`1<Object>..ctor, X0, X1, X2
	2045 Move X8, [X28]
	2046 Move W27, [X31+140]
	2047 Move X8, [X8+184]
	2048 Move [X8+16], X21
	2049 Compare X26, 0
	2050 JumpIfEqual {2746}
	2051 Move X8, 0x6CF000
	2052 Move X8, [X8+2384]
	2053 Move X0, X26
	2054 Move X1, X21
	2055 Move X2, [X8]
	2056 Call List`1<Object>.Find, X0, X1
	2057 Move X28, [X31+128]
	2058 Compare X0, 0
	2059 JumpIfNotEqual {2063}
	2060 Move W8, [X20+224]
	2061 Compare W8, 0
	2062 JumpIfEqual {2745}
	2063 Move W21, W31
	2064 Move X0, X31
	2065 Move W26, W22
	2066 Call SystemInfo.get_usesLoadStoreActions
	2067 Move TEMP, X0
	2068 And TEMP, TEMP, 1
	2069 Compare TEMP, 1
	2070 JumpIfNotEqual {2079}
	2071 Move S0, W31
	2072 Move S1, W31
	2073 Move S2, W31
	2074 Move S3, 1
	2075 Move X0, X25
	2076 Move W1, W21
	2077 Move X2, X31
	2078 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	2079 Move X0, X19
	2080 Move X1, X25
	2081 Move X2, X31
	2082 Call ScriptableRenderer.EnqueuePass, X0, X1
	2083 Move W25, [X31+112]
	2084 Compare X23, 0
	2085 JumpIfEqual {2746}
	2086 Move X0, X23
	2087 Move X1, X31
	2088 Call Camera.get_clearFlags, X0
	2089 NotImplemented "Instruction CMP not yet implemented."
	2090 Move W8, [X20+224]
	2091 NotImplemented "Instruction CMP not yet implemented."
	2092 Move X0, X31
	2093 Call RenderSettings.get_skybox
	2094 Move X22, 0x66E000
	2095 Move X22, [X22+1432]
	2096 Move X21, X0
	2097 Move X8, [X22]
	2098 Move W9, [X8+224]
	2099 Compare W9, 0
	2100 JumpIfNotEqual {2103}
	2101 Move X0, X8
	2102 Call 0x1C17DFC
	2103 Move X0, X21
	2104 Move X1, X31
	2105 Move X2, X31
	2106 Call Object.op_Inequality, X0, X1
	2107 Move TEMP, X0
	2108 And TEMP, TEMP, 1
	2109 Compare TEMP, 1
	2110 JumpIfNotEqual {2115}
	2111 Move X1, [X19+528]
	2112 Move X0, X19
	2113 Move X2, X31
	2114 Call ScriptableRenderer.EnqueuePass, X0, X1
	2115 Move X8, 0x6D2000
	2116 Move X8, [X8+464]
	2117 Add X1, X31, 1512
	2118 Move X0, X23
	2119 Move X2, [X8]
	2120 Call 0x21A5990, X0, X1
	2121 Move TEMP, X0
	2122 And TEMP, TEMP, 1
	2123 Compare TEMP, 1
	2124 JumpIfNotEqual {2145}
	2125 Move X0, [X31+1512]
	2126 Compare X0, 0
	2127 JumpIfEqual {2746}
	2128 Move X1, X31
	2129 Call Skybox.get_material, X0
	2130 Move X8, [X22]
	2131 Move X21, X0
	2132 Move W9, [X8+224]
	2133 Compare W9, 0
	2134 JumpIfNotEqual {2137}
	2135 Move X0, X8
	2136 Call 0x1C17DFC
	2137 Move X0, X21
	2138 Move X1, X31
	2139 Move X2, X31
	2140 Call Object.op_Inequality, X0, X1
	2141 Move TEMP, X0
	2142 And TEMP, TEMP, 1
	2143 Compare TEMP, 1
	2144 JumpIfEqual {2111}
	2145 Compare W27, 0
	2146 JumpIfEqual {2168}
	2147 Move X0, X19
	2148 Call UniversalRenderer.get_renderingModeActual, X0
	2149 NotImplemented "Instruction CMP not yet implemented."
	2150 Move TEMP, X28
	2151 And TEMP, TEMP, 1
	2152 Compare TEMP, 1
	2153 JumpIfEqual {2157}
	2154 Move W8, [X19+420]
	2155 Compare W8, 0
	2156 JumpIfNotEqual {2193}
	2157 Move X0, [X19+536]
	2158 Compare X0, 0
	2159 JumpIfEqual {2746}
	2160 Move X2, [X19+672]
	2161 Move X1, [X19+648]
	2162 Move X3, X31
	2163 Call CopyDepthPass.Setup, X0, X1, X2
	2164 Move X1, [X19+536]
	2165 Move X0, X19
	2166 Move X2, X31
	2167 Call ScriptableRenderer.EnqueuePass, X0, X1
	2168 Move W8, [X20+224]
	2169 NotImplemented "Instruction CMP not yet implemented."
	2170 NotImplemented "Instruction CSET not yet implemented."
	2171 Or W8, W26, W8
	2172 Move TEMP, X8
	2173 And TEMP, TEMP, 1
	2174 Compare TEMP, 1
	2175 JumpIfEqual {2193}
	2176 Move X0, X31
	2177 Call SystemInfo.get_usesReversedZBuffer
	2178 Move X8, 0x6D1000
	2179 Move X8, [X8+4056]
	2180 Move X21, [X8]
	2181 Move TEMP, X0
	2182 And TEMP, TEMP, 1
	2183 Compare TEMP, 1
	2184 JumpIfNotEqual {2187}
	2185 Move X0, X31
	2186 Call Texture2D.get_blackTexture
	2187 Move X0, X31
	2188 Call Texture2D.get_whiteTexture
	2189 Move X1, X0
	2190 Move X0, X21
	2191 Move X2, X31
	2192 Call Shader.SetGlobalTexture, X0, X1
	2193 Compare W24, 0
	2194 JumpIfEqual {2253}
	2195 Move X8, 0x697000
	2196 Move X8, [X8+2216]
	2197 Move X0, [X8]
	2198 Move W8, [X0+224]
	2199 Compare W8, 0
	2200 JumpIfNotEqual {2202}
	2201 Call 0x1C17DFC
	2202 Move X0, X31
	2203 Call UniversalRenderPipeline.get_asset
	2204 Compare X0, 0
	2205 JumpIfEqual {2746}
	2206 Move W22, [X0+80]
	2207 Move V0, [X31+129]
	2208 Move V1, [X31+130]
	2209 Move V2, [X31+131]
	2210 Move W8, [X31+2112]
	2211 Add X1, X31, 1456
	2212 Add X2, X31, 1452
	2213 Move W0, W22
	2214 Move X3, X31
	2215 Move [X31+91], V0
	2216 Move [X31+92], V1
	2217 Move [X31+93], V2
	2218 Move [X31+1504], W8
	2219 Call CopyColorPass.ConfigureDescriptor, X0, X1, X2
	2220 Move X8, 0x6CF000
	2221 Move X8, [X8+16]
	2222 Move W21, [X31+1452]
	2223 Add X24, X19, 696
	2224 Move X0, [X8]
	2225 Move W8, [X0+224]
	2226 Compare W8, 0
	2227 JumpIfNotEqual {2229}
	2228 Call 0x1C17DFC
	2229 Move X8, 0x6D2000
	2230 Move X8, [X8+512]
	2231 Add X1, X31, 1456
	2232 Move S0, W31
	2233 Move W3, 1
	2234 Move X6, [X8]
	2235 Move W5, 1
	2236 Move X0, X24
	2237 Move W2, W21
	2238 Move W4, W31
	2239 Move X7, X31
	2240 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	2241 Move X0, [X19+544]
	2242 Compare X0, 0
	2243 JumpIfEqual {2746}
	2244 Move X2, [X19+696]
	2245 Move X1, [X19+632]
	2246 Move W3, W22
	2247 Move X4, X31
	2248 Call CopyColorPass.Setup, X0, X1, X2, X3
	2249 Move X1, [X19+544]
	2250 Move X0, X19
	2251 Move X2, X31
	2252 Call ScriptableRenderer.EnqueuePass, X0, X1
	2253 Move TEMP, X28
	2254 And TEMP, TEMP, 1
	2255 Compare TEMP, 1
	2256 JumpIfNotEqual {2331}
	2257 Move V0, [X31+129]
	2258 Move V1, [X31+130]
	2259 Move V2, [X31+131]
	2260 Move W8, [X31+2112]
	2261 Add X0, X31, 1392
	2262 Move W1, 46
	2263 Move X2, X31
	2264 Move [X31+87], V0
	2265 Move [X31+88], V1
	2266 Move [X31+89], V2
	2267 Move [X31+1440], W8
	2268 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	2269 Add X0, X31, 1392
	2270 Move W1, W31
	2271 Move X2, X31
	2272 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	2273 Move X8, 0x6CF000
	2274 Move X8, [X8+16]
	2275 Move W22, 1
	2276 Move [X31+1400], W22
	2277 Add X21, X19, 704
	2278 Move X0, [X8]
	2279 Move W8, [X0+224]
	2280 Compare W8, 0
	2281 JumpIfNotEqual {2283}
	2282 Call 0x1C17DFC
	2283 Move X8, 0x6D1000
	2284 Move X8, [X8+1344]
	2285 Add X1, X31, 1392
	2286 Move S0, W31
	2287 Move W3, 1
	2288 Move X6, [X8]
	2289 Move W5, 1
	2290 Move X0, X21
	2291 Move W2, W31
	2292 Move W4, W31
	2293 Move X7, X31
	2294 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	2295 Move V0, [X31+129]
	2296 Move V1, [X31+130]
	2297 Move V2, [X31+131]
	2298 Move W8, [X31+2112]
	2299 Add X0, X31, 1328
	2300 Move W1, W31
	2301 Move X2, X31
	2302 Move [X31+83], V0
	2303 Move [X31+84], V1
	2304 Move [X31+85], V2
	2305 Move [X31+1376], W8
	2306 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	2307 Move X8, 0x6D2000
	2308 Move X8, [X8+504]
	2309 Add X0, X19, 712
	2310 Add X1, X31, 1328
	2311 Move S0, W31
	2312 Move X6, [X8]
	2313 Move W3, 1
	2314 Move W5, 1
	2315 Move W2, W31
	2316 Move W4, W31
	2317 Move X7, X31
	2318 Move [X31+1336], W22
	2319 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	2320 Move X0, [X19+456]
	2321 Compare X0, 0
	2322 JumpIfEqual {2746}
	2323 Move X2, [X19+712]
	2324 Move X1, [X19+704]
	2325 Move X3, X31
	2326 Call MotionVectorRenderPass.Setup, X0, X1, X2
	2327 Move X1, [X19+456]
	2328 Move X0, X19
	2329 Move X2, X31
	2330 Call ScriptableRenderer.EnqueuePass, X0, X1
	2331 Move W8, [X31+56]
	2332 Move TEMP, X8
	2333 And TEMP, TEMP, 1
	2334 Compare TEMP, 1
	2335 JumpIfNotEqual {2340}
	2336 Move X1, [X19+552]
	2337 Move X0, X19
	2338 Move X2, X31
	2339 Call ScriptableRenderer.EnqueuePass, X0, X1
	2340 Move W8, [X31+2072]
	2341 Move W9, 3
	2342 NotImplemented "Instruction CMP not yet implemented."
	2343 NotImplemented "Instruction CSET not yet implemented."
	2344 NotImplemented "Instruction CMP not yet implemented."
	2345 NotImplemented "Instruction CSEL not yet implemented."
	2346 Compare W27, 0
	2347 JumpIfEqual {2365}
	2348 Move X9, [X19+536]
	2349 Compare X9, 0
	2350 JumpIfEqual {2746}
	2351 Move W9, [X9+16]
	2352 NotImplemented "Instruction CMP not yet implemented."
	2353 NotImplemented "Instruction CMP not yet implemented."
	2354 Move W22, W31
	2355 Move X8, 0x6CF000
	2356 Move X8, [X8+16]
	2357 Move X0, [X8]
	2358 Move W8, [X0+224]
	2359 Compare W8, 0
	2360 JumpIfNotEqual {2362}
	2361 Call 0x1C17DFC
	2362 Move X0, X31
	2363 Call RenderingUtils.MultisampleDepthResolveSupported
	2364 And W22, W0, 1
	2365 Move X0, [X19+560]
	2366 Compare X0, 0
	2367 JumpIfEqual {2746}
	2368 And W1, W21, W25
	2369 Move W2, W31
	2370 Move X3, X31
	2371 Call ScriptableRenderPass.ConfigureColorStoreAction, X0, X1, X2
	2372 Move X0, [X19+560]
	2373 Compare X0, 0
	2374 JumpIfEqual {2746}
	2375 Move W1, W22
	2376 Move X2, X31
	2377 Call ScriptableRenderPass.ConfigureDepthStoreAction, X0, X1
	2378 Move X1, [X19+560]
	2379 Move X0, X19
	2380 Move X2, X31
	2381 Call ScriptableRenderer.EnqueuePass, X0, X1
	2382 Move X1, [X19+568]
	2383 Move X0, X19
	2384 Move X2, X31
	2385 Call ScriptableRenderer.EnqueuePass, X0, X1
	2386 Move X0, X29
	2387 Move X1, X31
	2388 Call CameraData.get_rendersOverlayUI, X0
	2389 Move W23, W0
	2390 Move X0, X29
	2391 Move X1, X31
	2392 Call CameraData.get_isHDROutputActive, X0
	2393 Move W21, [X31+96]
	2394 Move W22, [X31+52]
	2395 Move W24, W0
	2396 Move TEMP, X23
	2397 And TEMP, TEMP, 1
	2398 Compare TEMP, 1
	2399 JumpIfNotEqual {2415}
	2400 Move TEMP, X24
	2401 And TEMP, TEMP, 1
	2402 Compare TEMP, 1
	2403 JumpIfNotEqual {2415}
	2404 Move X0, [X19+608]
	2405 Compare X0, 0
	2406 JumpIfEqual {2746}
	2407 Move W2, 24
	2408 Move X1, X29
	2409 Move X3, X31
	2410 Call DrawScreenSpaceUIPass.Setup, X0, X1, X2
	2411 Move X1, [X19+608]
	2412 Move X0, X19
	2413 Move X2, X31
	2414 Call ScriptableRenderer.EnqueuePass, X0, X1
	2415 Move X8, [X20+424]
	2416 NotImplemented "Instruction CMP not yet implemented."
	2417 NotImplemented "Instruction CSET not yet implemented."
	2418 And W31, W22, W25
	2419 And W26, W8, W25
	2420 Move W8, [X20+452]
	2421 NotImplemented "Instruction CMP not yet implemented."
	2422 Move W8, [X20+360]
	2423 NotImplemented "Instruction CMP not yet implemented."
	2424 Move W8, [X20+364]
	2425 Compare W8, 0
	2426 JumpIfEqual {2428}
	2427 Move W25, 1
	2428 Move X0, X29
	2429 Move X1, X31
	2430 Call CameraData.IsTemporalAAEnabled, X0
	2431 Move TEMP, X0
	2432 And TEMP, TEMP, 1
	2433 Compare TEMP, 1
	2434 JumpIfNotEqual {2438}
	2435 Move V0, [X20+532]
	2436 NotImplemented "Instruction FCMP not yet implemented."
	2437 NotImplemented "Instruction CSET not yet implemented."
	2438 Move W25, W31
	2439 Move X8, [X31+80]
	2440 Move X0, [X19+224]
	2441 NotImplemented "Instruction CMP not yet implemented."
	2442 NotImplemented "Instruction CCMP not yet implemented."
	2443 Xor W8, W25, 1
	2444 NotImplemented "Instruction CSEL not yet implemented."
	2445 Compare X0, 0
	2446 JumpIfEqual {2452}
	2447 Move X1, X29
	2448 Move X2, X31
	2449 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	2450 NotImplemented "Instruction ORN not yet implemented."
	2451 And W8, W8, 1
	2452 Move W8, 1
	2453 Add X27, X19, 632
	2454 Add X22, X19, 648
	2455 Move [X31+140], W8
	2456 Compare W21, 0
	2457 JumpIfEqual {2564}
	2458 Move V0, [X31+129]
	2459 Move V1, [X31+130]
	2460 Move V2, [X31+131]
	2461 Move W8, [X31+2112]
	2462 Move [X31+124], W23
	2463 Move X23, X29
	2464 Move W29, [X31+2064]
	2465 Move W21, [X31+2068]
	2466 Add X0, X31, 2064
	2467 Move X1, X31
	2468 Move [X31+128], X27
	2469 Move [X31+104], W26
	2470 Move X26, X22
	2471 Move W27, W24
	2472 Add X22, X31, 456
	2473 Move [X31+75], V0
	2474 Move [X31+76], V1
	2475 Move [X31+77], V2
	2476 Move [X31+1248], W8
	2477 Call RenderTextureDescriptor.get_graphicsFormat, X0
	2478 Move X8, 0x6CE000
	2479 Move X8, [X8+2392]
	2480 Move W24, W0
	2481 Move X8, [X8]
	2482 Move W9, [X8+224]
	2483 Compare W9, 0
	2484 JumpIfNotEqual {2487}
	2485 Move X0, X8
	2486 Call 0x1C17DFC
	2487 Move W8, [X31+1248]
	2488 Move V0, [X31+75]
	2489 Move V1, [X31+76]
	2490 Move V2, [X31+77]
	2491 Move [X31+448], W8
	2492 Add X8, X31, 456
	2493 Add X0, X31, 400
	2494 Move W1, W29
	2495 Move W2, W21
	2496 Move W3, W24
	2497 Move W4, W31
	2498 Move X5, X31
	2499 Move [X31+400], V0
	2500 Move [X31+408], V1
	2501 Move [X31+27], V2
	2502 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	2503 Move X9, 0x6CE000
	2504 Move V0, [X22]
	2505 Move V1, [X22+16]
	2506 Move V2, [X22+2]
	2507 Move W8, [X31+504]
	2508 Move X9, [X9+16]
	2509 Move [X31+79], V0
	2510 Move [X31+80], V1
	2511 Move [X31+81], V2
	2512 Move X0, [X9]
	2513 Move [X31+1312], W8
	2514 Add X21, X19, 864
	2515 Move W8, [X0+224]
	2516 Compare W8, 0
	2517 JumpIfNotEqual {2519}
	2518 Call 0x1C17DFC
	2519 Move X8, 0x6CE000
	2520 Move X8, [X8+2352]
	2521 Add X1, X31, 1264
	2522 Move S0, W31
	2523 Move W3, 1
	2524 Move X6, [X8]
	2525 Move W5, 1
	2526 Move X0, X21
	2527 Move W2, W31
	2528 Move W4, W31
	2529 Move X7, X31
	2530 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	2531 Move W8, [X31+112]
	2532 Move X22, X26
	2533 Compare W8, 0
	2534 JumpIfEqual {2729}
	2535 Move X0, X19
	2536 Move X1, X23
	2537 Move W24, W27
	2538 Call UniversalRenderer.SetupFinalPassDebug, X0, X1
	2539 Move X0, [X19+848]
	2540 Move X8, [X19+872]
	2541 Move X27, [X31+128]
	2542 Move [X31+1520], X8
	2543 Compare X0, 0
	2544 JumpIfEqual {2746}
	2545 Move W8, [X31+140]
	2546 Add X6, X19, 704
	2547 Add X1, X31, 2064
	2548 Add X5, X31, 1520
	2549 And W8, W8, W28
	2550 Move X2, X27
	2551 Move W3, W28
	2552 Move X4, X22
	2553 Move W7, W25
	2554 Move [X31+8], X31
	2555 Move [X31], W8
	2556 Call PostProcessPass.Setup, X0, X1, X2, X3, X4, X5, X6, X7, X8
	2557 Move X1, [X19+848]
	2558 Move X0, X19
	2559 Move X2, X31
	2560 Call ScriptableRenderer.EnqueuePass, X0, X1
	2561 Move W21, [X31+96]
	2562 Move W23, [X31+124]
	2563 Move W26, [X31+104]
	2564 Move W8, [X31+112]
	2565 Compare W8, 0
	2566 JumpIfEqual {383}
	2567 Move X0, X19
	2568 Move X1, X29
	2569 Call UniversalRenderer.SetupFinalPassDebug, X0, X1
	2570 Move X8, [X27]
	2571 Move [X31+1256], X8
	2572 Compare W25, 0
	2573 JumpIfEqual {2586}
	2574 Move X0, [X19+856]
	2575 Compare X0, 0
	2576 JumpIfEqual {2746}
	2577 Move W3, [X31+140]
	2578 Add X1, X31, 1256
	2579 Move W2, 1
	2580 Move X4, X31
	2581 Call PostProcessPass.SetupFinalPass, X0, X1, X2, X3
	2582 Move X1, [X19+856]
	2583 Move X0, X19
	2584 Move X2, X31
	2585 Call ScriptableRenderer.EnqueuePass, X0, X1
	2586 Move X8, [X20+424]
	2587 Compare X8, 0
	2588 JumpIfEqual {2593}
	2589 Move X1, [X19+584]
	2590 Move X0, X19
	2591 Move X2, X31
	2592 Call ScriptableRenderer.EnqueuePass, X0, X1
	2593 Compare W25, 0
	2594 JumpIfNotEqual {2661}
	2595 Compare W21, 0
	2596 JumpIfEqual {2602}
	2597 Move X8, [X31+80]
	2598 Compare X8, 0
	2599 JumpIfNotEqual {2602}
	2600 Compare W26, 0
	2601 JumpIfEqual {2661}
	2602 Move X8, [X27]
	2603 Compare X8, 0
	2604 JumpIfEqual {2746}
	2605 Move X9, [X8+72]
	2606 NotImplemented "Instruction LDUR not yet implemented."
	2607 NotImplemented "Instruction LDUR not yet implemented."
	2608 Move [X31+1232], X9
	2609 Move [X31+76], V0
	2610 Move [X31+75], V1
	2611 Move X8, [X19+664]
	2612 Compare X8, 0
	2613 JumpIfEqual {2746}
	2614 NotImplemented "Instruction LDUR not yet implemented."
	2615 NotImplemented "Instruction LDUR not yet implemented."
	2616 Move X8, [X8+72]
	2617 Move V2, [X31+75]
	2618 Move V3, [X31+76]
	2619 Move X9, [X31+1232]
	2620 Add X0, X31, 352
	2621 Add X1, X31, 304
	2622 Move X2, X31
	2623 Move [X31+336], X8
	2624 Move [X31+304], V0
	2625 Move [X31+312], V1
	2626 Move [X31+352], V2
	2627 Move [X31+360], V3
	2628 Move [X31+384], X9
	2629 Call RenderTargetIdentifier.op_Equality, X0, X1
	2630 Move TEMP, X0
	2631 And TEMP, TEMP, 1
	2632 Compare TEMP, 1
	2633 JumpIfEqual {2661}
	2634 Move X0, [X19+576]
	2635 Move V0, [X31+129]
	2636 Move V1, [X31+130]
	2637 Move V2, [X31+131]
	2638 Move W8, [X31+2112]
	2639 Move [X31+75], V0
	2640 Move [X31+76], V1
	2641 Move [X31+77], V2
	2642 Move [X31+1248], W8
	2643 Compare X0, 0
	2644 JumpIfEqual {2746}
	2645 Move X2, [X31+1256]
	2646 Move V0, [X31+75]
	2647 Move V1, [X31+76]
	2648 Move V2, [X31+77]
	2649 Move W8, [X31+1248]
	2650 Add X1, X31, 240
	2651 Move X3, X31
	2652 Move [X31+240], V0
	2653 Move [X31+248], V1
	2654 Move [X31+17], V2
	2655 Move [X31+288], W8
	2656 Call FinalBlitPass.Setup, X0, X1, X2
	2657 Move X1, [X19+576]
	2658 Move X0, X19
	2659 Move X2, X31
	2660 Call ScriptableRenderer.EnqueuePass, X0, X1
	2661 NotImplemented "Instruction ORN not yet implemented."
	2662 Move TEMP, X8
	2663 And TEMP, TEMP, 1
	2664 Compare TEMP, 1
	2665 JumpIfEqual {2670}
	2666 Move X1, [X19+616]
	2667 Move X0, X19
	2668 Move X2, X31
	2669 Call ScriptableRenderer.EnqueuePass, X0, X1
	2670 Move X0, [X20+400]
	2671 Compare X0, 0
	2672 JumpIfEqual {2746}
	2673 Move X1, X31
	2674 Call XRPass.get_enabled, X0
	2675 Move TEMP, X0
	2676 And TEMP, TEMP, 1
	2677 Compare TEMP, 1
	2678 JumpIfNotEqual {383}
	2679 Move X8, [X22]
	2680 Compare X8, 0
	2681 JumpIfEqual {2746}
	2682 Move X9, [X8+72]
	2683 NotImplemented "Instruction LDUR not yet implemented."
	2684 NotImplemented "Instruction LDUR not yet implemented."
	2685 Move [X31+1232], X9
	2686 Move [X31+76], V0
	2687 Move [X31+75], V1
	2688 Move X8, [X20+400]
	2689 Compare X8, 0
	2690 JumpIfEqual {2746}
	2691 Move V0, [X8+48]
	2692 Move V1, [X8+64]
	2693 Move X8, [X8+80]
	2694 Move V2, [X31+75]
	2695 Move V3, [X31+76]
	2696 Move X9, [X31+1232]
	2697 Add X0, X31, 192
	2698 Add X1, X31, 144
	2699 Move X2, X31
	2700 Move [X31+176], X8
	2701 Move [X31+144], V0
	2702 Move [X31+152], V1
	2703 Move [X31+192], V2
	2704 Move [X31+200], V3
	2705 Move [X31+224], X9
	2706 Call RenderTargetIdentifier.op_Equality, X0, X1
	2707 Move TEMP, X0
	2708 And TEMP, TEMP, 1
	2709 Compare TEMP, 1
	2710 JumpIfEqual {383}
	2711 Move X8, [X20+400]
	2712 Compare X8, 0
	2713 JumpIfEqual {2746}
	2714 Move W8, [X8+32]
	2715 Compare W8, 0
	2716 JumpIfEqual {383}
	2717 Move X0, [X19+600]
	2718 Compare X0, 0
	2719 JumpIfEqual {2746}
	2720 Move X2, [X19+664]
	2721 Move X1, [X19+648]
	2722 Move X3, X31
	2723 Call CopyDepthPass.Setup, X0, X1, X2
	2724 Move X1, [X19+600]
	2725 Compare X1, 0
	2726 JumpIfEqual {2746}
	2727 Move W8, 1
	2728 Move [X1+244], W8
	2729 Move X0, [X19+848]
	2730 Move X8, [X19+872]
	2731 Move X2, [X31+128]
	2732 Move [X31+1520], X8
	2733 Compare X0, 0
	2734 JumpIfEqual {2746}
	2735 Add X6, X19, 704
	2736 Add X1, X31, 2064
	2737 Add X5, X31, 1520
	2738 Move W3, W31
	2739 Move X4, X22
	2740 Move W7, W31
	2741 Move [X31+8], X31
	2742 Move [X31], W31
	2743 Call PostProcessPass.Setup, X0, X1, X2, X3, X4, X5, X6, X7, X8
	2744 Move X1, [X19+848]
	2745 Move W21, 1
	2746 Call 0x1C17F20
	2747 Call 0x1C17F20
	2748 Move X0, X26
	2749 Call 0x1C181E0
	2750 Call 0x1C17F28
	2751 Call 0x1C17F20
	2752 Move X24, X0
	2753 NotImplemented "Instruction CMP not yet implemented."
	2754 Move X0, X24
	2755 Call 0x3EB2AD0
	2756 Move X26, [X0]
	2757 Call 0x3EB2AE0
	2758 Move X8, 0x6CF000
	2759 Move X8, [X8+3800]
	2760 Add X0, X31, 1840
	2761 Move X1, [X8]
	2762 Call Enumerator<Object>.Dispose, X0
	2763 Move X28, [X31+128]
	2764 Compare X26, 0
	2765 JumpIfEqual {522}
	2766 Move X0, X26
	2767 Call 0x1C17F18
	2768 Move X26, X31
	2769 Move X24, X0
	2770 Move X8, 0x6CF000
	2771 Move X8, [X8+3800]
	2772 Move X1, [X8]
	2773 Add X0, X31, 1840
	2774 Call Enumerator<Object>.Dispose, X0
	2775 Compare X26, 0
	2776 JumpIfNotEqual {2779}
	2777 Move X0, X24
	2778 Call 0x1D2D690
	2779 Move X0, X26
	2780 Call 0x1C17F18
	2781 Call 0x1991590

Method: System.Void SetupLights(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A880AC ADD X0, X31, 0x120
	0x03A880B0 MOV X1, X31
	0x03A880B4 BL 0x3C224C4
	0x03A880B8 MOV W1, W0
	0x03A880BC B 0x3A880C4
	0x03A880C0 MOVZ W1, 0x20
	0x03A880C4 ADRP X21, 0x6CF000
	0x03A880C8 LDR X21, [X21 + 0x1F8]
	0x03A880CC ADD X0, X31, 0x120
	0x03A880D0 MOV X2, X31
	0x03A880D4 BL 0x3C22520
	0x03A880D8 MOVZ W8, 0x1
	0x03A880DC STR W8, [X31 + 0x128]
	0x03A880E0 LDP V2, V0, [X31 + 0x130]
	0x03A880E4 LDR W9, [X31 + 0x150]
	0x03A880E8 LDR V1, [X31 + 0x12]
	0x03A880EC LDR X0, [X23]
	0x03A880F0 LDR X20, [X20 + 0x390]
	0x03A880F4 STP V2, V0, [X31 + 0x90]
	0x03A880F8 STR V1, [X31 + 0x8]
	0x03A880FC STR W9, [X31 + 0xB0]
	0x03A88100 LDR W8, [X0 + 0xE0]
	0x03A88104 CBNZ W8, 0x3A8810C
	0x03A88108 BL 0x1C16DFC
	0x03A8810C LDP V0, V1, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+720]
	007 Compare X0, 0
	008 JumpIfEqual {33}
	009 Move X3, X31
	010 Move X19, X2
	011 Move X20, X1
	012 Call ForwardLights.Setup, X0, X1, X2
	013 Move X0, X21
	014 Call UniversalRenderer.get_renderingModeActual, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X0, [X21+728]
	017 Compare X0, 0
	018 JumpIfEqual {33}
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X3, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call DeferredLights.SetupLights, X0, X1, X2
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetupCullingParameters(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A88110 LDR V2, [X31 + 0xA]
	0x03A88114 LDR W8, [X31 + 0xB0]
	0x03A88118 LDR X2, [X21]
	0x03A8811C ADD X1, X31, 0x0
	0x03A88120 MOVZ W3, 0x1
	0x03A88124 MOVZ W5, 0x1
	0x03A88128 MOV X0, X19
	0x03A8812C MOV W4, W31
	0x03A88130 STP V0, V1, [X31]
	0x03A88134 STR V2, [X31 + 0x2]
	0x03A88138 STR W8, [X31 + 0x30]
	0x03A8813C BL 0x3A87660
	0x03A88140 CBZ X20, 0x3A88160
	0x03A88144 STR X0, [X20 + 0x60]
	0x03A88148 ADD X31, X31, 0x250
	0x03A8814C LDP X20, X19, [X31 + 0x30]
	0x03A88150 LDP X22, X21, [X31 + 0x20]
	0x03A88154 LDP X24, X23, [X31 + 0x10]
	0x03A88158 LDP X29, X30, [X31], #0x40
	0x03A8815C RET
	0x03A88160 BL 0x1C16F20
	0x03A88164 STR X30, [X31 - 0x30]!
	0x03A88168 STP X22, X21, [X31 + 0x10]
	0x03A8816C STP X20, X19, [X31 + 0x20]
	0x03A88170 MOV X19, X3
	0x03A88174 MOV X20, X2
	0x03A88178 MOV X21, X1
	0x03A8817C MOV X22, X0
	0x03A88180 STRB W31, [X0 + 0x1A4]
	0x03A88184 BL 0x3A879F0
	0x03A88188 LDRB W3, [X22 + 0x388]
	0x03A8818C MOV X0, X22
	0x03A88190 MOV X1, X21
	0x03A88194 MOV X2, X19
	0x03A88198 MOV X4, X31
	0x03A8819C BL 0x3A4BAD0
	0x03A881A0 MOV X0, X22
	0x03A881A4 MOV X1, X21
	0x03A881A8 MOV X3, X19
	0x03A881AC BL 0x3A881E0
	0x03A881B0 MOV X0, X22
	0x03A881B4 MOV X1, X21
	0x03A881B8 MOV X2, X20
	0x03A881BC MOV X3, X19
	0x03A881C0 BL 0x3A882B4
	0x03A881C4 MOV X0, X22
	0x03A881C8 MOV X1, X21
	0x03A881CC MOV X3, X19
	0x03A881D0 LDP X20, X19, [X31 + 0x20]
	0x03A881D4 LDP X22, X21, [X31 + 0x10]
	0x03A881D8 LDR X30, [X31], #0x30
	0x03A881DC B 0x3A88754
	0x03A881E0 STP X30, X23, [X31 - 0x30]!
	0x03A881E4 STP X22, X21, [X31 + 0x10]
	0x03A881E8 STP X20, X19, [X31 + 0x20]
	0x03A881EC MOV X20, X0
	0x03A881F0 LDR X0, [X0 + 0x1D0]
	0x03A881F4 CBZ X0, 0x3A882B0
	0x03A881F8 MOV X21, X1
	0x03A881FC MOV X1, X3
	0x03A88200 MOV X2, X31
	0x03A88204 MOV X19, X3
	0x03A88208 BL 0x3AB3C60
	0x03A8820C MOV W22, W0
	0x03A88210 TBZ X0, 0x0, 0x3A88238
	0x03A88214 LDR X0, [X20 + 0x1D0]
	0x03A88218 CBZ X0, 0x3A882B0
	0x03A8821C LDR X23, [X20 + 0x390]
	0x03A88220 MOV X1, X21
	0x03A88224 MOV X2, X19
	0x03A88228 MOV X3, X31
	0x03A8822C BL 0x3AB4FA0
	0x03A88230 CBZ X23, 0x3A882B0
	0x03A88234 STR X0, [X23 + 0x28]
	0x03A88238 LDR X0, [X20 + 0x1D8]
	0x03A8823C CBZ X0, 0x3A882B0
	0x03A88240 MOV X1, X19
	0x03A88244 MOV X2, X31
	0x03A88248 BL 0x3AA1FCC
	0x03A8824C TBZ X0, 0x0, 0x3A88278
	0x03A88250 LDR X0, [X20 + 0x1D8]
	0x03A88254 CBZ X0, 0x3A882B0
	0x03A88258 LDR X22, [X20 + 0x390]
	0x03A8825C MOV X1, X21
	0x03A88260 MOV X2, X19
	0x03A88264 MOV X3, X31
	0x03A88268 BL 0x3AA4750
	0x03A8826C CBZ X22, 0x3A882B0
	0x03A88270 STR X0, [X22 + 0x30]
	0x03A88274 B 0x3A8827C
	0x03A88278 TBZ X22, 0x0, 0x3A882A0
	0x03A8827C LDRB W3, [X20 + 0x388]
	0x03A88280 MOV X0, X20
	0x03A88284 MOV X1, X21
	0x03A88288 MOV X2, X19
	0x03A8828C LDP X20, X19, [X31 + 0x20]
	0x03A88290 LDP X22, X21, [X31 + 0x10]
	0x03A88294 MOV X4, X31
	0x03A88298 LDP X30, X23, [X31], #0x30
	0x03A8829C B 0x3A4BAD0
	0x03A882A0 LDP X20, X19, [X31 + 0x20]
	0x03A882A4 LDP X22, X21, [X31 + 0x10]
	0x03A882A8 LDP X30, X23, [X31], #0x30
	0x03A882AC RET
	0x03A882B0 BL 0x1C16F20
	0x03A882B4 STP D11, D10, [X31 - 0x60]!
	0x03A882B8 STP D9, D8, [X31 + 0x10]
	0x03A882BC STR X30, [X31 + 0x20]
	0x03A882C0 STP X24, X23, [X31 + 0x30]
	0x03A882C4 STP X22, X21, [X31 + 0x40]
	0x03A882C8 STP X20, X19, [X31 + 0x50]
	0x03A882CC ADRP X23, 0x95A000
	0x03A882D0 LDRB W8, [X23 + 0x347]
	0x03A882D4 MOV X19, X3
	0x03A882D8 MOV X22, X2
	0x03A882DC MOV X20, X1
	0x03A882E0 MOV X21, X0
	0x03A882E4 TBNZ X8, 0x0, 0x3A88314
	0x03A882E8 ADRP X0, 0x6CF000
	0x03A882EC LDR X0, [X0 + 0x230]
	0x03A882F0 BL 0x1C16CF4
	0x03A882F4 ADRP X0, 0x694000
	0x03A882F8 LDR X0, [X0 + 0x8A8]
	0x03A882FC BL 0x1C16CF4
	0x03A88300 ADRP X0, 0x6CB000
	0x03A88304 LDR X0, [X0 + 0xFF8]
	0x03A88308 BL 0x1C16CF4
	0x03A8830C MOVZ W8, 0x1
	0x03A88310 STRB W8, [X23 + 0x347]
	0x03A88314 LDR W8, [X19 + 0xE0]
	0x03A88318 CBZ W8, 0x3A8832C
	0x03A8831C LDRB W8, [X19 + 0x17C]
	0x03A88320 CBZ W8, 0x3A8837C
	0x03A88324 MOVZ W23, 0x2
	0x03A88328 B 0x3A88330
	0x03A8832C MOVZ W23, 0x7
	0x03A88330 ADRP X8, 0x6CF000
	0x03A88334 LDR X8, [X8 + 0x230]
	0x03A88338 LDR V11, [X19 + 0x1E8]
	0x03A8833C LDR V10, [X19 + 0x1EC]
	0x03A88340 LDR V8, [X19 + 0x1F0]
	0x03A88344 LDR X0, [X8]
	0x03A88348 LDR V9, [X19 + 0x1F4]
	0x03A8834C LDR W8, [X0 + 0xE0]
	0x03A88350 CBNZ W8, 0x3A88358
	0x03A88354 BL 0x1C16DFC
	0x03A88358 MOV X0, X20
	0x03A8835C MOV X1, X21
	0x03A88360 MOV W2, W23
	0x03A88364 MOV V0.16B, V11.16B
	0x03A88368 MOV V1.16B, V10.16B
	0x03A8836C MOV V2.16B, V8.16B
	0x03A88370 MOV V3.16B, V9.16B
	0x03A88374 MOV X3, X31
	0x03A88378 BL 0x3A88EAC
	0x03A8837C MOVZ W4, 0x96
	0x03A88380 MOV X0, X21
	0x03A88384 MOV X1, X20
	0x03A88388 MOV X2, X22
	0x03A8838C MOV X3, X19
	0x03A88390 MOV X5, X31
	0x03A88394 BL 0x3A4C9FC
	0x03A88398 LDR X8, [X21 + 0x390]
	0x03A8839C CBZ X8, 0x3A88750
	0x03A883A0 LDR X0, [X21 + 0x1B8]
	0x03A883A4 CBZ X0, 0x3A88750
	0x03A883A8 ADD X3, X8, 0x50
	0x03A883AC ADD X2, X8, 0x48
	0x03A883B0 MOV X1, X20
	0x03A883B4 MOV X4, X19
	0x03A883B8 MOV X5, X31
	0x03A883BC BL 0x3AADC20

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x95B000
	011 Move W8, [X22+829]
	012 Move X20, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x6C9000
	020 Move X0, [X0+1664]
	021 Call 0x1C17CF4
	022 Move X0, 0x695000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+829], W8
	027 Move X23, 0x695000
	028 Move X24, 0x6C9000
	029 Move X23, [X23+2216]
	030 Move X24, [X24+1664]
	031 Move X0, X21
	032 Call UniversalRenderer.get_renderingModeActual, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Call ScriptableCullingParameters.get_cullingOptions, X0
	042 Or W1, W0, 32
	043 Move X0, X19
	044 Move X2, X31
	045 Call ScriptableCullingParameters.set_cullingOptions, X0, X1
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call UniversalRenderPipeline.get_asset
	053 Compare X0, 0
	054 JumpIfEqual {194}
	055 Move W8, [X0+128]
	056 Compare W8, 0
	057 JumpIfEqual {59}
	058 Move W22, W31
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X31
	065 Call UniversalRenderPipeline.get_asset
	066 Compare X0, 0
	067 JumpIfEqual {194}
	068 Move W8, [X0+144]
	069 Xor W22, W8, 1
	070 Move X25, 0x952000
	071 Move W8, [X25+1450]
	072 Move V8, [X20+388]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x673000
	076 Move X0, [X0+1208]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X25+1450], W8
	080 Move X8, 0x673000
	081 Move X8, [X8+1208]
	082 Move X9, -49926144
	083 Move V0, [X9+576]
	084 NotImplemented "Instruction FABS not yet implemented."
	085 Move X8, [X8]
	086 Move S2, W31
	087 NotImplemented "Instruction FMAXNM not yet implemented."
	088 Multiply S0, S1, S0
	089 Move X8, [X8+184]
	090 Move S1, 8
	091 Move V3, [X8]
	092 Multiply S1, S3, S1
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 NotImplemented "Instruction FABD not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Or W8, W22, W8
	099 Compare W8, 0
	100 JumpIfEqual {113}
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Call ScriptableCullingParameters.get_cullingOptions, X0
	109 And W1, W0, 0xFFFFFFBF
	110 Move X0, X19
	111 Move X2, X31
	112 Call ScriptableCullingParameters.set_cullingOptions, X0, X1
	113 Move X0, X21
	114 Call UniversalRenderer.get_renderingModeActual, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X24]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move W1, 0xFFFF
	122 Move X0, X21
	123 Call UniversalRenderer.get_renderingModeActual, X0
	124 Move X8, [X23]
	125 Move W21, W0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X0, X31
	132 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	133 Move X8, [X24]
	134 Move W22, W0
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X19
	142 Move W1, W22
	143 Move X2, X31
	144 Call ScriptableCullingParameters.set_maximumVisibleLights, X0, X1
	145 Move X0, X19
	146 Move W1, W31
	147 Move X2, X31
	148 Call ScriptableCullingParameters.set_reflectionProbeSortingCriteria, X0, X1
	149 Add W1, W22, 1
	150 Move X0, X19
	151 Move X2, X31
	152 Call ScriptableCullingParameters.set_maximumVisibleLights, X0, X1
	153 Move X0, [X24]
	154 Move V8, [X20+388]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X19
	160 Move V0, V8
	161 Move X1, X31
	162 Call ScriptableCullingParameters.set_shadowDistance, X0, V0
	163 Move X0, [X23]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Move X0, X31
	169 Call UniversalRenderPipeline.get_asset
	170 Compare X0, 0
	171 JumpIfEqual {194}
	172 Move W1, [X0+213]
	173 Move X0, X19
	174 Move X2, X31
	175 Call ScriptableCullingParameters.set_conservativeEnclosingSphere, X0, X1
	176 Move X0, X31
	177 Call UniversalRenderPipeline.get_asset
	178 Compare X0, 0
	179 JumpIfEqual {194}
	180 Move W1, [X0+216]
	181 Move X0, X19
	182 Move X20, [X31+64]
	183 Move X19, [X31+72]
	184 Move X22, [X31+48]
	185 Move X21, [X31+56]
	186 Move X24, [X31+32]
	187 Move X23, [X31+40]
	188 Move X30, [X31+16]
	189 Move X25, [X31+24]
	190 Move X2, X31
	191 Move V8, [X31+80]
	192 Call ScriptableCullingParameters.set_numIterationsEnclosingSphere, X0, X1
	193 Return 
	194 Call 0x1C17F20

Method: System.Void FinishRendering(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A883C0 LDR X8, [X21 + 0x390]
	0x03A883C4 CBZ X8, 0x3A88750
	0x03A883C8 LDR X0, [X21 + 0x1B0]
	0x03A883CC CBZ X0, 0x3A88750
	0x03A883D0 ADD X2, X8, 0x48
	0x03A883D4 MOV X1, X20
	0x03A883D8 MOV X3, X19
	0x03A883DC MOV X4, X31
	0x03A883E0 ADD X22, X21, 0x390
	0x03A883E4 BL 0x3AAE8E8
	0x03A883E8 ADD X23, X21, 0x348

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+624]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X1, X31
	008 Call RenderTargetBufferSystem.Clear, X0
	009 Move [X19+632], X31
	010 Move [X19+648], X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call 0x1C17F20

Method: System.Void EnqueueDeferred(ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean hasDepthPrepass, System.Boolean hasNormalPrepass, System.Boolean hasRenderingLayerPrepass, System.Boolean applyMainShadow, System.Boolean applyAdditionalShadow)

Disassembly:
	0x03A87F10 LDR W9, [X0 + 0xE0]
	0x03A87F14 CBNZ W9, 0x3A87F1C
	0x03A87F18 BL 0x1C16DFC
	0x03A87F1C MOV X0, X22
	0x03A87F20 MOV X1, X31
	0x03A87F24 BL 0x398D2E8
	0x03A87F28 TBZ X0, 0x0, 0x3A87F98
	0x03A87F2C LDR X8, [X20 + 0x390]
	0x03A87F30 CBZ X8, 0x3A88160
	0x03A87F34 LDR X0, [X23]
	0x03A87F38 LDR X22, [X8 + 0x20]
	0x03A87F3C LDR W9, [X0 + 0xE0]
	0x03A87F40 CBNZ W9, 0x3A87F4C
	0x03A87F44 BL 0x1C16DFC
	0x03A87F48 LDR X0, [X23]
	0x03A87F4C LDR X8, [X0 + 0xB8]
	0x03A87F50 STR X22, [X8 + 0x20]
	0x03A87F54 B 0x3A87F98
	0x03A87F58 CBZ X22, 0x3A88160
	0x03A87F5C LDR W10, [X8 + 0xE0]
	0x03A87F60 LDR X22, [X22 + 0x10]
	0x03A87F64 CBNZ W10, 0x3A87F78
	0x03A87F68 MOV X0, X8
	0x03A87F6C BL 0x1C16DFC
	0x03A87F70 LDR X8, [X23]
	0x03A87F74 LDR X9, [X8 + 0xB8]
	0x03A87F78 STR X22, [X9 + 0x18]
	0x03A87F7C LDR X9, [X20 + 0x390]
	0x03A87F80 CBZ X9, 0x3A88160
	0x03A87F84 LDR X9, [X9 + 0x10]
	0x03A87F88 LDR X8, [X8 + 0xB8]
	0x03A87F8C MOVZ W10, 0x1
	0x03A87F90 STR X9, [X8 + 0x20]
	0x03A87F94 STRB W10, [X20 + 0x388]
	0x03A87F98 ADRP X8, 0x6D0000
	0x03A87F9C LDR X8, [X8 + 0x220]
	0x03A87FA0 LDR X0, [X8]
	0x03A87FA4 LDR W8, [X0 + 0xE0]
	0x03A87FA8 CBNZ W8, 0x3A87FB0
	0x03A87FAC BL 0x1C16DFC
	0x03A87FB0 MOV X0, X31
	0x03A87FB4 BL 0x3C5B374
	0x03A87FB8 CBZ X0, 0x3A88160
	0x03A87FBC MOVZ W24, 0x1
	0x03A87FC0 STRB W24, [X0 + 0x27]
	0x03A87FC4 LDP V2, V0, [X21 + 0x100]
	0x03A87FC8 LDR W8, [X21 + 0x120]
	0x03A87FCC LDR V1, [X21 + 0xF]
	0x03A87FD0 ADRP X22, 0x6CF000
	0x03A87FD4 LDR X22, [X22 + 0x540]
	0x03A87FD8 ADD X0, X31, 0x160
	0x03A87FDC MOVZ W1, 0x2E
	0x03A87FE0 MOV X2, X31
	0x03A87FE4 STR W8, [X31 + 0x190]
	0x03A87FE8 STP V2, V0, [X31 + 0x170]
	0x03A87FEC STR V1, [X31 + 0x16]
	0x03A87FF0 BL 0x3C2240C
	0x03A87FF4 ADD X0, X31, 0x160
	0x03A87FF8 MOV W1, W31
	0x03A87FFC MOV X2, X31
	0x03A88000 BL 0x3C22520
	0x03A88004 STR W24, [X31 + 0x168]
	0x03A88008 LDP V2, V0, [X31 + 0x170]
	0x03A8800C LDR W8, [X31 + 0x190]
	0x03A88010 LDR V1, [X31 + 0x16]
	0x03A88014 LDR X0, [X23]
	0x03A88018 LDR X24, [X20 + 0x390]
	0x03A8801C STP V2, V0, [X31 + 0x90]
	0x03A88020 STR V1, [X31 + 0x8]
	0x03A88024 STR W8, [X31 + 0xB0]
	0x03A88028 LDR W8, [X0 + 0xE0]
	0x03A8802C CBNZ W8, 0x3A88034
	0x03A88030 BL 0x1C16DFC
	0x03A88034 LDP V0, V1, [X31 + 0x80]
	0x03A88038 LDR V2, [X31 + 0xA]
	0x03A8803C LDR W8, [X31 + 0xB0]
	0x03A88040 LDR X2, [X22]
	0x03A88044 ADD X1, X31, 0x40
	0x03A88048 MOVZ W3, 0x1
	0x03A8804C MOVZ W5, 0x1
	0x03A88050 MOV X0, X19
	0x03A88054 MOV W4, W31
	0x03A88058 STP V0, V1, [X31 + 0x40]
	0x03A8805C STR V2, [X31 + 0x6]
	0x03A88060 STR W8, [X31 + 0x70]
	0x03A88064 BL 0x3A87660
	0x03A88068 CBZ X24, 0x3A88160
	0x03A8806C ADD X8, X21, 0xF0
	0x03A88070 STR X0, [X24 + 0x58]
	0x03A88074 LDR W9, [X8 + 0x30]
	0x03A88078 LDP V1, V0, [X8 + 0x10]
	0x03A8807C LDR V2, [X8]
	0x03A88080 ADD X0, X31, 0x120
	0x03A88084 MOV W1, W31
	0x03A88088 MOV X2, X31
	0x03A8808C STR W9, [X31 + 0x150]
	0x03A88090 STP V1, V0, [X31 + 0x130]
	0x03A88094 STR V2, [X31 + 0x12]
	0x03A88098 BL 0x3C2240C
	0x03A8809C ADD X0, X31, 0x120
	0x03A880A0 MOV X1, X31
	0x03A880A4 BL 0x3C224C4
	0x03A880A8 CBZ W0, 0x3A880C0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+208], X30
	003 Move [X31+224], X20
	004 Move [X31+232], X19
	005 Move X19, X0
	006 Move X0, [X0+728]
	007 Move X20, X1
	008 Move TEMP, X6
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {13}
	012 Move X8, [X19+472]
	013 Move X8, X31
	014 Compare X0, 0
	015 JumpIfEqual {126}
	016 Move X11, [X19+632]
	017 Move X7, [X19+648]
	018 Move X6, [X19+672]
	019 And W9, W2, 1
	020 And W10, W3, 1
	021 And W5, W4, 1
	022 Move X1, X20
	023 Move X2, X8
	024 Move W3, W9
	025 Move W4, W10
	026 Move [X31], X11
	027 Move [X31+8], X31
	028 Call DeferredLights.Setup, X0, X1, X2, X3, X4, X5, X6, X7, X8
	029 Move W8, [X19+420]
	030 Compare W8, 0
	031 JumpIfEqual {89}
	032 Move X8, [X19+728]
	033 Compare X8, 0
	034 JumpIfEqual {126}
	035 Move W8, [X8+21]
	036 Compare W8, 0
	037 JumpIfEqual {89}
	038 Move V2, [X20+256]
	039 Move V0, [X20+272]
	040 Move W8, [X20+288]
	041 Move V1, [X20+15]
	042 Move X0, [X19+480]
	043 Move [X31+96], V2
	044 Move [X31+104], V0
	045 Move [X31+128], W8
	046 Move [X31+5], V1
	047 Compare X0, 0
	048 JumpIfEqual {126}
	049 Move X8, [X0]
	050 Move V0, [X31+80]
	051 Move V1, [X31+96]
	052 Move V2, [X31+7]
	053 Move W9, [X31+128]
	054 Move X10, [X8+408]
	055 Move [X31+144], V0
	056 Move [X31+152], V1
	057 Move [X31+11], V2
	058 Move [X31+192], W9
	059 Move X3, [X8+416]
	060 Add X2, X31, 144
	061 Move X1, X31
	062 Add X20, X20, 240
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move V2, [X20+16]
	065 Move V0, [X20+32]
	066 Move W8, [X20+48]
	067 Move V1, [X20]
	068 Move X0, [X19+496]
	069 Move [X31+32], V2
	070 Move [X31+40], V0
	071 Move [X31+64], W8
	072 Move [X31+1], V1
	073 Compare X0, 0
	074 JumpIfEqual {126}
	075 Move X8, [X0]
	076 Move V0, [X31+16]
	077 Move V1, [X31+32]
	078 Move V2, [X31+3]
	079 Move W9, [X31+64]
	080 Move X10, [X8+408]
	081 Move [X31+144], V0
	082 Move [X31+152], V1
	083 Move [X31+11], V2
	084 Move [X31+192], W9
	085 Move X3, [X8+416]
	086 Add X2, X31, 144
	087 Move X1, X31
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X1, [X19+480]
	090 Move X0, X19
	091 Move X2, X31
	092 Call ScriptableRenderer.EnqueuePass, X0, X1
	093 Move W8, [X19+420]
	094 Compare W8, 0
	095 JumpIfEqual {102}
	096 Move X8, [X19+728]
	097 Compare X8, 0
	098 JumpIfEqual {126}
	099 Move W8, [X8+21]
	100 Compare W8, 0
	101 JumpIfNotEqual {113}
	102 Move X0, [X19+488]
	103 Compare X0, 0
	104 JumpIfEqual {126}
	105 Move X2, [X19+672]
	106 Move X1, [X19+656]
	107 Move X3, X31
	108 Call CopyDepthPass.Setup, X0, X1, X2
	109 Move X1, [X19+488]
	110 Move X0, X19
	111 Move X2, X31
	112 Call ScriptableRenderer.EnqueuePass, X0, X1
	113 Move X1, [X19+496]
	114 Move X0, X19
	115 Move X2, X31
	116 Call ScriptableRenderer.EnqueuePass, X0, X1
	117 Move X1, [X19+504]
	118 Move X0, X19
	119 Move X2, X31
	120 Call ScriptableRenderer.EnqueuePass, X0, X1
	121 Move X20, [X31+224]
	122 Move X19, [X31+232]
	123 Move X30, [X31+208]
	124 Add X31, X31, 240
	125 Return 
	126 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.UniversalRenderer/RenderPassInputSummary GetRenderPassInputs(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A875C4 LDR X9, [X9 + 0x930]
	0x03A875C8 LDR X10, [X8 + 0x48]
	0x03A875CC LDUR V0, [X8 + 0x38]
	0x03A875D0 LDUR V1, [X8 + 0x28]
	0x03A875D4 LDR X1, [X9]
	0x03A875D8 ADD X2, X31, 0x0
	0x03A875DC MOV X0, X19
	0x03A875E0 MOV X3, X31
	0x03A875E4 STR X10, [X31 + 0x20]
	0x03A875E8 STP V1, V0, [X31]
	0x03A875EC BL 0x3C4FC28
	0x03A875F0 LDP X20, X19, [X31 + 0x130]
	0x03A875F4 LDP X30, X21, [X31 + 0x120]
	0x03A875F8 LDR X29, [X31 + 0x110]
	0x03A875FC ADD X31, X31, 0x140
	0x03A87600 RET
	0x03A87604 BL 0x1C16F20
	0x03A87608 STR X30, [X31 - 0x10]!
	0x03A8760C LDR X0, [X0 + 0x270]
	0x03A87610 CBZ X0, 0x3A87620
	0x03A87614 MOV X2, X31
	0x03A87618 LDR X30, [X31], #0x10
	0x03A8761C B 0x3AB5C5C
	0x03A87620 BL 0x1C16F20
	0x03A87624 STR X30, [X31 - 0x10]!
	0x03A87628 LDR X0, [X0 + 0x270]
	0x03A8762C CBZ X0, 0x3A8763C
	0x03A87630 MOV X2, X31
	0x03A87634 LDR X30, [X31], #0x10
	0x03A87638 B 0x3AB59EC
	0x03A8763C BL 0x1C16F20
	0x03A87640 STR X30, [X31 - 0x10]!
	0x03A87644 LDR X0, [X0 + 0x270]
	0x03A87648 CBZ X0, 0x3A8765C
	0x03A8764C AND W1, W1, 0x1
	0x03A87650 MOV X2, X31
	0x03A87654 LDR X30, [X31], #0x10
	0x03A87658 B 0x3AB5EB4
	0x03A8765C BL 0x1C16F20
	0x03A87660 SUB X31, X31, 0xC0
	0x03A87664 STR X30, [X31 + 0x80]
	0x03A87668 STP X24, X23, [X31 + 0x90]
	0x03A8766C STP X22, X21, [X31 + 0xA0]
	0x03A87670 STP X20, X19, [X31 + 0xB0]
	0x03A87674 MOVI V0.2D, 0x0
	0x03A87678 MOV X23, X1
	0x03A8767C STR X31, [X31 + 0x70]
	0x03A87680 STP V0, V0, [X31 + 0x50]
	0x03A87684 STP V0, V0, [X31 + 0x30]
	0x03A87688 STP V0, V0, [X31 + 0x10]
	0x03A8768C STR V0, [X31]
	0x03A87690 MOV X22, X2
	0x03A87694 LDR W1, [X1]
	0x03A87698 LDR W2, [X23 + 0x4]
	0x03A8769C MOV W20, W5
	0x03A876A0 MOV W21, W4
	0x03A876A4 MOV X19, X0
	0x03A876A8 AND W24, W3, 0x1
	0x03A876AC ADD X0, X31, 0x0
	0x03A876B0 MOV W3, W31
	0x03A876B4 MOV W4, W31
	0x03A876B8 MOV X5, X31
	0x03A876BC BL 0x399A938
	0x03A876C0 LDR W8, [X23 + 0x20]
	0x03A876C4 MOV X0, X23
	0x03A876C8 MOV X1, X31
	0x03A876CC STRB W24, [X31 + 0x66]
	0x03A876D0 STR W8, [X31 + 0x30]
	0x03A876D4 BL 0x3C22B90
	0x03A876D8 AND W8, W0, 0x1
	0x03A876DC MOV X0, X23
	0x03A876E0 MOV X1, X31
	0x03A876E4 STRB W8, [X31 + 0x44]
	0x03A876E8 BL 0x3C22060
	0x03A876EC STR W0, [X31 + 0x24]
	0x03A876F0 MOV X0, X23
	0x03A876F4 MOV X1, X31
	0x03A876F8 BL 0x3C224C4
	0x03A876FC STR W0, [X31 + 0x20]
	0x03A87700 LDR W8, [X23 + 0xC]
	0x03A87704 STR W8, [X31 + 0xC]
	0x03A87708 LDR W8, [X23 + 0x8]
	0x03A8770C STR X22, [X31 + 0x50]
	0x03A87710 STRB W31, [X31 + 0x34]
	0x03A87714 STP W21, W20, [X31 + 0x28]
	0x03A87718 STR W8, [X31 + 0x40]
	0x03A8771C CBZ X19, 0x3A87748
	0x03A87720 ADD X1, X31, 0x0
	0x03A87724 MOV X0, X19
	0x03A87728 MOV X2, X31
	0x03A8772C BL 0x398CAEC
	0x03A87730 LDP X20, X19, [X31 + 0xB0]
	0x03A87734 LDP X22, X21, [X31 + 0xA0]
	0x03A87738 LDP X24, X23, [X31 + 0x90]
	0x03A8773C LDR X30, [X31 + 0x80]
	0x03A87740 ADD X31, X31, 0xC0
	0x03A87744 RET
	0x03A87748 BL 0x1C16F20
	0x03A8774C STP X30, X27, [X31 - 0x50]!
	0x03A87750 STP X26, X25, [X31 + 0x10]
	0x03A87754 STP X24, X23, [X31 + 0x20]
	0x03A87758 STP X22, X21, [X31 + 0x30]
	0x03A8775C STP X20, X19, [X31 + 0x40]
	0x03A87760 ADRP X23, 0x95B000
	0x03A87764 LDRB W8, [X23 + 0x345]
	0x03A87768 MOV X25, X4
	0x03A8776C MOV X21, X3
	0x03A87770 MOV X20, X2
	0x03A87774 MOV X19, X1
	0x03A87778 MOV X22, X0
	0x03A8777C TBNZ X8, 0x0, 0x3A87794
	0x03A87780 ADRP X0, 0x6CE000
	0x03A87784 LDR X0, [X0 + 0xDE0]
	0x03A87788 BL 0x1C16CF4
	0x03A8778C MOVZ W8, 0x1
	0x03A87790 STRB W8, [X23 + 0x345]
	0x03A87794 ADD X23, X21, 0x18
	0x03A87798 MOV X0, X23
	0x03A8779C MOV X1, X31
	0x03A877A0 BL 0x3A9124C
	0x03A877A4 MOV W24, W0
	0x03A877A8 TBNZ X25, 0x0, 0x3A877C0
	0x03A877AC LDRB W8, [X21 + 0x187]
	0x03A877B0 CBNZ W8, 0x3A877C0
	0x03A877B4 LDR W8, [X22 + 0x2E4]
	0x03A877B8 CMP W8, 0x2
	0x03A877BC B.NE 0x3A877DC
	0x03A877C0 MOV X0, X22
	0x03A877C4 MOV X1, X23
	0x03A877C8 BL 0x3A83D8C
	0x03A877CC ORN W8, W31, W0, 0x0
	0x03A877D0 MOV W26, W31
	0x03A877D4 AND W27, W8, 0x1
	0x03A877D8 B 0x3A877E4
	0x03A877DC MOV W27, W31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x95C000
	015 Move W8, [X19+830]
	016 Move X20, X0
	017 Move [X31], X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x6CF000
	023 Move X0, [X0+1736]
	024 Call 0x1C17CF4
	025 Move X0, 0x6CE000
	026 Move X0, [X0+2312]
	027 Call 0x1C17CF4
	028 Move X0, 0x6CE000
	029 Move X0, [X0+2320]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+830], W8
	033 Move W8, [X20+736]
	034 Move X0, [X20+256]
	035 Move W9, 250
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 210
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {168}
	041 Move [X31+12], W31
	042 Move X21, 0x6CE000
	043 Move X26, 0x6CF000
	044 Move X21, [X21+2320]
	045 Move X26, [X26+1736]
	046 Move X19, 250
	047 Move W23, W31
	048 Move W22, W31
	049 Move W27, W31
	050 Move W25, W31
	051 Move W24, W31
	052 Move W28, W31
	053 NotImplemented "Instruction MOVK not yet implemented."
	054 Move W8, [X0+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X2, [X21]
	057 Move W1, W22
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {168}
	061 Move X9, [X0]
	062 Move X8, [X26]
	063 Move W11, [X9+304]
	064 Move W10, [X8+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, [X9+200]
	067 Add X9, X9, X10
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, 1
	071 Move [X31+12], W8
	072 Move W8, [X0+16]
	073 Move W10, [X0+200]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 And W11, W10, 2
	076 NotImplemented "Instruction CSET not yet implemented."
	077 And W12, W10, W12
	078 NotImplemented "Instruction CMP not yet implemented."
	079 And W9, W10, 1
	080 NotImplemented "Instruction CSINC not yet implemented."
	081 Compare W9, 0
	082 JumpIfEqual {89}
	083 Move X13, X19
	084 ShiftRight X13, 32
	085 And X13, X13, 0x7FFFFFFF
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 NotImplemented "Instruction BFM not yet implemented."
	089 Or W23, W23, W12
	090 Move W12, W11
	091 ShiftRight W12, 1
	092 And W12, W12, 0x7FFFFFFF
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X20+256]
	095 Or W28, W28, W9
	096 Or W24, W24, W11
	097 And W10, W10, 255
	098 And X11, X19, 0
	099 Or W9, W12, W9
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Move W12, W10
	102 ShiftRight W12, 2
	103 And W12, W12, 3
	104 Move W10, W10
	105 ShiftRight W10, 3
	106 And W10, W10, 7
	107 Or X8, X11, X8
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Or W25, W12, W25
	110 Or W27, W10, W27
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Add W22, W22, 1
	113 Compare X0, 0
	114 JumpIfNotEqual {54}
	115 Move X8, [X31]
	116 Move X1, X31
	117 Add X0, X8, 24
	118 Call CameraData.IsTemporalAAEnabled, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {124}
	123 Move W27, 1
	124 Move TEMP, X27
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {139}
	128 Move X8, [X20+456]
	129 Compare X8, 0
	130 JumpIfEqual {168}
	131 Move W8, [X8+16]
	132 Move X9, X19
	133 ShiftRight X9, 32
	134 And X9, X9, 0x7FFFFFFF
	135 Move W28, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 NotImplemented "Instruction BFM not yet implemented."
	139 Move W9, [X31+12]
	140 And X11, X24, 255
	141 And X10, X25, 255
	142 Move X0, X11
	143 ShiftRight X0, 48
	144 And X0, X0, 0x7FFF
	145 And W9, W9, 255
	146 NotImplemented "Instruction BFM not yet implemented."
	147 And W8, W27, 255
	148 NotImplemented "Instruction BFM not yet implemented."
	149 NotImplemented "Instruction BFM not yet implemented."
	150 And X11, X23, 255
	151 NotImplemented "Instruction BFM not yet implemented."
	152 Move X1, X19
	153 Move X20, [X31+96]
	154 Move X19, [X31+104]
	155 Move X22, [X31+80]
	156 Move X21, [X31+88]
	157 Move X24, [X31+64]
	158 Move X23, [X31+72]
	159 Move X26, [X31+48]
	160 Move X25, [X31+56]
	161 Move X28, [X31+32]
	162 Move X27, [X31+40]
	163 Move X29, [X31+16]
	164 Move X30, [X31+24]
	165 NotImplemented "Instruction BFM not yet implemented."
	166 Add X31, X31, 112
	167 Return X0
	168 Call 0x1C17F20

Method: System.Void CreateCameraRenderTarget(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.RenderTextureDescriptor descriptor, System.Boolean primedDepth, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8799C CSET W8, NE
	0x03A879A0 AND W8, W10, W8, 0x0
	0x03A879A4 STRB W8, [X20]
	0x03A879A8 LDRB W9, [X19]
	0x03A879AC LDP X20, X19, [X31 + 0x40]
	0x03A879B0 LDP X22, X21, [X31 + 0x30]
	0x03A879B4 LDP X24, X23, [X31 + 0x20]
	0x03A879B8 LDP X26, X25, [X31 + 0x10]
	0x03A879BC ORR W8, W8, W9, 0x0
	0x03A879C0 CMP W8, 0x0
	0x03A879C4 CSET W0, NE
	0x03A879C8 LDP X30, X27, [X31], #0x50
	0x03A879CC RET
	0x03A879D0 LDR W9, [X21 + 0xE0]
	0x03A879D4 AND W0, W0, W8, 0x0
	0x03A879D8 CBZ W9, 0x3A879E4
	0x03A879DC LDRB W8, [X21 + 0x17C]
	0x03A879E0 B 0x3A87940
	0x03A879E4 MOVZ W8, 0x1
	0x03A879E8 B 0x3A87940
	0x03A879EC BL 0x1C16F20
	0x03A879F0 STP X29, X30, [X31 - 0x40]!
	0x03A879F4 STP X24, X23, [X31 + 0x10]
	0x03A879F8 STP X22, X21, [X31 + 0x20]
	0x03A879FC STP X20, X19, [X31 + 0x30]
	0x03A87A00 SUB X31, X31, 0x250
	0x03A87A04 ADRP X23, 0x95B000
	0x03A87A08 ADRP X22, 0x66C000
	0x03A87A0C LDRB W8, [X23 + 0x346]
	0x03A87A10 LDR X22, [X22 + 0x598]
	0x03A87A14 MOV X21, X3
	0x03A87A18 MOV X19, X1
	0x03A87A1C MOV X20, X0
	0x03A87A20 TBNZ X8, 0x0, 0x3A87A98
	0x03A87A24 ADRP X0, 0x66C000
	0x03A87A28 LDR X0, [X0 + 0x598]
	0x03A87A2C BL 0x1C16CF4
	0x03A87A30 ADRP X0, 0x6CD000
	0x03A87A34 LDR X0, [X0 + 0x10]
	0x03A87A38 BL 0x1C16CF4
	0x03A87A3C ADRP X0, 0x6D0000
	0x03A87A40 LDR X0, [X0 + 0x220]
	0x03A87A44 BL 0x1C16CF4
	0x03A87A48 ADRP X0, 0x6C9000
	0x03A87A4C LDR X0, [X0 + 0xA88]
	0x03A87A50 BL 0x1C16CF4
	0x03A87A54 ADRP X0, 0x6CC000
	0x03A87A58 LDR X0, [X0 + 0xFF8]
	0x03A87A5C BL 0x1C16CF4
	0x03A87A60 ADRP X0, 0x6D0000
	0x03A87A64 LDR X0, [X0 + 0x228]
	0x03A87A68 BL 0x1C16CF4
	0x03A87A6C ADRP X0, 0x6D0000
	0x03A87A70 LDR X0, [X0 + 0x1F8]
	0x03A87A74 BL 0x1C16CF4
	0x03A87A78 ADRP X0, 0x6CF000
	0x03A87A7C LDR X0, [X0 + 0x540]
	0x03A87A80 BL 0x1C16CF4
	0x03A87A84 ADRP X0, 0x6CD000
	0x03A87A88 LDR X0, [X0 + 0x938]
	0x03A87A8C BL 0x1C16CF4
	0x03A87A90 MOVZ W8, 0x1
	0x03A87A94 STRB W8, [X23 + 0x346]
	0x03A87A98 LDR X0, [X22]
	0x03A87A9C MOVI V0.2D, 0x0
	0x03A87AA0 STR X31, [X31 + 0x240]
	0x03A87AA4 STRB W31, [X31 + 0x21C]
	0x03A87AA8 STRB W31, [X31 + 0x218]
	0x03A87AAC STR W31, [X31 + 0x210]
	0x03A87AB0 STR W31, [X31 + 0x1D0]
	0x03A87AB4 STR W31, [X31 + 0x190]
	0x03A87AB8 STR W31, [X31 + 0x150]
	0x03A87ABC STP V0, V0, [X31 + 0x220]
	0x03A87AC0 STP V0, V0, [X31 + 0x1F0]
	0x03A87AC4 STR V0, [X31 + 0x1E]
	0x03A87AC8 STP V0, V0, [X31 + 0x1B0]
	0x03A87ACC STR V0, [X31 + 0x1A]
	0x03A87AD0 STP V0, V0, [X31 + 0x170]
	0x03A87AD4 STR V0, [X31 + 0x16]
	0x03A87AD8 STP V0, V0, [X31 + 0x130]
	0x03A87ADC STR V0, [X31 + 0x12]
	0x03A87AE0 LDR W8, [X0 + 0xE0]
	0x03A87AE4 LDR X22, [X21 + 0xE8]
	0x03A87AE8 CBNZ W8, 0x3A87AF0
	0x03A87AEC BL 0x1C16DFC
	0x03A87AF0 MOV X0, X22
	0x03A87AF4 MOV X1, X31
	0x03A87AF8 MOV X2, X31
	0x03A87AFC BL 0x3C354F8
	0x03A87B00 TBZ X0, 0x0, 0x3A87B24
	0x03A87B04 LDR X1, [X21 + 0xE8]
	0x03A87B08 MOVI V0.2D, 0x0
	0x03A87B0C ADD X0, X31, 0x80
	0x03A87B10 MOV X2, X31
	0x03A87B14 STR X31, [X31 + 0xA0]
	0x03A87B18 STP V0, V0, [X31 + 0x80]
	0x03A87B1C BL 0x3C4B0C4
	0x03A87B20 B 0x3A87B34
	0x03A87B24 ADD X8, X31, 0x80
	0x03A87B28 MOVZ W0, 0x2
	0x03A87B2C MOV X1, X31
	0x03A87B30 BL 0x3C4B204
	0x03A87B34 LDP V0, V1, [X31 + 0x80]
	0x03A87B38 LDR X8, [X31 + 0xA0]
	0x03A87B3C STP V0, V1, [X31 + 0xF0]
	0x03A87B40 LDP V0, V1, [X31 + 0xF0]
	0x03A87B44 STR X8, [X31 + 0x110]
	0x03A87B48 STR X8, [X31 + 0x240]
	0x03A87B4C STP V0, V1, [X31 + 0x220]
	0x03A87B50 LDR X0, [X21 + 0x190]
	0x03A87B54 CBZ X0, 0x3A88160
	0x03A87B58 MOV X1, X31
	0x03A87B5C BL 0x3984C98
	0x03A87B60 TBZ X0, 0x0, 0x3A87B7C
	0x03A87B64 LDR X8, [X21 + 0x190]
	0x03A87B68 CBZ X8, 0x3A88160
	0x03A87B6C LDR X9, [X8 + 0x50]
	0x03A87B70 LDP V1, V0, [X8 + 0x30]
	0x03A87B74 STR X9, [X31 + 0x240]
	0x03A87B78 STP V1, V0, [X31 + 0x220]
	0x03A87B7C LDP V0, V1, [X31 + 0x220]
	0x03A87B80 LDR X8, [X31 + 0x240]
	0x03A87B84 LDR X22, [X20 + 0x390]
	0x03A87B88 STP V0, V1, [X31 + 0x80]
	0x03A87B8C STR X8, [X31 + 0xA0]
	0x03A87B90 CBZ X19, 0x3A88160
	0x03A87B94 LDP V0, V1, [X31 + 0x80]
	0x03A87B98 LDR X8, [X31 + 0xA0]
	0x03A87B9C ADD X1, X31, 0xC0
	0x03A87BA0 MOV X0, X19
	0x03A87BA4 MOV X2, X31
	0x03A87BA8 STP V0, V1, [X31 + 0xC0]
	0x03A87BAC STR X8, [X31 + 0xE0]
	0x03A87BB0 BL 0x398C95C
	0x03A87BB4 CBZ X22, 0x3A88160
	0x03A87BB8 ADRP X23, 0x6CC000
	0x03A87BBC LDR X23, [X23 + 0xFF8]
	0x03A87BC0 STR X0, [X22 + 0x10]
	0x03A87BC4 MOV X0, X20
	0x03A87BC8 MOV X1, X21
	0x03A87BCC BL 0x3A865C4
	0x03A87BD0 STRB W31, [X31 + 0x21C]
	0x03A87BD4 STRB W31, [X31 + 0x218]
	0x03A87BD8 LDR W8, [X21 + 0xE0]
	0x03A87BDC CBZ W8, 0x3A87BE8
	0x03A87BE0 LDR X8, [X23]
	0x03A87BE4 B 0x3A87C28
	0x03A87BE8 MOV X4, X0
	0x03A87BEC MOV X5, X1
	0x03A87BF0 ADD X1, X31, 0x21C
	0x03A87BF4 ADD X2, X31, 0x218
	0x03A87BF8 MOV X0, X20
	0x03A87BFC MOV X3, X21
	0x03A87C00 BL 0x3A8774C
	0x03A87C04 LDR X8, [X23]
	0x03A87C08 AND W22, W0, 0x1
	0x03A87C0C LDR W9, [X8 + 0xE0]
	0x03A87C10 CBNZ W9, 0x3A87C20
	0x03A87C14 MOV X0, X8
	0x03A87C18 BL 0x1C16DFC
	0x03A87C1C LDR X8, [X23]
	0x03A87C20 LDR X9, [X8 + 0xB8]
	0x03A87C24 STRB W22, [X9 + 0x28]
	0x03A87C28 LDR W9, [X8 + 0xE0]
	0x03A87C2C CBNZ W9, 0x3A87C3C
	0x03A87C30 MOV X0, X8
	0x03A87C34 BL 0x1C16DFC
	0x03A87C38 LDR X8, [X23]
	0x03A87C3C LDR X9, [X8 + 0xB8]
	0x03A87C40 ADRP X22, 0x6CD000
	0x03A87C44 LDRB W9, [X9 + 0x28]
	0x03A87C48 LDR X22, [X22 + 0x10]
	0x03A87C4C CBZ W9, 0x3A87CF4
	0x03A87C50 LDR W8, [X21 + 0x120]
	0x03A87C54 LDP V1, V0, [X21 + 0x100]
	0x03A87C58 LDR V2, [X21 + 0xF]
	0x03A87C5C ADD X0, X31, 0x1E0
	0x03A87C60 MOV W1, W31
	0x03A87C64 MOV X2, X31
	0x03A87C68 STR W8, [X31 + 0x210]
	0x03A87C6C STP V1, V0, [X31 + 0x1F0]
	0x03A87C70 STR V2, [X31 + 0x1E]
	0x03A87C74 BL 0x3C22B28
	0x03A87C78 ADD X0, X31, 0x1E0
	0x03A87C7C MOV W1, W31
	0x03A87C80 MOV X2, X31
	0x03A87C84 BL 0x3C22B44
	0x03A87C88 ADD X0, X31, 0x1E0
	0x03A87C8C MOV W1, W31
	0x03A87C90 MOV X2, X31
	0x03A87C94 BL 0x3C22520
	0x03A87C98 LDR X0, [X23]
	0x03A87C9C LDR W8, [X0 + 0xE0]
	0x03A87CA0 CBNZ W8, 0x3A87CA8
	0x03A87CA4 BL 0x1C16DFC
	0x03A87CA8 LDR X0, [X22]
	0x03A87CAC ADRP X24, 0x6D0000
	0x03A87CB0 LDR W8, [X0 + 0xE0]
	0x03A87CB4 LDR X24, [X24 + 0x228]
	0x03A87CB8 CBNZ W8, 0x3A87CC0
	0x03A87CBC BL 0x1C16DFC
	0x03A87CC0 LDR X8, [X23]
	0x03A87CC4 LDR X6, [X24]
	0x03A87CC8 ADD X1, X31, 0x1E0
	0x03A87CCC FMOV S0, W31
	0x03A87CD0 LDR X8, [X8 + 0xB8]
	0x03A87CD4 MOVZ W2, 0x1
	0x03A87CD8 MOVZ W3, 0x1
	0x03A87CDC MOVZ W5, 0x1
	0x03A87CE0 ADD X0, X8, 0x8
	0x03A87CE4 MOV W4, W31
	0x03A87CE8 MOV X7, X31
	0x03A87CEC BL 0x3A6D184
	0x03A87CF0 LDR X8, [X23]
	0x03A87CF4 LDR W9, [X8 + 0xE0]
	0x03A87CF8 CBNZ W9, 0x3A87D08
	0x03A87CFC MOV X0, X8
	0x03A87D00 BL 0x1C16DFC
	0x03A87D04 LDR X8, [X23]
	0x03A87D08 LDR X9, [X8 + 0xB8]
	0x03A87D0C LDRB W9, [X9 + 0x28]
	0x03A87D10 CBZ W9, 0x3A87E28
	0x03A87D14 LDR W8, [X21 + 0x120]
	0x03A87D18 LDP V1, V0, [X21 + 0x100]
	0x03A87D1C LDR V2, [X21 + 0xF]
	0x03A87D20 ADD X0, X31, 0x1A0
	0x03A87D24 MOV W1, W31
	0x03A87D28 MOV X2, X31
	0x03A87D2C STR W8, [X31 + 0x1D0]
	0x03A87D30 STP V1, V0, [X31 + 0x1B0]
	0x03A87D34 STR V2, [X31 + 0x1A]
	0x03A87D38 BL 0x3C22B28
	0x03A87D3C ADD X0, X31, 0x1A0
	0x03A87D40 MOV W1, W31
	0x03A87D44 MOV X2, X31
	0x03A87D48 BL 0x3C22B44
	0x03A87D4C ADD X0, X31, 0x1A0
	0x03A87D50 MOV W1, W31
	0x03A87D54 MOV X2, X31
	0x03A87D58 BL 0x3C22B9C
	0x03A87D5C LDR W8, [X31 + 0x1A8]
	0x03A87D60 CMP W8, 0x2
	0x03A87D64 B.LT 0x3A87D84
	0x03A87D68 MOV X0, X31
	0x03A87D6C BL 0x3C3BE3C
	0x03A87D70 CBZ W0, 0x3A87D84
	0x03A87D74 ADD X0, X31, 0x1A0
	0x03A87D78 MOVZ W1, 0x1
	0x03A87D7C MOV X2, X31
	0x03A87D80 BL 0x3C22B9C
	0x03A87D84 MOV X0, X31
	0x03A87D88 BL 0x3C3BACC
	0x03A87D8C CMP W0, 0x8
	0x03A87D90 B.EQ 0x3A87DA4
	0x03A87D94 MOV X0, X31
	0x03A87D98 BL 0x3C3BACC
	0x03A87D9C CMP W0, 0xB
	0x03A87DA0 B.NE 0x3A87DB4
	0x03A87DA4 ADD X0, X31, 0x1A0
	0x03A87DA8 MOV W1, W31
	0x03A87DAC MOV X2, X31
	0x03A87DB0 BL 0x3C22B9C
	0x03A87DB4 ADD X0, X31, 0x1A0
	0x03A87DB8 MOV W1, W31
	0x03A87DBC MOV X2, X31
	0x03A87DC0 BL 0x3C2240C
	0x03A87DC4 LDR X0, [X23]
	0x03A87DC8 MOVZ W8, 0x5C
	0x03A87DCC STR W8, [X31 + 0x1BC]
	0x03A87DD0 LDR W8, [X0 + 0xE0]
	0x03A87DD4 CBNZ W8, 0x3A87DDC
	0x03A87DD8 BL 0x1C16DFC
	0x03A87DDC LDR X0, [X22]
	0x03A87DE0 ADRP X22, 0x6CD000
	0x03A87DE4 LDR W8, [X0 + 0xE0]
	0x03A87DE8 LDR X22, [X22 + 0x938]
	0x03A87DEC CBNZ W8, 0x3A87DF4
	0x03A87DF0 BL 0x1C16DFC
	0x03A87DF4 LDR X8, [X23]
	0x03A87DF8 LDR X6, [X22]
	0x03A87DFC ADD X1, X31, 0x1A0
	0x03A87E00 FMOV S0, W31
	0x03A87E04 LDR X8, [X8 + 0xB8]
	0x03A87E08 MOVZ W3, 0x1
	0x03A87E0C MOVZ W5, 0x1
	0x03A87E10 MOV W2, W31
	0x03A87E14 ADD X0, X8, 0x10
	0x03A87E18 MOV W4, W31
	0x03A87E1C MOV X7, X31
	0x03A87E20 BL 0x3A6D184
	0x03A87E24 LDR X8, [X23]
	0x03A87E28 LDR W9, [X8 + 0xE0]
	0x03A87E2C CBNZ W9, 0x3A87E3C
	0x03A87E30 MOV X0, X8
	0x03A87E34 BL 0x1C16DFC
	0x03A87E38 LDR X8, [X23]
	0x03A87E3C LDR X9, [X8 + 0xB8]
	0x03A87E40 LDR X22, [X20 + 0x390]
	0x03A87E44 LDRB W10, [X9 + 0x28]
	0x03A87E48 CBZ W10, 0x3A87F58
	0x03A87E4C LDR W10, [X8 + 0xE0]
	0x03A87E50 CBNZ W10, 0x3A87E64
	0x03A87E54 MOV X0, X8
	0x03A87E58 BL 0x1C16DFC
	0x03A87E5C LDR X8, [X23]
	0x03A87E60 LDR X9, [X8 + 0xB8]
	0x03A87E64 LDR X1, [X9 + 0x10]
	0x03A87E68 MOV X0, X19
	0x03A87E6C MOV X2, X31
	0x03A87E70 BL 0x398C894
	0x03A87E74 CBZ X22, 0x3A88160
	0x03A87E78 STR X0, [X22 + 0x20]
	0x03A87E7C LDR X8, [X23]
	0x03A87E80 LDR X22, [X20 + 0x390]
	0x03A87E84 MOV X0, X19
	0x03A87E88 MOV X2, X31
	0x03A87E8C LDR X8, [X8 + 0xB8]
	0x03A87E90 LDR X1, [X8 + 0x8]
	0x03A87E94 BL 0x398C894
	0x03A87E98 CBZ X22, 0x3A88160
	0x03A87E9C STR X0, [X22 + 0x18]
	0x03A87EA0 LDR X8, [X20 + 0x390]
	0x03A87EA4 CBZ X8, 0x3A88160
	0x03A87EA8 ADRP X24, 0x6C9000
	0x03A87EAC LDR X24, [X24 + 0xA88]
	0x03A87EB0 ADD X22, X8, 0x18
	0x03A87EB4 LDR X0, [X24]
	0x03A87EB8 LDR W9, [X0 + 0xE0]
	0x03A87EBC CBNZ W9, 0x3A87EC4
	0x03A87EC0 BL 0x1C16DFC
	0x03A87EC4 MOV X0, X22
	0x03A87EC8 MOV X1, X31
	0x03A87ECC BL 0x398D2E8
	0x03A87ED0 TBZ X0, 0x0, 0x3A87F00
	0x03A87ED4 LDR X8, [X20 + 0x390]
	0x03A87ED8 CBZ X8, 0x3A88160
	0x03A87EDC LDR X0, [X23]
	0x03A87EE0 LDR X22, [X8 + 0x18]
	0x03A87EE4 LDR W9, [X0 + 0xE0]
	0x03A87EE8 CBNZ W9, 0x3A87EF4
	0x03A87EEC BL 0x1C16DFC
	0x03A87EF0 LDR X0, [X23]
	0x03A87EF4 LDR X8, [X0 + 0xB8]
	0x03A87EF8 STR X22, [X8 + 0x18]
	0x03A87EFC STRB W31, [X20 + 0x388]
	0x03A87F00 LDR X8, [X20 + 0x390]
	0x03A87F04 CBZ X8, 0x3A88160
	0x03A87F08 LDR X0, [X24]
	0x03A87F0C ADD X22, X8, 0x20

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 496
	010 Move X24, 0x95C000
	011 Move [X31+488], X1
	012 Move X23, 0x6D1000
	013 Move W8, [X24+831]
	014 Move X23, [X23+536]
	015 Move X22, X5
	016 Move X19, X4
	017 Move X20, X2
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x6D1000
	024 Move X0, [X0+536]
	025 Call 0x1C17CF4
	026 Move X0, 0x6CE000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move X0, 0x6CA000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move X0, 0x6CE000
	033 Move X0, [X0+2344]
	034 Call 0x1C17CF4
	035 Move X0, 0x6CE000
	036 Move X0, [X0+2352]
	037 Call 0x1C17CF4
	038 Move X0, 0x6CE000
	039 Move X0, [X0+2360]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X24+831], W8
	043 Move X0, [X23]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+480], W31
	046 Move [X31+464], W31
	047 Move [X31+432], V0
	048 Move [X31+440], V0
	049 Move [X31+26], V0
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Add X0, X31, 480
	057 Move X1, X31
	058 Move X3, X31
	059 Move X2, [X8]
	060 Call ProfilingScope..ctor, X0, X1, X2
	061 Move X0, [X21+624]
	062 Compare X0, 0
	063 JumpIfEqual {347}
	064 Move X1, X31
	065 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	066 Add X23, X31, 328
	067 Compare X0, 0
	068 JumpIfEqual {106}
	069 Move X0, [X21+624]
	070 Compare X0, 0
	071 JumpIfEqual {355}
	072 Move X1, X31
	073 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	074 Compare X0, 0
	075 JumpIfEqual {356}
	076 Move X8, [X0+72]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move [X31+400], X8
	080 Move [X31+368], V1
	081 Move [X31+376], V0
	082 Add X8, X31, 328
	083 Move W0, 2
	084 Move X1, X31
	085 Call RenderTargetIdentifier.op_Implicit, X0
	086 Move V0, [X23]
	087 Move V1, [X23+16]
	088 Move X8, [X31+360]
	089 Move V2, [X31+368]
	090 Move V3, [X31+384]
	091 Move X9, [X31+400]
	092 Move [X31+240], V0
	093 Move [X31+248], V1
	094 Move [X31+272], X8
	095 Move [X31+288], V2
	096 Move [X31+296], V3
	097 Move [X31+320], X9
	098 Add X0, X31, 288
	099 Add X1, X31, 240
	100 Move X2, X31
	101 Call RenderTargetIdentifier.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {157}
	106 Move X0, [X21+624]
	107 Compare X0, 0
	108 JumpIfEqual {349}
	109 Move X1, X19
	110 Move X2, X31
	111 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	112 Move X1, X0
	113 Move [X21+632], X1
	114 Move X0, X21
	115 Move X2, X31
	116 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	117 Move X8, [X21+632]
	118 Compare X8, 0
	119 JumpIfEqual {350}
	120 Move X9, [X8+72]
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 Move [X31+400], X9
	124 Move [X31+368], V1
	125 Move [X31+376], V0
	126 Compare X19, 0
	127 JumpIfEqual {351}
	128 Move X8, 0x6CE000
	129 Move X8, [X8+2344]
	130 Move V0, [X31+368]
	131 Move V1, [X31+384]
	132 Move X9, [X31+400]
	133 Move X1, [X8]
	134 Move [X31+192], V0
	135 Move [X31+200], V1
	136 Move [X31+224], X9
	137 Add X2, X31, 192
	138 Move X0, X19
	139 Move X3, X31
	140 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	141 Move X8, [X21+632]
	142 Compare X8, 0
	143 JumpIfEqual {352}
	144 Move X9, 0x6CE000
	145 Move X9, [X9+2352]
	146 Move X10, [X8+72]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 Move X1, [X9]
	150 Move [X31+176], X10
	151 Move [X31+144], V1
	152 Move [X31+152], V0
	153 Add X2, X31, 144
	154 Move X0, X19
	155 Move X3, X31
	156 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	157 Move X8, [X21+656]
	158 Compare X8, 0
	159 JumpIfEqual {190}
	160 Move X9, [X8+72]
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move [X31+400], X9
	164 Move [X31+368], V1
	165 Move [X31+376], V0
	166 Add X8, X31, 328
	167 Move W0, 2
	168 Move X1, X31
	169 Call RenderTargetIdentifier.op_Implicit, X0
	170 Move V0, [X23]
	171 Move V1, [X23+16]
	172 Move X8, [X31+360]
	173 Move V2, [X31+368]
	174 Move V3, [X31+384]
	175 Move X9, [X31+400]
	176 Move [X31+48], V0
	177 Move [X31+56], V1
	178 Move [X31+80], X8
	179 Move [X31+96], V2
	180 Move [X31+104], V3
	181 Move [X31+128], X9
	182 Add X0, X31, 96
	183 Add X1, X31, 48
	184 Move X2, X31
	185 Call RenderTargetIdentifier.op_Inequality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {318}
	190 Move W8, [X20+48]
	191 Move V1, [X20+16]
	192 Move V0, [X20+32]
	193 Move V2, [X20]
	194 Move [X31+464], W8
	195 Move [X31+432], V1
	196 Move [X31+440], V0
	197 Move [X31+26], V2
	198 Add X0, X31, 416
	199 Move W1, W31
	200 Move X2, X31
	201 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	202 Add X0, X31, 416
	203 Move W1, W31
	204 Move X2, X31
	205 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	206 Add X0, X31, 416
	207 Move W1, W31
	208 Move X2, X31
	209 Call RenderTextureDescriptor.set_bindMS, X0, X1
	210 Move W8, [X31+424]
	211 Move X23, 0x6CE000
	212 Move X23, [X23+16]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, X31
	215 Call SystemInfo.get_supportsMultisampledTextures
	216 Compare W0, 0
	217 JumpIfEqual {253}
	218 Move X0, X21
	219 Move X1, X22
	220 Call UniversalRenderer.IsDepthPrimingEnabled, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {229}
	225 Add X0, X31, 416
	226 Move W1, 1
	227 Move X2, X31
	228 Call RenderTextureDescriptor.set_bindMS, X0, X1
	229 Move X0, [X23]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X31
	235 Call RenderingUtils.MultisampleDepthResolveSupported
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {249}
	240 Move X0, X31
	241 Call SystemInfo.get_supportsMultisampleAutoResolve
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {249}
	246 Move W8, [X21+744]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction CSET not yet implemented."
	249 Move W1, 1
	250 Add X0, X31, 416
	251 Move X2, X31
	252 Call RenderTextureDescriptor.set_bindMS, X0, X1
	253 Move X0, X31
	254 Call SystemInfo.get_graphicsDeviceType
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X0, X31
	257 Call SystemInfo.get_graphicsDeviceType
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X0, X31, 416
	260 Move W1, W31
	261 Move X2, X31
	262 Call RenderTextureDescriptor.set_bindMS, X0, X1
	263 Add X0, X31, 416
	264 Move W1, W31
	265 Move X2, X31
	266 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	267 Move X0, [X23]
	268 Move W8, 92
	269 Move [X31+444], W8
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X8, 0x6CE000
	275 Move X8, [X8+2360]
	276 Add X21, X21, 656
	277 Move X6, [X8]
	278 Add X1, X31, 416
	279 Move S0, W31
	280 Move W3, 1
	281 Move W5, 1
	282 Move X0, X21
	283 Move W2, W31
	284 Move W4, W31
	285 Move X7, X31
	286 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	287 Move X8, [X21]
	288 Compare X8, 0
	289 JumpIfEqual {353}
	290 Move X9, [X8+72]
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 Move X1, [X8+88]
	294 Move [X31+400], X9
	295 Move [X31+368], V1
	296 Move [X31+376], V0
	297 Compare X19, 0
	298 JumpIfEqual {354}
	299 Move V0, [X31+368]
	300 Move V1, [X31+384]
	301 Move X8, [X31+400]
	302 Move [X31], V0
	303 Move [X31+8], V1
	304 Move [X31+32], X8
	305 Add X2, X31, 0
	306 Move X0, X19
	307 Move X3, X31
	308 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	309 Move W8, [X31+444]
	310 Move [X20+28], W8
	311 Add X0, X31, 416
	312 Move X1, X31
	313 Call RenderTextureDescriptor.get_depthBufferBits, X0
	314 Move W1, W0
	315 Move X0, X20
	316 Move X2, X31
	317 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	318 Add X0, X31, 480
	319 Move X1, X31
	320 Call ProfilingScope.Dispose, X0
	321 Move X8, 0x6CA000
	322 Move X8, [X8+3200]
	323 Move X0, [X8]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Add X0, X31, 488
	329 Move X1, X19
	330 Move X2, X31
	331 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	332 Compare X19, 0
	333 JumpIfEqual {348}
	334 Move X0, X19
	335 Move X1, X31
	336 Call CommandBuffer.Clear, X0
	337 Add X31, X31, 496
	338 Move X20, [X31+48]
	339 Move X19, [X31+56]
	340 Move X22, [X31+32]
	341 Move X21, [X31+40]
	342 Move X24, [X31+16]
	343 Move X23, [X31+24]
	344 Move X29, [X31+64]
	345 Move X30, [X31+72]
	346 Return 
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Move X20, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X20
	360 Call 0x3EB2AD0
	361 Move X21, [X0]
	362 Call 0x3EB2AE0
	363 Add X0, X31, 480
	364 Move X1, X31
	365 Call ProfilingScope.Dispose, X0
	366 Compare X21, 0
	367 JumpIfEqual {321}
	368 Move X0, X21
	369 Call 0x1C17F18
	370 Move X21, X31
	371 Move X20, X0
	372 Add X0, X31, 480
	373 Move X1, X31
	374 Call ProfilingScope.Dispose, X0
	375 Compare X21, 0
	376 JumpIfNotEqual {379}
	377 Move X0, X20
	378 Call 0x1D2D690
	379 Move X0, X21
	380 Call 0x1C17F18
	381 Call 0x1991590

Method: System.Boolean PlatformRequiresExplicitMsaaResolve()

Disassembly:
	0x03A883EC MOV X0, X23
	0x03A883F0 MOV X1, X31
	0x03A883F4 BL 0x3A6783C
	0x03A883F8 TBZ X0, 0x0, 0x3A88420
	0x03A883FC LDR X8, [X22]
	0x03A88400 CBZ X8, 0x3A88750
	0x03A88404 LDR X0, [X23]
	0x03A88408 CBZ X0, 0x3A88750
	0x03A8840C ADD X2, X8, 0x68
	0x03A88410 MOV X1, X20
	0x03A88414 MOV X3, X19
	0x03A88418 MOV X4, X31
	0x03A8841C BL 0x3AA9C4C
	0x03A88420 LDR X0, [X19 + 0x190]
	0x03A88424 CBZ X0, 0x3A88750
	0x03A88428 MOV X1, X31
	0x03A8842C BL 0x398892C
	0x03A88430 TBZ X0, 0x0, 0x3A88464
	0x03A88434 LDR X0, [X21 + 0x250]
	0x03A88438 CBZ X0, 0x3A88750
	0x03A8843C LDRB W8, [X21 + 0x388]
	0x03A88440 STRB W8, [X0 + 0xE8]
	0x03A88444 LDR X8, [X21 + 0x390]
	0x03A88448 CBZ X8, 0x3A88750
	0x03A8844C ADD X2, X8, 0x18
	0x03A88450 ADD X3, X8, 0x20
	0x03A88454 MOV X1, X20
	0x03A88458 MOV X4, X19
	0x03A8845C MOV X5, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x95B000
	004 Move W8, [X19+832]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x66C000
	010 Move X0, [X0+2416]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+832], W8
	014 Move X0, X31
	015 Call SystemInfo.get_supportsMultisampleAutoResolve
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {34}
	020 Move X8, 0x66C000
	021 Move X8, [X8+2416]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Application.get_isMobilePlatform
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move W0, W31
	034 Move X0, X31
	035 Call SystemInfo.get_graphicsDeviceType
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Return X0

Method: System.Boolean RequiresIntermediateColorTexture(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A877E0 MOVZ W26, 0x1
	0x03A877E4 MOV X0, X23
	0x03A877E8 MOV X1, X31
	0x03A877EC BL 0x3A8DE34
	0x03A877F0 LDR X8, [X22 + 0x108]
	0x03A877F4 CBZ X8, 0x3A879EC
	0x03A877F8 UBFM X10, X25, 0x10, 0x1F
	0x03A877FC ORR W10, W10, W25, 0x8
	0x03A87800 LDR W8, [X8 + 0x18]
	0x03A87804 ORR W10, W10, W24, 0x0
	0x03A87808 AND W10, W10, 0x1
	0x03A8780C AND W9, W0, 0x1
	0x03A87810 ORR W10, W10, W27, 0x0
	0x03A87814 ORR W25, W10, W9, 0x0
	0x03A87818 CBZ W8, 0x3A87834
	0x03A8781C LDR W8, [X22 + 0x308]
	0x03A87820 CMP W8, 0x1
	0x03A87824 B.NE 0x3A87834
	0x03A87828 ORN W8, W31, W24, 0x0
	0x03A8782C AND W27, W8, 0x1
	0x03A87830 B 0x3A87838
	0x03A87834 MOV W27, W31
	0x03A87838 MOV X0, X22
	0x03A8783C MOV X1, X23
	0x03A87840 STRB W27, [X19]
	0x03A87844 BL 0x3A867E0
	0x03A87848 ORR W8, W27, W0, 0x0
	0x03A8784C EOR W9, W25, 0x1
	0x03A87850 CMP W26, 0x0
	0x03A87854 BIC W8, W8, W24, 0x0
	0x03A87858 CSEL W9, W31, W9, NE
	0x03A8785C AND W8, W8, 0x1
	0x03A87860 STRB W8, [X19]
	0x03A87864 STRB W9, [X20]
	0x03A87868 LDRB W8, [X21 + 0x1D8]
	0x03A8786C MOV X0, X22
	0x03A87870 EOR W8, W8, 0x1
	0x03A87874 ORR W24, W8, W9, 0x0
	0x03A87878 STRB W24, [X20]
	0x03A8787C BL 0x3A82610
	0x03A87880 CMP W0, 0x1
	0x03A87884 MOV W8, W31
	0x03A87888 B.NE 0x3A87894
	0x03A8788C LDRB W8, [X22 + 0x1A4]
	0x03A87890 EOR W8, W8, 0x1
	0x03A87894 ORR W8, W8, W24, 0x0
	0x03A87898 STRB W8, [X20]
	0x03A8789C LDR W9, [X22 + 0x2E4]
	0x03A878A0 CMP W9, 0x2
	0x03A878A4 CSET W9, EQ
	0x03A878A8 ORR W8, W8, W9, 0x0
	0x03A878AC STRB W8, [X20]
	0x03A878B0 LDR X0, [X21 + 0x190]
	0x03A878B4 CBZ X0, 0x3A879EC
	0x03A878B8 MOV X1, X31
	0x03A878BC BL 0x3984C98
	0x03A878C0 TBZ X0, 0x0, 0x3A878D4
	0x03A878C4 LDRB W8, [X19]
	0x03A878C8 LDRB W9, [X20]
	0x03A878CC ORR W8, W9, W8, 0x0
	0x03A878D0 STRB W8, [X19]
	0x03A878D4 MOV X0, X31
	0x03A878D8 BL 0x3C3BACC
	0x03A878DC CMP W0, 0x15
	0x03A878E0 B.EQ 0x3A878F4
	0x03A878E4 LDRB W8, [X19]
	0x03A878E8 LDRB W9, [X20]
	0x03A878EC ORR W8, W9, W8, 0x0
	0x03A878F0 STRB W8, [X19]
	0x03A878F4 CMP W25, 0x0
	0x03A878F8 MOV X0, X22
	0x03A878FC MOV X1, X23
	0x03A87900 CSET W24, NE
	0x03A87904 BL 0x3A83CA8
	0x03A87908 CBZ W25, 0x3A8793C
	0x03A8790C LDRB W8, [X20]
	0x03A87910 LDRB W9, [X19]
	0x03A87914 AND W0, W0, W24, 0x0
	0x03A87918 ORR W9, W9, W8, 0x0
	0x03A8791C CMP W9, 0x0
	0x03A87920 CSET W8, NE
	0x03A87924 CBZ W9, 0x3A8793C
	0x03A87928 LDR W9, [X22 + 0x2E0]
	0x03A8792C AND W0, W0, W8, 0x0
	0x03A87930 CMP W9, 0x0
	0x03A87934 CSET W8, EQ
	0x03A87938 CBZ W9, 0x3A879D0
	0x03A8793C MOV W8, W31
	0x03A87940 LDRB W9, [X22 + 0x1A4]
	0x03A87944 AND W8, W0, W8, 0x0
	0x03A87948 AND W8, W8, 0x1
	0x03A8794C ORR W8, W8, W9, 0x0
	0x03A87950 CBZ W8, 0x3A87964
	0x03A87954 LDRB W8, [X19]
	0x03A87958 LDRB W9, [X20]
	0x03A8795C ORR W8, W9, W8, 0x0
	0x03A87960 STRB W8, [X19]
	0x03A87964 LDR W8, [X21 + 0xE0]
	0x03A87968 CBZ W8, 0x3A87974
	0x03A8796C LDRB W8, [X20]
	0x03A87970 B 0x3A879A8
	0x03A87974 LDR X0, [X21 + 0xD8]
	0x03A87978 CBZ X0, 0x3A879EC
	0x03A8797C MOV X1, X31
	0x03A87980 BL 0x3C04C50
	0x03A87984 LDRB W8, [X19]
	0x03A87988 LDRB W9, [X20]
	0x03A8798C CMP W0, 0x1
	0x03A87990 CSET W10, NE
	0x03A87994 ORR W8, W9, W8, 0x0
	0x03A87998 CMP W8, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x95C000
	012 Move W8, [X21+833]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x66D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+833], W8
	024 Move W8, [X19+200]
	025 Compare W8, 0
	026 JumpIfNotEqual {30}
	027 Move W8, [X19+448]
	028 Compare W8, 0
	029 JumpIfEqual {118}
	030 Move X0, X20
	031 Call UniversalRenderer.get_renderingModeActual, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move X1, X31
	035 Call CameraData.get_isSceneViewCamera, X0
	036 Move W8, [X19+336]
	037 Move W27, [X19+248]
	038 Move W9, [X19+224]
	039 Move W21, W0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W26, W31
	046 Call UniversalRenderer.PlatformRequiresExplicitMsaaResolve, X0
	047 And W26, W0, 1
	048 Move X8, 0x66D000
	049 Move X8, [X8+1432]
	050 Move X22, [X19+208]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X22
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move X8, [X19+376]
	061 Compare X8, 0
	062 JumpIfEqual {145}
	063 Move X25, [X19+400]
	064 Move W22, W0
	065 Move X0, X8
	066 Move X1, X31
	067 Call XRPass.get_enabled, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {79}
	072 Move X8, [X19+376]
	073 Compare X8, 0
	074 JumpIfEqual {145}
	075 Move W8, [X8+120]
	076 Move W24, W31
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move W8, [X19+392]
	080 Compare W8, 0
	081 JumpIfEqual {90}
	082 Add X0, X20, 840
	083 Move X1, X31
	084 Call PostProcessPasses.get_isCreated, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {90}
	089 Move W8, 1
	090 Move W8, [X19+368]
	091 Or W8, W8, W26
	092 Compare W8, 0
	093 JumpIfEqual {95}
	094 Move W0, 1
	095 Move W8, [X19+364]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 NotImplemented "Instruction ORN not yet implemented."
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {119}
	103 Or W8, W21, W0
	104 Or W8, W24, W8
	105 Move TEMP, X8
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {112}
	109 Move W8, [X19+365]
	110 Compare W8, 0
	111 JumpIfEqual {144}
	112 Move W8, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Or W8, W8, W9
	116 Compare W8, 0
	117 JumpIfEqual {130}
	118 Move W0, 1
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X24, [X31+32]
	124 Move X23, [X31+40]
	125 Move X26, [X31+16]
	126 Move X25, [X31+24]
	127 Move X30, [X31+80]
	128 Move X27, [X31+88]
	129 Return X0
	130 Move X0, X19
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X24, [X31+32]
	136 Move X23, [X31+40]
	137 Move X26, [X31+16]
	138 Move X25, [X31+24]
	139 Move X1, X31
	140 Move X30, [X31+80]
	141 Move X27, [X31+88]
	142 Call CameraData.get_requireSrgbConversion, X0
	143 Return X0
	144 Xor W8, W23, 1
	145 Call 0x1C17F20

Method: System.Boolean CanCopyDepth(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A84D8C MOV X0, X25
	0x03A84D90 MOV X1, X21
	0x03A84D94 LDR X2, [X8]
	0x03A84D98 BL 0x301C5F0
	0x03A84D9C LDR W8, [X31 + 0x40]
	0x03A84DA0 STR X0, [X31 + 0x50]
	0x03A84DA4 TBZ X8, 0x0, 0x3A84DB8
	0x03A84DA8 LDR X1, [X19 + 0x1D0]
	0x03A84DAC MOV X0, X19
	0x03A84DB0 MOV X2, X31
	0x03A84DB4 BL 0x3A4E96C
	0x03A84DB8 LDR W8, [X31 + 0x64]
	0x03A84DBC TBZ X8, 0x0, 0x3A84DD0
	0x03A84DC0 LDR X1, [X19 + 0x1D8]
	0x03A84DC4 MOV X0, X19
	0x03A84DC8 MOV X2, X31
	0x03A84DCC BL 0x3A4E96C
	0x03A84DD0 AND W21, W23, W27, 0x0
	0x03A84DD4 TBZ X26, 0x0, 0x3A84DE0
	0x03A84DD8 MOV W8, W31
	0x03A84DDC B 0x3A84DFC
	0x03A84DE0 LDRB W8, [X20 + 0x187]
	0x03A84DE4 LDR W9, [X31 + 0x8C]
	0x03A84DE8 ORR W8, W9, W8, 0x0
	0x03A84DEC LDR X9, [X31 + 0x80]
	0x03A84DF0 CMP W8, 0x0
	0x03A84DF4 AND W9, W9, 0x1
	0x03A84DF8 CSINC W8, W9, W31, EQ
	0x03A84DFC LDR X0, [X19 + 0xE0]
	0x03A84E00 CMP W21, 0x0
	0x03A84E04 AND W27, W8, W28, 0x0
	0x03A84E08 CSET W23, NE
	0x03A84E0C CBZ X0, 0x3A84F34
	0x03A84E10 MOV X1, X29
	0x03A84E14 MOV X2, X31
	0x03A84E18 BL 0x3A35D04
	0x03A84E1C TBZ X0, 0x0, 0x3A84F34
	0x03A84E20 LDR X0, [X19 + 0xE0]
	0x03A84E24 CBZ X0, 0x3A8652C
	0x03A84E28 ADD X1, X31, 0x6F4
	0x03A84E2C MOV X2, X31
	0x03A84E30 BL 0x3A35D44
	0x03A84E34 LDR W8, [X31 + 0x6F4]
	0x03A84E38 LDR X0, [X19 + 0xE0]
	0x03A84E3C CMP W8, 0x1
	0x03A84E40 CSET W8, EQ
	0x03A84E44 CBZ X0, 0x3A8652C
	0x03A84E48 MOV X1, X31
	0x03A84E4C ORR W26, W26, W8, 0x0
	0x03A84E50 BL 0x3A35954
	0x03A84E54 TBZ X0, 0x0, 0x3A84E64
	0x03A84E58 LDR W8, [X31 + 0x64]
	0x03A84E5C AND W8, W8, 0x1
	0x03A84E60 B 0x3A84F00
	0x03A84E64 LDR W8, [X31 + 0x2C]
	0x03A84E68 CBZ W8, 0x3A84EEC
	0x03A84E6C MOV W8, W31
	0x03A84E70 B 0x3A84F00
	0x03A84E74 MOV W21, W31
	0x03A84E78 B 0x3A8480C
	0x03A84E7C LDR V0, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x95F000
	007 Move X20, 0x6D1000
	008 Move W8, [X21+834]
	009 Move X20, [X20+16]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6D1000
	016 Move X0, [X0+16]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+834], W8
	020 Move W21, [X19+224]
	021 Move X0, X31
	022 Call SystemInfo.get_copyTextureSupport
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move W0, 1
	031 Move X1, X31
	032 Call RenderingUtils.SupportsRenderTextureFormat, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W20, W0
	035 Move X0, X31
	036 Call SystemInfo.get_supportsMultisampledTextures
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W22, W31
	040 Move X0, X31
	041 Call SystemInfo.get_graphicsDeviceType
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, 1
	044 Move X0, X31
	045 Call SystemInfo.get_graphicsDeviceType
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 And W31, W8, W22
	053 Or W8, W10, W20
	054 And W8, W8, W9
	055 Or W8, W22, W8
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 NotImplemented "Instruction CSET not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 And W0, W8, W9
	064 Move X30, [X31+48]
	065 Return X0

Method: System.Void SwapColorBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A88460 BL 0x3A674FC
	0x03A88464 ADRP X24, 0x6CB000
	0x03A88468 LDR X24, [X24 + 0xFF8]
	0x03A8846C MOV X0, X21
	0x03A88470 BL 0x3A82610
	0x03A88474 CMP W0, 0x1
	0x03A88478 B.NE 0x3A88568
	0x03A8847C LDR X0, [X21 + 0x2D8]
	0x03A88480 CBZ X0, 0x3A88750
	0x03A88484 LDR X8, [X21 + 0x1D8]
	0x03A88488 MOV X1, X19
	0x03A8848C MOV X2, X31
	0x03A88490 STRB W31, [X0 + 0x15]
	0x03A88494 STR X8, [X0 + 0x98]
	0x03A88498 BL 0x3A9BF74
	0x03A8849C LDR X8, [X21 + 0x2D8]
	0x03A884A0 CBZ X8, 0x3A88750
	0x03A884A4 LDR W9, [X19 + 0xE0]
	0x03A884A8 CMP W9, 0x1
	0x03A884AC CSET W9, EQ
	0x03A884B0 STRB W9, [X8 + 0x19]
	0x03A884B4 LDR X0, [X24]
	0x03A884B8 LDR X23, [X21 + 0x1E0]
	0x03A884BC LDR W8, [X0 + 0xE0]
	0x03A884C0 CBNZ W8, 0x3A884CC
	0x03A884C4 BL 0x1C16DFC
	0x03A884C8 LDR X0, [X24]
	0x03A884CC CBZ X23, 0x3A88750
	0x03A884D0 LDR X8, [X0 + 0xB8]
	0x03A884D4 MOV X0, X23
	0x03A884D8 MOV X1, X20
	0x03A884DC MOV X4, X19
	0x03A884E0 LDP X2, X3, [X8 + 0x18]
	0x03A884E4 MOV X5, X22
	0x03A884E8 MOV X6, X31
	0x03A884EC BL 0x3AB2BC4
	0x03A884F0 LDR X8, [X21 + 0x390]
	0x03A884F4 CBZ X8, 0x3A88750
	0x03A884F8 LDR X0, [X21 + 0x1E8]
	0x03A884FC CBZ X0, 0x3A88750
	0x03A88500 ADD X3, X8, 0x20
	0x03A88504 ADD X2, X8, 0x48
	0x03A88508 MOV X1, X20
	0x03A8850C MOV X4, X19
	0x03A88510 MOV X5, X31
	0x03A88514 BL 0x3AAC4F4
	0x03A88518 LDR X8, [X21 + 0x390]
	0x03A8851C CBZ X8, 0x3A88750
	0x03A88520 LDR X0, [X21 + 0x1F0]
	0x03A88524 CBZ X0, 0x3A88750
	0x03A88528 LDR X9, [X24]
	0x03A8852C LDR X4, [X8 + 0x38]
	0x03A88530 MOV X1, X20
	0x03A88534 MOV X5, X19
	0x03A88538 LDR X9, [X9 + 0xB8]
	0x03A8853C MOV X6, X31
	0x03A88540 LDP X2, X3, [X9 + 0x18]
	0x03A88544 BL 0x3AACF6C
	0x03A88548 LDR X8, [X21 + 0x390]
	0x03A8854C CBZ X8, 0x3A88750
	0x03A88550 LDR X0, [X21 + 0x1F8]
	0x03A88554 CBZ X0, 0x3A88750
	0x03A88558 LDR X9, [X24]
	0x03A8855C LDP X4, X5, [X8 + 0x28]
	0x03A88560 LDR X9, [X9 + 0xB8]
	0x03A88564 B 0x3A885A0
	0x03A88568 LDR X23, [X21 + 0x200]
	0x03A8856C CBZ X23, 0x3A88750
	0x03A88570 LDRB W8, [X21 + 0x388]
	0x03A88574 STRB W8, [X23 + 0x181]
	0x03A88578 LDR X0, [X24]
	0x03A8857C LDR W8, [X0 + 0xE0]
	0x03A88580 CBNZ W8, 0x3A8858C
	0x03A88584 BL 0x1C16DFC
	0x03A88588 LDR X0, [X24]
	0x03A8858C LDR X8, [X22]
	0x03A88590 CBZ X8, 0x3A88750
	0x03A88594 LDR X9, [X0 + 0xB8]
	0x03A88598 LDP X4, X5, [X8 + 0x28]
	0x03A8859C MOV X0, X23
	0x03A885A0 LDP X2, X3, [X9 + 0x18]
	0x03A885A4 MOV X1, X20
	0x03A885A8 MOV X6, X19
	0x03A885AC MOV X7, X31
	0x03A885B0 BL 0x3AAFDD4
	0x03A885B4 LDR W8, [X19 + 0xE0]
	0x03A885B8 CBNZ W8, 0x3A885F4
	0x03A885BC LDR X0, [X24]
	0x03A885C0 LDR X22, [X21 + 0x210]
	0x03A885C4 LDR W8, [X0 + 0xE0]
	0x03A885C8 CBNZ W8, 0x3A885D4
	0x03A885CC BL 0x1C16DFC
	0x03A885D0 LDR X0, [X24]
	0x03A885D4 CBZ X22, 0x3A88750
	0x03A885D8 LDR X8, [X0 + 0xB8]
	0x03A885DC MOV X0, X22
	0x03A885E0 MOV X1, X20
	0x03A885E4 MOV X4, X19
	0x03A885E8 LDP X2, X3, [X8 + 0x18]
	0x03A885EC MOV X5, X31
	0x03A885F0 BL 0x3A5C5FC
	0x03A885F4 LDR X23, [X21 + 0x390]
	0x03A885F8 CBZ X23, 0x3A88750
	0x03A885FC LDR X0, [X24]
	0x03A88600 LDR X22, [X21 + 0x218]
	0x03A88604 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X21
	005 Move [X31+304], X20
	006 Move [X31+312], X19
	007 Move X21, 0x95B000
	008 Move W8, [X21+835]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6CD000
	016 Move X0, [X0+2344]
	017 Call 0x1C17CF4
	018 Move X0, 0x6CD000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+835], W8
	023 Move X0, [X20+624]
	024 Compare X0, 0
	025 JumpIfEqual {131}
	026 Move X1, X31
	027 Call RenderTargetBufferSystem.Swap, X0
	028 Move X8, [X20+648]
	029 Compare X8, 0
	030 JumpIfEqual {131}
	031 Move X9, [X8+72]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Add X8, X31, 184
	035 Move W0, 2
	036 Move X1, X31
	037 Add X21, X31, 184
	038 Move [X31+256], X9
	039 Move [X31+224], V1
	040 Move [X31+232], V0
	041 Call RenderTargetIdentifier.op_Implicit, X0
	042 Move V0, [X21]
	043 Move V1, [X21+16]
	044 Move X8, [X31+216]
	045 Move V2, [X31+224]
	046 Move V3, [X31+240]
	047 Move X9, [X31+256]
	048 Add X0, X31, 144
	049 Add X1, X31, 96
	050 Move X2, X31
	051 Move [X31+96], V0
	052 Move [X31+104], V1
	053 Move [X31+128], X8
	054 Move [X31+144], V2
	055 Move [X31+152], V3
	056 Move [X31+176], X9
	057 Call RenderTargetIdentifier.op_Inequality, X0, X1
	058 Move X8, [X20+624]
	059 Compare X8, 0
	060 JumpIfEqual {131}
	061 Move W21, W0
	062 Move X0, X8
	063 Move X1, X19
	064 Move X2, X31
	065 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	066 Move X1, X0
	067 Move TEMP, X21
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {75}
	071 Move X2, [X20+648]
	072 Move X0, X20
	073 Move X3, X31
	074 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	075 Move X0, X20
	076 Move X2, X31
	077 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	078 Move X0, [X20+624]
	079 Compare X0, 0
	080 JumpIfEqual {131}
	081 Move X1, X19
	082 Move X2, X31
	083 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	084 Move [X20+632], X0
	085 Compare X0, 0
	086 JumpIfEqual {131}
	087 Move X8, [X0+72]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move [X31+256], X8
	091 Move [X31+224], V1
	092 Move [X31+232], V0
	093 Compare X19, 0
	094 JumpIfEqual {131}
	095 Move X8, 0x6CD000
	096 Move X8, [X8+2344]
	097 Move V0, [X31+224]
	098 Move V1, [X31+240]
	099 Move X9, [X31+256]
	100 Add X2, X31, 48
	101 Move X1, [X8]
	102 Move X0, X19
	103 Move X3, X31
	104 Move [X31+48], V0
	105 Move [X31+56], V1
	106 Move [X31+80], X9
	107 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	108 Move X8, [X20+632]
	109 Compare X8, 0
	110 JumpIfEqual {131}
	111 Move X9, 0x6CD000
	112 Move X9, [X9+2352]
	113 Move X10, [X8+72]
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X1, [X9]
	117 Add X2, X31, 0
	118 Move X0, X19
	119 Move X3, X31
	120 Move [X31+32], X10
	121 Move [X31], V1
	122 Move [X31+8], V0
	123 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	124 Move X20, [X31+304]
	125 Move X19, [X31+312]
	126 Move X30, [X31+288]
	127 Move X21, [X31+296]
	128 Move X29, [X31+272]
	129 Add X31, X31, 320
	130 Return 
	131 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle GetCameraColorFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A88608 CBNZ W8, 0x3A88610
	0x03A8860C BL 0x1C16DFC
	0x03A88610 CBZ X22, 0x3A88750
	0x03A88614 LDR X8, [X24]
	0x03A88618 ADD X2, X23, 0x48
	0x03A8861C ADRP X23, 0x694000
	0x03A88620 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+624]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call RenderTargetBufferSystem.GetFrontBuffer, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle GetCameraColorBackBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A88624 LDR X8, [X8 + 0xB8]
	0x03A88628 LDR X23, [X23 + 0x8A8]
	0x03A8862C MOV X1, X20
	0x03A88630 MOV X4, X19
	0x03A88634 ADD X3, X8, 0x20
	0x03A88638 MOV X5, X31
	0x03A8863C BL 0x3AAC4F4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+624]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void EnableSwapBufferMSAA(System.Boolean enable)

Disassembly:
	0x03A88640 LDR X0, [X23]
	0x03A88644 LDR W8, [X0 + 0xE0]
	0x03A88648 CBNZ W8, 0x3A88650
	0x03A8864C BL 0x1C16DFC
	0x03A88650 MOV X0, X31
	0x03A88654 BL 0x3A8AB60
	0x03A88658 CBZ X0, 0x3A88750
	0x03A8865C LDR X9, [X21 + 0x390]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+624]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W1, W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call RenderTargetBufferSystem.EnableMSAA, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void CleanupRenderGraphResources()

Disassembly:
	0x03A8478C ORR W22, W8, W23, 0x0
	0x03A84790 B 0x3A84798
	0x03A84794 MOV W22, W31
	0x03A84798 LDRB W8, [X19 + 0x1A5]
	0x03A8479C STR W24, [X31 + 0x44]
	0x03A847A0 STR W26, [X31 + 0x2C]
	0x03A847A4 CMP W8, 0x0
	0x03A847A8 CSET W23, NE
	0x03A847AC CBZ W21, 0x3A847EC
	0x03A847B0 LDR X8, [X19 + 0x218]
	0x03A847B4 CBZ X8, 0x3A8652C
	0x03A847B8 LDR X9, [X31 + 0x58]
	0x03A847BC LDR W10, [X19 + 0x2E8]
	0x03A847C0 MOVZ W11, 0x12C
	0x03A847C4 MOVZ W12, 0x1F4
	0x03A847C8 UBFM X9, X9, 0x20, 0x3F
	0x03A847CC SUB W9, W9, 0x1
	0x03A847D0 CMP W10, 0x1
	0x03A847D4 CSEL W10, W12, W11, EQ
	0x03A847D8 CMP W9, 0x1F4
	0x03A847DC CSEL W9, W9, W12, LT
	0x03A847E0 ANDS X31, X28, 0x1
	0x03A847E4 CSEL W9, W10, W9, EQ
	0x03A847E8 B 0x3A84808
	0x03A847EC LDR W8, [X31 + 0x8C]
	0x03A847F0 ORR W8, W26, W8, 0x0
	0x03A847F4 CBZ W8, 0x3A84E74
	0x03A847F8 LDR X8, [X19 + 0x218]
	0x03A847FC CBZ X8, 0x3A8652C
	0x03A84800 MOV W21, W31
	0x03A84804 MOVZ W9, 0x1F4
	0x03A84808 STR W9, [X8 + 0x10]
	0x03A8480C MOV X0, X19
	0x03A84810 MOV X1, X29
	0x03A84814 BL 0x3A867E0
	0x03A84818 LDR W8, [X31 + 0x8C]
	0x03A8481C LDRB W28, [X20 + 0x1D8]
	0x03A84820 MOV W26, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x95F000
	005 Move X19, 0x6D0000
	006 Move W8, [X20+836]
	007 Move X19, [X19+4088]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6D0000
	013 Move X0, [X0+4088]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+836], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+8]
	025 Compare X8, 0
	026 JumpIfEqual {31}
	027 Move X0, X8
	028 Move X1, X31
	029 Call RTHandle.Release, X0
	030 Move X0, [X19]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X19]
	036 Move X8, [X0+184]
	037 Move X0, [X8+16]
	038 Compare X0, 0
	039 JumpIfEqual {46}
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+32]
	044 Call RTHandle.Release, X0
	045 Return 
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle CreateRenderGraphTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.RenderTextureDescriptor desc, System.String name, System.Boolean clear, UnityEngine.FilterMode filterMode = 0, UnityEngine.TextureWrapMode wrapMode = 1)

Disassembly:
	0x03A88660 CBZ X9, 0x3A88750
	0x03A88664 LDR X8, [X21 + 0x220]
	0x03A88668 CBZ X8, 0x3A88750
	0x03A8866C LDR X10, [X24]
	0x03A88670 LDR W4, [X0 + 0x50]
	0x03A88674 ADD X2, X9, 0x40
	0x03A88678 MOV X0, X8
	0x03A8867C LDR X10, [X10 + 0xB8]
	0x03A88680 MOV X1, X20
	0x03A88684 MOV X5, X19
	0x03A88688 MOV X6, X31
	0x03A8868C ADD X3, X10, 0x18
	0x03A88690 BL 0x3AAB020
	0x03A88694 LDR X8, [X21 + 0x390]
	0x03A88698 CBZ X8, 0x3A88750
	0x03A8869C LDR X0, [X21 + 0x1C8]
	0x03A886A0 CBZ X0, 0x3A88750
	0x03A886A4 ADD X4, X8, 0x60
	0x03A886A8 ADD X3, X8, 0x58
	0x03A886AC ADD X2, X8, 0x20
	0x03A886B0 MOV X1, X20
	0x03A886B4 MOV X5, X19
	0x03A886B8 MOV X6, X31
	0x03A886BC BL 0x3A5E91C
	0x03A886C0 LDR X0, [X21 + 0x228]
	0x03A886C4 CBZ X0, 0x3A88750
	0x03A886C8 LDR X22, [X21 + 0x230]
	0x03A886CC MOV X1, X31
	0x03A886D0 BL 0x3A67040
	0x03A886D4 CBZ X22, 0x3A88750
	0x03A886D8 ORN W8, W31, W0, 0x0
	0x03A886DC AND W8, W8, 0x1
	0x03A886E0 STRB W8, [X22 + 0x182]
	0x03A886E4 LDR X8, [X21 + 0x390]
	0x03A886E8 CBZ X8, 0x3A88750
	0x03A886EC LDR X0, [X21 + 0x230]
	0x03A886F0 CBZ X0, 0x3A88750
	0x03A886F4 LDR X9, [X24]
	0x03A886F8 LDP X4, X5, [X8 + 0x28]
	0x03A886FC MOV X1, X20
	0x03A88700 MOV X6, X19
	0x03A88704 LDR X9, [X9 + 0xB8]
	0x03A88708 MOV X7, X31
	0x03A8870C LDP X2, X3, [X9 + 0x18]
	0x03A88710 BL 0x3AAFDD4
	0x03A88714 LDR X0, [X21 + 0x238]
	0x03A88718 CBZ X0, 0x3A88750
	0x03A8871C LDR X8, [X24]
	0x03A88720 MOV X1, X20
	0x03A88724 MOV X4, X19
	0x03A88728 LDP X20, X19, [X31 + 0x50]
	0x03A8872C LDR X8, [X8 + 0xB8]
	0x03A88730 LDP X22, X21, [X31 + 0x40]
	0x03A88734 LDP X24, X23, [X31 + 0x30]
	0x03A88738 LDR X30, [X31 + 0x20]
	0x03A8873C LDP X2, X3, [X8 + 0x18]
	0x03A88740 LDP D9, D8, [X31 + 0x10]
	0x03A88744 MOV X5, X31
	0x03A88748 LDP D11, D10, [X31], #0x60

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Move X23, X1
	011 Move [X31+112], X31
	012 Move [X31+80], V0
	013 Move [X31+88], V0
	014 Move [X31+48], V0
	015 Move [X31+56], V0
	016 Move [X31+16], V0
	017 Move [X31+24], V0
	018 Move [X31], V0
	019 Move X22, X2
	020 Move W1, [X1]
	021 Move W2, [X23+4]
	022 Move W20, W5
	023 Move W21, W4
	024 Move X19, X0
	025 And W24, W3, 1
	026 Add X0, X31, 0
	027 Move W3, W31
	028 Move W4, W31
	029 Move X5, X31
	030 Call TextureDesc..ctor, X0, X1, X2, X3, X4
	031 Move W8, [X23+32]
	032 Move X0, X23
	033 Move X1, X31
	034 Move [X31+102], W24
	035 Move [X31+48], W8
	036 Call RenderTextureDescriptor.get_bindMS, X0
	037 And W8, W0, 1
	038 Move X0, X23
	039 Move X1, X31
	040 Move [X31+68], W8
	041 Call RenderTextureDescriptor.get_graphicsFormat, X0
	042 Move [X31+36], W0
	043 Move X0, X23
	044 Move X1, X31
	045 Call RenderTextureDescriptor.get_depthBufferBits, X0
	046 Move [X31+32], W0
	047 Move W8, [X23+12]
	048 Move [X31+12], W8
	049 Move W8, [X23+8]
	050 Move [X31+80], X22
	051 Move [X31+52], W31
	052 Move [X31+40], W21
	053 Move [X31+44], W20
	054 Move [X31+64], W8
	055 Compare X19, 0
	056 JumpIfEqual {70}
	057 Add X1, X31, 0
	058 Move X0, X19
	059 Move X2, X31
	060 Call RenderGraph.CreateTexture, X0, X1
	061 Move X20, [X31+176]
	062 Move X19, [X31+184]
	063 Move X22, [X31+160]
	064 Move X21, [X31+168]
	065 Move X24, [X31+144]
	066 Move X23, [X31+152]
	067 Move X30, [X31+128]
	068 Add X31, X31, 192
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean RequiresColorAndDepthTextures(out System.Boolean createColorTexture, out System.Boolean createDepthTexture, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.Universal.UniversalRenderer/RenderPassInputSummary renderPassInputs)

Disassembly:
	0x03A8874C B 0x3A5D91C
	0x03A88750 BL 0x1C16F20
	0x03A88754 STP X30, X23, [X31 - 0x30]!
	0x03A88758 STP X22, X21, [X31 + 0x10]
	0x03A8875C STP X20, X19, [X31 + 0x20]
	0x03A88760 ADRP X23, 0x95A000
	0x03A88764 ADRP X22, 0x6CD000
	0x03A88768 LDRB W8, [X23 + 0x348]
	0x03A8876C LDR X22, [X22 + 0x4B0]
	0x03A88770 MOV X19, X3
	0x03A88774 MOV X20, X1
	0x03A88778 MOV X21, X0
	0x03A8877C TBNZ X8, 0x0, 0x3A887AC
	0x03A88780 ADRP X0, 0x6CD000
	0x03A88784 LDR X0, [X0 + 0x4A8]
	0x03A88788 BL 0x1C16CF4
	0x03A8878C ADRP X0, 0x6CD000
	0x03A88790 LDR X0, [X0 + 0x4B0]
	0x03A88794 BL 0x1C16CF4
	0x03A88798 ADRP X0, 0x6CB000
	0x03A8879C LDR X0, [X0 + 0xFF8]
	0x03A887A0 BL 0x1C16CF4
	0x03A887A4 MOVZ W8, 0x1
	0x03A887A8 STRB W8, [X23 + 0x348]
	0x03A887AC LDR X0, [X22]
	0x03A887B0 ADRP X22, 0x6CD000
	0x03A887B4 LDR W8, [X0 + 0xE0]
	0x03A887B8 LDR X22, [X22 + 0x4A8]
	0x03A887BC CBNZ W8, 0x3A887C4
	0x03A887C0 BL 0x1C16DFC
	0x03A887C4 LDR X0, [X22]
	0x03A887C8 BL 0x29AF0A8
	0x03A887CC CBZ X0, 0x3A888A4
	0x03A887D0 LDR X8, [X0 + 0x28]
	0x03A887D4 CBZ X8, 0x3A888A4
	0x03A887D8 LDR W8, [X8 + 0x28]
	0x03A887DC CBNZ W8, 0x3A88850
	0x03A887E0 ADRP X22, 0x6CB000
	0x03A887E4 LDR X22, [X22 + 0xFF8]
	0x03A887E8 LDR X0, [X22]
	0x03A887EC LDR W8, [X0 + 0xE0]
	0x03A887F0 CBNZ W8, 0x3A887FC
	0x03A887F4 BL 0x1C16DFC
	0x03A887F8 LDR X0, [X22]
	0x03A887FC LDR X8, [X0 + 0xB8]
	0x03A88800 MOV X0, X21
	0x03A88804 MOV X1, X20
	0x03A88808 MOV W4, W31
	0x03A8880C LDP X2, X3, [X8 + 0x18]
	0x03A88810 MOV X5, X19
	0x03A88814 MOV X6, X31
	0x03A88818 BL 0x3A4BD38
	0x03A8881C LDR X0, [X22]
	0x03A88820 LDR W8, [X0 + 0xE0]
	0x03A88824 CBNZ W8, 0x3A88830
	0x03A88828 BL 0x1C16DFC
	0x03A8882C LDR X0, [X22]
	0x03A88830 LDR X8, [X0 + 0xB8]
	0x03A88834 MOVZ W4, 0x1
	0x03A88838 MOV X0, X21
	0x03A8883C MOV X1, X20
	0x03A88840 LDP X2, X3, [X8 + 0x18]
	0x03A88844 MOV X5, X19
	0x03A88848 MOV X6, X31
	0x03A8884C BL 0x3A4BD38
	0x03A88850 LDRB W8, [X21 + 0x388]
	0x03A88854 CBZ W8, 0x3A88868
	0x03A88858 LDP X20, X19, [X31 + 0x20]
	0x03A8885C LDP X22, X21, [X31 + 0x10]
	0x03A88860 LDP X30, X23, [X31], #0x30
	0x03A88864 RET
	0x03A88868 LDRB W8, [X19 + 0x1D8]
	0x03A8886C CBZ W8, 0x3A88858
	0x03A88870 LDR X8, [X21 + 0x390]
	0x03A88874 CBZ X8, 0x3A888A4
	0x03A88878 LDR X0, [X21 + 0x240]
	0x03A8887C CBZ X0, 0x3A888A4
	0x03A88880 LDR X5, [X8 + 0x70]
	0x03A88884 LDP X4, X3, [X8 + 0x10]
	0x03A88888 MOV X1, X20
	0x03A8888C MOV X2, X19
	0x03A88890 LDP X20, X19, [X31 + 0x20]
	0x03A88894 LDP X22, X21, [X31 + 0x10]
	0x03A88898 MOV X6, X31
	0x03A8889C LDP X30, X23, [X31], #0x30
	0x03A888A0 B 0x3AB1468
	0x03A888A4 BL 0x1C16F20
	0x03A888A8 STR X30, [X31 - 0x20]!
	0x03A888AC STP X20, X19, [X31 + 0x10]
	0x03A888B0 MOV X19, X2
	0x03A888B4 MOV X20, X0
	0x03A888B8 BL 0x3A82610
	0x03A888BC CMP W0, 0x1
	0x03A888C0 B.NE 0x3A888DC
	0x03A888C4 LDR X0, [X20 + 0x1F0]
	0x03A888C8 CBZ X0, 0x3A88914
	0x03A888CC LDR X8, [X0]
	0x03A888D0 LDR X1, [X19]
	0x03A888D4 LDP X9, X2, [X8 + 0x1A8]
	0x03A888D8 BLR X9
	0x03A888DC LDR X0, [X20 + 0x218]
	0x03A888E0 CBZ X0, 0x3A88914
	0x03A888E4 LDR X8, [X0]
	0x03A888E8 LDR X1, [X19]
	0x03A888EC LDP X9, X2, [X8 + 0x1A8]
	0x03A888F0 BLR X9
	0x03A888F4 LDR X0, [X20 + 0x1B8]
	0x03A888F8 CBZ X0, 0x3A88914
	0x03A888FC LDR X8, [X0]
	0x03A88900 LDR X1, [X19]
	0x03A88904 LDP X20, X19, [X31 + 0x10]
	0x03A88908 LDP X3, X2, [X8 + 0x1A8]
	0x03A8890C LDR X30, [X31], #0x20
	0x03A88910 BR X3
	0x03A88914 BL 0x1C16F20
	0x03A88918 STR X30, [X31 - 0x30]!
	0x03A8891C STP X22, X21, [X31 + 0x10]
	0x03A88920 STP X20, X19, [X31 + 0x20]
	0x03A88924 ADRP X21, 0x95A000
	0x03A88928 ADRP X22, 0x6CC000
	0x03A8892C ADRP X19, 0x6CC000
	0x03A88930 ADRP X20, 0x6CF000
	0x03A88934 LDRB W8, [X21 + 0x349]
	0x03A88938 LDR X22, [X22 + 0x60]
	0x03A8893C LDR X19, [X19 + 0x68]
	0x03A88940 LDR X20, [X20 + 0x238]
	0x03A88944 TBNZ X8, 0x0, 0x3A8898C
	0x03A88948 ADRP X0, 0x6CC000
	0x03A8894C LDR X0, [X0 + 0x70]
	0x03A88950 BL 0x1C16CF4
	0x03A88954 ADRP X0, 0x6CC000
	0x03A88958 LDR X0, [X0 + 0x68]
	0x03A8895C BL 0x1C16CF4
	0x03A88960 ADRP X0, 0x6CC000
	0x03A88964 LDR X0, [X0 + 0x60]
	0x03A88968 BL 0x1C16CF4
	0x03A8896C ADRP X0, 0x6CB000
	0x03A88970 LDR X0, [X0 + 0xFF8]
	0x03A88974 BL 0x1C16CF4
	0x03A88978 ADRP X0, 0x6CF000
	0x03A8897C LDR X0, [X0 + 0x238]
	0x03A88980 BL 0x1C16CF4
	0x03A88984 MOVZ W8, 0x1
	0x03A88988 STRB W8, [X21 + 0x349]
	0x03A8898C LDR X0, [X22]
	0x03A88990 BL 0x1C16F10
	0x03A88994 LDR X1, [X19]
	0x03A88998 MOV X19, X0
	0x03A8899C BL 0x305C9FC
	0x03A889A0 LDR X1, [X20]
	0x03A889A4 ADD X0, X31, 0x8
	0x03A889A8 MOV X2, X31
	0x03A889AC STR W31, [X31 + 0x8]
	0x03A889B0 BL 0x3C5A49C
	0x03A889B4 CBZ X19, 0x3A88A44
	0x03A889B8 ADRP X9, 0x6CC000
	0x03A889BC LDR X9, [X9 + 0x70]
	0x03A889C0 LDR W10, [X19 + 0x1C]
	0x03A889C4 LDR W1, [X31 + 0x8]
	0x03A889C8 LDR X8, [X19 + 0x10]
	0x03A889CC LDR X9, [X9]
	0x03A889D0 ADD W10, W10, 0x1
	0x03A889D4 STR W10, [X19 + 0x1C]
	0x03A889D8 CBZ X8, 0x3A88A44
	0x03A889DC LDRSW X10, [X19 + 0x18]
	0x03A889E0 LDR W11, [X8 + 0x18]
	0x03A889E4 ADRP X20, 0x6CB000
	0x03A889E8 LDR X20, [X20 + 0xFF8]
	0x03A889EC CMP W10, W11

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x95B000
	012 Move W8, [X23+837]
	013 Move X25, X4
	014 Move X21, X3
	015 Move X20, X2
	016 Move X19, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6CE000
	023 Move X0, [X0+3552]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+837], W8
	027 Add X23, X21, 24
	028 Move X0, X23
	029 Move X1, X31
	030 Call CameraData.get_isPreviewCamera, X0
	031 Move W24, W0
	032 Move TEMP, X25
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move W8, [X21+391]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Move W8, [X22+740]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X22
	042 Move X1, X23
	043 Call UniversalRenderer.CanCopyDepth, X0, X1
	044 NotImplemented "Instruction ORN not yet implemented."
	045 Move W26, W31
	046 And W27, W8, 1
	047 Move W27, W31
	048 Move W26, 1
	049 Move X0, X23
	050 Move X1, X31
	051 Call CameraData.get_isSceneViewCamera, X0
	052 Move X8, [X22+264]
	053 Compare X8, 0
	054 JumpIfEqual {192}
	055 Move X10, X25
	056 ShiftRight X10, 16
	057 And X10, X10, 0x7FFFFFFF
	058 Or W10, W10, W25
	059 Move W8, [X8+24]
	060 Or W10, W10, W24
	061 And W10, W10, 1
	062 And W9, W0, 1
	063 Or W10, W10, W27
	064 Or W25, W10, W9
	065 Compare W8, 0
	066 JumpIfEqual {71}
	067 Move W8, [X22+776]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction ORN not yet implemented."
	070 And W27, W8, 1
	071 Move W27, W31
	072 Move X0, X22
	073 Move X1, X23
	074 Move [X19], W27
	075 Call UniversalRenderer.RequiresIntermediateColorTexture, X0, X1
	076 Or W8, W27, W0
	077 Xor W9, W25, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction BIC not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 And W8, W8, 1
	082 Move [X19], W8
	083 Move [X20], W9
	084 Move W8, [X21+472]
	085 Move X0, X22
	086 Xor W8, W8, 1
	087 Or W24, W8, W9
	088 Move [X20], W24
	089 Call UniversalRenderer.get_renderingModeActual, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, W31
	092 Move W8, [X22+420]
	093 Xor W8, W8, 1
	094 Or W8, W8, W24
	095 Move [X20], W8
	096 Move W9, [X22+740]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Or W8, W8, W9
	100 Move [X20], W8
	101 Move X0, [X21+400]
	102 Compare X0, 0
	103 JumpIfEqual {192}
	104 Move X1, X31
	105 Call XRPass.get_enabled, X0
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {114}
	110 Move W8, [X19]
	111 Move W9, [X20]
	112 Or W8, W9, W8
	113 Move [X19], W8
	114 Move X0, X31
	115 Call SystemInfo.get_graphicsDeviceType
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W8, [X19]
	118 Move W9, [X20]
	119 Or W8, W9, W8
	120 Move [X19], W8
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X22
	123 Move X1, X23
	124 NotImplemented "Instruction CSET not yet implemented."
	125 Call UniversalRenderer.IsDepthPrimingEnabled, X0, X1
	126 Compare W25, 0
	127 JumpIfEqual {142}
	128 Move W8, [X20]
	129 Move W9, [X19]
	130 And W0, W0, W24
	131 Or W9, W9, W8
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSET not yet implemented."
	134 Compare W9, 0
	135 JumpIfEqual {142}
	136 Move W9, [X22+736]
	137 And W0, W0, W8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction CSET not yet implemented."
	140 Compare W9, 0
	141 JumpIfEqual {186}
	142 Move W8, W31
	143 Move W9, [X22+420]
	144 And W8, W0, W8
	145 And W8, W8, 1
	146 Or W8, W8, W9
	147 Compare W8, 0
	148 JumpIfEqual {153}
	149 Move W8, [X19]
	150 Move W9, [X20]
	151 Or W8, W9, W8
	152 Move [X19], W8
	153 Move W8, [X21+224]
	154 Compare W8, 0
	155 JumpIfEqual {157}
	156 Move W8, [X20]
	157 Move X0, [X21+216]
	158 Compare X0, 0
	159 JumpIfEqual {192}
	160 Move X1, X31
	161 Call Camera.get_sceneViewFilterMode, X0
	162 Move W8, [X19]
	163 Move W9, [X20]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CSET not yet implemented."
	166 Or W8, W9, W8
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CSET not yet implemented."
	169 And W8, W10, W8
	170 Move [X20], W8
	171 Move W9, [X19]
	172 Move X20, [X31+64]
	173 Move X19, [X31+72]
	174 Move X22, [X31+48]
	175 Move X21, [X31+56]
	176 Move X24, [X31+32]
	177 Move X23, [X31+40]
	178 Move X26, [X31+16]
	179 Move X25, [X31+24]
	180 Or W8, W8, W9
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSET not yet implemented."
	183 Move X30, [X31+80]
	184 Move X27, [X31+88]
	185 Return X0
	186 Move W9, [X21+224]
	187 And W0, W0, W8
	188 Compare W9, 0
	189 JumpIfEqual {191}
	190 Move W8, [X21+380]
	191 Move W8, 1
	192 Call 0x1C17F20

Method: System.Void CreateRenderGraphCameraRenderTargets(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A889F0 B.CS 0x3A88A08
	0x03A889F4 ADD W9, W10, 0x1
	0x03A889F8 ADD X8, X8, X10, 0x2, LSL
	0x03A889FC STR W9, [X19 + 0x18]
	0x03A88A00 STR W1, [X8 + 0x20]
	0x03A88A04 B 0x3A88A1C
	0x03A88A08 LDR X8, [X9 + 0x20]
	0x03A88A0C MOV X0, X19
	0x03A88A10 LDR X8, [X8 + 0xC0]
	0x03A88A14 LDR X2, [X8 + 0x70]
	0x03A88A18 BL 0x305D1F8
	0x03A88A1C LDR X8, [X20]
	0x03A88A20 LDP X22, X21, [X31 + 0x10]
	0x03A88A24 LDR X8, [X8 + 0xB8]
	0x03A88A28 STR X19, [X8]
	0x03A88A2C LDR X8, [X20]
	0x03A88A30 LDP X20, X19, [X31 + 0x20]
	0x03A88A34 LDR X8, [X8 + 0xB8]
	0x03A88A38 STRB W31, [X8 + 0x28]
	0x03A88A3C LDR X30, [X31], #0x30
	0x03A88A40 RET
	0x03A88A44 BL 0x1C16F20
	0x03A88A48 STR X30, [X31 - 0x30]!
	0x03A88A4C STP X22, X21, [X31 + 0x10]
	0x03A88A50 STP X20, X19, [X31 + 0x20]
	0x03A88A54 ADRP X21, 0x95A000
	0x03A88A58 ADRP X22, 0x6C8000
	0x03A88A5C ADRP X19, 0x6CF000
	0x03A88A60 ADRP X20, 0x6CF000
	0x03A88A64 LDRB W8, [X21 + 0x34A]
	0x03A88A68 LDR X22, [X22 + 0x598]
	0x03A88A6C LDR X19, [X19 + 0x240]
	0x03A88A70 LDR X20, [X20 + 0x218]
	0x03A88A74 TBNZ X8, 0x0, 0x3A88AA4
	0x03A88A78 ADRP X0, 0x6C8000
	0x03A88A7C LDR X0, [X0 + 0x598]
	0x03A88A80 BL 0x1C16CF4
	0x03A88A84 ADRP X0, 0x6CF000
	0x03A88A88 LDR X0, [X0 + 0x218]
	0x03A88A8C BL 0x1C16CF4
	0x03A88A90 ADRP X0, 0x6CF000
	0x03A88A94 LDR X0, [X0 + 0x240]
	0x03A88A98 BL 0x1C16CF4
	0x03A88A9C MOVZ W8, 0x1
	0x03A88AA0 STRB W8, [X21 + 0x34A]
	0x03A88AA4 LDR X0, [X22]
	0x03A88AA8 BL 0x1C16F10
	0x03A88AAC LDR X1, [X19]
	0x03A88AB0 MOV X2, X31
	0x03A88AB4 MOV X19, X0
	0x03A88AB8 BL 0x39B19AC
	0x03A88ABC LDR X8, [X20]
	0x03A88AC0 LDP X22, X21, [X31 + 0x10]
	0x03A88AC4 LDR X8, [X8 + 0xB8]
	0x03A88AC8 STR X19, [X8]
	0x03A88ACC LDP X20, X19, [X31 + 0x20]
	0x03A88AD0 LDR X30, [X31], #0x30
	0x03A88AD4 RET
	0x03A88AD8 MOV X1, X31
	0x03A88ADC B 0x33BDD8C
	0x03A88AE0 STR X30, [X31 - 0x20]!
	0x03A88AE4 STP X20, X19, [X31 + 0x10]
	0x03A88AE8 ADRP X19, 0x95A000
	0x03A88AEC ADRP X20, 0x6CF000
	0x03A88AF0 LDRB W8, [X19 + 0x34B]
	0x03A88AF4 LDR X20, [X20 + 0x1E8]
	0x03A88AF8 TBNZ X8, 0x0, 0x3A88B10
	0x03A88AFC ADRP X0, 0x6CF000
	0x03A88B00 LDR X0, [X0 + 0x1E8]
	0x03A88B04 BL 0x1C16CF4
	0x03A88B08 MOVZ W8, 0x1
	0x03A88B0C STRB W8, [X19 + 0x34B]
	0x03A88B10 LDR X0, [X20]
	0x03A88B14 BL 0x1C16F10
	0x03A88B18 MOV X1, X31
	0x03A88B1C MOV X19, X0
	0x03A88B20 BL 0x33BDD8C
	0x03A88B24 LDR X8, [X20]
	0x03A88B28 LDR X8, [X8 + 0xB8]
	0x03A88B2C STR X19, [X8]
	0x03A88B30 LDP X20, X19, [X31 + 0x10]
	0x03A88B34 LDR X30, [X31], #0x20
	0x03A88B38 RET
	0x03A88B3C MOV X1, X31
	0x03A88B40 B 0x33BDD8C
	0x03A88B44 STR X30, [X31 - 0x10]!
	0x03A88B48 CBZ X1, 0x3A88B60
	0x03A88B4C LDR W8, [X1 + 0x10]
	0x03A88B50 CMP W8, 0x258
	0x03A88B54 CSET W0, EQ
	0x03A88B58 LDR X30, [X31], #0x10
	0x03A88B5C RET
	0x03A88B60 BL 0x1C16F20
	0x03A88B64 STR X30, [X31 - 0x10]!
	0x03A88B68 CBZ X1, 0x3A88B94
	0x03A88B6C LDR W8, [X1 + 0x10]
	0x03A88B70 CMP W8, 0xFA
	0x03A88B74 B.LE 0x3A88B80
	0x03A88B78 MOV W0, W31
	0x03A88B7C B 0x3A88B8C
	0x03A88B80 LDRB W8, [X1 + 0x40]
	0x03A88B84 CMP W8, 0x0
	0x03A88B88 CSET W0, EQ
	0x03A88B8C LDR X30, [X31], #0x10
	0x03A88B90 RET
	0x03A88B94 BL 0x1C16F20
	0x03A88B98 STP X30, X21, [X31 - 0x20]!
	0x03A88B9C STP X20, X19, [X31 + 0x10]
	0x03A88BA0 ADRP X21, 0x95A000
	0x03A88BA4 ADRP X20, 0x66B000
	0x03A88BA8 LDRB W8, [X21 + 0x34C]
	0x03A88BAC LDR X20, [X20 + 0x970]
	0x03A88BB0 MOV X19, X0
	0x03A88BB4 TBNZ X8, 0x0, 0x3A88BD8
	0x03A88BB8 ADRP X0, 0x66B000
	0x03A88BBC LDR X0, [X0 + 0x970]
	0x03A88BC0 BL 0x1C16CF4
	0x03A88BC4 ADRP X0, 0x6CB000
	0x03A88BC8 LDR X0, [X0 + 0xFF8]
	0x03A88BCC BL 0x1C16CF4
	0x03A88BD0 MOVZ W8, 0x1
	0x03A88BD4 STRB W8, [X21 + 0x34C]
	0x03A88BD8 LDR X0, [X20]
	0x03A88BDC ADRP X20, 0x6CB000
	0x03A88BE0 LDR W8, [X0 + 0xE0]
	0x03A88BE4 LDR X20, [X20 + 0xFF8]
	0x03A88BE8 CBNZ W8, 0x3A88BF0
	0x03A88BEC BL 0x1C16DFC
	0x03A88BF0 MOV X0, X31
	0x03A88BF4 BL 0x3C018E4
	0x03A88BF8 LDR X0, [X20]
	0x03A88BFC BL 0x1C16F10
	0x03A88C00 MOV X1, X19
	0x03A88C04 MOV X2, X31
	0x03A88C08 MOV X20, X0
	0x03A88C0C BL 0x3A826D8
	0x03A88C10 MOV X0, X20
	0x03A88C14 LDP X20, X19, [X31 + 0x10]
	0x03A88C18 LDP X30, X21, [X31], #0x20
	0x03A88C1C RET
	0x03A88C20 RET
	0x03A88C24 LDR W0, [X0 + 0x5C]
	0x03A88C28 RET
	0x03A88C2C STR X30, [X31 - 0x20]!
	0x03A88C30 STP X20, X19, [X31 + 0x10]
	0x03A88C34 MOV X19, X1
	0x03A88C38 MOV X1, X31
	0x03A88C3C MOV X20, X0
	0x03A88C40 BL 0x3A757A4
	0x03A88C44 STR W19, [X20 + 0x5C]
	0x03A88C48 LDP X20, X19, [X31 + 0x10]
	0x03A88C4C LDR X30, [X31], #0x20
	0x03A88C50 RET
	0x03A88C54 LDR W0, [X0 + 0x60]
	0x03A88C58 RET
	0x03A88C5C STR X30, [X31 - 0x20]!
	0x03A88C60 STP X20, X19, [X31 + 0x10]
	0x03A88C64 MOV X19, X1
	0x03A88C68 MOV X1, X31
	0x03A88C6C MOV X20, X0
	0x03A88C70 BL 0x3A757A4
	0x03A88C74 STR W19, [X20 + 0x60]
	0x03A88C78 LDP X20, X19, [X31 + 0x10]
	0x03A88C7C LDR X30, [X31], #0x20
	0x03A88C80 RET
	0x03A88C84 LDR X0, [X0 + 0x68]
	0x03A88C88 RET
	0x03A88C8C STR X30, [X31 - 0x20]!
	0x03A88C90 STP X20, X19, [X31 + 0x10]
	0x03A88C94 MOV X19, X1
	0x03A88C98 MOV X1, X31
	0x03A88C9C MOV X20, X0
	0x03A88CA0 BL 0x3A757A4
	0x03A88CA4 STR X19, [X20 + 0x68]
	0x03A88CA8 LDP X20, X19, [X31 + 0x10]
	0x03A88CAC LDR X30, [X31], #0x20
	0x03A88CB0 RET
	0x03A88CB4 LDRB W0, [X0 + 0x70]
	0x03A88CB8 RET
	0x03A88CBC STR X30, [X31 - 0x20]!
	0x03A88CC0 STP X20, X19, [X31 + 0x10]
	0x03A88CC4 AND W20, W1, 0x1
	0x03A88CC8 MOV X1, X31
	0x03A88CCC MOV X19, X0
	0x03A88CD0 BL 0x3A757A4
	0x03A88CD4 STRB W20, [X19 + 0x70]
	0x03A88CD8 LDP X20, X19, [X31 + 0x10]
	0x03A88CDC LDR X30, [X31], #0x20
	0x03A88CE0 RET
	0x03A88CE4 LDR W0, [X0 + 0x74]
	0x03A88CE8 RET
	0x03A88CEC STR X30, [X31 - 0x20]!
	0x03A88CF0 STP X20, X19, [X31 + 0x10]
	0x03A88CF4 MOV W19, W1
	0x03A88CF8 MOV X1, X31
	0x03A88CFC MOV X20, X0
	0x03A88D00 BL 0x3A757A4
	0x03A88D04 STR W19, [X20 + 0x74]
	0x03A88D08 LDP X20, X19, [X31 + 0x10]
	0x03A88D0C LDR X30, [X31], #0x20
	0x03A88D10 RET
	0x03A88D14 LDR W0, [X0 + 0x78]
	0x03A88D18 RET
	0x03A88D1C STR X30, [X31 - 0x20]!
	0x03A88D20 STP X20, X19, [X31 + 0x10]
	0x03A88D24 MOV W19, W1
	0x03A88D28 MOV X1, X31
	0x03A88D2C MOV X20, X0
	0x03A88D30 BL 0x3A757A4
	0x03A88D34 STR W19, [X20 + 0x78]
	0x03A88D38 LDP X20, X19, [X31 + 0x10]
	0x03A88D3C LDR X30, [X31], #0x20
	0x03A88D40 RET
	0x03A88D44 LDR W0, [X0 + 0x7C]
	0x03A88D48 RET
	0x03A88D4C STR X30, [X31 - 0x20]!
	0x03A88D50 STP X20, X19, [X31 + 0x10]
	0x03A88D54 MOV W19, W1
	0x03A88D58 MOV X1, X31
	0x03A88D5C MOV X20, X0
	0x03A88D60 BL 0x3A757A4
	0x03A88D64 STR W19, [X20 + 0x7C]
	0x03A88D68 LDP X20, X19, [X31 + 0x10]
	0x03A88D6C LDR X30, [X31], #0x20
	0x03A88D70 RET
	0x03A88D74 LDRB W0, [X0 + 0x80]
	0x03A88D78 RET
	0x03A88D7C STR X30, [X31 - 0x20]!
	0x03A88D80 STP X20, X19, [X31 + 0x10]
	0x03A88D84 AND W20, W1, 0x1
	0x03A88D88 MOV X1, X31
	0x03A88D8C MOV X19, X0
	0x03A88D90 BL 0x3A757A4
	0x03A88D94 STRB W20, [X19 + 0x80]
	0x03A88D98 LDP X20, X19, [X31 + 0x10]
	0x03A88D9C LDR X30, [X31], #0x20
	0x03A88DA0 RET
	0x03A88DA4 LDR W0, [X0 + 0x84]
	0x03A88DA8 RET
	0x03A88DAC STR X30, [X31 - 0x20]!
	0x03A88DB0 STP X20, X19, [X31 + 0x10]
	0x03A88DB4 MOV W19, W1
	0x03A88DB8 MOV X1, X31
	0x03A88DBC MOV X20, X0
	0x03A88DC0 BL 0x3A757A4
	0x03A88DC4 STR W19, [X20 + 0x84]
	0x03A88DC8 LDP X20, X19, [X31 + 0x10]
	0x03A88DCC LDR X30, [X31], #0x20
	0x03A88DD0 RET
	0x03A88DD4 MOV X1, X31
	0x03A88DD8 B 0x3A757CC
	0x03A88DDC MOVZ W8, 0x2
	0x03A88DE0 STR W8, [X0 + 0x58]
	0x03A88DE4 RET
	0x03A88DE8 LDR W8, [X0 + 0x58]
	0x03A88DEC CMP W8, 0x1
	0x03A88DF0 B.GT 0x3A88DF8
	0x03A88DF4 STR W31, [X0 + 0x7C]
	0x03A88DF8 MOVZ W8, 0x2
	0x03A88DFC STR W8, [X0 + 0x58]
	0x03A88E00 RET
	0x03A88E04 STP X30, X21, [X31 - 0x20]!
	0x03A88E08 STP X20, X19, [X31 + 0x10]
	0x03A88E0C ADRP X21, 0x95A000
	0x03A88E10 ADRP X20, 0x6CC000
	0x03A88E14 LDRB W8, [X21 + 0x34D]
	0x03A88E18 LDR X20, [X20 + 0x120]
	0x03A88E1C MOV X19, X0
	0x03A88E20 TBNZ X8, 0x0, 0x3A88E38
	0x03A88E24 ADRP X0, 0x6CC000
	0x03A88E28 LDR X0, [X0 + 0x120]
	0x03A88E2C BL 0x1C16CF4
	0x03A88E30 MOVZ W8, 0x1
	0x03A88E34 STRB W8, [X21 + 0x34D]
	0x03A88E38 MOVN W0, 0x0
	0x03A88E3C MOV X1, X31
	0x03A88E40 BL 0x3C35CBC
	0x03A88E44 STR W0, [X19 + 0x5C]
	0x03A88E48 MOVN W0, 0x0
	0x03A88E4C MOV X1, X31
	0x03A88E50 BL 0x3C35CBC
	0x03A88E54 STR W0, [X19 + 0x60]
	0x03A88E58 LDR X0, [X20]
	0x03A88E5C BL 0x1C16F10
	0x03A88E60 MOV X1, X31
	0x03A88E64 MOV X20, X0
	0x03A88E68 BL 0x3A2B4FC
	0x03A88E6C CBZ X20, 0x3A88EA0
	0x03A88E70 MOVZ W8, 0x2
	0x03A88E74 MOVZ W9, 0x1
	0x03A88E78 STR W8, [X20 + 0x1C]
	0x03A88E7C STR X20, [X19 + 0x68]
	0x03A88E80 STRB W9, [X19 + 0x70]
	0x03A88E84 STR W9, [X19 + 0x7C]
	0x03A88E88 STR W9, [X19 + 0x84]
	0x03A88E8C MOV X0, X19
	0x03A88E90 LDP X20, X19, [X31 + 0x10]
	0x03A88E94 MOV X1, X31
	0x03A88E98 LDP X30, X21, [X31], #0x20
	0x03A88E9C B 0x3A757F4
	0x03A88EA0 BL 0x1C16F20
	0x03A88EA4 MOV X1, X31
	0x03A88EA8 B 0x33BDD8C
	0x03A88EAC SUB X31, X31, 0x90
	0x03A88EB0 STP D11, D10, [X31 + 0x40]
	0x03A88EB4 STP D9, D8, [X31 + 0x50]
	0x03A88EB8 STR X30, [X31 + 0x60]
	0x03A88EBC STP X22, X21, [X31 + 0x70]
	0x03A88EC0 STP X20, X19, [X31 + 0x80]
	0x03A88EC4 ADRP X22, 0x95A000
	0x03A88EC8 ADRP X21, 0x6CF000
	0x03A88ECC LDRB W8, [X22 + 0x34E]
	0x03A88ED0 LDR X21, [X21 + 0x230]
	0x03A88ED4 MOV V8.16B, V3.16B
	0x03A88ED8 MOV V9.16B, V2.16B
	0x03A88EDC MOV V10.16B, V1.16B
	0x03A88EE0 MOV V11.16B, V0.16B
	0x03A88EE4 MOV W19, W2
	0x03A88EE8 MOV X20, X0
	0x03A88EEC TBNZ X8, 0x0, 0x3A88F58
	0x03A88EF0 ADRP X0, 0x6CF000
	0x03A88EF4 LDR X0, [X0 + 0x230]
	0x03A88EF8 BL 0x1C16CF4
	0x03A88EFC ADRP X0, 0x6CF000
	0x03A88F00 LDR X0, [X0 + 0x248]
	0x03A88F04 BL 0x1C16CF4
	0x03A88F08 ADRP X0, 0x6CF000
	0x03A88F0C LDR X0, [X0 + 0x250]
	0x03A88F10 BL 0x1C16CF4
	0x03A88F14 ADRP X0, 0x6CF000
	0x03A88F18 LDR X0, [X0 + 0x258]
	0x03A88F1C BL 0x1C16CF4
	0x03A88F20 ADRP X0, 0x6CF000
	0x03A88F24 LDR X0, [X0 + 0x260]
	0x03A88F28 BL 0x1C16CF4
	0x03A88F2C ADRP X0, 0x6CF000
	0x03A88F30 LDR X0, [X0 + 0x268]
	0x03A88F34 BL 0x1C16CF4
	0x03A88F38 ADRP X0, 0x6CB000
	0x03A88F3C LDR X0, [X0 + 0xFF8]
	0x03A88F40 BL 0x1C16CF4
	0x03A88F44 ADRP X0, 0x6CF000
	0x03A88F48 LDR X0, [X0 + 0x270]
	0x03A88F4C BL 0x1C16CF4
	0x03A88F50 MOVZ W8, 0x1
	0x03A88F54 STRB W8, [X22 + 0x34E]
	0x03A88F58 LDR X0, [X21]
	0x03A88F5C MOVI V0.2D, 0x0
	0x03A88F60 STP V0, V0, [X31 + 0x20]
	0x03A88F64 STR X31, [X31 + 0x68]
	0x03A88F68 LDR W8, [X0 + 0xE0]
	0x03A88F6C CBNZ W8, 0x3A88F74
	0x03A88F70 BL 0x1C16DFC
	0x03A88F74 CBZ X20, 0x3A89100
	0x03A88F78 LDR X8, [X21]
	0x03A88F7C ADRP X9, 0x6CF000
	0x03A88F80 ADRP X10, 0x6CF000
	0x03A88F84 ADRP X21, 0x6CB000
	0x03A88F88 LDR X8, [X8 + 0xB8]
	0x03A88F8C LDR X9, [X9 + 0x270]
	0x03A88F90 LDR X10, [X10 + 0x258]
	0x03A88F94 ADD X2, X31, 0x68
	0x03A88F98 LDR X3, [X8]
	0x03A88F9C LDR X1, [X9]
	0x03A88FA0 LDR X4, [X10]
	0x03A88FA4 LDR X21, [X21 + 0xFF8]
	0x03A88FA8 ADD X8, X31, 0x0
	0x03A88FAC MOV X0, X20
	0x03A88FB0 BL 0x2240F24
	0x03A88FB4 LDP V0, V1, [X31]
	0x03A88FB8 LDR X0, [X21]
	0x03A88FBC LDR X20, [X31 + 0x68]
	0x03A88FC0 STP V0, V1, [X31 + 0x20]
	0x03A88FC4 LDR W8, [X0 + 0xE0]
	0x03A88FC8 CBNZ W8, 0x3A88FD4
	0x03A88FCC BL 0x1C16DFC
	0x03A88FD0 LDR X0, [X21]
	0x03A88FD4 LDR X8, [X0 + 0xB8]
	0x03A88FD8 ADD X1, X8, 0x18
	0x03A88FDC ADD X0, X31, 0x20
	0x03A88FE0 MOV W2, W31
	0x03A88FE4 MOV X3, X31
	0x03A88FE8 BL 0x3996828
	0x03A88FEC CBZ X20, 0x3A89104
	0x03A88FF0 STR X0, [X20 + 0x10]
	0x03A88FF4 LDR X8, [X21]
	0x03A88FF8 LDR X20, [X31 + 0x68]
	0x03A88FFC LDR X8, [X8 + 0xB8]
	0x03A89000 ADD X1, X8, 0x20
	0x03A89004 ADD X0, X31, 0x20
	0x03A89008 MOVZ W2, 0x2
	0x03A8900C MOV X3, X31
	0x03A89010 BL 0x3996A00
	0x03A89014 CBZ X20, 0x3A89108
	0x03A89018 STR X0, [X20 + 0x18]
	0x03A8901C LDR X8, [X31 + 0x68]
	0x03A89020 CBZ X8, 0x3A8910C
	0x03A89024 STR W19, [X8 + 0x20]
	0x03A89028 STP S11, S10, [X8 + 0x24]
	0x03A8902C STP S9, S8, [X8 + 0x2C]
	0x03A89030 ADD X0, X31, 0x20
	0x03A89034 MOV W1, W31
	0x03A89038 MOV X2, X31
	0x03A8903C BL 0x398E404
	0x03A89040 ADRP X21, 0x6CE000
	0x03A89044 LDR X21, [X21 + 0x268]
	0x03A89048 LDR X8, [X21]
	0x03A8904C LDR W9, [X8 + 0xE0]
	0x03A89050 CBNZ W9, 0x3A89060
	0x03A89054 MOV X0, X8
	0x03A89058 BL 0x1C16DFC
	0x03A8905C LDR X8, [X21]
	0x03A89060 LDR X9, [X8 + 0xB8]
	0x03A89064 LDR X19, [X9 + 0x8]
	0x03A89068 CBNZ X19, 0x3A890C0
	0x03A8906C LDR W9, [X8 + 0xE0]
	0x03A89070 CBNZ W9, 0x3A89080
	0x03A89074 MOV X0, X8
	0x03A89078 BL 0x1C16DFC
	0x03A8907C LDR X8, [X21]
	0x03A89080 ADRP X9, 0x6CE000
	0x03A89084 LDR X8, [X8 + 0xB8]
	0x03A89088 LDR X9, [X9 + 0x248]
	0x03A8908C LDR X20, [X8]
	0x03A89090 LDR X0, [X9]
	0x03A89094 BL 0x1C16F10
	0x03A89098 ADRP X8, 0x6CE000
	0x03A8909C LDR X8, [X8 + 0x260]
	0x03A890A0 MOV X19, X0
	0x03A890A4 LDR X2, [X8]
	0x03A890A8 MOV X1, X20
	0x03A890AC MOV X3, X31
	0x03A890B0 BL 0x25C78AC
	0x03A890B4 LDR X8, [X21]
	0x03A890B8 LDR X8, [X8 + 0xB8]
	0x03A890BC STR X19, [X8 + 0x8]
	0x03A890C0 ADRP X8, 0x6CE000
	0x03A890C4 LDR X8, [X8 + 0x250]
	0x03A890C8 LDR X2, [X8]
	0x03A890CC ADD X0, X31, 0x20
	0x03A890D0 MOV X1, X19
	0x03A890D4 BL 0x224107C
	0x03A890D8 ADD X0, X31, 0x20
	0x03A890DC MOV X1, X31
	0x03A890E0 BL 0x39972C0
	0x03A890E4 LDP X20, X19, [X31 + 0x80]
	0x03A890E8 LDP X22, X21, [X31 + 0x70]
	0x03A890EC LDR X30, [X31 + 0x60]
	0x03A890F0 LDP D9, D8, [X31 + 0x50]
	0x03A890F4 LDP D11, D10, [X31 + 0x40]
	0x03A890F8 ADD X31, X31, 0x90
	0x03A890FC RET
	0x03A89100 BL 0x1C16F20
	0x03A89104 BL 0x1C16F20
	0x03A89108 BL 0x1C16F20
	0x03A8910C BL 0x1C16F20
	0x03A89110 B 0x3A89130
	0x03A89114 B 0x3A89130
	0x03A89118 B 0x3A89130
	0x03A8911C B 0x3A89130
	0x03A89120 B 0x3A89130
	0x03A89124 B 0x3A89130
	0x03A89128 B 0x3A89130
	0x03A8912C B 0x3A89130
	0x03A89130 MOV X19, X0
	0x03A89134 CMP W1, 0x1
	0x03A89138 B.NE 0x3A89164
	0x03A8913C MOV X0, X19
	0x03A89140 BL 0x3EB1AD0
	0x03A89144 LDR X20, [X0]
	0x03A89148 BL 0x3EB1AE0
	0x03A8914C ADD X0, X31, 0x20
	0x03A89150 MOV X1, X31
	0x03A89154 BL 0x39972C0
	0x03A89158 CBZ X20, 0x3A890E4
	0x03A8915C MOV X0, X20
	0x03A89160 BL 0x1C16F18

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 592
	010 Move X23, 0x95B000
	011 Move X22, 0x66C000
	012 Move W8, [X23+838]
	013 Move X22, [X22+1432]
	014 Move X21, X3
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x66C000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x6CD000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move X0, 0x6D0000
	028 Move X0, [X0+544]
	029 Call 0x1C17CF4
	030 Move X0, 0x6C9000
	031 Move X0, [X0+2696]
	032 Call 0x1C17CF4
	033 Move X0, 0x6CC000
	034 Move X0, [X0+4088]
	035 Call 0x1C17CF4
	036 Move X0, 0x6D0000
	037 Move X0, [X0+552]
	038 Call 0x1C17CF4
	039 Move X0, 0x6D0000
	040 Move X0, [X0+504]
	041 Call 0x1C17CF4
	042 Move X0, 0x6CF000
	043 Move X0, [X0+1344]
	044 Call 0x1C17CF4
	045 Move X0, 0x6CD000
	046 Move X0, [X0+2360]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X23+838], W8
	050 Move X0, [X22]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+576], X31
	053 Move [X31+540], W31
	054 Move [X31+536], W31
	055 Move [X31+528], W31
	056 Move [X31+464], W31
	057 Move [X31+400], W31
	058 Move [X31+336], W31
	059 Move [X31+544], V0
	060 Move [X31+552], V0
	061 Move [X31+496], V0
	062 Move [X31+504], V0
	063 Move [X31+30], V0
	064 Move [X31+432], V0
	065 Move [X31+440], V0
	066 Move [X31+26], V0
	067 Move [X31+368], V0
	068 Move [X31+376], V0
	069 Move [X31+22], V0
	070 Move [X31+304], V0
	071 Move [X31+312], V0
	072 Move [X31+18], V0
	073 Move W8, [X0+224]
	074 Move X22, [X21+232]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X22
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {94}
	086 Move X1, [X21+232]
	087 NotImplemented "Instruction MOVI not yet implemented."
	088 Add X0, X31, 128
	089 Move X2, X31
	090 Move [X31+160], X31
	091 Move [X31+128], V0
	092 Move [X31+136], V0
	093 Call RenderTargetIdentifier..ctor, X0, X1
	094 Add X8, X31, 128
	095 Move W0, 2
	096 Move X1, X31
	097 Call RenderTargetIdentifier.op_Implicit, X0
	098 Move V0, [X31+128]
	099 Move V1, [X31+144]
	100 Move X8, [X31+160]
	101 Move [X31+240], V0
	102 Move [X31+248], V1
	103 Move V0, [X31+240]
	104 Move V1, [X31+256]
	105 Move [X31+272], X8
	106 Move [X31+576], X8
	107 Move [X31+544], V0
	108 Move [X31+552], V1
	109 Move X0, [X21+400]
	110 Compare X0, 0
	111 JumpIfEqual {564}
	112 Move X1, X31
	113 Call XRPass.get_enabled, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {127}
	118 Move X8, [X21+400]
	119 Compare X8, 0
	120 JumpIfEqual {564}
	121 Move X9, [X8+80]
	122 Move V1, [X8+48]
	123 Move V0, [X8+64]
	124 Move [X31+576], X9
	125 Move [X31+544], V1
	126 Move [X31+552], V0
	127 Move V0, [X31+544]
	128 Move V1, [X31+560]
	129 Move X8, [X31+576]
	130 Move X22, [X20+912]
	131 Move [X31+128], V0
	132 Move [X31+136], V1
	133 Move [X31+160], X8
	134 Compare X19, 0
	135 JumpIfEqual {564}
	136 Move V0, [X31+128]
	137 Move V1, [X31+144]
	138 Move X8, [X31+160]
	139 Add X1, X31, 192
	140 Move X0, X19
	141 Move X2, X31
	142 Move [X31+192], V0
	143 Move [X31+200], V1
	144 Move [X31+224], X8
	145 Call RenderGraph.ImportBackbuffer, X0, X1
	146 Compare X22, 0
	147 JumpIfEqual {564}
	148 Move X23, 0x6CC000
	149 Move X23, [X23+4088]
	150 Move [X22+16], X0
	151 Move X0, X20
	152 Move X1, X21
	153 Call UniversalRenderer.GetRenderPassInputs, X0, X1
	154 Move [X31+540], W31
	155 Move [X31+536], W31
	156 Move W8, [X21+224]
	157 Compare W8, 0
	158 JumpIfEqual {160}
	159 Move X8, [X23]
	160 Move X4, X0
	161 Move X5, X1
	162 Add X1, X31, 540
	163 Add X2, X31, 536
	164 Move X0, X20
	165 Move X3, X21
	166 Call UniversalRenderer.RequiresColorAndDepthTextures, X0, X1, X2, X3, X4
	167 Move X8, [X23]
	168 And W22, W0, 1
	169 Move W9, [X8+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {175}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X8, [X23]
	175 Move X9, [X8+184]
	176 Move [X9+40], W22
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {183}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move X8, [X23]
	183 Move X9, [X8+184]
	184 Move X22, 0x6CD000
	185 Move W9, [X9+40]
	186 Move X22, [X22+16]
	187 Compare W9, 0
	188 JumpIfEqual {234}
	189 Move W8, [X21+288]
	190 Move V1, [X21+256]
	191 Move V0, [X21+272]
	192 Move V2, [X21+15]
	193 Add X0, X31, 480
	194 Move W1, W31
	195 Move X2, X31
	196 Move [X31+528], W8
	197 Move [X31+496], V1
	198 Move [X31+504], V0
	199 Move [X31+30], V2
	200 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	201 Add X0, X31, 480
	202 Move W1, W31
	203 Move X2, X31
	204 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	205 Add X0, X31, 480
	206 Move W1, W31
	207 Move X2, X31
	208 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	209 Move X0, [X23]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X0, [X22]
	215 Move X24, 0x6D0000
	216 Move W8, [X0+224]
	217 Move X24, [X24+552]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X8, [X23]
	222 Move X6, [X24]
	223 Add X1, X31, 480
	224 Move S0, W31
	225 Move X8, [X8+184]
	226 Move W2, 1
	227 Move W3, 1
	228 Move W5, 1
	229 Add X0, X8, 8
	230 Move W4, W31
	231 Move X7, X31
	232 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	233 Move X8, [X23]
	234 Move W9, [X8+224]
	235 Compare W9, 0
	236 JumpIfNotEqual {240}
	237 Move X0, X8
	238 Call 0x1C17DFC
	239 Move X8, [X23]
	240 Move X9, [X8+184]
	241 Move W9, [X9+40]
	242 Compare W9, 0
	243 JumpIfEqual {315}
	244 Move W8, [X21+288]
	245 Move V1, [X21+256]
	246 Move V0, [X21+272]
	247 Move V2, [X21+15]
	248 Add X0, X31, 416
	249 Move W1, W31
	250 Move X2, X31
	251 Move [X31+464], W8
	252 Move [X31+432], V1
	253 Move [X31+440], V0
	254 Move [X31+26], V2
	255 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	256 Add X0, X31, 416
	257 Move W1, W31
	258 Move X2, X31
	259 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	260 Add X0, X31, 416
	261 Move W1, W31
	262 Move X2, X31
	263 Call RenderTextureDescriptor.set_bindMS, X0, X1
	264 Move W8, [X31+424]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X0, X31
	267 Call SystemInfo.get_supportsMultisampledTextures
	268 Compare W0, 0
	269 JumpIfEqual {274}
	270 Add X0, X31, 416
	271 Move W1, 1
	272 Move X2, X31
	273 Call RenderTextureDescriptor.set_bindMS, X0, X1
	274 Move X0, X31
	275 Call SystemInfo.get_graphicsDeviceType
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, X31
	278 Call SystemInfo.get_graphicsDeviceType
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Add X0, X31, 416
	281 Move W1, W31
	282 Move X2, X31
	283 Call RenderTextureDescriptor.set_bindMS, X0, X1
	284 Add X0, X31, 416
	285 Move W1, W31
	286 Move X2, X31
	287 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	288 Move X0, [X23]
	289 Move W8, 92
	290 Move [X31+444], W8
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X0, [X22]
	296 Move X22, 0x6CD000
	297 Move W8, [X0+224]
	298 Move X22, [X22+2360]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X8, [X23]
	303 Move X6, [X22]
	304 Add X1, X31, 416
	305 Move S0, W31
	306 Move X8, [X8+184]
	307 Move W3, 1
	308 Move W5, 1
	309 Move W2, W31
	310 Add X0, X8, 16
	311 Move W4, W31
	312 Move X7, X31
	313 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	314 Move X8, [X23]
	315 Move W9, [X8+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {321}
	318 Move X0, X8
	319 Call 0x1C17DFC
	320 Move X8, [X23]
	321 Move X9, [X8+184]
	322 Move X22, [X20+912]
	323 Move W10, [X9+40]
	324 Compare W10, 0
	325 JumpIfEqual {409}
	326 Move W10, [X8+224]
	327 Compare W10, 0
	328 JumpIfNotEqual {333}
	329 Move X0, X8
	330 Call 0x1C17DFC
	331 Move X8, [X23]
	332 Move X9, [X8+184]
	333 Move X1, [X9+16]
	334 Move X0, X19
	335 Move X2, X31
	336 Call RenderGraph.ImportTexture, X0, X1
	337 Compare X22, 0
	338 JumpIfEqual {564}
	339 Move [X22+32], X0
	340 Move X8, [X23]
	341 Move X22, [X20+912]
	342 Move X0, X19
	343 Move X2, X31
	344 Move X8, [X8+184]
	345 Move X1, [X8+8]
	346 Call RenderGraph.ImportTexture, X0, X1
	347 Compare X22, 0
	348 JumpIfEqual {564}
	349 Move [X22+24], X0
	350 Move X8, [X20+912]
	351 Compare X8, 0
	352 JumpIfEqual {564}
	353 Move X24, 0x6C9000
	354 Move X24, [X24+2696]
	355 Add X22, X8, 24
	356 Move X0, [X24]
	357 Move W9, [X0+224]
	358 Compare W9, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X0, X22
	362 Move X1, X31
	363 Call TextureHandle.IsValid, X0
	364 Move TEMP, X0
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfNotEqual {381}
	368 Move X8, [X20+912]
	369 Compare X8, 0
	370 JumpIfEqual {564}
	371 Move X0, [X23]
	372 Move X22, [X8+24]
	373 Move W9, [X0+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {378}
	376 Call 0x1C17DFC
	377 Move X0, [X23]
	378 Move X8, [X0+184]
	379 Move [X8+24], X22
	380 Move [X20+904], W31
	381 Move X8, [X20+912]
	382 Compare X8, 0
	383 JumpIfEqual {564}
	384 Move X0, [X24]
	385 Add X22, X8, 32
	386 Move W9, [X0+224]
	387 Compare W9, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X0, X22
	391 Move X1, X31
	392 Call TextureHandle.IsValid, X0
	393 Move TEMP, X0
	394 And TEMP, TEMP, 1
	395 Compare TEMP, 1
	396 JumpIfNotEqual {428}
	397 Move X8, [X20+912]
	398 Compare X8, 0
	399 JumpIfEqual {564}
	400 Move X0, [X23]
	401 Move X22, [X8+32]
	402 Move W9, [X0+224]
	403 Compare W9, 0
	404 JumpIfNotEqual {407}
	405 Call 0x1C17DFC
	406 Move X0, [X23]
	407 Move X8, [X0+184]
	408 Move [X8+32], X22
	409 Compare X22, 0
	410 JumpIfEqual {564}
	411 Move W10, [X8+224]
	412 Move X22, [X22+16]
	413 Compare W10, 0
	414 JumpIfNotEqual {419}
	415 Move X0, X8
	416 Call 0x1C17DFC
	417 Move X8, [X23]
	418 Move X9, [X8+184]
	419 Move [X9+24], X22
	420 Move X9, [X20+912]
	421 Compare X9, 0
	422 JumpIfEqual {564}
	423 Move X9, [X9+16]
	424 Move X8, [X8+184]
	425 Move W10, 1
	426 Move [X8+32], X9
	427 Move [X20+904], W10
	428 Move X8, 0x6D0000
	429 Move X8, [X8+544]
	430 Move X0, [X8]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X0, X31
	436 Call SupportedRenderingFeatures.get_active
	437 Compare X0, 0
	438 JumpIfEqual {564}
	439 Move W24, 1
	440 Move [X0+39], W24
	441 Move V2, [X21+256]
	442 Move V0, [X21+272]
	443 Move W8, [X21+288]
	444 Move V1, [X21+15]
	445 Move X22, 0x6CF000
	446 Move X22, [X22+1344]
	447 Add X0, X31, 352
	448 Move W1, 46
	449 Move X2, X31
	450 Move [X31+400], W8
	451 Move [X31+368], V2
	452 Move [X31+376], V0
	453 Move [X31+22], V1
	454 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	455 Add X0, X31, 352
	456 Move W1, W31
	457 Move X2, X31
	458 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	459 Move [X31+360], W24
	460 Move V2, [X31+368]
	461 Move V0, [X31+384]
	462 Move W8, [X31+400]
	463 Move V1, [X31+22]
	464 Move X0, [X23]
	465 Move X24, [X20+912]
	466 Move [X31+144], V2
	467 Move [X31+152], V0
	468 Move [X31+8], V1
	469 Move [X31+176], W8
	470 Move W8, [X0+224]
	471 Compare W8, 0
	472 JumpIfNotEqual {474}
	473 Call 0x1C17DFC
	474 Move V0, [X31+128]
	475 Move V1, [X31+144]
	476 Move V2, [X31+10]
	477 Move W8, [X31+176]
	478 Move X2, [X22]
	479 Add X1, X31, 64
	480 Move W3, 1
	481 Move W5, 1
	482 Move X0, X19
	483 Move W4, W31
	484 Move [X31+64], V0
	485 Move [X31+72], V1
	486 Move [X31+6], V2
	487 Move [X31+112], W8
	488 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	489 Compare X24, 0
	490 JumpIfEqual {564}
	491 Add X8, X21, 240
	492 Move [X24+88], X0
	493 Move W9, [X8+48]
	494 Move V1, [X8+16]
	495 Move V0, [X8+32]
	496 Move V2, [X8]
	497 Add X0, X31, 288
	498 Move W1, W31
	499 Move X2, X31
	500 Move [X31+336], W9
	501 Move [X31+304], V1
	502 Move [X31+312], V0
	503 Move [X31+18], V2
	504 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	505 Add X0, X31, 288
	506 Move X1, X31
	507 Call RenderTextureDescriptor.get_depthBufferBits, X0
	508 Compare W0, 0
	509 JumpIfEqual {514}
	510 Add X0, X31, 288
	511 Move X1, X31
	512 Call RenderTextureDescriptor.get_depthBufferBits, X0
	513 Move W1, W0
	514 Move W1, 32
	515 Move X21, 0x6CF000
	516 Move X21, [X21+504]
	517 Add X0, X31, 288
	518 Move X2, X31
	519 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	520 Move W8, 1
	521 Move [X31+296], W8
	522 Move V2, [X31+304]
	523 Move V0, [X31+320]
	524 Move W9, [X31+336]
	525 Move V1, [X31+18]
	526 Move X0, [X23]
	527 Move X20, [X20+912]
	528 Move [X31+144], V2
	529 Move [X31+152], V0
	530 Move [X31+8], V1
	531 Move [X31+176], W9
	532 Move W8, [X0+224]
	533 Compare W8, 0
	534 JumpIfNotEqual {536}
	535 Call 0x1C17DFC
	536 Move V0, [X31+128]
	537 Move V1, [X31+144]
	538 Move V2, [X31+10]
	539 Move W8, [X31+176]
	540 Move X2, [X21]
	541 Add X1, X31, 0
	542 Move W3, 1
	543 Move W5, 1
	544 Move X0, X19
	545 Move W4, W31
	546 Move [X31], V0
	547 Move [X31+8], V1
	548 Move [X31+2], V2
	549 Move [X31+48], W8
	550 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	551 Compare X20, 0
	552 JumpIfEqual {564}
	553 Move [X20+96], X0
	554 Add X31, X31, 592
	555 Move X20, [X31+48]
	556 Move X19, [X31+56]
	557 Move X22, [X31+32]
	558 Move X21, [X31+40]
	559 Move X24, [X31+16]
	560 Move X23, [X31+24]
	561 Move X29, [X31+64]
	562 Move X30, [X31+72]
	563 Return 
	564 Call 0x1C17F20

Method: System.Void OnRecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A89164 MOV X20, X31
	0x03A89168 B 0x3A89170
	0x03A8916C MOV X19, X0
	0x03A89170 ADD X0, X31, 0x20
	0x03A89174 MOV X1, X31
	0x03A89178 BL 0x39972C0
	0x03A8917C CBNZ X20, 0x3A89188
	0x03A89180 MOV X0, X19
	0x03A89184 BL 0x1D2C690
	0x03A89188 MOV X0, X20
	0x03A8918C BL 0x1C16F18
	0x03A89190 BL 0x1990590
	0x03A89194 MOV X1, X31
	0x03A89198 B 0x33BDD8C
	0x03A8919C STR X30, [X31 - 0x30]!
	0x03A891A0 STP X22, X21, [X31 + 0x10]
	0x03A891A4 STP X20, X19, [X31 + 0x20]
	0x03A891A8 ADRP X21, 0x959000
	0x03A891AC ADRP X22, 0x6C7000
	0x03A891B0 ADRP X19, 0x6CE000
	0x03A891B4 ADRP X20, 0x6CE000
	0x03A891B8 LDRB W8, [X21 + 0x34F]
	0x03A891BC LDR X22, [X22 + 0x598]
	0x03A891C0 LDR X19, [X19 + 0x278]
	0x03A891C4 LDR X20, [X20 + 0x230]
	0x03A891C8 TBNZ X8, 0x0, 0x3A891F8
	0x03A891CC ADRP X0, 0x6CE000
	0x03A891D0 LDR X0, [X0 + 0x230]
	0x03A891D4 BL 0x1C16CF4
	0x03A891D8 ADRP X0, 0x6C7000
	0x03A891DC LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move X20, X2
	008 Move X21, X1
	009 Move X22, X0
	010 Move [X0+420], W31
	011 Call UniversalRenderer.CreateRenderGraphCameraRenderTargets, X0, X1, X2, X3
	012 Move W3, [X22+904]
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X19
	016 Move X4, X31
	017 Call ScriptableRenderer.SetupRenderGraphCameraProperties, X0, X1, X2, X3
	018 Move X0, X22
	019 Move X1, X21
	020 Move X3, X19
	021 Call UniversalRenderer.OnBeforeRendering, X0, X1, X2, X3
	022 Move X0, X22
	023 Move X1, X21
	024 Move X2, X20
	025 Move X3, X19
	026 Call UniversalRenderer.OnMainRendering, X0, X1, X2, X3
	027 Move X0, X22
	028 Move X1, X21
	029 Move X3, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call UniversalRenderer.OnAfterRendering, X0, X1, X2, X3
	036 Return 

Method: System.Void OnFinishRenderGraphRendering(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A898A8 LDRB W8, [X21 + 0x3D0]
	0x03A898AC CBNZ W8, 0x3A898C4
	0x03A898B0 ADRP X0, 0x6CA000
	0x03A898B4 LDR X0, [X0 + 0x400]
	0x03A898B8 BL 0x1C16CF4
	0x03A898BC MOVZ W8, 0x1
	0x03A898C0 STRB W8, [X21 + 0x3D0]
	0x03A898C4 LDR X0, [X22]
	0x03A898C8 ADRP X21, 0x6CB000
	0x03A898CC LDR W8, [X0 + 0xE0]
	0x03A898D0 LDR X21, [X21 + 0x10]
	0x03A898D4 CBNZ W8, 0x3A898E0
	0x03A898D8 BL 0x1C16DFC
	0x03A898DC LDR X0, [X22]
	0x03A898E0 LDR X8, [X0 + 0xB8]
	0x03A898E4 MOVZ W9, 0x1
	0x03A898E8 STRB W9, [X8 + 0x8]
	0x03A898EC LDR X0, [X21]
	0x03A898F0 LDR W8, [X0 + 0xE0]
	0x03A898F4 CBNZ W8, 0x3A898FC
	0x03A898F8 BL 0x1C16DFC
	0x03A898FC ADRP X26, 0x6C7000
	0x03A89900 ADRP X25, 0x6CE000
	0x03A89904 ADRP X24, 0x6CD000
	0x03A89908 ADRP X22, 0x6C7000
	0x03A8990C LDR X26, [X26 + 0x8C0]
	0x03A89910 LDR X25, [X25 + 0x2A8]
	0x03A89914 LDR X24, [X24 + 0xB98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X0
	006 Call UniversalRenderer.get_renderingModeActual, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X0, [X20+496]
	009 Compare X0, 0
	010 JumpIfEqual {35}
	011 Move X8, [X0]
	012 Move X1, [X19]
	013 Move X9, [X8+424]
	014 Move X2, [X8+432]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+536]
	017 Compare X0, 0
	018 JumpIfEqual {35}
	019 Move X8, [X0]
	020 Move X1, [X19]
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X20+440]
	025 Compare X0, 0
	026 JumpIfEqual {35}
	027 Move X8, [X0]
	028 Move X1, [X19]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X3, [X8+424]
	032 Move X2, [X8+432]
	033 Move X30, [X31+32]
	034 CallNoReturn X3
	035 Call 0x1C17F20

Method: System.Void OnBeforeRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A891E0 BL 0x1C16CF4
	0x03A891E4 ADRP X0, 0x6CE000
	0x03A891E8 LDR X0, [X0 + 0x278]
	0x03A891EC BL 0x1C16CF4
	0x03A891F0 MOVZ W8, 0x1
	0x03A891F4 STRB W8, [X21 + 0x34F]
	0x03A891F8 LDR X0, [X22]
	0x03A891FC BL 0x1C16F10
	0x03A89200 LDR X1, [X19]
	0x03A89204 MOV X2, X31
	0x03A89208 MOV X19, X0
	0x03A8920C BL 0x39B19AC
	0x03A89210 LDR X8, [X20]
	0x03A89214 LDP X22, X21, [X31 + 0x10]
	0x03A89218 LDR X8, [X8 + 0xB8]
	0x03A8921C STR X19, [X8]
	0x03A89220 LDP X20, X19, [X31 + 0x20]
	0x03A89224 LDR X30, [X31], #0x30
	0x03A89228 RET
	0x03A8922C MOV X1, X31
	0x03A89230 B 0x33BDD8C
	0x03A89234 STR X30, [X31 - 0x20]!
	0x03A89238 STP X20, X19, [X31 + 0x10]
	0x03A8923C ADRP X19, 0x959000
	0x03A89240 ADRP X20, 0x6CE000
	0x03A89244 LDRB W8, [X19 + 0x350]
	0x03A89248 LDR X20, [X20 + 0x268]
	0x03A8924C TBNZ X8, 0x0, 0x3A89264
	0x03A89250 ADRP X0, 0x6CE000
	0x03A89254 LDR X0, [X0 + 0x268]
	0x03A89258 BL 0x1C16CF4
	0x03A8925C MOVZ W8, 0x1
	0x03A89260 STRB W8, [X19 + 0x350]
	0x03A89264 LDR X0, [X20]
	0x03A89268 BL 0x1C16F10
	0x03A8926C MOV X1, X31
	0x03A89270 MOV X19, X0
	0x03A89274 BL 0x33BDD8C
	0x03A89278 LDR X8, [X20]
	0x03A8927C LDR X8, [X8 + 0xB8]
	0x03A89280 STR X19, [X8]
	0x03A89284 LDP X20, X19, [X31 + 0x10]
	0x03A89288 LDR X30, [X31], #0x20
	0x03A8928C RET
	0x03A89290 MOV X1, X31
	0x03A89294 B 0x33BDD8C
	0x03A89298 STR X30, [X31 - 0x10]!
	0x03A8929C CBZ X2, 0x3A892CC
	0x03A892A0 CBZ X1, 0x3A892CC
	0x03A892A4 LDR X0, [X2 + 0x18]
	0x03A892A8 CBZ X0, 0x3A892CC
	0x03A892AC LDP S2, S3, [X1 + 0x2C]
	0x03A892B0 LDP S0, S1, [X1 + 0x24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X0
	008 Move X0, [X0+464]
	009 Compare X0, 0
	010 JumpIfEqual {77}
	011 Move X21, X1
	012 Move X1, X3
	013 Move X2, X31
	014 Move X19, X3
	015 Call MainLightShadowCasterPass.Setup, X0, X1
	016 Move W22, W0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {32}
	021 Move X0, [X20+464]
	022 Compare X0, 0
	023 JumpIfEqual {77}
	024 Move X23, [X20+912]
	025 Move X1, X21
	026 Move X2, X19
	027 Move X3, X31
	028 Call MainLightShadowCasterPass.Render, X0, X1, X2
	029 Compare X23, 0
	030 JumpIfEqual {77}
	031 Move [X23+40], X0
	032 Move X0, [X20+472]
	033 Compare X0, 0
	034 JumpIfEqual {77}
	035 Move X1, X19
	036 Move X2, X31
	037 Call AdditionalLightsShadowCasterPass.Setup, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {53}
	042 Move X0, [X20+472]
	043 Compare X0, 0
	044 JumpIfEqual {77}
	045 Move X22, [X20+912]
	046 Move X1, X21
	047 Move X2, X19
	048 Move X3, X31
	049 Call AdditionalLightsShadowCasterPass.Render, X0, X1, X2
	050 Compare X22, 0
	051 JumpIfEqual {77}
	052 Move [X22+48], X0
	053 Move TEMP, X22
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {70}
	057 Move W3, [X20+904]
	058 Move X0, X20
	059 Move X1, X21
	060 Move X2, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X4, X31
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call ScriptableRenderer.SetupRenderGraphCameraProperties, X0, X1, X2, X3
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void OnMainRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A892B4 LDR W1, [X1 + 0x20]
	0x03A892B8 FMOV S4, 1
	0x03A892BC MOV W2, W31
	0x03A892C0 MOV X3, X31
	0x03A892C4 LDR X30, [X31], #0x10
	0x03A892C8 B 0x3C4CBF4
	0x03A892CC BL 0x1C16F20
	0x03A892D0 FMOV S0, 10
	0x03A892D4 RET
	0x03A892D8 ADRP X8, 0xFFFFFFFFFD061000
	0x03A892DC LDR V0, [X8 + 0xBC]
	0x03A892E0 RET
	0x03A892E4 FMOV S0, 2
	0x03A892E8 RET
	0x03A892EC MOVZ W0, 0x3E8
	0x03A892F0 RET
	0x03A892F4 STR X30, [X31 - 0x10]!
	0x03A892F8 MOV X0, X31
	0x03A892FC BL 0x3C3BACC
	0x03A89300 CMP W0, 0x8
	0x03A89304 MOVZ W8, 0x8
	0x03A89308 MOVZ W9, 0x4
	0x03A8930C CSEL W0, W9, W8, EQ
	0x03A89310 LDR X30, [X31], #0x10
	0x03A89314 RET
	0x03A89318 STP X30, X19, [X31 - 0x10]!
	0x03A8931C ADRP X19, 0x959000
	0x03A89320 LDRB W8, [X19 + 0x351]
	0x03A89324 TBNZ X8, 0x0, 0x3A8933C
	0x03A89328 ADRP X0, 0x66E000
	0x03A8932C LDR X0, [X0 + 0x2C8]
	0x03A89330 BL 0x1C16CF4
	0x03A89334 MOVZ W8, 0x1
	0x03A89338 STRB W8, [X19 + 0x351]
	0x03A8933C MOVZ W0, 0x11
	0x03A89340 MOV X1, X31
	0x03A89344 BL 0x3C4BA88
	0x03A89348 MOV W19, W0
	0x03A8934C MOV X0, X31
	0x03A89350 BL 0x3C3BACC
	0x03A89354 TBZ X19, 0x0, 0x3A89368
	0x03A89358 CMP W0, 0x8
	0x03A8935C B.NE 0x3A89398
	0x03A89360 MOVZ W0, 0x10
	0x03A89364 B 0x3A893D4
	0x03A89368 CMP W0, 0x11
	0x03A8936C B.EQ 0x3A893D0
	0x03A89370 MOV X0, X31
	0x03A89374 BL 0x3C3BACC
	0x03A89378 CMP W0, 0x8
	0x03A8937C B.EQ 0x3A893D0
	0x03A89380 MOV X0, X31
	0x03A89384 BL 0x3C3BACC
	0x03A89388 CMP W0, 0xB
	0x03A8938C B.EQ 0x3A893D0
	0x03A89390 MOVZ W0, 0x100
	0x03A89394 B 0x3A893D4
	0x03A89398 MOV X0, X31
	0x03A8939C BL 0x3C3BACC
	0x03A893A0 CMP W0, 0xB
	0x03A893A4 B.NE 0x3A893D0
	0x03A893A8 ADRP X8, 0x66E000
	0x03A893AC LDR X8, [X8 + 0x2C8]
	0x03A893B0 LDR X0, [X8]
	0x03A893B4 LDR W8, [X0 + 0xE0]
	0x03A893B8 CBNZ W8, 0x3A893C0
	0x03A893BC BL 0x1C16DFC
	0x03A893C0 MOV X0, X31
	0x03A893C4 BL 0x3C0E32C
	0x03A893C8 CMP W0, 0x2
	0x03A893CC B.LE 0x3A89360
	0x03A893D0 MOVZ W0, 0x20
	0x03A893D4 LDP X30, X19, [X31], #0x10
	0x03A893D8 RET
	0x03A893DC STR X30, [X31 - 0x20]!
	0x03A893E0 STP X20, X19, [X31 + 0x10]
	0x03A893E4 ADRP X19, 0x959000
	0x03A893E8 ADRP X20, 0x693000
	0x03A893EC LDRB W8, [X19 + 0x352]
	0x03A893F0 LDR X20, [X20 + 0x8A8]
	0x03A893F4 TBNZ X8, 0x0, 0x3A8940C
	0x03A893F8 ADRP X0, 0x693000
	0x03A893FC LDR X0, [X0 + 0x8A8]
	0x03A89400 BL 0x1C16CF4
	0x03A89404 MOVZ W8, 0x1
	0x03A89408 STRB W8, [X19 + 0x352]
	0x03A8940C LDR X0, [X20]
	0x03A89410 LDR W8, [X0 + 0xE0]
	0x03A89414 CBNZ W8, 0x3A8941C
	0x03A89418 BL 0x1C16DFC
	0x03A8941C BL 0x3A89318
	0x03A89420 ADD W8, W0, 0x1F
	0x03A89424 LDP X20, X19, [X31 + 0x10]
	0x03A89428 ADD W9, W0, 0x3E
	0x03A8942C CMP W8, 0x0
	0x03A89430 CSEL W8, W9, W8, LT
	0x03A89434 AND W0, W8, 0xFFFFFFE0
	0x03A89438 LDR X30, [X31], #0x20
	0x03A8943C RET
	0x03A89440 MOVZ W0, 0x1000
	0x03A89444 RET
	0x03A89448 STR X30, [X31 - 0x20]!
	0x03A8944C STP X20, X19, [X31 + 0x10]
	0x03A89450 ADRP X19, 0x959000
	0x03A89454 ADRP X20, 0x693000
	0x03A89458 LDRB W8, [X19 + 0x353]
	0x03A8945C LDR X20, [X20 + 0x8A8]
	0x03A89460 TBNZ X8, 0x0, 0x3A89478
	0x03A89464 ADRP X0, 0x693000
	0x03A89468 LDR X0, [X0 + 0x8A8]
	0x03A8946C BL 0x1C16CF4
	0x03A89470 MOVZ W8, 0x1
	0x03A89474 STRB W8, [X19 + 0x353]
	0x03A89478 LDR X0, [X20]
	0x03A8947C LDR W8, [X0 + 0xE0]
	0x03A89480 CBNZ W8, 0x3A89488
	0x03A89484 BL 0x1C16DFC
	0x03A89488 BL 0x3A89318
	0x03A8948C LDP X20, X19, [X31 + 0x10]
	0x03A89490 CMP W0, 0x21
	0x03A89494 MOVZ W8, 0x4000
	0x03A89498 MOVZ W9, 0x1000
	0x03A8949C CSEL W0, W9, W8, LT
	0x03A894A0 LDR X30, [X31], #0x20
	0x03A894A4 RET
	0x03A894A8 STR X30, [X31 - 0x20]!
	0x03A894AC STP X20, X19, [X31 + 0x10]
	0x03A894B0 ADRP X20, 0x959000
	0x03A894B4 ADRP X19, 0x693000
	0x03A894B8 LDRB W8, [X20 + 0x354]
	0x03A894BC LDR X19, [X19 + 0x8A8]
	0x03A894C0 TBNZ X8, 0x0, 0x3A894E4
	0x03A894C4 ADRP X0, 0x66A000
	0x03A894C8 LDR X0, [X0 + 0x5A8]
	0x03A894CC BL 0x1C16CF4
	0x03A894D0 ADRP X0, 0x693000
	0x03A894D4 LDR X0, [X0 + 0x8A8]
	0x03A894D8 BL 0x1C16CF4
	0x03A894DC MOVZ W8, 0x1
	0x03A894E0 STRB W8, [X20 + 0x354]
	0x03A894E4 LDR X0, [X19]
	0x03A894E8 ADRP X19, 0x66A000
	0x03A894EC LDR W8, [X0 + 0xE0]
	0x03A894F0 LDR X19, [X19 + 0x5A8]
	0x03A894F4 CBNZ W8, 0x3A894FC
	0x03A894F8 BL 0x1C16DFC
	0x03A894FC BL 0x3A89318
	0x03A89500 LDR X8, [X19]
	0x03A89504 MOV W19, W0
	0x03A89508 LDR W9, [X8 + 0xE0]
	0x03A8950C CBNZ W9, 0x3A89518
	0x03A89510 MOV X0, X8
	0x03A89514 BL 0x1C16DFC
	0x03A89518 MOV W0, W19
	0x03A8951C LDP X20, X19, [X31 + 0x10]
	0x03A89520 MOVZ W1, 0x40
	0x03A89524 MOV X2, X31
	0x03A89528 LDR X30, [X31], #0x20
	0x03A8952C B 0x337EE94
	0x03A89530 LDR X0, [X0 + 0x20]
	0x03A89534 RET
	0x03A89538 LDR X0, [X0 + 0x28]
	0x03A8953C CBZ X0, 0x3A8954C
	0x03A89540 LDR X8, [X0]
	0x03A89544 LDP X2, X1, [X8 + 0x168]
	0x03A89548 BR X2
	0x03A8954C RET
	0x03A89550 STP X30, X27, [X31 - 0x50]!
	0x03A89554 STP X26, X25, [X31 + 0x10]
	0x03A89558 STP X24, X23, [X31 + 0x20]
	0x03A8955C STP X22, X21, [X31 + 0x30]
	0x03A89560 STP X20, X19, [X31 + 0x40]
	0x03A89564 ADRP X21, 0x959000
	0x03A89568 ADRP X22, 0x6CE000
	0x03A8956C ADRP X23, 0x6CE000
	0x03A89570 LDRB W8, [X21 + 0x355]
	0x03A89574 LDR X22, [X22 + 0x280]
	0x03A89578 LDR X23, [X23 + 0x288]
	0x03A8957C MOV X19, X1
	0x03A89580 MOV X20, X0
	0x03A89584 TBNZ X8, 0x0, 0x3A89668
	0x03A89588 ADRP X0, 0x6CA000
	0x03A8958C LDR X0, [X0 + 0x400]
	0x03A89590 BL 0x1C16CF4
	0x03A89594 ADRP X0, 0x6CE000
	0x03A89598 LDR X0, [X0 + 0x290]
	0x03A8959C BL 0x1C16CF4
	0x03A895A0 ADRP X0, 0x6CE000
	0x03A895A4 LDR X0, [X0 + 0x280]
	0x03A895A8 BL 0x1C16CF4
	0x03A895AC ADRP X0, 0x6CC000
	0x03A895B0 LDR X0, [X0 + 0x4A8]
	0x03A895B4 BL 0x1C16CF4
	0x03A895B8 ADRP X0, 0x6CC000
	0x03A895BC LDR X0, [X0 + 0x4B0]
	0x03A895C0 BL 0x1C16CF4
	0x03A895C4 ADRP X0, 0x6C7000
	0x03A895C8 LDR X0, [X0 + 0x778]
	0x03A895CC BL 0x1C16CF4
	0x03A895D0 ADRP X0, 0x6CE000
	0x03A895D4 LDR X0, [X0 + 0x298]
	0x03A895D8 BL 0x1C16CF4
	0x03A895DC ADRP X0, 0x6CD000
	0x03A895E0 LDR X0, [X0 + 0xB98]
	0x03A895E4 BL 0x1C16CF4
	0x03A895E8 ADRP X0, 0x6C7000
	0x03A895EC LDR X0, [X0 + 0x9B0]
	0x03A895F0 BL 0x1C16CF4
	0x03A895F4 ADRP X0, 0x6C7000
	0x03A895F8 LDR X0, [X0 + 0x8C0]
	0x03A895FC BL 0x1C16CF4
	0x03A89600 ADRP X0, 0x6CB000
	0x03A89604 LDR X0, [X0 + 0x10]
	0x03A89608 BL 0x1C16CF4
	0x03A8960C ADRP X0, 0x6CE000
	0x03A89610 LDR X0, [X0 + 0x2A0]
	0x03A89614 BL 0x1C16CF4
	0x03A89618 ADRP X0, 0x6CE000
	0x03A8961C LDR X0, [X0 + 0x288]
	0x03A89620 BL 0x1C16CF4
	0x03A89624 ADRP X0, 0x6CB000
	0x03A89628 LDR X0, [X0 + 0xC50]
	0x03A8962C BL 0x1C16CF4
	0x03A89630 ADRP X0, 0x693000
	0x03A89634 LDR X0, [X0 + 0x8A8]
	0x03A89638 BL 0x1C16CF4
	0x03A8963C ADRP X0, 0x6C7000
	0x03A89640 LDR X0, [X0 + 0x500]
	0x03A89644 BL 0x1C16CF4
	0x03A89648 ADRP X0, 0x6CE000
	0x03A8964C LDR X0, [X0 + 0x2A8]
	0x03A89650 BL 0x1C16CF4
	0x03A89654 ADRP X0, 0x6CD000
	0x03A89658 LDR X0, [X0 + 0xD68]
	0x03A8965C BL 0x1C16CF4
	0x03A89660 MOVZ W8, 0x1
	0x03A89664 STRB W8, [X21 + 0x355]
	0x03A89668 LDR X0, [X22]
	0x03A8966C BL 0x1C16F10
	0x03A89670 MOV X1, X31
	0x03A89674 MOV X21, X0
	0x03A89678 BL 0x39A12C0
	0x03A8967C MOVZ W8, 0x1
	0x03A89680 STR X21, [X20 + 0x18]
	0x03A89684 STRB W8, [X20 + 0x30]
	0x03A89688 LDR X0, [X23]
	0x03A8968C LDR W8, [X0 + 0xE0]
	0x03A89690 CBNZ W8, 0x3A8969C
	0x03A89694 BL 0x1C16DFC
	0x03A89698 LDR X0, [X23]
	0x03A8969C LDR X8, [X0 + 0xB8]
	0x03A896A0 ADRP X24, 0x6CB000
	0x03A896A4 LDR X21, [X8 + 0x8]
	0x03A896A8 LDR X24, [X24 + 0xC50]
	0x03A896AC CBNZ X21, 0x3A89700
	0x03A896B0 LDR W8, [X0 + 0xE0]
	0x03A896B4 CBNZ W8, 0x3A896C0
	0x03A896B8 BL 0x1C16DFC
	0x03A896BC LDR X0, [X23]
	0x03A896C0 ADRP X9, 0x6CE000
	0x03A896C4 LDR X8, [X0 + 0xB8]
	0x03A896C8 LDR X9, [X9 + 0x290]
	0x03A896CC LDR X22, [X8]
	0x03A896D0 LDR X0, [X9]
	0x03A896D4 BL 0x1C16F10
	0x03A896D8 ADRP X8, 0x6CE000
	0x03A896DC LDR X8, [X8 + 0x2A0]
	0x03A896E0 MOV X1, X22
	0x03A896E4 MOV X3, X31
	0x03A896E8 MOV X21, X0
	0x03A896EC LDR X2, [X8]
	0x03A896F0 BL 0x295A080
	0x03A896F4 LDR X8, [X23]
	0x03A896F8 LDR X8, [X8 + 0xB8]
	0x03A896FC STR X21, [X8 + 0x8]
	0x03A89700 ADRP X23, 0x693000
	0x03A89704 LDR X23, [X23 + 0x8A8]
	0x03A89708 MOV X0, X20
	0x03A8970C MOV X1, X31
	0x03A89710 STR X21, [X20 + 0x38]
	0x03A89714 BL 0x3C54BC4
	0x03A89718 STR X19, [X20 + 0x28]
	0x03A8971C LDR X0, [X24]
	0x03A89720 LDR W8, [X0 + 0xE0]
	0x03A89724 CBNZ W8, 0x3A8972C
	0x03A89728 BL 0x1C16DFC
	0x03A8972C ADRP X22, 0x6C7000
	0x03A89730 LDR X22, [X22 + 0x9B0]
	0x03A89734 BL 0x3A89A38
	0x03A89738 STR X0, [X20 + 0x20]
	0x03A8973C LDR X0, [X23]
	0x03A89740 LDR X21, [X20 + 0x28]
	0x03A89744 LDR W8, [X0 + 0xE0]
	0x03A89748 CBNZ W8, 0x3A89750
	0x03A8974C BL 0x1C16DFC
	0x03A89750 MOV X0, X21

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x95A000
	013 Move W8, [X23+839]
	014 Move X19, X3
	015 Move X22, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x6CF000
	023 Move X0, [X0+560]
	024 Call 0x1C17CF4
	025 Move X0, 0x694000
	026 Move X0, [X0+2216]
	027 Call 0x1C17CF4
	028 Move X0, 0x6CB000
	029 Move X0, [X0+4088]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+839], W8
	033 Move W8, [X19+224]
	034 Compare W8, 0
	035 JumpIfEqual {40}
	036 Move W8, [X19+380]
	037 Compare W8, 0
	038 JumpIfEqual {61}
	039 Move W23, 2
	040 Move W23, 7
	041 Move X8, 0x6CF000
	042 Move X8, [X8+560]
	043 Move V11, [X19+488]
	044 Move V10, [X19+492]
	045 Move V8, [X19+496]
	046 Move X0, [X8]
	047 Move V9, [X19+500]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X21
	054 Move W2, W23
	055 Move V0, V11
	056 Move V1, V10
	057 Move V2, V8
	058 Move V3, V9
	059 Move X3, X31
	060 Call ClearTargetsPass.Render, X0, X1, X2, X3
	061 Move W4, 150
	062 Move X0, X21
	063 Move X1, X20
	064 Move X2, X22
	065 Move X3, X19
	066 Move X5, X31
	067 Call ScriptableRenderer.RecordCustomRenderGraphPasses, X0, X1, X2, X3, X4
	068 Move X8, [X21+912]
	069 Compare X8, 0
	070 JumpIfEqual {364}
	071 Move X0, [X21+440]
	072 Compare X0, 0
	073 JumpIfEqual {364}
	074 Add X3, X8, 80
	075 Add X2, X8, 72
	076 Move X1, X20
	077 Move X4, X19
	078 Move X5, X31
	079 Call DepthNormalOnlyPass.Render, X0, X1, X2, X3, X4
	080 Move X8, [X21+912]
	081 Compare X8, 0
	082 JumpIfEqual {364}
	083 Move X0, [X21+432]
	084 Compare X0, 0
	085 JumpIfEqual {364}
	086 Add X2, X8, 72
	087 Move X1, X20
	088 Move X3, X19
	089 Move X4, X31
	090 Add X22, X21, 912
	091 Call DepthOnlyPass.Render, X0, X1, X2, X3
	092 Add X23, X21, 840
	093 Move X0, X23
	094 Move X1, X31
	095 Call PostProcessPasses.get_isCreated, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {111}
	100 Move X8, [X22]
	101 Compare X8, 0
	102 JumpIfEqual {364}
	103 Move X0, [X23]
	104 Compare X0, 0
	105 JumpIfEqual {364}
	106 Add X2, X8, 104
	107 Move X1, X20
	108 Move X3, X19
	109 Move X4, X31
	110 Call ColorGradingLutPass.Render, X0, X1, X2, X3
	111 Move X0, [X19+400]
	112 Compare X0, 0
	113 JumpIfEqual {364}
	114 Move X1, X31
	115 Call XRPass.get_hasValidOcclusionMesh, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {134}
	120 Move X0, [X21+592]
	121 Compare X0, 0
	122 JumpIfEqual {364}
	123 Move W8, [X21+904]
	124 Move [X0+232], W8
	125 Move X8, [X21+912]
	126 Compare X8, 0
	127 JumpIfEqual {364}
	128 Add X2, X8, 24
	129 Add X3, X8, 32
	130 Move X1, X20
	131 Move X4, X19
	132 Move X5, X31
	133 Call XROcclusionMeshPass.Render, X0, X1, X2, X3, X4
	134 Move X24, 0x6CB000
	135 Move X24, [X24+4088]
	136 Move X0, X21
	137 Call UniversalRenderer.get_renderingModeActual, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X21+728]
	140 Compare X0, 0
	141 JumpIfEqual {364}
	142 Move X8, [X21+472]
	143 Move X1, X19
	144 Move X2, X31
	145 Move [X0+21], W31
	146 Move [X0+152], X8
	147 Call DeferredLights.ResolveMixedLightingMode, X0, X1
	148 Move X8, [X21+728]
	149 Compare X8, 0
	150 JumpIfEqual {364}
	151 Move W9, [X19+224]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 NotImplemented "Instruction CSET not yet implemented."
	154 Move [X8+25], W9
	155 Move X0, [X24]
	156 Move X23, [X21+480]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X24]
	162 Compare X23, 0
	163 JumpIfEqual {364}
	164 Move X8, [X0+184]
	165 Move X0, X23
	166 Move X1, X20
	167 Move X4, X19
	168 Move X2, [X8+24]
	169 Move X3, [X8+32]
	170 Move X5, X22
	171 Move X6, X31
	172 Call GBufferPass.Render, X0, X1, X2, X3, X4, X5
	173 Move X8, [X21+912]
	174 Compare X8, 0
	175 JumpIfEqual {364}
	176 Move X0, [X21+488]
	177 Compare X0, 0
	178 JumpIfEqual {364}
	179 Add X3, X8, 32
	180 Add X2, X8, 72
	181 Move X1, X20
	182 Move X4, X19
	183 Move X5, X31
	184 Call CopyDepthPass.Render, X0, X1, X2, X3, X4
	185 Move X8, [X21+912]
	186 Compare X8, 0
	187 JumpIfEqual {364}
	188 Move X0, [X21+496]
	189 Compare X0, 0
	190 JumpIfEqual {364}
	191 Move X9, [X24]
	192 Move X4, [X8+56]
	193 Move X1, X20
	194 Move X5, X19
	195 Move X9, [X9+184]
	196 Move X6, X31
	197 Move X2, [X9+24]
	198 Move X3, [X9+32]
	199 Call DeferredPass.Render, X0, X1, X2, X3, X4, X5
	200 Move X8, [X21+912]
	201 Compare X8, 0
	202 JumpIfEqual {364}
	203 Move X0, [X21+504]
	204 Compare X0, 0
	205 JumpIfEqual {364}
	206 Move X9, [X24]
	207 Move X4, [X8+40]
	208 Move X5, [X8+48]
	209 Move X9, [X9+184]
	210 Move X23, [X21+512]
	211 Compare X23, 0
	212 JumpIfEqual {364}
	213 Move W8, [X21+904]
	214 Move [X23+385], W8
	215 Move X0, [X24]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {221}
	219 Call 0x1C17DFC
	220 Move X0, [X24]
	221 Move X8, [X22]
	222 Compare X8, 0
	223 JumpIfEqual {364}
	224 Move X9, [X0+184]
	225 Move X4, [X8+40]
	226 Move X5, [X8+48]
	227 Move X0, X23
	228 Move X2, [X9+24]
	229 Move X3, [X9+32]
	230 Move X1, X20
	231 Move X6, X19
	232 Move X7, X31
	233 Call DrawObjectsPass.Render, X0, X1, X2, X3, X4, X5, X6
	234 Move W8, [X19+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {254}
	237 Move X0, [X24]
	238 Move X22, [X21+528]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {244}
	242 Call 0x1C17DFC
	243 Move X0, [X24]
	244 Compare X22, 0
	245 JumpIfEqual {364}
	246 Move X8, [X0+184]
	247 Move X0, X22
	248 Move X1, X20
	249 Move X4, X19
	250 Move X2, [X8+24]
	251 Move X3, [X8+32]
	252 Move X5, X31
	253 Call DrawSkyboxPass.Render, X0, X1, X2, X3, X4
	254 Move X23, [X21+912]
	255 Compare X23, 0
	256 JumpIfEqual {364}
	257 Move X0, [X24]
	258 Move X22, [X21+536]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Compare X22, 0
	264 JumpIfEqual {364}
	265 Move X8, [X24]
	266 Add X2, X23, 72
	267 Move X23, 0x694000
	268 Move X0, X22
	269 Move X8, [X8+184]
	270 Move X23, [X23+2216]
	271 Move X1, X20
	272 Move X4, X19
	273 Add X3, X8, 32
	274 Move X5, X31
	275 Call CopyDepthPass.Render, X0, X1, X2, X3, X4
	276 Move X0, [X23]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, X31
	282 Call UniversalRenderPipeline.get_asset
	283 Compare X0, 0
	284 JumpIfEqual {364}
	285 Move X9, [X21+912]
	286 Compare X9, 0
	287 JumpIfEqual {364}
	288 Move X8, [X21+544]
	289 Compare X8, 0
	290 JumpIfEqual {364}
	291 Move X10, [X24]
	292 Move W4, [X0+80]
	293 Add X2, X9, 64
	294 Move X0, X8
	295 Move X10, [X10+184]
	296 Move X1, X20
	297 Move X5, X19
	298 Move X6, X31
	299 Add X3, X10, 24
	300 Call CopyColorPass.Render, X0, X1, X2, X3, X4, X5
	301 Move X8, [X21+912]
	302 Compare X8, 0
	303 JumpIfEqual {364}
	304 Move X0, [X21+456]
	305 Compare X0, 0
	306 JumpIfEqual {364}
	307 Add X4, X8, 96
	308 Add X3, X8, 88
	309 Add X2, X8, 32
	310 Move X1, X20
	311 Move X5, X19
	312 Move X6, X31
	313 Call MotionVectorRenderPass.Render, X0, X1, X2, X3, X4, X5
	314 Move X0, [X21+552]
	315 Compare X0, 0
	316 JumpIfEqual {364}
	317 Move X22, [X21+560]
	318 Move X1, X31
	319 Call TransparentSettingsPass.Setup, X0
	320 Compare X22, 0
	321 JumpIfEqual {364}
	322 NotImplemented "Instruction ORN not yet implemented."
	323 And W8, W8, 1
	324 Move [X22+386], W8
	325 Move X8, [X21+912]
	326 Compare X8, 0
	327 JumpIfEqual {364}
	328 Move X0, [X21+560]
	329 Compare X0, 0
	330 JumpIfEqual {364}
	331 Move X9, [X24]
	332 Move X4, [X8+40]
	333 Move X5, [X8+48]
	334 Move X1, X20
	335 Move X6, X19
	336 Move X9, [X9+184]
	337 Move X7, X31
	338 Move X2, [X9+24]
	339 Move X3, [X9+32]
	340 Call DrawObjectsPass.Render, X0, X1, X2, X3, X4, X5, X6
	341 Move X0, [X21+568]
	342 Compare X0, 0
	343 JumpIfEqual {364}
	344 Move X8, [X24]
	345 Move X1, X20
	346 Move X4, X19
	347 Move X20, [X31+80]
	348 Move X19, [X31+88]
	349 Move X8, [X8+184]
	350 Move X22, [X31+64]
	351 Move X21, [X31+72]
	352 Move X24, [X31+48]
	353 Move X23, [X31+56]
	354 Move X30, [X31+32]
	355 Move X2, [X8+24]
	356 Move X3, [X8+32]
	357 Move D9, [X31+16]
	358 Move D8, [X31+24]
	359 Move X5, X31
	360 Move D11, [X31+96]
	361 Move D10, [X31+104]
	362 Call InvokeOnRenderObjectCallbackPass.Render, X0, X1, X2, X3, X4
	363 Return 
	364 Call 0x1C17F20

Method: System.Void OnAfterRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A89754 BL 0x3A89B64
	0x03A89758 MOV X0, X31
	0x03A8975C BL 0x3C0E0B0
	0x03A89760 MOV W21, W0
	0x03A89764 MOV X0, X31
	0x03A89768 BL 0x3C0E0D8
	0x03A8976C LDR X8, [X22]
	0x03A89770 MOV W22, W0
	0x03A89774 LDR W9, [X8 + 0xE0]
	0x03A89778 CBNZ W9, 0x3A89784
	0x03A8977C MOV X0, X8
	0x03A89780 BL 0x1C16DFC
	0x03A89784 MOV W0, W21
	0x03A89788 MOV W1, W22
	0x03A8978C MOV X2, X31
	0x03A89790 BL 0x39D6C8C
	0x03A89794 CBZ X19, 0x3A89A34
	0x03A89798 LDRB W0, [X19 + 0xE8]
	0x03A8979C MOV X1, X31
	0x03A897A0 BL 0x3C4BA08
	0x03A897A4 MOV X0, X31
	0x03A897A8 BL 0x3C111EC
	0x03A897AC CMP W0, 0x1
	0x03A897B0 B.LT 0x3A897C0
	0x03A897B4 MOV X0, X31
	0x03A897B8 BL 0x3C111EC
	0x03A897BC B 0x3A897C4
	0x03A897C0 MOVZ W0, 0x1
	0x03A897C4 LDR W8, [X19 + 0x5C]
	0x03A897C8 ADRP X21, 0x6C7000
	0x03A897CC LDR X21, [X21 + 0x500]
	0x03A897D0 CMP W0, W8
	0x03A897D4 B.EQ 0x3A897E4
	0x03A897D8 MOV W0, W8
	0x03A897DC MOV X1, X31
	0x03A897E0 BL 0x3C11214
	0x03A897E4 ADRP X22, 0x6CD000
	0x03A897E8 LDR X22, [X22 + 0xD68]
	0x03A897EC MOV X0, X31
	0x03A897F0 BL 0x3C111EC
	0x03A897F4 MOV X1, X31
	0x03A897F8 BL 0x3C2B340
	0x03A897FC MOV W8, W0
	0x03A89800 LDR X0, [X21]
	0x03A89804 CMP W8, 0x8
	0x03A89808 MOVZ W10, 0x8
	0x03A8980C CSEL W8, W8, W10, LT
	0x03A89810 LDR W9, [X0 + 0xE0]
	0x03A89814 CMP W8, 0x1
	0x03A89818 CSINC W21, W8, W31, GT
	0x03A8981C CBNZ W9, 0x3A89824
	0x03A89820 BL 0x1C16DFC
	0x03A89824 ADRP X24, 0x6CE000
	0x03A89828 LDR X24, [X24 + 0x298]
	0x03A8982C MOV W0, W21
	0x03A89830 MOV X1, X31
	0x03A89834 BL 0x398979C
	0x03A89838 LDR V0, [X19 + 0x60]
	0x03A8983C MOV X0, X31
	0x03A89840 BL 0x3989A04
	0x03A89844 LDR X0, [X22]
	0x03A89848 MOV X1, X31
	0x03A8984C BL 0x3C13EE8
	0x03A89850 LDR X0, [X23]
	0x03A89854 LDR W8, [X0 + 0xE0]
	0x03A89858 CBNZ W8, 0x3A89864
	0x03A8985C BL 0x1C16DFC
	0x03A89860 LDR X0, [X23]
	0x03A89864 LDR X8, [X24]
	0x03A89868 LDR X9, [X0 + 0xB8]
	0x03A8986C ADRP X22, 0x6CA000
	0x03A89870 LDR W10, [X8 + 0xE0]
	0x03A89874 LDR X21, [X9 + 0x80]
	0x03A89878 LDR X22, [X22 + 0x400]
	0x03A8987C CBNZ W10, 0x3A89888
	0x03A89880 MOV X0, X8
	0x03A89884 BL 0x1C16DFC
	0x03A89888 MOV X0, X21
	0x03A8988C MOV X1, X31
	0x03A89890 BL 0x3C608D0
	0x03A89894 LDR X0, [X22]
	0x03A89898 LDR W8, [X0 + 0xE0]
	0x03A8989C CBNZ W8, 0x3A898A4
	0x03A898A0 BL 0x1C16DFC
	0x03A898A4 ADRP X21, 0x959000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x95A000
	008 Move X22, 0x6CD000
	009 Move W8, [X23+840]
	010 Move X22, [X22+1200]
	011 Move X19, X3
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6CD000
	019 Move X0, [X0+1192]
	020 Call 0x1C17CF4
	021 Move X0, 0x6CD000
	022 Move X0, [X0+1200]
	023 Call 0x1C17CF4
	024 Move X0, 0x6CB000
	025 Move X0, [X0+4088]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+840], W8
	029 Move X0, [X22]
	030 Move X22, 0x6CD000
	031 Move W8, [X0+224]
	032 Move X22, [X22+1192]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Call 0x29B00A8
	038 Compare X0, 0
	039 JumpIfEqual {111}
	040 Move X8, [X0+40]
	041 Compare X8, 0
	042 JumpIfEqual {111}
	043 Move W8, [X8+40]
	044 Compare W8, 0
	045 JumpIfNotEqual {78}
	046 Move X22, 0x6CB000
	047 Move X22, [X22+4088]
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X22]
	054 Move X8, [X0+184]
	055 Move X0, X21
	056 Move X1, X20
	057 Move W4, W31
	058 Move X2, [X8+24]
	059 Move X3, [X8+32]
	060 Move X5, X19
	061 Move X6, X31
	062 Call ScriptableRenderer.DrawRenderGraphGizmos, X0, X1, X2, X3, X4, X5
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X22]
	069 Move X8, [X0+184]
	070 Move W4, 1
	071 Move X0, X21
	072 Move X1, X20
	073 Move X2, [X8+24]
	074 Move X3, [X8+32]
	075 Move X5, X19
	076 Move X6, X31
	077 Call ScriptableRenderer.DrawRenderGraphGizmos, X0, X1, X2, X3, X4, X5
	078 Move W8, [X21+904]
	079 Compare W8, 0
	080 JumpIfEqual {88}
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return 
	088 Move W8, [X19+472]
	089 Compare W8, 0
	090 JumpIfEqual {81}
	091 Move X8, [X21+912]
	092 Compare X8, 0
	093 JumpIfEqual {111}
	094 Move X0, [X21+576]
	095 Compare X0, 0
	096 JumpIfEqual {111}
	097 Move X5, [X8+112]
	098 Move X4, [X8+16]
	099 Move X3, [X8+24]
	100 Move X1, X20
	101 Move X2, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X6, X31
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call FinalBlitPass.Render, X0, X1, X2, X3, X4, X5
	110 Return 
	111 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A89918 LDR X22, [X22 + 0x778]
	0x03A8991C MOV X0, X31
	0x03A89920 BL 0x3A71588
	0x03A89924 MOV X0, X19
	0x03A89928 MOV X1, X31
	0x03A8992C BL 0x3A2CA54
	0x03A89930 ADRP X27, 0x959000
	0x03A89934 LDRB W8, [X27 + 0x3D1]
	0x03A89938 MOV X21, X0
	0x03A8993C CBNZ W8, 0x3A89954
	0x03A89940 ADRP X0, 0x6CC000
	0x03A89944 LDR X0, [X0 + 0x758]
	0x03A89948 BL 0x1C16CF4
	0x03A8994C MOVZ W8, 0x1
	0x03A89950 STRB W8, [X27 + 0x3D1]
	0x03A89954 ADRP X8, 0x6CC000
	0x03A89958 LDR X8, [X8 + 0x758]
	0x03A8995C LDR X8, [X8]
	0x03A89960 LDR X8, [X8 + 0xB8]
	0x03A89964 STR X21, [X8 + 0x28]
	0x03A89968 LDR X0, [X26]
	0x03A8996C BL 0x1C16F10
	0x03A89970 LDR X1, [X25]
	0x03A89974 MOV X2, X31
	0x03A89978 MOV X21, X0
	0x03A8997C BL 0x398B76C
	0x03A89980 LDR X8, [X23]
	0x03A89984 LDR X8, [X8 + 0xB8]
	0x03A89988 STR X21, [X8 + 0x8]
	0x03A8998C STRB W31, [X8 + 0x18]
	0x03A89990 LDR X0, [X24]
	0x03A89994 BL 0x1C16F10
	0x03A89998 MOV X1, X31
	0x03A8999C MOV X21, X0
	0x03A899A0 BL 0x3A75668
	0x03A899A4 LDR X8, [X23]
	0x03A899A8 LDR X8, [X8 + 0xB8]
	0x03A899AC STR X21, [X8 + 0x10]
	0x03A899B0 LDR X0, [X22]
	0x03A899B4 LDR W8, [X0 + 0xE0]
	0x03A899B8 CBNZ W8, 0x3A899C0
	0x03A899BC BL 0x1C16DFC
	0x03A899C0 MOV X0, X31
	0x03A899C4 BL 0x399C120
	0x03A899C8 CBZ X0, 0x3A89A34
	0x03A899CC ADRP X22, 0x6CC000
	0x03A899D0 ADRP X21, 0x6CC000
	0x03A899D4 LDR X22, [X22 + 0x4B0]
	0x03A899D8 LDR X21, [X21 + 0x4A8]
	0x03A899DC MOV X1, X31
	0x03A899E0 BL 0x39A10D8
	0x03A899E4 LDR X0, [X22]
	0x03A899E8 LDR X20, [X20 + 0x18]
	0x03A899EC LDR W8, [X0 + 0xE0]
	0x03A899F0 CBNZ W8, 0x3A899F8
	0x03A899F4 BL 0x1C16DFC
	0x03A899F8 LDR X0, [X21]
	0x03A899FC BL 0x29AF0A8
	0x03A89A00 CBZ X20, 0x3A89A34
	0x03A89A04 MOV X1, X0
	0x03A89A08 MOV X0, X20
	0x03A89A0C MOV X2, X31
	0x03A89A10 BL 0x39A0F2C
	0x03A89A14 LDRB W0, [X19 + 0x70]
	0x03A89A18 LDP X20, X19, [X31 + 0x40]
	0x03A89A1C LDP X22, X21, [X31 + 0x30]
	0x03A89A20 LDP X24, X23, [X31 + 0x20]
	0x03A89A24 LDP X26, X25, [X31 + 0x10]
	0x03A89A28 MOV X1, X31
	0x03A89A2C LDP X30, X27, [X31], #0x50
	0x03A89A30 B 0x3C111B0
	0x03A89A34 BL 0x1C16F20
	0x03A89A38 STR X30, [X31 - 0x20]!
	0x03A89A3C STP X20, X19, [X31 + 0x10]
	0x03A89A40 ADRP X19, 0x959000
	0x03A89A44 ADRP X20, 0x6CB000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x95A000
	007 Move X22, 0x6CC000
	008 Move X19, 0x6CC000
	009 Move X20, 0x6CF000
	010 Move W8, [X21+841]
	011 Move X22, [X22+96]
	012 Move X19, [X19+104]
	013 Move X20, [X20+568]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x6CC000
	019 Move X0, [X0+112]
	020 Call 0x1C17CF4
	021 Move X0, 0x6CC000
	022 Move X0, [X0+104]
	023 Call 0x1C17CF4
	024 Move X0, 0x6CC000
	025 Move X0, [X0+96]
	026 Call 0x1C17CF4
	027 Move X0, 0x6CB000
	028 Move X0, [X0+4088]
	029 Call 0x1C17CF4
	030 Move X0, 0x6CF000
	031 Move X0, [X0+568]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+841], W8
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call List`1<ShaderTagId>..ctor, X0
	040 Move X1, [X20]
	041 Add X0, X31, 8
	042 Move X2, X31
	043 Move [X31+8], W31
	044 Call ShaderTagId..ctor, X0, X1
	045 Compare X19, 0
	046 JumpIfEqual {83}
	047 Move X9, 0x6CC000
	048 Move X9, [X9+112]
	049 Move W10, [X19+28]
	050 Move W1, [X31+8]
	051 Move X8, [X19+16]
	052 Move X9, [X9]
	053 Add W10, W10, 1
	054 Move [X19+28], W10
	055 Compare X8, 0
	056 JumpIfEqual {83}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W11, [X8+24]
	059 Move X20, 0x6CB000
	060 Move X20, [X20+4088]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W9, W10, 1
	063 Add X8, X8, X10
	064 Move [X19+24], W9
	065 Move [X8+32], W1
	066 Move X8, [X9+32]
	067 Move X0, X19
	068 Move X8, [X8+192]
	069 Move X2, [X8+112]
	070 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	071 Move X8, [X20]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X8, [X8+184]
	075 Move [X8], X19
	076 Move X8, [X20]
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X8, [X8+184]
	080 Move [X8+40], W31
	081 Move X30, [X31+48]
	082 Return 
	083 Call 0x1C17F20

