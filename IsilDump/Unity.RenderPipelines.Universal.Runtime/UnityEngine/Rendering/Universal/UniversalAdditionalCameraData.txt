Type: UnityEngine.Rendering.Universal.UniversalAdditionalCameraData

Method: System.Single get_version()

Disassembly:
	0x03A82288 CMP W8, W1
	0x03A8228C B.NE 0x3A82294

ISIL:
	001 Move V0, [X0+140]
	002 Return V0

Method: UnityEngine.Rendering.Universal.UniversalAdditionalCameraData get_defaultAdditionalCameraData()

Disassembly:
	0x03A82290 RET
	0x03A82294 STR W1, [X0 + 0x38]
	0x03A82298 B 0x3A8229C
	0x03A8229C STP X30, X21, [X31 - 0x20]!
	0x03A822A0 STP X20, X19, [X31 + 0x10]
	0x03A822A4 ADRP X21, 0x960000
	0x03A822A8 ADRP X20, 0x671000
	0x03A822AC LDRB W8, [X21 + 0x335]
	0x03A822B0 LDR X20, [X20 + 0x598]
	0x03A822B4 MOV X19, X0
	0x03A822B8 TBNZ X8, 0x0, 0x3A822D0
	0x03A822BC ADRP X0, 0x671000
	0x03A822C0 LDR X0, [X0 + 0x598]
	0x03A822C4 BL 0x1C16CF4
	0x03A822C8 MOVZ W8, 0x1
	0x03A822CC STRB W8, [X21 + 0x335]
	0x03A822D0 MOV X0, X19
	0x03A822D4 BL 0x3A821CC
	0x03A822D8 LDR X8, [X20]
	0x03A822DC MOV X20, X0
	0x03A822E0 LDR W9, [X8 + 0xE0]
	0x03A822E4 CBNZ W9, 0x3A822F0
	0x03A822E8 MOV X0, X8
	0x03A822EC BL 0x1C16DFC
	0x03A822F0 MOV X0, X20
	0x03A822F4 MOV X1, X31
	0x03A822F8 BL 0x3C38948
	0x03A822FC TBZ X0, 0x0, 0x3A82334
	0x03A82300 MOV X0, X19
	0x03A82304 BL 0x3A821CC
	0x03A82308 CBZ X0, 0x3A82340
	0x03A8230C LDRB W8, [X19 + 0x3C]
	0x03A82310 MOVZ W9, 0x44
	0x03A82314 MOV X2, X31
	0x03A82318 CMP W8, 0x0
	0x03A8231C MOVZ W8, 0x38
	0x03A82320 CSEL X8, X8, X9, EQ
	0x03A82324 LDR W1, [X19, X8, LSL]
	0x03A82328 LDP X20, X19, [X31 + 0x10]
	0x03A8232C LDP X30, X21, [X31], #0x20
	0x03A82330 B 0x3C16B4C
	0x03A82334 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x961000
	006 Move X20, 0x6D6000
	007 Move X19, 0x672000
	008 Move W8, [X21+804]
	009 Move X20, [X20+80]
	010 Move X19, [X19+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x672000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x6D6000
	019 Move X0, [X0+80]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+804], W8
	023 Move X8, [X20]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {46}
	039 Move X0, [X20]
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Call UniversalAdditionalCameraData..ctor, X0
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move [X8], X19
	046 Move X8, [X20]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X8, [X8+184]
	050 Move X0, [X8]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: UnityEngine.Camera get_camera()

Disassembly:
	0x03A82480 BIC W9, W9, W9, 0x1F
	0x03A82484 STR W9, [X19 + 0x58]
	0x03A82488 STR W8, [X19 + 0x20]
	0x03A8248C LDP X20, X19, [X31 + 0x10]
	0x03A82490 LDP X30, X21, [X31], #0x20
	0x03A82494 RET
	0x03A82498 STP X30, X21, [X31 - 0x20]!
	0x03A8249C STP X20, X19, [X31 + 0x10]
	0x03A824A0 ADRP X21, 0x960000
	0x03A824A4 ADRP X20, 0x6D2000
	0x03A824A8 LDRB W8, [X21 + 0x336]
	0x03A824AC LDR X20, [X20 + 0xC30]
	0x03A824B0 MOV X19, X0
	0x03A824B4 TBNZ X8, 0x0, 0x3A824CC
	0x03A824B8 ADRP X0, 0x6D2000
	0x03A824BC LDR X0, [X0 + 0xC30]
	0x03A824C0 BL 0x1C16CF4
	0x03A824C4 MOVZ W8, 0x1
	0x03A824C8 STRB W8, [X21 + 0x336]
	0x03A824CC MOVZ W8, 0x3
	0x03A824D0 MOVZ W9, 0x1
	0x03A824D4 STR W8, [X19 + 0x20]
	0x03A824D8 STRB W9, [X19 + 0x24]
	0x03A824DC LDR X0, [X20]
	0x03A824E0 LDR W8, [X0 + 0xE0]
	0x03A824E4 CBNZ W8, 0x3A824F0
	0x03A824E8 BL 0x1C16DFC
	0x03A824EC LDR X0, [X20]
	0x03A824F0 LDR X8, [X0 + 0xB8]
	0x03A824F4 MOVI V0.2S, 0x1
	0x03A824F8 ADRP X20, 0x95F000
	0x03A824FC LDR W8, [X8 + 0x10]
	0x03A82500 STUR D0, [X19 + 0x34]
	0x03A82504 STR D0, [X19 + 0x40]
	0x03A82508 STR W8, [X19 + 0x30]
	0x03A8250C LDRB W8, [X20 + 0xA48]
	0x03A82510 CBNZ W8, 0x3A82528
	0x03A82514 ADRP X0, 0x679000
	0x03A82518 LDR X0, [X0 + 0xF08]
	0x03A8251C BL 0x1C16CF4
	0x03A82520 MOVZ W8, 0x1
	0x03A82524 STRB W8, [X20 + 0xA48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x961000
	007 Move X22, 0x672000
	008 Move W8, [X20+805]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6D6000
	016 Move X0, [X0+160]
	017 Call 0x1C17CF4
	018 Move X0, 0x672000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+805], W8
	023 Move X20, X19
	024 Add X20, X20, 128
	025 Move X21, [X20]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {48}
	038 Move X0, X19
	039 Move X1, X31
	040 Call Component.get_gameObject, X0
	041 Compare X0, 0
	042 JumpIfEqual {55}
	043 Move X8, 0x6D6000
	044 Move X8, [X8+160]
	045 Move X1, X20
	046 Move X2, [X8]
	047 Call 0x21E7600, X0, X1
	048 Move X0, [X20]
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Boolean get_renderShadows()

Disassembly:
	0x03A82528 ADRP X20, 0x679000
	0x03A8252C LDR X20, [X20 + 0xF08]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_renderShadows(System.Boolean value)

Disassembly:
	0x03A82530 ADRP X21, 0x957000
	0x03A82534 LDR X8, [X20]
	0x03A82538 LDR X9, [X8 + 0xB8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.CameraOverrideOption get_requiresDepthOption()

Disassembly:
	0x03A8253C LDR V0, [X9 + 0x8]
	0x03A82540 STR D0, [X19 + 0x48]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_requiresDepthOption(UnityEngine.Rendering.Universal.CameraOverrideOption value)

Disassembly:
	0x03A82544 LDRB W9, [X21 + 0x78F]
	0x03A82548 CBNZ W9, 0x3A82560

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.CameraOverrideOption get_requiresColorOption()

Disassembly:
	0x03A8254C MOV X0, X20
	0x03A82550 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_requiresColorOption(UnityEngine.Rendering.Universal.CameraOverrideOption value)

Disassembly:
	0x03A82554 LDR X8, [X20]
	0x03A82558 MOVZ W9, 0x1

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.CameraRenderType get_renderType()

Disassembly:
	0x03A8255C STRB W9, [X21 + 0x78F]
	0x03A82560 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_renderType(UnityEngine.Rendering.Universal.CameraRenderType value)

Disassembly:
	0x03A82564 MOV X0, X19
	0x03A82568 MOV X1, X31

ISIL:
	001 Move [X0+44], W1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Camera> get_cameraStack()

Disassembly:
	0x03A8256C LDR V0, [X8]
	0x03A82570 STR D0, [X19 + 0x50]
	0x03A82574 LDP X20, X19, [X31 + 0x10]
	0x03A82578 LDP X30, X21, [X31], #0x20
	0x03A8257C B 0x3C36C30
	0x03A82580 STR X30, [X31 - 0x20]!
	0x03A82584 STP X20, X19, [X31 + 0x10]
	0x03A82588 ADRP X19, 0x960000
	0x03A8258C ADRP X20, 0x6D2000
	0x03A82590 LDRB W8, [X19 + 0x337]
	0x03A82594 LDR X20, [X20 + 0xC30]
	0x03A82598 TBNZ X8, 0x0, 0x3A825B0
	0x03A8259C ADRP X0, 0x6D2000
	0x03A825A0 LDR X0, [X0 + 0xC30]
	0x03A825A4 BL 0x1C16CF4
	0x03A825A8 MOVZ W8, 0x1
	0x03A825AC STRB W8, [X19 + 0x337]
	0x03A825B0 LDR X8, [X20]
	0x03A825B4 ADRP X9, 0xFFFFFFFFFD069000
	0x03A825B8 ADRP X10, 0xFFFFFFFFFD06B000
	0x03A825BC LDR V0, [X9 + 0x57]
	0x03A825C0 LDR X8, [X8 + 0xB8]
	0x03A825C4 LDR V1, [X10 + 0xFC0]
	0x03A825C8 LDP X20, X19, [X31 + 0x10]
	0x03A825CC MOVZ W9, 0x80
	0x03A825D0 STR V0, [X8]
	0x03A825D4 STR D1, [X8 + 0x10]
	0x03A825D8 STR W9, [X8 + 0x18]
	0x03A825DC LDR X30, [X31], #0x20
	0x03A825E0 RET
	0x03A825E4 LDRSW X8, [X0 + 0x2E0]
	0x03A825E8 CMP W8, 0x2
	0x03A825EC B.HI 0x3A82600
	0x03A825F0 ADRP X9, 0xFFFFFFFFFD115000
	0x03A825F4 ADD X9, X9, 0xB34
	0x03A825F8 LDR W0, [X9, X8, LSL #2]
	0x03A825FC RET
	0x03A82600 MOV W0, W31
	0x03A82604 RET
	0x03A82608 LDR W0, [X0 + 0x2E0]
	0x03A8260C RET
	0x03A82610 STP X30, X19, [X31 - 0x10]!
	0x03A82614 MOV X19, X0
	0x03A82618 LDR W0, [X0 + 0x2E0]
	0x03A8261C CMP W0, 0x1
	0x03A82620 B.NE 0x3A8266C
	0x03A82624 MOV X0, X31
	0x03A82628 BL 0x3C0FF1C
	0x03A8262C TBNZ X0, 0x0, 0x3A82668
	0x03A82630 LDR X0, [X19 + 0xE0]
	0x03A82634 CBZ X0, 0x3A82644
	0x03A82638 MOV X1, X31
	0x03A8263C BL 0x3A35974
	0x03A82640 TBNZ X0, 0x0, 0x3A82668
	0x03A82644 LDR X0, [X19 + 0x2D8]
	0x03A82648 CBZ X0, 0x3A8266C
	0x03A8264C MOV X1, X31
	0x03A82650 BL 0x3A9C7B0
	0x03A82654 TBZ X0, 0x0, 0x3A82668
	0x03A82658 LDR X8, [X19 + 0x2D8]
	0x03A8265C CBZ X8, 0x3A8267C
	0x03A82660 LDRB W8, [X8 + 0x19]
	0x03A82664 CBZ W8, 0x3A82674
	0x03A82668 MOV W0, W31
	0x03A8266C LDP X30, X19, [X31], #0x10
	0x03A82670 RET
	0x03A82674 LDR W0, [X19 + 0x2E0]
	0x03A82678 B 0x3A8266C
	0x03A8267C BL 0x1C16F20
	0x03A82680 LDR X8, [X0 + 0x2D8]
	0x03A82684 CBZ X8, 0x3A82698
	0x03A82688 LDRB W8, [X8 + 0x1A]
	0x03A8268C CMP W8, 0x0
	0x03A82690 CSET W0, NE
	0x03A82694 RET
	0x03A82698 MOV W0, W31
	0x03A8269C RET
	0x03A826A0 LDR W0, [X0 + 0x2E4]
	0x03A826A4 RET
	0x03A826A8 STR W1, [X0 + 0x2E4]
	0x03A826AC RET
	0x03A826B0 LDR X0, [X0 + 0x348]
	0x03A826B4 RET
	0x03A826B8 LDR X0, [X0 + 0x350]
	0x03A826BC RET
	0x03A826C0 LDR X0, [X0 + 0x358]
	0x03A826C4 RET
	0x03A826C8 LDR X0, [X0 + 0x368]
	0x03A826CC RET
	0x03A826D0 LDR X0, [X0 + 0x2D8]
	0x03A826D4 RET
	0x03A826D8 SUB X31, X31, 0x110
	0x03A826DC STP X29, X30, [X31 + 0xB0]
	0x03A826E0 STP X28, X27, [X31 + 0xC0]
	0x03A826E4 STP X26, X25, [X31 + 0xD0]
	0x03A826E8 STP X24, X23, [X31 + 0xE0]
	0x03A826EC STP X22, X21, [X31 + 0xF0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x961000
	009 Move W8, [X20+806]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x6D6000
	016 Move X0, [X0+168]
	017 Call 0x1C17CF4
	018 Move X0, 0x672000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x6D6000
	022 Move X0, [X0+176]
	023 Call 0x1C17CF4
	024 Move X0, 0x6D6000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move X0, 0x6D6000
	028 Move X0, [X0+192]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+806], W8
	032 Move X20, 0x6D6000
	033 Move X21, 0x672000
	034 Move W8, [X19+44]
	035 Move X20, [X20+176]
	036 Move X21, [X21+2600]
	037 Move X0, X19
	038 Compare W8, 0
	039 JumpIfEqual {66}
	040 Move X1, X31
	041 Call Component.get_gameObject, X0
	042 Compare X0, 0
	043 JumpIfEqual {114}
	044 Move X1, [X20]
	045 Call 0x21E62E4, X0
	046 Compare X0, 0
	047 JumpIfEqual {114}
	048 Move X22, 0x6D6000
	049 Move X23, 0x6D6000
	050 Move X22, [X22+168]
	051 Move X23, [X23+192]
	052 Move X1, X31
	053 Call Object.get_name, X0
	054 Move X20, X0
	055 Move W8, [X19+44]
	056 Move X0, [X22]
	057 Add X1, X31, 12
	058 Move [X31+12], W8
	059 Call 0x1C17E04
	060 Move X8, [X23]
	061 Move X2, X0
	062 Move X1, X20
	063 Move X3, X31
	064 Move X0, X8
	065 Call String.Format, X0, X1, X2
	066 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	067 Compare X0, 0
	068 JumpIfEqual {114}
	069 Move W1, W31
	070 Move X2, X31
	071 Call ScriptableRenderer.SupportsCameraStackingType, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {77}
	076 Move X0, [X19+48]
	077 Move X0, X19
	078 Move X1, X31
	079 Call Component.get_gameObject, X0
	080 Compare X0, 0
	081 JumpIfEqual {114}
	082 Move X1, [X20]
	083 Call 0x21E62E4, X0
	084 Compare X0, 0
	085 JumpIfEqual {114}
	086 Move X1, X31
	087 Call Object.get_name, X0
	088 Move X8, 0x6D6000
	089 Move X8, [X8+184]
	090 Move X1, X0
	091 Move X2, X31
	092 Move X8, [X8]
	093 Move X0, X8
	094 Call String.Format, X0, X1
	095 Move X8, [X21]
	096 Move X19, X0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X19
	103 Move X1, X31
	104 Call Debug.LogWarning, X0
	105 Move X0, X31
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X30, [X31+16]
	111 Move X23, [X31+24]
	112 Add X31, X31, 64
	113 Return X0
	114 Call 0x1C17F20

Method: System.Void UpdateCameraStack()

Disassembly:
	0x03A82974 MOV X0, X19
	0x03A82978 MOV X1, X20
	0x03A8297C MOV X2, X31
	0x03A82980 BL 0x3A45060
	0x03A82984 LDR X0, [X24]
	0x03A82988 LDR W8, [X0 + 0xE0]
	0x03A8298C CBNZ W8, 0x3A82994
	0x03A82990 BL 0x1C16DFC
	0x03A82994 MOV X0, X31
	0x03A82998 BL 0x3A94128
	0x03A8299C LDR X0, [X22]
	0x03A829A0 BL 0x1C16F10
	0x03A829A4 LDR X2, [X21]
	0x03A829A8 MOV X1, X31
	0x03A829AC MOV X3, X31
	0x03A829B0 MOV X21, X0
	0x03A829B4 BL 0x2D34C2C
	0x03A829B8 CBZ X20, 0x3A83614
	0x03A829BC LDR X8, [X20 + 0x48]
	0x03A829C0 CBZ X8, 0x3A83614
	0x03A829C4 LDR X8, [X8 + 0x18]
	0x03A829C8 CBZ X8, 0x3A83614
	0x03A829CC ADRP X9, 0x6CE000
	0x03A829D0 LDR X9, [X9 + 0x500]
	0x03A829D4 LDP X23, X22, [X8 + 0x10]
	0x03A829D8 LDR X0, [X9]
	0x03A829DC LDR W9, [X0 + 0xE0]
	0x03A829E0 CBNZ W9, 0x3A829E8
	0x03A829E4 BL 0x1C16DFC
	0x03A829E8 MOV X0, X21
	0x03A829EC MOV X1, X23
	0x03A829F0 MOV X2, X22
	0x03A829F4 MOV X3, X31
	0x03A829F8 BL 0x3989164
	0x03A829FC LDR X8, [X20 + 0x50]
	0x03A82A00 CBZ X8, 0x3A83614
	0x03A82A04 ADRP X9, 0x699000
	0x03A82A08 LDR X9, [X9 + 0x8F8]
	0x03A82A0C LDR X21, [X8 + 0x50]
	0x03A82A10 LDR X0, [X9]
	0x03A82A14 LDR W9, [X0 + 0xE0]
	0x03A82A18 CBNZ W9, 0x3A82A20
	0x03A82A1C BL 0x1C16DFC
	0x03A82A20 MOV X0, X21
	0x03A82A24 MOV X1, X31
	0x03A82A28 BL 0x39E1920
	0x03A82A2C STR X0, [X19 + 0x310]
	0x03A82A30 LDR X8, [X20 + 0x50]
	0x03A82A34 CBZ X8, 0x3A83614
	0x03A82A38 LDR X0, [X8 + 0x60]
	0x03A82A3C MOV X1, X31
	0x03A82A40 BL 0x39E1920
	0x03A82A44 STR X0, [X19 + 0x318]
	0x03A82A48 LDR X8, [X20 + 0x50]
	0x03A82A4C CBZ X8, 0x3A83614
	0x03A82A50 LDR X0, [X8 + 0x18]
	0x03A82A54 MOV X1, X31
	0x03A82A58 BL 0x39E1920
	0x03A82A5C STR X0, [X19 + 0x320]
	0x03A82A60 LDR X8, [X20 + 0x50]
	0x03A82A64 CBZ X8, 0x3A83614
	0x03A82A68 LDR X0, [X8 + 0x28]
	0x03A82A6C MOV X1, X31
	0x03A82A70 BL 0x39E1920
	0x03A82A74 STR X0, [X19 + 0x328]
	0x03A82A78 LDR X8, [X20 + 0x50]
	0x03A82A7C CBZ X8, 0x3A83614
	0x03A82A80 LDR X0, [X8 + 0x30]
	0x03A82A84 MOV X1, X31
	0x03A82A88 BL 0x39E1920
	0x03A82A8C STR X0, [X19 + 0x330]
	0x03A82A90 LDR X8, [X20 + 0x50]
	0x03A82A94 CBZ X8, 0x3A83614
	0x03A82A98 LDR X0, [X8 + 0x68]
	0x03A82A9C MOV X1, X31
	0x03A82AA0 BL 0x39E1920
	0x03A82AA4 STR X0, [X19 + 0x338]
	0x03A82AA8 LDR X8, [X20 + 0x50]
	0x03A82AAC CBZ X8, 0x3A83614
	0x03A82AB0 LDR X0, [X8 + 0x70]
	0x03A82AB4 MOV X1, X31
	0x03A82AB8 ADD X21, X19, 0x2ED
	0x03A82ABC BL 0x39E1920
	0x03A82AC0 STR X0, [X19 + 0x340]
	0x03A82AC4 LDR X29, [X20 + 0x68]
	0x03A82AC8 MOV X0, X31
	0x03A82ACC BL 0x3C56320
	0x03A82AD0 STR X0, [X21]
	0x03A82AD4 STR W1, [X21 + 0x8]
	0x03A82AD8 CBZ X29, 0x3A83614
	0x03A82ADC LDRB W1, [X29 + 0x10]
	0x03A82AE0 ADRP X22, 0x69A000
	0x03A82AE4 LDR X22, [X22 + 0x8A8]
	0x03A82AE8 MOV X0, X21
	0x03A82AEC MOV X2, X31
	0x03A82AF0 BL 0x3C5B1BC
	0x03A82AF4 LDR W1, [X29 + 0x18]
	0x03A82AF8 MOV X0, X21
	0x03A82AFC MOV X2, X31
	0x03A82B00 BL 0x3C5B248
	0x03A82B04 LDR W1, [X29 + 0x1C]
	0x03A82B08 MOV X0, X21
	0x03A82B0C MOV X2, X31
	0x03A82B10 BL 0x3C5B264
	0x03A82B14 LDR W1, [X29 + 0x20]
	0x03A82B18 MOV X0, X21
	0x03A82B1C MOV X2, X31
	0x03A82B20 BL 0x3C5B280
	0x03A82B24 LDR W1, [X29 + 0x24]
	0x03A82B28 MOV X0, X21
	0x03A82B2C MOV X2, X31
	0x03A82B30 BL 0x3C5B29C
	0x03A82B34 LDR W8, [X20 + 0x84]
	0x03A82B38 STR W8, [X19 + 0x308]
	0x03A82B3C LDR X0, [X22]
	0x03A82B40 LDR W8, [X0 + 0xE0]
	0x03A82B44 CBNZ W8, 0x3A82B4C
	0x03A82B48 BL 0x1C16DFC
	0x03A82B4C ADRP X23, 0x671000
	0x03A82B50 LDR X23, [X23 + 0x598]
	0x03A82B54 MOV X0, X31
	0x03A82B58 BL 0x3A8AB60
	0x03A82B5C CBZ X0, 0x3A82C0C
	0x03A82B60 LDRB W8, [X0 + 0xEB]
	0x03A82B64 CBZ W8, 0x3A82C0C
	0x03A82B68 ADD X8, X31, 0x30
	0x03A82B6C MOV X0, X31
	0x03A82B70 BL 0x3A56F94
	0x03A82B74 LDR V0, [X31 + 0x3]
	0x03A82B78 LDUR V1, [X31 + 0x3C]
	0x03A82B7C LDR X0, [X22]
	0x03A82B80 STR V0, [X31 + 0x9]
	0x03A82B84 STUR V1, [X31 + 0x9C]
	0x03A82B88 LDR W8, [X0 + 0xE0]
	0x03A82B8C CBNZ W8, 0x3A82B94
	0x03A82B90 BL 0x1C16DFC
	0x03A82B94 MOV X0, X31
	0x03A82B98 BL 0x3A8AB60
	0x03A82B9C LDR X8, [X23]
	0x03A82BA0 MOV X22, X0
	0x03A82BA4 LDR W9, [X8 + 0xE0]
	0x03A82BA8 CBNZ W9, 0x3A82BB4
	0x03A82BAC MOV X0, X8
	0x03A82BB0 BL 0x1C16DFC
	0x03A82BB4 MOV X0, X22
	0x03A82BB8 MOV X1, X31
	0x03A82BBC BL 0x3C38948
	0x03A82BC0 TBZ X0, 0x0, 0x3A82BE8
	0x03A82BC4 CBZ X22, 0x3A83614
	0x03A82BC8 MOV X0, X22
	0x03A82BCC MOV X1, X31
	0x03A82BD0 BL 0x3A2C070
	0x03A82BD4 STR W0, [X31 + 0x98]
	0x03A82BD8 MOV X0, X22
	0x03A82BDC MOV X1, X31
	0x03A82BE0 BL 0x3A2C2A8
	0x03A82BE4 STR X0, [X31 + 0x90]
	0x03A82BE8 ADRP X8, 0x6D4000
	0x03A82BEC LDR X8, [X8 + 0x180]
	0x03A82BF0 LDR X0, [X8]
	0x03A82BF4 BL 0x1C16F10
	0x03A82BF8 ADD X1, X31, 0x90
	0x03A82BFC MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x961000
	011 Move W8, [X20+807]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0x672000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x6D6000
	021 Move X0, [X0+224]
	022 Call 0x1C17CF4
	023 Move X0, 0x6D5000
	024 Move X0, [X0+3880]
	025 Call 0x1C17CF4
	026 Move X0, 0x6D6000
	027 Move X0, [X0+232]
	028 Call 0x1C17CF4
	029 Move X0, 0x672000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x6D6000
	033 Move X0, [X0+240]
	034 Call 0x1C17CF4
	035 Move X0, 0x6D6000
	036 Move X0, [X0+248]
	037 Call 0x1C17CF4
	038 Move X0, 0x676000
	039 Move X0, [X0+2344]
	040 Call 0x1C17CF4
	041 Move X0, 0x6D6000
	042 Move X0, [X0+256]
	043 Call 0x1C17CF4
	044 Move X0, 0x6D6000
	045 Move X0, [X0+264]
	046 Call 0x1C17CF4
	047 Move X0, 0x672000
	048 Move X0, [X0+2440]
	049 Call 0x1C17CF4
	050 Move X0, 0x69B000
	051 Move X0, [X0+3264]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+807], W8
	055 Move X20, [X19+48]
	056 Compare X20, 0
	057 JumpIfEqual {176}
	058 Move X24, 0x6D6000
	059 Move X24, [X24+248]
	060 Move W23, [X20+24]
	061 Move X0, [X24]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X24]
	067 Move X8, [X0+184]
	068 Move X25, 0x6D6000
	069 Move X21, [X8+8]
	070 Move X25, [X25+224]
	071 Compare X21, 0
	072 JumpIfNotEqual {94}
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X24]
	078 Move X9, 0x6D6000
	079 Move X8, [X0+184]
	080 Move X9, [X9+232]
	081 Move X22, [X8]
	082 Move X0, [X9]
	083 Call 0x1C17F10
	084 Move X8, 0x6D6000
	085 Move X8, [X8+240]
	086 Move X1, X22
	087 Move X3, X31
	088 Move X21, X0
	089 Move X2, [X8]
	090 Call Predicate`1<Object>..ctor, X0, X1, X2
	091 Move X8, [X24]
	092 Move X8, [X8+184]
	093 Move [X8+8], X21
	094 Move X2, [X25]
	095 Move X0, X20
	096 Move X1, X21
	097 Call List`1<Object>.RemoveAll, X0, X1
	098 Move X8, [X19+48]
	099 Compare X8, 0
	100 JumpIfEqual {176}
	101 Move W8, [X8+24]
	102 Subtract W8, W23, W8
	103 Move [X31+12], W8
	104 Move X8, 0x672000
	105 Move X8, [X8+2760]
	106 Move W1, 6
	107 Move X0, [X8]
	108 Call 0x1C17D6C
	109 Move X20, X0
	110 Move X0, X19
	111 Move X1, X31
	112 Call Object.get_name, X0
	113 Compare X20, 0
	114 JumpIfEqual {176}
	115 Move W8, [X20+24]
	116 Compare W8, 0
	117 JumpIfEqual {175}
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X20+32], X0
	120 Move X8, 0x676000
	121 Move X8, [X8+2344]
	122 Add X0, X31, 12
	123 Move X1, X31
	124 Move X8, [X8]
	125 Move [X20+40], X8
	126 Call Int32.ToString, X0
	127 Move W8, [X20+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X20+48], X0
	131 Move X9, 0x6D6000
	132 Move X9, [X9+264]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X9, [X9]
	135 Move [X20+56], X9
	136 Move W9, [X31+12]
	137 Move X10, 0x69B000
	138 Move X11, 0x672000
	139 Move X10, [X10+3264]
	140 Move X11, [X11+2440]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSEL not yet implemented."
	143 Move X9, [X9]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X20+64], X9
	146 Move X8, 0x6D6000
	147 Move X8, [X8+256]
	148 Move X19, 0x672000
	149 Move X0, X20
	150 Move X1, X31
	151 Move X8, [X8]
	152 Move X19, [X19+2600]
	153 Move [X20+72], X8
	154 Call String.Concat, X0
	155 Move X8, [X19]
	156 Move X19, X0
	157 Move W9, [X8+224]
	158 Compare W9, 0
	159 JumpIfNotEqual {162}
	160 Move X0, X8
	161 Call 0x1C17DFC
	162 Move X0, X19
	163 Move X1, X31
	164 Call Debug.LogWarning, X0
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X30, [X31+16]
	172 Move X25, [X31+24]
	173 Add X31, X31, 80
	174 Return 
	175 Call 0x1C17F28
	176 Call 0x1C17F20

Method: System.Boolean get_clearDepth()

Disassembly:
	0x03A82C00 MOV X22, X0
	0x03A82C04 BL 0x3A544AC

ISIL:
	001 Move W0, [X0+90]
	002 Return X0

Method: System.Boolean get_requiresDepthTexture()

Disassembly:
	0x03A82C08 STR X22, [X19 + 0x300]
	0x03A82C0C LDR X0, [X25]
	0x03A82C10 LDR W8, [X0 + 0xE0]
	0x03A82C14 CBNZ W8, 0x3A82C1C
	0x03A82C18 BL 0x1C16DFC
	0x03A82C1C MOVZ W8, 0x101
	0x03A82C20 STRH W8, [X19 + 0x1A6]
	0x03A82C24 LDR X0, [X24]
	0x03A82C28 LDR W8, [X0 + 0xE0]
	0x03A82C2C CBNZ W8, 0x3A82C34
	0x03A82C30 BL 0x1C16DFC
	0x03A82C34 ADRP X22, 0x960000
	0x03A82C38 LDRB W8, [X22 + 0x30A]
	0x03A82C3C CBNZ W8, 0x3A82C54
	0x03A82C40 ADRP X0, 0x6D4000
	0x03A82C44 LDR X0, [X0 + 0xEF8]
	0x03A82C48 BL 0x1C16CF4
	0x03A82C4C MOVZ W8, 0x1
	0x03A82C50 STRB W8, [X22 + 0x30A]
	0x03A82C54 LDR X0, [X24]
	0x03A82C58 ADRP X26, 0x6D5000
	0x03A82C5C ADRP X25, 0x6D4000
	0x03A82C60 ADRP X28, 0x6D4000
	0x03A82C64 ADRP X27, 0x6D5000
	0x03A82C68 LDR X26, [X26 + 0x180]
	0x03A82C6C LDR X25, [X25 + 0x8D0]
	0x03A82C70 LDR W8, [X0 + 0xE0]
	0x03A82C74 LDR X28, [X28 + 0x8C8]
	0x03A82C78 LDR X27, [X27 + 0x1B0]
	0x03A82C7C CBNZ W8, 0x3A82C88
	0x03A82C80 BL 0x1C16DFC
	0x03A82C84 LDR X0, [X24]
	0x03A82C88 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x961000
	005 Move W8, [X20+808]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x69B000
	012 Move X0, [X0+2216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+808], W8
	016 Move W8, [X19+36]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, 0x69B000
	019 Move X8, [X8+2216]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call UniversalRenderPipeline.get_asset
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move W8, [X0+76]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void set_requiresDepthTexture(System.Boolean value)

Disassembly:
	0x03A82C8C LDR X22, [X19 + 0x300]
	0x03A82C90 LDRB W8, [X8 + 0x8]
	0x03A82C94 EOR W8, W8, 0x1
	0x03A82C98 STRB W8, [X19 + 0x1A7]
	0x03A82C9C LDR W8, [X20 + 0x74]
	0x03A82CA0 CMP W8, 0x2
	0x03A82CA4 CSET W23, EQ

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 And W8, W1, 1
	005 Move [X0+36], W8
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Boolean get_requiresColorTexture()

Disassembly:
	0x03A82CA8 STRB W23, [X19 + 0x1A8]
	0x03A82CAC LDR X0, [X26]
	0x03A82CB0 ADRP X26, 0x6D5000
	0x03A82CB4 LDR X26, [X26 + 0x160]
	0x03A82CB8 BL 0x1C16F10
	0x03A82CBC MOV X1, X22
	0x03A82CC0 MOV X2, X23
	0x03A82CC4 MOV X3, X31
	0x03A82CC8 MOV X24, X0
	0x03A82CCC BL 0x3AA50C0
	0x03A82CD0 STR X24, [X19 + 0x2D0]
	0x03A82CD4 LDUR V0, [X20 + 0x74]
	0x03A82CD8 STR D0, [X19 + 0x2E0]
	0x03A82CDC LDR W8, [X20 + 0x7C]
	0x03A82CE0 STRB W31, [X19 + 0x2EC]
	0x03A82CE4 STR W8, [X19 + 0x2E8]
	0x03A82CE8 LDR X0, [X25]
	0x03A82CEC BL 0x1C16F10
	0x03A82CF0 MOVZ W1, 0x32
	0x03A82CF4 MOV X2, X31
	0x03A82CF8 MOV X22, X0
	0x03A82CFC BL 0x3AB38D8
	0x03A82D00 STR X22, [X19 + 0x1D0]
	0x03A82D04 LDR X0, [X28]
	0x03A82D08 BL 0x1C16F10
	0x03A82D0C MOVZ W1, 0x32
	0x03A82D10 MOV X2, X31
	0x03A82D14 MOV X22, X0
	0x03A82D18 BL 0x3AA0D50
	0x03A82D1C STR X22, [X19 + 0x1D8]
	0x03A82D20 LDR X0, [X27]
	0x03A82D24 BL 0x1C16F10
	0x03A82D28 MOVZ W1, 0xFA

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x961000
	005 Move W8, [X20+809]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x69B000
	012 Move X0, [X0+2216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+809], W8
	016 Move W8, [X19+40]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, 0x69B000
	019 Move X8, [X8+2216]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call UniversalRenderPipeline.get_asset
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move W8, [X0+77]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void set_requiresColorTexture(System.Boolean value)

Disassembly:
	0x03A82D2C MOV X2, X31
	0x03A82D30 MOV X22, X0
	0x03A82D34 BL 0x3A67298
	0x03A82D38 STR X22, [X19 + 0x250]
	0x03A82D3C ADRP X8, 0x6D4000
	0x03A82D40 LDR X22, [X19 + 0x320]
	0x03A82D44 LDR X8, [X8 + 0xA88]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 And W8, W1, 1
	005 Move [X0+40], W8
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.ScriptableRenderer get_scriptableRenderer()

Disassembly:
	0x03A826F0 STP X20, X19, [X31 + 0x100]
	0x03A826F4 ADRP X22, 0x960000
	0x03A826F8 ADRP X21, 0x6D5000
	0x03A826FC ADRP X25, 0x6D2000
	0x03A82700 LDRB W8, [X22 + 0x338]
	0x03A82704 LDR X21, [X21 + 0x138]
	0x03A82708 LDR X25, [X25 + 0x8C8]
	0x03A8270C MOV X20, X1
	0x03A82710 MOV X19, X0
	0x03A82714 TBNZ X8, 0x0, 0x3A82924
	0x03A82718 ADRP X0, 0x6D4000
	0x03A8271C LDR X0, [X0 + 0x8C8]
	0x03A82720 BL 0x1C16CF4
	0x03A82724 ADRP X0, 0x6D4000
	0x03A82728 LDR X0, [X0 + 0x3A0]
	0x03A8272C BL 0x1C16CF4
	0x03A82730 ADRP X0, 0x6D5000
	0x03A82734 LDR X0, [X0 + 0x140]
	0x03A82738 BL 0x1C16CF4
	0x03A8273C ADRP X0, 0x6D4000
	0x03A82740 LDR X0, [X0 + 0xA88]
	0x03A82744 BL 0x1C16CF4
	0x03A82748 ADRP X0, 0x699000
	0x03A8274C LDR X0, [X0 + 0x8F8]
	0x03A82750 BL 0x1C16CF4
	0x03A82754 ADRP X0, 0x6D5000
	0x03A82758 LDR X0, [X0 + 0x148]
	0x03A8275C BL 0x1C16CF4
	0x03A82760 ADRP X0, 0x6D5000
	0x03A82764 LDR X0, [X0 + 0x150]
	0x03A82768 BL 0x1C16CF4
	0x03A8276C ADRP X0, 0x6D5000
	0x03A82770 LDR X0, [X0 + 0x158]
	0x03A82774 BL 0x1C16CF4
	0x03A82778 ADRP X0, 0x6D5000
	0x03A8277C LDR X0, [X0 + 0x160]
	0x03A82780 BL 0x1C16CF4
	0x03A82784 ADRP X0, 0x6D5000
	0x03A82788 LDR X0, [X0 + 0x168]
	0x03A8278C BL 0x1C16CF4
	0x03A82790 ADRP X0, 0x6D5000
	0x03A82794 LDR X0, [X0 + 0x170]
	0x03A82798 BL 0x1C16CF4
	0x03A8279C ADRP X0, 0x6D2000
	0x03A827A0 LDR X0, [X0 + 0x8D0]
	0x03A827A4 BL 0x1C16CF4
	0x03A827A8 ADRP X0, 0x6D5000
	0x03A827AC LDR X0, [X0 + 0x178]
	0x03A827B0 BL 0x1C16CF4
	0x03A827B4 ADRP X0, 0x6D2000
	0x03A827B8 LDR X0, [X0 + 0x8D8]
	0x03A827BC BL 0x1C16CF4
	0x03A827C0 ADRP X0, 0x6D5000
	0x03A827C4 LDR X0, [X0 + 0x180]
	0x03A827C8 BL 0x1C16CF4
	0x03A827CC ADRP X0, 0x6D5000
	0x03A827D0 LDR X0, [X0 + 0x188]
	0x03A827D4 BL 0x1C16CF4
	0x03A827D8 ADRP X0, 0x6D5000
	0x03A827DC LDR X0, [X0 + 0x190]
	0x03A827E0 BL 0x1C16CF4
	0x03A827E4 ADRP X0, 0x6D3000
	0x03A827E8 LDR X0, [X0 + 0xCC0]
	0x03A827EC BL 0x1C16CF4
	0x03A827F0 ADRP X0, 0x6D5000
	0x03A827F4 LDR X0, [X0 + 0x198]
	0x03A827F8 BL 0x1C16CF4
	0x03A827FC ADRP X0, 0x6D0000
	0x03A82800 LDR X0, [X0 + 0xD98]
	0x03A82804 BL 0x1C16CF4
	0x03A82808 ADRP X0, 0x6D4000
	0x03A8280C LDR X0, [X0 + 0x180]
	0x03A82810 BL 0x1C16CF4
	0x03A82814 ADRP X0, 0x6D4000
	0x03A82818 LDR X0, [X0 + 0x8D0]
	0x03A8281C BL 0x1C16CF4
	0x03A82820 ADRP X0, 0x6D4000
	0x03A82824 LDR X0, [X0 + 0x4E0]
	0x03A82828 BL 0x1C16CF4
	0x03A8282C ADRP X0, 0x671000
	0x03A82830 LDR X0, [X0 + 0x598]
	0x03A82834 BL 0x1C16CF4
	0x03A82838 ADRP X0, 0x6D4000
	0x03A8283C LDR X0, [X0 + 0xEF8]
	0x03A82840 BL 0x1C16CF4
	0x03A82844 ADRP X0, 0x6D5000
	0x03A82848 LDR X0, [X0 + 0x138]
	0x03A8284C BL 0x1C16CF4
	0x03A82850 ADRP X0, 0x69A000
	0x03A82854 LDR X0, [X0 + 0xD28]
	0x03A82858 BL 0x1C16CF4
	0x03A8285C ADRP X0, 0x6D2000
	0x03A82860 LDR X0, [X0 + 0x8E8]
	0x03A82864 BL 0x1C16CF4
	0x03A82868 ADRP X0, 0x6D2000
	0x03A8286C LDR X0, [X0 + 0x8F0]
	0x03A82870 BL 0x1C16CF4
	0x03A82874 ADRP X0, 0x6D2000
	0x03A82878 LDR X0, [X0 + 0x10]
	0x03A8287C BL 0x1C16CF4
	0x03A82880 ADRP X0, 0x6D2000
	0x03A82884 LDR X0, [X0 + 0x8C8]
	0x03A82888 BL 0x1C16CF4
	0x03A8288C ADRP X0, 0x6D5000
	0x03A82890 LDR X0, [X0 + 0x1A0]
	0x03A82894 BL 0x1C16CF4
	0x03A82898 ADRP X0, 0x6D4000
	0x03A8289C LDR X0, [X0 + 0x8C0]
	0x03A828A0 BL 0x1C16CF4
	0x03A828A4 ADRP X0, 0x6D5000
	0x03A828A8 LDR X0, [X0 + 0x1A8]
	0x03A828AC BL 0x1C16CF4
	0x03A828B0 ADRP X0, 0x69A000
	0x03A828B4 LDR X0, [X0 + 0x8A8]
	0x03A828B8 BL 0x1C16CF4
	0x03A828BC ADRP X0, 0x6D5000
	0x03A828C0 LDR X0, [X0 + 0x1B0]
	0x03A828C4 BL 0x1C16CF4
	0x03A828C8 ADRP X0, 0x6D5000
	0x03A828CC LDR X0, [X0 + 0x1B8]
	0x03A828D0 BL 0x1C16CF4
	0x03A828D4 ADRP X0, 0x6CE000
	0x03A828D8 LDR X0, [X0 + 0x500]
	0x03A828DC BL 0x1C16CF4
	0x03A828E0 ADRP X0, 0x6D5000
	0x03A828E4 LDR X0, [X0 + 0x1C0]
	0x03A828E8 BL 0x1C16CF4
	0x03A828EC ADRP X0, 0x6D2000
	0x03A828F0 LDR X0, [X0 + 0x90]
	0x03A828F4 BL 0x1C16CF4
	0x03A828F8 ADRP X0, 0x6D2000
	0x03A828FC LDR X0, [X0 + 0x900]
	0x03A82900 BL 0x1C16CF4
	0x03A82904 ADRP X0, 0x6D2000
	0x03A82908 LDR X0, [X0 + 0x98]
	0x03A8290C BL 0x1C16CF4
	0x03A82910 ADRP X0, 0x6D5000
	0x03A82914 LDR X0, [X0 + 0x1C8]
	0x03A82918 BL 0x1C16CF4
	0x03A8291C MOVZ W8, 0x1
	0x03A82920 STRB W8, [X22 + 0x338]
	0x03A82924 ADRP X24, 0x6D4000
	0x03A82928 LDR X24, [X24 + 0xEF8]
	0x03A8292C LDR X0, [X21]
	0x03A82930 STP X31, X31, [X31 + 0x90]
	0x03A82934 STR W31, [X31 + 0xA8]
	0x03A82938 STR X31, [X31 + 0xA0]
	0x03A8293C STP X31, X31, [X31 + 0x80]
	0x03A82940 BL 0x1C16F10
	0x03A82944 MOV X1, X31
	0x03A82948 MOV X21, X0
	0x03A8294C BL 0x3A88AD8
	0x03A82950 STR X21, [X19 + 0x390]
	0x03A82954 LDR X0, [X25]
	0x03A82958 LDR W8, [X0 + 0xE0]
	0x03A8295C CBNZ W8, 0x3A82964
	0x03A82960 BL 0x1C16DFC
	0x03A82964 ADRP X22, 0x6D5000
	0x03A82968 ADRP X21, 0x6D5000
	0x03A8296C LDR X22, [X22 + 0x188]
	0x03A82970 LDR X21, [X21 + 0x1B8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x961000
	007 Move X19, 0x69B000
	008 Move W8, [X21+810]
	009 Move X19, [X19+2216]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x672000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x672000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0x69B000
	022 Move X0, [X0+2216]
	023 Call 0x1C17CF4
	024 Move X0, 0x69E000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move X0, 0x6D6000
	028 Move X0, [X0+200]
	029 Call 0x1C17CF4
	030 Move X0, 0x6D6000
	031 Move X0, [X0+208]
	032 Call 0x1C17CF4
	033 Move X0, 0x6D6000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+810], W8
	038 Move X0, [X19]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X31
	044 Call UniversalRenderPipeline.get_asset
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move X0, [X19]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call UniversalRenderPipeline.get_asset
	054 Compare X0, 0
	055 JumpIfEqual {180}
	056 Add X22, X20, 56
	057 Move W1, [X22]
	058 Move X2, X31
	059 Call UniversalRenderPipelineAsset.ValidateRendererData, X0, X1
	060 Move X8, [X19]
	061 Move W19, W0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call UniversalRenderPipeline.get_asset
	069 Move TEMP, X19
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {82}
	073 Compare X0, 0
	074 JumpIfEqual {180}
	075 Move W1, [X22]
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return X0
	082 Compare X0, 0
	083 JumpIfEqual {180}
	084 Move X8, 0x672000
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move X8, [X8+2760]
	087 Move W1, 7
	088 Move X0, [X8]
	089 Call 0x1C17D6C
	090 Compare X0, 0
	091 JumpIfEqual {180}
	092 Move W8, [X0+24]
	093 Move X21, X0
	094 Compare W8, 0
	095 JumpIfEqual {181}
	096 Move X8, 0x6D6000
	097 Move X8, [X8+208]
	098 Move X0, X22
	099 Move X1, X31
	100 Move X8, [X8]
	101 Move [X21+32], X8
	102 Call Int32.ToString, X0
	103 Move W8, [X21+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X21+40], X0
	107 Move X8, 0x6D6000
	108 Move X8, [X8+200]
	109 Move X0, X20
	110 Move X8, [X8]
	111 Move [X21+48], X8
	112 Call UniversalAdditionalCameraData.get_camera, X0
	113 Compare X0, 0
	114 JumpIfEqual {180}
	115 Move X1, X31
	116 Call Object.get_name, X0
	117 Move W8, [X21+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X21+56], X0
	121 Move X8, 0x6D6000
	122 Move X8, [X8+216]
	123 Move X0, X31
	124 Move X8, [X8]
	125 Move [X21+64], X8
	126 Call UniversalRenderPipeline.get_asset
	127 Compare X0, 0
	128 JumpIfEqual {180}
	129 Move X8, [X0+64]
	130 Compare X8, 0
	131 JumpIfEqual {180}
	132 Move W9, [X8+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X8, X19
	135 Move X0, [X8+32]
	136 Compare X0, 0
	137 JumpIfEqual {180}
	138 Move X1, X31
	139 Call Object.get_name, X0
	140 Move W8, [X21+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X21+72], X0
	144 Move X8, 0x69E000
	145 Move X8, [X8+712]
	146 Move X0, X21
	147 Move X1, X31
	148 Move X8, [X8]
	149 Move [X21+80], X8
	150 Call String.Concat, X0
	151 Move X20, X0
	152 Move X0, X31
	153 Call UniversalRenderPipeline.get_asset
	154 Move X8, 0x672000
	155 Move X8, [X8+2600]
	156 Move X21, X0
	157 Move X8, [X8]
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X0, X20
	164 Move X1, X21
	165 Move X2, X31
	166 Call Debug.LogWarning, X0, X1
	167 Move X0, X31
	168 Call UniversalRenderPipeline.get_asset
	169 Compare X0, 0
	170 JumpIfEqual {180}
	171 Move W1, W19
	172 Move X20, [X31+32]
	173 Move X19, [X31+40]
	174 Move X22, [X31+16]
	175 Move X21, [X31+24]
	176 Move X2, X31
	177 Move X30, [X31+48]
	178 Call UniversalRenderPipelineAsset.GetRenderer, X0, X1
	179 Return X0
	180 Call 0x1C17F20
	181 Call 0x1C17F28

Method: System.Void SetRenderer(System.Int32 index)

Disassembly:
	0x03A82D48 LDR X0, [X8]
	0x03A82D4C BL 0x1C16F10

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: UnityEngine.LayerMask get_volumeLayerMask()

Disassembly:
	0x03A82D50 MOVZ W1, 0x3EA
	0x03A82D54 MOV X2, X22

ISIL:
	001 Move W0, [X0+60]
	002 Return X0

Method: System.Void set_volumeLayerMask(UnityEngine.LayerMask value)

Disassembly:
	0x03A82D58 MOV W3, W31
	0x03A82D5C MOV W4, W31

ISIL:
	001 Move [X0+60], W1
	002 Return 

Method: UnityEngine.Transform get_volumeTrigger()

Disassembly:
	0x03A82D60 MOV W5, W31
	0x03A82D64 MOV X6, X31

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_volumeTrigger(UnityEngine.Transform value)

Disassembly:
	0x03A82D68 MOV X23, X0
	0x03A82D6C BL 0x3AAB90C

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: UnityEngine.Rendering.Universal.VolumeFrameworkUpdateMode get_volumeFrameworkUpdateMode()

Disassembly:
	0x03A82D70 STR X23, [X19 + 0x258]
	0x03A82D74 ADRP X8, 0x69A000

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_volumeFrameworkUpdateMode(UnityEngine.Rendering.Universal.VolumeFrameworkUpdateMode value)

Disassembly:
	0x03A82D78 LDR X8, [X8 + 0xD28]
	0x03A82D7C LDR X0, [X8]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Boolean get_requiresVolumeFrameworkUpdate()

Disassembly:
	0x03A81ACC LDR X8, [X19 + 0x30]
	0x03A81AD0 CBZ X8, 0x3A81BFC
	0x03A81AD4 LDR W8, [X8 + 0x18]
	0x03A81AD8 SUBS W8, W23, W8
	0x03A81ADC STR W8, [X31 + 0xC]
	0x03A81AE0 B.EQ 0x3A81BE0
	0x03A81AE4 ADRP X8, 0x672000
	0x03A81AE8 LDR X8, [X8 + 0xAC8]
	0x03A81AEC MOVZ W1, 0x6
	0x03A81AF0 LDR X0, [X8]
	0x03A81AF4 BL 0x1C16D6C
	0x03A81AF8 MOV X20, X0
	0x03A81AFC MOV X0, X19
	0x03A81B00 MOV X1, X31
	0x03A81B04 BL 0x3C389D4
	0x03A81B08 CBZ X20, 0x3A81BFC
	0x03A81B0C LDR W8, [X20 + 0x18]
	0x03A81B10 CBZ W8, 0x3A81BF8
	0x03A81B14 CMP W8, 0x1
	0x03A81B18 STR X0, [X20 + 0x20]
	0x03A81B1C B.EQ 0x3A81BF8
	0x03A81B20 ADRP X8, 0x676000
	0x03A81B24 LDR X8, [X8 + 0x928]
	0x03A81B28 ADD X0, X31, 0xC
	0x03A81B2C MOV X1, X31
	0x03A81B30 LDR X8, [X8]
	0x03A81B34 STR X8, [X20 + 0x28]
	0x03A81B38 BL 0x337B6E0
	0x03A81B3C LDR W8, [X20 + 0x18]
	0x03A81B40 CMP W8, 0x2
	0x03A81B44 B.LS 0x3A81BF8
	0x03A81B48 CMP W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x962000
	005 Move W8, [X20+811]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x69C000
	012 Move X0, [X0+2216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+811], W8
	016 Move W8, [X19+72]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, 0x69C000
	019 Move X8, [X8+2216]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call UniversalRenderPipeline.get_asset
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move W8, [X0+284]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: UnityEngine.Rendering.VolumeStack get_volumeStack()

Disassembly:
	0x03A82D80 LDR W8, [X0 + 0xE0]
	0x03A82D84 CBNZ W8, 0x3A82D8C

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_volumeStack(UnityEngine.Rendering.VolumeStack value)

Disassembly:
	0x03A81FC4 FMOV S3, 1
	0x03A81FC8 FMOV S4, 1
	0x03A81FCC FMOV S5, 1
	0x03A81FD0 FMOV S6, 1
	0x03A81FD4 MOVZ W1, 0x1
	0x03A81FD8 MOV X2, X31
	0x03A81FDC LDR X30, [X31], #0x30
	0x03A81FE0 B 0x3C0CEE8
	0x03A81FE4 LDP X20, X19, [X31 + 0x20]
	0x03A81FE8 LDP X22, X21, [X31 + 0x10]
	0x03A81FEC LDR X30, [X31], #0x30
	0x03A81FF0 RET
	0x03A81FF4 BL 0x1C16F20
	0x03A81FF8 STP X30, X19, [X31 - 0x10]!
	0x03A81FFC MOV X19, X0
	0x03A82000 BL 0x3A81480
	0x03A82004 CBZ X0, 0x3A82054
	0x03A82008 MOV X1, X31
	0x03A8200C BL 0x3C03AD4
	0x03A82010 CMP W0, 0x2
	0x03A82014 B.EQ 0x3A82030
	0x03A82018 MOV X0, X19
	0x03A8201C BL 0x3A816F0
	0x03A82020 CBZ X0, 0x3A82030
	0x03A82024 LDR X8, [X0]
	0x03A82028 LDP X9, X1, [X8 + 0x1C8]
	0x03A8202C BLR X9
	0x03A82030 MOV X1, X19
	0x03A82034 BL 0x3A80F3C
	0x03A82038 LDR X0, [X19 + 0x98]
	0x03A8203C CBZ X0, 0x3A8204C
	0x03A82040 MOV X1, X31
	0x03A82044 LDP X30, X19, [X31], #0x10
	0x03A82048 B 0x3A78710
	0x03A8204C LDP X30, X19, [X31], #0x10
	0x03A82050 RET
	0x03A82054 BL 0x1C16F20
	0x03A82058 STR X30, [X31 - 0x20]!
	0x03A8205C STP X20, X19, [X31 + 0x10]
	0x03A82060 ADRP X19, 0x960000
	0x03A82064 ADRP X20, 0x6D5000
	0x03A82068 LDRB W8, [X19 + 0x330]
	0x03A8206C LDR X20, [X20 + 0xF8]
	0x03A82070 TBNZ X8, 0x0, 0x3A82088
	0x03A82074 ADRP X0, 0x6D5000
	0x03A82078 LDR X0, [X0 + 0xF8]
	0x03A8207C BL 0x1C16CF4
	0x03A82080 MOVZ W8, 0x1
	0x03A82084 STRB W8, [X19 + 0x330]
	0x03A82088 LDR X0, [X20]
	0x03A8208C BL 0x1C16F10
	0x03A82090 MOV X1, X31
	0x03A82094 MOV X19, X0
	0x03A82098 BL 0x33BDD8C
	0x03A8209C LDR X8, [X20]
	0x03A820A0 LDR X8, [X8 + 0xB8]
	0x03A820A4 STR X19, [X8]
	0x03A820A8 LDP X20, X19, [X31 + 0x10]
	0x03A820AC LDR X30, [X31], #0x20
	0x03A820B0 RET
	0x03A820B4 MOV X1, X31
	0x03A820B8 B 0x33BDD8C
	0x03A820BC STP X30, X21, [X31 - 0x20]!
	0x03A820C0 STP X20, X19, [X31 + 0x10]
	0x03A820C4 ADRP X20, 0x960000
	0x03A820C8 ADRP X21, 0x671000
	0x03A820CC LDRB W8, [X20 + 0x331]
	0x03A820D0 LDR X21, [X21 + 0x598]
	0x03A820D4 MOV X19, X1
	0x03A820D8 TBNZ X8, 0x0, 0x3A820F0
	0x03A820DC ADRP X0, 0x671000
	0x03A820E0 LDR X0, [X0 + 0x598]
	0x03A820E4 BL 0x1C16CF4
	0x03A820E8 MOVZ W8, 0x1
	0x03A820EC STRB W8, [X20 + 0x331]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x962000
	007 Move W8, [X21+812]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x6D7000
	015 Move X0, [X0+112]
	016 Call 0x1C17CF4
	017 Move X0, 0x6D7000
	018 Move X0, [X0+120]
	019 Call 0x1C17CF4
	020 Move X0, 0x6D7000
	021 Move X0, [X0+128]
	022 Call 0x1C17CF4
	023 Move X0, 0x6D6000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+812], W8
	028 Compare X19, 0
	029 JumpIfEqual {37}
	030 Move [X20+192], X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 
	037 Move X8, [X20+192]
	038 Compare X8, 0
	039 JumpIfEqual {30}
	040 Move X22, 0x6D6000
	041 Move X22, [X22+80]
	042 Move X8, [X22]
	043 Move X8, [X8+184]
	044 Move X21, [X8+8]
	045 Compare X21, 0
	046 JumpIfNotEqual {62}
	047 Move X8, 0x6D6000
	048 Move X8, [X8+128]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x6D6000
	052 Move X8, [X8+120]
	053 Move W1, 4
	054 Move X21, X0
	055 Move X2, [X8]
	056 Call List`1<Object>..ctor, X0, X1
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move [X8+8], X21
	060 Compare X21, 0
	061 JumpIfEqual {84}
	062 Move X9, 0x6D6000
	063 Move X1, [X20+192]
	064 Move X9, [X9+112]
	065 Move W10, [X21+28]
	066 Move X8, [X21+16]
	067 Move X9, [X9]
	068 Add W10, W10, 1
	069 Move [X21+28], W10
	070 Compare X8, 0
	071 JumpIfEqual {84}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Move W11, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W9, W10, 1
	076 Add X8, X8, X10
	077 Move [X21+24], W9
	078 Move [X8+32], X1
	079 Move X8, [X9+32]
	080 Move X0, X21
	081 Move X8, [X8+192]
	082 Move X2, [X8+112]
	083 Call List`1<Object>.AddWithResize, X0, X1
	084 Call 0x1C17F20

Method: System.Void GetOrCreateVolumeStack()

Disassembly:
	0x03A81C24 LDR X0, [X0 + 0x8A8]
	0x03A81C28 BL 0x1C16CF4
	0x03A81C2C MOVZ W8, 0x1
	0x03A81C30 STRB W8, [X20 + 0x328]
	0x03A81C34 LDR W8, [X19 + 0x24]
	0x03A81C38 CMP W8, 0x2
	0x03A81C3C B.NE 0x3A81C74
	0x03A81C40 ADRP X8, 0x69B000
	0x03A81C44 LDR X8, [X8 + 0x8A8]
	0x03A81C48 LDR X0, [X8]
	0x03A81C4C LDR W8, [X0 + 0xE0]
	0x03A81C50 CBNZ W8, 0x3A81C58
	0x03A81C54 BL 0x1C16DFC
	0x03A81C58 MOV X0, X31
	0x03A81C5C BL 0x3A8AB60
	0x03A81C60 CBZ X0, 0x3A81C88
	0x03A81C64 LDRB W8, [X0 + 0x4C]
	0x03A81C68 CMP W8, 0x0
	0x03A81C6C CSET W0, NE
	0x03A81C70 B 0x3A81C7C
	0x03A81C74 CMP W8, 0x1
	0x03A81C78 CSET W0, EQ
	0x03A81C7C LDP X20, X19, [X31 + 0x10]
	0x03A81C80 LDR X30, [X31], #0x20
	0x03A81C84 RET
	0x03A81C88 BL 0x1C16F20
	0x03A81C8C STR X30, [X31 - 0x10]!
	0x03A81C90 CBZ X0, 0x3A81CA4
	0x03A81C94 AND W8, W1, 0x1
	0x03A81C98 STR W8, [X0 + 0x24]
	0x03A81C9C LDR X30, [X31], #0x10
	0x03A81CA0 RET
	0x03A81CA4 BL 0x1C16F20
	0x03A81CA8 STR X30, [X31 - 0x20]!
	0x03A81CAC STP X20, X19, [X31 + 0x10]
	0x03A81CB0 ADRP X20, 0x961000
	0x03A81CB4 LDRB W8, [X20 + 0x329]
	0x03A81CB8 MOV X19, X0
	0x03A81CBC TBNZ X8, 0x0, 0x3A81CD4
	0x03A81CC0 ADRP X0, 0x69B000
	0x03A81CC4 LDR X0, [X0 + 0x8A8]
	0x03A81CC8 BL 0x1C16CF4
	0x03A81CCC MOVZ W8, 0x1
	0x03A81CD0 STRB W8, [X20 + 0x329]
	0x03A81CD4 LDR W8, [X19 + 0x28]
	0x03A81CD8 CMP W8, 0x2
	0x03A81CDC B.NE 0x3A81D14
	0x03A81CE0 ADRP X8, 0x69B000
	0x03A81CE4 LDR X8, [X8 + 0x8A8]
	0x03A81CE8 LDR X0, [X8]
	0x03A81CEC LDR W8, [X0 + 0xE0]
	0x03A81CF0 CBNZ W8, 0x3A81CF8
	0x03A81CF4 BL 0x1C16DFC
	0x03A81CF8 MOV X0, X31
	0x03A81CFC BL 0x3A8AB60
	0x03A81D00 CBZ X0, 0x3A81D28
	0x03A81D04 LDRB W8, [X0 + 0x4D]
	0x03A81D08 CMP W8, 0x0
	0x03A81D0C CSET W0, NE
	0x03A81D10 B 0x3A81D1C
	0x03A81D14 CMP W8, 0x1
	0x03A81D18 CSET W0, EQ
	0x03A81D1C LDP X20, X19, [X31 + 0x10]
	0x03A81D20 LDR X30, [X31], #0x20
	0x03A81D24 RET
	0x03A81D28 BL 0x1C16F20
	0x03A81D2C STR X30, [X31 - 0x10]!
	0x03A81D30 CBZ X0, 0x3A81D44
	0x03A81D34 AND W8, W1, 0x1
	0x03A81D38 STR W8, [X0 + 0x28]
	0x03A81D3C LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x962000
	006 Move X21, 0x6D7000
	007 Move W8, [X20+813]
	008 Move X21, [X21+80]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x6D7000
	015 Move X0, [X0+88]
	016 Call 0x1C17CF4
	017 Move X0, 0x6D7000
	018 Move X0, [X0+96]
	019 Call 0x1C17CF4
	020 Move X0, 0x6D7000
	021 Move X0, [X0+104]
	022 Call 0x1C17CF4
	023 Move X0, 0x6D7000
	024 Move X0, [X0+80]
	025 Call 0x1C17CF4
	026 Move X0, 0x69D000
	027 Move X0, [X0+4032]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+813], W8
	031 Move X8, [X21]
	032 Move X8, [X8+184]
	033 Move X0, [X8+8]
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move W8, [X0+24]
	037 Subtract W20, W8, 1
	038 Move X8, 0x6D7000
	039 Move X8, [X8+104]
	040 Move W1, W20
	041 Move X2, [X8]
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move X1, X0
	044 Move X0, X19
	045 Call UniversalAdditionalCameraData.set_volumeStack, X0, X1
	046 Move X8, [X21]
	047 Move X8, [X8+184]
	048 Move X0, [X8+8]
	049 Compare X0, 0
	050 JumpIfEqual {85}
	051 Move X8, 0x6D7000
	052 Move X8, [X8+88]
	053 Move W1, W20
	054 Move X2, [X8]
	055 Call List`1<Object>.RemoveAt, X0, X1
	056 Move X8, [X19+192]
	057 Compare X8, 0
	058 JumpIfEqual {64}
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Move X8, 0x69D000
	065 Move X8, [X8+4032]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X31
	072 Call VolumeManager.get_instance
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move X1, X31
	076 Call VolumeManager.CreateStack, X0
	077 Move X1, X0
	078 Move X0, X19
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call UniversalAdditionalCameraData.set_volumeStack, X0, X1
	084 Return 
	085 Call 0x1C17F20

Method: System.Boolean get_renderPostProcessing()

Disassembly:
	0x03A82D88 BL 0x1C16DFC
	0x03A82D8C MOV X0, X31

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_renderPostProcessing(System.Boolean value)

Disassembly:
	0x03A82D90 BL 0x3C560AC
	0x03A82D94 LDR X8, [X26]
	0x03A82D98 LDR W22, [X20 + 0x5C]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+76], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.AntialiasingMode get_antialiasing()

Disassembly:
	0x03A82D9C MOV X23, X0
	0x03A82DA0 MOV X0, X8

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_antialiasing(UnityEngine.Rendering.Universal.AntialiasingMode value)

Disassembly:
	0x03A82DA4 BL 0x1C16F10
	0x03A82DA8 MOVZ W1, 0x96

ISIL:
	001 Move [X0+80], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.AntialiasingQuality get_antialiasingQuality()

Disassembly:
	0x03A82DAC MOV X2, X23
	0x03A82DB0 MOV X3, X22

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_antialiasingQuality(UnityEngine.Rendering.Universal.AntialiasingQuality value)

Disassembly:
	0x03A82DB4 MOV X4, X31
	0x03A82DB8 MOV X24, X0

ISIL:
	001 Move [X0+84], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.TemporalAA/Settings get_taaSettings()

Disassembly:
	0x03A82DBC BL 0x3AAE380
	0x03A82DC0 MOV X0, X31

ISIL:
	001 Add X0, X0, 160
	002 Return X0

Method: UnityEngine.Rendering.Universal.TaaPersistentData get_taaPersistentData()

Disassembly:
	0x03A82DC4 STR X24, [X19 + 0x1B0]
	0x03A82DC8 BL 0x3C560AC

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: UnityEngine.Rendering.Universal.MotionVectorsPersistentData get_motionVectorsPersistentData()

Disassembly:
	0x03A82DCC ADRP X8, 0x6D5000
	0x03A82DD0 LDR W22, [X20 + 0x5C]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Boolean get_resetHistory()

Disassembly:
	0x03A82DD4 LDR X8, [X8 + 0x158]
	0x03A82DD8 MOV X23, X0
	0x03A82DDC LDR X8, [X8]
	0x03A82DE0 MOV X0, X8

ISIL:
	001 Move W8, [X0+184]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void set_resetHistory(System.Boolean value)

Disassembly:
	0x03A82DE4 BL 0x1C16F10
	0x03A82DE8 MOVZ W1, 0x96
	0x03A82DEC MOV X2, X23
	0x03A82DF0 MOV X3, X22
	0x03A82DF4 MOV X4, X31
	0x03A82DF8 MOV X24, X0
	0x03A82DFC BL 0x3AAD374
	0x03A82E00 LDR W8, [X19 + 0x2E0]
	0x03A82E04 STR X24, [X19 + 0x1B8]
	0x03A82E08 ORR W9, W8, 0x2
	0x03A82E0C CMP W9, 0x2
	0x03A82E10 B.NE 0x3A82E50
	0x03A82E14 ADRP X8, 0x6D4000
	0x03A82E18 LDR X22, [X19 + 0x320]
	0x03A82E1C LDR X8, [X8 + 0xA88]
	0x03A82E20 LDR X0, [X8]
	0x03A82E24 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+184]
	004 Move X19, X0
	005 Move X0, [X0+144]
	006 And W9, W1, 1
	007 Add W8, W8, W9
	008 Move [X19+184], W8
	009 Compare X0, 0
	010 JumpIfEqual {20}
	011 Move X1, X31
	012 Call MotionVectorsPersistentData.Reset, X0
	013 Move X0, X31
	014 Call Time.get_frameCount
	015 Subtract W8, W31, W0
	016 Move [X19+188], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Boolean get_stopNaN()

Disassembly:
	0x03A82E28 MOVZ W1, 0xC8
	0x03A82E2C MOVZ W3, 0x1

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_stopNaN(System.Boolean value)

Disassembly:
	0x03A82E30 MOV X2, X22
	0x03A82E34 MOV W4, W31
	0x03A82E38 MOV W5, W31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+88], W8
	003 Return 

Method: System.Boolean get_dithering()

Disassembly:
	0x03A82E3C MOV X6, X31
	0x03A82E40 MOV X23, X0

ISIL:
	001 Move W0, [X0+89]
	002 Return X0

Method: System.Void set_dithering(System.Boolean value)

Disassembly:
	0x03A82E44 BL 0x3AAB90C
	0x03A82E48 LDR W8, [X19 + 0x2E0]
	0x03A82E4C STR X23, [X19 + 0x1C0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+89], W8
	003 Return 

Method: System.Boolean get_allowXRRendering()

Disassembly:
	0x03A82E50 CMP W8, 0x1
	0x03A82E54 B.NE 0x3A830C0

ISIL:
	001 Move W0, [X0+91]
	002 Return X0

Method: System.Void set_allowXRRendering(System.Boolean value)

Disassembly:
	0x03A82E58 ADRP X8, 0x6D5000
	0x03A82E5C LDR X23, [X19 + 0x330]
	0x03A82E60 LDR X24, [X19 + 0x300]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+91], W8
	003 Return 

Method: System.Boolean get_useScreenCoordOverride()

Disassembly:
	0x03A82E64 LDRB W25, [X19 + 0x1A4]
	0x03A82E68 LDR X8, [X8 + 0x148]

ISIL:
	001 Move W0, [X0+93]
	002 Return X0

Method: System.Void set_useScreenCoordOverride(System.Boolean value)

Disassembly:
	0x03A82E6C LDR X0, [X8]
	0x03A82E70 BL 0x1C16F10
	0x03A82E74 MOV X1, X23

ISIL:
	001 And W8, W1, 1
	002 Move [X0+93], W8
	003 Return 

Method: UnityEngine.Vector4 get_screenSizeOverride()

Disassembly:
	0x03A82E78 MOV X2, X24
	0x03A82E7C MOV W3, W25
	0x03A82E80 MOV X4, X31

ISIL:
	001 Move S0, [X0+96]
	002 Move S1, [X0+100]
	003 Move S2, [X0+104]
	004 Move S3, [X0+108]
	005 Return X0

Method: System.Void set_screenSizeOverride(UnityEngine.Vector4 value)

Disassembly:
	0x03A82E84 MOV X22, X0
	0x03A82E88 BL 0x3A9B158
	0x03A82E8C STR X22, [X19 + 0x2D8]

ISIL:
	001 Move [X0+96], S0
	002 Move [X0+104], S1
	003 Move [X0+104], S2
	004 Move [X0+112], S3
	005 Return 

Method: UnityEngine.Vector4 get_screenCoordScaleBias()

Disassembly:
	0x03A82E90 CBZ X22, 0x3A83614
	0x03A82E94 LDRB W8, [X20 + 0x80]
	0x03A82E98 STRB W8, [X22 + 0x1A]

ISIL:
	001 Move S0, [X0+112]
	002 Move S1, [X0+116]
	003 Move S2, [X0+120]
	004 Move S3, [X0+124]
	005 Return X0

Method: System.Void set_screenCoordScaleBias(UnityEngine.Vector4 value)

Disassembly:
	0x03A82E9C ADRP X8, 0x69A000
	0x03A82EA0 LDR X8, [X8 + 0xD28]
	0x03A82EA4 LDR X0, [X8]

ISIL:
	001 Move [X0+112], S0
	002 Move [X0+120], S1
	003 Move [X0+120], S2
	004 Move [X0+128], S3
	005 Return 

Method: System.Boolean get_allowHDROutput()

Disassembly:
	0x03A82EA8 LDR W8, [X0 + 0xE0]
	0x03A82EAC CBNZ W8, 0x3A82EB4

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Void set_allowHDROutput(System.Boolean value)

Disassembly:
	0x03A82EB0 BL 0x1C16DFC
	0x03A82EB4 MOV X0, X31
	0x03A82EB8 BL 0x3C560AC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+92], W8
	003 Return 

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x03A82EBC ADRP X8, 0x6D5000

ISIL:
	001 Return 

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x03A82EC0 LDR W22, [X20 + 0x5C]
	0x03A82EC4 LDR X23, [X21]
	0x03A82EC8 LDR W24, [X21 + 0x8]
	0x03A82ECC LDR W25, [X29 + 0x14]
	0x03A82ED0 LDR X26, [X19 + 0x2D8]
	0x03A82ED4 LDR X8, [X8 + 0x190]
	0x03A82ED8 MOV X27, X0
	0x03A82EDC LDR X8, [X8]

ISIL:
	001 Move V0, [X0+140]
	002 Move S1, 1
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 Move W8, [X0+136]
	005 Move W9, [X0+137]
	006 Move [X0+36], W8
	007 Move [X0+40], W9
	008 Return 

Method: System.Void OnDrawGizmos()

Disassembly:
	0x03A82EE0 MOV X0, X8
	0x03A82EE4 BL 0x1C16F10
	0x03A82EE8 MOVZ W1, 0xD2
	0x03A82EEC MOV X2, X27
	0x03A82EF0 MOV X3, X22
	0x03A82EF4 MOV X4, X23
	0x03A82EF8 MOV X5, X24
	0x03A82EFC MOV W6, W25
	0x03A82F00 MOV X7, X26
	0x03A82F04 MOV X28, X0
	0x03A82F08 STR X31, [X31]
	0x03A82F0C BL 0x3AB1C40
	0x03A82F10 STR X28, [X19 + 0x1E0]
	0x03A82F14 ADRP X8, 0x6D5000
	0x03A82F18 LDR X8, [X8 + 0x148]
	0x03A82F1C LDR X22, [X21]
	0x03A82F20 LDR W23, [X21 + 0x8]
	0x03A82F24 LDR X0, [X8]
	0x03A82F28 LDR W8, [X0 + 0xE0]
	0x03A82F2C CBNZ W8, 0x3A82F34
	0x03A82F30 BL 0x1C16DFC
	0x03A82F34 MOVZ W2, 0x60
	0x03A82F38 MOV X0, X22
	0x03A82F3C MOV X1, X23
	0x03A82F40 MOV X3, X31
	0x03A82F44 BL 0x3A9CB30
	0x03A82F48 ADRP X8, 0x6D5000
	0x03A82F4C LDR X8, [X8 + 0x1A0]
	0x03A82F50 MOV X22, X0
	0x03A82F54 MOV X24, X1
	0x03A82F58 MOVZ W1, 0x3
	0x03A82F5C LDR X0, [X8]
	0x03A82F60 BL 0x1C16D6C
	0x03A82F64 ADRP X8, 0x6D2000
	0x03A82F68 LDR X8, [X8 + 0x98]
	0x03A82F6C MOV X23, X0
	0x03A82F70 ADD X0, X31, 0x30
	0x03A82F74 MOV X2, X31
	0x03A82F78 LDR X1, [X8]
	0x03A82F7C STR W31, [X31 + 0x30]
	0x03A82F80 BL 0x3C5A49C
	0x03A82F84 CBZ X23, 0x3A83614
	0x03A82F88 LDR W8, [X23 + 0x18]
	0x03A82F8C CBZ W8, 0x3A83618
	0x03A82F90 LDR W8, [X31 + 0x30]
	0x03A82F94 ADD X0, X31, 0x78
	0x03A82F98 MOV X2, X31
	0x03A82F9C STR W8, [X23 + 0x20]
	0x03A82FA0 ADRP X8, 0x6D2000
	0x03A82FA4 LDR X8, [X8 + 0x90]
	0x03A82FA8 STR W31, [X31 + 0x78]
	0x03A82FAC LDR X1, [X8]
	0x03A82FB0 BL 0x3C5A49C
	0x03A82FB4 LDR W8, [X23 + 0x18]
	0x03A82FB8 CMP W8, 0x1
	0x03A82FBC B.LS 0x3A83618
	0x03A82FC0 LDR W8, [X31 + 0x78]
	0x03A82FC4 ADD X0, X31, 0x70
	0x03A82FC8 MOV X2, X31
	0x03A82FCC STR W8, [X23 + 0x24]
	0x03A82FD0 ADRP X8, 0x6D5000
	0x03A82FD4 LDR X8, [X8 + 0x1C0]
	0x03A82FD8 STR W31, [X31 + 0x70]
	0x03A82FDC LDR X1, [X8]
	0x03A82FE0 BL 0x3C5A49C
	0x03A82FE4 LDR W8, [X23 + 0x18]
	0x03A82FE8 CMP W8, 0x2
	0x03A82FEC B.LS 0x3A83618
	0x03A82FF0 LDR W8, [X31 + 0x70]
	0x03A82FF4 STR W8, [X23 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x961000
	007 Move X20, 0x672000
	008 Move X21, 0x6D6000
	009 Move W8, [X22+814]
	010 Move X20, [X20+2440]
	011 Move X21, [X21+272]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x6D6000
	018 Move X0, [X0+272]
	019 Call 0x1C17CF4
	020 Move X0, 0x6D6000
	021 Move X0, [X0+280]
	022 Call 0x1C17CF4
	023 Move X0, 0x672000
	024 Move X0, [X0+2440]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+814], W8
	028 Move W8, [X19+44]
	029 Move X1, X31
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X8]
	033 Move X0, X20
	034 Call String.IsNullOrEmpty, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {54}
	039 Move X0, X19
	040 Move X1, X31
	041 Call Component.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {86}
	044 Move X1, X31
	045 Call Transform.get_position, X0
	046 Move S3, 1
	047 Move S4, 1
	048 Move S5, 1
	049 Move S6, 1
	050 Move W1, 1
	051 Move X0, X20
	052 Move X2, X31
	053 Call Gizmos.DrawIcon, X0, X1, X2, X3
	054 Move W8, [X19+76]
	055 Compare W8, 0
	056 JumpIfEqual {80}
	057 Move X0, X19
	058 Move X1, X31
	059 Call Component.get_transform, X0
	060 Compare X0, 0
	061 JumpIfEqual {86}
	062 Move X19, 0x6D6000
	063 Move X19, [X19+280]
	064 Move X1, X31
	065 Call Transform.get_position, X0
	066 Move X0, [X19]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move S3, 1
	072 Move S4, 1
	073 Move S5, 1
	074 Move S6, 1
	075 Move W1, 1
	076 Move X2, X31
	077 Move X30, [X31+48]
	078 Call Gizmos.DrawIcon, X0, X1, X2, X3
	079 Return 
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03A82FF8 ADRP X8, 0x6D4000
	0x03A82FFC LDR W28, [X29 + 0x14]
	0x03A83000 LDR X25, [X19 + 0x320]
	0x03A83004 B 0x3EB1974
	0x03A83008 LDR X0, [X8]
	0x03A8300C BL 0x1C16F10
	0x03A83010 MOVZ W1, 0xD3
	0x03A83014 MOVZ W3, 0x1
	0x03A83018 MOV X2, X25
	0x03A8301C MOV W4, W31
	0x03A83020 MOV W5, W31
	0x03A83024 MOV X6, X31
	0x03A83028 MOV X26, X0
	0x03A8302C BL 0x3AAB90C
	0x03A83030 STR X26, [X19 + 0x1E8]
	0x03A83034 ADRP X8, 0x6D4000
	0x03A83038 LDR X25, [X19 + 0x2D8]
	0x03A8303C LDR X8, [X8 + 0x150]
	0x03A83040 LDR X0, [X8]
	0x03A83044 BL 0x1C16F10
	0x03A83048 MOVZ W1, 0xE6
	0x03A8304C MOV X2, X25
	0x03A83050 MOV X3, X31
	0x03A83054 MOV X26, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalAdditionalCameraData.get_camera, X0
	005 Compare X0, 0
	006 JumpIfEqual {31}
	007 Move X1, X31
	008 Call Camera.get_cameraType, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	012 Compare X0, 0
	013 JumpIfEqual {18}
	014 Move X8, [X0]
	015 Move X9, [X8+456]
	016 Move X1, [X8+464]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X1, X19
	019 Call CameraExtensions.DestroyVolumeStack, X0, X1
	020 Move X0, [X19+152]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X1, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call TaaPersistentData.DeallocateTargets, X0
	027 Return 
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A82338 LDP X30, X21, [X31], #0x20
	0x03A8233C RET
	0x03A82340 BL 0x1C16F20
	0x03A82344 LDRB W0, [X0 + 0x3C]
	0x03A82348 RET
	0x03A8234C LDRB W9, [X0 + 0x3C]
	0x03A82350 AND W8, W1, 0x1
	0x03A82354 CMP W9, W8
	0x03A82358 B.NE 0x3A82360
	0x03A8235C RET
	0x03A82360 STRB W8, [X0 + 0x3C]
	0x03A82364 B 0x3A8229C
	0x03A82368 LDR W0, [X0 + 0x40]
	0x03A8236C RET
	0x03A82370 STR W1, [X0 + 0x40]
	0x03A82374 RET
	0x03A82378 LDR W0, [X0 + 0x44]
	0x03A8237C RET
	0x03A82380 LDR W8, [X0 + 0x44]
	0x03A82384 CMP W8, W1
	0x03A82388 B.NE 0x3A82390
	0x03A8238C RET
	0x03A82390 STR W1, [X0 + 0x44]
	0x03A82394 B 0x3A8229C
	0x03A82398 LDP S0, S1, [X0 + 0x48]
	0x03A8239C RET
	0x03A823A0 STP S0, S1, [X0 + 0x48]
	0x03A823A4 RET
	0x03A823A8 LDP S0, S1, [X0 + 0x50]
	0x03A823AC RET
	0x03A823B0 STP S0, S1, [X0 + 0x50]
	0x03A823B4 RET
	0x03A823B8 LDR W0, [X0 + 0x58]
	0x03A823BC RET
	0x03A823C0 STR W1, [X0 + 0x58]
	0x03A823C4 RET
	0x03A823C8 RET
	0x03A823CC STP X30, X21, [X31 - 0x20]!
	0x03A823D0 STP X20, X19, [X31 + 0x10]
	0x03A823D4 ADRP X20, 0x960000
	0x03A823D8 LDRB W8, [X20 + 0x334]
	0x03A823DC MOV X19, X0
	0x03A823E0 TBNZ X8, 0x0, 0x3A823F8
	0x03A823E4 ADRP X0, 0x671000
	0x03A823E8 LDR X0, [X0 + 0x5A8]
	0x03A823EC BL 0x1C16CF4
	0x03A823F0 MOVZ W8, 0x1
	0x03A823F4 STRB W8, [X20 + 0x334]
	0x03A823F8 LDR W8, [X19 + 0x20]
	0x03A823FC CMP W8, 0x1
	0x03A82400 B.LE 0x3A82410
	0x03A82404 CMP W8, 0x2
	0x03A82408 B.EQ 0x3A82428
	0x03A8240C B 0x3A8248C
	0x03A82410 LDR W8, [X19 + 0x34]
	0x03A82414 LDR W9, [X19 + 0x40]
	0x03A82418 MOVZ W10, 0x2
	0x03A8241C STR W10, [X19 + 0x20]
	0x03A82420 STR W8, [X19 + 0x38]
	0x03A82424 STR W9, [X19 + 0x44]
	0x03A82428 ADRP X8, 0x671000
	0x03A8242C LDR X8, [X8 + 0x5A8]
	0x03A82430 LDR W20, [X19 + 0x58]
	0x03A82434 LDR X0, [X8]
	0x03A82438 LDR W8, [X0 + 0xE0]
	0x03A8243C CBNZ W8, 0x3A82444
	0x03A82440 BL 0x1C16DFC
	0x03A82444 ADRP X21, 0x95B000
	0x03A82448 LDRB W8, [X21 + 0x6]
	0x03A8244C ADD W20, W20, 0x1
	0x03A82450 CBNZ W8, 0x3A82474
	0x03A82454 ADRP X0, 0x6A8000
	0x03A82458 LDR X0, [X0 + 0xF00]
	0x03A8245C BL 0x1C16CF4
	0x03A82460 ADRP X0, 0x671000
	0x03A82464 LDR X0, [X0 + 0x5A8]
	0x03A82468 BL 0x1C16CF4
	0x03A8246C MOVZ W8, 0x1
	0x03A82470 STRB W8, [X21 + 0x6]
	0x03A82474 CMP W20, 0x3
	0x03A82478 MOVZ W8, 0x3
	0x03A8247C CSEL W9, W20, W8, LT

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X24, 0x961000
	010 Move X23, 0x69D000
	011 Move X20, 0x69D000
	012 Move X22, 0x6D6000
	013 Move X21, 0x6D5000
	014 Move W8, [X24+815]
	015 Move X23, [X23+80]
	016 Move X20, [X20+88]
	017 Move X22, [X22+152]
	018 Move X21, [X21+3848]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x69D000
	025 Move X0, [X0+88]
	026 Call 0x1C17CF4
	027 Move X0, 0x69D000
	028 Move X0, [X0+80]
	029 Call 0x1C17CF4
	030 Move X0, 0x6D6000
	031 Move X0, [X0+152]
	032 Call 0x1C17CF4
	033 Move X0, 0x6D5000
	034 Move X0, [X0+3848]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+815], W8
	038 Move W24, 1
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X19+32], W24
	041 Move [X19+36], D0
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X1, [X20]
	045 Move X20, X0
	046 Call List`1<Object>..ctor, X0
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W8, TEMP
	050 Move W0, 1
	051 Move X1, X31
	052 Move [X19+48], X20
	053 Move [X19+56], W8
	054 Call LayerMask.op_Implicit, X0
	055 Move W8, 2
	056 Move W9, 257
	057 Move W10, 0x40000000
	058 Move [X19+60], W0
	059 Move [X19+92], W24
	060 Move [X19+72], W8
	061 Move [X19+84], W8
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Move [X19+140], W10
	064 Move X0, [X22]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X20, X0
	068 Call MotionVectorsPersistentData..ctor, X0
	069 Move [X19+144], X20
	070 Move X0, [X21]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X20, X0
	074 Call TaaPersistentData..ctor, X0
	075 Add X8, X31, 0
	076 Move X0, X31
	077 Move [X19+152], X20
	078 Call Settings.Create
	079 Move V1, [X31]
	080 Move V0, [X31+16]
	081 Move X0, X19
	082 Move X1, X31
	083 Move [X31+32], V1
	084 Move [X31+40], V0
	085 Move [X19+160], V1
	086 Move [X19+168], V0
	087 Call MonoBehaviour..ctor, X0
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X22, [X31+96]
	091 Move X21, [X31+104]
	092 Move X24, [X31+80]
	093 Move X23, [X31+88]
	094 Move X30, [X31+64]
	095 Add X31, X31, 128
	096 Return 

