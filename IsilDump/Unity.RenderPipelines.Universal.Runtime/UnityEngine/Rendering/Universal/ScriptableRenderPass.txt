Type: UnityEngine.Rendering.Universal.ScriptableRenderPass

Method: System.Void FrameCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A449C0 STR X8, [X31 + 0x60]
	0x03A449C4 CSET W8, NE
	0x03A449C8 UBFM W2, W19, 0x1F, 0x0

ISIL:
	001 Move X8, [X0]
	002 Move X3, [X8+424]
	003 Move X2, [X8+432]
	004 CallNoReturn X3

Method: UnityEngine.Rendering.Universal.RenderPassEvent get_renderPassEvent()

Disassembly:
	0x03A449CC UBFM W5, W8, 0x1F, 0x1E
	0x03A449D0 STP V0, V1, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_renderPassEvent(UnityEngine.Rendering.Universal.RenderPassEvent value)

Disassembly:
	0x03A449D4 ADD X1, X31, 0x40
	0x03A449D8 ADD X4, X31, 0x10

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.Rendering.RenderTargetIdentifier[] get_colorAttachments()

Disassembly:
	0x03A449DC MOV X0, X20
	0x03A449E0 MOV W3, W31

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: UnityEngine.Rendering.RenderTargetIdentifier get_colorAttachment()

Disassembly:
	0x03A449E4 MOV W6, W31
	0x03A449E8 MOV W7, W19
	0x03A449EC MOV V0.16B, V11.16B
	0x03A449F0 MOV V1.16B, V10.16B
	0x03A449F4 MOV V2.16B, V9.16B
	0x03A449F8 MOV V3.16B, V8.16B
	0x03A449FC STR X9, [X31 + 0x30]
	0x03A44A00 BL 0x3A5101C
	0x03A44A04 LDP X20, X19, [X31 + 0x190]
	0x03A44A08 LDP X22, X21, [X31 + 0x180]
	0x03A44A0C LDP X24, X23, [X31 + 0x170]
	0x03A44A10 LDP X26, X25, [X31 + 0x160]
	0x03A44A14 LDP X29, X30, [X31 + 0x150]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+128]
	003 Compare X9, 0
	004 JumpIfEqual {16}
	005 Move W10, [X9+24]
	006 Compare W10, 0
	007 JumpIfEqual {17}
	008 Move X10, [X9+64]
	009 Move V1, [X9+32]
	010 Move V0, [X9+48]
	011 Move [X8+32], X10
	012 Move [X8], V1
	013 Move [X8+8], V0
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20
	017 Call 0x1C17F28

Method: UnityEngine.Rendering.RenderTargetIdentifier get_depthAttachment()

Disassembly:
	0x03A44A18 LDP D9, D8, [X31 + 0x140]
	0x03A44A1C LDP D11, D10, [X31 + 0x130]
	0x03A44A20 ADD X31, X31, 0x1A0
	0x03A44A24 RET
	0x03A44A28 BL 0x1C16F20
	0x03A44A2C BL 0x1C16F28
	0x03A44A30 STP X30, X25, [X31 - 0x40]!
	0x03A44A34 STP X24, X23, [X31 + 0x10]
	0x03A44A38 STP X22, X21, [X31 + 0x20]
	0x03A44A3C STP X20, X19, [X31 + 0x30]
	0x03A44A40 ADRP X24, 0x99E000
	0x03A44A44 ADRP X25, 0x6AF000
	0x03A44A48 LDRB W8, [X24 + 0x17C]
	0x03A44A4C LDR X25, [X25 + 0x598]
	0x03A44A50 MOV W22, W5
	0x03A44A54 MOV X23, X4
	0x03A44A58 MOV X19, X3
	0x03A44A5C MOV X20, X2
	0x03A44A60 MOV X21, X1
	0x03A44A64 TBNZ X8, 0x0, 0x3A44A88
	0x03A44A68 ADRP X0, 0x70E000
	0x03A44A6C LDR X0, [X0 + 0xE28]
	0x03A44A70 BL 0x1C16CF4
	0x03A44A74 ADRP X0, 0x6AF000
	0x03A44A78 LDR X0, [X0 + 0x598]
	0x03A44A7C BL 0x1C16CF4
	0x03A44A80 MOVZ W8, 0x1
	0x03A44A84 STRB W8, [X24 + 0x17C]
	0x03A44A88 LDR X0, [X25]
	0x03A44A8C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move W9, [X0+112]
	004 Compare W9, 0
	005 JumpIfEqual {30}
	006 Move X9, [X0+152]
	007 Compare X9, 0
	008 JumpIfEqual {39}
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move X10, [X9+72]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Add X1, X31, 0
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W3, TEMP
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W4, TEMP
	020 Move X0, X8
	021 Move W2, W31
	022 Move X5, X31
	023 Move [X8+32], X31
	024 Move [X31+32], X10
	025 Move [X31], V0
	026 Move [X31+8], V1
	027 Move [X8], V2
	028 Move [X8+8], V2
	029 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	030 Move X9, [X0+192]
	031 Move V1, [X0+160]
	032 Move V0, [X0+176]
	033 Move [X8+32], X9
	034 Move [X8], V1
	035 Move [X8+8], V0
	036 Move X30, [X31+48]
	037 Add X31, X31, 64
	038 Return X0
	039 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle[] get_colorAttachmentHandles()

Disassembly:
	0x03A44A90 CBNZ W8, 0x3A44A98
	0x03A44A94 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: UnityEngine.Rendering.RTHandle get_colorAttachmentHandle()

Disassembly:
	0x03A44A98 ADRP X24, 0x70E000
	0x03A44A9C LDR X24, [X24 + 0xE28]
	0x03A44AA0 MOV X0, X23
	0x03A44AA4 MOV X1, X31
	0x03A44AA8 MOV X2, X31
	0x03A44AAC BL 0x3C3883C
	0x03A44AB0 TBZ X0, 0x0, 0x3A44B10
	0x03A44AB4 CBZ X20, 0x3A44B4C
	0x03A44AB8 LDR X0, [X20 + 0x18]
	0x03A44ABC CBZ X0, 0x3A44B4C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+120]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {12}
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: UnityEngine.Rendering.RTHandle get_depthAttachmentHandle()

Disassembly:
	0x03A44AC0 MOV X1, X31
	0x03A44AC4 BL 0x3C1AB20

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: UnityEngine.Rendering.RenderBufferStoreAction[] get_colorStoreActions()

Disassembly:
	0x03A44AC8 LDR X8, [X24]
	0x03A44ACC MOV W22, W0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: UnityEngine.Rendering.RenderBufferStoreAction get_depthStoreAction()

Disassembly:
	0x03A44AD0 LDR W9, [X8 + 0xE0]
	0x03A44AD4 CBNZ W9, 0x3A44AE0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Boolean[] get_overriddenColorStoreActions()

Disassembly:
	0x03A44AD8 MOV X0, X8
	0x03A44ADC BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_overriddenDepthStoreAction()

Disassembly:
	0x03A44AE0 CMP W22, 0x1
	0x03A44AE4 MOV X0, X21

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: UnityEngine.Rendering.Universal.ScriptableRenderPassInput get_input()

Disassembly:
	0x03A44AE8 MOV X1, X20
	0x03A44AEC MOV X2, X19

ISIL:
	001 Move W0, [X0+200]
	002 Return X0

Method: UnityEngine.Rendering.ClearFlag get_clearFlag()

Disassembly:
	0x03A44AF0 LDP X20, X19, [X31 + 0x30]
	0x03A44AF4 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+204]
	002 Return X0

Method: UnityEngine.Color get_clearColor()

Disassembly:
	0x03A44AF8 LDP X24, X23, [X31 + 0x10]
	0x03A44AFC CSET W3, EQ
	0x03A44B00 FMOV S0, W31

ISIL:
	001 Move S0, [X0+208]
	002 Move S1, [X0+212]
	003 Move S2, [X0+216]
	004 Move S3, [X0+220]
	005 Return X0

Method: UnityEngine.Rendering.ProfilingSampler get_profilingSampler()

Disassembly:
	0x03A44B04 MOV X4, X31
	0x03A44B08 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_profilingSampler(UnityEngine.Rendering.ProfilingSampler value)

Disassembly:
	0x03A44B0C B 0x39E2C70
	0x03A44B10 LDR X0, [X24]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Boolean get_overrideCameraTarget()

Disassembly:
	0x03A44B14 LDR W8, [X0 + 0xE0]
	0x03A44B18 CBNZ W8, 0x3A44B20

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_overrideCameraTarget(System.Boolean value)

Disassembly:
	0x03A44B1C BL 0x1C16DFC
	0x03A44B20 MOV X0, X21
	0x03A44B24 MOV X1, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.Boolean get_isBlitRenderPass()

Disassembly:
	0x03A44B28 MOV X2, X19
	0x03A44B2C MOV X3, X23

ISIL:
	001 Move W0, [X0+65]
	002 Return X0

Method: System.Void set_isBlitRenderPass(System.Boolean value)

Disassembly:
	0x03A44B30 MOV W4, W22
	0x03A44B34 LDP X20, X19, [X31 + 0x30]
	0x03A44B38 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+65], W8
	003 Return 

Method: System.Boolean get_useNativeRenderPass()

Disassembly:
	0x03A44B3C LDP X24, X23, [X31 + 0x10]
	0x03A44B40 MOV X5, X31

ISIL:
	001 Move W0, [X0+66]
	002 Return X0

Method: System.Void set_useNativeRenderPass(System.Boolean value)

Disassembly:
	0x03A44B44 LDP X30, X25, [X31], #0x40
	0x03A44B48 B 0x39E2FCC
	0x03A44B4C BL 0x1C16F20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+66], W8
	003 Return 

Method: System.Int32 get_renderPassQueueIndex()

Disassembly:
	0x03A44B50 STP X30, X23, [X31 - 0x30]!
	0x03A44B54 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_renderPassQueueIndex(System.Int32 value)

Disassembly:
	0x03A44B58 STP X20, X19, [X31 + 0x20]
	0x03A44B5C LDR X20, [X2 + 0x1D0]

ISIL:
	001 Move [X0+68], W1
	002 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat[] get_renderTargetFormat()

Disassembly:
	0x03A44B60 CBZ X20, 0x3A44BCC
	0x03A44B64 MOV X0, X20

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_renderTargetFormat(UnityEngine.Experimental.Rendering.GraphicsFormat[] value)

Disassembly:
	0x03A44B68 MOV W21, W4
	0x03A44B6C MOV X22, X3

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: UnityEngine.Rendering.Universal.DebugHandler GetActiveDebugHandler(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A44B70 MOV X19, X1
	0x03A44B74 BL 0x3A44BD0
	0x03A44B78 LDR X8, [X20]
	0x03A44B7C MOV X23, X0
	0x03A44B80 MOV X0, X20
	0x03A44B84 MOV X1, X19
	0x03A44B88 LDP X9, X2, [X8 + 0x198]
	0x03A44B8C BLR X9
	0x03A44B90 MOV X1, X19
	0x03A44B94 MOV X2, X23
	0x03A44B98 MOV X3, X0
	0x03A44B9C MOV X4, X22
	0x03A44BA0 MOV W5, W21
	0x03A44BA4 BL 0x3A44A30
	0x03A44BA8 LDR X8, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+464]
	004 Compare X8, 0
	005 JumpIfEqual {22}
	006 Move X19, [X8+224]
	007 Compare X19, 0
	008 JumpIfEqual {17}
	009 Add X1, X0, 24
	010 Move X0, X19
	011 Move X2, X31
	012 Call DebugHandler.IsActiveForCamera, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Move X19, X31
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A4325C STP X22, X21, [X31 + 0x70]
	0x03A43260 STP X20, X19, [X31 + 0x80]
	0x03A43264 ADRP X24, 0x99F000
	0x03A43268 ADRP X23, 0x710000
	0x03A4326C LDRB W8, [X24 + 0x171]
	0x03A43270 LDR X23, [X23 + 0xFF0]
	0x03A43274 MOV W22, W3
	0x03A43278 MOV X21, X2
	0x03A4327C MOV X20, X1
	0x03A43280 MOV X19, X0
	0x03A43284 TBNZ X8, 0x0, 0x3A43308
	0x03A43288 ADRP X0, 0x711000
	0x03A4328C LDR X0, [X0 + 0x70]
	0x03A43290 BL 0x1C16CF4
	0x03A43294 ADRP X0, 0x711000
	0x03A43298 LDR X0, [X0 + 0x68]
	0x03A4329C BL 0x1C16CF4
	0x03A432A0 ADRP X0, 0x711000
	0x03A432A4 LDR X0, [X0 + 0x60]
	0x03A432A8 BL 0x1C16CF4
	0x03A432AC ADRP X0, 0x711000
	0x03A432B0 LDR X0, [X0 + 0x78]
	0x03A432B4 BL 0x1C16CF4
	0x03A432B8 ADRP X0, 0x70D000
	0x03A432BC LDR X0, [X0 + 0x598]
	0x03A432C0 BL 0x1C16CF4
	0x03A432C4 ADRP X0, 0x6D9000
	0x03A432C8 LDR X0, [X0 + 0xD28]
	0x03A432CC BL 0x1C16CF4
	0x03A432D0 ADRP X0, 0x710000
	0x03A432D4 LDR X0, [X0 + 0xFF0]
	0x03A432D8 BL 0x1C16CF4
	0x03A432DC ADRP X0, 0x712000
	0x03A432E0 LDR X0, [X0 + 0x768]
	0x03A432E4 BL 0x1C16CF4
	0x03A432E8 ADRP X0, 0x712000
	0x03A432EC LDR X0, [X0 + 0xC40]
	0x03A432F0 BL 0x1C16CF4
	0x03A432F4 ADRP X0, 0x712000
	0x03A432F8 LDR X0, [X0 + 0x750]
	0x03A432FC BL 0x1C16CF4
	0x03A43300 MOVZ W8, 0x1
	0x03A43304 STRB W8, [X24 + 0x171]
	0x03A43308 LDR X0, [X23]
	0x03A4330C ADRP X28, 0x70D000
	0x03A43310 ADRP X27, 0x712000
	0x03A43314 ADRP X26, 0x6D9000
	0x03A43318 LDR W8, [X0 + 0xE0]
	0x03A4331C LDR X28, [X28 + 0x598]
	0x03A43320 LDR X27, [X27 + 0xC40]
	0x03A43324 LDR X26, [X26 + 0xD28]
	0x03A43328 AND W22, W22, 0x1
	0x03A4332C CBNZ W8, 0x3A43334
	0x03A43330 BL 0x1C16DFC
	0x03A43334 ADRP X25, 0x711000
	0x03A43338 ADRP X24, 0x711000
	0x03A4333C ADRP X23, 0x711000
	0x03A43340 LDR X25, [X25 + 0x78]
	0x03A43344 LDR X24, [X24 + 0x60]
	0x03A43348 LDR X23, [X23 + 0x68]
	0x03A4334C MOV X0, X19
	0x03A43350 BL 0x3A4225C
	0x03A43354 MOVZ W8, 0x190
	0x03A43358 MOVZ W9, 0x1
	0x03A4335C STR W8, [X19 + 0x10]
	0x03A43360 STR W9, [X19 + 0xC8]
	0x03A43364 STP X21, X20, [X19 + 0x108]
	0x03A43368 LDR X0, [X28]
	0x03A4336C BL 0x1C16F10
	0x03A43370 LDR X1, [X27]
	0x03A43374 MOV X2, X31
	0x03A43378 MOV X20, X0
	0x03A4337C BL 0x39B19AC
	0x03A43380 STR X20, [X19 + 0xF8]
	0x03A43384 LDR X0, [X26]
	0x03A43388 LDR W8, [X0 + 0xE0]
	0x03A4338C CBNZ W8, 0x3A43394
	0x03A43390 BL 0x1C16DFC
	0x03A43394 ADRP X21, 0x711000
	0x03A43398 LDR X21, [X21 + 0x70]
	0x03A4339C MOV X0, X31
	0x03A433A0 BL 0x3C560AC
	0x03A433A4 LDR X2, [X25]
	0x03A433A8 MOV X1, X0
	0x03A433AC ADD X0, X31, 0x20
	0x03A433B0 STR W31, [X31 + 0x28]
	0x03A433B4 STR X31, [X31 + 0x20]
	0x03A433B8 BL 0x2439504
	0x03A433BC LDR X1, [X31 + 0x20]
	0x03A433C0 LDR W2, [X31 + 0x28]
	0x03A433C4 ADD X0, X31, 0x8
	0x03A433C8 MOVN W3, 0x0
	0x03A433CC MOVN W4, 0x0
	0x03A433D0 MOV W5, W31
	0x03A433D4 MOV X6, X31
	0x03A433D8 STP X31, X31, [X31 + 0x8]
	0x03A433DC STR X31, [X31 + 0x18]
	0x03A433E0 BL 0x3C53F40
	0x03A433E4 LDR X8, [X31 + 0x18]
	0x03A433E8 LDUR V0, [X31 + 0x8]
	0x03A433EC STRB W22, [X19 + 0x118]
	0x03A433F0 STR X8, [X19 + 0xF0]
	0x03A433F4 STR V0, [X19 + 0xE]
	0x03A433F8 LDR X0, [X24]
	0x03A433FC BL 0x1C16F10
	0x03A43400 LDR X1, [X23]
	0x03A43404 MOV X20, X0
	0x03A43408 BL 0x305C9FC
	0x03A4340C LDR X8, [X19 + 0x108]
	0x03A43410 STR X20, [X19 + 0x100]
	0x03A43414 CBZ X8, 0x3A43424
	0x03A43418 ADRP X8, 0x712000
	0x03A4341C LDR X8, [X8 + 0x750]
	0x03A43420 B 0x3A4342C
	0x03A43424 ADRP X8, 0x712000
	0x03A43428 LDR X8, [X8 + 0x768]
	0x03A4342C LDR X1, [X8]
	0x03A43430 ADD X0, X31, 0x8
	0x03A43434 MOV X2, X31
	0x03A43438 STR W31, [X31 + 0x8]
	0x03A4343C BL 0x3C5A49C
	0x03A43440 CBZ X20, 0x3A434B8
	0x03A43444 LDR W10, [X20 + 0x1C]
	0x03A43448 LDR W1, [X31 + 0x8]
	0x03A4344C LDR X8, [X20 + 0x10]
	0x03A43450 LDR X9, [X21]
	0x03A43454 ADD W10, W10, 0x1
	0x03A43458 STR W10, [X20 + 0x1C]
	0x03A4345C CBZ X8, 0x3A434B8
	0x03A43460 LDRSW X10, [X20 + 0x18]
	0x03A43464 LDR W11, [X8 + 0x18]
	0x03A43468 CMP W10, W11
	0x03A4346C B.CS 0x3A43484
	0x03A43470 ADD W9, W10, 0x1
	0x03A43474 ADD X8, X8, X10, 0x2, LSL
	0x03A43478 STR W9, [X20 + 0x18]
	0x03A4347C STR W1, [X8 + 0x20]
	0x03A43480 B 0x3A43498
	0x03A43484 LDR X8, [X9 + 0x20]
	0x03A43488 MOV X0, X20
	0x03A4348C LDR X8, [X8 + 0xC0]
	0x03A43490 LDR X2, [X8 + 0x70]
	0x03A43494 BL 0x305D1F8
	0x03A43498 LDP X20, X19, [X31 + 0x80]
	0x03A4349C LDP X22, X21, [X31 + 0x70]
	0x03A434A0 LDP X24, X23, [X31 + 0x60]
	0x03A434A4 LDP X26, X25, [X31 + 0x50]
	0x03A434A8 LDP X28, X27, [X31 + 0x40]
	0x03A434AC LDR X30, [X31 + 0x30]
	0x03A434B0 ADD X31, X31, 0x90
	0x03A434B4 RET
	0x03A434B8 BL 0x1C16F20
	0x03A434BC SUB X31, X31, 0x130
	0x03A434C0 STR X29, [X31 + 0xE0]
	0x03A434C4 STP X30, X25, [X31 + 0xF0]
	0x03A434C8 STP X24, X23, [X31 + 0x100]
	0x03A434CC STP X22, X21, [X31 + 0x110]
	0x03A434D0 STP X20, X19, [X31 + 0x120]
	0x03A434D4 MRS X22, 0xC000
	0x03A434D8 LDR X8, [X22 + 0x28]
	0x03A434DC ADRP X21, 0x99F000
	0x03A434E0 ADRP X23, 0x70D000
	0x03A434E4 MOV X20, X2
	0x03A434E8 STR X8, [X31 + 0xD8]
	0x03A434EC STR X1, [X31 + 0x8]
	0x03A434F0 LDRB W8, [X21 + 0x172]
	0x03A434F4 LDR X23, [X23 + 0xC80]
	0x03A434F8 MOV X19, X0
	0x03A434FC TBNZ X8, 0x0, 0x3A43574
	0x03A43500 ADRP X0, 0x6D8000
	0x03A43504 LDR X0, [X0 + 0x8F8]
	0x03A43508 BL 0x1C16CF4
	0x03A4350C ADRP X0, 0x712000
	0x03A43510 LDR X0, [X0 + 0xC48]
	0x03A43514 BL 0x1C16CF4
	0x03A43518 ADRP X0, 0x712000
	0x03A4351C LDR X0, [X0 + 0xC10]
	0x03A43520 BL 0x1C16CF4
	0x03A43524 ADRP X0, 0x711000
	0x03A43528 LDR X0, [X0 + 0x10]
	0x03A4352C BL 0x1C16CF4
	0x03A43530 ADRP X0, 0x70D000
	0x03A43534 LDR X0, [X0 + 0xC80]
	0x03A43538 BL 0x1C16CF4
	0x03A4353C ADRP X0, 0x712000
	0x03A43540 LDR X0, [X0 + 0xC18]
	0x03A43544 BL 0x1C16CF4
	0x03A43548 ADRP X0, 0x712000
	0x03A4354C LDR X0, [X0 + 0xC20]
	0x03A43550 BL 0x1C16CF4
	0x03A43554 ADRP X0, 0x712000
	0x03A43558 LDR X0, [X0 + 0x6E8]
	0x03A4355C BL 0x1C16CF4
	0x03A43560 ADRP X0, 0x712000
	0x03A43564 LDR X0, [X0 + 0xC28]
	0x03A43568 BL 0x1C16CF4
	0x03A4356C MOVZ W8, 0x1
	0x03A43570 STRB W8, [X21 + 0x172]
	0x03A43574 ADD X0, X31, 0x10
	0x03A43578 MOVZ W2, 0xC4
	0x03A4357C MOV W1, W31
	0x03A43580 BL 0x3EB1B10
	0x03A43584 STRB W31, [X31]
	0x03A43588 LDR X1, [X19 + 0x100]
	0x03A4358C ADD X8, X31, 0x10
	0x03A43590 MOV X2, X20
	0x03A43594 MOV W3, W31
	0x03A43598 BL 0x3A42FD4
	0x03A4359C LDR X21, [X20]
	0x03A435A0 LDR X2, [X19 + 0xF8]
	0x03A435A4 ADD X0, X31, 0x0
	0x03A435A8 MOV X3, X31
	0x03A435AC MOV X1, X21
	0x03A435B0 BL 0x39B1DB0
	0x03A435B4 LDR X0, [X23]
	0x03A435B8 LDR W8, [X0 + 0xE0]
	0x03A435BC CBNZ W8, 0x3A435C4
	0x03A435C0 BL 0x1C16DFC
	0x03A435C4 ADD X0, X31, 0x8
	0x03A435C8 MOV X1, X21
	0x03A435CC MOV X2, X31
	0x03A435D0 BL 0x3C58FE4
	0x03A435D4 CBZ X21, 0x3A437CC
	0x03A435D8 MOV X0, X21
	0x03A435DC MOV X1, X31
	0x03A435E0 BL 0x3C4C310
	0x03A435E4 ADRP X8, 0x711000
	0x03A435E8 LDR X8, [X8 + 0x10]
	0x03A435EC LDR X0, [X8]
	0x03A435F0 LDR W8, [X0 + 0xE0]
	0x03A435F4 CBNZ W8, 0x3A435FC
	0x03A435F8 BL 0x1C16DFC
	0x03A435FC MOV X0, X21
	0x03A43600 MOV X1, X20
	0x03A43604 MOV X2, X31
	0x03A43608 BL 0x3A708D8
	0x03A4360C ADRP X8, 0x712000
	0x03A43610 LDR X8, [X8 + 0xC10]
	0x03A43614 LDR X0, [X8]
	0x03A43618 LDR W8, [X0 + 0xE0]
	0x03A4361C CBNZ W8, 0x3A43624
	0x03A43620 BL 0x1C16DFC
	0x03A43624 ADD X1, X20, 0x18
	0x03A43628 MOV X0, X21
	0x03A4362C MOV X2, X31
	0x03A43630 BL 0x3AA81DC
	0x03A43634 LDR X8, [X19 + 0x110]
	0x03A43638 CBZ X8, 0x3A437D0
	0x03A4363C ADRP X24, 0x6D8000
	0x03A43640 LDR X24, [X24 + 0x8F8]
	0x03A43644 LDR W25, [X8 + 0x10]
	0x03A43648 LDR X0, [X24]
	0x03A4364C LDR W9, [X0 + 0xE0]
	0x03A43650 CBNZ W9, 0x3A43658
	0x03A43654 BL 0x1C16DFC
	0x03A43658 ADRP X8, 0x712000
	0x03A4365C LDR X8, [X8 + 0xC28]
	0x03A43660 CMP W25, 0x0
	0x03A43664 CSET W2, EQ
	0x03A43668 LDR X1, [X8]
	0x03A4366C MOV X0, X21
	0x03A43670 MOV X3, X31
	0x03A43674 BL 0x39E9618
	0x03A43678 LDR X8, [X19 + 0x110]
	0x03A4367C CBZ X8, 0x3A437D4
	0x03A43680 ADRP X9, 0x712000
	0x03A43684 LDR W8, [X8 + 0x10]
	0x03A43688 LDR X9, [X9 + 0xC20]
	0x03A4368C CMP W8, 0x1
	0x03A43690 LDR X1, [X9]
	0x03A43694 CSET W2, EQ
	0x03A43698 MOV X0, X21
	0x03A4369C MOV X3, X31
	0x03A436A0 BL 0x39E9618
	0x03A436A4 LDR X8, [X19 + 0x110]
	0x03A436A8 CBZ X8, 0x3A437D8
	0x03A436AC ADRP X9, 0x712000
	0x03A436B0 LDR W8, [X8 + 0x10]
	0x03A436B4 LDR X9, [X9 + 0xC18]
	0x03A436B8 CMP W8, 0x2
	0x03A436BC LDR X1, [X9]
	0x03A436C0 CSET W2, EQ
	0x03A436C4 MOV X0, X21
	0x03A436C8 MOV X3, X31
	0x03A436CC BL 0x39E9618
	0x03A436D0 ADRP X8, 0x712000
	0x03A436D4 LDR X8, [X8 + 0xC48]
	0x03A436D8 LDR X0, [X8]
	0x03A436DC LDR W8, [X0 + 0xE0]
	0x03A436E0 CBNZ W8, 0x3A436E8
	0x03A436E4 BL 0x1C16DFC
	0x03A436E8 MOV X0, X31
	0x03A436EC BL 0x3A6A8E0
	0x03A436F0 TBNZ X0, 0x0, 0x3A43728
	0x03A436F4 LDR X0, [X24]
	0x03A436F8 LDRB W24, [X19 + 0x118]
	0x03A436FC LDR W8, [X0 + 0xE0]
	0x03A43700 CBNZ W8, 0x3A43708
	0x03A43704 BL 0x1C16DFC
	0x03A43708 ADRP X8, 0x712000
	0x03A4370C LDR X8, [X8 + 0x6E8]
	0x03A43710 CMP W24, 0x0

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 464
	011 Move X20, 0x9A0000
	012 Move X24, 0x713000
	013 Move X23, 0x6B3000
	014 Move X25, 0x710000
	015 Move X22, 0x711000
	016 Move W8, [X20+372]
	017 Move X24, [X24+3056]
	018 Move X23, [X23+2488]
	019 Move X25, [X25+3888]
	020 Move X22, [X22+4080]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {52}
	026 Move X0, 0x6B3000
	027 Move X0, [X0+2488]
	028 Call 0x1C17CF4
	029 Move X0, 0x712000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move X0, 0x70E000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x710000
	036 Move X0, [X0+3888]
	037 Call 0x1C17CF4
	038 Move X0, 0x713000
	039 Move X0, [X0+3056]
	040 Call 0x1C17CF4
	041 Move X0, 0x712000
	042 Move X0, [X0+2840]
	043 Call 0x1C17CF4
	044 Move X0, 0x711000
	045 Move X0, [X0+4080]
	046 Call 0x1C17CF4
	047 Move X0, 0x713000
	048 Move X0, [X0+3064]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+372], W8
	052 Move X0, [X24]
	053 Move W1, 1
	054 Move W20, 1
	055 Call 0x1C17D6C
	056 Move [X19+24], X0
	057 Move X0, [X23]
	058 Move W1, 1
	059 Call 0x1C17D6C
	060 Move [X19+40], X0
	061 Move X0, [X25]
	062 Move W1, 8
	063 Call 0x1C17D6C
	064 Move [X19+136], X0
	065 Move X0, [X23]
	066 Move W1, 8
	067 Call 0x1C17D6C
	068 Move X8, -49635328
	069 Move V0, [X8+187]
	070 Move [X19+144], X0
	071 Move X0, X19
	072 Move X1, X31
	073 Move [X19+13], V0
	074 Call Object..ctor, X0
	075 Move W8, 300
	076 Move [X19+112], W20
	077 Move [X19+16], W8
	078 Move X0, [X25]
	079 Move W1, 8
	080 Call 0x1C17D6C
	081 Move X8, [X22]
	082 Move X20, X0
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {89}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X8, [X22]
	089 Compare X20, 0
	090 JumpIfEqual {344}
	091 Move X8, [X8+184]
	092 Move X21, [X8]
	093 Compare X21, 0
	094 JumpIfEqual {101}
	095 Move X8, [X20]
	096 Move X0, X21
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {345}
	101 Move W8, [X20+24]
	102 Compare W8, 0
	103 JumpIfEqual {343}
	104 Move [X20+32], X21
	105 Move [X19+120], X20
	106 Move X0, [X25]
	107 Move W1, 8
	108 Call 0x1C17D6C
	109 Move [X19+136], X0
	110 Move X0, [X23]
	111 Move W1, 8
	112 Call 0x1C17D6C
	113 Move [X19+144], X0
	114 Move X8, [X22]
	115 Move W1, 8
	116 Move X8, [X8+184]
	117 Move X8, [X8]
	118 Move [X19+152], X8
	119 Move X0, [X24]
	120 Call 0x1C17D6C
	121 Move [X19+24], X0
	122 Move [X19+32], W31
	123 Move X0, [X23]
	124 Move W1, 8
	125 Call 0x1C17D6C
	126 Move [X19+40], X0
	127 Move [X19+48], W31
	128 Move X8, [X22]
	129 Move X8, [X8+184]
	130 Move X8, [X8]
	131 Move [X19+152], X8
	132 Compare X8, 0
	133 JumpIfEqual {344}
	134 Move X9, [X8+72]
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 Move X8, 0x712000
	138 Move X8, [X8+2840]
	139 Move [X19+192], X9
	140 Move [X19+160], V1
	141 Move [X19+168], V0
	142 Move W1, 8
	143 Move X0, [X8]
	144 Call 0x1C17D6C
	145 Move X8, [X22]
	146 Move X8, [X8+184]
	147 Move X8, [X8]
	148 Compare X8, 0
	149 JumpIfEqual {344}
	150 Move X9, [X8+72]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X20, X0
	154 Move [X31+448], X9
	155 Move [X31+416], V1
	156 Move [X31+424], V0
	157 Compare X0, 0
	158 JumpIfEqual {344}
	159 Move V0, [X31+416]
	160 Move V1, [X31+432]
	161 Move X8, [X31+448]
	162 Move [X31+368], V0
	163 Move [X31+376], V1
	164 Move [X31+400], X8
	165 Move W8, [X20+24]
	166 Compare W8, 0
	167 JumpIfEqual {343}
	168 Move X8, [X31+400]
	169 Move V1, [X31+368]
	170 Move V0, [X31+384]
	171 Move W0, W31
	172 Move X1, X31
	173 Move [X20+64], X8
	174 Add X8, X31, 328
	175 Add X21, X31, 328
	176 Move [X20+32], V1
	177 Move [X20+40], V0
	178 Call RenderTargetIdentifier.op_Implicit, X0
	179 Move V0, [X21]
	180 Move V1, [X21+16]
	181 Move X8, [X31+360]
	182 Move [X31+288], V0
	183 Move [X31+296], V1
	184 Move [X31+320], X8
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X8, [X31+320]
	188 Move V1, [X31+288]
	189 Move V0, [X31+304]
	190 Move W0, W31
	191 Move X1, X31
	192 Move [X20+104], X8
	193 Add X8, X31, 328
	194 Move [X20+88], V0
	195 Move [X20+72], V1
	196 Call RenderTargetIdentifier.op_Implicit, X0
	197 Move V0, [X21]
	198 Move V1, [X21+16]
	199 Move X8, [X31+360]
	200 Move [X31+240], V0
	201 Move [X31+248], V1
	202 Move [X31+272], X8
	203 Move W8, [X20+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X8, [X31+272]
	206 Move V1, [X31+240]
	207 Move V0, [X31+256]
	208 Move W0, W31
	209 Move X1, X31
	210 Move [X20+144], X8
	211 Add X8, X31, 328
	212 Move [X20+112], V1
	213 Move [X20+120], V0
	214 Call RenderTargetIdentifier.op_Implicit, X0
	215 Move V0, [X21]
	216 Move V1, [X21+16]
	217 Move X8, [X31+360]
	218 Move [X31+192], V0
	219 Move [X31+200], V1
	220 Move [X31+224], X8
	221 Move W8, [X20+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X8, [X31+224]
	224 Move V1, [X31+192]
	225 Move V0, [X31+208]
	226 Move W0, W31
	227 Move X1, X31
	228 Move [X20+184], X8
	229 Add X8, X31, 328
	230 Move [X20+168], V0
	231 Move [X20+152], V1
	232 Call RenderTargetIdentifier.op_Implicit, X0
	233 Move V0, [X21]
	234 Move V1, [X21+16]
	235 Move X8, [X31+360]
	236 Move [X31+144], V0
	237 Move [X31+152], V1
	238 Move [X31+176], X8
	239 Move W8, [X20+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, [X31+176]
	242 Move V1, [X31+144]
	243 Move V0, [X31+160]
	244 Move W0, W31
	245 Move X1, X31
	246 Move [X20+224], X8
	247 Add X8, X31, 328
	248 Move [X20+192], V1
	249 Move [X20+200], V0
	250 Call RenderTargetIdentifier.op_Implicit, X0
	251 Move V0, [X21]
	252 Move V1, [X21+16]
	253 Move X8, [X31+360]
	254 Move [X31+96], V0
	255 Move [X31+104], V1
	256 Move [X31+128], X8
	257 Move W8, [X20+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X8, [X31+128]
	260 Move V1, [X31+96]
	261 Move V0, [X31+112]
	262 Move W0, W31
	263 Move X1, X31
	264 Move [X20+264], X8
	265 Add X8, X31, 328
	266 Move [X20+248], V0
	267 Move [X20+232], V1
	268 Call RenderTargetIdentifier.op_Implicit, X0
	269 Move V0, [X21]
	270 Move V1, [X21+16]
	271 Move X8, [X31+360]
	272 Move [X31+48], V0
	273 Move [X31+56], V1
	274 Move [X31+80], X8
	275 Move W8, [X20+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X8, [X31+80]
	278 Move V1, [X31+48]
	279 Move V0, [X31+64]
	280 Move W0, W31
	281 Move X1, X31
	282 Move [X20+304], X8
	283 Add X8, X31, 328
	284 Move [X20+272], V1
	285 Move [X20+280], V0
	286 Call RenderTargetIdentifier.op_Implicit, X0
	287 Move V0, [X21]
	288 Move V1, [X21+16]
	289 Move X8, [X31+360]
	290 Move [X31], V0
	291 Move [X31+8], V1
	292 Move [X31+32], X8
	293 Move W8, [X20+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X8, 0x70E000
	296 Move X8, [X8+1432]
	297 Move X10, [X31+32]
	298 Move V0, [X31]
	299 Move V1, [X31+16]
	300 Add X9, X20, 312
	301 Add X11, X20, 328
	302 Move W12, 0x3F800000
	303 Move [X20+344], X10
	304 Move [X11], V1
	305 Move [X9], V0
	306 Move [X19+128], X20
	307 Move [X19+212], X31
	308 Move [X19+204], X31
	309 Move [X19+220], W12
	310 NotImplemented "Instruction STRH not yet implemented."
	311 Move X0, [X8]
	312 Move X20, 0x713000
	313 Move X21, 0x712000
	314 Move X20, [X20+3064]
	315 Move X21, [X21+3200]
	316 Call 0x1C17F10
	317 Move X1, [X20]
	318 Move X2, X31
	319 Move X20, X0
	320 Call ProfilingSampler..ctor, X0, X1
	321 Move W8, 1
	322 Move TEMP, 0
	323 Not TEMP
	324 Move W9, TEMP
	325 Move [X19+56], X20
	326 Move [X19+66], W8
	327 Move [X19+68], W9
	328 Move X0, [X21]
	329 Move W1, 8
	330 Call 0x1C17D6C
	331 Move [X19+104], X0
	332 Add X31, X31, 464
	333 Move X20, [X31+64]
	334 Move X19, [X31+72]
	335 Move X22, [X31+48]
	336 Move X21, [X31+56]
	337 Move X24, [X31+32]
	338 Move X23, [X31+40]
	339 Move X30, [X31+16]
	340 Move X25, [X31+24]
	341 Move X29, [X31+80]
	342 Return 
	343 Call 0x1C17F28
	344 Call 0x1C17F20
	345 Call 0x1C17F44
	346 Move X1, X31
	347 Call 0x1C17DEC

Method: System.Void ConfigureInput(UnityEngine.Rendering.Universal.ScriptableRenderPassInput passInput)

Disassembly:
	0x03A44BAC MOV X0, X20
	0x03A44BB0 MOV X1, X19

ISIL:
	001 Move [X0+200], W1
	002 Return 

Method: System.Void ConfigureColorStoreAction(UnityEngine.Rendering.RenderBufferStoreAction storeAction, System.UInt32 attachmentIndex = 0)

Disassembly:
	0x03A44BB4 LDP X20, X19, [X31 + 0x20]
	0x03A44BB8 LDR X3, [X8 + 0x238]
	0x03A44BBC LDR X2, [X8 + 0x240]
	0x03A44BC0 LDP X22, X21, [X31 + 0x10]
	0x03A44BC4 LDP X30, X23, [X31], #0x30
	0x03A44BC8 BR X3
	0x03A44BCC BL 0x1C16F20
	0x03A44BD0 STR X30, [X31 - 0x20]!
	0x03A44BD4 STP X20, X19, [X31 + 0x10]
	0x03A44BD8 ADRP X20, 0x99E000
	0x03A44BDC LDRB W8, [X20 + 0x197]
	0x03A44BE0 MOV X19, X0
	0x03A44BE4 TBNZ X8, 0x0, 0x3A44C08
	0x03A44BE8 ADRP X0, 0x6AF000
	0x03A44BEC LDR X0, [X0 + 0xA28]
	0x03A44BF0 BL 0x1C16CF4
	0x03A44BF4 ADRP X0, 0x711000
	0x03A44BF8 LDR X0, [X0 + 0xC68]
	0x03A44BFC BL 0x1C16CF4
	0x03A44C00 MOVZ W8, 0x1
	0x03A44C04 STRB W8, [X20 + 0x197]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+24]
	003 Compare X9, 0
	004 JumpIfEqual {20}
	005 Move W8, [X9+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, W2
	008 Add X9, X9, X8
	009 Move [X9+32], W1
	010 Move X9, [X0+40]
	011 Compare X9, 0
	012 JumpIfEqual {20}
	013 Move W10, [X9+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X8, X9, X8
	016 Move W9, 1
	017 Move [X8+32], W9
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Void ConfigureColorStoreActions(UnityEngine.Rendering.RenderBufferStoreAction[] storeActions)

Disassembly:
	0x03A44C08 LDRB W8, [X19 + 0x1A2]
	0x03A44C0C CBZ W8, 0x3A44C18
	0x03A44C10 LDR X0, [X19 + 0x110]
	0x03A44C14 B 0x3A44C48
	0x03A44C18 ADRP X8, 0x6AF000
	0x03A44C1C LDR X8, [X8 + 0xA28]
	0x03A44C20 LDR X0, [X8]
	0x03A44C24 LDR W8, [X0 + 0xE0]
	0x03A44C28 CBNZ W8, 0x3A44C30
	0x03A44C2C BL 0x1C16DFC
	0x03A44C30 ADRP X8, 0x711000
	0x03A44C34 LDR X8, [X8 + 0xC68]
	0x03A44C38 MOV X1, X31
	0x03A44C3C LDR X0, [X8]
	0x03A44C40 BL 0x3C0649C
	0x03A44C44 MOV X0, X31
	0x03A44C48 LDP X20, X19, [X31 + 0x10]
	0x03A44C4C LDR X30, [X31], #0x20
	0x03A44C50 RET
	0x03A44C54 STR X30, [X31 - 0x30]!
	0x03A44C58 STP X22, X21, [X31 + 0x10]
	0x03A44C5C STP X20, X19, [X31 + 0x20]
	0x03A44C60 LDR X0, [X2 + 0x1D0]
	0x03A44C64 CBZ X0, 0x3A44CA0
	0x03A44C68 MOV W19, W5
	0x03A44C6C MOV X20, X4
	0x03A44C70 MOV X21, X3
	0x03A44C74 MOV X22, X1
	0x03A44C78 BL 0x3A44BD0
	0x03A44C7C MOV X1, X22
	0x03A44C80 MOV X2, X21
	0x03A44C84 MOV X4, X20
	0x03A44C88 MOV W5, W19
	0x03A44C8C LDP X20, X19, [X31 + 0x20]
	0x03A44C90 LDP X22, X21, [X31 + 0x10]
	0x03A44C94 MOV X3, X0
	0x03A44C98 LDR X30, [X31], #0x30
	0x03A44C9C B 0x3A44A30
	0x03A44CA0 BL 0x1C16F20
	0x03A44CA4 SUB X31, X31, 0x120
	0x03A44CA8 STR X29, [X31 + 0xD0]
	0x03A44CAC STP X30, X25, [X31 + 0xE0]
	0x03A44CB0 STP X24, X23, [X31 + 0xF0]
	0x03A44CB4 STP X22, X21, [X31 + 0x100]
	0x03A44CB8 STP X20, X19, [X31 + 0x110]
	0x03A44CBC MRS X23, 0xC000
	0x03A44CC0 MOV X19, X8
	0x03A44CC4 LDR X8, [X23 + 0x28]
	0x03A44CC8 ADRP X24, 0x99E000
	0x03A44CCC ADRP X25, 0x710000
	0x03A44CD0 MOV W20, W3
	0x03A44CD4 STR X8, [X31 + 0xC8]
	0x03A44CD8 LDRB W8, [X24 + 0x17D]
	0x03A44CDC LDR X25, [X25 + 0x10]
	0x03A44CE0 MOV X21, X2
	0x03A44CE4 MOV X22, X1
	0x03A44CE8 TBNZ X8, 0x0, 0x3A44D00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x99F000
	006 Move W8, [X21+373]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6B0000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+373], W8
	018 Compare X20, 0
	019 JumpIfEqual {64}
	020 Move X21, [X19+24]
	021 Compare X21, 0
	022 JumpIfEqual {64}
	023 Move X8, 0x6B0000
	024 Move X8, [X8+1448]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, [X20+24]
	031 Move W1, [X21+24]
	032 Move X2, X31
	033 Call Math.Min, X0, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X19+24]
	036 Move W11, [X20+24]
	037 Move X8, X31
	038 Move X10, W0
	039 Add X12, X20, 32
	040 Add X13, X9, 32
	041 Move W14, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X9, 0
	044 JumpIfEqual {64}
	045 Move W15, [X9+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W15, [X12]
	048 Move [X13], W15
	049 Move X15, [X19+40]
	050 Compare X15, 0
	051 JumpIfEqual {64}
	052 Move W16, [X15+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X15, X15, X8
	055 Add X8, X8, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X15+32], W14
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Void ConfigureDepthStoreAction(UnityEngine.Rendering.RenderBufferStoreAction storeAction)

Disassembly:
	0x03A44CEC ADRP X0, 0x710000
	0x03A44CF0 LDR X0, [X0 + 0x10]
	0x03A44CF4 BL 0x1C16CF4
	0x03A44CF8 MOVZ W8, 0x1

ISIL:
	001 Move W8, 1
	002 Move [X0+32], W1
	003 Move [X0+48], W8
	004 Return 

Method: System.Void ConfigureInputAttachments(UnityEngine.Rendering.RTHandle input, System.Boolean isTransient = False)

Disassembly:
	0x03A44CFC STRB W8, [X24 + 0x17D]
	0x03A44D00 LDR X0, [X25]
	0x03A44D04 LDR W8, [X0 + 0xE0]
	0x03A44D08 CBNZ W8, 0x3A44D10
	0x03A44D0C BL 0x1C16DFC
	0x03A44D10 AND X0, X22, 0x0
	0x03A44D14 ADD X8, X31, 0x0
	0x03A44D18 MOV X1, X21
	0x03A44D1C MOV W2, W20
	0x03A44D20 MOV X3, X31
	0x03A44D24 BL 0x3A733F8
	0x03A44D28 ADD X1, X31, 0x0
	0x03A44D2C MOVZ W2, 0xC4
	0x03A44D30 MOV X0, X19
	0x03A44D34 BL 0x3EB1AC0
	0x03A44D38 LDR X8, [X23 + 0x28]
	0x03A44D3C LDR X9, [X31 + 0xC8]
	0x03A44D40 CMP X8, X9
	0x03A44D44 B.NE 0x3A44D64
	0x03A44D48 LDP X20, X19, [X31 + 0x110]
	0x03A44D4C LDP X22, X21, [X31 + 0x100]
	0x03A44D50 LDP X24, X23, [X31 + 0xF0]
	0x03A44D54 LDP X30, X25, [X31 + 0xE0]
	0x03A44D58 LDR X29, [X31 + 0xD0]
	0x03A44D5C ADD X31, X31, 0x120
	0x03A44D60 RET
	0x03A44D64 BL 0x3EB1B20
	0x03A44D68 STR X30, [X31 - 0x10]!
	0x03A44D6C CBZ X0, 0x3A44D8C
	0x03A44D70 CBZ X1, 0x3A44D8C
	0x03A44D74 LDR W8, [X0 + 0x10]
	0x03A44D78 LDR W9, [X1 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+136]
	007 Compare X22, 0
	008 JumpIfEqual {38}
	009 Move W19, W2
	010 Move X20, X0
	011 Move X21, X1
	012 Compare X1, 0
	013 JumpIfEqual {20}
	014 Move X8, [X22]
	015 Move X0, X21
	016 Move X1, [X8+64]
	017 Call 0x1C17E00
	018 Compare X0, 0
	019 JumpIfEqual {40}
	020 Move W8, [X22+24]
	021 Compare W8, 0
	022 JumpIfEqual {39}
	023 Move [X22+32], X21
	024 Move X8, [X20+144]
	025 Compare X8, 0
	026 JumpIfEqual {38}
	027 Move W9, [X8+24]
	028 Compare W9, 0
	029 JumpIfEqual {39}
	030 And W9, W19, 1
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move [X8+32], W9
	036 Move X30, [X31+48]
	037 Return 
	038 Call 0x1C17F20
	039 Call 0x1C17F28
	040 Call 0x1C17F44
	041 Move X1, X31
	042 Call 0x1C17DEC

Method: System.Void ConfigureInputAttachments(UnityEngine.Rendering.RTHandle[] inputs)

Disassembly:
	0x03A44D7C CMP W8, W9
	0x03A44D80 CSET W0, LT

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Void ConfigureInputAttachments(UnityEngine.Rendering.RTHandle[] inputs, System.Boolean[] isTransient)

Disassembly:
	0x03A43A3C MOVI V2.2D, 0x0
	0x03A43A40 ADD X1, X31, 0x0

ISIL:
	001 Move [X0+136], X1
	002 Move [X0+144], X2
	003 Return 

Method: System.Void SetInputAttachmentTransient(System.Int32 idx, System.Boolean isTransient)

Disassembly:
	0x03A44D84 LDR X30, [X31], #0x10
	0x03A44D88 RET
	0x03A44D8C BL 0x1C16F20
	0x03A44D90 STR X30, [X31 - 0x10]!
	0x03A44D94 CBZ X0, 0x3A44DB4
	0x03A44D98 CBZ X1, 0x3A44DB4
	0x03A44D9C LDR W8, [X0 + 0x10]
	0x03A44DA0 LDR W9, [X1 + 0x10]
	0x03A44DA4 CMP W8, W9
	0x03A44DA8 CSET W0, GT
	0x03A44DAC LDR X30, [X31], #0x10
	0x03A44DB0 RET
	0x03A44DB4 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+144]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 And W9, W2, 1
	008 Add X8, X8, W1
	009 Move [X8+32], W9
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20
	013 Call 0x1C17F28

Method: System.Boolean IsInputAttachmentTransient(System.Int32 idx)

Disassembly:
	0x03A44DB8 STR X30, [X31 - 0x30]!
	0x03A44DBC STP X22, X21, [X31 + 0x10]
	0x03A44DC0 STP X20, X19, [X31 + 0x20]
	0x03A44DC4 ADRP X21, 0x99E000
	0x03A44DC8 ADRP X20, 0x711000
	0x03A44DCC LDRB W8, [X21 + 0x17F]
	0x03A44DD0 LDR X20, [X20 + 0xC70]
	0x03A44DD4 MOV W19, W0
	0x03A44DD8 TBNZ X8, 0x0, 0x3A44E08
	0x03A44DDC ADRP X0, 0x6AF000
	0x03A44DE0 LDR X0, [X0 + 0xA28]
	0x03A44DE4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+144]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move W0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void ResetTarget()

Disassembly:
	0x03A44DE8 ADRP X0, 0x711000
	0x03A44DEC LDR X0, [X0 + 0xC70]
	0x03A44DF0 BL 0x1C16CF4
	0x03A44DF4 ADRP X0, 0x711000
	0x03A44DF8 LDR X0, [X0 + 0xC78]
	0x03A44DFC BL 0x1C16CF4
	0x03A44E00 MOVZ W8, 0x1
	0x03A44E04 STRB W8, [X21 + 0x17F]
	0x03A44E08 LDR X0, [X20]
	0x03A44E0C LDR W8, [X0 + 0xE0]
	0x03A44E10 CBNZ W8, 0x3A44E1C
	0x03A44E14 BL 0x1C16DFC
	0x03A44E18 LDR X0, [X20]
	0x03A44E1C LDR X8, [X0 + 0xB8]
	0x03A44E20 LDR X8, [X8]
	0x03A44E24 CBZ X8, 0x3A44F1C
	0x03A44E28 LDR W21, [X8 + 0x18]
	0x03A44E2C CMP W21, 0x1
	0x03A44E30 B.LT 0x3A44E80
	0x03A44E34 MOV W22, W31
	0x03A44E38 LDR W8, [X0 + 0xE0]
	0x03A44E3C CBNZ W8, 0x3A44E48
	0x03A44E40 BL 0x1C16DFC
	0x03A44E44 LDR X0, [X20]
	0x03A44E48 LDR X8, [X0 + 0xB8]
	0x03A44E4C LDR X8, [X8]
	0x03A44E50 CBZ X8, 0x3A44F1C
	0x03A44E54 LDR W9, [X8 + 0x18]
	0x03A44E58 CMP W22, W9
	0x03A44E5C B.CS 0x3A44F20
	0x03A44E60 ADD X8, X8, W22, 0x2, SXTW
	0x03A44E64 LDR W8, [X8 + 0x20]
	0x03A44E68 CMP W8, W19
	0x03A44E6C B.EQ 0x3A44E84
	0x03A44E70 ADD W22, W22, 0x1
	0x03A44E74 CMP W21, W22
	0x03A44E78 B.NE 0x3A44E38
	0x03A44E7C B 0x3A44ED4
	0x03A44E80 MOV W22, W31
	0x03A44E84 CMP W22, W21
	0x03A44E88 B.GE 0x3A44ED4
	0x03A44E8C SXTW X8, W22
	0x03A44E90 ADD X22, X8, 0x1
	0x03A44E94 CMP W22, W21
	0x03A44E98 B.GE 0x3A44F08
	0x03A44E9C LDR W8, [X0 + 0xE0]
	0x03A44EA0 CBNZ W8, 0x3A44EAC
	0x03A44EA4 BL 0x1C16DFC
	0x03A44EA8 LDR X0, [X20]
	0x03A44EAC LDR X8, [X0 + 0xB8]
	0x03A44EB0 LDR X8, [X8]
	0x03A44EB4 CBZ X8, 0x3A44F1C
	0x03A44EB8 LDR W9, [X8 + 0x18]
	0x03A44EBC CMP W22, W9
	0x03A44EC0 B.CS 0x3A44F20
	0x03A44EC4 ADD X8, X8, X22, 0x2, LSL
	0x03A44EC8 LDR W8, [X8 + 0x20]
	0x03A44ECC SUB W0, W8, W19
	0x03A44ED0 B 0x3A44F0C
	0x03A44ED4 ADRP X8, 0x6AF000
	0x03A44ED8 LDR X8, [X8 + 0xA28]
	0x03A44EDC ADRP X19, 0x711000
	0x03A44EE0 LDR X0, [X8]
	0x03A44EE4 LDR W8, [X0 + 0xE0]
	0x03A44EE8 LDR X19, [X19 + 0xC78]
	0x03A44EEC CBNZ W8, 0x3A44EF4
	0x03A44EF0 BL 0x1C16DFC
	0x03A44EF4 LDR X0, [X19]
	0x03A44EF8 MOV X1, X31
	0x03A44EFC BL 0x3C0649C
	0x03A44F00 MOV W0, W31
	0x03A44F04 B 0x3A44F0C
	0x03A44F08 MOVZ W0, 0x32
	0x03A44F0C LDP X20, X19, [X31 + 0x20]
	0x03A44F10 LDP X22, X21, [X31 + 0x10]
	0x03A44F14 LDR X30, [X31], #0x30
	0x03A44F18 RET
	0x03A44F1C BL 0x1C16F20
	0x03A44F20 BL 0x1C16F28
	0x03A44F24 SUB X31, X31, 0xA0
	0x03A44F28 STR X30, [X31 + 0x80]
	0x03A44F2C STP X20, X19, [X31 + 0x90]
	0x03A44F30 ADRP X19, 0x99E000
	0x03A44F34 ADRP X20, 0x70C000
	0x03A44F38 LDRB W8, [X19 + 0x180]
	0x03A44F3C LDR X20, [X20 + 0x9B0]
	0x03A44F40 TBNZ X8, 0x0, 0x3A44F64
	0x03A44F44 ADRP X0, 0x70C000
	0x03A44F48 LDR X0, [X0 + 0x9B0]
	0x03A44F4C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X22
	005 Move [X31+248], X21
	006 Move [X31+256], X20
	007 Move [X31+264], X19
	008 Move W8, 1
	009 Move X19, X0
	010 Move [X0+64], W31
	011 Move [X0+112], W8
	012 Add X8, X31, 128
	013 Move TEMP, 0
	014 Not TEMP
	015 Move W0, TEMP
	016 Move X1, X31
	017 Call RenderTargetIdentifier.op_Implicit, X0
	018 Move X9, [X31+160]
	019 Move V1, [X31+128]
	020 Move V0, [X31+144]
	021 Move [X31+208], X9
	022 Move [X31+176], V1
	023 Move [X31+184], V0
	024 Move X8, [X19+120]
	025 Move [X19+192], X9
	026 Move [X19+160], V1
	027 Move [X19+168], V0
	028 Move [X19+152], X31
	029 Compare X8, 0
	030 JumpIfEqual {109}
	031 Move W9, [X8+24]
	032 Compare W9, 0
	033 JumpIfEqual {118}
	034 Move [X8+32], X31
	035 Move X20, [X19+128]
	036 Add X8, X31, 88
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W0, TEMP
	040 Move X1, X31
	041 Call RenderTargetIdentifier.op_Implicit, X0
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X8, [X31+120]
	045 Move [X31+128], V0
	046 Move [X31+136], V1
	047 Move [X31+160], X8
	048 Compare X20, 0
	049 JumpIfEqual {109}
	050 Move V0, [X31+128]
	051 Move V1, [X31+144]
	052 Move X8, [X31+160]
	053 Move [X31+48], V0
	054 Move [X31+56], V1
	055 Move [X31+80], X8
	056 Move W8, [X20+24]
	057 Compare W8, 0
	058 JumpIfEqual {118}
	059 Move X8, [X31+80]
	060 Move V1, [X31+48]
	061 Move V0, [X31+64]
	062 Move [X20+64], X8
	063 Move [X20+32], V1
	064 Move [X20+40], V0
	065 Move X8, [X19+120]
	066 Compare X8, 0
	067 JumpIfEqual {109}
	068 Move X20, X31
	069 Move W21, 72
	070 Move W9, [X8+24]
	071 Add X10, X20, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X8, X20
	075 Move [X8+40], X31
	076 Move X22, [X19+128]
	077 Add X8, X31, 128
	078 Move W0, W31
	079 Move X1, X31
	080 Call RenderTargetIdentifier.op_Implicit, X0
	081 Move V0, [X31+128]
	082 Move V1, [X31+144]
	083 Move X8, [X31+160]
	084 Move [X31+176], V0
	085 Move [X31+184], V1
	086 Move [X31+208], X8
	087 Compare X22, 0
	088 JumpIfEqual {109}
	089 Move V0, [X31+176]
	090 Move V1, [X31+192]
	091 Move X8, [X31+208]
	092 Add X20, X20, 1
	093 Move [X31], V0
	094 Move [X31+8], V1
	095 Move [X31+32], X8
	096 Move W8, [X22+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, [X31+32]
	099 Move V1, [X31]
	100 Move V0, [X31+16]
	101 Add X9, X22, X21
	102 Add X21, X21, 40
	103 Move [X9+32], X8
	104 Move [X9], V1
	105 Move [X9+8], V0
	106 Move X8, [X19+120]
	107 Compare X8, 0
	108 JumpIfNotEqual {70}
	109 Call 0x1C17F20
	110 Move X20, [X31+256]
	111 Move X19, [X31+264]
	112 Move X22, [X31+240]
	113 Move X21, [X31+248]
	114 Move X29, [X31+224]
	115 Move X30, [X31+232]
	116 Add X31, X31, 272
	117 Return 
	118 Call 0x1C17F28

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment)

Disassembly:
	0x03A44F50 ADRP X0, 0x70F000
	0x03A44F54 LDR X0, [X0 + 0xFF0]
	0x03A44F58 BL 0x1C16CF4
	0x03A44F5C MOVZ W8, 0x1
	0x03A44F60 STRB W8, [X19 + 0x180]
	0x03A44F64 ADRP X19, 0x70F000
	0x03A44F68 LDR X19, [X19 + 0xFF0]
	0x03A44F6C ADD X8, X31, 0x28
	0x03A44F70 MOVZ W0, 0x2
	0x03A44F74 MOV X1, X31
	0x03A44F78 BL 0x3C4B204
	0x03A44F7C LDUR V0, [X31 + 0x28]
	0x03A44F80 LDUR V1, [X31 + 0x38]
	0x03A44F84 LDR X8, [X31 + 0x48]
	0x03A44F88 LDR X0, [X20]
	0x03A44F8C STP V0, V1, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move X8, [X2+32]
	004 Move V1, [X2]
	005 Move V0, [X2+16]
	006 Move [X0+152], X31
	007 Move [X0+192], X8
	008 Move [X0+160], V1
	009 Move [X0+168], V0
	010 Move X8, [X1+32]
	011 Move V1, [X1]
	012 Move V0, [X1+16]
	013 Add X1, X31, 0
	014 Move [X31+32], X8
	015 Move [X31], V1
	016 Move [X31+8], V0
	017 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	018 Move X30, [X31+48]
	019 Add X31, X31, 64
	020 Return 

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RTHandle depthAttachment)

Disassembly:
	0x03A45078 SUB X31, X31, 0x480
	0x03A4507C ADRP X28, 0x99D000
	0x03A45080 ADRP X27, 0x710000
	0x03A45084 ADRP X21, 0x710000
	0x03A45088 ADRP X26, 0x710000
	0x03A4508C ADRP X25, 0x710000
	0x03A45090 ADRP X24, 0x710000
	0x03A45094 ADRP X23, 0x710000
	0x03A45098 ADRP X22, 0x70F000
	0x03A4509C LDR X27, [X27 + 0xC90]
	0x03A450A0 LDR X21, [X21 + 0xC98]

ISIL:
	001 Move [X31-16], X30
	002 Move [X0+152], X2
	003 Compare X2, 0
	004 JumpIfEqual {12}
	005 Move X8, [X2+72]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 Move [X0+192], X8
	009 Move [X0+160], V1
	010 Move [X0+168], V0
	011 Move X30, [X31+16]
	012 Call 0x1C17F20

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RenderTargetIdentifier[] colorAttachments, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment)

Disassembly:
	0x03A45228 BL 0x29EAF60
	0x03A4522C STR X21, [X19 + 0x18]
	0x03A45230 LDR X0, [X26]
	0x03A45234 MOVZ W1, 0x14
	0x03A45238 BL 0x1C16D6C
	0x03A4523C STR X0, [X19 + 0x28]
	0x03A45240 LDR X0, [X25]
	0x03A45244 BL 0x1C16F10
	0x03A45248 LDR X2, [X24]
	0x03A4524C MOVZ W1, 0xA
	0x03A45250 MOV X21, X0
	0x03A45254 BL 0x29E7F0C
	0x03A45258 STR X21, [X19 + 0x30]
	0x03A4525C LDR X0, [X23]
	0x03A45260 MOVZ W1, 0x8
	0x03A45264 BL 0x1C16D6C
	0x03A45268 LDR X8, [X22]
	0x03A4526C MOV X21, X0
	0x03A45270 LDR W9, [X8 + 0xE0]
	0x03A45274 CBNZ W9, 0x3A45280
	0x03A45278 MOV X0, X8
	0x03A4527C BL 0x1C16DFC
	0x03A45280 ADRP X23, 0x99D000
	0x03A45284 LDRB W8, [X23 + 0x1C4]
	0x03A45288 CBNZ W8, 0x3A452A0
	0x03A4528C ADRP X0, 0x70F000
	0x03A45290 LDR X0, [X0 + 0x10]
	0x03A45294 BL 0x1C16CF4
	0x03A45298 MOVZ W8, 0x1
	0x03A4529C STRB W8, [X23 + 0x1C4]
	0x03A452A0 LDR X0, [X22]
	0x03A452A4 LDR W8, [X0 + 0xE0]
	0x03A452A8 CBNZ W8, 0x3A452B4
	0x03A452AC BL 0x1C16DFC
	0x03A452B0 LDR X0, [X22]
	0x03A452B4 LDR X8, [X0 + 0xB8]
	0x03A452B8 ADD X0, X31, 0x3E8
	0x03A452BC MOVZ W2, 0x78
	0x03A452C0 ADD X1, X8, 0x8
	0x03A452C4 BL 0x3EB1AC0
	0x03A452C8 CBZ X21, 0x3A45914
	0x03A452CC ADD X0, X31, 0x370
	0x03A452D0 ADD X1, X31, 0x3E8
	0x03A452D4 MOVZ W2, 0x78
	0x03A452D8 BL 0x3EB1AC0
	0x03A452DC LDR W8, [X21 + 0x18]
	0x03A452E0 CBZ W8, 0x3A45910
	0x03A452E4 ADD X0, X21, 0x20
	0x03A452E8 ADD X1, X31, 0x370
	0x03A452EC MOVZ W2, 0x78
	0x03A452F0 BL 0x3EB1AC0
	0x03A452F4 LDRB W8, [X23 + 0x1C4]
	0x03A452F8 CBNZ W8, 0x3A45310
	0x03A452FC ADRP X0, 0x70F000
	0x03A45300 LDR X0, [X0 + 0x10]
	0x03A45304 BL 0x1C16CF4
	0x03A45308 MOVZ W8, 0x1
	0x03A4530C STRB W8, [X23 + 0x1C4]
	0x03A45310 LDR X0, [X22]
	0x03A45314 LDR W8, [X0 + 0xE0]
	0x03A45318 CBNZ W8, 0x3A45324
	0x03A4531C BL 0x1C16DFC
	0x03A45320 LDR X0, [X22]
	0x03A45324 LDR X8, [X0 + 0xB8]
	0x03A45328 ADD X0, X31, 0x2F8
	0x03A4532C MOVZ W2, 0x78
	0x03A45330 ADD X1, X8, 0x8
	0x03A45334 BL 0x3EB1AC0
	0x03A45338 LDR W8, [X21 + 0x18]
	0x03A4533C CMP W8, 0x1
	0x03A45340 B.LS 0x3A45910
	0x03A45344 ADD X0, X21, 0x98
	0x03A45348 ADD X1, X31, 0x2F8
	0x03A4534C MOVZ W2, 0x78
	0x03A45350 BL 0x3EB1AC0
	0x03A45354 LDRB W8, [X23 + 0x1C4]
	0x03A45358 CBNZ W8, 0x3A45370
	0x03A4535C ADRP X0, 0x70F000
	0x03A45360 LDR X0, [X0 + 0x10]
	0x03A45364 BL 0x1C16CF4
	0x03A45368 MOVZ W8, 0x1
	0x03A4536C STRB W8, [X23 + 0x1C4]
	0x03A45370 LDR X0, [X22]
	0x03A45374 LDR W8, [X0 + 0xE0]
	0x03A45378 CBNZ W8, 0x3A45384
	0x03A4537C BL 0x1C16DFC
	0x03A45380 LDR X0, [X22]
	0x03A45384 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x99E000
	011 Move X22, 0x710000
	012 Move W8, [X23+374]
	013 Move X22, [X22+16]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x6AF000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x710000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move X0, 0x711000
	028 Move X0, [X0+3072]
	029 Call 0x1C17CF4
	030 Move X0, 0x711000
	031 Move X0, [X0+3080]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+374], W8
	035 Move W8, 1
	036 Move [X31+8], W31
	037 Move [X19+112], W31
	038 Move [X19+64], W8
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Call RenderingUtils.GetValidColorBufferCount, X0
	047 Move W22, W0
	048 Move [X31+12], W0
	049 Move X0, X31
	050 Call SystemInfo.get_supportedRenderTargetCount
	051 Move W8, W22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X23, 0x711000
	054 Move X24, 0x711000
	055 Move X25, 0x6AF000
	056 Move X23, [X23+3080]
	057 Move X24, [X24+3072]
	058 Move X25, [X25+2600]
	059 Add X0, X31, 12
	060 Move X1, X31
	061 Call UInt32.ToString, X0
	062 Move X22, X0
	063 Move X0, X31
	064 Call SystemInfo.get_supportedRenderTargetCount
	065 Move [X31+8], W0
	066 Add X0, X31, 8
	067 Move X1, X31
	068 Call Int32.ToString, X0
	069 Move X8, [X23]
	070 Move X2, [X24]
	071 Move X3, X0
	072 Move X1, X22
	073 Move X0, X8
	074 Move X4, X31
	075 Call String.Concat, X0, X1, X2, X3
	076 Move X8, [X25]
	077 Move X22, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Move X1, X31
	085 Call Debug.LogError, X0
	086 Move [X19+128], X21
	087 Move X8, [X20+32]
	088 Move V1, [X20]
	089 Move V0, [X20+16]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move [X19+192], X8
	095 Move [X19+160], V1
	096 Move [X19+168], V0
	097 Move X20, [X31+64]
	098 Move X19, [X31+72]
	099 Move X30, [X31+16]
	100 Move X25, [X31+24]
	101 Add X31, X31, 80
	102 Return 

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RTHandle[] colorAttachments, UnityEngine.Rendering.RTHandle depthAttachment)

Disassembly:
	0x03A43A44 MOVN W3, 0x0
	0x03A43A48 MOVN W4, 0x0
	0x03A43A4C MOV X0, X8
	0x03A43A50 MOV W2, W31
	0x03A43A54 MOV X5, X31
	0x03A43A58 STR X31, [X8 + 0x20]
	0x03A43A5C STR X10, [X31 + 0x20]
	0x03A43A60 STP V0, V1, [X31]
	0x03A43A64 STP V2, V2, [X8]
	0x03A43A68 BL 0x3C4B098
	0x03A43A6C B 0x3A43A80
	0x03A43A70 LDR X9, [X0 + 0xC0]
	0x03A43A74 LDP V1, V0, [X0 + 0xA0]
	0x03A43A78 STR X9, [X8 + 0x20]
	0x03A43A7C STP V1, V0, [X8]
	0x03A43A80 LDR X30, [X31 + 0x30]
	0x03A43A84 ADD X31, X31, 0x40
	0x03A43A88 RET
	0x03A43A8C BL 0x1C16F20
	0x03A43A90 LDR X0, [X0 + 0x78]
	0x03A43A94 RET
	0x03A43A98 STR X30, [X31 - 0x10]!
	0x03A43A9C LDR X8, [X0 + 0x78]
	0x03A43AA0 CBZ X8, 0x3A43AB8
	0x03A43AA4 LDR W9, [X8 + 0x18]
	0x03A43AA8 CBZ W9, 0x3A43ABC
	0x03A43AAC LDR X0, [X8 + 0x20]
	0x03A43AB0 LDR X30, [X31], #0x10
	0x03A43AB4 RET
	0x03A43AB8 BL 0x1C16F20
	0x03A43ABC BL 0x1C16F28
	0x03A43AC0 LDR X0, [X0 + 0x98]
	0x03A43AC4 RET
	0x03A43AC8 LDR X0, [X0 + 0x18]
	0x03A43ACC RET
	0x03A43AD0 LDR W0, [X0 + 0x20]
	0x03A43AD4 RET
	0x03A43AD8 LDR X0, [X0 + 0x28]
	0x03A43ADC RET
	0x03A43AE0 LDRB W0, [X0 + 0x30]
	0x03A43AE4 RET
	0x03A43AE8 LDR W0, [X0 + 0xC8]
	0x03A43AEC RET
	0x03A43AF0 LDR W0, [X0 + 0xCC]
	0x03A43AF4 RET
	0x03A43AF8 LDP S0, S1, [X0 + 0xD0]
	0x03A43AFC LDP S2, S3, [X0 + 0xD8]
	0x03A43B00 RET
	0x03A43B04 LDR X0, [X0 + 0x38]
	0x03A43B08 RET
	0x03A43B0C STR X1, [X0 + 0x38]
	0x03A43B10 RET
	0x03A43B14 LDRB W0, [X0 + 0x40]
	0x03A43B18 RET
	0x03A43B1C AND W8, W1, 0x1
	0x03A43B20 STRB W8, [X0 + 0x40]
	0x03A43B24 RET
	0x03A43B28 LDRB W0, [X0 + 0x41]
	0x03A43B2C RET
	0x03A43B30 AND W8, W1, 0x1
	0x03A43B34 STRB W8, [X0 + 0x41]
	0x03A43B38 RET
	0x03A43B3C LDRB W0, [X0 + 0x42]
	0x03A43B40 RET
	0x03A43B44 AND W8, W1, 0x1
	0x03A43B48 STRB W8, [X0 + 0x42]
	0x03A43B4C RET
	0x03A43B50 LDR W0, [X0 + 0x44]
	0x03A43B54 RET
	0x03A43B58 STR W1, [X0 + 0x44]
	0x03A43B5C RET
	0x03A43B60 LDR X0, [X0 + 0x68]
	0x03A43B64 RET
	0x03A43B68 STR X1, [X0 + 0x68]
	0x03A43B6C RET
	0x03A43B70 STP X30, X19, [X31 - 0x10]!
	0x03A43B74 LDR X8, [X0 + 0x1D0]
	0x03A43B78 CBZ X8, 0x3A43BA8
	0x03A43B7C LDR X19, [X8 + 0xE0]
	0x03A43B80 CBZ X19, 0x3A43B98
	0x03A43B84 ADD X1, X0, 0x18
	0x03A43B88 MOV X0, X19
	0x03A43B8C MOV X2, X31
	0x03A43B90 BL 0x3A35D04
	0x03A43B94 TBNZ X0, 0x0, 0x3A43B9C
	0x03A43B98 MOV X19, X31
	0x03A43B9C MOV X0, X19
	0x03A43BA0 LDP X30, X19, [X31], #0x10
	0x03A43BA4 RET
	0x03A43BA8 BL 0x1C16F20
	0x03A43BAC STR W1, [X0 + 0xC8]
	0x03A43BB0 RET
	0x03A43BB4 STR X30, [X31 - 0x10]!
	0x03A43BB8 LDR X9, [X0 + 0x18]
	0x03A43BBC CBZ X9, 0x3A43C00
	0x03A43BC0 LDR W8, [X9 + 0x18]
	0x03A43BC4 CMP W8, W2
	0x03A43BC8 B.LS 0x3A43C04
	0x03A43BCC MOV W8, W2
	0x03A43BD0 ADD X9, X9, X8, 0x2, LSL
	0x03A43BD4 STR W1, [X9 + 0x20]
	0x03A43BD8 LDR X9, [X0 + 0x28]
	0x03A43BDC CBZ X9, 0x3A43C00
	0x03A43BE0 LDR W10, [X9 + 0x18]
	0x03A43BE4 CMP W10, W2
	0x03A43BE8 B.LS 0x3A43C04
	0x03A43BEC ADD X8, X9, X8
	0x03A43BF0 MOVZ W9, 0x1
	0x03A43BF4 STRB W9, [X8 + 0x20]
	0x03A43BF8 LDR X30, [X31], #0x10
	0x03A43BFC RET
	0x03A43C00 BL 0x1C16F20
	0x03A43C04 BL 0x1C16F28
	0x03A43C08 STP X30, X21, [X31 - 0x20]!
	0x03A43C0C STP X20, X19, [X31 + 0x10]
	0x03A43C10 ADRP X21, 0x99F000
	0x03A43C14 LDRB W8, [X21 + 0x175]
	0x03A43C18 MOV X20, X1
	0x03A43C1C MOV X19, X0
	0x03A43C20 TBNZ X8, 0x0, 0x3A43C38
	0x03A43C24 ADRP X0, 0x6B0000
	0x03A43C28 LDR X0, [X0 + 0x5A8]
	0x03A43C2C BL 0x1C16CF4
	0x03A43C30 MOVZ W8, 0x1
	0x03A43C34 STRB W8, [X21 + 0x175]
	0x03A43C38 CBZ X20, 0x3A43CE8
	0x03A43C3C LDR X21, [X19 + 0x18]
	0x03A43C40 CBZ X21, 0x3A43CE8
	0x03A43C44 ADRP X8, 0x6B0000
	0x03A43C48 LDR X8, [X8 + 0x5A8]
	0x03A43C4C LDR X0, [X8]
	0x03A43C50 LDR W8, [X0 + 0xE0]
	0x03A43C54 CBNZ W8, 0x3A43C5C
	0x03A43C58 BL 0x1C16DFC
	0x03A43C5C LDR W0, [X20 + 0x18]
	0x03A43C60 LDR W1, [X21 + 0x18]
	0x03A43C64 MOV X2, X31
	0x03A43C68 BL 0x337EE94
	0x03A43C6C CMP W0, 0x1
	0x03A43C70 B.LT 0x3A43CD8
	0x03A43C74 LDR X9, [X19 + 0x18]
	0x03A43C78 LDR W11, [X20 + 0x18]
	0x03A43C7C MOV X8, X31
	0x03A43C80 SXTW X10, W0
	0x03A43C84 ADD X12, X20, 0x20
	0x03A43C88 ADD X13, X9, 0x20
	0x03A43C8C MOVZ W14, 0x1
	0x03A43C90 CMP X11, X8
	0x03A43C94 B.EQ 0x3A43CE4
	0x03A43C98 CBZ X9, 0x3A43CE8
	0x03A43C9C LDR W15, [X9 + 0x18]
	0x03A43CA0 CMP X8, X15
	0x03A43CA4 B.CS 0x3A43CE4
	0x03A43CA8 LDR W15, [X12, X8, LSL #2]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X23, 0x9A0000
	011 Move X22, 0x712000
	012 Move W8, [X23+375]
	013 Move X22, [X22+16]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x6B1000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x712000
	025 Move X0, [X0+2840]
	026 Call 0x1C17CF4
	027 Move X0, 0x712000
	028 Move X0, [X0+16]
	029 Call 0x1C17CF4
	030 Move X0, 0x713000
	031 Move X0, [X0+3072]
	032 Call 0x1C17CF4
	033 Move X0, 0x713000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+375], W8
	038 Move W8, 1
	039 Move [X31+136], W31
	040 Move [X20+112], W8
	041 Move [X20+64], W8
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X31
	049 Call RenderingUtils.GetValidColorBufferCount, X0
	050 Move W22, W0
	051 Move [X31+140], W0
	052 Move X0, X31
	053 Call SystemInfo.get_supportedRenderTargetCount
	054 Move W8, W22
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X23, 0x713000
	057 Move X24, 0x713000
	058 Move X25, 0x6B1000
	059 Move X23, [X23+3080]
	060 Move X24, [X24+3072]
	061 Move X25, [X25+2600]
	062 Add X0, X31, 140
	063 Move X1, X31
	064 Call UInt32.ToString, X0
	065 Move X22, X0
	066 Move X0, X31
	067 Call SystemInfo.get_supportedRenderTargetCount
	068 Move [X31+136], W0
	069 Add X0, X31, 136
	070 Move X1, X31
	071 Call Int32.ToString, X0
	072 Move X8, [X23]
	073 Move X2, [X24]
	074 Move X3, X0
	075 Move X1, X22
	076 Move X0, X8
	077 Move X4, X31
	078 Call String.Concat, X0, X1, X2, X3
	079 Move X8, [X25]
	080 Move X22, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X31
	088 Call Debug.LogError, X0
	089 Move X22, [X20+128]
	090 Move [X20+120], X21
	091 Compare X22, 0
	092 JumpIfEqual {178}
	093 Compare X21, 0
	094 JumpIfEqual {178}
	095 Move W8, [X22+24]
	096 Move W1, [X21+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0x712000
	099 Move X8, [X8+2840]
	100 Move X0, [X8]
	101 Call 0x1C17D6C
	102 Move X22, X0
	103 Move [X20+128], X0
	104 Compare X0, 0
	105 JumpIfEqual {178}
	106 Move W23, W31
	107 Add X24, X21, 32
	108 Move W25, 32
	109 Move W8, [X22+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W8, [X21+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X24]
	114 Compare X8, 0
	115 JumpIfEqual {178}
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Move X9, [X8+72]
	119 Add X0, X31, 96
	120 Add X1, X31, 48
	121 Move [X31+48], V1
	122 Move [X31+56], V0
	123 NotImplemented "Instruction MOVI not yet implemented."
	124 Move TEMP, 0
	125 Not TEMP
	126 Move W3, TEMP
	127 Move TEMP, 0
	128 Not TEMP
	129 Move W4, TEMP
	130 Move W2, W31
	131 Move X5, X31
	132 Move [X31+128], X31
	133 Move [X31+80], X9
	134 Move [X31+96], V0
	135 Move [X31+104], V0
	136 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	137 Move X8, [X31+128]
	138 Move V1, [X31+96]
	139 Move V0, [X31+112]
	140 Move [X31+32], X8
	141 Move [X31], V1
	142 Move [X31+8], V0
	143 Move W8, [X22+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X8, [X31+32]
	146 Move V1, [X31]
	147 Move V0, [X31+16]
	148 Add X9, X22, X25
	149 Add W23, W23, 1
	150 Move [X9+32], X8
	151 Move [X9], V1
	152 Move [X9+8], V0
	153 Move X22, [X20+128]
	154 Add X25, X25, 40
	155 Add X24, X24, 8
	156 Compare X22, 0
	157 JumpIfNotEqual {109}
	158 Compare X19, 0
	159 JumpIfEqual {178}
	160 Move X8, [X19+72]
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move [X20+152], X19
	164 Move [X20+192], X8
	165 Move X22, [X31+176]
	166 Move X21, [X31+184]
	167 Move [X20+160], V1
	168 Move [X20+168], V0
	169 Move X20, [X31+192]
	170 Move X19, [X31+200]
	171 Move X24, [X31+160]
	172 Move X23, [X31+168]
	173 Move X30, [X31+144]
	174 Move X25, [X31+152]
	175 Add X31, X31, 208
	176 Return 
	177 Call 0x1C17F28
	178 Call 0x1C17F20

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RTHandle[] colorAttachments, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Experimental.Rendering.GraphicsFormat[] formats)

Disassembly:
	0x03A45388 ADD X0, X31, 0x280
	0x03A4538C MOVZ W2, 0x78
	0x03A45390 ADD X1, X8, 0x8
	0x03A45394 BL 0x3EB1AC0
	0x03A45398 LDR W8, [X21 + 0x18]
	0x03A4539C CMP W8, 0x2
	0x03A453A0 B.LS 0x3A45910
	0x03A453A4 ADD X0, X21, 0x110
	0x03A453A8 ADD X1, X31, 0x280
	0x03A453AC MOVZ W2, 0x78
	0x03A453B0 BL 0x3EB1AC0
	0x03A453B4 LDRB W8, [X23 + 0x1C4]
	0x03A453B8 CBNZ W8, 0x3A453D0
	0x03A453BC ADRP X0, 0x70F000
	0x03A453C0 LDR X0, [X0 + 0x10]
	0x03A453C4 BL 0x1C16CF4
	0x03A453C8 MOVZ W8, 0x1
	0x03A453CC STRB W8, [X23 + 0x1C4]
	0x03A453D0 LDR X0, [X22]
	0x03A453D4 LDR W8, [X0 + 0xE0]
	0x03A453D8 CBNZ W8, 0x3A453E4
	0x03A453DC BL 0x1C16DFC
	0x03A453E0 LDR X0, [X22]
	0x03A453E4 LDR X8, [X0 + 0xB8]
	0x03A453E8 ADD X0, X31, 0x208
	0x03A453EC MOVZ W2, 0x78
	0x03A453F0 ADD X1, X8, 0x8
	0x03A453F4 BL 0x3EB1AC0
	0x03A453F8 LDR W8, [X21 + 0x18]
	0x03A453FC CMP W8, 0x3
	0x03A45400 B.LS 0x3A45910

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X3
	005 Move X20, X0
	006 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	007 Compare X19, 0
	008 JumpIfEqual {33}
	009 Move W8, [X19+24]
	010 Move X9, X8
	011 ShiftRight X9, 32
	012 And X9, X9, 0x7FFFFFFF
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X10, [X20+104]
	015 Move X9, X31
	016 Move X11, W8
	017 Add X13, X19, 32
	018 Add X12, X10, 32
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X10, 0
	021 JumpIfEqual {33}
	022 Move W14, [X10+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W14, [X13]
	025 Move [X12], W14
	026 Add X9, X9, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 
	032 Call 0x1C17F28
	033 Call 0x1C17F20

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RenderTargetIdentifier colorAttachment)

Disassembly:
	0x03A44F90 STR X8, [X31 + 0x70]
	0x03A44F94 LDR W8, [X0 + 0xE0]
	0x03A44F98 CBNZ W8, 0x3A44FA0
	0x03A44F9C BL 0x1C16DFC
	0x03A44FA0 LDP V0, V1, [X31 + 0x50]
	0x03A44FA4 LDR X8, [X31 + 0x70]
	0x03A44FA8 ADD X0, X31, 0x0
	0x03A44FAC MOV X1, X31
	0x03A44FB0 STP V0, V1, [X31]
	0x03A44FB4 STR X8, [X31 + 0x20]
	0x03A44FB8 BL 0x39D4600
	0x03A44FBC LDR X8, [X19]
	0x03A44FC0 LDP X20, X19, [X31 + 0x90]
	0x03A44FC4 LDR X30, [X31 + 0x80]
	0x03A44FC8 LDR X8, [X8 + 0xB8]
	0x03A44FCC STR X0, [X8]
	0x03A44FD0 ADD X31, X31, 0xA0
	0x03A44FD4 RET
	0x03A44FD8 STR X30, [X31 - 0x20]!
	0x03A44FDC STP X20, X19, [X31 + 0x10]
	0x03A44FE0 MOV X20, X0
	0x03A44FE4 ADRP X0, 0x710000
	0x03A44FE8 LDR X0, [X0 + 0x8C8]
	0x03A44FEC MOV X19, X1
	0x03A44FF0 BL 0x1C16D08
	0x03A44FF4 BL 0x19903D0
	0x03A44FF8 MOV X0, X20
	0x03A44FFC MOV X1, X19
	0x03A45000 BL 0x3A45060
	0x03A45004 ADRP X19, 0x710000
	0x03A45008 LDR X19, [X19 + 0xC80]
	0x03A4500C MOV X0, X19
	0x03A45010 BL 0x1C16D08
	0x03A45014 BL 0x19903D0
	0x03A45018 MOV X0, X19
	0x03A4501C BL 0x1C16D08
	0x03A45020 LDR X8, [X0 + 0xB8]
	0x03A45024 ADRP X0, 0x6AE000
	0x03A45028 LDR X19, [X8]
	0x03A4502C LDR X0, [X0 + 0xB40]
	0x03A45030 BL 0x1C16D08
	0x03A45034 BL 0x1C16F10
	0x03A45038 MOV X1, X19
	0x03A4503C MOV X2, X31
	0x03A45040 MOV X20, X0
	0x03A45044 BL 0x3379A44
	0x03A45048 ADRP X0, 0x710000
	0x03A4504C LDR X0, [X0 + 0xC88]
	0x03A45050 BL 0x1C16D08
	0x03A45054 MOV X1, X0
	0x03A45058 MOV X0, X20
	0x03A4505C BL 0x1C16DEC
	0x03A45060 STP X29, X30, [X31 - 0x60]!
	0x03A45064 STP X28, X27, [X31 + 0x10]
	0x03A45068 STP X26, X25, [X31 + 0x20]
	0x03A4506C STP X24, X23, [X31 + 0x30]
	0x03A45070 STP X22, X21, [X31 + 0x40]
	0x03A45074 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+160], X22
	004 Move [X31+168], X21
	005 Move [X31+176], X20
	006 Move [X31+184], X19
	007 Move W8, 1
	008 Move [X0+112], W31
	009 Move [X0+64], W8
	010 Move X9, [X1+32]
	011 Move V0, [X1]
	012 Move V1, [X1+16]
	013 Move X8, [X0+128]
	014 Move [X31+128], X9
	015 Move [X31+96], V0
	016 Move [X31+104], V1
	017 Compare X8, 0
	018 JumpIfEqual {66}
	019 Move V0, [X31+96]
	020 Move V1, [X31+112]
	021 Move X9, [X31+128]
	022 Move [X31+48], V0
	023 Move [X31+56], V1
	024 Move [X31+80], X9
	025 Move W9, [X8+24]
	026 Compare W9, 0
	027 JumpIfEqual {74}
	028 Move X9, [X31+80]
	029 Move V1, [X31+48]
	030 Move V0, [X31+64]
	031 Move X19, X0
	032 Move [X8+64], X9
	033 Move [X8+32], V1
	034 Move [X8+40], V0
	035 Move X20, [X0+128]
	036 Compare X20, 0
	037 JumpIfEqual {66}
	038 Move W21, 1
	039 Move W22, 72
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X31, 96
	043 Move W0, W31
	044 Move X1, X31
	045 Call RenderTargetIdentifier.op_Implicit, X0
	046 Move V0, [X31+96]
	047 Move V1, [X31+112]
	048 Move X8, [X31+128]
	049 Move [X31], V0
	050 Move [X31+8], V1
	051 Move [X31+32], X8
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X31+32]
	055 Move V1, [X31]
	056 Move V0, [X31+16]
	057 Add X9, X20, X22
	058 Add X22, X22, 40
	059 Move [X9+32], X8
	060 Move [X9], V1
	061 Move [X9+8], V0
	062 Move X20, [X19+128]
	063 Add X21, X21, 1
	064 Compare X20, 0
	065 JumpIfNotEqual {40}
	066 Call 0x1C17F20
	067 Move X20, [X31+176]
	068 Move X19, [X31+184]
	069 Move X22, [X31+160]
	070 Move X21, [X31+168]
	071 Move X30, [X31+144]
	072 Add X31, X31, 192
	073 Return 
	074 Call 0x1C17F28

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RTHandle colorAttachment)

Disassembly:
	0x03A450A4 LDRB W8, [X28 + 0x19B]
	0x03A450A8 LDR X26, [X26 + 0xCA0]
	0x03A450AC LDR X25, [X25 + 0xCA8]
	0x03A450B0 LDR X24, [X24 + 0xCB0]
	0x03A450B4 LDR X23, [X23 + 0xCB8]
	0x03A450B8 LDR X22, [X22 + 0x10]
	0x03A450BC MOV X20, X1
	0x03A450C0 MOV X19, X0
	0x03A450C4 TBNZ X8, 0x0, 0x3A45208
	0x03A450C8 ADRP X0, 0x710000
	0x03A450CC LDR X0, [X0 + 0xCB8]
	0x03A450D0 BL 0x1C16CF4
	0x03A450D4 ADRP X0, 0x6B0000
	0x03A450D8 LDR X0, [X0 + 0x9B8]
	0x03A450DC BL 0x1C16CF4
	0x03A450E0 ADRP X0, 0x710000
	0x03A450E4 LDR X0, [X0 + 0xC98]
	0x03A450E8 BL 0x1C16CF4
	0x03A450EC ADRP X0, 0x710000
	0x03A450F0 LDR X0, [X0 + 0xCB0]
	0x03A450F4 BL 0x1C16CF4
	0x03A450F8 ADRP X0, 0x710000
	0x03A450FC LDR X0, [X0 + 0xCA8]
	0x03A45100 BL 0x1C16CF4
	0x03A45104 ADRP X0, 0x710000
	0x03A45108 LDR X0, [X0 + 0xC90]
	0x03A4510C BL 0x1C16CF4
	0x03A45110 ADRP X0, 0x6B4000
	0x03A45114 LDR X0, [X0 + 0x690]
	0x03A45118 BL 0x1C16CF4
	0x03A4511C ADRP X0, 0x6B4000
	0x03A45120 LDR X0, [X0 + 0x698]
	0x03A45124 BL 0x1C16CF4
	0x03A45128 ADRP X0, 0x6B4000
	0x03A4512C LDR X0, [X0 + 0x6A0]
	0x03A45130 BL 0x1C16CF4
	0x03A45134 ADRP X0, 0x710000
	0x03A45138 LDR X0, [X0 + 0xCC0]
	0x03A4513C BL 0x1C16CF4
	0x03A45140 ADRP X0, 0x710000
	0x03A45144 LDR X0, [X0 + 0xCA0]
	0x03A45148 BL 0x1C16CF4
	0x03A4514C ADRP X0, 0x710000
	0x03A45150 LDR X0, [X0 + 0xCC8]
	0x03A45154 BL 0x1C16CF4
	0x03A45158 ADRP X0, 0x710000
	0x03A4515C LDR X0, [X0 + 0xCD0]
	0x03A45160 BL 0x1C16CF4
	0x03A45164 ADRP X0, 0x6B4000
	0x03A45168 LDR X0, [X0 + 0x6B0]
	0x03A4516C BL 0x1C16CF4
	0x03A45170 ADRP X0, 0x710000
	0x03A45174 LDR X0, [X0 + 0xCD8]
	0x03A45178 BL 0x1C16CF4
	0x03A4517C ADRP X0, 0x710000
	0x03A45180 LDR X0, [X0 + 0xCE0]
	0x03A45184 BL 0x1C16CF4
	0x03A45188 ADRP X0, 0x6B4000
	0x03A4518C LDR X0, [X0 + 0x6B8]
	0x03A45190 BL 0x1C16CF4
	0x03A45194 ADRP X0, 0x710000
	0x03A45198 LDR X0, [X0 + 0xCE8]
	0x03A4519C BL 0x1C16CF4
	0x03A451A0 ADRP X0, 0x6AE000
	0x03A451A4 LDR X0, [X0 + 0x598]
	0x03A451A8 BL 0x1C16CF4
	0x03A451AC ADRP X0, 0x70B000
	0x03A451B0 LDR X0, [X0 + 0x598]
	0x03A451B4 BL 0x1C16CF4
	0x03A451B8 ADRP X0, 0x710000
	0x03A451BC LDR X0, [X0 + 0xBF0]
	0x03A451C0 BL 0x1C16CF4
	0x03A451C4 ADRP X0, 0x70F000
	0x03A451C8 LDR X0, [X0 + 0x8F0]
	0x03A451CC BL 0x1C16CF4
	0x03A451D0 ADRP X0, 0x70F000
	0x03A451D4 LDR X0, [X0 + 0x10]
	0x03A451D8 BL 0x1C16CF4
	0x03A451DC ADRP X0, 0x70F000
	0x03A451E0 LDR X0, [X0 + 0x8C8]
	0x03A451E4 BL 0x1C16CF4
	0x03A451E8 ADRP X0, 0x6D7000
	0x03A451EC LDR X0, [X0 + 0x8A8]
	0x03A451F0 BL 0x1C16CF4
	0x03A451F4 ADRP X0, 0x710000
	0x03A451F8 LDR X0, [X0 + 0xCF0]
	0x03A451FC BL 0x1C16CF4
	0x03A45200 MOVZ W8, 0x1
	0x03A45204 STRB W8, [X28 + 0x19B]
	0x03A45208 LDR X0, [X27]
	0x03A4520C STR X31, [X31 + 0x468]
	0x03A45210 STR X31, [X31 + 0x460]
	0x03A45214 STR X31, [X31 + 0x470]
	0x03A45218 BL 0x1C16F10
	0x03A4521C LDR X2, [X21]
	0x03A45220 MOVZ W1, 0xA
	0x03A45224 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X22
	005 Move [X31+248], X21
	006 Move [X31+256], X20
	007 Move [X31+264], X19
	008 Move X21, [X0+120]
	009 Move W8, 1
	010 Move [X0+112], W8
	011 Move [X0+64], W8
	012 Compare X21, 0
	013 JumpIfEqual {113}
	014 Move X20, X1
	015 Move X19, X0
	016 Compare X1, 0
	017 JumpIfEqual {24}
	018 Move X8, [X21]
	019 Move X0, X20
	020 Move X1, [X8+64]
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfEqual {123}
	024 Move W8, [X21+24]
	025 Compare W8, 0
	026 JumpIfEqual {122}
	027 Move [X21+32], X20
	028 Compare X20, 0
	029 JumpIfEqual {113}
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move X8, [X20+72]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X21, [X19+128]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Add X0, X31, 176
	036 Add X1, X31, 128
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W3, TEMP
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W4, TEMP
	043 Move W2, W31
	044 Move X5, X31
	045 Move [X31+208], X31
	046 Move [X31+160], X8
	047 Move [X31+128], V0
	048 Move [X31+136], V1
	049 Move [X31+176], V2
	050 Move [X31+184], V2
	051 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	052 Compare X21, 0
	053 JumpIfEqual {113}
	054 Move V0, [X31+176]
	055 Move V1, [X31+192]
	056 Move X8, [X31+208]
	057 Move [X31+80], V0
	058 Move [X31+88], V1
	059 Move [X31+112], X8
	060 Move W8, [X21+24]
	061 Compare W8, 0
	062 JumpIfEqual {122}
	063 Move X8, [X31+112]
	064 Move V1, [X31+80]
	065 Move V0, [X31+96]
	066 Move [X21+64], X8
	067 Move [X21+32], V1
	068 Move [X21+40], V0
	069 Move X8, [X19+120]
	070 Compare X8, 0
	071 JumpIfEqual {113}
	072 Move X20, X31
	073 Move W21, 72
	074 Move W9, [X8+24]
	075 Add X10, X20, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X8, X20
	079 Move [X8+40], X31
	080 Move X22, [X19+128]
	081 Add X8, X31, 40
	082 Move W0, W31
	083 Move X1, X31
	084 Call RenderTargetIdentifier.op_Implicit, X0
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X8, [X31+72]
	088 Move [X31+176], V0
	089 Move [X31+184], V1
	090 Move [X31+208], X8
	091 Compare X22, 0
	092 JumpIfEqual {113}
	093 Move V0, [X31+176]
	094 Move V1, [X31+192]
	095 Move X8, [X31+208]
	096 Add X20, X20, 1
	097 Move [X31], V0
	098 Move [X31+8], V1
	099 Move [X31+32], X8
	100 Move W8, [X22+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X31+32]
	103 Move V1, [X31]
	104 Move V0, [X31+16]
	105 Add X9, X22, X21
	106 Add X21, X21, 40
	107 Move [X9+32], X8
	108 Move [X9], V1
	109 Move [X9+8], V0
	110 Move X8, [X19+120]
	111 Compare X8, 0
	112 JumpIfNotEqual {74}
	113 Call 0x1C17F20
	114 Move X20, [X31+256]
	115 Move X19, [X31+264]
	116 Move X22, [X31+240]
	117 Move X21, [X31+248]
	118 Move X29, [X31+224]
	119 Move X30, [X31+232]
	120 Add X31, X31, 272
	121 Return 
	122 Call 0x1C17F28
	123 Call 0x1C17F44
	124 Move X1, X31
	125 Call 0x1C17DEC

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RenderTargetIdentifier[] colorAttachments)

Disassembly:
	0x03A45404 ADD X0, X21, 0x188
	0x03A45408 ADD X1, X31, 0x208
	0x03A4540C MOVZ W2, 0x78
	0x03A45410 BL 0x3EB1AC0
	0x03A45414 LDRB W8, [X23 + 0x1C4]
	0x03A45418 CBNZ W8, 0x3A45430
	0x03A4541C ADRP X0, 0x70F000
	0x03A45420 LDR X0, [X0 + 0x10]
	0x03A45424 BL 0x1C16CF4
	0x03A45428 MOVZ W8, 0x1
	0x03A4542C STRB W8, [X23 + 0x1C4]
	0x03A45430 LDR X0, [X22]
	0x03A45434 LDR W8, [X0 + 0xE0]
	0x03A45438 CBNZ W8, 0x3A45444
	0x03A4543C BL 0x1C16DFC
	0x03A45440 LDR X0, [X22]
	0x03A45444 LDR X8, [X0 + 0xB8]
	0x03A45448 ADD X0, X31, 0x190
	0x03A4544C MOVZ W2, 0x78
	0x03A45450 ADD X1, X8, 0x8
	0x03A45454 BL 0x3EB1AC0
	0x03A45458 LDR W8, [X21 + 0x18]
	0x03A4545C CMP W8, 0x4
	0x03A45460 B.LS 0x3A45910
	0x03A45464 ADD X0, X21, 0x200
	0x03A45468 ADD X1, X31, 0x190
	0x03A4546C MOVZ W2, 0x78
	0x03A45470 BL 0x3EB1AC0
	0x03A45474 LDRB W8, [X23 + 0x1C4]
	0x03A45478 CBNZ W8, 0x3A45490
	0x03A4547C ADRP X0, 0x70F000
	0x03A45480 LDR X0, [X0 + 0x10]
	0x03A45484 BL 0x1C16CF4
	0x03A45488 MOVZ W8, 0x1
	0x03A4548C STRB W8, [X23 + 0x1C4]
	0x03A45490 LDR X0, [X22]
	0x03A45494 LDR W8, [X0 + 0xE0]
	0x03A45498 CBNZ W8, 0x3A454A4
	0x03A4549C BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x99E000
	008 Move X21, 0x70F000
	009 Move W8, [X22+376]
	010 Move X21, [X21+4080]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x70F000
	018 Move X0, [X0+4080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+376], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {49}
	032 Move X9, [X8+72]
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Add X2, X31, 0
	036 Move X0, X20
	037 Move X1, X19
	038 Move [X31+32], X9
	039 Move [X31], V1
	040 Move [X31+8], V0
	041 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X30, [X31+48]
	047 Add X31, X31, 96
	048 Return 
	049 Call 0x1C17F20

Method: System.Void ConfigureTarget(UnityEngine.Rendering.RTHandle[] colorAttachments)

Disassembly:
	0x03A454A0 LDR X0, [X22]
	0x03A454A4 LDR X8, [X0 + 0xB8]
	0x03A454A8 ADD X0, X31, 0x118
	0x03A454AC MOVZ W2, 0x78
	0x03A454B0 ADD X1, X8, 0x8
	0x03A454B4 BL 0x3EB1AC0
	0x03A454B8 LDR W8, [X21 + 0x18]
	0x03A454BC CMP W8, 0x5
	0x03A454C0 B.LS 0x3A45910
	0x03A454C4 ADD X0, X21, 0x278
	0x03A454C8 ADD X1, X31, 0x118
	0x03A454CC MOVZ W2, 0x78
	0x03A454D0 BL 0x3EB1AC0
	0x03A454D4 LDRB W8, [X23 + 0x1C4]
	0x03A454D8 CBNZ W8, 0x3A454F0
	0x03A454DC ADRP X0, 0x70F000
	0x03A454E0 LDR X0, [X0 + 0x10]
	0x03A454E4 BL 0x1C16CF4
	0x03A454E8 MOVZ W8, 0x1
	0x03A454EC STRB W8, [X23 + 0x1C4]
	0x03A454F0 LDR X0, [X22]
	0x03A454F4 LDR W8, [X0 + 0xE0]
	0x03A454F8 CBNZ W8, 0x3A45504
	0x03A454FC BL 0x1C16DFC
	0x03A45500 LDR X0, [X22]
	0x03A45504 LDR X8, [X0 + 0xB8]
	0x03A45508 ADD X0, X31, 0xA0
	0x03A4550C MOVZ W2, 0x78

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x99E000
	007 Move X21, 0x70F000
	008 Move W8, [X22+377]
	009 Move X21, [X21+4080]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x70F000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+377], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, X20
	029 Move X1, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X2, [X8]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	037 Return 

Method: System.Void ConfigureClear(UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A45510 ADD X1, X8, 0x8
	0x03A45514 BL 0x3EB1AC0
	0x03A45518 LDR W8, [X21 + 0x18]
	0x03A4551C CMP W8, 0x6

ISIL:
	001 Move [X0+204], W1
	002 Move [X0+208], S0
	003 Move [X0+216], S1
	004 Move [X0+216], S2
	005 Move [X0+224], S3
	006 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A45520 B.LS 0x3A45910

ISIL:
	001 Return 

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03A45524 ADD X0, X21, 0x2F0

ISIL:
	001 Return 

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A45528 ADD X1, X31, 0xA0

ISIL:
	001 Return 

Method: System.Void OnFinishCameraStackRendering(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4552C MOVZ W2, 0x78

ISIL:
	001 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void RecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A45530 BL 0x3EB1AC0
	0x03A45534 LDRB W8, [X23 + 0x1C4]
	0x03A45538 CBNZ W8, 0x3A45550
	0x03A4553C ADRP X0, 0x70F000
	0x03A45540 LDR X0, [X0 + 0x10]
	0x03A45544 BL 0x1C16CF4
	0x03A45548 MOVZ W8, 0x1
	0x03A4554C STRB W8, [X23 + 0x1C4]
	0x03A45550 LDR X0, [X22]
	0x03A45554 LDR W8, [X0 + 0xE0]
	0x03A45558 CBNZ W8, 0x3A45564
	0x03A4555C BL 0x1C16DFC
	0x03A45560 LDR X0, [X22]
	0x03A45564 LDR X8, [X0 + 0xB8]
	0x03A45568 ADD X0, X31, 0x28
	0x03A4556C MOVZ W2, 0x78
	0x03A45570 ADD X1, X8, 0x8
	0x03A45574 BL 0x3EB1AC0
	0x03A45578 LDR W8, [X21 + 0x18]
	0x03A4557C CMP W8, 0x7
	0x03A45580 B.LS 0x3A45910
	0x03A45584 ADRP X24, 0x6B0000
	0x03A45588 ADRP X25, 0x710000
	0x03A4558C ADRP X26, 0x70F000
	0x03A45590 ADRP X27, 0x710000
	0x03A45594 ADRP X28, 0x710000
	0x03A45598 ADRP X29, 0x710000
	0x03A4559C ADRP X23, 0x6B4000
	0x03A455A0 ADRP X22, 0x710000
	0x03A455A4 LDR X24, [X24 + 0x9B8]
	0x03A455A8 LDR X25, [X25 + 0xBF0]
	0x03A455AC LDR X26, [X26 + 0x8F0]
	0x03A455B0 LDR X27, [X27 + 0xCC0]
	0x03A455B4 LDR X28, [X28 + 0xCE8]
	0x03A455B8 LDR X29, [X29 + 0xCD8]
	0x03A455BC LDR X23, [X23 + 0x6B8]
	0x03A455C0 LDR X22, [X22 + 0xCE0]
	0x03A455C4 ADD X0, X21, 0x368
	0x03A455C8 ADD X1, X31, 0x28
	0x03A455CC MOVZ W2, 0x78
	0x03A455D0 BL 0x3EB1AC0
	0x03A455D4 STR X21, [X19 + 0x38]
	0x03A455D8 LDR X0, [X24]
	0x03A455DC MOVZ W1, 0x8
	0x03A455E0 BL 0x1C16D6C
	0x03A455E4 STR X0, [X19 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x99E000
	008 Move X21, 0x711000
	009 Move X22, 0x711000
	010 Move X20, 0x6AF000
	011 Move W8, [X23+378]
	012 Move X21, [X21+3160]
	013 Move X22, [X22+3168]
	014 Move X20, [X20+2600]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x6AF000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x711000
	024 Move X0, [X0+3160]
	025 Call 0x1C17CF4
	026 Move X0, 0x711000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+378], W8
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+360]
	034 Move X1, [X8+368]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X8, [X21]
	037 Move X2, [X22]
	038 Move X1, X0
	039 Move X3, X31
	040 Move X0, X8
	041 Call String.Concat, X0, X1, X2
	042 Move X8, [X20]
	043 Move X19, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call Debug.LogWarning, X0
	058 Return 

Method: System.Void Blit(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.RenderTargetIdentifier destination, UnityEngine.Material material = null, System.Int32 passIndex = 0)

Disassembly:
	0x03A455E8 LDR X0, [X25]
	0x03A455EC MOVZ W1, 0x8
	0x03A455F0 BL 0x1C16D6C
	0x03A455F4 MOVZ W8, 0x1
	0x03A455F8 STR X0, [X19 + 0xC0]
	0x03A455FC STRB W8, [X19 + 0xD8]
	0x03A45600 LDR X0, [X26]
	0x03A45604 BL 0x1C16F10
	0x03A45608 MOV X1, X31
	0x03A4560C MOV X21, X0
	0x03A45610 BL 0x3A532F8
	0x03A45614 STR X21, [X19 + 0xE8]
	0x03A45618 LDR X0, [X27]
	0x03A4561C MOV W1, W31
	0x03A45620 BL 0x1C16D6C
	0x03A45624 STR X0, [X19 + 0xF0]
	0x03A45628 LDR X0, [X28]
	0x03A4562C BL 0x1C16F10
	0x03A45630 LDR X2, [X29]
	0x03A45634 MOVZ W1, 0x20
	0x03A45638 MOV X21, X0
	0x03A4563C BL 0x301B830
	0x03A45640 STR X21, [X19 + 0x100]
	0x03A45644 LDR X0, [X23]
	0x03A45648 BL 0x1C16F10
	0x03A4564C LDR X2, [X22]
	0x03A45650 MOVZ W1, 0xA
	0x03A45654 MOV X21, X0
	0x03A45658 BL 0x301B830
	0x03A4565C MOVZ W8, 0x101
	0x03A45660 MOV X0, X19
	0x03A45664 MOV X1, X31
	0x03A45668 STR X21, [X19 + 0x108]
	0x03A4566C STRH W8, [X19 + 0x1A0]
	0x03A45670 BL 0x33BDD8C
	0x03A45674 CBZ X20, 0x3A45914
	0x03A45678 ADRP X21, 0x710000
	0x03A4567C ADRP X22, 0x70B000
	0x03A45680 LDR X21, [X21 + 0xCF0]
	0x03A45684 LDR X22, [X22 + 0x598]
	0x03A45688 MOV X0, X20
	0x03A4568C MOV X1, X31
	0x03A45690 BL 0x3C389D4
	0x03A45694 LDR X8, [X21]
	0x03A45698 MOV X1, X0
	0x03A4569C MOV X2, X31
	0x03A456A0 MOV X0, X8
	0x03A456A4 BL 0x321B938
	0x03A456A8 LDR X8, [X22]
	0x03A456AC MOV X21, X0
	0x03A456B0 MOV X0, X8
	0x03A456B4 BL 0x1C16F10
	0x03A456B8 MOV X1, X21
	0x03A456BC MOV X2, X31
	0x03A456C0 MOV X22, X0
	0x03A456C4 BL 0x39B19AC
	0x03A456C8 STR X22, [X19 + 0xD0]
	0x03A456CC LDR X0, [X20 + 0x28]
	0x03A456D0 CBZ X0, 0x3A45914
	0x03A456D4 ADRP X8, 0x6B4000
	0x03A456D8 LDR X8, [X8 + 0x6B0]
	0x03A456DC ADRP X26, 0x6B4000
	0x03A456E0 ADRP X24, 0x6AE000
	0x03A456E4 ADRP X27, 0x710000
	0x03A456E8 LDR X26, [X26 + 0x698]
	0x03A456EC LDR X24, [X24 + 0x598]
	0x03A456F0 LDR X27, [X27 + 0xCC8]
	0x03A456F4 LDR X1, [X8]
	0x03A456F8 ADRP X23, 0x6D7000
	0x03A456FC ADRP X22, 0x70F000
	0x03A45700 ADRP X25, 0x6B4000
	0x03A45704 LDR X23, [X23 + 0x8A8]
	0x03A45708 LDR X22, [X22 + 0x8C8]
	0x03A4570C LDR X25, [X25 + 0x690]
	0x03A45710 ADD X8, X31, 0x10
	0x03A45714 BL 0x301CB58
	0x03A45718 LDR V0, [X31 + 0x1]
	0x03A4571C LDR X8, [X31 + 0x20]
	0x03A45720 STR V0, [X31 + 0x46]
	0x03A45724 STR X8, [X31 + 0x470]
	0x03A45728 LDR X1, [X26]
	0x03A4572C ADD X0, X31, 0x460
	0x03A45730 BL 0x2BC4350
	0x03A45734 TBZ X0, 0x0, 0x3A457D0
	0x03A45738 LDR X0, [X24]
	0x03A4573C LDR X21, [X31 + 0x470]
	0x03A45740 LDR W8, [X0 + 0xE0]
	0x03A45744 CBNZ W8, 0x3A4574C
	0x03A45748 BL 0x1C16DFC
	0x03A4574C MOV X0, X21
	0x03A45750 MOV X1, X31
	0x03A45754 MOV X2, X31
	0x03A45758 BL 0x3C3883C
	0x03A4575C TBNZ X0, 0x0, 0x3A45728

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+384], D11
	003 Move [X31+392], D10
	004 Move [X31+400], D9
	005 Move [X31+408], D8
	006 Move [X31+416], X29
	007 Move [X31+424], X30
	008 Move [X31+432], X26
	009 Move [X31+440], X25
	010 Move [X31+448], X24
	011 Move [X31+456], X23
	012 Move [X31+464], X22
	013 Move [X31+472], X21
	014 Move [X31+480], X20
	015 Move [X31+488], X19
	016 Move X26, 0x99E000
	017 Move X25, 0x710000
	018 Move W8, [X26+379]
	019 Move X25, [X25+2248]
	020 Move W19, W5
	021 Move X20, X4
	022 Move X22, X3
	023 Move X23, X2
	024 Move X21, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x710000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+379], W8
	035 Move X8, [X22+32]
	036 Move V1, [X22]
	037 Move V0, [X22+16]
	038 Move W0, 2
	039 Move X1, X31
	040 Move [X31+368], X8
	041 Add X8, X31, 240
	042 Move [X31+336], V1
	043 Move [X31+344], V0
	044 Call RenderTargetIdentifier.op_Implicit, X0
	045 Move V0, [X31+240]
	046 Move V1, [X31+256]
	047 Move X8, [X31+272]
	048 Move X0, [X25]
	049 Move [X31+288], V0
	050 Move [X31+296], V1
	051 Move [X31+320], X8
	052 Move W25, [X24+204]
	053 Move S11, [X24+208]
	054 Move S9, [X24+212]
	055 Move W8, [X0+224]
	056 Move S10, [X24+216]
	057 Move S8, [X24+220]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move V0, [X31+336]
	062 Move V1, [X31+352]
	063 Move V2, [X31+288]
	064 Move V3, [X31+304]
	065 Move X8, [X31+368]
	066 Move X9, [X31+320]
	067 Move [X31+192], V0
	068 Move [X31+200], V1
	069 Move [X31+144], V2
	070 Move [X31+152], V3
	071 Add X1, X31, 192
	072 Add X2, X31, 144
	073 Move X0, X21
	074 Move W3, W25
	075 Move V0, V11
	076 Move V1, V9
	077 Move V2, V10
	078 Move V3, V8
	079 Move [X31+224], X8
	080 Move [X31+176], X9
	081 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	082 Move X8, [X23+32]
	083 Move V1, [X23]
	084 Move V0, [X23+16]
	085 Move [X31+272], X8
	086 Move [X31+240], V1
	087 Move [X31+248], V0
	088 Move X8, [X22+32]
	089 Move V1, [X22]
	090 Move V0, [X22+16]
	091 Move [X31+128], X8
	092 Move [X31+96], V1
	093 Move [X31+104], V0
	094 Compare X21, 0
	095 JumpIfEqual {131}
	096 Move V0, [X31+240]
	097 Move V1, [X31+256]
	098 Move X8, [X31+272]
	099 Move V2, [X31+96]
	100 Move V3, [X31+112]
	101 Move X9, [X31+128]
	102 Add X1, X31, 48
	103 Add X2, X31, 0
	104 Move X0, X21
	105 Move X3, X20
	106 Move W4, W19
	107 Move X5, X31
	108 Move [X31+48], V0
	109 Move [X31+56], V1
	110 Move [X31+80], X8
	111 Move [X31], V2
	112 Move [X31+8], V3
	113 Move [X31+32], X9
	114 Call CommandBuffer.Blit, X0, X1, X2, X3, X4
	115 Move X20, [X31+480]
	116 Move X19, [X31+488]
	117 Move X22, [X31+464]
	118 Move X21, [X31+472]
	119 Move X24, [X31+448]
	120 Move X23, [X31+456]
	121 Move X26, [X31+432]
	122 Move X25, [X31+440]
	123 Move X29, [X31+416]
	124 Move X30, [X31+424]
	125 Move D9, [X31+400]
	126 Move D8, [X31+408]
	127 Move D11, [X31+384]
	128 Move D10, [X31+392]
	129 Add X31, X31, 496
	130 Return 
	131 Call 0x1C17F20

Method: System.Void Blit(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Material material = null, System.Int32 passIndex = 0)

Disassembly:
	0x03A45A30 MOV X1, X19
	0x03A45A34 MOV X2, X31
	0x03A45A38 MOV X20, X0
	0x03A45A3C BL 0x3379A44
	0x03A45A40 ADRP X0, 0x710000
	0x03A45A44 LDR X0, [X0 + 0xD00]
	0x03A45A48 BL 0x1C16D08
	0x03A45A4C MOV X1, X0
	0x03A45A50 MOV X0, X20
	0x03A45A54 BL 0x1C16DEC
	0x03A45A58 STR X30, [X31 - 0x20]!
	0x03A45A5C STP X20, X19, [X31 + 0x10]
	0x03A45A60 ADRP X19, 0x710000
	0x03A45A64 LDR X19, [X19 + 0xC80]
	0x03A45A68 MOV X0, X19
	0x03A45A6C BL 0x1C16D08
	0x03A45A70 BL 0x19903D0
	0x03A45A74 MOV X0, X19
	0x03A45A78 BL 0x1C16D08
	0x03A45A7C LDR X8, [X0 + 0xB8]
	0x03A45A80 ADRP X0, 0x6AE000
	0x03A45A84 LDR X19, [X8]
	0x03A45A88 LDR X0, [X0 + 0xB40]
	0x03A45A8C BL 0x1C16D08
	0x03A45A90 BL 0x1C16F10
	0x03A45A94 MOV X1, X19
	0x03A45A98 MOV X2, X31
	0x03A45A9C MOV X20, X0
	0x03A45AA0 BL 0x3379A44
	0x03A45AA4 ADRP X0, 0x710000
	0x03A45AA8 LDR X0, [X0 + 0xD08]
	0x03A45AAC BL 0x1C16D08
	0x03A45AB0 MOV X1, X0
	0x03A45AB4 MOV X0, X20
	0x03A45AB8 BL 0x1C16DEC
	0x03A45ABC STR X30, [X31 - 0x20]!
	0x03A45AC0 STP X20, X19, [X31 + 0x10]
	0x03A45AC4 ADRP X19, 0x710000
	0x03A45AC8 LDR X19, [X19 + 0xC80]
	0x03A45ACC MOV X0, X19
	0x03A45AD0 BL 0x1C16D08
	0x03A45AD4 BL 0x19903D0
	0x03A45AD8 MOV X0, X19
	0x03A45ADC BL 0x1C16D08
	0x03A45AE0 LDR X8, [X0 + 0xB8]
	0x03A45AE4 ADRP X0, 0x6AE000
	0x03A45AE8 LDR X19, [X8]
	0x03A45AEC LDR X0, [X0 + 0xB40]
	0x03A45AF0 BL 0x1C16D08
	0x03A45AF4 BL 0x1C16F10
	0x03A45AF8 MOV X1, X19
	0x03A45AFC MOV X2, X31
	0x03A45B00 MOV X20, X0
	0x03A45B04 BL 0x3379A44
	0x03A45B08 ADRP X0, 0x710000
	0x03A45B0C LDR X0, [X0 + 0xD10]
	0x03A45B10 BL 0x1C16D08
	0x03A45B14 MOV X1, X0
	0x03A45B18 MOV X0, X20
	0x03A45B1C BL 0x1C16DEC
	0x03A45B20 STR X30, [X31 - 0x20]!
	0x03A45B24 STP X20, X19, [X31 + 0x10]
	0x03A45B28 ADRP X19, 0x710000
	0x03A45B2C LDR X19, [X19 + 0xC80]
	0x03A45B30 MOV X0, X19
	0x03A45B34 BL 0x1C16D08
	0x03A45B38 BL 0x19903D0
	0x03A45B3C MOV X0, X19
	0x03A45B40 BL 0x1C16D08
	0x03A45B44 LDR X8, [X0 + 0xB8]
	0x03A45B48 ADRP X0, 0x6AE000
	0x03A45B4C LDR X19, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x99E000
	010 Move X25, 0x6AF000
	011 Move W8, [X24+380]
	012 Move X25, [X25+1432]
	013 Move W22, W5
	014 Move X23, X4
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x70E000
	023 Move X0, [X0+3624]
	024 Call 0x1C17CF4
	025 Move X0, 0x6AF000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+380], W8
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X24, 0x70E000
	036 Move X24, [X24+3624]
	037 Move X0, X23
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Equality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {76}
	045 Compare X20, 0
	046 JumpIfEqual {97}
	047 Move X0, [X20+24]
	048 Compare X0, 0
	049 JumpIfEqual {97}
	050 Move X1, X31
	051 Call Texture.get_filterMode, X0
	052 Move X8, [X24]
	053 Move W22, W0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X21
	061 Move X1, X20
	062 Move X2, X19
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move S0, W31
	071 Move X4, X31
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Call Blitter.BlitCameraTexture, X0, X1, X2, V0, X3
	075 Return 
	076 Move X0, [X24]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X20
	083 Move X2, X19
	084 Move X3, X23
	085 Move W4, W22
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X5, X31
	093 Move X30, [X31+64]
	094 Move X25, [X31+72]
	095 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4
	096 Return 
	097 Call 0x1C17F20

Method: System.Void Blit(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData data, UnityEngine.Material material, System.Int32 passIndex = 0)

Disassembly:
	0x03A45B50 LDR X0, [X0 + 0xB40]
	0x03A45B54 BL 0x1C16D08
	0x03A45B58 BL 0x1C16F10
	0x03A45B5C MOV X1, X19
	0x03A45B60 MOV X2, X31
	0x03A45B64 MOV X20, X0
	0x03A45B68 BL 0x3379A44
	0x03A45B6C ADRP X0, 0x710000
	0x03A45B70 LDR X0, [X0 + 0xD18]
	0x03A45B74 BL 0x1C16D08
	0x03A45B78 MOV X1, X0
	0x03A45B7C MOV X0, X20
	0x03A45B80 BL 0x1C16DEC
	0x03A45B84 STP X30, X19, [X31 - 0x10]!
	0x03A45B88 ADRP X0, 0x6B7000
	0x03A45B8C LDR X0, [X0 + 0x758]
	0x03A45B90 BL 0x1C16D08
	0x03A45B94 BL 0x1C16F10
	0x03A45B98 MOV X1, X31
	0x03A45B9C MOV X19, X0
	0x03A45BA0 BL 0x3380288
	0x03A45BA4 ADRP X0, 0x710000
	0x03A45BA8 LDR X0, [X0 + 0xD20]
	0x03A45BAC BL 0x1C16D08
	0x03A45BB0 MOV X1, X0
	0x03A45BB4 MOV X0, X19
	0x03A45BB8 BL 0x1C16DEC
	0x03A45BBC STP X30, X21, [X31 - 0x20]!
	0x03A45BC0 STP X20, X19, [X31 + 0x10]
	0x03A45BC4 ADRP X20, 0x99D000
	0x03A45BC8 ADRP X19, 0x710000
	0x03A45BCC ADRP X21, 0x710000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, [X2+464]
	008 Compare X20, 0
	009 JumpIfEqual {40}
	010 Move X0, X20
	011 Move W21, W4
	012 Move X22, X3
	013 Move X19, X1
	014 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	015 Move X8, [X20]
	016 Move X23, X0
	017 Move X0, X20
	018 Move X1, X19
	019 Move X9, [X8+408]
	020 Move X2, [X8+416]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X1, X19
	023 Move X2, X23
	024 Move X3, X0
	025 Move X4, X22
	026 Move W5, W21
	027 Call ScriptableRenderPass.Blit, X0, X1, X2, X3, X4, X5
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X3, [X8+568]
	034 Move X2, [X8+576]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 CallNoReturn X3
	040 Call 0x1C17F20

Method: System.Void Blit(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData data, UnityEngine.Rendering.RTHandle source, UnityEngine.Material material, System.Int32 passIndex = 0)

Disassembly:
	0x03A45C54 RET
	0x03A45C58 STP X30, X25, [X31 - 0x40]!
	0x03A45C5C STP X24, X23, [X31 + 0x10]
	0x03A45C60 STP X22, X21, [X31 + 0x20]
	0x03A45C64 STP X20, X19, [X31 + 0x30]
	0x03A45C68 ADRP X20, 0x99D000
	0x03A45C6C LDRB W8, [X20 + 0x182]
	0x03A45C70 MOV X19, X0
	0x03A45C74 TBNZ X8, 0x0, 0x3A45C98
	0x03A45C78 ADRP X0, 0x6E6000
	0x03A45C7C LDR X0, [X0 + 0xDA0]
	0x03A45C80 BL 0x1C16CF4
	0x03A45C84 ADRP X0, 0x6AF000
	0x03A45C88 LDR X0, [X0 + 0xE58]
	0x03A45C8C BL 0x1C16CF4
	0x03A45C90 MOVZ W8, 0x1
	0x03A45C94 STRB W8, [X20 + 0x182]
	0x03A45C98 LDR X20, [X19 + 0x20]
	0x03A45C9C CBNZ X20, 0x3A45CBC
	0x03A45CA0 ADRP X8, 0x6E6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X0, [X2+464]
	007 Compare X0, 0
	008 JumpIfEqual {26}
	009 Move W19, W5
	010 Move X20, X4
	011 Move X21, X3
	012 Move X22, X1
	013 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	014 Move X1, X22
	015 Move X2, X21
	016 Move X4, X20
	017 Move W5, W19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X3, X0
	023 Move X30, [X31+48]
	024 Call ScriptableRenderPass.Blit, X0, X1, X2, X3, X4, X5
	025 Return 
	026 Call 0x1C17F20

Method: UnityEngine.Rendering.DrawingSettings CreateDrawingSettings(UnityEngine.Rendering.ShaderTagId shaderTagId, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.SortingCriteria sortingCriteria)

Disassembly:
	0x03A45CA4 LDR X8, [X8 + 0xDA0]
	0x03A45CA8 MOVZ W1, 0xA
	0x03A45CAC LDR X0, [X8]
	0x03A45CB0 BL 0x1C16D6C
	0x03A45CB4 MOV X20, X0
	0x03A45CB8 STR X0, [X19 + 0x20]
	0x03A45CBC ADRP X22, 0x6AF000
	0x03A45CC0 LDR X22, [X22 + 0xE58]
	0x03A45CC4 MOV W21, W31
	0x03A45CC8 MOVN W23, 0x0
	0x03A45CCC CBZ X20, 0x3A45D74
	0x03A45CD0 LDR W8, [X20 + 0x18]
	0x03A45CD4 CMP W21, W8
	0x03A45CD8 B.CS 0x3A45D70
	0x03A45CDC SXTW X24, W21
	0x03A45CE0 ADD X25, X20, X24, 0x3, LSL
	0x03A45CE4 LDR X8, [X25 + 0x20]!
	0x03A45CE8 CBNZ X8, 0x3A45D10
	0x03A45CEC LDR X0, [X22]
	0x03A45CF0 MOVZ W1, 0x14
	0x03A45CF4 BL 0x1C16D6C
	0x03A45CF8 LDR W8, [X20 + 0x18]
	0x03A45CFC CMP W21, W8
	0x03A45D00 B.CS 0x3A45D70
	0x03A45D04 STR X0, [X25]
	0x03A45D08 LDR X20, [X19 + 0x20]
	0x03A45D0C CBZ X20, 0x3A45D74
	0x03A45D10 LDR W9, [X20 + 0x18]
	0x03A45D14 ADD X10, X20, X24, 0x3, LSL
	0x03A45D18 MOV X8, X31
	0x03A45D1C ADD X10, X10, 0x20
	0x03A45D20 CMP W21, W9
	0x03A45D24 B.CS 0x3A45D70
	0x03A45D28 LDR X11, [X10]
	0x03A45D2C CBZ X11, 0x3A45D74
	0x03A45D30 LDR W12, [X11 + 0x18]
	0x03A45D34 CMP X8, X12
	0x03A45D38 B.CS 0x3A45D70
	0x03A45D3C ADD X11, X11, X8, 0x2, LSL
	0x03A45D40 ADD X8, X8, 0x1
	0x03A45D44 CMP X8, 0x14
	0x03A45D48 STR W23, [X11 + 0x20]
	0x03A45D4C B.NE 0x3A45D20
	0x03A45D50 ADD W21, W21, 0x1
	0x03A45D54 CMP W21, 0xA
	0x03A45D58 B.NE 0x3A45CCC
	0x03A45D5C LDP X20, X19, [X31 + 0x30]
	0x03A45D60 LDP X22, X21, [X31 + 0x20]
	0x03A45D64 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X25
	005 Move [X31+240], X24
	006 Move [X31+248], X23
	007 Move [X31+256], X22
	008 Move [X31+264], X21
	009 Move [X31+272], X20
	010 Move [X31+280], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X19, X8
	013 Move X8, [X23+40]
	014 Move X24, 0x99E000
	015 Move X25, 0x710000
	016 Move W20, W3
	017 Move [X31+200], X8
	018 Move W8, [X24+381]
	019 Move X25, [X25+16]
	020 Move X21, X2
	021 Move X22, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x710000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+381], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 And X0, X22, 0
	037 Add X8, X31, 0
	038 Move X1, X21
	039 Move W2, W20
	040 Move X3, X31
	041 Call RenderingUtils.CreateDrawingSettings, X0, X1, X2
	042 Add X1, X31, 0
	043 Move W2, 196
	044 Move X0, X19
	045 Call 0x3EB2AC0
	046 Move X8, [X23+40]
	047 Move X9, [X31+200]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+272]
	050 Move X19, [X31+280]
	051 Move X22, [X31+256]
	052 Move X21, [X31+264]
	053 Move X24, [X31+240]
	054 Move X23, [X31+248]
	055 Move X30, [X31+224]
	056 Move X25, [X31+232]
	057 Move X29, [X31+208]
	058 Add X31, X31, 288
	059 Return X0
	060 Call 0x3EB2B20

Method: UnityEngine.Rendering.DrawingSettings CreateDrawingSettings(System.Collections.Generic.List`1<UnityEngine.Rendering.ShaderTagId> shaderTagIdList, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.SortingCriteria sortingCriteria)

Disassembly:
	0x03A43FD4 LDR W9, [X8 + 0x18]
	0x03A43FD8 CBZ W9, 0x3A44074
	0x03A43FDC LDR X9, [X31 + 0x50]
	0x03A43FE0 LDP V1, V0, [X31 + 0x30]
	0x03A43FE4 MOV X19, X0
	0x03A43FE8 STR X9, [X8 + 0x40]
	0x03A43FEC STP V1, V0, [X8 + 0x20]
	0x03A43FF0 LDR X20, [X0 + 0x80]
	0x03A43FF4 CBZ X20, 0x3A4405C
	0x03A43FF8 MOVZ W21, 0x1
	0x03A43FFC MOVZ W22, 0x48
	0x03A44000 LDRSW X8, [X20 + 0x18]
	0x03A44004 CMP X21, X8
	0x03A44008 B.GE 0x3A44060
	0x03A4400C ADD X8, X31, 0x60
	0x03A44010 MOV W0, W31
	0x03A44014 MOV X1, X31
	0x03A44018 BL 0x3C4B258
	0x03A4401C LDP V0, V1, [X31 + 0x60]
	0x03A44020 LDR X8, [X31 + 0x80]
	0x03A44024 STP V0, V1, [X31]
	0x03A44028 STR X8, [X31 + 0x20]
	0x03A4402C LDR W8, [X20 + 0x18]
	0x03A44030 CMP X21, X8
	0x03A44034 B.CS 0x3A44074
	0x03A44038 LDR X8, [X31 + 0x20]
	0x03A4403C LDP V1, V0, [X31]
	0x03A44040 ADD X9, X20, X22
	0x03A44044 ADD X22, X22, 0x28
	0x03A44048 STR X8, [X9 + 0x20]
	0x03A4404C STP V1, V0, [X9]
	0x03A44050 LDR X20, [X19 + 0x80]
	0x03A44054 ADD X21, X21, 0x1
	0x03A44058 CBNZ X20, 0x3A44000
	0x03A4405C BL 0x1C16F20
	0x03A44060 LDP X20, X19, [X31 + 0xB0]
	0x03A44064 LDP X22, X21, [X31 + 0xA0]
	0x03A44068 LDR X30, [X31 + 0x90]
	0x03A4406C ADD X31, X31, 0xC0
	0x03A44070 RET
	0x03A44074 BL 0x1C16F28
	0x03A44078 STR X30, [X31 - 0x10]!
	0x03A4407C STR X2, [X0 + 0x98]
	0x03A44080 CBZ X2, 0x3A440A0
	0x03A44084 LDR X8, [X2 + 0x48]
	0x03A44088 LDUR V0, [X2 + 0x38]
	0x03A4408C LDUR V1, [X2 + 0x28]
	0x03A44090 STR X8, [X0 + 0xC0]
	0x03A44094 STP V1, V0, [X0 + 0xA0]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X25
	005 Move [X31+240], X24
	006 Move [X31+248], X23
	007 Move [X31+256], X22
	008 Move [X31+264], X21
	009 Move [X31+272], X20
	010 Move [X31+280], X19
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X19, X8
	013 Move X8, [X23+40]
	014 Move X24, 0x9A0000
	015 Move X25, 0x712000
	016 Move W20, W3
	017 Move [X31+200], X8
	018 Move W8, [X24+382]
	019 Move X25, [X25+16]
	020 Move X21, X2
	021 Move X22, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x711000
	027 Move X0, [X0+16]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+382], W8
	031 Move X0, [X25]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X8, X31, 0
	037 Move X0, X22
	038 Move X1, X21
	039 Move W2, W20
	040 Move X3, X31
	041 Call RenderingUtils.CreateDrawingSettings, X0, X1, X2
	042 Add X1, X31, 0
	043 Move W2, 196
	044 Move X0, X19
	045 Call 0x3EB2AC0
	046 Move X8, [X23+40]
	047 Move X9, [X31+200]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+272]
	050 Move X19, [X31+280]
	051 Move X22, [X31+256]
	052 Move X21, [X31+264]
	053 Move X24, [X31+240]
	054 Move X23, [X31+248]
	055 Move X30, [X31+224]
	056 Move X25, [X31+232]
	057 Move X29, [X31+208]
	058 Add X31, X31, 288
	059 Return X0
	060 Call 0x3EB2B20

Method: System.Boolean op_LessThan(UnityEngine.Rendering.Universal.ScriptableRenderPass lhs, UnityEngine.Rendering.Universal.ScriptableRenderPass rhs)

Disassembly:
	0x03A45D68 LDP X30, X25, [X31], #0x40
	0x03A45D6C RET
	0x03A45D70 BL 0x1C16F28
	0x03A45D74 BL 0x1C16F20
	0x03A45D78 SUB X31, X31, 0x90
	0x03A45D7C STP X29, X30, [X31 + 0x30]
	0x03A45D80 STP X28, X27, [X31 + 0x40]
	0x03A45D84 STP X26, X25, [X31 + 0x50]
	0x03A45D88 STP X24, X23, [X31 + 0x60]
	0x03A45D8C STP X22, X21, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move W8, [X0+16]
	007 Move W9, [X1+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Boolean op_GreaterThan(UnityEngine.Rendering.Universal.ScriptableRenderPass lhs, UnityEngine.Rendering.Universal.ScriptableRenderPass rhs)

Disassembly:
	0x03A45D90 STP X20, X19, [X31 + 0x80]
	0x03A45D94 STR X1, [X31]
	0x03A45D98 ADRP X21, 0x99D000
	0x03A45D9C ADRP X20, 0x710000
	0x03A45DA0 LDRB W8, [X21 + 0x183]
	0x03A45DA4 LDR X20, [X20 + 0xD30]
	0x03A45DA8 MOV X19, X0
	0x03A45DAC TBNZ X8, 0x0, 0x3A45E48
	0x03A45DB0 ADRP X0, 0x710000
	0x03A45DB4 LDR X0, [X0 + 0xD38]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Compare X1, 0
	005 JumpIfEqual {12}
	006 Move W8, [X0+16]
	007 Move W9, [X1+16]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Int32 GetRenderPassEventRange(UnityEngine.Rendering.Universal.RenderPassEvent renderPassEvent)

Disassembly:
	0x03A45DB8 BL 0x1C16CF4
	0x03A45DBC ADRP X0, 0x710000
	0x03A45DC0 LDR X0, [X0 + 0xD40]
	0x03A45DC4 BL 0x1C16CF4
	0x03A45DC8 ADRP X0, 0x710000
	0x03A45DCC LDR X0, [X0 + 0xD48]
	0x03A45DD0 BL 0x1C16CF4
	0x03A45DD4 ADRP X0, 0x710000
	0x03A45DD8 LDR X0, [X0 + 0xD50]
	0x03A45DDC BL 0x1C16CF4
	0x03A45DE0 ADRP X0, 0x710000
	0x03A45DE4 LDR X0, [X0 + 0xD58]
	0x03A45DE8 BL 0x1C16CF4
	0x03A45DEC ADRP X0, 0x710000
	0x03A45DF0 LDR X0, [X0 + 0xD60]
	0x03A45DF4 BL 0x1C16CF4
	0x03A45DF8 ADRP X0, 0x710000
	0x03A45DFC LDR X0, [X0 + 0xD68]
	0x03A45E00 BL 0x1C16CF4
	0x03A45E04 ADRP X0, 0x70F000
	0x03A45E08 LDR X0, [X0 + 0x908]
	0x03A45E0C BL 0x1C16CF4
	0x03A45E10 ADRP X0, 0x70F000
	0x03A45E14 LDR X0, [X0 + 0x910]
	0x03A45E18 BL 0x1C16CF4
	0x03A45E1C ADRP X0, 0x6D8000
	0x03A45E20 LDR X0, [X0 + 0x138]
	0x03A45E24 BL 0x1C16CF4
	0x03A45E28 ADRP X0, 0x710000
	0x03A45E2C LDR X0, [X0 + 0xD30]
	0x03A45E30 BL 0x1C16CF4
	0x03A45E34 ADRP X0, 0x70F000
	0x03A45E38 LDR X0, [X0 + 0x8C8]
	0x03A45E3C BL 0x1C16CF4
	0x03A45E40 MOVZ W8, 0x1
	0x03A45E44 STRB W8, [X21 + 0x183]
	0x03A45E48 LDR X0, [X20]
	0x03A45E4C STRB W31, [X31 + 0x28]
	0x03A45E50 LDR W8, [X0 + 0xE0]
	0x03A45E54 CBNZ W8, 0x3A45E60
	0x03A45E58 BL 0x1C16DFC
	0x03A45E5C LDR X0, [X20]
	0x03A45E60 LDR X8, [X0 + 0xB8]
	0x03A45E64 ADD X0, X31, 0x28
	0x03A45E68 MOV X1, X31
	0x03A45E6C MOV X3, X31
	0x03A45E70 LDR X2, [X8 + 0x18]
	0x03A45E74 BL 0x39B1DB0
	0x03A45E78 LDR X8, [X19 + 0x100]
	0x03A45E7C CBZ X8, 0x3A46334
	0x03A45E80 LDR X0, [X19 + 0x18]
	0x03A45E84 CBZ X0, 0x3A46338
	0x03A45E88 ADRP X8, 0x710000
	0x03A45E8C LDR X8, [X8 + 0xD48]
	0x03A45E90 LDR X1, [X8]
	0x03A45E94 BL 0x29EB9B0
	0x03A45E98 LDR X0, [X19 + 0x30]
	0x03A45E9C CBZ X0, 0x3A4633C
	0x03A45EA0 ADRP X8, 0x710000
	0x03A45EA4 LDR X8, [X8 + 0xD50]
	0x03A45EA8 LDR X1, [X8]
	0x03A45EAC BL 0x29E895C
	0x03A45EB0 LDR X8, [X19 + 0x100]
	0x03A45EB4 CBZ X8, 0x3A461F4
	0x03A45EB8 ADRP X29, 0x70F000
	0x03A45EBC LDR X29, [X29 + 0x910]
	0x03A45EC0 MOV X20, X31
	0x03A45EC4 MOV X21, X31
	0x03A45EC8 MOV W22, W31
	0x03A45ECC LDRSW X9, [X8 + 0x18]
	0x03A45ED0 CMP X21, X9
	0x03A45ED4 B.GE 0x3A461F8
	0x03A45ED8 LDR X2, [X29]
	0x03A45EDC MOV X0, X8
	0x03A45EE0 MOV W1, W21
	0x03A45EE4 BL 0x301BCCC
	0x03A45EE8 MOV X2, X0
	0x03A45EEC CBZ X0, 0x3A462CC
	0x03A45EF0 LDRB W8, [X2 + 0x42]
	0x03A45EF4 STR W21, [X2 + 0x44]
	0x03A45EF8 CBZ W8, 0x3A461E4
	0x03A45EFC LDRB W8, [X2 + 0x70]
	0x03A45F00 CBZ W8, 0x3A461E4
	0x03A45F04 LDRB W8, [X19 + 0x1A4]
	0x03A45F08 CBZ W8, 0x3A461E4
	0x03A45F0C LDR X1, [X31]
	0x03A45F10 MOV X0, X19
	0x03A45F14 BL 0x3A464A0
	0x03A45F18 ADRP X8, 0x70F000
	0x03A45F1C LDR X8, [X8 + 0x8C8]
	0x03A45F20 MOV X25, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x99E000
	007 Move X20, 0x711000
	008 Move W8, [X21+383]
	009 Move X20, [X20+3184]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x6AF000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x711000
	019 Move X0, [X0+3184]
	020 Call 0x1C17CF4
	021 Move X0, 0x711000
	022 Move X0, [X0+3192]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+383], W8
	026 Move X0, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X20]
	032 Move X8, [X0+184]
	033 Move X8, [X8]
	034 Compare X8, 0
	035 JumpIfEqual {94}
	036 Move W21, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W22, W31
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {94}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, W22
	051 Move W8, [X8+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W22, W22, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W22, W31
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, W22
	058 Add X22, X8, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X8, [X8]
	067 Compare X8, 0
	068 JumpIfEqual {94}
	069 Move W9, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X8, X22
	072 Move W8, [X8+32]
	073 Subtract W0, W8, W19
	074 Move X8, 0x6AF000
	075 Move X8, [X8+2600]
	076 Move X19, 0x711000
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Move X19, [X19+3192]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, [X19]
	084 Move X1, X31
	085 Call Debug.LogError, X0
	086 Move W0, W31
	087 Move W0, 50
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return X0
	094 Call 0x1C17F20
	095 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03A45F24 MOV X26, X1
	0x03A45F28 LDR X0, [X8]
	0x03A45F2C LDR W8, [X0 + 0xE0]
	0x03A45F30 CBNZ W8, 0x3A45F38
	0x03A45F34 BL 0x1C16DFC
	0x03A45F38 MOV X0, X25
	0x03A45F3C MOV X1, X26
	0x03A45F40 MOV W2, W22
	0x03A45F44 BL 0x3A465AC
	0x03A45F48 LDR X8, [X19 + 0x28]
	0x03A45F4C CBZ X8, 0x3A462F0
	0x03A45F50 LDR W9, [X8 + 0x18]
	0x03A45F54 CMP X21, X9
	0x03A45F58 B.CS 0x3A462F8
	0x03A45F5C ADD X8, X8, X20
	0x03A45F60 STP X0, X1, [X8 + 0x20]
	0x03A45F64 MOV X23, X0
	0x03A45F68 LDR X0, [X19 + 0x18]
	0x03A45F6C MOV X24, X1
	0x03A45F70 CBZ X0, 0x3A462E8
	0x03A45F74 ADRP X8, 0x710000
	0x03A45F78 LDR X8, [X8 + 0xD58]
	0x03A45F7C LDR X3, [X8]
	0x03A45F80 MOV X1, X23
	0x03A45F84 MOV X2, X24
	0x03A45F88 BL 0x29EBA1C
	0x03A45F8C LDR X27, [X19 + 0x18]
	0x03A45F90 TBZ X0, 0x0, 0x3A460F0
	0x03A45F94 CBZ X27, 0x3A4630C
	0x03A45F98 ADRP X8, 0x710000
	0x03A45F9C LDR X8, [X8 + 0xD68]
	0x03A45FA0 LDR X3, [X8]
	0x03A45FA4 MOV X0, X27
	0x03A45FA8 MOV X1, X23
	0x03A45FAC MOV X2, X24
	0x03A45FB0 BL 0x29EB764
	0x03A45FB4 MOV X27, X0
	0x03A45FB8 LDR X0, [X19 + 0x18]
	0x03A45FBC CBZ X0, 0x3A46308
	0x03A45FC0 ADRP X8, 0x710000
	0x03A45FC4 LDR X8, [X8 + 0xD68]
	0x03A45FC8 LDR X3, [X8]
	0x03A45FCC MOV X1, X23
	0x03A45FD0 MOV X2, X24
	0x03A45FD4 BL 0x29EB764

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move X19, 0x99E000
	006 Move X20, 0x70C000
	007 Move W8, [X19+384]
	008 Move X20, [X20+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x70C000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move X0, 0x70F000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+384], W8
	021 Move X19, 0x70F000
	022 Move X19, [X19+4080]
	023 Add X8, X31, 40
	024 Move W0, 2
	025 Move X1, X31
	026 Call RenderTargetIdentifier.op_Implicit, X0
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move X8, [X31+72]
	030 Move X0, [X20]
	031 Move [X31+80], V0
	032 Move [X31+88], V1
	033 Move [X31+112], X8
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V0, [X31+80]
	039 Move V1, [X31+96]
	040 Move X8, [X31+112]
	041 Add X0, X31, 0
	042 Move X1, X31
	043 Move [X31], V0
	044 Move [X31+8], V1
	045 Move [X31+32], X8
	046 Call RTHandles.Alloc, X0
	047 Move X8, [X19]
	048 Move X20, [X31+144]
	049 Move X19, [X31+152]
	050 Move X30, [X31+128]
	051 Move X8, [X8+184]
	052 Move [X8], X0
	053 Add X31, X31, 160
	054 Return 

