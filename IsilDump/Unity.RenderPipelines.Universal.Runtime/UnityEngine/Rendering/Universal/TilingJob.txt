Type: UnityEngine.Rendering.Universal.TilingJob

Method: System.Void Execute(System.Int32 jobIndex)

Disassembly:
	0x03A7BE58 LDR V18, [X31 + 0xF]
	0x03A7BE5C LDR V6, [X31 + 0x178]
	0x03A7BE60 LDR V7, [X31 + 0x180]
	0x03A7BE64 ADRP X20, 0x966000
	0x03A7BE68 LDRB W8, [X20 + 0x585]
	0x00000000 INVALID
	0x03A7BE70 FMUL S1, S16, S1
	0x00000000 INVALID
	0x03A7BE78 FMUL S3, S17, S3
	0x03A7BE7C MOVI D16, 0x0
	0x03A7BE80 FMOV S17, W31
	0x00000000 INVALID
	0x03A7BE88 FMUL S5, S18, S5
	0x03A7BE8C FADD V0.2S, V0.2S, V2.2S
	0x03A7BE90 FADD S1, S1, S3
	0x00000000 INVALID
	0x03A7BE98 FADD V9.2S, V0.2S, V4.2S
	0x03A7BE9C FADD S10, S1, S5
	0x03A7BEA0 FMUL S11, S7, S17
	0x03A7BEA4 CBNZ W8, 0x3A7BEBC
	0x03A7BEA8 ADRP X0, 0x678000
	0x03A7BEAC LDR X0, [X0 + 0x5A8]
	0x03A7BEB0 BL 0x1C16CF4
	0x03A7BEB4 MOVZ W8, 0x1
	0x03A7BEB8 STRB W8, [X20 + 0x585]
	0x03A7BEBC ADRP X21, 0x678000
	0x03A7BEC0 LDR X21, [X21 + 0x5A8]
	0x03A7BEC4 FADD V8.2S, V9.2S, V8.2S
	0x03A7BEC8 FADD S9, S10, S11
	0x03A7BECC LDR X0, [X21]
	0x03A7BED0 LDR W8, [X0 + 0xE0]
	0x03A7BED4 CBNZ W8, 0x3A7BEDC
	0x03A7BED8 BL 0x1C16DFC
	0x00000000 INVALID
	0x03A7BEE0 FMUL S0, S9, S9
	0x03A7BEE4 FADDP S1, V1.2S
	0x03A7BEE8 FADD S0, S0, S1
	0x03A7BEEC FMOV S2, 1
	0x03A7BEF0 FSQRT S0, S0
	0x03A7BEF4 FNEG S3, S9
	0x03A7BEF8 FDIV S0, S2, S0
	0x00000000 INVALID
	0x03A7BF00 FMUL S0, S0, S3
	0x03A7BF04 ADD X0, X31, 0x248
	0x03A7BF08 MOV X1, X31
	0x03A7BF0C STR D1, [X31 + 0x2C8]
	0x03A7BF10 STR S0, [X31 + 0x2D0]
	0x03A7BF14 BL 0x3C5BCB4
	0x03A7BF18 ADD X0, X31, 0x248
	0x03A7BF1C MOV X1, X31
	0x03A7BF20 MOV V8.16B, V0.16B
	0x03A7BF24 FMOV S9, 0.5
	0x03A7BF28 ADRP X22, 0xFFFFFFFFFD06F000
	0x03A7BF2C BL 0x3C5BCAC
	0x03A7BF30 LDR X0, [X23]
	0x03A7BF34 MOV V11.16B, V0.16B
	0x03A7BF38 LDR W8, [X0 + 0xE0]
	0x03A7BF3C CBNZ W8, 0x3A7BF44
	0x03A7BF40 BL 0x1C16DFC
	0x03A7BF44 LDR V10, [X22 + 0x104]
	0x03A7BF48 MOV V0.16B, V11.16B
	0x03A7BF4C FMUL S8, S8, S9
	0x03A7BF50 BL 0x3A7E228
	0x03A7BF54 ADRP X22, 0x966000
	0x03A7BF58 LDRB W8, [X22 + 0x564]
	0x03A7BF5C MOV V9.16B, V0.16B
	0x03A7BF60 CBNZ W8, 0x3A7BF78
	0x03A7BF64 ADRP X0, 0x678000
	0x03A7BF68 LDR X0, [X0 + 0x5A8]
	0x03A7BF6C BL 0x1C16CF4
	0x03A7BF70 MOVZ W8, 0x1
	0x03A7BF74 STRB W8, [X22 + 0x564]
	0x03A7BF78 LDR X0, [X21]
	0x03A7BF7C FMUL S8, S8, S10
	0x03A7BF80 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x968000
	007 Move W8, [X21+779]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6A4000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+779], W8
	019 Move W8, [X19+48]
	020 Move W9, [X19+52]
	021 Add X0, X31, 12
	022 Move W1, 0x7FFF
	023 Move W2, 0x8000
	024 NotImplemented "Instruction SDIV not yet implemented."
	025 Multiply W9, W9, W20
	026 Move X3, X31
	027 NotImplemented "Instruction MSUB not yet implemented."
	028 Move [X19+272], W10
	029 Move [X19+268], W9
	030 Move [X31+12], W31
	031 Call InclusiveRange..ctor, X0, X1, X2
	032 Move W8, [X31+12]
	033 Add X9, X19, 262
	034 Move [X9], W8
	035 Move W8, [X19+52]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W21, W31
	038 Move W22, [X19+268]
	039 Add X0, X31, 8
	040 Move W1, 0x7FFF
	041 Move W2, 0x8000
	042 Move X3, X31
	043 Move [X31+8], W31
	044 Call InclusiveRange..ctor, X0, X1, X2
	045 Move X8, [X19+32]
	046 Move W9, [X31+8]
	047 Add W10, W21, W22
	048 Add W21, W21, 1
	049 Move [X8], W9
	050 Move W8, [X19+52]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+8]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0x6A4000
	055 Move X8, [X8+3512]
	056 Move X0, [X8]
	057 Move W21, [X19+260]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move W1, W20
	064 Compare W21, 0
	065 JumpIfEqual {75}
	066 Call TilingJob.TileLightOrthographic, X0, X1
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move W1, W20
	074 Call TilingJob.TileReflectionProbe, X0, X1
	075 Call TilingJob.TileLight, X0, X1
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return 

Method: System.Void TileLight(System.Int32 lightIndex)

Disassembly:
	0x03A7CC04 LDR V8, [X31 + 0x2BC]
	0x03A7CC08 LDR V9, [X31 + 0x2C0]
	0x03A7CC0C LDR V10, [X31 + 0x2C4]
	0x03A7CC10 LDR V11, [X31 + 0x2C8]
	0x03A7CC14 LDR V12, [X31 + 0x2CC]
	0x03A7CC18 LDR V14, [X31 + 0x2D0]
	0x03A7CC1C LDR W8, [X0 + 0xE0]
	0x03A7CC20 LDR V13, [X31 + 0x2D4]
	0x03A7CC24 LDR V15, [X31 + 0x2D8]
	0x03A7CC28 CBNZ W8, 0x3A7CC30
	0x03A7CC2C BL 0x1C16DFC
	0x03A7CC30 LDR V1, [X31 + 0x64]
	0x03A7CC34 LDR V0, [X31 + 0x5C]
	0x03A7CC38 LDR V7, [X31 + 0xD0]
	0x03A7CC3C ADD X0, X31, 0x1D8
	0x03A7CC40 ADD X1, X31, 0x1C8
	0x03A7CC44 STP S0, S1, [X31 + 0x24]
	0x03A7CC48 LDR V0, [X31 + 0x60]
	0x03A7CC4C LDR V1, [X31 + 0x68]
	0x03A7CC50 MOV V2.16B, V10.16B
	0x03A7CC54 MOV V3.16B, V11.16B
	0x03A7CC58 STR S0, [X31 + 0x20]
	0x03A7CC5C LDR V0, [X31 + 0x50]
	0x03A7CC60 MOV V4.16B, V12.16B
	0x03A7CC64 MOV V5.16B, V14.16B
	0x03A7CC68 MOV V6.16B, V13.16B
	0x03A7CC6C STP S0, S1, [X31 + 0x14]
	0x03A7CC70 LDR V0, [X31 + 0x54]
	0x03A7CC74 MOV V1.16B, V9.16B
	0x03A7CC78 STR S15, [X31]
	0x03A7CC7C STR S0, [X31 + 0x10]
	0x03A7CC80 LDR V0, [X31 + 0xF0]
	0x03A7CC84 STR S0, [X31 + 0x8]
	0x03A7CC88 MOV V0.16B, V8.16B
	0x03A7CC8C BL 0x3A7EF08
	0x03A7CC90 ADRP X8, 0x6DB000
	0x03A7CC94 LDR W1, [X19 + 0x110]
	0x03A7CC98 LDR X8, [X8 + 0x10]
	0x03A7CC9C ADD X20, X19, 0xC8
	0x03A7CCA0 MOV X0, X20
	0x03A7CCA4 LDR X2, [X8]
	0x03A7CCA8 BL 0x2D1F050
	0x03A7CCAC LDR V1, [X31 + 0x2BC]
	0x03A7CCB0 LDR V2, [X31 + 0x2C0]
	0x03A7CCB4 LDR V3, [X31 + 0x2C4]
	0x03A7CCB8 MOVZ W8, 0x80000000
	0x03A7CCBC LDR V6, [X31 + 0x1D8]
	0x03A7CCC0 FMOV S4, W8
	0x03A7CCC4 LDR V7, [X31 + 0x1DC]
	0x03A7CCC8 LDR V16, [X31 + 0x1E0]
	0x03A7CCCC FMUL S4, S1, S4
	0x03A7CCD0 FMUL S5, S0, S3
	0x03A7CCD4 FSUB S4, S4, S2
	0x03A7CCD8 FSUB S4, S4, S5
	0x03A7CCDC FMOV S5, W31
	0x03A7CCE0 FMUL S5, S6, S5
	0x03A7CCE4 FMUL S0, S0, S16
	0x03A7CCE8 FADD S5, S5, S7
	0x03A7CCEC LDR V13, [X31 + 0x58]
	0x03A7CCF0 LDR V15, [X31 + 0x98]
	0x03A7CCF4 FADD S0, S5, S0
	0x03A7CCF8 FDIV S0, S4, S0
	0x03A7CCFC FCMP S0, 0x0
	0x03A7CD00 STP S7, S6, [X31 + 0x48]
	0x03A7CD04 STR S16, [X31 + 0xC0]
	0x03A7CD08 STR S5, [X31 + 0x84]
	0x03A7CD0C B.LT 0x3A7CD6C
	0x03A7CD10 FMOV S4, 1
	0x03A7CD14 FCMP S0, S4
	0x03A7CD18 B.HI 0x3A7CD6C
	0x03A7CD1C LDR V5, [X31 + 0xC0]
	0x03A7CD20 LDR V4, [X19 + 0x100]
	0x03A7CD24 FMUL S5, S5, S0
	0x03A7CD28 FADD S8, S3, S5
	0x03A7CD2C FCMP S8, S4
	0x03A7CD30 B.LT 0x3A7CD6C
	0x03A7CD34 LDR X0, [X22]
	0x03A7CD38 LDP S4, S3, [X31 + 0x48]
	0x03A7CD3C LDR W8, [X0 + 0xE0]
	0x03A7CD40 FMUL S3, S3, S0
	0x03A7CD44 FMUL S0, S4, S0
	0x03A7CD48 FADD S10, S1, S3
	0x03A7CD4C FADD S9, S2, S0
	0x03A7CD50 CBNZ W8, 0x3A7CD58
	0x03A7CD54 BL 0x1C16DFC
	0x03A7CD58 MOV X0, X19
	0x03A7CD5C MOV V0.16B, V10.16B
	0x03A7CD60 MOV V1.16B, V9.16B
	0x03A7CD64 MOV V2.16B, V8.16B
	0x03A7CD68 BL 0x3A7E104
	0x03A7CD6C ADRP X8, 0x6DB000
	0x03A7CD70 LDR W1, [X19 + 0x110]
	0x03A7CD74 LDR X8, [X8 + 0x10]
	0x03A7CD78 ADD X21, X19, 0xD0
	0x03A7CD7C MOV X0, X21
	0x03A7CD80 LDR X2, [X8]
	0x03A7CD84 BL 0x2D1F050
	0x03A7CD88 LDR V1, [X31 + 0x2BC]
	0x03A7CD8C LDR V2, [X31 + 0x2C0]
	0x03A7CD90 LDR V3, [X31 + 0x2C4]
	0x03A7CD94 LDR V4, [X31 + 0xC0]
	0x03A7CD98 MOVZ W8, 0x80000000
	0x03A7CD9C FMOV S5, W8
	0x03A7CDA0 FMUL S5, S1, S5
	0x03A7CDA4 FMUL S4, S4, S0
	0x03A7CDA8 FMUL S0, S0, S3
	0x03A7CDAC FSUB S5, S5, S2
	0x03A7CDB0 FSUB S0, S5, S0
	0x03A7CDB4 LDR V5, [X31 + 0x84]
	0x03A7CDB8 FADD S4, S5, S4
	0x03A7CDBC FDIV S0, S0, S4
	0x03A7CDC0 FCMP S0, 0x0
	0x03A7CDC4 B.LT 0x3A7CE24
	0x03A7CDC8 FMOV S4, 1
	0x03A7CDCC FCMP S0, S4
	0x03A7CDD0 B.HI 0x3A7CE24
	0x03A7CDD4 LDR V5, [X31 + 0xC0]
	0x03A7CDD8 LDR V4, [X19 + 0x100]
	0x03A7CDDC FMUL S5, S5, S0
	0x03A7CDE0 FADD S8, S3, S5
	0x03A7CDE4 FCMP S8, S4
	0x03A7CDE8 B.LT 0x3A7CE24
	0x03A7CDEC LDR X0, [X22]
	0x03A7CDF0 LDP S4, S3, [X31 + 0x48]
	0x03A7CDF4 LDR W8, [X0 + 0xE0]
	0x03A7CDF8 FMUL S3, S3, S0
	0x03A7CDFC FMUL S0, S4, S0
	0x03A7CE00 FADD S10, S1, S3
	0x03A7CE04 FADD S9, S2, S0
	0x03A7CE08 CBNZ W8, 0x3A7CE10
	0x03A7CE0C BL 0x1C16DFC
	0x03A7CE10 MOV X0, X19
	0x03A7CE14 MOV V0.16B, V10.16B
	0x03A7CE18 MOV V1.16B, V9.16B
	0x03A7CE1C MOV V2.16B, V8.16B
	0x03A7CE20 BL 0x3A7E104
	0x03A7CE24 LDRH W8, [X19 + 0xFC]
	0x03A7CE28 ADD X0, X19, 0x106
	0x03A7CE2C MOV W1, W31
	0x03A7CE30 MOV X3, X31
	0x03A7CE34 SUB W2, W8, 0x1
	0x03A7CE38 BL 0x3A7A34C
	0x03A7CE3C LDRSH W8, [X19 + 0x106]
	0x03A7CE40 LDRSH W9, [X19 + 0x108]
	0x03A7CE44 CMP W8, W9
	0x03A7CE48 B.GE 0x3A7D5C0
	0x03A7CE4C LDR V2, [X31 + 0x1D0]
	0x03A7CE50 LDR V0, [X31 + 0x1C8]
	0x03A7CE54 LDR V1, [X31 + 0x1CC]
	0x03A7CE58 ADD W29, W8, 0x1
	0x03A7CE5C STR S2, [X31 + 0xA0]
	0x03A7CE60 FMOV S2, W31
	0x03A7CE64 STP S1, S0, [X31 + 0x40]
	0x03A7CE68 FMUL S0, S0, S2
	0x03A7CE6C MOVZ W26, 0x7F800000
	0x03A7CE70 FADD S0, S0, S1
	0x03A7CE74 STR S0, [X31 + 0x6C]
	0x03A7CE78 MOV X0, X31
	0x03A7CE7C BL 0x3A7A4A4
	0x03A7CE80 STR W0, [X31 + 0x1C4]
	0x03A7CE84 ADRP X27, 0x6DB000
	0x03A7CE88 LDR W1, [X19 + 0x110]
	0x03A7CE8C LDR X27, [X27 + 0x10]
	0x03A7CE90 MOV X0, X20
	0x03A7CE94 LDR X2, [X27]
	0x03A7CE98 BL 0x2D1F050
	0x03A7CE9C LDR W1, [X19 + 0x110]
	0x03A7CEA0 LDR X2, [X27]
	0x03A7CEA4 MOV X0, X21
	0x03A7CEA8 MOV V8.16B, V0.16B
	0x03A7CEAC BL 0x2D1F050
	0x03A7CEB0 LDR V1, [X19 + 0xC4]
	0x03A7CEB4 LDR V10, [X31 + 0x2BC]
	0x03A7CEB8 SCVTF S2, W29
	0x03A7CEBC FSUB S3, S0, S8
	0x03A7CEC0 LDR V9, [X31 + 0x2C0]
	0x03A7CEC4 LDR V0, [X31 + 0x2C4]
	0x03A7CEC8 FMUL S1, S1, S2
	0x03A7CECC MOVZ W8, 0x80000000
	0x03A7CED0 FMUL S1, S3, S1
	0x03A7CED4 FMOV S2, W8
	0x03A7CED8 FMUL S2, S10, S2
	0x03A7CEDC FADD S4, S8, S1
	0x03A7CEE0 FSUB S2, S2, S9
	0x03A7CEE4 FMUL S1, S0, S4
	0x03A7CEE8 FADD S1, S2, S1
	0x03A7CEEC LDR V2, [X31 + 0xC0]
	0x03A7CEF0 LDR V3, [X31 + 0x84]
	0x03A7CEF4 FMUL S2, S2, S4
	0x03A7CEF8 FSUB S2, S3, S2
	0x03A7CEFC FDIV S11, S1, S2
	0x03A7CF00 FCMP S11, 0x0
	0x03A7CF04 B.LT 0x3A7D008
	0x03A7CF08 ADRP X27, 0x6A2000
	0x03A7CF0C LDR X27, [X27 + 0xDB8]
	0x03A7CF10 LDR V12, [X31 + 0x74]
	0x03A7CF14 LDR V14, [X31 + 0x88]
	0x03A7CF18 FMOV S2, 1
	0x03A7CF1C FCMP S11, S2
	0x03A7CF20 B.HI 0x3A7D018
	0x03A7CF24 LDR V3, [X31 + 0xC0]
	0x03A7CF28 LDR V2, [X19 + 0x100]
	0x03A7CF2C FMUL S3, S3, S11
	0x03A7CF30 FADD S8, S0, S3
	0x03A7CF34 FCMP S8, S2
	0x03A7CF38 B.LT 0x3A7D018
	0x03A7CF3C LDR X0, [X27]
	0x03A7CF40 MOV V15.16B, V13.16B
	0x03A7CF44 MOV V13.16B, V4.16B
	0x03A7CF48 LDR W8, [X0 + 0xE0]
	0x03A7CF4C CBNZ W8, 0x3A7CF54
	0x03A7CF50 BL 0x1C16DFC
	0x03A7CF54 LDP S1, S0, [X31 + 0x48]
	0x03A7CF58 MOV X0, X19
	0x03A7CF5C MOV V2.16B, V8.16B
	0x03A7CF60 FMUL S0, S0, S11
	0x03A7CF64 FMUL S1, S1, S11
	0x03A7CF68 FADD S0, S10, S0
	0x03A7CF6C FADD S1, S9, S1
	0x03A7CF70 BL 0x3A7F3EC
	0x03A7CF74 LDR W8, [X19 + 0xF8]
	0x03A7CF78 FMOV W9, S0
	0x03A7CF7C AND W9, W9, 0x7FFFFFFF
	0x03A7CF80 CMP W9, W26
	0x03A7CF84 SUB W8, W8, 0x1
	0x03A7CF88 SCVTF S1, W8
	0x03A7CF8C FCCMP S0, S1, 0x0, LS
	0x03A7CF90 FCSEL S0, S1, S0, GT
	0x03A7CF94 MOVZ X8, 0x7FF00000
	0x03A7CF98 FMOV D1, X8
	0x03A7CF9C FMOV W8, S0
	0x03A7CFA0 AND W8, W8, 0x7FFFFFFF
	0x03A7CFA4 CMP W8, W26
	0x03A7CFA8 FMOV S2, W31
	0x03A7CFAC FCCMP S0, S2, 0x8, LS
	0x03A7CFB0 FCVT S0, S0
	0x03A7CFB4 FMOV D2, X31
	0x03A7CFB8 FCSEL D0, D2, D0, MI
	0x03A7CFBC FCVTZS W8, D0
	0x03A7CFC0 FCMP D0, D1
	0x03A7CFC4 CSEL W1, W31, W8, EQ
	0x03A7CFC8 ADD X0, X31, 0x1C4
	0x03A7CFCC MOV X2, X31
	0x03A7CFD0 BL 0x3A7A2C0
	0x03A7CFD4 LDR V0, [X31 + 0x2C4]
	0x03A7CFD8 LDR V10, [X31 + 0x2BC]
	0x03A7CFDC LDR V9, [X31 + 0x2C0]
	0x03A7CFE0 MOVZ W8, 0x80000000
	0x03A7CFE4 FMOV S1, W8
	0x03A7CFE8 MOV V4.16B, V13.16B
	0x03A7CFEC FMUL S2, S13, S0
	0x03A7CFF0 MOV V13.16B, V15.16B
	0x03A7CFF4 LDR V15, [X31 + 0x98]
	0x03A7CFF8 FMUL S1, S10, S1
	0x03A7CFFC FSUB S1, S1, S9
	0x03A7D000 FADD S1, S1, S2
	0x03A7D004 B 0x3A7D018
	0x03A7D008 ADRP X27, 0x6A1000
	0x03A7D00C LDR X27, [X27 + 0xDB8]
	0x03A7D010 LDR V12, [X31 + 0x74]
	0x03A7D014 LDR V14, [X31 + 0x88]
	0x03A7D018 LDR V2, [X31 + 0xA0]
	0x03A7D01C LDR V3, [X31 + 0x6C]
	0x03A7D020 FMUL S2, S4, S2
	0x03A7D024 FSUB S2, S3, S2
	0x03A7D028 FDIV S11, S1, S2
	0x03A7D02C FCMP S11, 0x0
	0x03A7D030 B.LT 0x3A7D0FC
	0x03A7D034 FMOV S1, 1
	0x03A7D038 FCMP S11, S1
	0x03A7D03C B.HI 0x3A7D0FC
	0x03A7D040 LDR V2, [X31 + 0xA0]
	0x03A7D044 LDR V1, [X19 + 0x100]
	0x03A7D048 FMUL S2, S2, S11
	0x03A7D04C FADD S8, S0, S2
	0x03A7D050 FCMP S8, S1
	0x03A7D054 B.LT 0x3A7D0FC
	0x03A7D058 LDR X0, [X27]
	0x03A7D05C MOV V15.16B, V13.16B
	0x03A7D060 MOV V13.16B, V4.16B
	0x03A7D064 LDR W8, [X0 + 0xE0]
	0x03A7D068 CBNZ W8, 0x3A7D070
	0x03A7D06C BL 0x1C16DFC
	0x03A7D070 LDP S1, S0, [X31 + 0x40]
	0x03A7D074 MOV X0, X19
	0x03A7D078 MOV V2.16B, V8.16B
	0x03A7D07C FMUL S0, S0, S11
	0x03A7D080 FMUL S1, S1, S11
	0x03A7D084 FADD S0, S10, S0
	0x03A7D088 FADD S1, S9, S1
	0x03A7D08C BL 0x3A7F3EC
	0x03A7D090 LDR W8, [X19 + 0xF8]
	0x03A7D094 FMOV W9, S0
	0x03A7D098 AND W9, W9, 0x7FFFFFFF
	0x03A7D09C CMP W9, W26
	0x03A7D0A0 SUB W8, W8, 0x1
	0x03A7D0A4 SCVTF S1, W8
	0x03A7D0A8 FCCMP S0, S1, 0x0, LS
	0x03A7D0AC FCSEL S0, S1, S0, GT
	0x03A7D0B0 MOVZ X8, 0x7FF00000
	0x03A7D0B4 FMOV D1, X8
	0x03A7D0B8 FMOV W8, S0
	0x03A7D0BC AND W8, W8, 0x7FFFFFFF
	0x03A7D0C0 CMP W8, W26
	0x03A7D0C4 FMOV S2, W31
	0x03A7D0C8 FCCMP S0, S2, 0x8, LS
	0x03A7D0CC FCVT S0, S0
	0x03A7D0D0 FMOV D2, X31
	0x03A7D0D4 FCSEL D0, D2, D0, MI
	0x03A7D0D8 FCVTZS W8, D0
	0x03A7D0DC FCMP D0, D1
	0x03A7D0E0 CSEL W1, W31, W8, EQ
	0x03A7D0E4 ADD X0, X31, 0x1C4
	0x03A7D0E8 MOV X2, X31
	0x03A7D0EC BL 0x3A7A2C0
	0x03A7D0F0 MOV V4.16B, V13.16B
	0x03A7D0F4 MOV V13.16B, V15.16B
	0x03A7D0F8 LDR V15, [X31 + 0x98]
	0x03A7D0FC LDR X0, [X27]
	0x03A7D100 LDR V9, [X31 + 0x2C8]
	0x03A7D104 LDR V8, [X31 + 0x2CC]
	0x03A7D108 LDR V10, [X31 + 0x2D0]
	0x03A7D10C LDR W8, [X0 + 0xE0]
	0x03A7D110 CBNZ W8, 0x3A7D120
	0x03A7D114 MOV V11.16B, V4.16B
	0x03A7D118 BL 0x1C16DFC
	0x03A7D11C MOV V4.16B, V11.16B
	0x03A7D120 LDR V0, [X31 + 0xD0]
	0x03A7D124 LDR V1, [X31 + 0x78]
	0x03A7D128 LDR V2, [X31 + 0x8C]
	0x03A7D12C ADD X0, X31, 0x1B8
	0x03A7D130 STR S0, [X31 + 0x20]
	0x03A7D134 LDR V0, [X31 + 0x80]
	0x03A7D138 ADD X1, X31, 0x1A8
	0x03A7D13C STR S4, [X31 + 0xB0]
	0x03A7D140 MOV V5.16B, V8.16B
	0x03A7D144 STP S0, S1, [X31 + 0x10]
	0x03A7D148 LDR V0, [X31 + 0x70]
	0x03A7D14C LDR V1, [X31 + 0x9C]
	0x03A7D150 MOV V6.16B, V10.16B
	0x03A7D154 MOV V3.16B, V14.16B
	0x03A7D158 STR S0, [X31 + 0x18]
	0x03A7D15C MOV V0.16B, V4.16B
	0x03A7D160 MOV V4.16B, V9.16B
	0x03A7D164 STP S13, S15, [X31]
	0x03A7D168 STR S12, [X31 + 0x8]
	0x03A7D16C BL 0x3A7F490
	0x03A7D170 TBZ X0, 0x0, 0x3A7D2AC
	0x03A7D174 LDR V8, [X31 + 0x1C0]
	0x03A7D178 LDR V0, [X19 + 0x100]
	0x03A7D17C FCMP S8, S0
	0x03A7D180 B.LT 0x3A7D214
	0x03A7D184 LDR X0, [X27]
	0x03A7D188 LDR V10, [X31 + 0x1B8]
	0x03A7D18C LDR V9, [X31 + 0x1BC]
	0x03A7D190 LDR W8, [X0 + 0xE0]
	0x03A7D194 CBNZ W8, 0x3A7D19C
	0x03A7D198 BL 0x1C16DFC
	0x03A7D19C MOV X0, X19
	0x03A7D1A0 MOV V0.16B, V10.16B
	0x03A7D1A4 MOV V1.16B, V9.16B
	0x03A7D1A8 MOV V2.16B, V8.16B
	0x03A7D1AC BL 0x3A7F3EC
	0x03A7D1B0 LDR W8, [X19 + 0xF8]
	0x03A7D1B4 FMOV W9, S0
	0x03A7D1B8 AND W9, W9, 0x7FFFFFFF
	0x03A7D1BC CMP W9, W26
	0x03A7D1C0 SUB W8, W8, 0x1
	0x03A7D1C4 SCVTF S1, W8
	0x03A7D1C8 FCCMP S0, S1, 0x0, LS
	0x03A7D1CC FCSEL S0, S1, S0, GT
	0x03A7D1D0 MOVZ X8, 0x7FF00000
	0x03A7D1D4 FMOV D1, X8
	0x03A7D1D8 FMOV W8, S0
	0x03A7D1DC AND W8, W8, 0x7FFFFFFF
	0x03A7D1E0 CMP W8, W26
	0x03A7D1E4 FMOV S2, W31
	0x03A7D1E8 FCCMP S0, S2, 0x8, LS
	0x03A7D1EC FCVT S0, S0
	0x03A7D1F0 FMOV D2, X31
	0x03A7D1F4 FCSEL D0, D2, D0, MI
	0x03A7D1F8 FCVTZS W8, D0
	0x03A7D1FC FCMP D0, D1
	0x03A7D200 CSEL W1, W31, W8, EQ
	0x03A7D204 ADD X0, X31, 0x1C4
	0x03A7D208 MOV X2, X31
	0x03A7D20C BL 0x3A7A2C0
	0x03A7D210 LDR V0, [X19 + 0x100]
	0x03A7D214 LDR V8, [X31 + 0x1B0]
	0x03A7D218 FCMP S8, S0
	0x03A7D21C B.LT 0x3A7D2AC
	0x03A7D220 LDR X0, [X27]
	0x03A7D224 LDR V10, [X31 + 0x1A8]
	0x03A7D228 LDR V9, [X31 + 0x1AC]
	0x03A7D22C LDR W8, [X0 + 0xE0]
	0x03A7D230 CBNZ W8, 0x3A7D238
	0x03A7D234 BL 0x1C16DFC
	0x03A7D238 MOV X0, X19
	0x03A7D23C MOV V0.16B, V10.16B
	0x03A7D240 MOV V1.16B, V9.16B
	0x03A7D244 MOV V2.16B, V8.16B
	0x03A7D248 BL 0x3A7F3EC
	0x03A7D24C LDR W8, [X19 + 0xF8]
	0x03A7D250 FMOV W9, S0
	0x03A7D254 AND W9, W9, 0x7FFFFFFF
	0x03A7D258 CMP W9, W26
	0x03A7D25C SUB W8, W8, 0x1
	0x03A7D260 SCVTF S1, W8
	0x03A7D264 FCCMP S0, S1, 0x0, LS
	0x03A7D268 FCSEL S0, S1, S0, GT
	0x03A7D26C MOVZ X8, 0x7FF00000
	0x03A7D270 FMOV D1, X8
	0x03A7D274 FMOV W8, S0
	0x03A7D278 AND W8, W8, 0x7FFFFFFF
	0x03A7D27C CMP W8, W26
	0x03A7D280 FMOV S2, W31
	0x03A7D284 FCCMP S0, S2, 0x8, LS
	0x03A7D288 FCVT S0, S0
	0x03A7D28C FMOV D2, X31
	0x03A7D290 FCSEL D0, D2, D0, MI
	0x03A7D294 FCVTZS W8, D0
	0x03A7D298 FCMP D0, D1
	0x03A7D29C CSEL W1, W31, W8, EQ
	0x03A7D2A0 ADD X0, X31, 0x1C4
	0x03A7D2A4 MOV X2, X31
	0x03A7D2A8 BL 0x3A7A2C0
	0x03A7D2AC LDR W8, [X31 + 0x7C]
	0x03A7D2B0 CBZ W8, 0x3A7D53C
	0x03A7D2B4 LDR X0, [X27]
	0x03A7D2B8 LDR V8, [X19 + 0x100]
	0x03A7D2BC LDR V12, [X31 + 0x2D8]
	0x03A7D2C0 LDR V9, [X31 + 0x2BC]
	0x03A7D2C4 LDR V2, [X31 + 0x2C0]
	0x03A7D2C8 LDR V3, [X31 + 0x2C4]
	0x03A7D2CC LDR V4, [X31 + 0x2C8]
	0x03A7D2D0 LDR W8, [X0 + 0xE0]
	0x03A7D2D4 LDR V5, [X31 + 0x2CC]
	0x03A7D2D8 LDR V6, [X31 + 0x2D0]
	0x03A7D2DC CBNZ W8, 0x3A7D30C
	0x03A7D2E0 MOV V10.16B, V6.16B
	0x03A7D2E4 MOV V13.16B, V4.16B
	0x03A7D2E8 MOV V14.16B, V5.16B
	0x03A7D2EC MOV V15.16B, V3.16B
	0x03A7D2F0 MOV V11.16B, V2.16B
	0x03A7D2F4 BL 0x1C16DFC
	0x03A7D2F8 MOV V2.16B, V11.16B
	0x03A7D2FC MOV V3.16B, V15.16B
	0x03A7D300 MOV V5.16B, V14.16B
	0x03A7D304 MOV V4.16B, V13.16B
	0x03A7D308 MOV V6.16B, V10.16B
	0x03A7D30C LDR V0, [X31 + 0xB0]
	0x03A7D310 LDP S11, S15, [X31 + 0x5C]
	0x03A7D314 LDP S10, S13, [X31 + 0x50]
	0x03A7D318 FMUL S1, S0, S8
	0x03A7D31C LDR V0, [X31 + 0xD0]
	0x03A7D320 STR S1, [X31 + 0xB0]
	0x03A7D324 STR S1, [X31 + 0x20]
	0x03A7D328 MOV V1.16B, V9.16B
	0x03A7D32C FDIV S7, S0, S12
	0x03A7D330 LDP S12, S14, [X31 + 0x64]
	0x03A7D334 MOV V0.16B, V8.16B
	0x03A7D338 STP S15, S11, [X31 + 0x10]
	0x03A7D33C STP S13, S10, [X31]
	0x03A7D340 STR S12, [X31 + 0x18]
	0x03A7D344 STR S14, [X31 + 0x8]
	0x03A7D348 MOV V8.16B, V7.16B
	0x03A7D34C STR S7, [X31 + 0x90]
	0x03A7D350 BL 0x3A7F738
	0x03A7D354 LDR V16, [X19 + 0x100]
	0x03A7D358 LDR V7, [X31 + 0x2BC]
	0x03A7D35C LDR V2, [X31 + 0x2C0]
	0x03A7D360 LDR V3, [X31 + 0x2C4]
	0x03A7D364 LDR V4, [X31 + 0x2C8]
	0x03A7D368 LDR V5, [X31 + 0x2CC]
	0x03A7D36C LDR V6, [X31 + 0x2D0]
	0x03A7D370 STR S1, [X31 + 0x94]
	0x03A7D374 STR S0, [X31 + 0x20]
	0x03A7D378 MOV V0.16B, V16.16B
	0x03A7D37C MOV V1.16B, V7.16B
	0x03A7D380 MOV V7.16B, V8.16B
	0x03A7D384 STP S11, S12, [X31 + 0x14]
	0x03A7D388 STR S15, [X31 + 0x10]
	0x03A7D38C STP S10, S14, [X31 + 0x4]
	0x03A7D390 STR S13, [X31]
	0x03A7D394 BL 0x3A7EC28
	0x03A7D398 LDR V7, [X31 + 0x94]
	0x03A7D39C LDR V9, [X19 + 0x100]
	0x03A7D3A0 LDR V1, [X31 + 0x2BC]
	0x03A7D3A4 LDR V2, [X31 + 0x2C0]
	0x03A7D3A8 LDR V3, [X31 + 0x2C4]
	0x03A7D3AC LDR V4, [X31 + 0x2C8]
	0x03A7D3B0 LDR V5, [X31 + 0x2CC]
	0x03A7D3B4 LDR V6, [X31 + 0x2D0]
	0x03A7D3B8 STR S7, [X31 + 0x20]
	0x03A7D3BC LDR V7, [X31 + 0x90]
	0x03A7D3C0 LDR V8, [X31 + 0xB0]
	0x03A7D3C4 STP S11, S12, [X31 + 0x14]
	0x03A7D3C8 MOV V11.16B, V0.16B
	0x03A7D3CC MOV V0.16B, V9.16B
	0x03A7D3D0 STR S15, [X31 + 0x10]
	0x03A7D3D4 STP S10, S14, [X31 + 0x4]
	0x03A7D3D8 STR S13, [X31]
	0x03A7D3DC BL 0x3A7EC28
	0x03A7D3E0 LDR V14, [X19 + 0x100]
	0x03A7D3E4 MOV V12.16B, V0.16B
	0x03A7D3E8 ADD X0, X31, 0x248
	0x03A7D3EC MOV V0.16B, V11.16B
	0x03A7D3F0 MOV V1.16B, V8.16B
	0x03A7D3F4 MOV V2.16B, V9.16B
	0x03A7D3F8 MOV V10.16B, V8.16B
	0x03A7D3FC BL 0x3A7EDF4
	0x03A7D400 LDR V13, [X31 + 0x58]
	0x03A7D404 LDR V15, [X31 + 0x98]
	0x03A7D408 TBZ X0, 0x0, 0x3A7D490
	0x03A7D40C LDR X0, [X27]
	0x03A7D410 LDR W8, [X0 + 0xE0]
	0x03A7D414 CBNZ W8, 0x3A7D41C
	0x03A7D418 BL 0x1C16DFC
	0x03A7D41C MOV X0, X19
	0x03A7D420 MOV V0.16B, V11.16B
	0x03A7D424 MOV V1.16B, V10.16B
	0x03A7D428 MOV V2.16B, V9.16B
	0x03A7D42C BL 0x3A7F3EC
	0x03A7D430 LDR W8, [X19 + 0xF8]
	0x03A7D434 FMOV W9, S0
	0x03A7D438 AND W9, W9, 0x7FFFFFFF
	0x03A7D43C CMP W9, W26
	0x03A7D440 SUB W8, W8, 0x1
	0x03A7D444 SCVTF S1, W8
	0x03A7D448 FCCMP S0, S1, 0x0, LS
	0x03A7D44C FCSEL S0, S1, S0, GT
	0x03A7D450 MOVZ X8, 0x7FF00000
	0x03A7D454 FMOV D1, X8
	0x03A7D458 FMOV W8, S0
	0x03A7D45C AND W8, W8, 0x7FFFFFFF
	0x03A7D460 CMP W8, W26
	0x03A7D464 FMOV S2, W31
	0x03A7D468 FCCMP S0, S2, 0x8, LS
	0x03A7D46C FCVT S0, S0
	0x03A7D470 FMOV D2, X31
	0x03A7D474 FCSEL D0, D2, D0, MI
	0x03A7D478 FCVTZS W8, D0
	0x03A7D47C FCMP D0, D1
	0x03A7D480 CSEL W1, W31, W8, EQ
	0x03A7D484 ADD X0, X31, 0x1C4
	0x03A7D488 MOV X2, X31
	0x03A7D48C BL 0x3A7A2C0
	0x03A7D490 LDR X0, [X27]
	0x03A7D494 LDR W8, [X0 + 0xE0]
	0x03A7D498 CBNZ W8, 0x3A7D4A0
	0x03A7D49C BL 0x1C16DFC
	0x03A7D4A0 ADD X0, X31, 0x248
	0x03A7D4A4 MOV V0.16B, V12.16B
	0x03A7D4A8 MOV V1.16B, V10.16B
	0x03A7D4AC MOV V2.16B, V14.16B
	0x03A7D4B0 BL 0x3A7EDF4
	0x03A7D4B4 TBZ X0, 0x0, 0x3A7D53C
	0x03A7D4B8 LDR X0, [X27]
	0x03A7D4BC LDR W8, [X0 + 0xE0]
	0x03A7D4C0 CBNZ W8, 0x3A7D4C8
	0x03A7D4C4 BL 0x1C16DFC
	0x03A7D4C8 MOV X0, X19
	0x03A7D4CC MOV V0.16B, V12.16B
	0x03A7D4D0 MOV V1.16B, V10.16B
	0x03A7D4D4 MOV V2.16B, V14.16B
	0x03A7D4D8 BL 0x3A7F3EC
	0x03A7D4DC LDR W8, [X19 + 0xF8]
	0x03A7D4E0 FMOV W9, S0
	0x03A7D4E4 AND W9, W9, 0x7FFFFFFF
	0x03A7D4E8 CMP W9, W26
	0x03A7D4EC SUB W8, W8, 0x1
	0x03A7D4F0 SCVTF S1, W8
	0x03A7D4F4 FCCMP S0, S1, 0x0, LS
	0x03A7D4F8 FCSEL S0, S1, S0, GT
	0x03A7D4FC MOVZ X8, 0x7FF00000
	0x03A7D500 FMOV D1, X8
	0x03A7D504 FMOV W8, S0
	0x03A7D508 AND W8, W8, 0x7FFFFFFF
	0x03A7D50C CMP W8, W26
	0x03A7D510 FMOV S2, W31
	0x03A7D514 FCCMP S0, S2, 0x8, LS
	0x03A7D518 FCVT S0, S0
	0x03A7D51C FMOV D2, X31
	0x03A7D520 FCSEL D0, D2, D0, MI
	0x03A7D524 FCVTZS W8, D0
	0x03A7D528 FCMP D0, D1
	0x03A7D52C CSEL W1, W31, W8, EQ
	0x03A7D530 ADD X0, X31, 0x1C4
	0x03A7D534 MOV X2, X31
	0x03A7D538 BL 0x3A7A2C0
	0x03A7D53C LDR W8, [X19 + 0x10C]
	0x03A7D540 LDR X9, [X19 + 0x20]
	0x03A7D544 AND X10, X23, 0x0
	0x03A7D548 AND X11, X22, 0x0
	0x03A7D54C ADD W27, W29, W8
	0x03A7D550 ADD W28, W27, 0x1
	0x03A7D554 LDR W8, [X9, W28, SXTW]
	0x03A7D558 LDR W9, [X31 + 0x1C4]
	0x03A7D55C MOV X2, X31
	0x03A7D560 ORR X23, X10, X8, 0x0
	0x03A7D564 ORR X22, X11, X9, 0x0
	0x03A7D568 MOV X0, X23
	0x03A7D56C MOV X1, X22
	0x03A7D570 BL 0x3A7A410
	0x03A7D574 LDR X8, [X19 + 0x20]
	0x03A7D578 AND X10, X25, 0x0
	0x03A7D57C AND X11, X24, 0x0
	0x03A7D580 MOV X2, X31
	0x03A7D584 STR W0, [X8, W28, SXTW]
	0x03A7D588 LDR X8, [X19 + 0x20]
	0x03A7D58C LDR W9, [X31 + 0x1C4]
	0x03A7D590 LDR W8, [X8, W27, SXTW]
	0x03A7D594 ORR X24, X11, X9, 0x0
	0x03A7D598 MOV X1, X24
	0x03A7D59C ORR X25, X10, X8, 0x0
	0x03A7D5A0 MOV X0, X25
	0x03A7D5A4 BL 0x3A7A410
	0x03A7D5A8 LDR X8, [X19 + 0x20]
	0x03A7D5AC STR W0, [X8, W27, SXTW]
	0x03A7D5B0 LDRSH W8, [X19 + 0x108]
	0x03A7D5B4 CMP W29, W8
	0x03A7D5B8 ADD W29, W29, 0x1
	0x03A7D5BC B.LT 0x3A7CE78
	0x03A7D5C0 LDRH W8, [X19 + 0xFC]
	0x03A7D5C4 ADD X0, X19, 0x106
	0x03A7D5C8 MOV W1, W31
	0x03A7D5CC MOV X3, X31
	0x03A7D5D0 SUB W2, W8, 0x1
	0x03A7D5D4 STR X0, [X31 + 0xD0]
	0x03A7D5D8 BL 0x3A7A34C
	0x03A7D5DC LDRSH W8, [X19 + 0x106]
	0x03A7D5E0 LDRSH W9, [X19 + 0x108]
	0x03A7D5E4 CMP W8, W9
	0x03A7D5E8 B.GE 0x3A7D87C
	0x03A7D5EC ADD X21, X19, 0xC8
	0x03A7D5F0 ADD X22, X19, 0xD0
	0x03A7D5F4 ADD W28, W8, 0x1
	0x03A7D5F8 MOVZ W20, 0x7F800000
	0x03A7D5FC FMOV D15, X31
	0x03A7D600 MOV X0, X31
	0x03A7D604 BL 0x3A7A4A4
	0x03A7D608 STR W0, [X31 + 0x1A4]
	0x03A7D60C ADRP X27, 0x6DA000
	0x03A7D610 LDR W1, [X19 + 0x110]
	0x03A7D614 LDR X27, [X27 + 0x10]
	0x03A7D618 MOV X0, X21
	0x03A7D61C LDR X2, [X27]
	0x03A7D620 BL 0x2D1F050
	0x03A7D624 LDR W1, [X19 + 0x110]
	0x03A7D628 LDR X2, [X27]
	0x03A7D62C MOV X0, X22
	0x03A7D630 MOV V8.16B, V0.16B
	0x03A7D634 BL 0x2D1F050
	0x03A7D638 ADRP X27, 0x6A1000
	0x03A7D63C LDR V14, [X19 + 0xC4]
	0x03A7D640 LDR X27, [X27 + 0xDB8]
	0x03A7D644 LDR V9, [X31 + 0x2BC]
	0x03A7D648 LDR V10, [X31 + 0x2C0]
	0x03A7D64C LDR V11, [X31 + 0x2C4]
	0x03A7D650 LDR X0, [X27]
	0x03A7D654 LDR V12, [X19 + 0x100]
	0x03A7D658 MOV V13.16B, V0.16B
	0x03A7D65C LDR W8, [X0 + 0xE0]
	0x03A7D660 CBNZ W8, 0x3A7D668
	0x03A7D664 BL 0x1C16DFC
	0x03A7D668 SCVTF S0, W28
	0x03A7D66C LDR V3, [X31 + 0xF0]
	0x03A7D670 LDR V5, [X31 + 0xE0]
	0x03A7D674 FMUL S0, S14, S0
	0x03A7D678 FSUB S1, S13, S8
	0x03A7D67C FMUL S0, S1, S0
	0x03A7D680 FADD S6, S8, S0
	0x03A7D684 ADD X0, X31, 0x198
	0x03A7D688 ADD X1, X31, 0x188
	0x03A7D68C MOV V0.16B, V9.16B
	0x03A7D690 MOV V1.16B, V10.16B
	0x03A7D694 MOV V2.16B, V11.16B
	0x03A7D698 MOV V4.16B, V12.16B
	0x03A7D69C BL 0x3A7FB9C
	0x03A7D6A0 LDR V10, [X31 + 0x198]
	0x03A7D6A4 LDR V9, [X31 + 0x19C]
	0x03A7D6A8 LDR V8, [X31 + 0x1A0]
	0x03A7D6AC ADD X0, X31, 0x248
	0x03A7D6B0 MOV V0.16B, V10.16B
	0x03A7D6B4 MOV V1.16B, V9.16B
	0x03A7D6B8 MOV V2.16B, V8.16B
	0x03A7D6BC BL 0x3A7E4B4
	0x03A7D6C0 TBZ X0, 0x0, 0x3A7D744
	0x03A7D6C4 LDR X0, [X27]
	0x03A7D6C8 LDR W8, [X0 + 0xE0]
	0x03A7D6CC CBNZ W8, 0x3A7D6D4
	0x03A7D6D0 BL 0x1C16DFC
	0x03A7D6D4 MOV X0, X19
	0x03A7D6D8 MOV V0.16B, V10.16B
	0x03A7D6DC MOV V1.16B, V9.16B
	0x03A7D6E0 MOV V2.16B, V8.16B
	0x03A7D6E4 BL 0x3A7F3EC
	0x03A7D6E8 LDR W8, [X19 + 0xF8]
	0x03A7D6EC FMOV W9, S0
	0x03A7D6F0 AND W9, W9, 0x7FFFFFFF
	0x03A7D6F4 CMP W9, W20
	0x03A7D6F8 SUB W8, W8, 0x1
	0x03A7D6FC SCVTF S1, W8
	0x03A7D700 FCCMP S0, S1, 0x0, LS
	0x03A7D704 FCSEL S0, S1, S0, GT
	0x03A7D708 MOVZ X8, 0x7FF00000
	0x03A7D70C FMOV D1, X8
	0x03A7D710 FMOV W8, S0
	0x03A7D714 AND W8, W8, 0x7FFFFFFF
	0x03A7D718 CMP W8, W20
	0x03A7D71C FMOV S2, W31
	0x03A7D720 FCCMP S0, S2, 0x8, LS
	0x03A7D724 FCVT S0, S0
	0x03A7D728 FCSEL D0, D15, D0, MI
	0x03A7D72C FCVTZS W8, D0
	0x03A7D730 FCMP D0, D1
	0x03A7D734 CSEL W1, W31, W8, EQ
	0x03A7D738 ADD X0, X31, 0x1A4
	0x03A7D73C MOV X2, X31
	0x03A7D740 BL 0x3A7A2C0
	0x03A7D744 LDR X0, [X27]
	0x03A7D748 LDR V10, [X31 + 0x188]
	0x03A7D74C LDR V8, [X31 + 0x18C]
	0x03A7D750 LDR V9, [X31 + 0x190]
	0x03A7D754 LDR W8, [X0 + 0xE0]
	0x03A7D758 CBNZ W8, 0x3A7D760
	0x03A7D75C BL 0x1C16DFC
	0x03A7D760 ADD X0, X31, 0x248
	0x03A7D764 MOV V0.16B, V10.16B
	0x03A7D768 MOV V1.16B, V8.16B
	0x03A7D76C MOV V2.16B, V9.16B
	0x03A7D770 BL 0x3A7E4B4
	0x03A7D774 TBZ X0, 0x0, 0x3A7D7F8
	0x03A7D778 LDR X0, [X27]
	0x03A7D77C LDR W8, [X0 + 0xE0]
	0x03A7D780 CBNZ W8, 0x3A7D788
	0x03A7D784 BL 0x1C16DFC
	0x03A7D788 MOV X0, X19
	0x03A7D78C MOV V0.16B, V10.16B
	0x03A7D790 MOV V1.16B, V8.16B
	0x03A7D794 MOV V2.16B, V9.16B
	0x03A7D798 BL 0x3A7F3EC
	0x03A7D79C LDR W8, [X19 + 0xF8]
	0x03A7D7A0 FMOV W9, S0
	0x03A7D7A4 AND W9, W9, 0x7FFFFFFF
	0x03A7D7A8 CMP W9, W20
	0x03A7D7AC SUB W8, W8, 0x1
	0x03A7D7B0 SCVTF S1, W8
	0x03A7D7B4 FCCMP S0, S1, 0x0, LS
	0x03A7D7B8 FCSEL S0, S1, S0, GT
	0x03A7D7BC MOVZ X8, 0x7FF00000
	0x03A7D7C0 FMOV D1, X8
	0x03A7D7C4 FMOV W8, S0
	0x03A7D7C8 AND W8, W8, 0x7FFFFFFF
	0x03A7D7CC CMP W8, W20
	0x03A7D7D0 FMOV S2, W31
	0x03A7D7D4 FCCMP S0, S2, 0x8, LS
	0x03A7D7D8 FCVT S0, S0
	0x03A7D7DC FCSEL D0, D15, D0, MI
	0x03A7D7E0 FCVTZS W8, D0
	0x03A7D7E4 FCMP D0, D1
	0x03A7D7E8 CSEL W1, W31, W8, EQ
	0x03A7D7EC ADD X0, X31, 0x1A4
	0x03A7D7F0 MOV X2, X31
	0x03A7D7F4 BL 0x3A7A2C0
	0x03A7D7F8 LDR W8, [X19 + 0x10C]
	0x03A7D7FC LDR X9, [X19 + 0x20]
	0x03A7D800 AND X10, X26, 0x0
	0x03A7D804 AND X11, X24, 0x0
	0x03A7D808 ADD W27, W28, W8
	0x03A7D80C ADD W29, W27, 0x1
	0x03A7D810 LDR W8, [X9, W29, SXTW]
	0x03A7D814 LDR W9, [X31 + 0x1A4]
	0x03A7D818 MOV X2, X31
	0x03A7D81C ORR X26, X10, X8, 0x0
	0x03A7D820 ORR X24, X11, X9, 0x0
	0x03A7D824 MOV X0, X26
	0x03A7D828 MOV X1, X24
	0x03A7D82C BL 0x3A7A410
	0x03A7D830 LDR X8, [X19 + 0x20]
	0x03A7D834 AND X10, X25, 0x0
	0x03A7D838 AND X11, X23, 0x0
	0x03A7D83C MOV X2, X31
	0x03A7D840 STR W0, [X8, W29, SXTW]
	0x03A7D844 LDR X8, [X19 + 0x20]
	0x03A7D848 LDR W9, [X31 + 0x1A4]
	0x03A7D84C LDR W8, [X8, W27, SXTW]
	0x03A7D850 ORR X23, X11, X9, 0x0
	0x03A7D854 MOV X1, X23
	0x03A7D858 ORR X25, X10, X8, 0x0
	0x03A7D85C MOV X0, X25
	0x03A7D860 BL 0x3A7A410
	0x03A7D864 LDR X8, [X19 + 0x20]
	0x03A7D868 STR W0, [X8, W27, SXTW]
	0x03A7D86C LDRSH W8, [X19 + 0x108]
	0x03A7D870 CMP W28, W8
	0x03A7D874 ADD W28, W28, 0x1
	0x03A7D878 B.LT 0x3A7D600
	0x03A7D87C LDR X9, [X31 + 0xD0]
	0x03A7D880 LDRSW X8, [X19 + 0x10C]
	0x03A7D884 LDR X10, [X19 + 0x20]
	0x03A7D888 LDR W9, [X9]
	0x03A7D88C STR W9, [X10, X8, LSL #2]
	0x03A7D890 ADD X31, X31, 0x2E0
	0x03A7D894 LDP X20, X19, [X31 + 0x90]
	0x03A7D898 LDP X22, X21, [X31 + 0x80]
	0x03A7D89C LDP X24, X23, [X31 + 0x70]
	0x03A7D8A0 LDP X26, X25, [X31 + 0x60]
	0x03A7D8A4 LDP X28, X27, [X31 + 0x50]
	0x03A7D8A8 LDP X29, X30, [X31 + 0x40]
	0x03A7D8AC LDP D9, D8, [X31 + 0x30]
	0x03A7D8B0 LDP D11, D10, [X31 + 0x20]
	0x03A7D8B4 LDP D13, D12, [X31 + 0x10]
	0x03A7D8B8 LDP D15, D14, [X31], #0xA0
	0x03A7D8BC RET
	0x03A7D8C0 SUB X31, X31, 0x1F0
	0x03A7D8C4 STP D15, D14, [X31 + 0x150]
	0x03A7D8C8 STP D13, D12, [X31 + 0x160]
	0x03A7D8CC STP D11, D10, [X31 + 0x170]
	0x03A7D8D0 STP D9, D8, [X31 + 0x180]
	0x03A7D8D4 STP X29, X30, [X31 + 0x190]
	0x03A7D8D8 STP X28, X27, [X31 + 0x1A0]
	0x03A7D8DC STP X26, X25, [X31 + 0x1B0]
	0x03A7D8E0 STP X24, X23, [X31 + 0x1C0]
	0x03A7D8E4 STP X22, X21, [X31 + 0x1D0]
	0x03A7D8E8 STP X20, X19, [X31 + 0x1E0]
	0x03A7D8EC ADRP X21, 0x965000
	0x03A7D8F0 ADRP X27, 0x6A1000
	0x03A7D8F4 LDRB W8, [X21 + 0x30E]
	0x03A7D8F8 LDR X27, [X27 + 0xDB8]
	0x03A7D8FC MOV W20, W1
	0x03A7D900 MOV X19, X0
	0x03A7D904 TBNZ X8, 0x0, 0x3A7D964
	0x03A7D908 ADRP X0, 0x6D9000
	0x03A7D90C LDR X0, [X0 + 0xFE8]
	0x03A7D910 BL 0x1C16CF4
	0x03A7D914 ADRP X0, 0x6DA000
	0x03A7D918 LDR X0, [X0 + 0x10]
	0x03A7D91C BL 0x1C16CF4
	0x03A7D920 ADRP X0, 0x6D7000
	0x03A7D924 LDR X0, [X0 + 0x9C0]
	0x03A7D928 BL 0x1C16CF4
	0x03A7D92C ADRP X0, 0x6D8000
	0x03A7D930 LDR X0, [X0 + 0xB78]
	0x03A7D934 BL 0x1C16CF4
	0x03A7D938 ADRP X0, 0x6DA000
	0x03A7D93C LDR X0, [X0 + 0x18]
	0x03A7D940 BL 0x1C16CF4
	0x03A7D944 ADRP X0, 0x6D7000
	0x03A7D948 LDR X0, [X0 + 0x530]
	0x03A7D94C BL 0x1C16CF4
	0x03A7D950 ADRP X0, 0x6A1000
	0x03A7D954 LDR X0, [X0 + 0xDB8]
	0x03A7D958 BL 0x1C16CF4
	0x03A7D95C MOVZ W8, 0x1
	0x03A7D960 STRB W8, [X21 + 0x30E]
	0x03A7D964 ADD X0, X31, 0xC8
	0x03A7D968 MOVZ W2, 0x88
	0x03A7D96C MOV W1, W31
	0x03A7D970 MOVZ W21, 0x88
	0x03A7D974 BL 0x3EB1B10
	0x03A7D978 STP X31, X31, [X31 + 0xB8]
	0x03A7D97C STP X31, X31, [X31 + 0xA8]
	0x03A7D980 STP X31, X31, [X31 + 0x98]
	0x03A7D984 STP X31, X31, [X31 + 0x80]
	0x03A7D988 STR W31, [X31 + 0x7C]
	0x03A7D98C LDR W8, [X19 + 0x8]
	0x03A7D990 LDR X9, [X19 + 0x10]
	0x03A7D994 ADD X0, X31, 0xC8
	0x03A7D998 MOVZ W2, 0x88
	0x03A7D99C SUB W8, W20, W8
	0x03A7D9A0 SMADDL X1, X8, X21, X9
	0x03A7D9A4 BL 0x3EB1B30
	0x03A7D9A8 ADD X8, X31, 0x38
	0x03A7D9AC ADD X0, X31, 0xC8
	0x03A7D9B0 MOV X1, X31
	0x03A7D9B4 BL 0x3C5C12C
	0x03A7D9B8 LDP S0, S1, [X31 + 0x38]
	0x03A7D9BC LDR V2, [X31 + 0x40]
	0x03A7D9C0 MOV X0, X31
	0x03A7D9C4 BL 0x3887BE4
	0x03A7D9C8 ADD X8, X31, 0x38
	0x03A7D9CC ADD X0, X31, 0xC8
	0x03A7D9D0 MOV X1, X31
	0x03A7D9D4 STR S0, [X31 + 0x34]
	0x03A7D9D8 STR S1, [X31 + 0x28]
	0x03A7D9DC STR S2, [X31 + 0x20]
	0x03A7D9E0 BL 0x3C5C12C
	0x03A7D9E4 LDP S0, S1, [X31 + 0x44]
	0x03A7D9E8 LDR V2, [X31 + 0x4C]
	0x03A7D9EC MOV X0, X31
	0x03A7D9F0 BL 0x3887BE4
	0x03A7D9F4 LDR X0, [X27]
	0x03A7D9F8 STR S0, [X31 + 0x18]
	0x03A7D9FC STR S1, [X31 + 0x10]
	0x03A7DA00 STR S2, [X31 + 0x8]
	0x03A7DA04 LDR W8, [X0 + 0xE0]
	0x03A7DA08 CBNZ W8, 0x3A7DA14
	0x03A7DA0C BL 0x1C16DFC
	0x03A7DA10 LDR X0, [X27]
	0x03A7DA14 LDR X8, [X0 + 0xB8]
	0x03A7DA18 LDR X8, [X8]
	0x03A7DA1C CBZ X8, 0x3A7E0FC
	0x03A7DA20 ADRP X9, 0x6DA000
	0x03A7DA24 LDR X9, [X9 + 0x18]
	0x03A7DA28 LDR W1, [X8 + 0x18]
	0x03A7DA2C ADD X0, X31, 0xB8
	0x03A7DA30 MOVZ W2, 0x2
	0x03A7DA34 LDR X4, [X9]
	0x03A7DA38 MOVZ W3, 0x1
	0x03A7DA3C BL 0x23F937C
	0x03A7DA40 LDR X8, [X27]
	0x03A7DA44 LDR X9, [X8 + 0xB8]
	0x03A7DA48 LDR X8, [X9]
	0x03A7DA4C CBZ X8, 0x3A7E0FC
	0x03A7DA50 LDR X9, [X9 + 0x8]
	0x03A7DA54 CBZ X9, 0x3A7E0FC
	0x03A7DA58 ADRP X22, 0x6D7000
	0x03A7DA5C LDR X22, [X22 + 0x530]
	0x03A7DA60 ADRP X23, 0x6D9000
	0x03A7DA64 ADRP X28, 0x6D7000
	0x03A7DA68 LDR X23, [X23 + 0xFE8]
	0x03A7DA6C LDR X28, [X28 + 0x9C0]
	0x03A7DA70 LDR W9, [X9 + 0x18]
	0x03A7DA74 LDR W8, [X8 + 0x18]
	0x03A7DA78 LDR X4, [X22]
	0x03A7DA7C ADRP X29, 0x6D8000
	0x03A7DA80 LDR X29, [X29 + 0xB78]
	0x03A7DA84 ADD W9, W9, W9, 0x1, LSL
	0x03A7DA88 ADD W1, W9, W8
	0x03A7DA8C ADD X0, X31, 0xA8
	0x03A7DA90 MOVZ W2, 0x2
	0x03A7DA94 MOVZ W3, 0x1
	0x03A7DA98 BL 0x23F8534
	0x03A7DA9C MOV X25, X31
	0x03A7DAA0 MOV X26, X31
	0x03A7DAA4 MOV W24, W31
	0x03A7DAA8 MOV W20, W31
	0x03A7DAAC ADD X21, X19, 0x38
	0x03A7DAB0 LDR X0, [X27]
	0x03A7DAB4 LDR W8, [X0 + 0xE0]
	0x03A7DAB8 CBNZ W8, 0x3A7DAC4
	0x03A7DABC BL 0x1C16DFC
	0x03A7DAC0 LDR X0, [X27]
	0x03A7DAC4 LDR X8, [X0 + 0xB8]
	0x03A7DAC8 LDR X8, [X8]
	0x03A7DACC CBZ X8, 0x3A7E0FC
	0x03A7DAD0 LDRSW X8, [X8 + 0x18]
	0x03A7DAD4 CMP X26, X8
	0x03A7DAD8 B.GE 0x3A7DC14
	0x03A7DADC LDR W1, [X19 + 0x110]
	0x03A7DAE0 LDR X2, [X23]
	0x03A7DAE4 ADD X8, X31, 0x38
	0x03A7DAE8 MOV X0, X21
	0x03A7DAEC BL 0x2D1F610
	0x03A7DAF0 LDR X0, [X27]
	0x03A7DAF4 LDR V14, [X31 + 0x38]
	0x03A7DAF8 LDR V15, [X31 + 0x40]
	0x03A7DAFC LDR V8, [X31 + 0x48]
	0x03A7DB00 LDR V9, [X31 + 0x50]
	0x03A7DB04 LDR V12, [X31 + 0x58]
	0x03A7DB08 LDR V13, [X31 + 0x60]
	0x03A7DB0C LDR V10, [X31 + 0x68]
	0x03A7DB10 LDR W8, [X0 + 0xE0]
	0x03A7DB14 LDR V11, [X31 + 0x70]
	0x03A7DB18 CBNZ W8, 0x3A7DB24
	0x03A7DB1C BL 0x1C16DFC
	0x03A7DB20 LDR X0, [X27]
	0x03A7DB24 LDR X8, [X0 + 0xB8]
	0x03A7DB28 LDR X8, [X8]
	0x03A7DB2C CBZ X8, 0x3A7E0FC
	0x03A7DB30 LDR W9, [X8 + 0x18]
	0x03A7DB34 CMP X26, X9
	0x03A7DB38 B.CS 0x3A7E100
	0x03A7DB3C ADD X8, X8, X25
	0x03A7DB40 LDP S0, S1, [X8 + 0x20]
	0x03A7DB44 LDR V3, [X31 + 0x18]
	0x03A7DB48 LDR V2, [X8 + 0x28]
	0x03A7DB4C LDR X9, [X31 + 0xB8]
	0x03A7DB50 FMUL S0, S3, S0
	0x03A7DB54 LDR V3, [X31 + 0x10]
	0x03A7DB58 ADD X8, X9, X25
	0x03A7DB5C FMUL S1, S3, S1
	0x03A7DB60 LDR V3, [X31 + 0x8]
	0x03A7DB64 FMUL S2, S3, S2
	0x03A7DB68 LDR V3, [X31 + 0x34]
	0x03A7DB6C FADD S0, S3, S0
	0x03A7DB70 LDR V3, [X31 + 0x28]
	0x03A7DB74 FADD S1, S3, S1
	0x03A7DB78 LDR V3, [X31 + 0x20]
	0x00000000 INVALID
	0x03A7DB80 FMUL S1, S9, S1
	0x03A7DB84 FADD S2, S3, S2
	0x00000000 INVALID
	0x03A7DB8C FMUL S0, S15, S0
	0x00000000 INVALID
	0x03A7DB94 FMUL S2, S13, S2
	0x03A7DB98 FADD V3.2S, V3.2S, V4.2S
	0x03A7DB9C FADD S0, S0, S1
	0x03A7DBA0 FADD V1.2S, V3.2S, V5.2S
	0x03A7DBA4 FADD S2, S0, S2
	0x03A7DBA8 FADD V0.2S, V10.2S, V1.2S
	0x03A7DBAC FADD S1, S11, S2
	0x03A7DBB0 FNEG S1, S1
	0x03A7DBB4 STR D0, [X8]
	0x03A7DBB8 STR S1, [X8 + 0x8]
	0x03A7DBBC LDR V2, [X19 + 0x100]
	0x03A7DBC0 FCMP S2, S1
	0x03A7DBC4 B.LS 0x3A7DBD0
	0x03A7DBC8 MOV W8, W20
	0x03A7DBCC B 0x3A7DC04
	0x03A7DBD0 LDRB W8, [X19 + 0x104]
	0x03A7DBD4 CBNZ W8, 0x3A7DBE0
	0x03A7DBD8 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A7DBE0 LDR X8, [X31 + 0xA8]
	0x03A7DBE4 SBFM X9, X24, 0x3D, 0x1F
	0x03A7DBE8 STR D0, [X8, W20, SXTW]
	0x03A7DBEC LDR X8, [X31 + 0xA8]
	0x03A7DBF0 LDR V1, [X8, X9, LSL]
	0x03A7DBF4 ADD W8, W20, 0x1
	0x03A7DBF8 FCMP S0, S1
	0x03A7DBFC B.PL 0x3A7DC04
	0x03A7DC00 MOV W24, W20
	0x03A7DC04 ADD X26, X26, 0x1
	0x03A7DC08 ADD X25, X25, 0xC
	0x03A7DC0C MOV W20, W8
	0x03A7DC10 B 0x3A7DAB0
	0x03A7DC14 MOV X25, X31
	0x03A7DC18 MOVZ W26, 0xC
	0x03A7DC1C MOV W23, W24
	0x03A7DC20 LDR W8, [X0 + 0xE0]
	0x03A7DC24 CBNZ W8, 0x3A7DC30
	0x03A7DC28 BL 0x1C16DFC
	0x03A7DC2C LDR X0, [X27]
	0x03A7DC30 LDR X8, [X0 + 0xB8]
	0x03A7DC34 LDR X8, [X8 + 0x8]
	0x03A7DC38 CBZ X8, 0x3A7E0FC
	0x03A7DC3C LDRSW X9, [X8 + 0x18]
	0x03A7DC40 CMP X25, X9
	0x03A7DC44 B.GE 0x3A7DD4C
	0x03A7DC48 LDR W9, [X0 + 0xE0]
	0x03A7DC4C CBNZ W9, 0x3A7DC64
	0x03A7DC50 BL 0x1C16DFC
	0x03A7DC54 LDR X8, [X27]
	0x03A7DC58 LDR X8, [X8 + 0xB8]
	0x03A7DC5C LDR X8, [X8 + 0x8]
	0x03A7DC60 CBZ X8, 0x3A7E0FC
	0x03A7DC64 LDR W9, [X8 + 0x18]
	0x03A7DC68 CMP X25, X9
	0x03A7DC6C B.CS 0x3A7E100
	0x03A7DC70 ADD X8, X8, X25, 0x4, LSL
	0x03A7DC74 LDR V0, [X8 + 0x2]
	0x03A7DC78 LDR X8, [X31 + 0xB8]
	0x03A7DC7C MOVZ W21, 0x1
	0x03A7DC80 FMOV X9, D0
	0x03A7DC84 STR V0, [X31 + 0x8]
	0x03A7DC88 NOP
	0x03A7DC8C SMADDL X8, X9, X26, X8
	0x03A7DC90 LDR V8, [X8]
	0x03A7DC94 LDR V9, [X8 + 0x8]
	0x03A7DC98 ADD X0, X31, 0x80
	0x03A7DC9C MOV W1, W21
	0x03A7DCA0 MOV X2, X31
	0x03A7DCA4 BL 0x38B3884
	0x03A7DCA8 LDR X8, [X31 + 0xB8]
	0x03A7DCAC LDR V1, [X19 + 0x100]
	0x03A7DCB0 NOP
	0x03A7DCB4 SMADDL X8, X0, X26, X8
	0x03A7DCB8 LDR V0, [X8]
	0x03A7DCBC LDR V2, [X8 + 0x8]
	0x03A7DCC0 FCMP S9, S1
	0x03A7DCC4 B.PL 0x3A7DCD4
	0x03A7DCC8 FCMP S2, S1
	0x03A7DCCC B.PL 0x3A7DCDC
	0x03A7DCD0 B 0x3A7DD34
	0x03A7DCD4 FCMP S2, S1
	0x03A7DCD8 B.PL 0x3A7DD34
	0x03A7DCDC FSUB S3, S1, S9
	0x03A7DCE0 FSUB S1, S2, S9
	0x03A7DCE4 LDRB W8, [X19 + 0x104]
	0x03A7DCE8 FDIV S2, S3, S1
	0x03A7DCEC FSUB V0.2S, V0.2S, V8.2S
	0x00000000 INVALID
	0x03A7DCF4 FADD V0.2S, V8.2S, V0.2S
	0x03A7DCF8 CBNZ W8, 0x3A7DD0C
	0x03A7DCFC FMUL S1, S1, S2
	0x03A7DD00 FADD S1, S9, S1
	0x03A7DD04 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A7DD0C LDR X8, [X31 + 0xA8]
	0x03A7DD10 SBFM X9, X23, 0x3D, 0x1F
	0x03A7DD14 STR D0, [X8, W20, SXTW]
	0x03A7DD18 LDR X8, [X31 + 0xA8]
	0x03A7DD1C LDR V1, [X8, X9, LSL]
	0x03A7DD20 ADD W8, W20, 0x1
	0x03A7DD24 FCMP S0, S1
	0x03A7DD28 B.PL 0x3A7DD30
	0x03A7DD2C MOV W23, W20
	0x03A7DD30 MOV W20, W8
	0x03A7DD34 ADD W21, W21, 0x1
	0x03A7DD38 CMP W21, 0x4
	0x03A7DD3C B.NE 0x3A7DC98
	0x03A7DD40 LDR X0, [X27]
	0x03A7DD44 ADD X25, X25, 0x1
	0x03A7DD48 B 0x3A7DC20
	0x03A7DD4C LDR X4, [X22]
	0x03A7DD50 ADD X0, X31, 0x98
	0x03A7DD54 MOVZ W2, 0x2
	0x03A7DD58 MOVZ W3, 0x1
	0x03A7DD5C MOV W1, W20
	0x03A7DD60 BL 0x23F8534
	0x03A7DD64 CMP W20, 0x1
	0x03A7DD68 B.LT 0x3A7E0A8
	0x03A7DD6C LDR X8, [X31 + 0xA8]
	0x03A7DD70 MOV W20, W20
	0x03A7DD74 MOV X29, X31
	0x03A7DD78 SUB X21, X20, 0x1
	0x03A7DD7C MOV W22, W23
	0x03A7DD80 LDR X0, [X27]
	0x03A7DD84 ADD X8, X8, W22, 0x3, SXTW
	0x03A7DD88 LDP S8, S9, [X8]
	0x03A7DD8C MOV X28, X29
	0x03A7DD90 LDR W9, [X0 + 0xE0]
	0x03A7DD94 CBNZ W9, 0x3A7DD9C
	0x03A7DD98 BL 0x1C16DFC
	0x03A7DD9C FMOV S2, 1
	0x03A7DDA0 MOV X0, X19
	0x03A7DDA4 MOV V0.16B, V8.16B
	0x03A7DDA8 MOV V1.16B, V9.16B
	0x03A7DDAC BL 0x3A7E104
	0x03A7DDB0 LDR X8, [X31 + 0x98]
	0x03A7DDB4 MOV X10, X31
	0x03A7DDB8 MOV W9, W31
	0x03A7DDBC ADD X29, X28, 0x1
	0x03A7DDC0 ADD X8, X8, X28, 0x3, LSL
	0x03A7DDC4 STP S8, S9, [X8]
	0x03A7DDC8 LDR X8, [X31 + 0xA8]
	0x03A7DDCC LDP S3, S2, [X8]
	0x03A7DDD0 ADD X11, X8, 0xC
	0x03A7DDD4 FSUB S0, S2, S9
	0x03A7DDD8 FSUB S1, S3, S8
	0x03A7DDDC FSUB S3, S3, S8
	0x03A7DDE0 CMP W9, W22
	0x03A7DDE4 FSUB S2, S2, S9
	0x03A7DDE8 B.EQ 0x3A7DE24
	0x03A7DDEC FMUL S4, S1, S2
	0x03A7DDF0 FMUL S5, S0, S3
	0x03A7DDF4 FSUB S4, S4, S5
	0x03A7DDF8 FCMP S4, 0x0
	0x03A7DDFC B.GT 0x3A7DE24
	0x03A7DE00 B.NE 0x3A7DE30
	0x03A7DE04 FMUL S4, S3, S3
	0x03A7DE08 FMUL S5, S2, S2
	0x03A7DE0C FMUL S6, S1, S1
	0x03A7DE10 FMUL S7, S0, S0
	0x03A7DE14 FADD S4, S4, S5
	0x03A7DE18 FADD S5, S7, S6
	0x03A7DE1C FCMP S4, S5
	0x03A7DE20 B.LE 0x3A7DE30
	0x03A7DE24 MOV V0.16B, V2.16B
	0x03A7DE28 MOV V1.16B, V3.16B
	0x03A7DE2C MOV W9, W10
	0x03A7DE30 CMP X21, X10
	0x03A7DE34 B.EQ 0x3A7DE48
	0x03A7DE38 LDP S3, S2, [X11 - 0x4]
	0x03A7DE3C ADD X10, X10, 0x1
	0x03A7DE40 ADD X11, X11, 0x8
	0x03A7DE44 B 0x3A7DDDC
	0x03A7DE48 CMP X29, X20
	0x03A7DE4C B.CS 0x3A7DE5C
	0x03A7DE50 CMP W9, W23
	0x03A7DE54 MOV W22, W9
	0x03A7DE58 B.NE 0x3A7DD80
	0x03A7DE5C LDRH W8, [X19 + 0xFC]
	0x03A7DE60 ADD X0, X19, 0x106
	0x03A7DE64 MOV W1, W31
	0x03A7DE68 MOV X3, X31
	0x03A7DE6C SUB W2, W8, 0x1
	0x03A7DE70 MOV X24, X27
	0x03A7DE74 STR X0, [X31 + 0x8]
	0x03A7DE78 BL 0x3A7A34C
	0x03A7DE7C LDRSH W27, [X19 + 0x106]
	0x03A7DE80 LDRSH W8, [X19 + 0x108]
	0x03A7DE84 CMP W27, W8
	0x03A7DE88 B.GE 0x3A7E084
	0x03A7DE8C ADD X9, X19, 0xC8
	0x03A7DE90 ADD X8, X19, 0xD0
	0x03A7DE94 STP X8, X9, [X31 + 0x10]
	0x03A7DE98 FMOV S9, 1
	0x03A7DE9C MOVZ W21, 0x7F800000
	0x03A7DEA0 FMOV S10, W31
	0x03A7DEA4 FMOV D11, X31
	0x03A7DEA8 MOVZ X22, 0x7FF00000
	0x03A7DEAC MOV X0, X31
	0x03A7DEB0 ADD W27, W27, 0x1
	0x03A7DEB4 BL 0x3A7A4A4
	0x03A7DEB8 STR W0, [X31 + 0x7C]
	0x03A7DEBC ADRP X20, 0x6DA000
	0x03A7DEC0 LDR W1, [X19 + 0x110]
	0x03A7DEC4 LDR X20, [X20 + 0x10]
	0x03A7DEC8 LDR X0, [X31 + 0x18]
	0x03A7DECC LDR X2, [X20]
	0x03A7DED0 BL 0x2D1F050
	0x03A7DED4 LDR W1, [X19 + 0x110]
	0x03A7DED8 LDR X2, [X20]
	0x03A7DEDC LDR X0, [X31 + 0x10]
	0x03A7DEE0 MOV V8.16B, V0.16B
	0x03A7DEE4 BL 0x2D1F050
	0x03A7DEE8 LDR V1, [X19 + 0xC4]
	0x03A7DEEC MOV W8, W27
	0x03A7DEF0 SCVTF S2, W8
	0x03A7DEF4 FSUB S0, S0, S8
	0x03A7DEF8 FMUL S1, S1, S2
	0x03A7DEFC FMUL S0, S0, S1
	0x03A7DF00 MOV X27, X31
	0x03A7DF04 FADD S8, S8, S0
	0x03A7DF08 MOVN X20, 0x0
	0x03A7DF0C STR W8, [X31 + 0x34]
	0x03A7DF10 LDR X8, [X31 + 0x98]
	0x03A7DF14 ADD W9, W20, 0x2
	0x03A7DF18 UDIV W10, W9, W29
	0x03A7DF1C MSUB W9, W10, W29, W9
	0x03A7DF20 ADD X10, X8, X27
	0x03A7DF24 ADD X11, X8, W9, 0x3, UXTW
	0x03A7DF28 LDR V0, [X10 + 0x4]
	0x03A7DF2C LDR V1, [X11 + 0x4]
	0x03A7DF30 FSUB S2, S8, S0
	0x03A7DF34 FSUB S0, S1, S0
	0x03A7DF38 FDIV S12, S2, S0
	0x03A7DF3C FCMP S12, 0x0
	0x03A7DF40 B.MI 0x3A7DFE8
	0x03A7DF44 FCMP S12, S9
	0x03A7DF48 B.GT 0x3A7DFE8
	0x03A7DF4C LDR X0, [X24]
	0x03A7DF50 UBFM X9, X9, 0x3D, 0x3C
	0x03A7DF54 LDR V13, [X10]
	0x03A7DF58 LDR V14, [X8, X9, LSL]
	0x03A7DF5C LDR W8, [X0 + 0xE0]
	0x03A7DF60 LDRB W23, [X19 + 0x104]
	0x03A7DF64 CBNZ W8, 0x3A7DF6C
	0x03A7DF68 BL 0x1C16DFC
	0x03A7DF6C FSUB S0, S14, S13
	0x03A7DF70 FMUL S0, S12, S0
	0x03A7DF74 FADD S0, S13, S0
	0x03A7DF78 FMOV S2, 1
	0x03A7DF7C MOV X0, X19
	0x03A7DF80 MOV V1.16B, V8.16B
	0x03A7DF84 CBZ W23, 0x3A7DF90
	0x03A7DF88 BL 0x3A80268
	0x03A7DF8C B 0x3A7DF94
	0x03A7DF90 BL 0x3A7F3EC
	0x03A7DF94 LDR W8, [X19 + 0xF8]
	0x03A7DF98 FMOV W9, S0
	0x03A7DF9C AND W9, W9, 0x7FFFFFFF
	0x03A7DFA0 CMP W9, W21
	0x03A7DFA4 SUB W8, W8, 0x1
	0x03A7DFA8 SCVTF S1, W8
	0x03A7DFAC FCCMP S0, S1, 0x0, LS
	0x03A7DFB0 FCSEL S0, S1, S0, GT
	0x03A7DFB4 FMOV W8, S0
	0x03A7DFB8 AND W8, W8, 0x7FFFFFFF
	0x03A7DFBC CMP W8, W21
	0x03A7DFC0 FCCMP S0, S10, 0x8, LS
	0x03A7DFC4 FCVT S0, S0
	0x03A7DFC8 FMOV D1, X22
	0x03A7DFCC FCSEL D0, D11, D0, MI
	0x03A7DFD0 FCVTZS W8, D0
	0x03A7DFD4 FCMP D0, D1
	0x03A7DFD8 CSEL W1, W31, W8, EQ
	0x03A7DFDC ADD X0, X31, 0x7C
	0x03A7DFE0 MOV X2, X31
	0x03A7DFE4 BL 0x3A7A2C0
	0x03A7DFE8 ADD X20, X20, 0x1
	0x03A7DFEC CMP X28, X20
	0x03A7DFF0 ADD X27, X27, 0x8
	0x03A7DFF4 B.NE 0x3A7DF10
	0x03A7DFF8 LDR W8, [X19 + 0x10C]
	0x03A7DFFC LDR W27, [X31 + 0x34]
	0x03A7E000 LDR X9, [X19 + 0x20]
	0x03A7E004 LDR X11, [X31 + 0x20]
	0x03A7E008 AND X10, X26, 0x0
	0x03A7E00C ADD W20, W8, W27
	0x03A7E010 ADD W23, W20, 0x1
	0x03A7E014 LDR W8, [X9, W23, SXTW]
	0x03A7E018 LDR W9, [X31 + 0x7C]
	0x03A7E01C AND X11, X11, 0x0
	0x03A7E020 MOV X2, X31
	0x03A7E024 ORR X26, X10, X8, 0x0
	0x03A7E028 ORR X1, X11, X9, 0x0
	0x03A7E02C MOV X0, X26
	0x03A7E030 STR X1, [X31 + 0x20]
	0x03A7E034 BL 0x3A7A410
	0x03A7E038 LDR X8, [X19 + 0x20]
	0x03A7E03C LDR X11, [X31 + 0x28]
	0x03A7E040 AND X10, X25, 0x0
	0x03A7E044 MOV X2, X31
	0x03A7E048 STR W0, [X8, W23, SXTW]
	0x03A7E04C LDR X8, [X19 + 0x20]
	0x03A7E050 LDR W9, [X31 + 0x7C]
	0x03A7E054 AND X11, X11, 0x0
	0x03A7E058 LDR W8, [X8, W20, SXTW]
	0x03A7E05C ORR X1, X11, X9, 0x0
	0x03A7E060 STR X1, [X31 + 0x28]
	0x03A7E064 ORR X25, X10, X8, 0x0
	0x03A7E068 MOV X0, X25
	0x03A7E06C BL 0x3A7A410
	0x03A7E070 LDR X8, [X19 + 0x20]
	0x03A7E074 STR W0, [X8, W20, SXTW]
	0x03A7E078 LDRSH W8, [X19 + 0x108]
	0x03A7E07C CMP W27, W8
	0x03A7E080 B.LT 0x3A7DEAC
	0x03A7E084 LDR X9, [X31 + 0x8]
	0x03A7E088 LDRSW X8, [X19 + 0x10C]
	0x03A7E08C LDR X10, [X19 + 0x20]
	0x03A7E090 ADRP X28, 0x6D6000
	0x03A7E094 LDR W9, [X9]
	0x03A7E098 ADRP X29, 0x6D7000
	0x03A7E09C STR W9, [X10, X8, LSL #2]
	0x03A7E0A0 LDR X28, [X28 + 0x9C0]
	0x03A7E0A4 LDR X29, [X29 + 0xB78]
	0x03A7E0A8 LDR X1, [X28]
	0x03A7E0AC ADD X0, X31, 0x98
	0x03A7E0B0 BL 0x23F8770
	0x03A7E0B4 LDR X1, [X28]
	0x03A7E0B8 ADD X0, X31, 0xA8
	0x03A7E0BC BL 0x23F8770
	0x03A7E0C0 LDR X1, [X29]
	0x03A7E0C4 ADD X0, X31, 0xB8
	0x03A7E0C8 BL 0x23F95DC
	0x03A7E0CC LDP X20, X19, [X31 + 0x1E0]
	0x03A7E0D0 LDP X22, X21, [X31 + 0x1D0]
	0x03A7E0D4 LDP X24, X23, [X31 + 0x1C0]
	0x03A7E0D8 LDP X26, X25, [X31 + 0x1B0]
	0x03A7E0DC LDP X28, X27, [X31 + 0x1A0]
	0x03A7E0E0 LDP X29, X30, [X31 + 0x190]
	0x03A7E0E4 LDP D9, D8, [X31 + 0x180]
	0x03A7E0E8 LDP D11, D10, [X31 + 0x170]
	0x03A7E0EC LDP D13, D12, [X31 + 0x160]
	0x03A7E0F0 LDP D15, D14, [X31 + 0x150]
	0x03A7E0F4 ADD X31, X31, 0x1F0
	0x03A7E0F8 RET
	0x03A7E0FC BL 0x1C16F20
	0x03A7E100 BL 0x1C16F28
	0x03A7E104 STR D10, [X31 - 0x40]!
	0x03A7E108 STP D9, D8, [X31 + 0x10]
	0x03A7E10C STP X30, X21, [X31 + 0x20]
	0x03A7E110 STP X20, X19, [X31 + 0x30]
	0x03A7E114 ADRP X21, 0x964000
	0x03A7E118 ADRP X20, 0x6A0000
	0x03A7E11C LDRB W8, [X21 + 0x311]
	0x03A7E120 LDR X20, [X20 + 0xDB8]
	0x03A7E124 MOV V8.16B, V2.16B
	0x03A7E128 MOV V9.16B, V1.16B
	0x03A7E12C MOV V10.16B, V0.16B
	0x03A7E130 MOV X19, X0
	0x03A7E134 TBNZ X8, 0x0, 0x3A7E14C
	0x03A7E138 ADRP X0, 0x6A0000
	0x03A7E13C LDR X0, [X0 + 0xDB8]
	0x03A7E140 BL 0x1C16CF4
	0x03A7E144 MOVZ W8, 0x1
	0x03A7E148 STRB W8, [X21 + 0x311]
	0x03A7E14C LDR X0, [X20]
	0x03A7E150 STR W31, [X31 + 0xC]
	0x03A7E154 LDR W8, [X0 + 0xE0]
	0x03A7E158 CBNZ W8, 0x3A7E160
	0x03A7E15C BL 0x1C16DFC
	0x03A7E160 MOV X0, X19
	0x03A7E164 MOV V0.16B, V10.16B
	0x03A7E168 MOV V1.16B, V9.16B
	0x03A7E16C MOV V2.16B, V8.16B
	0x03A7E170 BL 0x3A7F3EC
	0x03A7E174 MOVZ W9, 0x7F800000
	0x03A7E178 FMOV S2, W9
	0x03A7E17C LDR W9, [X19 + 0xFC]
	0x03A7E180 FCVTZS W8, S1
	0x03A7E184 MOVZ W10, 0x80000000
	0x03A7E188 FCMP S1, S2
	0x03A7E18C FCVTZS W11, S0
	0x03A7E190 CSEL W21, W10, W8, EQ
	0x03A7E194 FCMP S0, S2
	0x03A7E198 SUB W8, W9, 0x1
	0x03A7E19C CSEL W20, W10, W11, EQ
	0x03A7E1A0 CMP W8, W21
	0x03A7E1A4 CSEL W8, W8, W21, LT
	0x03A7E1A8 ADD X0, X19, 0x106
	0x03A7E1AC BIC W1, W8, W8, 0x1F
	0x03A7E1B0 MOV X2, X31
	0x03A7E1B4 BL 0x3A7A2C0
	0x03A7E1B8 TBNZ X21, 0x1F, 0x3A7E214
	0x03A7E1BC TBNZ X20, 0x1F, 0x3A7E214
	0x03A7E1C0 LDR W8, [X19 + 0xFC]
	0x03A7E1C4 CMP W21, W8
	0x03A7E1C8 B.GE 0x3A7E214
	0x03A7E1CC LDR W8, [X19 + 0xF8]
	0x03A7E1D0 CMP W20, W8
	0x03A7E1D4 B.GE 0x3A7E214
	0x03A7E1D8 LDR W8, [X19 + 0x10C]
	0x03A7E1DC LDR X9, [X19 + 0x20]
	0x03A7E1E0 ADD W21, W21, 0x1
	0x03A7E1E4 ADD X0, X31, 0xC
	0x03A7E1E8 ADD W8, W21, W8
	0x03A7E1EC LDR W8, [X9, W8, SXTW]
	0x03A7E1F0 MOV W1, W20
	0x03A7E1F4 MOV X2, X31
	0x03A7E1F8 STR W8, [X31 + 0xC]
	0x03A7E1FC BL 0x3A7A2C0
	0x03A7E200 LDR W8, [X19 + 0x10C]
	0x03A7E204 LDR W9, [X31 + 0xC]
	0x03A7E208 LDR X10, [X19 + 0x20]
	0x03A7E20C ADD W8, W21, W8
	0x03A7E210 STR W9, [X10, W8, SXTW]
	0x03A7E214 LDP X20, X19, [X31 + 0x30]
	0x03A7E218 LDP X30, X21, [X31 + 0x20]
	0x03A7E21C LDP D9, D8, [X31 + 0x10]
	0x03A7E220 LDR V10, [X31], #0x40
	0x03A7E224 RET
	0x03A7E228 FMUL S0, S0, S0
	0x03A7E22C RET
	0x03A7E230 STP D15, D14, [X31 - 0x70]!
	0x03A7E234 STP D13, D12, [X31 + 0x10]
	0x03A7E238 STP D11, D10, [X31 + 0x20]
	0x03A7E23C STP D9, D8, [X31 + 0x30]
	0x03A7E240 STR X30, [X31 + 0x40]
	0x03A7E244 STP X22, X21, [X31 + 0x50]
	0x03A7E248 STP X20, X19, [X31 + 0x60]
	0x03A7E24C ADRP X21, 0x964000
	0x03A7E250 LDRB W8, [X21 + 0x314]
	0x03A7E254 MOV X19, X1
	0x03A7E258 MOV X20, X0
	0x03A7E25C MOV V9.16B, V2.16B
	0x03A7E260 MOV V12.16B, V1.16B
	0x03A7E264 MOV V14.16B, V0.16B
	0x03A7E268 STP S4, S3, [X31 + 0x48]
	0x03A7E26C TBNZ X8, 0x0, 0x3A7E284
	0x03A7E270 ADRP X0, 0x6A0000
	0x03A7E274 LDR X0, [X0 + 0xDB8]
	0x03A7E278 BL 0x1C16CF4
	0x03A7E27C MOVZ W8, 0x1
	0x03A7E280 STRB W8, [X21 + 0x314]
	0x03A7E284 ADRP X22, 0x963000
	0x03A7E288 LDRB W8, [X22 + 0x585]
	0x03A7E28C CBNZ W8, 0x3A7E2A4
	0x03A7E290 ADRP X0, 0x675000
	0x03A7E294 LDR X0, [X0 + 0x5A8]
	0x03A7E298 BL 0x1C16CF4
	0x03A7E29C MOVZ W8, 0x1
	0x03A7E2A0 STRB W8, [X22 + 0x585]
	0x03A7E2A4 ADRP X21, 0x675000
	0x03A7E2A8 LDR X21, [X21 + 0x5A8]
	0x03A7E2AC LDR X0, [X21]
	0x03A7E2B0 LDR W8, [X0 + 0xE0]
	0x03A7E2B4 CBZ W8, 0x3A7E2C0
	0x03A7E2B8 MOV W8, W31
	0x03A7E2BC B 0x3A7E2D0
	0x03A7E2C0 BL 0x1C16DFC
	0x03A7E2C4 LDRB W8, [X22 + 0x585]
	0x03A7E2C8 CMP W8, 0x0
	0x03A7E2CC CSET W8, EQ
	0x03A7E2D0 FMUL S0, S14, S14
	0x03A7E2D4 FMUL S1, S12, S12
	0x03A7E2D8 FADD S8, S0, S1
	0x03A7E2DC CBZ W8, 0x3A7E2F4
	0x03A7E2E0 ADRP X0, 0x675000
	0x03A7E2E4 LDR X0, [X0 + 0x5A8]
	0x03A7E2E8 BL 0x1C16CF4
	0x03A7E2EC MOVZ W8, 0x1
	0x03A7E2F0 STRB W8, [X22 + 0x585]
	0x03A7E2F4 LDR X0, [X21]
	0x03A7E2F8 FSQRT S10, S8
	0x03A7E2FC FMOV S8, 1
	0x03A7E300 LDR W8, [X0 + 0xE0]
	0x03A7E304 CBZ W8, 0x3A7E318
	0x03A7E308 FMUL S0, S10, S10
	0x03A7E30C FMUL S1, S9, S9
	0x03A7E310 FSUB S13, S0, S1
	0x03A7E314 B 0x3A7E344
	0x03A7E318 BL 0x1C16DFC
	0x03A7E31C LDRB W8, [X22 + 0x585]
	0x03A7E320 FMUL S0, S10, S10
	0x03A7E324 FMUL S1, S9, S9
	0x03A7E328 FSUB S13, S0, S1
	0x03A7E32C CBNZ W8, 0x3A7E344
	0x03A7E330 ADRP X0, 0x675000
	0x03A7E334 LDR X0, [X0 + 0x5A8]
	0x03A7E338 BL 0x1C16CF4
	0x03A7E33C MOVZ W8, 0x1
	0x03A7E340 STRB W8, [X22 + 0x585]
	0x03A7E344 LDR X0, [X21]
	0x03A7E348 FDIV S11, S8, S10
	0x03A7E34C LDR W8, [X0 + 0xE0]
	0x03A7E350 CBNZ W8, 0x3A7E358
	0x03A7E354 BL 0x1C16DFC
	0x03A7E358 ADRP X21, 0x6A0000
	0x03A7E35C LDR X21, [X21 + 0xDB8]
	0x03A7E360 LDR V4, [X31 + 0x4C]
	0x03A7E364 ADRP X8, 0xFFFFFFFFFD06F000
	0x03A7E368 FSQRT S0, S13
	0x03A7E36C LDR V1, [X8 + 0xC68]
	0x03A7E370 ADRP X8, 0xFFFFFFFFFD070000
	0x03A7E374 FSUB S2, S12, S9
	0x03A7E378 FMUL S3, S0, S9
	0x03A7E37C FCMP S2, S4
	0x03A7E380 LDR V2, [X8 + 0x540]
	0x03A7E384 FMUL S8, S14, S11
	0x03A7E388 FMUL S15, S12, S11
	0x03A7E38C FDIV S11, S3, S10
	0x03A7E390 FMUL S0, S0, S11
	0x03A7E394 FDIV S0, S0, S9
	0x03A7E398 STR D1, [X20]
	0x03A7E39C STR D2, [X19]
	0x03A7E3A0 B.PL 0x3A7E3BC
	0x03A7E3A4 LDR V2, [X31 + 0x48]
	0x03A7E3A8 LDR V1, [X31 + 0x4C]
	0x03A7E3AC FADD S3, S14, S2
	0x03A7E3B0 FSUB S2, S14, S2
	0x03A7E3B4 STP S3, S1, [X20]
	0x03A7E3B8 STP S2, S1, [X19]
	0x03A7E3BC LDR X0, [X21]
	0x03A7E3C0 FMUL S13, S8, S0
	0x03A7E3C4 FMUL S14, S15, S0
	0x03A7E3C8 LDR W8, [X0 + 0xE0]
	0x03A7E3CC CBNZ W8, 0x3A7E3D4
	0x03A7E3D0 BL 0x1C16DFC
	0x03A7E3D4 MOV V0.16B, V10.16B
	0x03A7E3D8 FMUL S12, S8, S11
	0x03A7E3DC FMUL S11, S15, S11
	0x03A7E3E0 BL 0x3A7E228
	0x03A7E3E4 MOV V10.16B, V0.16B
	0x03A7E3E8 MOV V0.16B, V9.16B
	0x03A7E3EC BL 0x3A7E228
	0x03A7E3F0 MOV V9.16B, V0.16B
	0x03A7E3F4 FCMP S10, S0
	0x03A7E3F8 FMOV S0, W31
	0x03A7E3FC FCSEL S8, S0, S14, LT
	0x03A7E400 FCSEL S15, S0, S13, LT
	0x03A7E404 B.LT 0x3A7E440
	0x03A7E408 LDR V1, [X31 + 0x4C]
	0x03A7E40C FADD S0, S12, S14
	0x03A7E410 FCMP S0, S1
	0x03A7E414 B.LT 0x3A7E440
	0x03A7E418 LDR V2, [X20]
	0x03A7E41C FSUB S1, S13, S11
	0x03A7E420 FCMP S1, S2
	0x03A7E424 B.LE 0x3A7E42C
	0x03A7E428 STP S1, S0, [X20]
	0x03A7E42C LDR V2, [X19]
	0x03A7E430 FCMP S1, S2
	0x03A7E434 B.PL 0x3A7E448
	0x03A7E438 STP S1, S0, [X19]
	0x03A7E43C B 0x3A7E448
	0x03A7E440 MOV V8.16B, V14.16B
	0x03A7E444 MOV V15.16B, V13.16B
	0x03A7E448 LDR X0, [X21]
	0x03A7E44C LDR W8, [X0 + 0xE0]
	0x03A7E450 CBNZ W8, 0x3A7E458
	0x03A7E454 BL 0x1C16DFC
	0x03A7E458 FCMP S10, S9
	0x03A7E45C B.LT 0x3A7E494
	0x03A7E460 LDR V1, [X31 + 0x4C]
	0x03A7E464 FSUB S0, S8, S12
	0x03A7E468 FCMP S0, S1
	0x03A7E46C B.LT 0x3A7E494
	0x03A7E470 LDR V2, [X20]
	0x03A7E474 FADD S1, S11, S15
	0x03A7E478 FCMP S1, S2
	0x03A7E47C B.LE 0x3A7E484
	0x03A7E480 STP S1, S0, [X20]
	0x03A7E484 LDR V2, [X19]
	0x03A7E488 FCMP S1, S2
	0x03A7E48C B.PL 0x3A7E494
	0x03A7E490 STP S1, S0, [X19]
	0x03A7E494 LDP X20, X19, [X31 + 0x60]
	0x03A7E498 LDP X22, X21, [X31 + 0x50]
	0x03A7E49C LDR X30, [X31 + 0x40]
	0x03A7E4A0 LDP D9, D8, [X31 + 0x30]
	0x03A7E4A4 LDP D11, D10, [X31 + 0x20]
	0x03A7E4A8 LDP D13, D12, [X31 + 0x10]
	0x03A7E4AC LDP D15, D14, [X31], #0x70
	0x03A7E4B0 RET
	0x03A7E4B4 STP D13, D12, [X31 - 0x50]!
	0x03A7E4B8 STP D11, D10, [X31 + 0x10]
	0x03A7E4BC STP D9, D8, [X31 + 0x20]
	0x03A7E4C0 STR X30, [X31 + 0x30]
	0x03A7E4C4 STP X20, X19, [X31 + 0x40]
	0x03A7E4C8 MOV X1, X31
	0x03A7E4CC MOV X19, X0
	0x03A7E4D0 MOV V8.16B, V2.16B
	0x03A7E4D4 MOV V9.16B, V1.16B
	0x03A7E4D8 MOV V10.16B, V0.16B
	0x03A7E4DC BL 0x3C5BC7C
	0x03A7E4E0 CMP W0, 0x2
	0x03A7E4E4 B.NE 0x3A7E4F0
	0x03A7E4E8 MOVZ W0, 0x1
	0x03A7E4EC B 0x3A7E58C
	0x03A7E4F0 ADRP X20, 0x963000
	0x03A7E4F4 LDP S11, S12, [X19 + 0x74]
	0x03A7E4F8 LDRB W8, [X20 + 0x585]
	0x03A7E4FC LDR V13, [X19 + 0x7C]
	0x03A7E500 CBNZ W8, 0x3A7E518
	0x03A7E504 ADRP X0, 0x675000
	0x03A7E508 LDR X0, [X0 + 0x5A8]
	0x03A7E50C BL 0x1C16CF4
	0x03A7E510 MOVZ W8, 0x1
	0x03A7E514 STRB W8, [X20 + 0x585]
	0x03A7E518 ADRP X8, 0x675000
	0x03A7E51C LDR X8, [X8 + 0x5A8]
	0x03A7E520 FSUB S10, S10, S11
	0x03A7E524 FSUB S9, S9, S12
	0x03A7E528 FSUB S8, S8, S13
	0x03A7E52C LDR X0, [X8]
	0x03A7E530 LDR W8, [X0 + 0xE0]
	0x03A7E534 CBNZ W8, 0x3A7E53C
	0x03A7E538 BL 0x1C16DFC
	0x03A7E53C FMUL S1, S10, S10
	0x03A7E540 FMUL S2, S9, S9
	0x03A7E544 FMUL S0, S8, S8
	0x03A7E548 FADD S1, S1, S2
	0x03A7E54C FADD S0, S0, S1
	0x03A7E550 FMOV S2, 1
	0x03A7E554 FSQRT S0, S0
	0x03A7E558 FDIV S0, S2, S0
	0x03A7E55C LDP S1, S2, [X19 + 0x80]
	0x03A7E560 FMUL S3, S10, S0
	0x03A7E564 FMUL S4, S9, S0
	0x03A7E568 FMUL S0, S8, S0
	0x03A7E56C FMUL S1, S3, S1
	0x03A7E570 LDP S3, S5, [X19 + 0x88]
	0x03A7E574 FMUL S2, S4, S2
	0x03A7E578 FADD S1, S1, S2
	0x03A7E57C FMUL S0, S0, S3
	0x03A7E580 FADD S0, S0, S1
	0x03A7E584 FCMP S0, S5
	0x03A7E588 CSET W0, GE
	0x03A7E58C LDP X20, X19, [X31 + 0x40]
	0x03A7E590 LDR X30, [X31 + 0x30]
	0x03A7E594 LDP D9, D8, [X31 + 0x20]
	0x03A7E598 LDP D11, D10, [X31 + 0x10]
	0x03A7E59C LDP D13, D12, [X31], #0x50
	0x03A7E5A0 RET
	0x03A7E5A4 STP D15, D14, [X31 - 0x70]!
	0x03A7E5A8 STP D13, D12, [X31 + 0x10]
	0x03A7E5AC STP D11, D10, [X31 + 0x20]
	0x03A7E5B0 STP D9, D8, [X31 + 0x30]
	0x03A7E5B4 STR X30, [X31 + 0x40]
	0x03A7E5B8 STP X22, X21, [X31 + 0x50]
	0x03A7E5BC STP X20, X19, [X31 + 0x60]
	0x03A7E5C0 ADRP X21, 0x964000
	0x03A7E5C4 LDRB W8, [X21 + 0x318]
	0x03A7E5C8 MOV X19, X1
	0x03A7E5CC MOV X20, X0
	0x03A7E5D0 MOV V10.16B, V6.16B
	0x03A7E5D4 MOV V12.16B, V5.16B
	0x03A7E5D8 MOV V9.16B, V4.16B
	0x03A7E5DC MOV V11.16B, V3.16B
	0x03A7E5E0 MOV V8.16B, V2.16B
	0x03A7E5E4 MOV V15.16B, V1.16B
	0x03A7E5E8 MOV V13.16B, V0.16B
	0x03A7E5EC TBNZ X8, 0x0, 0x3A7E604
	0x03A7E5F0 ADRP X0, 0x6A0000
	0x03A7E5F4 LDR X0, [X0 + 0xDB8]
	0x03A7E5F8 BL 0x1C16CF4
	0x03A7E5FC MOVZ W8, 0x1
	0x03A7E600 STRB W8, [X21 + 0x318]
	0x03A7E604 ADRP X21, 0x963000
	0x03A7E608 LDRB W8, [X21 + 0x585]
	0x03A7E60C CBNZ W8, 0x3A7E624
	0x03A7E610 ADRP X0, 0x675000
	0x03A7E614 LDR X0, [X0 + 0x5A8]
	0x03A7E618 BL 0x1C16CF4
	0x03A7E61C MOVZ W8, 0x1
	0x03A7E620 STRB W8, [X21 + 0x585]
	0x03A7E624 ADRP X22, 0x675000
	0x03A7E628 LDR X22, [X22 + 0x5A8]
	0x03A7E62C LDR X0, [X22]
	0x03A7E630 LDR W8, [X0 + 0xE0]
	0x03A7E634 CBNZ W8, 0x3A7E63C
	0x03A7E638 BL 0x1C16DFC
	0x03A7E63C ADRP X8, 0xFFFFFFFFFD06C000
	0x03A7E640 LDR V1, [X8 + 0x240]
	0x03A7E644 FMUL S0, S12, S12
	0x03A7E648 FMUL S2, S10, S10
	0x03A7E64C FADD S0, S0, S2
	0x03A7E650 FSQRT S14, S0
	0x03A7E654 FCMP S14, S1
	0x03A7E658 B.PL 0x3A7E670
	0x03A7E65C STR S8, [X20]
	0x03A7E660 STR W31, [X20 + 0x4]
	0x03A7E664 FNEG S2, S8
	0x03A7E668 FMOV S0, W31
	0x03A7E66C B 0x3A7E778
	0x03A7E670 LDRB W8, [X21 + 0x585]
	0x03A7E674 STR S13, [X31 + 0x4C]
	0x03A7E678 CBNZ W8, 0x3A7E690
	0x03A7E67C ADRP X0, 0x675000
	0x03A7E680 LDR X0, [X0 + 0x5A8]
	0x03A7E684 BL 0x1C16CF4
	0x03A7E688 MOVZ W8, 0x1
	0x03A7E68C STRB W8, [X21 + 0x585]
	0x03A7E690 LDR X0, [X22]
	0x03A7E694 ADRP X21, 0x6A0000
	0x03A7E698 MOV V13.16B, V15.16B
	0x03A7E69C LDR W8, [X0 + 0xE0]
	0x03A7E6A0 LDR X21, [X21 + 0xDB8]
	0x03A7E6A4 CBNZ W8, 0x3A7E6AC
	0x03A7E6A8 BL 0x1C16DFC
	0x03A7E6AC FMUL S0, S11, S11
	0x03A7E6B0 FMUL S1, S9, S9
	0x03A7E6B4 LDR X0, [X21]
	0x03A7E6B8 FMOV S2, 1
	0x03A7E6BC FADD S0, S0, S1
	0x03A7E6C0 LDR V5, [X31 + 0x4C]
	0x03A7E6C4 FMUL S15, S14, S8
	0x03A7E6C8 FDIV S14, S2, S14
	0x03A7E6CC FSQRT S0, S0
	0x03A7E6D0 FMUL S3, S12, S14
	0x03A7E6D4 FDIV S12, S2, S0
	0x03A7E6D8 FNEG S1, S13
	0x03A7E6DC FMUL S8, S0, S8
	0x03A7E6E0 FMUL S0, S11, S12
	0x03A7E6E4 FMUL S2, S9, S12
	0x03A7E6E8 LDR W8, [X0 + 0xE0]
	0x03A7E6EC FMUL S4, S10, S14
	0x03A7E6F0 FMUL S2, S2, S1
	0x03A7E6F4 FMUL S0, S5, S0
	0x03A7E6F8 FSUB S10, S2, S0
	0x03A7E6FC FMUL S0, S4, S1
	0x03A7E700 FMUL S1, S5, S3
	0x03A7E704 FSUB S11, S0, S1
	0x03A7E708 CBNZ W8, 0x3A7E710
	0x03A7E70C BL 0x1C16DFC
	0x03A7E710 MOV V0.16B, V8.16B
	0x03A7E714 BL 0x3A7E228
	0x03A7E718 MOV V9.16B, V0.16B
	0x03A7E71C MOV V0.16B, V15.16B
	0x03A7E720 BL 0x3A7E228
	0x03A7E724 FDIV S9, S10, S9
	0x03A7E728 FDIV S10, S11, S0
	0x03A7E72C FMOV S4, -1
	0x03A7E730 MOV V0.16B, V8.16B
	0x03A7E734 MOV V1.16B, V15.16B
	0x03A7E738 MOV V2.16B, V9.16B
	0x03A7E73C MOV V3.16B, V10.16B
	0x03A7E740 FMOV S11, -1
	0x03A7E744 BL 0x3A802F8
	0x03A7E748 FNEG S4, S9
	0x03A7E74C FDIV S4, S4, S10
	0x03A7E750 FMUL S3, S12, S0
	0x03A7E754 FDIV S5, S11, S10
	0x03A7E758 FMUL S0, S4, S0
	0x03A7E75C FMUL S2, S12, S1
	0x03A7E760 FMUL S1, S4, S1
	0x03A7E764 FSUB S0, S0, S5
	0x03A7E768 FSUB S1, S1, S5
	0x03A7E76C FMUL S0, S14, S0
	0x03A7E770 STP S3, S0, [X20]
	0x03A7E774 FMUL S0, S14, S1
	0x03A7E778 STP S2, S0, [X19]
	0x03A7E77C LDP X20, X19, [X31 + 0x60]
	0x03A7E780 LDP X22, X21, [X31 + 0x50]
	0x03A7E784 LDR X30, [X31 + 0x40]
	0x03A7E788 LDP D9, D8, [X31 + 0x30]
	0x03A7E78C LDP D11, D10, [X31 + 0x20]
	0x03A7E790 LDP D13, D12, [X31 + 0x10]
	0x03A7E794 LDP D15, D14, [X31], #0x70
	0x03A7E798 RET
	0x03A7E79C SUB X31, X31, 0x80
	0x03A7E7A0 STP D15, D14, [X31 + 0x10]
	0x03A7E7A4 STP D13, D12, [X31 + 0x20]
	0x03A7E7A8 STP D11, D10, [X31 + 0x30]
	0x03A7E7AC STP D9, D8, [X31 + 0x40]
	0x03A7E7B0 STP X30, X23, [X31 + 0x50]
	0x03A7E7B4 STP X22, X21, [X31 + 0x60]
	0x03A7E7B8 STP X20, X19, [X31 + 0x70]
	0x03A7E7BC ADRP X21, 0x964000
	0x03A7E7C0 LDRB W8, [X21 + 0x316]
	0x03A7E7C4 MOV X19, X1
	0x03A7E7C8 MOV X20, X0
	0x03A7E7CC MOV V12.16B, V7.16B
	0x03A7E7D0 MOV V13.16B, V5.16B
	0x03A7E7D4 MOV V14.16B, V4.16B
	0x03A7E7D8 MOV V15.16B, V3.16B
	0x03A7E7DC MOV V9.16B, V2.16B
	0x03A7E7E0 STP S1, S6, [X31 + 0x8]
	0x03A7E7E4 STR S0, [X31 + 0x4]
	0x03A7E7E8 TBNZ X8, 0x0, 0x3A7E800
	0x03A7E7EC ADRP X0, 0x6A0000
	0x03A7E7F0 LDR X0, [X0 + 0xDB8]
	0x03A7E7F4 BL 0x1C16CF4
	0x03A7E7F8 MOVZ W8, 0x1
	0x03A7E7FC STRB W8, [X21 + 0x316]
	0x03A7E800 ADRP X21, 0x963000
	0x03A7E804 LDRB W8, [X21 + 0x585]
	0x03A7E808 FMOV S0, W31
	0x03A7E80C FMUL S8, S15, S0
	0x03A7E810 FMUL S11, S13, S0
	0x03A7E814 FMUL S10, S14, S0
	0x03A7E818 CBNZ W8, 0x3A7E830
	0x03A7E81C ADRP X0, 0x675000
	0x03A7E820 LDR X0, [X0 + 0x5A8]
	0x03A7E824 BL 0x1C16CF4
	0x03A7E828 MOVZ W8, 0x1
	0x03A7E82C STRB W8, [X21 + 0x585]
	0x03A7E830 ADRP X22, 0x675000
	0x03A7E834 LDR X22, [X22 + 0x5A8]
	0x03A7E838 ADRP X23, 0x6A0000
	0x03A7E83C FSUB S8, S8, S10
	0x03A7E840 FSUB S10, S14, S11
	0x03A7E844 LDR X0, [X22]
	0x03A7E848 FSUB S11, S11, S15
	0x03A7E84C LDR W8, [X0 + 0xE0]
	0x03A7E850 LDR X23, [X23 + 0xDB8]
	0x03A7E854 CBNZ W8, 0x3A7E85C
	0x03A7E858 BL 0x1C16DFC
	0x03A7E85C FMUL S1, S10, S10
	0x03A7E860 FMUL S2, S11, S11
	0x03A7E864 FMUL S0, S8, S8
	0x03A7E868 FADD S1, S1, S2
	0x03A7E86C LDR X0, [X23]
	0x03A7E870 FADD S0, S0, S1
	0x03A7E874 FMOV S2, 1
	0x03A7E878 FSQRT S0, S0
	0x03A7E87C FDIV S0, S2, S0
	0x03A7E880 LDR W8, [X0 + 0xE0]
	0x03A7E884 FMUL S10, S10, S0
	0x03A7E888 FMUL S11, S11, S0
	0x03A7E88C FMUL S4, S8, S0
	0x03A7E890 FMUL S0, S14, S10
	0x03A7E894 FMUL S3, S15, S11
	0x03A7E898 FMUL S1, S13, S11
	0x03A7E89C FMUL S2, S15, S4
	0x03A7E8A0 STR S4, [X31]
	0x03A7E8A4 FMUL S4, S14, S4
	0x03A7E8A8 FMUL S5, S13, S10
	0x03A7E8AC FSUB S15, S0, S3
	0x03A7E8B0 FSUB S0, S12, S9
	0x03A7E8B4 FSUB S13, S1, S4
	0x03A7E8B8 FSUB S14, S2, S5
	0x03A7E8BC FDIV S12, S0, S15

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 736
	022 Move X22, 0x967000
	023 Move X21, 0x6DB000
	024 Move W8, [X22+780]
	025 Move X21, [X21+4072]
	026 Move W20, W1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {43}
	032 Move X0, 0x6DB000
	033 Move X0, [X0+4072]
	034 Call 0x1C17CF4
	035 Move X0, 0x6DC000
	036 Move X0, [X0+16]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A3000
	039 Move X0, [X0+3512]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+780], W8
	043 Move X23, 0x6A3000
	044 Move X23, [X23+3512]
	045 Add X0, X31, 584
	046 Move W2, 148
	047 Move W1, W31
	048 Call 0x3EB2B10
	049 Move [X31+576], X31
	050 Move [X31+568], X31
	051 Move [X31+560], X31
	052 Move [X31+552], X31
	053 Move [X31+544], X31
	054 Move [X31+536], X31
	055 Move [X31+528], X31
	056 Move [X31+520], X31
	057 Move [X31+512], W31
	058 Move [X31+504], X31
	059 Move [X31+496], W31
	060 Move [X31+488], X31
	061 Move [X31+480], W31
	062 Move [X31+472], X31
	063 Move [X31+464], W31
	064 Move [X31+448], X31
	065 Move [X31+456], X31
	066 Move [X31+440], X31
	067 Move [X31+432], W31
	068 Move [X31+416], X31
	069 Move [X31+424], X31
	070 Move [X31+408], X31
	071 Move [X31+400], W31
	072 Move [X31+392], X31
	073 Move X8, [X19]
	074 Move W9, 116
	075 Add X0, X31, 584
	076 Move W2, 116
	077 NotImplemented "Instruction SMADDL not yet implemented."
	078 Call 0x3EB2B30
	079 Add X8, X31, 328
	080 Add X0, X31, 584
	081 Move X1, X31
	082 Call VisibleLight.get_localToWorldMatrix, X0
	083 Add X8, X31, 73
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Add X8, X31, 89
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Add X8, X31, 105
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Add X8, X31, 121
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 Add X8, X31, 328
	092 Add X0, X31, 256
	093 Move X1, X31
	094 Move [X31+256], V0
	095 Move [X31+264], V1
	096 Move [X31+288], V2
	097 Move [X31+296], V3
	098 Call float4x4.op_Implicit, X0
	099 Move V4, [X31+360]
	100 Move V0, [X31+364]
	101 Move W1, [X19+272]
	102 Move X2, [X21]
	103 Add X20, X19, 56
	104 Move [X31+208], V4
	105 Move [X31+216], V0
	106 Move V0, [X31+368]
	107 Move V4, [X31+376]
	108 Add X8, X31, 328
	109 Move X0, X20
	110 Move [X31+15], V0
	111 Move V0, [X31+380]
	112 Move [X31+160], V4
	113 Move [X31+168], V0
	114 Move V0, [X31+384]
	115 Move [X31+12], V0
	116 Call Fixed2`1<float4x4>.get_Item, X0, X1
	117 Move V0, [X31+328]
	118 Move V1, [X31+336]
	119 Move V16, [X31+10]
	120 Move V2, [X31+344]
	121 Move V3, [X31+352]
	122 Move V5, [X31+368]
	123 NotImplemented "Instruction INVALID not yet implemented."
	124 Multiply S1, S16, S1
	125 Move V16, [X31+11]
	126 Move V4, [X31+360]
	127 Move V7, [X31+384]
	128 Move V6, [X31+376]
	129 NotImplemented "Instruction INVALID not yet implemented."
	130 Multiply S3, S16, S3
	131 Move V16, [X31+12]
	132 Add S1, S1, S3
	133 Add V0, V0, V2
	134 Add X8, X31, 445
	135 Multiply S5, S16, S5
	136 NotImplemented "Instruction INVALID not yet implemented."
	137 Add S1, S1, S5
	138 Add V0, V0, V4
	139 Add S1, S1, S7
	140 Add V0, V0, V6
	141 NotImplemented "Instruction FNEG not yet implemented."
	142 Move [X8+255], D0
	143 Move [X31+708], S8
	144 Move V1, [X19+256]
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 Move X0, [X23]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {153}
	150 Move [X31+12], V0
	151 Call 0x1C17DFC
	152 Move V0, [X31+12]
	153 Move S1, V0.S[1]
	154 Move X0, X19
	155 Move V2, V8
	156 Call TilingJob.ExpandY, X0, X1
	157 Move W1, [X19+272]
	158 Move X2, [X21]
	159 Add X8, X31, 328
	160 Move X0, X20
	161 Call Fixed2`1<float4x4>.get_Item, X0, X1
	162 Move V0, [X31+328]
	163 Move V1, [X31+336]
	164 Move V2, [X31+344]
	165 Move V3, [X31+352]
	166 Move V16, [X31+208]
	167 Move V17, [X31+224]
	168 Move V4, [X31+360]
	169 Move V5, [X31+368]
	170 Move V18, [X31+15]
	171 Move V6, [X31+376]
	172 Move V7, [X31+384]
	173 Move X20, 0x966000
	174 Move W8, [X20+1413]
	175 NotImplemented "Instruction INVALID not yet implemented."
	176 Multiply S1, S16, S1
	177 NotImplemented "Instruction INVALID not yet implemented."
	178 Multiply S3, S17, S3
	179 NotImplemented "Instruction MOVI not yet implemented."
	180 Move S17, W31
	181 NotImplemented "Instruction INVALID not yet implemented."
	182 Multiply S5, S18, S5
	183 Add V0, V0, V2
	184 Add S1, S1, S3
	185 NotImplemented "Instruction INVALID not yet implemented."
	186 Add V9, V0, V4
	187 Add S10, S1, S5
	188 Multiply S11, S7, S17
	189 Compare W8, 0
	190 JumpIfNotEqual {196}
	191 Move X0, 0x678000
	192 Move X0, [X0+1448]
	193 Call 0x1C17CF4
	194 Move W8, 1
	195 Move [X20+1413], W8
	196 Move X21, 0x678000
	197 Move X21, [X21+1448]
	198 Add V8, V9, V8
	199 Add S9, S10, S11
	200 Move X0, [X21]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 Invalid "Jump target not found in method."
	204 Call 0x1C17DFC
	205 NotImplemented "Instruction INVALID not yet implemented."
	206 Multiply S0, S9, S9
	207 NotImplemented "Instruction FADDP not yet implemented."
	208 Add S0, S0, S1
	209 Move S2, 1
	210 NotImplemented "Instruction FSQRT not yet implemented."
	211 NotImplemented "Instruction FNEG not yet implemented."
	212 NotImplemented "Instruction FDIV not yet implemented."
	213 NotImplemented "Instruction INVALID not yet implemented."
	214 Multiply S0, S0, S3
	215 Add X0, X31, 584
	216 Move X1, X31
	217 Move [X31+712], D1
	218 Move [X31+720], S0
	219 Call VisibleLight.get_spotAngle, X0
	220 Add X0, X31, 584
	221 Move X1, X31
	222 Move V8, V0
	223 Move S9, 0.5
	224 Move X22, -49876992
	225 Call VisibleLight.get_range, X0
	226 Move X0, [X23]
	227 Move V11, V0
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move V10, [X22+260]
	233 Move V0, V11
	234 Multiply S8, S8, S9
	235 Call TilingJob.square, V0
	236 Move X22, 0x966000
	237 Move W8, [X22+1380]
	238 Move V9, V0
	239 Compare W8, 0
	240 JumpIfNotEqual {246}
	241 Move X0, 0x678000
	242 Move X0, [X0+1448]
	243 Call 0x1C17CF4
	244 Move W8, 1
	245 Move [X22+1380], W8
	246 Move X0, [X21]
	247 Multiply S8, S8, S10
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 NotImplemented "Instruction FCVT not yet implemented."
	253 Call 0x3EB2BF0
	254 NotImplemented "Instruction INVALID not yet implemented."
	255 Multiply S1, S11, S0
	256 Move [X31+724], S0
	257 Move [X31+728], S1
	258 Move V0, [X19+256]
	259 Move V1, [X31+708]
	260 Subtract S0, S0, S1
	261 Call TilingJob.square, V0
	262 Move W8, [X20+1413]
	263 Move V8, V0
	264 Compare W8, 0
	265 JumpIfNotEqual {271}
	266 Move X0, 0x678000
	267 Move X0, [X0+1448]
	268 Call 0x1C17CF4
	269 Move W8, 1
	270 Move [X20+1413], W8
	271 Move X0, [X21]
	272 Subtract S8, S9, S8
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move V0, [X31+704]
	278 Move V1, [X31+708]
	279 Move V3, [X19+256]
	280 NotImplemented "Instruction FSQRT not yet implemented."
	281 Add X0, X31, 576
	282 Add X1, X31, 568
	283 Move V2, V11
	284 Move [X31+240], S11
	285 Move [X31+224], S4
	286 Call TilingJob.GetSphereHorizon, X0, V0, V1, V2, X1, X2
	287 Move V10, [X31+700]
	288 Move V9, [X31+576]
	289 Move V8, [X31+580]
	290 Move V11, [X31+568]
	291 Move V12, [X31+572]
	292 Add X0, X31, 584
	293 Move V0, V10
	294 Move V1, V9
	295 Move V2, V8
	296 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {311}
	301 Move X0, [X23]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X19
	307 Move V0, V10
	308 Move V1, V9
	309 Move V2, V8
	310 Call TilingJob.ExpandY, X0, X1
	311 Move X0, [X23]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Add X0, X31, 584
	317 Move V0, V10
	318 Move V1, V11
	319 Move V2, V12
	320 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {335}
	325 Move X0, [X23]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X19
	331 Move V0, V10
	332 Move V1, V11
	333 Move V2, V12
	334 Call TilingJob.ExpandY, X0, X1
	335 Move X0, [X23]
	336 Move V10, [X31+700]
	337 Move V8, [X31+708]
	338 Move V9, [X19+256]
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move V2, [X31+240]
	344 Move V4, [X31+224]
	345 Add X0, X31, 560
	346 Add X1, X31, 552
	347 Move V0, V10
	348 Move V1, V8
	349 Move V3, V9
	350 Call TilingJob.GetSphereHorizon, X0, V0, V1, V2, X1, X2
	351 Move V10, [X31+704]
	352 Move V9, [X31+560]
	353 Move V8, [X31+564]
	354 Move V12, [X31+552]
	355 Move V11, [X31+556]
	356 Add X0, X31, 584
	357 Move V0, V9
	358 Move V1, V10
	359 Move V2, V8
	360 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {375}
	365 Move X0, [X23]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X0, X19
	371 Move V0, V9
	372 Move V1, V10
	373 Move V2, V8
	374 Call TilingJob.ExpandY, X0, X1
	375 Move X0, [X23]
	376 Move W8, [X0+224]
	377 Compare W8, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Add X0, X31, 584
	381 Move V0, V12
	382 Move V1, V10
	383 Move V2, V11
	384 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {399}
	389 Move X0, [X23]
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move X0, X19
	395 Move V0, V12
	396 Move V1, V10
	397 Move V2, V11
	398 Call TilingJob.ExpandY, X0, X1
	399 Add X0, X31, 584
	400 Move X1, X31
	401 Call VisibleLight.get_lightType, X0
	402 Compare W0, 0
	403 JumpIfNotEqual {1766}
	404 Move W8, [X20+1413]
	405 Move V8, [X31+728]
	406 Compare W8, 0
	407 JumpIfNotEqual {413}
	408 Move X0, 0x677000
	409 Move X0, [X0+1448]
	410 Call 0x1C17CF4
	411 Move W8, 1
	412 Move [X20+1413], W8
	413 Move X0, [X21]
	414 Move V0, [X31+240]
	415 Move X22, 0x6A2000
	416 Multiply S8, S8, S8
	417 Move W8, [X0+224]
	418 Move X22, [X22+3512]
	419 Multiply S9, S0, S0
	420 Compare W8, 0
	421 JumpIfNotEqual {423}
	422 Call 0x1C17DFC
	423 Move V13, [X31+712]
	424 Move X8, -49881088
	425 Move V14, [X31+728]
	426 Move V12, [X31+716]
	427 Move V15, [X31+720]
	428 Move V2, [X8+576]
	429 Move V6, [X31+700]
	430 Move V16, [X31+704]
	431 Move V17, [X31+708]
	432 NotImplemented "Instruction FABS not yet implemented."
	433 Move S1, -1
	434 Add S0, S0, S1
	435 NotImplemented "Instruction FABS not yet implemented."
	436 Subtract S7, S9, S8
	437 Multiply S18, S12, S14
	438 NotImplemented "Instruction FCMP not yet implemented."
	439 Multiply S19, S15, S14
	440 Move [X31+192], S2
	441 Move S3, W31
	442 Move S4, 1
	443 Move V0, V13
	444 Move S10, W31
	445 Move W8, [X20+1413]
	446 Move S0, W31
	447 Multiply S8, S13, S0
	448 Multiply S11, S12, S0
	449 Multiply S9, S15, S0
	450 Compare W8, 0
	451 JumpIfNotEqual {469}
	452 Move X0, 0x677000
	453 Move X0, [X0+1448]
	454 Move [X31+208], S6
	455 Move V10, V7
	456 Move [X31+176], S16
	457 Move [X31+156], S17
	458 Move [X31+164], S18
	459 Move [X31+152], S19
	460 Call 0x1C17CF4
	461 Move S19, [X31+152]
	462 Move S17, [X31+156]
	463 Move V18, [X31+160]
	464 Move V16, [X31+176]
	465 Move V6, [X31+208]
	466 Move V7, V10
	467 Move W8, 1
	468 Move [X20+1413], W8
	469 Move X0, [X21]
	470 Subtract S10, S8, S12
	471 Subtract S11, S11, S9
	472 Subtract S8, S15, S8
	473 Move W8, [X0+224]
	474 Compare W8, 0
	475 JumpIfNotEqual {489}
	476 Move [X31+208], S6
	477 Move V12, V7
	478 Move [X31+176], S16
	479 Move V9, V17
	480 Move [X31+160], S18
	481 Move V15, V19
	482 Call 0x1C17DFC
	483 Move V18, [X31+160]
	484 Move V16, [X31+176]
	485 Move V6, [X31+208]
	486 Move V19, V15
	487 Move V17, V9
	488 Move V7, V12
	489 Multiply S2, S11, S11
	490 Multiply S3, S8, S8
	491 Multiply S1, S10, S10
	492 Add S2, S3, S2
	493 Move V0, [X31+712]
	494 Move V12, [X31+716]
	495 Move V15, [X31+720]
	496 Add S1, S1, S2
	497 Move S4, 1
	498 NotImplemented "Instruction FSQRT not yet implemented."
	499 NotImplemented "Instruction FDIV not yet implemented."
	500 Multiply S3, S11, S1
	501 Multiply S4, S8, S1
	502 Multiply S10, S10, S1
	503 Move X0, [X22]
	504 Multiply S1, S0, S4
	505 Multiply S2, S3, S15
	506 Move [X31+88], S3
	507 Move W8, [X0+224]
	508 Multiply S3, S3, S12
	509 Multiply S0, S0, S10
	510 Multiply S20, S13, S14
	511 NotImplemented "Instruction FSQRT not yet implemented."
	512 Add S13, S16, S18
	513 Add S14, S17, S19
	514 Multiply S8, S10, S12
	515 Multiply S9, S4, S15
	516 Subtract S12, S1, S3
	517 Subtract S15, S2, S0
	518 Move [X31+152], S4
	519 Compare W8, 0
	520 JumpIfNotEqual {527}
	521 Move [X31+208], S6
	522 Move [X31+176], S20
	523 Call 0x1C17DFC
	524 Move V20, [X31+176]
	525 Move V4, [X31+152]
	526 Move V6, [X31+208]
	527 Add S0, S6, S20
	528 Move [X31+156], S0
	529 Subtract S0, S8, S9
	530 Move [X31+128], S0
	531 Add X0, X31, 544
	532 Add X1, X31, 536
	533 Move V0, V13
	534 Move V1, V14
	535 Move [X31+208], S11
	536 Move V2, V11
	537 Move V11, V4
	538 Move V3, V4
	539 Move V4, V10
	540 Move V5, V15
	541 Move V6, V12
	542 Move [X31+140], S13
	543 Call TilingJob.GetProjectedCircleHorizon, X0, V0, X1, X2, X3, X4
	544 Move V1, [X31+544]
	545 Move V0, [X31+548]
	546 Move V6, V12
	547 Move V12, [X31+536]
	548 Move V13, [X31+540]
	549 Move V2, [X19+256]
	550 Multiply S3, S10, S1
	551 Multiply S4, S6, S0
	552 Multiply S5, S10, S12
	553 Add S3, S14, S3
	554 Add S5, S14, S5
	555 Add S8, S3, S4
	556 Multiply S3, S6, S13
	557 Move [X31+136], S14
	558 NotImplemented "Instruction FCMP not yet implemented."
	559 Add S14, S5, S3
	560 Move [X31+112], S6
	561 Move [X31+120], S10
	562 Move [X31+120], S15
	563 Move V2, [X31+88]
	564 Move V3, [X31+156]
	565 Move X0, [X22]
	566 Move V10, V11
	567 Multiply S2, S2, S1
	568 Add S2, S3, S2
	569 Move V3, [X31+140]
	570 Multiply S1, S11, S1
	571 Move W8, [X0+224]
	572 Add S1, S3, S1
	573 Move V3, [X31+128]
	574 Multiply S3, S3, S0
	575 Multiply S0, S15, S0
	576 Add S11, S2, S3
	577 Add S9, S1, S0
	578 Compare W8, 0
	579 JumpIfNotEqual {581}
	580 Call 0x1C17DFC
	581 Move X0, X19
	582 Move V0, V11
	583 Move V1, V9
	584 Move V2, V8
	585 Call TilingJob.ExpandY, X0, X1
	586 Move V2, [X19+256]
	587 Move V15, [X31+120]
	588 Move V11, V10
	589 NotImplemented "Instruction FCMP not yet implemented."
	590 Move V0, [X31+88]
	591 Move V2, [X31+156]
	592 Move X0, [X22]
	593 Multiply S1, S11, S12
	594 Multiply S0, S0, S12
	595 Add S0, S2, S0
	596 Move V2, [X31+140]
	597 Move W8, [X0+224]
	598 Multiply S3, S15, S13
	599 Add S1, S2, S1
	600 Move V2, [X31+128]
	601 Add S8, S1, S3
	602 Multiply S2, S2, S13
	603 Add S9, S0, S2
	604 Compare W8, 0
	605 JumpIfNotEqual {607}
	606 Call 0x1C17DFC
	607 Move X0, X19
	608 Move V0, V9
	609 Move V1, V8
	610 Move V2, V14
	611 Call TilingJob.ExpandY, X0, X1
	612 Move V0, [X31+716]
	613 Move S2, -1
	614 NotImplemented "Instruction FABS not yet implemented."
	615 Add S1, S1, S2
	616 Move V2, [X31+192]
	617 NotImplemented "Instruction FABS not yet implemented."
	618 NotImplemented "Instruction FCMP not yet implemented."
	619 Move V15, [X31+208]
	620 Move S14, W31
	621 Move S10, 1
	622 Move S12, W31
	623 Move V8, [X31+712]
	624 Move V9, [X31+720]
	625 Move W8, [X20+1413]
	626 Move S1, W31
	627 Multiply S10, S0, S1
	628 Multiply S11, S9, S1
	629 Multiply S12, S8, S1
	630 Compare W8, 0
	631 JumpIfNotEqual {637}
	632 Move X0, 0x677000
	633 Move X0, [X0+1448]
	634 Call 0x1C17CF4
	635 Move W8, 1
	636 Move [X20+1413], W8
	637 Move X0, [X21]
	638 Move V15, [X31+208]
	639 Subtract S8, S8, S10
	640 Subtract S9, S10, S9
	641 Move W8, [X0+224]
	642 Subtract S11, S11, S12
	643 Compare W8, 0
	644 JumpIfNotEqual {646}
	645 Call 0x1C17DFC
	646 Multiply S2, S9, S9
	647 Multiply S3, S11, S11
	648 Multiply S1, S8, S8
	649 Add S2, S2, S3
	650 Move V0, [X31+716]
	651 Add S1, S1, S2
	652 Move S4, 1
	653 NotImplemented "Instruction FSQRT not yet implemented."
	654 NotImplemented "Instruction FDIV not yet implemented."
	655 Multiply S10, S9, S1
	656 Multiply S14, S11, S1
	657 Multiply S12, S8, S1
	658 Move X0, [X22]
	659 Move V1, [X31+712]
	660 Move V2, [X31+720]
	661 Multiply S3, S12, S0
	662 Move W8, [X0+224]
	663 Multiply S0, S10, S0
	664 Multiply S4, S1, S14
	665 Multiply S9, S10, S2
	666 Multiply S2, S14, S2
	667 Multiply S11, S1, S12
	668 Subtract S8, S4, S0
	669 Subtract S5, S3, S2
	670 Compare W8, 0
	671 JumpIfNotEqual {675}
	672 Move V13, V5
	673 Call 0x1C17DFC
	674 Move V5, V13
	675 Subtract S0, S9, S11
	676 Move V13, [X31+136]
	677 Move [X31+176], S0
	678 Move V0, [X31+156]
	679 Add X0, X31, 528
	680 Add X1, X31, 520
	681 Move V1, V13
	682 Move V2, V15
	683 Move V3, V10
	684 Move V4, V12
	685 Move V6, V8
	686 Move [X31+192], S5
	687 Call TilingJob.GetProjectedCircleHorizon, X0, V0, X1, X2, X3, X4
	688 Move V1, [X31+528]
	689 Move V0, [X31+532]
	690 Move V15, [X31+520]
	691 Move V11, [X31+524]
	692 Move V9, [X19+256]
	693 Multiply S2, S12, S1
	694 Multiply S3, S8, S0
	695 Multiply S4, S12, S15
	696 Add S2, S13, S2
	697 Add S4, S13, S4
	698 Add S13, S2, S3
	699 Multiply S2, S8, S11
	700 NotImplemented "Instruction FCMP not yet implemented."
	701 Add S12, S4, S2
	702 Move V3, [X31+156]
	703 Multiply S2, S10, S1
	704 Move X0, [X22]
	705 Multiply S1, S14, S1
	706 Add S2, S3, S2
	707 Move V3, [X31+140]
	708 Move V4, [X31+176]
	709 Move W8, [X0+224]
	710 Add S1, S3, S1
	711 Move V3, [X31+192]
	712 Multiply S3, S3, S0
	713 Multiply S0, S4, S0
	714 Add S9, S2, S3
	715 Add S8, S1, S0
	716 Compare W8, 0
	717 JumpIfNotEqual {719}
	718 Call 0x1C17DFC
	719 Move X0, X19
	720 Move V0, V9
	721 Move V1, V8
	722 Move V2, V13
	723 Call TilingJob.ExpandY, X0, X1
	724 Move V9, [X19+256]
	725 Move V13, [X31+208]
	726 NotImplemented "Instruction FCMP not yet implemented."
	727 Move V2, [X31+156]
	728 Multiply S0, S10, S15
	729 Move X0, [X22]
	730 Multiply S1, S14, S15
	731 Add S0, S2, S0
	732 Move V2, [X31+140]
	733 Move V3, [X31+176]
	734 Move W8, [X0+224]
	735 Add S1, S2, S1
	736 Move V2, [X31+192]
	737 Multiply S3, S3, S11
	738 Add S8, S1, S3
	739 Multiply S2, S2, S11
	740 Add S9, S0, S2
	741 Compare W8, 0
	742 JumpIfNotEqual {744}
	743 Call 0x1C17DFC
	744 Move X0, X19
	745 Move V0, V9
	746 Move V1, V8
	747 Move V2, V12
	748 Call TilingJob.ExpandY, X0, X1
	749 Move V9, [X19+256]
	750 Move X0, [X22]
	751 Move V10, [X31+712]
	752 Move V8, [X31+716]
	753 Move V11, [X31+720]
	754 Move W8, [X0+224]
	755 Compare W8, 0
	756 JumpIfNotEqual {758}
	757 Call 0x1C17DFC
	758 Move S12, [X31+136]
	759 Move S1, [X31+140]
	760 Move V0, [X31+156]
	761 Add X0, X31, 504
	762 Add X1, X31, 488
	763 Move V2, V12
	764 Move V3, V10
	765 Move V4, V8
	766 Move V5, V11
	767 Move V6, V13
	768 Move V7, V9
	769 Call TilingJob.GetCircleClipPoints, X0, X1, V0, V1, X2, X3
	770 Move TEMP, X0
	771 And TEMP, TEMP, 1
	772 Compare TEMP, 1
	773 JumpIfNotEqual {792}
	774 Move X0, [X22]
	775 Move V10, [X31+504]
	776 Move V8, [X31+508]
	777 Move V9, [X31+512]
	778 Move W8, [X0+224]
	779 Compare W8, 0
	780 JumpIfNotEqual {782}
	781 Call 0x1C17DFC
	782 Move X0, X19
	783 Move V0, V10
	784 Move V1, V8
	785 Move V2, V9
	786 Call TilingJob.ExpandY, X0, X1
	787 Move V0, [X31+488]
	788 Move V1, [X31+492]
	789 Move V2, [X31+496]
	790 Move X0, X19
	791 Call TilingJob.ExpandY, X0, X1
	792 Move X0, [X22]
	793 Move V8, [X31+720]
	794 Move W8, [X0+224]
	795 Compare W8, 0
	796 JumpIfNotEqual {798}
	797 Call 0x1C17DFC
	798 Move V0, V8
	799 Call TilingJob.square, V0
	800 Move W8, [X20+1413]
	801 Move V8, V0
	802 Move S9, 1
	803 Compare W8, 0
	804 JumpIfNotEqual {810}
	805 Move X0, 0x677000
	806 Move X0, [X0+1448]
	807 Call 0x1C17CF4
	808 Move W8, 1
	809 Move [X20+1413], W8
	810 Move X0, [X21]
	811 Subtract S8, S9, S8
	812 Move W8, [X0+224]
	813 Compare W8, 0
	814 JumpIfNotEqual {816}
	815 Call 0x1C17DFC
	816 Move V1, [X31+708]
	817 NotImplemented "Instruction FSQRT not yet implemented."
	818 Move V0, [X19+256]
	819 Multiply S2, S13, S2
	820 Move W8, S1
	821 And W8, W8, 0x7FFFFFFF
	822 Move W9, 0x7F800000
	823 Subtract S3, S12, S2
	824 NotImplemented "Instruction CMP not yet implemented."
	825 NotImplemented "Instruction FCCMP not yet implemented."
	826 NotImplemented "Instruction FCSEL not yet implemented."
	827 NotImplemented "Instruction FCMP not yet implemented."
	828 Move [X31+124], W31
	829 NotImplemented "Instruction CMP not yet implemented."
	830 Add S2, S12, S2
	831 NotImplemented "Instruction FCCMP not yet implemented."
	832 NotImplemented "Instruction FCSEL not yet implemented."
	833 NotImplemented "Instruction FCMP not yet implemented."
	834 NotImplemented "Instruction CSET not yet implemented."
	835 Move [X31+124], W8
	836 Move V2, [X31+700]
	837 Move V3, [X31+704]
	838 Move V0, [X31+712]
	839 Move V12, [X31+716]
	840 Move V14, [X31+720]
	841 Multiply S4, S0, S3
	842 Multiply S5, S1, S12
	843 Multiply S6, S14, S2
	844 Multiply S3, S14, S3
	845 Multiply S1, S1, S0
	846 Multiply S2, S12, S2
	847 Subtract S9, S5, S3
	848 Subtract S10, S6, S1
	849 Subtract S8, S4, S2
	850 Add S1, S10, S9
	851 Add S1, S8, S1
	852 NotImplemented "Instruction FCMP not yet implemented."
	853 Move S15, W31
	854 Move S9, 1
	855 Move S8, W31
	856 Move W8, [X20+1413]
	857 Compare W8, 0
	858 JumpIfNotEqual {864}
	859 Move X0, 0x677000
	860 Move X0, [X0+1448]
	861 Call 0x1C17CF4
	862 Move W8, 1
	863 Move [X20+1413], W8
	864 Move X0, [X21]
	865 Move W8, [X0+224]
	866 Compare W8, 0
	867 JumpIfNotEqual {869}
	868 Call 0x1C17DFC
	869 Multiply S2, S9, S9
	870 Multiply S3, S10, S10
	871 Multiply S1, S8, S8
	872 Add S2, S3, S2
	873 Move V0, [X31+712]
	874 Move V12, [X31+716]
	875 Move V14, [X31+720]
	876 Add S1, S1, S2
	877 Move S4, 1
	878 NotImplemented "Instruction FSQRT not yet implemented."
	879 NotImplemented "Instruction FDIV not yet implemented."
	880 Multiply S9, S9, S1
	881 Multiply S15, S10, S1
	882 Multiply S8, S8, S1
	883 Move W8, [X31+124]
	884 Multiply S1, S0, S15
	885 Multiply S2, S8, S12
	886 Multiply S3, S9, S14
	887 Multiply S4, S9, S12
	888 Multiply S5, S15, S14
	889 Multiply S0, S0, S8
	890 Subtract S6, S1, S4
	891 Subtract S1, S2, S5
	892 Subtract S0, S3, S0
	893 Move [X31+96], S1
	894 Move [X31+104], S6
	895 Move [X31+92], S0
	896 Move [X31+104], S8
	897 Move [X31+84], S9
	898 Compare W8, 0
	899 JumpIfEqual {1117}
	900 Move X0, [X22]
	901 Move V0, [X31+728]
	902 Move W8, [X0+224]
	903 NotImplemented "Instruction FDIV not yet implemented."
	904 Compare W8, 0
	905 JumpIfNotEqual {907}
	906 Call 0x1C17DFC
	907 Move V13, [X31+100]
	908 Move V10, [X31+92]
	909 Move V2, V12
	910 Move V3, V14
	911 Move V4, V11
	912 Move V5, V15
	913 Move V6, V8
	914 Move [X31], S10
	915 Move [X31+8], S13
	916 Call TilingJob.FindNearConicTangentTheta, X0, X1, V0, X2, X3
	917 Move V7, [X31+700]
	918 Move V16, [X19+256]
	919 Move [X31+32], S0
	920 Move [X31+192], S11
	921 Move V0, [X31+104]
	922 Move V2, [X31+704]
	923 Move V3, [X31+708]
	924 Move V4, [X31+712]
	925 Move V5, [X31+716]
	926 Move V6, [X31+720]
	927 Move V8, V1
	928 Move V11, [X31+96]
	929 Move V1, V7
	930 Move V7, [X31+192]
	931 Move [X31+4], S15
	932 Move [X31+12], S0
	933 Move V0, V16
	934 Move [X31+20], S10
	935 Move [X31+28], S13
	936 Move [X31+16], S11
	937 Move [X31], S9
	938 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	939 Move V7, [X31+704]
	940 Move V16, V9
	941 Move V9, V2
	942 Move V2, [X31+104]
	943 Move V12, V0
	944 Move V14, V1
	945 Move V0, [X19+256]
	946 Move V1, [X31+700]
	947 Move V3, [X31+708]
	948 Move V4, [X31+712]
	949 Move V5, [X31+716]
	950 Move V6, [X31+720]
	951 Move [X31+4], S15
	952 Move [X31+12], S2
	953 Move V2, V7
	954 Move V7, [X31+192]
	955 Move [X31+32], S8
	956 Move [X31+20], S10
	957 Move [X31+28], S13
	958 Move [X31+16], S11
	959 Move [X31], S16
	960 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	961 Move V8, V0
	962 Move V10, V1
	963 Move V11, V2
	964 Add X0, X31, 584
	965 Move V0, V12
	966 Move V1, V14
	967 Move V2, V9
	968 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	969 Move TEMP, X0
	970 And TEMP, TEMP, 1
	971 Compare TEMP, 1
	972 JumpIfNotEqual {983}
	973 Move X0, [X22]
	974 Move W8, [X0+224]
	975 Compare W8, 0
	976 JumpIfNotEqual {978}
	977 Call 0x1C17DFC
	978 Move X0, X19
	979 Move V0, V12
	980 Move V1, V14
	981 Move V2, V9
	982 Call TilingJob.ExpandY, X0, X1
	983 Move X0, [X22]
	984 Move W8, [X0+224]
	985 Compare W8, 0
	986 JumpIfNotEqual {988}
	987 Call 0x1C17DFC
	988 Add X0, X31, 584
	989 Move V0, V8
	990 Move V1, V10
	991 Move V2, V11
	992 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	993 Move TEMP, X0
	994 And TEMP, TEMP, 1
	995 Compare TEMP, 1
	996 JumpIfNotEqual {1007}
	997 Move X0, [X22]
	998 Move W8, [X0+224]
	999 Compare W8, 0
	1000 JumpIfNotEqual {1002}
	1001 Call 0x1C17DFC
	1002 Move X0, X19
	1003 Move V0, V8
	1004 Move V1, V10
	1005 Move V2, V11
	1006 Call TilingJob.ExpandY, X0, X1
	1007 Move X0, [X22]
	1008 Move V9, [X31+712]
	1009 Move V8, [X31+720]
	1010 Move V12, V15
	1011 Move W8, [X0+224]
	1012 Compare W8, 0
	1013 JumpIfNotEqual {1015}
	1014 Call 0x1C17DFC
	1015 Move V2, V9
	1016 Move V9, [X31+192]
	1017 Move V14, [X31+84]
	1018 Move V13, [X31+104]
	1019 Move S10, [X31+96]
	1020 Move S11, [X31+100]
	1021 Move V3, V8
	1022 Move V4, V9
	1023 Move V5, V14
	1024 Move V6, V13
	1025 Move [X31], S10
	1026 Move [X31+8], S11
	1027 Call TilingJob.FindNearConicTangentTheta, X0, X1, V0, X2, X3
	1028 Move V16, [X19+256]
	1029 Move V7, [X31+700]
	1030 Move V2, [X31+704]
	1031 Move V3, [X31+708]
	1032 Move V4, [X31+712]
	1033 Move V5, [X31+716]
	1034 Move V6, [X31+720]
	1035 Move V15, [X31+92]
	1036 Move V8, V1
	1037 Move [X31+32], S0
	1038 Move V0, V16
	1039 Move V1, V7
	1040 Move V7, V9
	1041 Move [X31+20], S15
	1042 Move [X31+28], S11
	1043 Move [X31+16], S10
	1044 Move [X31+4], S12
	1045 Move [X31+12], S13
	1046 Move [X31], S14
	1047 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	1048 Move V7, [X31+704]
	1049 Move V16, V0
	1050 Move V17, V1
	1051 Move V0, [X19+256]
	1052 Move V1, [X31+700]
	1053 Move V3, [X31+708]
	1054 Move V4, [X31+712]
	1055 Move V5, [X31+716]
	1056 Move V6, [X31+720]
	1057 Move [X31+20], S15
	1058 Move [X31+28], S11
	1059 Move V15, V12
	1060 Move [X31+4], S15
	1061 Move [X31+12], S13
	1062 Move V13, V2
	1063 Move V2, V7
	1064 Move V7, V9
	1065 Move [X31+32], S8
	1066 Move V12, V17
	1067 Move [X31+16], S10
	1068 Move [X31], S14
	1069 Move V9, V16
	1070 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	1071 Move V11, V0
	1072 Move V8, V1
	1073 Move V10, V2
	1074 Add X0, X31, 584
	1075 Move V0, V9
	1076 Move V1, V12
	1077 Move V2, V13
	1078 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	1079 Move TEMP, X0
	1080 And TEMP, TEMP, 1
	1081 Compare TEMP, 1
	1082 JumpIfNotEqual {1093}
	1083 Move X0, [X22]
	1084 Move W8, [X0+224]
	1085 Compare W8, 0
	1086 JumpIfNotEqual {1088}
	1087 Call 0x1C17DFC
	1088 Move X0, X19
	1089 Move V0, V9
	1090 Move V1, V12
	1091 Move V2, V13
	1092 Call TilingJob.ExpandY, X0, X1
	1093 Move X0, [X22]
	1094 Move W8, [X0+224]
	1095 Compare W8, 0
	1096 JumpIfNotEqual {1098}
	1097 Call 0x1C17DFC
	1098 Add X0, X31, 584
	1099 Move V0, V11
	1100 Move V1, V8
	1101 Move V2, V10
	1102 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	1103 Move TEMP, X0
	1104 And TEMP, TEMP, 1
	1105 Compare TEMP, 1
	1106 JumpIfNotEqual {1117}
	1107 Move X0, [X22]
	1108 Move W8, [X0+224]
	1109 Compare W8, 0
	1110 JumpIfNotEqual {1112}
	1111 Call 0x1C17DFC
	1112 Move X0, X19
	1113 Move V0, V11
	1114 Move V1, V8
	1115 Move V2, V10
	1116 Call TilingJob.ExpandY, X0, X1
	1117 Move X0, [X22]
	1118 Move [X31+80], S15
	1119 Move V8, [X31+700]
	1120 Move V9, [X31+704]
	1121 Move V10, [X31+708]
	1122 Move V11, [X31+712]
	1123 Move V12, [X31+716]
	1124 Move V14, [X31+720]
	1125 Move W8, [X0+224]
	1126 Move V13, [X31+724]
	1127 Move V15, [X31+728]
	1128 Compare W8, 0
	1129 JumpIfNotEqual {1131}
	1130 Call 0x1C17DFC
	1131 Move V1, [X31+100]
	1132 Move V0, [X31+92]
	1133 Move V7, [X31+208]
	1134 Add X0, X31, 472
	1135 Add X1, X31, 456
	1136 Move [X31+36], S0
	1137 Move [X31+44], S1
	1138 Move V0, [X31+96]
	1139 Move V1, [X31+104]
	1140 Move V2, V10
	1141 Move V3, V11
	1142 Move [X31+32], S0
	1143 Move V0, [X31+80]
	1144 Move V4, V12
	1145 Move V5, V14
	1146 Move V6, V13
	1147 Move [X31+20], S0
	1148 Move [X31+28], S1
	1149 Move V0, [X31+84]
	1150 Move V1, V9
	1151 Move [X31], S15
	1152 Move [X31+16], S0
	1153 Move V0, [X31+240]
	1154 Move [X31+8], S0
	1155 Move V0, V8
	1156 Call TilingJob.GetConeSideTangentPoints, X0, X1, V0, V1, V2, V3, X2, X3, X4, X5
	1157 Move X8, 0x6DB000
	1158 Move W1, [X19+272]
	1159 Move X8, [X8+16]
	1160 Add X20, X19, 200
	1161 Move X0, X20
	1162 Move X2, [X8]
	1163 Call 0x2D20050, X0, X1
	1164 Move V1, [X31+700]
	1165 Move V2, [X31+704]
	1166 Move V3, [X31+708]
	1167 Move W8, 0x80000000
	1168 Move V6, [X31+472]
	1169 Move S4, W8
	1170 Move V7, [X31+476]
	1171 Move V16, [X31+480]
	1172 Multiply S4, S1, S4
	1173 Multiply S5, S0, S3
	1174 Subtract S4, S4, S2
	1175 Subtract S4, S4, S5
	1176 Move S5, W31
	1177 Multiply S5, S6, S5
	1178 Multiply S0, S0, S16
	1179 Add S5, S5, S7
	1180 Move V13, [X31+88]
	1181 Move V15, [X31+152]
	1182 Add S0, S5, S0
	1183 NotImplemented "Instruction FDIV not yet implemented."
	1184 NotImplemented "Instruction FCMP not yet implemented."
	1185 Move [X31+72], S7
	1186 Move [X31+80], S6
	1187 Move [X31+192], S16
	1188 Move [X31+132], S5
	1189 Move S4, 1
	1190 NotImplemented "Instruction FCMP not yet implemented."
	1191 Move V5, [X31+192]
	1192 Move V4, [X19+256]
	1193 Multiply S5, S5, S0
	1194 Add S8, S3, S5
	1195 NotImplemented "Instruction FCMP not yet implemented."
	1196 Move X0, [X22]
	1197 Move S4, [X31+72]
	1198 Move S3, [X31+76]
	1199 Move W8, [X0+224]
	1200 Multiply S3, S3, S0
	1201 Multiply S0, S4, S0
	1202 Add S10, S1, S3
	1203 Add S9, S2, S0
	1204 Compare W8, 0
	1205 JumpIfNotEqual {1207}
	1206 Call 0x1C17DFC
	1207 Move X0, X19
	1208 Move V0, V10
	1209 Move V1, V9
	1210 Move V2, V8
	1211 Call TilingJob.ExpandY, X0, X1
	1212 Move X8, 0x6DB000
	1213 Move W1, [X19+272]
	1214 Move X8, [X8+16]
	1215 Add X21, X19, 208
	1216 Move X0, X21
	1217 Move X2, [X8]
	1218 Call 0x2D20050, X0, X1
	1219 Move V1, [X31+700]
	1220 Move V2, [X31+704]
	1221 Move V3, [X31+708]
	1222 Move V4, [X31+192]
	1223 Move W8, 0x80000000
	1224 Move S5, W8
	1225 Multiply S5, S1, S5
	1226 Multiply S4, S4, S0
	1227 Multiply S0, S0, S3
	1228 Subtract S5, S5, S2
	1229 Subtract S0, S5, S0
	1230 Move V5, [X31+132]
	1231 Add S4, S5, S4
	1232 NotImplemented "Instruction FDIV not yet implemented."
	1233 NotImplemented "Instruction FCMP not yet implemented."
	1234 Move S4, 1
	1235 NotImplemented "Instruction FCMP not yet implemented."
	1236 Move V5, [X31+192]
	1237 Move V4, [X19+256]
	1238 Multiply S5, S5, S0
	1239 Add S8, S3, S5
	1240 NotImplemented "Instruction FCMP not yet implemented."
	1241 Move X0, [X22]
	1242 Move S4, [X31+72]
	1243 Move S3, [X31+76]
	1244 Move W8, [X0+224]
	1245 Multiply S3, S3, S0
	1246 Multiply S0, S4, S0
	1247 Add S10, S1, S3
	1248 Add S9, S2, S0
	1249 Compare W8, 0
	1250 JumpIfNotEqual {1252}
	1251 Call 0x1C17DFC
	1252 Move X0, X19
	1253 Move V0, V10
	1254 Move V1, V9
	1255 Move V2, V8
	1256 Call TilingJob.ExpandY, X0, X1
	1257 NotImplemented "Instruction LDRH not yet implemented."
	1258 Add X0, X19, 262
	1259 Move W1, W31
	1260 Move X3, X31
	1261 Subtract W2, W8, 1
	1262 Call InclusiveRange.Clamp, X0, X1, X2
	1263 NotImplemented "Instruction LDRSH not yet implemented."
	1264 NotImplemented "Instruction LDRSH not yet implemented."
	1265 NotImplemented "Instruction CMP not yet implemented."
	1266 Move V2, [X31+464]
	1267 Move V0, [X31+456]
	1268 Move V1, [X31+460]
	1269 Add W29, W8, 1
	1270 Move [X31+160], S2
	1271 Move S2, W31
	1272 Move [X31+64], S1
	1273 Move [X31+72], S0
	1274 Multiply S0, S0, S2
	1275 Move W26, 0x7F800000
	1276 Add S0, S0, S1
	1277 Move [X31+108], S0
	1278 Move X0, X31
	1279 Call InclusiveRange.get_empty
	1280 Move [X31+452], W0
	1281 Move X27, 0x6DB000
	1282 Move W1, [X19+272]
	1283 Move X27, [X27+16]
	1284 Move X0, X20
	1285 Move X2, [X27]
	1286 Call 0x2D20050, X0, X1
	1287 Move W1, [X19+272]
	1288 Move X2, [X27]
	1289 Move X0, X21
	1290 Move V8, V0
	1291 Call 0x2D20050, X0, X1
	1292 Move V1, [X19+196]
	1293 Move V10, [X31+700]
	1294 NotImplemented "Instruction SCVTF not yet implemented."
	1295 Subtract S3, S0, S8
	1296 Move V9, [X31+704]
	1297 Move V0, [X31+708]
	1298 Multiply S1, S1, S2
	1299 Move W8, 0x80000000
	1300 Multiply S1, S3, S1
	1301 Move S2, W8
	1302 Multiply S2, S10, S2
	1303 Add S4, S8, S1
	1304 Subtract S2, S2, S9
	1305 Multiply S1, S0, S4
	1306 Add S1, S2, S1
	1307 Move V2, [X31+192]
	1308 Move V3, [X31+132]
	1309 Multiply S2, S2, S4
	1310 Subtract S2, S3, S2
	1311 NotImplemented "Instruction FDIV not yet implemented."
	1312 NotImplemented "Instruction FCMP not yet implemented."
	1313 Move X27, 0x6A2000
	1314 Move X27, [X27+3512]
	1315 Move V12, [X31+116]
	1316 Move V14, [X31+136]
	1317 Move S2, 1
	1318 NotImplemented "Instruction FCMP not yet implemented."
	1319 Move V3, [X31+192]
	1320 Move V2, [X19+256]
	1321 Multiply S3, S3, S11
	1322 Add S8, S0, S3
	1323 NotImplemented "Instruction FCMP not yet implemented."
	1324 Move X0, [X27]
	1325 Move V15, V13
	1326 Move V13, V4
	1327 Move W8, [X0+224]
	1328 Compare W8, 0
	1329 JumpIfNotEqual {1331}
	1330 Call 0x1C17DFC
	1331 Move S1, [X31+72]
	1332 Move S0, [X31+76]
	1333 Move X0, X19
	1334 Move V2, V8
	1335 Multiply S0, S0, S11
	1336 Multiply S1, S1, S11
	1337 Add S0, S10, S0
	1338 Add S1, S9, S1
	1339 Call TilingJob.ViewToTileSpace, X0, X1
	1340 Move W8, [X19+248]
	1341 Move W9, S0
	1342 And W9, W9, 0x7FFFFFFF
	1343 NotImplemented "Instruction CMP not yet implemented."
	1344 Subtract W8, W8, 1
	1345 NotImplemented "Instruction SCVTF not yet implemented."
	1346 NotImplemented "Instruction FCCMP not yet implemented."
	1347 NotImplemented "Instruction FCSEL not yet implemented."
	1348 Move X8, 0x7FF00000
	1349 Move D1, X8
	1350 Move W8, S0
	1351 And W8, W8, 0x7FFFFFFF
	1352 NotImplemented "Instruction CMP not yet implemented."
	1353 Move S2, W31
	1354 NotImplemented "Instruction FCCMP not yet implemented."
	1355 NotImplemented "Instruction FCVT not yet implemented."
	1356 Move D2, X31
	1357 NotImplemented "Instruction FCSEL not yet implemented."
	1358 NotImplemented "Instruction FCVTZS not yet implemented."
	1359 NotImplemented "Instruction FCMP not yet implemented."
	1360 NotImplemented "Instruction CSEL not yet implemented."
	1361 Add X0, X31, 452
	1362 Move X2, X31
	1363 Call InclusiveRange.Expand, X0, X1
	1364 Move V0, [X31+708]
	1365 Move V10, [X31+700]
	1366 Move V9, [X31+704]
	1367 Move W8, 0x80000000
	1368 Move S1, W8
	1369 Move V4, V13
	1370 Multiply S2, S13, S0
	1371 Move V13, V15
	1372 Move V15, [X31+152]
	1373 Multiply S1, S10, S1
	1374 Subtract S1, S1, S9
	1375 Add S1, S1, S2
	1376 Move X27, 0x6A1000
	1377 Move X27, [X27+3512]
	1378 Move V12, [X31+116]
	1379 Move V14, [X31+136]
	1380 Move V2, [X31+160]
	1381 Move V3, [X31+108]
	1382 Multiply S2, S4, S2
	1383 Subtract S2, S3, S2
	1384 NotImplemented "Instruction FDIV not yet implemented."
	1385 NotImplemented "Instruction FCMP not yet implemented."
	1386 Move S1, 1
	1387 NotImplemented "Instruction FCMP not yet implemented."
	1388 Move V2, [X31+160]
	1389 Move V1, [X19+256]
	1390 Multiply S2, S2, S11
	1391 Add S8, S0, S2
	1392 NotImplemented "Instruction FCMP not yet implemented."
	1393 Move X0, [X27]
	1394 Move V15, V13
	1395 Move V13, V4
	1396 Move W8, [X0+224]
	1397 Compare W8, 0
	1398 JumpIfNotEqual {1400}
	1399 Call 0x1C17DFC
	1400 Move S1, [X31+64]
	1401 Move S0, [X31+68]
	1402 Move X0, X19
	1403 Move V2, V8
	1404 Multiply S0, S0, S11
	1405 Multiply S1, S1, S11
	1406 Add S0, S10, S0
	1407 Add S1, S9, S1
	1408 Call TilingJob.ViewToTileSpace, X0, X1
	1409 Move W8, [X19+248]
	1410 Move W9, S0
	1411 And W9, W9, 0x7FFFFFFF
	1412 NotImplemented "Instruction CMP not yet implemented."
	1413 Subtract W8, W8, 1
	1414 NotImplemented "Instruction SCVTF not yet implemented."
	1415 NotImplemented "Instruction FCCMP not yet implemented."
	1416 NotImplemented "Instruction FCSEL not yet implemented."
	1417 Move X8, 0x7FF00000
	1418 Move D1, X8
	1419 Move W8, S0
	1420 And W8, W8, 0x7FFFFFFF
	1421 NotImplemented "Instruction CMP not yet implemented."
	1422 Move S2, W31
	1423 NotImplemented "Instruction FCCMP not yet implemented."
	1424 NotImplemented "Instruction FCVT not yet implemented."
	1425 Move D2, X31
	1426 NotImplemented "Instruction FCSEL not yet implemented."
	1427 NotImplemented "Instruction FCVTZS not yet implemented."
	1428 NotImplemented "Instruction FCMP not yet implemented."
	1429 NotImplemented "Instruction CSEL not yet implemented."
	1430 Add X0, X31, 452
	1431 Move X2, X31
	1432 Call InclusiveRange.Expand, X0, X1
	1433 Move V4, V13
	1434 Move V13, V15
	1435 Move V15, [X31+152]
	1436 Move X0, [X27]
	1437 Move V9, [X31+712]
	1438 Move V8, [X31+716]
	1439 Move V10, [X31+720]
	1440 Move W8, [X0+224]
	1441 Compare W8, 0
	1442 JumpIfNotEqual {1446}
	1443 Move V11, V4
	1444 Call 0x1C17DFC
	1445 Move V4, V11
	1446 Move V0, [X31+208]
	1447 Move V1, [X31+120]
	1448 Move V2, [X31+140]
	1449 Add X0, X31, 440
	1450 Move [X31+32], S0
	1451 Move V0, [X31+128]
	1452 Add X1, X31, 424
	1453 Move [X31+176], S4
	1454 Move V5, V8
	1455 Move [X31+16], S0
	1456 Move [X31+24], S1
	1457 Move V0, [X31+112]
	1458 Move V1, [X31+156]
	1459 Move V6, V10
	1460 Move V3, V14
	1461 Move [X31+24], S0
	1462 Move V0, V4
	1463 Move V4, V9
	1464 Move [X31], S13
	1465 Move [X31+8], S15
	1466 Move [X31+8], S12
	1467 Call TilingJob.IntersectCircleYPlane, V0, X0, X1, X2, X3, V1, X4, X5
	1468 Move TEMP, X0
	1469 And TEMP, TEMP, 1
	1470 Compare TEMP, 1
	1471 JumpIfNotEqual {1550}
	1472 Move V8, [X31+448]
	1473 Move V0, [X19+256]
	1474 NotImplemented "Instruction FCMP not yet implemented."
	1475 Move X0, [X27]
	1476 Move V10, [X31+440]
	1477 Move V9, [X31+444]
	1478 Move W8, [X0+224]
	1479 Compare W8, 0
	1480 JumpIfNotEqual {1482}
	1481 Call 0x1C17DFC
	1482 Move X0, X19
	1483 Move V0, V10
	1484 Move V1, V9
	1485 Move V2, V8
	1486 Call TilingJob.ViewToTileSpace, X0, X1
	1487 Move W8, [X19+248]
	1488 Move W9, S0
	1489 And W9, W9, 0x7FFFFFFF
	1490 NotImplemented "Instruction CMP not yet implemented."
	1491 Subtract W8, W8, 1
	1492 NotImplemented "Instruction SCVTF not yet implemented."
	1493 NotImplemented "Instruction FCCMP not yet implemented."
	1494 NotImplemented "Instruction FCSEL not yet implemented."
	1495 Move X8, 0x7FF00000
	1496 Move D1, X8
	1497 Move W8, S0
	1498 And W8, W8, 0x7FFFFFFF
	1499 NotImplemented "Instruction CMP not yet implemented."
	1500 Move S2, W31
	1501 NotImplemented "Instruction FCCMP not yet implemented."
	1502 NotImplemented "Instruction FCVT not yet implemented."
	1503 Move D2, X31
	1504 NotImplemented "Instruction FCSEL not yet implemented."
	1505 NotImplemented "Instruction FCVTZS not yet implemented."
	1506 NotImplemented "Instruction FCMP not yet implemented."
	1507 NotImplemented "Instruction CSEL not yet implemented."
	1508 Add X0, X31, 452
	1509 Move X2, X31
	1510 Call InclusiveRange.Expand, X0, X1
	1511 Move V0, [X19+256]
	1512 Move V8, [X31+432]
	1513 NotImplemented "Instruction FCMP not yet implemented."
	1514 Move X0, [X27]
	1515 Move V10, [X31+424]
	1516 Move V9, [X31+428]
	1517 Move W8, [X0+224]
	1518 Compare W8, 0
	1519 JumpIfNotEqual {1521}
	1520 Call 0x1C17DFC
	1521 Move X0, X19
	1522 Move V0, V10
	1523 Move V1, V9
	1524 Move V2, V8
	1525 Call TilingJob.ViewToTileSpace, X0, X1
	1526 Move W8, [X19+248]
	1527 Move W9, S0
	1528 And W9, W9, 0x7FFFFFFF
	1529 NotImplemented "Instruction CMP not yet implemented."
	1530 Subtract W8, W8, 1
	1531 NotImplemented "Instruction SCVTF not yet implemented."
	1532 NotImplemented "Instruction FCCMP not yet implemented."
	1533 NotImplemented "Instruction FCSEL not yet implemented."
	1534 Move X8, 0x7FF00000
	1535 Move D1, X8
	1536 Move W8, S0
	1537 And W8, W8, 0x7FFFFFFF
	1538 NotImplemented "Instruction CMP not yet implemented."
	1539 Move S2, W31
	1540 NotImplemented "Instruction FCCMP not yet implemented."
	1541 NotImplemented "Instruction FCVT not yet implemented."
	1542 Move D2, X31
	1543 NotImplemented "Instruction FCSEL not yet implemented."
	1544 NotImplemented "Instruction FCVTZS not yet implemented."
	1545 NotImplemented "Instruction FCMP not yet implemented."
	1546 NotImplemented "Instruction CSEL not yet implemented."
	1547 Add X0, X31, 452
	1548 Move X2, X31
	1549 Call InclusiveRange.Expand, X0, X1
	1550 Move W8, [X31+124]
	1551 Compare W8, 0
	1552 JumpIfEqual {1734}
	1553 Move X0, [X27]
	1554 Move V8, [X19+256]
	1555 Move V12, [X31+728]
	1556 Move V9, [X31+700]
	1557 Move V2, [X31+704]
	1558 Move V3, [X31+708]
	1559 Move V4, [X31+712]
	1560 Move W8, [X0+224]
	1561 Move V5, [X31+716]
	1562 Move V6, [X31+720]
	1563 Compare W8, 0
	1564 JumpIfNotEqual {1576}
	1565 Move V10, V6
	1566 Move V13, V4
	1567 Move V14, V5
	1568 Move V15, V3
	1569 Move V11, V2
	1570 Call 0x1C17DFC
	1571 Move V2, V11
	1572 Move V3, V15
	1573 Move V5, V14
	1574 Move V4, V13
	1575 Move V6, V10
	1576 Move V0, [X31+176]
	1577 Move S11, [X31+92]
	1578 Move S15, [X31+96]
	1579 Move S10, [X31+80]
	1580 Move S13, [X31+84]
	1581 Multiply S1, S0, S8
	1582 Move V0, [X31+208]
	1583 Move [X31+176], S1
	1584 Move [X31+32], S1
	1585 Move V1, V9
	1586 NotImplemented "Instruction FDIV not yet implemented."
	1587 Move S12, [X31+100]
	1588 Move S14, [X31+104]
	1589 Move V0, V8
	1590 Move [X31+16], S15
	1591 Move [X31+24], S11
	1592 Move [X31], S13
	1593 Move [X31+8], S10
	1594 Move [X31+24], S12
	1595 Move [X31+8], S14
	1596 Move V8, V7
	1597 Move [X31+144], S7
	1598 Call TilingJob.FindNearConicYTheta, V0, X0, X1, V1, X2, X3, V2
	1599 Move V16, [X19+256]
	1600 Move V7, [X31+700]
	1601 Move V2, [X31+704]
	1602 Move V3, [X31+708]
	1603 Move V4, [X31+712]
	1604 Move V5, [X31+716]
	1605 Move V6, [X31+720]
	1606 Move [X31+148], S1
	1607 Move [X31+32], S0
	1608 Move V0, V16
	1609 Move V1, V7
	1610 Move V7, V8
	1611 Move [X31+20], S11
	1612 Move [X31+28], S12
	1613 Move [X31+16], S15
	1614 Move [X31+4], S10
	1615 Move [X31+12], S14
	1616 Move [X31], S13
	1617 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	1618 Move V7, [X31+148]
	1619 Move V9, [X19+256]
	1620 Move V1, [X31+700]
	1621 Move V2, [X31+704]
	1622 Move V3, [X31+708]
	1623 Move V4, [X31+712]
	1624 Move V5, [X31+716]
	1625 Move V6, [X31+720]
	1626 Move [X31+32], S7
	1627 Move V7, [X31+144]
	1628 Move V8, [X31+176]
	1629 Move [X31+20], S11
	1630 Move [X31+28], S12
	1631 Move V11, V0
	1632 Move V0, V9
	1633 Move [X31+16], S15
	1634 Move [X31+4], S10
	1635 Move [X31+12], S14
	1636 Move [X31], S13
	1637 Call TilingJob.EvaluateNearConic, V0, X0, X1, V1, X2, X3, V2
	1638 Move V14, [X19+256]
	1639 Move V12, V0
	1640 Add X0, X31, 584
	1641 Move V0, V11
	1642 Move V1, V8
	1643 Move V2, V9
	1644 Move V10, V8
	1645 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	1646 Move V13, [X31+88]
	1647 Move V15, [X31+152]
	1648 Move TEMP, X0
	1649 And TEMP, TEMP, 1
	1650 Compare TEMP, 1
	1651 JumpIfNotEqual {1686}
	1652 Move X0, [X27]
	1653 Move W8, [X0+224]
	1654 Compare W8, 0
	1655 JumpIfNotEqual {1657}
	1656 Call 0x1C17DFC
	1657 Move X0, X19
	1658 Move V0, V11
	1659 Move V1, V10
	1660 Move V2, V9
	1661 Call TilingJob.ViewToTileSpace, X0, X1
	1662 Move W8, [X19+248]
	1663 Move W9, S0
	1664 And W9, W9, 0x7FFFFFFF
	1665 NotImplemented "Instruction CMP not yet implemented."
	1666 Subtract W8, W8, 1
	1667 NotImplemented "Instruction SCVTF not yet implemented."
	1668 NotImplemented "Instruction FCCMP not yet implemented."
	1669 NotImplemented "Instruction FCSEL not yet implemented."
	1670 Move X8, 0x7FF00000
	1671 Move D1, X8
	1672 Move W8, S0
	1673 And W8, W8, 0x7FFFFFFF
	1674 NotImplemented "Instruction CMP not yet implemented."
	1675 Move S2, W31
	1676 NotImplemented "Instruction FCCMP not yet implemented."
	1677 NotImplemented "Instruction FCVT not yet implemented."
	1678 Move D2, X31
	1679 NotImplemented "Instruction FCSEL not yet implemented."
	1680 NotImplemented "Instruction FCVTZS not yet implemented."
	1681 NotImplemented "Instruction FCMP not yet implemented."
	1682 NotImplemented "Instruction CSEL not yet implemented."
	1683 Add X0, X31, 452
	1684 Move X2, X31
	1685 Call InclusiveRange.Expand, X0, X1
	1686 Move X0, [X27]
	1687 Move W8, [X0+224]
	1688 Compare W8, 0
	1689 JumpIfNotEqual {1691}
	1690 Call 0x1C17DFC
	1691 Add X0, X31, 584
	1692 Move V0, V12
	1693 Move V1, V10
	1694 Move V2, V14
	1695 Call TilingJob.<TileLight>g__ConicPointIsValid|19_1, X0, X1
	1696 Move TEMP, X0
	1697 And TEMP, TEMP, 1
	1698 Compare TEMP, 1
	1699 JumpIfNotEqual {1734}
	1700 Move X0, [X27]
	1701 Move W8, [X0+224]
	1702 Compare W8, 0
	1703 JumpIfNotEqual {1705}
	1704 Call 0x1C17DFC
	1705 Move X0, X19
	1706 Move V0, V12
	1707 Move V1, V10
	1708 Move V2, V14
	1709 Call TilingJob.ViewToTileSpace, X0, X1
	1710 Move W8, [X19+248]
	1711 Move W9, S0
	1712 And W9, W9, 0x7FFFFFFF
	1713 NotImplemented "Instruction CMP not yet implemented."
	1714 Subtract W8, W8, 1
	1715 NotImplemented "Instruction SCVTF not yet implemented."
	1716 NotImplemented "Instruction FCCMP not yet implemented."
	1717 NotImplemented "Instruction FCSEL not yet implemented."
	1718 Move X8, 0x7FF00000
	1719 Move D1, X8
	1720 Move W8, S0
	1721 And W8, W8, 0x7FFFFFFF
	1722 NotImplemented "Instruction CMP not yet implemented."
	1723 Move S2, W31
	1724 NotImplemented "Instruction FCCMP not yet implemented."
	1725 NotImplemented "Instruction FCVT not yet implemented."
	1726 Move D2, X31
	1727 NotImplemented "Instruction FCSEL not yet implemented."
	1728 NotImplemented "Instruction FCVTZS not yet implemented."
	1729 NotImplemented "Instruction FCMP not yet implemented."
	1730 NotImplemented "Instruction CSEL not yet implemented."
	1731 Add X0, X31, 452
	1732 Move X2, X31
	1733 Call InclusiveRange.Expand, X0, X1
	1734 Move W8, [X19+268]
	1735 Move X9, [X19+32]
	1736 And X10, X23, 0
	1737 And X11, X22, 0
	1738 Add W27, W29, W8
	1739 Add W28, W27, 1
	1740 Move W8, [X9]
	1741 Move W9, [X31+452]
	1742 Move X2, X31
	1743 Or X23, X10, X8
	1744 Or X22, X11, X9
	1745 Move X0, X23
	1746 Move X1, X22
	1747 Call InclusiveRange.Merge, X0, X1
	1748 Move X8, [X19+32]
	1749 And X10, X25, 0
	1750 And X11, X24, 0
	1751 Move X2, X31
	1752 Move [X8], W0
	1753 Move X8, [X19+32]
	1754 Move W9, [X31+452]
	1755 Move W8, [X8]
	1756 Or X24, X11, X9
	1757 Move X1, X24
	1758 Or X25, X10, X8
	1759 Move X0, X25
	1760 Call InclusiveRange.Merge, X0, X1
	1761 Move X8, [X19+32]
	1762 Move [X8], W0
	1763 NotImplemented "Instruction LDRSH not yet implemented."
	1764 NotImplemented "Instruction CMP not yet implemented."
	1765 Add W29, W29, 1
	1766 NotImplemented "Instruction LDRH not yet implemented."
	1767 Add X0, X19, 262
	1768 Move W1, W31
	1769 Move X3, X31
	1770 Subtract W2, W8, 1
	1771 Move [X31+208], X0
	1772 Call InclusiveRange.Clamp, X0, X1, X2
	1773 NotImplemented "Instruction LDRSH not yet implemented."
	1774 NotImplemented "Instruction LDRSH not yet implemented."
	1775 NotImplemented "Instruction CMP not yet implemented."
	1776 Add X21, X19, 200
	1777 Add X22, X19, 208
	1778 Add W28, W8, 1
	1779 Move W20, 0x7F800000
	1780 Move D15, X31
	1781 Move X0, X31
	1782 Call InclusiveRange.get_empty
	1783 Move [X31+420], W0
	1784 Move X27, 0x6DA000
	1785 Move W1, [X19+272]
	1786 Move X27, [X27+16]
	1787 Move X0, X21
	1788 Move X2, [X27]
	1789 Call 0x2D20050, X0, X1
	1790 Move W1, [X19+272]
	1791 Move X2, [X27]
	1792 Move X0, X22
	1793 Move V8, V0
	1794 Call 0x2D20050, X0, X1
	1795 Move X27, 0x6A1000
	1796 Move V14, [X19+196]
	1797 Move X27, [X27+3512]
	1798 Move V9, [X31+700]
	1799 Move V10, [X31+704]
	1800 Move V11, [X31+708]
	1801 Move X0, [X27]
	1802 Move V12, [X19+256]
	1803 Move V13, V0
	1804 Move W8, [X0+224]
	1805 Compare W8, 0
	1806 JumpIfNotEqual {1808}
	1807 Call 0x1C17DFC
	1808 NotImplemented "Instruction SCVTF not yet implemented."
	1809 Move V3, [X31+240]
	1810 Move V5, [X31+224]
	1811 Multiply S0, S14, S0
	1812 Subtract S1, S13, S8
	1813 Multiply S0, S1, S0
	1814 Add S6, S8, S0
	1815 Add X0, X31, 408
	1816 Add X1, X31, 392
	1817 Move V0, V9
	1818 Move V1, V10
	1819 Move V2, V11
	1820 Move V4, V12
	1821 Call TilingJob.GetSphereYPlaneHorizon, X0, V0, V1, V2, V3, X1, X2
	1822 Move V10, [X31+408]
	1823 Move V9, [X31+412]
	1824 Move V8, [X31+416]
	1825 Add X0, X31, 584
	1826 Move V0, V10
	1827 Move V1, V9
	1828 Move V2, V8
	1829 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	1830 Move TEMP, X0
	1831 And TEMP, TEMP, 1
	1832 Compare TEMP, 1
	1833 JumpIfNotEqual {1867}
	1834 Move X0, [X27]
	1835 Move W8, [X0+224]
	1836 Compare W8, 0
	1837 JumpIfNotEqual {1839}
	1838 Call 0x1C17DFC
	1839 Move X0, X19
	1840 Move V0, V10
	1841 Move V1, V9
	1842 Move V2, V8
	1843 Call TilingJob.ViewToTileSpace, X0, X1
	1844 Move W8, [X19+248]
	1845 Move W9, S0
	1846 And W9, W9, 0x7FFFFFFF
	1847 NotImplemented "Instruction CMP not yet implemented."
	1848 Subtract W8, W8, 1
	1849 NotImplemented "Instruction SCVTF not yet implemented."
	1850 NotImplemented "Instruction FCCMP not yet implemented."
	1851 NotImplemented "Instruction FCSEL not yet implemented."
	1852 Move X8, 0x7FF00000
	1853 Move D1, X8
	1854 Move W8, S0
	1855 And W8, W8, 0x7FFFFFFF
	1856 NotImplemented "Instruction CMP not yet implemented."
	1857 Move S2, W31
	1858 NotImplemented "Instruction FCCMP not yet implemented."
	1859 NotImplemented "Instruction FCVT not yet implemented."
	1860 NotImplemented "Instruction FCSEL not yet implemented."
	1861 NotImplemented "Instruction FCVTZS not yet implemented."
	1862 NotImplemented "Instruction FCMP not yet implemented."
	1863 NotImplemented "Instruction CSEL not yet implemented."
	1864 Add X0, X31, 420
	1865 Move X2, X31
	1866 Call InclusiveRange.Expand, X0, X1
	1867 Move X0, [X27]
	1868 Move V10, [X31+392]
	1869 Move V8, [X31+396]
	1870 Move V9, [X31+400]
	1871 Move W8, [X0+224]
	1872 Compare W8, 0
	1873 JumpIfNotEqual {1875}
	1874 Call 0x1C17DFC
	1875 Add X0, X31, 584
	1876 Move V0, V10
	1877 Move V1, V8
	1878 Move V2, V9
	1879 Call TilingJob.<TileLight>g__SpherePointIsValid|19_0, X0, X1
	1880 Move TEMP, X0
	1881 And TEMP, TEMP, 1
	1882 Compare TEMP, 1
	1883 JumpIfNotEqual {1917}
	1884 Move X0, [X27]
	1885 Move W8, [X0+224]
	1886 Compare W8, 0
	1887 JumpIfNotEqual {1889}
	1888 Call 0x1C17DFC
	1889 Move X0, X19
	1890 Move V0, V10
	1891 Move V1, V8
	1892 Move V2, V9
	1893 Call TilingJob.ViewToTileSpace, X0, X1
	1894 Move W8, [X19+248]
	1895 Move W9, S0
	1896 And W9, W9, 0x7FFFFFFF
	1897 NotImplemented "Instruction CMP not yet implemented."
	1898 Subtract W8, W8, 1
	1899 NotImplemented "Instruction SCVTF not yet implemented."
	1900 NotImplemented "Instruction FCCMP not yet implemented."
	1901 NotImplemented "Instruction FCSEL not yet implemented."
	1902 Move X8, 0x7FF00000
	1903 Move D1, X8
	1904 Move W8, S0
	1905 And W8, W8, 0x7FFFFFFF
	1906 NotImplemented "Instruction CMP not yet implemented."
	1907 Move S2, W31
	1908 NotImplemented "Instruction FCCMP not yet implemented."
	1909 NotImplemented "Instruction FCVT not yet implemented."
	1910 NotImplemented "Instruction FCSEL not yet implemented."
	1911 NotImplemented "Instruction FCVTZS not yet implemented."
	1912 NotImplemented "Instruction FCMP not yet implemented."
	1913 NotImplemented "Instruction CSEL not yet implemented."
	1914 Add X0, X31, 420
	1915 Move X2, X31
	1916 Call InclusiveRange.Expand, X0, X1
	1917 Move W8, [X19+268]
	1918 Move X9, [X19+32]
	1919 And X10, X26, 0
	1920 And X11, X24, 0
	1921 Add W27, W28, W8
	1922 Add W29, W27, 1
	1923 Move W8, [X9]
	1924 Move W9, [X31+420]
	1925 Move X2, X31
	1926 Or X26, X10, X8
	1927 Or X24, X11, X9
	1928 Move X0, X26
	1929 Move X1, X24
	1930 Call InclusiveRange.Merge, X0, X1
	1931 Move X8, [X19+32]
	1932 And X10, X25, 0
	1933 And X11, X23, 0
	1934 Move X2, X31
	1935 Move [X8], W0
	1936 Move X8, [X19+32]
	1937 Move W9, [X31+420]
	1938 Move W8, [X8]
	1939 Or X23, X11, X9
	1940 Move X1, X23
	1941 Or X25, X10, X8
	1942 Move X0, X25
	1943 Call InclusiveRange.Merge, X0, X1
	1944 Move X8, [X19+32]
	1945 Move [X8], W0
	1946 NotImplemented "Instruction LDRSH not yet implemented."
	1947 NotImplemented "Instruction CMP not yet implemented."
	1948 Add W28, W28, 1
	1949 Move X9, [X31+208]
	1950 NotImplemented "Instruction LDRSW not yet implemented."
	1951 Move X10, [X19+32]
	1952 Move W9, [X9]
	1953 Move [X10], W9
	1954 Add X31, X31, 736
	1955 Move X20, [X31+144]
	1956 Move X19, [X31+152]
	1957 Move X22, [X31+128]
	1958 Move X21, [X31+136]
	1959 Move X24, [X31+112]
	1960 Move X23, [X31+120]
	1961 Move X26, [X31+96]
	1962 Move X25, [X31+104]
	1963 Move X28, [X31+80]
	1964 Move X27, [X31+88]
	1965 Move X29, [X31+64]
	1966 Move X30, [X31+72]
	1967 Move D9, [X31+48]
	1968 Move D8, [X31+56]
	1969 Move D11, [X31+32]
	1970 Move D10, [X31+40]
	1971 Move D13, [X31+16]
	1972 Move D12, [X31+24]
	1973 Move D15, [X31+160]
	1974 Move D14, [X31+168]
	1975 Return 

Method: System.Void TileLightOrthographic(System.Int32 lightIndex)

Disassembly:
	0x03A7BF84 CBNZ W8, 0x3A7BF8C
	0x03A7BF88 BL 0x1C16DFC
	0x03A7BF8C FCVT S0, S8
	0x03A7BF90 BL 0x3EB1BF0
	0x00000000 INVALID
	0x03A7BF98 FMUL S1, S11, S0
	0x03A7BF9C STR S0, [X31 + 0x2D4]
	0x03A7BFA0 STR S1, [X31 + 0x2D8]
	0x03A7BFA4 LDR V0, [X19 + 0x100]
	0x03A7BFA8 LDR V1, [X31 + 0x2C4]
	0x03A7BFAC FSUB S0, S0, S1
	0x03A7BFB0 BL 0x3A7E228
	0x03A7BFB4 LDRB W8, [X20 + 0x585]
	0x03A7BFB8 MOV V8.16B, V0.16B
	0x03A7BFBC CBNZ W8, 0x3A7BFD4
	0x03A7BFC0 ADRP X0, 0x678000
	0x03A7BFC4 LDR X0, [X0 + 0x5A8]
	0x03A7BFC8 BL 0x1C16CF4
	0x03A7BFCC MOVZ W8, 0x1
	0x03A7BFD0 STRB W8, [X20 + 0x585]
	0x03A7BFD4 LDR X0, [X21]
	0x03A7BFD8 FSUB S8, S9, S8
	0x03A7BFDC LDR W8, [X0 + 0xE0]
	0x03A7BFE0 CBNZ W8, 0x3A7BFE8
	0x03A7BFE4 BL 0x1C16DFC
	0x03A7BFE8 LDR V0, [X31 + 0x2C0]
	0x03A7BFEC LDR V1, [X31 + 0x2C4]
	0x03A7BFF0 LDR V3, [X19 + 0x100]
	0x03A7BFF4 FSQRT S4, S8
	0x03A7BFF8 ADD X0, X31, 0x240
	0x03A7BFFC ADD X1, X31, 0x238
	0x03A7C000 MOV V2.16B, V11.16B
	0x03A7C004 STR S11, [X31 + 0xF0]
	0x03A7C008 STR S4, [X31 + 0xE0]
	0x03A7C00C BL 0x3A7E230
	0x03A7C010 LDR V10, [X31 + 0x2BC]
	0x03A7C014 LDR V9, [X31 + 0x240]
	0x03A7C018 LDR V8, [X31 + 0x244]
	0x03A7C01C LDR V11, [X31 + 0x238]
	0x03A7C020 LDR V12, [X31 + 0x23C]
	0x03A7C024 ADD X0, X31, 0x248
	0x03A7C028 MOV V0.16B, V10.16B
	0x03A7C02C MOV V1.16B, V9.16B
	0x03A7C030 MOV V2.16B, V8.16B
	0x03A7C034 BL 0x3A7E4B4
	0x03A7C038 TBZ X0, 0x0, 0x3A7C060
	0x03A7C03C LDR X0, [X23]
	0x03A7C040 LDR W8, [X0 + 0xE0]
	0x03A7C044 CBNZ W8, 0x3A7C04C
	0x03A7C048 BL 0x1C16DFC
	0x03A7C04C MOV X0, X19
	0x03A7C050 MOV V0.16B, V10.16B
	0x03A7C054 MOV V1.16B, V9.16B
	0x03A7C058 MOV V2.16B, V8.16B
	0x03A7C05C BL 0x3A7E104
	0x03A7C060 LDR X0, [X23]
	0x03A7C064 LDR W8, [X0 + 0xE0]
	0x03A7C068 CBNZ W8, 0x3A7C070
	0x03A7C06C BL 0x1C16DFC
	0x03A7C070 ADD X0, X31, 0x248
	0x03A7C074 MOV V0.16B, V10.16B
	0x03A7C078 MOV V1.16B, V11.16B
	0x03A7C07C MOV V2.16B, V12.16B
	0x03A7C080 BL 0x3A7E4B4
	0x03A7C084 TBZ X0, 0x0, 0x3A7C0AC
	0x03A7C088 LDR X0, [X23]
	0x03A7C08C LDR W8, [X0 + 0xE0]
	0x03A7C090 CBNZ W8, 0x3A7C098
	0x03A7C094 BL 0x1C16DFC
	0x03A7C098 MOV X0, X19
	0x03A7C09C MOV V0.16B, V10.16B
	0x03A7C0A0 MOV V1.16B, V11.16B
	0x03A7C0A4 MOV V2.16B, V12.16B
	0x03A7C0A8 BL 0x3A7E104
	0x03A7C0AC LDR X0, [X23]
	0x03A7C0B0 LDR V10, [X31 + 0x2BC]
	0x03A7C0B4 LDR V8, [X31 + 0x2C4]
	0x03A7C0B8 LDR V9, [X19 + 0x100]
	0x03A7C0BC LDR W8, [X0 + 0xE0]
	0x03A7C0C0 CBNZ W8, 0x3A7C0C8
	0x03A7C0C4 BL 0x1C16DFC
	0x03A7C0C8 LDR V2, [X31 + 0xF0]
	0x03A7C0CC LDR V4, [X31 + 0xE0]
	0x03A7C0D0 ADD X0, X31, 0x230
	0x03A7C0D4 ADD X1, X31, 0x228
	0x03A7C0D8 MOV V0.16B, V10.16B
	0x03A7C0DC MOV V1.16B, V8.16B
	0x03A7C0E0 MOV V3.16B, V9.16B
	0x03A7C0E4 BL 0x3A7E230
	0x03A7C0E8 LDR V10, [X31 + 0x2C0]
	0x03A7C0EC LDR V9, [X31 + 0x230]
	0x03A7C0F0 LDR V8, [X31 + 0x234]
	0x03A7C0F4 LDR V12, [X31 + 0x228]
	0x03A7C0F8 LDR V11, [X31 + 0x22C]
	0x03A7C0FC ADD X0, X31, 0x248
	0x03A7C100 MOV V0.16B, V9.16B
	0x03A7C104 MOV V1.16B, V10.16B
	0x03A7C108 MOV V2.16B, V8.16B
	0x03A7C10C BL 0x3A7E4B4
	0x03A7C110 TBZ X0, 0x0, 0x3A7C138
	0x03A7C114 LDR X0, [X23]
	0x03A7C118 LDR W8, [X0 + 0xE0]
	0x03A7C11C CBNZ W8, 0x3A7C124
	0x03A7C120 BL 0x1C16DFC
	0x03A7C124 MOV X0, X19
	0x03A7C128 MOV V0.16B, V9.16B
	0x03A7C12C MOV V1.16B, V10.16B
	0x03A7C130 MOV V2.16B, V8.16B
	0x03A7C134 BL 0x3A7E104
	0x03A7C138 LDR X0, [X23]
	0x03A7C13C LDR W8, [X0 + 0xE0]
	0x03A7C140 CBNZ W8, 0x3A7C148
	0x03A7C144 BL 0x1C16DFC
	0x03A7C148 ADD X0, X31, 0x248
	0x03A7C14C MOV V0.16B, V12.16B
	0x03A7C150 MOV V1.16B, V10.16B
	0x03A7C154 MOV V2.16B, V11.16B
	0x03A7C158 BL 0x3A7E4B4
	0x03A7C15C TBZ X0, 0x0, 0x3A7C184
	0x03A7C160 LDR X0, [X23]
	0x03A7C164 LDR W8, [X0 + 0xE0]
	0x03A7C168 CBNZ W8, 0x3A7C170
	0x03A7C16C BL 0x1C16DFC
	0x03A7C170 MOV X0, X19
	0x03A7C174 MOV V0.16B, V12.16B
	0x03A7C178 MOV V1.16B, V10.16B
	0x03A7C17C MOV V2.16B, V11.16B
	0x03A7C180 BL 0x3A7E104
	0x03A7C184 ADD X0, X31, 0x248
	0x03A7C188 MOV X1, X31
	0x03A7C18C BL 0x3C5BC7C
	0x03A7C190 CBNZ W0, 0x3A7D5C0
	0x03A7C194 LDRB W8, [X20 + 0x585]
	0x03A7C198 LDR V8, [X31 + 0x2D8]
	0x03A7C19C CBNZ W8, 0x3A7C1B4
	0x03A7C1A0 ADRP X0, 0x677000
	0x03A7C1A4 LDR X0, [X0 + 0x5A8]
	0x03A7C1A8 BL 0x1C16CF4
	0x03A7C1AC MOVZ W8, 0x1
	0x03A7C1B0 STRB W8, [X20 + 0x585]
	0x03A7C1B4 LDR X0, [X21]
	0x03A7C1B8 LDR V0, [X31 + 0xF0]
	0x03A7C1BC ADRP X22, 0x6A2000
	0x03A7C1C0 FMUL S8, S8, S8
	0x03A7C1C4 LDR W8, [X0 + 0xE0]
	0x03A7C1C8 LDR X22, [X22 + 0xDB8]
	0x03A7C1CC FMUL S9, S0, S0
	0x03A7C1D0 CBNZ W8, 0x3A7C1D8
	0x03A7C1D4 BL 0x1C16DFC
	0x03A7C1D8 LDR V13, [X31 + 0x2C8]
	0x03A7C1DC ADRP X8, 0xFFFFFFFFFD06E000
	0x03A7C1E0 LDR V14, [X31 + 0x2D8]
	0x03A7C1E4 LDR V12, [X31 + 0x2CC]
	0x03A7C1E8 LDR V15, [X31 + 0x2D0]
	0x03A7C1EC LDR V2, [X8 + 0x240]
	0x03A7C1F0 LDR V6, [X31 + 0x2BC]
	0x03A7C1F4 LDR V16, [X31 + 0x2C0]
	0x03A7C1F8 LDR V17, [X31 + 0x2C4]
	0x03A7C1FC FABS S0, S13
	0x03A7C200 FMOV S1, -1
	0x03A7C204 FADD S0, S0, S1
	0x03A7C208 FABS S0, S0
	0x03A7C20C FSUB S7, S9, S8
	0x03A7C210 FMUL S18, S12, S14
	0x03A7C214 FCMP S0, S2
	0x03A7C218 FMUL S19, S15, S14
	0x03A7C21C STR S2, [X31 + 0xC0]
	0x03A7C220 B.PL 0x3A7C238
	0x03A7C224 FMOV S3, W31
	0x03A7C228 FMOV S4, 1
	0x03A7C22C MOV V0.16B, V13.16B
	0x03A7C230 FMOV S10, W31
	0x03A7C234 B 0x3A7C310
	0x03A7C238 LDRB W8, [X20 + 0x585]
	0x03A7C23C FMOV S0, W31
	0x03A7C240 FMUL S8, S13, S0
	0x03A7C244 FMUL S11, S12, S0
	0x03A7C248 FMUL S9, S15, S0
	0x03A7C24C CBNZ W8, 0x3A7C28C
	0x03A7C250 ADRP X0, 0x677000
	0x03A7C254 LDR X0, [X0 + 0x5A8]
	0x03A7C258 STR S6, [X31 + 0xD0]
	0x03A7C25C MOV V10.16B, V7.16B
	0x03A7C260 STR S16, [X31 + 0xB0]
	0x03A7C264 STP S17, S18, [X31 + 0x9C]
	0x03A7C268 STR S19, [X31 + 0x98]
	0x03A7C26C BL 0x1C16CF4
	0x03A7C270 LDP S19, S17, [X31 + 0x98]
	0x03A7C274 LDR V18, [X31 + 0xA0]
	0x03A7C278 LDR V16, [X31 + 0xB0]
	0x03A7C27C LDR V6, [X31 + 0xD0]
	0x03A7C280 MOV V7.16B, V10.16B
	0x03A7C284 MOVZ W8, 0x1
	0x03A7C288 STRB W8, [X20 + 0x585]
	0x03A7C28C LDR X0, [X21]
	0x03A7C290 FSUB S10, S8, S12
	0x03A7C294 FSUB S11, S11, S9
	0x03A7C298 FSUB S8, S15, S8
	0x03A7C29C LDR W8, [X0 + 0xE0]
	0x03A7C2A0 CBNZ W8, 0x3A7C2D8
	0x03A7C2A4 STR S6, [X31 + 0xD0]
	0x03A7C2A8 MOV V12.16B, V7.16B
	0x03A7C2AC STR S16, [X31 + 0xB0]
	0x03A7C2B0 MOV V9.16B, V17.16B
	0x03A7C2B4 STR S18, [X31 + 0xA0]
	0x03A7C2B8 MOV V15.16B, V19.16B
	0x03A7C2BC BL 0x1C16DFC
	0x03A7C2C0 LDR V18, [X31 + 0xA0]
	0x03A7C2C4 LDR V16, [X31 + 0xB0]
	0x03A7C2C8 LDR V6, [X31 + 0xD0]
	0x03A7C2CC MOV V19.16B, V15.16B
	0x03A7C2D0 MOV V17.16B, V9.16B
	0x03A7C2D4 MOV V7.16B, V12.16B
	0x03A7C2D8 FMUL S2, S11, S11
	0x03A7C2DC FMUL S3, S8, S8
	0x03A7C2E0 FMUL S1, S10, S10
	0x03A7C2E4 FADD S2, S3, S2
	0x03A7C2E8 LDR V0, [X31 + 0x2C8]
	0x03A7C2EC LDR V12, [X31 + 0x2CC]
	0x03A7C2F0 LDR V15, [X31 + 0x2D0]
	0x03A7C2F4 FADD S1, S1, S2
	0x03A7C2F8 FMOV S4, 1
	0x03A7C2FC FSQRT S1, S1
	0x03A7C300 FDIV S1, S4, S1
	0x03A7C304 FMUL S3, S11, S1
	0x03A7C308 FMUL S4, S8, S1
	0x03A7C30C FMUL S10, S10, S1
	0x03A7C310 LDR X0, [X22]
	0x03A7C314 FMUL S1, S0, S4
	0x03A7C318 FMUL S2, S3, S15
	0x03A7C31C STR S3, [X31 + 0x58]
	0x03A7C320 LDR W8, [X0 + 0xE0]
	0x03A7C324 FMUL S3, S3, S12
	0x03A7C328 FMUL S0, S0, S10
	0x03A7C32C FMUL S20, S13, S14
	0x03A7C330 FSQRT S11, S7
	0x03A7C334 FADD S13, S16, S18
	0x03A7C338 FADD S14, S17, S19
	0x03A7C33C FMUL S8, S10, S12
	0x03A7C340 FMUL S9, S4, S15
	0x03A7C344 FSUB S12, S1, S3
	0x03A7C348 FSUB S15, S2, S0
	0x03A7C34C STR S4, [X31 + 0x98]
	0x03A7C350 CBNZ W8, 0x3A7C36C
	0x03A7C354 STR S6, [X31 + 0xD0]
	0x03A7C358 STR S20, [X31 + 0xB0]
	0x03A7C35C BL 0x1C16DFC
	0x03A7C360 LDR V20, [X31 + 0xB0]
	0x03A7C364 LDR V4, [X31 + 0x98]
	0x03A7C368 LDR V6, [X31 + 0xD0]
	0x03A7C36C FADD S0, S6, S20
	0x03A7C370 STR S0, [X31 + 0x9C]
	0x03A7C374 FSUB S0, S8, S9
	0x03A7C378 STR S0, [X31 + 0x80]
	0x03A7C37C ADD X0, X31, 0x220
	0x03A7C380 ADD X1, X31, 0x218
	0x03A7C384 MOV V0.16B, V13.16B
	0x03A7C388 MOV V1.16B, V14.16B
	0x03A7C38C STR S11, [X31 + 0xD0]
	0x03A7C390 MOV V2.16B, V11.16B
	0x03A7C394 MOV V11.16B, V4.16B
	0x03A7C398 MOV V3.16B, V4.16B
	0x03A7C39C MOV V4.16B, V10.16B
	0x03A7C3A0 MOV V5.16B, V15.16B
	0x03A7C3A4 MOV V6.16B, V12.16B
	0x03A7C3A8 STR S13, [X31 + 0x8C]
	0x03A7C3AC BL 0x3A7E5A4
	0x03A7C3B0 LDR V1, [X31 + 0x220]
	0x03A7C3B4 LDR V0, [X31 + 0x224]
	0x03A7C3B8 MOV V6.16B, V12.16B
	0x03A7C3BC LDR V12, [X31 + 0x218]
	0x03A7C3C0 LDR V13, [X31 + 0x21C]
	0x03A7C3C4 LDR V2, [X19 + 0x100]
	0x03A7C3C8 FMUL S3, S10, S1
	0x03A7C3CC FMUL S4, S6, S0
	0x03A7C3D0 FMUL S5, S10, S12
	0x03A7C3D4 FADD S3, S14, S3
	0x03A7C3D8 FADD S5, S14, S5
	0x03A7C3DC FADD S8, S3, S4
	0x03A7C3E0 FMUL S3, S6, S13
	0x03A7C3E4 STR S14, [X31 + 0x88]
	0x03A7C3E8 FCMP S8, S2
	0x03A7C3EC FADD S14, S5, S3
	0x03A7C3F0 STP S6, S10, [X31 + 0x70]
	0x03A7C3F4 STR S15, [X31 + 0x78]
	0x03A7C3F8 B.LT 0x3A7C460
	0x03A7C3FC LDR V2, [X31 + 0x58]
	0x03A7C400 LDR V3, [X31 + 0x9C]
	0x03A7C404 LDR X0, [X22]
	0x03A7C408 MOV V10.16B, V11.16B
	0x03A7C40C FMUL S2, S2, S1
	0x03A7C410 FADD S2, S3, S2
	0x03A7C414 LDR V3, [X31 + 0x8C]
	0x03A7C418 FMUL S1, S11, S1
	0x03A7C41C LDR W8, [X0 + 0xE0]
	0x03A7C420 FADD S1, S3, S1
	0x03A7C424 LDR V3, [X31 + 0x80]
	0x03A7C428 FMUL S3, S3, S0
	0x03A7C42C FMUL S0, S15, S0
	0x03A7C430 FADD S11, S2, S3
	0x03A7C434 FADD S9, S1, S0
	0x03A7C438 CBNZ W8, 0x3A7C440
	0x03A7C43C BL 0x1C16DFC
	0x03A7C440 MOV X0, X19
	0x03A7C444 MOV V0.16B, V11.16B
	0x03A7C448 MOV V1.16B, V9.16B
	0x03A7C44C MOV V2.16B, V8.16B
	0x03A7C450 BL 0x3A7E104
	0x03A7C454 LDR V2, [X19 + 0x100]
	0x03A7C458 LDR V15, [X31 + 0x78]
	0x03A7C45C MOV V11.16B, V10.16B
	0x03A7C460 FCMP S14, S2
	0x03A7C464 B.LT 0x3A7C4BC
	0x03A7C468 LDR V0, [X31 + 0x58]
	0x03A7C46C LDR V2, [X31 + 0x9C]
	0x03A7C470 LDR X0, [X22]
	0x03A7C474 FMUL S1, S11, S12
	0x03A7C478 FMUL S0, S0, S12
	0x03A7C47C FADD S0, S2, S0
	0x03A7C480 LDR V2, [X31 + 0x8C]
	0x03A7C484 LDR W8, [X0 + 0xE0]
	0x03A7C488 FMUL S3, S15, S13
	0x03A7C48C FADD S1, S2, S1
	0x03A7C490 LDR V2, [X31 + 0x80]
	0x03A7C494 FADD S8, S1, S3
	0x03A7C498 FMUL S2, S2, S13
	0x03A7C49C FADD S9, S0, S2
	0x03A7C4A0 CBNZ W8, 0x3A7C4A8
	0x03A7C4A4 BL 0x1C16DFC
	0x03A7C4A8 MOV X0, X19
	0x03A7C4AC MOV V0.16B, V9.16B
	0x03A7C4B0 MOV V1.16B, V8.16B
	0x03A7C4B4 MOV V2.16B, V14.16B
	0x03A7C4B8 BL 0x3A7E104
	0x03A7C4BC LDR V0, [X31 + 0x2CC]
	0x03A7C4C0 FMOV S2, -1
	0x03A7C4C4 FABS S1, S0
	0x03A7C4C8 FADD S1, S1, S2
	0x03A7C4CC LDR V2, [X31 + 0xC0]
	0x03A7C4D0 FABS S1, S1
	0x03A7C4D4 FCMP S1, S2
	0x03A7C4D8 B.PL 0x3A7C4F0
	0x03A7C4DC LDR V15, [X31 + 0xD0]
	0x03A7C4E0 FMOV S14, W31
	0x03A7C4E4 FMOV S10, 1
	0x03A7C4E8 FMOV S12, W31
	0x03A7C4EC B 0x3A7C574
	0x03A7C4F0 LDR V8, [X31 + 0x2C8]
	0x03A7C4F4 LDR V9, [X31 + 0x2D0]
	0x03A7C4F8 LDRB W8, [X20 + 0x585]
	0x03A7C4FC FMOV S1, W31
	0x03A7C500 FMUL S10, S0, S1
	0x03A7C504 FMUL S11, S9, S1
	0x03A7C508 FMUL S12, S8, S1
	0x03A7C50C CBNZ W8, 0x3A7C524
	0x03A7C510 ADRP X0, 0x677000
	0x03A7C514 LDR X0, [X0 + 0x5A8]
	0x03A7C518 BL 0x1C16CF4
	0x03A7C51C MOVZ W8, 0x1
	0x03A7C520 STRB W8, [X20 + 0x585]
	0x03A7C524 LDR X0, [X21]
	0x03A7C528 LDR V15, [X31 + 0xD0]
	0x03A7C52C FSUB S8, S8, S10
	0x03A7C530 FSUB S9, S10, S9
	0x03A7C534 LDR W8, [X0 + 0xE0]
	0x03A7C538 FSUB S11, S11, S12
	0x03A7C53C CBNZ W8, 0x3A7C544
	0x03A7C540 BL 0x1C16DFC
	0x03A7C544 FMUL S2, S9, S9
	0x03A7C548 FMUL S3, S11, S11
	0x03A7C54C FMUL S1, S8, S8
	0x03A7C550 FADD S2, S2, S3
	0x03A7C554 LDR V0, [X31 + 0x2CC]
	0x03A7C558 FADD S1, S1, S2
	0x03A7C55C FMOV S4, 1
	0x03A7C560 FSQRT S1, S1
	0x03A7C564 FDIV S1, S4, S1
	0x03A7C568 FMUL S10, S9, S1
	0x03A7C56C FMUL S14, S11, S1
	0x03A7C570 FMUL S12, S8, S1
	0x03A7C574 LDR X0, [X22]
	0x03A7C578 LDR V1, [X31 + 0x2C8]
	0x03A7C57C LDR V2, [X31 + 0x2D0]
	0x03A7C580 FMUL S3, S12, S0
	0x03A7C584 LDR W8, [X0 + 0xE0]
	0x03A7C588 FMUL S0, S10, S0
	0x03A7C58C FMUL S4, S1, S14
	0x03A7C590 FMUL S9, S10, S2
	0x03A7C594 FMUL S2, S14, S2
	0x03A7C598 FMUL S11, S1, S12
	0x03A7C59C FSUB S8, S4, S0
	0x03A7C5A0 FSUB S5, S3, S2
	0x03A7C5A4 CBNZ W8, 0x3A7C5B4
	0x03A7C5A8 MOV V13.16B, V5.16B
	0x03A7C5AC BL 0x1C16DFC
	0x03A7C5B0 MOV V5.16B, V13.16B
	0x03A7C5B4 FSUB S0, S9, S11
	0x03A7C5B8 LDR V13, [X31 + 0x88]
	0x03A7C5BC STR S0, [X31 + 0xB0]
	0x03A7C5C0 LDR V0, [X31 + 0x9C]
	0x03A7C5C4 ADD X0, X31, 0x210
	0x03A7C5C8 ADD X1, X31, 0x208
	0x03A7C5CC MOV V1.16B, V13.16B
	0x03A7C5D0 MOV V2.16B, V15.16B
	0x03A7C5D4 MOV V3.16B, V10.16B
	0x03A7C5D8 MOV V4.16B, V12.16B
	0x03A7C5DC MOV V6.16B, V8.16B
	0x03A7C5E0 STR S5, [X31 + 0xC0]
	0x03A7C5E4 BL 0x3A7E5A4
	0x03A7C5E8 LDR V1, [X31 + 0x210]
	0x03A7C5EC LDR V0, [X31 + 0x214]
	0x03A7C5F0 LDR V15, [X31 + 0x208]
	0x03A7C5F4 LDR V11, [X31 + 0x20C]
	0x03A7C5F8 LDR V9, [X19 + 0x100]
	0x03A7C5FC FMUL S2, S12, S1
	0x03A7C600 FMUL S3, S8, S0
	0x03A7C604 FMUL S4, S12, S15
	0x03A7C608 FADD S2, S13, S2
	0x03A7C60C FADD S4, S13, S4
	0x03A7C610 FADD S13, S2, S3
	0x03A7C614 FMUL S2, S8, S11
	0x03A7C618 FCMP S13, S9
	0x03A7C61C FADD S12, S4, S2
	0x03A7C620 B.LT 0x3A7C67C
	0x03A7C624 LDR V3, [X31 + 0x9C]
	0x03A7C628 FMUL S2, S10, S1
	0x03A7C62C LDR X0, [X22]
	0x03A7C630 FMUL S1, S14, S1
	0x03A7C634 FADD S2, S3, S2
	0x03A7C638 LDR V3, [X31 + 0x8C]
	0x03A7C63C LDR V4, [X31 + 0xB0]
	0x03A7C640 LDR W8, [X0 + 0xE0]
	0x03A7C644 FADD S1, S3, S1
	0x03A7C648 LDR V3, [X31 + 0xC0]
	0x03A7C64C FMUL S3, S3, S0
	0x03A7C650 FMUL S0, S4, S0
	0x03A7C654 FADD S9, S2, S3
	0x03A7C658 FADD S8, S1, S0
	0x03A7C65C CBNZ W8, 0x3A7C664
	0x03A7C660 BL 0x1C16DFC
	0x03A7C664 MOV X0, X19
	0x03A7C668 MOV V0.16B, V9.16B
	0x03A7C66C MOV V1.16B, V8.16B
	0x03A7C670 MOV V2.16B, V13.16B
	0x03A7C674 BL 0x3A7E104
	0x03A7C678 LDR V9, [X19 + 0x100]
	0x03A7C67C LDR V13, [X31 + 0xD0]
	0x03A7C680 FCMP S12, S9
	0x03A7C684 B.LT 0x3A7C6E0
	0x03A7C688 LDR V2, [X31 + 0x9C]
	0x03A7C68C FMUL S0, S10, S15
	0x03A7C690 LDR X0, [X22]
	0x03A7C694 FMUL S1, S14, S15
	0x03A7C698 FADD S0, S2, S0
	0x03A7C69C LDR V2, [X31 + 0x8C]
	0x03A7C6A0 LDR V3, [X31 + 0xB0]
	0x03A7C6A4 LDR W8, [X0 + 0xE0]
	0x03A7C6A8 FADD S1, S2, S1
	0x03A7C6AC LDR V2, [X31 + 0xC0]
	0x03A7C6B0 FMUL S3, S3, S11
	0x03A7C6B4 FADD S8, S1, S3
	0x03A7C6B8 FMUL S2, S2, S11
	0x03A7C6BC FADD S9, S0, S2
	0x03A7C6C0 CBNZ W8, 0x3A7C6C8
	0x03A7C6C4 BL 0x1C16DFC
	0x03A7C6C8 MOV X0, X19
	0x03A7C6CC MOV V0.16B, V9.16B
	0x03A7C6D0 MOV V1.16B, V8.16B
	0x03A7C6D4 MOV V2.16B, V12.16B
	0x03A7C6D8 BL 0x3A7E104
	0x03A7C6DC LDR V9, [X19 + 0x100]
	0x03A7C6E0 LDR X0, [X22]
	0x03A7C6E4 LDR V10, [X31 + 0x2C8]
	0x03A7C6E8 LDR V8, [X31 + 0x2CC]
	0x03A7C6EC LDR V11, [X31 + 0x2D0]
	0x03A7C6F0 LDR W8, [X0 + 0xE0]
	0x03A7C6F4 CBNZ W8, 0x3A7C6FC
	0x03A7C6F8 BL 0x1C16DFC
	0x03A7C6FC LDP S12, S1, [X31 + 0x88]
	0x03A7C700 LDR V0, [X31 + 0x9C]
	0x03A7C704 ADD X0, X31, 0x1F8
	0x03A7C708 ADD X1, X31, 0x1E8
	0x03A7C70C MOV V2.16B, V12.16B
	0x03A7C710 MOV V3.16B, V10.16B
	0x03A7C714 MOV V4.16B, V8.16B
	0x03A7C718 MOV V5.16B, V11.16B
	0x03A7C71C MOV V6.16B, V13.16B
	0x03A7C720 MOV V7.16B, V9.16B
	0x03A7C724 BL 0x3A7E79C
	0x03A7C728 TBZ X0, 0x0, 0x3A7C770
	0x03A7C72C LDR X0, [X22]
	0x03A7C730 LDR V10, [X31 + 0x1F8]
	0x03A7C734 LDR V8, [X31 + 0x1FC]
	0x03A7C738 LDR V9, [X31 + 0x200]
	0x03A7C73C LDR W8, [X0 + 0xE0]
	0x03A7C740 CBNZ W8, 0x3A7C748
	0x03A7C744 BL 0x1C16DFC
	0x03A7C748 MOV X0, X19
	0x03A7C74C MOV V0.16B, V10.16B
	0x03A7C750 MOV V1.16B, V8.16B
	0x03A7C754 MOV V2.16B, V9.16B
	0x03A7C758 BL 0x3A7E104
	0x03A7C75C LDR V0, [X31 + 0x1E8]
	0x03A7C760 LDR V1, [X31 + 0x1EC]
	0x03A7C764 LDR V2, [X31 + 0x1F0]
	0x03A7C768 MOV X0, X19
	0x03A7C76C BL 0x3A7E104
	0x03A7C770 LDR X0, [X22]
	0x03A7C774 LDR V8, [X31 + 0x2D0]
	0x03A7C778 LDR W8, [X0 + 0xE0]
	0x03A7C77C CBNZ W8, 0x3A7C784
	0x03A7C780 BL 0x1C16DFC
	0x03A7C784 MOV V0.16B, V8.16B
	0x03A7C788 BL 0x3A7E228
	0x03A7C78C LDRB W8, [X20 + 0x585]
	0x03A7C790 MOV V8.16B, V0.16B
	0x03A7C794 FMOV S9, 1
	0x03A7C798 CBNZ W8, 0x3A7C7B0
	0x03A7C79C ADRP X0, 0x677000
	0x03A7C7A0 LDR X0, [X0 + 0x5A8]
	0x03A7C7A4 BL 0x1C16CF4
	0x03A7C7A8 MOVZ W8, 0x1
	0x03A7C7AC STRB W8, [X20 + 0x585]
	0x03A7C7B0 LDR X0, [X21]
	0x03A7C7B4 FSUB S8, S9, S8
	0x03A7C7B8 LDR W8, [X0 + 0xE0]
	0x03A7C7BC CBNZ W8, 0x3A7C7C4
	0x03A7C7C0 BL 0x1C16DFC
	0x03A7C7C4 LDR V1, [X31 + 0x2C4]
	0x03A7C7C8 FSQRT S2, S8
	0x03A7C7CC LDR V0, [X19 + 0x100]
	0x03A7C7D0 FMUL S2, S13, S2
	0x03A7C7D4 FMOV W8, S1
	0x03A7C7D8 AND W8, W8, 0x7FFFFFFF
	0x03A7C7DC MOVZ W9, 0x7F800000
	0x03A7C7E0 FSUB S3, S12, S2
	0x03A7C7E4 CMP W8, W9
	0x03A7C7E8 FCCMP S3, S1, 0x8, LS
	0x03A7C7EC FCSEL S3, S3, S1, MI
	0x03A7C7F0 FCMP S0, S3
	0x03A7C7F4 B.GE 0x3A7C800
	0x03A7C7F8 STR W31, [X31 + 0x7C]
	0x03A7C7FC B 0x3A7C81C
	0x03A7C800 CMP W8, W9
	0x03A7C804 FADD S2, S12, S2
	0x03A7C808 FCCMP S2, S1, 0x0, LS
	0x03A7C80C FCSEL S2, S2, S1, GT
	0x03A7C810 FCMP S0, S2
	0x03A7C814 CSET W8, LS
	0x03A7C818 STR W8, [X31 + 0x7C]
	0x03A7C81C LDR V2, [X31 + 0x2BC]
	0x03A7C820 LDR V3, [X31 + 0x2C0]
	0x03A7C824 LDR V0, [X31 + 0x2C8]
	0x03A7C828 LDR V12, [X31 + 0x2CC]
	0x03A7C82C LDR V14, [X31 + 0x2D0]
	0x03A7C830 FMUL S4, S0, S3
	0x03A7C834 FMUL S5, S1, S12
	0x03A7C838 FMUL S6, S14, S2
	0x03A7C83C FMUL S3, S14, S3
	0x03A7C840 FMUL S1, S1, S0
	0x03A7C844 FMUL S2, S12, S2
	0x03A7C848 FSUB S9, S5, S3
	0x03A7C84C FSUB S10, S6, S1
	0x03A7C850 FSUB S8, S4, S2
	0x03A7C854 FADD S1, S10, S9
	0x03A7C858 FADD S1, S8, S1
	0x03A7C85C FCMP S1, 0x0
	0x03A7C860 B.NE 0x3A7C874
	0x03A7C864 FMOV S15, W31
	0x03A7C868 FMOV S9, 1
	0x03A7C86C FMOV S8, W31
	0x03A7C870 B 0x3A7C8D8
	0x03A7C874 LDRB W8, [X20 + 0x585]
	0x03A7C878 CBNZ W8, 0x3A7C890
	0x03A7C87C ADRP X0, 0x677000
	0x03A7C880 LDR X0, [X0 + 0x5A8]
	0x03A7C884 BL 0x1C16CF4
	0x03A7C888 MOVZ W8, 0x1
	0x03A7C88C STRB W8, [X20 + 0x585]
	0x03A7C890 LDR X0, [X21]
	0x03A7C894 LDR W8, [X0 + 0xE0]
	0x03A7C898 CBNZ W8, 0x3A7C8A0
	0x03A7C89C BL 0x1C16DFC
	0x03A7C8A0 FMUL S2, S9, S9
	0x03A7C8A4 FMUL S3, S10, S10
	0x03A7C8A8 FMUL S1, S8, S8
	0x03A7C8AC FADD S2, S3, S2
	0x03A7C8B0 LDR V0, [X31 + 0x2C8]
	0x03A7C8B4 LDR V12, [X31 + 0x2CC]
	0x03A7C8B8 LDR V14, [X31 + 0x2D0]
	0x03A7C8BC FADD S1, S1, S2
	0x03A7C8C0 FMOV S4, 1
	0x03A7C8C4 FSQRT S1, S1
	0x03A7C8C8 FDIV S1, S4, S1
	0x03A7C8CC FMUL S9, S9, S1
	0x03A7C8D0 FMUL S15, S10, S1
	0x03A7C8D4 FMUL S8, S8, S1
	0x03A7C8D8 LDR W8, [X31 + 0x7C]
	0x03A7C8DC FMUL S1, S0, S15
	0x03A7C8E0 FMUL S2, S8, S12
	0x03A7C8E4 FMUL S3, S9, S14
	0x03A7C8E8 FMUL S4, S9, S12
	0x03A7C8EC FMUL S5, S15, S14
	0x03A7C8F0 FMUL S0, S0, S8
	0x03A7C8F4 FSUB S6, S1, S4
	0x03A7C8F8 FSUB S1, S2, S5
	0x03A7C8FC FSUB S0, S3, S0
	0x03A7C900 STP S1, S6, [X31 + 0x60]
	0x03A7C904 STR S0, [X31 + 0x5C]
	0x03A7C908 STR S8, [X31 + 0x68]
	0x03A7C90C STR S9, [X31 + 0x54]
	0x03A7C910 CBZ W8, 0x3A7CBFC
	0x03A7C914 LDR X0, [X22]
	0x03A7C918 LDR V0, [X31 + 0x2D8]
	0x03A7C91C LDR W8, [X0 + 0xE0]
	0x03A7C920 FDIV S11, S13, S0
	0x03A7C924 CBNZ W8, 0x3A7C92C
	0x03A7C928 BL 0x1C16DFC
	0x03A7C92C LDR V13, [X31 + 0x64]
	0x03A7C930 LDR V10, [X31 + 0x5C]
	0x03A7C934 MOV V2.16B, V12.16B
	0x03A7C938 MOV V3.16B, V14.16B
	0x03A7C93C MOV V4.16B, V11.16B
	0x03A7C940 MOV V5.16B, V15.16B
	0x03A7C944 MOV V6.16B, V8.16B
	0x03A7C948 STP S10, S13, [X31]
	0x03A7C94C BL 0x3A7E99C
	0x03A7C950 LDR V7, [X31 + 0x2BC]
	0x03A7C954 LDR V16, [X19 + 0x100]
	0x03A7C958 STR S0, [X31 + 0x20]
	0x03A7C95C STR S11, [X31 + 0xC0]
	0x03A7C960 LDR V0, [X31 + 0x68]
	0x03A7C964 LDR V2, [X31 + 0x2C0]
	0x03A7C968 LDR V3, [X31 + 0x2C4]
	0x03A7C96C LDR V4, [X31 + 0x2C8]
	0x03A7C970 LDR V5, [X31 + 0x2CC]
	0x03A7C974 LDR V6, [X31 + 0x2D0]
	0x03A7C978 MOV V8.16B, V1.16B
	0x03A7C97C LDR V11, [X31 + 0x60]
	0x03A7C980 MOV V1.16B, V7.16B
	0x03A7C984 LDR V7, [X31 + 0xC0]
	0x03A7C988 STP S15, S0, [X31 + 0x4]
	0x03A7C98C MOV V0.16B, V16.16B
	0x03A7C990 STP S10, S13, [X31 + 0x14]
	0x03A7C994 STR S11, [X31 + 0x10]
	0x03A7C998 STR S9, [X31]
	0x03A7C99C BL 0x3A7EC28
	0x03A7C9A0 LDR V7, [X31 + 0x2C0]
	0x03A7C9A4 MOV V16.16B, V9.16B
	0x03A7C9A8 MOV V9.16B, V2.16B
	0x03A7C9AC LDR V2, [X31 + 0x68]
	0x03A7C9B0 MOV V12.16B, V0.16B
	0x03A7C9B4 MOV V14.16B, V1.16B
	0x03A7C9B8 LDR V0, [X19 + 0x100]
	0x03A7C9BC LDR V1, [X31 + 0x2BC]
	0x03A7C9C0 LDR V3, [X31 + 0x2C4]
	0x03A7C9C4 LDR V4, [X31 + 0x2C8]
	0x03A7C9C8 LDR V5, [X31 + 0x2CC]
	0x03A7C9CC LDR V6, [X31 + 0x2D0]
	0x03A7C9D0 STP S15, S2, [X31 + 0x4]
	0x03A7C9D4 MOV V2.16B, V7.16B
	0x03A7C9D8 LDR V7, [X31 + 0xC0]
	0x03A7C9DC STR S8, [X31 + 0x20]
	0x03A7C9E0 STP S10, S13, [X31 + 0x14]
	0x03A7C9E4 STR S11, [X31 + 0x10]
	0x03A7C9E8 STR S16, [X31]
	0x03A7C9EC BL 0x3A7EC28
	0x03A7C9F0 MOV V8.16B, V0.16B
	0x03A7C9F4 MOV V10.16B, V1.16B
	0x03A7C9F8 MOV V11.16B, V2.16B
	0x03A7C9FC ADD X0, X31, 0x248
	0x03A7CA00 MOV V0.16B, V12.16B
	0x03A7CA04 MOV V1.16B, V14.16B
	0x03A7CA08 MOV V2.16B, V9.16B
	0x03A7CA0C BL 0x3A7EDF4
	0x03A7CA10 TBZ X0, 0x0, 0x3A7CA38
	0x03A7CA14 LDR X0, [X22]
	0x03A7CA18 LDR W8, [X0 + 0xE0]
	0x03A7CA1C CBNZ W8, 0x3A7CA24
	0x03A7CA20 BL 0x1C16DFC
	0x03A7CA24 MOV X0, X19
	0x03A7CA28 MOV V0.16B, V12.16B
	0x03A7CA2C MOV V1.16B, V14.16B
	0x03A7CA30 MOV V2.16B, V9.16B
	0x03A7CA34 BL 0x3A7E104
	0x03A7CA38 LDR X0, [X22]
	0x03A7CA3C LDR W8, [X0 + 0xE0]
	0x03A7CA40 CBNZ W8, 0x3A7CA48
	0x03A7CA44 BL 0x1C16DFC
	0x03A7CA48 ADD X0, X31, 0x248
	0x03A7CA4C MOV V0.16B, V8.16B
	0x03A7CA50 MOV V1.16B, V10.16B
	0x03A7CA54 MOV V2.16B, V11.16B
	0x03A7CA58 BL 0x3A7EDF4
	0x03A7CA5C TBZ X0, 0x0, 0x3A7CA84
	0x03A7CA60 LDR X0, [X22]
	0x03A7CA64 LDR W8, [X0 + 0xE0]
	0x03A7CA68 CBNZ W8, 0x3A7CA70
	0x03A7CA6C BL 0x1C16DFC
	0x03A7CA70 MOV X0, X19
	0x03A7CA74 MOV V0.16B, V8.16B
	0x03A7CA78 MOV V1.16B, V10.16B
	0x03A7CA7C MOV V2.16B, V11.16B
	0x03A7CA80 BL 0x3A7E104
	0x03A7CA84 LDR X0, [X22]
	0x03A7CA88 LDR V9, [X31 + 0x2C8]
	0x03A7CA8C LDR V8, [X31 + 0x2D0]
	0x03A7CA90 MOV V12.16B, V15.16B
	0x03A7CA94 LDR W8, [X0 + 0xE0]
	0x03A7CA98 CBNZ W8, 0x3A7CAA0
	0x03A7CA9C BL 0x1C16DFC
	0x03A7CAA0 MOV V2.16B, V9.16B
	0x03A7CAA4 LDR V9, [X31 + 0xC0]
	0x03A7CAA8 LDR V14, [X31 + 0x54]
	0x03A7CAAC LDR V13, [X31 + 0x68]
	0x03A7CAB0 LDP S10, S11, [X31 + 0x60]
	0x03A7CAB4 MOV V3.16B, V8.16B
	0x03A7CAB8 MOV V4.16B, V9.16B
	0x03A7CABC MOV V5.16B, V14.16B
	0x03A7CAC0 MOV V6.16B, V13.16B
	0x03A7CAC4 STP S10, S11, [X31]
	0x03A7CAC8 BL 0x3A7E99C
	0x03A7CACC LDR V16, [X19 + 0x100]
	0x03A7CAD0 LDR V7, [X31 + 0x2BC]
	0x03A7CAD4 LDR V2, [X31 + 0x2C0]
	0x03A7CAD8 LDR V3, [X31 + 0x2C4]
	0x03A7CADC LDR V4, [X31 + 0x2C8]
	0x03A7CAE0 LDR V5, [X31 + 0x2CC]
	0x03A7CAE4 LDR V6, [X31 + 0x2D0]
	0x03A7CAE8 LDR V15, [X31 + 0x5C]
	0x03A7CAEC MOV V8.16B, V1.16B
	0x03A7CAF0 STR S0, [X31 + 0x20]
	0x03A7CAF4 MOV V0.16B, V16.16B
	0x03A7CAF8 MOV V1.16B, V7.16B
	0x03A7CAFC MOV V7.16B, V9.16B
	0x03A7CB00 STP S15, S11, [X31 + 0x14]
	0x03A7CB04 STR S10, [X31 + 0x10]
	0x03A7CB08 STP S12, S13, [X31 + 0x4]
	0x03A7CB0C STR S14, [X31]
	0x03A7CB10 BL 0x3A7EC28
	0x03A7CB14 LDR V7, [X31 + 0x2C0]
	0x03A7CB18 MOV V16.16B, V0.16B
	0x03A7CB1C MOV V17.16B, V1.16B
	0x03A7CB20 LDR V0, [X19 + 0x100]
	0x03A7CB24 LDR V1, [X31 + 0x2BC]
	0x03A7CB28 LDR V3, [X31 + 0x2C4]
	0x03A7CB2C LDR V4, [X31 + 0x2C8]
	0x03A7CB30 LDR V5, [X31 + 0x2CC]
	0x03A7CB34 LDR V6, [X31 + 0x2D0]
	0x03A7CB38 STP S15, S11, [X31 + 0x14]
	0x03A7CB3C MOV V15.16B, V12.16B
	0x03A7CB40 STP S15, S13, [X31 + 0x4]
	0x03A7CB44 MOV V13.16B, V2.16B
	0x03A7CB48 MOV V2.16B, V7.16B
	0x03A7CB4C MOV V7.16B, V9.16B
	0x03A7CB50 STR S8, [X31 + 0x20]
	0x03A7CB54 MOV V12.16B, V17.16B
	0x03A7CB58 STR S10, [X31 + 0x10]
	0x03A7CB5C STR S14, [X31]
	0x03A7CB60 MOV V9.16B, V16.16B
	0x03A7CB64 BL 0x3A7EC28
	0x03A7CB68 MOV V11.16B, V0.16B
	0x03A7CB6C MOV V8.16B, V1.16B
	0x03A7CB70 MOV V10.16B, V2.16B
	0x03A7CB74 ADD X0, X31, 0x248
	0x03A7CB78 MOV V0.16B, V9.16B
	0x03A7CB7C MOV V1.16B, V12.16B
	0x03A7CB80 MOV V2.16B, V13.16B
	0x03A7CB84 BL 0x3A7EDF4
	0x03A7CB88 TBZ X0, 0x0, 0x3A7CBB0
	0x03A7CB8C LDR X0, [X22]
	0x03A7CB90 LDR W8, [X0 + 0xE0]
	0x03A7CB94 CBNZ W8, 0x3A7CB9C
	0x03A7CB98 BL 0x1C16DFC
	0x03A7CB9C MOV X0, X19
	0x03A7CBA0 MOV V0.16B, V9.16B
	0x03A7CBA4 MOV V1.16B, V12.16B
	0x03A7CBA8 MOV V2.16B, V13.16B
	0x03A7CBAC BL 0x3A7E104
	0x03A7CBB0 LDR X0, [X22]
	0x03A7CBB4 LDR W8, [X0 + 0xE0]
	0x03A7CBB8 CBNZ W8, 0x3A7CBC0
	0x03A7CBBC BL 0x1C16DFC
	0x03A7CBC0 ADD X0, X31, 0x248
	0x03A7CBC4 MOV V0.16B, V11.16B
	0x03A7CBC8 MOV V1.16B, V8.16B
	0x03A7CBCC MOV V2.16B, V10.16B
	0x03A7CBD0 BL 0x3A7EDF4
	0x03A7CBD4 TBZ X0, 0x0, 0x3A7CBFC
	0x03A7CBD8 LDR X0, [X22]
	0x03A7CBDC LDR W8, [X0 + 0xE0]
	0x03A7CBE0 CBNZ W8, 0x3A7CBE8
	0x03A7CBE4 BL 0x1C16DFC
	0x03A7CBE8 MOV X0, X19
	0x03A7CBEC MOV V0.16B, V11.16B
	0x03A7CBF0 MOV V1.16B, V8.16B
	0x03A7CBF4 MOV V2.16B, V10.16B
	0x03A7CBF8 BL 0x3A7E104
	0x03A7CBFC LDR X0, [X22]
	0x03A7CC00 STR S15, [X31 + 0x50]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 464
	022 Move X23, 0x968000
	023 Move X22, 0x6DC000
	024 Move X28, 0x6A4000
	025 Move W8, [X23+781]
	026 Move X22, [X22+4072]
	027 Move X28, [X28+3512]
	028 Move W20, W1
	029 Move X19, X0
	030 Add X21, X31, 320
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {46}
	035 Move X0, 0x6DC000
	036 Move X0, [X0+4072]
	037 Call 0x1C17CF4
	038 Move X0, 0x6DD000
	039 Move X0, [X0+16]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A4000
	042 Move X0, [X0+3512]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+781], W8
	046 Add X0, X31, 320
	047 Move W2, 144
	048 Move W1, W31
	049 Call 0x3EB2B10
	050 Move [X31+316], W31
	051 Move X8, [X19]
	052 Move W9, 116
	053 Add X0, X31, 320
	054 Move W2, 116
	055 NotImplemented "Instruction SMADDL not yet implemented."
	056 Call 0x3EB2B30
	057 Add X8, X31, 248
	058 Add X0, X31, 320
	059 Move X1, X31
	060 Call VisibleLight.get_localToWorldMatrix, X0
	061 Add X8, X31, 9
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Add X8, X31, 25
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Add X8, X31, 41
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 Add X8, X31, 248
	069 Add X0, X31, 176
	070 Move X1, X31
	071 Move [X31+176], V0
	072 Move [X31+184], V1
	073 Move [X31+208], V2
	074 Move [X31+216], V3
	075 Call float4x4.op_Implicit, X0
	076 Move V4, [X31+280]
	077 Move V0, [X31+284]
	078 Move W1, [X19+272]
	079 Move X2, [X22]
	080 Add X20, X19, 56
	081 Move [X31+128], V4
	082 Move [X31+136], V0
	083 Move V0, [X31+288]
	084 Move V4, [X31+296]
	085 Add X8, X31, 248
	086 Move X0, X20
	087 Move [X31+10], V0
	088 Move V0, [X31+300]
	089 Move [X31+96], V0
	090 Move [X31+104], V4
	091 Move V0, [X31+304]
	092 Move [X31+5], V0
	093 Call Fixed2`1<float4x4>.get_Item, X0, X1
	094 Move V0, [X31+248]
	095 Move V1, [X31+256]
	096 Move V16, [X31+7]
	097 Move V2, [X31+264]
	098 Move V3, [X31+272]
	099 Move V5, [X31+288]
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Multiply S1, S16, S1
	102 Move V16, [X31+6]
	103 Move V4, [X31+280]
	104 Move V7, [X31+304]
	105 Move V6, [X31+296]
	106 NotImplemented "Instruction INVALID not yet implemented."
	107 Multiply S3, S16, S3
	108 Move V16, [X31+5]
	109 Add S1, S1, S3
	110 Move X0, [X28]
	111 Add V0, V0, V2
	112 Multiply S5, S16, S5
	113 NotImplemented "Instruction INVALID not yet implemented."
	114 Add S1, S1, S5
	115 Add V0, V0, V4
	116 Add S1, S1, S7
	117 Add V0, V0, V6
	118 NotImplemented "Instruction FNEG not yet implemented."
	119 Move [X21+116], D0
	120 Move [X31+444], S8
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {127}
	124 Move [X31+7], V0
	125 Call 0x1C17DFC
	126 Move V0, [X31+7]
	127 Move S1, V0.S[1]
	128 Move X0, X19
	129 Move V2, V8
	130 Call TilingJob.ExpandOrthographic, X0, X1
	131 Move W1, [X19+272]
	132 Move X2, [X22]
	133 Add X8, X31, 248
	134 Move X0, X20
	135 Call Fixed2`1<float4x4>.get_Item, X0, X1
	136 Move V1, [X31+256]
	137 Move V3, [X31+272]
	138 Move V16, [X31+128]
	139 Move V17, [X31+144]
	140 Move V0, [X31+248]
	141 Move V2, [X31+264]
	142 Move V5, [X31+288]
	143 Move V18, [X31+10]
	144 Move V4, [X31+280]
	145 Move V7, [X31+304]
	146 Move V6, [X31+296]
	147 Multiply S1, S16, S1
	148 Multiply S3, S17, S3
	149 Move X20, 0x966000
	150 NotImplemented "Instruction INVALID not yet implemented."
	151 NotImplemented "Instruction INVALID not yet implemented."
	152 Move S17, W31
	153 Move W8, [X20+1413]
	154 Multiply S5, S18, S5
	155 Add S1, S1, S3
	156 NotImplemented "Instruction MOVI not yet implemented."
	157 NotImplemented "Instruction INVALID not yet implemented."
	158 Multiply S7, S7, S17
	159 Add V0, V0, V2
	160 Add S1, S1, S5
	161 NotImplemented "Instruction INVALID not yet implemented."
	162 Add V0, V0, V4
	163 Add S10, S1, S7
	164 Add V8, V0, V6
	165 NotImplemented "Instruction FNEG not yet implemented."
	166 Move [X31+448], D8
	167 Move [X31+456], S9
	168 Compare W8, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x678000
	171 Move X0, [X0+1448]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X20+1413], W8
	175 Move X8, 0x678000
	176 Move X8, [X8+1448]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 Invalid "Jump target not found in method."
	181 Call 0x1C17DFC
	182 NotImplemented "Instruction INVALID not yet implemented."
	183 Multiply S0, S10, S10
	184 NotImplemented "Instruction FADDP not yet implemented."
	185 Add S0, S0, S1
	186 Move S2, 1
	187 NotImplemented "Instruction FSQRT not yet implemented."
	188 NotImplemented "Instruction FDIV not yet implemented."
	189 NotImplemented "Instruction INVALID not yet implemented."
	190 Multiply S0, S0, S9
	191 Add X0, X31, 320
	192 Move X1, X31
	193 Move [X31+448], D1
	194 Move [X31+456], S0
	195 Call VisibleLight.get_spotAngle, X0
	196 Move X8, -49876992
	197 Move V9, [X8+260]
	198 Move S1, 0.5
	199 Add X0, X31, 320
	200 Move X1, X31
	201 Multiply S10, S0, S1
	202 Call VisibleLight.get_range, X0
	203 Move V12, V0
	204 Call TilingJob.square, V0
	205 Move X22, 0x966000
	206 Move W8, [X22+1380]
	207 Move V8, V0
	208 Compare W8, 0
	209 JumpIfNotEqual {215}
	210 Move X0, 0x678000
	211 Move X0, [X0+1448]
	212 Call 0x1C17CF4
	213 Move W8, 1
	214 Move [X22+1380], W8
	215 Move X22, 0x678000
	216 Move X22, [X22+1448]
	217 Multiply S9, S10, S9
	218 Move X0, [X22]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 NotImplemented "Instruction FCVT not yet implemented."
	224 Call 0x3EB2BF0
	225 NotImplemented "Instruction INVALID not yet implemented."
	226 Move [X31+460], S0
	227 Multiply S0, S12, S0
	228 Move [X31+10], V0
	229 Call TilingJob.square, V0
	230 Move V1, [X31+10]
	231 Move [X31+144], S0
	232 Move S0, 1
	233 NotImplemented "Instruction FDIV not yet implemented."
	234 Move [X31+20], S0
	235 Call TilingJob.square, V0
	236 Move V13, [X31+440]
	237 Move V14, [X31+436]
	238 Move V11, [X31+444]
	239 Move [X31+16], S0
	240 Subtract S9, S13, S12
	241 Add X0, X31, 320
	242 Move V0, V14
	243 Move V1, V9
	244 Move V2, V11
	245 Move S10, W31
	246 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {261}
	251 Move X0, [X28]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Move X0, X19
	257 Move V0, V14
	258 Move V1, V9
	259 Move V2, V11
	260 Call TilingJob.ExpandOrthographic, X0, X1
	261 Move X0, [X28]
	262 Move S0, W31
	263 Add S9, S14, S10
	264 Add S10, S12, S13
	265 Move W8, [X0+224]
	266 Add S15, S11, S0
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Add X0, X31, 320
	271 Move V0, V9
	272 Move V1, V10
	273 Move V2, V15
	274 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {289}
	279 Move X0, [X28]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X19
	285 Move V0, V9
	286 Move V1, V10
	287 Move V2, V15
	288 Call TilingJob.ExpandOrthographic, X0, X1
	289 Move X0, [X28]
	290 Subtract S9, S14, S12
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Add X0, X31, 320
	296 Move V0, V9
	297 Move V1, V13
	298 Move V2, V11
	299 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {314}
	304 Move X0, [X28]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X0, X19
	310 Move V0, V9
	311 Move V1, V13
	312 Move V2, V11
	313 Call TilingJob.ExpandOrthographic, X0, X1
	314 Move X0, [X28]
	315 Move S0, W31
	316 Add S10, S12, S14
	317 Add S11, S13, S0
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Add X0, X31, 320
	323 Move V0, V10
	324 Move V1, V11
	325 Move V2, V15
	326 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {341}
	331 Move X0, [X28]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move X0, X19
	337 Move V0, V10
	338 Move V1, V11
	339 Move V2, V15
	340 Call TilingJob.ExpandOrthographic, X0, X1
	341 Move V0, [X31+436]
	342 Move V10, [X31+440]
	343 Move V11, [X31+448]
	344 Move W8, [X20+1413]
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 Move [X31+128], S0
	347 Compare W8, 0
	348 JumpIfNotEqual {354}
	349 Move X0, 0x678000
	350 Move X0, [X0+1448]
	351 Call 0x1C17CF4
	352 Move W8, 1
	353 Move [X20+1413], W8
	354 Move X0, [X22]
	355 Move V0, [X31+144]
	356 Move W8, [X0+224]
	357 Subtract S9, S8, S0
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X0, [X28]
	362 NotImplemented "Instruction FSQRT not yet implemented."
	363 Move [X31+3], V0
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {369}
	367 Call 0x1C17DFC
	368 Move V0, [X31+3]
	369 Call TilingJob.square, V0
	370 Move [X31+96], S0
	371 Move V0, [X31+448]
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 Move X8, -49864704
	374 Move W9, [X20+1413]
	375 Move V9, [X8+1608]
	376 Multiply S13, S0, V1.S[0]
	377 NotImplemented "Instruction INVALID not yet implemented."
	378 Move S15, W31
	379 Compare W9, 0
	380 JumpIfNotEqual {386}
	381 Move X0, 0x678000
	382 Move X0, [X0+1448]
	383 Call 0x1C17CF4
	384 Move W8, 1
	385 Move [X20+1413], W8
	386 Move X0, [X22]
	387 Subtract S13, S15, S13
	388 Subtract V14, V9, V14
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfEqual {393}
	392 Move W8, W31
	393 Call 0x1C17DFC
	394 Move W8, [X20+1413]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 NotImplemented "Instruction CSET not yet implemented."
	397 Move V0, [X31+10]
	398 Move V2, [X31+448]
	399 Multiply S1, S13, S13
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction INVALID not yet implemented."
	402 NotImplemented "Instruction INVALID not yet implemented."
	403 Move [X31+2], V2
	404 Move S2, V0.S[1]
	405 Add S0, S1, S0
	406 Add S0, S2, S0
	407 NotImplemented "Instruction FSQRT not yet implemented."
	408 Move S12, 1
	409 NotImplemented "Instruction FDIV not yet implemented."
	410 Compare W8, 0
	411 JumpIfEqual {419}
	412 Move X0, 0x678000
	413 Move X0, [X0+1448]
	414 Move [X31+9], V3
	415 Call 0x1C17CF4
	416 Move V3, [X31+9]
	417 Move W8, 1
	418 Move [X20+1413], W8
	419 Move X0, [X22]
	420 Move V0, [X31+10]
	421 Add V1, V10, V9
	422 Move [X31+7], V1
	423 Move W8, [X0+224]
	424 Multiply S11, S0, S11
	425 NotImplemented "Instruction INVALID not yet implemented."
	426 Move [X31+5], V0
	427 Compare W8, 0
	428 JumpIfNotEqual {434}
	429 Move [X31+9], V3
	430 Call 0x1C17DFC
	431 Move V3, [X31+9]
	432 Move V0, [X31+5]
	433 Move V1, [X31+7]
	434 Move V2, [X31+128]
	435 Add X0, X31, 320
	436 Move X1, X31
	437 Add S4, S2, S11
	438 Multiply S2, S13, S3
	439 Move [X31+72], S2
	440 Move [X31+80], S4
	441 Move V2, [X31+3]
	442 NotImplemented "Instruction INVALID not yet implemented."
	443 Subtract V2, V1, V0
	444 Add V0, V1, V0
	445 Move [X31+128], V0
	446 Move [X31+136], V2
	447 Call VisibleLight.get_lightType, X0
	448 Compare W0, 0
	449 JumpIfNotEqual {507}
	450 Move V1, [X31+32]
	451 Move V6, [X31+48]
	452 NotImplemented "Instruction MOVI not yet implemented."
	453 Move X0, [X28]
	454 Move S3, 1
	455 Multiply S0, S1, S1
	456 NotImplemented "Instruction INVALID not yet implemented."
	457 Subtract S0, S12, S0
	458 Subtract V1, V2, V1
	459 NotImplemented "Instruction INVALID not yet implemented."
	460 Multiply S5, S0, S0
	461 Add S5, S5, S2
	462 Move S2, V2.S[1]
	463 Add S2, S2, S5
	464 NotImplemented "Instruction FSQRT not yet implemented."
	465 Move V4, [X31+72]
	466 NotImplemented "Instruction FDIV not yet implemented."
	467 Move V3, [X31+76]
	468 NotImplemented "Instruction INVALID not yet implemented."
	469 Multiply S0, S0, S2
	470 Move V2, [X31+7]
	471 Move W8, [X0+224]
	472 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	473 Multiply S4, S6, S4
	474 Multiply S0, S6, S0
	475 NotImplemented "Instruction INVALID not yet implemented."
	476 Subtract S13, S3, S4
	477 Add S12, S3, S4
	478 Subtract S10, S3, S0
	479 Subtract V4, V2, V1
	480 Add S11, S3, S0
	481 Add V0, V2, V1
	482 Move [X31+32], V4
	483 Move [X31+40], V0
	484 Compare W8, 0
	485 JumpIfNotEqual {487}
	486 Call 0x1C17DFC
	487 Move V1, [X31+9]
	488 Move X0, X19
	489 Move V0, V13
	490 Move S2, V1.S[1]
	491 Call TilingJob.ExpandOrthographic, X0, X1
	492 Move V1, [X31+8]
	493 Move X0, X19
	494 Move V0, V12
	495 Move S2, V1.S[1]
	496 Call TilingJob.ExpandOrthographic, X0, X1
	497 Move V1, [X31+2]
	498 Move X0, X19
	499 Move V0, V10
	500 Move S2, V1.S[1]
	501 Call TilingJob.ExpandOrthographic, X0, X1
	502 Move V1, [X31+3]
	503 Move X0, X19
	504 Move V0, V11
	505 Move S2, V1.S[1]
	506 Call TilingJob.ExpandOrthographic, X0, X1
	507 NotImplemented "Instruction LDRH not yet implemented."
	508 Add X0, X19, 262
	509 Move W1, W31
	510 Move X3, X31
	511 Subtract W2, W8, 1
	512 Move [X31+24], X0
	513 Call InclusiveRange.Clamp, X0, X1, X2
	514 Add X0, X31, 320
	515 Move X1, X31
	516 Call VisibleLight.get_lightType, X0
	517 Move S0, W31
	518 Move S13, W31
	519 Move [X31+48], S0
	520 Move S14, W31
	521 Move S0, W31
	522 Move [X31+32], S0
	523 Compare W0, 0
	524 JumpIfNotEqual {615}
	525 Move X0, [X28]
	526 Move V10, [X31+96]
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Move V0, V10
	532 Call TilingJob.square, V0
	533 Move V1, [X31+16]
	534 Move W8, [X20+1413]
	535 Multiply S9, S1, S0
	536 Compare W8, 0
	537 JumpIfNotEqual {543}
	538 Move X0, 0x678000
	539 Move X0, [X0+1448]
	540 Call 0x1C17CF4
	541 Move W8, 1
	542 Move [X20+1413], W8
	543 Move X0, [X22]
	544 Add S9, S10, S9
	545 Move W8, [X0+224]
	546 Compare W8, 0
	547 JumpIfEqual {549}
	548 Move W21, W31
	549 Call 0x1C17DFC
	550 Move W8, [X20+1413]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 NotImplemented "Instruction CSET not yet implemented."
	553 Move V5, [X31+20]
	554 Move V1, [X31+448]
	555 Move V2, [X31+452]
	556 NotImplemented "Instruction FNEG not yet implemented."
	557 Multiply S11, S5, S10
	558 Multiply S4, S5, S4
	559 Multiply S5, S1, S1
	560 Multiply S6, S2, S2
	561 Move S3, 1
	562 Add S5, S5, S6
	563 NotImplemented "Instruction FDIV not yet implemented."
	564 NotImplemented "Instruction FSQRT not yet implemented."
	565 Multiply S3, S4, S12
	566 Multiply S9, S1, S3
	567 Multiply S10, S2, S3
	568 Call TilingJob.square, V0
	569 Multiply S1, S9, S9
	570 Multiply S2, S10, S10
	571 Add S1, S1, S2
	572 Subtract S13, S0, S1
	573 Compare W21, 0
	574 JumpIfEqual {580}
	575 Move X0, 0x678000
	576 Move X0, [X0+1448]
	577 Call 0x1C17CF4
	578 Move W8, 1
	579 Move [X20+1413], W8
	580 Move X0, [X22]
	581 Move V0, [X31+10]
	582 Multiply S12, S12, S13
	583 Move W8, [X0+224]
	584 Add S11, S0, S11
	585 Compare W8, 0
	586 JumpIfNotEqual {588}
	587 Call 0x1C17DFC
	588 Move V1, [X31+448]
	589 Move V0, [X31+452]
	590 Move V3, [X31+436]
	591 Move V4, [X31+440]
	592 NotImplemented "Instruction FNEG not yet implemented."
	593 Multiply S1, S11, S1
	594 NotImplemented "Instruction FSQRT not yet implemented."
	595 Multiply S6, S11, S0
	596 Add S1, S3, S1
	597 Multiply S0, S2, S0
	598 Add S6, S4, S6
	599 Add S1, S9, S1
	600 Multiply S2, S2, S5
	601 Add S6, S10, S6
	602 Subtract S7, S1, S0
	603 Add S0, S0, S1
	604 Subtract S16, S6, S2
	605 Add S1, S2, S6
	606 Subtract S2, S7, S3
	607 Subtract S0, S0, S3
	608 Move S5, 1
	609 Move [X31+32], S2
	610 Subtract S2, S16, S4
	611 Move [X31+48], S0
	612 Subtract S0, S1, S4
	613 NotImplemented "Instruction FDIV not yet implemented."
	614 NotImplemented "Instruction FDIV not yet implemented."
	615 NotImplemented "Instruction LDRSH not yet implemented."
	616 NotImplemented "Instruction LDRSH not yet implemented."
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Add X9, X19, 200
	619 Add X23, X19, 208
	620 Add W29, W8, 1
	621 Move [X31+160], X9
	622 Move X0, X31
	623 Call InclusiveRange.get_empty
	624 Move [X31+316], W0
	625 Move X21, 0x6DC000
	626 Move W1, [X19+272]
	627 Move X21, [X21+16]
	628 Move X0, [X31+160]
	629 Move X2, [X21]
	630 Call 0x2D20050, X0, X1
	631 Move W1, [X19+272]
	632 Move X2, [X21]
	633 Move X0, X23
	634 Move V10, V0
	635 Call 0x2D20050, X0, X1
	636 Move X0, [X28]
	637 Move V12, [X19+196]
	638 Move V9, [X31+440]
	639 Move V11, V0
	640 Move W8, [X0+224]
	641 Compare W8, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 NotImplemented "Instruction SCVTF not yet implemented."
	645 Multiply S0, S12, S0
	646 Subtract S1, S11, S10
	647 Multiply S0, S1, S0
	648 Add S10, S10, S0
	649 Subtract S0, S10, S9
	650 Call TilingJob.square, V0
	651 Move W8, [X20+1413]
	652 Move V12, V0
	653 Compare W8, 0
	654 JumpIfNotEqual {659}
	655 Move X0, X22
	656 Call 0x1C17CF4
	657 Move W8, 1
	658 Move [X20+1413], W8
	659 Move X0, [X22]
	660 Move W8, [X0+224]
	661 Compare W8, 0
	662 JumpIfNotEqual {664}
	663 Call 0x1C17DFC
	664 Move V9, [X31+436]
	665 Move V11, [X31+444]
	666 Subtract S0, S8, S12
	667 NotImplemented "Instruction FSQRT not yet implemented."
	668 Subtract S12, S9, S15
	669 Add X0, X31, 320
	670 Move V0, V12
	671 Move V1, V10
	672 Move V2, V11
	673 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	674 Move TEMP, X0
	675 And TEMP, TEMP, 1
	676 Compare TEMP, 1
	677 JumpIfNotEqual {687}
	678 Move X0, [X28]
	679 Move W8, [X0+224]
	680 Compare W8, 0
	681 JumpIfNotEqual {683}
	682 Call 0x1C17DFC
	683 Add X1, X31, 316
	684 Move X0, X19
	685 Move V0, V12
	686 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	687 Move X0, [X28]
	688 Move W8, [X0+224]
	689 Compare W8, 0
	690 JumpIfNotEqual {692}
	691 Call 0x1C17DFC
	692 Add S12, S15, S9
	693 Add X0, X31, 320
	694 Move V0, V12
	695 Move V1, V10
	696 Move V2, V11
	697 Call TilingJob.<TileLightOrthographic>g__SpherePointIsValid|20_0, X0, X1
	698 Move TEMP, X0
	699 And TEMP, TEMP, 1
	700 Compare TEMP, 1
	701 JumpIfNotEqual {711}
	702 Move X0, [X28]
	703 Move W8, [X0+224]
	704 Compare W8, 0
	705 JumpIfNotEqual {707}
	706 Call 0x1C17DFC
	707 Add X1, X31, 316
	708 Move X0, X19
	709 Move V0, V12
	710 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	711 Add X0, X31, 320
	712 Move X1, X31
	713 Call VisibleLight.get_lightType, X0
	714 Compare W0, 0
	715 JumpIfNotEqual {817}
	716 Move V0, [X31+9]
	717 NotImplemented "Instruction FCMP not yet implemented."
	718 Move V0, [X31+8]
	719 NotImplemented "Instruction FCMP not yet implemented."
	720 Move W8, [X20+1413]
	721 Move V9, [X31+456]
	722 Move V15, [X31+448]
	723 Compare W8, 0
	724 JumpIfNotEqual {729}
	725 Move X0, X22
	726 Call 0x1C17CF4
	727 Move W8, 1
	728 Move [X20+1413], W8
	729 Move X0, [X22]
	730 Move W8, [X0+224]
	731 Compare W8, 0
	732 JumpIfNotEqual {734}
	733 Call 0x1C17DFC
	734 Move X0, [X28]
	735 Move W8, [X0+224]
	736 Compare W8, 0
	737 JumpIfNotEqual {739}
	738 Call 0x1C17DFC
	739 Move V0, [X31+7]
	740 Move V1, [X31+5]
	741 Subtract S0, S10, S0
	742 NotImplemented "Instruction FDIV not yet implemented."
	743 Move V0, V11
	744 Call TilingJob.square, V0
	745 Move W8, [X20+1413]
	746 Move V12, V0
	747 Compare W8, 0
	748 JumpIfNotEqual {753}
	749 Move X0, X22
	750 Call 0x1C17CF4
	751 Move W8, 1
	752 Move [X20+1413], W8
	753 Move X0, [X22]
	754 Move W8, [X0+224]
	755 Compare W8, 0
	756 JumpIfNotEqual {758}
	757 Call 0x1C17DFC
	758 Move V3, [X31+96]
	759 Multiply S2, S9, S9
	760 Move V4, [X31+72]
	761 Move S5, W31
	762 Multiply S1, S15, S15
	763 Add S2, S2, S5
	764 Move V5, [X31+76]
	765 Add S1, S1, S2
	766 NotImplemented "Instruction FNEG not yet implemented."
	767 Subtract S3, S3, S12
	768 NotImplemented "Instruction FSQRT not yet implemented."
	769 Multiply S4, S4, S11
	770 NotImplemented "Instruction FSQRT not yet implemented."
	771 NotImplemented "Instruction FDIV not yet implemented."
	772 Add S4, S5, S4
	773 Multiply S1, S0, S3
	774 Subtract S0, S4, S1
	775 Add X1, X31, 316
	776 Move X0, X19
	777 Add S11, S4, S1
	778 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	779 Add X1, X31, 316
	780 Move X0, X19
	781 Move V0, V11
	782 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	783 Move V0, [X31+440]
	784 Subtract S9, S10, S0
	785 Multiply S10, S14, S9
	786 NotImplemented "Instruction FCMP not yet implemented."
	787 Move S0, 1
	788 NotImplemented "Instruction FCMP not yet implemented."
	789 Move X0, [X28]
	790 Move V11, [X31+436]
	791 Move W8, [X0+224]
	792 Compare W8, 0
	793 JumpIfNotEqual {795}
	794 Call 0x1C17DFC
	795 Move V0, [X31+32]
	796 Add X1, X31, 316
	797 Move X0, X19
	798 Multiply S0, S0, S10
	799 Add S0, S0, S11
	800 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	801 Multiply S9, S13, S9
	802 NotImplemented "Instruction FCMP not yet implemented."
	803 Move S0, 1
	804 NotImplemented "Instruction FCMP not yet implemented."
	805 Move X0, [X28]
	806 Move V10, [X31+436]
	807 Move W8, [X0+224]
	808 Compare W8, 0
	809 JumpIfNotEqual {811}
	810 Call 0x1C17DFC
	811 Move V0, [X31+48]
	812 Add X1, X31, 316
	813 Move X0, X19
	814 Multiply S0, S0, S9
	815 Add S0, S0, S10
	816 Call TilingJob.ExpandRangeOrthographic, X0, X1, V0
	817 Move W8, [X19+268]
	818 Move X9, [X19+32]
	819 Move X22, X20
	820 Move X21, X28
	821 Add W20, W29, W8
	822 Add W28, W20, 1
	823 Move W8, [X9]
	824 Move W9, [X31+316]
	825 And X10, X27, 0
	826 And X11, X25, 0
	827 Or X27, X10, X8
	828 Or X25, X11, X9
	829 Move X0, X27
	830 Move X1, X25
	831 Move X2, X31
	832 Call InclusiveRange.Merge, X0, X1
	833 Move X8, [X19+32]
	834 And X10, X26, 0
	835 And X11, X24, 0
	836 Move X2, X31
	837 Move [X8], W0
	838 Move X8, [X19+32]
	839 Move W9, [X31+316]
	840 Move X28, X21
	841 Move W8, [X8]
	842 Or X24, X11, X9
	843 Move X1, X24
	844 Or X26, X10, X8
	845 Move X0, X26
	846 Call InclusiveRange.Merge, X0, X1
	847 Move X8, [X19+32]
	848 Move [X8], W0
	849 Move X20, X22
	850 Move X22, 0x678000
	851 Move X22, [X22+1448]
	852 NotImplemented "Instruction LDRSH not yet implemented."
	853 NotImplemented "Instruction CMP not yet implemented."
	854 Add W29, W29, 1
	855 Move X9, [X31+24]
	856 NotImplemented "Instruction LDRSW not yet implemented."
	857 Move X10, [X19+32]
	858 Move W9, [X9]
	859 Move [X10], W9
	860 Add X31, X31, 464
	861 Move X20, [X31+144]
	862 Move X19, [X31+152]
	863 Move X22, [X31+128]
	864 Move X21, [X31+136]
	865 Move X24, [X31+112]
	866 Move X23, [X31+120]
	867 Move X26, [X31+96]
	868 Move X25, [X31+104]
	869 Move X28, [X31+80]
	870 Move X27, [X31+88]
	871 Move X29, [X31+64]
	872 Move X30, [X31+72]
	873 Move D9, [X31+48]
	874 Move D8, [X31+56]
	875 Move D11, [X31+32]
	876 Move D10, [X31+40]
	877 Move D13, [X31+16]
	878 Move D12, [X31+24]
	879 Move D15, [X31+160]
	880 Move D14, [X31+168]
	881 Return 

Method: System.Void TileReflectionProbe(System.Int32 index)

Disassembly:
	0x03A7E8C0 CBNZ W8, 0x3A7E8C8
	0x03A7E8C4 BL 0x1C16DFC
	0x03A7E8C8 LDRB W8, [X21 + 0x585]
	0x03A7E8CC FMUL S13, S13, S12
	0x03A7E8D0 FMUL S14, S14, S12
	0x03A7E8D4 FMUL S15, S15, S12
	0x03A7E8D8 CBNZ W8, 0x3A7E8F0
	0x03A7E8DC ADRP X0, 0x675000
	0x03A7E8E0 LDR X0, [X0 + 0x5A8]
	0x03A7E8E4 BL 0x1C16CF4
	0x03A7E8E8 MOVZ W8, 0x1
	0x03A7E8EC STRB W8, [X21 + 0x585]
	0x03A7E8F0 LDR V0, [X31 + 0x4]
	0x03A7E8F4 LDR X0, [X22]
	0x03A7E8F8 FADD S15, S9, S15
	0x03A7E8FC FADD S13, S0, S13
	0x03A7E900 LDR V0, [X31 + 0x8]
	0x03A7E904 LDR W8, [X0 + 0xE0]
	0x03A7E908 FADD S14, S0, S14
	0x03A7E90C CBNZ W8, 0x3A7E914
	0x03A7E910 BL 0x1C16DFC
	0x03A7E914 LDR V8, [X31 + 0xC]
	0x03A7E918 MOV V0.16B, V8.16B
	0x03A7E91C BL 0x3A7E228
	0x03A7E920 MOV V9.16B, V0.16B
	0x03A7E924 MOV V0.16B, V12.16B
	0x03A7E928 BL 0x3A7E228
	0x03A7E92C LDR V3, [X31]
	0x03A7E930 FSUB S0, S9, S0
	0x03A7E934 FABS S1, S12
	0x03A7E938 FSQRT S0, S0
	0x03A7E93C FCMP S1, S8
	0x03A7E940 FMUL S1, S10, S0
	0x03A7E944 FMUL S2, S11, S0
	0x03A7E948 FMUL S0, S3, S0
	0x03A7E94C FADD S3, S13, S1
	0x03A7E950 FADD S4, S14, S2
	0x03A7E954 FADD S5, S15, S0
	0x03A7E958 FSUB S1, S13, S1
	0x03A7E95C FSUB S2, S14, S2
	0x03A7E960 FSUB S0, S15, S0
	0x03A7E964 STP S3, S4, [X20]
	0x03A7E968 STR S5, [X20 + 0x8]
	0x03A7E96C STP S1, S2, [X19]
	0x03A7E970 STR S0, [X19 + 0x8]
	0x03A7E974 LDP X20, X19, [X31 + 0x70]
	0x03A7E978 LDP X22, X21, [X31 + 0x60]
	0x03A7E97C LDP X30, X23, [X31 + 0x50]
	0x03A7E980 LDP D9, D8, [X31 + 0x40]
	0x03A7E984 LDP D11, D10, [X31 + 0x30]
	0x03A7E988 LDP D13, D12, [X31 + 0x20]
	0x03A7E98C LDP D15, D14, [X31 + 0x10]
	0x03A7E990 CSET W0, LS
	0x03A7E994 ADD X31, X31, 0x80
	0x03A7E998 RET
	0x03A7E99C SUB X31, X31, 0x80
	0x03A7E9A0 STP D15, D14, [X31 + 0x20]
	0x03A7E9A4 STP D13, D12, [X31 + 0x30]
	0x03A7E9A8 STP D11, D10, [X31 + 0x40]
	0x03A7E9AC STP D9, D8, [X31 + 0x50]
	0x03A7E9B0 STR X30, [X31 + 0x60]
	0x03A7E9B4 STP X20, X19, [X31 + 0x70]
	0x03A7E9B8 STP S5, S3, [X31 + 0x68]
	0x03A7E9BC STR S4, [X31 + 0x1C]
	0x03A7E9C0 ADRP X20, 0x964000
	0x03A7E9C4 ADRP X19, 0x6A0000
	0x03A7E9C8 LDRB W8, [X20 + 0x31A]
	0x03A7E9CC LDR X19, [X19 + 0xDB8]
	0x03A7E9D0 MOV V8.16B, V6.16B
	0x03A7E9D4 MOV V9.16B, V2.16B
	0x03A7E9D8 TBNZ X8, 0x0, 0x3A7E9F0
	0x03A7E9DC ADRP X0, 0x6A0000
	0x03A7E9E0 LDR X0, [X0 + 0xDB8]
	0x03A7E9E4 BL 0x1C16CF4
	0x03A7E9E8 MOVZ W8, 0x1
	0x03A7E9EC STRB W8, [X20 + 0x31A]
	0x03A7E9F0 LDR X0, [X19]
	0x03A7E9F4 LDP S13, S12, [X31 + 0x80]
	0x03A7E9F8 LDR W8, [X0 + 0xE0]
	0x03A7E9FC CBNZ W8, 0x3A7EA04
	0x03A7EA00 BL 0x1C16DFC
	0x03A7EA04 MOV V0.16B, V9.16B
	0x03A7EA08 BL 0x3A7E228
	0x03A7EA0C MOV V11.16B, V0.16B
	0x03A7EA10 MOV V0.16B, V8.16B
	0x03A7EA14 BL 0x3A7E228
	0x03A7EA18 MOV V10.16B, V0.16B
	0x03A7EA1C MOV V0.16B, V12.16B
	0x03A7EA20 BL 0x3A7E228
	0x03A7EA24 STR S0, [X31 + 0x8]
	0x03A7EA28 LDR V0, [X31 + 0x6C]
	0x03A7EA2C STR S8, [X31 + 0x18]
	0x03A7EA30 BL 0x3A7E228
	0x03A7EA34 STR S12, [X31 + 0x10]
	0x03A7EA38 LDR V12, [X31 + 0x68]
	0x03A7EA3C MOV V8.16B, V0.16B
	0x03A7EA40 MOV V0.16B, V12.16B
	0x03A7EA44 BL 0x3A7E228
	0x03A7EA48 MOV V14.16B, V0.16B
	0x03A7EA4C MOV V0.16B, V13.16B
	0x03A7EA50 BL 0x3A7E228
	0x03A7EA54 MOV V15.16B, V0.16B
	0x03A7EA58 LDR V0, [X31 + 0x1C]
	0x03A7EA5C BL 0x3A7E228
	0x03A7EA60 LDR V6, [X31 + 0x8]
	0x03A7EA64 LDR V7, [X31 + 0x6C]
	0x03A7EA68 STR S15, [X31 + 0xC]
	0x03A7EA6C FMUL S3, S8, S15
	0x03A7EA70 LDR V15, [X31 + 0x18]
	0x03A7EA74 MOV V5.16B, V10.16B
	0x03A7EA78 MOV V10.16B, V0.16B
	0x03A7EA7C FADD S2, S9, S9
	0x03A7EA80 FMUL S0, S11, S5
	0x03A7EA84 FMUL S1, S11, S6
	0x03A7EA88 FMUL S4, S14, S10
	0x03A7EA8C FMUL S2, S7, S2
	0x03A7EA90 FADD S0, S0, S1
	0x03A7EA94 FMUL S1, S8, S14
	0x03A7EA98 FMUL S8, S6, S4
	0x03A7EA9C FMUL S4, S2, S12
	0x03A7EAA0 FMUL S4, S15, S4
	0x03A7EAA4 FSUB S0, S0, S4
	0x03A7EAA8 FADD S4, S10, S10
	0x03A7EAAC FMUL S4, S12, S4
	0x03A7EAB0 LDR V12, [X31 + 0x10]
	0x03A7EAB4 ADRP X19, 0x963000
	0x03A7EAB8 FMUL S2, S2, S13
	0x03A7EABC LDRB W8, [X19 + 0x585]
	0x03A7EAC0 FMUL S2, S12, S2
	0x03A7EAC4 FSUB S0, S0, S2
	0x03A7EAC8 FMUL S4, S15, S4
	0x03A7EACC FADD S0, S1, S0
	0x03A7EAD0 STR S9, [X31 + 0x14]
	0x03A7EAD4 FADD S9, S3, S0
	0x03A7EAD8 FMUL S11, S13, S4
	0x03A7EADC MOV V14.16B, V13.16B
	0x03A7EAE0 CBNZ W8, 0x3A7EB00
	0x03A7EAE4 ADRP X0, 0x675000
	0x03A7EAE8 LDR X0, [X0 + 0x5A8]
	0x03A7EAEC MOV V13.16B, V5.16B
	0x03A7EAF0 BL 0x1C16CF4
	0x03A7EAF4 MOV V5.16B, V13.16B
	0x03A7EAF8 MOVZ W8, 0x1
	0x03A7EAFC STRB W8, [X19 + 0x585]
	0x03A7EB00 ADRP X19, 0x675000
	0x03A7EB04 LDR X19, [X19 + 0x5A8]
	0x03A7EB08 FSUB S8, S9, S8
	0x03A7EB0C FMUL S11, S12, S11
	0x03A7EB10 FMUL S9, S5, S10
	0x03A7EB14 LDR X0, [X19]
	0x03A7EB18 LDR W8, [X0 + 0xE0]
	0x03A7EB1C CBNZ W8, 0x3A7EB24
	0x03A7EB20 BL 0x1C16DFC
	0x03A7EB24 LDR V0, [X31 + 0xC]
	0x03A7EB28 LDR V13, [X31 + 0x14]
	0x03A7EB2C LDR V2, [X31 + 0x6C]
	0x03A7EB30 LDR V3, [X31 + 0x1C]
	0x03A7EB34 FMUL S9, S0, S9
	0x03A7EB38 FMUL S0, S13, S12
	0x03A7EB3C FMUL S1, S2, S14
	0x03A7EB40 FSUB S10, S0, S1
	0x03A7EB44 LDR V1, [X31 + 0x68]
	0x03A7EB48 ADRP X20, 0x963000
	0x03A7EB4C LDRB W8, [X20 + 0x560]
	0x03A7EB50 FADD S8, S8, S11
	0x03A7EB54 FMUL S0, S1, S3
	0x03A7EB58 FMUL S11, S0, S12
	0x03A7EB5C FMUL S12, S15, S3
	0x03A7EB60 CBNZ W8, 0x3A7EB7C
	0x03A7EB64 ADRP X0, 0x675000
	0x03A7EB68 LDR X0, [X0 + 0x5A8]
	0x03A7EB6C BL 0x1C16CF4
	0x03A7EB70 LDP S1, S2, [X31 + 0x68]
	0x03A7EB74 MOVZ W8, 0x1
	0x03A7EB78 STRB W8, [X20 + 0x560]
	0x03A7EB7C LDR X0, [X19]
	0x03A7EB80 FSUB S8, S8, S9
	0x03A7EB84 FSUB S9, S10, S11
	0x03A7EB88 FMUL S10, S12, S14
	0x03A7EB8C LDR W8, [X0 + 0xE0]
	0x03A7EB90 FMUL S11, S2, S1
	0x03A7EB94 FMUL S12, S13, S15
	0x03A7EB98 CBNZ W8, 0x3A7EBBC
	0x03A7EB9C BL 0x1C16DFC
	0x03A7EBA0 LDRB W8, [X20 + 0x560]
	0x03A7EBA4 CBNZ W8, 0x3A7EBBC
	0x03A7EBA8 ADRP X0, 0x675000
	0x03A7EBAC LDR X0, [X0 + 0x5A8]
	0x03A7EBB0 BL 0x1C16CF4
	0x03A7EBB4 MOVZ W8, 0x1
	0x03A7EBB8 STRB W8, [X20 + 0x560]
	0x03A7EBBC LDR X0, [X19]
	0x03A7EBC0 FSQRT S13, S8
	0x03A7EBC4 FADD S8, S10, S9
	0x03A7EBC8 FSUB S9, S11, S12
	0x03A7EBCC LDR W8, [X0 + 0xE0]
	0x03A7EBD0 CBNZ W8, 0x3A7EBD8
	0x03A7EBD4 BL 0x1C16DFC
	0x03A7EBD8 FSUB S0, S9, S13
	0x03A7EBDC FADD S1, S9, S13
	0x03A7EBE0 FDIV S9, S0, S8
	0x03A7EBE4 FDIV S0, S1, S8
	0x03A7EBE8 FCVT S0, S0
	0x03A7EBEC BL 0x3EB1D70
	0x00000000 INVALID
	0x03A7EBF4 FCVT S0, S9
	0x03A7EBF8 BL 0x3EB1D70
	0x00000000 INVALID
	0x03A7EC00 FADD S0, S8, S8
	0x03A7EC04 LDP X20, X19, [X31 + 0x70]
	0x03A7EC08 LDR X30, [X31 + 0x60]
	0x03A7EC0C LDP D9, D8, [X31 + 0x50]
	0x03A7EC10 LDP D11, D10, [X31 + 0x40]
	0x03A7EC14 LDP D13, D12, [X31 + 0x30]
	0x03A7EC18 LDP D15, D14, [X31 + 0x20]
	0x03A7EC1C FADD S1, S1, S1
	0x03A7EC20 ADD X31, X31, 0x80
	0x03A7EC24 RET
	0x03A7EC28 SUB X31, X31, 0x80
	0x03A7EC2C STP D15, D14, [X31 + 0x20]
	0x03A7EC30 STP D13, D12, [X31 + 0x30]
	0x03A7EC34 STP D11, D10, [X31 + 0x40]
	0x03A7EC38 STP D9, D8, [X31 + 0x50]
	0x03A7EC3C STP X30, X21, [X31 + 0x60]
	0x03A7EC40 STP X20, X19, [X31 + 0x70]
	0x03A7EC44 ADRP X20, 0x963000
	0x03A7EC48 LDRB W8, [X20 + 0x564]
	0x03A7EC4C MOV V13.16B, V7.16B
	0x03A7EC50 MOV V15.16B, V6.16B
	0x03A7EC54 MOV V14.16B, V3.16B
	0x03A7EC58 MOV V9.16B, V0.16B
	0x03A7EC5C STP S4, S5, [X31 + 0xC]
	0x03A7EC60 STR S2, [X31 + 0x1C]
	0x03A7EC64 STR S1, [X31 + 0x14]
	0x03A7EC68 CBNZ W8, 0x3A7EC80
	0x03A7EC6C ADRP X0, 0x675000
	0x03A7EC70 LDR X0, [X0 + 0x5A8]
	0x03A7EC74 BL 0x1C16CF4
	0x03A7EC78 MOVZ W8, 0x1
	0x03A7EC7C STRB W8, [X20 + 0x564]
	0x03A7EC80 ADRP X19, 0x675000
	0x03A7EC84 LDR X19, [X19 + 0x5A8]
	0x03A7EC88 LDR V8, [X31 + 0xA0]
	0x03A7EC8C LDR X0, [X19]
	0x03A7EC90 LDR W8, [X0 + 0xE0]
	0x03A7EC94 CBNZ W8, 0x3A7EC9C
	0x03A7EC98 BL 0x1C16DFC
	0x03A7EC9C FCVT S8, S8
	0x03A7ECA0 MOV V0.16B, V8.16B
	0x03A7ECA4 BL 0x3EB1BF0
	0x03A7ECA8 ADRP X21, 0x963000
	0x03A7ECAC LDRB W8, [X21 + 0x56A]
	0x03A7ECB0 MOV V10.16B, V0.16B
	0x03A7ECB4 CBNZ W8, 0x3A7ECCC
	0x03A7ECB8 ADRP X0, 0x675000
	0x03A7ECBC LDR X0, [X0 + 0x5A8]
	0x03A7ECC0 BL 0x1C16CF4
	0x03A7ECC4 MOVZ W8, 0x1
	0x03A7ECC8 STRB W8, [X21 + 0x56A]
	0x03A7ECCC LDR X0, [X19]
	0x03A7ECD0 LDR V11, [X31 + 0x98]
	0x03A7ECD4 LDR V12, [X31 + 0x88]
	0x00000000 INVALID
	0x03A7ECDC LDR W8, [X0 + 0xE0]
	0x03A7ECE0 CBNZ W8, 0x3A7ECE8
	0x03A7ECE4 BL 0x1C16DFC
	0x03A7ECE8 MOV V0.16B, V8.16B
	0x03A7ECEC BL 0x3EB1C30
	0x03A7ECF0 LDRB W8, [X20 + 0x564]
	0x00000000 INVALID
	0x03A7ECF8 FMUL S0, S12, S13
	0x03A7ECFC FMUL S12, S0, S10
	0x03A7ED00 FMUL S11, S11, S13
	0x03A7ED04 CBNZ W8, 0x3A7ED1C
	0x03A7ED08 ADRP X0, 0x675000
	0x03A7ED0C LDR X0, [X0 + 0x5A8]
	0x03A7ED10 BL 0x1C16CF4
	0x03A7ED14 MOVZ W8, 0x1
	0x03A7ED18 STRB W8, [X20 + 0x564]
	0x03A7ED1C LDR X0, [X19]
	0x03A7ED20 FADD S12, S15, S12
	0x03A7ED24 FMUL S15, S11, S8
	0x03A7ED28 LDR W8, [X0 + 0xE0]
	0x03A7ED2C CBNZ W8, 0x3A7ED34
	0x03A7ED30 BL 0x1C16DFC
	0x03A7ED34 LDRB W8, [X21 + 0x56A]
	0x03A7ED38 FSUB S11, S9, S14
	0x03A7ED3C FADD S12, S15, S12
	0x03A7ED40 STP S10, S13, [X31 + 0x4]
	0x03A7ED44 STR S9, [X31 + 0x18]
	0x03A7ED48 CBNZ W8, 0x3A7ED60
	0x03A7ED4C ADRP X0, 0x675000
	0x03A7ED50 LDR X0, [X0 + 0x5A8]
	0x03A7ED54 BL 0x1C16CF4
	0x03A7ED58 MOVZ W8, 0x1
	0x03A7ED5C STRB W8, [X21 + 0x56A]
	0x03A7ED60 LDR X0, [X19]
	0x03A7ED64 LDP S10, S13, [X31 + 0x90]
	0x03A7ED68 LDP S15, S9, [X31 + 0x80]
	0x03A7ED6C FDIV S14, S11, S12
	0x03A7ED70 LDR W8, [X0 + 0xE0]
	0x03A7ED74 CBNZ W8, 0x3A7ED7C
	0x03A7ED78 BL 0x1C16DFC
	0x03A7ED7C LDP S4, S3, [X31 + 0x4]
	0x03A7ED80 LDP X20, X19, [X31 + 0x70]
	0x03A7ED84 LDP X30, X21, [X31 + 0x60]
	0x03A7ED88 FMUL S0, S13, S3
	0x03A7ED8C FMUL S1, S10, S3
	0x03A7ED90 FMUL S2, S9, S3
	0x03A7ED94 FMUL S3, S15, S3
	0x03A7ED98 FMUL S2, S2, S4
	0x03A7ED9C FMUL S3, S3, S4
	0x03A7EDA0 LDR V4, [X31 + 0x10]
	0x03A7EDA4 FMUL S0, S0, S8
	0x03A7EDA8 FMUL S1, S1, S8
	0x03A7EDAC LDP D9, D8, [X31 + 0x50]
	0x03A7EDB0 FADD S2, S4, S2
	0x03A7EDB4 LDR V4, [X31 + 0xC]
	0x03A7EDB8 FADD S0, S0, S2
	0x03A7EDBC FMUL S2, S0, S14
	0x03A7EDC0 LDR V0, [X31 + 0x14]
	0x03A7EDC4 FADD S3, S4, S3
	0x03A7EDC8 FADD S1, S1, S3
	0x03A7EDCC FMUL S1, S1, S14
	0x03A7EDD0 FADD S0, S0, S1
	0x03A7EDD4 LDR V1, [X31 + 0x1C]
	0x03A7EDD8 LDP D11, D10, [X31 + 0x40]
	0x03A7EDDC LDP D13, D12, [X31 + 0x30]
	0x03A7EDE0 LDP D15, D14, [X31 + 0x20]
	0x03A7EDE4 FADD S1, S1, S2
	0x03A7EDE8 LDR V2, [X31 + 0x18]
	0x03A7EDEC ADD X31, X31, 0x80
	0x03A7EDF0 RET
	0x03A7EDF4 STP D13, D12, [X31 - 0x50]!
	0x03A7EDF8 STP D11, D10, [X31 + 0x10]
	0x03A7EDFC STP D9, D8, [X31 + 0x20]
	0x03A7EE00 STR X30, [X31 + 0x30]
	0x03A7EE04 STP X20, X19, [X31 + 0x40]
	0x03A7EE08 ADRP X20, 0x963000
	0x03A7EE0C LDP S11, S12, [X0 + 0x74]
	0x03A7EE10 LDRB W8, [X20 + 0x585]
	0x03A7EE14 LDR V13, [X0 + 0x7C]
	0x03A7EE18 MOV X19, X0
	0x03A7EE1C MOV V8.16B, V2.16B
	0x03A7EE20 MOV V9.16B, V1.16B
	0x03A7EE24 MOV V10.16B, V0.16B
	0x03A7EE28 CBNZ W8, 0x3A7EE40
	0x03A7EE2C ADRP X0, 0x675000
	0x03A7EE30 LDR X0, [X0 + 0x5A8]
	0x03A7EE34 BL 0x1C16CF4
	0x03A7EE38 MOVZ W8, 0x1
	0x03A7EE3C STRB W8, [X20 + 0x585]
	0x03A7EE40 ADRP X8, 0x675000
	0x03A7EE44 LDR X8, [X8 + 0x5A8]
	0x03A7EE48 FSUB S11, S10, S11
	0x03A7EE4C FSUB S12, S9, S12
	0x03A7EE50 FSUB S13, S8, S13
	0x03A7EE54 LDR X0, [X8]
	0x03A7EE58 LDR W8, [X0 + 0xE0]
	0x03A7EE5C CBNZ W8, 0x3A7EE64
	0x03A7EE60 BL 0x1C16DFC
	0x03A7EE64 FMUL S1, S11, S11
	0x03A7EE68 FMUL S2, S12, S12
	0x03A7EE6C FMUL S0, S13, S13
	0x03A7EE70 FADD S1, S1, S2
	0x03A7EE74 FADD S0, S0, S1
	0x03A7EE78 FMOV S2, 1
	0x03A7EE7C FSQRT S0, S0
	0x03A7EE80 FDIV S2, S2, S0
	0x03A7EE84 LDP S0, S1, [X19 + 0x80]
	0x03A7EE88 FMUL S3, S11, S2
	0x03A7EE8C FMUL S4, S12, S2
	0x03A7EE90 FMUL S5, S13, S2
	0x03A7EE94 LDR V2, [X19 + 0x88]
	0x03A7EE98 FMUL S3, S3, S0
	0x03A7EE9C FMUL S4, S4, S1
	0x03A7EEA0 FADD S3, S3, S4
	0x03A7EEA4 FMUL S4, S5, S2
	0x03A7EEA8 FADD S3, S4, S3
	0x03A7EEAC FCMP S3, 0x0
	0x03A7EEB0 B.GE 0x3A7EEBC
	0x03A7EEB4 MOV W0, W31
	0x03A7EEB8 B 0x3A7EEF0
	0x03A7EEBC LDP S3, S4, [X19 + 0x74]
	0x03A7EEC0 LDR V5, [X19 + 0x7C]
	0x03A7EEC4 LDR V6, [X19 + 0x90]
	0x03A7EEC8 FSUB S3, S10, S3
	0x03A7EECC FSUB S4, S9, S4
	0x03A7EED0 FSUB S5, S8, S5
	0x03A7EED4 FMUL S0, S0, S3
	0x03A7EED8 FMUL S1, S1, S4
	0x03A7EEDC FADD S0, S0, S1
	0x03A7EEE0 FMUL S1, S2, S5
	0x03A7EEE4 FADD S0, S1, S0
	0x03A7EEE8 FCMP S0, S6
	0x03A7EEEC CSET W0, LS
	0x03A7EEF0 LDP X20, X19, [X31 + 0x40]
	0x03A7EEF4 LDR X30, [X31 + 0x30]
	0x03A7EEF8 LDP D9, D8, [X31 + 0x20]
	0x03A7EEFC LDP D11, D10, [X31 + 0x10]
	0x03A7EF00 LDP D13, D12, [X31], #0x50
	0x03A7EF04 RET
	0x03A7EF08 SUB X31, X31, 0xA0
	0x03A7EF0C STP D15, D14, [X31 + 0x30]
	0x03A7EF10 STP D13, D12, [X31 + 0x40]
	0x03A7EF14 STP D11, D10, [X31 + 0x50]
	0x03A7EF18 STP D9, D8, [X31 + 0x60]
	0x03A7EF1C STR X30, [X31 + 0x70]
	0x03A7EF20 STP X22, X21, [X31 + 0x80]
	0x03A7EF24 STP X20, X19, [X31 + 0x90]
	0x03A7EF28 ADRP X21, 0x964000
	0x03A7EF2C LDRB W8, [X21 + 0x319]
	0x03A7EF30 MOV X19, X1
	0x03A7EF34 MOV X20, X0
	0x03A7EF38 MOV V13.16B, V5.16B
	0x03A7EF3C MOV V15.16B, V4.16B
	0x03A7EF40 MOV V14.16B, V3.16B
	0x03A7EF44 MOV V11.16B, V2.16B
	0x03A7EF48 MOV V12.16B, V1.16B
	0x03A7EF4C STR S7, [X31 + 0x28]
	0x03A7EF50 STP S6, S0, [X31 + 0x78]
	0x03A7EF54 TBNZ X8, 0x0, 0x3A7EF70
	0x03A7EF58 ADRP X0, 0x6A0000
	0x03A7EF5C LDR X0, [X0 + 0xDB8]
	0x03A7EF60 BL 0x1C16CF4
	0x03A7EF64 LDR V0, [X31 + 0x7C]
	0x03A7EF68 MOVZ W8, 0x1
	0x03A7EF6C STRB W8, [X21 + 0x319]
	0x03A7EF70 MOVI D1, 0x0
	0x03A7EF74 STR W31, [X19 + 0x8]
	0x03A7EF78 STR D1, [X19]
	0x03A7EF7C STR D1, [X20]
	0x03A7EF80 STR W31, [X20 + 0x8]
	0x03A7EF84 ADRP X21, 0x963000
	0x03A7EF88 LDRB W8, [X21 + 0x585]
	0x03A7EF8C CBNZ W8, 0x3A7EFA8
	0x03A7EF90 ADRP X0, 0x675000
	0x03A7EF94 LDR X0, [X0 + 0x5A8]
	0x03A7EF98 BL 0x1C16CF4
	0x03A7EF9C LDR V0, [X31 + 0x7C]
	0x03A7EFA0 MOVZ W8, 0x1
	0x03A7EFA4 STRB W8, [X21 + 0x585]
	0x03A7EFA8 ADRP X22, 0x675000
	0x03A7EFAC LDR X22, [X22 + 0x5A8]
	0x03A7EFB0 FNEG S10, S0
	0x03A7EFB4 FNEG S9, S12
	0x03A7EFB8 FNEG S8, S11
	0x03A7EFBC LDR X0, [X22]
	0x03A7EFC0 LDR W8, [X0 + 0xE0]
	0x03A7EFC4 CBNZ W8, 0x3A7EFD0
	0x03A7EFC8 BL 0x1C16DFC
	0x03A7EFCC LDR V0, [X31 + 0x7C]
	0x03A7EFD0 FMUL S3, S0, S0
	0x03A7EFD4 FMUL S2, S12, S12
	0x03A7EFD8 FMUL S1, S11, S11
	0x03A7EFDC FADD S2, S3, S2
	0x03A7EFE0 FADD S1, S1, S2
	0x03A7EFE4 FMOV S7, 1
	0x03A7EFE8 FSQRT S1, S1
	0x03A7EFEC FDIV S1, S7, S1
	0x03A7EFF0 FMUL S2, S1, S10
	0x03A7EFF4 FMUL S3, S1, S9
	0x03A7EFF8 FMUL S1, S1, S8
	0x03A7EFFC FMUL S2, S14, S2
	0x03A7F000 FMUL S3, S15, S3
	0x03A7F004 FADD S2, S2, S3
	0x03A7F008 FMUL S1, S13, S1
	0x03A7F00C FADD S1, S1, S2
	0x03A7F010 LDR V2, [X31 + 0x78]
	0x03A7F014 FCMP S1, S2
	0x03A7F018 B.GE 0x3A7F3C8
	0x03A7F01C FMUL S2, S0, S14
	0x03A7F020 FMUL S3, S12, S15
	0x03A7F024 FADD S2, S2, S3
	0x03A7F028 FMUL S3, S11, S13
	0x03A7F02C ADRP X9, 0xFFFFFFFFFD06B000
	0x03A7F030 FADD S2, S3, S2
	0x03A7F034 LDR V3, [X9 + 0x240]
	0x03A7F038 FCMP S2, 0x0
	0x03A7F03C FNEG S2, S2
	0x03A7F040 ADRP X8, 0x69F000
	0x03A7F044 FCSEL S2, S3, S2, EQ
	0x03A7F048 FMOV S3, -1
	0x03A7F04C FCMP S2, 0x0
	0x03A7F050 LDR X8, [X8 + 0xDB8]
	0x03A7F054 FMUL S4, S14, S2
	0x03A7F058 FCSEL S3, S3, S7, MI
	0x03A7F05C STR S3, [X31 + 0x4]
	0x03A7F060 FADD S3, S0, S4
	0x03A7F064 LDR V0, [X31 + 0x28]
	0x03A7F068 LDR V1, [X31 + 0xA0]
	0x03A7F06C LDP S20, S19, [X31 + 0xB4]
	0x03A7F070 LDR V21, [X31 + 0xB0]
	0x03A7F074 LDP S17, S16, [X31 + 0xC4]
	0x03A7F078 LDR V18, [X31 + 0xC0]
	0x03A7F07C LDR X0, [X8]
	0x03A7F080 FMUL S5, S15, S2
	0x03A7F084 FMUL S6, S13, S2
	0x03A7F088 FABS S2, S2
	0x03A7F08C FADD S4, S12, S5
	0x03A7F090 FMUL S0, S2, S0
	0x03A7F094 STR S11, [X31 + 0x78]
	0x03A7F098 FADD S5, S11, S6
	0x03A7F09C FDIV S11, S0, S1
	0x03A7F0A0 FNEG S0, S4
	0x03A7F0A4 FMUL S1, S21, S3
	0x03A7F0A8 FMUL S2, S20, S0
	0x03A7F0AC LDR W8, [X0 + 0xE0]
	0x03A7F0B0 FSUB S1, S2, S1
	0x03A7F0B4 FMUL S2, S18, S3
	0x03A7F0B8 FMUL S0, S17, S0
	0x03A7F0BC FSUB S0, S0, S2
	0x03A7F0C0 FMUL S2, S19, S5
	0x03A7F0C4 FSUB S9, S1, S2
	0x03A7F0C8 FMUL S1, S16, S5
	0x03A7F0CC FSUB S8, S0, S1
	0x03A7F0D0 STR S12, [X31 + 0x2C]
	0x03A7F0D4 STP S4, S3, [X31 + 0xC]
	0x03A7F0D8 STP S21, S20, [X31 + 0x14]
	0x03A7F0DC STP S18, S17, [X31 + 0x20]
	0x03A7F0E0 STR S19, [X31 + 0x1C]
	0x03A7F0E4 STR S16, [X31 + 0x28]
	0x03A7F0E8 STR S5, [X31 + 0x8]
	0x03A7F0EC CBNZ W8, 0x3A7F0F4
	0x03A7F0F0 BL 0x1C16DFC
	0x03A7F0F4 MOV V0.16B, V11.16B
	0x03A7F0F8 BL 0x3A7E228
	0x03A7F0FC FNEG S1, S9
	0x03A7F100 LDRB W8, [X21 + 0x585]

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+336], D15
	003 Move [X31+344], D14
	004 Move [X31+352], D13
	005 Move [X31+360], D12
	006 Move [X31+368], D11
	007 Move [X31+376], D10
	008 Move [X31+384], D9
	009 Move [X31+392], D8
	010 Move [X31+400], X29
	011 Move [X31+408], X30
	012 Move [X31+416], X28
	013 Move [X31+424], X27
	014 Move [X31+432], X26
	015 Move [X31+440], X25
	016 Move [X31+448], X24
	017 Move [X31+456], X23
	018 Move [X31+464], X22
	019 Move [X31+472], X21
	020 Move [X31+480], X20
	021 Move [X31+488], X19
	022 Move X21, 0x965000
	023 Move X27, 0x6A1000
	024 Move W8, [X21+782]
	025 Move X27, [X27+3512]
	026 Move W20, W1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x6D9000
	033 Move X0, [X0+4072]
	034 Call 0x1C17CF4
	035 Move X0, 0x6DA000
	036 Move X0, [X0+16]
	037 Call 0x1C17CF4
	038 Move X0, 0x6D7000
	039 Move X0, [X0+2496]
	040 Call 0x1C17CF4
	041 Move X0, 0x6D8000
	042 Move X0, [X0+2936]
	043 Call 0x1C17CF4
	044 Move X0, 0x6DA000
	045 Move X0, [X0+24]
	046 Call 0x1C17CF4
	047 Move X0, 0x6D7000
	048 Move X0, [X0+1328]
	049 Call 0x1C17CF4
	050 Move X0, 0x6A1000
	051 Move X0, [X0+3512]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+782], W8
	055 Add X0, X31, 200
	056 Move W2, 136
	057 Move W1, W31
	058 Move W21, 136
	059 Call 0x3EB2B10
	060 Move [X31+184], X31
	061 Move [X31+192], X31
	062 Move [X31+168], X31
	063 Move [X31+176], X31
	064 Move [X31+152], X31
	065 Move [X31+160], X31
	066 Move [X31+128], X31
	067 Move [X31+136], X31
	068 Move [X31+124], W31
	069 Move W8, [X19+8]
	070 Move X9, [X19+16]
	071 Add X0, X31, 200
	072 Move W2, 136
	073 Subtract W8, W20, W8
	074 NotImplemented "Instruction SMADDL not yet implemented."
	075 Call 0x3EB2B30
	076 Add X8, X31, 56
	077 Add X0, X31, 200
	078 Move X1, X31
	079 Call VisibleReflectionProbe.get_bounds, X0
	080 Move S0, [X31+56]
	081 Move S1, [X31+60]
	082 Move V2, [X31+64]
	083 Move X0, X31
	084 Call float3.op_Implicit, X0
	085 Add X8, X31, 56
	086 Add X0, X31, 200
	087 Move X1, X31
	088 Move [X31+52], S0
	089 Move [X31+40], S1
	090 Move [X31+32], S2
	091 Call VisibleReflectionProbe.get_bounds, X0
	092 Move S0, [X31+68]
	093 Move S1, [X31+72]
	094 Move V2, [X31+76]
	095 Move X0, X31
	096 Call float3.op_Implicit, X0
	097 Move X0, [X27]
	098 Move [X31+24], S0
	099 Move [X31+16], S1
	100 Move [X31+8], S2
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X27]
	106 Move X8, [X0+184]
	107 Move X8, [X8]
	108 Compare X8, 0
	109 JumpIfEqual {554}
	110 Move X9, 0x6DA000
	111 Move X9, [X9+24]
	112 Move W1, [X8+24]
	113 Add X0, X31, 184
	114 Move W2, 2
	115 Move X4, [X9]
	116 Move W3, 1
	117 Call NativeArray`1<float3>..ctor, X0, X1, X2, X3
	118 Move X8, [X27]
	119 Move X9, [X8+184]
	120 Move X8, [X9]
	121 Compare X8, 0
	122 JumpIfEqual {554}
	123 Move X9, [X9+8]
	124 Compare X9, 0
	125 JumpIfEqual {554}
	126 Move X22, 0x6D7000
	127 Move X22, [X22+1328]
	128 Move X23, 0x6D9000
	129 Move X28, 0x6D7000
	130 Move X23, [X23+4072]
	131 Move X28, [X28+2496]
	132 Move W9, [X9+24]
	133 Move W8, [X8+24]
	134 Move X4, [X22]
	135 Move X29, 0x6D8000
	136 Move X29, [X29+2936]
	137 Add W9, W9, W9
	138 Add W1, W9, W8
	139 Add X0, X31, 168
	140 Move W2, 2
	141 Move W3, 1
	142 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	143 Move X25, X31
	144 Move X26, X31
	145 Move W24, W31
	146 Move W20, W31
	147 Add X21, X19, 56
	148 Move X0, [X27]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X27]
	154 Move X8, [X0+184]
	155 Move X8, [X8]
	156 Compare X8, 0
	157 JumpIfEqual {554}
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W1, [X19+272]
	161 Move X2, [X23]
	162 Add X8, X31, 56
	163 Move X0, X21
	164 Call Fixed2`1<float4x4>.get_Item, X0, X1
	165 Move X0, [X27]
	166 Move V14, [X31+56]
	167 Move V15, [X31+64]
	168 Move V8, [X31+72]
	169 Move V9, [X31+80]
	170 Move V12, [X31+88]
	171 Move V13, [X31+96]
	172 Move V10, [X31+104]
	173 Move W8, [X0+224]
	174 Move V11, [X31+112]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X27]
	179 Move X8, [X0+184]
	180 Move X8, [X8]
	181 Compare X8, 0
	182 JumpIfEqual {554}
	183 Move W9, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add X8, X8, X25
	186 Move S0, [X8+32]
	187 Move S1, [X8+36]
	188 Move V3, [X31+24]
	189 Move V2, [X8+40]
	190 Move X9, [X31+184]
	191 Multiply S0, S3, S0
	192 Move V3, [X31+16]
	193 Add X8, X9, X25
	194 Multiply S1, S3, S1
	195 Move V3, [X31+8]
	196 Multiply S2, S3, S2
	197 Move V3, [X31+52]
	198 Add S0, S3, S0
	199 Move V3, [X31+40]
	200 Add S1, S3, S1
	201 Move V3, [X31+32]
	202 NotImplemented "Instruction INVALID not yet implemented."
	203 Multiply S1, S9, S1
	204 Add S2, S3, S2
	205 NotImplemented "Instruction INVALID not yet implemented."
	206 Multiply S0, S15, S0
	207 NotImplemented "Instruction INVALID not yet implemented."
	208 Multiply S2, S13, S2
	209 Add V3, V3, V4
	210 Add S0, S0, S1
	211 Add V1, V3, V5
	212 Add S2, S0, S2
	213 Add V0, V10, V1
	214 Add S1, S11, S2
	215 NotImplemented "Instruction FNEG not yet implemented."
	216 Move [X8], D0
	217 Move [X8+8], S1
	218 Move V2, [X19+256]
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 Move W8, W20
	221 Move W8, [X19+260]
	222 Compare W8, 0
	223 JumpIfNotEqual {226}
	224 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	225 NotImplemented "Instruction INVALID not yet implemented."
	226 Move X8, [X31+168]
	227 NotImplemented "Instruction SBFM not yet implemented."
	228 Move [X8], D0
	229 Move X8, [X31+168]
	230 Move V1, [X8]
	231 Add W8, W20, 1
	232 NotImplemented "Instruction FCMP not yet implemented."
	233 Move W24, W20
	234 Add X26, X26, 1
	235 Add X25, X25, 12
	236 Move W20, W8
	237 Move X25, X31
	238 Move W26, 12
	239 Move W23, W24
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X27]
	245 Move X8, [X0+184]
	246 Move X8, [X8+8]
	247 Compare X8, 0
	248 JumpIfEqual {554}
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W9, [X0+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {260}
	254 Call 0x1C17DFC
	255 Move X8, [X27]
	256 Move X8, [X8+184]
	257 Move X8, [X8+8]
	258 Compare X8, 0
	259 JumpIfEqual {554}
	260 Move W9, [X8+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add X8, X8, X25
	263 Move V0, [X8+2]
	264 Move X8, [X31+184]
	265 Move W21, 1
	266 Move X9, D0
	267 Move [X31+8], V0
	268 NotImplemented "Instruction NOP not yet implemented."
	269 NotImplemented "Instruction SMADDL not yet implemented."
	270 Move V8, [X8]
	271 Move V9, [X8+8]
	272 Add X0, X31, 128
	273 Move W1, W21
	274 Move X2, X31
	275 Call int4.get_Item, X0, X1
	276 Move X8, [X31+184]
	277 Move V1, [X19+256]
	278 NotImplemented "Instruction NOP not yet implemented."
	279 NotImplemented "Instruction SMADDL not yet implemented."
	280 Move V0, [X8]
	281 Move V2, [X8+8]
	282 NotImplemented "Instruction FCMP not yet implemented."
	283 NotImplemented "Instruction FCMP not yet implemented."
	284 NotImplemented "Instruction FCMP not yet implemented."
	285 Subtract S3, S1, S9
	286 Subtract S1, S2, S9
	287 Move W8, [X19+260]
	288 NotImplemented "Instruction FDIV not yet implemented."
	289 Subtract V0, V0, V8
	290 NotImplemented "Instruction INVALID not yet implemented."
	291 Add V0, V8, V0
	292 Compare W8, 0
	293 JumpIfNotEqual {298}
	294 Multiply S1, S1, S2
	295 Add S1, S9, S1
	296 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	297 NotImplemented "Instruction INVALID not yet implemented."
	298 Move X8, [X31+168]
	299 NotImplemented "Instruction SBFM not yet implemented."
	300 Move [X8], D0
	301 Move X8, [X31+168]
	302 Move V1, [X8]
	303 Add W8, W20, 1
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 Move W23, W20
	306 Move W20, W8
	307 Add W21, W21, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X0, [X27]
	310 Add X25, X25, 1
	311 Move X4, [X22]
	312 Add X0, X31, 152
	313 Move W2, 2
	314 Move W3, 1
	315 Move W1, W20
	316 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X8, [X31+168]
	319 Move W20, W20
	320 Move X29, X31
	321 Subtract X21, X20, 1
	322 Move W22, W23
	323 Move X0, [X27]
	324 Add X8, X8, W22
	325 Move S8, [X8]
	326 Move S9, [X8+4]
	327 Move X28, X29
	328 Move W9, [X0+224]
	329 Compare W9, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 Move S2, 1
	333 Move X0, X19
	334 Move V0, V8
	335 Move V1, V9
	336 Call TilingJob.ExpandY, X0, X1
	337 Move X8, [X31+152]
	338 Move X10, X31
	339 Move W9, W31
	340 Add X29, X28, 1
	341 Add X8, X8, X28
	342 Move [X8], S8
	343 Move [X8+8], S9
	344 Move X8, [X31+168]
	345 Move S3, [X8]
	346 Move S2, [X8+4]
	347 Add X11, X8, 12
	348 Subtract S0, S2, S9
	349 Subtract S1, S3, S8
	350 Subtract S3, S3, S8
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Subtract S2, S2, S9
	353 Multiply S4, S1, S2
	354 Multiply S5, S0, S3
	355 Subtract S4, S4, S5
	356 NotImplemented "Instruction FCMP not yet implemented."
	357 Multiply S4, S3, S3
	358 Multiply S5, S2, S2
	359 Multiply S6, S1, S1
	360 Multiply S7, S0, S0
	361 Add S4, S4, S5
	362 Add S5, S7, S6
	363 NotImplemented "Instruction FCMP not yet implemented."
	364 Move V0, V2
	365 Move V1, V3
	366 Move W9, W10
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move S3, [X11-4]
	369 Move S2, [X11]
	370 Add X10, X10, 1
	371 Add X11, X11, 8
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move W22, W9
	375 NotImplemented "Instruction LDRH not yet implemented."
	376 Add X0, X19, 262
	377 Move W1, W31
	378 Move X3, X31
	379 Subtract W2, W8, 1
	380 Move X24, X27
	381 Move [X31+8], X0
	382 Call InclusiveRange.Clamp, X0, X1, X2
	383 NotImplemented "Instruction LDRSH not yet implemented."
	384 NotImplemented "Instruction LDRSH not yet implemented."
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Add X9, X19, 200
	387 Add X8, X19, 208
	388 Move [X31+16], X8
	389 Move [X31+24], X9
	390 Move S9, 1
	391 Move W21, 0x7F800000
	392 Move S10, W31
	393 Move D11, X31
	394 Move X22, 0x7FF00000
	395 Move X0, X31
	396 Add W27, W27, 1
	397 Call InclusiveRange.get_empty
	398 Move [X31+124], W0
	399 Move X20, 0x6DA000
	400 Move W1, [X19+272]
	401 Move X20, [X20+16]
	402 Move X0, [X31+24]
	403 Move X2, [X20]
	404 Call 0x2D20050, X0, X1
	405 Move W1, [X19+272]
	406 Move X2, [X20]
	407 Move X0, [X31+16]
	408 Move V8, V0
	409 Call 0x2D20050, X0, X1
	410 Move V1, [X19+196]
	411 Move W8, W27
	412 NotImplemented "Instruction SCVTF not yet implemented."
	413 Subtract S0, S0, S8
	414 Multiply S1, S1, S2
	415 Multiply S0, S0, S1
	416 Move X27, X31
	417 Add S8, S8, S0
	418 Move TEMP, 0
	419 Not TEMP
	420 Move X20, TEMP
	421 Move [X31+52], W8
	422 Move X8, [X31+152]
	423 Add W9, W20, 2
	424 NotImplemented "Instruction UDIV not yet implemented."
	425 NotImplemented "Instruction MSUB not yet implemented."
	426 Add X10, X8, X27
	427 Add X11, X8, W9
	428 Move V0, [X10+4]
	429 Move V1, [X11+4]
	430 Subtract S2, S8, S0
	431 Subtract S0, S1, S0
	432 NotImplemented "Instruction FDIV not yet implemented."
	433 NotImplemented "Instruction FCMP not yet implemented."
	434 NotImplemented "Instruction FCMP not yet implemented."
	435 Move X0, [X24]
	436 Move X9, X9
	437 ShiftRight X9, 61
	438 And X9, X9, 0xFFFFFFF
	439 Move V13, [X10]
	440 Move V14, [X8]
	441 Move W8, [X0+224]
	442 Move W23, [X19+260]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Subtract S0, S14, S13
	447 Multiply S0, S12, S0
	448 Add S0, S13, S0
	449 Move S2, 1
	450 Move X0, X19
	451 Move V1, V8
	452 Compare W23, 0
	453 JumpIfEqual {455}
	454 Call TilingJob.ViewToTileSpaceOrthographic, X0, X1
	455 Call TilingJob.ViewToTileSpace, X0, X1
	456 Move W8, [X19+248]
	457 Move W9, S0
	458 And W9, W9, 0x7FFFFFFF
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Subtract W8, W8, 1
	461 NotImplemented "Instruction SCVTF not yet implemented."
	462 NotImplemented "Instruction FCCMP not yet implemented."
	463 NotImplemented "Instruction FCSEL not yet implemented."
	464 Move W8, S0
	465 And W8, W8, 0x7FFFFFFF
	466 NotImplemented "Instruction CMP not yet implemented."
	467 NotImplemented "Instruction FCCMP not yet implemented."
	468 NotImplemented "Instruction FCVT not yet implemented."
	469 Move D1, X22
	470 NotImplemented "Instruction FCSEL not yet implemented."
	471 NotImplemented "Instruction FCVTZS not yet implemented."
	472 NotImplemented "Instruction FCMP not yet implemented."
	473 NotImplemented "Instruction CSEL not yet implemented."
	474 Add X0, X31, 124
	475 Move X2, X31
	476 Call InclusiveRange.Expand, X0, X1
	477 Add X20, X20, 1
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Add X27, X27, 8
	480 Move W8, [X19+268]
	481 Move W27, [X31+52]
	482 Move X9, [X19+32]
	483 Move X11, [X31+32]
	484 And X10, X26, 0
	485 Add W20, W8, W27
	486 Add W23, W20, 1
	487 Move W8, [X9]
	488 Move W9, [X31+124]
	489 And X11, X11, 0
	490 Move X2, X31
	491 Or X26, X10, X8
	492 Or X1, X11, X9
	493 Move X0, X26
	494 Move [X31+32], X1
	495 Call InclusiveRange.Merge, X0, X1
	496 Move X8, [X19+32]
	497 Move X11, [X31+40]
	498 And X10, X25, 0
	499 Move X2, X31
	500 Move [X8], W0
	501 Move X8, [X19+32]
	502 Move W9, [X31+124]
	503 And X11, X11, 0
	504 Move W8, [X8]
	505 Or X1, X11, X9
	506 Move [X31+40], X1
	507 Or X25, X10, X8
	508 Move X0, X25
	509 Call InclusiveRange.Merge, X0, X1
	510 Move X8, [X19+32]
	511 Move [X8], W0
	512 NotImplemented "Instruction LDRSH not yet implemented."
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X9, [X31+8]
	515 NotImplemented "Instruction LDRSW not yet implemented."
	516 Move X10, [X19+32]
	517 Move X28, 0x6D6000
	518 Move W9, [X9]
	519 Move X29, 0x6D7000
	520 Move [X10], W9
	521 Move X28, [X28+2496]
	522 Move X29, [X29+2936]
	523 Move X1, [X28]
	524 Add X0, X31, 152
	525 Call NativeArray`1<float2>.Dispose, X0
	526 Move X1, [X28]
	527 Add X0, X31, 168
	528 Call NativeArray`1<float2>.Dispose, X0
	529 Move X1, [X29]
	530 Add X0, X31, 184
	531 Call NativeArray`1<float3>.Dispose, X0
	532 Move X20, [X31+480]
	533 Move X19, [X31+488]
	534 Move X22, [X31+464]
	535 Move X21, [X31+472]
	536 Move X24, [X31+448]
	537 Move X23, [X31+456]
	538 Move X26, [X31+432]
	539 Move X25, [X31+440]
	540 Move X28, [X31+416]
	541 Move X27, [X31+424]
	542 Move X29, [X31+400]
	543 Move X30, [X31+408]
	544 Move D9, [X31+384]
	545 Move D8, [X31+392]
	546 Move D11, [X31+368]
	547 Move D10, [X31+376]
	548 Move D13, [X31+352]
	549 Move D12, [X31+360]
	550 Move D15, [X31+336]
	551 Move D14, [X31+344]
	552 Add X31, X31, 496
	553 Return 
	554 Call 0x1C17F20
	555 Call 0x1C17F28

Method: Unity.Mathematics.float2 ViewToTileSpace(Unity.Mathematics.float3 positionVS)

Disassembly:
	0x03A803EC BL 0x1C16DFC
	0x03A803F0 FMOV S0, -4
	0x03A803F4 FMUL S13, S10, S0
	0x03A803F8 MOV V0.16B, V8.16B
	0x03A803FC FMUL S12, S9, S9
	0x03A80400 BL 0x3A7E228
	0x03A80404 FMUL S0, S11, S0
	0x03A80408 FMOV S1, -1
	0x03A8040C FADD S0, S0, S1
	0x03A80410 FMUL S0, S13, S0
	0x03A80414 LDR X1, [X19]
	0x03A80418 FADD S0, S12, S0
	0x03A8041C FNEG S2, S9
	0x03A80420 FSQRT S0, S0
	0x03A80424 FADD S3, S10, S10
	0x03A80428 FSUB S1, S0, S9
	0x03A8042C FSUB S2, S2, S0
	0x03A80430 FDIV S0, S1, S3
	0x03A80434 FDIV S1, S2, S3
	0x03A80438 ADD X0, X31, 0x38
	0x03A8043C STR X31, [X31 + 0x38]
	0x03A80440 BL 0x27B02B0
	0x03A80444 LDP S0, S1, [X31 + 0x38]
	0x03A80448 LDP X20, X19, [X31 + 0x40]
	0x03A8044C LDR X30, [X31 + 0x30]
	0x03A80450 LDP D9, D8, [X31 + 0x20]
	0x03A80454 LDP D11, D10, [X31 + 0x10]
	0x03A80458 LDP D13, D12, [X31], #0x50
	0x03A8045C RET
	0x03A80460 STR X30, [X31 - 0x20]!
	0x03A80464 STP X20, X19, [X31 + 0x10]
	0x03A80468 ADRP X19, 0x962000
	0x03A8046C ADRP X20, 0x6D7000
	0x03A80470 LDRB W8, [X19 + 0x31C]
	0x03A80474 LDR X20, [X20 + 0x30]
	0x03A80478 TBNZ X8, 0x0, 0x3A804A8
	0x03A8047C ADRP X0, 0x69E000
	0x03A80480 LDR X0, [X0 + 0xDB8]
	0x03A80484 BL 0x1C16CF4
	0x03A80488 ADRP X0, 0x6D7000
	0x03A8048C LDR X0, [X0 + 0x30]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x963000
	009 Move X21, 0x6D8000
	010 Move W8, [X20+783]
	011 Move X21, [X21+32]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x6D8000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+783], W8
	025 Move W1, [X19+272]
	026 Move X2, [X21]
	027 Add X20, X19, 216
	028 Move X0, X20
	029 NotImplemented "Instruction FDIV not yet implemented."
	030 NotImplemented "Instruction FDIV not yet implemented."
	031 Call Fixed2`1<float4>.get_Item, X0, X1
	032 Move W1, [X19+272]
	033 Move X2, [X21]
	034 Move X0, X20
	035 Multiply S9, S10, S0
	036 Multiply S8, S8, S1
	037 Call Fixed2`1<float4>.get_Item, X0, X1
	038 Move S0, [X19+184]
	039 Move S1, [X19+188]
	040 Add S2, S9, S2
	041 Add S3, S8, S3
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Move D9, [X31+16]
	047 Move D8, [X31+24]
	048 Multiply S0, S0, S2
	049 Multiply S1, S3, S1
	050 Move V10, [X31+64]
	051 Return X0

Method: Unity.Mathematics.float2 ViewToTileSpaceOrthographic(Unity.Mathematics.float3 positionVS)

Disassembly:
	0x03A81268 BL 0x21D577C
	0x03A8126C LDR X8, [X20]
	0x03A81270 LDP X20, X19, [X31 + 0x20]
	0x03A81274 LDP X22, X21, [X31 + 0x10]
	0x03A81278 LDR X8, [X8 + 0xB8]
	0x03A8127C STR X0, [X8]
	0x03A81280 LDR X30, [X31], #0x30
	0x03A81284 RET
	0x03A81288 LDR V0, [X0 + 0x8C]
	0x03A8128C RET
	0x03A81290 STP X30, X21, [X31 - 0x20]!
	0x03A81294 STP X20, X19, [X31 + 0x10]
	0x03A81298 ADRP X21, 0x961000
	0x03A8129C ADRP X20, 0x6D6000
	0x03A812A0 ADRP X19, 0x672000
	0x03A812A4 LDRB W8, [X21 + 0x324]
	0x03A812A8 LDR X20, [X20 + 0x50]
	0x03A812AC LDR X19, [X19 + 0x598]
	0x03A812B0 TBNZ X8, 0x0, 0x3A812D4
	0x03A812B4 ADRP X0, 0x672000
	0x03A812B8 LDR X0, [X0 + 0x598]
	0x03A812BC BL 0x1C16CF4
	0x03A812C0 ADRP X0, 0x6D6000
	0x03A812C4 LDR X0, [X0 + 0x50]
	0x03A812C8 BL 0x1C16CF4
	0x03A812CC MOVZ W8, 0x1
	0x03A812D0 STRB W8, [X21 + 0x324]
	0x03A812D4 LDR X8, [X20]
	0x03A812D8 LDR X0, [X19]
	0x03A812DC LDR X8, [X8 + 0xB8]
	0x03A812E0 LDR W9, [X0 + 0xE0]
	0x03A812E4 LDR X19, [X8]
	0x03A812E8 CBNZ W9, 0x3A812F0
	0x03A812EC BL 0x1C16DFC
	0x03A812F0 MOV X0, X19
	0x03A812F4 MOV X1, X31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x962000
	008 Move X21, 0x6D7000
	009 Move W8, [X20+784]
	010 Move X21, [X21+32]
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x6D7000
	019 Move X0, [X0+32]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+784], W8
	023 Move W1, [X19+272]
	024 Move X2, [X21]
	025 Add X20, X19, 216
	026 Move X0, X20
	027 Call Fixed2`1<float4>.get_Item, X0, X1
	028 Move W1, [X19+272]
	029 Move X2, [X21]
	030 Move X0, X20
	031 Multiply S9, S9, S0
	032 Multiply S8, S8, S1
	033 Call Fixed2`1<float4>.get_Item, X0, X1
	034 Move S0, [X19+184]
	035 Move S1, [X19+188]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move X21, [X31+24]
	040 Add S2, S9, S2
	041 Add S3, S8, S3
	042 Multiply S0, S0, S2
	043 Multiply S1, S3, S1
	044 Move D9, [X31+48]
	045 Move D8, [X31+56]
	046 Return X0

Method: System.Void ExpandY(Unity.Mathematics.float3 positionVS)

Disassembly:
	0x03A7F104 FNEG S0, S0
	0x03A7F108 FDIV S1, S1, S8
	0x03A7F10C FNEG S2, S1
	0x03A7F110 FDIV S0, S0, S8
	0x03A7F114 FSUB S14, S2, S0
	0x03A7F118 FSUB S8, S1, S0
	0x03A7F11C CBNZ W8, 0x3A7F134
	0x03A7F120 ADRP X0, 0x674000
	0x03A7F124 LDR X0, [X0 + 0x5A8]
	0x03A7F128 BL 0x1C16CF4
	0x03A7F12C MOVZ W8, 0x1
	0x03A7F130 STRB W8, [X21 + 0x585]
	0x03A7F134 LDR X0, [X22]
	0x03A7F138 FSUB S12, S8, S14
	0x03A7F13C LDR W8, [X0 + 0xE0]
	0x03A7F140 CBZ W8, 0x3A7F14C
	0x03A7F144 MOV W8, W31
	0x03A7F148 B 0x3A7F15C
	0x03A7F14C BL 0x1C16DFC
	0x03A7F150 LDRB W8, [X21 + 0x585]
	0x03A7F154 CMP W8, 0x0
	0x03A7F158 CSET W8, EQ
	0x03A7F15C FMUL S0, S12, S12
	0x03A7F160 FMOV S1, 4
	0x03A7F164 FADD S0, S0, S1
	0x03A7F168 FMOV S2, 1
	0x03A7F16C FSQRT S0, S0
	0x03A7F170 FDIV S0, S2, S0
	0x03A7F174 FADD S13, S0, S0
	0x03A7F178 FNEG S8, S13
	0x03A7F17C FMUL S15, S12, S0
	0x03A7F180 FMUL S0, S14, S8
	0x03A7F184 FSUB S9, S0, S15
	0x03A7F188 FMUL S10, S11, S11
	0x03A7F18C FMUL S12, S9, S9
	0x03A7F190 CBZ W8, 0x3A7F1A8
	0x03A7F194 ADRP X0, 0x674000
	0x03A7F198 LDR X0, [X0 + 0x5A8]
	0x03A7F19C BL 0x1C16CF4
	0x03A7F1A0 MOVZ W8, 0x1
	0x03A7F1A4 STRB W8, [X21 + 0x585]
	0x03A7F1A8 LDR X0, [X22]
	0x03A7F1AC FMUL S14, S15, S9
	0x03A7F1B0 FMUL S11, S9, S8
	0x03A7F1B4 FSUB S8, S10, S12
	0x03A7F1B8 LDR W8, [X0 + 0xE0]
	0x03A7F1BC CBZ W8, 0x3A7F1C8
	0x03A7F1C0 MOV W8, W31
	0x03A7F1C4 B 0x3A7F1D8
	0x03A7F1C8 BL 0x1C16DFC
	0x03A7F1CC LDRB W8, [X21 + 0x585]
	0x03A7F1D0 CMP W8, 0x0
	0x03A7F1D4 CSET W8, EQ
	0x03A7F1D8 LDP S2, S3, [X31 + 0x14]
	0x03A7F1DC LDR V4, [X31 + 0x1C]
	0x03A7F1E0 FSQRT S0, S8
	0x03A7F1E4 FMUL S12, S13, S0
	0x03A7F1E8 FMUL S13, S15, S0
	0x03A7F1EC FADD S0, S14, S12
	0x03A7F1F0 FMUL S2, S2, S0
	0x03A7F1F4 FMUL S3, S3, S0
	0x03A7F1F8 FMUL S0, S4, S0
	0x03A7F1FC LDP S4, S5, [X31 + 0x20]
	0x03A7F200 LDR V6, [X31 + 0x28]
	0x03A7F204 FADD S1, S11, S13
	0x03A7F208 FMUL S4, S4, S1
	0x03A7F20C FMUL S5, S5, S1
	0x03A7F210 FMUL S1, S6, S1
	0x03A7F214 LDR V6, [X31 + 0x10]
	0x03A7F218 FADD S2, S6, S2
	0x03A7F21C LDR V6, [X31 + 0xC]
	0x03A7F220 FADD S8, S4, S2
	0x03A7F224 FADD S3, S6, S3

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x964000
	009 Move X20, 0x6A0000
	010 Move W8, [X21+785]
	011 Move X20, [X20+3512]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x6A0000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+785], W8
	025 Move X0, [X20]
	026 Move [X31+12], W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move V0, V10
	033 Move V1, V9
	034 Move V2, V8
	035 Call TilingJob.ViewToTileSpace, X0, X1
	036 Move W9, 0x7F800000
	037 Move S2, W9
	038 Move W9, [X19+252]
	039 NotImplemented "Instruction FCVTZS not yet implemented."
	040 Move W10, 0x80000000
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Subtract W8, W9, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Add X0, X19, 262
	050 NotImplemented "Instruction BIC not yet implemented."
	051 Move X2, X31
	052 Call InclusiveRange.Expand, X0, X1
	053 Move TEMP, X21
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfEqual {80}
	057 Move TEMP, X20
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {80}
	061 Move W8, [X19+252]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+248]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, [X19+268]
	066 Move X9, [X19+32]
	067 Add W21, W21, 1
	068 Add X0, X31, 12
	069 Add W8, W21, W8
	070 Move W8, [X9]
	071 Move W1, W20
	072 Move X2, X31
	073 Move [X31+12], W8
	074 Call InclusiveRange.Expand, X0, X1
	075 Move W8, [X19+268]
	076 Move W9, [X31+12]
	077 Move X10, [X19+32]
	078 Add W8, W21, W8
	079 Move [X10], W9
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Move D9, [X31+16]
	085 Move D8, [X31+24]
	086 Move V10, [X31+64]
	087 Return 

Method: System.Void ExpandOrthographic(Unity.Mathematics.float3 positionVS)

Disassembly:
	0x03A80F78 CBNZ W8, 0x3A80F80
	0x03A80F7C BL 0x1C16DFC
	0x03A80F80 MOV X0, X19
	0x03A80F84 MOV X1, X31
	0x03A80F88 MOV X2, X31
	0x03A80F8C BL 0x3C3883C
	0x03A80F90 TBNZ X0, 0x0, 0x3A80FB4
	0x03A80F94 CBZ X19, 0x3A80FC0
	0x03A80F98 LDR X8, [X19 + 0xC0]
	0x03A80F9C CBZ X8, 0x3A80FB4
	0x03A80FA0 MOV X0, X19
	0x03A80FA4 LDP X20, X19, [X31 + 0x10]
	0x03A80FA8 MOV X1, X31
	0x03A80FAC LDP X30, X21, [X31], #0x20
	0x03A80FB0 B 0x3A80FC4
	0x03A80FB4 LDP X20, X19, [X31 + 0x10]
	0x03A80FB8 LDP X30, X21, [X31], #0x20
	0x03A80FBC RET
	0x03A80FC0 BL 0x1C16F20
	0x03A80FC4 STR X30, [X31 - 0x30]!
	0x03A80FC8 STP X22, X21, [X31 + 0x10]
	0x03A80FCC STP X20, X19, [X31 + 0x20]
	0x03A80FD0 ADRP X21, 0x962000
	0x03A80FD4 LDRB W8, [X21 + 0x32C]
	0x03A80FD8 MOV X19, X1
	0x03A80FDC MOV X20, X0
	0x03A80FE0 TBNZ X8, 0x0, 0x3A8101C
	0x03A80FE4 ADRP X0, 0x6D7000
	0x03A80FE8 LDR X0, [X0 + 0x70]
	0x03A80FEC BL 0x1C16CF4
	0x03A80FF0 ADRP X0, 0x6D7000
	0x03A80FF4 LDR X0, [X0 + 0x78]
	0x03A80FF8 BL 0x1C16CF4
	0x03A80FFC ADRP X0, 0x6D7000
	0x03A81000 LDR X0, [X0 + 0x80]
	0x03A81004 BL 0x1C16CF4
	0x03A81008 ADRP X0, 0x6D6000
	0x03A8100C LDR X0, [X0 + 0x50]
	0x03A81010 BL 0x1C16CF4
	0x03A81014 MOVZ W8, 0x1
	0x03A81018 STRB W8, [X21 + 0x32C]
	0x03A8101C CBZ X19, 0x3A81034
	0x03A81020 STR X19, [X20 + 0xC0]
	0x03A81024 LDP X20, X19, [X31 + 0x20]
	0x03A81028 LDP X22, X21, [X31 + 0x10]
	0x03A8102C LDR X30, [X31], #0x30
	0x03A81030 RET
	0x03A81034 LDR X8, [X20 + 0xC0]
	0x03A81038 CBZ X8, 0x3A81020
	0x03A8103C ADRP X22, 0x6D6000
	0x03A81040 LDR X22, [X22 + 0x50]
	0x03A81044 LDR X8, [X22]
	0x03A81048 LDR X8, [X8 + 0xB8]
	0x03A8104C LDR X21, [X8 + 0x8]
	0x03A81050 CBNZ X21, 0x3A8108C
	0x03A81054 ADRP X8, 0x6D6000
	0x03A81058 LDR X8, [X8 + 0x80]
	0x03A8105C LDR X0, [X8]
	0x03A81060 BL 0x1C16F10
	0x03A81064 ADRP X8, 0x6D6000
	0x03A81068 LDR X8, [X8 + 0x78]
	0x03A8106C MOVZ W1, 0x4
	0x03A81070 MOV X21, X0
	0x03A81074 LDR X2, [X8]
	0x03A81078 BL 0x301B830
	0x03A8107C LDR X8, [X22]
	0x03A81080 LDR X8, [X8 + 0xB8]
	0x03A81084 STR X21, [X8 + 0x8]
	0x03A81088 CBZ X21, 0x3A810EC
	0x03A8108C ADRP X9, 0x6D6000
	0x03A81090 LDR X1, [X20 + 0xC0]
	0x03A81094 LDR X9, [X9 + 0x70]
	0x03A81098 LDR W10, [X21 + 0x1C]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x963000
	009 Move X20, 0x69F000
	010 Move W8, [X21+786]
	011 Move X20, [X20+3512]
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x69F000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+786], W8
	025 Move X0, [X20]
	026 Move [X31+12], W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move V0, V10
	033 Move V1, V9
	034 Move V2, V8
	035 Call TilingJob.ViewToTileSpaceOrthographic, X0, X1
	036 Move W9, 0x7F800000
	037 Move S2, W9
	038 Move W9, [X19+252]
	039 NotImplemented "Instruction FCVTZS not yet implemented."
	040 Move W10, 0x80000000
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Subtract W8, W9, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Add X0, X19, 262
	050 NotImplemented "Instruction BIC not yet implemented."
	051 Move X2, X31
	052 Call InclusiveRange.Expand, X0, X1
	053 Move TEMP, X21
	054 And TEMP, TEMP, -2147483648
	055 Compare TEMP, -2147483648
	056 JumpIfEqual {80}
	057 Move TEMP, X20
	058 And TEMP, TEMP, -2147483648
	059 Compare TEMP, -2147483648
	060 JumpIfEqual {80}
	061 Move W8, [X19+252]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X19+248]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W8, [X19+268]
	066 Move X9, [X19+32]
	067 Add W21, W21, 1
	068 Add X0, X31, 12
	069 Add W8, W21, W8
	070 Move W8, [X9]
	071 Move W1, W20
	072 Move X2, X31
	073 Move [X31+12], W8
	074 Call InclusiveRange.Expand, X0, X1
	075 Move W8, [X19+268]
	076 Move W9, [X31+12]
	077 Move X10, [X19+32]
	078 Add W8, W21, W8
	079 Move [X10], W9
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Move D9, [X31+16]
	085 Move D8, [X31+24]
	086 Move V10, [X31+64]
	087 Return 

Method: System.Void ExpandRangeOrthographic(ref UnityEngine.Rendering.Universal.InclusiveRange range, System.Single xVS)

Disassembly:
	0x03A8118C LDP X30, X21, [X31], #0x20
	0x03A81190 RET
	0x03A81194 BL 0x1C16F20
	0x03A81198 BL 0x1C16F28
	0x03A8119C STR X30, [X31 - 0x30]!
	0x03A811A0 STP X22, X21, [X31 + 0x10]
	0x03A811A4 STP X20, X19, [X31 + 0x20]
	0x03A811A8 ADRP X21, 0x961000
	0x03A811AC ADRP X19, 0x6D6000
	0x03A811B0 ADRP X20, 0x672000
	0x03A811B4 LDRB W8, [X21 + 0x323]
	0x03A811B8 LDR X19, [X19 + 0x90]
	0x03A811BC LDR X20, [X20 + 0x6C0]
	0x03A811C0 TBNZ X8, 0x0, 0x3A81208
	0x03A811C4 ADRP X0, 0x6D6000
	0x03A811C8 LDR X0, [X0 + 0x90]
	0x03A811CC BL 0x1C16CF4
	0x03A811D0 ADRP X0, 0x6D6000
	0x03A811D4 LDR X0, [X0 + 0x88]
	0x03A811D8 BL 0x1C16CF4
	0x03A811DC ADRP X0, 0x672000
	0x03A811E0 LDR X0, [X0 + 0xDF8]
	0x03A811E4 BL 0x1C16CF4
	0x03A811E8 ADRP X0, 0x672000
	0x03A811EC LDR X0, [X0 + 0xEB8]
	0x03A811F0 BL 0x1C16CF4
	0x03A811F4 ADRP X0, 0x672000
	0x03A811F8 LDR X0, [X0 + 0x6C0]
	0x03A811FC BL 0x1C16CF4
	0x03A81200 MOVZ W8, 0x1
	0x03A81204 STRB W8, [X21 + 0x323]
	0x03A81208 LDR X0, [X20]
	0x03A8120C ADRP X22, 0x672000
	0x03A81210 LDR X19, [X19]
	0x03A81214 LDR W8, [X0 + 0xE0]
	0x03A81218 LDR X22, [X22 + 0xDF8]
	0x03A8121C CBNZ W8, 0x3A81224
	0x03A81220 BL 0x1C16DFC
	0x03A81224 ADRP X21, 0x672000
	0x03A81228 ADRP X20, 0x6D6000
	0x03A8122C LDR X21, [X21 + 0xEB8]
	0x03A81230 LDR X20, [X20 + 0x88]
	0x03A81234 MOV X0, X19
	0x03A81238 MOV X1, X31
	0x03A8123C BL 0x338C698
	0x03A81240 LDR X8, [X22]
	0x03A81244 MOV X19, X0
	0x03A81248 LDR W9, [X8 + 0xE0]
	0x03A8124C CBNZ W9, 0x3A81258
	0x03A81250 MOV X0, X8
	0x03A81254 BL 0x1C16DFC
	0x03A81258 MOV X0, X19
	0x03A8125C MOV X1, X31
	0x03A81260 BL 0x33B03E4
	0x03A81264 LDR X1, [X21]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x962000
	008 Move X22, 0x69E000
	009 Move W8, [X21+787]
	010 Move X22, [X22+3512]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x69E000
	019 Move X0, [X0+3512]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+787], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move V0, V8
	030 Move V1, V8
	031 Move V2, V8
	032 Call TilingJob.ViewToTileSpaceOrthographic, X0, X1
	033 Move W8, [X20+248]
	034 Move W9, S0
	035 And W9, W9, 0x7FFFFFFF
	036 Move W10, 0x7F800000
	037 Subtract W8, W8, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction SCVTF not yet implemented."
	040 NotImplemented "Instruction FCCMP not yet implemented."
	041 NotImplemented "Instruction FCSEL not yet implemented."
	042 Move W8, S0
	043 And W8, W8, 0x7FFFFFFF
	044 Move S1, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction FCCMP not yet implemented."
	047 Move D1, X31
	048 Move X8, 0x7FF00000
	049 NotImplemented "Instruction FCVT not yet implemented."
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+8]
	056 NotImplemented "Instruction FCSEL not yet implemented."
	057 Move D1, X8
	058 NotImplemented "Instruction FCVTZS not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move X2, X31
	062 Move V8, [X31+48]
	063 Call InclusiveRange.Expand, X0, X1
	064 Return 

Method: System.Single square(System.Single x)

Disassembly:
	0x03A7F228 LDR V6, [X31 + 0x8]
	0x03A7F22C FADD S9, S5, S3

ISIL:
	001 Multiply S0, S0, S0
	002 Return V0

Method: System.Void GetSphereHorizon(Unity.Mathematics.float2 center, System.Single radius, System.Single near, System.Single clipRadius, out Unity.Mathematics.float2 p0, out Unity.Mathematics.float2 p1)

Disassembly:
	0x03A7F230 FADD S0, S6, S0
	0x03A7F234 FADD S10, S1, S0
	0x03A7F238 CBZ W8, 0x3A7F250
	0x03A7F23C ADRP X0, 0x674000
	0x03A7F240 LDR X0, [X0 + 0x5A8]
	0x03A7F244 BL 0x1C16CF4
	0x03A7F248 MOVZ W8, 0x1
	0x03A7F24C STRB W8, [X21 + 0x585]
	0x03A7F250 LDR V0, [X31 + 0x7C]
	0x03A7F254 FSUB S15, S11, S13
	0x03A7F258 LDR X0, [X22]
	0x03A7F25C FSUB S12, S14, S12
	0x03A7F260 FSUB S11, S8, S0
	0x03A7F264 LDR V0, [X31 + 0x2C]
	0x03A7F268 LDR W8, [X0 + 0xE0]
	0x03A7F26C FSUB S14, S9, S0
	0x03A7F270 LDR V0, [X31 + 0x78]
	0x03A7F274 FSUB S13, S10, S0
	0x03A7F278 CBZ W8, 0x3A7F284
	0x03A7F27C MOV W8, W31
	0x03A7F280 B 0x3A7F294
	0x03A7F284 BL 0x1C16DFC
	0x03A7F288 LDRB W8, [X21 + 0x585]
	0x03A7F28C CMP W8, 0x0
	0x03A7F290 CSET W8, EQ
	0x03A7F294 FMUL S1, S11, S11
	0x03A7F298 FMUL S2, S14, S14
	0x03A7F29C LDP S3, S4, [X31 + 0x14]
	0x03A7F2A0 FADD S1, S1, S2
	0x03A7F2A4 LDR V2, [X31 + 0x10]
	0x03A7F2A8 LDP S5, S7, [X31 + 0x1C]
	0x03A7F2AC FMUL S3, S3, S12
	0x03A7F2B0 FMUL S4, S4, S12
	0x03A7F2B4 FADD S2, S2, S3
	0x03A7F2B8 LDR V3, [X31 + 0xC]
	0x03A7F2BC LDP S16, S17, [X31 + 0x24]
	0x03A7F2C0 FMUL S0, S13, S13
	0x03A7F2C4 FADD S0, S0, S1
	0x03A7F2C8 FADD S3, S3, S4
	0x03A7F2CC LDR V4, [X31 + 0x8]
	0x03A7F2D0 FMUL S5, S5, S12
	0x03A7F2D4 FMOV S6, 1
	0x03A7F2D8 FSQRT S0, S0
	0x03A7F2DC FMUL S7, S7, S15
	0x03A7F2E0 FMUL S16, S16, S15
	0x03A7F2E4 FMUL S17, S17, S15
	0x03A7F2E8 FADD S4, S4, S5
	0x03A7F2EC FDIV S0, S6, S0
	0x03A7F2F0 FADD S15, S7, S2
	0x03A7F2F4 FADD S8, S16, S3
	0x03A7F2F8 FMUL S10, S11, S0
	0x03A7F2FC FMUL S14, S14, S0
	0x03A7F300 FMUL S9, S13, S0
	0x03A7F304 FADD S12, S17, S4
	0x03A7F308 CBZ W8, 0x3A7F320
	0x03A7F30C ADRP X0, 0x674000
	0x03A7F310 LDR X0, [X0 + 0x5A8]
	0x03A7F314 BL 0x1C16CF4
	0x03A7F318 MOVZ W8, 0x1
	0x03A7F31C STRB W8, [X21 + 0x585]
	0x03A7F320 LDR V6, [X31 + 0x4]
	0x03A7F324 LDR V0, [X31 + 0x7C]
	0x03A7F328 LDR X0, [X22]
	0x03A7F32C LDR V11, [X31 + 0xA8]
	0x03A7F330 FMUL S13, S6, S10
	0x03A7F334 FSUB S10, S15, S0
	0x03A7F338 LDR V0, [X31 + 0x2C]
	0x03A7F33C FMUL S4, S6, S14
	0x03A7F340 FMUL S14, S6, S9
	0x03A7F344 LDR W8, [X0 + 0xE0]
	0x03A7F348 FSUB S9, S8, S0
	0x03A7F34C LDR V0, [X31 + 0x78]
	0x03A7F350 FSUB S8, S12, S0
	0x03A7F354 CBNZ W8, 0x3A7F368
	0x03A7F358 MOV V12.16B, V4.16B
	0x03A7F35C BL 0x1C16DFC
	0x03A7F360 LDR V6, [X31 + 0x4]
	0x03A7F364 MOV V4.16B, V12.16B
	0x03A7F368 FMUL S1, S10, S10
	0x03A7F36C FMUL S2, S9, S9
	0x03A7F370 FMUL S0, S8, S8
	0x03A7F374 FADD S1, S1, S2
	0x03A7F378 FADD S0, S0, S1
	0x03A7F37C FMOV S2, 1
	0x03A7F380 FSQRT S0, S0
	0x03A7F384 FDIV S0, S2, S0
	0x03A7F388 FMUL S1, S10, S0
	0x03A7F38C FMUL S2, S9, S0
	0x03A7F390 FMUL S0, S8, S0
	0x03A7F394 FMUL S1, S6, S1
	0x03A7F398 FMUL S2, S6, S2
	0x03A7F39C FMUL S0, S6, S0
	0x03A7F3A0 FMUL S3, S13, S11
	0x03A7F3A4 FMUL S4, S4, S11
	0x03A7F3A8 FMUL S5, S14, S11
	0x03A7F3AC FMUL S1, S1, S11
	0x03A7F3B0 FMUL S2, S2, S11
	0x03A7F3B4 FMUL S0, S0, S11
	0x03A7F3B8 STP S3, S4, [X20]
	0x03A7F3BC STR S5, [X20 + 0x8]
	0x03A7F3C0 STP S1, S2, [X19]
	0x03A7F3C4 STR S0, [X19 + 0x8]
	0x03A7F3C8 LDP X20, X19, [X31 + 0x90]
	0x03A7F3CC LDP X22, X21, [X31 + 0x80]
	0x03A7F3D0 LDR X30, [X31 + 0x70]
	0x03A7F3D4 LDP D9, D8, [X31 + 0x60]
	0x03A7F3D8 LDP D11, D10, [X31 + 0x50]
	0x03A7F3DC LDP D13, D12, [X31 + 0x40]
	0x03A7F3E0 LDP D15, D14, [X31 + 0x30]
	0x03A7F3E4 ADD X31, X31, 0xA0
	0x03A7F3E8 RET
	0x03A7F3EC STR D10, [X31 - 0x40]!
	0x03A7F3F0 STP D9, D8, [X31 + 0x10]
	0x03A7F3F4 STP X30, X21, [X31 + 0x20]
	0x03A7F3F8 STP X20, X19, [X31 + 0x30]
	0x03A7F3FC ADRP X20, 0x963000
	0x03A7F400 ADRP X21, 0x6D8000
	0x03A7F404 LDRB W8, [X20 + 0x30F]
	0x03A7F408 LDR X21, [X21 + 0x20]
	0x03A7F40C MOV V8.16B, V2.16B
	0x03A7F410 MOV V9.16B, V1.16B
	0x03A7F414 MOV V10.16B, V0.16B
	0x03A7F418 MOV X19, X0
	0x03A7F41C TBNZ X8, 0x0, 0x3A7F434
	0x03A7F420 ADRP X0, 0x6D8000
	0x03A7F424 LDR X0, [X0 + 0x20]
	0x03A7F428 BL 0x1C16CF4
	0x03A7F42C MOVZ W8, 0x1
	0x03A7F430 STRB W8, [X20 + 0x30F]
	0x03A7F434 LDR W1, [X19 + 0x110]
	0x03A7F438 LDR X2, [X21]
	0x03A7F43C ADD X20, X19, 0xD8
	0x03A7F440 MOV X0, X20
	0x03A7F444 FDIV S10, S10, S8
	0x03A7F448 FDIV S8, S9, S8
	0x03A7F44C BL 0x2D1F55C
	0x03A7F450 LDR W1, [X19 + 0x110]
	0x03A7F454 LDR X2, [X21]
	0x03A7F458 MOV X0, X20
	0x03A7F45C FMUL S9, S10, S0
	0x03A7F460 FMUL S8, S8, S1
	0x03A7F464 BL 0x2D1F55C
	0x03A7F468 LDP S0, S1, [X19 + 0xB8]
	0x03A7F46C FADD S2, S9, S2
	0x03A7F470 FADD S3, S8, S3
	0x03A7F474 LDP X20, X19, [X31 + 0x30]
	0x03A7F478 LDP X30, X21, [X31 + 0x20]
	0x03A7F47C LDP D9, D8, [X31 + 0x10]
	0x03A7F480 FMUL S0, S0, S2
	0x03A7F484 FMUL S1, S3, S1
	0x03A7F488 LDR V10, [X31], #0x40
	0x03A7F48C RET
	0x03A7F490 SUB X31, X31, 0x90
	0x03A7F494 STP D15, D14, [X31 + 0x20]
	0x03A7F498 STP D13, D12, [X31 + 0x30]
	0x03A7F49C STP D11, D10, [X31 + 0x40]
	0x03A7F4A0 STP D9, D8, [X31 + 0x50]
	0x03A7F4A4 STR X30, [X31 + 0x60]
	0x03A7F4A8 STP X22, X21, [X31 + 0x70]
	0x03A7F4AC STP X20, X19, [X31 + 0x80]
	0x03A7F4B0 MOV V10.16B, V1.16B

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x964000
	015 Move W8, [X21+788]
	016 Move X19, X1
	017 Move X20, X0
	018 Move V9, V2
	019 Move V12, V1
	020 Move V14, V0
	021 Move [X31+72], S4
	022 Move [X31+80], S3
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x6A0000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+788], W8
	032 Move X22, 0x963000
	033 Move W8, [X22+1413]
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x675000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+1413], W8
	041 Move X21, 0x675000
	042 Move X21, [X21+1448]
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfEqual {48}
	047 Move W8, W31
	048 Call 0x1C17DFC
	049 Move W8, [X22+1413]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Multiply S0, S14, S14
	053 Multiply S1, S12, S12
	054 Add S8, S0, S1
	055 Compare W8, 0
	056 JumpIfEqual {62}
	057 Move X0, 0x675000
	058 Move X0, [X0+1448]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+1413], W8
	062 Move X0, [X21]
	063 NotImplemented "Instruction FSQRT not yet implemented."
	064 Move S8, 1
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfEqual {71}
	068 Multiply S0, S10, S10
	069 Multiply S1, S9, S9
	070 Subtract S13, S0, S1
	071 Call 0x1C17DFC
	072 Move W8, [X22+1413]
	073 Multiply S0, S10, S10
	074 Multiply S1, S9, S9
	075 Subtract S13, S0, S1
	076 Compare W8, 0
	077 JumpIfNotEqual {83}
	078 Move X0, 0x675000
	079 Move X0, [X0+1448]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X22+1413], W8
	083 Move X0, [X21]
	084 NotImplemented "Instruction FDIV not yet implemented."
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X21, 0x6A0000
	090 Move X21, [X21+3512]
	091 Move V4, [X31+76]
	092 Move X8, -49876992
	093 NotImplemented "Instruction FSQRT not yet implemented."
	094 Move V1, [X8+3176]
	095 Move X8, -49872896
	096 Subtract S2, S12, S9
	097 Multiply S3, S0, S9
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move V2, [X8+1344]
	100 Multiply S8, S14, S11
	101 Multiply S15, S12, S11
	102 NotImplemented "Instruction FDIV not yet implemented."
	103 Multiply S0, S0, S11
	104 NotImplemented "Instruction FDIV not yet implemented."
	105 Move [X20], D1
	106 Move [X19], D2
	107 Move V2, [X31+72]
	108 Move V1, [X31+76]
	109 Add S3, S14, S2
	110 Subtract S2, S14, S2
	111 Move [X20], S3
	112 Move [X20+8], S1
	113 Move [X19], S2
	114 Move [X19+8], S1
	115 Move X0, [X21]
	116 Multiply S13, S8, S0
	117 Multiply S14, S15, S0
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move V0, V10
	123 Multiply S12, S8, S11
	124 Multiply S11, S15, S11
	125 Call TilingJob.square, V0
	126 Move V10, V0
	127 Move V0, V9
	128 Call TilingJob.square, V0
	129 Move V9, V0
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move S0, W31
	132 NotImplemented "Instruction FCSEL not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 Move V1, [X31+76]
	135 Add S0, S12, S14
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 Move V2, [X20]
	138 Subtract S1, S13, S11
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Move [X20], S1
	141 Move [X20+8], S0
	142 Move V2, [X19]
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move [X19], S1
	145 Move [X19+8], S0
	146 Move V8, V14
	147 Move V15, V13
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Move V1, [X31+76]
	155 Subtract S0, S8, S12
	156 NotImplemented "Instruction FCMP not yet implemented."
	157 Move V2, [X20]
	158 Add S1, S11, S15
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 Move [X20], S1
	161 Move [X20+8], S0
	162 Move V2, [X19]
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move [X19], S1
	165 Move [X19+8], S0
	166 Move X20, [X31+96]
	167 Move X19, [X31+104]
	168 Move X22, [X31+80]
	169 Move X21, [X31+88]
	170 Move X30, [X31+64]
	171 Move D9, [X31+48]
	172 Move D8, [X31+56]
	173 Move D11, [X31+32]
	174 Move D10, [X31+40]
	175 Move D13, [X31+16]
	176 Move D12, [X31+24]
	177 Move D15, [X31+112]
	178 Move D14, [X31+120]
	179 Return 

Method: System.Void GetSphereYPlaneHorizon(Unity.Mathematics.float3 center, System.Single sphereRadius, System.Single near, System.Single clipRadius, System.Single y, out Unity.Mathematics.float3 left, out Unity.Mathematics.float3 right)

Disassembly:
	0x03A80B9C CBNZ X8, 0x3A80BA8
	0x03A80BA0 MOV X0, X19
	0x03A80BA4 BL 0x3A80C24
	0x03A80BA8 ADD X2, X31, 0x8
	0x03A80BAC ADD X3, X31, 0x0
	0x03A80BB0 MOV X0, X20
	0x03A80BB4 MOV X1, X19
	0x03A80BB8 BL 0x3A80D40
	0x03A80BBC ADRP X8, 0x69D000
	0x03A80BC0 LDR X8, [X8 + 0xFC0]
	0x03A80BC4 LDR X0, [X8]
	0x03A80BC8 LDR W8, [X0 + 0xE0]
	0x03A80BCC CBNZ W8, 0x3A80BD4
	0x03A80BD0 BL 0x1C16DFC
	0x03A80BD4 MOV X0, X31
	0x03A80BD8 BL 0x39EE864
	0x03A80BDC CBZ X0, 0x3A80C04
	0x03A80BE0 LDR W3, [X31 + 0x8]
	0x03A80BE4 LDR X2, [X31]
	0x03A80BE8 LDR X1, [X19 + 0xC0]
	0x03A80BEC MOV X4, X31
	0x03A80BF0 BL 0x39F1D38
	0x03A80BF4 LDP X20, X19, [X31 + 0x20]
	0x03A80BF8 LDP X30, X21, [X31 + 0x10]
	0x03A80BFC ADD X31, X31, 0x30
	0x03A80C00 RET
	0x03A80C04 BL 0x1C16F20
	0x03A80C08 STP X30, X19, [X31 - 0x10]!
	0x03A80C0C MOV X19, X0
	0x03A80C10 BL 0x3A809B0
	0x03A80C14 MOV X1, X0
	0x03A80C18 MOV X0, X19
	0x03A80C1C LDP X30, X19, [X31], #0x10
	0x03A80C20 B 0x3A80B4C
	0x03A80C24 STP X30, X21, [X31 - 0x20]!
	0x03A80C28 STP X20, X19, [X31 + 0x10]
	0x03A80C2C ADRP X20, 0x962000
	0x03A80C30 ADRP X21, 0x6D7000
	0x03A80C34 LDRB W8, [X20 + 0x32D]
	0x03A80C38 LDR X21, [X21 + 0x50]
	0x03A80C3C MOV X19, X0
	0x03A80C40 TBNZ X8, 0x0, 0x3A80C88
	0x03A80C44 ADRP X0, 0x6D7000
	0x03A80C48 LDR X0, [X0 + 0x58]
	0x03A80C4C BL 0x1C16CF4
	0x03A80C50 ADRP X0, 0x6D7000
	0x03A80C54 LDR X0, [X0 + 0x60]
	0x03A80C58 BL 0x1C16CF4
	0x03A80C5C ADRP X0, 0x6D7000
	0x03A80C60 LDR X0, [X0 + 0x68]
	0x03A80C64 BL 0x1C16CF4
	0x03A80C68 ADRP X0, 0x6D7000
	0x03A80C6C LDR X0, [X0 + 0x50]
	0x03A80C70 BL 0x1C16CF4
	0x03A80C74 ADRP X0, 0x69D000
	0x03A80C78 LDR X0, [X0 + 0xFC0]
	0x03A80C7C BL 0x1C16CF4
	0x03A80C80 MOVZ W8, 0x1
	0x03A80C84 STRB W8, [X20 + 0x32D]
	0x03A80C88 LDR X8, [X21]
	0x03A80C8C LDR X8, [X8 + 0xB8]
	0x03A80C90 LDR X0, [X8 + 0x8]
	0x03A80C94 CBZ X0, 0x3A80CE8
	0x03A80C98 LDR W8, [X0 + 0x18]
	0x03A80C9C SUBS W20, W8, 0x1
	0x03A80CA0 B.LT 0x3A80CE8
	0x03A80CA4 ADRP X8, 0x6D7000
	0x03A80CA8 LDR X8, [X8 + 0x68]
	0x03A80CAC MOV W1, W20
	0x03A80CB0 LDR X2, [X8]
	0x03A80CB4 BL 0x301BCCC
	0x03A80CB8 MOV X1, X0
	0x03A80CBC MOV X0, X19
	0x03A80CC0 BL 0x3A80FC4
	0x03A80CC4 LDR X8, [X21]
	0x03A80CC8 LDR X8, [X8 + 0xB8]
	0x03A80CCC LDR X0, [X8 + 0x8]
	0x03A80CD0 CBZ X0, 0x3A80D3C
	0x03A80CD4 ADRP X8, 0x6D7000
	0x03A80CD8 LDR X8, [X8 + 0x58]
	0x03A80CDC MOV W1, W20
	0x03A80CE0 LDR X2, [X8]
	0x03A80CE4 BL 0x301DA48
	0x03A80CE8 LDR X8, [X19 + 0xC0]
	0x03A80CEC CBZ X8, 0x3A80CFC
	0x03A80CF0 LDP X20, X19, [X31 + 0x10]
	0x03A80CF4 LDP X30, X21, [X31], #0x20
	0x03A80CF8 RET
	0x03A80CFC ADRP X8, 0x69D000
	0x03A80D00 LDR X8, [X8 + 0xFC0]
	0x03A80D04 LDR X0, [X8]
	0x03A80D08 LDR W8, [X0 + 0xE0]
	0x03A80D0C CBNZ W8, 0x3A80D14
	0x03A80D10 BL 0x1C16DFC
	0x03A80D14 MOV X0, X31
	0x03A80D18 BL 0x39EE864
	0x03A80D1C CBZ X0, 0x3A80D3C
	0x03A80D20 MOV X1, X31
	0x03A80D24 BL 0x39F12B8
	0x03A80D28 MOV X1, X0
	0x03A80D2C MOV X0, X19
	0x03A80D30 LDP X20, X19, [X31 + 0x10]
	0x03A80D34 LDP X30, X21, [X31], #0x20
	0x03A80D38 B 0x3A80FC4
	0x03A80D3C BL 0x1C16F20
	0x03A80D40 SUB X31, X31, 0x40
	0x03A80D44 STP X30, X23, [X31 + 0x10]
	0x03A80D48 STP X22, X21, [X31 + 0x20]
	0x03A80D4C STP X20, X19, [X31 + 0x30]
	0x03A80D50 ADRP X23, 0x962000
	0x03A80D54 LDRB W8, [X23 + 0x321]
	0x03A80D58 MOV X19, X3
	0x03A80D5C MOV X20, X2
	0x03A80D60 MOV X21, X1
	0x03A80D64 MOV X22, X0
	0x03A80D68 TBNZ X8, 0x0, 0x3A80D8C
	0x03A80D6C ADRP X0, 0x6D4000
	0x03A80D70 LDR X0, [X0 + 0x918]
	0x03A80D74 BL 0x1C16CF4
	0x03A80D78 ADRP X0, 0x673000
	0x03A80D7C LDR X0, [X0 + 0x598]
	0x03A80D80 BL 0x1C16CF4
	0x03A80D84 MOVZ W8, 0x1
	0x03A80D88 STRB W8, [X23 + 0x321]
	0x03A80D8C MOVZ W0, 0x1
	0x03A80D90 MOV X1, X31
	0x03A80D94 BL 0x3C35CBC
	0x03A80D98 STR W0, [X20]
	0x03A80D9C CBZ X22, 0x3A80F24
	0x03A80DA0 ADRP X23, 0x673000
	0x03A80DA4 LDR X23, [X23 + 0x598]
	0x03A80DA8 MOV X0, X22
	0x03A80DAC MOV X1, X31
	0x03A80DB0 BL 0x3C32E90
	0x03A80DB4 STR X0, [X19]
	0x03A80DB8 LDR X0, [X23]
	0x03A80DBC LDR W8, [X0 + 0xE0]
	0x03A80DC0 CBNZ W8, 0x3A80DC8
	0x03A80DC4 BL 0x1C16DFC
	0x03A80DC8 MOV X0, X21
	0x03A80DCC MOV X1, X31
	0x03A80DD0 MOV X2, X31
	0x03A80DD4 BL 0x3C354F8
	0x03A80DD8 TBZ X0, 0x0, 0x3A80E18
	0x03A80DDC CBZ X21, 0x3A80F24
	0x03A80DE0 LDR W8, [X21 + 0x3C]
	0x03A80DE4 STR W8, [X20]
	0x03A80DE8 LDR X20, [X21 + 0x40]!
	0x03A80DEC LDR X0, [X23]
	0x03A80DF0 LDR W8, [X0 + 0xE0]
	0x03A80DF4 CBNZ W8, 0x3A80DFC
	0x03A80DF8 BL 0x1C16DFC
	0x03A80DFC MOV X0, X20
	0x03A80E00 MOV X1, X31
	0x03A80E04 MOV X2, X31
	0x03A80E08 BL 0x3C354F8
	0x03A80E0C ANDS W31, W0, 0x1
	0x03A80E10 CSEL X8, X21, X19, NE
	0x03A80E14 B 0x3A80F08
	0x03A80E18 MOV X0, X22
	0x03A80E1C MOV X1, X31
	0x03A80E20 BL 0x3C03AD4
	0x03A80E24 CMP W0, 0x2
	0x03A80E28 B.NE 0x3A80F10
	0x03A80E2C MOV X0, X31
	0x03A80E30 BL 0x3C047F8
	0x03A80E34 LDR X8, [X23]
	0x03A80E38 STR X31, [X31 + 0x8]
	0x03A80E3C MOV X21, X0
	0x03A80E40 LDR W9, [X8 + 0xE0]
	0x03A80E44 CBNZ W9, 0x3A80E50
	0x03A80E48 MOV X0, X8
	0x03A80E4C BL 0x1C16DFC
	0x03A80E50 MOV X0, X21
	0x03A80E54 MOV X1, X31
	0x03A80E58 MOV X2, X31
	0x03A80E5C BL 0x3C354F8
	0x03A80E60 MOV X22, X31
	0x03A80E64 TBZ X0, 0x0, 0x3A80EA0
	0x03A80E68 CBZ X21, 0x3A80F24
	0x03A80E6C ADRP X8, 0x6D4000
	0x03A80E70 LDR X8, [X8 + 0x918]
	0x03A80E74 ADD X1, X31, 0x8
	0x03A80E78 MOV X0, X21
	0x03A80E7C LDR X2, [X8]
	0x03A80E80 BL 0x21A4990
	0x03A80E84 TBZ X0, 0x0, 0x3A80E9C
	0x03A80E88 LDR X22, [X31 + 0x8]
	0x03A80E8C CBZ X22, 0x3A80F24
	0x03A80E90 LDR W8, [X22 + 0x3C]
	0x03A80E94 STR W8, [X20]
	0x03A80E98 B 0x3A80EA0
	0x03A80E9C LDR X22, [X31 + 0x8]
	0x03A80EA0 LDR X0, [X23]
	0x03A80EA4 LDR W8, [X0 + 0xE0]
	0x03A80EA8 CBNZ W8, 0x3A80EB0
	0x03A80EAC BL 0x1C16DFC
	0x03A80EB0 MOV X0, X22
	0x03A80EB4 MOV X1, X31
	0x03A80EB8 MOV X2, X31
	0x03A80EBC BL 0x3C354F8
	0x03A80EC0 MOV X8, X19
	0x03A80EC4 TBZ X0, 0x0, 0x3A80F08
	0x03A80EC8 LDR X8, [X31 + 0x8]
	0x03A80ECC CBZ X8, 0x3A80F24
	0x03A80ED0 LDR X0, [X23]
	0x03A80ED4 LDR X20, [X8 + 0x40]
	0x03A80ED8 LDR W9, [X0 + 0xE0]
	0x03A80EDC CBNZ W9, 0x3A80EE4
	0x03A80EE0 BL 0x1C16DFC
	0x03A80EE4 MOV X0, X20
	0x03A80EE8 MOV X1, X31
	0x03A80EEC MOV X2, X31
	0x03A80EF0 BL 0x3C354F8
	0x03A80EF4 MOV X8, X19
	0x03A80EF8 TBZ X0, 0x0, 0x3A80F08
	0x03A80EFC LDR X8, [X31 + 0x8]
	0x03A80F00 CBZ X8, 0x3A80F24
	0x03A80F04 ADD X8, X8, 0x40
	0x03A80F08 LDR X8, [X8]
	0x03A80F0C STR X8, [X19]
	0x03A80F10 LDP X20, X19, [X31 + 0x30]
	0x03A80F14 LDP X22, X21, [X31 + 0x20]
	0x03A80F18 LDP X30, X23, [X31 + 0x10]
	0x03A80F1C ADD X31, X31, 0x40
	0x03A80F20 RET
	0x03A80F24 BL 0x1C16F20
	0x03A80F28 STR X30, [X31 - 0x10]!
	0x03A80F2C BL 0x3A809B0
	0x03A80F30 MOV X1, X0
	0x03A80F34 LDR X30, [X31], #0x10
	0x03A80F38 B 0x3A80F3C
	0x03A80F3C STP X30, X21, [X31 - 0x20]!
	0x03A80F40 STP X20, X19, [X31 + 0x10]
	0x03A80F44 ADRP X20, 0x962000
	0x03A80F48 ADRP X21, 0x673000
	0x03A80F4C LDRB W8, [X20 + 0x320]
	0x03A80F50 LDR X21, [X21 + 0x598]
	0x03A80F54 MOV X19, X1
	0x03A80F58 TBNZ X8, 0x0, 0x3A80F70
	0x03A80F5C ADRP X0, 0x673000
	0x03A80F60 LDR X0, [X0 + 0x598]
	0x03A80F64 BL 0x1C16CF4
	0x03A80F68 MOVZ W8, 0x1
	0x03A80F6C STRB W8, [X20 + 0x320]
	0x03A80F70 LDR X0, [X21]
	0x03A80F74 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move [X31+76], S2
	017 Move X22, 0x963000
	018 Move X21, 0x69F000
	019 Move W8, [X22+789]
	020 Move X21, [X21+3512]
	021 Move X19, X1
	022 Move X20, X0
	023 Move V9, V6
	024 Move V14, V5
	025 Move V8, V4
	026 Move V13, V3
	027 Move V10, V1
	028 Move V12, V0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x69F000
	034 Move X0, [X0+3512]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+789], W8
	038 Move X0, [X21]
	039 Multiply S11, S8, S9
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move V0, V14
	045 Call TilingJob.square, V0
	046 Move V14, V0
	047 Subtract S0, S11, S10
	048 Call TilingJob.square, V0
	049 Move X22, 0x962000
	050 Move W8, [X22+1413]
	051 Move V15, V0
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x674000
	055 Move X0, [X0+1448]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+1413], W8
	059 Move X23, 0x674000
	060 Move X23, [X23+1448]
	061 Subtract S14, S14, S15
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfEqual {67}
	066 Move W8, W31
	067 Call 0x1C17DFC
	068 Move W8, [X22+1413]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 NotImplemented "Instruction FSQRT not yet implemented."
	072 Subtract S1, S12, S0
	073 Add S0, S12, S0
	074 Move [X20+4], S11
	075 Move [X20+12], S8
	076 Move [X20], S1
	077 Move [X19], S0
	078 Move [X19+8], S11
	079 Move [X19+8], S8
	080 Compare W8, 0
	081 JumpIfEqual {87}
	082 Move X0, 0x674000
	083 Move X0, [X0+1448]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X22+1413], W8
	087 Move X0, [X23]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfEqual {106}
	091 Move W8, W31
	092 Compare W8, 0
	093 JumpIfEqual {99}
	094 Move X0, 0x674000
	095 Move X0, [X0+1448]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X22+1413], W8
	099 Move X0, [X23]
	100 Multiply S15, S9, S9
	101 NotImplemented "Instruction FNEG not yet implemented."
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfEqual {112}
	105 Move W8, W31
	106 Call 0x1C17DFC
	107 Move W8, [X22+1413]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSET not yet implemented."
	110 Compare W8, 0
	111 JumpIfNotEqual {94}
	112 Call 0x1C17DFC
	113 Move W8, [X22+1413]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Move S0, 1
	117 Add S1, S15, S0
	118 NotImplemented "Instruction FSQRT not yet implemented."
	119 Move S11, W31
	120 NotImplemented "Instruction FDIV not yet implemented."
	121 Multiply S1, S0, S11
	122 Multiply S2, S0, S14
	123 Multiply S0, S10, S0
	124 Multiply S1, S12, S1
	125 Add S0, S0, S1
	126 Move V1, [X31+76]
	127 Multiply S1, S1, S2
	128 Add S14, S1, S0
	129 Compare W8, 0
	130 JumpIfEqual {136}
	131 Move X0, 0x674000
	132 Move X0, [X0+1448]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X22+1413], W8
	136 Move X0, [X23]
	137 NotImplemented "Instruction FABS not yet implemented."
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfEqual {142}
	141 Move W24, W31
	142 Call 0x1C17DFC
	143 Move W8, [X22+1413]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSET not yet implemented."
	146 Move V0, V13
	147 Call TilingJob.square, V0
	148 Move V13, V0
	149 Move V0, V14
	150 Call TilingJob.square, V0
	151 Move V14, V0
	152 Compare W24, 0
	153 JumpIfEqual {159}
	154 Move X0, 0x674000
	155 Move X0, [X0+1448]
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X22+1413], W8
	159 Move X0, [X23]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Move V6, [X31+76]
	166 Move S0, W31
	167 Move S1, 1
	168 Multiply S2, S10, S11
	169 Add S5, S15, S0
	170 Multiply S3, S6, S11
	171 Add S2, S12, S2
	172 Add S5, S5, S1
	173 Subtract S4, S13, S14
	174 Add S13, S3, S2
	175 NotImplemented "Instruction FSQRT not yet implemented."
	176 Move X0, [X21]
	177 NotImplemented "Instruction FDIV not yet implemented."
	178 Multiply S1, S15, S0
	179 Multiply S2, S15, S9
	180 Move [X31+72], S2
	181 Move [X31+80], S1
	182 Multiply S1, S12, S1
	183 Multiply S2, S10, S2
	184 Multiply S0, S6, S15
	185 Add S1, S1, S2
	186 Move W8, [X0+224]
	187 Add S14, S0, S1
	188 Multiply S3, S13, S13
	189 Multiply S0, S14, S14
	190 Add S0, S3, S0
	191 NotImplemented "Instruction FSQRT not yet implemented."
	192 NotImplemented "Instruction FSQRT not yet implemented."
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move V0, V9
	197 Call TilingJob.square, V0
	198 Move V11, V0
	199 Move V0, V10
	200 Call TilingJob.square, V0
	201 NotImplemented "Instruction FCMP not yet implemented."
	202 Move X0, [X21]
	203 Move V12, V0
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move W8, [X22+1413]
	209 Compare W8, 0
	210 JumpIfNotEqual {216}
	211 Move X0, 0x674000
	212 Move X0, [X0+1448]
	213 Call 0x1C17CF4
	214 Move W8, 1
	215 Move [X22+1413], W8
	216 Move X0, [X23]
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 NotImplemented "Instruction FDIV not yet implemented."
	219 Subtract S11, S12, S11
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 NotImplemented "Instruction FSQRT not yet implemented."
	225 Multiply S1, S9, S0
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 Multiply S0, S0, S1
	228 NotImplemented "Instruction FDIV not yet implemented."
	229 Multiply S5, S13, S1
	230 Multiply S1, S14, S1
	231 Multiply S6, S14, S0
	232 Multiply S7, S13, S0
	233 Move S2, W31
	234 Add S3, S5, S6
	235 Subtract S4, S7, S1
	236 Subtract S0, S6, S5
	237 Multiply S5, S15, S3
	238 Multiply S6, S4, S2
	239 Add S5, S5, S6
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Add S1, S1, S7
	242 Move S7, [X31+72]
	243 Move S16, [X31+76]
	244 Move [X20+8], S5
	245 Multiply S7, S7, S3
	246 Multiply S3, S16, S3
	247 Add S6, S7, S6
	248 Add S3, S4, S3
	249 Move [X20], S3
	250 Move [X20+8], S6
	251 Multiply S4, S15, S0
	252 Multiply S3, S1, S2
	253 Add S2, S4, S3
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 Move S4, [X31+72]
	256 Move S5, [X31+76]
	257 Move [X19+8], S2
	258 Multiply S4, S4, S0
	259 Multiply S0, S5, S0
	260 Add S3, S4, S3
	261 Add S0, S1, S0
	262 Move [X19], S0
	263 Move [X19+8], S3
	264 Move X20, [X31+112]
	265 Move X19, [X31+120]
	266 Move X22, [X31+96]
	267 Move X21, [X31+104]
	268 Move X24, [X31+80]
	269 Move X23, [X31+88]
	270 Move X30, [X31+64]
	271 Move D9, [X31+48]
	272 Move D8, [X31+56]
	273 Move D11, [X31+32]
	274 Move D10, [X31+40]
	275 Move D13, [X31+16]
	276 Move D12, [X31+24]
	277 Move D15, [X31+128]
	278 Move D14, [X31+136]
	279 Return 

Method: System.Boolean GetCircleClipPoints(Unity.Mathematics.float3 circleCenter, Unity.Mathematics.float3 circleNormal, System.Single circleRadius, System.Single near, out Unity.Mathematics.float3 p0, out Unity.Mathematics.float3 p1)

Disassembly:
	0x03A7F79C LDP S0, S10, [X31 + 0xB4]
	0x03A7F7A0 LDR W8, [X0 + 0xE0]
	0x03A7F7A4 STR S0, [X31 + 0x30]
	0x03A7F7A8 CBNZ W8, 0x3A7F7B0
	0x03A7F7AC BL 0x1C16DFC
	0x03A7F7B0 LDR V0, [X31 + 0x3C]
	0x03A7F7B4 BL 0x3A7E228
	0x03A7F7B8 LDR V8, [X31 + 0x34]
	0x03A7F7BC MOV V15.16B, V0.16B
	0x03A7F7C0 MOV V0.16B, V8.16B
	0x03A7F7C4 BL 0x3A7E228
	0x03A7F7C8 STR S0, [X31 + 0x10]
	0x03A7F7CC MOV V0.16B, V9.16B
	0x03A7F7D0 BL 0x3A7E228
	0x03A7F7D4 STR S0, [X31 + 0xC]
	0x03A7F7D8 LDR V0, [X31 + 0x88]
	0x03A7F7DC BL 0x3A7E228
	0x03A7F7E0 STR S0, [X31 + 0x2C]
	0x03A7F7E4 MOV V0.16B, V11.16B
	0x03A7F7E8 BL 0x3A7E228
	0x03A7F7EC STR S0, [X31 + 0x14]
	0x03A7F7F0 MOV V0.16B, V12.16B
	0x03A7F7F4 BL 0x3A7E228
	0x03A7F7F8 STR S0, [X31 + 0x20]
	0x03A7F7FC LDR V0, [X31 + 0x8C]
	0x03A7F800 BL 0x3A7E228
	0x03A7F804 STR S11, [X31 + 0x38]
	0x03A7F808 MOV V11.16B, V0.16B
	0x03A7F80C MOV V0.16B, V14.16B
	0x03A7F810 BL 0x3A7E228
	0x03A7F814 STR S0, [X31 + 0x1C]
	0x03A7F818 MOV V0.16B, V10.16B
	0x03A7F81C STR S10, [X31 + 0x28]
	0x03A7F820 BL 0x3A7E228
	0x03A7F824 STR S0, [X31 + 0x18]
	0x03A7F828 MOV V0.16B, V13.16B
	0x03A7F82C BL 0x3A7E228
	0x03A7F830 LDR V10, [X31 + 0x30]
	0x03A7F834 STR S0, [X31 + 0x24]
	0x03A7F838 MOV V0.16B, V10.16B
	0x03A7F83C BL 0x3A7E228
	0x03A7F840 LDP S24, S3, [X31 + 0x38]
	0x03A7F844 LDP S19, S20, [X31 + 0xC]
	0x03A7F848 LDP S22, S18, [X31 + 0x14]
	0x03A7F84C LDP S17, S23, [X31 + 0x1C]
	0x03A7F850 LDR V7, [X31 + 0x88]
	0x03A7F854 FADD S1, S15, S15
	0x03A7F858 FADD S4, S3, S3
	0x03A7F85C FADD S3, S24, S24
	0x03A7F860 FMUL S1, S8, S1
	0x03A7F864 FMUL S16, S3, S12
	0x03A7F868 FMUL S2, S15, S20
	0x03A7F86C FMUL S5, S22, S11
	0x03A7F870 FMUL S6, S23, S11
	0x03A7F874 FMUL S4, S7, S4
	0x03A7F878 FMUL S1, S1, S9
	0x03A7F87C FMUL S16, S16, S11
	0x03A7F880 MOV V21.16B, V0.16B
	0x03A7F884 FMUL S0, S15, S19
	0x03A7F888 FMUL S7, S5, S17
	0x03A7F88C FMUL S5, S5, S18
	0x03A7F890 FSUB S1, S1, S2
	0x03A7F894 FMUL S2, S6, S17
	0x03A7F898 FMUL S6, S6, S18
	0x03A7F89C FMUL S17, S16, S17
	0x03A7F8A0 FMUL S16, S16, S18
	0x03A7F8A4 FMUL S18, S24, S4
	0x03A7F8A8 FSUB S0, S1, S0
	0x03A7F8AC FMUL S1, S8, S18
	0x03A7F8B0 FADD S0, S1, S0
	0x03A7F8B4 FMUL S1, S18, S9
	0x03A7F8B8 FSUB S0, S0, S1
	0x03A7F8BC FMUL S1, S8, S4
	0x03A7F8C0 FMUL S1, S1, S12
	0x03A7F8C4 FSUB S0, S0, S1
	0x03A7F8C8 FMUL S1, S4, S12
	0x03A7F8CC LDR V4, [X31 + 0x2C]
	0x03A7F8D0 FMUL S1, S1, S9
	0x03A7F8D4 FADD S0, S1, S0
	0x03A7F8D8 MOV V18.16B, V24.16B
	0x03A7F8DC FMUL S1, S4, S22
	0x03A7F8E0 FSUB S0, S0, S1
	0x03A7F8E4 FMUL S1, S4, S23
	0x03A7F8E8 FADD S4, S4, S4
	0x03A7F8EC FMUL S4, S24, S4
	0x03A7F8F0 FMUL S4, S4, S12
	0x03A7F8F4 FADD S0, S4, S0
	0x03A7F8F8 FSUB S0, S0, S1
	0x03A7F8FC FMUL S4, S20, S11
	0x03A7F900 FADD S0, S7, S0
	0x03A7F904 FMUL S7, S8, S3
	0x03A7F908 LDP S20, S18, [X31 + 0x24]
	0x03A7F90C FMUL S7, S7, S11
	0x03A7F910 FADD S0, S5, S0
	0x03A7F914 FMUL S5, S13, S7
	0x03A7F918 FMUL S5, S14, S5
	0x03A7F91C FMUL S7, S10, S7
	0x03A7F920 FSUB S0, S0, S5
	0x03A7F924 FMUL S7, S18, S7
	0x03A7F928 FSUB S0, S0, S7
	0x03A7F92C FMUL S3, S3, S11
	0x03A7F930 FSUB S0, S0, S17
	0x03A7F934 FSUB S0, S0, S16
	0x03A7F938 FMUL S16, S13, S3
	0x03A7F93C FMUL S3, S10, S3
	0x03A7F940 FMUL S16, S14, S16
	0x03A7F944 FADD S1, S8, S8
	0x03A7F948 FMUL S16, S16, S9
	0x03A7F94C FMUL S3, S18, S3
	0x03A7F950 FMUL S17, S1, S12
	0x03A7F954 FADD S0, S16, S0
	0x03A7F958 FMUL S3, S3, S9
	0x03A7F95C FMUL S7, S4, S20
	0x03A7F960 FMUL S17, S17, S11
	0x03A7F964 FADD S0, S3, S0
	0x03A7F968 FMUL S4, S4, S21
	0x03A7F96C FADD S0, S7, S0
	0x03A7F970 FMUL S7, S13, S17
	0x03A7F974 FMUL S1, S1, S11
	0x03A7F978 FMUL S17, S10, S17
	0x03A7F97C FMUL S7, S14, S7
	0x03A7F980 FADD S0, S4, S0
	0x03A7F984 FMUL S16, S1, S20
	0x03A7F988 FMUL S17, S18, S17
	0x03A7F98C FADD S0, S7, S0
	0x03A7F990 FADD S5, S12, S12
	0x03A7F994 FMUL S1, S1, S21
	0x03A7F998 FMUL S16, S16, S9

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X21, 0x964000
	017 Move W8, [X21+790]
	018 Move X19, X1
	019 Move X20, X0
	020 Move V12, V7
	021 Move V13, V5
	022 Move V14, V4
	023 Move V15, V3
	024 Move V9, V2
	025 Move [X31+8], S1
	026 Move [X31+16], S6
	027 Move [X31+4], S0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x6A0000
	033 Move X0, [X0+3512]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+790], W8
	037 Move X21, 0x963000
	038 Move W8, [X21+1413]
	039 Move S0, W31
	040 Multiply S8, S15, S0
	041 Multiply S11, S13, S0
	042 Multiply S10, S14, S0
	043 Compare W8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, 0x675000
	046 Move X0, [X0+1448]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1413], W8
	050 Move X22, 0x675000
	051 Move X22, [X22+1448]
	052 Move X23, 0x6A0000
	053 Subtract S8, S8, S10
	054 Subtract S10, S14, S11
	055 Move X0, [X22]
	056 Subtract S11, S11, S15
	057 Move W8, [X0+224]
	058 Move X23, [X23+3512]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Multiply S1, S10, S10
	063 Multiply S2, S11, S11
	064 Multiply S0, S8, S8
	065 Add S1, S1, S2
	066 Move X0, [X23]
	067 Add S0, S0, S1
	068 Move S2, 1
	069 NotImplemented "Instruction FSQRT not yet implemented."
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 Move W8, [X0+224]
	072 Multiply S10, S10, S0
	073 Multiply S11, S11, S0
	074 Multiply S4, S8, S0
	075 Multiply S0, S14, S10
	076 Multiply S3, S15, S11
	077 Multiply S1, S13, S11
	078 Multiply S2, S15, S4
	079 Move [X31], S4
	080 Multiply S4, S14, S4
	081 Multiply S5, S13, S10
	082 Subtract S15, S0, S3
	083 Subtract S0, S12, S9
	084 Subtract S13, S1, S4
	085 Subtract S14, S2, S5
	086 NotImplemented "Instruction FDIV not yet implemented."
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W8, [X21+1413]
	091 Multiply S13, S13, S12
	092 Multiply S14, S14, S12
	093 Multiply S15, S15, S12
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0x675000
	097 Move X0, [X0+1448]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+1413], W8
	101 Move V0, [X31+4]
	102 Move X0, [X22]
	103 Add S15, S9, S15
	104 Add S13, S0, S13
	105 Move V0, [X31+8]
	106 Move W8, [X0+224]
	107 Add S14, S0, S14
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move V8, [X31+12]
	112 Move V0, V8
	113 Call TilingJob.square, V0
	114 Move V9, V0
	115 Move V0, V12
	116 Call TilingJob.square, V0
	117 Move V3, [X31]
	118 Subtract S0, S9, S0
	119 NotImplemented "Instruction FABS not yet implemented."
	120 NotImplemented "Instruction FSQRT not yet implemented."
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Multiply S1, S10, S0
	123 Multiply S2, S11, S0
	124 Multiply S0, S3, S0
	125 Add S3, S13, S1
	126 Add S4, S14, S2
	127 Add S5, S15, S0
	128 Subtract S1, S13, S1
	129 Subtract S2, S14, S2
	130 Subtract S0, S15, S0
	131 Move [X20], S3
	132 Move [X20+8], S4
	133 Move [X20+8], S5
	134 Move [X19], S1
	135 Move [X19+8], S2
	136 Move [X19+8], S0
	137 Move X20, [X31+112]
	138 Move X19, [X31+120]
	139 Move X22, [X31+96]
	140 Move X21, [X31+104]
	141 Move X30, [X31+80]
	142 Move X23, [X31+88]
	143 Move D9, [X31+64]
	144 Move D8, [X31+72]
	145 Move D11, [X31+48]
	146 Move D10, [X31+56]
	147 Move D13, [X31+32]
	148 Move D12, [X31+40]
	149 Move D15, [X31+16]
	150 Move D14, [X31+24]
	151 NotImplemented "Instruction CSET not yet implemented."
	152 Add X31, X31, 128
	153 Return X0

Method: System.ValueTuple`2<System.Single, System.Single> IntersectEllipseLine(System.Single a, System.Single b, Unity.Mathematics.float3 line)

Disassembly:
	0x03A812F8 MOV X2, X31
	0x03A812FC BL 0x3C3883C
	0x03A81300 TBZ X0, 0x0, 0x3A81320
	0x03A81304 LDR X0, [X20]
	0x03A81308 BL 0x1C16F10
	0x03A8130C MOV X19, X0
	0x03A81310 BL 0x3A81338
	0x03A81314 LDR X8, [X20]
	0x03A81318 LDR X8, [X8 + 0xB8]
	0x03A8131C STR X19, [X8]
	0x03A81320 LDR X8, [X20]
	0x03A81324 LDP X20, X19, [X31 + 0x10]
	0x03A81328 LDR X8, [X8 + 0xB8]
	0x03A8132C LDR X0, [X8]
	0x03A81330 LDP X30, X21, [X31], #0x20
	0x03A81334 RET
	0x03A81338 SUB X31, X31, 0x80
	0x03A8133C STR X30, [X31 + 0x40]
	0x03A81340 STP X24, X23, [X31 + 0x50]
	0x03A81344 STP X22, X21, [X31 + 0x60]
	0x03A81348 STP X20, X19, [X31 + 0x70]
	0x03A8134C ADRP X24, 0x961000
	0x03A81350 ADRP X23, 0x69D000
	0x03A81354 ADRP X20, 0x69D000
	0x03A81358 ADRP X22, 0x6D6000
	0x03A8135C ADRP X21, 0x6D5000
	0x03A81360 LDRB W8, [X24 + 0x32F]
	0x03A81364 LDR X23, [X23 + 0x50]
	0x03A81368 LDR X20, [X20 + 0x58]
	0x03A8136C LDR X22, [X22 + 0x98]
	0x03A81370 LDR X21, [X21 + 0xF08]
	0x03A81374 MOV X19, X0
	0x03A81378 TBNZ X8, 0x0, 0x3A813B4
	0x03A8137C ADRP X0, 0x69D000
	0x03A81380 LDR X0, [X0 + 0x58]
	0x03A81384 BL 0x1C16CF4
	0x03A81388 ADRP X0, 0x69D000
	0x03A8138C LDR X0, [X0 + 0x50]
	0x03A81390 BL 0x1C16CF4
	0x03A81394 ADRP X0, 0x6D6000
	0x03A81398 LDR X0, [X0 + 0x98]
	0x03A8139C BL 0x1C16CF4
	0x03A813A0 ADRP X0, 0x6D5000
	0x03A813A4 LDR X0, [X0 + 0xF08]
	0x03A813A8 BL 0x1C16CF4
	0x03A813AC MOVZ W8, 0x1
	0x03A813B0 STRB W8, [X24 + 0x32F]
	0x03A813B4 MOVZ W24, 0x1
	0x03A813B8 MOVI V0.2S, 0x2
	0x03A813BC STRB W24, [X19 + 0x20]
	0x03A813C0 STUR D0, [X19 + 0x24]
	0x03A813C4 LDR X0, [X23]
	0x03A813C8 BL 0x1C16F10
	0x03A813CC LDR X1, [X20]
	0x03A813D0 MOV X20, X0
	0x03A813D4 BL 0x301B7C4
	0x03A813D8 MOVN W8, 0x0
	0x03A813DC MOVZ W0, 0x1
	0x03A813E0 MOV X1, X31
	0x03A813E4 STR X20, [X19 + 0x30]
	0x03A813E8 STR W8, [X19 + 0x38]
	0x03A813EC BL 0x3C35CBC
	0x03A813F0 MOVZ W8, 0x2
	0x03A813F4 MOVZ W9, 0x101
	0x03A813F8 MOVZ W10, 0x40000000
	0x03A813FC STR W0, [X19 + 0x3C]
	0x03A81400 STRB W24, [X19 + 0x5C]
	0x03A81404 STR W8, [X19 + 0x48]
	0x03A81408 STR W8, [X19 + 0x54]
	0x03A8140C STRH W9, [X19 + 0x5A]
	0x03A81410 STR W10, [X19 + 0x8C]
	0x03A81414 LDR X0, [X22]
	0x03A81418 BL 0x1C16F10
	0x03A8141C MOV X1, X31
	0x03A81420 MOV X20, X0
	0x03A81424 BL 0x3A57F90
	0x03A81428 STR X20, [X19 + 0x90]
	0x03A8142C LDR X0, [X21]
	0x03A81430 BL 0x1C16F10
	0x03A81434 MOV X1, X31
	0x03A81438 MOV X20, X0
	0x03A8143C BL 0x3A784D8
	0x03A81440 ADD X8, X31, 0x0
	0x03A81444 MOV X0, X31
	0x03A81448 STR X20, [X19 + 0x98]
	0x03A8144C BL 0x3A79E30
	0x03A81450 LDP V1, V0, [X31]
	0x03A81454 MOV X0, X19
	0x03A81458 MOV X1, X31
	0x03A8145C STP V1, V0, [X31 + 0x20]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x962000
	011 Move X19, 0x69E000
	012 Move W8, [X20+791]
	013 Move X19, [X19+3512]
	014 Move V8, V4
	015 Move V12, V3
	016 Move V9, V2
	017 Move V11, V1
	018 Move V10, V0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x69E000
	024 Move X0, [X0+3512]
	025 Call 0x1C17CF4
	026 Move X0, 0x6D7000
	027 Move X0, [X0+40]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+791], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move V0, V12
	037 Call TilingJob.square, V0
	038 Move V12, V0
	039 Move V0, V11
	040 Call TilingJob.square, V0
	041 Multiply S0, S12, S0
	042 Move S12, 1
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Move V0, V10
	045 Call TilingJob.square, V0
	046 Move V10, V0
	047 Move V0, V9
	048 Call TilingJob.square, V0
	049 Move X19, 0x961000
	050 Move W8, [X19+1413]
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 Multiply S12, S0, S11
	053 Add S0, S9, S9
	054 Multiply S9, S8, S0
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x673000
	058 Move X0, [X0+1448]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X19+1413], W8
	062 Move X8, 0x673000
	063 Move X8, [X8+1448]
	064 Move X19, 0x6D7000
	065 Add S10, S10, S12
	066 Multiply S9, S9, S11
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Move X19, [X19+40]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move S0, -4
	074 Multiply S13, S10, S0
	075 Move V0, V8
	076 Multiply S12, S9, S9
	077 Call TilingJob.square, V0
	078 Multiply S0, S11, S0
	079 Move S1, -1
	080 Add S0, S0, S1
	081 Multiply S0, S13, S0
	082 Move X1, [X19]
	083 Add S0, S12, S0
	084 NotImplemented "Instruction FNEG not yet implemented."
	085 NotImplemented "Instruction FSQRT not yet implemented."
	086 Add S3, S10, S10
	087 Subtract S1, S0, S9
	088 Subtract S2, S2, S0
	089 NotImplemented "Instruction FDIV not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Add X0, X31, 56
	092 Move [X31+56], X31
	093 Call ValueTuple`2<Single, Single>..ctor, X0, V0, V1
	094 Move S0, [X31+56]
	095 Move S1, [X31+60]
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X30, [X31+48]
	099 Move D9, [X31+32]
	100 Move D8, [X31+40]
	101 Move D11, [X31+16]
	102 Move D10, [X31+24]
	103 Move D13, [X31+80]
	104 Move D12, [X31+88]
	105 Return X0

Method: System.Void GetProjectedCircleHorizon(Unity.Mathematics.float2 center, System.Single radius, Unity.Mathematics.float2 U, Unity.Mathematics.float2 V, out Unity.Mathematics.float2 uv1, out Unity.Mathematics.float2 uv2)

Disassembly:
	0x03A7F5A4 STP S20, S19, [X31 + 0x18]
	0x03A7F5A8 CBNZ W8, 0x3A7F5C0
	0x03A7F5AC ADRP X0, 0x674000
	0x03A7F5B0 LDR X0, [X0 + 0x5A8]
	0x03A7F5B4 BL 0x1C16CF4
	0x03A7F5B8 MOVZ W8, 0x1
	0x03A7F5BC STRB W8, [X21 + 0x585]
	0x03A7F5C0 ADRP X22, 0x674000
	0x03A7F5C4 LDR X22, [X22 + 0x5A8]
	0x03A7F5C8 LDR V12, [X31 + 0xB0]
	0x03A7F5CC FSUB S8, S8, S13
	0x03A7F5D0 FSUB S14, S14, S11
	0x03A7F5D4 LDR X0, [X22]
	0x03A7F5D8 LDR W8, [X0 + 0xE0]
	0x03A7F5DC CBNZ W8, 0x3A7F5E4
	0x03A7F5E0 BL 0x1C16DFC
	0x03A7F5E4 FMUL S0, S8, S8
	0x03A7F5E8 FMUL S1, S14, S14
	0x03A7F5EC FADD S0, S0, S1
	0x03A7F5F0 FMOV S2, 1
	0x03A7F5F4 FSQRT S0, S0
	0x03A7F5F8 FDIV S0, S2, S0
	0x03A7F5FC FMUL S15, S8, S0
	0x03A7F600 FMUL S14, S14, S0
	0x03A7F604 FMUL S1, S13, S14
	0x03A7F608 FMUL S2, S11, S15
	0x03A7F60C FSUB S13, S1, S2
	0x03A7F610 FCMP S13, S12
	0x03A7F614 B.GT 0x3A7F70C
	0x03A7F618 LDRB W8, [X21 + 0x585]
	0x03A7F61C STR S9, [X31 + 0x8]
	0x03A7F620 FNMUL S11, S8, S0
	0x03A7F624 FMUL S9, S12, S12
	0x03A7F628 FMUL S0, S13, S13
	0x03A7F62C CBNZ W8, 0x3A7F64C
	0x03A7F630 ADRP X0, 0x674000
	0x03A7F634 LDR X0, [X0 + 0x5A8]
	0x03A7F638 MOV V8.16B, V0.16B
	0x03A7F63C BL 0x1C16CF4
	0x03A7F640 MOV V0.16B, V8.16B
	0x03A7F644 MOVZ W8, 0x1
	0x03A7F648 STRB W8, [X21 + 0x585]
	0x03A7F64C LDR X0, [X22]
	0x03A7F650 FMUL S8, S14, S13
	0x03A7F654 FMUL S11, S13, S11
	0x03A7F658 FSUB S9, S9, S0
	0x03A7F65C LDR W8, [X0 + 0xE0]
	0x03A7F660 CBNZ W8, 0x3A7F668
	0x03A7F664 BL 0x1C16DFC
	0x03A7F668 LDP S16, S17, [X31 + 0xC]
	0x03A7F66C LDP S21, S18, [X31 + 0x14]
	0x03A7F670 LDR V19, [X31 + 0x1C]
	0x03A7F674 LDR V20, [X31 + 0x68]
	0x03A7F678 FSQRT S0, S9
	0x03A7F67C FMUL S1, S15, S0
	0x03A7F680 FMUL S0, S14, S0
	0x03A7F684 FADD S2, S8, S1
	0x03A7F688 FADD S3, S11, S0
	0x03A7F68C FSUB S1, S8, S1
	0x03A7F690 FSUB S0, S11, S0
	0x03A7F694 FMUL S4, S16, S2
	0x03A7F698 FMUL S5, S17, S2
	0x03A7F69C FMUL S2, S21, S2
	0x03A7F6A0 FMUL S6, S18, S3
	0x03A7F6A4 FMUL S7, S19, S3
	0x03A7F6A8 FMUL S3, S20, S3
	0x03A7F6AC FMUL S16, S16, S1
	0x03A7F6B0 FMUL S17, S17, S1
	0x03A7F6B4 FMUL S1, S21, S1
	0x03A7F6B8 FMUL S18, S18, S0
	0x03A7F6BC FMUL S19, S19, S0
	0x03A7F6C0 FMUL S0, S20, S0
	0x03A7F6C4 LDR V21, [X31 + 0x6C]
	0x03A7F6C8 LDR V20, [X31 + 0x8]
	0x03A7F6CC FADD S4, S10, S4
	0x03A7F6D0 FADD S16, S10, S16
	0x03A7F6D4 FADD S5, S21, S5
	0x03A7F6D8 FADD S2, S20, S2
	0x03A7F6DC FADD S17, S21, S17
	0x03A7F6E0 FADD S1, S20, S1
	0x03A7F6E4 FADD S4, S6, S4
	0x03A7F6E8 FADD S5, S7, S5
	0x03A7F6EC FADD S2, S3, S2
	0x03A7F6F0 FADD S3, S18, S16
	0x03A7F6F4 FADD S6, S19, S17
	0x03A7F6F8 FADD S0, S0, S1
	0x03A7F6FC STP S4, S5, [X20]
	0x03A7F700 STR S2, [X20 + 0x8]
	0x03A7F704 STP S3, S6, [X19]
	0x03A7F708 STR S0, [X19 + 0x8]
	0x03A7F70C FCMP S13, S12
	0x03A7F710 LDP X20, X19, [X31 + 0x80]
	0x03A7F714 LDP X22, X21, [X31 + 0x70]
	0x03A7F718 LDR X30, [X31 + 0x60]
	0x03A7F71C LDP D9, D8, [X31 + 0x50]
	0x03A7F720 LDP D11, D10, [X31 + 0x40]
	0x03A7F724 LDP D13, D12, [X31 + 0x30]
	0x03A7F728 LDP D15, D14, [X31 + 0x20]
	0x03A7F72C CSET W0, LE
	0x03A7F730 ADD X31, X31, 0x90
	0x03A7F734 RET
	0x03A7F738 SUB X31, X31, 0xA0
	0x03A7F73C STP D15, D14, [X31 + 0x40]
	0x03A7F740 STP D13, D12, [X31 + 0x50]
	0x03A7F744 STP D11, D10, [X31 + 0x60]
	0x03A7F748 STP D9, D8, [X31 + 0x70]
	0x03A7F74C STR X30, [X31 + 0x80]
	0x03A7F750 STP X20, X19, [X31 + 0x90]
	0x03A7F754 STP S6, S7, [X31 + 0x88]
	0x03A7F758 STR S5, [X31 + 0x3C]
	0x03A7F75C STR S3, [X31 + 0x34]
	0x03A7F760 ADRP X20, 0x963000
	0x03A7F764 ADRP X19, 0x69F000
	0x03A7F768 LDRB W8, [X20 + 0x31B]
	0x03A7F76C LDR X19, [X19 + 0xDB8]
	0x03A7F770 MOV V11.16B, V2.16B
	0x03A7F774 MOV V9.16B, V0.16B
	0x03A7F778 TBNZ X8, 0x0, 0x3A7F790
	0x03A7F77C ADRP X0, 0x69F000
	0x03A7F780 LDR X0, [X0 + 0xDB8]
	0x03A7F784 BL 0x1C16CF4
	0x03A7F788 MOVZ W8, 0x1
	0x03A7F78C STRB W8, [X20 + 0x31B]
	0x03A7F790 LDR X0, [X19]
	0x03A7F794 LDR V12, [X31 + 0xC0]
	0x03A7F798 LDP S13, S14, [X31 + 0xA4]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x964000
	015 Move W8, [X21+792]
	016 Move X19, X1
	017 Move X20, X0
	018 Move V10, V6
	019 Move V12, V5
	020 Move V9, V4
	021 Move V11, V3
	022 Move V8, V2
	023 Move V15, V1
	024 Move V13, V0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x6A0000
	030 Move X0, [X0+3512]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+792], W8
	034 Move X21, 0x963000
	035 Move W8, [X21+1413]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x675000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+1413], W8
	043 Move X22, 0x675000
	044 Move X22, [X22+1448]
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, -49889280
	051 Move V1, [X8+576]
	052 Multiply S0, S12, S12
	053 Multiply S2, S10, S10
	054 Add S0, S0, S2
	055 NotImplemented "Instruction FSQRT not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move [X20], S8
	058 Move [X20+4], W31
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 Move S0, W31
	061 Move W8, [X21+1413]
	062 Move [X31+76], S13
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0x675000
	066 Move X0, [X0+1448]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X21+1413], W8
	070 Move X0, [X22]
	071 Move X21, 0x6A0000
	072 Move V13, V15
	073 Move W8, [X0+224]
	074 Move X21, [X21+3512]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Multiply S0, S11, S11
	079 Multiply S1, S9, S9
	080 Move X0, [X21]
	081 Move S2, 1
	082 Add S0, S0, S1
	083 Move V5, [X31+76]
	084 Multiply S15, S14, S8
	085 NotImplemented "Instruction FDIV not yet implemented."
	086 NotImplemented "Instruction FSQRT not yet implemented."
	087 Multiply S3, S12, S14
	088 NotImplemented "Instruction FDIV not yet implemented."
	089 NotImplemented "Instruction FNEG not yet implemented."
	090 Multiply S8, S0, S8
	091 Multiply S0, S11, S12
	092 Multiply S2, S9, S12
	093 Move W8, [X0+224]
	094 Multiply S4, S10, S14
	095 Multiply S2, S2, S1
	096 Multiply S0, S5, S0
	097 Subtract S10, S2, S0
	098 Multiply S0, S4, S1
	099 Multiply S1, S5, S3
	100 Subtract S11, S0, S1
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move V0, V8
	105 Call TilingJob.square, V0
	106 Move V9, V0
	107 Move V0, V15
	108 Call TilingJob.square, V0
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 NotImplemented "Instruction FDIV not yet implemented."
	111 Move S4, -1
	112 Move V0, V8
	113 Move V1, V15
	114 Move V2, V9
	115 Move V3, V10
	116 Move S11, -1
	117 Call TilingJob.IntersectEllipseLine, V0, V1, X0
	118 NotImplemented "Instruction FNEG not yet implemented."
	119 NotImplemented "Instruction FDIV not yet implemented."
	120 Multiply S3, S12, S0
	121 NotImplemented "Instruction FDIV not yet implemented."
	122 Multiply S0, S4, S0
	123 Multiply S2, S12, S1
	124 Multiply S1, S4, S1
	125 Subtract S0, S0, S5
	126 Subtract S1, S1, S5
	127 Multiply S0, S14, S0
	128 Move [X20], S3
	129 Move [X20+8], S0
	130 Multiply S0, S14, S1
	131 Move [X19], S2
	132 Move [X19+8], S0
	133 Move X20, [X31+96]
	134 Move X19, [X31+104]
	135 Move X22, [X31+80]
	136 Move X21, [X31+88]
	137 Move X30, [X31+64]
	138 Move D9, [X31+48]
	139 Move D8, [X31+56]
	140 Move D11, [X31+32]
	141 Move D10, [X31+40]
	142 Move D13, [X31+16]
	143 Move D12, [X31+24]
	144 Move D15, [X31+112]
	145 Move D14, [X31+120]
	146 Return 

Method: System.Boolean IntersectCircleYPlane(System.Single y, Unity.Mathematics.float3 circleCenter, Unity.Mathematics.float3 circleNormal, Unity.Mathematics.float3 circleU, Unity.Mathematics.float3 circleV, System.Single circleRadius, out Unity.Mathematics.float3 p1, out Unity.Mathematics.float3 p2)

Disassembly:
	0x03A80490 BL 0x1C16CF4
	0x03A80494 ADRP X0, 0x6D7000
	0x03A80498 LDR X0, [X0 + 0x38]
	0x03A8049C BL 0x1C16CF4
	0x03A804A0 MOVZ W8, 0x1
	0x03A804A4 STRB W8, [X19 + 0x31C]
	0x03A804A8 LDR X0, [X20]
	0x03A804AC MOVZ W1, 0x8
	0x03A804B0 BL 0x1C16D6C
	0x03A804B4 CBZ X0, 0x3A80608
	0x03A804B8 LDR W8, [X0 + 0x18]
	0x03A804BC CBZ W8, 0x3A80604
	0x03A804C0 FMOV V0.2S, 0x0
	0x03A804C4 MOVZ W9, 0xBF800000
	0x03A804C8 CMP W8, 0x1
	0x03A804CC STR D0, [X0 + 0x20]
	0x03A804D0 STR W9, [X0 + 0x28]
	0x03A804D4 B.EQ 0x3A80604
	0x03A804D8 MOVZ W9, 0x3F800000
	0x03A804DC CMP W8, 0x2
	0x03A804E0 STUR D0, [X0 + 0x2C]
	0x03A804E4 STR W9, [X0 + 0x34]
	0x03A804E8 B.LS 0x3A80604
	0x03A804EC ADRP X9, 0xFFFFFFFFFD06D000
	0x03A804F0 LDR V0, [X9 + 0xB40]
	0x03A804F4 MOVZ W9, 0xBF800000
	0x03A804F8 CMP W8, 0x3
	0x03A804FC STR W9, [X0 + 0x40]
	0x03A80500 STR D0, [X0 + 0x38]
	0x03A80504 B.EQ 0x3A80604
	0x03A80508 MOVZ W9, 0x3F800000
	0x03A8050C CMP W8, 0x4
	0x03A80510 STUR D0, [X0 + 0x44]
	0x03A80514 STR W9, [X0 + 0x4C]
	0x03A80518 B.LS 0x3A80604
	0x03A8051C ADRP X9, 0xFFFFFFFFFD06D000
	0x03A80520 LDR V0, [X9 + 0x930]
	0x03A80524 MOVZ W9, 0xBF800000
	0x03A80528 CMP W8, 0x5
	0x03A8052C STR W9, [X0 + 0x58]
	0x03A80530 STR D0, [X0 + 0x50]
	0x03A80534 B.EQ 0x3A80604
	0x03A80538 MOVZ W9, 0x3F800000
	0x03A8053C CMP W8, 0x6
	0x03A80540 STUR D0, [X0 + 0x5C]
	0x03A80544 STR W9, [X0 + 0x64]
	0x03A80548 B.LS 0x3A80604
	0x03A8054C FMOV V0.2S, 0x0
	0x03A80550 MOVZ W9, 0xBF800000
	0x03A80554 CMP W8, 0x7
	0x03A80558 STR D0, [X0 + 0x68]
	0x03A8055C STR W9, [X0 + 0x70]
	0x03A80560 B.EQ 0x3A80604
	0x03A80564 ADRP X19, 0x69E000
	0x03A80568 LDR X19, [X19 + 0xDB8]
	0x03A8056C MOVZ W8, 0x3F800000
	0x03A80570 STUR D0, [X0 + 0x74]
	0x03A80574 STR W8, [X0 + 0x7C]
	0x03A80578 LDR X8, [X19]
	0x03A8057C ADRP X9, 0x6D7000
	0x03A80580 MOVZ W1, 0x4
	0x03A80584 LDR X8, [X8 + 0xB8]
	0x03A80588 LDR X9, [X9 + 0x38]
	0x03A8058C STR X0, [X8]
	0x03A80590 LDR X0, [X9]
	0x03A80594 BL 0x1C16D6C
	0x03A80598 CBZ X0, 0x3A80608
	0x03A8059C LDR W8, [X0 + 0x18]
	0x03A805A0 CBZ W8, 0x3A80604
	0x03A805A4 ADRP X9, 0xFFFFFFFFFD06A000
	0x03A805A8 LDR V0, [X9 + 0xBA]
	0x03A805AC CMP W8, 0x1
	0x03A805B0 STR V0, [X0 + 0x2]
	0x03A805B4 B.EQ 0x3A80604
	0x03A805B8 ADRP X9, 0xFFFFFFFFFD06B000
	0x03A805BC LDR V0, [X9 + 0xFA]
	0x03A805C0 CMP W8, 0x2
	0x03A805C4 STR V0, [X0 + 0x3]
	0x03A805C8 B.LS 0x3A80604
	0x03A805CC ADRP X9, 0xFFFFFFFFFD06A000
	0x03A805D0 LDR V0, [X9 + 0xE7]
	0x03A805D4 CMP W8, 0x3
	0x03A805D8 STR V0, [X0 + 0x4]
	0x03A805DC B.EQ 0x3A80604
	0x03A805E0 ADRP X8, 0xFFFFFFFFFD06B000
	0x03A805E4 LDR V0, [X8 + 0x26]
	0x03A805E8 STR V0, [X0 + 0x5]
	0x03A805EC LDR X8, [X19]
	0x03A805F0 LDP X20, X19, [X31 + 0x10]
	0x03A805F4 LDR X8, [X8 + 0xB8]
	0x03A805F8 STR X0, [X8 + 0x8]
	0x03A805FC LDR X30, [X31], #0x20
	0x03A80600 RET
	0x03A80604 BL 0x1C16F28
	0x03A80608 BL 0x1C16F20
	0x03A8060C BFM W0, W1, 0x10, 0xF
	0x03A80610 RET
	0x03A80614 SUB X31, X31, 0x30
	0x03A80618 STP X30, X21, [X31 + 0x10]
	0x03A8061C STP X20, X19, [X31 + 0x20]
	0x03A80620 ADRP X21, 0x962000
	0x03A80624 ADRP X20, 0x6D7000
	0x03A80628 LDRB W8, [X21 + 0x31D]
	0x03A8062C LDR X20, [X20 + 0x40]
	0x03A80630 MOV W19, W0
	0x03A80634 TBNZ X8, 0x0, 0x3A8064C
	0x03A80638 ADRP X0, 0x6D7000
	0x03A8063C LDR X0, [X0 + 0x40]
	0x03A80640 BL 0x1C16CF4
	0x03A80644 MOVZ W8, 0x1
	0x03A80648 STRB W8, [X21 + 0x31D]
	0x03A8064C LDR X3, [X20]
	0x03A80650 AND W1, W19, 0xFFFF
	0x03A80654 UBFM W2, W19, 0x10, 0x1F
	0x03A80658 ADD X0, X31, 0x8
	0x03A8065C STR X31, [X31 + 0x8]
	0x03A80660 BL 0x27B10D8
	0x03A80664 LDR X0, [X31 + 0x8]
	0x03A80668 LDP X20, X19, [X31 + 0x20]
	0x03A8066C LDP X30, X21, [X31 + 0x10]
	0x03A80670 ADD X31, X31, 0x30
	0x03A80674 RET
	0x03A80678 SUB X31, X31, 0x60
	0x03A8067C STR X30, [X31 + 0x10]
	0x03A80680 STP X26, X25, [X31 + 0x20]
	0x03A80684 STP X24, X23, [X31 + 0x30]
	0x03A80688 STP X22, X21, [X31 + 0x40]
	0x03A8068C STP X20, X19, [X31 + 0x50]
	0x03A80690 LDR W25, [X0 + 0x38]
	0x03A80694 LDR W26, [X0 + 0x28]
	0x03A80698 MOV W23, W1
	0x03A8069C MOV X19, X0
	0x03A806A0 SDIV W24, W1, W25
	0x03A806A4 MSUB W8, W24, W25, W1
	0x03A806A8 UBFM W20, W8, 0x19, 0x18
	0x03A806AC ADD W8, W20, 0x80
	0x03A806B0 CMP W8, W26
	0x03A806B4 CSEL W8, W8, W26, LT
	0x03A806B8 MOVZ W0, 0xFFFF
	0x03A806BC MOV W1, W31
	0x03A806C0 SUB W21, W8, 0x1
	0x03A806C4 MUL W22, W26, W24
	0x03A806C8 BL 0x3A8060C
	0x03A806CC CMP W20, W21
	0x03A806D0 B.GT 0x3A8071C
	0x03A806D4 LDR X8, [X19]
	0x03A806D8 SUB W9, W26, W25, 0x7, LSL
	0x03A806DC MUL W9, W24, W9
	0x03A806E0 ADD W9, W9, W23, 0x7, LSL
	0x03A806E4 ORR W10, W31, 0x1
	0x03A806E8 MOV W11, W20
	0x03A806EC LDR W12, [X19 + 0x2C]
	0x03A806F0 ADD W11, W11, 0x1
	0x03A806F4 CMP W11, W21
	0x03A806F8 ADD W12, W12, 0x2
	0x03A806FC MUL W12, W12, W9
	0x03A80700 STR W0, [X8, W12, SXTW]
	0x03A80704 LDR W12, [X19 + 0x2C]
	0x03A80708 ADD W12, W12, 0x2
	0x03A8070C MADD W12, W12, W9, W10
	0x03A80710 ADD W9, W9, 0x1
	0x03A80714 STR W0, [X8, W12, SXTW]
	0x03A80718 B.LE 0x3A806EC
	0x03A8071C LDR W4, [X19 + 0x30]
	0x03A80720 MOV X0, X19
	0x03A80724 MOV W1, W20
	0x03A80728 MOV W2, W21
	0x03A8072C MUL W6, W4, W24
	0x03A80730 MOV W3, W31
	0x03A80734 MOV W5, W31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move V10, V1
	016 Move V9, V3
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Multiply S16, S10, S4
	019 Multiply S3, S2, S5
	020 Move [X1+8], W31
	021 Multiply S7, S9, S6
	022 Multiply S5, S5, S0
	023 Move [X1], D1
	024 Move [X0], D1
	025 Add S1, S16, S3
	026 Move S19, [X31+164]
	027 Move S17, [X31+168]
	028 Move V20, [X31+160]
	029 Move S22, [X31+148]
	030 Move S21, [X31+152]
	031 Move V23, [X31+144]
	032 Add S16, S4, S5
	033 Subtract S3, S5, S4
	034 Add S1, S7, S1
	035 Add S7, S6, S16
	036 Add S3, S6, S3
	037 Multiply S0, S1, S0
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 NotImplemented "Instruction FNEG not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FDIV not yet implemented."
	042 Move X21, 0x962000
	043 Move [X0+8], W31
	044 Subtract S6, S4, S10
	045 Subtract S4, S4, S9
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 NotImplemented "Instruction FDIV not yet implemented."
	048 Subtract S1, S1, S9
	049 Subtract S18, S7, S2
	050 Move W8, [X21+1413]
	051 Multiply S3, S23, S6
	052 Multiply S7, S21, S4
	053 Multiply S6, S20, S6
	054 Multiply S4, S17, S4
	055 Subtract S5, S5, S10
	056 Move [X31+104], S17
	057 Move [X31+112], S2
	058 Subtract S0, S0, S2
	059 Multiply S16, S21, S1
	060 Multiply S1, S17, S1
	061 Multiply S17, S22, S18
	062 Multiply S2, S19, S18
	063 Add S3, S3, S17
	064 Multiply S17, S23, S5
	065 Add S2, S6, S2
	066 Multiply S6, S22, S0
	067 Multiply S5, S20, S5
	068 Multiply S0, S19, S0
	069 Add S6, S17, S6
	070 Add S0, S5, S0
	071 Move X19, X1
	072 Move X20, X0
	073 Add S13, S7, S3
	074 Add S11, S4, S2
	075 Add S8, S16, S6
	076 Add S14, S1, S0
	077 Move [X31+16], S22
	078 Move [X31+24], S21
	079 Move [X31+12], S23
	080 Move [X31+24], S20
	081 Move [X31+32], S19
	082 Compare W8, 0
	083 JumpIfNotEqual {89}
	084 Move X0, 0x674000
	085 Move X0, [X0+1448]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X21+1413], W8
	089 Move X22, 0x674000
	090 Move X22, [X22+1448]
	091 Move V12, [X31+176]
	092 Subtract S8, S8, S13
	093 Subtract S14, S14, S11
	094 Move X0, [X22]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Multiply S0, S8, S8
	100 Multiply S1, S14, S14
	101 Add S0, S0, S1
	102 Move S2, 1
	103 NotImplemented "Instruction FSQRT not yet implemented."
	104 NotImplemented "Instruction FDIV not yet implemented."
	105 Multiply S15, S8, S0
	106 Multiply S14, S14, S0
	107 Multiply S1, S13, S14
	108 Multiply S2, S11, S15
	109 Subtract S13, S1, S2
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move W8, [X21+1413]
	112 Move [X31+8], S9
	113 NotImplemented "Instruction FNMUL not yet implemented."
	114 Multiply S9, S12, S12
	115 Multiply S0, S13, S13
	116 Compare W8, 0
	117 JumpIfNotEqual {125}
	118 Move X0, 0x674000
	119 Move X0, [X0+1448]
	120 Move V8, V0
	121 Call 0x1C17CF4
	122 Move V0, V8
	123 Move W8, 1
	124 Move [X21+1413], W8
	125 Move X0, [X22]
	126 Multiply S8, S14, S13
	127 Multiply S11, S13, S11
	128 Subtract S9, S9, S0
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move S16, [X31+12]
	134 Move S17, [X31+16]
	135 Move S21, [X31+20]
	136 Move S18, [X31+24]
	137 Move V19, [X31+28]
	138 Move V20, [X31+104]
	139 NotImplemented "Instruction FSQRT not yet implemented."
	140 Multiply S1, S15, S0
	141 Multiply S0, S14, S0
	142 Add S2, S8, S1
	143 Add S3, S11, S0
	144 Subtract S1, S8, S1
	145 Subtract S0, S11, S0
	146 Multiply S4, S16, S2
	147 Multiply S5, S17, S2
	148 Multiply S2, S21, S2
	149 Multiply S6, S18, S3
	150 Multiply S7, S19, S3
	151 Multiply S3, S20, S3
	152 Multiply S16, S16, S1
	153 Multiply S17, S17, S1
	154 Multiply S1, S21, S1
	155 Multiply S18, S18, S0
	156 Multiply S19, S19, S0
	157 Multiply S0, S20, S0
	158 Move V21, [X31+108]
	159 Move V20, [X31+8]
	160 Add S4, S10, S4
	161 Add S16, S10, S16
	162 Add S5, S21, S5
	163 Add S2, S20, S2
	164 Add S17, S21, S17
	165 Add S1, S20, S1
	166 Add S4, S6, S4
	167 Add S5, S7, S5
	168 Add S2, S3, S2
	169 Add S3, S18, S16
	170 Add S6, S19, S17
	171 Add S0, S0, S1
	172 Move [X20], S4
	173 Move [X20+8], S5
	174 Move [X20+8], S2
	175 Move [X19], S3
	176 Move [X19+8], S6
	177 Move [X19+8], S0
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 Move X20, [X31+128]
	180 Move X19, [X31+136]
	181 Move X22, [X31+112]
	182 Move X21, [X31+120]
	183 Move X30, [X31+96]
	184 Move D9, [X31+80]
	185 Move D8, [X31+88]
	186 Move D11, [X31+64]
	187 Move D10, [X31+72]
	188 Move D13, [X31+48]
	189 Move D12, [X31+56]
	190 Move D15, [X31+32]
	191 Move D14, [X31+40]
	192 NotImplemented "Instruction CSET not yet implemented."
	193 Add X31, X31, 144
	194 Return X0

Method: System.Void GetConeSideTangentPoints(Unity.Mathematics.float3 vertex, Unity.Mathematics.float3 axis, System.Single cosHalfAngle, System.Single circleRadius, System.Single coneHeight, System.Single range, Unity.Mathematics.float3 circleU, Unity.Mathematics.float3 circleV, out Unity.Mathematics.float3 l1, out Unity.Mathematics.float3 l2)

Disassembly:
	0x03A7FF08 LDP S7, S16, [X31 + 0x48]
	0x03A7FF0C STR S5, [X20 + 0x8]
	0x03A7FF10 FMUL S7, S7, S3
	0x03A7FF14 FMUL S3, S16, S3
	0x03A7FF18 FADD S6, S7, S6
	0x03A7FF1C FADD S3, S4, S3
	0x03A7FF20 STP S3, S6, [X20]
	0x03A7FF24 FMUL S4, S15, S0
	0x03A7FF28 FMUL S3, S1, S2
	0x03A7FF2C FADD S2, S4, S3
	0x03A7FF30 FCMP S2, S8
	0x03A7FF34 B.LT 0x3A7FF54
	0x03A7FF38 LDP S4, S5, [X31 + 0x48]
	0x03A7FF3C STR S2, [X19 + 0x8]
	0x03A7FF40 FMUL S4, S4, S0
	0x03A7FF44 FMUL S0, S5, S0
	0x03A7FF48 FADD S3, S4, S3
	0x03A7FF4C FADD S0, S1, S0
	0x03A7FF50 STP S0, S3, [X19]
	0x03A7FF54 LDP X20, X19, [X31 + 0x70]
	0x03A7FF58 LDP X22, X21, [X31 + 0x60]
	0x03A7FF5C LDP X24, X23, [X31 + 0x50]
	0x03A7FF60 LDR X30, [X31 + 0x40]
	0x03A7FF64 LDP D9, D8, [X31 + 0x30]
	0x03A7FF68 LDP D11, D10, [X31 + 0x20]
	0x03A7FF6C LDP D13, D12, [X31 + 0x10]
	0x03A7FF70 LDP D15, D14, [X31], #0x80
	0x03A7FF74 RET
	0x03A7FF78 STR D10, [X31 - 0x40]!
	0x03A7FF7C STP D9, D8, [X31 + 0x10]
	0x03A7FF80 STP X30, X21, [X31 + 0x20]
	0x03A7FF84 STP X20, X19, [X31 + 0x30]
	0x03A7FF88 ADRP X21, 0x963000
	0x03A7FF8C ADRP X20, 0x69F000
	0x03A7FF90 LDRB W8, [X21 + 0x312]
	0x03A7FF94 LDR X20, [X20 + 0xDB8]
	0x03A7FF98 MOV V8.16B, V2.16B
	0x03A7FF9C MOV V9.16B, V1.16B
	0x03A7FFA0 MOV V10.16B, V0.16B
	0x03A7FFA4 MOV X19, X0
	0x03A7FFA8 TBNZ X8, 0x0, 0x3A7FFC0
	0x03A7FFAC ADRP X0, 0x69F000
	0x03A7FFB0 LDR X0, [X0 + 0xDB8]
	0x03A7FFB4 BL 0x1C16CF4
	0x03A7FFB8 MOVZ W8, 0x1
	0x03A7FFBC STRB W8, [X21 + 0x312]
	0x03A7FFC0 LDR X0, [X20]
	0x03A7FFC4 STR W31, [X31 + 0xC]
	0x03A7FFC8 LDR W8, [X0 + 0xE0]
	0x03A7FFCC CBNZ W8, 0x3A7FFD4
	0x03A7FFD0 BL 0x1C16DFC
	0x03A7FFD4 MOV X0, X19
	0x03A7FFD8 MOV V0.16B, V10.16B
	0x03A7FFDC MOV V1.16B, V9.16B
	0x03A7FFE0 MOV V2.16B, V8.16B
	0x03A7FFE4 BL 0x3A80268
	0x03A7FFE8 MOVZ W9, 0x7F800000
	0x03A7FFEC FMOV S2, W9
	0x03A7FFF0 LDR W9, [X19 + 0xFC]
	0x03A7FFF4 FCVTZS W8, S1
	0x03A7FFF8 MOVZ W10, 0x80000000
	0x03A7FFFC FCMP S1, S2
	0x03A80000 FCVTZS W11, S0
	0x03A80004 CSEL W21, W10, W8, EQ
	0x03A80008 FCMP S0, S2
	0x03A8000C SUB W8, W9, 0x1
	0x03A80010 CSEL W20, W10, W11, EQ
	0x03A80014 CMP W8, W21
	0x03A80018 CSEL W8, W8, W21, LT
	0x03A8001C ADD X0, X19, 0x106
	0x03A80020 BIC W1, W8, W8, 0x1F
	0x03A80024 MOV X2, X31
	0x03A80028 BL 0x3A7A2C0
	0x03A8002C TBNZ X21, 0x1F, 0x3A80088
	0x03A80030 TBNZ X20, 0x1F, 0x3A80088
	0x03A80034 LDR W8, [X19 + 0xFC]
	0x03A80038 CMP W21, W8
	0x03A8003C B.GE 0x3A80088
	0x03A80040 LDR W8, [X19 + 0xF8]
	0x03A80044 CMP W20, W8
	0x03A80048 B.GE 0x3A80088
	0x03A8004C LDR W8, [X19 + 0x10C]
	0x03A80050 LDR X9, [X19 + 0x20]
	0x03A80054 ADD W21, W21, 0x1
	0x03A80058 ADD X0, X31, 0xC
	0x03A8005C ADD W8, W21, W8
	0x03A80060 LDR W8, [X9, W8, SXTW]
	0x03A80064 MOV W1, W20
	0x03A80068 MOV X2, X31
	0x03A8006C STR W8, [X31 + 0xC]
	0x03A80070 BL 0x3A7A2C0
	0x03A80074 LDR W8, [X19 + 0x10C]
	0x03A80078 LDR W9, [X31 + 0xC]
	0x03A8007C LDR X10, [X19 + 0x20]
	0x03A80080 ADD W8, W21, W8
	0x03A80084 STR W9, [X10, W8, SXTW]
	0x03A80088 LDP X20, X19, [X31 + 0x30]
	0x03A8008C LDP X30, X21, [X31 + 0x20]
	0x03A80090 LDP D9, D8, [X31 + 0x10]
	0x03A80094 LDR V10, [X31], #0x40
	0x03A80098 RET
	0x03A8009C STP D13, D12, [X31 - 0x50]!
	0x03A800A0 STP D11, D10, [X31 + 0x10]
	0x03A800A4 STP D9, D8, [X31 + 0x20]
	0x03A800A8 STR X30, [X31 + 0x30]
	0x03A800AC STP X20, X19, [X31 + 0x40]
	0x03A800B0 MOV X1, X31
	0x03A800B4 MOV X19, X0
	0x03A800B8 MOV V8.16B, V2.16B
	0x03A800BC MOV V9.16B, V1.16B
	0x03A800C0 MOV V10.16B, V0.16B
	0x03A800C4 BL 0x3C5BC7C
	0x03A800C8 CMP W0, 0x2
	0x03A800CC B.NE 0x3A800D8
	0x03A800D0 MOVZ W0, 0x1
	0x03A800D4 B 0x3A80174
	0x03A800D8 ADRP X20, 0x961000
	0x03A800DC LDP S11, S12, [X19 + 0x74]
	0x03A800E0 LDRB W8, [X20 + 0x585]
	0x03A800E4 LDR V13, [X19 + 0x7C]
	0x03A800E8 CBNZ W8, 0x3A80100
	0x03A800EC ADRP X0, 0x673000
	0x03A800F0 LDR X0, [X0 + 0x5A8]
	0x03A800F4 BL 0x1C16CF4
	0x03A800F8 MOVZ W8, 0x1
	0x03A800FC STRB W8, [X20 + 0x585]
	0x03A80100 ADRP X8, 0x673000
	0x03A80104 LDR X8, [X8 + 0x5A8]
	0x03A80108 FSUB S10, S10, S11
	0x03A8010C FSUB S9, S9, S12
	0x03A80110 FSUB S8, S8, S13
	0x03A80114 LDR X0, [X8]
	0x03A80118 LDR W8, [X0 + 0xE0]
	0x03A8011C CBNZ W8, 0x3A80124
	0x03A80120 BL 0x1C16DFC
	0x03A80124 FMUL S1, S10, S10
	0x03A80128 FMUL S2, S9, S9
	0x03A8012C FMUL S0, S8, S8
	0x03A80130 FADD S1, S1, S2
	0x03A80134 FADD S0, S0, S1
	0x03A80138 FMOV S2, 1
	0x03A8013C FSQRT S0, S0
	0x03A80140 FDIV S0, S2, S0
	0x03A80144 LDP S1, S2, [X19 + 0x80]
	0x03A80148 FMUL S3, S10, S0
	0x03A8014C FMUL S4, S9, S0
	0x03A80150 FMUL S0, S8, S0
	0x03A80154 FMUL S1, S3, S1
	0x03A80158 LDP S3, S5, [X19 + 0x88]
	0x03A8015C FMUL S2, S4, S2
	0x03A80160 FADD S1, S1, S2
	0x03A80164 FMUL S0, S0, S3
	0x03A80168 FADD S0, S0, S1
	0x03A8016C FCMP S0, S5
	0x03A80170 CSET W0, GE
	0x03A80174 LDP X20, X19, [X31 + 0x40]
	0x03A80178 LDR X30, [X31 + 0x30]
	0x03A8017C LDP D9, D8, [X31 + 0x20]
	0x03A80180 LDP D11, D10, [X31 + 0x10]
	0x03A80184 LDP D13, D12, [X31], #0x50
	0x03A80188 RET
	0x03A8018C STR D8, [X31 - 0x30]!
	0x03A80190 STR X30, [X31 + 0x8]
	0x03A80194 STP X22, X21, [X31 + 0x10]
	0x03A80198 STP X20, X19, [X31 + 0x20]
	0x03A8019C ADRP X21, 0x962000
	0x03A801A0 ADRP X22, 0x69E000
	0x03A801A4 LDRB W8, [X21 + 0x313]
	0x03A801A8 LDR X22, [X22 + 0xDB8]
	0x03A801AC MOV V8.16B, V0.16B
	0x03A801B0 MOV X19, X1
	0x03A801B4 MOV X20, X0
	0x03A801B8 TBNZ X8, 0x0, 0x3A801D0
	0x03A801BC ADRP X0, 0x69E000
	0x03A801C0 LDR X0, [X0 + 0xDB8]
	0x03A801C4 BL 0x1C16CF4
	0x03A801C8 MOVZ W8, 0x1
	0x03A801CC STRB W8, [X21 + 0x313]
	0x03A801D0 LDR X0, [X22]
	0x03A801D4 LDR W8, [X0 + 0xE0]
	0x03A801D8 CBNZ W8, 0x3A801E0
	0x03A801DC BL 0x1C16DFC
	0x03A801E0 MOV X0, X20
	0x03A801E4 MOV V0.16B, V8.16B
	0x03A801E8 MOV V1.16B, V8.16B
	0x03A801EC MOV V2.16B, V8.16B
	0x03A801F0 BL 0x3A80268
	0x03A801F4 LDR W8, [X20 + 0xF8]
	0x03A801F8 FMOV W9, S0
	0x03A801FC AND W9, W9, 0x7FFFFFFF
	0x03A80200 MOVZ W10, 0x7F800000
	0x03A80204 SUB W8, W8, 0x1
	0x03A80208 CMP W9, W10
	0x03A8020C SCVTF S1, W8
	0x03A80210 FCCMP S0, S1, 0x0, LS
	0x03A80214 FCSEL S0, S1, S0, GT
	0x03A80218 FMOV W8, S0
	0x03A8021C AND W8, W8, 0x7FFFFFFF
	0x03A80220 FMOV S1, W31
	0x03A80224 CMP W8, W10
	0x03A80228 FCCMP S0, S1, 0x8, LS
	0x03A8022C FMOV D1, X31
	0x03A80230 MOVZ X8, 0x7FF00000
	0x03A80234 FCVT S0, S0
	0x03A80238 MOV X0, X19
	0x03A8023C LDP X20, X19, [X31 + 0x20]
	0x03A80240 LDP X22, X21, [X31 + 0x10]
	0x03A80244 LDR X30, [X31 + 0x8]
	0x03A80248 FCSEL D0, D1, D0, MI
	0x03A8024C FMOV D1, X8
	0x03A80250 FCVTZS W8, D0
	0x03A80254 FCMP D0, D1
	0x03A80258 CSEL W1, W31, W8, EQ
	0x03A8025C MOV X2, X31
	0x03A80260 LDR V8, [X31], #0x30
	0x03A80264 B 0x3A7A2C0
	0x03A80268 STP D9, D8, [X31 - 0x30]!
	0x03A8026C STP X30, X21, [X31 + 0x10]
	0x03A80270 STP X20, X19, [X31 + 0x20]
	0x03A80274 ADRP X20, 0x962000
	0x03A80278 ADRP X21, 0x6D7000
	0x03A8027C LDRB W8, [X20 + 0x310]
	0x03A80280 LDR X21, [X21 + 0x20]
	0x03A80284 MOV V8.16B, V1.16B
	0x03A80288 MOV V9.16B, V0.16B
	0x03A8028C MOV X19, X0
	0x03A80290 TBNZ X8, 0x0, 0x3A802A8
	0x03A80294 ADRP X0, 0x6D7000
	0x03A80298 LDR X0, [X0 + 0x20]
	0x03A8029C BL 0x1C16CF4
	0x03A802A0 MOVZ W8, 0x1
	0x03A802A4 STRB W8, [X20 + 0x310]
	0x03A802A8 LDR W1, [X19 + 0x110]
	0x03A802AC LDR X2, [X21]
	0x03A802B0 ADD X20, X19, 0xD8
	0x03A802B4 MOV X0, X20
	0x03A802B8 BL 0x2D1F55C
	0x03A802BC LDR W1, [X19 + 0x110]
	0x03A802C0 LDR X2, [X21]
	0x03A802C4 MOV X0, X20
	0x03A802C8 FMUL S9, S9, S0
	0x03A802CC FMUL S8, S8, S1
	0x03A802D0 BL 0x2D1F55C
	0x03A802D4 LDP S0, S1, [X19 + 0xB8]
	0x03A802D8 LDP X20, X19, [X31 + 0x20]
	0x03A802DC LDP X30, X21, [X31 + 0x10]
	0x03A802E0 FADD S2, S9, S2
	0x03A802E4 FADD S3, S8, S3
	0x03A802E8 FMUL S0, S0, S2
	0x03A802EC FMUL S1, S3, S1
	0x03A802F0 LDP D9, D8, [X31], #0x30
	0x03A802F4 RET
	0x03A802F8 STP D13, D12, [X31 - 0x50]!
	0x03A802FC STP D11, D10, [X31 + 0x10]
	0x03A80300 STP D9, D8, [X31 + 0x20]
	0x03A80304 STR X30, [X31 + 0x30]
	0x03A80308 STP X20, X19, [X31 + 0x40]
	0x03A8030C ADRP X20, 0x962000
	0x03A80310 ADRP X19, 0x69E000
	0x03A80314 LDRB W8, [X20 + 0x317]
	0x03A80318 LDR X19, [X19 + 0xDB8]
	0x03A8031C MOV V8.16B, V4.16B
	0x03A80320 MOV V12.16B, V3.16B
	0x03A80324 MOV V9.16B, V2.16B
	0x03A80328 MOV V11.16B, V1.16B
	0x03A8032C MOV V10.16B, V0.16B
	0x03A80330 TBNZ X8, 0x0, 0x3A80354
	0x03A80334 ADRP X0, 0x69E000
	0x03A80338 LDR X0, [X0 + 0xDB8]
	0x03A8033C BL 0x1C16CF4
	0x03A80340 ADRP X0, 0x6D7000
	0x03A80344 LDR X0, [X0 + 0x28]
	0x03A80348 BL 0x1C16CF4
	0x03A8034C MOVZ W8, 0x1
	0x03A80350 STRB W8, [X20 + 0x317]
	0x03A80354 LDR X0, [X19]
	0x03A80358 LDR W8, [X0 + 0xE0]
	0x03A8035C CBNZ W8, 0x3A80364
	0x03A80360 BL 0x1C16DFC
	0x03A80364 MOV V0.16B, V12.16B
	0x03A80368 BL 0x3A7E228
	0x03A8036C MOV V12.16B, V0.16B
	0x03A80370 MOV V0.16B, V11.16B
	0x03A80374 BL 0x3A7E228
	0x03A80378 FMUL S0, S12, S0
	0x03A8037C FMOV S12, 1
	0x03A80380 FDIV S11, S12, S0
	0x03A80384 MOV V0.16B, V10.16B
	0x03A80388 BL 0x3A7E228
	0x03A8038C MOV V10.16B, V0.16B
	0x03A80390 MOV V0.16B, V9.16B
	0x03A80394 BL 0x3A7E228
	0x03A80398 ADRP X19, 0x961000
	0x03A8039C LDRB W8, [X19 + 0x585]
	0x03A803A0 FDIV S10, S12, S10
	0x03A803A4 FMUL S12, S0, S11
	0x03A803A8 FADD S0, S9, S9
	0x03A803AC FMUL S9, S8, S0
	0x03A803B0 CBNZ W8, 0x3A803C8
	0x03A803B4 ADRP X0, 0x673000
	0x03A803B8 LDR X0, [X0 + 0x5A8]
	0x03A803BC BL 0x1C16CF4
	0x03A803C0 MOVZ W8, 0x1
	0x03A803C4 STRB W8, [X19 + 0x585]
	0x03A803C8 ADRP X8, 0x673000
	0x03A803CC LDR X8, [X8 + 0x5A8]
	0x03A803D0 ADRP X19, 0x6D7000
	0x03A803D4 FADD S10, S10, S12
	0x03A803D8 FMUL S9, S9, S11
	0x03A803DC LDR X0, [X8]
	0x03A803E0 LDR W8, [X0 + 0xE0]
	0x03A803E4 LDR X19, [X19 + 0x28]
	0x03A803E8 CBNZ W8, 0x3A803F0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X22
	012 Move [X31+136], X21
	013 Move [X31+144], X20
	014 Move [X31+152], X19
	015 Move X21, 0x964000
	016 Move W8, [X21+793]
	017 Move X19, X1
	018 Move X20, X0
	019 Move V13, V5
	020 Move V15, V4
	021 Move V14, V3
	022 Move V11, V2
	023 Move V12, V1
	024 Move [X31+40], S7
	025 Move [X31+120], S6
	026 Move [X31+128], S0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {37}
	031 Move X0, 0x6A0000
	032 Move X0, [X0+3512]
	033 Call 0x1C17CF4
	034 Move V0, [X31+124]
	035 Move W8, 1
	036 Move [X21+793], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X19+8], W31
	039 Move [X19], D1
	040 Move [X20], D1
	041 Move [X20+8], W31
	042 Move X21, 0x963000
	043 Move W8, [X21+1413]
	044 Compare W8, 0
	045 JumpIfNotEqual {52}
	046 Move X0, 0x675000
	047 Move X0, [X0+1448]
	048 Call 0x1C17CF4
	049 Move V0, [X31+124]
	050 Move W8, 1
	051 Move [X21+1413], W8
	052 Move X22, 0x675000
	053 Move X22, [X22+1448]
	054 NotImplemented "Instruction FNEG not yet implemented."
	055 NotImplemented "Instruction FNEG not yet implemented."
	056 NotImplemented "Instruction FNEG not yet implemented."
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move V0, [X31+124]
	063 Multiply S3, S0, S0
	064 Multiply S2, S12, S12
	065 Multiply S1, S11, S11
	066 Add S2, S3, S2
	067 Add S1, S1, S2
	068 Move S7, 1
	069 NotImplemented "Instruction FSQRT not yet implemented."
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 Multiply S2, S1, S10
	072 Multiply S3, S1, S9
	073 Multiply S1, S1, S8
	074 Multiply S2, S14, S2
	075 Multiply S3, S15, S3
	076 Add S2, S2, S3
	077 Multiply S1, S13, S1
	078 Add S1, S1, S2
	079 Move V2, [X31+120]
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Multiply S2, S0, S14
	082 Multiply S3, S12, S15
	083 Add S2, S2, S3
	084 Multiply S3, S11, S13
	085 Move X9, -49893376
	086 Add S2, S3, S2
	087 Move V3, [X9+576]
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FNEG not yet implemented."
	090 Move X8, 0x69F000
	091 NotImplemented "Instruction FCSEL not yet implemented."
	092 Move S3, -1
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move X8, [X8+3512]
	095 Multiply S4, S14, S2
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 Move [X31+4], S3
	098 Add S3, S0, S4
	099 Move V0, [X31+40]
	100 Move V1, [X31+160]
	101 Move S20, [X31+180]
	102 Move S19, [X31+184]
	103 Move V21, [X31+176]
	104 Move S17, [X31+196]
	105 Move S16, [X31+200]
	106 Move V18, [X31+192]
	107 Move X0, [X8]
	108 Multiply S5, S15, S2
	109 Multiply S6, S13, S2
	110 NotImplemented "Instruction FABS not yet implemented."
	111 Add S4, S12, S5
	112 Multiply S0, S2, S0
	113 Move [X31+120], S11
	114 Add S5, S11, S6
	115 NotImplemented "Instruction FDIV not yet implemented."
	116 NotImplemented "Instruction FNEG not yet implemented."
	117 Multiply S1, S21, S3
	118 Multiply S2, S20, S0
	119 Move W8, [X0+224]
	120 Subtract S1, S2, S1
	121 Multiply S2, S18, S3
	122 Multiply S0, S17, S0
	123 Subtract S0, S0, S2
	124 Multiply S2, S19, S5
	125 Subtract S9, S1, S2
	126 Multiply S1, S16, S5
	127 Subtract S8, S0, S1
	128 Move [X31+44], S12
	129 Move [X31+12], S4
	130 Move [X31+20], S3
	131 Move [X31+20], S21
	132 Move [X31+28], S20
	133 Move [X31+32], S18
	134 Move [X31+40], S17
	135 Move [X31+28], S19
	136 Move [X31+40], S16
	137 Move [X31+8], S5
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move V0, V11
	142 Call TilingJob.square, V0
	143 NotImplemented "Instruction FNEG not yet implemented."
	144 Move W8, [X21+1413]
	145 NotImplemented "Instruction FNEG not yet implemented."
	146 NotImplemented "Instruction FDIV not yet implemented."
	147 NotImplemented "Instruction FNEG not yet implemented."
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 Subtract S14, S2, S0
	150 Subtract S8, S1, S0
	151 Compare W8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, 0x674000
	154 Move X0, [X0+1448]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X21+1413], W8
	158 Move X0, [X22]
	159 Subtract S12, S8, S14
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfEqual {164}
	163 Move W8, W31
	164 Call 0x1C17DFC
	165 Move W8, [X21+1413]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Multiply S0, S12, S12
	169 Move S1, 4
	170 Add S0, S0, S1
	171 Move S2, 1
	172 NotImplemented "Instruction FSQRT not yet implemented."
	173 NotImplemented "Instruction FDIV not yet implemented."
	174 Add S13, S0, S0
	175 NotImplemented "Instruction FNEG not yet implemented."
	176 Multiply S15, S12, S0
	177 Multiply S0, S14, S8
	178 Subtract S9, S0, S15
	179 Multiply S10, S11, S11
	180 Multiply S12, S9, S9
	181 Compare W8, 0
	182 JumpIfEqual {188}
	183 Move X0, 0x674000
	184 Move X0, [X0+1448]
	185 Call 0x1C17CF4
	186 Move W8, 1
	187 Move [X21+1413], W8
	188 Move X0, [X22]
	189 Multiply S14, S15, S9
	190 Multiply S11, S9, S8
	191 Subtract S8, S10, S12
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfEqual {196}
	195 Move W8, W31
	196 Call 0x1C17DFC
	197 Move W8, [X21+1413]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSET not yet implemented."
	200 Move S2, [X31+20]
	201 Move S3, [X31+24]
	202 Move V4, [X31+28]
	203 NotImplemented "Instruction FSQRT not yet implemented."
	204 Multiply S12, S13, S0
	205 Multiply S13, S15, S0
	206 Add S0, S14, S12
	207 Multiply S2, S2, S0
	208 Multiply S3, S3, S0
	209 Multiply S0, S4, S0
	210 Move S4, [X31+32]
	211 Move S5, [X31+36]
	212 Move V6, [X31+40]
	213 Add S1, S11, S13
	214 Multiply S4, S4, S1
	215 Multiply S5, S5, S1
	216 Multiply S1, S6, S1
	217 Move V6, [X31+16]
	218 Add S2, S6, S2
	219 Move V6, [X31+12]
	220 Add S8, S4, S2
	221 Add S3, S6, S3
	222 Move V6, [X31+8]
	223 Add S9, S5, S3
	224 Add S0, S6, S0
	225 Add S10, S1, S0
	226 Compare W8, 0
	227 JumpIfEqual {233}
	228 Move X0, 0x674000
	229 Move X0, [X0+1448]
	230 Call 0x1C17CF4
	231 Move W8, 1
	232 Move [X21+1413], W8
	233 Move V0, [X31+124]
	234 Subtract S15, S11, S13
	235 Move X0, [X22]
	236 Subtract S12, S14, S12
	237 Subtract S11, S8, S0
	238 Move V0, [X31+44]
	239 Move W8, [X0+224]
	240 Subtract S14, S9, S0
	241 Move V0, [X31+120]
	242 Subtract S13, S10, S0
	243 Compare W8, 0
	244 JumpIfEqual {246}
	245 Move W8, W31
	246 Call 0x1C17DFC
	247 Move W8, [X21+1413]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 NotImplemented "Instruction CSET not yet implemented."
	250 Multiply S1, S11, S11
	251 Multiply S2, S14, S14
	252 Move S3, [X31+20]
	253 Move S4, [X31+24]
	254 Add S1, S1, S2
	255 Move V2, [X31+16]
	256 Move S5, [X31+28]
	257 Move S7, [X31+32]
	258 Multiply S3, S3, S12
	259 Multiply S4, S4, S12
	260 Add S2, S2, S3
	261 Move V3, [X31+12]
	262 Move S16, [X31+36]
	263 Move S17, [X31+40]
	264 Multiply S0, S13, S13
	265 Add S0, S0, S1
	266 Add S3, S3, S4
	267 Move V4, [X31+8]
	268 Multiply S5, S5, S12
	269 Move S6, 1
	270 NotImplemented "Instruction FSQRT not yet implemented."
	271 Multiply S7, S7, S15
	272 Multiply S16, S16, S15
	273 Multiply S17, S17, S15
	274 Add S4, S4, S5
	275 NotImplemented "Instruction FDIV not yet implemented."
	276 Add S15, S7, S2
	277 Add S8, S16, S3
	278 Multiply S10, S11, S0
	279 Multiply S14, S14, S0
	280 Multiply S9, S13, S0
	281 Add S12, S17, S4
	282 Compare W8, 0
	283 JumpIfEqual {289}
	284 Move X0, 0x674000
	285 Move X0, [X0+1448]
	286 Call 0x1C17CF4
	287 Move W8, 1
	288 Move [X21+1413], W8
	289 Move V6, [X31+4]
	290 Move V0, [X31+124]
	291 Move X0, [X22]
	292 Move V11, [X31+168]
	293 Multiply S13, S6, S10
	294 Subtract S10, S15, S0
	295 Move V0, [X31+44]
	296 Multiply S4, S6, S14
	297 Multiply S14, S6, S9
	298 Move W8, [X0+224]
	299 Subtract S9, S8, S0
	300 Move V0, [X31+120]
	301 Subtract S8, S12, S0
	302 Compare W8, 0
	303 JumpIfNotEqual {308}
	304 Move V12, V4
	305 Call 0x1C17DFC
	306 Move V6, [X31+4]
	307 Move V4, V12
	308 Multiply S1, S10, S10
	309 Multiply S2, S9, S9
	310 Multiply S0, S8, S8
	311 Add S1, S1, S2
	312 Add S0, S0, S1
	313 Move S2, 1
	314 NotImplemented "Instruction FSQRT not yet implemented."
	315 NotImplemented "Instruction FDIV not yet implemented."
	316 Multiply S1, S10, S0
	317 Multiply S2, S9, S0
	318 Multiply S0, S8, S0
	319 Multiply S1, S6, S1
	320 Multiply S2, S6, S2
	321 Multiply S0, S6, S0
	322 Multiply S3, S13, S11
	323 Multiply S4, S4, S11
	324 Multiply S5, S14, S11
	325 Multiply S1, S1, S11
	326 Multiply S2, S2, S11
	327 Multiply S0, S0, S11
	328 Move [X20], S3
	329 Move [X20+8], S4
	330 Move [X20+8], S5
	331 Move [X19], S1
	332 Move [X19+8], S2
	333 Move [X19+8], S0
	334 Move X20, [X31+144]
	335 Move X19, [X31+152]
	336 Move X22, [X31+128]
	337 Move X21, [X31+136]
	338 Move X30, [X31+112]
	339 Move D9, [X31+96]
	340 Move D8, [X31+104]
	341 Move D11, [X31+80]
	342 Move D10, [X31+88]
	343 Move D13, [X31+64]
	344 Move D12, [X31+72]
	345 Move D15, [X31+48]
	346 Move D14, [X31+56]
	347 Add X31, X31, 160
	348 Return 

Method: Unity.Mathematics.float3 EvaluateNearConic(System.Single near, Unity.Mathematics.float3 o, Unity.Mathematics.float3 d, System.Single r, Unity.Mathematics.float3 u, Unity.Mathematics.float3 v, System.Single theta)

Disassembly:
	0x03A7FC28 FSUB S0, S11, S10
	0x03A7FC2C BL 0x3A7E228
	0x03A7FC30 ADRP X22, 0x962000
	0x03A7FC34 LDRB W8, [X22 + 0x585]
	0x03A7FC38 MOV V15.16B, V0.16B
	0x03A7FC3C CBNZ W8, 0x3A7FC54
	0x03A7FC40 ADRP X0, 0x674000
	0x03A7FC44 LDR X0, [X0 + 0x5A8]
	0x03A7FC48 BL 0x1C16CF4
	0x03A7FC4C MOVZ W8, 0x1
	0x03A7FC50 STRB W8, [X22 + 0x585]
	0x03A7FC54 ADRP X23, 0x674000
	0x03A7FC58 LDR X23, [X23 + 0x5A8]
	0x03A7FC5C FSUB S14, S14, S15
	0x03A7FC60 LDR X0, [X23]
	0x03A7FC64 LDR W8, [X0 + 0xE0]
	0x03A7FC68 CBZ W8, 0x3A7FC74
	0x03A7FC6C MOV W8, W31
	0x03A7FC70 B 0x3A7FC84
	0x03A7FC74 BL 0x1C16DFC
	0x03A7FC78 LDRB W8, [X22 + 0x585]
	0x03A7FC7C CMP W8, 0x0
	0x03A7FC80 CSET W8, EQ
	0x03A7FC84 FSQRT S0, S14
	0x03A7FC88 FSUB S1, S12, S0
	0x03A7FC8C FADD S0, S12, S0
	0x03A7FC90 STP S11, S8, [X20 + 0x4]
	0x03A7FC94 STR S1, [X20]
	0x03A7FC98 STP S0, S11, [X19]
	0x03A7FC9C STR S8, [X19 + 0x8]
	0x03A7FCA0 CBZ W8, 0x3A7FCB8
	0x03A7FCA4 ADRP X0, 0x674000
	0x03A7FCA8 LDR X0, [X0 + 0x5A8]
	0x03A7FCAC BL 0x1C16CF4
	0x03A7FCB0 MOVZ W8, 0x1
	0x03A7FCB4 STRB W8, [X22 + 0x585]
	0x03A7FCB8 LDR X0, [X23]
	0x03A7FCBC LDR W8, [X0 + 0xE0]
	0x03A7FCC0 CBZ W8, 0x3A7FCFC
	0x03A7FCC4 MOV W8, W31
	0x03A7FCC8 CBZ W8, 0x3A7FCE0
	0x03A7FCCC ADRP X0, 0x674000
	0x03A7FCD0 LDR X0, [X0 + 0x5A8]
	0x03A7FCD4 BL 0x1C16CF4
	0x03A7FCD8 MOVZ W8, 0x1
	0x03A7FCDC STRB W8, [X22 + 0x585]
	0x03A7FCE0 LDR X0, [X23]
	0x03A7FCE4 FMUL S15, S9, S9
	0x03A7FCE8 FNEG S14, S9
	0x03A7FCEC LDR W8, [X0 + 0xE0]
	0x03A7FCF0 CBZ W8, 0x3A7FD14
	0x03A7FCF4 MOV W8, W31
	0x03A7FCF8 B 0x3A7FD24
	0x03A7FCFC BL 0x1C16DFC
	0x03A7FD00 LDRB W8, [X22 + 0x585]
	0x03A7FD04 CMP W8, 0x0
	0x03A7FD08 CSET W8, EQ
	0x03A7FD0C CBNZ W8, 0x3A7FCCC
	0x03A7FD10 B 0x3A7FCE0
	0x03A7FD14 BL 0x1C16DFC
	0x03A7FD18 LDRB W8, [X22 + 0x585]
	0x03A7FD1C CMP W8, 0x0
	0x03A7FD20 CSET W8, EQ
	0x03A7FD24 FMOV S0, 1
	0x03A7FD28 FADD S1, S15, S0
	0x03A7FD2C FSQRT S1, S1
	0x03A7FD30 FMOV S11, W31
	0x03A7FD34 FDIV S0, S0, S1
	0x03A7FD38 FMUL S1, S0, S11
	0x03A7FD3C FMUL S2, S0, S14
	0x03A7FD40 FMUL S0, S10, S0
	0x03A7FD44 FMUL S1, S12, S1
	0x03A7FD48 FADD S0, S0, S1
	0x03A7FD4C LDR V1, [X31 + 0x4C]
	0x03A7FD50 FMUL S1, S1, S2
	0x03A7FD54 FADD S14, S1, S0
	0x03A7FD58 CBZ W8, 0x3A7FD70
	0x03A7FD5C ADRP X0, 0x674000
	0x03A7FD60 LDR X0, [X0 + 0x5A8]
	0x03A7FD64 BL 0x1C16CF4
	0x03A7FD68 MOVZ W8, 0x1
	0x03A7FD6C STRB W8, [X22 + 0x585]
	0x03A7FD70 LDR X0, [X23]
	0x03A7FD74 FABS S14, S14
	0x03A7FD78 LDR W8, [X0 + 0xE0]
	0x03A7FD7C CBZ W8, 0x3A7FD88
	0x03A7FD80 MOV W24, W31
	0x03A7FD84 B 0x3A7FD98
	0x03A7FD88 BL 0x1C16DFC
	0x03A7FD8C LDRB W8, [X22 + 0x585]
	0x03A7FD90 CMP W8, 0x0
	0x03A7FD94 CSET W24, EQ
	0x03A7FD98 MOV V0.16B, V13.16B
	0x03A7FD9C BL 0x3A7E228
	0x03A7FDA0 MOV V13.16B, V0.16B
	0x03A7FDA4 MOV V0.16B, V14.16B
	0x03A7FDA8 BL 0x3A7E228
	0x03A7FDAC MOV V14.16B, V0.16B
	0x03A7FDB0 CBZ W24, 0x3A7FDC8
	0x03A7FDB4 ADRP X0, 0x674000
	0x03A7FDB8 LDR X0, [X0 + 0x5A8]
	0x03A7FDBC BL 0x1C16CF4
	0x03A7FDC0 MOVZ W8, 0x1
	0x03A7FDC4 STRB W8, [X22 + 0x585]
	0x03A7FDC8 LDR X0, [X23]
	0x03A7FDCC LDR W8, [X0 + 0xE0]
	0x03A7FDD0 CBNZ W8, 0x3A7FDD8
	0x03A7FDD4 BL 0x1C16DFC
	0x03A7FDD8 FCMP S14, S13
	0x03A7FDDC B.HI 0x3A7FF54
	0x03A7FDE0 LDR V6, [X31 + 0x4C]
	0x03A7FDE4 FMOV S0, W31
	0x03A7FDE8 FMOV S1, 1
	0x03A7FDEC FMUL S2, S10, S11
	0x03A7FDF0 FADD S5, S15, S0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x963000
	015 Move W8, [X20+1380]
	016 Move V13, V7
	017 Move V15, V6
	018 Move V14, V3
	019 Move V9, V0
	020 Move [X31+12], S4
	021 Move [X31+20], S5
	022 Move [X31+28], S2
	023 Move [X31+20], S1
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x675000
	027 Move X0, [X0+1448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1380], W8
	031 Move X19, 0x675000
	032 Move X19, [X19+1448]
	033 Move V8, [X31+160]
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction FCVT not yet implemented."
	040 Move V0, V8
	041 Call 0x3EB2BF0
	042 Move X21, 0x963000
	043 Move W8, [X21+1386]
	044 Move V10, V0
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x675000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+1386], W8
	052 Move X0, [X19]
	053 Move V11, [X31+152]
	054 Move V12, [X31+136]
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move V0, V8
	061 Call 0x3EB2C30
	062 Move W8, [X20+1380]
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 Multiply S0, S12, S13
	065 Multiply S12, S0, S10
	066 Multiply S11, S11, S13
	067 Compare W8, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x675000
	070 Move X0, [X0+1448]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+1380], W8
	074 Move X0, [X19]
	075 Add S12, S15, S12
	076 Multiply S15, S11, S8
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move W8, [X21+1386]
	082 Subtract S11, S9, S14
	083 Add S12, S15, S12
	084 Move [X31+4], S10
	085 Move [X31+12], S13
	086 Move [X31+24], S9
	087 Compare W8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, 0x675000
	090 Move X0, [X0+1448]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X21+1386], W8
	094 Move X0, [X19]
	095 Move S10, [X31+144]
	096 Move S13, [X31+148]
	097 Move S15, [X31+128]
	098 Move S9, [X31+132]
	099 NotImplemented "Instruction FDIV not yet implemented."
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move S4, [X31+4]
	105 Move S3, [X31+8]
	106 Move X20, [X31+112]
	107 Move X19, [X31+120]
	108 Move X30, [X31+96]
	109 Move X21, [X31+104]
	110 Multiply S0, S13, S3
	111 Multiply S1, S10, S3
	112 Multiply S2, S9, S3
	113 Multiply S3, S15, S3
	114 Multiply S2, S2, S4
	115 Multiply S3, S3, S4
	116 Move V4, [X31+16]
	117 Multiply S0, S0, S8
	118 Multiply S1, S1, S8
	119 Move D9, [X31+80]
	120 Move D8, [X31+88]
	121 Add S2, S4, S2
	122 Move V4, [X31+12]
	123 Add S0, S0, S2
	124 Multiply S2, S0, S14
	125 Move V0, [X31+20]
	126 Add S3, S4, S3
	127 Add S1, S1, S3
	128 Multiply S1, S1, S14
	129 Add S0, S0, S1
	130 Move V1, [X31+28]
	131 Move D11, [X31+64]
	132 Move D10, [X31+72]
	133 Move D13, [X31+48]
	134 Move D12, [X31+56]
	135 Move D15, [X31+32]
	136 Move D14, [X31+40]
	137 Add S1, S1, S2
	138 Move V2, [X31+24]
	139 Add X31, X31, 128
	140 Return X0

Method: Unity.Mathematics.float2 FindNearConicTangentTheta(Unity.Mathematics.float2 o, Unity.Mathematics.float2 d, System.Single r, Unity.Mathematics.float2 u, Unity.Mathematics.float2 v)

Disassembly:
	0x03A7F99C FADD S0, S17, S0
	0x03A7F9A0 ADRP X19, 0x962000
	0x03A7F9A4 FMUL S5, S5, S11
	0x03A7F9A8 FMUL S1, S1, S9
	0x03A7F9AC FSUB S0, S0, S16
	0x03A7F9B0 LDRB W8, [X19 + 0x585]
	0x03A7F9B4 FMUL S3, S13, S5
	0x03A7F9B8 FSUB S0, S0, S1
	0x03A7F9BC FMUL S5, S10, S5
	0x03A7F9C0 FMUL S3, S14, S3
	0x03A7F9C4 FADD S0, S2, S0
	0x03A7F9C8 FMUL S5, S18, S5
	0x03A7F9CC FMUL S3, S3, S9
	0x03A7F9D0 FADD S0, S6, S0
	0x03A7F9D4 STR S14, [X31 + 0x2C]
	0x03A7F9D8 FMUL S14, S5, S9
	0x03A7F9DC FSUB S8, S0, S3
	0x03A7F9E0 FMUL S15, S11, S20
	0x03A7F9E4 MOV V16.16B, V10.16B
	0x03A7F9E8 MOV V5.16B, V18.16B
	0x03A7F9EC CBNZ W8, 0x3A7FA20
	0x03A7F9F0 ADRP X0, 0x674000
	0x03A7F9F4 LDR X0, [X0 + 0x5A8]
	0x03A7F9F8 STP S21, S13, [X31 + 0x20]
	0x03A7F9FC MOV V13.16B, V5.16B
	0x03A7FA00 MOV V10.16B, V19.16B
	0x03A7FA04 BL 0x1C16CF4
	0x03A7FA08 MOV V5.16B, V13.16B
	0x03A7FA0C LDP S21, S13, [X31 + 0x20]
	0x03A7FA10 LDR V16, [X31 + 0x30]
	0x03A7FA14 MOV V19.16B, V10.16B
	0x03A7FA18 MOVZ W8, 0x1
	0x03A7FA1C STRB W8, [X19 + 0x585]
	0x03A7FA20 ADRP X19, 0x674000
	0x03A7FA24 LDR X19, [X19 + 0x5A8]
	0x03A7FA28 FSUB S8, S8, S14
	0x03A7FA2C FMUL S14, S19, S15
	0x03A7FA30 FMUL S11, S11, S21
	0x03A7FA34 LDR X0, [X19]
	0x03A7FA38 MOV V10.16B, V19.16B
	0x03A7FA3C LDR W8, [X0 + 0xE0]
	0x03A7FA40 CBNZ W8, 0x3A7FA60
	0x03A7FA44 MOV V15.16B, V16.16B
	0x03A7FA48 STR S13, [X31 + 0x24]
	0x03A7FA4C MOV V13.16B, V5.16B
	0x03A7FA50 BL 0x1C16DFC
	0x03A7FA54 MOV V5.16B, V13.16B
	0x03A7FA58 LDR V13, [X31 + 0x24]
	0x03A7FA5C MOV V16.16B, V15.16B
	0x03A7FA60 LDP S4, S1, [X31 + 0x38]
	0x03A7FA64 LDR V19, [X31 + 0x34]
	0x03A7FA68 LDP S3, S7, [X31 + 0x88]
	0x03A7FA6C LDR V18, [X31 + 0x2C]
	0x03A7FA70 ADRP X20, 0x962000
	0x03A7FA74 FMUL S0, S19, S1
	0x03A7FA78 FMUL S1, S1, S9
	0x03A7FA7C FMUL S2, S4, S3
	0x03A7FA80 FSUB S0, S0, S1
	0x03A7FA84 FMUL S6, S7, S12
	0x03A7FA88 FMUL S3, S3, S12
	0x03A7FA8C FMUL S1, S4, S7
	0x03A7FA90 FMUL S4, S4, S5
	0x03A7FA94 FMUL S5, S5, S12
	0x03A7FA98 FMUL S12, S18, S6
	0x03A7FA9C FMUL S6, S19, S7
	0x03A7FAA0 LDRB W8, [X20 + 0x560]
	0x03A7FAA4 FSUB S0, S0, S2
	0x03A7FAA8 FMUL S1, S1, S18
	0x03A7FAAC FMUL S6, S6, S13
	0x03A7FAB0 FMUL S13, S13, S7
	0x03A7FAB4 FMUL S7, S19, S16
	0x03A7FAB8 FADD S0, S0, S3
	0x03A7FABC FSUB S4, S4, S7
	0x03A7FAC0 FADD S0, S1, S0
	0x03A7FAC4 FADD S8, S14, S8
	0x03A7FAC8 FMUL S14, S10, S11
	0x03A7FACC FSUB S15, S4, S5
	0x03A7FAD0 FSUB S10, S0, S6
	0x03A7FAD4 FMUL S11, S16, S9
	0x03A7FAD8 CBNZ W8, 0x3A7FAF0
	0x03A7FADC ADRP X0, 0x674000
	0x03A7FAE0 LDR X0, [X0 + 0x5A8]
	0x03A7FAE4 BL 0x1C16CF4
	0x03A7FAE8 MOVZ W8, 0x1
	0x03A7FAEC STRB W8, [X20 + 0x560]
	0x03A7FAF0 LDR X0, [X19]
	0x03A7FAF4 FADD S8, S14, S8
	0x03A7FAF8 FSUB S10, S10, S12
	0x03A7FAFC FMUL S9, S13, S9
	0x03A7FB00 LDR W8, [X0 + 0xE0]
	0x03A7FB04 FADD S11, S11, S15
	0x03A7FB08 CBNZ W8, 0x3A7FB2C
	0x03A7FB0C BL 0x1C16DFC
	0x03A7FB10 LDRB W8, [X20 + 0x560]
	0x03A7FB14 CBNZ W8, 0x3A7FB2C
	0x03A7FB18 ADRP X0, 0x674000
	0x03A7FB1C LDR X0, [X0 + 0x5A8]
	0x03A7FB20 BL 0x1C16CF4
	0x03A7FB24 MOVZ W8, 0x1
	0x03A7FB28 STRB W8, [X20 + 0x560]
	0x03A7FB2C LDR X0, [X19]
	0x03A7FB30 LDR V0, [X31 + 0x8C]
	0x03A7FB34 FSQRT S12, S8
	0x03A7FB38 FADD S8, S9, S10
	0x03A7FB3C LDR W8, [X0 + 0xE0]
	0x03A7FB40 FMUL S9, S11, S0
	0x03A7FB44 CBNZ W8, 0x3A7FB4C
	0x03A7FB48 BL 0x1C16DFC
	0x03A7FB4C FSUB S0, S9, S12
	0x03A7FB50 FADD S1, S9, S12
	0x03A7FB54 FDIV S9, S0, S8
	0x03A7FB58 FDIV S0, S1, S8
	0x03A7FB5C FCVT S0, S0
	0x03A7FB60 BL 0x3EB1D70
	0x00000000 INVALID
	0x03A7FB68 FCVT S0, S9
	0x03A7FB6C BL 0x3EB1D70
	0x00000000 INVALID
	0x03A7FB74 FADD S0, S8, S8
	0x03A7FB78 LDP X20, X19, [X31 + 0x90]
	0x03A7FB7C LDR X30, [X31 + 0x80]
	0x03A7FB80 LDP D9, D8, [X31 + 0x70]
	0x03A7FB84 LDP D11, D10, [X31 + 0x60]
	0x03A7FB88 LDP D13, D12, [X31 + 0x50]
	0x03A7FB8C LDP D15, D14, [X31 + 0x40]
	0x03A7FB90 FADD S1, S1, S1
	0x03A7FB94 ADD X31, X31, 0xA0
	0x03A7FB98 RET
	0x03A7FB9C STP D15, D14, [X31 - 0x80]!
	0x03A7FBA0 STP D13, D12, [X31 + 0x10]
	0x03A7FBA4 STP D11, D10, [X31 + 0x20]
	0x03A7FBA8 STP D9, D8, [X31 + 0x30]
	0x03A7FBAC STR X30, [X31 + 0x40]
	0x03A7FBB0 STP X24, X23, [X31 + 0x50]
	0x03A7FBB4 STP X22, X21, [X31 + 0x60]
	0x03A7FBB8 STP X20, X19, [X31 + 0x70]
	0x03A7FBBC STR S2, [X31 + 0x4C]
	0x03A7FBC0 ADRP X22, 0x963000
	0x03A7FBC4 ADRP X21, 0x69F000
	0x03A7FBC8 LDRB W8, [X22 + 0x315]
	0x03A7FBCC LDR X21, [X21 + 0xDB8]
	0x03A7FBD0 MOV X19, X1
	0x03A7FBD4 MOV X20, X0
	0x03A7FBD8 MOV V9.16B, V6.16B
	0x03A7FBDC MOV V14.16B, V5.16B
	0x03A7FBE0 MOV V8.16B, V4.16B
	0x03A7FBE4 MOV V13.16B, V3.16B
	0x03A7FBE8 MOV V10.16B, V1.16B
	0x03A7FBEC MOV V12.16B, V0.16B
	0x03A7FBF0 TBNZ X8, 0x0, 0x3A7FC08
	0x03A7FBF4 ADRP X0, 0x69F000
	0x03A7FBF8 LDR X0, [X0 + 0xDB8]
	0x03A7FBFC BL 0x1C16CF4
	0x03A7FC00 MOVZ W8, 0x1
	0x03A7FC04 STRB W8, [X22 + 0x315]
	0x03A7FC08 LDR X0, [X21]
	0x03A7FC0C FMUL S11, S8, S9
	0x03A7FC10 LDR W8, [X0 + 0xE0]
	0x03A7FC14 CBNZ W8, 0x3A7FC1C
	0x03A7FC18 BL 0x1C16DFC
	0x03A7FC1C MOV V0.16B, V14.16B
	0x03A7FC20 BL 0x3A7E228
	0x03A7FC24 MOV V14.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move [X31+104], S5
	014 Move [X31+112], S3
	015 Move [X31+28], S4
	016 Move X20, 0x964000
	017 Move X19, 0x6A0000
	018 Move W8, [X20+794]
	019 Move X19, [X19+3512]
	020 Move V8, V6
	021 Move V9, V2
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x6A0000
	027 Move X0, [X0+3512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+794], W8
	031 Move X0, [X19]
	032 Move S13, [X31+128]
	033 Move S12, [X31+132]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V0, V9
	039 Call TilingJob.square, V0
	040 Move V11, V0
	041 Move V0, V8
	042 Call TilingJob.square, V0
	043 Move V10, V0
	044 Move V0, V12
	045 Call TilingJob.square, V0
	046 Move [X31+8], S0
	047 Move V0, [X31+108]
	048 Move [X31+24], S8
	049 Call TilingJob.square, V0
	050 Move [X31+16], S12
	051 Move V12, [X31+104]
	052 Move V8, V0
	053 Move V0, V12
	054 Call TilingJob.square, V0
	055 Move V14, V0
	056 Move V0, V13
	057 Call TilingJob.square, V0
	058 Move V15, V0
	059 Move V0, [X31+28]
	060 Call TilingJob.square, V0
	061 Move V6, [X31+8]
	062 Move V7, [X31+108]
	063 Move [X31+12], S15
	064 Multiply S3, S8, S15
	065 Move V15, [X31+24]
	066 Move V5, V10
	067 Move V10, V0
	068 Add S2, S9, S9
	069 Multiply S0, S11, S5
	070 Multiply S1, S11, S6
	071 Multiply S4, S14, S10
	072 Multiply S2, S7, S2
	073 Add S0, S0, S1
	074 Multiply S1, S8, S14
	075 Multiply S8, S6, S4
	076 Multiply S4, S2, S12
	077 Multiply S4, S15, S4
	078 Subtract S0, S0, S4
	079 Add S4, S10, S10
	080 Multiply S4, S12, S4
	081 Move V12, [X31+16]
	082 Move X19, 0x963000
	083 Multiply S2, S2, S13
	084 Move W8, [X19+1413]
	085 Multiply S2, S12, S2
	086 Subtract S0, S0, S2
	087 Multiply S4, S15, S4
	088 Add S0, S1, S0
	089 Move [X31+20], S9
	090 Add S9, S3, S0
	091 Multiply S11, S13, S4
	092 Move V14, V13
	093 Compare W8, 0
	094 JumpIfNotEqual {102}
	095 Move X0, 0x675000
	096 Move X0, [X0+1448]
	097 Move V13, V5
	098 Call 0x1C17CF4
	099 Move V5, V13
	100 Move W8, 1
	101 Move [X19+1413], W8
	102 Move X19, 0x675000
	103 Move X19, [X19+1448]
	104 Subtract S8, S9, S8
	105 Multiply S11, S12, S11
	106 Multiply S9, S5, S10
	107 Move X0, [X19]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move V0, [X31+12]
	113 Move V13, [X31+20]
	114 Move V2, [X31+108]
	115 Move V3, [X31+28]
	116 Multiply S9, S0, S9
	117 Multiply S0, S13, S12
	118 Multiply S1, S2, S14
	119 Subtract S10, S0, S1
	120 Move V1, [X31+104]
	121 Move X20, 0x963000
	122 Move W8, [X20+1376]
	123 Add S8, S8, S11
	124 Multiply S0, S1, S3
	125 Multiply S11, S0, S12
	126 Multiply S12, S15, S3
	127 Compare W8, 0
	128 JumpIfNotEqual {136}
	129 Move X0, 0x675000
	130 Move X0, [X0+1448]
	131 Call 0x1C17CF4
	132 Move S1, [X31+104]
	133 Move S2, [X31+108]
	134 Move W8, 1
	135 Move [X20+1376], W8
	136 Move X0, [X19]
	137 Subtract S8, S8, S9
	138 Subtract S9, S10, S11
	139 Multiply S10, S12, S14
	140 Move W8, [X0+224]
	141 Multiply S11, S2, S1
	142 Multiply S12, S13, S15
	143 Compare W8, 0
	144 JumpIfNotEqual {154}
	145 Call 0x1C17DFC
	146 Move W8, [X20+1376]
	147 Compare W8, 0
	148 JumpIfNotEqual {154}
	149 Move X0, 0x675000
	150 Move X0, [X0+1448]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X20+1376], W8
	154 Move X0, [X19]
	155 NotImplemented "Instruction FSQRT not yet implemented."
	156 Add S8, S10, S9
	157 Subtract S9, S11, S12
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Subtract S0, S9, S13
	163 Add S1, S9, S13
	164 NotImplemented "Instruction FDIV not yet implemented."
	165 NotImplemented "Instruction FDIV not yet implemented."
	166 NotImplemented "Instruction FCVT not yet implemented."
	167 Call 0x3EB2D70
	168 NotImplemented "Instruction INVALID not yet implemented."
	169 NotImplemented "Instruction FCVT not yet implemented."
	170 Call 0x3EB2D70
	171 NotImplemented "Instruction INVALID not yet implemented."
	172 Add S0, S8, S8
	173 Move X20, [X31+112]
	174 Move X19, [X31+120]
	175 Move X30, [X31+96]
	176 Move D9, [X31+80]
	177 Move D8, [X31+88]
	178 Move D11, [X31+64]
	179 Move D10, [X31+72]
	180 Move D13, [X31+48]
	181 Move D12, [X31+56]
	182 Move D15, [X31+32]
	183 Move D14, [X31+40]
	184 Add S1, S1, S1
	185 Add X31, X31, 128
	186 Return X0

Method: Unity.Mathematics.float2 FindNearConicYTheta(System.Single near, Unity.Mathematics.float3 o, Unity.Mathematics.float3 d, System.Single r, Unity.Mathematics.float3 u, Unity.Mathematics.float3 v, System.Single y)

Disassembly:
	0x03A80738 MOV W7, W22
	0x03A8073C BL 0x3A8078C
	0x03A80740 LDP W3, W8, [X19 + 0x30]
	0x03A80744 LDR W9, [X19 + 0x3C]
	0x03A80748 MOVZ W5, 0x1
	0x03A8074C MOV X0, X19
	0x03A80750 ADD W4, W8, W3
	0x03A80754 SUB W9, W9, 0x1
	0x03A80758 MUL W8, W8, W24
	0x03A8075C MADD W6, W9, W3, W8
	0x03A80760 MOV W1, W20
	0x03A80764 MOV W2, W21
	0x03A80768 MOV W7, W22
	0x03A8076C BL 0x3A8078C
	0x03A80770 LDP X20, X19, [X31 + 0x50]
	0x03A80774 LDP X22, X21, [X31 + 0x40]
	0x03A80778 LDP X24, X23, [X31 + 0x30]
	0x03A8077C LDP X26, X25, [X31 + 0x20]
	0x03A80780 LDR X30, [X31 + 0x10]
	0x03A80784 ADD X31, X31, 0x60
	0x03A80788 RET
	0x03A8078C SUB X31, X31, 0x80
	0x03A80790 STP D9, D8, [X31 + 0x10]
	0x03A80794 STP X29, X30, [X31 + 0x20]
	0x03A80798 STP X28, X27, [X31 + 0x30]
	0x03A8079C STP X26, X25, [X31 + 0x40]
	0x03A807A0 STP X24, X23, [X31 + 0x50]
	0x03A807A4 STP X22, X21, [X31 + 0x60]
	0x03A807A8 STP X20, X19, [X31 + 0x70]
	0x03A807AC CMP W3, W4
	0x03A807B0 STP W2, W6, [X31 + 0x8]
	0x03A807B4 B.GE 0x3A8098C
	0x03A807B8 MOV W19, W7
	0x03A807BC MOV W21, W5
	0x03A807C0 MOV W23, W1
	0x03A807C4 MOV X24, X0
	0x03A807C8 SXTW X26, W3
	0x03A807CC SXTW X8, W4
	0x03A807D0 MOVZ W20, 0x7F800000
	0x03A807D4 MOVZ W22, 0x80000000
	0x03A807D8 STR X8, [X31]
	0x03A807DC LDR W9, [X31 + 0xC]
	0x03A807E0 LDR X8, [X24 + 0x10]
	0x03A807E4 LDRB W10, [X24 + 0x40]
	0x03A807E8 ADD W9, W26, W9
	0x03A807EC ADD X8, X8, W9, 0x3, SXTW
	0x03A807F0 LDP S9, S8, [X8]
	0x03A807F4 CBZ W10, 0x3A80800
	0x03A807F8 MOVZ W8, 0x1
	0x03A807FC B 0x3A80854
	0x03A80800 ADRP X8, 0x961000
	0x03A80804 LDRB W8, [X8 + 0x581]
	0x03A80808 CBNZ W8, 0x3A80824
	0x03A8080C ADRP X0, 0x673000
	0x03A80810 LDR X0, [X0 + 0x5A8]
	0x03A80814 BL 0x1C16CF4
	0x03A80818 ADRP X8, 0x961000
	0x03A8081C MOVZ W9, 0x1
	0x03A80820 STRB W9, [X8 + 0x581]
	0x03A80824 ADRP X8, 0x673000
	0x03A80828 LDR X8, [X8 + 0x5A8]
	0x03A8082C LDR X0, [X8]
	0x03A80830 LDR W8, [X0 + 0xE0]
	0x03A80834 CBNZ W8, 0x3A8083C
	0x03A80838 BL 0x1C16DFC
	0x03A8083C FCVT S0, S9
	0x03A80840 FMOV D1, 2
	0x03A80844 MOV X0, X31
	0x03A80848 BL 0x337ECD0
	0x03A8084C LDRB W8, [X24 + 0x40]
	0x00000000 INVALID
	0x03A80854 LDP S2, S1, [X24 + 0x20]
	0x03A80858 FMOV S0, W20
	0x03A8085C FMUL S3, S9, S2
	0x03A80860 FADD S3, S3, S1
	0x03A80864 FCVTZS W9, S3
	0x03A80868 FCMP S3, S0
	0x03A8086C CSEL W9, W22, W9, EQ
	0x03A80870 CMP W9, W23
	0x03A80874 CSEL W25, W9, W23, GT
	0x03A80878 CBNZ W8, 0x3A808D0
	0x03A8087C ADRP X8, 0x961000
	0x03A80880 LDRB W8, [X8 + 0x581]
	0x03A80884 CBNZ W8, 0x3A808A0
	0x03A80888 ADRP X0, 0x673000
	0x03A8088C LDR X0, [X0 + 0x5A8]
	0x03A80890 BL 0x1C16CF4
	0x03A80894 ADRP X8, 0x961000
	0x03A80898 MOVZ W9, 0x1
	0x03A8089C STRB W9, [X8 + 0x581]
	0x03A808A0 ADRP X8, 0x673000
	0x03A808A4 LDR X8, [X8 + 0x5A8]
	0x03A808A8 LDR X0, [X8]
	0x03A808AC LDR W8, [X0 + 0xE0]
	0x03A808B0 CBNZ W8, 0x3A808B8
	0x03A808B4 BL 0x1C16DFC
	0x03A808B8 FCVT S0, S8
	0x03A808BC FMOV D1, 2
	0x03A808C0 MOV X0, X31
	0x03A808C4 BL 0x337ECD0
	0x03A808C8 LDP S2, S1, [X24 + 0x20]
	0x00000000 INVALID
	0x03A808D0 FMUL S0, S8, S2
	0x03A808D4 LDR W9, [X31 + 0x8]
	0x03A808D8 FMOV S2, W20
	0x03A808DC FADD S0, S0, S1
	0x03A808E0 FCVTZS W8, S0
	0x03A808E4 FCMP S0, S2
	0x03A808E8 CSEL W8, W22, W8, EQ
	0x03A808EC CMP W8, W9
	0x03A808F0 CSEL W20, W8, W9, LT
	0x03A808F4 CMP W25, W20
	0x03A808F8 B.GT 0x3A80974
	0x03A808FC MOVZ W8, 0x1
	0x03A80900 LSLV W27, W8, W26
	0x03A80904 ADD W9, W26, 0x1F
	0x03A80908 CMP W26, 0x0
	0x03A8090C LDR X8, [X24]
	0x03A80910 CSEL W9, W9, W26, LT
	0x03A80914 SBFM W9, W9, 0x5, 0x1F
	0x03A80918 ADD W28, W9, 0x2
	0x03A8091C LDR W9, [X24 + 0x2C]
	0x03A80920 ADD W10, W19, W25
	0x03A80924 ADD W9, W9, 0x2
	0x03A80928 MUL W29, W9, W10
	0x03A8092C ADD W22, W29, W21
	0x03A80930 LDR W0, [X8, W22, SXTW]
	0x03A80934 BL 0x3A80614
	0x03A80938 UBFM X8, X0, 0x20, 0x3F
	0x03A8093C CMP W26, W0
	0x03A80940 CSEL W0, W0, W26, HI
	0x03A80944 CMP W26, W8
	0x03A80948 CSEL W1, W8, W26, CC
	0x03A8094C BL 0x3A8060C
	0x03A80950 LDR X8, [X24]
	0x03A80954 ADD W9, W28, W29
	0x03A80958 ADD W25, W25, 0x1
	0x03A8095C CMP W25, W20
	0x03A80960 STR W0, [X8, W22, SXTW]
	0x03A80964 LDR W10, [X8, W9, SXTW]
	0x03A80968 ORR W10, W10, W27, 0x0
	0x03A8096C STR W10, [X8, W9, SXTW]
	0x03A80970 B.LE 0x3A8091C
	0x03A80974 LDR X8, [X31]
	0x03A80978 ADD X26, X26, 0x1
	0x03A8097C MOVZ W20, 0x7F800000
	0x03A80980 MOVZ W22, 0x80000000
	0x03A80984 CMP X26, X8
	0x03A80988 B.NE 0x3A807DC
	0x03A8098C LDP X20, X19, [X31 + 0x70]
	0x03A80990 LDP X22, X21, [X31 + 0x60]
	0x03A80994 LDP X24, X23, [X31 + 0x50]
	0x03A80998 LDP X26, X25, [X31 + 0x40]
	0x03A8099C LDP X28, X27, [X31 + 0x30]
	0x03A809A0 LDP X29, X30, [X31 + 0x20]
	0x03A809A4 LDP D9, D8, [X31 + 0x10]
	0x03A809A8 ADD X31, X31, 0x80
	0x03A809AC RET
	0x03A809B0 STR X30, [X31 - 0x20]!
	0x03A809B4 STP X20, X19, [X31 + 0x10]
	0x03A809B8 ADRP X20, 0x962000
	0x03A809BC LDRB W8, [X20 + 0x31E]
	0x03A809C0 MOV X19, X0
	0x03A809C4 TBNZ X8, 0x0, 0x3A809E8
	0x03A809C8 ADRP X0, 0x6D7000
	0x03A809CC LDR X0, [X0 + 0x48]
	0x03A809D0 BL 0x1C16CF4
	0x03A809D4 ADRP X0, 0x69C000
	0x03A809D8 LDR X0, [X0 + 0x870]
	0x03A809DC BL 0x1C16CF4
	0x03A809E0 MOVZ W8, 0x1
	0x03A809E4 STRB W8, [X20 + 0x31E]
	0x03A809E8 STR X31, [X31 + 0x8]
	0x03A809EC CBZ X19, 0x3A80A44
	0x03A809F0 MOV X0, X19
	0x03A809F4 MOV X1, X31
	0x03A809F8 BL 0x3C32ECC
	0x03A809FC CBZ X0, 0x3A80A44
	0x03A80A00 ADRP X8, 0x69C000
	0x03A80A04 LDR X8, [X8 + 0x870]
	0x03A80A08 ADD X1, X31, 0x8
	0x03A80A0C MOV X19, X0
	0x03A80A10 LDR X2, [X8]
	0x03A80A14 BL 0x21E6600
	0x03A80A18 TBZ X0, 0x0, 0x3A80A24
	0x03A80A1C LDR X0, [X31 + 0x8]
	0x03A80A20 B 0x3A80A38
	0x03A80A24 ADRP X8, 0x6D7000
	0x03A80A28 LDR X8, [X8 + 0x48]
	0x03A80A2C MOV X0, X19
	0x03A80A30 LDR X1, [X8]
	0x03A80A34 BL 0x21E51FC
	0x03A80A38 LDP X20, X19, [X31 + 0x10]
	0x03A80A3C LDR X30, [X31], #0x20
	0x03A80A40 RET
	0x03A80A44 BL 0x1C16F20
	0x03A80A48 STR X30, [X31 - 0x10]!
	0x03A80A4C BL 0x3A809B0
	0x03A80A50 CBZ X0, 0x3A80A60
	0x03A80A54 LDR W0, [X0 + 0x48]
	0x03A80A58 LDR X30, [X31], #0x10
	0x03A80A5C RET
	0x03A80A60 BL 0x1C16F20
	0x03A80A64 STP X30, X21, [X31 - 0x20]!
	0x03A80A68 STP X20, X19, [X31 + 0x10]
	0x03A80A6C MOV W21, W1
	0x03A80A70 MOV X19, X0
	0x03A80A74 BL 0x3A809B0
	0x03A80A78 CBZ X0, 0x3A80AC8
	0x03A80A7C LDR W8, [X0 + 0x48]
	0x03A80A80 MOV X20, X0
	0x03A80A84 CMP W8, W21
	0x03A80A88 B.EQ 0x3A80AA8
	0x03A80A8C MOV X0, X20
	0x03A80A90 BL 0x3A80ACC
	0x03A80A94 STR W21, [X20 + 0x48]
	0x03A80A98 TBZ X0, 0x0, 0x3A80AA8
	0x03A80A9C MOV X0, X20
	0x03A80AA0 BL 0x3A80ACC
	0x03A80AA4 TBZ X0, 0x0, 0x3A80AB4
	0x03A80AA8 LDP X20, X19, [X31 + 0x10]
	0x03A80AAC LDP X30, X21, [X31], #0x20
	0x03A80AB0 RET
	0x03A80AB4 MOV X0, X19
	0x03A80AB8 MOV X1, X20
	0x03A80ABC LDP X20, X19, [X31 + 0x10]
	0x03A80AC0 LDP X30, X21, [X31], #0x20
	0x03A80AC4 B 0x3A80B4C
	0x03A80AC8 BL 0x1C16F20
	0x03A80ACC STR X30, [X31 - 0x20]!
	0x03A80AD0 STP X20, X19, [X31 + 0x10]
	0x03A80AD4 ADRP X20, 0x962000
	0x03A80AD8 LDRB W8, [X20 + 0x32B]
	0x03A80ADC MOV X19, X0
	0x03A80AE0 TBNZ X8, 0x0, 0x3A80AF8
	0x03A80AE4 ADRP X0, 0x69C000
	0x03A80AE8 LDR X0, [X0 + 0x8A8]
	0x03A80AEC BL 0x1C16CF4
	0x03A80AF0 MOVZ W8, 0x1
	0x03A80AF4 STRB W8, [X20 + 0x32B]
	0x03A80AF8 LDR W8, [X19 + 0x48]
	0x03A80AFC CMP W8, 0x2
	0x03A80B00 B.NE 0x3A80B34
	0x03A80B04 ADRP X8, 0x69C000
	0x03A80B08 LDR X8, [X8 + 0x8A8]
	0x03A80B0C LDR X0, [X8]
	0x03A80B10 LDR W8, [X0 + 0xE0]
	0x03A80B14 CBNZ W8, 0x3A80B1C
	0x03A80B18 BL 0x1C16DFC
	0x03A80B1C MOV X0, X31
	0x03A80B20 BL 0x3A8AB60
	0x03A80B24 CBZ X0, 0x3A80B48
	0x03A80B28 LDR W8, [X0 + 0x11C]
	0x03A80B2C CMP W8, 0x1
	0x03A80B30 CSET W8, EQ
	0x03A80B34 LDP X20, X19, [X31 + 0x10]
	0x03A80B38 CMP W8, 0x0
	0x03A80B3C CSET W0, EQ
	0x03A80B40 LDR X30, [X31], #0x20
	0x03A80B44 RET
	0x03A80B48 BL 0x1C16F20
	0x03A80B4C SUB X31, X31, 0x30
	0x03A80B50 STP X30, X21, [X31 + 0x10]
	0x03A80B54 STP X20, X19, [X31 + 0x20]
	0x03A80B58 ADRP X21, 0x962000
	0x03A80B5C LDRB W8, [X21 + 0x31F]
	0x03A80B60 MOV X19, X1
	0x03A80B64 MOV X20, X0
	0x03A80B68 TBNZ X8, 0x0, 0x3A80B80
	0x03A80B6C ADRP X0, 0x69D000
	0x03A80B70 LDR X0, [X0 + 0xFC0]
	0x03A80B74 BL 0x1C16CF4
	0x03A80B78 MOVZ W8, 0x1
	0x03A80B7C STRB W8, [X21 + 0x31F]
	0x03A80B80 STR W31, [X31 + 0x8]
	0x03A80B84 STR X31, [X31]
	0x03A80B88 CBZ X19, 0x3A80C04
	0x03A80B8C MOV X0, X19
	0x03A80B90 BL 0x3A80ACC
	0x03A80B94 TBNZ X0, 0x0, 0x3A80BF4
	0x03A80B98 LDR X8, [X19 + 0xC0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+136], S6
	014 Move [X31+144], S7
	015 Move [X31+60], S5
	016 Move [X31+52], S3
	017 Move X20, 0x963000
	018 Move X19, 0x69F000
	019 Move W8, [X20+795]
	020 Move X19, [X19+3512]
	021 Move V11, V2
	022 Move V9, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x69F000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+795], W8
	032 Move X0, [X19]
	033 Move V12, [X31+192]
	034 Move S13, [X31+164]
	035 Move S14, [X31+168]
	036 Move S0, [X31+180]
	037 Move S10, [X31+184]
	038 Move W8, [X0+224]
	039 Move [X31+48], S0
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move V0, [X31+60]
	044 Call TilingJob.square, V0
	045 Move V8, [X31+52]
	046 Move V15, V0
	047 Move V0, V8
	048 Call TilingJob.square, V0
	049 Move [X31+16], S0
	050 Move V0, V9
	051 Call TilingJob.square, V0
	052 Move [X31+12], S0
	053 Move V0, [X31+136]
	054 Call TilingJob.square, V0
	055 Move [X31+44], S0
	056 Move V0, V11
	057 Call TilingJob.square, V0
	058 Move [X31+20], S0
	059 Move V0, V12
	060 Call TilingJob.square, V0
	061 Move [X31+32], S0
	062 Move V0, [X31+140]
	063 Call TilingJob.square, V0
	064 Move [X31+56], S11
	065 Move V11, V0
	066 Move V0, V14
	067 Call TilingJob.square, V0
	068 Move [X31+28], S0
	069 Move V0, V10
	070 Move [X31+40], S10
	071 Call TilingJob.square, V0
	072 Move [X31+24], S0
	073 Move V0, V13
	074 Call TilingJob.square, V0
	075 Move V10, [X31+48]
	076 Move [X31+36], S0
	077 Move V0, V10
	078 Call TilingJob.square, V0
	079 Move S24, [X31+56]
	080 Move S3, [X31+60]
	081 Move S19, [X31+12]
	082 Move S20, [X31+16]
	083 Move S22, [X31+20]
	084 Move S18, [X31+24]
	085 Move S17, [X31+28]
	086 Move S23, [X31+32]
	087 Move V7, [X31+136]
	088 Add S1, S15, S15
	089 Add S4, S3, S3
	090 Add S3, S24, S24
	091 Multiply S1, S8, S1
	092 Multiply S16, S3, S12
	093 Multiply S2, S15, S20
	094 Multiply S5, S22, S11
	095 Multiply S6, S23, S11
	096 Multiply S4, S7, S4
	097 Multiply S1, S1, S9
	098 Multiply S16, S16, S11
	099 Move V21, V0
	100 Multiply S0, S15, S19
	101 Multiply S7, S5, S17
	102 Multiply S5, S5, S18
	103 Subtract S1, S1, S2
	104 Multiply S2, S6, S17
	105 Multiply S6, S6, S18
	106 Multiply S17, S16, S17
	107 Multiply S16, S16, S18
	108 Multiply S18, S24, S4
	109 Subtract S0, S1, S0
	110 Multiply S1, S8, S18
	111 Add S0, S1, S0
	112 Multiply S1, S18, S9
	113 Subtract S0, S0, S1
	114 Multiply S1, S8, S4
	115 Multiply S1, S1, S12
	116 Subtract S0, S0, S1
	117 Multiply S1, S4, S12
	118 Move V4, [X31+44]
	119 Multiply S1, S1, S9
	120 Add S0, S1, S0
	121 Move V18, V24
	122 Multiply S1, S4, S22
	123 Subtract S0, S0, S1
	124 Multiply S1, S4, S23
	125 Add S4, S4, S4
	126 Multiply S4, S24, S4
	127 Multiply S4, S4, S12
	128 Add S0, S4, S0
	129 Subtract S0, S0, S1
	130 Multiply S4, S20, S11
	131 Add S0, S7, S0
	132 Multiply S7, S8, S3
	133 Move S20, [X31+36]
	134 Move S18, [X31+40]
	135 Multiply S7, S7, S11
	136 Add S0, S5, S0
	137 Multiply S5, S13, S7
	138 Multiply S5, S14, S5
	139 Multiply S7, S10, S7
	140 Subtract S0, S0, S5
	141 Multiply S7, S18, S7
	142 Subtract S0, S0, S7
	143 Multiply S3, S3, S11
	144 Subtract S0, S0, S17
	145 Subtract S0, S0, S16
	146 Multiply S16, S13, S3
	147 Multiply S3, S10, S3
	148 Multiply S16, S14, S16
	149 Add S1, S8, S8
	150 Multiply S16, S16, S9
	151 Multiply S3, S18, S3
	152 Multiply S17, S1, S12
	153 Add S0, S16, S0
	154 Multiply S3, S3, S9
	155 Multiply S7, S4, S20
	156 Multiply S17, S17, S11
	157 Add S0, S3, S0
	158 Multiply S4, S4, S21
	159 Add S0, S7, S0
	160 Multiply S7, S13, S17
	161 Multiply S1, S1, S11
	162 Multiply S17, S10, S17
	163 Multiply S7, S14, S7
	164 Add S0, S4, S0
	165 Multiply S16, S1, S20
	166 Multiply S17, S18, S17
	167 Add S0, S7, S0
	168 Add S5, S12, S12
	169 Multiply S1, S1, S21
	170 Multiply S16, S16, S9
	171 Add S0, S17, S0
	172 Move X19, 0x962000
	173 Multiply S5, S5, S11
	174 Multiply S1, S1, S9
	175 Subtract S0, S0, S16
	176 Move W8, [X19+1413]
	177 Multiply S3, S13, S5
	178 Subtract S0, S0, S1
	179 Multiply S5, S10, S5
	180 Multiply S3, S14, S3
	181 Add S0, S2, S0
	182 Multiply S5, S18, S5
	183 Multiply S3, S3, S9
	184 Add S0, S6, S0
	185 Move [X31+44], S14
	186 Multiply S14, S5, S9
	187 Subtract S8, S0, S3
	188 Multiply S15, S11, S20
	189 Move V16, V10
	190 Move V5, V18
	191 Compare W8, 0
	192 JumpIfNotEqual {207}
	193 Move X0, 0x674000
	194 Move X0, [X0+1448]
	195 Move [X31+32], S21
	196 Move [X31+40], S13
	197 Move V13, V5
	198 Move V10, V19
	199 Call 0x1C17CF4
	200 Move V5, V13
	201 Move S21, [X31+32]
	202 Move S13, [X31+36]
	203 Move V16, [X31+48]
	204 Move V19, V10
	205 Move W8, 1
	206 Move [X19+1413], W8
	207 Move X19, 0x674000
	208 Move X19, [X19+1448]
	209 Subtract S8, S8, S14
	210 Multiply S14, S19, S15
	211 Multiply S11, S11, S21
	212 Move X0, [X19]
	213 Move V10, V19
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {224}
	217 Move V15, V16
	218 Move [X31+36], S13
	219 Move V13, V5
	220 Call 0x1C17DFC
	221 Move V5, V13
	222 Move V13, [X31+36]
	223 Move V16, V15
	224 Move S4, [X31+56]
	225 Move S1, [X31+60]
	226 Move V19, [X31+52]
	227 Move S3, [X31+136]
	228 Move S7, [X31+140]
	229 Move V18, [X31+44]
	230 Move X20, 0x962000
	231 Multiply S0, S19, S1
	232 Multiply S1, S1, S9
	233 Multiply S2, S4, S3
	234 Subtract S0, S0, S1
	235 Multiply S6, S7, S12
	236 Multiply S3, S3, S12
	237 Multiply S1, S4, S7
	238 Multiply S4, S4, S5
	239 Multiply S5, S5, S12
	240 Multiply S12, S18, S6
	241 Multiply S6, S19, S7
	242 Move W8, [X20+1376]
	243 Subtract S0, S0, S2
	244 Multiply S1, S1, S18
	245 Multiply S6, S6, S13
	246 Multiply S13, S13, S7
	247 Multiply S7, S19, S16
	248 Add S0, S0, S3
	249 Subtract S4, S4, S7
	250 Add S0, S1, S0
	251 Add S8, S14, S8
	252 Multiply S14, S10, S11
	253 Subtract S15, S4, S5
	254 Subtract S10, S0, S6
	255 Multiply S11, S16, S9
	256 Compare W8, 0
	257 JumpIfNotEqual {263}
	258 Move X0, 0x674000
	259 Move X0, [X0+1448]
	260 Call 0x1C17CF4
	261 Move W8, 1
	262 Move [X20+1376], W8
	263 Move X0, [X19]
	264 Add S8, S14, S8
	265 Subtract S10, S10, S12
	266 Multiply S9, S13, S9
	267 Move W8, [X0+224]
	268 Add S11, S11, S15
	269 Compare W8, 0
	270 JumpIfNotEqual {280}
	271 Call 0x1C17DFC
	272 Move W8, [X20+1376]
	273 Compare W8, 0
	274 JumpIfNotEqual {280}
	275 Move X0, 0x674000
	276 Move X0, [X0+1448]
	277 Call 0x1C17CF4
	278 Move W8, 1
	279 Move [X20+1376], W8
	280 Move X0, [X19]
	281 Move V0, [X31+140]
	282 NotImplemented "Instruction FSQRT not yet implemented."
	283 Add S8, S9, S10
	284 Move W8, [X0+224]
	285 Multiply S9, S11, S0
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Subtract S0, S9, S12
	290 Add S1, S9, S12
	291 NotImplemented "Instruction FDIV not yet implemented."
	292 NotImplemented "Instruction FDIV not yet implemented."
	293 NotImplemented "Instruction FCVT not yet implemented."
	294 Call 0x3EB2D70
	295 NotImplemented "Instruction INVALID not yet implemented."
	296 NotImplemented "Instruction FCVT not yet implemented."
	297 Call 0x3EB2D70
	298 NotImplemented "Instruction INVALID not yet implemented."
	299 Add S0, S8, S8
	300 Move X20, [X31+144]
	301 Move X19, [X31+152]
	302 Move X30, [X31+128]
	303 Move D9, [X31+112]
	304 Move D8, [X31+120]
	305 Move D11, [X31+96]
	306 Move D10, [X31+104]
	307 Move D13, [X31+80]
	308 Move D12, [X31+88]
	309 Move D15, [X31+64]
	310 Move D14, [X31+72]
	311 Add S1, S1, S1
	312 Add X31, X31, 160
	313 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03A81460 STP V1, V0, [X19 + 0xA0]
	0x03A81464 BL 0x3C36C30
	0x03A81468 LDP X20, X19, [X31 + 0x70]
	0x03A8146C LDP X22, X21, [X31 + 0x60]
	0x03A81470 LDP X24, X23, [X31 + 0x50]
	0x03A81474 LDR X30, [X31 + 0x40]
	0x03A81478 ADD X31, X31, 0x80
	0x03A8147C RET
	0x03A81480 STR X30, [X31 - 0x30]!
	0x03A81484 STP X22, X21, [X31 + 0x10]
	0x03A81488 STP X20, X19, [X31 + 0x20]
	0x03A8148C ADRP X20, 0x961000
	0x03A81490 ADRP X22, 0x672000
	0x03A81494 LDRB W8, [X20 + 0x325]
	0x03A81498 LDR X22, [X22 + 0x598]
	0x03A8149C MOV X19, X0
	0x03A814A0 TBNZ X8, 0x0, 0x3A814C4
	0x03A814A4 ADRP X0, 0x6D6000
	0x03A814A8 LDR X0, [X0 + 0xA0]
	0x03A814AC BL 0x1C16CF4
	0x03A814B0 ADRP X0, 0x672000
	0x03A814B4 LDR X0, [X0 + 0x598]
	0x03A814B8 BL 0x1C16CF4
	0x03A814BC MOVZ W8, 0x1
	0x03A814C0 STRB W8, [X20 + 0x325]
	0x03A814C4 MOV X20, X19
	0x03A814C8 LDR X21, [X20 + 0x80]!
	0x03A814CC LDR X0, [X22]
	0x03A814D0 LDR W8, [X0 + 0xE0]
	0x03A814D4 CBNZ W8, 0x3A814DC
	0x03A814D8 BL 0x1C16DFC
	0x03A814DC MOV X0, X21
	0x03A814E0 MOV X1, X31
	0x03A814E4 BL 0x3C38948
	0x03A814E8 TBNZ X0, 0x0, 0x3A81510
	0x03A814EC MOV X0, X19
	0x03A814F0 MOV X1, X31
	0x03A814F4 BL 0x3C32ECC
	0x03A814F8 CBZ X0, 0x3A81524
	0x03A814FC ADRP X8, 0x6D6000
	0x03A81500 LDR X8, [X8 + 0xA0]
	0x03A81504 MOV X1, X20
	0x03A81508 LDR X2, [X8]
	0x03A8150C BL 0x21E6600
	0x03A81510 LDR X0, [X20]
	0x03A81514 LDP X20, X19, [X31 + 0x20]
	0x03A81518 LDP X22, X21, [X31 + 0x10]
	0x03A8151C LDR X30, [X31], #0x30
	0x03A81520 RET
	0x03A81524 BL 0x1C16F20
	0x03A81528 LDRB W0, [X0 + 0x20]
	0x03A8152C RET
	0x03A81530 AND W8, W1, 0x1
	0x03A81534 STRB W8, [X0 + 0x20]
	0x03A81538 RET
	0x03A8153C LDR W0, [X0 + 0x24]
	0x03A81540 RET
	0x03A81544 STR W1, [X0 + 0x24]
	0x03A81548 RET
	0x03A8154C LDR W0, [X0 + 0x28]
	0x03A81550 RET
	0x03A81554 STR W1, [X0 + 0x28]
	0x03A81558 RET
	0x03A8155C LDR W0, [X0 + 0x2C]
	0x03A81560 RET
	0x03A81564 STR W1, [X0 + 0x2C]
	0x03A81568 RET
	0x03A8156C SUB X31, X31, 0x40
	0x03A81570 STP X30, X23, [X31 + 0x10]
	0x03A81574 STP X22, X21, [X31 + 0x20]
	0x03A81578 STP X20, X19, [X31 + 0x30]
	0x03A8157C ADRP X20, 0x961000
	0x03A81580 LDRB W8, [X20 + 0x326]
	0x03A81584 MOV X19, X0
	0x03A81588 TBNZ X8, 0x0, 0x3A815D0
	0x03A8158C ADRP X0, 0x6D6000
	0x03A81590 LDR X0, [X0 + 0xA8]
	0x03A81594 BL 0x1C16CF4
	0x03A81598 ADRP X0, 0x672000
	0x03A8159C LDR X0, [X0 + 0xA28]
	0x03A815A0 BL 0x1C16CF4
	0x03A815A4 ADRP X0, 0x6D6000
	0x03A815A8 LDR X0, [X0 + 0xB0]
	0x03A815AC BL 0x1C16CF4
	0x03A815B0 ADRP X0, 0x6D6000
	0x03A815B4 LDR X0, [X0 + 0xB8]
	0x03A815B8 BL 0x1C16CF4
	0x03A815BC ADRP X0, 0x6D6000
	0x03A815C0 LDR X0, [X0 + 0xC0]
	0x03A815C4 BL 0x1C16CF4
	0x03A815C8 MOVZ W8, 0x1
	0x03A815CC STRB W8, [X20 + 0x326]
	0x03A815D0 ADRP X20, 0x6D6000
	0x03A815D4 ADRP X21, 0x672000
	0x03A815D8 LDR W8, [X19 + 0x2C]
	0x03A815DC LDR X20, [X20 + 0xB0]
	0x03A815E0 LDR X21, [X21 + 0xA28]
	0x03A815E4 MOV X0, X19
	0x03A815E8 CBZ W8, 0x3A81650
	0x03A815EC MOV X1, X31
	0x03A815F0 BL 0x3C32ECC
	0x03A815F4 CBZ X0, 0x3A816EC
	0x03A815F8 LDR X1, [X20]
	0x03A815FC BL 0x21E52E4
	0x03A81600 CBZ X0, 0x3A816EC
	0x03A81604 ADRP X22, 0x6D6000
	0x03A81608 ADRP X23, 0x6D6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x962000
	005 Move X20, 0x6D7000
	006 Move W8, [X19+796]
	007 Move X20, [X20+48]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x69E000
	013 Move X0, [X0+3512]
	014 Call 0x1C17CF4
	015 Move X0, 0x6D7000
	016 Move X0, [X0+48]
	017 Call 0x1C17CF4
	018 Move X0, 0x6D7000
	019 Move X0, [X0+56]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+796], W8
	023 Move X0, [X20]
	024 Move W1, 8
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {106}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {105}
	031 Move V0, 0
	032 Move W9, 0xBF800000
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move [X0+32], D0
	035 Move [X0+40], W9
	036 Move W9, 0x3F800000
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X0+44], D0
	039 Move [X0+52], W9
	040 Move X9, -49885184
	041 Move V0, [X9+2880]
	042 Move W9, 0xBF800000
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+64], W9
	045 Move [X0+56], D0
	046 Move W9, 0x3F800000
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X0+68], D0
	049 Move [X0+76], W9
	050 Move X9, -49885184
	051 Move V0, [X9+2352]
	052 Move W9, 0xBF800000
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X0+88], W9
	055 Move [X0+80], D0
	056 Move W9, 0x3F800000
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X0+92], D0
	059 Move [X0+100], W9
	060 Move V0, 0
	061 Move W9, 0xBF800000
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X0+104], D0
	064 Move [X0+112], W9
	065 Move X19, 0x69E000
	066 Move X19, [X19+3512]
	067 Move W8, 0x3F800000
	068 Move [X0+116], D0
	069 Move [X0+124], W8
	070 Move X8, [X19]
	071 Move X9, 0x6D7000
	072 Move W1, 4
	073 Move X8, [X8+184]
	074 Move X9, [X9+56]
	075 Move [X8], X0
	076 Move X0, [X9]
	077 Call 0x1C17D6C
	078 Compare X0, 0
	079 JumpIfEqual {106}
	080 Move W8, [X0+24]
	081 Compare W8, 0
	082 JumpIfEqual {105}
	083 Move X9, -49897472
	084 Move V0, [X9+186]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X0+2], V0
	087 Move X9, -49893376
	088 Move V0, [X9+250]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X0+3], V0
	091 Move X9, -49897472
	092 Move V0, [X9+231]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X0+4], V0
	095 Move X8, -49893376
	096 Move V0, [X8+38]
	097 Move [X0+5], V0
	098 Move X8, [X19]
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X8, [X8+184]
	102 Move [X8+8], X0
	103 Move X30, [X31+32]
	104 Return 
	105 Call 0x1C17F28
	106 Call 0x1C17F20

Method: System.Boolean <TileLight>g__SpherePointIsValid|19_0(Unity.Mathematics.float3 p, ref UnityEngine.Rendering.Universal.TilingJob/<>c__DisplayClass19_0 param_1)

Disassembly:
	0x03A7F4B4 MOV V9.16B, V3.16B
	0x03A7F4B8 MOVI D1, 0x0
	0x03A7F4BC FMUL S16, S10, S4
	0x03A7F4C0 FMUL S3, S2, S5
	0x03A7F4C4 STR W31, [X1 + 0x8]
	0x03A7F4C8 FMUL S7, S9, S6
	0x03A7F4CC FMUL S5, S5, S0
	0x03A7F4D0 STR D1, [X1]
	0x03A7F4D4 STR D1, [X0]
	0x03A7F4D8 FADD S1, S16, S3
	0x03A7F4DC LDP S19, S17, [X31 + 0xA4]
	0x03A7F4E0 LDR V20, [X31 + 0xA0]
	0x03A7F4E4 LDP S22, S21, [X31 + 0x94]
	0x03A7F4E8 LDR V23, [X31 + 0x90]
	0x03A7F4EC FADD S16, S4, S5
	0x03A7F4F0 FSUB S3, S5, S4
	0x03A7F4F4 FADD S1, S7, S1
	0x03A7F4F8 FADD S7, S6, S16
	0x03A7F4FC FADD S3, S6, S3
	0x03A7F500 FMUL S0, S1, S0
	0x03A7F504 FDIV S4, S1, S7
	0x03A7F508 FNEG S5, S1
	0x03A7F50C FDIV S1, S1, S3
	0x03A7F510 FDIV S7, S0, S7
	0x03A7F514 ADRP X21, 0x962000
	0x03A7F518 STR W31, [X0 + 0x8]
	0x03A7F51C FSUB S6, S4, S10
	0x03A7F520 FSUB S4, S4, S9
	0x03A7F524 FDIV S5, S5, S3
	0x03A7F528 FDIV S0, S0, S3
	0x03A7F52C FSUB S1, S1, S9
	0x03A7F530 FSUB S18, S7, S2
	0x03A7F534 LDRB W8, [X21 + 0x585]
	0x03A7F538 FMUL S3, S23, S6
	0x03A7F53C FMUL S7, S21, S4
	0x03A7F540 FMUL S6, S20, S6
	0x03A7F544 FMUL S4, S17, S4
	0x03A7F548 FSUB S5, S5, S10
	0x03A7F54C STP S17, S2, [X31 + 0x68]
	0x03A7F550 FSUB S0, S0, S2
	0x03A7F554 FMUL S16, S21, S1
	0x03A7F558 FMUL S1, S17, S1
	0x03A7F55C FMUL S17, S22, S18
	0x03A7F560 FMUL S2, S19, S18
	0x03A7F564 FADD S3, S3, S17
	0x03A7F568 FMUL S17, S23, S5
	0x03A7F56C FADD S2, S6, S2
	0x03A7F570 FMUL S6, S22, S0
	0x03A7F574 FMUL S5, S20, S5
	0x03A7F578 FMUL S0, S19, S0
	0x03A7F57C FADD S6, S17, S6
	0x03A7F580 FADD S0, S5, S0
	0x03A7F584 MOV X19, X1
	0x03A7F588 MOV X20, X0
	0x03A7F58C FADD S13, S7, S3
	0x03A7F590 FADD S11, S4, S2
	0x03A7F594 FADD S8, S16, S6
	0x03A7F598 FADD S14, S1, S0
	0x03A7F59C STP S22, S21, [X31 + 0x10]
	0x03A7F5A0 STR S23, [X31 + 0xC]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Call VisibleLight.get_lightType, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, 1
	018 Move X20, 0x963000
	019 Move S11, [X19+116]
	020 Move S12, [X19+120]
	021 Move W8, [X20+1413]
	022 Move V13, [X19+124]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x675000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1413], W8
	030 Move X8, 0x675000
	031 Move X8, [X8+1448]
	032 Subtract S10, S10, S11
	033 Subtract S9, S9, S12
	034 Subtract S8, S8, S13
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Multiply S1, S10, S10
	041 Multiply S2, S9, S9
	042 Multiply S0, S8, S8
	043 Add S1, S1, S2
	044 Add S0, S0, S1
	045 Move S2, 1
	046 NotImplemented "Instruction FSQRT not yet implemented."
	047 NotImplemented "Instruction FDIV not yet implemented."
	048 Move S1, [X19+128]
	049 Move S2, [X19+132]
	050 Multiply S3, S10, S0
	051 Multiply S4, S9, S0
	052 Multiply S0, S8, S0
	053 Multiply S1, S3, S1
	054 Move S3, [X19+136]
	055 Move S5, [X19+140]
	056 Multiply S2, S4, S2
	057 Add S1, S1, S2
	058 Multiply S0, S0, S3
	059 Add S0, S0, S1
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X30, [X31+48]
	065 Move D9, [X31+32]
	066 Move D8, [X31+40]
	067 Move D11, [X31+16]
	068 Move D10, [X31+24]
	069 Move D13, [X31+80]
	070 Move D12, [X31+88]
	071 Return X0

Method: System.Boolean <TileLight>g__ConicPointIsValid|19_1(Unity.Mathematics.float3 p, ref UnityEngine.Rendering.Universal.TilingJob/<>c__DisplayClass19_0 param_1)

Disassembly:
	0x03A7FDF4 FMUL S3, S6, S11
	0x03A7FDF8 FADD S2, S12, S2
	0x03A7FDFC FADD S5, S5, S1
	0x03A7FE00 FSUB S4, S13, S14
	0x03A7FE04 FADD S13, S3, S2
	0x03A7FE08 FSQRT S2, S5
	0x03A7FE0C LDR X0, [X21]
	0x03A7FE10 FDIV S15, S1, S2
	0x03A7FE14 FMUL S1, S15, S0
	0x03A7FE18 FMUL S2, S15, S9
	0x03A7FE1C STP S2, S1, [X31 + 0x48]
	0x03A7FE20 FMUL S1, S12, S1
	0x03A7FE24 FMUL S2, S10, S2
	0x03A7FE28 FMUL S0, S6, S15
	0x03A7FE2C FADD S1, S1, S2
	0x03A7FE30 LDR W8, [X0 + 0xE0]
	0x03A7FE34 FADD S14, S0, S1
	0x03A7FE38 FMUL S3, S13, S13
	0x03A7FE3C FMUL S0, S14, S14
	0x03A7FE40 FADD S0, S3, S0
	0x03A7FE44 FSQRT S10, S0
	0x03A7FE48 FSQRT S9, S4
	0x03A7FE4C CBNZ W8, 0x3A7FE54
	0x03A7FE50 BL 0x1C16DFC
	0x03A7FE54 MOV V0.16B, V9.16B
	0x03A7FE58 BL 0x3A7E228
	0x03A7FE5C MOV V11.16B, V0.16B
	0x03A7FE60 MOV V0.16B, V10.16B
	0x03A7FE64 BL 0x3A7E228
	0x03A7FE68 FCMP S11, S0
	0x03A7FE6C B.HI 0x3A7FF54
	0x03A7FE70 LDR X0, [X21]
	0x03A7FE74 MOV V12.16B, V0.16B
	0x03A7FE78 LDR W8, [X0 + 0xE0]
	0x03A7FE7C CBNZ W8, 0x3A7FE84
	0x03A7FE80 BL 0x1C16DFC
	0x03A7FE84 LDRB W8, [X22 + 0x585]
	0x03A7FE88 CBNZ W8, 0x3A7FEA0
	0x03A7FE8C ADRP X0, 0x674000
	0x03A7FE90 LDR X0, [X0 + 0x5A8]
	0x03A7FE94 BL 0x1C16CF4
	0x03A7FE98 MOVZ W8, 0x1
	0x03A7FE9C STRB W8, [X22 + 0x585]
	0x03A7FEA0 LDR X0, [X23]
	0x03A7FEA4 FDIV S14, S14, S10
	0x03A7FEA8 FDIV S13, S13, S10
	0x03A7FEAC FSUB S11, S12, S11
	0x03A7FEB0 LDR W8, [X0 + 0xE0]
	0x03A7FEB4 CBNZ W8, 0x3A7FEBC
	0x03A7FEB8 BL 0x1C16DFC
	0x03A7FEBC FSQRT S0, S11
	0x03A7FEC0 FMUL S1, S9, S0
	0x03A7FEC4 FDIV S1, S1, S10
	0x03A7FEC8 FMUL S0, S0, S1
	0x03A7FECC FDIV S0, S0, S9
	0x03A7FED0 FMUL S5, S13, S1
	0x03A7FED4 FMUL S1, S14, S1
	0x03A7FED8 FMUL S6, S14, S0
	0x03A7FEDC FMUL S7, S13, S0
	0x03A7FEE0 FMOV S2, W31
	0x03A7FEE4 FADD S3, S5, S6
	0x03A7FEE8 FSUB S4, S7, S1
	0x03A7FEEC FSUB S0, S6, S5
	0x03A7FEF0 FMUL S5, S15, S3
	0x03A7FEF4 FMUL S6, S4, S2
	0x03A7FEF8 FADD S5, S5, S6
	0x03A7FEFC FCMP S5, S8
	0x03A7FF00 FADD S1, S1, S7
	0x03A7FF04 B.LT 0x3A7FF24

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x963000
	011 Move S11, [X0+116]
	012 Move S12, [X0+120]
	013 Move W8, [X20+1413]
	014 Move V13, [X0+124]
	015 Move X19, X0
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x675000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1413], W8
	026 Move X8, 0x675000
	027 Move X8, [X8+1448]
	028 Subtract S11, S10, S11
	029 Subtract S12, S9, S12
	030 Subtract S13, S8, S13
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Multiply S1, S11, S11
	037 Multiply S2, S12, S12
	038 Multiply S0, S13, S13
	039 Add S1, S1, S2
	040 Add S0, S0, S1
	041 Move S2, 1
	042 NotImplemented "Instruction FSQRT not yet implemented."
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Move S0, [X19+128]
	045 Move S1, [X19+132]
	046 Multiply S3, S11, S2
	047 Multiply S4, S12, S2
	048 Multiply S5, S13, S2
	049 Move V2, [X19+136]
	050 Multiply S3, S3, S0
	051 Multiply S4, S4, S1
	052 Add S3, S3, S4
	053 Multiply S4, S5, S2
	054 Add S3, S4, S3
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move W0, W31
	057 Move S3, [X19+116]
	058 Move S4, [X19+120]
	059 Move V5, [X19+124]
	060 Move V6, [X19+144]
	061 Subtract S3, S10, S3
	062 Subtract S4, S9, S4
	063 Subtract S5, S8, S5
	064 Multiply S0, S0, S3
	065 Multiply S1, S1, S4
	066 Add S0, S0, S1
	067 Multiply S1, S2, S5
	068 Add S0, S1, S0
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X30, [X31+48]
	074 Move D9, [X31+32]
	075 Move D8, [X31+40]
	076 Move D11, [X31+16]
	077 Move D10, [X31+24]
	078 Move D13, [X31+80]
	079 Move D12, [X31+88]
	080 Return X0

Method: System.Boolean <TileLightOrthographic>g__SpherePointIsValid|20_0(Unity.Mathematics.float3 p, ref UnityEngine.Rendering.Universal.TilingJob/<>c__DisplayClass20_0 param_1)

Disassembly:
	0x03A8109C LDR X8, [X21 + 0x10]
	0x03A810A0 LDR X9, [X9]
	0x03A810A4 ADD W10, W10, 0x1
	0x03A810A8 STR W10, [X21 + 0x1C]
	0x03A810AC CBZ X8, 0x3A810EC
	0x03A810B0 LDRSW X10, [X21 + 0x18]
	0x03A810B4 LDR W11, [X8 + 0x18]
	0x03A810B8 CMP W10, W11
	0x03A810BC B.CS 0x3A810D4
	0x03A810C0 ADD W9, W10, 0x1
	0x03A810C4 ADD X8, X8, X10, 0x3, LSL
	0x03A810C8 STR W9, [X21 + 0x18]
	0x03A810CC STR X1, [X8 + 0x20]
	0x03A810D0 B 0x3A81020
	0x03A810D4 LDR X8, [X9 + 0x20]
	0x03A810D8 MOV X0, X21
	0x03A810DC LDR X8, [X8 + 0xC0]
	0x03A810E0 LDR X2, [X8 + 0x70]
	0x03A810E4 BL 0x301BF90
	0x03A810E8 B 0x3A81020
	0x03A810EC BL 0x1C16F20
	0x03A810F0 STP X30, X21, [X31 - 0x20]!
	0x03A810F4 STP X20, X19, [X31 + 0x10]
	0x03A810F8 ADRP X21, 0x961000
	0x03A810FC ADRP X20, 0x6D6000
	0x03A81100 LDRB W8, [X21 + 0x322]
	0x03A81104 LDR X20, [X20 + 0x88]
	0x03A81108 MOV W19, W0
	0x03A8110C TBNZ X8, 0x0, 0x3A81124
	0x03A81110 ADRP X0, 0x6D6000
	0x03A81114 LDR X0, [X0 + 0x88]
	0x03A81118 BL 0x1C16CF4
	0x03A8111C MOVZ W8, 0x1
	0x03A81120 STRB W8, [X21 + 0x322]
	0x03A81124 LDR X0, [X20]
	0x03A81128 TBNZ X19, 0x1F, 0x3A81154
	0x03A8112C LDR W8, [X0 + 0xE0]
	0x03A81130 CBNZ W8, 0x3A8113C
	0x03A81134 BL 0x1C16DFC
	0x03A81138 LDR X0, [X20]
	0x03A8113C LDR X8, [X0 + 0xB8]
	0x03A81140 LDR X8, [X8]
	0x03A81144 CBZ X8, 0x3A81194
	0x03A81148 LDR W8, [X8 + 0x18]
	0x03A8114C CMP W8, W19
	0x03A81150 B.GT 0x3A81158
	0x03A81154 MOV W19, W31
	0x03A81158 LDR W8, [X0 + 0xE0]
	0x03A8115C CBNZ W8, 0x3A81168
	0x03A81160 BL 0x1C16DFC
	0x03A81164 LDR X0, [X20]
	0x03A81168 LDR X8, [X0 + 0xB8]
	0x03A8116C LDR X8, [X8]
	0x03A81170 CBZ X8, 0x3A81194
	0x03A81174 LDR W9, [X8 + 0x18]
	0x03A81178 CMP W19, W9
	0x03A8117C B.CS 0x3A81198
	0x03A81180 ADD X8, X8, W19, 0x3, UXTW
	0x03A81184 LDR X0, [X8 + 0x20]
	0x03A81188 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X1, X31
	011 Move X19, X0
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Call VisibleLight.get_lightType, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, 1
	018 Move X20, 0x961000
	019 Move S11, [X19+116]
	020 Move S12, [X19+120]
	021 Move W8, [X20+1413]
	022 Move V13, [X19+124]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x673000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1413], W8
	030 Move X8, 0x673000
	031 Move X8, [X8+1448]
	032 Subtract S10, S10, S11
	033 Subtract S9, S9, S12
	034 Subtract S8, S8, S13
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Multiply S1, S10, S10
	041 Multiply S2, S9, S9
	042 Multiply S0, S8, S8
	043 Add S1, S1, S2
	044 Add S0, S0, S1
	045 Move S2, 1
	046 NotImplemented "Instruction FSQRT not yet implemented."
	047 NotImplemented "Instruction FDIV not yet implemented."
	048 Move S1, [X19+128]
	049 Move S2, [X19+132]
	050 Multiply S3, S10, S0
	051 Multiply S4, S9, S0
	052 Multiply S0, S8, S0
	053 Multiply S1, S3, S1
	054 Move S3, [X19+136]
	055 Move S5, [X19+140]
	056 Multiply S2, S4, S2
	057 Add S1, S1, S2
	058 Multiply S0, S0, S3
	059 Add S0, S0, S1
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move X20, [X31+64]
	063 Move X19, [X31+72]
	064 Move X30, [X31+48]
	065 Move D9, [X31+32]
	066 Move D8, [X31+40]
	067 Move D11, [X31+16]
	068 Move D10, [X31+24]
	069 Move D13, [X31+80]
	070 Move D12, [X31+88]
	071 Return X0

