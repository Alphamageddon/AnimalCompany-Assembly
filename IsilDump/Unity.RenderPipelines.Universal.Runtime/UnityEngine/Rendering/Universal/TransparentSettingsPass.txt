Type: UnityEngine.Rendering.Universal.TransparentSettingsPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, System.Boolean shadowReceiveSupported)

Disassembly:
	0x03A67F7C MOV X0, X19
	0x03A67F80 MOV X2, X23
	0x03A67F84 MOV X3, X31
	0x03A67F88 LDR X8, [X8 + 0xB8]
	0x03A67F8C LDR W1, [X8]
	0x03A67F90 BL 0x3C14C34
	0x03A67F94 LDR X0, [X20 + 0x40]
	0x03A67F98 CBZ X0, 0x3A68040
	0x03A67F9C LDR X8, [X22]
	0x03A67FA0 LDR X9, [X0]
	0x03A67FA4 LDR X8, [X8 + 0xB8]
	0x03A67FA8 LDR X10, [X9 + 0x218]
	0x03A67FAC LDR X1, [X9 + 0x220]
	0x03A67FB0 LDR W21, [X8 + 0x4]
	0x03A67FB4 BLR X10
	0x03A67FB8 LDR X0, [X20 + 0x48]
	0x03A67FBC CBZ X0, 0x3A68040
	0x03A67FC0 LDR X8, [X0]
	0x03A67FC4 MOV V12.16B, V0.16B
	0x03A67FC8 LDR X9, [X8 + 0x218]
	0x03A67FCC LDR X1, [X8 + 0x220]
	0x03A67FD0 BLR X9
	0x03A67FD4 MOV V1.16B, V0.16B
	0x03A67FD8 FMOV S0, 4
	0x03A67FDC FMUL S0, S12, S0
	0x03A67FE0 FMOV S2, W31
	0x03A67FE4 FMOV S3, W31
	0x03A67FE8 MOV X0, X19
	0x03A67FEC MOV W1, W21
	0x03A67FF0 MOV X2, X31
	0x03A67FF4 BL 0x3C15D80
	0x03A67FF8 LDR X8, [X22]
	0x03A67FFC MOV X0, X19
	0x03A68000 MOV V0.16B, V10.16B
	0x03A68004 MOV V1.16B, V11.16B
	0x03A68008 LDR X8, [X8 + 0xB8]
	0x03A6800C MOV V2.16B, V8.16B
	0x03A68010 MOV V3.16B, V9.16B
	0x03A68014 LDP X20, X19, [X31 + 0x60]
	0x03A68018 LDR W1, [X8 + 0x8]
	0x03A6801C LDP X22, X21, [X31 + 0x50]
	0x03A68020 LDP X24, X23, [X31 + 0x40]
	0x03A68024 LDP X26, X25, [X31 + 0x30]
	0x03A68028 LDR X30, [X31 + 0x28]
	0x03A6802C LDP D9, D8, [X31 + 0x18]
	0x03A68030 LDP D11, D10, [X31 + 0x8]
	0x03A68034 MOV X2, X31
	0x03A68038 LDR V12, [X31], #0x70
	0x03A6803C B 0x3C15D80

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x97C000
	009 Move X22, 0x6ED000
	010 Move W8, [X23+604]
	011 Move X22, [X22+4080]
	012 Move W21, W2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x6EA000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x6ED000
	023 Move X0, [X0+4080]
	024 Call 0x1C17CF4
	025 Move X0, 0x6F0000
	026 Move X0, [X0+2232]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+604], W8
	030 Move X0, [X22]
	031 Move X23, 0x6EA000
	032 Move X22, 0x6F0000
	033 Move W8, [X0+224]
	034 Move X23, [X23+1432]
	035 Move X22, [X22+2232]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 And W24, W21, 1
	042 Call ScriptableRenderPass..ctor, X0
	043 Move X0, [X23]
	044 Call 0x1C17F10
	045 Move X1, [X22]
	046 Move X2, X31
	047 Move X21, X0
	048 Call ProfilingSampler..ctor, X0, X1
	049 Move [X19+56], X21
	050 Move [X19+16], W20
	051 Move [X19+224], W24
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Return 

Method: System.Boolean Setup()

Disassembly:
	0x03A68040 BL 0x1C16F20
	0x03A68044 BL 0x1C16F28
	0x03A68048 STP D9, D8, [X31 - 0x30]!
	0x03A6804C STP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+224]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A68050 STP X20, X19, [X31 + 0x20]
	0x03A68054 ADRP X21, 0x97A000
	0x03A68058 LDRB W8, [X21 + 0x268]
	0x03A6805C MOV X20, X1
	0x03A68060 MOV X19, X0
	0x03A68064 TBNZ X8, 0x0, 0x3A6807C
	0x03A68068 ADRP X0, 0x6EE000
	0x03A6806C LDR X0, [X0 + 0x928]
	0x03A68070 BL 0x1C16CF4
	0x03A68074 MOVZ W8, 0x1
	0x03A68078 STRB W8, [X21 + 0x268]
	0x03A6807C LDP S0, S1, [X20]
	0x03A68080 ADRP X21, 0x6EE000
	0x03A68084 LDR X21, [X21 + 0x928]
	0x03A68088 MOV X0, X20
	0x03A6808C MOV X1, X31
	0x03A68090 SCVTF S9, S0
	0x03A68094 SCVTF S8, S1
	0x03A68098 BL 0x3C22BBC
	0x03A6809C TBZ X0, 0x0, 0x3A680B8
	0x03A680A0 MOV X0, X31
	0x03A680A4 BL 0x3C104AC
	0x03A680A8 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x97B000
	006 Move X20, 0x6EF000
	007 Move W8, [X21+605]
	008 Move X20, [X20+2240]
	009 Move X19, X2
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6EF000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+605], W8
	019 Move X0, [X20]
	020 Move X19, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]

Method: System.Void ExecutePass(UnityEngine.Rendering.CommandBuffer cmd, System.Boolean shouldReceiveShadows)

Disassembly:
	0x03A680AC FMUL S9, S0, S9
	0x03A680B0 BL 0x3C104D4
	0x03A680B4 FMUL S8, S0, S8
	0x03A680B8 LDR X0, [X21]
	0x03A680BC LDR W8, [X0 + 0xE0]
	0x03A680C0 CBNZ W8, 0x3A680C8
	0x03A680C4 BL 0x1C16DFC
	0x03A680C8 CBZ X19, 0x3A68104
	0x03A680CC LDR X8, [X21]
	0x03A680D0 MOV X0, X19
	0x03A680D4 LDP X20, X19, [X31 + 0x20]
	0x03A680D8 LDP X30, X21, [X31 + 0x10]
	0x03A680DC LDR X8, [X8 + 0xB8]
	0x03A680E0 FMOV S0, 1
	0x03A680E4 FDIV S3, S0, S8
	0x03A680E8 FDIV S2, S0, S9
	0x03A680EC LDR W1, [X8 + 0x14]
	0x03A680F0 MOV V0.16B, V9.16B
	0x03A680F4 MOV V1.16B, V8.16B
	0x03A680F8 MOV X2, X31
	0x03A680FC LDP D9, D8, [X31], #0x30
	0x03A68100 B 0x3C4CED8
	0x03A68104 BL 0x1C16F20
	0x03A68108 STR X30, [X31 - 0x50]!
	0x03A6810C STP X26, X25, [X31 + 0x10]
	0x03A68110 STP X24, X23, [X31 + 0x20]
	0x03A68114 STP X22, X21, [X31 + 0x30]
	0x03A68118 STP X20, X19, [X31 + 0x40]
	0x03A6811C ADRP X25, 0x97A000
	0x03A68120 ADRP X26, 0x6EE000
	0x03A68124 ADRP X19, 0x6EE000
	0x03A68128 ADRP X24, 0x6EE000
	0x03A6812C ADRP X23, 0x6EE000
	0x03A68130 ADRP X22, 0x6EE000
	0x03A68134 ADRP X21, 0x6EE000
	0x03A68138 ADRP X20, 0x6EE000
	0x03A6813C LDR X26, [X26 + 0x930]
	0x03A68140 LDR X19, [X19 + 0x928]
	0x03A68144 LDRB W8, [X25 + 0x269]
	0x03A68148 LDR X24, [X24 + 0x938]
	0x03A6814C LDR X23, [X23 + 0x940]
	0x03A68150 LDR X22, [X22 + 0x948]
	0x03A68154 LDR X21, [X21 + 0x950]
	0x03A68158 LDR X20, [X20 + 0x958]
	0x03A6815C TBNZ X8, 0x0, 0x3A681BC
	0x03A68160 ADRP X0, 0x6EE000
	0x03A68164 LDR X0, [X0 + 0x928]
	0x03A68168 BL 0x1C16CF4
	0x03A6816C ADRP X0, 0x6EE000
	0x03A68170 LDR X0, [X0 + 0x958]
	0x03A68174 BL 0x1C16CF4
	0x03A68178 ADRP X0, 0x6EE000
	0x03A6817C LDR X0, [X0 + 0x930]
	0x03A68180 BL 0x1C16CF4
	0x03A68184 ADRP X0, 0x6EE000
	0x03A68188 LDR X0, [X0 + 0x948]
	0x03A6818C BL 0x1C16CF4
	0x03A68190 ADRP X0, 0x6EE000
	0x03A68194 LDR X0, [X0 + 0x950]
	0x03A68198 BL 0x1C16CF4
	0x03A6819C ADRP X0, 0x6EE000
	0x03A681A0 LDR X0, [X0 + 0x938]
	0x03A681A4 BL 0x1C16CF4
	0x03A681A8 ADRP X0, 0x6EE000
	0x03A681AC LDR X0, [X0 + 0x940]
	0x03A681B0 BL 0x1C16CF4
	0x03A681B4 MOVZ W8, 0x1
	0x03A681B8 STRB W8, [X25 + 0x269]
	0x03A681BC LDR X0, [X26]
	0x03A681C0 MOV X1, X31
	0x03A681C4 BL 0x3C124EC
	0x03A681C8 LDR X8, [X19]
	0x03A681CC MOV X1, X31
	0x03A681D0 LDR X8, [X8 + 0xB8]
	0x03A681D4 STR W0, [X8]
	0x03A681D8 LDR X0, [X24]
	0x03A681DC BL 0x3C124EC
	0x03A681E0 LDR X8, [X19]
	0x03A681E4 MOV X1, X31
	0x03A681E8 LDR X8, [X8 + 0xB8]
	0x03A681EC STR W0, [X8 + 0x4]
	0x03A681F0 LDR X0, [X23]
	0x03A681F4 BL 0x3C124EC
	0x03A681F8 LDR X8, [X19]
	0x03A681FC MOV X1, X31
	0x03A68200 LDR X8, [X8 + 0xB8]
	0x03A68204 STR W0, [X8 + 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x97B000
	007 Move X20, 0x6EF000
	008 Move W8, [X21+606]
	009 Move X20, [X20+2240]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x6EF000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move X0, 0x6EF000
	019 Move X0, [X0+2256]
	020 Call 0x1C17CF4
	021 Move X0, 0x6EF000
	022 Move X0, [X0+2240]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+606], W8
	026 Move X0, [X20]
	027 Move [X31+8], W31
	028 Move X21, 0x6EF000
	029 Move W8, [X0+224]
	030 Move X21, [X21+2256]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Add X0, X31, 8
	037 Move X1, X19
	038 Move X3, X31
	039 Move X2, [X8]
	040 Call ProfilingScope..ctor, X0, X1, X2
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Call MainLightShadowCasterPass.SetEmptyMainLightShadowParams, X0
	049 Move X20, 0x6EF000
	050 Move X20, [X20+2248]
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X1, [X8+32]
	059 Move X0, X19
	060 Move X2, X31
	061 Call AdditionalLightsShadowCasterPass.SetEmptyAdditionalLightShadowParams, X0, X1
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Call ProfilingScope.Dispose, X0
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X30, [X31+16]
	068 Move X21, [X31+24]
	069 Add X31, X31, 48
	070 Return 
	071 Move X19, X0
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Call 0x3EB2AD0
	075 Move X20, [X0]
	076 Call 0x3EB2AE0
	077 Add X0, X31, 8
	078 Move X1, X31
	079 Call ProfilingScope.Dispose, X0
	080 Compare X20, 0
	081 JumpIfEqual {65}
	082 Move X0, X20
	083 Call 0x1C17F18
	084 Move X20, X31
	085 Move X19, X0
	086 Add X0, X31, 8
	087 Move X1, X31
	088 Call ProfilingScope.Dispose, X0
	089 Compare X20, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X19
	092 Call 0x1D2D690
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A68208 LDR X0, [X22]
	0x03A6820C BL 0x3C124EC
	0x03A68210 LDR X8, [X19]
	0x03A68214 MOV X1, X31
	0x03A68218 LDR X8, [X8 + 0xB8]
	0x03A6821C STR W0, [X8 + 0xC]
	0x03A68220 LDR X0, [X21]
	0x03A68224 BL 0x3C124EC
	0x03A68228 LDR X8, [X19]
	0x03A6822C MOV X1, X31
	0x03A68230 LDR X8, [X8 + 0xB8]
	0x03A68234 STR W0, [X8 + 0x10]
	0x03A68238 LDR X0, [X20]
	0x03A6823C BL 0x3C124EC
	0x03A68240 LDR X8, [X19]
	0x03A68244 LDP X20, X19, [X31 + 0x40]
	0x03A68248 LDP X22, X21, [X31 + 0x30]
	0x03A6824C LDP X24, X23, [X31 + 0x20]
	0x03A68250 LDR X8, [X8 + 0xB8]
	0x03A68254 LDP X26, X25, [X31 + 0x10]
	0x03A68258 STR W0, [X8 + 0x14]
	0x03A6825C LDR X30, [X31], #0x50
	0x03A68260 RET
	0x03A68264 LDR X0, [X0 + 0x8]
	0x03A68268 RET
	0x03A6826C SUB X31, X31, 0x90
	0x03A68270 STP X30, X19, [X31 + 0x80]
	0x03A68274 MOVI V0.2D, 0x0
	0x03A68278 ADD X0, X31, 0x0
	0x03A6827C MOV X19, X8
	0x03A68280 STP V0, V0, [X31 + 0x60]
	0x03A68284 STP V0, V0, [X31 + 0x40]
	0x03A68288 STP V0, V0, [X31 + 0x20]
	0x03A6828C STP V0, V0, [X31]
	0x03A68290 BL 0x3A682B0
	0x03A68294 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x97B000
	007 Move X22, 0x6E9000
	008 Move X19, 0x6EF000
	009 Move X20, 0x6EF000
	010 Move W8, [X21+607]
	011 Move X22, [X22+1432]
	012 Move X19, [X19+2264]
	013 Move X20, [X20+2240]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6E9000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x6EF000
	022 Move X0, [X0+2240]
	023 Call 0x1C17CF4
	024 Move X0, 0x6EF000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+607], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X2, X31
	033 Move X19, X0
	034 Call ProfilingSampler..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

