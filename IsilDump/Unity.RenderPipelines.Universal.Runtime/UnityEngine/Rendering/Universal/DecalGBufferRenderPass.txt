Type: UnityEngine.Rendering.Universal.DecalGBufferRenderPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.DecalScreenSpaceSettings settings, UnityEngine.Rendering.Universal.DecalDrawGBufferSystem drawSystem, System.Boolean decalLayers)

Disassembly:
	0x03A42FD0 BL 0x1990590
	0x03A42FD4 SUB X31, X31, 0x120
	0x03A42FD8 STR X29, [X31 + 0xD0]
	0x03A42FDC STP X30, X25, [X31 + 0xE0]
	0x03A42FE0 STP X24, X23, [X31 + 0xF0]
	0x03A42FE4 STP X22, X21, [X31 + 0x100]
	0x03A42FE8 STP X20, X19, [X31 + 0x110]
	0x03A42FEC MRS X23, 0xC000
	0x03A42FF0 MOV X19, X8
	0x03A42FF4 LDR X8, [X23 + 0x28]
	0x03A42FF8 ADRP X24, 0x9A0000
	0x03A42FFC ADRP X25, 0x712000
	0x03A43000 MOV W20, W3
	0x03A43004 STR X8, [X31 + 0xC8]
	0x03A43008 LDRB W8, [X24 + 0x17E]
	0x03A4300C LDR X25, [X25 + 0x10]
	0x03A43010 MOV X21, X2
	0x03A43014 MOV X22, X1
	0x03A43018 TBNZ X8, 0x0, 0x3A43030
	0x03A4301C ADRP X0, 0x711000
	0x03A43020 LDR X0, [X0 + 0x10]
	0x03A43024 BL 0x1C16CF4
	0x03A43028 MOVZ W8, 0x1
	0x03A4302C STRB W8, [X24 + 0x17E]
	0x03A43030 LDR X0, [X25]
	0x03A43034 LDR W8, [X0 + 0xE0]
	0x03A43038 CBNZ W8, 0x3A43040
	0x03A4303C BL 0x1C16DFC
	0x03A43040 ADD X8, X31, 0x0
	0x03A43044 MOV X0, X22
	0x03A43048 MOV X1, X21
	0x03A4304C MOV W2, W20
	0x03A43050 MOV X3, X31
	0x03A43054 BL 0x3A7358C
	0x03A43058 ADD X1, X31, 0x0
	0x03A4305C MOVZ W2, 0xC4
	0x03A43060 MOV X0, X19
	0x03A43064 BL 0x3EB1AC0
	0x03A43068 LDR X8, [X23 + 0x28]
	0x03A4306C LDR X9, [X31 + 0xC8]
	0x03A43070 CMP X8, X9
	0x03A43074 B.NE 0x3A43094
	0x03A43078 LDP X20, X19, [X31 + 0x110]
	0x03A4307C LDP X22, X21, [X31 + 0x100]
	0x03A43080 LDP X24, X23, [X31 + 0xF0]
	0x03A43084 LDP X30, X25, [X31 + 0xE0]
	0x03A43088 LDR X29, [X31 + 0xD0]
	0x03A4308C ADD X31, X31, 0x120
	0x03A43090 RET
	0x03A43094 BL 0x3EB1B20
	0x03A43098 STP X30, X23, [X31 - 0x30]!
	0x03A4309C STP X22, X21, [X31 + 0x10]
	0x03A430A0 STP X20, X19, [X31 + 0x20]
	0x03A430A4 ADRP X20, 0x99F000
	0x03A430A8 LDRB W8, [X20 + 0x16F]
	0x03A430AC MOV X19, X1
	0x03A430B0 TBNZ X8, 0x0, 0x3A430F8
	0x03A430B4 ADRP X0, 0x6D8000
	0x03A430B8 LDR X0, [X0 + 0x8F8]
	0x03A430BC BL 0x1C16CF4
	0x03A430C0 ADRP X0, 0x712000
	0x03A430C4 LDR X0, [X0 + 0xC18]
	0x03A430C8 BL 0x1C16CF4
	0x03A430CC ADRP X0, 0x712000
	0x03A430D0 LDR X0, [X0 + 0xC20]
	0x03A430D4 BL 0x1C16CF4
	0x03A430D8 ADRP X0, 0x712000
	0x03A430DC LDR X0, [X0 + 0x6E8]
	0x03A430E0 BL 0x1C16CF4
	0x03A430E4 ADRP X0, 0x712000
	0x03A430E8 LDR X0, [X0 + 0xC28]
	0x03A430EC BL 0x1C16CF4
	0x03A430F0 MOVZ W8, 0x1
	0x03A430F4 STRB W8, [X20 + 0x16F]
	0x03A430F8 CBZ X19, 0x3A43190
	0x03A430FC ADRP X8, 0x6D8000
	0x03A43100 LDR X8, [X8 + 0x8F8]
	0x03A43104 ADRP X23, 0x712000
	0x03A43108 ADRP X22, 0x712000
	0x03A4310C ADRP X21, 0x712000
	0x03A43110 LDR X0, [X8]
	0x03A43114 ADRP X20, 0x712000
	0x03A43118 LDR W8, [X0 + 0xE0]
	0x03A4311C LDR X23, [X23 + 0xC28]
	0x03A43120 LDR X22, [X22 + 0xC20]
	0x03A43124 LDR X21, [X21 + 0xC18]
	0x03A43128 LDR X20, [X20 + 0x6E8]
	0x03A4312C CBNZ W8, 0x3A43134
	0x03A43130 BL 0x1C16DFC
	0x03A43134 LDR X1, [X23]
	0x03A43138 MOV X0, X19
	0x03A4313C MOV W2, W31
	0x03A43140 MOV X3, X31
	0x03A43144 BL 0x39E9618
	0x03A43148 LDR X1, [X22]
	0x03A4314C MOV X0, X19
	0x03A43150 MOV W2, W31
	0x03A43154 MOV X3, X31
	0x03A43158 BL 0x39E9618
	0x03A4315C LDR X1, [X21]
	0x03A43160 MOV X0, X19
	0x03A43164 MOV W2, W31
	0x03A43168 MOV X3, X31
	0x03A4316C BL 0x39E9618
	0x03A43170 LDR X1, [X20]
	0x03A43174 MOV X0, X19
	0x03A43178 LDP X20, X19, [X31 + 0x20]
	0x03A4317C LDP X22, X21, [X31 + 0x10]
	0x03A43180 MOV W2, W31
	0x03A43184 MOV X3, X31
	0x03A43188 LDP X30, X23, [X31], #0x30
	0x03A4318C B 0x39E9618
	0x03A43190 ADRP X0, 0x6B5000
	0x03A43194 LDR X0, [X0 + 0x528]
	0x03A43198 BL 0x1C16D08
	0x03A4319C BL 0x1C16F10
	0x03A431A0 MOV X19, X0
	0x03A431A4 ADRP X0, 0x712000
	0x03A431A8 LDR X0, [X0 + 0x6F0]
	0x03A431AC BL 0x1C16D08
	0x03A431B0 MOV X1, X0
	0x03A431B4 MOV X0, X19
	0x03A431B8 MOV X2, X31
	0x03A431BC BL 0x330E100
	0x03A431C0 ADRP X0, 0x712000
	0x03A431C4 LDR X0, [X0 + 0xC30]
	0x03A431C8 BL 0x1C16D08
	0x03A431CC MOV X1, X0
	0x03A431D0 MOV X0, X19
	0x03A431D4 BL 0x1C16DEC
	0x03A431D8 STR X30, [X31 - 0x30]!
	0x03A431DC STP X22, X21, [X31 + 0x10]
	0x03A431E0 STP X20, X19, [X31 + 0x20]
	0x03A431E4 ADRP X21, 0x99F000
	0x03A431E8 ADRP X22, 0x712000
	0x03A431EC LDRB W8, [X21 + 0x170]
	0x03A431F0 LDR X22, [X22 + 0xC38]
	0x03A431F4 MOV X19, X1
	0x03A431F8 MOV X20, X0
	0x03A431FC TBNZ X8, 0x0, 0x3A43214
	0x03A43200 ADRP X0, 0x712000
	0x03A43204 LDR X0, [X0 + 0xC38]
	0x03A43208 BL 0x1C16CF4
	0x03A4320C MOVZ W8, 0x1
	0x03A43210 STRB W8, [X21 + 0x170]
	0x03A43214 LDR X1, [X22]
	0x03A43218 MOV X0, X20
	0x03A4321C MOV X2, X19
	0x03A43220 LDP X20, X19, [X31 + 0x20]
	0x03A43224 LDP X22, X21, [X31 + 0x10]
	0x03A43228 LDR X30, [X31], #0x30
	0x03A4322C B 0x3A3BAC0
	0x03A43230 STR X30, [X31 - 0x10]!
	0x03A43234 CBZ X1, 0x3A43244
	0x03A43238 LDR W0, [X1 + 0x38]
	0x03A4323C LDR X30, [X31], #0x10
	0x03A43240 RET
	0x03A43244 BL 0x1C16F20
	0x03A43248 SUB X31, X31, 0x90
	0x03A4324C STR X30, [X31 + 0x30]
	0x03A43250 STP X28, X27, [X31 + 0x40]
	0x03A43254 STP X26, X25, [X31 + 0x50]
	0x03A43258 STP X24, X23, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X24, 0x9A1000
	014 Move X23, 0x712000
	015 Move W8, [X24+364]
	016 Move X23, [X23+4080]
	017 Move W22, W3
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {60}
	025 Move X0, 0x712000
	026 Move X0, [X0+112]
	027 Call 0x1C17CF4
	028 Move X0, 0x712000
	029 Move X0, [X0+104]
	030 Call 0x1C17CF4
	031 Move X0, 0x712000
	032 Move X0, [X0+96]
	033 Call 0x1C17CF4
	034 Move X0, 0x712000
	035 Move X0, [X0+120]
	036 Call 0x1C17CF4
	037 Move X0, 0x70E000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x710000
	041 Move X0, [X0+3888]
	042 Call 0x1C17CF4
	043 Move X0, 0x6DA000
	044 Move X0, [X0+3368]
	045 Call 0x1C17CF4
	046 Move X0, 0x711000
	047 Move X0, [X0+4080]
	048 Call 0x1C17CF4
	049 Move X0, 0x713000
	050 Move X0, [X0+3040]
	051 Call 0x1C17CF4
	052 Move X0, 0x713000
	053 Move X0, [X0+1920]
	054 Call 0x1C17CF4
	055 Move X0, 0x713000
	056 Move X0, [X0+3048]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X24+364], W8
	060 Move X0, [X23]
	061 And W23, W22, 1
	062 Move X28, 0x70E000
	063 Move X27, 0x713000
	064 Move X22, 0x6DA000
	065 Move W8, [X0+224]
	066 Move X28, [X28+1432]
	067 Move X27, [X27+3040]
	068 Move X22, [X22+3368]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X26, 0x712000
	073 Move X25, 0x712000
	074 Move X24, 0x712000
	075 Move X26, [X26+120]
	076 Move X25, [X25+96]
	077 Move X24, [X24+104]
	078 Move X0, X19
	079 Call ScriptableRenderPass..ctor, X0
	080 Move W8, 220
	081 Move [X19+16], W8
	082 Move [X19+264], X20
	083 Move [X19+272], X21
	084 Move X0, [X28]
	085 Call 0x1C17F10
	086 Move X1, [X27]
	087 Move X2, X31
	088 Move X21, X0
	089 Call ProfilingSampler..ctor, X0, X1
	090 Move [X19+248], X21
	091 Move X0, [X22]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X22, 0x712000
	097 Move X22, [X22+112]
	098 Move X0, X31
	099 Call RenderQueueRange.get_opaque
	100 Move X2, [X26]
	101 Move X1, X0
	102 Add X0, X31, 32
	103 Move [X31+40], W31
	104 Move [X31+32], X31
	105 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	106 Move X1, [X31+32]
	107 Move W2, [X31+40]
	108 Add X0, X31, 8
	109 Move TEMP, 0
	110 Not TEMP
	111 Move W3, TEMP
	112 Move TEMP, 0
	113 Not TEMP
	114 Move W4, TEMP
	115 Move W5, W31
	116 Move X6, X31
	117 Move [X31+8], X31
	118 Move [X31+16], X31
	119 Move [X31+24], X31
	120 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	121 Move X8, [X31+24]
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 Move [X19+296], W23
	124 Move [X19+240], X8
	125 Move [X19+14], V0
	126 Move X0, [X25]
	127 Call 0x1C17F10
	128 Move X1, [X24]
	129 Move X21, X0
	130 Call List`1<ShaderTagId>..ctor, X0
	131 Move [X19+256], X21
	132 Compare X20, 0
	133 JumpIfEqual {136}
	134 Move X8, 0x713000
	135 Move X8, [X8+3048]
	136 Move X8, 0x713000
	137 Move X8, [X8+1920]
	138 Move X1, [X8]
	139 Add X0, X31, 8
	140 Move X2, X31
	141 Move [X31+8], W31
	142 Call ShaderTagId..ctor, X0, X1
	143 Compare X21, 0
	144 JumpIfEqual {184}
	145 Move W10, [X21+28]
	146 Move W1, [X31+8]
	147 Move X8, [X21+16]
	148 Move X9, [X22]
	149 Add W10, W10, 1
	150 Move [X21+28], W10
	151 Compare X8, 0
	152 JumpIfEqual {184}
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Move W11, [X8+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W9, W10, 1
	157 Add X8, X8, X10
	158 Move [X21+24], W9
	159 Move [X8+32], W1
	160 Move X8, [X9+32]
	161 Move X0, X21
	162 Move X8, [X8+192]
	163 Move X2, [X8+112]
	164 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	165 Move X8, 0x710000
	166 Move X8, [X8+3888]
	167 Move W1, 4
	168 Move X0, [X8]
	169 Call 0x1C17D6C
	170 Move [X19+288], X0
	171 Move X20, [X31+128]
	172 Move X19, [X31+136]
	173 Move X22, [X31+112]
	174 Move X21, [X31+120]
	175 Move X24, [X31+96]
	176 Move X23, [X31+104]
	177 Move X26, [X31+80]
	178 Move X25, [X31+88]
	179 Move X28, [X31+64]
	180 Move X27, [X31+72]
	181 Move X30, [X31+48]
	182 Add X31, X31, 144
	183 Return 
	184 Call 0x1C17F20

Method: System.Void Setup(UnityEngine.Rendering.Universal.Internal.DeferredLights deferredLights)

Disassembly:
	0x03A43714 CSET W2, NE
	0x03A43718 LDR X1, [X8]

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03A4371C MOV X0, X21
	0x03A43720 MOV X3, X31
	0x03A43724 BL 0x39E9618
	0x03A43728 LDR X0, [X23]
	0x03A4372C LDR W8, [X0 + 0xE0]
	0x03A43730 CBNZ W8, 0x3A43738
	0x03A43734 BL 0x1C16DFC
	0x03A43738 ADD X0, X31, 0x8
	0x03A4373C MOV X1, X21
	0x03A43740 MOV X2, X31
	0x03A43744 BL 0x3C58FE4
	0x03A43748 MOV X0, X21
	0x03A4374C MOV X1, X31
	0x03A43750 BL 0x3C4C310
	0x03A43754 LDR X0, [X19 + 0x108]
	0x03A43758 CBZ X0, 0x3A43764
	0x03A4375C MOV X1, X21
	0x03A43760 BL 0x3A3BB9C
	0x03A43764 LDR X0, [X23]
	0x03A43768 LDP X21, X20, [X20 + 0x8]
	0x03A4376C LDR W8, [X0 + 0xE0]
	0x03A43770 CBNZ W8, 0x3A43778
	0x03A43774 BL 0x1C16DFC
	0x03A43778 ADD X4, X19, 0xE0
	0x03A4377C ADD X0, X31, 0x8
	0x03A43780 ADD X3, X31, 0x10
	0x03A43784 MOV X1, X21
	0x03A43788 MOV X2, X20
	0x03A4378C MOV X5, X31
	0x03A43790 BL 0x3C58AC8
	0x03A43794 ADD X0, X31, 0x0
	0x03A43798 MOV X1, X31
	0x03A4379C BL 0x39B1DB4
	0x03A437A0 LDR X8, [X22 + 0x28]
	0x03A437A4 LDR X9, [X31 + 0xD8]
	0x03A437A8 CMP X8, X9
	0x03A437AC B.NE 0x3A437DC
	0x03A437B0 LDP X20, X19, [X31 + 0x120]
	0x03A437B4 LDP X22, X21, [X31 + 0x110]
	0x03A437B8 LDP X24, X23, [X31 + 0x100]
	0x03A437BC LDP X30, X25, [X31 + 0xF0]
	0x03A437C0 LDR X29, [X31 + 0xE0]
	0x03A437C4 ADD X31, X31, 0x130
	0x03A437C8 RET
	0x03A437CC BL 0x1C16F20
	0x03A437D0 BL 0x1C16F20
	0x03A437D4 BL 0x1C16F20
	0x03A437D8 BL 0x1C16F20
	0x03A437DC BL 0x3EB1B20
	0x03A437E0 B 0x3A4381C
	0x03A437E4 B 0x3A4381C
	0x03A437E8 B 0x3A4381C
	0x03A437EC B 0x3A4381C
	0x03A437F0 B 0x3A4381C
	0x03A437F4 B 0x3A4381C
	0x03A437F8 B 0x3A4381C
	0x03A437FC B 0x3A4381C
	0x03A43800 B 0x3A4381C
	0x03A43804 B 0x3A4381C
	0x03A43808 B 0x3A4381C
	0x03A4380C B 0x3A4381C
	0x03A43810 B 0x3A4381C
	0x03A43814 B 0x3A4381C
	0x03A43818 B 0x3A4381C
	0x03A4381C MOV X19, X0
	0x03A43820 CMP W1, 0x1
	0x03A43824 B.NE 0x3A43850
	0x03A43828 MOV X0, X19
	0x03A4382C BL 0x3EB1AD0
	0x03A43830 LDR X20, [X0]
	0x03A43834 BL 0x3EB1AE0
	0x03A43838 ADD X0, X31, 0x0
	0x03A4383C MOV X1, X31
	0x03A43840 BL 0x39B1DB4
	0x03A43844 CBZ X20, 0x3A437A0
	0x03A43848 MOV X0, X20
	0x03A4384C BL 0x1C16F18
	0x03A43850 MOV X20, X31
	0x03A43854 B 0x3A4385C
	0x03A43858 MOV X19, X0
	0x03A4385C ADD X0, X31, 0x0
	0x03A43860 MOV X1, X31
	0x03A43864 BL 0x39B1DB4
	0x03A43868 CBNZ X20, 0x3A43874
	0x03A4386C MOV X0, X19
	0x03A43870 BL 0x1D2C690
	0x03A43874 MOV X0, X20
	0x03A43878 BL 0x1C16F18
	0x03A4387C BL 0x1990590
	0x03A43880 STP X30, X23, [X31 - 0x30]!
	0x03A43884 STP X22, X21, [X31 + 0x10]
	0x03A43888 STP X20, X19, [X31 + 0x20]
	0x03A4388C ADRP X20, 0x99F000
	0x03A43890 LDRB W8, [X20 + 0x173]
	0x03A43894 MOV X19, X1
	0x03A43898 TBNZ X8, 0x0, 0x3A438E0
	0x03A4389C ADRP X0, 0x6D8000
	0x03A438A0 LDR X0, [X0 + 0x8F8]
	0x03A438A4 BL 0x1C16CF4
	0x03A438A8 ADRP X0, 0x712000
	0x03A438AC LDR X0, [X0 + 0xC18]
	0x03A438B0 BL 0x1C16CF4
	0x03A438B4 ADRP X0, 0x712000
	0x03A438B8 LDR X0, [X0 + 0xC20]
	0x03A438BC BL 0x1C16CF4
	0x03A438C0 ADRP X0, 0x712000
	0x03A438C4 LDR X0, [X0 + 0x6E8]
	0x03A438C8 BL 0x1C16CF4
	0x03A438CC ADRP X0, 0x712000
	0x03A438D0 LDR X0, [X0 + 0xC28]
	0x03A438D4 BL 0x1C16CF4
	0x03A438D8 MOVZ W8, 0x1
	0x03A438DC STRB W8, [X20 + 0x173]
	0x03A438E0 CBZ X19, 0x3A43978
	0x03A438E4 ADRP X8, 0x6D8000
	0x03A438E8 LDR X8, [X8 + 0x8F8]
	0x03A438EC ADRP X23, 0x712000
	0x03A438F0 ADRP X22, 0x712000
	0x03A438F4 ADRP X21, 0x712000
	0x03A438F8 LDR X0, [X8]
	0x03A438FC ADRP X20, 0x712000
	0x03A43900 LDR W8, [X0 + 0xE0]
	0x03A43904 LDR X23, [X23 + 0xC28]
	0x03A43908 LDR X22, [X22 + 0xC20]
	0x03A4390C LDR X21, [X21 + 0xC18]
	0x03A43910 LDR X20, [X20 + 0x6E8]
	0x03A43914 CBNZ W8, 0x3A4391C
	0x03A43918 BL 0x1C16DFC
	0x03A4391C LDR X1, [X23]
	0x03A43920 MOV X0, X19
	0x03A43924 MOV W2, W31
	0x03A43928 MOV X3, X31
	0x03A4392C BL 0x39E9618
	0x03A43930 LDR X1, [X22]
	0x03A43934 MOV X0, X19
	0x03A43938 MOV W2, W31
	0x03A4393C MOV X3, X31
	0x03A43940 BL 0x39E9618
	0x03A43944 LDR X1, [X21]
	0x03A43948 MOV X0, X19
	0x03A4394C MOV W2, W31
	0x03A43950 MOV X3, X31
	0x03A43954 BL 0x39E9618
	0x03A43958 LDR X1, [X20]
	0x03A4395C MOV X0, X19
	0x03A43960 LDP X20, X19, [X31 + 0x20]
	0x03A43964 LDP X22, X21, [X31 + 0x10]
	0x03A43968 MOV W2, W31
	0x03A4396C MOV X3, X31
	0x03A43970 LDP X30, X23, [X31], #0x30
	0x03A43974 B 0x39E9618
	0x03A43978 ADRP X0, 0x6B5000
	0x03A4397C LDR X0, [X0 + 0x528]
	0x03A43980 BL 0x1C16D08
	0x03A43984 BL 0x1C16F10
	0x03A43988 MOV X19, X0
	0x03A4398C ADRP X0, 0x712000
	0x03A43990 LDR X0, [X0 + 0x6F0]
	0x03A43994 BL 0x1C16D08
	0x03A43998 MOV X1, X0
	0x03A4399C MOV X0, X19
	0x03A439A0 MOV X2, X31
	0x03A439A4 BL 0x330E100
	0x03A439A8 ADRP X0, 0x712000
	0x03A439AC LDR X0, [X0 + 0xC50]
	0x03A439B0 BL 0x1C16D08
	0x03A439B4 MOV X1, X0
	0x03A439B8 MOV X0, X19
	0x03A439BC BL 0x1C16DEC
	0x03A439C0 LDR X8, [X0]
	0x03A439C4 LDP X3, X2, [X8 + 0x1A8]
	0x03A439C8 BR X3
	0x03A439CC LDR W0, [X0 + 0x10]
	0x03A439D0 RET
	0x03A439D4 STR W1, [X0 + 0x10]
	0x03A439D8 RET
	0x03A439DC LDR X0, [X0 + 0x80]
	0x03A439E0 RET
	0x03A439E4 STR X30, [X31 - 0x10]!
	0x03A439E8 LDR X9, [X0 + 0x80]
	0x03A439EC CBZ X9, 0x3A43A10
	0x03A439F0 LDR W10, [X9 + 0x18]
	0x03A439F4 CBZ W10, 0x3A43A14
	0x03A439F8 LDR X10, [X9 + 0x40]
	0x03A439FC LDP V1, V0, [X9 + 0x20]
	0x03A43A00 STR X10, [X8 + 0x20]
	0x03A43A04 STP V1, V0, [X8]
	0x03A43A08 LDR X30, [X31], #0x10
	0x03A43A0C RET
	0x03A43A10 BL 0x1C16F20
	0x03A43A14 BL 0x1C16F28
	0x03A43A18 SUB X31, X31, 0x40
	0x03A43A1C STR X30, [X31 + 0x30]
	0x03A43A20 LDRB W9, [X0 + 0x70]
	0x03A43A24 CBZ W9, 0x3A43A70
	0x03A43A28 LDR X9, [X0 + 0x98]
	0x03A43A2C CBZ X9, 0x3A43A8C
	0x03A43A30 LDUR V0, [X9 + 0x28]
	0x03A43A34 LDR X10, [X9 + 0x48]
	0x03A43A38 LDUR V1, [X9 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9A0000
	007 Move W8, [X20+365]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x6B3000
	014 Move X0, [X0+2488]
	015 Call 0x1C17CF4
	016 Move X0, 0x710000
	017 Move X0, [X0+3888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+365], W8
	021 Move X8, [X19+280]
	022 Compare X8, 0
	023 JumpIfEqual {237}
	024 Move X9, [X8+48]
	025 Compare X9, 0
	026 JumpIfEqual {237}
	027 Move W10, [X9+24]
	028 Compare W10, 0
	029 JumpIfEqual {238}
	030 Move X22, [X19+288]
	031 Compare X22, 0
	032 JumpIfEqual {237}
	033 Move X20, [X9+32]
	034 Move W21, [X8+21]
	035 Compare X20, 0
	036 JumpIfEqual {43}
	037 Move X8, [X22]
	038 Move X0, X20
	039 Move X1, [X8+64]
	040 Call 0x1C17E00
	041 Compare X0, 0
	042 JumpIfEqual {239}
	043 Move W8, [X22+24]
	044 Compare W8, 0
	045 JumpIfEqual {238}
	046 Move [X22+32], X20
	047 Move X8, [X19+280]
	048 Compare X8, 0
	049 JumpIfEqual {237}
	050 Move X8, [X8+48]
	051 Compare X8, 0
	052 JumpIfEqual {237}
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X22, [X19+288]
	056 Compare X22, 0
	057 JumpIfEqual {237}
	058 Move X20, [X8+40]
	059 Compare X20, 0
	060 JumpIfEqual {67}
	061 Move X8, [X22]
	062 Move X0, X20
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {239}
	067 Move W8, [X22+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X22+40], X20
	070 Move X8, [X19+280]
	071 Compare X8, 0
	072 JumpIfEqual {237}
	073 Move X8, [X8+48]
	074 Compare X8, 0
	075 JumpIfEqual {237}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X22, [X19+288]
	079 Compare X22, 0
	080 JumpIfEqual {237}
	081 Move X20, [X8+48]
	082 Compare X20, 0
	083 JumpIfEqual {90}
	084 Move X8, [X22]
	085 Move X0, X20
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {239}
	090 Move W8, [X22+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X22+48], X20
	093 Move X8, [X19+280]
	094 Compare X8, 0
	095 JumpIfEqual {237}
	096 Move X8, [X8+48]
	097 Compare X8, 0
	098 JumpIfEqual {237}
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X22, [X19+288]
	102 Compare X22, 0
	103 JumpIfEqual {237}
	104 Move X20, [X8+56]
	105 Compare X20, 0
	106 JumpIfEqual {113}
	107 Move X8, [X22]
	108 Move X0, X20
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {239}
	113 Move W8, [X22+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X22+56], X20
	116 Compare W21, 0
	117 JumpIfEqual {224}
	118 Move X8, 0x710000
	119 Move X8, [X8+3888]
	120 Move W9, [X19+296]
	121 Move X0, [X8]
	122 Compare W9, 0
	123 JumpIfEqual {180}
	124 Move W1, 2
	125 Call 0x1C17D6C
	126 Move X8, [X19+280]
	127 Compare X8, 0
	128 JumpIfEqual {237}
	129 Move X21, [X8+48]
	130 Move X20, X0
	131 Move X0, X8
	132 Move X1, X31
	133 Call DeferredLights.get_GbufferDepthIndex, X0
	134 Compare X21, 0
	135 JumpIfEqual {237}
	136 Move W8, [X21+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X20, 0
	139 JumpIfEqual {237}
	140 Add X8, X21, W0
	141 Move X21, [X8+32]
	142 Compare X21, 0
	143 JumpIfEqual {150}
	144 Move X8, [X20]
	145 Move X0, X21
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {239}
	150 Move W8, [X20+24]
	151 Compare W8, 0
	152 JumpIfEqual {238}
	153 Move [X20+32], X21
	154 Move X0, [X19+280]
	155 Compare X0, 0
	156 JumpIfEqual {237}
	157 Move X21, [X0+48]
	158 Move X1, X31
	159 Call DeferredLights.get_GBufferRenderingLayers, X0
	160 Compare X21, 0
	161 JumpIfEqual {237}
	162 Move W8, [X21+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X8, X21, W0
	165 Move X21, [X8+32]
	166 Compare X21, 0
	167 JumpIfEqual {174}
	168 Move X8, [X20]
	169 Move X0, X21
	170 Move X1, [X8+64]
	171 Call 0x1C17E00
	172 Compare X0, 0
	173 JumpIfEqual {239}
	174 Move W8, [X20+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move [X20+40], X21
	177 Move X8, 0x6B3000
	178 Move X8, [X8+2488]
	179 Move W1, 2
	180 Move W1, 1
	181 Call 0x1C17D6C
	182 Move X8, [X19+280]
	183 Compare X8, 0
	184 JumpIfEqual {237}
	185 Move X21, [X8+48]
	186 Move X20, X0
	187 Move X0, X8
	188 Move X1, X31
	189 Call DeferredLights.get_GbufferDepthIndex, X0
	190 Compare X21, 0
	191 JumpIfEqual {237}
	192 Move W8, [X21+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Compare X20, 0
	195 JumpIfEqual {237}
	196 Add X8, X21, W0
	197 Move X21, [X8+32]
	198 Compare X21, 0
	199 JumpIfEqual {206}
	200 Move X8, [X20]
	201 Move X0, X21
	202 Move X1, [X8+64]
	203 Call 0x1C17E00
	204 Compare X0, 0
	205 JumpIfEqual {239}
	206 Move W8, [X20+24]
	207 Compare W8, 0
	208 JumpIfEqual {238}
	209 Move [X20+32], X21
	210 Move X8, 0x6B3000
	211 Move X8, [X8+2488]
	212 Move W1, 1
	213 Move X0, [X8]
	214 Call 0x1C17D6C
	215 Compare X0, 0
	216 JumpIfEqual {237}
	217 Move W8, [X0+24]
	218 Compare W8, 0
	219 JumpIfEqual {238}
	220 Move W8, 1
	221 Move [X0+32], W8
	222 Move [X19+136], X20
	223 Move [X19+144], X0
	224 Move X8, [X19+280]
	225 Compare X8, 0
	226 JumpIfEqual {237}
	227 Move X1, [X19+288]
	228 Move X2, [X8+112]
	229 Move X0, X19
	230 Move X20, [X31+32]
	231 Move X19, [X31+40]
	232 Move X22, [X31+16]
	233 Move X21, [X31+24]
	234 Move X30, [X31+48]
	235 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	236 Return 
	237 Call 0x1C17F20
	238 Call 0x1C17F28
	239 Call 0x1C17F44
	240 Move X1, X31
	241 Call 0x1C17DEC

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A43CAC STR W15, [X13, X8, LSL #2]
	0x03A43CB0 LDR X15, [X19 + 0x28]
	0x03A43CB4 CBZ X15, 0x3A43CE8
	0x03A43CB8 LDR W16, [X15 + 0x18]
	0x03A43CBC CMP X8, X16
	0x03A43CC0 B.CS 0x3A43CE4
	0x03A43CC4 ADD X15, X15, X8
	0x03A43CC8 ADD X8, X8, 0x1
	0x03A43CCC CMP X10, X8
	0x03A43CD0 STRB W14, [X15 + 0x20]
	0x03A43CD4 B.NE 0x3A43C90
	0x03A43CD8 LDP X20, X19, [X31 + 0x10]
	0x03A43CDC LDP X30, X21, [X31], #0x20
	0x03A43CE0 RET
	0x03A43CE4 BL 0x1C16F28
	0x03A43CE8 BL 0x1C16F20
	0x03A43CEC MOVZ W8, 0x1
	0x03A43CF0 STR W1, [X0 + 0x20]
	0x03A43CF4 STRB W8, [X0 + 0x30]
	0x03A43CF8 RET
	0x03A43CFC STR X30, [X31 - 0x30]!
	0x03A43D00 STP X22, X21, [X31 + 0x10]
	0x03A43D04 STP X20, X19, [X31 + 0x20]
	0x03A43D08 LDR X22, [X0 + 0x88]
	0x03A43D0C CBZ X22, 0x3A43D68
	0x03A43D10 MOV W19, W2
	0x03A43D14 MOV X20, X0
	0x03A43D18 MOV X21, X1
	0x03A43D1C CBZ X1, 0x3A43D34
	0x03A43D20 LDR X8, [X22]
	0x03A43D24 MOV X0, X21
	0x03A43D28 LDR X1, [X8 + 0x40]
	0x03A43D2C BL 0x1C16E00
	0x03A43D30 CBZ X0, 0x3A43D70
	0x03A43D34 LDR W8, [X22 + 0x18]
	0x03A43D38 CBZ W8, 0x3A43D6C
	0x03A43D3C STR X21, [X22 + 0x20]
	0x03A43D40 LDR X8, [X20 + 0x90]
	0x03A43D44 CBZ X8, 0x3A43D68
	0x03A43D48 LDR W9, [X8 + 0x18]
	0x03A43D4C CBZ W9, 0x3A43D6C
	0x03A43D50 AND W9, W19, 0x1
	0x03A43D54 LDP X20, X19, [X31 + 0x20]
	0x03A43D58 LDP X22, X21, [X31 + 0x10]
	0x03A43D5C STRB W9, [X8 + 0x20]
	0x03A43D60 LDR X30, [X31], #0x30
	0x03A43D64 RET
	0x03A43D68 BL 0x1C16F20
	0x03A43D6C BL 0x1C16F28
	0x03A43D70 BL 0x1C16F44
	0x03A43D74 MOV X1, X31
	0x03A43D78 BL 0x1C16DEC
	0x03A43D7C STR X1, [X0 + 0x88]
	0x03A43D80 RET
	0x03A43D84 STR X30, [X31 - 0x10]!
	0x03A43D88 LDR X8, [X0 + 0x90]
	0x03A43D8C CBZ X8, 0x3A43DB0
	0x03A43D90 LDR W9, [X8 + 0x18]
	0x03A43D94 CMP W9, W1
	0x03A43D98 B.LS 0x3A43DB4
	0x03A43D9C AND W9, W2, 0x1
	0x03A43DA0 ADD X8, X8, W1, SXTW
	0x03A43DA4 STRB W9, [X8 + 0x20]
	0x03A43DA8 LDR X30, [X31], #0x10
	0x03A43DAC RET
	0x03A43DB0 BL 0x1C16F20
	0x03A43DB4 BL 0x1C16F28
	0x03A43DB8 STR X30, [X31 - 0x10]!
	0x03A43DBC LDR X8, [X0 + 0x90]
	0x03A43DC0 CBZ X8, 0x3A43DE0
	0x03A43DC4 LDR W9, [X8 + 0x18]
	0x03A43DC8 CMP W9, W1
	0x03A43DCC B.LS 0x3A43DE4
	0x03A43DD0 ADD X8, X8, W1, SXTW
	0x03A43DD4 LDRB W0, [X8 + 0x20]
	0x03A43DD8 LDR X30, [X31], #0x10
	0x03A43DDC RET
	0x03A43DE0 BL 0x1C16F20
	0x03A43DE4 BL 0x1C16F28
	0x03A43DE8 SUB X31, X31, 0x110
	0x03A43DEC STP X29, X30, [X31 + 0xE0]
	0x03A43DF0 STP X22, X21, [X31 + 0xF0]
	0x03A43DF4 STP X20, X19, [X31 + 0x100]
	0x03A43DF8 MOVZ W8, 0x1
	0x03A43DFC MOV X19, X0
	0x03A43E00 STRB W31, [X0 + 0x40]
	0x03A43E04 STRB W8, [X0 + 0x70]
	0x03A43E08 ADD X8, X31, 0x80
	0x03A43E0C MOVN W0, 0x0
	0x03A43E10 MOV X1, X31
	0x03A43E14 BL 0x3C4B258
	0x03A43E18 LDR X9, [X31 + 0xA0]
	0x03A43E1C LDP V1, V0, [X31 + 0x80]
	0x03A43E20 STR X9, [X31 + 0xD0]
	0x03A43E24 STP V1, V0, [X31 + 0xB0]
	0x03A43E28 LDR X8, [X19 + 0x78]
	0x03A43E2C STR X9, [X19 + 0xC0]
	0x03A43E30 STP V1, V0, [X19 + 0xA0]
	0x03A43E34 STR X31, [X19 + 0x98]
	0x03A43E38 CBZ X8, 0x3A43F34
	0x03A43E3C LDR W9, [X8 + 0x18]
	0x03A43E40 CBZ W9, 0x3A43F4C
	0x03A43E44 STR X31, [X8 + 0x20]
	0x03A43E48 LDR X20, [X19 + 0x80]
	0x03A43E4C ADD X8, X31, 0x58
	0x03A43E50 MOVN W0, 0x0
	0x03A43E54 MOV X1, X31
	0x03A43E58 BL 0x3C4B258
	0x03A43E5C LDUR V0, [X31 + 0x58]
	0x03A43E60 LDUR V1, [X31 + 0x68]
	0x03A43E64 LDR X8, [X31 + 0x78]
	0x03A43E68 STP V0, V1, [X31 + 0x80]
	0x03A43E6C STR X8, [X31 + 0xA0]
	0x03A43E70 CBZ X20, 0x3A43F34
	0x03A43E74 LDP V0, V1, [X31 + 0x80]
	0x03A43E78 LDR X8, [X31 + 0xA0]
	0x03A43E7C STP V0, V1, [X31 + 0x30]
	0x03A43E80 STR X8, [X31 + 0x50]
	0x03A43E84 LDR W8, [X20 + 0x18]
	0x03A43E88 CBZ W8, 0x3A43F4C
	0x03A43E8C LDR X8, [X31 + 0x50]
	0x03A43E90 LDP V1, V0, [X31 + 0x30]
	0x03A43E94 STR X8, [X20 + 0x40]
	0x03A43E98 STP V1, V0, [X20 + 0x20]
	0x03A43E9C LDR X8, [X19 + 0x78]
	0x03A43EA0 CBZ X8, 0x3A43F34
	0x03A43EA4 MOV X20, X31
	0x03A43EA8 MOVZ W21, 0x48
	0x03A43EAC LDR W9, [X8 + 0x18]
	0x03A43EB0 ADD X10, X20, 0x1
	0x03A43EB4 CMP X10, W9, SXTW
	0x03A43EB8 B.GE 0x3A43F38
	0x03A43EBC CMP X10, X9
	0x03A43EC0 B.CS 0x3A43F4C
	0x03A43EC4 ADD X8, X8, X20, 0x3, LSL
	0x03A43EC8 STR X31, [X8 + 0x28]
	0x03A43ECC LDR X22, [X19 + 0x80]
	0x03A43ED0 ADD X8, X31, 0x80
	0x03A43ED4 MOV W0, W31
	0x03A43ED8 MOV X1, X31
	0x03A43EDC BL 0x3C4B258
	0x03A43EE0 LDP V0, V1, [X31 + 0x80]
	0x03A43EE4 LDR X8, [X31 + 0xA0]
	0x03A43EE8 STP V0, V1, [X31 + 0xB0]
	0x03A43EEC STR X8, [X31 + 0xD0]
	0x03A43EF0 CBZ X22, 0x3A43F34
	0x03A43EF4 LDP V0, V1, [X31 + 0xB0]
	0x03A43EF8 LDR X8, [X31 + 0xD0]
	0x03A43EFC ADD X20, X20, 0x1
	0x03A43F00 STP V0, V1, [X31]
	0x03A43F04 STR X8, [X31 + 0x20]
	0x03A43F08 LDR W8, [X22 + 0x18]
	0x03A43F0C CMP X20, X8
	0x03A43F10 B.CS 0x3A43F4C
	0x03A43F14 LDR X8, [X31 + 0x20]
	0x03A43F18 LDP V1, V0, [X31]
	0x03A43F1C ADD X9, X22, X21
	0x03A43F20 ADD X21, X21, 0x28
	0x03A43F24 STR X8, [X9 + 0x20]
	0x03A43F28 STP V1, V0, [X9]
	0x03A43F2C LDR X8, [X19 + 0x78]
	0x03A43F30 CBNZ X8, 0x3A43EAC
	0x03A43F34 BL 0x1C16F20
	0x03A43F38 LDP X20, X19, [X31 + 0x100]
	0x03A43F3C LDP X22, X21, [X31 + 0xF0]
	0x03A43F40 LDP X29, X30, [X31 + 0xE0]
	0x03A43F44 ADD X31, X31, 0x110
	0x03A43F48 RET
	0x03A43F4C BL 0x1C16F28
	0x03A43F50 SUB X31, X31, 0x40
	0x03A43F54 STR X30, [X31 + 0x30]
	0x03A43F58 LDR X8, [X2 + 0x20]
	0x03A43F5C LDP V1, V0, [X2]
	0x03A43F60 STR X31, [X0 + 0x98]
	0x03A43F64 STR X8, [X0 + 0xC0]
	0x03A43F68 STP V1, V0, [X0 + 0xA0]
	0x03A43F6C LDR X8, [X1 + 0x20]
	0x03A43F70 LDP V1, V0, [X1]
	0x03A43F74 ADD X1, X31, 0x0
	0x03A43F78 STR X8, [X31 + 0x20]
	0x03A43F7C STP V1, V0, [X31]
	0x03A43F80 BL 0x3A43F90
	0x03A43F84 LDR X30, [X31 + 0x30]
	0x03A43F88 ADD X31, X31, 0x40
	0x03A43F8C RET
	0x03A43F90 SUB X31, X31, 0xC0
	0x03A43F94 STR X30, [X31 + 0x90]
	0x03A43F98 STP X22, X21, [X31 + 0xA0]
	0x03A43F9C STP X20, X19, [X31 + 0xB0]
	0x03A43FA0 MOVZ W8, 0x1
	0x03A43FA4 STRB W31, [X0 + 0x70]
	0x03A43FA8 STRB W8, [X0 + 0x40]
	0x03A43FAC LDR X9, [X1 + 0x20]
	0x03A43FB0 LDP V0, V1, [X1]
	0x03A43FB4 LDR X8, [X0 + 0x80]
	0x03A43FB8 STR X9, [X31 + 0x80]
	0x03A43FBC STP V0, V1, [X31 + 0x60]
	0x03A43FC0 CBZ X8, 0x3A4405C
	0x03A43FC4 LDP V0, V1, [X31 + 0x60]
	0x03A43FC8 LDR X9, [X31 + 0x80]
	0x03A43FCC STP V0, V1, [X31 + 0x30]
	0x03A43FD0 STR X9, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X24
	005 Move [X31+248], X23
	006 Move [X31+256], X22
	007 Move [X31+264], X21
	008 Move [X31+272], X20
	009 Move [X31+280], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X21, 0x9A0000
	013 Move X23, 0x70E000
	014 Move X20, X2
	015 Move [X31+216], X8
	016 Move [X31+8], X1
	017 Move W8, [X21+366]
	018 Move X23, [X23+3200]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x6D9000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x713000
	028 Move X0, [X0+3088]
	029 Call 0x1C17CF4
	030 Move X0, 0x70E000
	031 Move X0, [X0+3200]
	032 Call 0x1C17CF4
	033 Move X0, 0x713000
	034 Move X0, [X0+3096]
	035 Call 0x1C17CF4
	036 Move X0, 0x713000
	037 Move X0, [X0+3104]
	038 Call 0x1C17CF4
	039 Move X0, 0x713000
	040 Move X0, [X0+1768]
	041 Call 0x1C17CF4
	042 Move X0, 0x713000
	043 Move X0, [X0+3112]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+366], W8
	047 Add X0, X31, 16
	048 Move W2, 196
	049 Move W1, W31
	050 Call 0x3EB2B10
	051 Move [X31], W31
	052 Move W3, [X20+396]
	053 Move X1, [X19+256]
	054 Add X8, X31, 16
	055 Move X2, X20
	056 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	057 Move X21, [X20]
	058 Move X2, [X19+248]
	059 Add X0, X31, 0
	060 Move X3, X31
	061 Move X1, X21
	062 Call ProfilingScope..ctor, X0, X1, X2
	063 Move X0, [X23]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X0, X31, 8
	069 Move X1, X21
	070 Move X2, X31
	071 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	072 Compare X21, 0
	073 JumpIfEqual {180}
	074 Move X0, X21
	075 Move X1, X31
	076 Call CommandBuffer.Clear, X0
	077 Move X8, 0x713000
	078 Move X8, [X8+3088]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X1, X20, 24
	085 Move X0, X21
	086 Move X2, X31
	087 Call NormalReconstruction.SetupProperties, X0, X1
	088 Move X8, [X19+272]
	089 Compare X8, 0
	090 JumpIfEqual {181}
	091 Move X9, 0x6D9000
	092 Move X9, [X9+2296]
	093 Move W24, [X8+16]
	094 Move X0, [X9]
	095 Move W9, [X0+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, 0x713000
	100 Move X8, [X8+3112]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 Move X1, [X8]
	104 Move X0, X21
	105 Move X3, X31
	106 Call CoreUtils.SetKeyword, X0, X1, X2
	107 Move X8, [X19+272]
	108 Compare X8, 0
	109 JumpIfEqual {182}
	110 Move X9, 0x713000
	111 Move W8, [X8+16]
	112 Move X9, [X9+3104]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X1, [X9]
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Move X0, X21
	117 Move X3, X31
	118 Call CoreUtils.SetKeyword, X0, X1, X2
	119 Move X8, [X19+272]
	120 Compare X8, 0
	121 JumpIfEqual {183}
	122 Move X9, 0x713000
	123 Move W8, [X8+16]
	124 Move X9, [X9+3096]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X1, [X9]
	127 NotImplemented "Instruction CSET not yet implemented."
	128 Move X0, X21
	129 Move X3, X31
	130 Call CoreUtils.SetKeyword, X0, X1, X2
	131 Move X8, 0x713000
	132 Move X8, [X8+1768]
	133 Move W2, [X19+296]
	134 Move X1, [X8]
	135 Move X0, X21
	136 Move X3, X31
	137 Call CoreUtils.SetKeyword, X0, X1, X2
	138 Add X0, X31, 8
	139 Move X1, X21
	140 Move X2, X31
	141 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	142 Move X0, X21
	143 Move X1, X31
	144 Call CommandBuffer.Clear, X0
	145 Move X0, [X19+264]
	146 Compare X0, 0
	147 JumpIfEqual {150}
	148 Move X1, X21
	149 Call DecalDrawSystem.Execute, X0, X1
	150 Move X0, [X23]
	151 Move X21, [X20+8]
	152 Move X20, [X20+16]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Add X4, X19, 224
	158 Add X0, X31, 8
	159 Add X3, X31, 16
	160 Move X1, X21
	161 Move X2, X20
	162 Move X5, X31
	163 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	164 Add X0, X31, 0
	165 Move X1, X31
	166 Call ProfilingScope.Dispose, X0
	167 Move X8, [X22+40]
	168 Move X9, [X31+216]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X20, [X31+272]
	171 Move X19, [X31+280]
	172 Move X22, [X31+256]
	173 Move X21, [X31+264]
	174 Move X24, [X31+240]
	175 Move X23, [X31+248]
	176 Move X29, [X31+224]
	177 Move X30, [X31+232]
	178 Add X31, X31, 288
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Call 0x3EB2B20
	185 Move X19, X0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, X19
	188 Call 0x3EB2AD0
	189 Move X20, [X0]
	190 Call 0x3EB2AE0
	191 Add X0, X31, 0
	192 Move X1, X31
	193 Call ProfilingScope.Dispose, X0
	194 Compare X20, 0
	195 JumpIfEqual {167}
	196 Move X0, X20
	197 Call 0x1C17F18
	198 Move X20, X31
	199 Move X19, X0
	200 Add X0, X31, 0
	201 Move X1, X31
	202 Call ProfilingScope.Dispose, X0
	203 Compare X20, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X19
	206 Call 0x1D2D690
	207 Move X0, X20
	208 Call 0x1C17F18
	209 Call 0x1991590

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A44098 LDR X30, [X31], #0x10
	0x03A4409C B 0x3A440A4
	0x03A440A0 BL 0x1C16F20
	0x03A440A4 SUB X31, X31, 0x110
	0x03A440A8 STP X29, X30, [X31 + 0xE0]
	0x03A440AC STP X22, X21, [X31 + 0xF0]
	0x03A440B0 STP X20, X19, [X31 + 0x100]
	0x03A440B4 LDR X21, [X0 + 0x78]
	0x03A440B8 MOVZ W8, 0x1
	0x03A440BC STRB W8, [X0 + 0x70]
	0x03A440C0 STRB W8, [X0 + 0x40]
	0x03A440C4 CBZ X21, 0x3A44200
	0x03A440C8 MOV X20, X1
	0x03A440CC MOV X19, X0
	0x03A440D0 CBZ X1, 0x3A440E8
	0x03A440D4 LDR X8, [X21]
	0x03A440D8 MOV X0, X20
	0x03A440DC LDR X1, [X8 + 0x40]
	0x03A440E0 BL 0x1C16E00
	0x03A440E4 CBZ X0, 0x3A4421C
	0x03A440E8 LDR W8, [X21 + 0x18]
	0x03A440EC CBZ W8, 0x3A44218
	0x03A440F0 STR X20, [X21 + 0x20]
	0x03A440F4 CBZ X20, 0x3A44200
	0x03A440F8 LDUR V0, [X20 + 0x28]
	0x03A440FC LDR X8, [X20 + 0x48]
	0x03A44100 LDUR V1, [X20 + 0x38]
	0x03A44104 LDR X21, [X19 + 0x80]
	0x03A44108 MOVI V2.2D, 0x0
	0x03A4410C ADD X0, X31, 0xB0
	0x03A44110 ADD X1, X31, 0x80
	0x03A44114 MOVN W3, 0x0
	0x03A44118 MOVN W4, 0x0
	0x03A4411C MOV W2, W31
	0x03A44120 MOV X5, X31
	0x03A44124 STR X31, [X31 + 0xD0]
	0x03A44128 STR X8, [X31 + 0xA0]
	0x03A4412C STP V0, V1, [X31 + 0x80]
	0x03A44130 STP V2, V2, [X31 + 0xB0]
	0x03A44134 BL 0x3C4B098
	0x03A44138 CBZ X21, 0x3A44200
	0x03A4413C LDP V0, V1, [X31 + 0xB0]
	0x03A44140 LDR X8, [X31 + 0xD0]
	0x03A44144 STP V0, V1, [X31 + 0x50]
	0x03A44148 STR X8, [X31 + 0x70]
	0x03A4414C LDR W8, [X21 + 0x18]
	0x03A44150 CBZ W8, 0x3A44218
	0x03A44154 LDR X8, [X31 + 0x70]
	0x03A44158 LDP V1, V0, [X31 + 0x50]
	0x03A4415C STR X8, [X21 + 0x40]
	0x03A44160 STP V1, V0, [X21 + 0x20]
	0x03A44164 LDR X8, [X19 + 0x78]
	0x03A44168 CBZ X8, 0x3A44200
	0x03A4416C MOV X20, X31
	0x03A44170 MOVZ W21, 0x48
	0x03A44174 LDR W9, [X8 + 0x18]
	0x03A44178 ADD X10, X20, 0x1
	0x03A4417C CMP X10, W9, SXTW
	0x03A44180 B.GE 0x3A44204
	0x03A44184 CMP X10, X9
	0x03A44188 B.CS 0x3A44218
	0x03A4418C ADD X8, X8, X20, 0x3, LSL
	0x03A44190 STR X31, [X8 + 0x28]
	0x03A44194 LDR X22, [X19 + 0x80]
	0x03A44198 ADD X8, X31, 0x28
	0x03A4419C MOV W0, W31
	0x03A441A0 MOV X1, X31
	0x03A441A4 BL 0x3C4B258
	0x03A441A8 LDUR V0, [X31 + 0x28]
	0x03A441AC LDUR V1, [X31 + 0x38]
	0x03A441B0 LDR X8, [X31 + 0x48]
	0x03A441B4 STP V0, V1, [X31 + 0xB0]
	0x03A441B8 STR X8, [X31 + 0xD0]
	0x03A441BC CBZ X22, 0x3A44200
	0x03A441C0 LDP V0, V1, [X31 + 0xB0]
	0x03A441C4 LDR X8, [X31 + 0xD0]
	0x03A441C8 ADD X20, X20, 0x1
	0x03A441CC STP V0, V1, [X31]
	0x03A441D0 STR X8, [X31 + 0x20]
	0x03A441D4 LDR W8, [X22 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x99F000
	008 Move W8, [X20+367]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x6D8000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x712000
	018 Move X0, [X0+3096]
	019 Call 0x1C17CF4
	020 Move X0, 0x712000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x712000
	024 Move X0, [X0+1768]
	025 Call 0x1C17CF4
	026 Move X0, 0x712000
	027 Move X0, [X0+3112]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+367], W8
	031 Compare X19, 0
	032 JumpIfEqual {75}
	033 Move X8, 0x6D8000
	034 Move X8, [X8+2296]
	035 Move X23, 0x712000
	036 Move X22, 0x712000
	037 Move X21, 0x712000
	038 Move X0, [X8]
	039 Move X20, 0x712000
	040 Move W8, [X0+224]
	041 Move X23, [X23+3112]
	042 Move X22, [X22+3104]
	043 Move X21, [X21+3096]
	044 Move X20, [X20+1768]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X1, [X23]
	049 Move X0, X19
	050 Move W2, W31
	051 Move X3, X31
	052 Call CoreUtils.SetKeyword, X0, X1, X2
	053 Move X1, [X22]
	054 Move X0, X19
	055 Move W2, W31
	056 Move X3, X31
	057 Call CoreUtils.SetKeyword, X0, X1, X2
	058 Move X1, [X21]
	059 Move X0, X19
	060 Move W2, W31
	061 Move X3, X31
	062 Call CoreUtils.SetKeyword, X0, X1, X2
	063 Move X1, [X20]
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X3, X31
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call CoreUtils.SetKeyword, X0, X1, X2
	074 Return 
	075 Move X0, 0x6B5000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0x712000
	081 Move X0, [X0+1776]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0x712000
	088 Move X0, [X0+3120]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

