Type: UnityEngine.Rendering.Universal.Render2DLightingPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A1DDC8 MOV X0, X21
	0x03A1DDCC BL 0x1C16CF4
	0x03A1DDD0 STRB W24, [X28 + 0x818]
	0x03A1DDD4 LDR X0, [X21]
	0x03A1DDD8 LDR W8, [X0 + 0xE0]
	0x03A1DDDC CBNZ W8, 0x3A1DDE4
	0x03A1DDE0 BL 0x1C16DFC
	0x03A1DDE4 FCMP S15, S11
	0x03A1DDE8 B.LE 0x3A1DDFC
	0x03A1DDEC LDR V1, [X31 + 0x10]
	0x03A1DDF0 FDIV S0, S12, S15
	0x03A1DDF4 FDIV S1, S1, S15
	0x03A1DDF8 B 0x3A1DE1C
	0x03A1DDFC LDRB W8, [X25 + 0x78F]
	0x03A1DE00 CBNZ W8, 0x3A1DE10
	0x03A1DE04 MOV X0, X22
	0x03A1DE08 BL 0x1C16CF4
	0x03A1DE0C STRB W24, [X25 + 0x78F]
	0x03A1DE10 LDR X8, [X22]
	0x03A1DE14 LDR X8, [X8 + 0xB8]
	0x03A1DE18 LDP S0, S1, [X8]
	0x03A1DE1C FMUL S0, S13, S0
	0x03A1DE20 FMUL S1, S14, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9C5000
	005 Move X20, 0x738000
	006 Move W8, [X19+4061]
	007 Move X20, [X20+1664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x738000
	013 Move X0, [X0+1664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4061], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A1DE24 FADD S0, S0, S1
	0x03A1DE28 BL 0x3EB1BB0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__25_0(UnityEngine.Rendering.ScriptableRenderContext ctx, ref UnityEngine.Rendering.Universal.RenderingData data, ref UnityEngine.Rendering.DrawingSettings ds, ref UnityEngine.Rendering.FilteringSettings fs, ref UnityEngine.Rendering.RenderStateBlock rsb)

Disassembly:
	0x03A1DE2C LDR V1, [X31 + 0x14]
	0x03A1DE30 MOV X0, X19
	0x03A1DE34 MOV W1, W23
	0x03A1DE38 MOV W2, W20
	0x03A1DE3C FDIV S0, S0, S1
	0x03A1DE40 FMOV S1, 1
	0x03A1DE44 FADD S0, S0, S1
	0x03A1DE48 FMIN S1, S0, S1
	0x03A1DE4C FCMP S0, 0x0
	0x03A1DE50 FMOV S0, W31
	0x03A1DE54 FCSEL S1, S1, S0, PL
	0x03A1DE58 MOV V0.16B, V10.16B
	0x03A1DE5C MOV V2.16B, V8.16B
	0x03A1DE60 MOV V3.16B, V9.16B
	0x03A1DE64 MOV X3, X31
	0x03A1DE68 FMOV S13, 1
	0x03A1DE6C BL 0x3C1C294
	0x03A1DE70 ADD W23, W23, 0x1
	0x03A1DE74 CMP W23, 0x100
	0x03A1DE78 B.NE 0x3A1DCB4
	0x03A1DE7C ADD W20, W20, 0x1
	0x03A1DE80 CMP W20, 0x100
	0x03A1DE84 B.NE 0x3A1DC88
	0x03A1DE88 MOV X0, X19
	0x03A1DE8C MOV X1, X31
	0x03A1DE90 BL 0x3C1C540
	0x03A1DE94 MOV X0, X19
	0x03A1DE98 LDP X20, X19, [X31 + 0xB0]
	0x03A1DE9C LDP X22, X21, [X31 + 0xA0]
	0x03A1DEA0 LDP X24, X23, [X31 + 0x90]
	0x03A1DEA4 LDP X26, X25, [X31 + 0x80]
	0x03A1DEA8 LDP X28, X27, [X31 + 0x70]
	0x03A1DEAC LDP X29, X30, [X31 + 0x60]
	0x03A1DEB0 LDP D9, D8, [X31 + 0x50]
	0x03A1DEB4 LDP D11, D10, [X31 + 0x40]
	0x03A1DEB8 LDP D13, D12, [X31 + 0x30]
	0x03A1DEBC LDP D15, D14, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x9C5000
	009 Move [X31+8], X1
	010 Move X23, 0x734000
	011 Move W8, [X24+4062]
	012 Move X23, [X23+3200]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x734000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+4062], W8
	026 Move X0, [X23]
	027 Move X23, [X22+8]
	028 Move X22, [X22+16]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move X1, X23
	035 Move X2, X22
	036 Move X3, X21
	037 Move X4, X20
	038 Move X5, X19
	039 Move X6, X31
	040 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Return 

