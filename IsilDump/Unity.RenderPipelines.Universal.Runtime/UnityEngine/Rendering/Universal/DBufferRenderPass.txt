Type: UnityEngine.Rendering.Universal.DBufferRenderPass

Method: UnityEngine.Rendering.RTHandle[] get_dBufferColorHandles()

Disassembly:
	0x03A39750 STR X30, [X31 - 0x10]!
	0x03A39754 CBZ X1, 0x3A39764

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Void set_dBufferColorHandles(UnityEngine.Rendering.RTHandle[] value)

Disassembly:
	0x03A39758 LDR W0, [X1 + 0x34]
	0x03A3975C LDR X30, [X31], #0x10

ISIL:
	001 Move [X0+312], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_depthHandle()

Disassembly:
	0x03A39760 RET
	0x03A39764 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: System.Void set_depthHandle(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03A39768 SUB X31, X31, 0x80
	0x03A3976C STP X30, X27, [X31 + 0x30]

ISIL:
	001 Move [X0+320], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_dBufferDepth()

Disassembly:
	0x03A39770 STP X26, X25, [X31 + 0x40]
	0x03A39774 STP X24, X23, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Void .ctor(UnityEngine.Material dBufferClear, UnityEngine.Rendering.Universal.DBufferSettings settings, UnityEngine.Rendering.Universal.DecalDrawDBufferSystem drawSystem, System.Boolean decalLayers)

Disassembly:
	0x03A39778 STP X22, X21, [X31 + 0x60]
	0x03A3977C STP X20, X19, [X31 + 0x70]
	0x03A39780 ADRP X22, 0x9A9000
	0x03A39784 ADRP X21, 0x71A000
	0x03A39788 LDRB W8, [X22 + 0x119]
	0x03A3978C LDR X21, [X21 + 0xFF0]
	0x03A39790 MOV X20, X1
	0x03A39794 MOV X19, X0
	0x03A39798 TBNZ X8, 0x0, 0x3A39810
	0x03A3979C ADRP X0, 0x71B000
	0x03A397A0 LDR X0, [X0 + 0x70]
	0x03A397A4 BL 0x1C16CF4
	0x03A397A8 ADRP X0, 0x71B000
	0x03A397AC LDR X0, [X0 + 0x68]
	0x03A397B0 BL 0x1C16CF4
	0x03A397B4 ADRP X0, 0x71B000
	0x03A397B8 LDR X0, [X0 + 0x60]
	0x03A397BC BL 0x1C16CF4
	0x03A397C0 ADRP X0, 0x71B000
	0x03A397C4 LDR X0, [X0 + 0x78]
	0x03A397C8 BL 0x1C16CF4
	0x03A397CC ADRP X0, 0x717000
	0x03A397D0 LDR X0, [X0 + 0x598]
	0x03A397D4 BL 0x1C16CF4
	0x03A397D8 ADRP X0, 0x6E3000
	0x03A397DC LDR X0, [X0 + 0xD28]
	0x03A397E0 BL 0x1C16CF4
	0x03A397E4 ADRP X0, 0x71A000
	0x03A397E8 LDR X0, [X0 + 0xFF0]
	0x03A397EC BL 0x1C16CF4
	0x03A397F0 ADRP X0, 0x71C000
	0x03A397F4 LDR X0, [X0 + 0x730]
	0x03A397F8 BL 0x1C16CF4
	0x03A397FC ADRP X0, 0x71C000
	0x03A39800 LDR X0, [X0 + 0x738]
	0x03A39804 BL 0x1C16CF4
	0x03A39808 MOVZ W8, 0x1
	0x03A3980C STRB W8, [X22 + 0x119]
	0x03A39810 LDR X0, [X21]
	0x03A39814 ADRP X27, 0x717000
	0x03A39818 ADRP X26, 0x71C000
	0x03A3981C ADRP X25, 0x6E3000
	0x03A39820 LDR W8, [X0 + 0xE0]
	0x03A39824 LDR X27, [X27 + 0x598]
	0x03A39828 LDR X26, [X26 + 0x730]
	0x03A3982C LDR X25, [X25 + 0xD28]
	0x03A39830 CBNZ W8, 0x3A39838
	0x03A39834 BL 0x1C16DFC
	0x03A39838 ADRP X24, 0x71B000
	0x03A3983C ADRP X23, 0x71B000
	0x03A39840 ADRP X22, 0x71B000
	0x03A39844 ADRP X21, 0x71C000
	0x03A39848 LDR X24, [X24 + 0x78]
	0x03A3984C LDR X23, [X23 + 0x60]
	0x03A39850 LDR X22, [X22 + 0x68]
	0x03A39854 LDR X21, [X21 + 0x738]
	0x03A39858 MOV X0, X19
	0x03A3985C MOV X1, X31
	0x03A39860 BL 0x3A4225C
	0x03A39864 MOVZ W8, 0x12C
	0x03A39868 MOVZ W9, 0x1
	0x03A3986C STR W8, [X19 + 0x10]
	0x03A39870 STR W9, [X19 + 0xC8]
	0x03A39874 STR X20, [X19 + 0x108]
	0x03A39878 LDR X0, [X27]
	0x03A3987C BL 0x1C16F10
	0x03A39880 LDR X1, [X26]
	0x03A39884 MOV X2, X31
	0x03A39888 MOV X20, X0
	0x03A3988C BL 0x39B19AC
	0x03A39890 STR X20, [X19 + 0xF8]
	0x03A39894 LDR X0, [X25]
	0x03A39898 LDR W8, [X0 + 0xE0]
	0x03A3989C CBNZ W8, 0x3A398A4
	0x03A398A0 BL 0x1C16DFC
	0x03A398A4 MOV X0, X31
	0x03A398A8 BL 0x3C560AC
	0x03A398AC LDR X2, [X24]
	0x03A398B0 MOV X1, X0
	0x03A398B4 ADD X0, X31, 0x20
	0x03A398B8 STR W31, [X31 + 0x28]
	0x03A398BC STR X31, [X31 + 0x20]
	0x03A398C0 BL 0x2439504
	0x03A398C4 LDR X1, [X31 + 0x20]
	0x03A398C8 LDR W2, [X31 + 0x28]
	0x03A398CC ADD X0, X31, 0x8
	0x03A398D0 MOVN W3, 0x0
	0x03A398D4 MOVN W4, 0x0
	0x03A398D8 MOV W5, W31
	0x03A398DC MOV X6, X31
	0x03A398E0 STP X31, X31, [X31 + 0x8]
	0x03A398E4 STR X31, [X31 + 0x18]
	0x03A398E8 BL 0x3C53F40
	0x03A398EC LDR X8, [X31 + 0x18]
	0x03A398F0 LDUR V0, [X31 + 0x8]
	0x03A398F4 STR X8, [X19 + 0xF0]
	0x03A398F8 STR V0, [X19 + 0xE]
	0x03A398FC LDR X0, [X23]
	0x03A39900 BL 0x1C16F10
	0x03A39904 LDR X1, [X22]
	0x03A39908 MOV X20, X0
	0x03A3990C BL 0x305C9FC
	0x03A39910 STR X20, [X19 + 0x100]
	0x03A39914 LDR X1, [X21]
	0x03A39918 ADD X0, X31, 0x0
	0x03A3991C MOV X2, X31
	0x03A39920 STR W31, [X31]
	0x03A39924 BL 0x3C5A49C
	0x03A39928 CBZ X20, 0x3A399A4
	0x03A3992C ADRP X9, 0x71B000
	0x03A39930 LDR X9, [X9 + 0x70]
	0x03A39934 LDR W10, [X20 + 0x1C]
	0x03A39938 LDR W1, [X31]
	0x03A3993C LDR X8, [X20 + 0x10]
	0x03A39940 LDR X9, [X9]
	0x03A39944 ADD W10, W10, 0x1
	0x03A39948 STR W10, [X20 + 0x1C]
	0x03A3994C CBZ X8, 0x3A399A4
	0x03A39950 LDRSW X10, [X20 + 0x18]
	0x03A39954 LDR W11, [X8 + 0x18]
	0x03A39958 CMP W10, W11
	0x03A3995C B.CS 0x3A39974
	0x03A39960 ADD W9, W10, 0x1
	0x03A39964 ADD X8, X8, X10, 0x2, LSL
	0x03A39968 STR W9, [X20 + 0x18]
	0x03A3996C STR W1, [X8 + 0x20]
	0x03A39970 B 0x3A39988
	0x03A39974 LDR X8, [X9 + 0x20]
	0x03A39978 MOV X0, X20
	0x03A3997C LDR X8, [X8 + 0xC0]
	0x03A39980 LDR X2, [X8 + 0x70]
	0x03A39984 BL 0x305D1F8
	0x03A39988 LDP X20, X19, [X31 + 0x70]
	0x03A3998C LDP X22, X21, [X31 + 0x60]
	0x03A39990 LDP X24, X23, [X31 + 0x50]
	0x03A39994 LDP X26, X25, [X31 + 0x40]
	0x03A39998 LDP X30, X27, [X31 + 0x30]
	0x03A3999C ADD X31, X31, 0x80
	0x03A399A0 RET
	0x03A399A4 BL 0x1C16F20
	0x03A399A8 SUB X31, X31, 0x1F0
	0x03A399AC STR X29, [X31 + 0x1B0]
	0x03A399B0 STP X30, X23, [X31 + 0x1C0]
	0x03A399B4 STP X22, X21, [X31 + 0x1D0]
	0x03A399B8 STP X20, X19, [X31 + 0x1E0]
	0x03A399BC MRS X22, 0xC000
	0x03A399C0 LDR X8, [X22 + 0x28]
	0x03A399C4 ADRP X21, 0x9A9000
	0x03A399C8 ADRP X23, 0x717000
	0x03A399CC MOV X19, X2
	0x03A399D0 STR X8, [X31 + 0x1A8]
	0x03A399D4 STR X1, [X31 + 0x10]
	0x03A399D8 LDRB W8, [X21 + 0x11A]
	0x03A399DC LDR X23, [X23 + 0xC80]
	0x03A399E0 MOV X20, X0
	0x03A399E4 TBNZ X8, 0x0, 0x3A399FC
	0x03A399E8 ADRP X0, 0x717000
	0x03A399EC LDR X0, [X0 + 0xC80]
	0x03A399F0 BL 0x1C16CF4
	0x03A399F4 MOVZ W8, 0x1
	0x03A399F8 STRB W8, [X21 + 0x11A]
	0x03A399FC ADD X0, X31, 0xE0
	0x03A39A00 MOVZ W2, 0xC4
	0x03A39A04 MOV W1, W31
	0x03A39A08 BL 0x3EB1B10
	0x03A39A0C STRB W31, [X31 + 0x8]
	0x03A39A10 LDR W3, [X19 + 0x18C]
	0x03A39A14 LDR X1, [X20 + 0x100]
	0x03A39A18 ADD X8, X31, 0x18
	0x03A39A1C MOV X0, X20
	0x03A39A20 MOV X2, X19
	0x03A39A24 MOV X4, X31
	0x03A39A28 BL 0x3A42FD4
	0x03A39A2C ADD X0, X31, 0xE0
	0x03A39A30 ADD X1, X31, 0x18
	0x03A39A34 MOVZ W2, 0xC4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X25, 0x9AA000
	015 Move X24, 0x71B000
	016 Move W8, [X25+274]
	017 Move X24, [X24+4080]
	018 Move W23, W4
	019 Move X22, X3
	020 Move X20, X2
	021 Move X21, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {62}
	027 Move X0, 0x71C000
	028 Move X0, [X0+112]
	029 Call 0x1C17CF4
	030 Move X0, 0x71C000
	031 Move X0, [X0+104]
	032 Call 0x1C17CF4
	033 Move X0, 0x71C000
	034 Move X0, [X0+96]
	035 Call 0x1C17CF4
	036 Move X0, 0x71C000
	037 Move X0, [X0+120]
	038 Call 0x1C17CF4
	039 Move X0, 0x718000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x71A000
	043 Move X0, [X0+3888]
	044 Call 0x1C17CF4
	045 Move X0, 0x6E4000
	046 Move X0, [X0+3368]
	047 Call 0x1C17CF4
	048 Move X0, 0x71B000
	049 Move X0, [X0+4080]
	050 Call 0x1C17CF4
	051 Move X0, 0x71D000
	052 Move X0, [X0+1712]
	053 Call 0x1C17CF4
	054 Move X0, 0x71D000
	055 Move X0, [X0+1720]
	056 Call 0x1C17CF4
	057 Move X0, 0x71D000
	058 Move X0, [X0+1728]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X25+274], W8
	062 Move X0, [X24]
	063 Move X25, 0x718000
	064 Move X26, 0x71D000
	065 Move X29, 0x71D000
	066 Move X28, 0x6E4000
	067 Move X25, [X25+1432]
	068 Move W8, [X0+224]
	069 Move X26, [X26+1712]
	070 Move X29, [X29+1720]
	071 Move X28, [X28+3368]
	072 And W24, W23, 1
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X27, 0x71C000
	077 Move X23, 0x71C000
	078 Move X27, [X27+120]
	079 Move X23, [X23+96]
	080 Move X0, X19
	081 Move X1, X31
	082 Call ScriptableRenderPass..ctor, X0
	083 Move W8, 201
	084 Move W9, 2
	085 Move [X19+224], X22
	086 Move [X19+232], X20
	087 Move [X19+16], W8
	088 Move [X19+200], W9
	089 Move [X19+240], X21
	090 Move X0, [X25]
	091 Call 0x1C17F10
	092 Move X1, [X26]
	093 Move X2, X31
	094 Move X21, X0
	095 Call ProfilingSampler..ctor, X0, X1
	096 Move [X19+280], X21
	097 Move X0, [X25]
	098 Call 0x1C17F10
	099 Move X1, [X29]
	100 Move X2, X31
	101 Move X21, X0
	102 Call ProfilingSampler..ctor, X0, X1
	103 Move [X19+288], X21
	104 Move X0, [X28]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X31
	110 Call RenderQueueRange.get_opaque
	111 Move X2, [X27]
	112 Move X1, X0
	113 Add X0, X31, 32
	114 Move [X31+40], W31
	115 Move [X31+32], X31
	116 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	117 Move X1, [X31+32]
	118 Move W2, [X31+40]
	119 Add X0, X31, 8
	120 Move TEMP, 0
	121 Not TEMP
	122 Move W3, TEMP
	123 Move TEMP, 0
	124 Not TEMP
	125 Move W4, TEMP
	126 Move W5, W31
	127 Move X6, X31
	128 Move [X31+8], X31
	129 Move [X31+16], X31
	130 Move [X31+24], X31
	131 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	132 Move X8, [X31+24]
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Add X9, X19, 248
	135 Move [X9+16], X8
	136 Move [X19+248], V0
	137 Move [X19+296], W24
	138 Move X0, [X23]
	139 Call 0x1C17F10
	140 Move X8, 0x71C000
	141 Move X8, [X8+104]
	142 Move X21, X0
	143 Move X1, [X8]
	144 Call List`1<ShaderTagId>..ctor, X0
	145 Move [X19+272], X21
	146 Move X8, 0x71D000
	147 Move X8, [X8+1728]
	148 Add X0, X31, 0
	149 Move X2, X31
	150 Move [X31], W31
	151 Move X1, [X8]
	152 Call ShaderTagId..ctor, X0, X1
	153 Compare X21, 0
	154 JumpIfEqual {200}
	155 Move X9, 0x71C000
	156 Move X9, [X9+112]
	157 Move W10, [X21+28]
	158 Move W1, [X31]
	159 Move X8, [X21+16]
	160 Move X9, [X9]
	161 Add W10, W10, 1
	162 Move [X21+28], W10
	163 Compare X8, 0
	164 JumpIfEqual {200}
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Move W11, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add W9, W10, 1
	169 Add X8, X8, X10
	170 Move [X21+24], W9
	171 Move [X8+32], W1
	172 Move X8, [X9+32]
	173 Move X0, X21
	174 Move X8, [X8+192]
	175 Move X2, [X8+112]
	176 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	177 Compare X20, 0
	178 JumpIfEqual {200}
	179 Move X8, 0x71A000
	180 Move X8, [X8+3888]
	181 Move W9, [X20+16]
	182 Move X0, [X8]
	183 Add W1, W9, 1
	184 Call 0x1C17D6C
	185 Move [X19+312], X0
	186 Move X20, [X31+128]
	187 Move X19, [X31+136]
	188 Move X22, [X31+112]
	189 Move X21, [X31+120]
	190 Move X24, [X31+96]
	191 Move X23, [X31+104]
	192 Move X26, [X31+80]
	193 Move X25, [X31+88]
	194 Move X28, [X31+64]
	195 Move X27, [X31+72]
	196 Move X29, [X31+48]
	197 Move X30, [X31+56]
	198 Add X31, X31, 144
	199 Return 
	200 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03A39A38 BL 0x3EB1AC0
	0x03A39A3C LDR X21, [X19]
	0x03A39A40 LDR X2, [X20 + 0xF8]
	0x03A39A44 ADD X0, X31, 0x8
	0x03A39A48 MOV X3, X31
	0x03A39A4C MOV X1, X21
	0x03A39A50 BL 0x39B1DB0
	0x03A39A54 LDR X0, [X23]
	0x03A39A58 LDR W8, [X0 + 0xE0]
	0x03A39A5C CBNZ W8, 0x3A39A64
	0x03A39A60 BL 0x1C16DFC
	0x03A39A64 ADD X0, X31, 0x10
	0x03A39A68 MOV X1, X21
	0x03A39A6C MOV X2, X31
	0x03A39A70 BL 0x3C58FE4
	0x03A39A74 CBZ X21, 0x3A39AE4
	0x03A39A78 MOV X0, X21
	0x03A39A7C MOV X1, X31
	0x03A39A80 BL 0x3C4C310
	0x03A39A84 LDR X0, [X20 + 0x108]
	0x03A39A88 CBZ X0, 0x3A39AE8
	0x03A39A8C MOV X1, X21
	0x03A39A90 MOV X2, X31
	0x03A39A94 BL 0x3A3BB9C
	0x03A39A98 LDP X1, X2, [X19 + 0x8]
	0x03A39A9C ADD X4, X20, 0xE0
	0x03A39AA0 ADD X0, X31, 0x10
	0x03A39AA4 ADD X3, X31, 0xE0
	0x03A39AA8 MOV X5, X31
	0x03A39AAC BL 0x3C58AC8
	0x03A39AB0 ADD X0, X31, 0x8
	0x03A39AB4 MOV X1, X31
	0x03A39AB8 BL 0x39B1DB4
	0x03A39ABC LDR X8, [X22 + 0x28]
	0x03A39AC0 LDR X9, [X31 + 0x1A8]
	0x03A39AC4 CMP X8, X9
	0x03A39AC8 B.NE 0x3A39AEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+304]
	008 Compare X0, 0
	009 JumpIfEqual {12}
	010 Move X1, X31
	011 Call RTHandle.Release, X0
	012 Move X20, [X19+312]
	013 Compare X20, 0
	014 JumpIfEqual {42}
	015 Move X8, [X20+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X19, X31
	018 Move X21, X31
	019 And X8, X8, 0
	020 Add X22, X20, 32
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, [X22]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Compare X8, 0
	026 JumpIfEqual {32}
	027 Compare X19, 0
	028 JumpIfEqual {42}
	029 Move X0, X19
	030 Move X1, X31
	031 Call RTHandle.Release, X0
	032 Move W8, [X20+24]
	033 Add X21, X21, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Call 0x1C17F28
	042 Call 0x1C17F20

Method: System.Void Setup(in UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A39ACC LDP X20, X19, [X31 + 0x1E0]
	0x03A39AD0 LDP X22, X21, [X31 + 0x1D0]
	0x03A39AD4 LDP X30, X23, [X31 + 0x1C0]
	0x03A39AD8 LDR X29, [X31 + 0x1B0]
	0x03A39ADC ADD X31, X31, 0x1F0
	0x03A39AE0 RET
	0x03A39AE4 BL 0x1C16F20
	0x03A39AE8 BL 0x1C16F20
	0x03A39AEC BL 0x3EB1B20
	0x03A39AF0 B 0x3A39AFC
	0x03A39AF4 B 0x3A39AFC
	0x03A39AF8 B 0x3A39AFC
	0x03A39AFC MOV X19, X0
	0x03A39B00 CMP W1, 0x1
	0x03A39B04 B.NE 0x3A39B30
	0x03A39B08 MOV X0, X19
	0x03A39B0C BL 0x3EB1AD0
	0x03A39B10 LDR X20, [X0]
	0x03A39B14 BL 0x3EB1AE0
	0x03A39B18 ADD X0, X31, 0x8
	0x03A39B1C MOV X1, X31
	0x03A39B20 BL 0x39B1DB4
	0x03A39B24 CBZ X20, 0x3A39ABC
	0x03A39B28 MOV X0, X20
	0x03A39B2C BL 0x1C16F18
	0x03A39B30 MOV X20, X31
	0x03A39B34 B 0x3A39B3C
	0x03A39B38 MOV X19, X0
	0x03A39B3C ADD X0, X31, 0x8
	0x03A39B40 MOV X1, X31
	0x03A39B44 BL 0x39B1DB4
	0x03A39B48 CBNZ X20, 0x3A39B54
	0x03A39B4C MOV X0, X19
	0x03A39B50 BL 0x1D2C690
	0x03A39B54 MOV X0, X20
	0x03A39B58 BL 0x1C16F18
	0x03A39B5C BL 0x1990590
	0x03A39B60 STP X30, X23, [X31 - 0x30]!
	0x03A39B64 STP X22, X21, [X31 + 0x10]
	0x03A39B68 STP X20, X19, [X31 + 0x20]
	0x03A39B6C ADRP X22, 0x9A9000
	0x03A39B70 ADRP X23, 0x71C000
	0x03A39B74 LDRB W8, [X22 + 0x11B]
	0x03A39B78 LDR X23, [X23 + 0x740]
	0x03A39B7C MOV W19, W2
	0x03A39B80 MOV X21, X1
	0x03A39B84 MOV X20, X0
	0x03A39B88 TBNZ X8, 0x0, 0x3A39BA0
	0x03A39B8C ADRP X0, 0x71C000
	0x03A39B90 LDR X0, [X0 + 0x740]
	0x03A39B94 BL 0x1C16CF4
	0x03A39B98 MOVZ W8, 0x1
	0x03A39B9C STRB W8, [X22 + 0x11B]
	0x03A39BA0 LDR X1, [X23]
	0x03A39BA4 MOV X0, X20
	0x03A39BA8 MOV X2, X21
	0x03A39BAC MOV X3, X31
	0x03A39BB0 BL 0x3A3BAC0
	0x03A39BB4 STR W19, [X20 + 0x40]
	0x03A39BB8 LDP X20, X19, [X31 + 0x20]
	0x03A39BBC LDP X22, X21, [X31 + 0x10]
	0x03A39BC0 LDP X30, X23, [X31], #0x30
	0x03A39BC4 RET
	0x03A39BC8 STR X30, [X31 - 0x10]!
	0x03A39BCC LDR W8, [X0 + 0x40]
	0x03A39BD0 CMP W8, 0x3
	0x03A39BD4 B.EQ 0x3A39C00
	0x03A39BD8 CMP W8, 0x2
	0x03A39BDC B.EQ 0x3A39C0C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x9AA000
	009 Move X22, 0x71D000
	010 Move W8, [X21+275]
	011 Move X22, [X22+1736]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x71D000
	019 Move X0, [X0+1736]
	020 Call 0x1C17CF4
	021 Move X0, 0x71C000
	022 Move X0, [X0+16]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+275], W8
	026 Move X23, 0x71C000
	027 Add X8, X19, 216
	028 Move X23, [X23+16]
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move W8, [X8+48]
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Add X0, X31, 0
	034 Move W1, W31
	035 Move X2, X31
	036 Move [X31+16], V1
	037 Move [X31+24], V0
	038 Move [X31+48], W8
	039 Move [X31], V2
	040 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	041 Move W8, [X19+244]
	042 Move X0, [X22]
	043 Move W9, 1
	044 Move [X31+8], W9
	045 Move [X31+28], W8
	046 Move W8, [X0+224]
	047 Add X21, X20, 304
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X22]
	052 Move X8, [X23]
	053 Move X9, [X0+184]
	054 Move W10, [X8+224]
	055 Move X22, [X9+8]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Add X1, X31, 0
	061 Move S0, W31
	062 Move W5, 1
	063 Move X0, X21
	064 Move W2, W31
	065 Move W3, W31
	066 Move W4, W31
	067 Move X6, X22
	068 Move X7, X31
	069 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	070 Move X2, [X20+304]
	071 Move X0, X20
	072 Move X1, X19
	073 Call DBufferRenderPass.Setup, X0, X1, X2
	074 Move X20, [X31+96]
	075 Move X19, [X31+104]
	076 Move X22, [X31+80]
	077 Move X21, [X31+88]
	078 Move X30, [X31+64]
	079 Move X23, [X31+72]
	080 Add X31, X31, 112
	081 Return 

Method: System.Void Setup(in UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.RTHandle depthTextureHandle)

Disassembly:
	0x03A39BE0 CMP W8, 0x1
	0x03A39BE4 B.NE 0x3A39C18
	0x03A39BE8 CBZ X1, 0x3A39C34
	0x03A39BEC LDR W8, [X1 + 0x30]
	0x03A39BF0 ADDS W31, W8, 0x1
	0x03A39BF4 B.EQ 0x3A39C20
	0x03A39BF8 MOVN W0, 0x0
	0x03A39BFC B 0x3A39C2C
	0x03A39C00 CBZ X1, 0x3A39C34
	0x03A39C04 LDR W8, [X1 + 0x3C]
	0x03A39C08 B 0x3A39C24
	0x03A39C0C CBZ X1, 0x3A39C34
	0x03A39C10 LDR W8, [X1 + 0x38]
	0x03A39C14 B 0x3A39C24
	0x03A39C18 MOV W0, W31
	0x03A39C1C B 0x3A39C2C
	0x03A39C20 LDR W8, [X1 + 0x34]
	0x03A39C24 ADDS W31, W8, 0x1
	0x03A39C28 CSINV W0, W31, W31, EQ
	0x03A39C2C LDR X30, [X31], #0x10
	0x03A39C30 RET
	0x03A39C34 BL 0x1C16F20
	0x03A39C38 STR X30, [X31 - 0x10]!
	0x03A39C3C LDR X0, [X0 + 0x10]
	0x03A39C40 CBZ X0, 0x3A39C50
	0x03A39C44 MOV X1, X31
	0x03A39C48 LDR X30, [X31], #0x10
	0x03A39C4C B 0x3A3D494
	0x03A39C50 BL 0x1C16F20
	0x03A39C54 SUB X31, X31, 0x80
	0x03A39C58 STR X30, [X31 + 0x30]
	0x03A39C5C STP X26, X25, [X31 + 0x40]
	0x03A39C60 STP X24, X23, [X31 + 0x50]
	0x03A39C64 STP X22, X21, [X31 + 0x60]
	0x03A39C68 STP X20, X19, [X31 + 0x70]
	0x03A39C6C ADRP X21, 0x9A9000
	0x03A39C70 ADRP X20, 0x71A000
	0x03A39C74 LDRB W8, [X21 + 0x11C]
	0x03A39C78 LDR X20, [X20 + 0xFF0]
	0x03A39C7C MOV X19, X0
	0x03A39C80 TBNZ X8, 0x0, 0x3A39CF8
	0x03A39C84 ADRP X0, 0x71B000
	0x03A39C88 LDR X0, [X0 + 0x70]
	0x03A39C8C BL 0x1C16CF4
	0x03A39C90 ADRP X0, 0x71B000
	0x03A39C94 LDR X0, [X0 + 0x68]
	0x03A39C98 BL 0x1C16CF4
	0x03A39C9C ADRP X0, 0x71B000
	0x03A39CA0 LDR X0, [X0 + 0x60]
	0x03A39CA4 BL 0x1C16CF4
	0x03A39CA8 ADRP X0, 0x71B000
	0x03A39CAC LDR X0, [X0 + 0x78]
	0x03A39CB0 BL 0x1C16CF4
	0x03A39CB4 ADRP X0, 0x717000
	0x03A39CB8 LDR X0, [X0 + 0x598]
	0x03A39CBC BL 0x1C16CF4
	0x03A39CC0 ADRP X0, 0x6E3000
	0x03A39CC4 LDR X0, [X0 + 0xD28]
	0x03A39CC8 BL 0x1C16CF4
	0x03A39CCC ADRP X0, 0x71A000
	0x03A39CD0 LDR X0, [X0 + 0xFF0]
	0x03A39CD4 BL 0x1C16CF4
	0x03A39CD8 ADRP X0, 0x71C000
	0x03A39CDC LDR X0, [X0 + 0x748]
	0x03A39CE0 BL 0x1C16CF4
	0x03A39CE4 ADRP X0, 0x71C000
	0x03A39CE8 LDR X0, [X0 + 0x750]
	0x03A39CEC BL 0x1C16CF4
	0x03A39CF0 MOVZ W8, 0x1
	0x03A39CF4 STRB W8, [X21 + 0x11C]
	0x03A39CF8 LDR X0, [X20]
	0x03A39CFC ADRP X26, 0x717000
	0x03A39D00 ADRP X20, 0x71C000
	0x03A39D04 ADRP X25, 0x6E3000
	0x03A39D08 LDR W8, [X0 + 0xE0]
	0x03A39D0C LDR X26, [X26 + 0x598]
	0x03A39D10 LDR X20, [X20 + 0x748]
	0x03A39D14 LDR X25, [X25 + 0xD28]
	0x03A39D18 CBNZ W8, 0x3A39D20
	0x03A39D1C BL 0x1C16DFC
	0x03A39D20 ADRP X24, 0x71B000
	0x03A39D24 ADRP X23, 0x71B000
	0x03A39D28 ADRP X22, 0x71B000
	0x03A39D2C ADRP X21, 0x71C000
	0x03A39D30 LDR X24, [X24 + 0x78]
	0x03A39D34 LDR X23, [X23 + 0x60]
	0x03A39D38 LDR X22, [X22 + 0x68]
	0x03A39D3C LDR X21, [X21 + 0x750]
	0x03A39D40 MOV X0, X19
	0x03A39D44 MOV X1, X31
	0x03A39D48 BL 0x3A4225C
	0x03A39D4C MOVZ W8, 0x12C
	0x03A39D50 MOVZ W9, 0x1
	0x03A39D54 STR W8, [X19 + 0x10]
	0x03A39D58 STR W9, [X19 + 0xC8]
	0x03A39D5C LDR X0, [X26]
	0x03A39D60 BL 0x1C16F10
	0x03A39D64 LDR X1, [X20]
	0x03A39D68 MOV X2, X31
	0x03A39D6C MOV X20, X0
	0x03A39D70 BL 0x39B19AC
	0x03A39D74 STR X20, [X19 + 0x100]
	0x03A39D78 LDR X0, [X25]
	0x03A39D7C LDR W8, [X0 + 0xE0]
	0x03A39D80 CBNZ W8, 0x3A39D88
	0x03A39D84 BL 0x1C16DFC
	0x03A39D88 MOV X0, X31
	0x03A39D8C BL 0x3C560AC
	0x03A39D90 LDR X2, [X24]
	0x03A39D94 MOV X1, X0
	0x03A39D98 ADD X0, X31, 0x20
	0x03A39D9C STR W31, [X31 + 0x28]
	0x03A39DA0 STR X31, [X31 + 0x20]
	0x03A39DA4 BL 0x2439504
	0x03A39DA8 LDR X1, [X31 + 0x20]
	0x03A39DAC LDR W2, [X31 + 0x28]
	0x03A39DB0 ADD X0, X31, 0x8
	0x03A39DB4 MOVN W3, 0x0
	0x03A39DB8 MOVN W4, 0x0
	0x03A39DBC MOV W5, W31
	0x03A39DC0 MOV X6, X31
	0x03A39DC4 STP X31, X31, [X31 + 0x8]
	0x03A39DC8 STR X31, [X31 + 0x18]
	0x03A39DCC BL 0x3C53F40
	0x03A39DD0 LDR X8, [X31 + 0x18]
	0x03A39DD4 LDUR V0, [X31 + 0x8]
	0x03A39DD8 STR X8, [X19 + 0xF0]
	0x03A39DDC STR V0, [X19 + 0xE]
	0x03A39DE0 LDR X0, [X23]
	0x03A39DE4 BL 0x1C16F10
	0x03A39DE8 LDR X1, [X22]
	0x03A39DEC MOV X20, X0
	0x03A39DF0 BL 0x305C9FC
	0x03A39DF4 STR X20, [X19 + 0xF8]
	0x03A39DF8 LDR X1, [X21]
	0x03A39DFC ADD X0, X31, 0x38
	0x03A39E00 MOV X2, X31
	0x03A39E04 STR W31, [X31 + 0x38]
	0x03A39E08 BL 0x3C5A49C
	0x03A39E0C CBZ X20, 0x3A39E88
	0x03A39E10 ADRP X9, 0x71B000
	0x03A39E14 LDR X9, [X9 + 0x70]
	0x03A39E18 LDR W10, [X20 + 0x1C]
	0x03A39E1C LDR W1, [X31 + 0x38]
	0x03A39E20 LDR X8, [X20 + 0x10]
	0x03A39E24 LDR X9, [X9]
	0x03A39E28 ADD W10, W10, 0x1
	0x03A39E2C STR W10, [X20 + 0x1C]
	0x03A39E30 CBZ X8, 0x3A39E88
	0x03A39E34 LDRSW X10, [X20 + 0x18]
	0x03A39E38 LDR W11, [X8 + 0x18]
	0x03A39E3C CMP W10, W11
	0x03A39E40 B.CS 0x3A39E58
	0x03A39E44 ADD W9, W10, 0x1
	0x03A39E48 ADD X8, X8, X10, 0x2, LSL
	0x03A39E4C STR W9, [X20 + 0x18]
	0x03A39E50 STR W1, [X8 + 0x20]
	0x03A39E54 B 0x3A39E6C
	0x03A39E58 LDR X8, [X9 + 0x20]
	0x03A39E5C MOV X0, X20
	0x03A39E60 LDR X8, [X8 + 0xC0]
	0x03A39E64 LDR X2, [X8 + 0x70]
	0x03A39E68 BL 0x305D1F8
	0x03A39E6C LDP X20, X19, [X31 + 0x70]
	0x03A39E70 LDP X22, X21, [X31 + 0x60]
	0x03A39E74 LDP X24, X23, [X31 + 0x50]
	0x03A39E78 LDP X26, X25, [X31 + 0x40]
	0x03A39E7C LDR X30, [X31 + 0x30]
	0x03A39E80 ADD X31, X31, 0x80
	0x03A39E84 RET
	0x03A39E88 BL 0x1C16F20
	0x03A39E8C SUB X31, X31, 0x1F0
	0x03A39E90 STR X29, [X31 + 0x1B0]
	0x03A39E94 STP X30, X23, [X31 + 0x1C0]
	0x03A39E98 STP X22, X21, [X31 + 0x1D0]
	0x03A39E9C STP X20, X19, [X31 + 0x1E0]
	0x03A39EA0 MRS X22, 0xC000
	0x03A39EA4 LDR X8, [X22 + 0x28]
	0x03A39EA8 ADRP X21, 0x9A9000
	0x03A39EAC ADRP X23, 0x717000
	0x03A39EB0 MOV X19, X2
	0x03A39EB4 STR X8, [X31 + 0x1A8]
	0x03A39EB8 STR X1, [X31 + 0x10]
	0x03A39EBC LDRB W8, [X21 + 0x11D]
	0x03A39EC0 LDR X23, [X23 + 0xC80]
	0x03A39EC4 MOV X20, X0
	0x03A39EC8 TBNZ X8, 0x0, 0x3A39EE0
	0x03A39ECC ADRP X0, 0x717000
	0x03A39ED0 LDR X0, [X0 + 0xC80]
	0x03A39ED4 BL 0x1C16CF4
	0x03A39ED8 MOVZ W8, 0x1
	0x03A39EDC STRB W8, [X21 + 0x11D]
	0x03A39EE0 ADD X0, X31, 0xE0
	0x03A39EE4 MOVZ W2, 0xC4
	0x03A39EE8 MOV W1, W31
	0x03A39EEC BL 0x3EB1B10
	0x03A39EF0 STRB W31, [X31 + 0x8]
	0x03A39EF4 LDR W3, [X19 + 0x18C]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X25
	005 Move [X31+224], X24
	006 Move [X31+232], X23
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move X22, 0x9AA000
	012 Move W8, [X22+276]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x71D000
	021 Move X0, [X0+1736]
	022 Call 0x1C17CF4
	023 Move X0, 0x71C000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+276], W8
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X31+112], W31
	030 Move [X31+48], W31
	031 Add X22, X21, 216
	032 Move [X31+80], V0
	033 Move [X31+88], V0
	034 Move [X31+4], V0
	035 Move [X31+16], V0
	036 Move [X31+24], V0
	037 Move [X31], V0
	038 Move W8, [X22+48]
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move X0, X31
	043 Move [X31+176], W8
	044 Move [X31+144], V1
	045 Move [X31+152], V0
	046 Move [X31+8], V2
	047 Call QualitySettings.get_activeColorSpace
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 8
	050 Move W9, 4
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Add X0, X31, 128
	053 Move X2, X31
	054 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	055 Add X0, X31, 128
	056 Move W1, W31
	057 Move X2, X31
	058 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	059 Move W8, 1
	060 Move [X31+136], W8
	061 Move X25, [X20+312]
	062 Compare X25, 0
	063 JumpIfEqual {225}
	064 Move X23, 0x71D000
	065 Move X23, [X23+1736]
	066 Move X0, [X23]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X23]
	072 Move X8, [X0+184]
	073 Move X8, [X8]
	074 Compare X8, 0
	075 JumpIfEqual {225}
	076 Move W9, [X8+24]
	077 Compare W9, 0
	078 JumpIfEqual {226}
	079 Move X24, 0x71C000
	080 Move X24, [X24+16]
	081 Move X21, [X8+32]
	082 Move X0, [X24]
	083 Move W9, [X0+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move W8, [X25+24]
	088 Compare W8, 0
	089 JumpIfEqual {226}
	090 Add X0, X25, 32
	091 Add X1, X31, 128
	092 Move S0, W31
	093 Move W5, 1
	094 Move W2, W31
	095 Move W3, W31
	096 Move W4, W31
	097 Move X6, X21
	098 Move X7, X31
	099 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	100 Move X8, [X20+232]
	101 Compare X8, 0
	102 JumpIfEqual {225}
	103 Move W9, [X8+16]
	104 Subtract W9, W9, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move W8, [X22+48]
	107 Move V1, [X22+16]
	108 Move V0, [X22+32]
	109 Move V2, [X22]
	110 Add X0, X31, 64
	111 Move W1, 8
	112 Move X2, X31
	113 Move [X31+112], W8
	114 Move [X31+80], V1
	115 Move [X31+88], V0
	116 Move [X31+4], V2
	117 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	118 Add X0, X31, 64
	119 Move W1, W31
	120 Move X2, X31
	121 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	122 Move W8, 1
	123 Move [X31+72], W8
	124 Move X25, [X20+312]
	125 Compare X25, 0
	126 JumpIfEqual {225}
	127 Move X0, [X23]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X23]
	133 Move X8, [X0+184]
	134 Move X8, [X8]
	135 Compare X8, 0
	136 JumpIfEqual {225}
	137 Move W9, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X24]
	140 Move X21, [X8+40]
	141 Move W9, [X0+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move W8, [X25+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X0, X25, 40
	148 Add X1, X31, 64
	149 Move S0, W31
	150 Move W5, 1
	151 Move W2, W31
	152 Move W3, W31
	153 Move W4, W31
	154 Move X6, X21
	155 Move X7, X31
	156 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	157 Move X8, [X20+232]
	158 Compare X8, 0
	159 JumpIfEqual {225}
	160 Move W8, [X8+16]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W8, [X22+48]
	163 Move V1, [X22+16]
	164 Move V0, [X22+32]
	165 Move V2, [X22]
	166 Add X0, X31, 0
	167 Move W1, 8
	168 Move X2, X31
	169 Move [X31+48], W8
	170 Move [X31+16], V1
	171 Move [X31+24], V0
	172 Move [X31], V2
	173 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	174 Add X0, X31, 0
	175 Move W1, W31
	176 Move X2, X31
	177 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	178 Move W8, 1
	179 Move [X31+8], W8
	180 Move X22, [X20+312]
	181 Compare X22, 0
	182 JumpIfEqual {225}
	183 Move X0, [X23]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {189}
	187 Call 0x1C17DFC
	188 Move X0, [X23]
	189 Move X8, [X0+184]
	190 Move X8, [X8]
	191 Compare X8, 0
	192 JumpIfEqual {225}
	193 Move W9, [X8+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, [X24]
	196 Move X21, [X8+48]
	197 Move W9, [X0+224]
	198 Compare W9, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move W8, [X22+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X0, X22, 48
	204 Add X1, X31, 0
	205 Move S0, W31
	206 Move W5, 1
	207 Move W2, W31
	208 Move W3, W31
	209 Move W4, W31
	210 Move X6, X21
	211 Move X7, X31
	212 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	213 Move [X20+320], X19
	214 Move X20, [X31+256]
	215 Move X19, [X31+264]
	216 Move X22, [X31+240]
	217 Move X21, [X31+248]
	218 Move X24, [X31+224]
	219 Move X23, [X31+232]
	220 Move X30, [X31+208]
	221 Move X25, [X31+216]
	222 Move X29, [X31+192]
	223 Add X31, X31, 272
	224 Return 
	225 Call 0x1C17F20
	226 Call 0x1C17F28

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A39EF8 LDR X1, [X20 + 0xF8]
	0x03A39EFC ADD X8, X31, 0x18
	0x03A39F00 MOV X0, X20

ISIL:
	001 Move X1, [X0+312]
	002 Move X2, [X0+320]
	003 Move X3, X31
	004 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	005 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A39F04 MOV X2, X19
	0x03A39F08 MOV X4, X31
	0x03A39F0C BL 0x3A42FD4
	0x03A39F10 ADD X0, X31, 0xE0
	0x03A39F14 ADD X1, X31, 0x18
	0x03A39F18 MOVZ W2, 0xC4
	0x03A39F1C BL 0x3EB1AC0
	0x03A39F20 LDR X21, [X19]
	0x03A39F24 LDR X2, [X20 + 0x100]
	0x03A39F28 ADD X0, X31, 0x8
	0x03A39F2C MOV X3, X31
	0x03A39F30 MOV X1, X21
	0x03A39F34 BL 0x39B1DB0
	0x03A39F38 LDR X0, [X23]
	0x03A39F3C LDR W8, [X0 + 0xE0]
	0x03A39F40 CBNZ W8, 0x3A39F48
	0x03A39F44 BL 0x1C16DFC
	0x03A39F48 ADD X0, X31, 0x10
	0x03A39F4C MOV X1, X21
	0x03A39F50 MOV X2, X31
	0x03A39F54 BL 0x3C58FE4
	0x03A39F58 CBZ X21, 0x3A39FB4
	0x03A39F5C MOV X0, X21
	0x03A39F60 MOV X1, X31
	0x03A39F64 BL 0x3C4C310
	0x03A39F68 LDP X1, X2, [X19 + 0x8]
	0x03A39F6C ADD X4, X20, 0xE0
	0x03A39F70 ADD X0, X31, 0x10
	0x03A39F74 ADD X3, X31, 0xE0
	0x03A39F78 MOV X5, X31
	0x03A39F7C BL 0x3C58AC8
	0x03A39F80 ADD X0, X31, 0x8
	0x03A39F84 MOV X1, X31
	0x03A39F88 BL 0x39B1DB4
	0x03A39F8C LDR X8, [X22 + 0x28]
	0x03A39F90 LDR X9, [X31 + 0x1A8]
	0x03A39F94 CMP X8, X9
	0x03A39F98 B.NE 0x3A39FB8
	0x03A39F9C LDP X20, X19, [X31 + 0x1E0]
	0x03A39FA0 LDP X22, X21, [X31 + 0x1D0]
	0x03A39FA4 LDP X30, X23, [X31 + 0x1C0]
	0x03A39FA8 LDR X29, [X31 + 0x1B0]
	0x03A39FAC ADD X31, X31, 0x1F0
	0x03A39FB0 RET
	0x03A39FB4 BL 0x1C16F20
	0x03A39FB8 BL 0x3EB1B20
	0x03A39FBC B 0x3A39FC4
	0x03A39FC0 B 0x3A39FC4
	0x03A39FC4 MOV X19, X0
	0x03A39FC8 CMP W1, 0x1
	0x03A39FCC B.NE 0x3A39FF8
	0x03A39FD0 MOV X0, X19
	0x03A39FD4 BL 0x3EB1AD0
	0x03A39FD8 LDR X20, [X0]
	0x03A39FDC BL 0x3EB1AE0
	0x03A39FE0 ADD X0, X31, 0x8
	0x03A39FE4 MOV X1, X31
	0x03A39FE8 BL 0x39B1DB4
	0x03A39FEC CBZ X20, 0x3A39F8C
	0x03A39FF0 MOV X0, X20
	0x03A39FF4 BL 0x1C16F18
	0x03A39FF8 MOV X20, X31
	0x03A39FFC B 0x3A3A004
	0x03A3A000 MOV X19, X0
	0x03A3A004 ADD X0, X31, 0x8
	0x03A3A008 MOV X1, X31
	0x03A3A00C BL 0x39B1DB4
	0x03A3A010 CBNZ X20, 0x3A3A01C
	0x03A3A014 MOV X0, X19
	0x03A3A018 BL 0x1D2C690
	0x03A3A01C MOV X0, X20
	0x03A3A020 BL 0x1C16F18
	0x03A3A024 BL 0x1990590
	0x03A3A028 STR X30, [X31 - 0x30]!
	0x03A3A02C STP X22, X21, [X31 + 0x10]
	0x03A3A030 STP X20, X19, [X31 + 0x20]
	0x03A3A034 ADRP X20, 0x9A8000
	0x03A3A038 ADRP X21, 0x71B000
	0x03A3A03C LDRB W8, [X20 + 0x11E]
	0x03A3A040 LDR X21, [X21 + 0x758]
	0x03A3A044 MOV X19, X0
	0x03A3A048 TBNZ X8, 0x0, 0x3A3A06C
	0x03A3A04C ADRP X0, 0x71B000
	0x03A3A050 LDR X0, [X0 + 0x760]
	0x03A3A054 BL 0x1C16CF4
	0x03A3A058 ADRP X0, 0x71B000
	0x03A3A05C LDR X0, [X0 + 0x758]
	0x03A3A060 BL 0x1C16CF4
	0x03A3A064 MOVZ W8, 0x1
	0x03A3A068 STRB W8, [X20 + 0x11E]
	0x03A3A06C LDR X8, [X21]
	0x03A3A070 ADRP X22, 0x71B000
	0x03A3A074 LDR X8, [X8 + 0xB8]
	0x03A3A078 LDR X20, [X8]
	0x03A3A07C LDR X22, [X22 + 0x760]
	0x03A3A080 MOV X0, X20
	0x03A3A084 MOV X1, X19
	0x03A3A088 MOV X2, X31
	0x03A3A08C BL 0x33C0DE4
	0x03A3A090 MOV X8, X0
	0x03A3A094 CBZ X0, 0x3A3A0A8
	0x03A3A098 LDR X1, [X22]
	0x03A3A09C LDR X9, [X8]
	0x03A3A0A0 CMP X9, X1
	0x03A3A0A4 B.NE 0x3A3A0D8
	0x03A3A0A8 LDR X9, [X21]
	0x03A3A0AC MOV X1, X8
	0x03A3A0B0 MOV X2, X20
	0x03A3A0B4 LDR X0, [X9 + 0xB8]
	0x03A3A0B8 BL 0x1C24138
	0x03A3A0BC CMP X20, X0
	0x03A3A0C0 MOV X20, X0
	0x03A3A0C4 B.NE 0x3A3A080
	0x03A3A0C8 LDP X20, X19, [X31 + 0x20]
	0x03A3A0CC LDP X22, X21, [X31 + 0x10]
	0x03A3A0D0 LDR X30, [X31], #0x30
	0x03A3A0D4 RET
	0x03A3A0D8 MOV X0, X8
	0x03A3A0DC BL 0x1C171E0
	0x03A3A0E0 STR X30, [X31 - 0x30]!
	0x03A3A0E4 STP X22, X21, [X31 + 0x10]
	0x03A3A0E8 STP X20, X19, [X31 + 0x20]
	0x03A3A0EC ADRP X20, 0x9A8000
	0x03A3A0F0 ADRP X21, 0x71B000
	0x03A3A0F4 LDRB W8, [X20 + 0x11F]
	0x03A3A0F8 LDR X21, [X21 + 0x758]
	0x03A3A0FC MOV X19, X0
	0x03A3A100 TBNZ X8, 0x0, 0x3A3A124
	0x03A3A104 ADRP X0, 0x71B000
	0x03A3A108 LDR X0, [X0 + 0x760]
	0x03A3A10C BL 0x1C16CF4
	0x03A3A110 ADRP X0, 0x71B000
	0x03A3A114 LDR X0, [X0 + 0x758]
	0x03A3A118 BL 0x1C16CF4
	0x03A3A11C MOVZ W8, 0x1
	0x03A3A120 STRB W8, [X20 + 0x11F]
	0x03A3A124 LDR X8, [X21]
	0x03A3A128 ADRP X22, 0x71B000
	0x03A3A12C LDR X8, [X8 + 0xB8]
	0x03A3A130 LDR X20, [X8]
	0x03A3A134 LDR X22, [X22 + 0x760]
	0x03A3A138 MOV X0, X20
	0x03A3A13C MOV X1, X19
	0x03A3A140 MOV X2, X31
	0x03A3A144 BL 0x33C0FDC
	0x03A3A148 MOV X8, X0
	0x03A3A14C CBZ X0, 0x3A3A160
	0x03A3A150 LDR X1, [X22]
	0x03A3A154 LDR X9, [X8]
	0x03A3A158 CMP X9, X1
	0x03A3A15C B.NE 0x3A3A190
	0x03A3A160 LDR X9, [X21]
	0x03A3A164 MOV X1, X8
	0x03A3A168 MOV X2, X20
	0x03A3A16C LDR X0, [X9 + 0xB8]
	0x03A3A170 BL 0x1C24138
	0x03A3A174 CMP X20, X0
	0x03A3A178 MOV X20, X0
	0x03A3A17C B.NE 0x3A3A138
	0x03A3A180 LDP X20, X19, [X31 + 0x20]
	0x03A3A184 LDP X22, X21, [X31 + 0x10]
	0x03A3A188 LDR X30, [X31], #0x30
	0x03A3A18C RET
	0x03A3A190 MOV X0, X8
	0x03A3A194 BL 0x1C171E0
	0x03A3A198 STR X30, [X31 - 0x30]!
	0x03A3A19C STP X22, X21, [X31 + 0x10]
	0x03A3A1A0 STP X20, X19, [X31 + 0x20]
	0x03A3A1A4 ADRP X20, 0x9A8000
	0x03A3A1A8 ADRP X21, 0x71B000
	0x03A3A1AC LDRB W8, [X20 + 0x120]
	0x03A3A1B0 LDR X21, [X21 + 0x758]
	0x03A3A1B4 MOV X19, X0
	0x03A3A1B8 TBNZ X8, 0x0, 0x3A3A1DC
	0x03A3A1BC ADRP X0, 0x71B000
	0x03A3A1C0 LDR X0, [X0 + 0x760]
	0x03A3A1C4 BL 0x1C16CF4
	0x03A3A1C8 ADRP X0, 0x71B000
	0x03A3A1CC LDR X0, [X0 + 0x758]
	0x03A3A1D0 BL 0x1C16CF4
	0x03A3A1D4 MOVZ W8, 0x1
	0x03A3A1D8 STRB W8, [X20 + 0x120]
	0x03A3A1DC LDR X8, [X21]
	0x03A3A1E0 ADRP X22, 0x71B000
	0x03A3A1E4 LDR X8, [X8 + 0xB8]
	0x03A3A1E8 LDR X20, [X8 + 0x8]
	0x03A3A1EC LDR X22, [X22 + 0x760]
	0x03A3A1F0 MOV X0, X20
	0x03A3A1F4 MOV X1, X19
	0x03A3A1F8 MOV X2, X31
	0x03A3A1FC BL 0x33C0DE4
	0x03A3A200 MOV X8, X0
	0x03A3A204 CBZ X0, 0x3A3A218
	0x03A3A208 LDR X1, [X22]
	0x03A3A20C LDR X9, [X8]
	0x03A3A210 CMP X9, X1
	0x03A3A214 B.NE 0x3A3A24C
	0x03A3A218 LDR X9, [X21]
	0x03A3A21C MOV X1, X8
	0x03A3A220 MOV X2, X20
	0x03A3A224 LDR X9, [X9 + 0xB8]
	0x03A3A228 ADD X0, X9, 0x8
	0x03A3A22C BL 0x1C24138
	0x03A3A230 CMP X20, X0
	0x03A3A234 MOV X20, X0
	0x03A3A238 B.NE 0x3A3A1F0
	0x03A3A23C LDP X20, X19, [X31 + 0x20]
	0x03A3A240 LDP X22, X21, [X31 + 0x10]
	0x03A3A244 LDR X30, [X31], #0x30
	0x03A3A248 RET
	0x03A3A24C MOV X0, X8
	0x03A3A250 BL 0x1C171E0
	0x03A3A254 STR X30, [X31 - 0x30]!
	0x03A3A258 STP X22, X21, [X31 + 0x10]
	0x03A3A25C STP X20, X19, [X31 + 0x20]
	0x03A3A260 ADRP X20, 0x9A8000
	0x03A3A264 ADRP X21, 0x71B000
	0x03A3A268 LDRB W8, [X20 + 0x121]
	0x03A3A26C LDR X21, [X21 + 0x758]
	0x03A3A270 MOV X19, X0
	0x03A3A274 TBNZ X8, 0x0, 0x3A3A298
	0x03A3A278 ADRP X0, 0x71B000
	0x03A3A27C LDR X0, [X0 + 0x760]
	0x03A3A280 BL 0x1C16CF4
	0x03A3A284 ADRP X0, 0x71B000
	0x03A3A288 LDR X0, [X0 + 0x758]
	0x03A3A28C BL 0x1C16CF4
	0x03A3A290 MOVZ W8, 0x1
	0x03A3A294 STRB W8, [X20 + 0x121]
	0x03A3A298 LDR X8, [X21]
	0x03A3A29C ADRP X22, 0x71B000
	0x03A3A2A0 LDR X8, [X8 + 0xB8]
	0x03A3A2A4 LDR X20, [X8 + 0x8]
	0x03A3A2A8 LDR X22, [X22 + 0x760]
	0x03A3A2AC MOV X0, X20
	0x03A3A2B0 MOV X1, X19
	0x03A3A2B4 MOV X2, X31
	0x03A3A2B8 BL 0x33C0FDC
	0x03A3A2BC MOV X8, X0
	0x03A3A2C0 CBZ X0, 0x3A3A2D4
	0x03A3A2C4 LDR X1, [X22]
	0x03A3A2C8 LDR X9, [X8]
	0x03A3A2CC CMP X9, X1
	0x03A3A2D0 B.NE 0x3A3A308
	0x03A3A2D4 LDR X9, [X21]
	0x03A3A2D8 MOV X1, X8
	0x03A3A2DC MOV X2, X20
	0x03A3A2E0 LDR X9, [X9 + 0xB8]
	0x03A3A2E4 ADD X0, X9, 0x8
	0x03A3A2E8 BL 0x1C24138
	0x03A3A2EC CMP X20, X0
	0x03A3A2F0 MOV X20, X0
	0x03A3A2F4 B.NE 0x3A3A2AC
	0x03A3A2F8 LDP X20, X19, [X31 + 0x20]
	0x03A3A2FC LDP X22, X21, [X31 + 0x10]
	0x03A3A300 LDR X30, [X31], #0x30
	0x03A3A304 RET
	0x03A3A308 MOV X0, X8
	0x03A3A30C BL 0x1C171E0
	0x03A3A310 STR X30, [X31 - 0x30]!
	0x03A3A314 STP X22, X21, [X31 + 0x10]
	0x03A3A318 STP X20, X19, [X31 + 0x20]
	0x03A3A31C ADRP X20, 0x9A8000
	0x03A3A320 ADRP X21, 0x71B000
	0x03A3A324 LDRB W8, [X20 + 0x122]
	0x03A3A328 LDR X21, [X21 + 0x758]
	0x03A3A32C MOV X19, X0
	0x03A3A330 TBNZ X8, 0x0, 0x3A3A354
	0x03A3A334 ADRP X0, 0x71B000
	0x03A3A338 LDR X0, [X0 + 0x760]
	0x03A3A33C BL 0x1C16CF4
	0x03A3A340 ADRP X0, 0x71B000
	0x03A3A344 LDR X0, [X0 + 0x758]
	0x03A3A348 BL 0x1C16CF4
	0x03A3A34C MOVZ W8, 0x1
	0x03A3A350 STRB W8, [X20 + 0x122]
	0x03A3A354 LDR X8, [X21]
	0x03A3A358 ADRP X22, 0x71B000
	0x03A3A35C LDR X8, [X8 + 0xB8]
	0x03A3A360 LDR X20, [X8 + 0x10]
	0x03A3A364 LDR X22, [X22 + 0x760]
	0x03A3A368 MOV X0, X20
	0x03A3A36C MOV X1, X19
	0x03A3A370 MOV X2, X31
	0x03A3A374 BL 0x33C0DE4
	0x03A3A378 MOV X8, X0
	0x03A3A37C CBZ X0, 0x3A3A390
	0x03A3A380 LDR X1, [X22]
	0x03A3A384 LDR X9, [X8]
	0x03A3A388 CMP X9, X1
	0x03A3A38C B.NE 0x3A3A3C4
	0x03A3A390 LDR X9, [X21]
	0x03A3A394 MOV X1, X8
	0x03A3A398 MOV X2, X20
	0x03A3A39C LDR X9, [X9 + 0xB8]
	0x03A3A3A0 ADD X0, X9, 0x10
	0x03A3A3A4 BL 0x1C24138
	0x03A3A3A8 CMP X20, X0
	0x03A3A3AC MOV X20, X0
	0x03A3A3B0 B.NE 0x3A3A368
	0x03A3A3B4 LDP X20, X19, [X31 + 0x20]
	0x03A3A3B8 LDP X22, X21, [X31 + 0x10]
	0x03A3A3BC LDR X30, [X31], #0x30
	0x03A3A3C0 RET
	0x03A3A3C4 MOV X0, X8
	0x03A3A3C8 BL 0x1C171E0
	0x03A3A3CC STR X30, [X31 - 0x30]!
	0x03A3A3D0 STP X22, X21, [X31 + 0x10]
	0x03A3A3D4 STP X20, X19, [X31 + 0x20]
	0x03A3A3D8 ADRP X20, 0x9A8000
	0x03A3A3DC ADRP X21, 0x71B000
	0x03A3A3E0 LDRB W8, [X20 + 0x123]
	0x03A3A3E4 LDR X21, [X21 + 0x758]
	0x03A3A3E8 MOV X19, X0
	0x03A3A3EC TBNZ X8, 0x0, 0x3A3A410
	0x03A3A3F0 ADRP X0, 0x71B000
	0x03A3A3F4 LDR X0, [X0 + 0x760]
	0x03A3A3F8 BL 0x1C16CF4
	0x03A3A3FC ADRP X0, 0x71B000
	0x03A3A400 LDR X0, [X0 + 0x758]
	0x03A3A404 BL 0x1C16CF4
	0x03A3A408 MOVZ W8, 0x1
	0x03A3A40C STRB W8, [X20 + 0x123]
	0x03A3A410 LDR X8, [X21]
	0x03A3A414 ADRP X22, 0x71B000
	0x03A3A418 LDR X8, [X8 + 0xB8]
	0x03A3A41C LDR X20, [X8 + 0x10]
	0x03A3A420 LDR X22, [X22 + 0x760]
	0x03A3A424 MOV X0, X20
	0x03A3A428 MOV X1, X19
	0x03A3A42C MOV X2, X31
	0x03A3A430 BL 0x33C0FDC
	0x03A3A434 MOV X8, X0
	0x03A3A438 CBZ X0, 0x3A3A44C
	0x03A3A43C LDR X1, [X22]
	0x03A3A440 LDR X9, [X8]
	0x03A3A444 CMP X9, X1
	0x03A3A448 B.NE 0x3A3A480
	0x03A3A44C LDR X9, [X21]
	0x03A3A450 MOV X1, X8
	0x03A3A454 MOV X2, X20
	0x03A3A458 LDR X9, [X9 + 0xB8]
	0x03A3A45C ADD X0, X9, 0x10
	0x03A3A460 BL 0x1C24138
	0x03A3A464 CMP X20, X0
	0x03A3A468 MOV X20, X0
	0x03A3A46C B.NE 0x3A3A424
	0x03A3A470 LDP X20, X19, [X31 + 0x20]
	0x03A3A474 LDP X22, X21, [X31 + 0x10]
	0x03A3A478 LDR X30, [X31], #0x30
	0x03A3A47C RET
	0x03A3A480 MOV X0, X8
	0x03A3A484 BL 0x1C171E0
	0x03A3A488 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 592
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X21, 0x9AA000
	014 Move X25, 0x718000
	015 Move X19, X2
	016 Move [X31+584], X8
	017 Move [X31+176], X1
	018 Move W8, [X21+277]
	019 Move X25, [X25+3200]
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x71A000
	026 Move X0, [X0+3624]
	027 Call 0x1C17CF4
	028 Move X0, 0x6E3000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move X0, 0x718000
	032 Move X0, [X0+3200]
	033 Call 0x1C17CF4
	034 Move X0, 0x71D000
	035 Move X0, [X0+1744]
	036 Call 0x1C17CF4
	037 Move X0, 0x71D000
	038 Move X0, [X0+1752]
	039 Call 0x1C17CF4
	040 Move X0, 0x71D000
	041 Move X0, [X0+1760]
	042 Call 0x1C17CF4
	043 Move X0, 0x71D000
	044 Move X0, [X0+1768]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+277], W8
	048 Add X0, X31, 384
	049 Move W2, 196
	050 Move W1, W31
	051 Call 0x3EB2B10
	052 Move [X31+168], W31
	053 Move [X31+160], W31
	054 Move W3, [X19+396]
	055 Move X1, [X20+272]
	056 Add X8, X31, 184
	057 Move X0, X20
	058 Move X2, X19
	059 Move X4, X31
	060 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	061 Add X0, X31, 384
	062 Add X1, X31, 184
	063 Move W2, 196
	064 Call 0x3EB2AC0
	065 Move X21, [X19]
	066 Move X2, [X20+280]
	067 Add X0, X31, 168
	068 Move X3, X31
	069 Move X1, X21
	070 Call ProfilingScope..ctor, X0, X1, X2
	071 Move X0, [X25]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Add X0, X31, 176
	077 Move X1, X21
	078 Move X2, X31
	079 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	080 Compare X21, 0
	081 JumpIfEqual {289}
	082 Move X0, X21
	083 Move X1, X31
	084 Call CommandBuffer.Clear, X0
	085 Move X8, [X20+312]
	086 Compare X8, 0
	087 JumpIfEqual {290}
	088 Move W9, [X8+24]
	089 Compare W9, 0
	090 JumpIfEqual {291}
	091 Move X8, [X8+32]
	092 Compare X8, 0
	093 JumpIfEqual {292}
	094 Move X9, [X8+72]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 Move X1, [X8+88]
	098 Move [X31+144], X9
	099 Move [X31+112], V1
	100 Move [X31+120], V0
	101 Add X2, X31, 112
	102 Move X0, X21
	103 Move X3, X31
	104 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	105 Move X8, [X20+232]
	106 Compare X8, 0
	107 JumpIfEqual {293}
	108 Move W9, [X8+16]
	109 Subtract W9, W9, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, [X20+312]
	112 Compare X8, 0
	113 JumpIfEqual {301}
	114 Move W9, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X8+40]
	117 Compare X8, 0
	118 JumpIfEqual {303}
	119 Move X9, [X8+72]
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move X1, [X8+88]
	123 Move [X31+96], X9
	124 Move [X31+64], V1
	125 Move [X31+72], V0
	126 Add X2, X31, 64
	127 Move X0, X21
	128 Move X3, X31
	129 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	130 Move X8, [X20+232]
	131 Compare X8, 0
	132 JumpIfEqual {306}
	133 Move W9, [X8+16]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X8, [X20+312]
	136 Compare X8, 0
	137 JumpIfEqual {304}
	138 Move W9, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X8+48]
	141 Compare X8, 0
	142 JumpIfEqual {307}
	143 Move X9, [X8+72]
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move X1, [X8+88]
	147 Move [X31+48], X9
	148 Move [X31+16], V1
	149 Move [X31+24], V0
	150 Add X2, X31, 16
	151 Move X0, X21
	152 Move X3, X31
	153 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	154 Move X8, [X20+232]
	155 Compare X8, 0
	156 JumpIfEqual {308}
	157 Move X9, 0x6E2000
	158 Move X9, [X9+2296]
	159 Move W22, [X8+16]
	160 Move X0, [X9]
	161 Move W9, [X0+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X8, 0x71C000
	166 Move X8, [X8+1744]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 NotImplemented "Instruction CSET not yet implemented."
	169 Move X1, [X8]
	170 Move X0, X21
	171 Move X3, X31
	172 Call CoreUtils.SetKeyword, X0, X1, X2
	173 Move X8, [X20+232]
	174 Compare X8, 0
	175 JumpIfEqual {294}
	176 Move X9, 0x71C000
	177 Move W8, [X8+16]
	178 Move X9, [X9+1760]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X1, [X9]
	181 NotImplemented "Instruction CSET not yet implemented."
	182 Move X0, X21
	183 Move X3, X31
	184 Call CoreUtils.SetKeyword, X0, X1, X2
	185 Move X8, [X20+232]
	186 Compare X8, 0
	187 JumpIfEqual {295}
	188 Move X9, 0x71C000
	189 Move W8, [X8+16]
	190 Move X9, [X9+1752]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X1, [X9]
	193 NotImplemented "Instruction CSET not yet implemented."
	194 Move X0, X21
	195 Move X3, X31
	196 Call CoreUtils.SetKeyword, X0, X1, X2
	197 Move X8, 0x71C000
	198 Move X8, [X8+1768]
	199 Move W2, [X20+296]
	200 Move X1, [X8]
	201 Move X0, X21
	202 Move X3, X31
	203 Call CoreUtils.SetKeyword, X0, X1, X2
	204 Move X2, [X20+288]
	205 Move [X31+184], W31
	206 Add X0, X31, 184
	207 Move X1, X21
	208 Move X3, X31
	209 Call ProfilingScope..ctor, X0, X1, X2
	210 Move W8, [X31+184]
	211 Move [X31+160], W8
	212 Move X8, [X20+312]
	213 Compare X8, 0
	214 JumpIfEqual {296}
	215 Move W9, [X8+24]
	216 Compare W9, 0
	217 JumpIfEqual {297}
	218 Move X9, 0x719000
	219 Move X9, [X9+3624]
	220 Move X22, [X8+32]
	221 Move X23, [X20+240]
	222 Move X0, [X9]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move S0, 1
	228 Move S1, 1
	229 Move S2, W31
	230 Move S3, W31
	231 Move X0, X21
	232 Move X1, X22
	233 Move X2, X23
	234 Move W3, W31
	235 Move X4, X31
	236 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	237 Move X22, X31
	238 Move W23, 5
	239 Add X0, X31, 160
	240 Move X1, X31
	241 Call ProfilingScope.Dispose, X0
	242 Compare X22, 0
	243 JumpIfNotEqual {298}
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Compare W23, 0
	246 JumpIfNotEqual {272}
	247 Move X0, [X25]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Add X0, X31, 176
	253 Move X1, X21
	254 Move X2, X31
	255 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	256 Move X0, X21
	257 Move X1, X31
	258 Call CommandBuffer.Clear, X0
	259 Move X0, [X20+224]
	260 Compare X0, 0
	261 JumpIfEqual {300}
	262 Move X1, X21
	263 Move X2, X31
	264 Call DecalDrawSystem.Execute, X0, X1
	265 Move X1, [X19+8]
	266 Move X2, [X19+16]
	267 Add X4, X20, 248
	268 Add X0, X31, 176
	269 Add X3, X31, 384
	270 Move X5, X31
	271 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	272 Add X0, X31, 168
	273 Move X1, X31
	274 Call ProfilingScope.Dispose, X0
	275 Move X8, [X24+40]
	276 Move X9, [X31+584]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X31, X31, 592
	279 Move X20, [X31+64]
	280 Move X19, [X31+72]
	281 Move X22, [X31+48]
	282 Move X21, [X31+56]
	283 Move X24, [X31+32]
	284 Move X23, [X31+40]
	285 Move X30, [X31+16]
	286 Move X25, [X31+24]
	287 Move X29, [X31+80]
	288 Return 
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F28
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F28
	298 Move X0, X22
	299 Call 0x1C17F18
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F28
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F28
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x3EB2B20
	310 Move X23, X1
	311 Move X22, X0
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move X0, X22
	314 Call 0x3EB2AD0
	315 Move X8, [X0]
	316 Move [X31+8], X8
	317 Call 0x3EB2AE0
	318 Move X22, [X31+8]
	319 Move W23, W31
	320 Move [X31+8], X31
	321 Add X0, X31, 160
	322 Move X1, X31
	323 Call ProfilingScope.Dispose, X0
	324 Move X8, [X31+8]
	325 Compare X8, 0
	326 JumpIfEqual {333}
	327 Move X0, [X31+8]
	328 Call 0x1C17F18
	329 Move X23, X1
	330 Move X22, X0
	331 Move X23, X1
	332 Move X22, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X0, X22
	335 Call 0x3EB2AD0
	336 Move X19, [X0]
	337 Call 0x3EB2AE0
	338 Add X0, X31, 168
	339 Move X1, X31
	340 Call ProfilingScope.Dispose, X0
	341 Compare X19, 0
	342 JumpIfEqual {275}
	343 Move X0, X19
	344 Call 0x1C17F18
	345 Move X19, X31
	346 Move X22, X0
	347 Add X0, X31, 168
	348 Move X1, X31
	349 Call ProfilingScope.Dispose, X0
	350 Compare X19, 0
	351 JumpIfNotEqual {354}
	352 Move X0, X22
	353 Call 0x1D2D690
	354 Move X0, X19
	355 Call 0x1C17F18
	356 Call 0x1991590

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A3A48C STP X22, X21, [X31 + 0x10]
	0x03A3A490 STP X20, X19, [X31 + 0x20]
	0x03A3A494 ADRP X20, 0x9A8000
	0x03A3A498 ADRP X21, 0x71B000
	0x03A3A49C LDRB W8, [X20 + 0x124]
	0x03A3A4A0 LDR X21, [X21 + 0x758]
	0x03A3A4A4 MOV X19, X0
	0x03A3A4A8 TBNZ X8, 0x0, 0x3A3A4CC
	0x03A3A4AC ADRP X0, 0x6BA000
	0x03A3A4B0 LDR X0, [X0 + 0xE70]
	0x03A3A4B4 BL 0x1C16CF4
	0x03A3A4B8 ADRP X0, 0x71B000
	0x03A3A4BC LDR X0, [X0 + 0x758]
	0x03A3A4C0 BL 0x1C16CF4
	0x03A3A4C4 MOVZ W8, 0x1
	0x03A3A4C8 STRB W8, [X20 + 0x124]
	0x03A3A4CC LDR X8, [X21]
	0x03A3A4D0 ADRP X22, 0x6BA000
	0x03A3A4D4 LDR X8, [X8 + 0xB8]
	0x03A3A4D8 LDR X20, [X8 + 0x18]
	0x03A3A4DC LDR X22, [X22 + 0xE70]
	0x03A3A4E0 MOV X0, X20
	0x03A3A4E4 MOV X1, X19
	0x03A3A4E8 MOV X2, X31
	0x03A3A4EC BL 0x33C0DE4
	0x03A3A4F0 MOV X8, X0
	0x03A3A4F4 CBZ X0, 0x3A3A508
	0x03A3A4F8 LDR X1, [X22]
	0x03A3A4FC LDR X9, [X8]
	0x03A3A500 CMP X9, X1
	0x03A3A504 B.NE 0x3A3A53C
	0x03A3A508 LDR X9, [X21]
	0x03A3A50C MOV X1, X8
	0x03A3A510 MOV X2, X20
	0x03A3A514 LDR X9, [X9 + 0xB8]
	0x03A3A518 ADD X0, X9, 0x18
	0x03A3A51C BL 0x1C24138
	0x03A3A520 CMP X20, X0
	0x03A3A524 MOV X20, X0
	0x03A3A528 B.NE 0x3A3A4E0
	0x03A3A52C LDP X20, X19, [X31 + 0x20]
	0x03A3A530 LDP X22, X21, [X31 + 0x10]
	0x03A3A534 LDR X30, [X31], #0x30
	0x03A3A538 RET
	0x03A3A53C MOV X0, X8
	0x03A3A540 BL 0x1C171E0
	0x03A3A544 STR X30, [X31 - 0x30]!
	0x03A3A548 STP X22, X21, [X31 + 0x10]
	0x03A3A54C STP X20, X19, [X31 + 0x20]
	0x03A3A550 ADRP X20, 0x9A8000
	0x03A3A554 ADRP X21, 0x71B000
	0x03A3A558 LDRB W8, [X20 + 0x125]
	0x03A3A55C LDR X21, [X21 + 0x758]
	0x03A3A560 MOV X19, X0
	0x03A3A564 TBNZ X8, 0x0, 0x3A3A588
	0x03A3A568 ADRP X0, 0x6BA000
	0x03A3A56C LDR X0, [X0 + 0xE70]
	0x03A3A570 BL 0x1C16CF4
	0x03A3A574 ADRP X0, 0x71B000
	0x03A3A578 LDR X0, [X0 + 0x758]
	0x03A3A57C BL 0x1C16CF4
	0x03A3A580 MOVZ W8, 0x1
	0x03A3A584 STRB W8, [X20 + 0x125]
	0x03A3A588 LDR X8, [X21]
	0x03A3A58C ADRP X22, 0x6BA000
	0x03A3A590 LDR X8, [X8 + 0xB8]
	0x03A3A594 LDR X20, [X8 + 0x18]
	0x03A3A598 LDR X22, [X22 + 0xE70]
	0x03A3A59C MOV X0, X20
	0x03A3A5A0 MOV X1, X19
	0x03A3A5A4 MOV X2, X31
	0x03A3A5A8 BL 0x33C0FDC
	0x03A3A5AC MOV X8, X0
	0x03A3A5B0 CBZ X0, 0x3A3A5C4
	0x03A3A5B4 LDR X1, [X22]
	0x03A3A5B8 LDR X9, [X8]
	0x03A3A5BC CMP X9, X1
	0x03A3A5C0 B.NE 0x3A3A5F8
	0x03A3A5C4 LDR X9, [X21]
	0x03A3A5C8 MOV X1, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x9A9000
	008 Move W8, [X20+278]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x6E2000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x71C000
	018 Move X0, [X0+1744]
	019 Call 0x1C17CF4
	020 Move X0, 0x71C000
	021 Move X0, [X0+1752]
	022 Call 0x1C17CF4
	023 Move X0, 0x71C000
	024 Move X0, [X0+1760]
	025 Call 0x1C17CF4
	026 Move X0, 0x71C000
	027 Move X0, [X0+1768]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+278], W8
	031 Compare X19, 0
	032 JumpIfEqual {75}
	033 Move X8, 0x6E2000
	034 Move X8, [X8+2296]
	035 Move X23, 0x71C000
	036 Move X22, 0x71C000
	037 Move X21, 0x71C000
	038 Move X0, [X8]
	039 Move X20, 0x71C000
	040 Move W8, [X0+224]
	041 Move X23, [X23+1744]
	042 Move X22, [X22+1760]
	043 Move X21, [X21+1752]
	044 Move X20, [X20+1768]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X1, [X23]
	049 Move X0, X19
	050 Move W2, W31
	051 Move X3, X31
	052 Call CoreUtils.SetKeyword, X0, X1, X2
	053 Move X1, [X22]
	054 Move X0, X19
	055 Move W2, W31
	056 Move X3, X31
	057 Call CoreUtils.SetKeyword, X0, X1, X2
	058 Move X1, [X21]
	059 Move X0, X19
	060 Move W2, W31
	061 Move X3, X31
	062 Call CoreUtils.SetKeyword, X0, X1, X2
	063 Move X1, [X20]
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move W2, W31
	070 Move X3, X31
	071 Move X30, [X31+48]
	072 Move X23, [X31+56]
	073 Call CoreUtils.SetKeyword, X0, X1, X2
	074 Return 
	075 Move X0, 0x6BF000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0x71C000
	081 Move X0, [X0+1776]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0x71C000
	088 Move X0, [X0+1784]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03A3A5CC MOV X2, X20
	0x03A3A5D0 LDR X9, [X9 + 0xB8]
	0x03A3A5D4 ADD X0, X9, 0x18
	0x03A3A5D8 BL 0x1C24138
	0x03A3A5DC CMP X20, X0
	0x03A3A5E0 MOV X20, X0
	0x03A3A5E4 B.NE 0x3A3A59C
	0x03A3A5E8 LDP X20, X19, [X31 + 0x20]
	0x03A3A5EC LDP X22, X21, [X31 + 0x10]
	0x03A3A5F0 LDR X30, [X31], #0x30
	0x03A3A5F4 RET
	0x03A3A5F8 MOV X0, X8
	0x03A3A5FC BL 0x1C171E0
	0x03A3A600 STR X30, [X31 - 0x30]!
	0x03A3A604 STP X22, X21, [X31 + 0x10]
	0x03A3A608 STP X20, X19, [X31 + 0x20]
	0x03A3A60C ADRP X20, 0x9A8000
	0x03A3A610 ADRP X21, 0x71B000
	0x03A3A614 LDRB W8, [X20 + 0x126]
	0x03A3A618 LDR X21, [X21 + 0x758]
	0x03A3A61C MOV X19, X0
	0x03A3A620 TBNZ X8, 0x0, 0x3A3A644
	0x03A3A624 ADRP X0, 0x71B000
	0x03A3A628 LDR X0, [X0 + 0x760]
	0x03A3A62C BL 0x1C16CF4
	0x03A3A630 ADRP X0, 0x71B000
	0x03A3A634 LDR X0, [X0 + 0x758]
	0x03A3A638 BL 0x1C16CF4
	0x03A3A63C MOVZ W8, 0x1
	0x03A3A640 STRB W8, [X20 + 0x126]
	0x03A3A644 LDR X8, [X21]
	0x03A3A648 ADRP X22, 0x71B000
	0x03A3A64C LDR X8, [X8 + 0xB8]
	0x03A3A650 LDR X20, [X8 + 0x20]
	0x03A3A654 LDR X22, [X22 + 0x760]
	0x03A3A658 MOV X0, X20
	0x03A3A65C MOV X1, X19
	0x03A3A660 MOV X2, X31
	0x03A3A664 BL 0x33C0DE4
	0x03A3A668 MOV X8, X0
	0x03A3A66C CBZ X0, 0x3A3A680
	0x03A3A670 LDR X1, [X22]
	0x03A3A674 LDR X9, [X8]
	0x03A3A678 CMP X9, X1
	0x03A3A67C B.NE 0x3A3A6B4
	0x03A3A680 LDR X9, [X21]
	0x03A3A684 MOV X1, X8
	0x03A3A688 MOV X2, X20
	0x03A3A68C LDR X9, [X9 + 0xB8]
	0x03A3A690 ADD X0, X9, 0x20
	0x03A3A694 BL 0x1C24138
	0x03A3A698 CMP X20, X0
	0x03A3A69C MOV X20, X0
	0x03A3A6A0 B.NE 0x3A3A658
	0x03A3A6A4 LDP X20, X19, [X31 + 0x20]
	0x03A3A6A8 LDP X22, X21, [X31 + 0x10]
	0x03A3A6AC LDR X30, [X31], #0x30
	0x03A3A6B0 RET
	0x03A3A6B4 MOV X0, X8
	0x03A3A6B8 BL 0x1C171E0
	0x03A3A6BC STR X30, [X31 - 0x30]!
	0x03A3A6C0 STP X22, X21, [X31 + 0x10]
	0x03A3A6C4 STP X20, X19, [X31 + 0x20]
	0x03A3A6C8 ADRP X20, 0x9A8000
	0x03A3A6CC ADRP X21, 0x71B000
	0x03A3A6D0 LDRB W8, [X20 + 0x127]
	0x03A3A6D4 LDR X21, [X21 + 0x758]
	0x03A3A6D8 MOV X19, X0
	0x03A3A6DC TBNZ X8, 0x0, 0x3A3A700
	0x03A3A6E0 ADRP X0, 0x71B000
	0x03A3A6E4 LDR X0, [X0 + 0x760]
	0x03A3A6E8 BL 0x1C16CF4
	0x03A3A6EC ADRP X0, 0x71B000
	0x03A3A6F0 LDR X0, [X0 + 0x758]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9A9000
	005 Move X20, 0x6BA000
	006 Move W8, [X19+279]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0x71C000
	013 Move X0, [X0+1736]
	014 Call 0x1C17CF4
	015 Move X0, 0x6BA000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x71C000
	019 Move X0, [X0+1792]
	020 Call 0x1C17CF4
	021 Move X0, 0x71C000
	022 Move X0, [X0+1800]
	023 Call 0x1C17CF4
	024 Move X0, 0x71C000
	025 Move X0, [X0+1808]
	026 Call 0x1C17CF4
	027 Move X0, 0x71C000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x71C000
	031 Move X0, [X0+1824]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+279], W8
	035 Move X0, [X20]
	036 Move W1, 4
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {78}
	040 Move W8, [X0+24]
	041 Compare W8, 0
	042 JumpIfEqual {77}
	043 Move X9, 0x71C000
	044 Move X9, [X9+1816]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X9]
	047 Move [X0+32], X9
	048 Move X9, 0x71C000
	049 Move X9, [X9+1808]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X9]
	052 Move [X0+40], X9
	053 Move X9, 0x71C000
	054 Move X9, [X9+1800]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X9, [X9]
	057 Move [X0+48], X9
	058 Move X8, 0x71C000
	059 Move X8, [X8+1792]
	060 Move X9, 0x71C000
	061 Move X8, [X8]
	062 Move X9, [X9+1736]
	063 Move [X0+56], X8
	064 Move X8, [X9]
	065 Move X8, [X8+184]
	066 Move [X8], X0
	067 Move X8, [X9]
	068 Move X9, 0x71C000
	069 Move X9, [X9+1824]
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X8, [X8+184]
	073 Move X9, [X9]
	074 Move [X8+8], X9
	075 Move X30, [X31+32]
	076 Return 
	077 Call 0x1C17F28
	078 Call 0x1C17F20

