Type: UnityEngine.Rendering.Universal.XRSystemUniversal

Method: System.Void BeginLateLatching(UnityEngine.Camera camera, UnityEngine.Rendering.Universal.XRPassUniversal xrPass)

Disassembly:
	0x03A901B8 CMP W8, 0x1
	0x03A901BC B.NE 0x3A902AC
	0x03A901C0 MOV X0, X31
	0x03A901C4 BL 0x3C13D48
	0x03A901C8 CMP W19, 0x1
	0x03A901CC B.LT 0x3A902AC
	0x03A901D0 ADRP X26, 0x6C6000
	0x03A901D4 ADRP X27, 0x663000
	0x03A901D8 LDR X26, [X26 + 0x1B8]
	0x03A901DC LDR X27, [X27 + 0x598]
	0x03A901E0 MOV X22, X0
	0x03A901E4 MOV W23, W31
	0x03A901E8 FMOV S8, W31
	0x03A901EC MOVN W21, 0x0
	0x03A901F0 LDR X3, [X26]
	0x03A901F4 MOV X0, X20
	0x03A901F8 MOV X1, X19
	0x03A901FC MOV W2, W23
	0x03A90200 BL 0x22222C0
	0x03A90204 MOV X25, X0
	0x03A90208 MOV X1, X31
	0x03A9020C BL 0x3C5BBF0
	0x03A90210 MOV X24, X0
	0x03A90214 LDR X0, [X27]
	0x03A90218 LDR W8, [X0 + 0xE0]
	0x03A9021C CBNZ W8, 0x3A90224
	0x03A90220 BL 0x1C16DFC
	0x03A90224 MOV X0, X24
	0x03A90228 MOV X1, X31
	0x03A9022C MOV X2, X31
	0x03A90230 BL 0x3C3883C
	0x03A90234 TBNZ X0, 0x0, 0x3A902B0
	0x03A90238 MOV X0, X25
	0x03A9023C MOV X1, X31
	0x03A90240 BL 0x3C5BC7C
	0x03A90244 CMP W0, 0x1
	0x03A90248 B.NE 0x3A9029C
	0x03A9024C LDR X0, [X27]
	0x03A90250 LDR W8, [X0 + 0xE0]
	0x03A90254 CBNZ W8, 0x3A9025C
	0x03A90258 BL 0x1C16DFC
	0x03A9025C MOV X0, X24
	0x03A90260 MOV X1, X22
	0x03A90264 MOV X2, X31
	0x03A90268 BL 0x3C3883C
	0x03A9026C TBNZ X0, 0x0, 0x3A902DC
	0x03A90270 CBZ X24, 0x3A902E4
	0x03A90274 MOV X0, X24
	0x03A90278 MOV X1, X31
	0x03A9027C BL 0x3C168EC
	0x03A90280 FCMP S0, S8
	0x03A90284 B.LE 0x3A9029C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x953000
	007 Move X21, 0x6C1000
	008 Move W8, [X22+935]
	009 Move X21, [X21+1280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6C1000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+935], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X22, 0x952000
	027 Move W8, [X22+2874]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x6C1000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2874], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X21, [X8+24]
	043 Compare X21, 0
	044 JumpIfEqual {57}
	045 Compare X19, 0
	046 JumpIfEqual {63}
	047 Move X0, X19
	048 Move X1, X31
	049 Call XRPass.get_viewCount, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X31
	054 Call XRDisplaySubsystem.BeginRecordingIfLateLatched, X0, X1
	055 Move W8, 1
	056 Move [X19+1736], W8
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void EndLateLatching(UnityEngine.Camera camera, UnityEngine.Rendering.Universal.XRPassUniversal xrPass)

Disassembly:
	0x03A90288 MOV X0, X24
	0x03A9028C MOV X1, X31
	0x03A90290 BL 0x3C168EC
	0x03A90294 MOV V8.16B, V0.16B
	0x03A90298 MOV W21, W23
	0x03A9029C ADD W23, W23, 0x1
	0x03A902A0 CMP W19, W23
	0x03A902A4 B.NE 0x3A901F0
	0x03A902A8 B 0x3A902B0
	0x03A902AC MOVN W21, 0x0
	0x03A902B0 ADD X0, X31, 0x8
	0x03A902B4 MOV X1, X31
	0x03A902B8 BL 0x39B1DB4
	0x03A902BC MOV W0, W21
	0x03A902C0 LDP X20, X19, [X31 + 0x50]
	0x03A902C4 LDP X22, X21, [X31 + 0x40]
	0x03A902C8 LDP X24, X23, [X31 + 0x30]
	0x03A902CC LDP X26, X25, [X31 + 0x20]
	0x03A902D0 LDP X30, X27, [X31 + 0x10]
	0x03A902D4 LDR V8, [X31], #0x60
	0x03A902D8 RET
	0x03A902DC MOV W21, W23
	0x03A902E0 B 0x3A902B0
	0x03A902E4 BL 0x1C16F20
	0x03A902E8 BL 0x1C16F20
	0x03A902EC B 0x3A90318
	0x03A902F0 B 0x3A90318
	0x03A902F4 B 0x3A90318
	0x03A902F8 B 0x3A90318
	0x03A902FC B 0x3A90318
	0x03A90300 B 0x3A90318
	0x03A90304 B 0x3A90318
	0x03A90308 B 0x3A90318
	0x03A9030C B 0x3A90318
	0x03A90310 B 0x3A90318
	0x03A90314 B 0x3A90318
	0x03A90318 MOV X19, X0
	0x03A9031C CMP W1, 0x1
	0x03A90320 B.NE 0x3A9034C
	0x03A90324 MOV X0, X19
	0x03A90328 BL 0x3EB1AD0
	0x03A9032C LDR X20, [X0]
	0x03A90330 BL 0x3EB1AE0
	0x03A90334 ADD X0, X31, 0x8
	0x03A90338 MOV X1, X31
	0x03A9033C BL 0x39B1DB4
	0x03A90340 CBNZ X20, 0x3A90354

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x953000
	007 Move X21, 0x6C1000
	008 Move W8, [X22+936]
	009 Move X21, [X21+1280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6C1000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+936], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X22, 0x952000
	027 Move W8, [X22+2874]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x6C1000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2874], W8
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X0, [X8+24]
	043 Compare X0, 0
	044 JumpIfEqual {54}
	045 Compare X19, 0
	046 JumpIfEqual {60}
	047 Move W8, [X19+1736]
	048 Compare W8, 0
	049 JumpIfEqual {54}
	050 Move X1, X20
	051 Move X2, X31
	052 Call XRDisplaySubsystem.EndRecordingIfLateLatched, X0, X1
	053 Move [X19+1736], W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void UnmarkShaderProperties(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.XRPassUniversal xrPass)

Disassembly:
	0x03A95F4C LDR X22, [X19 + 0x48]
	0x03A95F50 CMP X21, X22
	0x03A95F54 B.EQ 0x3A95F64
	0x03A95F58 MOV X0, X21
	0x03A95F5C MOV X1, X22
	0x03A95F60 BL 0x3A96050
	0x03A95F64 MOV X0, X20
	0x03A95F68 MOV X1, X19
	0x03A95F6C BL 0x3A960D8
	0x03A95F70 CMP X23, X24
	0x03A95F74 B.NE 0x3A95F90
	0x03A95F78 LDR X1, [X19 + 0x40]
	0x03A95F7C MOV X0, X20
	0x03A95F80 BL 0x3A95DD0
	0x03A95F84 LDR X8, [X19 + 0x40]
	0x03A95F88 CBZ X8, 0x3A95FC4
	0x03A95F8C STR X19, [X8 + 0x20]
	0x03A95F90 CMP X21, X22
	0x03A95F94 B.NE 0x3A95FB0
	0x03A95F98 LDR X1, [X19 + 0x48]
	0x03A95F9C MOV X0, X20
	0x03A95FA0 BL 0x3A95E64
	0x03A95FA4 LDR X8, [X19 + 0x48]
	0x03A95FA8 CBZ X8, 0x3A95FC4
	0x03A95FAC STR X19, [X8 + 0x20]
	0x03A95FB0 LDP X20, X19, [X31 + 0x30]
	0x03A95FB4 LDP X22, X21, [X31 + 0x20]
	0x03A95FB8 LDP X24, X23, [X31 + 0x10]
	0x03A95FBC LDR X30, [X31], #0x40
	0x03A95FC0 RET
	0x03A95FC4 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {37}
	006 Move W8, [X1+1736]
	007 Move X19, X1
	008 Compare W8, 0
	009 JumpIfEqual {33}
	010 Move W8, [X19+1738]
	011 Compare W8, 0
	012 JumpIfEqual {33}
	013 Move X20, X0
	014 Compare X0, 0
	015 JumpIfEqual {37}
	016 Move X0, X20
	017 Move W1, W31
	018 Move X2, X31
	019 Call CommandBuffer.UnmarkLateLatchMatrix, X0, X1
	020 Move W1, 1
	021 Move X0, X20
	022 Move X2, X31
	023 Call CommandBuffer.UnmarkLateLatchMatrix, X0, X1
	024 Move W1, 2
	025 Move X0, X20
	026 Move X2, X31
	027 Call CommandBuffer.UnmarkLateLatchMatrix, X0, X1
	028 Move W1, 3
	029 Move X0, X20
	030 Move X2, X31
	031 Call CommandBuffer.UnmarkLateLatchMatrix, X0, X1
	032 Move [X19+1738], W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void MarkShaderProperties(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.XRPassUniversal xrPass, System.Boolean renderIntoTexture)

Disassembly:
	0x03A95FC8 STP X30, X21, [X31 - 0x20]!
	0x03A95FCC STP X20, X19, [X31 + 0x10]
	0x03A95FD0 ADRP X21, 0x94D000
	0x03A95FD4 LDRB W8, [X21 + 0x3B5]
	0x03A95FD8 MOV X20, X1
	0x03A95FDC MOV X19, X0
	0x03A95FE0 TBNZ X8, 0x0, 0x3A95FF8
	0x03A95FE4 ADRP X0, 0x6C2000
	0x03A95FE8 LDR X0, [X0 + 0x610]
	0x03A95FEC BL 0x1C16CF4
	0x03A95FF0 MOVZ W8, 0x1
	0x03A95FF4 STRB W8, [X21 + 0x3B5]
	0x03A95FF8 CBZ X19, 0x3A9604C
	0x03A95FFC LDR X9, [X19 + 0x20]
	0x03A96000 ADRP X8, 0x6C1000
	0x03A96004 LDR X8, [X8 + 0x610]
	0x03A96008 MOV X10, X9
	0x03A9600C CBZ X10, 0x3A9604C
	0x03A96010 STR X20, [X10 + 0x40]
	0x03A96014 LDR X10, [X10 + 0x30]
	0x03A96018 CMP X10, X9
	0x03A9601C B.NE 0x3A9600C
	0x03A96020 LDR X9, [X19 + 0x18]
	0x03A96024 CBZ X9, 0x3A9604C
	0x03A96028 LDR X10, [X19 + 0x10]
	0x03A9602C STR X10, [X9 + 0x10]
	0x03A96030 CBZ X10, 0x3A9604C
	0x03A96034 STR X9, [X10 + 0x18]
	0x03A96038 LDR X1, [X8]
	0x03A9603C MOV X0, X19
	0x03A96040 LDP X20, X19, [X31 + 0x10]
	0x03A96044 LDP X30, X21, [X31], #0x20
	0x03A96048 B 0x24A6F24
	0x03A9604C BL 0x1C16F20
	0x03A96050 STP X30, X21, [X31 - 0x20]!
	0x03A96054 STP X20, X19, [X31 + 0x10]
	0x03A96058 ADRP X21, 0x94C000
	0x03A9605C LDRB W8, [X21 + 0x3B6]
	0x03A96060 MOV X20, X1
	0x03A96064 MOV X19, X0
	0x03A96068 TBNZ X8, 0x0, 0x3A96080
	0x03A9606C ADRP X0, 0x6C1000
	0x03A96070 LDR X0, [X0 + 0x620]
	0x03A96074 BL 0x1C16CF4
	0x03A96078 MOVZ W8, 0x1
	0x03A9607C STRB W8, [X21 + 0x3B6]
	0x03A96080 CBZ X19, 0x3A960D4
	0x03A96084 LDR X9, [X19 + 0x20]
	0x03A96088 ADRP X8, 0x6C1000
	0x03A9608C LDR X8, [X8 + 0x620]
	0x03A96090 MOV X10, X9
	0x03A96094 CBZ X10, 0x3A960D4
	0x03A96098 STR X20, [X10 + 0x48]
	0x03A9609C LDR X10, [X10 + 0x38]
	0x03A960A0 CMP X10, X9
	0x03A960A4 B.NE 0x3A96094
	0x03A960A8 LDR X9, [X19 + 0x18]
	0x03A960AC CBZ X9, 0x3A960D4
	0x03A960B0 LDR X10, [X19 + 0x10]
	0x03A960B4 STR X10, [X9 + 0x10]
	0x03A960B8 CBZ X10, 0x3A960D4
	0x03A960BC STR X9, [X10 + 0x18]
	0x03A960C0 LDR X1, [X8]
	0x03A960C4 MOV X0, X19
	0x03A960C8 LDP X20, X19, [X31 + 0x10]
	0x03A960CC LDP X30, X21, [X31], #0x20
	0x03A960D0 B 0x24A6F24
	0x03A960D4 BL 0x1C16F20
	0x03A960D8 STR X30, [X31 - 0x10]!
	0x03A960DC CBZ X0, 0x3A9611C
	0x03A960E0 CBZ X1, 0x3A9611C
	0x03A960E4 LDR X8, [X0 + 0x30]
	0x03A960E8 CBZ X8, 0x3A9611C
	0x03A960EC LDR X10, [X8 + 0x28]
	0x03A960F0 CBZ X10, 0x3A9611C
	0x03A960F4 LDR X9, [X1 + 0x30]
	0x03A960F8 STR X1, [X10 + 0x38]
	0x03A960FC CBZ X9, 0x3A9611C
	0x03A96100 LDR X10, [X9 + 0x28]
	0x03A96104 CBZ X10, 0x3A9611C
	0x03A96108 STR X0, [X10 + 0x38]
	0x03A9610C STR X9, [X0 + 0x30]
	0x03A96110 STR X8, [X1 + 0x30]
	0x03A96114 LDR X30, [X31], #0x10
	0x03A96118 RET
	0x03A9611C BL 0x1C16F20
	0x03A96120 STR X30, [X31 - 0x30]!
	0x03A96124 STP X22, X21, [X31 + 0x10]
	0x03A96128 STP X20, X19, [X31 + 0x20]
	0x03A9612C CBZ X1, 0x3A9621C
	0x03A96130 LDR X20, [X1 + 0x28]
	0x03A96134 MOV X19, X1
	0x03A96138 CBZ X20, 0x3A9621C
	0x03A9613C LDR X21, [X19 + 0x48]
	0x03A96140 LDR X22, [X20 + 0x48]
	0x03A96144 CMP X21, X22
	0x03A96148 B.EQ 0x3A96158
	0x03A9614C MOV X0, X21
	0x03A96150 MOV X1, X22
	0x03A96154 BL 0x3A96050
	0x03A96158 LDR X8, [X19 + 0x30]
	0x03A9615C CMP X8, X19
	0x03A96160 B.EQ 0x3A961A8
	0x03A96164 LDR X9, [X19 + 0x28]
	0x03A96168 CBZ X9, 0x3A9621C
	0x03A9616C LDR X10, [X9 + 0x48]
	0x03A96170 CBZ X10, 0x3A9621C
	0x03A96174 LDR X1, [X9 + 0x38]
	0x03A96178 STR X1, [X10 + 0x20]
	0x03A9617C LDR X9, [X19 + 0x40]
	0x03A96180 CBZ X9, 0x3A9621C
	0x03A96184 MOV X0, X19
	0x03A96188 STR X8, [X9 + 0x20]
	0x03A9618C BL 0x3A960D8
	0x03A96190 CMP X21, X22
	0x03A96194 B.NE 0x3A961B4
	0x03A96198 LDR X1, [X19 + 0x48]
	0x03A9619C MOV X0, X19
	0x03A961A0 BL 0x3A95E64
	0x03A961A4 B 0x3A961B4
	0x03A961A8 LDR X0, [X19 + 0x40]
	0x03A961AC MOV X1, X31
	0x03A961B0 BL 0x3A95FC8

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X25
	005 Move [X31+288], X24
	006 Move [X31+296], X23
	007 Move [X31+304], X22
	008 Move [X31+312], X21
	009 Move [X31+320], X20
	010 Move [X31+328], X19
	011 Move X21, 0x94E000
	012 Move W8, [X21+937]
	013 Move W22, W2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x6BC000
	021 Move X0, [X0+1192]
	022 Call 0x1C17CF4
	023 Move X0, 0x6C0000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+937], W8
	028 Compare X19, 0
	029 JumpIfEqual {153}
	030 Move W8, [X19+1736]
	031 Compare W8, 0
	032 JumpIfEqual {142}
	033 Move W8, [X19+1737]
	034 Compare W8, 0
	035 JumpIfEqual {142}
	036 Move X21, 0x6BB000
	037 Move X21, [X21+1192]
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {153}
	045 Move X8, [X21]
	046 Move X0, X20
	047 Move W1, W31
	048 Move X3, X31
	049 Move X8, [X8+184]
	050 Move W2, [X8+8]
	051 Call CommandBuffer.MarkLateLatchMatrixShaderPropertyID, X0, X1, X2
	052 Move X8, [X21]
	053 Move W1, 1
	054 Move X0, X20
	055 Move X3, X31
	056 Move X8, [X8+184]
	057 Move W2, [X8+12]
	058 Call CommandBuffer.MarkLateLatchMatrixShaderPropertyID, X0, X1, X2
	059 Move X8, [X21]
	060 Move W1, 2
	061 Move X0, X20
	062 Move X3, X31
	063 Move X8, [X8+184]
	064 Move W2, [X8+24]
	065 Call CommandBuffer.MarkLateLatchMatrixShaderPropertyID, X0, X1, X2
	066 Move X8, [X21]
	067 Move W1, 3
	068 Move X0, X20
	069 Move X3, X31
	070 Move X8, [X8+184]
	071 Move W2, [X8+28]
	072 Call CommandBuffer.MarkLateLatchMatrixShaderPropertyID, X0, X1, X2
	073 Move X25, 0x6C0000
	074 Move X25, [X25+3528]
	075 Move X21, X31
	076 Move W24, 32
	077 And W22, W22, 1
	078 Move X0, [X25]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X25]
	084 Move X8, [X0+184]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X23, [X8]
	087 Add X8, X31, 192
	088 Move X0, X19
	089 Move W1, W21
	090 Move X2, X31
	091 Call XRPass.GetProjMatrix, X0, X1
	092 Move V0, [X31+192]
	093 Move V1, [X31+208]
	094 Move V2, [X31+224]
	095 Move V3, [X31+240]
	096 Add X8, X31, 128
	097 Add X0, X31, 64
	098 Move W1, W22
	099 Move X2, X31
	100 Move [X31+64], V0
	101 Move [X31+72], V1
	102 Move [X31+96], V2
	103 Move [X31+104], V3
	104 Call GL.GetGPUProjectionMatrix, X0, X1
	105 Move V0, [X31+128]
	106 Move V1, [X31+144]
	107 Move V2, [X31+160]
	108 Move V3, [X31+176]
	109 Move [X31+192], V0
	110 Move [X31+200], V1
	111 Move [X31+224], V2
	112 Move [X31+232], V3
	113 Compare X23, 0
	114 JumpIfEqual {153}
	115 Move V0, [X31+192]
	116 Move V1, [X31+208]
	117 Move V2, [X31+224]
	118 Move V3, [X31+240]
	119 Move [X31], V0
	120 Move [X31+8], V1
	121 Move [X31+32], V2
	122 Move [X31+40], V3
	123 Move W8, [X23+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move V0, [X31+32]
	126 Move V1, [X31+48]
	127 Move V2, [X31]
	128 Move V3, [X31+16]
	129 Add X8, X23, X24
	130 Add X21, X21, 1
	131 Add X24, X24, 64
	132 Move [X8+32], V0
	133 Move [X8+40], V1
	134 Move [X8], V2
	135 Move [X8+8], V3
	136 Move X0, X20
	137 Move X1, X23
	138 Move X2, X31
	139 Call CommandBuffer.SetLateLatchProjectionMatrices, X0, X1
	140 Move W8, 1
	141 Move [X19+1738], W8
	142 Move X20, [X31+320]
	143 Move X19, [X31+328]
	144 Move X22, [X31+304]
	145 Move X21, [X31+312]
	146 Move X24, [X31+288]
	147 Move X23, [X31+296]
	148 Move X30, [X31+272]
	149 Move X25, [X31+280]
	150 Move X29, [X31+256]
	151 Add X31, X31, 336
	152 Return 
	153 Call 0x1C17F20
	154 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03A961B4 LDR X8, [X20 + 0x30]
	0x03A961B8 CMP X8, X20
	0x03A961BC B.EQ 0x3A961F0
	0x03A961C0 LDR X9, [X20 + 0x28]
	0x03A961C4 CBZ X9, 0x3A9621C
	0x03A961C8 LDR X10, [X19 + 0x48]
	0x03A961CC CBZ X10, 0x3A9621C
	0x03A961D0 LDR X1, [X9 + 0x38]
	0x03A961D4 STR X1, [X10 + 0x20]
	0x03A961D8 LDR X9, [X20 + 0x40]
	0x03A961DC CBZ X9, 0x3A9621C
	0x03A961E0 MOV X0, X20
	0x03A961E4 STR X8, [X9 + 0x20]
	0x03A961E8 BL 0x3A960D8
	0x03A961EC B 0x3A96208
	0x03A961F0 LDR X0, [X20 + 0x40]
	0x03A961F4 MOV X1, X31
	0x03A961F8 BL 0x3A95FC8
	0x03A961FC LDR X0, [X20 + 0x48]
	0x03A96200 MOV X1, X31
	0x03A96204 BL 0x3A96050
	0x03A96208 MOV X0, X19
	0x03A9620C LDP X20, X19, [X31 + 0x20]
	0x03A96210 LDP X22, X21, [X31 + 0x10]
	0x03A96214 LDR X30, [X31], #0x30
	0x03A96218 B 0x3A96258

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x94D000
	006 Move X21, 0x662000
	007 Move X19, 0x6C0000
	008 Move W8, [X20+938]
	009 Move X21, [X21+2440]
	010 Move X19, [X19+3528]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x662000
	016 Move X0, [X0+2440]
	017 Call 0x1C17CF4
	018 Move X0, 0x6C0000
	019 Move X0, [X0+3528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+938], W8
	023 Move X0, [X21]
	024 Move W1, 2
	025 Call 0x1C17D6C
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], X0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

