Type: UnityEngine.Rendering.Universal.PixelPerfectBackgroundPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt)

Disassembly:
	0x03A18EC0 LDR X0, [X31 + 0x90]
	0x03A18EC4 MOV X1, X22
	0x03A18EC8 MOV X2, X31
	0x03A18ECC BL 0x3C54044
	0x03A18ED0 LDR X9, [X31 + 0xB8]
	0x03A18ED4 LDRB W8, [X9 + 0xF8]
	0x03A18ED8 CBZ W8, 0x3A18F00
	0x03A18EDC LDR X8, [X9 + 0x98]
	0x03A18EE0 CBZ X8, 0x3A19C98
	0x03A18EE4 LDR X9, [X8 + 0x48]
	0x03A18EE8 LDUR V0, [X8 + 0x38]
	0x03A18EEC LDUR V1, [X8 + 0x28]
	0x03A18EF0 STR X9, [X31 + 0x12C0]
	0x03A18EF4 STR V0, [X31 + 0x12B]
	0x03A18EF8 STR V1, [X31 + 0x12A]
	0x03A18EFC B 0x3A18F28
	0x03A18F00 ADD X8, X31, 0xFE0
	0x03A18F04 MOV W0, W31
	0x03A18F08 MOV X1, X31
	0x03A18F0C BL 0x3C4B204
	0x03A18F10 LDR V0, [X31 + 0xFE]
	0x03A18F14 LDR V1, [X31 + 0xFF]
	0x03A18F18 LDR X8, [X31 + 0x1000]
	0x03A18F1C STR V0, [X31 + 0x12A]
	0x03A18F20 STR V1, [X31 + 0x12B]
	0x03A18F24 STR X8, [X31 + 0x12C0]
	0x03A18F28 LDR X1, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9CA000
	007 Move X22, 0x73C000
	008 Move W8, [X21+4050]
	009 Move X22, [X22+4080]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x73C000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4050], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call ScriptableRenderPass..ctor, X0
	029 Move [X20+16], W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A18F2C LDR X24, [X31 + 0x1318]
	0x03A18F30 ADD X0, X31, 0xFE0
	0x03A18F34 MOVZ W2, 0x2B8
	0x03A18F38 BL 0x3EB1AC0
	0x03A18F3C LDR X1, [X31 + 0xA8]
	0x03A18F40 ADD X0, X31, 0x1000
	0x03A18F44 ADD X0, X0, 0x640
	0x03A18F48 MOVZ W2, 0xC4
	0x03A18F4C BL 0x3EB1AC0
	0x03A18F50 LDR X8, [X31 + 0x90]
	0x03A18F54 ADRP X10, 0x73C000
	0x03A18F58 LDR V1, [X31 + 0x12A]
	0x03A18F5C LDR V2, [X31 + 0x12B]
	0x03A18F60 LDR V0, [X8]
	0x03A18F64 LDR X8, [X8 + 0x10]
	0x03A18F68 LDR X9, [X31 + 0x12C0]
	0x03A18F6C LDR X10, [X10 + 0x658]
	0x03A18F70 STR V0, [X31 + 0xFC]
	0x03A18F74 STR X8, [X31 + 0xFD0]
	0x03A18F78 STR V1, [X31 + 0xF9]
	0x03A18F7C LDR X0, [X10]
	0x03A18F80 STR V2, [X31 + 0xFA]
	0x03A18F84 STR X9, [X31 + 0xFB0]
	0x03A18F88 LDR W8, [X0 + 0xE0]
	0x03A18F8C CBNZ W8, 0x3A18F94
	0x03A18F90 BL 0x1C16DFC
	0x03A18F94 ADD X0, X31, 0xCD8
	0x03A18F98 ADD X1, X31, 0xFE0
	0x03A18F9C MOVZ W2, 0x2B8
	0x03A18FA0 BL 0x3EB1AC0
	0x03A18FA4 ADD X0, X31, 0x1000
	0x03A18FA8 ADD X1, X31, 0x1000
	0x03A18FAC ADD X0, X0, 0x578
	0x03A18FB0 ADD X1, X1, 0x640
	0x03A18FB4 MOVZ W2, 0xC4
	0x03A18FB8 BL 0x3EB1AC0
	0x03A18FBC LDR V0, [X31 + 0xFC]
	0x03A18FC0 LDR X8, [X31 + 0xFD0]
	0x03A18FC4 LDR V1, [X31 + 0xF9]
	0x03A18FC8 LDR V2, [X31 + 0xFA]
	0x03A18FCC LDR X9, [X31 + 0xFB0]
	0x03A18FD0 STR V0, [X31 + 0xCC]
	0x03A18FD4 STR X8, [X31 + 0xCD0]
	0x03A18FD8 STR V1, [X31 + 0xC9]
	0x03A18FDC STR V2, [X31 + 0xCA]
	0x03A18FE0 STR X9, [X31 + 0xCB0]
	0x03A18FE4 LDR X0, [X31 + 0xB8]
	0x03A18FE8 ADD X3, X31, 0x1000
	0x03A18FEC ADD X6, X31, 0x1000
	0x03A18FF0 ADD X2, X31, 0xCD8
	0x03A18FF4 ADD X3, X3, 0x578
	0x03A18FF8 ADD X4, X31, 0xCC0
	0x03A18FFC ADD X5, X31, 0xC90
	0x03A19000 ADD X6, X6, 0x314
	0x03A19004 MOV X1, X24
	0x03A19008 BL 0x3A19DF4
	0x03A1900C LDR X0, [X29]
	0x03A19010 LDR W8, [X0 + 0xE0]
	0x03A19014 CBNZ W8, 0x3A19020
	0x03A19018 BL 0x1C16DFC
	0x03A1901C LDR X0, [X29]
	0x03A19020 LDR X8, [X0 + 0xB8]
	0x03A19024 LDR X2, [X8 + 0x38]
	0x03A19028 STRB W31, [X31 + 0xFE0]
	0x03A1902C ADD X0, X31, 0xFE0
	0x03A19030 MOV X1, X19
	0x03A19034 MOV X3, X31
	0x03A19038 BL 0x39B1DB0
	0x03A1903C LDRB W8, [X31 + 0xFE0]
	0x03A19040 LDR X1, [X31 + 0xA0]
	0x03A19044 ADD X9, X31, 0x1000
	0x03A19048 ADD X9, X9, 0x300
	0x03A1904C ADD X0, X31, 0xFE0
	0x03A19050 MOVZ W2, 0x2B8
	0x03A19054 STRB W8, [X9]
	0x03A19058 BL 0x3EB1AC0
	0x03A1905C ADRP X8, 0x73B000
	0x03A19060 LDR X8, [X8 + 0x658]
	0x03A19064 LDR W24, [X23 + 0x20]!
	0x03A19068 LDR X0, [X8]
	0x03A1906C LDR W8, [X0 + 0xE0]
	0x03A19070 CBNZ W8, 0x3A19078
	0x03A19074 BL 0x1C16DFC
	0x03A19078 ADD X0, X31, 0x9D8
	0x03A1907C ADD X1, X31, 0xFE0
	0x03A19080 MOVZ W2, 0x2B8
	0x03A19084 BL 0x3EB1AC0
	0x03A19088 LDR X0, [X31 + 0xB8]
	0x03A1908C ADD X1, X31, 0x9D8
	0x03A19090 MOV X2, X19
	0x03A19094 MOV W3, W24
	0x03A19098 MOV X4, X23
	0x03A1909C MOV X5, X26

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x9CA000
	007 Move X20, 0x73D000
	008 Move W8, [X21+4051]
	009 Move X20, [X20+1608]
	010 Move X19, X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x704000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move X0, 0x73D000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4051], W8
	023 Move X0, [X20]
	024 Move [X31+120], W31
	025 Move X19, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Add X0, X31, 120
	033 Move X1, X19
	034 Move X3, X31
	035 Move X2, [X8]
	036 Call ProfilingScope..ctor, X0, X1, X2
	037 Add X8, X31, 40
	038 Move W0, 2
	039 Move X1, X31
	040 Call RenderTargetIdentifier.op_Implicit, X0
	041 Move X8, 0x704000
	042 Move X8, [X8+2296]
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X9, [X31+72]
	046 Move X0, [X8]
	047 Move [X31+80], V0
	048 Move [X31+88], V1
	049 Move [X31+112], X9
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move V0, [X31+80]
	055 Move V1, [X31+96]
	056 Move X8, [X31+112]
	057 Move [X31], V0
	058 Move [X31+8], V1
	059 Move [X31+32], X8
	060 Add X1, X31, 0
	061 Move S0, W31
	062 Move S1, W31
	063 Move S2, W31
	064 Move S3, 1
	065 Move W2, 2
	066 Move W4, 1
	067 Move X0, X19
	068 Move W3, W31
	069 Move X5, X31
	070 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	071 Add X0, X31, 120
	072 Move X1, X31
	073 Call ProfilingScope.Dispose, X0
	074 Move X20, [X31+144]
	075 Move X19, [X31+152]
	076 Move X30, [X31+128]
	077 Move X21, [X31+136]
	078 Add X31, X31, 160
	079 Return 
	080 Move X20, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X20
	083 Call 0x3EB2AD0
	084 Move X19, [X0]
	085 Call 0x3EB2AE0
	086 Add X0, X31, 120
	087 Move X1, X31
	088 Call ProfilingScope.Dispose, X0
	089 Compare X19, 0
	090 JumpIfEqual {74}
	091 Move X0, X19
	092 Call 0x1C17F18
	093 Move X19, X31
	094 Move X20, X0
	095 Add X0, X31, 120
	096 Move X1, X31
	097 Call ProfilingScope.Dispose, X0
	098 Compare X19, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X20
	101 Call 0x1D2D690
	102 Move X0, X19
	103 Call 0x1C17F18
	104 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A190A0 BL 0x3A1A45C
	0x03A190A4 MOV X24, X31
	0x03A190A8 MOVZ W23, 0xF
	0x03A190AC ADD X0, X31, 0x1000
	0x03A190B0 ADD X0, X0, 0x300
	0x03A190B4 MOV X1, X31
	0x03A190B8 BL 0x39B1DB4
	0x03A190BC CBNZ X24, 0x3A19C90
	0x03A190C0 CMP W23, 0xF
	0x03A190C4 B.EQ 0x3A190CC
	0x03A190C8 CBNZ W23, 0x3A19C0C
	0x03A190CC LDR W8, [X31 + 0x9C]
	0x03A190D0 ADD X25, X25, 0x1
	0x03A190D4 CMP W8, W20
	0x03A190D8 B.NE 0x3A18DE0
	0x03A190DC B 0x3A19110
	0x03A190E0 CMP W1, 0x1
	0x03A190E4 MOV X23, X0
	0x03A190E8 STR X1, [X31 + 0x80]
	0x03A190EC B.NE 0x3A19CA0
	0x03A190F0 MOV X0, X23
	0x03A190F4 BL 0x3EB1AD0
	0x03A190F8 LDR X24, [X0]
	0x03A190FC BL 0x3EB1AE0
	0x03A19100 MOV W23, W31
	0x03A19104 B 0x3A190AC
	0x03A19108 STR W31, [X31 + 0x9C]
	0x03A1910C B 0x3A1911C
	0x03A19110 STR W20, [X31 + 0x9C]
	0x03A19114 LDR X25, [X31 + 0x40]
	0x03A19118 LDR X27, [X31 + 0xB8]
	0x03A1911C ADD X0, X31, 0x1000
	0x03A19120 ADD X0, X0, 0x308
	0x03A19124 MOV X1, X31
	0x03A19128 BL 0x39B1DB4
	0x03A1912C LDR X8, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9C9000
	007 Move X22, 0x738000
	008 Move X19, 0x73C000
	009 Move X20, 0x73C000
	010 Move W8, [X21+4052]
	011 Move X22, [X22+1432]
	012 Move X19, [X19+1616]
	013 Move X20, [X20+1608]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x73C000
	019 Move X0, [X0+1608]
	020 Call 0x1C17CF4
	021 Move X0, 0x738000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x73C000
	025 Move X0, [X0+1616]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+4052], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X2, X31
	033 Move X19, X0
	034 Call ProfilingSampler..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

