Type: UnityEngine.Rendering.Universal.DecalUpdateCullingGroupSystem

Method: System.Single get_boundingDistance()

Disassembly:
	0x03A42B2C MOV X0, X31
	0x03A42B30 BL 0x3C3BDEC
	0x03A42B34 STR W0, [X31 + 0x88]
	0x03A42B38 ADD X0, X31, 0x88
	0x03A42B3C MOV X1, X31
	0x03A42B40 BL 0x337B6E0
	0x03A42B44 LDR X8, [X23]
	0x03A42B48 LDR X2, [X24]
	0x03A42B4C MOV X3, X0
	0x03A42B50 MOV X1, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {12}
	008 Move V0, [X8+32]
	009 Move X30, [X31+16]
	010 Return V0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void set_boundingDistance(System.Single value)

Disassembly:
	0x03A42B54 MOV X0, X8
	0x03A42B58 MOV X4, X31
	0x03A42B5C BL 0x32277C4
	0x03A42B60 LDR X8, [X25]
	0x03A42B64 MOV X22, X0
	0x03A42B68 LDR W9, [X8 + 0xE0]
	0x03A42B6C CBNZ W9, 0x3A42B78
	0x03A42B70 MOV X0, X8
	0x03A42B74 BL 0x1C16DFC
	0x03A42B78 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {12}
	008 Move [X8+32], S0
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void .ctor(UnityEngine.Rendering.Universal.DecalEntityManager entityManager, System.Single drawDistance)

Disassembly:
	0x03A42B7C MOV X1, X31
	0x03A42B80 BL 0x3C0649C
	0x03A42B84 LDR X22, [X20 + 0x80]
	0x03A42B88 STR X21, [X20 + 0x78]
	0x03A42B8C CBZ X22, 0x3A42CA8
	0x03A42B90 CBZ X21, 0x3A42CA8
	0x03A42B94 LDR W8, [X22 + 0x18]
	0x03A42B98 LDR W1, [X21 + 0x18]
	0x03A42B9C CMP W8, W1
	0x03A42BA0 B.EQ 0x3A42BC0
	0x03A42BA4 ADRP X8, 0x712000
	0x03A42BA8 LDR X8, [X8 + 0xB18]
	0x03A42BAC LDR X0, [X8]
	0x03A42BB0 BL 0x1C16D6C
	0x03A42BB4 MOV X22, X0
	0x03A42BB8 STR X0, [X20 + 0x80]
	0x03A42BBC CBZ X0, 0x3A42CA8
	0x03A42BC0 MOV W23, W31
	0x03A42BC4 ADD X24, X21, 0x20
	0x03A42BC8 MOVZ W25, 0x20
	0x03A42BCC LDR W8, [X22 + 0x18]
	0x03A42BD0 CMP W23, W8
	0x03A42BD4 B.GE 0x3A42C70
	0x03A42BD8 LDR W8, [X21 + 0x18]
	0x03A42BDC CMP W23, W8
	0x03A42BE0 B.CS 0x3A42CA4
	0x03A42BE4 LDR X8, [X24]
	0x03A42BE8 CBZ X8, 0x3A42CA8
	0x03A42BEC LDUR V0, [X8 + 0x38]
	0x03A42BF0 LDUR V1, [X8 + 0x28]
	0x03A42BF4 LDR X9, [X8 + 0x48]
	0x03A42BF8 ADD X0, X31, 0x60
	0x03A42BFC ADD X1, X31, 0x30
	0x03A42C00 STP V1, V0, [X31 + 0x30]
	0x03A42C04 MOVI V0.2D, 0x0
	0x03A42C08 MOVN W3, 0x0
	0x03A42C0C MOVN W4, 0x0
	0x03A42C10 MOV W2, W31
	0x03A42C14 MOV X5, X31
	0x03A42C18 STR X31, [X31 + 0x80]
	0x03A42C1C STR X9, [X31 + 0x50]
	0x03A42C20 STP V0, V0, [X31 + 0x60]
	0x03A42C24 BL 0x3C4B098
	0x03A42C28 LDR X8, [X31 + 0x80]
	0x03A42C2C LDP V1, V0, [X31 + 0x60]
	0x03A42C30 STR X8, [X31 + 0x20]
	0x03A42C34 STP V1, V0, [X31]
	0x03A42C38 LDR W8, [X22 + 0x18]
	0x03A42C3C CMP W23, W8
	0x03A42C40 B.CS 0x3A42CA4
	0x03A42C44 LDR X8, [X31 + 0x20]
	0x03A42C48 LDP V1, V0, [X31]
	0x03A42C4C ADD X9, X22, X25
	0x03A42C50 ADD W23, W23, 0x1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x9A1000
	008 Move X22, 0x6B2000
	009 Move W8, [X21+360]
	010 Move X22, [X22+1592]
	011 Move V8, V0
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x70F000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x6B2000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move X0, 0x714000
	025 Move X0, [X0+3016]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+360], W8
	029 Move X0, [X22]
	030 Move W1, 1
	031 Call 0x1C17D6C
	032 Move [X19+16], X0
	033 Move X0, X19
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 Move X8, [X19+16]
	037 Move [X19+32], X20
	038 Compare X8, 0
	039 JumpIfEqual {62}
	040 Move W9, [X8+24]
	041 Compare W9, 0
	042 JumpIfEqual {63}
	043 Move X9, 0x70F000
	044 Move X9, [X9+1432]
	045 Move [X8+32], S8
	046 Move X20, 0x714000
	047 Move X0, [X9]
	048 Move X20, [X20+3016]
	049 Call 0x1C17F10
	050 Move X1, [X20]
	051 Move X2, X31
	052 Move X20, X0
	053 Call ProfilingSampler..ctor, X0, X1
	054 Move [X19+40], X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+8]
	060 Move V8, [X31+48]
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Void Execute(UnityEngine.Camera camera)

Disassembly:
	0x03A42C54 STR X8, [X9 + 0x20]
	0x03A42C58 STP V1, V0, [X9]
	0x03A42C5C LDR X22, [X20 + 0x80]
	0x03A42C60 ADD X25, X25, 0x28
	0x03A42C64 ADD X24, X24, 0x8
	0x03A42C68 CBNZ X22, 0x3A42BCC
	0x03A42C6C B 0x3A42CA8
	0x03A42C70 CBZ X19, 0x3A42CA8
	0x03A42C74 LDR X8, [X19 + 0x48]
	0x03A42C78 LDUR V0, [X19 + 0x38]
	0x03A42C7C LDUR V1, [X19 + 0x28]
	0x03A42C80 STR X19, [X20 + 0x98]
	0x03A42C84 STR X8, [X20 + 0xC0]
	0x03A42C88 LDP X22, X21, [X31 + 0xB0]
	0x03A42C8C STP V1, V0, [X20 + 0xA0]
	0x03A42C90 LDP X20, X19, [X31 + 0xC0]
	0x03A42C94 LDP X24, X23, [X31 + 0xA0]
	0x03A42C98 LDP X30, X25, [X31 + 0x90]
	0x03A42C9C ADD X31, X31, 0xD0
	0x03A42CA0 RET
	0x03A42CA4 BL 0x1C16F28
	0x03A42CA8 BL 0x1C16F20
	0x03A42CAC SUB X31, X31, 0x120
	0x03A42CB0 STP X29, X30, [X31 + 0xE0]
	0x03A42CB4 STP X24, X23, [X31 + 0xF0]
	0x03A42CB8 STP X22, X21, [X31 + 0x100]
	0x03A42CBC STP X20, X19, [X31 + 0x110]
	0x03A42CC0 MRS X22, 0xC000
	0x03A42CC4 LDR X8, [X22 + 0x28]
	0x03A42CC8 ADRP X21, 0x9A0000
	0x03A42CCC ADRP X23, 0x70E000
	0x03A42CD0 MOV X20, X2
	0x03A42CD4 STR X8, [X31 + 0xD8]
	0x03A42CD8 STR X1, [X31 + 0x8]
	0x03A42CDC LDRB W8, [X21 + 0x16E]
	0x03A42CE0 LDR X23, [X23 + 0xC80]
	0x03A42CE4 MOV X19, X0
	0x03A42CE8 TBNZ X8, 0x0, 0x3A42D48
	0x03A42CEC ADRP X0, 0x6D9000
	0x03A42CF0 LDR X0, [X0 + 0x8F8]
	0x03A42CF4 BL 0x1C16CF4
	0x03A42CF8 ADRP X0, 0x713000
	0x03A42CFC LDR X0, [X0 + 0xC10]
	0x03A42D00 BL 0x1C16CF4
	0x03A42D04 ADRP X0, 0x70E000
	0x03A42D08 LDR X0, [X0 + 0xC80]
	0x03A42D0C BL 0x1C16CF4
	0x03A42D10 ADRP X0, 0x713000
	0x03A42D14 LDR X0, [X0 + 0xC18]
	0x03A42D18 BL 0x1C16CF4
	0x03A42D1C ADRP X0, 0x713000
	0x03A42D20 LDR X0, [X0 + 0xC20]
	0x03A42D24 BL 0x1C16CF4
	0x03A42D28 ADRP X0, 0x713000
	0x03A42D2C LDR X0, [X0 + 0x6E8]
	0x03A42D30 BL 0x1C16CF4
	0x03A42D34 ADRP X0, 0x713000
	0x03A42D38 LDR X0, [X0 + 0xC28]
	0x03A42D3C BL 0x1C16CF4
	0x03A42D40 MOVZ W8, 0x1
	0x03A42D44 STRB W8, [X21 + 0x16E]
	0x03A42D48 ADD X0, X31, 0x10
	0x03A42D4C MOVZ W2, 0xC4
	0x03A42D50 MOV W1, W31
	0x03A42D54 BL 0x3EB1B10
	0x03A42D58 STRB W31, [X31]
	0x03A42D5C LDR W3, [X20 + 0x18C]
	0x03A42D60 LDR X1, [X19 + 0x100]
	0x03A42D64 ADD X8, X31, 0x10
	0x03A42D68 MOV X2, X20
	0x03A42D6C BL 0x3A42FD4
	0x03A42D70 LDR X21, [X20]
	0x03A42D74 LDR X2, [X19 + 0xF8]
	0x03A42D78 ADD X0, X31, 0x0
	0x03A42D7C MOV X3, X31
	0x03A42D80 MOV X1, X21
	0x03A42D84 BL 0x39B1DB0
	0x03A42D88 LDR X0, [X23]
	0x03A42D8C LDR W8, [X0 + 0xE0]
	0x03A42D90 CBNZ W8, 0x3A42D98
	0x03A42D94 BL 0x1C16DFC
	0x03A42D98 ADD X0, X31, 0x8
	0x03A42D9C MOV X1, X21
	0x03A42DA0 MOV X2, X31
	0x03A42DA4 BL 0x3C58FE4
	0x03A42DA8 CBZ X21, 0x3A42F28
	0x03A42DAC MOV X0, X21
	0x03A42DB0 MOV X1, X31
	0x03A42DB4 BL 0x3C4C310
	0x03A42DB8 ADRP X8, 0x713000
	0x03A42DBC LDR X8, [X8 + 0xC10]
	0x03A42DC0 LDR X0, [X8]
	0x03A42DC4 LDR W8, [X0 + 0xE0]
	0x03A42DC8 CBNZ W8, 0x3A42DD0
	0x03A42DCC BL 0x1C16DFC
	0x03A42DD0 ADD X1, X20, 0x18
	0x03A42DD4 MOV X0, X21
	0x03A42DD8 MOV X2, X31
	0x03A42DDC BL 0x3AA81DC
	0x03A42DE0 LDR X8, [X19 + 0x110]
	0x03A42DE4 CBZ X8, 0x3A42F2C
	0x03A42DE8 ADRP X9, 0x6D9000
	0x03A42DEC LDR X9, [X9 + 0x8F8]
	0x03A42DF0 LDR W24, [X8 + 0x10]
	0x03A42DF4 LDR X0, [X9]
	0x03A42DF8 LDR W9, [X0 + 0xE0]
	0x03A42DFC CBNZ W9, 0x3A42E04
	0x03A42E00 BL 0x1C16DFC
	0x03A42E04 ADRP X8, 0x713000
	0x03A42E08 LDR X8, [X8 + 0xC28]
	0x03A42E0C CMP W24, 0x0
	0x03A42E10 CSET W2, EQ
	0x03A42E14 LDR X1, [X8]
	0x03A42E18 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9A1000
	009 Move W8, [X21+361]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x714000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0x714000
	020 Move X0, [X0+2016]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+361], W8
	024 Move [X31+8], W31
	025 Move X2, [X19+40]
	026 Add X0, X31, 8
	027 Move X1, X31
	028 Move X3, X31
	029 Call ProfilingScope..ctor, X0, X1, X2
	030 Move X8, [X19+32]
	031 Move [X19+24], X20
	032 Compare X8, 0
	033 JumpIfEqual {78}
	034 Move X23, 0x714000
	035 Move X24, 0x714000
	036 Move X23, [X23+2016]
	037 Move X24, [X24+2000]
	038 Move W20, W31
	039 Move W9, [X8+48]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X8+24]
	042 Compare X0, 0
	043 JumpIfEqual {93}
	044 Move X2, [X23]
	045 Move W1, W20
	046 Call List`1<Object>.get_Item, X0, X1
	047 Move X8, [X19+32]
	048 Compare X8, 0
	049 JumpIfEqual {91}
	050 Move X21, X0
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {92}
	054 Move X2, [X24]
	055 Move W1, W20
	056 Call List`1<Object>.get_Item, X0, X1
	057 Move X8, [X19+32]
	058 Compare X8, 0
	059 JumpIfEqual {90}
	060 Move X22, X0
	061 Move X0, [X8+32]
	062 Compare X0, 0
	063 JumpIfEqual {94}
	064 Move X2, [X24]
	065 Move W1, W20
	066 Call List`1<Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {95}
	069 Move W3, [X0+16]
	070 Move X0, X19
	071 Move X1, X21
	072 Move X2, X22
	073 Call DecalUpdateCullingGroupSystem.Execute, X0, X1, X2, X3
	074 Move X8, [X19+32]
	075 Add W20, W20, 1
	076 Compare X8, 0
	077 JumpIfNotEqual {39}
	078 Call 0x1C17F20
	079 Add X0, X31, 8
	080 Move X1, X31
	081 Call ProfilingScope.Dispose, X0
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Return 
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Call 0x1C17F20
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Add X0, X31, 8
	103 Move X1, X31
	104 Call ProfilingScope.Dispose, X0
	105 Compare X20, 0
	106 JumpIfEqual {82}
	107 Move X0, X20
	108 Call 0x1C17F18
	109 Move X20, X31
	110 Move X19, X0
	111 Add X0, X31, 8
	112 Move X1, X31
	113 Call ProfilingScope.Dispose, X0
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X19
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.Universal.DecalCachedChunk cachedChunk, UnityEngine.Rendering.Universal.DecalCulledChunk culledChunk, System.Int32 count)

Disassembly:
	0x03A42E1C MOV X3, X31
	0x03A42E20 BL 0x39E9618
	0x03A42E24 LDR X8, [X19 + 0x110]
	0x03A42E28 CBZ X8, 0x3A42F30
	0x03A42E2C ADRP X9, 0x713000
	0x03A42E30 LDR W8, [X8 + 0x10]
	0x03A42E34 LDR X9, [X9 + 0xC20]
	0x03A42E38 CMP W8, 0x1
	0x03A42E3C LDR X1, [X9]
	0x03A42E40 CSET W2, EQ
	0x03A42E44 MOV X0, X21
	0x03A42E48 MOV X3, X31
	0x03A42E4C BL 0x39E9618
	0x03A42E50 LDR X8, [X19 + 0x110]
	0x03A42E54 CBZ X8, 0x3A42F34
	0x03A42E58 ADRP X9, 0x713000
	0x03A42E5C LDR W8, [X8 + 0x10]
	0x03A42E60 LDR X9, [X9 + 0xC18]
	0x03A42E64 CMP W8, 0x2
	0x03A42E68 LDR X1, [X9]
	0x03A42E6C CSET W2, EQ
	0x03A42E70 MOV X0, X21
	0x03A42E74 MOV X3, X31
	0x03A42E78 BL 0x39E9618
	0x03A42E7C ADRP X8, 0x713000
	0x03A42E80 LDR X8, [X8 + 0x6E8]
	0x03A42E84 LDRB W2, [X19 + 0x128]
	0x03A42E88 LDR X1, [X8]
	0x03A42E8C MOV X0, X21
	0x03A42E90 MOV X3, X31
	0x03A42E94 BL 0x39E9618
	0x03A42E98 ADD X0, X31, 0x8
	0x03A42E9C MOV X1, X21
	0x03A42EA0 MOV X2, X31
	0x03A42EA4 BL 0x3C58FE4
	0x03A42EA8 MOV X0, X21
	0x03A42EAC MOV X1, X31
	0x03A42EB0 BL 0x3C4C310
	0x03A42EB4 LDR X0, [X19 + 0x108]
	0x03A42EB8 CBZ X0, 0x3A42EC4
	0x03A42EBC MOV X1, X21
	0x03A42EC0 BL 0x3A3BB9C
	0x03A42EC4 LDR X0, [X23]
	0x03A42EC8 LDP X21, X20, [X20 + 0x8]
	0x03A42ECC LDR W8, [X0 + 0xE0]
	0x03A42ED0 CBNZ W8, 0x3A42ED8
	0x03A42ED4 BL 0x1C16DFC
	0x03A42ED8 ADD X4, X19, 0xE0
	0x03A42EDC ADD X0, X31, 0x8
	0x03A42EE0 ADD X3, X31, 0x10
	0x03A42EE4 MOV X1, X21
	0x03A42EE8 MOV X2, X20
	0x03A42EEC MOV X5, X31
	0x03A42EF0 BL 0x3C58AC8
	0x03A42EF4 ADD X0, X31, 0x0
	0x03A42EF8 MOV X1, X31
	0x03A42EFC BL 0x39B1DB4
	0x03A42F00 LDR X8, [X22 + 0x28]
	0x03A42F04 LDR X9, [X31 + 0xD8]
	0x03A42F08 CMP X8, X9
	0x03A42F0C B.NE 0x3A42F38
	0x03A42F10 LDP X20, X19, [X31 + 0x110]
	0x03A42F14 LDP X22, X21, [X31 + 0x100]
	0x03A42F18 LDP X24, X23, [X31 + 0xF0]
	0x03A42F1C LDP X29, X30, [X31 + 0xE0]
	0x03A42F20 ADD X31, X31, 0x120
	0x03A42F24 RET
	0x03A42F28 BL 0x1C16F20
	0x03A42F2C BL 0x1C16F20
	0x03A42F30 BL 0x1C16F20
	0x03A42F34 BL 0x1C16F20
	0x03A42F38 BL 0x3EB1B20
	0x03A42F3C B 0x3A42F70
	0x03A42F40 B 0x3A42F70
	0x03A42F44 B 0x3A42F70
	0x03A42F48 B 0x3A42F70
	0x03A42F4C B 0x3A42F70
	0x03A42F50 B 0x3A42F70
	0x03A42F54 B 0x3A42F70

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x9A1000
	010 Move W8, [X23+362]
	011 Move W21, W3
	012 Move X19, X2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x714000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+362], W8
	024 Compare X22, 0
	025 JumpIfEqual {97}
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Add X0, X31, 0
	028 Move X1, X31
	029 Move [X31], V0
	030 Call JobHandle.Complete, X0
	031 Compare X19, 0
	032 JumpIfEqual {97}
	033 Move X23, [X19+72]
	034 Compare X23, 0
	035 JumpIfEqual {97}
	036 Move X1, [X20+24]
	037 Move X0, X23
	038 Move X2, X31
	039 Call CullingGroup.set_targetCamera, X0, X1
	040 Move X0, [X20+24]
	041 Compare X0, 0
	042 JumpIfEqual {97}
	043 Move X1, X31
	044 Call Component.get_transform, X0
	045 Compare X0, 0
	046 JumpIfEqual {97}
	047 Move X24, 0x714000
	048 Move X24, [X24+3024]
	049 Move X1, X31
	050 Call Transform.get_position, X0
	051 Move X0, X23
	052 Move X1, X31
	053 Call CullingGroup.SetDistanceReferencePoint, X0, X1
	054 Move X1, [X20+16]
	055 Move X0, X23
	056 Move X2, X31
	057 Call CullingGroup.SetBoundingDistances, X0, X1
	058 Move X1, [X22+328]
	059 Move X2, [X24]
	060 Add X0, X22, 216
	061 Call NativeArray`1<BoundingSphere>.CopyTo, X0, X1
	062 Move X1, [X22+328]
	063 Move X0, X23
	064 Move X2, X31
	065 Call CullingGroup.SetBoundingSpheres, X0, X1
	066 Move X0, X23
	067 Move W1, W21
	068 Move X2, X31
	069 Call CullingGroup.SetBoundingSphereCount, X0, X1
	070 Move X0, [X20+24]
	071 Compare X0, 0
	072 JumpIfEqual {97}
	073 Move X1, X31
	074 Call Component.get_transform, X0
	075 Compare X0, 0
	076 JumpIfEqual {97}
	077 Move X1, X31
	078 Call Transform.get_position, X0
	079 Move [X19+40], S0
	080 Move [X19+48], S1
	081 Move [X19+48], S2
	082 Move X0, [X20+24]
	083 Compare X0, 0
	084 JumpIfEqual {97}
	085 Move X1, X31
	086 Call Camera.get_cullingMask, X0
	087 Move [X19+64], W0
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move X30, [X31+16]
	095 Add X31, X31, 80
	096 Return 
	097 Call 0x1C17F20

Method: System.UInt64 GetSceneCullingMaskFromCamera(UnityEngine.Camera camera)

Disassembly:
	0x03A42F58 B 0x3A42F70
	0x03A42F5C B 0x3A42F70

ISIL:
	001 Move X0, X31
	002 Return X0

