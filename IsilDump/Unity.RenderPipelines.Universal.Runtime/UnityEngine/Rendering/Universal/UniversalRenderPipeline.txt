Type: UnityEngine.Rendering.Universal.UniversalRenderPipeline

Method: System.Single get_maxShadowBias()

Disassembly:
	0x03A8A2D0 STRB W8, [X31 + 0x30]
	0x03A8A2D4 MOV X0, X20

ISIL:
	001 Move S0, 10
	002 Return V0

Method: System.Single get_minRenderScale()

Disassembly:
	0x03A8A2D8 MOV X1, X23
	0x03A8A2DC MOV X2, X31
	0x03A8A2E0 BL 0x3C54940

ISIL:
	001 Move X8, -49934336
	002 Move V0, [X8+188]
	003 Return V0

Method: System.Single get_maxRenderScale()

Disassembly:
	0x03A8A2E4 MOV X23, X31
	0x03A8A2E8 MOVZ W21, 0x6

ISIL:
	001 Move S0, 2
	002 Return V0

Method: System.Int32 get_maxNumIterationsEnclosingSphere()

Disassembly:
	0x03A8A2EC ADD X0, X31, 0x30
	0x03A8A2F0 MOV X1, X31

ISIL:
	001 Move W0, 1000
	002 Return X0

Method: System.Int32 get_maxPerObjectLights()

Disassembly:
	0x03A8A2F4 BL 0x39B1DB4
	0x03A8A2F8 CBNZ X23, 0x3A8A450
	0x03A8A2FC CMP W21, 0x6
	0x03A8A300 B.EQ 0x3A8A308
	0x03A8A304 CBNZ W21, 0x3A8A420
	0x03A8A308 LDR W8, [X19 + 0x18]
	0x03A8A30C ADD W22, W22, 0x1
	0x03A8A310 CMP W22, W8
	0x03A8A314 B.LT 0x3A8A1B8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call SystemInfo.get_graphicsDeviceType
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 8
	006 Move W9, 4
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Int32 get_maxVisibleAdditionalLights()

Disassembly:
	0x03A8A318 B 0x3A8A374
	0x03A8A31C CMP W1, 0x1
	0x03A8A320 MOV X21, X0
	0x03A8A324 STR X1, [X31 + 0x8]
	0x03A8A328 B.NE 0x3A8A49C
	0x03A8A32C MOV X0, X21
	0x03A8A330 BL 0x3EB1AD0
	0x03A8A334 LDR X23, [X0]
	0x03A8A338 BL 0x3EB1AE0
	0x03A8A33C MOV W21, W31
	0x03A8A340 B 0x3A8A2EC
	0x03A8A344 CMP W1, 0x1
	0x03A8A348 MOV X21, X0
	0x03A8A34C STR X1, [X31 + 0x8]
	0x03A8A350 B.NE 0x3A8A47C
	0x03A8A354 MOV X0, X21
	0x03A8A358 BL 0x3EB1AD0
	0x03A8A35C LDR X8, [X0]
	0x03A8A360 STR X8, [X31]
	0x03A8A364 BL 0x3EB1AE0
	0x03A8A368 LDR X21, [X31]
	0x03A8A36C MOV W27, W31
	0x03A8A370 B 0x3A8A258
	0x03A8A374 LDR X0, [X24]
	0x03A8A378 LDR W8, [X0 + 0xE0]
	0x03A8A37C CBNZ W8, 0x3A8A388
	0x03A8A380 BL 0x1C16DFC
	0x03A8A384 LDR X0, [X24]
	0x03A8A388 LDR X8, [X0 + 0xB8]
	0x03A8A38C LDR X0, [X8 + 0x8]
	0x03A8A390 CBZ X0, 0x3A8A46C
	0x03A8A394 MOV X1, X31
	0x03A8A398 BL 0x398C550
	0x03A8A39C LDR X8, [X24]
	0x03A8A3A0 LDR X8, [X8 + 0xB8]
	0x03A8A3A4 LDR X21, [X8 + 0x10]
	0x03A8A3A8 MOV X0, X31
	0x03A8A3AC BL 0x3C3C88C
	0x03A8A3B0 MOV W1, W0
	0x03A8A3B4 CBZ X21, 0x3A8A470
	0x03A8A3B8 MOV X0, X21
	0x03A8A3BC MOV X2, X31
	0x03A8A3C0 BL 0x3A74B0C
	0x03A8A3C4 LDR X0, [X25]
	0x03A8A3C8 LDR W8, [X0 + 0xE0]
	0x03A8A3CC CBNZ W8, 0x3A8A3D8
	0x03A8A3D0 BL 0x1C16DFC
	0x03A8A3D4 LDR X0, [X25]
	0x03A8A3D8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x959000
	004 Move W8, [X19+849]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x66E000
	010 Move X0, [X0+712]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+849], W8
	014 Move W0, 17
	015 Move X1, X31
	016 Call GraphicsSettings.HasShaderDefine, X0
	017 Move W19, W0
	018 Move X0, X31
	019 Call SystemInfo.get_graphicsDeviceType
	020 Move TEMP, X19
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {26}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, 16
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Call SystemInfo.get_graphicsDeviceType
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X31
	031 Call SystemInfo.get_graphicsDeviceType
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 256
	034 Move X0, X31
	035 Call SystemInfo.get_graphicsDeviceType
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0x66E000
	038 Move X8, [X8+712]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X31
	045 Call Graphics.get_minOpenGLESVersion
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, 32
	048 Move X30, [X31+16]
	049 Move X19, [X31+24]
	050 Return X0

Method: System.Int32 get_lightsPerTile()

Disassembly:
	0x03A8A3DC LDR X2, [X8 + 0x8]
	0x03A8A3E0 STRB W31, [X31 + 0x10]
	0x03A8A3E4 ADD X0, X31, 0x10
	0x03A8A3E8 MOV X1, X31
	0x03A8A3EC MOV X3, X31
	0x03A8A3F0 BL 0x39B1DB0
	0x03A8A3F4 LDRB W8, [X31 + 0x10]
	0x03A8A3F8 STRB W8, [X31 + 0x30]
	0x03A8A3FC MOV X0, X20
	0x03A8A400 MOV X1, X19
	0x03A8A404 MOV X2, X31
	0x03A8A408 BL 0x3C547E8
	0x03A8A40C MOV X19, X31
	0x03A8A410 ADD X0, X31, 0x30
	0x03A8A414 MOV X1, X31
	0x03A8A418 BL 0x39B1DB4
	0x03A8A41C CBNZ X19, 0x3A8A474
	0x03A8A420 ADD X0, X31, 0x38
	0x03A8A424 MOV X1, X31
	0x03A8A428 BL 0x39B1DB4
	0x03A8A42C LDP X20, X19, [X31 + 0x80]
	0x03A8A430 LDP X22, X21, [X31 + 0x70]
	0x03A8A434 LDP X24, X23, [X31 + 0x60]
	0x03A8A438 LDP X26, X25, [X31 + 0x50]
	0x03A8A43C LDP X30, X27, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x959000
	005 Move X20, 0x693000
	006 Move W8, [X19+850]
	007 Move X20, [X20+2216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x693000
	013 Move X0, [X0+2216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+850], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	023 Add W8, W0, 31
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Add W9, W0, 62
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 And W0, W8, 0xFFFFFFE0
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Int32 get_maxZBinWords()

Disassembly:
	0x03A8A440 ADD X31, X31, 0x90
	0x03A8A444 RET

ISIL:
	001 Move W0, 4096
	002 Return X0

Method: System.Int32 get_maxTileWords()

Disassembly:
	0x03A8A448 MOV X0, X21
	0x03A8A44C BL 0x1C16F18
	0x03A8A450 MOV X0, X23
	0x03A8A454 BL 0x1C16F18
	0x03A8A458 BL 0x1C16F20
	0x03A8A45C MOV X0, X23
	0x03A8A460 BL 0x1C16F18
	0x03A8A464 BL 0x1C16F20
	0x03A8A468 BL 0x1C16F20
	0x03A8A46C BL 0x1C16F20
	0x03A8A470 BL 0x1C16F20
	0x03A8A474 MOV X0, X19
	0x03A8A478 BL 0x1C16F18
	0x03A8A47C STR X31, [X31]
	0x03A8A480 ADD X0, X31, 0x30
	0x03A8A484 MOV X1, X31
	0x03A8A488 BL 0x39B1DB4
	0x03A8A48C LDP X8, X1, [X31]
	0x03A8A490 CBZ X8, 0x3A8A5D8
	0x03A8A494 LDR X0, [X31]
	0x03A8A498 BL 0x1C16F18
	0x03A8A49C MOV X23, X31
	0x03A8A4A0 ADD X0, X31, 0x30
	0x03A8A4A4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x959000
	005 Move X20, 0x693000
	006 Move W8, [X19+851]
	007 Move X20, [X20+2216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x693000
	013 Move X0, [X0+2216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+851], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 0x4000
	027 Move W9, 4096
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Int32 get_maxVisibleReflectionProbes()

Disassembly:
	0x03A8A4A8 BL 0x39B1DB4
	0x03A8A4AC LDR X1, [X31 + 0x8]
	0x03A8A4B0 CBZ X23, 0x3A8A5D8
	0x03A8A4B4 MOV X0, X23
	0x03A8A4B8 BL 0x1C16F18
	0x03A8A4BC MOV X21, X0
	0x03A8A4C0 STR X1, [X31 + 0x8]
	0x03A8A4C4 B 0x3A8A4A0
	0x03A8A4C8 MOV X21, X0
	0x03A8A4CC STR X1, [X31 + 0x8]
	0x03A8A4D0 B 0x3A8A480
	0x03A8A4D4 B 0x3A8A5D4
	0x03A8A4D8 CMP W1, 0x1
	0x03A8A4DC MOV X21, X0
	0x03A8A4E0 B.NE 0x3A8A4F8
	0x03A8A4E4 MOV X0, X21
	0x03A8A4E8 BL 0x3EB1AD0
	0x03A8A4EC LDR X19, [X0]
	0x03A8A4F0 BL 0x3EB1AE0
	0x03A8A4F4 B 0x3A8A410
	0x03A8A4F8 MOV X20, X1
	0x03A8A4FC MOV X19, X31
	0x03A8A500 ADD X0, X31, 0x30
	0x03A8A504 MOV X1, X31
	0x03A8A508 BL 0x39B1DB4
	0x03A8A50C MOV X1, X20
	0x03A8A510 CBZ X19, 0x3A8A5D8
	0x03A8A514 MOV X0, X19
	0x03A8A518 BL 0x1C16F18
	0x03A8A51C MOV X20, X1
	0x03A8A520 MOV X21, X0
	0x03A8A524 B 0x3A8A500
	0x03A8A528 B 0x3A8A5D4
	0x03A8A52C B 0x3A8A5D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x959000
	005 Move X19, 0x693000
	006 Move W8, [X20+852]
	007 Move X19, [X19+2216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x66A000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move X0, 0x693000
	016 Move X0, [X0+2216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+852], W8
	020 Move X0, [X19]
	021 Move X19, 0x66A000
	022 Move W8, [X0+224]
	023 Move X19, [X19+1448]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	028 Move X8, [X19]
	029 Move W19, W0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move W0, W19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W1, 64
	039 Move X2, X31
	040 Move X30, [X31+32]
	041 Call Math.Min, X0, X1
	042 Return X0

Method: UnityEngine.Rendering.RenderPipelineGlobalSettings get_defaultSettings()

Disassembly:
	0x03A8A530 B 0x3A8A5D4
	0x03A8A534 CMP W1, 0x1

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x03A8A538 MOV X21, X0
	0x03A8A53C STR X1, [X31 + 0x8]
	0x03A8A540 B.NE 0x3A8A558
	0x03A8A544 MOV X0, X21
	0x03A8A548 BL 0x3EB1AD0
	0x03A8A54C LDR X23, [X0]

ISIL:
	001 Move X0, [X0+40]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+360]
	006 Move X1, [X8+368]
	007 CallNoReturn X2
	008 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset asset)

Disassembly:
	0x03A8A550 BL 0x3EB1AE0
	0x03A8A554 B 0x3A8A0E4
	0x03A8A558 MOV X23, X31
	0x03A8A55C ADD X0, X31, 0x30
	0x03A8A560 MOV X1, X31
	0x03A8A564 BL 0x39B1DB4
	0x03A8A568 LDR X1, [X31 + 0x8]
	0x03A8A56C CBZ X23, 0x3A8A5D8
	0x03A8A570 MOV X0, X23
	0x03A8A574 BL 0x1C16F18
	0x03A8A578 MOV X21, X0
	0x03A8A57C STR X1, [X31 + 0x8]
	0x03A8A580 B 0x3A8A55C
	0x03A8A584 B 0x3A8A5D4
	0x03A8A588 B 0x3A8A5D4
	0x03A8A58C B 0x3A8A5D4
	0x03A8A590 B 0x3A8A5D4
	0x03A8A594 B 0x3A8A5D4
	0x03A8A598 B 0x3A8A5D4
	0x03A8A59C B 0x3A8A5D4
	0x03A8A5A0 B 0x3A8A5D4
	0x03A8A5A4 B 0x3A8A5D4
	0x03A8A5A8 B 0x3A8A5D4
	0x03A8A5AC B 0x3A8A5D4
	0x03A8A5B0 B 0x3A8A5D4
	0x03A8A5B4 B 0x3A8A5D4
	0x03A8A5B8 B 0x3A8A5D4
	0x03A8A5BC B 0x3A8A5D4
	0x03A8A5C0 B 0x3A8A5D4
	0x03A8A5C4 B 0x3A8A5D4
	0x03A8A5C8 B 0x3A8A5D4
	0x03A8A5CC B 0x3A8A5D4
	0x03A8A5D0 B 0x3A8A5D4
	0x03A8A5D4 MOV X21, X0
	0x03A8A5D8 CMP W1, 0x1
	0x03A8A5DC B.NE 0x3A8A608
	0x03A8A5E0 MOV X0, X21
	0x03A8A5E4 BL 0x3EB1AD0
	0x03A8A5E8 LDR X19, [X0]
	0x03A8A5EC BL 0x3EB1AE0
	0x03A8A5F0 ADD X0, X31, 0x38
	0x03A8A5F4 MOV X1, X31
	0x03A8A5F8 BL 0x39B1DB4
	0x03A8A5FC CBZ X19, 0x3A8A42C
	0x03A8A600 MOV X0, X19
	0x03A8A604 BL 0x1C16F18
	0x03A8A608 MOV X19, X31
	0x03A8A60C B 0x3A8A614
	0x03A8A610 MOV X21, X0
	0x03A8A614 ADD X0, X31, 0x38
	0x03A8A618 MOV X1, X31
	0x03A8A61C BL 0x39B1DB4
	0x03A8A620 CBNZ X19, 0x3A8A62C
	0x03A8A624 MOV X0, X21
	0x03A8A628 BL 0x1D2C690
	0x03A8A62C MOV X0, X19
	0x03A8A630 BL 0x1C16F18
	0x03A8A634 BL 0x1990590
	0x03A8A638 STR X30, [X31 - 0x20]!
	0x03A8A63C STP X20, X19, [X31 + 0x10]
	0x03A8A640 ADRP X19, 0x958000
	0x03A8A644 ADRP X20, 0x6C6000
	0x03A8A648 LDRB W8, [X19 + 0x373]
	0x03A8A64C LDR X20, [X20 + 0x570]
	0x03A8A650 TBNZ X8, 0x0, 0x3A8A674
	0x03A8A654 ADRP X0, 0x6C6000
	0x03A8A658 LDR X0, [X0 + 0x570]
	0x03A8A65C BL 0x1C16CF4
	0x03A8A660 ADRP X0, 0x692000
	0x03A8A664 LDR X0, [X0 + 0x8A8]
	0x03A8A668 BL 0x1C16CF4
	0x03A8A66C MOVZ W8, 0x1
	0x03A8A670 STRB W8, [X19 + 0x373]
	0x03A8A674 LDR X0, [X20]
	0x03A8A678 LDR W8, [X0 + 0xE0]
	0x03A8A67C CBNZ W8, 0x3A8A684
	0x03A8A680 BL 0x1C16DFC
	0x03A8A684 MOV X0, X31
	0x03A8A688 BL 0x3C10718
	0x03A8A68C CBZ X0, 0x3A8A778
	0x03A8A690 MOV X1, X31
	0x03A8A694 BL 0x3C10824
	0x03A8A698 TBZ X0, 0x0, 0x3A8A6C8
	0x03A8A69C LDR X0, [X20]
	0x03A8A6A0 LDR W8, [X0 + 0xE0]
	0x03A8A6A4 CBNZ W8, 0x3A8A6AC
	0x03A8A6A8 BL 0x1C16DFC
	0x03A8A6AC MOV X0, X31
	0x03A8A6B0 BL 0x3C10718
	0x03A8A6B4 CBZ X0, 0x3A8A778
	0x03A8A6B8 MOV X1, X31
	0x03A8A6BC BL 0x3C10770
	0x03A8A6C0 MOV W19, W0
	0x03A8A6C4 B 0x3A8A6CC
	0x03A8A6C8 MOV W19, W31
	0x03A8A6CC MOV X0, X31
	0x03A8A6D0 BL 0x3C3C32C
	0x03A8A6D4 TBNZ X0, 0x1, 0x3A8A6E0
	0x03A8A6D8 MOV W8, W31
	0x03A8A6DC B 0x3A8A708
	0x03A8A6E0 ADRP X8, 0x692000
	0x03A8A6E4 LDR X8, [X8 + 0x8A8]
	0x03A8A6E8 LDR X0, [X8]
	0x03A8A6EC LDR W8, [X0 + 0xE0]
	0x03A8A6F0 CBNZ W8, 0x3A8A6F8
	0x03A8A6F4 BL 0x1C16DFC
	0x03A8A6F8 BL 0x3A8AB60
	0x03A8A6FC CBZ X0, 0x3A8A778
	0x03A8A700 LDRB W8, [X0 + 0x55]
	0x03A8A704 EOR W8, W8, 0x1
	0x03A8A708 AND W8, W19, W8, 0x0
	0x03A8A70C TBZ X8, 0x0, 0x3A8A738
	0x03A8A710 LDR X0, [X20]
	0x03A8A714 LDR W8, [X0 + 0xE0]
	0x03A8A718 CBNZ W8, 0x3A8A720
	0x03A8A71C BL 0x1C16DFC
	0x03A8A720 MOV X0, X31
	0x03A8A724 BL 0x3C10718
	0x03A8A728 CBZ X0, 0x3A8A778
	0x03A8A72C MOV W1, W31
	0x03A8A730 MOV X2, X31
	0x03A8A734 BL 0x3C10D28
	0x03A8A738 TBZ X19, 0x0, 0x3A8A76C
	0x03A8A73C LDR X0, [X20]
	0x03A8A740 LDR W8, [X0 + 0xE0]
	0x03A8A744 CBNZ W8, 0x3A8A74C
	0x03A8A748 BL 0x1C16DFC
	0x03A8A74C MOV X0, X31
	0x03A8A750 BL 0x3C10718
	0x03A8A754 CBZ X0, 0x3A8A778
	0x03A8A758 LDP X20, X19, [X31 + 0x10]
	0x03A8A75C MOV W1, W31
	0x03A8A760 MOV X2, X31
	0x03A8A764 LDR X30, [X31], #0x20
	0x03A8A768 B 0x3C108D8
	0x03A8A76C LDP X20, X19, [X31 + 0x10]
	0x03A8A770 LDR X30, [X31], #0x20
	0x03A8A774 RET
	0x03A8A778 BL 0x1C16F20
	0x03A8A77C STR X30, [X31 - 0x20]!
	0x03A8A780 STP X20, X19, [X31 + 0x10]
	0x03A8A784 ADRP X20, 0x958000
	0x03A8A788 ADRP X19, 0x692000
	0x03A8A78C LDRB W8, [X20 + 0x372]
	0x03A8A790 LDR X19, [X19 + 0x8A8]
	0x03A8A794 TBNZ X8, 0x0, 0x3A8A7B8
	0x03A8A798 ADRP X0, 0x692000
	0x03A8A79C LDR X0, [X0 + 0x8A8]
	0x03A8A7A0 BL 0x1C16CF4
	0x03A8A7A4 ADRP X0, 0x6C6000
	0x03A8A7A8 LDR X0, [X0 + 0x500]
	0x03A8A7AC BL 0x1C16CF4
	0x03A8A7B0 MOVZ W8, 0x1
	0x03A8A7B4 STRB W8, [X20 + 0x372]
	0x03A8A7B8 LDR X0, [X19]
	0x03A8A7BC ADRP X20, 0x6C6000
	0x03A8A7C0 LDR W8, [X0 + 0xE0]
	0x03A8A7C4 LDR X20, [X20 + 0x500]
	0x03A8A7C8 CBNZ W8, 0x3A8A7D0
	0x03A8A7CC BL 0x1C16DFC
	0x03A8A7D0 BL 0x3A8EA20
	0x03A8A7D4 LDR X8, [X20]
	0x03A8A7D8 MOV W19, W0
	0x03A8A7DC LDR W9, [X8 + 0xE0]
	0x03A8A7E0 CBNZ W9, 0x3A8A7EC
	0x03A8A7E4 MOV X0, X8
	0x03A8A7E8 BL 0x1C16DFC
	0x03A8A7EC MOV X0, X31
	0x03A8A7F0 BL 0x398528C
	0x03A8A7F4 TBZ X0, 0x0, 0x3A8A814
	0x03A8A7F8 LDR X0, [X20]
	0x03A8A7FC LDR W8, [X0 + 0xE0]
	0x03A8A800 CBNZ W8, 0x3A8A808
	0x03A8A804 BL 0x1C16DFC
	0x03A8A808 MOV X0, X31
	0x03A8A80C BL 0x3988E90
	0x03A8A810 ORR W19, W19, W0, 0x0
	0x03A8A814 AND W0, W19, 0x1
	0x03A8A818 LDP X20, X19, [X31 + 0x10]
	0x03A8A81C LDR X30, [X31], #0x20
	0x03A8A820 RET
	0x03A8A824 STR X30, [X31 - 0x20]!
	0x03A8A828 STP X20, X19, [X31 + 0x10]
	0x03A8A82C ADRP X20, 0x958000
	0x03A8A830 ADRP X19, 0x692000
	0x03A8A834 LDRB W8, [X20 + 0x36E]
	0x03A8A838 LDR X19, [X19 + 0x898]
	0x03A8A83C TBNZ X8, 0x0, 0x3A8A86C
	0x03A8A840 ADRP X0, 0x692000
	0x03A8A844 LDR X0, [X0 + 0x898]
	0x03A8A848 BL 0x1C16CF4
	0x03A8A84C ADRP X0, 0x6CA000
	0x03A8A850 LDR X0, [X0 + 0x20]
	0x03A8A854 BL 0x1C16CF4
	0x03A8A858 ADRP X0, 0x692000
	0x03A8A85C LDR X0, [X0 + 0x8A8]
	0x03A8A860 BL 0x1C16CF4
	0x03A8A864 MOVZ W8, 0x1
	0x03A8A868 STRB W8, [X20 + 0x36E]
	0x03A8A86C LDR X0, [X19]
	0x03A8A870 STRB W31, [X31 + 0x8]
	0x03A8A874 ADRP X20, 0x6CA000
	0x03A8A878 LDR W8, [X0 + 0xE0]
	0x03A8A87C LDR X20, [X20 + 0x20]
	0x03A8A880 CBNZ W8, 0x3A8A88C
	0x03A8A884 BL 0x1C16DFC
	0x03A8A888 LDR X0, [X19]
	0x03A8A88C LDR X8, [X0 + 0xB8]
	0x03A8A890 ADD X0, X31, 0x8
	0x03A8A894 MOV X1, X31
	0x03A8A898 MOV X3, X31
	0x03A8A89C LDR X2, [X8 + 0x60]
	0x03A8A8A0 BL 0x39B1DB0
	0x03A8A8A4 LDR X0, [X20]
	0x03A8A8A8 LDR W8, [X0 + 0xE0]
	0x03A8A8AC CBNZ W8, 0x3A8A8B8
	0x03A8A8B0 BL 0x1C16DFC
	0x03A8A8B4 LDR X0, [X20]
	0x03A8A8B8 LDR X8, [X0 + 0xB8]
	0x03A8A8BC LDR W0, [X8 + 0xB4]
	0x03A8A8C0 FMOV S0, 1
	0x03A8A8C4 FMOV S1, 1
	0x03A8A8C8 FMOV S2, 1
	0x03A8A8CC FMOV S3, 1
	0x03A8A8D0 MOV X1, X31
	0x03A8A8D4 BL 0x3C1431C
	0x03A8A8D8 ADRP X19, 0x692000
	0x03A8A8DC LDR X19, [X19 + 0x8A8]
	0x03A8A8E0 LDR X0, [X19]
	0x03A8A8E4 LDR W8, [X0 + 0xE0]
	0x03A8A8E8 CBNZ W8, 0x3A8A8F0
	0x03A8A8EC BL 0x1C16DFC
	0x03A8A8F0 BL 0x3A8AB60
	0x03A8A8F4 CBZ X0, 0x3A8AA80
	0x03A8A8F8 LDR W8, [X0 + 0x74]
	0x03A8A8FC CBZ W8, 0x3A8A9C8
	0x03A8A900 LDR X0, [X19]
	0x03A8A904 LDR W8, [X0 + 0xE0]
	0x03A8A908 CBNZ W8, 0x3A8A910
	0x03A8A90C BL 0x1C16DFC
	0x03A8A910 BL 0x3A8AB60
	0x03A8A914 CBZ X0, 0x3A8AA84
	0x03A8A918 LDR W8, [X0 + 0x74]
	0x03A8A91C CMP W8, 0x1
	0x03A8A920 B.NE 0x3A8AA68
	0x03A8A924 LDR X0, [X20]
	0x03A8A928 LDR W8, [X0 + 0xE0]
	0x03A8A92C CBNZ W8, 0x3A8A938
	0x03A8A930 BL 0x1C16DFC
	0x03A8A934 LDR X0, [X20]
	0x03A8A938 LDR X8, [X19]
	0x03A8A93C LDR X9, [X0 + 0xB8]
	0x03A8A940 LDR W10, [X8 + 0xE0]
	0x03A8A944 LDR W19, [X9 + 0xBC]
	0x03A8A948 CBNZ W10, 0x3A8A954
	0x03A8A94C MOV X0, X8
	0x03A8A950 BL 0x1C16DFC
	0x03A8A954 BL 0x3A8AB60
	0x03A8A958 CBZ X0, 0x3A8AA9C
	0x03A8A95C MOV X1, X31
	0x03A8A960 BL 0x3A2CC0C
	0x03A8A964 CBZ X0, 0x3A8AAA0
	0x03A8A968 LDR X0, [X0 + 0x10]
	0x03A8A96C CBZ X0, 0x3A8AAA4
	0x03A8A970 LDR X8, [X0]
	0x03A8A974 LDP X9, X1, [X8 + 0x188]
	0x03A8A978 BLR X9
	0x03A8A97C SCVTF S0, W0
	0x03A8A980 FMOV S1, 1
	0x03A8A984 FDIV S0, S1, S0
	0x03A8A988 MOV W0, W19
	0x03A8A98C MOV X1, X31
	0x03A8A990 BL 0x3C142D0
	0x03A8A994 LDR X8, [X20]
	0x03A8A998 LDR X8, [X8 + 0xB8]
	0x03A8A99C LDR W19, [X8 + 0xB8]
	0x03A8A9A0 BL 0x3A8AB60
	0x03A8A9A4 CBZ X0, 0x3A8AAA8
	0x03A8A9A8 MOV X1, X31
	0x03A8A9AC BL 0x3A2CC0C
	0x03A8A9B0 CBZ X0, 0x3A8AAAC
	0x03A8A9B4 LDR X1, [X0 + 0x10]
	0x03A8A9B8 MOV W0, W19
	0x03A8A9BC MOV X2, X31
	0x03A8A9C0 BL 0x3C14390
	0x03A8A9C4 B 0x3A8AA68
	0x03A8A9C8 LDR X0, [X20]
	0x03A8A9CC LDR W8, [X0 + 0xE0]
	0x03A8A9D0 CBNZ W8, 0x3A8A9DC
	0x03A8A9D4 BL 0x1C16DFC
	0x03A8A9D8 LDR X0, [X20]
	0x03A8A9DC LDR X8, [X19]
	0x03A8A9E0 LDR X9, [X0 + 0xB8]
	0x03A8A9E4 LDR W10, [X8 + 0xE0]
	0x03A8A9E8 LDR W19, [X9 + 0xBC]
	0x03A8A9EC CBNZ W10, 0x3A8A9F8
	0x03A8A9F0 MOV X0, X8
	0x03A8A9F4 BL 0x1C16DFC
	0x03A8A9F8 BL 0x3A8AB60
	0x03A8A9FC CBZ X0, 0x3A8AA88
	0x03A8AA00 MOV X1, X31
	0x03A8AA04 BL 0x3A2CC0C
	0x03A8AA08 CBZ X0, 0x3A8AA8C
	0x03A8AA0C LDR X0, [X0 + 0x18]
	0x03A8AA10 CBZ X0, 0x3A8AA90
	0x03A8AA14 LDR X8, [X0]
	0x03A8AA18 LDP X9, X1, [X8 + 0x188]
	0x03A8AA1C BLR X9
	0x03A8AA20 SCVTF S0, W0
	0x03A8AA24 FMOV S1, 1
	0x03A8AA28 FDIV S0, S1, S0
	0x03A8AA2C MOV W0, W19
	0x03A8AA30 MOV X1, X31
	0x03A8AA34 BL 0x3C142D0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x959000
	012 Move X22, 0x6CE000
	013 Move X23, 0x6CE000
	014 Move W8, [X21+853]
	015 Move X22, [X22+640]
	016 Move X23, [X23+648]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {79}
	023 Move X0, 0x6CA000
	024 Move X0, [X0+1024]
	025 Call 0x1C17CF4
	026 Move X0, 0x6CE000
	027 Move X0, [X0+656]
	028 Call 0x1C17CF4
	029 Move X0, 0x6CE000
	030 Move X0, [X0+640]
	031 Call 0x1C17CF4
	032 Move X0, 0x6CC000
	033 Move X0, [X0+1192]
	034 Call 0x1C17CF4
	035 Move X0, 0x6CC000
	036 Move X0, [X0+1200]
	037 Call 0x1C17CF4
	038 Move X0, 0x6C7000
	039 Move X0, [X0+1912]
	040 Call 0x1C17CF4
	041 Move X0, 0x6CE000
	042 Move X0, [X0+664]
	043 Call 0x1C17CF4
	044 Move X0, 0x6CD000
	045 Move X0, [X0+2968]
	046 Call 0x1C17CF4
	047 Move X0, 0x6C7000
	048 Move X0, [X0+2480]
	049 Call 0x1C17CF4
	050 Move X0, 0x6C7000
	051 Move X0, [X0+2240]
	052 Call 0x1C17CF4
	053 Move X0, 0x6CB000
	054 Move X0, [X0+16]
	055 Call 0x1C17CF4
	056 Move X0, 0x6CE000
	057 Move X0, [X0+672]
	058 Call 0x1C17CF4
	059 Move X0, 0x6CE000
	060 Move X0, [X0+648]
	061 Call 0x1C17CF4
	062 Move X0, 0x6CB000
	063 Move X0, [X0+3152]
	064 Call 0x1C17CF4
	065 Move X0, 0x693000
	066 Move X0, [X0+2216]
	067 Call 0x1C17CF4
	068 Move X0, 0x6C7000
	069 Move X0, [X0+1280]
	070 Call 0x1C17CF4
	071 Move X0, 0x6CE000
	072 Move X0, [X0+680]
	073 Call 0x1C17CF4
	074 Move X0, 0x6CD000
	075 Move X0, [X0+3432]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+853], W8
	079 Move X0, [X22]
	080 Call 0x1C17F10
	081 Move X1, X31
	082 Move X21, X0
	083 Call DebugDisplaySettingsUI..ctor, X0
	084 Move W8, 1
	085 Move [X20+24], X21
	086 Move [X20+48], W8
	087 Move X0, [X23]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X23]
	093 Move X8, [X0+184]
	094 Move X24, 0x6CB000
	095 Move X21, [X8+8]
	096 Move X24, [X24+3152]
	097 Compare X21, 0
	098 JumpIfNotEqual {120}
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X23]
	104 Move X9, 0x6CE000
	105 Move X8, [X0+184]
	106 Move X9, [X9+656]
	107 Move X22, [X8]
	108 Move X0, [X9]
	109 Call 0x1C17F10
	110 Move X8, 0x6CE000
	111 Move X8, [X8+672]
	112 Move X1, X22
	113 Move X3, X31
	114 Move X21, X0
	115 Move X2, [X8]
	116 Call Comparison`1<Object>..ctor, X0, X1, X2
	117 Move X8, [X23]
	118 Move X8, [X8+184]
	119 Move [X8+8], X21
	120 Move X23, 0x693000
	121 Move X23, [X23+2216]
	122 Move X0, X20
	123 Move X1, X31
	124 Move [X20+56], X21
	125 Call RenderPipeline..ctor, X0
	126 Move [X20+40], X19
	127 Move X0, [X24]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X22, 0x6C7000
	133 Move X22, [X22+2480]
	134 Call UniversalRenderPipelineGlobalSettings.get_instance
	135 Move [X20+32], X0
	136 Move X0, [X23]
	137 Move X21, [X20+40]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Call UniversalRenderPipeline.SetSupportedRenderingFeatures, X0
	144 Move X0, X31
	145 Call Screen.get_width
	146 Move W21, W0
	147 Move X0, X31
	148 Call Screen.get_height
	149 Move X8, [X22]
	150 Move W22, W0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move W0, W21
	157 Move W1, W22
	158 Move X2, X31
	159 Call RTHandles.Initialize, X0, X1
	160 Compare X19, 0
	161 JumpIfEqual {344}
	162 Move W0, [X19+232]
	163 Move X1, X31
	164 Call GraphicsSettings.set_useScriptableRenderPipelineBatching, X0
	165 Move X0, X31
	166 Call QualitySettings.get_antiAliasing
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X31
	169 Call QualitySettings.get_antiAliasing
	170 Move W0, 1
	171 Move W8, [X19+92]
	172 Move X21, 0x6C7000
	173 Move X21, [X21+1280]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W0, W8
	176 Move X1, X31
	177 Call QualitySettings.set_antiAliasing, X0
	178 Move X22, 0x6CD000
	179 Move X22, [X22+3432]
	180 Move X0, X31
	181 Call QualitySettings.get_antiAliasing
	182 Move X1, X31
	183 Call Mathf.NextPowerOfTwo, X0
	184 Move W8, W0
	185 Move X0, [X21]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move W10, 8
	188 NotImplemented "Instruction CSEL not yet implemented."
	189 Move W9, [X0+224]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSINC not yet implemented."
	192 Compare W9, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Move X24, 0x6CE000
	196 Move X24, [X24+664]
	197 Move W0, W21
	198 Move X1, X31
	199 Call XRSystem.SetDisplayMSAASamples, X0
	200 Move V0, [X19+96]
	201 Move X0, X31
	202 Call XRSystem.SetRenderScale, V0
	203 Move X0, [X22]
	204 Move X1, X31
	205 Call Shader.set_globalRenderPipeline, X0
	206 Move X0, [X23]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {212}
	210 Call 0x1C17DFC
	211 Move X0, [X23]
	212 Move X8, [X24]
	213 Move X9, [X0+184]
	214 Move X22, 0x6CA000
	215 Move W10, [X8+224]
	216 Move X21, [X9+128]
	217 Move X22, [X22+1024]
	218 Compare W10, 0
	219 JumpIfNotEqual {222}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X0, X21
	223 Move X1, X31
	224 Call Lightmapping.SetDelegate, X0
	225 Move X0, [X22]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X21, 0x959000
	231 Move W8, [X21+976]
	232 Compare W8, 0
	233 JumpIfNotEqual {239}
	234 Move X0, 0x6CA000
	235 Move X0, [X0+1024]
	236 Call 0x1C17CF4
	237 Move W8, 1
	238 Move [X21+976], W8
	239 Move X0, [X22]
	240 Move X21, 0x6CB000
	241 Move W8, [X0+224]
	242 Move X21, [X21+16]
	243 Compare W8, 0
	244 JumpIfNotEqual {247}
	245 Call 0x1C17DFC
	246 Move X0, [X22]
	247 Move X8, [X0+184]
	248 Move W9, 1
	249 Move [X8+8], W9
	250 Move X0, [X21]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X26, 0x6C7000
	256 Move X25, 0x6CE000
	257 Move X24, 0x6CD000
	258 Move X22, 0x6C7000
	259 Move X26, [X26+2240]
	260 Move X25, [X25+680]
	261 Move X24, [X24+2968]
	262 Move X22, [X22+1912]
	263 Move X0, X31
	264 Call RenderingUtils.ClearSystemInfoCache
	265 Move X0, X19
	266 Move X1, X31
	267 Call UniversalRenderPipelineAsset.get_decalMaterial, X0
	268 Move X27, 0x959000
	269 Move W8, [X27+977]
	270 Move X21, X0
	271 Compare W8, 0
	272 JumpIfNotEqual {278}
	273 Move X0, 0x6CC000
	274 Move X0, [X0+1880]
	275 Call 0x1C17CF4
	276 Move W8, 1
	277 Move [X27+977], W8
	278 Move X8, 0x6CC000
	279 Move X8, [X8+1880]
	280 Move X8, [X8]
	281 Move X8, [X8+184]
	282 Move [X8+40], X21
	283 Move X0, [X26]
	284 Call 0x1C17F10
	285 Move X1, [X25]
	286 Move X2, X31
	287 Move X21, X0
	288 Call RenderGraph..ctor, X0, X1
	289 Move X8, [X23]
	290 Move X8, [X8+184]
	291 Move [X8+8], X21
	292 Move [X8+24], W31
	293 Move X0, [X24]
	294 Call 0x1C17F10
	295 Move X1, X31
	296 Move X21, X0
	297 Call RTHandleResourcePool..ctor, X0
	298 Move X8, [X23]
	299 Move X8, [X8+184]
	300 Move [X8+16], X21
	301 Move X0, [X22]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X0, X31
	307 Call DebugManager.get_instance
	308 Compare X0, 0
	309 JumpIfEqual {344}
	310 Move X22, 0x6CC000
	311 Move X21, 0x6CC000
	312 Move X22, [X22+1200]
	313 Move X21, [X21+1192]
	314 Move X1, X31
	315 Call DebugManager.RefreshEditor, X0
	316 Move X0, [X22]
	317 Move X20, [X20+24]
	318 Move W8, [X0+224]
	319 Compare W8, 0
	320 JumpIfNotEqual {322}
	321 Call 0x1C17DFC
	322 Move X0, [X21]
	323 Call 0x29B00A8
	324 Compare X20, 0
	325 JumpIfEqual {344}
	326 Move X1, X0
	327 Move X0, X20
	328 Move X2, X31
	329 Call DebugDisplaySettingsUI.RegisterDebug, X0, X1
	330 Move W0, [X19+112]
	331 Move X20, [X31+64]
	332 Move X19, [X31+72]
	333 Move X22, [X31+48]
	334 Move X21, [X31+56]
	335 Move X24, [X31+32]
	336 Move X23, [X31+40]
	337 Move X26, [X31+16]
	338 Move X25, [X31+24]
	339 Move X1, X31
	340 Move X30, [X31+80]
	341 Move X27, [X31+88]
	342 Call QualitySettings.set_enableLODCrossFade, X0
	343 Return 
	344 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03A8ABD0 RET
	0x03A8ABD4 STP X30, X21, [X31 - 0x20]!
	0x03A8ABD8 STP X20, X19, [X31 + 0x10]
	0x03A8ABDC ADRP X21, 0x958000
	0x03A8ABE0 LDRB W8, [X21 + 0x377]
	0x03A8ABE4 MOV X19, X1
	0x03A8ABE8 MOV X20, X0
	0x03A8ABEC TBNZ X8, 0x0, 0x3A8AC10
	0x03A8ABF0 ADRP X0, 0x6CD000
	0x03A8ABF4 LDR X0, [X0 + 0x2C8]
	0x03A8ABF8 BL 0x1C16CF4
	0x03A8ABFC ADRP X0, 0x6CC000
	0x03A8AC00 LDR X0, [X0 + 0xF28]
	0x03A8AC04 BL 0x1C16CF4
	0x03A8AC08 MOVZ W8, 0x1
	0x03A8AC0C STRB W8, [X21 + 0x377]
	0x03A8AC10 CBZ X19, 0x3A8AC4C
	0x03A8AC14 LDR W8, [X19 + 0x18]
	0x03A8AC18 CMP W8, 0x2
	0x03A8AC1C B.GE 0x3A8AC2C
	0x03A8AC20 LDP X20, X19, [X31 + 0x10]
	0x03A8AC24 LDP X30, X21, [X31], #0x20
	0x03A8AC28 RET
	0x03A8AC2C ADRP X8, 0x6CD000
	0x03A8AC30 LDR X1, [X20 + 0x38]
	0x03A8AC34 LDR X8, [X8 + 0x2C8]
	0x03A8AC38 MOV X0, X19
	0x03A8AC3C LDP X20, X19, [X31 + 0x10]
	0x03A8AC40 LDR X2, [X8]
	0x03A8AC44 LDP X30, X21, [X31], #0x20
	0x03A8AC48 B 0x301DD30
	0x03A8AC4C BL 0x1C16F20
	0x03A8AC50 STP X30, X21, [X31 - 0x20]!
	0x03A8AC54 STP X20, X19, [X31 + 0x10]
	0x03A8AC58 ADRP X20, 0x958000
	0x03A8AC5C ADRP X21, 0x669000
	0x03A8AC60 LDRB W8, [X20 + 0x374]
	0x03A8AC64 LDR X21, [X21 + 0x598]
	0x03A8AC68 MOV X19, X0
	0x03A8AC6C TBNZ X8, 0x0, 0x3A8AC84
	0x03A8AC70 ADRP X0, 0x669000
	0x03A8AC74 LDR X0, [X0 + 0x598]
	0x03A8AC78 BL 0x1C16CF4
	0x03A8AC7C MOVZ W8, 0x1
	0x03A8AC80 STRB W8, [X20 + 0x374]
	0x03A8AC84 LDR X0, [X21]
	0x03A8AC88 LDR W8, [X0 + 0xE0]
	0x03A8AC8C CBNZ W8, 0x3A8AC94
	0x03A8AC90 BL 0x1C16DFC
	0x03A8AC94 MOV X0, X19
	0x03A8AC98 MOV X1, X31
	0x03A8AC9C MOV X2, X31
	0x03A8ACA0 BL 0x3C3883C
	0x03A8ACA4 TBNZ X0, 0x0, 0x3A8ACE0
	0x03A8ACA8 CBZ X19, 0x3A8AD28
	0x03A8ACAC MOV X0, X19
	0x03A8ACB0 MOV X1, X31
	0x03A8ACB4 BL 0x3C03AD4
	0x03A8ACB8 CMP W0, 0x1
	0x03A8ACBC B.EQ 0x3A8ACD4
	0x03A8ACC0 MOV X0, X19
	0x03A8ACC4 MOV X1, X31
	0x03A8ACC8 BL 0x3C03AD4
	0x03A8ACCC CMP W0, 0x8
	0x03A8ACD0 CSET W0, EQ
	0x03A8ACD4 LDP X20, X19, [X31 + 0x10]
	0x03A8ACD8 LDP X30, X21, [X31], #0x20
	0x03A8ACDC RET
	0x03A8ACE0 ADRP X0, 0x66E000
	0x03A8ACE4 LDR X0, [X0 + 0x528]
	0x03A8ACE8 BL 0x1C16D08
	0x03A8ACEC BL 0x1C16F10
	0x03A8ACF0 MOV X19, X0
	0x03A8ACF4 ADRP X0, 0x6CD000
	0x03A8ACF8 LDR X0, [X0 + 0x2D0]
	0x03A8ACFC BL 0x1C16D08
	0x03A8AD00 MOV X1, X0
	0x03A8AD04 MOV X0, X19
	0x03A8AD08 MOV X2, X31
	0x03A8AD0C BL 0x330E100
	0x03A8AD10 ADRP X0, 0x6CD000
	0x03A8AD14 LDR X0, [X0 + 0x2D8]
	0x03A8AD18 BL 0x1C16D08
	0x03A8AD1C MOV X1, X0
	0x03A8AD20 MOV X0, X19
	0x03A8AD24 BL 0x1C16DEC
	0x03A8AD28 BL 0x1C16F20
	0x03A8AD2C STP X29, X30, [X31 - 0x60]!
	0x03A8AD30 STP X28, X27, [X31 + 0x10]
	0x03A8AD34 STP X26, X25, [X31 + 0x20]
	0x03A8AD38 STP X24, X23, [X31 + 0x30]
	0x03A8AD3C STP X22, X21, [X31 + 0x40]
	0x03A8AD40 STP X20, X19, [X31 + 0x50]
	0x03A8AD44 SUB X31, X31, 0x700
	0x03A8AD48 ADRP X21, 0x958000
	0x03A8AD4C STR X0, [X31 + 0x6F8]
	0x03A8AD50 ADRP X20, 0x6CA000
	0x03A8AD54 LDRB W8, [X21 + 0x35F]
	0x03A8AD58 LDR X20, [X20 + 0xA8]
	0x03A8AD5C MOV X19, X1
	0x03A8AD60 ADD X29, X31, 0x470
	0x03A8AD64 TBNZ X8, 0x0, 0x3A8AED8
	0x03A8AD68 ADRP X0, 0x6CD000
	0x03A8AD6C LDR X0, [X0 + 0xA8]
	0x03A8AD70 BL 0x1C16CF4
	0x03A8AD74 ADRP X0, 0x6C6000
	0x03A8AD78 LDR X0, [X0 + 0xD20]
	0x03A8AD7C BL 0x1C16CF4
	0x03A8AD80 ADRP X0, 0x6CA000
	0x03A8AD84 LDR X0, [X0 + 0x918]
	0x03A8AD88 BL 0x1C16CF4
	0x03A8AD8C ADRP X0, 0x669000
	0x03A8AD90 LDR X0, [X0 + 0xA28]
	0x03A8AD94 BL 0x1C16CF4
	0x03A8AD98 ADRP X0, 0x6CD000
	0x03A8AD9C LDR X0, [X0 + 0x2E0]
	0x03A8ADA0 BL 0x1C16CF4
	0x03A8ADA4 ADRP X0, 0x6CD000
	0x03A8ADA8 LDR X0, [X0 + 0x2E8]
	0x03A8ADAC BL 0x1C16CF4
	0x03A8ADB0 ADRP X0, 0x6CD000
	0x03A8ADB4 LDR X0, [X0 + 0x2F0]
	0x03A8ADB8 BL 0x1C16CF4
	0x03A8ADBC ADRP X0, 0x6CD000
	0x03A8ADC0 LDR X0, [X0 + 0x2F8]
	0x03A8ADC4 BL 0x1C16CF4
	0x03A8ADC8 ADRP X0, 0x6CC000
	0x03A8ADCC LDR X0, [X0 + 0xF28]
	0x03A8ADD0 BL 0x1C16CF4
	0x03A8ADD4 ADRP X0, 0x6CD000
	0x03A8ADD8 LDR X0, [X0 + 0x2C0]
	0x03A8ADDC BL 0x1C16CF4
	0x03A8ADE0 ADRP X0, 0x669000
	0x03A8ADE4 LDR X0, [X0 + 0x598]
	0x03A8ADE8 BL 0x1C16CF4
	0x03A8ADEC ADRP X0, 0x692000
	0x03A8ADF0 LDR X0, [X0 + 0x898]
	0x03A8ADF4 BL 0x1C16CF4
	0x03A8ADF8 ADRP X0, 0x6CA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x959000
	006 Move W8, [X21+854]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x6C9000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move X0, 0x6CA000
	017 Move X0, [X0+1024]
	018 Call 0x1C17CF4
	019 Move X0, 0x6CE000
	020 Move X0, [X0+664]
	021 Call 0x1C17CF4
	022 Move X0, 0x66C000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0x6CE000
	026 Move X0, [X0+544]
	027 Call 0x1C17CF4
	028 Move X0, 0x693000
	029 Move X0, [X0+2216]
	030 Call 0x1C17CF4
	031 Move X0, 0x6C7000
	032 Move X0, [X0+1280]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+854], W8
	036 Move X0, [X19+24]
	037 Compare X0, 0
	038 JumpIfEqual {158}
	039 Move X21, 0x6C9000
	040 Move X21, [X21+3624]
	041 Move X1, X31
	042 Call DebugDisplaySettingsUI.UnregisterDebug, X0
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call Blitter.Cleanup
	050 And W1, W20, 1
	051 Move X0, X19
	052 Move X2, X31
	053 Call RenderPipeline.Dispose, X0, X1
	054 Move X0, [X19+40]
	055 Compare X0, 0
	056 JumpIfEqual {158}
	057 Move X19, 0x66C000
	058 Move X20, 0x6CE000
	059 Move X19, [X19+632]
	060 Move X20, [X20+544]
	061 Move X1, X31
	062 Call UniversalRenderPipelineAsset.DestroyRenderers, X0
	063 Move X8, [X19]
	064 Move X1, X31
	065 Move X8, [X8+184]
	066 Move X0, [X8]
	067 Call Shader.set_globalRenderPipeline, X0
	068 Move X0, [X20]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X19, X0
	072 Call SupportedRenderingFeatures..ctor, X0
	073 Move X0, [X20]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X19
	079 Move X1, X31
	080 Call SupportedRenderingFeatures.set_active, X0
	081 Move X0, X31
	082 Call ShaderData.get_instance
	083 Compare X0, 0
	084 JumpIfEqual {158}
	085 Move X20, 0x6C7000
	086 Move X19, 0x693000
	087 Move X20, [X20+1280]
	088 Move X19, [X19+2216]
	089 Move X1, X31
	090 Call ShaderData.Dispose, X0
	091 Move X0, [X20]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X31
	097 Call XRSystem.Dispose
	098 Move X0, [X19]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X19]
	104 Move X8, [X0+184]
	105 Move X0, [X8+8]
	106 Compare X0, 0
	107 JumpIfEqual {158}
	108 Move X1, X31
	109 Call RenderGraph.Cleanup, X0
	110 Move X8, [X19]
	111 Move X8, [X8+184]
	112 Move X0, [X8+16]
	113 Move [X8+8], X31
	114 Compare X0, 0
	115 JumpIfEqual {158}
	116 Move X21, 0x6CE000
	117 Move X20, 0x6CA000
	118 Move X21, [X21+664]
	119 Move X20, [X20+1024]
	120 Move X1, X31
	121 Call RTHandleResourcePool.Cleanup, X0
	122 Move X8, [X19]
	123 Move X8, [X8+184]
	124 Move [X8+16], X31
	125 Move X0, [X21]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X31
	131 Call Lightmapping.ResetDelegate
	132 Move X0, [X20]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X19, 0x959000
	138 Move W8, [X19+976]
	139 Compare W8, 0
	140 JumpIfNotEqual {146}
	141 Move X0, 0x6CA000
	142 Move X0, [X0+1024]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X19+976], W8
	146 Move X0, [X20]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move X0, [X20]
	152 Move X8, [X0+184]
	153 Move X20, [X31+16]
	154 Move X19, [X31+24]
	155 Move [X8+8], W31
	156 Move X30, [X31+32]
	157 Move X21, [X31+40]
	158 Call 0x1C17F20

Method: System.Void DisposeAdditionalCameraData()

Disassembly:
	0x03A8ADFC LDR X0, [X0 + 0xA8]
	0x03A8AE00 BL 0x1C16CF4
	0x03A8AE04 ADRP X0, 0x6C6000
	0x03A8AE08 LDR X0, [X0 + 0xC80]
	0x03A8AE0C BL 0x1C16CF4
	0x03A8AE10 ADRP X0, 0x669000
	0x03A8AE14 LDR X0, [X0 + 0xAC8]
	0x03A8AE18 BL 0x1C16CF4
	0x03A8AE1C ADRP X0, 0x669000
	0x03A8AE20 LDR X0, [X0 + 0x6C0]
	0x03A8AE24 BL 0x1C16CF4
	0x03A8AE28 ADRP X0, 0x692000
	0x03A8AE2C LDR X0, [X0 + 0x8A8]
	0x03A8AE30 BL 0x1C16CF4
	0x03A8AE34 ADRP X0, 0x6CB000
	0x03A8AE38 LDR X0, [X0 + 0xDC8]
	0x03A8AE3C BL 0x1C16CF4
	0x03A8AE40 ADRP X0, 0x6C6000
	0x03A8AE44 LDR X0, [X0 + 0x500]
	0x03A8AE48 BL 0x1C16CF4
	0x03A8AE4C ADRP X0, 0x669000
	0x03A8AE50 LDR X0, [X0 + 0xDD8]
	0x03A8AE54 BL 0x1C16CF4
	0x03A8AE58 ADRP X0, 0x6CD000
	0x03A8AE5C LDR X0, [X0 + 0x300]
	0x03A8AE60 BL 0x1C16CF4
	0x03A8AE64 ADRP X0, 0x6CD000
	0x03A8AE68 LDR X0, [X0 + 0x308]
	0x03A8AE6C BL 0x1C16CF4
	0x03A8AE70 ADRP X0, 0x6CD000
	0x03A8AE74 LDR X0, [X0 + 0x310]
	0x03A8AE78 BL 0x1C16CF4
	0x03A8AE7C ADRP X0, 0x6CD000
	0x03A8AE80 LDR X0, [X0 + 0x318]
	0x03A8AE84 BL 0x1C16CF4
	0x03A8AE88 ADRP X0, 0x6CD000
	0x03A8AE8C LDR X0, [X0 + 0x320]
	0x03A8AE90 BL 0x1C16CF4
	0x03A8AE94 ADRP X0, 0x6CD000
	0x03A8AE98 LDR X0, [X0 + 0x328]
	0x03A8AE9C BL 0x1C16CF4
	0x03A8AEA0 ADRP X0, 0x6CD000
	0x03A8AEA4 LDR X0, [X0 + 0x330]
	0x03A8AEA8 BL 0x1C16CF4
	0x03A8AEAC ADRP X0, 0x6CD000
	0x03A8AEB0 LDR X0, [X0 + 0x338]
	0x03A8AEB4 BL 0x1C16CF4
	0x03A8AEB8 ADRP X0, 0x6CD000
	0x03A8AEBC LDR X0, [X0 + 0x340]
	0x03A8AEC0 BL 0x1C16CF4
	0x03A8AEC4 ADRP X0, 0x6CD000
	0x03A8AEC8 LDR X0, [X0 + 0x348]
	0x03A8AECC BL 0x1C16CF4
	0x03A8AED0 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x959000
	009 Move W8, [X19+855]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+855], W8
	019 Move X0, X31
	020 Move [X31+8], X31
	021 Call Camera.get_allCameras
	022 Compare X0, 0
	023 JumpIfEqual {67}
	024 Move W8, [X0+24]
	025 Move X19, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, 0x6CB000
	028 Move X21, [X21+2328]
	029 Move X22, X31
	030 Move W20, W31
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X19, W20
	033 Move X0, [X8+32]
	034 Compare X0, 0
	035 JumpIfEqual {67}
	036 Move X2, [X21]
	037 Add X1, X31, 8
	038 Call 0x21A5990, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {56}
	043 Move X8, [X31+8]
	044 Compare X8, 0
	045 JumpIfEqual {67}
	046 Move X23, [X8+152]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Compare X23, 0
	050 JumpIfEqual {56}
	051 Compare X0, 0
	052 JumpIfEqual {67}
	053 Move X1, X31
	054 Call TaaPersistentData.DeallocateTargets, X0
	055 Move X22, X23
	056 Move W8, [X19+24]
	057 Add W20, W20, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: System.Void Render(UnityEngine.Rendering.ScriptableRenderContext renderContext, UnityEngine.Camera[] cameras)

Disassembly:
	0x03A8AED4 STRB W8, [X21 + 0x35F]
	0x03A8AED8 MOVI V0.2D, 0x0
	0x03A8AEDC ADD X0, X31, 0x4B0
	0x03A8AEE0 MOVZ W2, 0x210
	0x03A8AEE4 MOV W1, W31
	0x03A8AEE8 STRB W31, [X31 + 0x6F0]
	0x03A8AEEC STR X31, [X31 + 0x6E8]
	0x03A8AEF0 STR X31, [X31 + 0x6E0]
	0x03A8AEF4 STP V0, V0, [X29 + 0x250]
	0x03A8AEF8 BL 0x3EB1B10
	0x03A8AEFC MOVI V0.2D, 0x0
	0x03A8AF00 ADD X0, X31, 0x248
	0x03A8AF04 MOVZ W2, 0x210
	0x03A8AF08 MOV W1, W31
	0x03A8AF0C STR W31, [X31 + 0x4A0]
	0x03A8AF10 STP V0, V0, [X29 + 0x10]
	0x03A8AF14 STR V0, [X29]
	0x03A8AF18 STRB W31, [X31 + 0x468]
	0x03A8AF1C STR X31, [X31 + 0x460]
	0x03A8AF20 STR X31, [X31 + 0x458]
	0x03A8AF24 BL 0x3EB1B10
	0x03A8AF28 LDR X1, [X20]
	0x03A8AF2C MOVZ W0, 0x2
	0x03A8AF30 BL 0x2235BC0
	0x03A8AF34 MOV X2, X0
	0x03A8AF38 ADD X0, X31, 0x6F0
	0x03A8AF3C MOV X1, X31
	0x03A8AF40 MOV X3, X31
	0x03A8AF44 BL 0x39B1DB0
	0x03A8AF48 CBZ X19, 0x3A8BE9C
	0x03A8AF4C ADRP X8, 0x6CA000
	0x03A8AF50 LDR X8, [X8 + 0x918]
	0x03A8AF54 LDR X2, [X8]
	0x03A8AF58 ADD X1, X31, 0x6E8
	0x03A8AF5C MOV X0, X19
	0x03A8AF60 BL 0x21A4990
	0x03A8AF64 ADRP X8, 0x669000
	0x03A8AF68 LDR X8, [X8 + 0x598]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x959000
	009 Move X24, 0x695000
	010 Move X22, 0x6CE000
	011 Move W8, [X23+856]
	012 Move X24, [X24+80]
	013 Move X22, [X22+696]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x6CE000
	022 Move X0, [X0+696]
	023 Call 0x1C17CF4
	024 Move X0, 0x695000
	025 Move X0, [X0+80]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+856], W8
	029 Move X0, [X24]
	030 Call 0x1C17F10
	031 Move X2, [X22]
	032 Move X1, X21
	033 Move X22, X0
	034 Call List`1<Object>..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X22
	039 Move X4, [X8+424]
	040 Move X3, [X8+432]
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 CallNoReturn X4

Method: System.Void Render(UnityEngine.Rendering.ScriptableRenderContext renderContext, System.Collections.Generic.List`1<UnityEngine.Camera> cameras)

Disassembly:
	0x03A8AF6C LDR X20, [X31 + 0x6E8]
	0x03A8AF70 LDR X0, [X8]
	0x03A8AF74 LDR W8, [X0 + 0xE0]
	0x03A8AF78 CBNZ W8, 0x3A8AF80
	0x03A8AF7C BL 0x1C16DFC
	0x03A8AF80 MOV X0, X20
	0x03A8AF84 MOV X1, X31
	0x03A8AF88 MOV X2, X31
	0x03A8AF8C BL 0x3C354F8
	0x03A8AF90 MOV W8, W0
	0x03A8AF94 LDR X0, [X31 + 0x6E8]
	0x03A8AF98 TBZ X8, 0x0, 0x3A8AFB0
	0x03A8AF9C CBZ X0, 0x3A8BED8
	0x03A8AFA0 LDR W8, [X0 + 0x2C]
	0x03A8AFA4 CMP W8, 0x1
	0x03A8AFA8 B.NE 0x3A8AFB4
	0x03A8AFAC B 0x3A8BDF4
	0x03A8AFB0 CBZ X0, 0x3A8AFFC
	0x03A8AFB4 MOV X1, X31
	0x03A8AFB8 BL 0x3A816F0
	0x03A8AFBC MOV X22, X0
	0x03A8AFC0 CBZ X0, 0x3A8B000
	0x03A8AFC4 MOV X0, X22
	0x03A8AFC8 MOV W1, W31
	0x03A8AFCC MOV X2, X31
	0x03A8AFD0 BL 0x3A49704
	0x03A8AFD4 MOV W8, W0
	0x03A8AFD8 LDR X0, [X31 + 0x6E8]
	0x03A8AFDC MOV X20, X31
	0x03A8AFE0 CBZ X0, 0x3A8B004
	0x03A8AFE4 EOR W8, W8, 0x1
	0x03A8AFE8 TBNZ X8, 0x0, 0x3A8B004
	0x03A8AFEC MOV X1, X31
	0x03A8AFF0 BL 0x3A8156C
	0x03A8AFF4 MOV X20, X0
	0x03A8AFF8 B 0x3A8B004
	0x03A8AFFC MOV X22, X31
	0x03A8B000 MOV X20, X31
	0x03A8B004 ADRP X8, 0x668000
	0x03A8B008 LDR X8, [X8 + 0x598]
	0x03A8B00C LDR X21, [X31 + 0x6E8]
	0x03A8B010 LDR X0, [X8]
	0x03A8B014 LDR W8, [X0 + 0xE0]
	0x03A8B018 CBNZ W8, 0x3A8B020
	0x03A8B01C BL 0x1C16DFC
	0x03A8B020 MOV X0, X21
	0x03A8B024 MOV X1, X31
	0x03A8B028 MOV X2, X31
	0x03A8B02C BL 0x3C354F8
	0x03A8B030 TBZ X0, 0x0, 0x3A8B04C
	0x03A8B034 LDR X8, [X31 + 0x6E8]
	0x03A8B038 CBZ X8, 0x3A8BF34
	0x03A8B03C LDRB W8, [X8 + 0x4C]
	0x03A8B040 CMP W8, 0x0
	0x03A8B044 CSET W21, NE
	0x03A8B048 B 0x3A8B050
	0x03A8B04C MOV W21, W31
	0x03A8B050 ADRP X8, 0x691000
	0x03A8B054 LDR X8, [X8 + 0x8A8]
	0x03A8B058 LDR X0, [X8]
	0x03A8B05C LDR W8, [X0 + 0xE0]
	0x03A8B060 CBNZ W8, 0x3A8B068
	0x03A8B064 BL 0x1C16DFC
	0x03A8B068 BL 0x3A8EA20
	0x03A8B06C STR W0, [X31 + 0x24]
	0x03A8B070 BL 0x3A8AB60
	0x03A8B074 CBZ X0, 0x3A8BEA0
	0x03A8B078 LDR X8, [X0 + 0x40]
	0x03A8B07C CBZ X8, 0x3A8BEA4
	0x03A8B080 CBZ X20, 0x3A8B590
	0x03A8B084 LDR X0, [X31 + 0x6E8]
	0x03A8B088 CBZ X0, 0x3A8B0A8
	0x03A8B08C MOV X1, X31
	0x03A8B090 BL 0x3A816F0
	0x03A8B094 CBZ X0, 0x3A8BF38
	0x03A8B098 MOV X1, X31
	0x03A8B09C BL 0x33BE520
	0x03A8B0A0 MOV X23, X0
	0x03A8B0A4 B 0x3A8B0AC
	0x03A8B0A8 MOV X23, X31
	0x03A8B0AC ADRP X8, 0x691000
	0x03A8B0B0 LDR X8, [X8 + 0x8A8]
	0x03A8B0B4 LDR X0, [X8]
	0x03A8B0B8 LDR W8, [X0 + 0xE0]
	0x03A8B0BC CBNZ W8, 0x3A8B0D0
	0x03A8B0C0 BL 0x1C16DFC
	0x03A8B0C4 ADRP X8, 0x691000
	0x03A8B0C8 LDR X8, [X8 + 0x8A8]
	0x03A8B0CC LDR X0, [X8]
	0x03A8B0D0 LDR X8, [X0 + 0xB8]
	0x03A8B0D4 STRB W31, [X8]
	0x03A8B0D8 LDR W8, [X20 + 0x18]
	0x03A8B0DC CMP W8, 0x1
	0x03A8B0E0 B.LT 0x3A8B590
	0x03A8B0E4 MOV W28, W31
	0x03A8B0E8 MOV W24, W31
	0x03A8B0EC MOVN W8, 0x0
	0x03A8B0F0 STR W8, [X31 + 0x34]
	0x03A8B0F4 ADRP X8, 0x6CC000
	0x03A8B0F8 LDR X8, [X8 + 0x2C0]
	0x03A8B0FC LDR X2, [X8]
	0x03A8B100 MOV X0, X20
	0x03A8B104 MOV W1, W24
	0x03A8B108 BL 0x301BCCC
	0x03A8B10C ADRP X8, 0x668000
	0x03A8B110 LDR X8, [X8 + 0x598]
	0x03A8B114 MOV X25, X0
	0x03A8B118 LDR X0, [X8]
	0x03A8B11C LDR W8, [X0 + 0xE0]
	0x03A8B120 CBNZ W8, 0x3A8B128
	0x03A8B124 BL 0x1C16DFC
	0x03A8B128 MOV X0, X25
	0x03A8B12C MOV X1, X31
	0x03A8B130 MOV X2, X31
	0x03A8B134 BL 0x3C3883C
	0x03A8B138 TBZ X0, 0x0, 0x3A8B144
	0x03A8B13C MOVZ W28, 0x1
	0x03A8B140 B 0x3A8B568
	0x03A8B144 CBZ X25, 0x3A8BE58
	0x03A8B148 MOV X0, X25
	0x03A8B14C MOV X1, X31
	0x03A8B150 BL 0x3C32454
	0x03A8B154 TBZ X0, 0x0, 0x3A8B568
	0x03A8B158 ADRP X8, 0x6C9000
	0x03A8B15C LDR X8, [X8 + 0x918]
	0x03A8B160 LDR X2, [X8]
	0x03A8B164 ADD X1, X31, 0x6E0
	0x03A8B168 MOV X0, X25
	0x03A8B16C BL 0x21A4990
	0x03A8B170 LDR X0, [X31 + 0x6E0]
	0x03A8B174 CBZ X0, 0x3A8B194
	0x03A8B178 MOV X1, X31
	0x03A8B17C BL 0x3A816F0
	0x03A8B180 CBZ X0, 0x3A8BE60
	0x03A8B184 MOV X1, X31
	0x03A8B188 BL 0x33BE520
	0x03A8B18C MOV X27, X0
	0x03A8B190 B 0x3A8B198
	0x03A8B194 MOV X27, X31
	0x03A8B198 ADRP X8, 0x668000
	0x03A8B19C LDR X8, [X8 + 0x6C0]
	0x03A8B1A0 LDR X0, [X8]
	0x03A8B1A4 LDR W8, [X0 + 0xE0]
	0x03A8B1A8 CBNZ W8, 0x3A8B1B0
	0x03A8B1AC BL 0x1C16DFC
	0x03A8B1B0 MOV X0, X27
	0x03A8B1B4 MOV X1, X23
	0x03A8B1B8 MOV X2, X31
	0x03A8B1BC BL 0x3395F0C
	0x03A8B1C0 TBZ X0, 0x0, 0x3A8B310
	0x03A8B1C4 ADRP X8, 0x668000
	0x03A8B1C8 LDR X8, [X8 + 0xAC8]
	0x03A8B1CC LDR X0, [X8]
	0x03A8B1D0 MOVZ W1, 0x9
	0x03A8B1D4 BL 0x1C16D6C
	0x03A8B1D8 MOV X26, X0
	0x03A8B1DC CBZ X0, 0x3A8BE88
	0x03A8B1E0 LDR W8, [X26 + 0x18]
	0x03A8B1E4 CBZ W8, 0x3A8BE84
	0x03A8B1E8 ADRP X8, 0x6CC000
	0x03A8B1EC LDR X8, [X8 + 0x300]
	0x03A8B1F0 LDR X8, [X8]
	0x03A8B1F4 STR X8, [X26 + 0x20]
	0x03A8B1F8 MOV X0, X25
	0x03A8B1FC MOV X1, X31
	0x03A8B200 BL 0x3C389D4
	0x03A8B204 LDR W8, [X26 + 0x18]
	0x03A8B208 CMP W8, 0x1
	0x03A8B20C B.LS 0x3A8BE94
	0x03A8B210 CMP W8, 0x2
	0x03A8B214 STR X0, [X26 + 0x28]
	0x03A8B218 B.EQ 0x3A8BE80
	0x03A8B21C ADRP X8, 0x6CC000
	0x03A8B220 LDR X8, [X8 + 0x348]
	0x03A8B224 LDR X8, [X8]
	0x03A8B228 STR X8, [X26 + 0x30]
	0x03A8B22C CBZ X27, 0x3A8BE7C
	0x03A8B230 LDR X8, [X27]
	0x03A8B234 LDP X9, X1, [X8 + 0x1A8]
	0x03A8B238 MOV X0, X27
	0x03A8B23C BLR X9
	0x03A8B240 LDR W8, [X26 + 0x18]
	0x03A8B244 CMP W8, 0x3
	0x03A8B248 B.LS 0x3A8BE98
	0x03A8B24C CMP W8, 0x4
	0x03A8B250 STR X0, [X26 + 0x38]
	0x03A8B254 B.EQ 0x3A8BE78
	0x03A8B258 ADRP X8, 0x6CC000
	0x03A8B25C LDR X8, [X8 + 0x308]
	0x03A8B260 LDR X8, [X8]
	0x03A8B264 STR X8, [X26 + 0x40]
	0x03A8B268 MOV X0, X19
	0x03A8B26C MOV X1, X31
	0x03A8B270 BL 0x3C389D4
	0x03A8B274 LDR W8, [X26 + 0x18]
	0x03A8B278 CMP W8, 0x5
	0x03A8B27C B.LS 0x3A8BE64
	0x03A8B280 CMP W8, 0x6
	0x03A8B284 STR X0, [X26 + 0x48]
	0x03A8B288 B.EQ 0x3A8BE74
	0x03A8B28C ADRP X8, 0x6CC000
	0x03A8B290 LDR X8, [X8 + 0x330]
	0x03A8B294 LDR X8, [X8]
	0x03A8B298 STR X8, [X26 + 0x50]
	0x03A8B29C CBZ X23, 0x3A8BE70
	0x03A8B2A0 LDR X8, [X23]
	0x03A8B2A4 LDP X9, X1, [X8 + 0x1A8]
	0x03A8B2A8 MOV X0, X23
	0x03A8B2AC BLR X9
	0x03A8B2B0 LDR W8, [X26 + 0x18]
	0x03A8B2B4 CMP W8, 0x7
	0x03A8B2B8 B.LS 0x3A8BE68
	0x03A8B2BC CMP W8, 0x8
	0x03A8B2C0 STR X0, [X26 + 0x58]
	0x03A8B2C4 B.EQ 0x3A8BE6C
	0x03A8B2C8 ADRP X8, 0x6CC000
	0x03A8B2CC LDR X8, [X8 + 0x320]
	0x03A8B2D0 LDR X8, [X8]
	0x03A8B2D4 STR X8, [X26 + 0x60]
	0x03A8B2D8 MOV X0, X26
	0x03A8B2DC MOV X1, X31
	0x03A8B2E0 BL 0x32278CC
	0x03A8B2E4 ADRP X8, 0x668000
	0x03A8B2E8 LDR X8, [X8 + 0xA28]
	0x03A8B2EC MOV X25, X0
	0x03A8B2F0 LDR X0, [X8]
	0x03A8B2F4 LDR W8, [X0 + 0xE0]
	0x03A8B2F8 CBNZ W8, 0x3A8B300
	0x03A8B2FC BL 0x1C16DFC
	0x03A8B300 MOV X0, X25
	0x03A8B304 MOV X1, X31
	0x03A8B308 BL 0x3C06A04
	0x03A8B30C B 0x3A8B568
	0x03A8B310 LDR X0, [X31 + 0x6E0]
	0x03A8B314 CBZ X0, 0x3A8BE90
	0x03A8B318 MOV X1, X31
	0x03A8B31C BL 0x3A816F0
	0x03A8B320 CBZ X0, 0x3A8BE8C
	0x03A8B324 LDR X8, [X0]
	0x03A8B328 LDP X9, X1, [X8 + 0x188]
	0x03A8B32C BLR X9
	0x03A8B330 TBNZ X0, 0x1, 0x3A8B41C
	0x03A8B334 ADRP X8, 0x668000
	0x03A8B338 LDR X8, [X8 + 0xAC8]
	0x03A8B33C LDR X0, [X8]
	0x03A8B340 MOVZ W1, 0x5
	0x03A8B344 BL 0x1C16D6C
	0x03A8B348 MOV X26, X0
	0x03A8B34C CBZ X0, 0x3A8BED4
	0x03A8B350 LDR W8, [X26 + 0x18]
	0x03A8B354 CBZ W8, 0x3A8BED0
	0x03A8B358 ADRP X8, 0x6CC000
	0x03A8B35C LDR X8, [X8 + 0x328]
	0x03A8B360 LDR X8, [X8]
	0x03A8B364 STR X8, [X26 + 0x20]
	0x03A8B368 MOV X0, X25
	0x03A8B36C MOV X1, X31
	0x03A8B370 BL 0x3C389D4
	0x03A8B374 LDR W8, [X26 + 0x18]
	0x03A8B378 CMP W8, 0x1
	0x03A8B37C B.LS 0x3A8BEB8
	0x03A8B380 CMP W8, 0x2
	0x03A8B384 STR X0, [X26 + 0x28]
	0x03A8B388 B.EQ 0x3A8BECC
	0x03A8B38C ADRP X8, 0x6CC000
	0x03A8B390 LDR X8, [X8 + 0x318]
	0x03A8B394 LDR X8, [X8]
	0x03A8B398 STR X8, [X26 + 0x30]
	0x03A8B39C CBZ X22, 0x3A8BEC8
	0x03A8B3A0 MOV X0, X22
	0x03A8B3A4 MOV X1, X31
	0x03A8B3A8 BL 0x33BE520
	0x03A8B3AC CBZ X0, 0x3A8BEC4
	0x03A8B3B0 LDR X8, [X0]
	0x03A8B3B4 LDP X9, X1, [X8 + 0x1A8]
	0x03A8B3B8 BLR X9
	0x03A8B3BC LDR W8, [X26 + 0x18]
	0x03A8B3C0 CMP W8, 0x3
	0x03A8B3C4 B.LS 0x3A8BEBC
	0x03A8B3C8 CMP W8, 0x4
	0x03A8B3CC STR X0, [X26 + 0x38]
	0x03A8B3D0 B.EQ 0x3A8BEC0
	0x03A8B3D4 ADRP X8, 0x6CC000
	0x03A8B3D8 LDR X8, [X8 + 0x340]
	0x03A8B3DC LDR X8, [X8]
	0x03A8B3E0 STR X8, [X26 + 0x40]
	0x03A8B3E4 MOV X0, X26
	0x03A8B3E8 MOV X1, X31
	0x03A8B3EC BL 0x32278CC
	0x03A8B3F0 ADRP X8, 0x668000
	0x03A8B3F4 LDR X8, [X8 + 0xA28]
	0x03A8B3F8 MOV X25, X0
	0x03A8B3FC LDR X0, [X8]
	0x03A8B400 LDR W8, [X0 + 0xE0]
	0x03A8B404 CBNZ W8, 0x3A8B40C
	0x03A8B408 BL 0x1C16DFC
	0x03A8B40C MOV X0, X25
	0x03A8B410 MOV X1, X31
	0x03A8B414 BL 0x3C06A04
	0x03A8B418 B 0x3A8B568
	0x03A8B41C ADRP X8, 0x668000
	0x03A8B420 LDR X8, [X8 + 0x598]
	0x03A8B424 LDR X26, [X31 + 0x6E0]
	0x03A8B428 LDR X0, [X8]
	0x03A8B42C LDR W8, [X0 + 0xE0]
	0x03A8B430 CBNZ W8, 0x3A8B438
	0x03A8B434 BL 0x1C16DFC
	0x03A8B438 MOV X0, X26
	0x03A8B43C MOV X1, X31
	0x03A8B440 MOV X2, X31
	0x03A8B444 BL 0x3C3883C
	0x03A8B448 TBNZ X0, 0x0, 0x3A8B4CC
	0x03A8B44C LDR X8, [X31 + 0x6E0]
	0x03A8B450 CBZ X8, 0x3A8BF3C
	0x03A8B454 LDR W8, [X8 + 0x2C]
	0x03A8B458 CMP W8, 0x1
	0x03A8B45C B.NE 0x3A8B4CC
	0x03A8B460 ADRP X8, 0x691000
	0x03A8B464 LDR X8, [X8 + 0x8A8]
	0x03A8B468 LDR X0, [X8]
	0x03A8B46C LDR W8, [X0 + 0xE0]
	0x03A8B470 CBNZ W8, 0x3A8B484
	0x03A8B474 BL 0x1C16DFC
	0x03A8B478 ADRP X8, 0x691000
	0x03A8B47C LDR X8, [X8 + 0x8A8]
	0x03A8B480 LDR X0, [X8]
	0x03A8B484 LDR X8, [X0 + 0xB8]
	0x03A8B488 LDRB W25, [X8]
	0x03A8B48C BL 0x3A8EB30
	0x03A8B490 ADRP X8, 0x691000
	0x03A8B494 LDR X8, [X8 + 0x8A8]
	0x03A8B498 AND W9, W0, 0x1
	0x03A8B49C ORR W9, W25, W9, 0x0
	0x03A8B4A0 LDR X8, [X8]
	0x03A8B4A4 LDR X8, [X8 + 0xB8]
	0x03A8B4A8 STRB W9, [X8]
	0x03A8B4AC LDR X8, [X31 + 0x6E0]
	0x03A8B4B0 CBZ X8, 0x3A8BFA0
	0x03A8B4B4 LDRB W8, [X8 + 0x4C]
	0x03A8B4B8 STR W24, [X31 + 0x34]
	0x03A8B4BC CMP W8, 0x0
	0x03A8B4C0 CSET W8, NE
	0x03A8B4C4 ORR W21, W21, W8, 0x0
	0x03A8B4C8 B 0x3A8B568
	0x03A8B4CC MOV X0, X25
	0x03A8B4D0 MOV X1, X31
	0x03A8B4D4 BL 0x3C389D4
	0x03A8B4D8 LDR X8, [X31 + 0x6E0]
	0x03A8B4DC CBZ X8, 0x3A8BEDC
	0x03A8B4E0 ADRP X9, 0x6CC000
	0x03A8B4E4 LDR W8, [X8 + 0x2C]
	0x03A8B4E8 LDR X9, [X9 + 0xA8]
	0x03A8B4EC MOV X25, X0
	0x03A8B4F0 STR W8, [X31 + 0x38]
	0x03A8B4F4 LDR X0, [X9]
	0x03A8B4F8 ADD X1, X31, 0x38
	0x03A8B4FC BL 0x1C16E04
	0x03A8B500 MOV X1, X0
	0x03A8B504 ADRP X8, 0x6CC000
	0x03A8B508 LDR X8, [X8 + 0x338]
	0x03A8B50C LDR X0, [X8]
	0x03A8B510 MOV X2, X31
	0x03A8B514 BL 0x321EFD0
	0x03A8B518 ADRP X8, 0x6CC000
	0x03A8B51C LDR X8, [X8 + 0x310]
	0x03A8B520 MOV X3, X0
	0x03A8B524 LDR X0, [X8]
	0x03A8B528 ADRP X8, 0x668000
	0x03A8B52C LDR X8, [X8 + 0xDD8]
	0x03A8B530 LDR X2, [X8]
	0x03A8B534 MOV X1, X25
	0x03A8B538 MOV X4, X31
	0x03A8B53C BL 0x32277C4
	0x03A8B540 ADRP X8, 0x668000
	0x03A8B544 LDR X8, [X8 + 0xA28]
	0x03A8B548 MOV X25, X0
	0x03A8B54C LDR X0, [X8]
	0x03A8B550 LDR W8, [X0 + 0xE0]
	0x03A8B554 CBNZ W8, 0x3A8B55C
	0x03A8B558 BL 0x1C16DFC
	0x03A8B55C MOV X0, X25
	0x03A8B560 MOV X1, X31
	0x03A8B564 BL 0x3C06A04
	0x03A8B568 LDR W8, [X20 + 0x18]
	0x03A8B56C ADD W24, W24, 0x1
	0x03A8B570 CMP W24, W8
	0x03A8B574 B.LT 0x3A8B0F4
	0x03A8B578 TBZ X28, 0x0, 0x3A8B598
	0x03A8B57C LDR X0, [X31 + 0x6E8]
	0x03A8B580 CBZ X0, 0x3A8BFA4
	0x03A8B584 MOV X1, X31
	0x03A8B588 BL 0x3A81974
	0x03A8B58C B 0x3A8B598
	0x03A8B590 MOVN W8, 0x0
	0x03A8B594 STR W8, [X31 + 0x34]
	0x03A8B598 MOV X0, X31
	0x03A8B59C BL 0x3C3BACC
	0x03A8B5A0 ADRP X9, 0x6C5000
	0x03A8B5A4 LDR X8, [X31 + 0x6E8]
	0x03A8B5A8 LDR X9, [X9 + 0x500]
	0x03A8B5AC CMP W0, 0x8
	0x03A8B5B0 CSET W22, NE
	0x03A8B5B4 CBZ X8, 0x3A8B5C0
	0x03A8B5B8 LDRB W23, [X8 + 0x5B]
	0x03A8B5BC B 0x3A8B5C4
	0x03A8B5C0 MOVZ W23, 0x1
	0x03A8B5C4 LDR X0, [X9]
	0x03A8B5C8 LDR W8, [X0 + 0xE0]
	0x03A8B5CC CBNZ W8, 0x3A8B5D4
	0x03A8B5D0 BL 0x1C16DFC
	0x03A8B5D4 MOV X0, X31
	0x03A8B5D8 BL 0x3989BDC
	0x03A8B5DC MOV X24, X0
	0x03A8B5E0 CBZ X0, 0x3A8BEA8
	0x03A8B5E4 CMP W23, 0x0
	0x03A8B5E8 CSET W2, NE
	0x03A8B5EC MOV X0, X24
	0x03A8B5F0 MOV X1, X19
	0x03A8B5F4 MOV X3, X31
	0x03A8B5F8 BL 0x39850E0
	0x03A8B5FC LDR X0, [X24 + 0x10]
	0x03A8B600 CBZ X0, 0x3A8BEAC
	0x03A8B604 STR X24, [X31 + 0x28]
	0x03A8B608 ADRP X8, 0x6CC000
	0x03A8B60C LDR X8, [X8 + 0x2F8]
	0x03A8B610 LDR X1, [X8]
	0x03A8B614 ADD X8, X31, 0x38
	0x03A8B618 ADD X23, X31, 0x38
	0x03A8B61C BL 0x2F4AB98
	0x03A8B620 STR W31, [X31 + 0x20]
	0x03A8B624 ADRP X27, 0x691000
	0x03A8B628 LDR X27, [X27 + 0x898]
	0x03A8B62C LDUR V0, [X31 + 0x38]
	0x03A8B630 LDUR V1, [X31 + 0x48]
	0x03A8B634 ADD X8, X31, 0x4B0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X21, 0x959000
	013 Move X24, 0x693000
	014 Move W8, [X21+857]
	015 Move X24, [X24+2216]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x6CD000
	024 Move X0, [X0+3880]
	025 Call 0x1C17CF4
	026 Move X0, 0x6CE000
	027 Move X0, [X0+704]
	028 Call 0x1C17CF4
	029 Move X0, 0x693000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move X0, 0x6CB000
	033 Move X0, [X0+168]
	034 Call 0x1C17CF4
	035 Move X0, 0x6C7000
	036 Move X0, [X0+2480]
	037 Call 0x1C17CF4
	038 Move X0, 0x6CE000
	039 Move X0, [X0+544]
	040 Call 0x1C17CF4
	041 Move X0, 0x693000
	042 Move X0, [X0+2216]
	043 Call 0x1C17CF4
	044 Move X0, 0x6C7000
	045 Move X0, [X0+1280]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+857], W8
	049 Move X0, [X24]
	050 Move [X31+56], W31
	051 Move [X31+48], W31
	052 Move X21, 0x6CD000
	053 Move W8, [X0+224]
	054 Move X21, [X21+544]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X24]
	059 Move X8, [X0+184]
	060 Move [X8+24], W31
	061 Call UniversalRenderPipeline.SetHDRState, X0, X1
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X31
	068 Call SupportedRenderingFeatures.get_active
	069 Move X21, X0
	070 Call UniversalRenderPipeline.HDROutputForAnyDisplayIsActive
	071 Compare X21, 0
	072 JumpIfEqual {346}
	073 Move X8, 0x6CA000
	074 Move X8, [X8+168]
	075 And W9, W0, 1
	076 Move [X21+44], W9
	077 Move X25, 0x692000
	078 Move X1, [X8]
	079 Move X25, [X25+2200]
	080 Move W0, W31
	081 Call 0x2236BC0, X0
	082 Move X2, X0
	083 Add X0, X31, 56
	084 Move X1, X31
	085 Move X3, X31
	086 Call ProfilingScope..ctor, X0, X1, X2
	087 Move X0, [X25]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X25]
	093 Move X8, [X0+184]
	094 Move X2, [X8]
	095 Move [X31+40], W31
	096 Add X0, X31, 40
	097 Move X1, X31
	098 Move X3, X31
	099 Call ProfilingScope..ctor, X0, X1, X2
	100 Move W8, [X31+40]
	101 Move [X31+48], W8
	102 Move X0, X20
	103 Move X1, X19
	104 Move X2, X31
	105 Call RenderPipeline.BeginContextRendering, X0, X1
	106 Move X23, X31
	107 Add X0, X31, 48
	108 Move X1, X31
	109 Call ProfilingScope.Dispose, X0
	110 Compare X23, 0
	111 JumpIfNotEqual {347}
	112 Move X0, X31
	113 Call QualitySettings.get_activeColorSpace
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Move X1, X31
	117 Call GraphicsSettings.set_lightsUseLinearIntensity, X0
	118 Move W0, 1
	119 Move X1, X31
	120 Call GraphicsSettings.set_lightsUseColorTemperature, X0
	121 Move W0, 1
	122 Move X1, X31
	123 Call GraphicsSettings.set_defaultRenderingLayerMask, X0
	124 Move X0, [X24]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Call UniversalRenderPipeline.SetupPerFrameShaderConstants
	130 Call UniversalRenderPipeline.get_asset
	131 Compare X0, 0
	132 JumpIfEqual {349}
	133 Move X8, 0x6C6000
	134 Move X8, [X8+1280]
	135 Move W21, [X0+92]
	136 Move X8, [X8]
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move W0, W21
	143 Move X1, X31
	144 Call XRSystem.SetDisplayMSAASamples, X0
	145 Move X8, 0x6C6000
	146 Move X8, [X8+2480]
	147 Move X0, [X8]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move W0, 1
	153 Move X1, X31
	154 Call RTHandles.SetHardwareDynamicResolutionState, X0
	155 Move X0, X22
	156 Move X1, X19
	157 Call UniversalRenderPipeline.SortCameras, X0, X1
	158 Compare X19, 0
	159 JumpIfEqual {350}
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X26, 0x6CD000
	163 Move X26, [X26+704]
	164 Move W22, W31
	165 Move X2, [X26]
	166 Move X0, X19
	167 Move W1, W22
	168 Call List`1<Object>.get_Item, X0, X1
	169 Move X23, X0
	170 Move X0, [X24]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X23
	176 Call UniversalRenderPipeline.IsGameCamera, X0
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {189}
	181 Move X0, [X24]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X20
	187 Move X1, X23
	188 Call UniversalRenderPipeline.RenderCameraStack, X0, X1
	189 Move X0, [X25]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {195}
	193 Call 0x1C17DFC
	194 Move X0, [X25]
	195 Move X8, [X0+184]
	196 Move X2, [X8+16]
	197 Move [X31+32], W31
	198 Add X0, X31, 32
	199 Move X1, X31
	200 Move X3, X31
	201 Call ProfilingScope..ctor, X0, X1, X2
	202 Move W8, [X31+32]
	203 Move [X31+48], W8
	204 Move X0, X20
	205 Move X1, X23
	206 Move X2, X31
	207 Call RenderPipeline.BeginCameraRendering, X0, X1
	208 Move X21, X31
	209 Move W27, 7
	210 Add X0, X31, 48
	211 Move X1, X31
	212 Call ProfilingScope.Dispose, X0
	213 Compare X21, 0
	214 JumpIfNotEqual {342}
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Compare W27, 0
	217 JumpIfNotEqual {327}
	218 Move X0, [X24]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X23
	224 Move X1, X31
	225 Call UniversalRenderPipeline.UpdateVolumeFramework, X0, X1
	226 Move X0, X20
	227 Move X1, X23
	228 Call UniversalRenderPipeline.RenderSingleCameraInternal, X0, X1
	229 Move X0, [X25]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X0, [X25]
	235 Move X8, [X0+184]
	236 Move X2, [X8+24]
	237 Move [X31+24], W31
	238 Add X0, X31, 24
	239 Move X1, X31
	240 Move X3, X31
	241 Call ProfilingScope..ctor, X0, X1, X2
	242 Move W8, [X31+24]
	243 Move [X31+48], W8
	244 Move X0, X20
	245 Move X1, X23
	246 Move X2, X31
	247 Call RenderPipeline.EndCameraRendering, X0, X1
	248 Move X23, X31
	249 Move W21, 6
	250 Add X0, X31, 48
	251 Move X1, X31
	252 Call ProfilingScope.Dispose, X0
	253 Compare X23, 0
	254 JumpIfNotEqual {344}
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Compare W21, 0
	257 JumpIfNotEqual {327}
	258 Move W8, [X19+24]
	259 Add W22, W22, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X21, X0
	263 Move [X31+8], X1
	264 Move X0, X21
	265 Call 0x3EB2AD0
	266 Move X23, [X0]
	267 Call 0x3EB2AE0
	268 Move W21, W31
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X21, X0
	271 Move [X31+8], X1
	272 Move X0, X21
	273 Call 0x3EB2AD0
	274 Move X8, [X0]
	275 Move [X31], X8
	276 Call 0x3EB2AE0
	277 Move X21, [X31]
	278 Move W27, W31
	279 Move X0, [X24]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {285}
	283 Call 0x1C17DFC
	284 Move X0, [X24]
	285 Move X8, [X0+184]
	286 Move X0, [X8+8]
	287 Compare X0, 0
	288 JumpIfEqual {351}
	289 Move X1, X31
	290 Call RenderGraph.EndFrame, X0
	291 Move X8, [X24]
	292 Move X8, [X8+184]
	293 Move X21, [X8+16]
	294 Move X0, X31
	295 Call Time.get_frameCount
	296 Move W1, W0
	297 Compare X21, 0
	298 JumpIfEqual {352}
	299 Move X0, X21
	300 Move X2, X31
	301 Call RTHandleResourcePool.PurgeUnusedResources, X0, X1
	302 Move X0, [X25]
	303 Move W8, [X0+224]
	304 Compare W8, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X0, [X25]
	308 Move X8, [X0+184]
	309 Move X2, [X8+8]
	310 Move [X31+16], W31
	311 Add X0, X31, 16
	312 Move X1, X31
	313 Move X3, X31
	314 Call ProfilingScope..ctor, X0, X1, X2
	315 Move W8, [X31+16]
	316 Move [X31+48], W8
	317 Move X0, X20
	318 Move X1, X19
	319 Move X2, X31
	320 Call RenderPipeline.EndContextRendering, X0, X1
	321 Move X19, X31
	322 Add X0, X31, 48
	323 Move X1, X31
	324 Call ProfilingScope.Dispose, X0
	325 Compare X19, 0
	326 JumpIfNotEqual {353}
	327 Add X0, X31, 56
	328 Move X1, X31
	329 Call ProfilingScope.Dispose, X0
	330 Move X20, [X31+128]
	331 Move X19, [X31+136]
	332 Move X22, [X31+112]
	333 Move X21, [X31+120]
	334 Move X24, [X31+96]
	335 Move X23, [X31+104]
	336 Move X26, [X31+80]
	337 Move X25, [X31+88]
	338 Move X30, [X31+64]
	339 Move X27, [X31+72]
	340 Add X31, X31, 144
	341 Return 
	342 Move X0, X21
	343 Call 0x1C17F18
	344 Move X0, X23
	345 Call 0x1C17F18
	346 Call 0x1C17F20
	347 Move X0, X23
	348 Call 0x1C17F18
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X0, X19
	354 Call 0x1C17F18
	355 Move [X31], X31
	356 Add X0, X31, 48
	357 Move X1, X31
	358 Call ProfilingScope.Dispose, X0
	359 Move X8, [X31]
	360 Move X1, [X31+8]
	361 Compare X8, 0
	362 JumpIfEqual {415}
	363 Move X0, [X31]
	364 Call 0x1C17F18
	365 Move X23, X31
	366 Add X0, X31, 48
	367 Move X1, X31
	368 Call ProfilingScope.Dispose, X0
	369 Move X1, [X31+8]
	370 Compare X23, 0
	371 JumpIfEqual {415}
	372 Move X0, X23
	373 Call 0x1C17F18
	374 Move X21, X0
	375 Move [X31+8], X1
	376 Move X21, X0
	377 Move [X31+8], X1
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X21, X0
	380 Move X0, X21
	381 Call 0x3EB2AD0
	382 Move X19, [X0]
	383 Call 0x3EB2AE0
	384 Move X20, X1
	385 Move X19, X31
	386 Add X0, X31, 48
	387 Move X1, X31
	388 Call ProfilingScope.Dispose, X0
	389 Move X1, X20
	390 Compare X19, 0
	391 JumpIfEqual {415}
	392 Move X0, X19
	393 Call 0x1C17F18
	394 Move X20, X1
	395 Move X21, X0
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X21, X0
	398 Move [X31+8], X1
	399 Move X0, X21
	400 Call 0x3EB2AD0
	401 Move X23, [X0]
	402 Call 0x3EB2AE0
	403 Move X23, X31
	404 Add X0, X31, 48
	405 Move X1, X31
	406 Call ProfilingScope.Dispose, X0
	407 Move X1, [X31+8]
	408 Compare X23, 0
	409 JumpIfEqual {415}
	410 Move X0, X23
	411 Call 0x1C17F18
	412 Move X21, X0
	413 Move [X31+8], X1
	414 Move X21, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X21
	417 Call 0x3EB2AD0
	418 Move X19, [X0]
	419 Call 0x3EB2AE0
	420 Add X0, X31, 56
	421 Move X1, X31
	422 Call ProfilingScope.Dispose, X0
	423 Compare X19, 0
	424 JumpIfEqual {330}
	425 Move X0, X19
	426 Call 0x1C17F18
	427 Move X19, X31
	428 Move X21, X0
	429 Add X0, X31, 56
	430 Move X1, X31
	431 Call ProfilingScope.Dispose, X0
	432 Compare X19, 0
	433 JumpIfNotEqual {436}
	434 Move X0, X21
	435 Call 0x1D2D690
	436 Move X0, X19
	437 Call 0x1C17F18
	438 Call 0x1991590

Method: System.Boolean IsRenderRequestSupported(UnityEngine.Camera camera, RequestData data)

Disassembly:
	0x022A3994 STUR W8, [X29 - 0x54]
	0x022A3998 SUB X8, X29, 0xC0
	0x022A399C MOV X0, X22
	0x022A39A0 MOV X1, X31
	0x022A39A4 BL 0x3C21334
	0x022A39A8 LDUR W8, [X29 - 0xB8]
	0x022A39AC MOVZ W9, 0x2
	0x022A39B0 STUR W9, [X29 - 0x40]
	0x022A39B4 MOV X0, X22
	0x022A39B8 STUR W8, [X29 - 0x58]
	0x022A39BC LDR X8, [X22]
	0x022A39C0 LDP X9, X1, [X8 + 0x188]
	0x022A39C4 BLR X9
	0x022A39C8 ADRP X8, 0x1E50000
	0x022A39CC LDR X8, [X8 + 0x5A8]
	0x022A39D0 MOV W24, W0
	0x022A39D4 LDR X8, [X8]
	0x022A39D8 LDR W9, [X8 + 0xE0]
	0x022A39DC CBNZ W9, 0x22A39E8
	0x022A39E0 MOV X0, X8
	0x022A39E4 BL 0x1C16DFC
	0x022A39E8 SCVTF D8, W21
	0x022A39EC FMOV D0, 2
	0x022A39F0 MOV V1.16B, V8.16B
	0x022A39F4 MOV X0, X31
	0x022A39F8 BL 0x337F438
	0x022A39FC MOVZ X9, 0x7FF00000
	0x022A3A00 FMOV D9, X9
	0x022A3A04 FCVTZS W8, D0
	0x022A3A08 MOVZ W23, 0x80000000
	0x022A3A0C FCMP D0, D9
	0x022A3A10 CSEL W8, W23, W8, EQ
	0x022A3A14 SDIV W8, W24, W8
	0x022A3A18 STUR W8, [X29 - 0x60]
	0x022A3A1C LDR X8, [X22]
	0x022A3A20 MOV X0, X22
	0x022A3A24 LDP X9, X1, [X8 + 0x1A8]
	0x022A3A28 BLR X9
	0x022A3A2C MOV W24, W0
	0x022A3A30 FMOV D0, 2
	0x022A3A34 MOV V1.16B, V8.16B
	0x022A3A38 MOV X0, X31
	0x022A3A3C BL 0x337F438
	0x022A3A40 FCVTZS W8, D0
	0x022A3A44 FCMP D0, D9
	0x022A3A48 LDUR V0, [X29 - 0x60]
	0x022A3A4C CSEL W8, W23, W8, EQ
	0x022A3A50 SDIV W8, W24, W8
	0x022A3A54 MOVI V1.2S, 0x1
	0x022A3A58 UNIMPLEMENTED
	0x022A3A5C SMAX S0.2S, S0.2S, S1.2S
	0x022A3A60 STUR D0, [X29 - 0x60]
	0x022A3A64 LDR X8, [X22]
	0x022A3A68 MOV X0, X22
	0x022A3A6C LDP X9, X1, [X8 + 0x1C8]
	0x022A3A70 BLR X9
	0x022A3A74 CBNZ W21, 0x22A3A84
	0x022A3A78 CMP W0, 0x2
	0x022A3A7C MOV X24, X31
	0x022A3A80 B.EQ 0x22A3AAC
	0x022A3A84 LDP V0, V1, [X29 - 0x60]
	0x022A3A88 LDUR V2, [X29 - 0x40]
	0x022A3A8C LDUR W8, [X29 - 0x30]
	0x022A3A90 SUB X0, X29, 0x100
	0x022A3A94 MOV X1, X31
	0x022A3A98 STP V0, V1, [X29 - 0x100]
	0x022A3A9C STUR V2, [X29 - 0xE0]
	0x022A3AA0 STUR W8, [X29 - 0xD0]
	0x022A3AA4 BL 0x3C22068
	0x022A3AA8 MOV X24, X0
	0x022A3AAC ADRP X8, 0x1E50000
	0x022A3AB0 LDR X8, [X8 + 0x598]
	0x022A3AB4 LDR X0, [X8]
	0x022A3AB8 LDR W8, [X0 + 0xE0]
	0x022A3ABC CBNZ W8, 0x22A3AC4
	0x022A3AC0 BL 0x1C16DFC
	0x022A3AC4 MOV X0, X24
	0x022A3AC8 MOV X1, X31
	0x022A3ACC BL 0x3C38948
	0x022A3AD0 ANDS W31, W0, 0x1
	0x022A3AD4 CSEL X1, X24, X22, NE
	0x022A3AD8 MOV X0, X19
	0x022A3ADC MOV X2, X31
	0x022A3AE0 BL 0x3C040F0
	0x022A3AE4 ADRP X8, 0x1E79000
	0x022A3AE8 LDR X8, [X8 + 0x880]
	0x022A3AEC LDR X0, [X8]
	0x022A3AF0 LDR W8, [X0 + 0xE0]
	0x022A3AF4 CBNZ W8, 0x22A3AFC
	0x022A3AF8 BL 0x1C16DFC
	0x022A3AFC ADRP X8, 0x1E79000
	0x022A3B00 LDR X8, [X8 + 0x878]
	0x022A3B04 SUB X0, X29, 0x68
	0x022A3B08 LDR X1, [X8]
	0x022A3B0C BL 0x2EF26F4
	0x022A3B10 MOV X8, X0
	0x022A3B14 LDUR X0, [X29 - 0x68]
	0x022A3B18 STP X8, X1, [X29 - 0x78]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Add X29, X31, 0
	011 Subtract X31, X31, 16
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X20, X3
	015 Move X19, X2
	016 Move [X29-8], X8
	017 Move [X29-16], X2
	018 Move X25, [X3+56]
	019 Compare X25, 0
	020 JumpIfNotEqual {33}
	021 Move X0, 0x1E7A000
	022 Move X0, [X0+2144]
	023 Call 0x1C17CF4
	024 Move X0, 0x1E7A000
	025 Move X0, [X0+2152]
	026 Call 0x1C17CF4
	027 Move X25, [X20+56]
	028 Compare X25, 0
	029 JumpIfNotEqual {33}
	030 Move X0, X20
	031 Call 0x1C5D6E0
	032 Move X25, [X20+56]
	033 Move X8, [X25]
	034 Add X9, X31, 0
	035 Move W21, [X8+252]
	036 Add X10, X21, 15
	037 And X10, X10, 0x1FFFFFFFF
	038 Subtract X22, X9, X10
	039 Add X31, X22, 0
	040 Move W8, [X8+40]
	041 Subtract X24, X29, 16
	042 Move X0, X22
	043 Move X2, X21
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Call 0x3EB2AC0
	047 Move X0, [X25]
	048 Move X1, X22
	049 Call 0x1C17E04
	050 Compare X0, 0
	051 JumpIfEqual {63}
	052 Move X8, 0x1E7A000
	053 Move X8, [X8+2152]
	054 Move X9, [X0]
	055 Move X8, [X8]
	056 Move W11, [X9+304]
	057 Move W10, [X8+304]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X9, [X9+200]
	060 Add X9, X9, X10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X20+56]
	064 Move X0, X22
	065 Move X2, X21
	066 Move X8, [X20]
	067 Move W8, [X8+40]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 Call 0x3EB2AC0
	071 Move X0, [X20]
	072 Move X1, X22
	073 Call 0x1C17E04
	074 Compare X0, 0
	075 JumpIfEqual {90}
	076 Move X8, 0x1E7A000
	077 Move X8, [X8+2144]
	078 Move X9, [X0]
	079 Move X8, [X8]
	080 Move W11, [X9+304]
	081 Move W10, [X8+304]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W0, W31
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Move W0, 1
	090 Move X8, [X23+40]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X31, X29, 0
	094 Move X20, [X31+64]
	095 Move X19, [X31+72]
	096 Move X22, [X31+48]
	097 Move X21, [X31+56]
	098 Move X24, [X31+32]
	099 Move X23, [X31+40]
	100 Move X25, [X31+16]
	101 Move X29, [X31+80]
	102 Move X30, [X31+88]
	103 Return X0
	104 Call 0x3EB2B20

Method: System.Void ProcessRenderRequests(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera, RequestData renderRequest)

Disassembly:
	0x022A3B1C CBZ X0, 0x22A3F30
	0x022A3B20 ADRP X9, 0x1E79000
	0x022A3B24 LDR X9, [X9 + 0x888]
	0x022A3B28 LDR W10, [X0 + 0x1C]
	0x022A3B2C LDR X8, [X0 + 0x10]
	0x022A3B30 LDR X9, [X9]
	0x022A3B34 ADD W10, W10, 0x1
	0x022A3B38 STR W10, [X0 + 0x1C]
	0x022A3B3C CBZ X8, 0x22A3F34
	0x022A3B40 LDRSW X10, [X0 + 0x18]
	0x022A3B44 LDR W11, [X8 + 0x18]
	0x022A3B48 CMP W10, W11
	0x022A3B4C B.CS 0x22A3B64
	0x022A3B50 ADD W9, W10, 0x1
	0x022A3B54 ADD X8, X8, X10, 0x3, LSL
	0x022A3B58 STR W9, [X0 + 0x18]
	0x022A3B5C STR X19, [X8 + 0x20]
	0x022A3B60 B 0x22A3B78
	0x022A3B64 LDR X8, [X9 + 0x20]
	0x022A3B68 LDR X8, [X8 + 0xC0]
	0x022A3B6C LDR X2, [X8 + 0x70]
	0x022A3B70 MOV X1, X19
	0x022A3B74 BL 0x301BF90
	0x022A3B78 CBZ X27, 0x22A3C48
	0x022A3B7C LDUR X0, [X29 - 0x68]
	0x022A3B80 CBZ X0, 0x22A3F38
	0x022A3B84 ADRP X8, 0x1E79000
	0x022A3B88 LDR X8, [X8 + 0x890]
	0x022A3B8C LDR X1, [X8]
	0x022A3B90 BL 0x301DDC4
	0x022A3B94 CBZ X26, 0x22A3F3C
	0x022A3B98 LDR X8, [X26]
	0x022A3B9C MOV X2, X0
	0x022A3BA0 LDP X9, X3, [X8 + 0x178]
	0x022A3BA4 MOV X0, X26
	0x022A3BA8 MOV X1, X25
	0x022A3BAC BLR X9
	0x022A3BB0 ADRP X8, 0x1E79000
	0x022A3BB4 LDR X8, [X8 + 0x8A0]
	0x022A3BB8 SUB X0, X29, 0x78
	0x022A3BBC LDR X1, [X8]
	0x022A3BC0 BL 0x24A69BC
	0x022A3BC4 ADRP X8, 0x1E50000
	0x022A3BC8 LDR X8, [X8 + 0x598]
	0x022A3BCC LDR X0, [X8]
	0x022A3BD0 LDR W8, [X0 + 0xE0]
	0x022A3BD4 CBNZ W8, 0x22A3BDC
	0x022A3BD8 BL 0x1C16DFC
	0x022A3BDC MOV X0, X24
	0x022A3BE0 MOV X1, X31
	0x022A3BE4 BL 0x3C38948
	0x022A3BE8 ADRP X23, 0x1E54000
	0x022A3BEC LDR X23, [X23 + 0x2C8]
	0x022A3BF0 TBZ X0, 0x0, 0x22A3EB8
	0x022A3BF4 LDR X8, [X22]
	0x022A3BF8 MOV X0, X22
	0x022A3BFC LDP X9, X1, [X8 + 0x1C8]
	0x022A3C00 BLR X9
	0x022A3C04 CMP W0, 0x6
	0x022A3C08 B.HI 0x22A3EB8
	0x022A3C0C MOVZ W8, 0x1
	0x022A3C10 LSLV W8, W8, W0
	0x022A3C14 MOVZ W9, 0x2C
	0x022A3C18 ANDS W31, W8, W9, 0x0
	0x022A3C1C B.EQ 0x22A3E70
	0x022A3C20 LDR X0, [X23]
	0x022A3C24 LDR W8, [X0 + 0xE0]
	0x022A3C28 CBNZ W8, 0x22A3C30
	0x022A3C2C BL 0x1C16DFC
	0x022A3C30 MOV X0, X24
	0x022A3C34 MOV W1, W31
	0x022A3C38 MOV W2, W31
	0x022A3C3C MOV X3, X22
	0x022A3C40 MOV W4, W28
	0x022A3C44 B 0x22A3EAC
	0x022A3C48 ADRP X23, 0x1E79000
	0x022A3C4C LDR X23, [X23 + 0x898]
	0x022A3C50 LDR X0, [X23]
	0x022A3C54 LDR W8, [X0 + 0xE0]
	0x022A3C58 CBNZ W8, 0x22A3C64
	0x022A3C5C BL 0x1C16DFC
	0x022A3C60 LDR X0, [X23]
	0x022A3C64 LDR X8, [X0 + 0xB8]
	0x022A3C68 LDR X2, [X8]
	0x022A3C6C STURB W31, [X29 - 0xC0]
	0x022A3C70 SUB X0, X29, 0xC0
	0x022A3C74 MOV X1, X31
	0x022A3C78 MOV X3, X31
	0x022A3C7C BL 0x39B1DB0
	0x022A3C80 LDURB W8, [X29 - 0xC0]
	0x022A3C84 LDUR X1, [X29 - 0x68]
	0x022A3C88 STURB W8, [X29 - 0x88]
	0x022A3C8C MOV X0, X25
	0x022A3C90 MOV X2, X31
	0x022A3C94 BL 0x3C5459C
	0x022A3C98 MOV X26, X31
	0x022A3C9C MOVZ W27, 0x13
	0x022A3CA0 SUB X0, X29, 0x88
	0x022A3CA4 MOV X1, X31
	0x022A3CA8 BL 0x39B1DB4
	0x022A3CAC CBNZ X26, 0x22A3F40
	0x022A3CB0 CMP W27, 0x13
	0x022A3CB4 B.EQ 0x22A3CBC
	0x022A3CB8 CBNZ W27, 0x22A3E4C
	0x022A3CBC LDR X0, [X23]
	0x022A3CC0 LDR W8, [X0 + 0xE0]
	0x022A3CC4 CBNZ W8, 0x22A3CD0
	0x022A3CC8 BL 0x1C16DFC
	0x022A3CCC LDR X0, [X23]
	0x022A3CD0 LDR X8, [X0 + 0xB8]
	0x022A3CD4 LDR X2, [X8 + 0x10]
	0x022A3CD8 STURB W31, [X29 - 0xC0]
	0x022A3CDC SUB X0, X29, 0xC0
	0x022A3CE0 MOV X1, X31
	0x022A3CE4 MOV X3, X31
	0x022A3CE8 BL 0x39B1DB0
	0x022A3CEC LDURB W8, [X29 - 0xC0]
	0x022A3CF0 STURB W8, [X29 - 0x88]
	0x022A3CF4 MOV X0, X25
	0x022A3CF8 MOV X1, X19
	0x022A3CFC MOV X2, X31
	0x022A3D00 BL 0x3C546F4
	0x022A3D04 MOV X26, X31
	0x022A3D08 MOVZ W27, 0x14
	0x022A3D0C SUB X0, X29, 0x88
	0x022A3D10 MOV X1, X31
	0x022A3D14 BL 0x39B1DB4
	0x022A3D18 CBNZ X26, 0x22A3F48
	0x022A3D1C CMP W27, 0x14
	0x022A3D20 B.EQ 0x22A3D28
	0x022A3D24 CBNZ W27, 0x22A3E4C
	0x022A3D28 MOV X0, X19
	0x022A3D2C MOV X1, X31
	0x022A3D30 BL 0x3C32ECC
	0x022A3D34 CBZ X0, 0x22A3F50
	0x022A3D38 ADRP X8, 0x1E79000
	0x022A3D3C LDR X8, [X8 + 0x870]
	0x022A3D40 LDR X2, [X8]
	0x022A3D44 SUB X1, X29, 0x80
	0x022A3D48 BL 0x21E6600
	0x022A3D4C ADRP X8, 0x1E79000
	0x022A3D50 LDR X8, [X8 + 0x8A8]
	0x022A3D54 LDR X0, [X8]
	0x022A3D58 LDR W8, [X0 + 0xE0]
	0x022A3D5C CBNZ W8, 0x22A3D64
	0x022A3D60 BL 0x1C16DFC
	0x022A3D64 SUB X2, X29, 0x80
	0x022A3D68 MOV X0, X25
	0x022A3D6C MOV X1, X19
	0x022A3D70 MOV X3, X31
	0x022A3D74 BL 0x3A8C6CC
	0x022A3D78 LDR X0, [X23]
	0x022A3D7C LDR W8, [X0 + 0xE0]
	0x022A3D80 CBNZ W8, 0x22A3D8C
	0x022A3D84 BL 0x1C16DFC
	0x022A3D88 LDR X0, [X23]
	0x022A3D8C LDR X8, [X0 + 0xB8]
	0x022A3D90 LDR X2, [X8 + 0x18]
	0x022A3D94 STURB W31, [X29 - 0xC0]
	0x022A3D98 SUB X0, X29, 0xC0
	0x022A3D9C MOV X1, X31
	0x022A3DA0 MOV X3, X31
	0x022A3DA4 BL 0x39B1DB0
	0x022A3DA8 LDURB W8, [X29 - 0xC0]
	0x022A3DAC STURB W8, [X29 - 0x88]
	0x022A3DB0 MOV X0, X25
	0x022A3DB4 MOV X1, X19
	0x022A3DB8 MOV X2, X31
	0x022A3DBC BL 0x3C54940
	0x022A3DC0 MOV X26, X31
	0x022A3DC4 MOVZ W27, 0x15
	0x022A3DC8 SUB X0, X29, 0x88
	0x022A3DCC MOV X1, X31
	0x022A3DD0 BL 0x39B1DB4
	0x022A3DD4 CBNZ X26, 0x22A3F54
	0x022A3DD8 CMP W27, 0x15
	0x022A3DDC B.EQ 0x22A3DE4
	0x022A3DE0 CBNZ W27, 0x22A3E4C
	0x022A3DE4 LDR X0, [X23]
	0x022A3DE8 LDR W8, [X0 + 0xE0]
	0x022A3DEC CBNZ W8, 0x22A3DF8
	0x022A3DF0 BL 0x1C16DFC
	0x022A3DF4 LDR X0, [X23]
	0x022A3DF8 LDR X8, [X0 + 0xB8]
	0x022A3DFC LDR X2, [X8 + 0x8]
	0x022A3E00 STURB W31, [X29 - 0xC0]
	0x022A3E04 SUB X0, X29, 0xC0
	0x022A3E08 MOV X1, X31
	0x022A3E0C MOV X3, X31
	0x022A3E10 BL 0x39B1DB0
	0x022A3E14 LDURB W8, [X29 - 0xC0]
	0x022A3E18 LDUR X1, [X29 - 0x68]
	0x022A3E1C STURB W8, [X29 - 0x88]
	0x022A3E20 MOV X0, X25
	0x022A3E24 MOV X2, X31
	0x022A3E28 BL 0x3C547E8
	0x022A3E2C MOV X25, X31
	0x022A3E30 MOV W23, W31
	0x022A3E34 MOVZ W27, 0x12
	0x022A3E38 SUB X0, X29, 0x88
	0x022A3E3C MOV X1, X31
	0x022A3E40 BL 0x39B1DB4
	0x022A3E44 CBNZ X25, 0x22A3F5C
	0x022A3E48 CBNZ W23, 0x22A3BB0
	0x022A3E4C ADRP X8, 0x1E79000
	0x022A3E50 LDR X8, [X8 + 0x8A0]
	0x022A3E54 SUB X0, X29, 0x78
	0x022A3E58 LDR X1, [X8]
	0x022A3E5C BL 0x24A69BC
	0x022A3E60 CMP W27, 0x12
	0x022A3E64 B.EQ 0x22A3BC4
	0x022A3E68 CBZ W27, 0x22A3BC4
	0x022A3E6C B 0x22A3EF0
	0x022A3E70 MOVZ W9, 0x50
	0x022A3E74 ANDS W31, W8, W9, 0x0
	0x022A3E78 B.EQ 0x22A3EB8
	0x022A3E7C LDR X0, [X23]
	0x022A3E80 LDR W8, [X0 + 0xE0]
	0x022A3E84 CBNZ W8, 0x22A3E8C
	0x022A3E88 BL 0x1C16DFC
	0x022A3E8C SUB X9, X29, 0xC
	0x022A3E90 LDUR W9, [X9 - 0x100]
	0x022A3E94 MOVZ W8, 0x6
	0x022A3E98 MOV X0, X24
	0x022A3E9C MOV W1, W31
	0x022A3EA0 MADD W4, W28, W8, W9
	0x022A3EA4 MOV W2, W31
	0x022A3EA8 MOV X3, X22
	0x022A3EAC MOV W5, W21
	0x022A3EB0 MOV X6, X31
	0x022A3EB4 BL 0x3C0ED80
	0x022A3EB8 MOV X0, X19
	0x022A3EBC MOV X1, X20
	0x022A3EC0 MOV X2, X31
	0x022A3EC4 BL 0x3C040F0
	0x022A3EC8 LDR X0, [X23]
	0x022A3ECC LDR W8, [X0 + 0xE0]
	0x022A3ED0 CBNZ W8, 0x22A3ED8
	0x022A3ED4 BL 0x1C16DFC
	0x022A3ED8 MOV X0, X20
	0x022A3EDC MOV X1, X31
	0x022A3EE0 BL 0x3C0FBB0
	0x022A3EE4 MOV X0, X24
	0x022A3EE8 MOV X1, X31
	0x022A3EEC BL 0x3C20C50
	0x022A3EF0 SUB X8, X29, 0x8
	0x022A3EF4 LDUR X8, [X8 - 0x100]
	0x022A3EF8 LDR X8, [X8 + 0x28]
	0x022A3EFC LDUR X9, [X29 - 0x20]
	0x022A3F00 CMP X8, X9
	0x022A3F04 B.NE 0x22A3F64
	0x022A3F08 SUB X31, X29, 0x10
	0x022A3F0C LDP X20, X19, [X31 + 0x60]
	0x022A3F10 LDP X22, X21, [X31 + 0x50]
	0x022A3F14 LDP X24, X23, [X31 + 0x40]
	0x022A3F18 LDP X26, X25, [X31 + 0x30]
	0x022A3F1C LDP X28, X27, [X31 + 0x20]
	0x022A3F20 LDP X29, X30, [X31 + 0x10]
	0x022A3F24 LDP D9, D8, [X31], #0x70
	0x022A3F28 RET
	0x022A3F2C BL 0x1C16F20
	0x022A3F30 BL 0x1C16F20
	0x022A3F34 BL 0x1C16F20
	0x022A3F38 BL 0x1C16F20
	0x022A3F3C BL 0x1C16F20
	0x022A3F40 MOV X0, X26
	0x022A3F44 BL 0x1C16F18
	0x022A3F48 MOV X0, X26
	0x022A3F4C BL 0x1C16F18
	0x022A3F50 BL 0x1C16F20
	0x022A3F54 MOV X0, X26
	0x022A3F58 BL 0x1C16F18
	0x022A3F5C MOV X0, X25
	0x022A3F60 BL 0x1C16F18
	0x022A3F64 BL 0x3EB1B20
	0x022A3F68 MOV X26, X1
	0x022A3F6C CMP W26, 0x1
	0x022A3F70 MOV X27, X0
	0x022A3F74 B.NE 0x22A3F94
	0x022A3F78 MOV X0, X27
	0x022A3F7C BL 0x3EB1AD0
	0x022A3F80 LDR X25, [X0]
	0x022A3F84 BL 0x3EB1AE0
	0x022A3F88 MOV W27, W31
	0x022A3F8C MOVZ W23, 0x1
	0x022A3F90 B 0x22A3E38
	0x022A3F94 MOV X25, X31
	0x022A3F98 SUB X0, X29, 0x88
	0x022A3F9C MOV X1, X31
	0x022A3FA0 BL 0x39B1DB4
	0x022A3FA4 CBZ X25, 0x22A414C
	0x022A3FA8 MOV X0, X25
	0x022A3FAC BL 0x1C16F18
	0x022A3FB0 MOV X26, X1
	0x022A3FB4 MOV X27, X0
	0x022A3FB8 B 0x22A3F98
	0x022A3FBC B 0x22A4144
	0x022A3FC0 MOV X26, X1
	0x022A3FC4 CMP W26, 0x1
	0x022A3FC8 MOV X27, X0
	0x022A3FCC B.NE 0x22A3FF8
	0x022A3FD0 MOV X0, X27
	0x022A3FD4 BL 0x3EB1AD0
	0x022A3FD8 LDR X8, [X0]
	0x022A3FDC SUB X9, X29, 0x18
	0x022A3FE0 STUR X8, [X9 - 0x100]
	0x022A3FE4 BL 0x3EB1AE0
	0x022A3FE8 SUB X8, X29, 0x18
	0x022A3FEC LDUR X26, [X8 - 0x100]
	0x022A3FF0 MOV W27, W31
	0x022A3FF4 B 0x22A3DC8
	0x022A3FF8 SUB X8, X29, 0x18
	0x022A3FFC STUR X31, [X8 - 0x100]
	0x022A4000 SUB X0, X29, 0x88
	0x022A4004 MOV X1, X31
	0x022A4008 BL 0x39B1DB4
	0x022A400C SUB X8, X29, 0x18
	0x022A4010 LDUR X8, [X8 - 0x100]
	0x022A4014 CBZ X8, 0x22A414C
	0x022A4018 SUB X8, X29, 0x18
	0x022A401C LDUR X0, [X8 - 0x100]
	0x022A4020 BL 0x1C16F18
	0x022A4024 MOV X26, X1
	0x022A4028 MOV X27, X0
	0x022A402C B 0x22A4000
	0x022A4030 B 0x22A4144
	0x022A4034 B 0x22A4144
	0x022A4038 B 0x22A4144
	0x022A403C MOV X26, X1
	0x022A4040 CMP W26, 0x1
	0x022A4044 MOV X27, X0
	0x022A4048 B.NE 0x22A4074
	0x022A404C MOV X0, X27
	0x022A4050 BL 0x3EB1AD0
	0x022A4054 LDR X8, [X0]
	0x022A4058 SUB X9, X29, 0x18
	0x022A405C STUR X8, [X9 - 0x100]
	0x022A4060 BL 0x3EB1AE0
	0x022A4064 SUB X8, X29, 0x18
	0x022A4068 LDUR X26, [X8 - 0x100]
	0x022A406C MOV W27, W31
	0x022A4070 B 0x22A3D0C
	0x022A4074 SUB X8, X29, 0x18
	0x022A4078 STUR X31, [X8 - 0x100]
	0x022A407C SUB X0, X29, 0x88
	0x022A4080 MOV X1, X31
	0x022A4084 BL 0x39B1DB4
	0x022A4088 SUB X8, X29, 0x18
	0x022A408C LDUR X8, [X8 - 0x100]
	0x022A4090 CBZ X8, 0x22A414C
	0x022A4094 SUB X8, X29, 0x18
	0x022A4098 LDUR X0, [X8 - 0x100]
	0x022A409C BL 0x1C16F18
	0x022A40A0 MOV X26, X1
	0x022A40A4 MOV X27, X0
	0x022A40A8 B 0x22A407C
	0x022A40AC B 0x22A4144
	0x022A40B0 B 0x22A4144
	0x022A40B4 B 0x22A4144
	0x022A40B8 B 0x22A4144
	0x022A40BC B 0x22A4144
	0x022A40C0 MOV X26, X1
	0x022A40C4 CMP W26, 0x1
	0x022A40C8 MOV X27, X0
	0x022A40CC B.NE 0x22A40F8
	0x022A40D0 MOV X0, X27
	0x022A40D4 BL 0x3EB1AD0
	0x022A40D8 LDR X8, [X0]
	0x022A40DC SUB X9, X29, 0x18
	0x022A40E0 STUR X8, [X9 - 0x100]
	0x022A40E4 BL 0x3EB1AE0
	0x022A40E8 SUB X8, X29, 0x18
	0x022A40EC LDUR X26, [X8 - 0x100]
	0x022A40F0 MOV W27, W31
	0x022A40F4 B 0x22A3CA0
	0x022A40F8 SUB X8, X29, 0x18
	0x022A40FC STUR X31, [X8 - 0x100]
	0x022A4100 SUB X0, X29, 0x88
	0x022A4104 MOV X1, X31
	0x022A4108 BL 0x39B1DB4
	0x022A410C SUB X8, X29, 0x18
	0x022A4110 LDUR X8, [X8 - 0x100]
	0x022A4114 CBZ X8, 0x22A414C
	0x022A4118 SUB X8, X29, 0x18
	0x022A411C LDUR X0, [X8 - 0x100]
	0x022A4120 BL 0x1C16F18
	0x022A4124 MOV X26, X1
	0x022A4128 MOV X27, X0
	0x022A412C B 0x22A4100
	0x022A4130 B 0x22A4144
	0x022A4134 B 0x22A4144
	0x022A4138 B 0x22A4144
	0x022A413C B 0x22A4144
	0x022A4140 B 0x22A4144
	0x022A4144 MOV X26, X1
	0x022A4148 MOV X27, X0
	0x022A414C CMP W26, 0x1
	0x022A4150 B.NE 0x22A4184
	0x022A4154 MOV X0, X27
	0x022A4158 BL 0x3EB1AD0
	0x022A415C LDR X25, [X0]
	0x022A4160 BL 0x3EB1AE0
	0x022A4164 ADRP X8, 0x1E78000
	0x022A4168 LDR X8, [X8 + 0x8A0]
	0x022A416C SUB X0, X29, 0x78
	0x022A4170 LDR X1, [X8]
	0x022A4174 BL 0x24A69BC
	0x022A4178 CBZ X25, 0x22A3BC4
	0x022A417C MOV X0, X25
	0x022A4180 BL 0x1C16F18
	0x022A4184 MOV X25, X31
	0x022A4188 B 0x22A4190
	0x022A418C MOV X27, X0
	0x022A4190 ADRP X8, 0x1E78000
	0x022A4194 LDR X8, [X8 + 0x8A0]
	0x022A4198 LDR X1, [X8]
	0x022A419C SUB X0, X29, 0x78
	0x022A41A0 BL 0x24A69BC
	0x022A41A4 CBNZ X25, 0x22A41B0
	0x022A41A8 MOV X0, X27
	0x022A41AC BL 0x1D2C690
	0x022A41B0 MOV X0, X25
	0x022A41B4 BL 0x1C16F18
	0x022A41B8 BL 0x1990590
	0x022A41BC ADD X0, X0, W1, 0x3, SXTW
	0x022A41C0 RET
	0x022A41C4 ADD X0, X0, W1, 0x3, SXTW
	0x022A41C8 RET
	0x022A41CC ADD X0, X0, W1, 0x4, SXTW
	0x022A41D0 RET
	0x022A41D4 ADD X0, X0, W1, 0x4, SXTW
	0x022A41D8 RET
	0x022A41DC ADD X0, X0, W1, 0x3, SXTW
	0x022A41E0 RET
	0x022A41E4 ADD X0, X0, W1, 0x4, SXTW
	0x022A41E8 RET
	0x022A41EC ADD X0, X0, W1, 0x4, SXTW
	0x022A41F0 RET
	0x022A41F4 MOVZ W8, 0x50
	0x022A41F8 SMADDL X0, X1, X8, X0
	0x022A41FC RET
	0x022A4200 ADD X0, X0, W1, 0x4, SXTW
	0x022A4204 RET
	0x022A4208 MOVZ W8, 0x18
	0x022A420C SMADDL X0, X1, X8, X0
	0x022A4210 RET
	0x022A4214 ADD X0, X0, W1, 0x4, SXTW
	0x022A4218 RET
	0x022A421C ADD X0, X0, W1, 0x4, SXTW
	0x022A4220 RET
	0x022A4224 ADD X0, X0, W1, 0x4, SXTW
	0x022A4228 RET
	0x022A422C ADD X0, X0, W1, 0x4, SXTW
	0x022A4230 RET
	0x022A4234 ADD X0, X0, W1, 0x4, SXTW
	0x022A4238 RET
	0x022A423C ADD X0, X0, W1, 0x4, SXTW
	0x022A4240 RET
	0x022A4244 ADD X0, X0, W1, 0x4, SXTW
	0x022A4248 RET
	0x022A424C MOVZ W8, 0x18
	0x022A4250 SMADDL X0, X1, X8, X0
	0x022A4254 RET
	0x022A4258 MOVZ W8, 0x18
	0x022A425C SMADDL X0, X1, X8, X0
	0x022A4260 RET
	0x022A4264 ADD X0, X0, W1, 0x4, SXTW
	0x022A4268 RET
	0x022A426C ADD X0, X0, W1, 0x3, SXTW
	0x022A4270 RET
	0x022A4274 ADD X0, X0, W1, 0x4, SXTW
	0x022A4278 RET
	0x022A427C ADD X0, X0, W1, 0x4, SXTW
	0x022A4280 RET
	0x022A4284 ADD X0, X0, W1, 0x4, SXTW
	0x022A4288 RET
	0x022A428C MOVZ W8, 0xC
	0x022A4290 SMADDL X0, X1, X8, X0
	0x022A4294 RET
	0x022A4298 MOVZ W8, 0x18
	0x022A429C SMADDL X0, X1, X8, X0
	0x022A42A0 RET
	0x022A42A4 MOVZ W8, 0xC
	0x022A42A8 SMADDL X0, X1, X8, X0
	0x022A42AC RET
	0x022A42B0 ADD X0, X0, W1, 0x3, SXTW
	0x022A42B4 RET
	0x022A42B8 ADD X0, X0, W1, 0x4, SXTW
	0x022A42BC RET
	0x022A42C0 MOVZ W8, 0xC
	0x022A42C4 SMADDL X0, X1, X8, X0
	0x022A42C8 RET
	0x022A42CC MOVZ W8, 0x18
	0x022A42D0 SMADDL X0, X1, X8, X0
	0x022A42D4 RET
	0x022A42D8 ADD X0, X0, W1, 0x4, SXTW
	0x022A42DC RET
	0x022A42E0 SXTW X8, W1
	0x022A42E4 ADD X0, X0, X8, 0x5, LSL
	0x022A42E8 RET
	0x022A42EC MOVZ W8, 0x30
	0x022A42F0 SMADDL X0, X1, X8, X0
	0x022A42F4 RET
	0x022A42F8 MOVZ W8, 0x38
	0x022A42FC SMADDL X0, X1, X8, X0
	0x022A4300 RET
	0x022A4304 MOVZ W8, 0x50
	0x022A4308 SMADDL X0, X1, X8, X0
	0x022A430C RET
	0x022A4310 ADD X0, X0, W1, 0x4, SXTW
	0x022A4314 RET
	0x022A4318 MOVZ W8, 0x78
	0x022A431C SMADDL X0, X1, X8, X0
	0x022A4320 RET
	0x022A4324 MOVZ W8, 0x34
	0x022A4328 SMADDL X0, X1, X8, X0
	0x022A432C RET
	0x022A4330 ADD X0, X0, W1, SXTW
	0x022A4334 RET
	0x022A4338 MOVZ W8, 0x18
	0x022A433C SMADDL X0, X1, X8, X0
	0x022A4340 RET
	0x022A4344 ADD X0, X0, W1, SXTW
	0x022A4348 RET
	0x022A434C ADD X0, X0, X1
	0x022A4350 RET
	0x022A4354 ADD X0, X0, W1, SXTW
	0x022A4358 RET
	0x022A435C ADD X0, X0, W1, 0x1, SXTW
	0x022A4360 RET
	0x022A4364 ADD X0, X0, X1, 0x1, LSL
	0x022A4368 RET
	0x022A436C ADD X0, X0, W1, 0x4, SXTW
	0x022A4370 RET
	0x022A4374 ADD X0, X0, W1, 0x2, SXTW
	0x022A4378 RET
	0x022A437C MOVZ W8, 0x68
	0x022A4380 SMADDL X0, X1, X8, X0
	0x022A4384 RET
	0x022A4388 MOVZ W8, 0x18
	0x022A438C SMADDL X0, X1, X8, X0
	0x022A4390 RET
	0x022A4394 ADD X0, X0, W1, 0x4, SXTW
	0x022A4398 RET
	0x022A439C MOVZ W8, 0x18
	0x022A43A0 SMADDL X0, X1, X8, X0
	0x022A43A4 RET
	0x022A43A8 ADD X0, X0, W1, 0x3, SXTW
	0x022A43AC RET
	0x022A43B0 ADD X0, X0, W1, 0x4, SXTW
	0x022A43B4 RET
	0x022A43B8 ADD X0, X0, W1, 0x4, SXTW
	0x022A43BC RET
	0x022A43C0 MOVZ W8, 0x28
	0x022A43C4 SMADDL X0, X1, X8, X0
	0x022A43C8 RET
	0x022A43CC ADD X0, X0, W1, 0x3, SXTW
	0x022A43D0 RET
	0x022A43D4 ADD X0, X0, W1, 0x4, SXTW
	0x022A43D8 RET
	0x022A43DC ADD X0, X0, W1, 0x2, SXTW
	0x022A43E0 RET
	0x022A43E4 ADD X0, X0, W1, 0x3, SXTW
	0x022A43E8 RET
	0x022A43EC ADD X0, X0, W1, 0x4, SXTW
	0x022A43F0 RET
	0x022A43F4 MOVZ W8, 0x18
	0x022A43F8 SMADDL X0, X1, X8, X0
	0x022A43FC RET
	0x022A4400 MOVZ W8, 0x2C
	0x022A4404 SMADDL X0, X1, X8, X0
	0x022A4408 RET
	0x022A440C ADD X0, X0, W1, 0x4, SXTW
	0x022A4410 RET
	0x022A4414 ADD X0, X0, W1, 0x4, SXTW
	0x022A4418 RET
	0x022A441C MOVZ W8, 0x50
	0x022A4420 SMADDL X0, X1, X8, X0
	0x022A4424 RET
	0x022A4428 MOVZ W8, 0x58
	0x022A442C SMADDL X0, X1, X8, X0
	0x022A4430 RET
	0x022A4434 ADD X0, X0, W1, 0x4, SXTW
	0x022A4438 RET
	0x022A443C MOVZ W8, 0x38
	0x022A4440 SMADDL X0, X1, X8, X0
	0x022A4444 RET
	0x022A4448 ADD X0, X0, W1, 0x3, SXTW
	0x022A444C RET
	0x022A4450 ADD X0, X0, W1, 0x1, SXTW
	0x022A4454 RET
	0x022A4458 ADD X0, X0, W1, 0x2, SXTW
	0x022A445C RET
	0x022A4460 ADD X0, X0, W1, 0x2, SXTW
	0x022A4464 RET
	0x022A4468 ADD X0, X0, W1, 0x3, SXTW
	0x022A446C RET
	0x022A4470 MOVZ W8, 0x30
	0x022A4474 SMADDL X0, X1, X8, X0
	0x022A4478 RET
	0x022A447C ADD X0, X0, W1, 0x3, SXTW
	0x022A4480 RET
	0x022A4484 ADD X0, X0, X1, 0x3, LSL
	0x022A4488 RET
	0x022A448C ADD X0, X0, W1, 0x4, SXTW
	0x022A4490 RET
	0x022A4494 ADD X0, X0, W1, 0x4, SXTW
	0x022A4498 RET
	0x022A449C MOVZ W8, 0x68
	0x022A44A0 SMADDL X0, X1, X8, X0
	0x022A44A4 RET
	0x022A44A8 ADD X0, X0, W1, 0x2, SXTW
	0x022A44AC RET
	0x022A44B0 ADD X0, X0, W1, 0x4, SXTW
	0x022A44B4 RET
	0x022A44B8 MOVZ W8, 0xC
	0x022A44BC SMADDL X0, X1, X8, X0
	0x022A44C0 RET
	0x022A44C4 MOVZ W8, 0x18
	0x022A44C8 SMADDL X0, X1, X8, X0
	0x022A44CC RET
	0x022A44D0 MOVZ W8, 0x18
	0x022A44D4 SMADDL X0, X1, X8, X0
	0x022A44D8 RET
	0x022A44DC SXTW X8, W1
	0x022A44E0 ADD X0, X0, X8, 0x6, LSL
	0x022A44E4 RET
	0x022A44E8 ADD X0, X0, W1, 0x4, SXTW
	0x022A44EC RET
	0x022A44F0 MOVZ W8, 0x18
	0x022A44F4 SMADDL X0, X1, X8, X0
	0x022A44F8 RET
	0x022A44FC MOVZ W8, 0x18
	0x022A4500 SMADDL X0, X1, X8, X0
	0x022A4504 RET
	0x022A4508 SXTW X8, W1
	0x022A450C ADD X0, X0, X8, 0x5, LSL
	0x022A4510 RET
	0x022A4514 MOVZ W8, 0x60
	0x022A4518 SMADDL X0, X1, X8, X0
	0x022A451C RET
	0x022A4520 MOVZ W8, 0x18
	0x022A4524 SMADDL X0, X1, X8, X0
	0x022A4528 RET
	0x022A452C MOVZ W8, 0x18
	0x022A4530 SMADDL X0, X1, X8, X0
	0x022A4534 RET
	0x022A4538 ADD X0, X0, W1, 0x2, SXTW
	0x022A453C RET
	0x022A4540 ADD X0, X0, W1, 0x1, SXTW
	0x022A4544 RET
	0x022A4548 ADD X0, X0, W1, 0x3, SXTW
	0x022A454C RET
	0x022A4550 MOVZ W8, 0x28
	0x022A4554 SMADDL X0, X1, X8, X0
	0x022A4558 RET
	0x022A455C MOVZ W8, 0x28
	0x022A4560 SMADDL X0, X1, X8, X0
	0x022A4564 RET
	0x022A4568 ADD X0, X0, W1, 0x2, SXTW
	0x022A456C RET
	0x022A4570 ADD X0, X0, W1, 0x4, SXTW
	0x022A4574 RET
	0x022A4578 ADD X0, X0, W1, 0x4, SXTW
	0x022A457C RET
	0x022A4580 ADD X0, X0, W1, 0x4, SXTW
	0x022A4584 RET
	0x022A4588 MOVZ W8, 0x2C
	0x022A458C SMADDL X0, X1, X8, X0
	0x022A4590 RET
	0x022A4594 MOVZ W8, 0x24
	0x022A4598 SMADDL X0, X1, X8, X0
	0x022A459C RET
	0x022A45A0 MOVZ W8, 0x50
	0x022A45A4 SMADDL X0, X1, X8, X0
	0x022A45A8 RET
	0x022A45AC ADD X0, X0, W1, 0x4, SXTW
	0x022A45B0 RET
	0x022A45B4 ADD X0, X0, W1, 0x4, SXTW
	0x022A45B8 RET
	0x022A45BC ADD X0, X0, W1, 0x4, SXTW
	0x022A45C0 RET
	0x022A45C4 ADD X0, X0, W1, 0x4, SXTW
	0x022A45C8 RET
	0x022A45CC MOVZ W8, 0x18
	0x022A45D0 SMADDL X0, X1, X8, X0
	0x022A45D4 RET
	0x022A45D8 ADD X0, X0, W1, 0x3, SXTW
	0x022A45DC RET
	0x022A45E0 ADD X0, X0, W1, 0x3, SXTW
	0x022A45E4 RET
	0x022A45E8 MOVZ W8, 0x18
	0x022A45EC SMADDL X0, X1, X8, X0
	0x022A45F0 RET

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+256], D9
	003 Move [X31+264], D8
	004 Move [X31+272], X29
	005 Move [X31+280], X30
	006 Move [X31+288], X28
	007 Move [X31+296], X27
	008 Move [X31+304], X26
	009 Move [X31+312], X25
	010 Move [X31+320], X24
	011 Move [X31+328], X23
	012 Move [X31+336], X22
	013 Move [X31+344], X21
	014 Move [X31+352], X20
	015 Move [X31+360], X19
	016 Move X8, [X4+56]
	017 Move X20, X4
	018 Move X21, X3
	019 Move X19, X2
	020 Move X25, X1
	021 Move X26, X0
	022 Compare X8, 0
	023 JumpIfNotEqual {80}
	024 Move X0, 0x1E51000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x1E7A000
	028 Move X0, [X0+2160]
	029 Call 0x1C17CF4
	030 Move X0, 0x1E55000
	031 Move X0, [X0+712]
	032 Call 0x1C17CF4
	033 Move X0, 0x1E7A000
	034 Move X0, [X0+2168]
	035 Call 0x1C17CF4
	036 Move X0, 0x1E7A000
	037 Move X0, [X0+2176]
	038 Call 0x1C17CF4
	039 Move X0, 0x1E7A000
	040 Move X0, [X0+2184]
	041 Call 0x1C17CF4
	042 Move X0, 0x1E7A000
	043 Move X0, [X0+2192]
	044 Call 0x1C17CF4
	045 Move X0, 0x1E51000
	046 Move X0, [X0+1448]
	047 Call 0x1C17CF4
	048 Move X0, 0x1E51000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x1E7A000
	052 Move X0, [X0+2200]
	053 Call 0x1C17CF4
	054 Move X0, 0x1E7A000
	055 Move X0, [X0+2208]
	056 Call 0x1C17CF4
	057 Move X0, 0x1E7A000
	058 Move X0, [X0+2144]
	059 Call 0x1C17CF4
	060 Move X0, 0x1E7A000
	061 Move X0, [X0+2152]
	062 Call 0x1C17CF4
	063 Move X0, 0x1E51000
	064 Move X0, [X0+1728]
	065 Call 0x1C17CF4
	066 Move X0, 0x1E7A000
	067 Move X0, [X0+2216]
	068 Call 0x1C17CF4
	069 Move X0, 0x1E7A000
	070 Move X0, [X0+2224]
	071 Call 0x1C17CF4
	072 Move X0, 0x1E7A000
	073 Move X0, [X0+2232]
	074 Call 0x1C17CF4
	075 Move X8, [X20+56]
	076 Compare X8, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X20
	079 Call 0x1C5D6E0
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move [X31+240], W31
	082 Move [X31+176], X31
	083 Move [X31+184], X31
	084 Move [X31+160], X31
	085 Move [X31+168], X31
	086 Move [X31+208], V0
	087 Move [X31+216], V0
	088 Move [X31+12], V0
	089 Move [X31+152], W31
	090 Compare X21, 0
	091 JumpIfEqual {100}
	092 Move X9, 0x1E7A000
	093 Move X9, [X9+2152]
	094 Move X8, [X21]
	095 Move X10, [X9]
	096 Move W9, [X8+304]
	097 Move W11, [X10+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X27, X31
	100 Move X9, X31
	101 Move X27, X31
	102 Move X8, X31
	103 Move X12, [X8+200]
	104 Add X11, X12, X11
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 Move X10, 0x1E7A000
	109 Move X10, [X10+2144]
	110 Move X10, [X10]
	111 Move W11, [X10+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, X31
	114 Move X8, [X8+200]
	115 Add X8, X8, X11
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move X9, X27
	120 Or X10, X27, X8
	121 Compare X10, 0
	122 JumpIfNotEqual {163}
	123 Move X8, 0x1E51000
	124 Move X8, [X8+1728]
	125 Move X0, [X8]
	126 Move X8, [X20+56]
	127 Move W9, [X0+224]
	128 Move X19, [X8+8]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X19
	133 Move X1, X31
	134 Call Type.GetTypeFromHandle, X0
	135 Compare X0, 0
	136 JumpIfEqual {599}
	137 Move X8, [X0]
	138 Move X9, [X8+744]
	139 Move X1, [X8+752]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X8, 0x1E7A000
	142 Move X8, [X8+2224]
	143 Move X9, 0x1E7A000
	144 Move X9, [X9+2232]
	145 Move X1, X0
	146 Move X8, [X8]
	147 Move X3, X31
	148 Move X2, [X9]
	149 Move X0, X8
	150 Call String.Concat, X0, X1, X2
	151 Move X8, 0x1E51000
	152 Move X8, [X8+2600]
	153 Move X19, X0
	154 Move X8, [X8]
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X0, X19
	161 Move X1, X31
	162 Call Debug.LogWarning, X0
	163 Compare X27, 0
	164 JumpIfEqual {169}
	165 Add X9, X9, 28
	166 Move X8, X27
	167 Compare X19, 0
	168 JumpIfNotEqual {174}
	169 Compare X8, 0
	170 JumpIfEqual {599}
	171 Add X9, X8, 28
	172 Compare X19, 0
	173 JumpIfEqual {599}
	174 Move W21, [X8+24]
	175 Move X22, [X8+16]
	176 Move W23, [X8+32]
	177 Move W24, [X9]
	178 Move X0, X19
	179 Move X1, X31
	180 Call Camera.get_targetTexture, X0
	181 Compare X22, 0
	182 JumpIfEqual {599}
	183 Move X20, X0
	184 Add X8, X31, 96
	185 Move X0, X22
	186 Move X1, X31
	187 Move [X31+28], W24
	188 Call RenderTexture.get_descriptor, X0
	189 Move V0, [X31+96]
	190 Move V1, [X31+112]
	191 Move V2, [X31+8]
	192 Move W8, [X31+144]
	193 Move X0, X22
	194 Move [X31+192], V0
	195 Move [X31+200], V1
	196 Move [X31+14], V2
	197 Move [X31+240], W8
	198 Move X8, [X22]
	199 Move X9, [X8+456]
	200 Move X1, [X8+464]
	201 NotImplemented "Instruction BLR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction MOVI not yet implemented."
	204 Move [X31+240], W31
	205 Move [X31+208], V0
	206 Move [X31+216], V0
	207 Move [X31+12], V0
	208 Move X0, X22
	209 Move X1, X31
	210 Call RenderTexture.get_format, X0
	211 Move W1, W0
	212 Add X0, X31, 192
	213 Move X2, X31
	214 Call RenderTextureDescriptor.set_colorFormat, X0, X1
	215 Move W8, 1
	216 Move [X31+204], W8
	217 Add X8, X31, 96
	218 Move X0, X22
	219 Move X1, X31
	220 Call RenderTexture.get_descriptor, X0
	221 Move W8, [X31+104]
	222 Move W9, 2
	223 Move [X31+224], W9
	224 Move X0, X22
	225 Move [X31+200], W8
	226 Move X8, [X22]
	227 Move X9, [X8+392]
	228 Move X1, [X8+400]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, 0x1E51000
	231 Move X8, [X8+1448]
	232 Move W24, W0
	233 Move X8, [X8]
	234 Move W9, [X8+224]
	235 Compare W9, 0
	236 JumpIfNotEqual {239}
	237 Move X0, X8
	238 Call 0x1C17DFC
	239 NotImplemented "Instruction SCVTF not yet implemented."
	240 Move D0, 2
	241 Move V1, V8
	242 Move X0, X31
	243 Call Math.Pow, V0, V1
	244 Move X9, 0x7FF00000
	245 Move D9, X9
	246 NotImplemented "Instruction FCVTZS not yet implemented."
	247 Move W28, 0x80000000
	248 NotImplemented "Instruction FCMP not yet implemented."
	249 NotImplemented "Instruction CSEL not yet implemented."
	250 NotImplemented "Instruction SDIV not yet implemented."
	251 Move [X31+192], W8
	252 Move X8, [X22]
	253 Move X0, X22
	254 Move X9, [X8+424]
	255 Move X1, [X8+432]
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move W24, W0
	258 Move D0, 2
	259 Move V1, V8
	260 Move X0, X31
	261 Call Math.Pow, V0, V1
	262 NotImplemented "Instruction FCVTZS not yet implemented."
	263 NotImplemented "Instruction FCMP not yet implemented."
	264 Move V0, [X31+192]
	265 NotImplemented "Instruction CSEL not yet implemented."
	266 NotImplemented "Instruction SDIV not yet implemented."
	267 NotImplemented "Instruction MOVI not yet implemented."
	268 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	269 NotImplemented "Instruction SMAX not yet implemented."
	270 Move [X31+192], D0
	271 Move X8, [X22]
	272 Move X0, X22
	273 Move X9, [X8+456]
	274 Move X1, [X8+464]
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare W21, 0
	277 JumpIfNotEqual {280}
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X24, X31
	280 Move V0, [X31+192]
	281 Move V1, [X31+208]
	282 Move V2, [X31+14]
	283 Move W8, [X31+240]
	284 Add X0, X31, 32
	285 Move X1, X31
	286 Move [X31+32], V0
	287 Move [X31+40], V1
	288 Move [X31+4], V2
	289 Move [X31+80], W8
	290 Call RenderTexture.GetTemporary, X0
	291 Move X24, X0
	292 Move X29, 0x1E51000
	293 Move X29, [X29+1432]
	294 Move X0, [X29]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Move X0, X24
	300 Move X1, X31
	301 Call Object.op_Implicit, X0
	302 And W31, W0, 1
	303 NotImplemented "Instruction CSEL not yet implemented."
	304 Move X0, X19
	305 Move X2, X31
	306 Call Camera.set_targetTexture, X0, X1
	307 Move X8, 0x1E7A000
	308 Move X8, [X8+2176]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X8, 0x1E7A000
	315 Move X8, [X8+2168]
	316 Add X0, X31, 184
	317 Move X1, [X8]
	318 Call ListPool`1<Object>.Get, X0
	319 Move X8, X0
	320 Move X0, [X31+184]
	321 Move [X31+168], X8
	322 Move [X31+176], X1
	323 Compare X0, 0
	324 JumpIfEqual {600}
	325 Move X9, 0x1E7A000
	326 Move X9, [X9+2184]
	327 Move W10, [X0+28]
	328 Move X8, [X0+16]
	329 Move X9, [X9]
	330 Add W10, W10, 1
	331 Move [X0+28], W10
	332 Compare X8, 0
	333 JumpIfEqual {601}
	334 NotImplemented "Instruction LDRSW not yet implemented."
	335 Move W11, [X8+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W9, W10, 1
	338 Add X8, X8, X10
	339 Move [X0+24], W9
	340 Move [X8+32], X19
	341 Move X8, [X9+32]
	342 Move X8, [X8+192]
	343 Move X2, [X8+112]
	344 Move X1, X19
	345 Call List`1<Object>.AddWithResize, X0, X1
	346 Compare X27, 0
	347 JumpIfEqual {403}
	348 Move X0, [X31+184]
	349 Compare X0, 0
	350 JumpIfEqual {602}
	351 Move X8, 0x1E79000
	352 Move X8, [X8+2192]
	353 Move X1, [X8]
	354 Call List`1<Object>.ToArray, X0
	355 Compare X26, 0
	356 JumpIfEqual {603}
	357 Move X8, [X26]
	358 Move X2, X0
	359 Move X9, [X8+376]
	360 Move X3, [X8+384]
	361 Move X0, X26
	362 Move X1, X25
	363 NotImplemented "Instruction BLR not yet implemented."
	364 Move X8, 0x1E79000
	365 Move X8, [X8+2208]
	366 Add X0, X31, 168
	367 Move X1, [X8]
	368 Call 0x24A79BC, X0
	369 Move X0, [X29]
	370 Move W8, [X0+224]
	371 Compare W8, 0
	372 JumpIfNotEqual {374}
	373 Call 0x1C17DFC
	374 Move X0, X24
	375 Move X1, X31
	376 Call Object.op_Implicit, X0
	377 Move X25, 0x1E54000
	378 Move X25, [X25+712]
	379 Move TEMP, X0
	380 And TEMP, TEMP, 1
	381 Compare TEMP, 1
	382 JumpIfNotEqual {568}
	383 Move X8, [X22]
	384 Move X0, X22
	385 Move X9, [X8+456]
	386 Move X1, [X8+464]
	387 NotImplemented "Instruction BLR not yet implemented."
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move W8, 1
	390 NotImplemented "Instruction LSLV not yet implemented."
	391 Move W9, 44
	392 And W31, W8, W9
	393 Move X0, [X25]
	394 Move W8, [X0+224]
	395 Compare W8, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X0, X24
	399 Move W1, W31
	400 Move W2, W31
	401 Move X3, X22
	402 Move W4, W23
	403 Move X27, 0x1E79000
	404 Move X27, [X27+2200]
	405 Move X0, [X27]
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {411}
	409 Call 0x1C17DFC
	410 Move X0, [X27]
	411 Move X8, [X0+184]
	412 Move X2, [X8]
	413 Move [X31+96], W31
	414 Add X0, X31, 96
	415 Move X1, X31
	416 Move X3, X31
	417 Call ProfilingScope..ctor, X0, X1, X2
	418 Move W8, [X31+96]
	419 Move X1, [X31+184]
	420 Move [X31+152], W8
	421 Move X0, X25
	422 Move X2, X31
	423 Call RenderPipeline.BeginContextRendering, X0, X1
	424 Move X26, X31
	425 Move W28, 19
	426 Add X0, X31, 152
	427 Move X1, X31
	428 Call ProfilingScope.Dispose, X0
	429 Compare X26, 0
	430 JumpIfNotEqual {604}
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Compare W28, 0
	433 JumpIfNotEqual {543}
	434 Move X0, [X27]
	435 Move W8, [X0+224]
	436 Compare W8, 0
	437 JumpIfNotEqual {440}
	438 Call 0x1C17DFC
	439 Move X0, [X27]
	440 Move X8, [X0+184]
	441 Move X2, [X8+16]
	442 Move [X31+96], W31
	443 Add X0, X31, 96
	444 Move X1, X31
	445 Move X3, X31
	446 Call ProfilingScope..ctor, X0, X1, X2
	447 Move W8, [X31+96]
	448 Move [X31+152], W8
	449 Move X0, X25
	450 Move X1, X19
	451 Move X2, X31
	452 Call RenderPipeline.BeginCameraRendering, X0, X1
	453 Move X26, X31
	454 Move W28, 20
	455 Add X0, X31, 152
	456 Move X1, X31
	457 Call ProfilingScope.Dispose, X0
	458 Compare X26, 0
	459 JumpIfNotEqual {606}
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Compare W28, 0
	462 JumpIfNotEqual {543}
	463 Move X0, X19
	464 Move X1, X31
	465 Call Component.get_gameObject, X0
	466 Compare X0, 0
	467 JumpIfEqual {608}
	468 Move X8, 0x1E79000
	469 Move X8, [X8+2160]
	470 Move X2, [X8]
	471 Add X1, X31, 160
	472 Call 0x21E7600, X0, X1
	473 Move X8, 0x1E79000
	474 Move X8, [X8+2216]
	475 Move X0, [X8]
	476 Move W8, [X0+224]
	477 Compare W8, 0
	478 JumpIfNotEqual {480}
	479 Call 0x1C17DFC
	480 Add X2, X31, 160
	481 Move X0, X25
	482 Move X1, X19
	483 Move X3, X31
	484 Call UniversalRenderPipeline.RenderSingleCameraInternal, X0, X1, X2
	485 Move X0, [X27]
	486 Move W8, [X0+224]
	487 Compare W8, 0
	488 JumpIfNotEqual {491}
	489 Call 0x1C17DFC
	490 Move X0, [X27]
	491 Move X8, [X0+184]
	492 Move X2, [X8+24]
	493 Move [X31+96], W31
	494 Add X0, X31, 96
	495 Move X1, X31
	496 Move X3, X31
	497 Call ProfilingScope..ctor, X0, X1, X2
	498 Move W8, [X31+96]
	499 Move [X31+152], W8
	500 Move X0, X25
	501 Move X1, X19
	502 Move X2, X31
	503 Call RenderPipeline.EndCameraRendering, X0, X1
	504 Move X26, X31
	505 Move W28, 21
	506 Add X0, X31, 152
	507 Move X1, X31
	508 Call ProfilingScope.Dispose, X0
	509 Compare X26, 0
	510 JumpIfNotEqual {609}
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Compare W28, 0
	513 JumpIfNotEqual {543}
	514 Move X0, [X27]
	515 Move W8, [X0+224]
	516 Compare W8, 0
	517 JumpIfNotEqual {520}
	518 Call 0x1C17DFC
	519 Move X0, [X27]
	520 Move X8, [X0+184]
	521 Move X2, [X8+8]
	522 Move [X31+96], W31
	523 Add X0, X31, 96
	524 Move X1, X31
	525 Move X3, X31
	526 Call ProfilingScope..ctor, X0, X1, X2
	527 Move W8, [X31+96]
	528 Move X1, [X31+184]
	529 Move [X31+152], W8
	530 Move X0, X25
	531 Move X2, X31
	532 Call RenderPipeline.EndContextRendering, X0, X1
	533 Move X25, X31
	534 Move W26, W31
	535 Move W28, 18
	536 Add X0, X31, 152
	537 Move X1, X31
	538 Call ProfilingScope.Dispose, X0
	539 Compare X25, 0
	540 JumpIfNotEqual {611}
	541 Compare W26, 0
	542 JumpIfNotEqual {364}
	543 Move X8, 0x1E79000
	544 Move X8, [X8+2208]
	545 Add X0, X31, 168
	546 Move X1, [X8]
	547 Call 0x24A79BC, X0
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Compare W28, 0
	550 JumpIfEqual {369}
	551 Move W9, 80
	552 And W31, W8, W9
	553 Move X0, [X25]
	554 Move W8, [X0+224]
	555 Compare W8, 0
	556 JumpIfNotEqual {558}
	557 Call 0x1C17DFC
	558 Move W9, [X31+28]
	559 Move W8, 6
	560 Move X0, X24
	561 Move W1, W31
	562 NotImplemented "Instruction MADD not yet implemented."
	563 Move W2, W31
	564 Move X3, X22
	565 Move W5, W21
	566 Move X6, X31
	567 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5
	568 Move X0, X19
	569 Move X1, X20
	570 Move X2, X31
	571 Call Camera.set_targetTexture, X0, X1
	572 Move X0, [X25]
	573 Move W8, [X0+224]
	574 Compare W8, 0
	575 JumpIfNotEqual {577}
	576 Call 0x1C17DFC
	577 Move X0, X20
	578 Move X1, X31
	579 Call Graphics.SetRenderTarget, X0
	580 Move X0, X24
	581 Move X1, X31
	582 Call RenderTexture.ReleaseTemporary, X0
	583 Move X20, [X31+352]
	584 Move X19, [X31+360]
	585 Move X22, [X31+336]
	586 Move X21, [X31+344]
	587 Move X24, [X31+320]
	588 Move X23, [X31+328]
	589 Move X26, [X31+304]
	590 Move X25, [X31+312]
	591 Move X28, [X31+288]
	592 Move X27, [X31+296]
	593 Move X29, [X31+272]
	594 Move X30, [X31+280]
	595 Move D9, [X31+256]
	596 Move D8, [X31+264]
	597 Add X31, X31, 368
	598 Return 
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F20
	604 Move X0, X26
	605 Call 0x1C17F18
	606 Move X0, X26
	607 Call 0x1C17F18
	608 Call 0x1C17F20
	609 Move X0, X26
	610 Call 0x1C17F18
	611 Move X0, X25
	612 Call 0x1C17F18
	613 Move X26, X1
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Move X28, X0
	616 Move X0, X28
	617 Call 0x3EB2AD0
	618 Move X25, [X0]
	619 Call 0x3EB2AE0
	620 Move W28, W31
	621 Move W26, 1
	622 Move X25, X31
	623 Add X0, X31, 152
	624 Move X1, X31
	625 Call ProfilingScope.Dispose, X0
	626 Compare X25, 0
	627 JumpIfEqual {697}
	628 Move X0, X25
	629 Call 0x1C17F18
	630 Move X26, X1
	631 Move X28, X0
	632 Move X26, X1
	633 NotImplemented "Instruction CMP not yet implemented."
	634 Move X28, X0
	635 Move X0, X28
	636 Call 0x3EB2AD0
	637 Move X8, [X0]
	638 Move [X31+16], X8
	639 Call 0x3EB2AE0
	640 Move X26, [X31+16]
	641 Move W28, W31
	642 Move [X31+16], X31
	643 Add X0, X31, 152
	644 Move X1, X31
	645 Call ProfilingScope.Dispose, X0
	646 Move X8, [X31+16]
	647 Compare X8, 0
	648 JumpIfEqual {697}
	649 Move X0, [X31+16]
	650 Call 0x1C17F18
	651 Move X26, X1
	652 Move X28, X0
	653 Move X26, X1
	654 NotImplemented "Instruction CMP not yet implemented."
	655 Move X28, X0
	656 Move X0, X28
	657 Call 0x3EB2AD0
	658 Move X8, [X0]
	659 Move [X31+16], X8
	660 Call 0x3EB2AE0
	661 Move X26, [X31+16]
	662 Move W28, W31
	663 Move [X31+16], X31
	664 Add X0, X31, 152
	665 Move X1, X31
	666 Call ProfilingScope.Dispose, X0
	667 Move X8, [X31+16]
	668 Compare X8, 0
	669 JumpIfEqual {697}
	670 Move X0, [X31+16]
	671 Call 0x1C17F18
	672 Move X26, X1
	673 Move X28, X0
	674 Move X26, X1
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move X28, X0
	677 Move X0, X28
	678 Call 0x3EB2AD0
	679 Move X8, [X0]
	680 Move [X31+16], X8
	681 Call 0x3EB2AE0
	682 Move X26, [X31+16]
	683 Move W28, W31
	684 Move [X31+16], X31
	685 Add X0, X31, 152
	686 Move X1, X31
	687 Call ProfilingScope.Dispose, X0
	688 Move X8, [X31+16]
	689 Compare X8, 0
	690 JumpIfEqual {697}
	691 Move X0, [X31+16]
	692 Call 0x1C17F18
	693 Move X26, X1
	694 Move X28, X0
	695 Move X26, X1
	696 Move X28, X0
	697 NotImplemented "Instruction CMP not yet implemented."
	698 Move X0, X28
	699 Call 0x3EB2AD0
	700 Move X25, [X0]
	701 Call 0x3EB2AE0
	702 Move X8, 0x1E79000
	703 Move X8, [X8+2208]
	704 Add X0, X31, 168
	705 Move X1, [X8]
	706 Call 0x24A79BC, X0
	707 Compare X25, 0
	708 JumpIfEqual {369}
	709 Move X0, X25
	710 Call 0x1C17F18
	711 Move X25, X31
	712 Move X28, X0
	713 Move X8, 0x1E79000
	714 Move X8, [X8+2208]
	715 Move X1, [X8]
	716 Add X0, X31, 168
	717 Call 0x24A79BC, X0
	718 Compare X25, 0
	719 JumpIfNotEqual {722}
	720 Move X0, X28
	721 Call 0x1D2D690
	722 Move X0, X25
	723 Call 0x1C17F18
	724 Call 0x1991590

Method: System.Void RenderSingleCamera(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)

Disassembly:
	0x03A8D668 LDR X24, [X24 + 0xC80]
	0x03A8D66C LDR X0, [X24]
	0x03A8D670 LDR W8, [X0 + 0xE0]
	0x03A8D674 CBNZ W8, 0x3A8D67C
	0x03A8D678 BL 0x1C16DFC
	0x03A8D67C ADD X0, X31, 0x710
	0x03A8D680 MOV X1, X20
	0x03A8D684 MOV X2, X31
	0x03A8D688 BL 0x3C58FE4
	0x03A8D68C CBZ X20, 0x3A8DAC0
	0x03A8D690 MOV X0, X20
	0x03A8D694 MOV X1, X31
	0x03A8D698 BL 0x3C4C310
	0x03A8D69C LDR X0, [X28]
	0x03A8D6A0 LDR W8, [X0 + 0xE0]
	0x03A8D6A4 CBNZ W8, 0x3A8D6AC
	0x03A8D6A8 BL 0x1C16DFC
	0x03A8D6AC MOV X0, X20
	0x03A8D6B0 BL 0x3A8DFAC
	0x03A8D6B4 CBZ X22, 0x3A8DAC4
	0x03A8D6B8 MOV X0, X22
	0x03A8D6BC MOV X1, X31
	0x03A8D6C0 BL 0x3C03AD4
	0x03A8D6C4 CMP W0, 0x10
	0x03A8D6C8 B.EQ 0x3A8D6E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x956000
	007 Move X22, 0x690000
	008 Move W8, [X21+858]
	009 Move X22, [X22+2216]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x690000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+858], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call UniversalRenderPipeline.RenderSingleCameraInternal, X0, X1
	034 Return 

Method: System.Void RenderSingleCameraInternal(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)

Disassembly:
	0x03A8D5A4 MOV X0, X8
	0x03A8D5A8 BL 0x1C16DFC
	0x03A8D5AC MOV X0, X22
	0x03A8D5B0 BL 0x3A8DE44
	0x03A8D5B4 MOV X2, X0
	0x03A8D5B8 ADD X0, X31, 0x708
	0x03A8D5BC MOV X1, X23
	0x03A8D5C0 MOV X3, X31
	0x03A8D5C4 BL 0x39B1DB0
	0x03A8D5C8 LDR W1, [X21 + 0xC8]
	0x03A8D5CC MOV X0, X19
	0x03A8D5D0 MOV X2, X31
	0x03A8D5D4 BL 0x3A4B0C0
	0x03A8D5D8 ADRP X29, 0x6CA000
	0x03A8D5DC LDR X29, [X29 + 0x368]
	0x03A8D5E0 LDR X0, [X29]
	0x03A8D5E4 LDR W8, [X0 + 0xE0]
	0x03A8D5E8 CBNZ W8, 0x3A8D5F4
	0x03A8D5EC BL 0x1C16DFC
	0x03A8D5F0 LDR X0, [X29]
	0x03A8D5F4 LDR X8, [X0 + 0xB8]
	0x03A8D5F8 LDR X2, [X8]
	0x03A8D5FC STRB W31, [X31 + 0x220]
	0x03A8D600 ADD X0, X31, 0x220
	0x03A8D604 MOV X1, X31
	0x03A8D608 MOV X3, X31
	0x03A8D60C BL 0x39B1DB0
	0x03A8D610 LDRB W8, [X31 + 0x220]
	0x03A8D614 STRB W8, [X31 + 0x430]
	0x03A8D618 MOV X0, X19
	0x03A8D61C MOV X1, X21
	0x03A8D620 MOV X2, X31
	0x03A8D624 BL 0x3A4EB94
	0x03A8D628 LDR X8, [X19]
	0x03A8D62C LDP X9, X3, [X8 + 0x1F8]
	0x03A8D630 ADD X1, X31, 0x718
	0x03A8D634 MOV X0, X19
	0x03A8D638 MOV X2, X21
	0x03A8D63C BLR X9
	0x03A8D640 MOV X23, X31
	0x03A8D644 MOVZ W24, 0x6
	0x03A8D648 ADD X0, X31, 0x430
	0x03A8D64C MOV X1, X31
	0x03A8D650 BL 0x39B1DB4
	0x03A8D654 CBNZ X23, 0x3A8DAB8
	0x03A8D658 CMP W24, 0x6
	0x03A8D65C B.EQ 0x3A8D664
	0x03A8D660 CBNZ W24, 0x3A8DA98
	0x03A8D664 ADRP X24, 0x6C3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x956000
	007 Move X21, 0x690000
	008 Move W8, [X22+859]
	009 Move X21, [X21+2216]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x690000
	017 Move X0, [X0+2160]
	018 Call 0x1C17CF4
	019 Move X0, 0x690000
	020 Move X0, [X0+2216]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+859], W8
	024 Move X0, [X21]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Call UniversalRenderPipeline.IsGameCamera, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {48}
	036 Compare X19, 0
	037 JumpIfEqual {63}
	038 Move X0, X19
	039 Move X1, X31
	040 Call Component.get_gameObject, X0
	041 Compare X0, 0
	042 JumpIfEqual {63}
	043 Move X8, 0x690000
	044 Move X8, [X8+2160]
	045 Add X1, X31, 8
	046 Move X2, [X8]
	047 Call 0x21E7600, X0, X1
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Add X2, X31, 8
	054 Move X0, X20
	055 Move X1, X19
	056 Call UniversalRenderPipeline.RenderSingleCameraInternal, X0, X1, X2
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 
	063 Call 0x1C17F20

Method: System.Void RenderSingleCameraInternal(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera, ref UnityEngine.Rendering.Universal.UniversalAdditionalCameraData additionalCameraData)

Disassembly:
	0x03A8D6CC MOV X0, X22
	0x03A8D6D0 MOV X1, X31
	0x03A8D6D4 BL 0x3C03AD4
	0x03A8D6D8 CMP W0, 0x4
	0x03A8D6DC B.NE 0x3A8D6FC
	0x03A8D6E0 LDR X0, [X24]
	0x03A8D6E4 LDR W8, [X0 + 0xE0]
	0x03A8D6E8 CBNZ W8, 0x3A8D6F0
	0x03A8D6EC BL 0x1C16DFC
	0x03A8D6F0 MOV X0, X22
	0x03A8D6F4 MOV X1, X31
	0x03A8D6F8 BL 0x3C57C7C
	0x03A8D6FC ADRP X8, 0x6C7000
	0x03A8D700 LDR X8, [X8 + 0x918]
	0x03A8D704 LDR X2, [X8]
	0x03A8D708 ADD X1, X31, 0x700
	0x03A8D70C MOV X0, X22
	0x03A8D710 BL 0x21A4990
	0x03A8D714 TBZ X0, 0x0, 0x3A8D734
	0x03A8D718 LDR X8, [X31 + 0x700]
	0x03A8D71C CBZ X8, 0x3A8DAC8
	0x03A8D720 LDR X0, [X8 + 0x90]
	0x03A8D724 CBZ X0, 0x3A8DACC
	0x03A8D728 MOV X1, X21
	0x03A8D72C MOV X2, X31
	0x03A8D730 BL 0x3A58288
	0x03A8D734 LDR X8, [X21 + 0x1E0]
	0x03A8D738 CBZ X8, 0x3A8D754
	0x03A8D73C LDR X0, [X28]
	0x03A8D740 LDR W8, [X0 + 0xE0]
	0x03A8D744 CBNZ W8, 0x3A8D74C
	0x03A8D748 BL 0x1C16DFC
	0x03A8D74C MOV X0, X21
	0x03A8D750 BL 0x3A8E374
	0x03A8D754 ADRP X8, 0x6C3000
	0x03A8D758 LDR X8, [X8 + 0x9B0]
	0x03A8D75C LDP W23, W22, [X21 + 0xD8]
	0x03A8D760 LDR X0, [X8]
	0x03A8D764 LDR W8, [X0 + 0xE0]
	0x03A8D768 CBNZ W8, 0x3A8D770
	0x03A8D76C BL 0x1C16DFC
	0x03A8D770 MOV W0, W23
	0x03A8D774 MOV W1, W22
	0x03A8D778 MOV X2, X31
	0x03A8D77C BL 0x39D7248
	0x03A8D780 LDR X0, [X24]
	0x03A8D784 LDR W8, [X0 + 0xE0]
	0x03A8D788 CBNZ W8, 0x3A8D790
	0x03A8D78C BL 0x1C16DFC
	0x03A8D790 ADD X0, X31, 0x710
	0x03A8D794 ADD X1, X31, 0x718
	0x03A8D798 MOV X2, X31
	0x03A8D79C BL 0x3C593DC
	0x03A8D7A0 LDR X8, [X28]
	0x03A8D7A4 STR X0, [X31 + 0x6F0]
	0x03A8D7A8 STR X1, [X31 + 0x6F8]
	0x03A8D7AC LDR W9, [X8 + 0xE0]
	0x03A8D7B0 CBNZ W9, 0x3A8D7BC
	0x03A8D7B4 MOV X0, X8
	0x03A8D7B8 BL 0x1C16DFC
	0x03A8D7BC BL 0x3A8AB60
	0x03A8D7C0 ADD X2, X31, 0x6F0
	0x03A8D7C4 ADD X4, X31, 0x438
	0x03A8D7C8 MOV X1, X21
	0x03A8D7CC MOV X3, X20
	0x03A8D7D0 BL 0x3A8E410
	0x03A8D7D4 ADD X1, X31, 0x438
	0x03A8D7D8 MOV X0, X19
	0x03A8D7DC MOV X2, X31
	0x03A8D7E0 BL 0x3A4EC58
	0x03A8D7E4 LDR X0, [X28]
	0x03A8D7E8 LDR X8, [X0 + 0xB8]
	0x03A8D7EC LDRB W9, [X8 + 0x18]
	0x03A8D7F0 CBZ W9, 0x3A8D88C
	0x03A8D7F4 LDR W9, [X0 + 0xE0]
	0x03A8D7F8 CBNZ W9, 0x3A8D808
	0x03A8D7FC BL 0x1C16DFC
	0x03A8D800 LDR X8, [X28]
	0x03A8D804 LDR X8, [X8 + 0xB8]
	0x03A8D808 LDR X0, [X8 + 0x8]
	0x03A8D80C LDR X1, [X31 + 0x710]
	0x03A8D810 ADD X2, X31, 0x438
	0x03A8D814 BL 0x3A8E8C4

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 528
	009 Move X23, 0x956000
	010 Move X22, 0x667000
	011 Move W8, [X23+860]
	012 Move X22, [X22+1432]
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x667000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x667000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x690000
	027 Move X0, [X0+2216]
	028 Call 0x1C17CF4
	029 Move X0, 0x6CB000
	030 Move X0, [X0+848]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+860], W8
	034 Add X0, X31, 0
	035 Move W2, 528
	036 Move W1, W31
	037 Call 0x3EB2B10
	038 Move X0, [X22]
	039 Move X22, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X22
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move X22, [X21]
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {70}
	053 Compare X22, 0
	054 JumpIfEqual {99}
	055 Move W8, [X22+44]
	056 Compare W8, 0
	057 JumpIfEqual {70}
	058 Move X8, 0x667000
	059 Move X8, [X8+2600]
	060 Move X0, [X8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0x6CB000
	066 Move X8, [X8+848]
	067 Move X1, X31
	068 Move X0, [X8]
	069 Call Debug.LogWarning, X0
	070 Move X8, 0x690000
	071 Move X8, [X8+2216]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Add X3, X31, 0
	078 Move X0, X20
	079 Move X1, X22
	080 Move W2, W31
	081 Call UniversalRenderPipeline.InitializeCameraData, X0, X1, X2, X3
	082 Move X1, [X21]
	083 Add X3, X31, 0
	084 Move W2, 1
	085 Move X0, X20
	086 Call UniversalRenderPipeline.InitializeAdditionalCameraData, X0, X1, X2, X3
	087 Add X1, X31, 0
	088 Move X0, X19
	089 Call UniversalRenderPipeline.RenderSingleCamera, X0, X1
	090 Add X31, X31, 528
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Move X29, [X31+64]
	098 Return 
	099 Call 0x1C17F20

Method: System.Boolean TryGetCullingParameters(UnityEngine.Rendering.Universal.CameraData cameraData, out UnityEngine.Rendering.ScriptableCullingParameters cullingParams)

Disassembly:
	0x03A8ECB8 LDP V2, V3, [X31 + 0x120]
	0x03A8ECBC ADD X2, X31, 0x80
	0x03A8ECC0 MOV X0, X19
	0x03A8ECC4 MOV W1, W21
	0x03A8ECC8 MOV X3, X31
	0x03A8ECCC STP V0, V1, [X31 + 0x80]
	0x03A8ECD0 STP V2, V3, [X31 + 0xA0]
	0x03A8ECD4 BL 0x3C04968
	0x03A8ECD8 MOV X0, X20
	0x03A8ECDC MOV X1, X31
	0x03A8ECE0 ADD W21, W21, 0x1
	0x03A8ECE4 BL 0x398632C
	0x03A8ECE8 CMP W0, 0x2
	0x03A8ECEC CSEL W8, W0, W22, LT
	0x03A8ECF0 CMP W21, W8
	0x03A8ECF4 B.LT 0x3A8EC54
	0x03A8ECF8 B 0x3A8ED88
	0x03A8ECFC LDR W21, [X20 + 0x24]
	0x03A8ED00 ADD X8, X31, 0x100
	0x03A8ED04 MOV X0, X20
	0x03A8ED08 MOV W1, W31
	0x03A8ED0C MOV X2, X31
	0x03A8ED10 BL 0x3984D48
	0x03A8ED14 LDP V0, V1, [X31 + 0x100]
	0x03A8ED18 LDP V2, V3, [X31 + 0x120]
	0x03A8ED1C STP V0, V1, [X31 + 0x140]
	0x03A8ED20 STP V2, V3, [X31 + 0x160]
	0x03A8ED24 CBZ X19, 0x3A8ED9C
	0x03A8ED28 LDP V0, V1, [X31 + 0x140]
	0x03A8ED2C LDP V2, V3, [X31 + 0x160]
	0x03A8ED30 ADD X2, X31, 0x40
	0x03A8ED34 MOV X0, X19
	0x03A8ED38 MOV W1, W21
	0x03A8ED3C MOV X3, X31
	0x03A8ED40 STP V0, V1, [X31 + 0x40]
	0x03A8ED44 STP V2, V3, [X31 + 0x60]
	0x03A8ED48 BL 0x3C048C0
	0x03A8ED4C LDR W21, [X20 + 0x24]
	0x03A8ED50 ADD X8, X31, 0x100
	0x03A8ED54 MOV X0, X20
	0x03A8ED58 MOV W1, W31
	0x03A8ED5C MOV X2, X31
	0x03A8ED60 BL 0x3984CB0
	0x03A8ED64 LDP V0, V1, [X31 + 0x100]
	0x03A8ED68 LDP V2, V3, [X31 + 0x120]
	0x03A8ED6C ADD X2, X31, 0x0
	0x03A8ED70 MOV X0, X19
	0x03A8ED74 MOV W1, W21
	0x03A8ED78 MOV X3, X31
	0x03A8ED7C STP V0, V1, [X31]
	0x03A8ED80 STP V2, V3, [X31 + 0x20]
	0x03A8ED84 BL 0x3C04968
	0x03A8ED88 LDP X20, X19, [X31 + 0x1A0]
	0x03A8ED8C LDP X22, X21, [X31 + 0x190]
	0x03A8ED90 LDP X29, X30, [X31 + 0x180]
	0x03A8ED94 ADD X31, X31, 0x1B0
	0x03A8ED98 RET
	0x03A8ED9C BL 0x1C16F20
	0x03A8EDA0 SUB X31, X31, 0x90
	0x03A8EDA4 STR D12, [X31 + 0x40]
	0x03A8EDA8 STP D11, D10, [X31 + 0x50]
	0x03A8EDAC STP D9, D8, [X31 + 0x60]
	0x03A8EDB0 STP X30, X21, [X31 + 0x70]
	0x03A8EDB4 STP X20, X19, [X31 + 0x80]
	0x03A8EDB8 ADRP X21, 0x954000
	0x03A8EDBC LDRB W8, [X21 + 0x360]
	0x03A8EDC0 MOV X20, X1
	0x03A8EDC4 MOV X19, X0
	0x03A8EDC8 TBNZ X8, 0x0, 0x3A8EDE0
	0x03A8EDCC ADRP X0, 0x665000
	0x03A8EDD0 LDR X0, [X0 + 0x5A8]
	0x03A8EDD4 BL 0x1C16CF4
	0x03A8EDD8 MOVZ W8, 0x1
	0x03A8EDDC STRB W8, [X21 + 0x360]
	0x03A8EDE0 MOVI V0.2D, 0x0
	0x03A8EDE4 STR W31, [X31 + 0x30]
	0x03A8EDE8 STP V0, V0, [X31 + 0x10]
	0x03A8EDEC STR V0, [X31]
	0x03A8EDF0 LDR X0, [X19 + 0xC0]
	0x03A8EDF4 CBZ X0, 0x3A8F138
	0x03A8EDF8 MOV X1, X31
	0x03A8EDFC BL 0x3C03DD4
	0x03A8EE00 LDR X0, [X20]
	0x03A8EE04 CBZ X0, 0x3A8F138
	0x03A8EE08 ADRP X21, 0x665000
	0x03A8EE0C LDR X21, [X21 + 0x5A8]
	0x03A8EE10 MOV W1, W31
	0x03A8EE14 MOV X2, X31
	0x03A8EE18 MOV V11.16B, V0.16B
	0x03A8EE1C MOV V9.16B, V1.16B
	0x03A8EE20 MOV V8.16B, V2.16B
	0x03A8EE24 MOV V10.16B, V3.16B
	0x03A8EE28 BL 0x3986250
	0x03A8EE2C FMUL S4, S11, S2
	0x03A8EE30 FMUL S5, S9, S3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x955000
	008 Move W8, [X21+861]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6C3000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move X0, 0x6C3000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+861], W8
	023 Move X0, [X20+376]
	024 Compare X0, 0
	025 JumpIfEqual {121}
	026 Move X1, X31
	027 Call XRPass.get_enabled, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {107}
	032 Move X8, [X20+376]
	033 Compare X8, 0
	034 JumpIfEqual {121}
	035 Add X1, X8, 144
	036 Move W2, 1584
	037 Move X0, X19
	038 Call 0x3EB2B30
	039 Move X0, [X20+192]
	040 Compare X0, 0
	041 JumpIfEqual {121}
	042 Move X1, X31
	043 Call Camera.get_usePhysicalProperties, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {99}
	048 Move X21, 0x6C3000
	049 Move X21, [X21+1400]
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X22, 0x954000
	056 Move W8, [X22+2877]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x6C3000
	060 Move X0, [X0+1400]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+2877], W8
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Move X8, [X0+184]
	071 Move W8, [X8]
	072 Compare W8, 0
	073 JumpIfNotEqual {99}
	074 Move X8, 0x6C3000
	075 Move X8, [X8+1664]
	076 Move X20, [X20+192]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X8, X31, 0
	083 Move X0, X19
	084 Move X1, X31
	085 Call ScriptableCullingParameters.get_stereoProjectionMatrix, X0
	086 Compare X20, 0
	087 JumpIfEqual {121}
	088 Move V0, [X31+20]
	089 Move S1, 1
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Call 0x3EB2BE0
	092 Move X8, -49950720
	093 Move V1, [X8+1096]
	094 Move X0, X20
	095 Move X1, X31
	096 Multiply S0, S0, S1
	097 Add S0, S0, S0
	098 Call Camera.set_fieldOfView, X0, V0
	099 Move X20, [X31+96]
	100 Move X19, [X31+104]
	101 Move X22, [X31+80]
	102 Move X21, [X31+88]
	103 Move X30, [X31+64]
	104 Move W0, 1
	105 Add X31, X31, 112
	106 Return X0
	107 Move X0, [X20+192]
	108 Compare X0, 0
	109 JumpIfEqual {121}
	110 Move X2, X19
	111 Move X20, [X31+96]
	112 Move X19, [X31+104]
	113 Move X22, [X31+80]
	114 Move X21, [X31+88]
	115 Move X30, [X31+64]
	116 Move W1, W31
	117 Move X3, X31
	118 Add X31, X31, 112
	119 Call Camera.TryGetCullingParameters, X0, X1, X2
	120 Return X0
	121 Call 0x1C17F20

Method: System.Void RenderSingleCamera(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8E3B8 CBZ X0, 0x3A8E40C
	0x03A8E3BC LDP X20, X19, [X31 + 0x10]
	0x03A8E3C0 MOV X1, X31
	0x03A8E3C4 LDR X30, [X31], #0x20
	0x03A8E3C8 B 0x3A78710
	0x03A8E3CC MOV W20, W31
	0x03A8E3D0 LDR X0, [X19 + 0x1E0]
	0x03A8E3D4 CBZ X0, 0x3A8E40C
	0x03A8E3D8 AND W1, W20, 0x1
	0x03A8E3DC MOV X2, X31
	0x03A8E3E0 BL 0x3A78758
	0x03A8E3E4 TBZ X0, 0x0, 0x3A8E400
	0x03A8E3E8 LDR W8, [X19 + 0x200]
	0x03A8E3EC ANDS W31, W20, 0x1
	0x03A8E3F0 MOVZ W9, 0x1
	0x03A8E3F4 CINC W9, W9, NE
	0x03A8E3F8 ADD W8, W8, W9
	0x03A8E3FC STR W8, [X19 + 0x200]
	0x03A8E400 LDP X20, X19, [X31 + 0x10]
	0x03A8E404 LDR X30, [X31], #0x20
	0x03A8E408 RET
	0x03A8E40C BL 0x1C16F20
	0x03A8E410 SUB X31, X31, 0xF0
	0x03A8E414 STP X29, X30, [X31 + 0x90]
	0x03A8E418 STP X28, X27, [X31 + 0xA0]
	0x03A8E41C STP X26, X25, [X31 + 0xB0]
	0x03A8E420 STP X24, X23, [X31 + 0xC0]
	0x03A8E424 STP X22, X21, [X31 + 0xD0]
	0x03A8E428 STP X20, X19, [X31 + 0xE0]
	0x03A8E42C ADRP X23, 0x954000
	0x03A8E430 ADRP X20, 0x68E000
	0x03A8E434 LDRB W8, [X23 + 0x368]
	0x03A8E438 LDR X20, [X20 + 0x898]
	0x03A8E43C MOV X19, X4
	0x03A8E440 MOV X24, X3
	0x03A8E444 MOV X28, X2
	0x03A8E448 MOV X21, X1
	0x03A8E44C MOV X22, X0
	0x03A8E450 TBNZ X8, 0x0, 0x3A8E498
	0x03A8E454 ADRP X0, 0x6C8000
	0x03A8E458 LDR X0, [X0 + 0x1B8]
	0x03A8E45C BL 0x1C16CF4
	0x03A8E460 ADRP X0, 0x665000
	0x03A8E464 LDR X0, [X0 + 0x598]
	0x03A8E468 BL 0x1C16CF4
	0x03A8E46C ADRP X0, 0x68E000
	0x03A8E470 LDR X0, [X0 + 0x898]
	0x03A8E474 BL 0x1C16CF4
	0x03A8E478 ADRP X0, 0x68E000
	0x03A8E47C LDR X0, [X0 + 0x8A8]
	0x03A8E480 BL 0x1C16CF4
	0x03A8E484 ADRP X0, 0x6C5000
	0x03A8E488 LDR X0, [X0 + 0xFF8]
	0x03A8E48C BL 0x1C16CF4
	0x03A8E490 MOVZ W8, 0x1
	0x03A8E494 STRB W8, [X23 + 0x368]
	0x03A8E498 LDR X0, [X20]
	0x03A8E49C MOVI V0.2D, 0x0
	0x03A8E4A0 STRB W31, [X31 + 0x88]
	0x03A8E4A4 STR W31, [X31 + 0x80]
	0x03A8E4A8 STP V0, V0, [X31 + 0x60]
	0x03A8E4AC STP V0, V0, [X31 + 0x40]
	0x03A8E4B0 STP V0, V0, [X31 + 0x20]
	0x03A8E4B4 STR V0, [X31 + 0x1]
	0x03A8E4B8 LDR W8, [X0 + 0xE0]
	0x03A8E4BC CBNZ W8, 0x3A8E4C8
	0x03A8E4C0 BL 0x1C16DFC
	0x03A8E4C4 LDR X0, [X20]
	0x03A8E4C8 LDR X8, [X0 + 0xB8]
	0x03A8E4CC ADD X0, X31, 0x88
	0x03A8E4D0 MOV X1, X31
	0x03A8E4D4 MOV X3, X31
	0x03A8E4D8 LDR X2, [X8 + 0x38]
	0x03A8E4DC BL 0x39B1DB0
	0x03A8E4E0 LDR X0, [X21 + 0x1B8]
	0x03A8E4E4 STR X24, [X31]
	0x03A8E4E8 CBZ X0, 0x3A8E504
	0x03A8E4EC ADRP X8, 0x6C5000
	0x03A8E4F0 LDR X8, [X8 + 0xFF8]
	0x03A8E4F4 LDR X9, [X0]
	0x03A8E4F8 LDR X8, [X8]
	0x03A8E4FC CMP X9, X8
	0x03A8E500 B.EQ 0x3A8E50C
	0x03A8E504 STR W31, [X31 + 0xC]
	0x03A8E508 B 0x3A8E520
	0x03A8E50C MOV X1, X31
	0x03A8E510 BL 0x3A82610
	0x03A8E514 CMP W0, 0x2
	0x03A8E518 CSET W8, EQ
	0x03A8E51C STR W8, [X31 + 0xC]
	0x03A8E520 MOV X0, X28
	0x03A8E524 MOV X1, X31
	0x03A8E528 BL 0x3C52E70
	0x03A8E52C ADRP X8, 0x68E000
	0x03A8E530 LDR X8, [X8 + 0x8A8]
	0x03A8E534 MOV X25, X0
	0x03A8E538 MOV X26, X1
	0x03A8E53C LDR X0, [X8]
	0x03A8E540 LDR W8, [X0 + 0xE0]
	0x03A8E544 CBNZ W8, 0x3A8E54C
	0x03A8E548 BL 0x1C16DFC
	0x03A8E54C MOV X0, X22
	0x03A8E550 MOV X1, X25
	0x03A8E554 MOV X2, X26
	0x03A8E558 BL 0x3A90118
	0x03A8E55C LDR V0, [X21 + 0x184]
	0x03A8E560 MOV W27, W0
	0x03A8E564 FCMP S0, 0x0
	0x03A8E568 B.LE 0x3A8E5FC
	0x03A8E56C ADDS W31, W27, 0x1
	0x03A8E570 B.EQ 0x3A8E608
	0x03A8E574 MOVZ W8, 0x74
	0x03A8E578 SMADDL X20, X27, X8, X25
	0x03A8E57C ADD X0, X31, 0x10
	0x03A8E580 MOVZ W2, 0x74
	0x03A8E584 MOV X1, X20
	0x03A8E588 BL 0x3EB1B30
	0x03A8E58C ADD X0, X31, 0x10
	0x03A8E590 MOV X1, X31
	0x03A8E594 BL 0x3C5BBF0
	0x03A8E598 ADRP X8, 0x665000
	0x03A8E59C LDR X8, [X8 + 0x598]
	0x03A8E5A0 MOV X23, X0
	0x03A8E5A4 LDR X0, [X8]
	0x03A8E5A8 LDR W8, [X0 + 0xE0]
	0x03A8E5AC CBNZ W8, 0x3A8E5B4
	0x03A8E5B0 BL 0x1C16DFC
	0x03A8E5B4 MOV X0, X23
	0x03A8E5B8 MOV X1, X31
	0x03A8E5BC MOV X2, X31
	0x03A8E5C0 BL 0x3C354F8
	0x03A8E5C4 TBZ X0, 0x0, 0x3A8E608
	0x03A8E5C8 ADD X0, X31, 0x10
	0x03A8E5CC MOVZ W2, 0x74
	0x03A8E5D0 MOV X1, X20
	0x03A8E5D4 BL 0x3EB1B30
	0x03A8E5D8 ADD X0, X31, 0x10
	0x03A8E5DC MOV X1, X31
	0x03A8E5E0 BL 0x3C5BBF0
	0x03A8E5E4 CBZ X0, 0x3A8E804
	0x03A8E5E8 MOV X1, X31
	0x03A8E5EC BL 0x3C16B90
	0x03A8E5F0 CMP W0, 0x0
	0x03A8E5F4 CSET W8, NE
	0x03A8E5F8 B 0x3A8E60C
	0x03A8E5FC MOV W20, W31
	0x03A8E600 MOV W24, W31
	0x03A8E604 B 0x3A8E6EC
	0x03A8E608 MOV W8, W31
	0x03A8E60C CMP W8, 0x0
	0x03A8E610 CSET W24, NE
	0x03A8E614 CBZ X22, 0x3A8E800
	0x03A8E618 LDRB W8, [X22 + 0x90]
	0x03A8E61C CBZ W8, 0x3A8E6E8
	0x03A8E620 LDR W8, [X22 + 0x88]
	0x03A8E624 LDR W9, [X31 + 0xC]
	0x03A8E628 CMP W8, 0x1
	0x03A8E62C CSET W8, EQ
	0x03A8E630 ORR W8, W9, W8, 0x0
	0x03A8E634 CBZ W8, 0x3A8E6E8
	0x03A8E638 CMP W26, 0x1
	0x03A8E63C B.LT 0x3A8E6E8
	0x03A8E640 MOV W29, W31
	0x03A8E644 CMP W27, W29
	0x03A8E648 B.EQ 0x3A8E6DC
	0x03A8E64C ADRP X8, 0x6C8000
	0x03A8E650 LDR X8, [X8 + 0x1B8]
	0x03A8E654 LDR X3, [X8]
	0x03A8E658 MOV X0, X25
	0x03A8E65C MOV X1, X26
	0x03A8E660 MOV W2, W29
	0x03A8E664 BL 0x22222C0
	0x03A8E668 MOV X23, X0
	0x03A8E66C MOV X1, X31
	0x03A8E670 BL 0x3C5BBF0
	0x03A8E674 MOV X20, X0
	0x03A8E678 MOV X0, X23
	0x03A8E67C MOV X1, X31
	0x03A8E680 BL 0x3C5BC7C
	0x03A8E684 CBZ W0, 0x3A8E69C
	0x03A8E688 MOV X0, X23
	0x03A8E68C MOV X1, X31
	0x03A8E690 BL 0x3C5BC7C
	0x03A8E694 CMP W0, 0x2
	0x03A8E698 B.NE 0x3A8E6DC
	0x03A8E69C ADRP X8, 0x665000
	0x03A8E6A0 LDR X8, [X8 + 0x598]
	0x03A8E6A4 LDR X0, [X8]
	0x03A8E6A8 LDR W8, [X0 + 0xE0]
	0x03A8E6AC CBNZ W8, 0x3A8E6B4
	0x03A8E6B0 BL 0x1C16DFC
	0x03A8E6B4 MOV X0, X20
	0x03A8E6B8 MOV X1, X31
	0x03A8E6BC MOV X2, X31
	0x03A8E6C0 BL 0x3C354F8
	0x03A8E6C4 TBZ X0, 0x0, 0x3A8E6DC
	0x03A8E6C8 CBZ X20, 0x3A8E7FC
	0x03A8E6CC MOV X0, X20
	0x03A8E6D0 MOV X1, X31
	0x03A8E6D4 BL 0x3C16B90
	0x03A8E6D8 CBNZ W0, 0x3A8E7F0
	0x03A8E6DC ADD W29, W29, 0x1
	0x03A8E6E0 CMP W26, W29
	0x03A8E6E4 B.NE 0x3A8E644
	0x03A8E6E8 MOV W20, W31
	0x03A8E6EC LDR V0, [X28]
	0x03A8E6F0 ADD X0, X19, 0x18
	0x03A8E6F4 MOVZ W2, 0x210
	0x03A8E6F8 MOV X1, X21
	0x03A8E6FC STUR V0, [X19 + 0x8]
	0x03A8E700 BL 0x3EB1B30
	0x03A8E704 ADRP X28, 0x68E000
	0x03A8E708 LDR X28, [X28 + 0x8A8]
	0x03A8E70C LDR X0, [X28]
	0x03A8E710 LDR W8, [X0 + 0xE0]
	0x03A8E714 CBNZ W8, 0x3A8E71C
	0x03A8E718 BL 0x1C16DFC
	0x03A8E71C ADD X4, X19, 0x228
	0x03A8E720 MOV X0, X22
	0x03A8E724 MOV X1, X25
	0x03A8E728 MOV X2, X26
	0x03A8E72C MOV W3, W27
	0x03A8E730 BL 0x3A90384
	0x03A8E734 LDR W23, [X31 + 0xC]
	0x03A8E738 TBZ X20, 0x0, 0x3A8E748
	0x03A8E73C LDRB W8, [X19 + 0x248]
	0x03A8E740 EOR W20, W8, 0x1
	0x03A8E744 B 0x3A8E74C
	0x03A8E748 MOV W20, W31
	0x03A8E74C LDR X0, [X28]
	0x03A8E750 LDR W8, [X0 + 0xE0]
	0x03A8E754 CBNZ W8, 0x3A8E75C
	0x03A8E758 BL 0x1C16DFC
	0x03A8E75C CMP W20, 0x0
	0x03A8E760 ADD X6, X19, 0x250
	0x03A8E764 CSET W4, NE
	0x03A8E768 MOV X0, X22
	0x03A8E76C MOV X1, X25
	0x03A8E770 MOV X2, X26
	0x03A8E774 MOV W3, W24
	0x03A8E778 MOV W5, W23
	0x03A8E77C BL 0x3A905F0
	0x03A8E780 LDRB W1, [X21 + 0x173]
	0x03A8E784 ADD X2, X19, 0x2A0
	0x03A8E788 MOV X0, X22
	0x03A8E78C BL 0x3A90F14
	0x03A8E790 CBZ X22, 0x3A8E7F8
	0x03A8E794 LDRB W8, [X22 + 0xE9]
	0x03A8E798 LDR W0, [X19 + 0x22C]
	0x03A8E79C STRB W8, [X19 + 0x2AC]
	0x03A8E7A0 MOV W1, W23
	0x03A8E7A4 BL 0x3A90F58
	0x03A8E7A8 STR W0, [X19 + 0x2B0]
	0x03A8E7AC LDRB W8, [X21 + 0x189]
	0x03A8E7B0 LDR X9, [X31]
	0x03A8E7B4 STRB W8, [X19 + 0x2B4]
	0x03A8E7B8 STR X9, [X19]
	0x03A8E7BC MOV X0, X19
	0x03A8E7C0 BL 0x3A910A8
	0x03A8E7C4 ADD X0, X31, 0x88
	0x03A8E7C8 MOV X1, X31
	0x03A8E7CC BL 0x39B1DB4
	0x03A8E7D0 LDP X20, X19, [X31 + 0xE0]
	0x03A8E7D4 LDP X22, X21, [X31 + 0xD0]
	0x03A8E7D8 LDP X24, X23, [X31 + 0xC0]
	0x03A8E7DC LDP X26, X25, [X31 + 0xB0]
	0x03A8E7E0 LDP X28, X27, [X31 + 0xA0]
	0x03A8E7E4 LDP X29, X30, [X31 + 0x90]
	0x03A8E7E8 ADD X31, X31, 0xF0
	0x03A8E7EC RET
	0x03A8E7F0 MOVZ W20, 0x1
	0x03A8E7F4 B 0x3A8E6EC
	0x03A8E7F8 BL 0x1C16F20
	0x03A8E7FC BL 0x1C16F20
	0x03A8E800 BL 0x1C16F20
	0x03A8E804 BL 0x1C16F20
	0x03A8E808 B 0x3A8E860
	0x03A8E80C B 0x3A8E860
	0x03A8E810 B 0x3A8E860
	0x03A8E814 B 0x3A8E860
	0x03A8E818 B 0x3A8E860
	0x03A8E81C B 0x3A8E860
	0x03A8E820 B 0x3A8E860
	0x03A8E824 B 0x3A8E860
	0x03A8E828 B 0x3A8E860
	0x03A8E82C B 0x3A8E860
	0x03A8E830 B 0x3A8E860
	0x03A8E834 B 0x3A8E860
	0x03A8E838 B 0x3A8E860
	0x03A8E83C B 0x3A8E860
	0x03A8E840 B 0x3A8E860
	0x03A8E844 B 0x3A8E860
	0x03A8E848 B 0x3A8E860
	0x03A8E84C B 0x3A8E860
	0x03A8E850 B 0x3A8E860
	0x03A8E854 B 0x3A8E860
	0x03A8E858 B 0x3A8E860
	0x03A8E85C B 0x3A8E860
	0x03A8E860 MOV X19, X0
	0x03A8E864 CMP W1, 0x1
	0x03A8E868 B.NE 0x3A8E894
	0x03A8E86C MOV X0, X19
	0x03A8E870 BL 0x3EB1AD0
	0x03A8E874 LDR X20, [X0]
	0x03A8E878 BL 0x3EB1AE0
	0x03A8E87C ADD X0, X31, 0x88
	0x03A8E880 MOV X1, X31
	0x03A8E884 BL 0x39B1DB4
	0x03A8E888 CBZ X20, 0x3A8E7D0
	0x03A8E88C MOV X0, X20
	0x03A8E890 BL 0x1C16F18
	0x03A8E894 MOV X20, X31
	0x03A8E898 B 0x3A8E8A0
	0x03A8E89C MOV X19, X0
	0x03A8E8A0 ADD X0, X31, 0x88
	0x03A8E8A4 MOV X1, X31
	0x03A8E8A8 BL 0x39B1DB4
	0x03A8E8AC CBNZ X20, 0x3A8E8B8
	0x03A8E8B0 MOV X0, X19
	0x03A8E8B4 BL 0x1D2C690
	0x03A8E8B8 MOV X0, X20
	0x03A8E8BC BL 0x1C16F18
	0x03A8E8C0 BL 0x1990590
	0x03A8E8C4 SUB X31, X31, 0x60
	0x03A8E8C8 STP X30, X23, [X31 + 0x30]
	0x03A8E8CC STP X22, X21, [X31 + 0x40]
	0x03A8E8D0 STP X20, X19, [X31 + 0x50]
	0x03A8E8D4 ADRP X23, 0x954000
	0x03A8E8D8 ADRP X22, 0x6C9000
	0x03A8E8DC LDRB W8, [X23 + 0x37E]
	0x03A8E8E0 LDR X22, [X22 + 0x360]
	0x03A8E8E4 MOV X19, X2
	0x03A8E8E8 MOV X20, X1
	0x03A8E8EC MOV X21, X0
	0x03A8E8F0 TBNZ X8, 0x0, 0x3A8E914
	0x03A8E8F4 ADRP X0, 0x6C9000
	0x03A8E8F8 LDR X0, [X0 + 0x360]
	0x03A8E8FC BL 0x1C16CF4
	0x03A8E900 ADRP X0, 0x68E000
	0x03A8E904 LDR X0, [X0 + 0x8A8]
	0x03A8E908 BL 0x1C16CF4
	0x03A8E90C MOVZ W8, 0x1
	0x03A8E910 STRB W8, [X23 + 0x37E]
	0x03A8E914 LDR X0, [X22]
	0x03A8E918 STR X31, [X31 + 0x8]
	0x03A8E91C LDR X23, [X19]
	0x03A8E920 LDR X22, [X19 + 0xD8]
	0x03A8E924 LDR W8, [X0 + 0xE0]
	0x03A8E928 CBNZ W8, 0x3A8E930
	0x03A8E92C BL 0x1C16DFC
	0x03A8E930 MOV X0, X22
	0x03A8E934 BL 0x3A8DE44
	0x03A8E938 CBZ X0, 0x3A8E9B8
	0x03A8E93C LDR X22, [X0 + 0x20]
	0x03A8E940 MOV X0, X31
	0x03A8E944 BL 0x3C3C88C
	0x03A8E948 STR X22, [X31 + 0x10]
	0x03A8E94C STP W0, W31, [X31 + 0x18]
	0x03A8E950 STP X20, X23, [X31 + 0x20]
	0x03A8E954 CBZ X21, 0x3A8E9B8
	0x03A8E958 ADRP X22, 0x68E000
	0x03A8E95C LDR X22, [X22 + 0x8A8]
	0x03A8E960 ADD X1, X31, 0x10
	0x03A8E964 MOV X0, X21
	0x03A8E968 MOV X2, X31
	0x03A8E96C BL 0x398D78C
	0x03A8E970 LDR X8, [X22]
	0x03A8E974 STR X0, [X31 + 0x8]
	0x03A8E978 LDR W9, [X8 + 0xE0]
	0x03A8E97C CBNZ W9, 0x3A8E988
	0x03A8E980 MOV X0, X8
	0x03A8E984 BL 0x1C16DFC
	0x03A8E988 MOV X0, X21
	0x03A8E98C MOV X1, X20
	0x03A8E990 MOV X2, X19
	0x03A8E994 BL 0x3A91D84
	0x03A8E998 ADD X0, X31, 0x8
	0x03A8E99C MOV X1, X31
	0x03A8E9A0 BL 0x398A7F4
	0x03A8E9A4 LDP X20, X19, [X31 + 0x50]
	0x03A8E9A8 LDP X22, X21, [X31 + 0x40]
	0x03A8E9AC LDP X30, X23, [X31 + 0x30]
	0x03A8E9B0 ADD X31, X31, 0x60
	0x03A8E9B4 RET
	0x03A8E9B8 BL 0x1C16F20
	0x03A8E9BC CMP W1, 0x1
	0x03A8E9C0 MOV X20, X0
	0x03A8E9C4 B.NE 0x3A8E9F0
	0x03A8E9C8 MOV X0, X20
	0x03A8E9CC BL 0x3EB1AD0
	0x03A8E9D0 LDR X19, [X0]
	0x03A8E9D4 BL 0x3EB1AE0
	0x03A8E9D8 ADD X0, X31, 0x8
	0x03A8E9DC MOV X1, X31
	0x03A8E9E0 BL 0x398A7F4
	0x03A8E9E4 CBZ X19, 0x3A8E9A4
	0x03A8E9E8 MOV X0, X19
	0x03A8E9EC BL 0x1C16F18
	0x03A8E9F0 MOV X19, X31
	0x03A8E9F4 B 0x3A8E9FC
	0x03A8E9F8 MOV X20, X0
	0x03A8E9FC ADD X0, X31, 0x8
	0x03A8EA00 MOV X1, X31
	0x03A8EA04 BL 0x398A7F4
	0x03A8EA08 CBNZ X19, 0x3A8EA14
	0x03A8EA0C MOV X0, X20
	0x03A8EA10 BL 0x1D2C690
	0x03A8EA14 MOV X0, X19
	0x03A8EA18 BL 0x1C16F18
	0x03A8EA1C BL 0x1990590
	0x03A8EA20 STR X30, [X31 - 0x20]!
	0x03A8EA24 STP X20, X19, [X31 + 0x10]
	0x03A8EA28 ADRP X19, 0x954000
	0x03A8EA2C LDRB W8, [X19 + 0x371]
	0x03A8EA30 TBNZ X8, 0x0, 0x3A8EA60
	0x03A8EA34 ADRP X0, 0x665000
	0x03A8EA38 LDR X0, [X0 + 0x970]
	0x03A8EA3C BL 0x1C16CF4
	0x03A8EA40 ADRP X0, 0x6C2000
	0x03A8EA44 LDR X0, [X0 + 0x570]
	0x03A8EA48 BL 0x1C16CF4
	0x03A8EA4C ADRP X0, 0x68E000
	0x03A8EA50 LDR X0, [X0 + 0x8A8]
	0x03A8EA54 BL 0x1C16CF4
	0x03A8EA58 MOVZ W8, 0x1
	0x03A8EA5C STRB W8, [X19 + 0x371]
	0x03A8EA60 MOV X0, X31
	0x03A8EA64 BL 0x3C3C32C
	0x03A8EA68 TBNZ X0, 0x0, 0x3A8EA74
	0x03A8EA6C MOV W19, W31
	0x03A8EA70 B 0x3A8EA98
	0x03A8EA74 ADRP X8, 0x68E000
	0x03A8EA78 LDR X8, [X8 + 0x8A8]
	0x03A8EA7C LDR X0, [X8]
	0x03A8EA80 LDR W8, [X0 + 0xE0]
	0x03A8EA84 CBNZ W8, 0x3A8EA8C
	0x03A8EA88 BL 0x1C16DFC
	0x03A8EA8C BL 0x3A8AB60
	0x03A8EA90 CBZ X0, 0x3A8EB2C
	0x03A8EA94 LDRB W19, [X0 + 0x55]
	0x03A8EA98 ADRP X20, 0x6C2000
	0x03A8EA9C LDR X20, [X20 + 0x570]
	0x03A8EAA0 LDR X0, [X20]
	0x03A8EAA4 LDR W8, [X0 + 0xE0]
	0x03A8EAA8 CBNZ W8, 0x3A8EAB0
	0x03A8EAAC BL 0x1C16DFC
	0x03A8EAB0 MOV X0, X31
	0x03A8EAB4 BL 0x3C10718
	0x03A8EAB8 CBZ X0, 0x3A8EB2C
	0x03A8EABC MOV X1, X31
	0x03A8EAC0 BL 0x3C10824
	0x03A8EAC4 TBZ X0, 0x0, 0x3A8EAF4
	0x03A8EAC8 LDR X0, [X20]
	0x03A8EACC LDR W8, [X0 + 0xE0]
	0x03A8EAD0 CBNZ W8, 0x3A8EAD8
	0x03A8EAD4 BL 0x1C16DFC
	0x03A8EAD8 MOV X0, X31
	0x03A8EADC BL 0x3C10718
	0x03A8EAE0 CBZ X0, 0x3A8EB2C
	0x03A8EAE4 MOV X1, X31
	0x03A8EAE8 BL 0x3C10770
	0x03A8EAEC AND W20, W0, 0x1
	0x03A8EAF0 B 0x3A8EAF8
	0x03A8EAF4 MOV W20, W31
	0x03A8EAF8 ADRP X8, 0x665000
	0x03A8EAFC LDR X8, [X8 + 0x970]
	0x03A8EB00 LDR X0, [X8]
	0x03A8EB04 LDR W8, [X0 + 0xE0]
	0x03A8EB08 CBNZ W8, 0x3A8EB10
	0x03A8EB0C BL 0x1C16DFC
	0x03A8EB10 MOV X0, X31
	0x03A8EB14 BL 0x3C01AD8
	0x03A8EB18 AND W8, W20, W19, 0x0
	0x03A8EB1C LDP X20, X19, [X31 + 0x10]
	0x03A8EB20 BIC W0, W8, W0, 0x0
	0x03A8EB24 LDR X30, [X31], #0x20
	0x03A8EB28 RET
	0x03A8EB2C BL 0x1C16F20
	0x03A8EB30 STR X30, [X31 - 0x20]!
	0x03A8EB34 STP X20, X19, [X31 + 0x10]
	0x03A8EB38 ADRP X19, 0x954000
	0x03A8EB3C ADRP X20, 0x68F000
	0x03A8EB40 LDRB W8, [X19 + 0x363]
	0x03A8EB44 LDR X20, [X20 + 0xFC0]
	0x03A8EB48 TBNZ X8, 0x0, 0x3A8EB78
	0x03A8EB4C ADRP X0, 0x68F000
	0x03A8EB50 LDR X0, [X0 + 0xFC0]
	0x03A8EB54 BL 0x1C16CF4
	0x03A8EB58 ADRP X0, 0x6C8000
	0x03A8EB5C LDR X0, [X0 + 0x598]
	0x03A8EB60 BL 0x1C16CF4
	0x03A8EB64 ADRP X0, 0x6C8000
	0x03A8EB68 LDR X0, [X0 + 0x5B0]
	0x03A8EB6C BL 0x1C16CF4
	0x03A8EB70 MOVZ W8, 0x1
	0x03A8EB74 STRB W8, [X19 + 0x363]
	0x03A8EB78 LDR X0, [X20]
	0x03A8EB7C LDR W8, [X0 + 0xE0]
	0x03A8EB80 CBNZ W8, 0x3A8EB88
	0x03A8EB84 BL 0x1C16DFC
	0x03A8EB88 MOV X0, X31
	0x03A8EB8C BL 0x39EE864
	0x03A8EB90 CBZ X0, 0x3A8EBF8
	0x03A8EB94 LDR X19, [X0 + 0x10]
	0x03A8EB98 CBZ X19, 0x3A8EBF8
	0x03A8EB9C ADRP X8, 0x6C8000
	0x03A8EBA0 LDR X8, [X8 + 0x598]
	0x03A8EBA4 MOV X0, X19
	0x03A8EBA8 LDR X1, [X8]
	0x03A8EBAC BL 0x22ACD04
	0x03A8EBB0 CBZ X0, 0x3A8EBF8
	0x03A8EBB4 MOV X1, X31
	0x03A8EBB8 BL 0x3A59884
	0x03A8EBBC TBZ X0, 0x0, 0x3A8EBD0
	0x03A8EBC0 LDP X20, X19, [X31 + 0x10]
	0x03A8EBC4 MOVZ W0, 0x1
	0x03A8EBC8 LDR X30, [X31], #0x20
	0x03A8EBCC RET
	0x03A8EBD0 ADRP X8, 0x6C8000
	0x03A8EBD4 LDR X8, [X8 + 0x5B0]
	0x03A8EBD8 MOV X0, X19
	0x03A8EBDC LDR X1, [X8]
	0x03A8EBE0 BL 0x22ACD04
	0x03A8EBE4 CBZ X0, 0x3A8EBF8
	0x03A8EBE8 LDP X20, X19, [X31 + 0x10]
	0x03A8EBEC MOV X1, X31
	0x03A8EBF0 LDR X30, [X31], #0x20
	0x03A8EBF4 B 0x3A5A144
	0x03A8EBF8 BL 0x1C16F20
	0x03A8EBFC SUB X31, X31, 0x1B0
	0x03A8EC00 STP X29, X30, [X31 + 0x180]
	0x03A8EC04 STP X22, X21, [X31 + 0x190]
	0x03A8EC08 STP X20, X19, [X31 + 0x1A0]
	0x03A8EC0C CBZ X1, 0x3A8ED9C
	0x03A8EC10 MOV X20, X1
	0x03A8EC14 MOV X19, X0
	0x03A8EC18 MOV X0, X1
	0x03A8EC1C MOV X1, X31
	0x03A8EC20 BL 0x3984C98
	0x03A8EC24 TBZ X0, 0x0, 0x3A8ED88
	0x03A8EC28 MOV X0, X20
	0x03A8EC2C MOV X1, X31
	0x03A8EC30 BL 0x3984DE0
	0x03A8EC34 TBZ X0, 0x0, 0x3A8ECFC
	0x03A8EC38 MOV X0, X20
	0x03A8EC3C MOV X1, X31
	0x03A8EC40 BL 0x398632C
	0x03A8EC44 CMP W0, 0x1
	0x03A8EC48 B.LT 0x3A8ED88
	0x03A8EC4C MOV W21, W31
	0x03A8EC50 MOVZ W22, 0x2
	0x03A8EC54 ADD X8, X31, 0x100
	0x03A8EC58 MOV X0, X20
	0x03A8EC5C MOV W1, W21
	0x03A8EC60 MOV X2, X31
	0x03A8EC64 BL 0x3984D48
	0x03A8EC68 LDP V0, V1, [X31 + 0x100]
	0x03A8EC6C LDP V2, V3, [X31 + 0x120]
	0x03A8EC70 STP V0, V1, [X31 + 0x140]
	0x03A8EC74 STP V2, V3, [X31 + 0x160]
	0x03A8EC78 CBZ X19, 0x3A8ED9C
	0x03A8EC7C LDP V0, V1, [X31 + 0x140]
	0x03A8EC80 LDP V2, V3, [X31 + 0x160]
	0x03A8EC84 ADD X2, X31, 0xC0
	0x03A8EC88 MOV X0, X19
	0x03A8EC8C MOV W1, W21
	0x03A8EC90 MOV X3, X31
	0x03A8EC94 STP V0, V1, [X31 + 0xC0]
	0x03A8EC98 STP V2, V3, [X31 + 0xE0]
	0x03A8EC9C BL 0x3C048C0
	0x03A8ECA0 ADD X8, X31, 0x100
	0x03A8ECA4 MOV X0, X20
	0x03A8ECA8 MOV W1, W21
	0x03A8ECAC MOV X2, X31
	0x03A8ECB0 BL 0x3984CB0
	0x03A8ECB4 LDP V0, V1, [X31 + 0x100]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 3408
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X25+40]
	016 Move X19, 0x955000
	017 Move X21, X1
	018 Move [X31+3400], X8
	019 Move W8, [X19+862]
	020 Move [X31+1808], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {69}
	025 Move X0, 0x6C3000
	026 Move X0, [X0+3360]
	027 Call 0x1C17CF4
	028 Move X0, 0x6C7000
	029 Move X0, [X0+2328]
	030 Call 0x1C17CF4
	031 Move X0, 0x6CA000
	032 Move X0, [X0+856]
	033 Call 0x1C17CF4
	034 Move X0, 0x68E000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move X0, 0x666000
	038 Move X0, [X0+2600]
	039 Call 0x1C17CF4
	040 Move X0, 0x6CA000
	041 Move X0, [X0+864]
	042 Call 0x1C17CF4
	043 Move X0, 0x6C3000
	044 Move X0, [X0+2480]
	045 Call 0x1C17CF4
	046 Move X0, 0x6CA000
	047 Move X0, [X0+872]
	048 Call 0x1C17CF4
	049 Move X0, 0x6C3000
	050 Move X0, [X0+3200]
	051 Call 0x1C17CF4
	052 Move X0, 0x6C7000
	053 Move X0, [X0+2248]
	054 Call 0x1C17CF4
	055 Move X0, 0x68F000
	056 Move X0, [X0+2216]
	057 Call 0x1C17CF4
	058 Move X0, 0x6CA000
	059 Move X0, [X0+880]
	060 Call 0x1C17CF4
	061 Move X0, 0x6CA000
	062 Move X0, [X0+888]
	063 Call 0x1C17CF4
	064 Move X0, 0x6CA000
	065 Move X0, [X0+896]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X19+862], W8
	069 Add X0, X31, 1816
	070 Move W2, 1584
	071 Move W1, W31
	072 Call 0x3EB2B10
	073 Add X0, X31, 1080
	074 Move W2, 696
	075 Move W1, W31
	076 Move [X31+1800], W31
	077 Move [X31+1792], X31
	078 Move [X31+1784], X31
	079 Move [X31+1776], X31
	080 Call 0x3EB2B10
	081 Move [X31+1072], W31
	082 Move X19, [X21+440]
	083 Move X22, [X21+192]
	084 Compare X19, 0
	085 JumpIfEqual {323}
	086 Move X28, 0x68F000
	087 Move X28, [X28+2216]
	088 Add X0, X31, 544
	089 Move W2, 528
	090 Move X1, X21
	091 Call 0x3EB2AC0
	092 Move X0, [X28]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Add X0, X31, 16
	098 Add X1, X31, 544
	099 Move W2, 528
	100 Call 0x3EB2AC0
	101 Add X0, X31, 16
	102 Add X1, X31, 1816
	103 Call UniversalRenderPipeline.TryGetCullingParameters, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {481}
	108 Move X26, 0x6C7000
	109 Move X26, [X26+2248]
	110 Move X0, [X26]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X26]
	116 Move X8, [X0+184]
	117 Move X27, 0x6C3000
	118 Move [X8], X19
	119 Move X27, [X27+3360]
	120 Move X0, [X27]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X31
	126 Call CommandBufferPool.Get
	127 Move X8, [X21+376]
	128 Compare X8, 0
	129 JumpIfEqual {504}
	130 Move X20, X0
	131 Move X0, X8
	132 Move X1, X31
	133 Call XRPass.get_enabled, X0
	134 Move X8, 0x6CA000
	135 Move X8, [X8+864]
	136 And W31, W0, 1
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Move X8, [X8]
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X22
	145 Call Profiling.TryGetOrAddCameraSampler, X0
	146 Move X2, X0
	147 Add X0, X31, 1800
	148 Move X1, X23
	149 Move X3, X31
	150 Call ProfilingScope..ctor, X0, X1, X2
	151 Move W1, [X21+200]
	152 Move X0, X19
	153 Move X2, X31
	154 Call ScriptableRenderer.Clear, X0, X1
	155 Move X29, 0x6CA000
	156 Move X29, [X29+872]
	157 Move X0, [X29]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {163}
	161 Call 0x1C17DFC
	162 Move X0, [X29]
	163 Move X8, [X0+184]
	164 Move X2, [X8]
	165 Move [X31+544], W31
	166 Add X0, X31, 544
	167 Move X1, X31
	168 Move X3, X31
	169 Call ProfilingScope..ctor, X0, X1, X2
	170 Move W8, [X31+544]
	171 Move [X31+1072], W8
	172 Move X0, X19
	173 Move X1, X21
	174 Move X2, X31
	175 Call ScriptableRenderer.OnPreCullRenderPasses, X0, X1
	176 Move X8, [X19]
	177 Move X9, [X8+504]
	178 Move X3, [X8+512]
	179 Add X1, X31, 1816
	180 Move X0, X19
	181 Move X2, X21
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X23, X31
	184 Move W24, 6
	185 Add X0, X31, 1072
	186 Move X1, X31
	187 Call ProfilingScope.Dispose, X0
	188 Compare X23, 0
	189 JumpIfNotEqual {505}
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Compare W24, 0
	192 JumpIfNotEqual {498}
	193 Move X24, 0x6C3000
	194 Move X24, [X24+3200]
	195 Move X0, [X24]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Add X0, X31, 1808
	201 Move X1, X20
	202 Move X2, X31
	203 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	204 Compare X20, 0
	205 JumpIfEqual {507}
	206 Move X0, X20
	207 Move X1, X31
	208 Call CommandBuffer.Clear, X0
	209 Move X0, [X28]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X0, X20
	215 Call UniversalRenderPipeline.SetupPerCameraShaderConstants, X0
	216 Compare X22, 0
	217 JumpIfEqual {508}
	218 Move X0, X22
	219 Move X1, X31
	220 Call Camera.get_cameraType, X0
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, X22
	223 Move X1, X31
	224 Call Camera.get_cameraType, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, [X24]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X22
	232 Move X1, X31
	233 Call ScriptableRenderContext.EmitGeometryForCamera, X0
	234 Move X8, 0x6C7000
	235 Move X8, [X8+2328]
	236 Move X2, [X8]
	237 Add X1, X31, 1792
	238 Move X0, X22
	239 Call 0x21A5990, X0, X1
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {253}
	244 Move X8, [X31+1792]
	245 Compare X8, 0
	246 JumpIfEqual {509}
	247 Move X0, [X8+144]
	248 Compare X0, 0
	249 JumpIfEqual {510}
	250 Move X1, X21
	251 Move X2, X31
	252 Call MotionVectorsPersistentData.Update, X0, X1
	253 Move X8, [X21+480]
	254 Compare X8, 0
	255 JumpIfEqual {263}
	256 Move X0, [X28]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X21
	262 Call UniversalRenderPipeline.UpdateTemporalAATargets, X0
	263 Move X8, 0x6C3000
	264 Move X8, [X8+2480]
	265 Move W23, [X21+216]
	266 Move W22, [X21+220]
	267 Move X0, [X8]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move W0, W23
	273 Move W1, W22
	274 Move X2, X31
	275 Call RTHandles.SetReferenceSize, X0, X1
	276 Move X0, [X24]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Add X0, X31, 1808
	282 Add X1, X31, 1816
	283 Move X2, X31
	284 Call ScriptableRenderContext.Cull, X0, X1
	285 Move X8, [X28]
	286 Move [X31+1776], X0
	287 Move [X31+1784], X1
	288 Move W9, [X8+224]
	289 Compare W9, 0
	290 JumpIfNotEqual {293}
	291 Move X0, X8
	292 Call 0x1C17DFC
	293 Call UniversalRenderPipeline.get_asset
	294 Add X2, X31, 1776
	295 Add X4, X31, 1080
	296 Move X1, X21
	297 Move X3, X20
	298 Call UniversalRenderPipeline.InitializeRenderingData, X0, X1, X2, X3, X4
	299 Add X1, X31, 1080
	300 Move X0, X19
	301 Move X2, X31
	302 Call ScriptableRenderer.AddRenderPasses, X0, X1
	303 Move X0, [X28]
	304 Move X8, [X0+184]
	305 Move W9, [X8+24]
	306 Compare W9, 0
	307 JumpIfEqual {347}
	308 Move W9, [X0+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {314}
	311 Call 0x1C17DFC
	312 Move X8, [X28]
	313 Move X8, [X8+184]
	314 Move X0, [X8+8]
	315 Move X1, [X31+1808]
	316 Add X2, X31, 1080
	317 Call UniversalRenderPipeline.RecordAndExecuteRenderGraph, X0, X1, X2
	318 Move X1, [X31+1808]
	319 Add X2, X31, 1080
	320 Move X0, X19
	321 Move X3, X31
	322 Call ScriptableRenderer.FinishRenderGraphRendering, X0, X1, X2
	323 Compare X22, 0
	324 JumpIfEqual {504}
	325 Move X0, X22
	326 Move X1, X31
	327 Call Object.get_name, X0
	328 Move X8, 0x6CA000
	329 Move X8, [X8+888]
	330 Move X1, X0
	331 Move X2, X31
	332 Move X8, [X8]
	333 Move X0, X8
	334 Call String.Format, X0, X1
	335 Move X8, 0x666000
	336 Move X8, [X8+2600]
	337 Move X19, X0
	338 Move X8, [X8]
	339 Move W9, [X8+224]
	340 Compare W9, 0
	341 JumpIfNotEqual {344}
	342 Move X0, X8
	343 Call 0x1C17DFC
	344 Move X0, X19
	345 Move X1, X31
	346 Call Debug.LogWarning, X0
	347 Move X0, [X29]
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {353}
	351 Call 0x1C17DFC
	352 Move X0, [X29]
	353 Move X8, [X0+184]
	354 Move X2, [X8+8]
	355 Move [X31+544], W31
	356 Add X0, X31, 544
	357 Move X1, X31
	358 Move X3, X31
	359 Call ProfilingScope..ctor, X0, X1, X2
	360 Move W8, [X31+544]
	361 Move X1, [X31+1808]
	362 Move [X31+1072], W8
	363 Move X8, [X19]
	364 Move X9, [X8+472]
	365 Move X3, [X8+480]
	366 Add X2, X31, 1080
	367 Move X0, X19
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X21, X31
	370 Move W24, 13
	371 Add X0, X31, 1072
	372 Move X1, X31
	373 Call ProfilingScope.Dispose, X0
	374 Compare X21, 0
	375 JumpIfNotEqual {511}
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Compare W24, 0
	378 JumpIfNotEqual {498}
	379 Move X1, [X31+1808]
	380 Add X2, X31, 1080
	381 Move X0, X19
	382 Move X3, X31
	383 Call ScriptableRenderer.Execute, X0, X1, X2
	384 Add X0, X31, 1800
	385 Move X1, X31
	386 Call ProfilingScope.Dispose, X0
	387 Move X21, 0x6C3000
	388 Move X21, [X21+3200]
	389 Move X0, [X21]
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Add X0, X31, 1808
	395 Move X1, X20
	396 Move X2, X31
	397 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	398 Move X0, [X27]
	399 Move W8, [X0+224]
	400 Compare W8, 0
	401 JumpIfNotEqual {403}
	402 Call 0x1C17DFC
	403 Move X0, X20
	404 Move X1, X31
	405 Call CommandBufferPool.Release, X0
	406 Move X22, 0x6CA000
	407 Move X22, [X22+856]
	408 Move X0, [X22]
	409 Move W8, [X0+224]
	410 Compare W8, 0
	411 JumpIfNotEqual {414}
	412 Call 0x1C17DFC
	413 Move X0, [X22]
	414 Move X8, [X0+184]
	415 Add X0, X31, 1800
	416 Move X1, X31
	417 Move X3, X31
	418 Move X2, [X8]
	419 Call ProfilingScope..ctor, X0, X1, X2
	420 Move W8, [X19+420]
	421 Compare W8, 0
	422 JumpIfEqual {462}
	423 Move X0, [X21]
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Add X0, X31, 1808
	429 Move X1, X31
	430 Call ScriptableRenderContext.SubmitForRenderPassValidation, X0
	431 Move TEMP, X0
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfEqual {462}
	435 Move [X19+420], W31
	436 Move X8, 0x68E000
	437 Move X8, [X8+2296]
	438 Move X0, [X8]
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {443}
	442 Call 0x1C17DFC
	443 Move X8, 0x6CA000
	444 Move X8, [X8+896]
	445 Move X1, [X8]
	446 Move X0, X20
	447 Move W2, W31
	448 Move X3, X31
	449 Call CoreUtils.SetKeyword, X0, X1, X2
	450 Move X8, 0x666000
	451 Move X8, [X8+2600]
	452 Move X0, [X8]
	453 Move W8, [X0+224]
	454 Compare W8, 0
	455 JumpIfNotEqual {457}
	456 Call 0x1C17DFC
	457 Move X8, 0x6CA000
	458 Move X8, [X8+880]
	459 Move X0, [X8]
	460 Move X1, X31
	461 Call Debug.LogWarning, X0
	462 Move X0, [X21]
	463 Move W8, [X0+224]
	464 Compare W8, 0
	465 JumpIfNotEqual {467}
	466 Call 0x1C17DFC
	467 Add X0, X31, 1808
	468 Move X1, X31
	469 Call ScriptableRenderContext.Submit, X0
	470 Add X0, X31, 1800
	471 Move X1, X31
	472 Call ProfilingScope.Dispose, X0
	473 Move X0, [X26]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {479}
	477 Call 0x1C17DFC
	478 Move X0, [X26]
	479 Move X8, [X0+184]
	480 Move [X8], X31
	481 Move X8, [X25+40]
	482 Move X9, [X31+3400]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Add X31, X31, 3408
	485 Move X20, [X31+80]
	486 Move X19, [X31+88]
	487 Move X22, [X31+64]
	488 Move X21, [X31+72]
	489 Move X24, [X31+48]
	490 Move X23, [X31+56]
	491 Move X26, [X31+32]
	492 Move X25, [X31+40]
	493 Move X28, [X31+16]
	494 Move X27, [X31+24]
	495 Move X29, [X31+96]
	496 Move X30, [X31+104]
	497 Return 
	498 Add X0, X31, 1800
	499 Move X1, X31
	500 Call ProfilingScope.Dispose, X0
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Compare W24, 0
	503 JumpIfEqual {387}
	504 Call 0x1C17F20
	505 Move X0, X23
	506 Call 0x1C17F18
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Move X0, X21
	512 Call 0x1C17F18
	513 Call 0x3EB2B20
	514 Move X24, X1
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move X23, X0
	517 Move X0, X23
	518 Call 0x3EB2AD0
	519 Move X21, [X0]
	520 Call 0x3EB2AE0
	521 Move W24, W31
	522 Move X21, X31
	523 Add X0, X31, 1072
	524 Move X1, X31
	525 Call ProfilingScope.Dispose, X0
	526 Compare X21, 0
	527 JumpIfEqual {577}
	528 Move X0, X21
	529 Call 0x1C17F18
	530 Move X24, X1
	531 Move X23, X0
	532 Move X24, X1
	533 Move X23, X0
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X0, X23
	536 Call 0x3EB2AD0
	537 Move X8, [X0]
	538 Move [X31+8], X8
	539 Call 0x3EB2AE0
	540 Move X23, [X31+8]
	541 Move W24, W31
	542 Move [X31+8], X31
	543 Add X0, X31, 1072
	544 Move X1, X31
	545 Call ProfilingScope.Dispose, X0
	546 Move X8, [X31+8]
	547 Compare X8, 0
	548 JumpIfEqual {577}
	549 Move X0, [X31+8]
	550 Call 0x1C17F18
	551 Move X24, X1
	552 Move X23, X0
	553 Move X23, X0
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X0, X23
	556 Call 0x3EB2AD0
	557 Move X19, [X0]
	558 Call 0x3EB2AE0
	559 Add X0, X31, 1800
	560 Move X1, X31
	561 Call ProfilingScope.Dispose, X0
	562 Compare X19, 0
	563 JumpIfEqual {473}
	564 Move X0, X19
	565 Call 0x1C17F18
	566 Move X19, X31
	567 Move X23, X0
	568 Add X0, X31, 1800
	569 Move X1, X31
	570 Call ProfilingScope.Dispose, X0
	571 Compare X19, 0
	572 JumpIfEqual {596}
	573 Move X0, X19
	574 Call 0x1C17F18
	575 Move X24, X1
	576 Move X23, X0
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Move X0, X23
	579 Call 0x3EB2AD0
	580 Move X21, [X0]
	581 Call 0x3EB2AE0
	582 Add X0, X31, 1800
	583 Move X1, X31
	584 Call ProfilingScope.Dispose, X0
	585 Compare X21, 0
	586 JumpIfEqual {387}
	587 Move X0, X21
	588 Call 0x1C17F18
	589 Move X21, X31
	590 Move X23, X0
	591 Add X0, X31, 1800
	592 Move X1, X31
	593 Call ProfilingScope.Dispose, X0
	594 Compare X21, 0
	595 JumpIfNotEqual {598}
	596 Move X0, X23
	597 Call 0x1D2D690
	598 Move X0, X21
	599 Call 0x1C17F18
	600 Call 0x1991590

Method: System.Void RenderCameraStack(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera baseCamera)

Disassembly:
	0x03A8BD2C ADRP X8, 0x6CC000
	0x03A8BD30 LDR X8, [X8 + 0x2E0]
	0x03A8BD34 LDR X1, [X8]
	0x03A8BD38 ADD X0, X31, 0x6C0
	0x03A8BD3C BL 0x2BB3EF4
	0x03A8BD40 CBNZ X23, 0x3A8BEB0
	0x03A8BD44 CMP W22, 0x2C
	0x03A8BD48 B.EQ 0x3A8BD50
	0x03A8BD4C CBNZ W22, 0x3A8BDF4
	0x03A8BD50 LDR W8, [X31 + 0x20]
	0x03A8BD54 TBZ X8, 0x0, 0x3A8BDDC
	0x03A8BD58 ADRP X8, 0x6C5000
	0x03A8BD5C LDR X8, [X8 + 0xD20]
	0x03A8BD60 LDR X0, [X8]
	0x03A8BD64 LDR W8, [X0 + 0xE0]
	0x03A8BD68 CBNZ W8, 0x3A8BD70
	0x03A8BD6C BL 0x1C16DFC
	0x03A8BD70 MOV X0, X31
	0x03A8BD74 BL 0x399D510
	0x03A8BD78 MOV X20, X0
	0x03A8BD7C LDR X0, [X27]
	0x03A8BD80 LDR W8, [X0 + 0xE0]
	0x03A8BD84 CBNZ W8, 0x3A8BD8C
	0x03A8BD88 BL 0x1C16DFC
	0x03A8BD8C MOV X0, X20
	0x03A8BD90 MOV X1, X19
	0x03A8BD94 MOV X2, X31
	0x03A8BD98 BL 0x3989DA4
	0x03A8BD9C ADRP X8, 0x6C5000
	0x03A8BDA0 LDR X8, [X8 + 0xC80]
	0x03A8BDA4 LDR X0, [X8]
	0x03A8BDA8 LDR W8, [X0 + 0xE0]
	0x03A8BDAC CBNZ W8, 0x3A8BDB4
	0x03A8BDB0 BL 0x1C16DFC
	0x03A8BDB4 ADD X0, X31, 0x6F8
	0x03A8BDB8 MOV X1, X20
	0x03A8BDBC MOV X2, X31
	0x03A8BDC0 BL 0x3C58FE4
	0x03A8BDC4 ADD X0, X31, 0x6F8
	0x03A8BDC8 MOV X1, X31
	0x03A8BDCC BL 0x3C58A20
	0x03A8BDD0 MOV X0, X20
	0x03A8BDD4 MOV X1, X31
	0x03A8BDD8 BL 0x399D650
	0x03A8BDDC LDR X0, [X27]
	0x03A8BDE0 LDR W8, [X0 + 0xE0]
	0x03A8BDE4 CBNZ W8, 0x3A8BDEC
	0x03A8BDE8 BL 0x1C16DFC
	0x03A8BDEC MOV X0, X31
	0x03A8BDF0 BL 0x3989CD4
	0x03A8BDF4 ADD X0, X31, 0x6F0
	0x03A8BDF8 MOV X1, X31
	0x03A8BDFC BL 0x39B1DB4
	0x03A8BE00 ADD X31, X31, 0x700
	0x03A8BE04 LDP X20, X19, [X31 + 0x50]
	0x03A8BE08 LDP X22, X21, [X31 + 0x40]
	0x03A8BE0C LDP X24, X23, [X31 + 0x30]
	0x03A8BE10 LDP X26, X25, [X31 + 0x20]
	0x03A8BE14 LDP X28, X27, [X31 + 0x10]
	0x03A8BE18 LDP X29, X30, [X31], #0x60
	0x03A8BE1C RET
	0x03A8BE20 BL 0x1C16F20
	0x03A8BE24 BL 0x1C16F20
	0x03A8BE28 MOV X0, X26
	0x03A8BE2C BL 0x1C16F18
	0x03A8BE30 MOV X0, X25
	0x03A8BE34 BL 0x1C16F18
	0x03A8BE38 MOV X0, X24
	0x03A8BE3C BL 0x1C16F18
	0x03A8BE40 BL 0x1C16F20
	0x03A8BE44 MOV X0, X24
	0x03A8BE48 BL 0x1C16F18
	0x03A8BE4C BL 0x1C16F20
	0x03A8BE50 BL 0x1C16F20
	0x03A8BE54 BL 0x1C16F20
	0x03A8BE58 BL 0x1C16F20
	0x03A8BE5C BL 0x1C16F20
	0x03A8BE60 BL 0x1C16F20
	0x03A8BE64 BL 0x1C16F28
	0x03A8BE68 BL 0x1C16F28
	0x03A8BE6C BL 0x1C16F28
	0x03A8BE70 BL 0x1C16F20
	0x03A8BE74 BL 0x1C16F28
	0x03A8BE78 BL 0x1C16F28
	0x03A8BE7C BL 0x1C16F20
	0x03A8BE80 BL 0x1C16F28
	0x03A8BE84 BL 0x1C16F28
	0x03A8BE88 BL 0x1C16F20
	0x03A8BE8C BL 0x1C16F20
	0x03A8BE90 BL 0x1C16F20
	0x03A8BE94 BL 0x1C16F28
	0x03A8BE98 BL 0x1C16F28
	0x03A8BE9C BL 0x1C16F20
	0x03A8BEA0 BL 0x1C16F20
	0x03A8BEA4 BL 0x1C16F20
	0x03A8BEA8 BL 0x1C16F20
	0x03A8BEAC BL 0x1C16F20
	0x03A8BEB0 MOV X0, X23
	0x03A8BEB4 BL 0x1C16F18
	0x03A8BEB8 BL 0x1C16F28
	0x03A8BEBC BL 0x1C16F28
	0x03A8BEC0 BL 0x1C16F28
	0x03A8BEC4 BL 0x1C16F20
	0x03A8BEC8 BL 0x1C16F20
	0x03A8BECC BL 0x1C16F28
	0x03A8BED0 BL 0x1C16F28
	0x03A8BED4 BL 0x1C16F20
	0x03A8BED8 BL 0x1C16F20
	0x03A8BEDC BL 0x1C16F20
	0x03A8BEE0 MOV X26, X31
	0x03A8BEE4 ADD X0, X31, 0x468
	0x03A8BEE8 MOV X1, X31
	0x03A8BEEC BL 0x39B1DB4
	0x03A8BEF0 LDP X21, X20, [X31 + 0x8]
	0x03A8BEF4 ADRP X27, 0x6C5000
	0x03A8BEF8 LDR X27, [X27 + 0x500]
	0x03A8BEFC CBZ X26, 0x3A8C214
	0x03A8BF00 MOV X0, X26
	0x03A8BF04 BL 0x1C16F18
	0x03A8BF08 MOV X25, X31
	0x03A8BF0C ADD X0, X31, 0x468
	0x03A8BF10 MOV X1, X31
	0x03A8BF14 BL 0x39B1DB4
	0x03A8BF18 LDR X20, [X31 + 0x10]
	0x03A8BF1C ADRP X27, 0x6C5000
	0x03A8BF20 LDR X27, [X27 + 0x500]
	0x03A8BF24 MOV X21, X26
	0x03A8BF28 CBZ X25, 0x3A8C214
	0x03A8BF2C MOV X0, X25
	0x03A8BF30 BL 0x1C16F18
	0x03A8BF34 BL 0x1C16F20
	0x03A8BF38 BL 0x1C16F20
	0x03A8BF3C BL 0x1C16F20
	0x03A8BF40 MOV X25, X1
	0x03A8BF44 MOV X24, X31
	0x03A8BF48 ADD X0, X31, 0x468
	0x03A8BF4C MOV X1, X31
	0x03A8BF50 BL 0x39B1DB4
	0x03A8BF54 ADRP X27, 0x6C5000
	0x03A8BF58 LDR X27, [X27 + 0x500]
	0x03A8BF5C MOV X20, X25
	0x03A8BF60 MOV X21, X26
	0x03A8BF64 CBZ X24, 0x3A8C214
	0x03A8BF68 MOV X0, X24
	0x03A8BF6C BL 0x1C16F18
	0x03A8BF70 MOV X25, X1
	0x03A8BF74 MOV X24, X31
	0x03A8BF78 ADD X0, X31, 0x468
	0x03A8BF7C MOV X1, X31
	0x03A8BF80 BL 0x39B1DB4
	0x03A8BF84 ADRP X27, 0x6C5000
	0x03A8BF88 LDR X27, [X27 + 0x500]
	0x03A8BF8C MOV X20, X25
	0x03A8BF90 MOV X21, X26
	0x03A8BF94 CBZ X24, 0x3A8C214
	0x03A8BF98 MOV X0, X24
	0x03A8BF9C BL 0x1C16F18
	0x03A8BFA0 BL 0x1C16F20
	0x03A8BFA4 BL 0x1C16F20
	0x03A8BFA8 MOV X25, X1
	0x03A8BFAC MOV X26, X0
	0x03A8BFB0 B 0x3A8BF78
	0x03A8BFB4 MOV X25, X1
	0x03A8BFB8 MOV X26, X0
	0x03A8BFBC B 0x3A8BF48
	0x03A8BFC0 MOV X26, X0
	0x03A8BFC4 STR X1, [X31 + 0x10]
	0x03A8BFC8 B 0x3A8BF0C
	0x03A8BFCC STP X0, X1, [X31 + 0x8]
	0x03A8BFD0 B 0x3A8BEE4
	0x03A8BFD4 B 0x3A8C1B0
	0x03A8BFD8 B 0x3A8C1B0
	0x03A8BFDC B 0x3A8C1B0
	0x03A8BFE0 B 0x3A8C1B0
	0x03A8BFE4 B 0x3A8C1B0
	0x03A8BFE8 B 0x3A8C1B0
	0x03A8BFEC B 0x3A8C1B0
	0x03A8BFF0 B 0x3A8C1B0
	0x03A8BFF4 B 0x3A8C1B0
	0x03A8BFF8 B 0x3A8C1B0
	0x03A8BFFC B 0x3A8C1B0
	0x03A8C000 B 0x3A8C1B0
	0x03A8C004 B 0x3A8C1B0
	0x03A8C008 B 0x3A8C1B0
	0x03A8C00C B 0x3A8C1B0
	0x03A8C010 B 0x3A8C1B0
	0x03A8C014 B 0x3A8C1B0
	0x03A8C018 B 0x3A8C1B0
	0x03A8C01C B 0x3A8C1B0
	0x03A8C020 B 0x3A8C1B0
	0x03A8C024 B 0x3A8C1B0
	0x03A8C028 B 0x3A8C1B0
	0x03A8C02C B 0x3A8C1B0
	0x03A8C030 B 0x3A8C1B0
	0x03A8C034 B 0x3A8C1B0
	0x03A8C038 B 0x3A8C1B0
	0x03A8C03C B 0x3A8C1B0
	0x03A8C040 B 0x3A8C1B0
	0x03A8C044 B 0x3A8C1B0
	0x03A8C048 B 0x3A8C1B0
	0x03A8C04C B 0x3A8C1B0
	0x03A8C050 B 0x3A8C1B0
	0x03A8C054 B 0x3A8C1B0
	0x03A8C058 B 0x3A8C1B0
	0x03A8C05C B 0x3A8C204
	0x03A8C060 B 0x3A8C1B0
	0x03A8C064 B 0x3A8C1B0
	0x03A8C068 B 0x3A8C1B0
	0x03A8C06C B 0x3A8C1B0
	0x03A8C070 B 0x3A8C1B0
	0x03A8C074 B 0x3A8C1B0
	0x03A8C078 B 0x3A8C1B0
	0x03A8C07C B 0x3A8C1B0
	0x03A8C080 B 0x3A8C1B0
	0x03A8C084 B 0x3A8C1B0
	0x03A8C088 B 0x3A8C1B0
	0x03A8C08C B 0x3A8C1B0
	0x03A8C090 B 0x3A8C1B0
	0x03A8C094 B 0x3A8C1B0
	0x03A8C098 B 0x3A8C1B0
	0x03A8C09C B 0x3A8C1B0
	0x03A8C0A0 B 0x3A8C1B0
	0x03A8C0A4 B 0x3A8C1B0
	0x03A8C0A8 B 0x3A8C1B0
	0x03A8C0AC B 0x3A8C1B0
	0x03A8C0B0 B 0x3A8C1B0
	0x03A8C0B4 B 0x3A8C1B0
	0x03A8C0B8 B 0x3A8C1B0
	0x03A8C0BC B 0x3A8C1B0
	0x03A8C0C0 B 0x3A8C1B0
	0x03A8C0C4 B 0x3A8C1B0
	0x03A8C0C8 B 0x3A8C1B0
	0x03A8C0CC B 0x3A8C1B0
	0x03A8C0D0 B 0x3A8C1B0
	0x03A8C0D4 B 0x3A8C1B0
	0x03A8C0D8 B 0x3A8C1B0
	0x03A8C0DC B 0x3A8C1B0
	0x03A8C0E0 B 0x3A8C204
	0x03A8C0E4 B 0x3A8C1B0
	0x03A8C0E8 B 0x3A8C1B0
	0x03A8C0EC B 0x3A8C1B0
	0x03A8C0F0 B 0x3A8C1B0
	0x03A8C0F4 B 0x3A8C1B0
	0x03A8C0F8 B 0x3A8C1B0
	0x03A8C0FC B 0x3A8C1B0
	0x03A8C100 B 0x3A8C1B0
	0x03A8C104 B 0x3A8C1B0
	0x03A8C108 B 0x3A8C1B0
	0x03A8C10C B 0x3A8C1B0
	0x03A8C110 B 0x3A8C204
	0x03A8C114 B 0x3A8C204
	0x03A8C118 B 0x3A8C204
	0x03A8C11C B 0x3A8C1B0
	0x03A8C120 B 0x3A8C204
	0x03A8C124 B 0x3A8C1B0
	0x03A8C128 B 0x3A8C204
	0x03A8C12C B 0x3A8C204
	0x03A8C130 MOVZ W8, 0x1
	0x03A8C134 MOV X20, X1
	0x03A8C138 MOV X21, X0
	0x03A8C13C STR W8, [X31 + 0x20]
	0x03A8C140 B 0x3A8C20C
	0x03A8C144 B 0x3A8C204
	0x03A8C148 B 0x3A8C1B0
	0x03A8C14C B 0x3A8C1B0
	0x03A8C150 B 0x3A8C204
	0x03A8C154 B 0x3A8C204
	0x03A8C158 B 0x3A8C204
	0x03A8C15C B 0x3A8C204
	0x03A8C160 B 0x3A8C204
	0x03A8C164 B 0x3A8C204
	0x03A8C168 B 0x3A8C204
	0x03A8C16C B 0x3A8C204
	0x03A8C170 B 0x3A8C204
	0x03A8C174 B 0x3A8C204
	0x03A8C178 B 0x3A8C204
	0x03A8C17C B 0x3A8C204
	0x03A8C180 B 0x3A8C204
	0x03A8C184 B 0x3A8C204
	0x03A8C188 B 0x3A8C204
	0x03A8C18C B 0x3A8C204
	0x03A8C190 B 0x3A8C204
	0x03A8C194 B 0x3A8C204
	0x03A8C198 B 0x3A8C204
	0x03A8C19C B 0x3A8C204
	0x03A8C1A0 B 0x3A8C204
	0x03A8C1A4 B 0x3A8C204
	0x03A8C1A8 B 0x3A8C204
	0x03A8C1AC B 0x3A8C1B0
	0x03A8C1B0 MOV X20, X1
	0x03A8C1B4 MOV X21, X0
	0x03A8C1B8 B 0x3A8C250
	0x03A8C1BC B 0x3A8C204
	0x03A8C1C0 B 0x3A8C204
	0x03A8C1C4 B 0x3A8C204
	0x03A8C1C8 B 0x3A8C204
	0x03A8C1CC B 0x3A8C204
	0x03A8C1D0 B 0x3A8C204
	0x03A8C1D4 B 0x3A8C204
	0x03A8C1D8 B 0x3A8C204
	0x03A8C1DC B 0x3A8C204
	0x03A8C1E0 B 0x3A8C204
	0x03A8C1E4 B 0x3A8C204
	0x03A8C1E8 B 0x3A8C204
	0x03A8C1EC B 0x3A8C204
	0x03A8C1F0 B 0x3A8C204
	0x03A8C1F4 B 0x3A8C204
	0x03A8C1F8 B 0x3A8C204
	0x03A8C1FC B 0x3A8C204
	0x03A8C200 B 0x3A8C204
	0x03A8C204 MOV X20, X1
	0x03A8C208 MOV X21, X0
	0x03A8C20C ADRP X27, 0x6C4000
	0x03A8C210 LDR X27, [X27 + 0x500]
	0x03A8C214 CMP W20, 0x1
	0x03A8C218 B.NE 0x3A8C234
	0x03A8C21C MOV X0, X21
	0x03A8C220 BL 0x3EB1AD0
	0x03A8C224 LDR X23, [X0]
	0x03A8C228 BL 0x3EB1AE0
	0x03A8C22C MOV W22, W31
	0x03A8C230 B 0x3A8BD2C
	0x03A8C234 MOV X23, X31
	0x03A8C238 ADRP X8, 0x6CB000
	0x03A8C23C LDR X8, [X8 + 0x2E0]
	0x03A8C240 LDR X1, [X8]
	0x03A8C244 ADD X0, X31, 0x6C0
	0x03A8C248 BL 0x2BB3EF4
	0x03A8C24C CBNZ X23, 0x3A8C288
	0x03A8C250 CMP W20, 0x1
	0x03A8C254 B.NE 0x3A8C280
	0x03A8C258 MOV X0, X21
	0x03A8C25C BL 0x3EB1AD0
	0x03A8C260 LDR X19, [X0]
	0x03A8C264 BL 0x3EB1AE0
	0x03A8C268 ADD X0, X31, 0x6F0
	0x03A8C26C MOV X1, X31
	0x03A8C270 BL 0x39B1DB4
	0x03A8C274 CBZ X19, 0x3A8BE00
	0x03A8C278 MOV X0, X19
	0x03A8C27C BL 0x1C16F18
	0x03A8C280 MOV X19, X31
	0x03A8C284 B 0x3A8C2A0
	0x03A8C288 MOV X0, X23
	0x03A8C28C BL 0x1C16F18
	0x03A8C290 MOV X20, X1
	0x03A8C294 MOV X21, X0
	0x03A8C298 B 0x3A8C238
	0x03A8C29C MOV X21, X0
	0x03A8C2A0 ADD X0, X31, 0x6F0
	0x03A8C2A4 MOV X1, X31
	0x03A8C2A8 BL 0x39B1DB4
	0x03A8C2AC CBNZ X19, 0x3A8C2B8
	0x03A8C2B0 MOV X0, X21
	0x03A8C2B4 BL 0x1D2C690
	0x03A8C2B8 MOV X0, X19
	0x03A8C2BC BL 0x1C16F18
	0x03A8C2C0 BL 0x1990590
	0x03A8C2C4 SUB X31, X31, 0x40
	0x03A8C2C8 STR X30, [X31 + 0x10]
	0x03A8C2CC STP X22, X21, [X31 + 0x20]
	0x03A8C2D0 STP X20, X19, [X31 + 0x30]
	0x03A8C2D4 ADRP X22, 0x956000
	0x03A8C2D8 ADRP X21, 0x6C8000
	0x03A8C2DC LDRB W8, [X22 + 0x361]
	0x03A8C2E0 LDR X21, [X21 + 0xA8]
	0x03A8C2E4 MOV X19, X1
	0x03A8C2E8 MOV X20, X0
	0x03A8C2EC TBNZ X8, 0x0, 0x3A8C31C
	0x03A8C2F0 ADRP X0, 0x667000
	0x03A8C2F4 LDR X0, [X0 + 0x598]
	0x03A8C2F8 BL 0x1C16CF4
	0x03A8C2FC ADRP X0, 0x6C8000
	0x03A8C300 LDR X0, [X0 + 0xA8]
	0x03A8C304 BL 0x1C16CF4
	0x03A8C308 ADRP X0, 0x691000
	0x03A8C30C LDR X0, [X0 + 0xFC0]
	0x03A8C310 BL 0x1C16CF4
	0x03A8C314 MOVZ W8, 0x1
	0x03A8C318 STRB W8, [X22 + 0x361]
	0x03A8C31C LDR X1, [X21]
	0x03A8C320 MOVZ W0, 0x1
	0x03A8C324 STRB W31, [X31 + 0x18]
	0x03A8C328 STR W31, [X31 + 0x8]
	0x03A8C32C STR X31, [X31]
	0x03A8C330 BL 0x2235BC0
	0x03A8C334 MOV X2, X0
	0x03A8C338 ADD X0, X31, 0x18
	0x03A8C33C MOV X1, X31
	0x03A8C340 MOV X3, X31
	0x03A8C344 BL 0x39B1DB0
	0x03A8C348 CBZ X20, 0x3A8C4D4
	0x03A8C34C MOV X0, X20
	0x03A8C350 MOV X1, X31
	0x03A8C354 BL 0x3C03AD4
	0x03A8C358 ADRP X22, 0x667000
	0x03A8C35C LDR X22, [X22 + 0x598]
	0x03A8C360 MOV W21, W0
	0x03A8C364 LDR X0, [X22]
	0x03A8C368 LDR W8, [X0 + 0xE0]
	0x03A8C36C CBNZ W8, 0x3A8C374
	0x03A8C370 BL 0x1C16DFC
	0x03A8C374 MOV X0, X19
	0x03A8C378 MOV X1, X31
	0x03A8C37C MOV X2, X31
	0x03A8C380 BL 0x3C354F8
	0x03A8C384 CMP W21, 0x2
	0x03A8C388 CSET W21, EQ
	0x03A8C38C TBZ X0, 0x0, 0x3A8C3A8
	0x03A8C390 CBZ X19, 0x3A8C4E0
	0x03A8C394 MOV X0, X19
	0x03A8C398 MOV X1, X31
	0x03A8C39C BL 0x3A80ACC
	0x03A8C3A0 AND W8, W0, 0x1
	0x03A8C3A4 B 0x3A8C3AC
	0x03A8C3A8 MOV W8, W31
	0x03A8C3AC ORR W8, W8, W21, 0x0
	0x03A8C3B0 ADRP X21, 0x691000
	0x03A8C3B4 LDR X21, [X21 + 0xFC0]
	0x03A8C3B8 CBNZ W8, 0x3A8C420
	0x03A8C3BC LDR X0, [X22]
	0x03A8C3C0 LDR W8, [X0 + 0xE0]
	0x03A8C3C4 CBNZ W8, 0x3A8C3CC
	0x03A8C3C8 BL 0x1C16DFC
	0x03A8C3CC MOV X0, X19
	0x03A8C3D0 MOV X1, X31
	0x03A8C3D4 BL 0x3C38948
	0x03A8C3D8 TBZ X0, 0x0, 0x3A8C420
	0x03A8C3DC CBZ X19, 0x3A8C4E8
	0x03A8C3E0 LDR X8, [X19 + 0xC0]
	0x03A8C3E4 CBNZ X8, 0x3A8C3F8
	0x03A8C3E8 MOV X0, X20
	0x03A8C3EC MOV X1, X19
	0x03A8C3F0 MOV X2, X31
	0x03A8C3F4 BL 0x3A80B4C
	0x03A8C3F8 LDR X0, [X21]
	0x03A8C3FC LDR W8, [X0 + 0xE0]
	0x03A8C400 CBNZ W8, 0x3A8C408
	0x03A8C404 BL 0x1C16DFC
	0x03A8C408 MOV X0, X31
	0x03A8C40C BL 0x39EE864
	0x03A8C410 CBZ X0, 0x3A8C4EC
	0x03A8C414 LDR X8, [X19 + 0xC0]
	0x03A8C418 STR X8, [X0 + 0x10]
	0x03A8C41C B 0x3A8C4B4
	0x03A8C420 LDR X0, [X22]
	0x03A8C424 LDR W8, [X0 + 0xE0]
	0x03A8C428 CBNZ W8, 0x3A8C430
	0x03A8C42C BL 0x1C16DFC
	0x03A8C430 MOV X0, X19
	0x03A8C434 MOV X1, X31
	0x03A8C438 BL 0x3C38948
	0x03A8C43C TBZ X0, 0x0, 0x3A8C45C
	0x03A8C440 CBZ X19, 0x3A8C4E4
	0x03A8C444 LDR X8, [X19 + 0xC0]
	0x03A8C448 CBZ X8, 0x3A8C45C
	0x03A8C44C MOV X0, X20
	0x03A8C450 MOV X1, X19
	0x03A8C454 MOV X2, X31
	0x03A8C458 BL 0x3A80F3C
	0x03A8C45C ADD X2, X31, 0x8
	0x03A8C460 ADD X3, X31, 0x0
	0x03A8C464 MOV X0, X20
	0x03A8C468 MOV X1, X19
	0x03A8C46C MOV X4, X31
	0x03A8C470 BL 0x3A80D40
	0x03A8C474 LDR X0, [X21]
	0x03A8C478 LDR W8, [X0 + 0xE0]
	0x03A8C47C CBNZ W8, 0x3A8C484
	0x03A8C480 BL 0x1C16DFC
	0x03A8C484 MOV X0, X31
	0x03A8C488 BL 0x39EE864
	0x03A8C48C CBZ X0, 0x3A8C4D8
	0x03A8C490 MOV X1, X31
	0x03A8C494 BL 0x39F17E0
	0x03A8C498 MOV X0, X31
	0x03A8C49C BL 0x39EE864
	0x03A8C4A0 CBZ X0, 0x3A8C4DC
	0x03A8C4A4 LDR X1, [X31]
	0x03A8C4A8 LDR W2, [X31 + 0x8]
	0x03A8C4AC MOV X3, X31
	0x03A8C4B0 BL 0x39F1D24
	0x03A8C4B4 ADD X0, X31, 0x18
	0x03A8C4B8 MOV X1, X31
	0x03A8C4BC BL 0x39B1DB4
	0x03A8C4C0 LDP X20, X19, [X31 + 0x30]
	0x03A8C4C4 LDP X22, X21, [X31 + 0x20]
	0x03A8C4C8 LDR X30, [X31 + 0x10]
	0x03A8C4CC ADD X31, X31, 0x40
	0x03A8C4D0 RET
	0x03A8C4D4 BL 0x1C16F20
	0x03A8C4D8 BL 0x1C16F20
	0x03A8C4DC BL 0x1C16F20
	0x03A8C4E0 BL 0x1C16F20
	0x03A8C4E4 BL 0x1C16F20
	0x03A8C4E8 BL 0x1C16F20
	0x03A8C4EC BL 0x1C16F20
	0x03A8C4F0 B 0x3A8C540
	0x03A8C4F4 B 0x3A8C540
	0x03A8C4F8 B 0x3A8C540
	0x03A8C4FC B 0x3A8C540
	0x03A8C500 B 0x3A8C540
	0x03A8C504 B 0x3A8C540
	0x03A8C508 B 0x3A8C540
	0x03A8C50C B 0x3A8C540
	0x03A8C510 B 0x3A8C540
	0x03A8C514 B 0x3A8C540
	0x03A8C518 B 0x3A8C540
	0x03A8C51C B 0x3A8C540
	0x03A8C520 B 0x3A8C540
	0x03A8C524 B 0x3A8C540
	0x03A8C528 B 0x3A8C540
	0x03A8C52C B 0x3A8C540
	0x03A8C530 B 0x3A8C540
	0x03A8C534 B 0x3A8C540
	0x03A8C538 B 0x3A8C540
	0x03A8C53C B 0x3A8C540
	0x03A8C540 MOV X19, X0
	0x03A8C544 CMP W1, 0x1
	0x03A8C548 B.NE 0x3A8C574
	0x03A8C54C MOV X0, X19
	0x03A8C550 BL 0x3EB1AD0
	0x03A8C554 LDR X20, [X0]
	0x03A8C558 BL 0x3EB1AE0
	0x03A8C55C ADD X0, X31, 0x18
	0x03A8C560 MOV X1, X31
	0x03A8C564 BL 0x39B1DB4
	0x03A8C568 CBZ X20, 0x3A8C4C0
	0x03A8C56C MOV X0, X20
	0x03A8C570 BL 0x1C16F18
	0x03A8C574 MOV X20, X31
	0x03A8C578 B 0x3A8C580
	0x03A8C57C MOV X19, X0
	0x03A8C580 ADD X0, X31, 0x18
	0x03A8C584 MOV X1, X31
	0x03A8C588 BL 0x39B1DB4
	0x03A8C58C CBNZ X20, 0x3A8C598
	0x03A8C590 MOV X0, X19
	0x03A8C594 BL 0x1D2C690
	0x03A8C598 MOV X0, X20
	0x03A8C59C BL 0x1C16F18
	0x03A8C5A0 BL 0x1990590
	0x03A8C5A4 STR X30, [X31 - 0x30]!
	0x03A8C5A8 STP X22, X21, [X31 + 0x10]
	0x03A8C5AC STP X20, X19, [X31 + 0x20]
	0x03A8C5B0 ADRP X22, 0x956000
	0x03A8C5B4 ADRP X21, 0x690000
	0x03A8C5B8 LDRB W8, [X22 + 0x35B]
	0x03A8C5BC LDR X21, [X21 + 0x8A8]
	0x03A8C5C0 MOV X19, X1
	0x03A8C5C4 MOV X20, X0
	0x03A8C5C8 TBNZ X8, 0x0, 0x3A8C5EC
	0x03A8C5CC ADRP X0, 0x690000
	0x03A8C5D0 LDR X0, [X0 + 0x870]
	0x03A8C5D4 BL 0x1C16CF4
	0x03A8C5D8 ADRP X0, 0x690000
	0x03A8C5DC LDR X0, [X0 + 0x8A8]
	0x03A8C5E0 BL 0x1C16CF4
	0x03A8C5E4 MOVZ W8, 0x1
	0x03A8C5E8 STRB W8, [X22 + 0x35B]
	0x03A8C5EC LDR X0, [X21]
	0x03A8C5F0 STR X31, [X31 + 0x8]
	0x03A8C5F4 LDR W8, [X0 + 0xE0]
	0x03A8C5F8 CBNZ W8, 0x3A8C600
	0x03A8C5FC BL 0x1C16DFC
	0x03A8C600 MOV X0, X19
	0x03A8C604 BL 0x3A8AC50
	0x03A8C608 TBZ X0, 0x0, 0x3A8C634
	0x03A8C60C CBZ X19, 0x3A8C664
	0x03A8C610 MOV X0, X19
	0x03A8C614 MOV X1, X31
	0x03A8C618 BL 0x3C32ECC
	0x03A8C61C CBZ X0, 0x3A8C664
	0x03A8C620 ADRP X8, 0x690000
	0x03A8C624 LDR X8, [X8 + 0x870]
	0x03A8C628 ADD X1, X31, 0x8
	0x03A8C62C LDR X2, [X8]
	0x03A8C630 BL 0x21E6600
	0x03A8C634 LDR X0, [X21]
	0x03A8C638 LDR W8, [X0 + 0xE0]
	0x03A8C63C CBNZ W8, 0x3A8C644
	0x03A8C640 BL 0x1C16DFC
	0x03A8C644 ADD X2, X31, 0x8
	0x03A8C648 MOV X0, X20
	0x03A8C64C MOV X1, X19
	0x03A8C650 BL 0x3A8C6CC
	0x03A8C654 LDP X20, X19, [X31 + 0x20]
	0x03A8C658 LDP X22, X21, [X31 + 0x10]
	0x03A8C65C LDR X30, [X31], #0x30
	0x03A8C660 RET
	0x03A8C664 BL 0x1C16F20
	0x03A8C668 STR X30, [X31 - 0x30]!
	0x03A8C66C STP X22, X21, [X31 + 0x10]
	0x03A8C670 STP X20, X19, [X31 + 0x20]
	0x03A8C674 ADRP X21, 0x956000
	0x03A8C678 ADRP X22, 0x690000
	0x03A8C67C LDRB W8, [X21 + 0x35A]
	0x03A8C680 LDR X22, [X22 + 0x8A8]
	0x03A8C684 MOV X19, X1
	0x03A8C688 MOV X20, X0
	0x03A8C68C TBNZ X8, 0x0, 0x3A8C6A4
	0x03A8C690 ADRP X0, 0x690000
	0x03A8C694 LDR X0, [X0 + 0x8A8]
	0x03A8C698 BL 0x1C16CF4
	0x03A8C69C MOVZ W8, 0x1
	0x03A8C6A0 STRB W8, [X21 + 0x35A]
	0x03A8C6A4 LDR X0, [X22]
	0x03A8C6A8 LDR W8, [X0 + 0xE0]
	0x03A8C6AC CBNZ W8, 0x3A8C6B4
	0x03A8C6B0 BL 0x1C16DFC
	0x03A8C6B4 MOV X0, X20
	0x03A8C6B8 MOV X1, X19
	0x03A8C6BC LDP X20, X19, [X31 + 0x20]
	0x03A8C6C0 LDP X22, X21, [X31 + 0x10]
	0x03A8C6C4 LDR X30, [X31], #0x30
	0x03A8C6C8 B 0x3A8C5A4
	0x03A8C6CC STR X29, [X31 - 0x40]!
	0x03A8C6D0 STP X30, X23, [X31 + 0x10]
	0x03A8C6D4 STP X22, X21, [X31 + 0x20]
	0x03A8C6D8 STP X20, X19, [X31 + 0x30]
	0x03A8C6DC SUB X31, X31, 0x210
	0x03A8C6E0 ADRP X23, 0x956000
	0x03A8C6E4 ADRP X22, 0x667000
	0x03A8C6E8 LDRB W8, [X23 + 0x35C]
	0x03A8C6EC LDR X22, [X22 + 0x598]
	0x03A8C6F0 MOV X21, X2
	0x03A8C6F4 MOV X20, X1
	0x03A8C6F8 MOV X19, X0
	0x03A8C6FC TBNZ X8, 0x0, 0x3A8C738
	0x03A8C700 ADRP X0, 0x667000
	0x03A8C704 LDR X0, [X0 + 0xA28]
	0x03A8C708 BL 0x1C16CF4
	0x03A8C70C ADRP X0, 0x667000
	0x03A8C710 LDR X0, [X0 + 0x598]
	0x03A8C714 BL 0x1C16CF4
	0x03A8C718 ADRP X0, 0x690000
	0x03A8C71C LDR X0, [X0 + 0x8A8]
	0x03A8C720 BL 0x1C16CF4
	0x03A8C724 ADRP X0, 0x6CB000
	0x03A8C728 LDR X0, [X0 + 0x350]
	0x03A8C72C BL 0x1C16CF4
	0x03A8C730 MOVZ W8, 0x1
	0x03A8C734 STRB W8, [X23 + 0x35C]
	0x03A8C738 ADD X0, X31, 0x0
	0x03A8C73C MOVZ W2, 0x210
	0x03A8C740 MOV W1, W31
	0x03A8C744 BL 0x3EB1B10
	0x03A8C748 LDR X0, [X22]
	0x03A8C74C LDR X22, [X21]
	0x03A8C750 LDR W8, [X0 + 0xE0]
	0x03A8C754 CBNZ W8, 0x3A8C75C
	0x03A8C758 BL 0x1C16DFC
	0x03A8C75C MOV X0, X22
	0x03A8C760 MOV X1, X31
	0x03A8C764 MOV X2, X31
	0x03A8C768 BL 0x3C354F8
	0x03A8C76C LDR X22, [X21]
	0x03A8C770 TBZ X0, 0x0, 0x3A8C7B0
	0x03A8C774 CBZ X22, 0x3A8C814
	0x03A8C778 LDR W8, [X22 + 0x2C]
	0x03A8C77C CBZ W8, 0x3A8C7B0
	0x03A8C780 ADRP X8, 0x667000
	0x03A8C784 LDR X8, [X8 + 0xA28]
	0x03A8C788 LDR X0, [X8]
	0x03A8C78C LDR W8, [X0 + 0xE0]
	0x03A8C790 CBNZ W8, 0x3A8C798
	0x03A8C794 BL 0x1C16DFC
	0x03A8C798 ADRP X8, 0x6CB000
	0x03A8C79C LDR X8, [X8 + 0x350]
	0x03A8C7A0 MOV X1, X31
	0x03A8C7A4 LDR X0, [X8]
	0x03A8C7A8 BL 0x3C06A04
	0x03A8C7AC B 0x3A8C7FC
	0x03A8C7B0 ADRP X8, 0x690000
	0x03A8C7B4 LDR X8, [X8 + 0x8A8]
	0x03A8C7B8 LDR X0, [X8]
	0x03A8C7BC LDR W8, [X0 + 0xE0]
	0x03A8C7C0 CBNZ W8, 0x3A8C7C8
	0x03A8C7C4 BL 0x1C16DFC
	0x03A8C7C8 ADD X3, X31, 0x0
	0x03A8C7CC MOV X0, X20
	0x03A8C7D0 MOV X1, X22
	0x03A8C7D4 MOV W2, W31
	0x03A8C7D8 BL 0x3A8C818
	0x03A8C7DC LDR X1, [X21]
	0x03A8C7E0 ADD X3, X31, 0x0
	0x03A8C7E4 MOVZ W2, 0x1
	0x03A8C7E8 MOV X0, X20
	0x03A8C7EC BL 0x3A8CC64
	0x03A8C7F0 ADD X1, X31, 0x0
	0x03A8C7F4 MOV X0, X19
	0x03A8C7F8 BL 0x3A8D3B8
	0x03A8C7FC ADD X31, X31, 0x210
	0x03A8C800 LDP X20, X19, [X31 + 0x30]
	0x03A8C804 LDP X22, X21, [X31 + 0x20]
	0x03A8C808 LDP X30, X23, [X31 + 0x10]
	0x03A8C80C LDR X29, [X31], #0x40
	0x03A8C810 RET
	0x03A8C814 BL 0x1C16F20
	0x03A8C818 SUB X31, X31, 0xC0
	0x03A8C81C STP X30, X25, [X31 + 0x80]
	0x03A8C820 STP X24, X23, [X31 + 0x90]
	0x03A8C824 STP X22, X21, [X31 + 0xA0]
	0x03A8C828 STP X20, X19, [X31 + 0xB0]
	0x03A8C82C ADRP X23, 0x956000
	0x03A8C830 ADRP X22, 0x690000
	0x03A8C834 LDRB W8, [X23 + 0x365]
	0x03A8C838 LDR X22, [X22 + 0x898]
	0x03A8C83C MOV X19, X3
	0x03A8C840 MOV X21, X1
	0x03A8C844 MOV X20, X0
	0x03A8C848 TBNZ X8, 0x0, 0x3A8C890
	0x03A8C84C ADRP X0, 0x66B000
	0x03A8C850 LDR X0, [X0 + 0x2C8]
	0x03A8C854 BL 0x1C16CF4
	0x03A8C858 ADRP X0, 0x667000
	0x03A8C85C LDR X0, [X0 + 0x598]
	0x03A8C860 BL 0x1C16CF4
	0x03A8C864 ADRP X0, 0x690000
	0x03A8C868 LDR X0, [X0 + 0x898]
	0x03A8C86C BL 0x1C16CF4
	0x03A8C870 ADRP X0, 0x690000
	0x03A8C874 LDR X0, [X0 + 0x8A8]
	0x03A8C878 BL 0x1C16CF4
	0x03A8C87C ADRP X0, 0x6C4000
	0x03A8C880 LDR X0, [X0 + 0x500]
	0x03A8C884 BL 0x1C16CF4
	0x03A8C888 MOVZ W8, 0x1
	0x03A8C88C STRB W8, [X23 + 0x365]
	0x03A8C890 LDR X0, [X22]
	0x03A8C894 STRB W31, [X31 + 0x78]
	0x03A8C898 ADRP X24, 0x690000
	0x03A8C89C LDR W8, [X0 + 0xE0]
	0x03A8C8A0 LDR X24, [X24 + 0x8A8]
	0x03A8C8A4 CBNZ W8, 0x3A8C8B0
	0x03A8C8A8 BL 0x1C16DFC
	0x03A8C8AC LDR X0, [X22]
	0x03A8C8B0 LDR X8, [X0 + 0xB8]
	0x03A8C8B4 ADD X0, X31, 0x78
	0x03A8C8B8 MOV X1, X31
	0x03A8C8BC MOV X3, X31
	0x03A8C8C0 LDR X2, [X8 + 0x20]
	0x03A8C8C4 BL 0x39B1DB0
	0x03A8C8C8 MOVZ W2, 0x210
	0x03A8C8CC MOV X0, X19
	0x03A8C8D0 MOV W1, W31
	0x03A8C8D4 BL 0x3EB1B10
	0x03A8C8D8 LDR X0, [X24]
	0x03A8C8DC LDR W8, [X0 + 0xE0]
	0x03A8C8E0 CBNZ W8, 0x3A8C8E8
	0x03A8C8E4 BL 0x1C16DFC
	0x03A8C8E8 MOV X0, X20
	0x03A8C8EC MOV X1, X21
	0x03A8C8F0 MOV X2, X19
	0x03A8C8F4 BL 0x3A8F4B0
	0x03A8C8F8 STR X20, [X19 + 0xC0]
	0x03A8C8FC CBZ X21, 0x3A8C920
	0x03A8C900 MOV X0, X21
	0x03A8C904 MOV X1, X31
	0x03A8C908 BL 0x3A816F0
	0x03A8C90C CBZ X0, 0x3A8C920
	0x03A8C910 LDR X8, [X0 + 0xE8]
	0x03A8C914 CBZ X8, 0x3A8CBA0
	0x03A8C918 LDRB W22, [X8 + 0x11]
	0x03A8C91C B 0x3A8C924
	0x03A8C920 MOV W22, W31
	0x03A8C924 CBZ X20, 0x3A8CB94
	0x03A8C928 MOV X0, X20
	0x03A8C92C MOV X1, X31
	0x03A8C930 BL 0x3C037A0
	0x03A8C934 TBZ X0, 0x0, 0x3A8C960
	0x03A8C938 LDR X0, [X24]
	0x03A8C93C LDR W8, [X0 + 0xE0]
	0x03A8C940 CBNZ W8, 0x3A8C948
	0x03A8C944 BL 0x1C16DFC
	0x03A8C948 BL 0x3A8AB60
	0x03A8C94C CBZ X0, 0x3A8CB98
	0x03A8C950 LDR W8, [X0 + 0x5C]
	0x03A8C954 CMP W8, 0x1
	0x03A8C958 CSET W8, GT
	0x03A8C95C B 0x3A8C964
	0x03A8C960 MOV W8, W31
	0x03A8C964 ADRP X25, 0x667000
	0x03A8C968 LDR X25, [X25 + 0x598]
	0x03A8C96C ANDS W31, W8, W22, 0x0
	0x03A8C970 B.EQ 0x3A8C9C8
	0x03A8C974 MOV X0, X20
	0x03A8C978 MOV X1, X31
	0x03A8C97C BL 0x3C040B4
	0x03A8C980 MOV X21, X0
	0x03A8C984 LDR X0, [X25]
	0x03A8C988 LDR W8, [X0 + 0xE0]
	0x03A8C98C CBNZ W8, 0x3A8C994
	0x03A8C990 BL 0x1C16DFC
	0x03A8C994 MOV X0, X21
	0x03A8C998 MOV X1, X31
	0x03A8C99C MOV X2, X31
	0x03A8C9A0 BL 0x3C354F8
	0x03A8C9A4 TBZ X0, 0x0, 0x3A8C9D0
	0x03A8C9A8 MOV X0, X20
	0x03A8C9AC MOV X1, X31
	0x03A8C9B0 BL 0x3C040B4
	0x03A8C9B4 CBZ X0, 0x3A8CBA4
	0x03A8C9B8 MOV X1, X31
	0x03A8C9BC BL 0x3C20648
	0x03A8C9C0 MOV W21, W0
	0x03A8C9C4 B 0x3A8C9EC
	0x03A8C9C8 MOVZ W21, 0x1
	0x03A8C9CC B 0x3A8C9EC
	0x03A8C9D0 LDR X0, [X24]
	0x03A8C9D4 LDR W8, [X0 + 0xE0]
	0x03A8C9D8 CBNZ W8, 0x3A8C9E0
	0x03A8C9DC BL 0x1C16DFC
	0x03A8C9E0 BL 0x3A8AB60
	0x03A8C9E4 CBZ X0, 0x3A8CBA8
	0x03A8C9E8 LDR W21, [X0 + 0x5C]
	0x03A8C9EC LDRB W8, [X19 + 0x172]
	0x03A8C9F0 ANDS W31, W22, W8, 0x0
	0x03A8C9F4 B.EQ 0x3A8CA80
	0x03A8C9F8 MOV X0, X20
	0x03A8C9FC MOV X1, X31
	0x03A8CA00 BL 0x3C040B4
	0x03A8CA04 MOV X22, X0
	0x03A8CA08 LDR X0, [X25]
	0x03A8CA0C LDR W8, [X0 + 0xE0]
	0x03A8CA10 CBNZ W8, 0x3A8CA18
	0x03A8CA14 BL 0x1C16DFC
	0x03A8CA18 MOV X0, X22
	0x03A8CA1C MOV X1, X31
	0x03A8CA20 MOV X2, X31
	0x03A8CA24 BL 0x3C3883C
	0x03A8CA28 TBZ X0, 0x0, 0x3A8CA80
	0x03A8CA2C ADRP X21, 0x6C4000
	0x03A8CA30 LDR X21, [X21 + 0x500]
	0x03A8CA34 LDR X0, [X21]
	0x03A8CA38 LDR W8, [X0 + 0xE0]
	0x03A8CA3C CBNZ W8, 0x3A8CA44
	0x03A8CA40 BL 0x1C16DFC
	0x03A8CA44 ADRP X22, 0x956000
	0x03A8CA48 LDRB W8, [X22 + 0x3D2]
	0x03A8CA4C CBNZ W8, 0x3A8CA64
	0x03A8CA50 ADRP X0, 0x6C4000
	0x03A8CA54 LDR X0, [X0 + 0x500]
	0x03A8CA58 BL 0x1C16CF4
	0x03A8CA5C MOVZ W8, 0x1
	0x03A8CA60 STRB W8, [X22 + 0x3D2]
	0x03A8CA64 LDR X0, [X21]
	0x03A8CA68 LDR W8, [X0 + 0xE0]
	0x03A8CA6C CBNZ W8, 0x3A8CA78
	0x03A8CA70 BL 0x1C16DFC
	0x03A8CA74 LDR X0, [X21]
	0x03A8CA78 LDR X8, [X0 + 0xB8]
	0x03A8CA7C LDR W21, [X8 + 0x20]
	0x03A8CA80 ADRP X8, 0x66B000
	0x03A8CA84 LDR X8, [X8 + 0x2C8]
	0x03A8CA88 LDR X0, [X8]
	0x03A8CA8C LDR W8, [X0 + 0xE0]
	0x03A8CA90 CBNZ W8, 0x3A8CA98
	0x03A8CA94 BL 0x1C16DFC
	0x03A8CA98 MOV X0, X31
	0x03A8CA9C BL 0x3C0E29C
	0x03A8CAA0 MOV W22, W0
	0x03A8CAA4 LDR X0, [X24]
	0x03A8CAA8 LDR W8, [X0 + 0xE0]
	0x03A8CAAC CBNZ W8, 0x3A8CAB4
	0x03A8CAB0 BL 0x1C16DFC
	0x03A8CAB4 BL 0x3A8AB60
	0x03A8CAB8 MOV X23, X0
	0x03A8CABC LDR X0, [X25]
	0x03A8CAC0 LDR W8, [X0 + 0xE0]
	0x03A8CAC4 CBNZ W8, 0x3A8CACC
	0x03A8CAC8 BL 0x1C16DFC
	0x03A8CACC MOV X0, X23
	0x03A8CAD0 MOV X1, X31
	0x03A8CAD4 BL 0x3C38948
	0x03A8CAD8 TBZ X0, 0x0, 0x3A8CAFC
	0x03A8CADC LDR X0, [X24]
	0x03A8CAE0 LDR W8, [X0 + 0xE0]
	0x03A8CAE4 CBNZ W8, 0x3A8CAEC
	0x03A8CAE8 BL 0x1C16DFC
	0x03A8CAEC BL 0x3A8AB60
	0x03A8CAF0 CBZ X0, 0x3A8CB9C
	0x03A8CAF4 LDR W23, [X0 + 0x58]
	0x03A8CAF8 B 0x3A8CB00
	0x03A8CAFC MOV W23, W31
	0x03A8CB00 STR W23, [X19 + 0x160]
	0x03A8CB04 LDR X0, [X24]
	0x03A8CB08 LDRB W24, [X19 + 0x16D]
	0x03A8CB0C LDR W8, [X0 + 0xE0]
	0x03A8CB10 CBNZ W8, 0x3A8CB18
	0x03A8CB14 BL 0x1C16DFC
	0x03A8CB18 CMP W24, 0x0
	0x03A8CB1C CSET W2, NE
	0x03A8CB20 AND W5, W22, 0x1
	0x03A8CB24 ADD X8, X31, 0x8
	0x03A8CB28 MOV X0, X20
	0x03A8CB2C MOV X1, X19
	0x03A8CB30 MOV W3, W23
	0x03A8CB34 MOV W4, W21
	0x03A8CB38 MOV W6, W31
	0x03A8CB3C BL 0x3A8FB1C
	0x03A8CB40 LDUR V0, [X31 + 0x8]
	0x03A8CB44 LDUR V1, [X31 + 0x18]
	0x03A8CB48 LDUR V2, [X31 + 0x28]
	0x03A8CB4C LDR W8, [X31 + 0x38]
	0x03A8CB50 ADD X9, X19, 0xD8
	0x03A8CB54 ADD X0, X31, 0x78
	0x03A8CB58 MOV X1, X31
	0x03A8CB5C STP V0, V1, [X31 + 0x40]
	0x03A8CB60 STR V2, [X31 + 0x6]
	0x03A8CB64 STR W8, [X31 + 0x70]
	0x03A8CB68 STR W8, [X9 + 0x30]
	0x03A8CB6C STUR V2, [X19 + 0xF8]
	0x03A8CB70 STUR V1, [X19 + 0xE8]
	0x03A8CB74 STUR V0, [X19 + 0xD8]
	0x03A8CB78 BL 0x39B1DB4
	0x03A8CB7C LDP X20, X19, [X31 + 0xB0]
	0x03A8CB80 LDP X22, X21, [X31 + 0xA0]
	0x03A8CB84 LDP X24, X23, [X31 + 0x90]
	0x03A8CB88 LDP X30, X25, [X31 + 0x80]
	0x03A8CB8C ADD X31, X31, 0xC0
	0x03A8CB90 RET
	0x03A8CB94 BL 0x1C16F20
	0x03A8CB98 BL 0x1C16F20
	0x03A8CB9C BL 0x1C16F20
	0x03A8CBA0 BL 0x1C16F20
	0x03A8CBA4 BL 0x1C16F20
	0x03A8CBA8 BL 0x1C16F20
	0x03A8CBAC B 0x3A8CC00
	0x03A8CBB0 B 0x3A8CC00
	0x03A8CBB4 B 0x3A8CC00
	0x03A8CBB8 B 0x3A8CC00
	0x03A8CBBC B 0x3A8CC00
	0x03A8CBC0 B 0x3A8CC00
	0x03A8CBC4 B 0x3A8CC00
	0x03A8CBC8 B 0x3A8CC00
	0x03A8CBCC B 0x3A8CC00
	0x03A8CBD0 B 0x3A8CC00
	0x03A8CBD4 B 0x3A8CC00
	0x03A8CBD8 B 0x3A8CC00
	0x03A8CBDC B 0x3A8CC00
	0x03A8CBE0 B 0x3A8CC00
	0x03A8CBE4 B 0x3A8CC00
	0x03A8CBE8 B 0x3A8CC00
	0x03A8CBEC B 0x3A8CC00
	0x03A8CBF0 B 0x3A8CC00
	0x03A8CBF4 B 0x3A8CC00
	0x03A8CBF8 B 0x3A8CC00
	0x03A8CBFC B 0x3A8CC00
	0x03A8CC00 MOV X19, X0
	0x03A8CC04 CMP W1, 0x1
	0x03A8CC08 B.NE 0x3A8CC34
	0x03A8CC0C MOV X0, X19
	0x03A8CC10 BL 0x3EB1AD0
	0x03A8CC14 LDR X20, [X0]
	0x03A8CC18 BL 0x3EB1AE0
	0x03A8CC1C ADD X0, X31, 0x78
	0x03A8CC20 MOV X1, X31
	0x03A8CC24 BL 0x39B1DB4
	0x03A8CC28 CBZ X20, 0x3A8CB7C
	0x03A8CC2C MOV X0, X20
	0x03A8CC30 BL 0x1C16F18
	0x03A8CC34 MOV X20, X31
	0x03A8CC38 B 0x3A8CC40
	0x03A8CC3C MOV X19, X0
	0x03A8CC40 ADD X0, X31, 0x78
	0x03A8CC44 MOV X1, X31
	0x03A8CC48 BL 0x39B1DB4
	0x03A8CC4C CBNZ X20, 0x3A8CC58
	0x03A8CC50 MOV X0, X19
	0x03A8CC54 BL 0x1D2C690
	0x03A8CC58 MOV X0, X20
	0x03A8CC5C BL 0x1C16F18
	0x03A8CC60 BL 0x1990590
	0x03A8CC64 SUB X31, X31, 0x1A0
	0x03A8CC68 STR D12, [X31 + 0x110]
	0x03A8CC6C STP D11, D10, [X31 + 0x120]
	0x03A8CC70 STP D9, D8, [X31 + 0x130]
	0x03A8CC74 STP X29, X30, [X31 + 0x140]
	0x03A8CC78 STP X28, X27, [X31 + 0x150]
	0x03A8CC7C STP X26, X25, [X31 + 0x160]
	0x03A8CC80 STP X24, X23, [X31 + 0x170]
	0x03A8CC84 STP X22, X21, [X31 + 0x180]
	0x03A8CC88 STP X20, X19, [X31 + 0x190]
	0x03A8CC8C ADRP X25, 0x956000
	0x03A8CC90 ADRP X23, 0x690000
	0x03A8CC94 LDRB W8, [X25 + 0x367]
	0x03A8CC98 LDR X23, [X23 + 0x898]
	0x03A8CC9C MOV X19, X3
	0x03A8CCA0 MOV W22, W2
	0x03A8CCA4 MOV X21, X1
	0x03A8CCA8 MOV X20, X0
	0x03A8CCAC ADD X24, X31, 0xC0
	0x03A8CCB0 TBNZ X8, 0x0, 0x3A8CCF8
	0x03A8CCB4 ADRP X0, 0x68F000
	0x03A8CCB8 LDR X0, [X0 + 0x8F8]
	0x03A8CCBC BL 0x1C16CF4
	0x03A8CCC0 ADRP X0, 0x667000
	0x03A8CCC4 LDR X0, [X0 + 0x598]
	0x03A8CCC8 BL 0x1C16CF4
	0x03A8CCCC ADRP X0, 0x690000
	0x03A8CCD0 LDR X0, [X0 + 0x898]
	0x03A8CCD4 BL 0x1C16CF4
	0x03A8CCD8 ADRP X0, 0x6CA000
	0x03A8CCDC LDR X0, [X0 + 0x608]
	0x03A8CCE0 BL 0x1C16CF4
	0x03A8CCE4 ADRP X0, 0x690000
	0x03A8CCE8 LDR X0, [X0 + 0x8A8]
	0x03A8CCEC BL 0x1C16CF4
	0x03A8CCF0 MOVZ W8, 0x1
	0x03A8CCF4 STRB W8, [X25 + 0x367]
	0x03A8CCF8 LDR X0, [X23]
	0x03A8CCFC MOVI V0.2D, 0x0
	0x03A8CD00 STRB W31, [X31 + 0x108]
	0x03A8CD04 STUR V0, [X24 + 0x2C]
	0x03A8CD08 STP V0, V0, [X31 + 0xD0]
	0x03A8CD0C STP V0, V0, [X31 + 0xB0]
	0x03A8CD10 STP V0, V0, [X31 + 0x90]
	0x03A8CD14 STR V0, [X31 + 0x8]
	0x03A8CD18 ADRP X26, 0x690000
	0x03A8CD1C LDR W8, [X0 + 0xE0]
	0x03A8CD20 LDR X26, [X26 + 0x8A8]
	0x03A8CD24 CBNZ W8, 0x3A8CD30
	0x03A8CD28 BL 0x1C16DFC
	0x03A8CD2C LDR X0, [X23]
	0x03A8CD30 LDR X8, [X0 + 0xB8]
	0x03A8CD34 ADD X0, X31, 0x108
	0x03A8CD38 MOV X1, X31
	0x03A8CD3C MOV X3, X31
	0x03A8CD40 LDR X2, [X8 + 0x30]
	0x03A8CD44 BL 0x39B1DB0
	0x03A8CD48 LDR X0, [X26]
	0x03A8CD4C LDR W8, [X0 + 0xE0]
	0x03A8CD50 CBNZ W8, 0x3A8CD58
	0x03A8CD54 BL 0x1C16DFC
	0x03A8CD58 BL 0x3A8AB60
	0x03A8CD5C MOV X23, X0
	0x03A8CD60 CBZ X0, 0x3A8D298
	0x03A8CD64 LDRB W8, [X23 + 0x80]
	0x03A8CD68 CBZ W8, 0x3A8CEA8
	0x03A8CD6C MOVZ W25, 0x1
	0x03A8CD70 CBZ X20, 0x3A8CEB0
	0x03A8CD74 LDR V8, [X23 + 0xA8]
	0x03A8CD78 MOV X0, X20
	0x03A8CD7C MOV X1, X31
	0x03A8CD80 BL 0x3C03618
	0x03A8CD84 FCMP S8, S0
	0x03A8CD88 FCSEL S9, S8, S0, MI
	0x03A8CD8C FMOV S8, W31
	0x03A8CD90 STR S9, [X19 + 0x184]
	0x03A8CD94 CBZ W25, 0x3A8CDB0
	0x03A8CD98 MOV X0, X20
	0x03A8CD9C MOV X1, X31
	0x03A8CDA0 BL 0x3C035DC
	0x03A8CDA4 FCMP S9, S0
	0x03A8CDA8 B.LT 0x3A8CDB0
	0x03A8CDAC LDR V8, [X19 + 0x184]
	0x03A8CDB0 LDR W28, [X19 + 0x168]
	0x03A8CDB4 ADRP X27, 0x667000
	0x03A8CDB8 ADRP X25, 0x68F000
	0x03A8CDBC LDR X27, [X27 + 0x598]
	0x03A8CDC0 LDR X25, [X25 + 0x8F8]
	0x03A8CDC4 CMP W28, 0x2
	0x03A8CDC8 STR S8, [X19 + 0x184]
	0x03A8CDCC B.NE 0x3A8CE6C
	0x03A8CDD0 MOVZ W8, 0x1
	0x03A8CDD4 STR W31, [X19 + 0xC8]
	0x03A8CDD8 STRB W8, [X19 + 0x164]
	0x03A8CDDC LDR X0, [X25]
	0x03A8CDE0 LDR W8, [X0 + 0xE0]
	0x03A8CDE4 CBNZ W8, 0x3A8CDEC
	0x03A8CDE8 BL 0x1C16DFC
	0x03A8CDEC MOV X0, X20
	0x03A8CDF0 MOV X1, X31
	0x03A8CDF4 BL 0x39E9BC8
	0x03A8CDF8 AND W8, W0, 0x1
	0x03A8CDFC STRB W8, [X19 + 0x188]
	0x03A8CE00 LDRB W8, [X23 + 0x4C]
	0x03A8CE04 STRB W8, [X19 + 0x16F]
	0x03A8CE08 LDRB W8, [X23 + 0x4D]
	0x03A8CE0C STRB W8, [X19 + 0x170]
	0x03A8CE10 LDR X0, [X26]
	0x03A8CE14 LDR W8, [X0 + 0xE0]
	0x03A8CE18 CBNZ W8, 0x3A8CE20
	0x03A8CE1C BL 0x1C16DFC
	0x03A8CE20 BL 0x3A8AB60
	0x03A8CE24 CBZ X0, 0x3A8D2A0
	0x03A8CE28 MOV X1, X31
	0x03A8CE2C BL 0x3A2BAC8
	0x03A8CE30 STR X0, [X19 + 0x1B8]
	0x03A8CE34 STRB W31, [X19 + 0x11C]
	0x03A8CE38 ADD X8, X19, 0x114
	0x03A8CE3C LDR V0, [X8]
	0x03A8CE40 ADD X8, X19, 0x120
	0x03A8CE44 STR W31, [X19 + 0x128]
	0x03A8CE48 ADRP X23, 0x955000
	0x03A8CE4C STR D0, [X19 + 0x120]
	0x03A8CE50 STR W31, [X8 + 0xC]
	0x03A8CE54 LDRB W8, [X23 + 0xA48]
	0x03A8CE58 CBNZ W8, 0x3A8CF34
	0x03A8CE5C ADRP X0, 0x66F000
	0x03A8CE60 LDR X0, [X0 + 0xF08]
	0x03A8CE64 BL 0x1C16CF4
	0x03A8CE68 B 0x3A8CF2C
	0x03A8CE6C LDR X0, [X27]
	0x03A8CE70 LDR W8, [X0 + 0xE0]
	0x03A8CE74 CBNZ W8, 0x3A8CE7C
	0x03A8CE78 BL 0x1C16DFC
	0x03A8CE7C MOV X0, X21
	0x03A8CE80 MOV X1, X31
	0x03A8CE84 MOV X2, X31
	0x03A8CE88 BL 0x3C354F8
	0x03A8CE8C TBZ X0, 0x0, 0x3A8CEB4
	0x03A8CE90 CBZ X21, 0x3A8D2A4
	0x03A8CE94 LDR W8, [X21 + 0x2C]
	0x03A8CE98 STR W8, [X19 + 0xC8]
	0x03A8CE9C CBZ W8, 0x3A8CF50
	0x03A8CEA0 LDRB W8, [X21 + 0x5A]
	0x03A8CEA4 B 0x3A8CF54
	0x03A8CEA8 LDRB W25, [X23 + 0x90]
	0x03A8CEAC CBNZ X20, 0x3A8CD74
	0x03A8CEB0 BL 0x1C16F20
	0x03A8CEB4 MOVZ W8, 0x1
	0x03A8CEB8 STR W31, [X19 + 0xC8]
	0x03A8CEBC STRB W8, [X19 + 0x164]
	0x03A8CEC0 STRB W31, [X19 + 0x188]
	0x03A8CEC4 LDRB W8, [X23 + 0x4C]
	0x03A8CEC8 STRB W8, [X19 + 0x16F]
	0x03A8CECC LDRB W8, [X23 + 0x4D]
	0x03A8CED0 STRB W8, [X19 + 0x170]
	0x03A8CED4 LDR X0, [X26]
	0x03A8CED8 LDR W8, [X0 + 0xE0]
	0x03A8CEDC CBNZ W8, 0x3A8CEE4
	0x03A8CEE0 BL 0x1C16DFC
	0x03A8CEE4 BL 0x3A8AB60
	0x03A8CEE8 CBZ X0, 0x3A8D2A8
	0x03A8CEEC MOV X1, X31
	0x03A8CEF0 BL 0x3A2BAC8
	0x03A8CEF4 STR X0, [X19 + 0x1B8]
	0x03A8CEF8 STRB W31, [X19 + 0x11C]
	0x03A8CEFC ADD X8, X19, 0x114
	0x03A8CF00 LDR V0, [X8]
	0x03A8CF04 ADD X8, X19, 0x120
	0x03A8CF08 STR W31, [X19 + 0x128]
	0x03A8CF0C ADRP X23, 0x955000
	0x03A8CF10 STR D0, [X19 + 0x120]
	0x03A8CF14 STR W31, [X8 + 0xC]
	0x03A8CF18 LDRB W8, [X23 + 0xA48]
	0x03A8CF1C CBNZ W8, 0x3A8CF34
	0x03A8CF20 ADRP X0, 0x66F000
	0x03A8CF24 LDR X0, [X0 + 0xF08]
	0x03A8CF28 BL 0x1C16CF4
	0x03A8CF2C MOVZ W8, 0x1
	0x03A8CF30 STRB W8, [X23 + 0xA48]
	0x03A8CF34 ADRP X8, 0x66F000
	0x03A8CF38 LDR X8, [X8 + 0xF08]
	0x03A8CF3C MOVI D0, 0x0
	0x03A8CF40 LDR X8, [X8]
	0x03A8CF44 LDR X8, [X8 + 0xB8]
	0x03A8CF48 ADD X8, X8, 0x8
	0x03A8CF4C B 0x3A8CFC8
	0x03A8CF50 MOVZ W8, 0x1
	0x03A8CF54 STRB W8, [X19 + 0x164]
	0x03A8CF58 LDRB W8, [X21 + 0x4C]
	0x03A8CF5C STRB W8, [X19 + 0x188]
	0x03A8CF60 LDRB W8, [X21 + 0x20]
	0x03A8CF64 CBZ W8, 0x3A8CF70
	0x03A8CF68 LDR V0, [X19 + 0x184]
	0x03A8CF6C B 0x3A8CF74
	0x03A8CF70 FMOV S0, W31
	0x03A8CF74 STR S0, [X19 + 0x184]
	0x03A8CF78 MOV X0, X21
	0x03A8CF7C MOV X1, X31
	0x03A8CF80 BL 0x3A81C08
	0x03A8CF84 AND W8, W0, 0x1
	0x03A8CF88 STRB W8, [X19 + 0x16F]
	0x03A8CF8C MOV X0, X21
	0x03A8CF90 MOV X1, X31
	0x03A8CF94 BL 0x3A81CA8
	0x03A8CF98 AND W8, W0, 0x1
	0x03A8CF9C STRB W8, [X19 + 0x170]
	0x03A8CFA0 MOV X0, X21
	0x03A8CFA4 MOV X1, X31
	0x03A8CFA8 BL 0x3A816F0
	0x03A8CFAC STR X0, [X19 + 0x1B8]
	0x03A8CFB0 LDRB W8, [X21 + 0x5D]
	0x03A8CFB4 STRB W8, [X19 + 0x11C]
	0x03A8CFB8 LDR V0, [X21 + 0x6]
	0x03A8CFBC ADD X8, X21, 0x70
	0x03A8CFC0 STR V0, [X19 + 0x12]
	0x03A8CFC4 LDR V0, [X21 + 0x78]
	0x03A8CFC8 LDR V1, [X8]
	0x03A8CFCC LDRB W23, [X19 + 0x188]
	0x03A8CFD0 STP D1, D0, [X19 + 0x130]
	0x03A8CFD4 MOV X0, X31
	0x03A8CFD8 BL 0x3C3BACC
	0x03A8CFDC LDRB W8, [X19 + 0x16F]
	0x03A8CFE0 CMP W28, 0x2
	0x03A8CFE4 CSET W9, EQ
	0x03A8CFE8 CMP W0, 0x8
	0x03A8CFEC CSET W10, NE
	0x03A8CFF0 AND W10, W23, W10, 0x0
	0x03A8CFF4 ORR W8, W8, W9, 0x0
	0x03A8CFF8 STRB W10, [X19 + 0x188]
	0x03A8CFFC STRB W8, [X19 + 0x16F]
	0x03A8D000 LDR X0, [X26]
	0x03A8D004 LDR W8, [X0 + 0xE0]
	0x03A8D008 CBNZ W8, 0x3A8D010
	0x03A8D00C BL 0x1C16DFC
	0x03A8D010 MOV X0, X19
	0x03A8D014 BL 0x3A8F344
	0x03A8D018 LDR W23, [X19 + 0xC8]
	0x03A8D01C AND W8, W22, 0x1
	0x03A8D020 AND W9, W0, 0x1
	0x03A8D024 STRB W9, [X19 + 0x171]
	0x03A8D028 CMP W23, 0x1
	0x03A8D02C STRB W8, [X19 + 0x1C0]
	0x03A8D030 B.NE 0x3A8D038
	0x03A8D034 STRB W31, [X19 + 0x170]
	0x03A8D038 LDR X0, [X27]
	0x03A8D03C LDR W8, [X0 + 0xE0]
	0x03A8D040 CBNZ W8, 0x3A8D048
	0x03A8D044 BL 0x1C16DFC
	0x03A8D048 MOV X0, X21
	0x03A8D04C MOV X1, X31
	0x03A8D050 MOV X2, X31
	0x03A8D054 BL 0x3C354F8
	0x03A8D058 TBZ X0, 0x0, 0x3A8D078
	0x03A8D05C LDR X0, [X26]
	0x03A8D060 LDR W8, [X0 + 0xE0]
	0x03A8D064 CBNZ W8, 0x3A8D06C
	0x03A8D068 BL 0x1C16DFC
	0x03A8D06C MOV X0, X19
	0x03A8D070 MOV X1, X21
	0x03A8D074 BL 0x3A8FECC
	0x03A8D078 ADD X8, X31, 0x40
	0x03A8D07C MOV X0, X20
	0x03A8D080 MOV X1, X31
	0x03A8D084 BL 0x3C04358
	0x03A8D088 LDR V8, [X31 + 0x40]
	0x03A8D08C LDUR V0, [X31 + 0x44]
	0x03A8D090 LDUR V1, [X31 + 0x54]
	0x03A8D094 LDUR V2, [X31 + 0x64]
	0x03A8D098 LDR V3, [X31 + 0x7]
	0x03A8D09C CMP W23, 0x1
	0x03A8D0A0 STP V0, V1, [X31 + 0xC0]
	0x03A8D0A4 STR V2, [X31 + 0xE]
	0x03A8D0A8 STUR V3, [X24 + 0x2C]
	0x03A8D0AC B.NE 0x3A8D128
	0x03A8D0B0 MOV X0, X20
	0x03A8D0B4 MOV X1, X31
	0x03A8D0B8 BL 0x3C03928
	0x03A8D0BC TBNZ X0, 0x0, 0x3A8D128
	0x03A8D0C0 LDR V12, [X19 + 0x10C]
	0x03A8D0C4 LDR V10, [X19 + 0x110]
	0x03A8D0C8 LDR V9, [X19 + 0x114]
	0x03A8D0CC LDR V11, [X19 + 0x118]
	0x03A8D0D0 MOV X0, X20
	0x03A8D0D4 MOV X1, X31
	0x03A8D0D8 BL 0x3C03F08
	0x03A8D0DC FCMP S12, S0
	0x03A8D0E0 B.NE 0x3A8D0FC
	0x03A8D0E4 FCMP S11, S3
	0x03A8D0E8 B.NE 0x3A8D0FC
	0x03A8D0EC FCMP S10, S1
	0x03A8D0F0 B.NE 0x3A8D0FC
	0x03A8D0F4 FCMP S9, S2
	0x03A8D0F8 B.EQ 0x3A8D128
	0x03A8D0FC ADD X8, X31, 0x40
	0x03A8D100 MOV X0, X20
	0x03A8D104 MOV X1, X31
	0x03A8D108 BL 0x3C04358
	0x03A8D10C LDR V8, [X31 + 0x40]
	0x03A8D110 MOV X0, X20
	0x03A8D114 MOV X1, X31
	0x03A8D118 BL 0x3C039DC
	0x03A8D11C LDR V1, [X19 + 0x148]
	0x03A8D120 FMUL S0, S8, S0
	0x03A8D124 FDIV S8, S0, S1
	0x03A8D128 LDR X0, [X26]
	0x03A8D12C LDR W8, [X0 + 0xE0]
	0x03A8D130 CBNZ W8, 0x3A8D138
	0x03A8D134 BL 0x1C16DFC
	0x03A8D138 ADD X0, X19, 0x1E8
	0x03A8D13C BL 0x3A8FF70
	0x03A8D140 ADRP X8, 0x6C9000
	0x03A8D144 LDR X8, [X8 + 0x608]
	0x03A8D148 LDR X0, [X8]
	0x03A8D14C LDR W8, [X0 + 0xE0]
	0x03A8D150 CBNZ W8, 0x3A8D158
	0x03A8D154 BL 0x1C16DFC
	0x03A8D158 ADD X8, X31, 0x40
	0x03A8D15C MOV X0, X19
	0x03A8D160 MOV X1, X31
	0x03A8D164 BL 0x3A78A08
	0x03A8D168 LDP V0, V1, [X31 + 0x40]
	0x03A8D16C LDP V2, V3, [X31 + 0x60]
	0x03A8D170 STP V0, V1, [X31 + 0x80]
	0x03A8D174 STP V2, V3, [X31 + 0xA0]
	0x03A8D178 ADD X8, X31, 0x40
	0x03A8D17C MOV X0, X20
	0x03A8D180 MOV X1, X31
	0x03A8D184 BL 0x3C04220
	0x03A8D188 LDP V0, V1, [X31 + 0x40]
	0x03A8D18C LDP V2, V3, [X31 + 0x60]
	0x03A8D190 STP V0, V1, [X31]
	0x03A8D194 STP V2, V3, [X31 + 0x20]
	0x03A8D198 STP V2, V3, [X19 + 0x20]
	0x03A8D19C STP V0, V1, [X19]
	0x03A8D1A0 STR S8, [X19 + 0x40]
	0x03A8D1A4 LDUR V0, [X24 + 0x2C]
	0x03A8D1A8 LDP V2, V1, [X31 + 0xD0]
	0x03A8D1AC LDR V3, [X31 + 0xC]
	0x03A8D1B0 STR V0, [X19 + 0x7]
	0x03A8D1B4 STUR V1, [X19 + 0x64]
	0x03A8D1B8 STUR V2, [X19 + 0x54]
	0x03A8D1BC STUR V3, [X19 + 0x44]
	0x03A8D1C0 LDP V1, V0, [X31 + 0xA0]
	0x03A8D1C4 LDP V3, V2, [X31 + 0x80]
	0x03A8D1C8 STP V1, V0, [X19 + 0xA0]
	0x03A8D1CC STP V3, V2, [X19 + 0x80]
	0x03A8D1D0 MOV X0, X20
	0x03A8D1D4 MOV X1, X31
	0x03A8D1D8 BL 0x3C32E90
	0x03A8D1DC CBZ X0, 0x3A8D29C
	0x03A8D1E0 MOV X1, X31
	0x03A8D1E4 BL 0x3C3F58C
	0x03A8D1E8 STR S0, [X19 + 0x1C4]
	0x03A8D1EC STR S1, [X19 + 0x1C8]
	0x03A8D1F0 STR S2, [X19 + 0x1CC]
	0x03A8D1F4 MOV X0, X20
	0x03A8D1F8 MOV X1, X31
	0x03A8D1FC BL 0x3C03B10
	0x03A8D200 LDR X0, [X25]
	0x03A8D204 MOV V8.16B, V0.16B
	0x03A8D208 MOV V9.16B, V1.16B
	0x03A8D20C MOV V10.16B, V2.16B
	0x03A8D210 LDR W8, [X0 + 0xE0]
	0x03A8D214 MOV V11.16B, V3.16B
	0x03A8D218 CBNZ W8, 0x3A8D220
	0x03A8D21C BL 0x1C16DFC
	0x03A8D220 MOV V0.16B, V8.16B
	0x03A8D224 MOV V1.16B, V9.16B
	0x03A8D228 MOV V2.16B, V10.16B
	0x03A8D22C MOV V3.16B, V11.16B
	0x03A8D230 MOV X0, X31
	0x03A8D234 BL 0x39E93E4
	0x03A8D238 LDRB W8, [X19 + 0x188]
	0x03A8D23C STR S0, [X19 + 0x1D0]
	0x03A8D240 STR S1, [X19 + 0x1D4]
	0x03A8D244 STR S2, [X19 + 0x1D8]
	0x03A8D248 STR S3, [X19 + 0x1DC]
	0x03A8D24C STRB W8, [X19 + 0x189]
	0x03A8D250 MOV X0, X19
	0x03A8D254 BL 0x3A9006C
	0x03A8D258 AND W8, W0, 0x1
	0x03A8D25C ADD X0, X31, 0x108
	0x03A8D260 MOV X1, X31
	0x03A8D264 STRB W8, [X19 + 0x173]
	0x03A8D268 BL 0x39B1DB4
	0x03A8D26C LDP X20, X19, [X31 + 0x190]
	0x03A8D270 LDP X22, X21, [X31 + 0x180]
	0x03A8D274 LDP X24, X23, [X31 + 0x170]
	0x03A8D278 LDP X26, X25, [X31 + 0x160]
	0x03A8D27C LDP X28, X27, [X31 + 0x150]
	0x03A8D280 LDP X29, X30, [X31 + 0x140]
	0x03A8D284 LDP D9, D8, [X31 + 0x130]
	0x03A8D288 LDP D11, D10, [X31 + 0x120]
	0x03A8D28C LDR V12, [X31 + 0x110]
	0x03A8D290 ADD X31, X31, 0x1A0
	0x03A8D294 RET
	0x03A8D298 BL 0x1C16F20
	0x03A8D29C BL 0x1C16F20
	0x03A8D2A0 BL 0x1C16F20
	0x03A8D2A4 BL 0x1C16F20
	0x03A8D2A8 BL 0x1C16F20
	0x03A8D2AC B 0x3A8D354
	0x03A8D2B0 B 0x3A8D354
	0x03A8D2B4 B 0x3A8D354
	0x03A8D2B8 B 0x3A8D354
	0x03A8D2BC B 0x3A8D354
	0x03A8D2C0 B 0x3A8D354

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1792
	014 Move X21, 0x958000
	015 Move [X31+1784], X0
	016 Move X20, 0x6CA000
	017 Move W8, [X21+863]
	018 Move X20, [X20+168]
	019 Move X19, X1
	020 Add X29, X31, 1136
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {117}
	025 Move X0, 0x6CD000
	026 Move X0, [X0+168]
	027 Call 0x1C17CF4
	028 Move X0, 0x6C6000
	029 Move X0, [X0+3360]
	030 Call 0x1C17CF4
	031 Move X0, 0x6CA000
	032 Move X0, [X0+2328]
	033 Call 0x1C17CF4
	034 Move X0, 0x669000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x6CD000
	038 Move X0, [X0+736]
	039 Call 0x1C17CF4
	040 Move X0, 0x6CD000
	041 Move X0, [X0+744]
	042 Call 0x1C17CF4
	043 Move X0, 0x6CD000
	044 Move X0, [X0+752]
	045 Call 0x1C17CF4
	046 Move X0, 0x6CD000
	047 Move X0, [X0+760]
	048 Call 0x1C17CF4
	049 Move X0, 0x6CC000
	050 Move X0, [X0+3880]
	051 Call 0x1C17CF4
	052 Move X0, 0x6CD000
	053 Move X0, [X0+704]
	054 Call 0x1C17CF4
	055 Move X0, 0x669000
	056 Move X0, [X0+1432]
	057 Call 0x1C17CF4
	058 Move X0, 0x692000
	059 Move X0, [X0+2200]
	060 Call 0x1C17CF4
	061 Move X0, 0x6CA000
	062 Move X0, [X0+168]
	063 Call 0x1C17CF4
	064 Move X0, 0x6C6000
	065 Move X0, [X0+3200]
	066 Call 0x1C17CF4
	067 Move X0, 0x669000
	068 Move X0, [X0+2760]
	069 Call 0x1C17CF4
	070 Move X0, 0x669000
	071 Move X0, [X0+1728]
	072 Call 0x1C17CF4
	073 Move X0, 0x692000
	074 Move X0, [X0+2216]
	075 Call 0x1C17CF4
	076 Move X0, 0x6CB000
	077 Move X0, [X0+3528]
	078 Call 0x1C17CF4
	079 Move X0, 0x6C6000
	080 Move X0, [X0+1280]
	081 Call 0x1C17CF4
	082 Move X0, 0x669000
	083 Move X0, [X0+3544]
	084 Call 0x1C17CF4
	085 Move X0, 0x6CD000
	086 Move X0, [X0+768]
	087 Call 0x1C17CF4
	088 Move X0, 0x6CD000
	089 Move X0, [X0+776]
	090 Call 0x1C17CF4
	091 Move X0, 0x6CD000
	092 Move X0, [X0+784]
	093 Call 0x1C17CF4
	094 Move X0, 0x6CD000
	095 Move X0, [X0+792]
	096 Call 0x1C17CF4
	097 Move X0, 0x6CD000
	098 Move X0, [X0+800]
	099 Call 0x1C17CF4
	100 Move X0, 0x6CD000
	101 Move X0, [X0+808]
	102 Call 0x1C17CF4
	103 Move X0, 0x6CD000
	104 Move X0, [X0+816]
	105 Call 0x1C17CF4
	106 Move X0, 0x6CD000
	107 Move X0, [X0+824]
	108 Call 0x1C17CF4
	109 Move X0, 0x6CD000
	110 Move X0, [X0+832]
	111 Call 0x1C17CF4
	112 Move X0, 0x6CD000
	113 Move X0, [X0+840]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X21+863], W8
	117 NotImplemented "Instruction MOVI not yet implemented."
	118 Add X0, X31, 1200
	119 Move W2, 528
	120 Move W1, W31
	121 Move [X31+1776], W31
	122 Move [X31+1768], X31
	123 Move [X31+1760], X31
	124 Move [X29+592], V0
	125 Move [X29+600], V0
	126 Call 0x3EB2B10
	127 NotImplemented "Instruction MOVI not yet implemented."
	128 Add X0, X31, 584
	129 Move W2, 528
	130 Move W1, W31
	131 Move [X31+1184], W31
	132 Move [X29+16], V0
	133 Move [X29+24], V0
	134 Move [X29], V0
	135 Move [X31+1128], W31
	136 Move [X31+1120], X31
	137 Move [X31+1112], X31
	138 Call 0x3EB2B10
	139 Move X1, [X20]
	140 Move W0, 2
	141 Call 0x2236BC0, X0
	142 Move X2, X0
	143 Add X0, X31, 1776
	144 Move X1, X31
	145 Move X3, X31
	146 Call ProfilingScope..ctor, X0, X1, X2
	147 Compare X19, 0
	148 JumpIfEqual {1239}
	149 Move X8, 0x6CA000
	150 Move X8, [X8+2328]
	151 Move X2, [X8]
	152 Add X1, X31, 1768
	153 Move X0, X19
	154 Call 0x21A5990, X0, X1
	155 Move X8, 0x669000
	156 Move X8, [X8+1432]
	157 Move X20, [X31+1768]
	158 Move X0, [X8]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Move X0, X20
	164 Move X1, X31
	165 Move X2, X31
	166 Call Object.op_Inequality, X0, X1
	167 Move W8, W0
	168 Move X0, [X31+1768]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {177}
	173 Compare X0, 0
	174 JumpIfEqual {1254}
	175 Move W8, [X0+44]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare X0, 0
	178 JumpIfEqual {201}
	179 Move X1, X31
	180 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	181 Move X22, X0
	182 Compare X0, 0
	183 JumpIfEqual {202}
	184 Move X0, X22
	185 Move W1, W31
	186 Move X2, X31
	187 Call ScriptableRenderer.SupportsCameraStackingType, X0, X1
	188 Move W8, W0
	189 Move X0, [X31+1768]
	190 Move X20, X31
	191 Compare X0, 0
	192 JumpIfEqual {203}
	193 Xor W8, W8, 1
	194 Move TEMP, X8
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {203}
	198 Move X1, X31
	199 Call UniversalAdditionalCameraData.get_cameraStack, X0
	200 Move X20, X0
	201 Move X22, X31
	202 Move X20, X31
	203 Move X8, 0x668000
	204 Move X8, [X8+1432]
	205 Move X21, [X31+1768]
	206 Move X0, [X8]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move X0, X21
	212 Move X1, X31
	213 Move X2, X31
	214 Call Object.op_Inequality, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {225}
	219 Move X8, [X31+1768]
	220 Compare X8, 0
	221 JumpIfEqual {1280}
	222 Move W8, [X8+76]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSET not yet implemented."
	225 Move W21, W31
	226 Move X8, 0x691000
	227 Move X8, [X8+2216]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Call UniversalRenderPipeline.HDROutputForMainDisplayIsActive
	234 Move [X31+36], W0
	235 Call UniversalRenderPipeline.get_asset
	236 Compare X0, 0
	237 JumpIfEqual {1240}
	238 Move X8, [X0+64]
	239 Compare X8, 0
	240 JumpIfEqual {1241}
	241 Compare X20, 0
	242 JumpIfEqual {595}
	243 Move X0, [X31+1768]
	244 Compare X0, 0
	245 JumpIfEqual {253}
	246 Move X1, X31
	247 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	248 Compare X0, 0
	249 JumpIfEqual {1281}
	250 Move X1, X31
	251 Call "il2cpp_vm_object_is_inst", X0
	252 Move X23, X0
	253 Move X23, X31
	254 Move X8, 0x691000
	255 Move X8, [X8+2216]
	256 Move X0, [X8]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {264}
	260 Call 0x1C17DFC
	261 Move X8, 0x691000
	262 Move X8, [X8+2216]
	263 Move X0, [X8]
	264 Move X8, [X0+184]
	265 Move [X8], W31
	266 Move W8, [X20+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move W28, W31
	269 Move W24, W31
	270 Move TEMP, 0
	271 Not TEMP
	272 Move W8, TEMP
	273 Move [X31+52], W8
	274 Move X8, 0x6CC000
	275 Move X8, [X8+704]
	276 Move X2, [X8]
	277 Move X0, X20
	278 Move W1, W24
	279 Call List`1<Object>.get_Item, X0, X1
	280 Move X8, 0x668000
	281 Move X8, [X8+1432]
	282 Move X25, X0
	283 Move X0, [X8]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X25
	289 Move X1, X31
	290 Move X2, X31
	291 Call Object.op_Equality, X0, X1
	292 Move TEMP, X0
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {297}
	296 Move W28, 1
	297 Compare X25, 0
	298 JumpIfEqual {1222}
	299 Move X0, X25
	300 Move X1, X31
	301 Call Behaviour.get_isActiveAndEnabled, X0
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {583}
	306 Move X8, 0x6C9000
	307 Move X8, [X8+2328]
	308 Move X2, [X8]
	309 Add X1, X31, 1760
	310 Move X0, X25
	311 Call 0x21A5990, X0, X1
	312 Move X0, [X31+1760]
	313 Compare X0, 0
	314 JumpIfEqual {322}
	315 Move X1, X31
	316 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	317 Compare X0, 0
	318 JumpIfEqual {1224}
	319 Move X1, X31
	320 Call "il2cpp_vm_object_is_inst", X0
	321 Move X27, X0
	322 Move X27, X31
	323 Move X8, 0x668000
	324 Move X8, [X8+1728]
	325 Move X0, [X8]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X27
	331 Move X1, X23
	332 Move X2, X31
	333 Call Type.op_Inequality, X0, X1
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfNotEqual {419}
	338 Move X8, 0x668000
	339 Move X8, [X8+2760]
	340 Move X0, [X8]
	341 Move W1, 9
	342 Call 0x1C17D6C
	343 Move X26, X0
	344 Compare X0, 0
	345 JumpIfEqual {1234}
	346 Move W8, [X26+24]
	347 Compare W8, 0
	348 JumpIfEqual {1233}
	349 Move X8, 0x6CC000
	350 Move X8, [X8+768]
	351 Move X8, [X8]
	352 Move [X26+32], X8
	353 Move X0, X25
	354 Move X1, X31
	355 Call Object.get_name, X0
	356 Move W8, [X26+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move [X26+40], X0
	360 Move X8, 0x6CC000
	361 Move X8, [X8+840]
	362 Move X8, [X8]
	363 Move [X26+48], X8
	364 Compare X27, 0
	365 JumpIfEqual {1231}
	366 Move X8, [X27]
	367 Move X9, [X8+424]
	368 Move X1, [X8+432]
	369 Move X0, X27
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move W8, [X26+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move [X26+56], X0
	375 Move X8, 0x6CC000
	376 Move X8, [X8+776]
	377 Move X8, [X8]
	378 Move [X26+64], X8
	379 Move X0, X19
	380 Move X1, X31
	381 Call Object.get_name, X0
	382 Move W8, [X26+24]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move [X26+72], X0
	386 Move X8, 0x6CC000
	387 Move X8, [X8+816]
	388 Move X8, [X8]
	389 Move [X26+80], X8
	390 Compare X23, 0
	391 JumpIfEqual {1228}
	392 Move X8, [X23]
	393 Move X9, [X8+424]
	394 Move X1, [X8+432]
	395 Move X0, X23
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move W8, [X26+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move [X26+88], X0
	401 Move X8, 0x6CC000
	402 Move X8, [X8+800]
	403 Move X8, [X8]
	404 Move [X26+96], X8
	405 Move X0, X26
	406 Move X1, X31
	407 Call String.Concat, X0
	408 Move X8, 0x668000
	409 Move X8, [X8+2600]
	410 Move X25, X0
	411 Move X0, [X8]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move X0, X25
	417 Move X1, X31
	418 Call Debug.LogWarning, X0
	419 Move X0, [X31+1760]
	420 Compare X0, 0
	421 JumpIfEqual {1236}
	422 Move X1, X31
	423 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	424 Compare X0, 0
	425 JumpIfEqual {1235}
	426 Move X8, [X0]
	427 Move X9, [X8+392]
	428 Move X1, [X8+400]
	429 NotImplemented "Instruction BLR not yet implemented."
	430 Move TEMP, X0
	431 And TEMP, TEMP, 2
	432 Compare TEMP, 2
	433 JumpIfEqual {493}
	434 Move X8, 0x668000
	435 Move X8, [X8+2760]
	436 Move X0, [X8]
	437 Move W1, 5
	438 Call 0x1C17D6C
	439 Move X26, X0
	440 Compare X0, 0
	441 JumpIfEqual {1253}
	442 Move W8, [X26+24]
	443 Compare W8, 0
	444 JumpIfEqual {1252}
	445 Move X8, 0x6CC000
	446 Move X8, [X8+808]
	447 Move X8, [X8]
	448 Move [X26+32], X8
	449 Move X0, X25
	450 Move X1, X31
	451 Call Object.get_name, X0
	452 Move W8, [X26+24]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move [X26+40], X0
	456 Move X8, 0x6CC000
	457 Move X8, [X8+792]
	458 Move X8, [X8]
	459 Move [X26+48], X8
	460 Compare X22, 0
	461 JumpIfEqual {1250}
	462 Move X0, X22
	463 Move X1, X31
	464 Call "il2cpp_vm_object_is_inst", X0
	465 Compare X0, 0
	466 JumpIfEqual {1249}
	467 Move X8, [X0]
	468 Move X9, [X8+424]
	469 Move X1, [X8+432]
	470 NotImplemented "Instruction BLR not yet implemented."
	471 Move W8, [X26+24]
	472 NotImplemented "Instruction CMP not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move [X26+56], X0
	475 Move X8, 0x6CC000
	476 Move X8, [X8+832]
	477 Move X8, [X8]
	478 Move [X26+64], X8
	479 Move X0, X26
	480 Move X1, X31
	481 Call String.Concat, X0
	482 Move X8, 0x668000
	483 Move X8, [X8+2600]
	484 Move X25, X0
	485 Move X0, [X8]
	486 Move W8, [X0+224]
	487 Compare W8, 0
	488 JumpIfNotEqual {490}
	489 Call 0x1C17DFC
	490 Move X0, X25
	491 Move X1, X31
	492 Call Debug.LogWarning, X0
	493 Move X8, 0x668000
	494 Move X8, [X8+1432]
	495 Move X26, [X31+1760]
	496 Move X0, [X8]
	497 Move W8, [X0+224]
	498 Compare W8, 0
	499 JumpIfNotEqual {501}
	500 Call 0x1C17DFC
	501 Move X0, X26
	502 Move X1, X31
	503 Move X2, X31
	504 Call Object.op_Equality, X0, X1
	505 Move TEMP, X0
	506 And TEMP, TEMP, 1
	507 Compare TEMP, 1
	508 JumpIfEqual {542}
	509 Move X8, [X31+1760]
	510 Compare X8, 0
	511 JumpIfEqual {1282}
	512 Move W8, [X8+44]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X8, 0x691000
	515 Move X8, [X8+2216]
	516 Move X0, [X8]
	517 Move W8, [X0+224]
	518 Compare W8, 0
	519 JumpIfNotEqual {524}
	520 Call 0x1C17DFC
	521 Move X8, 0x691000
	522 Move X8, [X8+2216]
	523 Move X0, [X8]
	524 Move X8, [X0+184]
	525 Move W25, [X8]
	526 Call UniversalRenderPipeline.CheckPostProcessForDepth
	527 Move X8, 0x691000
	528 Move X8, [X8+2216]
	529 And W9, W0, 1
	530 Or W9, W25, W9
	531 Move X8, [X8]
	532 Move X8, [X8+184]
	533 Move [X8], W9
	534 Move X8, [X31+1760]
	535 Compare X8, 0
	536 JumpIfEqual {1309}
	537 Move W8, [X8+76]
	538 Move [X31+52], W24
	539 NotImplemented "Instruction CMP not yet implemented."
	540 NotImplemented "Instruction CSET not yet implemented."
	541 Or W21, W21, W8
	542 Move X0, X25
	543 Move X1, X31
	544 Call Object.get_name, X0
	545 Move X8, [X31+1760]
	546 Compare X8, 0
	547 JumpIfEqual {1255}
	548 Move X9, 0x6CC000
	549 Move W8, [X8+44]
	550 Move X9, [X9+168]
	551 Move X25, X0
	552 Move [X31+56], W8
	553 Move X0, [X9]
	554 Add X1, X31, 56
	555 Call 0x1C17E04
	556 Move X1, X0
	557 Move X8, 0x6CC000
	558 Move X8, [X8+824]
	559 Move X0, [X8]
	560 Move X2, X31
	561 Call String.Format, X0, X1
	562 Move X8, 0x6CC000
	563 Move X8, [X8+784]
	564 Move X3, X0
	565 Move X0, [X8]
	566 Move X8, 0x668000
	567 Move X8, [X8+3544]
	568 Move X2, [X8]
	569 Move X1, X25
	570 Move X4, X31
	571 Call String.Concat, X0, X1, X2, X3
	572 Move X8, 0x668000
	573 Move X8, [X8+2600]
	574 Move X25, X0
	575 Move X0, [X8]
	576 Move W8, [X0+224]
	577 Compare W8, 0
	578 JumpIfNotEqual {580}
	579 Call 0x1C17DFC
	580 Move X0, X25
	581 Move X1, X31
	582 Call Debug.LogWarning, X0
	583 Move W8, [X20+24]
	584 Add W24, W24, 1
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Move TEMP, X28
	587 And TEMP, TEMP, 1
	588 Compare TEMP, 1
	589 JumpIfNotEqual {599}
	590 Move X0, [X31+1768]
	591 Compare X0, 0
	592 JumpIfEqual {1310}
	593 Move X1, X31
	594 Call UniversalAdditionalCameraData.UpdateCameraStack, X0
	595 Move TEMP, 0
	596 Not TEMP
	597 Move W8, TEMP
	598 Move [X31+52], W8
	599 Move X0, X31
	600 Call SystemInfo.get_graphicsDeviceType
	601 Move X9, 0x6C5000
	602 Move X8, [X31+1768]
	603 Move X9, [X9+1280]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 NotImplemented "Instruction CSET not yet implemented."
	606 Compare X8, 0
	607 JumpIfEqual {609}
	608 Move W23, [X8+91]
	609 Move W23, 1
	610 Move X0, [X9]
	611 Move W8, [X0+224]
	612 Compare W8, 0
	613 JumpIfNotEqual {615}
	614 Call 0x1C17DFC
	615 Move X0, X31
	616 Call XRSystem.NewLayout
	617 Move X24, X0
	618 Compare X0, 0
	619 JumpIfEqual {1242}
	620 NotImplemented "Instruction CMP not yet implemented."
	621 NotImplemented "Instruction CSET not yet implemented."
	622 Move X0, X24
	623 Move X1, X19
	624 Move X3, X31
	625 Call XRLayout.AddCamera, X0, X1, X2
	626 Move X0, [X24+16]
	627 Compare X0, 0
	628 JumpIfEqual {1243}
	629 Move [X31+40], X24
	630 Move X8, 0x6CC000
	631 Move X8, [X8+760]
	632 Move X1, [X8]
	633 Add X8, X31, 56
	634 Add X23, X31, 56
	635 Call List`1<ValueTuple`2<Object, Object>>.GetEnumerator, X0
	636 Move [X31+32], W31
	637 Move X27, 0x691000
	638 Move X27, [X27+2200]
	639 NotImplemented "Instruction LDUR not yet implemented."
	640 NotImplemented "Instruction LDUR not yet implemented."
	641 Add X8, X31, 1200
	642 And W28, W21, W22
	643 Add X21, X23, 216
	644 Add X8, X8, 216
	645 Move [X29+592], V0
	646 Move [X29+600], V1
	647 Move [X31+24], X8
	648 Move X8, 0x6CC000
	649 Move X8, [X8+744]
	650 Move X1, [X8]
	651 Add X0, X31, 1728
	652 Call Enumerator<ValueTuple`2<Object, Object>>.MoveNext, X0
	653 Move TEMP, X0
	654 And TEMP, TEMP, 1
	655 Compare TEMP, 1
	656 JumpIfNotEqual {1129}
	657 Move X23, [X31+1752]
	658 Compare X23, 0
	659 JumpIfEqual {1216}
	660 Move X0, X23
	661 Move X1, X31
	662 Call XRPass.get_enabled, X0
	663 Move TEMP, X0
	664 And TEMP, TEMP, 1
	665 Compare TEMP, 1
	666 JumpIfNotEqual {679}
	667 Move X8, 0x691000
	668 Move X8, [X8+2216]
	669 Move X0, [X8]
	670 Move W8, [X0+224]
	671 Compare W8, 0
	672 JumpIfNotEqual {674}
	673 Call 0x1C17DFC
	674 Move X0, X19
	675 Move X1, X23
	676 Call UniversalRenderPipeline.UpdateCameraStereoMatrices, X0, X1
	677 Move W8, 1
	678 Move [X31+32], W8
	679 Move X0, [X27]
	680 Move W8, [X0+224]
	681 Compare W8, 0
	682 JumpIfNotEqual {685}
	683 Call 0x1C17DFC
	684 Move X0, [X27]
	685 Move X8, [X0+184]
	686 Move X2, [X8+16]
	687 Move [X31+56], W31
	688 Add X0, X31, 56
	689 Move X1, X31
	690 Move X3, X31
	691 Call ProfilingScope..ctor, X0, X1, X2
	692 Move W8, [X31+56]
	693 Move X0, [X31+1784]
	694 Move [X31+1128], W8
	695 Move X1, X19
	696 Move X2, X31
	697 Call RenderPipeline.BeginCameraRendering, X0, X1
	698 Move X24, X31
	699 Move W22, 31
	700 Add X0, X31, 1128
	701 Move X1, X31
	702 Call ProfilingScope.Dispose, X0
	703 Compare X24, 0
	704 JumpIfNotEqual {1214}
	705 NotImplemented "Instruction CMP not yet implemented."
	706 Compare W22, 0
	707 JumpIfNotEqual {1126}
	708 Move X8, 0x691000
	709 Move X8, [X8+2216]
	710 Move X24, [X31+1768]
	711 Move X0, [X8]
	712 Move W8, [X0+224]
	713 Compare W8, 0
	714 JumpIfNotEqual {716}
	715 Call 0x1C17DFC
	716 Move X0, X19
	717 Move X1, X24
	718 Call UniversalRenderPipeline.UpdateVolumeFramework, X0, X1
	719 Move X1, [X31+1768]
	720 Add X3, X31, 1200
	721 Move X0, X19
	722 Move W2, W31
	723 Call UniversalRenderPipeline.InitializeCameraData, X0, X1, X2, X3
	724 Add X0, X31, 56
	725 Add X1, X31, 1200
	726 Move W2, 528
	727 Call 0x3EB2AC0
	728 Move W8, [X21+48]
	729 Move V2, [X21+16]
	730 Move V0, [X21+32]
	731 Move V1, [X21]
	732 Move [X31+1184], W8
	733 Move [X29+16], V2
	734 Move [X29+24], V0
	735 Move [X29], V1
	736 Move X0, X23
	737 Move X1, X31
	738 Call XRPass.get_enabled, X0
	739 Move TEMP, X0
	740 And TEMP, TEMP, 1
	741 Compare TEMP, 1
	742 JumpIfNotEqual {773}
	743 Move X8, 0x691000
	744 Move X8, [X8+2216]
	745 Move [X31+1576], X23
	746 Move [X31+1120], X23
	747 Move X0, [X8]
	748 Move W8, [X0+224]
	749 Compare W8, 0
	750 JumpIfNotEqual {752}
	751 Call 0x1C17DFC
	752 Add X0, X31, 1200
	753 Add X1, X31, 1120
	754 Call UniversalRenderPipeline.UpdateCameraData, X0, X1
	755 Move X1, [X31+1576]
	756 Move X0, [X31+40]
	757 Move X2, X19
	758 Move X3, X31
	759 Call XRLayout.ReconfigurePass, X0, X1, X2
	760 Add X0, X31, 1200
	761 Call CameraData.get_xrUniversal, X0
	762 Move X8, 0x6CA000
	763 Move X8, [X8+3528]
	764 Move X24, X0
	765 Move X0, [X8]
	766 Move W8, [X0+224]
	767 Compare W8, 0
	768 JumpIfNotEqual {770}
	769 Call 0x1C17DFC
	770 Move X0, X19
	771 Move X1, X24
	772 Call XRSystemUniversal.BeginLateLatching, X0, X1
	773 Move X8, 0x691000
	774 Move X8, [X8+2216]
	775 Move X24, [X31+1768]
	776 Move X0, [X8]
	777 Move W8, [X0+224]
	778 Compare W8, 0
	779 JumpIfNotEqual {781}
	780 Call 0x1C17DFC
	781 Move W8, [X31+52]
	782 Add W31, W8, 1
	783 NotImplemented "Instruction CSET not yet implemented."
	784 Add X3, X31, 1200
	785 Move X0, X19
	786 Move X1, X24
	787 Call UniversalRenderPipeline.InitializeAdditionalCameraData, X0, X1, X2, X3
	788 Move X8, 0x691000
	789 Move X8, [X8+2216]
	790 Move W9, [X31+1569]
	791 Move X8, [X8]
	792 Move X8, [X8+184]
	793 Move W8, [X8]
	794 Or W8, W8, W9
	795 Move [X31+1569], W8
	796 Move X0, X23
	797 Move X1, X31
	798 Call XRPass.get_enabled, X0
	799 Move W24, [X31+36]
	800 Move TEMP, X0
	801 And TEMP, TEMP, 1
	802 Compare TEMP, 1
	803 JumpIfNotEqual {808}
	804 Move X0, X23
	805 Move X1, X31
	806 Call XRPass.get_isHDRDisplayOutputActive, X0
	807 Move W24, W0
	808 Move X8, 0x691000
	809 Move X8, [X8+2216]
	810 Move X0, [X8]
	811 Move W8, [X0+224]
	812 Compare W8, 0
	813 JumpIfNotEqual {815}
	814 Call 0x1C17DFC
	815 Call UniversalRenderPipeline.get_asset
	816 Compare X0, 0
	817 JumpIfEqual {1219}
	818 Move W8, [X0+85]
	819 NotImplemented "Instruction CMP not yet implemented."
	820 NotImplemented "Instruction CSET not yet implemented."
	821 And W8, W24, W8
	822 Move TEMP, X8
	823 And TEMP, TEMP, 1
	824 Compare TEMP, 1
	825 JumpIfNotEqual {855}
	826 Move X0, X19
	827 Move X1, X31
	828 Call Camera.get_targetTexture, X0
	829 Move X8, 0x668000
	830 Move X8, [X8+1432]
	831 Move X24, X0
	832 Move X0, [X8]
	833 Move W8, [X0+224]
	834 Compare W8, 0
	835 JumpIfNotEqual {837}
	836 Call 0x1C17DFC
	837 Move X0, X24
	838 Move X1, X31
	839 Move X2, X31
	840 Call Object.op_Equality, X0, X1
	841 Move TEMP, X0
	842 And TEMP, TEMP, 1
	843 Compare TEMP, 1
	844 JumpIfNotEqual {855}
	845 Move X0, X19
	846 Move X1, X31
	847 Call Camera.get_cameraType, X0
	848 NotImplemented "Instruction CMP not yet implemented."
	849 Move X0, X19
	850 Move X1, X31
	851 Call Camera.get_cameraType, X0
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Move W8, [X31+1566]
	854 And W29, W8, 1
	855 Move W29, W31
	856 Move X8, 0x691000
	857 Move X8, [X8+2216]
	858 Move [X31+1593], W28
	859 Move [X31+1571], W29
	860 Move X24, [X31+1784]
	861 Move X0, [X8]
	862 Move W8, [X0+224]
	863 Compare W8, 0
	864 JumpIfNotEqual {866}
	865 Call 0x1C17DFC
	866 Add X1, X31, 1200
	867 Move X0, X24
	868 Call UniversalRenderPipeline.RenderSingleCamera, X0, X1
	869 Move X0, [X27]
	870 Move W8, [X0+224]
	871 Compare W8, 0
	872 JumpIfNotEqual {875}
	873 Call 0x1C17DFC
	874 Move X0, [X27]
	875 Move X8, [X0+184]
	876 Move X2, [X8+24]
	877 Move [X31+56], W31
	878 Add X0, X31, 56
	879 Move X1, X31
	880 Move X3, X31
	881 Call ProfilingScope..ctor, X0, X1, X2
	882 Move W8, [X31+56]
	883 Move X0, [X31+1784]
	884 Move [X31+1128], W8
	885 Move X1, X19
	886 Move X2, X31
	887 Call RenderPipeline.EndCameraRendering, X0, X1
	888 Move X24, X31
	889 Move W22, 37
	890 Add X0, X31, 1128
	891 Move X1, X31
	892 Call ProfilingScope.Dispose, X0
	893 Compare X24, 0
	894 JumpIfNotEqual {1217}
	895 NotImplemented "Instruction CMP not yet implemented."
	896 Compare W22, 0
	897 JumpIfNotEqual {1126}
	898 Move X0, [X31+1576]
	899 Compare X0, 0
	900 JumpIfEqual {1220}
	901 Move X1, X31
	902 Call XRPass.get_enabled, X0
	903 Move TEMP, X0
	904 And TEMP, TEMP, 1
	905 Compare TEMP, 1
	906 JumpIfNotEqual {920}
	907 Add X0, X31, 1200
	908 Call CameraData.get_xrUniversal, X0
	909 Move X8, 0x6CA000
	910 Move X8, [X8+3528]
	911 Move X24, X0
	912 Move X0, [X8]
	913 Move W8, [X0+224]
	914 Compare W8, 0
	915 JumpIfNotEqual {917}
	916 Call 0x1C17DFC
	917 Move X0, X19
	918 Move X1, X24
	919 Call XRSystemUniversal.EndLateLatching, X0, X1
	920 Move W8, [X31+52]
	921 Add W31, W8, 1
	922 Compare X20, 0
	923 JumpIfEqual {1223}
	924 Move W8, [X20+24]
	925 NotImplemented "Instruction CMP not yet implemented."
	926 Move W24, W31
	927 Move X8, 0x6CC000
	928 Move X8, [X8+704]
	929 Move X2, [X8]
	930 Move X0, X20
	931 Move W1, W24
	932 Call List`1<Object>.get_Item, X0, X1
	933 Move X25, X0
	934 Compare X0, 0
	935 JumpIfEqual {1208}
	936 Move X0, X25
	937 Move X1, X31
	938 Call Behaviour.get_isActiveAndEnabled, X0
	939 Move TEMP, X0
	940 And TEMP, TEMP, 1
	941 Compare TEMP, 1
	942 JumpIfNotEqual {1073}
	943 Move X8, 0x6C9000
	944 Move X8, [X8+2328]
	945 Move X2, [X8]
	946 Add X1, X31, 1112
	947 Move X0, X25
	948 Call 0x21A5990, X0, X1
	949 Move X8, 0x668000
	950 Move X8, [X8+1432]
	951 Move X26, [X31+1112]
	952 Move X0, [X8]
	953 Move W8, [X0+224]
	954 Compare W8, 0
	955 JumpIfNotEqual {957}
	956 Call 0x1C17DFC
	957 Move X0, X26
	958 Move X1, X31
	959 Move X2, X31
	960 Call Object.op_Inequality, X0, X1
	961 Move TEMP, X0
	962 And TEMP, TEMP, 1
	963 Compare TEMP, 1
	964 JumpIfNotEqual {1073}
	965 Add X0, X31, 584
	966 Add X1, X31, 1200
	967 Move W2, 520
	968 Call 0x3EB2AC0
	969 Move X0, [X31+1112]
	970 Move [X31+776], X25
	971 Move [X31+1104], X19
	972 Compare X0, 0
	973 JumpIfEqual {1209}
	974 Move X1, X31
	975 Call UniversalAdditionalCameraData.get_camera, X0
	976 Move X8, 0x691000
	977 Move X8, [X8+2216]
	978 Move X26, X0
	979 Move X0, [X8]
	980 Move W8, [X0+224]
	981 Compare W8, 0
	982 JumpIfNotEqual {984}
	983 Call 0x1C17DFC
	984 Move X0, X26
	985 Move X1, X23
	986 Call UniversalRenderPipeline.UpdateCameraStereoMatrices, X0, X1
	987 Move X0, [X27]
	988 Move W8, [X0+224]
	989 Compare W8, 0
	990 JumpIfNotEqual {993}
	991 Call 0x1C17DFC
	992 Move X0, [X27]
	993 Move X8, [X0+184]
	994 Move X2, [X8+16]
	995 Move [X31+56], W31
	996 Add X0, X31, 56
	997 Move X1, X31
	998 Move X3, X31
	999 Call ProfilingScope..ctor, X0, X1, X2
	1000 Move W8, [X31+56]
	1001 Move X0, [X31+1784]
	1002 Move [X31+1128], W8
	1003 Move X1, X25
	1004 Move X2, X31
	1005 Call RenderPipeline.BeginCameraRendering, X0, X1
	1006 Move X26, X31
	1007 Move W22, 43
	1008 Add X0, X31, 1128
	1009 Move X1, X31
	1010 Call ProfilingScope.Dispose, X0
	1011 Compare X26, 0
	1012 JumpIfNotEqual {1210}
	1013 NotImplemented "Instruction CMP not yet implemented."
	1014 Compare W22, 0
	1015 JumpIfNotEqual {1126}
	1016 Move X8, 0x691000
	1017 Move X8, [X8+2216]
	1018 Move X26, [X31+1112]
	1019 Move X0, [X8]
	1020 Move W8, [X0+224]
	1021 Compare W8, 0
	1022 JumpIfNotEqual {1024}
	1023 Call 0x1C17DFC
	1024 Move X0, X25
	1025 Move X1, X26
	1026 Call UniversalRenderPipeline.UpdateVolumeFramework, X0, X1
	1027 Move W8, [X31+52]
	1028 Move X1, [X31+1112]
	1029 NotImplemented "Instruction CMP not yet implemented."
	1030 NotImplemented "Instruction CSET not yet implemented."
	1031 Add X3, X31, 584
	1032 Move X0, X25
	1033 Call UniversalRenderPipeline.InitializeAdditionalCameraData, X0, X1, X2, X3
	1034 Move X1, [X31+960]
	1035 Move [X31+977], W28
	1036 Move [X31+955], W29
	1037 Move X0, [X31+40]
	1038 Move X2, X25
	1039 Move X3, X31
	1040 Call XRLayout.ReconfigurePass, X0, X1, X2
	1041 Move X0, [X31+1784]
	1042 Add X1, X31, 584
	1043 Call UniversalRenderPipeline.RenderSingleCamera, X0, X1
	1044 Move X0, [X27]
	1045 Move W8, [X0+224]
	1046 Compare W8, 0
	1047 JumpIfNotEqual {1050}
	1048 Call 0x1C17DFC
	1049 Move X0, [X27]
	1050 Move X8, [X0+184]
	1051 Move X2, [X8+24]
	1052 Move [X31+56], W31
	1053 Add X0, X31, 56
	1054 Move X1, X31
	1055 Move X3, X31
	1056 Call ProfilingScope..ctor, X0, X1, X2
	1057 Move W8, [X31+56]
	1058 Move X0, [X31+1784]
	1059 Move [X31+1128], W8
	1060 Move X1, X25
	1061 Move X2, X31
	1062 Call RenderPipeline.EndCameraRendering, X0, X1
	1063 Move X25, X31
	1064 Move W22, 42
	1065 Add X0, X31, 1128
	1066 Move X1, X31
	1067 Call ProfilingScope.Dispose, X0
	1068 Compare X25, 0
	1069 JumpIfNotEqual {1212}
	1070 NotImplemented "Instruction CMP not yet implemented."
	1071 Compare W22, 0
	1072 JumpIfNotEqual {1126}
	1073 Move W8, [X20+24]
	1074 Add W24, W24, 1
	1075 NotImplemented "Instruction CMP not yet implemented."
	1076 NotImplemented "Instruction CMP not yet implemented."
	1077 Move X26, X0
	1078 Move [X31+16], X1
	1079 Move X0, X26
	1080 Call 0x3EB2AD0
	1081 Move X25, [X0]
	1082 Call 0x3EB2AE0
	1083 Move W22, W31
	1084 NotImplemented "Instruction CMP not yet implemented."
	1085 Move [X31+8], X0
	1086 Move [X31+16], X1
	1087 Move X0, [X31+8]
	1088 Call 0x3EB2AD0
	1089 Move X26, [X0]
	1090 Call 0x3EB2AE0
	1091 Move W22, W31
	1092 Move X0, [X31+1576]
	1093 Compare X0, 0
	1094 JumpIfEqual {1221}
	1095 Move X1, X31
	1096 Call XRPass.get_enabled, X0
	1097 Add X29, X31, 1136
	1098 Move TEMP, X0
	1099 And TEMP, TEMP, 1
	1100 Compare TEMP, 1
	1101 JumpIfNotEqual {648}
	1102 Move W8, [X31+1184]
	1103 Move V1, [X29+16]
	1104 Move V0, [X29+32]
	1105 Move V2, [X29]
	1106 Move X9, [X31+24]
	1107 Move [X9+48], W8
	1108 Move [X9+16], V1
	1109 Move [X9+24], V0
	1110 Move [X9], V2
	1111 NotImplemented "Instruction CMP not yet implemented."
	1112 Move X26, X0
	1113 Move X0, X26
	1114 Call 0x3EB2AD0
	1115 Move X24, [X0]
	1116 Call 0x3EB2AE0
	1117 Move W22, W31
	1118 NotImplemented "Instruction CMP not yet implemented."
	1119 Move X26, X0
	1120 Move X0, X26
	1121 Call 0x3EB2AD0
	1122 Move X24, [X0]
	1123 Call 0x3EB2AE0
	1124 Move W22, W31
	1125 Add X29, X31, 1136
	1126 Move X27, 0x6C5000
	1127 Move X27, [X27+1280]
	1128 Move X23, X31
	1129 Move X27, 0x6C5000
	1130 Move X27, [X27+1280]
	1131 Move X23, X31
	1132 Move W22, 44
	1133 Move X8, 0x6CC000
	1134 Move X8, [X8+736]
	1135 Move X1, [X8]
	1136 Add X0, X31, 1728
	1137 Call Enumerator<ValueTuple`2<Object, Object>>.Dispose, X0
	1138 Compare X23, 0
	1139 JumpIfNotEqual {1244}
	1140 NotImplemented "Instruction CMP not yet implemented."
	1141 Compare W22, 0
	1142 JumpIfNotEqual {1191}
	1143 Move W8, [X31+32]
	1144 Move TEMP, X8
	1145 And TEMP, TEMP, 1
	1146 Compare TEMP, 1
	1147 JumpIfNotEqual {1184}
	1148 Move X8, 0x6C5000
	1149 Move X8, [X8+3360]
	1150 Move X0, [X8]
	1151 Move W8, [X0+224]
	1152 Compare W8, 0
	1153 JumpIfNotEqual {1155}
	1154 Call 0x1C17DFC
	1155 Move X0, X31
	1156 Call CommandBufferPool.Get
	1157 Move X20, X0
	1158 Move X0, [X27]
	1159 Move W8, [X0+224]
	1160 Compare W8, 0
	1161 JumpIfNotEqual {1163}
	1162 Call 0x1C17DFC
	1163 Move X0, X20
	1164 Move X1, X19
	1165 Move X2, X31
	1166 Call XRSystem.RenderMirrorView, X0, X1
	1167 Move X8, 0x6C5000
	1168 Move X8, [X8+3200]
	1169 Move X0, [X8]
	1170 Move W8, [X0+224]
	1171 Compare W8, 0
	1172 JumpIfNotEqual {1174}
	1173 Call 0x1C17DFC
	1174 Add X0, X31, 1784
	1175 Move X1, X20
	1176 Move X2, X31
	1177 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	1178 Add X0, X31, 1784
	1179 Move X1, X31
	1180 Call ScriptableRenderContext.Submit, X0
	1181 Move X0, X20
	1182 Move X1, X31
	1183 Call CommandBufferPool.Release, X0
	1184 Move X0, [X27]
	1185 Move W8, [X0+224]
	1186 Compare W8, 0
	1187 JumpIfNotEqual {1189}
	1188 Call 0x1C17DFC
	1189 Move X0, X31
	1190 Call XRSystem.EndLayout
	1191 Add X0, X31, 1776
	1192 Move X1, X31
	1193 Call ProfilingScope.Dispose, X0
	1194 Add X31, X31, 1792
	1195 Move X20, [X31+80]
	1196 Move X19, [X31+88]
	1197 Move X22, [X31+64]
	1198 Move X21, [X31+72]
	1199 Move X24, [X31+48]
	1200 Move X23, [X31+56]
	1201 Move X26, [X31+32]
	1202 Move X25, [X31+40]
	1203 Move X28, [X31+16]
	1204 Move X27, [X31+24]
	1205 Move X29, [X31+96]
	1206 Move X30, [X31+104]
	1207 Return 
	1208 Call 0x1C17F20
	1209 Call 0x1C17F20
	1210 Move X0, X26
	1211 Call 0x1C17F18
	1212 Move X0, X25
	1213 Call 0x1C17F18
	1214 Move X0, X24
	1215 Call 0x1C17F18
	1216 Call 0x1C17F20
	1217 Move X0, X24
	1218 Call 0x1C17F18
	1219 Call 0x1C17F20
	1220 Call 0x1C17F20
	1221 Call 0x1C17F20
	1222 Call 0x1C17F20
	1223 Call 0x1C17F20
	1224 Call 0x1C17F20
	1225 Call 0x1C17F28
	1226 Call 0x1C17F28
	1227 Call 0x1C17F28
	1228 Call 0x1C17F20
	1229 Call 0x1C17F28
	1230 Call 0x1C17F28
	1231 Call 0x1C17F20
	1232 Call 0x1C17F28
	1233 Call 0x1C17F28
	1234 Call 0x1C17F20
	1235 Call 0x1C17F20
	1236 Call 0x1C17F20
	1237 Call 0x1C17F28
	1238 Call 0x1C17F28
	1239 Call 0x1C17F20
	1240 Call 0x1C17F20
	1241 Call 0x1C17F20
	1242 Call 0x1C17F20
	1243 Call 0x1C17F20
	1244 Move X0, X23
	1245 Call 0x1C17F18
	1246 Call 0x1C17F28
	1247 Call 0x1C17F28
	1248 Call 0x1C17F28
	1249 Call 0x1C17F20
	1250 Call 0x1C17F20
	1251 Call 0x1C17F28
	1252 Call 0x1C17F28
	1253 Call 0x1C17F20
	1254 Call 0x1C17F20
	1255 Call 0x1C17F20
	1256 Move X26, X31
	1257 Add X0, X31, 1128
	1258 Move X1, X31
	1259 Call ProfilingScope.Dispose, X0
	1260 Move X21, [X31+8]
	1261 Move X20, [X31+16]
	1262 Move X27, 0x6C5000
	1263 Move X27, [X27+1280]
	1264 Compare X26, 0
	1265 JumpIfEqual {1329}
	1266 Move X0, X26
	1267 Call 0x1C17F18
	1268 Move X25, X31
	1269 Add X0, X31, 1128
	1270 Move X1, X31
	1271 Call ProfilingScope.Dispose, X0
	1272 Move X20, [X31+16]
	1273 Move X27, 0x6C5000
	1274 Move X27, [X27+1280]
	1275 Move X21, X26
	1276 Compare X25, 0
	1277 JumpIfEqual {1329}
	1278 Move X0, X25
	1279 Call 0x1C17F18
	1280 Call 0x1C17F20
	1281 Call 0x1C17F20
	1282 Call 0x1C17F20
	1283 Move X25, X1
	1284 Move X24, X31
	1285 Add X0, X31, 1128
	1286 Move X1, X31
	1287 Call ProfilingScope.Dispose, X0
	1288 Move X27, 0x6C5000
	1289 Move X27, [X27+1280]
	1290 Move X20, X25
	1291 Move X21, X26
	1292 Compare X24, 0
	1293 JumpIfEqual {1329}
	1294 Move X0, X24
	1295 Call 0x1C17F18
	1296 Move X25, X1
	1297 Move X24, X31
	1298 Add X0, X31, 1128
	1299 Move X1, X31
	1300 Call ProfilingScope.Dispose, X0
	1301 Move X27, 0x6C5000
	1302 Move X27, [X27+1280]
	1303 Move X20, X25
	1304 Move X21, X26
	1305 Compare X24, 0
	1306 JumpIfEqual {1329}
	1307 Move X0, X24
	1308 Call 0x1C17F18
	1309 Call 0x1C17F20
	1310 Call 0x1C17F20
	1311 Move X25, X1
	1312 Move X26, X0
	1313 Move X25, X1
	1314 Move X26, X0
	1315 Move X26, X0
	1316 Move [X31+16], X1
	1317 Move [X31+8], X0
	1318 Move [X31+16], X1
	1319 Move W8, 1
	1320 Move X20, X1
	1321 Move X21, X0
	1322 Move [X31+32], W8
	1323 Move X20, X1
	1324 Move X21, X0
	1325 Move X20, X1
	1326 Move X21, X0
	1327 Move X27, 0x6C4000
	1328 Move X27, [X27+1280]
	1329 NotImplemented "Instruction CMP not yet implemented."
	1330 Move X0, X21
	1331 Call 0x3EB2AD0
	1332 Move X23, [X0]
	1333 Call 0x3EB2AE0
	1334 Move W22, W31
	1335 Move X23, X31
	1336 Move X8, 0x6CB000
	1337 Move X8, [X8+736]
	1338 Move X1, [X8]
	1339 Add X0, X31, 1728
	1340 Call Enumerator<ValueTuple`2<Object, Object>>.Dispose, X0
	1341 Compare X23, 0
	1342 JumpIfNotEqual {1356}
	1343 NotImplemented "Instruction CMP not yet implemented."
	1344 Move X0, X21
	1345 Call 0x3EB2AD0
	1346 Move X19, [X0]
	1347 Call 0x3EB2AE0
	1348 Add X0, X31, 1776
	1349 Move X1, X31
	1350 Call ProfilingScope.Dispose, X0
	1351 Compare X19, 0
	1352 JumpIfEqual {1194}
	1353 Move X0, X19
	1354 Call 0x1C17F18
	1355 Move X19, X31
	1356 Move X0, X23
	1357 Call 0x1C17F18
	1358 Move X20, X1
	1359 Move X21, X0
	1360 Move X21, X0
	1361 Add X0, X31, 1776
	1362 Move X1, X31
	1363 Call ProfilingScope.Dispose, X0
	1364 Compare X19, 0
	1365 JumpIfNotEqual {1368}
	1366 Move X0, X21
	1367 Call 0x1D2D690
	1368 Move X0, X19
	1369 Call 0x1C17F18
	1370 Call 0x1991590

Method: System.Void UpdateCameraData(ref UnityEngine.Rendering.Universal.CameraData baseCameraData, in UnityEngine.Experimental.Rendering.XRPass xr)

Disassembly:
	0x03A8FDA0 STP D9, D8, [X31 + 0x10]
	0x03A8FDA4 STP X30, X19, [X31 + 0x20]
	0x03A8FDA8 MOV V10.16B, V2.16B
	0x03A8FDAC MOV V8.16B, V1.16B
	0x03A8FDB0 MOV V9.16B, V0.16B
	0x03A8FDB4 CBZ W0, 0x3A8FDDC
	0x03A8FDB8 CMP W0, 0x2
	0x03A8FDBC B.EQ 0x3A8FEB8
	0x03A8FDC0 CMP W0, 0x3
	0x03A8FDC4 B.NE 0x3A8FEB0
	0x03A8FDC8 MOV X0, X31
	0x03A8FDCC BL 0x39EA3F0
	0x03A8FDD0 TBZ X0, 0x0, 0x3A8FDDC
	0x03A8FDD4 MOVZ W0, 0x2
	0x03A8FDD8 B 0x3A8FEBC
	0x03A8FDDC ADRP X19, 0x94A000
	0x03A8FDE0 LDRB W8, [X19 + 0x5AA]
	0x03A8FDE4 FMOV S0, 1
	0x03A8FDE8 FDIV S10, S0, S10
	0x03A8FDEC FRINTM S0, S10
	0x03A8FDF0 FSUB S11, S10, S0
	0x03A8FDF4 CBNZ W8, 0x3A8FE0C
	0x03A8FDF8 ADRP X0, 0x66B000
	0x03A8FDFC LDR X0, [X0 + 0x4B8]
	0x03A8FE00 BL 0x1C16CF4
	0x03A8FE04 MOVZ W8, 0x1
	0x03A8FE08 STRB W8, [X19 + 0x5AA]
	0x03A8FE0C ADRP X8, 0x66B000
	0x03A8FE10 LDR X8, [X8 + 0x4B8]
	0x03A8FE14 ADRP X9, 0xFFFFFFFFFD05B000
	0x03A8FE18 LDR V0, [X9 + 0x240]
	0x03A8FE1C FABS S1, S11
	0x03A8FE20 LDR X8, [X8]
	0x03A8FE24 FMOV S2, W31
	0x03A8FE28 FMOV S4, 8
	0x03A8FE2C FMAXNM S1, S1, S2
	0x03A8FE30 LDR X8, [X8 + 0xB8]
	0x03A8FE34 FMUL S5, S1, S0
	0x03A8FE38 LDR V3, [X8]
	0x03A8FE3C FMUL S1, S3, S4
	0x03A8FE40 FCMP S5, S1
	0x03A8FE44 FCSEL S3, S5, S1, GT
	0x03A8FE48 FABD S4, S2, S2
	0x03A8FE4C FCMP S4, S3
	0x03A8FE50 B.PL 0x3A8FEB0
	0x03A8FE54 FDIV S3, S9, S10
	0x03A8FE58 FRINTM S4, S3
	0x03A8FE5C FSUB S5, S3, S4
	0x03A8FE60 FABD S3, S3, S3
	0x03A8FE64 FMAXNM S3, S3, S2
	0x03A8FE68 FMUL S3, S3, S0
	0x03A8FE6C FCMP S3, S1
	0x03A8FE70 FCSEL S3, S3, S1, GT
	0x03A8FE74 FABD S2, S2, S2
	0x03A8FE78 FCMP S2, S3
	0x03A8FE7C B.PL 0x3A8FEB0
	0x03A8FE80 FDIV S2, S8, S10
	0x03A8FE84 FRINTM S4, S2
	0x03A8FE88 FMOV S3, W31
	0x03A8FE8C FSUB S5, S2, S4
	0x03A8FE90 FABD S2, S2, S2
	0x03A8FE94 FMAXNM S2, S2, S3
	0x03A8FE98 FMUL S0, S2, S0
	0x03A8FE9C FCMP S0, S1
	0x03A8FEA0 FCSEL S0, S0, S1, GT
	0x03A8FEA4 FABD S1, S3, S3
	0x03A8FEA8 FCMP S1, S0
	0x03A8FEAC B.MI 0x3A8FEB8
	0x03A8FEB0 MOV W0, W31
	0x03A8FEB4 B 0x3A8FEBC
	0x03A8FEB8 MOVZ W0, 0x1
	0x03A8FEBC LDP X30, X19, [X31 + 0x20]
	0x03A8FEC0 LDP D9, D8, [X31 + 0x10]
	0x03A8FEC4 LDP D11, D10, [X31], #0x30
	0x03A8FEC8 RET
	0x03A8FECC STR X30, [X31 - 0x40]!
	0x03A8FED0 STP X24, X23, [X31 + 0x10]
	0x03A8FED4 STP X22, X21, [X31 + 0x20]
	0x03A8FED8 STP X20, X19, [X31 + 0x30]
	0x03A8FEDC CBZ X1, 0x3A8FF6C
	0x03A8FEE0 LDR X21, [X1 + 0x98]
	0x03A8FEE4 LDP W22, W23, [X0 + 0xD8]
	0x03A8FEE8 LDR W24, [X0 + 0xE4]
	0x03A8FEEC MOV X20, X1
	0x03A8FEF0 MOV X19, X0
	0x03A8FEF4 ADD X0, X0, 0xD8
	0x03A8FEF8 MOV X1, X31
	0x03A8FEFC STR X21, [X19 + 0x1E0]
	0x03A8FF00 BL 0x3C22060
	0x03A8FF04 CBZ X21, 0x3A8FF6C
	0x03A8FF08 LDR W6, [X19 + 0xF8]
	0x03A8FF0C LDR W5, [X19 + 0x100]
	0x03A8FF10 MOV W4, W0
	0x03A8FF14 MOV X0, X21
	0x03A8FF18 MOV W1, W22
	0x03A8FF1C MOV W2, W23
	0x03A8FF20 MOV W3, W24
	0x03A8FF24 MOV X7, X31
	0x03A8FF28 BL 0x3A784E0
	0x03A8FF2C MOV X0, X20
	0x03A8FF30 MOV X1, X31
	0x03A8FF34 BL 0x3A81DBC
	0x03A8FF38 LDP V0, V1, [X0]
	0x03A8FF3C ADD X8, X19, 0x1E8
	0x03A8FF40 LDP X20, X19, [X31 + 0x30]
	0x03A8FF44 LDP X22, X21, [X31 + 0x20]
	0x03A8FF48 STP V0, V1, [X8]
	0x03A8FF4C LDR W8, [X0 + 0x18]
	0x03A8FF50 LDP X24, X23, [X31 + 0x10]
	0x03A8FF54 CMP W8, 0x0
	0x03A8FF58 CSET W9, GT
	0x03A8FF5C SUB W8, W8, W9
	0x03A8FF60 STR W8, [X0 + 0x18]
	0x03A8FF64 LDR X30, [X31], #0x40
	0x03A8FF68 RET
	0x03A8FF6C BL 0x1C16F20
	0x03A8FF70 STP X30, X21, [X31 - 0x20]!
	0x03A8FF74 STP X20, X19, [X31 + 0x10]
	0x03A8FF78 ADRP X21, 0x953000
	0x03A8FF7C ADRP X20, 0x6C6000
	0x03A8FF80 LDRB W8, [X21 + 0x36B]
	0x03A8FF84 LDR X20, [X20 + 0x4B0]
	0x03A8FF88 MOV X19, X0
	0x03A8FF8C TBNZ X8, 0x0, 0x3A8FFB0
	0x03A8FF90 ADRP X0, 0x6C6000
	0x03A8FF94 LDR X0, [X0 + 0x4A8]
	0x03A8FF98 BL 0x1C16CF4
	0x03A8FF9C ADRP X0, 0x6C6000
	0x03A8FFA0 LDR X0, [X0 + 0x4B0]
	0x03A8FFA4 BL 0x1C16CF4
	0x03A8FFA8 MOVZ W8, 0x1
	0x03A8FFAC STRB W8, [X21 + 0x36B]
	0x03A8FFB0 LDR X0, [X20]
	0x03A8FFB4 ADRP X20, 0x6C6000
	0x03A8FFB8 LDR W8, [X0 + 0xE0]
	0x03A8FFBC LDR X20, [X20 + 0x4A8]
	0x03A8FFC0 CBNZ W8, 0x3A8FFC8
	0x03A8FFC4 BL 0x1C16DFC
	0x03A8FFC8 LDR X0, [X20]
	0x03A8FFCC BL 0x29AF0A8
	0x03A8FFD0 CBZ X0, 0x3A90034
	0x03A8FFD4 LDR X8, [X0 + 0x28]
	0x03A8FFD8 CBZ X8, 0x3A90034
	0x03A8FFDC LDR W8, [X8 + 0x38]
	0x03A8FFE0 CMP W8, 0x1
	0x03A8FFE4 B.EQ 0x3A90000
	0x03A8FFE8 CMP W8, 0x2
	0x03A8FFEC B.EQ 0x3A90014
	0x03A8FFF0 CMP W8, 0x3
	0x03A8FFF4 B.NE 0x3A90008
	0x03A8FFF8 STR W31, [X19 + 0x4]
	0x03A8FFFC B 0x3A90008
	0x03A90000 MOVZ W8, 0x3F800000
	0x03A90004 STR W8, [X19 + 0x4]
	0x03A90008 LDP X20, X19, [X31 + 0x10]
	0x03A9000C LDP X30, X21, [X31], #0x20
	0x03A90010 RET
	0x03A90014 MOVZ W8, 0x3F800000
	0x03A90018 STR W8, [X19 + 0x4]
	0x03A9001C MOV X0, X19
	0x03A90020 LDP X20, X19, [X31 + 0x10]
	0x03A90024 FMOV S0, W31
	0x03A90028 MOV X1, X31
	0x03A9002C LDP X30, X21, [X31], #0x20
	0x03A90030 B 0x3A79DA4
	0x03A90034 BL 0x1C16F20
	0x03A90038 LDP V1, V0, [X1 + 0x20]
	0x03A9003C LDP V3, V2, [X1]
	0x03A90040 STP V1, V0, [X0 + 0x20]
	0x03A90044 STP V3, V2, [X0]
	0x03A90048 LDP V1, V0, [X2 + 0x20]
	0x03A9004C LDP V3, V2, [X2]
	0x03A90050 STP V1, V0, [X0 + 0x60]
	0x03A90054 STP V3, V2, [X0 + 0x40]
	0x03A90058 LDP V1, V0, [X3 + 0x20]
	0x03A9005C LDP V3, V2, [X3]
	0x03A90060 STP V1, V0, [X0 + 0xA0]
	0x03A90064 STP V3, V2, [X0 + 0x80]
	0x03A90068 RET
	0x03A9006C STP X30, X21, [X31 - 0x20]!
	0x03A90070 STP X20, X19, [X31 + 0x10]
	0x03A90074 ADRP X20, 0x952000
	0x03A90078 ADRP X21, 0x68C000
	0x03A9007C LDRB W8, [X20 + 0x38A]
	0x03A90080 LDR X21, [X21 + 0x8A8]
	0x03A90084 MOV X19, X0
	0x03A90088 TBNZ X8, 0x0, 0x3A900A0
	0x03A9008C ADRP X0, 0x68C000
	0x03A90090 LDR X0, [X0 + 0x8A8]
	0x03A90094 BL 0x1C16CF4
	0x03A90098 MOVZ W8, 0x1
	0x03A9009C STRB W8, [X20 + 0x38A]
	0x03A900A0 LDR X0, [X21]
	0x03A900A4 LDR W8, [X0 + 0xE0]
	0x03A900A8 CBNZ W8, 0x3A900B0
	0x03A900AC BL 0x1C16DFC
	0x03A900B0 BL 0x3A8EA20
	0x03A900B4 LDR X8, [X19 + 0x178]
	0x03A900B8 CBZ X8, 0x3A90114
	0x03A900BC MOV W20, W0
	0x03A900C0 MOV X0, X8
	0x03A900C4 MOV X1, X31
	0x03A900C8 BL 0x3984C98
	0x03A900CC TBZ X0, 0x0, 0x3A900E8
	0x03A900D0 LDR X0, [X19 + 0x178]
	0x03A900D4 CBZ X0, 0x3A90114
	0x03A900D8 MOV X1, X31
	0x03A900DC BL 0x39885B0
	0x03A900E0 TBNZ X0, 0x0, 0x3A900EC
	0x03A900E4 B 0x3A90104
	0x03A900E8 TBZ X20, 0x0, 0x3A90104
	0x03A900EC LDRB W8, [X19 + 0x16E]
	0x03A900F0 CBZ W8, 0x3A90104
	0x03A900F4 MOV X0, X19
	0x03A900F8 LDP X20, X19, [X31 + 0x10]
	0x03A900FC LDP X30, X21, [X31], #0x20
	0x03A90100 B 0x3A932B0
	0x03A90104 LDP X20, X19, [X31 + 0x10]
	0x03A90108 MOV W0, W31
	0x03A9010C LDP X30, X21, [X31], #0x20
	0x03A90110 RET
	0x03A90114 BL 0x1C16F20
	0x03A90118 STR D8, [X31 - 0x60]!
	0x03A9011C STP X30, X27, [X31 + 0x10]
	0x03A90120 STP X26, X25, [X31 + 0x20]
	0x03A90124 STP X24, X23, [X31 + 0x30]
	0x03A90128 STP X22, X21, [X31 + 0x40]
	0x03A9012C STP X20, X19, [X31 + 0x50]
	0x03A90130 ADRP X23, 0x952000
	0x03A90134 ADRP X22, 0x68C000
	0x03A90138 LDRB W8, [X23 + 0x36D]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X30
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x954000
	012 Move W8, [X21+864]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x665000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+864], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+48], W31
	026 Move [X31+16], V0
	027 Move [X31+24], V0
	028 Move [X31], V0
	029 Move X0, [X19+192]
	030 Compare X0, 0
	031 JumpIfEqual {227}
	032 Move X1, X31
	033 Call Camera.get_rect, X0
	034 Move X0, [X20]
	035 Compare X0, 0
	036 JumpIfEqual {227}
	037 Move X21, 0x665000
	038 Move X21, [X21+1448]
	039 Move W1, W31
	040 Move X2, X31
	041 Move V11, V0
	042 Move V9, V1
	043 Move V8, V2
	044 Move V10, V3
	045 Call XRPass.GetViewport, X0, X1
	046 Multiply S4, S11, S2
	047 Multiply S5, S9, S3
	048 Multiply S8, S8, S2
	049 Multiply S10, S10, S3
	050 Add S11, S0, S4
	051 Add S9, S1, S5
	052 Move [X19+276], S8
	053 Move [X19+268], S11
	054 Move [X19+272], S9
	055 Move [X19+280], S10
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add S12, S8, S11
	062 NotImplemented "Instruction FCVT not yet implemented."
	063 Add X0, X31, 72
	064 Move V0, V8
	065 Call 0x3EB2C00
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move D1, -0.5
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move V0, [X31+72]
	070 Move D1, -1
	071 Move D1, 0.5
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move V0, [X31+72]
	074 Move D1, 1
	075 NotImplemented "Instruction FCVTZS not yet implemented."
	076 Add D1, D0, D1
	077 And X31, X8, 1
	078 NotImplemented "Instruction FCSEL not yet implemented."
	079 Add D0, D8, D1
	080 NotImplemented "Instruction FRINTP not yet implemented."
	081 Add D0, D8, D1
	082 NotImplemented "Instruction FRINTM not yet implemented."
	083 NotImplemented "Instruction FCVT not yet implemented."
	084 Add X0, X31, 72
	085 Move V0, V8
	086 Call 0x3EB2C00
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move D1, -0.5
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move V0, [X31+72]
	091 Move D1, -1
	092 Move D1, 0.5
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move V0, [X31+72]
	095 Move D1, 1
	096 NotImplemented "Instruction FCVTZS not yet implemented."
	097 Add D1, D0, D1
	098 And X31, X8, 1
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 Add D0, D8, D1
	101 NotImplemented "Instruction FRINTP not yet implemented."
	102 Add D0, D8, D1
	103 NotImplemented "Instruction FRINTM not yet implemented."
	104 Move X9, 0x7FF00000
	105 Move D1, X9
	106 NotImplemented "Instruction FCVTZS not yet implemented."
	107 Move W10, 0x80000000
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 NotImplemented "Instruction FCVTZS not yet implemented."
	110 Add S10, S10, S9
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 NotImplemented "Instruction FCVT not yet implemented."
	115 Subtract W8, W8, W9
	116 Add X0, X31, 72
	117 Move V0, V8
	118 Move [X19+320], W8
	119 Call 0x3EB2C00
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Move D1, -0.5
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 Move V0, [X31+72]
	124 Move D1, -1
	125 Move D1, 0.5
	126 NotImplemented "Instruction FCMP not yet implemented."
	127 Move V0, [X31+72]
	128 Move D1, 1
	129 NotImplemented "Instruction FCVTZS not yet implemented."
	130 Add D1, D0, D1
	131 And X31, X8, 1
	132 NotImplemented "Instruction FCSEL not yet implemented."
	133 Add D0, D8, D1
	134 NotImplemented "Instruction FRINTP not yet implemented."
	135 Add D0, D8, D1
	136 NotImplemented "Instruction FRINTM not yet implemented."
	137 NotImplemented "Instruction FCVT not yet implemented."
	138 Add X0, X31, 72
	139 Move V0, V8
	140 Call 0x3EB2C00
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 Move D1, -0.5
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 Move V0, [X31+72]
	145 Move D1, -1
	146 Move D1, 0.5
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 Move V0, [X31+72]
	149 Move D1, 1
	150 NotImplemented "Instruction FCVTZS not yet implemented."
	151 Add D1, D0, D1
	152 And X31, X8, 1
	153 NotImplemented "Instruction FCSEL not yet implemented."
	154 Add D0, D8, D1
	155 NotImplemented "Instruction FRINTP not yet implemented."
	156 Add D0, D8, D1
	157 NotImplemented "Instruction FRINTM not yet implemented."
	158 Move X9, 0x7FF00000
	159 Move D1, X9
	160 NotImplemented "Instruction FCVTZS not yet implemented."
	161 Move W10, 0x80000000
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move V2, [X19+320]
	164 NotImplemented "Instruction FCVTZS not yet implemented."
	165 NotImplemented "Instruction CSEL not yet implemented."
	166 NotImplemented "Instruction FCMP not yet implemented."
	167 NotImplemented "Instruction CSEL not yet implemented."
	168 Subtract W8, W8, W9
	169 NotImplemented "Instruction SCVTF not yet implemented."
	170 NotImplemented "Instruction SCVTF not yet implemented."
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 Add X21, X19, 216
	173 Move [X19+324], W8
	174 Move [X19+328], S1
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 Move W8, [X21+48]
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move [X31+48], W8
	180 Move [X31+16], V1
	181 Move [X31+24], V0
	182 Move [X31], V2
	183 Move X8, [X20]
	184 Compare X8, 0
	185 JumpIfEqual {227}
	186 Move W9, [X8+136]
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction LDUR not yet implemented."
	190 Move [X21+48], W9
	191 Move [X21+16], V1
	192 Move [X21+24], V0
	193 Move [X21], V2
	194 Move W8, [X19+365]
	195 Compare W8, 0
	196 JumpIfEqual {204}
	197 Add X0, X31, 0
	198 Move X1, X31
	199 Call RenderTextureDescriptor.get_graphicsFormat, X0
	200 Move W1, W0
	201 Move X0, X21
	202 Move X2, X31
	203 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	204 Move W9, [X31+8]
	205 Move W8, [X19+364]
	206 Move [X19+224], W9
	207 Compare W8, 0
	208 JumpIfNotEqual {211}
	209 Move V0, [X19+320]
	210 Move [X19+216], D0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 NotImplemented "Instruction CSET not yet implemented."
	213 Move X0, X21
	214 Move X2, X31
	215 Call RenderTextureDescriptor.set_useDynamicScale, X0, X1
	216 Move X20, [X31+128]
	217 Move X19, [X31+136]
	218 Move X30, [X31+112]
	219 Move X21, [X31+120]
	220 Move D9, [X31+96]
	221 Move D8, [X31+104]
	222 Move D11, [X31+80]
	223 Move D10, [X31+88]
	224 Move V12, [X31+64]
	225 Add X31, X31, 144
	226 Return 
	227 Call 0x1C17F20

Method: System.Void UpdateVolumeFramework(UnityEngine.Camera camera, UnityEngine.Rendering.Universal.UniversalAdditionalCameraData additionalCameraData)

Disassembly:
	0x03A8D2C4 B 0x3A8D354
	0x03A8D2C8 B 0x3A8D354
	0x03A8D2CC B 0x3A8D354
	0x03A8D2D0 B 0x3A8D354
	0x03A8D2D4 B 0x3A8D354
	0x03A8D2D8 B 0x3A8D354
	0x03A8D2DC B 0x3A8D354
	0x03A8D2E0 B 0x3A8D354
	0x03A8D2E4 B 0x3A8D354
	0x03A8D2E8 B 0x3A8D354
	0x03A8D2EC B 0x3A8D354
	0x03A8D2F0 B 0x3A8D354
	0x03A8D2F4 B 0x3A8D354
	0x03A8D2F8 B 0x3A8D354
	0x03A8D2FC B 0x3A8D354
	0x03A8D300 B 0x3A8D354
	0x03A8D304 B 0x3A8D354
	0x03A8D308 B 0x3A8D354
	0x03A8D30C B 0x3A8D354
	0x03A8D310 B 0x3A8D354
	0x03A8D314 B 0x3A8D354
	0x03A8D318 B 0x3A8D354
	0x03A8D31C B 0x3A8D354
	0x03A8D320 B 0x3A8D354
	0x03A8D324 B 0x3A8D354
	0x03A8D328 B 0x3A8D354
	0x03A8D32C B 0x3A8D354
	0x03A8D330 B 0x3A8D354
	0x03A8D334 B 0x3A8D354
	0x03A8D338 B 0x3A8D354
	0x03A8D33C B 0x3A8D354
	0x03A8D340 B 0x3A8D354
	0x03A8D344 B 0x3A8D354
	0x03A8D348 B 0x3A8D354
	0x03A8D34C B 0x3A8D354
	0x03A8D350 B 0x3A8D354
	0x03A8D354 MOV X19, X0
	0x03A8D358 CMP W1, 0x1
	0x03A8D35C B.NE 0x3A8D388
	0x03A8D360 MOV X0, X19
	0x03A8D364 BL 0x3EB1AD0
	0x03A8D368 LDR X20, [X0]
	0x03A8D36C BL 0x3EB1AE0
	0x03A8D370 ADD X0, X31, 0x108
	0x03A8D374 MOV X1, X31
	0x03A8D378 BL 0x39B1DB4
	0x03A8D37C CBZ X20, 0x3A8D26C
	0x03A8D380 MOV X0, X20
	0x03A8D384 BL 0x1C16F18
	0x03A8D388 MOV X20, X31
	0x03A8D38C B 0x3A8D394
	0x03A8D390 MOV X19, X0
	0x03A8D394 ADD X0, X31, 0x108
	0x03A8D398 MOV X1, X31
	0x03A8D39C BL 0x39B1DB4
	0x03A8D3A0 CBNZ X20, 0x3A8D3AC
	0x03A8D3A4 MOV X0, X19
	0x03A8D3A8 BL 0x1D2C690
	0x03A8D3AC MOV X0, X20
	0x03A8D3B0 BL 0x1C16F18
	0x03A8D3B4 BL 0x1990590
	0x03A8D3B8 STP X29, X30, [X31 - 0x60]!
	0x03A8D3BC STP X28, X27, [X31 + 0x10]
	0x03A8D3C0 STP X26, X25, [X31 + 0x20]
	0x03A8D3C4 STP X24, X23, [X31 + 0x30]
	0x03A8D3C8 STP X22, X21, [X31 + 0x40]
	0x03A8D3CC STP X20, X19, [X31 + 0x50]
	0x03A8D3D0 SUB X31, X31, 0xD50
	0x03A8D3D4 MRS X25, 0xC000
	0x03A8D3D8 LDR X8, [X25 + 0x28]
	0x03A8D3DC ADRP X19, 0x955000
	0x03A8D3E0 MOV X21, X1
	0x03A8D3E4 STR X8, [X31 + 0xD48]
	0x03A8D3E8 LDRB W8, [X19 + 0x35E]
	0x03A8D3EC STR X0, [X31 + 0x710]
	0x03A8D3F0 TBNZ X8, 0x0, 0x3A8D4A4
	0x03A8D3F4 ADRP X0, 0x6C3000
	0x03A8D3F8 LDR X0, [X0 + 0xD20]
	0x03A8D3FC BL 0x1C16CF4
	0x03A8D400 ADRP X0, 0x6C7000
	0x03A8D404 LDR X0, [X0 + 0x918]
	0x03A8D408 BL 0x1C16CF4
	0x03A8D40C ADRP X0, 0x6CA000
	0x03A8D410 LDR X0, [X0 + 0x358]
	0x03A8D414 BL 0x1C16CF4
	0x03A8D418 ADRP X0, 0x68E000
	0x03A8D41C LDR X0, [X0 + 0x8F8]
	0x03A8D420 BL 0x1C16CF4
	0x03A8D424 ADRP X0, 0x666000
	0x03A8D428 LDR X0, [X0 + 0xA28]
	0x03A8D42C BL 0x1C16CF4
	0x03A8D430 ADRP X0, 0x6CA000
	0x03A8D434 LDR X0, [X0 + 0x360]
	0x03A8D438 BL 0x1C16CF4
	0x03A8D43C ADRP X0, 0x6C3000
	0x03A8D440 LDR X0, [X0 + 0x9B0]
	0x03A8D444 BL 0x1C16CF4
	0x03A8D448 ADRP X0, 0x6CA000
	0x03A8D44C LDR X0, [X0 + 0x368]
	0x03A8D450 BL 0x1C16CF4
	0x03A8D454 ADRP X0, 0x6C3000
	0x03A8D458 LDR X0, [X0 + 0xC80]
	0x03A8D45C BL 0x1C16CF4
	0x03A8D460 ADRP X0, 0x6C7000
	0x03A8D464 LDR X0, [X0 + 0x8C8]
	0x03A8D468 BL 0x1C16CF4
	0x03A8D46C ADRP X0, 0x68F000
	0x03A8D470 LDR X0, [X0 + 0x8A8]
	0x03A8D474 BL 0x1C16CF4
	0x03A8D478 ADRP X0, 0x6CA000
	0x03A8D47C LDR X0, [X0 + 0x370]
	0x03A8D480 BL 0x1C16CF4
	0x03A8D484 ADRP X0, 0x6CA000
	0x03A8D488 LDR X0, [X0 + 0x378]
	0x03A8D48C BL 0x1C16CF4
	0x03A8D490 ADRP X0, 0x6CA000
	0x03A8D494 LDR X0, [X0 + 0x380]
	0x03A8D498 BL 0x1C16CF4
	0x03A8D49C MOVZ W8, 0x1
	0x03A8D4A0 STRB W8, [X19 + 0x35E]
	0x03A8D4A4 ADD X0, X31, 0x718
	0x03A8D4A8 MOVZ W2, 0x630
	0x03A8D4AC MOV W1, W31
	0x03A8D4B0 BL 0x3EB1B10
	0x03A8D4B4 ADD X0, X31, 0x438
	0x03A8D4B8 MOVZ W2, 0x2B8
	0x03A8D4BC MOV W1, W31
	0x03A8D4C0 STRB W31, [X31 + 0x708]
	0x03A8D4C4 STR X31, [X31 + 0x700]
	0x03A8D4C8 STR X31, [X31 + 0x6F8]
	0x03A8D4CC STR X31, [X31 + 0x6F0]
	0x03A8D4D0 BL 0x3EB1B10
	0x03A8D4D4 STRB W31, [X31 + 0x430]
	0x03A8D4D8 LDR X19, [X21 + 0x1B8]
	0x03A8D4DC LDR X22, [X21 + 0xC0]
	0x03A8D4E0 CBZ X19, 0x3A8D830
	0x03A8D4E4 ADRP X28, 0x68F000
	0x03A8D4E8 LDR X28, [X28 + 0x8A8]
	0x03A8D4EC ADD X0, X31, 0x220
	0x03A8D4F0 MOVZ W2, 0x210
	0x03A8D4F4 MOV X1, X21
	0x03A8D4F8 BL 0x3EB1AC0
	0x03A8D4FC LDR X0, [X28]
	0x03A8D500 LDR W8, [X0 + 0xE0]
	0x03A8D504 CBNZ W8, 0x3A8D50C
	0x03A8D508 BL 0x1C16DFC
	0x03A8D50C ADD X0, X31, 0x10
	0x03A8D510 ADD X1, X31, 0x220
	0x03A8D514 MOVZ W2, 0x210
	0x03A8D518 BL 0x3EB1AC0
	0x03A8D51C ADD X0, X31, 0x10
	0x03A8D520 ADD X1, X31, 0x718
	0x03A8D524 BL 0x3A8DCB8
	0x03A8D528 TBZ X0, 0x0, 0x3A8DA68
	0x03A8D52C ADRP X26, 0x6C7000
	0x03A8D530 LDR X26, [X26 + 0x8C8]
	0x03A8D534 LDR X0, [X26]
	0x03A8D538 LDR W8, [X0 + 0xE0]
	0x03A8D53C CBNZ W8, 0x3A8D548
	0x03A8D540 BL 0x1C16DFC
	0x03A8D544 LDR X0, [X26]
	0x03A8D548 LDR X8, [X0 + 0xB8]
	0x03A8D54C ADRP X27, 0x6C3000
	0x03A8D550 STR X19, [X8]
	0x03A8D554 LDR X27, [X27 + 0xD20]
	0x03A8D558 LDR X0, [X27]
	0x03A8D55C LDR W8, [X0 + 0xE0]
	0x03A8D560 CBNZ W8, 0x3A8D568
	0x03A8D564 BL 0x1C16DFC
	0x03A8D568 MOV X0, X31
	0x03A8D56C BL 0x399D510
	0x03A8D570 LDR X8, [X21 + 0x178]
	0x03A8D574 CBZ X8, 0x3A8DAB4
	0x03A8D578 MOV X20, X0
	0x03A8D57C MOV X0, X8
	0x03A8D580 MOV X1, X31
	0x03A8D584 BL 0x3984C98
	0x03A8D588 ADRP X8, 0x6CA000
	0x03A8D58C LDR X8, [X8 + 0x360]
	0x03A8D590 ANDS W31, W0, 0x1
	0x03A8D594 CSEL X23, X31, X20, NE
	0x03A8D598 LDR X8, [X8]
	0x03A8D59C LDR W9, [X8 + 0xE0]
	0x03A8D5A0 CBNZ W9, 0x3A8D5AC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x956000
	008 Move X21, 0x6C8000
	009 Move W8, [X22+865]
	010 Move X21, [X21+168]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x667000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x6C8000
	021 Move X0, [X0+168]
	022 Call 0x1C17CF4
	023 Move X0, 0x691000
	024 Move X0, [X0+4032]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+865], W8
	028 Move X1, [X21]
	029 Move W0, 1
	030 Move [X31+24], W31
	031 Move [X31+8], W31
	032 Move [X31], X31
	033 Call 0x2236BC0, X0
	034 Move X2, X0
	035 Add X0, X31, 24
	036 Move X1, X31
	037 Move X3, X31
	038 Call ProfilingScope..ctor, X0, X1, X2
	039 Compare X20, 0
	040 JumpIfEqual {162}
	041 Move X0, X20
	042 Move X1, X31
	043 Call Camera.get_cameraType, X0
	044 Move X22, 0x667000
	045 Move X22, [X22+1432]
	046 Move W21, W0
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Compare X19, 0
	063 JumpIfEqual {165}
	064 Move X0, X19
	065 Move X1, X31
	066 Call UniversalAdditionalCameraData.get_requiresVolumeFrameworkUpdate, X0
	067 And W8, W0, 1
	068 Move W8, W31
	069 Or W8, W8, W21
	070 Move X21, 0x691000
	071 Move X21, [X21+4032]
	072 Compare W8, 0
	073 JumpIfNotEqual {106}
	074 Move X0, [X22]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X19
	080 Move X1, X31
	081 Call Object.op_Implicit, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {106}
	086 Compare X19, 0
	087 JumpIfEqual {167}
	088 Move X8, [X19+192]
	089 Compare X8, 0
	090 JumpIfNotEqual {95}
	091 Move X0, X20
	092 Move X1, X19
	093 Move X2, X31
	094 Call CameraExtensions.UpdateVolumeStack, X0, X1
	095 Move X0, [X21]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X31
	101 Call VolumeManager.get_instance
	102 Compare X0, 0
	103 JumpIfEqual {168}
	104 Move X8, [X19+192]
	105 Move [X0+16], X8
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X19
	112 Move X1, X31
	113 Call Object.op_Implicit, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {127}
	118 Compare X19, 0
	119 JumpIfEqual {166}
	120 Move X8, [X19+192]
	121 Compare X8, 0
	122 JumpIfEqual {127}
	123 Move X0, X20
	124 Move X1, X19
	125 Move X2, X31
	126 Call CameraExtensions.DestroyVolumeStack, X0, X1
	127 Add X2, X31, 8
	128 Add X3, X31, 0
	129 Move X0, X20
	130 Move X1, X19
	131 Move X4, X31
	132 Call CameraExtensions.GetVolumeLayerMaskAndTrigger, X0, X1, X2, X3
	133 Move X0, [X21]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X31
	139 Call VolumeManager.get_instance
	140 Compare X0, 0
	141 JumpIfEqual {163}
	142 Move X1, X31
	143 Call VolumeManager.ResetMainStack, X0
	144 Move X0, X31
	145 Call VolumeManager.get_instance
	146 Compare X0, 0
	147 JumpIfEqual {164}
	148 Move X1, [X31]
	149 Move W2, [X31+8]
	150 Move X3, X31
	151 Call VolumeManager.Update, X0, X1, X2
	152 Add X0, X31, 24
	153 Move X1, X31
	154 Call ProfilingScope.Dispose, X0
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X30, [X31+16]
	160 Add X31, X31, 64
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X19, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X19
	172 Call 0x3EB2AD0
	173 Move X20, [X0]
	174 Call 0x3EB2AE0
	175 Add X0, X31, 24
	176 Move X1, X31
	177 Call ProfilingScope.Dispose, X0
	178 Compare X20, 0
	179 JumpIfEqual {155}
	180 Move X0, X20
	181 Call 0x1C17F18
	182 Move X20, X31
	183 Move X19, X0
	184 Add X0, X31, 24
	185 Move X1, X31
	186 Call ProfilingScope.Dispose, X0
	187 Compare X20, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X19
	190 Call 0x1D2D690
	191 Move X0, X20
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Boolean CheckPostProcessForDepth(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A90344 MOV W21, W31
	0x03A90348 B 0x3A902BC
	0x03A9034C MOV X20, X31
	0x03A90350 B 0x3A90360
	0x03A90354 MOV X0, X20
	0x03A90358 BL 0x1C16F18
	0x03A9035C MOV X19, X0
	0x03A90360 ADD X0, X31, 0x8
	0x03A90364 MOV X1, X31
	0x03A90368 BL 0x39B1DB4
	0x03A9036C CBNZ X20, 0x3A90378
	0x03A90370 MOV X0, X19
	0x03A90374 BL 0x1D2C690
	0x03A90378 MOV X0, X20
	0x03A9037C BL 0x1C16F18
	0x03A90380 BL 0x1990590
	0x03A90384 SUB X31, X31, 0x50
	0x03A90388 STP X30, X25, [X31 + 0x10]
	0x03A9038C STP X24, X23, [X31 + 0x20]
	0x03A90390 STP X22, X21, [X31 + 0x30]
	0x03A90394 STP X20, X19, [X31 + 0x40]
	0x03A90398 ADRP X25, 0x952000
	0x03A9039C ADRP X24, 0x68C000
	0x03A903A0 LDRB W8, [X25 + 0x36A]
	0x03A903A4 LDR X24, [X24 + 0x898]
	0x03A903A8 MOV X19, X4
	0x03A903AC MOV W23, W3
	0x03A903B0 MOV X21, X2
	0x03A903B4 MOV X22, X1
	0x03A903B8 MOV X20, X0
	0x03A903BC TBNZ X8, 0x0, 0x3A903F8
	0x03A903C0 ADRP X0, 0x663000
	0x03A903C4 LDR X0, [X0 + 0x5A8]
	0x03A903C8 BL 0x1C16CF4
	0x03A903CC ADRP X0, 0x68C000
	0x03A903D0 LDR X0, [X0 + 0x898]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x953000
	005 Move W8, [X20+866]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x68D000
	012 Move X0, [X0+2216]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+866], W8
	016 Move W8, [X19+392]
	017 Compare W8, 0
	018 JumpIfEqual {42}
	019 Move W8, [X19+428]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Call CameraData.IsTemporalAAEnabled, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {30}
	027 Move W8, [X19+200]
	028 Compare W8, 0
	029 JumpIfEqual {43}
	030 Move X8, 0x68D000
	031 Move X8, [X8+2216]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call UniversalRenderPipeline.CheckPostProcessForDepth
	041 Return X0
	042 Move W0, W31
	043 Move W0, 1
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0

Method: System.Boolean CheckPostProcessForDepth()

Disassembly:
	0x03A8FB30 STP X20, X19, [X31 + 0xF0]
	0x03A8FB34 ADRP X26, 0x953000
	0x03A8FB38 LDRB W9, [X26 + 0x37A]
	0x03A8FB3C MOV W25, W5
	0x03A8FB40 MOV W21, W4
	0x03A8FB44 MOV W24, W3
	0x03A8FB48 MOV W22, W2
	0x03A8FB4C MOV X23, X1
	0x03A8FB50 MOV X20, X0
	0x03A8FB54 MOV X19, X8
	0x03A8FB58 TBNZ X9, 0x0, 0x3A8FB7C
	0x03A8FB5C ADRP X0, 0x664000
	0x03A8FB60 LDR X0, [X0 + 0x598]
	0x03A8FB64 BL 0x1C16CF4
	0x03A8FB68 ADRP X0, 0x68D000
	0x03A8FB6C LDR X0, [X0 + 0x8A8]
	0x03A8FB70 BL 0x1C16CF4
	0x03A8FB74 MOVZ W8, 0x1
	0x03A8FB78 STRB W8, [X26 + 0x37A]
	0x03A8FB7C MOVI V0.2D, 0x0
	0x03A8FB80 STR W31, [X31 + 0xA0]
	0x03A8FB84 STP V0, V0, [X31 + 0x80]
	0x03A8FB88 STR V0, [X31 + 0x7]
	0x03A8FB8C CBZ X20, 0x3A8FD98
	0x03A8FB90 ADRP X26, 0x664000
	0x03A8FB94 LDR X26, [X26 + 0x598]
	0x03A8FB98 MOV X0, X20
	0x03A8FB9C MOV X1, X31
	0x03A8FBA0 BL 0x3C040B4
	0x03A8FBA4 LDR X8, [X26]
	0x03A8FBA8 MOV X26, X0
	0x03A8FBAC LDR W9, [X8 + 0xE0]
	0x03A8FBB0 CBNZ W9, 0x3A8FBBC
	0x03A8FBB4 MOV X0, X8
	0x03A8FBB8 BL 0x1C16DFC
	0x03A8FBBC MOV X0, X26
	0x03A8FBC0 MOV X1, X31
	0x03A8FBC4 MOV X2, X31
	0x03A8FBC8 BL 0x3C3883C
	0x03A8FBCC TBZ X0, 0x0, 0x3A8FC64
	0x03A8FBD0 MOV X0, X23
	0x03A8FBD4 BL 0x3A9165C
	0x03A8FBD8 MOV W26, W0
	0x03A8FBDC MOV X0, X23
	0x03A8FBE0 BL 0x3A916AC
	0x03A8FBE4 MOV W2, W0
	0x03A8FBE8 ADD X0, X31, 0x70
	0x03A8FBEC MOV W1, W26
	0x03A8FBF0 MOV X3, X31
	0x03A8FBF4 BL 0x3C227F4
	0x03A8FBF8 ADRP X8, 0x68D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x954000
	005 Move X20, 0x68F000
	006 Move W8, [X19+867]
	007 Move X20, [X20+4032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x68F000
	013 Move X0, [X0+4032]
	014 Call 0x1C17CF4
	015 Move X0, 0x6C8000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x6C8000
	019 Move X0, [X0+1456]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+867], W8
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X31
	029 Call VolumeManager.get_instance
	030 Compare X0, 0
	031 JumpIfEqual {66}
	032 Move X19, [X0+16]
	033 Compare X19, 0
	034 JumpIfEqual {66}
	035 Move X8, 0x6C8000
	036 Move X8, [X8+1432]
	037 Move X0, X19
	038 Move X1, [X8]
	039 Call 0x22ADD04, X0
	040 Compare X0, 0
	041 JumpIfEqual {66}
	042 Move X1, X31
	043 Call DepthOfField.IsActive, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {53}
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move W0, 1
	051 Move X30, [X31+32]
	052 Return X0
	053 Move X8, 0x6C8000
	054 Move X8, [X8+1456]
	055 Move X0, X19
	056 Move X1, [X8]
	057 Call 0x22ADD04, X0
	058 Compare X0, 0
	059 JumpIfEqual {66}
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+32]
	064 Call MotionBlur.IsActive, X0
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void SetSupportedRenderingFeatures(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset pipelineAsset)

Disassembly:
	0x03A8AB64 ADRP X19, 0x958000
	0x03A8AB68 LDRB W8, [X19 + 0x376]
	0x03A8AB6C TBNZ X8, 0x0, 0x3A8AB84
	0x03A8AB70 ADRP X0, 0x66F000
	0x03A8AB74 LDR X0, [X0 + 0x6C8]
	0x03A8AB78 BL 0x1C16CF4
	0x03A8AB7C MOVZ W8, 0x1
	0x03A8AB80 STRB W8, [X19 + 0x376]
	0x03A8AB84 MOV X0, X31
	0x03A8AB88 BL 0x3C4BB34
	0x03A8AB8C CBZ X0, 0x3A8ABCC
	0x03A8AB90 ADRP X8, 0x66F000
	0x03A8AB94 LDR X8, [X8 + 0x6C8]
	0x03A8AB98 LDR X9, [X0]
	0x03A8AB9C LDR X8, [X8]
	0x03A8ABA0 LDRB W11, [X9 + 0x130]
	0x03A8ABA4 LDRB W10, [X8 + 0x130]
	0x03A8ABA8 CMP W11, W10
	0x03A8ABAC B.CS 0x3A8ABB8
	0x03A8ABB0 MOV X0, X31
	0x03A8ABB4 B 0x3A8ABCC
	0x03A8ABB8 LDR X9, [X9 + 0xC8]
	0x03A8ABBC ADD X9, X9, X10, 0x3, LSL
	0x03A8ABC0 LDUR X9, [X9 - 0x8]
	0x03A8ABC4 CMP X9, X8
	0x03A8ABC8 CSEL X0, X0, X31, EQ
	0x03A8ABCC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x959000
	006 Move X21, 0x6CE000
	007 Move W8, [X20+868]
	008 Move X21, [X21+544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6CE000
	015 Move X0, [X0+544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+868], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call SupportedRenderingFeatures.get_active
	026 Compare X19, 0
	027 JumpIfEqual {37}
	028 Compare X0, 0
	029 JumpIfEqual {37}
	030 Move W8, [X19+85]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move [X0+59], W8
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void InitializeCameraData(UnityEngine.Camera camera, UnityEngine.Rendering.Universal.UniversalAdditionalCameraData additionalCameraData, System.Boolean resolveFinalTarget, out UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8D818 LDR X1, [X31 + 0x710]
	0x03A8D81C ADD X2, X31, 0x438
	0x03A8D820 MOV X0, X19
	0x03A8D824 MOV X3, X31
	0x03A8D828 BL 0x3A4C760
	0x03A8D82C B 0x3A8D914
	0x03A8D830 CBZ X22, 0x3A8DAB4
	0x03A8D834 MOV X0, X22
	0x03A8D838 MOV X1, X31
	0x03A8D83C BL 0x3C389D4
	0x03A8D840 ADRP X8, 0x6CA000
	0x03A8D844 LDR X8, [X8 + 0x378]
	0x03A8D848 MOV X1, X0
	0x03A8D84C MOV X2, X31
	0x03A8D850 LDR X8, [X8]
	0x03A8D854 MOV X0, X8
	0x03A8D858 BL 0x321EFD0
	0x03A8D85C ADRP X8, 0x666000
	0x03A8D860 LDR X8, [X8 + 0xA28]
	0x03A8D864 MOV X19, X0
	0x03A8D868 LDR X8, [X8]
	0x03A8D86C LDR W9, [X8 + 0xE0]
	0x03A8D870 CBNZ W9, 0x3A8D87C
	0x03A8D874 MOV X0, X8
	0x03A8D878 BL 0x1C16DFC
	0x03A8D87C MOV X0, X19
	0x03A8D880 MOV X1, X31
	0x03A8D884 BL 0x3C06A04
	0x03A8D888 B 0x3A8DA68
	0x03A8D88C LDR X0, [X29]
	0x03A8D890 LDR W8, [X0 + 0xE0]
	0x03A8D894 CBNZ W8, 0x3A8D8A0
	0x03A8D898 BL 0x1C16DFC
	0x03A8D89C LDR X0, [X29]
	0x03A8D8A0 LDR X8, [X0 + 0xB8]
	0x03A8D8A4 LDR X2, [X8 + 0x8]
	0x03A8D8A8 STRB W31, [X31 + 0x220]
	0x03A8D8AC ADD X0, X31, 0x220
	0x03A8D8B0 MOV X1, X31
	0x03A8D8B4 MOV X3, X31
	0x03A8D8B8 BL 0x39B1DB0
	0x03A8D8BC LDRB W8, [X31 + 0x220]
	0x03A8D8C0 LDR X1, [X31 + 0x710]
	0x03A8D8C4 STRB W8, [X31 + 0x430]
	0x03A8D8C8 LDR X8, [X19]
	0x03A8D8CC LDP X9, X3, [X8 + 0x1D8]
	0x03A8D8D0 ADD X2, X31, 0x438
	0x03A8D8D4 MOV X0, X19
	0x03A8D8D8 BLR X9
	0x03A8D8DC MOV X21, X31
	0x03A8D8E0 MOVZ W24, 0xD
	0x03A8D8E4 ADD X0, X31, 0x430
	0x03A8D8E8 MOV X1, X31
	0x03A8D8EC BL 0x39B1DB4
	0x03A8D8F0 CBNZ X21, 0x3A8DAD0
	0x03A8D8F4 CMP W24, 0xD
	0x03A8D8F8 B.EQ 0x3A8D900
	0x03A8D8FC CBNZ W24, 0x3A8DA98
	0x03A8D900 LDR X1, [X31 + 0x710]
	0x03A8D904 ADD X2, X31, 0x438
	0x03A8D908 MOV X0, X19
	0x03A8D90C MOV X3, X31
	0x03A8D910 BL 0x3A4CCB0
	0x03A8D914 ADD X0, X31, 0x708
	0x03A8D918 MOV X1, X31
	0x03A8D91C BL 0x39B1DB4
	0x03A8D920 ADRP X21, 0x6C3000
	0x03A8D924 LDR X21, [X21 + 0xC80]
	0x03A8D928 LDR X0, [X21]
	0x03A8D92C LDR W8, [X0 + 0xE0]
	0x03A8D930 CBNZ W8, 0x3A8D938
	0x03A8D934 BL 0x1C16DFC
	0x03A8D938 ADD X0, X31, 0x710
	0x03A8D93C MOV X1, X20
	0x03A8D940 MOV X2, X31
	0x03A8D944 BL 0x3C58FE4
	0x03A8D948 LDR X0, [X27]
	0x03A8D94C LDR W8, [X0 + 0xE0]
	0x03A8D950 CBNZ W8, 0x3A8D958
	0x03A8D954 BL 0x1C16DFC
	0x03A8D958 MOV X0, X20
	0x03A8D95C MOV X1, X31
	0x03A8D960 BL 0x399D650
	0x03A8D964 ADRP X22, 0x6CA000
	0x03A8D968 LDR X22, [X22 + 0x358]
	0x03A8D96C LDR X0, [X22]
	0x03A8D970 LDR W8, [X0 + 0xE0]
	0x03A8D974 CBNZ W8, 0x3A8D980
	0x03A8D978 BL 0x1C16DFC
	0x03A8D97C LDR X0, [X22]
	0x03A8D980 LDR X8, [X0 + 0xB8]
	0x03A8D984 ADD X0, X31, 0x708
	0x03A8D988 MOV X1, X31
	0x03A8D98C MOV X3, X31
	0x03A8D990 LDR X2, [X8]
	0x03A8D994 BL 0x39B1DB0
	0x03A8D998 LDRB W8, [X19 + 0x1A4]
	0x03A8D99C CBZ W8, 0x3A8DA24
	0x03A8D9A0 LDR X0, [X21]
	0x03A8D9A4 LDR W8, [X0 + 0xE0]
	0x03A8D9A8 CBNZ W8, 0x3A8D9B0
	0x03A8D9AC BL 0x1C16DFC
	0x03A8D9B0 ADD X0, X31, 0x710
	0x03A8D9B4 MOV X1, X31
	0x03A8D9B8 BL 0x3C58A74
	0x03A8D9BC TBNZ X0, 0x0, 0x3A8DA24
	0x03A8D9C0 STRB W31, [X19 + 0x1A4]
	0x03A8D9C4 ADRP X8, 0x68E000
	0x03A8D9C8 LDR X8, [X8 + 0x8F8]
	0x03A8D9CC LDR X0, [X8]
	0x03A8D9D0 LDR W8, [X0 + 0xE0]
	0x03A8D9D4 CBNZ W8, 0x3A8D9DC
	0x03A8D9D8 BL 0x1C16DFC
	0x03A8D9DC ADRP X8, 0x6CA000
	0x03A8D9E0 LDR X8, [X8 + 0x380]
	0x03A8D9E4 LDR X1, [X8]
	0x03A8D9E8 MOV X0, X20
	0x03A8D9EC MOV W2, W31
	0x03A8D9F0 MOV X3, X31
	0x03A8D9F4 BL 0x39E9618
	0x03A8D9F8 ADRP X8, 0x666000
	0x03A8D9FC LDR X8, [X8 + 0xA28]
	0x03A8DA00 LDR X0, [X8]
	0x03A8DA04 LDR W8, [X0 + 0xE0]
	0x03A8DA08 CBNZ W8, 0x3A8DA10
	0x03A8DA0C BL 0x1C16DFC
	0x03A8DA10 ADRP X8, 0x6CA000
	0x03A8DA14 LDR X8, [X8 + 0x370]
	0x03A8DA18 LDR X0, [X8]
	0x03A8DA1C MOV X1, X31
	0x03A8DA20 BL 0x3C06A04
	0x03A8DA24 LDR X0, [X21]
	0x03A8DA28 LDR W8, [X0 + 0xE0]
	0x03A8DA2C CBNZ W8, 0x3A8DA34
	0x03A8DA30 BL 0x1C16DFC
	0x03A8DA34 ADD X0, X31, 0x710
	0x03A8DA38 MOV X1, X31
	0x03A8DA3C BL 0x3C58A20
	0x03A8DA40 ADD X0, X31, 0x708
	0x03A8DA44 MOV X1, X31
	0x03A8DA48 BL 0x39B1DB4
	0x03A8DA4C LDR X0, [X26]
	0x03A8DA50 LDR W8, [X0 + 0xE0]
	0x03A8DA54 CBNZ W8, 0x3A8DA60
	0x03A8DA58 BL 0x1C16DFC
	0x03A8DA5C LDR X0, [X26]
	0x03A8DA60 LDR X8, [X0 + 0xB8]
	0x03A8DA64 STR X31, [X8]
	0x03A8DA68 LDR X8, [X25 + 0x28]
	0x03A8DA6C LDR X9, [X31 + 0xD48]
	0x03A8DA70 CMP X8, X9
	0x03A8DA74 B.NE 0x3A8DAD8
	0x03A8DA78 ADD X31, X31, 0xD50
	0x03A8DA7C LDP X20, X19, [X31 + 0x50]
	0x03A8DA80 LDP X22, X21, [X31 + 0x40]
	0x03A8DA84 LDP X24, X23, [X31 + 0x30]
	0x03A8DA88 LDP X26, X25, [X31 + 0x20]
	0x03A8DA8C LDP X28, X27, [X31 + 0x10]
	0x03A8DA90 LDP X29, X30, [X31], #0x60
	0x03A8DA94 RET
	0x03A8DA98 ADD X0, X31, 0x708
	0x03A8DA9C MOV X1, X31
	0x03A8DAA0 BL 0x39B1DB4
	0x03A8DAA4 CMP W24, 0xC
	0x03A8DAA8 B.EQ 0x3A8D920
	0x03A8DAAC CBZ W24, 0x3A8D920
	0x03A8DAB0 B 0x3A8DA68
	0x03A8DAB4 BL 0x1C16F20
	0x03A8DAB8 MOV X0, X23
	0x03A8DABC BL 0x1C16F18
	0x03A8DAC0 BL 0x1C16F20
	0x03A8DAC4 BL 0x1C16F20
	0x03A8DAC8 BL 0x1C16F20
	0x03A8DACC BL 0x1C16F20
	0x03A8DAD0 MOV X0, X21
	0x03A8DAD4 BL 0x1C16F18
	0x03A8DAD8 BL 0x3EB1B20
	0x03A8DADC B 0x3A8DC50
	0x03A8DAE0 MOV X24, X1
	0x03A8DAE4 CMP W24, 0x1
	0x03A8DAE8 MOV X23, X0
	0x03A8DAEC B.NE 0x3A8DB08
	0x03A8DAF0 MOV X0, X23
	0x03A8DAF4 BL 0x3EB1AD0
	0x03A8DAF8 LDR X21, [X0]
	0x03A8DAFC BL 0x3EB1AE0
	0x03A8DB00 MOV W24, W31
	0x03A8DB04 B 0x3A8D8E4
	0x03A8DB08 MOV X21, X31
	0x03A8DB0C ADD X0, X31, 0x430
	0x03A8DB10 MOV X1, X31
	0x03A8DB14 BL 0x39B1DB4
	0x03A8DB18 CBZ X21, 0x3A8DC58
	0x03A8DB1C MOV X0, X21
	0x03A8DB20 BL 0x1C16F18
	0x03A8DB24 MOV X24, X1
	0x03A8DB28 MOV X23, X0
	0x03A8DB2C B 0x3A8DB0C
	0x03A8DB30 B 0x3A8DC50
	0x03A8DB34 B 0x3A8DC50
	0x03A8DB38 B 0x3A8DC50
	0x03A8DB3C B 0x3A8DC50
	0x03A8DB40 B 0x3A8DC50
	0x03A8DB44 B 0x3A8DC50
	0x03A8DB48 B 0x3A8DC50
	0x03A8DB4C B 0x3A8DC50
	0x03A8DB50 B 0x3A8DBF8
	0x03A8DB54 B 0x3A8DC50
	0x03A8DB58 B 0x3A8DC50
	0x03A8DB5C B 0x3A8DC50
	0x03A8DB60 B 0x3A8DC50
	0x03A8DB64 B 0x3A8DC50
	0x03A8DB68 B 0x3A8DC50
	0x03A8DB6C B 0x3A8DC50
	0x03A8DB70 B 0x3A8DC50
	0x03A8DB74 B 0x3A8DC50
	0x03A8DB78 B 0x3A8DC50
	0x03A8DB7C B 0x3A8DBF8
	0x03A8DB80 B 0x3A8DC50
	0x03A8DB84 B 0x3A8DC50
	0x03A8DB88 B 0x3A8DB8C
	0x03A8DB8C MOV X24, X1
	0x03A8DB90 MOV X23, X0
	0x03A8DB94 CMP W24, 0x1
	0x03A8DB98 B.NE 0x3A8DBBC
	0x03A8DB9C MOV X0, X23
	0x03A8DBA0 BL 0x3EB1AD0
	0x03A8DBA4 LDR X8, [X0]
	0x03A8DBA8 STR X8, [X31 + 0x8]
	0x03A8DBAC BL 0x3EB1AE0
	0x03A8DBB0 LDR X23, [X31 + 0x8]
	0x03A8DBB4 MOV W24, W31
	0x03A8DBB8 B 0x3A8D648
	0x03A8DBBC STR X31, [X31 + 0x8]
	0x03A8DBC0 ADD X0, X31, 0x430
	0x03A8DBC4 MOV X1, X31
	0x03A8DBC8 BL 0x39B1DB4
	0x03A8DBCC LDR X8, [X31 + 0x8]
	0x03A8DBD0 CBZ X8, 0x3A8DC58
	0x03A8DBD4 LDR X0, [X31 + 0x8]
	0x03A8DBD8 BL 0x1C16F18
	0x03A8DBDC MOV X24, X1
	0x03A8DBE0 MOV X23, X0
	0x03A8DBE4 B 0x3A8DBC0
	0x03A8DBE8 B 0x3A8DC50
	0x03A8DBEC B 0x3A8DC50
	0x03A8DBF0 B 0x3A8DC50
	0x03A8DBF4 B 0x3A8DC50
	0x03A8DBF8 MOV X23, X0
	0x03A8DBFC CMP W1, 0x1
	0x03A8DC00 B.NE 0x3A8DC2C
	0x03A8DC04 MOV X0, X23
	0x03A8DC08 BL 0x3EB1AD0
	0x03A8DC0C LDR X19, [X0]
	0x03A8DC10 BL 0x3EB1AE0
	0x03A8DC14 ADD X0, X31, 0x708
	0x03A8DC18 MOV X1, X31
	0x03A8DC1C BL 0x39B1DB4
	0x03A8DC20 CBZ X19, 0x3A8DA4C
	0x03A8DC24 MOV X0, X19
	0x03A8DC28 BL 0x1C16F18
	0x03A8DC2C MOV X19, X31
	0x03A8DC30 B 0x3A8DC38
	0x03A8DC34 MOV X23, X0
	0x03A8DC38 ADD X0, X31, 0x708
	0x03A8DC3C MOV X1, X31
	0x03A8DC40 BL 0x39B1DB4
	0x03A8DC44 CBZ X19, 0x3A8DCA4
	0x03A8DC48 MOV X0, X19
	0x03A8DC4C BL 0x1C16F18
	0x03A8DC50 MOV X24, X1
	0x03A8DC54 MOV X23, X0
	0x03A8DC58 CMP W24, 0x1
	0x03A8DC5C B.NE 0x3A8DC88
	0x03A8DC60 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X23, 0x956000
	011 Move X22, 0x690000
	012 Move W8, [X23+869]
	013 Move X22, [X22+2200]
	014 Move X19, X3
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x66B000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0x667000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x690000
	028 Move X0, [X0+2200]
	029 Call 0x1C17CF4
	030 Move X0, 0x690000
	031 Move X0, [X0+2216]
	032 Call 0x1C17CF4
	033 Move X0, 0x6C4000
	034 Move X0, [X0+1280]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+869], W8
	038 Move X0, [X22]
	039 Move [X31+120], W31
	040 Move X24, 0x690000
	041 Move W8, [X0+224]
	042 Move X24, [X24+2216]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Add X0, X31, 120
	049 Move X1, X31
	050 Move X3, X31
	051 Move X2, [X8+32]
	052 Call ProfilingScope..ctor, X0, X1, X2
	053 Move W2, 528
	054 Move X0, X19
	055 Move W1, W31
	056 Call 0x3EB2B10
	057 Move X0, [X24]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X21
	064 Move X2, X19
	065 Call UniversalRenderPipeline.InitializeStackedCameraData, X0, X1, X2
	066 Move [X19+192], X20
	067 Compare X21, 0
	068 JumpIfEqual {78}
	069 Move X0, X21
	070 Move X1, X31
	071 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X8, [X0+232]
	075 Compare X8, 0
	076 JumpIfEqual {266}
	077 Move W22, [X8+17]
	078 Move W22, W31
	079 Compare X20, 0
	080 JumpIfEqual {263}
	081 Move X0, X20
	082 Move X1, X31
	083 Call Camera.get_allowMSAA, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {99}
	088 Move X0, [X24]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Call UniversalRenderPipeline.get_asset
	094 Compare X0, 0
	095 JumpIfEqual {264}
	096 Move W8, [X0+92]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSET not yet implemented."
	099 Move W8, W31
	100 Move X25, 0x667000
	101 Move X25, [X25+1432]
	102 And W31, W8, W22
	103 Move X0, X20
	104 Move X1, X31
	105 Call Camera.get_targetTexture, X0
	106 Move X21, X0
	107 Move X0, [X25]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {129}
	120 Move X0, X20
	121 Move X1, X31
	122 Call Camera.get_targetTexture, X0
	123 Compare X0, 0
	124 JumpIfEqual {267}
	125 Move X1, X31
	126 Call RenderTexture.get_antiAliasing, X0
	127 Move W21, W0
	128 Move W21, 1
	129 Move X0, [X24]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Call UniversalRenderPipeline.get_asset
	135 Compare X0, 0
	136 JumpIfEqual {268}
	137 Move W21, [X0+92]
	138 Move W8, [X19+370]
	139 And W31, W22, W8
	140 Move X0, X20
	141 Move X1, X31
	142 Call Camera.get_targetTexture, X0
	143 Move X22, X0
	144 Move X0, [X25]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X22
	150 Move X1, X31
	151 Move X2, X31
	152 Call Object.op_Equality, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {181}
	157 Move X21, 0x6C4000
	158 Move X21, [X21+1280]
	159 Move X0, [X21]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X22, 0x956000
	165 Move W8, [X22+978]
	166 Compare W8, 0
	167 JumpIfNotEqual {173}
	168 Move X0, 0x6C4000
	169 Move X0, [X0+1280]
	170 Call 0x1C17CF4
	171 Move W8, 1
	172 Move [X22+978], W8
	173 Move X0, [X21]
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X21]
	179 Move X8, [X0+184]
	180 Move W21, [X8+32]
	181 Move X8, 0x66B000
	182 Move X8, [X8+712]
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X31
	189 Call Graphics.get_preserveFramebufferAlpha
	190 Move W22, W0
	191 Move X0, [X24]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Call UniversalRenderPipeline.get_asset
	197 Move X23, X0
	198 Move X0, [X25]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X23
	204 Move X1, X31
	205 Call Object.op_Implicit, X0
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {219}
	210 Move X0, [X24]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Call UniversalRenderPipeline.get_asset
	216 Compare X0, 0
	217 JumpIfEqual {265}
	218 Move W23, [X0+88]
	219 Move W23, W31
	220 Move [X19+352], W23
	221 Move X0, [X24]
	222 Move W24, [X19+365]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CSET not yet implemented."
	229 And W5, W22, 1
	230 Add X8, X31, 8
	231 Move X0, X20
	232 Move X1, X19
	233 Move W3, W23
	234 Move W4, W21
	235 Move W6, W31
	236 Call UniversalRenderPipeline.CreateRenderTextureDescriptor, X0, X1, X2, X3, X4, X5, X6
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction LDUR not yet implemented."
	240 Move W8, [X31+56]
	241 Add X9, X19, 216
	242 Add X0, X31, 120
	243 Move X1, X31
	244 Move [X31+64], V0
	245 Move [X31+72], V1
	246 Move [X31+6], V2
	247 Move [X31+112], W8
	248 Move [X9+48], W8
	249 Move [X19+248], V2
	250 Move [X19+232], V1
	251 Move [X19+216], V0
	252 Call ProfilingScope.Dispose, X0
	253 Move X20, [X31+176]
	254 Move X19, [X31+184]
	255 Move X22, [X31+160]
	256 Move X21, [X31+168]
	257 Move X24, [X31+144]
	258 Move X23, [X31+152]
	259 Move X30, [X31+128]
	260 Move X25, [X31+136]
	261 Add X31, X31, 192
	262 Return 
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Move X19, X0
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, X19
	272 Call 0x3EB2AD0
	273 Move X20, [X0]
	274 Call 0x3EB2AE0
	275 Add X0, X31, 120
	276 Move X1, X31
	277 Call ProfilingScope.Dispose, X0
	278 Compare X20, 0
	279 JumpIfEqual {253}
	280 Move X0, X20
	281 Call 0x1C17F18
	282 Move X20, X31
	283 Move X19, X0
	284 Add X0, X31, 120
	285 Move X1, X31
	286 Call ProfilingScope.Dispose, X0
	287 Compare X20, 0
	288 JumpIfNotEqual {291}
	289 Move X0, X19
	290 Call 0x1D2D690
	291 Move X0, X20
	292 Call 0x1C17F18
	293 Call 0x1991590

Method: System.Void InitializeStackedCameraData(UnityEngine.Camera baseCamera, UnityEngine.Rendering.Universal.UniversalAdditionalCameraData baseAdditionalCameraData, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A904B0 BL 0x337EE94
	0x03A904B4 STR W0, [X19 + 0x8]
	0x03A904B8 LDR W8, [X20 + 0x88]
	0x03A904BC B 0x3A904C4
	0x03A904C0 STP W31, W31, [X19 + 0x4]
	0x03A904C4 CMP W8, 0x0
	0x03A904C8 CSET W9, NE
	0x03A904CC CMP W8, 0x2
	0x03A904D0 CSET W8, EQ
	0x03A904D4 STRB W9, [X19 + 0x25]
	0x03A904D8 STRB W8, [X19 + 0x20]
	0x03A904DC STP X22, X21, [X19 + 0x10]
	0x03A904E0 LDRB W8, [X20 + 0xEA]
	0x03A904E4 STRB W8, [X19 + 0x21]
	0x03A904E8 LDRB W8, [X20 + 0xA4]
	0x03A904EC STRB W8, [X19 + 0x23]
	0x03A904F0 LDRB W8, [X20 + 0xA5]
	0x03A904F4 STRB W8, [X19 + 0x22]
	0x03A904F8 MOV X0, X31
	0x03A904FC BL 0x3C3BACC
	0x03A90500 ADRP X8, 0x6C4000
	0x03A90504 LDR X8, [X8 + 0x10]
	0x03A90508 MOV W21, W0
	0x03A9050C LDR X0, [X8]
	0x03A90510 LDR W8, [X0 + 0xE0]
	0x03A90514 CBNZ W8, 0x3A9051C
	0x03A90518 BL 0x1C16DFC
	0x03A9051C MOV W0, W21
	0x03A90520 MOV X1, X31
	0x03A90524 BL 0x3A70488
	0x03A90528 TBZ X0, 0x0, 0x3A9053C
	0x03A9052C LDRB W8, [X20 + 0xEC]
	0x03A90530 CMP W8, 0x0
	0x03A90534 CSET W8, NE
	0x03A90538 B 0x3A90540
	0x03A9053C MOV W8, W31
	0x03A90540 ADD X0, X31, 0x8
	0x03A90544 MOV X1, X31
	0x03A90548 STRB W8, [X19 + 0x24]
	0x03A9054C BL 0x39B1DB4
	0x03A90550 LDP X20, X19, [X31 + 0x40]
	0x03A90554 LDP X22, X21, [X31 + 0x30]
	0x03A90558 LDP X24, X23, [X31 + 0x20]
	0x03A9055C LDP X30, X25, [X31 + 0x10]
	0x03A90560 ADD X31, X31, 0x50
	0x03A90564 RET
	0x03A90568 BL 0x1C16F20
	0x03A9056C B 0x3A9058C
	0x03A90570 B 0x3A9058C
	0x03A90574 B 0x3A9058C
	0x03A90578 B 0x3A9058C
	0x03A9057C B 0x3A9058C
	0x03A90580 B 0x3A9058C
	0x03A90584 B 0x3A9058C
	0x03A90588 B 0x3A9058C
	0x03A9058C MOV X19, X0
	0x03A90590 CMP W1, 0x1
	0x03A90594 B.NE 0x3A905C0
	0x03A90598 MOV X0, X19
	0x03A9059C BL 0x3EB1AD0
	0x03A905A0 LDR X20, [X0]
	0x03A905A4 BL 0x3EB1AE0
	0x03A905A8 ADD X0, X31, 0x8
	0x03A905AC MOV X1, X31
	0x03A905B0 BL 0x39B1DB4
	0x03A905B4 CBZ X20, 0x3A90550
	0x03A905B8 MOV X0, X20
	0x03A905BC BL 0x1C16F18
	0x03A905C0 MOV X20, X31
	0x03A905C4 B 0x3A905CC
	0x03A905C8 MOV X19, X0
	0x03A905CC ADD X0, X31, 0x8
	0x03A905D0 MOV X1, X31
	0x03A905D4 BL 0x39B1DB4
	0x03A905D8 CBNZ X20, 0x3A905E4
	0x03A905DC MOV X0, X19
	0x03A905E0 BL 0x1D2C690
	0x03A905E4 MOV X0, X20
	0x03A905E8 BL 0x1C16F18
	0x03A905EC BL 0x1990590
	0x03A905F0 SUB X31, X31, 0x80
	0x03A905F4 STR D8, [X31 + 0x10]
	0x03A905F8 STP X29, X30, [X31 + 0x20]
	0x03A905FC STP X28, X27, [X31 + 0x30]
	0x03A90600 STP X26, X25, [X31 + 0x40]
	0x03A90604 STP X24, X23, [X31 + 0x50]
	0x03A90608 STP X22, X21, [X31 + 0x60]
	0x03A9060C STP X20, X19, [X31 + 0x70]
	0x03A90610 STR W3, [X31 + 0x1C]
	0x03A90614 ADRP X22, 0x952000
	0x03A90618 ADRP X21, 0x68C000
	0x03A9061C LDRB W8, [X22 + 0x369]
	0x03A90620 LDR X21, [X21 + 0x898]
	0x03A90624 MOV X19, X6
	0x03A90628 MOV W26, W5
	0x03A9062C MOV W23, W4
	0x03A90630 MOV X24, X2
	0x03A90634 MOV X25, X1
	0x03A90638 MOV X20, X0
	0x03A9063C TBNZ X8, 0x0, 0x3A906C0
	0x03A90640 ADRP X0, 0x6C7000
	0x03A90644 LDR X0, [X0 + 0x128]
	0x03A90648 BL 0x1C16CF4
	0x03A9064C ADRP X0, 0x664000
	0x03A90650 LDR X0, [X0 + 0xE10]
	0x03A90654 BL 0x1C16CF4
	0x03A90658 ADRP X0, 0x6BD000
	0x03A9065C LDR X0, [X0 + 0xFF0]
	0x03A90660 BL 0x1C16CF4
	0x03A90664 ADRP X0, 0x6BD000
	0x03A90668 LDR X0, [X0 + 0xFF8]
	0x03A9066C BL 0x1C16CF4
	0x03A90670 ADRP X0, 0x66A000
	0x03A90674 LDR X0, [X0 + 0x858]
	0x03A90678 BL 0x1C16CF4
	0x03A9067C ADRP X0, 0x6C6000
	0x03A90680 LDR X0, [X0 + 0x1B8]
	0x03A90684 BL 0x1C16CF4
	0x03A90688 ADRP X0, 0x663000
	0x03A9068C LDR X0, [X0 + 0x598]
	0x03A90690 BL 0x1C16CF4
	0x03A90694 ADRP X0, 0x68C000
	0x03A90698 LDR X0, [X0 + 0x898]
	0x03A9069C BL 0x1C16CF4
	0x03A906A0 ADRP X0, 0x6C4000
	0x03A906A4 LDR X0, [X0 + 0xC30]
	0x03A906A8 BL 0x1C16CF4
	0x03A906AC ADRP X0, 0x68C000
	0x03A906B0 LDR X0, [X0 + 0x8A8]
	0x03A906B4 BL 0x1C16CF4
	0x03A906B8 MOVZ W8, 0x1
	0x03A906BC STRB W8, [X22 + 0x369]
	0x03A906C0 LDR X0, [X21]
	0x03A906C4 STRB W31, [X31 + 0x18]
	0x03A906C8 STR X31, [X31 + 0x8]
	0x03A906CC ADRP X29, 0x68C000
	0x03A906D0 LDR W8, [X0 + 0xE0]
	0x03A906D4 LDR X29, [X29 + 0x8A8]
	0x03A906D8 CBNZ W8, 0x3A906E4
	0x03A906DC BL 0x1C16DFC
	0x03A906E0 LDR X0, [X21]
	0x03A906E4 LDR X8, [X0 + 0xB8]
	0x03A906E8 ADD X0, X31, 0x18
	0x03A906EC MOV X1, X31
	0x03A906F0 MOV X3, X31
	0x03A906F4 LDR X2, [X8 + 0x40]
	0x03A906F8 BL 0x39B1DB0
	0x03A906FC LDR X0, [X29]
	0x03A90700 LDR W8, [X0 + 0xE0]
	0x03A90704 CBNZ W8, 0x3A90710
	0x03A90708 BL 0x1C16DFC
	0x03A9070C LDR X0, [X29]
	0x03A90710 LDR X8, [X0 + 0xB8]
	0x03A90714 LDR X9, [X8 + 0x70]
	0x03A90718 CBZ X9, 0x3A90DE4
	0x03A9071C LDR W10, [X9 + 0x1C]
	0x03A90720 ADD W10, W10, 0x1
	0x03A90724 STP W31, W10, [X9 + 0x18]
	0x03A90728 LDR X8, [X8 + 0x78]
	0x03A9072C CBZ X8, 0x3A90DE8
	0x03A90730 LDR W9, [X8 + 0x1C]
	0x03A90734 CMP W24, 0x1
	0x03A90738 ADD W9, W9, 0x1
	0x03A9073C STP W31, W9, [X8 + 0x18]
	0x03A90740 B.LT 0x3A90BE4
	0x03A90744 STP W26, W23, [X31]
	0x03A90748 ADRP X21, 0x663000
	0x03A9074C ADRP X22, 0x6C4000
	0x03A90750 ADRP X23, 0x664000
	0x03A90754 LDR X21, [X21 + 0x598]
	0x03A90758 LDR X22, [X22 + 0xC30]
	0x03A9075C LDR X23, [X23 + 0xE10]
	0x03A90760 MOV W26, W31
	0x03A90764 ADRP X8, 0x6C6000
	0x03A90768 LDR X8, [X8 + 0x1B8]
	0x03A9076C LDR X3, [X8]
	0x03A90770 MOV X0, X25
	0x03A90774 MOV X1, X24
	0x03A90778 MOV W2, W26
	0x03A9077C BL 0x22222C0
	0x03A90780 MOV X1, X31
	0x03A90784 BL 0x3C5BBF0
	0x03A90788 MOV X27, X0
	0x03A9078C LDR X0, [X21]
	0x03A90790 STR X31, [X31 + 0x8]
	0x03A90794 LDR W8, [X0 + 0xE0]
	0x03A90798 CBNZ W8, 0x3A907A0
	0x03A9079C BL 0x1C16DFC
	0x03A907A0 MOV X0, X27
	0x03A907A4 MOV X1, X31
	0x03A907A8 MOV X2, X31
	0x03A907AC BL 0x3C354F8
	0x03A907B0 TBZ X0, 0x0, 0x3A907DC
	0x03A907B4 CBZ X27, 0x3A90DB0
	0x03A907B8 MOV X0, X27
	0x03A907BC MOV X1, X31
	0x03A907C0 BL 0x3C32ECC
	0x03A907C4 CBZ X0, 0x3A90DB4
	0x03A907C8 ADRP X8, 0x6C7000
	0x03A907CC LDR X8, [X8 + 0x128]
	0x03A907D0 LDR X2, [X8]
	0x03A907D4 ADD X1, X31, 0x8
	0x03A907D8 BL 0x21E6600
	0x03A907DC LDR X0, [X21]
	0x03A907E0 LDR X28, [X31 + 0x8]
	0x03A907E4 LDR W8, [X0 + 0xE0]
	0x03A907E8 CBNZ W8, 0x3A907F0
	0x03A907EC BL 0x1C16DFC
	0x03A907F0 MOV X0, X28
	0x03A907F4 MOV X1, X31
	0x03A907F8 BL 0x3C38948
	0x03A907FC TBZ X0, 0x0, 0x3A90810
	0x03A90800 LDR X8, [X31 + 0x8]
	0x03A90804 CBZ X8, 0x3A90DAC
	0x03A90808 LDRB W8, [X8 + 0x24]
	0x03A9080C CBZ W8, 0x3A90A48
	0x03A90810 LDR X0, [X29]
	0x03A90814 LDR W8, [X0 + 0xE0]
	0x03A90818 CBNZ W8, 0x3A90824
	0x03A9081C BL 0x1C16DFC
	0x03A90820 LDR X0, [X29]
	0x03A90824 CBZ X20, 0x3A90D98
	0x03A90828 LDR X8, [X0 + 0xB8]
	0x03A9082C LDR X0, [X8 + 0x70]
	0x03A90830 CBZ X0, 0x3A90D94
	0x03A90834 ADRP X8, 0x6BD000
	0x03A90838 LDP S0, S1, [X20 + 0xCC]
	0x03A9083C LDR W10, [X0 + 0x1C]
	0x03A90840 LDR X9, [X0 + 0x10]
	0x03A90844 LDR X8, [X8 + 0xFF0]
	0x03A90848 ADD W10, W10, 0x1
	0x03A9084C LDR X8, [X8]
	0x03A90850 STR W10, [X0 + 0x1C]
	0x03A90854 CBZ X9, 0x3A90D90
	0x03A90858 LDRSW X10, [X0 + 0x18]
	0x03A9085C LDR W11, [X9 + 0x18]
	0x03A90860 CMP W10, W11
	0x03A90864 B.CS 0x3A90884
	0x03A90868 ADD W8, W10, 0x1
	0x03A9086C ADD X9, X9, X10, 0x4, LSL
	0x03A90870 STR W8, [X0 + 0x18]
	0x03A90874 STR S0, [X9 + 0x20]
	0x03A90878 STR S1, [X9 + 0x24]
	0x03A9087C STR X31, [X9 + 0x28]
	0x03A90880 B 0x3A9089C
	0x03A90884 LDR X8, [X8 + 0x20]
	0x03A90888 LDR X8, [X8 + 0xC0]
	0x03A9088C LDR X1, [X8 + 0x70]
	0x03A90890 FMOV S2, W31
	0x03A90894 FMOV S3, W31
	0x03A90898 BL 0x30CEE24
	0x03A9089C LDR X0, [X21]
	0x03A908A0 LDR X28, [X31 + 0x8]
	0x03A908A4 LDR W8, [X0 + 0xE0]
	0x03A908A8 CBNZ W8, 0x3A908B0
	0x03A908AC BL 0x1C16DFC
	0x03A908B0 MOV X0, X28
	0x03A908B4 MOV X1, X31
	0x03A908B8 BL 0x3C38948
	0x03A908BC TBZ X0, 0x0, 0x3A9095C
	0x03A908C0 LDR X8, [X31 + 0x8]
	0x03A908C4 CBZ X8, 0x3A90DA8
	0x03A908C8 LDR X0, [X22]
	0x03A908CC LDR W28, [X8 + 0x30]
	0x03A908D0 LDR W9, [X0 + 0xE0]
	0x03A908D4 CBNZ W9, 0x3A908E0
	0x03A908D8 BL 0x1C16DFC
	0x03A908DC LDR X0, [X22]
	0x03A908E0 LDR X8, [X0 + 0xB8]
	0x03A908E4 LDR W8, [X8]
	0x03A908E8 CMP W28, W8
	0x03A908EC B.NE 0x3A9095C
	0x03A908F0 LDR X0, [X29]
	0x03A908F4 LDR W8, [X0 + 0xE0]
	0x03A908F8 CBNZ W8, 0x3A90904
	0x03A908FC BL 0x1C16DFC
	0x03A90900 LDR X0, [X29]
	0x03A90904 CBZ X27, 0x3A90DC4
	0x03A90908 LDR X8, [X0 + 0xB8]
	0x03A9090C LDR X28, [X8 + 0x78]
	0x03A90910 MOV X0, X27
	0x03A90914 MOV X1, X31
	0x03A90918 BL 0x3C16C08
	0x03A9091C MOV W1, W0
	0x03A90920 CBZ X28, 0x3A90DC0
	0x03A90924 LDR W10, [X28 + 0x1C]
	0x03A90928 LDR X8, [X28 + 0x10]
	0x03A9092C LDR X9, [X23]
	0x03A90930 ADD W10, W10, 0x1
	0x03A90934 STR W10, [X28 + 0x1C]
	0x03A90938 CBZ X8, 0x3A90DBC
	0x03A9093C LDRSW X10, [X28 + 0x18]
	0x03A90940 LDR W11, [X8 + 0x18]
	0x03A90944 CMP W10, W11
	0x03A90948 B.CS 0x3A90B80
	0x03A9094C ADD W9, W10, 0x1
	0x03A90950 ADD X8, X8, X10, 0x2, LSL
	0x03A90954 STR W9, [X28 + 0x18]
	0x03A90958 B 0x3A90B78
	0x03A9095C LDR X0, [X21]
	0x03A90960 LDR X27, [X31 + 0x8]
	0x03A90964 LDR W8, [X0 + 0xE0]
	0x03A90968 CBNZ W8, 0x3A90970
	0x03A9096C BL 0x1C16DFC
	0x03A90970 MOV X0, X27
	0x03A90974 MOV X1, X31
	0x03A90978 BL 0x3C38948
	0x03A9097C TBZ X0, 0x0, 0x3A909B4
	0x03A90980 LDR X9, [X31 + 0x8]
	0x03A90984 CBZ X9, 0x3A90DB8
	0x03A90988 LDR X8, [X22]
	0x03A9098C LDR W27, [X9 + 0x30]
	0x03A90990 LDR W10, [X8 + 0xE0]
	0x03A90994 CBNZ W10, 0x3A909A4
	0x03A90998 MOV X0, X8
	0x03A9099C BL 0x1C16DFC
	0x03A909A0 LDR X8, [X22]
	0x03A909A4 LDR X9, [X8 + 0xB8]
	0x03A909A8 LDR W10, [X9]
	0x03A909AC CMP W27, W10
	0x03A909B0 B.NE 0x3A90AD0
	0x03A909B4 LDR X0, [X29]
	0x03A909B8 LDR W8, [X0 + 0xE0]
	0x03A909BC CBNZ W8, 0x3A909C8
	0x03A909C0 BL 0x1C16DFC
	0x03A909C4 LDR X0, [X29]
	0x03A909C8 LDR X8, [X22]
	0x03A909CC LDR X9, [X0 + 0xB8]
	0x03A909D0 LDR W10, [X8 + 0xE0]
	0x03A909D4 LDR X27, [X9 + 0x78]
	0x03A909D8 CBNZ W10, 0x3A909E4
	0x03A909DC MOV X0, X8
	0x03A909E0 BL 0x1C16DFC
	0x03A909E4 CBZ X20, 0x3A90D9C
	0x03A909E8 LDR X8, [X22]
	0x03A909EC LDR X8, [X8 + 0xB8]
	0x03A909F0 LDR W1, [X8 + 0x10]
	0x03A909F4 MOV X0, X20
	0x03A909F8 MOV X2, X31
	0x03A909FC BL 0x3A2C614
	0x03A90A00 MOV W1, W0
	0x03A90A04 CBZ X27, 0x3A90DA0
	0x03A90A08 LDR W10, [X27 + 0x1C]
	0x03A90A0C LDR X8, [X27 + 0x10]
	0x03A90A10 LDR X9, [X23]
	0x03A90A14 ADD W10, W10, 0x1
	0x03A90A18 STR W10, [X27 + 0x1C]
	0x03A90A1C CBZ X8, 0x3A90DA4
	0x03A90A20 LDRSW X10, [X27 + 0x18]
	0x03A90A24 LDR W11, [X8 + 0x18]
	0x03A90A28 CMP W10, W11
	0x03A90A2C B.CC 0x3A90B6C
	0x03A90A30 LDR X8, [X9 + 0x20]
	0x03A90A34 LDR X8, [X8 + 0xC0]
	0x03A90A38 LDR X2, [X8 + 0x70]
	0x03A90A3C MOV X0, X27
	0x03A90A40 BL 0x2FDC70C
	0x03A90A44 B 0x3A90BD0
	0x03A90A48 LDR X0, [X29]
	0x03A90A4C LDR W8, [X0 + 0xE0]
	0x03A90A50 CBNZ W8, 0x3A90A5C
	0x03A90A54 BL 0x1C16DFC
	0x03A90A58 LDR X0, [X29]
	0x03A90A5C CBZ X27, 0x3A90DD0
	0x03A90A60 LDR X8, [X0 + 0xB8]
	0x03A90A64 LDR X28, [X8 + 0x70]
	0x03A90A68 MOV X0, X27
	0x03A90A6C MOV X1, X31
	0x03A90A70 BL 0x3C169B0
	0x03A90A74 MOV V8.16B, V0.16B
	0x03A90A78 MOV X0, X27
	0x03A90A7C MOV X1, X31
	0x03A90A80 BL 0x3C169EC
	0x03A90A84 CBZ X28, 0x3A90DC8
	0x03A90A88 ADRP X8, 0x6BD000
	0x03A90A8C LDR W10, [X28 + 0x1C]
	0x03A90A90 LDR X9, [X28 + 0x10]
	0x03A90A94 LDR X8, [X8 + 0xFF0]
	0x03A90A98 ADD W10, W10, 0x1
	0x03A90A9C LDR X8, [X8]
	0x03A90AA0 STR W10, [X28 + 0x1C]
	0x03A90AA4 CBZ X9, 0x3A90DCC
	0x03A90AA8 LDRSW X10, [X28 + 0x18]
	0x03A90AAC LDR W11, [X9 + 0x18]
	0x03A90AB0 MOV V1.16B, V0.16B
	0x03A90AB4 CMP W10, W11
	0x03A90AB8 B.CS 0x3A90B98
	0x03A90ABC ADD W8, W10, 0x1
	0x03A90AC0 ADD X9, X9, X10, 0x4, LSL
	0x03A90AC4 STR W8, [X28 + 0x18]
	0x03A90AC8 STR S8, [X9 + 0x20]
	0x03A90ACC B 0x3A90878
	0x03A90AD0 LDR X10, [X31 + 0x8]
	0x03A90AD4 CBZ X10, 0x3A90DE0
	0x03A90AD8 LDR W11, [X8 + 0xE0]
	0x03A90ADC LDR W27, [X10 + 0x30]
	0x03A90AE0 CBNZ W11, 0x3A90AF4
	0x03A90AE4 MOV X0, X8
	0x03A90AE8 BL 0x1C16DFC
	0x03A90AEC LDR X8, [X22]
	0x03A90AF0 LDR X9, [X8 + 0xB8]
	0x03A90AF4 LDR X0, [X29]
	0x03A90AF8 LDR W8, [X9 + 0xC]
	0x03A90AFC LDR W9, [X9 + 0x4]
	0x03A90B00 LDR W10, [X0 + 0xE0]
	0x03A90B04 CMP W27, W8
	0x03A90B08 CSEL W8, W8, W27, GT
	0x03A90B0C CMP W27, W9
	0x03A90B10 CSEL W28, W9, W8, LT
	0x03A90B14 CBNZ W10, 0x3A90B20
	0x03A90B18 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x953000
	015 Move X21, 0x68D000
	016 Move W8, [X23+870]
	017 Move X21, [X21+2200]
	018 Move X19, X2
	019 Move X22, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0x6C4000
	026 Move X0, [X0+1024]
	027 Call 0x1C17CF4
	028 Move X0, 0x664000
	029 Move X0, [X0+1448]
	030 Call 0x1C17CF4
	031 Move X0, 0x664000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x68D000
	035 Move X0, [X0+2200]
	036 Call 0x1C17CF4
	037 Move X0, 0x68D000
	038 Move X0, [X0+2216]
	039 Call 0x1C17CF4
	040 Move X0, 0x6C1000
	041 Move X0, [X0+1280]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+870], W8
	045 Move X0, [X21]
	046 Move [X31+8], W31
	047 Move X25, 0x68D000
	048 Move W8, [X0+224]
	049 Move X25, [X25+2216]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Add X0, X31, 8
	056 Move X1, X31
	057 Move X3, X31
	058 Move X2, [X8+40]
	059 Call ProfilingScope..ctor, X0, X1, X2
	060 Move X0, [X25]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Call UniversalRenderPipeline.get_asset
	066 Compare X20, 0
	067 JumpIfEqual {375}
	068 Move X21, X0
	069 Move X0, X20
	070 Move X1, X31
	071 Call Camera.get_targetTexture, X0
	072 Move [X19+208], X0
	073 Move X0, X20
	074 Move X1, X31
	075 Call Camera.get_cameraType, X0
	076 Move X24, 0x6C1000
	077 Move X24, [X24+1280]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X19+360], W0
	080 Move W0, 1
	081 Move X1, X31
	082 Call LayerMask.op_Implicit, X0
	083 Move X9, -49946624
	084 Move V0, [X9+1800]
	085 Add X9, X19, 428
	086 Move W8, W31
	087 Move [X19+408], W0
	088 Move [X19+416], X31
	089 NotImplemented "Instruction STRH not yet implemented."
	090 Move [X9], D0
	091 Move [X19+370], W31
	092 Move X23, 0x664000
	093 Move X23, [X23+1432]
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X22
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {128}
	107 Compare X22, 0
	108 JumpIfEqual {378}
	109 Move W8, [X22+60]
	110 Move [X19+408], W8
	111 Move X0, [X23]
	112 Move X23, [X22+64]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X23
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Equality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {148}
	125 Move X0, X20
	126 Move X1, X31
	127 Call Component.get_transform, X0
	128 Move W0, 1
	129 Move X1, X31
	130 Call LayerMask.op_Implicit, X0
	131 Move X8, -49946624
	132 Move V0, [X8+1800]
	133 Add X8, X19, 428
	134 Move [X19+408], W0
	135 Move [X19+416], X31
	136 NotImplemented "Instruction STRH not yet implemented."
	137 Move [X8], D0
	138 Move X0, [X24]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X31
	144 Call XRSystem.get_displayActive
	145 And W8, W0, 1
	146 Move [X19+370], W8
	147 Move W8, 1
	148 Move X0, [X22+64]
	149 Move [X19+416], X0
	150 Move W8, [X22+88]
	151 Compare W8, 0
	152 JumpIfEqual {157}
	153 Move X0, X31
	154 Call SystemInfo.get_graphicsShaderLevel
	155 NotImplemented "Instruction CMP not yet implemented."
	156 NotImplemented "Instruction CSET not yet implemented."
	157 Move [X19+424], W8
	158 Move W8, [X22+89]
	159 Move [X19+425], W8
	160 Move V0, [X22+80]
	161 Add X8, X19, 428
	162 Move [X8], D0
	163 Move W8, [X22+91]
	164 Compare W8, 0
	165 JumpIfEqual {174}
	166 Move X0, [X24]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X31
	172 Call XRSystem.get_displayActive
	173 And W8, W0, 1
	174 Move [X19+370], W8
	175 Move W8, [X22+92]
	176 Move [X19+366], W8
	177 Move X0, X20
	178 Move X1, X31
	179 Call Camera.get_allowHDR, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {188}
	184 Compare X21, 0
	185 JumpIfEqual {376}
	186 Move W8, [X21+85]
	187 Move [X19+365], W8
	188 Move [X19+365], W31
	189 Compare X21, 0
	190 JumpIfEqual {377}
	191 Move W8, [X19+366]
	192 Move W9, [X21+85]
	193 And W8, W9, W8
	194 Move [X19+366], W8
	195 Move X0, X20
	196 Move X1, X31
	197 Call Camera.get_rect, X0
	198 Move V11, V0
	199 Move V10, V1
	200 Move V9, V2
	201 Move V8, V3
	202 Move X0, X20
	203 Move X1, X31
	204 Call Camera.get_pixelRect, X0
	205 Move [X19+268], S0
	206 Move [X19+272], S1
	207 Move [X19+276], S2
	208 Move [X19+280], S3
	209 Move X0, X20
	210 Move X1, X31
	211 Call Camera.get_pixelWidth, X0
	212 Move [X19+320], W0
	213 Move X0, X20
	214 Move X1, X31
	215 Call Camera.get_pixelHeight, X0
	216 Move V0, [X19+320]
	217 Move X23, 0x664000
	218 Move X23, [X23+1448]
	219 NotImplemented "Instruction SCVTF not yet implemented."
	220 NotImplemented "Instruction SCVTF not yet implemented."
	221 NotImplemented "Instruction FDIV not yet implemented."
	222 Move [X19+324], W0
	223 Move [X19+328], S0
	224 Move X0, [X23]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 NotImplemented "Instruction FCMP not yet implemented."
	230 NotImplemented "Instruction CSEL not yet implemented."
	231 Move W8, W31
	232 NotImplemented "Instruction CSEL not yet implemented."
	233 Move X9, X19
	234 Move X0, [X23]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move W8, W31
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move X9, X19
	242 Move X0, [X23]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 NotImplemented "Instruction FABS not yet implemented."
	248 Move S1, 1
	249 NotImplemented "Instruction FCMP not yet implemented."
	250 Move W8, W31
	251 Move X0, [X23]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 NotImplemented "Instruction FABS not yet implemented."
	257 Move S1, 1
	258 NotImplemented "Instruction FCMP not yet implemented."
	259 NotImplemented "Instruction CSET not yet implemented."
	260 Move X9, X22
	261 Move [X9+364], W8
	262 Move W8, [X19+360]
	263 Move W23, 1
	264 NotImplemented "Instruction CMP not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction CSET not yet implemented."
	268 Move V0, [X21+96]
	269 Move X8, -49958912
	270 Move V1, [X8+512]
	271 Move S2, 1
	272 NotImplemented "Instruction FABD not yet implemented."
	273 Move V10, [X19+320]
	274 NotImplemented "Instruction FCMP not yet implemented."
	275 NotImplemented "Instruction CSET not yet implemented."
	276 Or W8, W23, W8
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction FCSEL not yet implemented."
	279 Move [X19+332], S8
	280 Move X0, [X25]
	281 Move V9, [X19+324]
	282 Move W22, [X21+100]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 NotImplemented "Instruction SCVTF not yet implemented."
	288 NotImplemented "Instruction SCVTF not yet implemented."
	289 Move V2, V8
	290 Move W0, W22
	291 Call UniversalRenderPipeline.ResolveUpscalingFilterSelection, X0, V0, X1
	292 Move V0, [X19+332]
	293 Move S1, 1
	294 Move [X19+340], W0
	295 NotImplemented "Instruction FCMP not yet implemented."
	296 Move W8, 2
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CSET not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 NotImplemented "Instruction CSET not yet implemented."
	301 And W8, W8, W9
	302 Move TEMP, X8
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {309}
	306 Move S1, 1
	307 NotImplemented "Instruction FCMP not yet implemented."
	308 Move [X19+336], W31
	309 Move W8, 1
	310 Move [X19+336], W8
	311 Move W8, [X21+104]
	312 Move [X19+344], W8
	313 Move V1, [X21+108]
	314 Move [X19+348], S1
	315 Move X0, [X24]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {322}
	319 Call 0x1C17DFC
	320 Move X0, [X24]
	321 Move V0, [X19+332]
	322 Move X8, [X0+184]
	323 Move X8, [X8+64]
	324 Move [X19+376], X8
	325 Move X0, X31
	326 Call XRSystem.SetRenderScale, V0
	327 Move X0, X31
	328 Call SystemInfo.get_hasHiddenSurfaceRemovalOnGPU
	329 Move W21, W0
	330 Move X0, X20
	331 Move X1, X31
	332 Call Camera.get_opaqueSortMode, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction CSET not yet implemented."
	335 And W8, W21, W8
	336 Move TEMP, X8
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {344}
	340 Move X0, X20
	341 Move X1, X31
	342 Call Camera.get_opaqueSortMode, X0
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move W8, 51
	345 Move W8, 59
	346 Move X9, 0x6C4000
	347 Move X9, [X9+1024]
	348 Move [X19+372], W8
	349 Move X0, [X9]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, X20
	355 Move X1, X31
	356 Call CameraCaptureBridge.GetCaptureActions, X0
	357 Move [X19+400], X0
	358 Add X0, X31, 8
	359 Move X1, X31
	360 Call ProfilingScope.Dispose, X0
	361 Move X20, [X31+96]
	362 Move X19, [X31+104]
	363 Move X22, [X31+80]
	364 Move X21, [X31+88]
	365 Move X24, [X31+64]
	366 Move X23, [X31+72]
	367 Move X30, [X31+48]
	368 Move X25, [X31+56]
	369 Move D9, [X31+32]
	370 Move D8, [X31+40]
	371 Move D11, [X31+16]
	372 Move D10, [X31+24]
	373 Add X31, X31, 112
	374 Return 
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Move X19, X0
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X0, X19
	382 Call 0x3EB2AD0
	383 Move X20, [X0]
	384 Call 0x3EB2AE0
	385 Add X0, X31, 8
	386 Move X1, X31
	387 Call ProfilingScope.Dispose, X0
	388 Compare X20, 0
	389 JumpIfEqual {361}
	390 Move X0, X20
	391 Call 0x1C17F18
	392 Move X20, X31
	393 Move X19, X0
	394 Add X0, X31, 8
	395 Move X1, X31
	396 Call ProfilingScope.Dispose, X0
	397 Compare X20, 0
	398 JumpIfNotEqual {401}
	399 Move X0, X19
	400 Call 0x1D2D690
	401 Move X0, X20
	402 Call 0x1C17F18
	403 Call 0x1991590

Method: System.Void InitializeAdditionalCameraData(UnityEngine.Camera camera, UnityEngine.Rendering.Universal.UniversalAdditionalCameraData additionalCameraData, System.Boolean resolveFinalTarget, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8DC64 BL 0x3EB1AD0
	0x03A8DC68 LDR X21, [X0]
	0x03A8DC6C BL 0x3EB1AE0
	0x03A8DC70 ADD X0, X31, 0x708
	0x03A8DC74 MOV X1, X31
	0x03A8DC78 BL 0x39B1DB4
	0x03A8DC7C CBZ X21, 0x3A8D920
	0x03A8DC80 MOV X0, X21
	0x03A8DC84 BL 0x1C16F18
	0x03A8DC88 MOV X21, X31
	0x03A8DC8C B 0x3A8DC94
	0x03A8DC90 MOV X23, X0
	0x03A8DC94 ADD X0, X31, 0x708
	0x03A8DC98 MOV X1, X31
	0x03A8DC9C BL 0x39B1DB4
	0x03A8DCA0 CBNZ X21, 0x3A8DCAC
	0x03A8DCA4 MOV X0, X23
	0x03A8DCA8 BL 0x1D2C690
	0x03A8DCAC MOV X0, X21
	0x03A8DCB0 BL 0x1C16F18
	0x03A8DCB4 BL 0x1990590
	0x03A8DCB8 SUB X31, X31, 0x70
	0x03A8DCBC STR X30, [X31 + 0x40]
	0x03A8DCC0 STP X22, X21, [X31 + 0x50]
	0x03A8DCC4 STP X20, X19, [X31 + 0x60]
	0x03A8DCC8 ADRP X21, 0x955000
	0x03A8DCCC LDRB W8, [X21 + 0x35D]
	0x03A8DCD0 MOV X19, X1
	0x03A8DCD4 MOV X20, X0
	0x03A8DCD8 TBNZ X8, 0x0, 0x3A8DCFC
	0x03A8DCDC ADRP X0, 0x6C3000
	0x03A8DCE0 LDR X0, [X0 + 0x680]
	0x03A8DCE4 BL 0x1C16CF4
	0x03A8DCE8 ADRP X0, 0x6C3000
	0x03A8DCEC LDR X0, [X0 + 0x578]
	0x03A8DCF0 BL 0x1C16CF4
	0x03A8DCF4 MOVZ W8, 0x1
	0x03A8DCF8 STRB W8, [X21 + 0x35D]
	0x03A8DCFC LDR X0, [X20 + 0x178]
	0x03A8DD00 CBZ X0, 0x3A8DE30
	0x03A8DD04 MOV X1, X31
	0x03A8DD08 BL 0x3984C98
	0x03A8DD0C TBZ X0, 0x0, 0x3A8DE08
	0x03A8DD10 LDR X8, [X20 + 0x178]
	0x03A8DD14 CBZ X8, 0x3A8DE30
	0x03A8DD18 ADD X1, X8, 0x90
	0x03A8DD1C MOVZ W2, 0x630
	0x03A8DD20 MOV X0, X19
	0x03A8DD24 BL 0x3EB1B30
	0x03A8DD28 LDR X0, [X20 + 0xC0]
	0x03A8DD2C CBZ X0, 0x3A8DE30
	0x03A8DD30 MOV X1, X31
	0x03A8DD34 BL 0x3C03D98
	0x03A8DD38 TBNZ X0, 0x0, 0x3A8DDF0
	0x03A8DD3C ADRP X21, 0x6C3000
	0x03A8DD40 LDR X21, [X21 + 0x578]
	0x03A8DD44 LDR X0, [X21]
	0x03A8DD48 LDR W8, [X0 + 0xE0]
	0x03A8DD4C CBNZ W8, 0x3A8DD54
	0x03A8DD50 BL 0x1C16DFC
	0x03A8DD54 ADRP X22, 0x954000
	0x03A8DD58 LDRB W8, [X22 + 0xB3D]
	0x03A8DD5C CBNZ W8, 0x3A8DD74
	0x03A8DD60 ADRP X0, 0x6C3000
	0x03A8DD64 LDR X0, [X0 + 0x578]
	0x03A8DD68 BL 0x1C16CF4
	0x03A8DD6C MOVZ W8, 0x1
	0x03A8DD70 STRB W8, [X22 + 0xB3D]
	0x03A8DD74 LDR X0, [X21]
	0x03A8DD78 LDR W8, [X0 + 0xE0]
	0x03A8DD7C CBNZ W8, 0x3A8DD88
	0x03A8DD80 BL 0x1C16DFC
	0x03A8DD84 LDR X0, [X21]
	0x03A8DD88 LDR X8, [X0 + 0xB8]
	0x03A8DD8C LDRB W8, [X8]
	0x03A8DD90 CBNZ W8, 0x3A8DDF0
	0x03A8DD94 ADRP X8, 0x6C3000
	0x03A8DD98 LDR X8, [X8 + 0x680]
	0x03A8DD9C LDR X20, [X20 + 0xC0]
	0x03A8DDA0 LDR X0, [X8]
	0x03A8DDA4 LDR W8, [X0 + 0xE0]
	0x03A8DDA8 CBNZ W8, 0x3A8DDB0
	0x03A8DDAC BL 0x1C16DFC
	0x03A8DDB0 ADD X8, X31, 0x0
	0x03A8DDB4 MOV X0, X19
	0x03A8DDB8 MOV X1, X31
	0x03A8DDBC BL 0x3C51EE0
	0x03A8DDC0 CBZ X20, 0x3A8DE30
	0x03A8DDC4 LDR V0, [X31 + 0x14]
	0x03A8DDC8 FMOV S1, 1
	0x03A8DDCC FDIV S0, S1, S0
	0x03A8DDD0 BL 0x3EB1BE0
	0x03A8DDD4 ADRP X8, 0xFFFFFFFFFD05D000
	0x03A8DDD8 LDR V1, [X8 + 0x448]
	0x03A8DDDC MOV X0, X20
	0x03A8DDE0 MOV X1, X31
	0x03A8DDE4 FMUL S0, S0, S1
	0x03A8DDE8 FADD S0, S0, S0
	0x03A8DDEC BL 0x3C03690
	0x03A8DDF0 LDP X20, X19, [X31 + 0x60]
	0x03A8DDF4 LDP X22, X21, [X31 + 0x50]
	0x03A8DDF8 LDR X30, [X31 + 0x40]
	0x03A8DDFC MOVZ W0, 0x1
	0x03A8DE00 ADD X31, X31, 0x70
	0x03A8DE04 RET
	0x03A8DE08 LDR X0, [X20 + 0xC0]
	0x03A8DE0C CBZ X0, 0x3A8DE30
	0x03A8DE10 MOV X2, X19
	0x03A8DE14 LDP X20, X19, [X31 + 0x60]
	0x03A8DE18 LDP X22, X21, [X31 + 0x50]
	0x03A8DE1C LDR X30, [X31 + 0x40]
	0x03A8DE20 MOV W1, W31
	0x03A8DE24 MOV X3, X31
	0x03A8DE28 ADD X31, X31, 0x70
	0x03A8DE2C B 0x3C04EE0
	0x03A8DE30 BL 0x1C16F20
	0x03A8DE34 LDR W8, [X0 + 0x168]
	0x03A8DE38 CMP W8, 0x2
	0x03A8DE3C CSET W0, EQ
	0x03A8DE40 RET
	0x03A8DE44 STR X30, [X31 - 0x30]!
	0x03A8DE48 STP X22, X21, [X31 + 0x10]
	0x03A8DE4C STP X20, X19, [X31 + 0x20]
	0x03A8DE50 ADRP X19, 0x955000
	0x03A8DE54 LDRB W8, [X19 + 0x380]
	0x03A8DE58 MOV X20, X0
	0x03A8DE5C TBNZ X8, 0x0, 0x3A8DEA4
	0x03A8DE60 ADRP X0, 0x6C3000
	0x03A8DE64 LDR X0, [X0 + 0xDA8]
	0x03A8DE68 BL 0x1C16CF4
	0x03A8DE6C ADRP X0, 0x6C3000
	0x03A8DE70 LDR X0, [X0 + 0xDB0]
	0x03A8DE74 BL 0x1C16CF4
	0x03A8DE78 ADRP X0, 0x6C3000
	0x03A8DE7C LDR X0, [X0 + 0x598]
	0x03A8DE80 BL 0x1C16CF4
	0x03A8DE84 ADRP X0, 0x6CA000
	0x03A8DE88 LDR X0, [X0 + 0x360]
	0x03A8DE8C BL 0x1C16CF4
	0x03A8DE90 ADRP X0, 0x6CA000
	0x03A8DE94 LDR X0, [X0 + 0x388]
	0x03A8DE98 BL 0x1C16CF4
	0x03A8DE9C MOVZ W8, 0x1
	0x03A8DEA0 STRB W8, [X19 + 0x380]
	0x03A8DEA4 STR X31, [X31 + 0x8]
	0x03A8DEA8 CBZ X20, 0x3A8DFA8
	0x03A8DEAC LDR X8, [X20]
	0x03A8DEB0 ADRP X22, 0x6CA000
	0x03A8DEB4 MOV X0, X20
	0x03A8DEB8 LDP X9, X1, [X8 + 0x158]
	0x03A8DEBC LDR X22, [X22 + 0x360]
	0x03A8DEC0 BLR X9
	0x03A8DEC4 LDR X8, [X22]
	0x03A8DEC8 MOV W19, W0
	0x03A8DECC LDR W9, [X8 + 0xE0]
	0x03A8DED0 CBNZ W9, 0x3A8DEE0
	0x03A8DED4 MOV X0, X8
	0x03A8DED8 BL 0x1C16DFC
	0x03A8DEDC LDR X8, [X22]
	0x03A8DEE0 LDR X8, [X8 + 0xB8]
	0x03A8DEE4 LDR X0, [X8]
	0x03A8DEE8 CBZ X0, 0x3A8DFA8
	0x03A8DEEC ADRP X8, 0x6C3000
	0x03A8DEF0 LDR X8, [X8 + 0xDB0]
	0x03A8DEF4 ADD X2, X31, 0x8
	0x03A8DEF8 MOV W1, W19
	0x03A8DEFC LDR X3, [X8]
	0x03A8DF00 BL 0x2A150AC
	0x03A8DF04 TBNZ X0, 0x0, 0x3A8DF94
	0x03A8DF08 MOV X0, X20
	0x03A8DF0C MOV X1, X31
	0x03A8DF10 BL 0x3C389D4
	0x03A8DF14 ADRP X8, 0x6CA000
	0x03A8DF18 LDR X8, [X8 + 0x388]
	0x03A8DF1C MOV X1, X0
	0x03A8DF20 MOV X2, X31
	0x03A8DF24 LDR X8, [X8]
	0x03A8DF28 MOV X0, X8
	0x03A8DF2C BL 0x321B938
	0x03A8DF30 ADRP X8, 0x6C3000
	0x03A8DF34 LDR X8, [X8 + 0x598]
	0x03A8DF38 MOV X20, X0
	0x03A8DF3C LDR X8, [X8]
	0x03A8DF40 MOV X0, X8
	0x03A8DF44 BL 0x1C16F10
	0x03A8DF48 MOV X1, X20
	0x03A8DF4C MOV X2, X31
	0x03A8DF50 MOV X21, X0
	0x03A8DF54 BL 0x39B19AC
	0x03A8DF58 LDR X0, [X22]
	0x03A8DF5C STR X21, [X31 + 0x8]
	0x03A8DF60 LDR W8, [X0 + 0xE0]
	0x03A8DF64 CBNZ W8, 0x3A8DF70
	0x03A8DF68 BL 0x1C16DFC
	0x03A8DF6C LDR X0, [X22]
	0x03A8DF70 LDR X8, [X0 + 0xB8]
	0x03A8DF74 LDR X0, [X8]
	0x03A8DF78 CBZ X0, 0x3A8DFA8
	0x03A8DF7C ADRP X8, 0x6C3000
	0x03A8DF80 LDR X2, [X31 + 0x8]
	0x03A8DF84 LDR X8, [X8 + 0xDA8]
	0x03A8DF88 MOV W1, W19
	0x03A8DF8C LDR X3, [X8]
	0x03A8DF90 BL 0x2A1368C
	0x03A8DF94 LDR X0, [X31 + 0x8]
	0x03A8DF98 LDP X20, X19, [X31 + 0x20]
	0x03A8DF9C LDP X22, X21, [X31 + 0x10]
	0x03A8DFA0 LDR X30, [X31], #0x30
	0x03A8DFA4 RET
	0x03A8DFA8 BL 0x1C16F20
	0x03A8DFAC SUB X31, X31, 0x160
	0x03A8DFB0 STP D11, D10, [X31 + 0x110]
	0x03A8DFB4 STP D9, D8, [X31 + 0x120]
	0x03A8DFB8 STR X29, [X31 + 0x130]
	0x03A8DFBC STP X30, X21, [X31 + 0x140]
	0x03A8DFC0 STP X20, X19, [X31 + 0x150]
	0x03A8DFC4 ADRP X21, 0x955000
	0x03A8DFC8 ADRP X20, 0x68F000
	0x03A8DFCC LDRB W8, [X21 + 0x36F]
	0x03A8DFD0 LDR X20, [X20 + 0x898]
	0x03A8DFD4 MOV X19, X0
	0x03A8DFD8 TBNZ X8, 0x0, 0x3A8E014
	0x03A8DFDC ADRP X0, 0x68E000
	0x03A8DFE0 LDR X0, [X0 + 0x8F8]
	0x03A8DFE4 BL 0x1C16CF4
	0x03A8DFE8 ADRP X0, 0x68F000
	0x03A8DFEC LDR X0, [X0 + 0x898]
	0x03A8DFF0 BL 0x1C16CF4
	0x03A8DFF4 ADRP X0, 0x6C6000
	0x03A8DFF8 LDR X0, [X0 + 0x2F8]
	0x03A8DFFC BL 0x1C16CF4
	0x03A8E000 ADRP X0, 0x6C6000
	0x03A8E004 LDR X0, [X0 + 0x20]
	0x03A8E008 BL 0x1C16CF4
	0x03A8E00C MOVZ W8, 0x1
	0x03A8E010 STRB W8, [X21 + 0x36F]
	0x03A8E014 LDR X0, [X20]
	0x03A8E018 MOVI V0.2D, 0x0
	0x03A8E01C STRB W31, [X31 + 0x138]
	0x03A8E020 STUR V0, [X31 + 0xFC]
	0x03A8E024 STP V0, V0, [X31 + 0xE0]
	0x03A8E028 STP V0, V0, [X31 + 0xC0]
	0x03A8E02C STP V0, V0, [X31 + 0xA0]
	0x03A8E030 LDR W8, [X0 + 0xE0]
	0x03A8E034 CBNZ W8, 0x3A8E040
	0x03A8E038 BL 0x1C16DFC
	0x03A8E03C LDR X0, [X20]
	0x03A8E040 LDR X8, [X0 + 0xB8]
	0x03A8E044 ADD X0, X31, 0x138
	0x03A8E048 MOV X1, X31
	0x03A8E04C MOV X3, X31
	0x03A8E050 LDR X2, [X8 + 0x68]
	0x03A8E054 BL 0x39B1DB0
	0x03A8E058 ADD X8, X31, 0x30
	0x03A8E05C MOV X0, X31
	0x03A8E060 BL 0x3C13D70
	0x03A8E064 ADD X0, X31, 0xA0
	0x03A8E068 ADD X1, X31, 0x30
	0x03A8E06C MOVZ W2, 0x6C
	0x03A8E070 BL 0x3EB1AC0
	0x03A8E074 ADD X0, X31, 0xA0
	0x03A8E078 MOV W1, W31
	0x03A8E07C MOV W2, W31
	0x03A8E080 MOV X3, X31
	0x03A8E084 BL 0x3C50050
	0x03A8E088 MOV V8.16B, V0.16B
	0x03A8E08C ADD X0, X31, 0xA0
	0x03A8E090 MOVZ W1, 0x1
	0x03A8E094 MOV W2, W31
	0x03A8E098 MOV X3, X31
	0x03A8E09C BL 0x3C50050
	0x03A8E0A0 MOV V9.16B, V0.16B
	0x03A8E0A4 ADD X0, X31, 0xA0
	0x03A8E0A8 MOVZ W1, 0x2
	0x03A8E0AC MOV W2, W31
	0x03A8E0B0 MOV X3, X31
	0x03A8E0B4 BL 0x3C50050
	0x03A8E0B8 MOV V10.16B, V0.16B
	0x03A8E0BC MOV X0, X31
	0x03A8E0C0 BL 0x3C13E18
	0x03A8E0C4 ADRP X8, 0x68D000
	0x03A8E0C8 LDR X8, [X8 + 0x8F8]
	0x03A8E0CC MOV V11.16B, V0.16B
	0x03A8E0D0 LDR X0, [X8]
	0x03A8E0D4 LDR W8, [X0 + 0xE0]
	0x03A8E0D8 CBNZ W8, 0x3A8E0E0
	0x03A8E0DC BL 0x1C16DFC
	0x03A8E0E0 FMUL S0, S8, S11
	0x03A8E0E4 FMUL S1, S9, S11
	0x03A8E0E8 FMUL S2, S10, S11
	0x03A8E0EC MOV V3.16B, V11.16B
	0x03A8E0F0 MOV X0, X31
	0x03A8E0F4 BL 0x39E9460
	0x03A8E0F8 ADRP X21, 0x6C6000
	0x03A8E0FC LDR X21, [X21 + 0x20]
	0x03A8E100 MOV V8.16B, V0.16B
	0x03A8E104 MOV V9.16B, V1.16B
	0x03A8E108 MOV V10.16B, V2.16B
	0x03A8E10C LDR X0, [X21]
	0x03A8E110 MOV V11.16B, V3.16B
	0x03A8E114 LDR W8, [X0 + 0xE0]
	0x03A8E118 CBNZ W8, 0x3A8E120
	0x03A8E11C BL 0x1C16DFC
	0x03A8E120 CBZ X19, 0x3A8E2A4
	0x03A8E124 LDR X8, [X21]
	0x03A8E128 LDR X8, [X8 + 0xB8]
	0x03A8E12C LDR W1, [X8]
	0x03A8E130 MOV X0, X19
	0x03A8E134 MOV V0.16B, V8.16B
	0x03A8E138 MOV V1.16B, V9.16B
	0x03A8E13C MOV V2.16B, V10.16B
	0x03A8E140 MOV V3.16B, V11.16B
	0x03A8E144 MOV X2, X31
	0x03A8E148 BL 0x3C4CED8
	0x03A8E14C ADRP X9, 0x6C5000
	0x03A8E150 LDR X8, [X21]
	0x03A8E154 LDR X9, [X9 + 0x2F8]
	0x03A8E158 LDR X8, [X8 + 0xB8]
	0x03A8E15C LDR X0, [X9]
	0x03A8E160 LDR W20, [X8 + 0x8]
	0x03A8E164 LDR W9, [X0 + 0xE0]
	0x03A8E168 CBNZ W9, 0x3A8E170
	0x03A8E16C BL 0x1C16DFC
	0x03A8E170 MOV X0, X31
	0x03A8E174 BL 0x3C056E8
	0x03A8E178 ADD X8, X31, 0x30
	0x03A8E17C MOV X1, X31
	0x03A8E180 BL 0x3C4B274
	0x03A8E184 LDP V0, V1, [X31 + 0x30]
	0x03A8E188 LDR X8, [X31 + 0x50]
	0x03A8E18C STP V0, V1, [X31]
	0x03A8E190 STR X8, [X31 + 0x20]
	0x03A8E194 ADD X2, X31, 0x0
	0x03A8E198 MOV X0, X19
	0x03A8E19C MOV W1, W20
	0x03A8E1A0 MOV X3, X31
	0x03A8E1A4 BL 0x3C4FCFC
	0x03A8E1A8 LDR X8, [X21]
	0x03A8E1AC LDR X8, [X8 + 0xB8]
	0x03A8E1B0 LDR W20, [X8 + 0xC]
	0x03A8E1B4 MOV X0, X31
	0x03A8E1B8 BL 0x3C05624
	0x03A8E1BC MOV X0, X19
	0x03A8E1C0 MOV W1, W20
	0x03A8E1C4 MOV X2, X31
	0x03A8E1C8 BL 0x3C4CED8
	0x03A8E1CC LDR X8, [X21]
	0x03A8E1D0 LDR X8, [X8 + 0xB8]
	0x03A8E1D4 LDR W20, [X8 + 0x10]
	0x03A8E1D8 MOV X0, X31
	0x03A8E1DC BL 0x3C13950
	0x03A8E1E0 MOV X0, X31
	0x03A8E1E4 BL 0x39E93E4
	0x03A8E1E8 MOV X0, X19
	0x03A8E1EC MOV W1, W20
	0x03A8E1F0 MOV X2, X31
	0x03A8E1F4 BL 0x3C4CED8
	0x03A8E1F8 LDR X8, [X21]
	0x03A8E1FC LDR X8, [X8 + 0xB8]
	0x03A8E200 LDR W20, [X8 + 0x14]
	0x03A8E204 MOV X0, X31
	0x03A8E208 BL 0x3C139D4
	0x03A8E20C MOV X0, X31
	0x03A8E210 BL 0x39E93E4
	0x03A8E214 MOV X0, X19
	0x03A8E218 MOV W1, W20
	0x03A8E21C MOV X2, X31
	0x03A8E220 BL 0x3C4CED8
	0x03A8E224 LDR X8, [X21]
	0x03A8E228 LDR X8, [X8 + 0xB8]
	0x03A8E22C LDR W20, [X8 + 0x18]
	0x03A8E230 MOV X0, X31
	0x03A8E234 BL 0x3C13A58
	0x03A8E238 MOV X0, X31
	0x03A8E23C BL 0x39E93E4
	0x03A8E240 MOV X0, X19
	0x03A8E244 MOV W1, W20
	0x03A8E248 MOV X2, X31
	0x03A8E24C BL 0x3C4CED8
	0x03A8E250 LDR X8, [X21]
	0x03A8E254 LDR X8, [X8 + 0xB8]
	0x03A8E258 LDR W20, [X8 + 0x4]
	0x03A8E25C MOV X0, X31
	0x03A8E260 BL 0x3C13BE0
	0x03A8E264 MOV X0, X31
	0x03A8E268 BL 0x39E93E4
	0x03A8E26C MOV X0, X19
	0x03A8E270 MOV W1, W20
	0x03A8E274 MOV X2, X31
	0x03A8E278 BL 0x3C4CED8
	0x03A8E27C ADD X0, X31, 0x138
	0x03A8E280 MOV X1, X31
	0x03A8E284 BL 0x39B1DB4
	0x03A8E288 LDP X20, X19, [X31 + 0x150]
	0x03A8E28C LDP X30, X21, [X31 + 0x140]
	0x03A8E290 LDR X29, [X31 + 0x130]
	0x03A8E294 LDP D9, D8, [X31 + 0x120]
	0x03A8E298 LDP D11, D10, [X31 + 0x110]
	0x03A8E29C ADD X31, X31, 0x160
	0x03A8E2A0 RET
	0x03A8E2A4 BL 0x1C16F20
	0x03A8E2A8 B 0x3A8E310
	0x03A8E2AC B 0x3A8E310
	0x03A8E2B0 B 0x3A8E310
	0x03A8E2B4 B 0x3A8E310
	0x03A8E2B8 B 0x3A8E310
	0x03A8E2BC B 0x3A8E310
	0x03A8E2C0 B 0x3A8E310
	0x03A8E2C4 B 0x3A8E310
	0x03A8E2C8 B 0x3A8E310
	0x03A8E2CC B 0x3A8E310
	0x03A8E2D0 B 0x3A8E310
	0x03A8E2D4 B 0x3A8E310
	0x03A8E2D8 B 0x3A8E310
	0x03A8E2DC B 0x3A8E310
	0x03A8E2E0 B 0x3A8E310
	0x03A8E2E4 B 0x3A8E310
	0x03A8E2E8 B 0x3A8E310
	0x03A8E2EC B 0x3A8E310
	0x03A8E2F0 B 0x3A8E310
	0x03A8E2F4 B 0x3A8E310
	0x03A8E2F8 B 0x3A8E310
	0x03A8E2FC B 0x3A8E310
	0x03A8E300 B 0x3A8E310
	0x03A8E304 B 0x3A8E310
	0x03A8E308 B 0x3A8E310
	0x03A8E30C B 0x3A8E310
	0x03A8E310 MOV X19, X0
	0x03A8E314 CMP W1, 0x1
	0x03A8E318 B.NE 0x3A8E344
	0x03A8E31C MOV X0, X19
	0x03A8E320 BL 0x3EB1AD0
	0x03A8E324 LDR X20, [X0]
	0x03A8E328 BL 0x3EB1AE0
	0x03A8E32C ADD X0, X31, 0x138
	0x03A8E330 MOV X1, X31
	0x03A8E334 BL 0x39B1DB4
	0x03A8E338 CBZ X20, 0x3A8E288
	0x03A8E33C MOV X0, X20
	0x03A8E340 BL 0x1C16F18
	0x03A8E344 MOV X20, X31
	0x03A8E348 B 0x3A8E350
	0x03A8E34C MOV X19, X0
	0x03A8E350 ADD X0, X31, 0x138
	0x03A8E354 MOV X1, X31
	0x03A8E358 BL 0x39B1DB4
	0x03A8E35C CBNZ X20, 0x3A8E368
	0x03A8E360 MOV X0, X19
	0x03A8E364 BL 0x1D2C690
	0x03A8E368 MOV X0, X20
	0x03A8E36C BL 0x1C16F18
	0x03A8E370 BL 0x1990590
	0x03A8E374 STR X30, [X31 - 0x20]!
	0x03A8E378 STP X20, X19, [X31 + 0x10]
	0x03A8E37C MOV X19, X0
	0x03A8E380 BL 0x3A8F3D4
	0x03A8E384 TBZ X0, 0x0, 0x3A8E3B4
	0x03A8E388 LDR X0, [X19 + 0x178]
	0x03A8E38C CBZ X0, 0x3A8E40C
	0x03A8E390 MOV X1, X31
	0x03A8E394 BL 0x3984C98
	0x03A8E398 TBZ X0, 0x0, 0x3A8E3CC
	0x03A8E39C LDR X0, [X19 + 0x178]
	0x03A8E3A0 CBZ X0, 0x3A8E40C
	0x03A8E3A4 MOV X1, X31
	0x03A8E3A8 BL 0x3984DE0
	0x03A8E3AC EOR W20, W0, 0x1
	0x03A8E3B0 B 0x3A8E3D0
	0x03A8E3B4 LDR X0, [X19 + 0x1E0]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+272], D12
	003 Move [X31+288], D11
	004 Move [X31+296], D10
	005 Move [X31+304], D9
	006 Move [X31+312], D8
	007 Move [X31+320], X29
	008 Move [X31+328], X30
	009 Move [X31+336], X28
	010 Move [X31+344], X27
	011 Move [X31+352], X26
	012 Move [X31+360], X25
	013 Move [X31+368], X24
	014 Move [X31+376], X23
	015 Move [X31+384], X22
	016 Move [X31+392], X21
	017 Move [X31+400], X20
	018 Move [X31+408], X19
	019 Move X25, 0x956000
	020 Move X23, 0x690000
	021 Move W8, [X25+871]
	022 Move X23, [X23+2200]
	023 Move X19, X3
	024 Move W22, W2
	025 Move X21, X1
	026 Move X20, X0
	027 Add X24, X31, 192
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {49}
	032 Move X0, 0x68F000
	033 Move X0, [X0+2296]
	034 Call 0x1C17CF4
	035 Move X0, 0x667000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x690000
	039 Move X0, [X0+2200]
	040 Call 0x1C17CF4
	041 Move X0, 0x6CA000
	042 Move X0, [X0+1544]
	043 Call 0x1C17CF4
	044 Move X0, 0x690000
	045 Move X0, [X0+2216]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+871], W8
	049 Move X0, [X23]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+264], W31
	052 Move [X24+44], V0
	053 Move [X31+208], V0
	054 Move [X31+216], V0
	055 Move [X31+176], V0
	056 Move [X31+184], V0
	057 Move [X31+144], V0
	058 Move [X31+152], V0
	059 Move [X31+8], V0
	060 Move X26, 0x690000
	061 Move W8, [X0+224]
	062 Move X26, [X26+2216]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X23]
	067 Move X8, [X0+184]
	068 Add X0, X31, 264
	069 Move X1, X31
	070 Move X3, X31
	071 Move X2, [X8+48]
	072 Call ProfilingScope..ctor, X0, X1, X2
	073 Move X0, [X26]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Call UniversalRenderPipeline.get_asset
	079 Move X23, X0
	080 Compare X0, 0
	081 JumpIfEqual {459}
	082 Move W8, [X23+128]
	083 Compare W8, 0
	084 JumpIfEqual {172}
	085 Move W25, 1
	086 Compare X20, 0
	087 JumpIfEqual {175}
	088 Move V8, [X23+168]
	089 Move X0, X20
	090 Move X1, X31
	091 Call Camera.get_farClipPlane, X0
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 Move S8, W31
	095 Move [X19+388], S9
	096 Compare W25, 0
	097 JumpIfEqual {103}
	098 Move X0, X20
	099 Move X1, X31
	100 Call Camera.get_nearClipPlane, X0
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Move V8, [X19+388]
	103 Move W28, [X19+360]
	104 Move X27, 0x667000
	105 Move X25, 0x68F000
	106 Move X27, [X27+1432]
	107 Move X25, [X25+2296]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19+388], S8
	110 Move W8, 1
	111 Move [X19+200], W31
	112 Move [X19+356], W8
	113 Move X0, [X25]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X31
	120 Call CoreUtils.ArePostProcessesEnabled, X0
	121 And W8, W0, 1
	122 Move [X19+392], W8
	123 Move W8, [X23+76]
	124 Move [X19+367], W8
	125 Move W8, [X23+77]
	126 Move [X19+368], W8
	127 Move X0, [X26]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Call UniversalRenderPipeline.get_asset
	133 Compare X0, 0
	134 JumpIfEqual {461}
	135 Move X1, X31
	136 Call UniversalRenderPipelineAsset.get_scriptableRenderer, X0
	137 Move [X19+440], X0
	138 Move [X19+284], W31
	139 Add X8, X19, 276
	140 Move V0, [X8]
	141 Add X8, X19, 288
	142 Move [X19+296], W31
	143 Move X23, 0x955000
	144 Move [X19+288], D0
	145 Move [X8+12], W31
	146 Move W8, [X23+2632]
	147 Compare W8, 0
	148 JumpIfNotEqual {211}
	149 Move X0, 0x66F000
	150 Move X0, [X0+3848]
	151 Call 0x1C17CF4
	152 Move X0, [X27]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X31
	159 Move X2, X31
	160 Call Object.op_Inequality, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {176}
	165 Compare X21, 0
	166 JumpIfEqual {462}
	167 Move W8, [X21+44]
	168 Move [X19+200], W8
	169 Compare W8, 0
	170 JumpIfEqual {217}
	171 Move W8, [X21+90]
	172 Move W25, [X23+144]
	173 Compare X20, 0
	174 JumpIfNotEqual {88}
	175 Call 0x1C17F20
	176 Move W8, 1
	177 Move [X19+200], W31
	178 Move [X19+356], W8
	179 Move [X19+392], W31
	180 Move W8, [X23+76]
	181 Move [X19+367], W8
	182 Move W8, [X23+77]
	183 Move [X19+368], W8
	184 Move X0, [X26]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Call UniversalRenderPipeline.get_asset
	190 Compare X0, 0
	191 JumpIfEqual {463}
	192 Move X1, X31
	193 Call UniversalRenderPipelineAsset.get_scriptableRenderer, X0
	194 Move [X19+440], X0
	195 Move [X19+284], W31
	196 Add X8, X19, 276
	197 Move V0, [X8]
	198 Add X8, X19, 288
	199 Move [X19+296], W31
	200 Move X23, 0x955000
	201 Move [X19+288], D0
	202 Move [X8+12], W31
	203 Move W8, [X23+2632]
	204 Compare W8, 0
	205 JumpIfNotEqual {211}
	206 Move X0, 0x66F000
	207 Move X0, [X0+3848]
	208 Call 0x1C17CF4
	209 Move W8, 1
	210 Move [X23+2632], W8
	211 Move X8, 0x66F000
	212 Move X8, [X8+3848]
	213 NotImplemented "Instruction MOVI not yet implemented."
	214 Move X8, [X8]
	215 Move X8, [X8+184]
	216 Add X8, X8, 8
	217 Move W8, 1
	218 Move [X19+356], W8
	219 Move W8, [X21+76]
	220 Move [X19+392], W8
	221 Move W8, [X21+32]
	222 Compare W8, 0
	223 JumpIfEqual {225}
	224 Move V0, [X19+388]
	225 Move S0, W31
	226 Move [X19+388], S0
	227 Move X0, X21
	228 Move X1, X31
	229 Call UniversalAdditionalCameraData.get_requiresDepthTexture, X0
	230 And W8, W0, 1
	231 Move [X19+367], W8
	232 Move X0, X21
	233 Move X1, X31
	234 Call UniversalAdditionalCameraData.get_requiresColorTexture, X0
	235 And W8, W0, 1
	236 Move [X19+368], W8
	237 Move X0, X21
	238 Move X1, X31
	239 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	240 Move [X19+440], X0
	241 Move W8, [X21+93]
	242 Move [X19+284], W8
	243 Move V0, [X21+6]
	244 Add X8, X21, 112
	245 Move [X19+18], V0
	246 Move V0, [X21+120]
	247 Move V1, [X8]
	248 Move W23, [X19+392]
	249 Move [X19+304], D1
	250 Move [X19+312], D0
	251 Move X0, X31
	252 Call SystemInfo.get_graphicsDeviceType
	253 Move W8, [X19+367]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CSET not yet implemented."
	256 NotImplemented "Instruction CMP not yet implemented."
	257 NotImplemented "Instruction CSET not yet implemented."
	258 And W10, W23, W10
	259 Or W8, W8, W9
	260 Move [X19+392], W10
	261 Move [X19+367], W8
	262 Move X0, [X26]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {267}
	266 Call 0x1C17DFC
	267 Move X0, X19
	268 Call UniversalRenderPipeline.CheckPostProcessForDepth, X0
	269 Move W23, [X19+200]
	270 And W8, W22, 1
	271 And W9, W0, 1
	272 Move [X19+369], W9
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X19+448], W8
	275 Move [X19+368], W31
	276 Move X0, [X27]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, X21
	282 Move X1, X31
	283 Move X2, X31
	284 Call Object.op_Inequality, X0, X1
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfNotEqual {297}
	289 Move X0, [X26]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X19
	295 Move X1, X21
	296 Call UniversalRenderPipeline.UpdateTemporalAAData, X0, X1
	297 Add X8, X31, 64
	298 Move X0, X20
	299 Move X1, X31
	300 Call Camera.get_projectionMatrix, X0
	301 Move V8, [X31+64]
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Move V3, [X31+7]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move [X31+192], V0
	308 Move [X31+200], V1
	309 Move [X31+14], V2
	310 Move [X24+44], V3
	311 Move X0, X20
	312 Move X1, X31
	313 Call Camera.get_orthographic, X0
	314 Move TEMP, X0
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {340}
	318 Move V12, [X19+268]
	319 Move V10, [X19+272]
	320 Move V9, [X19+276]
	321 Move V11, [X19+280]
	322 Move X0, X20
	323 Move X1, X31
	324 Call Camera.get_pixelRect, X0
	325 NotImplemented "Instruction FCMP not yet implemented."
	326 NotImplemented "Instruction FCMP not yet implemented."
	327 NotImplemented "Instruction FCMP not yet implemented."
	328 NotImplemented "Instruction FCMP not yet implemented."
	329 Add X8, X31, 64
	330 Move X0, X20
	331 Move X1, X31
	332 Call Camera.get_projectionMatrix, X0
	333 Move V8, [X31+64]
	334 Move X0, X20
	335 Move X1, X31
	336 Call Camera.get_aspect, X0
	337 Move V1, [X19+328]
	338 Multiply S0, S8, S0
	339 NotImplemented "Instruction FDIV not yet implemented."
	340 Move X0, [X26]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Add X0, X19, 488
	346 Call UniversalRenderPipeline.ApplyTaaRenderingDebugOverrides, X0
	347 Move X8, 0x6C9000
	348 Move X8, [X8+1544]
	349 Move X0, [X8]
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Add X8, X31, 64
	355 Move X0, X19
	356 Move X1, X31
	357 Call TemporalAA.CalculateJitterMatrix, X0
	358 Move V0, [X31+64]
	359 Move V1, [X31+80]
	360 Move V2, [X31+96]
	361 Move V3, [X31+112]
	362 Move [X31+128], V0
	363 Move [X31+136], V1
	364 Move [X31+160], V2
	365 Move [X31+168], V3
	366 Add X8, X31, 64
	367 Move X0, X20
	368 Move X1, X31
	369 Call Camera.get_worldToCameraMatrix, X0
	370 Move V0, [X31+64]
	371 Move V1, [X31+80]
	372 Move V2, [X31+96]
	373 Move V3, [X31+112]
	374 Move [X31], V0
	375 Move [X31+8], V1
	376 Move [X31+32], V2
	377 Move [X31+40], V3
	378 Move [X19+32], V2
	379 Move [X19+40], V3
	380 Move [X19], V0
	381 Move [X19+8], V1
	382 Move [X19+64], S8
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move V2, [X31+208]
	385 Move V1, [X31+224]
	386 Move V3, [X31+12]
	387 Move [X19+7], V0
	388 Move [X19+100], V1
	389 Move [X19+84], V2
	390 Move [X19+68], V3
	391 Move V1, [X31+160]
	392 Move V0, [X31+176]
	393 Move V3, [X31+128]
	394 Move V2, [X31+144]
	395 Move [X19+160], V1
	396 Move [X19+168], V0
	397 Move [X19+128], V3
	398 Move [X19+136], V2
	399 Move X0, X20
	400 Move X1, X31
	401 Call Component.get_transform, X0
	402 Compare X0, 0
	403 JumpIfEqual {460}
	404 Move X1, X31
	405 Call Transform.get_position, X0
	406 Move [X19+452], S0
	407 Move [X19+456], S1
	408 Move [X19+460], S2
	409 Move X0, X20
	410 Move X1, X31
	411 Call Camera.get_backgroundColor, X0
	412 Move X0, [X25]
	413 Move V8, V0
	414 Move V9, V1
	415 Move V10, V2
	416 Move W8, [X0+224]
	417 Move V11, V3
	418 Compare W8, 0
	419 JumpIfNotEqual {421}
	420 Call 0x1C17DFC
	421 Move V0, V8
	422 Move V1, V9
	423 Move V2, V10
	424 Move V3, V11
	425 Move X0, X31
	426 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	427 Move W8, [X19+392]
	428 Move [X19+464], S0
	429 Move [X19+468], S1
	430 Move [X19+472], S2
	431 Move [X19+476], S3
	432 Move [X19+393], W8
	433 Move X0, X19
	434 Call CameraData.get_isHDROutputActive, X0
	435 And W8, W0, 1
	436 Add X0, X31, 264
	437 Move X1, X31
	438 Move [X19+371], W8
	439 Call ProfilingScope.Dispose, X0
	440 Move X20, [X31+400]
	441 Move X19, [X31+408]
	442 Move X22, [X31+384]
	443 Move X21, [X31+392]
	444 Move X24, [X31+368]
	445 Move X23, [X31+376]
	446 Move X26, [X31+352]
	447 Move X25, [X31+360]
	448 Move X28, [X31+336]
	449 Move X27, [X31+344]
	450 Move X29, [X31+320]
	451 Move X30, [X31+328]
	452 Move D9, [X31+304]
	453 Move D8, [X31+312]
	454 Move D11, [X31+288]
	455 Move D10, [X31+296]
	456 Move V12, [X31+272]
	457 Add X31, X31, 416
	458 Return 
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Move X19, X0
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X19
	467 Call 0x3EB2AD0
	468 Move X20, [X0]
	469 Call 0x3EB2AE0
	470 Add X0, X31, 264
	471 Move X1, X31
	472 Call ProfilingScope.Dispose, X0
	473 Compare X20, 0
	474 JumpIfEqual {440}
	475 Move X0, X20
	476 Call 0x1C17F18
	477 Move X20, X31
	478 Move X19, X0
	479 Add X0, X31, 264
	480 Move X1, X31
	481 Call ProfilingScope.Dispose, X0
	482 Compare X20, 0
	483 JumpIfNotEqual {486}
	484 Move X0, X19
	485 Call 0x1D2D690
	486 Move X0, X20
	487 Call 0x1C17F18
	488 Call 0x1991590

Method: System.Void InitializeRenderingData(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset settings, ref UnityEngine.Rendering.Universal.CameraData cameraData, ref UnityEngine.Rendering.CullingResults cullResults, UnityEngine.Rendering.CommandBuffer cmd, out UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A8F410 LDR X0, [X19 + 0xC0]
	0x03A8F414 CBZ X0, 0x3A8F4AC
	0x03A8F418 ADRP X8, 0x6C5000
	0x03A8F41C LDR X8, [X8 + 0x918]
	0x03A8F420 ADD X1, X31, 0x8
	0x03A8F424 LDR X2, [X8]
	0x03A8F428 BL 0x21A4990
	0x03A8F42C LDR W8, [X19 + 0x1AC]
	0x03A8F430 CMP W8, 0x3
	0x03A8F434 B.NE 0x3A8F48C
	0x03A8F438 LDR X8, [X19 + 0x1E0]
	0x03A8F43C CBZ X8, 0x3A8F48C
	0x03A8F440 LDR W8, [X19 + 0xE0]
	0x03A8F444 CMP W8, 0x1
	0x03A8F448 B.NE 0x3A8F48C
	0x03A8F44C LDR X0, [X31 + 0x8]
	0x03A8F450 CBZ X0, 0x3A8F478
	0x03A8F454 LDR W8, [X0 + 0x2C]
	0x03A8F458 CMP W8, 0x1
	0x03A8F45C B.EQ 0x3A8F48C
	0x03A8F460 MOV X1, X31
	0x03A8F464 BL 0x3A8156C
	0x03A8F468 CBZ X0, 0x3A8F4AC
	0x03A8F46C LDR W8, [X0 + 0x18]
	0x03A8F470 CMP W8, 0x0
	0x03A8F474 B.GT 0x3A8F48C
	0x03A8F478 LDR X0, [X19 + 0xC0]
	0x03A8F47C CBZ X0, 0x3A8F4AC
	0x03A8F480 MOV X1, X31
	0x03A8F484 BL 0x3C03820
	0x03A8F488 TBZ X0, 0x0, 0x3A8F49C
	0x03A8F48C MOV W0, W31
	0x03A8F490 LDP X20, X19, [X31 + 0x10]
	0x03A8F494 LDR X30, [X31], #0x20
	0x03A8F498 RET
	0x03A8F49C LDRB W8, [X19 + 0x188]
	0x03A8F4A0 CMP W8, 0x0
	0x03A8F4A4 CSET W0, NE
	0x03A8F4A8 B 0x3A8F490
	0x03A8F4AC BL 0x1C16F20
	0x03A8F4B0 SUB X31, X31, 0x70
	0x03A8F4B4 STP D11, D10, [X31 + 0x10]
	0x03A8F4B8 STP D9, D8, [X31 + 0x20]
	0x03A8F4BC STP X30, X25, [X31 + 0x30]
	0x03A8F4C0 STP X24, X23, [X31 + 0x40]
	0x03A8F4C4 STP X22, X21, [X31 + 0x50]
	0x03A8F4C8 STP X20, X19, [X31 + 0x60]
	0x03A8F4CC ADRP X23, 0x953000
	0x03A8F4D0 ADRP X21, 0x68D000
	0x03A8F4D4 LDRB W8, [X23 + 0x366]
	0x03A8F4D8 LDR X21, [X21 + 0x898]
	0x03A8F4DC MOV X19, X2
	0x03A8F4E0 MOV X22, X1
	0x03A8F4E4 MOV X20, X0
	0x03A8F4E8 TBNZ X8, 0x0, 0x3A8F53C
	0x03A8F4EC ADRP X0, 0x6C4000
	0x03A8F4F0 LDR X0, [X0 + 0x400]
	0x03A8F4F4 BL 0x1C16CF4
	0x03A8F4F8 ADRP X0, 0x664000
	0x03A8F4FC LDR X0, [X0 + 0x5A8]
	0x03A8F500 BL 0x1C16CF4
	0x03A8F504 ADRP X0, 0x664000
	0x03A8F508 LDR X0, [X0 + 0x598]
	0x03A8F50C BL 0x1C16CF4
	0x03A8F510 ADRP X0, 0x68D000
	0x03A8F514 LDR X0, [X0 + 0x898]
	0x03A8F518 BL 0x1C16CF4
	0x03A8F51C ADRP X0, 0x68D000
	0x03A8F520 LDR X0, [X0 + 0x8A8]
	0x03A8F524 BL 0x1C16CF4
	0x03A8F528 ADRP X0, 0x6C1000
	0x03A8F52C LDR X0, [X0 + 0x500]
	0x03A8F530 BL 0x1C16CF4
	0x03A8F534 MOVZ W8, 0x1
	0x03A8F538 STRB W8, [X23 + 0x366]
	0x03A8F53C LDR X0, [X21]
	0x03A8F540 STRB W31, [X31 + 0x8]
	0x03A8F544 ADRP X25, 0x68D000
	0x03A8F548 LDR W8, [X0 + 0xE0]
	0x03A8F54C LDR X25, [X25 + 0x8A8]
	0x03A8F550 CBNZ W8, 0x3A8F55C
	0x03A8F554 BL 0x1C16DFC
	0x03A8F558 LDR X0, [X21]
	0x03A8F55C LDR X8, [X0 + 0xB8]
	0x03A8F560 ADD X0, X31, 0x8
	0x03A8F564 MOV X1, X31
	0x03A8F568 MOV X3, X31
	0x03A8F56C LDR X2, [X8 + 0x28]
	0x03A8F570 BL 0x39B1DB0
	0x03A8F574 LDR X0, [X25]
	0x03A8F578 LDR W8, [X0 + 0xE0]
	0x03A8F57C CBNZ W8, 0x3A8F584
	0x03A8F580 BL 0x1C16DFC
	0x03A8F584 BL 0x3A8AB60
	0x03A8F588 CBZ X20, 0x3A8FA18
	0x03A8F58C MOV X21, X0
	0x03A8F590 MOV X0, X20
	0x03A8F594 MOV X1, X31
	0x03A8F598 BL 0x3C040B4
	0x03A8F59C STR X0, [X19 + 0xD0]
	0x03A8F5A0 MOV X0, X20
	0x03A8F5A4 MOV X1, X31
	0x03A8F5A8 BL 0x3C03AD4
	0x03A8F5AC ADRP X24, 0x6C1000
	0x03A8F5B0 LDR X24, [X24 + 0x500]
	0x03A8F5B4 CMP W0, 0x2
	0x03A8F5B8 STR W0, [X19 + 0x168]
	0x03A8F5BC B.NE 0x3A8F5F4
	0x03A8F5C0 MOVZ W0, 0x1
	0x03A8F5C4 MOV X1, X31
	0x03A8F5C8 BL 0x3C35CBC
	0x03A8F5CC ADRP X9, 0xFFFFFFFFFD05E000
	0x03A8F5D0 LDR V0, [X9 + 0x708]
	0x03A8F5D4 ADD X9, X19, 0x1AC
	0x03A8F5D8 MOV W8, W31
	0x03A8F5DC STR W0, [X19 + 0x198]
	0x03A8F5E0 STR X31, [X19 + 0x1A0]
	0x03A8F5E4 STRH W31, [X19 + 0x1A8]
	0x03A8F5E8 STR D0, [X9]
	0x03A8F5EC STRB W31, [X19 + 0x172]
	0x03A8F5F0 B 0x3A8F718
	0x03A8F5F4 ADRP X23, 0x664000
	0x03A8F5F8 LDR X23, [X23 + 0x598]
	0x03A8F5FC LDR X0, [X23]
	0x03A8F600 LDR W8, [X0 + 0xE0]
	0x03A8F604 CBNZ W8, 0x3A8F60C
	0x03A8F608 BL 0x1C16DFC
	0x03A8F60C MOV X0, X22
	0x03A8F610 MOV X1, X31
	0x03A8F614 MOV X2, X31
	0x03A8F618 BL 0x3C354F8
	0x03A8F61C TBZ X0, 0x0, 0x3A8F664
	0x03A8F620 CBZ X22, 0x3A8FA24
	0x03A8F624 LDR W8, [X22 + 0x3C]
	0x03A8F628 STR W8, [X19 + 0x198]
	0x03A8F62C LDR X0, [X23]
	0x03A8F630 LDR X23, [X22 + 0x40]
	0x03A8F634 LDR W8, [X0 + 0xE0]
	0x03A8F638 CBNZ W8, 0x3A8F640
	0x03A8F63C BL 0x1C16DFC
	0x03A8F640 MOV X0, X23
	0x03A8F644 MOV X1, X31
	0x03A8F648 MOV X2, X31
	0x03A8F64C BL 0x3C3883C
	0x03A8F650 TBZ X0, 0x0, 0x3A8F6B4
	0x03A8F654 MOV X0, X20
	0x03A8F658 MOV X1, X31
	0x03A8F65C BL 0x3C32E90
	0x03A8F660 B 0x3A8F6B8
	0x03A8F664 MOVZ W0, 0x1
	0x03A8F668 MOV X1, X31
	0x03A8F66C BL 0x3C35CBC
	0x03A8F670 ADRP X8, 0xFFFFFFFFFD05E000
	0x03A8F674 LDR V0, [X8 + 0x708]
	0x03A8F678 ADD X8, X19, 0x1AC
	0x03A8F67C STR W0, [X19 + 0x198]
	0x03A8F680 STR X31, [X19 + 0x1A0]
	0x03A8F684 STRH W31, [X19 + 0x1A8]
	0x03A8F688 STR D0, [X8]
	0x03A8F68C LDR X0, [X24]
	0x03A8F690 LDR W8, [X0 + 0xE0]
	0x03A8F694 CBNZ W8, 0x3A8F69C
	0x03A8F698 BL 0x1C16DFC
	0x03A8F69C MOV X0, X31
	0x03A8F6A0 BL 0x398528C
	0x03A8F6A4 AND W8, W0, 0x1
	0x03A8F6A8 STRB W8, [X19 + 0x172]
	0x03A8F6AC MOVZ W8, 0x1
	0x03A8F6B0 B 0x3A8F718
	0x03A8F6B4 LDR X0, [X22 + 0x40]
	0x03A8F6B8 STR X0, [X19 + 0x1A0]
	0x03A8F6BC LDRB W8, [X22 + 0x58]
	0x03A8F6C0 CBZ W8, 0x3A8F6D4
	0x03A8F6C4 MOV X0, X31
	0x03A8F6C8 BL 0x3C3BB6C
	0x03A8F6CC CMP W0, 0x22
	0x03A8F6D0 CSET W8, GT
	0x03A8F6D4 STRB W8, [X19 + 0x1A8]
	0x03A8F6D8 LDRB W8, [X22 + 0x59]
	0x03A8F6DC STRB W8, [X19 + 0x1A9]
	0x03A8F6E0 LDR V0, [X22 + 0x50]
	0x03A8F6E4 ADD X8, X19, 0x1AC
	0x03A8F6E8 STR D0, [X8]
	0x03A8F6EC LDRB W8, [X22 + 0x5B]
	0x03A8F6F0 CBZ W8, 0x3A8F710
	0x03A8F6F4 LDR X0, [X24]
	0x03A8F6F8 LDR W8, [X0 + 0xE0]
	0x03A8F6FC CBNZ W8, 0x3A8F704
	0x03A8F700 BL 0x1C16DFC
	0x03A8F704 MOV X0, X31
	0x03A8F708 BL 0x398528C
	0x03A8F70C AND W8, W0, 0x1
	0x03A8F710 STRB W8, [X19 + 0x172]
	0x03A8F714 LDRB W8, [X22 + 0x5C]
	0x03A8F718 STRB W8, [X19 + 0x16E]
	0x03A8F71C MOV X0, X20
	0x03A8F720 MOV X1, X31
	0x03A8F724 BL 0x3C03720
	0x03A8F728 TBZ X0, 0x0, 0x3A8F73C
	0x03A8F72C CBZ X21, 0x3A8FA1C
	0x03A8F730 LDRB W8, [X21 + 0x55]
	0x03A8F734 STRB W8, [X19 + 0x16D]
	0x03A8F738 B 0x3A8F744
	0x03A8F73C STRB W31, [X19 + 0x16D]
	0x03A8F740 CBZ X21, 0x3A8FA20
	0x03A8F744 LDRB W8, [X19 + 0x16E]
	0x03A8F748 LDRB W9, [X21 + 0x55]
	0x03A8F74C AND W8, W9, W8, 0x0
	0x03A8F750 STRB W8, [X19 + 0x16E]
	0x03A8F754 MOV X0, X20
	0x03A8F758 MOV X1, X31
	0x03A8F75C BL 0x3C03DD4
	0x03A8F760 MOV V11.16B, V0.16B
	0x03A8F764 MOV V10.16B, V1.16B
	0x03A8F768 MOV V9.16B, V2.16B
	0x03A8F76C MOV V8.16B, V3.16B
	0x03A8F770 MOV X0, X20
	0x03A8F774 MOV X1, X31
	0x03A8F778 BL 0x3C03F08
	0x03A8F77C STR S0, [X19 + 0x10C]
	0x03A8F780 STR S1, [X19 + 0x110]
	0x03A8F784 STR S2, [X19 + 0x114]
	0x03A8F788 STR S3, [X19 + 0x118]
	0x03A8F78C MOV X0, X20
	0x03A8F790 MOV X1, X31
	0x03A8F794 BL 0x3C0403C
	0x03A8F798 STR W0, [X19 + 0x140]
	0x03A8F79C MOV X0, X20
	0x03A8F7A0 MOV X1, X31
	0x03A8F7A4 BL 0x3C04078
	0x03A8F7A8 LDR V0, [X19 + 0x140]
	0x03A8F7AC ADRP X23, 0x664000
	0x03A8F7B0 LDR X23, [X23 + 0x5A8]
	0x03A8F7B4 SCVTF S1, W0
	0x03A8F7B8 SCVTF S0, S0
	0x03A8F7BC FDIV S0, S0, S1
	0x03A8F7C0 STR W0, [X19 + 0x144]
	0x03A8F7C4 STR S0, [X19 + 0x148]
	0x03A8F7C8 LDR X0, [X23]
	0x03A8F7CC LDR W8, [X0 + 0xE0]
	0x03A8F7D0 CBNZ W8, 0x3A8F7D8
	0x03A8F7D4 BL 0x1C16DFC
	0x03A8F7D8 FCMP S11, 0x0
	0x03A8F7DC CSEL X9, X19, X31, EQ
	0x03A8F7E0 MOV W8, W31
	0x03A8F7E4 CSEL X22, X19, X9, VS
	0x03A8F7E8 MOV X9, X19
	0x03A8F7EC B.EQ 0x3A8F7F8
	0x03A8F7F0 B.VS 0x3A8F7F8
	0x03A8F7F4 B 0x3A8F86C
	0x03A8F7F8 LDR X0, [X23]
	0x03A8F7FC LDR W8, [X0 + 0xE0]
	0x03A8F800 CBNZ W8, 0x3A8F808
	0x03A8F804 BL 0x1C16DFC
	0x03A8F808 MOV W8, W31
	0x03A8F80C FCMP S10, 0x0
	0x03A8F810 MOV X9, X19
	0x03A8F814 B.EQ 0x3A8F820
	0x03A8F818 B.VS 0x3A8F820
	0x03A8F81C B 0x3A8F86C
	0x03A8F820 LDR X0, [X23]
	0x03A8F824 LDR W8, [X0 + 0xE0]
	0x03A8F828 CBNZ W8, 0x3A8F830
	0x03A8F82C BL 0x1C16DFC
	0x03A8F830 FABS S0, S9
	0x03A8F834 FMOV S1, 1
	0x03A8F838 FCMP S0, S1
	0x03A8F83C B.PL 0x3A8F848
	0x03A8F840 MOV W8, W31
	0x03A8F844 B 0x3A8F868
	0x03A8F848 LDR X0, [X23]
	0x03A8F84C LDR W8, [X0 + 0xE0]
	0x03A8F850 CBNZ W8, 0x3A8F858
	0x03A8F854 BL 0x1C16DFC
	0x03A8F858 FABS S0, S8
	0x03A8F85C FMOV S1, 1
	0x03A8F860 FCMP S0, S1
	0x03A8F864 CSET W8, PL
	0x03A8F868 MOV X9, X22
	0x03A8F86C STRB W8, [X9 + 0x16C]
	0x03A8F870 LDR W8, [X19 + 0x168]
	0x03A8F874 MOVZ W23, 0x1
	0x03A8F878 CMP W8, 0x2
	0x03A8F87C B.EQ 0x3A8F890
	0x03A8F880 CMP W8, 0x4
	0x03A8F884 B.EQ 0x3A8F890
	0x03A8F888 CMP W8, 0x10
	0x03A8F88C CSET W23, EQ
	0x03A8F890 LDR V0, [X21 + 0x60]
	0x03A8F894 ADRP X8, 0xFFFFFFFFFD05B000
	0x03A8F898 LDR V1, [X8 + 0x200]
	0x03A8F89C FMOV S2, 1
	0x03A8F8A0 FABD S3, S2, S2
	0x03A8F8A4 LDR V10, [X19 + 0x140]
	0x03A8F8A8 FCMP S3, S1
	0x03A8F8AC CSET W8, MI
	0x03A8F8B0 ORR W8, W23, W8, 0x0
	0x03A8F8B4 CMP W8, 0x0
	0x03A8F8B8 FCSEL S8, S0, S2, EQ
	0x03A8F8BC STR S8, [X19 + 0x14C]
	0x03A8F8C0 LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X23, 0x954000
	015 Move X20, 0x68E000
	016 Move W8, [X23+872]
	017 Move X20, [X20+2200]
	018 Move X19, X4
	019 Move X24, X3
	020 Move X28, X2
	021 Move X21, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0x6C8000
	028 Move X0, [X0+440]
	029 Call 0x1C17CF4
	030 Move X0, 0x665000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x68E000
	034 Move X0, [X0+2200]
	035 Call 0x1C17CF4
	036 Move X0, 0x68E000
	037 Move X0, [X0+2216]
	038 Call 0x1C17CF4
	039 Move X0, 0x6C5000
	040 Move X0, [X0+4088]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+872], W8
	044 Move X0, [X20]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+136], W31
	047 Move [X31+128], W31
	048 Move [X31+96], V0
	049 Move [X31+104], V0
	050 Move [X31+64], V0
	051 Move [X31+72], V0
	052 Move [X31+32], V0
	053 Move [X31+40], V0
	054 Move [X31+1], V0
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X20]
	060 Move X8, [X0+184]
	061 Add X0, X31, 136
	062 Move X1, X31
	063 Move X3, X31
	064 Move X2, [X8+56]
	065 Call ProfilingScope..ctor, X0, X1, X2
	066 Move X0, [X21+440]
	067 Move [X31], X24
	068 Compare X0, 0
	069 JumpIfEqual {75}
	070 Move X8, 0x6C5000
	071 Move X8, [X8+4088]
	072 Move X9, [X0]
	073 Move X8, [X8]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X31+12], W31
	076 Move X1, X31
	077 Call UniversalRenderer.get_renderingModeActual, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move [X31+12], W8
	081 Move X0, X28
	082 Move X1, X31
	083 Call CullingResults.get_visibleLights, X0
	084 Move X8, 0x68E000
	085 Move X8, [X8+2216]
	086 Move X25, X0
	087 Move X26, X1
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X22
	094 Move X1, X25
	095 Move X2, X26
	096 Call UniversalRenderPipeline.GetMainLightIndex, X0, X1
	097 Move V0, [X21+388]
	098 Move W27, W0
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Add W31, W27, 1
	101 Move W8, 116
	102 NotImplemented "Instruction SMADDL not yet implemented."
	103 Add X0, X31, 16
	104 Move W2, 116
	105 Move X1, X20
	106 Call 0x3EB2B30
	107 Add X0, X31, 16
	108 Move X1, X31
	109 Call VisibleLight.get_light, X0
	110 Move X8, 0x665000
	111 Move X8, [X8+1432]
	112 Move X23, X0
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X23
	119 Move X1, X31
	120 Move X2, X31
	121 Call Object.op_Inequality, X0, X1
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {141}
	126 Add X0, X31, 16
	127 Move W2, 116
	128 Move X1, X20
	129 Call 0x3EB2B30
	130 Add X0, X31, 16
	131 Move X1, X31
	132 Call VisibleLight.get_light, X0
	133 Compare X0, 0
	134 JumpIfEqual {284}
	135 Move X1, X31
	136 Call Light.get_shadows, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSET not yet implemented."
	139 Move W20, W31
	140 Move W24, W31
	141 Move W8, W31
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSET not yet implemented."
	144 Compare X22, 0
	145 JumpIfEqual {283}
	146 Move W8, [X22+144]
	147 Compare W8, 0
	148 JumpIfEqual {203}
	149 Move W8, [X22+136]
	150 Move W9, [X31+12]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Or W8, W9, W8
	154 Compare W8, 0
	155 JumpIfEqual {203}
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move W29, W31
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0x6C8000
	160 Move X8, [X8+440]
	161 Move X3, [X8]
	162 Move X0, X25
	163 Move X1, X26
	164 Move W2, W29
	165 Call 0x22232C0, X0, X1
	166 Move X23, X0
	167 Move X1, X31
	168 Call VisibleLight.get_light, X0
	169 Move X20, X0
	170 Move X0, X23
	171 Move X1, X31
	172 Call VisibleLight.get_lightType, X0
	173 Compare W0, 0
	174 JumpIfEqual {179}
	175 Move X0, X23
	176 Move X1, X31
	177 Call VisibleLight.get_lightType, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, 0x665000
	180 Move X8, [X8+1432]
	181 Move X0, [X8]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X20
	187 Move X1, X31
	188 Move X2, X31
	189 Call Object.op_Inequality, X0, X1
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {201}
	194 Compare X20, 0
	195 JumpIfEqual {282}
	196 Move X0, X20
	197 Move X1, X31
	198 Call Light.get_shadows, X0
	199 Compare W0, 0
	200 JumpIfNotEqual {280}
	201 Add W29, W29, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W20, W31
	204 Move V0, [X28]
	205 Add X0, X19, 24
	206 Move W2, 528
	207 Move X1, X21
	208 Move [X19+8], V0
	209 Call 0x3EB2B30
	210 Move X28, 0x68E000
	211 Move X28, [X28+2216]
	212 Move X0, [X28]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Add X4, X19, 552
	218 Move X0, X22
	219 Move X1, X25
	220 Move X2, X26
	221 Move W3, W27
	222 Call UniversalRenderPipeline.InitializeLightData, X0, X1, X2, X3
	223 Move W23, [X31+12]
	224 Move TEMP, X20
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {230}
	228 Move W8, [X19+584]
	229 Xor W20, W8, 1
	230 Move W20, W31
	231 Move X0, [X28]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add X6, X19, 592
	238 NotImplemented "Instruction CSET not yet implemented."
	239 Move X0, X22
	240 Move X1, X25
	241 Move X2, X26
	242 Move W3, W24
	243 Move W5, W23
	244 Call UniversalRenderPipeline.InitializeShadowData, X0, X1, X2, X3, X4, X5
	245 Move W1, [X21+371]
	246 Add X2, X19, 672
	247 Move X0, X22
	248 Call UniversalRenderPipeline.InitializePostProcessingData, X0, X1, X2
	249 Compare X22, 0
	250 JumpIfEqual {281}
	251 Move W8, [X22+233]
	252 Move W0, [X19+556]
	253 Move [X19+684], W8
	254 Move W1, W23
	255 Call UniversalRenderPipeline.GetPerObjectLightFlags, X0, X1
	256 Move [X19+688], W0
	257 Move W8, [X21+393]
	258 Move X9, [X31]
	259 Move [X19+692], W8
	260 Move [X19], X9
	261 Move X0, X19
	262 Call UniversalRenderPipeline.CheckAndApplyDebugSettings, X0
	263 Add X0, X31, 136
	264 Move X1, X31
	265 Call ProfilingScope.Dispose, X0
	266 Move X20, [X31+224]
	267 Move X19, [X31+232]
	268 Move X22, [X31+208]
	269 Move X21, [X31+216]
	270 Move X24, [X31+192]
	271 Move X23, [X31+200]
	272 Move X26, [X31+176]
	273 Move X25, [X31+184]
	274 Move X28, [X31+160]
	275 Move X27, [X31+168]
	276 Move X29, [X31+144]
	277 Move X30, [X31+152]
	278 Add X31, X31, 240
	279 Return 
	280 Move W20, 1
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X19, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X19
	288 Call 0x3EB2AD0
	289 Move X20, [X0]
	290 Call 0x3EB2AE0
	291 Add X0, X31, 136
	292 Move X1, X31
	293 Call ProfilingScope.Dispose, X0
	294 Compare X20, 0
	295 JumpIfEqual {266}
	296 Move X0, X20
	297 Call 0x1C17F18
	298 Move X20, X31
	299 Move X19, X0
	300 Add X0, X31, 136
	301 Move X1, X31
	302 Call ProfilingScope.Dispose, X0
	303 Compare X20, 0
	304 JumpIfNotEqual {307}
	305 Move X0, X19
	306 Call 0x1D2D690
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Call 0x1991590

Method: System.Void InitializeShadowData(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset settings, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights, System.Boolean mainLightCastShadows, System.Boolean additionalLightsCastShadows, System.Boolean isForwardPlus, out UnityEngine.Rendering.Universal.ShadowData shadowData)

Disassembly:
	0x03A915F0 STR X30, [X31 - 0x20]!
	0x03A915F4 STP X20, X19, [X31 + 0x10]
	0x03A915F8 ADRP X19, 0x951000
	0x03A915FC ADRP X20, 0x6C3000
	0x03A91600 LDRB W8, [X19 + 0x379]
	0x03A91604 LDR X20, [X20 + 0x10]
	0x03A91608 TBNZ X8, 0x0, 0x3A91620
	0x03A9160C ADRP X0, 0x6C3000
	0x03A91610 LDR X0, [X0 + 0x10]
	0x03A91614 BL 0x1C16CF4
	0x03A91618 MOVZ W8, 0x1
	0x03A9161C STRB W8, [X19 + 0x379]
	0x03A91620 LDR X0, [X20]
	0x03A91624 LDR W8, [X0 + 0xE0]
	0x03A91628 CBNZ W8, 0x3A91630
	0x03A9162C BL 0x1C16DFC
	0x03A91630 MOVZ W0, 0x4B
	0x03A91634 MOVZ W1, 0x5
	0x03A91638 MOV X2, X31
	0x03A9163C MOVZ W19, 0x4B
	0x03A91640 BL 0x3A6ED54
	0x03A91644 ANDS W31, W0, 0x1
	0x03A91648 MOVZ W8, 0x8
	0x03A9164C CSEL W0, W19, W8, NE
	0x03A91650 LDP X20, X19, [X31 + 0x10]
	0x03A91654 LDR X30, [X31], #0x20
	0x03A91658 RET
	0x03A9165C STP X30, X19, [X31 - 0x10]!
	0x03A91660 MOV X19, X0
	0x03A91664 LDR X0, [X0 + 0xC0]
	0x03A91668 CBZ X0, 0x3A916A8
	0x03A9166C MOV X1, X31
	0x03A91670 BL 0x3C0403C
	0x03A91674 LDR V0, [X19 + 0x14C]
	0x03A91678 MOVZ W8, 0x7F800000
	0x03A9167C SCVTF S1, W0
	0x03A91680 FMOV S2, W8
	0x03A91684 FMUL S0, S0, S1
	0x03A91688 FCVTZS W8, S0
	0x03A9168C FCMP S0, S2
	0x03A91690 MOVZ W9, 0x80000000
	0x03A91694 CSEL W8, W9, W8, EQ
	0x03A91698 CMP W8, 0x1
	0x03A9169C CSINC W0, W8, W31, GT
	0x03A916A0 LDP X30, X19, [X31], #0x10
	0x03A916A4 RET
	0x03A916A8 BL 0x1C16F20
	0x03A916AC STP X30, X19, [X31 - 0x10]!
	0x03A916B0 MOV X19, X0
	0x03A916B4 LDR X0, [X0 + 0xC0]
	0x03A916B8 CBZ X0, 0x3A916F8
	0x03A916BC MOV X1, X31
	0x03A916C0 BL 0x3C04078
	0x03A916C4 LDR V0, [X19 + 0x14C]
	0x03A916C8 MOVZ W8, 0x7F800000
	0x03A916CC SCVTF S1, W0
	0x03A916D0 FMOV S2, W8
	0x03A916D4 FMUL S0, S0, S1
	0x03A916D8 FCVTZS W8, S0
	0x03A916DC FCMP S0, S2
	0x03A916E0 MOVZ W9, 0x80000000
	0x03A916E4 CSEL W8, W9, W8, EQ
	0x03A916E8 CMP W8, 0x1
	0x03A916EC CSINC W0, W8, W31, GT
	0x03A916F0 LDP X30, X19, [X31], #0x10
	0x03A916F4 RET
	0x03A916F8 BL 0x1C16F20
	0x03A916FC STP D9, D8, [X31 - 0x50]!
	0x03A91700 STP X30, X25, [X31 + 0x10]
	0x03A91704 STP X24, X23, [X31 + 0x20]
	0x03A91708 STP X22, X21, [X31 + 0x30]
	0x03A9170C STP X20, X19, [X31 + 0x40]
	0x03A91710 ADRP X25, 0x951000
	0x03A91714 ADRP X24, 0x68B000
	0x03A91718 LDRB W8, [X25 + 0x37B]
	0x03A9171C LDR X24, [X24 + 0x8A8]
	0x03A91720 MOV X21, X4
	0x03A91724 MOV X19, X3
	0x03A91728 MOV X20, X2
	0x03A9172C MOV V8.16B, V1.16B
	0x03A91730 MOV X22, X1
	0x03A91734 MOV V9.16B, V0.16B
	0x03A91738 MOV W23, W0
	0x03A9173C TBNZ X8, 0x0, 0x3A91754
	0x03A91740 ADRP X0, 0x68B000
	0x03A91744 LDR X0, [X0 + 0x8A8]
	0x03A91748 BL 0x1C16CF4
	0x03A9174C MOVZ W8, 0x1
	0x03A91750 STRB W8, [X25 + 0x37B]
	0x03A91754 LDR X0, [X24]
	0x03A91758 LDR W8, [X0 + 0xE0]
	0x03A9175C CBNZ W8, 0x3A91768
	0x03A91760 BL 0x1C16DFC
	0x03A91764 LDR X0, [X24]
	0x03A91768 LDR X8, [X0 + 0xB8]
	0x03A9176C CMP W23, 0x1
	0x03A91770 LDUR V0, [X8 + 0x3C]
	0x03A91774 STR V0, [X19]
	0x03A91778 LDR X8, [X24]
	0x03A9177C LDR X8, [X8 + 0xB8]
	0x03A91780 LDUR V0, [X8 + 0x4C]
	0x03A91784 STR V0, [X21]
	0x03A91788 B.EQ 0x3A917D4
	0x03A9178C LDR X0, [X24]
	0x03A91790 LDR W8, [X0 + 0xE0]
	0x03A91794 CBNZ W8, 0x3A9179C
	0x03A91798 BL 0x1C16DFC
	0x03A9179C ADRP X8, 0xFFFFFFFFFD059000
	0x03A917A0 ADRP X9, 0xFFFFFFFFFD058000
	0x03A917A4 LDR V1, [X8 + 0x390]
	0x03A917A8 LDR V2, [X9 + 0xF28]
	0x03A917AC FMUL S0, S9, S9
	0x03A917B0 FNMUL S3, S9, S9
	0x03A917B4 FMUL S1, S0, S1
	0x03A917B8 FMOV S4, 1
	0x03A917BC FMAX S2, S0, S2
	0x03A917C0 FSUB S0, S1, S0
	0x03A917C4 FDIV S1, S4, S2
	0x03A917C8 FDIV S0, S3, S0
	0x03A917CC STP S1, S0, [X19]
	0x03A917D0 CBZ W23, 0x3A917EC
	0x03A917D4 LDP X20, X19, [X31 + 0x40]
	0x03A917D8 LDP X22, X21, [X31 + 0x30]
	0x03A917DC LDP X24, X23, [X31 + 0x20]
	0x03A917E0 LDP X30, X25, [X31 + 0x10]
	0x03A917E4 LDP D9, D8, [X31], #0x50
	0x03A917E8 RET
	0x03A917EC LDR X0, [X24]
	0x03A917F0 LDR W8, [X0 + 0xE0]
	0x03A917F4 CBNZ W8, 0x3A917FC
	0x03A917F8 BL 0x1C16DFC
	0x03A917FC MOVZ W1, 0x2
	0x03A91800 MOV X0, X22
	0x03A91804 MOV X2, X31
	0x03A91808 BL 0x3C27C24
	0x03A9180C FNEG S0, S0
	0x03A91810 FNEG S1, S1
	0x03A91814 FNEG S2, S2
	0x03A91818 STP S0, S1, [X21]
	0x03A9181C STR S2, [X21 + 0x8]
	0x03A91820 STR W31, [X21 + 0xC]
	0x03A91824 MOV X0, X20
	0x03A91828 MOV X1, X19
	0x03A9182C LDP X20, X19, [X31 + 0x40]
	0x03A91830 LDP X22, X21, [X31 + 0x30]
	0x03A91834 LDP X24, X23, [X31 + 0x20]
	0x03A91838 LDP X30, X25, [X31 + 0x10]
	0x03A9183C MOV V0.16B, V8.16B
	0x03A91840 LDP D9, D8, [X31], #0x50
	0x03A91844 B 0x3A918B4
	0x03A91848 ADRP X8, 0xFFFFFFFFFD059000
	0x03A9184C LDR V1, [X8 + 0x390]
	0x03A91850 ADRP X8, 0xFFFFFFFFFD058000
	0x03A91854 LDR V2, [X8 + 0xF28]
	0x03A91858 FMUL S3, S0, S0
	0x03A9185C FMUL S1, S3, S1
	0x03A91860 FSUB S1, S1, S3
	0x03A91864 FMAX S2, S3, S2
	0x03A91868 FMOV S3, 1
	0x03A9186C FNMUL S0, S0, S0
	0x03A91870 FDIV S2, S3, S2
	0x03A91874 FDIV S0, S0, S1
	0x03A91878 STP S2, S0, [X0]
	0x03A9187C RET
	0x03A91880 STP X30, X19, [X31 - 0x10]!
	0x03A91884 MOV X19, X1
	0x03A91888 MOVZ W1, 0x2
	0x03A9188C MOV X2, X31
	0x03A91890 BL 0x3C27C24
	0x03A91894 FNEG S0, S0
	0x03A91898 FNEG S1, S1
	0x03A9189C FNEG S2, S2
	0x03A918A0 STP S0, S1, [X19]
	0x03A918A4 STR S2, [X19 + 0x8]
	0x03A918A8 STR W31, [X19 + 0xC]
	0x03A918AC LDP X30, X19, [X31], #0x10
	0x03A918B0 RET
	0x03A918B4 SUB X31, X31, 0x50
	0x03A918B8 STP D11, D10, [X31 + 0x10]
	0x03A918BC STP D9, D8, [X31 + 0x20]
	0x03A918C0 STP X30, X21, [X31 + 0x30]
	0x03A918C4 STP X20, X19, [X31 + 0x40]
	0x03A918C8 ADRP X21, 0x951000
	0x03A918CC LDRB W8, [X21 + 0x37C]
	0x03A918D0 MOV X19, X1
	0x03A918D4 MOV X20, X0
	0x03A918D8 MOV V9.16B, V0.16B
	0x03A918DC STR X0, [X31 + 0x8]
	0x03A918E0 TBNZ X8, 0x0, 0x3A91904
	0x03A918E4 ADRP X0, 0x666000
	0x03A918E8 LDR X0, [X0 + 0xC0]
	0x03A918EC BL 0x1C16CF4
	0x03A918F0 ADRP X0, 0x666000
	0x03A918F4 LDR X0, [X0 + 0x118]
	0x03A918F8 BL 0x1C16CF4
	0x03A918FC MOVZ W8, 0x1
	0x03A91900 STRB W8, [X21 + 0x37C]
	0x03A91904 ADRP X8, 0xFFFFFFFFFD059000
	0x03A91908 LDR V11, [X8 + 0x104]
	0x03A9190C FMOV S10, 0.5
	0x03A91910 FMUL S0, S9, S11
	0x03A91914 FMUL S0, S0, S10
	0x03A91918 BL 0x3EB1BD0
	0x03A9191C ANDS W31, W20, 0xFF
	0x03A91920 MOV V8.16B, V0.16B
	0x03A91924 B.EQ 0x3A91944
	0x03A91928 ADRP X8, 0x666000
	0x03A9192C LDR X8, [X8 + 0x118]
	0x03A91930 ADD X0, X31, 0x8
	0x03A91934 LDR X1, [X8]
	0x03A91938 BL 0x243AC20
	0x03A9193C FMUL S0, S0, S11
	0x03A91940 B 0x3A91970
	0x03A91944 FMUL S0, S9, S10
	0x03A91948 FMUL S0, S0, S11
	0x03A9194C BL 0x3EB1E50
	0x03A91950 MOVZ W8, 0x42380000
	0x03A91954 MOVZ W9, 0x3C800000
	0x03A91958 FMOV S1, W8
	0x03A9195C FMUL S0, S0, S1
	0x03A91960 FMOV S1, W9
	0x03A91964 FMUL S0, S0, S1
	0x03A91968 BL 0x3EB1BE0
	0x03A9196C FADD S0, S0, S0
	0x03A91970 FMUL S0, S0, S10
	0x03A91974 BL 0x3EB1BD0
	0x03A91978 ADRP X8, 0xFFFFFFFFFD059000
	0x03A9197C LDR V1, [X8 + 0x410]
	0x03A91980 FSUB S0, S0, S8
	0x03A91984 FMOV S2, 1
	0x03A91988 FNEG S3, S8
	0x03A9198C FMAX S0, S0, S1
	0x03A91990 FDIV S0, S2, S0
	0x03A91994 FMUL S1, S0, S3
	0x03A91998 STP S0, S1, [X19 + 0x8]
	0x03A9199C LDP X20, X19, [X31 + 0x40]
	0x03A919A0 LDP X30, X21, [X31 + 0x30]
	0x03A919A4 LDP D9, D8, [X31 + 0x20]
	0x03A919A8 LDP D11, D10, [X31 + 0x10]
	0x03A919AC ADD X31, X31, 0x50
	0x03A919B0 RET
	0x03A919B4 SUB X31, X31, 0xE0
	0x03A919B8 STR D8, [X31 + 0x80]
	0x03A919BC STR X30, [X31 + 0x88]
	0x03A919C0 STP X28, X27, [X31 + 0x90]
	0x03A919C4 STP X26, X25, [X31 + 0xA0]
	0x03A919C8 STP X24, X23, [X31 + 0xB0]
	0x03A919CC STP X22, X21, [X31 + 0xC0]
	0x03A919D0 STP X20, X19, [X31 + 0xD0]
	0x03A919D4 ADRP X28, 0x951000
	0x03A919D8 ADRP X27, 0x68B000
	0x03A919DC LDRB W8, [X28 + 0x37D]
	0x03A919E0 LDR X27, [X27 + 0x8A8]
	0x03A919E4 MOV X19, X7
	0x03A919E8 MOV X21, X6
	0x03A919EC MOV X23, X5
	0x03A919F0 MOV X20, X4
	0x03A919F4 MOV X25, X3
	0x03A919F8 MOV W22, W2
	0x03A919FC MOV X24, X1
	0x03A91A00 MOV X26, X0
	0x03A91A04 TBNZ X8, 0x0, 0x3A91A40
	0x03A91A08 ADRP X0, 0x6C5000
	0x03A91A0C LDR X0, [X0 + 0x1B8]
	0x03A91A10 BL 0x1C16CF4
	0x03A91A14 ADRP X0, 0x666000
	0x03A91A18 LDR X0, [X0 + 0x138]
	0x03A91A1C BL 0x1C16CF4
	0x03A91A20 ADRP X0, 0x662000
	0x03A91A24 LDR X0, [X0 + 0x598]
	0x03A91A28 BL 0x1C16CF4
	0x03A91A2C ADRP X0, 0x68B000
	0x03A91A30 LDR X0, [X0 + 0x8A8]
	0x03A91A34 BL 0x1C16CF4
	0x03A91A38 MOVZ W8, 0x1
	0x03A91A3C STRB W8, [X28 + 0x37D]
	0x03A91A40 LDR X0, [X27]
	0x03A91A44 MOVI V0.2D, 0x0
	0x03A91A48 STP V0, V0, [X31 + 0x60]
	0x03A91A4C STP V0, V0, [X31 + 0x40]
	0x03A91A50 LDR W8, [X0 + 0xE0]
	0x03A91A54 CBNZ W8, 0x3A91A60
	0x03A91A58 BL 0x1C16DFC
	0x03A91A5C LDR X0, [X27]
	0x03A91A60 LDR X8, [X0 + 0xB8]
	0x03A91A64 LDUR V0, [X8 + 0x1C]
	0x03A91A68 STR V0, [X25]
	0x03A91A6C LDR X8, [X27]
	0x03A91A70 LDR X8, [X8 + 0xB8]
	0x03A91A74 LDUR V0, [X8 + 0x2C]
	0x03A91A78 STR V0, [X20]
	0x03A91A7C LDR X8, [X27]
	0x03A91A80 LDR X8, [X8 + 0xB8]
	0x03A91A84 LDUR V0, [X8 + 0x5C]
	0x03A91A88 STR V0, [X19]
	0x03A91A8C LDR X8, [X27]
	0x03A91A90 LDR X8, [X8 + 0xB8]
	0x03A91A94 LDUR V0, [X8 + 0x3C]
	0x03A91A98 STR V0, [X23]
	0x03A91A9C LDR X8, [X27]
	0x03A91AA0 LDR X8, [X8 + 0xB8]
	0x03A91AA4 LDUR V0, [X8 + 0x4C]
	0x03A91AA8 STR V0, [X21]
	0x03A91AAC TBNZ X22, 0x1F, 0x3A91D14
	0x03A91AB0 ADRP X8, 0x6C5000
	0x03A91AB4 LDR X8, [X8 + 0x1B8]
	0x03A91AB8 ADRP X28, 0x662000
	0x03A91ABC MOV X0, X26
	0x03A91AC0 MOV X1, X24
	0x03A91AC4 LDR X3, [X8]
	0x03A91AC8 LDR X28, [X28 + 0x598]
	0x03A91ACC MOV W2, W22
	0x03A91AD0 BL 0x22222C0
	0x03A91AD4 MOV X1, X31
	0x03A91AD8 MOV X24, X0
	0x03A91ADC BL 0x3C5BBF0
	0x03A91AE0 MOV X22, X0
	0x03A91AE4 ADD X8, X31, 0x0
	0x03A91AE8 MOV X0, X24
	0x03A91AEC MOV X1, X31
	0x03A91AF0 BL 0x3C5BC90
	0x03A91AF4 LDP V0, V1, [X31]
	0x03A91AF8 LDP V2, V3, [X31 + 0x20]
	0x03A91AFC MOV X0, X24
	0x03A91B00 MOV X1, X31
	0x03A91B04 STP V0, V1, [X31 + 0x40]
	0x03A91B08 STP V2, V3, [X31 + 0x60]
	0x03A91B0C BL 0x3C5BC7C
	0x03A91B10 CMP W0, 0x1
	0x03A91B14 B.NE 0x3A91B20
	0x03A91B18 MOV X21, X25
	0x03A91B1C B 0x3A91C00
	0x03A91B20 MOV W26, W0
	0x03A91B24 ADD X0, X31, 0x40
	0x03A91B28 MOVZ W1, 0x3
	0x03A91B2C MOV X2, X31
	0x03A91B30 BL 0x3C27C24
	0x03A91B34 MOVZ W8, 0x3F800000
	0x03A91B38 MOV X0, X24
	0x03A91B3C MOV X1, X31
	0x03A91B40 STP S0, S1, [X25]
	0x03A91B44 STR S2, [X25 + 0x8]
	0x03A91B48 STR W8, [X25 + 0xC]
	0x03A91B4C BL 0x3C5BCAC
	0x03A91B50 LDR X0, [X27]
	0x03A91B54 MOV V8.16B, V0.16B
	0x03A91B58 LDR W8, [X0 + 0xE0]
	0x03A91B5C CBNZ W8, 0x3A91B64
	0x03A91B60 BL 0x1C16DFC
	0x03A91B64 ADRP X8, 0xFFFFFFFFFD059000
	0x03A91B68 ADRP X9, 0xFFFFFFFFFD058000
	0x03A91B6C LDR V1, [X8 + 0x390]
	0x03A91B70 LDR V2, [X9 + 0xF28]
	0x03A91B74 FMUL S0, S8, S8
	0x03A91B78 FNMUL S3, S8, S8
	0x03A91B7C FMUL S1, S0, S1
	0x03A91B80 FMOV S4, 1
	0x03A91B84 FMAX S2, S0, S2
	0x03A91B88 FSUB S0, S1, S0
	0x03A91B8C FDIV S1, S4, S2
	0x03A91B90 FDIV S0, S3, S0
	0x03A91B94 STP S1, S0, [X23]
	0x03A91B98 CBNZ W26, 0x3A91C28
	0x03A91B9C MOV X0, X24
	0x03A91BA0 MOV X1, X31
	0x03A91BA4 BL 0x3C5BCB4
	0x03A91BA8 MOV V8.16B, V0.16B
	0x03A91BAC CBZ X22, 0x3A91BDC
	0x03A91BB0 MOV X0, X22
	0x03A91BB4 MOV X1, X31
	0x03A91BB8 BL 0x3C16704
	0x03A91BBC ADRP X8, 0x666000
	0x03A91BC0 LDR X8, [X8 + 0x138]
	0x03A91BC4 ADD X0, X31, 0x0
	0x03A91BC8 STR X31, [X31]
	0x03A91BCC LDR X1, [X8]
	0x03A91BD0 BL 0x243AC08
	0x03A91BD4 LDR X25, [X31]
	0x03A91BD8 B 0x3A91BE0
	0x03A91BDC MOV X25, X31
	0x03A91BE0 LDR X0, [X27]
	0x03A91BE4 LDR W8, [X0 + 0xE0]
	0x03A91BE8 CBNZ W8, 0x3A91BF0
	0x03A91BEC BL 0x1C16DFC
	0x03A91BF0 MOV V0.16B, V8.16B
	0x03A91BF4 MOV X0, X25
	0x03A91BF8 MOV X1, X23
	0x03A91BFC BL 0x3A918B4
	0x03A91C00 ADD X0, X31, 0x40
	0x03A91C04 MOVZ W1, 0x2
	0x03A91C08 MOV X2, X31
	0x03A91C0C BL 0x3C27C24
	0x03A91C10 FNEG S0, S0
	0x03A91C14 FNEG S1, S1
	0x03A91C18 FNEG S2, S2
	0x03A91C1C STP S0, S1, [X21]
	0x03A91C20 STR S2, [X21 + 0x8]
	0x03A91C24 STR W31, [X21 + 0xC]
	0x03A91C28 MOV X0, X24
	0x03A91C2C MOV X1, X31
	0x03A91C30 BL 0x3C5BC84
	0x03A91C34 STP S0, S1, [X20]
	0x03A91C38 STP S2, S3, [X20 + 0x8]
	0x03A91C3C LDR X0, [X28]
	0x03A91C40 LDR W8, [X0 + 0xE0]
	0x03A91C44 CBNZ W8, 0x3A91C4C
	0x03A91C48 BL 0x1C16DFC
	0x03A91C4C MOV X0, X22
	0x03A91C50 MOV X1, X31
	0x03A91C54 MOV X2, X31
	0x03A91C58 BL 0x3C354F8
	0x03A91C5C TBZ X0, 0x0, 0x3A91D14
	0x03A91C60 CBZ X22, 0x3A91D38
	0x03A91C64 ADD X8, X31, 0x0
	0x03A91C68 MOV X0, X22
	0x03A91C6C MOV X1, X31
	0x03A91C70 BL 0x3C16AA0
	0x03A91C74 LDR W8, [X31 + 0x8]
	0x03A91C78 CMP W8, 0x1
	0x03A91C7C B.NE 0x3A91D14
	0x03A91C80 ADD X8, X31, 0x0
	0x03A91C84 MOV X0, X22
	0x03A91C88 MOV X1, X31
	0x03A91C8C BL 0x3C16AA0
	0x03A91C90 LDR W8, [X31 + 0x4]
	0x03A91C94 TBNZ X8, 0x1F, 0x3A91D14
	0x03A91C98 ADD X8, X31, 0x0
	0x03A91C9C MOV X0, X22
	0x03A91CA0 MOV X1, X31
	0x03A91CA4 BL 0x3C16AA0
	0x03A91CA8 LDR W8, [X31 + 0x4]
	0x03A91CAC CMP W8, 0x3
	0x03A91CB0 B.GT 0x3A91D14
	0x03A91CB4 ADD X8, X31, 0x0
	0x03A91CB8 MOV X0, X22
	0x03A91CBC MOV X1, X31
	0x03A91CC0 BL 0x3C16AA0
	0x03A91CC4 LDR W8, [X31 + 0x4]
	0x03A91CC8 CMP W8, 0x3
	0x03A91CCC B.HI 0x3A91D3C
	0x03A91CD0 ADRP X9, 0xFFFFFFFFFD106000
	0x03A91CD4 ADD X9, X9, 0xB40
	0x03A91CD8 ADR X10, 0x10
	0x03A91CDC LDRB W11, [X9, X8, LSL]
	0x03A91CE0 ADD X10, X10, X11, 0x2, LSL
	0x03A91CE4 BR X10
	0x03A91CE8 MOVZ W8, 0x3F800000
	0x03A91CEC STR W8, [X19]
	0x03A91CF0 B 0x3A91D14
	0x03A91CF4 MOVZ W8, 0x3F800000
	0x03A91CF8 STR W8, [X19 + 0x8]
	0x03A91CFC B 0x3A91D14
	0x03A91D00 MOVZ W8, 0x3F800000
	0x03A91D04 STR W8, [X19 + 0x4]
	0x03A91D08 B 0x3A91D14
	0x03A91D0C MOVZ W8, 0x3F800000
	0x03A91D10 STR W8, [X19 + 0xC]
	0x03A91D14 LDP X20, X19, [X31 + 0xD0]
	0x03A91D18 LDP X22, X21, [X31 + 0xC0]
	0x03A91D1C LDP X24, X23, [X31 + 0xB0]
	0x03A91D20 LDP X26, X25, [X31 + 0xA0]
	0x03A91D24 LDP X28, X27, [X31 + 0x90]
	0x03A91D28 LDR X30, [X31 + 0x88]
	0x03A91D2C LDR V8, [X31 + 0x80]
	0x03A91D30 ADD X31, X31, 0xE0
	0x03A91D34 RET
	0x03A91D38 BL 0x1C16F20
	0x03A91D3C ADRP X0, 0x66C000
	0x03A91D40 LDR X0, [X0 + 0xF78]
	0x03A91D44 BL 0x1C16D08
	0x03A91D48 BL 0x1C16F10
	0x03A91D4C MOV X19, X0
	0x03A91D50 ADRP X0, 0x6C6000
	0x03A91D54 LDR X0, [X0 + 0x3A0]
	0x03A91D58 BL 0x1C16D08
	0x03A91D5C MOV X1, X0
	0x03A91D60 MOV X0, X19
	0x03A91D64 MOV X2, X31
	0x03A91D68 BL 0x3379B6C
	0x03A91D6C ADRP X0, 0x6C6000
	0x03A91D70 LDR X0, [X0 + 0x3A8]
	0x03A91D74 BL 0x1C16D08
	0x03A91D78 MOV X1, X0
	0x03A91D7C MOV X0, X19
	0x03A91D80 BL 0x1C16DEC
	0x03A91D84 STR X30, [X31 - 0x10]!
	0x03A91D88 LDR X8, [X2 + 0x1D0]
	0x03A91D8C MOV X3, X2
	0x03A91D90 CBZ X8, 0x3A91DAC
	0x03A91D94 MOV X2, X1
	0x03A91D98 MOV X1, X0
	0x03A91D9C MOV X0, X8
	0x03A91DA0 MOV X4, X31
	0x03A91DA4 LDR X30, [X31], #0x10
	0x03A91DA8 B 0x3A4C48C
	0x03A91DAC BL 0x1C16F20
	0x03A91DB0 STP X30, X25, [X31 - 0x40]!
	0x03A91DB4 STP X24, X23, [X31 + 0x10]
	0x03A91DB8 STP X22, X21, [X31 + 0x20]
	0x03A91DBC STP X20, X19, [X31 + 0x30]
	0x03A91DC0 ADRP X25, 0x951000
	0x03A91DC4 ADRP X21, 0x68B000
	0x03A91DC8 ADRP X24, 0x6BD000
	0x03A91DCC ADRP X19, 0x6BD000
	0x03A91DD0 ADRP X23, 0x663000
	0x03A91DD4 ADRP X22, 0x666000
	0x03A91DD8 ADRP X20, 0x6C6000
	0x03A91DDC LDR X21, [X21 + 0x8A8]
	0x03A91DE0 LDRB W8, [X25 + 0x37F]
	0x03A91DE4 LDR X24, [X24 + 0x8]
	0x03A91DE8 LDR X19, [X19 + 0x10]
	0x03A91DEC LDR X23, [X23 + 0xE30]
	0x03A91DF0 LDR X22, [X22 + 0xB70]
	0x03A91DF4 LDR X20, [X20 + 0x288]
	0x03A91DF8 TBNZ X8, 0x0, 0x3A91E64
	0x03A91DFC ADRP X0, 0x666000
	0x03A91E00 LDR X0, [X0 + 0xB70]
	0x03A91E04 BL 0x1C16CF4
	0x03A91E08 ADRP X0, 0x6BD000
	0x03A91E0C LDR X0, [X0 + 0x10]
	0x03A91E10 BL 0x1C16CF4
	0x03A91E14 ADRP X0, 0x663000
	0x03A91E18 LDR X0, [X0 + 0xE30]
	0x03A91E1C BL 0x1C16CF4
	0x03A91E20 ADRP X0, 0x6BD000
	0x03A91E24 LDR X0, [X0 + 0x8]
	0x03A91E28 BL 0x1C16CF4
	0x03A91E2C ADRP X0, 0x6C6000
	0x03A91E30 LDR X0, [X0 + 0x3B0]
	0x03A91E34 BL 0x1C16CF4
	0x03A91E38 ADRP X0, 0x6C6000
	0x03A91E3C LDR X0, [X0 + 0x3B8]
	0x03A91E40 BL 0x1C16CF4
	0x03A91E44 ADRP X0, 0x6C6000
	0x03A91E48 LDR X0, [X0 + 0x288]
	0x03A91E4C BL 0x1C16CF4
	0x03A91E50 ADRP X0, 0x68B000
	0x03A91E54 LDR X0, [X0 + 0x8A8]
	0x03A91E58 BL 0x1C16CF4
	0x03A91E5C MOVZ W8, 0x1
	0x03A91E60 STRB W8, [X25 + 0x37F]
	0x03A91E64 LDR X8, [X21]
	0x03A91E68 ADRP X9, 0xFFFFFFFFFD059000
	0x03A91E6C LDR V0, [X9 + 0x47]
	0x03A91E70 ADRP X9, 0xFFFFFFFFFD05B000
	0x03A91E74 LDR X10, [X8 + 0xB8]
	0x03A91E78 LDR V1, [X9 + 0xBB]
	0x03A91E7C ADRP X25, 0x6C6000
	0x03A91E80 STRB W31, [X10]
	0x03A91E84 STUR V0, [X10 + 0x1C]
	0x03A91E88 LDR X9, [X8 + 0xB8]
	0x03A91E8C ADRP X10, 0xFFFFFFFFFD05B000
	0x03A91E90 STUR V1, [X9 + 0x2C]
	0x03A91E94 LDR V1, [X10 + 0xF3]
	0x03A91E98 LDR X9, [X8 + 0xB8]
	0x03A91E9C STUR V1, [X9 + 0x3C]
	0x03A91EA0 LDR X9, [X8 + 0xB8]
	0x03A91EA4 STUR V0, [X9 + 0x4C]
	0x03A91EA8 LDR X8, [X8 + 0xB8]
	0x03A91EAC STUR X31, [X8 + 0x64]
	0x03A91EB0 STUR X31, [X8 + 0x5C]
	0x03A91EB4 LDR X0, [X24]
	0x03A91EB8 ADRP X24, 0x6C6000
	0x03A91EBC LDR X25, [X25 + 0x3B0]
	0x03A91EC0 LDR X24, [X24 + 0x3B8]
	0x03A91EC4 BL 0x1C16F10
	0x03A91EC8 LDR X1, [X19]
	0x03A91ECC MOV X19, X0
	0x03A91ED0 BL 0x30CE5F4
	0x03A91ED4 LDR X8, [X21]
	0x03A91ED8 LDR X8, [X8 + 0xB8]
	0x03A91EDC STR X19, [X8 + 0x70]
	0x03A91EE0 LDR X0, [X23]
	0x03A91EE4 BL 0x1C16F10
	0x03A91EE8 LDR X1, [X22]
	0x03A91EEC MOV X19, X0
	0x03A91EF0 BL 0x2FDBF14
	0x03A91EF4 LDR X8, [X21]
	0x03A91EF8 LDR X8, [X8 + 0xB8]
	0x03A91EFC STR X19, [X8 + 0x78]
	0x03A91F00 LDR X0, [X20]
	0x03A91F04 LDR W8, [X0 + 0xE0]
	0x03A91F08 CBNZ W8, 0x3A91F14
	0x03A91F0C BL 0x1C16DFC
	0x03A91F10 LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D8
	003 Move [X31+32], X29
	004 Move [X31+40], X30
	005 Move [X31+48], X28
	006 Move [X31+56], X27
	007 Move [X31+64], X26
	008 Move [X31+72], X25
	009 Move [X31+80], X24
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move [X31+28], W3
	016 Move X22, 0x952000
	017 Move X21, 0x68C000
	018 Move W8, [X22+873]
	019 Move X21, [X21+2200]
	020 Move X19, X6
	021 Move W26, W5
	022 Move W23, W4
	023 Move X24, X2
	024 Move X25, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {62}
	030 Move X0, 0x6C7000
	031 Move X0, [X0+296]
	032 Call 0x1C17CF4
	033 Move X0, 0x664000
	034 Move X0, [X0+3600]
	035 Call 0x1C17CF4
	036 Move X0, 0x6BD000
	037 Move X0, [X0+4080]
	038 Call 0x1C17CF4
	039 Move X0, 0x6BD000
	040 Move X0, [X0+4088]
	041 Call 0x1C17CF4
	042 Move X0, 0x66A000
	043 Move X0, [X0+2136]
	044 Call 0x1C17CF4
	045 Move X0, 0x6C6000
	046 Move X0, [X0+440]
	047 Call 0x1C17CF4
	048 Move X0, 0x663000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x68C000
	052 Move X0, [X0+2200]
	053 Call 0x1C17CF4
	054 Move X0, 0x6C4000
	055 Move X0, [X0+3120]
	056 Call 0x1C17CF4
	057 Move X0, 0x68C000
	058 Move X0, [X0+2216]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+873], W8
	062 Move X0, [X21]
	063 Move [X31+24], W31
	064 Move [X31+8], X31
	065 Move X29, 0x68C000
	066 Move W8, [X0+224]
	067 Move X29, [X29+2216]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 Add X0, X31, 24
	074 Move X1, X31
	075 Move X3, X31
	076 Move X2, [X8+64]
	077 Call ProfilingScope..ctor, X0, X1, X2
	078 Move X0, [X29]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X29]
	084 Move X8, [X0+184]
	085 Move X9, [X8+112]
	086 Compare X9, 0
	087 JumpIfEqual {571}
	088 Move W10, [X9+28]
	089 Add W10, W10, 1
	090 Move [X9+24], W31
	091 Move [X9+28], W10
	092 Move X8, [X8+120]
	093 Compare X8, 0
	094 JumpIfEqual {572}
	095 Move W9, [X8+28]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Add W9, W9, 1
	098 Move [X8+24], W31
	099 Move [X8+28], W9
	100 Move [X31], W26
	101 Move [X31+4], W23
	102 Move X21, 0x663000
	103 Move X22, 0x6C4000
	104 Move X23, 0x664000
	105 Move X21, [X21+1432]
	106 Move X22, [X22+3120]
	107 Move X23, [X23+3600]
	108 Move W26, W31
	109 Move X8, 0x6C6000
	110 Move X8, [X8+440]
	111 Move X3, [X8]
	112 Move X0, X25
	113 Move X1, X24
	114 Move W2, W26
	115 Call 0x22232C0, X0, X1
	116 Move X1, X31
	117 Call VisibleLight.get_light, X0
	118 Move X27, X0
	119 Move X0, [X21]
	120 Move [X31+8], X31
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X27
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {145}
	133 Compare X27, 0
	134 JumpIfEqual {558}
	135 Move X0, X27
	136 Move X1, X31
	137 Call Component.get_gameObject, X0
	138 Compare X0, 0
	139 JumpIfEqual {559}
	140 Move X8, 0x6C7000
	141 Move X8, [X8+296]
	142 Move X2, [X8]
	143 Add X1, X31, 8
	144 Call 0x21E7600, X0, X1
	145 Move X0, [X21]
	146 Move X28, [X31+8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X28
	152 Move X1, X31
	153 Call Object.op_Implicit, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {164}
	158 Move X8, [X31+8]
	159 Compare X8, 0
	160 JumpIfEqual {557}
	161 Move W8, [X8+36]
	162 Compare W8, 0
	163 JumpIfEqual {324}
	164 Move X0, [X29]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X29]
	170 Compare X20, 0
	171 JumpIfEqual {552}
	172 Move X8, [X0+184]
	173 Move X0, [X8+112]
	174 Compare X0, 0
	175 JumpIfEqual {551}
	176 Move X8, 0x6BD000
	177 Move S0, [X20+204]
	178 Move S1, [X20+208]
	179 Move W10, [X0+28]
	180 Move X9, [X0+16]
	181 Move X8, [X8+4080]
	182 Add W10, W10, 1
	183 Move X8, [X8]
	184 Move [X0+28], W10
	185 Compare X9, 0
	186 JumpIfEqual {550}
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Move W11, [X9+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add W8, W10, 1
	191 Add X9, X9, X10
	192 Move [X0+24], W8
	193 Move [X9+32], S0
	194 Move [X9+36], S1
	195 Move [X9+40], X31
	196 Move X8, [X8+32]
	197 Move X8, [X8+192]
	198 Move X1, [X8+112]
	199 Move S2, W31
	200 Move S3, W31
	201 Call List`1<Vector4>.AddWithResize, X0, X1
	202 Move X0, [X21]
	203 Move X28, [X31+8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X28
	209 Move X1, X31
	210 Call Object.op_Implicit, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {257}
	215 Move X8, [X31+8]
	216 Compare X8, 0
	217 JumpIfEqual {556}
	218 Move X0, [X22]
	219 Move W28, [X8+48]
	220 Move W9, [X0+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {225}
	223 Call 0x1C17DFC
	224 Move X0, [X22]
	225 Move X8, [X0+184]
	226 Move W8, [X8]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, [X29]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X29]
	234 Compare X27, 0
	235 JumpIfEqual {563}
	236 Move X8, [X0+184]
	237 Move X28, [X8+120]
	238 Move X0, X27
	239 Move X1, X31
	240 Call Light.get_shadowResolution, X0
	241 Move W1, W0
	242 Compare X28, 0
	243 JumpIfEqual {562}
	244 Move W10, [X28+28]
	245 Move X8, [X28+16]
	246 Move X9, [X23]
	247 Add W10, W10, 1
	248 Move [X28+28], W10
	249 Compare X8, 0
	250 JumpIfEqual {561}
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Move W11, [X8+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W9, W10, 1
	255 Add X8, X8, X10
	256 Move [X28+24], W9
	257 Move X0, [X21]
	258 Move X27, [X31+8]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move X0, X27
	264 Move X1, X31
	265 Call Object.op_Implicit, X0
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {284}
	270 Move X9, [X31+8]
	271 Compare X9, 0
	272 JumpIfEqual {560}
	273 Move X8, [X22]
	274 Move W27, [X9+48]
	275 Move W10, [X8+224]
	276 Compare W10, 0
	277 JumpIfNotEqual {281}
	278 Move X0, X8
	279 Call 0x1C17DFC
	280 Move X8, [X22]
	281 Move X9, [X8+184]
	282 Move W10, [X9]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X0, [X29]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {290}
	288 Call 0x1C17DFC
	289 Move X0, [X29]
	290 Move X8, [X22]
	291 Move X9, [X0+184]
	292 Move W10, [X8+224]
	293 Move X27, [X9+120]
	294 Compare W10, 0
	295 JumpIfNotEqual {298}
	296 Move X0, X8
	297 Call 0x1C17DFC
	298 Compare X20, 0
	299 JumpIfEqual {553}
	300 Move X8, [X22]
	301 Move X8, [X8+184]
	302 Move W1, [X8+16]
	303 Move X0, X20
	304 Move X2, X31
	305 Call UniversalRenderPipelineAsset.GetAdditionalLightsShadowResolution, X0, X1
	306 Move W1, W0
	307 Compare X27, 0
	308 JumpIfEqual {554}
	309 Move W10, [X27+28]
	310 Move X8, [X27+16]
	311 Move X9, [X23]
	312 Add W10, W10, 1
	313 Move [X27+28], W10
	314 Compare X8, 0
	315 JumpIfEqual {555}
	316 NotImplemented "Instruction LDRSW not yet implemented."
	317 Move W11, [X8+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X8, [X9+32]
	320 Move X8, [X8+192]
	321 Move X2, [X8+112]
	322 Move X0, X27
	323 Call List`1<Int32>.AddWithResize, X0, X1
	324 Move X0, [X29]
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {330}
	328 Call 0x1C17DFC
	329 Move X0, [X29]
	330 Compare X27, 0
	331 JumpIfEqual {566}
	332 Move X8, [X0+184]
	333 Move X28, [X8+112]
	334 Move X0, X27
	335 Move X1, X31
	336 Call Light.get_shadowBias, X0
	337 Move V8, V0
	338 Move X0, X27
	339 Move X1, X31
	340 Call Light.get_shadowNormalBias, X0
	341 Compare X28, 0
	342 JumpIfEqual {564}
	343 Move X8, 0x6BD000
	344 Move W10, [X28+28]
	345 Move X9, [X28+16]
	346 Move X8, [X8+4080]
	347 Add W10, W10, 1
	348 Move X8, [X8]
	349 Move [X28+28], W10
	350 Compare X9, 0
	351 JumpIfEqual {565}
	352 NotImplemented "Instruction LDRSW not yet implemented."
	353 Move W11, [X9+24]
	354 Move V1, V0
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Add W8, W10, 1
	357 Add X9, X9, X10
	358 Move [X28+24], W8
	359 Move [X9+32], S8
	360 Move X10, [X31+8]
	361 Compare X10, 0
	362 JumpIfEqual {570}
	363 Move W11, [X8+224]
	364 Move W27, [X10+48]
	365 Compare W11, 0
	366 JumpIfNotEqual {371}
	367 Move X0, X8
	368 Call 0x1C17DFC
	369 Move X8, [X22]
	370 Move X9, [X8+184]
	371 Move X0, [X29]
	372 Move W8, [X9+12]
	373 Move W9, [X9+4]
	374 Move W10, [X0+224]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 NotImplemented "Instruction CSEL not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 NotImplemented "Instruction CSEL not yet implemented."
	379 Compare W10, 0
	380 JumpIfNotEqual {383}
	381 Call 0x1C17DFC
	382 Move X0, [X29]
	383 Compare X20, 0
	384 JumpIfEqual {569}
	385 Move X8, [X0+184]
	386 Move X27, [X8+120]
	387 Move X0, X20
	388 Move W1, W28
	389 Move X2, X31
	390 Call UniversalRenderPipelineAsset.GetAdditionalLightsShadowResolution, X0, X1
	391 Move W1, W0
	392 Compare X27, 0
	393 JumpIfEqual {568}
	394 Move W10, [X27+28]
	395 Move X8, [X27+16]
	396 Move X9, [X23]
	397 Add W10, W10, 1
	398 Move [X27+28], W10
	399 Compare X8, 0
	400 JumpIfEqual {567}
	401 NotImplemented "Instruction LDRSW not yet implemented."
	402 Move W11, [X8+24]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Add W9, W10, 1
	405 Add X8, X8, X10
	406 Move [X27+24], W9
	407 Move [X8+32], W1
	408 Move X8, [X9+32]
	409 Move X8, [X8+192]
	410 Move X2, [X8+112]
	411 Move X0, X28
	412 Call List`1<Int32>.AddWithResize, X0, X1
	413 Move X8, [X8+32]
	414 Move X8, [X8+192]
	415 Move X1, [X8+112]
	416 Move S2, W31
	417 Move S3, W31
	418 Move X0, X28
	419 Move V0, V8
	420 Call List`1<Vector4>.AddWithResize, X0, X1
	421 Move X8, [X9+32]
	422 Move X8, [X8+192]
	423 Move X2, [X8+112]
	424 Move X0, X27
	425 Call List`1<Int32>.AddWithResize, X0, X1
	426 Add W26, W26, 1
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X0, [X29]
	429 Move W26, [X31]
	430 Move W23, [X31+4]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {436}
	434 Call 0x1C17DFC
	435 Move X0, [X29]
	436 Move X8, [X0+184]
	437 Move X9, [X8+112]
	438 Move [X19+56], X9
	439 Move X8, [X8+120]
	440 Move [X19+64], X8
	441 Compare X20, 0
	442 JumpIfEqual {573}
	443 Move W8, [X20+128]
	444 Compare W8, 0
	445 JumpIfEqual {449}
	446 Move W8, [X20+124]
	447 NotImplemented "Instruction CMP not yet implemented."
	448 NotImplemented "Instruction CSET not yet implemented."
	449 Move [X19+1], W8
	450 Move X0, X31
	451 Call SystemInfo.get_supportsShadows
	452 Move TEMP, X0
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {457}
	456 Move W8, [X19+1]
	457 Move W8, W31
	458 Move W9, [X31+28]
	459 Move [X19+2], W31
	460 And W8, W9, W8
	461 And W8, W8, 1
	462 Move [X19], W8
	463 Move X0, X31
	464 Call SystemInfo.get_graphicsDeviceType
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move W8, 1
	467 Move [X19+12], W8
	468 Move W8, [X20+132]
	469 Move S2, W31
	470 Move S1, 1
	471 Move S0, W31
	472 Move [X19+4], W8
	473 Move [X19+8], W8
	474 Move [X19+16], S1
	475 Move [X19+24], S2
	476 Move [X19+24], S0
	477 Move V0, [X20+200]
	478 Move [X19+28], S0
	479 Move W8, [X20+144]
	480 Compare W8, 0
	481 JumpIfEqual {487}
	482 Move W8, [X20+136]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 NotImplemented "Instruction CSET not yet implemented."
	485 Or W8, W8, W26
	486 And W8, W8, 1
	487 Move [X19+33], W8
	488 Move X0, X31
	489 Call SystemInfo.get_supportsShadows
	490 Move TEMP, X0
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfNotEqual {506}
	494 Move W8, [X19+33]
	495 Move W8, [X20+172]
	496 Move S0, W31
	497 Move [X19+12], W8
	498 Move W9, [X20+132]
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Move [X19+4], W9
	501 Move [X19+8], W9
	502 NotImplemented "Instruction CMP not yet implemented."
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move V1, [X20+176]
	505 Move S2, 1
	506 Move W8, W31
	507 And W8, W23, W8
	508 And W8, W8, 1
	509 Move [X19+32], W8
	510 Move W9, [X20+148]
	511 Move [X19+36], W9
	512 Move [X19+40], W9
	513 Move W9, [X20+212]
	514 Compare W9, 0
	515 JumpIfEqual {520}
	516 Move W9, [X19]
	517 Or W8, W9, W8
	518 NotImplemented "Instruction CMP not yet implemented."
	519 NotImplemented "Instruction CSET not yet implemented."
	520 Move W8, W31
	521 Move [X19+44], W8
	522 Move W8, 16
	523 Add X0, X31, 24
	524 Move X1, X31
	525 Move [X19+48], W8
	526 NotImplemented "Instruction STRH not yet implemented."
	527 Call ProfilingScope.Dispose, X0
	528 Move X20, [X31+112]
	529 Move X19, [X31+120]
	530 Move X22, [X31+96]
	531 Move X21, [X31+104]
	532 Move X24, [X31+80]
	533 Move X23, [X31+88]
	534 Move X26, [X31+64]
	535 Move X25, [X31+72]
	536 Move X28, [X31+48]
	537 Move X27, [X31+56]
	538 Move X29, [X31+32]
	539 Move X30, [X31+40]
	540 Move V8, [X31+16]
	541 Add X31, X31, 128
	542 Return 
	543 Move S1, [X20+180]
	544 Move S2, [X20+184]
	545 Move S1, 1
	546 Move S2, W31
	547 Move S1, [X20+188]
	548 Move S2, [X20+192]
	549 Move V0, [X20+196]
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Call 0x1C17F20
	553 Call 0x1C17F20
	554 Call 0x1C17F20
	555 Call 0x1C17F20
	556 Call 0x1C17F20
	557 Call 0x1C17F20
	558 Call 0x1C17F20
	559 Call 0x1C17F20
	560 Call 0x1C17F20
	561 Call 0x1C17F20
	562 Call 0x1C17F20
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Call 0x1C17F20
	569 Call 0x1C17F20
	570 Call 0x1C17F20
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Call 0x1C17F20
	574 Move X19, X0
	575 NotImplemented "Instruction CMP not yet implemented."
	576 Move X0, X19
	577 Call 0x3EB2AD0
	578 Move X20, [X0]
	579 Call 0x3EB2AE0
	580 Add X0, X31, 24
	581 Move X1, X31
	582 Call ProfilingScope.Dispose, X0
	583 Compare X20, 0
	584 JumpIfEqual {528}
	585 Move X0, X20
	586 Call 0x1C17F18
	587 Move X20, X31
	588 Move X19, X0
	589 Add X0, X31, 24
	590 Move X1, X31
	591 Call ProfilingScope.Dispose, X0
	592 Compare X20, 0
	593 JumpIfNotEqual {596}
	594 Move X0, X19
	595 Call 0x1D2D690
	596 Move X0, X20
	597 Call 0x1C17F18
	598 Call 0x1991590

Method: System.Void InitializePostProcessingData(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset settings, System.Boolean isHDROutputActive, out UnityEngine.Rendering.Universal.PostProcessingData postProcessingData)

Disassembly:
	0x03A91F14 LDR X8, [X0 + 0xB8]
	0x03A91F18 LDR X0, [X25]
	0x03A91F1C LDR X19, [X8]
	0x03A91F20 BL 0x1C16F10
	0x03A91F24 LDR X2, [X24]
	0x03A91F28 MOV X1, X19
	0x03A91F2C MOV X3, X31
	0x03A91F30 MOV X20, X0
	0x03A91F34 BL 0x3C60B98
	0x03A91F38 LDR X8, [X21]
	0x03A91F3C LDP X22, X21, [X31 + 0x20]
	0x03A91F40 LDP X24, X23, [X31 + 0x10]
	0x03A91F44 LDR X8, [X8 + 0xB8]
	0x03A91F48 STR X20, [X8 + 0x80]
	0x03A91F4C LDP X20, X19, [X31 + 0x30]
	0x03A91F50 LDP X30, X25, [X31], #0x40
	0x03A91F54 RET

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move W8, [X0+85]
	005 Compare W8, 0
	006 JumpIfEqual {8}
	007 Move W8, [X0+252]
	008 And W31, W1, 1
	009 NotImplemented "Instruction CSINC not yet implemented."
	010 Move [X2], W8
	011 Move W8, [X0+256]
	012 Move [X2+4], W8
	013 Move W8, [X0+260]
	014 Move [X2+8], W8
	015 Move W8, [X0+261]
	016 Move [X2+9], W8
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F20

Method: System.Void InitializeLightData(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset settings, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights, System.Int32 mainLightIndex, out UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03A91384 LDR X0, [X20 + 0x60]
	0x03A91388 CBZ X0, 0x3A91424
	0x03A9138C LDR X8, [X0]
	0x03A91390 LDR X9, [X8 + 0x218]
	0x03A91394 LDR X1, [X8 + 0x220]
	0x03A91398 BLR X9
	0x03A9139C MOV V8.16B, V0.16B
	0x03A913A0 LDR X0, [X20 + 0x68]
	0x03A913A4 CBZ X0, 0x3A91424
	0x03A913A8 LDR X8, [X0]
	0x03A913AC LDR X9, [X8 + 0x218]
	0x03A913B0 LDR X1, [X8 + 0x220]
	0x03A913B4 BLR X9
	0x03A913B8 TBZ X0, 0x0, 0x3A913CC
	0x03A913BC UBFM X8, X22, 0x20, 0x3F
	0x03A913C0 SCVTF S9, W21
	0x03A913C4 SCVTF S0, W8
	0x03A913C8 B 0x3A91400
	0x03A913CC LDR X0, [X20 + 0x70]
	0x03A913D0 CBZ X0, 0x3A91424
	0x03A913D4 LDR X8, [X0]
	0x03A913D8 LDR X9, [X8 + 0x218]
	0x03A913DC LDR X1, [X8 + 0x220]
	0x03A913E0 BLR X9
	0x03A913E4 LDR X0, [X20 + 0x78]
	0x03A913E8 CBZ X0, 0x3A91424
	0x03A913EC LDR X8, [X0]
	0x03A913F0 MOV V9.16B, V0.16B
	0x03A913F4 LDR X9, [X8 + 0x218]
	0x03A913F8 LDR X1, [X8 + 0x220]
	0x03A913FC BLR X9
	0x03A91400 FMOV S1, 1
	0x03A91404 STP S9, S0, [X19]
	0x03A91408 FDIV S0, S1, S8
	0x03A9140C STP S8, S0, [X19 + 0x8]
	0x03A91410 LDP X20, X19, [X31 + 0x30]
	0x03A91414 LDP X22, X21, [X31 + 0x20]
	0x03A91418 LDR X30, [X31 + 0x10]
	0x03A9141C LDP D9, D8, [X31], #0x40
	0x03A91420 RET
	0x03A91424 BL 0x1C16F20
	0x03A91428 STR D8, [X31 - 0x20]!
	0x03A9142C STR X30, [X31 + 0x8]
	0x03A91430 STP X20, X19, [X31 + 0x10]
	0x03A91434 CBZ X0, 0x3A914EC
	0x03A91438 MOV X20, X0
	0x03A9143C LDR X0, [X0 + 0x38]
	0x03A91440 CBZ X0, 0x3A914EC
	0x03A91444 LDR X8, [X0]
	0x03A91448 MOV X19, X1
	0x03A9144C LDR X9, [X8 + 0x218]
	0x03A91450 LDR X1, [X8 + 0x220]
	0x03A91454 BLR X9
	0x03A91458 CMP W0, 0x2
	0x03A9145C FMOV S8, W31
	0x03A91460 B.EQ 0x3A914AC
	0x03A91464 CMP W0, 0x1
	0x03A91468 B.NE 0x3A914CC
	0x03A9146C LDR X0, [X20 + 0x40]
	0x03A91470 CBZ X0, 0x3A914EC
	0x03A91474 LDR X8, [X0]
	0x03A91478 LDR X9, [X8 + 0x218]
	0x03A9147C LDR X1, [X8 + 0x220]
	0x03A91480 BLR X9
	0x03A91484 LDR X8, [X20 + 0x50]
	0x03A91488 CBZ X8, 0x3A914EC
	0x03A9148C LDR X9, [X8]
	0x03A91490 MOV W20, W0
	0x03A91494 MOV X0, X8
	0x03A91498 LDR X10, [X9 + 0x218]
	0x03A9149C LDR X1, [X9 + 0x220]
	0x03A914A0 BLR X10
	0x03A914A4 MOV V8.16B, V0.16B
	0x03A914A8 B 0x3A914D0
	0x03A914AC LDR X0, [X20 + 0x48]
	0x03A914B0 CBZ X0, 0x3A914EC
	0x03A914B4 LDR X8, [X0]
	0x03A914B8 LDR X9, [X8 + 0x218]
	0x03A914BC LDR X1, [X8 + 0x220]
	0x03A914C0 BLR X9
	0x03A914C4 MOV W20, W0
	0x03A914C8 B 0x3A914D0
	0x03A914CC MOV W20, W31
	0x03A914D0 SCVTF S0, W20
	0x03A914D4 STP S0, S8, [X19]
	0x03A914D8 STR X31, [X19 + 0x8]
	0x03A914DC LDP X20, X19, [X31 + 0x10]
	0x03A914E0 LDR X30, [X31 + 0x8]
	0x03A914E4 LDR V8, [X31], #0x20
	0x03A914E8 RET
	0x03A914EC BL 0x1C16F20
	0x03A914F0 STP X30, X21, [X31 - 0x20]!
	0x03A914F4 STP X20, X19, [X31 + 0x10]
	0x03A914F8 ADRP X20, 0x951000
	0x03A914FC ADRP X21, 0x662000
	0x03A91500 LDRB W8, [X20 + 0x375]
	0x03A91504 LDR X21, [X21 + 0x598]
	0x03A91508 MOV X19, X0
	0x03A9150C TBNZ X8, 0x0, 0x3A91530
	0x03A91510 ADRP X0, 0x662000
	0x03A91514 LDR X0, [X0 + 0x598]
	0x03A91518 BL 0x1C16CF4
	0x03A9151C ADRP X0, 0x68B000
	0x03A91520 LDR X0, [X0 + 0x8A8]
	0x03A91524 BL 0x1C16CF4
	0x03A91528 MOVZ W8, 0x1
	0x03A9152C STRB W8, [X20 + 0x375]
	0x03A91530 LDR X0, [X21]
	0x03A91534 LDR W8, [X0 + 0xE0]
	0x03A91538 CBNZ W8, 0x3A91540
	0x03A9153C BL 0x1C16DFC
	0x03A91540 MOV X0, X19
	0x03A91544 MOV X1, X31
	0x03A91548 MOV X2, X31
	0x03A9154C BL 0x3C3883C
	0x03A91550 TBNZ X0, 0x0, 0x3A915A4
	0x03A91554 ADRP X8, 0x68B000
	0x03A91558 LDR X8, [X8 + 0x8A8]
	0x03A9155C LDR X0, [X8]
	0x03A91560 LDR W8, [X0 + 0xE0]
	0x03A91564 CBNZ W8, 0x3A9156C
	0x03A91568 BL 0x1C16DFC
	0x03A9156C MOV X0, X19
	0x03A91570 BL 0x3A8AC50
	0x03A91574 TBZ X0, 0x0, 0x3A91594
	0x03A91578 CBZ X19, 0x3A915EC
	0x03A9157C MOV X0, X19
	0x03A91580 MOV X1, X31
	0x03A91584 BL 0x3C04884
	0x03A91588 CMP W0, 0x3
	0x03A9158C CSET W0, EQ
	0x03A91590 B 0x3A91598
	0x03A91594 MOV W0, W31
	0x03A91598 LDP X20, X19, [X31 + 0x10]
	0x03A9159C LDP X30, X21, [X31], #0x20
	0x03A915A0 RET
	0x03A915A4 ADRP X0, 0x667000
	0x03A915A8 LDR X0, [X0 + 0x528]
	0x03A915AC BL 0x1C16D08
	0x03A915B0 BL 0x1C16F10
	0x03A915B4 MOV X19, X0
	0x03A915B8 ADRP X0, 0x6C6000
	0x03A915BC LDR X0, [X0 + 0x2D0]
	0x03A915C0 BL 0x1C16D08
	0x03A915C4 MOV X1, X0
	0x03A915C8 MOV X0, X19
	0x03A915CC MOV X2, X31
	0x03A915D0 BL 0x330E100
	0x03A915D4 ADRP X0, 0x6C6000
	0x03A915D8 LDR X0, [X0 + 0x398]
	0x03A915DC BL 0x1C16D08
	0x03A915E0 MOV X1, X0
	0x03A915E4 MOV X0, X19
	0x03A915E8 BL 0x1C16DEC
	0x03A915EC BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x952000
	011 Move X24, 0x68C000
	012 Move W8, [X25+874]
	013 Move X24, [X24+2200]
	014 Move X19, X4
	015 Move W23, W3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x663000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move X0, 0x68C000
	027 Move X0, [X0+2200]
	028 Call 0x1C17CF4
	029 Move X0, 0x6C4000
	030 Move X0, [X0+16]
	031 Call 0x1C17CF4
	032 Move X0, 0x68C000
	033 Move X0, [X0+2216]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+874], W8
	037 Move X0, [X24]
	038 Move [X31+8], W31
	039 Move X25, 0x68C000
	040 Move W8, [X0+224]
	041 Move X25, [X25+2216]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X24]
	046 Move X8, [X0+184]
	047 Add X0, X31, 8
	048 Move X1, X31
	049 Move X3, X31
	050 Move X2, [X8+72]
	051 Call ProfilingScope..ctor, X0, X1, X2
	052 Move X0, [X25]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X31
	058 Call SystemInfo.get_graphicsDeviceType
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, 8
	061 Move W9, 4
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	064 Move [X19], W23
	065 Compare X20, 0
	066 JumpIfEqual {142}
	067 Move W8, [X20+136]
	068 Compare W8, 0
	069 JumpIfEqual {91}
	070 Move X8, 0x663000
	071 Move X8, [X8+1448]
	072 Move W25, W0
	073 Add W31, W23, 1
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Subtract W0, W21, W23
	081 Move W1, W25
	082 Move X2, X31
	083 Call Math.Min, X0, X1
	084 Move [X19+4], W0
	085 Move W0, [X20+140]
	086 Move W1, W24
	087 Move X2, X31
	088 Call Math.Min, X0, X1
	089 Move [X19+8], W0
	090 Move W8, [X20+136]
	091 Move [X19+4], W31
	092 Move [X19+8], W31
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSET not yet implemented."
	097 Move [X19+37], W9
	098 Move [X19+32], W8
	099 Move [X19+16], X22
	100 Move [X19+24], X21
	101 Move W8, [X20+234]
	102 Move [X19+33], W8
	103 Move W8, [X20+164]
	104 Move [X19+35], W8
	105 Move W8, [X20+165]
	106 Move [X19+34], W8
	107 Move X0, X31
	108 Call SystemInfo.get_graphicsDeviceType
	109 Move X8, 0x6C4000
	110 Move X8, [X8+16]
	111 Move W21, W0
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move W0, W21
	118 Move X1, X31
	119 Call RenderingUtils.SupportsLightLayers, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {127}
	124 Move W8, [X20+236]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSET not yet implemented."
	127 Move W8, W31
	128 Add X0, X31, 8
	129 Move X1, X31
	130 Move [X19+36], W8
	131 Call ProfilingScope.Dispose, X0
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X30, [X31+16]
	139 Move X25, [X31+24]
	140 Add X31, X31, 80
	141 Return 
	142 Call 0x1C17F20
	143 Move X19, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Add X0, X31, 8
	150 Move X1, X31
	151 Call ProfilingScope.Dispose, X0
	152 Compare X20, 0
	153 JumpIfEqual {132}
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Move X20, X31
	157 Move X19, X0
	158 Add X0, X31, 8
	159 Move X1, X31
	160 Call ProfilingScope.Dispose, X0
	161 Compare X20, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call 0x1D2D690
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Call 0x1991590

Method: System.Void ApplyTaaRenderingDebugOverrides(ref UnityEngine.Rendering.Universal.TemporalAA/Settings taaSettings)

Disassembly:
	0x03A90F70 LDR X20, [X20 + 0x898]
	0x03A90F74 MOV W19, W1
	0x03A90F78 MOV W21, W0
	0x03A90F7C TBNZ X8, 0x0, 0x3A90FA0
	0x03A90F80 ADRP X0, 0x68C000
	0x03A90F84 LDR X0, [X0 + 0x898]
	0x03A90F88 BL 0x1C16CF4
	0x03A90F8C ADRP X0, 0x6C4000
	0x03A90F90 LDR X0, [X0 + 0x10]
	0x03A90F94 BL 0x1C16CF4
	0x03A90F98 MOVZ W8, 0x1
	0x03A90F9C STRB W8, [X22 + 0x36C]
	0x03A90FA0 LDR X0, [X20]
	0x03A90FA4 STRB W31, [X31 + 0x8]
	0x03A90FA8 LDR W8, [X0 + 0xE0]
	0x03A90FAC CBNZ W8, 0x3A90FB8
	0x03A90FB0 BL 0x1C16DFC
	0x03A90FB4 LDR X0, [X20]
	0x03A90FB8 LDR X8, [X0 + 0xB8]
	0x03A90FBC ADD X0, X31, 0x8
	0x03A90FC0 MOV X1, X31
	0x03A90FC4 MOV X3, X31
	0x03A90FC8 LDR X2, [X8 + 0x50]
	0x03A90FCC BL 0x39B1DB0
	0x03A90FD0 ANDS W31, W19, 0x1
	0x03A90FD4 MOVZ W8, 0x51B
	0x03A90FD8 MOVZ W9, 0x509
	0x03A90FDC CSEL W20, W9, W8, NE
	0x03A90FE0 CMP W21, 0x1
	0x03A90FE4 B.LT 0x3A91018
	0x03A90FE8 TBNZ X19, 0x0, 0x3A91018
	0x03A90FEC ADRP X8, 0x6C4000
	0x03A90FF0 LDR X8, [X8 + 0x10]
	0x03A90FF4 LDR X0, [X8]
	0x03A90FF8 LDR W8, [X0 + 0xE0]
	0x03A90FFC CBNZ W8, 0x3A91004
	0x03A91000 BL 0x1C16DFC
	0x03A91004 MOV X0, X31
	0x03A91008 BL 0x3A70480
	0x03A9100C ORR W8, W20, 0x40
	0x03A91010 ANDS W31, W0, 0x1
	0x03A91014 CSEL W20, W20, W8, NE
	0x03A91018 ADD X0, X31, 0x8
	0x03A9101C MOV X1, X31
	0x03A91020 BL 0x39B1DB4
	0x03A91024 MOV W0, W20
	0x03A91028 LDP X20, X19, [X31 + 0x20]
	0x03A9102C LDP X22, X21, [X31 + 0x10]
	0x03A91030 LDR X30, [X31], #0x30
	0x03A91034 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x953000
	006 Move X20, 0x6C6000
	007 Move W8, [X21+875]
	008 Move X20, [X20+1200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6C6000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move X0, 0x6C6000
	018 Move X0, [X0+1200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+875], W8
	022 Move X0, [X20]
	023 Move X20, 0x6C6000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1192]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Call 0x29B00A8
	031 Compare X0, 0
	032 JumpIfEqual {59}
	033 Move X8, [X0+40]
	034 Compare X8, 0
	035 JumpIfEqual {59}
	036 Move W8, [X8+56]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X19+4], W31
	041 Move W8, 0x3F800000
	042 Move [X19+4], W8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Move W8, 0x3F800000
	049 Move [X19+4], W8
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move S0, W31
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call Settings.set_jitterScale, X0, V0
	058 Return 
	059 Call 0x1C17F20

Method: System.Void UpdateTemporalAAData(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.UniversalAdditionalCameraData additionalCameraData)

Disassembly:
	0x03A90ECC ADD X0, X31, 0x18
	0x03A90ED0 MOV X1, X31
	0x03A90ED4 BL 0x39B1DB4
	0x03A90ED8 CBZ X20, 0x3A90D4C
	0x03A90EDC MOV X0, X20
	0x03A90EE0 BL 0x1C16F18
	0x03A90EE4 MOV X20, X31
	0x03A90EE8 B 0x3A90EF0
	0x03A90EEC MOV X19, X0
	0x03A90EF0 ADD X0, X31, 0x18
	0x03A90EF4 MOV X1, X31
	0x03A90EF8 BL 0x39B1DB4
	0x03A90EFC CBNZ X20, 0x3A90F08
	0x03A90F00 MOV X0, X19
	0x03A90F04 BL 0x1D2C690
	0x03A90F08 MOV X0, X20
	0x03A90F0C BL 0x1C16F18
	0x03A90F10 BL 0x1990590
	0x03A90F14 STR X30, [X31 - 0x10]!
	0x03A90F18 CBZ X0, 0x3A90F54
	0x03A90F1C LDRB W8, [X0 + 0x55]
	0x03A90F20 CBZ W8, 0x3A90F28
	0x03A90F24 LDR W8, [X0 + 0xFC]
	0x03A90F28 ANDS W31, W1, 0x1
	0x03A90F2C CSINC W8, W8, W31, EQ
	0x03A90F30 STR W8, [X2]
	0x03A90F34 LDR W8, [X0 + 0x100]
	0x03A90F38 STR W8, [X2 + 0x4]
	0x03A90F3C LDRB W8, [X0 + 0x104]
	0x03A90F40 STRB W8, [X2 + 0x8]
	0x03A90F44 LDRB W8, [X0 + 0x105]
	0x03A90F48 STRB W8, [X2 + 0x9]
	0x03A90F4C LDR X30, [X31], #0x10
	0x03A90F50 RET
	0x03A90F54 BL 0x1C16F20
	0x03A90F58 STR X30, [X31 - 0x30]!
	0x03A90F5C STP X22, X21, [X31 + 0x10]
	0x03A90F60 STP X20, X19, [X31 + 0x20]
	0x03A90F64 ADRP X22, 0x952000
	0x03A90F68 ADRP X20, 0x68C000
	0x03A90F6C LDRB W8, [X22 + 0x36C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {52}
	010 Move X21, [X1+152]
	011 Move W22, [X0+216]
	012 Move W23, [X0+220]
	013 Move W24, [X0+228]
	014 Move X20, X1
	015 Move X19, X0
	016 Add X0, X0, 216
	017 Move X1, X31
	018 Move [X19+480], X21
	019 Call RenderTextureDescriptor.get_graphicsFormat, X0
	020 Compare X21, 0
	021 JumpIfEqual {52}
	022 Move W6, [X19+248]
	023 Move W5, [X19+256]
	024 Move W4, W0
	025 Move X0, X21
	026 Move W1, W22
	027 Move W2, W23
	028 Move W3, W24
	029 Move X7, X31
	030 Call TaaPersistentData.Init, X0, X1, X2, X3, X4, X5, X6
	031 Move X0, X20
	032 Move X1, X31
	033 Call UniversalAdditionalCameraData.get_taaSettings, X0
	034 Move V0, [X0]
	035 Move V1, [X0+16]
	036 Add X8, X19, 488
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move [X8], V0
	042 Move [X8+8], V1
	043 Move W8, [X0+24]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Subtract W8, W8, W9
	049 Move [X0+24], W8
	050 Move X30, [X31+64]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void UpdateTemporalAATargets(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A8F374 CBZ W8, 0x3A8F3BC
	0x03A8F378 LDR W8, [X19 + 0x1AC]
	0x03A8F37C CMP W8, 0x2
	0x03A8F380 B.EQ 0x3A8F390
	0x03A8F384 MOV X0, X19
	0x03A8F388 BL 0x3A8F3D4
	0x03A8F38C TBZ X0, 0x0, 0x3A8F398
	0x03A8F390 LDR W8, [X19 + 0xC8]
	0x03A8F394 CBZ W8, 0x3A8F3C4
	0x03A8F398 ADRP X8, 0x68D000
	0x03A8F39C LDR X8, [X8 + 0x8A8]
	0x03A8F3A0 LDR X0, [X8]
	0x03A8F3A4 LDR W8, [X0 + 0xE0]
	0x03A8F3A8 CBNZ W8, 0x3A8F3B0
	0x03A8F3AC BL 0x1C16DFC
	0x03A8F3B0 LDP X20, X19, [X31 + 0x10]
	0x03A8F3B4 LDR X30, [X31], #0x20
	0x03A8F3B8 B 0x3A8EB30
	0x03A8F3BC MOV W0, W31
	0x03A8F3C0 B 0x3A8F3C8
	0x03A8F3C4 MOVZ W0, 0x1
	0x03A8F3C8 LDP X20, X19, [X31 + 0x10]
	0x03A8F3CC LDR X30, [X31], #0x20
	0x03A8F3D0 RET
	0x03A8F3D4 STR X30, [X31 - 0x20]!
	0x03A8F3D8 STP X20, X19, [X31 + 0x10]
	0x03A8F3DC ADRP X20, 0x953000
	0x03A8F3E0 LDRB W8, [X20 + 0x390]
	0x03A8F3E4 MOV X19, X0
	0x03A8F3E8 TBNZ X8, 0x0, 0x3A8F40C
	0x03A8F3EC ADRP X0, 0x6C5000
	0x03A8F3F0 LDR X0, [X0 + 0x918]
	0x03A8F3F4 BL 0x1C16CF4
	0x03A8F3F8 ADRP X0, 0x6C7000
	0x03A8F3FC LDR X0, [X0 + 0xF28]
	0x03A8F400 BL 0x1C16CF4
	0x03A8F404 MOVZ W8, 0x1
	0x03A8F408 STRB W8, [X20 + 0x390]
	0x03A8F40C STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Call CameraData.IsTemporalAAEnabled, X0
	006 Move TEMP, X0
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {25}
	010 Move X0, [X19+376]
	011 Compare X0, 0
	012 JumpIfEqual {55}
	013 Move X1, X31
	014 Call XRPass.get_enabled, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {34}
	019 Move X0, [X19+376]
	020 Compare X0, 0
	021 JumpIfEqual {55}
	022 Move X1, X31
	023 Call XRPass.get_singlePassEnabled, X0
	024 Xor W20, W0, 1
	025 Move X0, [X19+480]
	026 Compare X0, 0
	027 JumpIfEqual {55}
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call TaaPersistentData.DeallocateTargets, X0
	033 Return 
	034 Move W20, W31
	035 Move X0, [X19+480]
	036 Compare X0, 0
	037 JumpIfEqual {55}
	038 And W1, W20, 1
	039 Move X2, X31
	040 Call TaaPersistentData.AllocateTargets, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {51}
	045 Move W8, [X19+512]
	046 And W31, W20, 1
	047 Move W9, 1
	048 NotImplemented "Instruction CINC not yet implemented."
	049 Add W8, W8, W9
	050 Move [X19+512], W8
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 
	055 Call 0x1C17F20

Method: System.Void UpdateCameraStereoMatrices(UnityEngine.Camera camera, UnityEngine.Experimental.Rendering.XRPass xr)

Disassembly:
	0x03A8FBFC LDR X8, [X8 + 0x8A8]
	0x03A8FC00 LDR X0, [X8]
	0x03A8FC04 LDR W8, [X0 + 0xE0]
	0x03A8FC08 CBNZ W8, 0x3A8FC10
	0x03A8FC0C BL 0x1C16DFC
	0x03A8FC10 AND W0, W22, 0x1
	0x03A8FC14 AND W2, W25, 0x1
	0x03A8FC18 MOV W1, W24
	0x03A8FC1C BL 0x3A9125C
	0x03A8FC20 MOV W1, W0
	0x03A8FC24 ADD X0, X31, 0x70
	0x03A8FC28 MOV X2, X31
	0x03A8FC2C BL 0x3C2240C
	0x03A8FC30 ADD X0, X31, 0x70
	0x03A8FC34 MOVZ W1, 0x20
	0x03A8FC38 MOV X2, X31
	0x03A8FC3C BL 0x3C22520
	0x03A8FC40 MOV X0, X31
	0x03A8FC44 STR W21, [X31 + 0x78]
	0x03A8FC48 BL 0x3C113A8
	0x03A8FC4C CMP W0, 0x1
	0x03A8FC50 CSET W1, EQ
	0x03A8FC54 ADD X0, X31, 0x70
	0x03A8FC58 MOV X2, X31
	0x03A8FC5C BL 0x3C226C4
	0x03A8FC60 B 0x3A8FCEC
	0x03A8FC64 MOV X0, X20
	0x03A8FC68 MOV X1, X31
	0x03A8FC6C BL 0x3C040B4
	0x03A8FC70 CBZ X0, 0x3A8FD98
	0x03A8FC74 ADD X8, X31, 0x38
	0x03A8FC78 MOV X1, X31
	0x03A8FC7C BL 0x3C21334
	0x03A8FC80 LDUR V0, [X31 + 0x38]
	0x03A8FC84 LDUR V1, [X31 + 0x48]
	0x03A8FC88 LDUR V2, [X31 + 0x58]
	0x03A8FC8C LDR W8, [X31 + 0x68]
	0x03A8FC90 MOV X0, X23
	0x03A8FC94 STP V0, V1, [X31 + 0x70]
	0x03A8FC98 STR V2, [X31 + 0x9]
	0x03A8FC9C STR W8, [X31 + 0xA0]
	0x03A8FCA0 STR W21, [X31 + 0x78]
	0x03A8FCA4 BL 0x3A9165C
	0x03A8FCA8 STR W0, [X31 + 0x70]
	0x03A8FCAC MOV X0, X23
	0x03A8FCB0 BL 0x3A916AC
	0x03A8FCB4 STR W0, [X31 + 0x74]
	0x03A8FCB8 MOV X0, X20
	0x03A8FCBC MOV X1, X31
	0x03A8FCC0 BL 0x3C03AD4
	0x03A8FCC4 CMP W0, 0x2
	0x03A8FCC8 B.NE 0x3A8FCEC
	0x03A8FCCC TBNZ X22, 0x0, 0x3A8FCEC
	0x03A8FCD0 MOV W0, W31
	0x03A8FCD4 MOV X1, X31
	0x03A8FCD8 BL 0x3C3C544
	0x03A8FCDC MOV W1, W0
	0x03A8FCE0 ADD X0, X31, 0x70
	0x03A8FCE4 MOV X2, X31
	0x03A8FCE8 BL 0x3C2240C
	0x03A8FCEC ADD X0, X31, 0x70
	0x03A8FCF0 MOV W1, W31
	0x03A8FCF4 MOV X2, X31
	0x03A8FCF8 BL 0x3C22B70
	0x03A8FCFC ADD X0, X31, 0x70
	0x03A8FD00 MOV W1, W31
	0x03A8FD04 MOV X2, X31
	0x03A8FD08 BL 0x3C22B9C
	0x03A8FD0C MOV X0, X20
	0x03A8FD10 MOV X1, X31
	0x03A8FD14 BL 0x3C03820
	0x03A8FD18 AND W1, W0, 0x1
	0x03A8FD1C ADD X0, X31, 0x70
	0x03A8FD20 MOV X2, X31
	0x03A8FD24 BL 0x3C2225C
	0x03A8FD28 LDP V0, V1, [X31 + 0x70]
	0x03A8FD2C LDR V2, [X31 + 0x9]
	0x03A8FD30 LDR W8, [X31 + 0xA0]
	0x03A8FD34 ADD X0, X31, 0x0
	0x03A8FD38 MOV X1, X31
	0x03A8FD3C STP V0, V1, [X31]
	0x03A8FD40 STR V2, [X31 + 0x2]
	0x03A8FD44 STR W8, [X31 + 0x30]
	0x03A8FD48 BL 0x3C3C580
	0x03A8FD4C STR W0, [X31 + 0x78]
	0x03A8FD50 MOV X0, X31
	0x03A8FD54 BL 0x3C3C3CC
	0x03A8FD58 TBNZ X0, 0x0, 0x3A8FD64
	0x03A8FD5C MOVZ W8, 0x1
	0x03A8FD60 STR W8, [X31 + 0x78]
	0x03A8FD64 LDR W8, [X31 + 0xA0]
	0x03A8FD68 LDP V1, V0, [X31 + 0x80]
	0x03A8FD6C LDR V2, [X31 + 0x7]
	0x03A8FD70 LDP X22, X21, [X31 + 0xE0]
	0x03A8FD74 STR W8, [X19 + 0x30]
	0x03A8FD78 STP V1, V0, [X19 + 0x10]
	0x03A8FD7C STR V2, [X19]
	0x03A8FD80 LDP X20, X19, [X31 + 0xF0]
	0x03A8FD84 LDP X24, X23, [X31 + 0xD0]
	0x03A8FD88 LDP X26, X25, [X31 + 0xC0]
	0x03A8FD8C LDR X30, [X31 + 0xB0]
	0x03A8FD90 ADD X31, X31, 0x100
	0x03A8FD94 RET
	0x03A8FD98 BL 0x1C16F20
	0x03A8FD9C STP D11, D10, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X22
	005 Move [X31+408], X21
	006 Move [X31+416], X20
	007 Move [X31+424], X19
	008 Compare X1, 0
	009 JumpIfEqual {141}
	010 Move X20, X1
	011 Move X19, X0
	012 Move X0, X1
	013 Move X1, X31
	014 Call XRPass.get_enabled, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {133}
	019 Move X0, X20
	020 Move X1, X31
	021 Call XRPass.get_singlePassEnabled, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {85}
	026 Move X0, X20
	027 Move X1, X31
	028 Call XRPass.get_viewCount, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W21, W31
	031 Move W22, 2
	032 Add X8, X31, 256
	033 Move X0, X20
	034 Move W1, W21
	035 Move X2, X31
	036 Call XRPass.GetProjMatrix, X0, X1
	037 Move V0, [X31+256]
	038 Move V1, [X31+272]
	039 Move V2, [X31+288]
	040 Move V3, [X31+304]
	041 Move [X31+320], V0
	042 Move [X31+328], V1
	043 Move [X31+352], V2
	044 Move [X31+360], V3
	045 Compare X19, 0
	046 JumpIfEqual {141}
	047 Move V0, [X31+320]
	048 Move V1, [X31+336]
	049 Move V2, [X31+352]
	050 Move V3, [X31+368]
	051 Add X2, X31, 192
	052 Move X0, X19
	053 Move W1, W21
	054 Move X3, X31
	055 Move [X31+192], V0
	056 Move [X31+200], V1
	057 Move [X31+224], V2
	058 Move [X31+232], V3
	059 Call Camera.SetStereoProjectionMatrix, X0, X1, X2
	060 Add X8, X31, 256
	061 Move X0, X20
	062 Move W1, W21
	063 Move X2, X31
	064 Call XRPass.GetViewMatrix, X0, X1
	065 Move V0, [X31+256]
	066 Move V1, [X31+272]
	067 Move V2, [X31+288]
	068 Move V3, [X31+304]
	069 Add X2, X31, 128
	070 Move X0, X19
	071 Move W1, W21
	072 Move X3, X31
	073 Move [X31+128], V0
	074 Move [X31+136], V1
	075 Move [X31+160], V2
	076 Move [X31+168], V3
	077 Call Camera.SetStereoViewMatrix, X0, X1, X2
	078 Move X0, X20
	079 Move X1, X31
	080 Add W21, W21, 1
	081 Call XRPass.get_viewCount, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W21, [X20+36]
	086 Add X8, X31, 256
	087 Move X0, X20
	088 Move W1, W31
	089 Move X2, X31
	090 Call XRPass.GetProjMatrix, X0, X1
	091 Move V0, [X31+256]
	092 Move V1, [X31+272]
	093 Move V2, [X31+288]
	094 Move V3, [X31+304]
	095 Move [X31+320], V0
	096 Move [X31+328], V1
	097 Move [X31+352], V2
	098 Move [X31+360], V3
	099 Compare X19, 0
	100 JumpIfEqual {141}
	101 Move V0, [X31+320]
	102 Move V1, [X31+336]
	103 Move V2, [X31+352]
	104 Move V3, [X31+368]
	105 Add X2, X31, 64
	106 Move X0, X19
	107 Move W1, W21
	108 Move X3, X31
	109 Move [X31+64], V0
	110 Move [X31+72], V1
	111 Move [X31+96], V2
	112 Move [X31+104], V3
	113 Call Camera.SetStereoProjectionMatrix, X0, X1, X2
	114 Move W21, [X20+36]
	115 Add X8, X31, 256
	116 Move X0, X20
	117 Move W1, W31
	118 Move X2, X31
	119 Call XRPass.GetViewMatrix, X0, X1
	120 Move V0, [X31+256]
	121 Move V1, [X31+272]
	122 Move V2, [X31+288]
	123 Move V3, [X31+304]
	124 Add X2, X31, 0
	125 Move X0, X19
	126 Move W1, W21
	127 Move X3, X31
	128 Move [X31], V0
	129 Move [X31+8], V1
	130 Move [X31+32], V2
	131 Move [X31+40], V3
	132 Call Camera.SetStereoViewMatrix, X0, X1, X2
	133 Move X20, [X31+416]
	134 Move X19, [X31+424]
	135 Move X22, [X31+400]
	136 Move X21, [X31+408]
	137 Move X29, [X31+384]
	138 Move X30, [X31+392]
	139 Add X31, X31, 432
	140 Return 
	141 Call 0x1C17F20

Method: UnityEngine.Rendering.PerObjectData GetPerObjectLightFlags(System.Int32 additionalLightsCount, System.Boolean isForwardPlus)

Disassembly:
	0x03A91F58 STR X30, [X31 - 0x40]!
	0x03A91F5C STP X24, X23, [X31 + 0x10]
	0x03A91F60 STP X22, X21, [X31 + 0x20]
	0x03A91F64 STP X20, X19, [X31 + 0x30]
	0x03A91F68 ADRP X23, 0x951000
	0x03A91F6C ADRP X24, 0x6BF000
	0x03A91F70 ADRP X19, 0x6BF000
	0x03A91F74 ADRP X20, 0x6C6000
	0x03A91F78 ADRP X22, 0x6BF000
	0x03A91F7C ADRP X21, 0x663000
	0x03A91F80 LDRB W8, [X23 + 0x381]
	0x03A91F84 LDR X24, [X24 + 0x908]
	0x03A91F88 LDR X19, [X19 + 0x8F8]
	0x03A91F8C LDR X20, [X20 + 0x360]
	0x03A91F90 LDR X22, [X22 + 0x598]
	0x03A91F94 LDR X21, [X21 + 0xF60]
	0x03A91F98 TBNZ X8, 0x0, 0x3A91FE0
	0x03A91F9C ADRP X0, 0x6BF000
	0x03A91FA0 LDR X0, [X0 + 0x8F8]
	0x03A91FA4 BL 0x1C16CF4
	0x03A91FA8 ADRP X0, 0x6BF000
	0x03A91FAC LDR X0, [X0 + 0x908]
	0x03A91FB0 BL 0x1C16CF4
	0x03A91FB4 ADRP X0, 0x6BF000
	0x03A91FB8 LDR X0, [X0 + 0x598]
	0x03A91FBC BL 0x1C16CF4
	0x03A91FC0 ADRP X0, 0x6C6000
	0x03A91FC4 LDR X0, [X0 + 0x360]
	0x03A91FC8 BL 0x1C16CF4
	0x03A91FCC ADRP X0, 0x663000
	0x03A91FD0 LDR X0, [X0 + 0xF60]
	0x03A91FD4 BL 0x1C16CF4
	0x03A91FD8 MOVZ W8, 0x1
	0x03A91FDC STRB W8, [X23 + 0x381]
	0x03A91FE0 LDR X0, [X24]
	0x03A91FE4 BL 0x1C16F10
	0x03A91FE8 LDR X1, [X19]
	0x03A91FEC MOV X19, X0
	0x03A91FF0 BL 0x2A12DD4
	0x03A91FF4 LDR X8, [X20]
	0x03A91FF8 LDR X8, [X8 + 0xB8]
	0x03A91FFC STR X19, [X8]
	0x03A92000 LDR X0, [X22]
	0x03A92004 BL 0x1C16F10
	0x03A92008 LDR X1, [X21]
	0x03A9200C MOV X2, X31
	0x03A92010 MOV X19, X0
	0x03A92014 BL 0x39B19AC
	0x03A92018 LDR X8, [X20]
	0x03A9201C LDP X22, X21, [X31 + 0x20]
	0x03A92020 LDP X24, X23, [X31 + 0x10]
	0x03A92024 LDR X8, [X8 + 0xB8]
	0x03A92028 STR X19, [X8 + 0x8]
	0x03A9202C LDP X20, X19, [X31 + 0x30]
	0x03A92030 LDR X30, [X31], #0x40
	0x03A92034 RET
	0x03A92038 STP X29, X30, [X31 - 0x60]!
	0x03A9203C STP X28, X27, [X31 + 0x10]
	0x03A92040 STP X26, X25, [X31 + 0x20]
	0x03A92044 STP X24, X23, [X31 + 0x30]
	0x03A92048 STP X22, X21, [X31 + 0x40]
	0x03A9204C STP X20, X19, [X31 + 0x50]
	0x03A92050 ADRP X27, 0x950000
	0x03A92054 ADRP X21, 0x6BE000
	0x03A92058 ADRP X19, 0x6C5000
	0x03A9205C ADRP X20, 0x68A000
	0x03A92060 ADRP X26, 0x6C5000
	0x03A92064 ADRP X25, 0x6C5000
	0x03A92068 ADRP X24, 0x6C5000
	0x03A9206C ADRP X23, 0x6C5000
	0x03A92070 ADRP X22, 0x6C5000
	0x03A92074 ADRP X29, 0x6C5000
	0x03A92078 ADRP X28, 0x6C5000
	0x03A9207C LDR X21, [X21 + 0x598]
	0x03A92080 LDR X19, [X19 + 0x3C0]
	0x03A92084 LDR X20, [X20 + 0x898]
	0x03A92088 LDR X26, [X26 + 0x3C8]
	0x03A9208C LDR X25, [X25 + 0x3D0]
	0x03A92090 LDR X24, [X24 + 0x3D8]
	0x03A92094 LDR X23, [X23 + 0x3E0]
	0x03A92098 LDR X22, [X22 + 0x3E8]
	0x03A9209C LDR X29, [X29 + 0x3F0]
	0x03A920A0 LDR X28, [X28 + 0x3F8]
	0x03A920A4 LDRB W8, [X27 + 0x382]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x952000
	007 Move X20, 0x68C000
	008 Move W8, [X22+876]
	009 Move X20, [X20+2200]
	010 Move W19, W1
	011 Move W21, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x68C000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move X0, 0x6C4000
	020 Move X0, [X0+16]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+876], W8
	024 Move X0, [X20]
	025 Move [X31+8], W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Move X3, X31
	035 Move X2, [X8+80]
	036 Call ProfilingScope..ctor, X0, X1, X2
	037 And W31, W19, 1
	038 Move W8, 1307
	039 Move W9, 1289
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move TEMP, X19
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {58}
	046 Move X8, 0x6C4000
	047 Move X8, [X8+16]
	048 Move X0, [X8]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X31
	054 Call RenderingUtils.get_useStructuredBuffer
	055 Or W8, W20, 64
	056 And W31, W0, 1
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Add X0, X31, 8
	059 Move X1, X31
	060 Call ProfilingScope.Dispose, X0
	061 Move W0, W20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Move X20, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X20
	071 Call 0x3EB2AD0
	072 Move X19, [X0]
	073 Call 0x3EB2AE0
	074 Add X0, X31, 8
	075 Move X1, X31
	076 Call ProfilingScope.Dispose, X0
	077 Compare X19, 0
	078 JumpIfNotEqual {81}
	079 Move W20, W31
	080 Move X19, X31
	081 Move X0, X19
	082 Call 0x1C17F18
	083 Move X20, X0
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call ProfilingScope.Dispose, X0
	087 Compare X19, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X20
	090 Call 0x1D2D690
	091 Move X0, X19
	092 Call 0x1C17F18
	093 Call 0x1991590

Method: System.Int32 GetMainLightIndex(UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset settings, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights)

Disassembly:
	0x03A91118 BL 0x1C16DFC
	0x03A9111C LDR X0, [X20]
	0x03A91120 BL 0x29AF0A8
	0x03A91124 CBZ X0, 0x3A91248
	0x03A91128 LDR X8, [X0]
	0x03A9112C MOV X20, X0
	0x03A91130 LDP X9, X1, [X8 + 0x1D8]
	0x03A91134 BLR X9
	0x03A91138 TBZ X0, 0x0, 0x3A91238
	0x03A9113C LDR W8, [X19 + 0x180]
	0x03A91140 CMP W8, 0x4
	0x03A91144 B.EQ 0x3A91238
	0x03A91148 LDR X8, [X20 + 0x28]
	0x03A9114C CBZ X8, 0x3A91248
	0x03A91150 LDRB W10, [X8 + 0x34]
	0x03A91154 LDR W9, [X19 + 0xF8]
	0x03A91158 LDRB W8, [X8 + 0x35]
	0x03A9115C CMP W10, 0x0
	0x03A91160 CSINC W22, W9, W31, NE
	0x03A91164 CBNZ W8, 0x3A9116C
	0x03A91168 STRB W31, [X19 + 0x185]
	0x03A9116C LDR X8, [X20]
	0x03A91170 MOV X0, X20
	0x03A91174 LDP X9, X1, [X8 + 0x1E8]
	0x03A91178 BLR X9
	0x03A9117C TBNZ X0, 0x0, 0x3A91184
	0x03A91180 STRB W31, [X19 + 0x1A0]
	0x03A91184 ADRP X21, 0x68B000
	0x03A91188 LDR X21, [X21 + 0x8A8]
	0x03A9118C LDR X0, [X21]
	0x03A91190 LDR W8, [X0 + 0xE0]
	0x03A91194 CBNZ W8, 0x3A9119C
	0x03A91198 BL 0x1C16DFC
	0x03A9119C BL 0x3A8AB60
	0x03A911A0 ADRP X8, 0x662000
	0x03A911A4 LDR X8, [X8 + 0x598]
	0x03A911A8 MOV X20, X0
	0x03A911AC LDR X8, [X8]
	0x03A911B0 LDR W9, [X8 + 0xE0]
	0x03A911B4 CBNZ W9, 0x3A911C0
	0x03A911B8 MOV X0, X8
	0x03A911BC BL 0x1C16DFC
	0x03A911C0 MOV X0, X20
	0x03A911C4 MOV X1, X31
	0x03A911C8 BL 0x3C38948
	0x03A911CC TBZ X0, 0x0, 0x3A911F0
	0x03A911D0 LDR X0, [X21]
	0x03A911D4 LDR W8, [X0 + 0xE0]
	0x03A911D8 CBNZ W8, 0x3A911E0
	0x03A911DC BL 0x1C16DFC
	0x03A911E0 BL 0x3A8AB60
	0x03A911E4 CBZ X0, 0x3A91248
	0x03A911E8 LDR W20, [X0 + 0x58]
	0x03A911EC B 0x3A911F4
	0x03A911F0 MOV W20, W31
	0x03A911F4 STR W20, [X19 + 0x178]
	0x03A911F8 LDR X0, [X21]
	0x03A911FC LDRB W23, [X19 + 0x185]
	0x03A91200 ADD X21, X19, 0xF0
	0x03A91204 LDR W8, [X0 + 0xE0]
	0x03A91208 CBNZ W8, 0x3A91210
	0x03A9120C BL 0x1C16DFC
	0x03A91210 CMP W23, 0x0
	0x03A91214 CSET W0, NE
	0x03A91218 MOVZ W2, 0x1
	0x03A9121C MOV W1, W20
	0x03A91220 BL 0x3A9125C
	0x03A91224 MOV W1, W0
	0x03A91228 MOV X0, X21
	0x03A9122C MOV X2, X31
	0x03A91230 BL 0x3C2240C
	0x03A91234 STR W22, [X19 + 0xF8]
	0x03A91238 LDP X20, X19, [X31 + 0x20]
	0x03A9123C LDP X22, X21, [X31 + 0x10]
	0x03A91240 LDP X30, X23, [X31], #0x30
	0x03A91244 RET
	0x03A91248 BL 0x1C16F20
	0x03A9124C LDR W8, [X0 + 0x168]
	0x03A91250 CMP W8, 0x4
	0x03A91254 CSET W0, EQ
	0x03A91258 RET
	0x03A9125C STR X30, [X31 - 0x30]!
	0x03A91260 STP X22, X21, [X31 + 0x10]
	0x03A91264 STP X20, X19, [X31 + 0x20]
	0x03A91268 ADRP X22, 0x951000
	0x03A9126C LDRB W8, [X22 + 0x378]
	0x03A91270 MOV W19, W2
	0x03A91274 MOV W20, W1
	0x03A91278 MOV W21, W0
	0x03A9127C TBNZ X8, 0x0, 0x3A91294
	0x03A91280 ADRP X0, 0x6C3000
	0x03A91284 LDR X0, [X0 + 0x10]
	0x03A91288 BL 0x1C16CF4
	0x03A9128C MOVZ W8, 0x1
	0x03A91290 STRB W8, [X22 + 0x378]
	0x03A91294 TBZ X21, 0x0, 0x3A91318
	0x03A91298 CMP W20, 0x1
	0x03A9129C B.EQ 0x3A912D4
	0x03A912A0 TBNZ X19, 0x0, 0x3A912D4
	0x03A912A4 ADRP X8, 0x6C3000
	0x03A912A8 LDR X8, [X8 + 0x10]
	0x03A912AC LDR X0, [X8]
	0x03A912B0 LDR W8, [X0 + 0xE0]
	0x03A912B4 CBNZ W8, 0x3A912BC
	0x03A912B8 BL 0x1C16DFC
	0x03A912BC MOVZ W0, 0x4A
	0x03A912C0 MOVZ W1, 0x5
	0x03A912C4 MOV X2, X31
	0x03A912C8 MOVZ W19, 0x4A
	0x03A912CC BL 0x3A6ED54
	0x03A912D0 TBNZ X0, 0x0, 0x3A91304
	0x03A912D4 ADRP X8, 0x6C3000
	0x03A912D8 LDR X8, [X8 + 0x10]
	0x03A912DC LDR X0, [X8]
	0x03A912E0 LDR W8, [X0 + 0xE0]
	0x03A912E4 CBNZ W8, 0x3A912EC
	0x03A912E8 BL 0x1C16DFC
	0x03A912EC MOVZ W0, 0x30
	0x03A912F0 MOVZ W1, 0x5
	0x03A912F4 MOV X2, X31
	0x03A912F8 MOVZ W19, 0x30
	0x03A912FC BL 0x3A6ED54
	0x03A91300 TBZ X0, 0x0, 0x3A91320
	0x03A91304 MOV W0, W19
	0x03A91308 LDP X20, X19, [X31 + 0x20]
	0x03A9130C LDP X22, X21, [X31 + 0x10]
	0x03A91310 LDR X30, [X31], #0x30
	0x03A91314 RET
	0x03A91318 MOV W0, W31
	0x03A9131C B 0x3A91324
	0x03A91320 MOVZ W0, 0x1
	0x03A91324 LDP X20, X19, [X31 + 0x20]
	0x03A91328 LDP X22, X21, [X31 + 0x10]
	0x03A9132C MOV X1, X31
	0x03A91330 LDR X30, [X31], #0x30
	0x03A91334 B 0x3C3C544
	0x03A91338 STP D9, D8, [X31 - 0x40]!
	0x03A9133C STR X30, [X31 + 0x10]
	0x03A91340 STP X22, X21, [X31 + 0x20]
	0x03A91344 STP X20, X19, [X31 + 0x30]
	0x03A91348 CBZ X3, 0x3A91424
	0x03A9134C MOV X22, X0
	0x03A91350 LDR X0, [X3 + 0x58]
	0x03A91354 MOV X20, X3
	0x03A91358 CBZ X0, 0x3A91424
	0x03A9135C LDR X8, [X0]
	0x03A91360 MOV X21, X1
	0x03A91364 MOV X19, X4
	0x03A91368 LDR X9, [X8 + 0x218]
	0x03A9136C LDR X1, [X8 + 0x220]
	0x03A91370 BLR X9
	0x03A91374 TBZ X0, 0x0, 0x3A91384
	0x03A91378 UBFM X8, X21, 0x20, 0x3F
	0x03A9137C FMOV S8, W8
	0x03A91380 B 0x3A913A0

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x952000
	013 Move X22, 0x68C000
	014 Move W8, [X23+877]
	015 Move X22, [X22+2200]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x6C6000
	024 Move X0, [X0+440]
	025 Call 0x1C17CF4
	026 Move X0, 0x663000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x68C000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+877], W8
	034 Move X0, [X22]
	035 Move [X31+8], W31
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X22]
	041 Move X8, [X0+184]
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move X3, X31
	045 Move X2, [X8+88]
	046 Call ProfilingScope..ctor, X0, X1, X2
	047 Compare W19, 0
	048 JumpIfEqual {118}
	049 Compare X21, 0
	050 JumpIfEqual {139}
	051 Move W8, [X21+124]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X31
	054 Call RenderSettings.get_sun
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X26, 0x6C6000
	057 Move X27, 0x663000
	058 Move X26, [X26+440]
	059 Move X27, [X27+1432]
	060 Move X22, X0
	061 Move W23, W31
	062 Move S8, W31
	063 Move TEMP, 0
	064 Not TEMP
	065 Move W21, TEMP
	066 Move X3, [X26]
	067 Move X0, X20
	068 Move X1, X19
	069 Move W2, W23
	070 Call 0x22232C0, X0, X1
	071 Move X25, X0
	072 Move X1, X31
	073 Call VisibleLight.get_light, X0
	074 Move X24, X0
	075 Move X0, [X27]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X24
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {121}
	088 Move X0, X25
	089 Move X1, X31
	090 Call VisibleLight.get_lightType, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X27]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X24
	098 Move X1, X22
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {137}
	105 Compare X24, 0
	106 JumpIfEqual {138}
	107 Move X0, X24
	108 Move X1, X31
	109 Call Light.get_intensity, X0
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move X0, X24
	112 Move X1, X31
	113 Call Light.get_intensity, X0
	114 Move V8, V0
	115 Move W21, W23
	116 Add W23, W23, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W21, TEMP
	121 Add X0, X31, 8
	122 Move X1, X31
	123 Call ProfilingScope.Dispose, X0
	124 Move W0, W21
	125 Move X20, [X31+80]
	126 Move X19, [X31+88]
	127 Move X22, [X31+64]
	128 Move X21, [X31+72]
	129 Move X24, [X31+48]
	130 Move X23, [X31+56]
	131 Move X26, [X31+32]
	132 Move X25, [X31+40]
	133 Move X30, [X31+16]
	134 Move X27, [X31+24]
	135 Move V8, [X31+96]
	136 Return X0
	137 Move W21, W23
	138 Call 0x1C17F20
	139 Call 0x1C17F20
	140 Move X19, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X19
	143 Call 0x3EB2AD0
	144 Move X20, [X0]
	145 Call 0x3EB2AE0
	146 Add X0, X31, 8
	147 Move X1, X31
	148 Call ProfilingScope.Dispose, X0
	149 Compare X20, 0
	150 JumpIfNotEqual {153}
	151 Move W21, W31
	152 Move X20, X31
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Move X19, X0
	156 Add X0, X31, 8
	157 Move X1, X31
	158 Call ProfilingScope.Dispose, X0
	159 Compare X20, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X19
	162 Call 0x1D2D690
	163 Move X0, X20
	164 Call 0x1C17F18
	165 Call 0x1991590

Method: System.Void SetupPerFrameShaderConstants()

Disassembly:
	0x03A8B824 MOV X0, X19
	0x03A8B828 MOV X1, X24
	0x03A8B82C BL 0x3A8CC64
	0x03A8B830 ADRP X8, 0x691000
	0x03A8B834 LDR X8, [X8 + 0x8A8]
	0x03A8B838 LDRB W9, [X31 + 0x621]
	0x03A8B83C LDR X8, [X8]
	0x03A8B840 LDR X8, [X8 + 0xB8]
	0x03A8B844 LDRB W8, [X8]
	0x03A8B848 ORR W8, W8, W9, 0x0
	0x03A8B84C STRB W8, [X31 + 0x621]
	0x03A8B850 MOV X0, X23
	0x03A8B854 MOV X1, X31
	0x03A8B858 BL 0x3984C98
	0x03A8B85C LDR W24, [X31 + 0x24]
	0x03A8B860 TBZ X0, 0x0, 0x3A8B874
	0x03A8B864 MOV X0, X23
	0x03A8B868 MOV X1, X31
	0x03A8B86C BL 0x39885B0
	0x03A8B870 MOV W24, W0
	0x03A8B874 ADRP X8, 0x691000
	0x03A8B878 LDR X8, [X8 + 0x8A8]
	0x03A8B87C LDR X0, [X8]
	0x03A8B880 LDR W8, [X0 + 0xE0]
	0x03A8B884 CBNZ W8, 0x3A8B88C
	0x03A8B888 BL 0x1C16DFC
	0x03A8B88C BL 0x3A8AB60
	0x03A8B890 CBZ X0, 0x3A8BE4C
	0x03A8B894 LDRB W8, [X0 + 0x55]
	0x03A8B898 CMP W8, 0x0
	0x03A8B89C CSET W8, NE
	0x03A8B8A0 AND W8, W24, W8, 0x0
	0x03A8B8A4 TBZ X8, 0x0, 0x3A8B918
	0x03A8B8A8 MOV X0, X19
	0x03A8B8AC MOV X1, X31
	0x03A8B8B0 BL 0x3C040B4
	0x03A8B8B4 ADRP X8, 0x668000
	0x03A8B8B8 LDR X8, [X8 + 0x598]
	0x03A8B8BC MOV X24, X0
	0x03A8B8C0 LDR X0, [X8]
	0x03A8B8C4 LDR W8, [X0 + 0xE0]
	0x03A8B8C8 CBNZ W8, 0x3A8B8D0
	0x03A8B8CC BL 0x1C16DFC
	0x03A8B8D0 MOV X0, X24
	0x03A8B8D4 MOV X1, X31
	0x03A8B8D8 MOV X2, X31
	0x03A8B8DC BL 0x3C3883C
	0x03A8B8E0 TBZ X0, 0x0, 0x3A8B918
	0x03A8B8E4 MOV X0, X19
	0x03A8B8E8 MOV X1, X31
	0x03A8B8EC BL 0x3C03AD4
	0x03A8B8F0 CMP W0, 0x1
	0x03A8B8F4 B.EQ 0x3A8B90C
	0x03A8B8F8 MOV X0, X19
	0x03A8B8FC MOV X1, X31
	0x03A8B900 BL 0x3C03AD4
	0x03A8B904 CMP W0, 0x8
	0x03A8B908 B.NE 0x3A8B918
	0x03A8B90C LDRB W8, [X31 + 0x61E]
	0x03A8B910 AND W29, W8, 0x1
	0x03A8B914 B 0x3A8B91C
	0x03A8B918 MOV W29, W31
	0x03A8B91C ADRP X8, 0x691000
	0x03A8B920 LDR X8, [X8 + 0x8A8]
	0x03A8B924 STRB W28, [X31 + 0x639]
	0x03A8B928 STRB W29, [X31 + 0x623]
	0x03A8B92C LDR X24, [X31 + 0x6F8]
	0x03A8B930 LDR X0, [X8]
	0x03A8B934 LDR W8, [X0 + 0xE0]
	0x03A8B938 CBNZ W8, 0x3A8B940
	0x03A8B93C BL 0x1C16DFC
	0x03A8B940 ADD X1, X31, 0x4B0
	0x03A8B944 MOV X0, X24
	0x03A8B948 BL 0x3A8D3B8
	0x03A8B94C LDR X0, [X27]
	0x03A8B950 LDR W8, [X0 + 0xE0]
	0x03A8B954 CBNZ W8, 0x3A8B960
	0x03A8B958 BL 0x1C16DFC
	0x03A8B95C LDR X0, [X27]
	0x03A8B960 LDR X8, [X0 + 0xB8]
	0x03A8B964 LDR X2, [X8 + 0x18]
	0x03A8B968 STRB W31, [X31 + 0x38]
	0x03A8B96C ADD X0, X31, 0x38
	0x03A8B970 MOV X1, X31
	0x03A8B974 MOV X3, X31
	0x03A8B978 BL 0x39B1DB0
	0x03A8B97C LDRB W8, [X31 + 0x38]
	0x03A8B980 LDR X0, [X31 + 0x6F8]
	0x03A8B984 STRB W8, [X31 + 0x468]
	0x03A8B988 MOV X1, X19
	0x03A8B98C MOV X2, X31
	0x03A8B990 BL 0x3C54940
	0x03A8B994 MOV X24, X31
	0x03A8B998 MOVZ W22, 0x25
	0x03A8B99C ADD X0, X31, 0x468
	0x03A8B9A0 MOV X1, X31
	0x03A8B9A4 BL 0x39B1DB4
	0x03A8B9A8 CBNZ X24, 0x3A8BE44
	0x03A8B9AC CMP W22, 0x25
	0x03A8B9B0 B.EQ 0x3A8B9B8
	0x03A8B9B4 CBNZ W22, 0x3A8BD0C
	0x03A8B9B8 LDR X0, [X31 + 0x628]
	0x03A8B9BC CBZ X0, 0x3A8BE50
	0x03A8B9C0 MOV X1, X31
	0x03A8B9C4 BL 0x3984C98
	0x03A8B9C8 TBZ X0, 0x0, 0x3A8B9FC
	0x03A8B9CC ADD X0, X31, 0x4B0
	0x03A8B9D0 BL 0x3A8F13C
	0x03A8B9D4 ADRP X8, 0x6CA000
	0x03A8B9D8 LDR X8, [X8 + 0xDC8]
	0x03A8B9DC MOV X24, X0
	0x03A8B9E0 LDR X0, [X8]
	0x03A8B9E4 LDR W8, [X0 + 0xE0]
	0x03A8B9E8 CBNZ W8, 0x3A8B9F0
	0x03A8B9EC BL 0x1C16DFC
	0x03A8B9F0 MOV X0, X19
	0x03A8B9F4 MOV X1, X24
	0x03A8B9F8 BL 0x3A8F288
	0x03A8B9FC LDR W8, [X31 + 0x34]
	0x03A8BA00 ADDS W31, W8, 0x1
	0x03A8BA04 B.EQ 0x3A8BC88
	0x03A8BA08 CBZ X20, 0x3A8BE5C
	0x03A8BA0C LDR W8, [X20 + 0x18]
	0x03A8BA10 CMP W8, 0x1
	0x03A8BA14 B.LT 0x3A8BC88
	0x03A8BA18 MOV W24, W31
	0x03A8BA1C ADRP X8, 0x6CC000
	0x03A8BA20 LDR X8, [X8 + 0x2C0]
	0x03A8BA24 LDR X2, [X8]
	0x03A8BA28 MOV X0, X20
	0x03A8BA2C MOV W1, W24
	0x03A8BA30 BL 0x301BCCC
	0x03A8BA34 MOV X25, X0
	0x03A8BA38 CBZ X0, 0x3A8BE20
	0x03A8BA3C MOV X0, X25
	0x03A8BA40 MOV X1, X31
	0x03A8BA44 BL 0x3C32454
	0x03A8BA48 TBZ X0, 0x0, 0x3A8BC28
	0x03A8BA4C ADRP X8, 0x6C9000
	0x03A8BA50 LDR X8, [X8 + 0x918]
	0x03A8BA54 LDR X2, [X8]
	0x03A8BA58 ADD X1, X31, 0x458
	0x03A8BA5C MOV X0, X25
	0x03A8BA60 BL 0x21A4990
	0x03A8BA64 ADRP X8, 0x668000
	0x03A8BA68 LDR X8, [X8 + 0x598]
	0x03A8BA6C LDR X26, [X31 + 0x458]
	0x03A8BA70 LDR X0, [X8]
	0x03A8BA74 LDR W8, [X0 + 0xE0]
	0x03A8BA78 CBNZ W8, 0x3A8BA80
	0x03A8BA7C BL 0x1C16DFC
	0x03A8BA80 MOV X0, X26
	0x03A8BA84 MOV X1, X31
	0x03A8BA88 MOV X2, X31
	0x03A8BA8C BL 0x3C354F8
	0x03A8BA90 TBZ X0, 0x0, 0x3A8BC28
	0x03A8BA94 ADD X0, X31, 0x248
	0x03A8BA98 ADD X1, X31, 0x4B0
	0x03A8BA9C MOVZ W2, 0x208
	0x03A8BAA0 BL 0x3EB1AC0
	0x03A8BAA4 LDR X0, [X31 + 0x458]
	0x03A8BAA8 STR X25, [X31 + 0x308]
	0x03A8BAAC STR X19, [X31 + 0x450]
	0x03A8BAB0 CBZ X0, 0x3A8BE24
	0x03A8BAB4 MOV X1, X31
	0x03A8BAB8 BL 0x3A81480
	0x03A8BABC ADRP X8, 0x691000
	0x03A8BAC0 LDR X8, [X8 + 0x8A8]
	0x03A8BAC4 MOV X26, X0
	0x03A8BAC8 LDR X0, [X8]
	0x03A8BACC LDR W8, [X0 + 0xE0]
	0x03A8BAD0 CBNZ W8, 0x3A8BAD8
	0x03A8BAD4 BL 0x1C16DFC
	0x03A8BAD8 MOV X0, X26
	0x03A8BADC MOV X1, X23
	0x03A8BAE0 BL 0x3A8EBFC
	0x03A8BAE4 LDR X0, [X27]
	0x03A8BAE8 LDR W8, [X0 + 0xE0]
	0x03A8BAEC CBNZ W8, 0x3A8BAF8
	0x03A8BAF0 BL 0x1C16DFC
	0x03A8BAF4 LDR X0, [X27]
	0x03A8BAF8 LDR X8, [X0 + 0xB8]
	0x03A8BAFC LDR X2, [X8 + 0x10]
	0x03A8BB00 STRB W31, [X31 + 0x38]
	0x03A8BB04 ADD X0, X31, 0x38
	0x03A8BB08 MOV X1, X31
	0x03A8BB0C MOV X3, X31
	0x03A8BB10 BL 0x39B1DB0
	0x03A8BB14 LDRB W8, [X31 + 0x38]
	0x03A8BB18 LDR X0, [X31 + 0x6F8]
	0x03A8BB1C STRB W8, [X31 + 0x468]
	0x03A8BB20 MOV X1, X25
	0x03A8BB24 MOV X2, X31
	0x03A8BB28 BL 0x3C546F4
	0x03A8BB2C MOV X26, X31
	0x03A8BB30 MOVZ W22, 0x2B
	0x03A8BB34 ADD X0, X31, 0x468
	0x03A8BB38 MOV X1, X31
	0x03A8BB3C BL 0x39B1DB4
	0x03A8BB40 CBNZ X26, 0x3A8BE28
	0x03A8BB44 CMP W22, 0x2B
	0x03A8BB48 B.EQ 0x3A8BB50
	0x03A8BB4C CBNZ W22, 0x3A8BD0C
	0x03A8BB50 ADRP X8, 0x691000
	0x03A8BB54 LDR X8, [X8 + 0x8A8]
	0x03A8BB58 LDR X26, [X31 + 0x458]
	0x03A8BB5C LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x958000
	005 Move X19, 0x692000
	006 Move W8, [X20+878]
	007 Move X19, [X19+2200]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x692000
	013 Move X0, [X0+2200]
	014 Call 0x1C17CF4
	015 Move X0, 0x6CA000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move X0, 0x692000
	019 Move X0, [X0+2216]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+878], W8
	023 Move X0, [X19]
	024 Move [X31+8], W31
	025 Move X20, 0x6CA000
	026 Move W8, [X0+224]
	027 Move X20, [X20+32]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Move X3, X31
	036 Move X2, [X8+96]
	037 Call ProfilingScope..ctor, X0, X1, X2
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move W0, [X8+180]
	046 Move S0, 1
	047 Move S1, 1
	048 Move S2, 1
	049 Move S3, 1
	050 Move X1, X31
	051 Call Shader.SetGlobalColor, X0, X1
	052 Move X19, 0x692000
	053 Move X19, [X19+2216]
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Call UniversalRenderPipeline.get_asset
	060 Compare X0, 0
	061 JumpIfEqual {178}
	062 Move W8, [X0+116]
	063 Compare W8, 0
	064 JumpIfEqual {123}
	065 Move X0, [X19]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Call UniversalRenderPipeline.get_asset
	071 Compare X0, 0
	072 JumpIfEqual {179}
	073 Move W8, [X0+116]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X20]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X20]
	081 Move X8, [X19]
	082 Move X9, [X0+184]
	083 Move W10, [X8+224]
	084 Move W19, [X9+188]
	085 Compare W10, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Call UniversalRenderPipeline.get_asset
	090 Compare X0, 0
	091 JumpIfEqual {185}
	092 Move X1, X31
	093 Call UniversalRenderPipelineAsset.get_textures, X0
	094 Compare X0, 0
	095 JumpIfEqual {186}
	096 Move X0, [X0+16]
	097 Compare X0, 0
	098 JumpIfEqual {187}
	099 Move X8, [X0]
	100 Move X9, [X8+392]
	101 Move X1, [X8+400]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 NotImplemented "Instruction SCVTF not yet implemented."
	104 Move S1, 1
	105 NotImplemented "Instruction FDIV not yet implemented."
	106 Move W0, W19
	107 Move X1, X31
	108 Call Shader.SetGlobalFloat, X0, V0
	109 Move X8, [X20]
	110 Move X8, [X8+184]
	111 Move W19, [X8+184]
	112 Call UniversalRenderPipeline.get_asset
	113 Compare X0, 0
	114 JumpIfEqual {188}
	115 Move X1, X31
	116 Call UniversalRenderPipelineAsset.get_textures, X0
	117 Compare X0, 0
	118 JumpIfEqual {189}
	119 Move X1, [X0+16]
	120 Move W0, W19
	121 Move X2, X31
	122 Call Shader.SetGlobalTexture, X0, X1
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X20]
	129 Move X8, [X19]
	130 Move X9, [X0+184]
	131 Move W10, [X8+224]
	132 Move W19, [X9+188]
	133 Compare W10, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Call UniversalRenderPipeline.get_asset
	138 Compare X0, 0
	139 JumpIfEqual {180}
	140 Move X1, X31
	141 Call UniversalRenderPipelineAsset.get_textures, X0
	142 Compare X0, 0
	143 JumpIfEqual {181}
	144 Move X0, [X0+24]
	145 Compare X0, 0
	146 JumpIfEqual {182}
	147 Move X8, [X0]
	148 Move X9, [X8+392]
	149 Move X1, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 NotImplemented "Instruction SCVTF not yet implemented."
	152 Move S1, 1
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 Move W0, W19
	155 Move X1, X31
	156 Call Shader.SetGlobalFloat, X0, V0
	157 Move X8, [X20]
	158 Move X8, [X8+184]
	159 Move W19, [X8+184]
	160 Call UniversalRenderPipeline.get_asset
	161 Compare X0, 0
	162 JumpIfEqual {183}
	163 Move X1, X31
	164 Call UniversalRenderPipelineAsset.get_textures, X0
	165 Compare X0, 0
	166 JumpIfEqual {184}
	167 Move X1, [X0+24]
	168 Move W0, W19
	169 Move X2, X31
	170 Call Shader.SetGlobalTexture, X0, X1
	171 Add X0, X31, 8
	172 Move X1, X31
	173 Call ProfilingScope.Dispose, X0
	174 Move X20, [X31+16]
	175 Move X19, [X31+24]
	176 Move X30, [X31+32]
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Move X19, X0
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, X19
	193 Call 0x3EB2AD0
	194 Move X20, [X0]
	195 Call 0x3EB2AE0
	196 Add X0, X31, 8
	197 Move X1, X31
	198 Call ProfilingScope.Dispose, X0
	199 Compare X20, 0
	200 JumpIfEqual {174}
	201 Move X0, X20
	202 Call 0x1C17F18
	203 Move X20, X31
	204 Move X19, X0
	205 Add X0, X31, 8
	206 Move X1, X31
	207 Call ProfilingScope.Dispose, X0
	208 Compare X20, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X19
	211 Call 0x1D2D690
	212 Move X0, X20
	213 Call 0x1C17F18
	214 Call 0x1991590

Method: System.Void SetupPerCameraShaderConstants(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A8EFAC LDR V0, [X31 + 0x48]
	0x03A8EFB0 FMOV D1, 1
	0x03A8EFB4 FCVTZS X8, D0
	0x03A8EFB8 FADD D1, D0, D1
	0x03A8EFBC ANDS X31, X8, 0x1
	0x03A8EFC0 FCSEL D10, D0, D1, EQ
	0x03A8EFC4 B 0x3A8EFDC
	0x03A8EFC8 FADD D0, D8, D1
	0x03A8EFCC FRINTP D10, D0
	0x03A8EFD0 B 0x3A8EFDC
	0x03A8EFD4 FADD D0, D8, D1
	0x03A8EFD8 FRINTM D10, D0
	0x03A8EFDC FCVT S8, S9
	0x03A8EFE0 ADD X0, X31, 0x48
	0x03A8EFE4 MOV V0.16B, V8.16B
	0x03A8EFE8 BL 0x3EB1C00
	0x03A8EFEC FCMP S9, 0x0
	0x03A8EFF0 B.GE 0x3A8F00C
	0x03A8EFF4 FMOV D1, -0.5
	0x03A8EFF8 FCMP D0, D1
	0x03A8EFFC B.NE 0x3A8F034
	0x03A8F000 LDR V0, [X31 + 0x48]
	0x03A8F004 FMOV D1, -1
	0x03A8F008 B 0x3A8F020
	0x03A8F00C FMOV D1, 0.5
	0x03A8F010 FCMP D0, D1
	0x03A8F014 B.NE 0x3A8F040
	0x03A8F018 LDR V0, [X31 + 0x48]
	0x03A8F01C FMOV D1, 1
	0x03A8F020 FCVTZS X8, D0
	0x03A8F024 FADD D1, D0, D1
	0x03A8F028 ANDS X31, X8, 0x1
	0x03A8F02C FCSEL D0, D0, D1, EQ
	0x03A8F030 B 0x3A8F048
	0x03A8F034 FADD D0, D8, D1
	0x03A8F038 FRINTP D0, D0
	0x03A8F03C B 0x3A8F048
	0x03A8F040 FADD D0, D8, D1
	0x03A8F044 FRINTM D0, D0
	0x03A8F048 MOVZ X9, 0x7FF00000
	0x03A8F04C FMOV D1, X9
	0x03A8F050 FCVTZS W8, D10
	0x03A8F054 MOVZ W10, 0x80000000
	0x03A8F058 FCMP D10, D1
	0x03A8F05C LDR V2, [X19 + 0x140]
	0x03A8F060 FCVTZS W9, D0
	0x03A8F064 CSEL W8, W10, W8, EQ
	0x03A8F068 FCMP D0, D1
	0x03A8F06C CSEL W9, W10, W9, EQ
	0x03A8F070 SUB W8, W8, W9
	0x03A8F074 SCVTF S1, S2
	0x03A8F078 SCVTF S2, W8
	0x03A8F07C FDIV S1, S1, S2
	0x03A8F080 ADD X21, X19, 0xD8
	0x03A8F084 STR W8, [X19 + 0x144]
	0x03A8F088 STR S1, [X19 + 0x148]
	0x03A8F08C LDUR V0, [X19 + 0xF8]
	0x03A8F090 LDR W8, [X21 + 0x30]
	0x03A8F094 LDUR V1, [X19 + 0xE8]
	0x03A8F098 LDUR V2, [X19 + 0xD8]
	0x03A8F09C STR W8, [X31 + 0x30]
	0x03A8F0A0 STP V1, V0, [X31 + 0x10]
	0x03A8F0A4 STR V2, [X31]
	0x03A8F0A8 LDR X8, [X20]
	0x03A8F0AC CBZ X8, 0x3A8F138
	0x03A8F0B0 LDR W9, [X8 + 0x88]
	0x03A8F0B4 LDUR V0, [X8 + 0x78]
	0x03A8F0B8 LDUR V1, [X8 + 0x68]
	0x03A8F0BC LDUR V2, [X8 + 0x58]
	0x03A8F0C0 STR W9, [X21 + 0x30]
	0x03A8F0C4 STP V1, V0, [X21 + 0x10]
	0x03A8F0C8 STR V2, [X21]
	0x03A8F0CC LDRB W8, [X19 + 0x16D]
	0x03A8F0D0 CBZ W8, 0x3A8F0F0
	0x03A8F0D4 ADD X0, X31, 0x0
	0x03A8F0D8 MOV X1, X31
	0x03A8F0DC BL 0x3C22060
	0x03A8F0E0 MOV W1, W0
	0x03A8F0E4 MOV X0, X21
	0x03A8F0E8 MOV X2, X31
	0x03A8F0EC BL 0x3C2240C
	0x03A8F0F0 LDR W9, [X31 + 0x8]
	0x03A8F0F4 LDRB W8, [X19 + 0x16C]
	0x03A8F0F8 STR W9, [X19 + 0xE0]
	0x03A8F0FC CBNZ W8, 0x3A8F108
	0x03A8F100 LDR V0, [X19 + 0x140]
	0x03A8F104 STR D0, [X19 + 0xD8]
	0x03A8F108 CMP W8, 0x0
	0x03A8F10C CSET W1, NE
	0x03A8F110 MOV X0, X21
	0x03A8F114 MOV X2, X31
	0x03A8F118 BL 0x3C2225C
	0x03A8F11C LDP X20, X19, [X31 + 0x80]
	0x03A8F120 LDP X30, X21, [X31 + 0x70]
	0x03A8F124 LDP D9, D8, [X31 + 0x60]
	0x03A8F128 LDP D11, D10, [X31 + 0x50]
	0x03A8F12C LDR V12, [X31 + 0x40]
	0x03A8F130 ADD X31, X31, 0x90
	0x03A8F134 RET
	0x03A8F138 BL 0x1C16F20
	0x03A8F13C STR X30, [X31 - 0x20]!
	0x03A8F140 STP X20, X19, [X31 + 0x10]
	0x03A8F144 ADRP X20, 0x953000
	0x03A8F148 LDRB W8, [X20 + 0x391]
	0x03A8F14C MOV X19, X0
	0x03A8F150 TBNZ X8, 0x0, 0x3A8F168
	0x03A8F154 ADRP X0, 0x6C8000
	0x03A8F158 LDR X0, [X0 + 0x390]
	0x03A8F15C BL 0x1C16CF4
	0x03A8F160 MOVZ W8, 0x1
	0x03A8F164 STRB W8, [X20 + 0x391]
	0x03A8F168 LDR X8, [X19 + 0x178]
	0x03A8F16C CBZ X8, 0x3A8F190
	0x03A8F170 ADRP X9, 0x6C8000
	0x03A8F174 LDR X9, [X9 + 0x390]
	0x03A8F178 LDR X10, [X8]
	0x03A8F17C LDR X9, [X9]
	0x03A8F180 LDRB W12, [X10 + 0x130]
	0x03A8F184 LDRB W11, [X9 + 0x130]
	0x03A8F188 CMP W12, W11
	0x03A8F18C B.CS 0x3A8F198
	0x03A8F190 MOV X0, X31
	0x03A8F194 B 0x3A8F1AC
	0x03A8F198 LDR X10, [X10 + 0xC8]
	0x03A8F19C ADD X10, X10, X11, 0x3, LSL
	0x03A8F1A0 LDUR X10, [X10 - 0x8]
	0x03A8F1A4 CMP X10, X9
	0x03A8F1A8 CSEL X0, X8, X31, EQ
	0x03A8F1AC LDP X20, X19, [X31 + 0x10]
	0x03A8F1B0 LDR X30, [X31], #0x20
	0x03A8F1B4 RET
	0x03A8F1B8 STR X30, [X31 - 0x30]!
	0x03A8F1BC STP X22, X21, [X31 + 0x10]
	0x03A8F1C0 STP X20, X19, [X31 + 0x20]
	0x03A8F1C4 ADRP X22, 0x953000
	0x03A8F1C8 ADRP X21, 0x6C1000
	0x03A8F1CC LDRB W8, [X22 + 0x3A7]
	0x03A8F1D0 LDR X21, [X21 + 0x500]
	0x03A8F1D4 MOV X19, X1
	0x03A8F1D8 MOV X20, X0
	0x03A8F1DC TBNZ X8, 0x0, 0x3A8F1F4
	0x03A8F1E0 ADRP X0, 0x6C1000
	0x03A8F1E4 LDR X0, [X0 + 0x500]
	0x03A8F1E8 BL 0x1C16CF4
	0x03A8F1EC MOVZ W8, 0x1
	0x03A8F1F0 STRB W8, [X22 + 0x3A7]
	0x03A8F1F4 LDR X0, [X21]
	0x03A8F1F8 LDR W8, [X0 + 0xE0]
	0x03A8F1FC CBNZ W8, 0x3A8F204
	0x03A8F200 BL 0x1C16DFC
	0x03A8F204 ADRP X22, 0x952000
	0x03A8F208 LDRB W8, [X22 + 0xB3A]
	0x03A8F20C CBNZ W8, 0x3A8F224
	0x03A8F210 ADRP X0, 0x6C1000
	0x03A8F214 LDR X0, [X0 + 0x500]
	0x03A8F218 BL 0x1C16CF4
	0x03A8F21C MOVZ W8, 0x1
	0x03A8F220 STRB W8, [X22 + 0xB3A]
	0x03A8F224 LDR X0, [X21]
	0x03A8F228 LDR W8, [X0 + 0xE0]
	0x03A8F22C CBNZ W8, 0x3A8F238
	0x03A8F230 BL 0x1C16DFC
	0x03A8F234 LDR X0, [X21]
	0x03A8F238 LDR X8, [X0 + 0xB8]
	0x03A8F23C LDR X21, [X8 + 0x18]
	0x03A8F240 CBZ X21, 0x3A8F274
	0x03A8F244 CBZ X19, 0x3A8F284
	0x03A8F248 MOV X0, X19
	0x03A8F24C MOV X1, X31
	0x03A8F250 BL 0x398632C
	0x03A8F254 CMP W0, 0x2
	0x03A8F258 B.NE 0x3A8F274
	0x03A8F25C MOV X0, X21
	0x03A8F260 MOV X1, X20
	0x03A8F264 MOV X2, X31
	0x03A8F268 BL 0x3E65A5C
	0x03A8F26C MOVZ W8, 0x1
	0x03A8F270 STRB W8, [X19 + 0x6C8]
	0x03A8F274 LDP X20, X19, [X31 + 0x20]
	0x03A8F278 LDP X22, X21, [X31 + 0x10]
	0x03A8F27C LDR X30, [X31], #0x30
	0x03A8F280 RET
	0x03A8F284 BL 0x1C16F20
	0x03A8F288 STR X30, [X31 - 0x30]!
	0x03A8F28C STP X22, X21, [X31 + 0x10]
	0x03A8F290 STP X20, X19, [X31 + 0x20]
	0x03A8F294 ADRP X22, 0x953000
	0x03A8F298 ADRP X21, 0x6C1000
	0x03A8F29C LDRB W8, [X22 + 0x3A8]
	0x03A8F2A0 LDR X21, [X21 + 0x500]
	0x03A8F2A4 MOV X19, X1
	0x03A8F2A8 MOV X20, X0
	0x03A8F2AC TBNZ X8, 0x0, 0x3A8F2C4
	0x03A8F2B0 ADRP X0, 0x6C1000
	0x03A8F2B4 LDR X0, [X0 + 0x500]
	0x03A8F2B8 BL 0x1C16CF4
	0x03A8F2BC MOVZ W8, 0x1
	0x03A8F2C0 STRB W8, [X22 + 0x3A8]
	0x03A8F2C4 LDR X0, [X21]
	0x03A8F2C8 LDR W8, [X0 + 0xE0]
	0x03A8F2CC CBNZ W8, 0x3A8F2D4
	0x03A8F2D0 BL 0x1C16DFC
	0x03A8F2D4 ADRP X22, 0x952000
	0x03A8F2D8 LDRB W8, [X22 + 0xB3A]
	0x03A8F2DC CBNZ W8, 0x3A8F2F4
	0x03A8F2E0 ADRP X0, 0x6C1000
	0x03A8F2E4 LDR X0, [X0 + 0x500]
	0x03A8F2E8 BL 0x1C16CF4
	0x03A8F2EC MOVZ W8, 0x1
	0x03A8F2F0 STRB W8, [X22 + 0xB3A]
	0x03A8F2F4 LDR X0, [X21]
	0x03A8F2F8 LDR W8, [X0 + 0xE0]
	0x03A8F2FC CBNZ W8, 0x3A8F308
	0x03A8F300 BL 0x1C16DFC
	0x03A8F304 LDR X0, [X21]
	0x03A8F308 LDR X8, [X0 + 0xB8]
	0x03A8F30C LDR X0, [X8 + 0x18]
	0x03A8F310 CBZ X0, 0x3A8F330
	0x03A8F314 CBZ X19, 0x3A8F340
	0x03A8F318 LDRB W8, [X19 + 0x6C8]
	0x03A8F31C CBZ W8, 0x3A8F330
	0x03A8F320 MOV X1, X20
	0x03A8F324 MOV X2, X31
	0x03A8F328 BL 0x3E65938
	0x03A8F32C STRB W31, [X19 + 0x6C8]
	0x03A8F330 LDP X20, X19, [X31 + 0x20]
	0x03A8F334 LDP X22, X21, [X31 + 0x10]
	0x03A8F338 LDR X30, [X31], #0x30
	0x03A8F33C RET
	0x03A8F340 BL 0x1C16F20
	0x03A8F344 STR X30, [X31 - 0x20]!
	0x03A8F348 STP X20, X19, [X31 + 0x10]
	0x03A8F34C ADRP X20, 0x953000
	0x03A8F350 LDRB W8, [X20 + 0x362]
	0x03A8F354 MOV X19, X0
	0x03A8F358 TBNZ X8, 0x0, 0x3A8F370
	0x03A8F35C ADRP X0, 0x68D000
	0x03A8F360 LDR X0, [X0 + 0x8A8]
	0x03A8F364 BL 0x1C16CF4
	0x03A8F368 MOVZ W8, 0x1
	0x03A8F36C STRB W8, [X20 + 0x362]
	0x03A8F370 LDRB W8, [X19 + 0x188]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+272], D11
	003 Move [X31+280], D10
	004 Move [X31+288], D9
	005 Move [X31+296], D8
	006 Move [X31+304], X29
	007 Move [X31+320], X30
	008 Move [X31+328], X21
	009 Move [X31+336], X20
	010 Move [X31+344], X19
	011 Move X21, 0x955000
	012 Move X20, 0x68F000
	013 Move W8, [X21+879]
	014 Move X20, [X20+2200]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x68E000
	021 Move X0, [X0+2296]
	022 Call 0x1C17CF4
	023 Move X0, 0x68F000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move X0, 0x6C6000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move X0, 0x6C6000
	030 Move X0, [X0+32]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+879], W8
	034 Move X0, [X20]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+312], W31
	037 Move [X31+252], V0
	038 Move [X31+224], V0
	039 Move [X31+232], V0
	040 Move [X31+192], V0
	041 Move [X31+200], V0
	042 Move [X31+160], V0
	043 Move [X31+168], V0
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X20]
	049 Move X8, [X0+184]
	050 Add X0, X31, 312
	051 Move X1, X31
	052 Move X3, X31
	053 Move X2, [X8+104]
	054 Call ProfilingScope..ctor, X0, X1, X2
	055 Add X8, X31, 48
	056 Move X0, X31
	057 Call RenderSettings.get_ambientProbe
	058 Add X0, X31, 160
	059 Add X1, X31, 48
	060 Move W2, 108
	061 Call 0x3EB2AC0
	062 Add X0, X31, 160
	063 Move W1, W31
	064 Move W2, W31
	065 Move X3, X31
	066 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	067 Move V8, V0
	068 Add X0, X31, 160
	069 Move W1, 1
	070 Move W2, W31
	071 Move X3, X31
	072 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	073 Move V9, V0
	074 Add X0, X31, 160
	075 Move W1, 2
	076 Move W2, W31
	077 Move X3, X31
	078 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	079 Move V10, V0
	080 Move X0, X31
	081 Call RenderSettings.get_reflectionIntensity
	082 Move X8, 0x68D000
	083 Move X8, [X8+2296]
	084 Move V11, V0
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Multiply S0, S8, S11
	091 Multiply S1, S9, S11
	092 Multiply S2, S10, S11
	093 Move V3, V11
	094 Move X0, X31
	095 Call CoreUtils.ConvertLinearToActiveColorSpace, X0
	096 Move X21, 0x6C6000
	097 Move X21, [X21+32]
	098 Move V8, V0
	099 Move V9, V1
	100 Move V10, V2
	101 Move X0, [X21]
	102 Move V11, V3
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Compare X19, 0
	108 JumpIfEqual {212}
	109 Move X8, [X21]
	110 Move X8, [X8+184]
	111 Move W1, [X8]
	112 Move X0, X19
	113 Move V0, V8
	114 Move V1, V9
	115 Move V2, V10
	116 Move V3, V11
	117 Move X2, X31
	118 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	119 Move X9, 0x6C5000
	120 Move X8, [X21]
	121 Move X9, [X9+760]
	122 Move X8, [X8+184]
	123 Move X0, [X9]
	124 Move W20, [X8+8]
	125 Move W9, [X0+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X31
	130 Call ReflectionProbe.get_defaultTexture
	131 Add X8, X31, 48
	132 Move X1, X31
	133 Call RenderTargetIdentifier.op_Implicit, X0
	134 Move V0, [X31+48]
	135 Move V1, [X31+64]
	136 Move X8, [X31+80]
	137 Move [X31], V0
	138 Move [X31+8], V1
	139 Move [X31+32], X8
	140 Add X2, X31, 0
	141 Move X0, X19
	142 Move W1, W20
	143 Move X3, X31
	144 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	145 Move X8, [X21]
	146 Move X8, [X8+184]
	147 Move W20, [X8+12]
	148 Move X0, X31
	149 Call ReflectionProbe.get_defaultTextureHDRDecodeValues
	150 Move X0, X19
	151 Move W1, W20
	152 Move X2, X31
	153 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	154 Move X8, [X21]
	155 Move X8, [X8+184]
	156 Move W20, [X8+16]
	157 Move X0, X31
	158 Call RenderSettings.get_ambientSkyColor
	159 Move X0, X31
	160 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	161 Move X0, X19
	162 Move W1, W20
	163 Move X2, X31
	164 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	165 Move X8, [X21]
	166 Move X8, [X8+184]
	167 Move W20, [X8+20]
	168 Move X0, X31
	169 Call RenderSettings.get_ambientEquatorColor
	170 Move X0, X31
	171 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	172 Move X0, X19
	173 Move W1, W20
	174 Move X2, X31
	175 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	176 Move X8, [X21]
	177 Move X8, [X8+184]
	178 Move W20, [X8+24]
	179 Move X0, X31
	180 Call RenderSettings.get_ambientGroundColor
	181 Move X0, X31
	182 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	183 Move X0, X19
	184 Move W1, W20
	185 Move X2, X31
	186 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	187 Move X8, [X21]
	188 Move X8, [X8+184]
	189 Move W20, [X8+4]
	190 Move X0, X31
	191 Call RenderSettings.get_subtractiveShadowColor
	192 Move X0, X31
	193 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	194 Move X0, X19
	195 Move W1, W20
	196 Move X2, X31
	197 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	198 Add X0, X31, 312
	199 Move X1, X31
	200 Call ProfilingScope.Dispose, X0
	201 Move X20, [X31+336]
	202 Move X19, [X31+344]
	203 Move X30, [X31+320]
	204 Move X21, [X31+328]
	205 Move X29, [X31+304]
	206 Move D9, [X31+288]
	207 Move D8, [X31+296]
	208 Move D11, [X31+272]
	209 Move D10, [X31+280]
	210 Add X31, X31, 352
	211 Return 
	212 Call 0x1C17F20
	213 Move X19, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X19
	216 Call 0x3EB2AD0
	217 Move X20, [X0]
	218 Call 0x3EB2AE0
	219 Add X0, X31, 312
	220 Move X1, X31
	221 Call ProfilingScope.Dispose, X0
	222 Compare X20, 0
	223 JumpIfEqual {201}
	224 Move X0, X20
	225 Call 0x1C17F18
	226 Move X20, X31
	227 Move X19, X0
	228 Add X0, X31, 312
	229 Move X1, X31
	230 Call ProfilingScope.Dispose, X0
	231 Compare X20, 0
	232 JumpIfNotEqual {235}
	233 Move X0, X19
	234 Call 0x1D2D690
	235 Move X0, X20
	236 Call 0x1C17F18
	237 Call 0x1991590

Method: System.Void CheckAndApplyDebugSettings(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A920A8 TBNZ X8, 0x0, 0x3A92174
	0x03A920AC ADRP X0, 0x68A000
	0x03A920B0 LDR X0, [X0 + 0x898]
	0x03A920B4 BL 0x1C16CF4
	0x03A920B8 ADRP X0, 0x6BE000
	0x03A920BC LDR X0, [X0 + 0x598]
	0x03A920C0 BL 0x1C16CF4
	0x03A920C4 ADRP X0, 0x6C5000
	0x03A920C8 LDR X0, [X0 + 0x400]
	0x03A920CC BL 0x1C16CF4
	0x03A920D0 ADRP X0, 0x6C5000
	0x03A920D4 LDR X0, [X0 + 0x408]
	0x03A920D8 BL 0x1C16CF4
	0x03A920DC ADRP X0, 0x6C5000
	0x03A920E0 LDR X0, [X0 + 0x3E8]
	0x03A920E4 BL 0x1C16CF4
	0x03A920E8 ADRP X0, 0x6C5000
	0x03A920EC LDR X0, [X0 + 0x3C8]
	0x03A920F0 BL 0x1C16CF4
	0x03A920F4 ADRP X0, 0x6C5000
	0x03A920F8 LDR X0, [X0 + 0x410]
	0x03A920FC BL 0x1C16CF4
	0x03A92100 ADRP X0, 0x6C5000
	0x03A92104 LDR X0, [X0 + 0x3C0]
	0x03A92108 BL 0x1C16CF4
	0x03A9210C ADRP X0, 0x6C5000
	0x03A92110 LDR X0, [X0 + 0x418]
	0x03A92114 BL 0x1C16CF4
	0x03A92118 ADRP X0, 0x6C5000
	0x03A9211C LDR X0, [X0 + 0x3D8]
	0x03A92120 BL 0x1C16CF4
	0x03A92124 ADRP X0, 0x6C5000
	0x03A92128 LDR X0, [X0 + 0x3E0]
	0x03A9212C BL 0x1C16CF4
	0x03A92130 ADRP X0, 0x6C5000
	0x03A92134 LDR X0, [X0 + 0x3F8]
	0x03A92138 BL 0x1C16CF4
	0x03A9213C ADRP X0, 0x6C5000
	0x03A92140 LDR X0, [X0 + 0x3F0]
	0x03A92144 BL 0x1C16CF4
	0x03A92148 ADRP X0, 0x6C5000
	0x03A9214C LDR X0, [X0 + 0x3D0]
	0x03A92150 BL 0x1C16CF4
	0x03A92154 ADRP X0, 0x6C5000
	0x03A92158 LDR X0, [X0 + 0x420]
	0x03A9215C BL 0x1C16CF4
	0x03A92160 ADRP X0, 0x6C5000
	0x03A92164 LDR X0, [X0 + 0x428]
	0x03A92168 BL 0x1C16CF4
	0x03A9216C MOVZ W8, 0x1
	0x03A92170 STRB W8, [X27 + 0x382]
	0x03A92174 LDR X0, [X21]
	0x03A92178 BL 0x1C16F10
	0x03A9217C LDR X1, [X19]
	0x03A92180 MOV X2, X31
	0x03A92184 MOV X19, X0
	0x03A92188 BL 0x39B19AC
	0x03A9218C LDR X8, [X20]
	0x03A92190 LDR X8, [X8 + 0xB8]
	0x03A92194 STR X19, [X8]
	0x03A92198 LDR X0, [X21]
	0x03A9219C BL 0x1C16F10
	0x03A921A0 LDR X1, [X26]
	0x03A921A4 MOV X2, X31
	0x03A921A8 MOV X19, X0
	0x03A921AC BL 0x39B19AC
	0x03A921B0 LDR X8, [X20]
	0x03A921B4 LDR X8, [X8 + 0xB8]
	0x03A921B8 STR X19, [X8 + 0x8]
	0x03A921BC LDR X0, [X21]
	0x03A921C0 BL 0x1C16F10
	0x03A921C4 LDR X1, [X25]
	0x03A921C8 MOV X2, X31
	0x03A921CC MOV X19, X0
	0x03A921D0 BL 0x39B19AC
	0x03A921D4 LDR X8, [X20]
	0x03A921D8 LDR X8, [X8 + 0xB8]
	0x03A921DC STR X19, [X8 + 0x10]
	0x03A921E0 LDR X0, [X21]
	0x03A921E4 BL 0x1C16F10
	0x03A921E8 LDR X1, [X24]
	0x03A921EC MOV X2, X31
	0x03A921F0 MOV X19, X0
	0x03A921F4 BL 0x39B19AC
	0x03A921F8 LDR X8, [X20]
	0x03A921FC LDR X8, [X8 + 0xB8]
	0x03A92200 STR X19, [X8 + 0x18]
	0x03A92204 LDR X0, [X21]
	0x03A92208 BL 0x1C16F10
	0x03A9220C LDR X1, [X23]
	0x03A92210 MOV X2, X31
	0x03A92214 MOV X19, X0
	0x03A92218 BL 0x39B19AC
	0x03A9221C LDR X8, [X20]
	0x03A92220 LDR X8, [X8 + 0xB8]
	0x03A92224 STR X19, [X8 + 0x20]
	0x03A92228 LDR X0, [X21]
	0x03A9222C BL 0x1C16F10
	0x03A92230 LDR X1, [X22]
	0x03A92234 MOV X2, X31
	0x03A92238 MOV X19, X0
	0x03A9223C BL 0x39B19AC
	0x03A92240 LDR X8, [X20]
	0x03A92244 LDR X8, [X8 + 0xB8]
	0x03A92248 STR X19, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x951000
	008 Move X20, 0x6C4000
	009 Move W8, [X21+880]
	010 Move X20, [X20+1200]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x6C4000
	017 Move X0, [X0+1192]
	018 Call 0x1C17CF4
	019 Move X0, 0x6C4000
	020 Move X0, [X0+1200]
	021 Call 0x1C17CF4
	022 Move X0, 0x662000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x68B000
	026 Move X0, [X0+2216]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+880], W8
	030 Move X0, [X20]
	031 Move X20, 0x6C4000
	032 Move W8, [X0+224]
	033 Move X20, [X20+1192]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Call 0x29B00A8
	039 Compare X0, 0
	040 JumpIfEqual {132}
	041 Move X8, [X0]
	042 Move X20, X0
	043 Move X9, [X8+472]
	044 Move X1, [X8+480]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {125}
	050 Move W8, [X19+384]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X20+40]
	053 Compare X8, 0
	054 JumpIfEqual {132}
	055 Move W10, [X8+52]
	056 Move W9, [X19+248]
	057 Move W8, [X8+53]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSINC not yet implemented."
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Move [X19+389], W31
	063 Move X8, [X20]
	064 Move X0, X20
	065 Move X9, [X8+488]
	066 Move X1, [X8+496]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Move [X19+416], W31
	073 Move X21, 0x68B000
	074 Move X21, [X21+2216]
	075 Move X0, [X21]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Call UniversalRenderPipeline.get_asset
	081 Move X8, 0x662000
	082 Move X8, [X8+1432]
	083 Move X20, X0
	084 Move X8, [X8]
	085 Move W9, [X8+224]
	086 Compare W9, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X8
	089 Call 0x1C17DFC
	090 Move X0, X20
	091 Move X1, X31
	092 Call Object.op_Implicit, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {106}
	097 Move X0, [X21]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Call UniversalRenderPipeline.get_asset
	103 Compare X0, 0
	104 JumpIfEqual {132}
	105 Move W20, [X0+88]
	106 Move W20, W31
	107 Move [X19+376], W20
	108 Move X0, [X21]
	109 Move W23, [X19+389]
	110 Add X21, X19, 240
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CSET not yet implemented."
	117 Move W2, 1
	118 Move W1, W20
	119 Call UniversalRenderPipeline.MakeRenderTextureGraphicsFormat, X0, X1, X2
	120 Move W1, W0
	121 Move X0, X21
	122 Move X2, X31
	123 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	124 Move [X19+248], W22
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Return 
	132 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.ImageUpscalingFilter ResolveUpscalingFilterSelection(UnityEngine.Vector2 imageSize, System.Single renderScale, UnityEngine.Rendering.Universal.UpscalingFilterSelection selection)

Disassembly:
	0x03A90D9C BL 0x1C16F20
	0x03A90DA0 BL 0x1C16F20
	0x03A90DA4 BL 0x1C16F20
	0x03A90DA8 BL 0x1C16F20
	0x03A90DAC BL 0x1C16F20
	0x03A90DB0 BL 0x1C16F20
	0x03A90DB4 BL 0x1C16F20
	0x03A90DB8 BL 0x1C16F20
	0x03A90DBC BL 0x1C16F20
	0x03A90DC0 BL 0x1C16F20
	0x03A90DC4 BL 0x1C16F20
	0x03A90DC8 BL 0x1C16F20
	0x03A90DCC BL 0x1C16F20
	0x03A90DD0 BL 0x1C16F20
	0x03A90DD4 BL 0x1C16F20
	0x03A90DD8 BL 0x1C16F20
	0x03A90DDC BL 0x1C16F20
	0x03A90DE0 BL 0x1C16F20
	0x03A90DE4 BL 0x1C16F20
	0x03A90DE8 BL 0x1C16F20
	0x03A90DEC BL 0x1C16F20
	0x03A90DF0 B 0x3A90EB0
	0x03A90DF4 B 0x3A90EB0
	0x03A90DF8 B 0x3A90EB0
	0x03A90DFC B 0x3A90EB0
	0x03A90E00 B 0x3A90EB0
	0x03A90E04 B 0x3A90EB0
	0x03A90E08 B 0x3A90EB0
	0x03A90E0C B 0x3A90EB0
	0x03A90E10 B 0x3A90EB0
	0x03A90E14 B 0x3A90EB0
	0x03A90E18 B 0x3A90EB0
	0x03A90E1C B 0x3A90EB0
	0x03A90E20 B 0x3A90EB0
	0x03A90E24 B 0x3A90EB0
	0x03A90E28 B 0x3A90EB0
	0x03A90E2C B 0x3A90EB0
	0x03A90E30 B 0x3A90EB0
	0x03A90E34 B 0x3A90EB0
	0x03A90E38 B 0x3A90EB0
	0x03A90E3C B 0x3A90EB0
	0x03A90E40 B 0x3A90EB0
	0x03A90E44 B 0x3A90EB0
	0x03A90E48 B 0x3A90EB0
	0x03A90E4C B 0x3A90EB0
	0x03A90E50 B 0x3A90EB0
	0x03A90E54 B 0x3A90EB0
	0x03A90E58 B 0x3A90EB0
	0x03A90E5C B 0x3A90EB0
	0x03A90E60 B 0x3A90EB0
	0x03A90E64 B 0x3A90EB0
	0x03A90E68 B 0x3A90EB0
	0x03A90E6C B 0x3A90EB0
	0x03A90E70 B 0x3A90EB0
	0x03A90E74 B 0x3A90EB0
	0x03A90E78 B 0x3A90EB0
	0x03A90E7C B 0x3A90EB0
	0x03A90E80 B 0x3A90EB0
	0x03A90E84 B 0x3A90EB0
	0x03A90E88 B 0x3A90EB0
	0x03A90E8C B 0x3A90EB0
	0x03A90E90 B 0x3A90EB0
	0x03A90E94 B 0x3A90EB0
	0x03A90E98 B 0x3A90EB0
	0x03A90E9C B 0x3A90EB0
	0x03A90EA0 B 0x3A90EB0
	0x03A90EA4 B 0x3A90EB0
	0x03A90EA8 B 0x3A90EB0
	0x03A90EAC B 0x3A90EB0
	0x03A90EB0 MOV X19, X0
	0x03A90EB4 CMP W1, 0x1
	0x03A90EB8 B.NE 0x3A90EE4
	0x03A90EBC MOV X0, X19
	0x03A90EC0 BL 0x3EB1AD0
	0x03A90EC4 LDR X20, [X0]
	0x03A90EC8 BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V10, V2
	008 Move V8, V1
	009 Move V9, V0
	010 Compare W0, 0
	011 JumpIfEqual {21}
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X31
	015 Call FSRUtils.IsSupported
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {21}
	020 Move W0, 2
	021 Move X19, 0x94A000
	022 Move W8, [X19+1450]
	023 Move S0, 1
	024 NotImplemented "Instruction FDIV not yet implemented."
	025 NotImplemented "Instruction FRINTM not yet implemented."
	026 Subtract S11, S10, S0
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x66B000
	030 Move X0, [X0+1208]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+1450], W8
	034 Move X8, 0x66B000
	035 Move X8, [X8+1208]
	036 Move X9, -49958912
	037 Move V0, [X9+576]
	038 NotImplemented "Instruction FABS not yet implemented."
	039 Move X8, [X8]
	040 Move S2, W31
	041 Move S4, 8
	042 NotImplemented "Instruction FMAXNM not yet implemented."
	043 Move X8, [X8+184]
	044 Multiply S5, S1, S0
	045 Move V3, [X8]
	046 Multiply S1, S3, S4
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 NotImplemented "Instruction FABD not yet implemented."
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 NotImplemented "Instruction FRINTM not yet implemented."
	053 Subtract S5, S3, S4
	054 NotImplemented "Instruction FABD not yet implemented."
	055 NotImplemented "Instruction FMAXNM not yet implemented."
	056 Multiply S3, S3, S0
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 NotImplemented "Instruction FCSEL not yet implemented."
	059 NotImplemented "Instruction FABD not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 NotImplemented "Instruction FRINTM not yet implemented."
	063 Move S3, W31
	064 Subtract S5, S2, S4
	065 NotImplemented "Instruction FABD not yet implemented."
	066 NotImplemented "Instruction FMAXNM not yet implemented."
	067 Multiply S0, S2, S0
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction FCSEL not yet implemented."
	070 NotImplemented "Instruction FABD not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move W0, W31
	073 Move W0, 1
	074 Move X30, [X31+32]
	075 Move X19, [X31+40]
	076 Move D9, [X31+16]
	077 Move D8, [X31+24]
	078 Move D11, [X31+48]
	079 Move D10, [X31+56]
	080 Return X0

Method: System.Boolean HDROutputForMainDisplayIsActive()

Disassembly:
	0x03A8FA20 BL 0x1C16F20
	0x03A8FA24 BL 0x1C16F20
	0x03A8FA28 B 0x3A8FAB8
	0x03A8FA2C B 0x3A8FAB8
	0x03A8FA30 B 0x3A8FAB8
	0x03A8FA34 B 0x3A8FAB8
	0x03A8FA38 B 0x3A8FAB8
	0x03A8FA3C B 0x3A8FAB8
	0x03A8FA40 B 0x3A8FAB8
	0x03A8FA44 B 0x3A8FAB8
	0x03A8FA48 B 0x3A8FAB8
	0x03A8FA4C B 0x3A8FAB8
	0x03A8FA50 B 0x3A8FAB8
	0x03A8FA54 B 0x3A8FAB8
	0x03A8FA58 B 0x3A8FAB8
	0x03A8FA5C B 0x3A8FAB8
	0x03A8FA60 B 0x3A8FAB8
	0x03A8FA64 B 0x3A8FAB8
	0x03A8FA68 B 0x3A8FAB8
	0x03A8FA6C B 0x3A8FAB8
	0x03A8FA70 B 0x3A8FAB8
	0x03A8FA74 B 0x3A8FAB8
	0x03A8FA78 B 0x3A8FAB8
	0x03A8FA7C B 0x3A8FAB8
	0x03A8FA80 B 0x3A8FAB8
	0x03A8FA84 B 0x3A8FAB8
	0x03A8FA88 B 0x3A8FAB8
	0x03A8FA8C B 0x3A8FAB8
	0x03A8FA90 B 0x3A8FAB8
	0x03A8FA94 B 0x3A8FAB8
	0x03A8FA98 B 0x3A8FAB8
	0x03A8FA9C B 0x3A8FAB8
	0x03A8FAA0 B 0x3A8FAB8
	0x03A8FAA4 B 0x3A8FAB8
	0x03A8FAA8 B 0x3A8FAB8
	0x03A8FAAC B 0x3A8FAB8
	0x03A8FAB0 B 0x3A8FAB8
	0x03A8FAB4 B 0x3A8FAB8
	0x03A8FAB8 MOV X19, X0
	0x03A8FABC CMP W1, 0x1
	0x03A8FAC0 B.NE 0x3A8FAEC
	0x03A8FAC4 MOV X0, X19
	0x03A8FAC8 BL 0x3EB1AD0
	0x03A8FACC LDR X20, [X0]
	0x03A8FAD0 BL 0x3EB1AE0
	0x03A8FAD4 ADD X0, X31, 0x8
	0x03A8FAD8 MOV X1, X31
	0x03A8FADC BL 0x39B1DB4
	0x03A8FAE0 CBZ X20, 0x3A8F9F8
	0x03A8FAE4 MOV X0, X20
	0x03A8FAE8 BL 0x1C16F18
	0x03A8FAEC MOV X20, X31
	0x03A8FAF0 B 0x3A8FAF8
	0x03A8FAF4 MOV X19, X0
	0x03A8FAF8 ADD X0, X31, 0x8
	0x03A8FAFC MOV X1, X31
	0x03A8FB00 BL 0x39B1DB4
	0x03A8FB04 CBNZ X20, 0x3A8FB10
	0x03A8FB08 MOV X0, X19
	0x03A8FB0C BL 0x1D2C690
	0x03A8FB10 MOV X0, X20
	0x03A8FB14 BL 0x1C16F18
	0x03A8FB18 BL 0x1990590
	0x03A8FB1C SUB X31, X31, 0x100
	0x03A8FB20 STR X30, [X31 + 0xB0]
	0x03A8FB24 STP X26, X25, [X31 + 0xC0]
	0x03A8FB28 STP X24, X23, [X31 + 0xD0]
	0x03A8FB2C STP X22, X21, [X31 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x954000
	005 Move W8, [X19+881]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {21}
	010 Move X0, 0x665000
	011 Move X0, [X0+2416]
	012 Call 0x1C17CF4
	013 Move X0, 0x6C2000
	014 Move X0, [X0+1392]
	015 Call 0x1C17CF4
	016 Move X0, 0x68E000
	017 Move X0, [X0+2216]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+881], W8
	021 Move X0, X31
	022 Call SystemInfo.get_hdrDisplaySupportFlags
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Move W19, W31
	028 Move X8, 0x68E000
	029 Move X8, [X8+2216]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Call UniversalRenderPipeline.get_asset
	036 Compare X0, 0
	037 JumpIfEqual {84}
	038 Move W19, [X0+85]
	039 Move X20, 0x6C2000
	040 Move X20, [X20+1392]
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call HDROutputSettings.get_main
	048 Compare X0, 0
	049 JumpIfEqual {84}
	050 Move X1, X31
	051 Call HDROutputSettings.get_available, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call HDROutputSettings.get_main
	063 Compare X0, 0
	064 JumpIfEqual {84}
	065 Move X1, X31
	066 Call HDROutputSettings.get_active, X0
	067 And W20, W0, 1
	068 Move W20, W31
	069 Move X8, 0x665000
	070 Move X8, [X8+2416]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call Application.get_isMobilePlatform
	078 And W8, W20, W19
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 NotImplemented "Instruction BIC not yet implemented."
	082 Move X30, [X31+32]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Boolean HDROutputForAnyDisplayIsActive()

Disassembly:
	0x03A8B77C MOV X1, X31
	0x03A8B780 BL 0x3984C98
	0x03A8B784 TBZ X0, 0x0, 0x3A8B7F8
	0x03A8B788 ADRP X8, 0x691000
	0x03A8B78C LDR X8, [X8 + 0x8A8]
	0x03A8B790 STR X23, [X31 + 0x628]
	0x03A8B794 STR X23, [X31 + 0x460]
	0x03A8B798 LDR X0, [X8]
	0x03A8B79C LDR W8, [X0 + 0xE0]
	0x03A8B7A0 CBNZ W8, 0x3A8B7A8
	0x03A8B7A4 BL 0x1C16DFC
	0x03A8B7A8 ADD X0, X31, 0x4B0
	0x03A8B7AC ADD X1, X31, 0x460
	0x03A8B7B0 BL 0x3A8EDA0
	0x03A8B7B4 LDR X1, [X31 + 0x628]
	0x03A8B7B8 LDR X0, [X31 + 0x28]
	0x03A8B7BC MOV X2, X19
	0x03A8B7C0 MOV X3, X31
	0x03A8B7C4 BL 0x39859F8
	0x03A8B7C8 ADD X0, X31, 0x4B0
	0x03A8B7CC BL 0x3A8F13C
	0x03A8B7D0 ADRP X8, 0x6CA000
	0x03A8B7D4 LDR X8, [X8 + 0xDC8]
	0x03A8B7D8 MOV X24, X0
	0x03A8B7DC LDR X0, [X8]
	0x03A8B7E0 LDR W8, [X0 + 0xE0]
	0x03A8B7E4 CBNZ W8, 0x3A8B7EC
	0x03A8B7E8 BL 0x1C16DFC
	0x03A8B7EC MOV X0, X19
	0x03A8B7F0 MOV X1, X24
	0x03A8B7F4 BL 0x3A8F1B8
	0x03A8B7F8 ADRP X8, 0x691000
	0x03A8B7FC LDR X8, [X8 + 0x8A8]
	0x03A8B800 LDR X24, [X31 + 0x6E8]
	0x03A8B804 LDR X0, [X8]
	0x03A8B808 LDR W8, [X0 + 0xE0]
	0x03A8B80C CBNZ W8, 0x3A8B814
	0x03A8B810 BL 0x1C16DFC
	0x03A8B814 LDR W8, [X31 + 0x34]
	0x03A8B818 ADDS W31, W8, 0x1
	0x03A8B81C CSET W2, EQ
	0x03A8B820 ADD X3, X31, 0x4B0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x958000
	005 Move X19, 0x692000
	006 Move W8, [X20+882]
	007 Move X19, [X19+2216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x692000
	013 Move X0, [X0+2216]
	014 Call 0x1C17CF4
	015 Move X0, 0x6C6000
	016 Move X0, [X0+1280]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+882], W8
	020 Move X0, [X19]
	021 Move X20, 0x6C6000
	022 Move W8, [X0+224]
	023 Move X20, [X20+1280]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call UniversalRenderPipeline.HDROutputForMainDisplayIsActive
	028 Move X8, [X20]
	029 Move W19, W0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call XRSystem.get_displayActive
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call XRSystem.get_isHDRDisplayOutputActive
	048 Or W19, W19, W0
	049 And W0, W19, 1
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return X0

Method: System.Void SetHDRState(System.Collections.Generic.List`1<UnityEngine.Camera> cameras)

Disassembly:
	0x03A8B638 AND W28, W21, W22, 0x0
	0x03A8B63C ADD X21, X23, 0xD8
	0x03A8B640 ADD X8, X8, 0xD8
	0x03A8B644 STP V0, V1, [X29 + 0x250]
	0x03A8B648 STR X8, [X31 + 0x18]
	0x03A8B64C ADRP X8, 0x6CC000
	0x03A8B650 LDR X8, [X8 + 0x2E8]
	0x03A8B654 LDR X1, [X8]
	0x03A8B658 ADD X0, X31, 0x6C0
	0x03A8B65C BL 0x2BB3EF8
	0x03A8B660 TBZ X0, 0x0, 0x3A8BD1C
	0x03A8B664 LDR X23, [X31 + 0x6D8]
	0x03A8B668 CBZ X23, 0x3A8BE40
	0x03A8B66C MOV X0, X23
	0x03A8B670 MOV X1, X31
	0x03A8B674 BL 0x3984C98
	0x03A8B678 TBZ X0, 0x0, 0x3A8B6A8
	0x03A8B67C ADRP X8, 0x691000
	0x03A8B680 LDR X8, [X8 + 0x8A8]
	0x03A8B684 LDR X0, [X8]
	0x03A8B688 LDR W8, [X0 + 0xE0]
	0x03A8B68C CBNZ W8, 0x3A8B694
	0x03A8B690 BL 0x1C16DFC
	0x03A8B694 MOV X0, X19
	0x03A8B698 MOV X1, X23
	0x03A8B69C BL 0x3A8EBFC
	0x03A8B6A0 MOVZ W8, 0x1
	0x03A8B6A4 STR W8, [X31 + 0x20]
	0x03A8B6A8 LDR X0, [X27]
	0x03A8B6AC LDR W8, [X0 + 0xE0]
	0x03A8B6B0 CBNZ W8, 0x3A8B6BC
	0x03A8B6B4 BL 0x1C16DFC
	0x03A8B6B8 LDR X0, [X27]
	0x03A8B6BC LDR X8, [X0 + 0xB8]
	0x03A8B6C0 LDR X2, [X8 + 0x10]
	0x03A8B6C4 STRB W31, [X31 + 0x38]
	0x03A8B6C8 ADD X0, X31, 0x38
	0x03A8B6CC MOV X1, X31
	0x03A8B6D0 MOV X3, X31
	0x03A8B6D4 BL 0x39B1DB0
	0x03A8B6D8 LDRB W8, [X31 + 0x38]
	0x03A8B6DC LDR X0, [X31 + 0x6F8]
	0x03A8B6E0 STRB W8, [X31 + 0x468]
	0x03A8B6E4 MOV X1, X19
	0x03A8B6E8 MOV X2, X31
	0x03A8B6EC BL 0x3C546F4
	0x03A8B6F0 MOV X24, X31
	0x03A8B6F4 MOVZ W22, 0x1F
	0x03A8B6F8 ADD X0, X31, 0x468
	0x03A8B6FC MOV X1, X31
	0x03A8B700 BL 0x39B1DB4
	0x03A8B704 CBNZ X24, 0x3A8BE38
	0x03A8B708 CMP W22, 0x1F
	0x03A8B70C B.EQ 0x3A8B714
	0x03A8B710 CBNZ W22, 0x3A8BD0C
	0x03A8B714 ADRP X8, 0x691000
	0x03A8B718 LDR X8, [X8 + 0x8A8]
	0x03A8B71C LDR X24, [X31 + 0x6E8]
	0x03A8B720 LDR X0, [X8]
	0x03A8B724 LDR W8, [X0 + 0xE0]
	0x03A8B728 CBNZ W8, 0x3A8B730
	0x03A8B72C BL 0x1C16DFC
	0x03A8B730 MOV X0, X19
	0x03A8B734 MOV X1, X24
	0x03A8B738 BL 0x3A8C2C4
	0x03A8B73C LDR X1, [X31 + 0x6E8]
	0x03A8B740 ADD X3, X31, 0x4B0
	0x03A8B744 MOV X0, X19
	0x03A8B748 MOV W2, W31
	0x03A8B74C BL 0x3A8C818
	0x03A8B750 ADD X0, X31, 0x38
	0x03A8B754 ADD X1, X31, 0x4B0
	0x03A8B758 MOVZ W2, 0x210
	0x03A8B75C BL 0x3EB1AC0
	0x03A8B760 LDR W8, [X21 + 0x30]
	0x03A8B764 LDP V2, V0, [X21 + 0x10]
	0x03A8B768 LDR V1, [X21]
	0x03A8B76C STR W8, [X31 + 0x4A0]
	0x03A8B770 STP V2, V0, [X29 + 0x10]
	0x03A8B774 STR V1, [X29]
	0x03A8B778 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x958000
	005 Move X20, 0x6C6000
	006 Move W8, [X19+883]
	007 Move X20, [X20+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x6C6000
	013 Move X0, [X0+1392]
	014 Call 0x1C17CF4
	015 Move X0, 0x692000
	016 Move X0, [X0+2216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+883], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call HDROutputSettings.get_main
	027 Compare X0, 0
	028 JumpIfEqual {108}
	029 Move X1, X31
	030 Call HDROutputSettings.get_available, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {47}
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X31
	041 Call HDROutputSettings.get_main
	042 Compare X0, 0
	043 JumpIfEqual {108}
	044 Move X1, X31
	045 Call HDROutputSettings.get_active, X0
	046 Move W19, W0
	047 Move W19, W31
	048 Move X0, X31
	049 Call SystemInfo.get_hdrDisplaySupportFlags
	050 Move TEMP, X0
	051 And TEMP, TEMP, 2
	052 Compare TEMP, 2
	053 JumpIfEqual {55}
	054 Move W8, W31
	055 Move X8, 0x692000
	056 Move X8, [X8+2216]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Call UniversalRenderPipeline.get_asset
	063 Compare X0, 0
	064 JumpIfEqual {108}
	065 Move W8, [X0+85]
	066 Xor W8, W8, 1
	067 And W8, W19, W8
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {84}
	072 Move X0, [X20]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call HDROutputSettings.get_main
	079 Compare X0, 0
	080 JumpIfEqual {108}
	081 Move W1, W31
	082 Move X2, X31
	083 Call HDROutputSettings.RequestHDRModeChange, X0, X1
	084 Move TEMP, X19
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {104}
	088 Move X0, [X20]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X31
	094 Call HDROutputSettings.get_main
	095 Compare X0, 0
	096 JumpIfEqual {108}
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move W1, W31
	100 Move X2, X31
	101 Move X30, [X31+32]
	102 Call HDROutputSettings.set_automaticHDRTonemapping, X0, X1
	103 Return 
	104 Move X20, [X31+16]
	105 Move X19, [X31+24]
	106 Move X30, [X31+32]
	107 Return 
	108 Call 0x1C17F20

Method: System.Void GetHDROutputLuminanceParameters(UnityEngine.Rendering.HDROutputUtils/HDRDisplayInformation hdrDisplayInformation, UnityEngine.ColorGamut hdrDisplayColorGamut, UnityEngine.Rendering.Universal.Tonemapping tonemapping, out UnityEngine.Vector4 hdrOutputParameters)

Disassembly:
	0x03A92338 LDR X8, [X20]
	0x03A9233C LDR X8, [X8 + 0xB8]
	0x03A92340 STR X19, [X8 + 0x58]
	0x03A92344 LDR X0, [X21]
	0x03A92348 BL 0x1C16F10
	0x03A9234C ADRP X8, 0x6C5000
	0x03A92350 LDR X8, [X8 + 0x408]
	0x03A92354 MOV X2, X31
	0x03A92358 MOV X19, X0
	0x03A9235C LDR X1, [X8]
	0x03A92360 BL 0x39B19AC
	0x03A92364 LDR X8, [X20]
	0x03A92368 LDR X8, [X8 + 0xB8]
	0x03A9236C STR X19, [X8 + 0x60]
	0x03A92370 LDR X0, [X21]
	0x03A92374 BL 0x1C16F10
	0x03A92378 ADRP X8, 0x6C5000
	0x03A9237C LDR X8, [X8 + 0x400]
	0x03A92380 MOV X2, X31
	0x03A92384 MOV X19, X0
	0x03A92388 LDR X1, [X8]
	0x03A9238C BL 0x39B19AC
	0x03A92390 LDR X8, [X20]
	0x03A92394 LDP X22, X21, [X31 + 0x40]
	0x03A92398 LDP X24, X23, [X31 + 0x30]
	0x03A9239C LDP X26, X25, [X31 + 0x20]
	0x03A923A0 LDR X8, [X8 + 0xB8]
	0x03A923A4 LDP X28, X27, [X31 + 0x10]
	0x03A923A8 STR X19, [X8 + 0x68]
	0x03A923AC LDP X20, X19, [X31 + 0x50]
	0x03A923B0 LDP X29, X30, [X31], #0x60
	0x03A923B4 RET
	0x03A923B8 STP X30, X23, [X31 - 0x30]!
	0x03A923BC STP X22, X21, [X31 + 0x10]
	0x03A923C0 STP X20, X19, [X31 + 0x20]
	0x03A923C4 ADRP X23, 0x950000
	0x03A923C8 ADRP X22, 0x6BE000
	0x03A923CC ADRP X19, 0x6C5000
	0x03A923D0 ADRP X20, 0x6C5000
	0x03A923D4 ADRP X21, 0x6C5000
	0x03A923D8 LDRB W8, [X23 + 0x383]
	0x03A923DC LDR X22, [X22 + 0x598]
	0x03A923E0 LDR X19, [X19 + 0x430]
	0x03A923E4 LDR X20, [X20 + 0x368]
	0x03A923E8 LDR X21, [X21 + 0x438]
	0x03A923EC TBNZ X8, 0x0, 0x3A92428
	0x03A923F0 ADRP X0, 0x6BE000
	0x03A923F4 LDR X0, [X0 + 0x598]
	0x03A923F8 BL 0x1C16CF4
	0x03A923FC ADRP X0, 0x6C5000
	0x03A92400 LDR X0, [X0 + 0x368]
	0x03A92404 BL 0x1C16CF4
	0x03A92408 ADRP X0, 0x6C5000
	0x03A9240C LDR X0, [X0 + 0x430]
	0x03A92410 BL 0x1C16CF4
	0x03A92414 ADRP X0, 0x6C5000
	0x03A92418 LDR X0, [X0 + 0x438]
	0x03A9241C BL 0x1C16CF4
	0x03A92420 MOVZ W8, 0x1
	0x03A92424 STRB W8, [X23 + 0x383]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X3, 0
	009 JumpIfEqual {82}
	010 Move X22, X0
	011 Move X0, [X3+88]
	012 Move X20, X3
	013 Compare X0, 0
	014 JumpIfEqual {82}
	015 Move X8, [X0]
	016 Move X21, X1
	017 Move X19, X4
	018 Move X9, [X8+536]
	019 Move X1, [X8+544]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {29}
	025 Move X8, X21
	026 ShiftRight X8, 32
	027 And X8, X8, 0x7FFFFFFF
	028 Move S8, W8
	029 Move X0, [X20+96]
	030 Compare X0, 0
	031 JumpIfEqual {82}
	032 Move X8, [X0]
	033 Move X9, [X8+536]
	034 Move X1, [X8+544]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move V8, V0
	037 Move X0, [X20+104]
	038 Compare X0, 0
	039 JumpIfEqual {82}
	040 Move X8, [X0]
	041 Move X9, [X8+536]
	042 Move X1, [X8+544]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {53}
	048 Move X8, X22
	049 ShiftRight X8, 32
	050 And X8, X8, 0x7FFFFFFF
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 NotImplemented "Instruction SCVTF not yet implemented."
	053 Move X0, [X20+112]
	054 Compare X0, 0
	055 JumpIfEqual {82}
	056 Move X8, [X0]
	057 Move X9, [X8+536]
	058 Move X1, [X8+544]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X0, [X20+120]
	061 Compare X0, 0
	062 JumpIfEqual {82}
	063 Move X8, [X0]
	064 Move V9, V0
	065 Move X9, [X8+536]
	066 Move X1, [X8+544]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move S1, 1
	069 Move [X19], S9
	070 Move [X19+8], S0
	071 NotImplemented "Instruction FDIV not yet implemented."
	072 Move [X19+8], S8
	073 Move [X19+16], S0
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X30, [X31+16]
	079 Move D9, [X31+64]
	080 Move D8, [X31+72]
	081 Return 
	082 Call 0x1C17F20

Method: System.Void GetHDROutputGradingParameters(UnityEngine.Rendering.Universal.Tonemapping tonemapping, out UnityEngine.Vector4 hdrOutputParameters)

Disassembly:
	0x03A92428 LDR X0, [X22]
	0x03A9242C BL 0x1C16F10
	0x03A92430 LDR X1, [X19]
	0x03A92434 MOV X2, X31
	0x03A92438 MOV X19, X0
	0x03A9243C BL 0x39B19AC
	0x03A92440 LDR X8, [X20]
	0x03A92444 LDR X8, [X8 + 0xB8]
	0x03A92448 STR X19, [X8]
	0x03A9244C LDR X0, [X22]
	0x03A92450 BL 0x1C16F10
	0x03A92454 LDR X1, [X21]
	0x03A92458 MOV X2, X31
	0x03A9245C MOV X19, X0
	0x03A92460 BL 0x39B19AC
	0x03A92464 LDR X8, [X20]
	0x03A92468 LDP X22, X21, [X31 + 0x10]
	0x03A9246C LDR X8, [X8 + 0xB8]
	0x03A92470 STR X19, [X8 + 0x8]
	0x03A92474 LDP X20, X19, [X31 + 0x20]
	0x03A92478 LDP X30, X23, [X31], #0x30
	0x03A9247C RET
	0x03A92480 STR X30, [X31 - 0x30]!
	0x03A92484 STP X22, X21, [X31 + 0x10]
	0x03A92488 STP X20, X19, [X31 + 0x20]
	0x03A9248C ADRP X21, 0x950000
	0x03A92490 ADRP X22, 0x6BE000
	0x03A92494 ADRP X19, 0x6C5000
	0x03A92498 ADRP X20, 0x6C5000
	0x03A9249C LDRB W8, [X21 + 0x384]
	0x03A924A0 LDR X22, [X22 + 0x598]
	0x03A924A4 LDR X19, [X19 + 0x440]
	0x03A924A8 LDR X20, [X20 + 0x358]
	0x03A924AC TBNZ X8, 0x0, 0x3A924DC
	0x03A924B0 ADRP X0, 0x6C5000
	0x03A924B4 LDR X0, [X0 + 0x358]
	0x03A924B8 BL 0x1C16CF4
	0x03A924BC ADRP X0, 0x6BE000
	0x03A924C0 LDR X0, [X0 + 0x598]
	0x03A924C4 BL 0x1C16CF4
	0x03A924C8 ADRP X0, 0x6C5000
	0x03A924CC LDR X0, [X0 + 0x440]
	0x03A924D0 BL 0x1C16CF4
	0x03A924D4 MOVZ W8, 0x1
	0x03A924D8 STRB W8, [X21 + 0x384]
	0x03A924DC LDR X0, [X22]
	0x03A924E0 BL 0x1C16F10
	0x03A924E4 LDR X1, [X19]
	0x03A924E8 MOV X2, X31
	0x03A924EC MOV X19, X0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {54}
	007 Move X20, X0
	008 Move X0, [X0+56]
	009 Compare X0, 0
	010 JumpIfEqual {54}
	011 Move X8, [X0]
	012 Move X19, X1
	013 Move X9, [X8+536]
	014 Move X1, [X8+544]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move S8, W31
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X20+64]
	020 Compare X0, 0
	021 JumpIfEqual {54}
	022 Move X8, [X0]
	023 Move X9, [X8+536]
	024 Move X1, [X8+544]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20+80]
	027 Compare X8, 0
	028 JumpIfEqual {54}
	029 Move X9, [X8]
	030 Move W20, W0
	031 Move X0, X8
	032 Move X10, [X9+536]
	033 Move X1, [X9+544]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move V8, V0
	036 Move X0, [X20+72]
	037 Compare X0, 0
	038 JumpIfEqual {54}
	039 Move X8, [X0]
	040 Move X9, [X8+536]
	041 Move X1, [X8+544]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W20, W0
	044 Move W20, W31
	045 NotImplemented "Instruction SCVTF not yet implemented."
	046 Move [X19], S0
	047 Move [X19+8], S8
	048 Move [X19+8], X31
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+8]
	052 Move V8, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Boolean IsGameCamera(UnityEngine.Camera camera)

Disassembly:
	0x03A8BC50 BL 0x3EB1AD0
	0x03A8BC54 LDR X25, [X0]
	0x03A8BC58 BL 0x3EB1AE0
	0x03A8BC5C MOV W22, W31
	0x03A8BC60 B 0x3A8BC0C
	0x03A8BC64 CMP W1, 0x1
	0x03A8BC68 STP X0, X1, [X31 + 0x8]
	0x03A8BC6C B.NE 0x3A8BEE0
	0x03A8BC70 LDR X0, [X31 + 0x8]
	0x03A8BC74 BL 0x3EB1AD0
	0x03A8BC78 LDR X26, [X0]
	0x03A8BC7C BL 0x3EB1AE0
	0x03A8BC80 MOV W22, W31
	0x03A8BC84 B 0x3A8BB34
	0x03A8BC88 LDR X0, [X31 + 0x628]
	0x03A8BC8C CBZ X0, 0x3A8BE54
	0x03A8BC90 MOV X1, X31
	0x03A8BC94 BL 0x3984C98
	0x03A8BC98 ADD X29, X31, 0x470
	0x03A8BC9C TBZ X0, 0x0, 0x3A8B64C
	0x03A8BCA0 LDR W8, [X31 + 0x4A0]
	0x03A8BCA4 LDP V1, V0, [X29 + 0x10]
	0x03A8BCA8 LDR V2, [X29]
	0x03A8BCAC LDR X9, [X31 + 0x18]
	0x03A8BCB0 STR W8, [X9 + 0x30]
	0x03A8BCB4 STP V1, V0, [X9 + 0x10]
	0x03A8BCB8 STR V2, [X9]
	0x03A8BCBC B 0x3A8B64C
	0x03A8BCC0 CMP W1, 0x1
	0x03A8BCC4 MOV X26, X0
	0x03A8BCC8 B.NE 0x3A8BF70
	0x03A8BCCC MOV X0, X26
	0x03A8BCD0 BL 0x3EB1AD0
	0x03A8BCD4 LDR X24, [X0]
	0x03A8BCD8 BL 0x3EB1AE0
	0x03A8BCDC MOV W22, W31
	0x03A8BCE0 B 0x3A8B99C
	0x03A8BCE4 CMP W1, 0x1
	0x03A8BCE8 MOV X26, X0
	0x03A8BCEC B.NE 0x3A8BF40
	0x03A8BCF0 MOV X0, X26
	0x03A8BCF4 BL 0x3EB1AD0
	0x03A8BCF8 LDR X24, [X0]
	0x03A8BCFC BL 0x3EB1AE0
	0x03A8BD00 MOV W22, W31
	0x03A8BD04 ADD X29, X31, 0x470
	0x03A8BD08 B 0x3A8B6F8
	0x03A8BD0C ADRP X27, 0x6C5000
	0x03A8BD10 LDR X27, [X27 + 0x500]
	0x03A8BD14 MOV X23, X31
	0x03A8BD18 B 0x3A8BD2C
	0x03A8BD1C ADRP X27, 0x6C5000
	0x03A8BD20 LDR X27, [X27 + 0x500]
	0x03A8BD24 MOV X23, X31
	0x03A8BD28 MOVZ W22, 0x2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x958000
	006 Move X21, 0x669000
	007 Move W8, [X20+884]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x669000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+884], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call Object.op_Equality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {48}
	032 Compare X19, 0
	033 JumpIfEqual {66}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Camera.get_cameraType, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Move X1, X31
	040 Call Camera.get_cameraType, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0
	048 Move X0, 0x66E000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x6CD000
	054 Move X0, [X0+720]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, 0x6CD000
	061 Move X0, [X0+728]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC
	066 Call 0x1C17F20

Method: System.Boolean IsStereoEnabled(UnityEngine.Camera camera)

Disassembly:
	0x03A924F0 BL 0x39B19AC
	0x03A924F4 LDR X8, [X20]
	0x03A924F8 LDP X22, X21, [X31 + 0x10]
	0x03A924FC LDR X8, [X8 + 0xB8]
	0x03A92500 STR X19, [X8]
	0x03A92504 LDP X20, X19, [X31 + 0x20]
	0x03A92508 LDR X30, [X31], #0x30
	0x03A9250C RET
	0x03A92510 MOVN W8, 0x0
	0x03A92514 MOV X1, X31
	0x03A92518 STR W8, [X0 + 0x1C]
	0x03A9251C B 0x33BDD8C
	0x03A92520 STR X30, [X31 - 0x20]!
	0x03A92524 STP X20, X19, [X31 + 0x10]
	0x03A92528 ADRP X19, 0x950000
	0x03A9252C ADRP X20, 0x6C5000
	0x03A92530 LDRB W8, [X19 + 0x385]
	0x03A92534 LDR X20, [X20 + 0x288]
	0x03A92538 TBNZ X8, 0x0, 0x3A92550
	0x03A9253C ADRP X0, 0x6C5000
	0x03A92540 LDR X0, [X0 + 0x288]
	0x03A92544 BL 0x1C16CF4
	0x03A92548 MOVZ W8, 0x1
	0x03A9254C STRB W8, [X19 + 0x385]
	0x03A92550 LDR X0, [X20]
	0x03A92554 BL 0x1C16F10
	0x03A92558 MOV X1, X31
	0x03A9255C MOV X19, X0
	0x03A92560 BL 0x33BDD8C
	0x03A92564 LDR X8, [X20]
	0x03A92568 LDR X8, [X8 + 0xB8]
	0x03A9256C STR X19, [X8]
	0x03A92570 LDP X20, X19, [X31 + 0x10]
	0x03A92574 LDR X30, [X31], #0x20
	0x03A92578 RET
	0x03A9257C MOV X1, X31
	0x03A92580 B 0x33BDD8C
	0x03A92584 STR D8, [X31 - 0x20]!
	0x03A92588 STP X30, X19, [X31 + 0x10]
	0x03A9258C CBZ X1, 0x3A925E8
	0x03A92590 MOV X0, X1
	0x03A92594 MOV X1, X31
	0x03A92598 MOV X19, X2
	0x03A9259C BL 0x3C039A0
	0x03A925A0 CBZ X19, 0x3A925E8
	0x03A925A4 MOV X0, X19
	0x03A925A8 MOV X1, X31
	0x03A925AC MOV V8.16B, V0.16B
	0x03A925B0 BL 0x3C039A0
	0x03A925B4 MOVZ W9, 0x7F800000
	0x03A925B8 FMOV S1, W9
	0x03A925BC FCVTZS W8, S8
	0x03A925C0 MOVZ W10, 0x80000000
	0x03A925C4 FCMP S8, S1
	0x03A925C8 LDP X30, X19, [X31 + 0x10]
	0x03A925CC FCVTZS W11, S0
	0x03A925D0 CSEL W8, W10, W8, EQ
	0x03A925D4 FCMP S0, S1
	0x03A925D8 CSEL W9, W10, W11, EQ
	0x03A925DC SUB W0, W8, W9
	0x03A925E0 LDR V8, [X31], #0x20
	0x03A925E4 RET
	0x03A925E8 BL 0x1C16F20
	0x03A925EC SUB X31, X31, 0x1C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x951000
	006 Move X21, 0x662000
	007 Move W8, [X20+885]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x662000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x68B000
	018 Move X0, [X0+2216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+885], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X8, 0x68B000
	036 Move X8, [X8+2216]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Call UniversalRenderPipeline.IsGameCamera, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Compare X19, 0
	049 JumpIfEqual {79}
	050 Move X0, X19
	051 Move X1, X31
	052 Call Camera.get_stereoTargetEye, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move W0, W31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0
	061 Move X0, 0x667000
	062 Move X0, [X0+1320]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x6C6000
	067 Move X0, [X0+720]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentNullException..ctor, X0, X1
	073 Move X0, 0x6C6000
	074 Move X0, [X0+920]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC
	079 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset get_asset()

Disassembly:
	0x03A8BB60 LDR W8, [X0 + 0xE0]
	0x03A8BB64 CBNZ W8, 0x3A8BB6C
	0x03A8BB68 BL 0x1C16DFC
	0x03A8BB6C MOV X0, X25
	0x03A8BB70 MOV X1, X26
	0x03A8BB74 BL 0x3A8C2C4
	0x03A8BB78 LDR W8, [X31 + 0x34]
	0x03A8BB7C LDR X1, [X31 + 0x458]
	0x03A8BB80 CMP W8, W24
	0x03A8BB84 CSET W2, EQ
	0x03A8BB88 ADD X3, X31, 0x248
	0x03A8BB8C MOV X0, X25
	0x03A8BB90 BL 0x3A8CC64
	0x03A8BB94 LDR X1, [X31 + 0x3C0]
	0x03A8BB98 STRB W28, [X31 + 0x3D1]
	0x03A8BB9C STRB W29, [X31 + 0x3BB]
	0x03A8BBA0 LDR X0, [X31 + 0x28]
	0x03A8BBA4 MOV X2, X25
	0x03A8BBA8 MOV X3, X31
	0x03A8BBAC BL 0x39859F8
	0x03A8BBB0 LDR X0, [X31 + 0x6F8]
	0x03A8BBB4 ADD X1, X31, 0x248
	0x03A8BBB8 BL 0x3A8D3B8
	0x03A8BBBC LDR X0, [X27]
	0x03A8BBC0 LDR W8, [X0 + 0xE0]
	0x03A8BBC4 CBNZ W8, 0x3A8BBD0
	0x03A8BBC8 BL 0x1C16DFC
	0x03A8BBCC LDR X0, [X27]
	0x03A8BBD0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x958000
	004 Move W8, [X19+886]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x66F000
	010 Move X0, [X0+1736]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+886], W8
	014 Move X0, X31
	015 Call GraphicsSettings.get_currentRenderPipeline
	016 Compare X0, 0
	017 JumpIfEqual {31}
	018 Move X8, 0x66F000
	019 Move X8, [X8+1736]
	020 Move X9, [X0]
	021 Move X8, [X8]
	022 Move W11, [X9+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X31
	026 Move X9, [X9+200]
	027 Add X9, X9, X10
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0

Method: System.Void SortCameras(System.Collections.Generic.List`1<UnityEngine.Camera> cameras)

Disassembly:
	0x03A8BBD4 LDR X2, [X8 + 0x18]
	0x03A8BBD8 STRB W31, [X31 + 0x38]
	0x03A8BBDC ADD X0, X31, 0x38
	0x03A8BBE0 MOV X1, X31
	0x03A8BBE4 MOV X3, X31
	0x03A8BBE8 BL 0x39B1DB0
	0x03A8BBEC LDRB W8, [X31 + 0x38]
	0x03A8BBF0 LDR X0, [X31 + 0x6F8]
	0x03A8BBF4 STRB W8, [X31 + 0x468]
	0x03A8BBF8 MOV X1, X25
	0x03A8BBFC MOV X2, X31
	0x03A8BC00 BL 0x3C54940
	0x03A8BC04 MOV X25, X31
	0x03A8BC08 MOVZ W22, 0x2A
	0x03A8BC0C ADD X0, X31, 0x468
	0x03A8BC10 MOV X1, X31
	0x03A8BC14 BL 0x39B1DB4
	0x03A8BC18 CBNZ X25, 0x3A8BE30
	0x03A8BC1C CMP W22, 0x2A
	0x03A8BC20 B.EQ 0x3A8BC28
	0x03A8BC24 CBNZ W22, 0x3A8BD0C
	0x03A8BC28 LDR W8, [X20 + 0x18]
	0x03A8BC2C ADD W24, W24, 0x1
	0x03A8BC30 CMP W24, W8
	0x03A8BC34 B.LT 0x3A8BA1C
	0x03A8BC38 B 0x3A8BC88
	0x03A8BC3C CMP W1, 0x1
	0x03A8BC40 MOV X26, X0
	0x03A8BC44 STR X1, [X31 + 0x10]
	0x03A8BC48 B.NE 0x3A8BF08
	0x03A8BC4C MOV X0, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x958000
	006 Move W8, [X21+887]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x6CD000
	014 Move X0, [X0+712]
	015 Call 0x1C17CF4
	016 Move X0, 0x6CC000
	017 Move X0, [X0+3880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+887], W8
	021 Compare X19, 0
	022 JumpIfEqual {41}
	023 Move W8, [X19+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Move X8, 0x6CD000
	031 Move X1, [X20+56]
	032 Move X8, [X8+712]
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X2, [X8]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call List`1<Object>.Sort, X0, X1
	040 Return 
	041 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.GraphicsFormat MakeRenderTextureGraphicsFormat(System.Boolean isHdrEnabled, UnityEngine.Rendering.Universal.HDRColorBufferPrecision requestHDRColorBufferPrecision, System.Boolean needsAlpha)

Disassembly:
	0x03A9225C MOV X19, X0
	0x03A92260 BL 0x39B19AC
	0x03A92264 LDR X8, [X20]
	0x03A92268 LDR X8, [X8 + 0xB8]
	0x03A9226C STR X19, [X8 + 0x30]
	0x03A92270 LDR X0, [X21]
	0x03A92274 BL 0x1C16F10
	0x03A92278 LDR X1, [X28]
	0x03A9227C MOV X2, X31
	0x03A92280 MOV X19, X0
	0x03A92284 BL 0x39B19AC
	0x03A92288 LDR X8, [X20]
	0x03A9228C LDR X8, [X8 + 0xB8]
	0x03A92290 STR X19, [X8 + 0x38]
	0x03A92294 LDR X0, [X21]
	0x03A92298 BL 0x1C16F10
	0x03A9229C ADRP X8, 0x6C5000
	0x03A922A0 LDR X8, [X8 + 0x428]
	0x03A922A4 MOV X2, X31
	0x03A922A8 MOV X19, X0
	0x03A922AC LDR X1, [X8]
	0x03A922B0 BL 0x39B19AC
	0x03A922B4 LDR X8, [X20]
	0x03A922B8 LDR X8, [X8 + 0xB8]
	0x03A922BC STR X19, [X8 + 0x40]
	0x03A922C0 LDR X0, [X21]
	0x03A922C4 BL 0x1C16F10
	0x03A922C8 ADRP X8, 0x6C5000
	0x03A922CC LDR X8, [X8 + 0x420]
	0x03A922D0 MOV X2, X31
	0x03A922D4 MOV X19, X0
	0x03A922D8 LDR X1, [X8]
	0x03A922DC BL 0x39B19AC
	0x03A922E0 LDR X8, [X20]
	0x03A922E4 LDR X8, [X8 + 0xB8]
	0x03A922E8 STR X19, [X8 + 0x48]
	0x03A922EC LDR X0, [X21]
	0x03A922F0 BL 0x1C16F10
	0x03A922F4 ADRP X8, 0x6C5000
	0x03A922F8 LDR X8, [X8 + 0x418]
	0x03A922FC MOV X2, X31
	0x03A92300 MOV X19, X0
	0x03A92304 LDR X1, [X8]
	0x03A92308 BL 0x39B19AC
	0x03A9230C LDR X8, [X20]
	0x03A92310 LDR X8, [X8 + 0xB8]
	0x03A92314 STR X19, [X8 + 0x50]
	0x03A92318 LDR X0, [X21]
	0x03A9231C BL 0x1C16F10
	0x03A92320 ADRP X8, 0x6C5000
	0x03A92324 LDR X8, [X8 + 0x410]
	0x03A92328 MOV X2, X31
	0x03A9232C MOV X19, X0
	0x03A92330 LDR X1, [X8]
	0x03A92334 BL 0x39B19AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x951000
	007 Move W8, [X22+888]
	008 Move W19, W2
	009 Move W20, W1
	010 Move W21, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6C3000
	016 Move X0, [X0+16]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+888], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {68}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move TEMP, X19
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {45}
	029 Move X8, 0x6C3000
	030 Move X8, [X8+16]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, 74
	037 Move W1, 5
	038 Move X2, X31
	039 Move W19, 74
	040 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {61}
	045 Move X8, 0x6C3000
	046 Move X8, [X8+16]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move W0, 48
	053 Move W1, 5
	054 Move X2, X31
	055 Move W19, 48
	056 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {69}
	061 Move W0, W19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Move W0, W31
	069 Move W0, 1
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+48]
	076 Call SystemInfo.GetGraphicsFormat, X0
	077 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat MakeUnormRenderTextureGraphicsFormat()

Disassembly:
	0x03A925F0 STR D8, [X31 + 0x170]
	0x03A925F4 STR X29, [X31 + 0x178]
	0x03A925F8 STP X30, X25, [X31 + 0x180]
	0x03A925FC STP X24, X23, [X31 + 0x190]
	0x03A92600 STP X22, X21, [X31 + 0x1A0]
	0x03A92604 STP X20, X19, [X31 + 0x1B0]
	0x03A92608 ADRP X22, 0x950000
	0x03A9260C ADRP X21, 0x6C5000
	0x03A92610 LDRB W8, [X22 + 0x386]
	0x03A92614 LDR X21, [X21 + 0x220]
	0x03A92618 MOV X19, X2
	0x03A9261C MOV X20, X1
	0x03A92620 TBNZ X8, 0x0, 0x3A92638
	0x03A92624 ADRP X0, 0x6C5000
	0x03A92628 LDR X0, [X0 + 0x220]
	0x03A9262C BL 0x1C16CF4
	0x03A92630 MOVZ W8, 0x1
	0x03A92634 STRB W8, [X22 + 0x386]
	0x03A92638 LDR X0, [X21]
	0x03A9263C MOVI V0.2D, 0x0
	0x03A92640 STR W31, [X31 + 0x100]
	0x03A92644 STR X31, [X31 + 0x50]
	0x03A92648 STP V0, V0, [X31 + 0xE0]
	0x03A9264C STP V0, V0, [X31 + 0xC0]
	0x03A92650 STP V0, V0, [X31 + 0xA0]
	0x03A92654 STP V0, V0, [X31 + 0x80]
	0x03A92658 STP V0, V0, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x951000
	005 Move X20, 0x6C3000
	006 Move W8, [X19+889]
	007 Move X20, [X20+16]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C3000
	013 Move X0, [X0+16]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+889], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move W0, 75
	023 Move W1, 5
	024 Move X2, X31
	025 Move W19, 75
	026 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	027 And W31, W0, 1
	028 Move W8, 8
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0

Method: UnityEngine.RenderTextureDescriptor CreateRenderTextureDescriptor(UnityEngine.Camera camera, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean isHdrEnabled, UnityEngine.Rendering.Universal.HDRColorBufferPrecision requestHDRColorBufferPrecision, System.Int32 msaaSamples, System.Boolean needsAlpha, System.Boolean requiresOpaqueTexture)

Disassembly:
	0x03A90B1C LDR X0, [X29]
	0x03A90B20 CBZ X20, 0x3A90DDC
	0x03A90B24 LDR X8, [X0 + 0xB8]
	0x03A90B28 LDR X27, [X8 + 0x78]
	0x03A90B2C MOV X0, X20
	0x03A90B30 MOV W1, W28
	0x03A90B34 MOV X2, X31
	0x03A90B38 BL 0x3A2C614
	0x03A90B3C MOV W1, W0
	0x03A90B40 CBZ X27, 0x3A90DD8
	0x03A90B44 LDR W10, [X27 + 0x1C]
	0x03A90B48 LDR X8, [X27 + 0x10]
	0x03A90B4C LDR X9, [X23]
	0x03A90B50 ADD W10, W10, 0x1
	0x03A90B54 STR W10, [X27 + 0x1C]
	0x03A90B58 CBZ X8, 0x3A90DD4
	0x03A90B5C LDRSW X10, [X27 + 0x18]
	0x03A90B60 LDR W11, [X8 + 0x18]
	0x03A90B64 CMP W10, W11
	0x03A90B68 B.CS 0x3A90BBC
	0x03A90B6C ADD W9, W10, 0x1
	0x03A90B70 ADD X8, X8, X10, 0x2, LSL
	0x03A90B74 STR W9, [X27 + 0x18]
	0x03A90B78 STR W1, [X8 + 0x20]
	0x03A90B7C B 0x3A90BD0
	0x03A90B80 LDR X8, [X9 + 0x20]
	0x03A90B84 LDR X8, [X8 + 0xC0]
	0x03A90B88 LDR X2, [X8 + 0x70]
	0x03A90B8C MOV X0, X28
	0x03A90B90 BL 0x2FDC70C
	0x03A90B94 B 0x3A90BD0
	0x03A90B98 LDR X8, [X8 + 0x20]
	0x03A90B9C LDR X8, [X8 + 0xC0]
	0x03A90BA0 LDR X1, [X8 + 0x70]
	0x03A90BA4 FMOV S2, W31
	0x03A90BA8 FMOV S3, W31
	0x03A90BAC MOV X0, X28
	0x03A90BB0 MOV V0.16B, V8.16B
	0x03A90BB4 BL 0x30CEE24
	0x03A90BB8 B 0x3A9089C
	0x03A90BBC LDR X8, [X9 + 0x20]
	0x03A90BC0 LDR X8, [X8 + 0xC0]
	0x03A90BC4 LDR X2, [X8 + 0x70]
	0x03A90BC8 MOV X0, X27
	0x03A90BCC BL 0x2FDC70C
	0x03A90BD0 ADD W26, W26, 0x1
	0x03A90BD4 CMP W24, W26
	0x03A90BD8 B.NE 0x3A90764
	0x03A90BDC LDR X0, [X29]
	0x03A90BE0 LDP W26, W23, [X31]
	0x03A90BE4 LDR W8, [X0 + 0xE0]
	0x03A90BE8 CBNZ W8, 0x3A90BF4
	0x03A90BEC BL 0x1C16DFC
	0x03A90BF0 LDR X0, [X29]
	0x03A90BF4 LDR X8, [X0 + 0xB8]
	0x03A90BF8 LDR X9, [X8 + 0x70]
	0x03A90BFC STR X9, [X19 + 0x38]
	0x03A90C00 LDR X8, [X8 + 0x78]
	0x03A90C04 STR X8, [X19 + 0x40]
	0x03A90C08 CBZ X20, 0x3A90DEC
	0x03A90C0C LDRB W8, [X20 + 0x80]
	0x03A90C10 CBZ W8, 0x3A90C20
	0x03A90C14 LDR W8, [X20 + 0x7C]
	0x03A90C18 CMP W8, 0x1
	0x03A90C1C CSET W8, EQ
	0x03A90C20 STRB W8, [X19 + 0x1]
	0x03A90C24 MOV X0, X31
	0x03A90C28 BL 0x3C3BC5C
	0x03A90C2C TBZ X0, 0x0, 0x3A90C38
	0x03A90C30 LDRB W8, [X19 + 0x1]
	0x03A90C34 B 0x3A90C3C
	0x03A90C38 MOV W8, W31
	0x03A90C3C LDR W9, [X31 + 0x1C]
	0x03A90C40 STRB W31, [X19 + 0x2]
	0x03A90C44 AND W8, W9, W8, 0x0
	0x03A90C48 AND W8, W8, 0x1
	0x03A90C4C STRB W8, [X19]
	0x03A90C50 MOV X0, X31
	0x03A90C54 BL 0x3C3BACC
	0x03A90C58 CMP W0, 0x8
	0x03A90C5C B.NE 0x3A90CC0
	0x03A90C60 MOVZ W8, 0x1
	0x03A90C64 STR W8, [X19 + 0xC]
	0x03A90C68 LDR W8, [X20 + 0x84]
	0x03A90C6C FMOV S2, W31
	0x03A90C70 FMOV S1, 1
	0x03A90C74 FMOV S0, W31
	0x03A90C78 STP W8, W8, [X19 + 0x4]
	0x03A90C7C STP S1, S2, [X19 + 0x10]
	0x03A90C80 STR S0, [X19 + 0x18]
	0x03A90C84 LDR V0, [X20 + 0xC8]
	0x03A90C88 STR S0, [X19 + 0x1C]
	0x03A90C8C LDRB W8, [X20 + 0x90]
	0x03A90C90 CBZ W8, 0x3A90CA8
	0x03A90C94 LDR W8, [X20 + 0x88]
	0x03A90C98 CMP W8, 0x1
	0x03A90C9C CSET W8, EQ
	0x03A90CA0 ORR W8, W8, W26, 0x0
	0x03A90CA4 AND W8, W8, 0x1
	0x03A90CA8 STRB W8, [X19 + 0x21]
	0x03A90CAC MOV X0, X31
	0x03A90CB0 BL 0x3C3BC5C
	0x03A90CB4 TBZ X0, 0x0, 0x3A90CF8
	0x03A90CB8 LDRB W8, [X19 + 0x21]
	0x03A90CBC B 0x3A90CFC
	0x03A90CC0 LDR W8, [X20 + 0xAC]
	0x03A90CC4 FMOV S0, W31
	0x03A90CC8 STR W8, [X19 + 0xC]
	0x03A90CCC LDR W9, [X20 + 0x84]
	0x03A90CD0 CMP W8, 0x1
	0x03A90CD4 STP W9, W9, [X19 + 0x4]
	0x03A90CD8 B.EQ 0x3A90D78
	0x03A90CDC CMP W8, 0x3
	0x03A90CE0 B.EQ 0x3A90D70
	0x03A90CE4 CMP W8, 0x2
	0x03A90CE8 B.NE 0x3A90D84
	0x03A90CEC LDR V1, [X20 + 0xB0]
	0x03A90CF0 FMOV S2, 1
	0x03A90CF4 B 0x3A90C7C
	0x03A90CF8 MOV W8, W31
	0x03A90CFC AND W8, W23, W8, 0x0
	0x03A90D00 AND W8, W8, 0x1
	0x03A90D04 STRB W8, [X19 + 0x20]
	0x03A90D08 LDR W9, [X20 + 0x94]
	0x03A90D0C STP W9, W9, [X19 + 0x24]
	0x03A90D10 LDRB W9, [X20 + 0xD4]
	0x03A90D14 CBZ W9, 0x3A90D2C
	0x03A90D18 LDRB W9, [X19]
	0x03A90D1C ORR W8, W9, W8, 0x0
	0x03A90D20 CMP W8, 0x0
	0x03A90D24 CSET W8, NE
	0x03A90D28 B 0x3A90D30
	0x03A90D2C MOV W8, W31
	0x03A90D30 STRB W8, [X19 + 0x2C]
	0x03A90D34 MOVZ W8, 0x10
	0x03A90D38 ADD X0, X31, 0x18
	0x03A90D3C MOV X1, X31
	0x03A90D40 STR W8, [X19 + 0x30]
	0x03A90D44 STRH W31, [X19 + 0x48]
	0x03A90D48 BL 0x39B1DB4
	0x03A90D4C LDP X20, X19, [X31 + 0x70]
	0x03A90D50 LDP X22, X21, [X31 + 0x60]
	0x03A90D54 LDP X24, X23, [X31 + 0x50]
	0x03A90D58 LDP X26, X25, [X31 + 0x40]
	0x03A90D5C LDP X28, X27, [X31 + 0x30]
	0x03A90D60 LDP X29, X30, [X31 + 0x20]
	0x03A90D64 LDR V8, [X31 + 0x10]
	0x03A90D68 ADD X31, X31, 0x80
	0x03A90D6C RET
	0x03A90D70 LDP S1, S2, [X20 + 0xB4]
	0x03A90D74 B 0x3A90C7C
	0x03A90D78 FMOV S1, 1
	0x03A90D7C FMOV S2, W31
	0x03A90D80 B 0x3A90C7C
	0x03A90D84 LDP S1, S2, [X20 + 0xBC]
	0x03A90D88 LDR V0, [X20 + 0xC4]
	0x03A90D8C B 0x3A90C7C
	0x03A90D90 BL 0x1C16F20
	0x03A90D94 BL 0x1C16F20
	0x03A90D98 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+192], X26
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move X26, 0x953000
	012 Move W9, [X26+890]
	013 Move W25, W5
	014 Move W21, W4
	015 Move W24, W3
	016 Move W22, W2
	017 Move X23, X1
	018 Move X20, X0
	019 Move X19, X8
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x664000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x68D000
	028 Move X0, [X0+2216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+890], W8
	032 NotImplemented "Instruction MOVI not yet implemented."
	033 Move [X31+160], W31
	034 Move [X31+128], V0
	035 Move [X31+136], V0
	036 Move [X31+7], V0
	037 Compare X20, 0
	038 JumpIfEqual {188}
	039 Move X26, 0x664000
	040 Move X26, [X26+1432]
	041 Move X0, X20
	042 Move X1, X31
	043 Call Camera.get_targetTexture, X0
	044 Move X8, [X26]
	045 Move X26, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X26
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {96}
	059 Move X0, X23
	060 Call CameraData.get_scaledWidth, X0
	061 Move W26, W0
	062 Move X0, X23
	063 Call CameraData.get_scaledHeight, X0
	064 Move W2, W0
	065 Add X0, X31, 112
	066 Move W1, W26
	067 Move X3, X31
	068 Call RenderTextureDescriptor..ctor, X0, X1, X2
	069 Move X8, 0x68D000
	070 Move X8, [X8+2216]
	071 Move X0, [X8]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 And W0, W22, 1
	077 And W2, W25, 1
	078 Move W1, W24
	079 Call UniversalRenderPipeline.MakeRenderTextureGraphicsFormat, X0, X1, X2
	080 Move W1, W0
	081 Add X0, X31, 112
	082 Move X2, X31
	083 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	084 Add X0, X31, 112
	085 Move W1, 32
	086 Move X2, X31
	087 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	088 Move X0, X31
	089 Move [X31+120], W21
	090 Call QualitySettings.get_activeColorSpace
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Add X0, X31, 112
	094 Move X2, X31
	095 Call RenderTextureDescriptor.set_sRGB, X0, X1
	096 Move X0, X20
	097 Move X1, X31
	098 Call Camera.get_targetTexture, X0
	099 Compare X0, 0
	100 JumpIfEqual {188}
	101 Add X8, X31, 56
	102 Move X1, X31
	103 Call RenderTexture.get_descriptor, X0
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Move W8, [X31+104]
	108 Move X0, X23
	109 Move [X31+112], V0
	110 Move [X31+120], V1
	111 Move [X31+9], V2
	112 Move [X31+160], W8
	113 Move [X31+120], W21
	114 Call CameraData.get_scaledWidth, X0
	115 Move [X31+112], W0
	116 Move X0, X23
	117 Call CameraData.get_scaledHeight, X0
	118 Move [X31+116], W0
	119 Move X0, X20
	120 Move X1, X31
	121 Call Camera.get_cameraType, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move TEMP, X22
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {134}
	127 Move W0, W31
	128 Move X1, X31
	129 Call SystemInfo.GetGraphicsFormat, X0
	130 Move W1, W0
	131 Add X0, X31, 112
	132 Move X2, X31
	133 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	134 Add X0, X31, 112
	135 Move W1, W31
	136 Move X2, X31
	137 Call RenderTextureDescriptor.set_enableRandomWrite, X0, X1
	138 Add X0, X31, 112
	139 Move W1, W31
	140 Move X2, X31
	141 Call RenderTextureDescriptor.set_bindMS, X0, X1
	142 Move X0, X20
	143 Move X1, X31
	144 Call Camera.get_allowDynamicResolution, X0
	145 And W1, W0, 1
	146 Add X0, X31, 112
	147 Move X2, X31
	148 Call RenderTextureDescriptor.set_useDynamicScale, X0, X1
	149 Move V0, [X31+112]
	150 Move V1, [X31+128]
	151 Move V2, [X31+9]
	152 Move W8, [X31+160]
	153 Add X0, X31, 0
	154 Move X1, X31
	155 Move [X31], V0
	156 Move [X31+8], V1
	157 Move [X31+2], V2
	158 Move [X31+48], W8
	159 Call SystemInfo.GetRenderTextureSupportedMSAASampleCount, X0
	160 Move [X31+120], W0
	161 Move X0, X31
	162 Call SystemInfo.get_supportsStoreAndResolveAction
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {169}
	167 Move W8, 1
	168 Move [X31+120], W8
	169 Move W8, [X31+160]
	170 Move V1, [X31+128]
	171 Move V0, [X31+144]
	172 Move V2, [X31+7]
	173 Move X22, [X31+224]
	174 Move X21, [X31+232]
	175 Move [X19+48], W8
	176 Move [X19+16], V1
	177 Move [X19+24], V0
	178 Move [X19], V2
	179 Move X20, [X31+240]
	180 Move X19, [X31+248]
	181 Move X24, [X31+208]
	182 Move X23, [X31+216]
	183 Move X26, [X31+192]
	184 Move X25, [X31+200]
	185 Move X30, [X31+176]
	186 Add X31, X31, 256
	187 Return X0
	188 Call 0x1C17F20

Method: System.Void GetLightAttenuationAndSpotDirection(UnityEngine.LightType lightType, System.Single lightRange, UnityEngine.Matrix4x4 lightLocalToWorldMatrix, System.Single spotAngle, System.Nullable`1<System.Single> innerSpotAngle, out UnityEngine.Vector4 lightAttenuation, out UnityEngine.Vector4 lightSpotDir)

Disassembly:
	0x03A926FC BL 0x3C1668C
	0x03A92700 CMP W0, 0x4
	0x03A92704 B.HI 0x3A9271C
	0x03A92708 MOV W8, W0
	0x03A9270C ADR X9, 0x10
	0x03A92710 LDRB W10, [X23, X8, LSL]
	0x03A92714 ADD X9, X9, X10, 0x2, LSL
	0x03A92718 BR X9
	0x03A9271C MOV X0, X21
	0x03A92720 MOV X1, X31
	0x03A92724 BL 0x3C385F8
	0x03A92728 MOV W1, W0
	0x03A9272C ADD X0, X31, 0x110
	0x03A92730 MOV X2, X31
	0x03A92734 BL 0x3C5FD0C
	0x03A92738 B 0x3A927F4
	0x03A9273C MOVI V0.2D, 0x0
	0x03A92740 ADD X1, X31, 0x0
	0x03A92744 MOV X0, X21
	0x03A92748 MOV X2, X31
	0x03A9274C STR X31, [X31 + 0x50]
	0x03A92750 STP V0, V0, [X31 + 0x30]
	0x03A92754 STP V0, V0, [X31 + 0x10]
	0x03A92758 STR V0, [X31]
	0x03A9275C BL 0x3C60248
	0x03A92760 MOV X0, X21
	0x03A92764 MOV X1, X31
	0x03A92768 BL 0x3C16704
	0x03A9276C FMUL S0, S0, S8
	0x03A92770 ADD X0, X31, 0x110
	0x03A92774 ADD X1, X31, 0x0
	0x03A92778 MOV X2, X31
	0x03A9277C STR S0, [X31 + 0x50]
	0x03A92780 STRB W24, [X31 + 0x55]
	0x03A92784 BL 0x3C5FCE4
	0x03A92788 B 0x3A927F4
	0x03A9278C MOVI V0.2D, 0x0
	0x03A92790 ADD X1, X31, 0xB0
	0x03A92794 MOV X0, X21
	0x03A92798 MOV X2, X31
	0x03A9279C STR W31, [X31 + 0x100]
	0x03A927A0 STP V0, V0, [X31 + 0xE0]
	0x03A927A4 STP V0, V0, [X31 + 0xC0]
	0x03A927A8 STR V0, [X31 + 0xB]
	0x03A927AC BL 0x3C5FEF8
	0x03A927B0 ADD X0, X31, 0x110
	0x03A927B4 ADD X1, X31, 0xB0
	0x03A927B8 MOV X2, X31
	0x03A927BC BL 0x3C5FBF8
	0x03A927C0 B 0x3A927F4
	0x03A927C4 MOVI V0.2D, 0x0
	0x03A927C8 ADD X1, X31, 0x60
	0x03A927CC MOV X0, X21
	0x03A927D0 MOV X2, X31
	0x03A927D4 STP V0, V0, [X31 + 0x90]
	0x03A927D8 STP V0, V0, [X31 + 0x70]
	0x03A927DC STR V0, [X31 + 0x6]
	0x03A927E0 BL 0x3C60094
	0x03A927E4 ADD X0, X31, 0x110
	0x03A927E8 ADD X1, X31, 0x60
	0x03A927EC MOV X2, X31
	0x03A927F0 BL 0x3C5FC70
	0x03A927F4 MADD X0, X25, X22, X19
	0x03A927F8 ADD X1, X31, 0x110
	0x03A927FC MOVZ W2, 0x60
	0x03A92800 STRB W31, [X31 + 0x16F]
	0x03A92804 BL 0x3EB1B30
	0x03A92808 LDR W9, [X20 + 0x18]
	0x03A9280C ADD W8, W25, 0x1
	0x03A92810 CMP W8, W9
	0x03A92814 B.LT 0x3A926DC
	0x03A92818 B 0x3A92884
	0x03A9281C CBZ X20, 0x3A928A4
	0x03A92820 LDR W9, [X20 + 0x18]
	0x03A92824 CMP W9, 0x1
	0x03A92828 B.LT 0x3A92884
	0x03A9282C MOV W8, W31
	0x03A92830 MOVZ W21, 0x60
	0x03A92834 CMP W8, W9
	0x03A92838 B.CS 0x3A928A8
	0x03A9283C SXTW X22, W8
	0x03A92840 ADD X8, X20, X22, 0x3, LSL
	0x03A92844 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x951000
	012 Move X24, 0x68B000
	013 Move W8, [X25+891]
	014 Move X24, [X24+2216]
	015 Move X21, X4
	016 Move X19, X3
	017 Move X20, X2
	018 Move V8, V1
	019 Move X22, X1
	020 Move V9, V0
	021 Move W23, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x68B000
	027 Move X0, [X0+2216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+891], W8
	031 Move X0, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X24]
	037 Move X8, [X0+184]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move [X19], V0
	041 Move X8, [X24]
	042 Move X8, [X8+184]
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move [X21], V0
	045 Move X0, [X24]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, -49967104
	051 Move X9, -49971200
	052 Move V1, [X8+912]
	053 Move V2, [X9+3880]
	054 Multiply S0, S9, S9
	055 NotImplemented "Instruction FNMUL not yet implemented."
	056 Multiply S1, S0, S1
	057 Move S4, 1
	058 NotImplemented "Instruction FMAX not yet implemented."
	059 Subtract S0, S1, S0
	060 NotImplemented "Instruction FDIV not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Move [X19], S1
	063 Move [X19+8], S0
	064 Compare W23, 0
	065 JumpIfEqual {77}
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X30, [X31+16]
	073 Move X25, [X31+24]
	074 Move D9, [X31+80]
	075 Move D8, [X31+88]
	076 Return 
	077 Move X0, [X24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move W1, 2
	083 Move X0, X22
	084 Move X2, X31
	085 Call Matrix4x4.GetColumn, X0, X1
	086 NotImplemented "Instruction FNEG not yet implemented."
	087 NotImplemented "Instruction FNEG not yet implemented."
	088 NotImplemented "Instruction FNEG not yet implemented."
	089 Move [X21], S0
	090 Move [X21+8], S1
	091 Move [X21+8], S2
	092 Move [X21+12], W31
	093 Move X0, X20
	094 Move X1, X19
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X30, [X31+16]
	102 Move X25, [X31+24]
	103 Move V0, V8
	104 Move D9, [X31+80]
	105 Move D8, [X31+88]
	106 Call UniversalRenderPipeline.GetSpotAngleAttenuation, V0, X0, X1
	107 Return 

Method: System.Void GetPunctualLightDistanceAttenuation(System.Single lightRange, ref UnityEngine.Vector4 lightAttenuation)

Disassembly:
	0x03A92848 CBZ X0, 0x3A928A4
	0x03A9284C MOV X1, X31
	0x03A92850 BL 0x3C385F8
	0x03A92854 MOV W1, W0
	0x03A92858 ADD X0, X31, 0x110
	0x03A9285C MOV X2, X31
	0x03A92860 BL 0x3C5FD0C
	0x03A92864 MADD X0, X22, X21, X19
	0x03A92868 ADD X1, X31, 0x110
	0x03A9286C MOVZ W2, 0x60
	0x03A92870 BL 0x3EB1B30
	0x03A92874 LDR W9, [X20 + 0x18]
	0x03A92878 ADD W8, W22, 0x1
	0x03A9287C CMP W8, W9

ISIL:
	001 Move X8, -49967104
	002 Move V1, [X8+912]
	003 Move X8, -49971200
	004 Move V2, [X8+3880]
	005 Multiply S3, S0, S0
	006 Multiply S1, S3, S1
	007 Subtract S1, S1, S3
	008 NotImplemented "Instruction FMAX not yet implemented."
	009 Move S3, 1
	010 NotImplemented "Instruction FNMUL not yet implemented."
	011 NotImplemented "Instruction FDIV not yet implemented."
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Move [X0], S2
	014 Move [X0+8], S0
	015 Return 

Method: System.Void GetSpotAngleAttenuation(System.Single spotAngle, System.Nullable`1<System.Single> innerSpotAngle, ref UnityEngine.Vector4 lightAttenuation)

Disassembly:
	0x03A928B4 LDP V1, V0, [X1 + 0x20]
	0x03A928B8 LDP V3, V2, [X1]
	0x03A928BC ADRP X20, 0x946000
	0x03A928C0 MOV X19, X0
	0x03A928C4 STP V1, V0, [X0 + 0x20]
	0x03A928C8 STP V3, V2, [X0]
	0x03A928CC LDP V1, V0, [X2 + 0x20]
	0x03A928D0 LDP V3, V2, [X2]
	0x03A928D4 STP V1, V0, [X0 + 0x60]
	0x03A928D8 STP V3, V2, [X0 + 0x40]
	0x03A928DC LDRB W8, [X20 + 0xAC0]
	0x03A928E0 CBNZ W8, 0x3A928F8
	0x03A928E4 ADRP X0, 0x665000
	0x03A928E8 LDR X0, [X0 + 0x270]
	0x03A928EC BL 0x1C16CF4
	0x03A928F0 MOVZ W8, 0x1
	0x03A928F4 STRB W8, [X20 + 0xAC0]
	0x03A928F8 ADRP X8, 0x665000
	0x03A928FC LDR X8, [X8 + 0x270]
	0x03A92900 LDR X8, [X8]
	0x03A92904 LDR X8, [X8 + 0xB8]
	0x03A92908 LDP V1, V0, [X8 + 0x60]
	0x03A9290C LDP V3, V2, [X8 + 0x40]
	0x03A92910 STP V1, V0, [X19 + 0xA0]
	0x03A92914 STP V3, V2, [X19 + 0x80]
	0x03A92918 LDP X20, X19, [X31 + 0x10]
	0x03A9291C LDR X30, [X31], #0x20
	0x03A92920 RET
	0x03A92924 STR D10, [X31 - 0x50]!
	0x03A92928 STP D9, D8, [X31 + 0x8]
	0x03A9292C STR X29, [X31 + 0x18]
	0x03A92930 STP X30, X23, [X31 + 0x20]
	0x03A92934 STP X22, X21, [X31 + 0x30]
	0x03A92938 STP X20, X19, [X31 + 0x40]
	0x03A9293C SUB X31, X31, 0x200
	0x03A92940 ADRP X22, 0x950000
	0x03A92944 LDRB W8, [X22 + 0x387]
	0x03A92948 MOV W21, W2
	0x03A9294C MOV X19, X1
	0x03A92950 MOV X20, X0
	0x03A92954 TBNZ X8, 0x0, 0x3A92978
	0x03A92958 ADRP X0, 0x6C2000
	0x03A9295C LDR X0, [X0 + 0x20]
	0x03A92960 BL 0x1C16CF4
	0x03A92964 ADRP X0, 0x6BE000
	0x03A92968 LDR X0, [X0 + 0x4A8]
	0x03A9296C BL 0x1C16CF4
	0x03A92970 MOVZ W8, 0x1
	0x03A92974 STRB W8, [X22 + 0x387]
	0x03A92978 MOVI V0.2D, 0x0
	0x03A9297C STP V0, V0, [X31 + 0x1E0]
	0x03A92980 STP V0, V0, [X31 + 0x1C0]
	0x03A92984 LDR X0, [X20 + 0x178]
	0x03A92988 CBZ X0, 0x3A92AA0
	0x03A9298C MOV X1, X31
	0x03A92990 BL 0x3984C98
	0x03A92994 TBZ X0, 0x0, 0x3A92B50
	0x03A92998 ADD X8, X31, 0x180
	0x03A9299C MOV X0, X20
	0x03A929A0 MOV W1, W31
	0x03A929A4 BL 0x3A92B70
	0x03A929A8 ADD X8, X31, 0x140
	0x03A929AC MOV X0, X20
	0x03A929B0 MOV W1, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x951000
	011 Move W8, [X21+892]
	012 Move X19, X1
	013 Move X20, X0
	014 Move V9, V0
	015 Move [X31+8], X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x666000
	021 Move X0, [X0+192]
	022 Call 0x1C17CF4
	023 Move X0, 0x666000
	024 Move X0, [X0+280]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+892], W8
	028 Move X8, -49967104
	029 Move V11, [X8+260]
	030 Move S10, 0.5
	031 Multiply S0, S9, S11
	032 Multiply S0, S0, S10
	033 Call 0x3EB2BD0
	034 And W31, W20, 255
	035 Move V8, V0
	036 Move X8, 0x666000
	037 Move X8, [X8+280]
	038 Add X0, X31, 8
	039 Move X1, [X8]
	040 Call Nullable`1<Single>.get_Value, X0
	041 Multiply S0, S0, S11
	042 Multiply S0, S9, S10
	043 Multiply S0, S0, S11
	044 Call 0x3EB2E50
	045 Move W8, 0x42380000
	046 Move W9, 0x3C800000
	047 Move S1, W8
	048 Multiply S0, S0, S1
	049 Move S1, W9
	050 Multiply S0, S0, S1
	051 Call 0x3EB2BE0
	052 Add S0, S0, S0
	053 Multiply S0, S0, S10
	054 Call 0x3EB2BD0
	055 Move X8, -49967104
	056 Move V1, [X8+1040]
	057 Subtract S0, S0, S8
	058 Move S2, 1
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 NotImplemented "Instruction FMAX not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Multiply S1, S0, S3
	063 Move [X19+8], S0
	064 Move [X19+16], S1
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X30, [X31+48]
	068 Move X21, [X31+56]
	069 Move D9, [X31+32]
	070 Move D8, [X31+40]
	071 Move D11, [X31+16]
	072 Move D10, [X31+24]
	073 Add X31, X31, 80
	074 Return 

Method: System.Void GetSpotDirection(ref UnityEngine.Matrix4x4 lightLocalToWorldMatrix, out UnityEngine.Vector4 lightSpotDir)

Disassembly:
	0x03A92880 B.LT 0x3A92834
	0x03A92884 LDP X20, X19, [X31 + 0x1B0]
	0x03A92888 LDP X22, X21, [X31 + 0x1A0]
	0x03A9288C LDP X24, X23, [X31 + 0x190]
	0x03A92890 LDP X30, X25, [X31 + 0x180]
	0x03A92894 LDR X29, [X31 + 0x178]
	0x03A92898 LDR V8, [X31 + 0x170]
	0x03A9289C ADD X31, X31, 0x1C0
	0x03A928A0 RET
	0x03A928A4 BL 0x1C16F20
	0x03A928A8 BL 0x1C16F28
	0x03A928AC STR X30, [X31 - 0x20]!
	0x03A928B0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Move W1, 2
	005 Move X2, X31
	006 Call Matrix4x4.GetColumn, X0, X1
	007 NotImplemented "Instruction FNEG not yet implemented."
	008 NotImplemented "Instruction FNEG not yet implemented."
	009 NotImplemented "Instruction FNEG not yet implemented."
	010 Move [X19], S0
	011 Move [X19+8], S1
	012 Move [X19+8], S2
	013 Move [X19+12], W31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void InitializeLightConstants_Common(Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> lights, System.Int32 lightIndex, out UnityEngine.Vector4 lightPos, out UnityEngine.Vector4 lightColor, out UnityEngine.Vector4 lightAttenuation, out UnityEngine.Vector4 lightSpotDir, out UnityEngine.Vector4 lightOcclusionProbeChannel)

Disassembly:
	0x03A929B4 BL 0x3A92BE4
	0x03A929B8 CBZ X19, 0x3A92AA0
	0x03A929BC LDP V0, V1, [X31 + 0x180]
	0x03A929C0 LDP V2, V3, [X31 + 0x1A0]
	0x03A929C4 ADD X1, X31, 0x100
	0x03A929C8 ADD X2, X31, 0xC0
	0x03A929CC STP V0, V1, [X31 + 0x100]
	0x03A929D0 LDP V0, V1, [X31 + 0x140]
	0x03A929D4 STP V2, V3, [X31 + 0x120]
	0x03A929D8 LDP V2, V3, [X31 + 0x160]
	0x03A929DC MOV X0, X19
	0x03A929E0 MOV X3, X31
	0x03A929E4 STP V0, V1, [X31 + 0xC0]
	0x03A929E8 STP V2, V3, [X31 + 0xE0]
	0x03A929EC BL 0x3C4D294
	0x03A929F0 LDR X0, [X20 + 0x178]
	0x03A929F4 CBZ X0, 0x3A92AA0
	0x03A929F8 MOV X1, X31
	0x03A929FC BL 0x3984DE0
	0x03A92A00 TBZ X0, 0x0, 0x3A92AA4
	0x03A92A04 LDR X0, [X20 + 0x178]
	0x03A92A08 CBZ X0, 0x3A92AA0
	0x03A92A0C ADRP X23, 0x6BE000
	0x03A92A10 LDR X23, [X23 + 0x4A8]
	0x03A92A14 MOV W22, W31
	0x03A92A18 AND W21, W21, 0x1
	0x03A92A1C MOV X1, X31
	0x03A92A20 BL 0x398632C
	0x03A92A24 CMP W22, W0
	0x03A92A28 B.GE 0x3A92B34
	0x03A92A2C ADD X8, X31, 0x180
	0x03A92A30 MOV X0, X20
	0x03A92A34 MOV W1, W22
	0x03A92A38 BL 0x3A92B70
	0x03A92A3C ADD X8, X31, 0x140
	0x03A92A40 MOV X0, X20
	0x03A92A44 MOV W1, W22
	0x03A92A48 BL 0x3A92BE4
	0x03A92A4C LDR X0, [X23]
	0x03A92A50 LDR W8, [X0 + 0xE0]
	0x03A92A54 CBNZ W8, 0x3A92A5C
	0x03A92A58 BL 0x1C16DFC
	0x03A92A5C LDP V0, V1, [X31 + 0x180]
	0x03A92A60 LDP V2, V3, [X31 + 0x1A0]
	0x03A92A64 ADD X0, X31, 0x80
	0x03A92A68 ADD X1, X31, 0x40
	0x03A92A6C STP V0, V1, [X31 + 0x80]
	0x03A92A70 LDP V0, V1, [X31 + 0x140]
	0x03A92A74 STP V2, V3, [X31 + 0xA0]
	0x03A92A78 LDP V2, V3, [X31 + 0x160]
	0x03A92A7C MOV W2, W21
	0x03A92A80 MOV W3, W22
	0x03A92A84 MOV X4, X31
	0x03A92A88 STP V0, V1, [X31 + 0x40]
	0x03A92A8C STP V2, V3, [X31 + 0x60]
	0x03A92A90 BL 0x3983E84
	0x03A92A94 LDR X0, [X20 + 0x178]
	0x03A92A98 ADD W22, W22, 0x1
	0x03A92A9C CBNZ X0, 0x3A92A1C
	0x03A92AA0 BL 0x1C16F20
	0x03A92AA4 ADD X8, X31, 0x0
	0x03A92AA8 MOV X0, X20
	0x03A92AAC MOV W1, W31
	0x03A92AB0 BL 0x3A92B70
	0x03A92AB4 ADD X8, X31, 0x180
	0x03A92AB8 ADD X0, X31, 0x0
	0x03A92ABC MOV X1, X31
	0x03A92AC0 BL 0x3C2711C
	0x03A92AC4 LDP V0, V1, [X31 + 0x180]
	0x03A92AC8 LDP V2, V3, [X31 + 0x1A0]
	0x03A92ACC ADD X0, X31, 0x1C0
	0x03A92AD0 MOVZ W1, 0x3
	0x03A92AD4 MOV X2, X31
	0x03A92AD8 STP V0, V1, [X31 + 0x1C0]
	0x03A92ADC STP V2, V3, [X31 + 0x1E0]
	0x03A92AE0 BL 0x3C27C24
	0x03A92AE4 ADRP X20, 0x6C2000
	0x03A92AE8 LDR X20, [X20 + 0x20]
	0x03A92AEC MOV V8.16B, V0.16B
	0x03A92AF0 MOV V9.16B, V1.16B
	0x03A92AF4 MOV V10.16B, V2.16B
	0x03A92AF8 LDR X0, [X20]
	0x03A92AFC LDR W8, [X0 + 0xE0]
	0x03A92B00 CBNZ W8, 0x3A92B0C
	0x03A92B04 BL 0x1C16DFC
	0x03A92B08 LDR X0, [X20]
	0x03A92B0C LDR X8, [X0 + 0xB8]
	0x03A92B10 FMOV S3, W31
	0x03A92B14 MOV X0, X19
	0x03A92B18 MOV V0.16B, V8.16B
	0x03A92B1C LDR W1, [X8 + 0x34]
	0x03A92B20 MOV V1.16B, V9.16B
	0x03A92B24 MOV V2.16B, V10.16B
	0x03A92B28 MOV X2, X31
	0x03A92B2C BL 0x3C4CED8
	0x03A92B30 B 0x3A92B50
	0x03A92B34 LDR X0, [X23]
	0x03A92B38 LDR W8, [X0 + 0xE0]
	0x03A92B3C CBNZ W8, 0x3A92B44
	0x03A92B40 BL 0x1C16DFC
	0x03A92B44 MOV X0, X19
	0x03A92B48 MOV X1, X31
	0x03A92B4C BL 0x3984414
	0x03A92B50 ADD X31, X31, 0x200
	0x03A92B54 LDP X20, X19, [X31 + 0x40]
	0x03A92B58 LDP X22, X21, [X31 + 0x30]
	0x03A92B5C LDP X30, X23, [X31 + 0x20]
	0x03A92B60 LDR X29, [X31 + 0x18]
	0x03A92B64 LDP D9, D8, [X31 + 0x8]
	0x03A92B68 LDR V10, [X31], #0x50
	0x03A92B6C RET
	0x03A92B70 SUB X31, X31, 0x60
	0x03A92B74 STP X30, X21, [X31 + 0x40]
	0x03A92B78 STP X20, X19, [X31 + 0x50]
	0x03A92B7C MOV X21, X0
	0x03A92B80 LDR X0, [X0 + 0x178]
	0x03A92B84 CBZ X0, 0x3A92BE0
	0x03A92B88 MOV W20, W1
	0x03A92B8C MOV X1, X31
	0x03A92B90 MOV X19, X8
	0x03A92B94 BL 0x3984C98
	0x03A92B98 TBZ X0, 0x0, 0x3A92BC0
	0x03A92B9C LDR X0, [X21 + 0x178]
	0x03A92BA0 CBZ X0, 0x3A92BE0
	0x03A92BA4 ADD X8, X31, 0x0
	0x03A92BA8 MOV W1, W20
	0x03A92BAC MOV X2, X31
	0x03A92BB0 BL 0x3984CB0
	0x03A92BB4 LDP V1, V0, [X31 + 0x20]
	0x03A92BB8 LDP V3, V2, [X31]
	0x03A92BBC B 0x3A92BC8
	0x03A92BC0 LDP V1, V0, [X21 + 0x20]
	0x03A92BC4 LDP V3, V2, [X21]
	0x03A92BC8 STP V1, V0, [X19 + 0x20]
	0x03A92BCC STP V3, V2, [X19]
	0x03A92BD0 LDP X20, X19, [X31 + 0x50]
	0x03A92BD4 LDP X30, X21, [X31 + 0x40]
	0x03A92BD8 ADD X31, X31, 0x60
	0x03A92BDC RET
	0x03A92BE0 BL 0x1C16F20
	0x03A92BE4 SUB X31, X31, 0x1B0
	0x03A92BE8 STR X29, [X31 + 0x180]
	0x03A92BEC STP X30, X21, [X31 + 0x190]
	0x03A92BF0 STP X20, X19, [X31 + 0x1A0]
	0x03A92BF4 MOV X20, X0
	0x03A92BF8 LDR X0, [X0 + 0x178]
	0x03A92BFC CBZ X0, 0x3A92CD4
	0x03A92C00 MOV W21, W1
	0x03A92C04 MOV X1, X31
	0x03A92C08 MOV X19, X8
	0x03A92C0C BL 0x3984C98
	0x03A92C10 TBZ X0, 0x0, 0x3A92C7C
	0x03A92C14 LDP V1, V0, [X20 + 0xA0]
	0x03A92C18 LDP V3, V2, [X20 + 0x80]
	0x03A92C1C STP V1, V0, [X31 + 0x160]
	0x03A92C20 STP V3, V2, [X31 + 0x140]
	0x03A92C24 LDR X0, [X20 + 0x178]
	0x03A92C28 CBZ X0, 0x3A92CD4
	0x03A92C2C ADD X8, X31, 0x100
	0x03A92C30 MOV W1, W21
	0x03A92C34 MOV X2, X31
	0x03A92C38 BL 0x3984D48
	0x03A92C3C LDP V0, V1, [X31 + 0x100]
	0x03A92C40 LDP V2, V3, [X31 + 0x120]
	0x03A92C44 ADD X8, X31, 0x100
	0x03A92C48 ADD X0, X31, 0xC0
	0x03A92C4C STP V0, V1, [X31 + 0x80]
	0x03A92C50 LDP V0, V1, [X31 + 0x140]
	0x03A92C54 STP V2, V3, [X31 + 0xA0]
	0x03A92C58 LDP V2, V3, [X31 + 0x160]
	0x03A92C5C ADD X1, X31, 0x80
	0x03A92C60 MOV X2, X31
	0x03A92C64 STP V0, V1, [X31 + 0xC0]
	0x03A92C68 STP V2, V3, [X31 + 0xE0]
	0x03A92C6C BL 0x3C27F74
	0x03A92C70 LDP V1, V0, [X31 + 0x120]
	0x03A92C74 LDP V3, V2, [X31 + 0x100]
	0x03A92C78 B 0x3A92CB8
	0x03A92C7C LDP V1, V0, [X20 + 0xA0]
	0x03A92C80 LDP V3, V2, [X20 + 0x80]
	0x03A92C84 ADD X8, X31, 0x140
	0x03A92C88 ADD X0, X31, 0x40
	0x03A92C8C STP V1, V0, [X31 + 0x60]
	0x03A92C90 STP V3, V2, [X31 + 0x40]
	0x03A92C94 LDP V1, V0, [X20 + 0x60]
	0x03A92C98 LDP V3, V2, [X20 + 0x40]
	0x03A92C9C ADD X1, X31, 0x0
	0x03A92CA0 MOV X2, X31
	0x03A92CA4 STP V1, V0, [X31 + 0x20]
	0x03A92CA8 STP V3, V2, [X31]
	0x03A92CAC BL 0x3C27F74
	0x03A92CB0 LDP V1, V0, [X31 + 0x160]
	0x03A92CB4 LDP V3, V2, [X31 + 0x140]
	0x03A92CB8 STP V1, V0, [X19 + 0x20]
	0x03A92CBC STP V3, V2, [X19]
	0x03A92CC0 LDP X20, X19, [X31 + 0x1A0]
	0x03A92CC4 LDP X30, X21, [X31 + 0x190]
	0x03A92CC8 LDR X29, [X31 + 0x180]
	0x03A92CCC ADD X31, X31, 0x1B0
	0x03A92CD0 RET
	0x03A92CD4 BL 0x1C16F20
	0x03A92CD8 SUB X31, X31, 0x60
	0x03A92CDC STP X30, X21, [X31 + 0x40]
	0x03A92CE0 STP X20, X19, [X31 + 0x50]
	0x03A92CE4 MOV X21, X0
	0x03A92CE8 LDR X0, [X0 + 0x178]
	0x03A92CEC CBZ X0, 0x3A92D48
	0x03A92CF0 MOV W20, W1
	0x03A92CF4 MOV X1, X31
	0x03A92CF8 MOV X19, X8
	0x03A92CFC BL 0x3984C98
	0x03A92D00 TBZ X0, 0x0, 0x3A92D28
	0x03A92D04 LDR X0, [X21 + 0x178]
	0x03A92D08 CBZ X0, 0x3A92D48
	0x03A92D0C ADD X8, X31, 0x0
	0x03A92D10 MOV W1, W20
	0x03A92D14 MOV X2, X31
	0x03A92D18 BL 0x3984D48
	0x03A92D1C LDP V1, V0, [X31 + 0x20]
	0x03A92D20 LDP V3, V2, [X31]
	0x03A92D24 B 0x3A92D30
	0x03A92D28 LDP V1, V0, [X21 + 0x60]
	0x03A92D2C LDP V3, V2, [X21 + 0x40]
	0x03A92D30 STP V1, V0, [X19 + 0x20]
	0x03A92D34 STP V3, V2, [X19]
	0x03A92D38 LDP X20, X19, [X31 + 0x50]
	0x03A92D3C LDP X30, X21, [X31 + 0x40]
	0x03A92D40 ADD X31, X31, 0x60
	0x03A92D44 RET
	0x03A92D48 BL 0x1C16F20
	0x03A92D4C SUB X31, X31, 0x160
	0x03A92D50 STP X29, X30, [X31 + 0x140]
	0x03A92D54 STP X20, X19, [X31 + 0x150]
	0x03A92D58 LDP V1, V0, [X0 + 0xA0]
	0x03A92D5C LDP V3, V2, [X0 + 0x80]
	0x03A92D60 MOV X19, X8
	0x03A92D64 ADD X8, X31, 0x80
	0x03A92D68 MOV X20, X0
	0x03A92D6C STP V1, V0, [X31 + 0x120]
	0x03A92D70 STP V3, V2, [X31 + 0x100]
	0x03A92D74 BL 0x3A92CD8
	0x03A92D78 MOV X0, X20
	0x03A92D7C BL 0x3A92DE8
	0x03A92D80 AND W1, W0, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D8
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X28, 0x951000
	015 Move X27, 0x68B000
	016 Move W8, [X28+893]
	017 Move X27, [X27+2216]
	018 Move X19, X7
	019 Move X21, X6
	020 Move X23, X5
	021 Move X20, X4
	022 Move X25, X3
	023 Move W22, W2
	024 Move X24, X1
	025 Move X26, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x6C5000
	031 Move X0, [X0+440]
	032 Call 0x1C17CF4
	033 Move X0, 0x666000
	034 Move X0, [X0+312]
	035 Call 0x1C17CF4
	036 Move X0, 0x662000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x68B000
	040 Move X0, [X0+2216]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+893], W8
	044 Move X0, [X27]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+96], V0
	047 Move [X31+104], V0
	048 Move [X31+64], V0
	049 Move [X31+72], V0
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X27]
	055 Move X8, [X0+184]
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move [X25], V0
	058 Move X8, [X27]
	059 Move X8, [X8+184]
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move [X20], V0
	062 Move X8, [X27]
	063 Move X8, [X8+184]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move [X19], V0
	066 Move X8, [X27]
	067 Move X8, [X8+184]
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move [X23], V0
	070 Move X8, [X27]
	071 Move X8, [X8+184]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move [X21], V0
	074 Move TEMP, X22
	075 And TEMP, TEMP, -2147483648
	076 Compare TEMP, -2147483648
	077 JumpIfEqual {243}
	078 Move X8, 0x6C5000
	079 Move X8, [X8+440]
	080 Move X28, 0x662000
	081 Move X0, X26
	082 Move X1, X24
	083 Move X3, [X8]
	084 Move X28, [X28+1432]
	085 Move W2, W22
	086 Call 0x22232C0, X0, X1
	087 Move X1, X31
	088 Move X24, X0
	089 Call VisibleLight.get_light, X0
	090 Move X22, X0
	091 Add X8, X31, 0
	092 Move X0, X24
	093 Move X1, X31
	094 Call VisibleLight.get_localToWorldMatrix, X0
	095 Move V0, [X31]
	096 Move V1, [X31+16]
	097 Move V2, [X31+32]
	098 Move V3, [X31+48]
	099 Move X0, X24
	100 Move X1, X31
	101 Move [X31+64], V0
	102 Move [X31+72], V1
	103 Move [X31+96], V2
	104 Move [X31+104], V3
	105 Call VisibleLight.get_lightType, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X21, X25
	108 Move W26, W0
	109 Add X0, X31, 64
	110 Move W1, 3
	111 Move X2, X31
	112 Call Matrix4x4.GetColumn, X0, X1
	113 Move W8, 0x3F800000
	114 Move X0, X24
	115 Move X1, X31
	116 Move [X25], S0
	117 Move [X25+8], S1
	118 Move [X25+8], S2
	119 Move [X25+12], W8
	120 Call VisibleLight.get_range, X0
	121 Move X0, [X27]
	122 Move V8, V0
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X8, -49967104
	128 Move X9, -49971200
	129 Move V1, [X8+912]
	130 Move V2, [X9+3880]
	131 Multiply S0, S8, S8
	132 NotImplemented "Instruction FNMUL not yet implemented."
	133 Multiply S1, S0, S1
	134 Move S4, 1
	135 NotImplemented "Instruction FMAX not yet implemented."
	136 Subtract S0, S1, S0
	137 NotImplemented "Instruction FDIV not yet implemented."
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Move [X23], S1
	140 Move [X23+8], S0
	141 Compare W26, 0
	142 JumpIfNotEqual {180}
	143 Move X0, X24
	144 Move X1, X31
	145 Call VisibleLight.get_spotAngle, X0
	146 Move V8, V0
	147 Compare X22, 0
	148 JumpIfEqual {159}
	149 Move X0, X22
	150 Move X1, X31
	151 Call Light.get_innerSpotAngle, X0
	152 Move X8, 0x666000
	153 Move X8, [X8+312]
	154 Add X0, X31, 0
	155 Move [X31], X31
	156 Move X1, [X8]
	157 Call Nullable`1<Single>..ctor, X0, V0
	158 Move X25, [X31]
	159 Move X25, X31
	160 Move X0, [X27]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move V0, V8
	166 Move X0, X25
	167 Move X1, X23
	168 Call UniversalRenderPipeline.GetSpotAngleAttenuation, V0, X0, X1
	169 Add X0, X31, 64
	170 Move W1, 2
	171 Move X2, X31
	172 Call Matrix4x4.GetColumn, X0, X1
	173 NotImplemented "Instruction FNEG not yet implemented."
	174 NotImplemented "Instruction FNEG not yet implemented."
	175 NotImplemented "Instruction FNEG not yet implemented."
	176 Move [X21], S0
	177 Move [X21+8], S1
	178 Move [X21+8], S2
	179 Move [X21+12], W31
	180 Move X0, X24
	181 Move X1, X31
	182 Call VisibleLight.get_finalColor, X0
	183 Move [X20], S0
	184 Move [X20+8], S1
	185 Move [X20+8], S2
	186 Move [X20+16], S3
	187 Move X0, [X28]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, X22
	193 Move X1, X31
	194 Move X2, X31
	195 Call Object.op_Inequality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {243}
	200 Compare X22, 0
	201 JumpIfEqual {257}
	202 Add X8, X31, 0
	203 Move X0, X22
	204 Move X1, X31
	205 Call Light.get_bakingOutput, X0
	206 Move W8, [X31+8]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add X8, X31, 0
	209 Move X0, X22
	210 Move X1, X31
	211 Call Light.get_bakingOutput, X0
	212 Move W8, [X31+4]
	213 Move TEMP, X8
	214 And TEMP, TEMP, -2147483648
	215 Compare TEMP, -2147483648
	216 JumpIfEqual {243}
	217 Add X8, X31, 0
	218 Move X0, X22
	219 Move X1, X31
	220 Call Light.get_bakingOutput, X0
	221 Move W8, [X31+4]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add X8, X31, 0
	224 Move X0, X22
	225 Move X1, X31
	226 Call Light.get_bakingOutput, X0
	227 Move W8, [X31+4]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X9, -49258496
	230 Add X9, X9, 2880
	231 NotImplemented "Instruction ADR not yet implemented."
	232 Move W11, [X9]
	233 Add X10, X10, X11
	234 CallNoReturn X10
	235 Move W8, 0x3F800000
	236 Move [X19], W8
	237 Move W8, 0x3F800000
	238 Move [X19+8], W8
	239 Move W8, 0x3F800000
	240 Move [X19+4], W8
	241 Move W8, 0x3F800000
	242 Move [X19+12], W8
	243 Move X20, [X31+208]
	244 Move X19, [X31+216]
	245 Move X22, [X31+192]
	246 Move X21, [X31+200]
	247 Move X24, [X31+176]
	248 Move X23, [X31+184]
	249 Move X26, [X31+160]
	250 Move X25, [X31+168]
	251 Move X28, [X31+144]
	252 Move X27, [X31+152]
	253 Move X30, [X31+136]
	254 Move V8, [X31+128]
	255 Add X31, X31, 224
	256 Return 
	257 Call 0x1C17F20
	258 Move X0, 0x66C000
	259 Move X0, [X0+3960]
	260 Call 0x1C17D08
	261 Call 0x1C17F10
	262 Move X19, X0
	263 Move X0, 0x6C6000
	264 Move X0, [X0+928]
	265 Call 0x1C17D08
	266 Move X1, X0
	267 Move X0, X19
	268 Move X2, X31
	269 Call IndexOutOfRangeException..ctor, X0, X1
	270 Move X0, 0x6C6000
	271 Move X0, [X0+936]
	272 Call 0x1C17D08
	273 Move X1, X0
	274 Move X0, X19
	275 Call 0x1C17DEC

Method: System.Void RecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A92D84 ADD X8, X31, 0xC0
	0x03A92D88 ADD X0, X31, 0x80
	0x03A92D8C MOV X2, X31
	0x03A92D90 BL 0x3C1015C
	0x03A92D94 LDP V0, V1, [X31 + 0xC0]
	0x03A92D98 LDP V2, V3, [X31 + 0xE0]
	0x03A92D9C ADD X8, X31, 0xC0
	0x03A92DA0 ADD X0, X31, 0x40
	0x03A92DA4 STP V0, V1, [X31]
	0x03A92DA8 LDP V0, V1, [X31 + 0x100]
	0x03A92DAC STP V2, V3, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+464]
	003 Move X3, X2
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move X2, X1
	007 Move X1, X0
	008 Move X0, X8
	009 Move X4, X31
	010 Move X30, [X31+16]
	011 Call ScriptableRenderer.RecordRenderGraph, X0, X1, X2, X3
	012 Return 
	013 Call 0x1C17F20

Method: System.Void RecordAndExecuteRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A8F8C4 LDR V9, [X19 + 0x144]
	0x03A8F8C8 LDR W22, [X21 + 0x64]
	0x03A8F8CC LDR W8, [X0 + 0xE0]
	0x03A8F8D0 CBNZ W8, 0x3A8F8D8
	0x03A8F8D4 BL 0x1C16DFC
	0x03A8F8D8 SCVTF S0, S10
	0x03A8F8DC SCVTF S1, S9
	0x03A8F8E0 MOV V2.16B, V8.16B
	0x03A8F8E4 MOV W0, W22
	0x03A8F8E8 BL 0x3A8FD9C
	0x03A8F8EC LDR V0, [X19 + 0x14C]
	0x03A8F8F0 FMOV S1, 1
	0x03A8F8F4 STR W0, [X19 + 0x154]
	0x03A8F8F8 FCMP S0, S1
	0x03A8F8FC B.LE 0x3A8F908
	0x03A8F900 MOVZ W8, 0x2
	0x03A8F904 B 0x3A8F938
	0x03A8F908 CMP W23, 0x0
	0x03A8F90C CSET W8, EQ
	0x03A8F910 CMP W0, 0x2
	0x03A8F914 CSET W9, EQ
	0x03A8F918 AND W8, W8, W9, 0x0
	0x03A8F91C TBNZ X8, 0x0, 0x3A8F934
	0x03A8F920 FMOV S1, 1
	0x03A8F924 FCMP S0, S1
	0x03A8F928 B.MI 0x3A8F934
	0x03A8F92C STR W31, [X19 + 0x150]
	0x03A8F930 B 0x3A8F93C
	0x03A8F934 MOVZ W8, 0x1
	0x03A8F938 STR W8, [X19 + 0x150]
	0x03A8F93C LDRB W8, [X21 + 0x68]
	0x03A8F940 STRB W8, [X19 + 0x158]
	0x03A8F944 LDR V1, [X21 + 0x6C]
	0x03A8F948 STR S1, [X19 + 0x15C]
	0x03A8F94C LDR X0, [X24]
	0x03A8F950 LDR W8, [X0 + 0xE0]
	0x03A8F954 CBNZ W8, 0x3A8F964
	0x03A8F958 BL 0x1C16DFC
	0x03A8F95C LDR X0, [X24]
	0x03A8F960 LDR V0, [X19 + 0x14C]
	0x03A8F964 LDR X8, [X0 + 0xB8]
	0x03A8F968 LDR X8, [X8 + 0x40]
	0x03A8F96C STR X8, [X19 + 0x178]
	0x03A8F970 MOV X0, X31
	0x03A8F974 BL 0x3989A04
	0x03A8F978 MOV X0, X31
	0x03A8F97C BL 0x3C3BC0C
	0x03A8F980 MOV W21, W0
	0x03A8F984 MOV X0, X20
	0x03A8F988 MOV X1, X31
	0x03A8F98C BL 0x3C03964
	0x03A8F990 CMP W0, 0x0
	0x03A8F994 CSET W8, EQ
	0x03A8F998 AND W8, W21, W8, 0x0
	0x03A8F99C TBNZ X8, 0x0, 0x3A8F9B4
	0x03A8F9A0 MOV X0, X20
	0x03A8F9A4 MOV X1, X31
	0x03A8F9A8 BL 0x3C03964
	0x03A8F9AC CMP W0, 0x2
	0x03A8F9B0 B.NE 0x3A8F9BC
	0x03A8F9B4 MOVZ W8, 0x33
	0x03A8F9B8 B 0x3A8F9C0
	0x03A8F9BC MOVZ W8, 0x3B
	0x03A8F9C0 ADRP X9, 0x6C4000
	0x03A8F9C4 LDR X9, [X9 + 0x400]
	0x03A8F9C8 STR W8, [X19 + 0x174]
	0x03A8F9CC LDR X0, [X9]
	0x03A8F9D0 LDR W8, [X0 + 0xE0]
	0x03A8F9D4 CBNZ W8, 0x3A8F9DC
	0x03A8F9D8 BL 0x1C16DFC
	0x03A8F9DC MOV X0, X20
	0x03A8F9E0 MOV X1, X31
	0x03A8F9E4 BL 0x39E4590
	0x03A8F9E8 STR X0, [X19 + 0x190]
	0x03A8F9EC ADD X0, X31, 0x8
	0x03A8F9F0 MOV X1, X31
	0x03A8F9F4 BL 0x39B1DB4
	0x03A8F9F8 LDP X20, X19, [X31 + 0x60]
	0x03A8F9FC LDP X22, X21, [X31 + 0x50]
	0x03A8FA00 LDP X24, X23, [X31 + 0x40]
	0x03A8FA04 LDP X30, X25, [X31 + 0x30]
	0x03A8FA08 LDP D9, D8, [X31 + 0x20]
	0x03A8FA0C LDP D11, D10, [X31 + 0x10]
	0x03A8FA10 ADD X31, X31, 0x70
	0x03A8FA14 RET
	0x03A8FA18 BL 0x1C16F20
	0x03A8FA1C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x954000
	009 Move X22, 0x6C9000
	010 Move W8, [X23+894]
	011 Move X22, [X22+864]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x6C9000
	020 Move X0, [X0+864]
	021 Call 0x1C17CF4
	022 Move X0, 0x68E000
	023 Move X0, [X0+2216]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+894], W8
	027 Move X0, [X22]
	028 Move [X31+8], X31
	029 Move X23, [X19]
	030 Move X22, [X19+216]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X22
	036 Call Profiling.TryGetOrAddCameraSampler, X0
	037 Compare X0, 0
	038 JumpIfEqual {77}
	039 Move X22, [X0+32]
	040 Move X0, X31
	041 Call Time.get_frameCount
	042 Move [X31+16], X22
	043 Move [X31+24], W0
	044 Move [X31+28], W31
	045 Move [X31+32], X20
	046 Move [X31+40], X23
	047 Compare X21, 0
	048 JumpIfEqual {77}
	049 Move X22, 0x68E000
	050 Move X22, [X22+2216]
	051 Add X1, X31, 16
	052 Move X0, X21
	053 Move X2, X31
	054 Call RenderGraph.RecordAndExecute, X0, X1
	055 Move X8, [X22]
	056 Move [X31+8], X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X20
	064 Move X2, X19
	065 Call UniversalRenderPipeline.RecordRenderGraph, X0, X1, X2
	066 Add X0, X31, 8
	067 Move X1, X31
	068 Call RenderGraphExecution.Dispose, X0
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Add X31, X31, 96
	076 Return 
	077 Call 0x1C17F20
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X20, X0
	080 Move X0, X20
	081 Call 0x3EB2AD0
	082 Move X19, [X0]
	083 Call 0x3EB2AE0
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call RenderGraphExecution.Dispose, X0
	087 Compare X19, 0
	088 JumpIfEqual {69}
	089 Move X0, X19
	090 Call 0x1C17F18
	091 Move X19, X31
	092 Move X20, X0
	093 Add X0, X31, 8
	094 Move X1, X31
	095 Call RenderGraphExecution.Dispose, X0
	096 Compare X19, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X20
	099 Call 0x1D2D690
	100 Move X0, X19
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A92DB0 LDP V2, V3, [X31 + 0x120]
	0x03A92DB4 ADD X1, X31, 0x0
	0x03A92DB8 MOV X2, X31
	0x03A92DBC STP V0, V1, [X31 + 0x40]
	0x03A92DC0 STP V2, V3, [X31 + 0x60]
	0x03A92DC4 BL 0x3C27F74
	0x03A92DC8 LDP V1, V0, [X31 + 0xE0]
	0x03A92DCC LDP V3, V2, [X31 + 0xC0]
	0x03A92DD0 LDP X29, X30, [X31 + 0x140]
	0x03A92DD4 STP V1, V0, [X19 + 0x20]
	0x03A92DD8 STP V3, V2, [X19]
	0x03A92DDC LDP X20, X19, [X31 + 0x150]
	0x03A92DE0 ADD X31, X31, 0x160
	0x03A92DE4 RET
	0x03A92DE8 SUB X31, X31, 0x1D0
	0x03A92DEC STP X29, X30, [X31 + 0x1B0]
	0x03A92DF0 STP X20, X19, [X31 + 0x1C0]
	0x03A92DF4 ADRP X20, 0x950000
	0x03A92DF8 LDRB W8, [X20 + 0x38E]
	0x03A92DFC MOV X19, X0
	0x03A92E00 TBNZ X8, 0x0, 0x3A92E24
	0x03A92E04 ADRP X0, 0x661000
	0x03A92E08 LDR X0, [X0 + 0x598]
	0x03A92E0C BL 0x1C16CF4
	0x03A92E10 ADRP X0, 0x6C2000
	0x03A92E14 LDR X0, [X0 + 0x8C8]
	0x03A92E18 BL 0x1C16CF4
	0x03A92E1C MOVZ W8, 0x1
	0x03A92E20 STRB W8, [X20 + 0x38E]
	0x03A92E24 MOVI V0.2D, 0x0
	0x03A92E28 MOV X0, X31
	0x03A92E2C STR X31, [X31 + 0x1A0]
	0x03A92E30 STP V0, V0, [X31 + 0x180]
	0x03A92E34 BL 0x3C3BB1C
	0x03A92E38 TBZ X0, 0x0, 0x3A92EB4
	0x03A92E3C ADRP X20, 0x6C2000
	0x03A92E40 LDR X20, [X20 + 0x8C8]
	0x03A92E44 LDR X0, [X20]
	0x03A92E48 LDR W8, [X0 + 0xE0]
	0x03A92E4C CBNZ W8, 0x3A92E58
	0x03A92E50 BL 0x1C16DFC
	0x03A92E54 LDR X0, [X20]
	0x03A92E58 LDR X8, [X0 + 0xB8]
	0x03A92E5C LDR X20, [X8]
	0x03A92E60 CBZ X20, 0x3A92EC8
	0x03A92E64 MOV X0, X20
	0x03A92E68 MOV X1, X31
	0x03A92E6C BL 0x3A44BD0
	0x03A92E70 CBZ X0, 0x3A92EBC
	0x03A92E74 MOV X1, X0
	0x03A92E78 MOV X0, X19
	0x03A92E7C BL 0x3A93558
	0x03A92E80 TBNZ X0, 0x0, 0x3A92EC8
	0x03A92E84 ADRP X8, 0x661000
	0x03A92E88 LDR X8, [X8 + 0x598]
	0x03A92E8C LDR X19, [X19 + 0xD0]
	0x03A92E90 LDR X0, [X8]
	0x03A92E94 LDR W8, [X0 + 0xE0]
	0x03A92E98 CBNZ W8, 0x3A92EA0
	0x03A92E9C BL 0x1C16DFC
	0x03A92EA0 MOV X0, X19
	0x03A92EA4 MOV X1, X31
	0x03A92EA8 MOV X2, X31
	0x03A92EAC BL 0x3C354F8
	0x03A92EB0 B 0x3A92ECC
	0x03A92EB4 MOV W0, W31
	0x03A92EB8 B 0x3A92ECC
	0x03A92EBC LDR W8, [X19 + 0x168]
	0x03A92EC0 CMP W8, 0x2
	0x03A92EC4 B.NE 0x3A92EE0
	0x03A92EC8 MOVZ W0, 0x1
	0x03A92ECC LDP X20, X19, [X31 + 0x1C0]
	0x03A92ED0 LDP X29, X30, [X31 + 0x1B0]
	0x03A92ED4 AND W0, W0, 0x1
	0x03A92ED8 ADD X31, X31, 0x1D0
	0x03A92EDC RET
	0x03A92EE0 ADD X8, X31, 0x150
	0x03A92EE4 MOV X0, X20
	0x03A92EE8 MOV X1, X31
	0x03A92EEC BL 0x3A4AD34
	0x03A92EF0 LDP V0, V1, [X31 + 0x150]
	0x03A92EF4 LDR X8, [X31 + 0x170]
	0x03A92EF8 ADD X0, X31, 0x180
	0x03A92EFC ADD X1, X31, 0x120
	0x03A92F00 MOVN W3, 0x0
	0x03A92F04 MOV W2, W31
	0x03A92F08 MOV W4, W31
	0x03A92F0C MOV X5, X31
	0x03A92F10 STP V0, V1, [X31 + 0x120]
	0x03A92F14 STR X8, [X31 + 0x140]
	0x03A92F18 BL 0x3C4B098
	0x03A92F1C LDR X8, [X31 + 0x1A0]
	0x03A92F20 LDP V0, V1, [X31 + 0x180]
	0x03A92F24 MOVZ W0, 0x2
	0x03A92F28 MOV X1, X31
	0x03A92F2C STR X8, [X31 + 0x170]
	0x03A92F30 ADD X8, X31, 0xF0
	0x03A92F34 STP V0, V1, [X31 + 0x150]
	0x03A92F38 BL 0x3C4B204
	0x03A92F3C LDP V0, V1, [X31 + 0xF0]
	0x03A92F40 LDR X8, [X31 + 0x110]
	0x03A92F44 LDP V2, V3, [X31 + 0x150]
	0x03A92F48 LDR X9, [X31 + 0x170]
	0x03A92F4C ADD X0, X31, 0xC0
	0x03A92F50 ADD X1, X31, 0x90
	0x03A92F54 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x951000
	010 Move X21, 0x68B000
	011 Move X24, 0x6BD000
	012 Move X19, 0x6BD000
	013 Move X23, 0x663000
	014 Move X22, 0x666000
	015 Move X20, 0x6C6000
	016 Move X21, [X21+2216]
	017 Move W8, [X25+895]
	018 Move X24, [X24+8]
	019 Move X19, [X19+16]
	020 Move X23, [X23+3632]
	021 Move X22, [X22+2928]
	022 Move X20, [X20+648]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {53}
	027 Move X0, 0x666000
	028 Move X0, [X0+2928]
	029 Call 0x1C17CF4
	030 Move X0, 0x6BD000
	031 Move X0, [X0+16]
	032 Call 0x1C17CF4
	033 Move X0, 0x663000
	034 Move X0, [X0+3632]
	035 Call 0x1C17CF4
	036 Move X0, 0x6BD000
	037 Move X0, [X0+8]
	038 Call 0x1C17CF4
	039 Move X0, 0x6C6000
	040 Move X0, [X0+944]
	041 Call 0x1C17CF4
	042 Move X0, 0x6C6000
	043 Move X0, [X0+952]
	044 Call 0x1C17CF4
	045 Move X0, 0x6C6000
	046 Move X0, [X0+648]
	047 Call 0x1C17CF4
	048 Move X0, 0x68B000
	049 Move X0, [X0+2216]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+895], W8
	053 Move X8, [X21]
	054 Move X9, -49967104
	055 Move V0, [X9+71]
	056 Move X9, -49958912
	057 Move X10, [X8+184]
	058 Move V1, [X9+187]
	059 Move X25, 0x6C6000
	060 Move [X10], W31
	061 Move [X10+28], V0
	062 Move X9, [X8+184]
	063 Move X10, -49958912
	064 Move [X9+44], V1
	065 Move V1, [X10+243]
	066 Move X9, [X8+184]
	067 Move [X9+60], V1
	068 Move X9, [X8+184]
	069 Move [X9+76], V0
	070 Move X8, [X8+184]
	071 Move [X8+100], X31
	072 Move [X8+92], X31
	073 Move X0, [X24]
	074 Move X24, 0x6C6000
	075 Move X25, [X25+944]
	076 Move X24, [X24+952]
	077 Call 0x1C17F10
	078 Move X1, [X19]
	079 Move X19, X0
	080 Call List`1<Vector4>..ctor, X0
	081 Move X8, [X21]
	082 Move X8, [X8+184]
	083 Move [X8+112], X19
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move X1, [X22]
	087 Move X19, X0
	088 Call List`1<Int32>..ctor, X0
	089 Move X8, [X21]
	090 Move X8, [X8+184]
	091 Move [X8+120], X19
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Move X8, [X0+184]
	099 Move X0, [X25]
	100 Move X19, [X8]
	101 Call 0x1C17F10
	102 Move X2, [X24]
	103 Move X1, X19
	104 Move X3, X31
	105 Move X20, X0
	106 Call RequestLightsDelegate..ctor, X0, X1, X2
	107 Move X8, [X21]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X8, [X8+184]
	113 Move [X8+128], X20
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return 

