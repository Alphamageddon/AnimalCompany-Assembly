Type: UnityEngine.Rendering.Universal.MotionVectorRenderPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Material cameraMaterial, UnityEngine.Material objectMaterial)

Disassembly:
	0x03A5EC2C STRB W8, [X19 + 0x237]
	0x03A5EC30 LDR X0, [X20]
	0x03A5EC34 MOVZ W1, 0x1
	0x03A5EC38 BL 0x1C16D6C
	0x03A5EC3C CBZ X0, 0x3A5EC78
	0x03A5EC40 LDR W8, [X0 + 0x18]
	0x03A5EC44 CBZ W8, 0x3A5EC7C
	0x03A5EC48 ADRP X8, 0x6F8000
	0x03A5EC4C LDR X8, [X8 + 0x538]
	0x03A5EC50 ADRP X9, 0x6F8000
	0x03A5EC54 LDR X8, [X8]
	0x03A5EC58 LDR X9, [X9 + 0x4E0]
	0x03A5EC5C LDP X20, X19, [X31 + 0x10]
	0x03A5EC60 STR X8, [X0 + 0x20]
	0x03A5EC64 LDR X8, [X9]
	0x03A5EC68 LDR X8, [X8 + 0xB8]
	0x03A5EC6C STR X0, [X8]
	0x03A5EC70 LDR X30, [X31], #0x20
	0x03A5EC74 RET
	0x03A5EC78 BL 0x1C16F20
	0x03A5EC7C BL 0x1C16F28
	0x03A5EC80 STR X30, [X31 - 0x20]!
	0x03A5EC84 STP X20, X19, [X31 + 0x10]
	0x03A5EC88 ADRP X19, 0x984000
	0x03A5EC8C ADRP X20, 0x6F8000
	0x03A5EC90 LDRB W8, [X19 + 0x238]
	0x03A5EC94 LDR X20, [X20 + 0x528]
	0x03A5EC98 TBNZ X8, 0x0, 0x3A5ECB0
	0x03A5EC9C ADRP X0, 0x6F8000
	0x03A5ECA0 LDR X0, [X0 + 0x528]
	0x03A5ECA4 BL 0x1C16CF4
	0x03A5ECA8 MOVZ W8, 0x1
	0x03A5ECAC STRB W8, [X19 + 0x238]
	0x03A5ECB0 LDR X0, [X20]
	0x03A5ECB4 BL 0x1C16F10
	0x03A5ECB8 MOV X1, X31
	0x03A5ECBC MOV X19, X0
	0x03A5ECC0 BL 0x33BDD8C
	0x03A5ECC4 LDR X8, [X20]
	0x03A5ECC8 LDR X8, [X8 + 0xB8]
	0x03A5ECCC STR X19, [X8]
	0x03A5ECD0 LDP X20, X19, [X31 + 0x10]
	0x03A5ECD4 LDR X30, [X31], #0x20
	0x03A5ECD8 RET
	0x03A5ECDC MOV X1, X31
	0x03A5ECE0 B 0x33BDD8C
	0x03A5ECE4 SUB X31, X31, 0xB0
	0x03A5ECE8 STR X30, [X31 + 0x80]
	0x03A5ECEC STP X22, X21, [X31 + 0x90]
	0x03A5ECF0 STP X20, X19, [X31 + 0xA0]
	0x03A5ECF4 ADRP X21, 0x984000
	0x03A5ECF8 LDRB W8, [X21 + 0x239]
	0x03A5ECFC MOV X20, X2
	0x03A5ED00 MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x985000
	009 Move X23, 0x6F6000
	010 Move W8, [X24+560]
	011 Move X23, [X23+4080]
	012 Move X20, X3
	013 Move X21, X2
	014 Move W22, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x6F9000
	021 Move X0, [X0+1240]
	022 Call 0x1C17CF4
	023 Move X0, 0x6F7000
	024 Move X0, [X0+168]
	025 Call 0x1C17CF4
	026 Move X0, 0x6F6000
	027 Move X0, [X0+4080]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+560], W8
	031 Move X0, [X23]
	032 Move X24, 0x6F9000
	033 Move X23, 0x6F7000
	034 Move W8, [X0+224]
	035 Move X24, [X24+1240]
	036 Move X23, [X23+168]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call ScriptableRenderPass..ctor, X0
	043 Move [X19+16], W22
	044 Move [X19+240], X21
	045 Move [X19+248], X20
	046 Move X0, [X24]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X20, X0
	050 Call Object..ctor, X0
	051 Move [X19+256], X20
	052 Move X1, [X23]
	053 Move W0, 28
	054 Call 0x2236BC0, X0
	055 Move W8, 1
	056 Move [X19+56], X0
	057 Move [X19+200], W8
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 

Method: System.Void Setup(UnityEngine.Rendering.RTHandle color, UnityEngine.Rendering.RTHandle depth)

Disassembly:
	0x03A5ED0C LDR X0, [X0 + 0x4E0]
	0x03A5ED10 BL 0x1C16CF4

ISIL:
	001 Move [X0+224], X1
	002 Move [X0+232], X2
	003 Return 

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03A5ED14 ADRP X0, 0x6F2000
	0x03A5ED18 LDR X0, [X0 + 0xA88]
	0x03A5ED1C BL 0x1C16CF4
	0x03A5ED20 ADRP X0, 0x6F8000
	0x03A5ED24 LDR X0, [X0 + 0x540]
	0x03A5ED28 BL 0x1C16CF4
	0x03A5ED2C MOVZ W8, 0x1
	0x03A5ED30 STRB W8, [X21 + 0x239]
	0x03A5ED34 CBZ X20, 0x3A5EDF4
	0x03A5ED38 CBZ X19, 0x3A5EDF4
	0x03A5ED3C ADRP X8, 0x6F8000
	0x03A5ED40 LDR X8, [X8 + 0x4E0]
	0x03A5ED44 ADRP X22, 0x6F2000
	0x03A5ED48 LDR X21, [X20 + 0x10]
	0x03A5ED4C ADD X20, X19, 0x28
	0x03A5ED50 LDR X0, [X8]
	0x03A5ED54 LDR W8, [X0 + 0xE0]
	0x03A5ED58 LDR X22, [X22 + 0xA88]
	0x03A5ED5C CBNZ W8, 0x3A5ED64
	0x03A5ED60 BL 0x1C16DFC
	0x03A5ED64 MOV X0, X21
	0x03A5ED68 MOV X1, X19
	0x03A5ED6C MOV X2, X20
	0x03A5ED70 BL 0x3A5DDF0
	0x03A5ED74 LDR X0, [X22]
	0x03A5ED78 LDR X20, [X19 + 0x28]
	0x03A5ED7C LDR X19, [X19 + 0x10]
	0x03A5ED80 LDR W8, [X0 + 0xE0]
	0x03A5ED84 CBNZ W8, 0x3A5ED8C
	0x03A5ED88 BL 0x1C16DFC
	0x03A5ED8C ADD X8, X31, 0x28
	0x03A5ED90 MOV X0, X19
	0x03A5ED94 MOV X1, X31
	0x03A5ED98 BL 0x399A594
	0x03A5ED9C LDUR V0, [X31 + 0x28]
	0x03A5EDA0 LDUR V1, [X31 + 0x38]
	0x03A5EDA4 LDR X8, [X31 + 0x48]
	0x03A5EDA8 STP V0, V1, [X31 + 0x50]
	0x03A5EDAC STR X8, [X31 + 0x70]
	0x03A5EDB0 CBZ X20, 0x3A5EDF4
	0x03A5EDB4 ADRP X8, 0x6F8000
	0x03A5EDB8 LDR X8, [X8 + 0x540]
	0x03A5EDBC LDP V0, V1, [X31 + 0x50]
	0x03A5EDC0 LDR X9, [X31 + 0x70]
	0x03A5EDC4 ADD X2, X31, 0x0
	0x03A5EDC8 LDR X1, [X8]
	0x03A5EDCC MOV X0, X20
	0x03A5EDD0 MOV X3, X31
	0x03A5EDD4 STP V0, V1, [X31]
	0x03A5EDD8 STR X9, [X31 + 0x20]
	0x03A5EDDC BL 0x3C4FC28
	0x03A5EDE0 LDP X20, X19, [X31 + 0xA0]
	0x03A5EDE4 LDP X22, X21, [X31 + 0x90]
	0x03A5EDE8 LDR X30, [X31 + 0x80]
	0x03A5EDEC ADD X31, X31, 0xB0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+160], X20
	004 Move [X31+168], X19
	005 Move X8, [X0+224]
	006 Compare X8, 0
	007 JumpIfEqual {65}
	008 Move X20, X1
	009 Move X9, [X8+72]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move X1, [X8+88]
	013 Move [X31+128], X9
	014 Move [X31+96], V1
	015 Move [X31+104], V0
	016 Compare X20, 0
	017 JumpIfEqual {65}
	018 Move V0, [X31+96]
	019 Move V1, [X31+112]
	020 Move X8, [X31+128]
	021 Move X19, X0
	022 Add X2, X31, 48
	023 Move X0, X20
	024 Move X3, X31
	025 Move [X31+48], V0
	026 Move [X31+56], V1
	027 Move [X31+80], X8
	028 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	029 Move X8, [X19+232]
	030 Compare X8, 0
	031 JumpIfEqual {65}
	032 Move X9, [X8+72]
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move X1, [X8+88]
	036 Add X2, X31, 0
	037 Move X0, X20
	038 Move X3, X31
	039 Move [X31+32], X9
	040 Move [X31], V1
	041 Move [X31+8], V0
	042 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	043 Move X1, [X19+224]
	044 Move X2, [X19+232]
	045 Move X0, X19
	046 Move X3, X31
	047 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	048 Move S0, W31
	049 Move S1, W31
	050 Move S2, W31
	051 Move S3, 1
	052 Move W1, 3
	053 Move X0, X19
	054 Move X2, X31
	055 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	056 Move W1, 3
	057 Move X0, X19
	058 Move X2, X31
	059 Call ScriptableRenderPass.ConfigureDepthStoreAction, X0, X1
	060 Move X20, [X31+160]
	061 Move X19, [X31+168]
	062 Move X30, [X31+144]
	063 Add X31, X31, 176
	064 Return 
	065 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.MotionVectorRenderPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A5EDF0 RET
	0x03A5EDF4 BL 0x1C16F20
	0x03A5EDF8 SUB X31, X31, 0x150
	0x03A5EDFC STP X29, X30, [X31 + 0xF0]
	0x03A5EE00 STP X28, X27, [X31 + 0x100]
	0x03A5EE04 STP X26, X25, [X31 + 0x110]
	0x03A5EE08 STP X24, X23, [X31 + 0x120]
	0x03A5EE0C STP X22, X21, [X31 + 0x130]
	0x03A5EE10 STP X20, X19, [X31 + 0x140]
	0x03A5EE14 ADRP X23, 0x984000
	0x03A5EE18 ADRP X24, 0x6F5000
	0x03A5EE1C LDRB W8, [X23 + 0x23A]
	0x03A5EE20 LDR X24, [X24 + 0xFF0]
	0x03A5EE24 MOV X20, X3
	0x03A5EE28 MOV X21, X2
	0x03A5EE2C MOV W22, W1
	0x03A5EE30 MOV X19, X0
	0x03A5EE34 TBNZ X8, 0x0, 0x3A5EED0
	0x03A5EE38 ADRP X0, 0x696000
	0x03A5EE3C LDR X0, [X0 + 0xE58]
	0x03A5EE40 BL 0x1C16CF4
	0x03A5EE44 ADRP X0, 0x6F8000
	0x03A5EE48 LDR X0, [X0 + 0x548]
	0x03A5EE4C BL 0x1C16CF4
	0x03A5EE50 ADRP X0, 0x6F2000
	0x03A5EE54 LDR X0, [X0 + 0x598]
	0x03A5EE58 BL 0x1C16CF4
	0x03A5EE5C ADRP X0, 0x6F4000
	0x03A5EE60 LDR X0, [X0 + 0xF30]
	0x03A5EE64 BL 0x1C16CF4
	0x03A5EE68 ADRP X0, 0x6F2000
	0x03A5EE6C LDR X0, [X0 + 0x9B0]
	0x03A5EE70 BL 0x1C16CF4
	0x03A5EE74 ADRP X0, 0x6F6000
	0x03A5EE78 LDR X0, [X0 + 0xB18]
	0x03A5EE7C BL 0x1C16CF4
	0x03A5EE80 ADRP X0, 0x6F5000
	0x03A5EE84 LDR X0, [X0 + 0xFF0]
	0x03A5EE88 BL 0x1C16CF4
	0x03A5EE8C ADRP X0, 0x6F8000
	0x03A5EE90 LDR X0, [X0 + 0x550]
	0x03A5EE94 BL 0x1C16CF4
	0x03A5EE98 ADRP X0, 0x6F8000
	0x03A5EE9C LDR X0, [X0 + 0x558]
	0x03A5EEA0 BL 0x1C16CF4
	0x03A5EEA4 ADRP X0, 0x6F8000
	0x03A5EEA8 LDR X0, [X0 + 0x560]
	0x03A5EEAC BL 0x1C16CF4
	0x03A5EEB0 ADRP X0, 0x6F8000
	0x03A5EEB4 LDR X0, [X0 + 0x568]
	0x03A5EEB8 BL 0x1C16CF4
	0x03A5EEBC ADRP X0, 0x6F8000
	0x03A5EEC0 LDR X0, [X0 + 0x570]
	0x03A5EEC4 BL 0x1C16CF4
	0x03A5EEC8 MOVZ W8, 0x1
	0x03A5EECC STRB W8, [X23 + 0x23A]
	0x03A5EED0 LDR X0, [X24]
	0x03A5EED4 STR W31, [X31 + 0xEC]
	0x03A5EED8 ADRP X26, 0x6F2000
	0x03A5EEDC ADRP X23, 0x6F8000
	0x03A5EEE0 ADRP X25, 0x6F8000
	0x03A5EEE4 LDR W8, [X0 + 0xE0]
	0x03A5EEE8 LDR X26, [X26 + 0x598]
	0x03A5EEEC LDR X23, [X23 + 0x560]
	0x03A5EEF0 LDR X25, [X25 + 0x548]
	0x03A5EEF4 CBNZ W8, 0x3A5EEFC
	0x03A5EEF8 BL 0x1C16DFC
	0x03A5EEFC MOV X0, X19
	0x03A5EF00 MOV X1, X31
	0x03A5EF04 BL 0x3A4225C
	0x03A5EF08 LDR X0, [X26]
	0x03A5EF0C BL 0x1C16F10
	0x03A5EF10 LDR X1, [X23]
	0x03A5EF14 MOV X2, X31
	0x03A5EF18 MOV X23, X0
	0x03A5EF1C BL 0x39B19AC
	0x03A5EF20 STR X23, [X19 + 0x38]
	0x03A5EF24 STR W22, [X19 + 0x10]
	0x03A5EF28 STR X21, [X19 + 0x1A0]
	0x03A5EF2C LDR X0, [X25]
	0x03A5EF30 BL 0x1C16F10
	0x03A5EF34 MOV X1, X21
	0x03A5EF38 MOV X2, X31
	0x03A5EF3C MOV X22, X0
	0x03A5EF40 BL 0x3A65E80
	0x03A5EF44 MOVZ W0, 0x6
	0x03A5EF48 MOVZ W1, 0x4
	0x03A5EF4C MOV X2, X31
	0x03A5EF50 STR X22, [X19 + 0x198]
	0x03A5EF54 BL 0x3C3C4BC
	0x03A5EF58 TBZ X0, 0x0, 0x3A5EF94
	0x03A5EF5C MOV X0, X31
	0x03A5EF60 BL 0x3C3BA7C
	0x03A5EF64 CBZ X0, 0x3A5F388
	0x03A5EF68 MOV X1, X31
	0x03A5EF6C BL 0x322B6E4
	0x03A5EF70 CBZ X0, 0x3A5F388
	0x03A5EF74 ADRP X8, 0x6F8000
	0x03A5EF78 LDR X8, [X8 + 0x558]
	0x03A5EF7C MOV X2, X31
	0x03A5EF80 LDR X1, [X8]
	0x03A5EF84 BL 0x322BD1C
	0x03A5EF88 TBZ X0, 0x0, 0x3A5EF94
	0x03A5EF8C MOVZ W8, 0x6
	0x03A5EF90 B 0x3A5EF98
	0x03A5EF94 MOVZ W8, 0x8
	0x03A5EF98 ADRP X25, 0x696000
	0x03A5EF9C ADRP X22, 0x6F8000
	0x03A5EFA0 LDR X25, [X25 + 0xE58]
	0x03A5EFA4 LDR X22, [X22 + 0x550]
	0x03A5EFA8 MOVZ W0, 0x15
	0x03A5EFAC MOVZ W1, 0x5
	0x03A5EFB0 MOV X2, X31
	0x03A5EFB4 STR W8, [X19 + 0x208]
	0x03A5EFB8 MOVZ W21, 0x15
	0x03A5EFBC BL 0x3C3C4BC
	0x03A5EFC0 TBNZ X0, 0x0, 0x3A5EFE0
	0x03A5EFC4 MOVZ W0, 0x2D
	0x03A5EFC8 MOVZ W1, 0x5
	0x03A5EFCC MOV X2, X31
	0x03A5EFD0 MOVZ W21, 0x2D
	0x03A5EFD4 MOVZ W23, 0x5
	0x03A5EFD8 BL 0x3C3C4BC
	0x03A5EFDC TBZ X0, 0x0, 0x3A5EFE8
	0x03A5EFE0 STR W21, [X19 + 0x20C]
	0x03A5EFE4 B 0x3A5EFEC
	0x03A5EFE8 STR W23, [X19 + 0x20C]
	0x03A5EFEC LDR X0, [X25]
	0x03A5EFF0 ADRP X28, 0x6F4000
	0x03A5EFF4 LDR X28, [X28 + 0xF30]
	0x03A5EFF8 MOVZ W1, 0x10
	0x03A5EFFC BL 0x1C16D6C
	0x03A5F000 LDR X8, [X22]
	0x03A5F004 MOV X21, X0
	0x03A5F008 LDR W9, [X8 + 0xE0]
	0x03A5F00C CBNZ W9, 0x3A5F01C
	0x03A5F010 MOV X0, X8
	0x03A5F014 BL 0x1C16DFC
	0x03A5F018 LDR X8, [X22]
	0x03A5F01C LDR X8, [X8 + 0xB8]
	0x03A5F020 ADRP X23, 0x6F7000
	0x03A5F024 LDR X23, [X23 + 0x568]
	0x03A5F028 ADRP X26, 0x6F7000
	0x03A5F02C STR X21, [X8 + 0xC8]
	0x03A5F030 LDR X0, [X25]
	0x03A5F034 ADRP X27, 0x6F1000
	0x03A5F038 ADRP X25, 0x6F5000
	0x03A5F03C LDR X26, [X26 + 0x570]
	0x03A5F040 LDR X27, [X27 + 0x9B0]
	0x03A5F044 LDR X25, [X25 + 0xB18]
	0x03A5F048 MOVZ W1, 0x10
	0x03A5F04C BL 0x1C16D6C
	0x03A5F050 LDR X8, [X22]
	0x03A5F054 MOVZ W1, 0x10
	0x03A5F058 LDR X8, [X8 + 0xB8]
	0x03A5F05C STR X0, [X8 + 0xD0]
	0x03A5F060 LDR X0, [X28]
	0x03A5F064 BL 0x1C16D6C
	0x03A5F068 STR X0, [X19 + 0x168]
	0x03A5F06C LDR X0, [X28]
	0x03A5F070 MOVZ W1, 0x10
	0x03A5F074 BL 0x1C16D6C
	0x03A5F078 MOV W21, W31
	0x03A5F07C STR X0, [X19 + 0x160]
	0x03A5F080 STR W31, [X31 + 0xEC]
	0x03A5F084 LDR X0, [X22]
	0x03A5F088 LDR W8, [X0 + 0xE0]
	0x03A5F08C CBNZ W8, 0x3A5F09C
	0x03A5F090 BL 0x1C16DFC
	0x03A5F094 LDR X0, [X22]
	0x03A5F098 LDR W21, [X31 + 0xEC]
	0x03A5F09C LDR X8, [X0 + 0xB8]
	0x03A5F0A0 ADD X0, X31, 0xEC
	0x03A5F0A4 MOV X1, X31
	0x03A5F0A8 LDR X28, [X8 + 0xC8]
	0x03A5F0AC BL 0x337B6E0
	0x03A5F0B0 LDR X8, [X23]
	0x03A5F0B4 MOV X1, X0
	0x03A5F0B8 MOV X2, X31
	0x03A5F0BC MOV X0, X8
	0x03A5F0C0 BL 0x321B938
	0x03A5F0C4 MOV X1, X31
	0x03A5F0C8 BL 0x3C124EC
	0x03A5F0CC CBZ X28, 0x3A5F388
	0x03A5F0D0 LDR W8, [X28 + 0x18]
	0x03A5F0D4 CMP W21, W8
	0x03A5F0D8 B.CS 0x3A5F38C
	0x03A5F0DC ADD X8, X28, W21, 0x2, SXTW
	0x03A5F0E0 STR W0, [X8 + 0x20]
	0x03A5F0E4 LDR X8, [X22]
	0x03A5F0E8 LDRSW X28, [X31 + 0xEC]
	0x03A5F0EC ADD X0, X31, 0xEC
	0x03A5F0F0 MOV X1, X31
	0x03A5F0F4 LDR X8, [X8 + 0xB8]
	0x03A5F0F8 LDR X21, [X8 + 0xD0]
	0x03A5F0FC BL 0x337B6E0
	0x03A5F100 LDR X8, [X26]
	0x03A5F104 MOV X1, X0
	0x03A5F108 MOV X2, X31
	0x03A5F10C MOV X0, X8
	0x03A5F110 BL 0x321B938
	0x03A5F114 MOV X1, X31
	0x03A5F118 BL 0x3C124EC
	0x03A5F11C CBZ X21, 0x3A5F388
	0x03A5F120 LDR W8, [X21 + 0x18]
	0x03A5F124 CMP W28, W8
	0x03A5F128 B.CS 0x3A5F38C
	0x03A5F12C ADD X8, X21, X28, 0x2, LSL
	0x03A5F130 STR W0, [X8 + 0x20]
	0x03A5F134 LDR X8, [X22]
	0x03A5F138 LDR X8, [X8 + 0xB8]
	0x03A5F13C LDR X8, [X8 + 0xC8]
	0x03A5F140 CBZ X8, 0x3A5F388
	0x03A5F144 LDRSW X28, [X31 + 0xEC]
	0x03A5F148 LDR W9, [X8 + 0x18]
	0x03A5F14C CMP W28, W9
	0x03A5F150 B.CS 0x3A5F38C
	0x03A5F154 ADD X8, X8, X28, 0x2, LSL
	0x03A5F158 LDR W0, [X8 + 0x20]
	0x03A5F15C LDR X29, [X19 + 0x168]
	0x03A5F160 ADD X8, X31, 0x90
	0x03A5F164 MOV X1, X31
	0x03A5F168 BL 0x3C4B258
	0x03A5F16C LDP V0, V1, [X31 + 0x90]
	0x03A5F170 LDR X8, [X31 + 0xB0]
	0x03A5F174 ADD X0, X31, 0xEC
	0x03A5F178 MOV X1, X31
	0x03A5F17C STP V0, V1, [X31 + 0xC0]
	0x03A5F180 STR X8, [X31 + 0xE0]
	0x03A5F184 BL 0x337B6E0
	0x03A5F188 LDR X8, [X23]
	0x03A5F18C MOV X1, X0
	0x03A5F190 MOV X2, X31
	0x03A5F194 MOV X0, X8
	0x03A5F198 BL 0x321B938
	0x03A5F19C LDR X8, [X27]
	0x03A5F1A0 MOV X21, X0
	0x03A5F1A4 LDR W9, [X8 + 0xE0]
	0x03A5F1A8 CBNZ W9, 0x3A5F1B4
	0x03A5F1AC MOV X0, X8
	0x03A5F1B0 BL 0x1C16DFC
	0x03A5F1B4 LDP V0, V1, [X31 + 0xC0]
	0x03A5F1B8 LDR X8, [X31 + 0xE0]
	0x03A5F1BC ADD X0, X31, 0x60
	0x03A5F1C0 MOV X1, X21
	0x03A5F1C4 MOV X2, X31
	0x03A5F1C8 STP V0, V1, [X31 + 0x60]
	0x03A5F1CC STR X8, [X31 + 0x80]
	0x03A5F1D0 BL 0x39D6AD0
	0x03A5F1D4 CBZ X29, 0x3A5F388
	0x03A5F1D8 MOV X21, X0
	0x03A5F1DC CBZ X0, 0x3A5F1F4
	0x03A5F1E0 LDR X8, [X29]
	0x03A5F1E4 MOV X0, X21
	0x03A5F1E8 LDR X1, [X8 + 0x40]
	0x03A5F1EC BL 0x1C16E00
	0x03A5F1F0 CBZ X0, 0x3A5F390
	0x03A5F1F4 LDR W8, [X29 + 0x18]
	0x03A5F1F8 CMP W28, W8
	0x03A5F1FC B.CS 0x3A5F38C
	0x03A5F200 ADD X8, X29, X28, 0x3, LSL

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+288], X29
	003 Move [X31+296], X30
	004 Move [X31+304], X26
	005 Move [X31+312], X25
	006 Move [X31+320], X24
	007 Move [X31+328], X23
	008 Move [X31+336], X22
	009 Move [X31+344], X21
	010 Move [X31+352], X20
	011 Move [X31+360], X19
	012 Move X21, 0x985000
	013 Move W8, [X21+561]
	014 Move X19, X2
	015 Move X20, X1
	016 Move [X31+280], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x6F7000
	022 Move X0, [X0+2328]
	023 Call 0x1C17CF4
	024 Move X0, 0x6F9000
	025 Move X0, [X0+1248]
	026 Call 0x1C17CF4
	027 Move X0, 0x696000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F7000
	031 Move X0, [X0+168]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F3000
	034 Move X0, [X0+3200]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F9000
	037 Move X0, [X0+1256]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F9000
	040 Move X0, [X0+1264]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F9000
	043 Move X0, [X0+1272]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F9000
	046 Move X0, [X0+1280]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+561], W8
	050 Move [X31+272], X31
	051 Move [X31+264], W31
	052 Compare X20, 0
	053 JumpIfEqual {264}
	054 Move X22, 0x696000
	055 Move X22, [X22+1432]
	056 Move X21, [X20+736]
	057 Move X20, [X20+744]
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {252}
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {252}
	084 Move X22, [X19+216]
	085 Compare X22, 0
	086 JumpIfEqual {264}
	087 Move X8, 0x6F7000
	088 Move X8, [X8+2328]
	089 Add X1, X31, 272
	090 Move X0, X22
	091 Move X2, [X8]
	092 Call 0x21A5990, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {252}
	097 Move X8, [X31+272]
	098 Compare X8, 0
	099 JumpIfEqual {264}
	100 Move X25, [X8+144]
	101 Compare X25, 0
	102 JumpIfEqual {252}
	103 Move X0, X22
	104 Move X1, X31
	105 Call Camera.get_cameraType, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, 0x6F7000
	108 Move X23, [X19]
	109 Move X8, [X8+168]
	110 Move W0, 28
	111 Add X24, X19, 24
	112 Move X1, [X8]
	113 Call 0x2236BC0, X0
	114 Move X2, X0
	115 Add X0, X31, 264
	116 Move X1, X23
	117 Move X3, X31
	118 Call ProfilingScope..ctor, X0, X1, X2
	119 Move X1, X24
	120 Call MotionVectorsPersistentData.GetXRMultiPassId, X0, X1
	121 Move X8, 0x6F3000
	122 Move X8, [X8+3200]
	123 Move W24, W0
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Add X0, X31, 280
	130 Move X1, X23
	131 Move X2, X31
	132 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	133 Compare X23, 0
	134 JumpIfEqual {265}
	135 Move X0, X23
	136 Move X1, X31
	137 Call CommandBuffer.Clear, X0
	138 Move X0, [X19+400]
	139 Compare X0, 0
	140 JumpIfEqual {266}
	141 Move X1, X31
	142 Call XRPass.get_enabled, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {171}
	147 Move X0, [X19+400]
	148 Compare X0, 0
	149 JumpIfEqual {271}
	150 Move X1, X31
	151 Call XRPass.get_singlePassEnabled, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {171}
	156 Move X8, 0x6F9000
	157 Move X2, [X25+24]
	158 Move X8, [X8+1272]
	159 Move X1, [X8]
	160 Move X0, X23
	161 Move X3, X31
	162 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	163 Move X8, 0x6F9000
	164 Move X2, [X25+16]
	165 Call 0x3EB296C
	166 Return 
	167 Move X1, [X8]
	168 Move X0, X23
	169 Move X3, X31
	170 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	171 Move X8, [X25+24]
	172 Compare X8, 0
	173 JumpIfEqual {267}
	174 Move W9, [X8+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X26, W24
	177 Add X8, X8, X26
	178 Move V0, [X8+64]
	179 Move V1, [X8+80]
	180 Move V2, [X8+32]
	181 Move V3, [X8+48]
	182 Move X8, 0x6F8000
	183 Move X8, [X8+1280]
	184 Move [X31+224], V0
	185 Move [X31+232], V1
	186 Move [X31+192], V2
	187 Move [X31+200], V3
	188 Move [X31+128], V2
	189 Move [X31+136], V3
	190 Move X1, [X8]
	191 Move [X31+160], V0
	192 Move [X31+168], V1
	193 Add X2, X31, 128
	194 Move X0, X23
	195 Move X3, X31
	196 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	197 Move X8, [X25+16]
	198 Compare X8, 0
	199 JumpIfEqual {269}
	200 Move W9, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X9, 0x6F8000
	203 Move X9, [X9+1256]
	204 Add X8, X8, X26
	205 Move V0, [X8+64]
	206 Move V1, [X8+80]
	207 Move V2, [X8+32]
	208 Move V3, [X8+48]
	209 Move X1, [X9]
	210 Move [X31+96], V0
	211 Move [X31+104], V1
	212 Move [X31+64], V2
	213 Move [X31+72], V3
	214 Move [X31], V2
	215 Move [X31+8], V3
	216 Move [X31+32], V0
	217 Move [X31+40], V1
	218 Add X2, X31, 0
	219 Move X0, X23
	220 Move X3, X31
	221 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	222 Move X0, X22
	223 Move X1, X31
	224 Call Camera.get_depthTextureMode, X0
	225 Move W8, 5
	226 Or W1, W0, W8
	227 Move X0, X22
	228 Move X2, X31
	229 Call Camera.set_depthTextureMode, X0, X1
	230 Move X8, 0x6F8000
	231 Move X8, [X8+1248]
	232 Move X24, [X31+280]
	233 Move X0, [X8]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X24
	239 Move X1, X23
	240 Move X2, X19
	241 Move X4, X21
	242 Call MotionVectorRenderPass.DrawCameraMotionVectors, X0, X1, X2, X3, X4
	243 Move X0, [X31+280]
	244 Move X1, X19
	245 Move X2, X22
	246 Move X3, X20
	247 Move X4, X23
	248 Call MotionVectorRenderPass.DrawObjectMotionVectors, X0, X1, X2, X3, X4
	249 Add X0, X31, 264
	250 Move X1, X31
	251 Call ProfilingScope.Dispose, X0
	252 Move X20, [X31+352]
	253 Move X19, [X31+360]
	254 Move X22, [X31+336]
	255 Move X21, [X31+344]
	256 Move X24, [X31+320]
	257 Move X23, [X31+328]
	258 Move X26, [X31+304]
	259 Move X25, [X31+312]
	260 Move X29, [X31+288]
	261 Move X30, [X31+296]
	262 Add X31, X31, 368
	263 Return 
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F28
	269 Call 0x1C17F20
	270 Call 0x1C17F28
	271 Call 0x1C17F20
	272 Move X19, X0
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move X0, X19
	275 Call 0x3EB2AD0
	276 Move X20, [X0]
	277 Call 0x3EB2AE0
	278 Add X0, X31, 264
	279 Move X1, X31
	280 Call ProfilingScope.Dispose, X0
	281 Compare X20, 0
	282 JumpIfEqual {252}
	283 Move X0, X20
	284 Call 0x1C17F18
	285 Move X20, X31
	286 Move X19, X0
	287 Add X0, X31, 264
	288 Move X1, X31
	289 Call ProfilingScope.Dispose, X0
	290 Compare X20, 0
	291 JumpIfNotEqual {294}
	292 Move X0, X19
	293 Call 0x1D2D690
	294 Move X0, X20
	295 Call 0x1C17F18
	296 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A5F628 STR X8, [X19 + 0x138]
	0x03A5F62C STRB W26, [X19 + 0x239]
	0x03A5F630 LDR X0, [X27]
	0x03A5F634 LDR W8, [X0 + 0xE0]
	0x03A5F638 CBNZ W8, 0x3A5F644
	0x03A5F63C BL 0x1C16DFC
	0x03A5F640 LDR X0, [X27]
	0x03A5F644 LDR X8, [X0 + 0xB8]
	0x03A5F648 MOVZ W9, 0x1
	0x03A5F64C LDP X22, X21, [X31 + 0x40]
	0x03A5F650 LDP X24, X23, [X31 + 0x30]
	0x03A5F654 LDR X8, [X8]
	0x03A5F658 STRB W9, [X19 + 0x23A]
	0x03A5F65C LDP X26, X25, [X31 + 0x20]
	0x03A5F660 LDP X28, X27, [X31 + 0x10]
	0x03A5F664 STR X8, [X19 + 0x120]
	0x03A5F668 LDP X20, X19, [X31 + 0x50]
	0x03A5F66C LDP X29, X30, [X31], #0x60
	0x03A5F670 RET
	0x03A5F674 STR X30, [X31 - 0x50]!
	0x03A5F678 STP X26, X25, [X31 + 0x10]
	0x03A5F67C STP X24, X23, [X31 + 0x20]
	0x03A5F680 STP X22, X21, [X31 + 0x30]
	0x03A5F684 STP X20, X19, [X31 + 0x40]
	0x03A5F688 LDP V2, V0, [X1 + 0x10]
	0x03A5F68C LDR W8, [X1 + 0x30]
	0x03A5F690 LDR V1, [X1]
	0x03A5F694 ADD X24, X0, 0xE0
	0x03A5F698 MOV X22, X2
	0x03A5F69C MOV X23, X0
	0x03A5F6A0 STR W8, [X0 + 0x110]
	0x03A5F6A4 STP V2, V0, [X0 + 0xF0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x984000
	007 Move W8, [X21+562]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X22, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6F8000
	016 Move X0, [X0+1248]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+562], W8
	020 Move X21, [X22+256]
	021 Compare X21, 0
	022 JumpIfEqual {42}
	023 Move V0, [X22+15]
	024 Move X8, 0x6F8000
	025 Move X8, [X8+1248]
	026 Move [X21+46], V0
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X21
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Call MotionVectorRenderPass.ExecutePass, X0, X1, X2
	041 Return 
	042 Call 0x1C17F20

Method: UnityEngine.Rendering.DrawingSettings GetDrawingSettings(ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Material objectMaterial)

Disassembly:
	0x03A5F6A8 STR V1, [X0 + 0xE]
	0x03A5F6AC MOV X0, X24
	0x03A5F6B0 MOV W1, W31
	0x03A5F6B4 MOV X2, X31
	0x03A5F6B8 MOV X19, X5
	0x03A5F6BC MOV X20, X4
	0x03A5F6C0 MOV X21, X3
	0x03A5F6C4 AND W25, W6, 0x1
	0x03A5F6C8 AND W26, W7, 0x1
	0x03A5F6CC BL 0x3C22B28
	0x03A5F6D0 MOV X0, X24
	0x03A5F6D4 MOV W1, W31
	0x03A5F6D8 MOV X2, X31
	0x03A5F6DC BL 0x3C22B44
	0x03A5F6E0 LDR X8, [X22]
	0x03A5F6E4 MOVZ W9, 0x1
	0x03A5F6E8 STP X8, X21, [X23 + 0x118]
	0x03A5F6EC LDR X8, [X20]
	0x03A5F6F0 LDP X22, X21, [X31 + 0x30]
	0x03A5F6F4 STR X8, [X23 + 0x128]
	0x03A5F6F8 LDR X8, [X19]
	0x03A5F6FC STRB W31, [X23 + 0x234]
	0x03A5F700 STRB W25, [X23 + 0x235]
	0x03A5F704 STRB W26, [X23 + 0x236]
	0x03A5F708 STR X8, [X23 + 0x130]
	0x03A5F70C STRB W9, [X23 + 0x23A]
	0x03A5F710 LDP X20, X19, [X31 + 0x40]
	0x03A5F714 LDP X24, X23, [X31 + 0x20]
	0x03A5F718 LDP X26, X25, [X31 + 0x10]
	0x03A5F71C LDR X30, [X31], #0x50
	0x03A5F720 RET
	0x03A5F724 STR X30, [X31 - 0x40]!
	0x03A5F728 STP X24, X23, [X31 + 0x10]
	0x03A5F72C STP X22, X21, [X31 + 0x20]
	0x03A5F730 STP X20, X19, [X31 + 0x30]
	0x03A5F734 ADRP X24, 0x983000
	0x03A5F738 ADRP X23, 0x6F4000
	0x03A5F73C LDRB W8, [X24 + 0x23C]
	0x03A5F740 LDR X23, [X23 + 0xFF0]
	0x03A5F744 MOV W20, W3
	0x03A5F748 MOV W21, W2
	0x03A5F74C MOV X22, X1
	0x03A5F750 MOV X19, X0
	0x03A5F754 TBNZ X8, 0x0, 0x3A5F76C
	0x03A5F758 ADRP X0, 0x6F4000
	0x03A5F75C LDR X0, [X0 + 0xFF0]
	0x03A5F760 BL 0x1C16CF4
	0x03A5F764 MOVZ W8, 0x1
	0x03A5F768 STRB W8, [X24 + 0x23C]
	0x03A5F76C LDR X8, [X22]
	0x03A5F770 STR X8, [X19 + 0x118]
	0x03A5F774 LDR X0, [X23]
	0x03A5F778 LDR W8, [X0 + 0xE0]
	0x03A5F77C CBNZ W8, 0x3A5F788
	0x03A5F780 BL 0x1C16DFC
	0x03A5F784 LDR X0, [X23]
	0x03A5F788 LDR X8, [X0 + 0xB8]
	0x03A5F78C AND W9, W21, 0x1
	0x03A5F790 AND W10, W20, 0x1
	0x03A5F794 MOVZ W11, 0x1
	0x03A5F798 LDR X8, [X8]
	0x03A5F79C STRH W11, [X19 + 0x234]
	0x03A5F7A0 STRB W10, [X19 + 0x236]
	0x03A5F7A4 STRB W9, [X19 + 0x23A]
	0x03A5F7A8 STR X8, [X19 + 0x120]
	0x03A5F7AC LDP X20, X19, [X31 + 0x30]
	0x03A5F7B0 LDP X22, X21, [X31 + 0x20]
	0x03A5F7B4 LDP X24, X23, [X31 + 0x10]
	0x03A5F7B8 LDR X30, [X31], #0x40
	0x03A5F7BC RET
	0x03A5F7C0 MOVZ W8, 0x1
	0x03A5F7C4 STRB W8, [X0 + 0x40]
	0x03A5F7C8 RET
	0x03A5F7CC MOV W0, W31
	0x03A5F7D0 RET
	0x03A5F7D4 SUB X31, X31, 0x70
	0x03A5F7D8 STP X29, X30, [X31 + 0x10]
	0x03A5F7DC STP X28, X27, [X31 + 0x20]
	0x03A5F7E0 STP X26, X25, [X31 + 0x30]
	0x03A5F7E4 STP X24, X23, [X31 + 0x40]
	0x03A5F7E8 STP X22, X21, [X31 + 0x50]
	0x03A5F7EC STP X20, X19, [X31 + 0x60]
	0x03A5F7F0 ADRP X22, 0x983000
	0x03A5F7F4 ADRP X21, 0x6BE000
	0x03A5F7F8 LDRB W8, [X22 + 0x23D]
	0x03A5F7FC LDR X21, [X21 + 0xFC0]
	0x03A5F800 MOV X19, X2
	0x03A5F804 MOV X20, X0
	0x03A5F808 TBNZ X8, 0x0, 0x3A5F8B0
	0x03A5F80C ADRP X0, 0x6F5000
	0x03A5F810 LDR X0, [X0 + 0x958]
	0x03A5F814 BL 0x1C16CF4
	0x03A5F818 ADRP X0, 0x6BE000
	0x03A5F81C LDR X0, [X0 + 0xFC0]
	0x03A5F820 BL 0x1C16CF4
	0x03A5F824 ADRP X0, 0x6F7000
	0x03A5F828 LDR X0, [X0 + 0x578]
	0x03A5F82C BL 0x1C16CF4
	0x03A5F830 ADRP X0, 0x6F7000
	0x03A5F834 LDR X0, [X0 + 0x580]
	0x03A5F838 BL 0x1C16CF4
	0x03A5F83C ADRP X0, 0x6F7000
	0x03A5F840 LDR X0, [X0 + 0x588]
	0x03A5F844 BL 0x1C16CF4
	0x03A5F848 ADRP X0, 0x6F7000
	0x03A5F84C LDR X0, [X0 + 0x590]
	0x03A5F850 BL 0x1C16CF4
	0x03A5F854 ADRP X0, 0x6F7000
	0x03A5F858 LDR X0, [X0 + 0x598]
	0x03A5F85C BL 0x1C16CF4
	0x03A5F860 ADRP X0, 0x6F7000
	0x03A5F864 LDR X0, [X0 + 0x5A0]
	0x03A5F868 BL 0x1C16CF4
	0x03A5F86C ADRP X0, 0x6F7000
	0x03A5F870 LDR X0, [X0 + 0x5A8]
	0x03A5F874 BL 0x1C16CF4
	0x03A5F878 ADRP X0, 0x6F7000
	0x03A5F87C LDR X0, [X0 + 0x5B0]
	0x03A5F880 BL 0x1C16CF4
	0x03A5F884 ADRP X0, 0x6F7000
	0x03A5F888 LDR X0, [X0 + 0x5B8]
	0x03A5F88C BL 0x1C16CF4
	0x03A5F890 ADRP X0, 0x6F7000
	0x03A5F894 LDR X0, [X0 + 0x468]
	0x03A5F898 BL 0x1C16CF4
	0x03A5F89C ADRP X0, 0x6F7000
	0x03A5F8A0 LDR X0, [X0 + 0x5C0]
	0x03A5F8A4 BL 0x1C16CF4
	0x03A5F8A8 MOVZ W8, 0x1
	0x03A5F8AC STRB W8, [X22 + 0x23D]
	0x03A5F8B0 LDR X0, [X21]
	0x03A5F8B4 STRB W31, [X31 + 0x8]
	0x03A5F8B8 LDR W8, [X0 + 0xE0]
	0x03A5F8BC CBNZ W8, 0x3A5F8C4
	0x03A5F8C0 BL 0x1C16DFC
	0x03A5F8C4 MOV X0, X31
	0x03A5F8C8 BL 0x39EE864
	0x03A5F8CC CBZ X0, 0x3A5FA48
	0x03A5F8D0 LDR X21, [X0 + 0x10]
	0x03A5F8D4 CBZ X21, 0x3A5FA48
	0x03A5F8D8 ADRP X8, 0x6F7000
	0x03A5F8DC LDR X8, [X8 + 0x598]
	0x03A5F8E0 ADRP X26, 0x6F7000
	0x03A5F8E4 ADRP X27, 0x6F7000
	0x03A5F8E8 ADRP X28, 0x6F7000
	0x03A5F8EC ADRP X29, 0x6F7000
	0x03A5F8F0 ADRP X24, 0x6F7000
	0x03A5F8F4 ADRP X22, 0x6F7000
	0x03A5F8F8 ADRP X23, 0x6F7000
	0x03A5F8FC LDR X26, [X26 + 0x5B0]
	0x03A5F900 LDR X27, [X27 + 0x5B8]
	0x03A5F904 LDR X28, [X28 + 0x578]
	0x03A5F908 LDR X29, [X29 + 0x5A8]
	0x03A5F90C LDR X24, [X24 + 0x580]
	0x03A5F910 LDR X22, [X22 + 0x5C0]
	0x03A5F914 LDR X23, [X23 + 0x590]
	0x03A5F918 LDR X1, [X8]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 800
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X19, X8
	013 Move X8, [X23+40]
	014 Move X25, 0x984000
	015 Move X22, 0x6C0000
	016 Move X24, 0x6F6000
	017 Move [X31+792], X8
	018 Move W8, [X25+563]
	019 Move X22, [X22+1880]
	020 Move X24, [X24+184]
	021 Move X20, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x6F6000
	028 Move X0, [X0+184]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F8000
	031 Move X0, [X0+1248]
	032 Call 0x1C17CF4
	033 Move X0, 0x6C0000
	034 Move X0, [X0+1880]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+563], W8
	038 Add X0, X31, 592
	039 Move W2, 196
	040 Move W1, W31
	041 Call 0x3EB2B10
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Add X0, X31, 392
	044 Move W2, 196
	045 Move W1, W31
	046 Move [X31+256], V0
	047 Move [X31+264], V0
	048 Move [X31+224], V0
	049 Move [X31+232], V0
	050 Move [X31+192], V0
	051 Move [X31+200], V0
	052 Call 0x3EB2B10
	053 Move X1, [X21+216]
	054 Add X0, X31, 192
	055 Move X2, X31
	056 Call SortingSettings..ctor, X0, X1
	057 Add X0, X31, 192
	058 Move W1, 59
	059 Move X2, X31
	060 Call SortingSettings.set_criteria, X0, X1
	061 Add X0, X31, 296
	062 Add X1, X31, 192
	063 Move W2, 96
	064 Call 0x3EB2AC0
	065 Move X8, [X22]
	066 Add X0, X31, 96
	067 Add X1, X31, 296
	068 Move W2, 96
	069 Move X8, [X8+184]
	070 Move W22, [X8]
	071 Call 0x3EB2AC0
	072 Move X0, [X24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X25, 0x6F8000
	078 Move X25, [X25+1248]
	079 Add X0, X31, 0
	080 Add X1, X31, 96
	081 Move W2, 96
	082 Call 0x3EB2AC0
	083 Add X0, X31, 392
	084 Add X2, X31, 0
	085 Move X1, X22
	086 Move X3, X31
	087 Call DrawingSettings..ctor, X0, X1, X2
	088 Add X0, X31, 392
	089 Move W1, 32
	090 Move X2, X31
	091 Call DrawingSettings.set_perObjectData, X0, X1
	092 Move W1, [X21+684]
	093 Add X0, X31, 392
	094 Move X2, X31
	095 Call DrawingSettings.set_enableDynamicBatching, X0, X1
	096 Add X0, X31, 392
	097 Move W1, 1
	098 Move X2, X31
	099 Call DrawingSettings.set_enableInstancing, X0, X1
	100 Add X0, X31, 592
	101 Add X1, X31, 392
	102 Move W2, 196
	103 Call 0x3EB2AC0
	104 Move X21, X31
	105 Move X0, [X25]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X25]
	111 Move X8, [X0+184]
	112 Move X8, [X8]
	113 Compare X8, 0
	114 JumpIfEqual {172}
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W9, [X0+224]
	118 Compare W9, 0
	119 JumpIfNotEqual {126}
	120 Call 0x1C17DFC
	121 Move X8, [X25]
	122 Move X8, [X8+184]
	123 Move X8, [X8]
	124 Compare X8, 0
	125 JumpIfEqual {172}
	126 Move W9, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add X8, X8, X21
	129 Move X1, [X8+32]
	130 Add X0, X31, 96
	131 Move X2, X31
	132 Move [X31+96], W31
	133 Call ShaderTagId..ctor, X0, X1
	134 Move X0, [X24]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move W2, [X31+96]
	140 Add X0, X31, 592
	141 Move W1, W21
	142 Move X3, X31
	143 Call DrawingSettings.SetShaderPassName, X0, X1, X2
	144 Add X21, X21, 1
	145 Move X0, [X24]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Add X0, X31, 592
	151 Move X1, X20
	152 Move X2, X31
	153 Call DrawingSettings.set_fallbackMaterial, X0, X1
	154 Add X1, X31, 592
	155 Move W2, 196
	156 Move X0, X19
	157 Call 0x3EB2AC0
	158 Move X8, [X23+40]
	159 Move X9, [X31+792]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X31, X31, 800
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X30, [X31+16]
	169 Move X25, [X31+24]
	170 Move X29, [X31+80]
	171 Return X0
	172 Call 0x1C17F20
	173 Call 0x1C17F28
	174 Call 0x3EB2B20

Method: System.Void DrawCameraMotionVectors(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Camera camera, UnityEngine.Material cameraMaterial)

Disassembly:
	0x03A5F204 STR X21, [X8 + 0x20]
	0x03A5F208 LDR X8, [X22]
	0x03A5F20C LDR X8, [X8 + 0xB8]
	0x03A5F210 LDR X8, [X8 + 0xD0]
	0x03A5F214 CBZ X8, 0x3A5F388
	0x03A5F218 LDRSW X28, [X31 + 0xEC]
	0x03A5F21C LDR W9, [X8 + 0x18]
	0x03A5F220 CMP W28, W9
	0x03A5F224 B.CS 0x3A5F38C
	0x03A5F228 ADD X8, X8, X28, 0x2, LSL
	0x03A5F22C LDR W0, [X8 + 0x20]
	0x03A5F230 LDR X29, [X19 + 0x160]
	0x03A5F234 ADD X8, X31, 0x38
	0x03A5F238 MOV X1, X31
	0x03A5F23C BL 0x3C4B258
	0x03A5F240 LDUR V0, [X31 + 0x38]
	0x03A5F244 LDUR V1, [X31 + 0x48]
	0x03A5F248 LDR X8, [X31 + 0x58]
	0x03A5F24C ADD X0, X31, 0xEC
	0x03A5F250 MOV X1, X31
	0x03A5F254 STP V0, V1, [X31 + 0x90]
	0x03A5F258 STR X8, [X31 + 0xB0]
	0x03A5F25C BL 0x337B6E0
	0x03A5F260 LDR X8, [X26]
	0x03A5F264 MOV X1, X0
	0x03A5F268 MOV X2, X31
	0x03A5F26C MOV X0, X8
	0x03A5F270 BL 0x321B938
	0x03A5F274 LDP V0, V1, [X31 + 0x90]
	0x03A5F278 LDR X8, [X31 + 0xB0]
	0x03A5F27C MOV X1, X0
	0x03A5F280 ADD X0, X31, 0x10
	0x03A5F284 MOV X2, X31
	0x03A5F288 STP V0, V1, [X31 + 0x10]
	0x03A5F28C STR X8, [X31 + 0x30]
	0x03A5F290 BL 0x39D6AD0
	0x03A5F294 CBZ X29, 0x3A5F388
	0x03A5F298 MOV X21, X0
	0x03A5F29C CBZ X0, 0x3A5F2B4
	0x03A5F2A0 LDR X8, [X29]
	0x03A5F2A4 MOV X0, X21
	0x03A5F2A8 LDR X1, [X8 + 0x40]
	0x03A5F2AC BL 0x1C16E00
	0x03A5F2B0 CBZ X0, 0x3A5F390
	0x03A5F2B4 LDR W8, [X29 + 0x18]
	0x03A5F2B8 CMP W28, W8
	0x03A5F2BC B.CS 0x3A5F38C
	0x03A5F2C0 ADD X8, X29, X28, 0x3, LSL
	0x03A5F2C4 STR X21, [X8 + 0x20]
	0x03A5F2C8 LDR W8, [X31 + 0xEC]
	0x03A5F2CC ADD W21, W8, 0x1
	0x03A5F2D0 CMP W21, 0x10
	0x03A5F2D4 STR W21, [X31 + 0xEC]
	0x03A5F2D8 B.LT 0x3A5F084
	0x03A5F2DC LDR X0, [X25]
	0x03A5F2E0 MOVZ W1, 0x2
	0x03A5F2E4 BL 0x1C16D6C
	0x03A5F2E8 STR X0, [X19 + 0x218]
	0x03A5F2EC LDR X0, [X24]
	0x03A5F2F0 LDR W8, [X0 + 0xE0]
	0x03A5F2F4 CBNZ W8, 0x3A5F2FC
	0x03A5F2F8 BL 0x1C16DFC
	0x03A5F2FC STRB W31, [X19 + 0x42]
	0x03A5F300 LDR X8, [X20]
	0x03A5F304 MOVZ W1, 0x5
	0x03A5F308 MOV X2, X31
	0x03A5F30C STR X8, [X19 + 0x250]
	0x03A5F310 LDR W0, [X20 + 0x8]
	0x03A5F314 BL 0x3C3C4BC
	0x03A5F318 TBZ X0, 0x0, 0x3A5F324
	0x03A5F31C LDR W20, [X20 + 0x8]
	0x03A5F320 B 0x3A5F33C
	0x03A5F324 MOVZ W0, 0x4A
	0x03A5F328 MOVZ W1, 0x5
	0x03A5F32C MOV X2, X31
	0x03A5F330 MOVZ W20, 0x4A
	0x03A5F334 BL 0x3C3C4BC
	0x03A5F338 TBZ X0, 0x0, 0x3A5F344
	0x03A5F33C MOV W8, W31
	0x03A5F340 B 0x3A5F360
	0x03A5F344 MOV X0, X31
	0x03A5F348 BL 0x3C113A8
	0x03A5F34C CMP W0, 0x1
	0x03A5F350 MOVZ W8, 0x8
	0x03A5F354 MOVZ W9, 0x4
	0x03A5F358 CSEL W20, W9, W8, EQ
	0x03A5F35C MOVZ W8, 0x1
	0x03A5F360 STR W20, [X19 + 0x200]
	0x03A5F364 STRB W8, [X19 + 0x204]
	0x03A5F368 LDP X20, X19, [X31 + 0x140]
	0x03A5F36C LDP X22, X21, [X31 + 0x130]
	0x03A5F370 LDP X24, X23, [X31 + 0x120]
	0x03A5F374 LDP X26, X25, [X31 + 0x110]
	0x03A5F378 LDP X28, X27, [X31 + 0x100]
	0x03A5F37C LDP X29, X30, [X31 + 0xF0]
	0x03A5F380 ADD X31, X31, 0x150
	0x03A5F384 RET
	0x03A5F388 BL 0x1C16F20
	0x03A5F38C BL 0x1C16F28
	0x03A5F390 BL 0x1C16F44
	0x03A5F394 MOV X1, X31
	0x03A5F398 BL 0x1C16DEC
	0x03A5F39C STR X30, [X31 - 0x10]!
	0x03A5F3A0 LDR X0, [X0 + 0x198]
	0x03A5F3A4 CBZ X0, 0x3A5F3B4
	0x03A5F3A8 MOV X1, X31
	0x03A5F3AC LDR X30, [X31], #0x10
	0x03A5F3B0 B 0x3A6611C
	0x03A5F3B4 BL 0x1C16F20
	0x03A5F3B8 STP X30, X23, [X31 - 0x30]!
	0x03A5F3BC STP X22, X21, [X31 + 0x10]
	0x03A5F3C0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X22, 0x984000
	009 Move W8, [X22+564]
	010 Move X20, X4
	011 Move X21, X2
	012 Move X19, X1
	013 Move [X31+136], X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6F2000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0x6F2000
	022 Move X0, [X0+1280]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+564], W8
	026 Move X0, [X21+400]
	027 Compare X0, 0
	028 JumpIfEqual {140}
	029 Move X1, X31
	030 Call XRPass.get_supportsFoveatedRendering, X0
	031 Move W21, W0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {71}
	036 Move X22, 0x6F2000
	037 Move X22, [X22+1280]
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X23, 0x983000
	044 Move W8, [X23+2873]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x6F2000
	048 Move X0, [X0+1280]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X23+2873], W8
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X22]
	058 Compare X19, 0
	059 JumpIfEqual {140}
	060 Move X8, [X0+184]
	061 Move X0, X19
	062 Move X2, X31
	063 Move W8, [X8+76]
	064 And W8, W8, 2
	065 Move W8, W8
	066 ShiftRight W8, 1
	067 And W8, W8, 0x7FFFFFFF
	068 Xor W1, W8, 1
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	071 Move W22, 1
	072 Move X23, 0x97A000
	073 Move W8, [X23+2752]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x699000
	077 Move X0, [X0+624]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+2752], W8
	081 Move X8, 0x699000
	082 Move X8, [X8+624]
	083 Move X8, [X8]
	084 Move X8, [X8+184]
	085 Move V1, [X8+96]
	086 Move V0, [X8+112]
	087 Move V2, [X8+64]
	088 Move V3, [X8+80]
	089 Move [X31+96], V1
	090 Move [X31+104], V0
	091 Move [X31+64], V2
	092 Move [X31+72], V3
	093 Compare X19, 0
	094 JumpIfEqual {140}
	095 Move X23, 0x6F2000
	096 Move X23, [X23+3200]
	097 Move V0, [X31+64]
	098 Move V1, [X31+80]
	099 Move V2, [X31+96]
	100 Move V3, [X31+112]
	101 Add X1, X31, 0
	102 Move W5, 3
	103 Move W6, 1
	104 Move X0, X19
	105 Move X2, X20
	106 Move W3, W31
	107 Move W4, W31
	108 Move X7, X31
	109 Move [X31], V0
	110 Move [X31+8], V1
	111 Move [X31+32], V2
	112 Move [X31+40], V3
	113 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6
	114 And W8, W21, W22
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X19
	117 Move W1, W31
	118 Move X2, X31
	119 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Add X0, X31, 136
	126 Move X1, X19
	127 Move X2, X31
	128 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	129 Move X0, X19
	130 Move X1, X31
	131 Call CommandBuffer.Clear, X0
	132 Move X20, [X31+176]
	133 Move X19, [X31+184]
	134 Move X22, [X31+160]
	135 Move X21, [X31+168]
	136 Move X30, [X31+144]
	137 Move X23, [X31+152]
	138 Add X31, X31, 192
	139 Return 
	140 Call 0x1C17F20

Method: System.Void DrawObjectMotionVectors(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Camera camera, UnityEngine.Material objectMaterial, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A5F3C4 LDR X21, [X0 + 0x160]
	0x03A5F3C8 CBZ X21, 0x3A5F550
	0x03A5F3CC LDR X8, [X21 + 0x18]
	0x03A5F3D0 MOV X19, X0
	0x03A5F3D4 CMP W8, 0x1
	0x03A5F3D8 B.LT 0x3A5F424
	0x03A5F3DC MOV X20, X31
	0x03A5F3E0 MOV X22, X31
	0x03A5F3E4 AND X8, X8, 0x0
	0x03A5F3E8 ADD X23, X21, 0x20
	0x03A5F3EC CMP X22, W8, UXTW
	0x03A5F3F0 B.CS 0x3A5F54C
	0x03A5F3F4 LDR X8, [X23, X22, LSL #3]
	0x03A5F3F8 CMP X8, 0x0
	0x03A5F3FC CSEL X20, X20, X8, EQ
	0x03A5F400 CBZ X8, 0x3A5F414
	0x03A5F404 CBZ X20, 0x3A5F550
	0x03A5F408 MOV X0, X20
	0x03A5F40C MOV X1, X31
	0x03A5F410 BL 0x39D4B1C
	0x03A5F414 LDR W8, [X21 + 0x18]
	0x03A5F418 ADD X22, X22, 0x1
	0x03A5F41C CMP X22, W8, SXTW
	0x03A5F420 B.LT 0x3A5F3EC
	0x03A5F424 LDR X21, [X19 + 0x168]
	0x03A5F428 CBZ X21, 0x3A5F550
	0x03A5F42C LDR X8, [X21 + 0x18]
	0x03A5F430 CMP W8, 0x1
	0x03A5F434 B.LT 0x3A5F480
	0x03A5F438 MOV X20, X31
	0x03A5F43C MOV X22, X31
	0x03A5F440 AND X8, X8, 0x0
	0x03A5F444 ADD X23, X21, 0x20
	0x03A5F448 CMP X22, W8, UXTW
	0x03A5F44C B.CS 0x3A5F54C
	0x03A5F450 LDR X8, [X23, X22, LSL #3]
	0x03A5F454 CMP X8, 0x0
	0x03A5F458 CSEL X20, X20, X8, EQ
	0x03A5F45C CBZ X8, 0x3A5F470
	0x03A5F460 CBZ X20, 0x3A5F550
	0x03A5F464 MOV X0, X20
	0x03A5F468 MOV X1, X31
	0x03A5F46C BL 0x39D4B1C
	0x03A5F470 LDR W8, [X21 + 0x18]
	0x03A5F474 ADD X22, X22, 0x1
	0x03A5F478 CMP X22, W8, SXTW
	0x03A5F47C B.LT 0x3A5F448
	0x03A5F480 LDR X0, [X19 + 0x240]
	0x03A5F484 CBZ X0, 0x3A5F490
	0x03A5F488 MOV X1, X31
	0x03A5F48C BL 0x39D4B1C
	0x03A5F490 LDR X0, [X19 + 0x248]
	0x03A5F494 CBZ X0, 0x3A5F4A0
	0x03A5F498 MOV X1, X31
	0x03A5F49C BL 0x39D4B1C
	0x03A5F4A0 LDR X0, [X19 + 0x140]
	0x03A5F4A4 CBZ X0, 0x3A5F4B0
	0x03A5F4A8 MOV X1, X31
	0x03A5F4AC BL 0x39D4B1C
	0x03A5F4B0 LDR X0, [X19 + 0x148]
	0x03A5F4B4 CBZ X0, 0x3A5F4C0
	0x03A5F4B8 MOV X1, X31
	0x03A5F4BC BL 0x39D4B1C
	0x03A5F4C0 LDR X0, [X19 + 0x150]
	0x03A5F4C4 CBZ X0, 0x3A5F4D0
	0x03A5F4C8 MOV X1, X31
	0x03A5F4CC BL 0x39D4B1C
	0x03A5F4D0 LDR X0, [X19 + 0x158]
	0x03A5F4D4 CBZ X0, 0x3A5F4E0
	0x03A5F4D8 MOV X1, X31
	0x03A5F4DC BL 0x39D4B1C
	0x03A5F4E0 LDR X0, [X19 + 0x170]
	0x03A5F4E4 CBZ X0, 0x3A5F4F0
	0x03A5F4E8 MOV X1, X31
	0x03A5F4EC BL 0x39D4B1C
	0x03A5F4F0 LDR X0, [X19 + 0x178]
	0x03A5F4F4 CBZ X0, 0x3A5F500
	0x03A5F4F8 MOV X1, X31
	0x03A5F4FC BL 0x39D4B1C
	0x03A5F500 LDR X0, [X19 + 0x180]
	0x03A5F504 CBZ X0, 0x3A5F510
	0x03A5F508 MOV X1, X31
	0x03A5F50C BL 0x39D4B1C
	0x03A5F510 LDR X0, [X19 + 0x188]
	0x03A5F514 CBZ X0, 0x3A5F520
	0x03A5F518 MOV X1, X31
	0x03A5F51C BL 0x39D4B1C
	0x03A5F520 LDR X0, [X19 + 0x190]
	0x03A5F524 CBZ X0, 0x3A5F53C
	0x03A5F528 LDP X20, X19, [X31 + 0x20]
	0x03A5F52C LDP X22, X21, [X31 + 0x10]
	0x03A5F530 MOV X1, X31
	0x03A5F534 LDP X30, X23, [X31], #0x30
	0x03A5F538 B 0x39D4B1C
	0x03A5F53C LDP X20, X19, [X31 + 0x20]
	0x03A5F540 LDP X22, X21, [X31 + 0x10]
	0x03A5F544 LDP X30, X23, [X31], #0x30
	0x03A5F548 RET
	0x03A5F54C BL 0x1C16F28
	0x03A5F550 BL 0x1C16F20
	0x03A5F554 STP X29, X30, [X31 - 0x60]!
	0x03A5F558 STP X28, X27, [X31 + 0x10]
	0x03A5F55C STP X26, X25, [X31 + 0x20]
	0x03A5F560 STP X24, X23, [X31 + 0x30]
	0x03A5F564 STP X22, X21, [X31 + 0x40]
	0x03A5F568 STP X20, X19, [X31 + 0x50]
	0x03A5F56C ADRP X29, 0x983000
	0x03A5F570 ADRP X27, 0x6F4000
	0x03A5F574 LDRB W8, [X29 + 0x23B]
	0x03A5F578 LDRB W28, [X31 + 0x60]
	0x03A5F57C LDR X27, [X27 + 0xFF0]
	0x03A5F580 MOV W25, W7
	0x03A5F584 MOV X20, X6
	0x03A5F588 MOV X21, X5
	0x03A5F58C MOV X22, X4
	0x03A5F590 MOV W26, W3
	0x03A5F594 MOV X23, X2
	0x03A5F598 MOV X24, X1
	0x03A5F59C MOV X19, X0
	0x03A5F5A0 TBNZ X8, 0x0, 0x3A5F5B8
	0x03A5F5A4 ADRP X0, 0x6F4000
	0x03A5F5A8 LDR X0, [X0 + 0xFF0]
	0x03A5F5AC BL 0x1C16CF4
	0x03A5F5B0 MOVZ W8, 0x1
	0x03A5F5B4 STRB W8, [X29 + 0x23B]
	0x03A5F5B8 LDP V2, V0, [X24 + 0x10]
	0x03A5F5BC LDR W8, [X24 + 0x30]
	0x03A5F5C0 LDR V1, [X24]
	0x03A5F5C4 ADD X24, X19, 0xE0
	0x03A5F5C8 MOV X0, X24
	0x03A5F5CC MOV W1, W31
	0x03A5F5D0 MOV X2, X31
	0x03A5F5D4 AND W28, W28, 0x1
	0x03A5F5D8 AND W25, W25, 0x1
	0x03A5F5DC AND W26, W26, 0x1
	0x03A5F5E0 STR W8, [X19 + 0x110]
	0x03A5F5E4 STP V2, V0, [X19 + 0xF0]
	0x03A5F5E8 STR V1, [X19 + 0xE]
	0x03A5F5EC BL 0x3C22B28
	0x03A5F5F0 MOV X0, X24
	0x03A5F5F4 MOV W1, W31
	0x03A5F5F8 MOV X2, X31
	0x03A5F5FC BL 0x3C22B44
	0x03A5F600 LDR X8, [X23]
	0x03A5F604 STR X8, [X19 + 0x118]
	0x03A5F608 LDR X8, [X22]
	0x03A5F60C STR X8, [X19 + 0x128]
	0x03A5F610 LDR X8, [X21]
	0x03A5F614 STR X8, [X19 + 0x130]
	0x03A5F618 LDR X8, [X20]
	0x03A5F61C STRB W31, [X19 + 0x234]
	0x03A5F620 STRB W25, [X19 + 0x235]
	0x03A5F624 STRB W28, [X19 + 0x236]

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+368], X29
	003 Move [X31+384], X30
	004 Move [X31+392], X27
	005 Move [X31+400], X26
	006 Move [X31+408], X25
	007 Move [X31+416], X24
	008 Move [X31+424], X23
	009 Move [X31+432], X22
	010 Move [X31+440], X21
	011 Move [X31+448], X20
	012 Move [X31+456], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X24+40]
	015 Move X22, 0x984000
	016 Move X19, X4
	017 Move X23, X3
	018 Move [X31+360], X8
	019 Move W8, [X22+565]
	020 Move X21, X2
	021 Move X20, X1
	022 Move [X31+152], X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x6F8000
	028 Move X0, [X0+1248]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F6000
	031 Move X0, [X0+120]
	032 Call 0x1C17CF4
	033 Move X0, 0x6BE000
	034 Move X0, [X0+3368]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F2000
	037 Move X0, [X0+3200]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+565], W8
	041 Add X0, X31, 160
	042 Move W2, 196
	043 Move W1, W31
	044 Call 0x3EB2B10
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+128], X31
	047 Move [X31+136], X31
	048 Move [X31+144], X31
	049 Move [X31+108], V0
	050 Move [X31+80], V0
	051 Move [X31+88], V0
	052 Move [X31+48], V0
	053 Move [X31+56], V0
	054 Move [X31+16], V0
	055 Move [X31+24], V0
	056 Move X0, [X20+400]
	057 Compare X0, 0
	058 JumpIfEqual {186}
	059 Move X25, 0x6F2000
	060 Move X25, [X25+3200]
	061 Move X1, X31
	062 Call XRPass.get_supportsFoveatedRendering, X0
	063 Move W22, W0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {86}
	068 Compare X19, 0
	069 JumpIfEqual {186}
	070 Move W1, 1
	071 Move X0, X19
	072 Move X2, X31
	073 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	074 Move X0, [X25]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Add X0, X31, 152
	080 Move X1, X19
	081 Move X2, X31
	082 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	083 Move X0, X19
	084 Move X1, X31
	085 Call CommandBuffer.Clear, X0
	086 Move X8, 0x6F8000
	087 Move X8, [X8+1248]
	088 Move X27, 0x6BE000
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Move X27, [X27+3368]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X26, 0x6F6000
	096 Move X26, [X26+120]
	097 Add X8, X31, 160
	098 Move X0, X20
	099 Move X1, X23
	100 Call MotionVectorRenderPass.GetDrawingSettings, X0, X1
	101 Move X0, [X27]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X31
	107 Call RenderQueueRange.get_opaque
	108 Move X2, [X26]
	109 Move X1, X0
	110 Add X0, X31, 0
	111 Move [X31+8], W31
	112 Move [X31], X31
	113 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	114 Compare X21, 0
	115 JumpIfEqual {186}
	116 Move X0, X21
	117 Move X1, X31
	118 Call Camera.get_cullingMask, X0
	119 Move X1, [X31]
	120 Move W2, [X31+8]
	121 Move W3, W0
	122 Add X0, X31, 128
	123 Move TEMP, 0
	124 Not TEMP
	125 Move W4, TEMP
	126 Move W5, W31
	127 Move X6, X31
	128 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	129 Add X0, X31, 16
	130 Move W1, W31
	131 Move X2, X31
	132 Call RenderStateBlock..ctor, X0, X1
	133 Move X0, [X25]
	134 Move X21, [X20+8]
	135 Move X20, [X20+16]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Add X0, X31, 152
	141 Add X3, X31, 160
	142 Add X4, X31, 128
	143 Add X5, X31, 16
	144 Move X1, X21
	145 Move X2, X20
	146 Move X6, X31
	147 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4
	148 Move TEMP, X22
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {170}
	152 Compare X19, 0
	153 JumpIfEqual {186}
	154 Move X0, X19
	155 Move W1, W31
	156 Move X2, X31
	157 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	158 Move X0, [X25]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Add X0, X31, 152
	164 Move X1, X19
	165 Move X2, X31
	166 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	167 Move X0, X19
	168 Move X1, X31
	169 Call CommandBuffer.Clear, X0
	170 Move X8, [X24+40]
	171 Move X9, [X31+360]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X20, [X31+448]
	174 Move X19, [X31+456]
	175 Move X22, [X31+432]
	176 Move X21, [X31+440]
	177 Move X24, [X31+416]
	178 Move X23, [X31+424]
	179 Move X26, [X31+400]
	180 Move X25, [X31+408]
	181 Move X30, [X31+384]
	182 Move X27, [X31+392]
	183 Move X29, [X31+368]
	184 Add X31, X31, 464
	185 Return 
	186 Call 0x1C17F20
	187 Call 0x3EB2B20

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepthTexture, in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorColor, in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle motionVectorDepth, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A5F91C ADRP X25, 0x6F5000
	0x03A5F920 LDR X25, [X25 + 0x958]
	0x03A5F924 MOV X0, X21
	0x03A5F928 BL 0x22ACD04
	0x03A5F92C STR X0, [X20 + 0x1A8]
	0x03A5F930 LDR X1, [X26]
	0x03A5F934 MOV X0, X21
	0x03A5F938 BL 0x22ACD04
	0x03A5F93C STR X0, [X20 + 0x1B0]
	0x03A5F940 LDR X1, [X27]
	0x03A5F944 MOV X0, X21
	0x03A5F948 BL 0x22ACD04
	0x03A5F94C STR X0, [X20 + 0x1B8]
	0x03A5F950 LDR X1, [X28]
	0x03A5F954 MOV X0, X21
	0x03A5F958 BL 0x22ACD04
	0x03A5F95C STR X0, [X20 + 0x1C0]
	0x03A5F960 LDR X1, [X29]
	0x03A5F964 MOV X0, X21
	0x03A5F968 BL 0x22ACD04
	0x03A5F96C STR X0, [X20 + 0x1C8]
	0x03A5F970 LDR X1, [X24]
	0x03A5F974 MOV X0, X21
	0x03A5F978 BL 0x22ACD04
	0x03A5F97C STR X0, [X20 + 0x1D0]
	0x03A5F980 LDR X1, [X22]
	0x03A5F984 MOV X0, X21
	0x03A5F988 BL 0x22ACD04
	0x03A5F98C STR X0, [X20 + 0x1D8]
	0x03A5F990 LDR X1, [X23]
	0x03A5F994 MOV X0, X21
	0x03A5F998 BL 0x22ACD04
	0x03A5F99C STR X0, [X20 + 0x1E0]
	0x03A5F9A0 ADRP X8, 0x6F7000
	0x03A5F9A4 LDR X8, [X8 + 0x588]
	0x03A5F9A8 MOV X0, X21
	0x03A5F9AC LDR X1, [X8]
	0x03A5F9B0 BL 0x22ACD04
	0x03A5F9B4 STR X0, [X20 + 0x1E8]
	0x03A5F9B8 ADRP X8, 0x6F7000
	0x03A5F9BC LDR X8, [X8 + 0x468]
	0x03A5F9C0 MOV X0, X21
	0x03A5F9C4 LDR X1, [X8]
	0x03A5F9C8 BL 0x22ACD04
	0x03A5F9CC STR X0, [X20 + 0x1F0]
	0x03A5F9D0 ADRP X8, 0x6F7000
	0x03A5F9D4 LDR X8, [X8 + 0x5A0]
	0x03A5F9D8 MOV X0, X21
	0x03A5F9DC LDR X1, [X8]
	0x03A5F9E0 BL 0x22ACD04
	0x03A5F9E4 STR X0, [X20 + 0x1F8]
	0x03A5F9E8 LDRB W8, [X19 + 0x2A8]
	0x03A5F9EC STRB W8, [X20 + 0x237]
	0x03A5F9F0 LDRB W8, [X19 + 0x2A9]
	0x03A5F9F4 STRB W8, [X20 + 0x238]
	0x03A5F9F8 LDRB W8, [X20 + 0x234]
	0x03A5F9FC LDR X21, [X19]
	0x03A5FA00 CBZ W8, 0x3A5FA7C
	0x03A5FA04 LDR X0, [X25]
	0x03A5FA08 LDR W8, [X0 + 0xE0]
	0x03A5FA0C CBNZ W8, 0x3A5FA18
	0x03A5FA10 BL 0x1C16DFC
	0x03A5FA14 LDR X0, [X25]
	0x03A5FA18 MOV X24, X25
	0x03A5FA1C LDR X8, [X0 + 0xB8]
	0x03A5FA20 ADD X0, X31, 0x8
	0x03A5FA24 MOV X1, X21
	0x03A5FA28 MOV X3, X31
	0x03A5FA2C LDR X2, [X8 + 0x8]
	0x03A5FA30 BL 0x39B1DB0
	0x03A5FA34 MOV X0, X20
	0x03A5FA38 MOV X1, X21
	0x03A5FA3C MOV X2, X19
	0x03A5FA40 BL 0x3A5FB74
	0x03A5FA44 B 0x3A5FAB8
	0x03A5FA48 BL 0x1C16F20
	0x03A5FA4C CMP W1, 0x1
	0x03A5FA50 MOV X22, X0
	0x03A5FA54 B.NE 0x3A5FAE4
	0x03A5FA58 MOV X0, X22
	0x03A5FA5C BL 0x3EB1AD0
	0x03A5FA60 LDR X23, [X0]
	0x03A5FA64 BL 0x3EB1AE0
	0x03A5FA68 ADD X0, X31, 0x8
	0x03A5FA6C MOV X1, X31
	0x03A5FA70 BL 0x39B1DB4
	0x03A5FA74 MOV X25, X24
	0x03A5FA78 CBNZ X23, 0x3A5FAEC
	0x03A5FA7C LDR X0, [X25]
	0x03A5FA80 LDR W8, [X0 + 0xE0]
	0x03A5FA84 CBNZ W8, 0x3A5FA90
	0x03A5FA88 BL 0x1C16DFC
	0x03A5FA8C LDR X0, [X25]
	0x03A5FA90 LDR X8, [X0 + 0xB8]
	0x03A5FA94 ADD X0, X31, 0x8
	0x03A5FA98 MOV X1, X21
	0x03A5FA9C MOV X3, X31
	0x03A5FAA0 LDR X2, [X8]
	0x03A5FAA4 BL 0x39B1DB0
	0x03A5FAA8 MOV X0, X20
	0x03A5FAAC MOV X1, X21
	0x03A5FAB0 MOV X2, X19
	0x03A5FAB4 BL 0x3A60434
	0x03A5FAB8 ADD X0, X31, 0x8
	0x03A5FABC MOV X1, X31
	0x03A5FAC0 BL 0x39B1DB4
	0x03A5FAC4 LDP X20, X19, [X31 + 0x60]
	0x03A5FAC8 LDP X22, X21, [X31 + 0x50]
	0x03A5FACC LDP X24, X23, [X31 + 0x40]
	0x03A5FAD0 LDP X26, X25, [X31 + 0x30]
	0x03A5FAD4 LDP X28, X27, [X31 + 0x20]
	0x03A5FAD8 LDP X29, X30, [X31 + 0x10]
	0x03A5FADC ADD X31, X31, 0x70
	0x03A5FAE0 RET
	0x03A5FAE4 MOV X23, X31
	0x03A5FAE8 B 0x3A5FAF8
	0x03A5FAEC MOV X0, X23
	0x03A5FAF0 BL 0x1C16F18
	0x03A5FAF4 MOV X22, X0
	0x03A5FAF8 ADD X0, X31, 0x8
	0x03A5FAFC MOV X1, X31
	0x03A5FB00 BL 0x39B1DB4
	0x03A5FB04 CBZ X23, 0x3A5FB60
	0x03A5FB08 MOV X0, X23
	0x03A5FB0C BL 0x1C16F18
	0x03A5FB10 CMP W1, 0x1
	0x03A5FB14 MOV X22, X0
	0x03A5FB18 B.NE 0x3A5FB44
	0x03A5FB1C MOV X0, X22
	0x03A5FB20 BL 0x3EB1AD0
	0x03A5FB24 LDR X19, [X0]
	0x03A5FB28 BL 0x3EB1AE0
	0x03A5FB2C ADD X0, X31, 0x8
	0x03A5FB30 MOV X1, X31
	0x03A5FB34 BL 0x39B1DB4
	0x03A5FB38 CBZ X19, 0x3A5FAC4
	0x03A5FB3C MOV X0, X19
	0x03A5FB40 BL 0x1C16F18
	0x03A5FB44 MOV X19, X31
	0x03A5FB48 B 0x3A5FB50
	0x03A5FB4C MOV X22, X0
	0x03A5FB50 ADD X0, X31, 0x8
	0x03A5FB54 MOV X1, X31
	0x03A5FB58 BL 0x39B1DB4
	0x03A5FB5C CBNZ X19, 0x3A5FB68
	0x03A5FB60 MOV X0, X22
	0x03A5FB64 BL 0x1D2C690
	0x03A5FB68 MOV X0, X19
	0x03A5FB6C BL 0x1C16F18
	0x03A5FB70 BL 0x1990590
	0x03A5FB74 STR D8, [X31 - 0x70]!
	0x03A5FB78 STP X29, X30, [X31 + 0x10]
	0x03A5FB7C STP X28, X27, [X31 + 0x20]
	0x03A5FB80 STP X26, X25, [X31 + 0x30]
	0x03A5FB84 STP X24, X23, [X31 + 0x40]
	0x03A5FB88 STP X22, X21, [X31 + 0x50]
	0x03A5FB8C STP X20, X19, [X31 + 0x60]
	0x03A5FB90 SUB X31, X31, 0x1A0
	0x03A5FB94 ADRP X21, 0x983000
	0x03A5FB98 LDRB W8, [X21 + 0x252]
	0x03A5FB9C MOV X20, X2
	0x03A5FBA0 MOV X19, X1
	0x03A5FBA4 MOV X24, X0
	0x03A5FBA8 TBNZ X8, 0x0, 0x3A5FC5C
	0x03A5FBAC ADRP X0, 0x6F3000
	0x03A5FBB0 LDR X0, [X0 + 0xE28]
	0x03A5FBB4 BL 0x1C16CF4
	0x03A5FBB8 ADRP X0, 0x6F4000
	0x03A5FBBC LDR X0, [X0 + 0x98]
	0x03A5FBC0 BL 0x1C16CF4
	0x03A5FBC4 ADRP X0, 0x6F5000
	0x03A5FBC8 LDR X0, [X0 + 0x10]
	0x03A5FBCC BL 0x1C16CF4
	0x03A5FBD0 ADRP X0, 0x6F4000
	0x03A5FBD4 LDR X0, [X0 + 0xFF0]
	0x03A5FBD8 BL 0x1C16CF4
	0x03A5FBDC ADRP X0, 0x6BD000
	0x03A5FBE0 LDR X0, [X0 + 0x8A8]
	0x03A5FBE4 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 736
	011 Move X25, 0x984000
	012 Move W8, [X25+566]
	013 Move X20, X5
	014 Move X22, X4
	015 Move X23, X3
	016 Move X21, X2
	017 Move X24, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x6F8000
	024 Move X0, [X0+1288]
	025 Call 0x1C17CF4
	026 Move X0, 0x6F8000
	027 Move X0, [X0+1296]
	028 Call 0x1C17CF4
	029 Move X0, 0x6F8000
	030 Move X0, [X0+1304]
	031 Call 0x1C17CF4
	032 Move X0, 0x6F8000
	033 Move X0, [X0+1312]
	034 Call 0x1C17CF4
	035 Move X0, 0x6F8000
	036 Move X0, [X0+1320]
	037 Call 0x1C17CF4
	038 Move X0, 0x6F8000
	039 Move X0, [X0+1328]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+566], W8
	043 NotImplemented "Instruction MOVI not yet implemented."
	044 Move [X31+704], V0
	045 Move [X31+712], V0
	046 Move [X31+744], X31
	047 Compare X24, 0
	048 JumpIfEqual {162}
	049 Move X8, 0x6F8000
	050 Move X9, 0x6F8000
	051 Move X8, [X8+1328]
	052 Move X9, [X9+1304]
	053 Move X3, [X19+56]
	054 Add X2, X31, 744
	055 Move X1, [X8]
	056 Move X4, [X9]
	057 Add X8, X31, 8
	058 Move X0, X24
	059 Call 0x2241F24, X0, X1, X2, X3
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move [X31+704], V0
	063 Move [X31+712], V1
	064 Add X0, X31, 704
	065 Move W1, W31
	066 Move X2, X31
	067 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	068 Move X24, [X31+744]
	069 Add X0, X31, 704
	070 Move X1, X23
	071 Move W2, W31
	072 Move X3, X31
	073 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	074 Compare X24, 0
	075 JumpIfEqual {163}
	076 Move [X24+16], X0
	077 Move X23, [X31+744]
	078 Add X0, X31, 704
	079 Move W2, 2
	080 Move X1, X22
	081 Move X3, X31
	082 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	083 Compare X23, 0
	084 JumpIfEqual {164}
	085 Move [X23+24], X0
	086 Move X22, [X31+744]
	087 Add X0, X31, 704
	088 Move X1, X21
	089 Move X2, X31
	090 Call RenderGraphBuilder.ReadTexture, X0, X1
	091 Compare X22, 0
	092 JumpIfEqual {165}
	093 Move [X22+32], X0
	094 Move X22, [X31+744]
	095 Add X0, X31, 8
	096 Move W2, 696
	097 Move X1, X20
	098 Call 0x3EB2AC0
	099 Compare X22, 0
	100 JumpIfEqual {166}
	101 Move X21, 0x6F8000
	102 Move X21, [X21+1320]
	103 Add X0, X22, 40
	104 Add X1, X31, 8
	105 Move W2, 696
	106 Call 0x3EB2AC0
	107 Move V0, [X19+15]
	108 Move [X22+46], V0
	109 Move X8, [X21]
	110 Move W9, [X8+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {116}
	113 Move X0, X8
	114 Call 0x1C17DFC
	115 Move X8, [X21]
	116 Move X9, [X8+184]
	117 Move X19, [X9+8]
	118 Compare X19, 0
	119 JumpIfNotEqual {142}
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {126}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X8, [X21]
	126 Move X9, 0x6F8000
	127 Move X8, [X8+184]
	128 Move X9, [X9+1288]
	129 Move X20, [X8]
	130 Move X0, [X9]
	131 Call 0x1C17F10
	132 Move X8, 0x6F8000
	133 Move X8, [X8+1312]
	134 Move X19, X0
	135 Move X2, [X8]
	136 Move X1, X20
	137 Move X3, X31
	138 Call 0x25C88AC, X0, X1, X2
	139 Move X8, [X21]
	140 Move X8, [X8+184]
	141 Move [X8+8], X19
	142 Move X8, 0x6F8000
	143 Move X8, [X8+1296]
	144 Move X2, [X8]
	145 Add X0, X31, 704
	146 Move X1, X19
	147 Call 0x224207C, X0, X1
	148 Add X0, X31, 704
	149 Move X1, X31
	150 Call RenderGraphBuilder.Dispose, X0
	151 Add X31, X31, 736
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X30, [X31+16]
	159 Move X25, [X31+24]
	160 Move X29, [X31+80]
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X19, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X19
	170 Call 0x3EB2AD0
	171 Move X20, [X0]
	172 Call 0x3EB2AE0
	173 Add X0, X31, 704
	174 Move X1, X31
	175 Call RenderGraphBuilder.Dispose, X0
	176 Compare X20, 0
	177 JumpIfEqual {151}
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Move X20, X31
	181 Move X19, X0
	182 Add X0, X31, 704
	183 Move X1, X31
	184 Call RenderGraphBuilder.Dispose, X0
	185 Compare X20, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X19
	188 Call 0x1D2D690
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A5FBE8 ADRP X0, 0x6F7000
	0x03A5FBEC LDR X0, [X0 + 0x5C8]
	0x03A5FBF0 BL 0x1C16CF4
	0x03A5FBF4 ADRP X0, 0x6F7000
	0x03A5FBF8 LDR X0, [X0 + 0x5D0]
	0x03A5FBFC BL 0x1C16CF4
	0x03A5FC00 ADRP X0, 0x6F7000
	0x03A5FC04 LDR X0, [X0 + 0x5D8]
	0x03A5FC08 BL 0x1C16CF4
	0x03A5FC0C ADRP X0, 0x6F7000
	0x03A5FC10 LDR X0, [X0 + 0x5E0]
	0x03A5FC14 BL 0x1C16CF4
	0x03A5FC18 ADRP X0, 0x6F7000
	0x03A5FC1C LDR X0, [X0 + 0x5E8]
	0x03A5FC20 BL 0x1C16CF4
	0x03A5FC24 ADRP X0, 0x6F7000
	0x03A5FC28 LDR X0, [X0 + 0x5F0]
	0x03A5FC2C BL 0x1C16CF4
	0x03A5FC30 ADRP X0, 0x6F7000
	0x03A5FC34 LDR X0, [X0 + 0x5F8]
	0x03A5FC38 BL 0x1C16CF4
	0x03A5FC3C ADRP X0, 0x6F6000
	0x03A5FC40 LDR X0, [X0 + 0xF90]
	0x03A5FC44 BL 0x1C16CF4
	0x03A5FC48 ADRP X0, 0x6F7000
	0x03A5FC4C LDR X0, [X0 + 0x600]
	0x03A5FC50 BL 0x1C16CF4
	0x03A5FC54 MOVZ W8, 0x1
	0x03A5FC58 STRB W8, [X21 + 0x252]
	0x03A5FC5C MOVI V0.2D, 0x0
	0x03A5FC60 STR X31, [X31 + 0x190]
	0x03A5FC64 STR W31, [X31 + 0x160]
	0x03A5FC68 STR W31, [X31 + 0x120]
	0x03A5FC6C STP V0, V0, [X31 + 0x170]
	0x03A5FC70 STP V0, V0, [X31 + 0x140]
	0x03A5FC74 STR V0, [X31 + 0x13]
	0x03A5FC78 STP V0, V0, [X31 + 0x100]
	0x03A5FC7C STR V0, [X31 + 0xF]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x984000
	005 Move X20, 0x695000
	006 Move W8, [X19+567]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x6F8000
	013 Move X0, [X0+1248]
	014 Call 0x1C17CF4
	015 Move X0, 0x695000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0x6F8000
	019 Move X0, [X0+1336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+567], W8
	023 Move X0, [X20]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {44}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {45}
	031 Move X8, 0x6F8000
	032 Move X8, [X8+1336]
	033 Move X9, 0x6F8000
	034 Move X8, [X8]
	035 Move X9, [X9+1248]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move [X0+32], X8
	039 Move X8, [X9]
	040 Move X8, [X8+184]
	041 Move [X8], X0
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20
	045 Call 0x1C17F28

